
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	sub	sp, sp, #20
       c:	str	r0, [fp, #-16]
      10:	ldr	r3, [fp, #-16]
      14:	cmp	r3, #0
      18:	beq	2c <coda_inflateResetKeep+0x2c>
      1c:	ldr	r3, [fp, #-16]
      20:	ldr	r3, [r3, #28]
      24:	cmp	r3, #0
      28:	bne	34 <coda_inflateResetKeep+0x34>
      2c:	mvn	r3, #1
      30:	b	14c <coda_inflateResetKeep+0x14c>
      34:	ldr	r3, [fp, #-16]
      38:	ldr	r3, [r3, #28]
      3c:	str	r3, [fp, #-8]
      40:	ldr	r3, [fp, #-8]
      44:	mov	r2, #0
      48:	str	r2, [r3, #28]
      4c:	ldr	r3, [fp, #-8]
      50:	ldr	r2, [r3, #28]
      54:	ldr	r3, [fp, #-16]
      58:	str	r2, [r3, #20]
      5c:	ldr	r3, [fp, #-16]
      60:	ldr	r2, [r3, #20]
      64:	ldr	r3, [fp, #-16]
      68:	str	r2, [r3, #8]
      6c:	ldr	r3, [fp, #-16]
      70:	mov	r2, #0
      74:	str	r2, [r3, #24]
      78:	ldr	r3, [fp, #-8]
      7c:	ldr	r3, [r3, #8]
      80:	cmp	r3, #0
      84:	beq	9c <coda_inflateResetKeep+0x9c>
      88:	ldr	r3, [fp, #-8]
      8c:	ldr	r3, [r3, #8]
      90:	and	r2, r3, #1
      94:	ldr	r3, [fp, #-16]
      98:	str	r2, [r3, #48]	; 0x30
      9c:	ldr	r3, [fp, #-8]
      a0:	mov	r2, #0
      a4:	str	r2, [r3]
      a8:	ldr	r3, [fp, #-8]
      ac:	mov	r2, #0
      b0:	str	r2, [r3, #4]
      b4:	ldr	r3, [fp, #-8]
      b8:	mov	r2, #0
      bc:	str	r2, [r3, #12]
      c0:	ldr	r3, [fp, #-8]
      c4:	mov	r2, #32768	; 0x8000
      c8:	str	r2, [r3, #20]
      cc:	ldr	r3, [fp, #-8]
      d0:	mov	r2, #0
      d4:	str	r2, [r3, #32]
      d8:	ldr	r3, [fp, #-8]
      dc:	mov	r2, #0
      e0:	str	r2, [r3, #56]	; 0x38
      e4:	ldr	r3, [fp, #-8]
      e8:	mov	r2, #0
      ec:	str	r2, [r3, #60]	; 0x3c
      f0:	ldr	r3, [fp, #-8]
      f4:	add	r2, r3, #1328	; 0x530
      f8:	ldr	r3, [fp, #-8]
      fc:	str	r2, [r3, #108]	; 0x6c
     100:	ldr	r3, [fp, #-8]
     104:	ldr	r2, [r3, #108]	; 0x6c
     108:	ldr	r3, [fp, #-8]
     10c:	str	r2, [r3, #80]	; 0x50
     110:	ldr	r3, [fp, #-8]
     114:	ldr	r2, [r3, #80]	; 0x50
     118:	ldr	r3, [fp, #-8]
     11c:	str	r2, [r3, #76]	; 0x4c
     120:	ldr	r3, [fp, #-8]
     124:	add	r3, r3, #4096	; 0x1000
     128:	mov	r2, r3
     12c:	mov	r3, #1
     130:	str	r3, [r2, #3008]	; 0xbc0
     134:	ldr	r3, [fp, #-8]
     138:	add	r3, r3, #4096	; 0x1000
     13c:	mov	r2, r3
     140:	mvn	r3, #0
     144:	str	r3, [r2, #3012]	; 0xbc4
     148:	mov	r3, #0
     14c:	mov	r0, r3
     150:	add	sp, fp, #0
     154:	pop	{fp}		; (ldr fp, [sp], #4)
     158:	bx	lr

0000015c <coda_inflateReset>:
     15c:	str	fp, [sp, #-8]!
     160:	str	lr, [sp, #4]
     164:	add	fp, sp, #4
     168:	sub	sp, sp, #16
     16c:	str	r0, [fp, #-16]
     170:	ldr	r3, [fp, #-16]
     174:	cmp	r3, #0
     178:	beq	18c <coda_inflateReset+0x30>
     17c:	ldr	r3, [fp, #-16]
     180:	ldr	r3, [r3, #28]
     184:	cmp	r3, #0
     188:	bne	194 <coda_inflateReset+0x38>
     18c:	mvn	r3, #1
     190:	b	1d0 <coda_inflateReset+0x74>
     194:	ldr	r3, [fp, #-16]
     198:	ldr	r3, [r3, #28]
     19c:	str	r3, [fp, #-8]
     1a0:	ldr	r3, [fp, #-8]
     1a4:	mov	r2, #0
     1a8:	str	r2, [r3, #40]	; 0x28
     1ac:	ldr	r3, [fp, #-8]
     1b0:	mov	r2, #0
     1b4:	str	r2, [r3, #44]	; 0x2c
     1b8:	ldr	r3, [fp, #-8]
     1bc:	mov	r2, #0
     1c0:	str	r2, [r3, #48]	; 0x30
     1c4:	ldr	r0, [fp, #-16]
     1c8:	bl	0 <coda_inflateResetKeep>
     1cc:	mov	r3, r0
     1d0:	mov	r0, r3
     1d4:	sub	sp, fp, #4
     1d8:	ldr	fp, [sp]
     1dc:	add	sp, sp, #4
     1e0:	pop	{pc}		; (ldr pc, [sp], #4)

000001e4 <coda_inflateReset2>:
     1e4:	str	fp, [sp, #-8]!
     1e8:	str	lr, [sp, #4]
     1ec:	add	fp, sp, #4
     1f0:	sub	sp, sp, #16
     1f4:	str	r0, [fp, #-16]
     1f8:	str	r1, [fp, #-20]	; 0xffffffec
     1fc:	ldr	r3, [fp, #-16]
     200:	cmp	r3, #0
     204:	beq	218 <coda_inflateReset2+0x34>
     208:	ldr	r3, [fp, #-16]
     20c:	ldr	r3, [r3, #28]
     210:	cmp	r3, #0
     214:	bne	220 <coda_inflateReset2+0x3c>
     218:	mvn	r3, #1
     21c:	b	318 <coda_inflateReset2+0x134>
     220:	ldr	r3, [fp, #-16]
     224:	ldr	r3, [r3, #28]
     228:	str	r3, [fp, #-12]
     22c:	ldr	r3, [fp, #-20]	; 0xffffffec
     230:	cmp	r3, #0
     234:	bge	250 <coda_inflateReset2+0x6c>
     238:	mov	r3, #0
     23c:	str	r3, [fp, #-8]
     240:	ldr	r3, [fp, #-20]	; 0xffffffec
     244:	rsb	r3, r3, #0
     248:	str	r3, [fp, #-20]	; 0xffffffec
     24c:	b	278 <coda_inflateReset2+0x94>
     250:	ldr	r3, [fp, #-20]	; 0xffffffec
     254:	asr	r3, r3, #4
     258:	add	r3, r3, #1
     25c:	str	r3, [fp, #-8]
     260:	ldr	r3, [fp, #-20]	; 0xffffffec
     264:	cmp	r3, #47	; 0x2f
     268:	bgt	278 <coda_inflateReset2+0x94>
     26c:	ldr	r3, [fp, #-20]	; 0xffffffec
     270:	and	r3, r3, #15
     274:	str	r3, [fp, #-20]	; 0xffffffec
     278:	ldr	r3, [fp, #-20]	; 0xffffffec
     27c:	cmp	r3, #0
     280:	beq	2a4 <coda_inflateReset2+0xc0>
     284:	ldr	r3, [fp, #-20]	; 0xffffffec
     288:	cmp	r3, #7
     28c:	ble	29c <coda_inflateReset2+0xb8>
     290:	ldr	r3, [fp, #-20]	; 0xffffffec
     294:	cmp	r3, #15
     298:	ble	2a4 <coda_inflateReset2+0xc0>
     29c:	mvn	r3, #1
     2a0:	b	318 <coda_inflateReset2+0x134>
     2a4:	ldr	r3, [fp, #-12]
     2a8:	ldr	r3, [r3, #52]	; 0x34
     2ac:	cmp	r3, #0
     2b0:	beq	2f4 <coda_inflateReset2+0x110>
     2b4:	ldr	r3, [fp, #-12]
     2b8:	ldr	r2, [r3, #36]	; 0x24
     2bc:	ldr	r3, [fp, #-20]	; 0xffffffec
     2c0:	cmp	r2, r3
     2c4:	beq	2f4 <coda_inflateReset2+0x110>
     2c8:	ldr	r3, [fp, #-16]
     2cc:	ldr	r3, [r3, #36]	; 0x24
     2d0:	ldr	r2, [fp, #-16]
     2d4:	ldr	r0, [r2, #40]	; 0x28
     2d8:	ldr	r2, [fp, #-12]
     2dc:	ldr	r2, [r2, #52]	; 0x34
     2e0:	mov	r1, r2
     2e4:	blx	r3
     2e8:	ldr	r3, [fp, #-12]
     2ec:	mov	r2, #0
     2f0:	str	r2, [r3, #52]	; 0x34
     2f4:	ldr	r3, [fp, #-12]
     2f8:	ldr	r2, [fp, #-8]
     2fc:	str	r2, [r3, #8]
     300:	ldr	r2, [fp, #-20]	; 0xffffffec
     304:	ldr	r3, [fp, #-12]
     308:	str	r2, [r3, #36]	; 0x24
     30c:	ldr	r0, [fp, #-16]
     310:	bl	15c <coda_inflateReset>
     314:	mov	r3, r0
     318:	mov	r0, r3
     31c:	sub	sp, fp, #4
     320:	ldr	fp, [sp]
     324:	add	sp, sp, #4
     328:	pop	{pc}		; (ldr pc, [sp], #4)

0000032c <coda_inflateInit2_>:
     32c:	str	fp, [sp, #-8]!
     330:	str	lr, [sp, #4]
     334:	add	fp, sp, #4
     338:	sub	sp, sp, #24
     33c:	str	r0, [fp, #-16]
     340:	str	r1, [fp, #-20]	; 0xffffffec
     344:	str	r2, [fp, #-24]	; 0xffffffe8
     348:	str	r3, [fp, #-28]	; 0xffffffe4
     34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     350:	cmp	r3, #0
     354:	beq	378 <coda_inflateInit2_+0x4c>
     358:	ldr	r3, [fp, #-24]	; 0xffffffe8
     35c:	ldrb	r3, [r3]
     360:	mov	r2, #49	; 0x31
     364:	cmp	r3, r2
     368:	bne	378 <coda_inflateInit2_+0x4c>
     36c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     370:	cmp	r3, #56	; 0x38
     374:	beq	380 <coda_inflateInit2_+0x54>
     378:	mvn	r3, #5
     37c:	b	480 <coda_inflateInit2_+0x154>
     380:	ldr	r3, [fp, #-16]
     384:	cmp	r3, #0
     388:	bne	394 <coda_inflateInit2_+0x68>
     38c:	mvn	r3, #1
     390:	b	480 <coda_inflateInit2_+0x154>
     394:	ldr	r3, [fp, #-16]
     398:	mov	r2, #0
     39c:	str	r2, [r3, #24]
     3a0:	ldr	r3, [fp, #-16]
     3a4:	ldr	r3, [r3, #32]
     3a8:	cmp	r3, #0
     3ac:	bne	3cc <coda_inflateInit2_+0xa0>
     3b0:	ldr	r2, [fp, #-16]
     3b4:	movw	r3, #0
     3b8:	movt	r3, #0
     3bc:	str	r3, [r2, #32]
     3c0:	ldr	r3, [fp, #-16]
     3c4:	mov	r2, #0
     3c8:	str	r2, [r3, #40]	; 0x28
     3cc:	ldr	r3, [fp, #-16]
     3d0:	ldr	r3, [r3, #36]	; 0x24
     3d4:	cmp	r3, #0
     3d8:	bne	3ec <coda_inflateInit2_+0xc0>
     3dc:	ldr	r2, [fp, #-16]
     3e0:	movw	r3, #0
     3e4:	movt	r3, #0
     3e8:	str	r3, [r2, #36]	; 0x24
     3ec:	ldr	r3, [fp, #-16]
     3f0:	ldr	r3, [r3, #32]
     3f4:	ldr	r2, [fp, #-16]
     3f8:	ldr	r0, [r2, #40]	; 0x28
     3fc:	movw	r2, #7116	; 0x1bcc
     400:	mov	r1, #1
     404:	blx	r3
     408:	str	r0, [fp, #-8]
     40c:	ldr	r3, [fp, #-8]
     410:	cmp	r3, #0
     414:	bne	420 <coda_inflateInit2_+0xf4>
     418:	mvn	r3, #3
     41c:	b	480 <coda_inflateInit2_+0x154>
     420:	ldr	r3, [fp, #-16]
     424:	ldr	r2, [fp, #-8]
     428:	str	r2, [r3, #28]
     42c:	ldr	r3, [fp, #-8]
     430:	mov	r2, #0
     434:	str	r2, [r3, #52]	; 0x34
     438:	ldr	r1, [fp, #-20]	; 0xffffffec
     43c:	ldr	r0, [fp, #-16]
     440:	bl	1e4 <coda_inflateReset2>
     444:	str	r0, [fp, #-12]
     448:	ldr	r3, [fp, #-12]
     44c:	cmp	r3, #0
     450:	beq	47c <coda_inflateInit2_+0x150>
     454:	ldr	r3, [fp, #-16]
     458:	ldr	r3, [r3, #36]	; 0x24
     45c:	ldr	r2, [fp, #-16]
     460:	ldr	r2, [r2, #40]	; 0x28
     464:	ldr	r1, [fp, #-8]
     468:	mov	r0, r2
     46c:	blx	r3
     470:	ldr	r3, [fp, #-16]
     474:	mov	r2, #0
     478:	str	r2, [r3, #28]
     47c:	ldr	r3, [fp, #-12]
     480:	mov	r0, r3
     484:	sub	sp, fp, #4
     488:	ldr	fp, [sp]
     48c:	add	sp, sp, #4
     490:	pop	{pc}		; (ldr pc, [sp], #4)

00000494 <coda_inflateInit_>:
     494:	str	fp, [sp, #-8]!
     498:	str	lr, [sp, #4]
     49c:	add	fp, sp, #4
     4a0:	sub	sp, sp, #16
     4a4:	str	r0, [fp, #-8]
     4a8:	str	r1, [fp, #-12]
     4ac:	str	r2, [fp, #-16]
     4b0:	ldr	r3, [fp, #-16]
     4b4:	ldr	r2, [fp, #-12]
     4b8:	mov	r1, #15
     4bc:	ldr	r0, [fp, #-8]
     4c0:	bl	32c <coda_inflateInit2_>
     4c4:	mov	r3, r0
     4c8:	mov	r0, r3
     4cc:	sub	sp, fp, #4
     4d0:	ldr	fp, [sp]
     4d4:	add	sp, sp, #4
     4d8:	pop	{pc}		; (ldr pc, [sp], #4)

000004dc <coda_inflatePrime>:
     4dc:	push	{fp}		; (str fp, [sp, #-4]!)
     4e0:	add	fp, sp, #0
     4e4:	sub	sp, sp, #28
     4e8:	str	r0, [fp, #-16]
     4ec:	str	r1, [fp, #-20]	; 0xffffffec
     4f0:	str	r2, [fp, #-24]	; 0xffffffe8
     4f4:	ldr	r3, [fp, #-16]
     4f8:	cmp	r3, #0
     4fc:	beq	510 <coda_inflatePrime+0x34>
     500:	ldr	r3, [fp, #-16]
     504:	ldr	r3, [r3, #28]
     508:	cmp	r3, #0
     50c:	bne	518 <coda_inflatePrime+0x3c>
     510:	mvn	r3, #1
     514:	b	5d8 <coda_inflatePrime+0xfc>
     518:	ldr	r3, [fp, #-16]
     51c:	ldr	r3, [r3, #28]
     520:	str	r3, [fp, #-8]
     524:	ldr	r3, [fp, #-20]	; 0xffffffec
     528:	cmp	r3, #0
     52c:	bge	550 <coda_inflatePrime+0x74>
     530:	ldr	r3, [fp, #-8]
     534:	mov	r2, #0
     538:	str	r2, [r3, #56]	; 0x38
     53c:	ldr	r3, [fp, #-8]
     540:	mov	r2, #0
     544:	str	r2, [r3, #60]	; 0x3c
     548:	mov	r3, #0
     54c:	b	5d8 <coda_inflatePrime+0xfc>
     550:	ldr	r3, [fp, #-20]	; 0xffffffec
     554:	cmp	r3, #16
     558:	bgt	574 <coda_inflatePrime+0x98>
     55c:	ldr	r3, [fp, #-8]
     560:	ldr	r2, [r3, #60]	; 0x3c
     564:	ldr	r3, [fp, #-20]	; 0xffffffec
     568:	add	r3, r2, r3
     56c:	cmp	r3, #32
     570:	bls	57c <coda_inflatePrime+0xa0>
     574:	mvn	r3, #1
     578:	b	5d8 <coda_inflatePrime+0xfc>
     57c:	mov	r2, #1
     580:	ldr	r3, [fp, #-20]	; 0xffffffec
     584:	lsl	r3, r2, r3
     588:	sub	r3, r3, #1
     58c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     590:	and	r3, r3, r2
     594:	str	r3, [fp, #-24]	; 0xffffffe8
     598:	ldr	r3, [fp, #-8]
     59c:	ldr	r3, [r3, #56]	; 0x38
     5a0:	ldr	r2, [fp, #-8]
     5a4:	ldr	r2, [r2, #60]	; 0x3c
     5a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     5ac:	lsl	r2, r1, r2
     5b0:	add	r2, r3, r2
     5b4:	ldr	r3, [fp, #-8]
     5b8:	str	r2, [r3, #56]	; 0x38
     5bc:	ldr	r3, [fp, #-8]
     5c0:	ldr	r2, [r3, #60]	; 0x3c
     5c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     5c8:	add	r2, r2, r3
     5cc:	ldr	r3, [fp, #-8]
     5d0:	str	r2, [r3, #60]	; 0x3c
     5d4:	mov	r3, #0
     5d8:	mov	r0, r3
     5dc:	add	sp, fp, #0
     5e0:	pop	{fp}		; (ldr fp, [sp], #4)
     5e4:	bx	lr

000005e8 <fixedtables>:
     5e8:	push	{fp}		; (str fp, [sp, #-4]!)
     5ec:	add	fp, sp, #0
     5f0:	sub	sp, sp, #12
     5f4:	str	r0, [fp, #-8]
     5f8:	ldr	r2, [fp, #-8]
     5fc:	movw	r3, #0
     600:	movt	r3, #0
     604:	str	r3, [r2, #76]	; 0x4c
     608:	ldr	r3, [fp, #-8]
     60c:	mov	r2, #9
     610:	str	r2, [r3, #84]	; 0x54
     614:	ldr	r2, [fp, #-8]
     618:	movw	r3, #0
     61c:	movt	r3, #0
     620:	str	r3, [r2, #80]	; 0x50
     624:	ldr	r3, [fp, #-8]
     628:	mov	r2, #5
     62c:	str	r2, [r3, #88]	; 0x58
     630:	nop	{0}
     634:	add	sp, fp, #0
     638:	pop	{fp}		; (ldr fp, [sp], #4)
     63c:	bx	lr

00000640 <updatewindow>:
     640:	str	fp, [sp, #-8]!
     644:	str	lr, [sp, #4]
     648:	add	fp, sp, #4
     64c:	sub	sp, sp, #24
     650:	str	r0, [fp, #-16]
     654:	str	r1, [fp, #-20]	; 0xffffffec
     658:	str	r2, [fp, #-24]	; 0xffffffe8
     65c:	ldr	r3, [fp, #-16]
     660:	ldr	r3, [r3, #28]
     664:	str	r3, [fp, #-12]
     668:	ldr	r3, [fp, #-12]
     66c:	ldr	r3, [r3, #52]	; 0x34
     670:	cmp	r3, #0
     674:	bne	6c4 <updatewindow+0x84>
     678:	ldr	r3, [fp, #-16]
     67c:	ldr	r3, [r3, #32]
     680:	ldr	r2, [fp, #-16]
     684:	ldr	r0, [r2, #40]	; 0x28
     688:	ldr	r2, [fp, #-12]
     68c:	ldr	r2, [r2, #36]	; 0x24
     690:	mov	r1, #1
     694:	lsl	r1, r1, r2
     698:	mov	r2, #1
     69c:	blx	r3
     6a0:	mov	r2, r0
     6a4:	ldr	r3, [fp, #-12]
     6a8:	str	r2, [r3, #52]	; 0x34
     6ac:	ldr	r3, [fp, #-12]
     6b0:	ldr	r3, [r3, #52]	; 0x34
     6b4:	cmp	r3, #0
     6b8:	bne	6c4 <updatewindow+0x84>
     6bc:	mov	r3, #1
     6c0:	b	894 <updatewindow+0x254>
     6c4:	ldr	r3, [fp, #-12]
     6c8:	ldr	r3, [r3, #40]	; 0x28
     6cc:	cmp	r3, #0
     6d0:	bne	704 <updatewindow+0xc4>
     6d4:	ldr	r3, [fp, #-12]
     6d8:	ldr	r3, [r3, #36]	; 0x24
     6dc:	mov	r2, #1
     6e0:	lsl	r2, r2, r3
     6e4:	ldr	r3, [fp, #-12]
     6e8:	str	r2, [r3, #40]	; 0x28
     6ec:	ldr	r3, [fp, #-12]
     6f0:	mov	r2, #0
     6f4:	str	r2, [r3, #48]	; 0x30
     6f8:	ldr	r3, [fp, #-12]
     6fc:	mov	r2, #0
     700:	str	r2, [r3, #44]	; 0x2c
     704:	ldr	r3, [fp, #-12]
     708:	ldr	r3, [r3, #40]	; 0x28
     70c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     710:	cmp	r2, r3
     714:	bcc	764 <updatewindow+0x124>
     718:	ldr	r3, [fp, #-12]
     71c:	ldr	r0, [r3, #52]	; 0x34
     720:	ldr	r3, [fp, #-12]
     724:	ldr	r3, [r3, #40]	; 0x28
     728:	rsb	r3, r3, #0
     72c:	ldr	r2, [fp, #-20]	; 0xffffffec
     730:	add	r1, r2, r3
     734:	ldr	r3, [fp, #-12]
     738:	ldr	r3, [r3, #40]	; 0x28
     73c:	mov	r2, r3
     740:	bl	0 <memcpy>
     744:	ldr	r3, [fp, #-12]
     748:	mov	r2, #0
     74c:	str	r2, [r3, #48]	; 0x30
     750:	ldr	r3, [fp, #-12]
     754:	ldr	r2, [r3, #40]	; 0x28
     758:	ldr	r3, [fp, #-12]
     75c:	str	r2, [r3, #44]	; 0x2c
     760:	b	890 <updatewindow+0x250>
     764:	ldr	r3, [fp, #-12]
     768:	ldr	r2, [r3, #40]	; 0x28
     76c:	ldr	r3, [fp, #-12]
     770:	ldr	r3, [r3, #48]	; 0x30
     774:	sub	r3, r2, r3
     778:	str	r3, [fp, #-8]
     77c:	ldr	r2, [fp, #-8]
     780:	ldr	r3, [fp, #-24]	; 0xffffffe8
     784:	cmp	r2, r3
     788:	bls	794 <updatewindow+0x154>
     78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     790:	str	r3, [fp, #-8]
     794:	ldr	r3, [fp, #-12]
     798:	ldr	r2, [r3, #52]	; 0x34
     79c:	ldr	r3, [fp, #-12]
     7a0:	ldr	r3, [r3, #48]	; 0x30
     7a4:	add	r0, r2, r3
     7a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7ac:	rsb	r3, r3, #0
     7b0:	ldr	r2, [fp, #-20]	; 0xffffffec
     7b4:	add	r3, r2, r3
     7b8:	ldr	r2, [fp, #-8]
     7bc:	mov	r1, r3
     7c0:	bl	0 <memcpy>
     7c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7c8:	ldr	r3, [fp, #-8]
     7cc:	sub	r3, r2, r3
     7d0:	str	r3, [fp, #-24]	; 0xffffffe8
     7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7d8:	cmp	r3, #0
     7dc:	beq	824 <updatewindow+0x1e4>
     7e0:	ldr	r3, [fp, #-12]
     7e4:	ldr	r0, [r3, #52]	; 0x34
     7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7ec:	rsb	r3, r3, #0
     7f0:	ldr	r2, [fp, #-20]	; 0xffffffec
     7f4:	add	r3, r2, r3
     7f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7fc:	mov	r1, r3
     800:	bl	0 <memcpy>
     804:	ldr	r3, [fp, #-12]
     808:	ldr	r2, [fp, #-24]	; 0xffffffe8
     80c:	str	r2, [r3, #48]	; 0x30
     810:	ldr	r3, [fp, #-12]
     814:	ldr	r2, [r3, #40]	; 0x28
     818:	ldr	r3, [fp, #-12]
     81c:	str	r2, [r3, #44]	; 0x2c
     820:	b	890 <updatewindow+0x250>
     824:	ldr	r3, [fp, #-12]
     828:	ldr	r2, [r3, #48]	; 0x30
     82c:	ldr	r3, [fp, #-8]
     830:	add	r2, r2, r3
     834:	ldr	r3, [fp, #-12]
     838:	str	r2, [r3, #48]	; 0x30
     83c:	ldr	r3, [fp, #-12]
     840:	ldr	r2, [r3, #48]	; 0x30
     844:	ldr	r3, [fp, #-12]
     848:	ldr	r3, [r3, #40]	; 0x28
     84c:	cmp	r2, r3
     850:	bne	860 <updatewindow+0x220>
     854:	ldr	r3, [fp, #-12]
     858:	mov	r2, #0
     85c:	str	r2, [r3, #48]	; 0x30
     860:	ldr	r3, [fp, #-12]
     864:	ldr	r2, [r3, #44]	; 0x2c
     868:	ldr	r3, [fp, #-12]
     86c:	ldr	r3, [r3, #40]	; 0x28
     870:	cmp	r2, r3
     874:	bcs	890 <updatewindow+0x250>
     878:	ldr	r3, [fp, #-12]
     87c:	ldr	r2, [r3, #44]	; 0x2c
     880:	ldr	r3, [fp, #-8]
     884:	add	r2, r2, r3
     888:	ldr	r3, [fp, #-12]
     88c:	str	r2, [r3, #44]	; 0x2c
     890:	mov	r3, #0
     894:	mov	r0, r3
     898:	sub	sp, fp, #4
     89c:	ldr	fp, [sp]
     8a0:	add	sp, sp, #4
     8a4:	pop	{pc}		; (ldr pc, [sp], #4)

000008a8 <coda_inflate>:
     8a8:	str	fp, [sp, #-8]!
     8ac:	str	lr, [sp, #4]
     8b0:	add	fp, sp, #4
     8b4:	sub	sp, sp, #80	; 0x50
     8b8:	str	r0, [fp, #-72]	; 0xffffffb8
     8bc:	str	r1, [fp, #-76]	; 0xffffffb4
     8c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8c4:	cmp	r3, #0
     8c8:	beq	90c <coda_inflate+0x64>
     8cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8d0:	ldr	r3, [r3, #28]
     8d4:	cmp	r3, #0
     8d8:	beq	90c <coda_inflate+0x64>
     8dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8e0:	ldr	r3, [r3, #12]
     8e4:	cmp	r3, #0
     8e8:	beq	90c <coda_inflate+0x64>
     8ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8f0:	ldr	r3, [r3]
     8f4:	cmp	r3, #0
     8f8:	bne	914 <coda_inflate+0x6c>
     8fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     900:	ldr	r3, [r3, #4]
     904:	cmp	r3, #0
     908:	beq	914 <coda_inflate+0x6c>
     90c:	mvn	r3, #1
     910:	b	35f8 <coda_inflate+0x2d50>
     914:	ldr	r3, [fp, #-72]	; 0xffffffb8
     918:	ldr	r3, [r3, #28]
     91c:	str	r3, [fp, #-52]	; 0xffffffcc
     920:	ldr	r3, [fp, #-52]	; 0xffffffcc
     924:	ldr	r3, [r3]
     928:	cmp	r3, #11
     92c:	bne	93c <coda_inflate+0x94>
     930:	ldr	r3, [fp, #-52]	; 0xffffffcc
     934:	mov	r2, #12
     938:	str	r2, [r3]
     93c:	ldr	r3, [fp, #-72]	; 0xffffffb8
     940:	ldr	r3, [r3, #12]
     944:	str	r3, [fp, #-12]
     948:	ldr	r3, [fp, #-72]	; 0xffffffb8
     94c:	ldr	r3, [r3, #16]
     950:	str	r3, [fp, #-20]	; 0xffffffec
     954:	ldr	r3, [fp, #-72]	; 0xffffffb8
     958:	ldr	r3, [r3]
     95c:	str	r3, [fp, #-8]
     960:	ldr	r3, [fp, #-72]	; 0xffffffb8
     964:	ldr	r3, [r3, #4]
     968:	str	r3, [fp, #-16]
     96c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     970:	ldr	r3, [r3, #56]	; 0x38
     974:	str	r3, [fp, #-24]	; 0xffffffe8
     978:	ldr	r3, [fp, #-52]	; 0xffffffcc
     97c:	ldr	r3, [r3, #60]	; 0x3c
     980:	str	r3, [fp, #-28]	; 0xffffffe4
     984:	ldr	r3, [fp, #-16]
     988:	str	r3, [fp, #-56]	; 0xffffffc8
     98c:	ldr	r3, [fp, #-20]	; 0xffffffec
     990:	str	r3, [fp, #-32]	; 0xffffffe0
     994:	mov	r3, #0
     998:	str	r3, [fp, #-48]	; 0xffffffd0
     99c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     9a0:	ldr	r3, [r3]
     9a4:	cmp	r3, #30
     9a8:	ldrls	pc, [pc, r3, lsl #2]
     9ac:	b	3230 <coda_inflate+0x2988>
     9b0:	.word	0x00000a2c
     9b4:	.word	0x00000d60
     9b8:	.word	0x00000ecc
     9bc:	.word	0x00000fd8
     9c0:	.word	0x0000108c
     9c4:	.word	0x000011bc
     9c8:	.word	0x00001334
     9cc:	.word	0x000014a4
     9d0:	.word	0x00001608
     9d4:	.word	0x00001784
     9d8:	.word	0x000017f8
     9dc:	.word	0x00001890
     9e0:	.word	0x000018a8
     9e4:	.word	0x00001a28
     9e8:	.word	0x00001b1c
     9ec:	.word	0x00001b28
     9f0:	.word	0x00001c44
     9f4:	.word	0x00001df4
     9f8:	.word	0x0000234c
     9fc:	.word	0x00002504
     a00:	.word	0x00002510
     a04:	.word	0x000028cc
     a08:	.word	0x000029e4
     a0c:	.word	0x00002c50
     a10:	.word	0x00002d54
     a14:	.word	0x00002f2c
     a18:	.word	0x00002f70
     a1c:	.word	0x00003144
     a20:	.word	0x00003210
     a24:	.word	0x0000321c
     a28:	.word	0x00003228
     a2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a30:	ldr	r3, [r3, #8]
     a34:	cmp	r3, #0
     a38:	bne	a98 <coda_inflate+0x1f0>
     a3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a40:	mov	r2, #12
     a44:	str	r2, [r3]
     a48:	b	324c <coda_inflate+0x29a4>
     a4c:	ldr	r3, [fp, #-16]
     a50:	cmp	r3, #0
     a54:	beq	3250 <coda_inflate+0x29a8>
     a58:	ldr	r3, [fp, #-16]
     a5c:	sub	r3, r3, #1
     a60:	str	r3, [fp, #-16]
     a64:	ldr	r3, [fp, #-8]
     a68:	add	r2, r3, #1
     a6c:	str	r2, [fp, #-8]
     a70:	ldrb	r3, [r3]
     a74:	mov	r2, r3
     a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a7c:	lsl	r3, r2, r3
     a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a84:	add	r3, r2, r3
     a88:	str	r3, [fp, #-24]	; 0xffffffe8
     a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a90:	add	r3, r3, #8
     a94:	str	r3, [fp, #-28]	; 0xffffffe4
     a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a9c:	cmp	r3, #15
     aa0:	bls	a4c <coda_inflate+0x1a4>
     aa4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     aa8:	ldr	r3, [r3, #8]
     aac:	and	r3, r3, #2
     ab0:	cmp	r3, #0
     ab4:	beq	b44 <coda_inflate+0x29c>
     ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     abc:	movw	r2, #35615	; 0x8b1f
     ac0:	cmp	r3, r2
     ac4:	bne	b44 <coda_inflate+0x29c>
     ac8:	mov	r2, #0
     acc:	mov	r1, #0
     ad0:	mov	r0, #0
     ad4:	bl	0 <coda_crc32>
     ad8:	mov	r2, r0
     adc:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ae0:	str	r2, [r3, #24]
     ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ae8:	uxtb	r3, r3
     aec:	strb	r3, [fp, #-68]	; 0xffffffbc
     af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     af4:	lsr	r3, r3, #8
     af8:	uxtb	r3, r3
     afc:	strb	r3, [fp, #-67]	; 0xffffffbd
     b00:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b04:	ldr	r3, [r3, #24]
     b08:	sub	r1, fp, #68	; 0x44
     b0c:	mov	r2, #2
     b10:	mov	r0, r3
     b14:	bl	0 <coda_crc32>
     b18:	mov	r2, r0
     b1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b20:	str	r2, [r3, #24]
     b24:	mov	r3, #0
     b28:	str	r3, [fp, #-24]	; 0xffffffe8
     b2c:	mov	r3, #0
     b30:	str	r3, [fp, #-28]	; 0xffffffe4
     b34:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b38:	mov	r2, #1
     b3c:	str	r2, [r3]
     b40:	b	324c <coda_inflate+0x29a4>
     b44:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b48:	mov	r2, #0
     b4c:	str	r2, [r3, #16]
     b50:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b54:	ldr	r3, [r3, #32]
     b58:	cmp	r3, #0
     b5c:	beq	b70 <coda_inflate+0x2c8>
     b60:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b64:	ldr	r3, [r3, #32]
     b68:	mvn	r2, #0
     b6c:	str	r2, [r3, #48]	; 0x30
     b70:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b74:	ldr	r3, [r3, #8]
     b78:	and	r3, r3, #1
     b7c:	cmp	r3, #0
     b80:	beq	bd0 <coda_inflate+0x328>
     b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b88:	lsl	r3, r3, #8
     b8c:	uxth	r2, r3
     b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b94:	lsr	r3, r3, #8
     b98:	add	r1, r2, r3
     b9c:	movw	r3, #4229	; 0x1085
     ba0:	movt	r3, #2114	; 0x842
     ba4:	umull	r2, r3, r3, r1
     ba8:	sub	r2, r1, r3
     bac:	lsr	r2, r2, #1
     bb0:	add	r3, r3, r2
     bb4:	lsr	r2, r3, #4
     bb8:	mov	r3, r2
     bbc:	lsl	r3, r3, #5
     bc0:	sub	r3, r3, r2
     bc4:	sub	r2, r1, r3
     bc8:	cmp	r2, #0
     bcc:	beq	bf0 <coda_inflate+0x348>
     bd0:	ldr	r2, [fp, #-72]	; 0xffffffb8
     bd4:	movw	r3, #0
     bd8:	movt	r3, #0
     bdc:	str	r3, [r2, #24]
     be0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     be4:	mov	r2, #29
     be8:	str	r2, [r3]
     bec:	b	324c <coda_inflate+0x29a4>
     bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bf4:	and	r3, r3, #15
     bf8:	cmp	r3, #8
     bfc:	beq	c20 <coda_inflate+0x378>
     c00:	ldr	r2, [fp, #-72]	; 0xffffffb8
     c04:	movw	r3, #0
     c08:	movt	r3, #0
     c0c:	str	r3, [r2, #24]
     c10:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c14:	mov	r2, #29
     c18:	str	r2, [r3]
     c1c:	b	324c <coda_inflate+0x29a4>
     c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c24:	lsr	r3, r3, #4
     c28:	str	r3, [fp, #-24]	; 0xffffffe8
     c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c30:	sub	r3, r3, #4
     c34:	str	r3, [fp, #-28]	; 0xffffffe4
     c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c3c:	and	r3, r3, #15
     c40:	add	r3, r3, #8
     c44:	str	r3, [fp, #-44]	; 0xffffffd4
     c48:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c4c:	ldr	r3, [r3, #36]	; 0x24
     c50:	cmp	r3, #0
     c54:	bne	c68 <coda_inflate+0x3c0>
     c58:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c60:	str	r2, [r3, #36]	; 0x24
     c64:	b	c9c <coda_inflate+0x3f4>
     c68:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c6c:	ldr	r3, [r3, #36]	; 0x24
     c70:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c74:	cmp	r2, r3
     c78:	bls	c9c <coda_inflate+0x3f4>
     c7c:	ldr	r2, [fp, #-72]	; 0xffffffb8
     c80:	movw	r3, #0
     c84:	movt	r3, #0
     c88:	str	r3, [r2, #24]
     c8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c90:	mov	r2, #29
     c94:	str	r2, [r3]
     c98:	b	324c <coda_inflate+0x29a4>
     c9c:	mov	r2, #1
     ca0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ca4:	lsl	r2, r2, r3
     ca8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     cac:	str	r2, [r3, #20]
     cb0:	mov	r2, #0
     cb4:	mov	r1, #0
     cb8:	mov	r0, #0
     cbc:	bl	0 <coda_adler32>
     cc0:	mov	r2, r0
     cc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     cc8:	str	r2, [r3, #24]
     ccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
     cd0:	ldr	r2, [r3, #24]
     cd4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     cd8:	str	r2, [r3, #48]	; 0x30
     cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ce0:	and	r3, r3, #512	; 0x200
     ce4:	cmp	r3, #0
     ce8:	beq	cf4 <coda_inflate+0x44c>
     cec:	mov	r2, #9
     cf0:	b	cf8 <coda_inflate+0x450>
     cf4:	mov	r2, #11
     cf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     cfc:	str	r2, [r3]
     d00:	mov	r3, #0
     d04:	str	r3, [fp, #-24]	; 0xffffffe8
     d08:	mov	r3, #0
     d0c:	str	r3, [fp, #-28]	; 0xffffffe4
     d10:	b	324c <coda_inflate+0x29a4>
     d14:	ldr	r3, [fp, #-16]
     d18:	cmp	r3, #0
     d1c:	beq	3258 <coda_inflate+0x29b0>
     d20:	ldr	r3, [fp, #-16]
     d24:	sub	r3, r3, #1
     d28:	str	r3, [fp, #-16]
     d2c:	ldr	r3, [fp, #-8]
     d30:	add	r2, r3, #1
     d34:	str	r2, [fp, #-8]
     d38:	ldrb	r3, [r3]
     d3c:	mov	r2, r3
     d40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d44:	lsl	r3, r2, r3
     d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d4c:	add	r3, r2, r3
     d50:	str	r3, [fp, #-24]	; 0xffffffe8
     d54:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d58:	add	r3, r3, #8
     d5c:	str	r3, [fp, #-28]	; 0xffffffe4
     d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d64:	cmp	r3, #15
     d68:	bls	d14 <coda_inflate+0x46c>
     d6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d70:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d74:	str	r2, [r3, #16]
     d78:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d7c:	ldr	r3, [r3, #16]
     d80:	uxtb	r3, r3
     d84:	cmp	r3, #8
     d88:	beq	dac <coda_inflate+0x504>
     d8c:	ldr	r2, [fp, #-72]	; 0xffffffb8
     d90:	movw	r3, #0
     d94:	movt	r3, #0
     d98:	str	r3, [r2, #24]
     d9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     da0:	mov	r2, #29
     da4:	str	r2, [r3]
     da8:	b	324c <coda_inflate+0x29a4>
     dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
     db0:	ldr	r3, [r3, #16]
     db4:	and	r3, r3, #57344	; 0xe000
     db8:	cmp	r3, #0
     dbc:	beq	de0 <coda_inflate+0x538>
     dc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
     dc4:	movw	r3, #0
     dc8:	movt	r3, #0
     dcc:	str	r3, [r2, #24]
     dd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     dd4:	mov	r2, #29
     dd8:	str	r2, [r3]
     ddc:	b	324c <coda_inflate+0x29a4>
     de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     de4:	ldr	r3, [r3, #32]
     de8:	cmp	r3, #0
     dec:	beq	e0c <coda_inflate+0x564>
     df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     df4:	lsr	r3, r3, #8
     df8:	mov	r2, r3
     dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e00:	ldr	r3, [r3, #32]
     e04:	and	r2, r2, #1
     e08:	str	r2, [r3]
     e0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e10:	ldr	r3, [r3, #16]
     e14:	and	r3, r3, #512	; 0x200
     e18:	cmp	r3, #0
     e1c:	beq	e60 <coda_inflate+0x5b8>
     e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e24:	uxtb	r3, r3
     e28:	strb	r3, [fp, #-68]	; 0xffffffbc
     e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e30:	lsr	r3, r3, #8
     e34:	uxtb	r3, r3
     e38:	strb	r3, [fp, #-67]	; 0xffffffbd
     e3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e40:	ldr	r3, [r3, #24]
     e44:	sub	r1, fp, #68	; 0x44
     e48:	mov	r2, #2
     e4c:	mov	r0, r3
     e50:	bl	0 <coda_crc32>
     e54:	mov	r2, r0
     e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e5c:	str	r2, [r3, #24]
     e60:	mov	r3, #0
     e64:	str	r3, [fp, #-24]	; 0xffffffe8
     e68:	mov	r3, #0
     e6c:	str	r3, [fp, #-28]	; 0xffffffe4
     e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e74:	mov	r2, #2
     e78:	str	r2, [r3]
     e7c:	b	ecc <coda_inflate+0x624>
     e80:	ldr	r3, [fp, #-16]
     e84:	cmp	r3, #0
     e88:	beq	3260 <coda_inflate+0x29b8>
     e8c:	ldr	r3, [fp, #-16]
     e90:	sub	r3, r3, #1
     e94:	str	r3, [fp, #-16]
     e98:	ldr	r3, [fp, #-8]
     e9c:	add	r2, r3, #1
     ea0:	str	r2, [fp, #-8]
     ea4:	ldrb	r3, [r3]
     ea8:	mov	r2, r3
     eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     eb0:	lsl	r3, r2, r3
     eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     eb8:	add	r3, r2, r3
     ebc:	str	r3, [fp, #-24]	; 0xffffffe8
     ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ec4:	add	r3, r3, #8
     ec8:	str	r3, [fp, #-28]	; 0xffffffe4
     ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ed0:	cmp	r3, #31
     ed4:	bls	e80 <coda_inflate+0x5d8>
     ed8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     edc:	ldr	r3, [r3, #32]
     ee0:	cmp	r3, #0
     ee4:	beq	ef8 <coda_inflate+0x650>
     ee8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     eec:	ldr	r3, [r3, #32]
     ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ef4:	str	r2, [r3, #4]
     ef8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     efc:	ldr	r3, [r3, #16]
     f00:	and	r3, r3, #512	; 0x200
     f04:	cmp	r3, #0
     f08:	beq	f6c <coda_inflate+0x6c4>
     f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f10:	uxtb	r3, r3
     f14:	strb	r3, [fp, #-68]	; 0xffffffbc
     f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f1c:	lsr	r3, r3, #8
     f20:	uxtb	r3, r3
     f24:	strb	r3, [fp, #-67]	; 0xffffffbd
     f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f2c:	lsr	r3, r3, #16
     f30:	uxtb	r3, r3
     f34:	strb	r3, [fp, #-66]	; 0xffffffbe
     f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f3c:	lsr	r3, r3, #24
     f40:	uxtb	r3, r3
     f44:	strb	r3, [fp, #-65]	; 0xffffffbf
     f48:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f4c:	ldr	r3, [r3, #24]
     f50:	sub	r1, fp, #68	; 0x44
     f54:	mov	r2, #4
     f58:	mov	r0, r3
     f5c:	bl	0 <coda_crc32>
     f60:	mov	r2, r0
     f64:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f68:	str	r2, [r3, #24]
     f6c:	mov	r3, #0
     f70:	str	r3, [fp, #-24]	; 0xffffffe8
     f74:	mov	r3, #0
     f78:	str	r3, [fp, #-28]	; 0xffffffe4
     f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f80:	mov	r2, #3
     f84:	str	r2, [r3]
     f88:	b	fd8 <coda_inflate+0x730>
     f8c:	ldr	r3, [fp, #-16]
     f90:	cmp	r3, #0
     f94:	beq	3268 <coda_inflate+0x29c0>
     f98:	ldr	r3, [fp, #-16]
     f9c:	sub	r3, r3, #1
     fa0:	str	r3, [fp, #-16]
     fa4:	ldr	r3, [fp, #-8]
     fa8:	add	r2, r3, #1
     fac:	str	r2, [fp, #-8]
     fb0:	ldrb	r3, [r3]
     fb4:	mov	r2, r3
     fb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fbc:	lsl	r3, r2, r3
     fc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     fc4:	add	r3, r2, r3
     fc8:	str	r3, [fp, #-24]	; 0xffffffe8
     fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fd0:	add	r3, r3, #8
     fd4:	str	r3, [fp, #-28]	; 0xffffffe4
     fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fdc:	cmp	r3, #15
     fe0:	bls	f8c <coda_inflate+0x6e4>
     fe4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     fe8:	ldr	r3, [r3, #32]
     fec:	cmp	r3, #0
     ff0:	beq	101c <coda_inflate+0x774>
     ff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ffc:	ldr	r3, [r3, #32]
    1000:	uxtb	r2, r2
    1004:	str	r2, [r3, #8]
    1008:	ldr	r3, [fp, #-24]	; 0xffffffe8
    100c:	lsr	r2, r3, #8
    1010:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1014:	ldr	r3, [r3, #32]
    1018:	str	r2, [r3, #12]
    101c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1020:	ldr	r3, [r3, #16]
    1024:	and	r3, r3, #512	; 0x200
    1028:	cmp	r3, #0
    102c:	beq	1070 <coda_inflate+0x7c8>
    1030:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1034:	uxtb	r3, r3
    1038:	strb	r3, [fp, #-68]	; 0xffffffbc
    103c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1040:	lsr	r3, r3, #8
    1044:	uxtb	r3, r3
    1048:	strb	r3, [fp, #-67]	; 0xffffffbd
    104c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1050:	ldr	r3, [r3, #24]
    1054:	sub	r1, fp, #68	; 0x44
    1058:	mov	r2, #2
    105c:	mov	r0, r3
    1060:	bl	0 <coda_crc32>
    1064:	mov	r2, r0
    1068:	ldr	r3, [fp, #-52]	; 0xffffffcc
    106c:	str	r2, [r3, #24]
    1070:	mov	r3, #0
    1074:	str	r3, [fp, #-24]	; 0xffffffe8
    1078:	mov	r3, #0
    107c:	str	r3, [fp, #-28]	; 0xffffffe4
    1080:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1084:	mov	r2, #4
    1088:	str	r2, [r3]
    108c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1090:	ldr	r3, [r3, #16]
    1094:	and	r3, r3, #1024	; 0x400
    1098:	cmp	r3, #0
    109c:	beq	1190 <coda_inflate+0x8e8>
    10a0:	b	10f0 <coda_inflate+0x848>
    10a4:	ldr	r3, [fp, #-16]
    10a8:	cmp	r3, #0
    10ac:	beq	3270 <coda_inflate+0x29c8>
    10b0:	ldr	r3, [fp, #-16]
    10b4:	sub	r3, r3, #1
    10b8:	str	r3, [fp, #-16]
    10bc:	ldr	r3, [fp, #-8]
    10c0:	add	r2, r3, #1
    10c4:	str	r2, [fp, #-8]
    10c8:	ldrb	r3, [r3]
    10cc:	mov	r2, r3
    10d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10d4:	lsl	r3, r2, r3
    10d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10dc:	add	r3, r2, r3
    10e0:	str	r3, [fp, #-24]	; 0xffffffe8
    10e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10e8:	add	r3, r3, #8
    10ec:	str	r3, [fp, #-28]	; 0xffffffe4
    10f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10f4:	cmp	r3, #15
    10f8:	bls	10a4 <coda_inflate+0x7fc>
    10fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1100:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1104:	str	r2, [r3, #64]	; 0x40
    1108:	ldr	r3, [fp, #-52]	; 0xffffffcc
    110c:	ldr	r3, [r3, #32]
    1110:	cmp	r3, #0
    1114:	beq	1128 <coda_inflate+0x880>
    1118:	ldr	r3, [fp, #-52]	; 0xffffffcc
    111c:	ldr	r3, [r3, #32]
    1120:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1124:	str	r2, [r3, #20]
    1128:	ldr	r3, [fp, #-52]	; 0xffffffcc
    112c:	ldr	r3, [r3, #16]
    1130:	and	r3, r3, #512	; 0x200
    1134:	cmp	r3, #0
    1138:	beq	117c <coda_inflate+0x8d4>
    113c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1140:	uxtb	r3, r3
    1144:	strb	r3, [fp, #-68]	; 0xffffffbc
    1148:	ldr	r3, [fp, #-24]	; 0xffffffe8
    114c:	lsr	r3, r3, #8
    1150:	uxtb	r3, r3
    1154:	strb	r3, [fp, #-67]	; 0xffffffbd
    1158:	ldr	r3, [fp, #-52]	; 0xffffffcc
    115c:	ldr	r3, [r3, #24]
    1160:	sub	r1, fp, #68	; 0x44
    1164:	mov	r2, #2
    1168:	mov	r0, r3
    116c:	bl	0 <coda_crc32>
    1170:	mov	r2, r0
    1174:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1178:	str	r2, [r3, #24]
    117c:	mov	r3, #0
    1180:	str	r3, [fp, #-24]	; 0xffffffe8
    1184:	mov	r3, #0
    1188:	str	r3, [fp, #-28]	; 0xffffffe4
    118c:	b	11b0 <coda_inflate+0x908>
    1190:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1194:	ldr	r3, [r3, #32]
    1198:	cmp	r3, #0
    119c:	beq	11b0 <coda_inflate+0x908>
    11a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11a4:	ldr	r3, [r3, #32]
    11a8:	mov	r2, #0
    11ac:	str	r2, [r3, #16]
    11b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11b4:	mov	r2, #5
    11b8:	str	r2, [r3]
    11bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11c0:	ldr	r3, [r3, #16]
    11c4:	and	r3, r3, #1024	; 0x400
    11c8:	cmp	r3, #0
    11cc:	beq	131c <coda_inflate+0xa74>
    11d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11d4:	ldr	r3, [r3, #64]	; 0x40
    11d8:	str	r3, [fp, #-36]	; 0xffffffdc
    11dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    11e0:	ldr	r3, [fp, #-16]
    11e4:	cmp	r2, r3
    11e8:	bls	11f4 <coda_inflate+0x94c>
    11ec:	ldr	r3, [fp, #-16]
    11f0:	str	r3, [fp, #-36]	; 0xffffffdc
    11f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11f8:	cmp	r3, #0
    11fc:	beq	130c <coda_inflate+0xa64>
    1200:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1204:	ldr	r3, [r3, #32]
    1208:	cmp	r3, #0
    120c:	beq	129c <coda_inflate+0x9f4>
    1210:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1214:	ldr	r3, [r3, #32]
    1218:	ldr	r3, [r3, #16]
    121c:	cmp	r3, #0
    1220:	beq	129c <coda_inflate+0x9f4>
    1224:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1228:	ldr	r3, [r3, #32]
    122c:	ldr	r2, [r3, #20]
    1230:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1234:	ldr	r3, [r3, #64]	; 0x40
    1238:	sub	r3, r2, r3
    123c:	str	r3, [fp, #-44]	; 0xffffffd4
    1240:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1244:	ldr	r3, [r3, #32]
    1248:	ldr	r2, [r3, #16]
    124c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1250:	add	r0, r2, r3
    1254:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1258:	ldr	r3, [fp, #-36]	; 0xffffffdc
    125c:	add	r2, r2, r3
    1260:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1264:	ldr	r3, [r3, #32]
    1268:	ldr	r3, [r3, #24]
    126c:	cmp	r2, r3
    1270:	bls	128c <coda_inflate+0x9e4>
    1274:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1278:	ldr	r3, [r3, #32]
    127c:	ldr	r2, [r3, #24]
    1280:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1284:	sub	r3, r2, r3
    1288:	b	1290 <coda_inflate+0x9e8>
    128c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1290:	mov	r2, r3
    1294:	ldr	r1, [fp, #-8]
    1298:	bl	0 <memcpy>
    129c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12a0:	ldr	r3, [r3, #16]
    12a4:	and	r3, r3, #512	; 0x200
    12a8:	cmp	r3, #0
    12ac:	beq	12d4 <coda_inflate+0xa2c>
    12b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12b4:	ldr	r3, [r3, #24]
    12b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    12bc:	ldr	r1, [fp, #-8]
    12c0:	mov	r0, r3
    12c4:	bl	0 <coda_crc32>
    12c8:	mov	r2, r0
    12cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12d0:	str	r2, [r3, #24]
    12d4:	ldr	r2, [fp, #-16]
    12d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    12dc:	sub	r3, r2, r3
    12e0:	str	r3, [fp, #-16]
    12e4:	ldr	r2, [fp, #-8]
    12e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    12ec:	add	r3, r2, r3
    12f0:	str	r3, [fp, #-8]
    12f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12f8:	ldr	r2, [r3, #64]	; 0x40
    12fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1300:	sub	r2, r2, r3
    1304:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1308:	str	r2, [r3, #64]	; 0x40
    130c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1310:	ldr	r3, [r3, #64]	; 0x40
    1314:	cmp	r3, #0
    1318:	bne	3278 <coda_inflate+0x29d0>
    131c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1320:	mov	r2, #0
    1324:	str	r2, [r3, #64]	; 0x40
    1328:	ldr	r3, [fp, #-52]	; 0xffffffcc
    132c:	mov	r2, #6
    1330:	str	r2, [r3]
    1334:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1338:	ldr	r3, [r3, #16]
    133c:	and	r3, r3, #2048	; 0x800
    1340:	cmp	r3, #0
    1344:	beq	146c <coda_inflate+0xbc4>
    1348:	ldr	r3, [fp, #-16]
    134c:	cmp	r3, #0
    1350:	beq	3280 <coda_inflate+0x29d8>
    1354:	mov	r3, #0
    1358:	str	r3, [fp, #-36]	; 0xffffffdc
    135c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1360:	add	r2, r3, #1
    1364:	str	r2, [fp, #-36]	; 0xffffffdc
    1368:	ldr	r2, [fp, #-8]
    136c:	add	r3, r2, r3
    1370:	ldrb	r3, [r3]
    1374:	str	r3, [fp, #-44]	; 0xffffffd4
    1378:	ldr	r3, [fp, #-52]	; 0xffffffcc
    137c:	ldr	r3, [r3, #32]
    1380:	cmp	r3, #0
    1384:	beq	13e8 <coda_inflate+0xb40>
    1388:	ldr	r3, [fp, #-52]	; 0xffffffcc
    138c:	ldr	r3, [r3, #32]
    1390:	ldr	r3, [r3, #28]
    1394:	cmp	r3, #0
    1398:	beq	13e8 <coda_inflate+0xb40>
    139c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13a0:	ldr	r2, [r3, #64]	; 0x40
    13a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13a8:	ldr	r3, [r3, #32]
    13ac:	ldr	r3, [r3, #32]
    13b0:	cmp	r2, r3
    13b4:	bcs	13e8 <coda_inflate+0xb40>
    13b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13bc:	ldr	r3, [r3, #32]
    13c0:	ldr	r2, [r3, #28]
    13c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13c8:	ldr	r3, [r3, #64]	; 0x40
    13cc:	add	r0, r3, #1
    13d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    13d4:	str	r0, [r1, #64]	; 0x40
    13d8:	add	r3, r2, r3
    13dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    13e0:	uxtb	r2, r2
    13e4:	strb	r2, [r3]
    13e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    13ec:	cmp	r3, #0
    13f0:	beq	1404 <coda_inflate+0xb5c>
    13f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    13f8:	ldr	r3, [fp, #-16]
    13fc:	cmp	r2, r3
    1400:	bcc	135c <coda_inflate+0xab4>
    1404:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1408:	ldr	r3, [r3, #16]
    140c:	and	r3, r3, #512	; 0x200
    1410:	cmp	r3, #0
    1414:	beq	143c <coda_inflate+0xb94>
    1418:	ldr	r3, [fp, #-52]	; 0xffffffcc
    141c:	ldr	r3, [r3, #24]
    1420:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1424:	ldr	r1, [fp, #-8]
    1428:	mov	r0, r3
    142c:	bl	0 <coda_crc32>
    1430:	mov	r2, r0
    1434:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1438:	str	r2, [r3, #24]
    143c:	ldr	r2, [fp, #-16]
    1440:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1444:	sub	r3, r2, r3
    1448:	str	r3, [fp, #-16]
    144c:	ldr	r2, [fp, #-8]
    1450:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1454:	add	r3, r2, r3
    1458:	str	r3, [fp, #-8]
    145c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1460:	cmp	r3, #0
    1464:	beq	148c <coda_inflate+0xbe4>
    1468:	b	334c <coda_inflate+0x2aa4>
    146c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1470:	ldr	r3, [r3, #32]
    1474:	cmp	r3, #0
    1478:	beq	148c <coda_inflate+0xbe4>
    147c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1480:	ldr	r3, [r3, #32]
    1484:	mov	r2, #0
    1488:	str	r2, [r3, #28]
    148c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1490:	mov	r2, #0
    1494:	str	r2, [r3, #64]	; 0x40
    1498:	ldr	r3, [fp, #-52]	; 0xffffffcc
    149c:	mov	r2, #7
    14a0:	str	r2, [r3]
    14a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14a8:	ldr	r3, [r3, #16]
    14ac:	and	r3, r3, #4096	; 0x1000
    14b0:	cmp	r3, #0
    14b4:	beq	15dc <coda_inflate+0xd34>
    14b8:	ldr	r3, [fp, #-16]
    14bc:	cmp	r3, #0
    14c0:	beq	3288 <coda_inflate+0x29e0>
    14c4:	mov	r3, #0
    14c8:	str	r3, [fp, #-36]	; 0xffffffdc
    14cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    14d0:	add	r2, r3, #1
    14d4:	str	r2, [fp, #-36]	; 0xffffffdc
    14d8:	ldr	r2, [fp, #-8]
    14dc:	add	r3, r2, r3
    14e0:	ldrb	r3, [r3]
    14e4:	str	r3, [fp, #-44]	; 0xffffffd4
    14e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14ec:	ldr	r3, [r3, #32]
    14f0:	cmp	r3, #0
    14f4:	beq	1558 <coda_inflate+0xcb0>
    14f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14fc:	ldr	r3, [r3, #32]
    1500:	ldr	r3, [r3, #36]	; 0x24
    1504:	cmp	r3, #0
    1508:	beq	1558 <coda_inflate+0xcb0>
    150c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1510:	ldr	r2, [r3, #64]	; 0x40
    1514:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1518:	ldr	r3, [r3, #32]
    151c:	ldr	r3, [r3, #40]	; 0x28
    1520:	cmp	r2, r3
    1524:	bcs	1558 <coda_inflate+0xcb0>
    1528:	ldr	r3, [fp, #-52]	; 0xffffffcc
    152c:	ldr	r3, [r3, #32]
    1530:	ldr	r2, [r3, #36]	; 0x24
    1534:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1538:	ldr	r3, [r3, #64]	; 0x40
    153c:	add	r0, r3, #1
    1540:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1544:	str	r0, [r1, #64]	; 0x40
    1548:	add	r3, r2, r3
    154c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1550:	uxtb	r2, r2
    1554:	strb	r2, [r3]
    1558:	ldr	r3, [fp, #-44]	; 0xffffffd4
    155c:	cmp	r3, #0
    1560:	beq	1574 <coda_inflate+0xccc>
    1564:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1568:	ldr	r3, [fp, #-16]
    156c:	cmp	r2, r3
    1570:	bcc	14cc <coda_inflate+0xc24>
    1574:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1578:	ldr	r3, [r3, #16]
    157c:	and	r3, r3, #512	; 0x200
    1580:	cmp	r3, #0
    1584:	beq	15ac <coda_inflate+0xd04>
    1588:	ldr	r3, [fp, #-52]	; 0xffffffcc
    158c:	ldr	r3, [r3, #24]
    1590:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1594:	ldr	r1, [fp, #-8]
    1598:	mov	r0, r3
    159c:	bl	0 <coda_crc32>
    15a0:	mov	r2, r0
    15a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15a8:	str	r2, [r3, #24]
    15ac:	ldr	r2, [fp, #-16]
    15b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    15b4:	sub	r3, r2, r3
    15b8:	str	r3, [fp, #-16]
    15bc:	ldr	r2, [fp, #-8]
    15c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    15c4:	add	r3, r2, r3
    15c8:	str	r3, [fp, #-8]
    15cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    15d0:	cmp	r3, #0
    15d4:	beq	15fc <coda_inflate+0xd54>
    15d8:	b	334c <coda_inflate+0x2aa4>
    15dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15e0:	ldr	r3, [r3, #32]
    15e4:	cmp	r3, #0
    15e8:	beq	15fc <coda_inflate+0xd54>
    15ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15f0:	ldr	r3, [r3, #32]
    15f4:	mov	r2, #0
    15f8:	str	r2, [r3, #36]	; 0x24
    15fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1600:	mov	r2, #8
    1604:	str	r2, [r3]
    1608:	ldr	r3, [fp, #-52]	; 0xffffffcc
    160c:	ldr	r3, [r3, #16]
    1610:	and	r3, r3, #512	; 0x200
    1614:	cmp	r3, #0
    1618:	beq	16c0 <coda_inflate+0xe18>
    161c:	b	166c <coda_inflate+0xdc4>
    1620:	ldr	r3, [fp, #-16]
    1624:	cmp	r3, #0
    1628:	beq	3290 <coda_inflate+0x29e8>
    162c:	ldr	r3, [fp, #-16]
    1630:	sub	r3, r3, #1
    1634:	str	r3, [fp, #-16]
    1638:	ldr	r3, [fp, #-8]
    163c:	add	r2, r3, #1
    1640:	str	r2, [fp, #-8]
    1644:	ldrb	r3, [r3]
    1648:	mov	r2, r3
    164c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1650:	lsl	r3, r2, r3
    1654:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1658:	add	r3, r2, r3
    165c:	str	r3, [fp, #-24]	; 0xffffffe8
    1660:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1664:	add	r3, r3, #8
    1668:	str	r3, [fp, #-28]	; 0xffffffe4
    166c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1670:	cmp	r3, #15
    1674:	bls	1620 <coda_inflate+0xd78>
    1678:	ldr	r3, [fp, #-52]	; 0xffffffcc
    167c:	ldr	r3, [r3, #24]
    1680:	uxth	r3, r3
    1684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1688:	cmp	r2, r3
    168c:	beq	16b0 <coda_inflate+0xe08>
    1690:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1694:	movw	r3, #0
    1698:	movt	r3, #0
    169c:	str	r3, [r2, #24]
    16a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16a4:	mov	r2, #29
    16a8:	str	r2, [r3]
    16ac:	b	324c <coda_inflate+0x29a4>
    16b0:	mov	r3, #0
    16b4:	str	r3, [fp, #-24]	; 0xffffffe8
    16b8:	mov	r3, #0
    16bc:	str	r3, [fp, #-28]	; 0xffffffe4
    16c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16c4:	ldr	r3, [r3, #32]
    16c8:	cmp	r3, #0
    16cc:	beq	16fc <coda_inflate+0xe54>
    16d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16d4:	ldr	r3, [r3, #16]
    16d8:	asr	r2, r3, #9
    16dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16e0:	ldr	r3, [r3, #32]
    16e4:	and	r2, r2, #1
    16e8:	str	r2, [r3, #44]	; 0x2c
    16ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16f0:	ldr	r3, [r3, #32]
    16f4:	mov	r2, #1
    16f8:	str	r2, [r3, #48]	; 0x30
    16fc:	mov	r2, #0
    1700:	mov	r1, #0
    1704:	mov	r0, #0
    1708:	bl	0 <coda_crc32>
    170c:	mov	r2, r0
    1710:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1714:	str	r2, [r3, #24]
    1718:	ldr	r3, [fp, #-52]	; 0xffffffcc
    171c:	ldr	r2, [r3, #24]
    1720:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1724:	str	r2, [r3, #48]	; 0x30
    1728:	ldr	r3, [fp, #-52]	; 0xffffffcc
    172c:	mov	r2, #11
    1730:	str	r2, [r3]
    1734:	b	324c <coda_inflate+0x29a4>
    1738:	ldr	r3, [fp, #-16]
    173c:	cmp	r3, #0
    1740:	beq	3298 <coda_inflate+0x29f0>
    1744:	ldr	r3, [fp, #-16]
    1748:	sub	r3, r3, #1
    174c:	str	r3, [fp, #-16]
    1750:	ldr	r3, [fp, #-8]
    1754:	add	r2, r3, #1
    1758:	str	r2, [fp, #-8]
    175c:	ldrb	r3, [r3]
    1760:	mov	r2, r3
    1764:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1768:	lsl	r3, r2, r3
    176c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1770:	add	r3, r2, r3
    1774:	str	r3, [fp, #-24]	; 0xffffffe8
    1778:	ldr	r3, [fp, #-28]	; 0xffffffe4
    177c:	add	r3, r3, #8
    1780:	str	r3, [fp, #-28]	; 0xffffffe4
    1784:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1788:	cmp	r3, #31
    178c:	bls	1738 <coda_inflate+0xe90>
    1790:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1794:	lsr	r2, r3, #24
    1798:	ldr	r3, [fp, #-24]	; 0xffffffe8
    179c:	lsr	r3, r3, #8
    17a0:	and	r3, r3, #65280	; 0xff00
    17a4:	add	r2, r2, r3
    17a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    17ac:	lsl	r3, r3, #8
    17b0:	and	r3, r3, #16711680	; 0xff0000
    17b4:	add	r2, r2, r3
    17b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    17bc:	lsl	r3, r3, #24
    17c0:	add	r2, r2, r3
    17c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17c8:	str	r2, [r3, #24]
    17cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17d0:	ldr	r2, [r3, #24]
    17d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    17d8:	str	r2, [r3, #48]	; 0x30
    17dc:	mov	r3, #0
    17e0:	str	r3, [fp, #-24]	; 0xffffffe8
    17e4:	mov	r3, #0
    17e8:	str	r3, [fp, #-28]	; 0xffffffe4
    17ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17f0:	mov	r2, #10
    17f4:	str	r2, [r3]
    17f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17fc:	ldr	r3, [r3, #12]
    1800:	cmp	r3, #0
    1804:	bne	1858 <coda_inflate+0xfb0>
    1808:	ldr	r3, [fp, #-72]	; 0xffffffb8
    180c:	ldr	r2, [fp, #-12]
    1810:	str	r2, [r3, #12]
    1814:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1818:	ldr	r2, [fp, #-20]	; 0xffffffec
    181c:	str	r2, [r3, #16]
    1820:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1824:	ldr	r2, [fp, #-8]
    1828:	str	r2, [r3]
    182c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1830:	ldr	r2, [fp, #-16]
    1834:	str	r2, [r3, #4]
    1838:	ldr	r3, [fp, #-52]	; 0xffffffcc
    183c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1840:	str	r2, [r3, #56]	; 0x38
    1844:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1848:	ldr	r2, [fp, #-28]	; 0xffffffe4
    184c:	str	r2, [r3, #60]	; 0x3c
    1850:	mov	r3, #2
    1854:	b	35f8 <coda_inflate+0x2d50>
    1858:	mov	r2, #0
    185c:	mov	r1, #0
    1860:	mov	r0, #0
    1864:	bl	0 <coda_adler32>
    1868:	mov	r2, r0
    186c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1870:	str	r2, [r3, #24]
    1874:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1878:	ldr	r2, [r3, #24]
    187c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1880:	str	r2, [r3, #48]	; 0x30
    1884:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1888:	mov	r2, #11
    188c:	str	r2, [r3]
    1890:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1894:	cmp	r3, #5
    1898:	beq	32a0 <coda_inflate+0x29f8>
    189c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    18a0:	cmp	r3, #6
    18a4:	beq	32a0 <coda_inflate+0x29f8>
    18a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18ac:	ldr	r3, [r3, #4]
    18b0:	cmp	r3, #0
    18b4:	beq	1934 <coda_inflate+0x108c>
    18b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    18bc:	and	r3, r3, #7
    18c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18c4:	lsr	r3, r2, r3
    18c8:	str	r3, [fp, #-24]	; 0xffffffe8
    18cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    18d0:	bic	r3, r3, #7
    18d4:	str	r3, [fp, #-28]	; 0xffffffe4
    18d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18dc:	mov	r2, #26
    18e0:	str	r2, [r3]
    18e4:	b	324c <coda_inflate+0x29a4>
    18e8:	ldr	r3, [fp, #-16]
    18ec:	cmp	r3, #0
    18f0:	beq	32a8 <coda_inflate+0x2a00>
    18f4:	ldr	r3, [fp, #-16]
    18f8:	sub	r3, r3, #1
    18fc:	str	r3, [fp, #-16]
    1900:	ldr	r3, [fp, #-8]
    1904:	add	r2, r3, #1
    1908:	str	r2, [fp, #-8]
    190c:	ldrb	r3, [r3]
    1910:	mov	r2, r3
    1914:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1918:	lsl	r3, r2, r3
    191c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1920:	add	r3, r2, r3
    1924:	str	r3, [fp, #-24]	; 0xffffffe8
    1928:	ldr	r3, [fp, #-28]	; 0xffffffe4
    192c:	add	r3, r3, #8
    1930:	str	r3, [fp, #-28]	; 0xffffffe4
    1934:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1938:	cmp	r3, #2
    193c:	bls	18e8 <coda_inflate+0x1040>
    1940:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1944:	and	r2, r3, #1
    1948:	ldr	r3, [fp, #-52]	; 0xffffffcc
    194c:	str	r2, [r3, #4]
    1950:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1954:	lsr	r3, r3, #1
    1958:	str	r3, [fp, #-24]	; 0xffffffe8
    195c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1960:	sub	r3, r3, #1
    1964:	str	r3, [fp, #-28]	; 0xffffffe4
    1968:	ldr	r3, [fp, #-24]	; 0xffffffe8
    196c:	and	r3, r3, #3
    1970:	cmp	r3, #3
    1974:	ldrls	pc, [pc, r3, lsl #2]
    1978:	b	1a0c <coda_inflate+0x1164>
    197c:	.word	0x0000198c
    1980:	.word	0x0000199c
    1984:	.word	0x000019d8
    1988:	.word	0x000019e8
    198c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1990:	mov	r2, #13
    1994:	str	r2, [r3]
    1998:	b	1a0c <coda_inflate+0x1164>
    199c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    19a0:	bl	5e8 <fixedtables>
    19a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19a8:	mov	r2, #19
    19ac:	str	r2, [r3]
    19b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    19b4:	cmp	r3, #6
    19b8:	bne	1a08 <coda_inflate+0x1160>
    19bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19c0:	lsr	r3, r3, #2
    19c4:	str	r3, [fp, #-24]	; 0xffffffe8
    19c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19cc:	sub	r3, r3, #2
    19d0:	str	r3, [fp, #-28]	; 0xffffffe4
    19d4:	b	334c <coda_inflate+0x2aa4>
    19d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19dc:	mov	r2, #16
    19e0:	str	r2, [r3]
    19e4:	b	1a0c <coda_inflate+0x1164>
    19e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    19ec:	movw	r3, #0
    19f0:	movt	r3, #0
    19f4:	str	r3, [r2, #24]
    19f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19fc:	mov	r2, #29
    1a00:	str	r2, [r3]
    1a04:	b	1a0c <coda_inflate+0x1164>
    1a08:	nop	{0}
    1a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a10:	lsr	r3, r3, #2
    1a14:	str	r3, [fp, #-24]	; 0xffffffe8
    1a18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a1c:	sub	r3, r3, #2
    1a20:	str	r3, [fp, #-28]	; 0xffffffe4
    1a24:	b	324c <coda_inflate+0x29a4>
    1a28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a2c:	and	r3, r3, #7
    1a30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a34:	lsr	r3, r2, r3
    1a38:	str	r3, [fp, #-24]	; 0xffffffe8
    1a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a40:	bic	r3, r3, #7
    1a44:	str	r3, [fp, #-28]	; 0xffffffe4
    1a48:	b	1a98 <coda_inflate+0x11f0>
    1a4c:	ldr	r3, [fp, #-16]
    1a50:	cmp	r3, #0
    1a54:	beq	32b0 <coda_inflate+0x2a08>
    1a58:	ldr	r3, [fp, #-16]
    1a5c:	sub	r3, r3, #1
    1a60:	str	r3, [fp, #-16]
    1a64:	ldr	r3, [fp, #-8]
    1a68:	add	r2, r3, #1
    1a6c:	str	r2, [fp, #-8]
    1a70:	ldrb	r3, [r3]
    1a74:	mov	r2, r3
    1a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a7c:	lsl	r3, r2, r3
    1a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a84:	add	r3, r2, r3
    1a88:	str	r3, [fp, #-24]	; 0xffffffe8
    1a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a90:	add	r3, r3, #8
    1a94:	str	r3, [fp, #-28]	; 0xffffffe4
    1a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a9c:	cmp	r3, #31
    1aa0:	bls	1a4c <coda_inflate+0x11a4>
    1aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1aa8:	uxth	r2, r3
    1aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ab0:	lsr	r3, r3, #16
    1ab4:	eor	r3, r3, #65280	; 0xff00
    1ab8:	eor	r3, r3, #255	; 0xff
    1abc:	cmp	r2, r3
    1ac0:	beq	1ae4 <coda_inflate+0x123c>
    1ac4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1ac8:	movw	r3, #0
    1acc:	movt	r3, #0
    1ad0:	str	r3, [r2, #24]
    1ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ad8:	mov	r2, #29
    1adc:	str	r2, [r3]
    1ae0:	b	324c <coda_inflate+0x29a4>
    1ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ae8:	uxth	r2, r3
    1aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1af0:	str	r2, [r3, #64]	; 0x40
    1af4:	mov	r3, #0
    1af8:	str	r3, [fp, #-24]	; 0xffffffe8
    1afc:	mov	r3, #0
    1b00:	str	r3, [fp, #-28]	; 0xffffffe4
    1b04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b08:	mov	r2, #14
    1b0c:	str	r2, [r3]
    1b10:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1b14:	cmp	r3, #6
    1b18:	beq	32b8 <coda_inflate+0x2a10>
    1b1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b20:	mov	r2, #15
    1b24:	str	r2, [r3]
    1b28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b2c:	ldr	r3, [r3, #64]	; 0x40
    1b30:	str	r3, [fp, #-36]	; 0xffffffdc
    1b34:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b38:	cmp	r3, #0
    1b3c:	beq	1be8 <coda_inflate+0x1340>
    1b40:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b44:	ldr	r3, [fp, #-16]
    1b48:	cmp	r2, r3
    1b4c:	bls	1b58 <coda_inflate+0x12b0>
    1b50:	ldr	r3, [fp, #-16]
    1b54:	str	r3, [fp, #-36]	; 0xffffffdc
    1b58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b60:	cmp	r2, r3
    1b64:	bls	1b70 <coda_inflate+0x12c8>
    1b68:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b6c:	str	r3, [fp, #-36]	; 0xffffffdc
    1b70:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b74:	cmp	r3, #0
    1b78:	beq	32c0 <coda_inflate+0x2a18>
    1b7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b80:	ldr	r1, [fp, #-8]
    1b84:	ldr	r0, [fp, #-12]
    1b88:	bl	0 <memcpy>
    1b8c:	ldr	r2, [fp, #-16]
    1b90:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b94:	sub	r3, r2, r3
    1b98:	str	r3, [fp, #-16]
    1b9c:	ldr	r2, [fp, #-8]
    1ba0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ba4:	add	r3, r2, r3
    1ba8:	str	r3, [fp, #-8]
    1bac:	ldr	r2, [fp, #-20]	; 0xffffffec
    1bb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bb4:	sub	r3, r2, r3
    1bb8:	str	r3, [fp, #-20]	; 0xffffffec
    1bbc:	ldr	r2, [fp, #-12]
    1bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bc4:	add	r3, r2, r3
    1bc8:	str	r3, [fp, #-12]
    1bcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bd0:	ldr	r2, [r3, #64]	; 0x40
    1bd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bd8:	sub	r2, r2, r3
    1bdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1be0:	str	r2, [r3, #64]	; 0x40
    1be4:	b	324c <coda_inflate+0x29a4>
    1be8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bec:	mov	r2, #11
    1bf0:	str	r2, [r3]
    1bf4:	b	324c <coda_inflate+0x29a4>
    1bf8:	ldr	r3, [fp, #-16]
    1bfc:	cmp	r3, #0
    1c00:	beq	32c8 <coda_inflate+0x2a20>
    1c04:	ldr	r3, [fp, #-16]
    1c08:	sub	r3, r3, #1
    1c0c:	str	r3, [fp, #-16]
    1c10:	ldr	r3, [fp, #-8]
    1c14:	add	r2, r3, #1
    1c18:	str	r2, [fp, #-8]
    1c1c:	ldrb	r3, [r3]
    1c20:	mov	r2, r3
    1c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c28:	lsl	r3, r2, r3
    1c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c30:	add	r3, r2, r3
    1c34:	str	r3, [fp, #-24]	; 0xffffffe8
    1c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c3c:	add	r3, r3, #8
    1c40:	str	r3, [fp, #-28]	; 0xffffffe4
    1c44:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c48:	cmp	r3, #13
    1c4c:	bls	1bf8 <coda_inflate+0x1350>
    1c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c54:	and	r3, r3, #31
    1c58:	add	r3, r3, #256	; 0x100
    1c5c:	add	r3, r3, #1
    1c60:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1c64:	str	r3, [r2, #96]	; 0x60
    1c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c6c:	lsr	r3, r3, #5
    1c70:	str	r3, [fp, #-24]	; 0xffffffe8
    1c74:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c78:	sub	r3, r3, #5
    1c7c:	str	r3, [fp, #-28]	; 0xffffffe4
    1c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c84:	and	r3, r3, #31
    1c88:	add	r2, r3, #1
    1c8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1c90:	str	r2, [r3, #100]	; 0x64
    1c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c98:	lsr	r3, r3, #5
    1c9c:	str	r3, [fp, #-24]	; 0xffffffe8
    1ca0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ca4:	sub	r3, r3, #5
    1ca8:	str	r3, [fp, #-28]	; 0xffffffe4
    1cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cb0:	and	r3, r3, #15
    1cb4:	add	r2, r3, #4
    1cb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cbc:	str	r2, [r3, #92]	; 0x5c
    1cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cc4:	lsr	r3, r3, #4
    1cc8:	str	r3, [fp, #-24]	; 0xffffffe8
    1ccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1cd0:	sub	r3, r3, #4
    1cd4:	str	r3, [fp, #-28]	; 0xffffffe4
    1cd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cdc:	ldr	r3, [r3, #96]	; 0x60
    1ce0:	movw	r2, #286	; 0x11e
    1ce4:	cmp	r3, r2
    1ce8:	bhi	1cfc <coda_inflate+0x1454>
    1cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cf0:	ldr	r3, [r3, #100]	; 0x64
    1cf4:	cmp	r3, #30
    1cf8:	bls	1d1c <coda_inflate+0x1474>
    1cfc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1d00:	movw	r3, #0
    1d04:	movt	r3, #0
    1d08:	str	r3, [r2, #24]
    1d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d10:	mov	r2, #29
    1d14:	str	r2, [r3]
    1d18:	b	324c <coda_inflate+0x29a4>
    1d1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d20:	mov	r2, #0
    1d24:	str	r2, [r3, #104]	; 0x68
    1d28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d2c:	mov	r2, #17
    1d30:	str	r2, [r3]
    1d34:	b	1df4 <coda_inflate+0x154c>
    1d38:	ldr	r3, [fp, #-16]
    1d3c:	cmp	r3, #0
    1d40:	beq	32d0 <coda_inflate+0x2a28>
    1d44:	ldr	r3, [fp, #-16]
    1d48:	sub	r3, r3, #1
    1d4c:	str	r3, [fp, #-16]
    1d50:	ldr	r3, [fp, #-8]
    1d54:	add	r2, r3, #1
    1d58:	str	r2, [fp, #-8]
    1d5c:	ldrb	r3, [r3]
    1d60:	mov	r2, r3
    1d64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d68:	lsl	r3, r2, r3
    1d6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d70:	add	r3, r2, r3
    1d74:	str	r3, [fp, #-24]	; 0xffffffe8
    1d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d7c:	add	r3, r3, #8
    1d80:	str	r3, [fp, #-28]	; 0xffffffe4
    1d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d88:	cmp	r3, #2
    1d8c:	bls	1d38 <coda_inflate+0x1490>
    1d90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d94:	uxth	r1, r3
    1d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d9c:	ldr	r2, [r3, #104]	; 0x68
    1da0:	add	r0, r2, #1
    1da4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1da8:	str	r0, [r3, #104]	; 0x68
    1dac:	movw	r3, #0
    1db0:	movt	r3, #0
    1db4:	lsl	r2, r2, #1
    1db8:	add	r3, r3, r2
    1dbc:	ldrh	r3, [r3]
    1dc0:	and	r2, r1, #7
    1dc4:	uxth	r2, r2
    1dc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1dcc:	add	r3, r3, #56	; 0x38
    1dd0:	lsl	r3, r3, #1
    1dd4:	add	r3, r1, r3
    1dd8:	strh	r2, [r3]
    1ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1de0:	lsr	r3, r3, #3
    1de4:	str	r3, [fp, #-24]	; 0xffffffe8
    1de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1dec:	sub	r3, r3, #3
    1df0:	str	r3, [fp, #-28]	; 0xffffffe4
    1df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1df8:	ldr	r2, [r3, #104]	; 0x68
    1dfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e00:	ldr	r3, [r3, #92]	; 0x5c
    1e04:	cmp	r2, r3
    1e08:	bcc	1d84 <coda_inflate+0x14dc>
    1e0c:	b	1e50 <coda_inflate+0x15a8>
    1e10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e14:	ldr	r2, [r3, #104]	; 0x68
    1e18:	add	r1, r2, #1
    1e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e20:	str	r1, [r3, #104]	; 0x68
    1e24:	movw	r3, #0
    1e28:	movt	r3, #0
    1e2c:	lsl	r2, r2, #1
    1e30:	add	r3, r3, r2
    1e34:	ldrh	r3, [r3]
    1e38:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e3c:	add	r3, r3, #56	; 0x38
    1e40:	lsl	r3, r3, #1
    1e44:	add	r3, r2, r3
    1e48:	mov	r2, #0
    1e4c:	strh	r2, [r3]
    1e50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e54:	ldr	r3, [r3, #104]	; 0x68
    1e58:	cmp	r3, #18
    1e5c:	bls	1e10 <coda_inflate+0x1568>
    1e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e64:	add	r2, r3, #1328	; 0x530
    1e68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e6c:	str	r2, [r3, #108]	; 0x6c
    1e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e74:	ldr	r2, [r3, #108]	; 0x6c
    1e78:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e7c:	str	r2, [r3, #76]	; 0x4c
    1e80:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e84:	mov	r2, #7
    1e88:	str	r2, [r3, #84]	; 0x54
    1e8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e90:	add	r1, r3, #112	; 0x70
    1e94:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e98:	add	r0, r3, #108	; 0x6c
    1e9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ea0:	add	r3, r3, #84	; 0x54
    1ea4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ea8:	add	r2, r2, #752	; 0x2f0
    1eac:	str	r2, [sp, #4]
    1eb0:	str	r3, [sp]
    1eb4:	mov	r3, r0
    1eb8:	mov	r2, #19
    1ebc:	mov	r0, #0
    1ec0:	bl	0 <coda_inflate_table>
    1ec4:	str	r0, [fp, #-48]	; 0xffffffd0
    1ec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ecc:	cmp	r3, #0
    1ed0:	beq	1ef4 <coda_inflate+0x164c>
    1ed4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1ed8:	movw	r3, #0
    1edc:	movt	r3, #0
    1ee0:	str	r3, [r2, #24]
    1ee4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ee8:	mov	r2, #29
    1eec:	str	r2, [r3]
    1ef0:	b	324c <coda_inflate+0x29a4>
    1ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ef8:	mov	r2, #0
    1efc:	str	r2, [r3, #104]	; 0x68
    1f00:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f04:	mov	r2, #18
    1f08:	str	r2, [r3]
    1f0c:	b	234c <coda_inflate+0x1aa4>
    1f10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f14:	ldr	r2, [r3, #76]	; 0x4c
    1f18:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1f1c:	ldr	r3, [r3, #84]	; 0x54
    1f20:	mvn	r1, #0
    1f24:	lsl	r3, r1, r3
    1f28:	mvn	r1, r3
    1f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f30:	and	r3, r3, r1
    1f34:	lsl	r3, r3, #2
    1f38:	add	r2, r2, r3
    1f3c:	sub	r3, fp, #60	; 0x3c
    1f40:	ldr	r2, [r2]
    1f44:	str	r2, [r3]
    1f48:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1f4c:	mov	r2, r3
    1f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f54:	cmp	r3, r2
    1f58:	bcs	1fac <coda_inflate+0x1704>
    1f5c:	ldr	r3, [fp, #-16]
    1f60:	cmp	r3, #0
    1f64:	beq	32d8 <coda_inflate+0x2a30>
    1f68:	ldr	r3, [fp, #-16]
    1f6c:	sub	r3, r3, #1
    1f70:	str	r3, [fp, #-16]
    1f74:	ldr	r3, [fp, #-8]
    1f78:	add	r2, r3, #1
    1f7c:	str	r2, [fp, #-8]
    1f80:	ldrb	r3, [r3]
    1f84:	mov	r2, r3
    1f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f8c:	lsl	r3, r2, r3
    1f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f94:	add	r3, r2, r3
    1f98:	str	r3, [fp, #-24]	; 0xffffffe8
    1f9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1fa0:	add	r3, r3, #8
    1fa4:	str	r3, [fp, #-28]	; 0xffffffe4
    1fa8:	b	1f10 <coda_inflate+0x1668>
    1fac:	nop	{0}
    1fb0:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    1fb4:	cmp	r3, #15
    1fb8:	bhi	2014 <coda_inflate+0x176c>
    1fbc:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1fc0:	mov	r2, r3
    1fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fc8:	lsr	r3, r3, r2
    1fcc:	str	r3, [fp, #-24]	; 0xffffffe8
    1fd0:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1fd4:	mov	r2, r3
    1fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1fdc:	sub	r3, r3, r2
    1fe0:	str	r3, [fp, #-28]	; 0xffffffe4
    1fe4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1fe8:	ldr	r3, [r3, #104]	; 0x68
    1fec:	add	r1, r3, #1
    1ff0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1ff4:	str	r1, [r2, #104]	; 0x68
    1ff8:	ldrh	r2, [fp, #-58]	; 0xffffffc6
    1ffc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2000:	add	r3, r3, #56	; 0x38
    2004:	lsl	r3, r3, #1
    2008:	add	r3, r1, r3
    200c:	strh	r2, [r3]
    2010:	b	234c <coda_inflate+0x1aa4>
    2014:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    2018:	cmp	r3, #16
    201c:	bne	2130 <coda_inflate+0x1888>
    2020:	b	2070 <coda_inflate+0x17c8>
    2024:	ldr	r3, [fp, #-16]
    2028:	cmp	r3, #0
    202c:	beq	32e0 <coda_inflate+0x2a38>
    2030:	ldr	r3, [fp, #-16]
    2034:	sub	r3, r3, #1
    2038:	str	r3, [fp, #-16]
    203c:	ldr	r3, [fp, #-8]
    2040:	add	r2, r3, #1
    2044:	str	r2, [fp, #-8]
    2048:	ldrb	r3, [r3]
    204c:	mov	r2, r3
    2050:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2054:	lsl	r3, r2, r3
    2058:	ldr	r2, [fp, #-24]	; 0xffffffe8
    205c:	add	r3, r2, r3
    2060:	str	r3, [fp, #-24]	; 0xffffffe8
    2064:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2068:	add	r3, r3, #8
    206c:	str	r3, [fp, #-28]	; 0xffffffe4
    2070:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2074:	add	r3, r3, #2
    2078:	mov	r2, r3
    207c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2080:	cmp	r3, r2
    2084:	bcc	2024 <coda_inflate+0x177c>
    2088:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    208c:	mov	r2, r3
    2090:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2094:	lsr	r3, r3, r2
    2098:	str	r3, [fp, #-24]	; 0xffffffe8
    209c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    20a0:	mov	r2, r3
    20a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    20a8:	sub	r3, r3, r2
    20ac:	str	r3, [fp, #-28]	; 0xffffffe4
    20b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20b4:	ldr	r3, [r3, #104]	; 0x68
    20b8:	cmp	r3, #0
    20bc:	bne	20e0 <coda_inflate+0x1838>
    20c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    20c4:	movw	r3, #0
    20c8:	movt	r3, #0
    20cc:	str	r3, [r2, #24]
    20d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20d4:	mov	r2, #29
    20d8:	str	r2, [r3]
    20dc:	b	2370 <coda_inflate+0x1ac8>
    20e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20e4:	ldr	r3, [r3, #104]	; 0x68
    20e8:	sub	r3, r3, #1
    20ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20f0:	add	r3, r3, #56	; 0x38
    20f4:	lsl	r3, r3, #1
    20f8:	add	r3, r2, r3
    20fc:	ldrh	r3, [r3]
    2100:	str	r3, [fp, #-44]	; 0xffffffd4
    2104:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2108:	and	r3, r3, #3
    210c:	add	r3, r3, #3
    2110:	str	r3, [fp, #-36]	; 0xffffffdc
    2114:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2118:	lsr	r3, r3, #2
    211c:	str	r3, [fp, #-24]	; 0xffffffe8
    2120:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2124:	sub	r3, r3, #2
    2128:	str	r3, [fp, #-28]	; 0xffffffe4
    212c:	b	22bc <coda_inflate+0x1a14>
    2130:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    2134:	cmp	r3, #17
    2138:	bne	224c <coda_inflate+0x19a4>
    213c:	b	218c <coda_inflate+0x18e4>
    2140:	ldr	r3, [fp, #-16]
    2144:	cmp	r3, #0
    2148:	beq	32e8 <coda_inflate+0x2a40>
    214c:	ldr	r3, [fp, #-16]
    2150:	sub	r3, r3, #1
    2154:	str	r3, [fp, #-16]
    2158:	ldr	r3, [fp, #-8]
    215c:	add	r2, r3, #1
    2160:	str	r2, [fp, #-8]
    2164:	ldrb	r3, [r3]
    2168:	mov	r2, r3
    216c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2170:	lsl	r3, r2, r3
    2174:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2178:	add	r3, r2, r3
    217c:	str	r3, [fp, #-24]	; 0xffffffe8
    2180:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2184:	add	r3, r3, #8
    2188:	str	r3, [fp, #-28]	; 0xffffffe4
    218c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2190:	add	r3, r3, #3
    2194:	mov	r2, r3
    2198:	ldr	r3, [fp, #-28]	; 0xffffffe4
    219c:	cmp	r3, r2
    21a0:	bcc	2140 <coda_inflate+0x1898>
    21a4:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    21a8:	mov	r2, r3
    21ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21b0:	lsr	r3, r3, r2
    21b4:	str	r3, [fp, #-24]	; 0xffffffe8
    21b8:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    21bc:	mov	r2, r3
    21c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    21c4:	sub	r3, r3, r2
    21c8:	str	r3, [fp, #-28]	; 0xffffffe4
    21cc:	mov	r3, #0
    21d0:	str	r3, [fp, #-44]	; 0xffffffd4
    21d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21d8:	and	r3, r3, #7
    21dc:	add	r3, r3, #3
    21e0:	str	r3, [fp, #-36]	; 0xffffffdc
    21e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21e8:	lsr	r3, r3, #3
    21ec:	str	r3, [fp, #-24]	; 0xffffffe8
    21f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    21f4:	sub	r3, r3, #3
    21f8:	str	r3, [fp, #-28]	; 0xffffffe4
    21fc:	b	22bc <coda_inflate+0x1a14>
    2200:	ldr	r3, [fp, #-16]
    2204:	cmp	r3, #0
    2208:	beq	32f0 <coda_inflate+0x2a48>
    220c:	ldr	r3, [fp, #-16]
    2210:	sub	r3, r3, #1
    2214:	str	r3, [fp, #-16]
    2218:	ldr	r3, [fp, #-8]
    221c:	add	r2, r3, #1
    2220:	str	r2, [fp, #-8]
    2224:	ldrb	r3, [r3]
    2228:	mov	r2, r3
    222c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2230:	lsl	r3, r2, r3
    2234:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2238:	add	r3, r2, r3
    223c:	str	r3, [fp, #-24]	; 0xffffffe8
    2240:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2244:	add	r3, r3, #8
    2248:	str	r3, [fp, #-28]	; 0xffffffe4
    224c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2250:	add	r3, r3, #7
    2254:	mov	r2, r3
    2258:	ldr	r3, [fp, #-28]	; 0xffffffe4
    225c:	cmp	r3, r2
    2260:	bcc	2200 <coda_inflate+0x1958>
    2264:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2268:	mov	r2, r3
    226c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2270:	lsr	r3, r3, r2
    2274:	str	r3, [fp, #-24]	; 0xffffffe8
    2278:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    227c:	mov	r2, r3
    2280:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2284:	sub	r3, r3, r2
    2288:	str	r3, [fp, #-28]	; 0xffffffe4
    228c:	mov	r3, #0
    2290:	str	r3, [fp, #-44]	; 0xffffffd4
    2294:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2298:	and	r3, r3, #127	; 0x7f
    229c:	add	r3, r3, #11
    22a0:	str	r3, [fp, #-36]	; 0xffffffdc
    22a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    22a8:	lsr	r3, r3, #7
    22ac:	str	r3, [fp, #-24]	; 0xffffffe8
    22b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    22b4:	sub	r3, r3, #7
    22b8:	str	r3, [fp, #-28]	; 0xffffffe4
    22bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22c0:	ldr	r2, [r3, #104]	; 0x68
    22c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    22c8:	add	r2, r2, r3
    22cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22d0:	ldr	r1, [r3, #96]	; 0x60
    22d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22d8:	ldr	r3, [r3, #100]	; 0x64
    22dc:	add	r3, r1, r3
    22e0:	cmp	r2, r3
    22e4:	bls	2338 <coda_inflate+0x1a90>
    22e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    22ec:	movw	r3, #0
    22f0:	movt	r3, #0
    22f4:	str	r3, [r2, #24]
    22f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22fc:	mov	r2, #29
    2300:	str	r2, [r3]
    2304:	b	2370 <coda_inflate+0x1ac8>
    2308:	ldr	r3, [fp, #-52]	; 0xffffffcc
    230c:	ldr	r3, [r3, #104]	; 0x68
    2310:	add	r1, r3, #1
    2314:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2318:	str	r1, [r2, #104]	; 0x68
    231c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2320:	uxth	r2, r2
    2324:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2328:	add	r3, r3, #56	; 0x38
    232c:	lsl	r3, r3, #1
    2330:	add	r3, r1, r3
    2334:	strh	r2, [r3]
    2338:	ldr	r3, [fp, #-36]	; 0xffffffdc
    233c:	sub	r2, r3, #1
    2340:	str	r2, [fp, #-36]	; 0xffffffdc
    2344:	cmp	r3, #0
    2348:	bne	2308 <coda_inflate+0x1a60>
    234c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2350:	ldr	r2, [r3, #104]	; 0x68
    2354:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2358:	ldr	r1, [r3, #96]	; 0x60
    235c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2360:	ldr	r3, [r3, #100]	; 0x64
    2364:	add	r3, r1, r3
    2368:	cmp	r2, r3
    236c:	bcc	1f10 <coda_inflate+0x1668>
    2370:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2374:	ldr	r3, [r3]
    2378:	cmp	r3, #29
    237c:	beq	3238 <coda_inflate+0x2990>
    2380:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2384:	add	r3, r3, #624	; 0x270
    2388:	ldrh	r3, [r3]
    238c:	cmp	r3, #0
    2390:	bne	23b4 <coda_inflate+0x1b0c>
    2394:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2398:	movw	r3, #0
    239c:	movt	r3, #0
    23a0:	str	r3, [r2, #24]
    23a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23a8:	mov	r2, #29
    23ac:	str	r2, [r3]
    23b0:	b	324c <coda_inflate+0x29a4>
    23b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23b8:	add	r2, r3, #1328	; 0x530
    23bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23c0:	str	r2, [r3, #108]	; 0x6c
    23c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23c8:	ldr	r2, [r3, #108]	; 0x6c
    23cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23d0:	str	r2, [r3, #76]	; 0x4c
    23d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23d8:	mov	r2, #9
    23dc:	str	r2, [r3, #84]	; 0x54
    23e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23e4:	add	r1, r3, #112	; 0x70
    23e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23ec:	ldr	r0, [r3, #96]	; 0x60
    23f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23f4:	add	ip, r3, #108	; 0x6c
    23f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23fc:	add	r3, r3, #84	; 0x54
    2400:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2404:	add	r2, r2, #752	; 0x2f0
    2408:	str	r2, [sp, #4]
    240c:	str	r3, [sp]
    2410:	mov	r3, ip
    2414:	mov	r2, r0
    2418:	mov	r0, #1
    241c:	bl	0 <coda_inflate_table>
    2420:	str	r0, [fp, #-48]	; 0xffffffd0
    2424:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2428:	cmp	r3, #0
    242c:	beq	2450 <coda_inflate+0x1ba8>
    2430:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2434:	movw	r3, #0
    2438:	movt	r3, #0
    243c:	str	r3, [r2, #24]
    2440:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2444:	mov	r2, #29
    2448:	str	r2, [r3]
    244c:	b	324c <coda_inflate+0x29a4>
    2450:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2454:	ldr	r2, [r3, #108]	; 0x6c
    2458:	ldr	r3, [fp, #-52]	; 0xffffffcc
    245c:	str	r2, [r3, #80]	; 0x50
    2460:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2464:	mov	r2, #6
    2468:	str	r2, [r3, #88]	; 0x58
    246c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2470:	add	r2, r3, #112	; 0x70
    2474:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2478:	ldr	r3, [r3, #96]	; 0x60
    247c:	lsl	r3, r3, #1
    2480:	add	r1, r2, r3
    2484:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2488:	ldr	r0, [r3, #100]	; 0x64
    248c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2490:	add	ip, r3, #108	; 0x6c
    2494:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2498:	add	r3, r3, #88	; 0x58
    249c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    24a0:	add	r2, r2, #752	; 0x2f0
    24a4:	str	r2, [sp, #4]
    24a8:	str	r3, [sp]
    24ac:	mov	r3, ip
    24b0:	mov	r2, r0
    24b4:	mov	r0, #2
    24b8:	bl	0 <coda_inflate_table>
    24bc:	str	r0, [fp, #-48]	; 0xffffffd0
    24c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    24c4:	cmp	r3, #0
    24c8:	beq	24ec <coda_inflate+0x1c44>
    24cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    24d0:	movw	r3, #0
    24d4:	movt	r3, #0
    24d8:	str	r3, [r2, #24]
    24dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24e0:	mov	r2, #29
    24e4:	str	r2, [r3]
    24e8:	b	324c <coda_inflate+0x29a4>
    24ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24f0:	mov	r2, #19
    24f4:	str	r2, [r3]
    24f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    24fc:	cmp	r3, #6
    2500:	beq	32f8 <coda_inflate+0x2a50>
    2504:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2508:	mov	r2, #20
    250c:	str	r2, [r3]
    2510:	ldr	r3, [fp, #-16]
    2514:	cmp	r3, #5
    2518:	bls	25f0 <coda_inflate+0x1d48>
    251c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2520:	movw	r2, #257	; 0x101
    2524:	cmp	r3, r2
    2528:	bls	25f0 <coda_inflate+0x1d48>
    252c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2530:	ldr	r2, [fp, #-12]
    2534:	str	r2, [r3, #12]
    2538:	ldr	r3, [fp, #-72]	; 0xffffffb8
    253c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2540:	str	r2, [r3, #16]
    2544:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2548:	ldr	r2, [fp, #-8]
    254c:	str	r2, [r3]
    2550:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2554:	ldr	r2, [fp, #-16]
    2558:	str	r2, [r3, #4]
    255c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2560:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2564:	str	r2, [r3, #56]	; 0x38
    2568:	ldr	r3, [fp, #-52]	; 0xffffffcc
    256c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2570:	str	r2, [r3, #60]	; 0x3c
    2574:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2578:	ldr	r0, [fp, #-72]	; 0xffffffb8
    257c:	bl	0 <coda_inflate_fast>
    2580:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2584:	ldr	r3, [r3, #12]
    2588:	str	r3, [fp, #-12]
    258c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2590:	ldr	r3, [r3, #16]
    2594:	str	r3, [fp, #-20]	; 0xffffffec
    2598:	ldr	r3, [fp, #-72]	; 0xffffffb8
    259c:	ldr	r3, [r3]
    25a0:	str	r3, [fp, #-8]
    25a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    25a8:	ldr	r3, [r3, #4]
    25ac:	str	r3, [fp, #-16]
    25b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25b4:	ldr	r3, [r3, #56]	; 0x38
    25b8:	str	r3, [fp, #-24]	; 0xffffffe8
    25bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25c0:	ldr	r3, [r3, #60]	; 0x3c
    25c4:	str	r3, [fp, #-28]	; 0xffffffe4
    25c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25cc:	ldr	r3, [r3]
    25d0:	cmp	r3, #11
    25d4:	bne	3240 <coda_inflate+0x2998>
    25d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25dc:	add	r3, r3, #4096	; 0x1000
    25e0:	mov	r2, r3
    25e4:	mvn	r3, #0
    25e8:	str	r3, [r2, #3012]	; 0xbc4
    25ec:	b	3240 <coda_inflate+0x2998>
    25f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25f4:	add	r3, r3, #4096	; 0x1000
    25f8:	mov	r2, r3
    25fc:	mov	r3, #0
    2600:	str	r3, [r2, #3012]	; 0xbc4
    2604:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2608:	ldr	r2, [r3, #76]	; 0x4c
    260c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2610:	ldr	r3, [r3, #84]	; 0x54
    2614:	mvn	r1, #0
    2618:	lsl	r3, r1, r3
    261c:	mvn	r1, r3
    2620:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2624:	and	r3, r3, r1
    2628:	lsl	r3, r3, #2
    262c:	add	r2, r2, r3
    2630:	sub	r3, fp, #60	; 0x3c
    2634:	ldr	r2, [r2]
    2638:	str	r2, [r3]
    263c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2640:	mov	r2, r3
    2644:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2648:	cmp	r3, r2
    264c:	bcs	26a0 <coda_inflate+0x1df8>
    2650:	ldr	r3, [fp, #-16]
    2654:	cmp	r3, #0
    2658:	beq	3300 <coda_inflate+0x2a58>
    265c:	ldr	r3, [fp, #-16]
    2660:	sub	r3, r3, #1
    2664:	str	r3, [fp, #-16]
    2668:	ldr	r3, [fp, #-8]
    266c:	add	r2, r3, #1
    2670:	str	r2, [fp, #-8]
    2674:	ldrb	r3, [r3]
    2678:	mov	r2, r3
    267c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2680:	lsl	r3, r2, r3
    2684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2688:	add	r3, r2, r3
    268c:	str	r3, [fp, #-24]	; 0xffffffe8
    2690:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2694:	add	r3, r3, #8
    2698:	str	r3, [fp, #-28]	; 0xffffffe4
    269c:	b	2604 <coda_inflate+0x1d5c>
    26a0:	nop	{0}
    26a4:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    26a8:	cmp	r3, #0
    26ac:	beq	27d8 <coda_inflate+0x1f30>
    26b0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    26b4:	and	r3, r3, #240	; 0xf0
    26b8:	cmp	r3, #0
    26bc:	bne	27d8 <coda_inflate+0x1f30>
    26c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    26c4:	str	r3, [fp, #-64]	; 0xffffffc0
    26c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    26cc:	ldr	r2, [r3, #76]	; 0x4c
    26d0:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    26d4:	mov	r0, r3
    26d8:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    26dc:	mov	r1, r3
    26e0:	ldrb	r3, [fp, #-64]	; 0xffffffc0
    26e4:	add	r3, r1, r3
    26e8:	mvn	r1, #0
    26ec:	lsl	r3, r1, r3
    26f0:	mvn	r1, r3
    26f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26f8:	and	r3, r3, r1
    26fc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
    2700:	lsr	r3, r3, r1
    2704:	add	r3, r0, r3
    2708:	lsl	r3, r3, #2
    270c:	add	r2, r2, r3
    2710:	sub	r3, fp, #60	; 0x3c
    2714:	ldr	r2, [r2]
    2718:	str	r2, [r3]
    271c:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2720:	mov	r2, r3
    2724:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2728:	add	r3, r2, r3
    272c:	mov	r2, r3
    2730:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2734:	cmp	r3, r2
    2738:	bcs	278c <coda_inflate+0x1ee4>
    273c:	ldr	r3, [fp, #-16]
    2740:	cmp	r3, #0
    2744:	beq	3308 <coda_inflate+0x2a60>
    2748:	ldr	r3, [fp, #-16]
    274c:	sub	r3, r3, #1
    2750:	str	r3, [fp, #-16]
    2754:	ldr	r3, [fp, #-8]
    2758:	add	r2, r3, #1
    275c:	str	r2, [fp, #-8]
    2760:	ldrb	r3, [r3]
    2764:	mov	r2, r3
    2768:	ldr	r3, [fp, #-28]	; 0xffffffe4
    276c:	lsl	r3, r2, r3
    2770:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2774:	add	r3, r2, r3
    2778:	str	r3, [fp, #-24]	; 0xffffffe8
    277c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2780:	add	r3, r3, #8
    2784:	str	r3, [fp, #-28]	; 0xffffffe4
    2788:	b	26c8 <coda_inflate+0x1e20>
    278c:	nop	{0}
    2790:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2794:	mov	r2, r3
    2798:	ldr	r3, [fp, #-24]	; 0xffffffe8
    279c:	lsr	r3, r3, r2
    27a0:	str	r3, [fp, #-24]	; 0xffffffe8
    27a4:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    27a8:	mov	r2, r3
    27ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    27b0:	sub	r3, r3, r2
    27b4:	str	r3, [fp, #-28]	; 0xffffffe4
    27b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27bc:	add	r3, r3, #4096	; 0x1000
    27c0:	ldr	r3, [r3, #3012]	; 0xbc4
    27c4:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    27c8:	add	r3, r3, r2
    27cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    27d0:	add	r2, r2, #4096	; 0x1000
    27d4:	str	r3, [r2, #3012]	; 0xbc4
    27d8:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    27dc:	mov	r2, r3
    27e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    27e4:	lsr	r3, r3, r2
    27e8:	str	r3, [fp, #-24]	; 0xffffffe8
    27ec:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    27f0:	mov	r2, r3
    27f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    27f8:	sub	r3, r3, r2
    27fc:	str	r3, [fp, #-28]	; 0xffffffe4
    2800:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2804:	add	r3, r3, #4096	; 0x1000
    2808:	ldr	r3, [r3, #3012]	; 0xbc4
    280c:	ldrb	r2, [fp, #-59]	; 0xffffffc5
    2810:	add	r3, r3, r2
    2814:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2818:	add	r2, r2, #4096	; 0x1000
    281c:	str	r3, [r2, #3012]	; 0xbc4
    2820:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    2824:	mov	r2, r3
    2828:	ldr	r3, [fp, #-52]	; 0xffffffcc
    282c:	str	r2, [r3, #64]	; 0x40
    2830:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2834:	cmp	r3, #0
    2838:	bne	284c <coda_inflate+0x1fa4>
    283c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2840:	mov	r2, #25
    2844:	str	r2, [r3]
    2848:	b	324c <coda_inflate+0x29a4>
    284c:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2850:	and	r3, r3, #32
    2854:	cmp	r3, #0
    2858:	beq	2880 <coda_inflate+0x1fd8>
    285c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2860:	add	r3, r3, #4096	; 0x1000
    2864:	mov	r2, r3
    2868:	mvn	r3, #0
    286c:	str	r3, [r2, #3012]	; 0xbc4
    2870:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2874:	mov	r2, #11
    2878:	str	r2, [r3]
    287c:	b	324c <coda_inflate+0x29a4>
    2880:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2884:	and	r3, r3, #64	; 0x40
    2888:	cmp	r3, #0
    288c:	beq	28b0 <coda_inflate+0x2008>
    2890:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2894:	movw	r3, #0
    2898:	movt	r3, #0
    289c:	str	r3, [r2, #24]
    28a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28a4:	mov	r2, #29
    28a8:	str	r2, [r3]
    28ac:	b	324c <coda_inflate+0x29a4>
    28b0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    28b4:	and	r2, r3, #15
    28b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28bc:	str	r2, [r3, #72]	; 0x48
    28c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28c4:	mov	r2, #21
    28c8:	str	r2, [r3]
    28cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28d0:	ldr	r3, [r3, #72]	; 0x48
    28d4:	cmp	r3, #0
    28d8:	beq	29c4 <coda_inflate+0x211c>
    28dc:	b	292c <coda_inflate+0x2084>
    28e0:	ldr	r3, [fp, #-16]
    28e4:	cmp	r3, #0
    28e8:	beq	3310 <coda_inflate+0x2a68>
    28ec:	ldr	r3, [fp, #-16]
    28f0:	sub	r3, r3, #1
    28f4:	str	r3, [fp, #-16]
    28f8:	ldr	r3, [fp, #-8]
    28fc:	add	r2, r3, #1
    2900:	str	r2, [fp, #-8]
    2904:	ldrb	r3, [r3]
    2908:	mov	r2, r3
    290c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2910:	lsl	r3, r2, r3
    2914:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2918:	add	r3, r2, r3
    291c:	str	r3, [fp, #-24]	; 0xffffffe8
    2920:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2924:	add	r3, r3, #8
    2928:	str	r3, [fp, #-28]	; 0xffffffe4
    292c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2930:	ldr	r3, [r3, #72]	; 0x48
    2934:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2938:	cmp	r2, r3
    293c:	bcc	28e0 <coda_inflate+0x2038>
    2940:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2944:	ldr	r2, [r3, #64]	; 0x40
    2948:	ldr	r3, [fp, #-52]	; 0xffffffcc
    294c:	ldr	r3, [r3, #72]	; 0x48
    2950:	mvn	r1, #0
    2954:	lsl	r3, r1, r3
    2958:	mvn	r1, r3
    295c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2960:	and	r3, r3, r1
    2964:	add	r2, r2, r3
    2968:	ldr	r3, [fp, #-52]	; 0xffffffcc
    296c:	str	r2, [r3, #64]	; 0x40
    2970:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2974:	ldr	r3, [r3, #72]	; 0x48
    2978:	ldr	r2, [fp, #-24]	; 0xffffffe8
    297c:	lsr	r3, r2, r3
    2980:	str	r3, [fp, #-24]	; 0xffffffe8
    2984:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2988:	ldr	r3, [r3, #72]	; 0x48
    298c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2990:	sub	r3, r2, r3
    2994:	str	r3, [fp, #-28]	; 0xffffffe4
    2998:	ldr	r3, [fp, #-52]	; 0xffffffcc
    299c:	add	r3, r3, #4096	; 0x1000
    29a0:	ldr	r3, [r3, #3012]	; 0xbc4
    29a4:	mov	r2, r3
    29a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29ac:	ldr	r3, [r3, #72]	; 0x48
    29b0:	add	r3, r2, r3
    29b4:	mov	r2, r3
    29b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29bc:	add	r3, r3, #4096	; 0x1000
    29c0:	str	r2, [r3, #3012]	; 0xbc4
    29c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29c8:	ldr	r3, [r3, #64]	; 0x40
    29cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    29d0:	add	r2, r2, #4096	; 0x1000
    29d4:	str	r3, [r2, #3016]	; 0xbc8
    29d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29dc:	mov	r2, #22
    29e0:	str	r2, [r3]
    29e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29e8:	ldr	r2, [r3, #80]	; 0x50
    29ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29f0:	ldr	r3, [r3, #88]	; 0x58
    29f4:	mvn	r1, #0
    29f8:	lsl	r3, r1, r3
    29fc:	mvn	r1, r3
    2a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a04:	and	r3, r3, r1
    2a08:	lsl	r3, r3, #2
    2a0c:	add	r2, r2, r3
    2a10:	sub	r3, fp, #60	; 0x3c
    2a14:	ldr	r2, [r2]
    2a18:	str	r2, [r3]
    2a1c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2a20:	mov	r2, r3
    2a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a28:	cmp	r3, r2
    2a2c:	bcs	2a80 <coda_inflate+0x21d8>
    2a30:	ldr	r3, [fp, #-16]
    2a34:	cmp	r3, #0
    2a38:	beq	3318 <coda_inflate+0x2a70>
    2a3c:	ldr	r3, [fp, #-16]
    2a40:	sub	r3, r3, #1
    2a44:	str	r3, [fp, #-16]
    2a48:	ldr	r3, [fp, #-8]
    2a4c:	add	r2, r3, #1
    2a50:	str	r2, [fp, #-8]
    2a54:	ldrb	r3, [r3]
    2a58:	mov	r2, r3
    2a5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a60:	lsl	r3, r2, r3
    2a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a68:	add	r3, r2, r3
    2a6c:	str	r3, [fp, #-24]	; 0xffffffe8
    2a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a74:	add	r3, r3, #8
    2a78:	str	r3, [fp, #-28]	; 0xffffffe4
    2a7c:	b	29e4 <coda_inflate+0x213c>
    2a80:	nop	{0}
    2a84:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2a88:	and	r3, r3, #240	; 0xf0
    2a8c:	cmp	r3, #0
    2a90:	bne	2bac <coda_inflate+0x2304>
    2a94:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2a98:	str	r3, [fp, #-64]	; 0xffffffc0
    2a9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2aa0:	ldr	r2, [r3, #80]	; 0x50
    2aa4:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    2aa8:	mov	r0, r3
    2aac:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2ab0:	mov	r1, r3
    2ab4:	ldrb	r3, [fp, #-64]	; 0xffffffc0
    2ab8:	add	r3, r1, r3
    2abc:	mvn	r1, #0
    2ac0:	lsl	r3, r1, r3
    2ac4:	mvn	r1, r3
    2ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2acc:	and	r3, r3, r1
    2ad0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
    2ad4:	lsr	r3, r3, r1
    2ad8:	add	r3, r0, r3
    2adc:	lsl	r3, r3, #2
    2ae0:	add	r2, r2, r3
    2ae4:	sub	r3, fp, #60	; 0x3c
    2ae8:	ldr	r2, [r2]
    2aec:	str	r2, [r3]
    2af0:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2af4:	mov	r2, r3
    2af8:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2afc:	add	r3, r2, r3
    2b00:	mov	r2, r3
    2b04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b08:	cmp	r3, r2
    2b0c:	bcs	2b60 <coda_inflate+0x22b8>
    2b10:	ldr	r3, [fp, #-16]
    2b14:	cmp	r3, #0
    2b18:	beq	3320 <coda_inflate+0x2a78>
    2b1c:	ldr	r3, [fp, #-16]
    2b20:	sub	r3, r3, #1
    2b24:	str	r3, [fp, #-16]
    2b28:	ldr	r3, [fp, #-8]
    2b2c:	add	r2, r3, #1
    2b30:	str	r2, [fp, #-8]
    2b34:	ldrb	r3, [r3]
    2b38:	mov	r2, r3
    2b3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b40:	lsl	r3, r2, r3
    2b44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b48:	add	r3, r2, r3
    2b4c:	str	r3, [fp, #-24]	; 0xffffffe8
    2b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b54:	add	r3, r3, #8
    2b58:	str	r3, [fp, #-28]	; 0xffffffe4
    2b5c:	b	2a9c <coda_inflate+0x21f4>
    2b60:	nop	{0}
    2b64:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2b68:	mov	r2, r3
    2b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b70:	lsr	r3, r3, r2
    2b74:	str	r3, [fp, #-24]	; 0xffffffe8
    2b78:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2b7c:	mov	r2, r3
    2b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b84:	sub	r3, r3, r2
    2b88:	str	r3, [fp, #-28]	; 0xffffffe4
    2b8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b90:	add	r3, r3, #4096	; 0x1000
    2b94:	ldr	r3, [r3, #3012]	; 0xbc4
    2b98:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    2b9c:	add	r3, r3, r2
    2ba0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2ba4:	add	r2, r2, #4096	; 0x1000
    2ba8:	str	r3, [r2, #3012]	; 0xbc4
    2bac:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2bb0:	mov	r2, r3
    2bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2bb8:	lsr	r3, r3, r2
    2bbc:	str	r3, [fp, #-24]	; 0xffffffe8
    2bc0:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2bc4:	mov	r2, r3
    2bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2bcc:	sub	r3, r3, r2
    2bd0:	str	r3, [fp, #-28]	; 0xffffffe4
    2bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2bd8:	add	r3, r3, #4096	; 0x1000
    2bdc:	ldr	r3, [r3, #3012]	; 0xbc4
    2be0:	ldrb	r2, [fp, #-59]	; 0xffffffc5
    2be4:	add	r3, r3, r2
    2be8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2bec:	add	r2, r2, #4096	; 0x1000
    2bf0:	str	r3, [r2, #3012]	; 0xbc4
    2bf4:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2bf8:	and	r3, r3, #64	; 0x40
    2bfc:	cmp	r3, #0
    2c00:	beq	2c24 <coda_inflate+0x237c>
    2c04:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2c08:	movw	r3, #0
    2c0c:	movt	r3, #0
    2c10:	str	r3, [r2, #24]
    2c14:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c18:	mov	r2, #29
    2c1c:	str	r2, [r3]
    2c20:	b	324c <coda_inflate+0x29a4>
    2c24:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    2c28:	mov	r2, r3
    2c2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c30:	str	r2, [r3, #68]	; 0x44
    2c34:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2c38:	and	r2, r3, #15
    2c3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c40:	str	r2, [r3, #72]	; 0x48
    2c44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c48:	mov	r2, #23
    2c4c:	str	r2, [r3]
    2c50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c54:	ldr	r3, [r3, #72]	; 0x48
    2c58:	cmp	r3, #0
    2c5c:	beq	2d48 <coda_inflate+0x24a0>
    2c60:	b	2cb0 <coda_inflate+0x2408>
    2c64:	ldr	r3, [fp, #-16]
    2c68:	cmp	r3, #0
    2c6c:	beq	3328 <coda_inflate+0x2a80>
    2c70:	ldr	r3, [fp, #-16]
    2c74:	sub	r3, r3, #1
    2c78:	str	r3, [fp, #-16]
    2c7c:	ldr	r3, [fp, #-8]
    2c80:	add	r2, r3, #1
    2c84:	str	r2, [fp, #-8]
    2c88:	ldrb	r3, [r3]
    2c8c:	mov	r2, r3
    2c90:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c94:	lsl	r3, r2, r3
    2c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c9c:	add	r3, r2, r3
    2ca0:	str	r3, [fp, #-24]	; 0xffffffe8
    2ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2ca8:	add	r3, r3, #8
    2cac:	str	r3, [fp, #-28]	; 0xffffffe4
    2cb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cb4:	ldr	r3, [r3, #72]	; 0x48
    2cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2cbc:	cmp	r2, r3
    2cc0:	bcc	2c64 <coda_inflate+0x23bc>
    2cc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cc8:	ldr	r2, [r3, #68]	; 0x44
    2ccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cd0:	ldr	r3, [r3, #72]	; 0x48
    2cd4:	mvn	r1, #0
    2cd8:	lsl	r3, r1, r3
    2cdc:	mvn	r1, r3
    2ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ce4:	and	r3, r3, r1
    2ce8:	add	r2, r2, r3
    2cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cf0:	str	r2, [r3, #68]	; 0x44
    2cf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cf8:	ldr	r3, [r3, #72]	; 0x48
    2cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d00:	lsr	r3, r2, r3
    2d04:	str	r3, [fp, #-24]	; 0xffffffe8
    2d08:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d0c:	ldr	r3, [r3, #72]	; 0x48
    2d10:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2d14:	sub	r3, r2, r3
    2d18:	str	r3, [fp, #-28]	; 0xffffffe4
    2d1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d20:	add	r3, r3, #4096	; 0x1000
    2d24:	ldr	r3, [r3, #3012]	; 0xbc4
    2d28:	mov	r2, r3
    2d2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d30:	ldr	r3, [r3, #72]	; 0x48
    2d34:	add	r3, r2, r3
    2d38:	mov	r2, r3
    2d3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d40:	add	r3, r3, #4096	; 0x1000
    2d44:	str	r2, [r3, #3012]	; 0xbc4
    2d48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d4c:	mov	r2, #24
    2d50:	str	r2, [r3]
    2d54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d58:	cmp	r3, #0
    2d5c:	beq	3330 <coda_inflate+0x2a88>
    2d60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2d64:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d68:	sub	r3, r2, r3
    2d6c:	str	r3, [fp, #-36]	; 0xffffffdc
    2d70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d74:	ldr	r3, [r3, #68]	; 0x44
    2d78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2d7c:	cmp	r2, r3
    2d80:	bcs	2e70 <coda_inflate+0x25c8>
    2d84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d88:	ldr	r2, [r3, #68]	; 0x44
    2d8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d90:	sub	r3, r2, r3
    2d94:	str	r3, [fp, #-36]	; 0xffffffdc
    2d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d9c:	ldr	r3, [r3, #44]	; 0x2c
    2da0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2da4:	cmp	r2, r3
    2da8:	bls	2de0 <coda_inflate+0x2538>
    2dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2db0:	add	r3, r3, #4096	; 0x1000
    2db4:	ldr	r3, [r3, #3008]	; 0xbc0
    2db8:	cmp	r3, #0
    2dbc:	beq	2de0 <coda_inflate+0x2538>
    2dc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2dc4:	movw	r3, #0
    2dc8:	movt	r3, #0
    2dcc:	str	r3, [r2, #24]
    2dd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2dd4:	mov	r2, #29
    2dd8:	str	r2, [r3]
    2ddc:	b	324c <coda_inflate+0x29a4>
    2de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2de4:	ldr	r3, [r3, #48]	; 0x30
    2de8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2dec:	cmp	r2, r3
    2df0:	bls	2e2c <coda_inflate+0x2584>
    2df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2df8:	ldr	r3, [r3, #48]	; 0x30
    2dfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2e00:	sub	r3, r2, r3
    2e04:	str	r3, [fp, #-36]	; 0xffffffdc
    2e08:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e0c:	ldr	r2, [r3, #52]	; 0x34
    2e10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e14:	ldr	r1, [r3, #40]	; 0x28
    2e18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e1c:	sub	r3, r1, r3
    2e20:	add	r3, r2, r3
    2e24:	str	r3, [fp, #-40]	; 0xffffffd8
    2e28:	b	2e4c <coda_inflate+0x25a4>
    2e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e30:	ldr	r2, [r3, #52]	; 0x34
    2e34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e38:	ldr	r1, [r3, #48]	; 0x30
    2e3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e40:	sub	r3, r1, r3
    2e44:	add	r3, r2, r3
    2e48:	str	r3, [fp, #-40]	; 0xffffffd8
    2e4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e50:	ldr	r3, [r3, #64]	; 0x40
    2e54:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2e58:	cmp	r2, r3
    2e5c:	bls	2e94 <coda_inflate+0x25ec>
    2e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e64:	ldr	r3, [r3, #64]	; 0x40
    2e68:	str	r3, [fp, #-36]	; 0xffffffdc
    2e6c:	b	2e94 <coda_inflate+0x25ec>
    2e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e74:	ldr	r3, [r3, #68]	; 0x44
    2e78:	rsb	r3, r3, #0
    2e7c:	ldr	r2, [fp, #-12]
    2e80:	add	r3, r2, r3
    2e84:	str	r3, [fp, #-40]	; 0xffffffd8
    2e88:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e8c:	ldr	r3, [r3, #64]	; 0x40
    2e90:	str	r3, [fp, #-36]	; 0xffffffdc
    2e94:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2e98:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e9c:	cmp	r2, r3
    2ea0:	bls	2eac <coda_inflate+0x2604>
    2ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ea8:	str	r3, [fp, #-36]	; 0xffffffdc
    2eac:	ldr	r2, [fp, #-20]	; 0xffffffec
    2eb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2eb4:	sub	r3, r2, r3
    2eb8:	str	r3, [fp, #-20]	; 0xffffffec
    2ebc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ec0:	ldr	r2, [r3, #64]	; 0x40
    2ec4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ec8:	sub	r2, r2, r3
    2ecc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ed0:	str	r2, [r3, #64]	; 0x40
    2ed4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2ed8:	add	r3, r2, #1
    2edc:	str	r3, [fp, #-40]	; 0xffffffd8
    2ee0:	ldr	r3, [fp, #-12]
    2ee4:	add	r1, r3, #1
    2ee8:	str	r1, [fp, #-12]
    2eec:	ldrb	r2, [r2]
    2ef0:	strb	r2, [r3]
    2ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ef8:	sub	r3, r3, #1
    2efc:	str	r3, [fp, #-36]	; 0xffffffdc
    2f00:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2f04:	cmp	r3, #0
    2f08:	bne	2ed4 <coda_inflate+0x262c>
    2f0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f10:	ldr	r3, [r3, #64]	; 0x40
    2f14:	cmp	r3, #0
    2f18:	bne	3248 <coda_inflate+0x29a0>
    2f1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f20:	mov	r2, #20
    2f24:	str	r2, [r3]
    2f28:	b	3248 <coda_inflate+0x29a0>
    2f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f30:	cmp	r3, #0
    2f34:	beq	3338 <coda_inflate+0x2a90>
    2f38:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f3c:	ldr	r1, [r3, #64]	; 0x40
    2f40:	ldr	r3, [fp, #-12]
    2f44:	add	r2, r3, #1
    2f48:	str	r2, [fp, #-12]
    2f4c:	uxtb	r2, r1
    2f50:	strb	r2, [r3]
    2f54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f58:	sub	r3, r3, #1
    2f5c:	str	r3, [fp, #-20]	; 0xffffffec
    2f60:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f64:	mov	r2, #20
    2f68:	str	r2, [r3]
    2f6c:	b	324c <coda_inflate+0x29a4>
    2f70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f74:	ldr	r3, [r3, #8]
    2f78:	cmp	r3, #0
    2f7c:	beq	3138 <coda_inflate+0x2890>
    2f80:	b	2fd0 <coda_inflate+0x2728>
    2f84:	ldr	r3, [fp, #-16]
    2f88:	cmp	r3, #0
    2f8c:	beq	3340 <coda_inflate+0x2a98>
    2f90:	ldr	r3, [fp, #-16]
    2f94:	sub	r3, r3, #1
    2f98:	str	r3, [fp, #-16]
    2f9c:	ldr	r3, [fp, #-8]
    2fa0:	add	r2, r3, #1
    2fa4:	str	r2, [fp, #-8]
    2fa8:	ldrb	r3, [r3]
    2fac:	mov	r2, r3
    2fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2fb4:	lsl	r3, r2, r3
    2fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2fbc:	add	r3, r2, r3
    2fc0:	str	r3, [fp, #-24]	; 0xffffffe8
    2fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2fc8:	add	r3, r3, #8
    2fcc:	str	r3, [fp, #-28]	; 0xffffffe4
    2fd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2fd4:	cmp	r3, #31
    2fd8:	bls	2f84 <coda_inflate+0x26dc>
    2fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2fe4:	sub	r3, r2, r3
    2fe8:	str	r3, [fp, #-32]	; 0xffffffe0
    2fec:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2ff0:	ldr	r2, [r3, #20]
    2ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2ff8:	add	r2, r2, r3
    2ffc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3000:	str	r2, [r3, #20]
    3004:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3008:	ldr	r2, [r3, #28]
    300c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3010:	add	r2, r2, r3
    3014:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3018:	str	r2, [r3, #28]
    301c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3020:	cmp	r3, #0
    3024:	beq	30a4 <coda_inflate+0x27fc>
    3028:	ldr	r3, [fp, #-52]	; 0xffffffcc
    302c:	ldr	r3, [r3, #16]
    3030:	cmp	r3, #0
    3034:	beq	3064 <coda_inflate+0x27bc>
    3038:	ldr	r3, [fp, #-52]	; 0xffffffcc
    303c:	ldr	r0, [r3, #24]
    3040:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3044:	rsb	r3, r3, #0
    3048:	ldr	r2, [fp, #-12]
    304c:	add	r3, r2, r3
    3050:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3054:	mov	r1, r3
    3058:	bl	0 <coda_crc32>
    305c:	mov	r2, r0
    3060:	b	308c <coda_inflate+0x27e4>
    3064:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3068:	ldr	r0, [r3, #24]
    306c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3070:	rsb	r3, r3, #0
    3074:	ldr	r2, [fp, #-12]
    3078:	add	r3, r2, r3
    307c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3080:	mov	r1, r3
    3084:	bl	0 <coda_adler32>
    3088:	mov	r2, r0
    308c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3090:	str	r2, [r3, #24]
    3094:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3098:	ldr	r2, [r3, #24]
    309c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    30a0:	str	r2, [r3, #48]	; 0x30
    30a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    30a8:	str	r3, [fp, #-32]	; 0xffffffe0
    30ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30b0:	ldr	r3, [r3, #16]
    30b4:	cmp	r3, #0
    30b8:	bne	30f4 <coda_inflate+0x284c>
    30bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30c0:	lsr	r2, r3, #24
    30c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30c8:	lsr	r3, r3, #8
    30cc:	and	r3, r3, #65280	; 0xff00
    30d0:	add	r2, r2, r3
    30d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30d8:	lsl	r3, r3, #8
    30dc:	and	r3, r3, #16711680	; 0xff0000
    30e0:	add	r2, r2, r3
    30e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30e8:	lsl	r3, r3, #24
    30ec:	add	r3, r2, r3
    30f0:	b	30f8 <coda_inflate+0x2850>
    30f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    30fc:	ldr	r2, [r2, #24]
    3100:	cmp	r3, r2
    3104:	beq	3128 <coda_inflate+0x2880>
    3108:	ldr	r2, [fp, #-72]	; 0xffffffb8
    310c:	movw	r3, #0
    3110:	movt	r3, #0
    3114:	str	r3, [r2, #24]
    3118:	ldr	r3, [fp, #-52]	; 0xffffffcc
    311c:	mov	r2, #29
    3120:	str	r2, [r3]
    3124:	b	324c <coda_inflate+0x29a4>
    3128:	mov	r3, #0
    312c:	str	r3, [fp, #-24]	; 0xffffffe8
    3130:	mov	r3, #0
    3134:	str	r3, [fp, #-28]	; 0xffffffe4
    3138:	ldr	r3, [fp, #-52]	; 0xffffffcc
    313c:	mov	r2, #27
    3140:	str	r2, [r3]
    3144:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3148:	ldr	r3, [r3, #8]
    314c:	cmp	r3, #0
    3150:	beq	3204 <coda_inflate+0x295c>
    3154:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3158:	ldr	r3, [r3, #16]
    315c:	cmp	r3, #0
    3160:	beq	3204 <coda_inflate+0x295c>
    3164:	b	31b4 <coda_inflate+0x290c>
    3168:	ldr	r3, [fp, #-16]
    316c:	cmp	r3, #0
    3170:	beq	3348 <coda_inflate+0x2aa0>
    3174:	ldr	r3, [fp, #-16]
    3178:	sub	r3, r3, #1
    317c:	str	r3, [fp, #-16]
    3180:	ldr	r3, [fp, #-8]
    3184:	add	r2, r3, #1
    3188:	str	r2, [fp, #-8]
    318c:	ldrb	r3, [r3]
    3190:	mov	r2, r3
    3194:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3198:	lsl	r3, r2, r3
    319c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31a0:	add	r3, r2, r3
    31a4:	str	r3, [fp, #-24]	; 0xffffffe8
    31a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    31ac:	add	r3, r3, #8
    31b0:	str	r3, [fp, #-28]	; 0xffffffe4
    31b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    31b8:	cmp	r3, #31
    31bc:	bls	3168 <coda_inflate+0x28c0>
    31c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31c4:	ldr	r3, [r3, #28]
    31c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31cc:	cmp	r2, r3
    31d0:	beq	31f4 <coda_inflate+0x294c>
    31d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    31d8:	movw	r3, #0
    31dc:	movt	r3, #0
    31e0:	str	r3, [r2, #24]
    31e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31e8:	mov	r2, #29
    31ec:	str	r2, [r3]
    31f0:	b	324c <coda_inflate+0x29a4>
    31f4:	mov	r3, #0
    31f8:	str	r3, [fp, #-24]	; 0xffffffe8
    31fc:	mov	r3, #0
    3200:	str	r3, [fp, #-28]	; 0xffffffe4
    3204:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3208:	mov	r2, #28
    320c:	str	r2, [r3]
    3210:	mov	r3, #1
    3214:	str	r3, [fp, #-48]	; 0xffffffd0
    3218:	b	334c <coda_inflate+0x2aa4>
    321c:	mvn	r3, #2
    3220:	str	r3, [fp, #-48]	; 0xffffffd0
    3224:	b	334c <coda_inflate+0x2aa4>
    3228:	mvn	r3, #3
    322c:	b	35f8 <coda_inflate+0x2d50>
    3230:	mvn	r3, #1
    3234:	b	35f8 <coda_inflate+0x2d50>
    3238:	nop	{0}
    323c:	b	99c <coda_inflate+0xf4>
    3240:	nop	{0}
    3244:	b	99c <coda_inflate+0xf4>
    3248:	nop	{0}
    324c:	b	99c <coda_inflate+0xf4>
    3250:	nop	{0}
    3254:	b	334c <coda_inflate+0x2aa4>
    3258:	nop	{0}
    325c:	b	334c <coda_inflate+0x2aa4>
    3260:	nop	{0}
    3264:	b	334c <coda_inflate+0x2aa4>
    3268:	nop	{0}
    326c:	b	334c <coda_inflate+0x2aa4>
    3270:	nop	{0}
    3274:	b	334c <coda_inflate+0x2aa4>
    3278:	nop	{0}
    327c:	b	334c <coda_inflate+0x2aa4>
    3280:	nop	{0}
    3284:	b	334c <coda_inflate+0x2aa4>
    3288:	nop	{0}
    328c:	b	334c <coda_inflate+0x2aa4>
    3290:	nop	{0}
    3294:	b	334c <coda_inflate+0x2aa4>
    3298:	nop	{0}
    329c:	b	334c <coda_inflate+0x2aa4>
    32a0:	nop	{0}
    32a4:	b	334c <coda_inflate+0x2aa4>
    32a8:	nop	{0}
    32ac:	b	334c <coda_inflate+0x2aa4>
    32b0:	nop	{0}
    32b4:	b	334c <coda_inflate+0x2aa4>
    32b8:	nop	{0}
    32bc:	b	334c <coda_inflate+0x2aa4>
    32c0:	nop	{0}
    32c4:	b	334c <coda_inflate+0x2aa4>
    32c8:	nop	{0}
    32cc:	b	334c <coda_inflate+0x2aa4>
    32d0:	nop	{0}
    32d4:	b	334c <coda_inflate+0x2aa4>
    32d8:	nop	{0}
    32dc:	b	334c <coda_inflate+0x2aa4>
    32e0:	nop	{0}
    32e4:	b	334c <coda_inflate+0x2aa4>
    32e8:	nop	{0}
    32ec:	b	334c <coda_inflate+0x2aa4>
    32f0:	nop	{0}
    32f4:	b	334c <coda_inflate+0x2aa4>
    32f8:	nop	{0}
    32fc:	b	334c <coda_inflate+0x2aa4>
    3300:	nop	{0}
    3304:	b	334c <coda_inflate+0x2aa4>
    3308:	nop	{0}
    330c:	b	334c <coda_inflate+0x2aa4>
    3310:	nop	{0}
    3314:	b	334c <coda_inflate+0x2aa4>
    3318:	nop	{0}
    331c:	b	334c <coda_inflate+0x2aa4>
    3320:	nop	{0}
    3324:	b	334c <coda_inflate+0x2aa4>
    3328:	nop	{0}
    332c:	b	334c <coda_inflate+0x2aa4>
    3330:	nop	{0}
    3334:	b	334c <coda_inflate+0x2aa4>
    3338:	nop	{0}
    333c:	b	334c <coda_inflate+0x2aa4>
    3340:	nop	{0}
    3344:	b	334c <coda_inflate+0x2aa4>
    3348:	nop	{0}
    334c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3350:	ldr	r2, [fp, #-12]
    3354:	str	r2, [r3, #12]
    3358:	ldr	r3, [fp, #-72]	; 0xffffffb8
    335c:	ldr	r2, [fp, #-20]	; 0xffffffec
    3360:	str	r2, [r3, #16]
    3364:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3368:	ldr	r2, [fp, #-8]
    336c:	str	r2, [r3]
    3370:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3374:	ldr	r2, [fp, #-16]
    3378:	str	r2, [r3, #4]
    337c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3380:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3384:	str	r2, [r3, #56]	; 0x38
    3388:	ldr	r3, [fp, #-52]	; 0xffffffcc
    338c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3390:	str	r2, [r3, #60]	; 0x3c
    3394:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3398:	ldr	r3, [r3, #40]	; 0x28
    339c:	cmp	r3, #0
    33a0:	bne	33e4 <coda_inflate+0x2b3c>
    33a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    33a8:	ldr	r3, [r3, #16]
    33ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    33b0:	cmp	r2, r3
    33b4:	beq	3428 <coda_inflate+0x2b80>
    33b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33bc:	ldr	r3, [r3]
    33c0:	cmp	r3, #28
    33c4:	bhi	3428 <coda_inflate+0x2b80>
    33c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33cc:	ldr	r3, [r3]
    33d0:	cmp	r3, #25
    33d4:	bls	33e4 <coda_inflate+0x2b3c>
    33d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    33dc:	cmp	r3, #4
    33e0:	beq	3428 <coda_inflate+0x2b80>
    33e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    33e8:	ldr	r1, [r3, #12]
    33ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
    33f0:	ldr	r3, [r3, #16]
    33f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    33f8:	sub	r3, r2, r3
    33fc:	mov	r2, r3
    3400:	ldr	r0, [fp, #-72]	; 0xffffffb8
    3404:	bl	640 <updatewindow>
    3408:	mov	r3, r0
    340c:	cmp	r3, #0
    3410:	beq	3428 <coda_inflate+0x2b80>
    3414:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3418:	mov	r2, #30
    341c:	str	r2, [r3]
    3420:	mvn	r3, #3
    3424:	b	35f8 <coda_inflate+0x2d50>
    3428:	ldr	r3, [fp, #-72]	; 0xffffffb8
    342c:	ldr	r3, [r3, #4]
    3430:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3434:	sub	r3, r2, r3
    3438:	str	r3, [fp, #-56]	; 0xffffffc8
    343c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3440:	ldr	r3, [r3, #16]
    3444:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3448:	sub	r3, r2, r3
    344c:	str	r3, [fp, #-32]	; 0xffffffe0
    3450:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3454:	ldr	r2, [r3, #8]
    3458:	ldr	r3, [fp, #-56]	; 0xffffffc8
    345c:	add	r2, r2, r3
    3460:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3464:	str	r2, [r3, #8]
    3468:	ldr	r3, [fp, #-72]	; 0xffffffb8
    346c:	ldr	r2, [r3, #20]
    3470:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3474:	add	r2, r2, r3
    3478:	ldr	r3, [fp, #-72]	; 0xffffffb8
    347c:	str	r2, [r3, #20]
    3480:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3484:	ldr	r2, [r3, #28]
    3488:	ldr	r3, [fp, #-32]	; 0xffffffe0
    348c:	add	r2, r2, r3
    3490:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3494:	str	r2, [r3, #28]
    3498:	ldr	r3, [fp, #-52]	; 0xffffffcc
    349c:	ldr	r3, [r3, #8]
    34a0:	cmp	r3, #0
    34a4:	beq	3538 <coda_inflate+0x2c90>
    34a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34ac:	cmp	r3, #0
    34b0:	beq	3538 <coda_inflate+0x2c90>
    34b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34b8:	ldr	r3, [r3, #16]
    34bc:	cmp	r3, #0
    34c0:	beq	34f4 <coda_inflate+0x2c4c>
    34c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34c8:	ldr	r0, [r3, #24]
    34cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    34d0:	ldr	r2, [r3, #12]
    34d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34d8:	rsb	r3, r3, #0
    34dc:	add	r3, r2, r3
    34e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    34e4:	mov	r1, r3
    34e8:	bl	0 <coda_crc32>
    34ec:	mov	r2, r0
    34f0:	b	3520 <coda_inflate+0x2c78>
    34f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34f8:	ldr	r0, [r3, #24]
    34fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3500:	ldr	r2, [r3, #12]
    3504:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3508:	rsb	r3, r3, #0
    350c:	add	r3, r2, r3
    3510:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3514:	mov	r1, r3
    3518:	bl	0 <coda_adler32>
    351c:	mov	r2, r0
    3520:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3524:	str	r2, [r3, #24]
    3528:	ldr	r3, [fp, #-52]	; 0xffffffcc
    352c:	ldr	r2, [r3, #24]
    3530:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3534:	str	r2, [r3, #48]	; 0x30
    3538:	ldr	r3, [fp, #-52]	; 0xffffffcc
    353c:	ldr	r3, [r3, #60]	; 0x3c
    3540:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3544:	ldr	r2, [r2, #4]
    3548:	cmp	r2, #0
    354c:	beq	3558 <coda_inflate+0x2cb0>
    3550:	mov	r2, #64	; 0x40
    3554:	b	355c <coda_inflate+0x2cb4>
    3558:	mov	r2, #0
    355c:	add	r3, r2, r3
    3560:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3564:	ldr	r2, [r2]
    3568:	cmp	r2, #11
    356c:	bne	3578 <coda_inflate+0x2cd0>
    3570:	mov	r2, #128	; 0x80
    3574:	b	357c <coda_inflate+0x2cd4>
    3578:	mov	r2, #0
    357c:	add	r3, r2, r3
    3580:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3584:	ldr	r2, [r2]
    3588:	cmp	r2, #19
    358c:	beq	35a0 <coda_inflate+0x2cf8>
    3590:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3594:	ldr	r2, [r2]
    3598:	cmp	r2, #14
    359c:	bne	35a8 <coda_inflate+0x2d00>
    35a0:	mov	r2, #256	; 0x100
    35a4:	b	35ac <coda_inflate+0x2d04>
    35a8:	mov	r2, #0
    35ac:	add	r3, r2, r3
    35b0:	mov	r2, r3
    35b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    35b8:	str	r2, [r3, #44]	; 0x2c
    35bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    35c0:	cmp	r3, #0
    35c4:	bne	35d4 <coda_inflate+0x2d2c>
    35c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    35cc:	cmp	r3, #0
    35d0:	beq	35e0 <coda_inflate+0x2d38>
    35d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    35d8:	cmp	r3, #4
    35dc:	bne	35f4 <coda_inflate+0x2d4c>
    35e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    35e4:	cmp	r3, #0
    35e8:	bne	35f4 <coda_inflate+0x2d4c>
    35ec:	mvn	r3, #4
    35f0:	str	r3, [fp, #-48]	; 0xffffffd0
    35f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    35f8:	mov	r0, r3
    35fc:	sub	sp, fp, #4
    3600:	ldr	fp, [sp]
    3604:	add	sp, sp, #4
    3608:	pop	{pc}		; (ldr pc, [sp], #4)

0000360c <coda_inflateEnd>:
    360c:	str	fp, [sp, #-8]!
    3610:	str	lr, [sp, #4]
    3614:	add	fp, sp, #4
    3618:	sub	sp, sp, #16
    361c:	str	r0, [fp, #-16]
    3620:	ldr	r3, [fp, #-16]
    3624:	cmp	r3, #0
    3628:	beq	364c <coda_inflateEnd+0x40>
    362c:	ldr	r3, [fp, #-16]
    3630:	ldr	r3, [r3, #28]
    3634:	cmp	r3, #0
    3638:	beq	364c <coda_inflateEnd+0x40>
    363c:	ldr	r3, [fp, #-16]
    3640:	ldr	r3, [r3, #36]	; 0x24
    3644:	cmp	r3, #0
    3648:	bne	3654 <coda_inflateEnd+0x48>
    364c:	mvn	r3, #1
    3650:	b	36c0 <coda_inflateEnd+0xb4>
    3654:	ldr	r3, [fp, #-16]
    3658:	ldr	r3, [r3, #28]
    365c:	str	r3, [fp, #-8]
    3660:	ldr	r3, [fp, #-8]
    3664:	ldr	r3, [r3, #52]	; 0x34
    3668:	cmp	r3, #0
    366c:	beq	3690 <coda_inflateEnd+0x84>
    3670:	ldr	r3, [fp, #-16]
    3674:	ldr	r3, [r3, #36]	; 0x24
    3678:	ldr	r2, [fp, #-16]
    367c:	ldr	r0, [r2, #40]	; 0x28
    3680:	ldr	r2, [fp, #-8]
    3684:	ldr	r2, [r2, #52]	; 0x34
    3688:	mov	r1, r2
    368c:	blx	r3
    3690:	ldr	r3, [fp, #-16]
    3694:	ldr	r3, [r3, #36]	; 0x24
    3698:	ldr	r2, [fp, #-16]
    369c:	ldr	r0, [r2, #40]	; 0x28
    36a0:	ldr	r2, [fp, #-16]
    36a4:	ldr	r2, [r2, #28]
    36a8:	mov	r1, r2
    36ac:	blx	r3
    36b0:	ldr	r3, [fp, #-16]
    36b4:	mov	r2, #0
    36b8:	str	r2, [r3, #28]
    36bc:	mov	r3, #0
    36c0:	mov	r0, r3
    36c4:	sub	sp, fp, #4
    36c8:	ldr	fp, [sp]
    36cc:	add	sp, sp, #4
    36d0:	pop	{pc}		; (ldr pc, [sp], #4)

000036d4 <coda_inflateGetDictionary>:
    36d4:	str	fp, [sp, #-8]!
    36d8:	str	lr, [sp, #4]
    36dc:	add	fp, sp, #4
    36e0:	sub	sp, sp, #24
    36e4:	str	r0, [fp, #-16]
    36e8:	str	r1, [fp, #-20]	; 0xffffffec
    36ec:	str	r2, [fp, #-24]	; 0xffffffe8
    36f0:	ldr	r3, [fp, #-16]
    36f4:	cmp	r3, #0
    36f8:	beq	370c <coda_inflateGetDictionary+0x38>
    36fc:	ldr	r3, [fp, #-16]
    3700:	ldr	r3, [r3, #28]
    3704:	cmp	r3, #0
    3708:	bne	3714 <coda_inflateGetDictionary+0x40>
    370c:	mvn	r3, #1
    3710:	b	37c4 <coda_inflateGetDictionary+0xf0>
    3714:	ldr	r3, [fp, #-16]
    3718:	ldr	r3, [r3, #28]
    371c:	str	r3, [fp, #-8]
    3720:	ldr	r3, [fp, #-8]
    3724:	ldr	r3, [r3, #44]	; 0x2c
    3728:	cmp	r3, #0
    372c:	beq	37a4 <coda_inflateGetDictionary+0xd0>
    3730:	ldr	r3, [fp, #-20]	; 0xffffffec
    3734:	cmp	r3, #0
    3738:	beq	37a4 <coda_inflateGetDictionary+0xd0>
    373c:	ldr	r3, [fp, #-8]
    3740:	ldr	r2, [r3, #52]	; 0x34
    3744:	ldr	r3, [fp, #-8]
    3748:	ldr	r3, [r3, #48]	; 0x30
    374c:	add	r1, r2, r3
    3750:	ldr	r3, [fp, #-8]
    3754:	ldr	r2, [r3, #44]	; 0x2c
    3758:	ldr	r3, [fp, #-8]
    375c:	ldr	r3, [r3, #48]	; 0x30
    3760:	sub	r3, r2, r3
    3764:	mov	r2, r3
    3768:	ldr	r0, [fp, #-20]	; 0xffffffec
    376c:	bl	0 <memcpy>
    3770:	ldr	r3, [fp, #-8]
    3774:	ldr	r2, [r3, #44]	; 0x2c
    3778:	ldr	r3, [fp, #-8]
    377c:	ldr	r3, [r3, #48]	; 0x30
    3780:	sub	r3, r2, r3
    3784:	ldr	r2, [fp, #-20]	; 0xffffffec
    3788:	add	r0, r2, r3
    378c:	ldr	r3, [fp, #-8]
    3790:	ldr	r1, [r3, #52]	; 0x34
    3794:	ldr	r3, [fp, #-8]
    3798:	ldr	r3, [r3, #48]	; 0x30
    379c:	mov	r2, r3
    37a0:	bl	0 <memcpy>
    37a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37a8:	cmp	r3, #0
    37ac:	beq	37c0 <coda_inflateGetDictionary+0xec>
    37b0:	ldr	r3, [fp, #-8]
    37b4:	ldr	r2, [r3, #44]	; 0x2c
    37b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37bc:	str	r2, [r3]
    37c0:	mov	r3, #0
    37c4:	mov	r0, r3
    37c8:	sub	sp, fp, #4
    37cc:	ldr	fp, [sp]
    37d0:	add	sp, sp, #4
    37d4:	pop	{pc}		; (ldr pc, [sp], #4)

000037d8 <coda_inflateSetDictionary>:
    37d8:	str	fp, [sp, #-8]!
    37dc:	str	lr, [sp, #4]
    37e0:	add	fp, sp, #4
    37e4:	sub	sp, sp, #32
    37e8:	str	r0, [fp, #-24]	; 0xffffffe8
    37ec:	str	r1, [fp, #-28]	; 0xffffffe4
    37f0:	str	r2, [fp, #-32]	; 0xffffffe0
    37f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37f8:	cmp	r3, #0
    37fc:	beq	3810 <coda_inflateSetDictionary+0x38>
    3800:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3804:	ldr	r3, [r3, #28]
    3808:	cmp	r3, #0
    380c:	bne	3818 <coda_inflateSetDictionary+0x40>
    3810:	mvn	r3, #1
    3814:	b	38f0 <coda_inflateSetDictionary+0x118>
    3818:	ldr	r3, [fp, #-24]	; 0xffffffe8
    381c:	ldr	r3, [r3, #28]
    3820:	str	r3, [fp, #-8]
    3824:	ldr	r3, [fp, #-8]
    3828:	ldr	r3, [r3, #8]
    382c:	cmp	r3, #0
    3830:	beq	384c <coda_inflateSetDictionary+0x74>
    3834:	ldr	r3, [fp, #-8]
    3838:	ldr	r3, [r3]
    383c:	cmp	r3, #10
    3840:	beq	384c <coda_inflateSetDictionary+0x74>
    3844:	mvn	r3, #1
    3848:	b	38f0 <coda_inflateSetDictionary+0x118>
    384c:	ldr	r3, [fp, #-8]
    3850:	ldr	r3, [r3]
    3854:	cmp	r3, #10
    3858:	bne	38a0 <coda_inflateSetDictionary+0xc8>
    385c:	mov	r2, #0
    3860:	mov	r1, #0
    3864:	mov	r0, #0
    3868:	bl	0 <coda_adler32>
    386c:	str	r0, [fp, #-12]
    3870:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3874:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3878:	ldr	r0, [fp, #-12]
    387c:	bl	0 <coda_adler32>
    3880:	str	r0, [fp, #-12]
    3884:	ldr	r3, [fp, #-8]
    3888:	ldr	r3, [r3, #24]
    388c:	ldr	r2, [fp, #-12]
    3890:	cmp	r2, r3
    3894:	beq	38a0 <coda_inflateSetDictionary+0xc8>
    3898:	mvn	r3, #2
    389c:	b	38f0 <coda_inflateSetDictionary+0x118>
    38a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    38a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    38a8:	add	r3, r2, r3
    38ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    38b0:	mov	r1, r3
    38b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    38b8:	bl	640 <updatewindow>
    38bc:	str	r0, [fp, #-16]
    38c0:	ldr	r3, [fp, #-16]
    38c4:	cmp	r3, #0
    38c8:	beq	38e0 <coda_inflateSetDictionary+0x108>
    38cc:	ldr	r3, [fp, #-8]
    38d0:	mov	r2, #30
    38d4:	str	r2, [r3]
    38d8:	mvn	r3, #3
    38dc:	b	38f0 <coda_inflateSetDictionary+0x118>
    38e0:	ldr	r3, [fp, #-8]
    38e4:	mov	r2, #1
    38e8:	str	r2, [r3, #12]
    38ec:	mov	r3, #0
    38f0:	mov	r0, r3
    38f4:	sub	sp, fp, #4
    38f8:	ldr	fp, [sp]
    38fc:	add	sp, sp, #4
    3900:	pop	{pc}		; (ldr pc, [sp], #4)

00003904 <coda_inflateGetHeader>:
    3904:	push	{fp}		; (str fp, [sp, #-4]!)
    3908:	add	fp, sp, #0
    390c:	sub	sp, sp, #20
    3910:	str	r0, [fp, #-16]
    3914:	str	r1, [fp, #-20]	; 0xffffffec
    3918:	ldr	r3, [fp, #-16]
    391c:	cmp	r3, #0
    3920:	beq	3934 <coda_inflateGetHeader+0x30>
    3924:	ldr	r3, [fp, #-16]
    3928:	ldr	r3, [r3, #28]
    392c:	cmp	r3, #0
    3930:	bne	393c <coda_inflateGetHeader+0x38>
    3934:	mvn	r3, #1
    3938:	b	3980 <coda_inflateGetHeader+0x7c>
    393c:	ldr	r3, [fp, #-16]
    3940:	ldr	r3, [r3, #28]
    3944:	str	r3, [fp, #-8]
    3948:	ldr	r3, [fp, #-8]
    394c:	ldr	r3, [r3, #8]
    3950:	and	r3, r3, #2
    3954:	cmp	r3, #0
    3958:	bne	3964 <coda_inflateGetHeader+0x60>
    395c:	mvn	r3, #1
    3960:	b	3980 <coda_inflateGetHeader+0x7c>
    3964:	ldr	r3, [fp, #-8]
    3968:	ldr	r2, [fp, #-20]	; 0xffffffec
    396c:	str	r2, [r3, #32]
    3970:	ldr	r3, [fp, #-20]	; 0xffffffec
    3974:	mov	r2, #0
    3978:	str	r2, [r3, #48]	; 0x30
    397c:	mov	r3, #0
    3980:	mov	r0, r3
    3984:	add	sp, fp, #0
    3988:	pop	{fp}		; (ldr fp, [sp], #4)
    398c:	bx	lr

00003990 <syncsearch>:
    3990:	push	{fp}		; (str fp, [sp, #-4]!)
    3994:	add	fp, sp, #0
    3998:	sub	sp, sp, #28
    399c:	str	r0, [fp, #-16]
    39a0:	str	r1, [fp, #-20]	; 0xffffffec
    39a4:	str	r2, [fp, #-24]	; 0xffffffe8
    39a8:	ldr	r3, [fp, #-16]
    39ac:	ldr	r3, [r3]
    39b0:	str	r3, [fp, #-8]
    39b4:	mov	r3, #0
    39b8:	str	r3, [fp, #-12]
    39bc:	b	3a40 <syncsearch+0xb0>
    39c0:	ldr	r2, [fp, #-20]	; 0xffffffec
    39c4:	ldr	r3, [fp, #-12]
    39c8:	add	r3, r2, r3
    39cc:	ldrb	r3, [r3]
    39d0:	mov	r2, r3
    39d4:	ldr	r3, [fp, #-8]
    39d8:	cmp	r3, #1
    39dc:	bhi	39e8 <syncsearch+0x58>
    39e0:	mov	r3, #0
    39e4:	b	39ec <syncsearch+0x5c>
    39e8:	mov	r3, #255	; 0xff
    39ec:	cmp	r3, r2
    39f0:	bne	3a04 <syncsearch+0x74>
    39f4:	ldr	r3, [fp, #-8]
    39f8:	add	r3, r3, #1
    39fc:	str	r3, [fp, #-8]
    3a00:	b	3a34 <syncsearch+0xa4>
    3a04:	ldr	r2, [fp, #-20]	; 0xffffffec
    3a08:	ldr	r3, [fp, #-12]
    3a0c:	add	r3, r2, r3
    3a10:	ldrb	r3, [r3]
    3a14:	cmp	r3, #0
    3a18:	beq	3a28 <syncsearch+0x98>
    3a1c:	mov	r3, #0
    3a20:	str	r3, [fp, #-8]
    3a24:	b	3a34 <syncsearch+0xa4>
    3a28:	ldr	r3, [fp, #-8]
    3a2c:	rsb	r3, r3, #4
    3a30:	str	r3, [fp, #-8]
    3a34:	ldr	r3, [fp, #-12]
    3a38:	add	r3, r3, #1
    3a3c:	str	r3, [fp, #-12]
    3a40:	ldr	r2, [fp, #-12]
    3a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a48:	cmp	r2, r3
    3a4c:	bcs	3a5c <syncsearch+0xcc>
    3a50:	ldr	r3, [fp, #-8]
    3a54:	cmp	r3, #3
    3a58:	bls	39c0 <syncsearch+0x30>
    3a5c:	ldr	r3, [fp, #-16]
    3a60:	ldr	r2, [fp, #-8]
    3a64:	str	r2, [r3]
    3a68:	ldr	r3, [fp, #-12]
    3a6c:	mov	r0, r3
    3a70:	add	sp, fp, #0
    3a74:	pop	{fp}		; (ldr fp, [sp], #4)
    3a78:	bx	lr

00003a7c <coda_inflateSync>:
    3a7c:	str	fp, [sp, #-8]!
    3a80:	str	lr, [sp, #4]
    3a84:	add	fp, sp, #4
    3a88:	sub	sp, sp, #32
    3a8c:	str	r0, [fp, #-32]	; 0xffffffe0
    3a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a94:	cmp	r3, #0
    3a98:	beq	3aac <coda_inflateSync+0x30>
    3a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3aa0:	ldr	r3, [r3, #28]
    3aa4:	cmp	r3, #0
    3aa8:	bne	3ab4 <coda_inflateSync+0x38>
    3aac:	mvn	r3, #1
    3ab0:	b	3c90 <coda_inflateSync+0x214>
    3ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3ab8:	ldr	r3, [r3, #28]
    3abc:	str	r3, [fp, #-12]
    3ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3ac4:	ldr	r3, [r3, #4]
    3ac8:	cmp	r3, #0
    3acc:	bne	3ae8 <coda_inflateSync+0x6c>
    3ad0:	ldr	r3, [fp, #-12]
    3ad4:	ldr	r3, [r3, #60]	; 0x3c
    3ad8:	cmp	r3, #7
    3adc:	bhi	3ae8 <coda_inflateSync+0x6c>
    3ae0:	mvn	r3, #4
    3ae4:	b	3c90 <coda_inflateSync+0x214>
    3ae8:	ldr	r3, [fp, #-12]
    3aec:	ldr	r3, [r3]
    3af0:	cmp	r3, #31
    3af4:	beq	3bc4 <coda_inflateSync+0x148>
    3af8:	ldr	r3, [fp, #-12]
    3afc:	mov	r2, #31
    3b00:	str	r2, [r3]
    3b04:	ldr	r3, [fp, #-12]
    3b08:	ldr	r2, [r3, #56]	; 0x38
    3b0c:	ldr	r3, [fp, #-12]
    3b10:	ldr	r3, [r3, #60]	; 0x3c
    3b14:	and	r3, r3, #7
    3b18:	lsl	r2, r2, r3
    3b1c:	ldr	r3, [fp, #-12]
    3b20:	str	r2, [r3, #56]	; 0x38
    3b24:	ldr	r3, [fp, #-12]
    3b28:	ldr	r3, [r3, #60]	; 0x3c
    3b2c:	bic	r2, r3, #7
    3b30:	ldr	r3, [fp, #-12]
    3b34:	str	r2, [r3, #60]	; 0x3c
    3b38:	mov	r3, #0
    3b3c:	str	r3, [fp, #-8]
    3b40:	b	3b90 <coda_inflateSync+0x114>
    3b44:	ldr	r3, [fp, #-12]
    3b48:	ldr	r1, [r3, #56]	; 0x38
    3b4c:	ldr	r3, [fp, #-8]
    3b50:	add	r2, r3, #1
    3b54:	str	r2, [fp, #-8]
    3b58:	uxtb	r2, r1
    3b5c:	sub	r1, fp, #4
    3b60:	add	r3, r1, r3
    3b64:	strb	r2, [r3, #-20]	; 0xffffffec
    3b68:	ldr	r3, [fp, #-12]
    3b6c:	ldr	r3, [r3, #56]	; 0x38
    3b70:	lsr	r2, r3, #8
    3b74:	ldr	r3, [fp, #-12]
    3b78:	str	r2, [r3, #56]	; 0x38
    3b7c:	ldr	r3, [fp, #-12]
    3b80:	ldr	r3, [r3, #60]	; 0x3c
    3b84:	sub	r2, r3, #8
    3b88:	ldr	r3, [fp, #-12]
    3b8c:	str	r2, [r3, #60]	; 0x3c
    3b90:	ldr	r3, [fp, #-12]
    3b94:	ldr	r3, [r3, #60]	; 0x3c
    3b98:	cmp	r3, #7
    3b9c:	bhi	3b44 <coda_inflateSync+0xc8>
    3ba0:	ldr	r3, [fp, #-12]
    3ba4:	mov	r2, #0
    3ba8:	str	r2, [r3, #104]	; 0x68
    3bac:	ldr	r3, [fp, #-12]
    3bb0:	add	r3, r3, #104	; 0x68
    3bb4:	sub	r1, fp, #24
    3bb8:	ldr	r2, [fp, #-8]
    3bbc:	mov	r0, r3
    3bc0:	bl	3990 <syncsearch>
    3bc4:	ldr	r3, [fp, #-12]
    3bc8:	add	r0, r3, #104	; 0x68
    3bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bd0:	ldr	r1, [r3]
    3bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bd8:	ldr	r3, [r3, #4]
    3bdc:	mov	r2, r3
    3be0:	bl	3990 <syncsearch>
    3be4:	str	r0, [fp, #-8]
    3be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bec:	ldr	r2, [r3, #4]
    3bf0:	ldr	r3, [fp, #-8]
    3bf4:	sub	r2, r2, r3
    3bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bfc:	str	r2, [r3, #4]
    3c00:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c04:	ldr	r2, [r3]
    3c08:	ldr	r3, [fp, #-8]
    3c0c:	add	r2, r2, r3
    3c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c14:	str	r2, [r3]
    3c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c1c:	ldr	r2, [r3, #8]
    3c20:	ldr	r3, [fp, #-8]
    3c24:	add	r2, r2, r3
    3c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c2c:	str	r2, [r3, #8]
    3c30:	ldr	r3, [fp, #-12]
    3c34:	ldr	r3, [r3, #104]	; 0x68
    3c38:	cmp	r3, #4
    3c3c:	beq	3c48 <coda_inflateSync+0x1cc>
    3c40:	mvn	r3, #2
    3c44:	b	3c90 <coda_inflateSync+0x214>
    3c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c4c:	ldr	r3, [r3, #8]
    3c50:	str	r3, [fp, #-16]
    3c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c58:	ldr	r3, [r3, #20]
    3c5c:	str	r3, [fp, #-20]	; 0xffffffec
    3c60:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3c64:	bl	15c <coda_inflateReset>
    3c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c6c:	ldr	r2, [fp, #-16]
    3c70:	str	r2, [r3, #8]
    3c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c78:	ldr	r2, [fp, #-20]	; 0xffffffec
    3c7c:	str	r2, [r3, #20]
    3c80:	ldr	r3, [fp, #-12]
    3c84:	mov	r2, #11
    3c88:	str	r2, [r3]
    3c8c:	mov	r3, #0
    3c90:	mov	r0, r3
    3c94:	sub	sp, fp, #4
    3c98:	ldr	fp, [sp]
    3c9c:	add	sp, sp, #4
    3ca0:	pop	{pc}		; (ldr pc, [sp], #4)

00003ca4 <coda_inflateSyncPoint>:
    3ca4:	push	{fp}		; (str fp, [sp, #-4]!)
    3ca8:	add	fp, sp, #0
    3cac:	sub	sp, sp, #20
    3cb0:	str	r0, [fp, #-16]
    3cb4:	ldr	r3, [fp, #-16]
    3cb8:	cmp	r3, #0
    3cbc:	beq	3cd0 <coda_inflateSyncPoint+0x2c>
    3cc0:	ldr	r3, [fp, #-16]
    3cc4:	ldr	r3, [r3, #28]
    3cc8:	cmp	r3, #0
    3ccc:	bne	3cd8 <coda_inflateSyncPoint+0x34>
    3cd0:	mvn	r3, #1
    3cd4:	b	3d10 <coda_inflateSyncPoint+0x6c>
    3cd8:	ldr	r3, [fp, #-16]
    3cdc:	ldr	r3, [r3, #28]
    3ce0:	str	r3, [fp, #-8]
    3ce4:	ldr	r3, [fp, #-8]
    3ce8:	ldr	r3, [r3]
    3cec:	cmp	r3, #13
    3cf0:	bne	3d0c <coda_inflateSyncPoint+0x68>
    3cf4:	ldr	r3, [fp, #-8]
    3cf8:	ldr	r3, [r3, #60]	; 0x3c
    3cfc:	cmp	r3, #0
    3d00:	bne	3d0c <coda_inflateSyncPoint+0x68>
    3d04:	mov	r3, #1
    3d08:	b	3d10 <coda_inflateSyncPoint+0x6c>
    3d0c:	mov	r3, #0
    3d10:	mov	r0, r3
    3d14:	add	sp, fp, #0
    3d18:	pop	{fp}		; (ldr fp, [sp], #4)
    3d1c:	bx	lr

00003d20 <coda_inflateCopy>:
    3d20:	str	fp, [sp, #-8]!
    3d24:	str	lr, [sp, #4]
    3d28:	add	fp, sp, #4
    3d2c:	sub	sp, sp, #24
    3d30:	str	r0, [fp, #-24]	; 0xffffffe8
    3d34:	str	r1, [fp, #-28]	; 0xffffffe4
    3d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3d3c:	cmp	r3, #0
    3d40:	beq	3d80 <coda_inflateCopy+0x60>
    3d44:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d48:	cmp	r3, #0
    3d4c:	beq	3d80 <coda_inflateCopy+0x60>
    3d50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d54:	ldr	r3, [r3, #28]
    3d58:	cmp	r3, #0
    3d5c:	beq	3d80 <coda_inflateCopy+0x60>
    3d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d64:	ldr	r3, [r3, #32]
    3d68:	cmp	r3, #0
    3d6c:	beq	3d80 <coda_inflateCopy+0x60>
    3d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d74:	ldr	r3, [r3, #36]	; 0x24
    3d78:	cmp	r3, #0
    3d7c:	bne	3d88 <coda_inflateCopy+0x68>
    3d80:	mvn	r3, #1
    3d84:	b	3f60 <coda_inflateCopy+0x240>
    3d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d8c:	ldr	r3, [r3, #28]
    3d90:	str	r3, [fp, #-12]
    3d94:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d98:	ldr	r3, [r3, #32]
    3d9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3da0:	ldr	r0, [r2, #40]	; 0x28
    3da4:	movw	r2, #7116	; 0x1bcc
    3da8:	mov	r1, #1
    3dac:	blx	r3
    3db0:	str	r0, [fp, #-16]
    3db4:	ldr	r3, [fp, #-16]
    3db8:	cmp	r3, #0
    3dbc:	bne	3dc8 <coda_inflateCopy+0xa8>
    3dc0:	mvn	r3, #3
    3dc4:	b	3f60 <coda_inflateCopy+0x240>
    3dc8:	mov	r3, #0
    3dcc:	str	r3, [fp, #-8]
    3dd0:	ldr	r3, [fp, #-12]
    3dd4:	ldr	r3, [r3, #52]	; 0x34
    3dd8:	cmp	r3, #0
    3ddc:	beq	3e3c <coda_inflateCopy+0x11c>
    3de0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3de4:	ldr	r3, [r3, #32]
    3de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3dec:	ldr	r0, [r2, #40]	; 0x28
    3df0:	ldr	r2, [fp, #-12]
    3df4:	ldr	r2, [r2, #36]	; 0x24
    3df8:	mov	r1, #1
    3dfc:	lsl	r1, r1, r2
    3e00:	mov	r2, #1
    3e04:	blx	r3
    3e08:	str	r0, [fp, #-8]
    3e0c:	ldr	r3, [fp, #-8]
    3e10:	cmp	r3, #0
    3e14:	bne	3e3c <coda_inflateCopy+0x11c>
    3e18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3e1c:	ldr	r3, [r3, #36]	; 0x24
    3e20:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3e24:	ldr	r2, [r2, #40]	; 0x28
    3e28:	ldr	r1, [fp, #-16]
    3e2c:	mov	r0, r2
    3e30:	blx	r3
    3e34:	mvn	r3, #3
    3e38:	b	3f60 <coda_inflateCopy+0x240>
    3e3c:	mov	r2, #56	; 0x38
    3e40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3e48:	bl	0 <memcpy>
    3e4c:	movw	r2, #7116	; 0x1bcc
    3e50:	ldr	r1, [fp, #-12]
    3e54:	ldr	r0, [fp, #-16]
    3e58:	bl	0 <memcpy>
    3e5c:	ldr	r3, [fp, #-12]
    3e60:	ldr	r2, [r3, #76]	; 0x4c
    3e64:	ldr	r3, [fp, #-12]
    3e68:	add	r3, r3, #1328	; 0x530
    3e6c:	cmp	r2, r3
    3e70:	bcc	3ee4 <coda_inflateCopy+0x1c4>
    3e74:	ldr	r3, [fp, #-12]
    3e78:	ldr	r2, [r3, #76]	; 0x4c
    3e7c:	ldr	r3, [fp, #-12]
    3e80:	add	r3, r3, #1328	; 0x530
    3e84:	add	r3, r3, #5760	; 0x1680
    3e88:	add	r3, r3, #12
    3e8c:	cmp	r2, r3
    3e90:	bhi	3ee4 <coda_inflateCopy+0x1c4>
    3e94:	ldr	r3, [fp, #-16]
    3e98:	add	r3, r3, #1328	; 0x530
    3e9c:	ldr	r2, [fp, #-12]
    3ea0:	ldr	r1, [r2, #76]	; 0x4c
    3ea4:	ldr	r2, [fp, #-12]
    3ea8:	add	r2, r2, #1328	; 0x530
    3eac:	sub	r2, r1, r2
    3eb0:	add	r2, r3, r2
    3eb4:	ldr	r3, [fp, #-16]
    3eb8:	str	r2, [r3, #76]	; 0x4c
    3ebc:	ldr	r3, [fp, #-16]
    3ec0:	add	r3, r3, #1328	; 0x530
    3ec4:	ldr	r2, [fp, #-12]
    3ec8:	ldr	r1, [r2, #80]	; 0x50
    3ecc:	ldr	r2, [fp, #-12]
    3ed0:	add	r2, r2, #1328	; 0x530
    3ed4:	sub	r2, r1, r2
    3ed8:	add	r2, r3, r2
    3edc:	ldr	r3, [fp, #-16]
    3ee0:	str	r2, [r3, #80]	; 0x50
    3ee4:	ldr	r3, [fp, #-16]
    3ee8:	add	r3, r3, #1328	; 0x530
    3eec:	ldr	r2, [fp, #-12]
    3ef0:	ldr	r1, [r2, #108]	; 0x6c
    3ef4:	ldr	r2, [fp, #-12]
    3ef8:	add	r2, r2, #1328	; 0x530
    3efc:	sub	r2, r1, r2
    3f00:	add	r2, r3, r2
    3f04:	ldr	r3, [fp, #-16]
    3f08:	str	r2, [r3, #108]	; 0x6c
    3f0c:	ldr	r3, [fp, #-8]
    3f10:	cmp	r3, #0
    3f14:	beq	3f44 <coda_inflateCopy+0x224>
    3f18:	ldr	r3, [fp, #-12]
    3f1c:	ldr	r3, [r3, #36]	; 0x24
    3f20:	mov	r2, #1
    3f24:	lsl	r3, r2, r3
    3f28:	str	r3, [fp, #-20]	; 0xffffffec
    3f2c:	ldr	r3, [fp, #-12]
    3f30:	ldr	r3, [r3, #52]	; 0x34
    3f34:	ldr	r2, [fp, #-20]	; 0xffffffec
    3f38:	mov	r1, r3
    3f3c:	ldr	r0, [fp, #-8]
    3f40:	bl	0 <memcpy>
    3f44:	ldr	r3, [fp, #-16]
    3f48:	ldr	r2, [fp, #-8]
    3f4c:	str	r2, [r3, #52]	; 0x34
    3f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3f54:	ldr	r2, [fp, #-16]
    3f58:	str	r2, [r3, #28]
    3f5c:	mov	r3, #0
    3f60:	mov	r0, r3
    3f64:	sub	sp, fp, #4
    3f68:	ldr	fp, [sp]
    3f6c:	add	sp, sp, #4
    3f70:	pop	{pc}		; (ldr pc, [sp], #4)

00003f74 <coda_inflateUndermine>:
    3f74:	push	{fp}		; (str fp, [sp, #-4]!)
    3f78:	add	fp, sp, #0
    3f7c:	sub	sp, sp, #20
    3f80:	str	r0, [fp, #-16]
    3f84:	str	r1, [fp, #-20]	; 0xffffffec
    3f88:	ldr	r3, [fp, #-16]
    3f8c:	cmp	r3, #0
    3f90:	beq	3fa4 <coda_inflateUndermine+0x30>
    3f94:	ldr	r3, [fp, #-16]
    3f98:	ldr	r3, [r3, #28]
    3f9c:	cmp	r3, #0
    3fa0:	bne	3fac <coda_inflateUndermine+0x38>
    3fa4:	mvn	r3, #1
    3fa8:	b	3ff4 <coda_inflateUndermine+0x80>
    3fac:	ldr	r3, [fp, #-16]
    3fb0:	ldr	r3, [r3, #28]
    3fb4:	str	r3, [fp, #-8]
    3fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
    3fbc:	cmp	r3, #0
    3fc0:	moveq	r3, #1
    3fc4:	movne	r3, #0
    3fc8:	uxtb	r3, r3
    3fcc:	mov	r2, r3
    3fd0:	ldr	r3, [fp, #-8]
    3fd4:	add	r3, r3, #4096	; 0x1000
    3fd8:	str	r2, [r3, #3008]	; 0xbc0
    3fdc:	ldr	r3, [fp, #-8]
    3fe0:	add	r3, r3, #4096	; 0x1000
    3fe4:	mov	r2, r3
    3fe8:	mov	r3, #1
    3fec:	str	r3, [r2, #3008]	; 0xbc0
    3ff0:	mvn	r3, #2
    3ff4:	mov	r0, r3
    3ff8:	add	sp, fp, #0
    3ffc:	pop	{fp}		; (ldr fp, [sp], #4)
    4000:	bx	lr

00004004 <coda_inflateMark>:
    4004:	push	{fp}		; (str fp, [sp, #-4]!)
    4008:	add	fp, sp, #0
    400c:	sub	sp, sp, #20
    4010:	str	r0, [fp, #-16]
    4014:	ldr	r3, [fp, #-16]
    4018:	cmp	r3, #0
    401c:	beq	4030 <coda_inflateMark+0x2c>
    4020:	ldr	r3, [fp, #-16]
    4024:	ldr	r3, [r3, #28]
    4028:	cmp	r3, #0
    402c:	bne	403c <coda_inflateMark+0x38>
    4030:	mov	r3, #0
    4034:	movt	r3, #65535	; 0xffff
    4038:	b	40ac <coda_inflateMark+0xa8>
    403c:	ldr	r3, [fp, #-16]
    4040:	ldr	r3, [r3, #28]
    4044:	str	r3, [fp, #-8]
    4048:	ldr	r3, [fp, #-8]
    404c:	add	r3, r3, #4096	; 0x1000
    4050:	ldr	r3, [r3, #3012]	; 0xbc4
    4054:	lsl	r3, r3, #16
    4058:	mov	r1, r3
    405c:	ldr	r3, [fp, #-8]
    4060:	ldr	r3, [r3]
    4064:	cmp	r3, #15
    4068:	bne	4078 <coda_inflateMark+0x74>
    406c:	ldr	r3, [fp, #-8]
    4070:	ldr	r3, [r3, #64]	; 0x40
    4074:	b	40a8 <coda_inflateMark+0xa4>
    4078:	ldr	r3, [fp, #-8]
    407c:	ldr	r3, [r3]
    4080:	cmp	r3, #24
    4084:	bne	40a4 <coda_inflateMark+0xa0>
    4088:	ldr	r3, [fp, #-8]
    408c:	add	r3, r3, #4096	; 0x1000
    4090:	ldr	r2, [r3, #3016]	; 0xbc8
    4094:	ldr	r3, [fp, #-8]
    4098:	ldr	r3, [r3, #64]	; 0x40
    409c:	sub	r3, r2, r3
    40a0:	b	40a8 <coda_inflateMark+0xa4>
    40a4:	mov	r3, #0
    40a8:	add	r3, r3, r1
    40ac:	mov	r0, r3
    40b0:	add	sp, fp, #0
    40b4:	pop	{fp}		; (ldr fp, [sp], #4)
    40b8:	bx	lr
