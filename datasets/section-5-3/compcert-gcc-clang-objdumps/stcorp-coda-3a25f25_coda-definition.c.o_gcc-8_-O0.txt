
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_product_variable_delete>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #8
      10:	str	r0, [fp, #-8]
      14:	ldr	r3, [fp, #-8]
      18:	cmp	r3, #0
      1c:	bne	40 <coda_product_variable_delete+0x40>
      20:	movw	r3, #0
      24:	movt	r3, #0
      28:	mov	r2, #49	; 0x31
      2c:	movw	r1, #0
      30:	movt	r1, #0
      34:	movw	r0, #0
      38:	movt	r0, #0
      3c:	bl	0 <__assert_fail>
      40:	ldr	r3, [fp, #-8]
      44:	ldr	r3, [r3]
      48:	cmp	r3, #0
      4c:	beq	60 <coda_product_variable_delete+0x60>
      50:	ldr	r3, [fp, #-8]
      54:	ldr	r3, [r3]
      58:	mov	r0, r3
      5c:	bl	0 <free>
      60:	ldr	r3, [fp, #-8]
      64:	ldr	r3, [r3, #4]
      68:	cmp	r3, #0
      6c:	beq	80 <coda_product_variable_delete+0x80>
      70:	ldr	r3, [fp, #-8]
      74:	ldr	r3, [r3, #4]
      78:	mov	r0, r3
      7c:	bl	0 <coda_expression_delete>
      80:	ldr	r3, [fp, #-8]
      84:	ldr	r3, [r3, #8]
      88:	cmp	r3, #0
      8c:	beq	a0 <coda_product_variable_delete+0xa0>
      90:	ldr	r3, [fp, #-8]
      94:	ldr	r3, [r3, #8]
      98:	mov	r0, r3
      9c:	bl	0 <coda_expression_delete>
      a0:	ldr	r0, [fp, #-8]
      a4:	bl	0 <free>
      a8:	nop	{0}
      ac:	sub	sp, fp, #4
      b0:	ldr	fp, [sp]
      b4:	add	sp, sp, #4
      b8:	pop	{pc}		; (ldr pc, [sp], #4)

000000bc <coda_product_variable_new>:
      bc:	str	fp, [sp, #-8]!
      c0:	str	lr, [sp, #4]
      c4:	add	fp, sp, #4
      c8:	sub	sp, sp, #24
      cc:	str	r0, [fp, #-16]
      d0:	ldr	r0, [fp, #-16]
      d4:	bl	0 <coda_is_identifier>
      d8:	mov	r3, r0
      dc:	cmp	r3, #0
      e0:	bne	104 <coda_product_variable_new+0x48>
      e4:	ldr	r2, [fp, #-16]
      e8:	movw	r1, #0
      ec:	movt	r1, #0
      f0:	movw	r0, #65136	; 0xfe70
      f4:	movt	r0, #65535	; 0xffff
      f8:	bl	0 <coda_set_error>
      fc:	mov	r3, #0
     100:	b	1c8 <coda_product_variable_new+0x10c>
     104:	mov	r0, #12
     108:	bl	0 <malloc>
     10c:	mov	r3, r0
     110:	str	r3, [fp, #-8]
     114:	ldr	r3, [fp, #-8]
     118:	cmp	r3, #0
     11c:	bne	14c <coda_product_variable_new+0x90>
     120:	mov	r3, #82	; 0x52
     124:	str	r3, [sp]
     128:	movw	r3, #0
     12c:	movt	r3, #0
     130:	mov	r2, #12
     134:	movw	r1, #0
     138:	movt	r1, #0
     13c:	mvn	r0, #0
     140:	bl	0 <coda_set_error>
     144:	mov	r3, #0
     148:	b	1c8 <coda_product_variable_new+0x10c>
     14c:	ldr	r3, [fp, #-8]
     150:	mov	r2, #0
     154:	str	r2, [r3]
     158:	ldr	r3, [fp, #-8]
     15c:	mov	r2, #0
     160:	str	r2, [r3, #4]
     164:	ldr	r3, [fp, #-8]
     168:	mov	r2, #0
     16c:	str	r2, [r3, #8]
     170:	ldr	r0, [fp, #-16]
     174:	bl	0 <strdup>
     178:	mov	r3, r0
     17c:	mov	r2, r3
     180:	ldr	r3, [fp, #-8]
     184:	str	r2, [r3]
     188:	ldr	r3, [fp, #-8]
     18c:	ldr	r3, [r3]
     190:	cmp	r3, #0
     194:	bne	1c4 <coda_product_variable_new+0x108>
     198:	mov	r3, #93	; 0x5d
     19c:	movw	r2, #0
     1a0:	movt	r2, #0
     1a4:	movw	r1, #0
     1a8:	movt	r1, #0
     1ac:	mvn	r0, #0
     1b0:	bl	0 <coda_set_error>
     1b4:	ldr	r0, [fp, #-8]
     1b8:	bl	0 <coda_product_variable_delete>
     1bc:	mov	r3, #0
     1c0:	b	1c8 <coda_product_variable_new+0x10c>
     1c4:	ldr	r3, [fp, #-8]
     1c8:	mov	r0, r3
     1cc:	sub	sp, fp, #4
     1d0:	ldr	fp, [sp]
     1d4:	add	sp, sp, #4
     1d8:	pop	{pc}		; (ldr pc, [sp], #4)

000001dc <coda_product_variable_set_size_expression>:
     1dc:	str	fp, [sp, #-8]!
     1e0:	str	lr, [sp, #4]
     1e4:	add	fp, sp, #4
     1e8:	sub	sp, sp, #8
     1ec:	str	r0, [fp, #-8]
     1f0:	str	r1, [fp, #-12]
     1f4:	ldr	r3, [fp, #-12]
     1f8:	cmp	r3, #0
     1fc:	bne	220 <coda_product_variable_set_size_expression+0x44>
     200:	movw	r3, #0
     204:	movt	r3, #0
     208:	mov	r2, #103	; 0x67
     20c:	movw	r1, #0
     210:	movt	r1, #0
     214:	movw	r0, #0
     218:	movt	r0, #0
     21c:	bl	0 <__assert_fail>
     220:	ldr	r3, [fp, #-8]
     224:	ldr	r3, [r3, #4]
     228:	cmp	r3, #0
     22c:	beq	24c <coda_product_variable_set_size_expression+0x70>
     230:	movw	r1, #0
     234:	movt	r1, #0
     238:	movw	r0, #65136	; 0xfe70
     23c:	movt	r0, #65535	; 0xffff
     240:	bl	0 <coda_set_error>
     244:	mvn	r3, #0
     248:	b	25c <coda_product_variable_set_size_expression+0x80>
     24c:	ldr	r3, [fp, #-8]
     250:	ldr	r2, [fp, #-12]
     254:	str	r2, [r3, #4]
     258:	mov	r3, #0
     25c:	mov	r0, r3
     260:	sub	sp, fp, #4
     264:	ldr	fp, [sp]
     268:	add	sp, sp, #4
     26c:	pop	{pc}		; (ldr pc, [sp], #4)

00000270 <coda_product_variable_set_init_expression>:
     270:	str	fp, [sp, #-8]!
     274:	str	lr, [sp, #4]
     278:	add	fp, sp, #4
     27c:	sub	sp, sp, #8
     280:	str	r0, [fp, #-8]
     284:	str	r1, [fp, #-12]
     288:	ldr	r3, [fp, #-12]
     28c:	cmp	r3, #0
     290:	bne	2b4 <coda_product_variable_set_init_expression+0x44>
     294:	movw	r3, #0
     298:	movt	r3, #0
     29c:	mov	r2, #115	; 0x73
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	movw	r0, #0
     2ac:	movt	r0, #0
     2b0:	bl	0 <__assert_fail>
     2b4:	ldr	r3, [fp, #-8]
     2b8:	ldr	r3, [r3, #8]
     2bc:	cmp	r3, #0
     2c0:	beq	2e0 <coda_product_variable_set_init_expression+0x70>
     2c4:	movw	r1, #0
     2c8:	movt	r1, #0
     2cc:	movw	r0, #65136	; 0xfe70
     2d0:	movt	r0, #65535	; 0xffff
     2d4:	bl	0 <coda_set_error>
     2d8:	mvn	r3, #0
     2dc:	b	2f0 <coda_product_variable_set_init_expression+0x80>
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldr	r2, [fp, #-12]
     2e8:	str	r2, [r3, #8]
     2ec:	mov	r3, #0
     2f0:	mov	r0, r3
     2f4:	sub	sp, fp, #4
     2f8:	ldr	fp, [sp]
     2fc:	add	sp, sp, #4
     300:	pop	{pc}		; (ldr pc, [sp], #4)

00000304 <coda_product_variable_validate>:
     304:	str	fp, [sp, #-8]!
     308:	str	lr, [sp, #4]
     30c:	add	fp, sp, #4
     310:	sub	sp, sp, #8
     314:	str	r0, [fp, #-8]
     318:	ldr	r3, [fp, #-8]
     31c:	ldr	r3, [r3, #8]
     320:	cmp	r3, #0
     324:	bne	344 <coda_product_variable_validate+0x40>
     328:	movw	r1, #0
     32c:	movt	r1, #0
     330:	movw	r0, #65136	; 0xfe70
     334:	movt	r0, #65535	; 0xffff
     338:	bl	0 <coda_set_error>
     33c:	mvn	r3, #0
     340:	b	348 <coda_product_variable_validate+0x44>
     344:	mov	r3, #0
     348:	mov	r0, r3
     34c:	sub	sp, fp, #4
     350:	ldr	fp, [sp]
     354:	add	sp, sp, #4
     358:	pop	{pc}		; (ldr pc, [sp], #4)

0000035c <init_product_variable>:
     35c:	str	r4, [sp, #-12]!
     360:	str	fp, [sp, #4]
     364:	str	lr, [sp, #8]
     368:	add	fp, sp, #8
     36c:	sub	sp, sp, #548	; 0x224
     370:	str	r0, [fp, #-544]	; 0xfffffde0
     374:	str	r1, [fp, #-548]	; 0xfffffddc
     378:	sub	r3, fp, #540	; 0x21c
     37c:	mov	r1, r3
     380:	mov	r2, #1
     384:	mov	r3, #0
     388:	strd	r2, [r1]
     38c:	sub	r3, fp, #532	; 0x214
     390:	ldr	r1, [fp, #-544]	; 0xfffffde0
     394:	mov	r0, r3
     398:	bl	0 <coda_cursor_set_product>
     39c:	mov	r3, r0
     3a0:	cmp	r3, #0
     3a4:	beq	3b0 <init_product_variable+0x54>
     3a8:	mvn	r3, #0
     3ac:	b	5a8 <init_product_variable+0x24c>
     3b0:	ldr	r3, [fp, #-544]	; 0xfffffde0
     3b4:	ldr	r3, [r3, #24]
     3b8:	ldr	r2, [r3, #36]	; 0x24
     3bc:	ldr	r3, [fp, #-548]	; 0xfffffddc
     3c0:	lsl	r3, r3, #2
     3c4:	add	r3, r2, r3
     3c8:	ldr	r3, [r3]
     3cc:	ldr	r3, [r3, #4]
     3d0:	cmp	r3, #0
     3d4:	beq	44c <init_product_variable+0xf0>
     3d8:	ldr	r3, [fp, #-544]	; 0xfffffde0
     3dc:	ldr	r3, [r3, #24]
     3e0:	ldr	r2, [r3, #36]	; 0x24
     3e4:	ldr	r3, [fp, #-548]	; 0xfffffddc
     3e8:	lsl	r3, r3, #2
     3ec:	add	r3, r2, r3
     3f0:	ldr	r3, [r3]
     3f4:	ldr	r3, [r3, #4]
     3f8:	sub	r2, fp, #540	; 0x21c
     3fc:	sub	r1, fp, #532	; 0x214
     400:	mov	r0, r3
     404:	bl	0 <coda_expression_eval_integer>
     408:	mov	r3, r0
     40c:	cmp	r3, #0
     410:	beq	44c <init_product_variable+0xf0>
     414:	ldr	r3, [fp, #-544]	; 0xfffffde0
     418:	ldr	r3, [r3, #24]
     41c:	ldr	r2, [r3, #36]	; 0x24
     420:	ldr	r3, [fp, #-548]	; 0xfffffddc
     424:	lsl	r3, r3, #2
     428:	add	r3, r2, r3
     42c:	ldr	r3, [r3]
     430:	ldr	r3, [r3]
     434:	mov	r1, r3
     438:	movw	r0, #0
     43c:	movt	r0, #0
     440:	bl	0 <coda_add_error_message>
     444:	mvn	r3, #0
     448:	b	5a8 <init_product_variable+0x24c>
     44c:	sub	r3, fp, #540	; 0x21c
     450:	ldrd	r2, [r3]
     454:	ldr	r1, [fp, #-544]	; 0xfffffde0
     458:	ldr	r0, [r1, #28]
     45c:	ldr	r1, [fp, #-548]	; 0xfffffddc
     460:	lsl	r1, r1, #2
     464:	add	r1, r0, r1
     468:	mov	r3, r2
     46c:	str	r3, [r1]
     470:	sub	r3, fp, #540	; 0x21c
     474:	ldrd	r2, [r3]
     478:	mov	r3, r2
     47c:	lsl	r1, r3, #3
     480:	ldr	r3, [fp, #-544]	; 0xfffffde0
     484:	ldr	r2, [r3, #32]
     488:	ldr	r3, [fp, #-548]	; 0xfffffddc
     48c:	lsl	r3, r3, #2
     490:	add	r4, r2, r3
     494:	mov	r0, r1
     498:	bl	0 <malloc>
     49c:	mov	r3, r0
     4a0:	str	r3, [r4]
     4a4:	ldr	r3, [fp, #-544]	; 0xfffffde0
     4a8:	ldr	r2, [r3, #32]
     4ac:	ldr	r3, [fp, #-548]	; 0xfffffddc
     4b0:	lsl	r3, r3, #2
     4b4:	add	r3, r2, r3
     4b8:	ldr	r3, [r3]
     4bc:	cmp	r3, #0
     4c0:	bne	4fc <init_product_variable+0x1a0>
     4c4:	sub	r3, fp, #540	; 0x21c
     4c8:	ldrd	r2, [r3]
     4cc:	mov	r3, r2
     4d0:	lsl	r2, r3, #3
     4d4:	mov	r3, #162	; 0xa2
     4d8:	str	r3, [sp]
     4dc:	movw	r3, #0
     4e0:	movt	r3, #0
     4e4:	movw	r1, #0
     4e8:	movt	r1, #0
     4ec:	mvn	r0, #0
     4f0:	bl	0 <coda_set_error>
     4f4:	mvn	r3, #0
     4f8:	b	5a8 <init_product_variable+0x24c>
     4fc:	ldr	r3, [fp, #-544]	; 0xfffffde0
     500:	ldr	r2, [r3, #32]
     504:	ldr	r3, [fp, #-548]	; 0xfffffddc
     508:	lsl	r3, r3, #2
     50c:	add	r3, r2, r3
     510:	ldr	r0, [r3]
     514:	sub	r3, fp, #540	; 0x21c
     518:	ldrd	r2, [r3]
     51c:	mov	r3, r2
     520:	lsl	r3, r3, #3
     524:	mov	r2, r3
     528:	mov	r1, #0
     52c:	bl	0 <memset>
     530:	ldr	r3, [fp, #-544]	; 0xfffffde0
     534:	ldr	r3, [r3, #24]
     538:	ldr	r2, [r3, #36]	; 0x24
     53c:	ldr	r3, [fp, #-548]	; 0xfffffddc
     540:	lsl	r3, r3, #2
     544:	add	r3, r2, r3
     548:	ldr	r3, [r3]
     54c:	ldr	r3, [r3, #8]
     550:	sub	r2, fp, #532	; 0x214
     554:	mov	r1, r2
     558:	mov	r0, r3
     55c:	bl	0 <coda_expression_eval_void>
     560:	mov	r3, r0
     564:	cmp	r3, #0
     568:	beq	5a4 <init_product_variable+0x248>
     56c:	ldr	r3, [fp, #-544]	; 0xfffffde0
     570:	ldr	r3, [r3, #24]
     574:	ldr	r2, [r3, #36]	; 0x24
     578:	ldr	r3, [fp, #-548]	; 0xfffffddc
     57c:	lsl	r3, r3, #2
     580:	add	r3, r2, r3
     584:	ldr	r3, [r3]
     588:	ldr	r3, [r3]
     58c:	mov	r1, r3
     590:	movw	r0, #0
     594:	movt	r0, #0
     598:	bl	0 <coda_add_error_message>
     59c:	mvn	r3, #0
     5a0:	b	5a8 <init_product_variable+0x24c>
     5a4:	mov	r3, #0
     5a8:	mov	r0, r3
     5ac:	sub	sp, fp, #8
     5b0:	ldr	r4, [sp]
     5b4:	ldr	fp, [sp, #4]
     5b8:	add	sp, sp, #8
     5bc:	pop	{pc}		; (ldr pc, [sp], #4)

000005c0 <coda_product_variable_get_size>:
     5c0:	str	fp, [sp, #-8]!
     5c4:	str	lr, [sp, #4]
     5c8:	add	fp, sp, #4
     5cc:	sub	sp, sp, #32
     5d0:	str	r0, [fp, #-16]
     5d4:	str	r1, [fp, #-20]	; 0xffffffec
     5d8:	str	r2, [fp, #-24]	; 0xffffffe8
     5dc:	ldr	r3, [fp, #-16]
     5e0:	cmp	r3, #0
     5e4:	beq	600 <coda_product_variable_get_size+0x40>
     5e8:	ldr	r3, [fp, #-20]	; 0xffffffec
     5ec:	cmp	r3, #0
     5f0:	beq	600 <coda_product_variable_get_size+0x40>
     5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5f8:	cmp	r3, #0
     5fc:	bne	620 <coda_product_variable_get_size+0x60>
     600:	movw	r3, #0
     604:	movt	r3, #0
     608:	mov	r2, #180	; 0xb4
     60c:	movw	r1, #0
     610:	movt	r1, #0
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	bl	0 <__assert_fail>
     620:	ldr	r3, [fp, #-16]
     624:	ldr	r3, [r3, #32]
     628:	cmp	r3, #0
     62c:	bne	650 <coda_product_variable_get_size+0x90>
     630:	movw	r3, #0
     634:	movt	r3, #0
     638:	mov	r2, #181	; 0xb5
     63c:	movw	r1, #0
     640:	movt	r1, #0
     644:	movw	r0, #0
     648:	movt	r0, #0
     64c:	bl	0 <__assert_fail>
     650:	ldr	r3, [fp, #-16]
     654:	ldr	r3, [r3, #24]
     658:	ldr	r3, [r3, #40]	; 0x28
     65c:	ldr	r1, [fp, #-20]	; 0xffffffec
     660:	mov	r0, r3
     664:	bl	0 <coda_hashtable_get_index_from_name>
     668:	str	r0, [fp, #-8]
     66c:	ldr	r3, [fp, #-8]
     670:	cmn	r3, #1
     674:	bne	6bc <coda_product_variable_get_size+0xfc>
     678:	ldr	r3, [fp, #-16]
     67c:	ldr	r3, [r3, #24]
     680:	ldr	r3, [r3, #44]	; 0x2c
     684:	ldr	r2, [r3]
     688:	ldr	r3, [fp, #-16]
     68c:	ldr	r3, [r3, #24]
     690:	ldr	r1, [r3, #4]
     694:	ldr	r3, [fp, #-20]	; 0xffffffec
     698:	str	r3, [sp]
     69c:	mov	r3, r1
     6a0:	movw	r1, #0
     6a4:	movt	r1, #0
     6a8:	movw	r0, #65136	; 0xfe70
     6ac:	movt	r0, #65535	; 0xffff
     6b0:	bl	0 <coda_set_error>
     6b4:	mvn	r3, #0
     6b8:	b	720 <coda_product_variable_get_size+0x160>
     6bc:	ldr	r3, [fp, #-16]
     6c0:	ldr	r2, [r3, #32]
     6c4:	ldr	r3, [fp, #-8]
     6c8:	lsl	r3, r3, #2
     6cc:	add	r3, r2, r3
     6d0:	ldr	r3, [r3]
     6d4:	cmp	r3, #0
     6d8:	bne	6fc <coda_product_variable_get_size+0x13c>
     6dc:	ldr	r1, [fp, #-8]
     6e0:	ldr	r0, [fp, #-16]
     6e4:	bl	35c <init_product_variable>
     6e8:	mov	r3, r0
     6ec:	cmp	r3, #0
     6f0:	beq	6fc <coda_product_variable_get_size+0x13c>
     6f4:	mvn	r3, #0
     6f8:	b	720 <coda_product_variable_get_size+0x160>
     6fc:	ldr	r3, [fp, #-16]
     700:	ldr	r2, [r3, #28]
     704:	ldr	r3, [fp, #-8]
     708:	lsl	r3, r3, #2
     70c:	add	r3, r2, r3
     710:	ldr	r2, [r3]
     714:	ldr	r3, [fp, #-24]	; 0xffffffe8
     718:	str	r2, [r3]
     71c:	mov	r3, #0
     720:	mov	r0, r3
     724:	sub	sp, fp, #4
     728:	ldr	fp, [sp]
     72c:	add	sp, sp, #4
     730:	pop	{pc}		; (ldr pc, [sp], #4)

00000734 <coda_product_variable_get_pointer>:
     734:	str	fp, [sp, #-8]!
     738:	str	lr, [sp, #4]
     73c:	add	fp, sp, #4
     740:	sub	sp, sp, #32
     744:	str	r0, [fp, #-16]
     748:	str	r1, [fp, #-20]	; 0xffffffec
     74c:	str	r2, [fp, #-24]	; 0xffffffe8
     750:	str	r3, [fp, #-28]	; 0xffffffe4
     754:	ldr	r3, [fp, #-16]
     758:	cmp	r3, #0
     75c:	beq	778 <coda_product_variable_get_pointer+0x44>
     760:	ldr	r3, [fp, #-20]	; 0xffffffec
     764:	cmp	r3, #0
     768:	beq	778 <coda_product_variable_get_pointer+0x44>
     76c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     770:	cmp	r3, #0
     774:	bne	798 <coda_product_variable_get_pointer+0x64>
     778:	movw	r3, #0
     77c:	movt	r3, #0
     780:	mov	r2, #208	; 0xd0
     784:	movw	r1, #0
     788:	movt	r1, #0
     78c:	movw	r0, #0
     790:	movt	r0, #0
     794:	bl	0 <__assert_fail>
     798:	ldr	r3, [fp, #-16]
     79c:	ldr	r3, [r3, #24]
     7a0:	ldr	r3, [r3, #40]	; 0x28
     7a4:	ldr	r1, [fp, #-20]	; 0xffffffec
     7a8:	mov	r0, r3
     7ac:	bl	0 <coda_hashtable_get_index_from_name>
     7b0:	str	r0, [fp, #-8]
     7b4:	ldr	r3, [fp, #-8]
     7b8:	cmn	r3, #1
     7bc:	bne	804 <coda_product_variable_get_pointer+0xd0>
     7c0:	ldr	r3, [fp, #-16]
     7c4:	ldr	r3, [r3, #24]
     7c8:	ldr	r3, [r3, #44]	; 0x2c
     7cc:	ldr	r2, [r3]
     7d0:	ldr	r3, [fp, #-16]
     7d4:	ldr	r3, [r3, #24]
     7d8:	ldr	r1, [r3, #4]
     7dc:	ldr	r3, [fp, #-20]	; 0xffffffec
     7e0:	str	r3, [sp]
     7e4:	mov	r3, r1
     7e8:	movw	r1, #0
     7ec:	movt	r1, #0
     7f0:	movw	r0, #65136	; 0xfe70
     7f4:	movt	r0, #65535	; 0xffff
     7f8:	bl	0 <coda_set_error>
     7fc:	mvn	r3, #0
     800:	b	8c8 <coda_product_variable_get_pointer+0x194>
     804:	ldr	r3, [fp, #-16]
     808:	ldr	r2, [r3, #32]
     80c:	ldr	r3, [fp, #-8]
     810:	lsl	r3, r3, #2
     814:	add	r3, r2, r3
     818:	ldr	r3, [r3]
     81c:	cmp	r3, #0
     820:	bne	844 <coda_product_variable_get_pointer+0x110>
     824:	ldr	r1, [fp, #-8]
     828:	ldr	r0, [fp, #-16]
     82c:	bl	35c <init_product_variable>
     830:	mov	r3, r0
     834:	cmp	r3, #0
     838:	beq	844 <coda_product_variable_get_pointer+0x110>
     83c:	mvn	r3, #0
     840:	b	8c8 <coda_product_variable_get_pointer+0x194>
     844:	ldr	r3, [fp, #-24]	; 0xffffffe8
     848:	cmp	r3, #0
     84c:	blt	874 <coda_product_variable_get_pointer+0x140>
     850:	ldr	r3, [fp, #-16]
     854:	ldr	r2, [r3, #28]
     858:	ldr	r3, [fp, #-8]
     85c:	lsl	r3, r3, #2
     860:	add	r3, r2, r3
     864:	ldr	r3, [r3]
     868:	ldr	r2, [fp, #-24]	; 0xffffffe8
     86c:	cmp	r2, r3
     870:	blt	898 <coda_product_variable_get_pointer+0x164>
     874:	ldr	r3, [fp, #-20]	; 0xffffffec
     878:	ldr	r2, [fp, #-24]	; 0xffffffe8
     87c:	movw	r1, #0
     880:	movt	r1, #0
     884:	movw	r0, #65136	; 0xfe70
     888:	movt	r0, #65535	; 0xffff
     88c:	bl	0 <coda_set_error>
     890:	mvn	r3, #0
     894:	b	8c8 <coda_product_variable_get_pointer+0x194>
     898:	ldr	r3, [fp, #-16]
     89c:	ldr	r2, [r3, #32]
     8a0:	ldr	r3, [fp, #-8]
     8a4:	lsl	r3, r3, #2
     8a8:	add	r3, r2, r3
     8ac:	ldr	r2, [r3]
     8b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8b4:	lsl	r3, r3, #3
     8b8:	add	r2, r2, r3
     8bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8c0:	str	r2, [r3]
     8c4:	mov	r3, #0
     8c8:	mov	r0, r3
     8cc:	sub	sp, fp, #4
     8d0:	ldr	fp, [sp]
     8d4:	add	sp, sp, #4
     8d8:	pop	{pc}		; (ldr pc, [sp], #4)

000008dc <coda_product_definition_delete>:
     8dc:	str	fp, [sp, #-8]!
     8e0:	str	lr, [sp, #4]
     8e4:	add	fp, sp, #4
     8e8:	sub	sp, sp, #16
     8ec:	str	r0, [fp, #-16]
     8f0:	ldr	r3, [fp, #-16]
     8f4:	ldr	r3, [r3, #20]
     8f8:	cmp	r3, #0
     8fc:	beq	95c <coda_product_definition_delete+0x80>
     900:	mov	r3, #0
     904:	str	r3, [fp, #-8]
     908:	b	938 <coda_product_definition_delete+0x5c>
     90c:	ldr	r3, [fp, #-16]
     910:	ldr	r2, [r3, #20]
     914:	ldr	r3, [fp, #-8]
     918:	lsl	r3, r3, #2
     91c:	add	r3, r2, r3
     920:	ldr	r3, [r3]
     924:	mov	r0, r3
     928:	bl	0 <coda_detection_rule_delete>
     92c:	ldr	r3, [fp, #-8]
     930:	add	r3, r3, #1
     934:	str	r3, [fp, #-8]
     938:	ldr	r3, [fp, #-16]
     93c:	ldr	r3, [r3, #16]
     940:	ldr	r2, [fp, #-8]
     944:	cmp	r2, r3
     948:	blt	90c <coda_product_definition_delete+0x30>
     94c:	ldr	r3, [fp, #-16]
     950:	ldr	r3, [r3, #20]
     954:	mov	r0, r3
     958:	bl	0 <free>
     95c:	ldr	r3, [fp, #-16]
     960:	ldr	r3, [r3, #8]
     964:	cmp	r3, #0
     968:	beq	97c <coda_product_definition_delete+0xa0>
     96c:	ldr	r3, [fp, #-16]
     970:	ldr	r3, [r3, #8]
     974:	mov	r0, r3
     978:	bl	0 <free>
     97c:	ldr	r3, [fp, #-16]
     980:	ldr	r3, [r3, #12]
     984:	cmp	r3, #0
     988:	beq	99c <coda_product_definition_delete+0xc0>
     98c:	ldr	r3, [fp, #-16]
     990:	ldr	r3, [r3, #12]
     994:	mov	r0, r3
     998:	bl	0 <free>
     99c:	ldr	r3, [fp, #-16]
     9a0:	ldr	r3, [r3, #28]
     9a4:	cmp	r3, #0
     9a8:	beq	9bc <coda_product_definition_delete+0xe0>
     9ac:	ldr	r3, [fp, #-16]
     9b0:	ldr	r3, [r3, #28]
     9b4:	mov	r0, r3
     9b8:	bl	0 <coda_type_release>
     9bc:	ldr	r3, [fp, #-16]
     9c0:	ldr	r3, [r3, #40]	; 0x28
     9c4:	cmp	r3, #0
     9c8:	beq	9dc <coda_product_definition_delete+0x100>
     9cc:	ldr	r3, [fp, #-16]
     9d0:	ldr	r3, [r3, #40]	; 0x28
     9d4:	mov	r0, r3
     9d8:	bl	0 <coda_hashtable_delete>
     9dc:	ldr	r3, [fp, #-16]
     9e0:	ldr	r3, [r3, #36]	; 0x24
     9e4:	cmp	r3, #0
     9e8:	beq	a48 <coda_product_definition_delete+0x16c>
     9ec:	mov	r3, #0
     9f0:	str	r3, [fp, #-8]
     9f4:	b	a24 <coda_product_definition_delete+0x148>
     9f8:	ldr	r3, [fp, #-16]
     9fc:	ldr	r2, [r3, #36]	; 0x24
     a00:	ldr	r3, [fp, #-8]
     a04:	lsl	r3, r3, #2
     a08:	add	r3, r2, r3
     a0c:	ldr	r3, [r3]
     a10:	mov	r0, r3
     a14:	bl	0 <coda_product_variable_delete>
     a18:	ldr	r3, [fp, #-8]
     a1c:	add	r3, r3, #1
     a20:	str	r3, [fp, #-8]
     a24:	ldr	r3, [fp, #-16]
     a28:	ldr	r3, [r3, #32]
     a2c:	ldr	r2, [fp, #-8]
     a30:	cmp	r2, r3
     a34:	blt	9f8 <coda_product_definition_delete+0x11c>
     a38:	ldr	r3, [fp, #-16]
     a3c:	ldr	r3, [r3, #36]	; 0x24
     a40:	mov	r0, r3
     a44:	bl	0 <free>
     a48:	ldr	r0, [fp, #-16]
     a4c:	bl	0 <free>
     a50:	nop	{0}
     a54:	sub	sp, fp, #4
     a58:	ldr	fp, [sp]
     a5c:	add	sp, sp, #4
     a60:	pop	{pc}		; (ldr pc, [sp], #4)

00000a64 <coda_product_definition_new>:
     a64:	str	fp, [sp, #-8]!
     a68:	str	lr, [sp, #4]
     a6c:	add	fp, sp, #4
     a70:	sub	sp, sp, #32
     a74:	str	r0, [fp, #-16]
     a78:	str	r1, [fp, #-20]	; 0xffffffec
     a7c:	str	r2, [fp, #-24]	; 0xffffffe8
     a80:	ldr	r0, [fp, #-16]
     a84:	bl	0 <coda_is_identifier>
     a88:	mov	r3, r0
     a8c:	cmp	r3, #0
     a90:	bne	ab4 <coda_product_definition_new+0x50>
     a94:	ldr	r2, [fp, #-16]
     a98:	movw	r1, #0
     a9c:	movt	r1, #0
     aa0:	movw	r0, #65136	; 0xfe70
     aa4:	movt	r0, #65535	; 0xffff
     aa8:	bl	0 <coda_set_error>
     aac:	mov	r3, #0
     ab0:	b	c34 <coda_product_definition_new+0x1d0>
     ab4:	mov	r0, #48	; 0x30
     ab8:	bl	0 <malloc>
     abc:	mov	r3, r0
     ac0:	str	r3, [fp, #-8]
     ac4:	ldr	r3, [fp, #-8]
     ac8:	cmp	r3, #0
     acc:	bne	afc <coda_product_definition_new+0x98>
     ad0:	movw	r3, #291	; 0x123
     ad4:	str	r3, [sp]
     ad8:	movw	r3, #0
     adc:	movt	r3, #0
     ae0:	mov	r2, #48	; 0x30
     ae4:	movw	r1, #0
     ae8:	movt	r1, #0
     aec:	mvn	r0, #0
     af0:	bl	0 <coda_set_error>
     af4:	mov	r3, #0
     af8:	b	c34 <coda_product_definition_new+0x1d0>
     afc:	ldr	r3, [fp, #-8]
     b00:	ldr	r2, [fp, #-20]	; 0xffffffec
     b04:	str	r2, [r3]
     b08:	ldr	r3, [fp, #-8]
     b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b10:	str	r2, [r3, #4]
     b14:	ldr	r3, [fp, #-8]
     b18:	mov	r2, #0
     b1c:	str	r2, [r3, #8]
     b20:	ldr	r3, [fp, #-8]
     b24:	mov	r2, #0
     b28:	str	r2, [r3, #12]
     b2c:	ldr	r3, [fp, #-8]
     b30:	mov	r2, #0
     b34:	str	r2, [r3, #16]
     b38:	ldr	r3, [fp, #-8]
     b3c:	mov	r2, #0
     b40:	str	r2, [r3, #20]
     b44:	ldr	r3, [fp, #-8]
     b48:	mov	r2, #0
     b4c:	str	r2, [r3, #24]
     b50:	ldr	r3, [fp, #-8]
     b54:	mov	r2, #0
     b58:	str	r2, [r3, #28]
     b5c:	ldr	r3, [fp, #-8]
     b60:	mov	r2, #0
     b64:	str	r2, [r3, #40]	; 0x28
     b68:	ldr	r3, [fp, #-8]
     b6c:	mov	r2, #0
     b70:	str	r2, [r3, #32]
     b74:	ldr	r3, [fp, #-8]
     b78:	mov	r2, #0
     b7c:	str	r2, [r3, #36]	; 0x24
     b80:	ldr	r3, [fp, #-8]
     b84:	mov	r2, #0
     b88:	str	r2, [r3, #44]	; 0x2c
     b8c:	ldr	r0, [fp, #-16]
     b90:	bl	0 <strdup>
     b94:	mov	r3, r0
     b98:	mov	r2, r3
     b9c:	ldr	r3, [fp, #-8]
     ba0:	str	r2, [r3, #8]
     ba4:	ldr	r3, [fp, #-8]
     ba8:	ldr	r3, [r3, #8]
     bac:	cmp	r3, #0
     bb0:	bne	be0 <coda_product_definition_new+0x17c>
     bb4:	movw	r3, #311	; 0x137
     bb8:	movw	r2, #0
     bbc:	movt	r2, #0
     bc0:	movw	r1, #0
     bc4:	movt	r1, #0
     bc8:	mvn	r0, #0
     bcc:	bl	0 <coda_set_error>
     bd0:	ldr	r0, [fp, #-8]
     bd4:	bl	8dc <coda_product_definition_delete>
     bd8:	mov	r3, #0
     bdc:	b	c34 <coda_product_definition_new+0x1d0>
     be0:	mov	r0, #1
     be4:	bl	0 <coda_hashtable_new>
     be8:	mov	r2, r0
     bec:	ldr	r3, [fp, #-8]
     bf0:	str	r2, [r3, #40]	; 0x28
     bf4:	ldr	r3, [fp, #-8]
     bf8:	ldr	r3, [r3, #40]	; 0x28
     bfc:	cmp	r3, #0
     c00:	bne	c30 <coda_product_definition_new+0x1cc>
     c04:	mov	r3, #320	; 0x140
     c08:	movw	r2, #0
     c0c:	movt	r2, #0
     c10:	movw	r1, #0
     c14:	movt	r1, #0
     c18:	mvn	r0, #0
     c1c:	bl	0 <coda_set_error>
     c20:	ldr	r0, [fp, #-8]
     c24:	bl	8dc <coda_product_definition_delete>
     c28:	mov	r3, #0
     c2c:	b	c34 <coda_product_definition_new+0x1d0>
     c30:	ldr	r3, [fp, #-8]
     c34:	mov	r0, r3
     c38:	sub	sp, fp, #4
     c3c:	ldr	fp, [sp]
     c40:	add	sp, sp, #4
     c44:	pop	{pc}		; (ldr pc, [sp], #4)

00000c48 <coda_product_definition_set_description>:
     c48:	str	fp, [sp, #-8]!
     c4c:	str	lr, [sp, #4]
     c50:	add	fp, sp, #4
     c54:	sub	sp, sp, #16
     c58:	str	r0, [fp, #-16]
     c5c:	str	r1, [fp, #-20]	; 0xffffffec
     c60:	mov	r3, #0
     c64:	str	r3, [fp, #-8]
     c68:	ldr	r3, [fp, #-16]
     c6c:	ldr	r3, [r3, #12]
     c70:	cmp	r3, #0
     c74:	beq	c94 <coda_product_definition_set_description+0x4c>
     c78:	movw	r1, #0
     c7c:	movt	r1, #0
     c80:	movw	r0, #65136	; 0xfe70
     c84:	movt	r0, #65535	; 0xffff
     c88:	bl	0 <coda_set_error>
     c8c:	mvn	r3, #0
     c90:	b	cf0 <coda_product_definition_set_description+0xa8>
     c94:	ldr	r3, [fp, #-20]	; 0xffffffec
     c98:	cmp	r3, #0
     c9c:	beq	ce0 <coda_product_definition_set_description+0x98>
     ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
     ca4:	bl	0 <strdup>
     ca8:	mov	r3, r0
     cac:	str	r3, [fp, #-8]
     cb0:	ldr	r3, [fp, #-8]
     cb4:	cmp	r3, #0
     cb8:	bne	ce0 <coda_product_definition_set_description+0x98>
     cbc:	movw	r3, #343	; 0x157
     cc0:	movw	r2, #0
     cc4:	movt	r2, #0
     cc8:	movw	r1, #0
     ccc:	movt	r1, #0
     cd0:	mvn	r0, #0
     cd4:	bl	0 <coda_set_error>
     cd8:	mvn	r3, #0
     cdc:	b	cf0 <coda_product_definition_set_description+0xa8>
     ce0:	ldr	r3, [fp, #-16]
     ce4:	ldr	r2, [fp, #-8]
     ce8:	str	r2, [r3, #12]
     cec:	mov	r3, #0
     cf0:	mov	r0, r3
     cf4:	sub	sp, fp, #4
     cf8:	ldr	fp, [sp]
     cfc:	add	sp, sp, #4
     d00:	pop	{pc}		; (ldr pc, [sp], #4)

00000d04 <coda_product_definition_set_root_type>:
     d04:	str	fp, [sp, #-8]!
     d08:	str	lr, [sp, #4]
     d0c:	add	fp, sp, #4
     d10:	sub	sp, sp, #8
     d14:	str	r0, [fp, #-8]
     d18:	str	r1, [fp, #-12]
     d1c:	ldr	r3, [fp, #-12]
     d20:	cmp	r3, #0
     d24:	bne	d48 <coda_product_definition_set_root_type+0x44>
     d28:	movw	r3, #0
     d2c:	movt	r3, #0
     d30:	movw	r2, #354	; 0x162
     d34:	movw	r1, #0
     d38:	movt	r1, #0
     d3c:	movw	r0, #0
     d40:	movt	r0, #0
     d44:	bl	0 <__assert_fail>
     d48:	ldr	r3, [fp, #-8]
     d4c:	ldr	r3, [r3, #28]
     d50:	cmp	r3, #0
     d54:	beq	d74 <coda_product_definition_set_root_type+0x70>
     d58:	movw	r1, #0
     d5c:	movt	r1, #0
     d60:	movw	r0, #65136	; 0xfe70
     d64:	movt	r0, #65535	; 0xffff
     d68:	bl	0 <coda_set_error>
     d6c:	mvn	r3, #0
     d70:	b	d98 <coda_product_definition_set_root_type+0x94>
     d74:	ldr	r3, [fp, #-8]
     d78:	ldr	r2, [fp, #-12]
     d7c:	str	r2, [r3, #28]
     d80:	ldr	r3, [fp, #-12]
     d84:	ldr	r3, [r3, #4]
     d88:	add	r2, r3, #1
     d8c:	ldr	r3, [fp, #-12]
     d90:	str	r2, [r3, #4]
     d94:	mov	r3, #0
     d98:	mov	r0, r3
     d9c:	sub	sp, fp, #4
     da0:	ldr	fp, [sp]
     da4:	add	sp, sp, #4
     da8:	pop	{pc}		; (ldr pc, [sp], #4)

00000dac <coda_product_definition_add_detection_rule>:
     dac:	str	fp, [sp, #-8]!
     db0:	str	lr, [sp, #4]
     db4:	add	fp, sp, #4
     db8:	sub	sp, sp, #24
     dbc:	str	r0, [fp, #-16]
     dc0:	str	r1, [fp, #-20]	; 0xffffffec
     dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     dc8:	ldr	r3, [r3]
     dcc:	cmp	r3, #0
     dd0:	bne	dfc <coda_product_definition_add_detection_rule+0x50>
     dd4:	ldr	r3, [fp, #-16]
     dd8:	ldr	r3, [r3, #8]
     ddc:	mov	r2, r3
     de0:	movw	r1, #0
     de4:	movt	r1, #0
     de8:	movw	r0, #65136	; 0xfe70
     dec:	movt	r0, #65535	; 0xffff
     df0:	bl	0 <coda_set_error>
     df4:	mvn	r3, #0
     df8:	b	ed8 <coda_product_definition_add_detection_rule+0x12c>
     dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
     e00:	ldr	r2, [fp, #-16]
     e04:	str	r2, [r3, #8]
     e08:	ldr	r0, [fp, #-20]	; 0xffffffec
     e0c:	bl	2aa8 <data_dictionary_add_detection_rule>
     e10:	mov	r3, r0
     e14:	cmp	r3, #0
     e18:	beq	e24 <coda_product_definition_add_detection_rule+0x78>
     e1c:	mvn	r3, #0
     e20:	b	ed8 <coda_product_definition_add_detection_rule+0x12c>
     e24:	ldr	r3, [fp, #-16]
     e28:	ldr	r2, [r3, #20]
     e2c:	ldr	r3, [fp, #-16]
     e30:	ldr	r3, [r3, #16]
     e34:	add	r3, r3, #1
     e38:	lsl	r3, r3, #2
     e3c:	mov	r1, r3
     e40:	mov	r0, r2
     e44:	bl	0 <realloc>
     e48:	str	r0, [fp, #-8]
     e4c:	ldr	r3, [fp, #-8]
     e50:	cmp	r3, #0
     e54:	bne	e90 <coda_product_definition_add_detection_rule+0xe4>
     e58:	ldr	r3, [fp, #-16]
     e5c:	ldr	r3, [r3, #16]
     e60:	add	r3, r3, #1
     e64:	lsl	r2, r3, #2
     e68:	movw	r3, #390	; 0x186
     e6c:	str	r3, [sp]
     e70:	movw	r3, #0
     e74:	movt	r3, #0
     e78:	movw	r1, #0
     e7c:	movt	r1, #0
     e80:	mvn	r0, #0
     e84:	bl	0 <coda_set_error>
     e88:	mvn	r3, #0
     e8c:	b	ed8 <coda_product_definition_add_detection_rule+0x12c>
     e90:	ldr	r3, [fp, #-16]
     e94:	ldr	r2, [fp, #-8]
     e98:	str	r2, [r3, #20]
     e9c:	ldr	r3, [fp, #-16]
     ea0:	ldr	r3, [r3, #16]
     ea4:	add	r2, r3, #1
     ea8:	ldr	r3, [fp, #-16]
     eac:	str	r2, [r3, #16]
     eb0:	ldr	r3, [fp, #-16]
     eb4:	ldr	r2, [r3, #20]
     eb8:	ldr	r3, [fp, #-16]
     ebc:	ldr	r3, [r3, #16]
     ec0:	sub	r3, r3, #-1073741823	; 0xc0000001
     ec4:	lsl	r3, r3, #2
     ec8:	add	r3, r2, r3
     ecc:	ldr	r2, [fp, #-20]	; 0xffffffec
     ed0:	str	r2, [r3]
     ed4:	mov	r3, #0
     ed8:	mov	r0, r3
     edc:	sub	sp, fp, #4
     ee0:	ldr	fp, [sp]
     ee4:	add	sp, sp, #4
     ee8:	pop	{pc}		; (ldr pc, [sp], #4)

00000eec <coda_product_definition_add_product_variable>:
     eec:	str	fp, [sp, #-8]!
     ef0:	str	lr, [sp, #4]
     ef4:	add	fp, sp, #4
     ef8:	sub	sp, sp, #24
     efc:	str	r0, [fp, #-16]
     f00:	str	r1, [fp, #-20]	; 0xffffffec
     f04:	ldr	r3, [fp, #-16]
     f08:	ldr	r2, [r3, #40]	; 0x28
     f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
     f10:	ldr	r3, [r3]
     f14:	mov	r1, r3
     f18:	mov	r0, r2
     f1c:	bl	0 <coda_hashtable_add_name>
     f20:	mov	r3, r0
     f24:	cmp	r3, #0
     f28:	beq	f58 <coda_product_definition_add_product_variable+0x6c>
     f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
     f30:	ldr	r2, [r3]
     f34:	ldr	r3, [fp, #-16]
     f38:	ldr	r3, [r3, #8]
     f3c:	movw	r1, #0
     f40:	movt	r1, #0
     f44:	movw	r0, #65136	; 0xfe70
     f48:	movt	r0, #65535	; 0xffff
     f4c:	bl	0 <coda_set_error>
     f50:	mvn	r3, #0
     f54:	b	1020 <coda_product_definition_add_product_variable+0x134>
     f58:	ldr	r3, [fp, #-16]
     f5c:	ldr	r3, [r3, #32]
     f60:	and	r3, r3, #15
     f64:	cmp	r3, #0
     f68:	bne	fe4 <coda_product_definition_add_product_variable+0xf8>
     f6c:	ldr	r3, [fp, #-16]
     f70:	ldr	r2, [r3, #36]	; 0x24
     f74:	ldr	r3, [fp, #-16]
     f78:	ldr	r3, [r3, #32]
     f7c:	add	r3, r3, #16
     f80:	lsl	r3, r3, #2
     f84:	mov	r1, r3
     f88:	mov	r0, r2
     f8c:	bl	0 <realloc>
     f90:	str	r0, [fp, #-8]
     f94:	ldr	r3, [fp, #-8]
     f98:	cmp	r3, #0
     f9c:	bne	fd8 <coda_product_definition_add_product_variable+0xec>
     fa0:	ldr	r3, [fp, #-16]
     fa4:	ldr	r3, [r3, #32]
     fa8:	add	r3, r3, #16
     fac:	lsl	r2, r3, #2
     fb0:	mov	r3, #420	; 0x1a4
     fb4:	str	r3, [sp]
     fb8:	movw	r3, #0
     fbc:	movt	r3, #0
     fc0:	movw	r1, #0
     fc4:	movt	r1, #0
     fc8:	mvn	r0, #0
     fcc:	bl	0 <coda_set_error>
     fd0:	mvn	r3, #0
     fd4:	b	1020 <coda_product_definition_add_product_variable+0x134>
     fd8:	ldr	r3, [fp, #-16]
     fdc:	ldr	r2, [fp, #-8]
     fe0:	str	r2, [r3, #36]	; 0x24
     fe4:	ldr	r3, [fp, #-16]
     fe8:	ldr	r3, [r3, #32]
     fec:	add	r2, r3, #1
     ff0:	ldr	r3, [fp, #-16]
     ff4:	str	r2, [r3, #32]
     ff8:	ldr	r3, [fp, #-16]
     ffc:	ldr	r2, [r3, #36]	; 0x24
    1000:	ldr	r3, [fp, #-16]
    1004:	ldr	r3, [r3, #32]
    1008:	sub	r3, r3, #-1073741823	; 0xc0000001
    100c:	lsl	r3, r3, #2
    1010:	add	r3, r2, r3
    1014:	ldr	r2, [fp, #-20]	; 0xffffffec
    1018:	str	r2, [r3]
    101c:	mov	r3, #0
    1020:	mov	r0, r3
    1024:	sub	sp, fp, #4
    1028:	ldr	fp, [sp]
    102c:	add	sp, sp, #4
    1030:	pop	{pc}		; (ldr pc, [sp], #4)

00001034 <coda_product_definition_validate>:
    1034:	str	fp, [sp, #-8]!
    1038:	str	lr, [sp, #4]
    103c:	add	fp, sp, #4
    1040:	sub	sp, sp, #8
    1044:	str	r0, [fp, #-8]
    1048:	ldr	r3, [fp, #-8]
    104c:	ldr	r3, [r3]
    1050:	cmp	r3, #0
    1054:	beq	1068 <coda_product_definition_validate+0x34>
    1058:	ldr	r3, [fp, #-8]
    105c:	ldr	r3, [r3]
    1060:	cmp	r3, #1
    1064:	bne	1094 <coda_product_definition_validate+0x60>
    1068:	ldr	r3, [fp, #-8]
    106c:	ldr	r3, [r3, #28]
    1070:	cmp	r3, #0
    1074:	bne	1094 <coda_product_definition_validate+0x60>
    1078:	movw	r1, #0
    107c:	movt	r1, #0
    1080:	movw	r0, #65136	; 0xfe70
    1084:	movt	r0, #65535	; 0xffff
    1088:	bl	0 <coda_set_error>
    108c:	mvn	r3, #0
    1090:	b	10a4 <coda_product_definition_validate+0x70>
    1094:	ldr	r3, [fp, #-8]
    1098:	mov	r2, #1
    109c:	str	r2, [r3, #24]
    10a0:	mov	r3, #0
    10a4:	mov	r0, r3
    10a8:	sub	sp, fp, #4
    10ac:	ldr	fp, [sp]
    10b0:	add	sp, sp, #4
    10b4:	pop	{pc}		; (ldr pc, [sp], #4)

000010b8 <coda_product_type_delete>:
    10b8:	str	fp, [sp, #-8]!
    10bc:	str	lr, [sp, #4]
    10c0:	add	fp, sp, #4
    10c4:	sub	sp, sp, #16
    10c8:	str	r0, [fp, #-16]
    10cc:	ldr	r3, [fp, #-16]
    10d0:	ldr	r3, [r3]
    10d4:	cmp	r3, #0
    10d8:	beq	10ec <coda_product_type_delete+0x34>
    10dc:	ldr	r3, [fp, #-16]
    10e0:	ldr	r3, [r3]
    10e4:	mov	r0, r3
    10e8:	bl	0 <free>
    10ec:	ldr	r3, [fp, #-16]
    10f0:	ldr	r3, [r3, #4]
    10f4:	cmp	r3, #0
    10f8:	beq	110c <coda_product_type_delete+0x54>
    10fc:	ldr	r3, [fp, #-16]
    1100:	ldr	r3, [r3, #4]
    1104:	mov	r0, r3
    1108:	bl	0 <free>
    110c:	ldr	r3, [fp, #-16]
    1110:	ldr	r3, [r3, #16]
    1114:	cmp	r3, #0
    1118:	beq	112c <coda_product_type_delete+0x74>
    111c:	ldr	r3, [fp, #-16]
    1120:	ldr	r3, [r3, #16]
    1124:	mov	r0, r3
    1128:	bl	0 <coda_hashtable_delete>
    112c:	ldr	r3, [fp, #-16]
    1130:	ldr	r3, [r3, #12]
    1134:	cmp	r3, #0
    1138:	beq	1198 <coda_product_type_delete+0xe0>
    113c:	mov	r3, #0
    1140:	str	r3, [fp, #-8]
    1144:	b	1174 <coda_product_type_delete+0xbc>
    1148:	ldr	r3, [fp, #-16]
    114c:	ldr	r2, [r3, #12]
    1150:	ldr	r3, [fp, #-8]
    1154:	lsl	r3, r3, #2
    1158:	add	r3, r2, r3
    115c:	ldr	r3, [r3]
    1160:	mov	r0, r3
    1164:	bl	8dc <coda_product_definition_delete>
    1168:	ldr	r3, [fp, #-8]
    116c:	add	r3, r3, #1
    1170:	str	r3, [fp, #-8]
    1174:	ldr	r3, [fp, #-16]
    1178:	ldr	r3, [r3, #8]
    117c:	ldr	r2, [fp, #-8]
    1180:	cmp	r2, r3
    1184:	blt	1148 <coda_product_type_delete+0x90>
    1188:	ldr	r3, [fp, #-16]
    118c:	ldr	r3, [r3, #12]
    1190:	mov	r0, r3
    1194:	bl	0 <free>
    1198:	ldr	r0, [fp, #-16]
    119c:	bl	0 <free>
    11a0:	nop	{0}
    11a4:	sub	sp, fp, #4
    11a8:	ldr	fp, [sp]
    11ac:	add	sp, sp, #4
    11b0:	pop	{pc}		; (ldr pc, [sp], #4)

000011b4 <coda_product_type_new>:
    11b4:	str	fp, [sp, #-8]!
    11b8:	str	lr, [sp, #4]
    11bc:	add	fp, sp, #4
    11c0:	sub	sp, sp, #24
    11c4:	str	r0, [fp, #-16]
    11c8:	mov	r0, #24
    11cc:	bl	0 <malloc>
    11d0:	mov	r3, r0
    11d4:	str	r3, [fp, #-8]
    11d8:	ldr	r3, [fp, #-8]
    11dc:	cmp	r3, #0
    11e0:	bne	1210 <coda_product_type_new+0x5c>
    11e4:	movw	r3, #482	; 0x1e2
    11e8:	str	r3, [sp]
    11ec:	movw	r3, #0
    11f0:	movt	r3, #0
    11f4:	mov	r2, #24
    11f8:	movw	r1, #0
    11fc:	movt	r1, #0
    1200:	mvn	r0, #0
    1204:	bl	0 <coda_set_error>
    1208:	mov	r3, #0
    120c:	b	12f4 <coda_product_type_new+0x140>
    1210:	ldr	r3, [fp, #-8]
    1214:	mov	r2, #0
    1218:	str	r2, [r3]
    121c:	ldr	r3, [fp, #-8]
    1220:	mov	r2, #0
    1224:	str	r2, [r3, #4]
    1228:	ldr	r3, [fp, #-8]
    122c:	mov	r2, #0
    1230:	str	r2, [r3, #8]
    1234:	ldr	r3, [fp, #-8]
    1238:	mov	r2, #0
    123c:	str	r2, [r3, #16]
    1240:	ldr	r3, [fp, #-8]
    1244:	mov	r2, #0
    1248:	str	r2, [r3, #12]
    124c:	ldr	r0, [fp, #-16]
    1250:	bl	0 <strdup>
    1254:	mov	r3, r0
    1258:	mov	r2, r3
    125c:	ldr	r3, [fp, #-8]
    1260:	str	r2, [r3]
    1264:	ldr	r3, [fp, #-8]
    1268:	ldr	r3, [r3]
    126c:	cmp	r3, #0
    1270:	bne	12a0 <coda_product_type_new+0xec>
    1274:	movw	r3, #495	; 0x1ef
    1278:	movw	r2, #0
    127c:	movt	r2, #0
    1280:	movw	r1, #0
    1284:	movt	r1, #0
    1288:	mvn	r0, #0
    128c:	bl	0 <coda_set_error>
    1290:	ldr	r0, [fp, #-8]
    1294:	bl	10b8 <coda_product_type_delete>
    1298:	mov	r3, #0
    129c:	b	12f4 <coda_product_type_new+0x140>
    12a0:	mov	r0, #1
    12a4:	bl	0 <coda_hashtable_new>
    12a8:	mov	r2, r0
    12ac:	ldr	r3, [fp, #-8]
    12b0:	str	r2, [r3, #16]
    12b4:	ldr	r3, [fp, #-8]
    12b8:	ldr	r3, [r3, #16]
    12bc:	cmp	r3, #0
    12c0:	bne	12f0 <coda_product_type_new+0x13c>
    12c4:	mov	r3, #504	; 0x1f8
    12c8:	movw	r2, #0
    12cc:	movt	r2, #0
    12d0:	movw	r1, #0
    12d4:	movt	r1, #0
    12d8:	mvn	r0, #0
    12dc:	bl	0 <coda_set_error>
    12e0:	ldr	r0, [fp, #-8]
    12e4:	bl	10b8 <coda_product_type_delete>
    12e8:	mov	r3, #0
    12ec:	b	12f4 <coda_product_type_new+0x140>
    12f0:	ldr	r3, [fp, #-8]
    12f4:	mov	r0, r3
    12f8:	sub	sp, fp, #4
    12fc:	ldr	fp, [sp]
    1300:	add	sp, sp, #4
    1304:	pop	{pc}		; (ldr pc, [sp], #4)

00001308 <coda_product_type_set_description>:
    1308:	str	fp, [sp, #-8]!
    130c:	str	lr, [sp, #4]
    1310:	add	fp, sp, #4
    1314:	sub	sp, sp, #16
    1318:	str	r0, [fp, #-16]
    131c:	str	r1, [fp, #-20]	; 0xffffffec
    1320:	mov	r3, #0
    1324:	str	r3, [fp, #-8]
    1328:	ldr	r3, [fp, #-16]
    132c:	ldr	r3, [r3, #4]
    1330:	cmp	r3, #0
    1334:	beq	1354 <coda_product_type_set_description+0x4c>
    1338:	movw	r1, #0
    133c:	movt	r1, #0
    1340:	movw	r0, #65136	; 0xfe70
    1344:	movt	r0, #65535	; 0xffff
    1348:	bl	0 <coda_set_error>
    134c:	mvn	r3, #0
    1350:	b	13b0 <coda_product_type_set_description+0xa8>
    1354:	ldr	r3, [fp, #-20]	; 0xffffffec
    1358:	cmp	r3, #0
    135c:	beq	13a0 <coda_product_type_set_description+0x98>
    1360:	ldr	r0, [fp, #-20]	; 0xffffffec
    1364:	bl	0 <strdup>
    1368:	mov	r3, r0
    136c:	str	r3, [fp, #-8]
    1370:	ldr	r3, [fp, #-8]
    1374:	cmp	r3, #0
    1378:	bne	13a0 <coda_product_type_set_description+0x98>
    137c:	movw	r3, #527	; 0x20f
    1380:	movw	r2, #0
    1384:	movt	r2, #0
    1388:	movw	r1, #0
    138c:	movt	r1, #0
    1390:	mvn	r0, #0
    1394:	bl	0 <coda_set_error>
    1398:	mvn	r3, #0
    139c:	b	13b0 <coda_product_type_set_description+0xa8>
    13a0:	ldr	r3, [fp, #-16]
    13a4:	ldr	r2, [fp, #-8]
    13a8:	str	r2, [r3, #4]
    13ac:	mov	r3, #0
    13b0:	mov	r0, r3
    13b4:	sub	sp, fp, #4
    13b8:	ldr	fp, [sp]
    13bc:	add	sp, sp, #4
    13c0:	pop	{pc}		; (ldr pc, [sp], #4)

000013c4 <coda_product_type_add_product_definition>:
    13c4:	str	fp, [sp, #-8]!
    13c8:	str	lr, [sp, #4]
    13cc:	add	fp, sp, #4
    13d0:	sub	sp, sp, #24
    13d4:	str	r0, [fp, #-16]
    13d8:	str	r1, [fp, #-20]	; 0xffffffec
    13dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    13e0:	ldr	r3, [r3, #44]	; 0x2c
    13e4:	cmp	r3, #0
    13e8:	beq	142c <coda_product_type_add_product_definition+0x68>
    13ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    13f0:	ldr	r2, [r3, #8]
    13f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    13f8:	ldr	r3, [r3, #44]	; 0x2c
    13fc:	ldr	r1, [r3]
    1400:	ldr	r3, [fp, #-16]
    1404:	ldr	r3, [r3]
    1408:	str	r3, [sp]
    140c:	mov	r3, r1
    1410:	movw	r1, #0
    1414:	movt	r1, #0
    1418:	movw	r0, #65136	; 0xfe70
    141c:	movt	r0, #65535	; 0xffff
    1420:	bl	0 <coda_set_error>
    1424:	mvn	r3, #0
    1428:	b	15d8 <coda_product_type_add_product_definition+0x214>
    142c:	mov	r3, #0
    1430:	str	r3, [fp, #-8]
    1434:	b	149c <coda_product_type_add_product_definition+0xd8>
    1438:	ldr	r3, [fp, #-16]
    143c:	ldr	r2, [r3, #12]
    1440:	ldr	r3, [fp, #-8]
    1444:	lsl	r3, r3, #2
    1448:	add	r3, r2, r3
    144c:	ldr	r3, [r3]
    1450:	ldr	r2, [r3, #4]
    1454:	ldr	r3, [fp, #-20]	; 0xffffffec
    1458:	ldr	r3, [r3, #4]
    145c:	cmp	r2, r3
    1460:	bne	1490 <coda_product_type_add_product_definition+0xcc>
    1464:	ldr	r3, [fp, #-20]	; 0xffffffec
    1468:	ldr	r2, [r3, #4]
    146c:	ldr	r3, [fp, #-16]
    1470:	ldr	r3, [r3]
    1474:	movw	r1, #0
    1478:	movt	r1, #0
    147c:	movw	r0, #65136	; 0xfe70
    1480:	movt	r0, #65535	; 0xffff
    1484:	bl	0 <coda_set_error>
    1488:	mvn	r3, #0
    148c:	b	15d8 <coda_product_type_add_product_definition+0x214>
    1490:	ldr	r3, [fp, #-8]
    1494:	add	r3, r3, #1
    1498:	str	r3, [fp, #-8]
    149c:	ldr	r3, [fp, #-16]
    14a0:	ldr	r3, [r3, #8]
    14a4:	ldr	r2, [fp, #-8]
    14a8:	cmp	r2, r3
    14ac:	blt	1438 <coda_product_type_add_product_definition+0x74>
    14b0:	ldr	r3, [fp, #-16]
    14b4:	ldr	r2, [r3, #16]
    14b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    14bc:	ldr	r3, [r3, #8]
    14c0:	mov	r1, r3
    14c4:	mov	r0, r2
    14c8:	bl	0 <coda_hashtable_add_name>
    14cc:	mov	r3, r0
    14d0:	cmp	r3, #0
    14d4:	beq	1504 <coda_product_type_add_product_definition+0x140>
    14d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    14dc:	ldr	r2, [r3, #8]
    14e0:	ldr	r3, [fp, #-16]
    14e4:	ldr	r3, [r3]
    14e8:	movw	r1, #0
    14ec:	movt	r1, #0
    14f0:	movw	r0, #65136	; 0xfe70
    14f4:	movt	r0, #65535	; 0xffff
    14f8:	bl	0 <coda_set_error>
    14fc:	mvn	r3, #0
    1500:	b	15d8 <coda_product_type_add_product_definition+0x214>
    1504:	ldr	r3, [fp, #-16]
    1508:	ldr	r3, [r3, #8]
    150c:	and	r3, r3, #15
    1510:	cmp	r3, #0
    1514:	bne	1590 <coda_product_type_add_product_definition+0x1cc>
    1518:	ldr	r3, [fp, #-16]
    151c:	ldr	r2, [r3, #12]
    1520:	ldr	r3, [fp, #-16]
    1524:	ldr	r3, [r3, #8]
    1528:	add	r3, r3, #16
    152c:	lsl	r3, r3, #2
    1530:	mov	r1, r3
    1534:	mov	r0, r2
    1538:	bl	0 <realloc>
    153c:	str	r0, [fp, #-12]
    1540:	ldr	r3, [fp, #-12]
    1544:	cmp	r3, #0
    1548:	bne	1584 <coda_product_type_add_product_definition+0x1c0>
    154c:	ldr	r3, [fp, #-16]
    1550:	ldr	r3, [r3, #8]
    1554:	add	r3, r3, #16
    1558:	lsl	r2, r3, #2
    155c:	movw	r3, #574	; 0x23e
    1560:	str	r3, [sp]
    1564:	movw	r3, #0
    1568:	movt	r3, #0
    156c:	movw	r1, #0
    1570:	movt	r1, #0
    1574:	mvn	r0, #0
    1578:	bl	0 <coda_set_error>
    157c:	mvn	r3, #0
    1580:	b	15d8 <coda_product_type_add_product_definition+0x214>
    1584:	ldr	r3, [fp, #-16]
    1588:	ldr	r2, [fp, #-12]
    158c:	str	r2, [r3, #12]
    1590:	ldr	r3, [fp, #-16]
    1594:	ldr	r3, [r3, #8]
    1598:	add	r2, r3, #1
    159c:	ldr	r3, [fp, #-16]
    15a0:	str	r2, [r3, #8]
    15a4:	ldr	r3, [fp, #-16]
    15a8:	ldr	r2, [r3, #12]
    15ac:	ldr	r3, [fp, #-16]
    15b0:	ldr	r3, [r3, #8]
    15b4:	sub	r3, r3, #-1073741823	; 0xc0000001
    15b8:	lsl	r3, r3, #2
    15bc:	add	r3, r2, r3
    15c0:	ldr	r2, [fp, #-20]	; 0xffffffec
    15c4:	str	r2, [r3]
    15c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    15cc:	ldr	r2, [fp, #-16]
    15d0:	str	r2, [r3, #44]	; 0x2c
    15d4:	mov	r3, #0
    15d8:	mov	r0, r3
    15dc:	sub	sp, fp, #4
    15e0:	ldr	fp, [sp]
    15e4:	add	sp, sp, #4
    15e8:	pop	{pc}		; (ldr pc, [sp], #4)

000015ec <coda_product_type_get_product_definition_by_version>:
    15ec:	str	fp, [sp, #-8]!
    15f0:	str	lr, [sp, #4]
    15f4:	add	fp, sp, #4
    15f8:	sub	sp, sp, #16
    15fc:	str	r0, [fp, #-16]
    1600:	str	r1, [fp, #-20]	; 0xffffffec
    1604:	mov	r3, #0
    1608:	str	r3, [fp, #-8]
    160c:	b	1660 <coda_product_type_get_product_definition_by_version+0x74>
    1610:	ldr	r3, [fp, #-16]
    1614:	ldr	r2, [r3, #12]
    1618:	ldr	r3, [fp, #-8]
    161c:	lsl	r3, r3, #2
    1620:	add	r3, r2, r3
    1624:	ldr	r3, [r3]
    1628:	ldr	r3, [r3, #4]
    162c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1630:	cmp	r2, r3
    1634:	bne	1654 <coda_product_type_get_product_definition_by_version+0x68>
    1638:	ldr	r3, [fp, #-16]
    163c:	ldr	r2, [r3, #12]
    1640:	ldr	r3, [fp, #-8]
    1644:	lsl	r3, r3, #2
    1648:	add	r3, r2, r3
    164c:	ldr	r3, [r3]
    1650:	b	1698 <coda_product_type_get_product_definition_by_version+0xac>
    1654:	ldr	r3, [fp, #-8]
    1658:	add	r3, r3, #1
    165c:	str	r3, [fp, #-8]
    1660:	ldr	r3, [fp, #-16]
    1664:	ldr	r3, [r3, #8]
    1668:	ldr	r2, [fp, #-8]
    166c:	cmp	r2, r3
    1670:	blt	1610 <coda_product_type_get_product_definition_by_version+0x24>
    1674:	ldr	r3, [fp, #-16]
    1678:	ldr	r2, [r3]
    167c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1680:	movw	r1, #0
    1684:	movt	r1, #0
    1688:	movw	r0, #65136	; 0xfe70
    168c:	movt	r0, #65535	; 0xffff
    1690:	bl	0 <coda_set_error>
    1694:	mov	r3, #0
    1698:	mov	r0, r3
    169c:	sub	sp, fp, #4
    16a0:	ldr	fp, [sp]
    16a4:	add	sp, sp, #4
    16a8:	pop	{pc}		; (ldr pc, [sp], #4)

000016ac <coda_product_type_get_latest_product_definition>:
    16ac:	str	fp, [sp, #-8]!
    16b0:	str	lr, [sp, #4]
    16b4:	add	fp, sp, #4
    16b8:	sub	sp, sp, #24
    16bc:	str	r0, [fp, #-24]	; 0xffffffe8
    16c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    16c4:	ldr	r3, [r3, #8]
    16c8:	cmp	r3, #0
    16cc:	bne	16f8 <coda_product_type_get_latest_product_definition+0x4c>
    16d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    16d4:	ldr	r3, [r3]
    16d8:	mov	r2, r3
    16dc:	movw	r1, #0
    16e0:	movt	r1, #0
    16e4:	movw	r0, #65136	; 0xfe70
    16e8:	movt	r0, #65535	; 0xffff
    16ec:	bl	0 <coda_set_error>
    16f0:	mov	r3, #0
    16f4:	b	17a8 <coda_product_type_get_latest_product_definition+0xfc>
    16f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    16fc:	ldr	r3, [r3, #12]
    1700:	ldr	r3, [r3]
    1704:	ldr	r3, [r3, #4]
    1708:	str	r3, [fp, #-8]
    170c:	mov	r3, #0
    1710:	str	r3, [fp, #-12]
    1714:	mov	r3, #1
    1718:	str	r3, [fp, #-16]
    171c:	b	177c <coda_product_type_get_latest_product_definition+0xd0>
    1720:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1724:	ldr	r2, [r3, #12]
    1728:	ldr	r3, [fp, #-16]
    172c:	lsl	r3, r3, #2
    1730:	add	r3, r2, r3
    1734:	ldr	r3, [r3]
    1738:	ldr	r3, [r3, #4]
    173c:	ldr	r2, [fp, #-8]
    1740:	cmp	r2, r3
    1744:	bge	1770 <coda_product_type_get_latest_product_definition+0xc4>
    1748:	ldr	r3, [fp, #-24]	; 0xffffffe8
    174c:	ldr	r2, [r3, #12]
    1750:	ldr	r3, [fp, #-16]
    1754:	lsl	r3, r3, #2
    1758:	add	r3, r2, r3
    175c:	ldr	r3, [r3]
    1760:	ldr	r3, [r3, #4]
    1764:	str	r3, [fp, #-8]
    1768:	ldr	r3, [fp, #-16]
    176c:	str	r3, [fp, #-12]
    1770:	ldr	r3, [fp, #-16]
    1774:	add	r3, r3, #1
    1778:	str	r3, [fp, #-16]
    177c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1780:	ldr	r3, [r3, #8]
    1784:	ldr	r2, [fp, #-16]
    1788:	cmp	r2, r3
    178c:	blt	1720 <coda_product_type_get_latest_product_definition+0x74>
    1790:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1794:	ldr	r2, [r3, #12]
    1798:	ldr	r3, [fp, #-12]
    179c:	lsl	r3, r3, #2
    17a0:	add	r3, r2, r3
    17a4:	ldr	r3, [r3]
    17a8:	mov	r0, r3
    17ac:	sub	sp, fp, #4
    17b0:	ldr	fp, [sp]
    17b4:	add	sp, sp, #4
    17b8:	pop	{pc}		; (ldr pc, [sp], #4)

000017bc <coda_product_class_delete>:
    17bc:	str	fp, [sp, #-8]!
    17c0:	str	lr, [sp, #4]
    17c4:	add	fp, sp, #4
    17c8:	sub	sp, sp, #16
    17cc:	str	r0, [fp, #-16]
    17d0:	ldr	r3, [fp, #-16]
    17d4:	ldr	r3, [r3]
    17d8:	cmp	r3, #0
    17dc:	beq	17f0 <coda_product_class_delete+0x34>
    17e0:	ldr	r3, [fp, #-16]
    17e4:	ldr	r3, [r3]
    17e8:	mov	r0, r3
    17ec:	bl	0 <free>
    17f0:	ldr	r3, [fp, #-16]
    17f4:	ldr	r3, [r3, #4]
    17f8:	cmp	r3, #0
    17fc:	beq	1810 <coda_product_class_delete+0x54>
    1800:	ldr	r3, [fp, #-16]
    1804:	ldr	r3, [r3, #4]
    1808:	mov	r0, r3
    180c:	bl	0 <free>
    1810:	ldr	r3, [fp, #-16]
    1814:	ldr	r3, [r3, #8]
    1818:	cmp	r3, #0
    181c:	beq	1830 <coda_product_class_delete+0x74>
    1820:	ldr	r3, [fp, #-16]
    1824:	ldr	r3, [r3, #8]
    1828:	mov	r0, r3
    182c:	bl	0 <free>
    1830:	ldr	r3, [fp, #-16]
    1834:	ldr	r3, [r3, #24]
    1838:	cmp	r3, #0
    183c:	beq	1850 <coda_product_class_delete+0x94>
    1840:	ldr	r3, [fp, #-16]
    1844:	ldr	r3, [r3, #24]
    1848:	mov	r0, r3
    184c:	bl	0 <coda_hashtable_delete>
    1850:	ldr	r3, [fp, #-16]
    1854:	ldr	r3, [r3, #36]	; 0x24
    1858:	cmp	r3, #0
    185c:	beq	1870 <coda_product_class_delete+0xb4>
    1860:	ldr	r3, [fp, #-16]
    1864:	ldr	r3, [r3, #36]	; 0x24
    1868:	mov	r0, r3
    186c:	bl	0 <coda_hashtable_delete>
    1870:	ldr	r3, [fp, #-16]
    1874:	ldr	r3, [r3, #20]
    1878:	cmp	r3, #0
    187c:	beq	18dc <coda_product_class_delete+0x120>
    1880:	mov	r3, #0
    1884:	str	r3, [fp, #-8]
    1888:	b	18b8 <coda_product_class_delete+0xfc>
    188c:	ldr	r3, [fp, #-16]
    1890:	ldr	r2, [r3, #20]
    1894:	ldr	r3, [fp, #-8]
    1898:	lsl	r3, r3, #2
    189c:	add	r3, r2, r3
    18a0:	ldr	r3, [r3]
    18a4:	mov	r0, r3
    18a8:	bl	0 <coda_type_release>
    18ac:	ldr	r3, [fp, #-8]
    18b0:	add	r3, r3, #1
    18b4:	str	r3, [fp, #-8]
    18b8:	ldr	r3, [fp, #-16]
    18bc:	ldr	r3, [r3, #16]
    18c0:	ldr	r2, [fp, #-8]
    18c4:	cmp	r2, r3
    18c8:	blt	188c <coda_product_class_delete+0xd0>
    18cc:	ldr	r3, [fp, #-16]
    18d0:	ldr	r3, [r3, #20]
    18d4:	mov	r0, r3
    18d8:	bl	0 <free>
    18dc:	ldr	r3, [fp, #-16]
    18e0:	ldr	r3, [r3, #32]
    18e4:	cmp	r3, #0
    18e8:	beq	1948 <coda_product_class_delete+0x18c>
    18ec:	mov	r3, #0
    18f0:	str	r3, [fp, #-8]
    18f4:	b	1924 <coda_product_class_delete+0x168>
    18f8:	ldr	r3, [fp, #-16]
    18fc:	ldr	r2, [r3, #32]
    1900:	ldr	r3, [fp, #-8]
    1904:	lsl	r3, r3, #2
    1908:	add	r3, r2, r3
    190c:	ldr	r3, [r3]
    1910:	mov	r0, r3
    1914:	bl	10b8 <coda_product_type_delete>
    1918:	ldr	r3, [fp, #-8]
    191c:	add	r3, r3, #1
    1920:	str	r3, [fp, #-8]
    1924:	ldr	r3, [fp, #-16]
    1928:	ldr	r3, [r3, #28]
    192c:	ldr	r2, [fp, #-8]
    1930:	cmp	r2, r3
    1934:	blt	18f8 <coda_product_class_delete+0x13c>
    1938:	ldr	r3, [fp, #-16]
    193c:	ldr	r3, [r3, #32]
    1940:	mov	r0, r3
    1944:	bl	0 <free>
    1948:	ldr	r0, [fp, #-16]
    194c:	bl	0 <free>
    1950:	nop	{0}
    1954:	sub	sp, fp, #4
    1958:	ldr	fp, [sp]
    195c:	add	sp, sp, #4
    1960:	pop	{pc}		; (ldr pc, [sp], #4)

00001964 <coda_product_class_new>:
    1964:	str	fp, [sp, #-8]!
    1968:	str	lr, [sp, #4]
    196c:	add	fp, sp, #4
    1970:	sub	sp, sp, #16
    1974:	str	r0, [fp, #-16]
    1978:	ldr	r0, [fp, #-16]
    197c:	bl	0 <coda_is_identifier>
    1980:	mov	r3, r0
    1984:	cmp	r3, #0
    1988:	bne	19ac <coda_product_class_new+0x48>
    198c:	ldr	r2, [fp, #-16]
    1990:	movw	r1, #0
    1994:	movt	r1, #0
    1998:	movw	r0, #65136	; 0xfe70
    199c:	movt	r0, #65535	; 0xffff
    19a0:	bl	0 <coda_set_error>
    19a4:	mov	r3, #0
    19a8:	b	1b58 <coda_product_class_new+0x1f4>
    19ac:	mov	r0, #40	; 0x28
    19b0:	bl	0 <malloc>
    19b4:	mov	r3, r0
    19b8:	str	r3, [fp, #-8]
    19bc:	ldr	r3, [fp, #-8]
    19c0:	cmp	r3, #0
    19c4:	bne	19e8 <coda_product_class_new+0x84>
    19c8:	movw	r3, #0
    19cc:	movt	r3, #0
    19d0:	movw	r2, #686	; 0x2ae
    19d4:	movw	r1, #0
    19d8:	movt	r1, #0
    19dc:	movw	r0, #0
    19e0:	movt	r0, #0
    19e4:	bl	0 <__assert_fail>
    19e8:	ldr	r3, [fp, #-8]
    19ec:	mov	r2, #0
    19f0:	str	r2, [r3]
    19f4:	ldr	r3, [fp, #-8]
    19f8:	mov	r2, #0
    19fc:	str	r2, [r3, #4]
    1a00:	ldr	r3, [fp, #-8]
    1a04:	mov	r2, #0
    1a08:	str	r2, [r3, #8]
    1a0c:	ldr	r3, [fp, #-8]
    1a10:	mov	r2, #0
    1a14:	str	r2, [r3, #12]
    1a18:	ldr	r3, [fp, #-8]
    1a1c:	mov	r2, #0
    1a20:	str	r2, [r3, #16]
    1a24:	ldr	r3, [fp, #-8]
    1a28:	mov	r2, #0
    1a2c:	str	r2, [r3, #20]
    1a30:	ldr	r3, [fp, #-8]
    1a34:	mov	r2, #0
    1a38:	str	r2, [r3, #24]
    1a3c:	ldr	r3, [fp, #-8]
    1a40:	mov	r2, #0
    1a44:	str	r2, [r3, #28]
    1a48:	ldr	r3, [fp, #-8]
    1a4c:	mov	r2, #0
    1a50:	str	r2, [r3, #32]
    1a54:	ldr	r3, [fp, #-8]
    1a58:	mov	r2, #0
    1a5c:	str	r2, [r3, #36]	; 0x24
    1a60:	ldr	r0, [fp, #-16]
    1a64:	bl	0 <strdup>
    1a68:	mov	r3, r0
    1a6c:	mov	r2, r3
    1a70:	ldr	r3, [fp, #-8]
    1a74:	str	r2, [r3]
    1a78:	ldr	r3, [fp, #-8]
    1a7c:	ldr	r3, [r3]
    1a80:	cmp	r3, #0
    1a84:	bne	1ab4 <coda_product_class_new+0x150>
    1a88:	movw	r3, #702	; 0x2be
    1a8c:	movw	r2, #0
    1a90:	movt	r2, #0
    1a94:	movw	r1, #0
    1a98:	movt	r1, #0
    1a9c:	mvn	r0, #0
    1aa0:	bl	0 <coda_set_error>
    1aa4:	ldr	r0, [fp, #-8]
    1aa8:	bl	17bc <coda_product_class_delete>
    1aac:	mov	r3, #0
    1ab0:	b	1b58 <coda_product_class_new+0x1f4>
    1ab4:	mov	r0, #1
    1ab8:	bl	0 <coda_hashtable_new>
    1abc:	mov	r2, r0
    1ac0:	ldr	r3, [fp, #-8]
    1ac4:	str	r2, [r3, #24]
    1ac8:	ldr	r3, [fp, #-8]
    1acc:	ldr	r3, [r3, #24]
    1ad0:	cmp	r3, #0
    1ad4:	bne	1b04 <coda_product_class_new+0x1a0>
    1ad8:	movw	r3, #711	; 0x2c7
    1adc:	movw	r2, #0
    1ae0:	movt	r2, #0
    1ae4:	movw	r1, #0
    1ae8:	movt	r1, #0
    1aec:	mvn	r0, #0
    1af0:	bl	0 <coda_set_error>
    1af4:	ldr	r0, [fp, #-8]
    1af8:	bl	17bc <coda_product_class_delete>
    1afc:	mov	r3, #0
    1b00:	b	1b58 <coda_product_class_new+0x1f4>
    1b04:	mov	r0, #1
    1b08:	bl	0 <coda_hashtable_new>
    1b0c:	mov	r2, r0
    1b10:	ldr	r3, [fp, #-8]
    1b14:	str	r2, [r3, #36]	; 0x24
    1b18:	ldr	r3, [fp, #-8]
    1b1c:	ldr	r3, [r3, #36]	; 0x24
    1b20:	cmp	r3, #0
    1b24:	bne	1b54 <coda_product_class_new+0x1f0>
    1b28:	mov	r3, #720	; 0x2d0
    1b2c:	movw	r2, #0
    1b30:	movt	r2, #0
    1b34:	movw	r1, #0
    1b38:	movt	r1, #0
    1b3c:	mvn	r0, #0
    1b40:	bl	0 <coda_set_error>
    1b44:	ldr	r0, [fp, #-8]
    1b48:	bl	17bc <coda_product_class_delete>
    1b4c:	mov	r3, #0
    1b50:	b	1b58 <coda_product_class_new+0x1f4>
    1b54:	ldr	r3, [fp, #-8]
    1b58:	mov	r0, r3
    1b5c:	sub	sp, fp, #4
    1b60:	ldr	fp, [sp]
    1b64:	add	sp, sp, #4
    1b68:	pop	{pc}		; (ldr pc, [sp], #4)

00001b6c <coda_product_class_set_description>:
    1b6c:	str	fp, [sp, #-8]!
    1b70:	str	lr, [sp, #4]
    1b74:	add	fp, sp, #4
    1b78:	sub	sp, sp, #16
    1b7c:	str	r0, [fp, #-16]
    1b80:	str	r1, [fp, #-20]	; 0xffffffec
    1b84:	mov	r3, #0
    1b88:	str	r3, [fp, #-8]
    1b8c:	ldr	r3, [fp, #-16]
    1b90:	ldr	r3, [r3, #4]
    1b94:	cmp	r3, #0
    1b98:	beq	1bb8 <coda_product_class_set_description+0x4c>
    1b9c:	movw	r1, #0
    1ba0:	movt	r1, #0
    1ba4:	movw	r0, #65136	; 0xfe70
    1ba8:	movt	r0, #65535	; 0xffff
    1bac:	bl	0 <coda_set_error>
    1bb0:	mvn	r3, #0
    1bb4:	b	1c14 <coda_product_class_set_description+0xa8>
    1bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bbc:	cmp	r3, #0
    1bc0:	beq	1c04 <coda_product_class_set_description+0x98>
    1bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bc8:	bl	0 <strdup>
    1bcc:	mov	r3, r0
    1bd0:	str	r3, [fp, #-8]
    1bd4:	ldr	r3, [fp, #-8]
    1bd8:	cmp	r3, #0
    1bdc:	bne	1c04 <coda_product_class_set_description+0x98>
    1be0:	movw	r3, #743	; 0x2e7
    1be4:	movw	r2, #0
    1be8:	movt	r2, #0
    1bec:	movw	r1, #0
    1bf0:	movt	r1, #0
    1bf4:	mvn	r0, #0
    1bf8:	bl	0 <coda_set_error>
    1bfc:	mvn	r3, #0
    1c00:	b	1c14 <coda_product_class_set_description+0xa8>
    1c04:	ldr	r3, [fp, #-16]
    1c08:	ldr	r2, [fp, #-8]
    1c0c:	str	r2, [r3, #4]
    1c10:	mov	r3, #0
    1c14:	mov	r0, r3
    1c18:	sub	sp, fp, #4
    1c1c:	ldr	fp, [sp]
    1c20:	add	sp, sp, #4
    1c24:	pop	{pc}		; (ldr pc, [sp], #4)

00001c28 <coda_product_class_set_definition_file>:
    1c28:	str	fp, [sp, #-8]!
    1c2c:	str	lr, [sp, #4]
    1c30:	add	fp, sp, #4
    1c34:	sub	sp, sp, #16
    1c38:	str	r0, [fp, #-16]
    1c3c:	str	r1, [fp, #-20]	; 0xffffffec
    1c40:	mov	r3, #0
    1c44:	str	r3, [fp, #-8]
    1c48:	ldr	r3, [fp, #-16]
    1c4c:	ldr	r3, [r3, #8]
    1c50:	cmp	r3, #0
    1c54:	beq	1c74 <coda_product_class_set_definition_file+0x4c>
    1c58:	movw	r1, #0
    1c5c:	movt	r1, #0
    1c60:	movw	r0, #65136	; 0xfe70
    1c64:	movt	r0, #65535	; 0xffff
    1c68:	bl	0 <coda_set_error>
    1c6c:	mvn	r3, #0
    1c70:	b	1cd0 <coda_product_class_set_definition_file+0xa8>
    1c74:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c78:	cmp	r3, #0
    1c7c:	beq	1cc0 <coda_product_class_set_definition_file+0x98>
    1c80:	ldr	r0, [fp, #-20]	; 0xffffffec
    1c84:	bl	0 <strdup>
    1c88:	mov	r3, r0
    1c8c:	str	r3, [fp, #-8]
    1c90:	ldr	r3, [fp, #-8]
    1c94:	cmp	r3, #0
    1c98:	bne	1cc0 <coda_product_class_set_definition_file+0x98>
    1c9c:	movw	r3, #767	; 0x2ff
    1ca0:	movw	r2, #0
    1ca4:	movt	r2, #0
    1ca8:	movw	r1, #0
    1cac:	movt	r1, #0
    1cb0:	mvn	r0, #0
    1cb4:	bl	0 <coda_set_error>
    1cb8:	mvn	r3, #0
    1cbc:	b	1cd0 <coda_product_class_set_definition_file+0xa8>
    1cc0:	ldr	r3, [fp, #-16]
    1cc4:	ldr	r2, [fp, #-8]
    1cc8:	str	r2, [r3, #8]
    1ccc:	mov	r3, #0
    1cd0:	mov	r0, r3
    1cd4:	sub	sp, fp, #4
    1cd8:	ldr	fp, [sp]
    1cdc:	add	sp, sp, #4
    1ce0:	pop	{pc}		; (ldr pc, [sp], #4)

00001ce4 <coda_product_class_set_revision>:
    1ce4:	push	{fp}		; (str fp, [sp, #-4]!)
    1ce8:	add	fp, sp, #0
    1cec:	sub	sp, sp, #12
    1cf0:	str	r0, [fp, #-8]
    1cf4:	str	r1, [fp, #-12]
    1cf8:	ldr	r3, [fp, #-8]
    1cfc:	ldr	r2, [fp, #-12]
    1d00:	str	r2, [r3, #12]
    1d04:	mov	r3, #0
    1d08:	mov	r0, r3
    1d0c:	add	sp, fp, #0
    1d10:	pop	{fp}		; (ldr fp, [sp], #4)
    1d14:	bx	lr

00001d18 <coda_product_class_add_product_type>:
    1d18:	str	fp, [sp, #-8]!
    1d1c:	str	lr, [sp, #4]
    1d20:	add	fp, sp, #4
    1d24:	sub	sp, sp, #24
    1d28:	str	r0, [fp, #-16]
    1d2c:	str	r1, [fp, #-20]	; 0xffffffec
    1d30:	ldr	r3, [fp, #-16]
    1d34:	ldr	r2, [r3, #36]	; 0x24
    1d38:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d3c:	ldr	r3, [r3]
    1d40:	mov	r1, r3
    1d44:	mov	r0, r2
    1d48:	bl	0 <coda_hashtable_add_name>
    1d4c:	mov	r3, r0
    1d50:	cmp	r3, #0
    1d54:	beq	1d84 <coda_product_class_add_product_type+0x6c>
    1d58:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d5c:	ldr	r2, [r3]
    1d60:	ldr	r3, [fp, #-16]
    1d64:	ldr	r3, [r3]
    1d68:	movw	r1, #0
    1d6c:	movt	r1, #0
    1d70:	movw	r0, #65136	; 0xfe70
    1d74:	movt	r0, #65535	; 0xffff
    1d78:	bl	0 <coda_set_error>
    1d7c:	mvn	r3, #0
    1d80:	b	1e58 <coda_product_class_add_product_type+0x140>
    1d84:	ldr	r3, [fp, #-16]
    1d88:	ldr	r3, [r3, #28]
    1d8c:	and	r3, r3, #15
    1d90:	cmp	r3, #0
    1d94:	bne	1e10 <coda_product_class_add_product_type+0xf8>
    1d98:	ldr	r3, [fp, #-16]
    1d9c:	ldr	r2, [r3, #32]
    1da0:	ldr	r3, [fp, #-16]
    1da4:	ldr	r3, [r3, #28]
    1da8:	add	r3, r3, #16
    1dac:	lsl	r3, r3, #2
    1db0:	mov	r1, r3
    1db4:	mov	r0, r2
    1db8:	bl	0 <realloc>
    1dbc:	str	r0, [fp, #-8]
    1dc0:	ldr	r3, [fp, #-8]
    1dc4:	cmp	r3, #0
    1dc8:	bne	1e04 <coda_product_class_add_product_type+0xec>
    1dcc:	ldr	r3, [fp, #-16]
    1dd0:	ldr	r3, [r3, #28]
    1dd4:	add	r3, r3, #16
    1dd8:	lsl	r2, r3, #2
    1ddc:	mov	r3, #800	; 0x320
    1de0:	str	r3, [sp]
    1de4:	movw	r3, #0
    1de8:	movt	r3, #0
    1dec:	movw	r1, #0
    1df0:	movt	r1, #0
    1df4:	mvn	r0, #0
    1df8:	bl	0 <coda_set_error>
    1dfc:	mvn	r3, #0
    1e00:	b	1e58 <coda_product_class_add_product_type+0x140>
    1e04:	ldr	r3, [fp, #-16]
    1e08:	ldr	r2, [fp, #-8]
    1e0c:	str	r2, [r3, #32]
    1e10:	ldr	r3, [fp, #-16]
    1e14:	ldr	r3, [r3, #28]
    1e18:	add	r2, r3, #1
    1e1c:	ldr	r3, [fp, #-16]
    1e20:	str	r2, [r3, #28]
    1e24:	ldr	r3, [fp, #-16]
    1e28:	ldr	r2, [r3, #32]
    1e2c:	ldr	r3, [fp, #-16]
    1e30:	ldr	r3, [r3, #28]
    1e34:	sub	r3, r3, #-1073741823	; 0xc0000001
    1e38:	lsl	r3, r3, #2
    1e3c:	add	r3, r2, r3
    1e40:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e44:	str	r2, [r3]
    1e48:	ldr	r3, [fp, #-20]	; 0xffffffec
    1e4c:	ldr	r2, [fp, #-16]
    1e50:	str	r2, [r3, #20]
    1e54:	mov	r3, #0
    1e58:	mov	r0, r3
    1e5c:	sub	sp, fp, #4
    1e60:	ldr	fp, [sp]
    1e64:	add	sp, sp, #4
    1e68:	pop	{pc}		; (ldr pc, [sp], #4)

00001e6c <coda_product_class_get_product_type>:
    1e6c:	str	fp, [sp, #-8]!
    1e70:	str	lr, [sp, #4]
    1e74:	add	fp, sp, #4
    1e78:	sub	sp, sp, #16
    1e7c:	str	r0, [fp, #-16]
    1e80:	str	r1, [fp, #-20]	; 0xffffffec
    1e84:	ldr	r3, [fp, #-16]
    1e88:	ldr	r3, [r3, #36]	; 0x24
    1e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e90:	mov	r0, r3
    1e94:	bl	0 <coda_hashtable_get_index_from_name>
    1e98:	str	r0, [fp, #-8]
    1e9c:	ldr	r3, [fp, #-8]
    1ea0:	cmn	r3, #1
    1ea4:	bne	1ed0 <coda_product_class_get_product_type+0x64>
    1ea8:	ldr	r3, [fp, #-16]
    1eac:	ldr	r2, [r3]
    1eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1eb4:	movw	r1, #0
    1eb8:	movt	r1, #0
    1ebc:	movw	r0, #65136	; 0xfe70
    1ec0:	movt	r0, #65535	; 0xffff
    1ec4:	bl	0 <coda_set_error>
    1ec8:	mov	r3, #0
    1ecc:	b	1ee8 <coda_product_class_get_product_type+0x7c>
    1ed0:	ldr	r3, [fp, #-16]
    1ed4:	ldr	r2, [r3, #32]
    1ed8:	ldr	r3, [fp, #-8]
    1edc:	lsl	r3, r3, #2
    1ee0:	add	r3, r2, r3
    1ee4:	ldr	r3, [r3]
    1ee8:	mov	r0, r3
    1eec:	sub	sp, fp, #4
    1ef0:	ldr	fp, [sp]
    1ef4:	add	sp, sp, #4
    1ef8:	pop	{pc}		; (ldr pc, [sp], #4)

00001efc <coda_product_class_has_product_type>:
    1efc:	str	fp, [sp, #-8]!
    1f00:	str	lr, [sp, #4]
    1f04:	add	fp, sp, #4
    1f08:	sub	sp, sp, #8
    1f0c:	str	r0, [fp, #-8]
    1f10:	str	r1, [fp, #-12]
    1f14:	ldr	r3, [fp, #-8]
    1f18:	ldr	r3, [r3, #36]	; 0x24
    1f1c:	ldr	r1, [fp, #-12]
    1f20:	mov	r0, r3
    1f24:	bl	0 <coda_hashtable_get_index_from_name>
    1f28:	mov	r3, r0
    1f2c:	cmn	r3, #1
    1f30:	movne	r3, #1
    1f34:	moveq	r3, #0
    1f38:	uxtb	r3, r3
    1f3c:	mov	r0, r3
    1f40:	sub	sp, fp, #4
    1f44:	ldr	fp, [sp]
    1f48:	add	sp, sp, #4
    1f4c:	pop	{pc}		; (ldr pc, [sp], #4)

00001f50 <coda_product_class_add_named_type>:
    1f50:	str	fp, [sp, #-8]!
    1f54:	str	lr, [sp, #4]
    1f58:	add	fp, sp, #4
    1f5c:	sub	sp, sp, #16
    1f60:	str	r0, [fp, #-16]
    1f64:	str	r1, [fp, #-20]	; 0xffffffec
    1f68:	ldr	r3, [fp, #-16]
    1f6c:	ldr	r2, [r3, #24]
    1f70:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f74:	ldr	r3, [r3, #16]
    1f78:	mov	r1, r3
    1f7c:	mov	r0, r2
    1f80:	bl	0 <coda_hashtable_add_name>
    1f84:	mov	r3, r0
    1f88:	cmp	r3, #0
    1f8c:	beq	1fbc <coda_product_class_add_named_type+0x6c>
    1f90:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f94:	ldr	r2, [r3, #16]
    1f98:	ldr	r3, [fp, #-16]
    1f9c:	ldr	r3, [r3]
    1fa0:	movw	r1, #0
    1fa4:	movt	r1, #0
    1fa8:	movw	r0, #65136	; 0xfe70
    1fac:	movt	r0, #65535	; 0xffff
    1fb0:	bl	0 <coda_set_error>
    1fb4:	mvn	r3, #0
    1fb8:	b	2080 <coda_product_class_add_named_type+0x130>
    1fbc:	ldr	r3, [fp, #-16]
    1fc0:	ldr	r3, [r3, #16]
    1fc4:	and	r3, r3, #15
    1fc8:	cmp	r3, #0
    1fcc:	bne	2030 <coda_product_class_add_named_type+0xe0>
    1fd0:	ldr	r3, [fp, #-16]
    1fd4:	ldr	r2, [r3, #20]
    1fd8:	ldr	r3, [fp, #-16]
    1fdc:	ldr	r3, [r3, #16]
    1fe0:	add	r3, r3, #16
    1fe4:	lsl	r3, r3, #2
    1fe8:	mov	r1, r3
    1fec:	mov	r0, r2
    1ff0:	bl	0 <realloc>
    1ff4:	str	r0, [fp, #-8]
    1ff8:	ldr	r3, [fp, #-8]
    1ffc:	cmp	r3, #0
    2000:	bne	2024 <coda_product_class_add_named_type+0xd4>
    2004:	movw	r3, #0
    2008:	movt	r3, #0
    200c:	mov	r2, #848	; 0x350
    2010:	movw	r1, #0
    2014:	movt	r1, #0
    2018:	movw	r0, #0
    201c:	movt	r0, #0
    2020:	bl	0 <__assert_fail>
    2024:	ldr	r3, [fp, #-16]
    2028:	ldr	r2, [fp, #-8]
    202c:	str	r2, [r3, #20]
    2030:	ldr	r3, [fp, #-16]
    2034:	ldr	r3, [r3, #16]
    2038:	add	r2, r3, #1
    203c:	ldr	r3, [fp, #-16]
    2040:	str	r2, [r3, #16]
    2044:	ldr	r3, [fp, #-16]
    2048:	ldr	r2, [r3, #20]
    204c:	ldr	r3, [fp, #-16]
    2050:	ldr	r3, [r3, #16]
    2054:	sub	r3, r3, #-1073741823	; 0xc0000001
    2058:	lsl	r3, r3, #2
    205c:	add	r3, r2, r3
    2060:	ldr	r2, [fp, #-20]	; 0xffffffec
    2064:	str	r2, [r3]
    2068:	ldr	r3, [fp, #-20]	; 0xffffffec
    206c:	ldr	r3, [r3, #4]
    2070:	add	r2, r3, #1
    2074:	ldr	r3, [fp, #-20]	; 0xffffffec
    2078:	str	r2, [r3, #4]
    207c:	mov	r3, #0
    2080:	mov	r0, r3
    2084:	sub	sp, fp, #4
    2088:	ldr	fp, [sp]
    208c:	add	sp, sp, #4
    2090:	pop	{pc}		; (ldr pc, [sp], #4)

00002094 <coda_product_class_get_named_type>:
    2094:	str	fp, [sp, #-8]!
    2098:	str	lr, [sp, #4]
    209c:	add	fp, sp, #4
    20a0:	sub	sp, sp, #16
    20a4:	str	r0, [fp, #-16]
    20a8:	str	r1, [fp, #-20]	; 0xffffffec
    20ac:	ldr	r3, [fp, #-16]
    20b0:	ldr	r3, [r3, #24]
    20b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    20b8:	mov	r0, r3
    20bc:	bl	0 <coda_hashtable_get_index_from_name>
    20c0:	str	r0, [fp, #-8]
    20c4:	ldr	r3, [fp, #-8]
    20c8:	cmn	r3, #1
    20cc:	bne	20f8 <coda_product_class_get_named_type+0x64>
    20d0:	ldr	r3, [fp, #-16]
    20d4:	ldr	r2, [r3]
    20d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    20dc:	movw	r1, #0
    20e0:	movt	r1, #0
    20e4:	movw	r0, #65136	; 0xfe70
    20e8:	movt	r0, #65535	; 0xffff
    20ec:	bl	0 <coda_set_error>
    20f0:	mov	r3, #0
    20f4:	b	2110 <coda_product_class_get_named_type+0x7c>
    20f8:	ldr	r3, [fp, #-16]
    20fc:	ldr	r2, [r3, #20]
    2100:	ldr	r3, [fp, #-8]
    2104:	lsl	r3, r3, #2
    2108:	add	r3, r2, r3
    210c:	ldr	r3, [r3]
    2110:	mov	r0, r3
    2114:	sub	sp, fp, #4
    2118:	ldr	fp, [sp]
    211c:	add	sp, sp, #4
    2120:	pop	{pc}		; (ldr pc, [sp], #4)

00002124 <coda_product_class_has_named_type>:
    2124:	str	fp, [sp, #-8]!
    2128:	str	lr, [sp, #4]
    212c:	add	fp, sp, #4
    2130:	sub	sp, sp, #8
    2134:	str	r0, [fp, #-8]
    2138:	str	r1, [fp, #-12]
    213c:	ldr	r3, [fp, #-8]
    2140:	ldr	r3, [r3, #24]
    2144:	ldr	r1, [fp, #-12]
    2148:	mov	r0, r3
    214c:	bl	0 <coda_hashtable_get_index_from_name>
    2150:	mov	r3, r0
    2154:	cmn	r3, #1
    2158:	movne	r3, #1
    215c:	moveq	r3, #0
    2160:	uxtb	r3, r3
    2164:	mov	r0, r3
    2168:	sub	sp, fp, #4
    216c:	ldr	fp, [sp]
    2170:	add	sp, sp, #4
    2174:	pop	{pc}		; (ldr pc, [sp], #4)

00002178 <coda_product_class_get_revision>:
    2178:	push	{fp}		; (str fp, [sp, #-4]!)
    217c:	add	fp, sp, #0
    2180:	sub	sp, sp, #12
    2184:	str	r0, [fp, #-8]
    2188:	ldr	r3, [fp, #-8]
    218c:	ldr	r3, [r3, #12]
    2190:	mov	r0, r3
    2194:	add	sp, fp, #0
    2198:	pop	{fp}		; (ldr fp, [sp], #4)
    219c:	bx	lr

000021a0 <delete_data_dictionary>:
    21a0:	str	fp, [sp, #-8]!
    21a4:	str	lr, [sp, #4]
    21a8:	add	fp, sp, #4
    21ac:	sub	sp, sp, #16
    21b0:	str	r0, [fp, #-16]
    21b4:	ldr	r3, [fp, #-16]
    21b8:	cmp	r3, #0
    21bc:	bne	21e0 <delete_data_dictionary+0x40>
    21c0:	movw	r3, #0
    21c4:	movt	r3, #0
    21c8:	movw	r2, #887	; 0x377
    21cc:	movw	r1, #0
    21d0:	movt	r1, #0
    21d4:	movw	r0, #0
    21d8:	movt	r0, #0
    21dc:	bl	0 <__assert_fail>
    21e0:	ldr	r3, [fp, #-16]
    21e4:	ldr	r3, [r3, #8]
    21e8:	cmp	r3, #0
    21ec:	beq	2200 <delete_data_dictionary+0x60>
    21f0:	ldr	r3, [fp, #-16]
    21f4:	ldr	r3, [r3, #8]
    21f8:	mov	r0, r3
    21fc:	bl	0 <coda_hashtable_delete>
    2200:	ldr	r3, [fp, #-16]
    2204:	ldr	r3, [r3, #4]
    2208:	cmp	r3, #0
    220c:	beq	226c <delete_data_dictionary+0xcc>
    2210:	mov	r3, #0
    2214:	str	r3, [fp, #-8]
    2218:	b	2248 <delete_data_dictionary+0xa8>
    221c:	ldr	r3, [fp, #-16]
    2220:	ldr	r2, [r3, #4]
    2224:	ldr	r3, [fp, #-8]
    2228:	lsl	r3, r3, #2
    222c:	add	r3, r2, r3
    2230:	ldr	r3, [r3]
    2234:	mov	r0, r3
    2238:	bl	17bc <coda_product_class_delete>
    223c:	ldr	r3, [fp, #-8]
    2240:	add	r3, r3, #1
    2244:	str	r3, [fp, #-8]
    2248:	ldr	r3, [fp, #-16]
    224c:	ldr	r3, [r3]
    2250:	ldr	r2, [fp, #-8]
    2254:	cmp	r2, r3
    2258:	blt	221c <delete_data_dictionary+0x7c>
    225c:	ldr	r3, [fp, #-16]
    2260:	ldr	r3, [r3, #4]
    2264:	mov	r0, r3
    2268:	bl	0 <free>
    226c:	mov	r3, #0
    2270:	str	r3, [fp, #-8]
    2274:	b	22c4 <delete_data_dictionary+0x124>
    2278:	ldr	r2, [fp, #-16]
    227c:	ldr	r3, [fp, #-8]
    2280:	add	r3, r3, #2
    2284:	lsl	r3, r3, #2
    2288:	add	r3, r2, r3
    228c:	ldr	r3, [r3, #4]
    2290:	cmp	r3, #0
    2294:	beq	22b8 <delete_data_dictionary+0x118>
    2298:	ldr	r2, [fp, #-16]
    229c:	ldr	r3, [fp, #-8]
    22a0:	add	r3, r3, #2
    22a4:	lsl	r3, r3, #2
    22a8:	add	r3, r2, r3
    22ac:	ldr	r3, [r3, #4]
    22b0:	mov	r0, r3
    22b4:	bl	0 <coda_detection_tree_delete>
    22b8:	ldr	r3, [fp, #-8]
    22bc:	add	r3, r3, #1
    22c0:	str	r3, [fp, #-8]
    22c4:	ldr	r3, [fp, #-8]
    22c8:	cmp	r3, #9
    22cc:	ble	2278 <delete_data_dictionary+0xd8>
    22d0:	ldr	r0, [fp, #-16]
    22d4:	bl	0 <free>
    22d8:	nop	{0}
    22dc:	sub	sp, fp, #4
    22e0:	ldr	fp, [sp]
    22e4:	add	sp, sp, #4
    22e8:	pop	{pc}		; (ldr pc, [sp], #4)

000022ec <coda_data_dictionary_new>:
    22ec:	str	fp, [sp, #-8]!
    22f0:	str	lr, [sp, #4]
    22f4:	add	fp, sp, #4
    22f8:	sub	sp, sp, #16
    22fc:	mov	r0, #52	; 0x34
    2300:	bl	0 <malloc>
    2304:	mov	r3, r0
    2308:	str	r3, [fp, #-12]
    230c:	ldr	r3, [fp, #-12]
    2310:	cmp	r3, #0
    2314:	bne	2344 <coda_data_dictionary_new+0x58>
    2318:	mov	r3, #920	; 0x398
    231c:	str	r3, [sp]
    2320:	movw	r3, #0
    2324:	movt	r3, #0
    2328:	mov	r2, #52	; 0x34
    232c:	movw	r1, #0
    2330:	movt	r1, #0
    2334:	mvn	r0, #0
    2338:	bl	0 <coda_set_error>
    233c:	mov	r3, #0
    2340:	b	23fc <coda_data_dictionary_new+0x110>
    2344:	ldr	r3, [fp, #-12]
    2348:	mov	r2, #0
    234c:	str	r2, [r3]
    2350:	ldr	r3, [fp, #-12]
    2354:	mov	r2, #0
    2358:	str	r2, [r3, #4]
    235c:	ldr	r3, [fp, #-12]
    2360:	mov	r2, #0
    2364:	str	r2, [r3, #8]
    2368:	mov	r3, #0
    236c:	str	r3, [fp, #-8]
    2370:	b	239c <coda_data_dictionary_new+0xb0>
    2374:	ldr	r2, [fp, #-12]
    2378:	ldr	r3, [fp, #-8]
    237c:	add	r3, r3, #2
    2380:	lsl	r3, r3, #2
    2384:	add	r3, r2, r3
    2388:	mov	r2, #0
    238c:	str	r2, [r3, #4]
    2390:	ldr	r3, [fp, #-8]
    2394:	add	r3, r3, #1
    2398:	str	r3, [fp, #-8]
    239c:	ldr	r3, [fp, #-8]
    23a0:	cmp	r3, #9
    23a4:	ble	2374 <coda_data_dictionary_new+0x88>
    23a8:	mov	r0, #1
    23ac:	bl	0 <coda_hashtable_new>
    23b0:	mov	r2, r0
    23b4:	ldr	r3, [fp, #-12]
    23b8:	str	r2, [r3, #8]
    23bc:	ldr	r3, [fp, #-12]
    23c0:	ldr	r3, [r3, #8]
    23c4:	cmp	r3, #0
    23c8:	bne	23f8 <coda_data_dictionary_new+0x10c>
    23cc:	movw	r3, #935	; 0x3a7
    23d0:	movw	r2, #0
    23d4:	movt	r2, #0
    23d8:	movw	r1, #0
    23dc:	movt	r1, #0
    23e0:	mvn	r0, #0
    23e4:	bl	0 <coda_set_error>
    23e8:	ldr	r0, [fp, #-12]
    23ec:	bl	21a0 <delete_data_dictionary>
    23f0:	mov	r3, #0
    23f4:	b	23fc <coda_data_dictionary_new+0x110>
    23f8:	ldr	r3, [fp, #-12]
    23fc:	mov	r0, r3
    2400:	sub	sp, fp, #4
    2404:	ldr	fp, [sp]
    2408:	add	sp, sp, #4
    240c:	pop	{pc}		; (ldr pc, [sp], #4)

00002410 <data_dictionary_rebuild_product_class_hash_data>:
    2410:	str	r4, [sp, #-12]!
    2414:	str	fp, [sp, #4]
    2418:	str	lr, [sp, #8]
    241c:	add	fp, sp, #8
    2420:	sub	sp, sp, #12
    2424:	mrc	15, 0, r3, cr13, cr0, {3}
    2428:	ldr	r2, [pc, #284]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    242c:	ldr	r3, [r3, r2]
    2430:	ldr	r3, [r3, #8]
    2434:	mov	r0, r3
    2438:	bl	0 <coda_hashtable_delete>
    243c:	mrc	15, 0, r3, cr13, cr0, {3}
    2440:	ldr	r2, [pc, #260]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    2444:	ldr	r4, [r3, r2]
    2448:	mov	r0, #1
    244c:	bl	0 <coda_hashtable_new>
    2450:	mov	r3, r0
    2454:	str	r3, [r4, #8]
    2458:	mrc	15, 0, r3, cr13, cr0, {3}
    245c:	ldr	r2, [pc, #232]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    2460:	ldr	r3, [r3, r2]
    2464:	ldr	r3, [r3, #8]
    2468:	cmp	r3, #0
    246c:	bne	2494 <data_dictionary_rebuild_product_class_hash_data+0x84>
    2470:	mov	r3, #952	; 0x3b8
    2474:	movw	r2, #0
    2478:	movt	r2, #0
    247c:	movw	r1, #0
    2480:	movt	r1, #0
    2484:	mvn	r0, #0
    2488:	bl	0 <coda_set_error>
    248c:	mvn	r3, #0
    2490:	b	2534 <data_dictionary_rebuild_product_class_hash_data+0x124>
    2494:	mov	r3, #0
    2498:	str	r3, [fp, #-16]
    249c:	b	2514 <data_dictionary_rebuild_product_class_hash_data+0x104>
    24a0:	mrc	15, 0, r3, cr13, cr0, {3}
    24a4:	ldr	r2, [pc, #160]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    24a8:	ldr	r3, [r3, r2]
    24ac:	ldr	r0, [r3, #8]
    24b0:	mrc	15, 0, r3, cr13, cr0, {3}
    24b4:	ldr	r2, [pc, #144]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    24b8:	ldr	r3, [r3, r2]
    24bc:	ldr	r2, [r3, #4]
    24c0:	ldr	r3, [fp, #-16]
    24c4:	lsl	r3, r3, #2
    24c8:	add	r3, r2, r3
    24cc:	ldr	r3, [r3]
    24d0:	ldr	r3, [r3]
    24d4:	mov	r1, r3
    24d8:	bl	0 <coda_hashtable_add_name>
    24dc:	mov	r3, r0
    24e0:	cmp	r3, #0
    24e4:	beq	2508 <data_dictionary_rebuild_product_class_hash_data+0xf8>
    24e8:	movw	r3, #0
    24ec:	movt	r3, #0
    24f0:	mov	r2, #960	; 0x3c0
    24f4:	movw	r1, #0
    24f8:	movt	r1, #0
    24fc:	movw	r0, #0
    2500:	movt	r0, #0
    2504:	bl	0 <__assert_fail>
    2508:	ldr	r3, [fp, #-16]
    250c:	add	r3, r3, #1
    2510:	str	r3, [fp, #-16]
    2514:	mrc	15, 0, r3, cr13, cr0, {3}
    2518:	ldr	r2, [pc, #44]	; 254c <data_dictionary_rebuild_product_class_hash_data+0x13c>
    251c:	ldr	r3, [r3, r2]
    2520:	ldr	r3, [r3]
    2524:	ldr	r2, [fp, #-16]
    2528:	cmp	r2, r3
    252c:	blt	24a0 <data_dictionary_rebuild_product_class_hash_data+0x90>
    2530:	mov	r3, #0
    2534:	mov	r0, r3
    2538:	sub	sp, fp, #8
    253c:	ldr	r4, [sp]
    2540:	ldr	fp, [sp, #4]
    2544:	add	sp, sp, #8
    2548:	pop	{pc}		; (ldr pc, [sp], #4)
    254c:	.word	0x00000000

00002550 <coda_data_dictionary_add_product_class>:
    2550:	str	fp, [sp, #-8]!
    2554:	str	lr, [sp, #4]
    2558:	add	fp, sp, #4
    255c:	sub	sp, sp, #32
    2560:	str	r0, [fp, #-24]	; 0xffffffe8
    2564:	mrc	15, 0, r3, cr13, cr0, {3}
    2568:	ldr	r2, [pc, #620]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    256c:	ldr	r3, [r3, r2]
    2570:	cmp	r3, #0
    2574:	bne	2594 <coda_data_dictionary_add_product_class+0x44>
    2578:	movw	r1, #0
    257c:	movt	r1, #0
    2580:	movw	r0, #65136	; 0xfe70
    2584:	movt	r0, #65535	; 0xffff
    2588:	bl	0 <coda_set_error>
    258c:	mvn	r3, #0
    2590:	b	27c8 <coda_data_dictionary_add_product_class+0x278>
    2594:	mrc	15, 0, r3, cr13, cr0, {3}
    2598:	ldr	r2, [pc, #572]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    259c:	ldr	r3, [r3, r2]
    25a0:	ldr	r2, [r3, #8]
    25a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25a8:	ldr	r3, [r3]
    25ac:	mov	r1, r3
    25b0:	mov	r0, r2
    25b4:	bl	0 <coda_hashtable_add_name>
    25b8:	mov	r3, r0
    25bc:	cmp	r3, #0
    25c0:	beq	25ec <coda_data_dictionary_add_product_class+0x9c>
    25c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25c8:	ldr	r3, [r3]
    25cc:	mov	r2, r3
    25d0:	movw	r1, #0
    25d4:	movt	r1, #0
    25d8:	movw	r0, #65136	; 0xfe70
    25dc:	movt	r0, #65535	; 0xffff
    25e0:	bl	0 <coda_set_error>
    25e4:	mvn	r3, #0
    25e8:	b	27c8 <coda_data_dictionary_add_product_class+0x278>
    25ec:	mrc	15, 0, r3, cr13, cr0, {3}
    25f0:	ldr	r2, [pc, #484]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    25f4:	ldr	r3, [r3, r2]
    25f8:	ldr	r3, [r3]
    25fc:	and	r3, r3, #15
    2600:	cmp	r3, #0
    2604:	bne	269c <coda_data_dictionary_add_product_class+0x14c>
    2608:	mrc	15, 0, r3, cr13, cr0, {3}
    260c:	ldr	r2, [pc, #456]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2610:	ldr	r3, [r3, r2]
    2614:	ldr	r0, [r3, #4]
    2618:	mrc	15, 0, r3, cr13, cr0, {3}
    261c:	ldr	r2, [pc, #440]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2620:	ldr	r3, [r3, r2]
    2624:	ldr	r3, [r3]
    2628:	add	r3, r3, #16
    262c:	lsl	r3, r3, #2
    2630:	mov	r1, r3
    2634:	bl	0 <realloc>
    2638:	str	r0, [fp, #-12]
    263c:	ldr	r3, [fp, #-12]
    2640:	cmp	r3, #0
    2644:	bne	2688 <coda_data_dictionary_add_product_class+0x138>
    2648:	mrc	15, 0, r3, cr13, cr0, {3}
    264c:	ldr	r2, [pc, #392]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2650:	ldr	r3, [r3, r2]
    2654:	ldr	r3, [r3]
    2658:	add	r3, r3, #16
    265c:	lsl	r2, r3, #2
    2660:	movw	r3, #994	; 0x3e2
    2664:	str	r3, [sp]
    2668:	movw	r3, #0
    266c:	movt	r3, #0
    2670:	movw	r1, #0
    2674:	movt	r1, #0
    2678:	mvn	r0, #0
    267c:	bl	0 <coda_set_error>
    2680:	mvn	r3, #0
    2684:	b	27c8 <coda_data_dictionary_add_product_class+0x278>
    2688:	mrc	15, 0, r3, cr13, cr0, {3}
    268c:	ldr	r2, [pc, #328]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2690:	ldr	r3, [r3, r2]
    2694:	ldr	r2, [fp, #-12]
    2698:	str	r2, [r3, #4]
    269c:	mov	r3, #0
    26a0:	str	r3, [fp, #-8]
    26a4:	b	2744 <coda_data_dictionary_add_product_class+0x1f4>
    26a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26ac:	ldr	r0, [r3]
    26b0:	mrc	15, 0, r3, cr13, cr0, {3}
    26b4:	ldr	r2, [pc, #288]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    26b8:	ldr	r3, [r3, r2]
    26bc:	ldr	r2, [r3, #4]
    26c0:	ldr	r3, [fp, #-8]
    26c4:	lsl	r3, r3, #2
    26c8:	add	r3, r2, r3
    26cc:	ldr	r3, [r3]
    26d0:	ldr	r3, [r3]
    26d4:	mov	r1, r3
    26d8:	bl	0 <strcmp>
    26dc:	mov	r3, r0
    26e0:	cmp	r3, #0
    26e4:	bge	2738 <coda_data_dictionary_add_product_class+0x1e8>
    26e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26ec:	str	r3, [fp, #-16]
    26f0:	mrc	15, 0, r3, cr13, cr0, {3}
    26f4:	ldr	r2, [pc, #224]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    26f8:	ldr	r3, [r3, r2]
    26fc:	ldr	r2, [r3, #4]
    2700:	ldr	r3, [fp, #-8]
    2704:	lsl	r3, r3, #2
    2708:	add	r3, r2, r3
    270c:	ldr	r3, [r3]
    2710:	str	r3, [fp, #-24]	; 0xffffffe8
    2714:	mrc	15, 0, r3, cr13, cr0, {3}
    2718:	ldr	r2, [pc, #188]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    271c:	ldr	r3, [r3, r2]
    2720:	ldr	r2, [r3, #4]
    2724:	ldr	r3, [fp, #-8]
    2728:	lsl	r3, r3, #2
    272c:	add	r3, r2, r3
    2730:	ldr	r2, [fp, #-16]
    2734:	str	r2, [r3]
    2738:	ldr	r3, [fp, #-8]
    273c:	add	r3, r3, #1
    2740:	str	r3, [fp, #-8]
    2744:	mrc	15, 0, r3, cr13, cr0, {3}
    2748:	ldr	r2, [pc, #140]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    274c:	ldr	r3, [r3, r2]
    2750:	ldr	r3, [r3]
    2754:	ldr	r2, [fp, #-8]
    2758:	cmp	r2, r3
    275c:	blt	26a8 <coda_data_dictionary_add_product_class+0x158>
    2760:	mrc	15, 0, r3, cr13, cr0, {3}
    2764:	ldr	r2, [pc, #112]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2768:	ldr	r3, [r3, r2]
    276c:	ldr	r2, [r3]
    2770:	add	r2, r2, #1
    2774:	str	r2, [r3]
    2778:	mrc	15, 0, r3, cr13, cr0, {3}
    277c:	ldr	r2, [pc, #88]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2780:	ldr	r3, [r3, r2]
    2784:	ldr	r2, [r3, #4]
    2788:	mrc	15, 0, r3, cr13, cr0, {3}
    278c:	ldr	r1, [pc, #72]	; 27dc <coda_data_dictionary_add_product_class+0x28c>
    2790:	ldr	r3, [r3, r1]
    2794:	ldr	r3, [r3]
    2798:	sub	r3, r3, #-1073741823	; 0xc0000001
    279c:	lsl	r3, r3, #2
    27a0:	add	r3, r2, r3
    27a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    27a8:	str	r2, [r3]
    27ac:	bl	2410 <data_dictionary_rebuild_product_class_hash_data>
    27b0:	mov	r3, r0
    27b4:	cmp	r3, #0
    27b8:	beq	27c4 <coda_data_dictionary_add_product_class+0x274>
    27bc:	mvn	r3, #0
    27c0:	b	27c8 <coda_data_dictionary_add_product_class+0x278>
    27c4:	mov	r3, #0
    27c8:	mov	r0, r3
    27cc:	sub	sp, fp, #4
    27d0:	ldr	fp, [sp]
    27d4:	add	sp, sp, #4
    27d8:	pop	{pc}		; (ldr pc, [sp], #4)
    27dc:	.word	0x00000000

000027e0 <coda_data_dictionary_get_product_class>:
    27e0:	str	fp, [sp, #-8]!
    27e4:	str	lr, [sp, #4]
    27e8:	add	fp, sp, #4
    27ec:	sub	sp, sp, #16
    27f0:	str	r0, [fp, #-16]
    27f4:	mrc	15, 0, r3, cr13, cr0, {3}
    27f8:	ldr	r2, [pc, #164]	; 28a4 <coda_data_dictionary_get_product_class+0xc4>
    27fc:	ldr	r3, [r3, r2]
    2800:	cmp	r3, #0
    2804:	bne	2824 <coda_data_dictionary_get_product_class+0x44>
    2808:	movw	r1, #0
    280c:	movt	r1, #0
    2810:	movw	r0, #65136	; 0xfe70
    2814:	movt	r0, #65535	; 0xffff
    2818:	bl	0 <coda_set_error>
    281c:	mov	r3, #0
    2820:	b	2890 <coda_data_dictionary_get_product_class+0xb0>
    2824:	mrc	15, 0, r3, cr13, cr0, {3}
    2828:	ldr	r2, [pc, #116]	; 28a4 <coda_data_dictionary_get_product_class+0xc4>
    282c:	ldr	r3, [r3, r2]
    2830:	ldr	r3, [r3, #8]
    2834:	ldr	r1, [fp, #-16]
    2838:	mov	r0, r3
    283c:	bl	0 <coda_hashtable_get_index_from_name>
    2840:	str	r0, [fp, #-8]
    2844:	ldr	r3, [fp, #-8]
    2848:	cmn	r3, #1
    284c:	bne	2870 <coda_data_dictionary_get_product_class+0x90>
    2850:	ldr	r2, [fp, #-16]
    2854:	movw	r1, #0
    2858:	movt	r1, #0
    285c:	movw	r0, #65136	; 0xfe70
    2860:	movt	r0, #65535	; 0xffff
    2864:	bl	0 <coda_set_error>
    2868:	mov	r3, #0
    286c:	b	2890 <coda_data_dictionary_get_product_class+0xb0>
    2870:	mrc	15, 0, r3, cr13, cr0, {3}
    2874:	ldr	r2, [pc, #40]	; 28a4 <coda_data_dictionary_get_product_class+0xc4>
    2878:	ldr	r3, [r3, r2]
    287c:	ldr	r2, [r3, #4]
    2880:	ldr	r3, [fp, #-8]
    2884:	lsl	r3, r3, #2
    2888:	add	r3, r2, r3
    288c:	ldr	r3, [r3]
    2890:	mov	r0, r3
    2894:	sub	sp, fp, #4
    2898:	ldr	fp, [sp]
    289c:	add	sp, sp, #4
    28a0:	pop	{pc}		; (ldr pc, [sp], #4)
    28a4:	.word	0x00000000

000028a8 <coda_data_dictionary_has_product_class>:
    28a8:	str	fp, [sp, #-8]!
    28ac:	str	lr, [sp, #4]
    28b0:	add	fp, sp, #4
    28b4:	sub	sp, sp, #8
    28b8:	str	r0, [fp, #-8]
    28bc:	mrc	15, 0, r3, cr13, cr0, {3}
    28c0:	ldr	r2, [pc, #84]	; 291c <coda_data_dictionary_has_product_class+0x74>
    28c4:	ldr	r3, [r3, r2]
    28c8:	cmp	r3, #0
    28cc:	bne	28d8 <coda_data_dictionary_has_product_class+0x30>
    28d0:	mov	r3, #0
    28d4:	b	2908 <coda_data_dictionary_has_product_class+0x60>
    28d8:	mrc	15, 0, r3, cr13, cr0, {3}
    28dc:	ldr	r2, [pc, #56]	; 291c <coda_data_dictionary_has_product_class+0x74>
    28e0:	ldr	r3, [r3, r2]
    28e4:	ldr	r3, [r3, #8]
    28e8:	ldr	r1, [fp, #-8]
    28ec:	mov	r0, r3
    28f0:	bl	0 <coda_hashtable_get_index_from_name>
    28f4:	mov	r3, r0
    28f8:	cmn	r3, #1
    28fc:	movne	r3, #1
    2900:	moveq	r3, #0
    2904:	uxtb	r3, r3
    2908:	mov	r0, r3
    290c:	sub	sp, fp, #4
    2910:	ldr	fp, [sp]
    2914:	add	sp, sp, #4
    2918:	pop	{pc}		; (ldr pc, [sp], #4)
    291c:	.word	0x00000000

00002920 <coda_data_dictionary_remove_product_class>:
    2920:	str	fp, [sp, #-8]!
    2924:	str	lr, [sp, #4]
    2928:	add	fp, sp, #4
    292c:	sub	sp, sp, #16
    2930:	str	r0, [fp, #-16]
    2934:	mrc	15, 0, r3, cr13, cr0, {3}
    2938:	ldr	r2, [pc, #356]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    293c:	ldr	r3, [r3, r2]
    2940:	cmp	r3, #0
    2944:	bne	2964 <coda_data_dictionary_remove_product_class+0x44>
    2948:	movw	r1, #0
    294c:	movt	r1, #0
    2950:	movw	r0, #65136	; 0xfe70
    2954:	movt	r0, #65535	; 0xffff
    2958:	bl	0 <coda_set_error>
    295c:	mvn	r3, #0
    2960:	b	2a90 <coda_data_dictionary_remove_product_class+0x170>
    2964:	mrc	15, 0, r3, cr13, cr0, {3}
    2968:	ldr	r2, [pc, #308]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    296c:	ldr	r3, [r3, r2]
    2970:	ldr	r2, [r3, #8]
    2974:	ldr	r3, [fp, #-16]
    2978:	ldr	r3, [r3]
    297c:	mov	r1, r3
    2980:	mov	r0, r2
    2984:	bl	0 <coda_hashtable_get_index_from_name>
    2988:	str	r0, [fp, #-12]
    298c:	ldr	r3, [fp, #-12]
    2990:	cmn	r3, #1
    2994:	bne	29c0 <coda_data_dictionary_remove_product_class+0xa0>
    2998:	ldr	r3, [fp, #-16]
    299c:	ldr	r3, [r3]
    29a0:	mov	r2, r3
    29a4:	movw	r1, #0
    29a8:	movt	r1, #0
    29ac:	movw	r0, #65136	; 0xfe70
    29b0:	movt	r0, #65535	; 0xffff
    29b4:	bl	0 <coda_set_error>
    29b8:	mvn	r3, #0
    29bc:	b	2a90 <coda_data_dictionary_remove_product_class+0x170>
    29c0:	ldr	r3, [fp, #-12]
    29c4:	add	r3, r3, #1
    29c8:	str	r3, [fp, #-8]
    29cc:	b	2a20 <coda_data_dictionary_remove_product_class+0x100>
    29d0:	mrc	15, 0, r3, cr13, cr0, {3}
    29d4:	ldr	r2, [pc, #200]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    29d8:	ldr	r3, [r3, r2]
    29dc:	ldr	r2, [r3, #4]
    29e0:	ldr	r3, [fp, #-8]
    29e4:	lsl	r3, r3, #2
    29e8:	add	r2, r2, r3
    29ec:	mrc	15, 0, r3, cr13, cr0, {3}
    29f0:	ldr	r1, [pc, #172]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    29f4:	ldr	r3, [r3, r1]
    29f8:	ldr	r1, [r3, #4]
    29fc:	ldr	r3, [fp, #-8]
    2a00:	sub	r3, r3, #-1073741823	; 0xc0000001
    2a04:	lsl	r3, r3, #2
    2a08:	add	r3, r1, r3
    2a0c:	ldr	r2, [r2]
    2a10:	str	r2, [r3]
    2a14:	ldr	r3, [fp, #-8]
    2a18:	add	r3, r3, #1
    2a1c:	str	r3, [fp, #-8]
    2a20:	mrc	15, 0, r3, cr13, cr0, {3}
    2a24:	ldr	r2, [pc, #120]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    2a28:	ldr	r3, [r3, r2]
    2a2c:	ldr	r3, [r3]
    2a30:	ldr	r2, [fp, #-8]
    2a34:	cmp	r2, r3
    2a38:	blt	29d0 <coda_data_dictionary_remove_product_class+0xb0>
    2a3c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a40:	ldr	r2, [pc, #92]	; 2aa4 <coda_data_dictionary_remove_product_class+0x184>
    2a44:	ldr	r3, [r3, r2]
    2a48:	ldr	r2, [r3]
    2a4c:	sub	r2, r2, #1
    2a50:	str	r2, [r3]
    2a54:	ldr	r0, [fp, #-16]
    2a58:	bl	17bc <coda_product_class_delete>
    2a5c:	bl	2410 <data_dictionary_rebuild_product_class_hash_data>
    2a60:	mov	r3, r0
    2a64:	cmp	r3, #0
    2a68:	beq	2a74 <coda_data_dictionary_remove_product_class+0x154>
    2a6c:	mvn	r3, #0
    2a70:	b	2a90 <coda_data_dictionary_remove_product_class+0x170>
    2a74:	bl	2b28 <data_dictionary_rebuild_detection_tree>
    2a78:	mov	r3, r0
    2a7c:	cmp	r3, #0
    2a80:	beq	2a8c <coda_data_dictionary_remove_product_class+0x16c>
    2a84:	mvn	r3, #0
    2a88:	b	2a90 <coda_data_dictionary_remove_product_class+0x170>
    2a8c:	mov	r3, #0
    2a90:	mov	r0, r3
    2a94:	sub	sp, fp, #4
    2a98:	ldr	fp, [sp]
    2a9c:	add	sp, sp, #4
    2aa0:	pop	{pc}		; (ldr pc, [sp], #4)
    2aa4:	.word	0x00000000

00002aa8 <data_dictionary_add_detection_rule>:
    2aa8:	str	fp, [sp, #-8]!
    2aac:	str	lr, [sp, #4]
    2ab0:	add	fp, sp, #4
    2ab4:	sub	sp, sp, #16
    2ab8:	str	r0, [fp, #-16]
    2abc:	ldr	r3, [fp, #-16]
    2ac0:	ldr	r3, [r3, #8]
    2ac4:	ldr	r3, [r3]
    2ac8:	str	r3, [fp, #-8]
    2acc:	ldr	r3, [fp, #-8]
    2ad0:	cmp	r3, #0
    2ad4:	bne	2ae0 <data_dictionary_add_detection_rule+0x38>
    2ad8:	mov	r3, #1
    2adc:	str	r3, [fp, #-8]
    2ae0:	mrc	15, 0, r3, cr13, cr0, {3}
    2ae4:	ldr	r2, [pc, #56]	; 2b24 <data_dictionary_add_detection_rule+0x7c>
    2ae8:	ldr	r2, [r3, r2]
    2aec:	ldr	r3, [fp, #-8]
    2af0:	add	r3, r3, #2
    2af4:	lsl	r3, r3, #2
    2af8:	add	r3, r2, r3
    2afc:	add	r3, r3, #4
    2b00:	ldr	r1, [fp, #-16]
    2b04:	mov	r0, r3
    2b08:	bl	0 <coda_detection_tree_add_rule>
    2b0c:	mov	r3, r0
    2b10:	mov	r0, r3
    2b14:	sub	sp, fp, #4
    2b18:	ldr	fp, [sp]
    2b1c:	add	sp, sp, #4
    2b20:	pop	{pc}		; (ldr pc, [sp], #4)
    2b24:	.word	0x00000000

00002b28 <data_dictionary_rebuild_detection_tree>:
    2b28:	str	fp, [sp, #-8]!
    2b2c:	str	lr, [sp, #4]
    2b30:	add	fp, sp, #4
    2b34:	sub	sp, sp, #32
    2b38:	mov	r3, #0
    2b3c:	str	r3, [fp, #-8]
    2b40:	b	2bc4 <data_dictionary_rebuild_detection_tree+0x9c>
    2b44:	mrc	15, 0, r3, cr13, cr0, {3}
    2b48:	ldr	r2, [pc, #480]	; 2d30 <data_dictionary_rebuild_detection_tree+0x208>
    2b4c:	ldr	r2, [r3, r2]
    2b50:	ldr	r3, [fp, #-8]
    2b54:	add	r3, r3, #2
    2b58:	lsl	r3, r3, #2
    2b5c:	add	r3, r2, r3
    2b60:	ldr	r3, [r3, #4]
    2b64:	cmp	r3, #0
    2b68:	beq	2bb8 <data_dictionary_rebuild_detection_tree+0x90>
    2b6c:	mrc	15, 0, r3, cr13, cr0, {3}
    2b70:	ldr	r2, [pc, #440]	; 2d30 <data_dictionary_rebuild_detection_tree+0x208>
    2b74:	ldr	r2, [r3, r2]
    2b78:	ldr	r3, [fp, #-8]
    2b7c:	add	r3, r3, #2
    2b80:	lsl	r3, r3, #2
    2b84:	add	r3, r2, r3
    2b88:	ldr	r3, [r3, #4]
    2b8c:	mov	r0, r3
    2b90:	bl	0 <coda_detection_tree_delete>
    2b94:	mrc	15, 0, r3, cr13, cr0, {3}
    2b98:	ldr	r2, [pc, #400]	; 2d30 <data_dictionary_rebuild_detection_tree+0x208>
    2b9c:	ldr	r2, [r3, r2]
    2ba0:	ldr	r3, [fp, #-8]
    2ba4:	add	r3, r3, #2
    2ba8:	lsl	r3, r3, #2
    2bac:	add	r3, r2, r3
    2bb0:	mov	r2, #0
    2bb4:	str	r2, [r3, #4]
    2bb8:	ldr	r3, [fp, #-8]
    2bbc:	add	r3, r3, #1
    2bc0:	str	r3, [fp, #-8]
    2bc4:	ldr	r3, [fp, #-8]
    2bc8:	cmp	r3, #9
    2bcc:	ble	2b44 <data_dictionary_rebuild_detection_tree+0x1c>
    2bd0:	mov	r3, #0
    2bd4:	str	r3, [fp, #-8]
    2bd8:	b	2cfc <data_dictionary_rebuild_detection_tree+0x1d4>
    2bdc:	mrc	15, 0, r3, cr13, cr0, {3}
    2be0:	ldr	r2, [pc, #328]	; 2d30 <data_dictionary_rebuild_detection_tree+0x208>
    2be4:	ldr	r3, [r3, r2]
    2be8:	ldr	r2, [r3, #4]
    2bec:	ldr	r3, [fp, #-8]
    2bf0:	lsl	r3, r3, #2
    2bf4:	add	r3, r2, r3
    2bf8:	ldr	r3, [r3]
    2bfc:	str	r3, [fp, #-24]	; 0xffffffe8
    2c00:	mov	r3, #0
    2c04:	str	r3, [fp, #-12]
    2c08:	b	2cdc <data_dictionary_rebuild_detection_tree+0x1b4>
    2c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c10:	ldr	r2, [r3, #32]
    2c14:	ldr	r3, [fp, #-12]
    2c18:	lsl	r3, r3, #2
    2c1c:	add	r3, r2, r3
    2c20:	ldr	r3, [r3]
    2c24:	str	r3, [fp, #-28]	; 0xffffffe4
    2c28:	mov	r3, #0
    2c2c:	str	r3, [fp, #-16]
    2c30:	b	2cbc <data_dictionary_rebuild_detection_tree+0x194>
    2c34:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c38:	ldr	r2, [r3, #12]
    2c3c:	ldr	r3, [fp, #-16]
    2c40:	lsl	r3, r3, #2
    2c44:	add	r3, r2, r3
    2c48:	ldr	r3, [r3]
    2c4c:	str	r3, [fp, #-32]	; 0xffffffe0
    2c50:	mov	r3, #0
    2c54:	str	r3, [fp, #-20]	; 0xffffffec
    2c58:	b	2c9c <data_dictionary_rebuild_detection_tree+0x174>
    2c5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c60:	ldr	r2, [r3, #20]
    2c64:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c68:	lsl	r3, r3, #2
    2c6c:	add	r3, r2, r3
    2c70:	ldr	r3, [r3]
    2c74:	mov	r0, r3
    2c78:	bl	2aa8 <data_dictionary_add_detection_rule>
    2c7c:	mov	r3, r0
    2c80:	cmp	r3, #0
    2c84:	beq	2c90 <data_dictionary_rebuild_detection_tree+0x168>
    2c88:	mvn	r3, #0
    2c8c:	b	2d1c <data_dictionary_rebuild_detection_tree+0x1f4>
    2c90:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c94:	add	r3, r3, #1
    2c98:	str	r3, [fp, #-20]	; 0xffffffec
    2c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2ca0:	ldr	r3, [r3, #16]
    2ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ca8:	cmp	r2, r3
    2cac:	blt	2c5c <data_dictionary_rebuild_detection_tree+0x134>
    2cb0:	ldr	r3, [fp, #-16]
    2cb4:	add	r3, r3, #1
    2cb8:	str	r3, [fp, #-16]
    2cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2cc0:	ldr	r3, [r3, #8]
    2cc4:	ldr	r2, [fp, #-16]
    2cc8:	cmp	r2, r3
    2ccc:	blt	2c34 <data_dictionary_rebuild_detection_tree+0x10c>
    2cd0:	ldr	r3, [fp, #-12]
    2cd4:	add	r3, r3, #1
    2cd8:	str	r3, [fp, #-12]
    2cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ce0:	ldr	r3, [r3, #28]
    2ce4:	ldr	r2, [fp, #-12]
    2ce8:	cmp	r2, r3
    2cec:	blt	2c0c <data_dictionary_rebuild_detection_tree+0xe4>
    2cf0:	ldr	r3, [fp, #-8]
    2cf4:	add	r3, r3, #1
    2cf8:	str	r3, [fp, #-8]
    2cfc:	mrc	15, 0, r3, cr13, cr0, {3}
    2d00:	ldr	r2, [pc, #40]	; 2d30 <data_dictionary_rebuild_detection_tree+0x208>
    2d04:	ldr	r3, [r3, r2]
    2d08:	ldr	r3, [r3]
    2d0c:	ldr	r2, [fp, #-8]
    2d10:	cmp	r2, r3
    2d14:	blt	2bdc <data_dictionary_rebuild_detection_tree+0xb4>
    2d18:	mov	r3, #0
    2d1c:	mov	r0, r3
    2d20:	sub	sp, fp, #4
    2d24:	ldr	fp, [sp]
    2d28:	add	sp, sp, #4
    2d2c:	pop	{pc}		; (ldr pc, [sp], #4)
    2d30:	.word	0x00000000

00002d34 <coda_data_dictionary_get_definition>:
    2d34:	str	fp, [sp, #-8]!
    2d38:	str	lr, [sp, #4]
    2d3c:	add	fp, sp, #4
    2d40:	sub	sp, sp, #32
    2d44:	str	r0, [fp, #-24]	; 0xffffffe8
    2d48:	str	r1, [fp, #-28]	; 0xffffffe4
    2d4c:	str	r2, [fp, #-32]	; 0xffffffe0
    2d50:	str	r3, [fp, #-36]	; 0xffffffdc
    2d54:	mov	r3, #0
    2d58:	str	r3, [fp, #-8]
    2d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d60:	bl	27e0 <coda_data_dictionary_get_product_class>
    2d64:	str	r0, [fp, #-12]
    2d68:	ldr	r3, [fp, #-12]
    2d6c:	cmp	r3, #0
    2d70:	bne	2d7c <coda_data_dictionary_get_definition+0x48>
    2d74:	mvn	r3, #0
    2d78:	b	2df0 <coda_data_dictionary_get_definition+0xbc>
    2d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2d80:	ldr	r0, [fp, #-12]
    2d84:	bl	1e6c <coda_product_class_get_product_type>
    2d88:	str	r0, [fp, #-16]
    2d8c:	ldr	r3, [fp, #-16]
    2d90:	cmp	r3, #0
    2d94:	bne	2da0 <coda_data_dictionary_get_definition+0x6c>
    2d98:	mvn	r3, #0
    2d9c:	b	2df0 <coda_data_dictionary_get_definition+0xbc>
    2da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2da4:	cmp	r3, #0
    2da8:	bge	2dbc <coda_data_dictionary_get_definition+0x88>
    2dac:	ldr	r0, [fp, #-16]
    2db0:	bl	16ac <coda_product_type_get_latest_product_definition>
    2db4:	str	r0, [fp, #-8]
    2db8:	b	2dcc <coda_data_dictionary_get_definition+0x98>
    2dbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2dc0:	ldr	r0, [fp, #-16]
    2dc4:	bl	15ec <coda_product_type_get_product_definition_by_version>
    2dc8:	str	r0, [fp, #-8]
    2dcc:	ldr	r3, [fp, #-8]
    2dd0:	cmp	r3, #0
    2dd4:	bne	2de0 <coda_data_dictionary_get_definition+0xac>
    2dd8:	mvn	r3, #0
    2ddc:	b	2df0 <coda_data_dictionary_get_definition+0xbc>
    2de0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2de4:	ldr	r2, [fp, #-8]
    2de8:	str	r2, [r3]
    2dec:	mov	r3, #0
    2df0:	mov	r0, r3
    2df4:	sub	sp, fp, #4
    2df8:	ldr	fp, [sp]
    2dfc:	add	sp, sp, #4
    2e00:	pop	{pc}		; (ldr pc, [sp], #4)

00002e04 <coda_data_dictionary_get_detection_tree>:
    2e04:	push	{fp}		; (str fp, [sp, #-4]!)
    2e08:	add	fp, sp, #0
    2e0c:	sub	sp, sp, #12
    2e10:	str	r0, [fp, #-8]
    2e14:	ldr	r3, [fp, #-8]
    2e18:	cmp	r3, #0
    2e1c:	bne	2e28 <coda_data_dictionary_get_detection_tree+0x24>
    2e20:	mov	r3, #1
    2e24:	str	r3, [fp, #-8]
    2e28:	mrc	15, 0, r3, cr13, cr0, {3}
    2e2c:	ldr	r2, [pc, #36]	; 2e58 <coda_data_dictionary_get_detection_tree+0x54>
    2e30:	ldr	r2, [r3, r2]
    2e34:	ldr	r3, [fp, #-8]
    2e38:	add	r3, r3, #2
    2e3c:	lsl	r3, r3, #2
    2e40:	add	r3, r2, r3
    2e44:	ldr	r3, [r3, #4]
    2e48:	mov	r0, r3
    2e4c:	add	sp, fp, #0
    2e50:	pop	{fp}		; (ldr fp, [sp], #4)
    2e54:	bx	lr
    2e58:	.word	0x00000000

00002e5c <coda_data_dictionary_find_definition_for_product>:
    2e5c:	str	fp, [sp, #-8]!
    2e60:	str	lr, [sp, #4]
    2e64:	add	fp, sp, #4
    2e68:	sub	sp, sp, #528	; 0x210
    2e6c:	str	r0, [fp, #-528]	; 0xfffffdf0
    2e70:	str	r1, [fp, #-532]	; 0xfffffdec
    2e74:	sub	r3, fp, #524	; 0x20c
    2e78:	ldr	r1, [fp, #-528]	; 0xfffffdf0
    2e7c:	mov	r0, r3
    2e80:	bl	0 <coda_cursor_set_product>
    2e84:	mov	r3, r0
    2e88:	cmp	r3, #0
    2e8c:	beq	2e98 <coda_data_dictionary_find_definition_for_product+0x3c>
    2e90:	mvn	r3, #0
    2e94:	b	2ebc <coda_data_dictionary_find_definition_for_product+0x60>
    2e98:	ldr	r3, [fp, #-528]	; 0xfffffdf0
    2e9c:	ldr	r3, [r3, #16]
    2ea0:	mov	r0, r3
    2ea4:	bl	2e04 <coda_data_dictionary_get_detection_tree>
    2ea8:	sub	r3, fp, #524	; 0x20c
    2eac:	ldr	r2, [fp, #-532]	; 0xfffffdec
    2eb0:	mov	r1, r3
    2eb4:	bl	0 <coda_evaluate_detection_node>
    2eb8:	mov	r3, r0
    2ebc:	mov	r0, r3
    2ec0:	sub	sp, fp, #4
    2ec4:	ldr	fp, [sp]
    2ec8:	add	sp, sp, #4
    2ecc:	pop	{pc}		; (ldr pc, [sp], #4)

00002ed0 <coda_data_dictionary_init>:
    2ed0:	str	fp, [sp, #-8]!
    2ed4:	str	lr, [sp, #4]
    2ed8:	add	fp, sp, #4
    2edc:	mrc	15, 0, r3, cr13, cr0, {3}
    2ee0:	ldr	r2, [pc, #112]	; 2f58 <coda_data_dictionary_init+0x88>
    2ee4:	ldr	r3, [r3, r2]
    2ee8:	cmp	r3, #0
    2eec:	beq	2f10 <coda_data_dictionary_init+0x40>
    2ef0:	movw	r3, #0
    2ef4:	movt	r3, #0
    2ef8:	mov	r2, #1200	; 0x4b0
    2efc:	movw	r1, #0
    2f00:	movt	r1, #0
    2f04:	movw	r0, #0
    2f08:	movt	r0, #0
    2f0c:	bl	0 <__assert_fail>
    2f10:	bl	22ec <coda_data_dictionary_new>
    2f14:	mov	r1, r0
    2f18:	mrc	15, 0, r3, cr13, cr0, {3}
    2f1c:	ldr	r2, [pc, #52]	; 2f58 <coda_data_dictionary_init+0x88>
    2f20:	str	r1, [r3, r2]
    2f24:	mrc	15, 0, r3, cr13, cr0, {3}
    2f28:	ldr	r2, [pc, #40]	; 2f58 <coda_data_dictionary_init+0x88>
    2f2c:	ldr	r3, [r3, r2]
    2f30:	cmp	r3, #0
    2f34:	bne	2f40 <coda_data_dictionary_init+0x70>
    2f38:	mvn	r3, #0
    2f3c:	b	2f44 <coda_data_dictionary_init+0x74>
    2f40:	mov	r3, #0
    2f44:	mov	r0, r3
    2f48:	sub	sp, fp, #4
    2f4c:	ldr	fp, [sp]
    2f50:	add	sp, sp, #4
    2f54:	pop	{pc}		; (ldr pc, [sp], #4)
    2f58:	.word	0x00000000

00002f5c <coda_data_dictionary_done>:
    2f5c:	str	fp, [sp, #-8]!
    2f60:	str	lr, [sp, #4]
    2f64:	add	fp, sp, #4
    2f68:	mrc	15, 0, r3, cr13, cr0, {3}
    2f6c:	ldr	r2, [pc, #96]	; 2fd4 <coda_data_dictionary_done+0x78>
    2f70:	ldr	r3, [r3, r2]
    2f74:	cmp	r3, #0
    2f78:	bne	2f9c <coda_data_dictionary_done+0x40>
    2f7c:	movw	r3, #0
    2f80:	movt	r3, #0
    2f84:	movw	r2, #1213	; 0x4bd
    2f88:	movw	r1, #0
    2f8c:	movt	r1, #0
    2f90:	movw	r0, #0
    2f94:	movt	r0, #0
    2f98:	bl	0 <__assert_fail>
    2f9c:	mrc	15, 0, r3, cr13, cr0, {3}
    2fa0:	ldr	r2, [pc, #44]	; 2fd4 <coda_data_dictionary_done+0x78>
    2fa4:	ldr	r3, [r3, r2]
    2fa8:	mov	r0, r3
    2fac:	bl	21a0 <delete_data_dictionary>
    2fb0:	mrc	15, 0, r3, cr13, cr0, {3}
    2fb4:	ldr	r2, [pc, #24]	; 2fd4 <coda_data_dictionary_done+0x78>
    2fb8:	mov	r1, #0
    2fbc:	str	r1, [r3, r2]
    2fc0:	nop	{0}
    2fc4:	sub	sp, fp, #4
    2fc8:	ldr	fp, [sp]
    2fcc:	add	sp, sp, #4
    2fd0:	pop	{pc}		; (ldr pc, [sp], #4)
    2fd4:	.word	0x00000000
