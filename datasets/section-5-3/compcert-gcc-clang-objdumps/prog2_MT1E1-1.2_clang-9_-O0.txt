
../compcert-repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

000107d0 <.init>:
   107d0:	push	{r3, lr}
   107d4:	bl	108d4 <_start@@Base+0x3c>
   107d8:	pop	{r3, pc}

Disassembly of section .plt:

000107dc <strcmp@plt-0x14>:
   107dc:	push	{lr}		; (str lr, [sp, #-4]!)
   107e0:	ldr	lr, [pc, #4]	; 107ec <strcmp@plt-0x4>
   107e4:	add	lr, pc, lr
   107e8:	ldr	pc, [lr, #8]!
   107ec:	andeq	r0, r1, r4, lsl r8

000107f0 <strcmp@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #16, 20	; 0x10000
   107f8:	ldr	pc, [ip, #2068]!	; 0x814

000107fc <printf@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #16, 20	; 0x10000
   10804:	ldr	pc, [ip, #2060]!	; 0x80c

00010808 <__isoc99_fscanf@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #16, 20	; 0x10000
   10810:	ldr	pc, [ip, #2052]!	; 0x804

00010814 <fopen@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #16, 20	; 0x10000
   1081c:	ldr	pc, [ip, #2044]!	; 0x7fc

00010820 <free@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #16, 20	; 0x10000
   10828:	ldr	pc, [ip, #2036]!	; 0x7f4

0001082c <realloc@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #16, 20	; 0x10000
   10834:	ldr	pc, [ip, #2028]!	; 0x7ec

00010838 <strcpy@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #16, 20	; 0x10000
   10840:	ldr	pc, [ip, #2020]!	; 0x7e4

00010844 <malloc@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #16, 20	; 0x10000
   1084c:	ldr	pc, [ip, #2012]!	; 0x7dc

00010850 <__libc_start_main@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #16, 20	; 0x10000
   10858:	ldr	pc, [ip, #2004]!	; 0x7d4

0001085c <__gmon_start__@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #16, 20	; 0x10000
   10864:	ldr	pc, [ip, #1996]!	; 0x7cc

00010868 <fprintf@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #16, 20	; 0x10000
   10870:	ldr	pc, [ip, #1988]!	; 0x7c4

00010874 <fclose@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #16, 20	; 0x10000
   1087c:	ldr	pc, [ip, #1980]!	; 0x7bc

00010880 <__isoc99_scanf@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #16, 20	; 0x10000
   10888:	ldr	pc, [ip, #1972]!	; 0x7b4

0001088c <abort@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #16, 20	; 0x10000
   10894:	ldr	pc, [ip, #1964]!	; 0x7ac

Disassembly of section .text:

00010898 <_start@@Base>:
   10898:	mov	fp, #0
   1089c:	mov	lr, #0
   108a0:	pop	{r1}		; (ldr r1, [sp], #4)
   108a4:	mov	r2, sp
   108a8:	push	{r2}		; (str r2, [sp, #-4]!)
   108ac:	push	{r0}		; (str r0, [sp, #-4]!)
   108b0:	ldr	ip, [pc, #16]	; 108c8 <_start@@Base+0x30>
   108b4:	push	{ip}		; (str ip, [sp, #-4]!)
   108b8:	ldr	r0, [pc, #12]	; 108cc <_start@@Base+0x34>
   108bc:	ldr	r3, [pc, #12]	; 108d0 <_start@@Base+0x38>
   108c0:	bl	10850 <__libc_start_main@plt>
   108c4:	bl	1088c <abort@plt>
   108c8:	andeq	r0, r1, r4, lsl #26
   108cc:	andeq	r0, r1, ip, ror fp
   108d0:	andeq	r0, r1, r4, lsr #25
   108d4:	ldr	r3, [pc, #20]	; 108f0 <_start@@Base+0x58>
   108d8:	ldr	r2, [pc, #20]	; 108f4 <_start@@Base+0x5c>
   108dc:	add	r3, pc, r3
   108e0:	ldr	r2, [r3, r2]
   108e4:	cmp	r2, #0
   108e8:	bxeq	lr
   108ec:	b	1085c <__gmon_start__@plt>
   108f0:	andeq	r0, r1, ip, lsl r7
   108f4:	andeq	r0, r0, r4, asr #32
   108f8:	ldr	r0, [pc, #24]	; 10918 <_start@@Base+0x80>
   108fc:	ldr	r3, [pc, #24]	; 1091c <_start@@Base+0x84>
   10900:	cmp	r3, r0
   10904:	bxeq	lr
   10908:	ldr	r3, [pc, #16]	; 10920 <_start@@Base+0x88>
   1090c:	cmp	r3, #0
   10910:	bxeq	lr
   10914:	bx	r3
   10918:	andeq	r1, r2, r0, asr r0
   1091c:	andeq	r1, r2, r0, asr r0
   10920:	andeq	r0, r0, r0
   10924:	ldr	r0, [pc, #36]	; 10950 <_start@@Base+0xb8>
   10928:	ldr	r1, [pc, #36]	; 10954 <_start@@Base+0xbc>
   1092c:	sub	r1, r1, r0
   10930:	asr	r1, r1, #2
   10934:	add	r1, r1, r1, lsr #31
   10938:	asrs	r1, r1, #1
   1093c:	bxeq	lr
   10940:	ldr	r3, [pc, #16]	; 10958 <_start@@Base+0xc0>
   10944:	cmp	r3, #0
   10948:	bxeq	lr
   1094c:	bx	r3
   10950:	andeq	r1, r2, r0, asr r0
   10954:	andeq	r1, r2, r0, asr r0
   10958:	andeq	r0, r0, r0
   1095c:	push	{r4, lr}
   10960:	ldr	r4, [pc, #24]	; 10980 <_start@@Base+0xe8>
   10964:	ldrb	r3, [r4]
   10968:	cmp	r3, #0
   1096c:	popne	{r4, pc}
   10970:	bl	108f8 <_start@@Base+0x60>
   10974:	mov	r3, #1
   10978:	strb	r3, [r4]
   1097c:	pop	{r4, pc}
   10980:	andeq	r1, r2, r0, asr r0
   10984:	b	10924 <_start@@Base+0x8c>

00010988 <analisarFicheiro@@Base>:
   10988:	push	{fp, lr}
   1098c:	mov	fp, sp
   10990:	sub	sp, sp, #80	; 0x50
   10994:	str	r0, [fp, #-4]
   10998:	str	r1, [fp, #-8]
   1099c:	movw	r0, #104	; 0x68
   109a0:	bl	10844 <malloc@plt>
   109a4:	str	r0, [fp, #-12]
   109a8:	movw	r0, #0
   109ac:	str	r0, [fp, #-20]	; 0xffffffec
   109b0:	add	r2, sp, #10
   109b4:	ldr	r0, [fp, #-4]
   109b8:	movw	r1, #3348	; 0xd14
   109bc:	movt	r1, #1
   109c0:	bl	10808 <__isoc99_fscanf@plt>
   109c4:	cmn	r0, #1
   109c8:	beq	10abc <analisarFicheiro@@Base+0x134>
   109cc:	movw	r0, #0
   109d0:	str	r0, [fp, #-16]
   109d4:	ldr	r0, [fp, #-16]
   109d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   109dc:	cmp	r0, r1
   109e0:	bgt	10ab8 <analisarFicheiro@@Base+0x130>
   109e4:	add	r0, sp, #10
   109e8:	ldr	r1, [fp, #-12]
   109ec:	ldr	r2, [fp, #-16]
   109f0:	movw	r3, #104	; 0x68
   109f4:	mul	r2, r2, r3
   109f8:	add	r1, r1, r2
   109fc:	bl	107f0 <strcmp@plt>
   10a00:	cmp	r0, #0
   10a04:	bne	10a2c <analisarFicheiro@@Base+0xa4>
   10a08:	ldr	r0, [fp, #-12]
   10a0c:	ldr	r1, [fp, #-16]
   10a10:	movw	r2, #104	; 0x68
   10a14:	mul	r1, r1, r2
   10a18:	add	r0, r0, r1
   10a1c:	ldr	r1, [r0, #100]	; 0x64
   10a20:	add	r1, r1, #1
   10a24:	str	r1, [r0, #100]	; 0x64
   10a28:	b	10ab8 <analisarFicheiro@@Base+0x130>
   10a2c:	ldr	r0, [fp, #-16]
   10a30:	ldr	r1, [fp, #-20]	; 0xffffffec
   10a34:	cmp	r0, r1
   10a38:	bne	10aa4 <analisarFicheiro@@Base+0x11c>
   10a3c:	ldr	r0, [fp, #-12]
   10a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   10a44:	add	r1, r1, #1
   10a48:	movw	r2, #104	; 0x68
   10a4c:	mul	r1, r1, r2
   10a50:	bl	1082c <realloc@plt>
   10a54:	add	r1, sp, #10
   10a58:	str	r0, [fp, #-12]
   10a5c:	ldr	r0, [fp, #-12]
   10a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a64:	movw	r3, #104	; 0x68
   10a68:	mul	r2, r2, r3
   10a6c:	add	r0, r0, r2
   10a70:	str	r3, [sp, #4]
   10a74:	bl	10838 <strcpy@plt>
   10a78:	ldr	r1, [fp, #-12]
   10a7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a80:	ldr	r3, [sp, #4]
   10a84:	mul	r2, r2, r3
   10a88:	add	r1, r1, r2
   10a8c:	movw	r2, #1
   10a90:	str	r2, [r1, #100]	; 0x64
   10a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   10a98:	add	r1, r1, #1
   10a9c:	str	r1, [fp, #-20]	; 0xffffffec
   10aa0:	b	10ab8 <analisarFicheiro@@Base+0x130>
   10aa4:	b	10aa8 <analisarFicheiro@@Base+0x120>
   10aa8:	ldr	r0, [fp, #-16]
   10aac:	add	r0, r0, #1
   10ab0:	str	r0, [fp, #-16]
   10ab4:	b	109d4 <analisarFicheiro@@Base+0x4c>
   10ab8:	b	109b0 <analisarFicheiro@@Base+0x28>
   10abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ac0:	ldr	r1, [fp, #-8]
   10ac4:	str	r0, [r1]
   10ac8:	ldr	r0, [fp, #-12]
   10acc:	mov	sp, fp
   10ad0:	pop	{fp, pc}

00010ad4 <gerarRelatorio@@Base>:
   10ad4:	push	{fp, lr}
   10ad8:	mov	fp, sp
   10adc:	sub	sp, sp, #24
   10ae0:	str	r0, [fp, #-4]
   10ae4:	str	r1, [fp, #-8]
   10ae8:	str	r2, [sp, #12]
   10aec:	ldr	r0, [fp, #-4]
   10af0:	movw	r1, #3351	; 0xd17
   10af4:	movt	r1, #1
   10af8:	bl	10868 <fprintf@plt>
   10afc:	movw	r1, #0
   10b00:	str	r1, [sp, #8]
   10b04:	ldr	r0, [sp, #8]
   10b08:	ldr	r1, [sp, #12]
   10b0c:	cmp	r0, r1
   10b10:	bge	10b74 <gerarRelatorio@@Base+0xa0>
   10b14:	ldr	r0, [fp, #-4]
   10b18:	ldr	r1, [sp, #8]
   10b1c:	add	r2, r1, #1
   10b20:	ldr	r1, [fp, #-8]
   10b24:	ldr	r3, [sp, #8]
   10b28:	movw	ip, #104	; 0x68
   10b2c:	mul	r3, r3, ip
   10b30:	add	r3, r1, r3
   10b34:	ldr	r1, [fp, #-8]
   10b38:	ldr	lr, [sp, #8]
   10b3c:	mul	ip, lr, ip
   10b40:	add	r1, r1, ip
   10b44:	ldr	r1, [r1, #100]	; 0x64
   10b48:	movw	ip, #3405	; 0xd4d
   10b4c:	movt	ip, #1
   10b50:	str	r1, [sp, #4]
   10b54:	mov	r1, ip
   10b58:	ldr	ip, [sp, #4]
   10b5c:	str	ip, [sp]
   10b60:	bl	10868 <fprintf@plt>
   10b64:	ldr	r0, [sp, #8]
   10b68:	add	r0, r0, #1
   10b6c:	str	r0, [sp, #8]
   10b70:	b	10b04 <gerarRelatorio@@Base+0x30>
   10b74:	mov	sp, fp
   10b78:	pop	{fp, pc}

00010b7c <main@@Base>:
   10b7c:	push	{fp, lr}
   10b80:	mov	fp, sp
   10b84:	sub	sp, sp, #144	; 0x90
   10b88:	movw	r0, #0
   10b8c:	str	r0, [fp, #-4]
   10b90:	movw	r0, #3418	; 0xd5a
   10b94:	movt	r0, #1
   10b98:	bl	107fc <printf@plt>
   10b9c:	sub	r1, fp, #62	; 0x3e
   10ba0:	movw	r2, #3348	; 0xd14
   10ba4:	movt	r2, #1
   10ba8:	str	r0, [sp, #20]
   10bac:	mov	r0, r2
   10bb0:	bl	10880 <__isoc99_scanf@plt>
   10bb4:	movw	r1, #3440	; 0xd70
   10bb8:	movt	r1, #1
   10bbc:	str	r0, [sp, #16]
   10bc0:	mov	r0, r1
   10bc4:	bl	107fc <printf@plt>
   10bc8:	add	r1, sp, #32
   10bcc:	movw	r2, #3348	; 0xd14
   10bd0:	movt	r2, #1
   10bd4:	str	r0, [sp, #12]
   10bd8:	mov	r0, r2
   10bdc:	bl	10880 <__isoc99_scanf@plt>
   10be0:	sub	r1, fp, #62	; 0x3e
   10be4:	str	r0, [sp, #8]
   10be8:	mov	r0, r1
   10bec:	movw	r1, #3460	; 0xd84
   10bf0:	movt	r1, #1
   10bf4:	bl	10814 <fopen@plt>
   10bf8:	str	r0, [fp, #-8]
   10bfc:	ldr	r0, [fp, #-8]
   10c00:	movw	r1, #0
   10c04:	cmp	r0, r1
   10c08:	bne	10c18 <main@@Base+0x9c>
   10c0c:	movw	r0, #1
   10c10:	str	r0, [fp, #-4]
   10c14:	b	10c98 <main@@Base+0x11c>
   10c18:	add	r0, sp, #32
   10c1c:	movw	r1, #3462	; 0xd86
   10c20:	movt	r1, #1
   10c24:	bl	10814 <fopen@plt>
   10c28:	str	r0, [fp, #-12]
   10c2c:	ldr	r0, [fp, #-12]
   10c30:	movw	r1, #0
   10c34:	cmp	r0, r1
   10c38:	bne	10c48 <main@@Base+0xcc>
   10c3c:	movw	r0, #1
   10c40:	str	r0, [fp, #-4]
   10c44:	b	10c98 <main@@Base+0x11c>
   10c48:	ldr	r0, [fp, #-8]
   10c4c:	add	r1, sp, #24
   10c50:	bl	10988 <analisarFicheiro@@Base>
   10c54:	str	r0, [sp, #28]
   10c58:	ldr	r0, [fp, #-12]
   10c5c:	ldr	r1, [sp, #28]
   10c60:	ldr	r2, [sp, #24]
   10c64:	bl	10ad4 <gerarRelatorio@@Base>
   10c68:	ldr	r0, [fp, #-8]
   10c6c:	bl	10874 <fclose@plt>
   10c70:	ldr	r1, [fp, #-12]
   10c74:	str	r0, [sp, #4]
   10c78:	mov	r0, r1
   10c7c:	bl	10874 <fclose@plt>
   10c80:	ldr	r1, [sp, #28]
   10c84:	str	r0, [sp]
   10c88:	mov	r0, r1
   10c8c:	bl	10820 <free@plt>
   10c90:	movw	r0, #0
   10c94:	str	r0, [fp, #-4]
   10c98:	ldr	r0, [fp, #-4]
   10c9c:	mov	sp, fp
   10ca0:	pop	{fp, pc}

00010ca4 <__libc_csu_init@@Base>:
   10ca4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ca8:	mov	r7, r0
   10cac:	ldr	r6, [pc, #72]	; 10cfc <__libc_csu_init@@Base+0x58>
   10cb0:	ldr	r5, [pc, #72]	; 10d00 <__libc_csu_init@@Base+0x5c>
   10cb4:	add	r6, pc, r6
   10cb8:	add	r5, pc, r5
   10cbc:	sub	r6, r6, r5
   10cc0:	mov	r8, r1
   10cc4:	mov	r9, r2
   10cc8:	bl	107d0 <strcmp@plt-0x20>
   10ccc:	asrs	r6, r6, #2
   10cd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cd4:	mov	r4, #0
   10cd8:	add	r4, r4, #1
   10cdc:	ldr	r3, [r5], #4
   10ce0:	mov	r2, r9
   10ce4:	mov	r1, r8
   10ce8:	mov	r0, r7
   10cec:	blx	r3
   10cf0:	cmp	r6, r4
   10cf4:	bne	10cd8 <__libc_csu_init@@Base+0x34>
   10cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cfc:	andeq	r0, r1, r0, asr r2
   10d00:	andeq	r0, r1, r8, asr #4

00010d04 <__libc_csu_fini@@Base>:
   10d04:	bx	lr

Disassembly of section .fini:

00010d08 <.fini>:
   10d08:	push	{r3, lr}
   10d0c:	pop	{r3, pc}
