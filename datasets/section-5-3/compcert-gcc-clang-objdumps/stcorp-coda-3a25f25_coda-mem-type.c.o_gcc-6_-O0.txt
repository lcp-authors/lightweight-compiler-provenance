
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_type_delete>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-16]
      10:	ldr	r3, [fp, #-16]
      14:	cmp	r3, #0
      18:	bne	30 <coda_mem_type_delete+0x30>
      1c:	ldr	r3, [pc, #512]	; 224 <coda_mem_type_delete+0x224>
      20:	mov	r2, #42	; 0x2a
      24:	ldr	r1, [pc, #508]	; 228 <coda_mem_type_delete+0x228>
      28:	ldr	r0, [pc, #508]	; 22c <coda_mem_type_delete+0x22c>
      2c:	bl	0 <__assert_fail>
      30:	ldr	r3, [fp, #-16]
      34:	ldr	r3, [r3]
      38:	cmp	r3, #100	; 0x64
      3c:	beq	54 <coda_mem_type_delete+0x54>
      40:	ldr	r3, [pc, #476]	; 224 <coda_mem_type_delete+0x224>
      44:	mov	r2, #43	; 0x2b
      48:	ldr	r1, [pc, #472]	; 228 <coda_mem_type_delete+0x228>
      4c:	ldr	r0, [pc, #476]	; 230 <coda_mem_type_delete+0x230>
      50:	bl	0 <__assert_fail>
      54:	ldr	r3, [fp, #-16]
      58:	ldr	r3, [r3, #8]
      5c:	cmp	r3, #3
      60:	ldrls	pc, [pc, r3, lsl #2]
      64:	b	1d0 <coda_mem_type_delete+0x1d0>
      68:	.word	0x00000078
      6c:	.word	0x00000108
      70:	.word	0x000001d0
      74:	.word	0x00000198
      78:	ldr	r3, [fp, #-16]
      7c:	ldr	r3, [r3, #20]
      80:	cmp	r3, #0
      84:	beq	1bc <coda_mem_type_delete+0x1bc>
      88:	mov	r3, #0
      8c:	str	r3, [fp, #-8]
      90:	b	e0 <coda_mem_type_delete+0xe0>
      94:	ldr	r3, [fp, #-16]
      98:	ldr	r2, [r3, #20]
      9c:	ldr	r3, [fp, #-8]
      a0:	lsl	r3, r3, #2
      a4:	add	r3, r2, r3
      a8:	ldr	r3, [r3]
      ac:	cmp	r3, #0
      b0:	beq	d4 <coda_mem_type_delete+0xd4>
      b4:	ldr	r3, [fp, #-16]
      b8:	ldr	r2, [r3, #20]
      bc:	ldr	r3, [fp, #-8]
      c0:	lsl	r3, r3, #2
      c4:	add	r3, r2, r3
      c8:	ldr	r3, [r3]
      cc:	mov	r0, r3
      d0:	bl	0 <coda_dynamic_type_delete>
      d4:	ldr	r3, [fp, #-8]
      d8:	add	r3, r3, #1
      dc:	str	r3, [fp, #-8]
      e0:	ldr	r3, [fp, #-16]
      e4:	ldr	r2, [r3, #16]
      e8:	ldr	r3, [fp, #-8]
      ec:	cmp	r2, r3
      f0:	bgt	94 <coda_mem_type_delete+0x94>
      f4:	ldr	r3, [fp, #-16]
      f8:	ldr	r3, [r3, #20]
      fc:	mov	r0, r3
     100:	bl	0 <free>
     104:	b	1bc <coda_mem_type_delete+0x1bc>
     108:	ldr	r3, [fp, #-16]
     10c:	ldr	r3, [r3, #20]
     110:	cmp	r3, #0
     114:	beq	1c4 <coda_mem_type_delete+0x1c4>
     118:	mov	r3, #0
     11c:	str	r3, [fp, #-8]
     120:	b	170 <coda_mem_type_delete+0x170>
     124:	ldr	r3, [fp, #-16]
     128:	ldr	r2, [r3, #20]
     12c:	ldr	r3, [fp, #-8]
     130:	lsl	r3, r3, #2
     134:	add	r3, r2, r3
     138:	ldr	r3, [r3]
     13c:	cmp	r3, #0
     140:	beq	164 <coda_mem_type_delete+0x164>
     144:	ldr	r3, [fp, #-16]
     148:	ldr	r2, [r3, #20]
     14c:	ldr	r3, [fp, #-8]
     150:	lsl	r3, r3, #2
     154:	add	r3, r2, r3
     158:	ldr	r3, [r3]
     15c:	mov	r0, r3
     160:	bl	0 <coda_dynamic_type_delete>
     164:	ldr	r3, [fp, #-8]
     168:	add	r3, r3, #1
     16c:	str	r3, [fp, #-8]
     170:	ldr	r3, [fp, #-16]
     174:	ldr	r2, [r3, #16]
     178:	ldr	r3, [fp, #-8]
     17c:	cmp	r2, r3
     180:	bgt	124 <coda_mem_type_delete+0x124>
     184:	ldr	r3, [fp, #-16]
     188:	ldr	r3, [r3, #20]
     18c:	mov	r0, r3
     190:	bl	0 <free>
     194:	b	1c4 <coda_mem_type_delete+0x1c4>
     198:	ldr	r3, [fp, #-16]
     19c:	ldr	r3, [r3, #16]
     1a0:	cmp	r3, #0
     1a4:	beq	1cc <coda_mem_type_delete+0x1cc>
     1a8:	ldr	r3, [fp, #-16]
     1ac:	ldr	r3, [r3, #16]
     1b0:	mov	r0, r3
     1b4:	bl	0 <coda_dynamic_type_delete>
     1b8:	b	1cc <coda_mem_type_delete+0x1cc>
     1bc:	nop			; (mov r0, r0)
     1c0:	b	1d0 <coda_mem_type_delete+0x1d0>
     1c4:	nop			; (mov r0, r0)
     1c8:	b	1d0 <coda_mem_type_delete+0x1d0>
     1cc:	nop			; (mov r0, r0)
     1d0:	ldr	r3, [fp, #-16]
     1d4:	ldr	r3, [r3, #12]
     1d8:	cmp	r3, #0
     1dc:	beq	1f0 <coda_mem_type_delete+0x1f0>
     1e0:	ldr	r3, [fp, #-16]
     1e4:	ldr	r3, [r3, #12]
     1e8:	mov	r0, r3
     1ec:	bl	0 <coda_dynamic_type_delete>
     1f0:	ldr	r3, [fp, #-16]
     1f4:	ldr	r3, [r3, #4]
     1f8:	cmp	r3, #0
     1fc:	beq	210 <coda_mem_type_delete+0x210>
     200:	ldr	r3, [fp, #-16]
     204:	ldr	r3, [r3, #4]
     208:	mov	r0, r3
     20c:	bl	0 <coda_type_release>
     210:	ldr	r0, [fp, #-16]
     214:	bl	0 <free>
     218:	nop			; (mov r0, r0)
     21c:	sub	sp, fp, #4
     220:	pop	{fp, pc}
     224:	.word	0x00000b74
     228:	.word	0x00000000
     22c:	.word	0x0000004c
     230:	.word	0x0000005c

00000234 <coda_mem_type_update>:
     234:	push	{fp, lr}
     238:	add	fp, sp, #4
     23c:	sub	sp, sp, #32
     240:	str	r0, [fp, #-24]	; 0xffffffe8
     244:	str	r1, [fp, #-28]	; 0xffffffe4
     248:	ldr	r3, [fp, #-24]	; 0xffffffe8
     24c:	ldr	r3, [r3]
     250:	ldr	r3, [r3]
     254:	cmp	r3, #0
     258:	beq	270 <coda_mem_type_update+0x3c>
     25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     260:	ldr	r3, [r3]
     264:	ldr	r3, [r3]
     268:	cmp	r3, #1
     26c:	bne	2c4 <coda_mem_type_update+0x90>
     270:	ldr	r3, [fp, #-24]	; 0xffffffe8
     274:	ldr	r3, [r3]
     278:	ldr	r3, [r3]
     27c:	cmp	r3, #99	; 0x63
     280:	bhi	290 <coda_mem_type_update+0x5c>
     284:	ldr	r3, [fp, #-24]	; 0xffffffe8
     288:	ldr	r3, [r3]
     28c:	b	29c <coda_mem_type_update+0x68>
     290:	ldr	r3, [fp, #-24]	; 0xffffffe8
     294:	ldr	r3, [r3]
     298:	ldr	r3, [r3, #4]
     29c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     2a0:	cmp	r3, r2
     2a4:	beq	2bc <coda_mem_type_update+0x88>
     2a8:	ldr	r3, [pc, #1452]	; 85c <coda_mem_type_update+0x628>
     2ac:	mov	r2, #104	; 0x68
     2b0:	ldr	r1, [pc, #1448]	; 860 <coda_mem_type_update+0x62c>
     2b4:	ldr	r0, [pc, #1448]	; 864 <coda_mem_type_update+0x630>
     2b8:	bl	0 <__assert_fail>
     2bc:	mov	r3, #0
     2c0:	b	850 <coda_mem_type_update+0x61c>
     2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     2c8:	ldr	r3, [r3]
     2cc:	ldr	r3, [r3]
     2d0:	cmp	r3, #100	; 0x64
     2d4:	beq	2ec <coda_mem_type_update+0xb8>
     2d8:	ldr	r3, [pc, #1404]	; 85c <coda_mem_type_update+0x628>
     2dc:	mov	r2, #108	; 0x6c
     2e0:	ldr	r1, [pc, #1400]	; 860 <coda_mem_type_update+0x62c>
     2e4:	ldr	r0, [pc, #1404]	; 868 <coda_mem_type_update+0x634>
     2e8:	bl	0 <__assert_fail>
     2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     2f0:	ldr	r3, [r3]
     2f4:	ldr	r2, [r3, #4]
     2f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     2fc:	cmp	r2, r3
     300:	beq	4e4 <coda_mem_type_update+0x2b0>
     304:	ldr	r3, [fp, #-28]	; 0xffffffe4
     308:	ldr	r3, [r3, #8]
     30c:	cmp	r3, #1
     310:	bne	3f4 <coda_mem_type_update+0x1c0>
     314:	ldr	r3, [fp, #-24]	; 0xffffffe8
     318:	ldr	r3, [r3]
     31c:	ldr	r3, [r3, #4]
     320:	ldr	r3, [r3, #8]
     324:	cmp	r3, #1
     328:	beq	3f4 <coda_mem_type_update+0x1c0>
     32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     330:	ldr	r3, [r3]
     334:	cmp	r3, #2
     338:	beq	350 <coda_mem_type_update+0x11c>
     33c:	ldr	r3, [pc, #1304]	; 85c <coda_mem_type_update+0x628>
     340:	mov	r2, #114	; 0x72
     344:	ldr	r1, [pc, #1300]	; 860 <coda_mem_type_update+0x62c>
     348:	ldr	r0, [pc, #1308]	; 86c <coda_mem_type_update+0x638>
     34c:	bl	0 <__assert_fail>
     350:	mov	r1, #0
     354:	ldr	r0, [fp, #-28]	; 0xffffffe4
     358:	bl	1588 <coda_mem_array_new>
     35c:	str	r0, [fp, #-12]
     360:	ldr	r3, [fp, #-12]
     364:	cmp	r3, #0
     368:	bne	374 <coda_mem_type_update+0x140>
     36c:	mvn	r3, #0
     370:	b	850 <coda_mem_type_update+0x61c>
     374:	ldr	r3, [fp, #-28]	; 0xffffffe4
     378:	ldr	r3, [r3, #40]	; 0x28
     37c:	mov	r1, r3
     380:	ldr	r0, [fp, #-24]	; 0xffffffe8
     384:	bl	234 <coda_mem_type_update>
     388:	mov	r3, r0
     38c:	cmp	r3, #0
     390:	beq	3a4 <coda_mem_type_update+0x170>
     394:	ldr	r0, [fp, #-12]
     398:	bl	0 <coda_dynamic_type_delete>
     39c:	mvn	r3, #0
     3a0:	b	850 <coda_mem_type_update+0x61c>
     3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3a8:	ldr	r3, [r3]
     3ac:	mov	r1, r3
     3b0:	ldr	r0, [fp, #-12]
     3b4:	bl	1934 <coda_mem_array_add_element>
     3b8:	mov	r3, r0
     3bc:	cmp	r3, #0
     3c0:	beq	3d4 <coda_mem_type_update+0x1a0>
     3c4:	ldr	r0, [fp, #-12]
     3c8:	bl	0 <coda_dynamic_type_delete>
     3cc:	mvn	r3, #0
     3d0:	b	850 <coda_mem_type_update+0x61c>
     3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3d8:	ldr	r2, [fp, #-12]
     3dc:	str	r2, [r3]
     3e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3e8:	bl	234 <coda_mem_type_update>
     3ec:	mov	r3, r0
     3f0:	b	850 <coda_mem_type_update+0x61c>
     3f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3f8:	ldr	r3, [r3]
     3fc:	ldr	r3, [r3, #4]
     400:	ldr	r3, [r3, #8]
     404:	cmp	r3, #0
     408:	bne	4d0 <coda_mem_type_update+0x29c>
     40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     410:	ldr	r3, [r3, #8]
     414:	cmp	r3, #4
     418:	bne	4d0 <coda_mem_type_update+0x29c>
     41c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     420:	ldr	r3, [r3]
     424:	ldr	r3, [r3, #4]
     428:	ldr	r3, [r3]
     42c:	cmp	r3, #2
     430:	beq	448 <coda_mem_type_update+0x214>
     434:	ldr	r3, [pc, #1056]	; 85c <coda_mem_type_update+0x628>
     438:	mov	r2, #141	; 0x8d
     43c:	ldr	r1, [pc, #1052]	; 860 <coda_mem_type_update+0x62c>
     440:	ldr	r0, [pc, #1064]	; 870 <coda_mem_type_update+0x63c>
     444:	bl	0 <__assert_fail>
     448:	ldr	r3, [fp, #-24]	; 0xffffffe8
     44c:	ldr	r3, [r3]
     450:	ldr	r3, [r3, #4]
     454:	ldr	r3, [r3, #48]	; 0x30
     458:	cmp	r3, #0
     45c:	beq	474 <coda_mem_type_update+0x240>
     460:	ldr	r3, [pc, #1012]	; 85c <coda_mem_type_update+0x628>
     464:	mov	r2, #142	; 0x8e
     468:	ldr	r1, [pc, #1008]	; 860 <coda_mem_type_update+0x62c>
     46c:	ldr	r0, [pc, #1024]	; 874 <coda_mem_type_update+0x640>
     470:	bl	0 <__assert_fail>
     474:	mov	r3, #0
     478:	mov	r2, #0
     47c:	mov	r1, #0
     480:	ldr	r0, [fp, #-28]	; 0xffffffe4
     484:	bl	2868 <coda_mem_string_new>
     488:	str	r0, [fp, #-12]
     48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     490:	ldr	r3, [r3]
     494:	ldr	r2, [r3, #12]
     498:	ldr	r3, [fp, #-12]
     49c:	str	r2, [r3, #12]
     4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4a4:	ldr	r3, [r3]
     4a8:	mov	r2, #0
     4ac:	str	r2, [r3, #12]
     4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4b4:	ldr	r3, [r3]
     4b8:	mov	r0, r3
     4bc:	bl	0 <coda_dynamic_type_delete>
     4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4c4:	ldr	r2, [fp, #-12]
     4c8:	str	r2, [r3]
     4cc:	b	4e4 <coda_mem_type_update+0x2b0>
     4d0:	ldr	r3, [pc, #900]	; 85c <coda_mem_type_update+0x628>
     4d4:	mov	r2, #153	; 0x99
     4d8:	ldr	r1, [pc, #896]	; 860 <coda_mem_type_update+0x62c>
     4dc:	ldr	r0, [pc, #916]	; 878 <coda_mem_type_update+0x644>
     4e0:	bl	0 <__assert_fail>
     4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4e8:	ldr	r3, [r3]
     4ec:	str	r3, [fp, #-12]
     4f0:	ldr	r3, [fp, #-12]
     4f4:	ldr	r3, [r3, #8]
     4f8:	cmp	r3, #3
     4fc:	ldrls	pc, [pc, r3, lsl #2]
     500:	b	7a8 <coda_mem_type_update+0x574>
     504:	.word	0x00000514
     508:	.word	0x00000700
     50c:	.word	0x000007a8
     510:	.word	0x00000770
     514:	ldr	r3, [fp, #-12]
     518:	str	r3, [fp, #-16]
     51c:	ldr	r3, [fp, #-16]
     520:	ldr	r2, [r3, #16]
     524:	ldr	r3, [fp, #-16]
     528:	ldr	r3, [r3, #4]
     52c:	ldr	r3, [r3, #48]	; 0x30
     530:	cmp	r2, r3
     534:	bge	60c <coda_mem_type_update+0x3d8>
     538:	ldr	r3, [fp, #-16]
     53c:	ldr	r2, [r3, #20]
     540:	ldr	r3, [fp, #-16]
     544:	ldr	r3, [r3, #4]
     548:	ldr	r3, [r3, #48]	; 0x30
     54c:	lsl	r3, r3, #2
     550:	mov	r1, r3
     554:	mov	r0, r2
     558:	bl	0 <realloc>
     55c:	str	r0, [fp, #-20]	; 0xffffffec
     560:	ldr	r3, [fp, #-20]	; 0xffffffec
     564:	cmp	r3, #0
     568:	bne	59c <coda_mem_type_update+0x368>
     56c:	ldr	r3, [fp, #-16]
     570:	ldr	r3, [r3, #4]
     574:	ldr	r3, [r3, #48]	; 0x30
     578:	lsl	r2, r3, #2
     57c:	mov	r3, #177	; 0xb1
     580:	str	r3, [sp]
     584:	ldr	r3, [pc, #724]	; 860 <coda_mem_type_update+0x62c>
     588:	ldr	r1, [pc, #748]	; 87c <coda_mem_type_update+0x648>
     58c:	mvn	r0, #0
     590:	bl	0 <coda_set_error>
     594:	mvn	r3, #0
     598:	b	850 <coda_mem_type_update+0x61c>
     59c:	ldr	r3, [fp, #-16]
     5a0:	ldr	r2, [fp, #-20]	; 0xffffffec
     5a4:	str	r2, [r3, #20]
     5a8:	ldr	r3, [fp, #-16]
     5ac:	ldr	r3, [r3, #16]
     5b0:	str	r3, [fp, #-8]
     5b4:	b	5e0 <coda_mem_type_update+0x3ac>
     5b8:	ldr	r3, [fp, #-16]
     5bc:	ldr	r2, [r3, #20]
     5c0:	ldr	r3, [fp, #-8]
     5c4:	lsl	r3, r3, #2
     5c8:	add	r3, r2, r3
     5cc:	mov	r2, #0
     5d0:	str	r2, [r3]
     5d4:	ldr	r3, [fp, #-8]
     5d8:	add	r3, r3, #1
     5dc:	str	r3, [fp, #-8]
     5e0:	ldr	r3, [fp, #-16]
     5e4:	ldr	r3, [r3, #4]
     5e8:	ldr	r2, [r3, #48]	; 0x30
     5ec:	ldr	r3, [fp, #-8]
     5f0:	cmp	r2, r3
     5f4:	bgt	5b8 <coda_mem_type_update+0x384>
     5f8:	ldr	r3, [fp, #-16]
     5fc:	ldr	r3, [r3, #4]
     600:	ldr	r2, [r3, #48]	; 0x30
     604:	ldr	r3, [fp, #-16]
     608:	str	r2, [r3, #16]
     60c:	mov	r3, #0
     610:	str	r3, [fp, #-8]
     614:	b	6e4 <coda_mem_type_update+0x4b0>
     618:	ldr	r3, [fp, #-16]
     61c:	ldr	r2, [r3, #20]
     620:	ldr	r3, [fp, #-8]
     624:	lsl	r3, r3, #2
     628:	add	r3, r2, r3
     62c:	ldr	r3, [r3]
     630:	cmp	r3, #0
     634:	bne	688 <coda_mem_type_update+0x454>
     638:	ldr	r3, [fp, #-16]
     63c:	ldr	r3, [r3, #4]
     640:	ldr	r2, [r3, #52]	; 0x34
     644:	ldr	r3, [fp, #-8]
     648:	lsl	r3, r3, #2
     64c:	add	r3, r2, r3
     650:	ldr	r3, [r3]
     654:	ldrb	r3, [r3, #16]
     658:	cmp	r3, #0
     65c:	bne	6d8 <coda_mem_type_update+0x4a4>
     660:	ldr	r3, [fp, #-16]
     664:	ldr	r3, [r3, #4]
     668:	ldr	r2, [r3, #52]	; 0x34
     66c:	ldr	r3, [fp, #-8]
     670:	lsl	r3, r3, #2
     674:	add	r3, r2, r3
     678:	ldr	r3, [r3]
     67c:	mov	r2, #1
     680:	strb	r2, [r3, #16]
     684:	b	6d8 <coda_mem_type_update+0x4a4>
     688:	ldr	r3, [fp, #-16]
     68c:	ldr	r2, [r3, #20]
     690:	ldr	r3, [fp, #-8]
     694:	lsl	r3, r3, #2
     698:	add	r0, r2, r3
     69c:	ldr	r3, [fp, #-16]
     6a0:	ldr	r3, [r3, #4]
     6a4:	ldr	r2, [r3, #52]	; 0x34
     6a8:	ldr	r3, [fp, #-8]
     6ac:	lsl	r3, r3, #2
     6b0:	add	r3, r2, r3
     6b4:	ldr	r3, [r3]
     6b8:	ldr	r3, [r3, #8]
     6bc:	mov	r1, r3
     6c0:	bl	234 <coda_mem_type_update>
     6c4:	mov	r3, r0
     6c8:	cmp	r3, #0
     6cc:	beq	6d8 <coda_mem_type_update+0x4a4>
     6d0:	mvn	r3, #0
     6d4:	b	850 <coda_mem_type_update+0x61c>
     6d8:	ldr	r3, [fp, #-8]
     6dc:	add	r3, r3, #1
     6e0:	str	r3, [fp, #-8]
     6e4:	ldr	r3, [fp, #-16]
     6e8:	ldr	r3, [r3, #4]
     6ec:	ldr	r2, [r3, #48]	; 0x30
     6f0:	ldr	r3, [fp, #-8]
     6f4:	cmp	r2, r3
     6f8:	bgt	618 <coda_mem_type_update+0x3e4>
     6fc:	b	7a8 <coda_mem_type_update+0x574>
     700:	mov	r3, #0
     704:	str	r3, [fp, #-8]
     708:	b	758 <coda_mem_type_update+0x524>
     70c:	ldr	r3, [fp, #-12]
     710:	ldr	r2, [r3, #20]
     714:	ldr	r3, [fp, #-8]
     718:	lsl	r3, r3, #2
     71c:	add	r2, r2, r3
     720:	ldr	r3, [fp, #-12]
     724:	ldr	r3, [r3, #4]
     728:	ldr	r3, [r3, #40]	; 0x28
     72c:	mov	r1, r3
     730:	mov	r0, r2
     734:	bl	234 <coda_mem_type_update>
     738:	mov	r3, r0
     73c:	cmp	r3, #0
     740:	beq	74c <coda_mem_type_update+0x518>
     744:	mvn	r3, #0
     748:	b	850 <coda_mem_type_update+0x61c>
     74c:	ldr	r3, [fp, #-8]
     750:	add	r3, r3, #1
     754:	str	r3, [fp, #-8]
     758:	ldr	r3, [fp, #-12]
     75c:	ldr	r2, [r3, #16]
     760:	ldr	r3, [fp, #-8]
     764:	cmp	r2, r3
     768:	bgt	70c <coda_mem_type_update+0x4d8>
     76c:	b	7a8 <coda_mem_type_update+0x574>
     770:	ldr	r3, [fp, #-12]
     774:	add	r2, r3, #16
     778:	ldr	r3, [fp, #-12]
     77c:	ldr	r3, [r3, #4]
     780:	ldr	r3, [r3, #44]	; 0x2c
     784:	mov	r1, r3
     788:	mov	r0, r2
     78c:	bl	234 <coda_mem_type_update>
     790:	mov	r3, r0
     794:	cmp	r3, #0
     798:	beq	7a4 <coda_mem_type_update+0x570>
     79c:	mvn	r3, #0
     7a0:	b	850 <coda_mem_type_update+0x61c>
     7a4:	nop			; (mov r0, r0)
     7a8:	ldr	r3, [fp, #-12]
     7ac:	ldr	r3, [r3, #12]
     7b0:	cmp	r3, #0
     7b4:	bne	808 <coda_mem_type_update+0x5d4>
     7b8:	ldr	r3, [fp, #-12]
     7bc:	ldr	r3, [r3, #4]
     7c0:	ldr	r3, [r3, #36]	; 0x24
     7c4:	cmp	r3, #0
     7c8:	beq	808 <coda_mem_type_update+0x5d4>
     7cc:	ldr	r3, [fp, #-12]
     7d0:	ldr	r3, [r3, #4]
     7d4:	ldr	r3, [r3, #36]	; 0x24
     7d8:	mov	r1, #0
     7dc:	mov	r0, r3
     7e0:	bl	f20 <coda_mem_record_new>
     7e4:	mov	r2, r0
     7e8:	ldr	r3, [fp, #-12]
     7ec:	str	r2, [r3, #12]
     7f0:	ldr	r3, [fp, #-12]
     7f4:	ldr	r3, [r3, #12]
     7f8:	cmp	r3, #0
     7fc:	bne	808 <coda_mem_type_update+0x5d4>
     800:	mvn	r3, #0
     804:	b	850 <coda_mem_type_update+0x61c>
     808:	ldr	r3, [fp, #-12]
     80c:	ldr	r3, [r3, #12]
     810:	cmp	r3, #0
     814:	beq	84c <coda_mem_type_update+0x618>
     818:	ldr	r3, [fp, #-12]
     81c:	add	r2, r3, #12
     820:	ldr	r3, [fp, #-12]
     824:	ldr	r3, [r3, #4]
     828:	ldr	r3, [r3, #36]	; 0x24
     82c:	mov	r1, r3
     830:	mov	r0, r2
     834:	bl	234 <coda_mem_type_update>
     838:	mov	r3, r0
     83c:	cmp	r3, #0
     840:	beq	84c <coda_mem_type_update+0x618>
     844:	mvn	r3, #0
     848:	b	850 <coda_mem_type_update+0x61c>
     84c:	mov	r3, #0
     850:	mov	r0, r3
     854:	sub	sp, fp, #4
     858:	pop	{fp, pc}
     85c:	.word	0x00000b8c
     860:	.word	0x00000000
     864:	.word	0x00000084
     868:	.word	0x000000b8
     86c:	.word	0x000000e0
     870:	.word	0x00000108
     874:	.word	0x00000138
     878:	.word	0x00000174
     87c:	.word	0x00000178

00000880 <create_attributes_record>:
     880:	push	{fp, lr}
     884:	add	fp, sp, #4
     888:	sub	sp, sp, #8
     88c:	str	r0, [fp, #-8]
     890:	ldr	r3, [fp, #-8]
     894:	ldr	r3, [r3, #4]
     898:	ldr	r3, [r3, #36]	; 0x24
     89c:	cmp	r3, #0
     8a0:	beq	8e0 <create_attributes_record+0x60>
     8a4:	ldr	r3, [fp, #-8]
     8a8:	ldr	r3, [r3, #4]
     8ac:	ldr	r3, [r3, #36]	; 0x24
     8b0:	mov	r1, #0
     8b4:	mov	r0, r3
     8b8:	bl	f20 <coda_mem_record_new>
     8bc:	mov	r2, r0
     8c0:	ldr	r3, [fp, #-8]
     8c4:	str	r2, [r3, #12]
     8c8:	ldr	r3, [fp, #-8]
     8cc:	ldr	r3, [r3, #12]
     8d0:	cmp	r3, #0
     8d4:	bne	8e0 <create_attributes_record+0x60>
     8d8:	mvn	r3, #0
     8dc:	b	8e4 <create_attributes_record+0x64>
     8e0:	mov	r3, #0
     8e4:	mov	r0, r3
     8e8:	sub	sp, fp, #4
     8ec:	pop	{fp, pc}

000008f0 <coda_mem_type_add_attribute>:
     8f0:	push	{r4, fp, lr}
     8f4:	add	fp, sp, #8
     8f8:	sub	sp, sp, #44	; 0x2c
     8fc:	str	r0, [fp, #-32]	; 0xffffffe0
     900:	str	r1, [fp, #-36]	; 0xffffffdc
     904:	str	r2, [fp, #-40]	; 0xffffffd8
     908:	str	r3, [fp, #-44]	; 0xffffffd4
     90c:	mvn	r3, #0
     910:	str	r3, [fp, #-16]
     914:	ldr	r3, [fp, #-32]	; 0xffffffe0
     918:	cmp	r3, #0
     91c:	bne	93c <coda_mem_type_add_attribute+0x4c>
     920:	mov	r3, #272	; 0x110
     924:	ldr	r2, [pc, #1076]	; d60 <coda_mem_type_add_attribute+0x470>
     928:	ldr	r1, [pc, #1076]	; d64 <coda_mem_type_add_attribute+0x474>
     92c:	mvn	r0, #99	; 0x63
     930:	bl	0 <coda_set_error>
     934:	mvn	r3, #0
     938:	b	d54 <coda_mem_type_add_attribute+0x464>
     93c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     940:	cmp	r3, #0
     944:	bne	964 <coda_mem_type_add_attribute+0x74>
     948:	ldr	r3, [pc, #1048]	; d68 <coda_mem_type_add_attribute+0x478>
     94c:	ldr	r2, [pc, #1036]	; d60 <coda_mem_type_add_attribute+0x470>
     950:	ldr	r1, [pc, #1044]	; d6c <coda_mem_type_add_attribute+0x47c>
     954:	mvn	r0, #99	; 0x63
     958:	bl	0 <coda_set_error>
     95c:	mvn	r3, #0
     960:	b	d54 <coda_mem_type_add_attribute+0x464>
     964:	ldr	r3, [fp, #-40]	; 0xffffffd8
     968:	cmp	r3, #0
     96c:	bne	98c <coda_mem_type_add_attribute+0x9c>
     970:	ldr	r3, [pc, #1016]	; d70 <coda_mem_type_add_attribute+0x480>
     974:	ldr	r2, [pc, #996]	; d60 <coda_mem_type_add_attribute+0x470>
     978:	ldr	r1, [pc, #1012]	; d74 <coda_mem_type_add_attribute+0x484>
     97c:	mvn	r0, #99	; 0x63
     980:	bl	0 <coda_set_error>
     984:	mvn	r3, #0
     988:	b	d54 <coda_mem_type_add_attribute+0x464>
     98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     990:	ldr	r3, [r3, #12]
     994:	cmp	r3, #0
     998:	bne	a5c <coda_mem_type_add_attribute+0x16c>
     99c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     9a0:	cmp	r3, #0
     9a4:	beq	a38 <coda_mem_type_add_attribute+0x148>
     9a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9ac:	ldr	r3, [r3, #4]
     9b0:	ldr	r3, [r3, #36]	; 0x24
     9b4:	cmp	r3, #0
     9b8:	bne	9fc <coda_mem_type_add_attribute+0x10c>
     9bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9c0:	ldr	r4, [r3, #4]
     9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9c8:	ldr	r3, [r3, #4]
     9cc:	ldr	r3, [r3]
     9d0:	mov	r0, r3
     9d4:	bl	0 <coda_type_record_new>
     9d8:	mov	r3, r0
     9dc:	str	r3, [r4, #36]	; 0x24
     9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9e4:	ldr	r3, [r3, #4]
     9e8:	ldr	r3, [r3, #36]	; 0x24
     9ec:	cmp	r3, #0
     9f0:	bne	9fc <coda_mem_type_add_attribute+0x10c>
     9f4:	mvn	r3, #0
     9f8:	b	d54 <coda_mem_type_add_attribute+0x464>
     9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a00:	ldr	r3, [r3, #4]
     a04:	ldr	r3, [r3, #36]	; 0x24
     a08:	mov	r1, #0
     a0c:	mov	r0, r3
     a10:	bl	f20 <coda_mem_record_new>
     a14:	mov	r2, r0
     a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a1c:	str	r2, [r3, #12]
     a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a24:	ldr	r3, [r3, #12]
     a28:	cmp	r3, #0
     a2c:	bne	ac0 <coda_mem_type_add_attribute+0x1d0>
     a30:	mvn	r3, #0
     a34:	b	d54 <coda_mem_type_add_attribute+0x464>
     a38:	ldr	r3, [pc, #824]	; d78 <coda_mem_type_add_attribute+0x488>
     a3c:	str	r3, [sp]
     a40:	ldr	r3, [pc, #792]	; d60 <coda_mem_type_add_attribute+0x470>
     a44:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a48:	ldr	r1, [pc, #812]	; d7c <coda_mem_type_add_attribute+0x48c>
     a4c:	mvn	r0, #101	; 0x65
     a50:	bl	0 <coda_set_error>
     a54:	mvn	r3, #0
     a58:	b	d54 <coda_mem_type_add_attribute+0x464>
     a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a60:	ldr	r3, [r3, #12]
     a64:	ldr	r3, [r3]
     a68:	cmp	r3, #100	; 0x64
     a6c:	beq	a8c <coda_mem_type_add_attribute+0x19c>
     a70:	ldr	r3, [pc, #776]	; d80 <coda_mem_type_add_attribute+0x490>
     a74:	ldr	r2, [pc, #740]	; d60 <coda_mem_type_add_attribute+0x470>
     a78:	ldr	r1, [pc, #772]	; d84 <coda_mem_type_add_attribute+0x494>
     a7c:	mvn	r0, #99	; 0x63
     a80:	bl	0 <coda_set_error>
     a84:	mvn	r3, #0
     a88:	b	d54 <coda_mem_type_add_attribute+0x464>
     a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a90:	ldr	r3, [r3, #4]
     a94:	ldr	r2, [r3, #36]	; 0x24
     a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a9c:	ldr	r3, [r3, #12]
     aa0:	ldr	r3, [r3, #4]
     aa4:	cmp	r2, r3
     aa8:	beq	ac0 <coda_mem_type_add_attribute+0x1d0>
     aac:	ldr	r3, [pc, #724]	; d88 <coda_mem_type_add_attribute+0x498>
     ab0:	ldr	r2, [pc, #724]	; d8c <coda_mem_type_add_attribute+0x49c>
     ab4:	ldr	r1, [pc, #676]	; d60 <coda_mem_type_add_attribute+0x470>
     ab8:	ldr	r0, [pc, #720]	; d90 <coda_mem_type_add_attribute+0x4a0>
     abc:	bl	0 <__assert_fail>
     ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ac4:	ldr	r3, [r3, #12]
     ac8:	str	r3, [fp, #-24]	; 0xffffffe8
     acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ad0:	ldr	r3, [r3, #4]
     ad4:	ldr	r3, [r3, #44]	; 0x2c
     ad8:	ldr	r1, [fp, #-36]	; 0xffffffdc
     adc:	mov	r0, r3
     ae0:	bl	0 <coda_hashtable_get_index_from_name>
     ae4:	str	r0, [fp, #-16]
     ae8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     aec:	cmp	r3, #0
     af0:	beq	c6c <coda_mem_type_add_attribute+0x37c>
     af4:	ldr	r3, [fp, #-16]
     af8:	cmp	r3, #0
     afc:	blt	b34 <coda_mem_type_add_attribute+0x244>
     b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b04:	ldr	r2, [r3, #16]
     b08:	ldr	r3, [fp, #-16]
     b0c:	cmp	r2, r3
     b10:	ble	b78 <coda_mem_type_add_attribute+0x288>
     b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b18:	ldr	r2, [r3, #20]
     b1c:	ldr	r3, [fp, #-16]
     b20:	lsl	r3, r3, #2
     b24:	add	r3, r2, r3
     b28:	ldr	r3, [r3]
     b2c:	cmp	r3, #0
     b30:	beq	b78 <coda_mem_type_add_attribute+0x288>
     b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b38:	ldr	r0, [r3, #4]
     b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b40:	ldr	r3, [r3, #4]
     b44:	mov	r2, r3
     b48:	ldr	r1, [fp, #-36]	; 0xffffffdc
     b4c:	bl	0 <coda_type_record_create_field>
     b50:	mov	r3, r0
     b54:	cmp	r3, #0
     b58:	beq	b64 <coda_mem_type_add_attribute+0x274>
     b5c:	mvn	r3, #0
     b60:	b	d54 <coda_mem_type_add_attribute+0x464>
     b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b68:	ldr	r3, [r3, #4]
     b6c:	ldr	r3, [r3, #48]	; 0x30
     b70:	sub	r3, r3, #1
     b74:	str	r3, [fp, #-16]
     b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b7c:	ldr	r2, [r3, #16]
     b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b84:	ldr	r3, [r3, #4]
     b88:	ldr	r3, [r3, #48]	; 0x30
     b8c:	cmp	r2, r3
     b90:	bge	d34 <coda_mem_type_add_attribute+0x444>
     b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b98:	ldr	r2, [r3, #20]
     b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ba0:	ldr	r3, [r3, #4]
     ba4:	ldr	r3, [r3, #48]	; 0x30
     ba8:	lsl	r3, r3, #2
     bac:	mov	r1, r3
     bb0:	mov	r0, r2
     bb4:	bl	0 <realloc>
     bb8:	str	r0, [fp, #-28]	; 0xffffffe4
     bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     bc0:	cmp	r3, #0
     bc4:	bne	bf8 <coda_mem_type_add_attribute+0x308>
     bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bcc:	ldr	r3, [r3, #4]
     bd0:	ldr	r3, [r3, #48]	; 0x30
     bd4:	lsl	r2, r3, #2
     bd8:	mov	r3, #344	; 0x158
     bdc:	str	r3, [sp]
     be0:	ldr	r3, [pc, #376]	; d60 <coda_mem_type_add_attribute+0x470>
     be4:	ldr	r1, [pc, #424]	; d94 <coda_mem_type_add_attribute+0x4a4>
     be8:	mvn	r0, #0
     bec:	bl	0 <coda_set_error>
     bf0:	mvn	r3, #0
     bf4:	b	d54 <coda_mem_type_add_attribute+0x464>
     bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     c00:	str	r2, [r3, #20]
     c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c08:	ldr	r3, [r3, #16]
     c0c:	str	r3, [fp, #-20]	; 0xffffffec
     c10:	b	c3c <coda_mem_type_add_attribute+0x34c>
     c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c18:	ldr	r2, [r3, #20]
     c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
     c20:	lsl	r3, r3, #2
     c24:	add	r3, r2, r3
     c28:	mov	r2, #0
     c2c:	str	r2, [r3]
     c30:	ldr	r3, [fp, #-20]	; 0xffffffec
     c34:	add	r3, r3, #1
     c38:	str	r3, [fp, #-20]	; 0xffffffec
     c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c40:	ldr	r3, [r3, #4]
     c44:	ldr	r2, [r3, #48]	; 0x30
     c48:	ldr	r3, [fp, #-20]	; 0xffffffec
     c4c:	cmp	r2, r3
     c50:	bgt	c14 <coda_mem_type_add_attribute+0x324>
     c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c58:	ldr	r3, [r3, #4]
     c5c:	ldr	r2, [r3, #48]	; 0x30
     c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c64:	str	r2, [r3, #16]
     c68:	b	d34 <coda_mem_type_add_attribute+0x444>
     c6c:	ldr	r3, [fp, #-16]
     c70:	cmp	r3, #0
     c74:	bge	c9c <coda_mem_type_add_attribute+0x3ac>
     c78:	ldr	r3, [pc, #280]	; d98 <coda_mem_type_add_attribute+0x4a8>
     c7c:	str	r3, [sp]
     c80:	ldr	r3, [pc, #216]	; d60 <coda_mem_type_add_attribute+0x470>
     c84:	ldr	r2, [fp, #-36]	; 0xffffffdc
     c88:	ldr	r1, [pc, #236]	; d7c <coda_mem_type_add_attribute+0x48c>
     c8c:	mvn	r0, #101	; 0x65
     c90:	bl	0 <coda_set_error>
     c94:	mvn	r3, #0
     c98:	b	d54 <coda_mem_type_add_attribute+0x464>
     c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ca0:	ldr	r2, [r3, #20]
     ca4:	ldr	r3, [fp, #-16]
     ca8:	lsl	r3, r3, #2
     cac:	add	r3, r2, r3
     cb0:	ldr	r3, [r3]
     cb4:	cmp	r3, #0
     cb8:	beq	ce0 <coda_mem_type_add_attribute+0x3f0>
     cbc:	ldr	r3, [pc, #216]	; d9c <coda_mem_type_add_attribute+0x4ac>
     cc0:	str	r3, [sp]
     cc4:	ldr	r3, [pc, #148]	; d60 <coda_mem_type_add_attribute+0x470>
     cc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ccc:	ldr	r1, [pc, #204]	; da0 <coda_mem_type_add_attribute+0x4b0>
     cd0:	mvn	r0, #99	; 0x63
     cd4:	bl	0 <coda_set_error>
     cd8:	mvn	r3, #0
     cdc:	b	d54 <coda_mem_type_add_attribute+0x464>
     ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ce4:	ldr	r3, [r3, #4]
     ce8:	ldr	r2, [r3, #52]	; 0x34
     cec:	ldr	r3, [fp, #-16]
     cf0:	lsl	r3, r3, #2
     cf4:	add	r3, r2, r3
     cf8:	ldr	r3, [r3]
     cfc:	ldr	r2, [r3, #8]
     d00:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d04:	ldr	r3, [r3, #4]
     d08:	cmp	r2, r3
     d0c:	beq	d34 <coda_mem_type_add_attribute+0x444>
     d10:	ldr	r3, [pc, #140]	; da4 <coda_mem_type_add_attribute+0x4b4>
     d14:	str	r3, [sp]
     d18:	ldr	r3, [pc, #64]	; d60 <coda_mem_type_add_attribute+0x470>
     d1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     d20:	ldr	r1, [pc, #128]	; da8 <coda_mem_type_add_attribute+0x4b8>
     d24:	mvn	r0, #99	; 0x63
     d28:	bl	0 <coda_set_error>
     d2c:	mvn	r3, #0
     d30:	b	d54 <coda_mem_type_add_attribute+0x464>
     d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d38:	ldr	r2, [r3, #20]
     d3c:	ldr	r3, [fp, #-16]
     d40:	lsl	r3, r3, #2
     d44:	add	r3, r2, r3
     d48:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d4c:	str	r2, [r3]
     d50:	mov	r3, #0
     d54:	mov	r0, r3
     d58:	sub	sp, fp, #8
     d5c:	pop	{r4, fp, pc}
     d60:	.word	0x00000000
     d64:	.word	0x000001b0
     d68:	.word	0x00000115
     d6c:	.word	0x000001d0
     d70:	.word	0x0000011a
     d74:	.word	0x000001f4
     d78:	.word	0x00000133
     d7c:	.word	0x0000021c
     d80:	.word	0x0000013b
     d84:	.word	0x00000254
     d88:	.word	0x00000ba4
     d8c:	.word	0x0000013e
     d90:	.word	0x00000274
     d94:	.word	0x00000178
     d98:	.word	0x00000169
     d9c:	.word	0x0000016f
     da0:	.word	0x000002c0
     da4:	.word	0x00000175
     da8:	.word	0x000002e8

00000dac <coda_mem_type_set_attributes>:
     dac:	push	{fp, lr}
     db0:	add	fp, sp, #4
     db4:	sub	sp, sp, #16
     db8:	str	r0, [fp, #-8]
     dbc:	str	r1, [fp, #-12]
     dc0:	str	r2, [fp, #-16]
     dc4:	ldr	r3, [fp, #-8]
     dc8:	cmp	r3, #0
     dcc:	bne	dec <coda_mem_type_set_attributes+0x40>
     dd0:	ldr	r3, [pc, #288]	; ef8 <coda_mem_type_set_attributes+0x14c>
     dd4:	ldr	r2, [pc, #288]	; efc <coda_mem_type_set_attributes+0x150>
     dd8:	ldr	r1, [pc, #288]	; f00 <coda_mem_type_set_attributes+0x154>
     ddc:	mvn	r0, #99	; 0x63
     de0:	bl	0 <coda_set_error>
     de4:	mvn	r3, #0
     de8:	b	eec <coda_mem_type_set_attributes+0x140>
     dec:	ldr	r3, [fp, #-12]
     df0:	cmp	r3, #0
     df4:	bne	e14 <coda_mem_type_set_attributes+0x68>
     df8:	ldr	r3, [pc, #260]	; f04 <coda_mem_type_set_attributes+0x158>
     dfc:	ldr	r2, [pc, #248]	; efc <coda_mem_type_set_attributes+0x150>
     e00:	ldr	r1, [pc, #256]	; f08 <coda_mem_type_set_attributes+0x15c>
     e04:	mvn	r0, #99	; 0x63
     e08:	bl	0 <coda_set_error>
     e0c:	mvn	r3, #0
     e10:	b	eec <coda_mem_type_set_attributes+0x140>
     e14:	ldr	r3, [fp, #-8]
     e18:	ldr	r3, [r3, #12]
     e1c:	cmp	r3, #0
     e20:	beq	e40 <coda_mem_type_set_attributes+0x94>
     e24:	mov	r3, #396	; 0x18c
     e28:	ldr	r2, [pc, #204]	; efc <coda_mem_type_set_attributes+0x150>
     e2c:	ldr	r1, [pc, #216]	; f0c <coda_mem_type_set_attributes+0x160>
     e30:	mvn	r0, #99	; 0x63
     e34:	bl	0 <coda_set_error>
     e38:	mvn	r3, #0
     e3c:	b	eec <coda_mem_type_set_attributes+0x140>
     e40:	ldr	r3, [fp, #-16]
     e44:	cmp	r3, #0
     e48:	beq	ea4 <coda_mem_type_set_attributes+0xf8>
     e4c:	ldr	r3, [fp, #-12]
     e50:	ldr	r3, [r3, #4]
     e54:	ldr	r3, [r3, #8]
     e58:	cmp	r3, #0
     e5c:	beq	e74 <coda_mem_type_set_attributes+0xc8>
     e60:	ldr	r3, [pc, #168]	; f10 <coda_mem_type_set_attributes+0x164>
     e64:	ldr	r2, [pc, #168]	; f14 <coda_mem_type_set_attributes+0x168>
     e68:	ldr	r1, [pc, #140]	; efc <coda_mem_type_set_attributes+0x150>
     e6c:	ldr	r0, [pc, #164]	; f18 <coda_mem_type_set_attributes+0x16c>
     e70:	bl	0 <__assert_fail>
     e74:	ldr	r3, [fp, #-8]
     e78:	ldr	r2, [r3, #4]
     e7c:	ldr	r3, [fp, #-12]
     e80:	ldr	r3, [r3, #4]
     e84:	mov	r1, r3
     e88:	mov	r0, r2
     e8c:	bl	0 <coda_type_set_attributes>
     e90:	mov	r3, r0
     e94:	cmp	r3, #0
     e98:	beq	edc <coda_mem_type_set_attributes+0x130>
     e9c:	mvn	r3, #0
     ea0:	b	eec <coda_mem_type_set_attributes+0x140>
     ea4:	ldr	r3, [fp, #-8]
     ea8:	ldr	r3, [r3, #4]
     eac:	ldr	r2, [r3, #36]	; 0x24
     eb0:	ldr	r3, [fp, #-12]
     eb4:	ldr	r3, [r3, #4]
     eb8:	cmp	r2, r3
     ebc:	beq	edc <coda_mem_type_set_attributes+0x130>
     ec0:	mov	r3, #412	; 0x19c
     ec4:	ldr	r2, [pc, #48]	; efc <coda_mem_type_set_attributes+0x150>
     ec8:	ldr	r1, [pc, #76]	; f1c <coda_mem_type_set_attributes+0x170>
     ecc:	mvn	r0, #99	; 0x63
     ed0:	bl	0 <coda_set_error>
     ed4:	mvn	r3, #0
     ed8:	b	eec <coda_mem_type_set_attributes+0x140>
     edc:	ldr	r3, [fp, #-8]
     ee0:	ldr	r2, [fp, #-12]
     ee4:	str	r2, [r3, #12]
     ee8:	mov	r3, #0
     eec:	mov	r0, r3
     ef0:	sub	sp, fp, #4
     ef4:	pop	{fp, pc}
     ef8:	.word	0x00000182
     efc:	.word	0x00000000
     f00:	.word	0x000001b0
     f04:	.word	0x00000187
     f08:	.word	0x00000324
     f0c:	.word	0x00000348
     f10:	.word	0x00000bc0
     f14:	.word	0x00000191
     f18:	.word	0x0000036c
     f1c:	.word	0x000003a4

00000f20 <coda_mem_record_new>:
     f20:	push	{fp, lr}
     f24:	add	fp, sp, #4
     f28:	sub	sp, sp, #24
     f2c:	str	r0, [fp, #-16]
     f30:	str	r1, [fp, #-20]	; 0xffffffec
     f34:	ldr	r3, [fp, #-16]
     f38:	cmp	r3, #0
     f3c:	bne	f5c <coda_mem_record_new+0x3c>
     f40:	mov	r3, #428	; 0x1ac
     f44:	ldr	r2, [pc, #500]	; 1140 <coda_mem_record_new+0x220>
     f48:	ldr	r1, [pc, #500]	; 1144 <coda_mem_record_new+0x224>
     f4c:	mvn	r0, #99	; 0x63
     f50:	bl	0 <coda_set_error>
     f54:	mov	r3, #0
     f58:	b	1134 <coda_mem_record_new+0x214>
     f5c:	ldr	r3, [fp, #-16]
     f60:	ldr	r3, [r3, #64]	; 0x40
     f64:	cmp	r3, #0
     f68:	beq	f90 <coda_mem_record_new+0x70>
     f6c:	ldr	r3, [fp, #-16]
     f70:	ldr	r3, [r3, #68]	; 0x44
     f74:	cmp	r3, #0
     f78:	beq	f90 <coda_mem_record_new+0x70>
     f7c:	ldr	r1, [pc, #452]	; 1148 <coda_mem_record_new+0x228>
     f80:	mvn	r0, #99	; 0x63
     f84:	bl	0 <coda_set_error>
     f88:	mov	r3, #0
     f8c:	b	1134 <coda_mem_record_new+0x214>
     f90:	mov	r0, #24
     f94:	bl	0 <malloc>
     f98:	mov	r3, r0
     f9c:	str	r3, [fp, #-12]
     fa0:	ldr	r3, [fp, #-12]
     fa4:	cmp	r3, #0
     fa8:	bne	fd0 <coda_mem_record_new+0xb0>
     fac:	ldr	r3, [pc, #408]	; 114c <coda_mem_record_new+0x22c>
     fb0:	str	r3, [sp]
     fb4:	ldr	r3, [pc, #388]	; 1140 <coda_mem_record_new+0x220>
     fb8:	mov	r2, #24
     fbc:	ldr	r1, [pc, #396]	; 1150 <coda_mem_record_new+0x230>
     fc0:	mvn	r0, #0
     fc4:	bl	0 <coda_set_error>
     fc8:	mov	r3, #0
     fcc:	b	1134 <coda_mem_record_new+0x214>
     fd0:	ldr	r3, [fp, #-12]
     fd4:	mov	r2, #100	; 0x64
     fd8:	str	r2, [r3]
     fdc:	ldr	r3, [fp, #-12]
     fe0:	ldr	r2, [fp, #-16]
     fe4:	str	r2, [r3, #4]
     fe8:	ldr	r3, [fp, #-16]
     fec:	ldr	r3, [r3, #4]
     ff0:	add	r2, r3, #1
     ff4:	ldr	r3, [fp, #-16]
     ff8:	str	r2, [r3, #4]
     ffc:	ldr	r3, [fp, #-12]
    1000:	mov	r2, #0
    1004:	str	r2, [r3, #8]
    1008:	ldr	r3, [fp, #-12]
    100c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1010:	str	r2, [r3, #12]
    1014:	ldr	r3, [fp, #-12]
    1018:	mov	r2, #0
    101c:	str	r2, [r3, #16]
    1020:	ldr	r3, [fp, #-12]
    1024:	mov	r2, #0
    1028:	str	r2, [r3, #20]
    102c:	ldr	r3, [fp, #-12]
    1030:	ldr	r3, [r3, #12]
    1034:	cmp	r3, #0
    1038:	bne	1060 <coda_mem_record_new+0x140>
    103c:	ldr	r0, [fp, #-12]
    1040:	bl	880 <create_attributes_record>
    1044:	mov	r3, r0
    1048:	cmp	r3, #0
    104c:	beq	1060 <coda_mem_record_new+0x140>
    1050:	ldr	r0, [fp, #-12]
    1054:	bl	0 <coda_mem_type_delete>
    1058:	mov	r3, #0
    105c:	b	1134 <coda_mem_record_new+0x214>
    1060:	ldr	r3, [fp, #-16]
    1064:	ldr	r3, [r3, #48]	; 0x30
    1068:	cmp	r3, #0
    106c:	ble	1130 <coda_mem_record_new+0x210>
    1070:	ldr	r3, [fp, #-16]
    1074:	ldr	r3, [r3, #48]	; 0x30
    1078:	lsl	r3, r3, #2
    107c:	mov	r0, r3
    1080:	bl	0 <malloc>
    1084:	mov	r3, r0
    1088:	mov	r2, r3
    108c:	ldr	r3, [fp, #-12]
    1090:	str	r2, [r3, #20]
    1094:	ldr	r3, [fp, #-12]
    1098:	ldr	r3, [r3, #20]
    109c:	cmp	r3, #0
    10a0:	bne	10d8 <coda_mem_record_new+0x1b8>
    10a4:	ldr	r3, [fp, #-16]
    10a8:	ldr	r3, [r3, #48]	; 0x30
    10ac:	lsl	r2, r3, #2
    10b0:	ldr	r3, [pc, #156]	; 1154 <coda_mem_record_new+0x234>
    10b4:	str	r3, [sp]
    10b8:	ldr	r3, [pc, #128]	; 1140 <coda_mem_record_new+0x220>
    10bc:	ldr	r1, [pc, #140]	; 1150 <coda_mem_record_new+0x230>
    10c0:	mvn	r0, #0
    10c4:	bl	0 <coda_set_error>
    10c8:	ldr	r0, [fp, #-12]
    10cc:	bl	0 <coda_mem_type_delete>
    10d0:	mov	r3, #0
    10d4:	b	1134 <coda_mem_record_new+0x214>
    10d8:	mov	r3, #0
    10dc:	str	r3, [fp, #-8]
    10e0:	b	110c <coda_mem_record_new+0x1ec>
    10e4:	ldr	r3, [fp, #-12]
    10e8:	ldr	r2, [r3, #20]
    10ec:	ldr	r3, [fp, #-8]
    10f0:	lsl	r3, r3, #2
    10f4:	add	r3, r2, r3
    10f8:	mov	r2, #0
    10fc:	str	r2, [r3]
    1100:	ldr	r3, [fp, #-8]
    1104:	add	r3, r3, #1
    1108:	str	r3, [fp, #-8]
    110c:	ldr	r3, [fp, #-16]
    1110:	ldr	r2, [r3, #48]	; 0x30
    1114:	ldr	r3, [fp, #-8]
    1118:	cmp	r2, r3
    111c:	bgt	10e4 <coda_mem_record_new+0x1c4>
    1120:	ldr	r3, [fp, #-16]
    1124:	ldr	r2, [r3, #48]	; 0x30
    1128:	ldr	r3, [fp, #-12]
    112c:	str	r2, [r3, #16]
    1130:	ldr	r3, [fp, #-12]
    1134:	mov	r0, r3
    1138:	sub	sp, fp, #4
    113c:	pop	{fp, pc}
    1140:	.word	0x00000000
    1144:	.word	0x000003dc
    1148:	.word	0x00000400
    114c:	.word	0x000001ba
    1150:	.word	0x00000178
    1154:	.word	0x000001d5

00001158 <coda_mem_record_add_field>:
    1158:	push	{fp, lr}
    115c:	add	fp, sp, #4
    1160:	sub	sp, sp, #40	; 0x28
    1164:	str	r0, [fp, #-24]	; 0xffffffe8
    1168:	str	r1, [fp, #-28]	; 0xffffffe4
    116c:	str	r2, [fp, #-32]	; 0xffffffe0
    1170:	str	r3, [fp, #-36]	; 0xffffffdc
    1174:	mvn	r3, #0
    1178:	str	r3, [fp, #-8]
    117c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1180:	cmp	r3, #0
    1184:	bne	11a4 <coda_mem_record_add_field+0x4c>
    1188:	ldr	r3, [pc, #656]	; 1420 <coda_mem_record_add_field+0x2c8>
    118c:	ldr	r2, [pc, #656]	; 1424 <coda_mem_record_add_field+0x2cc>
    1190:	ldr	r1, [pc, #656]	; 1428 <coda_mem_record_add_field+0x2d0>
    1194:	mvn	r0, #99	; 0x63
    1198:	bl	0 <coda_set_error>
    119c:	mvn	r3, #0
    11a0:	b	1414 <coda_mem_record_add_field+0x2bc>
    11a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11a8:	cmp	r3, #0
    11ac:	bne	11cc <coda_mem_record_add_field+0x74>
    11b0:	mov	r3, #496	; 0x1f0
    11b4:	ldr	r2, [pc, #616]	; 1424 <coda_mem_record_add_field+0x2cc>
    11b8:	ldr	r1, [pc, #620]	; 142c <coda_mem_record_add_field+0x2d4>
    11bc:	mvn	r0, #99	; 0x63
    11c0:	bl	0 <coda_set_error>
    11c4:	mvn	r3, #0
    11c8:	b	1414 <coda_mem_record_add_field+0x2bc>
    11cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11d0:	cmp	r3, #0
    11d4:	beq	1310 <coda_mem_record_add_field+0x1b8>
    11d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11dc:	ldr	r0, [r3, #4]
    11e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11e4:	ldr	r3, [r3, #4]
    11e8:	mov	r2, r3
    11ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    11f0:	bl	0 <coda_type_record_create_field>
    11f4:	mov	r3, r0
    11f8:	cmp	r3, #0
    11fc:	beq	1208 <coda_mem_record_add_field+0xb0>
    1200:	mvn	r3, #0
    1204:	b	1414 <coda_mem_record_add_field+0x2bc>
    1208:	ldr	r3, [fp, #-24]	; 0xffffffe8
    120c:	ldr	r3, [r3, #4]
    1210:	ldr	r3, [r3, #48]	; 0x30
    1214:	sub	r3, r3, #1
    1218:	str	r3, [fp, #-8]
    121c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1220:	ldr	r2, [r3, #16]
    1224:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1228:	ldr	r3, [r3, #4]
    122c:	ldr	r3, [r3, #48]	; 0x30
    1230:	cmp	r2, r3
    1234:	bge	13f4 <coda_mem_record_add_field+0x29c>
    1238:	ldr	r3, [fp, #-24]	; 0xffffffe8
    123c:	ldr	r2, [r3, #20]
    1240:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1244:	ldr	r3, [r3, #4]
    1248:	ldr	r3, [r3, #48]	; 0x30
    124c:	lsl	r3, r3, #2
    1250:	mov	r1, r3
    1254:	mov	r0, r2
    1258:	bl	0 <realloc>
    125c:	str	r0, [fp, #-16]
    1260:	ldr	r3, [fp, #-16]
    1264:	cmp	r3, #0
    1268:	bne	129c <coda_mem_record_add_field+0x144>
    126c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1270:	ldr	r3, [r3, #4]
    1274:	ldr	r3, [r3, #48]	; 0x30
    1278:	lsl	r2, r3, #2
    127c:	mov	r3, #516	; 0x204
    1280:	str	r3, [sp]
    1284:	ldr	r3, [pc, #408]	; 1424 <coda_mem_record_add_field+0x2cc>
    1288:	ldr	r1, [pc, #416]	; 1430 <coda_mem_record_add_field+0x2d8>
    128c:	mvn	r0, #0
    1290:	bl	0 <coda_set_error>
    1294:	mvn	r3, #0
    1298:	b	1414 <coda_mem_record_add_field+0x2bc>
    129c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12a0:	ldr	r2, [fp, #-16]
    12a4:	str	r2, [r3, #20]
    12a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12ac:	ldr	r3, [r3, #16]
    12b0:	str	r3, [fp, #-12]
    12b4:	b	12e0 <coda_mem_record_add_field+0x188>
    12b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12bc:	ldr	r2, [r3, #20]
    12c0:	ldr	r3, [fp, #-12]
    12c4:	lsl	r3, r3, #2
    12c8:	add	r3, r2, r3
    12cc:	mov	r2, #0
    12d0:	str	r2, [r3]
    12d4:	ldr	r3, [fp, #-12]
    12d8:	add	r3, r3, #1
    12dc:	str	r3, [fp, #-12]
    12e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12e4:	ldr	r3, [r3, #4]
    12e8:	ldr	r2, [r3, #48]	; 0x30
    12ec:	ldr	r3, [fp, #-12]
    12f0:	cmp	r2, r3
    12f4:	bgt	12b8 <coda_mem_record_add_field+0x160>
    12f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12fc:	ldr	r3, [r3, #4]
    1300:	ldr	r2, [r3, #48]	; 0x30
    1304:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1308:	str	r2, [r3, #16]
    130c:	b	13f4 <coda_mem_record_add_field+0x29c>
    1310:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1314:	ldr	r3, [r3, #4]
    1318:	ldr	r3, [r3, #44]	; 0x2c
    131c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1320:	mov	r0, r3
    1324:	bl	0 <coda_hashtable_get_index_from_name>
    1328:	str	r0, [fp, #-8]
    132c:	ldr	r3, [fp, #-8]
    1330:	cmp	r3, #0
    1334:	bge	135c <coda_mem_record_add_field+0x204>
    1338:	ldr	r3, [pc, #244]	; 1434 <coda_mem_record_add_field+0x2dc>
    133c:	str	r3, [sp]
    1340:	ldr	r3, [pc, #220]	; 1424 <coda_mem_record_add_field+0x2cc>
    1344:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1348:	ldr	r1, [pc, #232]	; 1438 <coda_mem_record_add_field+0x2e0>
    134c:	mvn	r0, #101	; 0x65
    1350:	bl	0 <coda_set_error>
    1354:	mvn	r3, #0
    1358:	b	1414 <coda_mem_record_add_field+0x2bc>
    135c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1360:	ldr	r2, [r3, #20]
    1364:	ldr	r3, [fp, #-8]
    1368:	lsl	r3, r3, #2
    136c:	add	r3, r2, r3
    1370:	ldr	r3, [r3]
    1374:	cmp	r3, #0
    1378:	beq	13a0 <coda_mem_record_add_field+0x248>
    137c:	mov	r3, #540	; 0x21c
    1380:	str	r3, [sp]
    1384:	ldr	r3, [pc, #152]	; 1424 <coda_mem_record_add_field+0x2cc>
    1388:	ldr	r2, [fp, #-28]	; 0xffffffe4
    138c:	ldr	r1, [pc, #168]	; 143c <coda_mem_record_add_field+0x2e4>
    1390:	mvn	r0, #99	; 0x63
    1394:	bl	0 <coda_set_error>
    1398:	mvn	r3, #0
    139c:	b	1414 <coda_mem_record_add_field+0x2bc>
    13a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13a4:	ldr	r3, [r3, #4]
    13a8:	ldr	r2, [r3, #52]	; 0x34
    13ac:	ldr	r3, [fp, #-8]
    13b0:	lsl	r3, r3, #2
    13b4:	add	r3, r2, r3
    13b8:	ldr	r3, [r3]
    13bc:	ldr	r2, [r3, #8]
    13c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    13c4:	ldr	r3, [r3, #4]
    13c8:	cmp	r2, r3
    13cc:	beq	13f4 <coda_mem_record_add_field+0x29c>
    13d0:	ldr	r3, [pc, #104]	; 1440 <coda_mem_record_add_field+0x2e8>
    13d4:	str	r3, [sp]
    13d8:	ldr	r3, [pc, #68]	; 1424 <coda_mem_record_add_field+0x2cc>
    13dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    13e0:	ldr	r1, [pc, #92]	; 1444 <coda_mem_record_add_field+0x2ec>
    13e4:	mvn	r0, #99	; 0x63
    13e8:	bl	0 <coda_set_error>
    13ec:	mvn	r3, #0
    13f0:	b	1414 <coda_mem_record_add_field+0x2bc>
    13f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13f8:	ldr	r2, [r3, #20]
    13fc:	ldr	r3, [fp, #-8]
    1400:	lsl	r3, r3, #2
    1404:	add	r3, r2, r3
    1408:	ldr	r2, [fp, #-32]	; 0xffffffe0
    140c:	str	r2, [r3]
    1410:	mov	r3, #0
    1414:	mov	r0, r3
    1418:	sub	sp, fp, #4
    141c:	pop	{fp, pc}
    1420:	.word	0x000001eb
    1424:	.word	0x00000000
    1428:	.word	0x000001b0
    142c:	.word	0x0000044c
    1430:	.word	0x00000178
    1434:	.word	0x00000216
    1438:	.word	0x00000470
    143c:	.word	0x000004a4
    1440:	.word	0x00000222
    1444:	.word	0x000004c8

00001448 <coda_mem_record_validate>:
    1448:	push	{fp, lr}
    144c:	add	fp, sp, #4
    1450:	sub	sp, sp, #16
    1454:	str	r0, [fp, #-16]
    1458:	ldr	r3, [fp, #-16]
    145c:	cmp	r3, #0
    1460:	bne	1480 <coda_mem_record_validate+0x38>
    1464:	ldr	r3, [pc, #256]	; 156c <coda_mem_record_validate+0x124>
    1468:	ldr	r2, [pc, #256]	; 1570 <coda_mem_record_validate+0x128>
    146c:	ldr	r1, [pc, #256]	; 1574 <coda_mem_record_validate+0x12c>
    1470:	mvn	r0, #99	; 0x63
    1474:	bl	0 <coda_set_error>
    1478:	mvn	r3, #0
    147c:	b	1560 <coda_mem_record_validate+0x118>
    1480:	ldr	r3, [fp, #-16]
    1484:	ldr	r2, [r3, #16]
    1488:	ldr	r3, [fp, #-16]
    148c:	ldr	r3, [r3, #4]
    1490:	ldr	r3, [r3, #48]	; 0x30
    1494:	cmp	r2, r3
    1498:	beq	14b0 <coda_mem_record_validate+0x68>
    149c:	ldr	r3, [pc, #212]	; 1578 <coda_mem_record_validate+0x130>
    14a0:	mov	r2, #564	; 0x234
    14a4:	ldr	r1, [pc, #196]	; 1570 <coda_mem_record_validate+0x128>
    14a8:	ldr	r0, [pc, #204]	; 157c <coda_mem_record_validate+0x134>
    14ac:	bl	0 <__assert_fail>
    14b0:	mov	r3, #0
    14b4:	str	r3, [fp, #-8]
    14b8:	b	1548 <coda_mem_record_validate+0x100>
    14bc:	ldr	r3, [fp, #-16]
    14c0:	ldr	r2, [r3, #20]
    14c4:	ldr	r3, [fp, #-8]
    14c8:	lsl	r3, r3, #2
    14cc:	add	r3, r2, r3
    14d0:	ldr	r3, [r3]
    14d4:	cmp	r3, #0
    14d8:	bne	153c <coda_mem_record_validate+0xf4>
    14dc:	ldr	r3, [fp, #-16]
    14e0:	ldr	r3, [r3, #4]
    14e4:	ldr	r2, [r3, #52]	; 0x34
    14e8:	ldr	r3, [fp, #-8]
    14ec:	lsl	r3, r3, #2
    14f0:	add	r3, r2, r3
    14f4:	ldr	r3, [r3]
    14f8:	ldrb	r3, [r3, #16]
    14fc:	cmp	r3, #0
    1500:	bne	153c <coda_mem_record_validate+0xf4>
    1504:	ldr	r3, [fp, #-16]
    1508:	ldr	r3, [r3, #4]
    150c:	ldr	r2, [r3, #52]	; 0x34
    1510:	ldr	r3, [fp, #-8]
    1514:	lsl	r3, r3, #2
    1518:	add	r3, r2, r3
    151c:	ldr	r3, [r3]
    1520:	ldr	r3, [r3]
    1524:	mov	r2, r3
    1528:	ldr	r1, [pc, #80]	; 1580 <coda_mem_record_validate+0x138>
    152c:	ldr	r0, [pc, #80]	; 1584 <coda_mem_record_validate+0x13c>
    1530:	bl	0 <coda_set_error>
    1534:	mvn	r3, #0
    1538:	b	1560 <coda_mem_record_validate+0x118>
    153c:	ldr	r3, [fp, #-8]
    1540:	add	r3, r3, #1
    1544:	str	r3, [fp, #-8]
    1548:	ldr	r3, [fp, #-16]
    154c:	ldr	r2, [r3, #16]
    1550:	ldr	r3, [fp, #-8]
    1554:	cmp	r2, r3
    1558:	bgt	14bc <coda_mem_record_validate+0x74>
    155c:	mov	r3, #0
    1560:	mov	r0, r3
    1564:	sub	sp, fp, #4
    1568:	pop	{fp, pc}
    156c:	.word	0x00000231
    1570:	.word	0x00000000
    1574:	.word	0x000001b0
    1578:	.word	0x00000be0
    157c:	.word	0x00000500
    1580:	.word	0x00000534
    1584:	.word	0xfffffe70

00001588 <coda_mem_array_new>:
    1588:	push	{fp, lr}
    158c:	add	fp, sp, #4
    1590:	sub	sp, sp, #24
    1594:	str	r0, [fp, #-16]
    1598:	str	r1, [fp, #-20]	; 0xffffffec
    159c:	ldr	r3, [fp, #-16]
    15a0:	cmp	r3, #0
    15a4:	bne	15c4 <coda_mem_array_new+0x3c>
    15a8:	ldr	r3, [pc, #464]	; 1780 <coda_mem_array_new+0x1f8>
    15ac:	ldr	r2, [pc, #464]	; 1784 <coda_mem_array_new+0x1fc>
    15b0:	ldr	r1, [pc, #464]	; 1788 <coda_mem_array_new+0x200>
    15b4:	mvn	r0, #99	; 0x63
    15b8:	bl	0 <coda_set_error>
    15bc:	mov	r3, #0
    15c0:	b	1774 <coda_mem_array_new+0x1ec>
    15c4:	mov	r0, #24
    15c8:	bl	0 <malloc>
    15cc:	mov	r3, r0
    15d0:	str	r3, [fp, #-12]
    15d4:	ldr	r3, [fp, #-12]
    15d8:	cmp	r3, #0
    15dc:	bne	1604 <coda_mem_array_new+0x7c>
    15e0:	ldr	r3, [pc, #420]	; 178c <coda_mem_array_new+0x204>
    15e4:	str	r3, [sp]
    15e8:	ldr	r3, [pc, #404]	; 1784 <coda_mem_array_new+0x1fc>
    15ec:	mov	r2, #24
    15f0:	ldr	r1, [pc, #408]	; 1790 <coda_mem_array_new+0x208>
    15f4:	mvn	r0, #0
    15f8:	bl	0 <coda_set_error>
    15fc:	mov	r3, #0
    1600:	b	1774 <coda_mem_array_new+0x1ec>
    1604:	ldr	r3, [fp, #-12]
    1608:	mov	r2, #100	; 0x64
    160c:	str	r2, [r3]
    1610:	ldr	r3, [fp, #-12]
    1614:	ldr	r2, [fp, #-16]
    1618:	str	r2, [r3, #4]
    161c:	ldr	r3, [fp, #-16]
    1620:	ldr	r3, [r3, #4]
    1624:	add	r2, r3, #1
    1628:	ldr	r3, [fp, #-16]
    162c:	str	r2, [r3, #4]
    1630:	ldr	r3, [fp, #-12]
    1634:	mov	r2, #1
    1638:	str	r2, [r3, #8]
    163c:	ldr	r3, [fp, #-12]
    1640:	ldr	r2, [fp, #-20]	; 0xffffffec
    1644:	str	r2, [r3, #12]
    1648:	ldr	r3, [fp, #-12]
    164c:	mov	r2, #0
    1650:	str	r2, [r3, #16]
    1654:	ldr	r3, [fp, #-12]
    1658:	mov	r2, #0
    165c:	str	r2, [r3, #20]
    1660:	ldr	r3, [fp, #-20]	; 0xffffffec
    1664:	cmp	r3, #0
    1668:	bne	1690 <coda_mem_array_new+0x108>
    166c:	ldr	r0, [fp, #-12]
    1670:	bl	880 <create_attributes_record>
    1674:	mov	r3, r0
    1678:	cmp	r3, #0
    167c:	beq	1690 <coda_mem_array_new+0x108>
    1680:	ldr	r0, [fp, #-12]
    1684:	bl	0 <coda_mem_type_delete>
    1688:	mov	r3, #0
    168c:	b	1774 <coda_mem_array_new+0x1ec>
    1690:	ldr	r3, [fp, #-12]
    1694:	ldr	r3, [r3, #4]
    1698:	ldr	r3, [r3, #44]	; 0x2c
    169c:	cmp	r3, #0
    16a0:	ble	1770 <coda_mem_array_new+0x1e8>
    16a4:	ldr	r3, [fp, #-12]
    16a8:	ldr	r3, [r3, #4]
    16ac:	ldr	r3, [r3, #44]	; 0x2c
    16b0:	lsl	r3, r3, #2
    16b4:	mov	r0, r3
    16b8:	bl	0 <malloc>
    16bc:	mov	r3, r0
    16c0:	mov	r2, r3
    16c4:	ldr	r3, [fp, #-12]
    16c8:	str	r2, [r3, #20]
    16cc:	ldr	r3, [fp, #-12]
    16d0:	ldr	r3, [r3, #20]
    16d4:	cmp	r3, #0
    16d8:	bne	1714 <coda_mem_array_new+0x18c>
    16dc:	ldr	r3, [fp, #-12]
    16e0:	ldr	r3, [r3, #4]
    16e4:	ldr	r3, [r3, #44]	; 0x2c
    16e8:	lsl	r2, r3, #2
    16ec:	ldr	r3, [pc, #160]	; 1794 <coda_mem_array_new+0x20c>
    16f0:	str	r3, [sp]
    16f4:	ldr	r3, [pc, #136]	; 1784 <coda_mem_array_new+0x1fc>
    16f8:	ldr	r1, [pc, #144]	; 1790 <coda_mem_array_new+0x208>
    16fc:	mvn	r0, #0
    1700:	bl	0 <coda_set_error>
    1704:	ldr	r0, [fp, #-12]
    1708:	bl	0 <coda_mem_type_delete>
    170c:	mov	r3, #0
    1710:	b	1774 <coda_mem_array_new+0x1ec>
    1714:	ldr	r3, [fp, #-12]
    1718:	ldr	r3, [r3, #4]
    171c:	ldr	r2, [r3, #44]	; 0x2c
    1720:	ldr	r3, [fp, #-12]
    1724:	str	r2, [r3, #16]
    1728:	mov	r3, #0
    172c:	str	r3, [fp, #-8]
    1730:	b	175c <coda_mem_array_new+0x1d4>
    1734:	ldr	r3, [fp, #-12]
    1738:	ldr	r2, [r3, #20]
    173c:	ldr	r3, [fp, #-8]
    1740:	lsl	r3, r3, #2
    1744:	add	r3, r2, r3
    1748:	mov	r2, #0
    174c:	str	r2, [r3]
    1750:	ldr	r3, [fp, #-8]
    1754:	add	r3, r3, #1
    1758:	str	r3, [fp, #-8]
    175c:	ldr	r3, [fp, #-12]
    1760:	ldr	r2, [r3, #16]
    1764:	ldr	r3, [fp, #-8]
    1768:	cmp	r2, r3
    176c:	bgt	1734 <coda_mem_array_new+0x1ac>
    1770:	ldr	r3, [fp, #-12]
    1774:	mov	r0, r3
    1778:	sub	sp, fp, #4
    177c:	pop	{fp, pc}
    1780:	.word	0x00000247
    1784:	.word	0x00000000
    1788:	.word	0x000003dc
    178c:	.word	0x0000024e
    1790:	.word	0x00000178
    1794:	.word	0x00000269

00001798 <coda_mem_array_set_element>:
    1798:	push	{fp, lr}
    179c:	add	fp, sp, #4
    17a0:	sub	sp, sp, #24
    17a4:	str	r0, [fp, #-8]
    17a8:	str	r1, [fp, #-12]
    17ac:	str	r2, [fp, #-16]
    17b0:	ldr	r3, [fp, #-8]
    17b4:	cmp	r3, #0
    17b8:	bne	17d8 <coda_mem_array_set_element+0x40>
    17bc:	ldr	r3, [pc, #324]	; 1908 <coda_mem_array_set_element+0x170>
    17c0:	ldr	r2, [pc, #324]	; 190c <coda_mem_array_set_element+0x174>
    17c4:	ldr	r1, [pc, #324]	; 1910 <coda_mem_array_set_element+0x178>
    17c8:	mvn	r0, #99	; 0x63
    17cc:	bl	0 <coda_set_error>
    17d0:	mvn	r3, #0
    17d4:	b	18fc <coda_mem_array_set_element+0x164>
    17d8:	ldr	r3, [fp, #-12]
    17dc:	cmp	r3, #0
    17e0:	blt	17f8 <coda_mem_array_set_element+0x60>
    17e4:	ldr	r3, [fp, #-8]
    17e8:	ldr	r2, [r3, #16]
    17ec:	ldr	r3, [fp, #-12]
    17f0:	cmp	r2, r3
    17f4:	bgt	182c <coda_mem_array_set_element+0x94>
    17f8:	ldr	r3, [fp, #-8]
    17fc:	ldr	r2, [r3, #16]
    1800:	ldr	r3, [pc, #268]	; 1914 <coda_mem_array_set_element+0x17c>
    1804:	str	r3, [sp, #4]
    1808:	ldr	r3, [pc, #252]	; 190c <coda_mem_array_set_element+0x174>
    180c:	str	r3, [sp]
    1810:	mov	r3, r2
    1814:	ldr	r2, [fp, #-12]
    1818:	ldr	r1, [pc, #248]	; 1918 <coda_mem_array_set_element+0x180>
    181c:	mvn	r0, #100	; 0x64
    1820:	bl	0 <coda_set_error>
    1824:	mvn	r3, #0
    1828:	b	18fc <coda_mem_array_set_element+0x164>
    182c:	ldr	r3, [fp, #-16]
    1830:	cmp	r3, #0
    1834:	bne	1854 <coda_mem_array_set_element+0xbc>
    1838:	ldr	r3, [pc, #220]	; 191c <coda_mem_array_set_element+0x184>
    183c:	ldr	r2, [pc, #200]	; 190c <coda_mem_array_set_element+0x174>
    1840:	ldr	r1, [pc, #216]	; 1920 <coda_mem_array_set_element+0x188>
    1844:	mvn	r0, #99	; 0x63
    1848:	bl	0 <coda_set_error>
    184c:	mvn	r3, #0
    1850:	b	18fc <coda_mem_array_set_element+0x164>
    1854:	ldr	r3, [fp, #-8]
    1858:	ldr	r2, [r3, #20]
    185c:	ldr	r3, [fp, #-12]
    1860:	lsl	r3, r3, #2
    1864:	add	r3, r2, r3
    1868:	ldr	r3, [r3]
    186c:	cmp	r3, #0
    1870:	beq	1898 <coda_mem_array_set_element+0x100>
    1874:	mov	r3, #652	; 0x28c
    1878:	str	r3, [sp]
    187c:	ldr	r3, [pc, #136]	; 190c <coda_mem_array_set_element+0x174>
    1880:	ldr	r2, [fp, #-12]
    1884:	ldr	r1, [pc, #152]	; 1924 <coda_mem_array_set_element+0x18c>
    1888:	mvn	r0, #99	; 0x63
    188c:	bl	0 <coda_set_error>
    1890:	mvn	r3, #0
    1894:	b	18fc <coda_mem_array_set_element+0x164>
    1898:	ldr	r3, [fp, #-8]
    189c:	ldr	r3, [r3, #4]
    18a0:	ldr	r2, [r3, #40]	; 0x28
    18a4:	ldr	r3, [fp, #-16]
    18a8:	ldr	r3, [r3, #4]
    18ac:	cmp	r2, r3
    18b0:	beq	18dc <coda_mem_array_set_element+0x144>
    18b4:	ldr	r3, [fp, #-8]
    18b8:	ldr	r2, [r3, #16]
    18bc:	ldr	r3, [pc, #100]	; 1928 <coda_mem_array_set_element+0x190>
    18c0:	str	r3, [sp]
    18c4:	ldr	r3, [pc, #64]	; 190c <coda_mem_array_set_element+0x174>
    18c8:	ldr	r1, [pc, #92]	; 192c <coda_mem_array_set_element+0x194>
    18cc:	ldr	r0, [pc, #92]	; 1930 <coda_mem_array_set_element+0x198>
    18d0:	bl	0 <coda_set_error>
    18d4:	mvn	r3, #0
    18d8:	b	18fc <coda_mem_array_set_element+0x164>
    18dc:	ldr	r3, [fp, #-8]
    18e0:	ldr	r2, [r3, #20]
    18e4:	ldr	r3, [fp, #-12]
    18e8:	lsl	r3, r3, #2
    18ec:	add	r3, r2, r3
    18f0:	ldr	r2, [fp, #-16]
    18f4:	str	r2, [r3]
    18f8:	mov	r3, #0
    18fc:	mov	r0, r3
    1900:	sub	sp, fp, #4
    1904:	pop	{fp, pc}
    1908:	.word	0x0000027b
    190c:	.word	0x00000000
    1910:	.word	0x000001b0
    1914:	.word	0x00000281
    1918:	.word	0x00000554
    191c:	.word	0x00000286
    1920:	.word	0x0000058c
    1924:	.word	0x000005b0
    1928:	.word	0x00000292
    192c:	.word	0x000005dc
    1930:	.word	0xfffffe70

00001934 <coda_mem_array_add_element>:
    1934:	push	{fp, lr}
    1938:	add	fp, sp, #4
    193c:	sub	sp, sp, #24
    1940:	str	r0, [fp, #-16]
    1944:	str	r1, [fp, #-20]	; 0xffffffec
    1948:	ldr	r3, [fp, #-16]
    194c:	cmp	r3, #0
    1950:	bne	1970 <coda_mem_array_add_element+0x3c>
    1954:	ldr	r3, [pc, #532]	; 1b70 <coda_mem_array_add_element+0x23c>
    1958:	ldr	r2, [pc, #532]	; 1b74 <coda_mem_array_add_element+0x240>
    195c:	ldr	r1, [pc, #532]	; 1b78 <coda_mem_array_add_element+0x244>
    1960:	mvn	r0, #99	; 0x63
    1964:	bl	0 <coda_set_error>
    1968:	mvn	r3, #0
    196c:	b	1b64 <coda_mem_array_add_element+0x230>
    1970:	ldr	r3, [fp, #-20]	; 0xffffffec
    1974:	cmp	r3, #0
    1978:	bne	1998 <coda_mem_array_add_element+0x64>
    197c:	ldr	r3, [pc, #504]	; 1b7c <coda_mem_array_add_element+0x248>
    1980:	ldr	r2, [pc, #492]	; 1b74 <coda_mem_array_add_element+0x240>
    1984:	ldr	r1, [pc, #500]	; 1b80 <coda_mem_array_add_element+0x24c>
    1988:	mvn	r0, #99	; 0x63
    198c:	bl	0 <coda_set_error>
    1990:	mvn	r3, #0
    1994:	b	1b64 <coda_mem_array_add_element+0x230>
    1998:	ldr	r3, [fp, #-16]
    199c:	ldr	r3, [r3, #4]
    19a0:	ldr	r2, [r3, #40]	; 0x28
    19a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    19a8:	ldr	r3, [r3, #4]
    19ac:	cmp	r2, r3
    19b0:	beq	19dc <coda_mem_array_add_element+0xa8>
    19b4:	ldr	r3, [fp, #-16]
    19b8:	ldr	r2, [r3, #16]
    19bc:	ldr	r3, [pc, #448]	; 1b84 <coda_mem_array_add_element+0x250>
    19c0:	str	r3, [sp]
    19c4:	ldr	r3, [pc, #424]	; 1b74 <coda_mem_array_add_element+0x240>
    19c8:	ldr	r1, [pc, #440]	; 1b88 <coda_mem_array_add_element+0x254>
    19cc:	ldr	r0, [pc, #440]	; 1b8c <coda_mem_array_add_element+0x258>
    19d0:	bl	0 <coda_set_error>
    19d4:	mvn	r3, #0
    19d8:	b	1b64 <coda_mem_array_add_element+0x230>
    19dc:	ldr	r3, [fp, #-16]
    19e0:	ldr	r3, [r3, #4]
    19e4:	ldr	r3, [r3, #44]	; 0x2c
    19e8:	cmp	r3, #0
    19ec:	ble	1aa4 <coda_mem_array_add_element+0x170>
    19f0:	mov	r3, #0
    19f4:	str	r3, [fp, #-8]
    19f8:	b	1a08 <coda_mem_array_add_element+0xd4>
    19fc:	ldr	r3, [fp, #-8]
    1a00:	add	r3, r3, #1
    1a04:	str	r3, [fp, #-8]
    1a08:	ldr	r3, [fp, #-16]
    1a0c:	ldr	r2, [r3, #16]
    1a10:	ldr	r3, [fp, #-8]
    1a14:	cmp	r2, r3
    1a18:	ble	1a3c <coda_mem_array_add_element+0x108>
    1a1c:	ldr	r3, [fp, #-16]
    1a20:	ldr	r2, [r3, #20]
    1a24:	ldr	r3, [fp, #-8]
    1a28:	lsl	r3, r3, #2
    1a2c:	add	r3, r2, r3
    1a30:	ldr	r3, [r3]
    1a34:	cmp	r3, #0
    1a38:	bne	19fc <coda_mem_array_add_element+0xc8>
    1a3c:	ldr	r3, [fp, #-16]
    1a40:	ldr	r2, [r3, #16]
    1a44:	ldr	r3, [fp, #-8]
    1a48:	cmp	r2, r3
    1a4c:	bgt	1a84 <coda_mem_array_add_element+0x150>
    1a50:	ldr	r3, [fp, #-16]
    1a54:	ldr	r2, [r3, #16]
    1a58:	mov	r3, #696	; 0x2b8
    1a5c:	str	r3, [sp, #4]
    1a60:	ldr	r3, [pc, #268]	; 1b74 <coda_mem_array_add_element+0x240>
    1a64:	str	r3, [sp]
    1a68:	mov	r3, r2
    1a6c:	ldr	r2, [fp, #-8]
    1a70:	ldr	r1, [pc, #280]	; 1b90 <coda_mem_array_add_element+0x25c>
    1a74:	mvn	r0, #100	; 0x64
    1a78:	bl	0 <coda_set_error>
    1a7c:	mvn	r3, #0
    1a80:	b	1b64 <coda_mem_array_add_element+0x230>
    1a84:	ldr	r3, [fp, #-16]
    1a88:	ldr	r2, [r3, #20]
    1a8c:	ldr	r3, [fp, #-8]
    1a90:	lsl	r3, r3, #2
    1a94:	add	r3, r2, r3
    1a98:	ldr	r2, [fp, #-20]	; 0xffffffec
    1a9c:	str	r2, [r3]
    1aa0:	b	1b60 <coda_mem_array_add_element+0x22c>
    1aa4:	ldr	r3, [fp, #-16]
    1aa8:	ldr	r3, [r3, #16]
    1aac:	and	r3, r3, #15
    1ab0:	cmp	r3, #0
    1ab4:	bne	1b28 <coda_mem_array_add_element+0x1f4>
    1ab8:	ldr	r3, [fp, #-16]
    1abc:	ldr	r2, [r3, #20]
    1ac0:	ldr	r3, [fp, #-16]
    1ac4:	ldr	r3, [r3, #16]
    1ac8:	add	r3, r3, #16
    1acc:	lsl	r3, r3, #2
    1ad0:	mov	r1, r3
    1ad4:	mov	r0, r2
    1ad8:	bl	0 <realloc>
    1adc:	str	r0, [fp, #-12]
    1ae0:	ldr	r3, [fp, #-12]
    1ae4:	cmp	r3, #0
    1ae8:	bne	1b1c <coda_mem_array_add_element+0x1e8>
    1aec:	ldr	r3, [fp, #-16]
    1af0:	ldr	r3, [r3, #16]
    1af4:	add	r3, r3, #16
    1af8:	lsl	r2, r3, #2
    1afc:	ldr	r3, [pc, #144]	; 1b94 <coda_mem_array_add_element+0x260>
    1b00:	str	r3, [sp]
    1b04:	ldr	r3, [pc, #104]	; 1b74 <coda_mem_array_add_element+0x240>
    1b08:	ldr	r1, [pc, #136]	; 1b98 <coda_mem_array_add_element+0x264>
    1b0c:	mvn	r0, #0
    1b10:	bl	0 <coda_set_error>
    1b14:	mvn	r3, #0
    1b18:	b	1b64 <coda_mem_array_add_element+0x230>
    1b1c:	ldr	r3, [fp, #-16]
    1b20:	ldr	r2, [fp, #-12]
    1b24:	str	r2, [r3, #20]
    1b28:	ldr	r3, [fp, #-16]
    1b2c:	ldr	r3, [r3, #16]
    1b30:	add	r2, r3, #1
    1b34:	ldr	r3, [fp, #-16]
    1b38:	str	r2, [r3, #16]
    1b3c:	ldr	r3, [fp, #-16]
    1b40:	ldr	r2, [r3, #20]
    1b44:	ldr	r3, [fp, #-16]
    1b48:	ldr	r3, [r3, #16]
    1b4c:	sub	r3, r3, #-1073741823	; 0xc0000001
    1b50:	lsl	r3, r3, #2
    1b54:	add	r3, r2, r3
    1b58:	ldr	r2, [fp, #-20]	; 0xffffffec
    1b5c:	str	r2, [r3]
    1b60:	mov	r3, #0
    1b64:	mov	r0, r3
    1b68:	sub	sp, fp, #4
    1b6c:	pop	{fp, pc}
    1b70:	.word	0x0000029e
    1b74:	.word	0x00000000
    1b78:	.word	0x000001b0
    1b7c:	.word	0x000002a3
    1b80:	.word	0x0000058c
    1b84:	.word	0x000002a9
    1b88:	.word	0x0000061c
    1b8c:	.word	0xfffffe70
    1b90:	.word	0x00000554
    1b94:	.word	0x000002c7
    1b98:	.word	0x00000178

00001b9c <coda_mem_array_validate>:
    1b9c:	push	{fp, lr}
    1ba0:	add	fp, sp, #4
    1ba4:	sub	sp, sp, #16
    1ba8:	str	r0, [fp, #-16]
    1bac:	ldr	r3, [fp, #-16]
    1bb0:	cmp	r3, #0
    1bb4:	bne	1bd4 <coda_mem_array_validate+0x38>
    1bb8:	ldr	r3, [pc, #216]	; 1c98 <coda_mem_array_validate+0xfc>
    1bbc:	ldr	r2, [pc, #216]	; 1c9c <coda_mem_array_validate+0x100>
    1bc0:	ldr	r1, [pc, #216]	; 1ca0 <coda_mem_array_validate+0x104>
    1bc4:	mvn	r0, #99	; 0x63
    1bc8:	bl	0 <coda_set_error>
    1bcc:	mvn	r3, #0
    1bd0:	b	1c8c <coda_mem_array_validate+0xf0>
    1bd4:	ldr	r3, [fp, #-16]
    1bd8:	ldr	r3, [r3, #4]
    1bdc:	ldr	r3, [r3, #44]	; 0x2c
    1be0:	cmp	r3, #0
    1be4:	blt	1c24 <coda_mem_array_validate+0x88>
    1be8:	ldr	r3, [fp, #-16]
    1bec:	ldr	r2, [r3, #16]
    1bf0:	ldr	r3, [fp, #-16]
    1bf4:	ldr	r3, [r3, #4]
    1bf8:	ldr	r3, [r3, #44]	; 0x2c
    1bfc:	cmp	r2, r3
    1c00:	beq	1c24 <coda_mem_array_validate+0x88>
    1c04:	ldr	r3, [fp, #-16]
    1c08:	ldr	r2, [r3, #16]
    1c0c:	ldr	r3, [fp, #-16]
    1c10:	ldr	r3, [r3, #4]
    1c14:	ldr	r3, [r3, #44]	; 0x2c
    1c18:	ldr	r1, [pc, #132]	; 1ca4 <coda_mem_array_validate+0x108>
    1c1c:	ldr	r0, [pc, #132]	; 1ca8 <coda_mem_array_validate+0x10c>
    1c20:	bl	0 <coda_set_error>
    1c24:	mov	r3, #0
    1c28:	str	r3, [fp, #-8]
    1c2c:	b	1c74 <coda_mem_array_validate+0xd8>
    1c30:	ldr	r3, [fp, #-16]
    1c34:	ldr	r2, [r3, #20]
    1c38:	ldr	r3, [fp, #-8]
    1c3c:	lsl	r3, r3, #2
    1c40:	add	r3, r2, r3
    1c44:	ldr	r3, [r3]
    1c48:	cmp	r3, #0
    1c4c:	bne	1c68 <coda_mem_array_validate+0xcc>
    1c50:	ldr	r2, [fp, #-8]
    1c54:	ldr	r1, [pc, #80]	; 1cac <coda_mem_array_validate+0x110>
    1c58:	ldr	r0, [pc, #72]	; 1ca8 <coda_mem_array_validate+0x10c>
    1c5c:	bl	0 <coda_set_error>
    1c60:	mvn	r3, #0
    1c64:	b	1c8c <coda_mem_array_validate+0xf0>
    1c68:	ldr	r3, [fp, #-8]
    1c6c:	add	r3, r3, #1
    1c70:	str	r3, [fp, #-8]
    1c74:	ldr	r3, [fp, #-16]
    1c78:	ldr	r2, [r3, #16]
    1c7c:	ldr	r3, [fp, #-8]
    1c80:	cmp	r2, r3
    1c84:	bgt	1c30 <coda_mem_array_validate+0x94>
    1c88:	mov	r3, #0
    1c8c:	mov	r0, r3
    1c90:	sub	sp, fp, #4
    1c94:	pop	{fp, pc}
    1c98:	.word	0x000002d9
    1c9c:	.word	0x00000000
    1ca0:	.word	0x000001b0
    1ca4:	.word	0x0000065c
    1ca8:	.word	0xfffffe70
    1cac:	.word	0x000006bc

00001cb0 <coda_mem_data_new>:
    1cb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1cb4:	add	fp, sp, #28
    1cb8:	sub	sp, sp, #48	; 0x30
    1cbc:	str	r0, [fp, #-56]	; 0xffffffc8
    1cc0:	str	r1, [fp, #-60]	; 0xffffffc4
    1cc4:	str	r2, [fp, #-64]	; 0xffffffc0
    1cc8:	str	r3, [fp, #-68]	; 0xffffffbc
    1ccc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1cd0:	cmp	r3, #0
    1cd4:	bne	1cf4 <coda_mem_data_new+0x44>
    1cd8:	ldr	r3, [pc, #1040]	; 20f0 <coda_mem_data_new+0x440>
    1cdc:	ldr	r2, [pc, #1040]	; 20f4 <coda_mem_data_new+0x444>
    1ce0:	ldr	r1, [pc, #1040]	; 20f8 <coda_mem_data_new+0x448>
    1ce4:	mvn	r0, #99	; 0x63
    1ce8:	bl	0 <coda_set_error>
    1cec:	mov	r3, #0
    1cf0:	b	20e4 <coda_mem_data_new+0x434>
    1cf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1cf8:	cmp	r3, #0
    1cfc:	bge	1d14 <coda_mem_data_new+0x64>
    1d00:	ldr	r3, [pc, #1012]	; 20fc <coda_mem_data_new+0x44c>
    1d04:	ldr	r2, [pc, #1012]	; 2100 <coda_mem_data_new+0x450>
    1d08:	ldr	r1, [pc, #996]	; 20f4 <coda_mem_data_new+0x444>
    1d0c:	ldr	r0, [pc, #1008]	; 2104 <coda_mem_data_new+0x454>
    1d10:	bl	0 <__assert_fail>
    1d14:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1d18:	cmp	r3, #0
    1d1c:	ble	1d48 <coda_mem_data_new+0x98>
    1d20:	ldr	r3, [fp, #4]
    1d24:	cmp	r3, #0
    1d28:	bne	1d48 <coda_mem_data_new+0x98>
    1d2c:	mov	r3, #764	; 0x2fc
    1d30:	ldr	r2, [pc, #956]	; 20f4 <coda_mem_data_new+0x444>
    1d34:	ldr	r1, [pc, #972]	; 2108 <coda_mem_data_new+0x458>
    1d38:	mvn	r0, #99	; 0x63
    1d3c:	bl	0 <coda_set_error>
    1d40:	mov	r3, #0
    1d44:	b	20e4 <coda_mem_data_new+0x434>
    1d48:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1d4c:	ldrd	r2, [r3, #24]
    1d50:	cmp	r2, #0
    1d54:	sbcs	r3, r3, #0
    1d58:	blt	1dd4 <coda_mem_data_new+0x124>
    1d5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1d60:	ldrd	r2, [r3, #24]
    1d64:	lsr	r8, r2, #3
    1d68:	orr	r8, r8, r3, lsl #29
    1d6c:	asr	r9, r3, #3
    1d70:	mov	ip, r8
    1d74:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1d78:	ldrd	r2, [r3, #24]
    1d7c:	mov	r0, #7
    1d80:	mov	r1, #0
    1d84:	and	r2, r2, r0
    1d88:	and	r3, r3, r1
    1d8c:	orrs	r3, r2, r3
    1d90:	beq	1d9c <coda_mem_data_new+0xec>
    1d94:	mov	r3, #1
    1d98:	b	1da0 <coda_mem_data_new+0xf0>
    1d9c:	mov	r3, #0
    1da0:	add	r3, ip, r3
    1da4:	str	r3, [fp, #-32]	; 0xffffffe0
    1da8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1dac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1db0:	cmp	r2, r3
    1db4:	beq	1dd4 <coda_mem_data_new+0x124>
    1db8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1dbc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1dc0:	ldr	r1, [pc, #836]	; 210c <coda_mem_data_new+0x45c>
    1dc4:	ldr	r0, [pc, #836]	; 2110 <coda_mem_data_new+0x460>
    1dc8:	bl	0 <coda_set_error>
    1dcc:	mov	r3, #0
    1dd0:	b	20e4 <coda_mem_data_new+0x434>
    1dd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1dd8:	ldr	r3, [r3, #12]
    1ddc:	cmp	r3, #10
    1de0:	bne	1e14 <coda_mem_data_new+0x164>
    1de4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1de8:	cmp	r3, #1
    1dec:	beq	1e14 <coda_mem_data_new+0x164>
    1df0:	ldr	r3, [pc, #796]	; 2114 <coda_mem_data_new+0x464>
    1df4:	str	r3, [sp]
    1df8:	ldr	r3, [pc, #756]	; 20f4 <coda_mem_data_new+0x444>
    1dfc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1e00:	ldr	r1, [pc, #784]	; 2118 <coda_mem_data_new+0x468>
    1e04:	mvn	r0, #99	; 0x63
    1e08:	bl	0 <coda_set_error>
    1e0c:	mov	r3, #0
    1e10:	b	20e4 <coda_mem_data_new+0x434>
    1e14:	mov	r0, #32
    1e18:	bl	0 <malloc>
    1e1c:	mov	r3, r0
    1e20:	str	r3, [fp, #-36]	; 0xffffffdc
    1e24:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e28:	cmp	r3, #0
    1e2c:	bne	1e54 <coda_mem_data_new+0x1a4>
    1e30:	ldr	r3, [pc, #740]	; 211c <coda_mem_data_new+0x46c>
    1e34:	str	r3, [sp]
    1e38:	ldr	r3, [pc, #692]	; 20f4 <coda_mem_data_new+0x444>
    1e3c:	mov	r2, #32
    1e40:	ldr	r1, [pc, #728]	; 2120 <coda_mem_data_new+0x470>
    1e44:	mvn	r0, #0
    1e48:	bl	0 <coda_set_error>
    1e4c:	mov	r3, #0
    1e50:	b	20e4 <coda_mem_data_new+0x434>
    1e54:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e58:	mov	r2, #100	; 0x64
    1e5c:	str	r2, [r3]
    1e60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e68:	str	r2, [r3, #4]
    1e6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e70:	ldr	r3, [r3, #4]
    1e74:	add	r2, r3, #1
    1e78:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e7c:	str	r2, [r3, #4]
    1e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e84:	mov	r2, #2
    1e88:	str	r2, [r3, #8]
    1e8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e90:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1e94:	str	r2, [r3, #12]
    1e98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e9c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1ea0:	str	r2, [r3, #16]
    1ea4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1ea8:	mov	r2, #0
    1eac:	mov	r3, #0
    1eb0:	strd	r2, [r1, #24]
    1eb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1eb8:	cmp	r3, #0
    1ebc:	ble	20ac <coda_mem_data_new+0x3fc>
    1ec0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1ec4:	cmp	r3, #0
    1ec8:	bne	1ef0 <coda_mem_data_new+0x240>
    1ecc:	ldr	r3, [pc, #592]	; 2124 <coda_mem_data_new+0x474>
    1ed0:	ldr	r2, [pc, #540]	; 20f4 <coda_mem_data_new+0x444>
    1ed4:	ldr	r1, [pc, #588]	; 2128 <coda_mem_data_new+0x478>
    1ed8:	mvn	r0, #99	; 0x63
    1edc:	bl	0 <coda_set_error>
    1ee0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ee4:	bl	0 <coda_mem_type_delete>
    1ee8:	mov	r3, #0
    1eec:	b	20e4 <coda_mem_data_new+0x434>
    1ef0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1ef4:	ldrd	r2, [r3, #40]	; 0x28
    1ef8:	orrs	r3, r2, r3
    1efc:	beq	1f54 <coda_mem_data_new+0x2a4>
    1f00:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1f04:	ldrd	r2, [r3, #40]	; 0x28
    1f08:	subs	r2, r2, #1
    1f0c:	sbc	r3, r3, #0
    1f10:	asr	r1, r3, #31
    1f14:	mov	r0, r1
    1f18:	asr	r1, r0, #31
    1f1c:	ldr	r8, [pc, #520]	; 212c <coda_mem_data_new+0x47c>
    1f20:	mov	r9, #0
    1f24:	and	r0, r0, r8
    1f28:	and	r1, r1, r9
    1f2c:	adds	r2, r2, r0
    1f30:	adc	r3, r3, r1
    1f34:	lsr	r6, r2, #12
    1f38:	orr	r6, r6, r3, lsl #20
    1f3c:	asr	r7, r3, #12
    1f40:	mov	r2, r6
    1f44:	mov	r3, r7
    1f48:	mov	r3, r2
    1f4c:	add	r3, r3, #1
    1f50:	b	1f58 <coda_mem_data_new+0x2a8>
    1f54:	mov	r3, #0
    1f58:	str	r3, [fp, #-40]	; 0xffffffd8
    1f5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1f60:	cmp	r3, #0
    1f64:	beq	1fd0 <coda_mem_data_new+0x320>
    1f68:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1f6c:	ldrd	r0, [r3, #40]	; 0x28
    1f70:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1f74:	mov	r2, r3
    1f78:	asr	r3, r2, #31
    1f7c:	adds	r2, r2, r0
    1f80:	adc	r3, r3, r1
    1f84:	subs	r2, r2, #1
    1f88:	sbc	r3, r3, #0
    1f8c:	asr	r1, r3, #31
    1f90:	mov	r0, r1
    1f94:	asr	r1, r0, #31
    1f98:	ldr	r6, [pc, #396]	; 212c <coda_mem_data_new+0x47c>
    1f9c:	mov	r7, #0
    1fa0:	and	r0, r0, r6
    1fa4:	and	r1, r1, r7
    1fa8:	adds	r2, r2, r0
    1fac:	adc	r3, r3, r1
    1fb0:	lsr	r4, r2, #12
    1fb4:	orr	r4, r4, r3, lsl #20
    1fb8:	asr	r5, r3, #12
    1fbc:	mov	r2, r4
    1fc0:	mov	r3, r5
    1fc4:	mov	r3, r2
    1fc8:	add	r3, r3, #1
    1fcc:	b	1fd4 <coda_mem_data_new+0x324>
    1fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1fd4:	str	r3, [fp, #-44]	; 0xffffffd4
    1fd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1fdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1fe0:	cmp	r2, r3
    1fe4:	ble	2050 <coda_mem_data_new+0x3a0>
    1fe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1fec:	ldr	r2, [r3, #48]	; 0x30
    1ff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1ff4:	lsl	r3, r3, #12
    1ff8:	mov	r1, r3
    1ffc:	mov	r0, r2
    2000:	bl	0 <realloc>
    2004:	str	r0, [fp, #-48]	; 0xffffffd0
    2008:	ldr	r3, [fp, #-48]	; 0xffffffd0
    200c:	cmp	r3, #0
    2010:	bne	2044 <coda_mem_data_new+0x394>
    2014:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2018:	lsl	r2, r3, #12
    201c:	ldr	r3, [pc, #268]	; 2130 <coda_mem_data_new+0x480>
    2020:	str	r3, [sp]
    2024:	ldr	r3, [pc, #200]	; 20f4 <coda_mem_data_new+0x444>
    2028:	ldr	r1, [pc, #260]	; 2134 <coda_mem_data_new+0x484>
    202c:	mvn	r0, #0
    2030:	bl	0 <coda_set_error>
    2034:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2038:	bl	0 <coda_mem_type_delete>
    203c:	mov	r3, #0
    2040:	b	20e4 <coda_mem_data_new+0x434>
    2044:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2048:	ldr	r2, [fp, #-48]	; 0xffffffd0
    204c:	str	r2, [r3, #48]	; 0x30
    2050:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2054:	ldrd	r2, [r3, #40]	; 0x28
    2058:	ldr	r1, [fp, #-36]	; 0xffffffdc
    205c:	strd	r2, [r1, #24]
    2060:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2064:	ldr	r1, [r3, #48]	; 0x30
    2068:	ldr	r3, [fp, #-64]	; 0xffffffc0
    206c:	ldrd	r2, [r3, #40]	; 0x28
    2070:	mov	r3, r2
    2074:	add	r3, r1, r3
    2078:	ldr	r2, [fp, #-68]	; 0xffffffbc
    207c:	ldr	r1, [fp, #4]
    2080:	mov	r0, r3
    2084:	bl	0 <memcpy>
    2088:	ldr	r3, [fp, #-64]	; 0xffffffc0
    208c:	ldrd	r0, [r3, #40]	; 0x28
    2090:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2094:	mov	r2, r3
    2098:	asr	r3, r2, #31
    209c:	adds	r2, r2, r0
    20a0:	adc	r3, r3, r1
    20a4:	ldr	r1, [fp, #-64]	; 0xffffffc0
    20a8:	strd	r2, [r1, #40]	; 0x28
    20ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    20b0:	ldr	r3, [r3, #12]
    20b4:	cmp	r3, #0
    20b8:	bne	20e0 <coda_mem_data_new+0x430>
    20bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    20c0:	bl	880 <create_attributes_record>
    20c4:	mov	r3, r0
    20c8:	cmp	r3, #0
    20cc:	beq	20e0 <coda_mem_data_new+0x430>
    20d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    20d4:	bl	0 <coda_mem_type_delete>
    20d8:	mov	r3, #0
    20dc:	b	20e4 <coda_mem_data_new+0x434>
    20e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    20e4:	mov	r0, r3
    20e8:	sub	sp, fp, #28
    20ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    20f0:	.word	0x000002f6
    20f4:	.word	0x00000000
    20f8:	.word	0x000003dc
    20fc:	.word	0x00000bfc
    2100:	.word	0x000002f9
    2104:	.word	0x000006dc
    2108:	.word	0x000006e8
    210c:	.word	0x00000708
    2110:	.word	0xfffffed4
    2114:	.word	0x0000030e
    2118:	.word	0x00000748
    211c:	.word	0x00000316
    2120:	.word	0x00000178
    2124:	.word	0x00000325
    2128:	.word	0x00000784
    212c:	.word	0x00000fff
    2130:	.word	0x00000335
    2134:	.word	0x000007a8

00002138 <coda_mem_int8_new>:
    2138:	push	{fp, lr}
    213c:	add	fp, sp, #4
    2140:	sub	sp, sp, #24
    2144:	str	r0, [fp, #-8]
    2148:	str	r1, [fp, #-12]
    214c:	str	r2, [fp, #-16]
    2150:	strb	r3, [fp, #-17]	; 0xffffffef
    2154:	ldr	r3, [fp, #-8]
    2158:	ldrd	r2, [r3, #24]
    215c:	cmp	r3, #0
    2160:	cmpeq	r2, #8
    2164:	beq	217c <coda_mem_int8_new+0x44>
    2168:	ldr	r3, [pc, #92]	; 21cc <coda_mem_int8_new+0x94>
    216c:	ldr	r2, [pc, #92]	; 21d0 <coda_mem_int8_new+0x98>
    2170:	ldr	r1, [pc, #92]	; 21d4 <coda_mem_int8_new+0x9c>
    2174:	ldr	r0, [pc, #92]	; 21d8 <coda_mem_int8_new+0xa0>
    2178:	bl	0 <__assert_fail>
    217c:	ldr	r3, [fp, #-8]
    2180:	ldr	r3, [r3, #12]
    2184:	cmp	r3, #0
    2188:	beq	21a0 <coda_mem_int8_new+0x68>
    218c:	ldr	r3, [pc, #56]	; 21cc <coda_mem_int8_new+0x94>
    2190:	mov	r2, #848	; 0x350
    2194:	ldr	r1, [pc, #56]	; 21d4 <coda_mem_int8_new+0x9c>
    2198:	ldr	r0, [pc, #60]	; 21dc <coda_mem_int8_new+0xa4>
    219c:	bl	0 <__assert_fail>
    21a0:	sub	r3, fp, #17
    21a4:	str	r3, [sp]
    21a8:	mov	r3, #1
    21ac:	ldr	r2, [fp, #-16]
    21b0:	ldr	r1, [fp, #-12]
    21b4:	ldr	r0, [fp, #-8]
    21b8:	bl	1cb0 <coda_mem_data_new>
    21bc:	mov	r3, r0
    21c0:	mov	r0, r3
    21c4:	sub	sp, fp, #4
    21c8:	pop	{fp, pc}
    21cc:	.word	0x00000c10
    21d0:	.word	0x0000034f
    21d4:	.word	0x00000000
    21d8:	.word	0x000007e0
    21dc:	.word	0x000007fc

000021e0 <coda_mem_uint8_new>:
    21e0:	push	{fp, lr}
    21e4:	add	fp, sp, #4
    21e8:	sub	sp, sp, #24
    21ec:	str	r0, [fp, #-8]
    21f0:	str	r1, [fp, #-12]
    21f4:	str	r2, [fp, #-16]
    21f8:	strb	r3, [fp, #-17]	; 0xffffffef
    21fc:	ldr	r3, [fp, #-8]
    2200:	ldrd	r2, [r3, #24]
    2204:	cmp	r3, #0
    2208:	cmpeq	r2, #8
    220c:	beq	2224 <coda_mem_uint8_new+0x44>
    2210:	ldr	r3, [pc, #92]	; 2274 <coda_mem_uint8_new+0x94>
    2214:	ldr	r2, [pc, #92]	; 2278 <coda_mem_uint8_new+0x98>
    2218:	ldr	r1, [pc, #92]	; 227c <coda_mem_uint8_new+0x9c>
    221c:	ldr	r0, [pc, #92]	; 2280 <coda_mem_uint8_new+0xa0>
    2220:	bl	0 <__assert_fail>
    2224:	ldr	r3, [fp, #-8]
    2228:	ldr	r3, [r3, #12]
    222c:	cmp	r3, #1
    2230:	beq	2248 <coda_mem_uint8_new+0x68>
    2234:	ldr	r3, [pc, #56]	; 2274 <coda_mem_uint8_new+0x94>
    2238:	mov	r2, #856	; 0x358
    223c:	ldr	r1, [pc, #56]	; 227c <coda_mem_uint8_new+0x9c>
    2240:	ldr	r0, [pc, #60]	; 2284 <coda_mem_uint8_new+0xa4>
    2244:	bl	0 <__assert_fail>
    2248:	sub	r3, fp, #17
    224c:	str	r3, [sp]
    2250:	mov	r3, #1
    2254:	ldr	r2, [fp, #-16]
    2258:	ldr	r1, [fp, #-12]
    225c:	ldr	r0, [fp, #-8]
    2260:	bl	1cb0 <coda_mem_data_new>
    2264:	mov	r3, r0
    2268:	mov	r0, r3
    226c:	sub	sp, fp, #4
    2270:	pop	{fp, pc}
    2274:	.word	0x00000c24
    2278:	.word	0x00000357
    227c:	.word	0x00000000
    2280:	.word	0x000007e0
    2284:	.word	0x0000082c

00002288 <coda_mem_int16_new>:
    2288:	push	{fp, lr}
    228c:	add	fp, sp, #4
    2290:	sub	sp, sp, #24
    2294:	str	r0, [fp, #-8]
    2298:	str	r1, [fp, #-12]
    229c:	str	r2, [fp, #-16]
    22a0:	strh	r3, [fp, #-18]	; 0xffffffee
    22a4:	ldr	r3, [fp, #-8]
    22a8:	ldrd	r2, [r3, #24]
    22ac:	cmp	r3, #0
    22b0:	cmpeq	r2, #16
    22b4:	beq	22cc <coda_mem_int16_new+0x44>
    22b8:	ldr	r3, [pc, #92]	; 231c <coda_mem_int16_new+0x94>
    22bc:	ldr	r2, [pc, #92]	; 2320 <coda_mem_int16_new+0x98>
    22c0:	ldr	r1, [pc, #92]	; 2324 <coda_mem_int16_new+0x9c>
    22c4:	ldr	r0, [pc, #92]	; 2328 <coda_mem_int16_new+0xa0>
    22c8:	bl	0 <__assert_fail>
    22cc:	ldr	r3, [fp, #-8]
    22d0:	ldr	r3, [r3, #12]
    22d4:	cmp	r3, #2
    22d8:	beq	22f0 <coda_mem_int16_new+0x68>
    22dc:	ldr	r3, [pc, #56]	; 231c <coda_mem_int16_new+0x94>
    22e0:	mov	r2, #864	; 0x360
    22e4:	ldr	r1, [pc, #56]	; 2324 <coda_mem_int16_new+0x9c>
    22e8:	ldr	r0, [pc, #60]	; 232c <coda_mem_int16_new+0xa4>
    22ec:	bl	0 <__assert_fail>
    22f0:	sub	r3, fp, #18
    22f4:	str	r3, [sp]
    22f8:	mov	r3, #2
    22fc:	ldr	r2, [fp, #-16]
    2300:	ldr	r1, [fp, #-12]
    2304:	ldr	r0, [fp, #-8]
    2308:	bl	1cb0 <coda_mem_data_new>
    230c:	mov	r3, r0
    2310:	mov	r0, r3
    2314:	sub	sp, fp, #4
    2318:	pop	{fp, pc}
    231c:	.word	0x00000c38
    2320:	.word	0x0000035f
    2324:	.word	0x00000000
    2328:	.word	0x0000085c
    232c:	.word	0x00000878

00002330 <coda_mem_uint16_new>:
    2330:	push	{fp, lr}
    2334:	add	fp, sp, #4
    2338:	sub	sp, sp, #24
    233c:	str	r0, [fp, #-8]
    2340:	str	r1, [fp, #-12]
    2344:	str	r2, [fp, #-16]
    2348:	strh	r3, [fp, #-18]	; 0xffffffee
    234c:	ldr	r3, [fp, #-8]
    2350:	ldrd	r2, [r3, #24]
    2354:	cmp	r3, #0
    2358:	cmpeq	r2, #16
    235c:	beq	2374 <coda_mem_uint16_new+0x44>
    2360:	ldr	r3, [pc, #92]	; 23c4 <coda_mem_uint16_new+0x94>
    2364:	ldr	r2, [pc, #92]	; 23c8 <coda_mem_uint16_new+0x98>
    2368:	ldr	r1, [pc, #92]	; 23cc <coda_mem_uint16_new+0x9c>
    236c:	ldr	r0, [pc, #92]	; 23d0 <coda_mem_uint16_new+0xa0>
    2370:	bl	0 <__assert_fail>
    2374:	ldr	r3, [fp, #-8]
    2378:	ldr	r3, [r3, #12]
    237c:	cmp	r3, #3
    2380:	beq	2398 <coda_mem_uint16_new+0x68>
    2384:	ldr	r3, [pc, #56]	; 23c4 <coda_mem_uint16_new+0x94>
    2388:	mov	r2, #872	; 0x368
    238c:	ldr	r1, [pc, #56]	; 23cc <coda_mem_uint16_new+0x9c>
    2390:	ldr	r0, [pc, #60]	; 23d4 <coda_mem_uint16_new+0xa4>
    2394:	bl	0 <__assert_fail>
    2398:	sub	r3, fp, #18
    239c:	str	r3, [sp]
    23a0:	mov	r3, #2
    23a4:	ldr	r2, [fp, #-16]
    23a8:	ldr	r1, [fp, #-12]
    23ac:	ldr	r0, [fp, #-8]
    23b0:	bl	1cb0 <coda_mem_data_new>
    23b4:	mov	r3, r0
    23b8:	mov	r0, r3
    23bc:	sub	sp, fp, #4
    23c0:	pop	{fp, pc}
    23c4:	.word	0x00000c4c
    23c8:	.word	0x00000367
    23cc:	.word	0x00000000
    23d0:	.word	0x0000085c
    23d4:	.word	0x000008a8

000023d8 <coda_mem_int32_new>:
    23d8:	push	{fp, lr}
    23dc:	add	fp, sp, #4
    23e0:	sub	sp, sp, #24
    23e4:	str	r0, [fp, #-8]
    23e8:	str	r1, [fp, #-12]
    23ec:	str	r2, [fp, #-16]
    23f0:	str	r3, [fp, #-20]	; 0xffffffec
    23f4:	ldr	r3, [fp, #-8]
    23f8:	ldrd	r2, [r3, #24]
    23fc:	cmp	r3, #0
    2400:	cmpeq	r2, #32
    2404:	beq	241c <coda_mem_int32_new+0x44>
    2408:	ldr	r3, [pc, #92]	; 246c <coda_mem_int32_new+0x94>
    240c:	ldr	r2, [pc, #92]	; 2470 <coda_mem_int32_new+0x98>
    2410:	ldr	r1, [pc, #92]	; 2474 <coda_mem_int32_new+0x9c>
    2414:	ldr	r0, [pc, #92]	; 2478 <coda_mem_int32_new+0xa0>
    2418:	bl	0 <__assert_fail>
    241c:	ldr	r3, [fp, #-8]
    2420:	ldr	r3, [r3, #12]
    2424:	cmp	r3, #4
    2428:	beq	2440 <coda_mem_int32_new+0x68>
    242c:	ldr	r3, [pc, #56]	; 246c <coda_mem_int32_new+0x94>
    2430:	mov	r2, #880	; 0x370
    2434:	ldr	r1, [pc, #56]	; 2474 <coda_mem_int32_new+0x9c>
    2438:	ldr	r0, [pc, #60]	; 247c <coda_mem_int32_new+0xa4>
    243c:	bl	0 <__assert_fail>
    2440:	sub	r3, fp, #20
    2444:	str	r3, [sp]
    2448:	mov	r3, #4
    244c:	ldr	r2, [fp, #-16]
    2450:	ldr	r1, [fp, #-12]
    2454:	ldr	r0, [fp, #-8]
    2458:	bl	1cb0 <coda_mem_data_new>
    245c:	mov	r3, r0
    2460:	mov	r0, r3
    2464:	sub	sp, fp, #4
    2468:	pop	{fp, pc}
    246c:	.word	0x00000c60
    2470:	.word	0x0000036f
    2474:	.word	0x00000000
    2478:	.word	0x000008dc
    247c:	.word	0x000008f8

00002480 <coda_mem_uint32_new>:
    2480:	push	{fp, lr}
    2484:	add	fp, sp, #4
    2488:	sub	sp, sp, #24
    248c:	str	r0, [fp, #-8]
    2490:	str	r1, [fp, #-12]
    2494:	str	r2, [fp, #-16]
    2498:	str	r3, [fp, #-20]	; 0xffffffec
    249c:	ldr	r3, [fp, #-8]
    24a0:	ldrd	r2, [r3, #24]
    24a4:	cmp	r3, #0
    24a8:	cmpeq	r2, #32
    24ac:	beq	24c4 <coda_mem_uint32_new+0x44>
    24b0:	ldr	r3, [pc, #92]	; 2514 <coda_mem_uint32_new+0x94>
    24b4:	ldr	r2, [pc, #92]	; 2518 <coda_mem_uint32_new+0x98>
    24b8:	ldr	r1, [pc, #92]	; 251c <coda_mem_uint32_new+0x9c>
    24bc:	ldr	r0, [pc, #92]	; 2520 <coda_mem_uint32_new+0xa0>
    24c0:	bl	0 <__assert_fail>
    24c4:	ldr	r3, [fp, #-8]
    24c8:	ldr	r3, [r3, #12]
    24cc:	cmp	r3, #5
    24d0:	beq	24e8 <coda_mem_uint32_new+0x68>
    24d4:	ldr	r3, [pc, #56]	; 2514 <coda_mem_uint32_new+0x94>
    24d8:	mov	r2, #888	; 0x378
    24dc:	ldr	r1, [pc, #56]	; 251c <coda_mem_uint32_new+0x9c>
    24e0:	ldr	r0, [pc, #60]	; 2524 <coda_mem_uint32_new+0xa4>
    24e4:	bl	0 <__assert_fail>
    24e8:	sub	r3, fp, #20
    24ec:	str	r3, [sp]
    24f0:	mov	r3, #4
    24f4:	ldr	r2, [fp, #-16]
    24f8:	ldr	r1, [fp, #-12]
    24fc:	ldr	r0, [fp, #-8]
    2500:	bl	1cb0 <coda_mem_data_new>
    2504:	mov	r3, r0
    2508:	mov	r0, r3
    250c:	sub	sp, fp, #4
    2510:	pop	{fp, pc}
    2514:	.word	0x00000c74
    2518:	.word	0x00000377
    251c:	.word	0x00000000
    2520:	.word	0x000008dc
    2524:	.word	0x00000928

00002528 <coda_mem_int64_new>:
    2528:	push	{fp, lr}
    252c:	add	fp, sp, #4
    2530:	sub	sp, sp, #24
    2534:	str	r0, [fp, #-8]
    2538:	str	r1, [fp, #-12]
    253c:	str	r2, [fp, #-16]
    2540:	ldr	r3, [fp, #-8]
    2544:	ldrd	r2, [r3, #24]
    2548:	cmp	r3, #0
    254c:	cmpeq	r2, #64	; 0x40
    2550:	beq	2568 <coda_mem_int64_new+0x40>
    2554:	ldr	r3, [pc, #92]	; 25b8 <coda_mem_int64_new+0x90>
    2558:	ldr	r2, [pc, #92]	; 25bc <coda_mem_int64_new+0x94>
    255c:	ldr	r1, [pc, #92]	; 25c0 <coda_mem_int64_new+0x98>
    2560:	ldr	r0, [pc, #92]	; 25c4 <coda_mem_int64_new+0x9c>
    2564:	bl	0 <__assert_fail>
    2568:	ldr	r3, [fp, #-8]
    256c:	ldr	r3, [r3, #12]
    2570:	cmp	r3, #6
    2574:	beq	258c <coda_mem_int64_new+0x64>
    2578:	ldr	r3, [pc, #56]	; 25b8 <coda_mem_int64_new+0x90>
    257c:	mov	r2, #896	; 0x380
    2580:	ldr	r1, [pc, #56]	; 25c0 <coda_mem_int64_new+0x98>
    2584:	ldr	r0, [pc, #60]	; 25c8 <coda_mem_int64_new+0xa0>
    2588:	bl	0 <__assert_fail>
    258c:	add	r3, fp, #4
    2590:	str	r3, [sp]
    2594:	mov	r3, #8
    2598:	ldr	r2, [fp, #-16]
    259c:	ldr	r1, [fp, #-12]
    25a0:	ldr	r0, [fp, #-8]
    25a4:	bl	1cb0 <coda_mem_data_new>
    25a8:	mov	r3, r0
    25ac:	mov	r0, r3
    25b0:	sub	sp, fp, #4
    25b4:	pop	{fp, pc}
    25b8:	.word	0x00000c88
    25bc:	.word	0x0000037f
    25c0:	.word	0x00000000
    25c4:	.word	0x0000095c
    25c8:	.word	0x00000978

000025cc <coda_mem_uint64_new>:
    25cc:	push	{fp, lr}
    25d0:	add	fp, sp, #4
    25d4:	sub	sp, sp, #24
    25d8:	str	r0, [fp, #-8]
    25dc:	str	r1, [fp, #-12]
    25e0:	str	r2, [fp, #-16]
    25e4:	ldr	r3, [fp, #-8]
    25e8:	ldrd	r2, [r3, #24]
    25ec:	cmp	r3, #0
    25f0:	cmpeq	r2, #64	; 0x40
    25f4:	beq	260c <coda_mem_uint64_new+0x40>
    25f8:	ldr	r3, [pc, #92]	; 265c <coda_mem_uint64_new+0x90>
    25fc:	ldr	r2, [pc, #92]	; 2660 <coda_mem_uint64_new+0x94>
    2600:	ldr	r1, [pc, #92]	; 2664 <coda_mem_uint64_new+0x98>
    2604:	ldr	r0, [pc, #92]	; 2668 <coda_mem_uint64_new+0x9c>
    2608:	bl	0 <__assert_fail>
    260c:	ldr	r3, [fp, #-8]
    2610:	ldr	r3, [r3, #12]
    2614:	cmp	r3, #7
    2618:	beq	2630 <coda_mem_uint64_new+0x64>
    261c:	ldr	r3, [pc, #56]	; 265c <coda_mem_uint64_new+0x90>
    2620:	mov	r2, #904	; 0x388
    2624:	ldr	r1, [pc, #56]	; 2664 <coda_mem_uint64_new+0x98>
    2628:	ldr	r0, [pc, #60]	; 266c <coda_mem_uint64_new+0xa0>
    262c:	bl	0 <__assert_fail>
    2630:	add	r3, fp, #4
    2634:	str	r3, [sp]
    2638:	mov	r3, #8
    263c:	ldr	r2, [fp, #-16]
    2640:	ldr	r1, [fp, #-12]
    2644:	ldr	r0, [fp, #-8]
    2648:	bl	1cb0 <coda_mem_data_new>
    264c:	mov	r3, r0
    2650:	mov	r0, r3
    2654:	sub	sp, fp, #4
    2658:	pop	{fp, pc}
    265c:	.word	0x00000c9c
    2660:	.word	0x00000387
    2664:	.word	0x00000000
    2668:	.word	0x0000095c
    266c:	.word	0x000009a8

00002670 <coda_mem_float_new>:
    2670:	push	{fp, lr}
    2674:	add	fp, sp, #4
    2678:	sub	sp, sp, #24
    267c:	str	r0, [fp, #-8]
    2680:	str	r1, [fp, #-12]
    2684:	str	r2, [fp, #-16]
    2688:	vstr	s0, [fp, #-20]	; 0xffffffec
    268c:	ldr	r3, [fp, #-8]
    2690:	ldrd	r2, [r3, #24]
    2694:	cmp	r3, #0
    2698:	cmpeq	r2, #32
    269c:	beq	26b4 <coda_mem_float_new+0x44>
    26a0:	ldr	r3, [pc, #92]	; 2704 <coda_mem_float_new+0x94>
    26a4:	ldr	r2, [pc, #92]	; 2708 <coda_mem_float_new+0x98>
    26a8:	ldr	r1, [pc, #92]	; 270c <coda_mem_float_new+0x9c>
    26ac:	ldr	r0, [pc, #92]	; 2710 <coda_mem_float_new+0xa0>
    26b0:	bl	0 <__assert_fail>
    26b4:	ldr	r3, [fp, #-8]
    26b8:	ldr	r3, [r3, #12]
    26bc:	cmp	r3, #8
    26c0:	beq	26d8 <coda_mem_float_new+0x68>
    26c4:	ldr	r3, [pc, #56]	; 2704 <coda_mem_float_new+0x94>
    26c8:	mov	r2, #912	; 0x390
    26cc:	ldr	r1, [pc, #56]	; 270c <coda_mem_float_new+0x9c>
    26d0:	ldr	r0, [pc, #60]	; 2714 <coda_mem_float_new+0xa4>
    26d4:	bl	0 <__assert_fail>
    26d8:	sub	r3, fp, #20
    26dc:	str	r3, [sp]
    26e0:	mov	r3, #4
    26e4:	ldr	r2, [fp, #-16]
    26e8:	ldr	r1, [fp, #-12]
    26ec:	ldr	r0, [fp, #-8]
    26f0:	bl	1cb0 <coda_mem_data_new>
    26f4:	mov	r3, r0
    26f8:	mov	r0, r3
    26fc:	sub	sp, fp, #4
    2700:	pop	{fp, pc}
    2704:	.word	0x00000cb0
    2708:	.word	0x0000038f
    270c:	.word	0x00000000
    2710:	.word	0x000008dc
    2714:	.word	0x000009dc

00002718 <coda_mem_double_new>:
    2718:	push	{fp, lr}
    271c:	add	fp, sp, #4
    2720:	sub	sp, sp, #32
    2724:	str	r0, [fp, #-8]
    2728:	str	r1, [fp, #-12]
    272c:	str	r2, [fp, #-16]
    2730:	vstr	d0, [fp, #-28]	; 0xffffffe4
    2734:	ldr	r3, [fp, #-8]
    2738:	ldrd	r2, [r3, #24]
    273c:	cmp	r3, #0
    2740:	cmpeq	r2, #64	; 0x40
    2744:	beq	275c <coda_mem_double_new+0x44>
    2748:	ldr	r3, [pc, #92]	; 27ac <coda_mem_double_new+0x94>
    274c:	ldr	r2, [pc, #92]	; 27b0 <coda_mem_double_new+0x98>
    2750:	ldr	r1, [pc, #92]	; 27b4 <coda_mem_double_new+0x9c>
    2754:	ldr	r0, [pc, #92]	; 27b8 <coda_mem_double_new+0xa0>
    2758:	bl	0 <__assert_fail>
    275c:	ldr	r3, [fp, #-8]
    2760:	ldr	r3, [r3, #12]
    2764:	cmp	r3, #9
    2768:	beq	2780 <coda_mem_double_new+0x68>
    276c:	ldr	r3, [pc, #56]	; 27ac <coda_mem_double_new+0x94>
    2770:	mov	r2, #920	; 0x398
    2774:	ldr	r1, [pc, #56]	; 27b4 <coda_mem_double_new+0x9c>
    2778:	ldr	r0, [pc, #60]	; 27bc <coda_mem_double_new+0xa4>
    277c:	bl	0 <__assert_fail>
    2780:	sub	r3, fp, #28
    2784:	str	r3, [sp]
    2788:	mov	r3, #8
    278c:	ldr	r2, [fp, #-16]
    2790:	ldr	r1, [fp, #-12]
    2794:	ldr	r0, [fp, #-8]
    2798:	bl	1cb0 <coda_mem_data_new>
    279c:	mov	r3, r0
    27a0:	mov	r0, r3
    27a4:	sub	sp, fp, #4
    27a8:	pop	{fp, pc}
    27ac:	.word	0x00000cc4
    27b0:	.word	0x00000397
    27b4:	.word	0x00000000
    27b8:	.word	0x0000095c
    27bc:	.word	0x00000a0c

000027c0 <coda_mem_char_new>:
    27c0:	push	{fp, lr}
    27c4:	add	fp, sp, #4
    27c8:	sub	sp, sp, #24
    27cc:	str	r0, [fp, #-8]
    27d0:	str	r1, [fp, #-12]
    27d4:	str	r2, [fp, #-16]
    27d8:	strb	r3, [fp, #-17]	; 0xffffffef
    27dc:	ldr	r3, [fp, #-8]
    27e0:	ldrd	r2, [r3, #24]
    27e4:	cmp	r3, #0
    27e8:	cmpeq	r2, #8
    27ec:	beq	2804 <coda_mem_char_new+0x44>
    27f0:	ldr	r3, [pc, #92]	; 2854 <coda_mem_char_new+0x94>
    27f4:	ldr	r2, [pc, #92]	; 2858 <coda_mem_char_new+0x98>
    27f8:	ldr	r1, [pc, #92]	; 285c <coda_mem_char_new+0x9c>
    27fc:	ldr	r0, [pc, #92]	; 2860 <coda_mem_char_new+0xa0>
    2800:	bl	0 <__assert_fail>
    2804:	ldr	r3, [fp, #-8]
    2808:	ldr	r3, [r3, #12]
    280c:	cmp	r3, #10
    2810:	beq	2828 <coda_mem_char_new+0x68>
    2814:	ldr	r3, [pc, #56]	; 2854 <coda_mem_char_new+0x94>
    2818:	mov	r2, #928	; 0x3a0
    281c:	ldr	r1, [pc, #56]	; 285c <coda_mem_char_new+0x9c>
    2820:	ldr	r0, [pc, #60]	; 2864 <coda_mem_char_new+0xa4>
    2824:	bl	0 <__assert_fail>
    2828:	sub	r3, fp, #17
    282c:	str	r3, [sp]
    2830:	mov	r3, #1
    2834:	ldr	r2, [fp, #-16]
    2838:	ldr	r1, [fp, #-12]
    283c:	ldr	r0, [fp, #-8]
    2840:	bl	1cb0 <coda_mem_data_new>
    2844:	mov	r3, r0
    2848:	mov	r0, r3
    284c:	sub	sp, fp, #4
    2850:	pop	{fp, pc}
    2854:	.word	0x00000cd8
    2858:	.word	0x0000039f
    285c:	.word	0x00000000
    2860:	.word	0x000007e0
    2864:	.word	0x00000a40

00002868 <coda_mem_string_new>:
    2868:	push	{fp, lr}
    286c:	add	fp, sp, #4
    2870:	sub	sp, sp, #24
    2874:	str	r0, [fp, #-8]
    2878:	str	r1, [fp, #-12]
    287c:	str	r2, [fp, #-16]
    2880:	str	r3, [fp, #-20]	; 0xffffffec
    2884:	ldr	r3, [fp, #-8]
    2888:	ldr	r3, [r3, #12]
    288c:	cmp	r3, #11
    2890:	beq	28a8 <coda_mem_string_new+0x40>
    2894:	ldr	r3, [pc, #92]	; 28f8 <coda_mem_string_new+0x90>
    2898:	ldr	r2, [pc, #92]	; 28fc <coda_mem_string_new+0x94>
    289c:	ldr	r1, [pc, #92]	; 2900 <coda_mem_string_new+0x98>
    28a0:	ldr	r0, [pc, #92]	; 2904 <coda_mem_string_new+0x9c>
    28a4:	bl	0 <__assert_fail>
    28a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    28ac:	cmp	r3, #0
    28b0:	beq	28c8 <coda_mem_string_new+0x60>
    28b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    28b8:	bl	0 <strlen>
    28bc:	mov	r3, r0
    28c0:	mov	r2, r3
    28c4:	b	28cc <coda_mem_string_new+0x64>
    28c8:	mov	r2, #0
    28cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    28d0:	str	r3, [sp]
    28d4:	mov	r3, r2
    28d8:	ldr	r2, [fp, #-16]
    28dc:	ldr	r1, [fp, #-12]
    28e0:	ldr	r0, [fp, #-8]
    28e4:	bl	1cb0 <coda_mem_data_new>
    28e8:	mov	r3, r0
    28ec:	mov	r0, r3
    28f0:	sub	sp, fp, #4
    28f4:	pop	{fp, pc}
    28f8:	.word	0x00000cec
    28fc:	.word	0x000003a7
    2900:	.word	0x00000000
    2904:	.word	0x00000a70

00002908 <coda_mem_raw_new>:
    2908:	push	{fp, lr}
    290c:	add	fp, sp, #4
    2910:	sub	sp, sp, #24
    2914:	str	r0, [fp, #-8]
    2918:	str	r1, [fp, #-12]
    291c:	str	r2, [fp, #-16]
    2920:	str	r3, [fp, #-20]	; 0xffffffec
    2924:	ldr	r3, [fp, #-8]
    2928:	ldr	r3, [r3, #8]
    292c:	cmp	r3, #5
    2930:	beq	2948 <coda_mem_raw_new+0x40>
    2934:	ldr	r3, [pc, #56]	; 2974 <coda_mem_raw_new+0x6c>
    2938:	ldr	r2, [pc, #56]	; 2978 <coda_mem_raw_new+0x70>
    293c:	ldr	r1, [pc, #56]	; 297c <coda_mem_raw_new+0x74>
    2940:	ldr	r0, [pc, #56]	; 2980 <coda_mem_raw_new+0x78>
    2944:	bl	0 <__assert_fail>
    2948:	ldr	r3, [fp, #4]
    294c:	str	r3, [sp]
    2950:	ldr	r3, [fp, #-20]	; 0xffffffec
    2954:	ldr	r2, [fp, #-16]
    2958:	ldr	r1, [fp, #-12]
    295c:	ldr	r0, [fp, #-8]
    2960:	bl	1cb0 <coda_mem_data_new>
    2964:	mov	r3, r0
    2968:	mov	r0, r3
    296c:	sub	sp, fp, #4
    2970:	pop	{fp, pc}
    2974:	.word	0x00000d00
    2978:	.word	0x000003af
    297c:	.word	0x00000000
    2980:	.word	0x00000aa4

00002984 <coda_mem_time_new>:
    2984:	push	{fp, lr}
    2988:	add	fp, sp, #4
    298c:	sub	sp, sp, #32
    2990:	str	r0, [fp, #-16]
    2994:	str	r1, [fp, #-20]	; 0xffffffec
    2998:	str	r2, [fp, #-24]	; 0xffffffe8
    299c:	ldr	r3, [fp, #-16]
    29a0:	cmp	r3, #0
    29a4:	bne	29c4 <coda_mem_time_new+0x40>
    29a8:	ldr	r3, [pc, #372]	; 2b24 <coda_mem_time_new+0x1a0>
    29ac:	ldr	r2, [pc, #372]	; 2b28 <coda_mem_time_new+0x1a4>
    29b0:	ldr	r1, [pc, #372]	; 2b2c <coda_mem_time_new+0x1a8>
    29b4:	mvn	r0, #99	; 0x63
    29b8:	bl	0 <coda_set_error>
    29bc:	mov	r3, #0
    29c0:	b	2b18 <coda_mem_time_new+0x194>
    29c4:	ldr	r3, [fp, #-16]
    29c8:	ldr	r3, [r3, #8]
    29cc:	cmp	r3, #6
    29d0:	beq	29f0 <coda_mem_time_new+0x6c>
    29d4:	ldr	r3, [pc, #340]	; 2b30 <coda_mem_time_new+0x1ac>
    29d8:	ldr	r2, [pc, #328]	; 2b28 <coda_mem_time_new+0x1a4>
    29dc:	ldr	r1, [pc, #336]	; 2b34 <coda_mem_time_new+0x1b0>
    29e0:	mvn	r0, #99	; 0x63
    29e4:	bl	0 <coda_set_error>
    29e8:	mov	r3, #0
    29ec:	b	2b18 <coda_mem_time_new+0x194>
    29f0:	ldr	r3, [fp, #-16]
    29f4:	ldr	r3, [r3, #40]	; 0x28
    29f8:	cmp	r3, #2
    29fc:	beq	2a1c <coda_mem_time_new+0x98>
    2a00:	mov	r3, #964	; 0x3c4
    2a04:	ldr	r2, [pc, #284]	; 2b28 <coda_mem_time_new+0x1a4>
    2a08:	ldr	r1, [pc, #296]	; 2b38 <coda_mem_time_new+0x1b4>
    2a0c:	mvn	r0, #99	; 0x63
    2a10:	bl	0 <coda_set_error>
    2a14:	mov	r3, #0
    2a18:	b	2b18 <coda_mem_time_new+0x194>
    2a1c:	ldr	r3, [fp, #-16]
    2a20:	ldr	r2, [r3, #44]	; 0x2c
    2a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a28:	ldr	r3, [r3, #4]
    2a2c:	cmp	r2, r3
    2a30:	beq	2a50 <coda_mem_time_new+0xcc>
    2a34:	ldr	r3, [pc, #256]	; 2b3c <coda_mem_time_new+0x1b8>
    2a38:	ldr	r2, [pc, #232]	; 2b28 <coda_mem_time_new+0x1a4>
    2a3c:	ldr	r1, [pc, #252]	; 2b40 <coda_mem_time_new+0x1bc>
    2a40:	mvn	r0, #99	; 0x63
    2a44:	bl	0 <coda_set_error>
    2a48:	mov	r3, #0
    2a4c:	b	2b18 <coda_mem_time_new+0x194>
    2a50:	mov	r0, #20
    2a54:	bl	0 <malloc>
    2a58:	mov	r3, r0
    2a5c:	str	r3, [fp, #-8]
    2a60:	ldr	r3, [fp, #-8]
    2a64:	cmp	r3, #0
    2a68:	bne	2a90 <coda_mem_time_new+0x10c>
    2a6c:	ldr	r3, [pc, #208]	; 2b44 <coda_mem_time_new+0x1c0>
    2a70:	str	r3, [sp]
    2a74:	ldr	r3, [pc, #172]	; 2b28 <coda_mem_time_new+0x1a4>
    2a78:	mov	r2, #20
    2a7c:	ldr	r1, [pc, #196]	; 2b48 <coda_mem_time_new+0x1c4>
    2a80:	mvn	r0, #0
    2a84:	bl	0 <coda_set_error>
    2a88:	mov	r3, #0
    2a8c:	b	2b18 <coda_mem_time_new+0x194>
    2a90:	ldr	r3, [fp, #-8]
    2a94:	mov	r2, #100	; 0x64
    2a98:	str	r2, [r3]
    2a9c:	ldr	r3, [fp, #-8]
    2aa0:	ldr	r2, [fp, #-16]
    2aa4:	str	r2, [r3, #4]
    2aa8:	ldr	r3, [fp, #-16]
    2aac:	ldr	r3, [r3, #4]
    2ab0:	add	r2, r3, #1
    2ab4:	ldr	r3, [fp, #-16]
    2ab8:	str	r2, [r3, #4]
    2abc:	ldr	r3, [fp, #-8]
    2ac0:	mov	r2, #3
    2ac4:	str	r2, [r3, #8]
    2ac8:	ldr	r3, [fp, #-8]
    2acc:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ad0:	str	r2, [r3, #12]
    2ad4:	ldr	r3, [fp, #-8]
    2ad8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2adc:	str	r2, [r3, #16]
    2ae0:	ldr	r3, [fp, #-8]
    2ae4:	ldr	r3, [r3, #12]
    2ae8:	cmp	r3, #0
    2aec:	bne	2b14 <coda_mem_time_new+0x190>
    2af0:	ldr	r0, [fp, #-8]
    2af4:	bl	880 <create_attributes_record>
    2af8:	mov	r3, r0
    2afc:	cmp	r3, #0
    2b00:	beq	2b14 <coda_mem_time_new+0x190>
    2b04:	ldr	r0, [fp, #-8]
    2b08:	bl	0 <coda_mem_type_delete>
    2b0c:	mov	r3, #0
    2b10:	b	2b18 <coda_mem_time_new+0x194>
    2b14:	ldr	r3, [fp, #-8]
    2b18:	mov	r0, r3
    2b1c:	sub	sp, fp, #4
    2b20:	pop	{fp, pc}
    2b24:	.word	0x000003ba
    2b28:	.word	0x00000000
    2b2c:	.word	0x000003dc
    2b30:	.word	0x000003bf
    2b34:	.word	0x00000ad0
    2b38:	.word	0x00000afc
    2b3c:	.word	0x000003ca
    2b40:	.word	0x00000b24
    2b44:	.word	0x000003d2
    2b48:	.word	0x00000178

00002b4c <coda_mem_no_data_new>:
    2b4c:	push	{fp, lr}
    2b50:	add	fp, sp, #4
    2b54:	sub	sp, sp, #24
    2b58:	str	r0, [fp, #-16]
    2b5c:	mov	r0, #20
    2b60:	bl	0 <malloc>
    2b64:	mov	r3, r0
    2b68:	str	r3, [fp, #-8]
    2b6c:	ldr	r3, [fp, #-8]
    2b70:	cmp	r3, #0
    2b74:	bne	2b9c <coda_mem_no_data_new+0x50>
    2b78:	ldr	r3, [pc, #300]	; 2cac <coda_mem_no_data_new+0x160>
    2b7c:	str	r3, [sp]
    2b80:	ldr	r3, [pc, #296]	; 2cb0 <coda_mem_no_data_new+0x164>
    2b84:	mov	r2, #20
    2b88:	ldr	r1, [pc, #292]	; 2cb4 <coda_mem_no_data_new+0x168>
    2b8c:	mvn	r0, #0
    2b90:	bl	0 <coda_set_error>
    2b94:	mov	r3, #0
    2b98:	b	2ca0 <coda_mem_no_data_new+0x154>
    2b9c:	ldr	r3, [fp, #-8]
    2ba0:	mov	r2, #100	; 0x64
    2ba4:	str	r2, [r3]
    2ba8:	ldr	r3, [fp, #-8]
    2bac:	mov	r2, #0
    2bb0:	str	r2, [r3, #4]
    2bb4:	ldr	r3, [fp, #-8]
    2bb8:	mov	r2, #3
    2bbc:	str	r2, [r3, #8]
    2bc0:	ldr	r3, [fp, #-8]
    2bc4:	mov	r2, #0
    2bc8:	str	r2, [r3, #12]
    2bcc:	ldr	r3, [fp, #-8]
    2bd0:	mov	r2, #0
    2bd4:	str	r2, [r3, #16]
    2bd8:	ldr	r0, [fp, #-16]
    2bdc:	bl	0 <coda_type_no_data_singleton>
    2be0:	mov	r2, r0
    2be4:	ldr	r3, [fp, #-8]
    2be8:	str	r2, [r3, #4]
    2bec:	ldr	r3, [fp, #-8]
    2bf0:	ldr	r3, [r3, #4]
    2bf4:	cmp	r3, #0
    2bf8:	bne	2c0c <coda_mem_no_data_new+0xc0>
    2bfc:	ldr	r0, [fp, #-8]
    2c00:	bl	0 <coda_mem_type_delete>
    2c04:	mov	r3, #0
    2c08:	b	2ca0 <coda_mem_no_data_new+0x154>
    2c0c:	ldr	r3, [fp, #-8]
    2c10:	ldr	r3, [r3, #4]
    2c14:	ldr	r2, [r3, #4]
    2c18:	add	r2, r2, #1
    2c1c:	str	r2, [r3, #4]
    2c20:	ldr	r3, [fp, #-8]
    2c24:	ldr	r3, [r3, #4]
    2c28:	ldr	r3, [r3, #44]	; 0x2c
    2c2c:	str	r3, [fp, #-12]
    2c30:	mov	r3, #0
    2c34:	str	r3, [sp]
    2c38:	mov	r3, #0
    2c3c:	mov	r2, #0
    2c40:	mov	r1, #0
    2c44:	ldr	r0, [fp, #-12]
    2c48:	bl	2908 <coda_mem_raw_new>
    2c4c:	mov	r2, r0
    2c50:	ldr	r3, [fp, #-8]
    2c54:	str	r2, [r3, #16]
    2c58:	ldr	r3, [fp, #-8]
    2c5c:	ldr	r3, [r3, #16]
    2c60:	cmp	r3, #0
    2c64:	bne	2c78 <coda_mem_no_data_new+0x12c>
    2c68:	ldr	r0, [fp, #-8]
    2c6c:	bl	0 <coda_mem_type_delete>
    2c70:	mov	r3, #0
    2c74:	b	2ca0 <coda_mem_no_data_new+0x154>
    2c78:	ldr	r0, [fp, #-8]
    2c7c:	bl	880 <create_attributes_record>
    2c80:	mov	r3, r0
    2c84:	cmp	r3, #0
    2c88:	beq	2c9c <coda_mem_no_data_new+0x150>
    2c8c:	ldr	r0, [fp, #-8]
    2c90:	bl	0 <coda_mem_type_delete>
    2c94:	mov	r3, #0
    2c98:	b	2ca0 <coda_mem_no_data_new+0x154>
    2c9c:	ldr	r3, [fp, #-8]
    2ca0:	mov	r0, r3
    2ca4:	sub	sp, fp, #4
    2ca8:	pop	{fp, pc}
    2cac:	.word	0x000003f1
    2cb0:	.word	0x00000000
    2cb4:	.word	0x00000178
