
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/bst.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bst_nova>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	movw	r0, #4
  10:	bl	0 <malloc>
  14:	str	r0, [sp]
  18:	ldr	r0, [sp]
  1c:	movw	lr, #0
  20:	cmp	r0, lr
  24:	bne	34 <bst_nova+0x34>
  28:	movw	r0, #0
  2c:	str	r0, [sp, #4]
  30:	b	48 <bst_nova+0x48>
  34:	ldr	r0, [sp]
  38:	movw	r1, #0
  3c:	str	r1, [r0]
  40:	ldr	r0, [sp]
  44:	str	r0, [sp, #4]
  48:	ldr	r0, [sp, #4]
  4c:	mov	sp, fp
  50:	pop	{fp, pc}

00000054 <bst_apaga>:
  54:	push	{fp, lr}
  58:	mov	fp, sp
  5c:	sub	sp, sp, #8
  60:	str	r0, [sp, #4]
  64:	ldr	r0, [sp, #4]
  68:	ldr	r0, [r0]
  6c:	movw	r1, #0
  70:	cmp	r0, r1
  74:	beq	9c <bst_apaga+0x48>
  78:	ldr	r0, [sp, #4]
  7c:	ldr	r0, [r0]
  80:	ldr	r1, [sp, #4]
  84:	ldr	r1, [r1]
  88:	ldr	r1, [r1]
  8c:	bl	ac <bst_remove_impl>
  90:	ldr	r1, [sp, #4]
  94:	str	r0, [r1]
  98:	b	64 <bst_apaga+0x10>
  9c:	ldr	r0, [sp, #4]
  a0:	bl	0 <free>
  a4:	mov	sp, fp
  a8:	pop	{fp, pc}

000000ac <bst_remove_impl>:
  ac:	push	{fp, lr}
  b0:	mov	fp, sp
  b4:	sub	sp, sp, #56	; 0x38
  b8:	str	r0, [fp, #-8]
  bc:	str	r1, [fp, #-12]
  c0:	ldr	r0, [fp, #-8]
  c4:	movw	r1, #0
  c8:	cmp	r0, r1
  cc:	bne	dc <bst_remove_impl+0x30>
  d0:	ldr	r0, [fp, #-8]
  d4:	str	r0, [fp, #-4]
  d8:	b	300 <bst_remove_impl+0x254>
  dc:	ldr	r0, [fp, #-12]
  e0:	ldr	r1, [fp, #-8]
  e4:	ldr	r1, [r1]
  e8:	bl	0 <strcmp>
  ec:	cmp	r0, #0
  f0:	bge	110 <bst_remove_impl+0x64>
  f4:	ldr	r0, [fp, #-8]
  f8:	ldr	r0, [r0, #4]
  fc:	ldr	r1, [fp, #-12]
 100:	bl	ac <bst_remove_impl>
 104:	ldr	r1, [fp, #-8]
 108:	str	r0, [r1, #4]
 10c:	b	2f8 <bst_remove_impl+0x24c>
 110:	ldr	r0, [fp, #-12]
 114:	ldr	r1, [fp, #-8]
 118:	ldr	r1, [r1]
 11c:	bl	0 <strcmp>
 120:	cmp	r0, #0
 124:	ble	144 <bst_remove_impl+0x98>
 128:	ldr	r0, [fp, #-8]
 12c:	ldr	r0, [r0, #8]
 130:	ldr	r1, [fp, #-12]
 134:	bl	ac <bst_remove_impl>
 138:	ldr	r1, [fp, #-8]
 13c:	str	r0, [r1, #8]
 140:	b	2f4 <bst_remove_impl+0x248>
 144:	ldr	r0, [fp, #-8]
 148:	ldr	r0, [r0, #4]
 14c:	movw	r1, #0
 150:	cmp	r0, r1
 154:	beq	16c <bst_remove_impl+0xc0>
 158:	ldr	r0, [fp, #-8]
 15c:	ldr	r0, [r0, #8]
 160:	movw	r1, #0
 164:	cmp	r0, r1
 168:	bne	260 <bst_remove_impl+0x1b4>
 16c:	ldr	r0, [fp, #-8]
 170:	ldr	r0, [r0, #4]
 174:	movw	r1, #0
 178:	cmp	r0, r1
 17c:	beq	190 <bst_remove_impl+0xe4>
 180:	ldr	r0, [fp, #-8]
 184:	ldr	r0, [r0, #4]
 188:	str	r0, [fp, #-24]	; 0xffffffe8
 18c:	b	19c <bst_remove_impl+0xf0>
 190:	ldr	r0, [fp, #-8]
 194:	ldr	r0, [r0, #8]
 198:	str	r0, [fp, #-24]	; 0xffffffe8
 19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 1a0:	str	r0, [fp, #-16]
 1a4:	ldr	r0, [fp, #-16]
 1a8:	movw	r1, #0
 1ac:	cmp	r0, r1
 1b0:	bne	1c8 <bst_remove_impl+0x11c>
 1b4:	ldr	r0, [fp, #-8]
 1b8:	str	r0, [fp, #-16]
 1bc:	movw	r0, #0
 1c0:	str	r0, [fp, #-8]
 1c4:	b	248 <bst_remove_impl+0x19c>
 1c8:	ldr	r0, [fp, #-8]
 1cc:	ldr	r0, [r0]
 1d0:	ldr	r1, [fp, #-16]
 1d4:	ldr	r1, [r1]
 1d8:	str	r0, [sp, #28]
 1dc:	mov	r0, r1
 1e0:	bl	0 <strlen>
 1e4:	add	r0, r0, #1
 1e8:	mov	r1, r0
 1ec:	ldr	lr, [sp, #28]
 1f0:	str	r0, [sp, #24]
 1f4:	mov	r0, lr
 1f8:	ldr	r2, [sp, #24]
 1fc:	str	r1, [sp, #20]
 200:	mov	r1, r2
 204:	bl	0 <realloc>
 208:	ldr	r1, [fp, #-8]
 20c:	str	r0, [r1]
 210:	ldr	r0, [fp, #-8]
 214:	ldr	r0, [r0]
 218:	ldr	r1, [fp, #-16]
 21c:	ldr	r1, [r1]
 220:	bl	0 <strcpy>
 224:	ldr	r1, [fp, #-16]
 228:	ldr	r1, [r1, #4]
 22c:	ldr	r2, [fp, #-8]
 230:	str	r1, [r2, #4]
 234:	ldr	r1, [fp, #-16]
 238:	ldr	r1, [r1, #8]
 23c:	ldr	r2, [fp, #-8]
 240:	str	r1, [r2, #8]
 244:	str	r0, [sp, #16]
 248:	ldr	r0, [fp, #-16]
 24c:	ldr	r0, [r0]
 250:	bl	0 <free>
 254:	ldr	r0, [fp, #-16]
 258:	bl	0 <free>
 25c:	b	2f0 <bst_remove_impl+0x244>
 260:	ldr	r0, [fp, #-8]
 264:	ldr	r0, [r0, #8]
 268:	bl	5e4 <bst_no_valormin>
 26c:	str	r0, [fp, #-20]	; 0xffffffec
 270:	ldr	r0, [fp, #-8]
 274:	ldr	r0, [r0]
 278:	ldr	lr, [fp, #-20]	; 0xffffffec
 27c:	ldr	lr, [lr]
 280:	str	r0, [sp, #12]
 284:	mov	r0, lr
 288:	bl	0 <strlen>
 28c:	add	r0, r0, #1
 290:	mov	lr, r0
 294:	ldr	r1, [sp, #12]
 298:	str	r0, [sp, #8]
 29c:	mov	r0, r1
 2a0:	ldr	r1, [sp, #8]
 2a4:	str	lr, [sp, #4]
 2a8:	bl	0 <realloc>
 2ac:	ldr	r1, [fp, #-8]
 2b0:	str	r0, [r1]
 2b4:	ldr	r0, [fp, #-8]
 2b8:	ldr	r0, [r0]
 2bc:	ldr	r1, [fp, #-20]	; 0xffffffec
 2c0:	ldr	r1, [r1]
 2c4:	bl	0 <strcpy>
 2c8:	ldr	r1, [fp, #-8]
 2cc:	ldr	r1, [r1, #8]
 2d0:	ldr	lr, [fp, #-20]	; 0xffffffec
 2d4:	ldr	lr, [lr]
 2d8:	str	r0, [sp]
 2dc:	mov	r0, r1
 2e0:	mov	r1, lr
 2e4:	bl	ac <bst_remove_impl>
 2e8:	ldr	r1, [fp, #-8]
 2ec:	str	r0, [r1, #8]
 2f0:	b	2f4 <bst_remove_impl+0x248>
 2f4:	b	2f8 <bst_remove_impl+0x24c>
 2f8:	ldr	r0, [fp, #-8]
 2fc:	str	r0, [fp, #-4]
 300:	ldr	r0, [fp, #-4]
 304:	mov	sp, fp
 308:	pop	{fp, pc}

0000030c <bst_pesquisa>:
 30c:	push	{fp, lr}
 310:	mov	fp, sp
 314:	sub	sp, sp, #16
 318:	str	r0, [sp, #8]
 31c:	str	r1, [sp, #4]
 320:	ldr	r0, [sp, #8]
 324:	movw	r1, #0
 328:	cmp	r0, r1
 32c:	beq	340 <bst_pesquisa+0x34>
 330:	ldr	r0, [sp, #4]
 334:	movw	r1, #0
 338:	cmp	r0, r1
 33c:	bne	34c <bst_pesquisa+0x40>
 340:	movw	r0, #0
 344:	str	r0, [fp, #-4]
 348:	b	360 <bst_pesquisa+0x54>
 34c:	ldr	r0, [sp, #8]
 350:	ldr	r0, [r0]
 354:	ldr	r1, [sp, #4]
 358:	bl	36c <bst_pesquisa_impl>
 35c:	str	r0, [fp, #-4]
 360:	ldr	r0, [fp, #-4]
 364:	mov	sp, fp
 368:	pop	{fp, pc}

0000036c <bst_pesquisa_impl>:
 36c:	push	{fp, lr}
 370:	mov	fp, sp
 374:	sub	sp, sp, #16
 378:	str	r0, [sp, #8]
 37c:	str	r1, [sp, #4]
 380:	ldr	r0, [sp, #8]
 384:	movw	r1, #0
 388:	cmp	r0, r1
 38c:	bne	39c <bst_pesquisa_impl+0x30>
 390:	movw	r0, #0
 394:	str	r0, [fp, #-4]
 398:	b	404 <bst_pesquisa_impl+0x98>
 39c:	ldr	r0, [sp, #4]
 3a0:	ldr	r1, [sp, #8]
 3a4:	ldr	r1, [r1]
 3a8:	bl	0 <strcmp>
 3ac:	cmp	r0, #0
 3b0:	bge	3cc <bst_pesquisa_impl+0x60>
 3b4:	ldr	r0, [sp, #8]
 3b8:	ldr	r0, [r0, #4]
 3bc:	ldr	r1, [sp, #4]
 3c0:	bl	36c <bst_pesquisa_impl>
 3c4:	str	r0, [fp, #-4]
 3c8:	b	404 <bst_pesquisa_impl+0x98>
 3cc:	ldr	r0, [sp, #4]
 3d0:	ldr	r1, [sp, #8]
 3d4:	ldr	r1, [r1]
 3d8:	bl	0 <strcmp>
 3dc:	cmp	r0, #0
 3e0:	ble	3fc <bst_pesquisa_impl+0x90>
 3e4:	ldr	r0, [sp, #8]
 3e8:	ldr	r0, [r0, #8]
 3ec:	ldr	r1, [sp, #4]
 3f0:	bl	36c <bst_pesquisa_impl>
 3f4:	str	r0, [fp, #-4]
 3f8:	b	404 <bst_pesquisa_impl+0x98>
 3fc:	ldr	r0, [sp, #8]
 400:	str	r0, [fp, #-4]
 404:	ldr	r0, [fp, #-4]
 408:	mov	sp, fp
 40c:	pop	{fp, pc}

00000410 <bst_insere>:
 410:	push	{fp, lr}
 414:	mov	fp, sp
 418:	sub	sp, sp, #16
 41c:	str	r0, [sp, #8]
 420:	str	r1, [sp, #4]
 424:	ldr	r0, [sp, #8]
 428:	movw	r1, #0
 42c:	cmp	r0, r1
 430:	beq	444 <bst_insere+0x34>
 434:	ldr	r0, [sp, #4]
 438:	movw	r1, #0
 43c:	cmp	r0, r1
 440:	bne	450 <bst_insere+0x40>
 444:	mvn	r0, #0
 448:	str	r0, [fp, #-4]
 44c:	b	470 <bst_insere+0x60>
 450:	ldr	r0, [sp, #8]
 454:	ldr	r0, [r0]
 458:	ldr	r1, [sp, #4]
 45c:	bl	47c <bst_insere_impl>
 460:	ldr	r1, [sp, #8]
 464:	str	r0, [r1]
 468:	movw	r0, #0
 46c:	str	r0, [fp, #-4]
 470:	ldr	r0, [fp, #-4]
 474:	mov	sp, fp
 478:	pop	{fp, pc}

0000047c <bst_insere_impl>:
 47c:	push	{fp, lr}
 480:	mov	fp, sp
 484:	sub	sp, sp, #16
 488:	str	r0, [sp, #8]
 48c:	str	r1, [sp, #4]
 490:	ldr	r0, [sp, #8]
 494:	movw	r1, #0
 498:	cmp	r0, r1
 49c:	bne	4b0 <bst_insere_impl+0x34>
 4a0:	ldr	r0, [sp, #4]
 4a4:	bl	76c <bst_novo_no>
 4a8:	str	r0, [fp, #-4]
 4ac:	b	520 <bst_insere_impl+0xa4>
 4b0:	ldr	r0, [sp, #4]
 4b4:	ldr	r1, [sp, #8]
 4b8:	ldr	r1, [r1]
 4bc:	bl	0 <strcmp>
 4c0:	cmp	r0, #0
 4c4:	bge	4e4 <bst_insere_impl+0x68>
 4c8:	ldr	r0, [sp, #8]
 4cc:	ldr	r0, [r0, #4]
 4d0:	ldr	r1, [sp, #4]
 4d4:	bl	47c <bst_insere_impl>
 4d8:	ldr	r1, [sp, #8]
 4dc:	str	r0, [r1, #4]
 4e0:	b	518 <bst_insere_impl+0x9c>
 4e4:	ldr	r0, [sp, #4]
 4e8:	ldr	r1, [sp, #8]
 4ec:	ldr	r1, [r1]
 4f0:	bl	0 <strcmp>
 4f4:	cmp	r0, #0
 4f8:	ble	514 <bst_insere_impl+0x98>
 4fc:	ldr	r0, [sp, #8]
 500:	ldr	r0, [r0, #8]
 504:	ldr	r1, [sp, #4]
 508:	bl	47c <bst_insere_impl>
 50c:	ldr	r1, [sp, #8]
 510:	str	r0, [r1, #8]
 514:	b	518 <bst_insere_impl+0x9c>
 518:	ldr	r0, [sp, #8]
 51c:	str	r0, [fp, #-4]
 520:	ldr	r0, [fp, #-4]
 524:	mov	sp, fp
 528:	pop	{fp, pc}

0000052c <bst_remove>:
 52c:	push	{fp, lr}
 530:	mov	fp, sp
 534:	sub	sp, sp, #16
 538:	str	r0, [sp, #8]
 53c:	str	r1, [sp, #4]
 540:	ldr	r0, [sp, #8]
 544:	movw	r1, #0
 548:	cmp	r0, r1
 54c:	beq	560 <bst_remove+0x34>
 550:	ldr	r0, [sp, #4]
 554:	movw	r1, #0
 558:	cmp	r0, r1
 55c:	bne	56c <bst_remove+0x40>
 560:	mvn	r0, #0
 564:	str	r0, [fp, #-4]
 568:	b	58c <bst_remove+0x60>
 56c:	ldr	r0, [sp, #8]
 570:	ldr	r0, [r0]
 574:	ldr	r1, [sp, #4]
 578:	bl	ac <bst_remove_impl>
 57c:	ldr	r1, [sp, #8]
 580:	str	r0, [r1]
 584:	movw	r0, #0
 588:	str	r0, [fp, #-4]
 58c:	ldr	r0, [fp, #-4]
 590:	mov	sp, fp
 594:	pop	{fp, pc}

00000598 <bst_min>:
 598:	push	{fp, lr}
 59c:	mov	fp, sp
 5a0:	sub	sp, sp, #8
 5a4:	str	r0, [sp]
 5a8:	ldr	r0, [sp]
 5ac:	movw	r1, #0
 5b0:	cmp	r0, r1
 5b4:	bne	5c4 <bst_min+0x2c>
 5b8:	movw	r0, #0
 5bc:	str	r0, [sp, #4]
 5c0:	b	5d8 <bst_min+0x40>
 5c4:	ldr	r0, [sp]
 5c8:	ldr	r0, [r0]
 5cc:	bl	5e4 <bst_no_valormin>
 5d0:	ldr	r0, [r0]
 5d4:	str	r0, [sp, #4]
 5d8:	ldr	r0, [sp, #4]
 5dc:	mov	sp, fp
 5e0:	pop	{fp, pc}

000005e4 <bst_no_valormin>:
 5e4:	sub	sp, sp, #8
 5e8:	str	r0, [sp, #4]
 5ec:	ldr	r0, [sp, #4]
 5f0:	str	r0, [sp]
 5f4:	ldr	r0, [sp]
 5f8:	ldr	r0, [r0, #4]
 5fc:	movw	r1, #0
 600:	cmp	r0, r1
 604:	beq	618 <bst_no_valormin+0x34>
 608:	ldr	r0, [sp]
 60c:	ldr	r0, [r0, #4]
 610:	str	r0, [sp]
 614:	b	5f4 <bst_no_valormin+0x10>
 618:	ldr	r0, [sp]
 61c:	add	sp, sp, #8
 620:	bx	lr

00000624 <bst_max>:
 624:	push	{fp, lr}
 628:	mov	fp, sp
 62c:	sub	sp, sp, #8
 630:	str	r0, [sp]
 634:	ldr	r0, [sp]
 638:	movw	r1, #0
 63c:	cmp	r0, r1
 640:	bne	650 <bst_max+0x2c>
 644:	movw	r0, #0
 648:	str	r0, [sp, #4]
 64c:	b	664 <bst_max+0x40>
 650:	ldr	r0, [sp]
 654:	ldr	r0, [r0]
 658:	bl	670 <bst_no_valormax>
 65c:	ldr	r0, [r0]
 660:	str	r0, [sp, #4]
 664:	ldr	r0, [sp, #4]
 668:	mov	sp, fp
 66c:	pop	{fp, pc}

00000670 <bst_no_valormax>:
 670:	sub	sp, sp, #8
 674:	str	r0, [sp, #4]
 678:	ldr	r0, [sp, #4]
 67c:	str	r0, [sp]
 680:	ldr	r0, [sp]
 684:	ldr	r0, [r0, #8]
 688:	movw	r1, #0
 68c:	cmp	r0, r1
 690:	beq	6a4 <bst_no_valormax+0x34>
 694:	ldr	r0, [sp]
 698:	ldr	r0, [r0, #8]
 69c:	str	r0, [sp]
 6a0:	b	680 <bst_no_valormax+0x10>
 6a4:	ldr	r0, [sp]
 6a8:	add	sp, sp, #8
 6ac:	bx	lr

000006b0 <bst_imprime>:
 6b0:	push	{fp, lr}
 6b4:	mov	fp, sp
 6b8:	sub	sp, sp, #16
 6bc:	str	r0, [fp, #-4]
 6c0:	ldr	r0, [fp, #-4]
 6c4:	movw	r1, #0
 6c8:	cmp	r0, r1
 6cc:	bne	6d4 <bst_imprime+0x24>
 6d0:	b	704 <bst_imprime+0x54>
 6d4:	movw	r0, #0
 6d8:	movt	r0, #0
 6dc:	bl	0 <printf>
 6e0:	ldr	lr, [fp, #-4]
 6e4:	ldr	lr, [lr]
 6e8:	str	r0, [sp, #8]
 6ec:	mov	r0, lr
 6f0:	bl	70c <bst_preordem_impl>
 6f4:	movw	r0, #0
 6f8:	movt	r0, #0
 6fc:	bl	0 <printf>
 700:	str	r0, [sp, #4]
 704:	mov	sp, fp
 708:	pop	{fp, pc}

0000070c <bst_preordem_impl>:
 70c:	push	{fp, lr}
 710:	mov	fp, sp
 714:	sub	sp, sp, #8
 718:	str	r0, [sp, #4]
 71c:	ldr	r0, [sp, #4]
 720:	movw	r1, #0
 724:	cmp	r0, r1
 728:	bne	730 <bst_preordem_impl+0x24>
 72c:	b	764 <bst_preordem_impl+0x58>
 730:	ldr	r0, [sp, #4]
 734:	ldr	r1, [r0]
 738:	movw	r0, #0
 73c:	movt	r0, #0
 740:	bl	0 <printf>
 744:	ldr	r1, [sp, #4]
 748:	ldr	r1, [r1, #4]
 74c:	str	r0, [sp]
 750:	mov	r0, r1
 754:	bl	70c <bst_preordem_impl>
 758:	ldr	r0, [sp, #4]
 75c:	ldr	r0, [r0, #8]
 760:	bl	70c <bst_preordem_impl>
 764:	mov	sp, fp
 768:	pop	{fp, pc}

0000076c <bst_novo_no>:
 76c:	push	{fp, lr}
 770:	mov	fp, sp
 774:	sub	sp, sp, #16
 778:	str	r0, [fp, #-4]
 77c:	mov	r0, #12
 780:	bl	0 <malloc>
 784:	str	r0, [sp, #8]
 788:	ldr	r0, [fp, #-4]
 78c:	bl	0 <strlen>
 790:	add	r0, r0, #1
 794:	mov	lr, r0
 798:	str	lr, [sp, #4]
 79c:	bl	0 <malloc>
 7a0:	ldr	lr, [sp, #8]
 7a4:	str	r0, [lr]
 7a8:	ldr	r0, [sp, #8]
 7ac:	ldr	r0, [r0]
 7b0:	ldr	r1, [fp, #-4]
 7b4:	bl	0 <strcpy>
 7b8:	ldr	r1, [sp, #8]
 7bc:	movw	lr, #0
 7c0:	str	lr, [r1, #4]
 7c4:	ldr	r1, [sp, #8]
 7c8:	str	lr, [r1, #8]
 7cc:	ldr	r1, [sp, #8]
 7d0:	str	r0, [sp]
 7d4:	mov	r0, r1
 7d8:	mov	sp, fp
 7dc:	pop	{fp, pc}

000007e0 <bst_altura>:
 7e0:	push	{fp, lr}
 7e4:	mov	fp, sp
 7e8:	sub	sp, sp, #16
 7ec:	str	r0, [sp, #8]
 7f0:	movw	r0, #0
 7f4:	str	r0, [sp, #4]
 7f8:	str	r0, [sp]
 7fc:	ldr	r1, [sp, #8]
 800:	cmp	r1, r0
 804:	bne	814 <bst_altura+0x34>
 808:	mvn	r0, #0
 80c:	str	r0, [fp, #-4]
 810:	b	8a4 <bst_altura+0xc4>
 814:	ldr	r0, [sp, #8]
 818:	ldr	r0, [r0, #8]
 81c:	movw	r1, #0
 820:	cmp	r0, r1
 824:	bne	848 <bst_altura+0x68>
 828:	ldr	r0, [sp, #8]
 82c:	ldr	r0, [r0, #4]
 830:	movw	r1, #0
 834:	cmp	r0, r1
 838:	bne	848 <bst_altura+0x68>
 83c:	movw	r0, #0
 840:	str	r0, [fp, #-4]
 844:	b	8a4 <bst_altura+0xc4>
 848:	ldr	r0, [sp, #8]
 84c:	ldr	r0, [r0, #4]
 850:	bl	7e0 <bst_altura>
 854:	str	r0, [sp, #4]
 858:	ldr	r0, [sp, #8]
 85c:	ldr	r0, [r0, #8]
 860:	bl	7e0 <bst_altura>
 864:	str	r0, [sp]
 868:	ldr	r0, [sp, #4]
 86c:	ldr	lr, [sp]
 870:	cmp	r0, lr
 874:	ble	890 <bst_altura+0xb0>
 878:	ldr	r0, [sp, #8]
 87c:	ldr	r0, [r0, #4]
 880:	bl	7e0 <bst_altura>
 884:	add	r0, r0, #1
 888:	str	r0, [fp, #-4]
 88c:	b	8a4 <bst_altura+0xc4>
 890:	ldr	r0, [sp, #8]
 894:	ldr	r0, [r0, #8]
 898:	bl	7e0 <bst_altura>
 89c:	add	r0, r0, #1
 8a0:	str	r0, [fp, #-4]
 8a4:	ldr	r0, [fp, #-4]
 8a8:	mov	sp, fp
 8ac:	pop	{fp, pc}
