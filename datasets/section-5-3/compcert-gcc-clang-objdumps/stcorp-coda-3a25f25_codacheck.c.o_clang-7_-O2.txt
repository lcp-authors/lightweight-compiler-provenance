
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacheck.dir/tools/codacheck/codacheck.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #1004	; 0x3ec
   c:	mov	r4, r1
  10:	movw	r1, #0
  14:	mov	r5, r0
  18:	mov	r0, #0
  1c:	movw	r9, #0
  20:	movt	r1, #0
  24:	movt	r9, #0
  28:	cmp	r5, #1
  2c:	str	r0, [r1]
  30:	movw	r1, #0
  34:	str	r0, [r9]
  38:	movt	r1, #0
  3c:	str	r0, [r1]
  40:	beq	398 <main+0x398>
  44:	ldr	r6, [r4, #4]
  48:	movw	r1, #0
  4c:	movt	r1, #0
  50:	mov	r0, r6
  54:	bl	0 <strcmp>
  58:	cmp	r0, #0
  5c:	beq	398 <main+0x398>
  60:	movw	r1, #0
  64:	mov	r0, r6
  68:	movt	r1, #0
  6c:	bl	0 <strcmp>
  70:	cmp	r0, #0
  74:	beq	398 <main+0x398>
  78:	movw	r1, #0
  7c:	mov	r0, r6
  80:	movt	r1, #0
  84:	bl	0 <strcmp>
  88:	cmp	r0, #0
  8c:	beq	3a4 <main+0x3a4>
  90:	movw	r1, #0
  94:	mov	r0, r6
  98:	movt	r1, #0
  9c:	bl	0 <strcmp>
  a0:	cmp	r0, #0
  a4:	beq	3a4 <main+0x3a4>
  a8:	cmp	r5, #3
  ac:	blt	c8 <main+0xc8>
  b0:	movw	r1, #0
  b4:	mov	r0, r6
  b8:	movt	r1, #0
  bc:	bl	0 <strcmp>
  c0:	cmp	r0, #0
  c4:	beq	324 <main+0x324>
  c8:	ldr	r0, [r4]
  cc:	movw	r2, #0
  d0:	mov	r1, #0
  d4:	movt	r2, #0
  d8:	bl	0 <coda_set_definition_path_conditional>
  dc:	mov	r8, #1
  e0:	cmp	r0, #0
  e4:	bne	3b0 <main+0x3b0>
  e8:	mov	sl, #0
  ec:	mov	r6, #1
  f0:	cmp	r8, r5
  f4:	bge	200 <main+0x200>
  f8:	movw	r7, #0
  fc:	mov	r6, #1
 100:	movt	r7, #0
 104:	ldr	sl, [r4, r8, lsl #2]
 108:	mov	r1, r7
 10c:	mov	r0, sl
 110:	bl	0 <strcmp>
 114:	cmp	r0, #0
 118:	mov	r0, r9
 11c:	beq	1dc <main+0x1dc>
 120:	movw	r1, #0
 124:	mov	r0, sl
 128:	movt	r1, #0
 12c:	bl	0 <strcmp>
 130:	cmp	r0, #0
 134:	mov	r0, r9
 138:	beq	1dc <main+0x1dc>
 13c:	movw	r1, #0
 140:	mov	r0, sl
 144:	movt	r1, #0
 148:	bl	0 <strcmp>
 14c:	cmp	r0, #0
 150:	movw	r0, #0
 154:	movt	r0, #0
 158:	beq	1dc <main+0x1dc>
 15c:	movw	r1, #0
 160:	mov	r0, sl
 164:	movt	r1, #0
 168:	bl	0 <strcmp>
 16c:	cmp	r0, #0
 170:	movw	r0, #0
 174:	movt	r0, #0
 178:	beq	1dc <main+0x1dc>
 17c:	movw	r1, #0
 180:	mov	r0, sl
 184:	movt	r1, #0
 188:	bl	0 <strcmp>
 18c:	cmp	r0, #0
 190:	movw	r0, #0
 194:	movt	r0, #0
 198:	beq	1dc <main+0x1dc>
 19c:	movw	r1, #0
 1a0:	mov	r0, sl
 1a4:	movt	r1, #0
 1a8:	bl	0 <strcmp>
 1ac:	cmp	r0, #0
 1b0:	movw	r0, #0
 1b4:	movt	r0, #0
 1b8:	beq	1dc <main+0x1dc>
 1bc:	movw	r1, #0
 1c0:	mov	r0, sl
 1c4:	movt	r1, #0
 1c8:	bl	0 <strcmp>
 1cc:	mov	r1, #0
 1d0:	cmp	r0, #0
 1d4:	beq	1e8 <main+0x1e8>
 1d8:	b	334 <main+0x334>
 1dc:	mov	r1, #1
 1e0:	str	r1, [r0]
 1e4:	mov	r1, r6
 1e8:	add	r8, r8, #1
 1ec:	mov	r6, r1
 1f0:	cmp	r8, r5
 1f4:	blt	104 <main+0x104>
 1f8:	mov	r6, r1
 1fc:	mov	sl, #0
 200:	bl	0 <coda_init>
 204:	cmp	r0, #0
 208:	bne	3b0 <main+0x3b0>
 20c:	mov	r0, #0
 210:	mov	r7, #0
 214:	bl	0 <coda_set_option_perform_boundary_checks>
 218:	mov	r0, #0
 21c:	bl	0 <coda_set_option_perform_conversions>
 220:	mov	r0, r6
 224:	bl	0 <coda_set_option_use_mmap>
 228:	cmp	sl, #0
 22c:	beq	2d4 <main+0x2d4>
 230:	movw	r5, #0
 234:	mov	r4, sp
 238:	movt	r5, #0
 23c:	b	254 <main+0x254>
 240:	mov	r0, r4
 244:	bl	3e4 <check_file>
 248:	mov	r0, #0
 24c:	mov	r7, #0
 250:	bl	0 <fflush>
 254:	ldr	r0, [r5]
 258:	bl	0 <getc>
 25c:	uxtb	r1, r0
 260:	cmp	r1, #10
 264:	beq	28c <main+0x28c>
 268:	cmp	r1, #13
 26c:	bne	2a4 <main+0x2a4>
 270:	ldr	r0, [r5]
 274:	bl	0 <getc>
 278:	uxtb	r0, r0
 27c:	cmp	r0, #10
 280:	beq	28c <main+0x28c>
 284:	ldr	r1, [r5]
 288:	bl	0 <ungetc>
 28c:	mov	r0, #0
 290:	cmp	r7, #0
 294:	strb	r0, [r4, r7]
 298:	mov	r7, #0
 29c:	beq	254 <main+0x254>
 2a0:	b	240 <main+0x240>
 2a4:	strb	r0, [r4, r7]
 2a8:	add	r7, r7, #1
 2ac:	cmp	r7, #1000	; 0x3e8
 2b0:	bcc	254 <main+0x254>
 2b4:	movw	r0, #0
 2b8:	movw	r1, #0
 2bc:	movw	r3, #0
 2c0:	mov	r2, #316	; 0x13c
 2c4:	movt	r0, #0
 2c8:	movt	r1, #0
 2cc:	movt	r3, #0
 2d0:	bl	0 <__assert_fail>
 2d4:	cmp	r8, r5
 2d8:	bge	2fc <main+0x2fc>
 2dc:	sub	r5, r5, r8
 2e0:	add	r4, r4, r8, lsl #2
 2e4:	ldr	r0, [r4], #4
 2e8:	bl	3e4 <check_file>
 2ec:	mov	r0, #0
 2f0:	bl	0 <fflush>
 2f4:	subs	r5, r5, #1
 2f8:	bne	2e4 <main+0x2e4>
 2fc:	bl	0 <coda_done>
 300:	movw	r0, #0
 304:	movt	r0, #0
 308:	ldr	r0, [r0]
 30c:	cmp	r0, #0
 310:	moveq	r0, #0
 314:	subeq	sp, fp, #28
 318:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 31c:	mov	r0, #1
 320:	bl	0 <exit>
 324:	ldr	r0, [r4, #8]
 328:	bl	0 <coda_set_definition_path>
 32c:	mov	r8, #3
 330:	b	e8 <main+0xe8>
 334:	movw	r1, #0
 338:	mov	r0, sl
 33c:	movt	r1, #0
 340:	bl	0 <strcmp>
 344:	sub	r1, r5, #1
 348:	cmp	r1, r8
 34c:	cmpeq	r0, #0
 350:	beq	390 <main+0x390>
 354:	ldrb	r0, [sl]
 358:	mov	sl, #0
 35c:	cmp	r0, #45	; 0x2d
 360:	bne	200 <main+0x200>
 364:	movw	r0, #0
 368:	mov	r1, #25
 36c:	mov	r2, #1
 370:	movt	r0, #0
 374:	ldr	r3, [r0]
 378:	movw	r0, #0
 37c:	movt	r0, #0
 380:	bl	0 <fwrite>
 384:	bl	608 <print_help>
 388:	mov	r0, #1
 38c:	bl	0 <exit>
 390:	mov	sl, #1
 394:	b	200 <main+0x200>
 398:	bl	608 <print_help>
 39c:	mov	r0, #0
 3a0:	bl	0 <exit>
 3a4:	bl	78c <print_version>
 3a8:	mov	r0, #0
 3ac:	bl	0 <exit>
 3b0:	movw	r0, #0
 3b4:	movt	r0, #0
 3b8:	ldr	r4, [r0]
 3bc:	bl	0 <coda_get_errno>
 3c0:	ldr	r0, [r0]
 3c4:	bl	0 <coda_errno_to_string>
 3c8:	movw	r1, #0
 3cc:	mov	r2, r0
 3d0:	mov	r0, r4
 3d4:	movt	r1, #0
 3d8:	bl	0 <fprintf>
 3dc:	mov	r0, #1
 3e0:	bl	0 <exit>

000003e4 <check_file>:
 3e4:	push	{r4, sl, fp, lr}
 3e8:	add	fp, sp, #8
 3ec:	sub	sp, sp, #40	; 0x28
 3f0:	mov	r4, r0
 3f4:	bl	0 <puts>
 3f8:	add	r0, sp, #12
 3fc:	add	r1, sp, #16
 400:	sub	r2, fp, #16
 404:	add	r3, sp, #20
 408:	str	r1, [sp]
 40c:	str	r0, [sp, #4]
 410:	add	r1, sp, #24
 414:	mov	r0, r4
 418:	bl	0 <coda_recognize_file>
 41c:	cmp	r0, #0
 420:	beq	450 <check_file+0x6c>
 424:	bl	0 <coda_get_errno>
 428:	ldr	r0, [r0]
 42c:	bl	0 <coda_errno_to_string>
 430:	mov	r1, r0
 434:	movw	r0, #0
 438:	movt	r0, #0
 43c:	bl	0 <printf>
 440:	mov	r0, #0
 444:	mov	r1, #0
 448:	bl	0 <coda_set_error>
 44c:	b	548 <check_file+0x164>
 450:	movw	r0, #0
 454:	movt	r0, #0
 458:	ldr	r0, [r0]
 45c:	cmp	r0, #0
 460:	beq	488 <check_file+0xa4>
 464:	ldr	r0, [sp, #20]
 468:	cmp	r0, #0
 46c:	ldrne	r0, [sp, #16]
 470:	cmpne	r0, #0
 474:	bne	488 <check_file+0xa4>
 478:	movw	r0, #0
 47c:	movt	r0, #0
 480:	bl	0 <puts>
 484:	b	548 <check_file+0x164>
 488:	movw	r0, #0
 48c:	movt	r0, #0
 490:	ldr	r0, [r0]
 494:	cmp	r0, #0
 498:	beq	4e0 <check_file+0xfc>
 49c:	ldr	r0, [fp, #-16]
 4a0:	bl	0 <coda_type_get_format_name>
 4a4:	mov	r1, r0
 4a8:	movw	r0, #0
 4ac:	movt	r0, #0
 4b0:	bl	0 <printf>
 4b4:	ldr	r1, [sp, #20]
 4b8:	cmp	r1, #0
 4bc:	ldrne	r2, [sp, #16]
 4c0:	cmpne	r2, #0
 4c4:	beq	4d8 <check_file+0xf4>
 4c8:	ldr	r3, [sp, #12]
 4cc:	movw	r0, #0
 4d0:	movt	r0, #0
 4d4:	bl	0 <printf>
 4d8:	mov	r0, #10
 4dc:	bl	0 <putchar>
 4e0:	sub	r1, fp, #12
 4e4:	mov	r0, r4
 4e8:	bl	0 <coda_open>
 4ec:	cmp	r0, #0
 4f0:	beq	560 <check_file+0x17c>
 4f4:	bl	0 <coda_get_errno>
 4f8:	ldr	r0, [r0]
 4fc:	cmn	r0, #21
 500:	bne	52c <check_file+0x148>
 504:	mov	r0, #0
 508:	bl	0 <coda_set_option_use_mmap>
 50c:	sub	r1, fp, #12
 510:	mov	r0, r4
 514:	bl	0 <coda_open>
 518:	mov	r4, r0
 51c:	mov	r0, #1
 520:	bl	0 <coda_set_option_use_mmap>
 524:	cmp	r4, #0
 528:	beq	560 <check_file+0x17c>
 52c:	bl	0 <coda_get_errno>
 530:	ldr	r0, [r0]
 534:	bl	0 <coda_errno_to_string>
 538:	mov	r1, r0
 53c:	movw	r0, #0
 540:	movt	r0, #0
 544:	bl	0 <printf>
 548:	movw	r0, #0
 54c:	mov	r1, #1
 550:	movt	r0, #0
 554:	str	r1, [r0]
 558:	sub	sp, fp, #8
 55c:	pop	{r4, sl, fp, pc}
 560:	movw	r0, #0
 564:	movw	r2, #0
 568:	mov	r3, #0
 56c:	movt	r0, #0
 570:	movt	r2, #0
 574:	ldr	r1, [r0]
 578:	ldr	r0, [fp, #-12]
 57c:	clz	r1, r1
 580:	lsr	r1, r1, #5
 584:	bl	0 <coda_product_check>
 588:	cmp	r0, #0
 58c:	beq	5cc <check_file+0x1e8>
 590:	bl	0 <coda_get_errno>
 594:	ldr	r0, [r0]
 598:	bl	0 <coda_errno_to_string>
 59c:	mov	r1, r0
 5a0:	movw	r0, #0
 5a4:	movt	r0, #0
 5a8:	bl	0 <printf>
 5ac:	movw	r0, #0
 5b0:	mov	r1, #1
 5b4:	movt	r0, #0
 5b8:	str	r1, [r0]
 5bc:	ldr	r0, [fp, #-12]
 5c0:	bl	0 <coda_close>
 5c4:	sub	sp, fp, #8
 5c8:	pop	{r4, sl, fp, pc}
 5cc:	ldr	r0, [fp, #-12]
 5d0:	bl	0 <coda_close>
 5d4:	cmp	r0, #0
 5d8:	beq	5f8 <check_file+0x214>
 5dc:	bl	0 <coda_get_errno>
 5e0:	ldr	r0, [r0]
 5e4:	bl	0 <coda_errno_to_string>
 5e8:	mov	r1, r0
 5ec:	movw	r0, #0
 5f0:	movt	r0, #0
 5f4:	b	544 <check_file+0x160>
 5f8:	mov	r0, #10
 5fc:	bl	0 <putchar>
 600:	sub	sp, fp, #8
 604:	pop	{r4, sl, fp, pc}

00000608 <print_help>:
 608:	push	{fp, lr}
 60c:	mov	fp, sp
 610:	movw	r0, #0
 614:	movt	r0, #0
 618:	bl	0 <puts>
 61c:	movw	r0, #0
 620:	movt	r0, #0
 624:	bl	0 <puts>
 628:	movw	r0, #0
 62c:	movt	r0, #0
 630:	bl	0 <puts>
 634:	movw	r0, #0
 638:	movt	r0, #0
 63c:	bl	0 <puts>
 640:	movw	r0, #0
 644:	movt	r0, #0
 648:	bl	0 <puts>
 64c:	movw	r0, #0
 650:	movt	r0, #0
 654:	bl	0 <puts>
 658:	movw	r0, #0
 65c:	movt	r0, #0
 660:	bl	0 <puts>
 664:	movw	r0, #0
 668:	movt	r0, #0
 66c:	bl	0 <puts>
 670:	movw	r0, #0
 674:	movt	r0, #0
 678:	bl	0 <puts>
 67c:	movw	r0, #0
 680:	movt	r0, #0
 684:	bl	0 <puts>
 688:	movw	r0, #0
 68c:	movt	r0, #0
 690:	bl	0 <puts>
 694:	movw	r0, #0
 698:	movt	r0, #0
 69c:	bl	0 <puts>
 6a0:	movw	r0, #0
 6a4:	movt	r0, #0
 6a8:	bl	0 <puts>
 6ac:	movw	r0, #0
 6b0:	movt	r0, #0
 6b4:	bl	0 <puts>
 6b8:	movw	r0, #0
 6bc:	movt	r0, #0
 6c0:	bl	0 <puts>
 6c4:	mov	r0, #10
 6c8:	bl	0 <putchar>
 6cc:	movw	r0, #0
 6d0:	movt	r0, #0
 6d4:	bl	0 <puts>
 6d8:	movw	r0, #0
 6dc:	movt	r0, #0
 6e0:	bl	0 <puts>
 6e4:	mov	r0, #10
 6e8:	bl	0 <putchar>
 6ec:	movw	r0, #0
 6f0:	movt	r0, #0
 6f4:	bl	0 <puts>
 6f8:	movw	r0, #0
 6fc:	movt	r0, #0
 700:	bl	0 <puts>
 704:	mov	r0, #10
 708:	bl	0 <putchar>
 70c:	movw	r0, #0
 710:	movt	r0, #0
 714:	bl	0 <puts>
 718:	movw	r0, #0
 71c:	movt	r0, #0
 720:	bl	0 <puts>
 724:	mov	r0, #10
 728:	bl	0 <putchar>
 72c:	movw	r0, #0
 730:	movt	r0, #0
 734:	bl	0 <puts>
 738:	movw	r0, #0
 73c:	movt	r0, #0
 740:	bl	0 <puts>
 744:	movw	r0, #0
 748:	movt	r0, #0
 74c:	bl	0 <puts>
 750:	movw	r0, #0
 754:	movt	r0, #0
 758:	bl	0 <puts>
 75c:	movw	r0, #0
 760:	movt	r0, #0
 764:	bl	0 <puts>
 768:	movw	r0, #0
 76c:	movt	r0, #0
 770:	bl	0 <puts>
 774:	movw	r0, #0
 778:	movt	r0, #0
 77c:	bl	0 <puts>
 780:	mov	r0, #10
 784:	pop	{fp, lr}
 788:	b	0 <putchar>

0000078c <print_version>:
 78c:	push	{fp, lr}
 790:	mov	fp, sp
 794:	bl	0 <coda_get_libcoda_version>
 798:	mov	r1, r0
 79c:	movw	r0, #0
 7a0:	movt	r0, #0
 7a4:	bl	0 <printf>
 7a8:	movw	r0, #0
 7ac:	movt	r0, #0
 7b0:	bl	0 <puts>
 7b4:	mov	r0, #10
 7b8:	pop	{fp, lr}
 7bc:	b	0 <putchar>

000007c0 <print_error>:
 7c0:	push	{r4, sl, fp, lr}
 7c4:	add	fp, sp, #8
 7c8:	mov	r4, r0
 7cc:	movw	r0, #0
 7d0:	movt	r0, #0
 7d4:	bl	0 <printf>
 7d8:	cmp	r4, #0
 7dc:	beq	7fc <print_error+0x3c>
 7e0:	movw	r0, #0
 7e4:	movt	r0, #0
 7e8:	bl	0 <printf>
 7ec:	movw	r1, #0
 7f0:	mov	r0, r4
 7f4:	movt	r1, #0
 7f8:	bl	0 <coda_cursor_print_path>
 7fc:	mov	r0, #10
 800:	bl	0 <putchar>
 804:	movw	r0, #0
 808:	mov	r1, #1
 80c:	movt	r0, #0
 810:	str	r1, [r0]
 814:	pop	{r4, sl, fp, pc}
