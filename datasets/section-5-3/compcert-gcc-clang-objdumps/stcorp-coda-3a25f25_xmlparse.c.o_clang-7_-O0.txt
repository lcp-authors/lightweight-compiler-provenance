
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_XML_ParserCreate>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #8
       c:	str	r0, [sp, #4]
      10:	ldr	r0, [sp, #4]
      14:	movw	r1, #0
      18:	str	r1, [sp]
      1c:	ldr	r2, [sp]
      20:	bl	2c <coda_XML_ParserCreate_MM>
      24:	mov	sp, fp
      28:	pop	{fp, pc}

0000002c <coda_XML_ParserCreate_MM>:
      2c:	push	{fp, lr}
      30:	mov	fp, sp
      34:	sub	sp, sp, #16
      38:	str	r0, [fp, #-4]
      3c:	str	r1, [sp, #8]
      40:	str	r2, [sp, #4]
      44:	ldr	r0, [fp, #-4]
      48:	ldr	r1, [sp, #8]
      4c:	ldr	r2, [sp, #4]
      50:	movw	r3, #0
      54:	bl	94 <parserCreate>
      58:	mov	sp, fp
      5c:	pop	{fp, pc}

00000060 <coda_XML_ParserCreateNS>:
      60:	push	{fp, lr}
      64:	mov	fp, sp
      68:	sub	sp, sp, #8
      6c:	add	r2, sp, #1
      70:	str	r0, [sp, #4]
      74:	strb	r1, [sp, #3]
      78:	ldrb	r0, [sp, #3]
      7c:	strb	r0, [sp, #1]
      80:	ldr	r0, [sp, #4]
      84:	movw	r1, #0
      88:	bl	2c <coda_XML_ParserCreate_MM>
      8c:	mov	sp, fp
      90:	pop	{fp, pc}

00000094 <parserCreate>:
      94:	push	{fp, lr}
      98:	mov	fp, sp
      9c:	sub	sp, sp, #64	; 0x40
      a0:	str	r0, [fp, #-8]
      a4:	str	r1, [fp, #-12]
      a8:	str	r2, [fp, #-16]
      ac:	str	r3, [fp, #-20]	; 0xffffffec
      b0:	ldr	r0, [fp, #-12]
      b4:	movw	r1, #0
      b8:	cmp	r0, r1
      bc:	beq	130 <parserCreate+0x9c>
      c0:	ldr	r0, [fp, #-12]
      c4:	ldr	r0, [r0]
      c8:	movw	r1, #520	; 0x208
      cc:	str	r0, [sp, #28]
      d0:	mov	r0, r1
      d4:	ldr	r1, [sp, #28]
      d8:	blx	r1
      dc:	str	r0, [fp, #-24]	; 0xffffffe8
      e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
      e4:	movw	r1, #0
      e8:	cmp	r0, r1
      ec:	beq	12c <parserCreate+0x98>
      f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
      f4:	add	r0, r0, #12
      f8:	str	r0, [fp, #-28]	; 0xffffffe4
      fc:	ldr	r0, [fp, #-12]
     100:	ldr	r0, [r0]
     104:	ldr	r1, [fp, #-28]	; 0xffffffe4
     108:	str	r0, [r1]
     10c:	ldr	r0, [fp, #-12]
     110:	ldr	r0, [r0, #4]
     114:	ldr	r1, [fp, #-28]	; 0xffffffe4
     118:	str	r0, [r1, #4]
     11c:	ldr	r0, [fp, #-12]
     120:	ldr	r0, [r0, #8]
     124:	ldr	r1, [fp, #-28]	; 0xffffffe4
     128:	str	r0, [r1, #8]
     12c:	b	18c <parserCreate+0xf8>
     130:	movw	r0, #520	; 0x208
     134:	bl	0 <malloc>
     138:	str	r0, [fp, #-24]	; 0xffffffe8
     13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     140:	movw	lr, #0
     144:	cmp	r0, lr
     148:	beq	188 <parserCreate+0xf4>
     14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     150:	add	r0, r0, #12
     154:	str	r0, [sp, #32]
     158:	ldr	r0, [sp, #32]
     15c:	movw	r1, #0
     160:	movt	r1, #0
     164:	str	r1, [r0]
     168:	ldr	r0, [sp, #32]
     16c:	movw	r1, #0
     170:	movt	r1, #0
     174:	str	r1, [r0, #4]
     178:	ldr	r0, [sp, #32]
     17c:	movw	r1, #0
     180:	movt	r1, #0
     184:	str	r1, [r0, #8]
     188:	b	18c <parserCreate+0xf8>
     18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     190:	movw	r1, #0
     194:	cmp	r0, r1
     198:	bne	1a8 <parserCreate+0x114>
     19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1a0:	str	r0, [fp, #-4]
     1a4:	b	498 <parserCreate+0x404>
     1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1ac:	mov	r1, #0
     1b0:	str	r1, [r0, #8]
     1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1b8:	str	r1, [r0, #32]
     1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1c0:	mov	r1, #16
     1c4:	str	r1, [r0, #388]	; 0x184
     1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1cc:	ldr	r1, [r0, #12]
     1d0:	ldr	r0, [r0, #388]	; 0x184
     1d4:	lsl	r0, r0, #4
     1d8:	blx	r1
     1dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     1e0:	str	r0, [r1, #400]	; 0x190
     1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1e8:	ldr	r0, [r0, #400]	; 0x190
     1ec:	movw	r1, #0
     1f0:	cmp	r0, r1
     1f4:	bne	220 <parserCreate+0x18c>
     1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1fc:	ldr	r0, [r0, #20]
     200:	ldr	r1, [fp, #-24]	; 0xffffffe8
     204:	str	r0, [sp, #24]
     208:	mov	r0, r1
     20c:	ldr	r1, [sp, #24]
     210:	blx	r1
     214:	movw	r0, #0
     218:	str	r0, [fp, #-4]
     21c:	b	498 <parserCreate+0x404>
     220:	ldr	r0, [fp, #-24]	; 0xffffffe8
     224:	ldr	r0, [r0, #12]
     228:	movw	r1, #1024	; 0x400
     22c:	str	r0, [sp, #20]
     230:	mov	r0, r1
     234:	ldr	r1, [sp, #20]
     238:	blx	r1
     23c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     240:	str	r0, [r1, #52]	; 0x34
     244:	ldr	r0, [fp, #-24]	; 0xffffffe8
     248:	ldr	r0, [r0, #52]	; 0x34
     24c:	movw	r1, #0
     250:	cmp	r0, r1
     254:	bne	2a0 <parserCreate+0x20c>
     258:	ldr	r0, [fp, #-24]	; 0xffffffe8
     25c:	ldr	r0, [r0, #20]
     260:	ldr	r1, [fp, #-24]	; 0xffffffe8
     264:	ldr	r1, [r1, #400]	; 0x190
     268:	str	r0, [sp, #16]
     26c:	mov	r0, r1
     270:	ldr	r1, [sp, #16]
     274:	blx	r1
     278:	ldr	r0, [fp, #-24]	; 0xffffffe8
     27c:	ldr	r0, [r0, #20]
     280:	ldr	r1, [fp, #-24]	; 0xffffffe8
     284:	str	r0, [sp, #12]
     288:	mov	r0, r1
     28c:	ldr	r1, [sp, #12]
     290:	blx	r1
     294:	movw	r0, #0
     298:	str	r0, [fp, #-4]
     29c:	b	498 <parserCreate+0x404>
     2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     2a4:	ldr	r0, [r0, #52]	; 0x34
     2a8:	add	r0, r0, #1024	; 0x400
     2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
     2b0:	str	r0, [r1, #56]	; 0x38
     2b4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2b8:	movw	r1, #0
     2bc:	cmp	r0, r1
     2c0:	beq	2d4 <parserCreate+0x240>
     2c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     2cc:	str	r0, [r1, #364]	; 0x16c
     2d0:	b	368 <parserCreate+0x2d4>
     2d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     2d8:	add	r0, r0, #12
     2dc:	bl	3d34 <dtdCreate>
     2e0:	ldr	lr, [fp, #-24]	; 0xffffffe8
     2e4:	str	r0, [lr, #364]	; 0x16c
     2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     2ec:	ldr	r0, [r0, #364]	; 0x16c
     2f0:	movw	lr, #0
     2f4:	cmp	r0, lr
     2f8:	bne	364 <parserCreate+0x2d0>
     2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     300:	ldr	r0, [r0, #20]
     304:	ldr	r1, [fp, #-24]	; 0xffffffe8
     308:	ldr	r1, [r1, #52]	; 0x34
     30c:	str	r0, [sp, #8]
     310:	mov	r0, r1
     314:	ldr	r1, [sp, #8]
     318:	blx	r1
     31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     320:	ldr	r0, [r0, #20]
     324:	ldr	r1, [fp, #-24]	; 0xffffffe8
     328:	ldr	r1, [r1, #400]	; 0x190
     32c:	str	r0, [sp, #4]
     330:	mov	r0, r1
     334:	ldr	r1, [sp, #4]
     338:	blx	r1
     33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     340:	ldr	r0, [r0, #20]
     344:	ldr	r1, [fp, #-24]	; 0xffffffe8
     348:	str	r0, [sp]
     34c:	mov	r0, r1
     350:	ldr	r1, [sp]
     354:	blx	r1
     358:	movw	r0, #0
     35c:	str	r0, [fp, #-4]
     360:	b	498 <parserCreate+0x404>
     364:	b	368 <parserCreate+0x2d4>
     368:	ldr	r0, [fp, #-24]	; 0xffffffe8
     36c:	movw	r1, #0
     370:	str	r1, [r0, #384]	; 0x180
     374:	ldr	r0, [fp, #-24]	; 0xffffffe8
     378:	str	r1, [r0, #376]	; 0x178
     37c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     380:	str	r1, [r0, #312]	; 0x138
     384:	ldr	r0, [fp, #-24]	; 0xffffffe8
     388:	str	r1, [r0, #484]	; 0x1e4
     38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     390:	str	r1, [r0, #480]	; 0x1e0
     394:	ldr	r0, [fp, #-24]	; 0xffffffe8
     398:	str	r1, [r0, #132]	; 0x84
     39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3a0:	str	r1, [r0, #256]	; 0x100
     3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3a8:	movw	r2, #33	; 0x21
     3ac:	strb	r2, [r0, #488]	; 0x1e8
     3b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3b4:	movw	r2, #0
     3b8:	strb	r2, [r0, #244]	; 0xf4
     3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3c0:	strb	r2, [r0, #245]	; 0xf5
     3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3c8:	str	r1, [r0, #404]	; 0x194
     3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3d0:	str	r1, [r0, #408]	; 0x198
     3d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3d8:	strb	r2, [r0, #412]	; 0x19c
     3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3e0:	add	r0, r0, #432	; 0x1b0
     3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     3e8:	add	r1, r1, #12
     3ec:	bl	3e78 <poolInit>
     3f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3f4:	add	r0, r0, #456	; 0x1c8
     3f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     3fc:	add	r1, r1, #12
     400:	bl	3e78 <poolInit>
     404:	ldr	r0, [fp, #-24]	; 0xffffffe8
     408:	ldr	r1, [fp, #-8]
     40c:	bl	74c <parserInit>
     410:	ldr	r0, [fp, #-8]
     414:	movw	r1, #0
     418:	cmp	r0, r1
     41c:	beq	448 <parserCreate+0x3b4>
     420:	ldr	r0, [fp, #-24]	; 0xffffffe8
     424:	ldr	r0, [r0, #240]	; 0xf0
     428:	movw	r1, #0
     42c:	cmp	r0, r1
     430:	bne	448 <parserCreate+0x3b4>
     434:	ldr	r0, [fp, #-24]	; 0xffffffe8
     438:	bl	1c68 <coda_XML_ParserFree>
     43c:	movw	r0, #0
     440:	str	r0, [fp, #-4]
     444:	b	498 <parserCreate+0x404>
     448:	ldr	r0, [fp, #-16]
     44c:	movw	r1, #0
     450:	cmp	r0, r1
     454:	beq	484 <parserCreate+0x3f0>
     458:	ldr	r0, [fp, #-24]	; 0xffffffe8
     45c:	movw	r1, #1
     460:	strb	r1, [r0, #244]	; 0xf4
     464:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
     468:	ldr	r1, [fp, #-24]	; 0xffffffe8
     46c:	str	r0, [r1, #236]	; 0xec
     470:	ldr	r0, [fp, #-16]
     474:	ldrb	r0, [r0]
     478:	ldr	r1, [fp, #-24]	; 0xffffffe8
     47c:	strb	r0, [r1, #488]	; 0x1e8
     480:	b	490 <parserCreate+0x3fc>
     484:	bl	0 <coda_XmlGetUtf8InternalEncoding>
     488:	ldr	lr, [fp, #-24]	; 0xffffffe8
     48c:	str	r0, [lr, #236]	; 0xec
     490:	ldr	r0, [fp, #-24]	; 0xffffffe8
     494:	str	r0, [fp, #-4]
     498:	ldr	r0, [fp, #-4]
     49c:	mov	sp, fp
     4a0:	pop	{fp, pc}

000004a4 <coda_XML_ParserReset>:
     4a4:	push	{fp, lr}
     4a8:	mov	fp, sp
     4ac:	sub	sp, sp, #40	; 0x28
     4b0:	str	r0, [fp, #-8]
     4b4:	str	r1, [fp, #-12]
     4b8:	ldr	r0, [fp, #-8]
     4bc:	ldr	r0, [r0, #492]	; 0x1ec
     4c0:	movw	r1, #0
     4c4:	cmp	r0, r1
     4c8:	beq	4d8 <coda_XML_ParserReset+0x34>
     4cc:	movw	r0, #0
     4d0:	strb	r0, [fp, #-1]
     4d4:	b	638 <coda_XML_ParserReset+0x194>
     4d8:	ldr	r0, [fp, #-8]
     4dc:	ldr	r0, [r0, #372]	; 0x174
     4e0:	str	r0, [fp, #-16]
     4e4:	ldr	r0, [fp, #-16]
     4e8:	movw	r1, #0
     4ec:	cmp	r0, r1
     4f0:	beq	544 <coda_XML_ParserReset+0xa0>
     4f4:	ldr	r0, [fp, #-16]
     4f8:	str	r0, [sp, #16]
     4fc:	ldr	r0, [fp, #-16]
     500:	ldr	r0, [r0]
     504:	str	r0, [fp, #-16]
     508:	ldr	r0, [fp, #-8]
     50c:	ldr	r0, [r0, #376]	; 0x178
     510:	ldr	r1, [sp, #16]
     514:	str	r0, [r1]
     518:	ldr	r0, [fp, #-8]
     51c:	ldr	r1, [sp, #16]
     520:	ldr	r1, [r1, #44]	; 0x2c
     524:	bl	644 <moveToFreeBindingList>
     528:	ldr	r0, [sp, #16]
     52c:	movw	r1, #0
     530:	str	r1, [r0, #44]	; 0x2c
     534:	ldr	r0, [sp, #16]
     538:	ldr	r1, [fp, #-8]
     53c:	str	r0, [r1, #376]	; 0x178
     540:	b	4e4 <coda_XML_ParserReset+0x40>
     544:	ldr	r0, [fp, #-8]
     548:	ldr	r0, [r0, #308]	; 0x134
     54c:	str	r0, [sp, #20]
     550:	ldr	r0, [sp, #20]
     554:	movw	r1, #0
     558:	cmp	r0, r1
     55c:	beq	594 <coda_XML_ParserReset+0xf0>
     560:	ldr	r0, [sp, #20]
     564:	str	r0, [sp, #12]
     568:	ldr	r0, [sp, #12]
     56c:	ldr	r0, [r0, #8]
     570:	str	r0, [sp, #20]
     574:	ldr	r0, [fp, #-8]
     578:	ldr	r0, [r0, #312]	; 0x138
     57c:	ldr	r1, [sp, #12]
     580:	str	r0, [r1, #8]
     584:	ldr	r0, [sp, #12]
     588:	ldr	r1, [fp, #-8]
     58c:	str	r0, [r1, #312]	; 0x138
     590:	b	550 <coda_XML_ParserReset+0xac>
     594:	ldr	r0, [fp, #-8]
     598:	ldr	r1, [fp, #-8]
     59c:	ldr	r1, [r1, #380]	; 0x17c
     5a0:	bl	644 <moveToFreeBindingList>
     5a4:	ldr	r0, [fp, #-8]
     5a8:	ldr	r0, [r0, #20]
     5ac:	ldr	r1, [fp, #-8]
     5b0:	ldr	r1, [r1, #248]	; 0xf8
     5b4:	str	r0, [sp, #8]
     5b8:	mov	r0, r1
     5bc:	ldr	r1, [sp, #8]
     5c0:	blx	r1
     5c4:	ldr	r0, [fp, #-8]
     5c8:	ldr	r0, [r0, #260]	; 0x104
     5cc:	movw	r1, #0
     5d0:	cmp	r0, r1
     5d4:	beq	5f8 <coda_XML_ParserReset+0x154>
     5d8:	ldr	r0, [fp, #-8]
     5dc:	ldr	r0, [r0, #260]	; 0x104
     5e0:	ldr	r1, [fp, #-8]
     5e4:	ldr	r1, [r1, #252]	; 0xfc
     5e8:	str	r0, [sp, #4]
     5ec:	mov	r0, r1
     5f0:	ldr	r1, [sp, #4]
     5f4:	blx	r1
     5f8:	ldr	r0, [fp, #-8]
     5fc:	add	r0, r0, #432	; 0x1b0
     600:	bl	69c <poolClear>
     604:	ldr	r0, [fp, #-8]
     608:	add	r0, r0, #456	; 0x1c8
     60c:	bl	69c <poolClear>
     610:	ldr	r0, [fp, #-8]
     614:	ldr	r1, [fp, #-12]
     618:	bl	74c <parserInit>
     61c:	ldr	r0, [fp, #-8]
     620:	ldr	r0, [r0, #364]	; 0x16c
     624:	ldr	r1, [fp, #-8]
     628:	add	r1, r1, #12
     62c:	bl	a10 <dtdReset>
     630:	movw	r0, #1
     634:	strb	r0, [fp, #-1]
     638:	ldrb	r0, [fp, #-1]
     63c:	mov	sp, fp
     640:	pop	{fp, pc}

00000644 <moveToFreeBindingList>:
     644:	sub	sp, sp, #12
     648:	str	r0, [sp, #8]
     64c:	str	r1, [sp, #4]
     650:	ldr	r0, [sp, #4]
     654:	movw	r1, #0
     658:	cmp	r0, r1
     65c:	beq	694 <moveToFreeBindingList+0x50>
     660:	ldr	r0, [sp, #4]
     664:	str	r0, [sp]
     668:	ldr	r0, [sp, #4]
     66c:	ldr	r0, [r0, #4]
     670:	str	r0, [sp, #4]
     674:	ldr	r0, [sp, #8]
     678:	ldr	r0, [r0, #384]	; 0x180
     67c:	ldr	r1, [sp]
     680:	str	r0, [r1, #4]
     684:	ldr	r0, [sp]
     688:	ldr	r1, [sp, #8]
     68c:	str	r0, [r1, #384]	; 0x180
     690:	b	650 <moveToFreeBindingList+0xc>
     694:	add	sp, sp, #12
     698:	bx	lr

0000069c <poolClear>:
     69c:	sub	sp, sp, #12
     6a0:	str	r0, [sp, #8]
     6a4:	ldr	r0, [sp, #8]
     6a8:	ldr	r0, [r0, #4]
     6ac:	movw	r1, #0
     6b0:	cmp	r0, r1
     6b4:	bne	6cc <poolClear+0x30>
     6b8:	ldr	r0, [sp, #8]
     6bc:	ldr	r0, [r0]
     6c0:	ldr	r1, [sp, #8]
     6c4:	str	r0, [r1, #4]
     6c8:	b	720 <poolClear+0x84>
     6cc:	ldr	r0, [sp, #8]
     6d0:	ldr	r0, [r0]
     6d4:	str	r0, [sp, #4]
     6d8:	ldr	r0, [sp, #4]
     6dc:	movw	r1, #0
     6e0:	cmp	r0, r1
     6e4:	beq	71c <poolClear+0x80>
     6e8:	ldr	r0, [sp, #4]
     6ec:	ldr	r0, [r0]
     6f0:	str	r0, [sp]
     6f4:	ldr	r0, [sp, #8]
     6f8:	ldr	r0, [r0, #4]
     6fc:	ldr	r1, [sp, #4]
     700:	str	r0, [r1]
     704:	ldr	r0, [sp, #4]
     708:	ldr	r1, [sp, #8]
     70c:	str	r0, [r1, #4]
     710:	ldr	r0, [sp]
     714:	str	r0, [sp, #4]
     718:	b	6d8 <poolClear+0x3c>
     71c:	b	720 <poolClear+0x84>
     720:	ldr	r0, [sp, #8]
     724:	movw	r1, #0
     728:	str	r1, [r0]
     72c:	ldr	r0, [sp, #8]
     730:	str	r1, [r0, #16]
     734:	ldr	r0, [sp, #8]
     738:	str	r1, [r0, #12]
     73c:	ldr	r0, [sp, #8]
     740:	str	r1, [r0, #8]
     744:	add	sp, sp, #12
     748:	bx	lr

0000074c <parserInit>:
     74c:	push	{fp, lr}
     750:	mov	fp, sp
     754:	sub	sp, sp, #32
     758:	str	r0, [fp, #-4]
     75c:	str	r1, [fp, #-8]
     760:	ldr	r0, [fp, #-4]
     764:	movw	r1, #0
     768:	movt	r1, #0
     76c:	str	r1, [r0, #288]	; 0x120
     770:	ldr	r0, [fp, #-4]
     774:	add	r0, r0, #264	; 0x108
     778:	bl	0 <coda_XmlPrologStateInit>
     77c:	ldr	r0, [fp, #-8]
     780:	movw	r1, #0
     784:	cmp	r0, r1
     788:	beq	7a4 <parserInit+0x58>
     78c:	ldr	r0, [fp, #-4]
     790:	add	r0, r0, #432	; 0x1b0
     794:	ldr	r1, [fp, #-8]
     798:	bl	c54 <poolCopyString>
     79c:	str	r0, [fp, #-12]
     7a0:	b	7b0 <parserInit+0x64>
     7a4:	movw	r0, #0
     7a8:	str	r0, [fp, #-12]
     7ac:	b	7b0 <parserInit+0x64>
     7b0:	ldr	r0, [fp, #-12]
     7b4:	ldr	r1, [fp, #-4]
     7b8:	str	r0, [r1, #240]	; 0xf0
     7bc:	ldr	r0, [fp, #-4]
     7c0:	mov	r1, #0
     7c4:	str	r1, [r0, #368]	; 0x170
     7c8:	ldr	r0, [fp, #-4]
     7cc:	add	r2, r0, #156	; 0x9c
     7d0:	add	r0, r0, #152	; 0x98
     7d4:	str	r0, [sp, #16]
     7d8:	mov	r0, r2
     7dc:	ldr	r2, [sp, #16]
     7e0:	str	r1, [sp, #12]
     7e4:	mov	r1, r2
     7e8:	ldr	r2, [sp, #12]
     7ec:	bl	0 <coda_XmlInitEncoding>
     7f0:	ldr	r1, [fp, #-4]
     7f4:	ldr	r2, [sp, #12]
     7f8:	str	r2, [r1]
     7fc:	ldr	r1, [fp, #-4]
     800:	str	r2, [r1, #4]
     804:	ldr	r1, [fp, #-4]
     808:	str	r2, [r1, #60]	; 0x3c
     80c:	ldr	r1, [fp, #-4]
     810:	str	r2, [r1, #64]	; 0x40
     814:	ldr	r1, [fp, #-4]
     818:	str	r2, [r1, #68]	; 0x44
     81c:	ldr	r1, [fp, #-4]
     820:	str	r2, [r1, #72]	; 0x48
     824:	ldr	r1, [fp, #-4]
     828:	str	r2, [r1, #76]	; 0x4c
     82c:	ldr	r1, [fp, #-4]
     830:	str	r2, [r1, #80]	; 0x50
     834:	ldr	r1, [fp, #-4]
     838:	str	r2, [r1, #84]	; 0x54
     83c:	ldr	r1, [fp, #-4]
     840:	str	r2, [r1, #88]	; 0x58
     844:	ldr	r1, [fp, #-4]
     848:	str	r2, [r1, #92]	; 0x5c
     84c:	ldr	r1, [fp, #-4]
     850:	str	r2, [r1, #96]	; 0x60
     854:	ldr	r1, [fp, #-4]
     858:	str	r2, [r1, #100]	; 0x64
     85c:	ldr	r1, [fp, #-4]
     860:	str	r2, [r1, #104]	; 0x68
     864:	ldr	r1, [fp, #-4]
     868:	str	r2, [r1, #108]	; 0x6c
     86c:	ldr	r1, [fp, #-4]
     870:	str	r2, [r1, #112]	; 0x70
     874:	ldr	r1, [fp, #-4]
     878:	str	r2, [r1, #116]	; 0x74
     87c:	ldr	r1, [fp, #-4]
     880:	str	r2, [r1, #120]	; 0x78
     884:	ldr	r1, [fp, #-4]
     888:	str	r1, [r1, #124]	; 0x7c
     88c:	ldr	r1, [fp, #-4]
     890:	str	r2, [r1, #128]	; 0x80
     894:	ldr	r1, [fp, #-4]
     898:	str	r2, [r1, #136]	; 0x88
     89c:	ldr	r1, [fp, #-4]
     8a0:	str	r2, [r1, #140]	; 0x8c
     8a4:	ldr	r1, [fp, #-4]
     8a8:	str	r2, [r1, #144]	; 0x90
     8ac:	ldr	r1, [fp, #-4]
     8b0:	str	r2, [r1, #148]	; 0x94
     8b4:	ldr	r1, [fp, #-4]
     8b8:	ldr	lr, [r1, #8]
     8bc:	str	lr, [r1, #24]
     8c0:	ldr	r1, [fp, #-4]
     8c4:	ldr	lr, [r1, #8]
     8c8:	str	lr, [r1, #28]
     8cc:	ldr	r1, [fp, #-4]
     8d0:	str	r2, [r1, #44]	; 0x2c
     8d4:	str	r2, [r1, #40]	; 0x28
     8d8:	ldr	r1, [fp, #-4]
     8dc:	movw	lr, #0
     8e0:	str	lr, [r1, #48]	; 0x30
     8e4:	ldr	r1, [fp, #-4]
     8e8:	str	lr, [r1, #352]	; 0x160
     8ec:	ldr	r1, [fp, #-4]
     8f0:	str	lr, [r1, #356]	; 0x164
     8f4:	ldr	r1, [fp, #-4]
     8f8:	str	lr, [r1, #324]	; 0x144
     8fc:	ldr	r1, [fp, #-4]
     900:	str	lr, [r1, #328]	; 0x148
     904:	ldr	r1, [fp, #-4]
     908:	str	lr, [r1, #332]	; 0x14c
     90c:	ldr	r1, [fp, #-4]
     910:	str	lr, [r1, #336]	; 0x150
     914:	ldr	r1, [fp, #-4]
     918:	str	lr, [r1, #340]	; 0x154
     91c:	ldr	r1, [fp, #-4]
     920:	str	lr, [r1, #344]	; 0x158
     924:	ldr	r1, [fp, #-4]
     928:	str	lr, [r1, #348]	; 0x15c
     92c:	ldr	r1, [fp, #-4]
     930:	movw	r3, #0
     934:	strb	r3, [r1, #360]	; 0x168
     938:	ldr	r1, [fp, #-4]
     93c:	strb	r3, [r1, #361]	; 0x169
     940:	ldr	r1, [fp, #-4]
     944:	add	r1, r1, #416	; 0x1a0
     948:	str	r0, [sp, #8]
     94c:	mov	r0, r1
     950:	and	r1, r3, #255	; 0xff
     954:	movw	r2, #16
     958:	str	r3, [sp, #4]
     95c:	str	lr, [sp]
     960:	bl	0 <memset>
     964:	ldr	r0, [fp, #-4]
     968:	ldr	r1, [sp]
     96c:	str	r1, [r0, #292]	; 0x124
     970:	ldr	r0, [fp, #-4]
     974:	str	r1, [r0, #296]	; 0x128
     978:	ldr	r0, [fp, #-4]
     97c:	str	r1, [r0, #300]	; 0x12c
     980:	ldr	r0, [fp, #-4]
     984:	str	r1, [r0, #304]	; 0x130
     988:	ldr	r0, [fp, #-4]
     98c:	str	r1, [r0, #308]	; 0x134
     990:	ldr	r0, [fp, #-4]
     994:	movw	r2, #1
     998:	strb	r2, [r0, #316]	; 0x13c
     99c:	ldr	r0, [fp, #-4]
     9a0:	str	r1, [r0, #320]	; 0x140
     9a4:	ldr	r0, [fp, #-4]
     9a8:	str	r1, [r0, #372]	; 0x174
     9ac:	ldr	r0, [fp, #-4]
     9b0:	str	r1, [r0, #380]	; 0x17c
     9b4:	ldr	r0, [fp, #-4]
     9b8:	str	r1, [r0, #392]	; 0x188
     9bc:	ldr	r0, [fp, #-4]
     9c0:	str	r1, [r0, #248]	; 0xf8
     9c4:	ldr	r0, [fp, #-4]
     9c8:	str	r1, [r0, #260]	; 0x104
     9cc:	ldr	r0, [fp, #-4]
     9d0:	str	r1, [r0, #252]	; 0xfc
     9d4:	ldr	r0, [fp, #-4]
     9d8:	str	r1, [r0, #492]	; 0x1ec
     9dc:	ldr	r0, [fp, #-4]
     9e0:	str	r1, [r0, #496]	; 0x1f0
     9e4:	ldr	r0, [fp, #-4]
     9e8:	ldr	r2, [sp, #4]
     9ec:	strb	r2, [r0, #504]	; 0x1f8
     9f0:	ldr	r0, [fp, #-4]
     9f4:	strb	r2, [r0, #505]	; 0x1f9
     9f8:	ldr	r0, [fp, #-4]
     9fc:	str	r1, [r0, #508]	; 0x1fc
     a00:	ldr	r0, [fp, #-4]
     a04:	str	r1, [r0, #512]	; 0x200
     a08:	mov	sp, fp
     a0c:	pop	{fp, pc}

00000a10 <dtdReset>:
     a10:	push	{fp, lr}
     a14:	mov	fp, sp
     a18:	sub	sp, sp, #32
     a1c:	str	r0, [fp, #-4]
     a20:	str	r1, [fp, #-8]
     a24:	ldr	r0, [fp, #-4]
     a28:	add	r1, r0, #20
     a2c:	add	r0, sp, #16
     a30:	bl	dbc0 <hashTableIterInit>
     a34:	add	r0, sp, #16
     a38:	bl	dc00 <hashTableIterNext>
     a3c:	str	r0, [sp, #12]
     a40:	ldr	r0, [sp, #12]
     a44:	movw	lr, #0
     a48:	cmp	r0, lr
     a4c:	bne	a54 <dtdReset+0x44>
     a50:	b	a88 <dtdReset+0x78>
     a54:	ldr	r0, [sp, #12]
     a58:	ldr	r0, [r0, #16]
     a5c:	cmp	r0, #0
     a60:	beq	a84 <dtdReset+0x74>
     a64:	ldr	r0, [fp, #-8]
     a68:	ldr	r0, [r0, #8]
     a6c:	ldr	r1, [sp, #12]
     a70:	ldr	r1, [r1, #20]
     a74:	str	r0, [sp, #8]
     a78:	mov	r0, r1
     a7c:	ldr	r1, [sp, #8]
     a80:	blx	r1
     a84:	b	a34 <dtdReset+0x24>
     a88:	ldr	r0, [fp, #-4]
     a8c:	bl	fc70 <hashTableClear>
     a90:	ldr	r0, [fp, #-4]
     a94:	movw	lr, #0
     a98:	strb	lr, [r0, #131]	; 0x83
     a9c:	ldr	r0, [fp, #-4]
     aa0:	add	r0, r0, #132	; 0x84
     aa4:	bl	fc70 <hashTableClear>
     aa8:	ldr	r0, [fp, #-4]
     aac:	add	r0, r0, #20
     ab0:	bl	fc70 <hashTableClear>
     ab4:	ldr	r0, [fp, #-4]
     ab8:	add	r0, r0, #40	; 0x28
     abc:	bl	fc70 <hashTableClear>
     ac0:	ldr	r0, [fp, #-4]
     ac4:	add	r0, r0, #60	; 0x3c
     ac8:	bl	fc70 <hashTableClear>
     acc:	ldr	r0, [fp, #-4]
     ad0:	add	r0, r0, #80	; 0x50
     ad4:	bl	69c <poolClear>
     ad8:	ldr	r0, [fp, #-4]
     adc:	add	r0, r0, #104	; 0x68
     ae0:	bl	69c <poolClear>
     ae4:	ldr	r0, [fp, #-4]
     ae8:	movw	lr, #0
     aec:	str	lr, [r0, #152]	; 0x98
     af0:	ldr	r0, [fp, #-4]
     af4:	str	lr, [r0, #156]	; 0x9c
     af8:	ldr	r0, [fp, #-4]
     afc:	movw	lr, #0
     b00:	strb	lr, [r0, #160]	; 0xa0
     b04:	ldr	r0, [fp, #-8]
     b08:	ldr	r0, [r0, #8]
     b0c:	ldr	lr, [fp, #-4]
     b10:	ldr	lr, [lr, #184]	; 0xb8
     b14:	str	r0, [sp, #4]
     b18:	mov	r0, lr
     b1c:	ldr	lr, [sp, #4]
     b20:	blx	lr
     b24:	ldr	r0, [fp, #-4]
     b28:	movw	lr, #0
     b2c:	str	lr, [r0, #184]	; 0xb8
     b30:	ldr	r0, [fp, #-8]
     b34:	ldr	r0, [r0, #8]
     b38:	ldr	lr, [fp, #-4]
     b3c:	ldr	lr, [lr, #164]	; 0xa4
     b40:	str	r0, [sp]
     b44:	mov	r0, lr
     b48:	ldr	lr, [sp]
     b4c:	blx	lr
     b50:	ldr	r0, [fp, #-4]
     b54:	movw	lr, #0
     b58:	str	lr, [r0, #164]	; 0xa4
     b5c:	ldr	r0, [fp, #-4]
     b60:	str	lr, [r0, #180]	; 0xb4
     b64:	ldr	r0, [fp, #-4]
     b68:	str	lr, [r0, #172]	; 0xac
     b6c:	ldr	r0, [fp, #-4]
     b70:	str	lr, [r0, #176]	; 0xb0
     b74:	ldr	r0, [fp, #-4]
     b78:	str	lr, [r0, #168]	; 0xa8
     b7c:	ldr	r0, [fp, #-4]
     b80:	movw	lr, #1
     b84:	strb	lr, [r0, #128]	; 0x80
     b88:	ldr	r0, [fp, #-4]
     b8c:	movw	lr, #0
     b90:	strb	lr, [r0, #129]	; 0x81
     b94:	ldr	r0, [fp, #-4]
     b98:	strb	lr, [r0, #130]	; 0x82
     b9c:	mov	sp, fp
     ba0:	pop	{fp, pc}

00000ba4 <coda_XML_SetEncoding>:
     ba4:	push	{fp, lr}
     ba8:	mov	fp, sp
     bac:	sub	sp, sp, #16
     bb0:	str	r0, [sp, #8]
     bb4:	str	r1, [sp, #4]
     bb8:	ldr	r0, [sp, #8]
     bbc:	ldr	r0, [r0, #496]	; 0x1f0
     bc0:	cmp	r0, #1
     bc4:	beq	bd8 <coda_XML_SetEncoding+0x34>
     bc8:	ldr	r0, [sp, #8]
     bcc:	ldr	r0, [r0, #496]	; 0x1f0
     bd0:	cmp	r0, #3
     bd4:	bne	be4 <coda_XML_SetEncoding+0x40>
     bd8:	movw	r0, #0
     bdc:	str	r0, [fp, #-4]
     be0:	b	c48 <coda_XML_SetEncoding+0xa4>
     be4:	ldr	r0, [sp, #4]
     be8:	movw	r1, #0
     bec:	cmp	r0, r1
     bf0:	bne	c04 <coda_XML_SetEncoding+0x60>
     bf4:	ldr	r0, [sp, #8]
     bf8:	movw	r1, #0
     bfc:	str	r1, [r0, #240]	; 0xf0
     c00:	b	c40 <coda_XML_SetEncoding+0x9c>
     c04:	ldr	r0, [sp, #8]
     c08:	add	r0, r0, #432	; 0x1b0
     c0c:	ldr	r1, [sp, #4]
     c10:	bl	c54 <poolCopyString>
     c14:	ldr	r1, [sp, #8]
     c18:	str	r0, [r1, #240]	; 0xf0
     c1c:	ldr	r0, [sp, #8]
     c20:	ldr	r0, [r0, #240]	; 0xf0
     c24:	movw	r1, #0
     c28:	cmp	r0, r1
     c2c:	bne	c3c <coda_XML_SetEncoding+0x98>
     c30:	movw	r0, #0
     c34:	str	r0, [fp, #-4]
     c38:	b	c48 <coda_XML_SetEncoding+0xa4>
     c3c:	b	c40 <coda_XML_SetEncoding+0x9c>
     c40:	movw	r0, #1
     c44:	str	r0, [fp, #-4]
     c48:	ldr	r0, [fp, #-4]
     c4c:	mov	sp, fp
     c50:	pop	{fp, pc}

00000c54 <poolCopyString>:
     c54:	push	{fp, lr}
     c58:	mov	fp, sp
     c5c:	sub	sp, sp, #16
     c60:	str	r0, [sp, #8]
     c64:	str	r1, [sp, #4]
     c68:	ldr	r0, [sp, #8]
     c6c:	ldr	r0, [r0, #12]
     c70:	ldr	r1, [sp, #8]
     c74:	ldr	r1, [r1, #8]
     c78:	cmp	r0, r1
     c7c:	bne	c98 <poolCopyString+0x44>
     c80:	ldr	r0, [sp, #8]
     c84:	bl	8764 <poolGrow>
     c88:	sxtb	r0, r0
     c8c:	cmp	r0, #0
     c90:	bne	c98 <poolCopyString+0x44>
     c94:	b	cb8 <poolCopyString+0x64>
     c98:	ldr	r0, [sp, #4]
     c9c:	ldrb	r0, [r0]
     ca0:	ldr	r1, [sp, #8]
     ca4:	ldr	r2, [r1, #12]
     ca8:	add	r3, r2, #1
     cac:	str	r3, [r1, #12]
     cb0:	strb	r0, [r2]
     cb4:	b	cc4 <poolCopyString+0x70>
     cb8:	movw	r0, #0
     cbc:	str	r0, [fp, #-4]
     cc0:	b	d04 <poolCopyString+0xb0>
     cc4:	b	cc8 <poolCopyString+0x74>
     cc8:	ldr	r0, [sp, #4]
     ccc:	add	r1, r0, #1
     cd0:	str	r1, [sp, #4]
     cd4:	ldrsb	r0, [r0]
     cd8:	cmp	r0, #0
     cdc:	bne	c68 <poolCopyString+0x14>
     ce0:	ldr	r0, [sp, #8]
     ce4:	ldr	r0, [r0, #16]
     ce8:	str	r0, [sp, #4]
     cec:	ldr	r0, [sp, #8]
     cf0:	ldr	r0, [r0, #12]
     cf4:	ldr	r1, [sp, #8]
     cf8:	str	r0, [r1, #16]
     cfc:	ldr	r0, [sp, #4]
     d00:	str	r0, [fp, #-4]
     d04:	ldr	r0, [fp, #-4]
     d08:	mov	sp, fp
     d0c:	pop	{fp, pc}

00000d10 <coda_XML_ExternalEntityParserCreate>:
     d10:	push	{fp, lr}
     d14:	mov	fp, sp
     d18:	sub	sp, sp, #152	; 0x98
     d1c:	str	r0, [fp, #-8]
     d20:	str	r1, [fp, #-12]
     d24:	str	r2, [fp, #-16]
     d28:	ldr	r0, [fp, #-8]
     d2c:	str	r0, [fp, #-20]	; 0xffffffec
     d30:	movw	r0, #0
     d34:	str	r0, [fp, #-24]	; 0xffffffe8
     d38:	ldr	r1, [fp, #-20]	; 0xffffffec
     d3c:	ldr	r1, [r1, #364]	; 0x16c
     d40:	str	r1, [fp, #-28]	; 0xffffffe4
     d44:	ldr	r1, [fp, #-20]	; 0xffffffec
     d48:	ldr	r1, [r1, #60]	; 0x3c
     d4c:	str	r1, [fp, #-32]	; 0xffffffe0
     d50:	ldr	r1, [fp, #-20]	; 0xffffffec
     d54:	ldr	r1, [r1, #64]	; 0x40
     d58:	str	r1, [fp, #-36]	; 0xffffffdc
     d5c:	ldr	r1, [fp, #-20]	; 0xffffffec
     d60:	ldr	r1, [r1, #68]	; 0x44
     d64:	str	r1, [fp, #-40]	; 0xffffffd8
     d68:	ldr	r1, [fp, #-20]	; 0xffffffec
     d6c:	ldr	r1, [r1, #72]	; 0x48
     d70:	str	r1, [fp, #-44]	; 0xffffffd4
     d74:	ldr	r1, [fp, #-20]	; 0xffffffec
     d78:	ldr	r1, [r1, #76]	; 0x4c
     d7c:	str	r1, [fp, #-48]	; 0xffffffd0
     d80:	ldr	r1, [fp, #-20]	; 0xffffffec
     d84:	ldr	r1, [r1, #80]	; 0x50
     d88:	str	r1, [fp, #-52]	; 0xffffffcc
     d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
     d90:	ldr	r1, [r1, #84]	; 0x54
     d94:	str	r1, [fp, #-56]	; 0xffffffc8
     d98:	ldr	r1, [fp, #-20]	; 0xffffffec
     d9c:	ldr	r1, [r1, #88]	; 0x58
     da0:	str	r1, [fp, #-60]	; 0xffffffc4
     da4:	ldr	r1, [fp, #-20]	; 0xffffffec
     da8:	ldr	r1, [r1, #100]	; 0x64
     dac:	str	r1, [fp, #-64]	; 0xffffffc0
     db0:	ldr	r1, [fp, #-20]	; 0xffffffec
     db4:	ldr	r1, [r1, #104]	; 0x68
     db8:	str	r1, [fp, #-68]	; 0xffffffbc
     dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
     dc0:	ldr	r1, [r1, #108]	; 0x6c
     dc4:	str	r1, [fp, #-72]	; 0xffffffb8
     dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
     dcc:	ldr	r1, [r1, #112]	; 0x70
     dd0:	str	r1, [sp, #76]	; 0x4c
     dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
     dd8:	ldr	r1, [r1, #116]	; 0x74
     ddc:	str	r1, [sp, #72]	; 0x48
     de0:	ldr	r1, [fp, #-20]	; 0xffffffec
     de4:	ldr	r1, [r1, #120]	; 0x78
     de8:	str	r1, [sp, #68]	; 0x44
     dec:	ldr	r1, [fp, #-20]	; 0xffffffec
     df0:	ldr	r1, [r1, #128]	; 0x80
     df4:	str	r1, [sp, #64]	; 0x40
     df8:	ldr	r1, [fp, #-20]	; 0xffffffec
     dfc:	ldr	r1, [r1, #132]	; 0x84
     e00:	str	r1, [sp, #60]	; 0x3c
     e04:	ldr	r1, [fp, #-20]	; 0xffffffec
     e08:	ldr	r1, [r1, #136]	; 0x88
     e0c:	str	r1, [sp, #56]	; 0x38
     e10:	ldr	r1, [fp, #-20]	; 0xffffffec
     e14:	ldr	r1, [r1, #140]	; 0x8c
     e18:	str	r1, [sp, #52]	; 0x34
     e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e20:	ldr	r1, [r1, #144]	; 0x90
     e24:	str	r1, [sp, #48]	; 0x30
     e28:	ldr	r1, [fp, #-20]	; 0xffffffec
     e2c:	ldr	r1, [r1, #148]	; 0x94
     e30:	str	r1, [sp, #44]	; 0x2c
     e34:	ldr	r1, [fp, #-20]	; 0xffffffec
     e38:	ldr	r1, [r1, #352]	; 0x160
     e3c:	str	r1, [sp, #40]	; 0x28
     e40:	ldr	r1, [fp, #-20]	; 0xffffffec
     e44:	ldr	r1, [r1]
     e48:	str	r1, [sp, #36]	; 0x24
     e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e50:	ldr	r1, [r1, #4]
     e54:	str	r1, [sp, #32]
     e58:	ldr	r1, [fp, #-20]	; 0xffffffec
     e5c:	ldrb	r1, [r1, #316]	; 0x13c
     e60:	strb	r1, [sp, #31]
     e64:	ldr	r1, [fp, #-20]	; 0xffffffec
     e68:	ldr	r1, [r1, #124]	; 0x7c
     e6c:	str	r1, [sp, #24]
     e70:	ldr	r1, [fp, #-20]	; 0xffffffec
     e74:	ldr	r1, [r1, #508]	; 0x1fc
     e78:	str	r1, [sp, #20]
     e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e80:	ldr	r1, [r1, #284]	; 0x11c
     e84:	str	r1, [sp, #16]
     e88:	ldr	r1, [fp, #-20]	; 0xffffffec
     e8c:	ldrb	r1, [r1, #245]	; 0xf5
     e90:	strb	r1, [sp, #15]
     e94:	ldr	r1, [fp, #-20]	; 0xffffffec
     e98:	ldr	r1, [r1, #512]	; 0x200
     e9c:	str	r1, [sp, #8]
     ea0:	ldr	r1, [fp, #-12]
     ea4:	cmp	r1, r0
     ea8:	bne	eb4 <coda_XML_ExternalEntityParserCreate+0x1a4>
     eac:	ldr	r0, [fp, #-28]	; 0xffffffe4
     eb0:	str	r0, [fp, #-24]	; 0xffffffe8
     eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
     eb8:	ldrsb	r0, [r0, #244]	; 0xf4
     ebc:	cmp	r0, #0
     ec0:	beq	ef0 <coda_XML_ExternalEntityParserCreate+0x1e0>
     ec4:	add	r2, sp, #6
     ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
     ecc:	ldrb	r0, [r0, #488]	; 0x1e8
     ed0:	strb	r0, [sp, #6]
     ed4:	ldr	r0, [fp, #-16]
     ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
     edc:	add	r1, r1, #12
     ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ee4:	bl	94 <parserCreate>
     ee8:	str	r0, [fp, #-20]	; 0xffffffec
     eec:	b	f0c <coda_XML_ExternalEntityParserCreate+0x1fc>
     ef0:	ldr	r0, [fp, #-16]
     ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ef8:	add	r1, r1, #12
     efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f00:	movw	r2, #0
     f04:	bl	94 <parserCreate>
     f08:	str	r0, [fp, #-20]	; 0xffffffec
     f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f10:	movw	r1, #0
     f14:	cmp	r0, r1
     f18:	bne	f28 <coda_XML_ExternalEntityParserCreate+0x218>
     f1c:	movw	r0, #0
     f20:	str	r0, [fp, #-4]
     f24:	b	1168 <coda_XML_ExternalEntityParserCreate+0x458>
     f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f30:	str	r0, [r1, #60]	; 0x3c
     f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f38:	ldr	r1, [fp, #-20]	; 0xffffffec
     f3c:	str	r0, [r1, #64]	; 0x40
     f40:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f44:	ldr	r1, [fp, #-20]	; 0xffffffec
     f48:	str	r0, [r1, #68]	; 0x44
     f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     f50:	ldr	r1, [fp, #-20]	; 0xffffffec
     f54:	str	r0, [r1, #72]	; 0x48
     f58:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f60:	str	r0, [r1, #76]	; 0x4c
     f64:	ldr	r0, [fp, #-52]	; 0xffffffcc
     f68:	ldr	r1, [fp, #-20]	; 0xffffffec
     f6c:	str	r0, [r1, #80]	; 0x50
     f70:	ldr	r0, [fp, #-56]	; 0xffffffc8
     f74:	ldr	r1, [fp, #-20]	; 0xffffffec
     f78:	str	r0, [r1, #84]	; 0x54
     f7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
     f80:	ldr	r1, [fp, #-20]	; 0xffffffec
     f84:	str	r0, [r1, #88]	; 0x58
     f88:	ldr	r0, [fp, #-64]	; 0xffffffc0
     f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f90:	str	r0, [r1, #100]	; 0x64
     f94:	ldr	r0, [fp, #-68]	; 0xffffffbc
     f98:	ldr	r1, [fp, #-20]	; 0xffffffec
     f9c:	str	r0, [r1, #104]	; 0x68
     fa0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
     fa8:	str	r0, [r1, #108]	; 0x6c
     fac:	ldr	r0, [sp, #76]	; 0x4c
     fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
     fb4:	str	r0, [r1, #112]	; 0x70
     fb8:	ldr	r0, [sp, #72]	; 0x48
     fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
     fc0:	str	r0, [r1, #116]	; 0x74
     fc4:	ldr	r0, [sp, #68]	; 0x44
     fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
     fcc:	str	r0, [r1, #120]	; 0x78
     fd0:	ldr	r0, [sp, #64]	; 0x40
     fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
     fd8:	str	r0, [r1, #128]	; 0x80
     fdc:	ldr	r0, [sp, #60]	; 0x3c
     fe0:	ldr	r1, [fp, #-20]	; 0xffffffec
     fe4:	str	r0, [r1, #132]	; 0x84
     fe8:	ldr	r0, [sp, #56]	; 0x38
     fec:	ldr	r1, [fp, #-20]	; 0xffffffec
     ff0:	str	r0, [r1, #136]	; 0x88
     ff4:	ldr	r0, [sp, #52]	; 0x34
     ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
     ffc:	str	r0, [r1, #140]	; 0x8c
    1000:	ldr	r0, [sp, #48]	; 0x30
    1004:	ldr	r1, [fp, #-20]	; 0xffffffec
    1008:	str	r0, [r1, #144]	; 0x90
    100c:	ldr	r0, [sp, #44]	; 0x2c
    1010:	ldr	r1, [fp, #-20]	; 0xffffffec
    1014:	str	r0, [r1, #148]	; 0x94
    1018:	ldr	r0, [sp, #40]	; 0x28
    101c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1020:	str	r0, [r1, #352]	; 0x160
    1024:	ldr	r0, [sp, #36]	; 0x24
    1028:	ldr	r1, [fp, #-20]	; 0xffffffec
    102c:	str	r0, [r1]
    1030:	ldr	r0, [sp, #36]	; 0x24
    1034:	ldr	r1, [sp, #32]
    1038:	cmp	r0, r1
    103c:	bne	1054 <coda_XML_ExternalEntityParserCreate+0x344>
    1040:	ldr	r0, [fp, #-20]	; 0xffffffec
    1044:	ldr	r0, [r0]
    1048:	ldr	r1, [fp, #-20]	; 0xffffffec
    104c:	str	r0, [r1, #4]
    1050:	b	1060 <coda_XML_ExternalEntityParserCreate+0x350>
    1054:	ldr	r0, [fp, #-20]	; 0xffffffec
    1058:	ldr	r1, [fp, #-20]	; 0xffffffec
    105c:	str	r0, [r1, #4]
    1060:	ldr	r0, [sp, #24]
    1064:	ldr	r1, [fp, #-8]
    1068:	cmp	r0, r1
    106c:	beq	107c <coda_XML_ExternalEntityParserCreate+0x36c>
    1070:	ldr	r0, [sp, #24]
    1074:	ldr	r1, [fp, #-20]	; 0xffffffec
    1078:	str	r0, [r1, #124]	; 0x7c
    107c:	ldrb	r0, [sp, #31]
    1080:	ldr	r1, [fp, #-20]	; 0xffffffec
    1084:	strb	r0, [r1, #316]	; 0x13c
    1088:	ldrb	r0, [sp, #15]
    108c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1090:	strb	r0, [r1, #245]	; 0xf5
    1094:	ldr	r0, [sp, #8]
    1098:	ldr	r1, [fp, #-20]	; 0xffffffec
    109c:	str	r0, [r1, #512]	; 0x200
    10a0:	ldr	r0, [fp, #-8]
    10a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    10a8:	str	r0, [r1, #492]	; 0x1ec
    10ac:	ldr	r0, [sp, #20]
    10b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    10b4:	str	r0, [r1, #508]	; 0x1fc
    10b8:	ldr	r0, [sp, #16]
    10bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    10c0:	str	r0, [r1, #284]	; 0x11c
    10c4:	ldr	r0, [fp, #-12]
    10c8:	movw	r1, #0
    10cc:	cmp	r0, r1
    10d0:	beq	1138 <coda_XML_ExternalEntityParserCreate+0x428>
    10d4:	ldr	r0, [fp, #-8]
    10d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    10dc:	ldr	r1, [r1, #364]	; 0x16c
    10e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    10e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    10e8:	add	r3, r3, #12
    10ec:	bl	1174 <dtdCopy>
    10f0:	cmp	r0, #0
    10f4:	beq	1110 <coda_XML_ExternalEntityParserCreate+0x400>
    10f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    10fc:	ldr	r1, [fp, #-12]
    1100:	bl	17ec <setContext>
    1104:	sxtb	r0, r0
    1108:	cmp	r0, #0
    110c:	bne	1124 <coda_XML_ExternalEntityParserCreate+0x414>
    1110:	ldr	r0, [fp, #-20]	; 0xffffffec
    1114:	bl	1c68 <coda_XML_ParserFree>
    1118:	movw	r0, #0
    111c:	str	r0, [fp, #-4]
    1120:	b	1168 <coda_XML_ExternalEntityParserCreate+0x458>
    1124:	ldr	r0, [fp, #-20]	; 0xffffffec
    1128:	movw	r1, #0
    112c:	movt	r1, #0
    1130:	str	r1, [r0, #288]	; 0x120
    1134:	b	1160 <coda_XML_ExternalEntityParserCreate+0x450>
    1138:	ldr	r0, [fp, #-20]	; 0xffffffec
    113c:	movw	r1, #1
    1140:	strb	r1, [r0, #504]	; 0x1f8
    1144:	ldr	r0, [fp, #-20]	; 0xffffffec
    1148:	add	r0, r0, #264	; 0x108
    114c:	bl	0 <coda_XmlPrologStateInitExternalEntity>
    1150:	ldr	r0, [fp, #-20]	; 0xffffffec
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	str	r1, [r0, #288]	; 0x120
    1160:	ldr	r0, [fp, #-20]	; 0xffffffec
    1164:	str	r0, [fp, #-4]
    1168:	ldr	r0, [fp, #-4]
    116c:	mov	sp, fp
    1170:	pop	{fp, pc}

00001174 <dtdCopy>:
    1174:	push	{fp, lr}
    1178:	mov	fp, sp
    117c:	sub	sp, sp, #72	; 0x48
    1180:	str	r0, [fp, #-8]
    1184:	str	r1, [fp, #-12]
    1188:	str	r2, [fp, #-16]
    118c:	str	r3, [fp, #-20]	; 0xffffffec
    1190:	ldr	r0, [fp, #-16]
    1194:	add	r1, r0, #60	; 0x3c
    1198:	sub	r0, fp, #28
    119c:	bl	dbc0 <hashTableIterInit>
    11a0:	sub	r0, fp, #28
    11a4:	bl	dc00 <hashTableIterNext>
    11a8:	str	r0, [sp, #36]	; 0x24
    11ac:	ldr	r0, [sp, #36]	; 0x24
    11b0:	movw	lr, #0
    11b4:	cmp	r0, lr
    11b8:	bne	11c0 <dtdCopy+0x4c>
    11bc:	b	1228 <dtdCopy+0xb4>
    11c0:	ldr	r0, [fp, #-12]
    11c4:	add	r0, r0, #80	; 0x50
    11c8:	ldr	r1, [sp, #36]	; 0x24
    11cc:	ldr	r1, [r1]
    11d0:	bl	c54 <poolCopyString>
    11d4:	str	r0, [fp, #-32]	; 0xffffffe0
    11d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    11dc:	movw	r1, #0
    11e0:	cmp	r0, r1
    11e4:	bne	11f4 <dtdCopy+0x80>
    11e8:	movw	r0, #0
    11ec:	str	r0, [fp, #-4]
    11f0:	b	17e0 <dtdCopy+0x66c>
    11f4:	ldr	r0, [fp, #-8]
    11f8:	ldr	r1, [fp, #-12]
    11fc:	add	r1, r1, #60	; 0x3c
    1200:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1204:	movw	r3, #8
    1208:	bl	7694 <lookup>
    120c:	movw	r1, #0
    1210:	cmp	r0, r1
    1214:	bne	1224 <dtdCopy+0xb0>
    1218:	movw	r0, #0
    121c:	str	r0, [fp, #-4]
    1220:	b	17e0 <dtdCopy+0x66c>
    1224:	b	11a0 <dtdCopy+0x2c>
    1228:	ldr	r0, [fp, #-16]
    122c:	add	r1, r0, #40	; 0x28
    1230:	sub	r0, fp, #28
    1234:	bl	dbc0 <hashTableIterInit>
    1238:	sub	r0, fp, #28
    123c:	bl	dc00 <hashTableIterNext>
    1240:	str	r0, [sp, #24]
    1244:	ldr	r0, [sp, #24]
    1248:	movw	lr, #0
    124c:	cmp	r0, lr
    1250:	bne	1258 <dtdCopy+0xe4>
    1254:	b	13bc <dtdCopy+0x248>
    1258:	ldr	r0, [fp, #-12]
    125c:	ldr	r0, [r0, #92]	; 0x5c
    1260:	ldr	r1, [fp, #-12]
    1264:	ldr	r1, [r1, #88]	; 0x58
    1268:	cmp	r0, r1
    126c:	bne	128c <dtdCopy+0x118>
    1270:	ldr	r0, [fp, #-12]
    1274:	add	r0, r0, #80	; 0x50
    1278:	bl	8764 <poolGrow>
    127c:	sxtb	r0, r0
    1280:	cmp	r0, #0
    1284:	bne	128c <dtdCopy+0x118>
    1288:	b	12a8 <dtdCopy+0x134>
    128c:	ldr	r0, [fp, #-12]
    1290:	ldr	r1, [r0, #92]	; 0x5c
    1294:	add	r2, r1, #1
    1298:	str	r2, [r0, #92]	; 0x5c
    129c:	movw	r0, #0
    12a0:	strb	r0, [r1]
    12a4:	b	12b4 <dtdCopy+0x140>
    12a8:	movw	r0, #0
    12ac:	str	r0, [fp, #-4]
    12b0:	b	17e0 <dtdCopy+0x66c>
    12b4:	ldr	r0, [fp, #-12]
    12b8:	add	r0, r0, #80	; 0x50
    12bc:	ldr	r1, [sp, #24]
    12c0:	ldr	r1, [r1]
    12c4:	bl	c54 <poolCopyString>
    12c8:	str	r0, [sp, #28]
    12cc:	ldr	r0, [sp, #28]
    12d0:	movw	r1, #0
    12d4:	cmp	r0, r1
    12d8:	bne	12e8 <dtdCopy+0x174>
    12dc:	movw	r0, #0
    12e0:	str	r0, [fp, #-4]
    12e4:	b	17e0 <dtdCopy+0x66c>
    12e8:	ldr	r0, [sp, #28]
    12ec:	add	r0, r0, #1
    12f0:	str	r0, [sp, #28]
    12f4:	ldr	r0, [fp, #-8]
    12f8:	ldr	r1, [fp, #-12]
    12fc:	add	r1, r1, #40	; 0x28
    1300:	ldr	r2, [sp, #28]
    1304:	movw	r3, #12
    1308:	bl	7694 <lookup>
    130c:	str	r0, [sp, #32]
    1310:	ldr	r0, [sp, #32]
    1314:	movw	r1, #0
    1318:	cmp	r0, r1
    131c:	bne	132c <dtdCopy+0x1b8>
    1320:	movw	r0, #0
    1324:	str	r0, [fp, #-4]
    1328:	b	17e0 <dtdCopy+0x66c>
    132c:	ldr	r0, [sp, #24]
    1330:	ldrb	r0, [r0, #8]
    1334:	ldr	r1, [sp, #32]
    1338:	strb	r0, [r1, #8]
    133c:	ldr	r0, [sp, #24]
    1340:	ldr	r0, [r0, #4]
    1344:	movw	r1, #0
    1348:	cmp	r0, r1
    134c:	beq	13b8 <dtdCopy+0x244>
    1350:	ldr	r0, [sp, #24]
    1354:	ldrb	r0, [r0, #9]
    1358:	ldr	r1, [sp, #32]
    135c:	strb	r0, [r1, #9]
    1360:	ldr	r0, [sp, #24]
    1364:	ldr	r0, [r0, #4]
    1368:	ldr	r1, [fp, #-16]
    136c:	add	r1, r1, #152	; 0x98
    1370:	cmp	r0, r1
    1374:	bne	138c <dtdCopy+0x218>
    1378:	ldr	r0, [fp, #-12]
    137c:	add	r0, r0, #152	; 0x98
    1380:	ldr	r1, [sp, #32]
    1384:	str	r0, [r1, #4]
    1388:	b	13b4 <dtdCopy+0x240>
    138c:	ldr	r0, [fp, #-8]
    1390:	ldr	r1, [fp, #-12]
    1394:	add	r1, r1, #60	; 0x3c
    1398:	ldr	r2, [sp, #24]
    139c:	ldr	r2, [r2, #4]
    13a0:	ldr	r2, [r2]
    13a4:	movw	r3, #0
    13a8:	bl	7694 <lookup>
    13ac:	ldr	r1, [sp, #32]
    13b0:	str	r0, [r1, #4]
    13b4:	b	13b8 <dtdCopy+0x244>
    13b8:	b	1238 <dtdCopy+0xc4>
    13bc:	ldr	r0, [fp, #-16]
    13c0:	add	r1, r0, #20
    13c4:	sub	r0, fp, #28
    13c8:	bl	dbc0 <hashTableIterInit>
    13cc:	sub	r0, fp, #28
    13d0:	bl	dc00 <hashTableIterNext>
    13d4:	str	r0, [sp, #8]
    13d8:	ldr	r0, [sp, #8]
    13dc:	movw	lr, #0
    13e0:	cmp	r0, lr
    13e4:	bne	13ec <dtdCopy+0x278>
    13e8:	b	16d8 <dtdCopy+0x564>
    13ec:	ldr	r0, [fp, #-12]
    13f0:	add	r0, r0, #80	; 0x50
    13f4:	ldr	r1, [sp, #8]
    13f8:	ldr	r1, [r1]
    13fc:	bl	c54 <poolCopyString>
    1400:	str	r0, [sp, #12]
    1404:	ldr	r0, [sp, #12]
    1408:	movw	r1, #0
    140c:	cmp	r0, r1
    1410:	bne	1420 <dtdCopy+0x2ac>
    1414:	movw	r0, #0
    1418:	str	r0, [fp, #-4]
    141c:	b	17e0 <dtdCopy+0x66c>
    1420:	ldr	r0, [fp, #-8]
    1424:	ldr	r1, [fp, #-12]
    1428:	add	r1, r1, #20
    142c:	ldr	r2, [sp, #12]
    1430:	movw	r3, #24
    1434:	bl	7694 <lookup>
    1438:	str	r0, [sp, #16]
    143c:	ldr	r0, [sp, #16]
    1440:	movw	r1, #0
    1444:	cmp	r0, r1
    1448:	bne	1458 <dtdCopy+0x2e4>
    144c:	movw	r0, #0
    1450:	str	r0, [fp, #-4]
    1454:	b	17e0 <dtdCopy+0x66c>
    1458:	ldr	r0, [sp, #8]
    145c:	ldr	r0, [r0, #12]
    1460:	cmp	r0, #0
    1464:	beq	14d8 <dtdCopy+0x364>
    1468:	ldr	r0, [fp, #-20]	; 0xffffffec
    146c:	ldr	r0, [r0]
    1470:	ldr	r1, [sp, #8]
    1474:	ldr	r1, [r1, #12]
    1478:	movw	r2, #12
    147c:	mul	r1, r1, r2
    1480:	str	r0, [sp, #4]
    1484:	mov	r0, r1
    1488:	ldr	r1, [sp, #4]
    148c:	blx	r1
    1490:	ldr	r1, [sp, #16]
    1494:	str	r0, [r1, #20]
    1498:	ldr	r0, [sp, #16]
    149c:	ldr	r0, [r0, #20]
    14a0:	movw	r1, #0
    14a4:	cmp	r0, r1
    14a8:	bne	14d4 <dtdCopy+0x360>
    14ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    14b0:	ldr	r0, [r0, #8]
    14b4:	ldr	r1, [sp, #16]
    14b8:	str	r0, [sp]
    14bc:	mov	r0, r1
    14c0:	ldr	r1, [sp]
    14c4:	blx	r1
    14c8:	movw	r0, #0
    14cc:	str	r0, [fp, #-4]
    14d0:	b	17e0 <dtdCopy+0x66c>
    14d4:	b	14d8 <dtdCopy+0x364>
    14d8:	ldr	r0, [sp, #8]
    14dc:	ldr	r0, [r0, #8]
    14e0:	movw	r1, #0
    14e4:	cmp	r0, r1
    14e8:	beq	1514 <dtdCopy+0x3a0>
    14ec:	ldr	r0, [fp, #-8]
    14f0:	ldr	r1, [fp, #-12]
    14f4:	add	r1, r1, #40	; 0x28
    14f8:	ldr	r2, [sp, #8]
    14fc:	ldr	r2, [r2, #8]
    1500:	ldr	r2, [r2]
    1504:	movw	r3, #0
    1508:	bl	7694 <lookup>
    150c:	ldr	r1, [sp, #16]
    1510:	str	r0, [r1, #8]
    1514:	ldr	r0, [sp, #8]
    1518:	ldr	r0, [r0, #12]
    151c:	ldr	r1, [sp, #16]
    1520:	str	r0, [r1, #12]
    1524:	ldr	r1, [sp, #16]
    1528:	str	r0, [r1, #16]
    152c:	ldr	r0, [sp, #8]
    1530:	ldr	r0, [r0, #4]
    1534:	movw	r1, #0
    1538:	cmp	r0, r1
    153c:	beq	1568 <dtdCopy+0x3f4>
    1540:	ldr	r0, [fp, #-8]
    1544:	ldr	r1, [fp, #-12]
    1548:	add	r1, r1, #60	; 0x3c
    154c:	ldr	r2, [sp, #8]
    1550:	ldr	r2, [r2, #4]
    1554:	ldr	r2, [r2]
    1558:	movw	r3, #0
    155c:	bl	7694 <lookup>
    1560:	ldr	r1, [sp, #16]
    1564:	str	r0, [r1, #4]
    1568:	movw	r0, #0
    156c:	str	r0, [sp, #20]
    1570:	ldr	r0, [sp, #20]
    1574:	ldr	r1, [sp, #16]
    1578:	ldr	r1, [r1, #12]
    157c:	cmp	r0, r1
    1580:	bge	16d4 <dtdCopy+0x560>
    1584:	ldr	r0, [fp, #-8]
    1588:	ldr	r1, [fp, #-12]
    158c:	add	r1, r1, #40	; 0x28
    1590:	ldr	r2, [sp, #8]
    1594:	ldr	r2, [r2, #20]
    1598:	ldr	r3, [sp, #20]
    159c:	movw	ip, #12
    15a0:	mul	r3, r3, ip
    15a4:	add	r2, r2, r3
    15a8:	ldr	r2, [r2]
    15ac:	ldr	r2, [r2]
    15b0:	movw	r3, #0
    15b4:	bl	7694 <lookup>
    15b8:	ldr	r1, [sp, #16]
    15bc:	ldr	r1, [r1, #20]
    15c0:	ldr	r2, [sp, #20]
    15c4:	movw	r3, #12
    15c8:	mul	r2, r2, r3
    15cc:	add	r1, r1, r2
    15d0:	str	r0, [r1]
    15d4:	ldr	r0, [sp, #8]
    15d8:	ldr	r0, [r0, #20]
    15dc:	ldr	r1, [sp, #20]
    15e0:	mul	r1, r1, r3
    15e4:	add	r0, r0, r1
    15e8:	ldrb	r0, [r0, #4]
    15ec:	ldr	r1, [sp, #16]
    15f0:	ldr	r1, [r1, #20]
    15f4:	ldr	r2, [sp, #20]
    15f8:	mul	r2, r2, r3
    15fc:	add	r1, r1, r2
    1600:	strb	r0, [r1, #4]
    1604:	ldr	r0, [sp, #8]
    1608:	ldr	r0, [r0, #20]
    160c:	ldr	r1, [sp, #20]
    1610:	mul	r1, r1, r3
    1614:	add	r0, r0, r1
    1618:	ldr	r0, [r0, #8]
    161c:	movw	r1, #0
    1620:	cmp	r0, r1
    1624:	beq	16a0 <dtdCopy+0x52c>
    1628:	ldr	r0, [fp, #-12]
    162c:	add	r0, r0, #80	; 0x50
    1630:	ldr	r1, [sp, #8]
    1634:	ldr	r1, [r1, #20]
    1638:	ldr	r2, [sp, #20]
    163c:	movw	r3, #12
    1640:	mul	r2, r2, r3
    1644:	add	r1, r1, r2
    1648:	ldr	r1, [r1, #8]
    164c:	bl	c54 <poolCopyString>
    1650:	ldr	r1, [sp, #16]
    1654:	ldr	r1, [r1, #20]
    1658:	ldr	r2, [sp, #20]
    165c:	movw	r3, #12
    1660:	mul	r2, r2, r3
    1664:	add	r1, r1, r2
    1668:	str	r0, [r1, #8]
    166c:	ldr	r0, [sp, #16]
    1670:	ldr	r0, [r0, #20]
    1674:	ldr	r1, [sp, #20]
    1678:	mul	r1, r1, r3
    167c:	add	r0, r0, r1
    1680:	ldr	r0, [r0, #8]
    1684:	movw	r1, #0
    1688:	cmp	r0, r1
    168c:	bne	169c <dtdCopy+0x528>
    1690:	movw	r0, #0
    1694:	str	r0, [fp, #-4]
    1698:	b	17e0 <dtdCopy+0x66c>
    169c:	b	16c0 <dtdCopy+0x54c>
    16a0:	ldr	r0, [sp, #16]
    16a4:	ldr	r0, [r0, #20]
    16a8:	ldr	r1, [sp, #20]
    16ac:	movw	r2, #12
    16b0:	mul	r1, r1, r2
    16b4:	add	r0, r0, r1
    16b8:	movw	r1, #0
    16bc:	str	r1, [r0, #8]
    16c0:	b	16c4 <dtdCopy+0x550>
    16c4:	ldr	r0, [sp, #20]
    16c8:	add	r0, r0, #1
    16cc:	str	r0, [sp, #20]
    16d0:	b	1570 <dtdCopy+0x3fc>
    16d4:	b	13cc <dtdCopy+0x258>
    16d8:	ldr	r0, [fp, #-8]
    16dc:	ldr	r1, [fp, #-12]
    16e0:	ldr	r2, [fp, #-12]
    16e4:	add	r2, r2, #80	; 0x50
    16e8:	ldr	r3, [fp, #-16]
    16ec:	bl	fd94 <copyEntityTable>
    16f0:	cmp	r0, #0
    16f4:	bne	1704 <dtdCopy+0x590>
    16f8:	movw	r0, #0
    16fc:	str	r0, [fp, #-4]
    1700:	b	17e0 <dtdCopy+0x66c>
    1704:	ldr	r0, [fp, #-8]
    1708:	ldr	r1, [fp, #-12]
    170c:	add	r1, r1, #132	; 0x84
    1710:	ldr	r2, [fp, #-12]
    1714:	add	r2, r2, #80	; 0x50
    1718:	ldr	r3, [fp, #-16]
    171c:	add	r3, r3, #132	; 0x84
    1720:	bl	fd94 <copyEntityTable>
    1724:	cmp	r0, #0
    1728:	bne	1738 <dtdCopy+0x5c4>
    172c:	movw	r0, #0
    1730:	str	r0, [fp, #-4]
    1734:	b	17e0 <dtdCopy+0x66c>
    1738:	ldr	r0, [fp, #-16]
    173c:	ldrb	r0, [r0, #131]	; 0x83
    1740:	ldr	r1, [fp, #-12]
    1744:	strb	r0, [r1, #131]	; 0x83
    1748:	ldr	r0, [fp, #-16]
    174c:	ldrb	r0, [r0, #128]	; 0x80
    1750:	ldr	r1, [fp, #-12]
    1754:	strb	r0, [r1, #128]	; 0x80
    1758:	ldr	r0, [fp, #-16]
    175c:	ldrb	r0, [r0, #129]	; 0x81
    1760:	ldr	r1, [fp, #-12]
    1764:	strb	r0, [r1, #129]	; 0x81
    1768:	ldr	r0, [fp, #-16]
    176c:	ldrb	r0, [r0, #130]	; 0x82
    1770:	ldr	r1, [fp, #-12]
    1774:	strb	r0, [r1, #130]	; 0x82
    1778:	ldr	r0, [fp, #-16]
    177c:	ldrb	r0, [r0, #160]	; 0xa0
    1780:	ldr	r1, [fp, #-12]
    1784:	strb	r0, [r1, #160]	; 0xa0
    1788:	ldr	r0, [fp, #-16]
    178c:	ldr	r0, [r0, #164]	; 0xa4
    1790:	ldr	r1, [fp, #-12]
    1794:	str	r0, [r1, #164]	; 0xa4
    1798:	ldr	r0, [fp, #-16]
    179c:	ldr	r0, [r0, #168]	; 0xa8
    17a0:	ldr	r1, [fp, #-12]
    17a4:	str	r0, [r1, #168]	; 0xa8
    17a8:	ldr	r0, [fp, #-16]
    17ac:	ldr	r0, [r0, #172]	; 0xac
    17b0:	ldr	r1, [fp, #-12]
    17b4:	str	r0, [r1, #172]	; 0xac
    17b8:	ldr	r0, [fp, #-16]
    17bc:	ldr	r0, [r0, #180]	; 0xb4
    17c0:	ldr	r1, [fp, #-12]
    17c4:	str	r0, [r1, #180]	; 0xb4
    17c8:	ldr	r0, [fp, #-16]
    17cc:	ldr	r0, [r0, #184]	; 0xb8
    17d0:	ldr	r1, [fp, #-12]
    17d4:	str	r0, [r1, #184]	; 0xb8
    17d8:	movw	r0, #1
    17dc:	str	r0, [fp, #-4]
    17e0:	ldr	r0, [fp, #-4]
    17e4:	mov	sp, fp
    17e8:	pop	{fp, pc}

000017ec <setContext>:
    17ec:	push	{fp, lr}
    17f0:	mov	fp, sp
    17f4:	sub	sp, sp, #40	; 0x28
    17f8:	str	r0, [fp, #-8]
    17fc:	str	r1, [fp, #-12]
    1800:	ldr	r0, [fp, #-8]
    1804:	ldr	r0, [r0, #364]	; 0x16c
    1808:	str	r0, [fp, #-16]
    180c:	ldr	r0, [fp, #-12]
    1810:	str	r0, [sp, #20]
    1814:	ldr	r0, [fp, #-12]
    1818:	ldrb	r0, [r0]
    181c:	cmp	r0, #0
    1820:	beq	1c54 <setContext+0x468>
    1824:	ldr	r0, [sp, #20]
    1828:	ldrb	r0, [r0]
    182c:	cmp	r0, #12
    1830:	beq	1844 <setContext+0x58>
    1834:	ldr	r0, [sp, #20]
    1838:	ldrb	r0, [r0]
    183c:	cmp	r0, #0
    1840:	bne	1910 <setContext+0x124>
    1844:	ldr	r0, [fp, #-8]
    1848:	ldr	r0, [r0, #444]	; 0x1bc
    184c:	ldr	r1, [fp, #-8]
    1850:	ldr	r1, [r1, #440]	; 0x1b8
    1854:	cmp	r0, r1
    1858:	bne	1878 <setContext+0x8c>
    185c:	ldr	r0, [fp, #-8]
    1860:	add	r0, r0, #432	; 0x1b0
    1864:	bl	8764 <poolGrow>
    1868:	sxtb	r0, r0
    186c:	cmp	r0, #0
    1870:	bne	1878 <setContext+0x8c>
    1874:	b	1894 <setContext+0xa8>
    1878:	ldr	r0, [fp, #-8]
    187c:	ldr	r1, [r0, #444]	; 0x1bc
    1880:	add	r2, r1, #1
    1884:	str	r2, [r0, #444]	; 0x1bc
    1888:	movw	r0, #0
    188c:	strb	r0, [r1]
    1890:	b	18a0 <setContext+0xb4>
    1894:	movw	r0, #0
    1898:	strb	r0, [fp, #-1]
    189c:	b	1c5c <setContext+0x470>
    18a0:	ldr	r0, [fp, #-8]
    18a4:	ldr	r1, [fp, #-16]
    18a8:	ldr	r2, [fp, #-8]
    18ac:	ldr	r2, [r2, #448]	; 0x1c0
    18b0:	movw	r3, #0
    18b4:	bl	7694 <lookup>
    18b8:	str	r0, [sp, #16]
    18bc:	ldr	r0, [sp, #16]
    18c0:	movw	r1, #0
    18c4:	cmp	r0, r1
    18c8:	beq	18d8 <setContext+0xec>
    18cc:	ldr	r0, [sp, #16]
    18d0:	movw	r1, #1
    18d4:	strb	r1, [r0, #32]
    18d8:	ldr	r0, [sp, #20]
    18dc:	ldrb	r0, [r0]
    18e0:	cmp	r0, #0
    18e4:	beq	18f4 <setContext+0x108>
    18e8:	ldr	r0, [sp, #20]
    18ec:	add	r0, r0, #1
    18f0:	str	r0, [sp, #20]
    18f4:	ldr	r0, [sp, #20]
    18f8:	str	r0, [fp, #-12]
    18fc:	ldr	r0, [fp, #-8]
    1900:	ldr	r0, [r0, #448]	; 0x1c0
    1904:	ldr	r1, [fp, #-8]
    1908:	str	r0, [r1, #444]	; 0x1bc
    190c:	b	1c50 <setContext+0x464>
    1910:	ldr	r0, [sp, #20]
    1914:	ldrb	r0, [r0]
    1918:	cmp	r0, #61	; 0x3d
    191c:	bne	1be0 <setContext+0x3f4>
    1920:	ldr	r0, [fp, #-8]
    1924:	ldr	r0, [r0, #444]	; 0x1bc
    1928:	ldr	r1, [fp, #-8]
    192c:	ldr	r1, [r1, #448]	; 0x1c0
    1930:	sub	r0, r0, r1
    1934:	cmp	r0, #0
    1938:	bne	194c <setContext+0x160>
    193c:	ldr	r0, [fp, #-16]
    1940:	add	r0, r0, #152	; 0x98
    1944:	str	r0, [sp, #12]
    1948:	b	1a4c <setContext+0x260>
    194c:	ldr	r0, [fp, #-8]
    1950:	ldr	r0, [r0, #444]	; 0x1bc
    1954:	ldr	r1, [fp, #-8]
    1958:	ldr	r1, [r1, #440]	; 0x1b8
    195c:	cmp	r0, r1
    1960:	bne	1980 <setContext+0x194>
    1964:	ldr	r0, [fp, #-8]
    1968:	add	r0, r0, #432	; 0x1b0
    196c:	bl	8764 <poolGrow>
    1970:	sxtb	r0, r0
    1974:	cmp	r0, #0
    1978:	bne	1980 <setContext+0x194>
    197c:	b	199c <setContext+0x1b0>
    1980:	ldr	r0, [fp, #-8]
    1984:	ldr	r1, [r0, #444]	; 0x1bc
    1988:	add	r2, r1, #1
    198c:	str	r2, [r0, #444]	; 0x1bc
    1990:	movw	r0, #0
    1994:	strb	r0, [r1]
    1998:	b	19a8 <setContext+0x1bc>
    199c:	movw	r0, #0
    19a0:	strb	r0, [fp, #-1]
    19a4:	b	1c5c <setContext+0x470>
    19a8:	ldr	r0, [fp, #-8]
    19ac:	ldr	r1, [fp, #-16]
    19b0:	add	r1, r1, #60	; 0x3c
    19b4:	ldr	r2, [fp, #-8]
    19b8:	ldr	r2, [r2, #448]	; 0x1c0
    19bc:	movw	r3, #8
    19c0:	bl	7694 <lookup>
    19c4:	str	r0, [sp, #12]
    19c8:	ldr	r0, [sp, #12]
    19cc:	movw	r1, #0
    19d0:	cmp	r0, r1
    19d4:	bne	19e4 <setContext+0x1f8>
    19d8:	movw	r0, #0
    19dc:	strb	r0, [fp, #-1]
    19e0:	b	1c5c <setContext+0x470>
    19e4:	ldr	r0, [sp, #12]
    19e8:	ldr	r0, [r0]
    19ec:	ldr	r1, [fp, #-8]
    19f0:	ldr	r1, [r1, #448]	; 0x1c0
    19f4:	cmp	r0, r1
    19f8:	bne	1a3c <setContext+0x250>
    19fc:	ldr	r0, [fp, #-16]
    1a00:	add	r0, r0, #80	; 0x50
    1a04:	ldr	r1, [sp, #12]
    1a08:	ldr	r1, [r1]
    1a0c:	bl	c54 <poolCopyString>
    1a10:	ldr	r1, [sp, #12]
    1a14:	str	r0, [r1]
    1a18:	ldr	r0, [sp, #12]
    1a1c:	ldr	r0, [r0]
    1a20:	movw	r1, #0
    1a24:	cmp	r0, r1
    1a28:	bne	1a38 <setContext+0x24c>
    1a2c:	movw	r0, #0
    1a30:	strb	r0, [fp, #-1]
    1a34:	b	1c5c <setContext+0x470>
    1a38:	b	1a3c <setContext+0x250>
    1a3c:	ldr	r0, [fp, #-8]
    1a40:	ldr	r0, [r0, #448]	; 0x1c0
    1a44:	ldr	r1, [fp, #-8]
    1a48:	str	r0, [r1, #444]	; 0x1bc
    1a4c:	ldr	r0, [sp, #20]
    1a50:	add	r0, r0, #1
    1a54:	str	r0, [fp, #-12]
    1a58:	ldr	r0, [fp, #-12]
    1a5c:	ldrb	r0, [r0]
    1a60:	cmp	r0, #12
    1a64:	movw	r0, #0
    1a68:	str	r0, [sp, #8]
    1a6c:	beq	1a88 <setContext+0x29c>
    1a70:	ldr	r0, [fp, #-12]
    1a74:	ldrb	r0, [r0]
    1a78:	cmp	r0, #0
    1a7c:	movw	r0, #0
    1a80:	movne	r0, #1
    1a84:	str	r0, [sp, #8]
    1a88:	ldr	r0, [sp, #8]
    1a8c:	tst	r0, #1
    1a90:	beq	1b08 <setContext+0x31c>
    1a94:	ldr	r0, [fp, #-8]
    1a98:	ldr	r0, [r0, #444]	; 0x1bc
    1a9c:	ldr	r1, [fp, #-8]
    1aa0:	ldr	r1, [r1, #440]	; 0x1b8
    1aa4:	cmp	r0, r1
    1aa8:	bne	1ac8 <setContext+0x2dc>
    1aac:	ldr	r0, [fp, #-8]
    1ab0:	add	r0, r0, #432	; 0x1b0
    1ab4:	bl	8764 <poolGrow>
    1ab8:	sxtb	r0, r0
    1abc:	cmp	r0, #0
    1ac0:	bne	1ac8 <setContext+0x2dc>
    1ac4:	b	1ae8 <setContext+0x2fc>
    1ac8:	ldr	r0, [fp, #-12]
    1acc:	ldrb	r0, [r0]
    1ad0:	ldr	r1, [fp, #-8]
    1ad4:	ldr	r2, [r1, #444]	; 0x1bc
    1ad8:	add	r3, r2, #1
    1adc:	str	r3, [r1, #444]	; 0x1bc
    1ae0:	strb	r0, [r2]
    1ae4:	b	1af4 <setContext+0x308>
    1ae8:	movw	r0, #0
    1aec:	strb	r0, [fp, #-1]
    1af0:	b	1c5c <setContext+0x470>
    1af4:	b	1af8 <setContext+0x30c>
    1af8:	ldr	r0, [fp, #-12]
    1afc:	add	r0, r0, #1
    1b00:	str	r0, [fp, #-12]
    1b04:	b	1a58 <setContext+0x26c>
    1b08:	ldr	r0, [fp, #-8]
    1b0c:	ldr	r0, [r0, #444]	; 0x1bc
    1b10:	ldr	r1, [fp, #-8]
    1b14:	ldr	r1, [r1, #440]	; 0x1b8
    1b18:	cmp	r0, r1
    1b1c:	bne	1b3c <setContext+0x350>
    1b20:	ldr	r0, [fp, #-8]
    1b24:	add	r0, r0, #432	; 0x1b0
    1b28:	bl	8764 <poolGrow>
    1b2c:	sxtb	r0, r0
    1b30:	cmp	r0, #0
    1b34:	bne	1b3c <setContext+0x350>
    1b38:	b	1b58 <setContext+0x36c>
    1b3c:	ldr	r0, [fp, #-8]
    1b40:	ldr	r1, [r0, #444]	; 0x1bc
    1b44:	add	r2, r1, #1
    1b48:	str	r2, [r0, #444]	; 0x1bc
    1b4c:	movw	r0, #0
    1b50:	strb	r0, [r1]
    1b54:	b	1b64 <setContext+0x378>
    1b58:	movw	r0, #0
    1b5c:	strb	r0, [fp, #-1]
    1b60:	b	1c5c <setContext+0x470>
    1b64:	ldr	r0, [fp, #-8]
    1b68:	ldr	r1, [sp, #12]
    1b6c:	ldr	r2, [fp, #-8]
    1b70:	ldr	r3, [r2, #448]	; 0x1c0
    1b74:	ldr	r2, [fp, #-8]
    1b78:	add	r2, r2, #380	; 0x17c
    1b7c:	movw	ip, #0
    1b80:	str	r2, [sp, #4]
    1b84:	mov	r2, ip
    1b88:	ldr	ip, [sp, #4]
    1b8c:	str	ip, [sp]
    1b90:	bl	de50 <addBinding>
    1b94:	cmp	r0, #0
    1b98:	beq	1ba8 <setContext+0x3bc>
    1b9c:	movw	r0, #0
    1ba0:	strb	r0, [fp, #-1]
    1ba4:	b	1c5c <setContext+0x470>
    1ba8:	ldr	r0, [fp, #-8]
    1bac:	ldr	r0, [r0, #448]	; 0x1c0
    1bb0:	ldr	r1, [fp, #-8]
    1bb4:	str	r0, [r1, #444]	; 0x1bc
    1bb8:	ldr	r0, [fp, #-12]
    1bbc:	ldrb	r0, [r0]
    1bc0:	cmp	r0, #0
    1bc4:	beq	1bd4 <setContext+0x3e8>
    1bc8:	ldr	r0, [fp, #-12]
    1bcc:	add	r0, r0, #1
    1bd0:	str	r0, [fp, #-12]
    1bd4:	ldr	r0, [fp, #-12]
    1bd8:	str	r0, [sp, #20]
    1bdc:	b	1c4c <setContext+0x460>
    1be0:	ldr	r0, [fp, #-8]
    1be4:	ldr	r0, [r0, #444]	; 0x1bc
    1be8:	ldr	r1, [fp, #-8]
    1bec:	ldr	r1, [r1, #440]	; 0x1b8
    1bf0:	cmp	r0, r1
    1bf4:	bne	1c14 <setContext+0x428>
    1bf8:	ldr	r0, [fp, #-8]
    1bfc:	add	r0, r0, #432	; 0x1b0
    1c00:	bl	8764 <poolGrow>
    1c04:	sxtb	r0, r0
    1c08:	cmp	r0, #0
    1c0c:	bne	1c14 <setContext+0x428>
    1c10:	b	1c34 <setContext+0x448>
    1c14:	ldr	r0, [sp, #20]
    1c18:	ldrb	r0, [r0]
    1c1c:	ldr	r1, [fp, #-8]
    1c20:	ldr	r2, [r1, #444]	; 0x1bc
    1c24:	add	r3, r2, #1
    1c28:	str	r3, [r1, #444]	; 0x1bc
    1c2c:	strb	r0, [r2]
    1c30:	b	1c40 <setContext+0x454>
    1c34:	movw	r0, #0
    1c38:	strb	r0, [fp, #-1]
    1c3c:	b	1c5c <setContext+0x470>
    1c40:	ldr	r0, [sp, #20]
    1c44:	add	r0, r0, #1
    1c48:	str	r0, [sp, #20]
    1c4c:	b	1c50 <setContext+0x464>
    1c50:	b	1814 <setContext+0x28>
    1c54:	movw	r0, #1
    1c58:	strb	r0, [fp, #-1]
    1c5c:	ldrb	r0, [fp, #-1]
    1c60:	mov	sp, fp
    1c64:	pop	{fp, pc}

00001c68 <coda_XML_ParserFree>:
    1c68:	push	{fp, lr}
    1c6c:	mov	fp, sp
    1c70:	sub	sp, sp, #64	; 0x40
    1c74:	str	r0, [fp, #-4]
    1c78:	ldr	r0, [fp, #-4]
    1c7c:	movw	r1, #0
    1c80:	cmp	r0, r1
    1c84:	bne	1c8c <coda_XML_ParserFree+0x24>
    1c88:	b	1f68 <coda_XML_ParserFree+0x300>
    1c8c:	ldr	r0, [fp, #-4]
    1c90:	ldr	r0, [r0, #372]	; 0x174
    1c94:	str	r0, [fp, #-8]
    1c98:	ldr	r0, [fp, #-8]
    1c9c:	movw	r1, #0
    1ca0:	cmp	r0, r1
    1ca4:	bne	1cd8 <coda_XML_ParserFree+0x70>
    1ca8:	ldr	r0, [fp, #-4]
    1cac:	ldr	r0, [r0, #376]	; 0x178
    1cb0:	movw	r1, #0
    1cb4:	cmp	r0, r1
    1cb8:	bne	1cc0 <coda_XML_ParserFree+0x58>
    1cbc:	b	1d3c <coda_XML_ParserFree+0xd4>
    1cc0:	ldr	r0, [fp, #-4]
    1cc4:	ldr	r0, [r0, #376]	; 0x178
    1cc8:	str	r0, [fp, #-8]
    1ccc:	ldr	r0, [fp, #-4]
    1cd0:	movw	r1, #0
    1cd4:	str	r1, [r0, #376]	; 0x178
    1cd8:	ldr	r0, [fp, #-8]
    1cdc:	str	r0, [fp, #-16]
    1ce0:	ldr	r0, [fp, #-8]
    1ce4:	ldr	r0, [r0]
    1ce8:	str	r0, [fp, #-8]
    1cec:	ldr	r0, [fp, #-4]
    1cf0:	ldr	r0, [r0, #20]
    1cf4:	ldr	r1, [fp, #-16]
    1cf8:	ldr	r1, [r1, #36]	; 0x24
    1cfc:	str	r0, [fp, #-24]	; 0xffffffe8
    1d00:	mov	r0, r1
    1d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d08:	blx	r1
    1d0c:	ldr	r0, [fp, #-16]
    1d10:	ldr	r0, [r0, #44]	; 0x2c
    1d14:	ldr	r1, [fp, #-4]
    1d18:	bl	20a4 <destroyBindings>
    1d1c:	ldr	r0, [fp, #-4]
    1d20:	ldr	r0, [r0, #20]
    1d24:	ldr	r1, [fp, #-16]
    1d28:	str	r0, [fp, #-28]	; 0xffffffe4
    1d2c:	mov	r0, r1
    1d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d34:	blx	r1
    1d38:	b	1c98 <coda_XML_ParserFree+0x30>
    1d3c:	ldr	r0, [fp, #-4]
    1d40:	ldr	r0, [r0, #308]	; 0x134
    1d44:	str	r0, [fp, #-12]
    1d48:	ldr	r0, [fp, #-12]
    1d4c:	movw	r1, #0
    1d50:	cmp	r0, r1
    1d54:	bne	1d88 <coda_XML_ParserFree+0x120>
    1d58:	ldr	r0, [fp, #-4]
    1d5c:	ldr	r0, [r0, #312]	; 0x138
    1d60:	movw	r1, #0
    1d64:	cmp	r0, r1
    1d68:	bne	1d70 <coda_XML_ParserFree+0x108>
    1d6c:	b	1dbc <coda_XML_ParserFree+0x154>
    1d70:	ldr	r0, [fp, #-4]
    1d74:	ldr	r0, [r0, #312]	; 0x138
    1d78:	str	r0, [fp, #-12]
    1d7c:	ldr	r0, [fp, #-4]
    1d80:	movw	r1, #0
    1d84:	str	r1, [r0, #312]	; 0x138
    1d88:	ldr	r0, [fp, #-12]
    1d8c:	str	r0, [fp, #-20]	; 0xffffffec
    1d90:	ldr	r0, [fp, #-12]
    1d94:	ldr	r0, [r0, #8]
    1d98:	str	r0, [fp, #-12]
    1d9c:	ldr	r0, [fp, #-4]
    1da0:	ldr	r0, [r0, #20]
    1da4:	ldr	r1, [fp, #-20]	; 0xffffffec
    1da8:	str	r0, [sp, #32]
    1dac:	mov	r0, r1
    1db0:	ldr	r1, [sp, #32]
    1db4:	blx	r1
    1db8:	b	1d48 <coda_XML_ParserFree+0xe0>
    1dbc:	ldr	r0, [fp, #-4]
    1dc0:	ldr	r0, [r0, #384]	; 0x180
    1dc4:	ldr	r1, [fp, #-4]
    1dc8:	bl	20a4 <destroyBindings>
    1dcc:	ldr	r0, [fp, #-4]
    1dd0:	ldr	r0, [r0, #380]	; 0x17c
    1dd4:	ldr	r1, [fp, #-4]
    1dd8:	bl	20a4 <destroyBindings>
    1ddc:	ldr	r0, [fp, #-4]
    1de0:	add	r0, r0, #432	; 0x1b0
    1de4:	bl	2128 <poolDestroy>
    1de8:	ldr	r0, [fp, #-4]
    1dec:	add	r0, r0, #456	; 0x1c8
    1df0:	bl	2128 <poolDestroy>
    1df4:	ldr	r0, [fp, #-4]
    1df8:	add	r0, r0, #504	; 0x1f8
    1dfc:	ldrsb	r0, [r0]
    1e00:	cmp	r0, #0
    1e04:	bne	1e58 <coda_XML_ParserFree+0x1f0>
    1e08:	ldr	r0, [fp, #-4]
    1e0c:	ldr	r0, [r0, #364]	; 0x16c
    1e10:	movw	r1, #0
    1e14:	cmp	r0, r1
    1e18:	beq	1e58 <coda_XML_ParserFree+0x1f0>
    1e1c:	ldr	r0, [fp, #-4]
    1e20:	ldr	r0, [r0, #364]	; 0x16c
    1e24:	ldr	r1, [fp, #-4]
    1e28:	ldr	r1, [r1, #492]	; 0x1ec
    1e2c:	movw	r2, #0
    1e30:	cmp	r1, r2
    1e34:	movw	r1, #0
    1e38:	movne	r1, #1
    1e3c:	mvn	r2, #0
    1e40:	eor	r1, r1, r2
    1e44:	and	r1, r1, #1
    1e48:	ldr	r2, [fp, #-4]
    1e4c:	add	r2, r2, #12
    1e50:	and	r1, r1, #255	; 0xff
    1e54:	bl	21e8 <dtdDestroy>
    1e58:	ldr	r0, [fp, #-4]
    1e5c:	ldr	r0, [r0, #20]
    1e60:	ldr	r1, [fp, #-4]
    1e64:	ldr	r1, [r1, #400]	; 0x190
    1e68:	str	r0, [sp, #28]
    1e6c:	mov	r0, r1
    1e70:	ldr	r1, [sp, #28]
    1e74:	blx	r1
    1e78:	ldr	r0, [fp, #-4]
    1e7c:	ldr	r0, [r0, #20]
    1e80:	ldr	r1, [fp, #-4]
    1e84:	ldr	r1, [r1, #480]	; 0x1e0
    1e88:	str	r0, [sp, #24]
    1e8c:	mov	r0, r1
    1e90:	ldr	r1, [sp, #24]
    1e94:	blx	r1
    1e98:	ldr	r0, [fp, #-4]
    1e9c:	ldr	r0, [r0, #20]
    1ea0:	ldr	r1, [fp, #-4]
    1ea4:	ldr	r1, [r1, #8]
    1ea8:	str	r0, [sp, #20]
    1eac:	mov	r0, r1
    1eb0:	ldr	r1, [sp, #20]
    1eb4:	blx	r1
    1eb8:	ldr	r0, [fp, #-4]
    1ebc:	ldr	r0, [r0, #20]
    1ec0:	ldr	r1, [fp, #-4]
    1ec4:	ldr	r1, [r1, #52]	; 0x34
    1ec8:	str	r0, [sp, #16]
    1ecc:	mov	r0, r1
    1ed0:	ldr	r1, [sp, #16]
    1ed4:	blx	r1
    1ed8:	ldr	r0, [fp, #-4]
    1edc:	ldr	r0, [r0, #20]
    1ee0:	ldr	r1, [fp, #-4]
    1ee4:	ldr	r1, [r1, #404]	; 0x194
    1ee8:	str	r0, [sp, #12]
    1eec:	mov	r0, r1
    1ef0:	ldr	r1, [sp, #12]
    1ef4:	blx	r1
    1ef8:	ldr	r0, [fp, #-4]
    1efc:	ldr	r0, [r0, #20]
    1f00:	ldr	r1, [fp, #-4]
    1f04:	ldr	r1, [r1, #248]	; 0xf8
    1f08:	str	r0, [sp, #8]
    1f0c:	mov	r0, r1
    1f10:	ldr	r1, [sp, #8]
    1f14:	blx	r1
    1f18:	ldr	r0, [fp, #-4]
    1f1c:	ldr	r0, [r0, #260]	; 0x104
    1f20:	movw	r1, #0
    1f24:	cmp	r0, r1
    1f28:	beq	1f4c <coda_XML_ParserFree+0x2e4>
    1f2c:	ldr	r0, [fp, #-4]
    1f30:	ldr	r0, [r0, #260]	; 0x104
    1f34:	ldr	r1, [fp, #-4]
    1f38:	ldr	r1, [r1, #252]	; 0xfc
    1f3c:	str	r0, [sp, #4]
    1f40:	mov	r0, r1
    1f44:	ldr	r1, [sp, #4]
    1f48:	blx	r1
    1f4c:	ldr	r0, [fp, #-4]
    1f50:	ldr	r0, [r0, #20]
    1f54:	ldr	r1, [fp, #-4]
    1f58:	str	r0, [sp]
    1f5c:	mov	r0, r1
    1f60:	ldr	r1, [sp]
    1f64:	blx	r1
    1f68:	mov	sp, fp
    1f6c:	pop	{fp, pc}

00001f70 <externalEntityInitProcessor>:
    1f70:	push	{fp, lr}
    1f74:	mov	fp, sp
    1f78:	sub	sp, sp, #24
    1f7c:	str	r0, [fp, #-8]
    1f80:	str	r1, [sp, #12]
    1f84:	str	r2, [sp, #8]
    1f88:	str	r3, [sp, #4]
    1f8c:	ldr	r0, [fp, #-8]
    1f90:	bl	3f80 <initializeEncoding>
    1f94:	str	r0, [sp]
    1f98:	ldr	r0, [sp]
    1f9c:	cmp	r0, #0
    1fa0:	beq	1fb0 <externalEntityInitProcessor+0x40>
    1fa4:	ldr	r0, [sp]
    1fa8:	str	r0, [fp, #-4]
    1fac:	b	1fd8 <externalEntityInitProcessor+0x68>
    1fb0:	ldr	r0, [fp, #-8]
    1fb4:	movw	r1, #0
    1fb8:	movt	r1, #0
    1fbc:	str	r1, [r0, #288]	; 0x120
    1fc0:	ldr	r0, [fp, #-8]
    1fc4:	ldr	r1, [sp, #12]
    1fc8:	ldr	r2, [sp, #8]
    1fcc:	ldr	r3, [sp, #4]
    1fd0:	bl	f364 <externalEntityInitProcessor2>
    1fd4:	str	r0, [fp, #-4]
    1fd8:	ldr	r0, [fp, #-4]
    1fdc:	mov	sp, fp
    1fe0:	pop	{fp, pc}

00001fe4 <externalParEntInitProcessor>:
    1fe4:	push	{fp, lr}
    1fe8:	mov	fp, sp
    1fec:	sub	sp, sp, #24
    1ff0:	str	r0, [fp, #-8]
    1ff4:	str	r1, [sp, #12]
    1ff8:	str	r2, [sp, #8]
    1ffc:	str	r3, [sp, #4]
    2000:	ldr	r0, [fp, #-8]
    2004:	bl	3f80 <initializeEncoding>
    2008:	str	r0, [sp]
    200c:	ldr	r0, [sp]
    2010:	cmp	r0, #0
    2014:	beq	2024 <externalParEntInitProcessor+0x40>
    2018:	ldr	r0, [sp]
    201c:	str	r0, [fp, #-4]
    2020:	b	2098 <externalParEntInitProcessor+0xb4>
    2024:	ldr	r0, [fp, #-8]
    2028:	ldr	r0, [r0, #364]	; 0x16c
    202c:	movw	r1, #1
    2030:	strb	r1, [r0, #131]	; 0x83
    2034:	ldr	r0, [fp, #-8]
    2038:	ldr	r0, [r0, #284]	; 0x11c
    203c:	cmp	r0, #0
    2040:	beq	2070 <externalParEntInitProcessor+0x8c>
    2044:	ldr	r0, [fp, #-8]
    2048:	movw	r1, #0
    204c:	movt	r1, #0
    2050:	str	r1, [r0, #288]	; 0x120
    2054:	ldr	r0, [fp, #-8]
    2058:	ldr	r1, [sp, #12]
    205c:	ldr	r2, [sp, #8]
    2060:	ldr	r3, [sp, #4]
    2064:	bl	f6d0 <entityValueInitProcessor>
    2068:	str	r0, [fp, #-4]
    206c:	b	2098 <externalParEntInitProcessor+0xb4>
    2070:	ldr	r0, [fp, #-8]
    2074:	movw	r1, #0
    2078:	movt	r1, #0
    207c:	str	r1, [r0, #288]	; 0x120
    2080:	ldr	r0, [fp, #-8]
    2084:	ldr	r1, [sp, #12]
    2088:	ldr	r2, [sp, #8]
    208c:	ldr	r3, [sp, #4]
    2090:	bl	f94c <externalParEntProcessor>
    2094:	str	r0, [fp, #-4]
    2098:	ldr	r0, [fp, #-4]
    209c:	mov	sp, fp
    20a0:	pop	{fp, pc}

000020a4 <destroyBindings>:
    20a4:	push	{fp, lr}
    20a8:	mov	fp, sp
    20ac:	sub	sp, sp, #24
    20b0:	str	r0, [fp, #-4]
    20b4:	str	r1, [fp, #-8]
    20b8:	ldr	r0, [fp, #-4]
    20bc:	str	r0, [sp, #12]
    20c0:	ldr	r0, [sp, #12]
    20c4:	movw	r1, #0
    20c8:	cmp	r0, r1
    20cc:	bne	20d4 <destroyBindings+0x30>
    20d0:	b	2120 <destroyBindings+0x7c>
    20d4:	ldr	r0, [sp, #12]
    20d8:	ldr	r0, [r0, #4]
    20dc:	str	r0, [fp, #-4]
    20e0:	ldr	r0, [fp, #-8]
    20e4:	ldr	r0, [r0, #20]
    20e8:	ldr	r1, [sp, #12]
    20ec:	ldr	r1, [r1, #16]
    20f0:	str	r0, [sp, #8]
    20f4:	mov	r0, r1
    20f8:	ldr	r1, [sp, #8]
    20fc:	blx	r1
    2100:	ldr	r0, [fp, #-8]
    2104:	ldr	r0, [r0, #20]
    2108:	ldr	r1, [sp, #12]
    210c:	str	r0, [sp, #4]
    2110:	mov	r0, r1
    2114:	ldr	r1, [sp, #4]
    2118:	blx	r1
    211c:	b	20b8 <destroyBindings+0x14>
    2120:	mov	sp, fp
    2124:	pop	{fp, pc}

00002128 <poolDestroy>:
    2128:	push	{fp, lr}
    212c:	mov	fp, sp
    2130:	sub	sp, sp, #24
    2134:	str	r0, [fp, #-4]
    2138:	ldr	r0, [fp, #-4]
    213c:	ldr	r0, [r0]
    2140:	str	r0, [fp, #-8]
    2144:	ldr	r0, [fp, #-8]
    2148:	movw	r1, #0
    214c:	cmp	r0, r1
    2150:	beq	218c <poolDestroy+0x64>
    2154:	ldr	r0, [fp, #-8]
    2158:	ldr	r0, [r0]
    215c:	str	r0, [sp, #12]
    2160:	ldr	r0, [fp, #-4]
    2164:	ldr	r0, [r0, #20]
    2168:	ldr	r0, [r0, #8]
    216c:	ldr	r1, [fp, #-8]
    2170:	str	r0, [sp, #4]
    2174:	mov	r0, r1
    2178:	ldr	r1, [sp, #4]
    217c:	blx	r1
    2180:	ldr	r0, [sp, #12]
    2184:	str	r0, [fp, #-8]
    2188:	b	2144 <poolDestroy+0x1c>
    218c:	ldr	r0, [fp, #-4]
    2190:	ldr	r0, [r0, #4]
    2194:	str	r0, [fp, #-8]
    2198:	ldr	r0, [fp, #-8]
    219c:	movw	r1, #0
    21a0:	cmp	r0, r1
    21a4:	beq	21e0 <poolDestroy+0xb8>
    21a8:	ldr	r0, [fp, #-8]
    21ac:	ldr	r0, [r0]
    21b0:	str	r0, [sp, #8]
    21b4:	ldr	r0, [fp, #-4]
    21b8:	ldr	r0, [r0, #20]
    21bc:	ldr	r0, [r0, #8]
    21c0:	ldr	r1, [fp, #-8]
    21c4:	str	r0, [sp]
    21c8:	mov	r0, r1
    21cc:	ldr	r1, [sp]
    21d0:	blx	r1
    21d4:	ldr	r0, [sp, #8]
    21d8:	str	r0, [fp, #-8]
    21dc:	b	2198 <poolDestroy+0x70>
    21e0:	mov	sp, fp
    21e4:	pop	{fp, pc}

000021e8 <dtdDestroy>:
    21e8:	push	{fp, lr}
    21ec:	mov	fp, sp
    21f0:	sub	sp, sp, #40	; 0x28
    21f4:	str	r0, [fp, #-4]
    21f8:	strb	r1, [fp, #-5]
    21fc:	str	r2, [fp, #-12]
    2200:	ldr	r0, [fp, #-4]
    2204:	add	r1, r0, #20
    2208:	add	r0, sp, #20
    220c:	bl	dbc0 <hashTableIterInit>
    2210:	add	r0, sp, #20
    2214:	bl	dc00 <hashTableIterNext>
    2218:	str	r0, [sp, #16]
    221c:	ldr	r0, [sp, #16]
    2220:	movw	lr, #0
    2224:	cmp	r0, lr
    2228:	bne	2230 <dtdDestroy+0x48>
    222c:	b	2264 <dtdDestroy+0x7c>
    2230:	ldr	r0, [sp, #16]
    2234:	ldr	r0, [r0, #16]
    2238:	cmp	r0, #0
    223c:	beq	2260 <dtdDestroy+0x78>
    2240:	ldr	r0, [fp, #-12]
    2244:	ldr	r0, [r0, #8]
    2248:	ldr	r1, [sp, #16]
    224c:	ldr	r1, [r1, #20]
    2250:	str	r0, [sp, #12]
    2254:	mov	r0, r1
    2258:	ldr	r1, [sp, #12]
    225c:	blx	r1
    2260:	b	2210 <dtdDestroy+0x28>
    2264:	ldr	r0, [fp, #-4]
    2268:	bl	fd00 <hashTableDestroy>
    226c:	ldr	r0, [fp, #-4]
    2270:	add	r0, r0, #132	; 0x84
    2274:	bl	fd00 <hashTableDestroy>
    2278:	ldr	r0, [fp, #-4]
    227c:	add	r0, r0, #20
    2280:	bl	fd00 <hashTableDestroy>
    2284:	ldr	r0, [fp, #-4]
    2288:	add	r0, r0, #40	; 0x28
    228c:	bl	fd00 <hashTableDestroy>
    2290:	ldr	r0, [fp, #-4]
    2294:	add	r0, r0, #60	; 0x3c
    2298:	bl	fd00 <hashTableDestroy>
    229c:	ldr	r0, [fp, #-4]
    22a0:	add	r0, r0, #80	; 0x50
    22a4:	bl	2128 <poolDestroy>
    22a8:	ldr	r0, [fp, #-4]
    22ac:	add	r0, r0, #104	; 0x68
    22b0:	bl	2128 <poolDestroy>
    22b4:	ldrsb	r0, [fp, #-5]
    22b8:	cmp	r0, #0
    22bc:	beq	2300 <dtdDestroy+0x118>
    22c0:	ldr	r0, [fp, #-12]
    22c4:	ldr	r0, [r0, #8]
    22c8:	ldr	r1, [fp, #-4]
    22cc:	ldr	r1, [r1, #184]	; 0xb8
    22d0:	str	r0, [sp, #8]
    22d4:	mov	r0, r1
    22d8:	ldr	r1, [sp, #8]
    22dc:	blx	r1
    22e0:	ldr	r0, [fp, #-12]
    22e4:	ldr	r0, [r0, #8]
    22e8:	ldr	r1, [fp, #-4]
    22ec:	ldr	r1, [r1, #164]	; 0xa4
    22f0:	str	r0, [sp, #4]
    22f4:	mov	r0, r1
    22f8:	ldr	r1, [sp, #4]
    22fc:	blx	r1
    2300:	ldr	r0, [fp, #-12]
    2304:	ldr	r0, [r0, #8]
    2308:	ldr	r1, [fp, #-4]
    230c:	str	r0, [sp]
    2310:	mov	r0, r1
    2314:	ldr	r1, [sp]
    2318:	blx	r1
    231c:	mov	sp, fp
    2320:	pop	{fp, pc}

00002324 <coda_XML_UseParserAsHandlerArg>:
    2324:	sub	sp, sp, #4
    2328:	str	r0, [sp]
    232c:	ldr	r0, [sp]
    2330:	ldr	r1, [sp]
    2334:	str	r0, [r1, #4]
    2338:	add	sp, sp, #4
    233c:	bx	lr

00002340 <coda_XML_UseForeignDTD>:
    2340:	sub	sp, sp, #12
    2344:	str	r0, [sp, #4]
    2348:	strb	r1, [sp, #3]
    234c:	ldr	r0, [sp, #4]
    2350:	ldr	r0, [r0, #496]	; 0x1f0
    2354:	cmp	r0, #1
    2358:	beq	236c <coda_XML_UseForeignDTD+0x2c>
    235c:	ldr	r0, [sp, #4]
    2360:	ldr	r0, [r0, #496]	; 0x1f0
    2364:	cmp	r0, #3
    2368:	bne	2378 <coda_XML_UseForeignDTD+0x38>
    236c:	movw	r0, #26
    2370:	str	r0, [sp, #8]
    2374:	b	238c <coda_XML_UseForeignDTD+0x4c>
    2378:	ldrb	r0, [sp, #3]
    237c:	ldr	r1, [sp, #4]
    2380:	strb	r0, [r1, #505]	; 0x1f9
    2384:	movw	r0, #0
    2388:	str	r0, [sp, #8]
    238c:	ldr	r0, [sp, #8]
    2390:	add	sp, sp, #12
    2394:	bx	lr

00002398 <coda_XML_SetReturnNSTriplet>:
    2398:	sub	sp, sp, #8
    239c:	str	r0, [sp, #4]
    23a0:	str	r1, [sp]
    23a4:	ldr	r0, [sp, #4]
    23a8:	ldr	r0, [r0, #496]	; 0x1f0
    23ac:	cmp	r0, #1
    23b0:	beq	23c4 <coda_XML_SetReturnNSTriplet+0x2c>
    23b4:	ldr	r0, [sp, #4]
    23b8:	ldr	r0, [r0, #496]	; 0x1f0
    23bc:	cmp	r0, #3
    23c0:	bne	23c8 <coda_XML_SetReturnNSTriplet+0x30>
    23c4:	b	23ec <coda_XML_SetReturnNSTriplet+0x54>
    23c8:	ldr	r0, [sp]
    23cc:	cmp	r0, #0
    23d0:	movw	r0, #0
    23d4:	movne	r0, #1
    23d8:	tst	r0, #1
    23dc:	movw	r0, #1
    23e0:	moveq	r0, #0
    23e4:	ldr	r1, [sp, #4]
    23e8:	strb	r0, [r1, #245]	; 0xf5
    23ec:	add	sp, sp, #8
    23f0:	bx	lr

000023f4 <coda_XML_SetUserData>:
    23f4:	sub	sp, sp, #8
    23f8:	str	r0, [sp, #4]
    23fc:	str	r1, [sp]
    2400:	ldr	r0, [sp, #4]
    2404:	ldr	r0, [r0, #4]
    2408:	ldr	r1, [sp, #4]
    240c:	ldr	r1, [r1]
    2410:	cmp	r0, r1
    2414:	bne	2430 <coda_XML_SetUserData+0x3c>
    2418:	ldr	r0, [sp]
    241c:	ldr	r1, [sp, #4]
    2420:	str	r0, [r1]
    2424:	ldr	r1, [sp, #4]
    2428:	str	r0, [r1, #4]
    242c:	b	243c <coda_XML_SetUserData+0x48>
    2430:	ldr	r0, [sp]
    2434:	ldr	r1, [sp, #4]
    2438:	str	r0, [r1]
    243c:	add	sp, sp, #8
    2440:	bx	lr

00002444 <coda_XML_SetBase>:
    2444:	push	{fp, lr}
    2448:	mov	fp, sp
    244c:	sub	sp, sp, #16
    2450:	str	r0, [sp, #8]
    2454:	str	r1, [sp, #4]
    2458:	ldr	r0, [sp, #4]
    245c:	movw	r1, #0
    2460:	cmp	r0, r1
    2464:	beq	24ac <coda_XML_SetBase+0x68>
    2468:	ldr	r0, [sp, #8]
    246c:	ldr	r0, [r0, #364]	; 0x16c
    2470:	add	r0, r0, #80	; 0x50
    2474:	ldr	r1, [sp, #4]
    2478:	bl	c54 <poolCopyString>
    247c:	str	r0, [sp, #4]
    2480:	ldr	r0, [sp, #4]
    2484:	movw	r1, #0
    2488:	cmp	r0, r1
    248c:	bne	249c <coda_XML_SetBase+0x58>
    2490:	movw	r0, #0
    2494:	str	r0, [fp, #-4]
    2498:	b	24c0 <coda_XML_SetBase+0x7c>
    249c:	ldr	r0, [sp, #4]
    24a0:	ldr	r1, [sp, #8]
    24a4:	str	r0, [r1, #368]	; 0x170
    24a8:	b	24b8 <coda_XML_SetBase+0x74>
    24ac:	ldr	r0, [sp, #8]
    24b0:	movw	r1, #0
    24b4:	str	r1, [r0, #368]	; 0x170
    24b8:	movw	r0, #1
    24bc:	str	r0, [fp, #-4]
    24c0:	ldr	r0, [fp, #-4]
    24c4:	mov	sp, fp
    24c8:	pop	{fp, pc}

000024cc <coda_XML_GetBase>:
    24cc:	sub	sp, sp, #4
    24d0:	str	r0, [sp]
    24d4:	ldr	r0, [sp]
    24d8:	ldr	r0, [r0, #368]	; 0x170
    24dc:	add	sp, sp, #4
    24e0:	bx	lr

000024e4 <coda_XML_GetSpecifiedAttributeCount>:
    24e4:	sub	sp, sp, #4
    24e8:	str	r0, [sp]
    24ec:	ldr	r0, [sp]
    24f0:	ldr	r0, [r0, #392]	; 0x188
    24f4:	add	sp, sp, #4
    24f8:	bx	lr

000024fc <coda_XML_GetIdAttributeIndex>:
    24fc:	sub	sp, sp, #4
    2500:	str	r0, [sp]
    2504:	ldr	r0, [sp]
    2508:	ldr	r0, [r0, #396]	; 0x18c
    250c:	add	sp, sp, #4
    2510:	bx	lr

00002514 <coda_XML_SetElementHandler>:
    2514:	sub	sp, sp, #12
    2518:	str	r0, [sp, #8]
    251c:	str	r1, [sp, #4]
    2520:	str	r2, [sp]
    2524:	ldr	r0, [sp, #4]
    2528:	ldr	r1, [sp, #8]
    252c:	str	r0, [r1, #60]	; 0x3c
    2530:	ldr	r0, [sp]
    2534:	ldr	r1, [sp, #8]
    2538:	str	r0, [r1, #64]	; 0x40
    253c:	add	sp, sp, #12
    2540:	bx	lr

00002544 <coda_XML_SetStartElementHandler>:
    2544:	sub	sp, sp, #8
    2548:	str	r0, [sp, #4]
    254c:	str	r1, [sp]
    2550:	ldr	r0, [sp]
    2554:	ldr	r1, [sp, #4]
    2558:	str	r0, [r1, #60]	; 0x3c
    255c:	add	sp, sp, #8
    2560:	bx	lr

00002564 <coda_XML_SetEndElementHandler>:
    2564:	sub	sp, sp, #8
    2568:	str	r0, [sp, #4]
    256c:	str	r1, [sp]
    2570:	ldr	r0, [sp]
    2574:	ldr	r1, [sp, #4]
    2578:	str	r0, [r1, #64]	; 0x40
    257c:	add	sp, sp, #8
    2580:	bx	lr

00002584 <coda_XML_SetCharacterDataHandler>:
    2584:	sub	sp, sp, #8
    2588:	str	r0, [sp, #4]
    258c:	str	r1, [sp]
    2590:	ldr	r0, [sp]
    2594:	ldr	r1, [sp, #4]
    2598:	str	r0, [r1, #68]	; 0x44
    259c:	add	sp, sp, #8
    25a0:	bx	lr

000025a4 <coda_XML_SetProcessingInstructionHandler>:
    25a4:	sub	sp, sp, #8
    25a8:	str	r0, [sp, #4]
    25ac:	str	r1, [sp]
    25b0:	ldr	r0, [sp]
    25b4:	ldr	r1, [sp, #4]
    25b8:	str	r0, [r1, #72]	; 0x48
    25bc:	add	sp, sp, #8
    25c0:	bx	lr

000025c4 <coda_XML_SetCommentHandler>:
    25c4:	sub	sp, sp, #8
    25c8:	str	r0, [sp, #4]
    25cc:	str	r1, [sp]
    25d0:	ldr	r0, [sp]
    25d4:	ldr	r1, [sp, #4]
    25d8:	str	r0, [r1, #76]	; 0x4c
    25dc:	add	sp, sp, #8
    25e0:	bx	lr

000025e4 <coda_XML_SetCdataSectionHandler>:
    25e4:	sub	sp, sp, #12
    25e8:	str	r0, [sp, #8]
    25ec:	str	r1, [sp, #4]
    25f0:	str	r2, [sp]
    25f4:	ldr	r0, [sp, #4]
    25f8:	ldr	r1, [sp, #8]
    25fc:	str	r0, [r1, #80]	; 0x50
    2600:	ldr	r0, [sp]
    2604:	ldr	r1, [sp, #8]
    2608:	str	r0, [r1, #84]	; 0x54
    260c:	add	sp, sp, #12
    2610:	bx	lr

00002614 <coda_XML_SetStartCdataSectionHandler>:
    2614:	sub	sp, sp, #8
    2618:	str	r0, [sp, #4]
    261c:	str	r1, [sp]
    2620:	ldr	r0, [sp]
    2624:	ldr	r1, [sp, #4]
    2628:	str	r0, [r1, #80]	; 0x50
    262c:	add	sp, sp, #8
    2630:	bx	lr

00002634 <coda_XML_SetEndCdataSectionHandler>:
    2634:	sub	sp, sp, #8
    2638:	str	r0, [sp, #4]
    263c:	str	r1, [sp]
    2640:	ldr	r0, [sp]
    2644:	ldr	r1, [sp, #4]
    2648:	str	r0, [r1, #84]	; 0x54
    264c:	add	sp, sp, #8
    2650:	bx	lr

00002654 <coda_XML_SetDefaultHandler>:
    2654:	sub	sp, sp, #8
    2658:	str	r0, [sp, #4]
    265c:	str	r1, [sp]
    2660:	ldr	r0, [sp]
    2664:	ldr	r1, [sp, #4]
    2668:	str	r0, [r1, #88]	; 0x58
    266c:	ldr	r0, [sp, #4]
    2670:	movw	r1, #0
    2674:	strb	r1, [r0, #316]	; 0x13c
    2678:	add	sp, sp, #8
    267c:	bx	lr

00002680 <coda_XML_SetDefaultHandlerExpand>:
    2680:	sub	sp, sp, #8
    2684:	str	r0, [sp, #4]
    2688:	str	r1, [sp]
    268c:	ldr	r0, [sp]
    2690:	ldr	r1, [sp, #4]
    2694:	str	r0, [r1, #88]	; 0x58
    2698:	ldr	r0, [sp, #4]
    269c:	movw	r1, #1
    26a0:	strb	r1, [r0, #316]	; 0x13c
    26a4:	add	sp, sp, #8
    26a8:	bx	lr

000026ac <coda_XML_SetDoctypeDeclHandler>:
    26ac:	sub	sp, sp, #12
    26b0:	str	r0, [sp, #8]
    26b4:	str	r1, [sp, #4]
    26b8:	str	r2, [sp]
    26bc:	ldr	r0, [sp, #4]
    26c0:	ldr	r1, [sp, #8]
    26c4:	str	r0, [r1, #92]	; 0x5c
    26c8:	ldr	r0, [sp]
    26cc:	ldr	r1, [sp, #8]
    26d0:	str	r0, [r1, #96]	; 0x60
    26d4:	add	sp, sp, #12
    26d8:	bx	lr

000026dc <coda_XML_SetStartDoctypeDeclHandler>:
    26dc:	sub	sp, sp, #8
    26e0:	str	r0, [sp, #4]
    26e4:	str	r1, [sp]
    26e8:	ldr	r0, [sp]
    26ec:	ldr	r1, [sp, #4]
    26f0:	str	r0, [r1, #92]	; 0x5c
    26f4:	add	sp, sp, #8
    26f8:	bx	lr

000026fc <coda_XML_SetEndDoctypeDeclHandler>:
    26fc:	sub	sp, sp, #8
    2700:	str	r0, [sp, #4]
    2704:	str	r1, [sp]
    2708:	ldr	r0, [sp]
    270c:	ldr	r1, [sp, #4]
    2710:	str	r0, [r1, #96]	; 0x60
    2714:	add	sp, sp, #8
    2718:	bx	lr

0000271c <coda_XML_SetUnparsedEntityDeclHandler>:
    271c:	sub	sp, sp, #8
    2720:	str	r0, [sp, #4]
    2724:	str	r1, [sp]
    2728:	ldr	r0, [sp]
    272c:	ldr	r1, [sp, #4]
    2730:	str	r0, [r1, #100]	; 0x64
    2734:	add	sp, sp, #8
    2738:	bx	lr

0000273c <coda_XML_SetNotationDeclHandler>:
    273c:	sub	sp, sp, #8
    2740:	str	r0, [sp, #4]
    2744:	str	r1, [sp]
    2748:	ldr	r0, [sp]
    274c:	ldr	r1, [sp, #4]
    2750:	str	r0, [r1, #104]	; 0x68
    2754:	add	sp, sp, #8
    2758:	bx	lr

0000275c <coda_XML_SetNamespaceDeclHandler>:
    275c:	sub	sp, sp, #12
    2760:	str	r0, [sp, #8]
    2764:	str	r1, [sp, #4]
    2768:	str	r2, [sp]
    276c:	ldr	r0, [sp, #4]
    2770:	ldr	r1, [sp, #8]
    2774:	str	r0, [r1, #108]	; 0x6c
    2778:	ldr	r0, [sp]
    277c:	ldr	r1, [sp, #8]
    2780:	str	r0, [r1, #112]	; 0x70
    2784:	add	sp, sp, #12
    2788:	bx	lr

0000278c <coda_XML_SetStartNamespaceDeclHandler>:
    278c:	sub	sp, sp, #8
    2790:	str	r0, [sp, #4]
    2794:	str	r1, [sp]
    2798:	ldr	r0, [sp]
    279c:	ldr	r1, [sp, #4]
    27a0:	str	r0, [r1, #108]	; 0x6c
    27a4:	add	sp, sp, #8
    27a8:	bx	lr

000027ac <coda_XML_SetEndNamespaceDeclHandler>:
    27ac:	sub	sp, sp, #8
    27b0:	str	r0, [sp, #4]
    27b4:	str	r1, [sp]
    27b8:	ldr	r0, [sp]
    27bc:	ldr	r1, [sp, #4]
    27c0:	str	r0, [r1, #112]	; 0x70
    27c4:	add	sp, sp, #8
    27c8:	bx	lr

000027cc <coda_XML_SetNotStandaloneHandler>:
    27cc:	sub	sp, sp, #8
    27d0:	str	r0, [sp, #4]
    27d4:	str	r1, [sp]
    27d8:	ldr	r0, [sp]
    27dc:	ldr	r1, [sp, #4]
    27e0:	str	r0, [r1, #116]	; 0x74
    27e4:	add	sp, sp, #8
    27e8:	bx	lr

000027ec <coda_XML_SetExternalEntityRefHandler>:
    27ec:	sub	sp, sp, #8
    27f0:	str	r0, [sp, #4]
    27f4:	str	r1, [sp]
    27f8:	ldr	r0, [sp]
    27fc:	ldr	r1, [sp, #4]
    2800:	str	r0, [r1, #120]	; 0x78
    2804:	add	sp, sp, #8
    2808:	bx	lr

0000280c <coda_XML_SetExternalEntityRefHandlerArg>:
    280c:	sub	sp, sp, #8
    2810:	str	r0, [sp, #4]
    2814:	str	r1, [sp]
    2818:	ldr	r0, [sp]
    281c:	movw	r1, #0
    2820:	cmp	r0, r1
    2824:	beq	2838 <coda_XML_SetExternalEntityRefHandlerArg+0x2c>
    2828:	ldr	r0, [sp]
    282c:	ldr	r1, [sp, #4]
    2830:	str	r0, [r1, #124]	; 0x7c
    2834:	b	2844 <coda_XML_SetExternalEntityRefHandlerArg+0x38>
    2838:	ldr	r0, [sp, #4]
    283c:	ldr	r1, [sp, #4]
    2840:	str	r0, [r1, #124]	; 0x7c
    2844:	add	sp, sp, #8
    2848:	bx	lr

0000284c <coda_XML_SetSkippedEntityHandler>:
    284c:	sub	sp, sp, #8
    2850:	str	r0, [sp, #4]
    2854:	str	r1, [sp]
    2858:	ldr	r0, [sp]
    285c:	ldr	r1, [sp, #4]
    2860:	str	r0, [r1, #128]	; 0x80
    2864:	add	sp, sp, #8
    2868:	bx	lr

0000286c <coda_XML_SetUnknownEncodingHandler>:
    286c:	sub	sp, sp, #12
    2870:	str	r0, [sp, #8]
    2874:	str	r1, [sp, #4]
    2878:	str	r2, [sp]
    287c:	ldr	r0, [sp, #4]
    2880:	ldr	r1, [sp, #8]
    2884:	str	r0, [r1, #132]	; 0x84
    2888:	ldr	r0, [sp]
    288c:	ldr	r1, [sp, #8]
    2890:	str	r0, [r1, #256]	; 0x100
    2894:	add	sp, sp, #12
    2898:	bx	lr

0000289c <coda_XML_SetElementDeclHandler>:
    289c:	sub	sp, sp, #8
    28a0:	str	r0, [sp, #4]
    28a4:	str	r1, [sp]
    28a8:	ldr	r0, [sp]
    28ac:	ldr	r1, [sp, #4]
    28b0:	str	r0, [r1, #136]	; 0x88
    28b4:	add	sp, sp, #8
    28b8:	bx	lr

000028bc <coda_XML_SetAttlistDeclHandler>:
    28bc:	sub	sp, sp, #8
    28c0:	str	r0, [sp, #4]
    28c4:	str	r1, [sp]
    28c8:	ldr	r0, [sp]
    28cc:	ldr	r1, [sp, #4]
    28d0:	str	r0, [r1, #140]	; 0x8c
    28d4:	add	sp, sp, #8
    28d8:	bx	lr

000028dc <coda_XML_SetEntityDeclHandler>:
    28dc:	sub	sp, sp, #8
    28e0:	str	r0, [sp, #4]
    28e4:	str	r1, [sp]
    28e8:	ldr	r0, [sp]
    28ec:	ldr	r1, [sp, #4]
    28f0:	str	r0, [r1, #144]	; 0x90
    28f4:	add	sp, sp, #8
    28f8:	bx	lr

000028fc <coda_XML_SetXmlDeclHandler>:
    28fc:	sub	sp, sp, #8
    2900:	str	r0, [sp, #4]
    2904:	str	r1, [sp]
    2908:	ldr	r0, [sp]
    290c:	ldr	r1, [sp, #4]
    2910:	str	r0, [r1, #148]	; 0x94
    2914:	add	sp, sp, #8
    2918:	bx	lr

0000291c <coda_XML_SetParamEntityParsing>:
    291c:	sub	sp, sp, #12
    2920:	str	r0, [sp, #4]
    2924:	str	r1, [sp]
    2928:	ldr	r0, [sp, #4]
    292c:	ldr	r0, [r0, #496]	; 0x1f0
    2930:	cmp	r0, #1
    2934:	beq	2948 <coda_XML_SetParamEntityParsing+0x2c>
    2938:	ldr	r0, [sp, #4]
    293c:	ldr	r0, [r0, #496]	; 0x1f0
    2940:	cmp	r0, #3
    2944:	bne	2954 <coda_XML_SetParamEntityParsing+0x38>
    2948:	movw	r0, #0
    294c:	str	r0, [sp, #8]
    2950:	b	2968 <coda_XML_SetParamEntityParsing+0x4c>
    2954:	ldr	r0, [sp]
    2958:	ldr	r1, [sp, #4]
    295c:	str	r0, [r1, #508]	; 0x1fc
    2960:	movw	r0, #1
    2964:	str	r0, [sp, #8]
    2968:	ldr	r0, [sp, #8]
    296c:	add	sp, sp, #12
    2970:	bx	lr

00002974 <coda_XML_SetHashSalt>:
    2974:	sub	sp, sp, #12
    2978:	str	r0, [sp, #4]
    297c:	str	r1, [sp]
    2980:	ldr	r0, [sp, #4]
    2984:	ldr	r0, [r0, #496]	; 0x1f0
    2988:	cmp	r0, #1
    298c:	beq	29a0 <coda_XML_SetHashSalt+0x2c>
    2990:	ldr	r0, [sp, #4]
    2994:	ldr	r0, [r0, #496]	; 0x1f0
    2998:	cmp	r0, #3
    299c:	bne	29ac <coda_XML_SetHashSalt+0x38>
    29a0:	movw	r0, #0
    29a4:	str	r0, [sp, #8]
    29a8:	b	29c0 <coda_XML_SetHashSalt+0x4c>
    29ac:	ldr	r0, [sp]
    29b0:	ldr	r1, [sp, #4]
    29b4:	str	r0, [r1, #512]	; 0x200
    29b8:	movw	r0, #1
    29bc:	str	r0, [sp, #8]
    29c0:	ldr	r0, [sp, #8]
    29c4:	add	sp, sp, #12
    29c8:	bx	lr

000029cc <coda_XML_Parse>:
    29cc:	push	{fp, lr}
    29d0:	mov	fp, sp
    29d4:	sub	sp, sp, #40	; 0x28
    29d8:	str	r0, [fp, #-8]
    29dc:	str	r1, [fp, #-12]
    29e0:	str	r2, [fp, #-16]
    29e4:	str	r3, [sp, #20]
    29e8:	ldr	r0, [fp, #-8]
    29ec:	ldr	r0, [r0, #496]	; 0x1f0
    29f0:	cmp	r0, #0
    29f4:	str	r0, [sp, #12]
    29f8:	beq	2a50 <coda_XML_Parse+0x84>
    29fc:	b	2a00 <coda_XML_Parse+0x34>
    2a00:	ldr	r0, [sp, #12]
    2a04:	cmp	r0, #2
    2a08:	beq	2a38 <coda_XML_Parse+0x6c>
    2a0c:	b	2a10 <coda_XML_Parse+0x44>
    2a10:	ldr	r0, [sp, #12]
    2a14:	cmp	r0, #3
    2a18:	bne	2a94 <coda_XML_Parse+0xc8>
    2a1c:	b	2a20 <coda_XML_Parse+0x54>
    2a20:	ldr	r0, [fp, #-8]
    2a24:	movw	r1, #33	; 0x21
    2a28:	str	r1, [r0, #292]	; 0x124
    2a2c:	movw	r0, #0
    2a30:	str	r0, [fp, #-4]
    2a34:	b	2c68 <coda_XML_Parse+0x29c>
    2a38:	ldr	r0, [fp, #-8]
    2a3c:	movw	r1, #36	; 0x24
    2a40:	str	r1, [r0, #292]	; 0x124
    2a44:	movw	r0, #0
    2a48:	str	r0, [fp, #-4]
    2a4c:	b	2c68 <coda_XML_Parse+0x29c>
    2a50:	ldr	r0, [fp, #-8]
    2a54:	ldr	r0, [r0, #492]	; 0x1ec
    2a58:	movw	r1, #0
    2a5c:	cmp	r0, r1
    2a60:	bne	2a90 <coda_XML_Parse+0xc4>
    2a64:	ldr	r0, [fp, #-8]
    2a68:	bl	2c74 <startParsing>
    2a6c:	sxtb	r0, r0
    2a70:	cmp	r0, #0
    2a74:	bne	2a90 <coda_XML_Parse+0xc4>
    2a78:	ldr	r0, [fp, #-8]
    2a7c:	movw	r1, #1
    2a80:	str	r1, [r0, #292]	; 0x124
    2a84:	movw	r0, #0
    2a88:	str	r0, [fp, #-4]
    2a8c:	b	2c68 <coda_XML_Parse+0x29c>
    2a90:	b	2a94 <coda_XML_Parse+0xc8>
    2a94:	ldr	r0, [fp, #-8]
    2a98:	movw	r1, #1
    2a9c:	str	r1, [r0, #496]	; 0x1f0
    2aa0:	ldr	r0, [fp, #-16]
    2aa4:	cmp	r0, #0
    2aa8:	bne	2c18 <coda_XML_Parse+0x24c>
    2aac:	ldr	r0, [sp, #20]
    2ab0:	ldr	r1, [fp, #-8]
    2ab4:	strb	r0, [r1, #500]	; 0x1f4
    2ab8:	ldr	r0, [sp, #20]
    2abc:	cmp	r0, #0
    2ac0:	bne	2ad0 <coda_XML_Parse+0x104>
    2ac4:	movw	r0, #1
    2ac8:	str	r0, [fp, #-4]
    2acc:	b	2c68 <coda_XML_Parse+0x29c>
    2ad0:	ldr	r0, [fp, #-8]
    2ad4:	ldr	r0, [r0, #24]
    2ad8:	ldr	r1, [fp, #-8]
    2adc:	str	r0, [r1, #304]	; 0x130
    2ae0:	ldr	r0, [fp, #-8]
    2ae4:	ldr	r0, [r0, #28]
    2ae8:	ldr	r1, [fp, #-8]
    2aec:	str	r0, [r1, #48]	; 0x30
    2af0:	ldr	r0, [fp, #-8]
    2af4:	ldr	r0, [r0, #288]	; 0x120
    2af8:	ldr	r1, [fp, #-8]
    2afc:	ldr	r2, [fp, #-8]
    2b00:	ldr	r2, [r2, #24]
    2b04:	ldr	r3, [fp, #-8]
    2b08:	ldr	r3, [r3, #48]	; 0x30
    2b0c:	ldr	ip, [fp, #-8]
    2b10:	add	ip, ip, #24
    2b14:	str	r0, [sp, #8]
    2b18:	mov	r0, r1
    2b1c:	mov	r1, r2
    2b20:	mov	r2, r3
    2b24:	mov	r3, ip
    2b28:	ldr	ip, [sp, #8]
    2b2c:	blx	ip
    2b30:	ldr	r1, [fp, #-8]
    2b34:	str	r0, [r1, #292]	; 0x124
    2b38:	ldr	r0, [fp, #-8]
    2b3c:	ldr	r0, [r0, #292]	; 0x124
    2b40:	cmp	r0, #0
    2b44:	bne	2bec <coda_XML_Parse+0x220>
    2b48:	ldr	r0, [fp, #-8]
    2b4c:	ldr	r0, [r0, #496]	; 0x1f0
    2b50:	cmp	r0, #2
    2b54:	str	r0, [sp, #4]
    2b58:	bcc	2bd4 <coda_XML_Parse+0x208>
    2b5c:	b	2b60 <coda_XML_Parse+0x194>
    2b60:	ldr	r0, [sp, #4]
    2b64:	cmp	r0, #3
    2b68:	bne	2be0 <coda_XML_Parse+0x214>
    2b6c:	b	2b70 <coda_XML_Parse+0x1a4>
    2b70:	ldr	r0, [fp, #-8]
    2b74:	ldr	r0, [r0, #152]	; 0x98
    2b78:	ldr	r0, [r0, #52]	; 0x34
    2b7c:	ldr	r1, [fp, #-8]
    2b80:	ldr	r1, [r1, #152]	; 0x98
    2b84:	ldr	r2, [fp, #-8]
    2b88:	ldr	r2, [r2, #304]	; 0x130
    2b8c:	ldr	r3, [fp, #-8]
    2b90:	ldr	r3, [r3, #24]
    2b94:	ldr	ip, [fp, #-8]
    2b98:	add	ip, ip, #416	; 0x1a0
    2b9c:	str	r0, [sp]
    2ba0:	mov	r0, r1
    2ba4:	mov	r1, r2
    2ba8:	mov	r2, r3
    2bac:	mov	r3, ip
    2bb0:	ldr	ip, [sp]
    2bb4:	blx	ip
    2bb8:	ldr	r0, [fp, #-8]
    2bbc:	ldr	r0, [r0, #24]
    2bc0:	ldr	r1, [fp, #-8]
    2bc4:	str	r0, [r1, #304]	; 0x130
    2bc8:	movw	r0, #2
    2bcc:	str	r0, [fp, #-4]
    2bd0:	b	2c68 <coda_XML_Parse+0x29c>
    2bd4:	ldr	r0, [fp, #-8]
    2bd8:	movw	r1, #2
    2bdc:	str	r1, [r0, #496]	; 0x1f0
    2be0:	movw	r0, #1
    2be4:	str	r0, [fp, #-4]
    2be8:	b	2c68 <coda_XML_Parse+0x29c>
    2bec:	ldr	r0, [fp, #-8]
    2bf0:	ldr	r0, [r0, #296]	; 0x128
    2bf4:	ldr	r1, [fp, #-8]
    2bf8:	str	r0, [r1, #300]	; 0x12c
    2bfc:	ldr	r0, [fp, #-8]
    2c00:	movw	r1, #0
    2c04:	movt	r1, #0
    2c08:	str	r1, [r0, #288]	; 0x120
    2c0c:	movw	r0, #0
    2c10:	str	r0, [fp, #-4]
    2c14:	b	2c68 <coda_XML_Parse+0x29c>
    2c18:	ldr	r0, [fp, #-8]
    2c1c:	ldr	r1, [fp, #-16]
    2c20:	bl	2d00 <coda_XML_GetBuffer>
    2c24:	str	r0, [sp, #16]
    2c28:	ldr	r0, [sp, #16]
    2c2c:	movw	r1, #0
    2c30:	cmp	r0, r1
    2c34:	bne	2c44 <coda_XML_Parse+0x278>
    2c38:	movw	r0, #0
    2c3c:	str	r0, [fp, #-4]
    2c40:	b	2c68 <coda_XML_Parse+0x29c>
    2c44:	ldr	r0, [sp, #16]
    2c48:	ldr	r1, [fp, #-12]
    2c4c:	ldr	r2, [fp, #-16]
    2c50:	bl	0 <memcpy>
    2c54:	ldr	r0, [fp, #-8]
    2c58:	ldr	r1, [fp, #-16]
    2c5c:	ldr	r2, [sp, #20]
    2c60:	bl	315c <coda_XML_ParseBuffer>
    2c64:	str	r0, [fp, #-4]
    2c68:	ldr	r0, [fp, #-4]
    2c6c:	mov	sp, fp
    2c70:	pop	{fp, pc}

00002c74 <startParsing>:
    2c74:	push	{fp, lr}
    2c78:	mov	fp, sp
    2c7c:	sub	sp, sp, #8
    2c80:	str	r0, [sp]
    2c84:	ldr	r0, [sp]
    2c88:	ldr	r0, [r0, #512]	; 0x200
    2c8c:	cmp	r0, #0
    2c90:	bne	2ca0 <startParsing+0x2c>
    2c94:	bl	f324 <generate_hash_secret_salt>
    2c98:	ldr	lr, [sp]
    2c9c:	str	r0, [lr, #512]	; 0x200
    2ca0:	ldr	r0, [sp]
    2ca4:	ldrsb	r0, [r0, #244]	; 0xf4
    2ca8:	cmp	r0, #0
    2cac:	beq	2cc8 <startParsing+0x54>
    2cb0:	ldr	r0, [sp]
    2cb4:	movw	r1, #0
    2cb8:	movt	r1, #0
    2cbc:	bl	17ec <setContext>
    2cc0:	strb	r0, [fp, #-1]
    2cc4:	b	2cd0 <startParsing+0x5c>
    2cc8:	movw	r0, #1
    2ccc:	strb	r0, [fp, #-1]
    2cd0:	ldrb	r0, [fp, #-1]
    2cd4:	mov	sp, fp
    2cd8:	pop	{fp, pc}

00002cdc <errorProcessor>:
    2cdc:	sub	sp, sp, #16
    2ce0:	str	r0, [sp, #12]
    2ce4:	str	r1, [sp, #8]
    2ce8:	str	r2, [sp, #4]
    2cec:	str	r3, [sp]
    2cf0:	ldr	r0, [sp, #12]
    2cf4:	ldr	r0, [r0, #292]	; 0x124
    2cf8:	add	sp, sp, #16
    2cfc:	bx	lr

00002d00 <coda_XML_GetBuffer>:
    2d00:	push	{fp, lr}
    2d04:	mov	fp, sp
    2d08:	sub	sp, sp, #56	; 0x38
    2d0c:	str	r0, [fp, #-8]
    2d10:	str	r1, [fp, #-12]
    2d14:	ldr	r0, [fp, #-12]
    2d18:	cmp	r0, #0
    2d1c:	bge	2d38 <coda_XML_GetBuffer+0x38>
    2d20:	ldr	r0, [fp, #-8]
    2d24:	movw	r1, #1
    2d28:	str	r1, [r0, #292]	; 0x124
    2d2c:	movw	r0, #0
    2d30:	str	r0, [fp, #-4]
    2d34:	b	3150 <coda_XML_GetBuffer+0x450>
    2d38:	ldr	r0, [fp, #-8]
    2d3c:	ldr	r0, [r0, #496]	; 0x1f0
    2d40:	cmp	r0, #2
    2d44:	str	r0, [sp, #16]
    2d48:	beq	2d78 <coda_XML_GetBuffer+0x78>
    2d4c:	b	2d50 <coda_XML_GetBuffer+0x50>
    2d50:	ldr	r0, [sp, #16]
    2d54:	cmp	r0, #3
    2d58:	bne	2d90 <coda_XML_GetBuffer+0x90>
    2d5c:	b	2d60 <coda_XML_GetBuffer+0x60>
    2d60:	ldr	r0, [fp, #-8]
    2d64:	movw	r1, #33	; 0x21
    2d68:	str	r1, [r0, #292]	; 0x124
    2d6c:	movw	r0, #0
    2d70:	str	r0, [fp, #-4]
    2d74:	b	3150 <coda_XML_GetBuffer+0x450>
    2d78:	ldr	r0, [fp, #-8]
    2d7c:	movw	r1, #36	; 0x24
    2d80:	str	r1, [r0, #292]	; 0x124
    2d84:	movw	r0, #0
    2d88:	str	r0, [fp, #-4]
    2d8c:	b	3150 <coda_XML_GetBuffer+0x450>
    2d90:	b	2d94 <coda_XML_GetBuffer+0x94>
    2d94:	ldr	r0, [fp, #-12]
    2d98:	ldr	r1, [fp, #-8]
    2d9c:	ldr	r1, [r1, #32]
    2da0:	ldr	r2, [fp, #-8]
    2da4:	ldr	r2, [r2, #28]
    2da8:	sub	r1, r1, r2
    2dac:	cmp	r0, r1
    2db0:	ble	3144 <coda_XML_GetBuffer+0x444>
    2db4:	ldr	r0, [fp, #-12]
    2db8:	ldr	r1, [fp, #-8]
    2dbc:	ldr	r1, [r1, #28]
    2dc0:	ldr	r2, [fp, #-8]
    2dc4:	ldr	r2, [r2, #24]
    2dc8:	sub	r1, r1, r2
    2dcc:	add	r0, r0, r1
    2dd0:	str	r0, [fp, #-16]
    2dd4:	ldr	r0, [fp, #-8]
    2dd8:	ldr	r0, [r0, #24]
    2ddc:	ldr	r1, [fp, #-8]
    2de0:	ldr	r1, [r1, #8]
    2de4:	sub	r0, r0, r1
    2de8:	str	r0, [fp, #-20]	; 0xffffffec
    2dec:	ldr	r0, [fp, #-16]
    2df0:	cmp	r0, #0
    2df4:	bge	2e10 <coda_XML_GetBuffer+0x110>
    2df8:	ldr	r0, [fp, #-8]
    2dfc:	movw	r1, #1
    2e00:	str	r1, [r0, #292]	; 0x124
    2e04:	movw	r0, #0
    2e08:	str	r0, [fp, #-4]
    2e0c:	b	3150 <coda_XML_GetBuffer+0x450>
    2e10:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e14:	cmp	r0, #1024	; 0x400
    2e18:	ble	2e24 <coda_XML_GetBuffer+0x124>
    2e1c:	movw	r0, #1024	; 0x400
    2e20:	str	r0, [fp, #-20]	; 0xffffffec
    2e24:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e28:	ldr	r1, [fp, #-16]
    2e2c:	add	r0, r1, r0
    2e30:	str	r0, [fp, #-16]
    2e34:	ldr	r0, [fp, #-16]
    2e38:	ldr	r1, [fp, #-8]
    2e3c:	ldr	r1, [r1, #32]
    2e40:	ldr	r2, [fp, #-8]
    2e44:	ldr	r2, [r2, #8]
    2e48:	sub	r1, r1, r2
    2e4c:	cmp	r0, r1
    2e50:	bgt	2f04 <coda_XML_GetBuffer+0x204>
    2e54:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e58:	ldr	r1, [fp, #-8]
    2e5c:	ldr	r1, [r1, #24]
    2e60:	ldr	r2, [fp, #-8]
    2e64:	ldr	r2, [r2, #8]
    2e68:	sub	r1, r1, r2
    2e6c:	cmp	r0, r1
    2e70:	bge	2f00 <coda_XML_GetBuffer+0x200>
    2e74:	ldr	r0, [fp, #-8]
    2e78:	ldr	r0, [r0, #24]
    2e7c:	ldr	r1, [fp, #-8]
    2e80:	ldr	r1, [r1, #8]
    2e84:	sub	r0, r0, r1
    2e88:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e8c:	sub	r0, r0, r1
    2e90:	str	r0, [fp, #-24]	; 0xffffffe8
    2e94:	ldr	r0, [fp, #-8]
    2e98:	ldr	r0, [r0, #8]
    2e9c:	ldr	r1, [fp, #-8]
    2ea0:	ldr	r1, [r1, #8]
    2ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ea8:	add	r1, r1, r2
    2eac:	ldr	r2, [fp, #-8]
    2eb0:	ldr	r2, [r2, #28]
    2eb4:	ldr	r3, [fp, #-8]
    2eb8:	ldr	r3, [r3, #24]
    2ebc:	sub	r2, r2, r3
    2ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ec4:	add	r2, r2, r3
    2ec8:	bl	0 <memmove>
    2ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ed0:	ldr	r1, [fp, #-8]
    2ed4:	ldr	r2, [r1, #28]
    2ed8:	movw	r3, #0
    2edc:	sub	r0, r3, r0
    2ee0:	add	r0, r2, r0
    2ee4:	str	r0, [r1, #28]
    2ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2eec:	ldr	r1, [fp, #-8]
    2ef0:	ldr	r2, [r1, #24]
    2ef4:	sub	r0, r3, r0
    2ef8:	add	r0, r2, r0
    2efc:	str	r0, [r1, #24]
    2f00:	b	3128 <coda_XML_GetBuffer+0x428>
    2f04:	ldr	r0, [fp, #-8]
    2f08:	ldr	r0, [r0, #32]
    2f0c:	ldr	r1, [fp, #-8]
    2f10:	ldr	r1, [r1, #24]
    2f14:	sub	r0, r0, r1
    2f18:	str	r0, [sp, #24]
    2f1c:	ldr	r0, [sp, #24]
    2f20:	cmp	r0, #0
    2f24:	bne	2f30 <coda_XML_GetBuffer+0x230>
    2f28:	movw	r0, #1024	; 0x400
    2f2c:	str	r0, [sp, #24]
    2f30:	b	2f34 <coda_XML_GetBuffer+0x234>
    2f34:	ldr	r0, [sp, #24]
    2f38:	lsl	r0, r0, #1
    2f3c:	str	r0, [sp, #24]
    2f40:	ldr	r0, [sp, #24]
    2f44:	ldr	r1, [fp, #-16]
    2f48:	cmp	r0, r1
    2f4c:	movw	r0, #0
    2f50:	str	r0, [sp, #12]
    2f54:	bge	2f6c <coda_XML_GetBuffer+0x26c>
    2f58:	ldr	r0, [sp, #24]
    2f5c:	cmp	r0, #0
    2f60:	movw	r0, #0
    2f64:	movgt	r0, #1
    2f68:	str	r0, [sp, #12]
    2f6c:	ldr	r0, [sp, #12]
    2f70:	tst	r0, #1
    2f74:	bne	2f34 <coda_XML_GetBuffer+0x234>
    2f78:	ldr	r0, [sp, #24]
    2f7c:	cmp	r0, #0
    2f80:	bgt	2f9c <coda_XML_GetBuffer+0x29c>
    2f84:	ldr	r0, [fp, #-8]
    2f88:	movw	r1, #1
    2f8c:	str	r1, [r0, #292]	; 0x124
    2f90:	movw	r0, #0
    2f94:	str	r0, [fp, #-4]
    2f98:	b	3150 <coda_XML_GetBuffer+0x450>
    2f9c:	ldr	r0, [fp, #-8]
    2fa0:	ldr	r0, [r0, #12]
    2fa4:	ldr	r1, [sp, #24]
    2fa8:	str	r0, [sp, #8]
    2fac:	mov	r0, r1
    2fb0:	ldr	r1, [sp, #8]
    2fb4:	blx	r1
    2fb8:	str	r0, [sp, #28]
    2fbc:	ldr	r0, [sp, #28]
    2fc0:	movw	r1, #0
    2fc4:	cmp	r0, r1
    2fc8:	bne	2fe4 <coda_XML_GetBuffer+0x2e4>
    2fcc:	ldr	r0, [fp, #-8]
    2fd0:	movw	r1, #1
    2fd4:	str	r1, [r0, #292]	; 0x124
    2fd8:	movw	r0, #0
    2fdc:	str	r0, [fp, #-4]
    2fe0:	b	3150 <coda_XML_GetBuffer+0x450>
    2fe4:	ldr	r0, [sp, #28]
    2fe8:	ldr	r1, [sp, #24]
    2fec:	add	r0, r0, r1
    2ff0:	ldr	r1, [fp, #-8]
    2ff4:	str	r0, [r1, #32]
    2ff8:	ldr	r0, [fp, #-8]
    2ffc:	ldr	r0, [r0, #24]
    3000:	movw	r1, #0
    3004:	cmp	r0, r1
    3008:	beq	30ec <coda_XML_GetBuffer+0x3ec>
    300c:	ldr	r0, [fp, #-8]
    3010:	ldr	r0, [r0, #24]
    3014:	ldr	r1, [fp, #-8]
    3018:	ldr	r1, [r1, #8]
    301c:	sub	r0, r0, r1
    3020:	str	r0, [sp, #20]
    3024:	ldr	r0, [sp, #20]
    3028:	cmp	r0, #1024	; 0x400
    302c:	ble	3038 <coda_XML_GetBuffer+0x338>
    3030:	movw	r0, #1024	; 0x400
    3034:	str	r0, [sp, #20]
    3038:	ldr	r0, [sp, #28]
    303c:	ldr	r1, [fp, #-8]
    3040:	ldr	r1, [r1, #24]
    3044:	ldr	r2, [sp, #20]
    3048:	movw	r3, #0
    304c:	sub	r2, r3, r2
    3050:	add	r1, r1, r2
    3054:	ldr	r2, [fp, #-8]
    3058:	ldr	r2, [r2, #28]
    305c:	ldr	r3, [fp, #-8]
    3060:	ldr	r3, [r3, #24]
    3064:	sub	r2, r2, r3
    3068:	ldr	r3, [sp, #20]
    306c:	add	r2, r2, r3
    3070:	bl	0 <memcpy>
    3074:	ldr	r0, [fp, #-8]
    3078:	ldr	r0, [r0, #20]
    307c:	ldr	r1, [fp, #-8]
    3080:	ldr	r1, [r1, #8]
    3084:	str	r0, [sp, #4]
    3088:	mov	r0, r1
    308c:	ldr	r1, [sp, #4]
    3090:	blx	r1
    3094:	ldr	r0, [sp, #28]
    3098:	ldr	r1, [fp, #-8]
    309c:	str	r0, [r1, #8]
    30a0:	ldr	r0, [fp, #-8]
    30a4:	ldr	r0, [r0, #8]
    30a8:	ldr	r1, [fp, #-8]
    30ac:	ldr	r1, [r1, #28]
    30b0:	ldr	r2, [fp, #-8]
    30b4:	ldr	r2, [r2, #24]
    30b8:	sub	r1, r1, r2
    30bc:	add	r0, r0, r1
    30c0:	ldr	r1, [sp, #20]
    30c4:	add	r0, r0, r1
    30c8:	ldr	r1, [fp, #-8]
    30cc:	str	r0, [r1, #28]
    30d0:	ldr	r0, [fp, #-8]
    30d4:	ldr	r0, [r0, #8]
    30d8:	ldr	r1, [sp, #20]
    30dc:	add	r0, r0, r1
    30e0:	ldr	r1, [fp, #-8]
    30e4:	str	r0, [r1, #24]
    30e8:	b	3124 <coda_XML_GetBuffer+0x424>
    30ec:	ldr	r0, [sp, #28]
    30f0:	ldr	r1, [fp, #-8]
    30f4:	ldr	r1, [r1, #28]
    30f8:	ldr	r2, [fp, #-8]
    30fc:	ldr	r2, [r2, #24]
    3100:	sub	r1, r1, r2
    3104:	add	r0, r0, r1
    3108:	ldr	r1, [fp, #-8]
    310c:	str	r0, [r1, #28]
    3110:	ldr	r0, [sp, #28]
    3114:	ldr	r1, [fp, #-8]
    3118:	str	r0, [r1, #8]
    311c:	ldr	r1, [fp, #-8]
    3120:	str	r0, [r1, #24]
    3124:	b	3128 <coda_XML_GetBuffer+0x428>
    3128:	ldr	r0, [fp, #-8]
    312c:	movw	r1, #0
    3130:	str	r1, [r0, #300]	; 0x12c
    3134:	ldr	r0, [fp, #-8]
    3138:	str	r1, [r0, #296]	; 0x128
    313c:	ldr	r0, [fp, #-8]
    3140:	str	r1, [r0, #304]	; 0x130
    3144:	ldr	r0, [fp, #-8]
    3148:	ldr	r0, [r0, #28]
    314c:	str	r0, [fp, #-4]
    3150:	ldr	r0, [fp, #-4]
    3154:	mov	sp, fp
    3158:	pop	{fp, pc}

0000315c <coda_XML_ParseBuffer>:
    315c:	push	{fp, lr}
    3160:	mov	fp, sp
    3164:	sub	sp, sp, #40	; 0x28
    3168:	str	r0, [fp, #-8]
    316c:	str	r1, [fp, #-12]
    3170:	str	r2, [fp, #-16]
    3174:	mov	r0, #1
    3178:	str	r0, [sp, #16]
    317c:	ldr	r0, [fp, #-8]
    3180:	ldr	r0, [r0, #496]	; 0x1f0
    3184:	cmp	r0, #0
    3188:	str	r0, [sp, #12]
    318c:	beq	31e4 <coda_XML_ParseBuffer+0x88>
    3190:	b	3194 <coda_XML_ParseBuffer+0x38>
    3194:	ldr	r0, [sp, #12]
    3198:	cmp	r0, #2
    319c:	beq	31cc <coda_XML_ParseBuffer+0x70>
    31a0:	b	31a4 <coda_XML_ParseBuffer+0x48>
    31a4:	ldr	r0, [sp, #12]
    31a8:	cmp	r0, #3
    31ac:	bne	3228 <coda_XML_ParseBuffer+0xcc>
    31b0:	b	31b4 <coda_XML_ParseBuffer+0x58>
    31b4:	ldr	r0, [fp, #-8]
    31b8:	movw	r1, #33	; 0x21
    31bc:	str	r1, [r0, #292]	; 0x124
    31c0:	movw	r0, #0
    31c4:	str	r0, [fp, #-4]
    31c8:	b	33dc <coda_XML_ParseBuffer+0x280>
    31cc:	ldr	r0, [fp, #-8]
    31d0:	movw	r1, #36	; 0x24
    31d4:	str	r1, [r0, #292]	; 0x124
    31d8:	movw	r0, #0
    31dc:	str	r0, [fp, #-4]
    31e0:	b	33dc <coda_XML_ParseBuffer+0x280>
    31e4:	ldr	r0, [fp, #-8]
    31e8:	ldr	r0, [r0, #492]	; 0x1ec
    31ec:	movw	r1, #0
    31f0:	cmp	r0, r1
    31f4:	bne	3224 <coda_XML_ParseBuffer+0xc8>
    31f8:	ldr	r0, [fp, #-8]
    31fc:	bl	2c74 <startParsing>
    3200:	sxtb	r0, r0
    3204:	cmp	r0, #0
    3208:	bne	3224 <coda_XML_ParseBuffer+0xc8>
    320c:	ldr	r0, [fp, #-8]
    3210:	movw	r1, #1
    3214:	str	r1, [r0, #292]	; 0x124
    3218:	movw	r0, #0
    321c:	str	r0, [fp, #-4]
    3220:	b	33dc <coda_XML_ParseBuffer+0x280>
    3224:	b	3228 <coda_XML_ParseBuffer+0xcc>
    3228:	ldr	r0, [fp, #-8]
    322c:	movw	r1, #1
    3230:	str	r1, [r0, #496]	; 0x1f0
    3234:	ldr	r0, [fp, #-8]
    3238:	ldr	r0, [r0, #24]
    323c:	str	r0, [sp, #20]
    3240:	ldr	r0, [sp, #20]
    3244:	ldr	r1, [fp, #-8]
    3248:	str	r0, [r1, #304]	; 0x130
    324c:	ldr	r0, [fp, #-12]
    3250:	ldr	r1, [fp, #-8]
    3254:	ldr	r2, [r1, #28]
    3258:	add	r0, r2, r0
    325c:	str	r0, [r1, #28]
    3260:	ldr	r0, [fp, #-8]
    3264:	ldr	r1, [r0, #28]
    3268:	str	r1, [r0, #48]	; 0x30
    326c:	ldr	r0, [fp, #-12]
    3270:	ldr	r1, [fp, #-8]
    3274:	ldr	r2, [r1, #40]	; 0x28
    3278:	ldr	r3, [r1, #44]	; 0x2c
    327c:	adds	r2, r2, r0
    3280:	adc	r0, r3, r0, asr #31
    3284:	str	r2, [r1, #40]	; 0x28
    3288:	str	r0, [r1, #44]	; 0x2c
    328c:	ldr	r0, [fp, #-16]
    3290:	ldr	r1, [fp, #-8]
    3294:	strb	r0, [r1, #500]	; 0x1f4
    3298:	ldr	r0, [fp, #-8]
    329c:	ldr	r0, [r0, #288]	; 0x120
    32a0:	ldr	r1, [fp, #-8]
    32a4:	ldr	r2, [sp, #20]
    32a8:	ldr	r3, [fp, #-8]
    32ac:	ldr	r3, [r3, #48]	; 0x30
    32b0:	ldr	ip, [fp, #-8]
    32b4:	add	ip, ip, #24
    32b8:	str	r0, [sp, #8]
    32bc:	mov	r0, r1
    32c0:	mov	r1, r2
    32c4:	mov	r2, r3
    32c8:	mov	r3, ip
    32cc:	ldr	ip, [sp, #8]
    32d0:	blx	ip
    32d4:	ldr	r1, [fp, #-8]
    32d8:	str	r0, [r1, #292]	; 0x124
    32dc:	ldr	r0, [fp, #-8]
    32e0:	ldr	r0, [r0, #292]	; 0x124
    32e4:	cmp	r0, #0
    32e8:	beq	3318 <coda_XML_ParseBuffer+0x1bc>
    32ec:	ldr	r0, [fp, #-8]
    32f0:	ldr	r0, [r0, #296]	; 0x128
    32f4:	ldr	r1, [fp, #-8]
    32f8:	str	r0, [r1, #300]	; 0x12c
    32fc:	ldr	r0, [fp, #-8]
    3300:	movw	r1, #0
    3304:	movt	r1, #0
    3308:	str	r1, [r0, #288]	; 0x120
    330c:	movw	r0, #0
    3310:	str	r0, [fp, #-4]
    3314:	b	33dc <coda_XML_ParseBuffer+0x280>
    3318:	ldr	r0, [fp, #-8]
    331c:	ldr	r0, [r0, #496]	; 0x1f0
    3320:	cmp	r0, #2
    3324:	str	r0, [sp, #4]
    3328:	bcc	334c <coda_XML_ParseBuffer+0x1f0>
    332c:	b	3330 <coda_XML_ParseBuffer+0x1d4>
    3330:	ldr	r0, [sp, #4]
    3334:	cmp	r0, #3
    3338:	bne	3374 <coda_XML_ParseBuffer+0x218>
    333c:	b	3340 <coda_XML_ParseBuffer+0x1e4>
    3340:	movw	r0, #2
    3344:	str	r0, [sp, #16]
    3348:	b	3378 <coda_XML_ParseBuffer+0x21c>
    334c:	ldr	r0, [fp, #-16]
    3350:	cmp	r0, #0
    3354:	beq	3370 <coda_XML_ParseBuffer+0x214>
    3358:	ldr	r0, [fp, #-8]
    335c:	movw	r1, #2
    3360:	str	r1, [r0, #496]	; 0x1f0
    3364:	ldr	r0, [sp, #16]
    3368:	str	r0, [fp, #-4]
    336c:	b	33dc <coda_XML_ParseBuffer+0x280>
    3370:	b	3374 <coda_XML_ParseBuffer+0x218>
    3374:	b	3378 <coda_XML_ParseBuffer+0x21c>
    3378:	b	337c <coda_XML_ParseBuffer+0x220>
    337c:	ldr	r0, [fp, #-8]
    3380:	ldr	r0, [r0, #152]	; 0x98
    3384:	ldr	r0, [r0, #52]	; 0x34
    3388:	ldr	r1, [fp, #-8]
    338c:	ldr	r1, [r1, #152]	; 0x98
    3390:	ldr	r2, [fp, #-8]
    3394:	ldr	r2, [r2, #304]	; 0x130
    3398:	ldr	r3, [fp, #-8]
    339c:	ldr	r3, [r3, #24]
    33a0:	ldr	ip, [fp, #-8]
    33a4:	add	ip, ip, #416	; 0x1a0
    33a8:	str	r0, [sp]
    33ac:	mov	r0, r1
    33b0:	mov	r1, r2
    33b4:	mov	r2, r3
    33b8:	mov	r3, ip
    33bc:	ldr	ip, [sp]
    33c0:	blx	ip
    33c4:	ldr	r0, [fp, #-8]
    33c8:	ldr	r0, [r0, #24]
    33cc:	ldr	r1, [fp, #-8]
    33d0:	str	r0, [r1, #304]	; 0x130
    33d4:	ldr	r0, [sp, #16]
    33d8:	str	r0, [fp, #-4]
    33dc:	ldr	r0, [fp, #-4]
    33e0:	mov	sp, fp
    33e4:	pop	{fp, pc}

000033e8 <coda_XML_StopParser>:
    33e8:	sub	sp, sp, #16
    33ec:	str	r0, [sp, #8]
    33f0:	strb	r1, [sp, #7]
    33f4:	ldr	r0, [sp, #8]
    33f8:	ldr	r0, [r0, #496]	; 0x1f0
    33fc:	cmp	r0, #2
    3400:	str	r0, [sp]
    3404:	beq	3450 <coda_XML_StopParser+0x68>
    3408:	b	340c <coda_XML_StopParser+0x24>
    340c:	ldr	r0, [sp]
    3410:	cmp	r0, #3
    3414:	bne	3468 <coda_XML_StopParser+0x80>
    3418:	b	341c <coda_XML_StopParser+0x34>
    341c:	ldrsb	r0, [sp, #7]
    3420:	cmp	r0, #0
    3424:	beq	3440 <coda_XML_StopParser+0x58>
    3428:	ldr	r0, [sp, #8]
    342c:	movw	r1, #33	; 0x21
    3430:	str	r1, [r0, #292]	; 0x124
    3434:	movw	r0, #0
    3438:	str	r0, [sp, #12]
    343c:	b	34c8 <coda_XML_StopParser+0xe0>
    3440:	ldr	r0, [sp, #8]
    3444:	movw	r1, #2
    3448:	str	r1, [r0, #496]	; 0x1f0
    344c:	b	34c0 <coda_XML_StopParser+0xd8>
    3450:	ldr	r0, [sp, #8]
    3454:	movw	r1, #36	; 0x24
    3458:	str	r1, [r0, #292]	; 0x124
    345c:	movw	r0, #0
    3460:	str	r0, [sp, #12]
    3464:	b	34c8 <coda_XML_StopParser+0xe0>
    3468:	ldrsb	r0, [sp, #7]
    346c:	cmp	r0, #0
    3470:	beq	34b0 <coda_XML_StopParser+0xc8>
    3474:	ldr	r0, [sp, #8]
    3478:	add	r0, r0, #504	; 0x1f8
    347c:	ldrsb	r0, [r0]
    3480:	cmp	r0, #0
    3484:	beq	34a0 <coda_XML_StopParser+0xb8>
    3488:	ldr	r0, [sp, #8]
    348c:	movw	r1, #37	; 0x25
    3490:	str	r1, [r0, #292]	; 0x124
    3494:	movw	r0, #0
    3498:	str	r0, [sp, #12]
    349c:	b	34c8 <coda_XML_StopParser+0xe0>
    34a0:	ldr	r0, [sp, #8]
    34a4:	movw	r1, #3
    34a8:	str	r1, [r0, #496]	; 0x1f0
    34ac:	b	34bc <coda_XML_StopParser+0xd4>
    34b0:	ldr	r0, [sp, #8]
    34b4:	movw	r1, #2
    34b8:	str	r1, [r0, #496]	; 0x1f0
    34bc:	b	34c0 <coda_XML_StopParser+0xd8>
    34c0:	movw	r0, #1
    34c4:	str	r0, [sp, #12]
    34c8:	ldr	r0, [sp, #12]
    34cc:	add	sp, sp, #16
    34d0:	bx	lr

000034d4 <coda_XML_ResumeParser>:
    34d4:	push	{fp, lr}
    34d8:	mov	fp, sp
    34dc:	sub	sp, sp, #24
    34e0:	str	r0, [fp, #-8]
    34e4:	movw	r0, #1
    34e8:	str	r0, [sp, #12]
    34ec:	ldr	r0, [fp, #-8]
    34f0:	ldr	r0, [r0, #496]	; 0x1f0
    34f4:	cmp	r0, #3
    34f8:	beq	3514 <coda_XML_ResumeParser+0x40>
    34fc:	ldr	r0, [fp, #-8]
    3500:	movw	r1, #34	; 0x22
    3504:	str	r1, [r0, #292]	; 0x124
    3508:	movw	r0, #0
    350c:	str	r0, [fp, #-4]
    3510:	b	3670 <coda_XML_ResumeParser+0x19c>
    3514:	ldr	r0, [fp, #-8]
    3518:	movw	r1, #1
    351c:	str	r1, [r0, #496]	; 0x1f0
    3520:	ldr	r0, [fp, #-8]
    3524:	ldr	r0, [r0, #288]	; 0x120
    3528:	ldr	r1, [fp, #-8]
    352c:	ldr	r2, [fp, #-8]
    3530:	ldr	r2, [r2, #24]
    3534:	ldr	r3, [fp, #-8]
    3538:	ldr	r3, [r3, #48]	; 0x30
    353c:	ldr	ip, [fp, #-8]
    3540:	add	ip, ip, #24
    3544:	str	r0, [sp, #8]
    3548:	mov	r0, r1
    354c:	mov	r1, r2
    3550:	mov	r2, r3
    3554:	mov	r3, ip
    3558:	ldr	ip, [sp, #8]
    355c:	blx	ip
    3560:	ldr	r1, [fp, #-8]
    3564:	str	r0, [r1, #292]	; 0x124
    3568:	ldr	r0, [fp, #-8]
    356c:	ldr	r0, [r0, #292]	; 0x124
    3570:	cmp	r0, #0
    3574:	beq	35a4 <coda_XML_ResumeParser+0xd0>
    3578:	ldr	r0, [fp, #-8]
    357c:	ldr	r0, [r0, #296]	; 0x128
    3580:	ldr	r1, [fp, #-8]
    3584:	str	r0, [r1, #300]	; 0x12c
    3588:	ldr	r0, [fp, #-8]
    358c:	movw	r1, #0
    3590:	movt	r1, #0
    3594:	str	r1, [r0, #288]	; 0x120
    3598:	movw	r0, #0
    359c:	str	r0, [fp, #-4]
    35a0:	b	3670 <coda_XML_ResumeParser+0x19c>
    35a4:	ldr	r0, [fp, #-8]
    35a8:	ldr	r0, [r0, #496]	; 0x1f0
    35ac:	cmp	r0, #2
    35b0:	str	r0, [sp, #4]
    35b4:	bcc	35d8 <coda_XML_ResumeParser+0x104>
    35b8:	b	35bc <coda_XML_ResumeParser+0xe8>
    35bc:	ldr	r0, [sp, #4]
    35c0:	cmp	r0, #3
    35c4:	bne	3608 <coda_XML_ResumeParser+0x134>
    35c8:	b	35cc <coda_XML_ResumeParser+0xf8>
    35cc:	movw	r0, #2
    35d0:	str	r0, [sp, #12]
    35d4:	b	360c <coda_XML_ResumeParser+0x138>
    35d8:	ldr	r0, [fp, #-8]
    35dc:	add	r0, r0, #500	; 0x1f4
    35e0:	ldrsb	r0, [r0]
    35e4:	cmp	r0, #0
    35e8:	beq	3604 <coda_XML_ResumeParser+0x130>
    35ec:	ldr	r0, [fp, #-8]
    35f0:	movw	r1, #2
    35f4:	str	r1, [r0, #496]	; 0x1f0
    35f8:	ldr	r0, [sp, #12]
    35fc:	str	r0, [fp, #-4]
    3600:	b	3670 <coda_XML_ResumeParser+0x19c>
    3604:	b	3608 <coda_XML_ResumeParser+0x134>
    3608:	b	360c <coda_XML_ResumeParser+0x138>
    360c:	b	3610 <coda_XML_ResumeParser+0x13c>
    3610:	ldr	r0, [fp, #-8]
    3614:	ldr	r0, [r0, #152]	; 0x98
    3618:	ldr	r0, [r0, #52]	; 0x34
    361c:	ldr	r1, [fp, #-8]
    3620:	ldr	r1, [r1, #152]	; 0x98
    3624:	ldr	r2, [fp, #-8]
    3628:	ldr	r2, [r2, #304]	; 0x130
    362c:	ldr	r3, [fp, #-8]
    3630:	ldr	r3, [r3, #24]
    3634:	ldr	ip, [fp, #-8]
    3638:	add	ip, ip, #416	; 0x1a0
    363c:	str	r0, [sp]
    3640:	mov	r0, r1
    3644:	mov	r1, r2
    3648:	mov	r2, r3
    364c:	mov	r3, ip
    3650:	ldr	ip, [sp]
    3654:	blx	ip
    3658:	ldr	r0, [fp, #-8]
    365c:	ldr	r0, [r0, #24]
    3660:	ldr	r1, [fp, #-8]
    3664:	str	r0, [r1, #304]	; 0x130
    3668:	ldr	r0, [sp, #12]
    366c:	str	r0, [fp, #-4]
    3670:	ldr	r0, [fp, #-4]
    3674:	mov	sp, fp
    3678:	pop	{fp, pc}

0000367c <coda_XML_GetParsingStatus>:
    367c:	push	{fp, lr}
    3680:	mov	fp, sp
    3684:	sub	sp, sp, #8
    3688:	str	r0, [sp, #4]
    368c:	str	r1, [sp]
    3690:	ldr	r0, [sp]
    3694:	movw	r1, #0
    3698:	cmp	r0, r1
    369c:	beq	36a4 <coda_XML_GetParsingStatus+0x28>
    36a0:	b	36c4 <coda_XML_GetParsingStatus+0x48>
    36a4:	movw	r0, #0
    36a8:	movt	r0, #0
    36ac:	movw	r1, #0
    36b0:	movt	r1, #0
    36b4:	movw	r2, #1835	; 0x72b
    36b8:	movw	r3, #0
    36bc:	movt	r3, #0
    36c0:	bl	0 <__assert_fail>
    36c4:	ldr	r0, [sp]
    36c8:	ldr	r1, [sp, #4]
    36cc:	ldr	r2, [r1, #496]	; 0x1f0
    36d0:	str	r2, [r0]
    36d4:	ldr	r1, [r1, #500]	; 0x1f4
    36d8:	str	r1, [r0, #4]
    36dc:	mov	sp, fp
    36e0:	pop	{fp, pc}

000036e4 <coda_XML_GetErrorCode>:
    36e4:	sub	sp, sp, #4
    36e8:	str	r0, [sp]
    36ec:	ldr	r0, [sp]
    36f0:	ldr	r0, [r0, #292]	; 0x124
    36f4:	add	sp, sp, #4
    36f8:	bx	lr

000036fc <coda_XML_GetCurrentByteIndex>:
    36fc:	sub	sp, sp, #16
    3700:	str	r0, [sp, #4]
    3704:	ldr	r0, [sp, #4]
    3708:	ldr	r0, [r0, #296]	; 0x128
    370c:	movw	r1, #0
    3710:	cmp	r0, r1
    3714:	beq	3744 <coda_XML_GetCurrentByteIndex+0x48>
    3718:	ldr	r0, [sp, #4]
    371c:	ldr	r1, [r0, #40]	; 0x28
    3720:	ldr	r2, [r0, #44]	; 0x2c
    3724:	ldr	r3, [r0, #48]	; 0x30
    3728:	ldr	r0, [r0, #296]	; 0x128
    372c:	sub	r0, r3, r0
    3730:	subs	r1, r1, r0
    3734:	sbc	r0, r2, r0, asr #31
    3738:	str	r1, [sp, #8]
    373c:	str	r0, [sp, #12]
    3740:	b	3750 <coda_XML_GetCurrentByteIndex+0x54>
    3744:	mvn	r0, #0
    3748:	str	r0, [sp, #12]
    374c:	str	r0, [sp, #8]
    3750:	ldr	r0, [sp, #8]
    3754:	ldr	r1, [sp, #12]
    3758:	add	sp, sp, #16
    375c:	bx	lr

00003760 <coda_XML_GetCurrentByteCount>:
    3760:	sub	sp, sp, #8
    3764:	str	r0, [sp]
    3768:	ldr	r0, [sp]
    376c:	ldr	r0, [r0, #300]	; 0x12c
    3770:	movw	r1, #0
    3774:	cmp	r0, r1
    3778:	beq	37ac <coda_XML_GetCurrentByteCount+0x4c>
    377c:	ldr	r0, [sp]
    3780:	ldr	r0, [r0, #296]	; 0x128
    3784:	movw	r1, #0
    3788:	cmp	r0, r1
    378c:	beq	37ac <coda_XML_GetCurrentByteCount+0x4c>
    3790:	ldr	r0, [sp]
    3794:	ldr	r0, [r0, #300]	; 0x12c
    3798:	ldr	r1, [sp]
    379c:	ldr	r1, [r1, #296]	; 0x128
    37a0:	sub	r0, r0, r1
    37a4:	str	r0, [sp, #4]
    37a8:	b	37b4 <coda_XML_GetCurrentByteCount+0x54>
    37ac:	movw	r0, #0
    37b0:	str	r0, [sp, #4]
    37b4:	ldr	r0, [sp, #4]
    37b8:	add	sp, sp, #8
    37bc:	bx	lr

000037c0 <coda_XML_GetInputContext>:
    37c0:	sub	sp, sp, #16
    37c4:	str	r0, [sp, #8]
    37c8:	str	r1, [sp, #4]
    37cc:	str	r2, [sp]
    37d0:	ldr	r0, [sp, #8]
    37d4:	ldr	r0, [r0, #296]	; 0x128
    37d8:	movw	r1, #0
    37dc:	cmp	r0, r1
    37e0:	beq	3840 <coda_XML_GetInputContext+0x80>
    37e4:	ldr	r0, [sp, #8]
    37e8:	ldr	r0, [r0, #8]
    37ec:	movw	r1, #0
    37f0:	cmp	r0, r1
    37f4:	beq	3840 <coda_XML_GetInputContext+0x80>
    37f8:	ldr	r0, [sp, #8]
    37fc:	ldr	r0, [r0, #296]	; 0x128
    3800:	ldr	r1, [sp, #8]
    3804:	ldr	r1, [r1, #8]
    3808:	sub	r0, r0, r1
    380c:	ldr	r1, [sp, #4]
    3810:	str	r0, [r1]
    3814:	ldr	r0, [sp, #8]
    3818:	ldr	r0, [r0, #28]
    381c:	ldr	r1, [sp, #8]
    3820:	ldr	r1, [r1, #8]
    3824:	sub	r0, r0, r1
    3828:	ldr	r1, [sp]
    382c:	str	r0, [r1]
    3830:	ldr	r0, [sp, #8]
    3834:	ldr	r0, [r0, #8]
    3838:	str	r0, [sp, #12]
    383c:	b	3848 <coda_XML_GetInputContext+0x88>
    3840:	movw	r0, #0
    3844:	str	r0, [sp, #12]
    3848:	ldr	r0, [sp, #12]
    384c:	add	sp, sp, #16
    3850:	bx	lr

00003854 <coda_XML_GetCurrentLineNumber>:
    3854:	push	{fp, lr}
    3858:	mov	fp, sp
    385c:	sub	sp, sp, #16
    3860:	str	r0, [fp, #-4]
    3864:	ldr	r0, [fp, #-4]
    3868:	ldr	r0, [r0, #296]	; 0x128
    386c:	movw	r1, #0
    3870:	cmp	r0, r1
    3874:	beq	38e8 <coda_XML_GetCurrentLineNumber+0x94>
    3878:	ldr	r0, [fp, #-4]
    387c:	ldr	r0, [r0, #296]	; 0x128
    3880:	ldr	r1, [fp, #-4]
    3884:	ldr	r1, [r1, #304]	; 0x130
    3888:	cmp	r0, r1
    388c:	bcc	38e8 <coda_XML_GetCurrentLineNumber+0x94>
    3890:	ldr	r0, [fp, #-4]
    3894:	ldr	r0, [r0, #152]	; 0x98
    3898:	ldr	r0, [r0, #52]	; 0x34
    389c:	ldr	r1, [fp, #-4]
    38a0:	ldr	r1, [r1, #152]	; 0x98
    38a4:	ldr	r2, [fp, #-4]
    38a8:	ldr	r2, [r2, #304]	; 0x130
    38ac:	ldr	r3, [fp, #-4]
    38b0:	ldr	r3, [r3, #296]	; 0x128
    38b4:	ldr	ip, [fp, #-4]
    38b8:	add	ip, ip, #416	; 0x1a0
    38bc:	str	r0, [sp, #8]
    38c0:	mov	r0, r1
    38c4:	mov	r1, r2
    38c8:	mov	r2, r3
    38cc:	mov	r3, ip
    38d0:	ldr	ip, [sp, #8]
    38d4:	blx	ip
    38d8:	ldr	r0, [fp, #-4]
    38dc:	ldr	r0, [r0, #296]	; 0x128
    38e0:	ldr	r1, [fp, #-4]
    38e4:	str	r0, [r1, #304]	; 0x130
    38e8:	ldr	r0, [fp, #-4]
    38ec:	ldr	r1, [r0, #416]	; 0x1a0
    38f0:	ldr	r0, [r0, #420]	; 0x1a4
    38f4:	adds	r1, r1, #1
    38f8:	adc	r0, r0, #0
    38fc:	str	r0, [sp, #4]
    3900:	mov	r0, r1
    3904:	ldr	r1, [sp, #4]
    3908:	mov	sp, fp
    390c:	pop	{fp, pc}

00003910 <coda_XML_GetCurrentColumnNumber>:
    3910:	push	{fp, lr}
    3914:	mov	fp, sp
    3918:	sub	sp, sp, #16
    391c:	str	r0, [fp, #-4]
    3920:	ldr	r0, [fp, #-4]
    3924:	ldr	r0, [r0, #296]	; 0x128
    3928:	movw	r1, #0
    392c:	cmp	r0, r1
    3930:	beq	39a4 <coda_XML_GetCurrentColumnNumber+0x94>
    3934:	ldr	r0, [fp, #-4]
    3938:	ldr	r0, [r0, #296]	; 0x128
    393c:	ldr	r1, [fp, #-4]
    3940:	ldr	r1, [r1, #304]	; 0x130
    3944:	cmp	r0, r1
    3948:	bcc	39a4 <coda_XML_GetCurrentColumnNumber+0x94>
    394c:	ldr	r0, [fp, #-4]
    3950:	ldr	r0, [r0, #152]	; 0x98
    3954:	ldr	r0, [r0, #52]	; 0x34
    3958:	ldr	r1, [fp, #-4]
    395c:	ldr	r1, [r1, #152]	; 0x98
    3960:	ldr	r2, [fp, #-4]
    3964:	ldr	r2, [r2, #304]	; 0x130
    3968:	ldr	r3, [fp, #-4]
    396c:	ldr	r3, [r3, #296]	; 0x128
    3970:	ldr	ip, [fp, #-4]
    3974:	add	ip, ip, #416	; 0x1a0
    3978:	str	r0, [sp, #8]
    397c:	mov	r0, r1
    3980:	mov	r1, r2
    3984:	mov	r2, r3
    3988:	mov	r3, ip
    398c:	ldr	ip, [sp, #8]
    3990:	blx	ip
    3994:	ldr	r0, [fp, #-4]
    3998:	ldr	r0, [r0, #296]	; 0x128
    399c:	ldr	r1, [fp, #-4]
    39a0:	str	r0, [r1, #304]	; 0x130
    39a4:	ldr	r0, [fp, #-4]
    39a8:	ldr	r1, [r0, #424]	; 0x1a8
    39ac:	ldr	r0, [r0, #428]	; 0x1ac
    39b0:	str	r0, [sp, #4]
    39b4:	mov	r0, r1
    39b8:	ldr	r1, [sp, #4]
    39bc:	mov	sp, fp
    39c0:	pop	{fp, pc}

000039c4 <coda_XML_FreeContentModel>:
    39c4:	push	{fp, lr}
    39c8:	mov	fp, sp
    39cc:	sub	sp, sp, #16
    39d0:	str	r0, [fp, #-4]
    39d4:	str	r1, [sp, #8]
    39d8:	ldr	r0, [fp, #-4]
    39dc:	ldr	r0, [r0, #20]
    39e0:	ldr	r1, [sp, #8]
    39e4:	str	r0, [sp, #4]
    39e8:	mov	r0, r1
    39ec:	ldr	r1, [sp, #4]
    39f0:	blx	r1
    39f4:	mov	sp, fp
    39f8:	pop	{fp, pc}

000039fc <coda_XML_MemMalloc>:
    39fc:	push	{fp, lr}
    3a00:	mov	fp, sp
    3a04:	sub	sp, sp, #16
    3a08:	str	r0, [fp, #-4]
    3a0c:	str	r1, [sp, #8]
    3a10:	ldr	r0, [fp, #-4]
    3a14:	ldr	r0, [r0, #12]
    3a18:	ldr	r1, [sp, #8]
    3a1c:	str	r0, [sp, #4]
    3a20:	mov	r0, r1
    3a24:	ldr	r1, [sp, #4]
    3a28:	blx	r1
    3a2c:	mov	sp, fp
    3a30:	pop	{fp, pc}

00003a34 <coda_XML_MemRealloc>:
    3a34:	push	{fp, lr}
    3a38:	mov	fp, sp
    3a3c:	sub	sp, sp, #16
    3a40:	str	r0, [fp, #-4]
    3a44:	str	r1, [sp, #8]
    3a48:	str	r2, [sp, #4]
    3a4c:	ldr	r0, [fp, #-4]
    3a50:	ldr	r0, [r0, #16]
    3a54:	ldr	r1, [sp, #8]
    3a58:	ldr	r2, [sp, #4]
    3a5c:	str	r0, [sp]
    3a60:	mov	r0, r1
    3a64:	mov	r1, r2
    3a68:	ldr	r2, [sp]
    3a6c:	blx	r2
    3a70:	mov	sp, fp
    3a74:	pop	{fp, pc}

00003a78 <coda_XML_MemFree>:
    3a78:	push	{fp, lr}
    3a7c:	mov	fp, sp
    3a80:	sub	sp, sp, #16
    3a84:	str	r0, [fp, #-4]
    3a88:	str	r1, [sp, #8]
    3a8c:	ldr	r0, [fp, #-4]
    3a90:	ldr	r0, [r0, #20]
    3a94:	ldr	r1, [sp, #8]
    3a98:	str	r0, [sp, #4]
    3a9c:	mov	r0, r1
    3aa0:	ldr	r1, [sp, #4]
    3aa4:	blx	r1
    3aa8:	mov	sp, fp
    3aac:	pop	{fp, pc}

00003ab0 <coda_XML_DefaultCurrent>:
    3ab0:	push	{fp, lr}
    3ab4:	mov	fp, sp
    3ab8:	sub	sp, sp, #8
    3abc:	str	r0, [sp, #4]
    3ac0:	ldr	r0, [sp, #4]
    3ac4:	ldr	r0, [r0, #88]	; 0x58
    3ac8:	movw	r1, #0
    3acc:	cmp	r0, r1
    3ad0:	beq	3b38 <coda_XML_DefaultCurrent+0x88>
    3ad4:	ldr	r0, [sp, #4]
    3ad8:	ldr	r0, [r0, #308]	; 0x134
    3adc:	movw	r1, #0
    3ae0:	cmp	r0, r1
    3ae4:	beq	3b14 <coda_XML_DefaultCurrent+0x64>
    3ae8:	ldr	r0, [sp, #4]
    3aec:	ldr	r1, [sp, #4]
    3af0:	ldr	r1, [r1, #236]	; 0xec
    3af4:	ldr	r2, [sp, #4]
    3af8:	ldr	r2, [r2, #308]	; 0x134
    3afc:	ldr	r2, [r2]
    3b00:	ldr	r3, [sp, #4]
    3b04:	ldr	r3, [r3, #308]	; 0x134
    3b08:	ldr	r3, [r3, #4]
    3b0c:	bl	3b40 <reportDefault>
    3b10:	b	3b34 <coda_XML_DefaultCurrent+0x84>
    3b14:	ldr	r0, [sp, #4]
    3b18:	ldr	r1, [sp, #4]
    3b1c:	ldr	r1, [r1, #152]	; 0x98
    3b20:	ldr	r2, [sp, #4]
    3b24:	ldr	r2, [r2, #296]	; 0x128
    3b28:	ldr	r3, [sp, #4]
    3b2c:	ldr	r3, [r3, #300]	; 0x12c
    3b30:	bl	3b40 <reportDefault>
    3b34:	b	3b38 <coda_XML_DefaultCurrent+0x88>
    3b38:	mov	sp, fp
    3b3c:	pop	{fp, pc}

00003b40 <reportDefault>:
    3b40:	push	{fp, lr}
    3b44:	mov	fp, sp
    3b48:	sub	sp, sp, #48	; 0x30
    3b4c:	str	r0, [fp, #-4]
    3b50:	str	r1, [fp, #-8]
    3b54:	str	r2, [fp, #-12]
    3b58:	str	r3, [fp, #-16]
    3b5c:	ldr	r0, [fp, #-8]
    3b60:	ldrsb	r0, [r0, #72]	; 0x48
    3b64:	cmp	r0, #0
    3b68:	bne	3c74 <reportDefault+0x134>
    3b6c:	ldr	r0, [fp, #-8]
    3b70:	ldr	r1, [fp, #-4]
    3b74:	ldr	r1, [r1, #152]	; 0x98
    3b78:	cmp	r0, r1
    3b7c:	bne	3b9c <reportDefault+0x5c>
    3b80:	ldr	r0, [fp, #-4]
    3b84:	add	r0, r0, #296	; 0x128
    3b88:	str	r0, [fp, #-20]	; 0xffffffec
    3b8c:	ldr	r0, [fp, #-4]
    3b90:	add	r0, r0, #300	; 0x12c
    3b94:	str	r0, [sp, #24]
    3b98:	b	3bb8 <reportDefault+0x78>
    3b9c:	ldr	r0, [fp, #-4]
    3ba0:	ldr	r0, [r0, #308]	; 0x134
    3ba4:	str	r0, [fp, #-20]	; 0xffffffec
    3ba8:	ldr	r0, [fp, #-4]
    3bac:	ldr	r0, [r0, #308]	; 0x134
    3bb0:	add	r0, r0, #4
    3bb4:	str	r0, [sp, #24]
    3bb8:	b	3bbc <reportDefault+0x7c>
    3bbc:	ldr	r0, [fp, #-4]
    3bc0:	ldr	r0, [r0, #52]	; 0x34
    3bc4:	str	r0, [sp, #20]
    3bc8:	ldr	r0, [fp, #-8]
    3bcc:	ldr	r0, [r0, #60]	; 0x3c
    3bd0:	ldr	r1, [fp, #-8]
    3bd4:	ldr	r2, [fp, #-16]
    3bd8:	ldr	r3, [fp, #-4]
    3bdc:	ldr	r3, [r3, #56]	; 0x38
    3be0:	str	r0, [sp, #16]
    3be4:	mov	r0, r1
    3be8:	sub	r1, fp, #12
    3bec:	add	ip, sp, #20
    3bf0:	str	r3, [sp, #12]
    3bf4:	mov	r3, ip
    3bf8:	ldr	ip, [sp, #12]
    3bfc:	str	ip, [sp]
    3c00:	ldr	lr, [sp, #16]
    3c04:	blx	lr
    3c08:	ldr	r0, [fp, #-12]
    3c0c:	ldr	r1, [sp, #24]
    3c10:	str	r0, [r1]
    3c14:	ldr	r0, [fp, #-4]
    3c18:	ldr	r0, [r0, #88]	; 0x58
    3c1c:	ldr	r1, [fp, #-4]
    3c20:	ldr	r1, [r1, #4]
    3c24:	ldr	r2, [fp, #-4]
    3c28:	ldr	r2, [r2, #52]	; 0x34
    3c2c:	ldr	r3, [sp, #20]
    3c30:	ldr	ip, [fp, #-4]
    3c34:	ldr	ip, [ip, #52]	; 0x34
    3c38:	sub	r3, r3, ip
    3c3c:	str	r0, [sp, #8]
    3c40:	mov	r0, r1
    3c44:	mov	r1, r2
    3c48:	mov	r2, r3
    3c4c:	ldr	r3, [sp, #8]
    3c50:	blx	r3
    3c54:	ldr	r0, [fp, #-12]
    3c58:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c5c:	str	r0, [r1]
    3c60:	ldr	r0, [fp, #-12]
    3c64:	ldr	r1, [fp, #-16]
    3c68:	cmp	r0, r1
    3c6c:	bne	3bbc <reportDefault+0x7c>
    3c70:	b	3cac <reportDefault+0x16c>
    3c74:	ldr	r0, [fp, #-4]
    3c78:	ldr	r0, [r0, #88]	; 0x58
    3c7c:	ldr	r1, [fp, #-4]
    3c80:	ldr	r1, [r1, #4]
    3c84:	ldr	r2, [fp, #-12]
    3c88:	ldr	r3, [fp, #-16]
    3c8c:	ldr	ip, [fp, #-12]
    3c90:	sub	r3, r3, ip
    3c94:	str	r0, [sp, #4]
    3c98:	mov	r0, r1
    3c9c:	mov	r1, r2
    3ca0:	mov	r2, r3
    3ca4:	ldr	r3, [sp, #4]
    3ca8:	blx	r3
    3cac:	mov	sp, fp
    3cb0:	pop	{fp, pc}

00003cb4 <coda_XML_ErrorString>:
    3cb4:	sub	sp, sp, #8
    3cb8:	str	r0, [sp]
    3cbc:	ldr	r0, [sp]
    3cc0:	cmp	r0, #0
    3cc4:	bls	3cf0 <coda_XML_ErrorString+0x3c>
    3cc8:	ldr	r0, [sp]
    3ccc:	cmp	r0, #41	; 0x29
    3cd0:	bcs	3cf0 <coda_XML_ErrorString+0x3c>
    3cd4:	ldr	r0, [sp]
    3cd8:	movw	r1, #0
    3cdc:	movt	r1, #0
    3ce0:	add	r0, r1, r0, lsl #2
    3ce4:	ldr	r0, [r0]
    3ce8:	str	r0, [sp, #4]
    3cec:	b	3cf8 <coda_XML_ErrorString+0x44>
    3cf0:	movw	r0, #0
    3cf4:	str	r0, [sp, #4]
    3cf8:	ldr	r0, [sp, #4]
    3cfc:	add	sp, sp, #8
    3d00:	bx	lr

00003d04 <coda_XML_ExpatVersion>:
    3d04:	movw	r0, #0
    3d08:	movt	r0, #0
    3d0c:	bx	lr

00003d10 <coda_XML_ExpatVersionInfo>:
    3d10:	movw	r1, #2
    3d14:	str	r1, [r0]
    3d18:	movw	r1, #1
    3d1c:	str	r1, [r0, #4]
    3d20:	str	r1, [r0, #8]
    3d24:	bx	lr

00003d28 <coda_XML_GetFeatureList>:
    3d28:	movw	r0, #0
    3d2c:	movt	r0, #0
    3d30:	bx	lr

00003d34 <dtdCreate>:
    3d34:	push	{fp, lr}
    3d38:	mov	fp, sp
    3d3c:	sub	sp, sp, #16
    3d40:	str	r0, [sp, #8]
    3d44:	ldr	r0, [sp, #8]
    3d48:	ldr	r0, [r0]
    3d4c:	movw	r1, #188	; 0xbc
    3d50:	str	r0, [sp]
    3d54:	mov	r0, r1
    3d58:	ldr	r1, [sp]
    3d5c:	blx	r1
    3d60:	str	r0, [sp, #4]
    3d64:	ldr	r0, [sp, #4]
    3d68:	movw	r1, #0
    3d6c:	cmp	r0, r1
    3d70:	bne	3d80 <dtdCreate+0x4c>
    3d74:	ldr	r0, [sp, #4]
    3d78:	str	r0, [fp, #-4]
    3d7c:	b	3e6c <dtdCreate+0x138>
    3d80:	ldr	r0, [sp, #4]
    3d84:	add	r0, r0, #80	; 0x50
    3d88:	ldr	r1, [sp, #8]
    3d8c:	bl	3e78 <poolInit>
    3d90:	ldr	r0, [sp, #4]
    3d94:	add	r0, r0, #104	; 0x68
    3d98:	ldr	r1, [sp, #8]
    3d9c:	bl	3e78 <poolInit>
    3da0:	ldr	r0, [sp, #4]
    3da4:	ldr	r1, [sp, #8]
    3da8:	bl	3ec4 <hashTableInit>
    3dac:	ldr	r0, [sp, #4]
    3db0:	add	r0, r0, #20
    3db4:	ldr	r1, [sp, #8]
    3db8:	bl	3ec4 <hashTableInit>
    3dbc:	ldr	r0, [sp, #4]
    3dc0:	add	r0, r0, #40	; 0x28
    3dc4:	ldr	r1, [sp, #8]
    3dc8:	bl	3ec4 <hashTableInit>
    3dcc:	ldr	r0, [sp, #4]
    3dd0:	add	r0, r0, #60	; 0x3c
    3dd4:	ldr	r1, [sp, #8]
    3dd8:	bl	3ec4 <hashTableInit>
    3ddc:	ldr	r0, [sp, #4]
    3de0:	movw	r1, #0
    3de4:	strb	r1, [r0, #131]	; 0x83
    3de8:	ldr	r0, [sp, #4]
    3dec:	add	r0, r0, #132	; 0x84
    3df0:	ldr	r1, [sp, #8]
    3df4:	bl	3ec4 <hashTableInit>
    3df8:	ldr	r0, [sp, #4]
    3dfc:	movw	r1, #0
    3e00:	str	r1, [r0, #152]	; 0x98
    3e04:	ldr	r0, [sp, #4]
    3e08:	str	r1, [r0, #156]	; 0x9c
    3e0c:	ldr	r0, [sp, #4]
    3e10:	movw	lr, #0
    3e14:	strb	lr, [r0, #160]	; 0xa0
    3e18:	ldr	r0, [sp, #4]
    3e1c:	str	r1, [r0, #184]	; 0xb8
    3e20:	ldr	r0, [sp, #4]
    3e24:	str	r1, [r0, #164]	; 0xa4
    3e28:	ldr	r0, [sp, #4]
    3e2c:	str	r1, [r0, #180]	; 0xb4
    3e30:	ldr	r0, [sp, #4]
    3e34:	str	r1, [r0, #172]	; 0xac
    3e38:	ldr	r0, [sp, #4]
    3e3c:	str	r1, [r0, #176]	; 0xb0
    3e40:	ldr	r0, [sp, #4]
    3e44:	str	r1, [r0, #168]	; 0xa8
    3e48:	ldr	r0, [sp, #4]
    3e4c:	movw	r1, #1
    3e50:	strb	r1, [r0, #128]	; 0x80
    3e54:	ldr	r0, [sp, #4]
    3e58:	strb	lr, [r0, #129]	; 0x81
    3e5c:	ldr	r0, [sp, #4]
    3e60:	strb	lr, [r0, #130]	; 0x82
    3e64:	ldr	r0, [sp, #4]
    3e68:	str	r0, [fp, #-4]
    3e6c:	ldr	r0, [fp, #-4]
    3e70:	mov	sp, fp
    3e74:	pop	{fp, pc}

00003e78 <poolInit>:
    3e78:	sub	sp, sp, #8
    3e7c:	str	r0, [sp, #4]
    3e80:	str	r1, [sp]
    3e84:	ldr	r0, [sp, #4]
    3e88:	movw	r1, #0
    3e8c:	str	r1, [r0]
    3e90:	ldr	r0, [sp, #4]
    3e94:	str	r1, [r0, #4]
    3e98:	ldr	r0, [sp, #4]
    3e9c:	str	r1, [r0, #16]
    3ea0:	ldr	r0, [sp, #4]
    3ea4:	str	r1, [r0, #12]
    3ea8:	ldr	r0, [sp, #4]
    3eac:	str	r1, [r0, #8]
    3eb0:	ldr	r0, [sp]
    3eb4:	ldr	r1, [sp, #4]
    3eb8:	str	r0, [r1, #20]
    3ebc:	add	sp, sp, #8
    3ec0:	bx	lr

00003ec4 <hashTableInit>:
    3ec4:	sub	sp, sp, #8
    3ec8:	str	r0, [sp, #4]
    3ecc:	str	r1, [sp]
    3ed0:	ldr	r0, [sp, #4]
    3ed4:	movw	r1, #0
    3ed8:	strb	r1, [r0, #4]
    3edc:	ldr	r0, [sp, #4]
    3ee0:	movw	r1, #0
    3ee4:	str	r1, [r0, #8]
    3ee8:	ldr	r0, [sp, #4]
    3eec:	str	r1, [r0, #12]
    3ef0:	ldr	r0, [sp, #4]
    3ef4:	str	r1, [r0]
    3ef8:	ldr	r0, [sp]
    3efc:	ldr	r1, [sp, #4]
    3f00:	str	r0, [r1, #16]
    3f04:	add	sp, sp, #8
    3f08:	bx	lr

00003f0c <prologInitProcessor>:
    3f0c:	push	{fp, lr}
    3f10:	mov	fp, sp
    3f14:	sub	sp, sp, #24
    3f18:	str	r0, [fp, #-8]
    3f1c:	str	r1, [sp, #12]
    3f20:	str	r2, [sp, #8]
    3f24:	str	r3, [sp, #4]
    3f28:	ldr	r0, [fp, #-8]
    3f2c:	bl	3f80 <initializeEncoding>
    3f30:	str	r0, [sp]
    3f34:	ldr	r0, [sp]
    3f38:	cmp	r0, #0
    3f3c:	beq	3f4c <prologInitProcessor+0x40>
    3f40:	ldr	r0, [sp]
    3f44:	str	r0, [fp, #-4]
    3f48:	b	3f74 <prologInitProcessor+0x68>
    3f4c:	ldr	r0, [fp, #-8]
    3f50:	movw	r1, #0
    3f54:	movt	r1, #0
    3f58:	str	r1, [r0, #288]	; 0x120
    3f5c:	ldr	r0, [fp, #-8]
    3f60:	ldr	r1, [sp, #12]
    3f64:	ldr	r2, [sp, #8]
    3f68:	ldr	r3, [sp, #4]
    3f6c:	bl	4028 <prologProcessor>
    3f70:	str	r0, [fp, #-4]
    3f74:	ldr	r0, [fp, #-4]
    3f78:	mov	sp, fp
    3f7c:	pop	{fp, pc}

00003f80 <initializeEncoding>:
    3f80:	push	{fp, lr}
    3f84:	mov	fp, sp
    3f88:	sub	sp, sp, #16
    3f8c:	str	r0, [sp, #8]
    3f90:	ldr	r0, [sp, #8]
    3f94:	ldr	r0, [r0, #240]	; 0xf0
    3f98:	str	r0, [sp, #4]
    3f9c:	ldr	r0, [sp, #8]
    3fa0:	ldrb	r0, [r0, #244]	; 0xf4
    3fa4:	cmp	r0, #0
    3fa8:	movw	r0, #0
    3fac:	movne	r0, #1
    3fb0:	tst	r0, #1
    3fb4:	movw	r0, #0
    3fb8:	movt	r0, #0
    3fbc:	movw	r1, #0
    3fc0:	movt	r1, #0
    3fc4:	movne	r0, r1
    3fc8:	ldr	r1, [sp, #8]
    3fcc:	add	r1, r1, #156	; 0x9c
    3fd0:	ldr	r2, [sp, #8]
    3fd4:	add	r2, r2, #152	; 0x98
    3fd8:	ldr	r3, [sp, #4]
    3fdc:	str	r0, [sp]
    3fe0:	mov	r0, r1
    3fe4:	mov	r1, r2
    3fe8:	mov	r2, r3
    3fec:	ldr	r3, [sp]
    3ff0:	blx	r3
    3ff4:	cmp	r0, #0
    3ff8:	beq	4008 <initializeEncoding+0x88>
    3ffc:	movw	r0, #0
    4000:	str	r0, [fp, #-4]
    4004:	b	401c <initializeEncoding+0x9c>
    4008:	ldr	r0, [sp, #8]
    400c:	ldr	r1, [sp, #8]
    4010:	ldr	r1, [r1, #240]	; 0xf0
    4014:	bl	40ec <handleUnknownEncoding>
    4018:	str	r0, [fp, #-4]
    401c:	ldr	r0, [fp, #-4]
    4020:	mov	sp, fp
    4024:	pop	{fp, pc}

00004028 <prologProcessor>:
    4028:	push	{r4, r5, r6, sl, fp, lr}
    402c:	add	fp, sp, #16
    4030:	sub	sp, sp, #48	; 0x30
    4034:	str	r0, [fp, #-20]	; 0xffffffec
    4038:	str	r1, [fp, #-24]	; 0xffffffe8
    403c:	str	r2, [fp, #-28]	; 0xffffffe4
    4040:	str	r3, [sp, #32]
    4044:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4048:	str	r0, [sp, #28]
    404c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4050:	ldr	r0, [r0, #152]	; 0x98
    4054:	ldr	r0, [r0]
    4058:	ldr	r1, [fp, #-20]	; 0xffffffec
    405c:	ldr	r1, [r1, #152]	; 0x98
    4060:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4064:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4068:	str	r0, [sp, #20]
    406c:	mov	r0, r1
    4070:	mov	r1, r2
    4074:	mov	r2, r3
    4078:	add	r3, sp, #28
    407c:	ldr	ip, [sp, #20]
    4080:	blx	ip
    4084:	str	r0, [sp, #24]
    4088:	ldr	r0, [fp, #-20]	; 0xffffffec
    408c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4090:	ldr	r1, [r1, #152]	; 0x98
    4094:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4098:	ldr	r3, [fp, #-28]	; 0xffffffe4
    409c:	ldr	ip, [sp, #24]
    40a0:	ldr	lr, [sp, #28]
    40a4:	ldr	r4, [sp, #32]
    40a8:	ldr	r5, [fp, #-20]	; 0xffffffec
    40ac:	add	r5, r5, #500	; 0x1f4
    40b0:	ldrsb	r5, [r5]
    40b4:	cmp	r5, #0
    40b8:	movw	r5, #0
    40bc:	movne	r5, #1
    40c0:	mvn	r6, #0
    40c4:	eor	r5, r5, r6
    40c8:	and	r5, r5, #1
    40cc:	str	ip, [sp]
    40d0:	str	lr, [sp, #4]
    40d4:	str	r4, [sp, #8]
    40d8:	and	ip, r5, #255	; 0xff
    40dc:	str	ip, [sp, #12]
    40e0:	bl	42dc <doProlog>
    40e4:	sub	sp, fp, #16
    40e8:	pop	{r4, r5, r6, sl, fp, pc}

000040ec <handleUnknownEncoding>:
    40ec:	push	{r4, r5, fp, lr}
    40f0:	add	fp, sp, #8
    40f4:	sub	sp, sp, #56	; 0x38
    40f8:	sub	sp, sp, #1024	; 0x400
    40fc:	str	r0, [fp, #-16]
    4100:	str	r1, [fp, #-20]	; 0xffffffec
    4104:	ldr	r0, [fp, #-16]
    4108:	ldr	r0, [r0, #132]	; 0x84
    410c:	movw	r1, #0
    4110:	cmp	r0, r1
    4114:	beq	42c8 <handleUnknownEncoding+0x1dc>
    4118:	movw	r0, #0
    411c:	str	r0, [sp, #28]
    4120:	ldr	r0, [sp, #28]
    4124:	cmp	r0, #256	; 0x100
    4128:	bge	4150 <handleUnknownEncoding+0x64>
    412c:	add	r0, sp, #32
    4130:	ldr	r1, [sp, #28]
    4134:	add	r0, r0, r1, lsl #2
    4138:	mvn	r1, #0
    413c:	str	r1, [r0]
    4140:	ldr	r0, [sp, #28]
    4144:	add	r0, r0, #1
    4148:	str	r0, [sp, #28]
    414c:	b	4120 <handleUnknownEncoding+0x34>
    4150:	movw	r0, #0
    4154:	str	r0, [sp, #1060]	; 0x424
    4158:	str	r0, [sp, #1056]	; 0x420
    415c:	str	r0, [sp, #1064]	; 0x428
    4160:	ldr	r0, [fp, #-16]
    4164:	ldr	r0, [r0, #132]	; 0x84
    4168:	ldr	r1, [fp, #-16]
    416c:	ldr	r1, [r1, #256]	; 0x100
    4170:	ldr	r2, [fp, #-20]	; 0xffffffec
    4174:	str	r0, [sp, #20]
    4178:	mov	r0, r1
    417c:	mov	r1, r2
    4180:	add	r2, sp, #32
    4184:	ldr	r3, [sp, #20]
    4188:	blx	r3
    418c:	cmp	r0, #0
    4190:	beq	429c <handleUnknownEncoding+0x1b0>
    4194:	ldr	r0, [fp, #-16]
    4198:	ldr	r0, [r0, #12]
    419c:	str	r0, [sp, #16]
    41a0:	bl	0 <coda_XmlSizeOfUnknownEncoding>
    41a4:	ldr	lr, [sp, #16]
    41a8:	blx	lr
    41ac:	ldr	lr, [fp, #-16]
    41b0:	str	r0, [lr, #248]	; 0xf8
    41b4:	ldr	r0, [fp, #-16]
    41b8:	ldr	r0, [r0, #248]	; 0xf8
    41bc:	movw	lr, #0
    41c0:	cmp	r0, lr
    41c4:	bne	41fc <handleUnknownEncoding+0x110>
    41c8:	ldr	r0, [sp, #1064]	; 0x428
    41cc:	movw	r1, #0
    41d0:	cmp	r0, r1
    41d4:	beq	41f0 <handleUnknownEncoding+0x104>
    41d8:	ldr	r0, [sp, #1064]	; 0x428
    41dc:	ldr	r1, [sp, #1056]	; 0x420
    41e0:	str	r0, [sp, #12]
    41e4:	mov	r0, r1
    41e8:	ldr	r1, [sp, #12]
    41ec:	blx	r1
    41f0:	movw	r0, #1
    41f4:	str	r0, [fp, #-12]
    41f8:	b	42d0 <handleUnknownEncoding+0x1e4>
    41fc:	add	r1, sp, #32
    4200:	ldr	r0, [fp, #-16]
    4204:	ldrb	r0, [r0, #244]	; 0xf4
    4208:	cmp	r0, #0
    420c:	movw	r0, #0
    4210:	movne	r0, #1
    4214:	tst	r0, #1
    4218:	movw	r0, #0
    421c:	movt	r0, #0
    4220:	movw	r2, #0
    4224:	movt	r2, #0
    4228:	movne	r0, r2
    422c:	ldr	r2, [fp, #-16]
    4230:	ldr	r2, [r2, #248]	; 0xf8
    4234:	ldr	r3, [sp, #1060]	; 0x424
    4238:	ldr	ip, [sp, #1056]	; 0x420
    423c:	str	r0, [sp, #8]
    4240:	mov	r0, r2
    4244:	mov	r2, r3
    4248:	mov	r3, ip
    424c:	ldr	ip, [sp, #8]
    4250:	blx	ip
    4254:	str	r0, [sp, #24]
    4258:	ldr	r0, [sp, #24]
    425c:	movw	r1, #0
    4260:	cmp	r0, r1
    4264:	beq	4298 <handleUnknownEncoding+0x1ac>
    4268:	ldr	r0, [sp, #1056]	; 0x420
    426c:	ldr	r1, [fp, #-16]
    4270:	str	r0, [r1, #252]	; 0xfc
    4274:	ldr	r0, [sp, #1064]	; 0x428
    4278:	ldr	r1, [fp, #-16]
    427c:	str	r0, [r1, #260]	; 0x104
    4280:	ldr	r0, [sp, #24]
    4284:	ldr	r1, [fp, #-16]
    4288:	str	r0, [r1, #152]	; 0x98
    428c:	movw	r0, #0
    4290:	str	r0, [fp, #-12]
    4294:	b	42d0 <handleUnknownEncoding+0x1e4>
    4298:	b	429c <handleUnknownEncoding+0x1b0>
    429c:	ldr	r0, [sp, #1064]	; 0x428
    42a0:	movw	r1, #0
    42a4:	cmp	r0, r1
    42a8:	beq	42c4 <handleUnknownEncoding+0x1d8>
    42ac:	ldr	r0, [sp, #1064]	; 0x428
    42b0:	ldr	r1, [sp, #1056]	; 0x420
    42b4:	str	r0, [sp, #4]
    42b8:	mov	r0, r1
    42bc:	ldr	r1, [sp, #4]
    42c0:	blx	r1
    42c4:	b	42c8 <handleUnknownEncoding+0x1dc>
    42c8:	movw	r0, #18
    42cc:	str	r0, [fp, #-12]
    42d0:	ldr	r0, [fp, #-12]
    42d4:	sub	sp, fp, #8
    42d8:	pop	{r4, r5, fp, pc}

000042dc <doProlog>:
    42dc:	push	{r4, r5, r6, sl, fp, lr}
    42e0:	add	fp, sp, #16
    42e4:	sub	sp, sp, #384	; 0x180
    42e8:	ldr	ip, [fp, #20]
    42ec:	ldr	lr, [fp, #16]
    42f0:	ldr	r4, [fp, #12]
    42f4:	ldr	r5, [fp, #8]
    42f8:	str	r0, [fp, #-24]	; 0xffffffe8
    42fc:	str	r1, [fp, #-28]	; 0xffffffe4
    4300:	str	r2, [fp, #-32]	; 0xffffffe0
    4304:	str	r3, [fp, #-36]	; 0xffffffdc
    4308:	strb	ip, [fp, #-37]	; 0xffffffdb
    430c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4310:	ldr	r0, [r0, #364]	; 0x16c
    4314:	str	r0, [fp, #-44]	; 0xffffffd4
    4318:	ldr	r0, [fp, #-28]	; 0xffffffe4
    431c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4320:	ldr	r1, [r1, #152]	; 0x98
    4324:	cmp	r0, r1
    4328:	str	r5, [fp, #-192]	; 0xffffff40
    432c:	str	r4, [fp, #-196]	; 0xffffff3c
    4330:	str	lr, [sp, #200]	; 0xc8
    4334:	bne	4354 <doProlog+0x78>
    4338:	ldr	r0, [fp, #-24]	; 0xffffffe8
    433c:	add	r0, r0, #296	; 0x128
    4340:	str	r0, [fp, #-48]	; 0xffffffd0
    4344:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4348:	add	r0, r0, #300	; 0x12c
    434c:	str	r0, [fp, #-52]	; 0xffffffcc
    4350:	b	4370 <doProlog+0x94>
    4354:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4358:	ldr	r0, [r0, #308]	; 0x134
    435c:	str	r0, [fp, #-48]	; 0xffffffd0
    4360:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4364:	ldr	r0, [r0, #308]	; 0x134
    4368:	add	r0, r0, #4
    436c:	str	r0, [fp, #-52]	; 0xffffffcc
    4370:	b	4374 <doProlog+0x98>
    4374:	movw	r0, #1
    4378:	strb	r0, [fp, #-61]	; 0xffffffc3
    437c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4380:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4384:	str	r0, [r1]
    4388:	ldr	r0, [fp, #12]
    438c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4390:	str	r0, [r1]
    4394:	ldr	r0, [fp, #8]
    4398:	cmp	r0, #0
    439c:	bgt	4564 <doProlog+0x288>
    43a0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
    43a4:	cmp	r0, #0
    43a8:	beq	43d0 <doProlog+0xf4>
    43ac:	ldr	r0, [fp, #8]
    43b0:	cmp	r0, #0
    43b4:	beq	43d0 <doProlog+0xf4>
    43b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    43bc:	ldr	r1, [fp, #16]
    43c0:	str	r0, [r1]
    43c4:	movw	r0, #0
    43c8:	str	r0, [fp, #-20]	; 0xffffffec
    43cc:	b	7174 <doProlog+0x2e98>
    43d0:	ldr	r0, [fp, #8]
    43d4:	add	r0, r0, #15
    43d8:	cmp	r0, #15
    43dc:	str	r0, [sp, #196]	; 0xc4
    43e0:	bhi	4548 <doProlog+0x26c>
    43e4:	add	r0, pc, #8
    43e8:	ldr	r1, [sp, #196]	; 0xc4
    43ec:	ldr	r0, [r0, r1, lsl #2]
    43f0:	mov	pc, r0
    43f4:	.word	0x00004464
    43f8:	.word	0x00004548
    43fc:	.word	0x00004548
    4400:	.word	0x00004548
    4404:	.word	0x00004548
    4408:	.word	0x00004548
    440c:	.word	0x00004548
    4410:	.word	0x00004548
    4414:	.word	0x00004548
    4418:	.word	0x00004548
    441c:	.word	0x00004548
    4420:	.word	0x00004478
    4424:	.word	0x00004548
    4428:	.word	0x00004458
    442c:	.word	0x0000444c
    4430:	.word	0x00004434
    4434:	ldr	r0, [fp, #12]
    4438:	ldr	r1, [fp, #-48]	; 0xffffffd0
    443c:	str	r0, [r1]
    4440:	movw	r0, #4
    4444:	str	r0, [fp, #-20]	; 0xffffffec
    4448:	b	7174 <doProlog+0x2e98>
    444c:	movw	r0, #5
    4450:	str	r0, [fp, #-20]	; 0xffffffec
    4454:	b	7174 <doProlog+0x2e98>
    4458:	movw	r0, #6
    445c:	str	r0, [fp, #-20]	; 0xffffffec
    4460:	b	7174 <doProlog+0x2e98>
    4464:	ldr	r0, [fp, #8]
    4468:	movw	r1, #0
    446c:	sub	r0, r1, r0
    4470:	str	r0, [fp, #8]
    4474:	b	4560 <doProlog+0x284>
    4478:	ldr	r0, [fp, #-28]	; 0xffffffe4
    447c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4480:	ldr	r1, [r1, #152]	; 0x98
    4484:	cmp	r0, r1
    4488:	beq	44b8 <doProlog+0x1dc>
    448c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4490:	ldr	r0, [r0, #308]	; 0x134
    4494:	ldrsb	r0, [r0, #20]
    4498:	cmp	r0, #0
    449c:	bne	44b8 <doProlog+0x1dc>
    44a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    44a4:	ldr	r1, [fp, #16]
    44a8:	str	r0, [r1]
    44ac:	movw	r0, #0
    44b0:	str	r0, [fp, #-20]	; 0xffffffec
    44b4:	b	7174 <doProlog+0x2e98>
    44b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44bc:	ldrb	r0, [r0, #504]	; 0x1f8
    44c0:	cmp	r0, #0
    44c4:	bne	44dc <doProlog+0x200>
    44c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    44cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    44d0:	ldr	r1, [r1, #152]	; 0x98
    44d4:	cmp	r0, r1
    44d8:	beq	453c <doProlog+0x260>
    44dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44e0:	ldr	r0, [r0, #264]	; 0x108
    44e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    44e8:	add	r1, r1, #264	; 0x108
    44ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
    44f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    44f4:	ldr	ip, [fp, #-28]	; 0xffffffe4
    44f8:	str	r0, [sp, #192]	; 0xc0
    44fc:	mov	r0, r1
    4500:	mvn	r1, #3
    4504:	str	ip, [sp]
    4508:	ldr	ip, [sp, #192]	; 0xc0
    450c:	blx	ip
    4510:	cmn	r0, #1
    4514:	bne	4524 <doProlog+0x248>
    4518:	movw	r0, #29
    451c:	str	r0, [fp, #-20]	; 0xffffffec
    4520:	b	7174 <doProlog+0x2e98>
    4524:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4528:	ldr	r1, [fp, #16]
    452c:	str	r0, [r1]
    4530:	movw	r0, #0
    4534:	str	r0, [fp, #-20]	; 0xffffffec
    4538:	b	7174 <doProlog+0x2e98>
    453c:	movw	r0, #3
    4540:	str	r0, [fp, #-20]	; 0xffffffec
    4544:	b	7174 <doProlog+0x2e98>
    4548:	ldr	r0, [fp, #8]
    454c:	movw	r1, #0
    4550:	sub	r0, r1, r0
    4554:	str	r0, [fp, #8]
    4558:	ldr	r0, [fp, #-36]	; 0xffffffdc
    455c:	str	r0, [fp, #12]
    4560:	b	4564 <doProlog+0x288>
    4564:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4568:	ldr	r1, [r0, #264]!	; 0x108
    456c:	ldr	r2, [fp, #8]
    4570:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4574:	ldr	ip, [fp, #12]
    4578:	ldr	lr, [fp, #-28]	; 0xffffffe4
    457c:	mov	r4, sp
    4580:	str	lr, [r4]
    4584:	str	r1, [sp, #188]	; 0xbc
    4588:	mov	r1, r2
    458c:	mov	r2, r3
    4590:	mov	r3, ip
    4594:	ldr	ip, [sp, #188]	; 0xbc
    4598:	blx	ip
    459c:	str	r0, [fp, #-60]	; 0xffffffc4
    45a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    45a4:	add	r0, r0, #1
    45a8:	cmp	r0, #61	; 0x3d
    45ac:	str	r0, [sp, #184]	; 0xb8
    45b0:	bhi	70b4 <doProlog+0x2dd8>
    45b4:	add	r0, pc, #8
    45b8:	ldr	r1, [sp, #184]	; 0xb8
    45bc:	ldr	r0, [r0, r1, lsl #2]
    45c0:	mov	pc, r0
    45c4:	.word	0x000062c4
    45c8:	.word	0x00006fd8
    45cc:	.word	0x000046bc
    45d0:	.word	0x00004d28
    45d4:	.word	0x00006ff4
    45d8:	.word	0x00004704
    45dc:	.word	0x00005788
    45e0:	.word	0x00004858
    45e4:	.word	0x0000478c
    45e8:	.word	0x00004ab0
    45ec:	.word	0x00005c94
    45f0:	.word	0x00005e58
    45f4:	.word	0x00007014
    45f8:	.word	0x00005610
    45fc:	.word	0x00005914
    4600:	.word	0x0000499c
    4604:	.word	0x000059e8
    4608:	.word	0x00005abc
    460c:	.word	0x00007044
    4610:	.word	0x00005fdc
    4614:	.word	0x00006140
    4618:	.word	0x00006230
    461c:	.word	0x0000605c
    4620:	.word	0x00004f14
    4624:	.word	0x00004f74
    4628:	.word	0x00004f94
    462c:	.word	0x00004fb4
    4630:	.word	0x00004fc8
    4634:	.word	0x00004fdc
    4638:	.word	0x00004ff0
    463c:	.word	0x00005004
    4640:	.word	0x00005018
    4644:	.word	0x00005058
    4648:	.word	0x00005058
    464c:	.word	0x00007064
    4650:	.word	0x00004ed4
    4654:	.word	0x00005140
    4658:	.word	0x00005140
    465c:	.word	0x00005360
    4660:	.word	0x00005360
    4664:	.word	0x00007094
    4668:	.word	0x00006ab4
    466c:	.word	0x00006b30
    4670:	.word	0x00006b30
    4674:	.word	0x00006c34
    4678:	.word	0x000063bc
    467c:	.word	0x00006e34
    4680:	.word	0x00006e4c
    4684:	.word	0x00006e40
    4688:	.word	0x00006e58
    468c:	.word	0x0000663c
    4690:	.word	0x000065c4
    4694:	.word	0x00006c98
    4698:	.word	0x00006cb0
    469c:	.word	0x00006ca4
    46a0:	.word	0x00006cbc
    46a4:	.word	0x00006f70
    46a8:	.word	0x00006fa4
    46ac:	.word	0x00004810
    46b0:	.word	0x0000630c
    46b4:	.word	0x0000673c
    46b8:	.word	0x0000673c
    46bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    46c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    46c4:	ldr	r3, [fp, #12]
    46c8:	movw	r1, #0
    46cc:	bl	7180 <processXmlDecl>
    46d0:	str	r0, [fp, #-68]	; 0xffffffbc
    46d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    46d8:	cmp	r0, #0
    46dc:	beq	46ec <doProlog+0x410>
    46e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
    46e4:	str	r0, [fp, #-20]	; 0xffffffec
    46e8:	b	7174 <doProlog+0x2e98>
    46ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    46f0:	ldr	r0, [r0, #152]	; 0x98
    46f4:	str	r0, [fp, #-28]	; 0xffffffe4
    46f8:	movw	r0, #0
    46fc:	strb	r0, [fp, #-61]	; 0xffffffc3
    4700:	b	70b4 <doProlog+0x2dd8>
    4704:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4708:	ldr	r0, [r0, #92]	; 0x5c
    470c:	movw	r1, #0
    4710:	cmp	r0, r1
    4714:	beq	477c <doProlog+0x4a0>
    4718:	ldr	r0, [fp, #-24]	; 0xffffffe8
    471c:	add	r0, r0, #432	; 0x1b0
    4720:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4724:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4728:	ldr	r3, [fp, #12]
    472c:	bl	75e4 <poolStoreString>
    4730:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4734:	str	r0, [r1, #328]	; 0x148
    4738:	ldr	r0, [fp, #-24]	; 0xffffffe8
    473c:	ldr	r0, [r0, #328]	; 0x148
    4740:	movw	r1, #0
    4744:	cmp	r0, r1
    4748:	bne	4758 <doProlog+0x47c>
    474c:	movw	r0, #1
    4750:	str	r0, [fp, #-20]	; 0xffffffec
    4754:	b	7174 <doProlog+0x2e98>
    4758:	ldr	r0, [fp, #-24]	; 0xffffffe8
    475c:	ldr	r0, [r0, #444]	; 0x1bc
    4760:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4764:	str	r0, [r1, #448]	; 0x1c0
    4768:	ldr	r0, [fp, #-24]	; 0xffffffe8
    476c:	movw	r1, #0
    4770:	str	r1, [r0, #336]	; 0x150
    4774:	movw	r0, #0
    4778:	strb	r0, [fp, #-61]	; 0xffffffc3
    477c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4780:	movw	r1, #0
    4784:	str	r1, [r0, #332]	; 0x14c
    4788:	b	70b4 <doProlog+0x2dd8>
    478c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4790:	ldr	r0, [r0, #92]	; 0x5c
    4794:	movw	r1, #0
    4798:	cmp	r0, r1
    479c:	beq	480c <doProlog+0x530>
    47a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    47a4:	ldr	r0, [r0, #92]	; 0x5c
    47a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    47ac:	ldr	r1, [r1, #4]
    47b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    47b4:	ldr	r2, [r2, #328]	; 0x148
    47b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    47bc:	ldr	r3, [r3, #332]	; 0x14c
    47c0:	ldr	ip, [fp, #-24]	; 0xffffffe8
    47c4:	ldr	ip, [ip, #336]	; 0x150
    47c8:	str	r0, [sp, #180]	; 0xb4
    47cc:	mov	r0, r1
    47d0:	mov	r1, r2
    47d4:	mov	r2, r3
    47d8:	mov	r3, ip
    47dc:	movw	ip, #1
    47e0:	str	ip, [sp]
    47e4:	ldr	ip, [sp, #180]	; 0xb4
    47e8:	blx	ip
    47ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    47f0:	movw	r1, #0
    47f4:	str	r1, [r0, #328]	; 0x148
    47f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    47fc:	add	r0, r0, #432	; 0x1b0
    4800:	bl	69c <poolClear>
    4804:	movw	r0, #0
    4808:	strb	r0, [fp, #-61]	; 0xffffffc3
    480c:	b	70b4 <doProlog+0x2dd8>
    4810:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4814:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4818:	ldr	r3, [fp, #12]
    481c:	movw	r1, #1
    4820:	bl	7180 <processXmlDecl>
    4824:	str	r0, [fp, #-72]	; 0xffffffb8
    4828:	ldr	r0, [fp, #-72]	; 0xffffffb8
    482c:	cmp	r0, #0
    4830:	beq	4840 <doProlog+0x564>
    4834:	ldr	r0, [fp, #-72]	; 0xffffffb8
    4838:	str	r0, [fp, #-20]	; 0xffffffec
    483c:	b	7174 <doProlog+0x2e98>
    4840:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4844:	ldr	r0, [r0, #152]	; 0x98
    4848:	str	r0, [fp, #-28]	; 0xffffffe4
    484c:	movw	r0, #0
    4850:	strb	r0, [fp, #-61]	; 0xffffffc3
    4854:	b	70b4 <doProlog+0x2dd8>
    4858:	ldr	r0, [fp, #-24]	; 0xffffffe8
    485c:	movw	r1, #0
    4860:	strb	r1, [r0, #505]	; 0x1f9
    4864:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4868:	ldr	r1, [fp, #-44]	; 0xffffffd4
    486c:	add	r1, r1, #132	; 0x84
    4870:	movw	r2, #0
    4874:	movt	r2, #0
    4878:	movw	r3, #36	; 0x24
    487c:	bl	7694 <lookup>
    4880:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4884:	str	r0, [r1, #324]	; 0x144
    4888:	ldr	r0, [fp, #-24]	; 0xffffffe8
    488c:	ldr	r0, [r0, #324]	; 0x144
    4890:	movw	r1, #0
    4894:	cmp	r0, r1
    4898:	bne	48a8 <doProlog+0x5cc>
    489c:	movw	r0, #1
    48a0:	str	r0, [fp, #-20]	; 0xffffffec
    48a4:	b	7174 <doProlog+0x2e98>
    48a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    48ac:	movw	r1, #1
    48b0:	strb	r1, [r0, #129]	; 0x81
    48b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    48b8:	ldr	r0, [r0, #92]	; 0x5c
    48bc:	movw	r1, #0
    48c0:	cmp	r0, r1
    48c4:	beq	4998 <doProlog+0x6bc>
    48c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    48cc:	ldr	r0, [r0, #56]	; 0x38
    48d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    48d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    48d8:	ldr	r3, [fp, #12]
    48dc:	ldr	ip, [fp, #-48]	; 0xffffffd0
    48e0:	str	r0, [sp, #176]	; 0xb0
    48e4:	mov	r0, r1
    48e8:	mov	r1, r2
    48ec:	mov	r2, r3
    48f0:	mov	r3, ip
    48f4:	ldr	ip, [sp, #176]	; 0xb0
    48f8:	blx	ip
    48fc:	cmp	r0, #0
    4900:	bne	4910 <doProlog+0x634>
    4904:	movw	r0, #32
    4908:	str	r0, [fp, #-20]	; 0xffffffec
    490c:	b	7174 <doProlog+0x2e98>
    4910:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4914:	add	r0, r0, #432	; 0x1b0
    4918:	ldr	r1, [fp, #-28]	; 0xffffffe4
    491c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4920:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4924:	ldr	r3, [r3, #68]	; 0x44
    4928:	add	r2, r2, r3
    492c:	ldr	r3, [fp, #12]
    4930:	ldr	ip, [fp, #-28]	; 0xffffffe4
    4934:	ldr	ip, [ip, #68]	; 0x44
    4938:	movw	lr, #0
    493c:	sub	ip, lr, ip
    4940:	add	r3, r3, ip
    4944:	bl	75e4 <poolStoreString>
    4948:	str	r0, [fp, #-76]	; 0xffffffb4
    494c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    4950:	movw	r1, #0
    4954:	cmp	r0, r1
    4958:	bne	4968 <doProlog+0x68c>
    495c:	movw	r0, #1
    4960:	str	r0, [fp, #-20]	; 0xffffffec
    4964:	b	7174 <doProlog+0x2e98>
    4968:	ldr	r0, [fp, #-76]	; 0xffffffb4
    496c:	bl	7c90 <normalizePublicId>
    4970:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4974:	ldr	r0, [r0, #444]	; 0x1bc
    4978:	ldr	lr, [fp, #-24]	; 0xffffffe8
    497c:	str	r0, [lr, #448]	; 0x1c0
    4980:	ldr	r0, [fp, #-76]	; 0xffffffb4
    4984:	ldr	lr, [fp, #-24]	; 0xffffffe8
    4988:	str	r0, [lr, #336]	; 0x150
    498c:	movw	r0, #0
    4990:	strb	r0, [fp, #-61]	; 0xffffffc3
    4994:	b	49e8 <doProlog+0x70c>
    4998:	b	499c <doProlog+0x6c0>
    499c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    49a0:	ldr	r0, [r0, #56]	; 0x38
    49a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    49a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    49ac:	ldr	r3, [fp, #12]
    49b0:	ldr	ip, [fp, #-48]	; 0xffffffd0
    49b4:	str	r0, [sp, #172]	; 0xac
    49b8:	mov	r0, r1
    49bc:	mov	r1, r2
    49c0:	mov	r2, r3
    49c4:	mov	r3, ip
    49c8:	ldr	ip, [sp, #172]	; 0xac
    49cc:	blx	ip
    49d0:	cmp	r0, #0
    49d4:	bne	49e4 <doProlog+0x708>
    49d8:	movw	r0, #32
    49dc:	str	r0, [fp, #-20]	; 0xffffffec
    49e0:	b	7174 <doProlog+0x2e98>
    49e4:	b	49e8 <doProlog+0x70c>
    49e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    49ec:	ldrb	r0, [r0, #128]	; 0x80
    49f0:	cmp	r0, #0
    49f4:	beq	4aac <doProlog+0x7d0>
    49f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    49fc:	ldr	r0, [r0, #324]	; 0x144
    4a00:	movw	r1, #0
    4a04:	cmp	r0, r1
    4a08:	beq	4aac <doProlog+0x7d0>
    4a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4a10:	add	r0, r0, #80	; 0x50
    4a14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4a18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4a20:	ldr	r3, [r3, #68]	; 0x44
    4a24:	add	r2, r2, r3
    4a28:	ldr	r3, [fp, #12]
    4a2c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    4a30:	ldr	ip, [ip, #68]	; 0x44
    4a34:	movw	lr, #0
    4a38:	sub	ip, lr, ip
    4a3c:	add	r3, r3, ip
    4a40:	bl	75e4 <poolStoreString>
    4a44:	str	r0, [fp, #-80]	; 0xffffffb0
    4a48:	ldr	r0, [fp, #-80]	; 0xffffffb0
    4a4c:	movw	r1, #0
    4a50:	cmp	r0, r1
    4a54:	bne	4a64 <doProlog+0x788>
    4a58:	movw	r0, #1
    4a5c:	str	r0, [fp, #-20]	; 0xffffffec
    4a60:	b	7174 <doProlog+0x2e98>
    4a64:	ldr	r0, [fp, #-80]	; 0xffffffb0
    4a68:	bl	7c90 <normalizePublicId>
    4a6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    4a70:	ldr	lr, [fp, #-24]	; 0xffffffe8
    4a74:	ldr	lr, [lr, #324]	; 0x144
    4a78:	str	r0, [lr, #24]
    4a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4a80:	ldr	r0, [r0, #92]	; 0x5c
    4a84:	ldr	lr, [fp, #-44]	; 0xffffffd4
    4a88:	str	r0, [lr, #96]	; 0x60
    4a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4a90:	ldr	r0, [r0, #144]	; 0x90
    4a94:	movw	lr, #0
    4a98:	cmp	r0, lr
    4a9c:	beq	4aa8 <doProlog+0x7cc>
    4aa0:	movw	r0, #0
    4aa4:	strb	r0, [fp, #-61]	; 0xffffffc3
    4aa8:	b	4aac <doProlog+0x7d0>
    4aac:	b	70b4 <doProlog+0x2dd8>
    4ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ab4:	ldr	r0, [r0, #328]	; 0x148
    4ab8:	movw	r1, #0
    4abc:	cmp	r0, r1
    4ac0:	beq	4b24 <doProlog+0x848>
    4ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ac8:	ldr	r0, [r0, #92]	; 0x5c
    4acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4ad0:	ldr	r1, [r1, #4]
    4ad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4ad8:	ldr	r2, [r2, #328]	; 0x148
    4adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4ae0:	ldr	r3, [r3, #332]	; 0x14c
    4ae4:	ldr	ip, [fp, #-24]	; 0xffffffe8
    4ae8:	ldr	ip, [ip, #336]	; 0x150
    4aec:	str	r0, [sp, #168]	; 0xa8
    4af0:	mov	r0, r1
    4af4:	mov	r1, r2
    4af8:	mov	r2, r3
    4afc:	mov	r3, ip
    4b00:	movw	ip, #0
    4b04:	str	ip, [sp]
    4b08:	ldr	ip, [sp, #168]	; 0xa8
    4b0c:	blx	ip
    4b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b14:	add	r0, r0, #432	; 0x1b0
    4b18:	bl	69c <poolClear>
    4b1c:	movw	r0, #0
    4b20:	strb	r0, [fp, #-61]	; 0xffffffc3
    4b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b28:	ldr	r0, [r0, #332]	; 0x14c
    4b2c:	movw	r1, #0
    4b30:	cmp	r0, r1
    4b34:	bne	4b48 <doProlog+0x86c>
    4b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b3c:	ldrb	r0, [r0, #505]	; 0x1f9
    4b40:	cmp	r0, #0
    4b44:	beq	4ce8 <doProlog+0xa0c>
    4b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4b4c:	ldrb	r0, [r0, #129]	; 0x81
    4b50:	strb	r0, [fp, #-81]	; 0xffffffaf
    4b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4b58:	movw	r1, #1
    4b5c:	strb	r1, [r0, #129]	; 0x81
    4b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b64:	ldr	r0, [r0, #508]	; 0x1fc
    4b68:	cmp	r0, #0
    4b6c:	beq	4cdc <doProlog+0xa00>
    4b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b74:	ldr	r0, [r0, #120]	; 0x78
    4b78:	movw	r1, #0
    4b7c:	cmp	r0, r1
    4b80:	beq	4cdc <doProlog+0xa00>
    4b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b88:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4b8c:	add	r1, r1, #132	; 0x84
    4b90:	movw	r2, #0
    4b94:	movt	r2, #0
    4b98:	movw	r3, #36	; 0x24
    4b9c:	bl	7694 <lookup>
    4ba0:	str	r0, [fp, #-88]	; 0xffffffa8
    4ba4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    4ba8:	movw	r1, #0
    4bac:	cmp	r0, r1
    4bb0:	bne	4bc0 <doProlog+0x8e4>
    4bb4:	movw	r0, #1
    4bb8:	str	r0, [fp, #-20]	; 0xffffffec
    4bbc:	b	7174 <doProlog+0x2e98>
    4bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4bc4:	movw	r1, #505	; 0x1f9
    4bc8:	add	r0, r0, r1
    4bcc:	ldrsb	r0, [r0]
    4bd0:	cmp	r0, #0
    4bd4:	beq	4be8 <doProlog+0x90c>
    4bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4bdc:	ldr	r0, [r0, #368]	; 0x170
    4be0:	ldr	r1, [fp, #-88]	; 0xffffffa8
    4be4:	str	r0, [r1, #20]
    4be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4bec:	movw	r1, #0
    4bf0:	strb	r1, [r0, #131]	; 0x83
    4bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4bf8:	ldr	r0, [r0, #120]	; 0x78
    4bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4c00:	ldr	r1, [r1, #124]	; 0x7c
    4c04:	ldr	r2, [fp, #-88]	; 0xffffffa8
    4c08:	ldr	r2, [r2, #20]
    4c0c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    4c10:	ldr	r3, [r3, #16]
    4c14:	ldr	ip, [fp, #-88]	; 0xffffffa8
    4c18:	ldr	ip, [ip, #24]
    4c1c:	str	r0, [sp, #164]	; 0xa4
    4c20:	mov	r0, r1
    4c24:	movw	r1, #0
    4c28:	str	ip, [sp]
    4c2c:	ldr	ip, [sp, #164]	; 0xa4
    4c30:	blx	ip
    4c34:	cmp	r0, #0
    4c38:	bne	4c48 <doProlog+0x96c>
    4c3c:	movw	r0, #21
    4c40:	str	r0, [fp, #-20]	; 0xffffffec
    4c44:	b	7174 <doProlog+0x2e98>
    4c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4c4c:	ldrsb	r0, [r0, #131]	; 0x83
    4c50:	cmp	r0, #0
    4c54:	beq	4cb4 <doProlog+0x9d8>
    4c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4c5c:	ldrsb	r0, [r0, #130]	; 0x82
    4c60:	cmp	r0, #0
    4c64:	bne	4cb0 <doProlog+0x9d4>
    4c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4c6c:	ldr	r0, [r0, #116]	; 0x74
    4c70:	movw	r1, #0
    4c74:	cmp	r0, r1
    4c78:	beq	4cb0 <doProlog+0x9d4>
    4c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4c80:	ldr	r0, [r0, #116]	; 0x74
    4c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4c88:	ldr	r1, [r1, #4]
    4c8c:	str	r0, [sp, #160]	; 0xa0
    4c90:	mov	r0, r1
    4c94:	ldr	r1, [sp, #160]	; 0xa0
    4c98:	blx	r1
    4c9c:	cmp	r0, #0
    4ca0:	bne	4cb0 <doProlog+0x9d4>
    4ca4:	movw	r0, #22
    4ca8:	str	r0, [fp, #-20]	; 0xffffffec
    4cac:	b	7174 <doProlog+0x2e98>
    4cb0:	b	4cd8 <doProlog+0x9fc>
    4cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4cb8:	ldr	r0, [r0, #332]	; 0x14c
    4cbc:	movw	r1, #0
    4cc0:	cmp	r0, r1
    4cc4:	bne	4cd4 <doProlog+0x9f8>
    4cc8:	ldrb	r0, [fp, #-81]	; 0xffffffaf
    4ccc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4cd0:	strb	r0, [r1, #129]	; 0x81
    4cd4:	b	4cd8 <doProlog+0x9fc>
    4cd8:	b	4cdc <doProlog+0xa00>
    4cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ce0:	movw	r1, #0
    4ce4:	strb	r1, [r0, #505]	; 0x1f9
    4ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4cec:	ldr	r0, [r0, #96]	; 0x60
    4cf0:	movw	r1, #0
    4cf4:	cmp	r0, r1
    4cf8:	beq	4d24 <doProlog+0xa48>
    4cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4d00:	ldr	r0, [r0, #96]	; 0x60
    4d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4d08:	ldr	r1, [r1, #4]
    4d0c:	str	r0, [sp, #156]	; 0x9c
    4d10:	mov	r0, r1
    4d14:	ldr	r1, [sp, #156]	; 0x9c
    4d18:	blx	r1
    4d1c:	movw	r0, #0
    4d20:	strb	r0, [fp, #-61]	; 0xffffffc3
    4d24:	b	70b4 <doProlog+0x2dd8>
    4d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4d2c:	movw	r1, #505	; 0x1f9
    4d30:	add	r0, r0, r1
    4d34:	ldrsb	r0, [r0]
    4d38:	cmp	r0, #0
    4d3c:	beq	4ea8 <doProlog+0xbcc>
    4d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4d44:	ldrb	r0, [r0, #129]	; 0x81
    4d48:	strb	r0, [fp, #-89]	; 0xffffffa7
    4d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4d50:	movw	r1, #1
    4d54:	strb	r1, [r0, #129]	; 0x81
    4d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4d5c:	ldr	r0, [r0, #508]	; 0x1fc
    4d60:	cmp	r0, #0
    4d64:	beq	4ea4 <doProlog+0xbc8>
    4d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4d6c:	ldr	r0, [r0, #120]	; 0x78
    4d70:	movw	r1, #0
    4d74:	cmp	r0, r1
    4d78:	beq	4ea4 <doProlog+0xbc8>
    4d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4d80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4d84:	add	r1, r1, #132	; 0x84
    4d88:	movw	r2, #0
    4d8c:	movt	r2, #0
    4d90:	movw	r3, #36	; 0x24
    4d94:	bl	7694 <lookup>
    4d98:	str	r0, [fp, #-96]	; 0xffffffa0
    4d9c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    4da0:	movw	r1, #0
    4da4:	cmp	r0, r1
    4da8:	bne	4db8 <doProlog+0xadc>
    4dac:	movw	r0, #1
    4db0:	str	r0, [fp, #-20]	; 0xffffffec
    4db4:	b	7174 <doProlog+0x2e98>
    4db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4dbc:	ldr	r0, [r0, #368]	; 0x170
    4dc0:	ldr	r1, [fp, #-96]	; 0xffffffa0
    4dc4:	str	r0, [r1, #20]
    4dc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4dcc:	movw	r1, #0
    4dd0:	strb	r1, [r0, #131]	; 0x83
    4dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4dd8:	ldr	r0, [r0, #120]	; 0x78
    4ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4de0:	ldr	r1, [r1, #124]	; 0x7c
    4de4:	ldr	r2, [fp, #-96]	; 0xffffffa0
    4de8:	ldr	r2, [r2, #20]
    4dec:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4df0:	ldr	r3, [r3, #16]
    4df4:	ldr	ip, [fp, #-96]	; 0xffffffa0
    4df8:	ldr	ip, [ip, #24]
    4dfc:	str	r0, [sp, #152]	; 0x98
    4e00:	mov	r0, r1
    4e04:	movw	r1, #0
    4e08:	str	ip, [sp]
    4e0c:	ldr	ip, [sp, #152]	; 0x98
    4e10:	blx	ip
    4e14:	cmp	r0, #0
    4e18:	bne	4e28 <doProlog+0xb4c>
    4e1c:	movw	r0, #21
    4e20:	str	r0, [fp, #-20]	; 0xffffffec
    4e24:	b	7174 <doProlog+0x2e98>
    4e28:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4e2c:	ldrsb	r0, [r0, #131]	; 0x83
    4e30:	cmp	r0, #0
    4e34:	beq	4e94 <doProlog+0xbb8>
    4e38:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4e3c:	ldrsb	r0, [r0, #130]	; 0x82
    4e40:	cmp	r0, #0
    4e44:	bne	4e90 <doProlog+0xbb4>
    4e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4e4c:	ldr	r0, [r0, #116]	; 0x74
    4e50:	movw	r1, #0
    4e54:	cmp	r0, r1
    4e58:	beq	4e90 <doProlog+0xbb4>
    4e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4e60:	ldr	r0, [r0, #116]	; 0x74
    4e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4e68:	ldr	r1, [r1, #4]
    4e6c:	str	r0, [sp, #148]	; 0x94
    4e70:	mov	r0, r1
    4e74:	ldr	r1, [sp, #148]	; 0x94
    4e78:	blx	r1
    4e7c:	cmp	r0, #0
    4e80:	bne	4e90 <doProlog+0xbb4>
    4e84:	movw	r0, #22
    4e88:	str	r0, [fp, #-20]	; 0xffffffec
    4e8c:	b	7174 <doProlog+0x2e98>
    4e90:	b	4ea0 <doProlog+0xbc4>
    4e94:	ldrb	r0, [fp, #-89]	; 0xffffffa7
    4e98:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4e9c:	strb	r0, [r1, #129]	; 0x81
    4ea0:	b	4ea4 <doProlog+0xbc8>
    4ea4:	b	4ea8 <doProlog+0xbcc>
    4ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4eac:	movw	r1, #0
    4eb0:	movt	r1, #0
    4eb4:	str	r1, [r0, #288]	; 0x120
    4eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ebc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    4ec0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4ec4:	ldr	r3, [fp, #16]
    4ec8:	bl	7dac <contentProcessor>
    4ecc:	str	r0, [fp, #-20]	; 0xffffffec
    4ed0:	b	7174 <doProlog+0x2e98>
    4ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4edc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4ee0:	ldr	r3, [fp, #12]
    4ee4:	bl	7e70 <getElementType>
    4ee8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4eec:	str	r0, [r1, #352]	; 0x160
    4ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ef4:	ldr	r0, [r0, #352]	; 0x160
    4ef8:	movw	r1, #0
    4efc:	cmp	r0, r1
    4f00:	bne	4f10 <doProlog+0xc34>
    4f04:	movw	r0, #1
    4f08:	str	r0, [fp, #-20]	; 0xffffffec
    4f0c:	b	7174 <doProlog+0x2e98>
    4f10:	b	5028 <doProlog+0xd4c>
    4f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4f1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4f20:	ldr	r3, [fp, #12]
    4f24:	bl	7f78 <getAttributeId>
    4f28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4f2c:	str	r0, [r1, #356]	; 0x164
    4f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f34:	ldr	r0, [r0, #356]	; 0x164
    4f38:	movw	r1, #0
    4f3c:	cmp	r0, r1
    4f40:	bne	4f50 <doProlog+0xc74>
    4f44:	movw	r0, #1
    4f48:	str	r0, [fp, #-20]	; 0xffffffec
    4f4c:	b	7174 <doProlog+0x2e98>
    4f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f54:	movw	r1, #0
    4f58:	strb	r1, [r0, #360]	; 0x168
    4f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f60:	movw	r2, #0
    4f64:	str	r2, [r0, #340]	; 0x154
    4f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f6c:	strb	r1, [r0, #361]	; 0x169
    4f70:	b	5028 <doProlog+0xd4c>
    4f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f78:	movw	r1, #1
    4f7c:	strb	r1, [r0, #360]	; 0x168
    4f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f84:	movw	r1, #0
    4f88:	movt	r1, #0
    4f8c:	str	r1, [r0, #340]	; 0x154
    4f90:	b	5028 <doProlog+0xd4c>
    4f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4f98:	movw	r1, #1
    4f9c:	strb	r1, [r0, #361]	; 0x169
    4fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4fa4:	movw	r1, #0
    4fa8:	movt	r1, #0
    4fac:	str	r1, [r0, #340]	; 0x154
    4fb0:	b	5028 <doProlog+0xd4c>
    4fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4fb8:	movw	r1, #0
    4fbc:	movt	r1, #0
    4fc0:	str	r1, [r0, #340]	; 0x154
    4fc4:	b	5028 <doProlog+0xd4c>
    4fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4fcc:	movw	r1, #0
    4fd0:	movt	r1, #0
    4fd4:	str	r1, [r0, #340]	; 0x154
    4fd8:	b	5028 <doProlog+0xd4c>
    4fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4fe0:	movw	r1, #0
    4fe4:	movt	r1, #0
    4fe8:	str	r1, [r0, #340]	; 0x154
    4fec:	b	5028 <doProlog+0xd4c>
    4ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4ff4:	movw	r1, #0
    4ff8:	movt	r1, #0
    4ffc:	str	r1, [r0, #340]	; 0x154
    5000:	b	5028 <doProlog+0xd4c>
    5004:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5008:	movw	r1, #0
    500c:	movt	r1, #0
    5010:	str	r1, [r0, #340]	; 0x154
    5014:	b	5028 <doProlog+0xd4c>
    5018:	ldr	r0, [fp, #-24]	; 0xffffffe8
    501c:	movw	r1, #0
    5020:	movt	r1, #0
    5024:	str	r1, [r0, #340]	; 0x154
    5028:	ldr	r0, [fp, #-44]	; 0xffffffd4
    502c:	ldrb	r0, [r0, #128]	; 0x80
    5030:	cmp	r0, #0
    5034:	beq	5054 <doProlog+0xd78>
    5038:	ldr	r0, [fp, #-24]	; 0xffffffe8
    503c:	ldr	r0, [r0, #140]	; 0x8c
    5040:	movw	r1, #0
    5044:	cmp	r0, r1
    5048:	beq	5054 <doProlog+0xd78>
    504c:	movw	r0, #0
    5050:	strb	r0, [fp, #-61]	; 0xffffffc3
    5054:	b	70b4 <doProlog+0x2dd8>
    5058:	ldr	r0, [fp, #-44]	; 0xffffffd4
    505c:	ldrb	r0, [r0, #128]	; 0x80
    5060:	cmp	r0, #0
    5064:	beq	513c <doProlog+0xe60>
    5068:	ldr	r0, [fp, #-24]	; 0xffffffe8
    506c:	ldr	r0, [r0, #140]	; 0x8c
    5070:	movw	r1, #0
    5074:	cmp	r0, r1
    5078:	beq	513c <doProlog+0xe60>
    507c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5080:	ldr	r0, [r0, #340]	; 0x154
    5084:	movw	r1, #0
    5088:	cmp	r0, r1
    508c:	beq	50a0 <doProlog+0xdc4>
    5090:	movw	r0, #0
    5094:	movt	r0, #0
    5098:	str	r0, [fp, #-100]	; 0xffffff9c
    509c:	b	50cc <doProlog+0xdf0>
    50a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    50a4:	cmp	r0, #32
    50a8:	movw	r0, #0
    50ac:	moveq	r0, #1
    50b0:	tst	r0, #1
    50b4:	movw	r0, #0
    50b8:	movt	r0, #0
    50bc:	movw	r1, #0
    50c0:	movt	r1, #0
    50c4:	movne	r0, r1
    50c8:	str	r0, [fp, #-100]	; 0xffffff9c
    50cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    50d0:	add	r0, r0, #432	; 0x1b0
    50d4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    50d8:	bl	8370 <poolAppendString>
    50dc:	movw	r1, #0
    50e0:	cmp	r0, r1
    50e4:	bne	50f4 <doProlog+0xe18>
    50e8:	movw	r0, #1
    50ec:	str	r0, [fp, #-20]	; 0xffffffec
    50f0:	b	7174 <doProlog+0x2e98>
    50f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    50f8:	add	r0, r0, #432	; 0x1b0
    50fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5100:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5104:	ldr	r3, [fp, #12]
    5108:	bl	8418 <poolAppend>
    510c:	movw	r1, #0
    5110:	cmp	r0, r1
    5114:	bne	5124 <doProlog+0xe48>
    5118:	movw	r0, #1
    511c:	str	r0, [fp, #-20]	; 0xffffffec
    5120:	b	7174 <doProlog+0x2e98>
    5124:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5128:	ldr	r0, [r0, #448]	; 0x1c0
    512c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5130:	str	r0, [r1, #340]	; 0x154
    5134:	movw	r0, #0
    5138:	strb	r0, [fp, #-61]	; 0xffffffc3
    513c:	b	70b4 <doProlog+0x2dd8>
    5140:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5144:	ldrsb	r0, [r0, #128]	; 0x80
    5148:	cmp	r0, #0
    514c:	beq	535c <doProlog+0x1080>
    5150:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5154:	ldr	r0, [r0, #352]	; 0x160
    5158:	ldr	r1, [fp, #-24]	; 0xffffffe8
    515c:	ldr	r1, [r1, #356]	; 0x164
    5160:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5164:	ldrb	r2, [r2, #360]	; 0x168
    5168:	ldr	r3, [fp, #-24]	; 0xffffffe8
    516c:	ldrb	r3, [r3, #361]	; 0x169
    5170:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5174:	and	r2, r2, #255	; 0xff
    5178:	and	r3, r3, #255	; 0xff
    517c:	movw	lr, #0
    5180:	str	lr, [sp]
    5184:	str	ip, [sp, #4]
    5188:	bl	84f4 <defineAttribute>
    518c:	cmp	r0, #0
    5190:	bne	51a0 <doProlog+0xec4>
    5194:	movw	r0, #1
    5198:	str	r0, [fp, #-20]	; 0xffffffec
    519c:	b	7174 <doProlog+0x2e98>
    51a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    51a4:	ldr	r0, [r0, #140]	; 0x8c
    51a8:	movw	r1, #0
    51ac:	cmp	r0, r1
    51b0:	beq	5358 <doProlog+0x107c>
    51b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    51b8:	ldr	r0, [r0, #340]	; 0x154
    51bc:	movw	r1, #0
    51c0:	cmp	r0, r1
    51c4:	beq	5358 <doProlog+0x107c>
    51c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    51cc:	ldr	r0, [r0, #340]	; 0x154
    51d0:	ldrb	r0, [r0]
    51d4:	cmp	r0, #40	; 0x28
    51d8:	beq	5204 <doProlog+0xf28>
    51dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    51e0:	ldr	r0, [r0, #340]	; 0x154
    51e4:	ldrb	r0, [r0]
    51e8:	cmp	r0, #78	; 0x4e
    51ec:	bne	52cc <doProlog+0xff0>
    51f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    51f4:	ldr	r0, [r0, #340]	; 0x154
    51f8:	ldrb	r0, [r0, #1]
    51fc:	cmp	r0, #79	; 0x4f
    5200:	bne	52cc <doProlog+0xff0>
    5204:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5208:	ldr	r0, [r0, #444]	; 0x1bc
    520c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5210:	ldr	r1, [r1, #440]	; 0x1b8
    5214:	cmp	r0, r1
    5218:	bne	5238 <doProlog+0xf5c>
    521c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5220:	add	r0, r0, #432	; 0x1b0
    5224:	bl	8764 <poolGrow>
    5228:	sxtb	r0, r0
    522c:	cmp	r0, #0
    5230:	bne	5238 <doProlog+0xf5c>
    5234:	b	52a0 <doProlog+0xfc4>
    5238:	ldr	r0, [fp, #-24]	; 0xffffffe8
    523c:	ldr	r1, [r0, #444]	; 0x1bc
    5240:	add	r2, r1, #1
    5244:	str	r2, [r0, #444]	; 0x1bc
    5248:	movw	r0, #41	; 0x29
    524c:	strb	r0, [r1]
    5250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5254:	ldr	r0, [r0, #444]	; 0x1bc
    5258:	ldr	r1, [fp, #-24]	; 0xffffffe8
    525c:	ldr	r1, [r1, #440]	; 0x1b8
    5260:	cmp	r0, r1
    5264:	bne	5284 <doProlog+0xfa8>
    5268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    526c:	add	r0, r0, #432	; 0x1b0
    5270:	bl	8764 <poolGrow>
    5274:	sxtb	r0, r0
    5278:	cmp	r0, #0
    527c:	bne	5284 <doProlog+0xfa8>
    5280:	b	52a0 <doProlog+0xfc4>
    5284:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5288:	ldr	r1, [r0, #444]	; 0x1bc
    528c:	add	r2, r1, #1
    5290:	str	r2, [r0, #444]	; 0x1bc
    5294:	movw	r0, #0
    5298:	strb	r0, [r1]
    529c:	b	52ac <doProlog+0xfd0>
    52a0:	movw	r0, #1
    52a4:	str	r0, [fp, #-20]	; 0xffffffec
    52a8:	b	7174 <doProlog+0x2e98>
    52ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    52b0:	ldr	r0, [r0, #448]	; 0x1c0
    52b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    52b8:	str	r0, [r1, #340]	; 0x154
    52bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    52c0:	ldr	r0, [r0, #444]	; 0x1bc
    52c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    52c8:	str	r0, [r1, #448]	; 0x1c0
    52cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    52d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    52d4:	str	r0, [r1]
    52d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    52dc:	ldr	r0, [r0, #140]	; 0x8c
    52e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    52e4:	ldr	r1, [r1, #4]
    52e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    52ec:	ldr	r2, [r2, #352]	; 0x160
    52f0:	ldr	r2, [r2]
    52f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    52f8:	ldr	r3, [r3, #356]	; 0x164
    52fc:	ldr	r3, [r3]
    5300:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5304:	ldr	ip, [ip, #340]	; 0x154
    5308:	ldr	lr, [fp, #-60]	; 0xffffffc4
    530c:	cmp	lr, #36	; 0x24
    5310:	movw	lr, #0
    5314:	moveq	lr, #1
    5318:	and	lr, lr, #1
    531c:	str	r0, [sp, #144]	; 0x90
    5320:	mov	r0, r1
    5324:	mov	r1, r2
    5328:	mov	r2, r3
    532c:	mov	r3, ip
    5330:	movw	ip, #0
    5334:	str	ip, [sp]
    5338:	str	lr, [sp, #4]
    533c:	ldr	ip, [sp, #144]	; 0x90
    5340:	blx	ip
    5344:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5348:	add	r0, r0, #432	; 0x1b0
    534c:	bl	69c <poolClear>
    5350:	movw	r0, #0
    5354:	strb	r0, [fp, #-61]	; 0xffffffc3
    5358:	b	535c <doProlog+0x1080>
    535c:	b	70b4 <doProlog+0x2dd8>
    5360:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5364:	ldrsb	r0, [r0, #128]	; 0x80
    5368:	cmp	r0, #0
    536c:	beq	560c <doProlog+0x1330>
    5370:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5374:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5378:	ldr	r2, [fp, #-24]	; 0xffffffe8
    537c:	ldrb	r2, [r2, #360]	; 0x168
    5380:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5384:	ldr	ip, [fp, #-28]	; 0xffffffe4
    5388:	ldr	ip, [ip, #68]	; 0x44
    538c:	add	r3, r3, ip
    5390:	ldr	ip, [fp, #12]
    5394:	ldr	lr, [fp, #-28]	; 0xffffffe4
    5398:	ldr	lr, [lr, #68]	; 0x44
    539c:	movw	r4, #0
    53a0:	sub	lr, r4, lr
    53a4:	add	ip, ip, lr
    53a8:	ldr	lr, [fp, #-44]	; 0xffffffd4
    53ac:	add	lr, lr, #80	; 0x50
    53b0:	and	r2, r2, #255	; 0xff
    53b4:	str	ip, [sp]
    53b8:	str	lr, [sp, #4]
    53bc:	bl	8b84 <storeAttributeValue>
    53c0:	str	r0, [fp, #-108]	; 0xffffff94
    53c4:	ldr	r0, [fp, #-108]	; 0xffffff94
    53c8:	cmp	r0, #0
    53cc:	beq	53dc <doProlog+0x1100>
    53d0:	ldr	r0, [fp, #-108]	; 0xffffff94
    53d4:	str	r0, [fp, #-20]	; 0xffffffec
    53d8:	b	7174 <doProlog+0x2e98>
    53dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    53e0:	ldr	r0, [r0, #96]	; 0x60
    53e4:	str	r0, [fp, #-104]	; 0xffffff98
    53e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    53ec:	ldr	r0, [r0, #92]	; 0x5c
    53f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    53f4:	str	r0, [r1, #96]	; 0x60
    53f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    53fc:	ldr	r0, [r0, #352]	; 0x160
    5400:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5404:	ldr	r1, [r1, #356]	; 0x164
    5408:	ldr	r2, [fp, #-24]	; 0xffffffe8
    540c:	ldrb	r2, [r2, #360]	; 0x168
    5410:	ldr	r3, [fp, #-104]	; 0xffffff98
    5414:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5418:	and	r2, r2, #255	; 0xff
    541c:	movw	lr, #0
    5420:	and	lr, lr, #255	; 0xff
    5424:	str	r3, [sp, #140]	; 0x8c
    5428:	mov	r3, lr
    542c:	ldr	lr, [sp, #140]	; 0x8c
    5430:	str	lr, [sp]
    5434:	str	ip, [sp, #4]
    5438:	bl	84f4 <defineAttribute>
    543c:	cmp	r0, #0
    5440:	bne	5450 <doProlog+0x1174>
    5444:	movw	r0, #1
    5448:	str	r0, [fp, #-20]	; 0xffffffec
    544c:	b	7174 <doProlog+0x2e98>
    5450:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5454:	ldr	r0, [r0, #140]	; 0x8c
    5458:	movw	r1, #0
    545c:	cmp	r0, r1
    5460:	beq	5608 <doProlog+0x132c>
    5464:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5468:	ldr	r0, [r0, #340]	; 0x154
    546c:	movw	r1, #0
    5470:	cmp	r0, r1
    5474:	beq	5608 <doProlog+0x132c>
    5478:	ldr	r0, [fp, #-24]	; 0xffffffe8
    547c:	ldr	r0, [r0, #340]	; 0x154
    5480:	ldrb	r0, [r0]
    5484:	cmp	r0, #40	; 0x28
    5488:	beq	54b4 <doProlog+0x11d8>
    548c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5490:	ldr	r0, [r0, #340]	; 0x154
    5494:	ldrb	r0, [r0]
    5498:	cmp	r0, #78	; 0x4e
    549c:	bne	557c <doProlog+0x12a0>
    54a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54a4:	ldr	r0, [r0, #340]	; 0x154
    54a8:	ldrb	r0, [r0, #1]
    54ac:	cmp	r0, #79	; 0x4f
    54b0:	bne	557c <doProlog+0x12a0>
    54b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54b8:	ldr	r0, [r0, #444]	; 0x1bc
    54bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    54c0:	ldr	r1, [r1, #440]	; 0x1b8
    54c4:	cmp	r0, r1
    54c8:	bne	54e8 <doProlog+0x120c>
    54cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54d0:	add	r0, r0, #432	; 0x1b0
    54d4:	bl	8764 <poolGrow>
    54d8:	sxtb	r0, r0
    54dc:	cmp	r0, #0
    54e0:	bne	54e8 <doProlog+0x120c>
    54e4:	b	5550 <doProlog+0x1274>
    54e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54ec:	ldr	r1, [r0, #444]	; 0x1bc
    54f0:	add	r2, r1, #1
    54f4:	str	r2, [r0, #444]	; 0x1bc
    54f8:	movw	r0, #41	; 0x29
    54fc:	strb	r0, [r1]
    5500:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5504:	ldr	r0, [r0, #444]	; 0x1bc
    5508:	ldr	r1, [fp, #-24]	; 0xffffffe8
    550c:	ldr	r1, [r1, #440]	; 0x1b8
    5510:	cmp	r0, r1
    5514:	bne	5534 <doProlog+0x1258>
    5518:	ldr	r0, [fp, #-24]	; 0xffffffe8
    551c:	add	r0, r0, #432	; 0x1b0
    5520:	bl	8764 <poolGrow>
    5524:	sxtb	r0, r0
    5528:	cmp	r0, #0
    552c:	bne	5534 <doProlog+0x1258>
    5530:	b	5550 <doProlog+0x1274>
    5534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5538:	ldr	r1, [r0, #444]	; 0x1bc
    553c:	add	r2, r1, #1
    5540:	str	r2, [r0, #444]	; 0x1bc
    5544:	movw	r0, #0
    5548:	strb	r0, [r1]
    554c:	b	555c <doProlog+0x1280>
    5550:	movw	r0, #1
    5554:	str	r0, [fp, #-20]	; 0xffffffec
    5558:	b	7174 <doProlog+0x2e98>
    555c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5560:	ldr	r0, [r0, #448]	; 0x1c0
    5564:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5568:	str	r0, [r1, #340]	; 0x154
    556c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5570:	ldr	r0, [r0, #444]	; 0x1bc
    5574:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5578:	str	r0, [r1, #448]	; 0x1c0
    557c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5580:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5584:	str	r0, [r1]
    5588:	ldr	r0, [fp, #-24]	; 0xffffffe8
    558c:	ldr	r0, [r0, #140]	; 0x8c
    5590:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5594:	ldr	r1, [r1, #4]
    5598:	ldr	r2, [fp, #-24]	; 0xffffffe8
    559c:	ldr	r2, [r2, #352]	; 0x160
    55a0:	ldr	r2, [r2]
    55a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    55a8:	ldr	r3, [r3, #356]	; 0x164
    55ac:	ldr	r3, [r3]
    55b0:	ldr	ip, [fp, #-24]	; 0xffffffe8
    55b4:	ldr	ip, [ip, #340]	; 0x154
    55b8:	ldr	lr, [fp, #-104]	; 0xffffff98
    55bc:	ldr	r4, [fp, #-60]	; 0xffffffc4
    55c0:	cmp	r4, #38	; 0x26
    55c4:	movw	r4, #0
    55c8:	moveq	r4, #1
    55cc:	and	r4, r4, #1
    55d0:	str	r0, [sp, #136]	; 0x88
    55d4:	mov	r0, r1
    55d8:	mov	r1, r2
    55dc:	mov	r2, r3
    55e0:	mov	r3, ip
    55e4:	str	lr, [sp]
    55e8:	str	r4, [sp, #4]
    55ec:	ldr	ip, [sp, #136]	; 0x88
    55f0:	blx	ip
    55f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    55f8:	add	r0, r0, #432	; 0x1b0
    55fc:	bl	69c <poolClear>
    5600:	movw	r0, #0
    5604:	strb	r0, [fp, #-61]	; 0xffffffc3
    5608:	b	560c <doProlog+0x1330>
    560c:	b	70b4 <doProlog+0x2dd8>
    5610:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5614:	ldrsb	r0, [r0, #128]	; 0x80
    5618:	cmp	r0, #0
    561c:	beq	5784 <doProlog+0x14a8>
    5620:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5624:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5628:	ldr	r2, [fp, #-32]	; 0xffffffe0
    562c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5630:	ldr	r3, [r3, #68]	; 0x44
    5634:	add	r2, r2, r3
    5638:	ldr	r3, [fp, #12]
    563c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    5640:	ldr	ip, [ip, #68]	; 0x44
    5644:	movw	lr, #0
    5648:	sub	ip, lr, ip
    564c:	add	r3, r3, ip
    5650:	bl	8cb8 <storeEntityValue>
    5654:	str	r0, [fp, #-112]	; 0xffffff90
    5658:	ldr	r0, [fp, #-24]	; 0xffffffe8
    565c:	ldr	r0, [r0, #324]	; 0x144
    5660:	movw	r1, #0
    5664:	cmp	r0, r1
    5668:	beq	5758 <doProlog+0x147c>
    566c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5670:	ldr	r0, [r0, #120]	; 0x78
    5674:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5678:	ldr	r1, [r1, #324]	; 0x144
    567c:	str	r0, [r1, #4]
    5680:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5684:	ldr	r0, [r0, #116]	; 0x74
    5688:	ldr	r1, [fp, #-44]	; 0xffffffd4
    568c:	ldr	r1, [r1, #120]	; 0x78
    5690:	sub	r0, r0, r1
    5694:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5698:	ldr	r1, [r1, #324]	; 0x144
    569c:	str	r0, [r1, #8]
    56a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    56a4:	ldr	r0, [r0, #116]	; 0x74
    56a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    56ac:	str	r0, [r1, #120]	; 0x78
    56b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56b4:	ldr	r0, [r0, #144]	; 0x90
    56b8:	movw	r1, #0
    56bc:	cmp	r0, r1
    56c0:	beq	5754 <doProlog+0x1478>
    56c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    56c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    56cc:	str	r0, [r1]
    56d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56d4:	ldr	r0, [r0, #144]	; 0x90
    56d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    56dc:	ldr	r1, [r1, #4]
    56e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    56e4:	ldr	r2, [r2, #324]	; 0x144
    56e8:	ldr	r2, [r2]
    56ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    56f0:	ldr	r3, [r3, #324]	; 0x144
    56f4:	ldrb	r3, [r3, #33]	; 0x21
    56f8:	ldr	ip, [fp, #-24]	; 0xffffffe8
    56fc:	ldr	ip, [ip, #324]	; 0x144
    5700:	ldr	ip, [ip, #4]
    5704:	ldr	lr, [fp, #-24]	; 0xffffffe8
    5708:	ldr	lr, [lr, #324]	; 0x144
    570c:	ldr	lr, [lr, #8]
    5710:	ldr	r4, [fp, #-24]	; 0xffffffe8
    5714:	ldr	r4, [r4, #368]	; 0x170
    5718:	str	r0, [sp, #132]	; 0x84
    571c:	mov	r0, r1
    5720:	mov	r1, r2
    5724:	mov	r2, r3
    5728:	mov	r3, ip
    572c:	str	lr, [sp]
    5730:	str	r4, [sp, #4]
    5734:	movw	ip, #0
    5738:	str	ip, [sp, #8]
    573c:	str	ip, [sp, #12]
    5740:	str	ip, [sp, #16]
    5744:	ldr	ip, [sp, #132]	; 0x84
    5748:	blx	ip
    574c:	movw	r0, #0
    5750:	strb	r0, [fp, #-61]	; 0xffffffc3
    5754:	b	5768 <doProlog+0x148c>
    5758:	ldr	r0, [fp, #-44]	; 0xffffffd4
    575c:	ldr	r0, [r0, #120]	; 0x78
    5760:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5764:	str	r0, [r1, #116]	; 0x74
    5768:	ldr	r0, [fp, #-112]	; 0xffffff90
    576c:	cmp	r0, #0
    5770:	beq	5780 <doProlog+0x14a4>
    5774:	ldr	r0, [fp, #-112]	; 0xffffff90
    5778:	str	r0, [fp, #-20]	; 0xffffffec
    577c:	b	7174 <doProlog+0x2e98>
    5780:	b	5784 <doProlog+0x14a8>
    5784:	b	70b4 <doProlog+0x2dd8>
    5788:	ldr	r0, [fp, #-24]	; 0xffffffe8
    578c:	movw	r1, #0
    5790:	strb	r1, [r0, #505]	; 0x1f9
    5794:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5798:	movw	r1, #1
    579c:	strb	r1, [r0, #129]	; 0x81
    57a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57a4:	ldr	r0, [r0, #92]	; 0x5c
    57a8:	movw	r1, #0
    57ac:	cmp	r0, r1
    57b0:	beq	5830 <doProlog+0x1554>
    57b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57b8:	add	r0, r0, #432	; 0x1b0
    57bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    57c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    57c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    57c8:	ldr	r3, [r3, #68]	; 0x44
    57cc:	add	r2, r2, r3
    57d0:	ldr	r3, [fp, #12]
    57d4:	ldr	ip, [fp, #-28]	; 0xffffffe4
    57d8:	ldr	ip, [ip, #68]	; 0x44
    57dc:	movw	lr, #0
    57e0:	sub	ip, lr, ip
    57e4:	add	r3, r3, ip
    57e8:	bl	75e4 <poolStoreString>
    57ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    57f0:	str	r0, [r1, #332]	; 0x14c
    57f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57f8:	ldr	r0, [r0, #332]	; 0x14c
    57fc:	movw	r1, #0
    5800:	cmp	r0, r1
    5804:	bne	5814 <doProlog+0x1538>
    5808:	movw	r0, #1
    580c:	str	r0, [fp, #-20]	; 0xffffffec
    5810:	b	7174 <doProlog+0x2e98>
    5814:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5818:	ldr	r0, [r0, #444]	; 0x1bc
    581c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5820:	str	r0, [r1, #448]	; 0x1c0
    5824:	movw	r0, #0
    5828:	strb	r0, [fp, #-61]	; 0xffffffc3
    582c:	b	5840 <doProlog+0x1564>
    5830:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5834:	movw	r1, #0
    5838:	movt	r1, #0
    583c:	str	r1, [r0, #332]	; 0x14c
    5840:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5844:	ldrsb	r0, [r0, #130]	; 0x82
    5848:	cmp	r0, #0
    584c:	bne	58a8 <doProlog+0x15cc>
    5850:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5854:	ldr	r0, [r0, #508]	; 0x1fc
    5858:	cmp	r0, #0
    585c:	bne	58a8 <doProlog+0x15cc>
    5860:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5864:	ldr	r0, [r0, #116]	; 0x74
    5868:	movw	r1, #0
    586c:	cmp	r0, r1
    5870:	beq	58a8 <doProlog+0x15cc>
    5874:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5878:	ldr	r0, [r0, #116]	; 0x74
    587c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5880:	ldr	r1, [r1, #4]
    5884:	str	r0, [sp, #128]	; 0x80
    5888:	mov	r0, r1
    588c:	ldr	r1, [sp, #128]	; 0x80
    5890:	blx	r1
    5894:	cmp	r0, #0
    5898:	bne	58a8 <doProlog+0x15cc>
    589c:	movw	r0, #22
    58a0:	str	r0, [fp, #-20]	; 0xffffffec
    58a4:	b	7174 <doProlog+0x2e98>
    58a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58ac:	ldr	r0, [r0, #324]	; 0x144
    58b0:	movw	r1, #0
    58b4:	cmp	r0, r1
    58b8:	bne	5910 <doProlog+0x1634>
    58bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    58c4:	add	r1, r1, #132	; 0x84
    58c8:	movw	r2, #0
    58cc:	movt	r2, #0
    58d0:	movw	r3, #36	; 0x24
    58d4:	bl	7694 <lookup>
    58d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    58dc:	str	r0, [r1, #324]	; 0x144
    58e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58e4:	ldr	r0, [r0, #324]	; 0x144
    58e8:	movw	r1, #0
    58ec:	cmp	r0, r1
    58f0:	bne	5900 <doProlog+0x1624>
    58f4:	movw	r0, #1
    58f8:	str	r0, [fp, #-20]	; 0xffffffec
    58fc:	b	7174 <doProlog+0x2e98>
    5900:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5904:	ldr	r0, [r0, #324]	; 0x144
    5908:	movw	r1, #0
    590c:	str	r1, [r0, #24]
    5910:	b	5914 <doProlog+0x1638>
    5914:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5918:	ldrb	r0, [r0, #128]	; 0x80
    591c:	cmp	r0, #0
    5920:	beq	59e4 <doProlog+0x1708>
    5924:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5928:	ldr	r0, [r0, #324]	; 0x144
    592c:	movw	r1, #0
    5930:	cmp	r0, r1
    5934:	beq	59e4 <doProlog+0x1708>
    5938:	ldr	r0, [fp, #-44]	; 0xffffffd4
    593c:	add	r0, r0, #80	; 0x50
    5940:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5944:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5948:	ldr	r3, [fp, #-28]	; 0xffffffe4
    594c:	ldr	r3, [r3, #68]	; 0x44
    5950:	add	r2, r2, r3
    5954:	ldr	r3, [fp, #12]
    5958:	ldr	ip, [fp, #-28]	; 0xffffffe4
    595c:	ldr	ip, [ip, #68]	; 0x44
    5960:	movw	lr, #0
    5964:	sub	ip, lr, ip
    5968:	add	r3, r3, ip
    596c:	bl	75e4 <poolStoreString>
    5970:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5974:	ldr	r1, [r1, #324]	; 0x144
    5978:	str	r0, [r1, #16]
    597c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5980:	ldr	r0, [r0, #324]	; 0x144
    5984:	ldr	r0, [r0, #16]
    5988:	movw	r1, #0
    598c:	cmp	r0, r1
    5990:	bne	59a0 <doProlog+0x16c4>
    5994:	movw	r0, #1
    5998:	str	r0, [fp, #-20]	; 0xffffffec
    599c:	b	7174 <doProlog+0x2e98>
    59a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59a4:	ldr	r0, [r0, #368]	; 0x170
    59a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    59ac:	ldr	r1, [r1, #324]	; 0x144
    59b0:	str	r0, [r1, #20]
    59b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    59b8:	ldr	r0, [r0, #92]	; 0x5c
    59bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    59c0:	str	r0, [r1, #96]	; 0x60
    59c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59c8:	ldr	r0, [r0, #144]	; 0x90
    59cc:	movw	r1, #0
    59d0:	cmp	r0, r1
    59d4:	beq	59e0 <doProlog+0x1704>
    59d8:	movw	r0, #0
    59dc:	strb	r0, [fp, #-61]	; 0xffffffc3
    59e0:	b	59e4 <doProlog+0x1708>
    59e4:	b	70b4 <doProlog+0x2dd8>
    59e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    59ec:	ldrb	r0, [r0, #128]	; 0x80
    59f0:	cmp	r0, #0
    59f4:	beq	5ab8 <doProlog+0x17dc>
    59f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59fc:	ldr	r0, [r0, #324]	; 0x144
    5a00:	movw	r1, #0
    5a04:	cmp	r0, r1
    5a08:	beq	5ab8 <doProlog+0x17dc>
    5a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a10:	ldr	r0, [r0, #144]	; 0x90
    5a14:	movw	r1, #0
    5a18:	cmp	r0, r1
    5a1c:	beq	5ab8 <doProlog+0x17dc>
    5a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5a24:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5a28:	str	r0, [r1]
    5a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a30:	ldr	r0, [r0, #144]	; 0x90
    5a34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5a38:	ldr	r1, [r1, #4]
    5a3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5a40:	ldr	r2, [r2, #324]	; 0x144
    5a44:	ldr	r2, [r2]
    5a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5a4c:	ldr	r3, [r3, #324]	; 0x144
    5a50:	ldrb	r3, [r3, #33]	; 0x21
    5a54:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5a58:	ldr	ip, [ip, #324]	; 0x144
    5a5c:	ldr	ip, [ip, #20]
    5a60:	ldr	lr, [fp, #-24]	; 0xffffffe8
    5a64:	ldr	lr, [lr, #324]	; 0x144
    5a68:	ldr	lr, [lr, #16]
    5a6c:	ldr	r4, [fp, #-24]	; 0xffffffe8
    5a70:	ldr	r4, [r4, #324]	; 0x144
    5a74:	ldr	r4, [r4, #24]
    5a78:	str	r0, [sp, #124]	; 0x7c
    5a7c:	mov	r0, r1
    5a80:	mov	r1, r2
    5a84:	mov	r2, r3
    5a88:	movw	r3, #0
    5a8c:	str	r3, [sp, #120]	; 0x78
    5a90:	ldr	r5, [sp, #120]	; 0x78
    5a94:	str	r5, [sp]
    5a98:	str	ip, [sp, #4]
    5a9c:	str	lr, [sp, #8]
    5aa0:	str	r4, [sp, #12]
    5aa4:	str	r5, [sp, #16]
    5aa8:	ldr	ip, [sp, #124]	; 0x7c
    5aac:	blx	ip
    5ab0:	movw	r0, #0
    5ab4:	strb	r0, [fp, #-61]	; 0xffffffc3
    5ab8:	b	70b4 <doProlog+0x2dd8>
    5abc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5ac0:	ldrb	r0, [r0, #128]	; 0x80
    5ac4:	cmp	r0, #0
    5ac8:	beq	5c90 <doProlog+0x19b4>
    5acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ad0:	ldr	r0, [r0, #324]	; 0x144
    5ad4:	movw	r1, #0
    5ad8:	cmp	r0, r1
    5adc:	beq	5c90 <doProlog+0x19b4>
    5ae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5ae4:	add	r0, r0, #80	; 0x50
    5ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5aec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5af0:	ldr	r3, [fp, #12]
    5af4:	bl	75e4 <poolStoreString>
    5af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5afc:	ldr	r1, [r1, #324]	; 0x144
    5b00:	str	r0, [r1, #28]
    5b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b08:	ldr	r0, [r0, #324]	; 0x144
    5b0c:	ldr	r0, [r0, #28]
    5b10:	movw	r1, #0
    5b14:	cmp	r0, r1
    5b18:	bne	5b28 <doProlog+0x184c>
    5b1c:	movw	r0, #1
    5b20:	str	r0, [fp, #-20]	; 0xffffffec
    5b24:	b	7174 <doProlog+0x2e98>
    5b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5b2c:	ldr	r0, [r0, #92]	; 0x5c
    5b30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5b34:	str	r0, [r1, #96]	; 0x60
    5b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b3c:	ldr	r0, [r0, #100]	; 0x64
    5b40:	movw	r1, #0
    5b44:	cmp	r0, r1
    5b48:	beq	5bd4 <doProlog+0x18f8>
    5b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b50:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5b54:	str	r0, [r1]
    5b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b5c:	ldr	r0, [r0, #100]	; 0x64
    5b60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5b64:	ldr	r1, [r1, #4]
    5b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5b6c:	ldr	r2, [r2, #324]	; 0x144
    5b70:	ldr	r2, [r2]
    5b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b78:	ldr	r3, [r3, #324]	; 0x144
    5b7c:	ldr	r3, [r3, #20]
    5b80:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5b84:	ldr	ip, [ip, #324]	; 0x144
    5b88:	ldr	ip, [ip, #16]
    5b8c:	ldr	lr, [fp, #-24]	; 0xffffffe8
    5b90:	ldr	lr, [lr, #324]	; 0x144
    5b94:	ldr	lr, [lr, #24]
    5b98:	ldr	r4, [fp, #-24]	; 0xffffffe8
    5b9c:	ldr	r4, [r4, #324]	; 0x144
    5ba0:	ldr	r4, [r4, #28]
    5ba4:	str	r0, [sp, #116]	; 0x74
    5ba8:	mov	r0, r1
    5bac:	mov	r1, r2
    5bb0:	mov	r2, r3
    5bb4:	mov	r3, ip
    5bb8:	str	lr, [sp]
    5bbc:	str	r4, [sp, #4]
    5bc0:	ldr	ip, [sp, #116]	; 0x74
    5bc4:	blx	ip
    5bc8:	movw	r0, #0
    5bcc:	strb	r0, [fp, #-61]	; 0xffffffc3
    5bd0:	b	5c8c <doProlog+0x19b0>
    5bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5bd8:	ldr	r0, [r0, #144]	; 0x90
    5bdc:	movw	r1, #0
    5be0:	cmp	r0, r1
    5be4:	beq	5c88 <doProlog+0x19ac>
    5be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5bec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5bf0:	str	r0, [r1]
    5bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5bf8:	ldr	r0, [r0, #144]	; 0x90
    5bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5c00:	ldr	r1, [r1, #4]
    5c04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5c08:	ldr	r2, [r2, #324]	; 0x144
    5c0c:	ldr	r2, [r2]
    5c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c14:	ldr	r3, [r3, #324]	; 0x144
    5c18:	ldr	r3, [r3, #20]
    5c1c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    5c20:	ldr	ip, [ip, #324]	; 0x144
    5c24:	ldr	ip, [ip, #16]
    5c28:	ldr	lr, [fp, #-24]	; 0xffffffe8
    5c2c:	ldr	lr, [lr, #324]	; 0x144
    5c30:	ldr	lr, [lr, #24]
    5c34:	ldr	r4, [fp, #-24]	; 0xffffffe8
    5c38:	ldr	r4, [r4, #324]	; 0x144
    5c3c:	ldr	r4, [r4, #28]
    5c40:	str	r0, [sp, #112]	; 0x70
    5c44:	mov	r0, r1
    5c48:	mov	r1, r2
    5c4c:	movw	r2, #0
    5c50:	str	r2, [sp, #108]	; 0x6c
    5c54:	ldr	r5, [sp, #108]	; 0x6c
    5c58:	str	r3, [sp, #104]	; 0x68
    5c5c:	mov	r3, r5
    5c60:	str	r5, [sp]
    5c64:	ldr	r6, [sp, #104]	; 0x68
    5c68:	str	r6, [sp, #4]
    5c6c:	str	ip, [sp, #8]
    5c70:	str	lr, [sp, #12]
    5c74:	str	r4, [sp, #16]
    5c78:	ldr	ip, [sp, #112]	; 0x70
    5c7c:	blx	ip
    5c80:	movw	r0, #0
    5c84:	strb	r0, [fp, #-61]	; 0xffffffc3
    5c88:	b	5c8c <doProlog+0x19b0>
    5c8c:	b	5c90 <doProlog+0x19b4>
    5c90:	b	70b4 <doProlog+0x2dd8>
    5c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5c98:	ldr	r0, [r0, #48]	; 0x30
    5c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5ca0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5ca4:	ldr	r3, [fp, #12]
    5ca8:	str	r0, [sp, #100]	; 0x64
    5cac:	mov	r0, r1
    5cb0:	mov	r1, r2
    5cb4:	mov	r2, r3
    5cb8:	ldr	r3, [sp, #100]	; 0x64
    5cbc:	blx	r3
    5cc0:	cmp	r0, #0
    5cc4:	beq	5cd8 <doProlog+0x19fc>
    5cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ccc:	movw	r1, #0
    5cd0:	str	r1, [r0, #324]	; 0x144
    5cd4:	b	70b4 <doProlog+0x2dd8>
    5cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5cdc:	ldrsb	r0, [r0, #128]	; 0x80
    5ce0:	cmp	r0, #0
    5ce4:	beq	5e38 <doProlog+0x1b5c>
    5ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5cec:	add	r0, r0, #80	; 0x50
    5cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5cf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5cf8:	ldr	r3, [fp, #12]
    5cfc:	bl	75e4 <poolStoreString>
    5d00:	str	r0, [fp, #-116]	; 0xffffff8c
    5d04:	ldr	r0, [fp, #-116]	; 0xffffff8c
    5d08:	movw	r1, #0
    5d0c:	cmp	r0, r1
    5d10:	bne	5d20 <doProlog+0x1a44>
    5d14:	movw	r0, #1
    5d18:	str	r0, [fp, #-20]	; 0xffffffec
    5d1c:	b	7174 <doProlog+0x2e98>
    5d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d24:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5d28:	ldr	r2, [fp, #-116]	; 0xffffff8c
    5d2c:	movw	r3, #36	; 0x24
    5d30:	bl	7694 <lookup>
    5d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5d38:	str	r0, [r1, #324]	; 0x144
    5d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d40:	ldr	r0, [r0, #324]	; 0x144
    5d44:	movw	r1, #0
    5d48:	cmp	r0, r1
    5d4c:	bne	5d5c <doProlog+0x1a80>
    5d50:	movw	r0, #1
    5d54:	str	r0, [fp, #-20]	; 0xffffffec
    5d58:	b	7174 <doProlog+0x2e98>
    5d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d60:	ldr	r0, [r0, #324]	; 0x144
    5d64:	ldr	r0, [r0]
    5d68:	ldr	r1, [fp, #-116]	; 0xffffff8c
    5d6c:	cmp	r0, r1
    5d70:	beq	5d94 <doProlog+0x1ab8>
    5d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5d78:	ldr	r0, [r0, #96]	; 0x60
    5d7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5d80:	str	r0, [r1, #92]	; 0x5c
    5d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d88:	movw	r1, #0
    5d8c:	str	r1, [r0, #324]	; 0x144
    5d90:	b	5e34 <doProlog+0x1b58>
    5d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5d98:	ldr	r0, [r0, #92]	; 0x5c
    5d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5da0:	str	r0, [r1, #96]	; 0x60
    5da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5da8:	ldr	r0, [r0, #324]	; 0x144
    5dac:	movw	r1, #0
    5db0:	str	r1, [r0, #24]
    5db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5db8:	ldr	r0, [r0, #324]	; 0x144
    5dbc:	movw	r2, #0
    5dc0:	strb	r2, [r0, #33]	; 0x21
    5dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5dc8:	ldr	r0, [r0, #492]	; 0x1ec
    5dcc:	cmp	r0, r1
    5dd0:	movw	r0, #1
    5dd4:	str	r0, [sp, #96]	; 0x60
    5dd8:	bne	5df8 <doProlog+0x1b1c>
    5ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5de0:	ldr	r0, [r0, #308]	; 0x134
    5de4:	movw	r1, #0
    5de8:	cmp	r0, r1
    5dec:	movw	r0, #0
    5df0:	movne	r0, #1
    5df4:	str	r0, [sp, #96]	; 0x60
    5df8:	ldr	r0, [sp, #96]	; 0x60
    5dfc:	mvn	r1, #0
    5e00:	eor	r0, r0, r1
    5e04:	and	r0, r0, #1
    5e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5e0c:	ldr	r1, [r1, #324]	; 0x144
    5e10:	strb	r0, [r1, #34]	; 0x22
    5e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e18:	ldr	r0, [r0, #144]	; 0x90
    5e1c:	movw	r1, #0
    5e20:	cmp	r0, r1
    5e24:	beq	5e30 <doProlog+0x1b54>
    5e28:	movw	r0, #0
    5e2c:	strb	r0, [fp, #-61]	; 0xffffffc3
    5e30:	b	5e34 <doProlog+0x1b58>
    5e34:	b	5e54 <doProlog+0x1b78>
    5e38:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5e3c:	ldr	r0, [r0, #96]	; 0x60
    5e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5e44:	str	r0, [r1, #92]	; 0x5c
    5e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e4c:	movw	r1, #0
    5e50:	str	r1, [r0, #324]	; 0x144
    5e54:	b	70b4 <doProlog+0x2dd8>
    5e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5e5c:	ldrsb	r0, [r0, #128]	; 0x80
    5e60:	cmp	r0, #0
    5e64:	beq	5fbc <doProlog+0x1ce0>
    5e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5e6c:	add	r0, r0, #80	; 0x50
    5e70:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5e74:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5e78:	ldr	r3, [fp, #12]
    5e7c:	bl	75e4 <poolStoreString>
    5e80:	str	r0, [fp, #-120]	; 0xffffff88
    5e84:	ldr	r0, [fp, #-120]	; 0xffffff88
    5e88:	movw	r1, #0
    5e8c:	cmp	r0, r1
    5e90:	bne	5ea0 <doProlog+0x1bc4>
    5e94:	movw	r0, #1
    5e98:	str	r0, [fp, #-20]	; 0xffffffec
    5e9c:	b	7174 <doProlog+0x2e98>
    5ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ea4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5ea8:	add	r1, r1, #132	; 0x84
    5eac:	ldr	r2, [fp, #-120]	; 0xffffff88
    5eb0:	movw	r3, #36	; 0x24
    5eb4:	bl	7694 <lookup>
    5eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ebc:	str	r0, [r1, #324]	; 0x144
    5ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ec4:	ldr	r0, [r0, #324]	; 0x144
    5ec8:	movw	r1, #0
    5ecc:	cmp	r0, r1
    5ed0:	bne	5ee0 <doProlog+0x1c04>
    5ed4:	movw	r0, #1
    5ed8:	str	r0, [fp, #-20]	; 0xffffffec
    5edc:	b	7174 <doProlog+0x2e98>
    5ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ee4:	ldr	r0, [r0, #324]	; 0x144
    5ee8:	ldr	r0, [r0]
    5eec:	ldr	r1, [fp, #-120]	; 0xffffff88
    5ef0:	cmp	r0, r1
    5ef4:	beq	5f18 <doProlog+0x1c3c>
    5ef8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5efc:	ldr	r0, [r0, #96]	; 0x60
    5f00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5f04:	str	r0, [r1, #92]	; 0x5c
    5f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f0c:	movw	r1, #0
    5f10:	str	r1, [r0, #324]	; 0x144
    5f14:	b	5fb8 <doProlog+0x1cdc>
    5f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5f1c:	ldr	r0, [r0, #92]	; 0x5c
    5f20:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5f24:	str	r0, [r1, #96]	; 0x60
    5f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f2c:	ldr	r0, [r0, #324]	; 0x144
    5f30:	movw	r1, #0
    5f34:	str	r1, [r0, #24]
    5f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f3c:	ldr	r0, [r0, #324]	; 0x144
    5f40:	movw	r2, #1
    5f44:	strb	r2, [r0, #33]	; 0x21
    5f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f4c:	ldr	r0, [r0, #492]	; 0x1ec
    5f50:	cmp	r0, r1
    5f54:	movw	r0, #1
    5f58:	str	r0, [sp, #92]	; 0x5c
    5f5c:	bne	5f7c <doProlog+0x1ca0>
    5f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f64:	ldr	r0, [r0, #308]	; 0x134
    5f68:	movw	r1, #0
    5f6c:	cmp	r0, r1
    5f70:	movw	r0, #0
    5f74:	movne	r0, #1
    5f78:	str	r0, [sp, #92]	; 0x5c
    5f7c:	ldr	r0, [sp, #92]	; 0x5c
    5f80:	mvn	r1, #0
    5f84:	eor	r0, r0, r1
    5f88:	and	r0, r0, #1
    5f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5f90:	ldr	r1, [r1, #324]	; 0x144
    5f94:	strb	r0, [r1, #34]	; 0x22
    5f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f9c:	ldr	r0, [r0, #144]	; 0x90
    5fa0:	movw	r1, #0
    5fa4:	cmp	r0, r1
    5fa8:	beq	5fb4 <doProlog+0x1cd8>
    5fac:	movw	r0, #0
    5fb0:	strb	r0, [fp, #-61]	; 0xffffffc3
    5fb4:	b	5fb8 <doProlog+0x1cdc>
    5fb8:	b	5fd8 <doProlog+0x1cfc>
    5fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5fc0:	ldr	r0, [r0, #96]	; 0x60
    5fc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5fc8:	str	r0, [r1, #92]	; 0x5c
    5fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fd0:	movw	r1, #0
    5fd4:	str	r1, [r0, #324]	; 0x144
    5fd8:	b	70b4 <doProlog+0x2dd8>
    5fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fe0:	movw	r1, #0
    5fe4:	str	r1, [r0, #348]	; 0x15c
    5fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fec:	str	r1, [r0, #344]	; 0x158
    5ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ff4:	ldr	r0, [r0, #104]	; 0x68
    5ff8:	cmp	r0, r1
    5ffc:	beq	6058 <doProlog+0x1d7c>
    6000:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6004:	add	r0, r0, #432	; 0x1b0
    6008:	ldr	r1, [fp, #-28]	; 0xffffffe4
    600c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6010:	ldr	r3, [fp, #12]
    6014:	bl	75e4 <poolStoreString>
    6018:	ldr	r1, [fp, #-24]	; 0xffffffe8
    601c:	str	r0, [r1, #344]	; 0x158
    6020:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6024:	ldr	r0, [r0, #344]	; 0x158
    6028:	movw	r1, #0
    602c:	cmp	r0, r1
    6030:	bne	6040 <doProlog+0x1d64>
    6034:	movw	r0, #1
    6038:	str	r0, [fp, #-20]	; 0xffffffec
    603c:	b	7174 <doProlog+0x2e98>
    6040:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6044:	ldr	r0, [r0, #444]	; 0x1bc
    6048:	ldr	r1, [fp, #-24]	; 0xffffffe8
    604c:	str	r0, [r1, #448]	; 0x1c0
    6050:	movw	r0, #0
    6054:	strb	r0, [fp, #-61]	; 0xffffffc3
    6058:	b	70b4 <doProlog+0x2dd8>
    605c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6060:	ldr	r0, [r0, #56]	; 0x38
    6064:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6068:	ldr	r2, [fp, #-32]	; 0xffffffe0
    606c:	ldr	r3, [fp, #12]
    6070:	ldr	ip, [fp, #-48]	; 0xffffffd0
    6074:	str	r0, [sp, #88]	; 0x58
    6078:	mov	r0, r1
    607c:	mov	r1, r2
    6080:	mov	r2, r3
    6084:	mov	r3, ip
    6088:	ldr	ip, [sp, #88]	; 0x58
    608c:	blx	ip
    6090:	cmp	r0, #0
    6094:	bne	60a4 <doProlog+0x1dc8>
    6098:	movw	r0, #32
    609c:	str	r0, [fp, #-20]	; 0xffffffec
    60a0:	b	7174 <doProlog+0x2e98>
    60a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    60a8:	ldr	r0, [r0, #344]	; 0x158
    60ac:	movw	r1, #0
    60b0:	cmp	r0, r1
    60b4:	beq	613c <doProlog+0x1e60>
    60b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    60bc:	add	r0, r0, #432	; 0x1b0
    60c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    60c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    60c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    60cc:	ldr	r3, [r3, #68]	; 0x44
    60d0:	add	r2, r2, r3
    60d4:	ldr	r3, [fp, #12]
    60d8:	ldr	ip, [fp, #-28]	; 0xffffffe4
    60dc:	ldr	ip, [ip, #68]	; 0x44
    60e0:	movw	lr, #0
    60e4:	sub	ip, lr, ip
    60e8:	add	r3, r3, ip
    60ec:	bl	75e4 <poolStoreString>
    60f0:	str	r0, [fp, #-124]	; 0xffffff84
    60f4:	ldr	r0, [fp, #-124]	; 0xffffff84
    60f8:	movw	r1, #0
    60fc:	cmp	r0, r1
    6100:	bne	6110 <doProlog+0x1e34>
    6104:	movw	r0, #1
    6108:	str	r0, [fp, #-20]	; 0xffffffec
    610c:	b	7174 <doProlog+0x2e98>
    6110:	ldr	r0, [fp, #-124]	; 0xffffff84
    6114:	bl	7c90 <normalizePublicId>
    6118:	ldr	r0, [fp, #-124]	; 0xffffff84
    611c:	ldr	lr, [fp, #-24]	; 0xffffffe8
    6120:	str	r0, [lr, #348]	; 0x15c
    6124:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6128:	ldr	r0, [r0, #444]	; 0x1bc
    612c:	ldr	lr, [fp, #-24]	; 0xffffffe8
    6130:	str	r0, [lr, #448]	; 0x1c0
    6134:	movw	r0, #0
    6138:	strb	r0, [fp, #-61]	; 0xffffffc3
    613c:	b	70b4 <doProlog+0x2dd8>
    6140:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6144:	ldr	r0, [r0, #344]	; 0x158
    6148:	movw	r1, #0
    614c:	cmp	r0, r1
    6150:	beq	6220 <doProlog+0x1f44>
    6154:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6158:	ldr	r0, [r0, #104]	; 0x68
    615c:	movw	r1, #0
    6160:	cmp	r0, r1
    6164:	beq	6220 <doProlog+0x1f44>
    6168:	ldr	r0, [fp, #-24]	; 0xffffffe8
    616c:	add	r0, r0, #432	; 0x1b0
    6170:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6174:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6178:	ldr	r3, [fp, #-28]	; 0xffffffe4
    617c:	ldr	r3, [r3, #68]	; 0x44
    6180:	add	r2, r2, r3
    6184:	ldr	r3, [fp, #12]
    6188:	ldr	ip, [fp, #-28]	; 0xffffffe4
    618c:	ldr	ip, [ip, #68]	; 0x44
    6190:	movw	lr, #0
    6194:	sub	ip, lr, ip
    6198:	add	r3, r3, ip
    619c:	bl	75e4 <poolStoreString>
    61a0:	str	r0, [fp, #-128]	; 0xffffff80
    61a4:	ldr	r0, [fp, #-128]	; 0xffffff80
    61a8:	movw	r1, #0
    61ac:	cmp	r0, r1
    61b0:	bne	61c0 <doProlog+0x1ee4>
    61b4:	movw	r0, #1
    61b8:	str	r0, [fp, #-20]	; 0xffffffec
    61bc:	b	7174 <doProlog+0x2e98>
    61c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    61c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    61c8:	str	r0, [r1]
    61cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61d0:	ldr	r0, [r0, #104]	; 0x68
    61d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    61d8:	ldr	r1, [r1, #4]
    61dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    61e0:	ldr	r2, [r2, #344]	; 0x158
    61e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    61e8:	ldr	r3, [r3, #368]	; 0x170
    61ec:	ldr	ip, [fp, #-128]	; 0xffffff80
    61f0:	ldr	lr, [fp, #-24]	; 0xffffffe8
    61f4:	ldr	lr, [lr, #348]	; 0x15c
    61f8:	str	r0, [sp, #84]	; 0x54
    61fc:	mov	r0, r1
    6200:	mov	r1, r2
    6204:	mov	r2, r3
    6208:	mov	r3, ip
    620c:	str	lr, [sp]
    6210:	ldr	ip, [sp, #84]	; 0x54
    6214:	blx	ip
    6218:	movw	r0, #0
    621c:	strb	r0, [fp, #-61]	; 0xffffffc3
    6220:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6224:	add	r0, r0, #432	; 0x1b0
    6228:	bl	69c <poolClear>
    622c:	b	70b4 <doProlog+0x2dd8>
    6230:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6234:	ldr	r0, [r0, #348]	; 0x15c
    6238:	movw	r1, #0
    623c:	cmp	r0, r1
    6240:	beq	62b4 <doProlog+0x1fd8>
    6244:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6248:	ldr	r0, [r0, #104]	; 0x68
    624c:	movw	r1, #0
    6250:	cmp	r0, r1
    6254:	beq	62b4 <doProlog+0x1fd8>
    6258:	ldr	r0, [fp, #-32]	; 0xffffffe0
    625c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6260:	str	r0, [r1]
    6264:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6268:	ldr	r0, [r0, #104]	; 0x68
    626c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6270:	ldr	r1, [r1, #4]
    6274:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6278:	ldr	r2, [r2, #344]	; 0x158
    627c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6280:	ldr	r3, [r3, #368]	; 0x170
    6284:	ldr	ip, [fp, #-24]	; 0xffffffe8
    6288:	ldr	ip, [ip, #348]	; 0x15c
    628c:	str	r0, [sp, #80]	; 0x50
    6290:	mov	r0, r1
    6294:	mov	r1, r2
    6298:	mov	r2, r3
    629c:	movw	r3, #0
    62a0:	str	ip, [sp]
    62a4:	ldr	ip, [sp, #80]	; 0x50
    62a8:	blx	ip
    62ac:	movw	r0, #0
    62b0:	strb	r0, [fp, #-61]	; 0xffffffc3
    62b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    62b8:	add	r0, r0, #432	; 0x1b0
    62bc:	bl	69c <poolClear>
    62c0:	b	70b4 <doProlog+0x2dd8>
    62c4:	ldr	r0, [fp, #8]
    62c8:	cmp	r0, #12
    62cc:	str	r0, [sp, #76]	; 0x4c
    62d0:	beq	62f4 <doProlog+0x2018>
    62d4:	b	62d8 <doProlog+0x1ffc>
    62d8:	ldr	r0, [sp, #76]	; 0x4c
    62dc:	cmp	r0, #28
    62e0:	bne	6300 <doProlog+0x2024>
    62e4:	b	62e8 <doProlog+0x200c>
    62e8:	movw	r0, #10
    62ec:	str	r0, [fp, #-20]	; 0xffffffec
    62f0:	b	7174 <doProlog+0x2e98>
    62f4:	movw	r0, #17
    62f8:	str	r0, [fp, #-20]	; 0xffffffec
    62fc:	b	7174 <doProlog+0x2e98>
    6300:	movw	r0, #2
    6304:	str	r0, [fp, #-20]	; 0xffffffec
    6308:	b	7174 <doProlog+0x2e98>
    630c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6310:	ldr	r0, [r0, #88]	; 0x58
    6314:	movw	r1, #0
    6318:	cmp	r0, r1
    631c:	beq	6334 <doProlog+0x2058>
    6320:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6324:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6328:	ldr	r2, [fp, #-32]	; 0xffffffe0
    632c:	ldr	r3, [fp, #12]
    6330:	bl	3b40 <reportDefault>
    6334:	movw	r0, #0
    6338:	strb	r0, [fp, #-61]	; 0xffffffc3
    633c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6340:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6344:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6348:	ldr	r2, [fp, #16]
    634c:	add	ip, fp, #12
    6350:	str	r2, [sp, #72]	; 0x48
    6354:	mov	r2, ip
    6358:	ldr	ip, [sp, #72]	; 0x48
    635c:	str	ip, [sp]
    6360:	ldrb	lr, [fp, #-37]	; 0xffffffdb
    6364:	str	lr, [sp, #4]
    6368:	bl	9304 <doIgnoreSection>
    636c:	str	r0, [fp, #-132]	; 0xffffff7c
    6370:	ldr	r0, [fp, #-132]	; 0xffffff7c
    6374:	cmp	r0, #0
    6378:	beq	6388 <doProlog+0x20ac>
    637c:	ldr	r0, [fp, #-132]	; 0xffffff7c
    6380:	str	r0, [fp, #-20]	; 0xffffffec
    6384:	b	7174 <doProlog+0x2e98>
    6388:	ldr	r0, [fp, #12]
    638c:	movw	r1, #0
    6390:	cmp	r0, r1
    6394:	bne	63b4 <doProlog+0x20d8>
    6398:	ldr	r0, [fp, #-24]	; 0xffffffe8
    639c:	movw	r1, #0
    63a0:	movt	r1, #0
    63a4:	str	r1, [r0, #288]	; 0x120
    63a8:	ldr	r0, [fp, #-132]	; 0xffffff7c
    63ac:	str	r0, [fp, #-20]	; 0xffffffec
    63b0:	b	7174 <doProlog+0x2e98>
    63b4:	b	63b8 <doProlog+0x20dc>
    63b8:	b	70b4 <doProlog+0x2dd8>
    63bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63c0:	ldr	r0, [r0, #268]	; 0x10c
    63c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    63c8:	ldr	r1, [r1, #484]	; 0x1e4
    63cc:	cmp	r0, r1
    63d0:	bcc	6508 <doProlog+0x222c>
    63d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63d8:	ldr	r0, [r0, #484]	; 0x1e4
    63dc:	cmp	r0, #0
    63e0:	beq	64b4 <doProlog+0x21d8>
    63e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63e8:	ldr	r1, [r0, #16]
    63ec:	ldr	r2, [r0, #480]	; 0x1e0
    63f0:	ldr	r3, [r0, #484]	; 0x1e4
    63f4:	lsl	r3, r3, #1
    63f8:	str	r3, [r0, #484]	; 0x1e4
    63fc:	mov	r0, r2
    6400:	str	r1, [sp, #68]	; 0x44
    6404:	mov	r1, r3
    6408:	ldr	r2, [sp, #68]	; 0x44
    640c:	blx	r2
    6410:	str	r0, [fp, #-136]	; 0xffffff78
    6414:	ldr	r0, [fp, #-136]	; 0xffffff78
    6418:	movw	r1, #0
    641c:	cmp	r0, r1
    6420:	bne	6430 <doProlog+0x2154>
    6424:	movw	r0, #1
    6428:	str	r0, [fp, #-20]	; 0xffffffec
    642c:	b	7174 <doProlog+0x2e98>
    6430:	ldr	r0, [fp, #-136]	; 0xffffff78
    6434:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6438:	str	r0, [r1, #480]	; 0x1e0
    643c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6440:	ldr	r0, [r0, #184]	; 0xb8
    6444:	movw	r1, #0
    6448:	cmp	r0, r1
    644c:	beq	64b0 <doProlog+0x21d4>
    6450:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6454:	ldr	r1, [r0, #16]
    6458:	ldr	r0, [r0, #484]	; 0x1e4
    645c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    6460:	ldr	r2, [r2, #184]	; 0xb8
    6464:	lsl	r0, r0, #2
    6468:	str	r0, [sp, #64]	; 0x40
    646c:	mov	r0, r2
    6470:	ldr	r2, [sp, #64]	; 0x40
    6474:	str	r1, [sp, #60]	; 0x3c
    6478:	mov	r1, r2
    647c:	ldr	r3, [sp, #60]	; 0x3c
    6480:	blx	r3
    6484:	str	r0, [fp, #-140]	; 0xffffff74
    6488:	ldr	r0, [fp, #-140]	; 0xffffff74
    648c:	movw	r1, #0
    6490:	cmp	r0, r1
    6494:	bne	64a4 <doProlog+0x21c8>
    6498:	movw	r0, #1
    649c:	str	r0, [fp, #-20]	; 0xffffffec
    64a0:	b	7174 <doProlog+0x2e98>
    64a4:	ldr	r0, [fp, #-140]	; 0xffffff74
    64a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    64ac:	str	r0, [r1, #184]	; 0xb8
    64b0:	b	6504 <doProlog+0x2228>
    64b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    64b8:	ldr	r0, [r0, #12]
    64bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    64c0:	movw	r2, #32
    64c4:	str	r2, [r1, #484]	; 0x1e4
    64c8:	str	r0, [sp, #56]	; 0x38
    64cc:	mov	r0, r2
    64d0:	ldr	r1, [sp, #56]	; 0x38
    64d4:	blx	r1
    64d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    64dc:	str	r0, [r1, #480]	; 0x1e0
    64e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    64e4:	ldr	r0, [r0, #480]	; 0x1e0
    64e8:	movw	r1, #0
    64ec:	cmp	r0, r1
    64f0:	bne	6500 <doProlog+0x2224>
    64f4:	movw	r0, #1
    64f8:	str	r0, [fp, #-20]	; 0xffffffec
    64fc:	b	7174 <doProlog+0x2e98>
    6500:	b	6504 <doProlog+0x2228>
    6504:	b	6508 <doProlog+0x222c>
    6508:	ldr	r0, [fp, #-24]	; 0xffffffe8
    650c:	ldr	r0, [r0, #480]	; 0x1e0
    6510:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6514:	ldr	r1, [r1, #268]	; 0x10c
    6518:	add	r0, r0, r1
    651c:	movw	r1, #0
    6520:	strb	r1, [r0]
    6524:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6528:	ldrsb	r0, [r0, #160]	; 0xa0
    652c:	cmp	r0, #0
    6530:	beq	65c0 <doProlog+0x22e4>
    6534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6538:	bl	96a8 <nextScaffoldPart>
    653c:	str	r0, [fp, #-144]	; 0xffffff70
    6540:	ldr	r0, [fp, #-144]	; 0xffffff70
    6544:	cmp	r0, #0
    6548:	bge	6558 <doProlog+0x227c>
    654c:	movw	r0, #1
    6550:	str	r0, [fp, #-20]	; 0xffffffec
    6554:	b	7174 <doProlog+0x2e98>
    6558:	ldr	r0, [fp, #-144]	; 0xffffff70
    655c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6560:	ldr	r2, [r1, #180]	; 0xb4
    6564:	ldr	r1, [r1, #184]	; 0xb8
    6568:	add	r1, r1, r2, lsl #2
    656c:	str	r0, [r1]
    6570:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6574:	ldr	r1, [r0, #180]	; 0xb4
    6578:	add	r1, r1, #1
    657c:	str	r1, [r0, #180]	; 0xb4
    6580:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6584:	ldr	r0, [r0, #164]	; 0xa4
    6588:	ldr	r1, [fp, #-144]	; 0xffffff70
    658c:	movw	r2, #28
    6590:	mul	r1, r1, r2
    6594:	add	r0, r0, r1
    6598:	movw	r1, #6
    659c:	str	r1, [r0]
    65a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    65a4:	ldr	r0, [r0, #136]	; 0x88
    65a8:	movw	r1, #0
    65ac:	cmp	r0, r1
    65b0:	beq	65bc <doProlog+0x22e0>
    65b4:	movw	r0, #0
    65b8:	strb	r0, [fp, #-61]	; 0xffffffc3
    65bc:	b	65c0 <doProlog+0x22e4>
    65c0:	b	70b4 <doProlog+0x2dd8>
    65c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    65c8:	ldr	r0, [r0, #480]	; 0x1e0
    65cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    65d0:	ldr	r1, [r1, #268]	; 0x10c
    65d4:	add	r0, r0, r1
    65d8:	ldrb	r0, [r0]
    65dc:	cmp	r0, #124	; 0x7c
    65e0:	bne	65f0 <doProlog+0x2314>
    65e4:	movw	r0, #2
    65e8:	str	r0, [fp, #-20]	; 0xffffffec
    65ec:	b	7174 <doProlog+0x2e98>
    65f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    65f4:	ldr	r0, [r0, #480]	; 0x1e0
    65f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    65fc:	ldr	r1, [r1, #268]	; 0x10c
    6600:	add	r0, r0, r1
    6604:	movw	r1, #44	; 0x2c
    6608:	strb	r1, [r0]
    660c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6610:	ldrb	r0, [r0, #160]	; 0xa0
    6614:	cmp	r0, #0
    6618:	beq	6638 <doProlog+0x235c>
    661c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6620:	ldr	r0, [r0, #136]	; 0x88
    6624:	movw	r1, #0
    6628:	cmp	r0, r1
    662c:	beq	6638 <doProlog+0x235c>
    6630:	movw	r0, #0
    6634:	strb	r0, [fp, #-61]	; 0xffffffc3
    6638:	b	70b4 <doProlog+0x2dd8>
    663c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6640:	ldr	r0, [r0, #480]	; 0x1e0
    6644:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6648:	ldr	r1, [r1, #268]	; 0x10c
    664c:	add	r0, r0, r1
    6650:	ldrb	r0, [r0]
    6654:	cmp	r0, #44	; 0x2c
    6658:	bne	6668 <doProlog+0x238c>
    665c:	movw	r0, #2
    6660:	str	r0, [fp, #-20]	; 0xffffffec
    6664:	b	7174 <doProlog+0x2e98>
    6668:	ldr	r0, [fp, #-44]	; 0xffffffd4
    666c:	ldrb	r0, [r0, #160]	; 0xa0
    6670:	cmp	r0, #0
    6674:	beq	671c <doProlog+0x2440>
    6678:	ldr	r0, [fp, #-24]	; 0xffffffe8
    667c:	ldr	r0, [r0, #480]	; 0x1e0
    6680:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6684:	ldr	r1, [r1, #268]	; 0x10c
    6688:	add	r0, r0, r1
    668c:	ldrsb	r0, [r0]
    6690:	cmp	r0, #0
    6694:	bne	671c <doProlog+0x2440>
    6698:	ldr	r0, [fp, #-44]	; 0xffffffd4
    669c:	ldr	r1, [r0, #164]	; 0xa4
    66a0:	ldr	r2, [r0, #180]	; 0xb4
    66a4:	ldr	r0, [r0, #184]	; 0xb8
    66a8:	sub	r2, r2, #1
    66ac:	add	r0, r0, r2, lsl #2
    66b0:	ldr	r0, [r0]
    66b4:	movw	r2, #28
    66b8:	mul	r0, r0, r2
    66bc:	add	r0, r1, r0
    66c0:	ldr	r0, [r0]
    66c4:	cmp	r0, #3
    66c8:	beq	671c <doProlog+0x2440>
    66cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    66d0:	ldr	r1, [r0, #164]	; 0xa4
    66d4:	ldr	r2, [r0, #180]	; 0xb4
    66d8:	ldr	r0, [r0, #184]	; 0xb8
    66dc:	sub	r2, r2, #1
    66e0:	add	r0, r0, r2, lsl #2
    66e4:	ldr	r0, [r0]
    66e8:	movw	r2, #28
    66ec:	mul	r0, r0, r2
    66f0:	add	r0, r1, r0
    66f4:	movw	r1, #5
    66f8:	str	r1, [r0]
    66fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6700:	ldr	r0, [r0, #136]	; 0x88
    6704:	movw	r1, #0
    6708:	cmp	r0, r1
    670c:	beq	6718 <doProlog+0x243c>
    6710:	movw	r0, #0
    6714:	strb	r0, [fp, #-61]	; 0xffffffc3
    6718:	b	671c <doProlog+0x2440>
    671c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6720:	ldr	r0, [r0, #480]	; 0x1e0
    6724:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6728:	ldr	r1, [r1, #268]	; 0x10c
    672c:	add	r0, r0, r1
    6730:	movw	r1, #124	; 0x7c
    6734:	strb	r1, [r0]
    6738:	b	70b4 <doProlog+0x2dd8>
    673c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6740:	movw	r1, #1
    6744:	strb	r1, [r0, #129]	; 0x81
    6748:	ldr	r0, [fp, #-24]	; 0xffffffe8
    674c:	ldr	r0, [r0, #508]	; 0x1fc
    6750:	cmp	r0, #0
    6754:	bne	676c <doProlog+0x2490>
    6758:	ldr	r0, [fp, #-44]	; 0xffffffd4
    675c:	ldrb	r0, [r0, #130]	; 0x82
    6760:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6764:	strb	r0, [r1, #128]	; 0x80
    6768:	b	6a58 <doProlog+0x277c>
    676c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6770:	add	r0, r0, #80	; 0x50
    6774:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6778:	ldr	r2, [fp, #-32]	; 0xffffffe0
    677c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6780:	ldr	r3, [r3, #68]	; 0x44
    6784:	add	r2, r2, r3
    6788:	ldr	r3, [fp, #12]
    678c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    6790:	ldr	ip, [ip, #68]	; 0x44
    6794:	movw	lr, #0
    6798:	sub	ip, lr, ip
    679c:	add	r3, r3, ip
    67a0:	bl	75e4 <poolStoreString>
    67a4:	str	r0, [fp, #-148]	; 0xffffff6c
    67a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    67ac:	movw	r1, #0
    67b0:	cmp	r0, r1
    67b4:	bne	67c4 <doProlog+0x24e8>
    67b8:	movw	r0, #1
    67bc:	str	r0, [fp, #-20]	; 0xffffffec
    67c0:	b	7174 <doProlog+0x2e98>
    67c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    67c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    67cc:	add	r1, r1, #132	; 0x84
    67d0:	ldr	r2, [fp, #-148]	; 0xffffff6c
    67d4:	movw	r3, #0
    67d8:	bl	7694 <lookup>
    67dc:	str	r0, [fp, #-152]	; 0xffffff68
    67e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    67e4:	ldr	r0, [r0, #96]	; 0x60
    67e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    67ec:	str	r0, [r1, #92]	; 0x5c
    67f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    67f4:	ldr	r0, [r0, #280]	; 0x118
    67f8:	cmp	r0, #0
    67fc:	beq	6878 <doProlog+0x259c>
    6800:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6804:	ldrb	r0, [r0, #130]	; 0x82
    6808:	cmp	r0, #0
    680c:	beq	6828 <doProlog+0x254c>
    6810:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6814:	ldr	r0, [r0, #308]	; 0x134
    6818:	movw	r1, #0
    681c:	cmp	r0, r1
    6820:	bne	6878 <doProlog+0x259c>
    6824:	b	6838 <doProlog+0x255c>
    6828:	ldr	r0, [fp, #-44]	; 0xffffffd4
    682c:	ldrsb	r0, [r0, #129]	; 0x81
    6830:	cmp	r0, #0
    6834:	bne	6878 <doProlog+0x259c>
    6838:	ldr	r0, [fp, #-152]	; 0xffffff68
    683c:	movw	r1, #0
    6840:	cmp	r0, r1
    6844:	bne	6854 <doProlog+0x2578>
    6848:	movw	r0, #11
    684c:	str	r0, [fp, #-20]	; 0xffffffec
    6850:	b	7174 <doProlog+0x2e98>
    6854:	ldr	r0, [fp, #-152]	; 0xffffff68
    6858:	ldrsb	r0, [r0, #34]	; 0x22
    685c:	cmp	r0, #0
    6860:	bne	6870 <doProlog+0x2594>
    6864:	movw	r0, #24
    6868:	str	r0, [fp, #-20]	; 0xffffffec
    686c:	b	7174 <doProlog+0x2e98>
    6870:	b	6874 <doProlog+0x2598>
    6874:	b	68f4 <doProlog+0x2618>
    6878:	ldr	r0, [fp, #-152]	; 0xffffff68
    687c:	movw	r1, #0
    6880:	cmp	r0, r1
    6884:	bne	68f0 <doProlog+0x2614>
    6888:	ldr	r0, [fp, #-44]	; 0xffffffd4
    688c:	ldrb	r0, [r0, #130]	; 0x82
    6890:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6894:	strb	r0, [r1, #128]	; 0x80
    6898:	ldr	r0, [fp, #-60]	; 0xffffffc4
    689c:	cmp	r0, #60	; 0x3c
    68a0:	bne	68ec <doProlog+0x2610>
    68a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    68a8:	ldr	r0, [r0, #128]	; 0x80
    68ac:	movw	r1, #0
    68b0:	cmp	r0, r1
    68b4:	beq	68ec <doProlog+0x2610>
    68b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    68bc:	ldr	r0, [r0, #128]	; 0x80
    68c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    68c4:	ldr	r1, [r1, #4]
    68c8:	ldr	r2, [fp, #-148]	; 0xffffff6c
    68cc:	str	r0, [sp, #52]	; 0x34
    68d0:	mov	r0, r1
    68d4:	mov	r1, r2
    68d8:	movw	r2, #1
    68dc:	ldr	r3, [sp, #52]	; 0x34
    68e0:	blx	r3
    68e4:	movw	r0, #0
    68e8:	strb	r0, [fp, #-61]	; 0xffffffc3
    68ec:	b	70b4 <doProlog+0x2dd8>
    68f0:	b	68f4 <doProlog+0x2618>
    68f4:	ldr	r0, [fp, #-152]	; 0xffffff68
    68f8:	ldrsb	r0, [r0, #32]
    68fc:	cmp	r0, #0
    6900:	beq	6910 <doProlog+0x2634>
    6904:	movw	r0, #12
    6908:	str	r0, [fp, #-20]	; 0xffffffec
    690c:	b	7174 <doProlog+0x2e98>
    6910:	ldr	r0, [fp, #-152]	; 0xffffff68
    6914:	ldr	r0, [r0, #4]
    6918:	movw	r1, #0
    691c:	cmp	r0, r1
    6920:	beq	697c <doProlog+0x26a0>
    6924:	ldr	r0, [fp, #-60]	; 0xffffffc4
    6928:	cmp	r0, #60	; 0x3c
    692c:	movw	r0, #0
    6930:	moveq	r0, #1
    6934:	tst	r0, #1
    6938:	movw	r0, #1
    693c:	moveq	r0, #0
    6940:	strb	r0, [fp, #-157]	; 0xffffff63
    6944:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6948:	ldr	r1, [fp, #-152]	; 0xffffff68
    694c:	ldrb	r2, [fp, #-157]	; 0xffffff63
    6950:	bl	9918 <processInternalEntity>
    6954:	str	r0, [fp, #-156]	; 0xffffff64
    6958:	ldr	r0, [fp, #-156]	; 0xffffff64
    695c:	cmp	r0, #0
    6960:	beq	6970 <doProlog+0x2694>
    6964:	ldr	r0, [fp, #-156]	; 0xffffff64
    6968:	str	r0, [fp, #-20]	; 0xffffffec
    696c:	b	7174 <doProlog+0x2e98>
    6970:	movw	r0, #0
    6974:	strb	r0, [fp, #-61]	; 0xffffffc3
    6978:	b	70b4 <doProlog+0x2dd8>
    697c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6980:	ldr	r0, [r0, #120]	; 0x78
    6984:	movw	r1, #0
    6988:	cmp	r0, r1
    698c:	beq	6a40 <doProlog+0x2764>
    6990:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6994:	movw	r1, #0
    6998:	strb	r1, [r0, #131]	; 0x83
    699c:	ldr	r0, [fp, #-152]	; 0xffffff68
    69a0:	movw	r1, #1
    69a4:	strb	r1, [r0, #32]
    69a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    69ac:	ldr	r0, [r0, #120]	; 0x78
    69b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    69b4:	ldr	r1, [r1, #124]	; 0x7c
    69b8:	ldr	r2, [fp, #-152]	; 0xffffff68
    69bc:	ldr	r2, [r2, #20]
    69c0:	ldr	r3, [fp, #-152]	; 0xffffff68
    69c4:	ldr	r3, [r3, #16]
    69c8:	ldr	ip, [fp, #-152]	; 0xffffff68
    69cc:	ldr	ip, [ip, #24]
    69d0:	str	r0, [sp, #48]	; 0x30
    69d4:	mov	r0, r1
    69d8:	movw	r1, #0
    69dc:	str	ip, [sp]
    69e0:	ldr	ip, [sp, #48]	; 0x30
    69e4:	blx	ip
    69e8:	cmp	r0, #0
    69ec:	bne	6a08 <doProlog+0x272c>
    69f0:	ldr	r0, [fp, #-152]	; 0xffffff68
    69f4:	movw	r1, #0
    69f8:	strb	r1, [r0, #32]
    69fc:	movw	r0, #21
    6a00:	str	r0, [fp, #-20]	; 0xffffffec
    6a04:	b	7174 <doProlog+0x2e98>
    6a08:	ldr	r0, [fp, #-152]	; 0xffffff68
    6a0c:	movw	r1, #0
    6a10:	strb	r1, [r0, #32]
    6a14:	strb	r1, [fp, #-61]	; 0xffffffc3
    6a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6a1c:	ldrsb	r0, [r0, #131]	; 0x83
    6a20:	cmp	r0, #0
    6a24:	bne	6a3c <doProlog+0x2760>
    6a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6a2c:	ldrb	r0, [r0, #130]	; 0x82
    6a30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6a34:	strb	r0, [r1, #128]	; 0x80
    6a38:	b	70b4 <doProlog+0x2dd8>
    6a3c:	b	6a54 <doProlog+0x2778>
    6a40:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6a44:	ldrb	r0, [r0, #130]	; 0x82
    6a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6a4c:	strb	r0, [r1, #128]	; 0x80
    6a50:	b	70b4 <doProlog+0x2dd8>
    6a54:	b	6a58 <doProlog+0x277c>
    6a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6a5c:	ldrsb	r0, [r0, #130]	; 0x82
    6a60:	cmp	r0, #0
    6a64:	bne	6ab0 <doProlog+0x27d4>
    6a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a6c:	ldr	r0, [r0, #116]	; 0x74
    6a70:	movw	r1, #0
    6a74:	cmp	r0, r1
    6a78:	beq	6ab0 <doProlog+0x27d4>
    6a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a80:	ldr	r0, [r0, #116]	; 0x74
    6a84:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6a88:	ldr	r1, [r1, #4]
    6a8c:	str	r0, [sp, #44]	; 0x2c
    6a90:	mov	r0, r1
    6a94:	ldr	r1, [sp, #44]	; 0x2c
    6a98:	blx	r1
    6a9c:	cmp	r0, #0
    6aa0:	bne	6ab0 <doProlog+0x27d4>
    6aa4:	movw	r0, #22
    6aa8:	str	r0, [fp, #-20]	; 0xffffffec
    6aac:	b	7174 <doProlog+0x2e98>
    6ab0:	b	70b4 <doProlog+0x2dd8>
    6ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ab8:	ldr	r0, [r0, #136]	; 0x88
    6abc:	movw	r1, #0
    6ac0:	cmp	r0, r1
    6ac4:	beq	6b2c <doProlog+0x2850>
    6ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ad0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6ad4:	ldr	r3, [fp, #12]
    6ad8:	bl	7e70 <getElementType>
    6adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6ae0:	str	r0, [r1, #352]	; 0x160
    6ae4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ae8:	ldr	r0, [r0, #352]	; 0x160
    6aec:	movw	r1, #0
    6af0:	cmp	r0, r1
    6af4:	bne	6b04 <doProlog+0x2828>
    6af8:	movw	r0, #1
    6afc:	str	r0, [fp, #-20]	; 0xffffffec
    6b00:	b	7174 <doProlog+0x2e98>
    6b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6b08:	movw	r1, #0
    6b0c:	str	r1, [r0, #180]	; 0xb4
    6b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6b14:	str	r1, [r0, #176]	; 0xb0
    6b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6b1c:	movw	r1, #1
    6b20:	strb	r1, [r0, #160]	; 0xa0
    6b24:	movw	r0, #0
    6b28:	strb	r0, [fp, #-61]	; 0xffffffc3
    6b2c:	b	70b4 <doProlog+0x2dd8>
    6b30:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6b34:	ldrsb	r0, [r0, #160]	; 0xa0
    6b38:	cmp	r0, #0
    6b3c:	beq	6c30 <doProlog+0x2954>
    6b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6b44:	ldr	r0, [r0, #136]	; 0x88
    6b48:	movw	r1, #0
    6b4c:	cmp	r0, r1
    6b50:	beq	6c24 <doProlog+0x2948>
    6b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6b58:	ldr	r0, [r0, #12]
    6b5c:	movw	r1, #20
    6b60:	str	r0, [sp, #40]	; 0x28
    6b64:	mov	r0, r1
    6b68:	ldr	r1, [sp, #40]	; 0x28
    6b6c:	blx	r1
    6b70:	str	r0, [fp, #-164]	; 0xffffff5c
    6b74:	ldr	r0, [fp, #-164]	; 0xffffff5c
    6b78:	movw	r1, #0
    6b7c:	cmp	r0, r1
    6b80:	bne	6b90 <doProlog+0x28b4>
    6b84:	movw	r0, #1
    6b88:	str	r0, [fp, #-20]	; 0xffffffec
    6b8c:	b	7174 <doProlog+0x2e98>
    6b90:	ldr	r0, [fp, #-164]	; 0xffffff5c
    6b94:	movw	r1, #0
    6b98:	str	r1, [r0, #4]
    6b9c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    6ba0:	str	r1, [r0, #8]
    6ba4:	ldr	r0, [fp, #-164]	; 0xffffff5c
    6ba8:	str	r1, [r0, #12]
    6bac:	ldr	r0, [fp, #-164]	; 0xffffff5c
    6bb0:	str	r1, [r0, #16]
    6bb4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    6bb8:	cmp	r0, #41	; 0x29
    6bbc:	movw	r0, #0
    6bc0:	moveq	r0, #1
    6bc4:	tst	r0, #1
    6bc8:	movw	r0, #2
    6bcc:	moveq	r0, #1
    6bd0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    6bd4:	str	r0, [r1]
    6bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6bdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6be0:	str	r0, [r1]
    6be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6be8:	ldr	r0, [r0, #136]	; 0x88
    6bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6bf0:	ldr	r1, [r1, #4]
    6bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6bf8:	ldr	r2, [r2, #352]	; 0x160
    6bfc:	ldr	r2, [r2]
    6c00:	ldr	r3, [fp, #-164]	; 0xffffff5c
    6c04:	str	r0, [sp, #36]	; 0x24
    6c08:	mov	r0, r1
    6c0c:	mov	r1, r2
    6c10:	mov	r2, r3
    6c14:	ldr	r3, [sp, #36]	; 0x24
    6c18:	blx	r3
    6c1c:	movw	r0, #0
    6c20:	strb	r0, [fp, #-61]	; 0xffffffc3
    6c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6c28:	movw	r1, #0
    6c2c:	strb	r1, [r0, #160]	; 0xa0
    6c30:	b	70b4 <doProlog+0x2dd8>
    6c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6c38:	ldrsb	r0, [r0, #160]	; 0xa0
    6c3c:	cmp	r0, #0
    6c40:	beq	6c94 <doProlog+0x29b8>
    6c44:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6c48:	ldr	r1, [r0, #164]	; 0xa4
    6c4c:	ldr	r2, [r0, #180]	; 0xb4
    6c50:	ldr	r0, [r0, #184]	; 0xb8
    6c54:	sub	r2, r2, #1
    6c58:	add	r0, r0, r2, lsl #2
    6c5c:	ldr	r0, [r0]
    6c60:	movw	r2, #28
    6c64:	mul	r0, r0, r2
    6c68:	add	r0, r1, r0
    6c6c:	movw	r1, #3
    6c70:	str	r1, [r0]
    6c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6c78:	ldr	r0, [r0, #136]	; 0x88
    6c7c:	movw	r1, #0
    6c80:	cmp	r0, r1
    6c84:	beq	6c90 <doProlog+0x29b4>
    6c88:	movw	r0, #0
    6c8c:	strb	r0, [fp, #-61]	; 0xffffffc3
    6c90:	b	6c94 <doProlog+0x29b8>
    6c94:	b	70b4 <doProlog+0x2dd8>
    6c98:	movw	r0, #0
    6c9c:	str	r0, [fp, #-56]	; 0xffffffc8
    6ca0:	b	6cc4 <doProlog+0x29e8>
    6ca4:	movw	r0, #1
    6ca8:	str	r0, [fp, #-56]	; 0xffffffc8
    6cac:	b	6cc4 <doProlog+0x29e8>
    6cb0:	movw	r0, #2
    6cb4:	str	r0, [fp, #-56]	; 0xffffffc8
    6cb8:	b	6cc4 <doProlog+0x29e8>
    6cbc:	movw	r0, #3
    6cc0:	str	r0, [fp, #-56]	; 0xffffffc8
    6cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6cc8:	ldrsb	r0, [r0, #160]	; 0xa0
    6ccc:	cmp	r0, #0
    6cd0:	beq	6e30 <doProlog+0x2b54>
    6cd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6cd8:	cmp	r0, #0
    6cdc:	bne	6cec <doProlog+0x2a10>
    6ce0:	ldr	r0, [fp, #12]
    6ce4:	str	r0, [sp, #32]
    6ce8:	b	6d08 <doProlog+0x2a2c>
    6cec:	ldr	r0, [fp, #12]
    6cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6cf4:	ldr	r1, [r1, #68]	; 0x44
    6cf8:	movw	r2, #0
    6cfc:	sub	r1, r2, r1
    6d00:	add	r0, r0, r1
    6d04:	str	r0, [sp, #32]
    6d08:	ldr	r0, [sp, #32]
    6d0c:	str	r0, [fp, #-180]	; 0xffffff4c
    6d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6d14:	bl	96a8 <nextScaffoldPart>
    6d18:	str	r0, [fp, #-184]	; 0xffffff48
    6d1c:	ldr	r0, [fp, #-184]	; 0xffffff48
    6d20:	cmp	r0, #0
    6d24:	bge	6d34 <doProlog+0x2a58>
    6d28:	movw	r0, #1
    6d2c:	str	r0, [fp, #-20]	; 0xffffffec
    6d30:	b	7174 <doProlog+0x2e98>
    6d34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6d38:	ldr	r0, [r0, #164]	; 0xa4
    6d3c:	ldr	r1, [fp, #-184]	; 0xffffff48
    6d40:	movw	r2, #28
    6d44:	mul	r1, r1, r2
    6d48:	add	r0, r0, r1
    6d4c:	movw	r1, #4
    6d50:	str	r1, [r0]
    6d54:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6d58:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6d5c:	ldr	r1, [r1, #164]	; 0xa4
    6d60:	ldr	r3, [fp, #-184]	; 0xffffff48
    6d64:	mul	r2, r3, r2
    6d68:	add	r1, r1, r2
    6d6c:	str	r0, [r1, #4]
    6d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6d74:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6d78:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6d7c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    6d80:	bl	7e70 <getElementType>
    6d84:	str	r0, [fp, #-168]	; 0xffffff58
    6d88:	ldr	r0, [fp, #-168]	; 0xffffff58
    6d8c:	movw	r1, #0
    6d90:	cmp	r0, r1
    6d94:	bne	6da4 <doProlog+0x2ac8>
    6d98:	movw	r0, #1
    6d9c:	str	r0, [fp, #-20]	; 0xffffffec
    6da0:	b	7174 <doProlog+0x2e98>
    6da4:	ldr	r0, [fp, #-168]	; 0xffffff58
    6da8:	ldr	r0, [r0]
    6dac:	str	r0, [fp, #-172]	; 0xffffff54
    6db0:	ldr	r0, [fp, #-172]	; 0xffffff54
    6db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6db8:	ldr	r1, [r1, #164]	; 0xa4
    6dbc:	ldr	r2, [fp, #-184]	; 0xffffff48
    6dc0:	movw	r3, #28
    6dc4:	mul	r2, r2, r3
    6dc8:	add	r1, r1, r2
    6dcc:	str	r0, [r1, #8]
    6dd0:	movw	r0, #0
    6dd4:	str	r0, [fp, #-176]	; 0xffffff50
    6dd8:	ldr	r0, [fp, #-172]	; 0xffffff54
    6ddc:	ldr	r1, [fp, #-176]	; 0xffffff50
    6de0:	add	r2, r1, #1
    6de4:	str	r2, [fp, #-176]	; 0xffffff50
    6de8:	add	r0, r0, r1
    6dec:	ldrsb	r0, [r0]
    6df0:	cmp	r0, #0
    6df4:	beq	6dfc <doProlog+0x2b20>
    6df8:	b	6dd8 <doProlog+0x2afc>
    6dfc:	ldr	r0, [fp, #-176]	; 0xffffff50
    6e00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6e04:	ldr	r2, [r1, #168]	; 0xa8
    6e08:	add	r0, r2, r0
    6e0c:	str	r0, [r1, #168]	; 0xa8
    6e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e14:	ldr	r0, [r0, #136]	; 0x88
    6e18:	movw	r1, #0
    6e1c:	cmp	r0, r1
    6e20:	beq	6e2c <doProlog+0x2b50>
    6e24:	movw	r0, #0
    6e28:	strb	r0, [fp, #-61]	; 0xffffffc3
    6e2c:	b	6e30 <doProlog+0x2b54>
    6e30:	b	70b4 <doProlog+0x2dd8>
    6e34:	movw	r0, #0
    6e38:	str	r0, [fp, #-56]	; 0xffffffc8
    6e3c:	b	6e60 <doProlog+0x2b84>
    6e40:	movw	r0, #1
    6e44:	str	r0, [fp, #-56]	; 0xffffffc8
    6e48:	b	6e60 <doProlog+0x2b84>
    6e4c:	movw	r0, #2
    6e50:	str	r0, [fp, #-56]	; 0xffffffc8
    6e54:	b	6e60 <doProlog+0x2b84>
    6e58:	movw	r0, #3
    6e5c:	str	r0, [fp, #-56]	; 0xffffffc8
    6e60:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6e64:	ldrsb	r0, [r0, #160]	; 0xa0
    6e68:	cmp	r0, #0
    6e6c:	beq	6f6c <doProlog+0x2c90>
    6e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e74:	ldr	r0, [r0, #136]	; 0x88
    6e78:	movw	r1, #0
    6e7c:	cmp	r0, r1
    6e80:	beq	6e8c <doProlog+0x2bb0>
    6e84:	movw	r0, #0
    6e88:	strb	r0, [fp, #-61]	; 0xffffffc3
    6e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6e90:	ldr	r1, [r0, #180]	; 0xb4
    6e94:	sub	r1, r1, #1
    6e98:	str	r1, [r0, #180]	; 0xb4
    6e9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6ea0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6ea4:	ldr	r2, [r1, #164]	; 0xa4
    6ea8:	ldr	r3, [r1, #180]	; 0xb4
    6eac:	ldr	r1, [r1, #184]	; 0xb8
    6eb0:	add	r1, r1, r3, lsl #2
    6eb4:	ldr	r1, [r1]
    6eb8:	movw	r3, #28
    6ebc:	mul	r1, r1, r3
    6ec0:	add	r1, r2, r1
    6ec4:	str	r0, [r1, #4]
    6ec8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6ecc:	ldr	r0, [r0, #180]	; 0xb4
    6ed0:	cmp	r0, #0
    6ed4:	bne	6f68 <doProlog+0x2c8c>
    6ed8:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
    6edc:	cmp	r0, #0
    6ee0:	bne	6f50 <doProlog+0x2c74>
    6ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ee8:	bl	9ba4 <build_model>
    6eec:	str	r0, [fp, #-188]	; 0xffffff44
    6ef0:	ldr	r0, [fp, #-188]	; 0xffffff44
    6ef4:	movw	lr, #0
    6ef8:	cmp	r0, lr
    6efc:	bne	6f0c <doProlog+0x2c30>
    6f00:	movw	r0, #1
    6f04:	str	r0, [fp, #-20]	; 0xffffffec
    6f08:	b	7174 <doProlog+0x2e98>
    6f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6f10:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6f14:	str	r0, [r1]
    6f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f1c:	ldr	r0, [r0, #136]	; 0x88
    6f20:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6f24:	ldr	r1, [r1, #4]
    6f28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6f2c:	ldr	r2, [r2, #352]	; 0x160
    6f30:	ldr	r2, [r2]
    6f34:	ldr	r3, [fp, #-188]	; 0xffffff44
    6f38:	str	r0, [sp, #28]
    6f3c:	mov	r0, r1
    6f40:	mov	r1, r2
    6f44:	mov	r2, r3
    6f48:	ldr	r3, [sp, #28]
    6f4c:	blx	r3
    6f50:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6f54:	movw	r1, #0
    6f58:	strb	r1, [r0, #160]	; 0xa0
    6f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6f60:	movw	r1, #0
    6f64:	str	r1, [r0, #168]	; 0xa8
    6f68:	b	6f6c <doProlog+0x2c90>
    6f6c:	b	70b4 <doProlog+0x2dd8>
    6f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f74:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6f78:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f7c:	ldr	r3, [fp, #12]
    6f80:	bl	9c78 <reportProcessingInstruction>
    6f84:	cmp	r0, #0
    6f88:	bne	6f98 <doProlog+0x2cbc>
    6f8c:	movw	r0, #1
    6f90:	str	r0, [fp, #-20]	; 0xffffffec
    6f94:	b	7174 <doProlog+0x2e98>
    6f98:	movw	r0, #0
    6f9c:	strb	r0, [fp, #-61]	; 0xffffffc3
    6fa0:	b	70b4 <doProlog+0x2dd8>
    6fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6fa8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6fac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6fb0:	ldr	r3, [fp, #12]
    6fb4:	bl	9e3c <reportComment>
    6fb8:	cmp	r0, #0
    6fbc:	bne	6fcc <doProlog+0x2cf0>
    6fc0:	movw	r0, #1
    6fc4:	str	r0, [fp, #-20]	; 0xffffffec
    6fc8:	b	7174 <doProlog+0x2e98>
    6fcc:	movw	r0, #0
    6fd0:	strb	r0, [fp, #-61]	; 0xffffffc3
    6fd4:	b	70b4 <doProlog+0x2dd8>
    6fd8:	ldr	r0, [fp, #8]
    6fdc:	cmp	r0, #14
    6fe0:	bne	6ff0 <doProlog+0x2d14>
    6fe4:	b	6fe8 <doProlog+0x2d0c>
    6fe8:	movw	r0, #0
    6fec:	strb	r0, [fp, #-61]	; 0xffffffc3
    6ff0:	b	70b4 <doProlog+0x2dd8>
    6ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ff8:	ldr	r0, [r0, #92]	; 0x5c
    6ffc:	movw	r1, #0
    7000:	cmp	r0, r1
    7004:	beq	7010 <doProlog+0x2d34>
    7008:	movw	r0, #0
    700c:	strb	r0, [fp, #-61]	; 0xffffffc3
    7010:	b	70b4 <doProlog+0x2dd8>
    7014:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7018:	ldrb	r0, [r0, #128]	; 0x80
    701c:	cmp	r0, #0
    7020:	beq	7040 <doProlog+0x2d64>
    7024:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7028:	ldr	r0, [r0, #144]	; 0x90
    702c:	movw	r1, #0
    7030:	cmp	r0, r1
    7034:	beq	7040 <doProlog+0x2d64>
    7038:	movw	r0, #0
    703c:	strb	r0, [fp, #-61]	; 0xffffffc3
    7040:	b	70b4 <doProlog+0x2dd8>
    7044:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7048:	ldr	r0, [r0, #104]	; 0x68
    704c:	movw	r1, #0
    7050:	cmp	r0, r1
    7054:	beq	7060 <doProlog+0x2d84>
    7058:	movw	r0, #0
    705c:	strb	r0, [fp, #-61]	; 0xffffffc3
    7060:	b	70b4 <doProlog+0x2dd8>
    7064:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7068:	ldrb	r0, [r0, #128]	; 0x80
    706c:	cmp	r0, #0
    7070:	beq	7090 <doProlog+0x2db4>
    7074:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7078:	ldr	r0, [r0, #140]	; 0x8c
    707c:	movw	r1, #0
    7080:	cmp	r0, r1
    7084:	beq	7090 <doProlog+0x2db4>
    7088:	movw	r0, #0
    708c:	strb	r0, [fp, #-61]	; 0xffffffc3
    7090:	b	70b4 <doProlog+0x2dd8>
    7094:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7098:	ldr	r0, [r0, #136]	; 0x88
    709c:	movw	r1, #0
    70a0:	cmp	r0, r1
    70a4:	beq	70b0 <doProlog+0x2dd4>
    70a8:	movw	r0, #0
    70ac:	strb	r0, [fp, #-61]	; 0xffffffc3
    70b0:	b	70b4 <doProlog+0x2dd8>
    70b4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
    70b8:	cmp	r0, #0
    70bc:	beq	70e8 <doProlog+0x2e0c>
    70c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    70c4:	ldr	r0, [r0, #88]	; 0x58
    70c8:	movw	r1, #0
    70cc:	cmp	r0, r1
    70d0:	beq	70e8 <doProlog+0x2e0c>
    70d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    70d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    70dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    70e0:	ldr	r3, [fp, #12]
    70e4:	bl	3b40 <reportDefault>
    70e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    70ec:	ldr	r0, [r0, #496]	; 0x1f0
    70f0:	cmp	r0, #2
    70f4:	str	r0, [sp, #24]
    70f8:	beq	7128 <doProlog+0x2e4c>
    70fc:	b	7100 <doProlog+0x2e24>
    7100:	ldr	r0, [sp, #24]
    7104:	cmp	r0, #3
    7108:	bne	7134 <doProlog+0x2e58>
    710c:	b	7110 <doProlog+0x2e34>
    7110:	ldr	r0, [fp, #12]
    7114:	ldr	r1, [fp, #16]
    7118:	str	r0, [r1]
    711c:	movw	r0, #0
    7120:	str	r0, [fp, #-20]	; 0xffffffec
    7124:	b	7174 <doProlog+0x2e98>
    7128:	movw	r0, #35	; 0x23
    712c:	str	r0, [fp, #-20]	; 0xffffffec
    7130:	b	7174 <doProlog+0x2e98>
    7134:	ldr	r0, [fp, #12]
    7138:	str	r0, [fp, #-32]	; 0xffffffe0
    713c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7140:	ldr	r0, [r0]
    7144:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7148:	ldr	r2, [fp, #-32]	; 0xffffffe0
    714c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7150:	str	r0, [sp, #20]
    7154:	mov	r0, r1
    7158:	mov	r1, r2
    715c:	mov	r2, r3
    7160:	add	r3, fp, #12
    7164:	ldr	ip, [sp, #20]
    7168:	blx	ip
    716c:	str	r0, [fp, #8]
    7170:	b	4374 <doProlog+0x98>
    7174:	ldr	r0, [fp, #-20]	; 0xffffffec
    7178:	sub	sp, fp, #16
    717c:	pop	{r4, r5, r6, sl, fp, pc}

00007180 <processXmlDecl>:
    7180:	push	{r4, sl, fp, lr}
    7184:	add	fp, sp, #8
    7188:	sub	sp, sp, #120	; 0x78
    718c:	str	r0, [fp, #-16]
    7190:	str	r1, [fp, #-20]	; 0xffffffec
    7194:	str	r2, [fp, #-24]	; 0xffffffe8
    7198:	str	r3, [fp, #-28]	; 0xffffffe4
    719c:	movw	r0, #0
    71a0:	str	r0, [fp, #-32]	; 0xffffffe0
    71a4:	str	r0, [fp, #-36]	; 0xffffffdc
    71a8:	str	r0, [fp, #-40]	; 0xffffffd8
    71ac:	str	r0, [fp, #-44]	; 0xffffffd4
    71b0:	str	r0, [fp, #-52]	; 0xffffffcc
    71b4:	mvn	r0, #0
    71b8:	str	r0, [fp, #-56]	; 0xffffffc8
    71bc:	ldr	r0, [fp, #-16]
    71c0:	ldrb	r0, [r0, #244]	; 0xf4
    71c4:	cmp	r0, #0
    71c8:	movw	r0, #0
    71cc:	movne	r0, #1
    71d0:	tst	r0, #1
    71d4:	movw	r0, #0
    71d8:	movt	r0, #0
    71dc:	movw	r1, #0
    71e0:	movt	r1, #0
    71e4:	movne	r0, r1
    71e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    71ec:	ldr	r2, [fp, #-16]
    71f0:	ldr	r2, [r2, #152]	; 0x98
    71f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    71f8:	ldr	ip, [fp, #-28]	; 0xffffffe4
    71fc:	ldr	lr, [fp, #-16]
    7200:	add	lr, lr, #296	; 0x128
    7204:	str	r0, [sp, #64]	; 0x40
    7208:	mov	r0, r1
    720c:	mov	r1, r2
    7210:	mov	r2, r3
    7214:	mov	r3, ip
    7218:	str	lr, [sp]
    721c:	sub	ip, fp, #44	; 0x2c
    7220:	str	ip, [sp, #4]
    7224:	sub	ip, fp, #48	; 0x30
    7228:	str	ip, [sp, #8]
    722c:	sub	ip, fp, #32
    7230:	str	ip, [sp, #12]
    7234:	sub	ip, fp, #40	; 0x28
    7238:	str	ip, [sp, #16]
    723c:	sub	ip, fp, #56	; 0x38
    7240:	str	ip, [sp, #20]
    7244:	ldr	ip, [sp, #64]	; 0x40
    7248:	blx	ip
    724c:	cmp	r0, #0
    7250:	bne	7278 <processXmlDecl+0xf8>
    7254:	ldr	r0, [fp, #-20]	; 0xffffffec
    7258:	cmp	r0, #0
    725c:	beq	726c <processXmlDecl+0xec>
    7260:	movw	r0, #31
    7264:	str	r0, [fp, #-12]
    7268:	b	75d8 <processXmlDecl+0x458>
    726c:	movw	r0, #30
    7270:	str	r0, [fp, #-12]
    7274:	b	75d8 <processXmlDecl+0x458>
    7278:	ldr	r0, [fp, #-20]	; 0xffffffec
    727c:	cmp	r0, #0
    7280:	bne	72c0 <processXmlDecl+0x140>
    7284:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7288:	cmp	r0, #1
    728c:	bne	72c0 <processXmlDecl+0x140>
    7290:	ldr	r0, [fp, #-16]
    7294:	ldr	r0, [r0, #364]	; 0x16c
    7298:	movw	r1, #1
    729c:	strb	r1, [r0, #130]	; 0x82
    72a0:	ldr	r0, [fp, #-16]
    72a4:	ldr	r0, [r0, #508]	; 0x1fc
    72a8:	cmp	r0, #1
    72ac:	bne	72bc <processXmlDecl+0x13c>
    72b0:	ldr	r0, [fp, #-16]
    72b4:	movw	r1, #0
    72b8:	str	r1, [r0, #508]	; 0x1fc
    72bc:	b	72c0 <processXmlDecl+0x140>
    72c0:	ldr	r0, [fp, #-16]
    72c4:	ldr	r0, [r0, #148]	; 0x94
    72c8:	movw	r1, #0
    72cc:	cmp	r0, r1
    72d0:	beq	741c <processXmlDecl+0x29c>
    72d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    72d8:	movw	r1, #0
    72dc:	cmp	r0, r1
    72e0:	beq	7378 <processXmlDecl+0x1f8>
    72e4:	ldr	r0, [fp, #-16]
    72e8:	add	r0, r0, #456	; 0x1c8
    72ec:	ldr	r1, [fp, #-16]
    72f0:	ldr	r1, [r1, #152]	; 0x98
    72f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    72f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    72fc:	ldr	ip, [fp, #-16]
    7300:	ldr	ip, [ip, #152]	; 0x98
    7304:	ldr	ip, [ip, #32]
    7308:	ldr	lr, [fp, #-16]
    730c:	ldr	lr, [lr, #152]	; 0x98
    7310:	ldr	r4, [fp, #-32]	; 0xffffffe0
    7314:	str	r0, [sp, #60]	; 0x3c
    7318:	mov	r0, lr
    731c:	str	r1, [sp, #56]	; 0x38
    7320:	mov	r1, r4
    7324:	str	r2, [sp, #52]	; 0x34
    7328:	str	r3, [sp, #48]	; 0x30
    732c:	blx	ip
    7330:	ldr	r1, [sp, #48]	; 0x30
    7334:	add	r3, r1, r0
    7338:	ldr	r0, [sp, #60]	; 0x3c
    733c:	ldr	r1, [sp, #56]	; 0x38
    7340:	ldr	r2, [sp, #52]	; 0x34
    7344:	bl	75e4 <poolStoreString>
    7348:	str	r0, [fp, #-36]	; 0xffffffdc
    734c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7350:	movw	r1, #0
    7354:	cmp	r0, r1
    7358:	bne	7368 <processXmlDecl+0x1e8>
    735c:	movw	r0, #1
    7360:	str	r0, [fp, #-12]
    7364:	b	75d8 <processXmlDecl+0x458>
    7368:	ldr	r0, [fp, #-16]
    736c:	ldr	r0, [r0, #468]	; 0x1d4
    7370:	ldr	r1, [fp, #-16]
    7374:	str	r0, [r1, #472]	; 0x1d8
    7378:	ldr	r0, [fp, #-44]	; 0xffffffd4
    737c:	movw	r1, #0
    7380:	cmp	r0, r1
    7384:	beq	73e0 <processXmlDecl+0x260>
    7388:	ldr	r0, [fp, #-16]
    738c:	add	r0, r0, #456	; 0x1c8
    7390:	ldr	r1, [fp, #-16]
    7394:	ldr	r1, [r1, #152]	; 0x98
    7398:	ldr	r2, [fp, #-44]	; 0xffffffd4
    739c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    73a0:	ldr	ip, [fp, #-16]
    73a4:	ldr	ip, [ip, #152]	; 0x98
    73a8:	ldr	ip, [ip, #68]	; 0x44
    73ac:	movw	lr, #0
    73b0:	sub	ip, lr, ip
    73b4:	add	r3, r3, ip
    73b8:	bl	75e4 <poolStoreString>
    73bc:	str	r0, [fp, #-52]	; 0xffffffcc
    73c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    73c4:	movw	r1, #0
    73c8:	cmp	r0, r1
    73cc:	bne	73dc <processXmlDecl+0x25c>
    73d0:	movw	r0, #1
    73d4:	str	r0, [fp, #-12]
    73d8:	b	75d8 <processXmlDecl+0x458>
    73dc:	b	73e0 <processXmlDecl+0x260>
    73e0:	ldr	r0, [fp, #-16]
    73e4:	ldr	r0, [r0, #148]	; 0x94
    73e8:	ldr	r1, [fp, #-16]
    73ec:	ldr	r1, [r1, #4]
    73f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    73f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    73f8:	ldr	ip, [fp, #-56]	; 0xffffffc8
    73fc:	str	r0, [sp, #44]	; 0x2c
    7400:	mov	r0, r1
    7404:	mov	r1, r2
    7408:	mov	r2, r3
    740c:	mov	r3, ip
    7410:	ldr	ip, [sp, #44]	; 0x2c
    7414:	blx	ip
    7418:	b	744c <processXmlDecl+0x2cc>
    741c:	ldr	r0, [fp, #-16]
    7420:	ldr	r0, [r0, #88]	; 0x58
    7424:	movw	r1, #0
    7428:	cmp	r0, r1
    742c:	beq	7448 <processXmlDecl+0x2c8>
    7430:	ldr	r0, [fp, #-16]
    7434:	ldr	r1, [fp, #-16]
    7438:	ldr	r1, [r1, #152]	; 0x98
    743c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7440:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7444:	bl	3b40 <reportDefault>
    7448:	b	744c <processXmlDecl+0x2cc>
    744c:	ldr	r0, [fp, #-16]
    7450:	ldr	r0, [r0, #240]	; 0xf0
    7454:	movw	r1, #0
    7458:	cmp	r0, r1
    745c:	bne	75a4 <processXmlDecl+0x424>
    7460:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7464:	movw	r1, #0
    7468:	cmp	r0, r1
    746c:	beq	74b4 <processXmlDecl+0x334>
    7470:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7474:	ldr	r0, [r0, #68]	; 0x44
    7478:	ldr	r1, [fp, #-16]
    747c:	ldr	r1, [r1, #152]	; 0x98
    7480:	ldr	r1, [r1, #68]	; 0x44
    7484:	cmp	r0, r1
    7488:	beq	74a4 <processXmlDecl+0x324>
    748c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7490:	ldr	r1, [fp, #-16]
    7494:	str	r0, [r1, #296]	; 0x128
    7498:	movw	r0, #19
    749c:	str	r0, [fp, #-12]
    74a0:	b	75d8 <processXmlDecl+0x458>
    74a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    74a8:	ldr	r1, [fp, #-16]
    74ac:	str	r0, [r1, #152]	; 0x98
    74b0:	b	75a0 <processXmlDecl+0x420>
    74b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    74b8:	movw	r1, #0
    74bc:	cmp	r0, r1
    74c0:	beq	759c <processXmlDecl+0x41c>
    74c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    74c8:	movw	r1, #0
    74cc:	cmp	r0, r1
    74d0:	bne	755c <processXmlDecl+0x3dc>
    74d4:	ldr	r0, [fp, #-16]
    74d8:	add	r0, r0, #456	; 0x1c8
    74dc:	ldr	r1, [fp, #-16]
    74e0:	ldr	r1, [r1, #152]	; 0x98
    74e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    74e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    74ec:	ldr	ip, [fp, #-16]
    74f0:	ldr	ip, [ip, #152]	; 0x98
    74f4:	ldr	ip, [ip, #32]
    74f8:	ldr	lr, [fp, #-16]
    74fc:	ldr	lr, [lr, #152]	; 0x98
    7500:	ldr	r4, [fp, #-32]	; 0xffffffe0
    7504:	str	r0, [sp, #40]	; 0x28
    7508:	mov	r0, lr
    750c:	str	r1, [sp, #36]	; 0x24
    7510:	mov	r1, r4
    7514:	str	r2, [sp, #32]
    7518:	str	r3, [sp, #28]
    751c:	blx	ip
    7520:	ldr	r1, [sp, #28]
    7524:	add	r3, r1, r0
    7528:	ldr	r0, [sp, #40]	; 0x28
    752c:	ldr	r1, [sp, #36]	; 0x24
    7530:	ldr	r2, [sp, #32]
    7534:	bl	75e4 <poolStoreString>
    7538:	str	r0, [fp, #-36]	; 0xffffffdc
    753c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7540:	movw	r1, #0
    7544:	cmp	r0, r1
    7548:	bne	7558 <processXmlDecl+0x3d8>
    754c:	movw	r0, #1
    7550:	str	r0, [fp, #-12]
    7554:	b	75d8 <processXmlDecl+0x458>
    7558:	b	755c <processXmlDecl+0x3dc>
    755c:	ldr	r0, [fp, #-16]
    7560:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7564:	bl	40ec <handleUnknownEncoding>
    7568:	str	r0, [fp, #-60]	; 0xffffffc4
    756c:	ldr	r0, [fp, #-16]
    7570:	add	r0, r0, #456	; 0x1c8
    7574:	bl	69c <poolClear>
    7578:	ldr	r0, [fp, #-60]	; 0xffffffc4
    757c:	cmp	r0, #18
    7580:	bne	7590 <processXmlDecl+0x410>
    7584:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7588:	ldr	r1, [fp, #-16]
    758c:	str	r0, [r1, #296]	; 0x128
    7590:	ldr	r0, [fp, #-60]	; 0xffffffc4
    7594:	str	r0, [fp, #-12]
    7598:	b	75d8 <processXmlDecl+0x458>
    759c:	b	75a0 <processXmlDecl+0x420>
    75a0:	b	75a4 <processXmlDecl+0x424>
    75a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    75a8:	movw	r1, #0
    75ac:	cmp	r0, r1
    75b0:	bne	75c4 <processXmlDecl+0x444>
    75b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    75b8:	movw	r1, #0
    75bc:	cmp	r0, r1
    75c0:	beq	75d0 <processXmlDecl+0x450>
    75c4:	ldr	r0, [fp, #-16]
    75c8:	add	r0, r0, #456	; 0x1c8
    75cc:	bl	69c <poolClear>
    75d0:	movw	r0, #0
    75d4:	str	r0, [fp, #-12]
    75d8:	ldr	r0, [fp, #-12]
    75dc:	sub	sp, fp, #8
    75e0:	pop	{r4, sl, fp, pc}

000075e4 <poolStoreString>:
    75e4:	push	{fp, lr}
    75e8:	mov	fp, sp
    75ec:	sub	sp, sp, #24
    75f0:	str	r0, [fp, #-8]
    75f4:	str	r1, [sp, #12]
    75f8:	str	r2, [sp, #8]
    75fc:	str	r3, [sp, #4]
    7600:	ldr	r0, [fp, #-8]
    7604:	ldr	r1, [sp, #12]
    7608:	ldr	r2, [sp, #8]
    760c:	ldr	r3, [sp, #4]
    7610:	bl	8418 <poolAppend>
    7614:	movw	r1, #0
    7618:	cmp	r0, r1
    761c:	bne	762c <poolStoreString+0x48>
    7620:	movw	r0, #0
    7624:	str	r0, [fp, #-4]
    7628:	b	7688 <poolStoreString+0xa4>
    762c:	ldr	r0, [fp, #-8]
    7630:	ldr	r0, [r0, #12]
    7634:	ldr	r1, [fp, #-8]
    7638:	ldr	r1, [r1, #8]
    763c:	cmp	r0, r1
    7640:	bne	7664 <poolStoreString+0x80>
    7644:	ldr	r0, [fp, #-8]
    7648:	bl	8764 <poolGrow>
    764c:	sxtb	r0, r0
    7650:	cmp	r0, #0
    7654:	bne	7664 <poolStoreString+0x80>
    7658:	movw	r0, #0
    765c:	str	r0, [fp, #-4]
    7660:	b	7688 <poolStoreString+0xa4>
    7664:	ldr	r0, [fp, #-8]
    7668:	ldr	r1, [r0, #12]
    766c:	add	r2, r1, #1
    7670:	str	r2, [r0, #12]
    7674:	movw	r0, #0
    7678:	strb	r0, [r1]
    767c:	ldr	r0, [fp, #-8]
    7680:	ldr	r0, [r0, #16]
    7684:	str	r0, [fp, #-4]
    7688:	ldr	r0, [fp, #-4]
    768c:	mov	sp, fp
    7690:	pop	{fp, pc}

00007694 <lookup>:
    7694:	push	{fp, lr}
    7698:	mov	fp, sp
    769c:	sub	sp, sp, #88	; 0x58
    76a0:	str	r0, [fp, #-8]
    76a4:	str	r1, [fp, #-12]
    76a8:	str	r2, [fp, #-16]
    76ac:	str	r3, [fp, #-20]	; 0xffffffec
    76b0:	ldr	r0, [fp, #-12]
    76b4:	ldr	r0, [r0, #8]
    76b8:	cmp	r0, #0
    76bc:	bne	778c <lookup+0xf8>
    76c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    76c4:	cmp	r0, #0
    76c8:	bne	76d8 <lookup+0x44>
    76cc:	movw	r0, #0
    76d0:	str	r0, [fp, #-4]
    76d4:	b	7c84 <lookup+0x5f0>
    76d8:	ldr	r0, [fp, #-12]
    76dc:	mov	r1, #6
    76e0:	strb	r1, [r0, #4]
    76e4:	ldr	r0, [fp, #-12]
    76e8:	mov	r1, #64	; 0x40
    76ec:	str	r1, [r0, #8]
    76f0:	ldr	r0, [fp, #-12]
    76f4:	ldr	r0, [r0, #8]
    76f8:	lsl	r0, r0, #2
    76fc:	str	r0, [fp, #-28]	; 0xffffffe4
    7700:	ldr	r0, [fp, #-12]
    7704:	ldr	r0, [r0, #16]
    7708:	ldr	r0, [r0]
    770c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7710:	str	r0, [sp, #20]
    7714:	mov	r0, r1
    7718:	ldr	r1, [sp, #20]
    771c:	blx	r1
    7720:	ldr	r1, [fp, #-12]
    7724:	str	r0, [r1]
    7728:	ldr	r0, [fp, #-12]
    772c:	ldr	r0, [r0]
    7730:	movw	r1, #0
    7734:	cmp	r0, r1
    7738:	bne	7750 <lookup+0xbc>
    773c:	ldr	r0, [fp, #-12]
    7740:	movw	r1, #0
    7744:	str	r1, [r0, #8]
    7748:	str	r1, [fp, #-4]
    774c:	b	7c84 <lookup+0x5f0>
    7750:	ldr	r0, [fp, #-12]
    7754:	ldr	r0, [r0]
    7758:	ldr	r2, [fp, #-28]	; 0xffffffe4
    775c:	movw	r1, #0
    7760:	and	r1, r1, #255	; 0xff
    7764:	bl	0 <memset>
    7768:	ldr	r0, [fp, #-8]
    776c:	ldr	r1, [fp, #-16]
    7770:	bl	9f4c <hash>
    7774:	ldr	r1, [fp, #-12]
    7778:	ldr	r1, [r1, #8]
    777c:	sub	r1, r1, #1
    7780:	and	r0, r0, r1
    7784:	str	r0, [fp, #-24]	; 0xffffffe8
    7788:	b	7bc8 <lookup+0x534>
    778c:	ldr	r0, [fp, #-8]
    7790:	ldr	r1, [fp, #-16]
    7794:	bl	9f4c <hash>
    7798:	str	r0, [fp, #-32]	; 0xffffffe0
    779c:	ldr	r0, [fp, #-12]
    77a0:	ldr	r0, [r0, #8]
    77a4:	sub	r0, r0, #1
    77a8:	str	r0, [fp, #-36]	; 0xffffffdc
    77ac:	movw	r0, #0
    77b0:	strb	r0, [fp, #-37]	; 0xffffffdb
    77b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    77b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    77bc:	and	r0, r0, r1
    77c0:	str	r0, [fp, #-24]	; 0xffffffe8
    77c4:	ldr	r0, [fp, #-12]
    77c8:	ldr	r0, [r0]
    77cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    77d0:	add	r0, r0, r1, lsl #2
    77d4:	ldr	r0, [r0]
    77d8:	movw	r1, #0
    77dc:	cmp	r0, r1
    77e0:	beq	78b4 <lookup+0x220>
    77e4:	ldr	r0, [fp, #-16]
    77e8:	ldr	r1, [fp, #-12]
    77ec:	ldr	r1, [r1]
    77f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    77f4:	add	r1, r1, r2, lsl #2
    77f8:	ldr	r1, [r1]
    77fc:	ldr	r1, [r1]
    7800:	bl	9fac <keyeq>
    7804:	sxtb	r0, r0
    7808:	cmp	r0, #0
    780c:	beq	782c <lookup+0x198>
    7810:	ldr	r0, [fp, #-12]
    7814:	ldr	r0, [r0]
    7818:	ldr	r1, [fp, #-24]	; 0xffffffe8
    781c:	add	r0, r0, r1, lsl #2
    7820:	ldr	r0, [r0]
    7824:	str	r0, [fp, #-4]
    7828:	b	7c84 <lookup+0x5f0>
    782c:	ldrsb	r0, [fp, #-37]	; 0xffffffdb
    7830:	cmp	r0, #0
    7834:	bne	7870 <lookup+0x1dc>
    7838:	ldr	r0, [fp, #-32]	; 0xffffffe0
    783c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7840:	mvn	r2, #0
    7844:	eor	r1, r1, r2
    7848:	and	r0, r0, r1
    784c:	ldr	r1, [fp, #-12]
    7850:	ldrb	r1, [r1, #4]
    7854:	sub	r1, r1, #1
    7858:	lsr	r0, r0, r1
    785c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7860:	lsr	r1, r1, #2
    7864:	and	r0, r0, r1
    7868:	orr	r0, r0, #1
    786c:	strb	r0, [fp, #-37]	; 0xffffffdb
    7870:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7874:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    7878:	cmp	r0, r1
    787c:	bcs	78a0 <lookup+0x20c>
    7880:	ldr	r0, [fp, #-12]
    7884:	ldr	r0, [r0, #8]
    7888:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    788c:	sub	r0, r0, r1
    7890:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7894:	add	r0, r1, r0
    7898:	str	r0, [fp, #-24]	; 0xffffffe8
    789c:	b	78b0 <lookup+0x21c>
    78a0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
    78a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    78a8:	sub	r0, r1, r0
    78ac:	str	r0, [fp, #-24]	; 0xffffffe8
    78b0:	b	77c4 <lookup+0x130>
    78b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    78b8:	cmp	r0, #0
    78bc:	bne	78cc <lookup+0x238>
    78c0:	movw	r0, #0
    78c4:	str	r0, [fp, #-4]
    78c8:	b	7c84 <lookup+0x5f0>
    78cc:	ldr	r0, [fp, #-12]
    78d0:	ldr	r0, [r0, #12]
    78d4:	ldr	r1, [fp, #-12]
    78d8:	ldrb	r1, [r1, #4]
    78dc:	sub	r1, r1, #1
    78e0:	lsr	r0, r0, r1
    78e4:	cmp	r0, #0
    78e8:	beq	7bc4 <lookup+0x530>
    78ec:	ldr	r0, [fp, #-12]
    78f0:	ldrb	r0, [r0, #4]
    78f4:	add	r0, r0, #1
    78f8:	strb	r0, [fp, #-38]	; 0xffffffda
    78fc:	ldrb	r0, [fp, #-38]	; 0xffffffda
    7900:	mov	r1, #1
    7904:	lsl	r0, r1, r0
    7908:	str	r0, [sp, #44]	; 0x2c
    790c:	ldr	r0, [sp, #44]	; 0x2c
    7910:	sub	r0, r0, #1
    7914:	str	r0, [sp, #40]	; 0x28
    7918:	ldr	r0, [sp, #44]	; 0x2c
    791c:	lsl	r0, r0, #2
    7920:	str	r0, [sp, #36]	; 0x24
    7924:	ldr	r0, [fp, #-12]
    7928:	ldr	r0, [r0, #16]
    792c:	ldr	r0, [r0]
    7930:	ldr	r1, [sp, #36]	; 0x24
    7934:	str	r0, [sp, #16]
    7938:	mov	r0, r1
    793c:	ldr	r1, [sp, #16]
    7940:	blx	r1
    7944:	str	r0, [sp, #32]
    7948:	ldr	r0, [sp, #32]
    794c:	movw	r1, #0
    7950:	cmp	r0, r1
    7954:	bne	7964 <lookup+0x2d0>
    7958:	movw	r0, #0
    795c:	str	r0, [fp, #-4]
    7960:	b	7c84 <lookup+0x5f0>
    7964:	ldr	r0, [sp, #32]
    7968:	ldr	r2, [sp, #36]	; 0x24
    796c:	movw	r1, #0
    7970:	and	r1, r1, #255	; 0xff
    7974:	bl	0 <memset>
    7978:	movw	r0, #0
    797c:	str	r0, [fp, #-24]	; 0xffffffe8
    7980:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7984:	ldr	r1, [fp, #-12]
    7988:	ldr	r1, [r1, #8]
    798c:	cmp	r0, r1
    7990:	bcs	7ac0 <lookup+0x42c>
    7994:	ldr	r0, [fp, #-12]
    7998:	ldr	r0, [r0]
    799c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    79a0:	add	r0, r0, r1, lsl #2
    79a4:	ldr	r0, [r0]
    79a8:	movw	r1, #0
    79ac:	cmp	r0, r1
    79b0:	beq	7aac <lookup+0x418>
    79b4:	ldr	r0, [fp, #-8]
    79b8:	ldr	r1, [fp, #-12]
    79bc:	ldr	r1, [r1]
    79c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    79c4:	add	r1, r1, r2, lsl #2
    79c8:	ldr	r1, [r1]
    79cc:	ldr	r1, [r1]
    79d0:	bl	9f4c <hash>
    79d4:	str	r0, [sp, #28]
    79d8:	ldr	r0, [sp, #28]
    79dc:	ldr	r1, [sp, #40]	; 0x28
    79e0:	and	r0, r0, r1
    79e4:	str	r0, [sp, #24]
    79e8:	movw	r0, #0
    79ec:	strb	r0, [fp, #-37]	; 0xffffffdb
    79f0:	ldr	r0, [sp, #32]
    79f4:	ldr	r1, [sp, #24]
    79f8:	add	r0, r0, r1, lsl #2
    79fc:	ldr	r0, [r0]
    7a00:	movw	r1, #0
    7a04:	cmp	r0, r1
    7a08:	beq	7a8c <lookup+0x3f8>
    7a0c:	ldrsb	r0, [fp, #-37]	; 0xffffffdb
    7a10:	cmp	r0, #0
    7a14:	bne	7a4c <lookup+0x3b8>
    7a18:	ldr	r0, [sp, #28]
    7a1c:	ldr	r1, [sp, #40]	; 0x28
    7a20:	mvn	r2, #0
    7a24:	eor	r1, r1, r2
    7a28:	and	r0, r0, r1
    7a2c:	ldrb	r1, [fp, #-38]	; 0xffffffda
    7a30:	sub	r1, r1, #1
    7a34:	lsr	r0, r0, r1
    7a38:	ldr	r1, [sp, #40]	; 0x28
    7a3c:	lsr	r1, r1, #2
    7a40:	and	r0, r0, r1
    7a44:	orr	r0, r0, #1
    7a48:	strb	r0, [fp, #-37]	; 0xffffffdb
    7a4c:	ldr	r0, [sp, #24]
    7a50:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    7a54:	cmp	r0, r1
    7a58:	bcs	7a78 <lookup+0x3e4>
    7a5c:	ldr	r0, [sp, #44]	; 0x2c
    7a60:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    7a64:	sub	r0, r0, r1
    7a68:	ldr	r1, [sp, #24]
    7a6c:	add	r0, r1, r0
    7a70:	str	r0, [sp, #24]
    7a74:	b	7a88 <lookup+0x3f4>
    7a78:	ldrb	r0, [fp, #-37]	; 0xffffffdb
    7a7c:	ldr	r1, [sp, #24]
    7a80:	sub	r0, r1, r0
    7a84:	str	r0, [sp, #24]
    7a88:	b	79f0 <lookup+0x35c>
    7a8c:	ldr	r0, [fp, #-12]
    7a90:	ldr	r0, [r0]
    7a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7a98:	ldr	r0, [r0, r1, lsl #2]
    7a9c:	ldr	r1, [sp, #32]
    7aa0:	ldr	r2, [sp, #24]
    7aa4:	add	r1, r1, r2, lsl #2
    7aa8:	str	r0, [r1]
    7aac:	b	7ab0 <lookup+0x41c>
    7ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7ab4:	add	r0, r0, #1
    7ab8:	str	r0, [fp, #-24]	; 0xffffffe8
    7abc:	b	7980 <lookup+0x2ec>
    7ac0:	ldr	r0, [fp, #-12]
    7ac4:	ldr	r0, [r0, #16]
    7ac8:	ldr	r0, [r0, #8]
    7acc:	ldr	r1, [fp, #-12]
    7ad0:	ldr	r1, [r1]
    7ad4:	str	r0, [sp, #12]
    7ad8:	mov	r0, r1
    7adc:	ldr	r1, [sp, #12]
    7ae0:	blx	r1
    7ae4:	ldr	r0, [sp, #32]
    7ae8:	ldr	r1, [fp, #-12]
    7aec:	str	r0, [r1]
    7af0:	ldrb	r0, [fp, #-38]	; 0xffffffda
    7af4:	ldr	r1, [fp, #-12]
    7af8:	strb	r0, [r1, #4]
    7afc:	ldr	r0, [sp, #44]	; 0x2c
    7b00:	ldr	r1, [fp, #-12]
    7b04:	str	r0, [r1, #8]
    7b08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7b0c:	ldr	r1, [sp, #40]	; 0x28
    7b10:	and	r0, r0, r1
    7b14:	str	r0, [fp, #-24]	; 0xffffffe8
    7b18:	movw	r0, #0
    7b1c:	strb	r0, [fp, #-37]	; 0xffffffdb
    7b20:	ldr	r0, [fp, #-12]
    7b24:	ldr	r0, [r0]
    7b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7b2c:	add	r0, r0, r1, lsl #2
    7b30:	ldr	r0, [r0]
    7b34:	movw	r1, #0
    7b38:	cmp	r0, r1
    7b3c:	beq	7bc0 <lookup+0x52c>
    7b40:	ldrsb	r0, [fp, #-37]	; 0xffffffdb
    7b44:	cmp	r0, #0
    7b48:	bne	7b80 <lookup+0x4ec>
    7b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7b50:	ldr	r1, [sp, #40]	; 0x28
    7b54:	mvn	r2, #0
    7b58:	eor	r1, r1, r2
    7b5c:	and	r0, r0, r1
    7b60:	ldrb	r1, [fp, #-38]	; 0xffffffda
    7b64:	sub	r1, r1, #1
    7b68:	lsr	r0, r0, r1
    7b6c:	ldr	r1, [sp, #40]	; 0x28
    7b70:	lsr	r1, r1, #2
    7b74:	and	r0, r0, r1
    7b78:	orr	r0, r0, #1
    7b7c:	strb	r0, [fp, #-37]	; 0xffffffdb
    7b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7b84:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    7b88:	cmp	r0, r1
    7b8c:	bcs	7bac <lookup+0x518>
    7b90:	ldr	r0, [sp, #44]	; 0x2c
    7b94:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    7b98:	sub	r0, r0, r1
    7b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7ba0:	add	r0, r1, r0
    7ba4:	str	r0, [fp, #-24]	; 0xffffffe8
    7ba8:	b	7bbc <lookup+0x528>
    7bac:	ldrb	r0, [fp, #-37]	; 0xffffffdb
    7bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7bb4:	sub	r0, r1, r0
    7bb8:	str	r0, [fp, #-24]	; 0xffffffe8
    7bbc:	b	7b20 <lookup+0x48c>
    7bc0:	b	7bc4 <lookup+0x530>
    7bc4:	b	7bc8 <lookup+0x534>
    7bc8:	ldr	r0, [fp, #-12]
    7bcc:	ldr	r0, [r0, #16]
    7bd0:	ldr	r0, [r0]
    7bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
    7bd8:	str	r0, [sp, #8]
    7bdc:	mov	r0, r1
    7be0:	ldr	r1, [sp, #8]
    7be4:	blx	r1
    7be8:	ldr	r1, [fp, #-12]
    7bec:	ldr	r1, [r1]
    7bf0:	ldr	lr, [fp, #-24]	; 0xffffffe8
    7bf4:	str	r0, [r1, lr, lsl #2]
    7bf8:	ldr	r0, [fp, #-12]
    7bfc:	ldr	r0, [r0]
    7c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7c04:	add	r0, r0, r1, lsl #2
    7c08:	ldr	r0, [r0]
    7c0c:	movw	r1, #0
    7c10:	cmp	r0, r1
    7c14:	bne	7c24 <lookup+0x590>
    7c18:	movw	r0, #0
    7c1c:	str	r0, [fp, #-4]
    7c20:	b	7c84 <lookup+0x5f0>
    7c24:	ldr	r0, [fp, #-12]
    7c28:	ldr	r0, [r0]
    7c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7c30:	ldr	r0, [r0, r1, lsl #2]
    7c34:	ldr	r2, [fp, #-20]	; 0xffffffec
    7c38:	mov	r1, #0
    7c3c:	bl	0 <memset>
    7c40:	ldr	r1, [fp, #-16]
    7c44:	ldr	r2, [fp, #-12]
    7c48:	ldr	r2, [r2]
    7c4c:	ldr	lr, [fp, #-24]	; 0xffffffe8
    7c50:	ldr	r2, [r2, lr, lsl #2]
    7c54:	str	r1, [r2]
    7c58:	ldr	r1, [fp, #-12]
    7c5c:	ldr	r2, [r1, #12]
    7c60:	add	r2, r2, #1
    7c64:	str	r2, [r1, #12]
    7c68:	ldr	r1, [fp, #-12]
    7c6c:	ldr	r1, [r1]
    7c70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7c74:	add	r1, r1, r2, lsl #2
    7c78:	ldr	r1, [r1]
    7c7c:	str	r1, [fp, #-4]
    7c80:	str	r0, [sp, #4]
    7c84:	ldr	r0, [fp, #-4]
    7c88:	mov	sp, fp
    7c8c:	pop	{fp, pc}

00007c90 <normalizePublicId>:
    7c90:	sub	sp, sp, #16
    7c94:	str	r0, [sp, #12]
    7c98:	ldr	r0, [sp, #12]
    7c9c:	str	r0, [sp, #8]
    7ca0:	ldr	r0, [sp, #12]
    7ca4:	str	r0, [sp, #4]
    7ca8:	ldr	r0, [sp, #4]
    7cac:	ldrsb	r0, [r0]
    7cb0:	cmp	r0, #0
    7cb4:	beq	7d60 <normalizePublicId+0xd0>
    7cb8:	ldr	r0, [sp, #4]
    7cbc:	ldrb	r0, [r0]
    7cc0:	mov	r1, r0
    7cc4:	cmp	r0, #10
    7cc8:	str	r1, [sp]
    7ccc:	beq	7cf4 <normalizePublicId+0x64>
    7cd0:	b	7cd4 <normalizePublicId+0x44>
    7cd4:	ldr	r0, [sp]
    7cd8:	cmp	r0, #13
    7cdc:	beq	7cf4 <normalizePublicId+0x64>
    7ce0:	b	7ce4 <normalizePublicId+0x54>
    7ce4:	ldr	r0, [sp]
    7ce8:	cmp	r0, #32
    7cec:	bne	7d34 <normalizePublicId+0xa4>
    7cf0:	b	7cf4 <normalizePublicId+0x64>
    7cf4:	ldr	r0, [sp, #8]
    7cf8:	ldr	r1, [sp, #12]
    7cfc:	cmp	r0, r1
    7d00:	beq	7d30 <normalizePublicId+0xa0>
    7d04:	ldr	r0, [sp, #8]
    7d08:	mvn	r1, #0
    7d0c:	add	r0, r0, r1
    7d10:	ldrb	r0, [r0]
    7d14:	cmp	r0, #32
    7d18:	beq	7d30 <normalizePublicId+0xa0>
    7d1c:	ldr	r0, [sp, #8]
    7d20:	add	r1, r0, #1
    7d24:	str	r1, [sp, #8]
    7d28:	movw	r1, #32
    7d2c:	strb	r1, [r0]
    7d30:	b	7d4c <normalizePublicId+0xbc>
    7d34:	ldr	r0, [sp, #4]
    7d38:	ldrb	r0, [r0]
    7d3c:	ldr	r1, [sp, #8]
    7d40:	add	r2, r1, #1
    7d44:	str	r2, [sp, #8]
    7d48:	strb	r0, [r1]
    7d4c:	b	7d50 <normalizePublicId+0xc0>
    7d50:	ldr	r0, [sp, #4]
    7d54:	add	r0, r0, #1
    7d58:	str	r0, [sp, #4]
    7d5c:	b	7ca8 <normalizePublicId+0x18>
    7d60:	ldr	r0, [sp, #8]
    7d64:	ldr	r1, [sp, #12]
    7d68:	cmp	r0, r1
    7d6c:	beq	7d98 <normalizePublicId+0x108>
    7d70:	ldr	r0, [sp, #8]
    7d74:	mvn	r1, #0
    7d78:	add	r0, r0, r1
    7d7c:	ldrb	r0, [r0]
    7d80:	cmp	r0, #32
    7d84:	bne	7d98 <normalizePublicId+0x108>
    7d88:	ldr	r0, [sp, #8]
    7d8c:	mvn	r1, #0
    7d90:	add	r0, r0, r1
    7d94:	str	r0, [sp, #8]
    7d98:	ldr	r0, [sp, #8]
    7d9c:	movw	r1, #0
    7da0:	strb	r1, [r0]
    7da4:	add	sp, sp, #16
    7da8:	bx	lr

00007dac <contentProcessor>:
    7dac:	push	{r4, sl, fp, lr}
    7db0:	add	fp, sp, #8
    7db4:	sub	sp, sp, #40	; 0x28
    7db8:	str	r0, [fp, #-16]
    7dbc:	str	r1, [fp, #-20]	; 0xffffffec
    7dc0:	str	r2, [sp, #24]
    7dc4:	str	r3, [sp, #20]
    7dc8:	ldr	r0, [fp, #-16]
    7dcc:	ldr	r1, [fp, #-16]
    7dd0:	ldr	r2, [r1, #152]	; 0x98
    7dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
    7dd8:	ldr	r1, [sp, #24]
    7ddc:	ldr	ip, [sp, #20]
    7de0:	ldr	lr, [fp, #-16]
    7de4:	add	lr, lr, #500	; 0x1f4
    7de8:	ldrsb	lr, [lr]
    7dec:	cmp	lr, #0
    7df0:	movw	lr, #0
    7df4:	movne	lr, #1
    7df8:	mvn	r4, #0
    7dfc:	eor	lr, lr, r4
    7e00:	and	lr, lr, #1
    7e04:	movw	r4, #0
    7e08:	str	r1, [sp, #12]
    7e0c:	mov	r1, r4
    7e10:	ldr	r4, [sp, #12]
    7e14:	str	r4, [sp]
    7e18:	str	ip, [sp, #4]
    7e1c:	and	ip, lr, #255	; 0xff
    7e20:	str	ip, [sp, #8]
    7e24:	bl	a020 <doContent>
    7e28:	str	r0, [sp, #16]
    7e2c:	ldr	r0, [sp, #16]
    7e30:	cmp	r0, #0
    7e34:	bne	7e5c <contentProcessor+0xb0>
    7e38:	ldr	r0, [fp, #-16]
    7e3c:	bl	b760 <storeRawNames>
    7e40:	sxtb	r0, r0
    7e44:	cmp	r0, #0
    7e48:	bne	7e58 <contentProcessor+0xac>
    7e4c:	movw	r0, #1
    7e50:	str	r0, [fp, #-12]
    7e54:	b	7e64 <contentProcessor+0xb8>
    7e58:	b	7e5c <contentProcessor+0xb0>
    7e5c:	ldr	r0, [sp, #16]
    7e60:	str	r0, [fp, #-12]
    7e64:	ldr	r0, [fp, #-12]
    7e68:	sub	sp, fp, #8
    7e6c:	pop	{r4, sl, fp, pc}

00007e70 <getElementType>:
    7e70:	push	{fp, lr}
    7e74:	mov	fp, sp
    7e78:	sub	sp, sp, #32
    7e7c:	str	r0, [fp, #-8]
    7e80:	str	r1, [fp, #-12]
    7e84:	str	r2, [sp, #16]
    7e88:	str	r3, [sp, #12]
    7e8c:	ldr	r0, [fp, #-8]
    7e90:	ldr	r0, [r0, #364]	; 0x16c
    7e94:	str	r0, [sp, #8]
    7e98:	ldr	r0, [sp, #8]
    7e9c:	add	r0, r0, #80	; 0x50
    7ea0:	ldr	r1, [fp, #-12]
    7ea4:	ldr	r2, [sp, #16]
    7ea8:	ldr	r3, [sp, #12]
    7eac:	bl	75e4 <poolStoreString>
    7eb0:	str	r0, [sp, #4]
    7eb4:	ldr	r0, [sp, #4]
    7eb8:	movw	r1, #0
    7ebc:	cmp	r0, r1
    7ec0:	bne	7ed0 <getElementType+0x60>
    7ec4:	movw	r0, #0
    7ec8:	str	r0, [fp, #-4]
    7ecc:	b	7f6c <getElementType+0xfc>
    7ed0:	ldr	r0, [fp, #-8]
    7ed4:	ldr	r1, [sp, #8]
    7ed8:	add	r1, r1, #20
    7edc:	ldr	r2, [sp, #4]
    7ee0:	movw	r3, #24
    7ee4:	bl	7694 <lookup>
    7ee8:	str	r0, [sp]
    7eec:	ldr	r0, [sp]
    7ef0:	movw	r1, #0
    7ef4:	cmp	r0, r1
    7ef8:	bne	7f08 <getElementType+0x98>
    7efc:	movw	r0, #0
    7f00:	str	r0, [fp, #-4]
    7f04:	b	7f6c <getElementType+0xfc>
    7f08:	ldr	r0, [sp]
    7f0c:	ldr	r0, [r0]
    7f10:	ldr	r1, [sp, #4]
    7f14:	cmp	r0, r1
    7f18:	beq	7f30 <getElementType+0xc0>
    7f1c:	ldr	r0, [sp, #8]
    7f20:	ldr	r0, [r0, #96]	; 0x60
    7f24:	ldr	r1, [sp, #8]
    7f28:	str	r0, [r1, #92]	; 0x5c
    7f2c:	b	7f64 <getElementType+0xf4>
    7f30:	ldr	r0, [sp, #8]
    7f34:	ldr	r0, [r0, #92]	; 0x5c
    7f38:	ldr	r1, [sp, #8]
    7f3c:	str	r0, [r1, #96]	; 0x60
    7f40:	ldr	r0, [fp, #-8]
    7f44:	ldr	r1, [sp]
    7f48:	bl	dc6c <setElementTypePrefix>
    7f4c:	cmp	r0, #0
    7f50:	bne	7f60 <getElementType+0xf0>
    7f54:	movw	r0, #0
    7f58:	str	r0, [fp, #-4]
    7f5c:	b	7f6c <getElementType+0xfc>
    7f60:	b	7f64 <getElementType+0xf4>
    7f64:	ldr	r0, [sp]
    7f68:	str	r0, [fp, #-4]
    7f6c:	ldr	r0, [fp, #-4]
    7f70:	mov	sp, fp
    7f74:	pop	{fp, pc}

00007f78 <getAttributeId>:
    7f78:	push	{fp, lr}
    7f7c:	mov	fp, sp
    7f80:	sub	sp, sp, #40	; 0x28
    7f84:	str	r0, [fp, #-8]
    7f88:	str	r1, [fp, #-12]
    7f8c:	str	r2, [fp, #-16]
    7f90:	str	r3, [sp, #20]
    7f94:	ldr	r0, [fp, #-8]
    7f98:	ldr	r0, [r0, #364]	; 0x16c
    7f9c:	str	r0, [sp, #16]
    7fa0:	ldr	r0, [sp, #16]
    7fa4:	ldr	r0, [r0, #92]	; 0x5c
    7fa8:	ldr	r1, [sp, #16]
    7fac:	ldr	r1, [r1, #88]	; 0x58
    7fb0:	cmp	r0, r1
    7fb4:	bne	7fd4 <getAttributeId+0x5c>
    7fb8:	ldr	r0, [sp, #16]
    7fbc:	add	r0, r0, #80	; 0x50
    7fc0:	bl	8764 <poolGrow>
    7fc4:	sxtb	r0, r0
    7fc8:	cmp	r0, #0
    7fcc:	bne	7fd4 <getAttributeId+0x5c>
    7fd0:	b	7ff0 <getAttributeId+0x78>
    7fd4:	ldr	r0, [sp, #16]
    7fd8:	ldr	r1, [r0, #92]	; 0x5c
    7fdc:	add	r2, r1, #1
    7fe0:	str	r2, [r0, #92]	; 0x5c
    7fe4:	movw	r0, #0
    7fe8:	strb	r0, [r1]
    7fec:	b	7ffc <getAttributeId+0x84>
    7ff0:	movw	r0, #0
    7ff4:	str	r0, [fp, #-4]
    7ff8:	b	8364 <getAttributeId+0x3ec>
    7ffc:	ldr	r0, [sp, #16]
    8000:	add	r0, r0, #80	; 0x50
    8004:	ldr	r1, [fp, #-12]
    8008:	ldr	r2, [fp, #-16]
    800c:	ldr	r3, [sp, #20]
    8010:	bl	75e4 <poolStoreString>
    8014:	str	r0, [sp, #8]
    8018:	ldr	r0, [sp, #8]
    801c:	movw	r1, #0
    8020:	cmp	r0, r1
    8024:	bne	8034 <getAttributeId+0xbc>
    8028:	movw	r0, #0
    802c:	str	r0, [fp, #-4]
    8030:	b	8364 <getAttributeId+0x3ec>
    8034:	ldr	r0, [sp, #8]
    8038:	add	r0, r0, #1
    803c:	str	r0, [sp, #8]
    8040:	ldr	r0, [fp, #-8]
    8044:	ldr	r1, [sp, #16]
    8048:	add	r1, r1, #40	; 0x28
    804c:	ldr	r2, [sp, #8]
    8050:	movw	r3, #12
    8054:	bl	7694 <lookup>
    8058:	str	r0, [sp, #12]
    805c:	ldr	r0, [sp, #12]
    8060:	movw	r1, #0
    8064:	cmp	r0, r1
    8068:	bne	8078 <getAttributeId+0x100>
    806c:	movw	r0, #0
    8070:	str	r0, [fp, #-4]
    8074:	b	8364 <getAttributeId+0x3ec>
    8078:	ldr	r0, [sp, #12]
    807c:	ldr	r0, [r0]
    8080:	ldr	r1, [sp, #8]
    8084:	cmp	r0, r1
    8088:	beq	80a0 <getAttributeId+0x128>
    808c:	ldr	r0, [sp, #16]
    8090:	ldr	r0, [r0, #96]	; 0x60
    8094:	ldr	r1, [sp, #16]
    8098:	str	r0, [r1, #92]	; 0x5c
    809c:	b	835c <getAttributeId+0x3e4>
    80a0:	ldr	r0, [sp, #16]
    80a4:	ldr	r0, [r0, #92]	; 0x5c
    80a8:	ldr	r1, [sp, #16]
    80ac:	str	r0, [r1, #96]	; 0x60
    80b0:	ldr	r0, [fp, #-8]
    80b4:	ldrsb	r0, [r0, #244]	; 0xf4
    80b8:	cmp	r0, #0
    80bc:	bne	80c4 <getAttributeId+0x14c>
    80c0:	b	8358 <getAttributeId+0x3e0>
    80c4:	ldr	r0, [sp, #8]
    80c8:	ldrb	r0, [r0]
    80cc:	cmp	r0, #120	; 0x78
    80d0:	bne	818c <getAttributeId+0x214>
    80d4:	ldr	r0, [sp, #8]
    80d8:	ldrb	r0, [r0, #1]
    80dc:	cmp	r0, #109	; 0x6d
    80e0:	bne	818c <getAttributeId+0x214>
    80e4:	ldr	r0, [sp, #8]
    80e8:	ldrb	r0, [r0, #2]
    80ec:	cmp	r0, #108	; 0x6c
    80f0:	bne	818c <getAttributeId+0x214>
    80f4:	ldr	r0, [sp, #8]
    80f8:	ldrb	r0, [r0, #3]
    80fc:	cmp	r0, #110	; 0x6e
    8100:	bne	818c <getAttributeId+0x214>
    8104:	ldr	r0, [sp, #8]
    8108:	ldrb	r0, [r0, #4]
    810c:	cmp	r0, #115	; 0x73
    8110:	bne	818c <getAttributeId+0x214>
    8114:	ldr	r0, [sp, #8]
    8118:	ldrb	r0, [r0, #5]
    811c:	cmp	r0, #0
    8120:	beq	8134 <getAttributeId+0x1bc>
    8124:	ldr	r0, [sp, #8]
    8128:	ldrb	r0, [r0, #5]
    812c:	cmp	r0, #58	; 0x3a
    8130:	bne	818c <getAttributeId+0x214>
    8134:	ldr	r0, [sp, #8]
    8138:	ldrb	r0, [r0, #5]
    813c:	cmp	r0, #0
    8140:	bne	8158 <getAttributeId+0x1e0>
    8144:	ldr	r0, [sp, #16]
    8148:	add	r0, r0, #152	; 0x98
    814c:	ldr	r1, [sp, #12]
    8150:	str	r0, [r1, #4]
    8154:	b	817c <getAttributeId+0x204>
    8158:	ldr	r0, [fp, #-8]
    815c:	ldr	r1, [sp, #16]
    8160:	add	r1, r1, #60	; 0x3c
    8164:	ldr	r2, [sp, #8]
    8168:	add	r2, r2, #6
    816c:	movw	r3, #8
    8170:	bl	7694 <lookup>
    8174:	ldr	r1, [sp, #12]
    8178:	str	r0, [r1, #4]
    817c:	ldr	r0, [sp, #12]
    8180:	movw	r1, #1
    8184:	strb	r1, [r0, #9]
    8188:	b	8354 <getAttributeId+0x3dc>
    818c:	movw	r0, #0
    8190:	str	r0, [sp, #4]
    8194:	ldr	r0, [sp, #8]
    8198:	ldr	r1, [sp, #4]
    819c:	add	r0, r0, r1
    81a0:	ldrsb	r0, [r0]
    81a4:	cmp	r0, #0
    81a8:	beq	8350 <getAttributeId+0x3d8>
    81ac:	ldr	r0, [sp, #8]
    81b0:	ldr	r1, [sp, #4]
    81b4:	add	r0, r0, r1
    81b8:	ldrb	r0, [r0]
    81bc:	cmp	r0, #58	; 0x3a
    81c0:	bne	833c <getAttributeId+0x3c4>
    81c4:	movw	r0, #0
    81c8:	str	r0, [sp]
    81cc:	ldr	r0, [sp]
    81d0:	ldr	r1, [sp, #4]
    81d4:	cmp	r0, r1
    81d8:	bge	8258 <getAttributeId+0x2e0>
    81dc:	ldr	r0, [sp, #16]
    81e0:	ldr	r0, [r0, #92]	; 0x5c
    81e4:	ldr	r1, [sp, #16]
    81e8:	ldr	r1, [r1, #88]	; 0x58
    81ec:	cmp	r0, r1
    81f0:	bne	8210 <getAttributeId+0x298>
    81f4:	ldr	r0, [sp, #16]
    81f8:	add	r0, r0, #80	; 0x50
    81fc:	bl	8764 <poolGrow>
    8200:	sxtb	r0, r0
    8204:	cmp	r0, #0
    8208:	bne	8210 <getAttributeId+0x298>
    820c:	b	8238 <getAttributeId+0x2c0>
    8210:	ldr	r0, [sp, #8]
    8214:	ldr	r1, [sp]
    8218:	add	r0, r0, r1
    821c:	ldrb	r0, [r0]
    8220:	ldr	r1, [sp, #16]
    8224:	ldr	r2, [r1, #92]	; 0x5c
    8228:	add	r3, r2, #1
    822c:	str	r3, [r1, #92]	; 0x5c
    8230:	strb	r0, [r2]
    8234:	b	8244 <getAttributeId+0x2cc>
    8238:	movw	r0, #0
    823c:	str	r0, [fp, #-4]
    8240:	b	8364 <getAttributeId+0x3ec>
    8244:	b	8248 <getAttributeId+0x2d0>
    8248:	ldr	r0, [sp]
    824c:	add	r0, r0, #1
    8250:	str	r0, [sp]
    8254:	b	81cc <getAttributeId+0x254>
    8258:	ldr	r0, [sp, #16]
    825c:	ldr	r0, [r0, #92]	; 0x5c
    8260:	ldr	r1, [sp, #16]
    8264:	ldr	r1, [r1, #88]	; 0x58
    8268:	cmp	r0, r1
    826c:	bne	828c <getAttributeId+0x314>
    8270:	ldr	r0, [sp, #16]
    8274:	add	r0, r0, #80	; 0x50
    8278:	bl	8764 <poolGrow>
    827c:	sxtb	r0, r0
    8280:	cmp	r0, #0
    8284:	bne	828c <getAttributeId+0x314>
    8288:	b	82a8 <getAttributeId+0x330>
    828c:	ldr	r0, [sp, #16]
    8290:	ldr	r1, [r0, #92]	; 0x5c
    8294:	add	r2, r1, #1
    8298:	str	r2, [r0, #92]	; 0x5c
    829c:	movw	r0, #0
    82a0:	strb	r0, [r1]
    82a4:	b	82b4 <getAttributeId+0x33c>
    82a8:	movw	r0, #0
    82ac:	str	r0, [fp, #-4]
    82b0:	b	8364 <getAttributeId+0x3ec>
    82b4:	ldr	r0, [fp, #-8]
    82b8:	ldr	r1, [sp, #16]
    82bc:	add	r1, r1, #60	; 0x3c
    82c0:	ldr	r2, [sp, #16]
    82c4:	ldr	r2, [r2, #96]	; 0x60
    82c8:	movw	r3, #8
    82cc:	bl	7694 <lookup>
    82d0:	ldr	r1, [sp, #12]
    82d4:	str	r0, [r1, #4]
    82d8:	ldr	r0, [sp, #12]
    82dc:	ldr	r0, [r0, #4]
    82e0:	movw	r1, #0
    82e4:	cmp	r0, r1
    82e8:	bne	82f8 <getAttributeId+0x380>
    82ec:	movw	r0, #0
    82f0:	str	r0, [fp, #-4]
    82f4:	b	8364 <getAttributeId+0x3ec>
    82f8:	ldr	r0, [sp, #12]
    82fc:	ldr	r0, [r0, #4]
    8300:	ldr	r0, [r0]
    8304:	ldr	r1, [sp, #16]
    8308:	ldr	r1, [r1, #96]	; 0x60
    830c:	cmp	r0, r1
    8310:	bne	8328 <getAttributeId+0x3b0>
    8314:	ldr	r0, [sp, #16]
    8318:	ldr	r0, [r0, #92]	; 0x5c
    831c:	ldr	r1, [sp, #16]
    8320:	str	r0, [r1, #96]	; 0x60
    8324:	b	8338 <getAttributeId+0x3c0>
    8328:	ldr	r0, [sp, #16]
    832c:	ldr	r0, [r0, #96]	; 0x60
    8330:	ldr	r1, [sp, #16]
    8334:	str	r0, [r1, #92]	; 0x5c
    8338:	b	8350 <getAttributeId+0x3d8>
    833c:	b	8340 <getAttributeId+0x3c8>
    8340:	ldr	r0, [sp, #4]
    8344:	add	r0, r0, #1
    8348:	str	r0, [sp, #4]
    834c:	b	8194 <getAttributeId+0x21c>
    8350:	b	8354 <getAttributeId+0x3dc>
    8354:	b	8358 <getAttributeId+0x3e0>
    8358:	b	835c <getAttributeId+0x3e4>
    835c:	ldr	r0, [sp, #12]
    8360:	str	r0, [fp, #-4]
    8364:	ldr	r0, [fp, #-4]
    8368:	mov	sp, fp
    836c:	pop	{fp, pc}

00008370 <poolAppendString>:
    8370:	push	{fp, lr}
    8374:	mov	fp, sp
    8378:	sub	sp, sp, #16
    837c:	str	r0, [sp, #8]
    8380:	str	r1, [sp, #4]
    8384:	ldr	r0, [sp, #4]
    8388:	ldrsb	r0, [r0]
    838c:	cmp	r0, #0
    8390:	beq	8400 <poolAppendString+0x90>
    8394:	ldr	r0, [sp, #8]
    8398:	ldr	r0, [r0, #12]
    839c:	ldr	r1, [sp, #8]
    83a0:	ldr	r1, [r1, #8]
    83a4:	cmp	r0, r1
    83a8:	bne	83c4 <poolAppendString+0x54>
    83ac:	ldr	r0, [sp, #8]
    83b0:	bl	8764 <poolGrow>
    83b4:	sxtb	r0, r0
    83b8:	cmp	r0, #0
    83bc:	bne	83c4 <poolAppendString+0x54>
    83c0:	b	83e4 <poolAppendString+0x74>
    83c4:	ldr	r0, [sp, #4]
    83c8:	ldrb	r0, [r0]
    83cc:	ldr	r1, [sp, #8]
    83d0:	ldr	r2, [r1, #12]
    83d4:	add	r3, r2, #1
    83d8:	str	r3, [r1, #12]
    83dc:	strb	r0, [r2]
    83e0:	b	83f0 <poolAppendString+0x80>
    83e4:	movw	r0, #0
    83e8:	str	r0, [fp, #-4]
    83ec:	b	840c <poolAppendString+0x9c>
    83f0:	ldr	r0, [sp, #4]
    83f4:	add	r0, r0, #1
    83f8:	str	r0, [sp, #4]
    83fc:	b	8384 <poolAppendString+0x14>
    8400:	ldr	r0, [sp, #8]
    8404:	ldr	r0, [r0, #16]
    8408:	str	r0, [fp, #-4]
    840c:	ldr	r0, [fp, #-4]
    8410:	mov	sp, fp
    8414:	pop	{fp, pc}

00008418 <poolAppend>:
    8418:	push	{fp, lr}
    841c:	mov	fp, sp
    8420:	sub	sp, sp, #32
    8424:	str	r0, [fp, #-8]
    8428:	str	r1, [fp, #-12]
    842c:	str	r2, [sp, #16]
    8430:	str	r3, [sp, #12]
    8434:	ldr	r0, [fp, #-8]
    8438:	ldr	r0, [r0, #12]
    843c:	movw	r1, #0
    8440:	cmp	r0, r1
    8444:	bne	8468 <poolAppend+0x50>
    8448:	ldr	r0, [fp, #-8]
    844c:	bl	8764 <poolGrow>
    8450:	sxtb	r0, r0
    8454:	cmp	r0, #0
    8458:	bne	8468 <poolAppend+0x50>
    845c:	movw	r0, #0
    8460:	str	r0, [fp, #-4]
    8464:	b	84e8 <poolAppend+0xd0>
    8468:	b	846c <poolAppend+0x54>
    846c:	ldr	r0, [fp, #-12]
    8470:	ldr	r0, [r0, #60]	; 0x3c
    8474:	ldr	r1, [fp, #-12]
    8478:	ldr	r2, [sp, #12]
    847c:	ldr	r3, [fp, #-8]
    8480:	add	r3, r3, #12
    8484:	ldr	ip, [fp, #-8]
    8488:	ldr	ip, [ip, #8]
    848c:	str	r0, [sp, #8]
    8490:	mov	r0, r1
    8494:	add	r1, sp, #16
    8498:	str	ip, [sp]
    849c:	ldr	ip, [sp, #8]
    84a0:	blx	ip
    84a4:	ldr	r0, [sp, #16]
    84a8:	ldr	r1, [sp, #12]
    84ac:	cmp	r0, r1
    84b0:	bne	84b8 <poolAppend+0xa0>
    84b4:	b	84dc <poolAppend+0xc4>
    84b8:	ldr	r0, [fp, #-8]
    84bc:	bl	8764 <poolGrow>
    84c0:	sxtb	r0, r0
    84c4:	cmp	r0, #0
    84c8:	bne	84d8 <poolAppend+0xc0>
    84cc:	movw	r0, #0
    84d0:	str	r0, [fp, #-4]
    84d4:	b	84e8 <poolAppend+0xd0>
    84d8:	b	846c <poolAppend+0x54>
    84dc:	ldr	r0, [fp, #-8]
    84e0:	ldr	r0, [r0, #16]
    84e4:	str	r0, [fp, #-4]
    84e8:	ldr	r0, [fp, #-4]
    84ec:	mov	sp, fp
    84f0:	pop	{fp, pc}

000084f4 <defineAttribute>:
    84f4:	push	{fp, lr}
    84f8:	mov	fp, sp
    84fc:	sub	sp, sp, #48	; 0x30
    8500:	ldr	ip, [fp, #12]
    8504:	ldr	lr, [fp, #8]
    8508:	str	r0, [fp, #-8]
    850c:	str	r1, [fp, #-12]
    8510:	strb	r2, [fp, #-13]
    8514:	strb	r3, [fp, #-14]
    8518:	ldr	r0, [fp, #8]
    851c:	movw	r1, #0
    8520:	cmp	r0, r1
    8524:	str	lr, [sp, #12]
    8528:	str	ip, [sp, #8]
    852c:	bne	853c <defineAttribute+0x48>
    8530:	ldrb	r0, [fp, #-14]
    8534:	cmp	r0, #0
    8538:	beq	85e0 <defineAttribute+0xec>
    853c:	movw	r0, #0
    8540:	str	r0, [sp, #24]
    8544:	ldr	r0, [sp, #24]
    8548:	ldr	r1, [fp, #-8]
    854c:	ldr	r1, [r1, #12]
    8550:	cmp	r0, r1
    8554:	bge	85a0 <defineAttribute+0xac>
    8558:	ldr	r0, [fp, #-12]
    855c:	ldr	r1, [fp, #-8]
    8560:	ldr	r1, [r1, #20]
    8564:	ldr	r2, [sp, #24]
    8568:	movw	r3, #12
    856c:	mul	r2, r2, r3
    8570:	add	r1, r1, r2
    8574:	ldr	r1, [r1]
    8578:	cmp	r0, r1
    857c:	bne	858c <defineAttribute+0x98>
    8580:	movw	r0, #1
    8584:	str	r0, [fp, #-4]
    8588:	b	8758 <defineAttribute+0x264>
    858c:	b	8590 <defineAttribute+0x9c>
    8590:	ldr	r0, [sp, #24]
    8594:	add	r0, r0, #1
    8598:	str	r0, [sp, #24]
    859c:	b	8544 <defineAttribute+0x50>
    85a0:	ldrb	r0, [fp, #-14]
    85a4:	cmp	r0, #0
    85a8:	beq	85dc <defineAttribute+0xe8>
    85ac:	ldr	r0, [fp, #-8]
    85b0:	ldr	r0, [r0, #8]
    85b4:	movw	r1, #0
    85b8:	cmp	r0, r1
    85bc:	bne	85dc <defineAttribute+0xe8>
    85c0:	ldr	r0, [fp, #-12]
    85c4:	ldrsb	r0, [r0, #9]
    85c8:	cmp	r0, #0
    85cc:	bne	85dc <defineAttribute+0xe8>
    85d0:	ldr	r0, [fp, #-12]
    85d4:	ldr	r1, [fp, #-8]
    85d8:	str	r0, [r1, #8]
    85dc:	b	85e0 <defineAttribute+0xec>
    85e0:	ldr	r0, [fp, #-8]
    85e4:	ldr	r0, [r0, #12]
    85e8:	ldr	r1, [fp, #-8]
    85ec:	ldr	r1, [r1, #16]
    85f0:	cmp	r0, r1
    85f4:	bne	86e4 <defineAttribute+0x1f0>
    85f8:	ldr	r0, [fp, #-8]
    85fc:	ldr	r0, [r0, #16]
    8600:	cmp	r0, #0
    8604:	bne	8668 <defineAttribute+0x174>
    8608:	ldr	r0, [fp, #-8]
    860c:	movw	r1, #8
    8610:	str	r1, [r0, #16]
    8614:	ldr	r0, [fp, #12]
    8618:	ldr	r0, [r0, #12]
    861c:	ldr	r1, [fp, #-8]
    8620:	ldr	r1, [r1, #16]
    8624:	movw	r2, #12
    8628:	mul	r1, r1, r2
    862c:	str	r0, [sp, #4]
    8630:	mov	r0, r1
    8634:	ldr	r1, [sp, #4]
    8638:	blx	r1
    863c:	ldr	r1, [fp, #-8]
    8640:	str	r0, [r1, #20]
    8644:	ldr	r0, [fp, #-8]
    8648:	ldr	r0, [r0, #20]
    864c:	movw	r1, #0
    8650:	cmp	r0, r1
    8654:	bne	8664 <defineAttribute+0x170>
    8658:	movw	r0, #0
    865c:	str	r0, [fp, #-4]
    8660:	b	8758 <defineAttribute+0x264>
    8664:	b	86e0 <defineAttribute+0x1ec>
    8668:	ldr	r0, [fp, #-8]
    866c:	ldr	r0, [r0, #16]
    8670:	lsl	r0, r0, #1
    8674:	str	r0, [sp, #16]
    8678:	ldr	r0, [fp, #12]
    867c:	ldr	r0, [r0, #16]
    8680:	ldr	r1, [fp, #-8]
    8684:	ldr	r1, [r1, #20]
    8688:	ldr	r2, [sp, #16]
    868c:	movw	r3, #12
    8690:	mul	r2, r2, r3
    8694:	str	r0, [sp]
    8698:	mov	r0, r1
    869c:	mov	r1, r2
    86a0:	ldr	r2, [sp]
    86a4:	blx	r2
    86a8:	str	r0, [sp, #20]
    86ac:	ldr	r0, [sp, #20]
    86b0:	movw	r1, #0
    86b4:	cmp	r0, r1
    86b8:	bne	86c8 <defineAttribute+0x1d4>
    86bc:	movw	r0, #0
    86c0:	str	r0, [fp, #-4]
    86c4:	b	8758 <defineAttribute+0x264>
    86c8:	ldr	r0, [sp, #16]
    86cc:	ldr	r1, [fp, #-8]
    86d0:	str	r0, [r1, #16]
    86d4:	ldr	r0, [sp, #20]
    86d8:	ldr	r1, [fp, #-8]
    86dc:	str	r0, [r1, #20]
    86e0:	b	86e4 <defineAttribute+0x1f0>
    86e4:	ldr	r0, [fp, #-8]
    86e8:	ldr	r0, [r0, #20]
    86ec:	ldr	r1, [fp, #-8]
    86f0:	ldr	r1, [r1, #12]
    86f4:	movw	r2, #12
    86f8:	mul	r1, r1, r2
    86fc:	add	r0, r0, r1
    8700:	str	r0, [fp, #-20]	; 0xffffffec
    8704:	ldr	r0, [fp, #-12]
    8708:	ldr	r1, [fp, #-20]	; 0xffffffec
    870c:	str	r0, [r1]
    8710:	ldr	r0, [fp, #8]
    8714:	ldr	r1, [fp, #-20]	; 0xffffffec
    8718:	str	r0, [r1, #8]
    871c:	ldrb	r0, [fp, #-13]
    8720:	ldr	r1, [fp, #-20]	; 0xffffffec
    8724:	strb	r0, [r1, #4]
    8728:	ldrsb	r0, [fp, #-13]
    872c:	cmp	r0, #0
    8730:	bne	8740 <defineAttribute+0x24c>
    8734:	ldr	r0, [fp, #-12]
    8738:	movw	r1, #1
    873c:	strb	r1, [r0, #8]
    8740:	ldr	r0, [fp, #-8]
    8744:	ldr	r1, [r0, #12]
    8748:	add	r1, r1, #1
    874c:	str	r1, [r0, #12]
    8750:	movw	r0, #1
    8754:	str	r0, [fp, #-4]
    8758:	ldr	r0, [fp, #-4]
    875c:	mov	sp, fp
    8760:	pop	{fp, pc}

00008764 <poolGrow>:
    8764:	push	{fp, lr}
    8768:	mov	fp, sp
    876c:	sub	sp, sp, #56	; 0x38
    8770:	str	r0, [fp, #-8]
    8774:	ldr	r0, [fp, #-8]
    8778:	ldr	r0, [r0, #4]
    877c:	movw	r1, #0
    8780:	cmp	r0, r1
    8784:	beq	8920 <poolGrow+0x1bc>
    8788:	ldr	r0, [fp, #-8]
    878c:	ldr	r0, [r0, #16]
    8790:	movw	r1, #0
    8794:	cmp	r0, r1
    8798:	bne	8820 <poolGrow+0xbc>
    879c:	ldr	r0, [fp, #-8]
    87a0:	ldr	r0, [r0, #4]
    87a4:	ldr	r1, [fp, #-8]
    87a8:	str	r0, [r1]
    87ac:	ldr	r0, [fp, #-8]
    87b0:	ldr	r0, [r0, #4]
    87b4:	ldr	r0, [r0]
    87b8:	ldr	r1, [fp, #-8]
    87bc:	str	r0, [r1, #4]
    87c0:	ldr	r0, [fp, #-8]
    87c4:	ldr	r0, [r0]
    87c8:	movw	r1, #0
    87cc:	str	r1, [r0]
    87d0:	ldr	r0, [fp, #-8]
    87d4:	ldr	r0, [r0]
    87d8:	add	r0, r0, #8
    87dc:	ldr	r1, [fp, #-8]
    87e0:	str	r0, [r1, #16]
    87e4:	ldr	r0, [fp, #-8]
    87e8:	ldr	r0, [r0, #16]
    87ec:	ldr	r1, [fp, #-8]
    87f0:	ldr	r1, [r1]
    87f4:	ldr	r1, [r1, #4]
    87f8:	add	r0, r0, r1
    87fc:	ldr	r1, [fp, #-8]
    8800:	str	r0, [r1, #8]
    8804:	ldr	r0, [fp, #-8]
    8808:	ldr	r0, [r0, #16]
    880c:	ldr	r1, [fp, #-8]
    8810:	str	r0, [r1, #12]
    8814:	movw	r0, #1
    8818:	strb	r0, [fp, #-1]
    881c:	b	8b78 <poolGrow+0x414>
    8820:	ldr	r0, [fp, #-8]
    8824:	ldr	r0, [r0, #8]
    8828:	ldr	r1, [fp, #-8]
    882c:	ldr	r1, [r1, #16]
    8830:	sub	r0, r0, r1
    8834:	ldr	r1, [fp, #-8]
    8838:	ldr	r1, [r1, #4]
    883c:	ldr	r1, [r1, #4]
    8840:	cmp	r0, r1
    8844:	bge	891c <poolGrow+0x1b8>
    8848:	ldr	r0, [fp, #-8]
    884c:	ldr	r0, [r0, #4]
    8850:	ldr	r0, [r0]
    8854:	str	r0, [fp, #-12]
    8858:	ldr	r0, [fp, #-8]
    885c:	ldr	r1, [r0]
    8860:	ldr	r0, [r0, #4]
    8864:	str	r1, [r0]
    8868:	ldr	r0, [fp, #-8]
    886c:	ldr	r1, [r0, #4]
    8870:	str	r1, [r0]
    8874:	ldr	r0, [fp, #-12]
    8878:	ldr	r1, [fp, #-8]
    887c:	str	r0, [r1, #4]
    8880:	ldr	r0, [fp, #-8]
    8884:	ldr	r1, [r0]
    8888:	ldr	r2, [r0, #8]
    888c:	ldr	r0, [r0, #16]
    8890:	add	r1, r1, #8
    8894:	sub	r2, r2, r0
    8898:	mov	r3, r2
    889c:	str	r0, [sp, #24]
    88a0:	mov	r0, r1
    88a4:	ldr	r1, [sp, #24]
    88a8:	str	r3, [sp, #20]
    88ac:	bl	0 <memcpy>
    88b0:	ldr	r0, [fp, #-8]
    88b4:	ldr	r0, [r0]
    88b8:	add	r0, r0, #8
    88bc:	ldr	r1, [fp, #-8]
    88c0:	ldr	r1, [r1, #12]
    88c4:	ldr	r2, [fp, #-8]
    88c8:	ldr	r2, [r2, #16]
    88cc:	sub	r1, r1, r2
    88d0:	add	r0, r0, r1
    88d4:	ldr	r1, [fp, #-8]
    88d8:	str	r0, [r1, #12]
    88dc:	ldr	r0, [fp, #-8]
    88e0:	ldr	r0, [r0]
    88e4:	add	r0, r0, #8
    88e8:	ldr	r1, [fp, #-8]
    88ec:	str	r0, [r1, #16]
    88f0:	ldr	r0, [fp, #-8]
    88f4:	ldr	r0, [r0, #16]
    88f8:	ldr	r1, [fp, #-8]
    88fc:	ldr	r1, [r1]
    8900:	ldr	r1, [r1, #4]
    8904:	add	r0, r0, r1
    8908:	ldr	r1, [fp, #-8]
    890c:	str	r0, [r1, #8]
    8910:	movw	r0, #1
    8914:	strb	r0, [fp, #-1]
    8918:	b	8b78 <poolGrow+0x414>
    891c:	b	8920 <poolGrow+0x1bc>
    8920:	ldr	r0, [fp, #-8]
    8924:	ldr	r0, [r0]
    8928:	movw	r1, #0
    892c:	cmp	r0, r1
    8930:	beq	8a34 <poolGrow+0x2d0>
    8934:	ldr	r0, [fp, #-8]
    8938:	ldr	r0, [r0, #16]
    893c:	ldr	r1, [fp, #-8]
    8940:	ldr	r1, [r1]
    8944:	add	r1, r1, #8
    8948:	cmp	r0, r1
    894c:	bne	8a34 <poolGrow+0x2d0>
    8950:	ldr	r0, [fp, #-8]
    8954:	ldr	r1, [r0, #8]
    8958:	ldr	r0, [r0, #16]
    895c:	sub	r0, r1, r0
    8960:	lsl	r0, r0, #1
    8964:	str	r0, [fp, #-16]
    8968:	ldr	r0, [fp, #-8]
    896c:	ldr	r1, [r0]
    8970:	ldr	r0, [r0, #20]
    8974:	ldr	r0, [r0, #4]
    8978:	ldr	r2, [fp, #-16]
    897c:	mov	r3, r2
    8980:	add	r2, r2, #8
    8984:	str	r0, [sp, #16]
    8988:	mov	r0, r1
    898c:	mov	r1, r2
    8990:	ldr	r2, [sp, #16]
    8994:	str	r3, [sp, #12]
    8998:	blx	r2
    899c:	str	r0, [fp, #-20]	; 0xffffffec
    89a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    89a4:	movw	r1, #0
    89a8:	cmp	r0, r1
    89ac:	bne	89bc <poolGrow+0x258>
    89b0:	movw	r0, #0
    89b4:	strb	r0, [fp, #-1]
    89b8:	b	8b78 <poolGrow+0x414>
    89bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    89c0:	ldr	r1, [fp, #-8]
    89c4:	str	r0, [r1]
    89c8:	ldr	r0, [fp, #-16]
    89cc:	ldr	r1, [fp, #-8]
    89d0:	ldr	r1, [r1]
    89d4:	str	r0, [r1, #4]
    89d8:	ldr	r0, [fp, #-8]
    89dc:	ldr	r0, [r0]
    89e0:	add	r0, r0, #8
    89e4:	ldr	r1, [fp, #-8]
    89e8:	ldr	r1, [r1, #12]
    89ec:	ldr	r2, [fp, #-8]
    89f0:	ldr	r2, [r2, #16]
    89f4:	sub	r1, r1, r2
    89f8:	add	r0, r0, r1
    89fc:	ldr	r1, [fp, #-8]
    8a00:	str	r0, [r1, #12]
    8a04:	ldr	r0, [fp, #-8]
    8a08:	ldr	r0, [r0]
    8a0c:	add	r0, r0, #8
    8a10:	ldr	r1, [fp, #-8]
    8a14:	str	r0, [r1, #16]
    8a18:	ldr	r0, [fp, #-8]
    8a1c:	ldr	r0, [r0, #16]
    8a20:	ldr	r1, [fp, #-16]
    8a24:	add	r0, r0, r1
    8a28:	ldr	r1, [fp, #-8]
    8a2c:	str	r0, [r1, #8]
    8a30:	b	8b70 <poolGrow+0x40c>
    8a34:	ldr	r0, [fp, #-8]
    8a38:	ldr	r0, [r0, #8]
    8a3c:	ldr	r1, [fp, #-8]
    8a40:	ldr	r1, [r1, #16]
    8a44:	sub	r0, r0, r1
    8a48:	str	r0, [sp, #28]
    8a4c:	ldr	r0, [sp, #28]
    8a50:	cmp	r0, #1024	; 0x400
    8a54:	bge	8a64 <poolGrow+0x300>
    8a58:	movw	r0, #1024	; 0x400
    8a5c:	str	r0, [sp, #28]
    8a60:	b	8a70 <poolGrow+0x30c>
    8a64:	ldr	r0, [sp, #28]
    8a68:	lsl	r0, r0, #1
    8a6c:	str	r0, [sp, #28]
    8a70:	ldr	r0, [fp, #-8]
    8a74:	ldr	r0, [r0, #20]
    8a78:	ldr	r0, [r0]
    8a7c:	ldr	r1, [sp, #28]
    8a80:	mov	r2, r1
    8a84:	add	r1, r1, #8
    8a88:	str	r0, [sp, #8]
    8a8c:	mov	r0, r1
    8a90:	ldr	r1, [sp, #8]
    8a94:	str	r2, [sp, #4]
    8a98:	blx	r1
    8a9c:	str	r0, [fp, #-24]	; 0xffffffe8
    8aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8aa4:	movw	r1, #0
    8aa8:	cmp	r0, r1
    8aac:	bne	8abc <poolGrow+0x358>
    8ab0:	movw	r0, #0
    8ab4:	strb	r0, [fp, #-1]
    8ab8:	b	8b78 <poolGrow+0x414>
    8abc:	ldr	r0, [sp, #28]
    8ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8ac4:	str	r0, [r1, #4]
    8ac8:	ldr	r0, [fp, #-8]
    8acc:	ldr	r0, [r0]
    8ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8ad4:	str	r0, [r1]
    8ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8adc:	ldr	r1, [fp, #-8]
    8ae0:	str	r0, [r1]
    8ae4:	ldr	r0, [fp, #-8]
    8ae8:	ldr	r0, [r0, #12]
    8aec:	ldr	r1, [fp, #-8]
    8af0:	ldr	r1, [r1, #16]
    8af4:	cmp	r0, r1
    8af8:	beq	8b20 <poolGrow+0x3bc>
    8afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8b00:	add	r0, r0, #8
    8b04:	ldr	r1, [fp, #-8]
    8b08:	ldr	r2, [r1, #12]
    8b0c:	ldr	r1, [r1, #16]
    8b10:	sub	r2, r2, r1
    8b14:	mov	r3, r2
    8b18:	str	r3, [sp]
    8b1c:	bl	0 <memcpy>
    8b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8b24:	add	r0, r0, #8
    8b28:	ldr	r1, [fp, #-8]
    8b2c:	ldr	r1, [r1, #12]
    8b30:	ldr	r2, [fp, #-8]
    8b34:	ldr	r2, [r2, #16]
    8b38:	sub	r1, r1, r2
    8b3c:	add	r0, r0, r1
    8b40:	ldr	r1, [fp, #-8]
    8b44:	str	r0, [r1, #12]
    8b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8b4c:	add	r0, r0, #8
    8b50:	ldr	r1, [fp, #-8]
    8b54:	str	r0, [r1, #16]
    8b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8b5c:	add	r0, r0, #8
    8b60:	ldr	r1, [sp, #28]
    8b64:	add	r0, r0, r1
    8b68:	ldr	r1, [fp, #-8]
    8b6c:	str	r0, [r1, #8]
    8b70:	movw	r0, #1
    8b74:	strb	r0, [fp, #-1]
    8b78:	ldrb	r0, [fp, #-1]
    8b7c:	mov	sp, fp
    8b80:	pop	{fp, pc}

00008b84 <storeAttributeValue>:
    8b84:	push	{r4, r5, fp, lr}
    8b88:	add	fp, sp, #8
    8b8c:	sub	sp, sp, #40	; 0x28
    8b90:	ldr	ip, [fp, #12]
    8b94:	ldr	lr, [fp, #8]
    8b98:	str	r0, [fp, #-16]
    8b9c:	str	r1, [fp, #-20]	; 0xffffffec
    8ba0:	strb	r2, [fp, #-21]	; 0xffffffeb
    8ba4:	str	r3, [sp, #20]
    8ba8:	ldr	r0, [fp, #-16]
    8bac:	ldr	r1, [fp, #-20]	; 0xffffffec
    8bb0:	ldrb	r2, [fp, #-21]	; 0xffffffeb
    8bb4:	ldr	r3, [sp, #20]
    8bb8:	ldr	r4, [fp, #8]
    8bbc:	ldr	r5, [fp, #12]
    8bc0:	and	r2, r2, #255	; 0xff
    8bc4:	str	r4, [sp]
    8bc8:	str	r5, [sp, #4]
    8bcc:	str	lr, [sp, #12]
    8bd0:	str	ip, [sp, #8]
    8bd4:	bl	e4dc <appendAttributeValue>
    8bd8:	str	r0, [sp, #16]
    8bdc:	ldr	r0, [sp, #16]
    8be0:	cmp	r0, #0
    8be4:	beq	8bf4 <storeAttributeValue+0x70>
    8be8:	ldr	r0, [sp, #16]
    8bec:	str	r0, [fp, #-12]
    8bf0:	b	8cac <storeAttributeValue+0x128>
    8bf4:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    8bf8:	cmp	r0, #0
    8bfc:	bne	8c4c <storeAttributeValue+0xc8>
    8c00:	ldr	r0, [fp, #12]
    8c04:	ldr	r0, [r0, #12]
    8c08:	ldr	r1, [fp, #12]
    8c0c:	ldr	r1, [r1, #16]
    8c10:	sub	r0, r0, r1
    8c14:	cmp	r0, #0
    8c18:	beq	8c4c <storeAttributeValue+0xc8>
    8c1c:	ldr	r0, [fp, #12]
    8c20:	ldr	r0, [r0, #12]
    8c24:	mvn	r1, #0
    8c28:	add	r0, r0, r1
    8c2c:	ldrb	r0, [r0]
    8c30:	cmp	r0, #32
    8c34:	bne	8c4c <storeAttributeValue+0xc8>
    8c38:	ldr	r0, [fp, #12]
    8c3c:	ldr	r1, [r0, #12]
    8c40:	mvn	r2, #0
    8c44:	add	r1, r1, r2
    8c48:	str	r1, [r0, #12]
    8c4c:	ldr	r0, [fp, #12]
    8c50:	ldr	r0, [r0, #12]
    8c54:	ldr	r1, [fp, #12]
    8c58:	ldr	r1, [r1, #8]
    8c5c:	cmp	r0, r1
    8c60:	bne	8c7c <storeAttributeValue+0xf8>
    8c64:	ldr	r0, [fp, #12]
    8c68:	bl	8764 <poolGrow>
    8c6c:	sxtb	r0, r0
    8c70:	cmp	r0, #0
    8c74:	bne	8c7c <storeAttributeValue+0xf8>
    8c78:	b	8c98 <storeAttributeValue+0x114>
    8c7c:	ldr	r0, [fp, #12]
    8c80:	ldr	r1, [r0, #12]
    8c84:	add	r2, r1, #1
    8c88:	str	r2, [r0, #12]
    8c8c:	movw	r0, #0
    8c90:	strb	r0, [r1]
    8c94:	b	8ca4 <storeAttributeValue+0x120>
    8c98:	movw	r0, #1
    8c9c:	str	r0, [fp, #-12]
    8ca0:	b	8cac <storeAttributeValue+0x128>
    8ca4:	movw	r0, #0
    8ca8:	str	r0, [fp, #-12]
    8cac:	ldr	r0, [fp, #-12]
    8cb0:	sub	sp, fp, #8
    8cb4:	pop	{r4, r5, fp, pc}

00008cb8 <storeEntityValue>:
    8cb8:	push	{fp, lr}
    8cbc:	mov	fp, sp
    8cc0:	sub	sp, sp, #88	; 0x58
    8cc4:	str	r0, [fp, #-8]
    8cc8:	str	r1, [fp, #-12]
    8ccc:	str	r2, [fp, #-16]
    8cd0:	str	r3, [fp, #-20]	; 0xffffffec
    8cd4:	ldr	r0, [fp, #-8]
    8cd8:	ldr	r0, [r0, #364]	; 0x16c
    8cdc:	str	r0, [fp, #-24]	; 0xffffffe8
    8ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ce4:	add	r0, r0, #104	; 0x68
    8ce8:	str	r0, [fp, #-28]	; 0xffffffe4
    8cec:	movw	r0, #0
    8cf0:	str	r0, [fp, #-32]	; 0xffffffe0
    8cf4:	ldr	r1, [fp, #-8]
    8cf8:	ldr	r1, [r1, #284]	; 0x11c
    8cfc:	str	r1, [fp, #-36]	; 0xffffffdc
    8d00:	ldr	r1, [fp, #-8]
    8d04:	movw	r2, #1
    8d08:	str	r2, [r1, #284]	; 0x11c
    8d0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8d10:	ldr	r1, [r1]
    8d14:	cmp	r1, r0
    8d18:	bne	8d40 <storeEntityValue+0x88>
    8d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d20:	bl	8764 <poolGrow>
    8d24:	sxtb	r0, r0
    8d28:	cmp	r0, #0
    8d2c:	bne	8d3c <storeEntityValue+0x84>
    8d30:	movw	r0, #1
    8d34:	str	r0, [fp, #-4]
    8d38:	b	92f8 <storeEntityValue+0x640>
    8d3c:	b	8d40 <storeEntityValue+0x88>
    8d40:	b	8d44 <storeEntityValue+0x8c>
    8d44:	ldr	r0, [fp, #-12]
    8d48:	ldr	r1, [r0, #20]
    8d4c:	ldr	r2, [fp, #-16]
    8d50:	ldr	r3, [fp, #-20]	; 0xffffffec
    8d54:	sub	ip, fp, #40	; 0x28
    8d58:	str	r1, [sp, #20]
    8d5c:	mov	r1, r2
    8d60:	mov	r2, r3
    8d64:	mov	r3, ip
    8d68:	ldr	ip, [sp, #20]
    8d6c:	blx	ip
    8d70:	str	r0, [sp, #44]	; 0x2c
    8d74:	ldr	r0, [sp, #44]	; 0x2c
    8d78:	add	r0, r0, #4
    8d7c:	cmp	r0, #32
    8d80:	str	r0, [sp, #16]
    8d84:	bhi	92ac <storeEntityValue+0x5f4>
    8d88:	add	r0, pc, #8
    8d8c:	ldr	r1, [sp, #16]
    8d90:	ldr	r0, [r0, r1, lsl #2]
    8d94:	mov	pc, r0
    8d98:	.word	0x00009080
    8d9c:	.word	0x000090bc
    8da0:	.word	0x000092ac
    8da4:	.word	0x00009254
    8da8:	.word	0x00009280
    8dac:	.word	0x000092ac
    8db0:	.word	0x000092ac
    8db4:	.word	0x000092ac
    8db8:	.word	0x000092ac
    8dbc:	.word	0x000092ac
    8dc0:	.word	0x0000908c
    8dc4:	.word	0x000090d0
    8dc8:	.word	0x000092ac
    8dcc:	.word	0x0000908c
    8dd0:	.word	0x00009124
    8dd4:	.word	0x000092ac
    8dd8:	.word	0x000092ac
    8ddc:	.word	0x000092ac
    8de0:	.word	0x000092ac
    8de4:	.word	0x000092ac
    8de8:	.word	0x000092ac
    8dec:	.word	0x000092ac
    8df0:	.word	0x000092ac
    8df4:	.word	0x000092ac
    8df8:	.word	0x000092ac
    8dfc:	.word	0x000092ac
    8e00:	.word	0x000092ac
    8e04:	.word	0x000092ac
    8e08:	.word	0x000092ac
    8e0c:	.word	0x000092ac
    8e10:	.word	0x000092ac
    8e14:	.word	0x000092ac
    8e18:	.word	0x00008e1c
    8e1c:	ldr	r0, [fp, #-8]
    8e20:	ldrb	r0, [r0, #504]	; 0x1f8
    8e24:	cmp	r0, #0
    8e28:	bne	8e40 <storeEntityValue+0x188>
    8e2c:	ldr	r0, [fp, #-12]
    8e30:	ldr	r1, [fp, #-8]
    8e34:	ldr	r1, [r1, #152]	; 0x98
    8e38:	cmp	r0, r1
    8e3c:	beq	9068 <storeEntityValue+0x3b0>
    8e40:	ldr	r0, [fp, #-8]
    8e44:	add	r0, r0, #432	; 0x1b0
    8e48:	ldr	r1, [fp, #-12]
    8e4c:	ldr	r2, [fp, #-16]
    8e50:	ldr	r3, [fp, #-12]
    8e54:	ldr	r3, [r3, #68]	; 0x44
    8e58:	add	r2, r2, r3
    8e5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e60:	ldr	ip, [fp, #-12]
    8e64:	ldr	ip, [ip, #68]	; 0x44
    8e68:	movw	lr, #0
    8e6c:	sub	ip, lr, ip
    8e70:	add	r3, r3, ip
    8e74:	bl	75e4 <poolStoreString>
    8e78:	str	r0, [sp, #40]	; 0x28
    8e7c:	ldr	r0, [sp, #40]	; 0x28
    8e80:	movw	r1, #0
    8e84:	cmp	r0, r1
    8e88:	bne	8e98 <storeEntityValue+0x1e0>
    8e8c:	movw	r0, #1
    8e90:	str	r0, [fp, #-32]	; 0xffffffe0
    8e94:	b	92e4 <storeEntityValue+0x62c>
    8e98:	ldr	r0, [fp, #-8]
    8e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8ea0:	add	r1, r1, #132	; 0x84
    8ea4:	ldr	r2, [sp, #40]	; 0x28
    8ea8:	movw	r3, #0
    8eac:	bl	7694 <lookup>
    8eb0:	str	r0, [sp, #36]	; 0x24
    8eb4:	ldr	r0, [fp, #-8]
    8eb8:	ldr	r0, [r0, #448]	; 0x1c0
    8ebc:	ldr	r1, [fp, #-8]
    8ec0:	str	r0, [r1, #444]	; 0x1bc
    8ec4:	ldr	r0, [sp, #36]	; 0x24
    8ec8:	movw	r1, #0
    8ecc:	cmp	r0, r1
    8ed0:	bne	8ee8 <storeEntityValue+0x230>
    8ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ed8:	ldrb	r0, [r0, #130]	; 0x82
    8edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8ee0:	strb	r0, [r1, #128]	; 0x80
    8ee4:	b	92e4 <storeEntityValue+0x62c>
    8ee8:	ldr	r0, [sp, #36]	; 0x24
    8eec:	ldrsb	r0, [r0, #32]
    8ef0:	cmp	r0, #0
    8ef4:	beq	8f24 <storeEntityValue+0x26c>
    8ef8:	ldr	r0, [fp, #-12]
    8efc:	ldr	r1, [fp, #-8]
    8f00:	ldr	r1, [r1, #152]	; 0x98
    8f04:	cmp	r0, r1
    8f08:	bne	8f18 <storeEntityValue+0x260>
    8f0c:	ldr	r0, [fp, #-16]
    8f10:	ldr	r1, [fp, #-8]
    8f14:	str	r0, [r1, #296]	; 0x128
    8f18:	movw	r0, #12
    8f1c:	str	r0, [fp, #-32]	; 0xffffffe0
    8f20:	b	92e4 <storeEntityValue+0x62c>
    8f24:	ldr	r0, [sp, #36]	; 0x24
    8f28:	ldr	r0, [r0, #16]
    8f2c:	movw	r1, #0
    8f30:	cmp	r0, r1
    8f34:	beq	9008 <storeEntityValue+0x350>
    8f38:	ldr	r0, [fp, #-8]
    8f3c:	ldr	r0, [r0, #120]	; 0x78
    8f40:	movw	r1, #0
    8f44:	cmp	r0, r1
    8f48:	beq	8ff4 <storeEntityValue+0x33c>
    8f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8f50:	movw	r1, #0
    8f54:	strb	r1, [r0, #131]	; 0x83
    8f58:	ldr	r0, [sp, #36]	; 0x24
    8f5c:	movw	r1, #1
    8f60:	strb	r1, [r0, #32]
    8f64:	ldr	r0, [fp, #-8]
    8f68:	ldr	r0, [r0, #120]	; 0x78
    8f6c:	ldr	r1, [fp, #-8]
    8f70:	ldr	r1, [r1, #124]	; 0x7c
    8f74:	ldr	r2, [sp, #36]	; 0x24
    8f78:	ldr	r2, [r2, #20]
    8f7c:	ldr	r3, [sp, #36]	; 0x24
    8f80:	ldr	r3, [r3, #16]
    8f84:	ldr	ip, [sp, #36]	; 0x24
    8f88:	ldr	ip, [ip, #24]
    8f8c:	str	r0, [sp, #12]
    8f90:	mov	r0, r1
    8f94:	movw	r1, #0
    8f98:	str	ip, [sp]
    8f9c:	ldr	ip, [sp, #12]
    8fa0:	blx	ip
    8fa4:	cmp	r0, #0
    8fa8:	bne	8fc4 <storeEntityValue+0x30c>
    8fac:	ldr	r0, [sp, #36]	; 0x24
    8fb0:	movw	r1, #0
    8fb4:	strb	r1, [r0, #32]
    8fb8:	movw	r0, #21
    8fbc:	str	r0, [fp, #-32]	; 0xffffffe0
    8fc0:	b	92e4 <storeEntityValue+0x62c>
    8fc4:	ldr	r0, [sp, #36]	; 0x24
    8fc8:	movw	r1, #0
    8fcc:	strb	r1, [r0, #32]
    8fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fd4:	ldrsb	r0, [r0, #131]	; 0x83
    8fd8:	cmp	r0, #0
    8fdc:	bne	8ff0 <storeEntityValue+0x338>
    8fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8fe4:	ldrb	r0, [r0, #130]	; 0x82
    8fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8fec:	strb	r0, [r1, #128]	; 0x80
    8ff0:	b	9004 <storeEntityValue+0x34c>
    8ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8ff8:	ldrb	r0, [r0, #130]	; 0x82
    8ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9000:	strb	r0, [r1, #128]	; 0x80
    9004:	b	9064 <storeEntityValue+0x3ac>
    9008:	ldr	r0, [sp, #36]	; 0x24
    900c:	movw	r1, #1
    9010:	strb	r1, [r0, #32]
    9014:	ldr	r0, [fp, #-8]
    9018:	ldr	r1, [fp, #-8]
    901c:	ldr	r1, [r1, #236]	; 0xec
    9020:	ldr	r2, [sp, #36]	; 0x24
    9024:	ldr	r2, [r2, #4]
    9028:	ldr	r3, [sp, #36]	; 0x24
    902c:	ldr	r3, [r3, #4]
    9030:	ldr	ip, [sp, #36]	; 0x24
    9034:	ldr	ip, [ip, #8]
    9038:	add	r3, r3, ip
    903c:	bl	8cb8 <storeEntityValue>
    9040:	str	r0, [fp, #-32]	; 0xffffffe0
    9044:	ldr	r0, [sp, #36]	; 0x24
    9048:	movw	r1, #0
    904c:	strb	r1, [r0, #32]
    9050:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9054:	cmp	r0, #0
    9058:	beq	9060 <storeEntityValue+0x3a8>
    905c:	b	92e4 <storeEntityValue+0x62c>
    9060:	b	9064 <storeEntityValue+0x3ac>
    9064:	b	92d8 <storeEntityValue+0x620>
    9068:	ldr	r0, [fp, #-16]
    906c:	ldr	r1, [fp, #-8]
    9070:	str	r0, [r1, #296]	; 0x128
    9074:	movw	r0, #10
    9078:	str	r0, [fp, #-32]	; 0xffffffe0
    907c:	b	92e4 <storeEntityValue+0x62c>
    9080:	movw	r0, #0
    9084:	str	r0, [fp, #-32]	; 0xffffffe0
    9088:	b	92e4 <storeEntityValue+0x62c>
    908c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9090:	ldr	r1, [fp, #-12]
    9094:	ldr	r2, [fp, #-16]
    9098:	ldr	r3, [fp, #-40]	; 0xffffffd8
    909c:	bl	8418 <poolAppend>
    90a0:	movw	r1, #0
    90a4:	cmp	r0, r1
    90a8:	bne	90b8 <storeEntityValue+0x400>
    90ac:	movw	r0, #1
    90b0:	str	r0, [fp, #-32]	; 0xffffffe0
    90b4:	b	92e4 <storeEntityValue+0x62c>
    90b8:	b	92d8 <storeEntityValue+0x620>
    90bc:	ldr	r0, [fp, #-16]
    90c0:	ldr	r1, [fp, #-12]
    90c4:	ldr	r1, [r1, #68]	; 0x44
    90c8:	add	r0, r0, r1
    90cc:	str	r0, [fp, #-40]	; 0xffffffd8
    90d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90d4:	ldr	r0, [r0, #8]
    90d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    90dc:	ldr	r1, [r1, #12]
    90e0:	cmp	r0, r1
    90e4:	bne	9108 <storeEntityValue+0x450>
    90e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90ec:	bl	8764 <poolGrow>
    90f0:	sxtb	r0, r0
    90f4:	cmp	r0, #0
    90f8:	bne	9108 <storeEntityValue+0x450>
    90fc:	movw	r0, #1
    9100:	str	r0, [fp, #-32]	; 0xffffffe0
    9104:	b	92e4 <storeEntityValue+0x62c>
    9108:	ldr	r0, [fp, #-28]	; 0xffffffe4
    910c:	ldr	r1, [r0, #12]
    9110:	add	r2, r1, #1
    9114:	str	r2, [r0, #12]
    9118:	movw	r0, #10
    911c:	strb	r0, [r1]
    9120:	b	92d8 <storeEntityValue+0x620>
    9124:	ldr	r0, [fp, #-12]
    9128:	ldr	r0, [r0, #44]	; 0x2c
    912c:	ldr	r1, [fp, #-12]
    9130:	ldr	r2, [fp, #-16]
    9134:	str	r0, [sp, #8]
    9138:	mov	r0, r1
    913c:	mov	r1, r2
    9140:	ldr	r2, [sp, #8]
    9144:	blx	r2
    9148:	str	r0, [sp, #24]
    914c:	ldr	r0, [sp, #24]
    9150:	cmp	r0, #0
    9154:	bge	9184 <storeEntityValue+0x4cc>
    9158:	ldr	r0, [fp, #-12]
    915c:	ldr	r1, [fp, #-8]
    9160:	ldr	r1, [r1, #152]	; 0x98
    9164:	cmp	r0, r1
    9168:	bne	9178 <storeEntityValue+0x4c0>
    916c:	ldr	r0, [fp, #-16]
    9170:	ldr	r1, [fp, #-8]
    9174:	str	r0, [r1, #296]	; 0x128
    9178:	movw	r0, #14
    917c:	str	r0, [fp, #-32]	; 0xffffffe0
    9180:	b	92e4 <storeEntityValue+0x62c>
    9184:	add	r1, sp, #32
    9188:	ldr	r0, [sp, #24]
    918c:	bl	0 <coda_XmlUtf8Encode>
    9190:	str	r0, [sp, #24]
    9194:	ldr	r0, [sp, #24]
    9198:	cmp	r0, #0
    919c:	bne	91cc <storeEntityValue+0x514>
    91a0:	ldr	r0, [fp, #-12]
    91a4:	ldr	r1, [fp, #-8]
    91a8:	ldr	r1, [r1, #152]	; 0x98
    91ac:	cmp	r0, r1
    91b0:	bne	91c0 <storeEntityValue+0x508>
    91b4:	ldr	r0, [fp, #-16]
    91b8:	ldr	r1, [fp, #-8]
    91bc:	str	r0, [r1, #296]	; 0x128
    91c0:	movw	r0, #14
    91c4:	str	r0, [fp, #-32]	; 0xffffffe0
    91c8:	b	92e4 <storeEntityValue+0x62c>
    91cc:	movw	r0, #0
    91d0:	str	r0, [sp, #28]
    91d4:	ldr	r0, [sp, #28]
    91d8:	ldr	r1, [sp, #24]
    91dc:	cmp	r0, r1
    91e0:	bge	9250 <storeEntityValue+0x598>
    91e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    91e8:	ldr	r0, [r0, #8]
    91ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    91f0:	ldr	r1, [r1, #12]
    91f4:	cmp	r0, r1
    91f8:	bne	921c <storeEntityValue+0x564>
    91fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9200:	bl	8764 <poolGrow>
    9204:	sxtb	r0, r0
    9208:	cmp	r0, #0
    920c:	bne	921c <storeEntityValue+0x564>
    9210:	movw	r0, #1
    9214:	str	r0, [fp, #-32]	; 0xffffffe0
    9218:	b	92e4 <storeEntityValue+0x62c>
    921c:	ldr	r0, [sp, #28]
    9220:	add	r1, sp, #32
    9224:	add	r0, r1, r0
    9228:	ldrb	r0, [r0]
    922c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9230:	ldr	r2, [r1, #12]
    9234:	add	r3, r2, #1
    9238:	str	r3, [r1, #12]
    923c:	strb	r0, [r2]
    9240:	ldr	r0, [sp, #28]
    9244:	add	r0, r0, #1
    9248:	str	r0, [sp, #28]
    924c:	b	91d4 <storeEntityValue+0x51c>
    9250:	b	92d8 <storeEntityValue+0x620>
    9254:	ldr	r0, [fp, #-12]
    9258:	ldr	r1, [fp, #-8]
    925c:	ldr	r1, [r1, #152]	; 0x98
    9260:	cmp	r0, r1
    9264:	bne	9274 <storeEntityValue+0x5bc>
    9268:	ldr	r0, [fp, #-16]
    926c:	ldr	r1, [fp, #-8]
    9270:	str	r0, [r1, #296]	; 0x128
    9274:	movw	r0, #4
    9278:	str	r0, [fp, #-32]	; 0xffffffe0
    927c:	b	92e4 <storeEntityValue+0x62c>
    9280:	ldr	r0, [fp, #-12]
    9284:	ldr	r1, [fp, #-8]
    9288:	ldr	r1, [r1, #152]	; 0x98
    928c:	cmp	r0, r1
    9290:	bne	92a0 <storeEntityValue+0x5e8>
    9294:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9298:	ldr	r1, [fp, #-8]
    929c:	str	r0, [r1, #296]	; 0x128
    92a0:	movw	r0, #4
    92a4:	str	r0, [fp, #-32]	; 0xffffffe0
    92a8:	b	92e4 <storeEntityValue+0x62c>
    92ac:	ldr	r0, [fp, #-12]
    92b0:	ldr	r1, [fp, #-8]
    92b4:	ldr	r1, [r1, #152]	; 0x98
    92b8:	cmp	r0, r1
    92bc:	bne	92cc <storeEntityValue+0x614>
    92c0:	ldr	r0, [fp, #-16]
    92c4:	ldr	r1, [fp, #-8]
    92c8:	str	r0, [r1, #296]	; 0x128
    92cc:	movw	r0, #23
    92d0:	str	r0, [fp, #-32]	; 0xffffffe0
    92d4:	b	92e4 <storeEntityValue+0x62c>
    92d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    92dc:	str	r0, [fp, #-16]
    92e0:	b	8d44 <storeEntityValue+0x8c>
    92e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    92e8:	ldr	r1, [fp, #-8]
    92ec:	str	r0, [r1, #284]	; 0x11c
    92f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    92f4:	str	r0, [fp, #-4]
    92f8:	ldr	r0, [fp, #-4]
    92fc:	mov	sp, fp
    9300:	pop	{fp, pc}

00009304 <doIgnoreSection>:
    9304:	push	{fp, lr}
    9308:	mov	fp, sp
    930c:	sub	sp, sp, #56	; 0x38
    9310:	ldr	ip, [fp, #12]
    9314:	ldr	lr, [fp, #8]
    9318:	str	r0, [fp, #-8]
    931c:	str	r1, [fp, #-12]
    9320:	str	r2, [fp, #-16]
    9324:	str	r3, [fp, #-20]	; 0xffffffec
    9328:	strb	ip, [fp, #-21]	; 0xffffffeb
    932c:	ldr	r0, [fp, #-16]
    9330:	ldr	r0, [r0]
    9334:	str	r0, [sp, #20]
    9338:	ldr	r0, [fp, #-12]
    933c:	ldr	r1, [fp, #-8]
    9340:	ldr	r1, [r1, #152]	; 0x98
    9344:	cmp	r0, r1
    9348:	str	lr, [sp, #8]
    934c:	bne	9378 <doIgnoreSection+0x74>
    9350:	ldr	r0, [fp, #-8]
    9354:	add	r0, r0, #296	; 0x128
    9358:	str	r0, [sp, #16]
    935c:	ldr	r0, [sp, #20]
    9360:	ldr	r1, [sp, #16]
    9364:	str	r0, [r1]
    9368:	ldr	r0, [fp, #-8]
    936c:	add	r0, r0, #300	; 0x12c
    9370:	str	r0, [sp, #12]
    9374:	b	9394 <doIgnoreSection+0x90>
    9378:	ldr	r0, [fp, #-8]
    937c:	ldr	r0, [r0, #308]	; 0x134
    9380:	str	r0, [sp, #16]
    9384:	ldr	r0, [fp, #-8]
    9388:	ldr	r0, [r0, #308]	; 0x134
    938c:	add	r0, r0, #4
    9390:	str	r0, [sp, #12]
    9394:	ldr	r0, [sp, #20]
    9398:	ldr	r1, [sp, #16]
    939c:	str	r0, [r1]
    93a0:	ldr	r0, [fp, #-16]
    93a4:	mov	r1, #0
    93a8:	str	r1, [r0]
    93ac:	ldr	r0, [fp, #-12]
    93b0:	ldr	r1, [r0, #12]
    93b4:	ldr	r2, [sp, #20]
    93b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    93bc:	add	ip, sp, #28
    93c0:	str	r1, [sp, #4]
    93c4:	mov	r1, r2
    93c8:	mov	r2, r3
    93cc:	mov	r3, ip
    93d0:	ldr	ip, [sp, #4]
    93d4:	blx	ip
    93d8:	str	r0, [sp, #24]
    93dc:	ldr	r0, [sp, #28]
    93e0:	ldr	r1, [sp, #12]
    93e4:	str	r0, [r1]
    93e8:	ldr	r0, [sp, #24]
    93ec:	add	r0, r0, #4
    93f0:	cmp	r0, #46	; 0x2e
    93f4:	str	r0, [sp]
    93f8:	bhi	95a8 <doIgnoreSection+0x2a4>
    93fc:	add	r0, pc, #8
    9400:	ldr	r1, [sp]
    9404:	ldr	r0, [r0, r1, lsl #2]
    9408:	mov	pc, r0
    940c:	.word	0x00009578
    9410:	.word	0x000095a8
    9414:	.word	0x00009548
    9418:	.word	0x00009578
    941c:	.word	0x00009530
    9420:	.word	0x000095a8
    9424:	.word	0x000095a8
    9428:	.word	0x000095a8
    942c:	.word	0x000095a8
    9430:	.word	0x000095a8
    9434:	.word	0x000095a8
    9438:	.word	0x000095a8
    943c:	.word	0x000095a8
    9440:	.word	0x000095a8
    9444:	.word	0x000095a8
    9448:	.word	0x000095a8
    944c:	.word	0x000095a8
    9450:	.word	0x000095a8
    9454:	.word	0x000095a8
    9458:	.word	0x000095a8
    945c:	.word	0x000095a8
    9460:	.word	0x000095a8
    9464:	.word	0x000095a8
    9468:	.word	0x000095a8
    946c:	.word	0x000095a8
    9470:	.word	0x000095a8
    9474:	.word	0x000095a8
    9478:	.word	0x000095a8
    947c:	.word	0x000095a8
    9480:	.word	0x000095a8
    9484:	.word	0x000095a8
    9488:	.word	0x000095a8
    948c:	.word	0x000095a8
    9490:	.word	0x000095a8
    9494:	.word	0x000095a8
    9498:	.word	0x000095a8
    949c:	.word	0x000095a8
    94a0:	.word	0x000095a8
    94a4:	.word	0x000095a8
    94a8:	.word	0x000095a8
    94ac:	.word	0x000095a8
    94b0:	.word	0x000095a8
    94b4:	.word	0x000095a8
    94b8:	.word	0x000095a8
    94bc:	.word	0x000095a8
    94c0:	.word	0x000095a8
    94c4:	.word	0x000094c8
    94c8:	ldr	r0, [fp, #-8]
    94cc:	ldr	r0, [r0, #88]	; 0x58
    94d0:	movw	r1, #0
    94d4:	cmp	r0, r1
    94d8:	beq	94f0 <doIgnoreSection+0x1ec>
    94dc:	ldr	r0, [fp, #-8]
    94e0:	ldr	r1, [fp, #-12]
    94e4:	ldr	r2, [sp, #20]
    94e8:	ldr	r3, [sp, #28]
    94ec:	bl	3b40 <reportDefault>
    94f0:	ldr	r0, [sp, #28]
    94f4:	ldr	r1, [fp, #-16]
    94f8:	str	r0, [r1]
    94fc:	ldr	r0, [sp, #28]
    9500:	ldr	r1, [fp, #8]
    9504:	str	r0, [r1]
    9508:	ldr	r0, [fp, #-8]
    950c:	ldr	r0, [r0, #496]	; 0x1f0
    9510:	cmp	r0, #2
    9514:	bne	9524 <doIgnoreSection+0x220>
    9518:	movw	r0, #35	; 0x23
    951c:	str	r0, [fp, #-4]
    9520:	b	95bc <doIgnoreSection+0x2b8>
    9524:	movw	r0, #0
    9528:	str	r0, [fp, #-4]
    952c:	b	95bc <doIgnoreSection+0x2b8>
    9530:	ldr	r0, [sp, #28]
    9534:	ldr	r1, [sp, #16]
    9538:	str	r0, [r1]
    953c:	movw	r0, #4
    9540:	str	r0, [fp, #-4]
    9544:	b	95bc <doIgnoreSection+0x2b8>
    9548:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    954c:	cmp	r0, #0
    9550:	beq	956c <doIgnoreSection+0x268>
    9554:	ldr	r0, [sp, #20]
    9558:	ldr	r1, [fp, #8]
    955c:	str	r0, [r1]
    9560:	movw	r0, #0
    9564:	str	r0, [fp, #-4]
    9568:	b	95bc <doIgnoreSection+0x2b8>
    956c:	movw	r0, #6
    9570:	str	r0, [fp, #-4]
    9574:	b	95bc <doIgnoreSection+0x2b8>
    9578:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    957c:	cmp	r0, #0
    9580:	beq	959c <doIgnoreSection+0x298>
    9584:	ldr	r0, [sp, #20]
    9588:	ldr	r1, [fp, #8]
    958c:	str	r0, [r1]
    9590:	movw	r0, #0
    9594:	str	r0, [fp, #-4]
    9598:	b	95bc <doIgnoreSection+0x2b8>
    959c:	movw	r0, #2
    95a0:	str	r0, [fp, #-4]
    95a4:	b	95bc <doIgnoreSection+0x2b8>
    95a8:	ldr	r0, [sp, #28]
    95ac:	ldr	r1, [sp, #16]
    95b0:	str	r0, [r1]
    95b4:	movw	r0, #23
    95b8:	str	r0, [fp, #-4]
    95bc:	ldr	r0, [fp, #-4]
    95c0:	mov	sp, fp
    95c4:	pop	{fp, pc}

000095c8 <ignoreSectionProcessor>:
    95c8:	push	{fp, lr}
    95cc:	mov	fp, sp
    95d0:	sub	sp, sp, #40	; 0x28
    95d4:	str	r0, [fp, #-8]
    95d8:	str	r1, [fp, #-12]
    95dc:	str	r2, [fp, #-16]
    95e0:	str	r3, [sp, #20]
    95e4:	ldr	r0, [fp, #-8]
    95e8:	ldr	r1, [fp, #-8]
    95ec:	ldr	r1, [r1, #152]	; 0x98
    95f0:	ldr	r3, [fp, #-16]
    95f4:	ldr	r2, [sp, #20]
    95f8:	ldr	ip, [fp, #-8]
    95fc:	add	ip, ip, #500	; 0x1f4
    9600:	ldrsb	ip, [ip]
    9604:	cmp	ip, #0
    9608:	movw	ip, #0
    960c:	movne	ip, #1
    9610:	mvn	lr, #0
    9614:	eor	ip, ip, lr
    9618:	and	ip, ip, #1
    961c:	sub	lr, fp, #12
    9620:	str	r2, [sp, #12]
    9624:	mov	r2, lr
    9628:	ldr	lr, [sp, #12]
    962c:	str	lr, [sp]
    9630:	and	ip, ip, #255	; 0xff
    9634:	str	ip, [sp, #4]
    9638:	bl	9304 <doIgnoreSection>
    963c:	str	r0, [sp, #16]
    9640:	ldr	r0, [sp, #16]
    9644:	cmp	r0, #0
    9648:	beq	9658 <ignoreSectionProcessor+0x90>
    964c:	ldr	r0, [sp, #16]
    9650:	str	r0, [fp, #-4]
    9654:	b	969c <ignoreSectionProcessor+0xd4>
    9658:	ldr	r0, [fp, #-12]
    965c:	movw	r1, #0
    9660:	cmp	r0, r1
    9664:	beq	9694 <ignoreSectionProcessor+0xcc>
    9668:	ldr	r0, [fp, #-8]
    966c:	movw	r1, #0
    9670:	movt	r1, #0
    9674:	str	r1, [r0, #288]	; 0x120
    9678:	ldr	r0, [fp, #-8]
    967c:	ldr	r1, [fp, #-12]
    9680:	ldr	r2, [fp, #-16]
    9684:	ldr	r3, [sp, #20]
    9688:	bl	4028 <prologProcessor>
    968c:	str	r0, [fp, #-4]
    9690:	b	969c <ignoreSectionProcessor+0xd4>
    9694:	ldr	r0, [sp, #16]
    9698:	str	r0, [fp, #-4]
    969c:	ldr	r0, [fp, #-4]
    96a0:	mov	sp, fp
    96a4:	pop	{fp, pc}

000096a8 <nextScaffoldPart>:
    96a8:	push	{fp, lr}
    96ac:	mov	fp, sp
    96b0:	sub	sp, sp, #40	; 0x28
    96b4:	str	r0, [fp, #-8]
    96b8:	ldr	r0, [fp, #-8]
    96bc:	ldr	r0, [r0, #364]	; 0x16c
    96c0:	str	r0, [fp, #-12]
    96c4:	ldr	r0, [fp, #-12]
    96c8:	ldr	r0, [r0, #184]	; 0xb8
    96cc:	movw	r1, #0
    96d0:	cmp	r0, r1
    96d4:	bne	9724 <nextScaffoldPart+0x7c>
    96d8:	ldr	r0, [fp, #-8]
    96dc:	ldr	r1, [r0, #12]
    96e0:	ldr	r0, [r0, #484]	; 0x1e4
    96e4:	lsl	r0, r0, #2
    96e8:	blx	r1
    96ec:	ldr	r1, [fp, #-12]
    96f0:	str	r0, [r1, #184]	; 0xb8
    96f4:	ldr	r0, [fp, #-12]
    96f8:	ldr	r0, [r0, #184]	; 0xb8
    96fc:	movw	r1, #0
    9700:	cmp	r0, r1
    9704:	bne	9714 <nextScaffoldPart+0x6c>
    9708:	mvn	r0, #0
    970c:	str	r0, [fp, #-4]
    9710:	b	990c <nextScaffoldPart+0x264>
    9714:	ldr	r0, [fp, #-12]
    9718:	ldr	r0, [r0, #184]	; 0xb8
    971c:	movw	r1, #0
    9720:	str	r1, [r0]
    9724:	ldr	r0, [fp, #-12]
    9728:	ldr	r0, [r0, #176]	; 0xb0
    972c:	ldr	r1, [fp, #-12]
    9730:	ldr	r1, [r1, #172]	; 0xac
    9734:	cmp	r0, r1
    9738:	bcc	9808 <nextScaffoldPart+0x160>
    973c:	ldr	r0, [fp, #-12]
    9740:	ldr	r0, [r0, #164]	; 0xa4
    9744:	movw	r1, #0
    9748:	cmp	r0, r1
    974c:	beq	97b4 <nextScaffoldPart+0x10c>
    9750:	ldr	r0, [fp, #-8]
    9754:	ldr	r0, [r0, #16]
    9758:	ldr	r1, [fp, #-12]
    975c:	ldr	r2, [r1, #164]	; 0xa4
    9760:	ldr	r1, [r1, #172]	; 0xac
    9764:	lsl	r1, r1, #1
    9768:	movw	r3, #28
    976c:	mul	r1, r1, r3
    9770:	str	r0, [sp, #8]
    9774:	mov	r0, r2
    9778:	ldr	r2, [sp, #8]
    977c:	blx	r2
    9780:	str	r0, [sp, #16]
    9784:	ldr	r0, [sp, #16]
    9788:	movw	r1, #0
    978c:	cmp	r0, r1
    9790:	bne	97a0 <nextScaffoldPart+0xf8>
    9794:	mvn	r0, #0
    9798:	str	r0, [fp, #-4]
    979c:	b	990c <nextScaffoldPart+0x264>
    97a0:	ldr	r0, [fp, #-12]
    97a4:	ldr	r1, [r0, #172]	; 0xac
    97a8:	lsl	r1, r1, #1
    97ac:	str	r1, [r0, #172]	; 0xac
    97b0:	b	97fc <nextScaffoldPart+0x154>
    97b4:	ldr	r0, [fp, #-8]
    97b8:	ldr	r0, [r0, #12]
    97bc:	movw	r1, #896	; 0x380
    97c0:	str	r0, [sp, #4]
    97c4:	mov	r0, r1
    97c8:	ldr	r1, [sp, #4]
    97cc:	blx	r1
    97d0:	str	r0, [sp, #16]
    97d4:	ldr	r0, [sp, #16]
    97d8:	movw	r1, #0
    97dc:	cmp	r0, r1
    97e0:	bne	97f0 <nextScaffoldPart+0x148>
    97e4:	mvn	r0, #0
    97e8:	str	r0, [fp, #-4]
    97ec:	b	990c <nextScaffoldPart+0x264>
    97f0:	ldr	r0, [fp, #-12]
    97f4:	movw	r1, #32
    97f8:	str	r1, [r0, #172]	; 0xac
    97fc:	ldr	r0, [sp, #16]
    9800:	ldr	r1, [fp, #-12]
    9804:	str	r0, [r1, #164]	; 0xa4
    9808:	ldr	r0, [fp, #-12]
    980c:	ldr	r1, [r0, #176]	; 0xb0
    9810:	add	r2, r1, #1
    9814:	str	r2, [r0, #176]	; 0xb0
    9818:	str	r1, [sp, #20]
    981c:	ldr	r0, [fp, #-12]
    9820:	ldr	r0, [r0, #164]	; 0xa4
    9824:	ldr	r1, [sp, #20]
    9828:	movw	r2, #28
    982c:	mul	r1, r1, r2
    9830:	add	r0, r0, r1
    9834:	str	r0, [fp, #-16]
    9838:	ldr	r0, [fp, #-12]
    983c:	ldr	r0, [r0, #180]	; 0xb4
    9840:	cmp	r0, #0
    9844:	beq	98e0 <nextScaffoldPart+0x238>
    9848:	ldr	r0, [fp, #-12]
    984c:	ldr	r1, [r0, #164]	; 0xa4
    9850:	ldr	r2, [r0, #180]	; 0xb4
    9854:	ldr	r0, [r0, #184]	; 0xb8
    9858:	sub	r2, r2, #1
    985c:	add	r0, r0, r2, lsl #2
    9860:	ldr	r0, [r0]
    9864:	movw	r2, #28
    9868:	mul	r0, r0, r2
    986c:	add	r0, r1, r0
    9870:	str	r0, [sp, #12]
    9874:	ldr	r0, [sp, #12]
    9878:	ldr	r0, [r0, #16]
    987c:	cmp	r0, #0
    9880:	beq	98a8 <nextScaffoldPart+0x200>
    9884:	ldr	r0, [sp, #20]
    9888:	ldr	r1, [fp, #-12]
    988c:	ldr	r1, [r1, #164]	; 0xa4
    9890:	ldr	r2, [sp, #12]
    9894:	ldr	r2, [r2, #16]
    9898:	movw	r3, #28
    989c:	mul	r2, r2, r3
    98a0:	add	r1, r1, r2
    98a4:	str	r0, [r1, #24]
    98a8:	ldr	r0, [sp, #12]
    98ac:	ldr	r0, [r0, #20]
    98b0:	cmp	r0, #0
    98b4:	bne	98c4 <nextScaffoldPart+0x21c>
    98b8:	ldr	r0, [sp, #20]
    98bc:	ldr	r1, [sp, #12]
    98c0:	str	r0, [r1, #12]
    98c4:	ldr	r0, [sp, #20]
    98c8:	ldr	r1, [sp, #12]
    98cc:	str	r0, [r1, #16]
    98d0:	ldr	r0, [sp, #12]
    98d4:	ldr	r1, [r0, #20]
    98d8:	add	r1, r1, #1
    98dc:	str	r1, [r0, #20]
    98e0:	ldr	r0, [fp, #-16]
    98e4:	movw	r1, #0
    98e8:	str	r1, [r0, #24]
    98ec:	ldr	r0, [fp, #-16]
    98f0:	str	r1, [r0, #20]
    98f4:	ldr	r0, [fp, #-16]
    98f8:	str	r1, [r0, #16]
    98fc:	ldr	r0, [fp, #-16]
    9900:	str	r1, [r0, #12]
    9904:	ldr	r0, [sp, #20]
    9908:	str	r0, [fp, #-4]
    990c:	ldr	r0, [fp, #-4]
    9910:	mov	sp, fp
    9914:	pop	{fp, pc}

00009918 <processInternalEntity>:
    9918:	push	{fp, lr}
    991c:	mov	fp, sp
    9920:	sub	sp, sp, #64	; 0x40
    9924:	str	r0, [fp, #-8]
    9928:	str	r1, [fp, #-12]
    992c:	strb	r2, [fp, #-13]
    9930:	ldr	r0, [fp, #-8]
    9934:	ldr	r0, [r0, #312]	; 0x138
    9938:	movw	r1, #0
    993c:	cmp	r0, r1
    9940:	beq	9964 <processInternalEntity+0x4c>
    9944:	ldr	r0, [fp, #-8]
    9948:	ldr	r0, [r0, #312]	; 0x138
    994c:	str	r0, [sp, #28]
    9950:	ldr	r0, [sp, #28]
    9954:	ldr	r0, [r0, #8]
    9958:	ldr	r1, [fp, #-8]
    995c:	str	r0, [r1, #312]	; 0x138
    9960:	b	99a4 <processInternalEntity+0x8c>
    9964:	ldr	r0, [fp, #-8]
    9968:	ldr	r0, [r0, #12]
    996c:	movw	r1, #24
    9970:	str	r0, [sp, #20]
    9974:	mov	r0, r1
    9978:	ldr	r1, [sp, #20]
    997c:	blx	r1
    9980:	str	r0, [sp, #28]
    9984:	ldr	r0, [sp, #28]
    9988:	movw	r1, #0
    998c:	cmp	r0, r1
    9990:	bne	99a0 <processInternalEntity+0x88>
    9994:	movw	r0, #1
    9998:	str	r0, [fp, #-4]
    999c:	b	9b98 <processInternalEntity+0x280>
    99a0:	b	99a4 <processInternalEntity+0x8c>
    99a4:	ldr	r0, [fp, #-12]
    99a8:	movw	r1, #1
    99ac:	strb	r1, [r0, #32]
    99b0:	ldr	r0, [fp, #-12]
    99b4:	movw	r1, #0
    99b8:	str	r1, [r0, #12]
    99bc:	ldr	r0, [fp, #-8]
    99c0:	ldr	r0, [r0, #308]	; 0x134
    99c4:	ldr	r2, [sp, #28]
    99c8:	str	r0, [r2, #8]
    99cc:	ldr	r0, [sp, #28]
    99d0:	ldr	r2, [fp, #-8]
    99d4:	str	r0, [r2, #308]	; 0x134
    99d8:	ldr	r0, [fp, #-12]
    99dc:	ldr	r2, [sp, #28]
    99e0:	str	r0, [r2, #12]
    99e4:	ldr	r0, [fp, #-8]
    99e8:	ldr	r0, [r0, #320]	; 0x140
    99ec:	ldr	r2, [sp, #28]
    99f0:	str	r0, [r2, #16]
    99f4:	ldrb	r0, [fp, #-13]
    99f8:	ldr	r2, [sp, #28]
    99fc:	strb	r0, [r2, #20]
    9a00:	ldr	r0, [sp, #28]
    9a04:	str	r1, [r0]
    9a08:	ldr	r0, [sp, #28]
    9a0c:	str	r1, [r0, #4]
    9a10:	ldr	r0, [fp, #-12]
    9a14:	ldr	r0, [r0, #4]
    9a18:	str	r0, [fp, #-20]	; 0xffffffec
    9a1c:	ldr	r0, [fp, #-12]
    9a20:	ldr	r0, [r0, #4]
    9a24:	ldr	r1, [fp, #-12]
    9a28:	ldr	r1, [r1, #8]
    9a2c:	add	r0, r0, r1
    9a30:	str	r0, [fp, #-24]	; 0xffffffe8
    9a34:	ldr	r0, [fp, #-12]
    9a38:	ldrsb	r0, [r0, #33]	; 0x21
    9a3c:	cmp	r0, #0
    9a40:	beq	9ac4 <processInternalEntity+0x1ac>
    9a44:	ldr	r0, [fp, #-8]
    9a48:	ldr	r0, [r0, #236]	; 0xec
    9a4c:	ldr	r0, [r0]
    9a50:	ldr	r1, [fp, #-8]
    9a54:	ldr	r1, [r1, #236]	; 0xec
    9a58:	ldr	r2, [fp, #-20]	; 0xffffffec
    9a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a60:	str	r0, [sp, #16]
    9a64:	mov	r0, r1
    9a68:	mov	r1, r2
    9a6c:	mov	r2, r3
    9a70:	sub	r3, fp, #28
    9a74:	ldr	ip, [sp, #16]
    9a78:	blx	ip
    9a7c:	str	r0, [sp, #24]
    9a80:	ldr	r0, [fp, #-8]
    9a84:	ldr	r1, [fp, #-8]
    9a88:	ldr	r1, [r1, #236]	; 0xec
    9a8c:	ldr	r2, [fp, #-20]	; 0xffffffec
    9a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a94:	ldr	ip, [sp, #24]
    9a98:	ldr	lr, [fp, #-28]	; 0xffffffe4
    9a9c:	str	ip, [sp]
    9aa0:	str	lr, [sp, #4]
    9aa4:	sub	ip, fp, #28
    9aa8:	str	ip, [sp, #8]
    9aac:	movw	ip, #0
    9ab0:	and	ip, ip, #255	; 0xff
    9ab4:	str	ip, [sp, #12]
    9ab8:	bl	42dc <doProlog>
    9abc:	str	r0, [sp, #32]
    9ac0:	b	9b00 <processInternalEntity+0x1e8>
    9ac4:	ldr	r0, [fp, #-8]
    9ac8:	ldr	r1, [fp, #-8]
    9acc:	ldr	r1, [r1, #320]	; 0x140
    9ad0:	ldr	r2, [fp, #-8]
    9ad4:	ldr	r2, [r2, #236]	; 0xec
    9ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
    9adc:	ldr	ip, [fp, #-24]	; 0xffffffe8
    9ae0:	str	ip, [sp]
    9ae4:	sub	ip, fp, #28
    9ae8:	str	ip, [sp, #4]
    9aec:	movw	ip, #0
    9af0:	and	ip, ip, #255	; 0xff
    9af4:	str	ip, [sp, #8]
    9af8:	bl	a020 <doContent>
    9afc:	str	r0, [sp, #32]
    9b00:	ldr	r0, [sp, #32]
    9b04:	cmp	r0, #0
    9b08:	bne	9b90 <processInternalEntity+0x278>
    9b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9b14:	cmp	r0, r1
    9b18:	beq	9b54 <processInternalEntity+0x23c>
    9b1c:	ldr	r0, [fp, #-8]
    9b20:	ldr	r0, [r0, #496]	; 0x1f0
    9b24:	cmp	r0, #3
    9b28:	bne	9b54 <processInternalEntity+0x23c>
    9b2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9b30:	ldr	r1, [fp, #-20]	; 0xffffffec
    9b34:	sub	r0, r0, r1
    9b38:	ldr	r1, [fp, #-12]
    9b3c:	str	r0, [r1, #12]
    9b40:	ldr	r0, [fp, #-8]
    9b44:	movw	r1, #0
    9b48:	movt	r1, #0
    9b4c:	str	r1, [r0, #288]	; 0x120
    9b50:	b	9b8c <processInternalEntity+0x274>
    9b54:	ldr	r0, [fp, #-12]
    9b58:	movw	r1, #0
    9b5c:	strb	r1, [r0, #32]
    9b60:	ldr	r0, [sp, #28]
    9b64:	ldr	r0, [r0, #8]
    9b68:	ldr	r1, [fp, #-8]
    9b6c:	str	r0, [r1, #308]	; 0x134
    9b70:	ldr	r0, [fp, #-8]
    9b74:	ldr	r0, [r0, #312]	; 0x138
    9b78:	ldr	r1, [sp, #28]
    9b7c:	str	r0, [r1, #8]
    9b80:	ldr	r0, [sp, #28]
    9b84:	ldr	r1, [fp, #-8]
    9b88:	str	r0, [r1, #312]	; 0x138
    9b8c:	b	9b90 <processInternalEntity+0x278>
    9b90:	ldr	r0, [sp, #32]
    9b94:	str	r0, [fp, #-4]
    9b98:	ldr	r0, [fp, #-4]
    9b9c:	mov	sp, fp
    9ba0:	pop	{fp, pc}

00009ba4 <build_model>:
    9ba4:	push	{fp, lr}
    9ba8:	mov	fp, sp
    9bac:	sub	sp, sp, #40	; 0x28
    9bb0:	str	r0, [fp, #-8]
    9bb4:	ldr	r0, [fp, #-8]
    9bb8:	ldr	r0, [r0, #364]	; 0x16c
    9bbc:	str	r0, [fp, #-12]
    9bc0:	ldr	r0, [fp, #-12]
    9bc4:	ldr	r1, [r0, #168]	; 0xa8
    9bc8:	ldr	r0, [r0, #176]	; 0xb0
    9bcc:	add	r0, r0, r0, lsl #2
    9bd0:	lsl	r0, r0, #2
    9bd4:	mov	r2, r1
    9bd8:	add	r0, r0, r1
    9bdc:	str	r0, [sp, #12]
    9be0:	ldr	r0, [fp, #-8]
    9be4:	ldr	r0, [r0, #12]
    9be8:	ldr	r1, [sp, #12]
    9bec:	str	r0, [sp, #8]
    9bf0:	mov	r0, r1
    9bf4:	ldr	r1, [sp, #8]
    9bf8:	str	r2, [sp, #4]
    9bfc:	blx	r1
    9c00:	str	r0, [fp, #-16]
    9c04:	ldr	r0, [fp, #-16]
    9c08:	movw	r1, #0
    9c0c:	cmp	r0, r1
    9c10:	bne	9c20 <build_model+0x7c>
    9c14:	movw	r0, #0
    9c18:	str	r0, [fp, #-4]
    9c1c:	b	9c6c <build_model+0xc8>
    9c20:	ldr	r0, [fp, #-16]
    9c24:	ldr	r1, [fp, #-12]
    9c28:	ldr	r1, [r1, #176]	; 0xb0
    9c2c:	movw	r2, #20
    9c30:	mul	r1, r1, r2
    9c34:	add	r0, r0, r1
    9c38:	str	r0, [sp, #16]
    9c3c:	ldr	r0, [fp, #-16]
    9c40:	add	r0, r0, #20
    9c44:	str	r0, [sp, #20]
    9c48:	ldr	r0, [fp, #-8]
    9c4c:	ldr	r2, [fp, #-16]
    9c50:	movw	r1, #0
    9c54:	add	r3, sp, #20
    9c58:	add	ip, sp, #16
    9c5c:	str	ip, [sp]
    9c60:	bl	f038 <build_node>
    9c64:	ldr	r0, [fp, #-16]
    9c68:	str	r0, [fp, #-4]
    9c6c:	ldr	r0, [fp, #-4]
    9c70:	mov	sp, fp
    9c74:	pop	{fp, pc}

00009c78 <reportProcessingInstruction>:
    9c78:	push	{fp, lr}
    9c7c:	mov	fp, sp
    9c80:	sub	sp, sp, #56	; 0x38
    9c84:	str	r0, [fp, #-8]
    9c88:	str	r1, [fp, #-12]
    9c8c:	str	r2, [fp, #-16]
    9c90:	str	r3, [fp, #-20]	; 0xffffffec
    9c94:	ldr	r0, [fp, #-8]
    9c98:	ldr	r0, [r0, #72]	; 0x48
    9c9c:	movw	r1, #0
    9ca0:	cmp	r0, r1
    9ca4:	bne	9cdc <reportProcessingInstruction+0x64>
    9ca8:	ldr	r0, [fp, #-8]
    9cac:	ldr	r0, [r0, #88]	; 0x58
    9cb0:	movw	r1, #0
    9cb4:	cmp	r0, r1
    9cb8:	beq	9cd0 <reportProcessingInstruction+0x58>
    9cbc:	ldr	r0, [fp, #-8]
    9cc0:	ldr	r1, [fp, #-12]
    9cc4:	ldr	r2, [fp, #-16]
    9cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
    9ccc:	bl	3b40 <reportDefault>
    9cd0:	movw	r0, #1
    9cd4:	str	r0, [fp, #-4]
    9cd8:	b	9e30 <reportProcessingInstruction+0x1b8>
    9cdc:	ldr	r0, [fp, #-12]
    9ce0:	ldr	r0, [r0, #68]	; 0x44
    9ce4:	lsl	r0, r0, #1
    9ce8:	ldr	r1, [fp, #-16]
    9cec:	add	r0, r1, r0
    9cf0:	str	r0, [fp, #-16]
    9cf4:	ldr	r0, [fp, #-16]
    9cf8:	ldr	r1, [fp, #-12]
    9cfc:	ldr	r1, [r1, #32]
    9d00:	ldr	r2, [fp, #-12]
    9d04:	ldr	r3, [fp, #-16]
    9d08:	str	r0, [sp, #20]
    9d0c:	mov	r0, r2
    9d10:	str	r1, [sp, #16]
    9d14:	mov	r1, r3
    9d18:	ldr	r2, [sp, #16]
    9d1c:	blx	r2
    9d20:	ldr	r1, [sp, #20]
    9d24:	add	r0, r1, r0
    9d28:	str	r0, [sp, #24]
    9d2c:	ldr	r0, [fp, #-8]
    9d30:	add	r0, r0, #432	; 0x1b0
    9d34:	ldr	r1, [fp, #-12]
    9d38:	ldr	r2, [fp, #-16]
    9d3c:	ldr	r3, [sp, #24]
    9d40:	bl	75e4 <poolStoreString>
    9d44:	str	r0, [fp, #-24]	; 0xffffffe8
    9d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9d4c:	movw	r1, #0
    9d50:	cmp	r0, r1
    9d54:	bne	9d64 <reportProcessingInstruction+0xec>
    9d58:	movw	r0, #0
    9d5c:	str	r0, [fp, #-4]
    9d60:	b	9e30 <reportProcessingInstruction+0x1b8>
    9d64:	ldr	r0, [fp, #-8]
    9d68:	ldr	r1, [r0, #444]	; 0x1bc
    9d6c:	str	r1, [r0, #448]	; 0x1c0
    9d70:	ldr	r0, [fp, #-8]
    9d74:	add	r0, r0, #432	; 0x1b0
    9d78:	ldr	r1, [fp, #-12]
    9d7c:	ldr	r2, [r1, #36]	; 0x24
    9d80:	ldr	r3, [sp, #24]
    9d84:	str	r0, [sp, #12]
    9d88:	mov	r0, r1
    9d8c:	str	r1, [sp, #8]
    9d90:	mov	r1, r3
    9d94:	blx	r2
    9d98:	ldr	r1, [fp, #-20]	; 0xffffffec
    9d9c:	ldr	r2, [fp, #-12]
    9da0:	ldr	r2, [r2, #68]	; 0x44
    9da4:	lsl	r2, r2, #1
    9da8:	movw	r3, #0
    9dac:	sub	r2, r3, r2
    9db0:	add	r3, r1, r2
    9db4:	ldr	r1, [sp, #12]
    9db8:	str	r0, [sp, #4]
    9dbc:	mov	r0, r1
    9dc0:	ldr	r1, [sp, #8]
    9dc4:	ldr	r2, [sp, #4]
    9dc8:	bl	75e4 <poolStoreString>
    9dcc:	str	r0, [sp, #28]
    9dd0:	ldr	r0, [sp, #28]
    9dd4:	movw	r1, #0
    9dd8:	cmp	r0, r1
    9ddc:	bne	9dec <reportProcessingInstruction+0x174>
    9de0:	movw	r0, #0
    9de4:	str	r0, [fp, #-4]
    9de8:	b	9e30 <reportProcessingInstruction+0x1b8>
    9dec:	ldr	r0, [sp, #28]
    9df0:	bl	f244 <normalizeLines>
    9df4:	ldr	r0, [fp, #-8]
    9df8:	ldr	r0, [r0, #72]	; 0x48
    9dfc:	ldr	lr, [fp, #-8]
    9e00:	ldr	lr, [lr, #4]
    9e04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e08:	ldr	r2, [sp, #28]
    9e0c:	str	r0, [sp]
    9e10:	mov	r0, lr
    9e14:	ldr	lr, [sp]
    9e18:	blx	lr
    9e1c:	ldr	r0, [fp, #-8]
    9e20:	add	r0, r0, #432	; 0x1b0
    9e24:	bl	69c <poolClear>
    9e28:	movw	r0, #1
    9e2c:	str	r0, [fp, #-4]
    9e30:	ldr	r0, [fp, #-4]
    9e34:	mov	sp, fp
    9e38:	pop	{fp, pc}

00009e3c <reportComment>:
    9e3c:	push	{fp, lr}
    9e40:	mov	fp, sp
    9e44:	sub	sp, sp, #32
    9e48:	str	r0, [fp, #-8]
    9e4c:	str	r1, [fp, #-12]
    9e50:	str	r2, [sp, #16]
    9e54:	str	r3, [sp, #12]
    9e58:	ldr	r0, [fp, #-8]
    9e5c:	ldr	r0, [r0, #76]	; 0x4c
    9e60:	movw	r1, #0
    9e64:	cmp	r0, r1
    9e68:	bne	9ea0 <reportComment+0x64>
    9e6c:	ldr	r0, [fp, #-8]
    9e70:	ldr	r0, [r0, #88]	; 0x58
    9e74:	movw	r1, #0
    9e78:	cmp	r0, r1
    9e7c:	beq	9e94 <reportComment+0x58>
    9e80:	ldr	r0, [fp, #-8]
    9e84:	ldr	r1, [fp, #-12]
    9e88:	ldr	r2, [sp, #16]
    9e8c:	ldr	r3, [sp, #12]
    9e90:	bl	3b40 <reportDefault>
    9e94:	movw	r0, #1
    9e98:	str	r0, [fp, #-4]
    9e9c:	b	9f40 <reportComment+0x104>
    9ea0:	ldr	r0, [fp, #-8]
    9ea4:	add	r0, r0, #432	; 0x1b0
    9ea8:	ldr	r1, [fp, #-12]
    9eac:	ldr	r2, [sp, #16]
    9eb0:	ldr	r3, [r1, #68]	; 0x44
    9eb4:	lsl	r3, r3, #2
    9eb8:	add	r2, r2, r3
    9ebc:	ldr	r3, [sp, #12]
    9ec0:	ldr	ip, [fp, #-12]
    9ec4:	ldr	ip, [ip, #68]	; 0x44
    9ec8:	movw	lr, #3
    9ecc:	mul	ip, ip, lr
    9ed0:	movw	lr, #0
    9ed4:	sub	ip, lr, ip
    9ed8:	add	r3, r3, ip
    9edc:	bl	75e4 <poolStoreString>
    9ee0:	str	r0, [sp, #8]
    9ee4:	ldr	r0, [sp, #8]
    9ee8:	movw	r1, #0
    9eec:	cmp	r0, r1
    9ef0:	bne	9f00 <reportComment+0xc4>
    9ef4:	movw	r0, #0
    9ef8:	str	r0, [fp, #-4]
    9efc:	b	9f40 <reportComment+0x104>
    9f00:	ldr	r0, [sp, #8]
    9f04:	bl	f244 <normalizeLines>
    9f08:	ldr	r0, [fp, #-8]
    9f0c:	ldr	r0, [r0, #76]	; 0x4c
    9f10:	ldr	lr, [fp, #-8]
    9f14:	ldr	lr, [lr, #4]
    9f18:	ldr	r1, [sp, #8]
    9f1c:	str	r0, [sp, #4]
    9f20:	mov	r0, lr
    9f24:	ldr	lr, [sp, #4]
    9f28:	blx	lr
    9f2c:	ldr	r0, [fp, #-8]
    9f30:	add	r0, r0, #432	; 0x1b0
    9f34:	bl	69c <poolClear>
    9f38:	movw	r0, #1
    9f3c:	str	r0, [fp, #-4]
    9f40:	ldr	r0, [fp, #-4]
    9f44:	mov	sp, fp
    9f48:	pop	{fp, pc}

00009f4c <hash>:
    9f4c:	sub	sp, sp, #12
    9f50:	str	r0, [sp, #8]
    9f54:	str	r1, [sp, #4]
    9f58:	ldr	r0, [sp, #8]
    9f5c:	ldr	r0, [r0, #512]	; 0x200
    9f60:	str	r0, [sp]
    9f64:	ldr	r0, [sp, #4]
    9f68:	ldrsb	r0, [r0]
    9f6c:	cmp	r0, #0
    9f70:	beq	9f9c <hash+0x50>
    9f74:	ldr	r0, [pc, #44]	; 9fa8 <hash+0x5c>
    9f78:	ldr	r1, [sp]
    9f7c:	mul	r0, r1, r0
    9f80:	ldr	r1, [sp, #4]
    9f84:	add	r2, r1, #1
    9f88:	str	r2, [sp, #4]
    9f8c:	ldrb	r1, [r1]
    9f90:	eor	r0, r0, r1
    9f94:	str	r0, [sp]
    9f98:	b	9f64 <hash+0x18>
    9f9c:	ldr	r0, [sp]
    9fa0:	add	sp, sp, #12
    9fa4:	bx	lr
    9fa8:	.word	0x000f4243

00009fac <keyeq>:
    9fac:	sub	sp, sp, #12
    9fb0:	str	r0, [sp, #4]
    9fb4:	str	r1, [sp]
    9fb8:	ldr	r0, [sp, #4]
    9fbc:	ldrb	r0, [r0]
    9fc0:	ldr	r1, [sp]
    9fc4:	ldrb	r1, [r1]
    9fc8:	cmp	r0, r1
    9fcc:	bne	a00c <keyeq+0x60>
    9fd0:	ldr	r0, [sp, #4]
    9fd4:	ldrb	r0, [r0]
    9fd8:	cmp	r0, #0
    9fdc:	bne	9fec <keyeq+0x40>
    9fe0:	movw	r0, #1
    9fe4:	strb	r0, [sp, #11]
    9fe8:	b	a014 <keyeq+0x68>
    9fec:	b	9ff0 <keyeq+0x44>
    9ff0:	ldr	r0, [sp, #4]
    9ff4:	add	r0, r0, #1
    9ff8:	str	r0, [sp, #4]
    9ffc:	ldr	r0, [sp]
    a000:	add	r0, r0, #1
    a004:	str	r0, [sp]
    a008:	b	9fb8 <keyeq+0xc>
    a00c:	movw	r0, #0
    a010:	strb	r0, [sp, #11]
    a014:	ldrb	r0, [sp, #11]
    a018:	add	sp, sp, #12
    a01c:	bx	lr

0000a020 <doContent>:
    a020:	push	{r4, sl, fp, lr}
    a024:	add	fp, sp, #8
    a028:	sub	sp, sp, #392	; 0x188
    a02c:	ldr	ip, [fp, #16]
    a030:	ldr	lr, [fp, #12]
    a034:	ldr	r4, [fp, #8]
    a038:	str	r0, [fp, #-16]
    a03c:	str	r1, [fp, #-20]	; 0xffffffec
    a040:	str	r2, [fp, #-24]	; 0xffffffe8
    a044:	str	r3, [fp, #-28]	; 0xffffffe4
    a048:	strb	ip, [fp, #-29]	; 0xffffffe3
    a04c:	ldr	r0, [fp, #-16]
    a050:	ldr	r0, [r0, #364]	; 0x16c
    a054:	str	r0, [fp, #-36]	; 0xffffffdc
    a058:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a05c:	ldr	r1, [fp, #-16]
    a060:	ldr	r1, [r1, #152]	; 0x98
    a064:	cmp	r0, r1
    a068:	str	r4, [sp, #188]	; 0xbc
    a06c:	str	lr, [sp, #184]	; 0xb8
    a070:	bne	a090 <doContent+0x70>
    a074:	ldr	r0, [fp, #-16]
    a078:	add	r0, r0, #296	; 0x128
    a07c:	str	r0, [fp, #-40]	; 0xffffffd8
    a080:	ldr	r0, [fp, #-16]
    a084:	add	r0, r0, #300	; 0x12c
    a088:	str	r0, [fp, #-44]	; 0xffffffd4
    a08c:	b	a0ac <doContent+0x8c>
    a090:	ldr	r0, [fp, #-16]
    a094:	ldr	r0, [r0, #308]	; 0x134
    a098:	str	r0, [fp, #-40]	; 0xffffffd8
    a09c:	ldr	r0, [fp, #-16]
    a0a0:	ldr	r0, [r0, #308]	; 0x134
    a0a4:	add	r0, r0, #4
    a0a8:	str	r0, [fp, #-44]	; 0xffffffd4
    a0ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a0b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a0b4:	str	r0, [r1]
    a0b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a0bc:	str	r0, [fp, #-48]	; 0xffffffd0
    a0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a0c4:	ldr	r1, [r0, #4]
    a0c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a0cc:	ldr	r3, [fp, #8]
    a0d0:	sub	ip, fp, #48	; 0x30
    a0d4:	str	r1, [sp, #180]	; 0xb4
    a0d8:	mov	r1, r2
    a0dc:	mov	r2, r3
    a0e0:	mov	r3, ip
    a0e4:	ldr	ip, [sp, #180]	; 0xb4
    a0e8:	blx	ip
    a0ec:	str	r0, [fp, #-52]	; 0xffffffcc
    a0f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a0f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a0f8:	str	r0, [r1]
    a0fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    a100:	add	r0, r0, #5
    a104:	cmp	r0, #18
    a108:	str	r0, [sp, #176]	; 0xb0
    a10c:	bhi	b6c4 <doContent+0x16a4>
    a110:	add	r0, pc, #8
    a114:	ldr	r1, [sp, #176]	; 0xb0
    a118:	ldr	r0, [r0, r1, lsl #2]
    a11c:	mov	pc, r0
    a120:	.word	0x0000b370
    a124:	.word	0x0000a260
    a128:	.word	0x0000a16c
    a12c:	.word	0x0000a31c
    a130:	.word	0x0000a2ec
    a134:	.word	0x0000a2d4
    a138:	.word	0x0000a78c
    a13c:	.word	0x0000a78c
    a140:	.word	0x0000ab30
    a144:	.word	0x0000ab30
    a148:	.word	0x0000ade8
    a14c:	.word	0x0000b518
    a150:	.word	0x0000b214
    a154:	.word	0x0000b28c
    a158:	.word	0x0000a34c
    a15c:	.word	0x0000b130
    a160:	.word	0x0000b66c
    a164:	.word	0x0000b208
    a168:	.word	0x0000b698
    a16c:	ldrsb	r0, [fp, #-29]	; 0xffffffe3
    a170:	cmp	r0, #0
    a174:	beq	a190 <doContent+0x170>
    a178:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a17c:	ldr	r1, [fp, #12]
    a180:	str	r0, [r1]
    a184:	movw	r0, #0
    a188:	str	r0, [fp, #-12]
    a18c:	b	b754 <doContent+0x1734>
    a190:	ldr	r0, [fp, #8]
    a194:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a198:	str	r0, [r1]
    a19c:	ldr	r0, [fp, #-16]
    a1a0:	ldr	r0, [r0, #68]	; 0x44
    a1a4:	movw	r1, #0
    a1a8:	cmp	r0, r1
    a1ac:	beq	a1e4 <doContent+0x1c4>
    a1b0:	movw	r0, #10
    a1b4:	strb	r0, [fp, #-53]	; 0xffffffcb
    a1b8:	ldr	r0, [fp, #-16]
    a1bc:	ldr	r0, [r0, #68]	; 0x44
    a1c0:	ldr	r1, [fp, #-16]
    a1c4:	ldr	r1, [r1, #4]
    a1c8:	str	r0, [sp, #172]	; 0xac
    a1cc:	mov	r0, r1
    a1d0:	sub	r1, fp, #53	; 0x35
    a1d4:	movw	r2, #1
    a1d8:	ldr	r3, [sp, #172]	; 0xac
    a1dc:	blx	r3
    a1e0:	b	a210 <doContent+0x1f0>
    a1e4:	ldr	r0, [fp, #-16]
    a1e8:	ldr	r0, [r0, #88]	; 0x58
    a1ec:	movw	r1, #0
    a1f0:	cmp	r0, r1
    a1f4:	beq	a20c <doContent+0x1ec>
    a1f8:	ldr	r0, [fp, #-16]
    a1fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a200:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a204:	ldr	r3, [fp, #8]
    a208:	bl	3b40 <reportDefault>
    a20c:	b	a210 <doContent+0x1f0>
    a210:	ldr	r0, [fp, #-20]	; 0xffffffec
    a214:	cmp	r0, #0
    a218:	bne	a228 <doContent+0x208>
    a21c:	movw	r0, #3
    a220:	str	r0, [fp, #-12]
    a224:	b	b754 <doContent+0x1734>
    a228:	ldr	r0, [fp, #-16]
    a22c:	ldr	r0, [r0, #320]	; 0x140
    a230:	ldr	r1, [fp, #-20]	; 0xffffffec
    a234:	cmp	r0, r1
    a238:	beq	a248 <doContent+0x228>
    a23c:	movw	r0, #13
    a240:	str	r0, [fp, #-12]
    a244:	b	b754 <doContent+0x1734>
    a248:	ldr	r0, [fp, #8]
    a24c:	ldr	r1, [fp, #12]
    a250:	str	r0, [r1]
    a254:	movw	r0, #0
    a258:	str	r0, [fp, #-12]
    a25c:	b	b754 <doContent+0x1734>
    a260:	ldrsb	r0, [fp, #-29]	; 0xffffffe3
    a264:	cmp	r0, #0
    a268:	beq	a284 <doContent+0x264>
    a26c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a270:	ldr	r1, [fp, #12]
    a274:	str	r0, [r1]
    a278:	movw	r0, #0
    a27c:	str	r0, [fp, #-12]
    a280:	b	b754 <doContent+0x1734>
    a284:	ldr	r0, [fp, #-20]	; 0xffffffec
    a288:	cmp	r0, #0
    a28c:	ble	a2c8 <doContent+0x2a8>
    a290:	ldr	r0, [fp, #-16]
    a294:	ldr	r0, [r0, #320]	; 0x140
    a298:	ldr	r1, [fp, #-20]	; 0xffffffec
    a29c:	cmp	r0, r1
    a2a0:	beq	a2b0 <doContent+0x290>
    a2a4:	movw	r0, #13
    a2a8:	str	r0, [fp, #-12]
    a2ac:	b	b754 <doContent+0x1734>
    a2b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a2b4:	ldr	r1, [fp, #12]
    a2b8:	str	r0, [r1]
    a2bc:	movw	r0, #0
    a2c0:	str	r0, [fp, #-12]
    a2c4:	b	b754 <doContent+0x1734>
    a2c8:	movw	r0, #3
    a2cc:	str	r0, [fp, #-12]
    a2d0:	b	b754 <doContent+0x1734>
    a2d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a2d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a2dc:	str	r0, [r1]
    a2e0:	movw	r0, #4
    a2e4:	str	r0, [fp, #-12]
    a2e8:	b	b754 <doContent+0x1734>
    a2ec:	ldrsb	r0, [fp, #-29]	; 0xffffffe3
    a2f0:	cmp	r0, #0
    a2f4:	beq	a310 <doContent+0x2f0>
    a2f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a2fc:	ldr	r1, [fp, #12]
    a300:	str	r0, [r1]
    a304:	movw	r0, #0
    a308:	str	r0, [fp, #-12]
    a30c:	b	b754 <doContent+0x1734>
    a310:	movw	r0, #5
    a314:	str	r0, [fp, #-12]
    a318:	b	b754 <doContent+0x1734>
    a31c:	ldrsb	r0, [fp, #-29]	; 0xffffffe3
    a320:	cmp	r0, #0
    a324:	beq	a340 <doContent+0x320>
    a328:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a32c:	ldr	r1, [fp, #12]
    a330:	str	r0, [r1]
    a334:	movw	r0, #0
    a338:	str	r0, [fp, #-12]
    a33c:	b	b754 <doContent+0x1734>
    a340:	movw	r0, #6
    a344:	str	r0, [fp, #-12]
    a348:	b	b754 <doContent+0x1734>
    a34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a350:	ldr	r0, [r0, #48]	; 0x30
    a354:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a358:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a35c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a360:	ldr	r3, [r3, #68]	; 0x44
    a364:	add	r2, r2, r3
    a368:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a36c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    a370:	ldr	ip, [ip, #68]	; 0x44
    a374:	movw	lr, #0
    a378:	sub	ip, lr, ip
    a37c:	add	r3, r3, ip
    a380:	str	r0, [sp, #168]	; 0xa8
    a384:	mov	r0, r1
    a388:	mov	r1, r2
    a38c:	mov	r2, r3
    a390:	ldr	r3, [sp, #168]	; 0xa8
    a394:	blx	r3
    a398:	strb	r0, [fp, #-65]	; 0xffffffbf
    a39c:	ldrsb	r0, [fp, #-65]	; 0xffffffbf
    a3a0:	cmp	r0, #0
    a3a4:	beq	a418 <doContent+0x3f8>
    a3a8:	ldr	r0, [fp, #-16]
    a3ac:	ldr	r0, [r0, #68]	; 0x44
    a3b0:	movw	r1, #0
    a3b4:	cmp	r0, r1
    a3b8:	beq	a3e8 <doContent+0x3c8>
    a3bc:	ldr	r0, [fp, #-16]
    a3c0:	ldr	r0, [r0, #68]	; 0x44
    a3c4:	ldr	r1, [fp, #-16]
    a3c8:	ldr	r1, [r1, #4]
    a3cc:	str	r0, [sp, #164]	; 0xa4
    a3d0:	mov	r0, r1
    a3d4:	sub	r1, fp, #65	; 0x41
    a3d8:	movw	r2, #1
    a3dc:	ldr	r3, [sp, #164]	; 0xa4
    a3e0:	blx	r3
    a3e4:	b	a414 <doContent+0x3f4>
    a3e8:	ldr	r0, [fp, #-16]
    a3ec:	ldr	r0, [r0, #88]	; 0x58
    a3f0:	movw	r1, #0
    a3f4:	cmp	r0, r1
    a3f8:	beq	a410 <doContent+0x3f0>
    a3fc:	ldr	r0, [fp, #-16]
    a400:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a404:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a408:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a40c:	bl	3b40 <reportDefault>
    a410:	b	a414 <doContent+0x3f4>
    a414:	b	b6f0 <doContent+0x16d0>
    a418:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a41c:	add	r0, r0, #80	; 0x50
    a420:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a424:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a428:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a42c:	ldr	r3, [r3, #68]	; 0x44
    a430:	add	r2, r2, r3
    a434:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a438:	ldr	ip, [fp, #-24]	; 0xffffffe8
    a43c:	ldr	ip, [ip, #68]	; 0x44
    a440:	movw	lr, #0
    a444:	sub	ip, lr, ip
    a448:	add	r3, r3, ip
    a44c:	bl	75e4 <poolStoreString>
    a450:	str	r0, [fp, #-60]	; 0xffffffc4
    a454:	ldr	r0, [fp, #-60]	; 0xffffffc4
    a458:	movw	r1, #0
    a45c:	cmp	r0, r1
    a460:	bne	a470 <doContent+0x450>
    a464:	movw	r0, #1
    a468:	str	r0, [fp, #-12]
    a46c:	b	b754 <doContent+0x1734>
    a470:	ldr	r0, [fp, #-16]
    a474:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a478:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a47c:	movw	r3, #0
    a480:	bl	7694 <lookup>
    a484:	str	r0, [fp, #-64]	; 0xffffffc0
    a488:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a48c:	ldr	r0, [r0, #96]	; 0x60
    a490:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a494:	str	r0, [r1, #92]	; 0x5c
    a498:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a49c:	ldrsb	r0, [r0, #129]	; 0x81
    a4a0:	cmp	r0, #0
    a4a4:	beq	a4b8 <doContent+0x498>
    a4a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a4ac:	ldrb	r0, [r0, #130]	; 0x82
    a4b0:	cmp	r0, #0
    a4b4:	beq	a4f8 <doContent+0x4d8>
    a4b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a4bc:	movw	r1, #0
    a4c0:	cmp	r0, r1
    a4c4:	bne	a4d4 <doContent+0x4b4>
    a4c8:	movw	r0, #11
    a4cc:	str	r0, [fp, #-12]
    a4d0:	b	b754 <doContent+0x1734>
    a4d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a4d8:	ldrsb	r0, [r0, #34]	; 0x22
    a4dc:	cmp	r0, #0
    a4e0:	bne	a4f0 <doContent+0x4d0>
    a4e4:	movw	r0, #24
    a4e8:	str	r0, [fp, #-12]
    a4ec:	b	b754 <doContent+0x1734>
    a4f0:	b	a4f4 <doContent+0x4d4>
    a4f4:	b	a580 <doContent+0x560>
    a4f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a4fc:	movw	r1, #0
    a500:	cmp	r0, r1
    a504:	bne	a57c <doContent+0x55c>
    a508:	ldr	r0, [fp, #-16]
    a50c:	ldr	r0, [r0, #128]	; 0x80
    a510:	movw	r1, #0
    a514:	cmp	r0, r1
    a518:	beq	a54c <doContent+0x52c>
    a51c:	ldr	r0, [fp, #-16]
    a520:	ldr	r0, [r0, #128]	; 0x80
    a524:	ldr	r1, [fp, #-16]
    a528:	ldr	r1, [r1, #4]
    a52c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a530:	str	r0, [sp, #160]	; 0xa0
    a534:	mov	r0, r1
    a538:	mov	r1, r2
    a53c:	movw	r2, #0
    a540:	ldr	r3, [sp, #160]	; 0xa0
    a544:	blx	r3
    a548:	b	a578 <doContent+0x558>
    a54c:	ldr	r0, [fp, #-16]
    a550:	ldr	r0, [r0, #88]	; 0x58
    a554:	movw	r1, #0
    a558:	cmp	r0, r1
    a55c:	beq	a574 <doContent+0x554>
    a560:	ldr	r0, [fp, #-16]
    a564:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a568:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a56c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a570:	bl	3b40 <reportDefault>
    a574:	b	a578 <doContent+0x558>
    a578:	b	b6f0 <doContent+0x16d0>
    a57c:	b	a580 <doContent+0x560>
    a580:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a584:	ldrsb	r0, [r0, #32]
    a588:	cmp	r0, #0
    a58c:	beq	a59c <doContent+0x57c>
    a590:	movw	r0, #12
    a594:	str	r0, [fp, #-12]
    a598:	b	b754 <doContent+0x1734>
    a59c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a5a0:	ldr	r0, [r0, #28]
    a5a4:	movw	r1, #0
    a5a8:	cmp	r0, r1
    a5ac:	beq	a5bc <doContent+0x59c>
    a5b0:	movw	r0, #15
    a5b4:	str	r0, [fp, #-12]
    a5b8:	b	b754 <doContent+0x1734>
    a5bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a5c0:	ldr	r0, [r0, #4]
    a5c4:	movw	r1, #0
    a5c8:	cmp	r0, r1
    a5cc:	beq	a690 <doContent+0x670>
    a5d0:	ldr	r0, [fp, #-16]
    a5d4:	add	r0, r0, #316	; 0x13c
    a5d8:	ldrsb	r0, [r0]
    a5dc:	cmp	r0, #0
    a5e0:	bne	a65c <doContent+0x63c>
    a5e4:	ldr	r0, [fp, #-16]
    a5e8:	ldr	r0, [r0, #128]	; 0x80
    a5ec:	movw	r1, #0
    a5f0:	cmp	r0, r1
    a5f4:	beq	a62c <doContent+0x60c>
    a5f8:	ldr	r0, [fp, #-16]
    a5fc:	ldr	r0, [r0, #128]	; 0x80
    a600:	ldr	r1, [fp, #-16]
    a604:	ldr	r1, [r1, #4]
    a608:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a60c:	ldr	r2, [r2]
    a610:	str	r0, [sp, #156]	; 0x9c
    a614:	mov	r0, r1
    a618:	mov	r1, r2
    a61c:	movw	r2, #0
    a620:	ldr	r3, [sp, #156]	; 0x9c
    a624:	blx	r3
    a628:	b	a658 <doContent+0x638>
    a62c:	ldr	r0, [fp, #-16]
    a630:	ldr	r0, [r0, #88]	; 0x58
    a634:	movw	r1, #0
    a638:	cmp	r0, r1
    a63c:	beq	a654 <doContent+0x634>
    a640:	ldr	r0, [fp, #-16]
    a644:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a648:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a64c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a650:	bl	3b40 <reportDefault>
    a654:	b	a658 <doContent+0x638>
    a658:	b	b6f0 <doContent+0x16d0>
    a65c:	ldr	r0, [fp, #-16]
    a660:	ldr	r1, [fp, #-64]	; 0xffffffc0
    a664:	movw	r2, #0
    a668:	and	r2, r2, #255	; 0xff
    a66c:	bl	9918 <processInternalEntity>
    a670:	str	r0, [fp, #-72]	; 0xffffffb8
    a674:	ldr	r0, [fp, #-72]	; 0xffffffb8
    a678:	cmp	r0, #0
    a67c:	beq	a68c <doContent+0x66c>
    a680:	ldr	r0, [fp, #-72]	; 0xffffffb8
    a684:	str	r0, [fp, #-12]
    a688:	b	b754 <doContent+0x1734>
    a68c:	b	a788 <doContent+0x768>
    a690:	ldr	r0, [fp, #-16]
    a694:	ldr	r0, [r0, #120]	; 0x78
    a698:	movw	r1, #0
    a69c:	cmp	r0, r1
    a6a0:	beq	a758 <doContent+0x738>
    a6a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a6a8:	movw	r1, #1
    a6ac:	strb	r1, [r0, #32]
    a6b0:	ldr	r0, [fp, #-16]
    a6b4:	bl	b924 <getContext>
    a6b8:	str	r0, [fp, #-76]	; 0xffffffb4
    a6bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a6c0:	movw	r1, #0
    a6c4:	strb	r1, [r0, #32]
    a6c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
    a6cc:	movw	r1, #0
    a6d0:	cmp	r0, r1
    a6d4:	bne	a6e4 <doContent+0x6c4>
    a6d8:	movw	r0, #1
    a6dc:	str	r0, [fp, #-12]
    a6e0:	b	b754 <doContent+0x1734>
    a6e4:	ldr	r0, [fp, #-16]
    a6e8:	ldr	r0, [r0, #120]	; 0x78
    a6ec:	ldr	r1, [fp, #-16]
    a6f0:	ldr	r1, [r1, #124]	; 0x7c
    a6f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    a6f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a6fc:	ldr	r3, [r3, #20]
    a700:	ldr	ip, [fp, #-64]	; 0xffffffc0
    a704:	ldr	ip, [ip, #16]
    a708:	ldr	lr, [fp, #-64]	; 0xffffffc0
    a70c:	ldr	lr, [lr, #24]
    a710:	str	r0, [sp, #152]	; 0x98
    a714:	mov	r0, r1
    a718:	mov	r1, r2
    a71c:	mov	r2, r3
    a720:	mov	r3, ip
    a724:	str	lr, [sp]
    a728:	ldr	ip, [sp, #152]	; 0x98
    a72c:	blx	ip
    a730:	cmp	r0, #0
    a734:	bne	a744 <doContent+0x724>
    a738:	movw	r0, #21
    a73c:	str	r0, [fp, #-12]
    a740:	b	b754 <doContent+0x1734>
    a744:	ldr	r0, [fp, #-16]
    a748:	ldr	r0, [r0, #448]	; 0x1c0
    a74c:	ldr	r1, [fp, #-16]
    a750:	str	r0, [r1, #444]	; 0x1bc
    a754:	b	a784 <doContent+0x764>
    a758:	ldr	r0, [fp, #-16]
    a75c:	ldr	r0, [r0, #88]	; 0x58
    a760:	movw	r1, #0
    a764:	cmp	r0, r1
    a768:	beq	a780 <doContent+0x760>
    a76c:	ldr	r0, [fp, #-16]
    a770:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a774:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a778:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a77c:	bl	3b40 <reportDefault>
    a780:	b	a784 <doContent+0x764>
    a784:	b	a788 <doContent+0x768>
    a788:	b	b6f0 <doContent+0x16d0>
    a78c:	ldr	r0, [fp, #-16]
    a790:	ldr	r0, [r0, #376]	; 0x178
    a794:	movw	r1, #0
    a798:	cmp	r0, r1
    a79c:	beq	a7c4 <doContent+0x7a4>
    a7a0:	ldr	r0, [fp, #-16]
    a7a4:	ldr	r0, [r0, #376]	; 0x178
    a7a8:	str	r0, [fp, #-80]	; 0xffffffb0
    a7ac:	ldr	r0, [fp, #-16]
    a7b0:	ldr	r0, [r0, #376]	; 0x178
    a7b4:	ldr	r0, [r0]
    a7b8:	ldr	r1, [fp, #-16]
    a7bc:	str	r0, [r1, #376]	; 0x178
    a7c0:	b	a874 <doContent+0x854>
    a7c4:	ldr	r0, [fp, #-16]
    a7c8:	ldr	r0, [r0, #12]
    a7cc:	movw	r1, #48	; 0x30
    a7d0:	str	r0, [sp, #148]	; 0x94
    a7d4:	mov	r0, r1
    a7d8:	ldr	r1, [sp, #148]	; 0x94
    a7dc:	blx	r1
    a7e0:	str	r0, [fp, #-80]	; 0xffffffb0
    a7e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a7e8:	movw	r1, #0
    a7ec:	cmp	r0, r1
    a7f0:	bne	a800 <doContent+0x7e0>
    a7f4:	movw	r0, #1
    a7f8:	str	r0, [fp, #-12]
    a7fc:	b	b754 <doContent+0x1734>
    a800:	ldr	r0, [fp, #-16]
    a804:	ldr	r0, [r0, #12]
    a808:	movw	r1, #32
    a80c:	str	r0, [sp, #144]	; 0x90
    a810:	mov	r0, r1
    a814:	ldr	r1, [sp, #144]	; 0x90
    a818:	blx	r1
    a81c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a820:	str	r0, [r1, #36]	; 0x24
    a824:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a828:	ldr	r0, [r0, #36]	; 0x24
    a82c:	movw	r1, #0
    a830:	cmp	r0, r1
    a834:	bne	a860 <doContent+0x840>
    a838:	ldr	r0, [fp, #-16]
    a83c:	ldr	r0, [r0, #20]
    a840:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a844:	str	r0, [sp, #140]	; 0x8c
    a848:	mov	r0, r1
    a84c:	ldr	r1, [sp, #140]	; 0x8c
    a850:	blx	r1
    a854:	movw	r0, #1
    a858:	str	r0, [fp, #-12]
    a85c:	b	b754 <doContent+0x1734>
    a860:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a864:	ldr	r0, [r0, #36]	; 0x24
    a868:	add	r0, r0, #32
    a86c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a870:	str	r0, [r1, #40]	; 0x28
    a874:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a878:	movw	r1, #0
    a87c:	str	r1, [r0, #44]	; 0x2c
    a880:	ldr	r0, [fp, #-16]
    a884:	ldr	r0, [r0, #372]	; 0x174
    a888:	ldr	r2, [fp, #-80]	; 0xffffffb0
    a88c:	str	r0, [r2]
    a890:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a894:	ldr	r2, [fp, #-16]
    a898:	str	r0, [r2, #372]	; 0x174
    a89c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a8a0:	str	r1, [r0, #16]
    a8a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a8a8:	str	r1, [r0, #20]
    a8ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a8b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a8b4:	ldr	r1, [r1, #68]	; 0x44
    a8b8:	add	r0, r0, r1
    a8bc:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a8c0:	str	r0, [r1, #4]
    a8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8c8:	ldr	r0, [r0, #32]
    a8cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a8d0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    a8d4:	ldr	r2, [r2, #4]
    a8d8:	str	r0, [sp, #136]	; 0x88
    a8dc:	mov	r0, r1
    a8e0:	mov	r1, r2
    a8e4:	ldr	r2, [sp, #136]	; 0x88
    a8e8:	blx	r2
    a8ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a8f0:	str	r0, [r1, #8]
    a8f4:	ldr	r0, [fp, #-16]
    a8f8:	ldr	r1, [r0, #320]	; 0x140
    a8fc:	add	r1, r1, #1
    a900:	str	r1, [r0, #320]	; 0x140
    a904:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a908:	ldr	r0, [r0, #4]
    a90c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a910:	ldr	r1, [r1, #8]
    a914:	add	r0, r0, r1
    a918:	str	r0, [fp, #-92]	; 0xffffffa4
    a91c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a920:	ldr	r0, [r0, #4]
    a924:	str	r0, [fp, #-96]	; 0xffffffa0
    a928:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a92c:	ldr	r0, [r0, #36]	; 0x24
    a930:	str	r0, [fp, #-88]	; 0xffffffa8
    a934:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a938:	ldr	r0, [r0, #60]	; 0x3c
    a93c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a940:	ldr	r2, [fp, #-92]	; 0xffffffa4
    a944:	ldr	r3, [fp, #-80]	; 0xffffffb0
    a948:	ldr	r3, [r3, #40]	; 0x28
    a94c:	mvn	ip, #0
    a950:	add	r3, r3, ip
    a954:	str	r0, [sp, #132]	; 0x84
    a958:	mov	r0, r1
    a95c:	sub	r1, fp, #96	; 0x60
    a960:	sub	ip, fp, #88	; 0x58
    a964:	str	r3, [sp, #128]	; 0x80
    a968:	mov	r3, ip
    a96c:	ldr	ip, [sp, #128]	; 0x80
    a970:	str	ip, [sp]
    a974:	ldr	lr, [sp, #132]	; 0x84
    a978:	blx	lr
    a97c:	ldr	r0, [fp, #-88]	; 0xffffffa8
    a980:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a984:	ldr	r1, [r1, #36]	; 0x24
    a988:	sub	r0, r0, r1
    a98c:	str	r0, [fp, #-104]	; 0xffffff98
    a990:	ldr	r0, [fp, #-96]	; 0xffffffa0
    a994:	ldr	r1, [fp, #-92]	; 0xffffffa4
    a998:	cmp	r0, r1
    a99c:	bne	a9b0 <doContent+0x990>
    a9a0:	ldr	r0, [fp, #-104]	; 0xffffff98
    a9a4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a9a8:	str	r0, [r1, #24]
    a9ac:	b	aa48 <doContent+0xa28>
    a9b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
    a9b4:	ldr	r0, [r0, #40]	; 0x28
    a9b8:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a9bc:	ldr	r1, [r1, #36]	; 0x24
    a9c0:	sub	r0, r0, r1
    a9c4:	lsl	r0, r0, #1
    a9c8:	str	r0, [fp, #-100]	; 0xffffff9c
    a9cc:	ldr	r0, [fp, #-16]
    a9d0:	ldr	r0, [r0, #16]
    a9d4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    a9d8:	ldr	r1, [r1, #36]	; 0x24
    a9dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
    a9e0:	str	r0, [sp, #124]	; 0x7c
    a9e4:	mov	r0, r1
    a9e8:	mov	r1, r2
    a9ec:	ldr	r2, [sp, #124]	; 0x7c
    a9f0:	blx	r2
    a9f4:	str	r0, [fp, #-108]	; 0xffffff94
    a9f8:	ldr	r0, [fp, #-108]	; 0xffffff94
    a9fc:	movw	r1, #0
    aa00:	cmp	r0, r1
    aa04:	bne	aa14 <doContent+0x9f4>
    aa08:	movw	r0, #1
    aa0c:	str	r0, [fp, #-12]
    aa10:	b	b754 <doContent+0x1734>
    aa14:	ldr	r0, [fp, #-108]	; 0xffffff94
    aa18:	ldr	r1, [fp, #-80]	; 0xffffffb0
    aa1c:	str	r0, [r1, #36]	; 0x24
    aa20:	ldr	r0, [fp, #-108]	; 0xffffff94
    aa24:	ldr	r1, [fp, #-100]	; 0xffffff9c
    aa28:	add	r0, r0, r1
    aa2c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    aa30:	str	r0, [r1, #40]	; 0x28
    aa34:	ldr	r0, [fp, #-108]	; 0xffffff94
    aa38:	ldr	r1, [fp, #-104]	; 0xffffff98
    aa3c:	add	r0, r0, r1
    aa40:	str	r0, [fp, #-88]	; 0xffffffa8
    aa44:	b	a934 <doContent+0x914>
    aa48:	ldr	r0, [fp, #-80]	; 0xffffffb0
    aa4c:	ldr	r0, [r0, #36]	; 0x24
    aa50:	ldr	r1, [fp, #-80]	; 0xffffffb0
    aa54:	str	r0, [r1, #12]
    aa58:	ldr	r0, [fp, #-88]	; 0xffffffa8
    aa5c:	movw	r1, #0
    aa60:	strb	r1, [r0]
    aa64:	ldr	r0, [fp, #-16]
    aa68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    aa6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    aa70:	ldr	r3, [fp, #-80]	; 0xffffffb0
    aa74:	add	r3, r3, #12
    aa78:	ldr	ip, [fp, #-80]	; 0xffffffb0
    aa7c:	add	ip, ip, #44	; 0x2c
    aa80:	str	ip, [sp]
    aa84:	bl	bec0 <storeAtts>
    aa88:	str	r0, [fp, #-84]	; 0xffffffac
    aa8c:	ldr	r0, [fp, #-84]	; 0xffffffac
    aa90:	cmp	r0, #0
    aa94:	beq	aaa4 <doContent+0xa84>
    aa98:	ldr	r0, [fp, #-84]	; 0xffffffac
    aa9c:	str	r0, [fp, #-12]
    aaa0:	b	b754 <doContent+0x1734>
    aaa4:	ldr	r0, [fp, #-16]
    aaa8:	ldr	r0, [r0, #60]	; 0x3c
    aaac:	movw	r1, #0
    aab0:	cmp	r0, r1
    aab4:	beq	aaf4 <doContent+0xad4>
    aab8:	ldr	r0, [fp, #-16]
    aabc:	ldr	r0, [r0, #60]	; 0x3c
    aac0:	ldr	r1, [fp, #-16]
    aac4:	ldr	r1, [r1, #4]
    aac8:	ldr	r2, [fp, #-80]	; 0xffffffb0
    aacc:	ldr	r2, [r2, #12]
    aad0:	ldr	r3, [fp, #-16]
    aad4:	ldr	r3, [r3, #400]	; 0x190
    aad8:	str	r0, [sp, #120]	; 0x78
    aadc:	mov	r0, r1
    aae0:	mov	r1, r2
    aae4:	mov	r2, r3
    aae8:	ldr	r3, [sp, #120]	; 0x78
    aaec:	blx	r3
    aaf0:	b	ab20 <doContent+0xb00>
    aaf4:	ldr	r0, [fp, #-16]
    aaf8:	ldr	r0, [r0, #88]	; 0x58
    aafc:	movw	r1, #0
    ab00:	cmp	r0, r1
    ab04:	beq	ab1c <doContent+0xafc>
    ab08:	ldr	r0, [fp, #-16]
    ab0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ab10:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ab14:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ab18:	bl	3b40 <reportDefault>
    ab1c:	b	ab20 <doContent+0xb00>
    ab20:	ldr	r0, [fp, #-16]
    ab24:	add	r0, r0, #432	; 0x1b0
    ab28:	bl	69c <poolClear>
    ab2c:	b	b6f0 <doContent+0x16d0>
    ab30:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ab34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ab38:	ldr	r1, [r1, #68]	; 0x44
    ab3c:	add	r0, r0, r1
    ab40:	str	r0, [fp, #-112]	; 0xffffff90
    ab44:	movw	r0, #0
    ab48:	str	r0, [fp, #-120]	; 0xffffff88
    ab4c:	movw	r0, #1
    ab50:	strb	r0, [fp, #-121]	; 0xffffff87
    ab54:	ldr	r0, [fp, #-16]
    ab58:	add	r0, r0, #432	; 0x1b0
    ab5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ab60:	ldr	r2, [fp, #-112]	; 0xffffff90
    ab64:	ldr	r3, [fp, #-112]	; 0xffffff90
    ab68:	ldr	ip, [fp, #-24]	; 0xffffffe8
    ab6c:	ldr	ip, [ip, #32]
    ab70:	ldr	lr, [fp, #-24]	; 0xffffffe8
    ab74:	ldr	r4, [fp, #-112]	; 0xffffff90
    ab78:	str	r0, [sp, #116]	; 0x74
    ab7c:	mov	r0, lr
    ab80:	str	r1, [sp, #112]	; 0x70
    ab84:	mov	r1, r4
    ab88:	str	r2, [sp, #108]	; 0x6c
    ab8c:	str	r3, [sp, #104]	; 0x68
    ab90:	blx	ip
    ab94:	ldr	r1, [sp, #104]	; 0x68
    ab98:	add	r3, r1, r0
    ab9c:	ldr	r0, [sp, #116]	; 0x74
    aba0:	ldr	r1, [sp, #112]	; 0x70
    aba4:	ldr	r2, [sp, #108]	; 0x6c
    aba8:	bl	75e4 <poolStoreString>
    abac:	str	r0, [fp, #-148]	; 0xffffff6c
    abb0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    abb4:	movw	r1, #0
    abb8:	cmp	r0, r1
    abbc:	bne	abcc <doContent+0xbac>
    abc0:	movw	r0, #1
    abc4:	str	r0, [fp, #-12]
    abc8:	b	b754 <doContent+0x1734>
    abcc:	ldr	r0, [fp, #-16]
    abd0:	ldr	r0, [r0, #444]	; 0x1bc
    abd4:	ldr	r1, [fp, #-16]
    abd8:	str	r0, [r1, #448]	; 0x1c0
    abdc:	ldr	r0, [fp, #-16]
    abe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    abe4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    abe8:	sub	r3, fp, #148	; 0x94
    abec:	sub	ip, fp, #120	; 0x78
    abf0:	str	ip, [sp]
    abf4:	bl	bec0 <storeAtts>
    abf8:	str	r0, [fp, #-116]	; 0xffffff8c
    abfc:	ldr	r0, [fp, #-116]	; 0xffffff8c
    ac00:	cmp	r0, #0
    ac04:	beq	ac14 <doContent+0xbf4>
    ac08:	ldr	r0, [fp, #-116]	; 0xffffff8c
    ac0c:	str	r0, [fp, #-12]
    ac10:	b	b754 <doContent+0x1734>
    ac14:	ldr	r0, [fp, #-16]
    ac18:	ldr	r0, [r0, #444]	; 0x1bc
    ac1c:	ldr	r1, [fp, #-16]
    ac20:	str	r0, [r1, #448]	; 0x1c0
    ac24:	ldr	r0, [fp, #-16]
    ac28:	ldr	r0, [r0, #60]	; 0x3c
    ac2c:	movw	r1, #0
    ac30:	cmp	r0, r1
    ac34:	beq	ac74 <doContent+0xc54>
    ac38:	ldr	r0, [fp, #-16]
    ac3c:	ldr	r0, [r0, #60]	; 0x3c
    ac40:	ldr	r1, [fp, #-16]
    ac44:	ldr	r1, [r1, #4]
    ac48:	ldr	r2, [fp, #-148]	; 0xffffff6c
    ac4c:	ldr	r3, [fp, #-16]
    ac50:	ldr	r3, [r3, #400]	; 0x190
    ac54:	str	r0, [sp, #100]	; 0x64
    ac58:	mov	r0, r1
    ac5c:	mov	r1, r2
    ac60:	mov	r2, r3
    ac64:	ldr	r3, [sp, #100]	; 0x64
    ac68:	blx	r3
    ac6c:	movw	r0, #0
    ac70:	strb	r0, [fp, #-121]	; 0xffffff87
    ac74:	ldr	r0, [fp, #-16]
    ac78:	ldr	r0, [r0, #64]	; 0x40
    ac7c:	movw	r1, #0
    ac80:	cmp	r0, r1
    ac84:	beq	acdc <doContent+0xcbc>
    ac88:	ldr	r0, [fp, #-16]
    ac8c:	ldr	r0, [r0, #60]	; 0x3c
    ac90:	movw	r1, #0
    ac94:	cmp	r0, r1
    ac98:	beq	acac <doContent+0xc8c>
    ac9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    aca0:	ldr	r0, [r0]
    aca4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    aca8:	str	r0, [r1]
    acac:	ldr	r0, [fp, #-16]
    acb0:	ldr	r0, [r0, #64]	; 0x40
    acb4:	ldr	r1, [fp, #-16]
    acb8:	ldr	r1, [r1, #4]
    acbc:	ldr	r2, [fp, #-148]	; 0xffffff6c
    acc0:	str	r0, [sp, #96]	; 0x60
    acc4:	mov	r0, r1
    acc8:	mov	r1, r2
    accc:	ldr	r2, [sp, #96]	; 0x60
    acd0:	blx	r2
    acd4:	movw	r0, #0
    acd8:	strb	r0, [fp, #-121]	; 0xffffff87
    acdc:	ldrb	r0, [fp, #-121]	; 0xffffff87
    ace0:	cmp	r0, #0
    ace4:	beq	ad10 <doContent+0xcf0>
    ace8:	ldr	r0, [fp, #-16]
    acec:	ldr	r0, [r0, #88]	; 0x58
    acf0:	movw	r1, #0
    acf4:	cmp	r0, r1
    acf8:	beq	ad10 <doContent+0xcf0>
    acfc:	ldr	r0, [fp, #-16]
    ad00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ad04:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ad08:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ad0c:	bl	3b40 <reportDefault>
    ad10:	ldr	r0, [fp, #-16]
    ad14:	add	r0, r0, #432	; 0x1b0
    ad18:	bl	69c <poolClear>
    ad1c:	ldr	r0, [fp, #-120]	; 0xffffff88
    ad20:	movw	r1, #0
    ad24:	cmp	r0, r1
    ad28:	beq	adb8 <doContent+0xd98>
    ad2c:	ldr	r0, [fp, #-120]	; 0xffffff88
    ad30:	str	r0, [fp, #-152]	; 0xffffff68
    ad34:	ldr	r0, [fp, #-16]
    ad38:	ldr	r0, [r0, #112]	; 0x70
    ad3c:	movw	r1, #0
    ad40:	cmp	r0, r1
    ad44:	beq	ad78 <doContent+0xd58>
    ad48:	ldr	r0, [fp, #-16]
    ad4c:	ldr	r0, [r0, #112]	; 0x70
    ad50:	ldr	r1, [fp, #-16]
    ad54:	ldr	r1, [r1, #4]
    ad58:	ldr	r2, [fp, #-152]	; 0xffffff68
    ad5c:	ldr	r2, [r2]
    ad60:	ldr	r2, [r2]
    ad64:	str	r0, [sp, #92]	; 0x5c
    ad68:	mov	r0, r1
    ad6c:	mov	r1, r2
    ad70:	ldr	r2, [sp, #92]	; 0x5c
    ad74:	blx	r2
    ad78:	ldr	r0, [fp, #-120]	; 0xffffff88
    ad7c:	ldr	r0, [r0, #4]
    ad80:	str	r0, [fp, #-120]	; 0xffffff88
    ad84:	ldr	r0, [fp, #-16]
    ad88:	ldr	r0, [r0, #384]	; 0x180
    ad8c:	ldr	r1, [fp, #-152]	; 0xffffff68
    ad90:	str	r0, [r1, #4]
    ad94:	ldr	r0, [fp, #-152]	; 0xffffff68
    ad98:	ldr	r1, [fp, #-16]
    ad9c:	str	r0, [r1, #384]	; 0x180
    ada0:	ldr	r0, [fp, #-152]	; 0xffffff68
    ada4:	ldr	r0, [r0, #8]
    ada8:	ldr	r1, [fp, #-152]	; 0xffffff68
    adac:	ldr	r1, [r1]
    adb0:	str	r0, [r1, #4]
    adb4:	b	ad1c <doContent+0xcfc>
    adb8:	ldr	r0, [fp, #-16]
    adbc:	ldr	r0, [r0, #320]	; 0x140
    adc0:	cmp	r0, #0
    adc4:	bne	ade4 <doContent+0xdc4>
    adc8:	ldr	r0, [fp, #-16]
    adcc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    add0:	ldr	r2, [fp, #8]
    add4:	ldr	r3, [fp, #12]
    add8:	bl	d244 <epilogProcessor>
    addc:	str	r0, [fp, #-12]
    ade0:	b	b754 <doContent+0x1734>
    ade4:	b	b6f0 <doContent+0x16d0>
    ade8:	ldr	r0, [fp, #-16]
    adec:	ldr	r0, [r0, #320]	; 0x140
    adf0:	ldr	r1, [fp, #-20]	; 0xffffffec
    adf4:	cmp	r0, r1
    adf8:	bne	ae08 <doContent+0xde8>
    adfc:	movw	r0, #13
    ae00:	str	r0, [fp, #-12]
    ae04:	b	b754 <doContent+0x1734>
    ae08:	ldr	r0, [fp, #-16]
    ae0c:	ldr	r0, [r0, #372]	; 0x174
    ae10:	str	r0, [fp, #-164]	; 0xffffff5c
    ae14:	ldr	r0, [fp, #-164]	; 0xffffff5c
    ae18:	ldr	r0, [r0]
    ae1c:	ldr	r1, [fp, #-16]
    ae20:	str	r0, [r1, #372]	; 0x174
    ae24:	ldr	r0, [fp, #-16]
    ae28:	ldr	r0, [r0, #376]	; 0x178
    ae2c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ae30:	str	r0, [r1]
    ae34:	ldr	r0, [fp, #-164]	; 0xffffff5c
    ae38:	ldr	r1, [fp, #-16]
    ae3c:	str	r0, [r1, #376]	; 0x178
    ae40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ae44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ae48:	ldr	r1, [r1, #68]	; 0x44
    ae4c:	lsl	r1, r1, #1
    ae50:	add	r0, r0, r1
    ae54:	str	r0, [fp, #-160]	; 0xffffff60
    ae58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae5c:	ldr	r0, [r0, #32]
    ae60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ae64:	ldr	r2, [fp, #-160]	; 0xffffff60
    ae68:	str	r0, [sp, #88]	; 0x58
    ae6c:	mov	r0, r1
    ae70:	mov	r1, r2
    ae74:	ldr	r2, [sp, #88]	; 0x58
    ae78:	blx	r2
    ae7c:	str	r0, [fp, #-156]	; 0xffffff64
    ae80:	ldr	r0, [fp, #-156]	; 0xffffff64
    ae84:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ae88:	ldr	r1, [r1, #8]
    ae8c:	cmp	r0, r1
    ae90:	bne	aeb0 <doContent+0xe90>
    ae94:	ldr	r0, [fp, #-164]	; 0xffffff5c
    ae98:	ldr	r0, [r0, #4]
    ae9c:	ldr	r1, [fp, #-160]	; 0xffffff60
    aea0:	ldr	r2, [fp, #-156]	; 0xffffff64
    aea4:	bl	0 <memcmp>
    aea8:	cmp	r0, #0
    aeac:	beq	aec8 <doContent+0xea8>
    aeb0:	ldr	r0, [fp, #-160]	; 0xffffff60
    aeb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    aeb8:	str	r0, [r1]
    aebc:	movw	r0, #7
    aec0:	str	r0, [fp, #-12]
    aec4:	b	b754 <doContent+0x1734>
    aec8:	ldr	r0, [fp, #-16]
    aecc:	ldr	r1, [r0, #320]	; 0x140
    aed0:	mvn	r2, #0
    aed4:	add	r1, r1, r2
    aed8:	str	r1, [r0, #320]	; 0x140
    aedc:	ldr	r0, [fp, #-16]
    aee0:	ldr	r0, [r0, #64]	; 0x40
    aee4:	movw	r1, #0
    aee8:	cmp	r0, r1
    aeec:	beq	b020 <doContent+0x1000>
    aef0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    aef4:	ldr	r0, [r0, #16]
    aef8:	str	r0, [fp, #-168]	; 0xffffff58
    aefc:	ldr	r0, [fp, #-16]
    af00:	ldrb	r0, [r0, #244]	; 0xf4
    af04:	cmp	r0, #0
    af08:	beq	aff0 <doContent+0xfd0>
    af0c:	ldr	r0, [fp, #-168]	; 0xffffff58
    af10:	movw	r1, #0
    af14:	cmp	r0, r1
    af18:	beq	aff0 <doContent+0xfd0>
    af1c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    af20:	ldr	r0, [r0, #12]
    af24:	ldr	r1, [fp, #-164]	; 0xffffff5c
    af28:	ldr	r1, [r1, #28]
    af2c:	add	r0, r0, r1
    af30:	str	r0, [fp, #-176]	; 0xffffff50
    af34:	ldr	r0, [fp, #-168]	; 0xffffff58
    af38:	ldrsb	r0, [r0]
    af3c:	cmp	r0, #0
    af40:	beq	af68 <doContent+0xf48>
    af44:	ldr	r0, [fp, #-168]	; 0xffffff58
    af48:	add	r1, r0, #1
    af4c:	str	r1, [fp, #-168]	; 0xffffff58
    af50:	ldrb	r0, [r0]
    af54:	ldr	r1, [fp, #-176]	; 0xffffff50
    af58:	add	r2, r1, #1
    af5c:	str	r2, [fp, #-176]	; 0xffffff50
    af60:	strb	r0, [r1]
    af64:	b	af34 <doContent+0xf14>
    af68:	ldr	r0, [fp, #-164]	; 0xffffff5c
    af6c:	ldr	r0, [r0, #20]
    af70:	str	r0, [fp, #-172]	; 0xffffff54
    af74:	ldr	r0, [fp, #-16]
    af78:	ldrb	r0, [r0, #245]	; 0xf5
    af7c:	cmp	r0, #0
    af80:	beq	afe4 <doContent+0xfc4>
    af84:	ldr	r0, [fp, #-172]	; 0xffffff54
    af88:	movw	r1, #0
    af8c:	cmp	r0, r1
    af90:	beq	afe4 <doContent+0xfc4>
    af94:	ldr	r0, [fp, #-16]
    af98:	ldrb	r0, [r0, #488]	; 0x1e8
    af9c:	ldr	r1, [fp, #-176]	; 0xffffff50
    afa0:	add	r2, r1, #1
    afa4:	str	r2, [fp, #-176]	; 0xffffff50
    afa8:	strb	r0, [r1]
    afac:	ldr	r0, [fp, #-172]	; 0xffffff54
    afb0:	ldrsb	r0, [r0]
    afb4:	cmp	r0, #0
    afb8:	beq	afe0 <doContent+0xfc0>
    afbc:	ldr	r0, [fp, #-172]	; 0xffffff54
    afc0:	add	r1, r0, #1
    afc4:	str	r1, [fp, #-172]	; 0xffffff54
    afc8:	ldrb	r0, [r0]
    afcc:	ldr	r1, [fp, #-176]	; 0xffffff50
    afd0:	add	r2, r1, #1
    afd4:	str	r2, [fp, #-176]	; 0xffffff50
    afd8:	strb	r0, [r1]
    afdc:	b	afac <doContent+0xf8c>
    afe0:	b	afe4 <doContent+0xfc4>
    afe4:	ldr	r0, [fp, #-176]	; 0xffffff50
    afe8:	movw	r1, #0
    afec:	strb	r1, [r0]
    aff0:	ldr	r0, [fp, #-16]
    aff4:	ldr	r0, [r0, #64]	; 0x40
    aff8:	ldr	r1, [fp, #-16]
    affc:	ldr	r1, [r1, #4]
    b000:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b004:	ldr	r2, [r2, #12]
    b008:	str	r0, [sp, #84]	; 0x54
    b00c:	mov	r0, r1
    b010:	mov	r1, r2
    b014:	ldr	r2, [sp, #84]	; 0x54
    b018:	blx	r2
    b01c:	b	b04c <doContent+0x102c>
    b020:	ldr	r0, [fp, #-16]
    b024:	ldr	r0, [r0, #88]	; 0x58
    b028:	movw	r1, #0
    b02c:	cmp	r0, r1
    b030:	beq	b048 <doContent+0x1028>
    b034:	ldr	r0, [fp, #-16]
    b038:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b03c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b040:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b044:	bl	3b40 <reportDefault>
    b048:	b	b04c <doContent+0x102c>
    b04c:	b	b050 <doContent+0x1030>
    b050:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b054:	ldr	r0, [r0, #44]	; 0x2c
    b058:	movw	r1, #0
    b05c:	cmp	r0, r1
    b060:	beq	b0fc <doContent+0x10dc>
    b064:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b068:	ldr	r0, [r0, #44]	; 0x2c
    b06c:	str	r0, [fp, #-180]	; 0xffffff4c
    b070:	ldr	r0, [fp, #-16]
    b074:	ldr	r0, [r0, #112]	; 0x70
    b078:	movw	r1, #0
    b07c:	cmp	r0, r1
    b080:	beq	b0b4 <doContent+0x1094>
    b084:	ldr	r0, [fp, #-16]
    b088:	ldr	r0, [r0, #112]	; 0x70
    b08c:	ldr	r1, [fp, #-16]
    b090:	ldr	r1, [r1, #4]
    b094:	ldr	r2, [fp, #-180]	; 0xffffff4c
    b098:	ldr	r2, [r2]
    b09c:	ldr	r2, [r2]
    b0a0:	str	r0, [sp, #80]	; 0x50
    b0a4:	mov	r0, r1
    b0a8:	mov	r1, r2
    b0ac:	ldr	r2, [sp, #80]	; 0x50
    b0b0:	blx	r2
    b0b4:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b0b8:	ldr	r0, [r0, #44]	; 0x2c
    b0bc:	ldr	r0, [r0, #4]
    b0c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b0c4:	str	r0, [r1, #44]	; 0x2c
    b0c8:	ldr	r0, [fp, #-16]
    b0cc:	ldr	r0, [r0, #384]	; 0x180
    b0d0:	ldr	r1, [fp, #-180]	; 0xffffff4c
    b0d4:	str	r0, [r1, #4]
    b0d8:	ldr	r0, [fp, #-180]	; 0xffffff4c
    b0dc:	ldr	r1, [fp, #-16]
    b0e0:	str	r0, [r1, #384]	; 0x180
    b0e4:	ldr	r0, [fp, #-180]	; 0xffffff4c
    b0e8:	ldr	r0, [r0, #8]
    b0ec:	ldr	r1, [fp, #-180]	; 0xffffff4c
    b0f0:	ldr	r1, [r1]
    b0f4:	str	r0, [r1, #4]
    b0f8:	b	b050 <doContent+0x1030>
    b0fc:	ldr	r0, [fp, #-16]
    b100:	ldr	r0, [r0, #320]	; 0x140
    b104:	cmp	r0, #0
    b108:	bne	b128 <doContent+0x1108>
    b10c:	ldr	r0, [fp, #-16]
    b110:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b114:	ldr	r2, [fp, #8]
    b118:	ldr	r3, [fp, #12]
    b11c:	bl	d244 <epilogProcessor>
    b120:	str	r0, [fp, #-12]
    b124:	b	b754 <doContent+0x1734>
    b128:	b	b12c <doContent+0x110c>
    b12c:	b	b6f0 <doContent+0x16d0>
    b130:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b134:	ldr	r0, [r0, #44]	; 0x2c
    b138:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b13c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b140:	str	r0, [sp, #76]	; 0x4c
    b144:	mov	r0, r1
    b148:	mov	r1, r2
    b14c:	ldr	r2, [sp, #76]	; 0x4c
    b150:	blx	r2
    b154:	str	r0, [fp, #-184]	; 0xffffff48
    b158:	ldr	r0, [fp, #-184]	; 0xffffff48
    b15c:	cmp	r0, #0
    b160:	bge	b170 <doContent+0x1150>
    b164:	movw	r0, #14
    b168:	str	r0, [fp, #-12]
    b16c:	b	b754 <doContent+0x1734>
    b170:	ldr	r0, [fp, #-16]
    b174:	ldr	r0, [r0, #68]	; 0x44
    b178:	movw	r1, #0
    b17c:	cmp	r0, r1
    b180:	beq	b1d8 <doContent+0x11b8>
    b184:	sub	r0, fp, #188	; 0xbc
    b188:	ldr	r1, [fp, #-16]
    b18c:	ldr	r1, [r1, #68]	; 0x44
    b190:	ldr	r2, [fp, #-16]
    b194:	ldr	r2, [r2, #4]
    b198:	ldr	r3, [fp, #-184]	; 0xffffff48
    b19c:	str	r0, [sp, #72]	; 0x48
    b1a0:	mov	r0, r3
    b1a4:	ldr	r3, [sp, #72]	; 0x48
    b1a8:	str	r1, [sp, #68]	; 0x44
    b1ac:	mov	r1, r3
    b1b0:	str	r2, [sp, #64]	; 0x40
    b1b4:	bl	0 <coda_XmlUtf8Encode>
    b1b8:	ldr	r1, [sp, #64]	; 0x40
    b1bc:	str	r0, [sp, #60]	; 0x3c
    b1c0:	mov	r0, r1
    b1c4:	ldr	r1, [sp, #72]	; 0x48
    b1c8:	ldr	r2, [sp, #60]	; 0x3c
    b1cc:	ldr	r3, [sp, #68]	; 0x44
    b1d0:	blx	r3
    b1d4:	b	b204 <doContent+0x11e4>
    b1d8:	ldr	r0, [fp, #-16]
    b1dc:	ldr	r0, [r0, #88]	; 0x58
    b1e0:	movw	r1, #0
    b1e4:	cmp	r0, r1
    b1e8:	beq	b200 <doContent+0x11e0>
    b1ec:	ldr	r0, [fp, #-16]
    b1f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b1f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b1f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b1fc:	bl	3b40 <reportDefault>
    b200:	b	b204 <doContent+0x11e4>
    b204:	b	b6f0 <doContent+0x16d0>
    b208:	movw	r0, #17
    b20c:	str	r0, [fp, #-12]
    b210:	b	b754 <doContent+0x1734>
    b214:	ldr	r0, [fp, #-16]
    b218:	ldr	r0, [r0, #68]	; 0x44
    b21c:	movw	r1, #0
    b220:	cmp	r0, r1
    b224:	beq	b25c <doContent+0x123c>
    b228:	movw	r0, #10
    b22c:	strb	r0, [fp, #-189]	; 0xffffff43
    b230:	ldr	r0, [fp, #-16]
    b234:	ldr	r0, [r0, #68]	; 0x44
    b238:	ldr	r1, [fp, #-16]
    b23c:	ldr	r1, [r1, #4]
    b240:	str	r0, [sp, #56]	; 0x38
    b244:	mov	r0, r1
    b248:	sub	r1, fp, #189	; 0xbd
    b24c:	movw	r2, #1
    b250:	ldr	r3, [sp, #56]	; 0x38
    b254:	blx	r3
    b258:	b	b288 <doContent+0x1268>
    b25c:	ldr	r0, [fp, #-16]
    b260:	ldr	r0, [r0, #88]	; 0x58
    b264:	movw	r1, #0
    b268:	cmp	r0, r1
    b26c:	beq	b284 <doContent+0x1264>
    b270:	ldr	r0, [fp, #-16]
    b274:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b278:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b27c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b280:	bl	3b40 <reportDefault>
    b284:	b	b288 <doContent+0x1268>
    b288:	b	b6f0 <doContent+0x16d0>
    b28c:	ldr	r0, [fp, #-16]
    b290:	ldr	r0, [r0, #80]	; 0x50
    b294:	movw	r1, #0
    b298:	cmp	r0, r1
    b29c:	beq	b2c4 <doContent+0x12a4>
    b2a0:	ldr	r0, [fp, #-16]
    b2a4:	ldr	r0, [r0, #80]	; 0x50
    b2a8:	ldr	r1, [fp, #-16]
    b2ac:	ldr	r1, [r1, #4]
    b2b0:	str	r0, [sp, #52]	; 0x34
    b2b4:	mov	r0, r1
    b2b8:	ldr	r1, [sp, #52]	; 0x34
    b2bc:	blx	r1
    b2c0:	b	b2f0 <doContent+0x12d0>
    b2c4:	ldr	r0, [fp, #-16]
    b2c8:	ldr	r0, [r0, #88]	; 0x58
    b2cc:	movw	r1, #0
    b2d0:	cmp	r0, r1
    b2d4:	beq	b2ec <doContent+0x12cc>
    b2d8:	ldr	r0, [fp, #-16]
    b2dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b2e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b2e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b2e8:	bl	3b40 <reportDefault>
    b2ec:	b	b2f0 <doContent+0x12d0>
    b2f0:	ldr	r0, [fp, #-16]
    b2f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b2f8:	ldr	r3, [fp, #8]
    b2fc:	ldr	r2, [fp, #12]
    b300:	sub	ip, fp, #48	; 0x30
    b304:	str	r2, [sp, #48]	; 0x30
    b308:	mov	r2, ip
    b30c:	ldr	ip, [sp, #48]	; 0x30
    b310:	str	ip, [sp]
    b314:	ldrb	lr, [fp, #-29]	; 0xffffffe3
    b318:	str	lr, [sp, #4]
    b31c:	bl	d574 <doCdataSection>
    b320:	str	r0, [fp, #-196]	; 0xffffff3c
    b324:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b328:	cmp	r0, #0
    b32c:	beq	b33c <doContent+0x131c>
    b330:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b334:	str	r0, [fp, #-12]
    b338:	b	b754 <doContent+0x1734>
    b33c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b340:	movw	r1, #0
    b344:	cmp	r0, r1
    b348:	bne	b368 <doContent+0x1348>
    b34c:	ldr	r0, [fp, #-16]
    b350:	movw	r1, #0
    b354:	movt	r1, #0
    b358:	str	r1, [r0, #288]	; 0x120
    b35c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b360:	str	r0, [fp, #-12]
    b364:	b	b754 <doContent+0x1734>
    b368:	b	b36c <doContent+0x134c>
    b36c:	b	b6f0 <doContent+0x16d0>
    b370:	ldrsb	r0, [fp, #-29]	; 0xffffffe3
    b374:	cmp	r0, #0
    b378:	beq	b394 <doContent+0x1374>
    b37c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b380:	ldr	r1, [fp, #12]
    b384:	str	r0, [r1]
    b388:	movw	r0, #0
    b38c:	str	r0, [fp, #-12]
    b390:	b	b754 <doContent+0x1734>
    b394:	ldr	r0, [fp, #-16]
    b398:	ldr	r0, [r0, #68]	; 0x44
    b39c:	movw	r1, #0
    b3a0:	cmp	r0, r1
    b3a4:	beq	b484 <doContent+0x1464>
    b3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3ac:	ldrsb	r0, [r0, #72]	; 0x48
    b3b0:	cmp	r0, #0
    b3b4:	bne	b448 <doContent+0x1428>
    b3b8:	ldr	r0, [fp, #-16]
    b3bc:	ldr	r0, [r0, #52]	; 0x34
    b3c0:	str	r0, [sp, #200]	; 0xc8
    b3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3c8:	ldr	r0, [r0, #60]	; 0x3c
    b3cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b3d0:	ldr	r2, [fp, #8]
    b3d4:	ldr	r3, [fp, #-16]
    b3d8:	ldr	r3, [r3, #56]	; 0x38
    b3dc:	str	r0, [sp, #44]	; 0x2c
    b3e0:	mov	r0, r1
    b3e4:	sub	r1, fp, #28
    b3e8:	add	ip, sp, #200	; 0xc8
    b3ec:	str	r3, [sp, #40]	; 0x28
    b3f0:	mov	r3, ip
    b3f4:	ldr	ip, [sp, #40]	; 0x28
    b3f8:	str	ip, [sp]
    b3fc:	ldr	lr, [sp, #44]	; 0x2c
    b400:	blx	lr
    b404:	ldr	r0, [fp, #-16]
    b408:	ldr	r0, [r0, #68]	; 0x44
    b40c:	ldr	r1, [fp, #-16]
    b410:	ldr	r1, [r1, #4]
    b414:	ldr	r2, [fp, #-16]
    b418:	ldr	r2, [r2, #52]	; 0x34
    b41c:	ldr	r3, [sp, #200]	; 0xc8
    b420:	ldr	ip, [fp, #-16]
    b424:	ldr	ip, [ip, #52]	; 0x34
    b428:	sub	r3, r3, ip
    b42c:	str	r0, [sp, #36]	; 0x24
    b430:	mov	r0, r1
    b434:	mov	r1, r2
    b438:	mov	r2, r3
    b43c:	ldr	r3, [sp, #36]	; 0x24
    b440:	blx	r3
    b444:	b	b480 <doContent+0x1460>
    b448:	ldr	r0, [fp, #-16]
    b44c:	ldr	r0, [r0, #68]	; 0x44
    b450:	ldr	r1, [fp, #-16]
    b454:	ldr	r1, [r1, #4]
    b458:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b45c:	ldr	r3, [fp, #8]
    b460:	ldr	ip, [fp, #-28]	; 0xffffffe4
    b464:	sub	r3, r3, ip
    b468:	str	r0, [sp, #32]
    b46c:	mov	r0, r1
    b470:	mov	r1, r2
    b474:	mov	r2, r3
    b478:	ldr	r3, [sp, #32]
    b47c:	blx	r3
    b480:	b	b4b0 <doContent+0x1490>
    b484:	ldr	r0, [fp, #-16]
    b488:	ldr	r0, [r0, #88]	; 0x58
    b48c:	movw	r1, #0
    b490:	cmp	r0, r1
    b494:	beq	b4ac <doContent+0x148c>
    b498:	ldr	r0, [fp, #-16]
    b49c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b4a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b4a4:	ldr	r3, [fp, #8]
    b4a8:	bl	3b40 <reportDefault>
    b4ac:	b	b4b0 <doContent+0x1490>
    b4b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b4b4:	cmp	r0, #0
    b4b8:	bne	b4d4 <doContent+0x14b4>
    b4bc:	ldr	r0, [fp, #8]
    b4c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b4c4:	str	r0, [r1]
    b4c8:	movw	r0, #3
    b4cc:	str	r0, [fp, #-12]
    b4d0:	b	b754 <doContent+0x1734>
    b4d4:	ldr	r0, [fp, #-16]
    b4d8:	ldr	r0, [r0, #320]	; 0x140
    b4dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    b4e0:	cmp	r0, r1
    b4e4:	beq	b500 <doContent+0x14e0>
    b4e8:	ldr	r0, [fp, #8]
    b4ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b4f0:	str	r0, [r1]
    b4f4:	movw	r0, #13
    b4f8:	str	r0, [fp, #-12]
    b4fc:	b	b754 <doContent+0x1734>
    b500:	ldr	r0, [fp, #8]
    b504:	ldr	r1, [fp, #12]
    b508:	str	r0, [r1]
    b50c:	movw	r0, #0
    b510:	str	r0, [fp, #-12]
    b514:	b	b754 <doContent+0x1734>
    b518:	ldr	r0, [fp, #-16]
    b51c:	ldr	r0, [r0, #68]	; 0x44
    b520:	str	r0, [sp, #196]	; 0xc4
    b524:	ldr	r0, [sp, #196]	; 0xc4
    b528:	movw	r1, #0
    b52c:	cmp	r0, r1
    b530:	beq	b63c <doContent+0x161c>
    b534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b538:	ldrsb	r0, [r0, #72]	; 0x48
    b53c:	cmp	r0, #0
    b540:	bne	b604 <doContent+0x15e4>
    b544:	b	b548 <doContent+0x1528>
    b548:	ldr	r0, [fp, #-16]
    b54c:	ldr	r0, [r0, #52]	; 0x34
    b550:	str	r0, [sp, #192]	; 0xc0
    b554:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b558:	ldr	r0, [r0, #60]	; 0x3c
    b55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b560:	ldr	r2, [fp, #-48]	; 0xffffffd0
    b564:	ldr	r3, [fp, #-16]
    b568:	ldr	r3, [r3, #56]	; 0x38
    b56c:	str	r0, [sp, #28]
    b570:	mov	r0, r1
    b574:	sub	r1, fp, #28
    b578:	add	ip, sp, #192	; 0xc0
    b57c:	str	r3, [sp, #24]
    b580:	mov	r3, ip
    b584:	ldr	ip, [sp, #24]
    b588:	str	ip, [sp]
    b58c:	ldr	lr, [sp, #28]
    b590:	blx	lr
    b594:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b598:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b59c:	str	r0, [r1]
    b5a0:	ldr	r0, [sp, #196]	; 0xc4
    b5a4:	ldr	r1, [fp, #-16]
    b5a8:	ldr	r1, [r1, #4]
    b5ac:	ldr	r2, [fp, #-16]
    b5b0:	ldr	r2, [r2, #52]	; 0x34
    b5b4:	ldr	r3, [sp, #192]	; 0xc0
    b5b8:	ldr	ip, [fp, #-16]
    b5bc:	ldr	ip, [ip, #52]	; 0x34
    b5c0:	sub	r3, r3, ip
    b5c4:	str	r0, [sp, #20]
    b5c8:	mov	r0, r1
    b5cc:	mov	r1, r2
    b5d0:	mov	r2, r3
    b5d4:	ldr	r3, [sp, #20]
    b5d8:	blx	r3
    b5dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b5e4:	cmp	r0, r1
    b5e8:	bne	b5f0 <doContent+0x15d0>
    b5ec:	b	b600 <doContent+0x15e0>
    b5f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b5f8:	str	r0, [r1]
    b5fc:	b	b548 <doContent+0x1528>
    b600:	b	b638 <doContent+0x1618>
    b604:	ldr	r0, [sp, #196]	; 0xc4
    b608:	ldr	r1, [fp, #-16]
    b60c:	ldr	r1, [r1, #4]
    b610:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b614:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b618:	ldr	ip, [fp, #-28]	; 0xffffffe4
    b61c:	sub	r3, r3, ip
    b620:	str	r0, [sp, #16]
    b624:	mov	r0, r1
    b628:	mov	r1, r2
    b62c:	mov	r2, r3
    b630:	ldr	r3, [sp, #16]
    b634:	blx	r3
    b638:	b	b668 <doContent+0x1648>
    b63c:	ldr	r0, [fp, #-16]
    b640:	ldr	r0, [r0, #88]	; 0x58
    b644:	movw	r1, #0
    b648:	cmp	r0, r1
    b64c:	beq	b664 <doContent+0x1644>
    b650:	ldr	r0, [fp, #-16]
    b654:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b658:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b65c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b660:	bl	3b40 <reportDefault>
    b664:	b	b668 <doContent+0x1648>
    b668:	b	b6f0 <doContent+0x16d0>
    b66c:	ldr	r0, [fp, #-16]
    b670:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b674:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b678:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b67c:	bl	9c78 <reportProcessingInstruction>
    b680:	cmp	r0, #0
    b684:	bne	b694 <doContent+0x1674>
    b688:	movw	r0, #1
    b68c:	str	r0, [fp, #-12]
    b690:	b	b754 <doContent+0x1734>
    b694:	b	b6f0 <doContent+0x16d0>
    b698:	ldr	r0, [fp, #-16]
    b69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b6a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b6a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b6a8:	bl	9e3c <reportComment>
    b6ac:	cmp	r0, #0
    b6b0:	bne	b6c0 <doContent+0x16a0>
    b6b4:	movw	r0, #1
    b6b8:	str	r0, [fp, #-12]
    b6bc:	b	b754 <doContent+0x1734>
    b6c0:	b	b6f0 <doContent+0x16d0>
    b6c4:	ldr	r0, [fp, #-16]
    b6c8:	ldr	r0, [r0, #88]	; 0x58
    b6cc:	movw	r1, #0
    b6d0:	cmp	r0, r1
    b6d4:	beq	b6ec <doContent+0x16cc>
    b6d8:	ldr	r0, [fp, #-16]
    b6dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b6e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b6e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b6e8:	bl	3b40 <reportDefault>
    b6ec:	b	b6f0 <doContent+0x16d0>
    b6f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b6f4:	str	r0, [fp, #-28]	; 0xffffffe4
    b6f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b6fc:	str	r0, [r1]
    b700:	ldr	r0, [fp, #-16]
    b704:	ldr	r0, [r0, #496]	; 0x1f0
    b708:	cmp	r0, #2
    b70c:	str	r0, [sp, #12]
    b710:	beq	b740 <doContent+0x1720>
    b714:	b	b718 <doContent+0x16f8>
    b718:	ldr	r0, [sp, #12]
    b71c:	cmp	r0, #3
    b720:	bne	b74c <doContent+0x172c>
    b724:	b	b728 <doContent+0x1708>
    b728:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b72c:	ldr	r1, [fp, #12]
    b730:	str	r0, [r1]
    b734:	movw	r0, #0
    b738:	str	r0, [fp, #-12]
    b73c:	b	b754 <doContent+0x1734>
    b740:	movw	r0, #35	; 0x23
    b744:	str	r0, [fp, #-12]
    b748:	b	b754 <doContent+0x1734>
    b74c:	b	b750 <doContent+0x1730>
    b750:	b	a0b8 <doContent+0x98>
    b754:	ldr	r0, [fp, #-12]
    b758:	sub	sp, fp, #8
    b75c:	pop	{r4, sl, fp, pc}

0000b760 <storeRawNames>:
    b760:	push	{fp, lr}
    b764:	mov	fp, sp
    b768:	sub	sp, sp, #40	; 0x28
    b76c:	str	r0, [fp, #-8]
    b770:	ldr	r0, [fp, #-8]
    b774:	ldr	r0, [r0, #372]	; 0x174
    b778:	str	r0, [fp, #-12]
    b77c:	ldr	r0, [fp, #-12]
    b780:	movw	r1, #0
    b784:	cmp	r0, r1
    b788:	beq	b910 <storeRawNames+0x1b0>
    b78c:	ldr	r0, [fp, #-12]
    b790:	ldr	r0, [r0, #24]
    b794:	add	r0, r0, #1
    b798:	mov	r1, r0
    b79c:	str	r0, [sp, #20]
    b7a0:	ldr	r0, [fp, #-12]
    b7a4:	ldr	r0, [r0, #36]	; 0x24
    b7a8:	ldr	r2, [sp, #20]
    b7ac:	add	r0, r0, r2
    b7b0:	str	r0, [sp, #16]
    b7b4:	ldr	r0, [fp, #-12]
    b7b8:	ldr	r0, [r0, #4]
    b7bc:	ldr	r2, [sp, #16]
    b7c0:	cmp	r0, r2
    b7c4:	str	r1, [sp, #8]
    b7c8:	bne	b7d0 <storeRawNames+0x70>
    b7cc:	b	b910 <storeRawNames+0x1b0>
    b7d0:	ldr	r0, [sp, #20]
    b7d4:	ldr	r1, [fp, #-12]
    b7d8:	ldr	r1, [r1, #8]
    b7dc:	add	r1, r1, #0
    b7e0:	add	r0, r0, r1
    b7e4:	str	r0, [fp, #-16]
    b7e8:	ldr	r0, [fp, #-16]
    b7ec:	ldr	r1, [fp, #-12]
    b7f0:	ldr	r1, [r1, #40]	; 0x28
    b7f4:	ldr	r2, [fp, #-12]
    b7f8:	ldr	r2, [r2, #36]	; 0x24
    b7fc:	sub	r1, r1, r2
    b800:	cmp	r0, r1
    b804:	ble	b8dc <storeRawNames+0x17c>
    b808:	ldr	r0, [fp, #-8]
    b80c:	ldr	r0, [r0, #16]
    b810:	ldr	r1, [fp, #-12]
    b814:	ldr	r1, [r1, #36]	; 0x24
    b818:	ldr	r2, [fp, #-16]
    b81c:	str	r0, [sp, #4]
    b820:	mov	r0, r1
    b824:	mov	r1, r2
    b828:	ldr	r2, [sp, #4]
    b82c:	blx	r2
    b830:	str	r0, [sp, #12]
    b834:	ldr	r0, [sp, #12]
    b838:	movw	r1, #0
    b83c:	cmp	r0, r1
    b840:	bne	b850 <storeRawNames+0xf0>
    b844:	movw	r0, #0
    b848:	strb	r0, [fp, #-1]
    b84c:	b	b918 <storeRawNames+0x1b8>
    b850:	ldr	r0, [fp, #-12]
    b854:	ldr	r0, [r0, #12]
    b858:	ldr	r1, [fp, #-12]
    b85c:	ldr	r1, [r1, #36]	; 0x24
    b860:	cmp	r0, r1
    b864:	bne	b874 <storeRawNames+0x114>
    b868:	ldr	r0, [sp, #12]
    b86c:	ldr	r1, [fp, #-12]
    b870:	str	r0, [r1, #12]
    b874:	ldr	r0, [fp, #-12]
    b878:	ldr	r0, [r0, #16]
    b87c:	movw	r1, #0
    b880:	cmp	r0, r1
    b884:	beq	b8ac <storeRawNames+0x14c>
    b888:	ldr	r0, [sp, #12]
    b88c:	ldr	r1, [fp, #-12]
    b890:	ldr	r1, [r1, #16]
    b894:	ldr	r2, [fp, #-12]
    b898:	ldr	r2, [r2, #36]	; 0x24
    b89c:	sub	r1, r1, r2
    b8a0:	add	r0, r0, r1
    b8a4:	ldr	r1, [fp, #-12]
    b8a8:	str	r0, [r1, #16]
    b8ac:	ldr	r0, [sp, #12]
    b8b0:	ldr	r1, [fp, #-12]
    b8b4:	str	r0, [r1, #36]	; 0x24
    b8b8:	ldr	r0, [sp, #12]
    b8bc:	ldr	r1, [fp, #-16]
    b8c0:	add	r0, r0, r1
    b8c4:	ldr	r1, [fp, #-12]
    b8c8:	str	r0, [r1, #40]	; 0x28
    b8cc:	ldr	r0, [sp, #12]
    b8d0:	ldr	r1, [sp, #20]
    b8d4:	add	r0, r0, r1
    b8d8:	str	r0, [sp, #16]
    b8dc:	ldr	r0, [sp, #16]
    b8e0:	ldr	r1, [fp, #-12]
    b8e4:	ldr	r1, [r1, #4]
    b8e8:	ldr	r2, [fp, #-12]
    b8ec:	ldr	r2, [r2, #8]
    b8f0:	bl	0 <memcpy>
    b8f4:	ldr	r0, [sp, #16]
    b8f8:	ldr	r1, [fp, #-12]
    b8fc:	str	r0, [r1, #4]
    b900:	ldr	r0, [fp, #-12]
    b904:	ldr	r0, [r0]
    b908:	str	r0, [fp, #-12]
    b90c:	b	b77c <storeRawNames+0x1c>
    b910:	movw	r0, #1
    b914:	strb	r0, [fp, #-1]
    b918:	ldrb	r0, [fp, #-1]
    b91c:	mov	sp, fp
    b920:	pop	{fp, pc}

0000b924 <getContext>:
    b924:	push	{fp, lr}
    b928:	mov	fp, sp
    b92c:	sub	sp, sp, #56	; 0x38
    b930:	str	r0, [fp, #-8]
    b934:	ldr	r0, [fp, #-8]
    b938:	ldr	r0, [r0, #364]	; 0x16c
    b93c:	str	r0, [fp, #-12]
    b940:	movw	r0, #0
    b944:	strb	r0, [fp, #-21]	; 0xffffffeb
    b948:	ldr	r0, [fp, #-12]
    b94c:	ldr	r0, [r0, #156]	; 0x9c
    b950:	movw	r1, #0
    b954:	cmp	r0, r1
    b958:	beq	ba90 <getContext+0x16c>
    b95c:	ldr	r0, [fp, #-8]
    b960:	ldr	r0, [r0, #444]	; 0x1bc
    b964:	ldr	r1, [fp, #-8]
    b968:	ldr	r1, [r1, #440]	; 0x1b8
    b96c:	cmp	r0, r1
    b970:	bne	b990 <getContext+0x6c>
    b974:	ldr	r0, [fp, #-8]
    b978:	add	r0, r0, #432	; 0x1b0
    b97c:	bl	8764 <poolGrow>
    b980:	sxtb	r0, r0
    b984:	cmp	r0, #0
    b988:	bne	b990 <getContext+0x6c>
    b98c:	b	b9ac <getContext+0x88>
    b990:	ldr	r0, [fp, #-8]
    b994:	ldr	r1, [r0, #444]	; 0x1bc
    b998:	add	r2, r1, #1
    b99c:	str	r2, [r0, #444]	; 0x1bc
    b9a0:	movw	r0, #61	; 0x3d
    b9a4:	strb	r0, [r1]
    b9a8:	b	b9b8 <getContext+0x94>
    b9ac:	movw	r0, #0
    b9b0:	str	r0, [fp, #-4]
    b9b4:	b	beb4 <getContext+0x590>
    b9b8:	ldr	r0, [fp, #-12]
    b9bc:	ldr	r0, [r0, #156]	; 0x9c
    b9c0:	ldr	r0, [r0, #20]
    b9c4:	str	r0, [sp, #24]
    b9c8:	ldr	r0, [fp, #-8]
    b9cc:	add	r0, r0, #488	; 0x1e8
    b9d0:	ldrsb	r0, [r0]
    b9d4:	cmp	r0, #0
    b9d8:	beq	b9ec <getContext+0xc8>
    b9dc:	ldr	r0, [sp, #24]
    b9e0:	mvn	r1, #0
    b9e4:	add	r0, r0, r1
    b9e8:	str	r0, [sp, #24]
    b9ec:	movw	r0, #0
    b9f0:	str	r0, [sp, #28]
    b9f4:	ldr	r0, [sp, #28]
    b9f8:	ldr	r1, [sp, #24]
    b9fc:	cmp	r0, r1
    ba00:	bge	ba88 <getContext+0x164>
    ba04:	ldr	r0, [fp, #-8]
    ba08:	ldr	r0, [r0, #444]	; 0x1bc
    ba0c:	ldr	r1, [fp, #-8]
    ba10:	ldr	r1, [r1, #440]	; 0x1b8
    ba14:	cmp	r0, r1
    ba18:	bne	ba38 <getContext+0x114>
    ba1c:	ldr	r0, [fp, #-8]
    ba20:	add	r0, r0, #432	; 0x1b0
    ba24:	bl	8764 <poolGrow>
    ba28:	sxtb	r0, r0
    ba2c:	cmp	r0, #0
    ba30:	bne	ba38 <getContext+0x114>
    ba34:	b	ba68 <getContext+0x144>
    ba38:	ldr	r0, [fp, #-12]
    ba3c:	ldr	r0, [r0, #156]	; 0x9c
    ba40:	ldr	r0, [r0, #16]
    ba44:	ldr	r1, [sp, #28]
    ba48:	add	r0, r0, r1
    ba4c:	ldrb	r0, [r0]
    ba50:	ldr	r1, [fp, #-8]
    ba54:	ldr	r2, [r1, #444]	; 0x1bc
    ba58:	add	r3, r2, #1
    ba5c:	str	r3, [r1, #444]	; 0x1bc
    ba60:	strb	r0, [r2]
    ba64:	b	ba74 <getContext+0x150>
    ba68:	movw	r0, #0
    ba6c:	str	r0, [fp, #-4]
    ba70:	b	beb4 <getContext+0x590>
    ba74:	b	ba78 <getContext+0x154>
    ba78:	ldr	r0, [sp, #28]
    ba7c:	add	r0, r0, #1
    ba80:	str	r0, [sp, #28]
    ba84:	b	b9f4 <getContext+0xd0>
    ba88:	movw	r0, #1
    ba8c:	strb	r0, [fp, #-21]	; 0xffffffeb
    ba90:	ldr	r0, [fp, #-12]
    ba94:	add	r1, r0, #60	; 0x3c
    ba98:	sub	r0, fp, #20
    ba9c:	bl	dbc0 <hashTableIterInit>
    baa0:	sub	r0, fp, #20
    baa4:	bl	dc00 <hashTableIterNext>
    baa8:	str	r0, [sp, #8]
    baac:	ldr	r0, [sp, #8]
    bab0:	movw	lr, #0
    bab4:	cmp	r0, lr
    bab8:	bne	bac0 <getContext+0x19c>
    babc:	b	bd08 <getContext+0x3e4>
    bac0:	ldr	r0, [sp, #8]
    bac4:	ldr	r0, [r0, #4]
    bac8:	movw	r1, #0
    bacc:	cmp	r0, r1
    bad0:	bne	bad8 <getContext+0x1b4>
    bad4:	b	baa0 <getContext+0x17c>
    bad8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
    badc:	cmp	r0, #0
    bae0:	beq	bb40 <getContext+0x21c>
    bae4:	ldr	r0, [fp, #-8]
    bae8:	ldr	r0, [r0, #444]	; 0x1bc
    baec:	ldr	r1, [fp, #-8]
    baf0:	ldr	r1, [r1, #440]	; 0x1b8
    baf4:	cmp	r0, r1
    baf8:	bne	bb18 <getContext+0x1f4>
    bafc:	ldr	r0, [fp, #-8]
    bb00:	add	r0, r0, #432	; 0x1b0
    bb04:	bl	8764 <poolGrow>
    bb08:	sxtb	r0, r0
    bb0c:	cmp	r0, #0
    bb10:	bne	bb18 <getContext+0x1f4>
    bb14:	b	bb34 <getContext+0x210>
    bb18:	ldr	r0, [fp, #-8]
    bb1c:	ldr	r1, [r0, #444]	; 0x1bc
    bb20:	add	r2, r1, #1
    bb24:	str	r2, [r0, #444]	; 0x1bc
    bb28:	movw	r0, #12
    bb2c:	strb	r0, [r1]
    bb30:	b	bb40 <getContext+0x21c>
    bb34:	movw	r0, #0
    bb38:	str	r0, [fp, #-4]
    bb3c:	b	beb4 <getContext+0x590>
    bb40:	ldr	r0, [sp, #8]
    bb44:	ldr	r0, [r0]
    bb48:	str	r0, [sp, #12]
    bb4c:	ldr	r0, [sp, #12]
    bb50:	ldrsb	r0, [r0]
    bb54:	cmp	r0, #0
    bb58:	beq	bbd0 <getContext+0x2ac>
    bb5c:	ldr	r0, [fp, #-8]
    bb60:	ldr	r0, [r0, #444]	; 0x1bc
    bb64:	ldr	r1, [fp, #-8]
    bb68:	ldr	r1, [r1, #440]	; 0x1b8
    bb6c:	cmp	r0, r1
    bb70:	bne	bb90 <getContext+0x26c>
    bb74:	ldr	r0, [fp, #-8]
    bb78:	add	r0, r0, #432	; 0x1b0
    bb7c:	bl	8764 <poolGrow>
    bb80:	sxtb	r0, r0
    bb84:	cmp	r0, #0
    bb88:	bne	bb90 <getContext+0x26c>
    bb8c:	b	bbb0 <getContext+0x28c>
    bb90:	ldr	r0, [sp, #12]
    bb94:	ldrb	r0, [r0]
    bb98:	ldr	r1, [fp, #-8]
    bb9c:	ldr	r2, [r1, #444]	; 0x1bc
    bba0:	add	r3, r2, #1
    bba4:	str	r3, [r1, #444]	; 0x1bc
    bba8:	strb	r0, [r2]
    bbac:	b	bbbc <getContext+0x298>
    bbb0:	movw	r0, #0
    bbb4:	str	r0, [fp, #-4]
    bbb8:	b	beb4 <getContext+0x590>
    bbbc:	b	bbc0 <getContext+0x29c>
    bbc0:	ldr	r0, [sp, #12]
    bbc4:	add	r0, r0, #1
    bbc8:	str	r0, [sp, #12]
    bbcc:	b	bb4c <getContext+0x228>
    bbd0:	ldr	r0, [fp, #-8]
    bbd4:	ldr	r0, [r0, #444]	; 0x1bc
    bbd8:	ldr	r1, [fp, #-8]
    bbdc:	ldr	r1, [r1, #440]	; 0x1b8
    bbe0:	cmp	r0, r1
    bbe4:	bne	bc04 <getContext+0x2e0>
    bbe8:	ldr	r0, [fp, #-8]
    bbec:	add	r0, r0, #432	; 0x1b0
    bbf0:	bl	8764 <poolGrow>
    bbf4:	sxtb	r0, r0
    bbf8:	cmp	r0, #0
    bbfc:	bne	bc04 <getContext+0x2e0>
    bc00:	b	bc20 <getContext+0x2fc>
    bc04:	ldr	r0, [fp, #-8]
    bc08:	ldr	r1, [r0, #444]	; 0x1bc
    bc0c:	add	r2, r1, #1
    bc10:	str	r2, [r0, #444]	; 0x1bc
    bc14:	movw	r0, #61	; 0x3d
    bc18:	strb	r0, [r1]
    bc1c:	b	bc2c <getContext+0x308>
    bc20:	movw	r0, #0
    bc24:	str	r0, [fp, #-4]
    bc28:	b	beb4 <getContext+0x590>
    bc2c:	ldr	r0, [sp, #8]
    bc30:	ldr	r0, [r0, #4]
    bc34:	ldr	r0, [r0, #20]
    bc38:	str	r0, [sp, #16]
    bc3c:	ldr	r0, [fp, #-8]
    bc40:	add	r0, r0, #488	; 0x1e8
    bc44:	ldrsb	r0, [r0]
    bc48:	cmp	r0, #0
    bc4c:	beq	bc60 <getContext+0x33c>
    bc50:	ldr	r0, [sp, #16]
    bc54:	mvn	r1, #0
    bc58:	add	r0, r0, r1
    bc5c:	str	r0, [sp, #16]
    bc60:	movw	r0, #0
    bc64:	str	r0, [sp, #20]
    bc68:	ldr	r0, [sp, #20]
    bc6c:	ldr	r1, [sp, #16]
    bc70:	cmp	r0, r1
    bc74:	bge	bcfc <getContext+0x3d8>
    bc78:	ldr	r0, [fp, #-8]
    bc7c:	ldr	r0, [r0, #444]	; 0x1bc
    bc80:	ldr	r1, [fp, #-8]
    bc84:	ldr	r1, [r1, #440]	; 0x1b8
    bc88:	cmp	r0, r1
    bc8c:	bne	bcac <getContext+0x388>
    bc90:	ldr	r0, [fp, #-8]
    bc94:	add	r0, r0, #432	; 0x1b0
    bc98:	bl	8764 <poolGrow>
    bc9c:	sxtb	r0, r0
    bca0:	cmp	r0, #0
    bca4:	bne	bcac <getContext+0x388>
    bca8:	b	bcdc <getContext+0x3b8>
    bcac:	ldr	r0, [sp, #8]
    bcb0:	ldr	r0, [r0, #4]
    bcb4:	ldr	r0, [r0, #16]
    bcb8:	ldr	r1, [sp, #20]
    bcbc:	add	r0, r0, r1
    bcc0:	ldrb	r0, [r0]
    bcc4:	ldr	r1, [fp, #-8]
    bcc8:	ldr	r2, [r1, #444]	; 0x1bc
    bccc:	add	r3, r2, #1
    bcd0:	str	r3, [r1, #444]	; 0x1bc
    bcd4:	strb	r0, [r2]
    bcd8:	b	bce8 <getContext+0x3c4>
    bcdc:	movw	r0, #0
    bce0:	str	r0, [fp, #-4]
    bce4:	b	beb4 <getContext+0x590>
    bce8:	b	bcec <getContext+0x3c8>
    bcec:	ldr	r0, [sp, #20]
    bcf0:	add	r0, r0, #1
    bcf4:	str	r0, [sp, #20]
    bcf8:	b	bc68 <getContext+0x344>
    bcfc:	movw	r0, #1
    bd00:	strb	r0, [fp, #-21]	; 0xffffffeb
    bd04:	b	baa0 <getContext+0x17c>
    bd08:	ldr	r1, [fp, #-12]
    bd0c:	sub	r0, fp, #20
    bd10:	bl	dbc0 <hashTableIterInit>
    bd14:	sub	r0, fp, #20
    bd18:	bl	dc00 <hashTableIterNext>
    bd1c:	str	r0, [sp]
    bd20:	ldr	r0, [sp]
    bd24:	movw	lr, #0
    bd28:	cmp	r0, lr
    bd2c:	bne	bd34 <getContext+0x410>
    bd30:	b	be4c <getContext+0x528>
    bd34:	ldr	r0, [sp]
    bd38:	ldrsb	r0, [r0, #32]
    bd3c:	cmp	r0, #0
    bd40:	bne	bd48 <getContext+0x424>
    bd44:	b	bd14 <getContext+0x3f0>
    bd48:	ldrb	r0, [fp, #-21]	; 0xffffffeb
    bd4c:	cmp	r0, #0
    bd50:	beq	bdb0 <getContext+0x48c>
    bd54:	ldr	r0, [fp, #-8]
    bd58:	ldr	r0, [r0, #444]	; 0x1bc
    bd5c:	ldr	r1, [fp, #-8]
    bd60:	ldr	r1, [r1, #440]	; 0x1b8
    bd64:	cmp	r0, r1
    bd68:	bne	bd88 <getContext+0x464>
    bd6c:	ldr	r0, [fp, #-8]
    bd70:	add	r0, r0, #432	; 0x1b0
    bd74:	bl	8764 <poolGrow>
    bd78:	sxtb	r0, r0
    bd7c:	cmp	r0, #0
    bd80:	bne	bd88 <getContext+0x464>
    bd84:	b	bda4 <getContext+0x480>
    bd88:	ldr	r0, [fp, #-8]
    bd8c:	ldr	r1, [r0, #444]	; 0x1bc
    bd90:	add	r2, r1, #1
    bd94:	str	r2, [r0, #444]	; 0x1bc
    bd98:	movw	r0, #12
    bd9c:	strb	r0, [r1]
    bda0:	b	bdb0 <getContext+0x48c>
    bda4:	movw	r0, #0
    bda8:	str	r0, [fp, #-4]
    bdac:	b	beb4 <getContext+0x590>
    bdb0:	ldr	r0, [sp]
    bdb4:	ldr	r0, [r0]
    bdb8:	str	r0, [sp, #4]
    bdbc:	ldr	r0, [sp, #4]
    bdc0:	ldrsb	r0, [r0]
    bdc4:	cmp	r0, #0
    bdc8:	beq	be40 <getContext+0x51c>
    bdcc:	ldr	r0, [fp, #-8]
    bdd0:	ldr	r0, [r0, #444]	; 0x1bc
    bdd4:	ldr	r1, [fp, #-8]
    bdd8:	ldr	r1, [r1, #440]	; 0x1b8
    bddc:	cmp	r0, r1
    bde0:	bne	be00 <getContext+0x4dc>
    bde4:	ldr	r0, [fp, #-8]
    bde8:	add	r0, r0, #432	; 0x1b0
    bdec:	bl	8764 <poolGrow>
    bdf0:	sxtb	r0, r0
    bdf4:	cmp	r0, #0
    bdf8:	bne	be00 <getContext+0x4dc>
    bdfc:	b	be20 <getContext+0x4fc>
    be00:	ldr	r0, [sp, #4]
    be04:	ldrb	r0, [r0]
    be08:	ldr	r1, [fp, #-8]
    be0c:	ldr	r2, [r1, #444]	; 0x1bc
    be10:	add	r3, r2, #1
    be14:	str	r3, [r1, #444]	; 0x1bc
    be18:	strb	r0, [r2]
    be1c:	b	be2c <getContext+0x508>
    be20:	movw	r0, #0
    be24:	str	r0, [fp, #-4]
    be28:	b	beb4 <getContext+0x590>
    be2c:	b	be30 <getContext+0x50c>
    be30:	ldr	r0, [sp, #4]
    be34:	add	r0, r0, #1
    be38:	str	r0, [sp, #4]
    be3c:	b	bdbc <getContext+0x498>
    be40:	movw	r0, #1
    be44:	strb	r0, [fp, #-21]	; 0xffffffeb
    be48:	b	bd14 <getContext+0x3f0>
    be4c:	ldr	r0, [fp, #-8]
    be50:	ldr	r0, [r0, #444]	; 0x1bc
    be54:	ldr	r1, [fp, #-8]
    be58:	ldr	r1, [r1, #440]	; 0x1b8
    be5c:	cmp	r0, r1
    be60:	bne	be80 <getContext+0x55c>
    be64:	ldr	r0, [fp, #-8]
    be68:	add	r0, r0, #432	; 0x1b0
    be6c:	bl	8764 <poolGrow>
    be70:	sxtb	r0, r0
    be74:	cmp	r0, #0
    be78:	bne	be80 <getContext+0x55c>
    be7c:	b	be9c <getContext+0x578>
    be80:	ldr	r0, [fp, #-8]
    be84:	ldr	r1, [r0, #444]	; 0x1bc
    be88:	add	r2, r1, #1
    be8c:	str	r2, [r0, #444]	; 0x1bc
    be90:	movw	r0, #0
    be94:	strb	r0, [r1]
    be98:	b	bea8 <getContext+0x584>
    be9c:	movw	r0, #0
    bea0:	str	r0, [fp, #-4]
    bea4:	b	beb4 <getContext+0x590>
    bea8:	ldr	r0, [fp, #-8]
    beac:	ldr	r0, [r0, #448]	; 0x1c0
    beb0:	str	r0, [fp, #-4]
    beb4:	ldr	r0, [fp, #-4]
    beb8:	mov	sp, fp
    bebc:	pop	{fp, pc}

0000bec0 <storeAtts>:
    bec0:	push	{r4, sl, fp, lr}
    bec4:	add	fp, sp, #8
    bec8:	sub	sp, sp, #264	; 0x108
    becc:	ldr	ip, [fp, #8]
    bed0:	str	r0, [fp, #-16]
    bed4:	str	r1, [fp, #-20]	; 0xffffffec
    bed8:	str	r2, [fp, #-24]	; 0xffffffe8
    bedc:	str	r3, [fp, #-28]	; 0xffffffe4
    bee0:	ldr	r0, [fp, #-16]
    bee4:	ldr	r0, [r0, #364]	; 0x16c
    bee8:	str	r0, [fp, #-32]	; 0xffffffe0
    beec:	movw	r0, #0
    bef0:	str	r0, [fp, #-48]	; 0xffffffd0
    bef4:	str	r0, [fp, #-68]	; 0xffffffbc
    bef8:	ldr	r1, [fp, #-16]
    befc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bf00:	add	r2, r2, #20
    bf04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bf08:	ldr	r3, [r3]
    bf0c:	str	r0, [sp, #96]	; 0x60
    bf10:	mov	r0, r1
    bf14:	mov	r1, r2
    bf18:	mov	r2, r3
    bf1c:	ldr	r3, [sp, #96]	; 0x60
    bf20:	str	ip, [sp, #92]	; 0x5c
    bf24:	bl	7694 <lookup>
    bf28:	str	r0, [fp, #-36]	; 0xffffffdc
    bf2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bf30:	movw	r1, #0
    bf34:	cmp	r0, r1
    bf38:	bne	bfdc <storeAtts+0x11c>
    bf3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf40:	add	r0, r0, #80	; 0x50
    bf44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bf48:	ldr	r1, [r1]
    bf4c:	bl	c54 <poolCopyString>
    bf50:	str	r0, [fp, #-80]	; 0xffffffb0
    bf54:	ldr	r0, [fp, #-80]	; 0xffffffb0
    bf58:	movw	r1, #0
    bf5c:	cmp	r0, r1
    bf60:	bne	bf70 <storeAtts+0xb0>
    bf64:	movw	r0, #1
    bf68:	str	r0, [fp, #-12]
    bf6c:	b	d234 <storeAtts+0x1374>
    bf70:	ldr	r0, [fp, #-16]
    bf74:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bf78:	add	r1, r1, #20
    bf7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    bf80:	movw	r3, #24
    bf84:	bl	7694 <lookup>
    bf88:	str	r0, [fp, #-36]	; 0xffffffdc
    bf8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bf90:	movw	r1, #0
    bf94:	cmp	r0, r1
    bf98:	bne	bfa8 <storeAtts+0xe8>
    bf9c:	movw	r0, #1
    bfa0:	str	r0, [fp, #-12]
    bfa4:	b	d234 <storeAtts+0x1374>
    bfa8:	ldr	r0, [fp, #-16]
    bfac:	ldrb	r0, [r0, #244]	; 0xf4
    bfb0:	cmp	r0, #0
    bfb4:	beq	bfd8 <storeAtts+0x118>
    bfb8:	ldr	r0, [fp, #-16]
    bfbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    bfc0:	bl	dc6c <setElementTypePrefix>
    bfc4:	cmp	r0, #0
    bfc8:	bne	bfd8 <storeAtts+0x118>
    bfcc:	movw	r0, #1
    bfd0:	str	r0, [fp, #-12]
    bfd4:	b	d234 <storeAtts+0x1374>
    bfd8:	b	bfdc <storeAtts+0x11c>
    bfdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bfe0:	ldr	r0, [r0, #12]
    bfe4:	str	r0, [fp, #-40]	; 0xffffffd8
    bfe8:	ldr	r0, [fp, #-20]	; 0xffffffec
    bfec:	ldr	r0, [r0, #40]	; 0x28
    bff0:	ldr	r1, [fp, #-20]	; 0xffffffec
    bff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bff8:	ldr	r3, [fp, #-16]
    bffc:	ldr	r3, [r3, #388]	; 0x184
    c000:	ldr	ip, [fp, #-16]
    c004:	ldr	ip, [ip, #400]	; 0x190
    c008:	str	r0, [sp, #88]	; 0x58
    c00c:	mov	r0, r1
    c010:	mov	r1, r2
    c014:	mov	r2, r3
    c018:	mov	r3, ip
    c01c:	ldr	ip, [sp, #88]	; 0x58
    c020:	blx	ip
    c024:	str	r0, [fp, #-60]	; 0xffffffc4
    c028:	ldr	r0, [fp, #-60]	; 0xffffffc4
    c02c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c030:	add	r0, r0, r1
    c034:	ldr	r1, [fp, #-16]
    c038:	ldr	r1, [r1, #388]	; 0x184
    c03c:	cmp	r0, r1
    c040:	ble	c108 <storeAtts+0x248>
    c044:	ldr	r0, [fp, #-16]
    c048:	ldr	r0, [r0, #388]	; 0x184
    c04c:	str	r0, [fp, #-84]	; 0xffffffac
    c050:	ldr	r0, [fp, #-60]	; 0xffffffc4
    c054:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c058:	add	r0, r0, r1
    c05c:	add	r0, r0, #16
    c060:	ldr	r1, [fp, #-16]
    c064:	str	r0, [r1, #388]	; 0x184
    c068:	ldr	r0, [fp, #-16]
    c06c:	ldr	r1, [r0, #16]
    c070:	ldr	r2, [r0, #388]	; 0x184
    c074:	ldr	r0, [r0, #400]	; 0x190
    c078:	lsl	r2, r2, #4
    c07c:	str	r1, [sp, #84]	; 0x54
    c080:	mov	r1, r2
    c084:	ldr	r2, [sp, #84]	; 0x54
    c088:	blx	r2
    c08c:	str	r0, [fp, #-88]	; 0xffffffa8
    c090:	ldr	r0, [fp, #-88]	; 0xffffffa8
    c094:	movw	r1, #0
    c098:	cmp	r0, r1
    c09c:	bne	c0ac <storeAtts+0x1ec>
    c0a0:	movw	r0, #1
    c0a4:	str	r0, [fp, #-12]
    c0a8:	b	d234 <storeAtts+0x1374>
    c0ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
    c0b0:	ldr	r1, [fp, #-16]
    c0b4:	str	r0, [r1, #400]	; 0x190
    c0b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    c0bc:	ldr	r1, [fp, #-84]	; 0xffffffac
    c0c0:	cmp	r0, r1
    c0c4:	ble	c104 <storeAtts+0x244>
    c0c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    c0cc:	ldr	r0, [r0, #40]	; 0x28
    c0d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    c0d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c0d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c0dc:	ldr	ip, [fp, #-16]
    c0e0:	ldr	ip, [ip, #400]	; 0x190
    c0e4:	str	r0, [sp, #80]	; 0x50
    c0e8:	mov	r0, r1
    c0ec:	mov	r1, r2
    c0f0:	mov	r2, r3
    c0f4:	mov	r3, ip
    c0f8:	ldr	ip, [sp, #80]	; 0x50
    c0fc:	blx	ip
    c100:	str	r0, [sp, #76]	; 0x4c
    c104:	b	c108 <storeAtts+0x248>
    c108:	ldr	r0, [fp, #-16]
    c10c:	ldr	r0, [r0, #400]	; 0x190
    c110:	str	r0, [fp, #-44]	; 0xffffffd4
    c114:	movw	r0, #0
    c118:	str	r0, [fp, #-56]	; 0xffffffc8
    c11c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c120:	ldr	r1, [fp, #-60]	; 0xffffffc4
    c124:	cmp	r0, r1
    c128:	bge	c4d0 <storeAtts+0x610>
    c12c:	ldr	r0, [fp, #-16]
    c130:	ldr	r0, [r0, #400]	; 0x190
    c134:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c138:	add	r0, r0, r1, lsl #4
    c13c:	str	r0, [fp, #-92]	; 0xffffffa4
    c140:	ldr	r0, [fp, #-16]
    c144:	ldr	r1, [fp, #-20]	; 0xffffffec
    c148:	ldr	r2, [fp, #-92]	; 0xffffffa4
    c14c:	ldr	r2, [r2]
    c150:	ldr	r3, [fp, #-92]	; 0xffffffa4
    c154:	ldr	r3, [r3]
    c158:	ldr	ip, [fp, #-20]	; 0xffffffec
    c15c:	ldr	ip, [ip, #32]
    c160:	ldr	lr, [fp, #-20]	; 0xffffffec
    c164:	ldr	r4, [fp, #-92]	; 0xffffffa4
    c168:	ldr	r4, [r4]
    c16c:	str	r0, [sp, #72]	; 0x48
    c170:	mov	r0, lr
    c174:	str	r1, [sp, #68]	; 0x44
    c178:	mov	r1, r4
    c17c:	str	r2, [sp, #64]	; 0x40
    c180:	str	r3, [sp, #60]	; 0x3c
    c184:	blx	ip
    c188:	ldr	r1, [sp, #60]	; 0x3c
    c18c:	add	r3, r1, r0
    c190:	ldr	r0, [sp, #72]	; 0x48
    c194:	ldr	r1, [sp, #68]	; 0x44
    c198:	ldr	r2, [sp, #64]	; 0x40
    c19c:	bl	7f78 <getAttributeId>
    c1a0:	str	r0, [fp, #-96]	; 0xffffffa0
    c1a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c1a8:	movw	r1, #0
    c1ac:	cmp	r0, r1
    c1b0:	bne	c1c0 <storeAtts+0x300>
    c1b4:	movw	r0, #1
    c1b8:	str	r0, [fp, #-12]
    c1bc:	b	d234 <storeAtts+0x1374>
    c1c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c1c4:	ldr	r0, [r0]
    c1c8:	ldrsb	r0, [r0, #-1]
    c1cc:	cmp	r0, #0
    c1d0:	beq	c210 <storeAtts+0x350>
    c1d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    c1d8:	ldr	r1, [fp, #-16]
    c1dc:	ldr	r1, [r1, #152]	; 0x98
    c1e0:	cmp	r0, r1
    c1e4:	bne	c204 <storeAtts+0x344>
    c1e8:	ldr	r0, [fp, #-16]
    c1ec:	ldr	r0, [r0, #400]	; 0x190
    c1f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c1f4:	add	r0, r0, r1, lsl #4
    c1f8:	ldr	r0, [r0]
    c1fc:	ldr	r1, [fp, #-16]
    c200:	str	r0, [r1, #296]	; 0x128
    c204:	movw	r0, #8
    c208:	str	r0, [fp, #-12]
    c20c:	b	d234 <storeAtts+0x1374>
    c210:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c214:	ldr	r0, [r0]
    c218:	mov	r1, #1
    c21c:	strb	r1, [r0, #-1]
    c220:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c224:	ldr	r0, [r0]
    c228:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c22c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c230:	add	r3, r2, #1
    c234:	str	r3, [fp, #-48]	; 0xffffffd0
    c238:	str	r0, [r1, r2, lsl #2]
    c23c:	ldr	r0, [fp, #-16]
    c240:	ldr	r0, [r0, #400]	; 0x190
    c244:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c248:	add	r0, r0, r1, lsl #4
    c24c:	ldrsb	r0, [r0, #12]
    c250:	cmp	r0, #0
    c254:	bne	c378 <storeAtts+0x4b8>
    c258:	movw	r0, #1
    c25c:	strb	r0, [fp, #-101]	; 0xffffff9b
    c260:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c264:	ldrsb	r0, [r0, #8]
    c268:	cmp	r0, #0
    c26c:	beq	c2ec <storeAtts+0x42c>
    c270:	movw	r0, #0
    c274:	str	r0, [fp, #-108]	; 0xffffff94
    c278:	ldr	r0, [fp, #-108]	; 0xffffff94
    c27c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c280:	cmp	r0, r1
    c284:	bge	c2e8 <storeAtts+0x428>
    c288:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c28c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c290:	ldr	r1, [r1, #20]
    c294:	ldr	r2, [fp, #-108]	; 0xffffff94
    c298:	movw	r3, #12
    c29c:	mul	r2, r2, r3
    c2a0:	add	r1, r1, r2
    c2a4:	ldr	r1, [r1]
    c2a8:	cmp	r0, r1
    c2ac:	bne	c2d4 <storeAtts+0x414>
    c2b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c2b4:	ldr	r0, [r0, #20]
    c2b8:	ldr	r1, [fp, #-108]	; 0xffffff94
    c2bc:	movw	r2, #12
    c2c0:	mul	r1, r1, r2
    c2c4:	add	r0, r0, r1
    c2c8:	ldrb	r0, [r0, #4]
    c2cc:	strb	r0, [fp, #-101]	; 0xffffff9b
    c2d0:	b	c2e8 <storeAtts+0x428>
    c2d4:	b	c2d8 <storeAtts+0x418>
    c2d8:	ldr	r0, [fp, #-108]	; 0xffffff94
    c2dc:	add	r0, r0, #1
    c2e0:	str	r0, [fp, #-108]	; 0xffffff94
    c2e4:	b	c278 <storeAtts+0x3b8>
    c2e8:	b	c2ec <storeAtts+0x42c>
    c2ec:	ldr	r0, [fp, #-16]
    c2f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    c2f4:	ldrb	r2, [fp, #-101]	; 0xffffff9b
    c2f8:	ldr	r3, [r0, #400]	; 0x190
    c2fc:	ldr	ip, [fp, #-56]	; 0xffffffc8
    c300:	add	r3, r3, ip, lsl #4
    c304:	ldr	ip, [r3, #4]
    c308:	ldr	r3, [r3, #8]
    c30c:	ldr	lr, [fp, #-16]
    c310:	add	lr, lr, #432	; 0x1b0
    c314:	and	r2, r2, #255	; 0xff
    c318:	str	r3, [sp, #56]	; 0x38
    c31c:	mov	r3, ip
    c320:	ldr	ip, [sp, #56]	; 0x38
    c324:	str	ip, [sp]
    c328:	str	lr, [sp, #4]
    c32c:	bl	8b84 <storeAttributeValue>
    c330:	str	r0, [fp, #-100]	; 0xffffff9c
    c334:	ldr	r0, [fp, #-100]	; 0xffffff9c
    c338:	cmp	r0, #0
    c33c:	beq	c34c <storeAtts+0x48c>
    c340:	ldr	r0, [fp, #-100]	; 0xffffff9c
    c344:	str	r0, [fp, #-12]
    c348:	b	d234 <storeAtts+0x1374>
    c34c:	ldr	r0, [fp, #-16]
    c350:	ldr	r0, [r0, #448]	; 0x1c0
    c354:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c358:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c35c:	add	r1, r1, r2, lsl #2
    c360:	str	r0, [r1]
    c364:	ldr	r0, [fp, #-16]
    c368:	ldr	r0, [r0, #444]	; 0x1bc
    c36c:	ldr	r1, [fp, #-16]
    c370:	str	r0, [r1, #448]	; 0x1c0
    c374:	b	c3f4 <storeAtts+0x534>
    c378:	ldr	r0, [fp, #-16]
    c37c:	add	r1, r0, #432	; 0x1b0
    c380:	ldr	r2, [fp, #-20]	; 0xffffffec
    c384:	ldr	r0, [r0, #400]	; 0x190
    c388:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c38c:	add	r0, r0, r3, lsl #4
    c390:	ldr	r3, [r0, #4]
    c394:	ldr	r0, [r0, #8]
    c398:	str	r0, [sp, #52]	; 0x34
    c39c:	mov	r0, r1
    c3a0:	mov	r1, r2
    c3a4:	mov	r2, r3
    c3a8:	ldr	r3, [sp, #52]	; 0x34
    c3ac:	bl	75e4 <poolStoreString>
    c3b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c3b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c3b8:	str	r0, [r1, r2, lsl #2]
    c3bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c3c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    c3c4:	add	r0, r0, r1, lsl #2
    c3c8:	ldr	r0, [r0]
    c3cc:	movw	r1, #0
    c3d0:	cmp	r0, r1
    c3d4:	bne	c3e4 <storeAtts+0x524>
    c3d8:	movw	r0, #1
    c3dc:	str	r0, [fp, #-12]
    c3e0:	b	d234 <storeAtts+0x1374>
    c3e4:	ldr	r0, [fp, #-16]
    c3e8:	ldr	r0, [r0, #444]	; 0x1bc
    c3ec:	ldr	r1, [fp, #-16]
    c3f0:	str	r0, [r1, #448]	; 0x1c0
    c3f4:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c3f8:	ldr	r0, [r0, #4]
    c3fc:	movw	r1, #0
    c400:	cmp	r0, r1
    c404:	beq	c4b0 <storeAtts+0x5f0>
    c408:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c40c:	ldrsb	r0, [r0, #9]
    c410:	cmp	r0, #0
    c414:	beq	c47c <storeAtts+0x5bc>
    c418:	ldr	r0, [fp, #-16]
    c41c:	ldr	r1, [fp, #-96]	; 0xffffffa0
    c420:	ldr	r2, [r1, #4]
    c424:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c428:	ldr	ip, [fp, #-48]	; 0xffffffd0
    c42c:	add	r3, r3, ip, lsl #2
    c430:	ldr	r3, [r3]
    c434:	ldr	ip, [fp, #8]
    c438:	str	r1, [sp, #48]	; 0x30
    c43c:	mov	r1, r2
    c440:	ldr	r2, [sp, #48]	; 0x30
    c444:	str	ip, [sp]
    c448:	bl	de50 <addBinding>
    c44c:	str	r0, [fp, #-112]	; 0xffffff90
    c450:	ldr	r0, [fp, #-112]	; 0xffffff90
    c454:	cmp	r0, #0
    c458:	beq	c468 <storeAtts+0x5a8>
    c45c:	ldr	r0, [fp, #-112]	; 0xffffff90
    c460:	str	r0, [fp, #-12]
    c464:	b	d234 <storeAtts+0x1374>
    c468:	ldr	r0, [fp, #-48]	; 0xffffffd0
    c46c:	mvn	r1, #0
    c470:	add	r0, r0, r1
    c474:	str	r0, [fp, #-48]	; 0xffffffd0
    c478:	b	c4ac <storeAtts+0x5ec>
    c47c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    c480:	add	r0, r0, #1
    c484:	str	r0, [fp, #-48]	; 0xffffffd0
    c488:	ldr	r0, [fp, #-68]	; 0xffffffbc
    c48c:	add	r0, r0, #1
    c490:	str	r0, [fp, #-68]	; 0xffffffbc
    c494:	ldr	r0, [fp, #-96]	; 0xffffffa0
    c498:	ldr	r0, [r0]
    c49c:	mvn	r1, #0
    c4a0:	add	r0, r0, r1
    c4a4:	movw	r1, #2
    c4a8:	strb	r1, [r0]
    c4ac:	b	c4bc <storeAtts+0x5fc>
    c4b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    c4b4:	add	r0, r0, #1
    c4b8:	str	r0, [fp, #-48]	; 0xffffffd0
    c4bc:	b	c4c0 <storeAtts+0x600>
    c4c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c4c4:	add	r0, r0, #1
    c4c8:	str	r0, [fp, #-56]	; 0xffffffc8
    c4cc:	b	c11c <storeAtts+0x25c>
    c4d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    c4d4:	ldr	r1, [fp, #-16]
    c4d8:	str	r0, [r1, #392]	; 0x188
    c4dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c4e0:	ldr	r0, [r0, #8]
    c4e4:	movw	r1, #0
    c4e8:	cmp	r0, r1
    c4ec:	beq	c574 <storeAtts+0x6b4>
    c4f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c4f4:	ldr	r0, [r0, #8]
    c4f8:	ldr	r0, [r0]
    c4fc:	mvn	r1, #0
    c500:	add	r0, r0, r1
    c504:	ldrb	r0, [r0]
    c508:	cmp	r0, #0
    c50c:	beq	c574 <storeAtts+0x6b4>
    c510:	movw	r0, #0
    c514:	str	r0, [fp, #-56]	; 0xffffffc8
    c518:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c51c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    c520:	cmp	r0, r1
    c524:	bge	c570 <storeAtts+0x6b0>
    c528:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c52c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c530:	add	r0, r0, r1, lsl #2
    c534:	ldr	r0, [r0]
    c538:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c53c:	ldr	r1, [r1, #8]
    c540:	ldr	r1, [r1]
    c544:	cmp	r0, r1
    c548:	bne	c55c <storeAtts+0x69c>
    c54c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c550:	ldr	r1, [fp, #-16]
    c554:	str	r0, [r1, #396]	; 0x18c
    c558:	b	c570 <storeAtts+0x6b0>
    c55c:	b	c560 <storeAtts+0x6a0>
    c560:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c564:	add	r0, r0, #2
    c568:	str	r0, [fp, #-56]	; 0xffffffc8
    c56c:	b	c518 <storeAtts+0x658>
    c570:	b	c580 <storeAtts+0x6c0>
    c574:	ldr	r0, [fp, #-16]
    c578:	mvn	r1, #0
    c57c:	str	r1, [r0, #396]	; 0x18c
    c580:	movw	r0, #0
    c584:	str	r0, [fp, #-56]	; 0xffffffc8
    c588:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c58c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c590:	cmp	r0, r1
    c594:	bge	c728 <storeAtts+0x868>
    c598:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c59c:	ldr	r0, [r0, #20]
    c5a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c5a4:	movw	r2, #12
    c5a8:	mul	r1, r1, r2
    c5ac:	add	r0, r0, r1
    c5b0:	str	r0, [fp, #-116]	; 0xffffff8c
    c5b4:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c5b8:	ldr	r0, [r0]
    c5bc:	ldr	r0, [r0]
    c5c0:	ldrsb	r0, [r0, #-1]
    c5c4:	cmp	r0, #0
    c5c8:	bne	c714 <storeAtts+0x854>
    c5cc:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c5d0:	ldr	r0, [r0, #8]
    c5d4:	movw	r1, #0
    c5d8:	cmp	r0, r1
    c5dc:	beq	c714 <storeAtts+0x854>
    c5e0:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c5e4:	ldr	r0, [r0]
    c5e8:	ldr	r0, [r0, #4]
    c5ec:	movw	r1, #0
    c5f0:	cmp	r0, r1
    c5f4:	beq	c6bc <storeAtts+0x7fc>
    c5f8:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c5fc:	ldr	r0, [r0]
    c600:	ldrsb	r0, [r0, #9]
    c604:	cmp	r0, #0
    c608:	beq	c658 <storeAtts+0x798>
    c60c:	ldr	r0, [fp, #-16]
    c610:	ldr	r1, [fp, #-116]	; 0xffffff8c
    c614:	ldr	r1, [r1]
    c618:	ldr	r1, [r1, #4]
    c61c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    c620:	ldr	r2, [r2]
    c624:	ldr	r3, [fp, #-116]	; 0xffffff8c
    c628:	ldr	r3, [r3, #8]
    c62c:	ldr	ip, [fp, #8]
    c630:	str	ip, [sp]
    c634:	bl	de50 <addBinding>
    c638:	str	r0, [fp, #-120]	; 0xffffff88
    c63c:	ldr	r0, [fp, #-120]	; 0xffffff88
    c640:	cmp	r0, #0
    c644:	beq	c654 <storeAtts+0x794>
    c648:	ldr	r0, [fp, #-120]	; 0xffffff88
    c64c:	str	r0, [fp, #-12]
    c650:	b	d234 <storeAtts+0x1374>
    c654:	b	c6b8 <storeAtts+0x7f8>
    c658:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c65c:	ldr	r0, [r0]
    c660:	ldr	r0, [r0]
    c664:	mov	r1, #2
    c668:	strb	r1, [r0, #-1]
    c66c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    c670:	add	r0, r0, #1
    c674:	str	r0, [fp, #-68]	; 0xffffffbc
    c678:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c67c:	ldr	r0, [r0]
    c680:	ldr	r0, [r0]
    c684:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c688:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c68c:	add	r3, r2, #1
    c690:	str	r3, [fp, #-48]	; 0xffffffd0
    c694:	str	r0, [r1, r2, lsl #2]
    c698:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c69c:	ldr	r0, [r0, #8]
    c6a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c6a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c6a8:	add	r3, r2, #1
    c6ac:	str	r3, [fp, #-48]	; 0xffffffd0
    c6b0:	add	r1, r1, r2, lsl #2
    c6b4:	str	r0, [r1]
    c6b8:	b	c710 <storeAtts+0x850>
    c6bc:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c6c0:	ldr	r0, [r0]
    c6c4:	ldr	r0, [r0]
    c6c8:	mov	r1, #1
    c6cc:	strb	r1, [r0, #-1]
    c6d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c6d4:	ldr	r0, [r0]
    c6d8:	ldr	r0, [r0]
    c6dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c6e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c6e4:	add	r3, r2, #1
    c6e8:	str	r3, [fp, #-48]	; 0xffffffd0
    c6ec:	str	r0, [r1, r2, lsl #2]
    c6f0:	ldr	r0, [fp, #-116]	; 0xffffff8c
    c6f4:	ldr	r0, [r0, #8]
    c6f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c6fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    c700:	add	r3, r2, #1
    c704:	str	r3, [fp, #-48]	; 0xffffffd0
    c708:	add	r1, r1, r2, lsl #2
    c70c:	str	r0, [r1]
    c710:	b	c714 <storeAtts+0x854>
    c714:	b	c718 <storeAtts+0x858>
    c718:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c71c:	add	r0, r0, #1
    c720:	str	r0, [fp, #-56]	; 0xffffffc8
    c724:	b	c588 <storeAtts+0x6c8>
    c728:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c72c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    c730:	add	r0, r0, r1, lsl #2
    c734:	movw	r1, #0
    c738:	str	r1, [r0]
    c73c:	str	r1, [fp, #-56]	; 0xffffffc8
    c740:	ldr	r0, [fp, #-68]	; 0xffffffbc
    c744:	cmp	r0, #0
    c748:	beq	ce4c <storeAtts+0xf8c>
    c74c:	ldr	r0, [fp, #-16]
    c750:	ldr	r0, [r0, #408]	; 0x198
    c754:	str	r0, [fp, #-128]	; 0xffffff80
    c758:	ldr	r0, [fp, #-16]
    c75c:	ldrb	r0, [r0, #412]	; 0x19c
    c760:	movw	r1, #1
    c764:	lsl	r0, r1, r0
    c768:	str	r0, [fp, #-132]	; 0xffffff7c
    c76c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    c770:	lsl	r0, r0, #1
    c774:	ldr	r1, [fp, #-16]
    c778:	ldrb	r1, [r1, #412]	; 0x19c
    c77c:	asr	r0, r0, r1
    c780:	cmp	r0, #0
    c784:	beq	c84c <storeAtts+0x98c>
    c788:	b	c78c <storeAtts+0x8cc>
    c78c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    c790:	ldr	r1, [fp, #-16]
    c794:	ldrb	r2, [r1, #412]	; 0x19c
    c798:	movw	r3, #1
    c79c:	add	r3, r2, r3
    c7a0:	strb	r3, [r1, #412]	; 0x19c
    c7a4:	and	r1, r2, #255	; 0xff
    c7a8:	asr	r0, r0, r1
    c7ac:	cmp	r0, #0
    c7b0:	beq	c7b8 <storeAtts+0x8f8>
    c7b4:	b	c78c <storeAtts+0x8cc>
    c7b8:	ldr	r0, [fp, #-16]
    c7bc:	ldrb	r0, [r0, #412]	; 0x19c
    c7c0:	cmp	r0, #3
    c7c4:	bge	c7d4 <storeAtts+0x914>
    c7c8:	ldr	r0, [fp, #-16]
    c7cc:	movw	r1, #3
    c7d0:	strb	r1, [r0, #412]	; 0x19c
    c7d4:	ldr	r0, [fp, #-16]
    c7d8:	ldrb	r0, [r0, #412]	; 0x19c
    c7dc:	movw	r1, #1
    c7e0:	lsl	r0, r1, r0
    c7e4:	str	r0, [fp, #-132]	; 0xffffff7c
    c7e8:	ldr	r0, [fp, #-16]
    c7ec:	ldr	r0, [r0, #16]
    c7f0:	ldr	r1, [fp, #-16]
    c7f4:	ldr	r1, [r1, #404]	; 0x194
    c7f8:	ldr	r2, [fp, #-132]	; 0xffffff7c
    c7fc:	movw	r3, #12
    c800:	mul	r2, r2, r3
    c804:	str	r0, [sp, #44]	; 0x2c
    c808:	mov	r0, r1
    c80c:	mov	r1, r2
    c810:	ldr	r2, [sp, #44]	; 0x2c
    c814:	blx	r2
    c818:	str	r0, [sp, #136]	; 0x88
    c81c:	ldr	r0, [sp, #136]	; 0x88
    c820:	movw	r1, #0
    c824:	cmp	r0, r1
    c828:	bne	c838 <storeAtts+0x978>
    c82c:	movw	r0, #1
    c830:	str	r0, [fp, #-12]
    c834:	b	d234 <storeAtts+0x1374>
    c838:	ldr	r0, [sp, #136]	; 0x88
    c83c:	ldr	r1, [fp, #-16]
    c840:	str	r0, [r1, #404]	; 0x194
    c844:	movw	r0, #0
    c848:	str	r0, [fp, #-128]	; 0xffffff80
    c84c:	ldr	r0, [fp, #-128]	; 0xffffff80
    c850:	cmp	r0, #0
    c854:	bne	c8a8 <storeAtts+0x9e8>
    c858:	mvn	r0, #0
    c85c:	str	r0, [fp, #-128]	; 0xffffff80
    c860:	ldr	r0, [fp, #-132]	; 0xffffff7c
    c864:	str	r0, [fp, #-124]	; 0xffffff84
    c868:	ldr	r0, [fp, #-124]	; 0xffffff84
    c86c:	cmp	r0, #0
    c870:	beq	c8a4 <storeAtts+0x9e4>
    c874:	ldr	r0, [fp, #-128]	; 0xffffff80
    c878:	ldr	r1, [fp, #-16]
    c87c:	ldr	r1, [r1, #404]	; 0x194
    c880:	ldr	r2, [fp, #-124]	; 0xffffff84
    c884:	mvn	r3, #0
    c888:	add	r2, r2, r3
    c88c:	str	r2, [fp, #-124]	; 0xffffff84
    c890:	movw	r3, #12
    c894:	mul	r2, r2, r3
    c898:	add	r1, r1, r2
    c89c:	str	r0, [r1]
    c8a0:	b	c868 <storeAtts+0x9a8>
    c8a4:	b	c8a8 <storeAtts+0x9e8>
    c8a8:	ldr	r0, [fp, #-128]	; 0xffffff80
    c8ac:	mvn	r1, #0
    c8b0:	add	r0, r0, r1
    c8b4:	str	r0, [fp, #-128]	; 0xffffff80
    c8b8:	ldr	r1, [fp, #-16]
    c8bc:	str	r0, [r1, #408]	; 0x198
    c8c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    c8c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    c8c8:	cmp	r0, r1
    c8cc:	bge	ce48 <storeAtts+0xf88>
    c8d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c8d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c8d8:	add	r0, r0, r1, lsl #2
    c8dc:	ldr	r0, [r0]
    c8e0:	str	r0, [sp, #132]	; 0x84
    c8e4:	ldr	r0, [sp, #132]	; 0x84
    c8e8:	mvn	r1, #0
    c8ec:	add	r0, r0, r1
    c8f0:	ldrb	r0, [r0]
    c8f4:	cmp	r0, #2
    c8f8:	bne	ce20 <storeAtts+0xf60>
    c8fc:	ldr	r0, [fp, #-16]
    c900:	ldr	r0, [r0, #512]	; 0x200
    c904:	str	r0, [sp, #120]	; 0x78
    c908:	ldr	r0, [sp, #132]	; 0x84
    c90c:	mvn	r1, #0
    c910:	add	r0, r0, r1
    c914:	movw	r1, #0
    c918:	strb	r1, [r0]
    c91c:	ldr	r0, [fp, #-16]
    c920:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c924:	add	r1, r1, #40	; 0x28
    c928:	ldr	r2, [sp, #132]	; 0x84
    c92c:	movw	r3, #0
    c930:	bl	7694 <lookup>
    c934:	str	r0, [sp, #128]	; 0x80
    c938:	ldr	r0, [sp, #128]	; 0x80
    c93c:	movw	r1, #0
    c940:	cmp	r0, r1
    c944:	beq	c95c <storeAtts+0xa9c>
    c948:	ldr	r0, [sp, #128]	; 0x80
    c94c:	ldr	r0, [r0, #4]
    c950:	movw	r1, #0
    c954:	cmp	r0, r1
    c958:	bne	c968 <storeAtts+0xaa8>
    c95c:	movw	r0, #1
    c960:	str	r0, [fp, #-12]
    c964:	b	d234 <storeAtts+0x1374>
    c968:	ldr	r0, [sp, #128]	; 0x80
    c96c:	ldr	r0, [r0, #4]
    c970:	ldr	r0, [r0, #4]
    c974:	str	r0, [sp, #124]	; 0x7c
    c978:	ldr	r0, [sp, #124]	; 0x7c
    c97c:	movw	r1, #0
    c980:	cmp	r0, r1
    c984:	bne	c994 <storeAtts+0xad4>
    c988:	movw	r0, #27
    c98c:	str	r0, [fp, #-12]
    c990:	b	d234 <storeAtts+0x1374>
    c994:	movw	r0, #0
    c998:	str	r0, [fp, #-124]	; 0xffffff84
    c99c:	ldr	r0, [fp, #-124]	; 0xffffff84
    c9a0:	ldr	r1, [sp, #124]	; 0x7c
    c9a4:	ldr	r1, [r1, #20]
    c9a8:	cmp	r0, r1
    c9ac:	bge	ca4c <storeAtts+0xb8c>
    c9b0:	ldr	r0, [sp, #124]	; 0x7c
    c9b4:	ldr	r0, [r0, #16]
    c9b8:	ldr	r1, [fp, #-124]	; 0xffffff84
    c9bc:	add	r0, r0, r1
    c9c0:	ldrb	r0, [r0]
    c9c4:	strb	r0, [sp, #119]	; 0x77
    c9c8:	ldr	r0, [fp, #-16]
    c9cc:	ldr	r0, [r0, #444]	; 0x1bc
    c9d0:	ldr	r1, [fp, #-16]
    c9d4:	ldr	r1, [r1, #440]	; 0x1b8
    c9d8:	cmp	r0, r1
    c9dc:	bne	c9fc <storeAtts+0xb3c>
    c9e0:	ldr	r0, [fp, #-16]
    c9e4:	add	r0, r0, #432	; 0x1b0
    c9e8:	bl	8764 <poolGrow>
    c9ec:	sxtb	r0, r0
    c9f0:	cmp	r0, #0
    c9f4:	bne	c9fc <storeAtts+0xb3c>
    c9f8:	b	ca18 <storeAtts+0xb58>
    c9fc:	ldrb	r0, [sp, #119]	; 0x77
    ca00:	ldr	r1, [fp, #-16]
    ca04:	ldr	r2, [r1, #444]	; 0x1bc
    ca08:	add	r3, r2, #1
    ca0c:	str	r3, [r1, #444]	; 0x1bc
    ca10:	strb	r0, [r2]
    ca14:	b	ca24 <storeAtts+0xb64>
    ca18:	movw	r0, #1
    ca1c:	str	r0, [fp, #-12]
    ca20:	b	d234 <storeAtts+0x1374>
    ca24:	ldr	r0, [pc, #2068]	; d240 <storeAtts+0x1380>
    ca28:	ldr	r1, [sp, #120]	; 0x78
    ca2c:	mul	r0, r1, r0
    ca30:	ldrb	r1, [sp, #119]	; 0x77
    ca34:	eor	r0, r0, r1
    ca38:	str	r0, [sp, #120]	; 0x78
    ca3c:	ldr	r0, [fp, #-124]	; 0xffffff84
    ca40:	add	r0, r0, #1
    ca44:	str	r0, [fp, #-124]	; 0xffffff84
    ca48:	b	c99c <storeAtts+0xadc>
    ca4c:	b	ca50 <storeAtts+0xb90>
    ca50:	ldr	r0, [sp, #132]	; 0x84
    ca54:	add	r1, r0, #1
    ca58:	str	r1, [sp, #132]	; 0x84
    ca5c:	ldrb	r0, [r0]
    ca60:	cmp	r0, #58	; 0x3a
    ca64:	beq	ca6c <storeAtts+0xbac>
    ca68:	b	ca50 <storeAtts+0xb90>
    ca6c:	b	ca70 <storeAtts+0xbb0>
    ca70:	ldr	r0, [sp, #132]	; 0x84
    ca74:	ldrb	r0, [r0]
    ca78:	strb	r0, [sp, #118]	; 0x76
    ca7c:	ldr	r0, [fp, #-16]
    ca80:	ldr	r0, [r0, #444]	; 0x1bc
    ca84:	ldr	r1, [fp, #-16]
    ca88:	ldr	r1, [r1, #440]	; 0x1b8
    ca8c:	cmp	r0, r1
    ca90:	bne	cab0 <storeAtts+0xbf0>
    ca94:	ldr	r0, [fp, #-16]
    ca98:	add	r0, r0, #432	; 0x1b0
    ca9c:	bl	8764 <poolGrow>
    caa0:	sxtb	r0, r0
    caa4:	cmp	r0, #0
    caa8:	bne	cab0 <storeAtts+0xbf0>
    caac:	b	cad0 <storeAtts+0xc10>
    cab0:	ldr	r0, [sp, #132]	; 0x84
    cab4:	ldrb	r0, [r0]
    cab8:	ldr	r1, [fp, #-16]
    cabc:	ldr	r2, [r1, #444]	; 0x1bc
    cac0:	add	r3, r2, #1
    cac4:	str	r3, [r1, #444]	; 0x1bc
    cac8:	strb	r0, [r2]
    cacc:	b	cadc <storeAtts+0xc1c>
    cad0:	movw	r0, #1
    cad4:	str	r0, [fp, #-12]
    cad8:	b	d234 <storeAtts+0x1374>
    cadc:	ldr	r0, [pc, #1884]	; d240 <storeAtts+0x1380>
    cae0:	ldr	r1, [sp, #120]	; 0x78
    cae4:	mul	r0, r1, r0
    cae8:	ldrb	r1, [sp, #118]	; 0x76
    caec:	eor	r0, r0, r1
    caf0:	str	r0, [sp, #120]	; 0x78
    caf4:	ldr	r0, [sp, #132]	; 0x84
    caf8:	add	r1, r0, #1
    cafc:	str	r1, [sp, #132]	; 0x84
    cb00:	ldrsb	r0, [r0]
    cb04:	cmp	r0, #0
    cb08:	bne	ca70 <storeAtts+0xbb0>
    cb0c:	movw	r0, #0
    cb10:	strb	r0, [sp, #117]	; 0x75
    cb14:	ldr	r0, [fp, #-132]	; 0xffffff7c
    cb18:	sub	r0, r0, #1
    cb1c:	str	r0, [sp, #112]	; 0x70
    cb20:	ldr	r0, [sp, #120]	; 0x78
    cb24:	ldr	r1, [sp, #112]	; 0x70
    cb28:	and	r0, r0, r1
    cb2c:	str	r0, [fp, #-124]	; 0xffffff84
    cb30:	ldr	r0, [fp, #-16]
    cb34:	ldr	r0, [r0, #404]	; 0x194
    cb38:	ldr	r1, [fp, #-124]	; 0xffffff84
    cb3c:	movw	r2, #12
    cb40:	mul	r1, r1, r2
    cb44:	add	r0, r0, r1
    cb48:	ldr	r0, [r0]
    cb4c:	ldr	r1, [fp, #-128]	; 0xffffff80
    cb50:	cmp	r0, r1
    cb54:	bne	ccb4 <storeAtts+0xdf4>
    cb58:	ldr	r0, [sp, #120]	; 0x78
    cb5c:	ldr	r1, [fp, #-16]
    cb60:	ldr	r1, [r1, #404]	; 0x194
    cb64:	ldr	r2, [fp, #-124]	; 0xffffff84
    cb68:	movw	r3, #12
    cb6c:	mul	r2, r2, r3
    cb70:	add	r1, r1, r2
    cb74:	ldr	r1, [r1, #4]
    cb78:	cmp	r0, r1
    cb7c:	bne	cc30 <storeAtts+0xd70>
    cb80:	ldr	r0, [fp, #-16]
    cb84:	ldr	r0, [r0, #448]	; 0x1c0
    cb88:	str	r0, [sp, #108]	; 0x6c
    cb8c:	ldr	r0, [fp, #-16]
    cb90:	ldr	r0, [r0, #404]	; 0x194
    cb94:	ldr	r1, [fp, #-124]	; 0xffffff84
    cb98:	movw	r2, #12
    cb9c:	mul	r1, r1, r2
    cba0:	add	r0, r0, r1
    cba4:	ldr	r0, [r0, #8]
    cba8:	str	r0, [sp, #104]	; 0x68
    cbac:	ldr	r0, [sp, #108]	; 0x6c
    cbb0:	ldrb	r0, [r0]
    cbb4:	ldr	r1, [sp, #104]	; 0x68
    cbb8:	ldrb	r1, [r1]
    cbbc:	cmp	r0, r1
    cbc0:	movw	r0, #0
    cbc4:	str	r0, [sp, #40]	; 0x28
    cbc8:	bne	cbe4 <storeAtts+0xd24>
    cbcc:	ldr	r0, [sp, #108]	; 0x6c
    cbd0:	ldrb	r0, [r0]
    cbd4:	cmp	r0, #0
    cbd8:	movw	r0, #0
    cbdc:	movne	r0, #1
    cbe0:	str	r0, [sp, #40]	; 0x28
    cbe4:	ldr	r0, [sp, #40]	; 0x28
    cbe8:	tst	r0, #1
    cbec:	beq	cc10 <storeAtts+0xd50>
    cbf0:	b	cbf4 <storeAtts+0xd34>
    cbf4:	ldr	r0, [sp, #108]	; 0x6c
    cbf8:	add	r0, r0, #1
    cbfc:	str	r0, [sp, #108]	; 0x6c
    cc00:	ldr	r0, [sp, #104]	; 0x68
    cc04:	add	r0, r0, #1
    cc08:	str	r0, [sp, #104]	; 0x68
    cc0c:	b	cbac <storeAtts+0xcec>
    cc10:	ldr	r0, [sp, #108]	; 0x6c
    cc14:	ldrb	r0, [r0]
    cc18:	cmp	r0, #0
    cc1c:	bne	cc2c <storeAtts+0xd6c>
    cc20:	movw	r0, #8
    cc24:	str	r0, [fp, #-12]
    cc28:	b	d234 <storeAtts+0x1374>
    cc2c:	b	cc30 <storeAtts+0xd70>
    cc30:	ldrsb	r0, [sp, #117]	; 0x75
    cc34:	cmp	r0, #0
    cc38:	bne	cc74 <storeAtts+0xdb4>
    cc3c:	ldr	r0, [sp, #120]	; 0x78
    cc40:	ldr	r1, [sp, #112]	; 0x70
    cc44:	mvn	r2, #0
    cc48:	eor	r1, r1, r2
    cc4c:	and	r0, r0, r1
    cc50:	ldr	r1, [fp, #-16]
    cc54:	ldrb	r1, [r1, #412]	; 0x19c
    cc58:	sub	r1, r1, #1
    cc5c:	lsr	r0, r0, r1
    cc60:	ldr	r1, [sp, #112]	; 0x70
    cc64:	lsr	r1, r1, #2
    cc68:	and	r0, r0, r1
    cc6c:	orr	r0, r0, #1
    cc70:	strb	r0, [sp, #117]	; 0x75
    cc74:	ldr	r0, [fp, #-124]	; 0xffffff84
    cc78:	ldrb	r1, [sp, #117]	; 0x75
    cc7c:	cmp	r0, r1
    cc80:	bge	cca0 <storeAtts+0xde0>
    cc84:	ldr	r0, [fp, #-132]	; 0xffffff7c
    cc88:	ldrb	r1, [sp, #117]	; 0x75
    cc8c:	sub	r0, r0, r1
    cc90:	ldr	r1, [fp, #-124]	; 0xffffff84
    cc94:	add	r0, r1, r0
    cc98:	str	r0, [fp, #-124]	; 0xffffff84
    cc9c:	b	ccb0 <storeAtts+0xdf0>
    cca0:	ldrb	r0, [sp, #117]	; 0x75
    cca4:	ldr	r1, [fp, #-124]	; 0xffffff84
    cca8:	sub	r0, r1, r0
    ccac:	str	r0, [fp, #-124]	; 0xffffff84
    ccb0:	b	cb30 <storeAtts+0xc70>
    ccb4:	ldr	r0, [fp, #-16]
    ccb8:	ldrsb	r0, [r0, #245]	; 0xf5
    ccbc:	cmp	r0, #0
    ccc0:	beq	cd70 <storeAtts+0xeb0>
    ccc4:	ldr	r0, [fp, #-16]
    ccc8:	ldrb	r0, [r0, #488]	; 0x1e8
    cccc:	ldr	r1, [fp, #-16]
    ccd0:	ldr	r1, [r1, #444]	; 0x1bc
    ccd4:	mvn	r2, #0
    ccd8:	add	r1, r1, r2
    ccdc:	strb	r0, [r1]
    cce0:	ldr	r0, [sp, #124]	; 0x7c
    cce4:	ldr	r0, [r0]
    cce8:	ldr	r0, [r0]
    ccec:	str	r0, [sp, #132]	; 0x84
    ccf0:	ldr	r0, [fp, #-16]
    ccf4:	ldr	r0, [r0, #444]	; 0x1bc
    ccf8:	ldr	r1, [fp, #-16]
    ccfc:	ldr	r1, [r1, #440]	; 0x1b8
    cd00:	cmp	r0, r1
    cd04:	bne	cd24 <storeAtts+0xe64>
    cd08:	ldr	r0, [fp, #-16]
    cd0c:	add	r0, r0, #432	; 0x1b0
    cd10:	bl	8764 <poolGrow>
    cd14:	sxtb	r0, r0
    cd18:	cmp	r0, #0
    cd1c:	bne	cd24 <storeAtts+0xe64>
    cd20:	b	cd44 <storeAtts+0xe84>
    cd24:	ldr	r0, [sp, #132]	; 0x84
    cd28:	ldrb	r0, [r0]
    cd2c:	ldr	r1, [fp, #-16]
    cd30:	ldr	r2, [r1, #444]	; 0x1bc
    cd34:	add	r3, r2, #1
    cd38:	str	r3, [r1, #444]	; 0x1bc
    cd3c:	strb	r0, [r2]
    cd40:	b	cd50 <storeAtts+0xe90>
    cd44:	movw	r0, #1
    cd48:	str	r0, [fp, #-12]
    cd4c:	b	d234 <storeAtts+0x1374>
    cd50:	b	cd54 <storeAtts+0xe94>
    cd54:	ldr	r0, [sp, #132]	; 0x84
    cd58:	add	r1, r0, #1
    cd5c:	str	r1, [sp, #132]	; 0x84
    cd60:	ldrsb	r0, [r0]
    cd64:	cmp	r0, #0
    cd68:	bne	ccf0 <storeAtts+0xe30>
    cd6c:	b	cd70 <storeAtts+0xeb0>
    cd70:	ldr	r0, [fp, #-16]
    cd74:	ldr	r0, [r0, #448]	; 0x1c0
    cd78:	str	r0, [sp, #132]	; 0x84
    cd7c:	ldr	r0, [fp, #-16]
    cd80:	ldr	r1, [r0, #444]	; 0x1bc
    cd84:	str	r1, [r0, #448]	; 0x1c0
    cd88:	ldr	r0, [sp, #132]	; 0x84
    cd8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    cd90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    cd94:	add	r1, r1, r2, lsl #2
    cd98:	str	r0, [r1]
    cd9c:	ldr	r0, [fp, #-128]	; 0xffffff80
    cda0:	ldr	r1, [fp, #-16]
    cda4:	ldr	r1, [r1, #404]	; 0x194
    cda8:	ldr	r2, [fp, #-124]	; 0xffffff84
    cdac:	movw	r3, #12
    cdb0:	mul	r2, r2, r3
    cdb4:	add	r1, r1, r2
    cdb8:	str	r0, [r1]
    cdbc:	ldr	r0, [sp, #120]	; 0x78
    cdc0:	ldr	r1, [fp, #-16]
    cdc4:	ldr	r1, [r1, #404]	; 0x194
    cdc8:	ldr	r2, [fp, #-124]	; 0xffffff84
    cdcc:	mul	r2, r2, r3
    cdd0:	add	r1, r1, r2
    cdd4:	str	r0, [r1, #4]
    cdd8:	ldr	r0, [sp, #132]	; 0x84
    cddc:	ldr	r1, [fp, #-16]
    cde0:	ldr	r1, [r1, #404]	; 0x194
    cde4:	ldr	r2, [fp, #-124]	; 0xffffff84
    cde8:	mul	r2, r2, r3
    cdec:	add	r1, r1, r2
    cdf0:	str	r0, [r1, #8]
    cdf4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    cdf8:	mvn	r1, #0
    cdfc:	add	r0, r0, r1
    ce00:	str	r0, [fp, #-68]	; 0xffffffbc
    ce04:	cmp	r0, #0
    ce08:	bne	ce1c <storeAtts+0xf5c>
    ce0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    ce10:	add	r0, r0, #2
    ce14:	str	r0, [fp, #-56]	; 0xffffffc8
    ce18:	b	ce48 <storeAtts+0xf88>
    ce1c:	b	ce34 <storeAtts+0xf74>
    ce20:	ldr	r0, [sp, #132]	; 0x84
    ce24:	mvn	r1, #0
    ce28:	add	r0, r0, r1
    ce2c:	movw	r1, #0
    ce30:	strb	r1, [r0]
    ce34:	b	ce38 <storeAtts+0xf78>
    ce38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    ce3c:	add	r0, r0, #2
    ce40:	str	r0, [fp, #-56]	; 0xffffffc8
    ce44:	b	c8c0 <storeAtts+0xa00>
    ce48:	b	ce4c <storeAtts+0xf8c>
    ce4c:	b	ce50 <storeAtts+0xf90>
    ce50:	ldr	r0, [fp, #-56]	; 0xffffffc8
    ce54:	ldr	r1, [fp, #-48]	; 0xffffffd0
    ce58:	cmp	r0, r1
    ce5c:	bge	ce90 <storeAtts+0xfd0>
    ce60:	ldr	r0, [fp, #-44]	; 0xffffffd4
    ce64:	ldr	r1, [fp, #-56]	; 0xffffffc8
    ce68:	add	r0, r0, r1, lsl #2
    ce6c:	ldr	r0, [r0]
    ce70:	mvn	r1, #0
    ce74:	add	r0, r0, r1
    ce78:	movw	r1, #0
    ce7c:	strb	r1, [r0]
    ce80:	ldr	r0, [fp, #-56]	; 0xffffffc8
    ce84:	add	r0, r0, #2
    ce88:	str	r0, [fp, #-56]	; 0xffffffc8
    ce8c:	b	ce50 <storeAtts+0xf90>
    ce90:	ldr	r0, [fp, #8]
    ce94:	ldr	r0, [r0]
    ce98:	str	r0, [fp, #-72]	; 0xffffffb8
    ce9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    cea0:	movw	r1, #0
    cea4:	cmp	r0, r1
    cea8:	beq	ced8 <storeAtts+0x1018>
    ceac:	ldr	r0, [fp, #-72]	; 0xffffffb8
    ceb0:	ldr	r0, [r0, #12]
    ceb4:	ldr	r0, [r0]
    ceb8:	mvn	r1, #0
    cebc:	add	r0, r0, r1
    cec0:	movw	r1, #0
    cec4:	strb	r1, [r0]
    cec8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    cecc:	ldr	r0, [r0, #4]
    ced0:	str	r0, [fp, #-72]	; 0xffffffb8
    ced4:	b	ce9c <storeAtts+0xfdc>
    ced8:	ldr	r0, [fp, #-16]
    cedc:	ldrsb	r0, [r0, #244]	; 0xf4
    cee0:	cmp	r0, #0
    cee4:	bne	cef4 <storeAtts+0x1034>
    cee8:	movw	r0, #0
    ceec:	str	r0, [fp, #-12]
    cef0:	b	d234 <storeAtts+0x1374>
    cef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    cef8:	ldr	r0, [r0, #4]
    cefc:	movw	r1, #0
    cf00:	cmp	r0, r1
    cf04:	beq	cf60 <storeAtts+0x10a0>
    cf08:	ldr	r0, [fp, #-36]	; 0xffffffdc
    cf0c:	ldr	r0, [r0, #4]
    cf10:	ldr	r0, [r0, #4]
    cf14:	str	r0, [fp, #-72]	; 0xffffffb8
    cf18:	ldr	r0, [fp, #-72]	; 0xffffffb8
    cf1c:	movw	r1, #0
    cf20:	cmp	r0, r1
    cf24:	bne	cf34 <storeAtts+0x1074>
    cf28:	movw	r0, #27
    cf2c:	str	r0, [fp, #-12]
    cf30:	b	d234 <storeAtts+0x1374>
    cf34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    cf38:	ldr	r0, [r0]
    cf3c:	str	r0, [fp, #-76]	; 0xffffffb4
    cf40:	ldr	r0, [fp, #-76]	; 0xffffffb4
    cf44:	add	r1, r0, #1
    cf48:	str	r1, [fp, #-76]	; 0xffffffb4
    cf4c:	ldrb	r0, [r0]
    cf50:	cmp	r0, #58	; 0x3a
    cf54:	beq	cf5c <storeAtts+0x109c>
    cf58:	b	cf40 <storeAtts+0x1080>
    cf5c:	b	cfa0 <storeAtts+0x10e0>
    cf60:	ldr	r0, [fp, #-32]	; 0xffffffe0
    cf64:	ldr	r0, [r0, #156]	; 0x9c
    cf68:	movw	r1, #0
    cf6c:	cmp	r0, r1
    cf70:	beq	cf90 <storeAtts+0x10d0>
    cf74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    cf78:	ldr	r0, [r0, #156]	; 0x9c
    cf7c:	str	r0, [fp, #-72]	; 0xffffffb8
    cf80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    cf84:	ldr	r0, [r0]
    cf88:	str	r0, [fp, #-76]	; 0xffffffb4
    cf8c:	b	cf9c <storeAtts+0x10dc>
    cf90:	movw	r0, #0
    cf94:	str	r0, [fp, #-12]
    cf98:	b	d234 <storeAtts+0x1374>
    cf9c:	b	cfa0 <storeAtts+0x10e0>
    cfa0:	movw	r0, #0
    cfa4:	str	r0, [fp, #-52]	; 0xffffffcc
    cfa8:	ldr	r0, [fp, #-16]
    cfac:	ldrb	r0, [r0, #245]	; 0xf5
    cfb0:	cmp	r0, #0
    cfb4:	beq	d004 <storeAtts+0x1144>
    cfb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    cfbc:	ldr	r0, [r0]
    cfc0:	ldr	r0, [r0]
    cfc4:	movw	r1, #0
    cfc8:	cmp	r0, r1
    cfcc:	beq	d004 <storeAtts+0x1144>
    cfd0:	b	cfd4 <storeAtts+0x1114>
    cfd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    cfd8:	ldr	r0, [r0]
    cfdc:	ldr	r0, [r0]
    cfe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    cfe4:	add	r2, r1, #1
    cfe8:	str	r2, [fp, #-52]	; 0xffffffcc
    cfec:	add	r0, r0, r1
    cff0:	ldrsb	r0, [r0]
    cff4:	cmp	r0, #0
    cff8:	beq	d000 <storeAtts+0x1140>
    cffc:	b	cfd4 <storeAtts+0x1114>
    d000:	b	d004 <storeAtts+0x1144>
    d004:	ldr	r0, [fp, #-76]	; 0xffffffb4
    d008:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d00c:	str	r0, [r1, #4]
    d010:	ldr	r0, [fp, #-72]	; 0xffffffb8
    d014:	ldr	r0, [r0, #20]
    d018:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d01c:	str	r0, [r1, #16]
    d020:	ldr	r0, [fp, #-72]	; 0xffffffb8
    d024:	ldr	r0, [r0]
    d028:	ldr	r0, [r0]
    d02c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d030:	str	r0, [r1, #8]
    d034:	ldr	r0, [fp, #-52]	; 0xffffffcc
    d038:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d03c:	str	r0, [r1, #20]
    d040:	movw	r0, #0
    d044:	str	r0, [fp, #-56]	; 0xffffffc8
    d048:	ldr	r0, [fp, #-76]	; 0xffffffb4
    d04c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    d050:	add	r2, r1, #1
    d054:	str	r2, [fp, #-56]	; 0xffffffc8
    d058:	add	r0, r0, r1
    d05c:	ldrsb	r0, [r0]
    d060:	cmp	r0, #0
    d064:	beq	d06c <storeAtts+0x11ac>
    d068:	b	d048 <storeAtts+0x1188>
    d06c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    d070:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d074:	ldr	r1, [r1, #20]
    d078:	add	r0, r0, r1
    d07c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    d080:	add	r0, r0, r1
    d084:	str	r0, [fp, #-60]	; 0xffffffc4
    d088:	ldr	r0, [fp, #-60]	; 0xffffffc4
    d08c:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d090:	ldr	r1, [r1, #24]
    d094:	cmp	r0, r1
    d098:	ble	d19c <storeAtts+0x12dc>
    d09c:	ldr	r0, [fp, #-16]
    d0a0:	ldr	r0, [r0, #12]
    d0a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    d0a8:	add	r1, r1, #24
    d0ac:	mov	r2, r1
    d0b0:	str	r0, [sp, #36]	; 0x24
    d0b4:	mov	r0, r1
    d0b8:	ldr	r1, [sp, #36]	; 0x24
    d0bc:	str	r2, [sp, #32]
    d0c0:	blx	r1
    d0c4:	str	r0, [fp, #-64]	; 0xffffffc0
    d0c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d0cc:	movw	r1, #0
    d0d0:	cmp	r0, r1
    d0d4:	bne	d0e4 <storeAtts+0x1224>
    d0d8:	movw	r0, #1
    d0dc:	str	r0, [fp, #-12]
    d0e0:	b	d234 <storeAtts+0x1374>
    d0e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    d0e8:	add	r0, r0, #24
    d0ec:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d0f0:	str	r0, [r1, #24]
    d0f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d0f8:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d0fc:	ldr	r2, [r1, #16]
    d100:	ldr	r1, [r1, #20]
    d104:	mov	r3, r1
    d108:	str	r1, [sp, #28]
    d10c:	mov	r1, r2
    d110:	ldr	r2, [sp, #28]
    d114:	str	r3, [sp, #24]
    d118:	bl	0 <memcpy>
    d11c:	ldr	r0, [fp, #-16]
    d120:	ldr	r0, [r0, #372]	; 0x174
    d124:	str	r0, [sp, #100]	; 0x64
    d128:	ldr	r0, [sp, #100]	; 0x64
    d12c:	movw	r1, #0
    d130:	cmp	r0, r1
    d134:	beq	d170 <storeAtts+0x12b0>
    d138:	ldr	r0, [sp, #100]	; 0x64
    d13c:	ldr	r0, [r0, #12]
    d140:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d144:	ldr	r1, [r1, #16]
    d148:	cmp	r0, r1
    d14c:	bne	d15c <storeAtts+0x129c>
    d150:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d154:	ldr	r1, [sp, #100]	; 0x64
    d158:	str	r0, [r1, #12]
    d15c:	b	d160 <storeAtts+0x12a0>
    d160:	ldr	r0, [sp, #100]	; 0x64
    d164:	ldr	r0, [r0]
    d168:	str	r0, [sp, #100]	; 0x64
    d16c:	b	d128 <storeAtts+0x1268>
    d170:	ldr	r0, [fp, #-16]
    d174:	ldr	r0, [r0, #20]
    d178:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d17c:	ldr	r1, [r1, #16]
    d180:	str	r0, [sp, #20]
    d184:	mov	r0, r1
    d188:	ldr	r1, [sp, #20]
    d18c:	blx	r1
    d190:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d194:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d198:	str	r0, [r1, #16]
    d19c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    d1a0:	ldr	r1, [r0, #16]
    d1a4:	ldr	r0, [r0, #20]
    d1a8:	add	r0, r1, r0
    d1ac:	str	r0, [fp, #-64]	; 0xffffffc0
    d1b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d1b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    d1b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    d1bc:	mov	r3, r2
    d1c0:	str	r3, [sp, #16]
    d1c4:	bl	0 <memcpy>
    d1c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    d1cc:	cmp	r0, #0
    d1d0:	beq	d21c <storeAtts+0x135c>
    d1d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    d1d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    d1dc:	add	r0, r1, r0
    d1e0:	sub	r0, r0, #1
    d1e4:	str	r0, [fp, #-64]	; 0xffffffc0
    d1e8:	ldr	r0, [fp, #-16]
    d1ec:	ldrb	r0, [r0, #488]	; 0x1e8
    d1f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    d1f4:	strb	r0, [r1]
    d1f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d1fc:	add	r0, r0, #1
    d200:	ldr	r1, [fp, #-72]	; 0xffffffb8
    d204:	ldr	r1, [r1]
    d208:	ldr	r1, [r1]
    d20c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    d210:	mov	r3, r2
    d214:	str	r3, [sp, #12]
    d218:	bl	0 <memcpy>
    d21c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    d220:	ldr	r0, [r0, #16]
    d224:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d228:	str	r0, [r1]
    d22c:	movw	r0, #0
    d230:	str	r0, [fp, #-12]
    d234:	ldr	r0, [fp, #-12]
    d238:	sub	sp, fp, #8
    d23c:	pop	{r4, sl, fp, pc}
    d240:	.word	0x000f4243

0000d244 <epilogProcessor>:
    d244:	push	{fp, lr}
    d248:	mov	fp, sp
    d24c:	sub	sp, sp, #40	; 0x28
    d250:	str	r0, [fp, #-8]
    d254:	str	r1, [fp, #-12]
    d258:	str	r2, [fp, #-16]
    d25c:	str	r3, [sp, #20]
    d260:	ldr	r0, [fp, #-8]
    d264:	movw	r1, #0
    d268:	movt	r1, #0
    d26c:	str	r1, [r0, #288]	; 0x120
    d270:	ldr	r0, [fp, #-12]
    d274:	ldr	r1, [fp, #-8]
    d278:	str	r0, [r1, #296]	; 0x128
    d27c:	mov	r0, #0
    d280:	str	r0, [sp, #16]
    d284:	ldr	r0, [fp, #-8]
    d288:	ldr	r0, [r0, #152]	; 0x98
    d28c:	ldr	r1, [r0]
    d290:	ldr	r2, [fp, #-12]
    d294:	ldr	r3, [fp, #-16]
    d298:	add	ip, sp, #16
    d29c:	str	r1, [sp, #8]
    d2a0:	mov	r1, r2
    d2a4:	mov	r2, r3
    d2a8:	mov	r3, ip
    d2ac:	ldr	ip, [sp, #8]
    d2b0:	blx	ip
    d2b4:	str	r0, [sp, #12]
    d2b8:	ldr	r0, [sp, #16]
    d2bc:	ldr	r1, [fp, #-8]
    d2c0:	str	r0, [r1, #300]	; 0x12c
    d2c4:	ldr	r0, [sp, #12]
    d2c8:	add	r0, r0, #15
    d2cc:	cmp	r0, #30
    d2d0:	str	r0, [sp, #4]
    d2d4:	bhi	d4f8 <epilogProcessor+0x2b4>
    d2d8:	add	r0, pc, #8
    d2dc:	ldr	r1, [sp, #4]
    d2e0:	ldr	r0, [r0, r1, lsl #2]
    d2e4:	mov	pc, r0
    d2e8:	.word	0x0000d364
    d2ec:	.word	0x0000d4f8
    d2f0:	.word	0x0000d4f8
    d2f4:	.word	0x0000d4f8
    d2f8:	.word	0x0000d4f8
    d2fc:	.word	0x0000d4f8
    d300:	.word	0x0000d4f8
    d304:	.word	0x0000d4f8
    d308:	.word	0x0000d4f8
    d30c:	.word	0x0000d4f8
    d310:	.word	0x0000d4f8
    d314:	.word	0x0000d3c8
    d318:	.word	0x0000d4f8
    d31c:	.word	0x0000d4c0
    d320:	.word	0x0000d488
    d324:	.word	0x0000d470
    d328:	.word	0x0000d4f8
    d32c:	.word	0x0000d4f8
    d330:	.word	0x0000d4f8
    d334:	.word	0x0000d4f8
    d338:	.word	0x0000d4f8
    d33c:	.word	0x0000d4f8
    d340:	.word	0x0000d4f8
    d344:	.word	0x0000d4f8
    d348:	.word	0x0000d4f8
    d34c:	.word	0x0000d4f8
    d350:	.word	0x0000d410
    d354:	.word	0x0000d4f8
    d358:	.word	0x0000d440
    d35c:	.word	0x0000d4f8
    d360:	.word	0x0000d3e0
    d364:	ldr	r0, [fp, #-8]
    d368:	ldr	r0, [r0, #88]	; 0x58
    d36c:	movw	r1, #0
    d370:	cmp	r0, r1
    d374:	beq	d3b0 <epilogProcessor+0x16c>
    d378:	ldr	r0, [fp, #-8]
    d37c:	ldr	r1, [fp, #-8]
    d380:	ldr	r1, [r1, #152]	; 0x98
    d384:	ldr	r2, [fp, #-12]
    d388:	ldr	r3, [sp, #16]
    d38c:	bl	3b40 <reportDefault>
    d390:	ldr	r0, [fp, #-8]
    d394:	ldr	r0, [r0, #496]	; 0x1f0
    d398:	cmp	r0, #2
    d39c:	bne	d3ac <epilogProcessor+0x168>
    d3a0:	movw	r0, #35	; 0x23
    d3a4:	str	r0, [fp, #-4]
    d3a8:	b	d568 <epilogProcessor+0x324>
    d3ac:	b	d3b0 <epilogProcessor+0x16c>
    d3b0:	ldr	r0, [sp, #16]
    d3b4:	ldr	r1, [sp, #20]
    d3b8:	str	r0, [r1]
    d3bc:	movw	r0, #0
    d3c0:	str	r0, [fp, #-4]
    d3c4:	b	d568 <epilogProcessor+0x324>
    d3c8:	ldr	r0, [fp, #-12]
    d3cc:	ldr	r1, [sp, #20]
    d3d0:	str	r0, [r1]
    d3d4:	movw	r0, #0
    d3d8:	str	r0, [fp, #-4]
    d3dc:	b	d568 <epilogProcessor+0x324>
    d3e0:	ldr	r0, [fp, #-8]
    d3e4:	ldr	r0, [r0, #88]	; 0x58
    d3e8:	movw	r1, #0
    d3ec:	cmp	r0, r1
    d3f0:	beq	d40c <epilogProcessor+0x1c8>
    d3f4:	ldr	r0, [fp, #-8]
    d3f8:	ldr	r1, [fp, #-8]
    d3fc:	ldr	r1, [r1, #152]	; 0x98
    d400:	ldr	r2, [fp, #-12]
    d404:	ldr	r3, [sp, #16]
    d408:	bl	3b40 <reportDefault>
    d40c:	b	d504 <epilogProcessor+0x2c0>
    d410:	ldr	r0, [fp, #-8]
    d414:	ldr	r1, [fp, #-8]
    d418:	ldr	r1, [r1, #152]	; 0x98
    d41c:	ldr	r2, [fp, #-12]
    d420:	ldr	r3, [sp, #16]
    d424:	bl	9c78 <reportProcessingInstruction>
    d428:	cmp	r0, #0
    d42c:	bne	d43c <epilogProcessor+0x1f8>
    d430:	movw	r0, #1
    d434:	str	r0, [fp, #-4]
    d438:	b	d568 <epilogProcessor+0x324>
    d43c:	b	d504 <epilogProcessor+0x2c0>
    d440:	ldr	r0, [fp, #-8]
    d444:	ldr	r1, [fp, #-8]
    d448:	ldr	r1, [r1, #152]	; 0x98
    d44c:	ldr	r2, [fp, #-12]
    d450:	ldr	r3, [sp, #16]
    d454:	bl	9e3c <reportComment>
    d458:	cmp	r0, #0
    d45c:	bne	d46c <epilogProcessor+0x228>
    d460:	movw	r0, #1
    d464:	str	r0, [fp, #-4]
    d468:	b	d568 <epilogProcessor+0x324>
    d46c:	b	d504 <epilogProcessor+0x2c0>
    d470:	ldr	r0, [sp, #16]
    d474:	ldr	r1, [fp, #-8]
    d478:	str	r0, [r1, #296]	; 0x128
    d47c:	movw	r0, #4
    d480:	str	r0, [fp, #-4]
    d484:	b	d568 <epilogProcessor+0x324>
    d488:	ldr	r0, [fp, #-8]
    d48c:	add	r0, r0, #500	; 0x1f4
    d490:	ldrsb	r0, [r0]
    d494:	cmp	r0, #0
    d498:	bne	d4b4 <epilogProcessor+0x270>
    d49c:	ldr	r0, [fp, #-12]
    d4a0:	ldr	r1, [sp, #20]
    d4a4:	str	r0, [r1]
    d4a8:	movw	r0, #0
    d4ac:	str	r0, [fp, #-4]
    d4b0:	b	d568 <epilogProcessor+0x324>
    d4b4:	movw	r0, #5
    d4b8:	str	r0, [fp, #-4]
    d4bc:	b	d568 <epilogProcessor+0x324>
    d4c0:	ldr	r0, [fp, #-8]
    d4c4:	add	r0, r0, #500	; 0x1f4
    d4c8:	ldrsb	r0, [r0]
    d4cc:	cmp	r0, #0
    d4d0:	bne	d4ec <epilogProcessor+0x2a8>
    d4d4:	ldr	r0, [fp, #-12]
    d4d8:	ldr	r1, [sp, #20]
    d4dc:	str	r0, [r1]
    d4e0:	movw	r0, #0
    d4e4:	str	r0, [fp, #-4]
    d4e8:	b	d568 <epilogProcessor+0x324>
    d4ec:	movw	r0, #6
    d4f0:	str	r0, [fp, #-4]
    d4f4:	b	d568 <epilogProcessor+0x324>
    d4f8:	movw	r0, #9
    d4fc:	str	r0, [fp, #-4]
    d500:	b	d568 <epilogProcessor+0x324>
    d504:	ldr	r0, [sp, #16]
    d508:	str	r0, [fp, #-12]
    d50c:	ldr	r1, [fp, #-8]
    d510:	str	r0, [r1, #296]	; 0x128
    d514:	ldr	r0, [fp, #-8]
    d518:	ldr	r0, [r0, #496]	; 0x1f0
    d51c:	cmp	r0, #2
    d520:	str	r0, [sp]
    d524:	beq	d554 <epilogProcessor+0x310>
    d528:	b	d52c <epilogProcessor+0x2e8>
    d52c:	ldr	r0, [sp]
    d530:	cmp	r0, #3
    d534:	bne	d560 <epilogProcessor+0x31c>
    d538:	b	d53c <epilogProcessor+0x2f8>
    d53c:	ldr	r0, [sp, #16]
    d540:	ldr	r1, [sp, #20]
    d544:	str	r0, [r1]
    d548:	movw	r0, #0
    d54c:	str	r0, [fp, #-4]
    d550:	b	d568 <epilogProcessor+0x324>
    d554:	movw	r0, #35	; 0x23
    d558:	str	r0, [fp, #-4]
    d55c:	b	d568 <epilogProcessor+0x324>
    d560:	b	d564 <epilogProcessor+0x320>
    d564:	b	d27c <epilogProcessor+0x38>
    d568:	ldr	r0, [fp, #-4]
    d56c:	mov	sp, fp
    d570:	pop	{fp, pc}

0000d574 <doCdataSection>:
    d574:	push	{fp, lr}
    d578:	mov	fp, sp
    d57c:	sub	sp, sp, #104	; 0x68
    d580:	ldr	ip, [fp, #12]
    d584:	ldr	lr, [fp, #8]
    d588:	str	r0, [fp, #-8]
    d58c:	str	r1, [fp, #-12]
    d590:	str	r2, [fp, #-16]
    d594:	str	r3, [fp, #-20]	; 0xffffffec
    d598:	strb	ip, [fp, #-21]	; 0xffffffeb
    d59c:	ldr	r0, [fp, #-16]
    d5a0:	ldr	r0, [r0]
    d5a4:	str	r0, [fp, #-28]	; 0xffffffe4
    d5a8:	ldr	r0, [fp, #-12]
    d5ac:	ldr	r1, [fp, #-8]
    d5b0:	ldr	r1, [r1, #152]	; 0x98
    d5b4:	cmp	r0, r1
    d5b8:	str	lr, [sp, #44]	; 0x2c
    d5bc:	bne	d5e8 <doCdataSection+0x74>
    d5c0:	ldr	r0, [fp, #-8]
    d5c4:	add	r0, r0, #296	; 0x128
    d5c8:	str	r0, [fp, #-32]	; 0xffffffe0
    d5cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d5d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    d5d4:	str	r0, [r1]
    d5d8:	ldr	r0, [fp, #-8]
    d5dc:	add	r0, r0, #300	; 0x12c
    d5e0:	str	r0, [fp, #-36]	; 0xffffffdc
    d5e4:	b	d604 <doCdataSection+0x90>
    d5e8:	ldr	r0, [fp, #-8]
    d5ec:	ldr	r0, [r0, #308]	; 0x134
    d5f0:	str	r0, [fp, #-32]	; 0xffffffe0
    d5f4:	ldr	r0, [fp, #-8]
    d5f8:	ldr	r0, [r0, #308]	; 0x134
    d5fc:	add	r0, r0, #4
    d600:	str	r0, [fp, #-36]	; 0xffffffdc
    d604:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d608:	ldr	r1, [fp, #-32]	; 0xffffffe0
    d60c:	str	r0, [r1]
    d610:	ldr	r0, [fp, #-16]
    d614:	movw	r1, #0
    d618:	str	r1, [r0]
    d61c:	ldr	r0, [fp, #-12]
    d620:	ldr	r1, [r0, #8]
    d624:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d628:	ldr	r3, [fp, #-20]	; 0xffffffec
    d62c:	sub	ip, fp, #40	; 0x28
    d630:	str	r1, [sp, #40]	; 0x28
    d634:	mov	r1, r2
    d638:	mov	r2, r3
    d63c:	mov	r3, ip
    d640:	ldr	ip, [sp, #40]	; 0x28
    d644:	blx	ip
    d648:	str	r0, [fp, #-44]	; 0xffffffd4
    d64c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d650:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d654:	str	r0, [r1]
    d658:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d65c:	add	r0, r0, #4
    d660:	cmp	r0, #44	; 0x2c
    d664:	str	r0, [sp, #36]	; 0x24
    d668:	bhi	da18 <doCdataSection+0x4a4>
    d66c:	add	r0, pc, #8
    d670:	ldr	r1, [sp, #36]	; 0x24
    d674:	ldr	r0, [r0, r1, lsl #2]
    d678:	mov	pc, r0
    d67c:	.word	0x0000d9e8
    d680:	.word	0x0000da18
    d684:	.word	0x0000d9b8
    d688:	.word	0x0000d9e8
    d68c:	.word	0x0000d9a0
    d690:	.word	0x0000da18
    d694:	.word	0x0000da18
    d698:	.word	0x0000da18
    d69c:	.word	0x0000da18
    d6a0:	.word	0x0000da18
    d6a4:	.word	0x0000d84c
    d6a8:	.word	0x0000d7d4
    d6ac:	.word	0x0000da18
    d6b0:	.word	0x0000da18
    d6b4:	.word	0x0000da18
    d6b8:	.word	0x0000da18
    d6bc:	.word	0x0000da18
    d6c0:	.word	0x0000da18
    d6c4:	.word	0x0000da18
    d6c8:	.word	0x0000da18
    d6cc:	.word	0x0000da18
    d6d0:	.word	0x0000da18
    d6d4:	.word	0x0000da18
    d6d8:	.word	0x0000da18
    d6dc:	.word	0x0000da18
    d6e0:	.word	0x0000da18
    d6e4:	.word	0x0000da18
    d6e8:	.word	0x0000da18
    d6ec:	.word	0x0000da18
    d6f0:	.word	0x0000da18
    d6f4:	.word	0x0000da18
    d6f8:	.word	0x0000da18
    d6fc:	.word	0x0000da18
    d700:	.word	0x0000da18
    d704:	.word	0x0000da18
    d708:	.word	0x0000da18
    d70c:	.word	0x0000da18
    d710:	.word	0x0000da18
    d714:	.word	0x0000da18
    d718:	.word	0x0000da18
    d71c:	.word	0x0000da18
    d720:	.word	0x0000da18
    d724:	.word	0x0000da18
    d728:	.word	0x0000da18
    d72c:	.word	0x0000d730
    d730:	ldr	r0, [fp, #-8]
    d734:	ldr	r0, [r0, #84]	; 0x54
    d738:	movw	r1, #0
    d73c:	cmp	r0, r1
    d740:	beq	d768 <doCdataSection+0x1f4>
    d744:	ldr	r0, [fp, #-8]
    d748:	ldr	r0, [r0, #84]	; 0x54
    d74c:	ldr	r1, [fp, #-8]
    d750:	ldr	r1, [r1, #4]
    d754:	str	r0, [sp, #32]
    d758:	mov	r0, r1
    d75c:	ldr	r1, [sp, #32]
    d760:	blx	r1
    d764:	b	d794 <doCdataSection+0x220>
    d768:	ldr	r0, [fp, #-8]
    d76c:	ldr	r0, [r0, #88]	; 0x58
    d770:	movw	r1, #0
    d774:	cmp	r0, r1
    d778:	beq	d790 <doCdataSection+0x21c>
    d77c:	ldr	r0, [fp, #-8]
    d780:	ldr	r1, [fp, #-12]
    d784:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d788:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d78c:	bl	3b40 <reportDefault>
    d790:	b	d794 <doCdataSection+0x220>
    d794:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d798:	ldr	r1, [fp, #-16]
    d79c:	str	r0, [r1]
    d7a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d7a4:	ldr	r1, [fp, #8]
    d7a8:	str	r0, [r1]
    d7ac:	ldr	r0, [fp, #-8]
    d7b0:	ldr	r0, [r0, #496]	; 0x1f0
    d7b4:	cmp	r0, #2
    d7b8:	bne	d7c8 <doCdataSection+0x254>
    d7bc:	movw	r0, #35	; 0x23
    d7c0:	str	r0, [fp, #-4]
    d7c4:	b	da94 <doCdataSection+0x520>
    d7c8:	movw	r0, #0
    d7cc:	str	r0, [fp, #-4]
    d7d0:	b	da94 <doCdataSection+0x520>
    d7d4:	ldr	r0, [fp, #-8]
    d7d8:	ldr	r0, [r0, #68]	; 0x44
    d7dc:	movw	r1, #0
    d7e0:	cmp	r0, r1
    d7e4:	beq	d81c <doCdataSection+0x2a8>
    d7e8:	movw	r0, #10
    d7ec:	strb	r0, [fp, #-45]	; 0xffffffd3
    d7f0:	ldr	r0, [fp, #-8]
    d7f4:	ldr	r0, [r0, #68]	; 0x44
    d7f8:	ldr	r1, [fp, #-8]
    d7fc:	ldr	r1, [r1, #4]
    d800:	str	r0, [sp, #28]
    d804:	mov	r0, r1
    d808:	sub	r1, fp, #45	; 0x2d
    d80c:	movw	r2, #1
    d810:	ldr	r3, [sp, #28]
    d814:	blx	r3
    d818:	b	d848 <doCdataSection+0x2d4>
    d81c:	ldr	r0, [fp, #-8]
    d820:	ldr	r0, [r0, #88]	; 0x58
    d824:	movw	r1, #0
    d828:	cmp	r0, r1
    d82c:	beq	d844 <doCdataSection+0x2d0>
    d830:	ldr	r0, [fp, #-8]
    d834:	ldr	r1, [fp, #-12]
    d838:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d840:	bl	3b40 <reportDefault>
    d844:	b	d848 <doCdataSection+0x2d4>
    d848:	b	da30 <doCdataSection+0x4bc>
    d84c:	ldr	r0, [fp, #-8]
    d850:	ldr	r0, [r0, #68]	; 0x44
    d854:	str	r0, [sp, #52]	; 0x34
    d858:	ldr	r0, [sp, #52]	; 0x34
    d85c:	movw	r1, #0
    d860:	cmp	r0, r1
    d864:	beq	d970 <doCdataSection+0x3fc>
    d868:	ldr	r0, [fp, #-12]
    d86c:	ldrsb	r0, [r0, #72]	; 0x48
    d870:	cmp	r0, #0
    d874:	bne	d938 <doCdataSection+0x3c4>
    d878:	b	d87c <doCdataSection+0x308>
    d87c:	ldr	r0, [fp, #-8]
    d880:	ldr	r0, [r0, #52]	; 0x34
    d884:	str	r0, [sp, #48]	; 0x30
    d888:	ldr	r0, [fp, #-12]
    d88c:	ldr	r0, [r0, #60]	; 0x3c
    d890:	ldr	r1, [fp, #-12]
    d894:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d898:	ldr	r3, [fp, #-8]
    d89c:	ldr	r3, [r3, #56]	; 0x38
    d8a0:	str	r0, [sp, #24]
    d8a4:	mov	r0, r1
    d8a8:	sub	r1, fp, #28
    d8ac:	add	ip, sp, #48	; 0x30
    d8b0:	str	r3, [sp, #20]
    d8b4:	mov	r3, ip
    d8b8:	ldr	ip, [sp, #20]
    d8bc:	str	ip, [sp]
    d8c0:	ldr	lr, [sp, #24]
    d8c4:	blx	lr
    d8c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d8cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d8d0:	str	r0, [r1]
    d8d4:	ldr	r0, [sp, #52]	; 0x34
    d8d8:	ldr	r1, [fp, #-8]
    d8dc:	ldr	r1, [r1, #4]
    d8e0:	ldr	r2, [fp, #-8]
    d8e4:	ldr	r2, [r2, #52]	; 0x34
    d8e8:	ldr	r3, [sp, #48]	; 0x30
    d8ec:	ldr	ip, [fp, #-8]
    d8f0:	ldr	ip, [ip, #52]	; 0x34
    d8f4:	sub	r3, r3, ip
    d8f8:	str	r0, [sp, #16]
    d8fc:	mov	r0, r1
    d900:	mov	r1, r2
    d904:	mov	r2, r3
    d908:	ldr	r3, [sp, #16]
    d90c:	blx	r3
    d910:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d914:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d918:	cmp	r0, r1
    d91c:	bne	d924 <doCdataSection+0x3b0>
    d920:	b	d934 <doCdataSection+0x3c0>
    d924:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d928:	ldr	r1, [fp, #-32]	; 0xffffffe0
    d92c:	str	r0, [r1]
    d930:	b	d87c <doCdataSection+0x308>
    d934:	b	d96c <doCdataSection+0x3f8>
    d938:	ldr	r0, [sp, #52]	; 0x34
    d93c:	ldr	r1, [fp, #-8]
    d940:	ldr	r1, [r1, #4]
    d944:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d948:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d94c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    d950:	sub	r3, r3, ip
    d954:	str	r0, [sp, #12]
    d958:	mov	r0, r1
    d95c:	mov	r1, r2
    d960:	mov	r2, r3
    d964:	ldr	r3, [sp, #12]
    d968:	blx	r3
    d96c:	b	d99c <doCdataSection+0x428>
    d970:	ldr	r0, [fp, #-8]
    d974:	ldr	r0, [r0, #88]	; 0x58
    d978:	movw	r1, #0
    d97c:	cmp	r0, r1
    d980:	beq	d998 <doCdataSection+0x424>
    d984:	ldr	r0, [fp, #-8]
    d988:	ldr	r1, [fp, #-12]
    d98c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d990:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d994:	bl	3b40 <reportDefault>
    d998:	b	d99c <doCdataSection+0x428>
    d99c:	b	da30 <doCdataSection+0x4bc>
    d9a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d9a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    d9a8:	str	r0, [r1]
    d9ac:	movw	r0, #4
    d9b0:	str	r0, [fp, #-4]
    d9b4:	b	da94 <doCdataSection+0x520>
    d9b8:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    d9bc:	cmp	r0, #0
    d9c0:	beq	d9dc <doCdataSection+0x468>
    d9c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d9c8:	ldr	r1, [fp, #8]
    d9cc:	str	r0, [r1]
    d9d0:	movw	r0, #0
    d9d4:	str	r0, [fp, #-4]
    d9d8:	b	da94 <doCdataSection+0x520>
    d9dc:	movw	r0, #6
    d9e0:	str	r0, [fp, #-4]
    d9e4:	b	da94 <doCdataSection+0x520>
    d9e8:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    d9ec:	cmp	r0, #0
    d9f0:	beq	da0c <doCdataSection+0x498>
    d9f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d9f8:	ldr	r1, [fp, #8]
    d9fc:	str	r0, [r1]
    da00:	movw	r0, #0
    da04:	str	r0, [fp, #-4]
    da08:	b	da94 <doCdataSection+0x520>
    da0c:	movw	r0, #20
    da10:	str	r0, [fp, #-4]
    da14:	b	da94 <doCdataSection+0x520>
    da18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    da1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    da20:	str	r0, [r1]
    da24:	movw	r0, #23
    da28:	str	r0, [fp, #-4]
    da2c:	b	da94 <doCdataSection+0x520>
    da30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    da34:	str	r0, [fp, #-28]	; 0xffffffe4
    da38:	ldr	r1, [fp, #-32]	; 0xffffffe0
    da3c:	str	r0, [r1]
    da40:	ldr	r0, [fp, #-8]
    da44:	ldr	r0, [r0, #496]	; 0x1f0
    da48:	cmp	r0, #2
    da4c:	str	r0, [sp, #8]
    da50:	beq	da80 <doCdataSection+0x50c>
    da54:	b	da58 <doCdataSection+0x4e4>
    da58:	ldr	r0, [sp, #8]
    da5c:	cmp	r0, #3
    da60:	bne	da8c <doCdataSection+0x518>
    da64:	b	da68 <doCdataSection+0x4f4>
    da68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    da6c:	ldr	r1, [fp, #8]
    da70:	str	r0, [r1]
    da74:	movw	r0, #0
    da78:	str	r0, [fp, #-4]
    da7c:	b	da94 <doCdataSection+0x520>
    da80:	movw	r0, #35	; 0x23
    da84:	str	r0, [fp, #-4]
    da88:	b	da94 <doCdataSection+0x520>
    da8c:	b	da90 <doCdataSection+0x51c>
    da90:	b	d61c <doCdataSection+0xa8>
    da94:	ldr	r0, [fp, #-4]
    da98:	mov	sp, fp
    da9c:	pop	{fp, pc}

0000daa0 <cdataSectionProcessor>:
    daa0:	push	{fp, lr}
    daa4:	mov	fp, sp
    daa8:	sub	sp, sp, #40	; 0x28
    daac:	str	r0, [fp, #-8]
    dab0:	str	r1, [fp, #-12]
    dab4:	str	r2, [fp, #-16]
    dab8:	str	r3, [sp, #20]
    dabc:	ldr	r0, [fp, #-8]
    dac0:	ldr	r1, [fp, #-8]
    dac4:	ldr	r1, [r1, #152]	; 0x98
    dac8:	ldr	r3, [fp, #-16]
    dacc:	ldr	r2, [sp, #20]
    dad0:	ldr	ip, [fp, #-8]
    dad4:	add	ip, ip, #500	; 0x1f4
    dad8:	ldrsb	ip, [ip]
    dadc:	cmp	ip, #0
    dae0:	movw	ip, #0
    dae4:	movne	ip, #1
    dae8:	mvn	lr, #0
    daec:	eor	ip, ip, lr
    daf0:	and	ip, ip, #1
    daf4:	sub	lr, fp, #12
    daf8:	str	r2, [sp, #12]
    dafc:	mov	r2, lr
    db00:	ldr	lr, [sp, #12]
    db04:	str	lr, [sp]
    db08:	and	ip, ip, #255	; 0xff
    db0c:	str	ip, [sp, #4]
    db10:	bl	d574 <doCdataSection>
    db14:	str	r0, [sp, #16]
    db18:	ldr	r0, [sp, #16]
    db1c:	cmp	r0, #0
    db20:	beq	db30 <cdataSectionProcessor+0x90>
    db24:	ldr	r0, [sp, #16]
    db28:	str	r0, [fp, #-4]
    db2c:	b	dbb4 <cdataSectionProcessor+0x114>
    db30:	ldr	r0, [fp, #-12]
    db34:	movw	r1, #0
    db38:	cmp	r0, r1
    db3c:	beq	dbac <cdataSectionProcessor+0x10c>
    db40:	ldr	r0, [fp, #-8]
    db44:	ldr	r0, [r0, #492]	; 0x1ec
    db48:	movw	r1, #0
    db4c:	cmp	r0, r1
    db50:	beq	db80 <cdataSectionProcessor+0xe0>
    db54:	ldr	r0, [fp, #-8]
    db58:	movw	r1, #0
    db5c:	movt	r1, #0
    db60:	str	r1, [r0, #288]	; 0x120
    db64:	ldr	r0, [fp, #-8]
    db68:	ldr	r1, [fp, #-12]
    db6c:	ldr	r2, [fp, #-16]
    db70:	ldr	r3, [sp, #20]
    db74:	bl	e418 <externalEntityContentProcessor>
    db78:	str	r0, [fp, #-4]
    db7c:	b	dbb4 <cdataSectionProcessor+0x114>
    db80:	ldr	r0, [fp, #-8]
    db84:	movw	r1, #0
    db88:	movt	r1, #0
    db8c:	str	r1, [r0, #288]	; 0x120
    db90:	ldr	r0, [fp, #-8]
    db94:	ldr	r1, [fp, #-12]
    db98:	ldr	r2, [fp, #-16]
    db9c:	ldr	r3, [sp, #20]
    dba0:	bl	7dac <contentProcessor>
    dba4:	str	r0, [fp, #-4]
    dba8:	b	dbb4 <cdataSectionProcessor+0x114>
    dbac:	ldr	r0, [sp, #16]
    dbb0:	str	r0, [fp, #-4]
    dbb4:	ldr	r0, [fp, #-4]
    dbb8:	mov	sp, fp
    dbbc:	pop	{fp, pc}

0000dbc0 <hashTableIterInit>:
    dbc0:	sub	sp, sp, #8
    dbc4:	str	r0, [sp, #4]
    dbc8:	str	r1, [sp]
    dbcc:	ldr	r0, [sp]
    dbd0:	ldr	r0, [r0]
    dbd4:	ldr	r1, [sp, #4]
    dbd8:	str	r0, [r1]
    dbdc:	ldr	r0, [sp, #4]
    dbe0:	ldr	r0, [r0]
    dbe4:	ldr	r1, [sp]
    dbe8:	ldr	r1, [r1, #8]
    dbec:	add	r0, r0, r1, lsl #2
    dbf0:	ldr	r1, [sp, #4]
    dbf4:	str	r0, [r1, #4]
    dbf8:	add	sp, sp, #8
    dbfc:	bx	lr

0000dc00 <hashTableIterNext>:
    dc00:	sub	sp, sp, #12
    dc04:	str	r0, [sp, #4]
    dc08:	ldr	r0, [sp, #4]
    dc0c:	ldr	r0, [r0]
    dc10:	ldr	r1, [sp, #4]
    dc14:	ldr	r1, [r1, #4]
    dc18:	cmp	r0, r1
    dc1c:	beq	dc58 <hashTableIterNext+0x58>
    dc20:	ldr	r0, [sp, #4]
    dc24:	ldr	r1, [r0]
    dc28:	add	r2, r1, #4
    dc2c:	str	r2, [r0]
    dc30:	ldr	r0, [r1]
    dc34:	str	r0, [sp]
    dc38:	ldr	r0, [sp]
    dc3c:	movw	r1, #0
    dc40:	cmp	r0, r1
    dc44:	beq	dc54 <hashTableIterNext+0x54>
    dc48:	ldr	r0, [sp]
    dc4c:	str	r0, [sp, #8]
    dc50:	b	dc60 <hashTableIterNext+0x60>
    dc54:	b	dc08 <hashTableIterNext+0x8>
    dc58:	movw	r0, #0
    dc5c:	str	r0, [sp, #8]
    dc60:	ldr	r0, [sp, #8]
    dc64:	add	sp, sp, #12
    dc68:	bx	lr

0000dc6c <setElementTypePrefix>:
    dc6c:	push	{fp, lr}
    dc70:	mov	fp, sp
    dc74:	sub	sp, sp, #32
    dc78:	str	r0, [fp, #-8]
    dc7c:	str	r1, [fp, #-12]
    dc80:	ldr	r0, [fp, #-8]
    dc84:	ldr	r0, [r0, #364]	; 0x16c
    dc88:	str	r0, [sp, #16]
    dc8c:	ldr	r0, [fp, #-12]
    dc90:	ldr	r0, [r0]
    dc94:	str	r0, [sp, #12]
    dc98:	ldr	r0, [sp, #12]
    dc9c:	ldrsb	r0, [r0]
    dca0:	cmp	r0, #0
    dca4:	beq	de3c <setElementTypePrefix+0x1d0>
    dca8:	ldr	r0, [sp, #12]
    dcac:	ldrb	r0, [r0]
    dcb0:	cmp	r0, #58	; 0x3a
    dcb4:	bne	de28 <setElementTypePrefix+0x1bc>
    dcb8:	ldr	r0, [fp, #-12]
    dcbc:	ldr	r0, [r0]
    dcc0:	str	r0, [sp, #4]
    dcc4:	ldr	r0, [sp, #4]
    dcc8:	ldr	r1, [sp, #12]
    dccc:	cmp	r0, r1
    dcd0:	beq	dd48 <setElementTypePrefix+0xdc>
    dcd4:	ldr	r0, [sp, #16]
    dcd8:	ldr	r0, [r0, #92]	; 0x5c
    dcdc:	ldr	r1, [sp, #16]
    dce0:	ldr	r1, [r1, #88]	; 0x58
    dce4:	cmp	r0, r1
    dce8:	bne	dd08 <setElementTypePrefix+0x9c>
    dcec:	ldr	r0, [sp, #16]
    dcf0:	add	r0, r0, #80	; 0x50
    dcf4:	bl	8764 <poolGrow>
    dcf8:	sxtb	r0, r0
    dcfc:	cmp	r0, #0
    dd00:	bne	dd08 <setElementTypePrefix+0x9c>
    dd04:	b	dd28 <setElementTypePrefix+0xbc>
    dd08:	ldr	r0, [sp, #4]
    dd0c:	ldrb	r0, [r0]
    dd10:	ldr	r1, [sp, #16]
    dd14:	ldr	r2, [r1, #92]	; 0x5c
    dd18:	add	r3, r2, #1
    dd1c:	str	r3, [r1, #92]	; 0x5c
    dd20:	strb	r0, [r2]
    dd24:	b	dd34 <setElementTypePrefix+0xc8>
    dd28:	movw	r0, #0
    dd2c:	str	r0, [fp, #-4]
    dd30:	b	de44 <setElementTypePrefix+0x1d8>
    dd34:	b	dd38 <setElementTypePrefix+0xcc>
    dd38:	ldr	r0, [sp, #4]
    dd3c:	add	r0, r0, #1
    dd40:	str	r0, [sp, #4]
    dd44:	b	dcc4 <setElementTypePrefix+0x58>
    dd48:	ldr	r0, [sp, #16]
    dd4c:	ldr	r0, [r0, #92]	; 0x5c
    dd50:	ldr	r1, [sp, #16]
    dd54:	ldr	r1, [r1, #88]	; 0x58
    dd58:	cmp	r0, r1
    dd5c:	bne	dd7c <setElementTypePrefix+0x110>
    dd60:	ldr	r0, [sp, #16]
    dd64:	add	r0, r0, #80	; 0x50
    dd68:	bl	8764 <poolGrow>
    dd6c:	sxtb	r0, r0
    dd70:	cmp	r0, #0
    dd74:	bne	dd7c <setElementTypePrefix+0x110>
    dd78:	b	dd98 <setElementTypePrefix+0x12c>
    dd7c:	ldr	r0, [sp, #16]
    dd80:	ldr	r1, [r0, #92]	; 0x5c
    dd84:	add	r2, r1, #1
    dd88:	str	r2, [r0, #92]	; 0x5c
    dd8c:	movw	r0, #0
    dd90:	strb	r0, [r1]
    dd94:	b	dda4 <setElementTypePrefix+0x138>
    dd98:	movw	r0, #0
    dd9c:	str	r0, [fp, #-4]
    dda0:	b	de44 <setElementTypePrefix+0x1d8>
    dda4:	ldr	r0, [fp, #-8]
    dda8:	ldr	r1, [sp, #16]
    ddac:	add	r1, r1, #60	; 0x3c
    ddb0:	ldr	r2, [sp, #16]
    ddb4:	ldr	r2, [r2, #96]	; 0x60
    ddb8:	movw	r3, #8
    ddbc:	bl	7694 <lookup>
    ddc0:	str	r0, [sp, #8]
    ddc4:	ldr	r0, [sp, #8]
    ddc8:	movw	r1, #0
    ddcc:	cmp	r0, r1
    ddd0:	bne	dde0 <setElementTypePrefix+0x174>
    ddd4:	movw	r0, #0
    ddd8:	str	r0, [fp, #-4]
    dddc:	b	de44 <setElementTypePrefix+0x1d8>
    dde0:	ldr	r0, [sp, #8]
    dde4:	ldr	r0, [r0]
    dde8:	ldr	r1, [sp, #16]
    ddec:	ldr	r1, [r1, #96]	; 0x60
    ddf0:	cmp	r0, r1
    ddf4:	bne	de0c <setElementTypePrefix+0x1a0>
    ddf8:	ldr	r0, [sp, #16]
    ddfc:	ldr	r0, [r0, #92]	; 0x5c
    de00:	ldr	r1, [sp, #16]
    de04:	str	r0, [r1, #96]	; 0x60
    de08:	b	de1c <setElementTypePrefix+0x1b0>
    de0c:	ldr	r0, [sp, #16]
    de10:	ldr	r0, [r0, #96]	; 0x60
    de14:	ldr	r1, [sp, #16]
    de18:	str	r0, [r1, #92]	; 0x5c
    de1c:	ldr	r0, [sp, #8]
    de20:	ldr	r1, [fp, #-12]
    de24:	str	r0, [r1, #4]
    de28:	b	de2c <setElementTypePrefix+0x1c0>
    de2c:	ldr	r0, [sp, #12]
    de30:	add	r0, r0, #1
    de34:	str	r0, [sp, #12]
    de38:	b	dc98 <setElementTypePrefix+0x2c>
    de3c:	movw	r0, #1
    de40:	str	r0, [fp, #-4]
    de44:	ldr	r0, [fp, #-4]
    de48:	mov	sp, fp
    de4c:	pop	{fp, pc}

0000de50 <addBinding>:
    de50:	push	{fp, lr}
    de54:	mov	fp, sp
    de58:	sub	sp, sp, #96	; 0x60
    de5c:	ldr	ip, [fp, #8]
    de60:	str	r0, [fp, #-8]
    de64:	str	r1, [fp, #-12]
    de68:	str	r2, [fp, #-16]
    de6c:	str	r3, [fp, #-20]	; 0xffffffec
    de70:	movw	r0, #0
    de74:	strb	r0, [fp, #-21]	; 0xffffffeb
    de78:	movw	r0, #1
    de7c:	strb	r0, [fp, #-22]	; 0xffffffea
    de80:	strb	r0, [fp, #-23]	; 0xffffffe9
    de84:	ldr	r0, [fp, #-20]	; 0xffffffec
    de88:	ldrb	r0, [r0]
    de8c:	cmp	r0, #0
    de90:	str	ip, [fp, #-40]	; 0xffffffd8
    de94:	bne	deb8 <addBinding+0x68>
    de98:	ldr	r0, [fp, #-12]
    de9c:	ldr	r0, [r0]
    dea0:	movw	r1, #0
    dea4:	cmp	r0, r1
    dea8:	beq	deb8 <addBinding+0x68>
    deac:	movw	r0, #28
    deb0:	str	r0, [fp, #-4]
    deb4:	b	e40c <addBinding+0x5bc>
    deb8:	ldr	r0, [fp, #-12]
    debc:	ldr	r0, [r0]
    dec0:	movw	r1, #0
    dec4:	cmp	r0, r1
    dec8:	beq	df70 <addBinding+0x120>
    decc:	ldr	r0, [fp, #-12]
    ded0:	ldr	r0, [r0]
    ded4:	ldrb	r0, [r0]
    ded8:	cmp	r0, #120	; 0x78
    dedc:	bne	df70 <addBinding+0x120>
    dee0:	ldr	r0, [fp, #-12]
    dee4:	ldr	r0, [r0]
    dee8:	ldrb	r0, [r0, #1]
    deec:	cmp	r0, #109	; 0x6d
    def0:	bne	df70 <addBinding+0x120>
    def4:	ldr	r0, [fp, #-12]
    def8:	ldr	r0, [r0]
    defc:	ldrb	r0, [r0, #2]
    df00:	cmp	r0, #108	; 0x6c
    df04:	bne	df70 <addBinding+0x120>
    df08:	ldr	r0, [fp, #-12]
    df0c:	ldr	r0, [r0]
    df10:	ldrb	r0, [r0, #3]
    df14:	cmp	r0, #110	; 0x6e
    df18:	bne	df50 <addBinding+0x100>
    df1c:	ldr	r0, [fp, #-12]
    df20:	ldr	r0, [r0]
    df24:	ldrb	r0, [r0, #4]
    df28:	cmp	r0, #115	; 0x73
    df2c:	bne	df50 <addBinding+0x100>
    df30:	ldr	r0, [fp, #-12]
    df34:	ldr	r0, [r0]
    df38:	ldrb	r0, [r0, #5]
    df3c:	cmp	r0, #0
    df40:	bne	df50 <addBinding+0x100>
    df44:	movw	r0, #39	; 0x27
    df48:	str	r0, [fp, #-4]
    df4c:	b	e40c <addBinding+0x5bc>
    df50:	ldr	r0, [fp, #-12]
    df54:	ldr	r0, [r0]
    df58:	ldrb	r0, [r0, #3]
    df5c:	cmp	r0, #0
    df60:	bne	df6c <addBinding+0x11c>
    df64:	movw	r0, #1
    df68:	strb	r0, [fp, #-21]	; 0xffffffeb
    df6c:	b	df70 <addBinding+0x120>
    df70:	movw	r0, #0
    df74:	str	r0, [fp, #-32]	; 0xffffffe0
    df78:	ldr	r0, [fp, #-20]	; 0xffffffec
    df7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    df80:	add	r0, r0, r1
    df84:	ldrsb	r0, [r0]
    df88:	cmp	r0, #0
    df8c:	beq	e048 <addBinding+0x1f8>
    df90:	ldrb	r0, [fp, #-22]	; 0xffffffea
    df94:	cmp	r0, #0
    df98:	beq	dfdc <addBinding+0x18c>
    df9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    dfa0:	cmp	r0, #36	; 0x24
    dfa4:	bgt	dfd4 <addBinding+0x184>
    dfa8:	ldr	r0, [fp, #-20]	; 0xffffffec
    dfac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    dfb0:	add	r0, r0, r1
    dfb4:	ldrb	r0, [r0]
    dfb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    dfbc:	movw	r2, #0
    dfc0:	movt	r2, #0
    dfc4:	add	r1, r2, r1
    dfc8:	ldrb	r1, [r1]
    dfcc:	cmp	r0, r1
    dfd0:	beq	dfdc <addBinding+0x18c>
    dfd4:	movw	r0, #0
    dfd8:	strb	r0, [fp, #-22]	; 0xffffffea
    dfdc:	ldrsb	r0, [fp, #-21]	; 0xffffffeb
    dfe0:	cmp	r0, #0
    dfe4:	bne	e034 <addBinding+0x1e4>
    dfe8:	ldrb	r0, [fp, #-23]	; 0xffffffe9
    dfec:	cmp	r0, #0
    dff0:	beq	e034 <addBinding+0x1e4>
    dff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    dff8:	cmp	r0, #29
    dffc:	bgt	e02c <addBinding+0x1dc>
    e000:	ldr	r0, [fp, #-20]	; 0xffffffec
    e004:	ldr	r1, [fp, #-32]	; 0xffffffe0
    e008:	add	r0, r0, r1
    e00c:	ldrb	r0, [r0]
    e010:	ldr	r1, [fp, #-32]	; 0xffffffe0
    e014:	movw	r2, #0
    e018:	movt	r2, #0
    e01c:	add	r1, r2, r1
    e020:	ldrb	r1, [r1]
    e024:	cmp	r0, r1
    e028:	beq	e034 <addBinding+0x1e4>
    e02c:	movw	r0, #0
    e030:	strb	r0, [fp, #-23]	; 0xffffffe9
    e034:	b	e038 <addBinding+0x1e8>
    e038:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e03c:	add	r0, r0, #1
    e040:	str	r0, [fp, #-32]	; 0xffffffe0
    e044:	b	df78 <addBinding+0x128>
    e048:	ldrb	r0, [fp, #-22]	; 0xffffffea
    e04c:	cmp	r0, #0
    e050:	movw	r0, #0
    e054:	str	r0, [fp, #-44]	; 0xffffffd4
    e058:	beq	e070 <addBinding+0x220>
    e05c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e060:	cmp	r0, #36	; 0x24
    e064:	movw	r0, #0
    e068:	moveq	r0, #1
    e06c:	str	r0, [fp, #-44]	; 0xffffffd4
    e070:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e074:	and	r0, r0, #1
    e078:	strb	r0, [fp, #-22]	; 0xffffffea
    e07c:	ldrb	r0, [fp, #-23]	; 0xffffffe9
    e080:	cmp	r0, #0
    e084:	movw	r0, #0
    e088:	str	r0, [sp, #48]	; 0x30
    e08c:	beq	e0a4 <addBinding+0x254>
    e090:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e094:	cmp	r0, #29
    e098:	movw	r0, #0
    e09c:	moveq	r0, #1
    e0a0:	str	r0, [sp, #48]	; 0x30
    e0a4:	ldr	r0, [sp, #48]	; 0x30
    e0a8:	and	r0, r0, #1
    e0ac:	strb	r0, [fp, #-23]	; 0xffffffe9
    e0b0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
    e0b4:	ldrb	r1, [fp, #-22]	; 0xffffffea
    e0b8:	cmp	r0, r1
    e0bc:	beq	e0e4 <addBinding+0x294>
    e0c0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
    e0c4:	cmp	r0, #0
    e0c8:	movw	r0, #0
    e0cc:	movne	r0, #1
    e0d0:	tst	r0, #1
    e0d4:	movw	r0, #38	; 0x26
    e0d8:	moveq	r0, #40	; 0x28
    e0dc:	str	r0, [fp, #-4]
    e0e0:	b	e40c <addBinding+0x5bc>
    e0e4:	ldrsb	r0, [fp, #-23]	; 0xffffffe9
    e0e8:	cmp	r0, #0
    e0ec:	beq	e0fc <addBinding+0x2ac>
    e0f0:	movw	r0, #40	; 0x28
    e0f4:	str	r0, [fp, #-4]
    e0f8:	b	e40c <addBinding+0x5bc>
    e0fc:	ldr	r0, [fp, #-8]
    e100:	add	r0, r0, #488	; 0x1e8
    e104:	ldrsb	r0, [r0]
    e108:	cmp	r0, #0
    e10c:	beq	e11c <addBinding+0x2cc>
    e110:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e114:	add	r0, r0, #1
    e118:	str	r0, [fp, #-32]	; 0xffffffe0
    e11c:	ldr	r0, [fp, #-8]
    e120:	ldr	r0, [r0, #384]	; 0x180
    e124:	movw	r1, #0
    e128:	cmp	r0, r1
    e12c:	beq	e1d4 <addBinding+0x384>
    e130:	ldr	r0, [fp, #-8]
    e134:	ldr	r0, [r0, #384]	; 0x180
    e138:	str	r0, [fp, #-28]	; 0xffffffe4
    e13c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e140:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e144:	ldr	r1, [r1, #24]
    e148:	cmp	r0, r1
    e14c:	ble	e1c0 <addBinding+0x370>
    e150:	ldr	r0, [fp, #-8]
    e154:	ldr	r0, [r0, #16]
    e158:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e15c:	ldr	r1, [r1, #16]
    e160:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e164:	add	r2, r2, #24
    e168:	mov	r3, r2
    e16c:	str	r0, [sp, #44]	; 0x2c
    e170:	mov	r0, r1
    e174:	mov	r1, r2
    e178:	ldr	r2, [sp, #44]	; 0x2c
    e17c:	str	r3, [sp, #40]	; 0x28
    e180:	blx	r2
    e184:	str	r0, [fp, #-36]	; 0xffffffdc
    e188:	ldr	r0, [fp, #-36]	; 0xffffffdc
    e18c:	movw	r1, #0
    e190:	cmp	r0, r1
    e194:	bne	e1a4 <addBinding+0x354>
    e198:	movw	r0, #1
    e19c:	str	r0, [fp, #-4]
    e1a0:	b	e40c <addBinding+0x5bc>
    e1a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    e1a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e1ac:	str	r0, [r1, #16]
    e1b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e1b4:	add	r0, r0, #24
    e1b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e1bc:	str	r0, [r1, #24]
    e1c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e1c4:	ldr	r0, [r0, #4]
    e1c8:	ldr	r1, [fp, #-8]
    e1cc:	str	r0, [r1, #384]	; 0x180
    e1d0:	b	e28c <addBinding+0x43c>
    e1d4:	ldr	r0, [fp, #-8]
    e1d8:	ldr	r0, [r0, #12]
    e1dc:	movw	r1, #28
    e1e0:	str	r0, [sp, #36]	; 0x24
    e1e4:	mov	r0, r1
    e1e8:	ldr	r1, [sp, #36]	; 0x24
    e1ec:	blx	r1
    e1f0:	str	r0, [fp, #-28]	; 0xffffffe4
    e1f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e1f8:	movw	r1, #0
    e1fc:	cmp	r0, r1
    e200:	bne	e210 <addBinding+0x3c0>
    e204:	movw	r0, #1
    e208:	str	r0, [fp, #-4]
    e20c:	b	e40c <addBinding+0x5bc>
    e210:	ldr	r0, [fp, #-8]
    e214:	ldr	r0, [r0, #12]
    e218:	ldr	r1, [fp, #-32]	; 0xffffffe0
    e21c:	add	r1, r1, #24
    e220:	mov	r2, r1
    e224:	str	r0, [sp, #32]
    e228:	mov	r0, r1
    e22c:	ldr	r1, [sp, #32]
    e230:	str	r2, [sp, #28]
    e234:	blx	r1
    e238:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e23c:	str	r0, [r1, #16]
    e240:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e244:	ldr	r0, [r0, #16]
    e248:	movw	r1, #0
    e24c:	cmp	r0, r1
    e250:	bne	e27c <addBinding+0x42c>
    e254:	ldr	r0, [fp, #-8]
    e258:	ldr	r0, [r0, #20]
    e25c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e260:	str	r0, [sp, #24]
    e264:	mov	r0, r1
    e268:	ldr	r1, [sp, #24]
    e26c:	blx	r1
    e270:	movw	r0, #1
    e274:	str	r0, [fp, #-4]
    e278:	b	e40c <addBinding+0x5bc>
    e27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e280:	add	r0, r0, #24
    e284:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e288:	str	r0, [r1, #24]
    e28c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e290:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e294:	str	r0, [r1, #20]
    e298:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e29c:	ldr	r0, [r0, #16]
    e2a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    e2a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e2a8:	mov	r3, r2
    e2ac:	str	r3, [sp, #20]
    e2b0:	bl	0 <memcpy>
    e2b4:	ldr	r0, [fp, #-8]
    e2b8:	add	r0, r0, #488	; 0x1e8
    e2bc:	ldrsb	r0, [r0]
    e2c0:	cmp	r0, #0
    e2c4:	beq	e2e8 <addBinding+0x498>
    e2c8:	ldr	r0, [fp, #-8]
    e2cc:	ldrb	r0, [r0, #488]	; 0x1e8
    e2d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e2d4:	ldr	r1, [r1, #16]
    e2d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e2dc:	sub	r2, r2, #1
    e2e0:	add	r1, r1, r2
    e2e4:	strb	r0, [r1]
    e2e8:	ldr	r0, [fp, #-12]
    e2ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e2f0:	str	r0, [r1]
    e2f4:	ldr	r0, [fp, #-16]
    e2f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e2fc:	str	r0, [r1, #12]
    e300:	ldr	r0, [fp, #-12]
    e304:	ldr	r0, [r0, #4]
    e308:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e30c:	str	r0, [r1, #8]
    e310:	ldr	r0, [fp, #-20]	; 0xffffffec
    e314:	ldrb	r0, [r0]
    e318:	cmp	r0, #0
    e31c:	bne	e348 <addBinding+0x4f8>
    e320:	ldr	r0, [fp, #-12]
    e324:	ldr	r1, [fp, #-8]
    e328:	ldr	r1, [r1, #364]	; 0x16c
    e32c:	add	r1, r1, #152	; 0x98
    e330:	cmp	r0, r1
    e334:	bne	e348 <addBinding+0x4f8>
    e338:	ldr	r0, [fp, #-12]
    e33c:	movw	r1, #0
    e340:	str	r1, [r0, #4]
    e344:	b	e354 <addBinding+0x504>
    e348:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e34c:	ldr	r1, [fp, #-12]
    e350:	str	r0, [r1, #4]
    e354:	ldr	r0, [fp, #8]
    e358:	ldr	r0, [r0]
    e35c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e360:	str	r0, [r1, #4]
    e364:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e368:	ldr	r1, [fp, #8]
    e36c:	str	r0, [r1]
    e370:	ldr	r0, [fp, #-16]
    e374:	movw	r1, #0
    e378:	cmp	r0, r1
    e37c:	beq	e404 <addBinding+0x5b4>
    e380:	ldr	r0, [fp, #-8]
    e384:	ldr	r0, [r0, #108]	; 0x6c
    e388:	movw	r1, #0
    e38c:	cmp	r0, r1
    e390:	beq	e404 <addBinding+0x5b4>
    e394:	ldr	r0, [fp, #-8]
    e398:	ldr	r0, [r0, #108]	; 0x6c
    e39c:	ldr	r1, [fp, #-8]
    e3a0:	ldr	r1, [r1, #4]
    e3a4:	ldr	r2, [fp, #-12]
    e3a8:	ldr	r2, [r2]
    e3ac:	ldr	r3, [fp, #-12]
    e3b0:	ldr	r3, [r3, #4]
    e3b4:	movw	ip, #0
    e3b8:	cmp	r3, ip
    e3bc:	str	r0, [sp, #16]
    e3c0:	str	r1, [sp, #12]
    e3c4:	str	r2, [sp, #8]
    e3c8:	beq	e3d8 <addBinding+0x588>
    e3cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    e3d0:	str	r0, [sp, #4]
    e3d4:	b	e3e4 <addBinding+0x594>
    e3d8:	movw	r0, #0
    e3dc:	str	r0, [sp, #4]
    e3e0:	b	e3e4 <addBinding+0x594>
    e3e4:	ldr	r0, [sp, #4]
    e3e8:	ldr	r1, [sp, #12]
    e3ec:	str	r0, [sp]
    e3f0:	mov	r0, r1
    e3f4:	ldr	r1, [sp, #8]
    e3f8:	ldr	r2, [sp]
    e3fc:	ldr	r3, [sp, #16]
    e400:	blx	r3
    e404:	movw	r0, #0
    e408:	str	r0, [fp, #-4]
    e40c:	ldr	r0, [fp, #-4]
    e410:	mov	sp, fp
    e414:	pop	{fp, pc}

0000e418 <externalEntityContentProcessor>:
    e418:	push	{r4, sl, fp, lr}
    e41c:	add	fp, sp, #8
    e420:	sub	sp, sp, #40	; 0x28
    e424:	str	r0, [fp, #-16]
    e428:	str	r1, [fp, #-20]	; 0xffffffec
    e42c:	str	r2, [sp, #24]
    e430:	str	r3, [sp, #20]
    e434:	ldr	r0, [fp, #-16]
    e438:	ldr	r1, [fp, #-16]
    e43c:	ldr	r2, [r1, #152]	; 0x98
    e440:	ldr	r3, [fp, #-20]	; 0xffffffec
    e444:	ldr	r1, [sp, #24]
    e448:	ldr	ip, [sp, #20]
    e44c:	ldr	lr, [fp, #-16]
    e450:	add	lr, lr, #500	; 0x1f4
    e454:	ldrsb	lr, [lr]
    e458:	cmp	lr, #0
    e45c:	movw	lr, #0
    e460:	movne	lr, #1
    e464:	mvn	r4, #0
    e468:	eor	lr, lr, r4
    e46c:	and	lr, lr, #1
    e470:	movw	r4, #1
    e474:	str	r1, [sp, #12]
    e478:	mov	r1, r4
    e47c:	ldr	r4, [sp, #12]
    e480:	str	r4, [sp]
    e484:	str	ip, [sp, #4]
    e488:	and	ip, lr, #255	; 0xff
    e48c:	str	ip, [sp, #8]
    e490:	bl	a020 <doContent>
    e494:	str	r0, [sp, #16]
    e498:	ldr	r0, [sp, #16]
    e49c:	cmp	r0, #0
    e4a0:	bne	e4c8 <externalEntityContentProcessor+0xb0>
    e4a4:	ldr	r0, [fp, #-16]
    e4a8:	bl	b760 <storeRawNames>
    e4ac:	sxtb	r0, r0
    e4b0:	cmp	r0, #0
    e4b4:	bne	e4c4 <externalEntityContentProcessor+0xac>
    e4b8:	movw	r0, #1
    e4bc:	str	r0, [fp, #-12]
    e4c0:	b	e4d0 <externalEntityContentProcessor+0xb8>
    e4c4:	b	e4c8 <externalEntityContentProcessor+0xb0>
    e4c8:	ldr	r0, [sp, #16]
    e4cc:	str	r0, [fp, #-12]
    e4d0:	ldr	r0, [fp, #-12]
    e4d4:	sub	sp, fp, #8
    e4d8:	pop	{r4, sl, fp, pc}

0000e4dc <appendAttributeValue>:
    e4dc:	push	{fp, lr}
    e4e0:	mov	fp, sp
    e4e4:	sub	sp, sp, #112	; 0x70
    e4e8:	ldr	ip, [fp, #12]
    e4ec:	ldr	lr, [fp, #8]
    e4f0:	str	r0, [fp, #-8]
    e4f4:	str	r1, [fp, #-12]
    e4f8:	strb	r2, [fp, #-13]
    e4fc:	str	r3, [fp, #-20]	; 0xffffffec
    e500:	ldr	r0, [fp, #-8]
    e504:	ldr	r0, [r0, #364]	; 0x16c
    e508:	str	r0, [fp, #-24]	; 0xffffffe8
    e50c:	str	lr, [sp, #44]	; 0x2c
    e510:	str	ip, [sp, #40]	; 0x28
    e514:	ldr	r0, [fp, #-12]
    e518:	ldr	r1, [r0, #16]
    e51c:	ldr	r2, [fp, #-20]	; 0xffffffec
    e520:	ldr	r3, [fp, #8]
    e524:	sub	ip, fp, #28
    e528:	str	r1, [sp, #36]	; 0x24
    e52c:	mov	r1, r2
    e530:	mov	r2, r3
    e534:	mov	r3, ip
    e538:	ldr	ip, [sp, #36]	; 0x24
    e53c:	blx	ip
    e540:	str	r0, [fp, #-32]	; 0xffffffe0
    e544:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e548:	add	r0, r0, #4
    e54c:	cmp	r0, #43	; 0x2b
    e550:	str	r0, [sp, #32]
    e554:	bhi	ecbc <appendAttributeValue+0x7e0>
    e558:	add	r0, pc, #8
    e55c:	ldr	r1, [sp, #32]
    e560:	ldr	r0, [r0, r1, lsl #2]
    e564:	mov	pc, r0
    e568:	.word	0x0000e618
    e56c:	.word	0x0000e83c
    e570:	.word	0x0000ecbc
    e574:	.word	0x0000e650
    e578:	.word	0x0000e624
    e57c:	.word	0x0000ecbc
    e580:	.word	0x0000ecbc
    e584:	.word	0x0000ecbc
    e588:	.word	0x0000ecbc
    e58c:	.word	0x0000ecbc
    e590:	.word	0x0000e80c
    e594:	.word	0x0000e850
    e598:	.word	0x0000ecbc
    e59c:	.word	0x0000e8f4
    e5a0:	.word	0x0000e67c
    e5a4:	.word	0x0000ecbc
    e5a8:	.word	0x0000ecbc
    e5ac:	.word	0x0000ecbc
    e5b0:	.word	0x0000ecbc
    e5b4:	.word	0x0000ecbc
    e5b8:	.word	0x0000ecbc
    e5bc:	.word	0x0000ecbc
    e5c0:	.word	0x0000ecbc
    e5c4:	.word	0x0000ecbc
    e5c8:	.word	0x0000ecbc
    e5cc:	.word	0x0000ecbc
    e5d0:	.word	0x0000ecbc
    e5d4:	.word	0x0000ecbc
    e5d8:	.word	0x0000ecbc
    e5dc:	.word	0x0000ecbc
    e5e0:	.word	0x0000ecbc
    e5e4:	.word	0x0000ecbc
    e5e8:	.word	0x0000ecbc
    e5ec:	.word	0x0000ecbc
    e5f0:	.word	0x0000ecbc
    e5f4:	.word	0x0000ecbc
    e5f8:	.word	0x0000ecbc
    e5fc:	.word	0x0000ecbc
    e600:	.word	0x0000ecbc
    e604:	.word	0x0000ecbc
    e608:	.word	0x0000ecbc
    e60c:	.word	0x0000ecbc
    e610:	.word	0x0000ecbc
    e614:	.word	0x0000e850
    e618:	movw	r0, #0
    e61c:	str	r0, [fp, #-4]
    e620:	b	ecf4 <appendAttributeValue+0x818>
    e624:	ldr	r0, [fp, #-12]
    e628:	ldr	r1, [fp, #-8]
    e62c:	ldr	r1, [r1, #152]	; 0x98
    e630:	cmp	r0, r1
    e634:	bne	e644 <appendAttributeValue+0x168>
    e638:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e63c:	ldr	r1, [fp, #-8]
    e640:	str	r0, [r1, #296]	; 0x128
    e644:	movw	r0, #4
    e648:	str	r0, [fp, #-4]
    e64c:	b	ecf4 <appendAttributeValue+0x818>
    e650:	ldr	r0, [fp, #-12]
    e654:	ldr	r1, [fp, #-8]
    e658:	ldr	r1, [r1, #152]	; 0x98
    e65c:	cmp	r0, r1
    e660:	bne	e670 <appendAttributeValue+0x194>
    e664:	ldr	r0, [fp, #-20]	; 0xffffffec
    e668:	ldr	r1, [fp, #-8]
    e66c:	str	r0, [r1, #296]	; 0x128
    e670:	movw	r0, #4
    e674:	str	r0, [fp, #-4]
    e678:	b	ecf4 <appendAttributeValue+0x818>
    e67c:	ldr	r0, [fp, #-12]
    e680:	ldr	r0, [r0, #44]	; 0x2c
    e684:	ldr	r1, [fp, #-12]
    e688:	ldr	r2, [fp, #-20]	; 0xffffffec
    e68c:	str	r0, [sp, #28]
    e690:	mov	r0, r1
    e694:	mov	r1, r2
    e698:	ldr	r2, [sp, #28]
    e69c:	blx	r2
    e6a0:	str	r0, [fp, #-44]	; 0xffffffd4
    e6a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e6a8:	cmp	r0, #0
    e6ac:	bge	e6dc <appendAttributeValue+0x200>
    e6b0:	ldr	r0, [fp, #-12]
    e6b4:	ldr	r1, [fp, #-8]
    e6b8:	ldr	r1, [r1, #152]	; 0x98
    e6bc:	cmp	r0, r1
    e6c0:	bne	e6d0 <appendAttributeValue+0x1f4>
    e6c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e6c8:	ldr	r1, [fp, #-8]
    e6cc:	str	r0, [r1, #296]	; 0x128
    e6d0:	movw	r0, #14
    e6d4:	str	r0, [fp, #-4]
    e6d8:	b	ecf4 <appendAttributeValue+0x818>
    e6dc:	ldrsb	r0, [fp, #-13]
    e6e0:	cmp	r0, #0
    e6e4:	bne	e730 <appendAttributeValue+0x254>
    e6e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e6ec:	cmp	r0, #32
    e6f0:	bne	e730 <appendAttributeValue+0x254>
    e6f4:	ldr	r0, [fp, #12]
    e6f8:	ldr	r0, [r0, #12]
    e6fc:	ldr	r1, [fp, #12]
    e700:	ldr	r1, [r1, #16]
    e704:	sub	r0, r0, r1
    e708:	cmp	r0, #0
    e70c:	beq	e72c <appendAttributeValue+0x250>
    e710:	ldr	r0, [fp, #12]
    e714:	ldr	r0, [r0, #12]
    e718:	mvn	r1, #0
    e71c:	add	r0, r0, r1
    e720:	ldrb	r0, [r0]
    e724:	cmp	r0, #32
    e728:	bne	e730 <appendAttributeValue+0x254>
    e72c:	b	ece8 <appendAttributeValue+0x80c>
    e730:	sub	r1, fp, #36	; 0x24
    e734:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e738:	bl	0 <coda_XmlUtf8Encode>
    e73c:	str	r0, [fp, #-44]	; 0xffffffd4
    e740:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e744:	cmp	r0, #0
    e748:	bne	e778 <appendAttributeValue+0x29c>
    e74c:	ldr	r0, [fp, #-12]
    e750:	ldr	r1, [fp, #-8]
    e754:	ldr	r1, [r1, #152]	; 0x98
    e758:	cmp	r0, r1
    e75c:	bne	e76c <appendAttributeValue+0x290>
    e760:	ldr	r0, [fp, #-20]	; 0xffffffec
    e764:	ldr	r1, [fp, #-8]
    e768:	str	r0, [r1, #296]	; 0x128
    e76c:	movw	r0, #14
    e770:	str	r0, [fp, #-4]
    e774:	b	ecf4 <appendAttributeValue+0x818>
    e778:	movw	r0, #0
    e77c:	str	r0, [fp, #-40]	; 0xffffffd8
    e780:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e784:	ldr	r1, [fp, #-44]	; 0xffffffd4
    e788:	cmp	r0, r1
    e78c:	bge	e808 <appendAttributeValue+0x32c>
    e790:	ldr	r0, [fp, #12]
    e794:	ldr	r0, [r0, #12]
    e798:	ldr	r1, [fp, #12]
    e79c:	ldr	r1, [r1, #8]
    e7a0:	cmp	r0, r1
    e7a4:	bne	e7c0 <appendAttributeValue+0x2e4>
    e7a8:	ldr	r0, [fp, #12]
    e7ac:	bl	8764 <poolGrow>
    e7b0:	sxtb	r0, r0
    e7b4:	cmp	r0, #0
    e7b8:	bne	e7c0 <appendAttributeValue+0x2e4>
    e7bc:	b	e7e8 <appendAttributeValue+0x30c>
    e7c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e7c4:	sub	r1, fp, #36	; 0x24
    e7c8:	add	r0, r1, r0
    e7cc:	ldrb	r0, [r0]
    e7d0:	ldr	r1, [fp, #12]
    e7d4:	ldr	r2, [r1, #12]
    e7d8:	add	r3, r2, #1
    e7dc:	str	r3, [r1, #12]
    e7e0:	strb	r0, [r2]
    e7e4:	b	e7f4 <appendAttributeValue+0x318>
    e7e8:	movw	r0, #1
    e7ec:	str	r0, [fp, #-4]
    e7f0:	b	ecf4 <appendAttributeValue+0x818>
    e7f4:	b	e7f8 <appendAttributeValue+0x31c>
    e7f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e7fc:	add	r0, r0, #1
    e800:	str	r0, [fp, #-40]	; 0xffffffd8
    e804:	b	e780 <appendAttributeValue+0x2a4>
    e808:	b	ece8 <appendAttributeValue+0x80c>
    e80c:	ldr	r0, [fp, #12]
    e810:	ldr	r1, [fp, #-12]
    e814:	ldr	r2, [fp, #-20]	; 0xffffffec
    e818:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e81c:	bl	8418 <poolAppend>
    e820:	movw	r1, #0
    e824:	cmp	r0, r1
    e828:	bne	e838 <appendAttributeValue+0x35c>
    e82c:	movw	r0, #1
    e830:	str	r0, [fp, #-4]
    e834:	b	ecf4 <appendAttributeValue+0x818>
    e838:	b	ece8 <appendAttributeValue+0x80c>
    e83c:	ldr	r0, [fp, #-20]	; 0xffffffec
    e840:	ldr	r1, [fp, #-12]
    e844:	ldr	r1, [r1, #68]	; 0x44
    e848:	add	r0, r0, r1
    e84c:	str	r0, [fp, #-28]	; 0xffffffe4
    e850:	ldrsb	r0, [fp, #-13]
    e854:	cmp	r0, #0
    e858:	bne	e898 <appendAttributeValue+0x3bc>
    e85c:	ldr	r0, [fp, #12]
    e860:	ldr	r0, [r0, #12]
    e864:	ldr	r1, [fp, #12]
    e868:	ldr	r1, [r1, #16]
    e86c:	sub	r0, r0, r1
    e870:	cmp	r0, #0
    e874:	beq	e894 <appendAttributeValue+0x3b8>
    e878:	ldr	r0, [fp, #12]
    e87c:	ldr	r0, [r0, #12]
    e880:	mvn	r1, #0
    e884:	add	r0, r0, r1
    e888:	ldrb	r0, [r0]
    e88c:	cmp	r0, #32
    e890:	bne	e898 <appendAttributeValue+0x3bc>
    e894:	b	ece8 <appendAttributeValue+0x80c>
    e898:	ldr	r0, [fp, #12]
    e89c:	ldr	r0, [r0, #12]
    e8a0:	ldr	r1, [fp, #12]
    e8a4:	ldr	r1, [r1, #8]
    e8a8:	cmp	r0, r1
    e8ac:	bne	e8c8 <appendAttributeValue+0x3ec>
    e8b0:	ldr	r0, [fp, #12]
    e8b4:	bl	8764 <poolGrow>
    e8b8:	sxtb	r0, r0
    e8bc:	cmp	r0, #0
    e8c0:	bne	e8c8 <appendAttributeValue+0x3ec>
    e8c4:	b	e8e4 <appendAttributeValue+0x408>
    e8c8:	ldr	r0, [fp, #12]
    e8cc:	ldr	r1, [r0, #12]
    e8d0:	add	r2, r1, #1
    e8d4:	str	r2, [r0, #12]
    e8d8:	movw	r0, #32
    e8dc:	strb	r0, [r1]
    e8e0:	b	e8f0 <appendAttributeValue+0x414>
    e8e4:	movw	r0, #1
    e8e8:	str	r0, [fp, #-4]
    e8ec:	b	ecf4 <appendAttributeValue+0x818>
    e8f0:	b	ece8 <appendAttributeValue+0x80c>
    e8f4:	ldr	r0, [fp, #-12]
    e8f8:	ldr	r0, [r0, #48]	; 0x30
    e8fc:	ldr	r1, [fp, #-12]
    e900:	ldr	r2, [fp, #-20]	; 0xffffffec
    e904:	ldr	r3, [fp, #-12]
    e908:	ldr	r3, [r3, #68]	; 0x44
    e90c:	add	r2, r2, r3
    e910:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e914:	ldr	ip, [fp, #-12]
    e918:	ldr	ip, [ip, #68]	; 0x44
    e91c:	movw	lr, #0
    e920:	sub	ip, lr, ip
    e924:	add	r3, r3, ip
    e928:	str	r0, [sp, #24]
    e92c:	mov	r0, r1
    e930:	mov	r1, r2
    e934:	mov	r2, r3
    e938:	ldr	r3, [sp, #24]
    e93c:	blx	r3
    e940:	strb	r0, [fp, #-54]	; 0xffffffca
    e944:	ldrsb	r0, [fp, #-54]	; 0xffffffca
    e948:	cmp	r0, #0
    e94c:	beq	e9ac <appendAttributeValue+0x4d0>
    e950:	ldr	r0, [fp, #12]
    e954:	ldr	r0, [r0, #12]
    e958:	ldr	r1, [fp, #12]
    e95c:	ldr	r1, [r1, #8]
    e960:	cmp	r0, r1
    e964:	bne	e980 <appendAttributeValue+0x4a4>
    e968:	ldr	r0, [fp, #12]
    e96c:	bl	8764 <poolGrow>
    e970:	sxtb	r0, r0
    e974:	cmp	r0, #0
    e978:	bne	e980 <appendAttributeValue+0x4a4>
    e97c:	b	e99c <appendAttributeValue+0x4c0>
    e980:	ldrb	r0, [fp, #-54]	; 0xffffffca
    e984:	ldr	r1, [fp, #12]
    e988:	ldr	r2, [r1, #12]
    e98c:	add	r3, r2, #1
    e990:	str	r3, [r1, #12]
    e994:	strb	r0, [r2]
    e998:	b	e9a8 <appendAttributeValue+0x4cc>
    e99c:	movw	r0, #1
    e9a0:	str	r0, [fp, #-4]
    e9a4:	b	ecf4 <appendAttributeValue+0x818>
    e9a8:	b	ece8 <appendAttributeValue+0x80c>
    e9ac:	ldr	r0, [fp, #-8]
    e9b0:	add	r0, r0, #456	; 0x1c8
    e9b4:	ldr	r1, [fp, #-12]
    e9b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    e9bc:	ldr	r3, [fp, #-12]
    e9c0:	ldr	r3, [r3, #68]	; 0x44
    e9c4:	add	r2, r2, r3
    e9c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e9cc:	ldr	ip, [fp, #-12]
    e9d0:	ldr	ip, [ip, #68]	; 0x44
    e9d4:	movw	lr, #0
    e9d8:	sub	ip, lr, ip
    e9dc:	add	r3, r3, ip
    e9e0:	bl	75e4 <poolStoreString>
    e9e4:	str	r0, [fp, #-48]	; 0xffffffd0
    e9e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    e9ec:	movw	r1, #0
    e9f0:	cmp	r0, r1
    e9f4:	bne	ea04 <appendAttributeValue+0x528>
    e9f8:	movw	r0, #1
    e9fc:	str	r0, [fp, #-4]
    ea00:	b	ecf4 <appendAttributeValue+0x818>
    ea04:	ldr	r0, [fp, #-8]
    ea08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ea0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ea10:	movw	r3, #0
    ea14:	bl	7694 <lookup>
    ea18:	str	r0, [fp, #-52]	; 0xffffffcc
    ea1c:	ldr	r0, [fp, #-8]
    ea20:	ldr	r0, [r0, #472]	; 0x1d8
    ea24:	ldr	r1, [fp, #-8]
    ea28:	str	r0, [r1, #468]	; 0x1d4
    ea2c:	ldr	r0, [fp, #12]
    ea30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ea34:	add	r1, r1, #80	; 0x50
    ea38:	cmp	r0, r1
    ea3c:	bne	eadc <appendAttributeValue+0x600>
    ea40:	ldr	r0, [fp, #-8]
    ea44:	ldr	r0, [r0, #280]	; 0x118
    ea48:	cmp	r0, #0
    ea4c:	movw	r0, #0
    ea50:	str	r0, [sp, #20]
    ea54:	beq	eacc <appendAttributeValue+0x5f0>
    ea58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ea5c:	ldrb	r0, [r0, #130]	; 0x82
    ea60:	cmp	r0, #0
    ea64:	beq	ea94 <appendAttributeValue+0x5b8>
    ea68:	ldr	r0, [fp, #-8]
    ea6c:	ldr	r0, [r0, #308]	; 0x134
    ea70:	movw	r1, #0
    ea74:	cmp	r0, r1
    ea78:	movw	r0, #0
    ea7c:	movne	r0, #1
    ea80:	mvn	r1, #0
    ea84:	eor	r0, r0, r1
    ea88:	and	r0, r0, #1
    ea8c:	str	r0, [sp, #16]
    ea90:	b	eab8 <appendAttributeValue+0x5dc>
    ea94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ea98:	ldrsb	r0, [r0, #129]	; 0x81
    ea9c:	cmp	r0, #0
    eaa0:	movw	r0, #0
    eaa4:	movne	r0, #1
    eaa8:	mvn	r1, #0
    eaac:	eor	r0, r0, r1
    eab0:	and	r0, r0, #1
    eab4:	str	r0, [sp, #16]
    eab8:	ldr	r0, [sp, #16]
    eabc:	cmp	r0, #0
    eac0:	movw	r0, #0
    eac4:	movne	r0, #1
    eac8:	str	r0, [sp, #20]
    eacc:	ldr	r0, [sp, #20]
    ead0:	and	r0, r0, #1
    ead4:	strb	r0, [fp, #-53]	; 0xffffffcb
    ead8:	b	eb18 <appendAttributeValue+0x63c>
    eadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    eae0:	ldrsb	r0, [r0, #129]	; 0x81
    eae4:	cmp	r0, #0
    eae8:	movw	r0, #1
    eaec:	str	r0, [sp, #12]
    eaf0:	beq	eb0c <appendAttributeValue+0x630>
    eaf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    eaf8:	ldrb	r0, [r0, #130]	; 0x82
    eafc:	cmp	r0, #0
    eb00:	movw	r0, #0
    eb04:	movne	r0, #1
    eb08:	str	r0, [sp, #12]
    eb0c:	ldr	r0, [sp, #12]
    eb10:	and	r0, r0, #1
    eb14:	strb	r0, [fp, #-53]	; 0xffffffcb
    eb18:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
    eb1c:	cmp	r0, #0
    eb20:	beq	eb64 <appendAttributeValue+0x688>
    eb24:	ldr	r0, [fp, #-52]	; 0xffffffcc
    eb28:	movw	r1, #0
    eb2c:	cmp	r0, r1
    eb30:	bne	eb40 <appendAttributeValue+0x664>
    eb34:	movw	r0, #11
    eb38:	str	r0, [fp, #-4]
    eb3c:	b	ecf4 <appendAttributeValue+0x818>
    eb40:	ldr	r0, [fp, #-52]	; 0xffffffcc
    eb44:	ldrsb	r0, [r0, #34]	; 0x22
    eb48:	cmp	r0, #0
    eb4c:	bne	eb5c <appendAttributeValue+0x680>
    eb50:	movw	r0, #24
    eb54:	str	r0, [fp, #-4]
    eb58:	b	ecf4 <appendAttributeValue+0x818>
    eb5c:	b	eb60 <appendAttributeValue+0x684>
    eb60:	b	eb7c <appendAttributeValue+0x6a0>
    eb64:	ldr	r0, [fp, #-52]	; 0xffffffcc
    eb68:	movw	r1, #0
    eb6c:	cmp	r0, r1
    eb70:	bne	eb78 <appendAttributeValue+0x69c>
    eb74:	b	ece8 <appendAttributeValue+0x80c>
    eb78:	b	eb7c <appendAttributeValue+0x6a0>
    eb7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    eb80:	ldrsb	r0, [r0, #32]
    eb84:	cmp	r0, #0
    eb88:	beq	ebb8 <appendAttributeValue+0x6dc>
    eb8c:	ldr	r0, [fp, #-12]
    eb90:	ldr	r1, [fp, #-8]
    eb94:	ldr	r1, [r1, #152]	; 0x98
    eb98:	cmp	r0, r1
    eb9c:	bne	ebac <appendAttributeValue+0x6d0>
    eba0:	ldr	r0, [fp, #-20]	; 0xffffffec
    eba4:	ldr	r1, [fp, #-8]
    eba8:	str	r0, [r1, #296]	; 0x128
    ebac:	movw	r0, #12
    ebb0:	str	r0, [fp, #-4]
    ebb4:	b	ecf4 <appendAttributeValue+0x818>
    ebb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ebbc:	ldr	r0, [r0, #28]
    ebc0:	movw	r1, #0
    ebc4:	cmp	r0, r1
    ebc8:	beq	ebf8 <appendAttributeValue+0x71c>
    ebcc:	ldr	r0, [fp, #-12]
    ebd0:	ldr	r1, [fp, #-8]
    ebd4:	ldr	r1, [r1, #152]	; 0x98
    ebd8:	cmp	r0, r1
    ebdc:	bne	ebec <appendAttributeValue+0x710>
    ebe0:	ldr	r0, [fp, #-20]	; 0xffffffec
    ebe4:	ldr	r1, [fp, #-8]
    ebe8:	str	r0, [r1, #296]	; 0x128
    ebec:	movw	r0, #15
    ebf0:	str	r0, [fp, #-4]
    ebf4:	b	ecf4 <appendAttributeValue+0x818>
    ebf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ebfc:	ldr	r0, [r0, #4]
    ec00:	movw	r1, #0
    ec04:	cmp	r0, r1
    ec08:	bne	ec38 <appendAttributeValue+0x75c>
    ec0c:	ldr	r0, [fp, #-12]
    ec10:	ldr	r1, [fp, #-8]
    ec14:	ldr	r1, [r1, #152]	; 0x98
    ec18:	cmp	r0, r1
    ec1c:	bne	ec2c <appendAttributeValue+0x750>
    ec20:	ldr	r0, [fp, #-20]	; 0xffffffec
    ec24:	ldr	r1, [fp, #-8]
    ec28:	str	r0, [r1, #296]	; 0x128
    ec2c:	movw	r0, #16
    ec30:	str	r0, [fp, #-4]
    ec34:	b	ecf4 <appendAttributeValue+0x818>
    ec38:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ec3c:	ldr	r0, [r0, #4]
    ec40:	ldr	r1, [fp, #-52]	; 0xffffffcc
    ec44:	ldr	r1, [r1, #8]
    ec48:	add	r0, r0, r1
    ec4c:	str	r0, [sp, #48]	; 0x30
    ec50:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ec54:	movw	r1, #1
    ec58:	strb	r1, [r0, #32]
    ec5c:	ldr	r0, [fp, #-8]
    ec60:	ldr	r1, [fp, #-8]
    ec64:	ldr	r1, [r1, #236]	; 0xec
    ec68:	ldrb	r2, [fp, #-13]
    ec6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ec70:	ldr	r3, [r3, #4]
    ec74:	ldr	ip, [sp, #48]	; 0x30
    ec78:	ldr	lr, [fp, #12]
    ec7c:	and	r2, r2, #255	; 0xff
    ec80:	str	ip, [sp]
    ec84:	str	lr, [sp, #4]
    ec88:	bl	e4dc <appendAttributeValue>
    ec8c:	str	r0, [sp, #52]	; 0x34
    ec90:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ec94:	movw	r1, #0
    ec98:	strb	r1, [r0, #32]
    ec9c:	ldr	r0, [sp, #52]	; 0x34
    eca0:	cmp	r0, #0
    eca4:	beq	ecb4 <appendAttributeValue+0x7d8>
    eca8:	ldr	r0, [sp, #52]	; 0x34
    ecac:	str	r0, [fp, #-4]
    ecb0:	b	ecf4 <appendAttributeValue+0x818>
    ecb4:	b	ecb8 <appendAttributeValue+0x7dc>
    ecb8:	b	ece8 <appendAttributeValue+0x80c>
    ecbc:	ldr	r0, [fp, #-12]
    ecc0:	ldr	r1, [fp, #-8]
    ecc4:	ldr	r1, [r1, #152]	; 0x98
    ecc8:	cmp	r0, r1
    eccc:	bne	ecdc <appendAttributeValue+0x800>
    ecd0:	ldr	r0, [fp, #-20]	; 0xffffffec
    ecd4:	ldr	r1, [fp, #-8]
    ecd8:	str	r0, [r1, #296]	; 0x128
    ecdc:	movw	r0, #23
    ece0:	str	r0, [fp, #-4]
    ece4:	b	ecf4 <appendAttributeValue+0x818>
    ece8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ecec:	str	r0, [fp, #-20]	; 0xffffffec
    ecf0:	b	e514 <appendAttributeValue+0x38>
    ecf4:	ldr	r0, [fp, #-4]
    ecf8:	mov	sp, fp
    ecfc:	pop	{fp, pc}

0000ed00 <internalEntityProcessor>:
    ed00:	push	{r4, r5, r6, sl, fp, lr}
    ed04:	add	fp, sp, #16
    ed08:	sub	sp, sp, #80	; 0x50
    ed0c:	str	r0, [fp, #-24]	; 0xffffffe8
    ed10:	str	r1, [fp, #-28]	; 0xffffffe4
    ed14:	str	r2, [fp, #-32]	; 0xffffffe0
    ed18:	str	r3, [fp, #-36]	; 0xffffffdc
    ed1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed20:	ldr	r0, [r0, #308]	; 0x134
    ed24:	str	r0, [sp, #36]	; 0x24
    ed28:	ldr	r0, [sp, #36]	; 0x24
    ed2c:	movw	r1, #0
    ed30:	cmp	r0, r1
    ed34:	bne	ed44 <internalEntityProcessor+0x44>
    ed38:	movw	r0, #23
    ed3c:	str	r0, [fp, #-20]	; 0xffffffec
    ed40:	b	f02c <internalEntityProcessor+0x32c>
    ed44:	ldr	r0, [sp, #36]	; 0x24
    ed48:	ldr	r0, [r0, #12]
    ed4c:	str	r0, [fp, #-40]	; 0xffffffd8
    ed50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ed54:	ldr	r0, [r0, #4]
    ed58:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ed5c:	ldr	r1, [r1, #12]
    ed60:	add	r0, r0, r1
    ed64:	str	r0, [fp, #-44]	; 0xffffffd4
    ed68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ed6c:	ldr	r0, [r0, #4]
    ed70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ed74:	ldr	r1, [r1, #8]
    ed78:	add	r0, r0, r1
    ed7c:	str	r0, [sp, #48]	; 0x30
    ed80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ed84:	ldrsb	r0, [r0, #33]	; 0x21
    ed88:	cmp	r0, #0
    ed8c:	beq	ee10 <internalEntityProcessor+0x110>
    ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed94:	ldr	r0, [r0, #236]	; 0xec
    ed98:	ldr	r0, [r0]
    ed9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    eda0:	ldr	r1, [r1, #236]	; 0xec
    eda4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    eda8:	ldr	r3, [sp, #48]	; 0x30
    edac:	str	r0, [sp, #24]
    edb0:	mov	r0, r1
    edb4:	mov	r1, r2
    edb8:	mov	r2, r3
    edbc:	add	r3, sp, #44	; 0x2c
    edc0:	ldr	ip, [sp, #24]
    edc4:	blx	ip
    edc8:	str	r0, [sp, #32]
    edcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    edd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    edd4:	ldr	r1, [r1, #236]	; 0xec
    edd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    eddc:	ldr	r3, [sp, #48]	; 0x30
    ede0:	ldr	ip, [sp, #32]
    ede4:	ldr	lr, [sp, #44]	; 0x2c
    ede8:	str	ip, [sp]
    edec:	str	lr, [sp, #4]
    edf0:	add	ip, sp, #44	; 0x2c
    edf4:	str	ip, [sp, #8]
    edf8:	movw	ip, #0
    edfc:	and	ip, ip, #255	; 0xff
    ee00:	str	ip, [sp, #12]
    ee04:	bl	42dc <doProlog>
    ee08:	str	r0, [sp, #40]	; 0x28
    ee0c:	b	ee4c <internalEntityProcessor+0x14c>
    ee10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ee14:	ldr	r1, [sp, #36]	; 0x24
    ee18:	ldr	r1, [r1, #16]
    ee1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ee20:	ldr	r2, [r2, #236]	; 0xec
    ee24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ee28:	ldr	ip, [sp, #48]	; 0x30
    ee2c:	str	ip, [sp]
    ee30:	add	ip, sp, #44	; 0x2c
    ee34:	str	ip, [sp, #4]
    ee38:	movw	ip, #0
    ee3c:	and	ip, ip, #255	; 0xff
    ee40:	str	ip, [sp, #8]
    ee44:	bl	a020 <doContent>
    ee48:	str	r0, [sp, #40]	; 0x28
    ee4c:	ldr	r0, [sp, #40]	; 0x28
    ee50:	cmp	r0, #0
    ee54:	beq	ee64 <internalEntityProcessor+0x164>
    ee58:	ldr	r0, [sp, #40]	; 0x28
    ee5c:	str	r0, [fp, #-20]	; 0xffffffec
    ee60:	b	f02c <internalEntityProcessor+0x32c>
    ee64:	ldr	r0, [sp, #48]	; 0x30
    ee68:	ldr	r1, [sp, #44]	; 0x2c
    ee6c:	cmp	r0, r1
    ee70:	beq	eea8 <internalEntityProcessor+0x1a8>
    ee74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ee78:	ldr	r0, [r0, #496]	; 0x1f0
    ee7c:	cmp	r0, #3
    ee80:	bne	eea8 <internalEntityProcessor+0x1a8>
    ee84:	ldr	r0, [sp, #44]	; 0x2c
    ee88:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ee8c:	ldr	r1, [r1, #4]
    ee90:	sub	r0, r0, r1
    ee94:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ee98:	str	r0, [r1, #12]
    ee9c:	ldr	r0, [sp, #40]	; 0x28
    eea0:	str	r0, [fp, #-20]	; 0xffffffec
    eea4:	b	f02c <internalEntityProcessor+0x32c>
    eea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    eeac:	movw	r1, #0
    eeb0:	strb	r1, [r0, #32]
    eeb4:	ldr	r0, [sp, #36]	; 0x24
    eeb8:	ldr	r0, [r0, #8]
    eebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    eec0:	str	r0, [r1, #308]	; 0x134
    eec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    eec8:	ldr	r0, [r0, #312]	; 0x138
    eecc:	ldr	r1, [sp, #36]	; 0x24
    eed0:	str	r0, [r1, #8]
    eed4:	ldr	r0, [sp, #36]	; 0x24
    eed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    eedc:	str	r0, [r1, #312]	; 0x138
    eee0:	b	eee4 <internalEntityProcessor+0x1e4>
    eee4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    eee8:	ldrsb	r0, [r0, #33]	; 0x21
    eeec:	cmp	r0, #0
    eef0:	beq	efa4 <internalEntityProcessor+0x2a4>
    eef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    eef8:	movw	r1, #0
    eefc:	movt	r1, #0
    ef00:	str	r1, [r0, #288]	; 0x120
    ef04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef08:	ldr	r0, [r0, #152]	; 0x98
    ef0c:	ldr	r0, [r0]
    ef10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ef14:	ldr	r1, [r1, #152]	; 0x98
    ef18:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ef1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef20:	str	r0, [sp, #20]
    ef24:	mov	r0, r1
    ef28:	mov	r1, r2
    ef2c:	mov	r2, r3
    ef30:	add	r3, sp, #44	; 0x2c
    ef34:	ldr	ip, [sp, #20]
    ef38:	blx	ip
    ef3c:	str	r0, [sp, #28]
    ef40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ef48:	ldr	r1, [r1, #152]	; 0x98
    ef4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ef50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef54:	ldr	ip, [sp, #28]
    ef58:	ldr	lr, [sp, #44]	; 0x2c
    ef5c:	ldr	r4, [fp, #-36]	; 0xffffffdc
    ef60:	ldr	r5, [fp, #-24]	; 0xffffffe8
    ef64:	add	r5, r5, #500	; 0x1f4
    ef68:	ldrsb	r5, [r5]
    ef6c:	cmp	r5, #0
    ef70:	movw	r5, #0
    ef74:	movne	r5, #1
    ef78:	mvn	r6, #0
    ef7c:	eor	r5, r5, r6
    ef80:	and	r5, r5, #1
    ef84:	str	ip, [sp]
    ef88:	str	lr, [sp, #4]
    ef8c:	str	r4, [sp, #8]
    ef90:	and	ip, r5, #255	; 0xff
    ef94:	str	ip, [sp, #12]
    ef98:	bl	42dc <doProlog>
    ef9c:	str	r0, [fp, #-20]	; 0xffffffec
    efa0:	b	f02c <internalEntityProcessor+0x32c>
    efa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    efa8:	movw	r1, #0
    efac:	movt	r1, #0
    efb0:	str	r1, [r0, #288]	; 0x120
    efb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    efb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    efbc:	ldr	r1, [r1, #492]	; 0x1ec
    efc0:	movw	r2, #0
    efc4:	cmp	r1, r2
    efc8:	movw	r1, #0
    efcc:	movne	r1, #1
    efd0:	tst	r1, #1
    efd4:	movw	r1, #1
    efd8:	moveq	r1, #0
    efdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    efe0:	ldr	r2, [r2, #152]	; 0x98
    efe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    efe8:	ldr	ip, [fp, #-32]	; 0xffffffe0
    efec:	ldr	lr, [fp, #-36]	; 0xffffffdc
    eff0:	ldr	r4, [fp, #-24]	; 0xffffffe8
    eff4:	add	r4, r4, #500	; 0x1f4
    eff8:	ldrsb	r4, [r4]
    effc:	cmp	r4, #0
    f000:	movw	r4, #0
    f004:	movne	r4, #1
    f008:	mvn	r5, #0
    f00c:	eor	r4, r4, r5
    f010:	and	r4, r4, #1
    f014:	str	ip, [sp]
    f018:	str	lr, [sp, #4]
    f01c:	and	ip, r4, #255	; 0xff
    f020:	str	ip, [sp, #8]
    f024:	bl	a020 <doContent>
    f028:	str	r0, [fp, #-20]	; 0xffffffec
    f02c:	ldr	r0, [fp, #-20]	; 0xffffffec
    f030:	sub	sp, fp, #16
    f034:	pop	{r4, r5, r6, sl, fp, pc}

0000f038 <build_node>:
    f038:	push	{fp, lr}
    f03c:	mov	fp, sp
    f040:	sub	sp, sp, #40	; 0x28
    f044:	ldr	ip, [fp, #8]
    f048:	str	r0, [fp, #-4]
    f04c:	str	r1, [fp, #-8]
    f050:	str	r2, [fp, #-12]
    f054:	str	r3, [fp, #-16]
    f058:	ldr	r0, [fp, #-4]
    f05c:	ldr	r0, [r0, #364]	; 0x16c
    f060:	str	r0, [sp, #20]
    f064:	ldr	r0, [sp, #20]
    f068:	ldr	r0, [r0, #164]	; 0xa4
    f06c:	ldr	r1, [fp, #-8]
    f070:	movw	r2, #28
    f074:	mul	r1, r1, r2
    f078:	add	r0, r0, r1
    f07c:	ldr	r0, [r0]
    f080:	ldr	r1, [fp, #-12]
    f084:	str	r0, [r1]
    f088:	ldr	r0, [sp, #20]
    f08c:	ldr	r0, [r0, #164]	; 0xa4
    f090:	ldr	r1, [fp, #-8]
    f094:	mul	r1, r1, r2
    f098:	add	r0, r0, r1
    f09c:	ldr	r0, [r0, #4]
    f0a0:	ldr	r1, [fp, #-12]
    f0a4:	str	r0, [r1, #4]
    f0a8:	ldr	r0, [fp, #-12]
    f0ac:	ldr	r0, [r0]
    f0b0:	cmp	r0, #4
    f0b4:	str	ip, [sp, #4]
    f0b8:	bne	f144 <build_node+0x10c>
    f0bc:	ldr	r0, [fp, #8]
    f0c0:	ldr	r0, [r0]
    f0c4:	ldr	r1, [fp, #-12]
    f0c8:	str	r0, [r1, #8]
    f0cc:	ldr	r0, [sp, #20]
    f0d0:	ldr	r0, [r0, #164]	; 0xa4
    f0d4:	ldr	r1, [fp, #-8]
    f0d8:	movw	r2, #28
    f0dc:	mul	r1, r1, r2
    f0e0:	add	r0, r0, r1
    f0e4:	ldr	r0, [r0, #8]
    f0e8:	str	r0, [sp, #16]
    f0ec:	ldr	r0, [sp, #16]
    f0f0:	ldrb	r0, [r0]
    f0f4:	ldr	r1, [fp, #8]
    f0f8:	ldr	r2, [r1]
    f0fc:	add	r3, r2, #1
    f100:	str	r3, [r1]
    f104:	strb	r0, [r2]
    f108:	ldr	r0, [sp, #16]
    f10c:	ldrsb	r0, [r0]
    f110:	cmp	r0, #0
    f114:	bne	f11c <build_node+0xe4>
    f118:	b	f12c <build_node+0xf4>
    f11c:	ldr	r0, [sp, #16]
    f120:	add	r0, r0, #1
    f124:	str	r0, [sp, #16]
    f128:	b	f0ec <build_node+0xb4>
    f12c:	ldr	r0, [fp, #-12]
    f130:	movw	r1, #0
    f134:	str	r1, [r0, #12]
    f138:	ldr	r0, [fp, #-12]
    f13c:	str	r1, [r0, #16]
    f140:	b	f23c <build_node+0x204>
    f144:	ldr	r0, [sp, #20]
    f148:	ldr	r0, [r0, #164]	; 0xa4
    f14c:	ldr	r1, [fp, #-8]
    f150:	movw	r2, #28
    f154:	mul	r1, r1, r2
    f158:	add	r0, r0, r1
    f15c:	ldr	r0, [r0, #20]
    f160:	ldr	r1, [fp, #-12]
    f164:	str	r0, [r1, #12]
    f168:	ldr	r0, [fp, #-16]
    f16c:	ldr	r0, [r0]
    f170:	ldr	r1, [fp, #-12]
    f174:	str	r0, [r1, #16]
    f178:	ldr	r0, [fp, #-12]
    f17c:	ldr	r0, [r0, #12]
    f180:	ldr	r1, [fp, #-16]
    f184:	ldr	r3, [r1]
    f188:	movw	ip, #20
    f18c:	mul	r0, r0, ip
    f190:	add	r0, r3, r0
    f194:	str	r0, [r1]
    f198:	movw	r0, #0
    f19c:	str	r0, [sp, #12]
    f1a0:	ldr	r0, [sp, #20]
    f1a4:	ldr	r0, [r0, #164]	; 0xa4
    f1a8:	ldr	r1, [fp, #-8]
    f1ac:	mul	r1, r1, r2
    f1b0:	add	r0, r0, r1
    f1b4:	ldr	r0, [r0, #12]
    f1b8:	str	r0, [sp, #8]
    f1bc:	ldr	r0, [sp, #12]
    f1c0:	ldr	r1, [fp, #-12]
    f1c4:	ldr	r1, [r1, #12]
    f1c8:	cmp	r0, r1
    f1cc:	bcs	f230 <build_node+0x1f8>
    f1d0:	ldr	r0, [fp, #-4]
    f1d4:	ldr	r1, [sp, #8]
    f1d8:	ldr	r2, [fp, #-12]
    f1dc:	ldr	r2, [r2, #16]
    f1e0:	ldr	r3, [sp, #12]
    f1e4:	movw	ip, #20
    f1e8:	mul	r3, r3, ip
    f1ec:	add	r2, r2, r3
    f1f0:	ldr	r3, [fp, #-16]
    f1f4:	ldr	ip, [fp, #8]
    f1f8:	str	ip, [sp]
    f1fc:	bl	f038 <build_node>
    f200:	ldr	r0, [sp, #12]
    f204:	add	r0, r0, #1
    f208:	str	r0, [sp, #12]
    f20c:	ldr	r0, [sp, #20]
    f210:	ldr	r0, [r0, #164]	; 0xa4
    f214:	ldr	r1, [sp, #8]
    f218:	movw	r2, #28
    f21c:	mul	r1, r1, r2
    f220:	add	r0, r0, r1
    f224:	ldr	r0, [r0, #24]
    f228:	str	r0, [sp, #8]
    f22c:	b	f1bc <build_node+0x184>
    f230:	ldr	r0, [fp, #-12]
    f234:	movw	r1, #0
    f238:	str	r1, [r0, #8]
    f23c:	mov	sp, fp
    f240:	pop	{fp, pc}

0000f244 <normalizeLines>:
    f244:	sub	sp, sp, #8
    f248:	str	r0, [sp, #4]
    f24c:	ldr	r0, [sp, #4]
    f250:	ldrb	r0, [r0]
    f254:	cmp	r0, #0
    f258:	bne	f260 <normalizeLines+0x1c>
    f25c:	b	f31c <normalizeLines+0xd8>
    f260:	ldr	r0, [sp, #4]
    f264:	ldrb	r0, [r0]
    f268:	cmp	r0, #13
    f26c:	bne	f274 <normalizeLines+0x30>
    f270:	b	f288 <normalizeLines+0x44>
    f274:	b	f278 <normalizeLines+0x34>
    f278:	ldr	r0, [sp, #4]
    f27c:	add	r0, r0, #1
    f280:	str	r0, [sp, #4]
    f284:	b	f24c <normalizeLines+0x8>
    f288:	ldr	r0, [sp, #4]
    f28c:	str	r0, [sp]
    f290:	ldr	r0, [sp, #4]
    f294:	ldrb	r0, [r0]
    f298:	cmp	r0, #13
    f29c:	bne	f2dc <normalizeLines+0x98>
    f2a0:	ldr	r0, [sp]
    f2a4:	add	r1, r0, #1
    f2a8:	str	r1, [sp]
    f2ac:	movw	r1, #10
    f2b0:	strb	r1, [r0]
    f2b4:	ldr	r0, [sp, #4]
    f2b8:	add	r1, r0, #1
    f2bc:	str	r1, [sp, #4]
    f2c0:	ldrb	r0, [r0, #1]
    f2c4:	cmp	r0, #10
    f2c8:	bne	f2d8 <normalizeLines+0x94>
    f2cc:	ldr	r0, [sp, #4]
    f2d0:	add	r0, r0, #1
    f2d4:	str	r0, [sp, #4]
    f2d8:	b	f2fc <normalizeLines+0xb8>
    f2dc:	ldr	r0, [sp, #4]
    f2e0:	add	r1, r0, #1
    f2e4:	str	r1, [sp, #4]
    f2e8:	ldrb	r0, [r0]
    f2ec:	ldr	r1, [sp]
    f2f0:	add	r2, r1, #1
    f2f4:	str	r2, [sp]
    f2f8:	strb	r0, [r1]
    f2fc:	b	f300 <normalizeLines+0xbc>
    f300:	ldr	r0, [sp, #4]
    f304:	ldrsb	r0, [r0]
    f308:	cmp	r0, #0
    f30c:	bne	f290 <normalizeLines+0x4c>
    f310:	ldr	r0, [sp]
    f314:	movw	r1, #0
    f318:	strb	r1, [r0]
    f31c:	add	sp, sp, #8
    f320:	bx	lr

0000f324 <generate_hash_secret_salt>:
    f324:	push	{fp, lr}
    f328:	mov	fp, sp
    f32c:	sub	sp, sp, #8
    f330:	mov	r0, #0
    f334:	bl	0 <time>
    f338:	mov	lr, r0
    f33c:	add	r1, r0, #1
    f340:	cmn	r0, #1
    f344:	movne	r1, r0
    f348:	str	r1, [sp, #4]
    f34c:	ldr	r0, [sp, #4]
    f350:	str	lr, [sp]
    f354:	bl	0 <srand>
    f358:	bl	0 <rand>
    f35c:	mov	sp, fp
    f360:	pop	{fp, pc}

0000f364 <externalEntityInitProcessor2>:
    f364:	push	{fp, lr}
    f368:	mov	fp, sp
    f36c:	sub	sp, sp, #40	; 0x28
    f370:	str	r0, [fp, #-8]
    f374:	str	r1, [fp, #-12]
    f378:	str	r2, [fp, #-16]
    f37c:	str	r3, [sp, #20]
    f380:	ldr	r0, [fp, #-12]
    f384:	str	r0, [sp, #16]
    f388:	ldr	r0, [fp, #-8]
    f38c:	ldr	r0, [r0, #152]	; 0x98
    f390:	ldr	r1, [r0, #4]
    f394:	ldr	r2, [fp, #-12]
    f398:	ldr	r3, [fp, #-16]
    f39c:	add	ip, sp, #16
    f3a0:	str	r1, [sp, #8]
    f3a4:	mov	r1, r2
    f3a8:	mov	r2, r3
    f3ac:	mov	r3, ip
    f3b0:	ldr	ip, [sp, #8]
    f3b4:	blx	ip
    f3b8:	str	r0, [sp, #12]
    f3bc:	ldr	r0, [sp, #12]
    f3c0:	cmn	r0, #2
    f3c4:	str	r0, [sp, #4]
    f3c8:	beq	f47c <externalEntityInitProcessor2+0x118>
    f3cc:	b	f3d0 <externalEntityInitProcessor2+0x6c>
    f3d0:	ldr	r0, [sp, #4]
    f3d4:	cmn	r0, #1
    f3d8:	beq	f438 <externalEntityInitProcessor2+0xd4>
    f3dc:	b	f3e0 <externalEntityInitProcessor2+0x7c>
    f3e0:	ldr	r0, [sp, #4]
    f3e4:	cmp	r0, #14
    f3e8:	bne	f4c0 <externalEntityInitProcessor2+0x15c>
    f3ec:	b	f3f0 <externalEntityInitProcessor2+0x8c>
    f3f0:	ldr	r0, [sp, #16]
    f3f4:	ldr	r1, [fp, #-16]
    f3f8:	cmp	r0, r1
    f3fc:	bne	f42c <externalEntityInitProcessor2+0xc8>
    f400:	ldr	r0, [fp, #-8]
    f404:	add	r0, r0, #500	; 0x1f4
    f408:	ldrsb	r0, [r0]
    f40c:	cmp	r0, #0
    f410:	bne	f42c <externalEntityInitProcessor2+0xc8>
    f414:	ldr	r0, [sp, #16]
    f418:	ldr	r1, [sp, #20]
    f41c:	str	r0, [r1]
    f420:	movw	r0, #0
    f424:	str	r0, [fp, #-4]
    f428:	b	f4e8 <externalEntityInitProcessor2+0x184>
    f42c:	ldr	r0, [sp, #16]
    f430:	str	r0, [fp, #-12]
    f434:	b	f4c0 <externalEntityInitProcessor2+0x15c>
    f438:	ldr	r0, [fp, #-8]
    f43c:	add	r0, r0, #500	; 0x1f4
    f440:	ldrsb	r0, [r0]
    f444:	cmp	r0, #0
    f448:	bne	f464 <externalEntityInitProcessor2+0x100>
    f44c:	ldr	r0, [fp, #-12]
    f450:	ldr	r1, [sp, #20]
    f454:	str	r0, [r1]
    f458:	movw	r0, #0
    f45c:	str	r0, [fp, #-4]
    f460:	b	f4e8 <externalEntityInitProcessor2+0x184>
    f464:	ldr	r0, [fp, #-12]
    f468:	ldr	r1, [fp, #-8]
    f46c:	str	r0, [r1, #296]	; 0x128
    f470:	movw	r0, #5
    f474:	str	r0, [fp, #-4]
    f478:	b	f4e8 <externalEntityInitProcessor2+0x184>
    f47c:	ldr	r0, [fp, #-8]
    f480:	add	r0, r0, #500	; 0x1f4
    f484:	ldrsb	r0, [r0]
    f488:	cmp	r0, #0
    f48c:	bne	f4a8 <externalEntityInitProcessor2+0x144>
    f490:	ldr	r0, [fp, #-12]
    f494:	ldr	r1, [sp, #20]
    f498:	str	r0, [r1]
    f49c:	movw	r0, #0
    f4a0:	str	r0, [fp, #-4]
    f4a4:	b	f4e8 <externalEntityInitProcessor2+0x184>
    f4a8:	ldr	r0, [fp, #-12]
    f4ac:	ldr	r1, [fp, #-8]
    f4b0:	str	r0, [r1, #296]	; 0x128
    f4b4:	movw	r0, #6
    f4b8:	str	r0, [fp, #-4]
    f4bc:	b	f4e8 <externalEntityInitProcessor2+0x184>
    f4c0:	ldr	r0, [fp, #-8]
    f4c4:	movw	r1, #0
    f4c8:	movt	r1, #0
    f4cc:	str	r1, [r0, #288]	; 0x120
    f4d0:	ldr	r0, [fp, #-8]
    f4d4:	ldr	r1, [fp, #-12]
    f4d8:	ldr	r2, [fp, #-16]
    f4dc:	ldr	r3, [sp, #20]
    f4e0:	bl	f4f4 <externalEntityInitProcessor3>
    f4e4:	str	r0, [fp, #-4]
    f4e8:	ldr	r0, [fp, #-4]
    f4ec:	mov	sp, fp
    f4f0:	pop	{fp, pc}

0000f4f4 <externalEntityInitProcessor3>:
    f4f4:	push	{fp, lr}
    f4f8:	mov	fp, sp
    f4fc:	sub	sp, sp, #48	; 0x30
    f500:	str	r0, [fp, #-8]
    f504:	str	r1, [fp, #-12]
    f508:	str	r2, [fp, #-16]
    f50c:	str	r3, [fp, #-20]	; 0xffffffec
    f510:	ldr	r0, [fp, #-12]
    f514:	str	r0, [sp, #20]
    f518:	ldr	r0, [fp, #-12]
    f51c:	ldr	r1, [fp, #-8]
    f520:	str	r0, [r1, #296]	; 0x128
    f524:	ldr	r0, [fp, #-8]
    f528:	ldr	r0, [r0, #152]	; 0x98
    f52c:	ldr	r1, [r0, #4]
    f530:	ldr	r2, [fp, #-12]
    f534:	ldr	r3, [fp, #-16]
    f538:	add	ip, sp, #20
    f53c:	str	r1, [sp, #12]
    f540:	mov	r1, r2
    f544:	mov	r2, r3
    f548:	mov	r3, ip
    f54c:	ldr	ip, [sp, #12]
    f550:	blx	ip
    f554:	str	r0, [sp, #24]
    f558:	ldr	r0, [sp, #20]
    f55c:	ldr	r1, [fp, #-8]
    f560:	str	r0, [r1, #300]	; 0x12c
    f564:	ldr	r0, [sp, #24]
    f568:	cmn	r0, #2
    f56c:	str	r0, [sp, #8]
    f570:	beq	f658 <externalEntityInitProcessor3+0x164>
    f574:	b	f578 <externalEntityInitProcessor3+0x84>
    f578:	ldr	r0, [sp, #8]
    f57c:	cmn	r0, #1
    f580:	beq	f620 <externalEntityInitProcessor3+0x12c>
    f584:	b	f588 <externalEntityInitProcessor3+0x94>
    f588:	ldr	r0, [sp, #8]
    f58c:	cmp	r0, #12
    f590:	bne	f690 <externalEntityInitProcessor3+0x19c>
    f594:	b	f598 <externalEntityInitProcessor3+0xa4>
    f598:	ldr	r0, [fp, #-8]
    f59c:	ldr	r2, [fp, #-12]
    f5a0:	ldr	r3, [sp, #20]
    f5a4:	movw	r1, #1
    f5a8:	bl	7180 <processXmlDecl>
    f5ac:	str	r0, [sp, #16]
    f5b0:	ldr	r0, [sp, #16]
    f5b4:	cmp	r0, #0
    f5b8:	beq	f5c8 <externalEntityInitProcessor3+0xd4>
    f5bc:	ldr	r0, [sp, #16]
    f5c0:	str	r0, [fp, #-4]
    f5c4:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f5c8:	ldr	r0, [fp, #-8]
    f5cc:	ldr	r0, [r0, #496]	; 0x1f0
    f5d0:	cmp	r0, #2
    f5d4:	str	r0, [sp, #4]
    f5d8:	beq	f608 <externalEntityInitProcessor3+0x114>
    f5dc:	b	f5e0 <externalEntityInitProcessor3+0xec>
    f5e0:	ldr	r0, [sp, #4]
    f5e4:	cmp	r0, #3
    f5e8:	bne	f614 <externalEntityInitProcessor3+0x120>
    f5ec:	b	f5f0 <externalEntityInitProcessor3+0xfc>
    f5f0:	ldr	r0, [sp, #20]
    f5f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    f5f8:	str	r0, [r1]
    f5fc:	movw	r0, #0
    f600:	str	r0, [fp, #-4]
    f604:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f608:	movw	r0, #35	; 0x23
    f60c:	str	r0, [fp, #-4]
    f610:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f614:	ldr	r0, [sp, #20]
    f618:	str	r0, [fp, #-12]
    f61c:	b	f690 <externalEntityInitProcessor3+0x19c>
    f620:	ldr	r0, [fp, #-8]
    f624:	add	r0, r0, #500	; 0x1f4
    f628:	ldrsb	r0, [r0]
    f62c:	cmp	r0, #0
    f630:	bne	f64c <externalEntityInitProcessor3+0x158>
    f634:	ldr	r0, [fp, #-12]
    f638:	ldr	r1, [fp, #-20]	; 0xffffffec
    f63c:	str	r0, [r1]
    f640:	movw	r0, #0
    f644:	str	r0, [fp, #-4]
    f648:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f64c:	movw	r0, #5
    f650:	str	r0, [fp, #-4]
    f654:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f658:	ldr	r0, [fp, #-8]
    f65c:	add	r0, r0, #500	; 0x1f4
    f660:	ldrsb	r0, [r0]
    f664:	cmp	r0, #0
    f668:	bne	f684 <externalEntityInitProcessor3+0x190>
    f66c:	ldr	r0, [fp, #-12]
    f670:	ldr	r1, [fp, #-20]	; 0xffffffec
    f674:	str	r0, [r1]
    f678:	movw	r0, #0
    f67c:	str	r0, [fp, #-4]
    f680:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f684:	movw	r0, #6
    f688:	str	r0, [fp, #-4]
    f68c:	b	f6c4 <externalEntityInitProcessor3+0x1d0>
    f690:	ldr	r0, [fp, #-8]
    f694:	movw	r1, #0
    f698:	movt	r1, #0
    f69c:	str	r1, [r0, #288]	; 0x120
    f6a0:	ldr	r0, [fp, #-8]
    f6a4:	movw	r1, #1
    f6a8:	str	r1, [r0, #320]	; 0x140
    f6ac:	ldr	r0, [fp, #-8]
    f6b0:	ldr	r1, [fp, #-12]
    f6b4:	ldr	r2, [fp, #-16]
    f6b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    f6bc:	bl	e418 <externalEntityContentProcessor>
    f6c0:	str	r0, [fp, #-4]
    f6c4:	ldr	r0, [fp, #-4]
    f6c8:	mov	sp, fp
    f6cc:	pop	{fp, pc}

0000f6d0 <entityValueInitProcessor>:
    f6d0:	push	{fp, lr}
    f6d4:	mov	fp, sp
    f6d8:	sub	sp, sp, #48	; 0x30
    f6dc:	str	r0, [fp, #-8]
    f6e0:	str	r1, [fp, #-12]
    f6e4:	str	r2, [fp, #-16]
    f6e8:	str	r3, [fp, #-20]	; 0xffffffec
    f6ec:	ldr	r0, [fp, #-12]
    f6f0:	str	r0, [sp, #20]
    f6f4:	ldr	r0, [sp, #20]
    f6f8:	str	r0, [sp, #16]
    f6fc:	ldr	r0, [sp, #20]
    f700:	ldr	r1, [fp, #-8]
    f704:	str	r0, [r1, #296]	; 0x128
    f708:	ldr	r0, [fp, #-8]
    f70c:	ldr	r0, [r0, #152]	; 0x98
    f710:	ldr	r0, [r0]
    f714:	ldr	r1, [fp, #-8]
    f718:	ldr	r1, [r1, #152]	; 0x98
    f71c:	ldr	r2, [sp, #20]
    f720:	ldr	r3, [fp, #-16]
    f724:	str	r0, [sp, #8]
    f728:	mov	r0, r1
    f72c:	mov	r1, r2
    f730:	mov	r2, r3
    f734:	add	r3, sp, #16
    f738:	ldr	ip, [sp, #8]
    f73c:	blx	ip
    f740:	str	r0, [sp, #24]
    f744:	ldr	r0, [sp, #16]
    f748:	ldr	r1, [fp, #-8]
    f74c:	str	r0, [r1, #300]	; 0x12c
    f750:	ldr	r0, [sp, #24]
    f754:	cmp	r0, #0
    f758:	bgt	f818 <entityValueInitProcessor+0x148>
    f75c:	ldr	r0, [fp, #-8]
    f760:	add	r0, r0, #500	; 0x1f4
    f764:	ldrsb	r0, [r0]
    f768:	cmp	r0, #0
    f76c:	bne	f794 <entityValueInitProcessor+0xc4>
    f770:	ldr	r0, [sp, #24]
    f774:	cmp	r0, #0
    f778:	beq	f794 <entityValueInitProcessor+0xc4>
    f77c:	ldr	r0, [fp, #-12]
    f780:	ldr	r1, [fp, #-20]	; 0xffffffec
    f784:	str	r0, [r1]
    f788:	movw	r0, #0
    f78c:	str	r0, [fp, #-4]
    f790:	b	f940 <entityValueInitProcessor+0x270>
    f794:	ldr	r0, [sp, #24]
    f798:	add	r0, r0, #4
    f79c:	cmp	r0, #4
    f7a0:	str	r0, [sp, #4]
    f7a4:	bhi	f7f4 <entityValueInitProcessor+0x124>
    f7a8:	add	r0, pc, #8
    f7ac:	ldr	r1, [sp, #4]
    f7b0:	ldr	r0, [r0, r1, lsl #2]
    f7b4:	mov	pc, r0
    f7b8:	.word	0x0000f7f0
    f7bc:	.word	0x0000f7f4
    f7c0:	.word	0x0000f7e4
    f7c4:	.word	0x0000f7d8
    f7c8:	.word	0x0000f7cc
    f7cc:	movw	r0, #4
    f7d0:	str	r0, [fp, #-4]
    f7d4:	b	f940 <entityValueInitProcessor+0x270>
    f7d8:	movw	r0, #5
    f7dc:	str	r0, [fp, #-4]
    f7e0:	b	f940 <entityValueInitProcessor+0x270>
    f7e4:	movw	r0, #6
    f7e8:	str	r0, [fp, #-4]
    f7ec:	b	f940 <entityValueInitProcessor+0x270>
    f7f0:	b	f7f4 <entityValueInitProcessor+0x124>
    f7f4:	b	f7f8 <entityValueInitProcessor+0x128>
    f7f8:	ldr	r0, [fp, #-8]
    f7fc:	ldr	r1, [fp, #-8]
    f800:	ldr	r1, [r1, #152]	; 0x98
    f804:	ldr	r2, [fp, #-12]
    f808:	ldr	r3, [fp, #-16]
    f80c:	bl	8cb8 <storeEntityValue>
    f810:	str	r0, [fp, #-4]
    f814:	b	f940 <entityValueInitProcessor+0x270>
    f818:	ldr	r0, [sp, #24]
    f81c:	cmp	r0, #12
    f820:	bne	f8d8 <entityValueInitProcessor+0x208>
    f824:	ldr	r0, [fp, #-8]
    f828:	ldr	r2, [sp, #20]
    f82c:	ldr	r3, [sp, #16]
    f830:	movw	r1, #0
    f834:	bl	7180 <processXmlDecl>
    f838:	str	r0, [sp, #12]
    f83c:	ldr	r0, [sp, #12]
    f840:	cmp	r0, #0
    f844:	beq	f854 <entityValueInitProcessor+0x184>
    f848:	ldr	r0, [sp, #12]
    f84c:	str	r0, [fp, #-4]
    f850:	b	f940 <entityValueInitProcessor+0x270>
    f854:	ldr	r0, [fp, #-8]
    f858:	ldr	r0, [r0, #496]	; 0x1f0
    f85c:	cmp	r0, #2
    f860:	str	r0, [sp]
    f864:	beq	f894 <entityValueInitProcessor+0x1c4>
    f868:	b	f86c <entityValueInitProcessor+0x19c>
    f86c:	ldr	r0, [sp]
    f870:	cmp	r0, #3
    f874:	bne	f8a0 <entityValueInitProcessor+0x1d0>
    f878:	b	f87c <entityValueInitProcessor+0x1ac>
    f87c:	ldr	r0, [sp, #16]
    f880:	ldr	r1, [fp, #-20]	; 0xffffffec
    f884:	str	r0, [r1]
    f888:	movw	r0, #0
    f88c:	str	r0, [fp, #-4]
    f890:	b	f940 <entityValueInitProcessor+0x270>
    f894:	movw	r0, #35	; 0x23
    f898:	str	r0, [fp, #-4]
    f89c:	b	f940 <entityValueInitProcessor+0x270>
    f8a0:	ldr	r0, [sp, #16]
    f8a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    f8a8:	str	r0, [r1]
    f8ac:	ldr	r0, [fp, #-8]
    f8b0:	movw	r1, #0
    f8b4:	movt	r1, #0
    f8b8:	str	r1, [r0, #288]	; 0x120
    f8bc:	ldr	r0, [fp, #-8]
    f8c0:	ldr	r1, [sp, #16]
    f8c4:	ldr	r2, [fp, #-16]
    f8c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    f8cc:	bl	fb28 <entityValueProcessor>
    f8d0:	str	r0, [fp, #-4]
    f8d4:	b	f940 <entityValueInitProcessor+0x270>
    f8d8:	ldr	r0, [sp, #24]
    f8dc:	cmp	r0, #14
    f8e0:	bne	f920 <entityValueInitProcessor+0x250>
    f8e4:	ldr	r0, [sp, #16]
    f8e8:	ldr	r1, [fp, #-16]
    f8ec:	cmp	r0, r1
    f8f0:	bne	f920 <entityValueInitProcessor+0x250>
    f8f4:	ldr	r0, [fp, #-8]
    f8f8:	add	r0, r0, #500	; 0x1f4
    f8fc:	ldrsb	r0, [r0]
    f900:	cmp	r0, #0
    f904:	bne	f920 <entityValueInitProcessor+0x250>
    f908:	ldr	r0, [sp, #16]
    f90c:	ldr	r1, [fp, #-20]	; 0xffffffec
    f910:	str	r0, [r1]
    f914:	movw	r0, #0
    f918:	str	r0, [fp, #-4]
    f91c:	b	f940 <entityValueInitProcessor+0x270>
    f920:	b	f924 <entityValueInitProcessor+0x254>
    f924:	b	f928 <entityValueInitProcessor+0x258>
    f928:	ldr	r0, [sp, #16]
    f92c:	str	r0, [sp, #20]
    f930:	ldr	r0, [sp, #20]
    f934:	ldr	r1, [fp, #-8]
    f938:	str	r0, [r1, #296]	; 0x128
    f93c:	b	f708 <entityValueInitProcessor+0x38>
    f940:	ldr	r0, [fp, #-4]
    f944:	mov	sp, fp
    f948:	pop	{fp, pc}

0000f94c <externalParEntProcessor>:
    f94c:	push	{r4, r5, r6, sl, fp, lr}
    f950:	add	fp, sp, #16
    f954:	sub	sp, sp, #56	; 0x38
    f958:	str	r0, [fp, #-24]	; 0xffffffe8
    f95c:	str	r1, [fp, #-28]	; 0xffffffe4
    f960:	str	r2, [fp, #-32]	; 0xffffffe0
    f964:	str	r3, [sp, #36]	; 0x24
    f968:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f96c:	str	r0, [sp, #32]
    f970:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f974:	ldr	r0, [r0, #152]	; 0x98
    f978:	ldr	r0, [r0]
    f97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    f980:	ldr	r1, [r1, #152]	; 0x98
    f984:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f988:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f98c:	str	r0, [sp, #24]
    f990:	mov	r0, r1
    f994:	mov	r1, r2
    f998:	mov	r2, r3
    f99c:	add	r3, sp, #32
    f9a0:	ldr	ip, [sp, #24]
    f9a4:	blx	ip
    f9a8:	str	r0, [sp, #28]
    f9ac:	ldr	r0, [sp, #28]
    f9b0:	cmp	r0, #0
    f9b4:	bgt	fa58 <externalParEntProcessor+0x10c>
    f9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9bc:	add	r0, r0, #500	; 0x1f4
    f9c0:	ldrsb	r0, [r0]
    f9c4:	cmp	r0, #0
    f9c8:	bne	f9f0 <externalParEntProcessor+0xa4>
    f9cc:	ldr	r0, [sp, #28]
    f9d0:	cmp	r0, #0
    f9d4:	beq	f9f0 <externalParEntProcessor+0xa4>
    f9d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f9dc:	ldr	r1, [sp, #36]	; 0x24
    f9e0:	str	r0, [r1]
    f9e4:	movw	r0, #0
    f9e8:	str	r0, [fp, #-20]	; 0xffffffec
    f9ec:	b	fb1c <externalParEntProcessor+0x1d0>
    f9f0:	ldr	r0, [sp, #28]
    f9f4:	add	r0, r0, #4
    f9f8:	cmp	r0, #4
    f9fc:	str	r0, [sp, #20]
    fa00:	bhi	fa50 <externalParEntProcessor+0x104>
    fa04:	add	r0, pc, #8
    fa08:	ldr	r1, [sp, #20]
    fa0c:	ldr	r0, [r0, r1, lsl #2]
    fa10:	mov	pc, r0
    fa14:	.word	0x0000fa4c
    fa18:	.word	0x0000fa50
    fa1c:	.word	0x0000fa40
    fa20:	.word	0x0000fa34
    fa24:	.word	0x0000fa28
    fa28:	movw	r0, #4
    fa2c:	str	r0, [fp, #-20]	; 0xffffffec
    fa30:	b	fb1c <externalParEntProcessor+0x1d0>
    fa34:	movw	r0, #5
    fa38:	str	r0, [fp, #-20]	; 0xffffffec
    fa3c:	b	fb1c <externalParEntProcessor+0x1d0>
    fa40:	movw	r0, #6
    fa44:	str	r0, [fp, #-20]	; 0xffffffec
    fa48:	b	fb1c <externalParEntProcessor+0x1d0>
    fa4c:	b	fa50 <externalParEntProcessor+0x104>
    fa50:	b	fa54 <externalParEntProcessor+0x108>
    fa54:	b	faac <externalParEntProcessor+0x160>
    fa58:	ldr	r0, [sp, #28]
    fa5c:	cmp	r0, #14
    fa60:	bne	faa8 <externalParEntProcessor+0x15c>
    fa64:	ldr	r0, [sp, #32]
    fa68:	str	r0, [fp, #-28]	; 0xffffffe4
    fa6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fa70:	ldr	r0, [r0, #152]	; 0x98
    fa74:	ldr	r0, [r0]
    fa78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fa7c:	ldr	r1, [r1, #152]	; 0x98
    fa80:	ldr	r2, [fp, #-28]	; 0xffffffe4
    fa84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    fa88:	str	r0, [sp, #16]
    fa8c:	mov	r0, r1
    fa90:	mov	r1, r2
    fa94:	mov	r2, r3
    fa98:	add	r3, sp, #32
    fa9c:	ldr	ip, [sp, #16]
    faa0:	blx	ip
    faa4:	str	r0, [sp, #28]
    faa8:	b	faac <externalParEntProcessor+0x160>
    faac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fab0:	movw	r1, #0
    fab4:	movt	r1, #0
    fab8:	str	r1, [r0, #288]	; 0x120
    fabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fac4:	ldr	r1, [r1, #152]	; 0x98
    fac8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    facc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    fad0:	ldr	ip, [sp, #28]
    fad4:	ldr	lr, [sp, #32]
    fad8:	ldr	r4, [sp, #36]	; 0x24
    fadc:	ldr	r5, [fp, #-24]	; 0xffffffe8
    fae0:	add	r5, r5, #500	; 0x1f4
    fae4:	ldrsb	r5, [r5]
    fae8:	cmp	r5, #0
    faec:	movw	r5, #0
    faf0:	movne	r5, #1
    faf4:	mvn	r6, #0
    faf8:	eor	r5, r5, r6
    fafc:	and	r5, r5, #1
    fb00:	str	ip, [sp]
    fb04:	str	lr, [sp, #4]
    fb08:	str	r4, [sp, #8]
    fb0c:	and	ip, r5, #255	; 0xff
    fb10:	str	ip, [sp, #12]
    fb14:	bl	42dc <doProlog>
    fb18:	str	r0, [fp, #-20]	; 0xffffffec
    fb1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    fb20:	sub	sp, fp, #16
    fb24:	pop	{r4, r5, r6, sl, fp, pc}

0000fb28 <entityValueProcessor>:
    fb28:	push	{fp, lr}
    fb2c:	mov	fp, sp
    fb30:	sub	sp, sp, #48	; 0x30
    fb34:	str	r0, [fp, #-8]
    fb38:	str	r1, [fp, #-12]
    fb3c:	str	r2, [fp, #-16]
    fb40:	str	r3, [fp, #-20]	; 0xffffffec
    fb44:	ldr	r0, [fp, #-12]
    fb48:	str	r0, [sp, #24]
    fb4c:	ldr	r0, [fp, #-12]
    fb50:	str	r0, [sp, #20]
    fb54:	ldr	r0, [fp, #-8]
    fb58:	ldr	r0, [r0, #152]	; 0x98
    fb5c:	str	r0, [sp, #16]
    fb60:	ldr	r0, [sp, #16]
    fb64:	ldr	r0, [r0]
    fb68:	ldr	r1, [sp, #16]
    fb6c:	ldr	r2, [sp, #24]
    fb70:	ldr	r3, [fp, #-16]
    fb74:	str	r0, [sp, #8]
    fb78:	mov	r0, r1
    fb7c:	mov	r1, r2
    fb80:	mov	r2, r3
    fb84:	add	r3, sp, #20
    fb88:	ldr	ip, [sp, #8]
    fb8c:	blx	ip
    fb90:	str	r0, [sp, #12]
    fb94:	ldr	r0, [sp, #12]
    fb98:	cmp	r0, #0
    fb9c:	bgt	fc58 <entityValueProcessor+0x130>
    fba0:	ldr	r0, [fp, #-8]
    fba4:	add	r0, r0, #500	; 0x1f4
    fba8:	ldrsb	r0, [r0]
    fbac:	cmp	r0, #0
    fbb0:	bne	fbd8 <entityValueProcessor+0xb0>
    fbb4:	ldr	r0, [sp, #12]
    fbb8:	cmp	r0, #0
    fbbc:	beq	fbd8 <entityValueProcessor+0xb0>
    fbc0:	ldr	r0, [fp, #-12]
    fbc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    fbc8:	str	r0, [r1]
    fbcc:	movw	r0, #0
    fbd0:	str	r0, [fp, #-4]
    fbd4:	b	fc64 <entityValueProcessor+0x13c>
    fbd8:	ldr	r0, [sp, #12]
    fbdc:	add	r0, r0, #4
    fbe0:	cmp	r0, #4
    fbe4:	str	r0, [sp, #4]
    fbe8:	bhi	fc38 <entityValueProcessor+0x110>
    fbec:	add	r0, pc, #8
    fbf0:	ldr	r1, [sp, #4]
    fbf4:	ldr	r0, [r0, r1, lsl #2]
    fbf8:	mov	pc, r0
    fbfc:	.word	0x0000fc34
    fc00:	.word	0x0000fc38
    fc04:	.word	0x0000fc28
    fc08:	.word	0x0000fc1c
    fc0c:	.word	0x0000fc10
    fc10:	movw	r0, #4
    fc14:	str	r0, [fp, #-4]
    fc18:	b	fc64 <entityValueProcessor+0x13c>
    fc1c:	movw	r0, #5
    fc20:	str	r0, [fp, #-4]
    fc24:	b	fc64 <entityValueProcessor+0x13c>
    fc28:	movw	r0, #6
    fc2c:	str	r0, [fp, #-4]
    fc30:	b	fc64 <entityValueProcessor+0x13c>
    fc34:	b	fc38 <entityValueProcessor+0x110>
    fc38:	b	fc3c <entityValueProcessor+0x114>
    fc3c:	ldr	r0, [fp, #-8]
    fc40:	ldr	r1, [sp, #16]
    fc44:	ldr	r2, [fp, #-12]
    fc48:	ldr	r3, [fp, #-16]
    fc4c:	bl	8cb8 <storeEntityValue>
    fc50:	str	r0, [fp, #-4]
    fc54:	b	fc64 <entityValueProcessor+0x13c>
    fc58:	ldr	r0, [sp, #20]
    fc5c:	str	r0, [sp, #24]
    fc60:	b	fb60 <entityValueProcessor+0x38>
    fc64:	ldr	r0, [fp, #-4]
    fc68:	mov	sp, fp
    fc6c:	pop	{fp, pc}

0000fc70 <hashTableClear>:
    fc70:	push	{fp, lr}
    fc74:	mov	fp, sp
    fc78:	sub	sp, sp, #16
    fc7c:	str	r0, [fp, #-4]
    fc80:	movw	r0, #0
    fc84:	str	r0, [sp, #8]
    fc88:	ldr	r0, [sp, #8]
    fc8c:	ldr	r1, [fp, #-4]
    fc90:	ldr	r1, [r1, #8]
    fc94:	cmp	r0, r1
    fc98:	bcs	fcec <hashTableClear+0x7c>
    fc9c:	ldr	r0, [fp, #-4]
    fca0:	ldr	r1, [r0]
    fca4:	ldr	r0, [r0, #16]
    fca8:	ldr	r0, [r0, #8]
    fcac:	ldr	r2, [sp, #8]
    fcb0:	ldr	r1, [r1, r2, lsl #2]
    fcb4:	str	r0, [sp, #4]
    fcb8:	mov	r0, r1
    fcbc:	ldr	r1, [sp, #4]
    fcc0:	blx	r1
    fcc4:	ldr	r0, [fp, #-4]
    fcc8:	ldr	r0, [r0]
    fccc:	ldr	r1, [sp, #8]
    fcd0:	add	r0, r0, r1, lsl #2
    fcd4:	movw	r1, #0
    fcd8:	str	r1, [r0]
    fcdc:	ldr	r0, [sp, #8]
    fce0:	add	r0, r0, #1
    fce4:	str	r0, [sp, #8]
    fce8:	b	fc88 <hashTableClear+0x18>
    fcec:	ldr	r0, [fp, #-4]
    fcf0:	movw	r1, #0
    fcf4:	str	r1, [r0, #12]
    fcf8:	mov	sp, fp
    fcfc:	pop	{fp, pc}

0000fd00 <hashTableDestroy>:
    fd00:	push	{fp, lr}
    fd04:	mov	fp, sp
    fd08:	sub	sp, sp, #16
    fd0c:	str	r0, [fp, #-4]
    fd10:	movw	r0, #0
    fd14:	str	r0, [sp, #8]
    fd18:	ldr	r0, [sp, #8]
    fd1c:	ldr	r1, [fp, #-4]
    fd20:	ldr	r1, [r1, #8]
    fd24:	cmp	r0, r1
    fd28:	bcs	fd68 <hashTableDestroy+0x68>
    fd2c:	ldr	r0, [fp, #-4]
    fd30:	ldr	r1, [r0]
    fd34:	ldr	r0, [r0, #16]
    fd38:	ldr	r0, [r0, #8]
    fd3c:	ldr	r2, [sp, #8]
    fd40:	add	r1, r1, r2, lsl #2
    fd44:	ldr	r1, [r1]
    fd48:	str	r0, [sp, #4]
    fd4c:	mov	r0, r1
    fd50:	ldr	r1, [sp, #4]
    fd54:	blx	r1
    fd58:	ldr	r0, [sp, #8]
    fd5c:	add	r0, r0, #1
    fd60:	str	r0, [sp, #8]
    fd64:	b	fd18 <hashTableDestroy+0x18>
    fd68:	ldr	r0, [fp, #-4]
    fd6c:	ldr	r0, [r0, #16]
    fd70:	ldr	r0, [r0, #8]
    fd74:	ldr	r1, [fp, #-4]
    fd78:	ldr	r1, [r1]
    fd7c:	str	r0, [sp]
    fd80:	mov	r0, r1
    fd84:	ldr	r1, [sp]
    fd88:	blx	r1
    fd8c:	mov	sp, fp
    fd90:	pop	{fp, pc}

0000fd94 <copyEntityTable>:
    fd94:	push	{fp, lr}
    fd98:	mov	fp, sp
    fd9c:	sub	sp, sp, #64	; 0x40
    fda0:	str	r0, [fp, #-8]
    fda4:	str	r1, [fp, #-12]
    fda8:	str	r2, [fp, #-16]
    fdac:	str	r3, [fp, #-20]	; 0xffffffec
    fdb0:	movw	r0, #0
    fdb4:	str	r0, [sp, #32]
    fdb8:	str	r0, [sp, #28]
    fdbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    fdc0:	sub	r0, fp, #28
    fdc4:	bl	dbc0 <hashTableIterInit>
    fdc8:	sub	r0, fp, #28
    fdcc:	bl	dc00 <hashTableIterNext>
    fdd0:	str	r0, [sp, #16]
    fdd4:	ldr	r0, [sp, #16]
    fdd8:	movw	lr, #0
    fddc:	cmp	r0, lr
    fde0:	bne	fde8 <copyEntityTable+0x54>
    fde4:	b	1003c <copyEntityTable+0x2a8>
    fde8:	ldr	r0, [fp, #-16]
    fdec:	ldr	r1, [sp, #16]
    fdf0:	ldr	r1, [r1]
    fdf4:	bl	c54 <poolCopyString>
    fdf8:	str	r0, [sp, #20]
    fdfc:	ldr	r0, [sp, #20]
    fe00:	movw	r1, #0
    fe04:	cmp	r0, r1
    fe08:	bne	fe18 <copyEntityTable+0x84>
    fe0c:	movw	r0, #0
    fe10:	str	r0, [fp, #-4]
    fe14:	b	10044 <copyEntityTable+0x2b0>
    fe18:	ldr	r0, [fp, #-8]
    fe1c:	ldr	r1, [fp, #-12]
    fe20:	ldr	r2, [sp, #20]
    fe24:	movw	r3, #36	; 0x24
    fe28:	bl	7694 <lookup>
    fe2c:	str	r0, [sp, #24]
    fe30:	ldr	r0, [sp, #24]
    fe34:	movw	r1, #0
    fe38:	cmp	r0, r1
    fe3c:	bne	fe4c <copyEntityTable+0xb8>
    fe40:	movw	r0, #0
    fe44:	str	r0, [fp, #-4]
    fe48:	b	10044 <copyEntityTable+0x2b0>
    fe4c:	ldr	r0, [sp, #16]
    fe50:	ldr	r0, [r0, #16]
    fe54:	movw	r1, #0
    fe58:	cmp	r0, r1
    fe5c:	beq	ff74 <copyEntityTable+0x1e0>
    fe60:	ldr	r0, [fp, #-16]
    fe64:	ldr	r1, [sp, #16]
    fe68:	ldr	r1, [r1, #16]
    fe6c:	bl	c54 <poolCopyString>
    fe70:	str	r0, [sp, #12]
    fe74:	ldr	r0, [sp, #12]
    fe78:	movw	r1, #0
    fe7c:	cmp	r0, r1
    fe80:	bne	fe90 <copyEntityTable+0xfc>
    fe84:	movw	r0, #0
    fe88:	str	r0, [fp, #-4]
    fe8c:	b	10044 <copyEntityTable+0x2b0>
    fe90:	ldr	r0, [sp, #12]
    fe94:	ldr	r1, [sp, #24]
    fe98:	str	r0, [r1, #16]
    fe9c:	ldr	r0, [sp, #16]
    fea0:	ldr	r0, [r0, #20]
    fea4:	movw	r1, #0
    fea8:	cmp	r0, r1
    feac:	beq	ff20 <copyEntityTable+0x18c>
    feb0:	ldr	r0, [sp, #16]
    feb4:	ldr	r0, [r0, #20]
    feb8:	ldr	r1, [sp, #32]
    febc:	cmp	r0, r1
    fec0:	bne	fed4 <copyEntityTable+0x140>
    fec4:	ldr	r0, [sp, #28]
    fec8:	ldr	r1, [sp, #24]
    fecc:	str	r0, [r1, #20]
    fed0:	b	ff1c <copyEntityTable+0x188>
    fed4:	ldr	r0, [sp, #16]
    fed8:	ldr	r0, [r0, #20]
    fedc:	str	r0, [sp, #32]
    fee0:	ldr	r0, [fp, #-16]
    fee4:	ldr	r1, [sp, #32]
    fee8:	bl	c54 <poolCopyString>
    feec:	str	r0, [sp, #12]
    fef0:	ldr	r0, [sp, #12]
    fef4:	movw	r1, #0
    fef8:	cmp	r0, r1
    fefc:	bne	ff0c <copyEntityTable+0x178>
    ff00:	movw	r0, #0
    ff04:	str	r0, [fp, #-4]
    ff08:	b	10044 <copyEntityTable+0x2b0>
    ff0c:	ldr	r0, [sp, #12]
    ff10:	ldr	r1, [sp, #24]
    ff14:	str	r0, [r1, #20]
    ff18:	str	r0, [sp, #28]
    ff1c:	b	ff20 <copyEntityTable+0x18c>
    ff20:	ldr	r0, [sp, #16]
    ff24:	ldr	r0, [r0, #24]
    ff28:	movw	r1, #0
    ff2c:	cmp	r0, r1
    ff30:	beq	ff70 <copyEntityTable+0x1dc>
    ff34:	ldr	r0, [fp, #-16]
    ff38:	ldr	r1, [sp, #16]
    ff3c:	ldr	r1, [r1, #24]
    ff40:	bl	c54 <poolCopyString>
    ff44:	str	r0, [sp, #12]
    ff48:	ldr	r0, [sp, #12]
    ff4c:	movw	r1, #0
    ff50:	cmp	r0, r1
    ff54:	bne	ff64 <copyEntityTable+0x1d0>
    ff58:	movw	r0, #0
    ff5c:	str	r0, [fp, #-4]
    ff60:	b	10044 <copyEntityTable+0x2b0>
    ff64:	ldr	r0, [sp, #12]
    ff68:	ldr	r1, [sp, #24]
    ff6c:	str	r0, [r1, #24]
    ff70:	b	ffc8 <copyEntityTable+0x234>
    ff74:	ldr	r0, [fp, #-16]
    ff78:	ldr	r1, [sp, #16]
    ff7c:	ldr	r1, [r1, #4]
    ff80:	ldr	r2, [sp, #16]
    ff84:	ldr	r2, [r2, #8]
    ff88:	bl	10050 <poolCopyStringN>
    ff8c:	str	r0, [sp, #8]
    ff90:	ldr	r0, [sp, #8]
    ff94:	movw	r1, #0
    ff98:	cmp	r0, r1
    ff9c:	bne	ffac <copyEntityTable+0x218>
    ffa0:	movw	r0, #0
    ffa4:	str	r0, [fp, #-4]
    ffa8:	b	10044 <copyEntityTable+0x2b0>
    ffac:	ldr	r0, [sp, #8]
    ffb0:	ldr	r1, [sp, #24]
    ffb4:	str	r0, [r1, #4]
    ffb8:	ldr	r0, [sp, #16]
    ffbc:	ldr	r0, [r0, #8]
    ffc0:	ldr	r1, [sp, #24]
    ffc4:	str	r0, [r1, #8]
    ffc8:	ldr	r0, [sp, #16]
    ffcc:	ldr	r0, [r0, #28]
    ffd0:	movw	r1, #0
    ffd4:	cmp	r0, r1
    ffd8:	beq	10018 <copyEntityTable+0x284>
    ffdc:	ldr	r0, [fp, #-16]
    ffe0:	ldr	r1, [sp, #16]
    ffe4:	ldr	r1, [r1, #28]
    ffe8:	bl	c54 <poolCopyString>
    ffec:	str	r0, [sp, #4]
    fff0:	ldr	r0, [sp, #4]
    fff4:	movw	r1, #0
    fff8:	cmp	r0, r1
    fffc:	bne	1000c <copyEntityTable+0x278>
   10000:	movw	r0, #0
   10004:	str	r0, [fp, #-4]
   10008:	b	10044 <copyEntityTable+0x2b0>
   1000c:	ldr	r0, [sp, #4]
   10010:	ldr	r1, [sp, #24]
   10014:	str	r0, [r1, #28]
   10018:	ldr	r0, [sp, #16]
   1001c:	ldrb	r0, [r0, #33]	; 0x21
   10020:	ldr	r1, [sp, #24]
   10024:	strb	r0, [r1, #33]	; 0x21
   10028:	ldr	r0, [sp, #16]
   1002c:	ldrb	r0, [r0, #34]	; 0x22
   10030:	ldr	r1, [sp, #24]
   10034:	strb	r0, [r1, #34]	; 0x22
   10038:	b	fdc8 <copyEntityTable+0x34>
   1003c:	movw	r0, #1
   10040:	str	r0, [fp, #-4]
   10044:	ldr	r0, [fp, #-4]
   10048:	mov	sp, fp
   1004c:	pop	{fp, pc}

00010050 <poolCopyStringN>:
   10050:	push	{fp, lr}
   10054:	mov	fp, sp
   10058:	sub	sp, sp, #16
   1005c:	str	r0, [sp, #8]
   10060:	str	r1, [sp, #4]
   10064:	str	r2, [sp]
   10068:	ldr	r0, [sp, #8]
   1006c:	ldr	r0, [r0, #12]
   10070:	movw	r1, #0
   10074:	cmp	r0, r1
   10078:	bne	1009c <poolCopyStringN+0x4c>
   1007c:	ldr	r0, [sp, #8]
   10080:	bl	8764 <poolGrow>
   10084:	sxtb	r0, r0
   10088:	cmp	r0, #0
   1008c:	bne	1009c <poolCopyStringN+0x4c>
   10090:	movw	r0, #0
   10094:	str	r0, [fp, #-4]
   10098:	b	10150 <poolCopyStringN+0x100>
   1009c:	b	100a0 <poolCopyStringN+0x50>
   100a0:	ldr	r0, [sp]
   100a4:	cmp	r0, #0
   100a8:	ble	1012c <poolCopyStringN+0xdc>
   100ac:	ldr	r0, [sp, #8]
   100b0:	ldr	r0, [r0, #12]
   100b4:	ldr	r1, [sp, #8]
   100b8:	ldr	r1, [r1, #8]
   100bc:	cmp	r0, r1
   100c0:	bne	100dc <poolCopyStringN+0x8c>
   100c4:	ldr	r0, [sp, #8]
   100c8:	bl	8764 <poolGrow>
   100cc:	sxtb	r0, r0
   100d0:	cmp	r0, #0
   100d4:	bne	100dc <poolCopyStringN+0x8c>
   100d8:	b	100fc <poolCopyStringN+0xac>
   100dc:	ldr	r0, [sp, #4]
   100e0:	ldrb	r0, [r0]
   100e4:	ldr	r1, [sp, #8]
   100e8:	ldr	r2, [r1, #12]
   100ec:	add	r3, r2, #1
   100f0:	str	r3, [r1, #12]
   100f4:	strb	r0, [r2]
   100f8:	b	10108 <poolCopyStringN+0xb8>
   100fc:	movw	r0, #0
   10100:	str	r0, [fp, #-4]
   10104:	b	10150 <poolCopyStringN+0x100>
   10108:	b	1010c <poolCopyStringN+0xbc>
   1010c:	ldr	r0, [sp]
   10110:	mvn	r1, #0
   10114:	add	r0, r0, r1
   10118:	str	r0, [sp]
   1011c:	ldr	r0, [sp, #4]
   10120:	add	r0, r0, #1
   10124:	str	r0, [sp, #4]
   10128:	b	100a0 <poolCopyStringN+0x50>
   1012c:	ldr	r0, [sp, #8]
   10130:	ldr	r0, [r0, #16]
   10134:	str	r0, [sp, #4]
   10138:	ldr	r0, [sp, #8]
   1013c:	ldr	r0, [r0, #12]
   10140:	ldr	r1, [sp, #8]
   10144:	str	r0, [r1, #16]
   10148:	ldr	r0, [sp, #4]
   1014c:	str	r0, [fp, #-4]
   10150:	ldr	r0, [fp, #-4]
   10154:	mov	sp, fp
   10158:	pop	{fp, pc}
