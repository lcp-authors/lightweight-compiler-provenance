
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010ab4 <.init>:
   10ab4:	push	{r3, lr}
   10ab8:	bl	10bd0 <_start@@Base+0x3c>
   10abc:	pop	{r3, pc}

Disassembly of section .plt:

00010ac0 <calloc@plt-0x14>:
   10ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac4:	ldr	lr, [pc, #4]	; 10ad0 <calloc@plt-0x4>
   10ac8:	add	lr, pc, lr
   10acc:	ldr	pc, [lr, #8]!
   10ad0:	andeq	r2, r1, r0, lsr r5

00010ad4 <calloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1328]!	; 0x530

00010ae0 <strcmp@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1320]!	; 0x528

00010aec <printf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1312]!	; 0x520

00010af8 <__isoc99_fscanf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1304]!	; 0x518

00010b04 <fopen@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1296]!	; 0x510

00010b10 <fflush@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1288]!	; 0x508

00010b1c <free@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1280]!	; 0x500

00010b28 <fgets@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b34 <strdup@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b40 <malloc@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b4c <__libc_start_main@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b58 <__gmon_start__@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b64 <feof@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b70 <strlen@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b7c <fclose@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #73728	; 0x12000
   10b84:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b88 <abort@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #73728	; 0x12000
   10b90:	ldr	pc, [ip, #1208]!	; 0x4b8

Disassembly of section .text:

00010b94 <_start@@Base>:
   10b94:	mov	fp, #0
   10b98:	mov	lr, #0
   10b9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba0:	mov	r2, sp
   10ba4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bac:	ldr	ip, [pc, #16]	; 10bc4 <_start@@Base+0x30>
   10bb0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb4:	ldr	r0, [pc, #12]	; 10bc8 <_start@@Base+0x34>
   10bb8:	ldr	r3, [pc, #12]	; 10bcc <_start@@Base+0x38>
   10bbc:	bl	10b4c <__libc_start_main@plt>
   10bc0:	bl	10b88 <abort@plt>
   10bc4:	andeq	r1, r1, r4, lsl ip
   10bc8:	ldrdeq	r1, [r1], -r8
   10bcc:			; <UNDEFINED> instruction: 0x00011bb4
   10bd0:	ldr	r3, [pc, #20]	; 10bec <_start@@Base+0x58>
   10bd4:	ldr	r2, [pc, #20]	; 10bf0 <_start@@Base+0x5c>
   10bd8:	add	r3, pc, r3
   10bdc:	ldr	r2, [r3, r2]
   10be0:	cmp	r2, #0
   10be4:	bxeq	lr
   10be8:	b	10b58 <__gmon_start__@plt>
   10bec:	andeq	r2, r1, r0, lsr #8
   10bf0:	andeq	r0, r0, ip, asr #32
   10bf4:	ldr	r0, [pc, #24]	; 10c14 <_start@@Base+0x80>
   10bf8:	ldr	r3, [pc, #24]	; 10c18 <_start@@Base+0x84>
   10bfc:	cmp	r3, r0
   10c00:	bxeq	lr
   10c04:	ldr	r3, [pc, #16]	; 10c1c <_start@@Base+0x88>
   10c08:	cmp	r3, #0
   10c0c:	bxeq	lr
   10c10:	bx	r3
   10c14:	andeq	r3, r2, r8, asr r0
   10c18:	andeq	r3, r2, r8, asr r0
   10c1c:	andeq	r0, r0, r0
   10c20:	ldr	r0, [pc, #36]	; 10c4c <_start@@Base+0xb8>
   10c24:	ldr	r1, [pc, #36]	; 10c50 <_start@@Base+0xbc>
   10c28:	sub	r1, r1, r0
   10c2c:	asr	r1, r1, #2
   10c30:	add	r1, r1, r1, lsr #31
   10c34:	asrs	r1, r1, #1
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <_start@@Base+0xc0>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r3, r2, r8, asr r0
   10c50:	andeq	r3, r2, r8, asr r0
   10c54:	andeq	r0, r0, r0
   10c58:	push	{r4, lr}
   10c5c:	ldr	r4, [pc, #24]	; 10c7c <_start@@Base+0xe8>
   10c60:	ldrb	r3, [r4]
   10c64:	cmp	r3, #0
   10c68:	popne	{r4, pc}
   10c6c:	bl	10bf4 <_start@@Base+0x60>
   10c70:	mov	r3, #1
   10c74:	strb	r3, [r4]
   10c78:	pop	{r4, pc}
   10c7c:	andeq	r3, r2, ip, asr r0
   10c80:	b	10c20 <_start@@Base+0x8c>

00010c84 <fp_insere@@Base>:
   10c84:	push	{fp, lr}
   10c88:	mov	fp, sp
   10c8c:	sub	sp, sp, #32
   10c90:	str	r0, [fp, #-8]
   10c94:	str	r1, [fp, #-12]
   10c98:	str	r2, [sp, #16]
   10c9c:	ldr	r0, [fp, #-8]
   10ca0:	movw	r1, #0
   10ca4:	cmp	r0, r1
   10ca8:	bne	10cb8 <fp_insere@@Base+0x34>
   10cac:	mvn	r0, #0
   10cb0:	str	r0, [fp, #-4]
   10cb4:	b	10dc0 <fp_insere@@Base+0x13c>
   10cb8:	ldr	r0, [fp, #-8]
   10cbc:	ldr	r0, [r0]
   10cc0:	ldr	r1, [fp, #-8]
   10cc4:	ldr	r1, [r1, #4]
   10cc8:	cmp	r0, r1
   10ccc:	bne	10cdc <fp_insere@@Base+0x58>
   10cd0:	movw	r0, #0
   10cd4:	str	r0, [fp, #-4]
   10cd8:	b	10dc0 <fp_insere@@Base+0x13c>
   10cdc:	ldr	r0, [sp, #16]
   10ce0:	ldr	r1, [fp, #-12]
   10ce4:	bl	1183c <elemento_cria@@Base>
   10ce8:	str	r0, [sp, #12]
   10cec:	movw	r0, #0
   10cf0:	str	r0, [sp, #8]
   10cf4:	ldr	r0, [sp, #8]
   10cf8:	ldr	r1, [fp, #-8]
   10cfc:	ldr	r1, [r1]
   10d00:	cmp	r0, r1
   10d04:	bge	10d44 <fp_insere@@Base+0xc0>
   10d08:	ldr	r0, [fp, #-8]
   10d0c:	ldr	r0, [r0, #8]
   10d10:	ldr	r1, [sp, #8]
   10d14:	add	r0, r0, r1, lsl #2
   10d18:	ldr	r0, [r0]
   10d1c:	ldr	r1, [sp, #12]
   10d20:	bl	118a8 <maior_que@@Base>
   10d24:	cmp	r0, #0
   10d28:	bne	10d30 <fp_insere@@Base+0xac>
   10d2c:	b	10d44 <fp_insere@@Base+0xc0>
   10d30:	b	10d34 <fp_insere@@Base+0xb0>
   10d34:	ldr	r0, [sp, #8]
   10d38:	add	r0, r0, #1
   10d3c:	str	r0, [sp, #8]
   10d40:	b	10cf4 <fp_insere@@Base+0x70>
   10d44:	ldr	r0, [fp, #-8]
   10d48:	ldr	r0, [r0]
   10d4c:	str	r0, [sp, #4]
   10d50:	ldr	r0, [sp, #4]
   10d54:	ldr	r1, [sp, #8]
   10d58:	cmp	r0, r1
   10d5c:	blt	10d90 <fp_insere@@Base+0x10c>
   10d60:	ldr	r0, [fp, #-8]
   10d64:	ldr	r0, [r0, #8]
   10d68:	ldr	r1, [sp, #4]
   10d6c:	ldr	r2, [r0, r1, lsl #2]
   10d70:	add	r1, r1, #1
   10d74:	add	r0, r0, r1, lsl #2
   10d78:	str	r2, [r0]
   10d7c:	ldr	r0, [sp, #4]
   10d80:	mvn	r1, #0
   10d84:	add	r0, r0, r1
   10d88:	str	r0, [sp, #4]
   10d8c:	b	10d50 <fp_insere@@Base+0xcc>
   10d90:	ldr	r0, [sp, #12]
   10d94:	ldr	r1, [fp, #-8]
   10d98:	ldr	r1, [r1, #8]
   10d9c:	ldr	r2, [sp, #8]
   10da0:	add	r1, r1, r2, lsl #2
   10da4:	str	r0, [r1]
   10da8:	ldr	r0, [fp, #-8]
   10dac:	ldr	r1, [r0]
   10db0:	add	r1, r1, #1
   10db4:	str	r1, [r0]
   10db8:	movw	r0, #1
   10dbc:	str	r0, [fp, #-4]
   10dc0:	ldr	r0, [fp, #-4]
   10dc4:	mov	sp, fp
   10dc8:	pop	{fp, pc}

00010dcc <fp_remove@@Base>:
   10dcc:	sub	sp, sp, #16
   10dd0:	str	r0, [sp, #8]
   10dd4:	ldr	r0, [sp, #8]
   10dd8:	movw	r1, #0
   10ddc:	cmp	r0, r1
   10de0:	beq	10df4 <fp_remove@@Base+0x28>
   10de4:	ldr	r0, [sp, #8]
   10de8:	ldr	r0, [r0]
   10dec:	cmp	r0, #0
   10df0:	bne	10e00 <fp_remove@@Base+0x34>
   10df4:	movw	r0, #0
   10df8:	str	r0, [sp, #12]
   10dfc:	b	10e74 <fp_remove@@Base+0xa8>
   10e00:	ldr	r0, [sp, #8]
   10e04:	ldr	r0, [r0, #8]
   10e08:	ldr	r0, [r0]
   10e0c:	str	r0, [sp, #4]
   10e10:	movw	r0, #0
   10e14:	str	r0, [sp]
   10e18:	ldr	r0, [sp]
   10e1c:	ldr	r1, [sp, #8]
   10e20:	ldr	r1, [r1]
   10e24:	cmp	r0, r1
   10e28:	bge	10e54 <fp_remove@@Base+0x88>
   10e2c:	ldr	r0, [sp, #8]
   10e30:	ldr	r0, [r0, #8]
   10e34:	ldr	r1, [sp]
   10e38:	add	r0, r0, r1, lsl #2
   10e3c:	ldr	r1, [r0, #4]
   10e40:	str	r1, [r0]
   10e44:	ldr	r0, [sp]
   10e48:	add	r0, r0, #1
   10e4c:	str	r0, [sp]
   10e50:	b	10e18 <fp_remove@@Base+0x4c>
   10e54:	ldr	r0, [sp, #8]
   10e58:	ldr	r1, [r0]
   10e5c:	mvn	r2, #0
   10e60:	add	r1, r1, r2
   10e64:	str	r1, [r0]
   10e68:	ldr	r0, [sp, #4]
   10e6c:	ldr	r0, [r0, #4]
   10e70:	str	r0, [sp, #12]
   10e74:	ldr	r0, [sp, #12]
   10e78:	add	sp, sp, #16
   10e7c:	bx	lr

00010e80 <fp_carrega@@Base>:
   10e80:	push	{r4, r5, fp, lr}
   10e84:	add	fp, sp, #8
   10e88:	sub	sp, sp, #296	; 0x128
   10e8c:	str	r0, [fp, #-12]
   10e90:	str	r1, [fp, #-16]
   10e94:	ldr	r0, [fp, #-16]
   10e98:	movw	r1, #7204	; 0x1c24
   10e9c:	movt	r1, #1
   10ea0:	bl	10b04 <fopen@plt>
   10ea4:	str	r0, [sp, #24]
   10ea8:	ldr	r0, [sp, #24]
   10eac:	movw	r1, #0
   10eb0:	cmp	r0, r1
   10eb4:	bne	10ecc <fp_carrega@@Base+0x4c>
   10eb8:	movw	r0, #7206	; 0x1c26
   10ebc:	movt	r0, #1
   10ec0:	bl	10aec <printf@plt>
   10ec4:	str	r0, [sp, #20]
   10ec8:	b	10f68 <fp_carrega@@Base+0xe8>
   10ecc:	b	10ed0 <fp_carrega@@Base+0x50>
   10ed0:	ldr	r0, [sp, #24]
   10ed4:	bl	10b64 <feof@plt>
   10ed8:	cmp	r0, #0
   10edc:	movw	r0, #0
   10ee0:	movne	r0, #1
   10ee4:	mvn	lr, #0
   10ee8:	eor	r0, r0, lr
   10eec:	tst	r0, #1
   10ef0:	beq	10f5c <fp_carrega@@Base+0xdc>
   10ef4:	ldr	r0, [sp, #24]
   10ef8:	movw	r1, #7240	; 0x1c48
   10efc:	movt	r1, #1
   10f00:	add	r2, sp, #28
   10f04:	bl	10af8 <__isoc99_fscanf@plt>
   10f08:	add	r1, sp, #32
   10f0c:	ldr	r2, [sp, #24]
   10f10:	str	r0, [sp, #16]
   10f14:	mov	r0, r1
   10f18:	movw	r1, #256	; 0x100
   10f1c:	bl	10b28 <fgets@plt>
   10f20:	add	r1, sp, #32
   10f24:	str	r0, [sp, #12]
   10f28:	mov	r0, r1
   10f2c:	str	r1, [sp, #8]
   10f30:	bl	10b70 <strlen@plt>
   10f34:	sub	r0, r0, #1
   10f38:	ldr	r1, [sp, #8]
   10f3c:	add	r0, r1, r0
   10f40:	movw	r2, #0
   10f44:	strb	r2, [r0]
   10f48:	ldr	r0, [fp, #-12]
   10f4c:	ldr	r2, [sp, #28]
   10f50:	bl	10c84 <fp_insere@@Base>
   10f54:	str	r0, [sp, #4]
   10f58:	b	10ed0 <fp_carrega@@Base+0x50>
   10f5c:	ldr	r0, [sp, #24]
   10f60:	bl	10b7c <fclose@plt>
   10f64:	str	r0, [sp]
   10f68:	sub	sp, fp, #8
   10f6c:	pop	{r4, r5, fp, pc}

00010f70 <heap_insere@@Base>:
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #40	; 0x28
   10f7c:	str	r0, [fp, #-8]
   10f80:	str	r1, [fp, #-12]
   10f84:	str	r2, [fp, #-16]
   10f88:	str	r3, [sp, #20]
   10f8c:	ldr	r0, [fp, #-8]
   10f90:	ldr	r0, [r0]
   10f94:	ldr	r1, [fp, #-8]
   10f98:	ldr	r1, [r1, #4]
   10f9c:	cmp	r0, r1
   10fa0:	bne	10fb0 <heap_insere@@Base+0x40>
   10fa4:	movw	r0, #0
   10fa8:	str	r0, [fp, #-4]
   10fac:	b	110b8 <heap_insere@@Base+0x148>
   10fb0:	ldr	r0, [sp, #20]
   10fb4:	ldr	r1, [fp, #-16]
   10fb8:	bl	1183c <elemento_cria@@Base>
   10fbc:	str	r0, [sp, #8]
   10fc0:	movw	r0, #0
   10fc4:	str	r0, [sp, #16]
   10fc8:	ldr	r0, [sp, #16]
   10fcc:	ldr	r1, [fp, #-8]
   10fd0:	ldr	r1, [r1]
   10fd4:	cmp	r0, r1
   10fd8:	movw	r0, #0
   10fdc:	str	r0, [sp, #4]
   10fe0:	bge	11024 <heap_insere@@Base+0xb4>
   10fe4:	ldr	r0, [fp, #-12]
   10fe8:	ldr	r1, [fp, #-8]
   10fec:	ldr	r1, [r1, #8]
   10ff0:	ldr	r2, [sp, #16]
   10ff4:	add	r1, r1, r2, lsl #2
   10ff8:	ldr	r1, [r1]
   10ffc:	ldr	r2, [sp, #8]
   11000:	str	r0, [sp]
   11004:	mov	r0, r1
   11008:	mov	r1, r2
   1100c:	ldr	r2, [sp]
   11010:	blx	r2
   11014:	cmp	r0, #1
   11018:	movw	r0, #0
   1101c:	movne	r0, #1
   11020:	str	r0, [sp, #4]
   11024:	ldr	r0, [sp, #4]
   11028:	tst	r0, #1
   1102c:	beq	11044 <heap_insere@@Base+0xd4>
   11030:	b	11034 <heap_insere@@Base+0xc4>
   11034:	ldr	r0, [sp, #16]
   11038:	add	r0, r0, #1
   1103c:	str	r0, [sp, #16]
   11040:	b	10fc8 <heap_insere@@Base+0x58>
   11044:	ldr	r0, [sp, #16]
   11048:	str	r0, [sp, #12]
   1104c:	ldr	r0, [sp, #12]
   11050:	cmp	r0, #0
   11054:	ble	11088 <heap_insere@@Base+0x118>
   11058:	ldr	r0, [fp, #-8]
   1105c:	ldr	r0, [r0, #8]
   11060:	ldr	r1, [sp, #12]
   11064:	ldr	r2, [r0, r1, lsl #2]
   11068:	add	r1, r1, #1
   1106c:	add	r0, r0, r1, lsl #2
   11070:	str	r2, [r0]
   11074:	ldr	r0, [sp, #12]
   11078:	mvn	r1, #0
   1107c:	add	r0, r0, r1
   11080:	str	r0, [sp, #12]
   11084:	b	1104c <heap_insere@@Base+0xdc>
   11088:	ldr	r0, [sp, #8]
   1108c:	ldr	r1, [fp, #-8]
   11090:	ldr	r1, [r1, #8]
   11094:	ldr	r2, [sp, #16]
   11098:	add	r1, r1, r2, lsl #2
   1109c:	str	r0, [r1]
   110a0:	ldr	r0, [fp, #-8]
   110a4:	ldr	r1, [r0]
   110a8:	add	r1, r1, #1
   110ac:	str	r1, [r0]
   110b0:	ldr	r0, [sp, #16]
   110b4:	str	r0, [fp, #-4]
   110b8:	ldr	r0, [fp, #-4]
   110bc:	mov	sp, fp
   110c0:	pop	{fp, pc}

000110c4 <heap_remove@@Base>:
   110c4:	sub	sp, sp, #8
   110c8:	str	r0, [sp, #4]
   110cc:	str	r1, [sp]
   110d0:	movw	r0, #0
   110d4:	add	sp, sp, #8
   110d8:	bx	lr

000110dc <heap_carrega@@Base>:
   110dc:	push	{r4, r5, fp, lr}
   110e0:	add	fp, sp, #8
   110e4:	sub	sp, sp, #304	; 0x130
   110e8:	str	r0, [fp, #-12]
   110ec:	str	r1, [fp, #-16]
   110f0:	str	r2, [fp, #-20]	; 0xffffffec
   110f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   110f8:	movw	r1, #7204	; 0x1c24
   110fc:	movt	r1, #1
   11100:	bl	10b04 <fopen@plt>
   11104:	str	r0, [sp, #28]
   11108:	ldr	r0, [sp, #28]
   1110c:	movw	r1, #0
   11110:	cmp	r0, r1
   11114:	bne	1112c <heap_carrega@@Base+0x50>
   11118:	movw	r0, #7206	; 0x1c26
   1111c:	movt	r0, #1
   11120:	bl	10aec <printf@plt>
   11124:	str	r0, [sp, #24]
   11128:	b	111d0 <heap_carrega@@Base+0xf4>
   1112c:	b	11130 <heap_carrega@@Base+0x54>
   11130:	ldr	r0, [sp, #28]
   11134:	bl	10b64 <feof@plt>
   11138:	cmp	r0, #0
   1113c:	movw	r0, #0
   11140:	movne	r0, #1
   11144:	mvn	lr, #0
   11148:	eor	r0, r0, lr
   1114c:	tst	r0, #1
   11150:	beq	111c4 <heap_carrega@@Base+0xe8>
   11154:	ldr	r0, [sp, #28]
   11158:	movw	r1, #7240	; 0x1c48
   1115c:	movt	r1, #1
   11160:	add	r2, sp, #32
   11164:	bl	10af8 <__isoc99_fscanf@plt>
   11168:	add	r1, sp, #36	; 0x24
   1116c:	ldr	r2, [sp, #28]
   11170:	str	r0, [sp, #20]
   11174:	mov	r0, r1
   11178:	movw	r1, #256	; 0x100
   1117c:	bl	10b28 <fgets@plt>
   11180:	add	r1, sp, #36	; 0x24
   11184:	str	r0, [sp, #16]
   11188:	mov	r0, r1
   1118c:	str	r1, [sp, #12]
   11190:	bl	10b70 <strlen@plt>
   11194:	sub	r0, r0, #1
   11198:	ldr	r1, [sp, #12]
   1119c:	add	r0, r1, r0
   111a0:	movw	r2, #0
   111a4:	strb	r2, [r0]
   111a8:	ldr	r0, [fp, #-12]
   111ac:	ldr	r1, [fp, #-16]
   111b0:	ldr	r3, [sp, #32]
   111b4:	ldr	r2, [sp, #12]
   111b8:	bl	10f70 <heap_insere@@Base>
   111bc:	str	r0, [sp, #8]
   111c0:	b	11130 <heap_carrega@@Base+0x54>
   111c4:	ldr	r0, [sp, #28]
   111c8:	bl	10b7c <fclose@plt>
   111cc:	str	r0, [sp, #4]
   111d0:	sub	sp, fp, #8
   111d4:	pop	{r4, r5, fp, pc}

000111d8 <main@@Base>:
   111d8:	push	{fp, lr}
   111dc:	mov	fp, sp
   111e0:	sub	sp, sp, #336	; 0x150
   111e4:	movw	r2, #0
   111e8:	str	r2, [fp, #-4]
   111ec:	str	r0, [fp, #-8]
   111f0:	str	r1, [fp, #-12]
   111f4:	movw	r0, #42	; 0x2a
   111f8:	bl	116f8 <vetor_cria@@Base>
   111fc:	str	r0, [fp, #-16]
   11200:	movw	r0, #7244	; 0x1c4c
   11204:	movt	r0, #1
   11208:	bl	10aec <printf@plt>
   1120c:	ldr	r1, [fp, #-16]
   11210:	str	r0, [sp, #132]	; 0x84
   11214:	mov	r0, r1
   11218:	movw	r1, #7300	; 0x1c84
   1121c:	movt	r1, #1
   11220:	bl	10e80 <fp_carrega@@Base>
   11224:	movw	r0, #12384	; 0x3060
   11228:	movt	r0, #2
   1122c:	ldr	r1, [r0]
   11230:	movw	r0, #7310	; 0x1c8e
   11234:	movt	r0, #1
   11238:	bl	10aec <printf@plt>
   1123c:	ldr	r1, [fp, #-16]
   11240:	str	r0, [sp, #128]	; 0x80
   11244:	mov	r0, r1
   11248:	bl	11a04 <vetor_imprime@@Base>
   1124c:	ldr	r0, [fp, #-16]
   11250:	ldr	r0, [r0]
   11254:	cmp	r0, #42	; 0x2a
   11258:	beq	11278 <main@@Base+0xa0>
   1125c:	movw	r0, #7365	; 0x1cc5
   11260:	movt	r0, #1
   11264:	bl	10aec <printf@plt>
   11268:	movw	lr, #1
   1126c:	str	lr, [fp, #-4]
   11270:	str	r0, [sp, #124]	; 0x7c
   11274:	b	116ec <main@@Base+0x514>
   11278:	ldr	r0, [fp, #-16]
   1127c:	bl	10dcc <fp_remove@@Base>
   11280:	movw	lr, #7404	; 0x1cec
   11284:	movt	lr, #1
   11288:	str	r0, [sp, #120]	; 0x78
   1128c:	mov	r0, lr
   11290:	ldr	r1, [sp, #120]	; 0x78
   11294:	bl	10ae0 <strcmp@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112bc <main@@Base+0xe4>
   112a0:	movw	r0, #7422	; 0x1cfe
   112a4:	movt	r0, #1
   112a8:	bl	10aec <printf@plt>
   112ac:	movw	lr, #1
   112b0:	str	lr, [fp, #-4]
   112b4:	str	r0, [sp, #116]	; 0x74
   112b8:	b	116ec <main@@Base+0x514>
   112bc:	movw	r0, #12384	; 0x3060
   112c0:	movt	r0, #2
   112c4:	movw	r1, #0
   112c8:	str	r1, [r0]
   112cc:	ldr	r0, [fp, #-16]
   112d0:	bl	10dcc <fp_remove@@Base>
   112d4:	movw	r1, #12384	; 0x3060
   112d8:	movt	r1, #2
   112dc:	ldr	r1, [r1]
   112e0:	movw	lr, #7491	; 0x1d43
   112e4:	movt	lr, #1
   112e8:	str	r0, [sp, #112]	; 0x70
   112ec:	mov	r0, lr
   112f0:	bl	10aec <printf@plt>
   112f4:	movw	r1, #12384	; 0x3060
   112f8:	movt	r1, #2
   112fc:	movw	lr, #0
   11300:	str	lr, [r1]
   11304:	ldr	r1, [fp, #-16]
   11308:	str	r0, [sp, #108]	; 0x6c
   1130c:	mov	r0, r1
   11310:	movw	r1, #7543	; 0x1d77
   11314:	movt	r1, #1
   11318:	movw	r2, #99	; 0x63
   1131c:	bl	10c84 <fp_insere@@Base>
   11320:	movw	r1, #12384	; 0x3060
   11324:	movt	r1, #2
   11328:	ldr	r1, [r1]
   1132c:	movw	r2, #7557	; 0x1d85
   11330:	movt	r2, #1
   11334:	str	r0, [sp, #104]	; 0x68
   11338:	mov	r0, r2
   1133c:	bl	10aec <printf@plt>
   11340:	ldr	r1, [fp, #-16]
   11344:	str	r0, [sp, #100]	; 0x64
   11348:	mov	r0, r1
   1134c:	bl	10dcc <fp_remove@@Base>
   11350:	movw	r1, #12384	; 0x3060
   11354:	movt	r1, #2
   11358:	movw	r2, #0
   1135c:	str	r2, [r1]
   11360:	ldr	r1, [fp, #-16]
   11364:	str	r0, [sp, #96]	; 0x60
   11368:	mov	r0, r1
   1136c:	movw	r1, #7543	; 0x1d77
   11370:	movt	r1, #1
   11374:	bl	10c84 <fp_insere@@Base>
   11378:	movw	r1, #12384	; 0x3060
   1137c:	movt	r1, #2
   11380:	ldr	r1, [r1]
   11384:	movw	r2, #7628	; 0x1dcc
   11388:	movt	r2, #1
   1138c:	str	r0, [sp, #92]	; 0x5c
   11390:	mov	r0, r2
   11394:	bl	10aec <printf@plt>
   11398:	ldr	r1, [fp, #-16]
   1139c:	str	r0, [sp, #88]	; 0x58
   113a0:	mov	r0, r1
   113a4:	bl	10dcc <fp_remove@@Base>
   113a8:	movw	r1, #12384	; 0x3060
   113ac:	movt	r1, #2
   113b0:	movw	r2, #0
   113b4:	str	r2, [r1]
   113b8:	ldr	r1, [fp, #-16]
   113bc:	str	r0, [sp, #84]	; 0x54
   113c0:	mov	r0, r1
   113c4:	movw	r1, #7543	; 0x1d77
   113c8:	movt	r1, #1
   113cc:	movw	r2, #42	; 0x2a
   113d0:	bl	10c84 <fp_insere@@Base>
   113d4:	movw	r1, #12384	; 0x3060
   113d8:	movt	r1, #2
   113dc:	ldr	r1, [r1]
   113e0:	movw	r2, #7699	; 0x1e13
   113e4:	movt	r2, #1
   113e8:	str	r0, [sp, #80]	; 0x50
   113ec:	mov	r0, r2
   113f0:	bl	10aec <printf@plt>
   113f4:	movw	r1, #7769	; 0x1e59
   113f8:	movt	r1, #1
   113fc:	str	r0, [sp, #76]	; 0x4c
   11400:	mov	r0, r1
   11404:	bl	10aec <printf@plt>
   11408:	movw	r1, #42	; 0x2a
   1140c:	str	r0, [sp, #72]	; 0x48
   11410:	mov	r0, r1
   11414:	bl	11798 <vetor_criaHeap@@Base>
   11418:	str	r0, [fp, #-24]	; 0xffffffe8
   1141c:	movw	r0, #6312	; 0x18a8
   11420:	movt	r0, #1
   11424:	str	r0, [fp, #-28]	; 0xffffffe4
   11428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1142c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11430:	movw	r2, #7300	; 0x1c84
   11434:	movt	r2, #1
   11438:	bl	110dc <heap_carrega@@Base>
   1143c:	movw	r0, #12384	; 0x3060
   11440:	movt	r0, #2
   11444:	ldr	r1, [r0]
   11448:	movw	r0, #7826	; 0x1e92
   1144c:	movt	r0, #1
   11450:	bl	10aec <printf@plt>
   11454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11458:	str	r0, [sp, #68]	; 0x44
   1145c:	mov	r0, r1
   11460:	bl	11adc <vetor_imprimeHeap@@Base>
   11464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11468:	ldr	r0, [r0]
   1146c:	cmp	r0, #42	; 0x2a
   11470:	beq	11490 <main@@Base+0x2b8>
   11474:	movw	r0, #7881	; 0x1ec9
   11478:	movt	r0, #1
   1147c:	bl	10aec <printf@plt>
   11480:	movw	lr, #1
   11484:	str	lr, [fp, #-4]
   11488:	str	r0, [sp, #64]	; 0x40
   1148c:	b	116ec <main@@Base+0x514>
   11490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11494:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11498:	bl	110c4 <heap_remove@@Base>
   1149c:	movw	r1, #7404	; 0x1cec
   114a0:	movt	r1, #1
   114a4:	str	r0, [sp, #60]	; 0x3c
   114a8:	mov	r0, r1
   114ac:	ldr	r1, [sp, #60]	; 0x3c
   114b0:	bl	10ae0 <strcmp@plt>
   114b4:	cmp	r0, #0
   114b8:	beq	114d8 <main@@Base+0x300>
   114bc:	movw	r0, #7422	; 0x1cfe
   114c0:	movt	r0, #1
   114c4:	bl	10aec <printf@plt>
   114c8:	movw	lr, #1
   114cc:	str	lr, [fp, #-4]
   114d0:	str	r0, [sp, #56]	; 0x38
   114d4:	b	116ec <main@@Base+0x514>
   114d8:	movw	r0, #12384	; 0x3060
   114dc:	movt	r0, #2
   114e0:	movw	r1, #0
   114e4:	str	r1, [r0]
   114e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114f0:	bl	110c4 <heap_remove@@Base>
   114f4:	movw	r1, #12384	; 0x3060
   114f8:	movt	r1, #2
   114fc:	ldr	r1, [r1]
   11500:	movw	lr, #7921	; 0x1ef1
   11504:	movt	lr, #1
   11508:	str	r0, [sp, #52]	; 0x34
   1150c:	mov	r0, lr
   11510:	bl	10aec <printf@plt>
   11514:	movw	r1, #12384	; 0x3060
   11518:	movt	r1, #2
   1151c:	movw	lr, #0
   11520:	str	lr, [r1]
   11524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11528:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1152c:	str	r0, [sp, #48]	; 0x30
   11530:	mov	r0, r1
   11534:	mov	r1, lr
   11538:	movw	r2, #7543	; 0x1d77
   1153c:	movt	r2, #1
   11540:	movw	r3, #99	; 0x63
   11544:	bl	10f70 <heap_insere@@Base>
   11548:	movw	r1, #12384	; 0x3060
   1154c:	movt	r1, #2
   11550:	ldr	r1, [r1]
   11554:	movw	r2, #7973	; 0x1f25
   11558:	movt	r2, #1
   1155c:	str	r0, [sp, #44]	; 0x2c
   11560:	mov	r0, r2
   11564:	bl	10aec <printf@plt>
   11568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1156c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11570:	str	r0, [sp, #40]	; 0x28
   11574:	mov	r0, r1
   11578:	mov	r1, r2
   1157c:	bl	110c4 <heap_remove@@Base>
   11580:	movw	r1, #12384	; 0x3060
   11584:	movt	r1, #2
   11588:	movw	r2, #0
   1158c:	str	r2, [r1]
   11590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11598:	str	r0, [sp, #36]	; 0x24
   1159c:	mov	r0, r1
   115a0:	mov	r1, r3
   115a4:	movw	r3, #7543	; 0x1d77
   115a8:	movt	r3, #1
   115ac:	str	r2, [sp, #32]
   115b0:	mov	r2, r3
   115b4:	ldr	r3, [sp, #32]
   115b8:	bl	10f70 <heap_insere@@Base>
   115bc:	movw	r1, #12384	; 0x3060
   115c0:	movt	r1, #2
   115c4:	ldr	r1, [r1]
   115c8:	movw	r2, #8044	; 0x1f6c
   115cc:	movt	r2, #1
   115d0:	str	r0, [sp, #28]
   115d4:	mov	r0, r2
   115d8:	bl	10aec <printf@plt>
   115dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   115e4:	str	r0, [sp, #24]
   115e8:	mov	r0, r1
   115ec:	mov	r1, r2
   115f0:	bl	110c4 <heap_remove@@Base>
   115f4:	movw	r1, #12384	; 0x3060
   115f8:	movt	r1, #2
   115fc:	movw	r2, #0
   11600:	str	r2, [r1]
   11604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11608:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1160c:	str	r0, [sp, #20]
   11610:	mov	r0, r1
   11614:	mov	r1, r2
   11618:	movw	r2, #7543	; 0x1d77
   1161c:	movt	r2, #1
   11620:	movw	r3, #42	; 0x2a
   11624:	bl	10f70 <heap_insere@@Base>
   11628:	movw	r1, #12384	; 0x3060
   1162c:	movt	r1, #2
   11630:	ldr	r1, [r1]
   11634:	movw	r2, #7699	; 0x1e13
   11638:	movt	r2, #1
   1163c:	str	r0, [sp, #16]
   11640:	mov	r0, r2
   11644:	bl	10aec <printf@plt>
   11648:	movw	r1, #42	; 0x2a
   1164c:	str	r0, [sp, #12]
   11650:	mov	r0, r1
   11654:	bl	11798 <vetor_criaHeap@@Base>
   11658:	str	r0, [fp, #-24]	; 0xffffffe8
   1165c:	movw	r0, #6480	; 0x1950
   11660:	movt	r0, #1
   11664:	str	r0, [fp, #-32]	; 0xffffffe0
   11668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1166c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11670:	movw	r2, #7300	; 0x1c84
   11674:	movt	r2, #1
   11678:	bl	110dc <heap_carrega@@Base>
   1167c:	movw	r0, #12384	; 0x3060
   11680:	movt	r0, #2
   11684:	ldr	r1, [r0]
   11688:	movw	r0, #7826	; 0x1e92
   1168c:	movt	r0, #1
   11690:	bl	10aec <printf@plt>
   11694:	movw	r1, #0
   11698:	str	r1, [fp, #-20]	; 0xffffffec
   1169c:	str	r0, [sp, #8]
   116a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   116a4:	cmp	r0, #42	; 0x2a
   116a8:	bge	116e4 <main@@Base+0x50c>
   116ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   116b4:	bl	110c4 <heap_remove@@Base>
   116b8:	movw	r1, #8115	; 0x1fb3
   116bc:	movt	r1, #1
   116c0:	str	r0, [sp, #4]
   116c4:	mov	r0, r1
   116c8:	ldr	r1, [sp, #4]
   116cc:	bl	10aec <printf@plt>
   116d0:	str	r0, [sp]
   116d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   116d8:	add	r0, r0, #1
   116dc:	str	r0, [fp, #-20]	; 0xffffffec
   116e0:	b	116a0 <main@@Base+0x4c8>
   116e4:	movw	r0, #0
   116e8:	str	r0, [fp, #-4]
   116ec:	ldr	r0, [fp, #-4]
   116f0:	mov	sp, fp
   116f4:	pop	{fp, pc}

000116f8 <vetor_cria@@Base>:
   116f8:	push	{fp, lr}
   116fc:	mov	fp, sp
   11700:	sub	sp, sp, #16
   11704:	str	r0, [sp, #8]
   11708:	movw	r0, #12
   1170c:	bl	10b40 <malloc@plt>
   11710:	str	r0, [sp, #4]
   11714:	ldr	r0, [sp, #4]
   11718:	movw	lr, #0
   1171c:	cmp	r0, lr
   11720:	bne	11730 <vetor_cria@@Base+0x38>
   11724:	movw	r0, #0
   11728:	str	r0, [fp, #-4]
   1172c:	b	1178c <vetor_cria@@Base+0x94>
   11730:	ldr	r0, [sp, #4]
   11734:	movw	r1, #0
   11738:	str	r1, [r0]
   1173c:	ldr	r0, [sp, #8]
   11740:	ldr	r1, [sp, #4]
   11744:	str	r0, [r1, #4]
   11748:	ldr	r0, [sp, #8]
   1174c:	movw	r1, #4
   11750:	bl	10ad4 <calloc@plt>
   11754:	ldr	r1, [sp, #4]
   11758:	str	r0, [r1, #8]
   1175c:	ldr	r0, [sp, #4]
   11760:	ldr	r0, [r0, #8]
   11764:	movw	r1, #0
   11768:	cmp	r0, r1
   1176c:	bne	11784 <vetor_cria@@Base+0x8c>
   11770:	ldr	r0, [sp, #4]
   11774:	bl	10b1c <free@plt>
   11778:	movw	r0, #0
   1177c:	str	r0, [fp, #-4]
   11780:	b	1178c <vetor_cria@@Base+0x94>
   11784:	ldr	r0, [sp, #4]
   11788:	str	r0, [fp, #-4]
   1178c:	ldr	r0, [fp, #-4]
   11790:	mov	sp, fp
   11794:	pop	{fp, pc}

00011798 <vetor_criaHeap@@Base>:
   11798:	push	{fp, lr}
   1179c:	mov	fp, sp
   117a0:	sub	sp, sp, #16
   117a4:	str	r0, [sp, #8]
   117a8:	movw	r0, #12
   117ac:	bl	10b40 <malloc@plt>
   117b0:	str	r0, [sp, #4]
   117b4:	ldr	r0, [sp, #4]
   117b8:	movw	lr, #0
   117bc:	cmp	r0, lr
   117c0:	bne	117d0 <vetor_criaHeap@@Base+0x38>
   117c4:	movw	r0, #0
   117c8:	str	r0, [fp, #-4]
   117cc:	b	11830 <vetor_criaHeap@@Base+0x98>
   117d0:	ldr	r0, [sp, #4]
   117d4:	movw	r1, #0
   117d8:	str	r1, [r0]
   117dc:	ldr	r0, [sp, #8]
   117e0:	ldr	r1, [sp, #4]
   117e4:	str	r0, [r1, #4]
   117e8:	ldr	r0, [sp, #8]
   117ec:	add	r0, r0, #1
   117f0:	movw	r1, #4
   117f4:	bl	10ad4 <calloc@plt>
   117f8:	ldr	r1, [sp, #4]
   117fc:	str	r0, [r1, #8]
   11800:	ldr	r0, [sp, #4]
   11804:	ldr	r0, [r0, #8]
   11808:	movw	r1, #0
   1180c:	cmp	r0, r1
   11810:	bne	11828 <vetor_criaHeap@@Base+0x90>
   11814:	ldr	r0, [sp, #4]
   11818:	bl	10b1c <free@plt>
   1181c:	movw	r0, #0
   11820:	str	r0, [fp, #-4]
   11824:	b	11830 <vetor_criaHeap@@Base+0x98>
   11828:	ldr	r0, [sp, #4]
   1182c:	str	r0, [fp, #-4]
   11830:	ldr	r0, [fp, #-4]
   11834:	mov	sp, fp
   11838:	pop	{fp, pc}

0001183c <elemento_cria@@Base>:
   1183c:	push	{fp, lr}
   11840:	mov	fp, sp
   11844:	sub	sp, sp, #16
   11848:	str	r0, [sp, #8]
   1184c:	str	r1, [sp, #4]
   11850:	movw	r0, #8
   11854:	bl	10b40 <malloc@plt>
   11858:	str	r0, [sp]
   1185c:	ldr	r0, [sp]
   11860:	movw	r1, #0
   11864:	cmp	r0, r1
   11868:	bne	11878 <elemento_cria@@Base+0x3c>
   1186c:	movw	r0, #0
   11870:	str	r0, [fp, #-4]
   11874:	b	1189c <elemento_cria@@Base+0x60>
   11878:	ldr	r0, [sp, #4]
   1187c:	bl	10b34 <strdup@plt>
   11880:	ldr	lr, [sp]
   11884:	str	r0, [lr, #4]
   11888:	ldr	r0, [sp, #8]
   1188c:	ldr	lr, [sp]
   11890:	str	r0, [lr]
   11894:	ldr	r0, [sp]
   11898:	str	r0, [fp, #-4]
   1189c:	ldr	r0, [fp, #-4]
   118a0:	mov	sp, fp
   118a4:	pop	{fp, pc}

000118a8 <maior_que@@Base>:
   118a8:	push	{fp, lr}
   118ac:	mov	fp, sp
   118b0:	sub	sp, sp, #24
   118b4:	str	r0, [fp, #-8]
   118b8:	str	r1, [sp, #12]
   118bc:	ldr	r0, [fp, #-8]
   118c0:	movw	r1, #0
   118c4:	cmp	r0, r1
   118c8:	beq	118dc <maior_que@@Base+0x34>
   118cc:	ldr	r0, [sp, #12]
   118d0:	movw	r1, #0
   118d4:	cmp	r0, r1
   118d8:	bne	118f8 <maior_que@@Base+0x50>
   118dc:	movw	r0, #8119	; 0x1fb7
   118e0:	movt	r0, #1
   118e4:	bl	10aec <printf@plt>
   118e8:	movw	lr, #0
   118ec:	str	lr, [fp, #-4]
   118f0:	str	r0, [sp, #8]
   118f4:	b	11944 <maior_que@@Base+0x9c>
   118f8:	movw	r0, #12376	; 0x3058
   118fc:	movt	r0, #2
   11900:	ldr	r0, [r0]
   11904:	bl	10b10 <fflush@plt>
   11908:	movw	lr, #12384	; 0x3060
   1190c:	movt	lr, #2
   11910:	ldr	r1, [lr]
   11914:	add	r1, r1, #1
   11918:	str	r1, [lr]
   1191c:	ldr	r1, [fp, #-8]
   11920:	ldr	r1, [r1]
   11924:	ldr	lr, [sp, #12]
   11928:	ldr	lr, [lr]
   1192c:	cmp	r1, lr
   11930:	movw	r1, #0
   11934:	movgt	r1, #1
   11938:	and	r1, r1, #1
   1193c:	str	r1, [fp, #-4]
   11940:	str	r0, [sp, #4]
   11944:	ldr	r0, [fp, #-4]
   11948:	mov	sp, fp
   1194c:	pop	{fp, pc}

00011950 <maior_que_HeapSort@@Base>:
   11950:	push	{fp, lr}
   11954:	mov	fp, sp
   11958:	sub	sp, sp, #24
   1195c:	str	r0, [fp, #-8]
   11960:	str	r1, [sp, #12]
   11964:	ldr	r0, [fp, #-8]
   11968:	movw	r1, #0
   1196c:	cmp	r0, r1
   11970:	beq	11984 <maior_que_HeapSort@@Base+0x34>
   11974:	ldr	r0, [sp, #12]
   11978:	movw	r1, #0
   1197c:	cmp	r0, r1
   11980:	bne	119a0 <maior_que_HeapSort@@Base+0x50>
   11984:	movw	r0, #8119	; 0x1fb7
   11988:	movt	r0, #1
   1198c:	bl	10aec <printf@plt>
   11990:	movw	lr, #0
   11994:	str	lr, [fp, #-4]
   11998:	str	r0, [sp, #8]
   1199c:	b	119f8 <maior_que_HeapSort@@Base+0xa8>
   119a0:	movw	r0, #12376	; 0x3058
   119a4:	movt	r0, #2
   119a8:	ldr	r0, [r0]
   119ac:	bl	10b10 <fflush@plt>
   119b0:	movw	lr, #12384	; 0x3060
   119b4:	movt	lr, #2
   119b8:	ldr	r1, [lr]
   119bc:	add	r1, r1, #1
   119c0:	str	r1, [lr]
   119c4:	ldr	r1, [fp, #-8]
   119c8:	ldr	r1, [r1, #4]
   119cc:	ldr	lr, [sp, #12]
   119d0:	ldr	lr, [lr, #4]
   119d4:	str	r0, [sp, #4]
   119d8:	mov	r0, r1
   119dc:	mov	r1, lr
   119e0:	bl	10ae0 <strcmp@plt>
   119e4:	cmp	r0, #0
   119e8:	movw	r0, #0
   119ec:	movlt	r0, #1
   119f0:	and	r0, r0, #1
   119f4:	str	r0, [fp, #-4]
   119f8:	ldr	r0, [fp, #-4]
   119fc:	mov	sp, fp
   11a00:	pop	{fp, pc}

00011a04 <vetor_imprime@@Base>:
   11a04:	push	{fp, lr}
   11a08:	mov	fp, sp
   11a0c:	sub	sp, sp, #24
   11a10:	str	r0, [fp, #-4]
   11a14:	ldr	r0, [fp, #-4]
   11a18:	ldr	r0, [r0]
   11a1c:	cmp	r0, #0
   11a20:	ble	11a58 <vetor_imprime@@Base+0x54>
   11a24:	ldr	r0, [fp, #-4]
   11a28:	ldr	r0, [r0, #8]
   11a2c:	ldr	r0, [r0]
   11a30:	ldr	r1, [r0, #4]
   11a34:	ldr	r0, [fp, #-4]
   11a38:	ldr	r0, [r0, #8]
   11a3c:	ldr	r0, [r0]
   11a40:	ldr	r2, [r0]
   11a44:	movw	r0, #8131	; 0x1fc3
   11a48:	movt	r0, #1
   11a4c:	bl	10aec <printf@plt>
   11a50:	str	r0, [sp, #12]
   11a54:	b	11a6c <vetor_imprime@@Base+0x68>
   11a58:	movw	r0, #8160	; 0x1fe0
   11a5c:	movt	r0, #1
   11a60:	bl	10aec <printf@plt>
   11a64:	str	r0, [sp, #8]
   11a68:	b	11ad4 <vetor_imprime@@Base+0xd0>
   11a6c:	movw	r0, #1
   11a70:	str	r0, [fp, #-8]
   11a74:	ldr	r0, [fp, #-8]
   11a78:	ldr	r1, [fp, #-4]
   11a7c:	ldr	r1, [r1]
   11a80:	cmp	r0, r1
   11a84:	bge	11ac4 <vetor_imprime@@Base+0xc0>
   11a88:	ldr	r0, [fp, #-4]
   11a8c:	ldr	r0, [r0, #8]
   11a90:	ldr	r1, [fp, #-8]
   11a94:	ldr	r1, [r0, r1, lsl #2]!
   11a98:	ldr	r1, [r1, #4]
   11a9c:	ldr	r0, [r0]
   11aa0:	ldr	r2, [r0]
   11aa4:	movw	r0, #8184	; 0x1ff8
   11aa8:	movt	r0, #1
   11aac:	bl	10aec <printf@plt>
   11ab0:	str	r0, [sp, #4]
   11ab4:	ldr	r0, [fp, #-8]
   11ab8:	add	r0, r0, #1
   11abc:	str	r0, [fp, #-8]
   11ac0:	b	11a74 <vetor_imprime@@Base+0x70>
   11ac4:	movw	r0, #7402	; 0x1cea
   11ac8:	movt	r0, #1
   11acc:	bl	10aec <printf@plt>
   11ad0:	str	r0, [sp]
   11ad4:	mov	sp, fp
   11ad8:	pop	{fp, pc}

00011adc <vetor_imprimeHeap@@Base>:
   11adc:	push	{fp, lr}
   11ae0:	mov	fp, sp
   11ae4:	sub	sp, sp, #24
   11ae8:	str	r0, [fp, #-4]
   11aec:	ldr	r0, [fp, #-4]
   11af0:	ldr	r0, [r0]
   11af4:	cmp	r0, #0
   11af8:	ble	11b30 <vetor_imprimeHeap@@Base+0x54>
   11afc:	ldr	r0, [fp, #-4]
   11b00:	ldr	r0, [r0, #8]
   11b04:	ldr	r0, [r0, #4]
   11b08:	ldr	r1, [r0, #4]
   11b0c:	ldr	r0, [fp, #-4]
   11b10:	ldr	r0, [r0, #8]
   11b14:	ldr	r0, [r0, #4]
   11b18:	ldr	r2, [r0]
   11b1c:	movw	r0, #8131	; 0x1fc3
   11b20:	movt	r0, #1
   11b24:	bl	10aec <printf@plt>
   11b28:	str	r0, [sp, #12]
   11b2c:	b	11b44 <vetor_imprimeHeap@@Base+0x68>
   11b30:	movw	r0, #8160	; 0x1fe0
   11b34:	movt	r0, #1
   11b38:	bl	10aec <printf@plt>
   11b3c:	str	r0, [sp, #8]
   11b40:	b	11bac <vetor_imprimeHeap@@Base+0xd0>
   11b44:	movw	r0, #2
   11b48:	str	r0, [fp, #-8]
   11b4c:	ldr	r0, [fp, #-8]
   11b50:	ldr	r1, [fp, #-4]
   11b54:	ldr	r1, [r1]
   11b58:	cmp	r0, r1
   11b5c:	bge	11b9c <vetor_imprimeHeap@@Base+0xc0>
   11b60:	ldr	r0, [fp, #-4]
   11b64:	ldr	r0, [r0, #8]
   11b68:	ldr	r1, [fp, #-8]
   11b6c:	ldr	r1, [r0, r1, lsl #2]!
   11b70:	ldr	r1, [r1, #4]
   11b74:	ldr	r0, [r0]
   11b78:	ldr	r2, [r0]
   11b7c:	movw	r0, #8184	; 0x1ff8
   11b80:	movt	r0, #1
   11b84:	bl	10aec <printf@plt>
   11b88:	str	r0, [sp, #4]
   11b8c:	ldr	r0, [fp, #-8]
   11b90:	add	r0, r0, #1
   11b94:	str	r0, [fp, #-8]
   11b98:	b	11b4c <vetor_imprimeHeap@@Base+0x70>
   11b9c:	movw	r0, #7402	; 0x1cea
   11ba0:	movt	r0, #1
   11ba4:	bl	10aec <printf@plt>
   11ba8:	str	r0, [sp]
   11bac:	mov	sp, fp
   11bb0:	pop	{fp, pc}

00011bb4 <__libc_csu_init@@Base>:
   11bb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bb8:	mov	r7, r0
   11bbc:	ldr	r6, [pc, #72]	; 11c0c <__libc_csu_init@@Base+0x58>
   11bc0:	ldr	r5, [pc, #72]	; 11c10 <__libc_csu_init@@Base+0x5c>
   11bc4:	add	r6, pc, r6
   11bc8:	add	r5, pc, r5
   11bcc:	sub	r6, r6, r5
   11bd0:	mov	r8, r1
   11bd4:	mov	r9, r2
   11bd8:	bl	10ab4 <calloc@plt-0x20>
   11bdc:	asrs	r6, r6, #2
   11be0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11be4:	mov	r4, #0
   11be8:	add	r4, r4, #1
   11bec:	ldr	r3, [r5], #4
   11bf0:	mov	r2, r9
   11bf4:	mov	r1, r8
   11bf8:	mov	r0, r7
   11bfc:	blx	r3
   11c00:	cmp	r6, r4
   11c04:	bne	11be8 <__libc_csu_init@@Base+0x34>
   11c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c0c:	andeq	r1, r1, r0, asr #6
   11c10:	andeq	r1, r1, r8, lsr r3

00011c14 <__libc_csu_fini@@Base>:
   11c14:	bx	lr

Disassembly of section .fini:

00011c18 <.fini>:
   11c18:	push	{r3, lr}
   11c1c:	pop	{r3, pc}
