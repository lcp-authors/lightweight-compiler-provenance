
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <errorProcessor>:
       0:	ldr	r0, [r0, #292]	; 0x124
       4:	bx	lr

00000008 <normalizeLines>:
       8:	ldrb	r3, [r0]
       c:	cmp	r3, #0
      10:	bne	24 <normalizeLines+0x1c>
      14:	bx	lr
      18:	ldrb	r3, [r0, #1]!
      1c:	cmp	r3, #0
      20:	beq	8c <normalizeLines+0x84>
      24:	cmp	r3, #13
      28:	bne	18 <normalizeLines+0x10>
      2c:	add	r3, r0, #1
      30:	mov	r2, #13
      34:	mov	ip, #10
      38:	b	54 <normalizeLines+0x4c>
      3c:	strb	r2, [r3, #-1]
      40:	ldrb	r2, [r0, #1]
      44:	cmp	r2, #0
      48:	add	r0, r0, #1
      4c:	add	r3, r3, #1
      50:	beq	84 <normalizeLines+0x7c>
      54:	cmp	r2, #13
      58:	mov	r1, r3
      5c:	bne	3c <normalizeLines+0x34>
      60:	strb	ip, [r3, #-1]
      64:	ldrb	r2, [r0, #1]
      68:	cmp	r2, #10
      6c:	bne	44 <normalizeLines+0x3c>
      70:	ldrb	r2, [r0, #2]
      74:	add	r3, r3, #1
      78:	add	r0, r0, #2
      7c:	cmp	r2, #0
      80:	bne	54 <normalizeLines+0x4c>
      84:	strb	r2, [r1]
      88:	bx	lr
      8c:	bx	lr

00000090 <reportDefault>:
      90:	push	{r4, r5, r6, r7, r8, r9, lr}
      94:	mov	r5, r1
      98:	ldrb	r1, [r1, #72]	; 0x48
      9c:	sub	sp, sp, #28
      a0:	mov	r4, r0
      a4:	cmp	r1, #0
      a8:	str	r2, [sp, #12]
      ac:	mov	r6, r3
      b0:	bne	130 <reportDefault+0xa0>
      b4:	ldr	r3, [r0, #152]	; 0x98
      b8:	cmp	r5, r3
      bc:	addeq	r7, r0, #296	; 0x128
      c0:	ldrne	r7, [r0, #308]	; 0x134
      c4:	addeq	r8, r0, #300	; 0x12c
      c8:	addne	r8, r7, #4
      cc:	ldr	r2, [r4, #52]	; 0x34
      d0:	ldr	r3, [r4, #56]	; 0x38
      d4:	str	r2, [sp, #20]
      d8:	str	r3, [sp]
      dc:	mov	r2, r6
      e0:	add	r3, sp, #20
      e4:	add	r1, sp, #12
      e8:	mov	r0, r5
      ec:	ldr	r9, [r5, #60]	; 0x3c
      f0:	blx	r9
      f4:	ldr	r2, [sp, #12]
      f8:	ldr	r3, [r4, #88]	; 0x58
      fc:	str	r2, [r8]
     100:	ldr	r2, [sp, #20]
     104:	ldr	r1, [r4, #52]	; 0x34
     108:	ldr	r0, [r4, #4]
     10c:	sub	r2, r2, r1
     110:	blx	r3
     114:	ldr	r3, [sp, #12]
     118:	str	r3, [r7]
     11c:	ldr	r3, [sp, #12]
     120:	cmp	r6, r3
     124:	bne	cc <reportDefault+0x3c>
     128:	add	sp, sp, #28
     12c:	pop	{r4, r5, r6, r7, r8, r9, pc}
     130:	mov	r1, r2
     134:	sub	r2, r3, r2
     138:	ldr	r3, [r0, #88]	; 0x58
     13c:	ldr	r0, [r0, #4]
     140:	blx	r3
     144:	add	sp, sp, #28
     148:	pop	{r4, r5, r6, r7, r8, r9, pc}

0000014c <doCdataSection>:
     14c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     150:	mov	r4, r0
     154:	ldr	r0, [r0, #152]	; 0x98
     158:	sub	sp, sp, #28
     15c:	cmp	r0, r1
     160:	ldrb	r9, [sp, #68]	; 0x44
     164:	ldrne	r6, [r4, #308]	; 0x134
     168:	mov	r8, r2
     16c:	addeq	r6, r4, #296	; 0x128
     170:	ldr	r2, [r2]
     174:	mov	r5, r1
     178:	addeq	r7, r4, #300	; 0x12c
     17c:	addne	r7, r6, #4
     180:	mov	sl, r3
     184:	mov	r3, #0
     188:	streq	r2, [r4, #296]	; 0x128
     18c:	str	r2, [sp, #12]
     190:	str	r2, [r6]
     194:	str	r3, [r8]
     198:	add	r3, sp, #16
     19c:	ldr	fp, [r5, #8]
     1a0:	mov	r2, sl
     1a4:	ldr	r1, [sp, #12]
     1a8:	mov	r0, r5
     1ac:	blx	fp
     1b0:	ldr	r3, [sp, #16]
     1b4:	str	r3, [r7]
     1b8:	add	r0, r0, #4
     1bc:	cmp	r0, #44	; 0x2c
     1c0:	ldrls	pc, [pc, r0, lsl #2]
     1c4:	b	3d8 <doCdataSection+0x28c>
     1c8:	.word	0x000002b8
     1cc:	.word	0x000003d8
     1d0:	.word	0x000002dc
     1d4:	.word	0x000002b8
     1d8:	.word	0x000002f0
     1dc:	.word	0x000003d8
     1e0:	.word	0x000003d8
     1e4:	.word	0x000003d8
     1e8:	.word	0x000003d8
     1ec:	.word	0x000003d8
     1f0:	.word	0x00000304
     1f4:	.word	0x0000037c
     1f8:	.word	0x000003d8
     1fc:	.word	0x000003d8
     200:	.word	0x000003d8
     204:	.word	0x000003d8
     208:	.word	0x000003d8
     20c:	.word	0x000003d8
     210:	.word	0x000003d8
     214:	.word	0x000003d8
     218:	.word	0x000003d8
     21c:	.word	0x000003d8
     220:	.word	0x000003d8
     224:	.word	0x000003d8
     228:	.word	0x000003d8
     22c:	.word	0x000003d8
     230:	.word	0x000003d8
     234:	.word	0x000003d8
     238:	.word	0x000003d8
     23c:	.word	0x000003d8
     240:	.word	0x000003d8
     244:	.word	0x000003d8
     248:	.word	0x000003d8
     24c:	.word	0x000003d8
     250:	.word	0x000003d8
     254:	.word	0x000003d8
     258:	.word	0x000003d8
     25c:	.word	0x000003d8
     260:	.word	0x000003d8
     264:	.word	0x000003d8
     268:	.word	0x000003d8
     26c:	.word	0x000003d8
     270:	.word	0x000003d8
     274:	.word	0x000003d8
     278:	.word	0x0000027c
     27c:	ldr	r3, [r4, #84]	; 0x54
     280:	cmp	r3, #0
     284:	beq	420 <doCdataSection+0x2d4>
     288:	ldr	r0, [r4, #4]
     28c:	blx	r3
     290:	ldr	r0, [r4, #496]	; 0x1f0
     294:	ldr	r2, [sp, #64]	; 0x40
     298:	cmp	r0, #2
     29c:	ldr	r3, [sp, #16]
     2a0:	moveq	r0, #35	; 0x23
     2a4:	movne	r0, #0
     2a8:	str	r3, [r8]
     2ac:	str	r3, [r2]
     2b0:	add	sp, sp, #28
     2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     2b8:	cmp	r9, #0
     2bc:	moveq	r0, #20
     2c0:	beq	2b0 <doCdataSection+0x164>
     2c4:	ldr	r2, [sp, #64]	; 0x40
     2c8:	ldr	r3, [sp, #12]
     2cc:	mov	r0, #0
     2d0:	str	r3, [r2]
     2d4:	add	sp, sp, #28
     2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     2dc:	cmp	r9, #0
     2e0:	moveq	r0, #6
     2e4:	bne	2c4 <doCdataSection+0x178>
     2e8:	add	sp, sp, #28
     2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     2f0:	ldr	r3, [sp, #16]
     2f4:	mov	r0, #4
     2f8:	str	r3, [r6]
     2fc:	add	sp, sp, #28
     300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     304:	ldr	fp, [r4, #68]	; 0x44
     308:	cmp	fp, #0
     30c:	beq	3f8 <doCdataSection+0x2ac>
     310:	ldrb	r3, [r5, #72]	; 0x48
     314:	cmp	r3, #0
     318:	beq	324 <doCdataSection+0x1d8>
     31c:	b	444 <doCdataSection+0x2f8>
     320:	str	r3, [r6]
     324:	ldr	r1, [r4, #52]	; 0x34
     328:	ldr	r3, [r4, #56]	; 0x38
     32c:	ldr	r2, [sp, #16]
     330:	str	r3, [sp]
     334:	str	r1, [sp, #20]
     338:	add	r3, sp, #20
     33c:	add	r1, sp, #12
     340:	mov	r0, r5
     344:	ldr	ip, [r5, #60]	; 0x3c
     348:	blx	ip
     34c:	ldr	r3, [sp, #16]
     350:	str	r3, [r7]
     354:	ldr	r2, [sp, #20]
     358:	ldr	r1, [r4, #52]	; 0x34
     35c:	ldr	r0, [r4, #4]
     360:	sub	r2, r2, r1
     364:	blx	fp
     368:	ldr	r3, [sp, #12]
     36c:	ldr	r2, [sp, #16]
     370:	cmp	r3, r2
     374:	bne	320 <doCdataSection+0x1d4>
     378:	b	3a4 <doCdataSection+0x258>
     37c:	ldr	r3, [r4, #68]	; 0x44
     380:	cmp	r3, #0
     384:	beq	3f8 <doCdataSection+0x2ac>
     388:	mov	r2, #10
     38c:	strb	r2, [sp, #20]
     390:	add	r1, sp, #20
     394:	mov	r2, #1
     398:	ldr	r0, [r4, #4]
     39c:	blx	r3
     3a0:	ldr	r3, [sp, #16]
     3a4:	ldr	r2, [r4, #496]	; 0x1f0
     3a8:	str	r3, [sp, #12]
     3ac:	cmp	r2, #2
     3b0:	str	r3, [r6]
     3b4:	beq	3ec <doCdataSection+0x2a0>
     3b8:	cmp	r2, #3
     3bc:	bne	198 <doCdataSection+0x4c>
     3c0:	ldr	r2, [sp, #64]	; 0x40
     3c4:	ldr	r3, [sp, #16]
     3c8:	mov	r0, #0
     3cc:	str	r3, [r2]
     3d0:	add	sp, sp, #28
     3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     3d8:	ldr	r3, [sp, #16]
     3dc:	mov	r0, #23
     3e0:	str	r3, [r6]
     3e4:	add	sp, sp, #28
     3e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     3ec:	mov	r0, #35	; 0x23
     3f0:	add	sp, sp, #28
     3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     3f8:	ldr	r3, [r4, #88]	; 0x58
     3fc:	cmp	r3, #0
     400:	ldr	r3, [sp, #16]
     404:	beq	3a4 <doCdataSection+0x258>
     408:	ldr	r2, [sp, #12]
     40c:	mov	r1, r5
     410:	mov	r0, r4
     414:	bl	90 <reportDefault>
     418:	ldr	r3, [sp, #16]
     41c:	b	3a4 <doCdataSection+0x258>
     420:	ldr	r3, [r4, #88]	; 0x58
     424:	cmp	r3, #0
     428:	beq	290 <doCdataSection+0x144>
     42c:	mov	r1, r5
     430:	ldr	r3, [sp, #16]
     434:	ldr	r2, [sp, #12]
     438:	mov	r0, r4
     43c:	bl	90 <reportDefault>
     440:	b	290 <doCdataSection+0x144>
     444:	ldr	r3, [sp, #12]
     448:	ldr	r2, [sp, #16]
     44c:	mov	r1, r3
     450:	sub	r2, r2, r3
     454:	ldr	r0, [r4, #4]
     458:	blx	fp
     45c:	ldr	r3, [sp, #16]
     460:	b	3a4 <doCdataSection+0x258>

00000464 <doIgnoreSection>:
     464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     468:	mov	r4, r1
     46c:	ldr	r1, [r0, #152]	; 0x98
     470:	ldr	r6, [r2]
     474:	cmp	r1, r4
     478:	addeq	r7, r0, #296	; 0x128
     47c:	ldrne	r7, [r0, #308]	; 0x134
     480:	mov	r8, r2
     484:	sub	sp, sp, #12
     488:	mov	r1, #0
     48c:	streq	r6, [r0, #296]	; 0x128
     490:	addeq	r9, r0, #300	; 0x12c
     494:	str	r6, [r7]
     498:	mov	r2, r3
     49c:	str	r1, [r8]
     4a0:	add	r3, sp, #4
     4a4:	mov	r5, r0
     4a8:	ldr	fp, [r4, #12]
     4ac:	mov	r1, r6
     4b0:	mov	r0, r4
     4b4:	addne	r9, r7, #4
     4b8:	ldrb	sl, [sp, #52]	; 0x34
     4bc:	blx	fp
     4c0:	ldr	r3, [sp, #4]
     4c4:	str	r3, [r9]
     4c8:	add	r0, r0, #4
     4cc:	cmp	r0, #46	; 0x2e
     4d0:	ldrls	pc, [pc, r0, lsl #2]
     4d4:	b	624 <doIgnoreSection+0x1c0>
     4d8:	.word	0x000005f0
     4dc:	.word	0x00000624
     4e0:	.word	0x00000610
     4e4:	.word	0x000005f0
     4e8:	.word	0x000005dc
     4ec:	.word	0x00000624
     4f0:	.word	0x00000624
     4f4:	.word	0x00000624
     4f8:	.word	0x00000624
     4fc:	.word	0x00000624
     500:	.word	0x00000624
     504:	.word	0x00000624
     508:	.word	0x00000624
     50c:	.word	0x00000624
     510:	.word	0x00000624
     514:	.word	0x00000624
     518:	.word	0x00000624
     51c:	.word	0x00000624
     520:	.word	0x00000624
     524:	.word	0x00000624
     528:	.word	0x00000624
     52c:	.word	0x00000624
     530:	.word	0x00000624
     534:	.word	0x00000624
     538:	.word	0x00000624
     53c:	.word	0x00000624
     540:	.word	0x00000624
     544:	.word	0x00000624
     548:	.word	0x00000624
     54c:	.word	0x00000624
     550:	.word	0x00000624
     554:	.word	0x00000624
     558:	.word	0x00000624
     55c:	.word	0x00000624
     560:	.word	0x00000624
     564:	.word	0x00000624
     568:	.word	0x00000624
     56c:	.word	0x00000624
     570:	.word	0x00000624
     574:	.word	0x00000624
     578:	.word	0x00000624
     57c:	.word	0x00000624
     580:	.word	0x00000624
     584:	.word	0x00000624
     588:	.word	0x00000624
     58c:	.word	0x00000624
     590:	.word	0x00000594
     594:	ldr	r3, [r5, #88]	; 0x58
     598:	cmp	r3, #0
     59c:	beq	5b4 <doIgnoreSection+0x150>
     5a0:	mov	r2, r6
     5a4:	mov	r1, r4
     5a8:	ldr	r3, [sp, #4]
     5ac:	mov	r0, r5
     5b0:	bl	90 <reportDefault>
     5b4:	ldr	r0, [r5, #496]	; 0x1f0
     5b8:	ldr	r2, [sp, #48]	; 0x30
     5bc:	ldr	r3, [sp, #4]
     5c0:	cmp	r0, #2
     5c4:	moveq	r0, #35	; 0x23
     5c8:	movne	r0, #0
     5cc:	str	r3, [r8]
     5d0:	str	r3, [r2]
     5d4:	add	sp, sp, #12
     5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     5dc:	ldr	r3, [sp, #4]
     5e0:	mov	r0, #4
     5e4:	str	r3, [r7]
     5e8:	add	sp, sp, #12
     5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     5f0:	cmp	sl, #0
     5f4:	moveq	r0, #2
     5f8:	beq	5e8 <doIgnoreSection+0x184>
     5fc:	ldr	r3, [sp, #48]	; 0x30
     600:	mov	r0, #0
     604:	str	r6, [r3]
     608:	add	sp, sp, #12
     60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     610:	cmp	sl, #0
     614:	moveq	r0, #6
     618:	bne	5fc <doIgnoreSection+0x198>
     61c:	add	sp, sp, #12
     620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     624:	ldr	r3, [sp, #4]
     628:	mov	r0, #23
     62c:	str	r3, [r7]
     630:	add	sp, sp, #12
     634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000638 <normalizePublicId>:
     638:	ldrb	r2, [r0]
     63c:	cmp	r2, #0
     640:	beq	6d8 <normalizePublicId+0xa0>
     644:	push	{r4, r5, lr}
     648:	mov	ip, r0
     64c:	ldr	r4, [pc, #144]	; 6e4 <normalizePublicId+0xac>
     650:	mov	r1, r0
     654:	mov	lr, #1
     658:	mov	r5, #32
     65c:	b	68c <normalizePublicId+0x54>
     660:	ands	r3, r4, lr, lsl r3
     664:	beq	69c <normalizePublicId+0x64>
     668:	cmp	r0, r1
     66c:	beq	680 <normalizePublicId+0x48>
     670:	ldrb	r3, [r1, #-1]
     674:	cmp	r3, #32
     678:	strbne	r5, [r1]
     67c:	addne	r1, r1, #1
     680:	ldrb	r2, [ip, #1]!
     684:	cmp	r2, #0
     688:	beq	6b0 <normalizePublicId+0x78>
     68c:	sub	r3, r2, #10
     690:	uxtb	r3, r3
     694:	cmp	r3, #22
     698:	bls	660 <normalizePublicId+0x28>
     69c:	strb	r2, [r1]
     6a0:	ldrb	r2, [ip, #1]!
     6a4:	add	r1, r1, #1
     6a8:	cmp	r2, #0
     6ac:	bne	68c <normalizePublicId+0x54>
     6b0:	cmp	r1, r0
     6b4:	beq	6d0 <normalizePublicId+0x98>
     6b8:	ldrb	r3, [r1, #-1]
     6bc:	cmp	r3, #32
     6c0:	subeq	r1, r1, #1
     6c4:	mov	r3, #0
     6c8:	strb	r3, [r1]
     6cc:	pop	{r4, r5, pc}
     6d0:	mov	r1, r0
     6d4:	b	6c4 <normalizePublicId+0x8c>
     6d8:	mov	r3, #0
     6dc:	strb	r3, [r0]
     6e0:	bx	lr
     6e4:	.word	0x00400009

000006e8 <hashTableDestroy>:
     6e8:	ldr	r3, [r0, #8]
     6ec:	push	{r4, r5, r6, lr}
     6f0:	cmp	r3, #0
     6f4:	mov	r5, r0
     6f8:	movne	r4, #0
     6fc:	beq	724 <hashTableDestroy+0x3c>
     700:	ldr	r2, [r5]
     704:	ldr	r3, [r5, #16]
     708:	ldr	r0, [r2, r4, lsl #2]
     70c:	ldr	r3, [r3, #8]
     710:	blx	r3
     714:	ldr	r3, [r5, #8]
     718:	add	r4, r4, #1
     71c:	cmp	r3, r4
     720:	bhi	700 <hashTableDestroy+0x18>
     724:	ldr	r3, [r5, #16]
     728:	ldr	r0, [r5]
     72c:	pop	{r4, r5, r6, lr}
     730:	ldr	r3, [r3, #8]
     734:	bx	r3

00000738 <poolDestroy>:
     738:	push	{r4, r5, r6, lr}
     73c:	mov	r5, r0
     740:	ldr	r0, [r0]
     744:	cmp	r0, #0
     748:	beq	764 <poolDestroy+0x2c>
     74c:	ldr	r3, [r5, #20]
     750:	ldr	r4, [r0]
     754:	ldr	r3, [r3, #8]
     758:	blx	r3
     75c:	subs	r0, r4, #0
     760:	bne	74c <poolDestroy+0x14>
     764:	ldr	r0, [r5, #4]
     768:	cmp	r0, #0
     76c:	beq	78c <poolDestroy+0x54>
     770:	ldr	r3, [r5, #20]
     774:	ldr	r4, [r0]
     778:	ldr	r3, [r3, #8]
     77c:	blx	r3
     780:	subs	r0, r4, #0
     784:	bne	770 <poolDestroy+0x38>
     788:	pop	{r4, r5, r6, pc}
     78c:	pop	{r4, r5, r6, pc}

00000790 <nextScaffoldPart>:
     790:	push	{r4, r5, r6, lr}
     794:	mov	r5, r0
     798:	ldr	r4, [r0, #364]	; 0x16c
     79c:	ldr	r6, [r4, #184]	; 0xb8
     7a0:	cmp	r6, #0
     7a4:	beq	890 <nextScaffoldPart+0x100>
     7a8:	ldr	ip, [r4, #176]	; 0xb0
     7ac:	ldr	r1, [r4, #172]	; 0xac
     7b0:	cmp	ip, r1
     7b4:	bcc	7f4 <nextScaffoldPart+0x64>
     7b8:	ldr	r0, [r4, #164]	; 0xa4
     7bc:	cmp	r0, #0
     7c0:	beq	870 <nextScaffoldPart+0xe0>
     7c4:	rsb	r1, r1, r1, lsl #3
     7c8:	ldr	r3, [r5, #16]
     7cc:	lsl	r1, r1, #3
     7d0:	blx	r3
     7d4:	subs	r1, r0, #0
     7d8:	beq	8b0 <nextScaffoldPart+0x120>
     7dc:	ldr	r3, [r4, #172]	; 0xac
     7e0:	lsl	r3, r3, #1
     7e4:	str	r3, [r4, #172]	; 0xac
     7e8:	ldr	ip, [r4, #176]	; 0xb0
     7ec:	str	r1, [r4, #164]	; 0xa4
     7f0:	b	7f8 <nextScaffoldPart+0x68>
     7f4:	ldr	r1, [r4, #164]	; 0xa4
     7f8:	ldr	r2, [r4, #180]	; 0xb4
     7fc:	rsb	r3, ip, ip, lsl #3
     800:	add	r0, ip, #1
     804:	cmp	r2, #0
     808:	str	r0, [r4, #176]	; 0xb0
     80c:	add	r3, r1, r3, lsl #2
     810:	mov	r0, ip
     814:	beq	858 <nextScaffoldPart+0xc8>
     818:	ldr	lr, [r4, #184]	; 0xb8
     81c:	sub	r2, r2, #-1073741823	; 0xc0000001
     820:	ldr	r2, [lr, r2, lsl #2]
     824:	rsb	r2, r2, r2, lsl #3
     828:	add	r2, r1, r2, lsl #2
     82c:	ldr	lr, [r2, #16]
     830:	cmp	lr, #0
     834:	rsbne	lr, lr, lr, lsl #3
     838:	addne	r1, r1, lr, lsl #2
     83c:	strne	ip, [r1, #24]
     840:	ldr	r1, [r2, #20]
     844:	str	ip, [r2, #16]
     848:	cmp	r1, #0
     84c:	add	r1, r1, #1
     850:	streq	ip, [r2, #12]
     854:	str	r1, [r2, #20]
     858:	mov	r2, #0
     85c:	str	r2, [r3, #24]
     860:	str	r2, [r3, #20]
     864:	str	r2, [r3, #16]
     868:	str	r2, [r3, #12]
     86c:	pop	{r4, r5, r6, pc}
     870:	ldr	r3, [r5, #12]
     874:	mov	r0, #896	; 0x380
     878:	blx	r3
     87c:	subs	r1, r0, #0
     880:	beq	8b0 <nextScaffoldPart+0x120>
     884:	mov	r3, #32
     888:	str	r3, [r4, #172]	; 0xac
     88c:	b	7e8 <nextScaffoldPart+0x58>
     890:	ldr	r0, [r0, #484]	; 0x1e4
     894:	ldr	r3, [r5, #12]
     898:	lsl	r0, r0, #2
     89c:	blx	r3
     8a0:	cmp	r0, #0
     8a4:	str	r0, [r4, #184]	; 0xb8
     8a8:	strne	r6, [r0]
     8ac:	bne	7a8 <nextScaffoldPart+0x18>
     8b0:	mvn	r0, #0
     8b4:	pop	{r4, r5, r6, pc}

000008b8 <build_node>:
     8b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     8bc:	rsb	r1, r1, r1, lsl #3
     8c0:	ldr	sl, [r0, #364]	; 0x16c
     8c4:	lsl	r1, r1, #2
     8c8:	sub	sp, sp, #8
     8cc:	ldr	lr, [sl, #164]	; 0xa4
     8d0:	ldr	r7, [sp, #40]	; 0x28
     8d4:	add	ip, lr, r1
     8d8:	ldr	r1, [lr, r1]
     8dc:	ldr	lr, [ip, #4]
     8e0:	cmp	r1, #4
     8e4:	stm	r2, {r1, lr}
     8e8:	beq	978 <build_node+0xc0>
     8ec:	mov	r8, r3
     8f0:	ldr	r3, [ip, #20]
     8f4:	mov	r6, r2
     8f8:	ldr	r2, [r8]
     8fc:	add	r1, r3, r3, lsl #2
     900:	str	r2, [r6, #16]
     904:	ldr	r2, [r8]
     908:	cmp	r3, #0
     90c:	str	r3, [r6, #12]
     910:	add	r3, r2, r1, lsl #2
     914:	ldr	r4, [ip, #12]
     918:	mov	r9, r0
     91c:	str	r3, [r8]
     920:	movne	r5, #0
     924:	beq	968 <build_node+0xb0>
     928:	ldr	r3, [r6, #16]
     92c:	add	r2, r5, r5, lsl #2
     930:	mov	r1, r4
     934:	add	r2, r3, r2, lsl #2
     938:	str	r7, [sp]
     93c:	mov	r3, r8
     940:	mov	r0, r9
     944:	bl	8b8 <build_node>
     948:	rsb	r4, r4, r4, lsl #3
     94c:	ldr	r3, [sl, #164]	; 0xa4
     950:	ldr	r2, [r6, #12]
     954:	add	r5, r5, #1
     958:	add	r4, r3, r4, lsl #2
     95c:	cmp	r2, r5
     960:	ldr	r4, [r4, #24]
     964:	bhi	928 <build_node+0x70>
     968:	mov	r3, #0
     96c:	str	r3, [r6, #8]
     970:	add	sp, sp, #8
     974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     978:	ldr	r1, [r7]
     97c:	ldr	r3, [ip, #8]
     980:	str	r1, [r2, #8]
     984:	ldr	r1, [r7]
     988:	add	r0, r1, #1
     98c:	str	r0, [r7]
     990:	ldrb	r0, [r3]
     994:	strb	r0, [r1]
     998:	ldrb	r1, [r3]
     99c:	cmp	r1, #0
     9a0:	beq	9c4 <build_node+0x10c>
     9a4:	ldr	r1, [r7]
     9a8:	add	r0, r1, #1
     9ac:	str	r0, [r7]
     9b0:	ldrb	r0, [r3, #1]!
     9b4:	strb	r0, [r1]
     9b8:	ldrb	r1, [r3]
     9bc:	cmp	r1, #0
     9c0:	bne	9a4 <build_node+0xec>
     9c4:	mov	r3, #0
     9c8:	str	r3, [r2, #12]
     9cc:	str	r3, [r2, #16]
     9d0:	add	sp, sp, #8
     9d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000009d8 <lookup>:
     9d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9dc:	sub	sp, sp, #52	; 0x34
     9e0:	ldr	r8, [r1, #8]
     9e4:	mov	r7, r1
     9e8:	cmp	r8, #0
     9ec:	str	r0, [sp, #8]
     9f0:	mov	fp, r2
     9f4:	str	r3, [sp, #12]
     9f8:	bne	ae4 <lookup+0x10c>
     9fc:	cmp	r3, #0
     a00:	beq	d7c <lookup+0x3a4>
     a04:	ldr	r3, [r1, #16]
     a08:	mov	r2, #64	; 0x40
     a0c:	mov	r1, #6
     a10:	strb	r1, [r7, #4]
     a14:	str	r2, [r7, #8]
     a18:	ldr	r3, [r3]
     a1c:	mov	r0, #256	; 0x100
     a20:	blx	r3
     a24:	cmp	r0, #0
     a28:	mov	r5, r0
     a2c:	str	r0, [r7]
     a30:	streq	r0, [r7, #8]
     a34:	beq	ad8 <lookup+0x100>
     a38:	mov	r2, #256	; 0x100
     a3c:	mov	r1, r8
     a40:	bl	0 <memset>
     a44:	ldrb	r2, [fp]
     a48:	ldr	r3, [sp, #8]
     a4c:	cmp	r2, #0
     a50:	ldr	r3, [r3, #512]	; 0x200
     a54:	beq	a74 <lookup+0x9c>
     a58:	ldr	r0, [pc, #852]	; db4 <lookup+0x3dc>
     a5c:	mov	r1, fp
     a60:	mul	r3, r0, r3
     a64:	eor	r3, r3, r2
     a68:	ldrb	r2, [r1, #1]!
     a6c:	cmp	r2, #0
     a70:	bne	a60 <lookup+0x88>
     a74:	ldr	r6, [r7, #8]
     a78:	ldr	r9, [r7]
     a7c:	sub	r6, r6, #1
     a80:	and	r3, r3, r6
     a84:	lsl	r6, r3, #2
     a88:	add	r9, r9, r6
     a8c:	ldr	r3, [r7, #16]
     a90:	ldr	r4, [sp, #12]
     a94:	ldr	r3, [r3]
     a98:	mov	r0, r4
     a9c:	blx	r3
     aa0:	ldr	r3, [r7]
     aa4:	str	r0, [r9]
     aa8:	ldr	r0, [r3, r6]
     aac:	cmp	r0, #0
     ab0:	beq	d7c <lookup+0x3a4>
     ab4:	mov	r2, r4
     ab8:	mov	r1, #0
     abc:	bl	0 <memset>
     ac0:	ldr	r2, [r7]
     ac4:	ldr	r3, [r7, #12]
     ac8:	ldr	r5, [r2, r6]
     acc:	add	r3, r3, #1
     ad0:	str	fp, [r5]
     ad4:	str	r3, [r7, #12]
     ad8:	mov	r0, r5
     adc:	add	sp, sp, #52	; 0x34
     ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ae4:	ldrb	r1, [r2]
     ae8:	ldr	r3, [sp, #8]
     aec:	cmp	r1, #0
     af0:	ldr	r4, [r3, #512]	; 0x200
     af4:	beq	b14 <lookup+0x13c>
     af8:	ldr	r0, [pc, #692]	; db4 <lookup+0x3dc>
     afc:	mov	r3, r1
     b00:	mul	r4, r0, r4
     b04:	eor	r4, r4, r3
     b08:	ldrb	r3, [r2, #1]!
     b0c:	cmp	r3, #0
     b10:	bne	b00 <lookup+0x128>
     b14:	sub	r0, r8, #1
     b18:	rsb	sl, r8, #0
     b1c:	lsr	r3, r0, #2
     b20:	ldr	lr, [r7]
     b24:	and	r0, r0, r4
     b28:	and	sl, sl, r4
     b2c:	mov	ip, #0
     b30:	uxtb	r3, r3
     b34:	str	r3, [sp, #4]
     b38:	ldr	r5, [lr, r0, lsl #2]
     b3c:	lsl	r6, r0, #2
     b40:	cmp	r5, #0
     b44:	add	r9, lr, r6
     b48:	beq	bb0 <lookup+0x1d8>
     b4c:	ldr	r2, [r5]
     b50:	ldrb	r3, [r2]
     b54:	cmp	r3, r1
     b58:	bne	b84 <lookup+0x1ac>
     b5c:	cmp	r1, #0
     b60:	beq	ad8 <lookup+0x100>
     b64:	mov	r6, fp
     b68:	b	b74 <lookup+0x19c>
     b6c:	cmp	r3, #0
     b70:	beq	ad8 <lookup+0x100>
     b74:	ldrb	r9, [r6, #1]!
     b78:	ldrb	r3, [r2, #1]!
     b7c:	cmp	r3, r9
     b80:	beq	b6c <lookup+0x194>
     b84:	cmp	ip, #0
     b88:	bne	ba0 <lookup+0x1c8>
     b8c:	ldrb	ip, [r7, #4]
     b90:	ldr	r3, [sp, #4]
     b94:	sub	ip, ip, #1
     b98:	and	ip, r3, sl, lsr ip
     b9c:	orr	ip, ip, #1
     ba0:	cmp	r0, ip
     ba4:	addcc	r0, r0, r8
     ba8:	sub	r0, r0, ip
     bac:	b	b38 <lookup+0x160>
     bb0:	ldr	r3, [sp, #12]
     bb4:	cmp	r3, #0
     bb8:	beq	d7c <lookup+0x3a4>
     bbc:	ldrb	r3, [r7, #4]
     bc0:	ldr	r1, [r7, #12]
     bc4:	sub	r2, r3, #1
     bc8:	lsrs	r2, r1, r2
     bcc:	beq	a8c <lookup+0xb4>
     bd0:	add	r3, r3, #1
     bd4:	mov	r6, #4
     bd8:	uxtb	r3, r3
     bdc:	mov	r2, r3
     be0:	str	r3, [sp, #16]
     be4:	ldr	r3, [r7, #16]
     be8:	lsl	r6, r6, r2
     bec:	mov	sl, #1
     bf0:	mov	r0, r6
     bf4:	ldr	r3, [r3]
     bf8:	lsl	sl, sl, r2
     bfc:	blx	r3
     c00:	sub	r9, sl, #1
     c04:	subs	r8, r0, #0
     c08:	beq	d7c <lookup+0x3a4>
     c0c:	mov	r2, r6
     c10:	mov	r1, r5
     c14:	bl	0 <memset>
     c18:	ldr	r3, [r7, #8]
     c1c:	cmp	r3, #0
     c20:	beq	d8c <lookup+0x3b4>
     c24:	ldr	r2, [r7]
     c28:	lsr	r1, r9, #2
     c2c:	add	r3, r2, r3, lsl #2
     c30:	str	r2, [sp, #20]
     c34:	mov	r6, r2
     c38:	ldr	r2, [sp, #16]
     c3c:	mov	r5, r3
     c40:	uxtb	r3, r1
     c44:	sub	r2, r2, #1
     c48:	str	r3, [sp, #4]
     c4c:	ldr	lr, [pc, #352]	; db4 <lookup+0x3dc>
     c50:	rsb	r3, sl, #0
     c54:	str	r7, [sp, #40]	; 0x28
     c58:	str	fp, [sp, #44]	; 0x2c
     c5c:	mov	r7, r2
     c60:	mov	fp, r3
     c64:	str	r1, [sp, #28]
     c68:	str	r3, [sp, #32]
     c6c:	str	r2, [sp, #24]
     c70:	str	r4, [sp, #36]	; 0x24
     c74:	ldr	r4, [r6], #4
     c78:	cmp	r4, #0
     c7c:	beq	cf4 <lookup+0x31c>
     c80:	ldr	r1, [r4]
     c84:	ldr	r3, [sp, #8]
     c88:	ldrb	r2, [r1]
     c8c:	ldr	r3, [r3, #512]	; 0x200
     c90:	cmp	r2, #0
     c94:	beq	cac <lookup+0x2d4>
     c98:	mul	r3, lr, r3
     c9c:	eor	r3, r3, r2
     ca0:	ldrb	r2, [r1, #1]!
     ca4:	cmp	r2, #0
     ca8:	bne	c98 <lookup+0x2c0>
     cac:	and	ip, fp, r3
     cb0:	ldr	r2, [sp, #4]
     cb4:	and	r3, r3, r9
     cb8:	and	ip, r2, ip, lsr r7
     cbc:	mov	r2, #0
     cc0:	orr	ip, ip, #1
     cc4:	b	cdc <lookup+0x304>
     cc8:	cmp	r2, #0
     ccc:	moveq	r2, ip
     cd0:	cmp	r3, r2
     cd4:	subcc	r3, r0, r2
     cd8:	subcs	r3, r3, r2
     cdc:	ldr	r1, [r8, r3, lsl #2]
     ce0:	add	r0, r3, sl
     ce4:	cmp	r1, #0
     ce8:	add	r1, r8, r3, lsl #2
     cec:	bne	cc8 <lookup+0x2f0>
     cf0:	str	r4, [r1]
     cf4:	cmp	r6, r5
     cf8:	bne	c74 <lookup+0x29c>
     cfc:	add	r4, sp, #36	; 0x24
     d00:	ldm	r4, {r4, r7, fp}
     d04:	ldr	r3, [r7, #16]
     d08:	ldr	r0, [sp, #20]
     d0c:	ldr	r3, [r3, #8]
     d10:	blx	r3
     d14:	ldr	r1, [sp, #32]
     d18:	ldr	r2, [sp, #24]
     d1c:	and	r1, r1, r4
     d20:	ldr	r3, [sp, #28]
     d24:	str	r8, [r7]
     d28:	and	r1, r3, r1, lsr r2
     d2c:	ldrb	r3, [sp, #16]
     d30:	orr	r1, r1, #1
     d34:	str	sl, [r7, #8]
     d38:	strb	r3, [r7, #4]
     d3c:	uxtb	r1, r1
     d40:	and	r4, r4, r9
     d44:	mov	r3, #0
     d48:	b	d60 <lookup+0x388>
     d4c:	cmp	r3, #0
     d50:	moveq	r3, r1
     d54:	cmp	r4, r3
     d58:	subcc	r4, r2, r3
     d5c:	subcs	r4, r4, r3
     d60:	ldr	r2, [r8, r4, lsl #2]
     d64:	lsl	r6, r4, #2
     d68:	cmp	r2, #0
     d6c:	add	r9, r8, r6
     d70:	add	r2, r4, sl
     d74:	bne	d4c <lookup+0x374>
     d78:	b	a8c <lookup+0xb4>
     d7c:	mov	r5, #0
     d80:	mov	r0, r5
     d84:	add	sp, sp, #52	; 0x34
     d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d8c:	ldr	r3, [r7]
     d90:	str	r3, [sp, #20]
     d94:	lsr	r3, r9, #2
     d98:	str	r3, [sp, #28]
     d9c:	rsb	r3, sl, #0
     da0:	str	r3, [sp, #32]
     da4:	ldr	r3, [sp, #16]
     da8:	sub	r3, r3, #1
     dac:	str	r3, [sp, #24]
     db0:	b	d04 <lookup+0x32c>
     db4:	.word	0x000f4243

00000db8 <handleUnknownEncoding>:
     db8:	push	{r4, r5, r6, lr}
     dbc:	sub	sp, sp, #1040	; 0x410
     dc0:	ldr	r5, [r0, #132]	; 0x84
     dc4:	sub	sp, sp, #8
     dc8:	cmp	r5, #0
     dcc:	beq	e30 <handleUnknownEncoding+0x78>
     dd0:	add	ip, sp, #1024	; 0x400
     dd4:	add	r3, sp, #8
     dd8:	add	ip, ip, #8
     ddc:	mvn	r2, #0
     de0:	str	r2, [r3, #4]!
     de4:	cmp	r3, ip
     de8:	bne	de0 <handleUnknownEncoding+0x28>
     dec:	mov	r4, #0
     df0:	add	r3, sp, #12
     df4:	mov	r6, r0
     df8:	mov	r2, r3
     dfc:	str	r4, [sp, #1040]	; 0x410
     e00:	str	r4, [sp, #1036]	; 0x40c
     e04:	str	r4, [sp, #1044]	; 0x414
     e08:	ldr	r0, [r0, #256]	; 0x100
     e0c:	str	r3, [sp, #4]
     e10:	blx	r5
     e14:	cmp	r0, r4
     e18:	bne	e40 <handleUnknownEncoding+0x88>
     e1c:	ldr	r3, [sp, #1044]	; 0x414
     e20:	cmp	r3, #0
     e24:	beq	e30 <handleUnknownEncoding+0x78>
     e28:	ldr	r0, [sp, #1036]	; 0x40c
     e2c:	blx	r3
     e30:	mov	r0, #18
     e34:	add	sp, sp, #1040	; 0x410
     e38:	add	sp, sp, #8
     e3c:	pop	{r4, r5, r6, pc}
     e40:	ldr	r5, [r6, #12]
     e44:	bl	0 <coda_XmlSizeOfUnknownEncoding>
     e48:	blx	r5
     e4c:	cmp	r0, r4
     e50:	str	r0, [r6, #248]	; 0xf8
     e54:	beq	ea0 <handleUnknownEncoding+0xe8>
     e58:	ldrb	r2, [r6, #244]	; 0xf4
     e5c:	ldr	r3, [pc, #92]	; ec0 <handleUnknownEncoding+0x108>
     e60:	ldr	r5, [pc, #92]	; ec4 <handleUnknownEncoding+0x10c>
     e64:	cmp	r2, #0
     e68:	moveq	r5, r3
     e6c:	ldr	r1, [sp, #4]
     e70:	ldr	r3, [sp, #1036]	; 0x40c
     e74:	ldr	r2, [sp, #1040]	; 0x410
     e78:	blx	r5
     e7c:	cmp	r0, #0
     e80:	beq	e1c <handleUnknownEncoding+0x64>
     e84:	ldr	r2, [sp, #1036]	; 0x40c
     e88:	ldr	r3, [sp, #1044]	; 0x414
     e8c:	str	r0, [r6, #152]	; 0x98
     e90:	str	r2, [r6, #252]	; 0xfc
     e94:	mov	r0, r4
     e98:	str	r3, [r6, #260]	; 0x104
     e9c:	b	e34 <handleUnknownEncoding+0x7c>
     ea0:	ldr	r3, [sp, #1044]	; 0x414
     ea4:	cmp	r3, r4
     ea8:	moveq	r0, #1
     eac:	beq	e34 <handleUnknownEncoding+0x7c>
     eb0:	ldr	r0, [sp, #1036]	; 0x40c
     eb4:	blx	r3
     eb8:	mov	r0, #1
     ebc:	b	e34 <handleUnknownEncoding+0x7c>
	...

00000ec8 <poolGrow>:
     ec8:	ldr	r3, [r0, #4]
     ecc:	push	{r4, r5, r6, lr}
     ed0:	cmp	r3, #0
     ed4:	mov	r4, r0
     ed8:	ldr	r1, [r0, #16]
     edc:	beq	fe8 <poolGrow+0x120>
     ee0:	cmp	r1, #0
     ee4:	beq	ff4 <poolGrow+0x12c>
     ee8:	ldr	r2, [r0, #8]
     eec:	ldr	r0, [r3, #4]
     ef0:	sub	r2, r2, r1
     ef4:	cmp	r2, r0
     ef8:	blt	f9c <poolGrow+0xd4>
     efc:	ldr	r0, [r4]
     f00:	cmp	r0, #0
     f04:	beq	f14 <poolGrow+0x4c>
     f08:	add	r3, r0, #8
     f0c:	cmp	r1, r3
     f10:	beq	1028 <poolGrow+0x160>
     f14:	ldr	r3, [r4, #20]
     f18:	cmp	r2, #1024	; 0x400
     f1c:	lslge	r5, r2, #1
     f20:	movlt	r6, #1024	; 0x400
     f24:	addge	r0, r5, #8
     f28:	ldrlt	r0, [pc, #328]	; 1078 <poolGrow+0x1b0>
     f2c:	ldr	r3, [r3]
     f30:	movge	r6, r5
     f34:	movlt	r5, r6
     f38:	blx	r3
     f3c:	cmp	r0, #0
     f40:	beq	1020 <poolGrow+0x158>
     f44:	ldr	r3, [r4]
     f48:	ldr	r2, [r4, #12]
     f4c:	ldr	r1, [r4, #16]
     f50:	stm	r0, {r3, r5}
     f54:	cmp	r2, r1
     f58:	str	r0, [r4]
     f5c:	add	r3, r0, #8
     f60:	beq	f7c <poolGrow+0xb4>
     f64:	sub	r2, r2, r1
     f68:	mov	r0, r3
     f6c:	bl	0 <memcpy>
     f70:	ldr	r1, [r4, #12]
     f74:	ldr	r2, [r4, #16]
     f78:	mov	r3, r0
     f7c:	sub	r1, r1, r2
     f80:	add	r1, r3, r1
     f84:	add	r6, r3, r6
     f88:	mov	r0, #1
     f8c:	str	r1, [r4, #12]
     f90:	str	r6, [r4, #8]
     f94:	str	r3, [r4, #16]
     f98:	pop	{r4, r5, r6, pc}
     f9c:	ldr	ip, [r3]
     fa0:	ldr	r0, [r4]
     fa4:	str	r0, [r3]
     fa8:	stm	r4, {r3, ip}
     fac:	add	r0, r3, #8
     fb0:	bl	0 <memcpy>
     fb4:	ldr	r3, [r4]
     fb8:	ldr	r0, [r4, #16]
     fbc:	ldr	r2, [r4, #12]
     fc0:	ldr	r1, [r3, #4]
     fc4:	sub	r2, r2, r0
     fc8:	add	r3, r3, #8
     fcc:	add	r1, r3, r1
     fd0:	add	r2, r3, r2
     fd4:	str	r1, [r4, #8]
     fd8:	str	r2, [r4, #12]
     fdc:	str	r3, [r4, #16]
     fe0:	mov	r0, #1
     fe4:	pop	{r4, r5, r6, pc}
     fe8:	ldr	r2, [r0, #8]
     fec:	sub	r2, r2, r1
     ff0:	b	efc <poolGrow+0x34>
     ff4:	ldr	ip, [r3]
     ff8:	ldr	r0, [r3, #4]
     ffc:	mov	r2, r3
    1000:	stm	r4, {r3, ip}
    1004:	str	r1, [r2], #8
    1008:	add	r3, r2, r0
    100c:	str	r2, [r4, #16]
    1010:	str	r3, [r4, #8]
    1014:	str	r2, [r4, #12]
    1018:	mov	r0, #1
    101c:	pop	{r4, r5, r6, pc}
    1020:	mov	r0, #0
    1024:	pop	{r4, r5, r6, pc}
    1028:	ldr	r3, [r4, #20]
    102c:	lsl	r5, r2, #1
    1030:	add	r1, r5, #8
    1034:	ldr	r3, [r3, #4]
    1038:	blx	r3
    103c:	subs	r2, r0, #0
    1040:	beq	1020 <poolGrow+0x158>
    1044:	ldr	r0, [r4, #16]
    1048:	ldr	r3, [r4, #12]
    104c:	add	r1, r2, #8
    1050:	sub	r3, r3, r0
    1054:	add	ip, r1, r5
    1058:	add	r3, r1, r3
    105c:	str	r2, [r4]
    1060:	mov	r0, #1
    1064:	str	r5, [r2, #4]
    1068:	str	ip, [r4, #8]
    106c:	str	r3, [r4, #12]
    1070:	str	r1, [r4, #16]
    1074:	pop	{r4, r5, r6, pc}
    1078:	.word	0x00000408

0000107c <poolAppend>:
    107c:	push	{r4, r5, r6, r7, r8, lr}
    1080:	mov	r5, r1
    1084:	ldr	r1, [r0, #12]
    1088:	sub	sp, sp, #16
    108c:	cmp	r1, #0
    1090:	mov	r4, r0
    1094:	str	r2, [sp, #12]
    1098:	mov	r6, r3
    109c:	beq	10f0 <poolAppend+0x74>
    10a0:	add	r8, r4, #12
    10a4:	b	10b4 <poolAppend+0x38>
    10a8:	bl	ec8 <poolGrow>
    10ac:	cmp	r0, #0
    10b0:	beq	10fc <poolAppend+0x80>
    10b4:	ldr	r3, [r4, #8]
    10b8:	ldr	r7, [r5, #60]	; 0x3c
    10bc:	mov	r0, r5
    10c0:	str	r3, [sp]
    10c4:	mov	r2, r6
    10c8:	mov	r3, r8
    10cc:	add	r1, sp, #12
    10d0:	blx	r7
    10d4:	ldr	r3, [sp, #12]
    10d8:	mov	r0, r4
    10dc:	cmp	r6, r3
    10e0:	bne	10a8 <poolAppend+0x2c>
    10e4:	ldr	r0, [r4, #16]
    10e8:	add	sp, sp, #16
    10ec:	pop	{r4, r5, r6, r7, r8, pc}
    10f0:	bl	ec8 <poolGrow>
    10f4:	cmp	r0, #0
    10f8:	bne	10a0 <poolAppend+0x24>
    10fc:	mov	r0, #0
    1100:	add	sp, sp, #16
    1104:	pop	{r4, r5, r6, r7, r8, pc}

00001108 <poolStoreString>:
    1108:	push	{r4, lr}
    110c:	mov	r4, r0
    1110:	bl	107c <poolAppend>
    1114:	cmp	r0, #0
    1118:	beq	1158 <poolStoreString+0x50>
    111c:	ldr	r3, [r4, #12]
    1120:	ldr	r2, [r4, #8]
    1124:	cmp	r3, r2
    1128:	beq	1144 <poolStoreString+0x3c>
    112c:	add	r1, r3, #1
    1130:	mov	r2, #0
    1134:	str	r1, [r4, #12]
    1138:	strb	r2, [r3]
    113c:	ldr	r0, [r4, #16]
    1140:	pop	{r4, pc}
    1144:	mov	r0, r4
    1148:	bl	ec8 <poolGrow>
    114c:	cmp	r0, #0
    1150:	ldrne	r3, [r4, #12]
    1154:	bne	112c <poolStoreString+0x24>
    1158:	mov	r0, #0
    115c:	pop	{r4, pc}

00001160 <processXmlDecl>:
    1160:	push	{r4, r5, r6, r7, r8, lr}
    1164:	sub	sp, sp, #48	; 0x30
    1168:	ldrb	lr, [r0, #244]	; 0xf4
    116c:	ldr	ip, [pc, #740]	; 1458 <processXmlDecl+0x2f8>
    1170:	ldr	r8, [r0, #152]	; 0x98
    1174:	cmp	lr, #0
    1178:	mov	r4, r0
    117c:	add	r0, sp, #48	; 0x30
    1180:	ldr	r6, [pc, #724]	; 145c <processXmlDecl+0x2fc>
    1184:	add	r7, r4, #296	; 0x128
    1188:	movne	r6, ip
    118c:	mvn	lr, #0
    1190:	add	ip, sp, #32
    1194:	str	r7, [sp]
    1198:	str	lr, [r0, #-4]!
    119c:	add	lr, sp, #40	; 0x28
    11a0:	str	ip, [sp, #16]
    11a4:	add	ip, sp, #36	; 0x24
    11a8:	mov	r5, r1
    11ac:	add	r7, sp, #28
    11b0:	mov	r1, r8
    11b4:	str	r0, [sp, #20]
    11b8:	str	r7, [sp, #12]
    11bc:	stmib	sp, {ip, lr}
    11c0:	mov	r0, r5
    11c4:	mov	ip, #0
    11c8:	str	ip, [sp, #28]
    11cc:	str	ip, [sp, #32]
    11d0:	str	ip, [sp, #36]	; 0x24
    11d4:	mov	r7, r2
    11d8:	mov	r8, r3
    11dc:	blx	r6
    11e0:	cmp	r0, #0
    11e4:	bne	11fc <processXmlDecl+0x9c>
    11e8:	cmp	r5, #0
    11ec:	moveq	r0, #30
    11f0:	movne	r0, #31
    11f4:	add	sp, sp, #48	; 0x30
    11f8:	pop	{r4, r5, r6, r7, r8, pc}
    11fc:	cmp	r5, #0
    1200:	bne	1210 <processXmlDecl+0xb0>
    1204:	ldr	r3, [sp, #44]	; 0x2c
    1208:	cmp	r3, #1
    120c:	beq	1348 <processXmlDecl+0x1e8>
    1210:	ldr	r3, [r4, #148]	; 0x94
    1214:	cmp	r3, #0
    1218:	beq	1310 <processXmlDecl+0x1b0>
    121c:	ldr	r5, [sp, #28]
    1220:	cmp	r5, #0
    1224:	beq	1260 <processXmlDecl+0x100>
    1228:	ldr	r6, [r4, #152]	; 0x98
    122c:	mov	r1, r5
    1230:	mov	r0, r6
    1234:	ldr	r3, [r6, #32]
    1238:	blx	r3
    123c:	mov	r2, r5
    1240:	mov	r1, r6
    1244:	add	r3, r5, r0
    1248:	add	r0, r4, #456	; 0x1c8
    124c:	bl	1108 <poolStoreString>
    1250:	subs	r5, r0, #0
    1254:	ldrne	r3, [r4, #468]	; 0x1d4
    1258:	strne	r3, [r4, #472]	; 0x1d8
    125c:	beq	13c4 <processXmlDecl+0x264>
    1260:	ldr	r2, [sp, #36]	; 0x24
    1264:	cmp	r2, #0
    1268:	beq	13cc <processXmlDecl+0x26c>
    126c:	ldr	r1, [r4, #152]	; 0x98
    1270:	ldr	r0, [sp, #40]	; 0x28
    1274:	ldr	r3, [r1, #68]	; 0x44
    1278:	sub	r3, r0, r3
    127c:	add	r0, r4, #456	; 0x1c8
    1280:	bl	1108 <poolStoreString>
    1284:	subs	r6, r0, #0
    1288:	beq	13c4 <processXmlDecl+0x264>
    128c:	ldr	r3, [sp, #44]	; 0x2c
    1290:	ldr	r7, [r4, #148]	; 0x94
    1294:	mov	r2, r5
    1298:	mov	r1, r6
    129c:	ldr	r0, [r4, #4]
    12a0:	blx	r7
    12a4:	ldr	r3, [r4, #240]	; 0xf0
    12a8:	cmp	r3, #0
    12ac:	beq	1364 <processXmlDecl+0x204>
    12b0:	cmp	r6, #0
    12b4:	cmpeq	r5, #0
    12b8:	beq	133c <processXmlDecl+0x1dc>
    12bc:	ldr	r1, [r4, #460]	; 0x1cc
    12c0:	ldr	r3, [r4, #456]	; 0x1c8
    12c4:	cmp	r1, #0
    12c8:	beq	12f0 <processXmlDecl+0x190>
    12cc:	cmp	r3, #0
    12d0:	bne	12dc <processXmlDecl+0x17c>
    12d4:	b	12f4 <processXmlDecl+0x194>
    12d8:	mov	r3, r2
    12dc:	ldr	r2, [r3]
    12e0:	str	r1, [r3]
    12e4:	cmp	r2, #0
    12e8:	mov	r1, r3
    12ec:	bne	12d8 <processXmlDecl+0x178>
    12f0:	str	r3, [r4, #460]	; 0x1cc
    12f4:	mov	r0, #0
    12f8:	str	r0, [r4, #456]	; 0x1c8
    12fc:	str	r0, [r4, #472]	; 0x1d8
    1300:	str	r0, [r4, #468]	; 0x1d4
    1304:	str	r0, [r4, #464]	; 0x1d0
    1308:	add	sp, sp, #48	; 0x30
    130c:	pop	{r4, r5, r6, r7, r8, pc}
    1310:	ldr	r3, [r4, #88]	; 0x58
    1314:	cmp	r3, #0
    1318:	beq	1330 <processXmlDecl+0x1d0>
    131c:	mov	r3, r8
    1320:	mov	r2, r7
    1324:	ldr	r1, [r4, #152]	; 0x98
    1328:	mov	r0, r4
    132c:	bl	90 <reportDefault>
    1330:	ldr	r5, [r4, #240]	; 0xf0
    1334:	cmp	r5, #0
    1338:	beq	1360 <processXmlDecl+0x200>
    133c:	mov	r0, #0
    1340:	add	sp, sp, #48	; 0x30
    1344:	pop	{r4, r5, r6, r7, r8, pc}
    1348:	ldr	r2, [r4, #364]	; 0x16c
    134c:	strb	r3, [r2, #130]	; 0x82
    1350:	ldr	r3, [r4, #508]	; 0x1fc
    1354:	cmp	r3, #1
    1358:	streq	r5, [r4, #508]	; 0x1fc
    135c:	b	1210 <processXmlDecl+0xb0>
    1360:	mov	r6, r5
    1364:	ldr	r3, [sp, #32]
    1368:	cmp	r3, #0
    136c:	beq	13dc <processXmlDecl+0x27c>
    1370:	ldr	r2, [r4, #152]	; 0x98
    1374:	ldr	r1, [r3, #68]	; 0x44
    1378:	ldr	r2, [r2, #68]	; 0x44
    137c:	cmp	r1, r2
    1380:	beq	13d4 <processXmlDecl+0x274>
    1384:	ldr	r3, [sp, #28]
    1388:	mov	r0, #19
    138c:	str	r3, [r4, #296]	; 0x128
    1390:	b	11f4 <processXmlDecl+0x94>
    1394:	ldr	r5, [r4, #152]	; 0x98
    1398:	mov	r1, r7
    139c:	mov	r0, r5
    13a0:	ldr	r3, [r5, #32]
    13a4:	blx	r3
    13a8:	mov	r1, r5
    13ac:	mov	r2, r7
    13b0:	add	r3, r7, r0
    13b4:	add	r0, r4, #456	; 0x1c8
    13b8:	bl	1108 <poolStoreString>
    13bc:	subs	r5, r0, #0
    13c0:	bne	13f0 <processXmlDecl+0x290>
    13c4:	mov	r0, #1
    13c8:	b	11f4 <processXmlDecl+0x94>
    13cc:	mov	r6, r2
    13d0:	b	128c <processXmlDecl+0x12c>
    13d4:	str	r3, [r4, #152]	; 0x98
    13d8:	b	12b0 <processXmlDecl+0x150>
    13dc:	ldr	r7, [sp, #28]
    13e0:	cmp	r7, #0
    13e4:	beq	12b0 <processXmlDecl+0x150>
    13e8:	cmp	r5, #0
    13ec:	beq	1394 <processXmlDecl+0x234>
    13f0:	mov	r1, r5
    13f4:	mov	r0, r4
    13f8:	bl	db8 <handleUnknownEncoding>
    13fc:	ldr	r1, [r4, #460]	; 0x1cc
    1400:	ldr	r3, [r4, #456]	; 0x1c8
    1404:	cmp	r1, #0
    1408:	beq	1430 <processXmlDecl+0x2d0>
    140c:	cmp	r3, #0
    1410:	bne	141c <processXmlDecl+0x2bc>
    1414:	b	1434 <processXmlDecl+0x2d4>
    1418:	mov	r3, r2
    141c:	ldr	r2, [r3]
    1420:	str	r1, [r3]
    1424:	cmp	r2, #0
    1428:	mov	r1, r3
    142c:	bne	1418 <processXmlDecl+0x2b8>
    1430:	str	r3, [r4, #460]	; 0x1cc
    1434:	mov	r3, #0
    1438:	cmp	r0, #18
    143c:	str	r3, [r4, #456]	; 0x1c8
    1440:	str	r3, [r4, #472]	; 0x1d8
    1444:	str	r3, [r4, #468]	; 0x1d4
    1448:	str	r3, [r4, #464]	; 0x1d0
    144c:	ldreq	r3, [sp, #28]
    1450:	streq	r3, [r4, #296]	; 0x128
    1454:	b	11f4 <processXmlDecl+0x94>
	...

00001460 <getAttributeId>:
    1460:	push	{r4, r5, r6, r7, r8, r9, lr}
    1464:	mov	r6, r0
    1468:	ldr	r4, [r0, #364]	; 0x16c
    146c:	sub	sp, sp, #20
    1470:	ldr	r0, [r4, #92]	; 0x5c
    1474:	ldr	ip, [r4, #88]	; 0x58
    1478:	cmp	r0, ip
    147c:	beq	1584 <getAttributeId+0x124>
    1480:	add	r8, r4, #80	; 0x50
    1484:	add	lr, r0, #1
    1488:	mov	ip, #0
    148c:	str	lr, [r4, #92]	; 0x5c
    1490:	strb	ip, [r0]
    1494:	mov	r0, r8
    1498:	bl	1108 <poolStoreString>
    149c:	subs	r7, r0, #0
    14a0:	beq	15a0 <getAttributeId+0x140>
    14a4:	add	r5, r7, #1
    14a8:	mov	r2, r5
    14ac:	mov	r3, #12
    14b0:	add	r1, r4, #40	; 0x28
    14b4:	mov	r0, r6
    14b8:	bl	9d8 <lookup>
    14bc:	subs	r9, r0, #0
    14c0:	beq	15a0 <getAttributeId+0x140>
    14c4:	ldr	r3, [r9]
    14c8:	cmp	r5, r3
    14cc:	beq	14e4 <getAttributeId+0x84>
    14d0:	ldr	r3, [r4, #96]	; 0x60
    14d4:	str	r3, [r4, #92]	; 0x5c
    14d8:	mov	r0, r9
    14dc:	add	sp, sp, #20
    14e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    14e4:	ldr	r1, [r4, #92]	; 0x5c
    14e8:	str	r1, [r4, #96]	; 0x60
    14ec:	ldrb	r3, [r6, #244]	; 0xf4
    14f0:	cmp	r3, #0
    14f4:	beq	14d8 <getAttributeId+0x78>
    14f8:	ldrb	r3, [r7, #1]
    14fc:	cmp	r3, #120	; 0x78
    1500:	beq	15b0 <getAttributeId+0x150>
    1504:	cmp	r3, #0
    1508:	beq	14d8 <getAttributeId+0x78>
    150c:	cmp	r3, #58	; 0x3a
    1510:	beq	160c <getAttributeId+0x1ac>
    1514:	mov	r2, r5
    1518:	sub	r0, r2, r7
    151c:	ldrb	r3, [r2, #1]!
    1520:	mov	r5, r7
    1524:	cmp	r3, #0
    1528:	beq	14d8 <getAttributeId+0x78>
    152c:	cmp	r3, #58	; 0x3a
    1530:	bne	1518 <getAttributeId+0xb8>
    1534:	cmp	r0, #0
    1538:	ble	160c <getAttributeId+0x1ac>
    153c:	add	r7, r5, r0
    1540:	b	1560 <getAttributeId+0x100>
    1544:	add	r3, r1, #1
    1548:	str	r3, [r4, #92]	; 0x5c
    154c:	ldrb	r3, [r5, #1]!
    1550:	cmp	r5, r7
    1554:	strb	r3, [r1]
    1558:	ldr	r1, [r4, #92]	; 0x5c
    155c:	beq	160c <getAttributeId+0x1ac>
    1560:	ldr	r3, [r4, #88]	; 0x58
    1564:	cmp	r1, r3
    1568:	bne	1544 <getAttributeId+0xe4>
    156c:	mov	r0, r8
    1570:	bl	ec8 <poolGrow>
    1574:	cmp	r0, #0
    1578:	beq	15a0 <getAttributeId+0x140>
    157c:	ldr	r1, [r4, #92]	; 0x5c
    1580:	b	1544 <getAttributeId+0xe4>
    1584:	add	r8, r4, #80	; 0x50
    1588:	mov	r0, r8
    158c:	stmib	sp, {r1, r2, r3}
    1590:	bl	ec8 <poolGrow>
    1594:	ldmib	sp, {r1, r2, r3}
    1598:	cmp	r0, #0
    159c:	bne	15a8 <getAttributeId+0x148>
    15a0:	mov	r9, #0
    15a4:	b	14d8 <getAttributeId+0x78>
    15a8:	ldr	r0, [r4, #92]	; 0x5c
    15ac:	b	1484 <getAttributeId+0x24>
    15b0:	ldrb	r3, [r7, #2]
    15b4:	cmp	r3, #109	; 0x6d
    15b8:	bne	1514 <getAttributeId+0xb4>
    15bc:	ldrb	r3, [r7, #3]
    15c0:	cmp	r3, #108	; 0x6c
    15c4:	bne	1514 <getAttributeId+0xb4>
    15c8:	ldrb	r3, [r7, #4]
    15cc:	cmp	r3, #110	; 0x6e
    15d0:	bne	1514 <getAttributeId+0xb4>
    15d4:	ldrb	r3, [r7, #5]
    15d8:	cmp	r3, #115	; 0x73
    15dc:	bne	1514 <getAttributeId+0xb4>
    15e0:	ldrb	r3, [r7, #6]
    15e4:	cmp	r3, #58	; 0x3a
    15e8:	cmpne	r3, #0
    15ec:	bne	1514 <getAttributeId+0xb4>
    15f0:	cmp	r3, #0
    15f4:	bne	167c <getAttributeId+0x21c>
    15f8:	add	r4, r4, #152	; 0x98
    15fc:	str	r4, [r9, #4]
    1600:	mov	r3, #1
    1604:	strb	r3, [r9, #9]
    1608:	b	14d8 <getAttributeId+0x78>
    160c:	ldr	r3, [r4, #88]	; 0x58
    1610:	cmp	r1, r3
    1614:	beq	1664 <getAttributeId+0x204>
    1618:	add	r3, r1, #1
    161c:	mov	r2, #0
    1620:	str	r3, [r4, #92]	; 0x5c
    1624:	mov	r0, r6
    1628:	strb	r2, [r1]
    162c:	mov	r3, #8
    1630:	add	r1, r4, #60	; 0x3c
    1634:	ldr	r2, [r4, #96]	; 0x60
    1638:	bl	9d8 <lookup>
    163c:	cmp	r0, #0
    1640:	str	r0, [r9, #4]
    1644:	beq	15a0 <getAttributeId+0x140>
    1648:	ldr	r3, [r4, #96]	; 0x60
    164c:	ldr	r2, [r0]
    1650:	cmp	r2, r3
    1654:	strne	r3, [r4, #92]	; 0x5c
    1658:	ldreq	r3, [r4, #92]	; 0x5c
    165c:	streq	r3, [r4, #96]	; 0x60
    1660:	b	14d8 <getAttributeId+0x78>
    1664:	mov	r0, r8
    1668:	bl	ec8 <poolGrow>
    166c:	cmp	r0, #0
    1670:	beq	15a0 <getAttributeId+0x140>
    1674:	ldr	r1, [r4, #92]	; 0x5c
    1678:	b	1618 <getAttributeId+0x1b8>
    167c:	add	r2, r7, #7
    1680:	add	r1, r4, #60	; 0x3c
    1684:	mov	r0, r6
    1688:	mov	r3, #8
    168c:	bl	9d8 <lookup>
    1690:	str	r0, [r9, #4]
    1694:	b	1600 <getAttributeId+0x1a0>

00001698 <appendAttributeValue>:
    1698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    169c:	sub	sp, sp, #36	; 0x24
    16a0:	ldr	r8, [r0, #364]	; 0x16c
    16a4:	ldr	r4, [sp, #76]	; 0x4c
    16a8:	mov	r6, r3
    16ac:	mov	r7, r0
    16b0:	add	r3, r8, #80	; 0x50
    16b4:	mov	r5, r1
    16b8:	mov	r9, r2
    16bc:	mov	fp, #32
    16c0:	str	r3, [sp, #16]
    16c4:	add	r3, r0, #456	; 0x1c8
    16c8:	str	r3, [sp, #12]
    16cc:	ldr	sl, [r5, #16]
    16d0:	add	r3, sp, #24
    16d4:	ldr	r2, [sp, #72]	; 0x48
    16d8:	mov	r1, r6
    16dc:	mov	r0, r5
    16e0:	blx	sl
    16e4:	add	r0, r0, #4
    16e8:	cmp	r0, #43	; 0x2b
    16ec:	ldrls	pc, [pc, r0, lsl #2]
    16f0:	b	1940 <appendAttributeValue+0x2a8>
    16f4:	.word	0x000017f0
    16f8:	.word	0x000017a4
    16fc:	.word	0x00001940
    1700:	.word	0x000018dc
    1704:	.word	0x00001820
    1708:	.word	0x00001940
    170c:	.word	0x00001940
    1710:	.word	0x00001940
    1714:	.word	0x00001940
    1718:	.word	0x00001940
    171c:	.word	0x000017fc
    1720:	.word	0x000017b0
    1724:	.word	0x00001940
    1728:	.word	0x000018f8
    172c:	.word	0x00001838
    1730:	.word	0x00001940
    1734:	.word	0x00001940
    1738:	.word	0x00001940
    173c:	.word	0x00001940
    1740:	.word	0x00001940
    1744:	.word	0x00001940
    1748:	.word	0x00001940
    174c:	.word	0x00001940
    1750:	.word	0x00001940
    1754:	.word	0x00001940
    1758:	.word	0x00001940
    175c:	.word	0x00001940
    1760:	.word	0x00001940
    1764:	.word	0x00001940
    1768:	.word	0x00001940
    176c:	.word	0x00001940
    1770:	.word	0x00001940
    1774:	.word	0x00001940
    1778:	.word	0x00001940
    177c:	.word	0x00001940
    1780:	.word	0x00001940
    1784:	.word	0x00001940
    1788:	.word	0x00001940
    178c:	.word	0x00001940
    1790:	.word	0x00001940
    1794:	.word	0x00001940
    1798:	.word	0x00001940
    179c:	.word	0x00001940
    17a0:	.word	0x000017b0
    17a4:	ldr	r3, [r5, #68]	; 0x44
    17a8:	add	r6, r6, r3
    17ac:	str	r6, [sp, #24]
    17b0:	cmp	r9, #0
    17b4:	ldr	r3, [r4, #12]
    17b8:	bne	17d4 <appendAttributeValue+0x13c>
    17bc:	ldr	r2, [r4, #16]
    17c0:	cmp	r3, r2
    17c4:	beq	1818 <appendAttributeValue+0x180>
    17c8:	ldrb	r2, [r3, #-1]
    17cc:	cmp	r2, #32
    17d0:	beq	1818 <appendAttributeValue+0x180>
    17d4:	ldr	r2, [r4, #8]
    17d8:	cmp	r2, r3
    17dc:	beq	1a54 <appendAttributeValue+0x3bc>
    17e0:	add	r2, r3, #1
    17e4:	str	r2, [r4, #12]
    17e8:	strb	fp, [r3]
    17ec:	b	1818 <appendAttributeValue+0x180>
    17f0:	mov	r0, #0
    17f4:	add	sp, sp, #36	; 0x24
    17f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17fc:	mov	r2, r6
    1800:	ldr	r3, [sp, #24]
    1804:	mov	r1, r5
    1808:	mov	r0, r4
    180c:	bl	107c <poolAppend>
    1810:	cmp	r0, #0
    1814:	beq	1a68 <appendAttributeValue+0x3d0>
    1818:	ldr	r6, [sp, #24]
    181c:	b	16cc <appendAttributeValue+0x34>
    1820:	ldr	r3, [r7, #152]	; 0x98
    1824:	cmp	r5, r3
    1828:	beq	1a2c <appendAttributeValue+0x394>
    182c:	mov	r0, #4
    1830:	add	sp, sp, #36	; 0x24
    1834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1838:	ldr	r3, [r5, #44]	; 0x2c
    183c:	mov	r1, r6
    1840:	mov	r0, r5
    1844:	blx	r3
    1848:	cmp	r0, #0
    184c:	blt	1ab0 <appendAttributeValue+0x418>
    1850:	cmp	r9, #0
    1854:	cmpeq	r0, #32
    1858:	bne	1878 <appendAttributeValue+0x1e0>
    185c:	ldr	r3, [r4, #12]
    1860:	ldr	r2, [r4, #16]
    1864:	cmp	r3, r2
    1868:	beq	1818 <appendAttributeValue+0x180>
    186c:	ldrb	r3, [r3, #-1]
    1870:	cmp	r3, #32
    1874:	beq	1818 <appendAttributeValue+0x180>
    1878:	add	r1, sp, #28
    187c:	bl	0 <coda_XmlUtf8Encode>
    1880:	cmp	r0, #0
    1884:	beq	1ab0 <appendAttributeValue+0x418>
    1888:	addgt	r3, sp, #28
    188c:	addgt	sl, r3, r0
    1890:	movgt	r6, r3
    1894:	bgt	18b4 <appendAttributeValue+0x21c>
    1898:	b	1818 <appendAttributeValue+0x180>
    189c:	ldrb	r2, [r6], #1
    18a0:	add	r1, r3, #1
    18a4:	str	r1, [r4, #12]
    18a8:	cmp	r6, sl
    18ac:	strb	r2, [r3]
    18b0:	beq	1818 <appendAttributeValue+0x180>
    18b4:	ldr	r3, [r4, #12]
    18b8:	ldr	r2, [r4, #8]
    18bc:	cmp	r3, r2
    18c0:	bne	189c <appendAttributeValue+0x204>
    18c4:	mov	r0, r4
    18c8:	bl	ec8 <poolGrow>
    18cc:	cmp	r0, #0
    18d0:	beq	1a68 <appendAttributeValue+0x3d0>
    18d4:	ldr	r3, [r4, #12]
    18d8:	b	189c <appendAttributeValue+0x204>
    18dc:	ldr	r3, [r7, #152]	; 0x98
    18e0:	cmp	r5, r3
    18e4:	streq	r6, [r7, #296]	; 0x128
    18e8:	moveq	r0, #4
    18ec:	beq	17f4 <appendAttributeValue+0x15c>
    18f0:	mov	r0, #4
    18f4:	b	1830 <appendAttributeValue+0x198>
    18f8:	ldr	r3, [r5, #68]	; 0x44
    18fc:	ldr	r2, [sp, #24]
    1900:	add	r1, r6, r3
    1904:	sub	r2, r2, r3
    1908:	mov	r0, r5
    190c:	ldr	r3, [r5, #48]	; 0x30
    1910:	blx	r3
    1914:	uxtb	sl, r0
    1918:	cmp	sl, #0
    191c:	beq	1960 <appendAttributeValue+0x2c8>
    1920:	ldr	r3, [r4, #12]
    1924:	ldr	r2, [r4, #8]
    1928:	cmp	r3, r2
    192c:	beq	1a70 <appendAttributeValue+0x3d8>
    1930:	add	r2, r3, #1
    1934:	str	r2, [r4, #12]
    1938:	strb	sl, [r3]
    193c:	b	1818 <appendAttributeValue+0x180>
    1940:	ldr	r3, [r7, #152]	; 0x98
    1944:	cmp	r5, r3
    1948:	streq	r6, [r7, #296]	; 0x128
    194c:	moveq	r0, #23
    1950:	beq	17f4 <appendAttributeValue+0x15c>
    1954:	mov	r0, #23
    1958:	add	sp, sp, #36	; 0x24
    195c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1960:	ldr	r3, [r5, #68]	; 0x44
    1964:	ldr	r1, [sp, #24]
    1968:	add	r2, r6, r3
    196c:	ldr	r0, [sp, #12]
    1970:	sub	r3, r1, r3
    1974:	mov	r1, r5
    1978:	bl	1108 <poolStoreString>
    197c:	subs	r2, r0, #0
    1980:	beq	1a68 <appendAttributeValue+0x3d0>
    1984:	mov	r3, #0
    1988:	mov	r1, r8
    198c:	mov	r0, r7
    1990:	bl	9d8 <lookup>
    1994:	ldr	r2, [sp, #16]
    1998:	ldr	r3, [r7, #472]	; 0x1d8
    199c:	cmp	r4, r2
    19a0:	str	r3, [r7, #468]	; 0x1d4
    19a4:	mov	sl, r0
    19a8:	beq	1a88 <appendAttributeValue+0x3f0>
    19ac:	ldrb	r3, [r8, #129]	; 0x81
    19b0:	cmp	r3, #0
    19b4:	bne	1a3c <appendAttributeValue+0x3a4>
    19b8:	cmp	sl, #0
    19bc:	beq	1b28 <appendAttributeValue+0x490>
    19c0:	ldrb	r3, [sl, #34]	; 0x22
    19c4:	cmp	r3, #0
    19c8:	beq	1b20 <appendAttributeValue+0x488>
    19cc:	ldrb	r3, [sl, #32]
    19d0:	cmp	r3, #0
    19d4:	bne	1af0 <appendAttributeValue+0x458>
    19d8:	ldr	r3, [sl, #28]
    19dc:	cmp	r3, #0
    19e0:	str	r3, [sp, #20]
    19e4:	bne	1ad8 <appendAttributeValue+0x440>
    19e8:	ldr	r3, [sl, #4]
    19ec:	cmp	r3, #0
    19f0:	beq	1b08 <appendAttributeValue+0x470>
    19f4:	ldr	r2, [sl, #8]
    19f8:	mov	r1, #1
    19fc:	add	r2, r3, r2
    1a00:	strb	r1, [sl, #32]
    1a04:	mov	r0, r7
    1a08:	ldr	r1, [r7, #236]	; 0xec
    1a0c:	stm	sp, {r2, r4}
    1a10:	mov	r2, r9
    1a14:	bl	1698 <appendAttributeValue>
    1a18:	ldrb	r3, [sp, #20]
    1a1c:	strb	r3, [sl, #32]
    1a20:	cmp	r0, #0
    1a24:	beq	1818 <appendAttributeValue+0x180>
    1a28:	b	17f4 <appendAttributeValue+0x15c>
    1a2c:	ldr	r3, [sp, #24]
    1a30:	mov	r0, #4
    1a34:	str	r3, [r7, #296]	; 0x128
    1a38:	b	17f4 <appendAttributeValue+0x15c>
    1a3c:	ldrb	r3, [r8, #130]	; 0x82
    1a40:	cmp	r3, #0
    1a44:	bne	19b8 <appendAttributeValue+0x320>
    1a48:	cmp	sl, #0
    1a4c:	bne	19cc <appendAttributeValue+0x334>
    1a50:	b	1818 <appendAttributeValue+0x180>
    1a54:	mov	r0, r4
    1a58:	bl	ec8 <poolGrow>
    1a5c:	cmp	r0, #0
    1a60:	ldrne	r3, [r4, #12]
    1a64:	bne	17e0 <appendAttributeValue+0x148>
    1a68:	mov	r0, #1
    1a6c:	b	17f4 <appendAttributeValue+0x15c>
    1a70:	mov	r0, r4
    1a74:	bl	ec8 <poolGrow>
    1a78:	cmp	r0, #0
    1a7c:	beq	1a68 <appendAttributeValue+0x3d0>
    1a80:	ldr	r3, [r4, #12]
    1a84:	b	1930 <appendAttributeValue+0x298>
    1a88:	ldr	r3, [r7, #280]	; 0x118
    1a8c:	cmp	r3, #0
    1a90:	beq	1a48 <appendAttributeValue+0x3b0>
    1a94:	ldrb	r3, [r8, #130]	; 0x82
    1a98:	cmp	r3, #0
    1a9c:	beq	1ac8 <appendAttributeValue+0x430>
    1aa0:	ldr	r3, [r7, #308]	; 0x134
    1aa4:	cmp	r3, #0
    1aa8:	bne	1a48 <appendAttributeValue+0x3b0>
    1aac:	b	19b8 <appendAttributeValue+0x320>
    1ab0:	ldr	r3, [r7, #152]	; 0x98
    1ab4:	cmp	r5, r3
    1ab8:	streq	r6, [r7, #296]	; 0x128
    1abc:	moveq	r0, #14
    1ac0:	movne	r0, #14
    1ac4:	b	17f4 <appendAttributeValue+0x15c>
    1ac8:	ldrb	r3, [r8, #129]	; 0x81
    1acc:	cmp	r3, #0
    1ad0:	beq	19b8 <appendAttributeValue+0x320>
    1ad4:	b	1a48 <appendAttributeValue+0x3b0>
    1ad8:	ldr	r3, [r7, #152]	; 0x98
    1adc:	cmp	r5, r3
    1ae0:	streq	r6, [r7, #296]	; 0x128
    1ae4:	moveq	r0, #15
    1ae8:	movne	r0, #15
    1aec:	b	17f4 <appendAttributeValue+0x15c>
    1af0:	ldr	r3, [r7, #152]	; 0x98
    1af4:	cmp	r5, r3
    1af8:	streq	r6, [r7, #296]	; 0x128
    1afc:	moveq	r0, #12
    1b00:	movne	r0, #12
    1b04:	b	17f4 <appendAttributeValue+0x15c>
    1b08:	ldr	r3, [r7, #152]	; 0x98
    1b0c:	cmp	r5, r3
    1b10:	streq	r6, [r7, #296]	; 0x128
    1b14:	moveq	r0, #16
    1b18:	movne	r0, #16
    1b1c:	b	17f4 <appendAttributeValue+0x15c>
    1b20:	mov	r0, #24
    1b24:	b	17f4 <appendAttributeValue+0x15c>
    1b28:	mov	r0, #11
    1b2c:	b	17f4 <appendAttributeValue+0x15c>

00001b30 <storeEntityValue>:
    1b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b34:	mov	sl, r2
    1b38:	ldr	r4, [r0, #364]	; 0x16c
    1b3c:	sub	sp, sp, #36	; 0x24
    1b40:	mov	r7, #1
    1b44:	ldr	r2, [r4, #104]	; 0x68
    1b48:	mov	r8, r3
    1b4c:	cmp	r2, #0
    1b50:	add	r3, r4, #104	; 0x68
    1b54:	ldr	fp, [r0, #284]	; 0x11c
    1b58:	mov	r5, r0
    1b5c:	mov	r6, r1
    1b60:	str	r3, [sp, #12]
    1b64:	str	r7, [r0, #284]	; 0x11c
    1b68:	beq	1e1c <storeEntityValue+0x2ec>
    1b6c:	add	r3, r5, #432	; 0x1b0
    1b70:	str	r3, [sp, #16]
    1b74:	add	r3, r4, #132	; 0x84
    1b78:	str	r3, [sp, #20]
    1b7c:	ldr	r7, [r6, #20]
    1b80:	add	r3, sp, #24
    1b84:	mov	r2, r8
    1b88:	mov	r1, sl
    1b8c:	mov	r0, r6
    1b90:	blx	r7
    1b94:	add	r0, r0, #4
    1b98:	cmp	r0, #32
    1b9c:	ldrls	pc, [pc, r0, lsl #2]
    1ba0:	b	1e04 <storeEntityValue+0x2d4>
    1ba4:	.word	0x00001c5c
    1ba8:	.word	0x00001c28
    1bac:	.word	0x00001e04
    1bb0:	.word	0x00001ca4
    1bb4:	.word	0x00001c90
    1bb8:	.word	0x00001e04
    1bbc:	.word	0x00001e04
    1bc0:	.word	0x00001e04
    1bc4:	.word	0x00001e04
    1bc8:	.word	0x00001e04
    1bcc:	.word	0x00001c6c
    1bd0:	.word	0x00001c34
    1bd4:	.word	0x00001e04
    1bd8:	.word	0x00001c6c
    1bdc:	.word	0x00001d88
    1be0:	.word	0x00001e04
    1be4:	.word	0x00001e04
    1be8:	.word	0x00001e04
    1bec:	.word	0x00001e04
    1bf0:	.word	0x00001e04
    1bf4:	.word	0x00001e04
    1bf8:	.word	0x00001e04
    1bfc:	.word	0x00001e04
    1c00:	.word	0x00001e04
    1c04:	.word	0x00001e04
    1c08:	.word	0x00001e04
    1c0c:	.word	0x00001e04
    1c10:	.word	0x00001e04
    1c14:	.word	0x00001e04
    1c18:	.word	0x00001e04
    1c1c:	.word	0x00001e04
    1c20:	.word	0x00001e04
    1c24:	.word	0x00001cbc
    1c28:	ldr	r3, [r6, #68]	; 0x44
    1c2c:	add	sl, sl, r3
    1c30:	str	sl, [sp, #24]
    1c34:	ldr	r3, [r4, #116]	; 0x74
    1c38:	ldr	r2, [r4, #112]	; 0x70
    1c3c:	cmp	r2, r3
    1c40:	beq	1e50 <storeEntityValue+0x320>
    1c44:	add	r2, r3, #1
    1c48:	str	r2, [r4, #116]	; 0x74
    1c4c:	mov	r2, #10
    1c50:	strb	r2, [r3]
    1c54:	ldr	sl, [sp, #24]
    1c58:	b	1b7c <storeEntityValue+0x4c>
    1c5c:	mov	r0, #0
    1c60:	str	fp, [r5, #284]	; 0x11c
    1c64:	add	sp, sp, #36	; 0x24
    1c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c6c:	mov	r2, sl
    1c70:	ldr	r3, [sp, #24]
    1c74:	mov	r1, r6
    1c78:	ldr	r0, [sp, #12]
    1c7c:	bl	107c <poolAppend>
    1c80:	cmp	r0, #0
    1c84:	bne	1c54 <storeEntityValue+0x124>
    1c88:	mov	r0, #1
    1c8c:	b	1c60 <storeEntityValue+0x130>
    1c90:	ldr	r3, [r5, #152]	; 0x98
    1c94:	cmp	r6, r3
    1c98:	beq	1e34 <storeEntityValue+0x304>
    1c9c:	mov	r0, #4
    1ca0:	b	1c60 <storeEntityValue+0x130>
    1ca4:	ldr	r3, [r5, #152]	; 0x98
    1ca8:	cmp	r6, r3
    1cac:	streq	sl, [r5, #296]	; 0x128
    1cb0:	moveq	r0, #4
    1cb4:	movne	r0, #4
    1cb8:	b	1c60 <storeEntityValue+0x130>
    1cbc:	ldrb	r3, [r5, #504]	; 0x1f8
    1cc0:	cmp	r3, #0
    1cc4:	bne	1cd4 <storeEntityValue+0x1a4>
    1cc8:	ldr	r3, [r5, #152]	; 0x98
    1ccc:	cmp	r6, r3
    1cd0:	beq	1e44 <storeEntityValue+0x314>
    1cd4:	ldr	r3, [r6, #68]	; 0x44
    1cd8:	ldr	r1, [sp, #24]
    1cdc:	add	r2, sl, r3
    1ce0:	ldr	r0, [sp, #16]
    1ce4:	sub	r3, r1, r3
    1ce8:	mov	r1, r6
    1cec:	bl	1108 <poolStoreString>
    1cf0:	subs	r2, r0, #0
    1cf4:	beq	1c88 <storeEntityValue+0x158>
    1cf8:	mov	r3, #0
    1cfc:	ldr	r1, [sp, #20]
    1d00:	mov	r0, r5
    1d04:	bl	9d8 <lookup>
    1d08:	ldr	r3, [r5, #448]	; 0x1c0
    1d0c:	str	r3, [r5, #444]	; 0x1bc
    1d10:	subs	r7, r0, #0
    1d14:	beq	1eac <storeEntityValue+0x37c>
    1d18:	ldrb	r9, [r7, #32]
    1d1c:	cmp	r9, #0
    1d20:	bne	1ebc <storeEntityValue+0x38c>
    1d24:	ldr	sl, [r7, #16]
    1d28:	cmp	sl, #0
    1d2c:	beq	1e68 <storeEntityValue+0x338>
    1d30:	ldr	r3, [r5, #120]	; 0x78
    1d34:	subs	ip, r3, #0
    1d38:	beq	1d7c <storeEntityValue+0x24c>
    1d3c:	strb	r9, [r4, #131]	; 0x83
    1d40:	ldr	r1, [r7, #24]
    1d44:	mov	r3, #1
    1d48:	strb	r3, [r7, #32]
    1d4c:	ldr	r2, [r7, #20]
    1d50:	ldr	r0, [r5, #124]	; 0x7c
    1d54:	mov	r3, sl
    1d58:	str	r1, [sp]
    1d5c:	mov	r1, #0
    1d60:	blx	ip
    1d64:	cmp	r0, #0
    1d68:	beq	1ed4 <storeEntityValue+0x3a4>
    1d6c:	strb	r9, [r7, #32]
    1d70:	ldrb	r3, [r4, #131]	; 0x83
    1d74:	cmp	r3, #0
    1d78:	bne	1c54 <storeEntityValue+0x124>
    1d7c:	ldrb	r3, [r4, #130]	; 0x82
    1d80:	strb	r3, [r4, #128]	; 0x80
    1d84:	b	1c54 <storeEntityValue+0x124>
    1d88:	ldr	r3, [r6, #44]	; 0x2c
    1d8c:	mov	r1, sl
    1d90:	mov	r0, r6
    1d94:	blx	r3
    1d98:	cmp	r0, #0
    1d9c:	blt	1e94 <storeEntityValue+0x364>
    1da0:	add	r1, sp, #28
    1da4:	bl	0 <coda_XmlUtf8Encode>
    1da8:	cmp	r0, #0
    1dac:	beq	1e94 <storeEntityValue+0x364>
    1db0:	addgt	r3, sp, #28
    1db4:	addgt	r9, r3, r0
    1db8:	movgt	r7, r3
    1dbc:	bgt	1ddc <storeEntityValue+0x2ac>
    1dc0:	b	1c54 <storeEntityValue+0x124>
    1dc4:	add	r2, r3, #1
    1dc8:	str	r2, [r4, #116]	; 0x74
    1dcc:	ldrb	r2, [r7], #1
    1dd0:	cmp	r7, r9
    1dd4:	strb	r2, [r3]
    1dd8:	beq	1c54 <storeEntityValue+0x124>
    1ddc:	ldr	r3, [r4, #116]	; 0x74
    1de0:	ldr	r2, [r4, #112]	; 0x70
    1de4:	cmp	r2, r3
    1de8:	bne	1dc4 <storeEntityValue+0x294>
    1dec:	ldr	r0, [sp, #12]
    1df0:	bl	ec8 <poolGrow>
    1df4:	cmp	r0, #0
    1df8:	beq	1c88 <storeEntityValue+0x158>
    1dfc:	ldr	r3, [r4, #116]	; 0x74
    1e00:	b	1dc4 <storeEntityValue+0x294>
    1e04:	ldr	r3, [r5, #152]	; 0x98
    1e08:	cmp	r6, r3
    1e0c:	streq	sl, [r5, #296]	; 0x128
    1e10:	moveq	r0, #23
    1e14:	movne	r0, #23
    1e18:	b	1c60 <storeEntityValue+0x130>
    1e1c:	add	r0, r4, #104	; 0x68
    1e20:	bl	ec8 <poolGrow>
    1e24:	cmp	r0, #0
    1e28:	bne	1b6c <storeEntityValue+0x3c>
    1e2c:	mov	r0, r7
    1e30:	b	1c64 <storeEntityValue+0x134>
    1e34:	ldr	r3, [sp, #24]
    1e38:	mov	r0, #4
    1e3c:	str	r3, [r5, #296]	; 0x128
    1e40:	b	1c60 <storeEntityValue+0x130>
    1e44:	str	sl, [r5, #296]	; 0x128
    1e48:	mov	r0, #10
    1e4c:	b	1c60 <storeEntityValue+0x130>
    1e50:	ldr	r0, [sp, #12]
    1e54:	bl	ec8 <poolGrow>
    1e58:	cmp	r0, #0
    1e5c:	beq	1c88 <storeEntityValue+0x158>
    1e60:	ldr	r3, [r4, #116]	; 0x74
    1e64:	b	1c44 <storeEntityValue+0x114>
    1e68:	ldmib	r7, {r2, r3}
    1e6c:	mov	r1, #1
    1e70:	strb	r1, [r7, #32]
    1e74:	add	r3, r2, r3
    1e78:	ldr	r1, [r5, #236]	; 0xec
    1e7c:	mov	r0, r5
    1e80:	bl	1b30 <storeEntityValue>
    1e84:	strb	sl, [r7, #32]
    1e88:	cmp	r0, #0
    1e8c:	beq	1c54 <storeEntityValue+0x124>
    1e90:	b	1c60 <storeEntityValue+0x130>
    1e94:	ldr	r3, [r5, #152]	; 0x98
    1e98:	cmp	r6, r3
    1e9c:	streq	sl, [r5, #296]	; 0x128
    1ea0:	moveq	r0, #14
    1ea4:	movne	r0, #14
    1ea8:	b	1c60 <storeEntityValue+0x130>
    1eac:	ldrb	r3, [r4, #130]	; 0x82
    1eb0:	mov	r0, r7
    1eb4:	strb	r3, [r4, #128]	; 0x80
    1eb8:	b	1c60 <storeEntityValue+0x130>
    1ebc:	ldr	r3, [r5, #152]	; 0x98
    1ec0:	cmp	r6, r3
    1ec4:	streq	sl, [r5, #296]	; 0x128
    1ec8:	moveq	r0, #12
    1ecc:	movne	r0, #12
    1ed0:	b	1c60 <storeEntityValue+0x130>
    1ed4:	strb	r0, [r7, #32]
    1ed8:	mov	r0, #21
    1edc:	b	1c60 <storeEntityValue+0x130>

00001ee0 <entityValueProcessor>:
    1ee0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1ee4:	sub	sp, sp, #8
    1ee8:	add	r6, sp, #8
    1eec:	mov	r9, r0
    1ef0:	mov	r8, r1
    1ef4:	ldr	r4, [r0, #152]	; 0x98
    1ef8:	mov	r7, r2
    1efc:	mov	sl, r3
    1f00:	str	r1, [r6, #-4]!
    1f04:	b	1f0c <entityValueProcessor+0x2c>
    1f08:	ldr	r1, [sp, #4]
    1f0c:	ldr	r5, [r4]
    1f10:	mov	r3, r6
    1f14:	mov	r2, r7
    1f18:	mov	r0, r4
    1f1c:	blx	r5
    1f20:	cmp	r0, #0
    1f24:	bgt	1f08 <entityValueProcessor+0x28>
    1f28:	cmp	r0, #0
    1f2c:	ldrb	r3, [r9, #500]	; 0x1f4
    1f30:	clz	r3, r3
    1f34:	lsr	r3, r3, #5
    1f38:	moveq	r3, #0
    1f3c:	cmp	r3, #0
    1f40:	strne	r8, [sl]
    1f44:	movne	r0, #0
    1f48:	bne	1f80 <entityValueProcessor+0xa0>
    1f4c:	cmn	r0, #1
    1f50:	moveq	r0, #5
    1f54:	beq	1f80 <entityValueProcessor+0xa0>
    1f58:	cmp	r0, #0
    1f5c:	moveq	r0, #4
    1f60:	beq	1f80 <entityValueProcessor+0xa0>
    1f64:	cmn	r0, #2
    1f68:	beq	1f88 <entityValueProcessor+0xa8>
    1f6c:	mov	r3, r7
    1f70:	mov	r2, r8
    1f74:	mov	r1, r4
    1f78:	mov	r0, r9
    1f7c:	bl	1b30 <storeEntityValue>
    1f80:	add	sp, sp, #8
    1f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1f88:	mov	r0, #6
    1f8c:	add	sp, sp, #8
    1f90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00001f94 <entityValueInitProcessor>:
    1f94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1f98:	sub	sp, sp, #8
    1f9c:	mov	r4, r0
    1fa0:	add	r7, sp, #8
    1fa4:	mov	r8, r1
    1fa8:	mov	r6, r2
    1fac:	mov	r9, r3
    1fb0:	mov	r5, r1
    1fb4:	str	r1, [r4, #296]	; 0x128
    1fb8:	str	r1, [r7, #-4]!
    1fbc:	b	1fc8 <entityValueInitProcessor+0x34>
    1fc0:	mov	r5, r3
    1fc4:	str	r3, [r4, #296]	; 0x128
    1fc8:	ldr	r2, [r4, #152]	; 0x98
    1fcc:	mov	r3, r7
    1fd0:	mov	r0, r2
    1fd4:	ldr	sl, [r2]
    1fd8:	mov	r1, r5
    1fdc:	mov	r2, r6
    1fe0:	blx	sl
    1fe4:	ldr	r3, [sp, #4]
    1fe8:	str	r3, [r4, #300]	; 0x12c
    1fec:	cmp	r0, #0
    1ff0:	ble	2020 <entityValueInitProcessor+0x8c>
    1ff4:	cmp	r0, #12
    1ff8:	beq	2080 <entityValueInitProcessor+0xec>
    1ffc:	cmp	r6, r3
    2000:	cmpeq	r0, #14
    2004:	bne	1fc0 <entityValueInitProcessor+0x2c>
    2008:	ldrb	r0, [r4, #500]	; 0x1f4
    200c:	cmp	r0, #0
    2010:	bne	1fc0 <entityValueInitProcessor+0x2c>
    2014:	str	r3, [r9]
    2018:	add	sp, sp, #8
    201c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2020:	cmp	r0, #0
    2024:	ldrb	r3, [r4, #500]	; 0x1f4
    2028:	clz	r3, r3
    202c:	lsr	r3, r3, #5
    2030:	moveq	r3, #0
    2034:	cmp	r3, #0
    2038:	strne	r8, [r9]
    203c:	movne	r0, #0
    2040:	bne	2018 <entityValueInitProcessor+0x84>
    2044:	cmn	r0, #1
    2048:	moveq	r0, #5
    204c:	beq	2018 <entityValueInitProcessor+0x84>
    2050:	cmp	r0, #0
    2054:	moveq	r0, #4
    2058:	beq	2018 <entityValueInitProcessor+0x84>
    205c:	cmn	r0, #2
    2060:	beq	20bc <entityValueInitProcessor+0x128>
    2064:	mov	r3, r6
    2068:	mov	r2, r8
    206c:	ldr	r1, [r4, #152]	; 0x98
    2070:	mov	r0, r4
    2074:	bl	1b30 <storeEntityValue>
    2078:	add	sp, sp, #8
    207c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2080:	mov	r2, r5
    2084:	mov	r1, #0
    2088:	mov	r0, r4
    208c:	bl	1160 <processXmlDecl>
    2090:	cmp	r0, #0
    2094:	bne	2018 <entityValueInitProcessor+0x84>
    2098:	ldr	r3, [r4, #496]	; 0x1f0
    209c:	cmp	r3, #2
    20a0:	moveq	r0, #35	; 0x23
    20a4:	beq	2018 <entityValueInitProcessor+0x84>
    20a8:	cmp	r3, #3
    20ac:	bne	20c8 <entityValueInitProcessor+0x134>
    20b0:	ldr	r3, [sp, #4]
    20b4:	str	r3, [r9]
    20b8:	b	2018 <entityValueInitProcessor+0x84>
    20bc:	mov	r0, #6
    20c0:	add	sp, sp, #8
    20c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    20c8:	ldr	r1, [sp, #4]
    20cc:	ldr	r0, [pc, #24]	; 20ec <entityValueInitProcessor+0x158>
    20d0:	str	r1, [r9]
    20d4:	mov	r2, r6
    20d8:	str	r0, [r4, #288]	; 0x120
    20dc:	mov	r3, r9
    20e0:	mov	r0, r4
    20e4:	bl	1ee0 <entityValueProcessor>
    20e8:	b	2018 <entityValueInitProcessor+0x84>
    20ec:	.word	0x00000000

000020f0 <poolCopyString>:
    20f0:	push	{r4, r5, r6, lr}
    20f4:	mov	r4, r0
    20f8:	mov	r5, r1
    20fc:	b	211c <poolCopyString+0x2c>
    2100:	add	r2, r3, #1
    2104:	str	r2, [r4, #12]
    2108:	ldrb	r2, [r5]
    210c:	strb	r2, [r3]
    2110:	ldrb	r3, [r5], #1
    2114:	cmp	r3, #0
    2118:	beq	2144 <poolCopyString+0x54>
    211c:	ldr	r3, [r4, #12]
    2120:	ldr	r2, [r4, #8]
    2124:	cmp	r3, r2
    2128:	bne	2100 <poolCopyString+0x10>
    212c:	mov	r0, r4
    2130:	bl	ec8 <poolGrow>
    2134:	cmp	r0, #0
    2138:	popeq	{r4, r5, r6, pc}
    213c:	ldr	r3, [r4, #12]
    2140:	b	2100 <poolCopyString+0x10>
    2144:	ldr	r3, [r4, #12]
    2148:	ldr	r0, [r4, #16]
    214c:	str	r3, [r4, #16]
    2150:	pop	{r4, r5, r6, pc}

00002154 <parserInit>:
    2154:	ldr	r3, [pc, #340]	; 22b0 <parserInit+0x15c>
    2158:	push	{r4, r5, r6, r7, r8, lr}
    215c:	mov	r6, r1
    2160:	str	r3, [r0, #288]	; 0x120
    2164:	mov	r4, r0
    2168:	add	r0, r0, #264	; 0x108
    216c:	bl	0 <coda_XmlPrologStateInit>
    2170:	cmp	r6, #0
    2174:	beq	2188 <parserInit+0x34>
    2178:	mov	r1, r6
    217c:	add	r0, r4, #432	; 0x1b0
    2180:	bl	20f0 <poolCopyString>
    2184:	mov	r6, r0
    2188:	mov	r5, #0
    218c:	str	r6, [r4, #240]	; 0xf0
    2190:	mov	r2, r5
    2194:	add	r1, r4, #152	; 0x98
    2198:	str	r5, [r4, #368]	; 0x170
    219c:	add	r0, r4, #156	; 0x9c
    21a0:	bl	0 <coda_XmlInitEncoding>
    21a4:	mov	r6, #0
    21a8:	ldr	r2, [r4, #8]
    21ac:	mov	r7, #0
    21b0:	mov	r1, #1
    21b4:	str	r5, [r4]
    21b8:	str	r5, [r4, #4]
    21bc:	str	r5, [r4, #60]	; 0x3c
    21c0:	str	r5, [r4, #64]	; 0x40
    21c4:	str	r5, [r4, #68]	; 0x44
    21c8:	str	r5, [r4, #72]	; 0x48
    21cc:	str	r5, [r4, #76]	; 0x4c
    21d0:	str	r5, [r4, #80]	; 0x50
    21d4:	str	r5, [r4, #84]	; 0x54
    21d8:	str	r5, [r4, #88]	; 0x58
    21dc:	str	r5, [r4, #92]	; 0x5c
    21e0:	str	r5, [r4, #96]	; 0x60
    21e4:	str	r5, [r4, #100]	; 0x64
    21e8:	str	r5, [r4, #104]	; 0x68
    21ec:	str	r5, [r4, #108]	; 0x6c
    21f0:	str	r5, [r4, #112]	; 0x70
    21f4:	str	r5, [r4, #116]	; 0x74
    21f8:	str	r5, [r4, #120]	; 0x78
    21fc:	str	r5, [r4, #128]	; 0x80
    2200:	str	r5, [r4, #136]	; 0x88
    2204:	str	r5, [r4, #140]	; 0x8c
    2208:	str	r5, [r4, #144]	; 0x90
    220c:	str	r5, [r4, #148]	; 0x94
    2210:	str	r5, [r4, #48]	; 0x30
    2214:	str	r5, [r4, #352]	; 0x160
    2218:	str	r5, [r4, #356]	; 0x164
    221c:	str	r5, [r4, #324]	; 0x144
    2220:	str	r4, [r4, #124]	; 0x7c
    2224:	str	r2, [r4, #24]
    2228:	str	r2, [r4, #28]
    222c:	strd	r6, [r4, #40]	; 0x28
    2230:	str	r5, [r4, #328]	; 0x148
    2234:	str	r5, [r4, #332]	; 0x14c
    2238:	str	r5, [r4, #336]	; 0x150
    223c:	str	r5, [r4, #340]	; 0x154
    2240:	str	r5, [r4, #344]	; 0x158
    2244:	str	r5, [r4, #348]	; 0x15c
    2248:	strb	r5, [r4, #360]	; 0x168
    224c:	strb	r5, [r4, #361]	; 0x169
    2250:	str	r5, [r4, #416]	; 0x1a0
    2254:	str	r5, [r4, #420]	; 0x1a4
    2258:	str	r5, [r4, #424]	; 0x1a8
    225c:	str	r5, [r4, #428]	; 0x1ac
    2260:	str	r5, [r4, #292]	; 0x124
    2264:	str	r5, [r4, #296]	; 0x128
    2268:	str	r5, [r4, #300]	; 0x12c
    226c:	str	r5, [r4, #304]	; 0x130
    2270:	str	r5, [r4, #308]	; 0x134
    2274:	str	r5, [r4, #320]	; 0x140
    2278:	str	r5, [r4, #372]	; 0x174
    227c:	str	r5, [r4, #380]	; 0x17c
    2280:	str	r5, [r4, #392]	; 0x188
    2284:	str	r5, [r4, #248]	; 0xf8
    2288:	str	r5, [r4, #260]	; 0x104
    228c:	str	r5, [r4, #252]	; 0xfc
    2290:	str	r5, [r4, #492]	; 0x1ec
    2294:	str	r5, [r4, #496]	; 0x1f0
    2298:	strb	r5, [r4, #504]	; 0x1f8
    229c:	strb	r5, [r4, #505]	; 0x1f9
    22a0:	str	r5, [r4, #508]	; 0x1fc
    22a4:	str	r5, [r4, #512]	; 0x200
    22a8:	strb	r1, [r4, #316]	; 0x13c
    22ac:	pop	{r4, r5, r6, r7, r8, pc}
    22b0:	.word	0x00000000

000022b4 <defineAttribute.isra.2>:
    22b4:	push	{r4, r5, r6, r7, r8, lr}
    22b8:	ldr	r6, [sp, #24]
    22bc:	ldr	lr, [r0, #12]
    22c0:	cmp	r3, #0
    22c4:	cmpeq	r6, #0
    22c8:	beq	230c <defineAttribute.isra.2+0x58>
    22cc:	cmp	lr, #0
    22d0:	ble	2304 <defineAttribute.isra.2+0x50>
    22d4:	ldr	r4, [r0, #20]
    22d8:	ldr	ip, [r4]
    22dc:	cmp	r1, ip
    22e0:	movne	ip, #0
    22e4:	bne	22f8 <defineAttribute.isra.2+0x44>
    22e8:	b	235c <defineAttribute.isra.2+0xa8>
    22ec:	ldr	r5, [r4, #12]!
    22f0:	cmp	r5, r1
    22f4:	beq	235c <defineAttribute.isra.2+0xa8>
    22f8:	add	ip, ip, #1
    22fc:	cmp	ip, lr
    2300:	bne	22ec <defineAttribute.isra.2+0x38>
    2304:	cmp	r3, #0
    2308:	bne	2398 <defineAttribute.isra.2+0xe4>
    230c:	ldr	r3, [r0, #16]
    2310:	mov	r7, r2
    2314:	cmp	r3, lr
    2318:	mov	r4, r1
    231c:	mov	r5, r0
    2320:	beq	2364 <defineAttribute.isra.2+0xb0>
    2324:	ldr	r0, [r0, #20]
    2328:	add	r3, lr, lr, lsl #1
    232c:	cmp	r7, #0
    2330:	lsl	r3, r3, #2
    2334:	add	r2, r0, r3
    2338:	str	r4, [r0, r3]
    233c:	add	lr, lr, #1
    2340:	moveq	r3, #1
    2344:	str	r6, [r2, #8]
    2348:	strb	r7, [r2, #4]
    234c:	mov	r0, #1
    2350:	strbeq	r3, [r4, #8]
    2354:	str	lr, [r5, #12]
    2358:	pop	{r4, r5, r6, r7, r8, pc}
    235c:	mov	r0, #1
    2360:	pop	{r4, r5, r6, r7, r8, pc}
    2364:	cmp	lr, #0
    2368:	bne	23b4 <defineAttribute.isra.2+0x100>
    236c:	mov	r3, #8
    2370:	str	r3, [r0, #16]
    2374:	ldr	r3, [sp, #28]
    2378:	mov	r0, #96	; 0x60
    237c:	ldr	r3, [r3]
    2380:	blx	r3
    2384:	cmp	r0, #0
    2388:	str	r0, [r5, #20]
    238c:	beq	23e4 <defineAttribute.isra.2+0x130>
    2390:	ldr	lr, [r5, #12]
    2394:	b	2328 <defineAttribute.isra.2+0x74>
    2398:	ldr	r3, [r0, #8]
    239c:	cmp	r3, #0
    23a0:	bne	230c <defineAttribute.isra.2+0x58>
    23a4:	ldrb	r3, [r1, #9]
    23a8:	cmp	r3, #0
    23ac:	streq	r1, [r0, #8]
    23b0:	b	230c <defineAttribute.isra.2+0x58>
    23b4:	lsl	r8, lr, #1
    23b8:	ldr	r3, [sp, #32]
    23bc:	add	r1, r8, lr, lsl #2
    23c0:	ldr	r0, [r0, #20]
    23c4:	ldr	r3, [r3]
    23c8:	lsl	r1, r1, #2
    23cc:	blx	r3
    23d0:	cmp	r0, #0
    23d4:	ldrne	lr, [r5, #12]
    23d8:	strne	r8, [r5, #16]
    23dc:	strne	r0, [r5, #20]
    23e0:	bne	2328 <defineAttribute.isra.2+0x74>
    23e4:	mov	r0, #0
    23e8:	pop	{r4, r5, r6, r7, r8, pc}

000023ec <initializeEncoding>:
    23ec:	push	{r4, lr}
    23f0:	mov	r4, r0
    23f4:	ldrb	r0, [r0, #244]	; 0xf4
    23f8:	ldr	r1, [pc, #56]	; 2438 <initializeEncoding+0x4c>
    23fc:	ldr	r3, [pc, #56]	; 243c <initializeEncoding+0x50>
    2400:	cmp	r0, #0
    2404:	moveq	r3, r1
    2408:	ldr	r2, [r4, #240]	; 0xf0
    240c:	add	r1, r4, #152	; 0x98
    2410:	add	r0, r4, #156	; 0x9c
    2414:	blx	r3
    2418:	cmp	r0, #0
    241c:	beq	2428 <initializeEncoding+0x3c>
    2420:	mov	r0, #0
    2424:	pop	{r4, pc}
    2428:	ldr	r1, [r4, #240]	; 0xf0
    242c:	mov	r0, r4
    2430:	pop	{r4, lr}
    2434:	b	db8 <handleUnknownEncoding>
	...

00002440 <addBinding.part.8>:
    2440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2444:	sub	sp, sp, #12
    2448:	str	r0, [sp]
    244c:	ldr	r0, [r1]
    2450:	str	r2, [sp, #4]
    2454:	cmp	r0, #0
    2458:	beq	2468 <addBinding.part.8+0x28>
    245c:	ldrb	r2, [r0]
    2460:	cmp	r2, #120	; 0x78
    2464:	beq	2618 <addBinding.part.8+0x1d8>
    2468:	ldrb	lr, [r3]
    246c:	cmp	lr, #0
    2470:	movne	r0, #0
    2474:	beq	265c <addBinding.part.8+0x21c>
    2478:	ldr	sl, [pc, #652]	; 270c <addBinding.part.8+0x2cc>
    247c:	mov	ip, #1
    2480:	mov	r4, #0
    2484:	add	fp, sl, #40	; 0x28
    2488:	mov	r2, ip
    248c:	mov	r8, r4
    2490:	eor	r6, r0, ip
    2494:	mov	r5, r3
    2498:	eor	r2, r2, #1
    249c:	cmp	r4, #36	; 0x24
    24a0:	orrgt	r2, r2, #1
    24a4:	cmp	r2, #0
    24a8:	movne	r2, r8
    24ac:	ldrbeq	r2, [r4, sl]
    24b0:	movne	r9, #0
    24b4:	subeq	r2, r2, lr
    24b8:	clzeq	r2, r2
    24bc:	lsreq	r2, r2, #5
    24c0:	moveq	r9, r2
    24c4:	ands	r7, r6, ip
    24c8:	andeq	r7, ip, #1
    24cc:	beq	24f4 <addBinding.part.8+0xb4>
    24d0:	cmp	r4, #29
    24d4:	bgt	24ec <addBinding.part.8+0xac>
    24d8:	ldrb	ip, [r4, fp]
    24dc:	cmp	ip, lr
    24e0:	moveq	ip, r7
    24e4:	moveq	r7, #1
    24e8:	beq	24f4 <addBinding.part.8+0xb4>
    24ec:	mov	ip, r8
    24f0:	mov	r7, #0
    24f4:	ldrb	lr, [r5, #1]!
    24f8:	add	r4, r4, #1
    24fc:	cmp	lr, #0
    2500:	bne	2498 <addBinding.part.8+0x58>
    2504:	cmp	r4, #36	; 0x24
    2508:	movne	r9, #0
    250c:	andeq	r9, r9, #1
    2510:	cmp	r9, r0
    2514:	beq	252c <addBinding.part.8+0xec>
    2518:	cmp	r0, #0
    251c:	moveq	r0, #40	; 0x28
    2520:	movne	r0, #38	; 0x26
    2524:	add	sp, sp, #12
    2528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    252c:	cmp	r4, #29
    2530:	movne	r7, #0
    2534:	andeq	r7, r7, #1
    2538:	cmp	r7, #0
    253c:	movne	r0, #40	; 0x28
    2540:	bne	2524 <addBinding.part.8+0xe4>
    2544:	ldr	r2, [sp]
    2548:	ldr	r7, [sp]
    254c:	mov	r8, r3
    2550:	ldrb	r2, [r2, #488]	; 0x1e8
    2554:	ldr	r6, [r7, #384]	; 0x180
    2558:	ldr	r5, [sp, #4]
    255c:	cmp	r2, #0
    2560:	addne	r4, r4, #1
    2564:	cmp	r6, #0
    2568:	mov	r9, r1
    256c:	beq	26a4 <addBinding.part.8+0x264>
    2570:	ldr	r3, [r6, #24]
    2574:	cmp	r3, r4
    2578:	blt	267c <addBinding.part.8+0x23c>
    257c:	ldr	r0, [r6, #16]
    2580:	ldr	r3, [r6, #4]
    2584:	str	r3, [r7, #384]	; 0x180
    2588:	mov	r2, r4
    258c:	str	r4, [r6, #20]
    2590:	mov	r1, r8
    2594:	bl	0 <memcpy>
    2598:	ldrb	r3, [r7, #488]	; 0x1e8
    259c:	cmp	r3, #0
    25a0:	ldrne	r2, [r6, #16]
    25a4:	addne	r4, r2, r4
    25a8:	strbne	r3, [r4, #-1]
    25ac:	ldr	r3, [r9, #4]
    25b0:	str	r9, [r6]
    25b4:	str	r5, [r6, #12]
    25b8:	str	r3, [r6, #8]
    25bc:	ldrb	r2, [r8]
    25c0:	cmp	r2, #0
    25c4:	beq	2664 <addBinding.part.8+0x224>
    25c8:	str	r6, [r9, #4]
    25cc:	ldr	r3, [sp, #48]	; 0x30
    25d0:	cmp	r5, #0
    25d4:	ldr	r3, [r3]
    25d8:	str	r3, [r6, #4]
    25dc:	ldr	r3, [sp, #48]	; 0x30
    25e0:	str	r6, [r3]
    25e4:	beq	2610 <addBinding.part.8+0x1d0>
    25e8:	ldr	r4, [r7, #108]	; 0x6c
    25ec:	cmp	r4, #0
    25f0:	beq	2610 <addBinding.part.8+0x1d0>
    25f4:	ldr	r2, [r9, #4]
    25f8:	ldr	r0, [r7, #4]
    25fc:	cmp	r2, #0
    2600:	movne	r2, r8
    2604:	moveq	r2, #0
    2608:	ldr	r1, [r9]
    260c:	blx	r4
    2610:	mov	r0, #0
    2614:	b	2524 <addBinding.part.8+0xe4>
    2618:	ldrb	r2, [r0, #1]
    261c:	cmp	r2, #109	; 0x6d
    2620:	bne	2468 <addBinding.part.8+0x28>
    2624:	ldrb	r2, [r0, #2]
    2628:	cmp	r2, #108	; 0x6c
    262c:	bne	2468 <addBinding.part.8+0x28>
    2630:	ldrb	r2, [r0, #3]
    2634:	cmp	r2, #110	; 0x6e
    2638:	beq	26ec <addBinding.part.8+0x2ac>
    263c:	ldrb	lr, [r3]
    2640:	clz	r0, r2
    2644:	lsr	r0, r0, #5
    2648:	cmp	lr, #0
    264c:	bne	2478 <addBinding.part.8+0x38>
    2650:	cmp	r2, #0
    2654:	moveq	r0, #38	; 0x26
    2658:	beq	2524 <addBinding.part.8+0xe4>
    265c:	mov	r4, lr
    2660:	b	2544 <addBinding.part.8+0x104>
    2664:	ldr	r3, [r7, #364]	; 0x16c
    2668:	add	r3, r3, #152	; 0x98
    266c:	cmp	r9, r3
    2670:	streq	r2, [r9, #4]
    2674:	bne	25c8 <addBinding.part.8+0x188>
    2678:	b	25cc <addBinding.part.8+0x18c>
    267c:	add	sl, r4, #24
    2680:	mov	r1, sl
    2684:	ldr	r3, [r7, #16]
    2688:	ldr	r0, [r6, #16]
    268c:	blx	r3
    2690:	cmp	r0, #0
    2694:	beq	26e4 <addBinding.part.8+0x2a4>
    2698:	str	r0, [r6, #16]
    269c:	str	sl, [r6, #24]
    26a0:	b	2580 <addBinding.part.8+0x140>
    26a4:	ldr	r3, [r7, #12]
    26a8:	mov	r0, #28
    26ac:	blx	r3
    26b0:	subs	r6, r0, #0
    26b4:	beq	26e4 <addBinding.part.8+0x2a4>
    26b8:	add	sl, r4, #24
    26bc:	mov	r0, sl
    26c0:	ldr	r3, [r7, #12]
    26c4:	blx	r3
    26c8:	cmp	r0, #0
    26cc:	str	r0, [r6, #16]
    26d0:	strne	sl, [r6, #24]
    26d4:	bne	2588 <addBinding.part.8+0x148>
    26d8:	ldr	r3, [r7, #20]
    26dc:	mov	r0, r6
    26e0:	blx	r3
    26e4:	mov	r0, #1
    26e8:	b	2524 <addBinding.part.8+0xe4>
    26ec:	ldrb	r2, [r0, #4]
    26f0:	cmp	r2, #115	; 0x73
    26f4:	bne	2468 <addBinding.part.8+0x28>
    26f8:	ldrb	r2, [r0, #5]
    26fc:	cmp	r2, #0
    2700:	moveq	r0, #39	; 0x27
    2704:	beq	2524 <addBinding.part.8+0xe4>
    2708:	b	2468 <addBinding.part.8+0x28>
    270c:	.word	0x00000000

00002710 <setContext>:
    2710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2714:	mov	r5, r1
    2718:	ldr	r6, [r0, #364]	; 0x16c
    271c:	sub	sp, sp, #20
    2720:	mov	r4, r0
    2724:	add	sl, r6, #60	; 0x3c
    2728:	add	r8, r0, #432	; 0x1b0
    272c:	mov	r7, #0
    2730:	mov	r9, #8
    2734:	mov	fp, r5
    2738:	ldrb	r3, [r1]
    273c:	add	r2, r6, #80	; 0x50
    2740:	add	r1, r0, #380	; 0x17c
    2744:	str	r2, [sp, #12]
    2748:	str	r1, [sp, #8]
    274c:	cmp	r3, #0
    2750:	beq	27c4 <setContext+0xb4>
    2754:	ldrb	r3, [r5]
    2758:	cmp	r3, #0
    275c:	cmpne	r3, #12
    2760:	bne	27d0 <setContext+0xc0>
    2764:	ldr	r2, [r4, #444]	; 0x1bc
    2768:	ldr	r3, [r4, #440]	; 0x1b8
    276c:	cmp	r2, r3
    2770:	beq	2940 <setContext+0x230>
    2774:	add	r3, r2, #1
    2778:	str	r3, [r4, #444]	; 0x1bc
    277c:	mov	r1, r6
    2780:	mov	r3, #0
    2784:	strb	r7, [r2]
    2788:	mov	r0, r4
    278c:	ldr	r2, [r4, #448]	; 0x1c0
    2790:	bl	9d8 <lookup>
    2794:	cmp	r0, #0
    2798:	movne	r3, #1
    279c:	strbne	r3, [r0, #32]
    27a0:	ldrb	r3, [r5]
    27a4:	cmp	r3, #0
    27a8:	addne	r5, r5, #1
    27ac:	ldr	r3, [r4, #448]	; 0x1c0
    27b0:	mov	fp, r5
    27b4:	str	r3, [r4, #444]	; 0x1bc
    27b8:	ldrb	r3, [r5]
    27bc:	cmp	r3, #0
    27c0:	bne	2754 <setContext+0x44>
    27c4:	mov	r0, #1
    27c8:	add	sp, sp, #20
    27cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27d0:	cmp	r3, #61	; 0x3d
    27d4:	beq	2800 <setContext+0xf0>
    27d8:	ldr	r3, [r4, #444]	; 0x1bc
    27dc:	ldr	r1, [r4, #440]	; 0x1b8
    27e0:	cmp	r3, r1
    27e4:	beq	2958 <setContext+0x248>
    27e8:	add	r1, r3, #1
    27ec:	str	r1, [r4, #444]	; 0x1bc
    27f0:	ldrb	r1, [r5], #1
    27f4:	strb	r1, [r3]
    27f8:	ldrb	r3, [fp]
    27fc:	b	274c <setContext+0x3c>
    2800:	ldr	r1, [r4, #444]	; 0x1bc
    2804:	ldr	r3, [r4, #448]	; 0x1c0
    2808:	cmp	r1, r3
    280c:	addeq	fp, r6, #152	; 0x98
    2810:	beq	285c <setContext+0x14c>
    2814:	ldr	r3, [r4, #440]	; 0x1b8
    2818:	cmp	r1, r3
    281c:	beq	2970 <setContext+0x260>
    2820:	add	r3, r1, #1
    2824:	str	r3, [r4, #444]	; 0x1bc
    2828:	mov	r0, r4
    282c:	strb	r7, [r1]
    2830:	mov	r3, r9
    2834:	mov	r1, sl
    2838:	ldr	r2, [r4, #448]	; 0x1c0
    283c:	bl	9d8 <lookup>
    2840:	subs	fp, r0, #0
    2844:	beq	28f0 <setContext+0x1e0>
    2848:	ldr	r1, [r4, #448]	; 0x1c0
    284c:	ldr	r3, [fp]
    2850:	cmp	r3, r1
    2854:	beq	2988 <setContext+0x278>
    2858:	str	r1, [r4, #444]	; 0x1bc
    285c:	ldrb	r3, [r5, #1]
    2860:	add	r5, r5, #1
    2864:	cmp	r3, #0
    2868:	cmpne	r3, #12
    286c:	bne	2898 <setContext+0x188>
    2870:	b	28bc <setContext+0x1ac>
    2874:	add	r3, r1, #1
    2878:	str	r3, [r4, #444]	; 0x1bc
    287c:	ldrb	r3, [r5]
    2880:	strb	r3, [r1]
    2884:	ldrb	r3, [r5, #1]!
    2888:	ldr	r1, [r4, #444]	; 0x1bc
    288c:	cmp	r3, #12
    2890:	cmpne	r3, #0
    2894:	beq	28bc <setContext+0x1ac>
    2898:	ldr	r3, [r4, #440]	; 0x1b8
    289c:	cmp	r3, r1
    28a0:	bne	2874 <setContext+0x164>
    28a4:	mov	r0, r8
    28a8:	bl	ec8 <poolGrow>
    28ac:	cmp	r0, #0
    28b0:	beq	28f0 <setContext+0x1e0>
    28b4:	ldr	r1, [r4, #444]	; 0x1bc
    28b8:	b	2874 <setContext+0x164>
    28bc:	ldr	r3, [r4, #440]	; 0x1b8
    28c0:	cmp	r1, r3
    28c4:	beq	29a4 <setContext+0x294>
    28c8:	add	r3, r1, #1
    28cc:	str	r3, [r4, #444]	; 0x1bc
    28d0:	strb	r7, [r1]
    28d4:	ldr	r3, [r4, #448]	; 0x1c0
    28d8:	ldrb	r2, [r3]
    28dc:	cmp	r2, #0
    28e0:	bne	28fc <setContext+0x1ec>
    28e4:	ldr	r2, [fp]
    28e8:	cmp	r2, #0
    28ec:	beq	28fc <setContext+0x1ec>
    28f0:	mov	r0, #0
    28f4:	add	sp, sp, #20
    28f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28fc:	ldr	r2, [sp, #8]
    2900:	mov	r1, fp
    2904:	str	r2, [sp]
    2908:	mov	r0, r4
    290c:	mov	r2, r7
    2910:	bl	2440 <addBinding.part.8>
    2914:	cmp	r0, #0
    2918:	bne	28f0 <setContext+0x1e0>
    291c:	ldr	r3, [r4, #448]	; 0x1c0
    2920:	str	r3, [r4, #444]	; 0x1bc
    2924:	ldrb	r3, [r5]
    2928:	cmp	r3, #0
    292c:	beq	27c4 <setContext+0xb4>
    2930:	add	fp, r5, #1
    2934:	ldrb	r3, [r5, #1]
    2938:	mov	r5, fp
    293c:	b	274c <setContext+0x3c>
    2940:	mov	r0, r8
    2944:	bl	ec8 <poolGrow>
    2948:	cmp	r0, #0
    294c:	beq	28f0 <setContext+0x1e0>
    2950:	ldr	r2, [r4, #444]	; 0x1bc
    2954:	b	2774 <setContext+0x64>
    2958:	mov	r0, r8
    295c:	bl	ec8 <poolGrow>
    2960:	cmp	r0, #0
    2964:	beq	28f0 <setContext+0x1e0>
    2968:	ldr	r3, [r4, #444]	; 0x1bc
    296c:	b	27e8 <setContext+0xd8>
    2970:	mov	r0, r8
    2974:	bl	ec8 <poolGrow>
    2978:	cmp	r0, #0
    297c:	beq	28f0 <setContext+0x1e0>
    2980:	ldr	r1, [r4, #444]	; 0x1bc
    2984:	b	2820 <setContext+0x110>
    2988:	ldr	r0, [sp, #12]
    298c:	bl	20f0 <poolCopyString>
    2990:	cmp	r0, #0
    2994:	str	r0, [fp]
    2998:	beq	28f0 <setContext+0x1e0>
    299c:	ldr	r1, [r4, #448]	; 0x1c0
    29a0:	b	2858 <setContext+0x148>
    29a4:	mov	r0, r8
    29a8:	bl	ec8 <poolGrow>
    29ac:	cmp	r0, #0
    29b0:	beq	28f0 <setContext+0x1e0>
    29b4:	ldr	r1, [r4, #444]	; 0x1bc
    29b8:	b	28c8 <setContext+0x1b8>

000029bc <storeRawNames.isra.9>:
    29bc:	push	{r4, r5, r6, r7, r8, lr}
    29c0:	subs	r4, r1, #0
    29c4:	movne	r7, r0
    29c8:	bne	2a54 <storeRawNames.isra.9+0x98>
    29cc:	b	2a70 <storeRawNames.isra.9+0xb4>
    29d0:	ldr	r2, [r4, #8]
    29d4:	ldr	lr, [r4, #40]	; 0x28
    29d8:	add	r6, r2, r5
    29dc:	mov	r0, ip
    29e0:	sub	ip, lr, ip
    29e4:	cmp	r6, ip
    29e8:	mov	r1, r6
    29ec:	ble	2a38 <storeRawNames.isra.9+0x7c>
    29f0:	ldr	r3, [r7]
    29f4:	blx	r3
    29f8:	cmp	r0, #0
    29fc:	add	r3, r0, r5
    2a00:	add	r6, r0, r6
    2a04:	popeq	{r4, r5, r6, r7, r8, pc}
    2a08:	ldr	r2, [r4, #36]	; 0x24
    2a0c:	ldr	r1, [r4, #12]
    2a10:	str	r0, [r4, #36]	; 0x24
    2a14:	cmp	r1, r2
    2a18:	ldr	r1, [r4, #16]
    2a1c:	streq	r0, [r4, #12]
    2a20:	sub	r2, r1, r2
    2a24:	add	r2, r0, r2
    2a28:	cmp	r1, #0
    2a2c:	strne	r2, [r4, #16]
    2a30:	ldr	r2, [r4, #8]
    2a34:	str	r6, [r4, #40]	; 0x28
    2a38:	ldr	r1, [r4, #4]
    2a3c:	mov	r0, r3
    2a40:	bl	0 <memcpy>
    2a44:	str	r0, [r4, #4]
    2a48:	ldr	r4, [r4]
    2a4c:	cmp	r4, #0
    2a50:	beq	2a70 <storeRawNames.isra.9+0xb4>
    2a54:	ldr	r5, [r4, #24]
    2a58:	ldr	ip, [r4, #36]	; 0x24
    2a5c:	add	r5, r5, #1
    2a60:	ldr	r2, [r4, #4]
    2a64:	add	r3, ip, r5
    2a68:	cmp	r3, r2
    2a6c:	bne	29d0 <storeRawNames.isra.9+0x14>
    2a70:	mov	r0, #1
    2a74:	pop	{r4, r5, r6, r7, r8, pc}

00002a78 <setElementTypePrefix.isra.10>:
    2a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a7c:	sub	sp, sp, #12
    2a80:	ldr	r5, [r1]
    2a84:	ldr	r4, [r0, #364]	; 0x16c
    2a88:	ldrb	r3, [r5]
    2a8c:	cmp	r3, #0
    2a90:	beq	2b78 <setElementTypePrefix.isra.10+0x100>
    2a94:	stm	sp, {r0, r2}
    2a98:	mov	r6, r1
    2a9c:	add	r8, r4, #80	; 0x50
    2aa0:	mov	fp, #0
    2aa4:	add	sl, r4, #60	; 0x3c
    2aa8:	mov	r9, #8
    2aac:	b	2abc <setElementTypePrefix.isra.10+0x44>
    2ab0:	ldrb	r3, [r5, #1]!
    2ab4:	cmp	r3, #0
    2ab8:	beq	2b78 <setElementTypePrefix.isra.10+0x100>
    2abc:	cmp	r3, #58	; 0x3a
    2ac0:	bne	2ab0 <setElementTypePrefix.isra.10+0x38>
    2ac4:	ldr	r7, [r6]
    2ac8:	cmp	r7, r5
    2acc:	bne	2aec <setElementTypePrefix.isra.10+0x74>
    2ad0:	b	2b14 <setElementTypePrefix.isra.10+0x9c>
    2ad4:	add	r2, r3, #1
    2ad8:	str	r2, [r4, #92]	; 0x5c
    2adc:	ldrb	r2, [r7], #1
    2ae0:	cmp	r7, r5
    2ae4:	strb	r2, [r3]
    2ae8:	beq	2b14 <setElementTypePrefix.isra.10+0x9c>
    2aec:	ldr	r3, [r4, #92]	; 0x5c
    2af0:	ldr	r2, [r4, #88]	; 0x58
    2af4:	cmp	r3, r2
    2af8:	bne	2ad4 <setElementTypePrefix.isra.10+0x5c>
    2afc:	mov	r0, r8
    2b00:	bl	ec8 <poolGrow>
    2b04:	cmp	r0, #0
    2b08:	beq	2b84 <setElementTypePrefix.isra.10+0x10c>
    2b0c:	ldr	r3, [r4, #92]	; 0x5c
    2b10:	b	2ad4 <setElementTypePrefix.isra.10+0x5c>
    2b14:	ldr	r2, [r4, #92]	; 0x5c
    2b18:	ldr	r3, [r4, #88]	; 0x58
    2b1c:	cmp	r2, r3
    2b20:	beq	2b90 <setElementTypePrefix.isra.10+0x118>
    2b24:	add	r3, r2, #1
    2b28:	str	r3, [r4, #92]	; 0x5c
    2b2c:	mov	r1, sl
    2b30:	strb	fp, [r2]
    2b34:	mov	r3, r9
    2b38:	ldr	r2, [r4, #96]	; 0x60
    2b3c:	ldr	r0, [sp]
    2b40:	bl	9d8 <lookup>
    2b44:	cmp	r0, #0
    2b48:	beq	2b84 <setElementTypePrefix.isra.10+0x10c>
    2b4c:	ldr	r3, [r4, #96]	; 0x60
    2b50:	ldr	r2, [r0]
    2b54:	cmp	r2, r3
    2b58:	strne	r3, [r4, #92]	; 0x5c
    2b5c:	ldreq	r3, [r4, #92]	; 0x5c
    2b60:	streq	r3, [r4, #96]	; 0x60
    2b64:	ldr	r3, [sp, #4]
    2b68:	str	r0, [r3]
    2b6c:	ldrb	r3, [r5, #1]!
    2b70:	cmp	r3, #0
    2b74:	bne	2abc <setElementTypePrefix.isra.10+0x44>
    2b78:	mov	r0, #1
    2b7c:	add	sp, sp, #12
    2b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b84:	mov	r0, #0
    2b88:	add	sp, sp, #12
    2b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b90:	mov	r0, r8
    2b94:	bl	ec8 <poolGrow>
    2b98:	cmp	r0, #0
    2b9c:	beq	2b84 <setElementTypePrefix.isra.10+0x10c>
    2ba0:	ldr	r2, [r4, #92]	; 0x5c
    2ba4:	b	2b24 <setElementTypePrefix.isra.10+0xac>

00002ba8 <getElementType>:
    2ba8:	push	{r4, r5, r6, r7, r8, lr}
    2bac:	mov	r6, r0
    2bb0:	ldr	r4, [r0, #364]	; 0x16c
    2bb4:	add	r0, r4, #80	; 0x50
    2bb8:	bl	1108 <poolStoreString>
    2bbc:	subs	r7, r0, #0
    2bc0:	beq	2c1c <getElementType+0x74>
    2bc4:	mov	r3, #24
    2bc8:	mov	r2, r7
    2bcc:	add	r1, r4, #20
    2bd0:	mov	r0, r6
    2bd4:	bl	9d8 <lookup>
    2bd8:	subs	r5, r0, #0
    2bdc:	beq	2c1c <getElementType+0x74>
    2be0:	ldr	r3, [r5]
    2be4:	cmp	r7, r3
    2be8:	beq	2bfc <getElementType+0x54>
    2bec:	ldr	r3, [r4, #96]	; 0x60
    2bf0:	str	r3, [r4, #92]	; 0x5c
    2bf4:	mov	r0, r5
    2bf8:	pop	{r4, r5, r6, r7, r8, pc}
    2bfc:	ldr	r3, [r4, #92]	; 0x5c
    2c00:	mov	r0, r6
    2c04:	str	r3, [r4, #96]	; 0x60
    2c08:	add	r2, r5, #4
    2c0c:	mov	r1, r5
    2c10:	bl	2a78 <setElementTypePrefix.isra.10>
    2c14:	cmp	r0, #0
    2c18:	bne	2bf4 <getElementType+0x4c>
    2c1c:	mov	r5, #0
    2c20:	b	2bf4 <getElementType+0x4c>

00002c24 <storeAttributeValue.part.11>:
    2c24:	cmp	r0, #0
    2c28:	push	{lr}		; (str lr, [sp, #-4]!)
    2c2c:	sub	sp, sp, #12
    2c30:	ldr	r3, [r1, #12]
    2c34:	bne	2c54 <storeAttributeValue.part.11+0x30>
    2c38:	ldr	r2, [r1, #16]
    2c3c:	cmp	r3, r2
    2c40:	beq	2c54 <storeAttributeValue.part.11+0x30>
    2c44:	ldrb	r2, [r3, #-1]
    2c48:	cmp	r2, #32
    2c4c:	subeq	r3, r3, #1
    2c50:	streq	r3, [r1, #12]
    2c54:	ldr	r2, [r1, #8]
    2c58:	cmp	r2, r3
    2c5c:	beq	2c7c <storeAttributeValue.part.11+0x58>
    2c60:	add	r0, r3, #1
    2c64:	mov	r2, #0
    2c68:	str	r0, [r1, #12]
    2c6c:	mov	r0, r2
    2c70:	strb	r2, [r3]
    2c74:	add	sp, sp, #12
    2c78:	pop	{pc}		; (ldr pc, [sp], #4)
    2c7c:	mov	r0, r1
    2c80:	str	r1, [sp, #4]
    2c84:	bl	ec8 <poolGrow>
    2c88:	cmp	r0, #0
    2c8c:	moveq	r0, #1
    2c90:	beq	2c74 <storeAttributeValue.part.11+0x50>
    2c94:	ldr	r1, [sp, #4]
    2c98:	ldr	r3, [r1, #12]
    2c9c:	b	2c60 <storeAttributeValue.part.11+0x3c>

00002ca0 <reportProcessingInstruction>:
    2ca0:	ldr	ip, [r0, #72]	; 0x48
    2ca4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2ca8:	cmp	ip, #0
    2cac:	mov	r4, r0
    2cb0:	beq	2da8 <reportProcessingInstruction+0x108>
    2cb4:	mov	r5, r2
    2cb8:	ldr	r2, [r1, #68]	; 0x44
    2cbc:	mov	r6, r1
    2cc0:	mov	r0, r1
    2cc4:	add	r5, r5, r2, lsl #1
    2cc8:	mov	r8, r3
    2ccc:	ldr	r3, [r1, #32]
    2cd0:	mov	r1, r5
    2cd4:	blx	r3
    2cd8:	add	r7, r4, #432	; 0x1b0
    2cdc:	mov	r2, r5
    2ce0:	mov	r1, r6
    2ce4:	add	r5, r5, r0
    2ce8:	mov	r3, r5
    2cec:	mov	r0, r7
    2cf0:	bl	1108 <poolStoreString>
    2cf4:	subs	r9, r0, #0
    2cf8:	beq	2da0 <reportProcessingInstruction+0x100>
    2cfc:	ldr	r3, [r4, #444]	; 0x1bc
    2d00:	mov	r1, r5
    2d04:	str	r3, [r4, #448]	; 0x1c0
    2d08:	mov	r0, r6
    2d0c:	ldr	r3, [r6, #36]	; 0x24
    2d10:	blx	r3
    2d14:	ldr	r3, [r6, #68]	; 0x44
    2d18:	mov	r1, r6
    2d1c:	sub	r3, r8, r3, lsl #1
    2d20:	mov	r2, r0
    2d24:	mov	r0, r7
    2d28:	bl	1108 <poolStoreString>
    2d2c:	subs	r5, r0, #0
    2d30:	beq	2da0 <reportProcessingInstruction+0x100>
    2d34:	bl	8 <normalizeLines>
    2d38:	mov	r1, r9
    2d3c:	ldr	r3, [r4, #72]	; 0x48
    2d40:	mov	r2, r5
    2d44:	ldr	r0, [r4, #4]
    2d48:	blx	r3
    2d4c:	ldr	r1, [r4, #436]	; 0x1b4
    2d50:	ldr	r3, [r4, #432]	; 0x1b0
    2d54:	cmp	r1, #0
    2d58:	beq	2d80 <reportProcessingInstruction+0xe0>
    2d5c:	cmp	r3, #0
    2d60:	bne	2d6c <reportProcessingInstruction+0xcc>
    2d64:	b	2d84 <reportProcessingInstruction+0xe4>
    2d68:	mov	r3, r2
    2d6c:	ldr	r2, [r3]
    2d70:	str	r1, [r3]
    2d74:	cmp	r2, #0
    2d78:	mov	r1, r3
    2d7c:	bne	2d68 <reportProcessingInstruction+0xc8>
    2d80:	str	r3, [r4, #436]	; 0x1b4
    2d84:	mov	r3, #0
    2d88:	str	r3, [r4, #432]	; 0x1b0
    2d8c:	str	r3, [r4, #448]	; 0x1c0
    2d90:	str	r3, [r4, #444]	; 0x1bc
    2d94:	str	r3, [r4, #440]	; 0x1b8
    2d98:	mov	r0, #1
    2d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2da0:	mov	r0, #0
    2da4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2da8:	ldr	ip, [r0, #88]	; 0x58
    2dac:	cmp	ip, #0
    2db0:	beq	2dc0 <reportProcessingInstruction+0x120>
    2db4:	bl	90 <reportDefault>
    2db8:	mov	r0, #1
    2dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2dc0:	mov	r0, #1
    2dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00002dc8 <reportComment>:
    2dc8:	ldr	ip, [r0, #76]	; 0x4c
    2dcc:	push	{r4, r5, r6, lr}
    2dd0:	cmp	ip, #0
    2dd4:	mov	r4, r0
    2dd8:	beq	2e6c <reportComment+0xa4>
    2ddc:	mov	lr, r2
    2de0:	ldr	r2, [r1, #68]	; 0x44
    2de4:	mov	ip, r3
    2de8:	add	r0, r0, #432	; 0x1b0
    2dec:	add	r3, r2, r2, lsl #1
    2df0:	sub	r3, ip, r3
    2df4:	add	r2, lr, r2, lsl #2
    2df8:	bl	1108 <poolStoreString>
    2dfc:	subs	r5, r0, #0
    2e00:	beq	2e84 <reportComment+0xbc>
    2e04:	bl	8 <normalizeLines>
    2e08:	mov	r1, r5
    2e0c:	ldr	r3, [r4, #76]	; 0x4c
    2e10:	ldr	r0, [r4, #4]
    2e14:	blx	r3
    2e18:	ldr	r1, [r4, #436]	; 0x1b4
    2e1c:	ldr	r3, [r4, #432]	; 0x1b0
    2e20:	cmp	r1, #0
    2e24:	beq	2e4c <reportComment+0x84>
    2e28:	cmp	r3, #0
    2e2c:	bne	2e38 <reportComment+0x70>
    2e30:	b	2e50 <reportComment+0x88>
    2e34:	mov	r3, r2
    2e38:	ldr	r2, [r3]
    2e3c:	str	r1, [r3]
    2e40:	cmp	r2, #0
    2e44:	mov	r1, r3
    2e48:	bne	2e34 <reportComment+0x6c>
    2e4c:	str	r3, [r4, #436]	; 0x1b4
    2e50:	mov	r3, #0
    2e54:	str	r3, [r4, #432]	; 0x1b0
    2e58:	str	r3, [r4, #448]	; 0x1c0
    2e5c:	str	r3, [r4, #444]	; 0x1bc
    2e60:	str	r3, [r4, #440]	; 0x1b8
    2e64:	mov	r0, #1
    2e68:	pop	{r4, r5, r6, pc}
    2e6c:	ldr	ip, [r0, #88]	; 0x58
    2e70:	cmp	ip, #0
    2e74:	beq	2e8c <reportComment+0xc4>
    2e78:	bl	90 <reportDefault>
    2e7c:	mov	r0, #1
    2e80:	pop	{r4, r5, r6, pc}
    2e84:	mov	r0, r5
    2e88:	pop	{r4, r5, r6, pc}
    2e8c:	mov	r0, #1
    2e90:	pop	{r4, r5, r6, pc}

00002e94 <epilogProcessor>:
    2e94:	push	{r4, r5, r6, r7, r8, r9, lr}
    2e98:	mov	r4, r0
    2e9c:	mov	r6, r3
    2ea0:	sub	sp, sp, #12
    2ea4:	ldr	r3, [pc, #488]	; 3094 <epilogProcessor+0x200>
    2ea8:	mov	r8, r2
    2eac:	mov	r7, #0
    2eb0:	mov	r5, r1
    2eb4:	str	r1, [r4, #296]	; 0x128
    2eb8:	str	r3, [r0, #288]	; 0x120
    2ebc:	ldr	r3, [r4, #152]	; 0x98
    2ec0:	mov	r1, r5
    2ec4:	mov	r0, r3
    2ec8:	ldr	r9, [r3]
    2ecc:	str	r7, [sp, #4]
    2ed0:	add	r3, sp, #4
    2ed4:	mov	r2, r8
    2ed8:	blx	r9
    2edc:	ldr	r1, [sp, #4]
    2ee0:	str	r1, [r4, #300]	; 0x12c
    2ee4:	add	r0, r0, #15
    2ee8:	cmp	r0, #30
    2eec:	ldrls	pc, [pc, r0, lsl #2]
    2ef0:	b	3080 <epilogProcessor+0x1ec>
    2ef4:	.word	0x00002fb8
    2ef8:	.word	0x00003080
    2efc:	.word	0x00003080
    2f00:	.word	0x00003080
    2f04:	.word	0x00003080
    2f08:	.word	0x00003080
    2f0c:	.word	0x00003080
    2f10:	.word	0x00003080
    2f14:	.word	0x00003080
    2f18:	.word	0x00003080
    2f1c:	.word	0x00003080
    2f20:	.word	0x00002fa8
    2f24:	.word	0x00003080
    2f28:	.word	0x00003054
    2f2c:	.word	0x0000306c
    2f30:	.word	0x00002ff4
    2f34:	.word	0x00003080
    2f38:	.word	0x00003080
    2f3c:	.word	0x00003080
    2f40:	.word	0x00003080
    2f44:	.word	0x00003080
    2f48:	.word	0x00003080
    2f4c:	.word	0x00003080
    2f50:	.word	0x00003080
    2f54:	.word	0x00003080
    2f58:	.word	0x00003080
    2f5c:	.word	0x00002f70
    2f60:	.word	0x00003080
    2f64:	.word	0x00003004
    2f68:	.word	0x00003080
    2f6c:	.word	0x00003028
    2f70:	mov	r3, r1
    2f74:	mov	r2, r5
    2f78:	ldr	r1, [r4, #152]	; 0x98
    2f7c:	mov	r0, r4
    2f80:	bl	2ca0 <reportProcessingInstruction>
    2f84:	cmp	r0, #0
    2f88:	beq	3020 <epilogProcessor+0x18c>
    2f8c:	ldr	r5, [sp, #4]
    2f90:	ldr	r3, [r4, #496]	; 0x1f0
    2f94:	str	r5, [r4, #296]	; 0x128
    2f98:	cmp	r3, #2
    2f9c:	beq	3088 <epilogProcessor+0x1f4>
    2fa0:	cmp	r3, #3
    2fa4:	bne	2ebc <epilogProcessor+0x28>
    2fa8:	mov	r0, #0
    2fac:	str	r5, [r6]
    2fb0:	add	sp, sp, #12
    2fb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2fb8:	ldr	r3, [r4, #88]	; 0x58
    2fbc:	cmp	r3, #0
    2fc0:	beq	2fe8 <epilogProcessor+0x154>
    2fc4:	mov	r3, r1
    2fc8:	mov	r2, r5
    2fcc:	ldr	r1, [r4, #152]	; 0x98
    2fd0:	mov	r0, r4
    2fd4:	bl	90 <reportDefault>
    2fd8:	ldr	r3, [r4, #496]	; 0x1f0
    2fdc:	cmp	r3, #2
    2fe0:	beq	3088 <epilogProcessor+0x1f4>
    2fe4:	ldr	r1, [sp, #4]
    2fe8:	str	r1, [r6]
    2fec:	mov	r0, #0
    2ff0:	b	2fb0 <epilogProcessor+0x11c>
    2ff4:	mov	r0, #4
    2ff8:	str	r1, [r4, #296]	; 0x128
    2ffc:	add	sp, sp, #12
    3000:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3004:	mov	r3, r1
    3008:	mov	r2, r5
    300c:	ldr	r1, [r4, #152]	; 0x98
    3010:	mov	r0, r4
    3014:	bl	2dc8 <reportComment>
    3018:	cmp	r0, #0
    301c:	bne	2f8c <epilogProcessor+0xf8>
    3020:	mov	r0, #1
    3024:	b	2fb0 <epilogProcessor+0x11c>
    3028:	ldr	r3, [r4, #88]	; 0x58
    302c:	mov	r2, r5
    3030:	cmp	r3, #0
    3034:	mov	r0, r4
    3038:	mov	r3, r1
    303c:	moveq	r5, r1
    3040:	beq	2f90 <epilogProcessor+0xfc>
    3044:	ldr	r1, [r4, #152]	; 0x98
    3048:	bl	90 <reportDefault>
    304c:	ldr	r5, [sp, #4]
    3050:	b	2f90 <epilogProcessor+0xfc>
    3054:	ldrb	r0, [r4, #500]	; 0x1f4
    3058:	cmp	r0, #0
    305c:	movne	r0, #6
    3060:	bne	2fb0 <epilogProcessor+0x11c>
    3064:	str	r5, [r6]
    3068:	b	2fb0 <epilogProcessor+0x11c>
    306c:	ldrb	r0, [r4, #500]	; 0x1f4
    3070:	cmp	r0, #0
    3074:	movne	r0, #5
    3078:	bne	2fb0 <epilogProcessor+0x11c>
    307c:	b	3064 <epilogProcessor+0x1d0>
    3080:	mov	r0, #9
    3084:	b	2fb0 <epilogProcessor+0x11c>
    3088:	mov	r0, #35	; 0x23
    308c:	add	sp, sp, #12
    3090:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3094:	.word	0x00000000

00003098 <startParsing>:
    3098:	push	{r4, lr}
    309c:	mov	r4, r0
    30a0:	ldr	r0, [r0, #512]	; 0x200
    30a4:	cmp	r0, #0
    30a8:	beq	30d0 <startParsing+0x38>
    30ac:	ldrb	r3, [r4, #244]	; 0xf4
    30b0:	cmp	r3, #0
    30b4:	bne	30c0 <startParsing+0x28>
    30b8:	mov	r0, #1
    30bc:	pop	{r4, pc}
    30c0:	mov	r0, r4
    30c4:	ldr	r1, [pc, #40]	; 30f4 <startParsing+0x5c>
    30c8:	pop	{r4, lr}
    30cc:	b	2710 <setContext>
    30d0:	bl	0 <time>
    30d4:	cmn	r0, #1
    30d8:	movcc	r3, #0
    30dc:	movcs	r3, #1
    30e0:	add	r0, r3, r0
    30e4:	bl	0 <srand>
    30e8:	bl	0 <rand>
    30ec:	str	r0, [r4, #512]	; 0x200
    30f0:	b	30ac <startParsing+0x14>
    30f4:	.word	0x00000048

000030f8 <storeAtts>:
    30f8:	ldr	ip, [r0, #364]	; 0x16c
    30fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3100:	sub	sp, sp, #60	; 0x3c
    3104:	add	r6, ip, #20
    3108:	str	r3, [sp, #28]
    310c:	mov	r8, r1
    3110:	mov	r4, r2
    3114:	mov	r1, r6
    3118:	ldr	r2, [r3]
    311c:	mov	r3, #0
    3120:	mov	r5, r0
    3124:	str	ip, [sp, #32]
    3128:	bl	9d8 <lookup>
    312c:	subs	r3, r0, #0
    3130:	str	r3, [sp, #24]
    3134:	beq	3638 <storeAtts+0x540>
    3138:	ldr	r3, [sp, #24]
    313c:	ldr	r6, [r8, #40]	; 0x28
    3140:	ldr	r2, [r5, #388]	; 0x184
    3144:	ldr	r7, [r3, #12]
    3148:	mov	r1, r4
    314c:	ldr	r3, [r5, #400]	; 0x190
    3150:	mov	r0, r8
    3154:	blx	r6
    3158:	ldr	r6, [r5, #388]	; 0x184
    315c:	add	r3, r7, r0
    3160:	cmp	r3, r6
    3164:	str	r0, [sp, #16]
    3168:	bgt	36a0 <storeAtts+0x5a8>
    316c:	ldr	fp, [r5, #400]	; 0x190
    3170:	ldr	r3, [sp, #16]
    3174:	cmp	r3, #0
    3178:	mov	r3, #0
    317c:	ble	3a40 <storeAtts+0x948>
    3180:	mov	r9, r3
    3184:	str	r3, [sp, #20]
    3188:	mov	r6, r3
    318c:	mov	r3, fp
    3190:	add	r2, r5, #432	; 0x1b0
    3194:	str	r2, [sp, #12]
    3198:	ldr	r4, [r3, r6, lsl #4]
    319c:	mov	r0, r8
    31a0:	mov	r1, r4
    31a4:	ldr	r3, [r8, #32]
    31a8:	blx	r3
    31ac:	mov	r2, r4
    31b0:	mov	r1, r8
    31b4:	lsl	sl, r6, #4
    31b8:	add	r3, r4, r0
    31bc:	mov	r0, r5
    31c0:	bl	1460 <getAttributeId>
    31c4:	subs	r4, r0, #0
    31c8:	beq	3694 <storeAtts+0x59c>
    31cc:	ldr	r3, [r4]
    31d0:	ldrb	r2, [r3, #-1]
    31d4:	cmp	r2, #0
    31d8:	bne	36ec <storeAtts+0x5f4>
    31dc:	mov	r2, #1
    31e0:	strb	r2, [r3, #-1]
    31e4:	ldr	r0, [r5, #400]	; 0x190
    31e8:	ldr	r3, [r4]
    31ec:	add	r0, r0, sl
    31f0:	str	r3, [fp, r9, lsl #2]
    31f4:	ldrb	r3, [r0, #12]
    31f8:	lsl	sl, r9, #2
    31fc:	cmp	r3, #0
    3200:	bne	3324 <storeAtts+0x22c>
    3204:	ldrb	r2, [r4, #8]
    3208:	cmp	r2, #0
    320c:	beq	3250 <storeAtts+0x158>
    3210:	cmp	r7, #0
    3214:	ble	3250 <storeAtts+0x158>
    3218:	ldr	r2, [sp, #24]
    321c:	ldr	ip, [r2, #20]
    3220:	ldr	r2, [ip]
    3224:	cmp	r4, r2
    3228:	addne	r2, ip, #12
    322c:	bne	3240 <storeAtts+0x148>
    3230:	b	360c <storeAtts+0x514>
    3234:	ldr	r1, [r2], #12
    3238:	cmp	r4, r1
    323c:	beq	360c <storeAtts+0x514>
    3240:	add	r3, r3, #1
    3244:	cmp	r7, r3
    3248:	mov	ip, r2
    324c:	bne	3234 <storeAtts+0x13c>
    3250:	mov	r3, #1
    3254:	str	r3, [sp, #8]
    3258:	ldr	r2, [sp, #12]
    325c:	ldr	r3, [r0, #4]
    3260:	str	r2, [sp, #4]
    3264:	ldr	r2, [r0, #8]
    3268:	mov	r1, r8
    326c:	str	r2, [sp]
    3270:	mov	r0, r5
    3274:	ldr	r2, [sp, #8]
    3278:	bl	1698 <appendAttributeValue>
    327c:	cmp	r0, #0
    3280:	bne	32e8 <storeAtts+0x1f0>
    3284:	ldr	r0, [sp, #8]
    3288:	ldr	r1, [sp, #12]
    328c:	bl	2c24 <storeAttributeValue.part.11>
    3290:	cmp	r0, #0
    3294:	bne	32e8 <storeAtts+0x1f0>
    3298:	ldr	r2, [r5, #448]	; 0x1c0
    329c:	add	r3, fp, sl
    32a0:	ldr	r1, [r4, #4]
    32a4:	str	r2, [r3, #4]
    32a8:	ldr	r3, [r5, #444]	; 0x1bc
    32ac:	cmp	r1, #0
    32b0:	str	r3, [r5, #448]	; 0x1c0
    32b4:	beq	3358 <storeAtts+0x260>
    32b8:	ldrb	r3, [r4, #9]
    32bc:	cmp	r3, #0
    32c0:	beq	32f0 <storeAtts+0x1f8>
    32c4:	add	sl, fp, sl
    32c8:	ldr	r3, [sl, #4]
    32cc:	ldrb	r2, [r3]
    32d0:	cmp	r2, #0
    32d4:	bne	3618 <storeAtts+0x520>
    32d8:	ldr	r2, [r1]
    32dc:	cmp	r2, #0
    32e0:	beq	3618 <storeAtts+0x520>
    32e4:	mov	r0, #28
    32e8:	add	sp, sp, #60	; 0x3c
    32ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    32f0:	ldr	r2, [sp, #20]
    32f4:	ldr	r3, [r4]
    32f8:	add	r2, r2, #1
    32fc:	add	r9, r9, #2
    3300:	str	r2, [sp, #20]
    3304:	mov	r2, #2
    3308:	strb	r2, [r3, #-1]
    330c:	ldr	r3, [sp, #16]
    3310:	add	r6, r6, #1
    3314:	cmp	r3, r6
    3318:	beq	336c <storeAtts+0x274>
    331c:	ldr	r3, [r5, #400]	; 0x190
    3320:	b	3198 <storeAtts+0xa0>
    3324:	ldmib	r0, {r2, r3}
    3328:	mov	r1, r8
    332c:	ldr	r0, [sp, #12]
    3330:	bl	1108 <poolStoreString>
    3334:	add	r3, sl, #4
    3338:	cmp	r0, #0
    333c:	str	r0, [fp, r3]
    3340:	beq	3694 <storeAtts+0x59c>
    3344:	ldr	r1, [r4, #4]
    3348:	ldr	r3, [r5, #444]	; 0x1bc
    334c:	cmp	r1, #0
    3350:	str	r3, [r5, #448]	; 0x1c0
    3354:	bne	32b8 <storeAtts+0x1c0>
    3358:	ldr	r3, [sp, #16]
    335c:	add	r6, r6, #1
    3360:	cmp	r3, r6
    3364:	add	r9, r9, #2
    3368:	bne	331c <storeAtts+0x224>
    336c:	ldr	r3, [sp, #24]
    3370:	ldr	r3, [r3, #8]
    3374:	str	r9, [r5, #392]	; 0x188
    3378:	cmp	r3, #0
    337c:	beq	3704 <storeAtts+0x60c>
    3380:	ldr	r1, [r3]
    3384:	ldrb	r3, [r1, #-1]
    3388:	cmp	r3, #0
    338c:	beq	3704 <storeAtts+0x60c>
    3390:	cmp	r9, #0
    3394:	beq	33c4 <storeAtts+0x2cc>
    3398:	ldr	r3, [fp]
    339c:	cmp	r1, r3
    33a0:	mov	r3, #0
    33a4:	bne	33b8 <storeAtts+0x2c0>
    33a8:	b	3708 <storeAtts+0x610>
    33ac:	ldr	r2, [fp, r3, lsl #2]
    33b0:	cmp	r1, r2
    33b4:	beq	3708 <storeAtts+0x610>
    33b8:	add	r3, r3, #2
    33bc:	cmp	r9, r3
    33c0:	bgt	33ac <storeAtts+0x2b4>
    33c4:	cmp	r7, #0
    33c8:	ble	34a0 <storeAtts+0x3a8>
    33cc:	str	r5, [sp, #8]
    33d0:	mov	r4, #0
    33d4:	ldr	r5, [sp, #24]
    33d8:	b	3418 <storeAtts+0x320>
    33dc:	ldrb	r0, [r3]
    33e0:	cmp	r0, #0
    33e4:	bne	33f4 <storeAtts+0x2fc>
    33e8:	ldr	r0, [r1]
    33ec:	cmp	r0, #0
    33f0:	bne	32e4 <storeAtts+0x1ec>
    33f4:	ldr	r0, [sp, #96]	; 0x60
    33f8:	str	r0, [sp]
    33fc:	ldr	r0, [sp, #8]
    3400:	bl	2440 <addBinding.part.8>
    3404:	cmp	r0, #0
    3408:	bne	32e8 <storeAtts+0x1f0>
    340c:	add	r4, r4, #1
    3410:	cmp	r7, r4
    3414:	beq	349c <storeAtts+0x3a4>
    3418:	ldr	r0, [r5, #20]
    341c:	add	ip, r4, r4, lsl #1
    3420:	ldr	r2, [r0, ip, lsl #2]
    3424:	add	r6, r0, ip, lsl #2
    3428:	ldr	lr, [r2]
    342c:	ldrb	r3, [lr, #-1]
    3430:	cmp	r3, #0
    3434:	bne	340c <storeAtts+0x314>
    3438:	ldr	r3, [r6, #8]
    343c:	cmp	r3, #0
    3440:	beq	340c <storeAtts+0x314>
    3444:	ldr	r1, [r2, #4]
    3448:	lsl	r8, r9, #2
    344c:	cmp	r1, #0
    3450:	add	r8, fp, r8
    3454:	beq	3710 <storeAtts+0x618>
    3458:	ldrb	sl, [r2, #9]
    345c:	cmp	sl, #0
    3460:	bne	33dc <storeAtts+0x2e4>
    3464:	mov	r3, #2
    3468:	strb	r3, [lr, #-1]
    346c:	ldr	r3, [r0, ip, lsl #2]
    3470:	ldr	r2, [sp, #20]
    3474:	add	r4, r4, #1
    3478:	ldr	r3, [r3]
    347c:	add	r2, r2, #1
    3480:	str	r3, [fp, r9, lsl #2]
    3484:	ldr	r3, [r6, #8]
    3488:	cmp	r7, r4
    348c:	str	r2, [sp, #20]
    3490:	add	r9, r9, #2
    3494:	str	r3, [r8, #4]
    3498:	bne	3418 <storeAtts+0x320>
    349c:	ldr	r5, [sp, #8]
    34a0:	ldr	r1, [sp, #20]
    34a4:	mov	r3, #0
    34a8:	cmp	r1, #0
    34ac:	str	r3, [fp, r9, lsl #2]
    34b0:	beq	3808 <storeAtts+0x710>
    34b4:	ldrb	r3, [r5, #412]	; 0x19c
    34b8:	lsl	r2, r1, #1
    34bc:	asrs	r2, r2, r3
    34c0:	bne	373c <storeAtts+0x644>
    34c4:	mov	r1, #1
    34c8:	ldr	r2, [r5, #408]	; 0x198
    34cc:	lsl	r3, r1, r3
    34d0:	cmp	r2, #0
    34d4:	str	r3, [sp, #12]
    34d8:	beq	3798 <storeAtts+0x6a0>
    34dc:	sub	r3, r2, #1
    34e0:	str	r3, [sp, #8]
    34e4:	ldr	r3, [sp, #8]
    34e8:	cmp	r9, #0
    34ec:	str	r3, [r5, #408]	; 0x198
    34f0:	beq	3830 <storeAtts+0x738>
    34f4:	ldr	r2, [sp, #12]
    34f8:	mov	r1, #0
    34fc:	sub	r3, r2, #1
    3500:	str	r3, [sp, #44]	; 0x2c
    3504:	lsr	r3, r3, #2
    3508:	mov	r6, r1
    350c:	uxtb	r3, r3
    3510:	str	r3, [sp, #16]
    3514:	ldr	r3, [sp, #32]
    3518:	add	r3, r3, #40	; 0x28
    351c:	str	r3, [sp, #40]	; 0x28
    3520:	add	r3, r5, #432	; 0x1b0
    3524:	str	r3, [sp, #36]	; 0x24
    3528:	rsb	r3, r2, #0
    352c:	str	r3, [sp, #48]	; 0x30
    3530:	b	3540 <storeAtts+0x448>
    3534:	add	r6, r6, #2
    3538:	cmp	r6, r9
    353c:	bge	3830 <storeAtts+0x738>
    3540:	ldr	r8, [fp, r6, lsl #2]
    3544:	ldrb	r3, [r8, #-1]
    3548:	cmp	r3, #2
    354c:	movne	r3, #0
    3550:	strbne	r3, [r8, #-1]
    3554:	bne	3534 <storeAtts+0x43c>
    3558:	mov	r2, #0
    355c:	ldr	r4, [r5, #512]	; 0x200
    3560:	mov	r3, #0
    3564:	strb	r2, [r8, #-1]
    3568:	ldr	r1, [sp, #40]	; 0x28
    356c:	mov	r2, r8
    3570:	mov	r0, r5
    3574:	bl	9d8 <lookup>
    3578:	cmp	r0, #0
    357c:	beq	3694 <storeAtts+0x59c>
    3580:	ldr	r3, [r0, #4]
    3584:	cmp	r3, #0
    3588:	beq	3694 <storeAtts+0x59c>
    358c:	ldr	r7, [r3, #4]
    3590:	cmp	r7, #0
    3594:	beq	39d4 <storeAtts+0x8dc>
    3598:	ldr	r3, [r7, #20]
    359c:	cmp	r3, #0
    35a0:	ble	3950 <storeAtts+0x858>
    35a4:	str	fp, [sp, #52]	; 0x34
    35a8:	mov	sl, #0
    35ac:	mov	fp, r6
    35b0:	b	35d8 <storeAtts+0x4e0>
    35b4:	ldr	r2, [pc, #1524]	; 3bb0 <storeAtts+0xab8>
    35b8:	add	r1, r3, #1
    35bc:	str	r1, [r5, #444]	; 0x1bc
    35c0:	mul	r4, r2, r4
    35c4:	strb	r6, [r3]
    35c8:	ldr	r3, [r7, #20]
    35cc:	eor	r4, r4, r6
    35d0:	cmp	r3, sl
    35d4:	ble	3948 <storeAtts+0x850>
    35d8:	ldr	r0, [r7, #16]
    35dc:	ldr	r3, [r5, #444]	; 0x1bc
    35e0:	ldr	r1, [r5, #440]	; 0x1b8
    35e4:	ldrb	r6, [r0, sl]
    35e8:	cmp	r3, r1
    35ec:	add	sl, sl, #1
    35f0:	bne	35b4 <storeAtts+0x4bc>
    35f4:	ldr	r0, [sp, #36]	; 0x24
    35f8:	bl	ec8 <poolGrow>
    35fc:	cmp	r0, #0
    3600:	beq	3694 <storeAtts+0x59c>
    3604:	ldr	r3, [r5, #444]	; 0x1bc
    3608:	b	35b4 <storeAtts+0x4bc>
    360c:	ldrb	r3, [ip, #4]
    3610:	str	r3, [sp, #8]
    3614:	b	3258 <storeAtts+0x160>
    3618:	ldr	r2, [sp, #96]	; 0x60
    361c:	mov	r0, r5
    3620:	str	r2, [sp]
    3624:	mov	r2, r4
    3628:	bl	2440 <addBinding.part.8>
    362c:	cmp	r0, #0
    3630:	beq	330c <storeAtts+0x214>
    3634:	b	32e8 <storeAtts+0x1f0>
    3638:	ldr	r3, [sp, #28]
    363c:	ldr	r1, [r3]
    3640:	ldr	r3, [sp, #32]
    3644:	add	r0, r3, #80	; 0x50
    3648:	bl	20f0 <poolCopyString>
    364c:	subs	r2, r0, #0
    3650:	beq	3694 <storeAtts+0x59c>
    3654:	mov	r3, #24
    3658:	mov	r1, r6
    365c:	mov	r0, r5
    3660:	bl	9d8 <lookup>
    3664:	subs	r3, r0, #0
    3668:	str	r3, [sp, #24]
    366c:	beq	3694 <storeAtts+0x59c>
    3670:	ldrb	r3, [r5, #244]	; 0xf4
    3674:	cmp	r3, #0
    3678:	beq	3138 <storeAtts+0x40>
    367c:	add	r2, r0, #4
    3680:	mov	r1, r0
    3684:	mov	r0, r5
    3688:	bl	2a78 <setElementTypePrefix.isra.10>
    368c:	cmp	r0, #0
    3690:	bne	3138 <storeAtts+0x40>
    3694:	mov	r0, #1
    3698:	add	sp, sp, #60	; 0x3c
    369c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    36a0:	add	r3, r3, #16
    36a4:	str	r3, [r5, #388]	; 0x184
    36a8:	lsl	r1, r3, #4
    36ac:	ldr	r0, [r5, #400]	; 0x190
    36b0:	ldr	r3, [r5, #16]
    36b4:	blx	r3
    36b8:	subs	fp, r0, #0
    36bc:	beq	3694 <storeAtts+0x59c>
    36c0:	ldr	r3, [sp, #16]
    36c4:	str	fp, [r5, #400]	; 0x190
    36c8:	cmp	r3, r6
    36cc:	ble	3170 <storeAtts+0x78>
    36d0:	mov	r1, r4
    36d4:	mov	r3, fp
    36d8:	ldr	r4, [r8, #40]	; 0x28
    36dc:	ldr	r2, [sp, #16]
    36e0:	mov	r0, r8
    36e4:	blx	r4
    36e8:	b	316c <storeAtts+0x74>
    36ec:	ldr	r3, [r5, #152]	; 0x98
    36f0:	cmp	r8, r3
    36f4:	beq	39c0 <storeAtts+0x8c8>
    36f8:	mov	r0, #8
    36fc:	add	sp, sp, #60	; 0x3c
    3700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3704:	mvn	r3, #0
    3708:	str	r3, [r5, #396]	; 0x18c
    370c:	b	33c4 <storeAtts+0x2cc>
    3710:	mov	r3, #1
    3714:	strb	r3, [lr, #-1]
    3718:	ldr	r2, [r0, ip, lsl #2]
    371c:	lsl	r3, r9, #2
    3720:	add	r3, fp, r3
    3724:	ldr	r2, [r2]
    3728:	str	r2, [fp, r9, lsl #2]
    372c:	ldr	r2, [r6, #8]
    3730:	add	r9, r9, #2
    3734:	str	r2, [r3, #4]
    3738:	b	340c <storeAtts+0x314>
    373c:	asr	r2, r1, r3
    3740:	add	r3, r3, #1
    3744:	cmp	r2, #0
    3748:	uxtb	r3, r3
    374c:	bne	373c <storeAtts+0x644>
    3750:	cmp	r3, #2
    3754:	movhi	r2, #1
    3758:	strb	r3, [r5, #412]	; 0x19c
    375c:	movhi	r1, #12
    3760:	movls	r3, #8
    3764:	lslhi	r2, r2, r3
    3768:	strls	r3, [sp, #12]
    376c:	movls	r3, #3
    3770:	lslhi	r1, r1, r3
    3774:	strbls	r3, [r5, #412]	; 0x19c
    3778:	movls	r1, #96	; 0x60
    377c:	ldr	r3, [r5, #16]
    3780:	ldr	r0, [r5, #404]	; 0x194
    3784:	strhi	r2, [sp, #12]
    3788:	blx	r3
    378c:	cmp	r0, #0
    3790:	beq	3694 <storeAtts+0x59c>
    3794:	str	r0, [r5, #404]	; 0x194
    3798:	ldr	r3, [sp, #12]
    379c:	cmp	r3, #0
    37a0:	beq	37c0 <storeAtts+0x6c8>
    37a4:	ldr	r2, [r5, #404]	; 0x194
    37a8:	add	r3, r3, r3, lsl #1
    37ac:	mvn	r1, #0
    37b0:	add	r3, r2, r3, lsl #2
    37b4:	str	r1, [r3, #-12]!
    37b8:	cmp	r3, r2
    37bc:	bne	37b4 <storeAtts+0x6bc>
    37c0:	mvn	r3, #1
    37c4:	str	r3, [sp, #8]
    37c8:	b	34e4 <storeAtts+0x3ec>
    37cc:	ldr	r2, [r5, #404]	; 0x194
    37d0:	add	r2, r2, r8
    37d4:	ldr	r3, [r5, #448]	; 0x1c0
    37d8:	ldr	r1, [r5, #444]	; 0x1bc
    37dc:	ldr	r0, [sp, #20]
    37e0:	str	r1, [r5, #448]	; 0x1c0
    37e4:	str	r3, [fp, r6, lsl #2]
    37e8:	str	r3, [r2, #8]
    37ec:	ldr	r3, [sp, #8]
    37f0:	subs	r0, r0, #1
    37f4:	str	r0, [sp, #20]
    37f8:	stm	r2, {r3, r4}
    37fc:	bne	3534 <storeAtts+0x43c>
    3800:	add	r3, r6, #2
    3804:	str	r3, [sp, #20]
    3808:	ldr	r3, [sp, #20]
    380c:	cmp	r3, r9
    3810:	movlt	r2, #0
    3814:	ldrlt	r3, [sp, #20]
    3818:	bge	3830 <storeAtts+0x738>
    381c:	ldr	r1, [fp, r3, lsl #2]
    3820:	add	r3, r3, #2
    3824:	cmp	r3, r9
    3828:	strb	r2, [r1, #-1]
    382c:	blt	381c <storeAtts+0x724>
    3830:	ldr	r3, [sp, #96]	; 0x60
    3834:	ldr	r3, [r3]
    3838:	cmp	r3, #0
    383c:	movne	r1, #0
    3840:	beq	385c <storeAtts+0x764>
    3844:	ldr	r2, [r3, #12]
    3848:	ldr	r2, [r2]
    384c:	strb	r1, [r2, #-1]
    3850:	ldr	r3, [r3, #4]
    3854:	cmp	r3, #0
    3858:	bne	3844 <storeAtts+0x74c>
    385c:	ldrb	r0, [r5, #244]	; 0xf4
    3860:	cmp	r0, #0
    3864:	beq	32e8 <storeAtts+0x1f0>
    3868:	ldr	r3, [sp, #24]
    386c:	ldr	r3, [r3, #4]
    3870:	cmp	r3, #0
    3874:	beq	3b90 <storeAtts+0xa98>
    3878:	ldr	r4, [r3, #4]
    387c:	cmp	r4, #0
    3880:	beq	39d4 <storeAtts+0x8dc>
    3884:	ldr	r3, [sp, #28]
    3888:	ldr	r7, [r3]
    388c:	ldrb	r3, [r7], #1
    3890:	cmp	r3, #58	; 0x3a
    3894:	bne	388c <storeAtts+0x794>
    3898:	ldrb	r8, [r5, #245]	; 0xf5
    389c:	ldr	r3, [r4]
    38a0:	cmp	r8, #0
    38a4:	ldr	r1, [r3]
    38a8:	beq	38d0 <storeAtts+0x7d8>
    38ac:	cmp	r1, #0
    38b0:	moveq	r8, r1
    38b4:	beq	38d0 <storeAtts+0x7d8>
    38b8:	sub	r3, r1, #1
    38bc:	mov	r8, #0
    38c0:	ldrb	r2, [r3, #1]!
    38c4:	add	r8, r8, #1
    38c8:	cmp	r2, #0
    38cc:	bne	38c0 <storeAtts+0x7c8>
    38d0:	ldr	r2, [sp, #28]
    38d4:	ldr	r0, [r4, #20]
    38d8:	sub	r3, r7, #1
    38dc:	mov	r6, #0
    38e0:	str	r7, [r2, #4]
    38e4:	str	r0, [r2, #16]
    38e8:	str	r1, [r2, #8]
    38ec:	str	r8, [r2, #20]
    38f0:	ldrb	r2, [r3, #1]!
    38f4:	add	r6, r6, #1
    38f8:	cmp	r2, #0
    38fc:	bne	38f0 <storeAtts+0x7f8>
    3900:	add	sl, r0, r6
    3904:	ldr	r3, [r4, #24]
    3908:	add	sl, sl, r8
    390c:	cmp	sl, r3
    3910:	bgt	39dc <storeAtts+0x8e4>
    3914:	ldr	r9, [r4, #16]
    3918:	add	r9, r9, r0
    391c:	mov	r1, r7
    3920:	mov	r0, r9
    3924:	mov	r2, r6
    3928:	bl	0 <memcpy>
    392c:	cmp	r8, #0
    3930:	bne	3b6c <storeAtts+0xa74>
    3934:	ldr	r2, [sp, #28]
    3938:	ldr	r3, [r4, #16]
    393c:	mov	r0, #0
    3940:	str	r3, [r2]
    3944:	b	32e8 <storeAtts+0x1f0>
    3948:	mov	r6, fp
    394c:	ldr	fp, [sp, #52]	; 0x34
    3950:	ldrb	r3, [r8], #1
    3954:	cmp	r3, #58	; 0x3a
    3958:	beq	39a8 <storeAtts+0x8b0>
    395c:	ldrb	r3, [r8], #1
    3960:	cmp	r3, #58	; 0x3a
    3964:	bne	3950 <storeAtts+0x858>
    3968:	b	39a8 <storeAtts+0x8b0>
    396c:	ldr	r0, [sp, #36]	; 0x24
    3970:	bl	ec8 <poolGrow>
    3974:	cmp	r0, #0
    3978:	beq	3694 <storeAtts+0x59c>
    397c:	ldr	r3, [r5, #444]	; 0x1bc
    3980:	ldr	r2, [pc, #552]	; 3bb0 <storeAtts+0xab8>
    3984:	mul	r4, r2, r4
    3988:	add	r2, r3, #1
    398c:	str	r2, [r5, #444]	; 0x1bc
    3990:	ldrb	r2, [r8]
    3994:	eor	r4, r4, sl
    3998:	strb	r2, [r3]
    399c:	ldrb	r3, [r8], #1
    39a0:	cmp	r3, #0
    39a4:	beq	3a4c <storeAtts+0x954>
    39a8:	ldr	r3, [r5, #444]	; 0x1bc
    39ac:	ldr	r2, [r5, #440]	; 0x1b8
    39b0:	ldrb	sl, [r8]
    39b4:	cmp	r3, r2
    39b8:	bne	3980 <storeAtts+0x888>
    39bc:	b	396c <storeAtts+0x874>
    39c0:	ldr	r3, [r5, #400]	; 0x190
    39c4:	mov	r0, #8
    39c8:	ldr	r3, [r3, sl]
    39cc:	str	r3, [r5, #296]	; 0x128
    39d0:	b	32e8 <storeAtts+0x1f0>
    39d4:	mov	r0, #27
    39d8:	b	32e8 <storeAtts+0x1f0>
    39dc:	add	sl, sl, #24
    39e0:	mov	r0, sl
    39e4:	ldr	r3, [r5, #12]
    39e8:	blx	r3
    39ec:	subs	r9, r0, #0
    39f0:	beq	3694 <storeAtts+0x59c>
    39f4:	str	sl, [r4, #24]
    39f8:	ldr	r2, [r4, #20]
    39fc:	ldr	r1, [r4, #16]
    3a00:	bl	0 <memcpy>
    3a04:	ldr	r3, [r5, #372]	; 0x174
    3a08:	ldr	r0, [r4, #16]
    3a0c:	cmp	r3, #0
    3a10:	beq	3a2c <storeAtts+0x934>
    3a14:	ldr	r2, [r3, #12]
    3a18:	cmp	r2, r0
    3a1c:	streq	r9, [r3, #12]
    3a20:	ldr	r3, [r3]
    3a24:	cmp	r3, #0
    3a28:	bne	3a14 <storeAtts+0x91c>
    3a2c:	ldr	r3, [r5, #20]
    3a30:	blx	r3
    3a34:	ldr	r0, [r4, #20]
    3a38:	str	r9, [r4, #16]
    3a3c:	b	3918 <storeAtts+0x820>
    3a40:	str	r3, [sp, #20]
    3a44:	mov	r9, r3
    3a48:	b	336c <storeAtts+0x274>
    3a4c:	ldr	r3, [sp, #44]	; 0x2c
    3a50:	ldr	r8, [r5, #404]	; 0x194
    3a54:	and	lr, r3, r4
    3a58:	ldr	r3, [sp, #48]	; 0x30
    3a5c:	mov	r1, #0
    3a60:	and	sl, r3, r4
    3a64:	b	3a94 <storeAtts+0x99c>
    3a68:	cmp	r1, #0
    3a6c:	ldrbeq	r1, [r5, #412]	; 0x19c
    3a70:	ldreq	r3, [sp, #16]
    3a74:	subeq	r1, r1, #1
    3a78:	andeq	r1, r3, sl, lsr r1
    3a7c:	orreq	r1, r1, #1
    3a80:	cmp	lr, r1
    3a84:	subge	lr, lr, r1
    3a88:	ldrlt	r3, [sp, #12]
    3a8c:	sublt	r3, r3, r1
    3a90:	addlt	lr, lr, r3
    3a94:	add	r3, lr, lr, lsl #1
    3a98:	ldr	r0, [sp, #8]
    3a9c:	ldr	r2, [r8, r3, lsl #2]
    3aa0:	lsl	r3, r3, #2
    3aa4:	cmp	r2, r0
    3aa8:	add	r2, r8, r3
    3aac:	bne	3b00 <storeAtts+0xa08>
    3ab0:	ldr	r3, [r2, #4]
    3ab4:	cmp	r4, r3
    3ab8:	bne	3a68 <storeAtts+0x970>
    3abc:	ldr	r2, [r2, #8]
    3ac0:	ldr	ip, [r5, #448]	; 0x1c0
    3ac4:	ldrb	r3, [r2]
    3ac8:	ldrb	r0, [ip]
    3acc:	cmp	r3, r0
    3ad0:	beq	3ae8 <storeAtts+0x9f0>
    3ad4:	b	3af4 <storeAtts+0x9fc>
    3ad8:	ldrb	r0, [ip, #1]!
    3adc:	ldrb	r3, [r2, #1]!
    3ae0:	cmp	r3, r0
    3ae4:	bne	3af4 <storeAtts+0x9fc>
    3ae8:	cmp	r3, #0
    3aec:	bne	3ad8 <storeAtts+0x9e0>
    3af0:	b	36f8 <storeAtts+0x600>
    3af4:	cmp	r0, #0
    3af8:	bne	3a68 <storeAtts+0x970>
    3afc:	b	36f8 <storeAtts+0x600>
    3b00:	ldrb	r1, [r5, #245]	; 0xf5
    3b04:	cmp	r1, #0
    3b08:	beq	37d4 <storeAtts+0x6dc>
    3b0c:	ldr	r2, [r5, #444]	; 0x1bc
    3b10:	ldrb	r1, [r5, #488]	; 0x1e8
    3b14:	mov	r8, r3
    3b18:	strb	r1, [r2, #-1]
    3b1c:	ldr	r2, [r7]
    3b20:	ldr	r7, [r2]
    3b24:	b	3b44 <storeAtts+0xa4c>
    3b28:	add	r1, r2, #1
    3b2c:	str	r1, [r5, #444]	; 0x1bc
    3b30:	ldrb	r1, [r7]
    3b34:	strb	r1, [r2]
    3b38:	ldrb	r2, [r7], #1
    3b3c:	cmp	r2, #0
    3b40:	beq	37cc <storeAtts+0x6d4>
    3b44:	ldr	r2, [r5, #444]	; 0x1bc
    3b48:	ldr	r3, [r5, #440]	; 0x1b8
    3b4c:	cmp	r2, r3
    3b50:	bne	3b28 <storeAtts+0xa30>
    3b54:	ldr	r0, [sp, #36]	; 0x24
    3b58:	bl	ec8 <poolGrow>
    3b5c:	cmp	r0, #0
    3b60:	beq	3694 <storeAtts+0x59c>
    3b64:	ldr	r2, [r5, #444]	; 0x1bc
    3b68:	b	3b28 <storeAtts+0xa30>
    3b6c:	ldrb	r3, [r5, #488]	; 0x1e8
    3b70:	add	r9, r9, r6
    3b74:	mov	r0, r9
    3b78:	strb	r3, [r9, #-1]
    3b7c:	ldr	r3, [r4]
    3b80:	mov	r2, r8
    3b84:	ldr	r1, [r3]
    3b88:	bl	0 <memcpy>
    3b8c:	b	3934 <storeAtts+0x83c>
    3b90:	ldr	r3, [sp, #32]
    3b94:	ldr	r4, [r3, #156]	; 0x9c
    3b98:	cmp	r4, #0
    3b9c:	ldrne	r3, [sp, #28]
    3ba0:	ldrne	r7, [r3]
    3ba4:	bne	3898 <storeAtts+0x7a0>
    3ba8:	mov	r0, r4
    3bac:	b	32e8 <storeAtts+0x1f0>
    3bb0:	.word	0x000f4243

00003bb4 <doContent>:
    3bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3bb8:	sub	sp, sp, #76	; 0x4c
    3bbc:	mov	r5, r2
    3bc0:	ldr	r2, [r0, #152]	; 0x98
    3bc4:	str	r3, [sp, #36]	; 0x24
    3bc8:	ldr	r3, [r0, #364]	; 0x16c
    3bcc:	cmp	r2, r5
    3bd0:	str	r3, [sp, #20]
    3bd4:	ldrb	r3, [sp, #120]	; 0x78
    3bd8:	ldrne	r6, [r0, #308]	; 0x134
    3bdc:	addeq	r6, r0, #296	; 0x128
    3be0:	str	r3, [sp, #8]
    3be4:	mov	r4, r0
    3be8:	ldr	r3, [sp, #36]	; 0x24
    3bec:	addeq	r8, r0, #300	; 0x12c
    3bf0:	addne	r8, r6, #4
    3bf4:	add	r2, r0, #432	; 0x1b0
    3bf8:	str	r1, [sp, #12]
    3bfc:	str	r2, [sp, #16]
    3c00:	str	r3, [r6]
    3c04:	ldr	r1, [sp, #36]	; 0x24
    3c08:	add	r3, sp, #40	; 0x28
    3c0c:	ldr	r7, [r5, #4]
    3c10:	str	r1, [sp, #40]	; 0x28
    3c14:	ldr	r2, [sp, #112]	; 0x70
    3c18:	mov	r0, r5
    3c1c:	blx	r7
    3c20:	ldr	r3, [sp, #40]	; 0x28
    3c24:	str	r3, [r8]
    3c28:	add	r0, r0, #5
    3c2c:	cmp	r0, #18
    3c30:	ldrls	pc, [pc, r0, lsl #2]
    3c34:	b	4498 <doContent+0x8e4>
    3c38:	.word	0x00003ce4
    3c3c:	.word	0x000040dc
    3c40:	.word	0x00004108
    3c44:	.word	0x00003ee8
    3c48:	.word	0x00003f10
    3c4c:	.word	0x00003f24
    3c50:	.word	0x00003f34
    3c54:	.word	0x00003f34
    3c58:	.word	0x00003d64
    3c5c:	.word	0x00003d64
    3c60:	.word	0x00004324
    3c64:	.word	0x00004268
    3c68:	.word	0x000042f8
    3c6c:	.word	0x00004154
    3c70:	.word	0x000041ac
    3c74:	.word	0x000041fc
    3c78:	.word	0x00004244
    3c7c:	.word	0x00003c84
    3c80:	.word	0x00003c90
    3c84:	mov	r0, #17
    3c88:	add	sp, sp, #76	; 0x4c
    3c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3c90:	ldr	r3, [sp, #40]	; 0x28
    3c94:	ldr	r2, [sp, #36]	; 0x24
    3c98:	mov	r1, r5
    3c9c:	mov	r0, r4
    3ca0:	bl	2dc8 <reportComment>
    3ca4:	cmp	r0, #0
    3ca8:	beq	4260 <doContent+0x6ac>
    3cac:	ldr	r3, [sp, #40]	; 0x28
    3cb0:	ldr	r2, [r4, #496]	; 0x1f0
    3cb4:	str	r3, [sp, #36]	; 0x24
    3cb8:	cmp	r2, #2
    3cbc:	str	r3, [r6]
    3cc0:	beq	44bc <doContent+0x908>
    3cc4:	cmp	r2, #3
    3cc8:	bne	3c04 <doContent+0x50>
    3ccc:	ldr	r2, [sp, #116]	; 0x74
    3cd0:	ldr	r3, [sp, #40]	; 0x28
    3cd4:	mov	r0, #0
    3cd8:	str	r3, [r2]
    3cdc:	add	sp, sp, #76	; 0x4c
    3ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3ce4:	ldr	r3, [sp, #8]
    3ce8:	cmp	r3, #0
    3cec:	bne	3ef8 <doContent+0x344>
    3cf0:	ldr	r3, [r4, #68]	; 0x44
    3cf4:	cmp	r3, #0
    3cf8:	beq	46c8 <doContent+0xb14>
    3cfc:	ldrb	r2, [r5, #72]	; 0x48
    3d00:	cmp	r2, #0
    3d04:	bne	45e8 <doContent+0xa34>
    3d08:	ldr	r1, [r4, #52]	; 0x34
    3d0c:	add	r3, sp, #72	; 0x48
    3d10:	ldr	r2, [r4, #56]	; 0x38
    3d14:	str	r1, [r3, #-24]!	; 0xffffffe8
    3d18:	mov	r0, r5
    3d1c:	str	r2, [sp]
    3d20:	add	r1, sp, #36	; 0x24
    3d24:	ldr	r2, [sp, #112]	; 0x70
    3d28:	ldr	r7, [r5, #60]	; 0x3c
    3d2c:	blx	r7
    3d30:	ldr	r3, [r4, #52]	; 0x34
    3d34:	ldr	r2, [sp, #48]	; 0x30
    3d38:	mov	r1, r3
    3d3c:	sub	r2, r2, r3
    3d40:	ldr	r0, [r4, #4]
    3d44:	ldr	r3, [r4, #68]	; 0x44
    3d48:	blx	r3
    3d4c:	ldr	r3, [sp, #12]
    3d50:	cmp	r3, #0
    3d54:	bne	461c <doContent+0xa68>
    3d58:	ldr	r3, [sp, #112]	; 0x70
    3d5c:	str	r3, [r6]
    3d60:	b	414c <doContent+0x598>
    3d64:	ldr	r2, [r5, #68]	; 0x44
    3d68:	ldr	r7, [sp, #36]	; 0x24
    3d6c:	mov	r3, #0
    3d70:	add	r7, r7, r2
    3d74:	mov	r1, r7
    3d78:	str	r3, [sp, #44]	; 0x2c
    3d7c:	mov	r0, r5
    3d80:	ldr	r3, [r5, #32]
    3d84:	blx	r3
    3d88:	mov	r2, r7
    3d8c:	mov	r1, r5
    3d90:	add	r3, r7, r0
    3d94:	ldr	r0, [sp, #16]
    3d98:	bl	1108 <poolStoreString>
    3d9c:	cmp	r0, #0
    3da0:	str	r0, [sp, #48]	; 0x30
    3da4:	beq	4260 <doContent+0x6ac>
    3da8:	ldr	r3, [r4, #444]	; 0x1bc
    3dac:	add	r1, sp, #44	; 0x2c
    3db0:	str	r3, [r4, #448]	; 0x1c0
    3db4:	ldr	r2, [sp, #36]	; 0x24
    3db8:	str	r1, [sp]
    3dbc:	add	r3, sp, #48	; 0x30
    3dc0:	mov	r1, r5
    3dc4:	mov	r0, r4
    3dc8:	bl	30f8 <storeAtts>
    3dcc:	cmp	r0, #0
    3dd0:	bne	3c88 <doContent+0xd4>
    3dd4:	ldr	r3, [r4, #60]	; 0x3c
    3dd8:	ldr	r2, [r4, #444]	; 0x1bc
    3ddc:	cmp	r3, #0
    3de0:	str	r2, [r4, #448]	; 0x1c0
    3de4:	beq	45b8 <doContent+0xa04>
    3de8:	ldr	r2, [r4, #400]	; 0x190
    3dec:	ldr	r1, [sp, #48]	; 0x30
    3df0:	ldr	r0, [r4, #4]
    3df4:	blx	r3
    3df8:	ldr	r3, [r4, #64]	; 0x40
    3dfc:	cmp	r3, #0
    3e00:	beq	3e20 <doContent+0x26c>
    3e04:	ldr	r2, [r4, #60]	; 0x3c
    3e08:	cmp	r2, #0
    3e0c:	ldrne	r2, [r8]
    3e10:	strne	r2, [r6]
    3e14:	ldr	r1, [sp, #48]	; 0x30
    3e18:	ldr	r0, [r4, #4]
    3e1c:	blx	r3
    3e20:	ldr	r1, [r4, #436]	; 0x1b4
    3e24:	ldr	r3, [r4, #432]	; 0x1b0
    3e28:	cmp	r1, #0
    3e2c:	beq	3e54 <doContent+0x2a0>
    3e30:	cmp	r3, #0
    3e34:	bne	3e40 <doContent+0x28c>
    3e38:	b	3e58 <doContent+0x2a4>
    3e3c:	mov	r3, r2
    3e40:	ldr	r2, [r3]
    3e44:	str	r1, [r3]
    3e48:	cmp	r2, #0
    3e4c:	mov	r1, r3
    3e50:	bne	3e3c <doContent+0x288>
    3e54:	str	r3, [r4, #436]	; 0x1b4
    3e58:	ldr	r7, [sp, #44]	; 0x2c
    3e5c:	mov	r3, #0
    3e60:	cmp	r7, r3
    3e64:	str	r3, [r4, #432]	; 0x1b0
    3e68:	str	r3, [r4, #448]	; 0x1c0
    3e6c:	str	r3, [r4, #444]	; 0x1bc
    3e70:	str	r3, [r4, #440]	; 0x1b8
    3e74:	beq	3ec4 <doContent+0x310>
    3e78:	ldr	r3, [r4, #112]	; 0x70
    3e7c:	cmp	r3, #0
    3e80:	beq	3e94 <doContent+0x2e0>
    3e84:	ldr	r2, [r7]
    3e88:	ldr	r0, [r4, #4]
    3e8c:	ldr	r1, [r2]
    3e90:	blx	r3
    3e94:	ldr	r3, [sp, #44]	; 0x2c
    3e98:	ldr	r2, [r7]
    3e9c:	ldr	r0, [r4, #384]	; 0x180
    3ea0:	ldr	r3, [r3, #4]
    3ea4:	str	r3, [sp, #44]	; 0x2c
    3ea8:	ldr	r1, [r7, #8]
    3eac:	cmp	r3, #0
    3eb0:	str	r0, [r7, #4]
    3eb4:	str	r7, [r4, #384]	; 0x180
    3eb8:	mov	r7, r3
    3ebc:	str	r1, [r2, #4]
    3ec0:	bne	3e78 <doContent+0x2c4>
    3ec4:	ldr	r3, [r4, #320]	; 0x140
    3ec8:	cmp	r3, #0
    3ecc:	bne	3cac <doContent+0xf8>
    3ed0:	mov	r0, r4
    3ed4:	ldr	r3, [sp, #116]	; 0x74
    3ed8:	ldr	r2, [sp, #112]	; 0x70
    3edc:	ldr	r1, [sp, #40]	; 0x28
    3ee0:	bl	2e94 <epilogProcessor>
    3ee4:	b	3c88 <doContent+0xd4>
    3ee8:	ldr	r3, [sp, #8]
    3eec:	cmp	r3, #0
    3ef0:	moveq	r0, #6
    3ef4:	beq	3c88 <doContent+0xd4>
    3ef8:	ldr	r2, [sp, #116]	; 0x74
    3efc:	ldr	r3, [sp, #36]	; 0x24
    3f00:	mov	r0, #0
    3f04:	str	r3, [r2]
    3f08:	add	sp, sp, #76	; 0x4c
    3f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3f10:	ldr	r3, [sp, #8]
    3f14:	cmp	r3, #0
    3f18:	moveq	r0, #5
    3f1c:	beq	3c88 <doContent+0xd4>
    3f20:	b	3ef8 <doContent+0x344>
    3f24:	ldr	r3, [sp, #40]	; 0x28
    3f28:	mov	r0, #4
    3f2c:	str	r3, [r6]
    3f30:	b	3c88 <doContent+0xd4>
    3f34:	ldr	r7, [r4, #376]	; 0x178
    3f38:	cmp	r7, #0
    3f3c:	beq	46ec <doContent+0xb38>
    3f40:	ldr	r3, [r7]
    3f44:	str	r3, [r4, #376]	; 0x178
    3f48:	ldr	r0, [r5, #68]	; 0x44
    3f4c:	ldr	r3, [sp, #36]	; 0x24
    3f50:	ldr	r1, [r4, #372]	; 0x174
    3f54:	mov	r2, #0
    3f58:	add	r3, r3, r0
    3f5c:	ldr	r9, [r5, #32]
    3f60:	str	r1, [r7]
    3f64:	str	r2, [r7, #44]	; 0x2c
    3f68:	mov	r1, r3
    3f6c:	str	r7, [r4, #372]	; 0x174
    3f70:	mov	r0, r5
    3f74:	str	r2, [r7, #16]
    3f78:	str	r2, [r7, #20]
    3f7c:	str	r3, [r7, #4]
    3f80:	blx	r9
    3f84:	ldr	r9, [r7, #4]
    3f88:	add	r3, sp, #72	; 0x48
    3f8c:	mov	r1, r3
    3f90:	ldr	r3, [r4, #320]	; 0x140
    3f94:	str	r6, [sp, #24]
    3f98:	add	r3, r3, #1
    3f9c:	str	r0, [r7, #8]
    3fa0:	str	r9, [sp, #48]	; 0x30
    3fa4:	ldr	r2, [r7, #36]	; 0x24
    3fa8:	add	r9, r9, r0
    3fac:	str	r2, [r1, #-28]!	; 0xffffffe4
    3fb0:	ldr	r2, [r7, #40]	; 0x28
    3fb4:	mov	fp, r1
    3fb8:	str	r3, [r4, #320]	; 0x140
    3fbc:	mov	sl, r2
    3fc0:	b	3ff8 <doContent+0x444>
    3fc4:	ldr	sl, [r7, #40]	; 0x28
    3fc8:	ldr	r3, [r4, #16]
    3fcc:	sub	sl, sl, r2
    3fd0:	lsl	sl, sl, #1
    3fd4:	mov	r1, sl
    3fd8:	blx	r3
    3fdc:	cmp	r0, #0
    3fe0:	add	sl, r0, sl
    3fe4:	add	r3, r0, r6
    3fe8:	beq	4260 <doContent+0x6ac>
    3fec:	str	r0, [r7, #36]	; 0x24
    3ff0:	str	sl, [r7, #40]	; 0x28
    3ff4:	str	r3, [sp, #44]	; 0x2c
    3ff8:	sub	sl, sl, #1
    3ffc:	str	sl, [sp]
    4000:	mov	r3, fp
    4004:	mov	r2, r9
    4008:	add	r1, sp, #48	; 0x30
    400c:	mov	r0, r5
    4010:	ldr	sl, [r5, #60]	; 0x3c
    4014:	blx	sl
    4018:	ldr	r3, [sp, #48]	; 0x30
    401c:	ldr	r2, [r7, #36]	; 0x24
    4020:	ldr	r1, [sp, #44]	; 0x2c
    4024:	cmp	r9, r3
    4028:	mov	r0, r2
    402c:	sub	r6, r1, r2
    4030:	bne	3fc4 <doContent+0x410>
    4034:	mov	r3, r7
    4038:	mov	fp, r6
    403c:	mov	r0, #0
    4040:	str	fp, [r7, #24]
    4044:	str	r2, [r3, #12]!
    4048:	strb	r0, [r1]
    404c:	add	r1, r7, #44	; 0x2c
    4050:	str	r1, [sp]
    4054:	ldr	r2, [sp, #36]	; 0x24
    4058:	mov	r1, r5
    405c:	mov	r0, r4
    4060:	ldr	r6, [sp, #24]
    4064:	bl	30f8 <storeAtts>
    4068:	cmp	r0, #0
    406c:	bne	3c88 <doContent+0xd4>
    4070:	ldr	r3, [r4, #60]	; 0x3c
    4074:	cmp	r3, #0
    4078:	beq	4680 <doContent+0xacc>
    407c:	ldr	r1, [r7, #12]
    4080:	ldr	r2, [r4, #400]	; 0x190
    4084:	ldr	r0, [r4, #4]
    4088:	blx	r3
    408c:	ldr	r1, [r4, #436]	; 0x1b4
    4090:	ldr	r3, [r4, #432]	; 0x1b0
    4094:	cmp	r1, #0
    4098:	beq	40c0 <doContent+0x50c>
    409c:	cmp	r3, #0
    40a0:	bne	40ac <doContent+0x4f8>
    40a4:	b	40c4 <doContent+0x510>
    40a8:	mov	r3, r2
    40ac:	ldr	r2, [r3]
    40b0:	str	r1, [r3]
    40b4:	cmp	r2, #0
    40b8:	mov	r1, r3
    40bc:	bne	40a8 <doContent+0x4f4>
    40c0:	str	r3, [r4, #436]	; 0x1b4
    40c4:	mov	r3, #0
    40c8:	str	r3, [r4, #432]	; 0x1b0
    40cc:	str	r3, [r4, #448]	; 0x1c0
    40d0:	str	r3, [r4, #444]	; 0x1bc
    40d4:	str	r3, [r4, #440]	; 0x1b8
    40d8:	b	3cac <doContent+0xf8>
    40dc:	ldr	r3, [sp, #8]
    40e0:	cmp	r3, #0
    40e4:	bne	3ef8 <doContent+0x344>
    40e8:	ldr	r2, [sp, #12]
    40ec:	cmp	r2, #0
    40f0:	ble	414c <doContent+0x598>
    40f4:	ldr	r3, [r4, #320]	; 0x140
    40f8:	cmp	r2, r3
    40fc:	beq	3ef8 <doContent+0x344>
    4100:	mov	r0, #13
    4104:	b	3c88 <doContent+0xd4>
    4108:	ldr	r3, [sp, #8]
    410c:	cmp	r3, #0
    4110:	bne	3ef8 <doContent+0x344>
    4114:	ldr	r3, [r4, #68]	; 0x44
    4118:	ldr	r2, [sp, #112]	; 0x70
    411c:	cmp	r3, #0
    4120:	str	r2, [r8]
    4124:	beq	465c <doContent+0xaa8>
    4128:	add	r1, sp, #72	; 0x48
    412c:	mov	r2, #10
    4130:	strb	r2, [r1, #-24]!	; 0xffffffe8
    4134:	ldr	r0, [r4, #4]
    4138:	mov	r2, #1
    413c:	blx	r3
    4140:	ldr	r3, [sp, #12]
    4144:	cmp	r3, #0
    4148:	bne	4638 <doContent+0xa84>
    414c:	mov	r0, #3
    4150:	b	3c88 <doContent+0xd4>
    4154:	ldr	r3, [r4, #80]	; 0x50
    4158:	cmp	r3, #0
    415c:	beq	44c8 <doContent+0x914>
    4160:	ldr	r0, [r4, #4]
    4164:	blx	r3
    4168:	ldr	r3, [sp, #8]
    416c:	add	r2, sp, #40	; 0x28
    4170:	str	r3, [sp, #4]
    4174:	ldr	r3, [sp, #116]	; 0x74
    4178:	mov	r1, r5
    417c:	str	r3, [sp]
    4180:	mov	r0, r4
    4184:	ldr	r3, [sp, #112]	; 0x70
    4188:	bl	14c <doCdataSection>
    418c:	cmp	r0, #0
    4190:	bne	3c88 <doContent+0xd4>
    4194:	ldr	r3, [sp, #40]	; 0x28
    4198:	cmp	r3, #0
    419c:	bne	3cb0 <doContent+0xfc>
    41a0:	ldr	r3, [pc, #2648]	; 4c00 <doContent+0x104c>
    41a4:	str	r3, [r4, #288]	; 0x120
    41a8:	b	3c88 <doContent+0xd4>
    41ac:	ldr	r3, [r5, #68]	; 0x44
    41b0:	ldr	r2, [sp, #40]	; 0x28
    41b4:	ldr	r1, [sp, #36]	; 0x24
    41b8:	sub	r2, r2, r3
    41bc:	add	r1, r1, r3
    41c0:	mov	r0, r5
    41c4:	ldr	r3, [r5, #48]	; 0x30
    41c8:	blx	r3
    41cc:	uxtb	r7, r0
    41d0:	cmp	r7, #0
    41d4:	strb	r7, [sp, #48]	; 0x30
    41d8:	beq	4500 <doContent+0x94c>
    41dc:	ldr	r3, [r4, #68]	; 0x44
    41e0:	cmp	r3, #0
    41e4:	beq	4498 <doContent+0x8e4>
    41e8:	mov	r2, #1
    41ec:	add	r1, sp, #48	; 0x30
    41f0:	ldr	r0, [r4, #4]
    41f4:	blx	r3
    41f8:	b	3cac <doContent+0xf8>
    41fc:	ldr	r3, [r5, #44]	; 0x2c
    4200:	ldr	r1, [sp, #36]	; 0x24
    4204:	mov	r0, r5
    4208:	blx	r3
    420c:	cmp	r0, #0
    4210:	blt	4814 <doContent+0xc60>
    4214:	ldr	r7, [r4, #68]	; 0x44
    4218:	cmp	r7, #0
    421c:	beq	44ec <doContent+0x938>
    4220:	add	r1, sp, #48	; 0x30
    4224:	ldr	r9, [r4, #4]
    4228:	bl	0 <coda_XmlUtf8Encode>
    422c:	add	r1, sp, #48	; 0x30
    4230:	mov	r2, r0
    4234:	mov	r0, r9
    4238:	blx	r7
    423c:	ldr	r3, [sp, #40]	; 0x28
    4240:	b	3cb0 <doContent+0xfc>
    4244:	ldr	r3, [sp, #40]	; 0x28
    4248:	ldr	r2, [sp, #36]	; 0x24
    424c:	mov	r1, r5
    4250:	mov	r0, r4
    4254:	bl	2ca0 <reportProcessingInstruction>
    4258:	cmp	r0, #0
    425c:	bne	3cac <doContent+0xf8>
    4260:	mov	r0, #1
    4264:	b	3c88 <doContent+0xd4>
    4268:	ldr	r7, [r4, #68]	; 0x44
    426c:	cmp	r7, #0
    4270:	beq	4498 <doContent+0x8e4>
    4274:	ldrb	r3, [r5, #72]	; 0x48
    4278:	cmp	r3, #0
    427c:	beq	42a0 <doContent+0x6ec>
    4280:	ldr	r3, [sp, #36]	; 0x24
    4284:	ldr	r2, [sp, #40]	; 0x28
    4288:	mov	r1, r3
    428c:	sub	r2, r2, r3
    4290:	ldr	r0, [r4, #4]
    4294:	blx	r7
    4298:	b	3cac <doContent+0xf8>
    429c:	str	r3, [r6]
    42a0:	ldr	r1, [r4, #52]	; 0x34
    42a4:	ldr	r3, [r4, #56]	; 0x38
    42a8:	ldr	r2, [sp, #40]	; 0x28
    42ac:	str	r3, [sp]
    42b0:	str	r1, [sp, #48]	; 0x30
    42b4:	add	r3, sp, #48	; 0x30
    42b8:	add	r1, sp, #36	; 0x24
    42bc:	mov	r0, r5
    42c0:	ldr	r9, [r5, #60]	; 0x3c
    42c4:	blx	r9
    42c8:	ldr	r3, [sp, #36]	; 0x24
    42cc:	str	r3, [r8]
    42d0:	ldr	r2, [sp, #48]	; 0x30
    42d4:	ldr	r1, [r4, #52]	; 0x34
    42d8:	ldr	r0, [r4, #4]
    42dc:	sub	r2, r2, r1
    42e0:	blx	r7
    42e4:	ldr	r3, [sp, #36]	; 0x24
    42e8:	ldr	r2, [sp, #40]	; 0x28
    42ec:	cmp	r3, r2
    42f0:	bne	429c <doContent+0x6e8>
    42f4:	b	3cb0 <doContent+0xfc>
    42f8:	ldr	r3, [r4, #68]	; 0x44
    42fc:	cmp	r3, #0
    4300:	beq	4498 <doContent+0x8e4>
    4304:	mov	r2, #10
    4308:	strb	r2, [sp, #48]	; 0x30
    430c:	add	r1, sp, #48	; 0x30
    4310:	mov	r2, #1
    4314:	ldr	r0, [r4, #4]
    4318:	blx	r3
    431c:	ldr	r3, [sp, #40]	; 0x28
    4320:	b	3cb0 <doContent+0xfc>
    4324:	ldr	r3, [r4, #320]	; 0x140
    4328:	ldr	r2, [sp, #12]
    432c:	cmp	r3, r2
    4330:	beq	4100 <doContent+0x54c>
    4334:	ldr	sl, [r4, #372]	; 0x174
    4338:	ldr	r1, [r5, #68]	; 0x44
    433c:	ldr	r9, [sp, #36]	; 0x24
    4340:	ldr	r2, [sl]
    4344:	ldr	r3, [r4, #376]	; 0x178
    4348:	add	r9, r9, r1, lsl #1
    434c:	str	r2, [r4, #372]	; 0x174
    4350:	mov	r1, r9
    4354:	str	r3, [sl]
    4358:	mov	r0, r5
    435c:	ldr	r3, [r5, #32]
    4360:	str	sl, [r4, #376]	; 0x178
    4364:	blx	r3
    4368:	ldr	r3, [sl, #8]
    436c:	cmp	r0, r3
    4370:	bne	4750 <doContent+0xb9c>
    4374:	mov	r2, r0
    4378:	mov	r1, r9
    437c:	ldr	r0, [sl, #4]
    4380:	bl	0 <memcmp>
    4384:	cmp	r0, #0
    4388:	bne	4750 <doContent+0xb9c>
    438c:	ldr	r3, [r4, #320]	; 0x140
    4390:	ldr	r7, [r4, #64]	; 0x40
    4394:	sub	r3, r3, #1
    4398:	cmp	r7, #0
    439c:	str	r3, [r4, #320]	; 0x140
    43a0:	beq	46a4 <doContent+0xaf0>
    43a4:	ldrb	r3, [r4, #244]	; 0xf4
    43a8:	ldr	r2, [sl, #16]
    43ac:	cmp	r3, #0
    43b0:	cmpne	r2, #0
    43b4:	beq	442c <doContent+0x878>
    43b8:	ldrb	r3, [r2]
    43bc:	ldr	r1, [sl, #12]
    43c0:	ldr	r0, [sl, #28]
    43c4:	cmp	r3, #0
    43c8:	add	r1, r1, r0
    43cc:	beq	43e0 <doContent+0x82c>
    43d0:	strb	r3, [r1], #1
    43d4:	ldrb	r3, [r2, #1]!
    43d8:	cmp	r3, #0
    43dc:	bne	43d0 <doContent+0x81c>
    43e0:	ldrb	r3, [r4, #245]	; 0xf5
    43e4:	ldr	r2, [sl, #20]
    43e8:	cmp	r3, #0
    43ec:	cmpne	r2, #0
    43f0:	moveq	r0, r1
    43f4:	beq	4420 <doContent+0x86c>
    43f8:	ldrb	r3, [r4, #488]	; 0x1e8
    43fc:	add	r0, r1, #1
    4400:	strb	r3, [r1]
    4404:	ldrb	r3, [r2]
    4408:	cmp	r3, #0
    440c:	beq	4420 <doContent+0x86c>
    4410:	strb	r3, [r0], #1
    4414:	ldrb	r3, [r2, #1]!
    4418:	cmp	r3, #0
    441c:	bne	4410 <doContent+0x85c>
    4420:	mov	r3, #0
    4424:	strb	r3, [r0]
    4428:	ldr	r7, [r4, #64]	; 0x40
    442c:	ldr	r1, [sl, #12]
    4430:	ldr	r0, [r4, #4]
    4434:	blx	r7
    4438:	ldr	r3, [sl, #44]	; 0x2c
    443c:	cmp	r3, #0
    4440:	mov	r7, r3
    4444:	beq	3ec4 <doContent+0x310>
    4448:	ldr	r2, [r4, #112]	; 0x70
    444c:	cmp	r2, #0
    4450:	beq	4468 <doContent+0x8b4>
    4454:	ldr	r3, [r7]
    4458:	ldr	r0, [r4, #4]
    445c:	ldr	r1, [r3]
    4460:	blx	r2
    4464:	ldr	r3, [sl, #44]	; 0x2c
    4468:	ldr	r3, [r3, #4]
    446c:	ldr	r2, [r7]
    4470:	ldr	r0, [r4, #384]	; 0x180
    4474:	ldr	r1, [r7, #8]
    4478:	cmp	r3, #0
    447c:	str	r3, [sl, #44]	; 0x2c
    4480:	str	r0, [r7, #4]
    4484:	str	r7, [r4, #384]	; 0x180
    4488:	mov	r7, r3
    448c:	str	r1, [r2, #4]
    4490:	bne	4448 <doContent+0x894>
    4494:	b	3ec4 <doContent+0x310>
    4498:	ldr	r3, [r4, #88]	; 0x58
    449c:	cmp	r3, #0
    44a0:	beq	3cac <doContent+0xf8>
    44a4:	ldr	r3, [sp, #40]	; 0x28
    44a8:	ldr	r2, [sp, #36]	; 0x24
    44ac:	mov	r1, r5
    44b0:	mov	r0, r4
    44b4:	bl	90 <reportDefault>
    44b8:	b	3cac <doContent+0xf8>
    44bc:	mov	r0, #35	; 0x23
    44c0:	add	sp, sp, #76	; 0x4c
    44c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    44c8:	ldr	r3, [r4, #88]	; 0x58
    44cc:	cmp	r3, #0
    44d0:	beq	4168 <doContent+0x5b4>
    44d4:	ldr	r3, [sp, #40]	; 0x28
    44d8:	ldr	r2, [sp, #36]	; 0x24
    44dc:	mov	r1, r5
    44e0:	mov	r0, r4
    44e4:	bl	90 <reportDefault>
    44e8:	b	4168 <doContent+0x5b4>
    44ec:	ldr	r3, [r4, #88]	; 0x58
    44f0:	cmp	r3, #0
    44f4:	ldr	r3, [sp, #40]	; 0x28
    44f8:	bne	44a8 <doContent+0x8f4>
    44fc:	b	3cb0 <doContent+0xfc>
    4500:	ldr	r2, [r5, #68]	; 0x44
    4504:	ldr	r1, [sp, #36]	; 0x24
    4508:	ldr	r3, [sp, #40]	; 0x28
    450c:	ldr	sl, [sp, #20]
    4510:	sub	r3, r3, r2
    4514:	add	r0, sl, #80	; 0x50
    4518:	add	r2, r1, r2
    451c:	mov	r1, r5
    4520:	bl	1108 <poolStoreString>
    4524:	subs	r9, r0, #0
    4528:	beq	4260 <doContent+0x6ac>
    452c:	mov	r3, r7
    4530:	mov	r2, r9
    4534:	mov	r1, sl
    4538:	mov	r0, r4
    453c:	bl	9d8 <lookup>
    4540:	ldrb	r2, [sl, #129]	; 0x81
    4544:	ldr	r3, [sl, #96]	; 0x60
    4548:	cmp	r2, #0
    454c:	str	r3, [sl, #92]	; 0x5c
    4550:	mov	r7, r0
    4554:	beq	4600 <doContent+0xa4c>
    4558:	ldrb	r3, [sl, #130]	; 0x82
    455c:	cmp	r3, #0
    4560:	bne	4600 <doContent+0xa4c>
    4564:	cmp	r7, #0
    4568:	beq	49ac <doContent+0xdf8>
    456c:	ldrb	r3, [r7, #32]
    4570:	cmp	r3, #0
    4574:	bne	4aa8 <doContent+0xef4>
    4578:	ldr	r3, [r7, #28]
    457c:	cmp	r3, #0
    4580:	bne	4aa0 <doContent+0xeec>
    4584:	ldr	r2, [r7, #4]
    4588:	cmp	r2, #0
    458c:	beq	475c <doContent+0xba8>
    4590:	ldrb	r2, [r4, #316]	; 0x13c
    4594:	cmp	r2, #0
    4598:	bne	4724 <doContent+0xb70>
    459c:	ldr	r3, [r4, #128]	; 0x80
    45a0:	cmp	r3, #0
    45a4:	beq	4740 <doContent+0xb8c>
    45a8:	ldr	r1, [r7]
    45ac:	ldr	r0, [r4, #4]
    45b0:	blx	r3
    45b4:	b	3cac <doContent+0xf8>
    45b8:	ldr	r3, [r4, #64]	; 0x40
    45bc:	cmp	r3, #0
    45c0:	bne	3e14 <doContent+0x260>
    45c4:	ldr	r3, [r4, #88]	; 0x58
    45c8:	cmp	r3, #0
    45cc:	beq	3e20 <doContent+0x26c>
    45d0:	ldr	r3, [sp, #40]	; 0x28
    45d4:	ldr	r2, [sp, #36]	; 0x24
    45d8:	mov	r1, r5
    45dc:	mov	r0, r4
    45e0:	bl	90 <reportDefault>
    45e4:	b	3e20 <doContent+0x26c>
    45e8:	ldr	r1, [sp, #36]	; 0x24
    45ec:	ldr	r2, [sp, #112]	; 0x70
    45f0:	ldr	r0, [r4, #4]
    45f4:	sub	r2, r2, r1
    45f8:	blx	r3
    45fc:	b	3d4c <doContent+0x198>
    4600:	cmp	r7, #0
    4604:	beq	4ab0 <doContent+0xefc>
    4608:	ldrb	r3, [r7, #34]	; 0x22
    460c:	cmp	r3, #0
    4610:	bne	456c <doContent+0x9b8>
    4614:	mov	r0, #24
    4618:	b	3c88 <doContent+0xd4>
    461c:	ldr	r3, [r4, #320]	; 0x140
    4620:	ldr	r2, [sp, #12]
    4624:	cmp	r2, r3
    4628:	beq	4648 <doContent+0xa94>
    462c:	ldr	r3, [sp, #112]	; 0x70
    4630:	str	r3, [r6]
    4634:	b	4100 <doContent+0x54c>
    4638:	ldr	r3, [r4, #320]	; 0x140
    463c:	ldr	r2, [sp, #12]
    4640:	cmp	r2, r3
    4644:	bne	4100 <doContent+0x54c>
    4648:	ldr	r3, [sp, #116]	; 0x74
    464c:	ldr	r2, [sp, #112]	; 0x70
    4650:	mov	r0, #0
    4654:	str	r2, [r3]
    4658:	b	3c88 <doContent+0xd4>
    465c:	ldr	r3, [r4, #88]	; 0x58
    4660:	cmp	r3, #0
    4664:	beq	4140 <doContent+0x58c>
    4668:	mov	r1, r5
    466c:	ldr	r3, [sp, #112]	; 0x70
    4670:	ldr	r2, [sp, #36]	; 0x24
    4674:	mov	r0, r4
    4678:	bl	90 <reportDefault>
    467c:	b	4140 <doContent+0x58c>
    4680:	ldr	r3, [r4, #88]	; 0x58
    4684:	cmp	r3, #0
    4688:	beq	408c <doContent+0x4d8>
    468c:	ldr	r3, [sp, #40]	; 0x28
    4690:	ldr	r2, [sp, #36]	; 0x24
    4694:	mov	r1, r5
    4698:	mov	r0, r4
    469c:	bl	90 <reportDefault>
    46a0:	b	408c <doContent+0x4d8>
    46a4:	ldr	r3, [r4, #88]	; 0x58
    46a8:	cmp	r3, #0
    46ac:	beq	4438 <doContent+0x884>
    46b0:	ldr	r3, [sp, #40]	; 0x28
    46b4:	ldr	r2, [sp, #36]	; 0x24
    46b8:	mov	r1, r5
    46bc:	mov	r0, r4
    46c0:	bl	90 <reportDefault>
    46c4:	b	4438 <doContent+0x884>
    46c8:	ldr	r3, [r4, #88]	; 0x58
    46cc:	cmp	r3, #0
    46d0:	beq	3d4c <doContent+0x198>
    46d4:	mov	r1, r5
    46d8:	ldr	r3, [sp, #112]	; 0x70
    46dc:	ldr	r2, [sp, #36]	; 0x24
    46e0:	mov	r0, r4
    46e4:	bl	90 <reportDefault>
    46e8:	b	3d4c <doContent+0x198>
    46ec:	ldr	r3, [r4, #12]
    46f0:	mov	r0, #48	; 0x30
    46f4:	blx	r3
    46f8:	subs	r7, r0, #0
    46fc:	beq	4260 <doContent+0x6ac>
    4700:	ldr	r3, [r4, #12]
    4704:	mov	r0, #32
    4708:	blx	r3
    470c:	cmp	r0, #0
    4710:	str	r0, [r7, #36]	; 0x24
    4714:	beq	4b40 <doContent+0xf8c>
    4718:	add	r0, r0, #32
    471c:	str	r0, [r7, #40]	; 0x28
    4720:	b	3f48 <doContent+0x394>
    4724:	mov	r2, r3
    4728:	mov	r1, r7
    472c:	mov	r0, r4
    4730:	bl	4f7c <processInternalEntity>
    4734:	cmp	r0, #0
    4738:	beq	3cac <doContent+0xf8>
    473c:	b	3c88 <doContent+0xd4>
    4740:	ldr	r3, [r4, #88]	; 0x58
    4744:	cmp	r3, #0
    4748:	beq	3cac <doContent+0xf8>
    474c:	b	44a4 <doContent+0x8f0>
    4750:	str	r9, [r6]
    4754:	mov	r0, #7
    4758:	b	3c88 <doContent+0xd4>
    475c:	ldr	r3, [r4, #120]	; 0x78
    4760:	cmp	r3, #0
    4764:	beq	4740 <doContent+0xb8c>
    4768:	mov	r3, #1
    476c:	strb	r3, [r7, #32]
    4770:	ldr	r3, [r4, #364]	; 0x16c
    4774:	ldr	r1, [r3, #156]	; 0x9c
    4778:	cmp	r1, #0
    477c:	beq	4824 <doContent+0xc70>
    4780:	ldr	r2, [r4, #444]	; 0x1bc
    4784:	ldr	r1, [r4, #440]	; 0x1b8
    4788:	cmp	r2, r1
    478c:	beq	4b50 <doContent+0xf9c>
    4790:	add	r0, r2, #1
    4794:	mov	r1, #61	; 0x3d
    4798:	str	r0, [r4, #444]	; 0x1bc
    479c:	strb	r1, [r2]
    47a0:	ldr	r2, [r3, #156]	; 0x9c
    47a4:	ldrb	r1, [r4, #488]	; 0x1e8
    47a8:	ldr	sl, [r2, #20]
    47ac:	cmp	r1, #0
    47b0:	subne	sl, sl, #1
    47b4:	cmp	sl, #0
    47b8:	movgt	r9, #0
    47bc:	movgt	fp, r3
    47c0:	bgt	47ec <doContent+0xc38>
    47c4:	b	4820 <doContent+0xc6c>
    47c8:	ldr	r3, [fp, #156]	; 0x9c
    47cc:	add	r1, r2, #1
    47d0:	str	r1, [r4, #444]	; 0x1bc
    47d4:	ldr	r1, [r3, #16]
    47d8:	ldrb	r1, [r1, r9]
    47dc:	add	r9, r9, #1
    47e0:	cmp	r9, sl
    47e4:	strb	r1, [r2]
    47e8:	beq	481c <doContent+0xc68>
    47ec:	ldr	r2, [r4, #444]	; 0x1bc
    47f0:	ldr	r3, [r4, #440]	; 0x1b8
    47f4:	cmp	r2, r3
    47f8:	bne	47c8 <doContent+0xc14>
    47fc:	ldr	r0, [sp, #16]
    4800:	bl	ec8 <poolGrow>
    4804:	cmp	r0, #0
    4808:	beq	4ab8 <doContent+0xf04>
    480c:	ldr	r2, [r4, #444]	; 0x1bc
    4810:	b	47c8 <doContent+0xc14>
    4814:	mov	r0, #14
    4818:	b	3c88 <doContent+0xd4>
    481c:	mov	r3, fp
    4820:	mov	r1, #1
    4824:	ldr	r2, [r3, #68]	; 0x44
    4828:	ldr	r9, [r3, #60]	; 0x3c
    482c:	str	r5, [sp, #24]
    4830:	add	r2, r9, r2, lsl #2
    4834:	mov	fp, r3
    4838:	mov	r5, r2
    483c:	cmp	r5, r9
    4840:	beq	486c <doContent+0xcb8>
    4844:	ldr	sl, [r9]
    4848:	add	r9, r9, #4
    484c:	cmp	sl, #0
    4850:	beq	4864 <doContent+0xcb0>
    4854:	b	4910 <doContent+0xd5c>
    4858:	ldr	sl, [r9], #4
    485c:	cmp	sl, #0
    4860:	bne	4910 <doContent+0xd5c>
    4864:	cmp	r5, r9
    4868:	bne	4858 <doContent+0xca4>
    486c:	ldr	r9, [fp, #8]
    4870:	ldr	r3, [fp]
    4874:	ldr	r5, [sp, #24]
    4878:	add	r9, r3, r9, lsl #2
    487c:	mov	fp, r9
    4880:	cmp	fp, r3
    4884:	beq	48b0 <doContent+0xcfc>
    4888:	ldr	r9, [r3]
    488c:	add	sl, r3, #4
    4890:	cmp	r9, #0
    4894:	beq	48a8 <doContent+0xcf4>
    4898:	b	4acc <doContent+0xf18>
    489c:	ldr	r9, [sl], #4
    48a0:	cmp	r9, #0
    48a4:	bne	4acc <doContent+0xf18>
    48a8:	cmp	fp, sl
    48ac:	bne	489c <doContent+0xce8>
    48b0:	ldr	r3, [r4, #444]	; 0x1bc
    48b4:	ldr	r2, [r4, #440]	; 0x1b8
    48b8:	cmp	r3, r2
    48bc:	beq	4be8 <doContent+0x1034>
    48c0:	mov	r2, #0
    48c4:	add	r1, r3, #1
    48c8:	str	r1, [r4, #444]	; 0x1bc
    48cc:	strb	r2, [r3]
    48d0:	ldr	r1, [r4, #448]	; 0x1c0
    48d4:	strb	r2, [r7, #32]
    48d8:	cmp	r1, r2
    48dc:	beq	4260 <doContent+0x6ac>
    48e0:	ldr	ip, [r7, #24]
    48e4:	ldr	r3, [r7, #16]
    48e8:	ldr	r2, [r7, #20]
    48ec:	ldr	r0, [r4, #124]	; 0x7c
    48f0:	str	ip, [sp]
    48f4:	ldr	r7, [r4, #120]	; 0x78
    48f8:	blx	r7
    48fc:	cmp	r0, #0
    4900:	beq	4be0 <doContent+0x102c>
    4904:	ldr	r3, [r4, #448]	; 0x1c0
    4908:	str	r3, [r4, #444]	; 0x1bc
    490c:	b	3cac <doContent+0xf8>
    4910:	ldr	r3, [sl, #4]
    4914:	cmp	r3, #0
    4918:	beq	483c <doContent+0xc88>
    491c:	cmp	r1, #0
    4920:	beq	4944 <doContent+0xd90>
    4924:	ldr	r3, [r4, #444]	; 0x1bc
    4928:	ldr	r1, [r4, #440]	; 0x1b8
    492c:	cmp	r3, r1
    4930:	beq	4bb0 <doContent+0xffc>
    4934:	add	r1, r3, #1
    4938:	mov	r2, #12
    493c:	str	r1, [r4, #444]	; 0x1bc
    4940:	strb	r2, [r3]
    4944:	ldr	r3, [sl]
    4948:	ldrb	r1, [r3]
    494c:	cmp	r1, #0
    4950:	strne	sl, [sp, #28]
    4954:	movne	sl, r9
    4958:	movne	r9, r5
    495c:	movne	r5, r3
    4960:	bne	4984 <doContent+0xdd0>
    4964:	b	49d8 <doContent+0xe24>
    4968:	add	r3, r2, #1
    496c:	str	r3, [r4, #444]	; 0x1bc
    4970:	ldrb	r3, [r5]
    4974:	strb	r3, [r2]
    4978:	ldrb	r3, [r5, #1]!
    497c:	cmp	r3, #0
    4980:	beq	49cc <doContent+0xe18>
    4984:	ldr	r2, [r4, #444]	; 0x1bc
    4988:	ldr	r3, [r4, #440]	; 0x1b8
    498c:	cmp	r2, r3
    4990:	bne	4968 <doContent+0xdb4>
    4994:	ldr	r0, [sp, #16]
    4998:	bl	ec8 <poolGrow>
    499c:	cmp	r0, #0
    49a0:	beq	4ab8 <doContent+0xf04>
    49a4:	ldr	r2, [r4, #444]	; 0x1bc
    49a8:	b	4968 <doContent+0xdb4>
    49ac:	ldr	r3, [r4, #128]	; 0x80
    49b0:	cmp	r3, #0
    49b4:	beq	4740 <doContent+0xb8c>
    49b8:	mov	r2, r7
    49bc:	mov	r1, r9
    49c0:	ldr	r0, [r4, #4]
    49c4:	blx	r3
    49c8:	b	3cac <doContent+0xf8>
    49cc:	mov	r5, r9
    49d0:	mov	r9, sl
    49d4:	ldr	sl, [sp, #28]
    49d8:	ldr	r3, [r4, #444]	; 0x1bc
    49dc:	ldr	r1, [r4, #440]	; 0x1b8
    49e0:	cmp	r3, r1
    49e4:	beq	4b98 <doContent+0xfe4>
    49e8:	add	r1, r3, #1
    49ec:	mov	r2, #61	; 0x3d
    49f0:	str	r1, [r4, #444]	; 0x1bc
    49f4:	strb	r2, [r3]
    49f8:	ldrb	r1, [r4, #488]	; 0x1e8
    49fc:	ldr	r3, [sl, #4]
    4a00:	cmp	r1, #0
    4a04:	ldr	r1, [r3, #20]
    4a08:	subne	r1, r1, #1
    4a0c:	cmp	r1, #0
    4a10:	ble	4a98 <doContent+0xee4>
    4a14:	mov	r3, #0
    4a18:	str	r5, [sp, #28]
    4a1c:	str	r9, [sp, #32]
    4a20:	mov	r5, r4
    4a24:	mov	r9, r7
    4a28:	mov	r4, r3
    4a2c:	mov	r7, r6
    4a30:	mov	r6, r1
    4a34:	b	4a5c <doContent+0xea8>
    4a38:	ldr	r0, [sl, #4]
    4a3c:	add	ip, r2, #1
    4a40:	str	ip, [r5, #444]	; 0x1bc
    4a44:	ldr	r0, [r0, #16]
    4a48:	ldrb	r0, [r0, r4]
    4a4c:	add	r4, r4, #1
    4a50:	cmp	r4, r6
    4a54:	strb	r0, [r2]
    4a58:	beq	4a84 <doContent+0xed0>
    4a5c:	ldr	r2, [r5, #444]	; 0x1bc
    4a60:	ldr	r0, [r5, #440]	; 0x1b8
    4a64:	cmp	r2, r0
    4a68:	bne	4a38 <doContent+0xe84>
    4a6c:	ldr	r0, [sp, #16]
    4a70:	bl	ec8 <poolGrow>
    4a74:	cmp	r0, #0
    4a78:	beq	4b78 <doContent+0xfc4>
    4a7c:	ldr	r2, [r5, #444]	; 0x1bc
    4a80:	b	4a38 <doContent+0xe84>
    4a84:	mov	r6, r7
    4a88:	mov	r4, r5
    4a8c:	mov	r7, r9
    4a90:	ldr	r5, [sp, #28]
    4a94:	ldr	r9, [sp, #32]
    4a98:	mov	r1, #1
    4a9c:	b	483c <doContent+0xc88>
    4aa0:	mov	r0, #15
    4aa4:	b	3c88 <doContent+0xd4>
    4aa8:	mov	r0, #12
    4aac:	b	3c88 <doContent+0xd4>
    4ab0:	mov	r0, #11
    4ab4:	b	3c88 <doContent+0xd4>
    4ab8:	mov	r2, r7
    4abc:	mov	r3, #0
    4ac0:	mov	r0, #1
    4ac4:	strb	r3, [r2, #32]
    4ac8:	b	3c88 <doContent+0xd4>
    4acc:	ldrb	r3, [r9, #32]
    4ad0:	cmp	r3, #0
    4ad4:	beq	4b38 <doContent+0xf84>
    4ad8:	cmp	r1, #0
    4adc:	beq	4b00 <doContent+0xf4c>
    4ae0:	ldr	r3, [r4, #444]	; 0x1bc
    4ae4:	ldr	r1, [r4, #440]	; 0x1b8
    4ae8:	cmp	r3, r1
    4aec:	beq	4b80 <doContent+0xfcc>
    4af0:	add	r0, r3, #1
    4af4:	mov	r1, #12
    4af8:	str	r0, [r4, #444]	; 0x1bc
    4afc:	strb	r1, [r3]
    4b00:	ldr	r9, [r9]
    4b04:	b	4b28 <doContent+0xf74>
    4b08:	ldr	r3, [r4, #444]	; 0x1bc
    4b0c:	ldr	r2, [r4, #440]	; 0x1b8
    4b10:	cmp	r3, r2
    4b14:	beq	4bc8 <doContent+0x1014>
    4b18:	add	r2, r3, #1
    4b1c:	str	r2, [r4, #444]	; 0x1bc
    4b20:	ldrb	r2, [r9], #1
    4b24:	strb	r2, [r3]
    4b28:	ldrb	r3, [r9]
    4b2c:	cmp	r3, #0
    4b30:	bne	4b08 <doContent+0xf54>
    4b34:	mov	r1, #1
    4b38:	mov	r3, sl
    4b3c:	b	4880 <doContent+0xccc>
    4b40:	ldr	r3, [r4, #20]
    4b44:	mov	r0, r7
    4b48:	blx	r3
    4b4c:	b	4260 <doContent+0x6ac>
    4b50:	ldr	r0, [sp, #16]
    4b54:	str	r3, [sp, #24]
    4b58:	bl	ec8 <poolGrow>
    4b5c:	cmp	r0, #0
    4b60:	ldrne	r2, [r4, #444]	; 0x1bc
    4b64:	ldrne	r3, [sp, #24]
    4b68:	bne	4790 <doContent+0xbdc>
    4b6c:	strb	r0, [r7, #32]
    4b70:	mov	r0, #1
    4b74:	b	3c88 <doContent+0xd4>
    4b78:	mov	r2, r9
    4b7c:	b	4abc <doContent+0xf08>
    4b80:	ldr	r0, [sp, #16]
    4b84:	bl	ec8 <poolGrow>
    4b88:	cmp	r0, #0
    4b8c:	beq	4ab8 <doContent+0xf04>
    4b90:	ldr	r3, [r4, #444]	; 0x1bc
    4b94:	b	4af0 <doContent+0xf3c>
    4b98:	ldr	r0, [sp, #16]
    4b9c:	bl	ec8 <poolGrow>
    4ba0:	cmp	r0, #0
    4ba4:	beq	4ab8 <doContent+0xf04>
    4ba8:	ldr	r3, [r4, #444]	; 0x1bc
    4bac:	b	49e8 <doContent+0xe34>
    4bb0:	ldr	r0, [sp, #16]
    4bb4:	bl	ec8 <poolGrow>
    4bb8:	cmp	r0, #0
    4bbc:	beq	4ab8 <doContent+0xf04>
    4bc0:	ldr	r3, [r4, #444]	; 0x1bc
    4bc4:	b	4934 <doContent+0xd80>
    4bc8:	ldr	r0, [sp, #16]
    4bcc:	bl	ec8 <poolGrow>
    4bd0:	cmp	r0, #0
    4bd4:	beq	4ab8 <doContent+0xf04>
    4bd8:	ldr	r3, [r4, #444]	; 0x1bc
    4bdc:	b	4b18 <doContent+0xf64>
    4be0:	mov	r0, #21
    4be4:	b	3c88 <doContent+0xd4>
    4be8:	ldr	r0, [sp, #16]
    4bec:	bl	ec8 <poolGrow>
    4bf0:	cmp	r0, #0
    4bf4:	beq	4b6c <doContent+0xfb8>
    4bf8:	ldr	r3, [r4, #444]	; 0x1bc
    4bfc:	b	48c0 <doContent+0xd0c>
    4c00:	.word	0x00000000

00004c04 <contentProcessor>:
    4c04:	push	{r4, lr}
    4c08:	sub	sp, sp, #16
    4c0c:	mov	r4, r0
    4c10:	str	r3, [sp, #4]
    4c14:	ldr	lr, [r0, #152]	; 0x98
    4c18:	ldrb	ip, [r0, #500]	; 0x1f4
    4c1c:	clz	ip, ip
    4c20:	lsr	ip, ip, #5
    4c24:	str	r2, [sp]
    4c28:	mov	r3, r1
    4c2c:	str	ip, [sp, #8]
    4c30:	mov	r2, lr
    4c34:	mov	r1, #0
    4c38:	bl	3bb4 <doContent>
    4c3c:	cmp	r0, #0
    4c40:	bne	4c58 <contentProcessor+0x54>
    4c44:	ldr	r1, [r4, #372]	; 0x174
    4c48:	add	r0, r4, #16
    4c4c:	bl	29bc <storeRawNames.isra.9>
    4c50:	clz	r0, r0
    4c54:	lsr	r0, r0, #5
    4c58:	add	sp, sp, #16
    4c5c:	pop	{r4, pc}

00004c60 <externalEntityContentProcessor>:
    4c60:	push	{r4, lr}
    4c64:	sub	sp, sp, #16
    4c68:	mov	r4, r0
    4c6c:	str	r3, [sp, #4]
    4c70:	ldr	lr, [r0, #152]	; 0x98
    4c74:	ldrb	ip, [r0, #500]	; 0x1f4
    4c78:	clz	ip, ip
    4c7c:	lsr	ip, ip, #5
    4c80:	str	r2, [sp]
    4c84:	mov	r3, r1
    4c88:	str	ip, [sp, #8]
    4c8c:	mov	r2, lr
    4c90:	mov	r1, #1
    4c94:	bl	3bb4 <doContent>
    4c98:	cmp	r0, #0
    4c9c:	bne	4cb4 <externalEntityContentProcessor+0x54>
    4ca0:	ldr	r1, [r4, #372]	; 0x174
    4ca4:	add	r0, r4, #16
    4ca8:	bl	29bc <storeRawNames.isra.9>
    4cac:	clz	r0, r0
    4cb0:	lsr	r0, r0, #5
    4cb4:	add	sp, sp, #16
    4cb8:	pop	{r4, pc}

00004cbc <cdataSectionProcessor>:
    4cbc:	push	{r4, r5, r6, lr}
    4cc0:	sub	sp, sp, #16
    4cc4:	ldr	lr, [r0, #152]	; 0x98
    4cc8:	add	ip, sp, #16
    4ccc:	mov	r6, r3
    4cd0:	ldrb	r3, [r0, #500]	; 0x1f4
    4cd4:	clz	r3, r3
    4cd8:	lsr	r3, r3, #5
    4cdc:	str	r3, [sp, #4]
    4ce0:	str	r6, [sp]
    4ce4:	mov	r3, r2
    4ce8:	str	r1, [ip, #-4]!
    4cec:	mov	r5, r2
    4cf0:	mov	r1, lr
    4cf4:	mov	r2, ip
    4cf8:	mov	r4, r0
    4cfc:	bl	14c <doCdataSection>
    4d00:	cmp	r0, #0
    4d04:	bne	4d38 <cdataSectionProcessor+0x7c>
    4d08:	ldr	r1, [sp, #12]
    4d0c:	cmp	r1, #0
    4d10:	beq	4d38 <cdataSectionProcessor+0x7c>
    4d14:	ldr	r3, [r4, #492]	; 0x1ec
    4d18:	cmp	r3, #0
    4d1c:	beq	4d40 <cdataSectionProcessor+0x84>
    4d20:	ldr	r0, [pc, #56]	; 4d60 <cdataSectionProcessor+0xa4>
    4d24:	mov	r3, r6
    4d28:	str	r0, [r4, #288]	; 0x120
    4d2c:	mov	r2, r5
    4d30:	mov	r0, r4
    4d34:	bl	4c60 <externalEntityContentProcessor>
    4d38:	add	sp, sp, #16
    4d3c:	pop	{r4, r5, r6, pc}
    4d40:	ldr	r0, [pc, #28]	; 4d64 <cdataSectionProcessor+0xa8>
    4d44:	mov	r3, r6
    4d48:	str	r0, [r4, #288]	; 0x120
    4d4c:	mov	r2, r5
    4d50:	mov	r0, r4
    4d54:	bl	4c04 <contentProcessor>
    4d58:	add	sp, sp, #16
    4d5c:	pop	{r4, r5, r6, pc}
	...

00004d68 <externalEntityInitProcessor3>:
    4d68:	push	{r4, r5, r6, r7, r8, lr}
    4d6c:	mov	r4, r0
    4d70:	sub	sp, sp, #8
    4d74:	ldr	r0, [r0, #152]	; 0x98
    4d78:	add	ip, sp, #8
    4d7c:	mov	r6, r3
    4d80:	ldr	r7, [r0, #4]
    4d84:	str	r1, [ip, #-4]!
    4d88:	str	r1, [r4, #296]	; 0x128
    4d8c:	mov	r3, ip
    4d90:	mov	r5, r1
    4d94:	mov	r8, r2
    4d98:	blx	r7
    4d9c:	ldr	r3, [sp, #4]
    4da0:	str	r3, [r4, #300]	; 0x12c
    4da4:	cmn	r0, #1
    4da8:	beq	4e44 <externalEntityInitProcessor3+0xdc>
    4dac:	cmp	r0, #12
    4db0:	beq	4e08 <externalEntityInitProcessor3+0xa0>
    4db4:	cmn	r0, #2
    4db8:	beq	4de8 <externalEntityInitProcessor3+0x80>
    4dbc:	ldr	ip, [pc, #160]	; 4e64 <externalEntityInitProcessor3+0xfc>
    4dc0:	mov	r0, #1
    4dc4:	str	r0, [r4, #320]	; 0x140
    4dc8:	mov	r3, r6
    4dcc:	mov	r2, r8
    4dd0:	mov	r1, r5
    4dd4:	str	ip, [r4, #288]	; 0x120
    4dd8:	mov	r0, r4
    4ddc:	bl	4c60 <externalEntityContentProcessor>
    4de0:	add	sp, sp, #8
    4de4:	pop	{r4, r5, r6, r7, r8, pc}
    4de8:	ldrb	r3, [r4, #500]	; 0x1f4
    4dec:	cmp	r3, #0
    4df0:	movne	r0, #6
    4df4:	bne	4de0 <externalEntityInitProcessor3+0x78>
    4df8:	mov	r0, #0
    4dfc:	str	r5, [r6]
    4e00:	add	sp, sp, #8
    4e04:	pop	{r4, r5, r6, r7, r8, pc}
    4e08:	mov	r2, r5
    4e0c:	mov	r1, #1
    4e10:	mov	r0, r4
    4e14:	bl	1160 <processXmlDecl>
    4e18:	cmp	r0, #0
    4e1c:	bne	4de0 <externalEntityInitProcessor3+0x78>
    4e20:	ldr	r3, [r4, #496]	; 0x1f0
    4e24:	cmp	r3, #2
    4e28:	moveq	r0, #35	; 0x23
    4e2c:	beq	4de0 <externalEntityInitProcessor3+0x78>
    4e30:	cmp	r3, #3
    4e34:	bne	4e5c <externalEntityInitProcessor3+0xf4>
    4e38:	ldr	r3, [sp, #4]
    4e3c:	str	r3, [r6]
    4e40:	b	4de0 <externalEntityInitProcessor3+0x78>
    4e44:	ldrb	r3, [r4, #500]	; 0x1f4
    4e48:	cmp	r3, #0
    4e4c:	movne	r0, #5
    4e50:	beq	4df8 <externalEntityInitProcessor3+0x90>
    4e54:	add	sp, sp, #8
    4e58:	pop	{r4, r5, r6, r7, r8, pc}
    4e5c:	ldr	r5, [sp, #4]
    4e60:	b	4dbc <externalEntityInitProcessor3+0x54>
    4e64:	.word	0x00000000

00004e68 <externalEntityInitProcessor2>:
    4e68:	push	{r4, r5, r6, r7, r8, lr}
    4e6c:	mov	r4, r0
    4e70:	sub	sp, sp, #8
    4e74:	ldr	r0, [r0, #152]	; 0x98
    4e78:	add	ip, sp, #8
    4e7c:	mov	r7, r3
    4e80:	str	r1, [ip, #-4]!
    4e84:	ldr	r6, [r0, #4]
    4e88:	mov	r3, ip
    4e8c:	mov	r5, r1
    4e90:	mov	r8, r2
    4e94:	blx	r6
    4e98:	cmn	r0, #1
    4e9c:	beq	4f10 <externalEntityInitProcessor2+0xa8>
    4ea0:	cmp	r0, #14
    4ea4:	beq	4ef0 <externalEntityInitProcessor2+0x88>
    4ea8:	cmn	r0, #2
    4eac:	beq	4ed4 <externalEntityInitProcessor2+0x6c>
    4eb0:	ldr	r0, [pc, #124]	; 4f34 <externalEntityInitProcessor2+0xcc>
    4eb4:	mov	r3, r7
    4eb8:	str	r0, [r4, #288]	; 0x120
    4ebc:	mov	r2, r8
    4ec0:	mov	r1, r5
    4ec4:	mov	r0, r4
    4ec8:	bl	4d68 <externalEntityInitProcessor3>
    4ecc:	add	sp, sp, #8
    4ed0:	pop	{r4, r5, r6, r7, r8, pc}
    4ed4:	ldrb	r3, [r4, #500]	; 0x1f4
    4ed8:	cmp	r3, #0
    4edc:	beq	4f24 <externalEntityInitProcessor2+0xbc>
    4ee0:	mov	r0, #6
    4ee4:	str	r5, [r4, #296]	; 0x128
    4ee8:	add	sp, sp, #8
    4eec:	pop	{r4, r5, r6, r7, r8, pc}
    4ef0:	ldr	r5, [sp, #4]
    4ef4:	cmp	r8, r5
    4ef8:	bne	4eb0 <externalEntityInitProcessor2+0x48>
    4efc:	ldrb	r0, [r4, #500]	; 0x1f4
    4f00:	cmp	r0, #0
    4f04:	streq	r8, [r7]
    4f08:	bne	4eb0 <externalEntityInitProcessor2+0x48>
    4f0c:	b	4ecc <externalEntityInitProcessor2+0x64>
    4f10:	ldrb	r3, [r4, #500]	; 0x1f4
    4f14:	cmp	r3, #0
    4f18:	strne	r5, [r4, #296]	; 0x128
    4f1c:	movne	r0, #5
    4f20:	bne	4ecc <externalEntityInitProcessor2+0x64>
    4f24:	mov	r0, #0
    4f28:	str	r5, [r7]
    4f2c:	add	sp, sp, #8
    4f30:	pop	{r4, r5, r6, r7, r8, pc}
    4f34:	.word	0x00000000

00004f38 <externalEntityInitProcessor>:
    4f38:	push	{r4, r5, r6, r7, r8, lr}
    4f3c:	mov	r5, r1
    4f40:	mov	r6, r2
    4f44:	mov	r7, r3
    4f48:	mov	r4, r0
    4f4c:	bl	23ec <initializeEncoding>
    4f50:	cmp	r0, #0
    4f54:	popne	{r4, r5, r6, r7, r8, pc}
    4f58:	ldr	r0, [pc, #24]	; 4f78 <externalEntityInitProcessor+0x40>
    4f5c:	mov	r3, r7
    4f60:	str	r0, [r4, #288]	; 0x120
    4f64:	mov	r2, r6
    4f68:	mov	r1, r5
    4f6c:	mov	r0, r4
    4f70:	pop	{r4, r5, r6, r7, r8, lr}
    4f74:	b	4e68 <externalEntityInitProcessor2>
    4f78:	.word	0x00000000

00004f7c <processInternalEntity>:
    4f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f80:	mov	r5, r0
    4f84:	ldr	r4, [r0, #312]	; 0x138
    4f88:	sub	sp, sp, #36	; 0x24
    4f8c:	cmp	r4, #0
    4f90:	mov	r6, r1
    4f94:	beq	50b4 <processInternalEntity+0x138>
    4f98:	ldr	r3, [r4, #8]
    4f9c:	str	r3, [r0, #312]	; 0x138
    4fa0:	mov	r3, #1
    4fa4:	strb	r3, [r6, #32]
    4fa8:	ldr	r3, [r5, #308]	; 0x134
    4fac:	ldr	r1, [r5, #320]	; 0x140
    4fb0:	mov	r8, #0
    4fb4:	str	r8, [r6, #12]
    4fb8:	str	r3, [r4, #8]
    4fbc:	str	r4, [r5, #308]	; 0x134
    4fc0:	strb	r2, [r4, #20]
    4fc4:	str	r6, [r4, #12]
    4fc8:	str	r1, [r4, #16]
    4fcc:	str	r8, [r4]
    4fd0:	str	r8, [r4, #4]
    4fd4:	ldrb	r3, [r6, #33]	; 0x21
    4fd8:	ldr	r9, [r6, #4]
    4fdc:	ldr	r7, [r6, #8]
    4fe0:	cmp	r3, r8
    4fe4:	add	r7, r9, r7
    4fe8:	bne	5050 <processInternalEntity+0xd4>
    4fec:	add	r0, sp, #28
    4ff0:	ldr	r2, [r5, #236]	; 0xec
    4ff4:	str	r3, [sp, #8]
    4ff8:	str	r0, [sp, #4]
    4ffc:	str	r7, [sp]
    5000:	mov	r3, r9
    5004:	mov	r0, r5
    5008:	bl	3bb4 <doContent>
    500c:	cmp	r0, #0
    5010:	bne	5048 <processInternalEntity+0xcc>
    5014:	ldr	r3, [sp, #28]
    5018:	cmp	r7, r3
    501c:	beq	502c <processInternalEntity+0xb0>
    5020:	ldr	r2, [r5, #496]	; 0x1f0
    5024:	cmp	r2, #3
    5028:	beq	509c <processInternalEntity+0x120>
    502c:	mov	r3, #0
    5030:	strb	r3, [r6, #32]
    5034:	ldr	r2, [r4, #8]
    5038:	ldr	r3, [r5, #312]	; 0x138
    503c:	str	r2, [r5, #308]	; 0x134
    5040:	str	r3, [r4, #8]
    5044:	str	r4, [r5, #312]	; 0x138
    5048:	add	sp, sp, #36	; 0x24
    504c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5050:	ldr	r3, [r5, #236]	; 0xec
    5054:	add	sl, sp, #28
    5058:	mov	r2, r7
    505c:	ldr	fp, [r3]
    5060:	mov	r1, r9
    5064:	mov	r0, r3
    5068:	mov	r3, sl
    506c:	blx	fp
    5070:	ldr	r3, [sp, #28]
    5074:	ldr	r1, [r5, #236]	; 0xec
    5078:	mov	r2, r9
    507c:	str	r3, [sp, #4]
    5080:	str	sl, [sp, #8]
    5084:	str	r8, [sp, #12]
    5088:	mov	r3, r7
    508c:	str	r0, [sp]
    5090:	mov	r0, r5
    5094:	bl	50dc <doProlog>
    5098:	b	500c <processInternalEntity+0x90>
    509c:	ldr	r2, [pc, #52]	; 50d8 <processInternalEntity+0x15c>
    50a0:	sub	r9, r3, r9
    50a4:	str	r9, [r6, #12]
    50a8:	str	r2, [r5, #288]	; 0x120
    50ac:	add	sp, sp, #36	; 0x24
    50b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    50b4:	ldr	r3, [r0, #12]
    50b8:	mov	r0, #24
    50bc:	str	r2, [sp, #20]
    50c0:	blx	r3
    50c4:	ldr	r2, [sp, #20]
    50c8:	subs	r4, r0, #0
    50cc:	bne	4fa0 <processInternalEntity+0x24>
    50d0:	mov	r0, #1
    50d4:	b	5048 <processInternalEntity+0xcc>
    50d8:	.word	0x00000000

000050dc <doProlog>:
    50dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    50e0:	mov	r7, r1
    50e4:	ldr	r1, [r0, #152]	; 0x98
    50e8:	sub	sp, sp, #60	; 0x3c
    50ec:	cmp	r1, r7
    50f0:	str	r3, [sp, #36]	; 0x24
    50f4:	ldrne	fp, [r0, #308]	; 0x134
    50f8:	ldrb	r3, [sp, #108]	; 0x6c
    50fc:	ldr	sl, [r0, #364]	; 0x16c
    5100:	ldr	r8, [sp, #96]	; 0x60
    5104:	ldr	r5, [pc, #4052]	; 60e0 <doProlog+0x1004>
    5108:	mov	r4, r0
    510c:	mov	r6, r2
    5110:	addeq	fp, r0, #296	; 0x128
    5114:	addeq	r9, r0, #300	; 0x12c
    5118:	addne	r9, fp, #4
    511c:	str	r3, [sp, #32]
    5120:	str	r9, [sp, #28]
    5124:	str	r6, [fp]
    5128:	ldr	r2, [sp, #28]
    512c:	ldr	r3, [sp, #100]	; 0x64
    5130:	cmp	r8, #0
    5134:	str	r3, [r2]
    5138:	ble	5264 <doProlog+0x188>
    513c:	ldr	r3, [sp, #100]	; 0x64
    5140:	str	r7, [sp]
    5144:	mov	r2, r6
    5148:	ldr	r9, [r4, #264]	; 0x108
    514c:	mov	r1, r8
    5150:	add	r0, r4, #264	; 0x108
    5154:	blx	r9
    5158:	add	r3, r0, #1
    515c:	mov	r9, r0
    5160:	cmp	r3, #61	; 0x3d
    5164:	ldrls	pc, [pc, r3, lsl #2]
    5168:	b	5348 <doProlog+0x26c>
    516c:	.word	0x000066d0
    5170:	.word	0x000066c4
    5174:	.word	0x00005b0c
    5178:	.word	0x00005a88
    517c:	.word	0x00005a78
    5180:	.word	0x000063bc
    5184:	.word	0x0000631c
    5188:	.word	0x00006270
    518c:	.word	0x0000620c
    5190:	.word	0x00005e78
    5194:	.word	0x000052c4
    5198:	.word	0x00005b4c
    519c:	.word	0x00005b30
    51a0:	.word	0x00006044
    51a4:	.word	0x000059ec
    51a8:	.word	0x00005608
    51ac:	.word	0x0000598c
    51b0:	.word	0x000065d8
    51b4:	.word	0x0000669c
    51b8:	.word	0x000061c8
    51bc:	.word	0x00006114
    51c0:	.word	0x00006404
    51c4:	.word	0x00005fe0
    51c8:	.word	0x00005584
    51cc:	.word	0x00006540
    51d0:	.word	0x00005fcc
    51d4:	.word	0x000066b8
    51d8:	.word	0x000066ac
    51dc:	.word	0x0000665c
    51e0:	.word	0x00005e1c
    51e4:	.word	0x00005e6c
    51e8:	.word	0x00005b68
    51ec:	.word	0x00005c6c
    51f0:	.word	0x00005c6c
    51f4:	.word	0x000055b4
    51f8:	.word	0x00005968
    51fc:	.word	0x00005b74
    5200:	.word	0x00005b74
    5204:	.word	0x00005ce0
    5208:	.word	0x00005ce0
    520c:	.word	0x000055f8
    5210:	.word	0x00005e28
    5214:	.word	0x000058f4
    5218:	.word	0x000058f4
    521c:	.word	0x000058b0
    5220:	.word	0x00005840
    5224:	.word	0x00005838
    5228:	.word	0x000058ec
    522c:	.word	0x00005740
    5230:	.word	0x00006538
    5234:	.word	0x000064c4
    5238:	.word	0x000055d0
    523c:	.word	0x00006668
    5240:	.word	0x00006694
    5244:	.word	0x00006680
    5248:	.word	0x00005694
    524c:	.word	0x00005814
    5250:	.word	0x00005a58
    5254:	.word	0x000065b8
    5258:	.word	0x00006554
    525c:	.word	0x0000647c
    5260:	.word	0x0000647c
    5264:	ldr	r3, [sp, #32]
    5268:	cmp	r3, #0
    526c:	cmpne	r8, #0
    5270:	bne	5438 <doProlog+0x35c>
    5274:	add	r3, r8, #15
    5278:	cmp	r3, #15
    527c:	ldrls	pc, [pc, r3, lsl #2]
    5280:	b	5570 <doProlog+0x494>
    5284:	.word	0x00005448
    5288:	.word	0x00005570
    528c:	.word	0x00005570
    5290:	.word	0x00005570
    5294:	.word	0x00005570
    5298:	.word	0x00005570
    529c:	.word	0x00005570
    52a0:	.word	0x00005570
    52a4:	.word	0x00005570
    52a8:	.word	0x00005570
    52ac:	.word	0x00005570
    52b0:	.word	0x000053f4
    52b4:	.word	0x00005570
    52b8:	.word	0x000053cc
    52bc:	.word	0x000053dc
    52c0:	.word	0x000053e4
    52c4:	ldr	r3, [r7, #48]	; 0x30
    52c8:	ldr	r2, [sp, #100]	; 0x64
    52cc:	mov	r1, r6
    52d0:	mov	r0, r7
    52d4:	blx	r3
    52d8:	subs	r9, r0, #0
    52dc:	movne	r3, #0
    52e0:	strne	r3, [r4, #324]	; 0x144
    52e4:	bne	5348 <doProlog+0x26c>
    52e8:	ldrb	r3, [sl, #128]	; 0x80
    52ec:	cmp	r3, #0
    52f0:	beq	5b58 <doProlog+0xa7c>
    52f4:	ldr	r3, [sp, #100]	; 0x64
    52f8:	mov	r2, r6
    52fc:	mov	r1, r7
    5300:	add	r0, sl, #80	; 0x50
    5304:	bl	1108 <poolStoreString>
    5308:	subs	r8, r0, #0
    530c:	beq	5830 <doProlog+0x754>
    5310:	mov	r3, #36	; 0x24
    5314:	mov	r2, r8
    5318:	mov	r1, sl
    531c:	mov	r0, r4
    5320:	bl	9d8 <lookup>
    5324:	cmp	r0, #0
    5328:	str	r0, [r4, #324]	; 0x144
    532c:	beq	5830 <doProlog+0x754>
    5330:	ldr	r3, [r0]
    5334:	cmp	r8, r3
    5338:	beq	6c60 <doProlog+0x1b84>
    533c:	ldr	r3, [sl, #96]	; 0x60
    5340:	str	r3, [sl, #92]	; 0x5c
    5344:	str	r9, [r4, #324]	; 0x144
    5348:	ldr	r3, [r4, #88]	; 0x58
    534c:	cmp	r3, #0
    5350:	beq	5368 <doProlog+0x28c>
    5354:	mov	r2, r6
    5358:	ldr	r3, [sp, #100]	; 0x64
    535c:	mov	r1, r7
    5360:	mov	r0, r4
    5364:	bl	90 <reportDefault>
    5368:	ldr	r3, [r4, #496]	; 0x1f0
    536c:	cmp	r3, #2
    5370:	beq	5398 <doProlog+0x2bc>
    5374:	cmp	r3, #3
    5378:	bne	53a8 <doProlog+0x2cc>
    537c:	ldr	r2, [sp, #104]	; 0x68
    5380:	ldr	r3, [sp, #100]	; 0x64
    5384:	mov	r8, #0
    5388:	str	r3, [r2]
    538c:	mov	r0, r8
    5390:	add	sp, sp, #60	; 0x3c
    5394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5398:	mov	r8, #35	; 0x23
    539c:	mov	r0, r8
    53a0:	add	sp, sp, #60	; 0x3c
    53a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    53a8:	add	r3, sp, #92	; 0x5c
    53ac:	ldr	r8, [r7]
    53b0:	ldr	r6, [r3, #8]!
    53b4:	ldr	r2, [sp, #36]	; 0x24
    53b8:	mov	r1, r6
    53bc:	mov	r0, r7
    53c0:	blx	r8
    53c4:	mov	r8, r0
    53c8:	b	5124 <doProlog+0x48>
    53cc:	mov	r8, #6
    53d0:	mov	r0, r8
    53d4:	add	sp, sp, #60	; 0x3c
    53d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    53dc:	mov	r8, #5
    53e0:	b	538c <doProlog+0x2b0>
    53e4:	ldr	r3, [sp, #100]	; 0x64
    53e8:	mov	r8, #4
    53ec:	str	r3, [fp]
    53f0:	b	538c <doProlog+0x2b0>
    53f4:	ldr	r3, [r4, #152]	; 0x98
    53f8:	cmp	r7, r3
    53fc:	beq	66fc <doProlog+0x1620>
    5400:	ldr	r3, [r4, #308]	; 0x134
    5404:	ldrb	r8, [r3, #20]
    5408:	cmp	r8, #0
    540c:	beq	66f0 <doProlog+0x1614>
    5410:	ldr	r3, [sp, #36]	; 0x24
    5414:	str	r7, [sp]
    5418:	add	r0, r4, #264	; 0x108
    541c:	ldr	r5, [r4, #264]	; 0x108
    5420:	mov	r2, r3
    5424:	mvn	r1, #3
    5428:	blx	r5
    542c:	cmn	r0, #1
    5430:	moveq	r8, #29
    5434:	beq	538c <doProlog+0x2b0>
    5438:	ldr	r3, [sp, #104]	; 0x68
    543c:	mov	r8, #0
    5440:	str	r6, [r3]
    5444:	b	538c <doProlog+0x2b0>
    5448:	ldr	r3, [sp, #100]	; 0x64
    544c:	str	r7, [sp]
    5450:	mov	r2, r6
    5454:	ldr	r8, [r4, #264]	; 0x108
    5458:	mov	r1, #15
    545c:	add	r0, r4, #264	; 0x108
    5460:	blx	r8
    5464:	add	r3, r0, #1
    5468:	mov	r9, r0
    546c:	cmp	r3, #61	; 0x3d
    5470:	ldrls	pc, [pc, r3, lsl #2]
    5474:	b	5348 <doProlog+0x26c>
    5478:	.word	0x000066e8
    547c:	.word	0x00005348
    5480:	.word	0x00005b0c
    5484:	.word	0x00005a88
    5488:	.word	0x00005a78
    548c:	.word	0x000063bc
    5490:	.word	0x0000631c
    5494:	.word	0x00006270
    5498:	.word	0x0000620c
    549c:	.word	0x00005e78
    54a0:	.word	0x000052c4
    54a4:	.word	0x00005b4c
    54a8:	.word	0x00005b30
    54ac:	.word	0x00006044
    54b0:	.word	0x000059ec
    54b4:	.word	0x00005608
    54b8:	.word	0x0000598c
    54bc:	.word	0x000065d8
    54c0:	.word	0x0000669c
    54c4:	.word	0x000061c8
    54c8:	.word	0x00006114
    54cc:	.word	0x00006404
    54d0:	.word	0x00005fe0
    54d4:	.word	0x00005584
    54d8:	.word	0x00006540
    54dc:	.word	0x00005fcc
    54e0:	.word	0x000066b8
    54e4:	.word	0x000066ac
    54e8:	.word	0x0000665c
    54ec:	.word	0x00005e1c
    54f0:	.word	0x00005e6c
    54f4:	.word	0x00005b68
    54f8:	.word	0x00005c6c
    54fc:	.word	0x00005c6c
    5500:	.word	0x000055b4
    5504:	.word	0x00005968
    5508:	.word	0x00005b74
    550c:	.word	0x00005b74
    5510:	.word	0x00005ce0
    5514:	.word	0x00005ce0
    5518:	.word	0x000055f8
    551c:	.word	0x00005e28
    5520:	.word	0x000058f4
    5524:	.word	0x000058f4
    5528:	.word	0x000058b0
    552c:	.word	0x00005840
    5530:	.word	0x00005838
    5534:	.word	0x000058ec
    5538:	.word	0x00005740
    553c:	.word	0x00006538
    5540:	.word	0x000064c4
    5544:	.word	0x000055d0
    5548:	.word	0x00006668
    554c:	.word	0x00006694
    5550:	.word	0x00006680
    5554:	.word	0x00005694
    5558:	.word	0x00005814
    555c:	.word	0x00005a58
    5560:	.word	0x000065b8
    5564:	.word	0x00006554
    5568:	.word	0x0000647c
    556c:	.word	0x0000647c
    5570:	ldr	r2, [sp, #36]	; 0x24
    5574:	rsb	r8, r8, #0
    5578:	mov	r3, r2
    557c:	str	r2, [sp, #100]	; 0x64
    5580:	b	5140 <doProlog+0x64>
    5584:	ldr	r3, [sp, #100]	; 0x64
    5588:	mov	r2, r6
    558c:	mov	r1, r7
    5590:	mov	r0, r4
    5594:	bl	1460 <getAttributeId>
    5598:	cmp	r0, #0
    559c:	str	r0, [r4, #356]	; 0x164
    55a0:	beq	5830 <doProlog+0x754>
    55a4:	mov	r3, #0
    55a8:	strb	r3, [r4, #360]	; 0x168
    55ac:	str	r3, [r4, #340]	; 0x154
    55b0:	strb	r3, [r4, #361]	; 0x169
    55b4:	ldrb	r3, [sl, #128]	; 0x80
    55b8:	cmp	r3, #0
    55bc:	beq	5348 <doProlog+0x26c>
    55c0:	ldr	r3, [r4, #140]	; 0x8c
    55c4:	cmp	r3, #0
    55c8:	bne	5368 <doProlog+0x28c>
    55cc:	b	5348 <doProlog+0x26c>
    55d0:	ldr	r2, [r4, #480]	; 0x1e0
    55d4:	ldr	r3, [r4, #268]	; 0x10c
    55d8:	ldrb	r1, [r2, r3]
    55dc:	cmp	r1, #124	; 0x7c
    55e0:	beq	66e8 <doProlog+0x160c>
    55e4:	mov	r1, #44	; 0x2c
    55e8:	strb	r1, [r2, r3]
    55ec:	ldrb	r3, [sl, #160]	; 0xa0
    55f0:	cmp	r3, #0
    55f4:	beq	5348 <doProlog+0x26c>
    55f8:	ldr	r3, [r4, #136]	; 0x88
    55fc:	cmp	r3, #0
    5600:	bne	5368 <doProlog+0x28c>
    5604:	b	5348 <doProlog+0x26c>
    5608:	ldr	r8, [r7, #56]	; 0x38
    560c:	mov	r3, fp
    5610:	ldr	r2, [sp, #100]	; 0x64
    5614:	mov	r1, r6
    5618:	mov	r0, r7
    561c:	blx	r8
    5620:	cmp	r0, #0
    5624:	beq	6bc8 <doProlog+0x1aec>
    5628:	ldrb	r3, [sl, #128]	; 0x80
    562c:	cmp	r3, #0
    5630:	beq	5348 <doProlog+0x26c>
    5634:	ldr	r3, [r4, #324]	; 0x144
    5638:	cmp	r3, #0
    563c:	beq	5348 <doProlog+0x26c>
    5640:	mov	r9, #1
    5644:	ldr	r3, [r7, #68]	; 0x44
    5648:	ldr	r1, [sp, #100]	; 0x64
    564c:	add	r2, r6, r3
    5650:	add	r0, sl, #80	; 0x50
    5654:	sub	r3, r1, r3
    5658:	mov	r1, r7
    565c:	bl	1108 <poolStoreString>
    5660:	subs	r8, r0, #0
    5664:	beq	5830 <doProlog+0x754>
    5668:	bl	638 <normalizePublicId>
    566c:	ldr	r1, [r4, #144]	; 0x90
    5670:	ldr	r2, [r4, #324]	; 0x144
    5674:	ldr	r3, [sl, #92]	; 0x5c
    5678:	cmp	r1, #0
    567c:	str	r8, [r2, #24]
    5680:	str	r3, [sl, #96]	; 0x60
    5684:	bne	5368 <doProlog+0x28c>
    5688:	cmp	r9, #0
    568c:	bne	5348 <doProlog+0x26c>
    5690:	b	5368 <doProlog+0x28c>
    5694:	mov	r9, #3
    5698:	ldrb	r3, [sl, #160]	; 0xa0
    569c:	cmp	r3, #0
    56a0:	beq	5348 <doProlog+0x26c>
    56a4:	ldr	r2, [sp, #100]	; 0x64
    56a8:	ldr	r3, [r7, #68]	; 0x44
    56ac:	sub	r3, r2, r3
    56b0:	mov	r0, r4
    56b4:	str	r3, [sp, #40]	; 0x28
    56b8:	bl	790 <nextScaffoldPart>
    56bc:	cmp	r0, #0
    56c0:	blt	5830 <doProlog+0x754>
    56c4:	ldr	r2, [sl, #164]	; 0xa4
    56c8:	rsb	r0, r0, r0, lsl #3
    56cc:	mov	r1, #4
    56d0:	lsl	r8, r0, #2
    56d4:	str	r1, [r2, r0, lsl #2]
    56d8:	add	r1, r2, r8
    56dc:	ldr	r3, [sp, #40]	; 0x28
    56e0:	str	r9, [r1, #4]
    56e4:	mov	r2, r6
    56e8:	mov	r1, r7
    56ec:	mov	r0, r4
    56f0:	bl	2ba8 <getElementType>
    56f4:	cmp	r0, #0
    56f8:	beq	5830 <doProlog+0x754>
    56fc:	ldr	r3, [sl, #164]	; 0xa4
    5700:	ldr	r1, [r0]
    5704:	add	r8, r3, r8
    5708:	sub	r2, r1, #1
    570c:	mov	r3, #0
    5710:	str	r1, [r8, #8]
    5714:	ldrb	r1, [r2, #1]!
    5718:	add	r3, r3, #1
    571c:	cmp	r1, #0
    5720:	bne	5714 <doProlog+0x638>
    5724:	ldr	r2, [sl, #168]	; 0xa8
    5728:	ldr	r1, [r4, #136]	; 0x88
    572c:	add	r3, r2, r3
    5730:	cmp	r1, #0
    5734:	str	r3, [sl, #168]	; 0xa8
    5738:	bne	5368 <doProlog+0x28c>
    573c:	b	5348 <doProlog+0x26c>
    5740:	mov	r1, #1
    5744:	ldrb	r3, [sl, #160]	; 0xa0
    5748:	cmp	r3, #0
    574c:	beq	5348 <doProlog+0x26c>
    5750:	ldr	r3, [r4, #136]	; 0x88
    5754:	cmp	r3, #0
    5758:	beq	67f0 <doProlog+0x1714>
    575c:	ldr	r8, [sl, #180]	; 0xb4
    5760:	ldr	r3, [sl, #184]	; 0xb8
    5764:	sub	r8, r8, #1
    5768:	str	r8, [sl, #180]	; 0xb4
    576c:	ldr	r3, [r3, r8, lsl #2]
    5770:	ldr	r2, [sl, #164]	; 0xa4
    5774:	cmp	r8, #0
    5778:	rsb	r3, r3, r3, lsl #3
    577c:	add	r3, r2, r3, lsl #2
    5780:	str	r1, [r3, #4]
    5784:	bne	5368 <doProlog+0x28c>
    5788:	ldr	r2, [r4, #364]	; 0x16c
    578c:	ldr	r1, [r4, #12]
    5790:	str	r2, [sp, #40]	; 0x28
    5794:	ldr	r3, [r2, #176]	; 0xb0
    5798:	ldr	r0, [r2, #168]	; 0xa8
    579c:	add	r3, r3, r3, lsl #2
    57a0:	add	r0, r0, r3, lsl #2
    57a4:	blx	r1
    57a8:	subs	r9, r0, #0
    57ac:	beq	5830 <doProlog+0x754>
    57b0:	ldr	r2, [sp, #40]	; 0x28
    57b4:	add	r3, sp, #56	; 0x38
    57b8:	add	r0, r9, #20
    57bc:	ldr	r2, [r2, #176]	; 0xb0
    57c0:	add	r1, sp, #52	; 0x34
    57c4:	str	r0, [r3, #-8]!
    57c8:	add	r2, r2, r2, lsl #2
    57cc:	str	r1, [sp]
    57d0:	add	ip, r9, r2, lsl #2
    57d4:	mov	r1, r8
    57d8:	mov	r2, r9
    57dc:	mov	r0, r4
    57e0:	str	ip, [sp, #52]	; 0x34
    57e4:	bl	8b8 <build_node>
    57e8:	ldr	r3, [r4, #352]	; 0x160
    57ec:	ldr	r2, [sp, #28]
    57f0:	str	r6, [r2]
    57f4:	mov	r2, r9
    57f8:	ldr	r1, [r3]
    57fc:	ldr	r0, [r4, #4]
    5800:	ldr	r3, [r4, #136]	; 0x88
    5804:	blx	r3
    5808:	strb	r8, [sl, #160]	; 0xa0
    580c:	str	r8, [sl, #168]	; 0xa8
    5810:	b	5368 <doProlog+0x28c>
    5814:	mov	r2, r6
    5818:	ldr	r3, [sp, #100]	; 0x64
    581c:	mov	r1, r7
    5820:	mov	r0, r4
    5824:	bl	2ca0 <reportProcessingInstruction>
    5828:	cmp	r0, #0
    582c:	bne	5368 <doProlog+0x28c>
    5830:	mov	r8, #1
    5834:	b	538c <doProlog+0x2b0>
    5838:	mov	r1, #0
    583c:	b	5744 <doProlog+0x668>
    5840:	ldr	r3, [r4, #268]	; 0x10c
    5844:	ldr	r2, [r4, #484]	; 0x1e4
    5848:	cmp	r3, r2
    584c:	bcs	6744 <doProlog+0x1668>
    5850:	ldr	r2, [r4, #480]	; 0x1e0
    5854:	mov	r1, #0
    5858:	strb	r1, [r2, r3]
    585c:	ldrb	r3, [sl, #160]	; 0xa0
    5860:	cmp	r3, r1
    5864:	beq	5348 <doProlog+0x26c>
    5868:	mov	r0, r4
    586c:	bl	790 <nextScaffoldPart>
    5870:	cmp	r0, #0
    5874:	blt	5830 <doProlog+0x754>
    5878:	ldr	r1, [sl, #180]	; 0xb4
    587c:	ldr	r3, [sl, #184]	; 0xb8
    5880:	ldr	r2, [sl, #164]	; 0xa4
    5884:	str	r0, [r3, r1, lsl #2]
    5888:	ldr	r1, [r4, #136]	; 0x88
    588c:	ldr	r3, [sl, #180]	; 0xb4
    5890:	rsb	r0, r0, r0, lsl #3
    5894:	add	r3, r3, #1
    5898:	cmp	r1, #0
    589c:	mov	r1, #6
    58a0:	str	r3, [sl, #180]	; 0xb4
    58a4:	str	r1, [r2, r0, lsl #2]
    58a8:	bne	5368 <doProlog+0x28c>
    58ac:	b	5348 <doProlog+0x26c>
    58b0:	ldrb	r3, [sl, #160]	; 0xa0
    58b4:	cmp	r3, #0
    58b8:	beq	5348 <doProlog+0x26c>
    58bc:	ldr	r3, [sl, #180]	; 0xb4
    58c0:	ldr	r1, [sl, #184]	; 0xb8
    58c4:	sub	r3, r3, #-1073741823	; 0xc0000001
    58c8:	ldr	r0, [r4, #136]	; 0x88
    58cc:	ldr	r3, [r1, r3, lsl #2]
    58d0:	mov	r1, #3
    58d4:	ldr	r2, [sl, #164]	; 0xa4
    58d8:	rsb	r3, r3, r3, lsl r1
    58dc:	cmp	r0, #0
    58e0:	str	r1, [r2, r3, lsl #2]
    58e4:	bne	5368 <doProlog+0x28c>
    58e8:	b	5348 <doProlog+0x26c>
    58ec:	mov	r1, #2
    58f0:	b	5744 <doProlog+0x668>
    58f4:	ldrb	r3, [sl, #160]	; 0xa0
    58f8:	cmp	r3, #0
    58fc:	beq	5348 <doProlog+0x26c>
    5900:	ldr	r3, [r4, #136]	; 0x88
    5904:	cmp	r3, #0
    5908:	beq	697c <doProlog+0x18a0>
    590c:	ldr	r3, [r4, #12]
    5910:	mov	r0, #20
    5914:	blx	r3
    5918:	subs	r2, r0, #0
    591c:	beq	5830 <doProlog+0x754>
    5920:	ldr	r1, [r4, #352]	; 0x160
    5924:	ldr	r3, [sp, #28]
    5928:	cmp	r9, #41	; 0x29
    592c:	mov	r8, #0
    5930:	movne	r9, #1
    5934:	moveq	r9, #2
    5938:	str	r9, [r2]
    593c:	str	r8, [r2, #4]
    5940:	str	r8, [r2, #8]
    5944:	str	r8, [r2, #12]
    5948:	str	r8, [r2, #16]
    594c:	str	r6, [r3]
    5950:	ldr	r3, [r4, #136]	; 0x88
    5954:	ldr	r1, [r1]
    5958:	ldr	r0, [r4, #4]
    595c:	blx	r3
    5960:	strb	r8, [sl, #160]	; 0xa0
    5964:	b	5368 <doProlog+0x28c>
    5968:	ldr	r3, [sp, #100]	; 0x64
    596c:	mov	r2, r6
    5970:	mov	r1, r7
    5974:	mov	r0, r4
    5978:	bl	2ba8 <getElementType>
    597c:	cmp	r0, #0
    5980:	str	r0, [r4, #352]	; 0x160
    5984:	bne	55b4 <doProlog+0x4d8>
    5988:	b	5830 <doProlog+0x754>
    598c:	ldrb	r3, [sl, #128]	; 0x80
    5990:	cmp	r3, #0
    5994:	beq	5348 <doProlog+0x26c>
    5998:	ldr	ip, [r4, #324]	; 0x144
    599c:	cmp	ip, #0
    59a0:	beq	5348 <doProlog+0x26c>
    59a4:	ldr	r8, [r4, #144]	; 0x90
    59a8:	cmp	r8, #0
    59ac:	beq	5348 <doProlog+0x26c>
    59b0:	ldr	r2, [sp, #28]
    59b4:	mov	r3, #0
    59b8:	str	r6, [r2]
    59bc:	ldrb	r2, [ip, #33]	; 0x21
    59c0:	ldr	r1, [ip]
    59c4:	str	r3, [sp, #16]
    59c8:	ldr	r0, [ip, #24]
    59cc:	str	r0, [sp, #12]
    59d0:	ldr	lr, [ip, #16]
    59d4:	ldr	r0, [r4, #4]
    59d8:	str	lr, [sp, #8]
    59dc:	ldr	ip, [ip, #20]
    59e0:	stm	sp, {r3, ip}
    59e4:	blx	r8
    59e8:	b	5368 <doProlog+0x28c>
    59ec:	ldrb	r3, [sl, #128]	; 0x80
    59f0:	cmp	r3, #0
    59f4:	beq	5348 <doProlog+0x26c>
    59f8:	ldr	r8, [r4, #324]	; 0x144
    59fc:	cmp	r8, #0
    5a00:	beq	5348 <doProlog+0x26c>
    5a04:	mov	r9, #1
    5a08:	ldr	r3, [r7, #68]	; 0x44
    5a0c:	ldr	r1, [sp, #100]	; 0x64
    5a10:	add	r2, r6, r3
    5a14:	add	r0, sl, #80	; 0x50
    5a18:	sub	r3, r1, r3
    5a1c:	mov	r1, r7
    5a20:	bl	1108 <poolStoreString>
    5a24:	ldr	r3, [r4, #324]	; 0x144
    5a28:	str	r0, [r8, #16]
    5a2c:	ldr	r2, [r3, #16]
    5a30:	cmp	r2, #0
    5a34:	beq	5830 <doProlog+0x754>
    5a38:	ldr	r2, [r4, #144]	; 0x90
    5a3c:	ldr	r1, [r4, #368]	; 0x170
    5a40:	cmp	r2, #0
    5a44:	ldr	r2, [sl, #92]	; 0x5c
    5a48:	str	r1, [r3, #20]
    5a4c:	str	r2, [sl, #96]	; 0x60
    5a50:	bne	5368 <doProlog+0x28c>
    5a54:	b	5688 <doProlog+0x5ac>
    5a58:	mov	r2, r6
    5a5c:	ldr	r3, [sp, #100]	; 0x64
    5a60:	mov	r1, r7
    5a64:	mov	r0, r4
    5a68:	bl	2dc8 <reportComment>
    5a6c:	cmp	r0, #0
    5a70:	bne	5368 <doProlog+0x28c>
    5a74:	b	5830 <doProlog+0x754>
    5a78:	ldr	r3, [r4, #92]	; 0x5c
    5a7c:	cmp	r3, #0
    5a80:	bne	5368 <doProlog+0x28c>
    5a84:	b	5348 <doProlog+0x26c>
    5a88:	ldrb	r3, [r4, #505]	; 0x1f9
    5a8c:	cmp	r3, #0
    5a90:	beq	6714 <doProlog+0x1638>
    5a94:	mov	r3, #1
    5a98:	ldrb	r5, [sl, #129]	; 0x81
    5a9c:	strb	r3, [sl, #129]	; 0x81
    5aa0:	ldr	r3, [r4, #508]	; 0x1fc
    5aa4:	cmp	r3, #0
    5aa8:	beq	6714 <doProlog+0x1638>
    5aac:	ldr	r3, [r4, #120]	; 0x78
    5ab0:	cmp	r3, #0
    5ab4:	beq	6714 <doProlog+0x1638>
    5ab8:	mov	r3, #36	; 0x24
    5abc:	ldr	r2, [pc, #1564]	; 60e0 <doProlog+0x1004>
    5ac0:	add	r1, sl, #132	; 0x84
    5ac4:	mov	r0, r4
    5ac8:	bl	9d8 <lookup>
    5acc:	cmp	r0, #0
    5ad0:	beq	5830 <doProlog+0x754>
    5ad4:	ldr	r2, [r4, #368]	; 0x170
    5ad8:	mov	r1, #0
    5adc:	str	r2, [r0, #20]
    5ae0:	strb	r1, [sl, #131]	; 0x83
    5ae4:	ldr	ip, [r0, #24]
    5ae8:	ldr	r3, [r0, #16]
    5aec:	ldr	r0, [r4, #124]	; 0x7c
    5af0:	str	ip, [sp]
    5af4:	ldr	r7, [r4, #120]	; 0x78
    5af8:	blx	r7
    5afc:	cmp	r0, #0
    5b00:	bne	69d4 <doProlog+0x18f8>
    5b04:	mov	r8, #21
    5b08:	b	538c <doProlog+0x2b0>
    5b0c:	mov	r2, r6
    5b10:	ldr	r3, [sp, #100]	; 0x64
    5b14:	mov	r1, #0
    5b18:	mov	r0, r4
    5b1c:	bl	1160 <processXmlDecl>
    5b20:	subs	r8, r0, #0
    5b24:	bne	538c <doProlog+0x2b0>
    5b28:	ldr	r7, [r4, #152]	; 0x98
    5b2c:	b	5368 <doProlog+0x28c>
    5b30:	ldrb	r3, [sl, #128]	; 0x80
    5b34:	cmp	r3, #0
    5b38:	beq	5348 <doProlog+0x26c>
    5b3c:	ldr	r3, [r4, #144]	; 0x90
    5b40:	cmp	r3, #0
    5b44:	bne	5368 <doProlog+0x28c>
    5b48:	b	5348 <doProlog+0x26c>
    5b4c:	ldrb	r3, [sl, #128]	; 0x80
    5b50:	cmp	r3, #0
    5b54:	bne	68d8 <doProlog+0x17fc>
    5b58:	ldr	r2, [sl, #96]	; 0x60
    5b5c:	str	r2, [sl, #92]	; 0x5c
    5b60:	str	r3, [r4, #324]	; 0x144
    5b64:	b	5348 <doProlog+0x26c>
    5b68:	ldr	r3, [pc, #1396]	; 60e4 <doProlog+0x1008>
    5b6c:	str	r3, [r4, #340]	; 0x154
    5b70:	b	55b4 <doProlog+0x4d8>
    5b74:	ldrb	r3, [sl, #128]	; 0x80
    5b78:	cmp	r3, #0
    5b7c:	beq	5348 <doProlog+0x26c>
    5b80:	add	lr, r4, #16
    5b84:	ldrb	r3, [r4, #361]	; 0x169
    5b88:	ldrb	r2, [r4, #360]	; 0x168
    5b8c:	ldr	r1, [r4, #356]	; 0x164
    5b90:	ldr	r0, [r4, #352]	; 0x160
    5b94:	add	ip, r4, #12
    5b98:	str	lr, [sp, #8]
    5b9c:	mov	lr, #0
    5ba0:	str	ip, [sp, #4]
    5ba4:	str	lr, [sp]
    5ba8:	bl	22b4 <defineAttribute.isra.2>
    5bac:	cmp	r0, #0
    5bb0:	beq	5830 <doProlog+0x754>
    5bb4:	ldr	r8, [r4, #140]	; 0x8c
    5bb8:	cmp	r8, #0
    5bbc:	beq	5348 <doProlog+0x26c>
    5bc0:	ldr	r3, [r4, #340]	; 0x154
    5bc4:	cmp	r3, #0
    5bc8:	beq	5348 <doProlog+0x26c>
    5bcc:	ldrb	r2, [r3]
    5bd0:	cmp	r2, #40	; 0x28
    5bd4:	beq	6af4 <doProlog+0x1a18>
    5bd8:	cmp	r2, #78	; 0x4e
    5bdc:	beq	6ae8 <doProlog+0x1a0c>
    5be0:	ldr	r3, [r4, #352]	; 0x160
    5be4:	ldr	r2, [r4, #356]	; 0x164
    5be8:	ldr	r1, [sp, #28]
    5bec:	mov	ip, #0
    5bf0:	sub	r9, r9, #36	; 0x24
    5bf4:	clz	r9, r9
    5bf8:	lsr	r9, r9, #5
    5bfc:	str	r6, [r1]
    5c00:	ldr	r1, [r3]
    5c04:	ldr	r2, [r2]
    5c08:	ldr	r3, [r4, #340]	; 0x154
    5c0c:	ldr	r0, [r4, #4]
    5c10:	str	r9, [sp, #4]
    5c14:	str	ip, [sp]
    5c18:	blx	r8
    5c1c:	ldr	r1, [r4, #436]	; 0x1b4
    5c20:	ldr	r3, [r4, #432]	; 0x1b0
    5c24:	cmp	r1, #0
    5c28:	beq	5c50 <doProlog+0xb74>
    5c2c:	cmp	r3, #0
    5c30:	bne	5c3c <doProlog+0xb60>
    5c34:	b	5c54 <doProlog+0xb78>
    5c38:	mov	r3, r2
    5c3c:	ldr	r2, [r3]
    5c40:	str	r1, [r3]
    5c44:	cmp	r2, #0
    5c48:	mov	r1, r3
    5c4c:	bne	5c38 <doProlog+0xb5c>
    5c50:	str	r3, [r4, #436]	; 0x1b4
    5c54:	mov	r3, #0
    5c58:	str	r3, [r4, #432]	; 0x1b0
    5c5c:	str	r3, [r4, #448]	; 0x1c0
    5c60:	str	r3, [r4, #444]	; 0x1bc
    5c64:	str	r3, [r4, #440]	; 0x1b8
    5c68:	b	5368 <doProlog+0x28c>
    5c6c:	ldrb	r3, [sl, #128]	; 0x80
    5c70:	cmp	r3, #0
    5c74:	beq	5348 <doProlog+0x26c>
    5c78:	ldr	r3, [r4, #140]	; 0x8c
    5c7c:	cmp	r3, #0
    5c80:	beq	5348 <doProlog+0x26c>
    5c84:	ldr	r3, [r4, #340]	; 0x154
    5c88:	cmp	r3, #0
    5c8c:	ldrne	r9, [pc, #1108]	; 60e8 <doProlog+0x100c>
    5c90:	beq	6bb0 <doProlog+0x1ad4>
    5c94:	add	r8, r4, #432	; 0x1b0
    5c98:	b	5cb8 <doProlog+0xbdc>
    5c9c:	add	r2, r3, #1
    5ca0:	str	r2, [r4, #444]	; 0x1bc
    5ca4:	ldrb	r2, [r9]
    5ca8:	strb	r2, [r3]
    5cac:	ldrb	r3, [r9, #1]!
    5cb0:	cmp	r3, #0
    5cb4:	beq	67b0 <doProlog+0x16d4>
    5cb8:	ldr	r3, [r4, #444]	; 0x1bc
    5cbc:	ldr	r2, [r4, #440]	; 0x1b8
    5cc0:	cmp	r3, r2
    5cc4:	bne	5c9c <doProlog+0xbc0>
    5cc8:	mov	r0, r8
    5ccc:	bl	ec8 <poolGrow>
    5cd0:	cmp	r0, #0
    5cd4:	beq	5830 <doProlog+0x754>
    5cd8:	ldr	r3, [r4, #444]	; 0x1bc
    5cdc:	b	5c9c <doProlog+0xbc0>
    5ce0:	ldrb	r3, [sl, #128]	; 0x80
    5ce4:	cmp	r3, #0
    5ce8:	beq	5348 <doProlog+0x26c>
    5cec:	ldrb	r1, [r4, #360]	; 0x168
    5cf0:	ldr	r3, [r7, #68]	; 0x44
    5cf4:	ldr	r2, [sp, #100]	; 0x64
    5cf8:	add	r0, sl, #80	; 0x50
    5cfc:	sub	r2, r2, r3
    5d00:	str	r2, [sp]
    5d04:	str	r1, [sp, #40]	; 0x28
    5d08:	mov	r2, r1
    5d0c:	str	r0, [sp, #44]	; 0x2c
    5d10:	str	r0, [sp, #4]
    5d14:	add	r3, r6, r3
    5d18:	mov	r1, r7
    5d1c:	mov	r0, r4
    5d20:	bl	1698 <appendAttributeValue>
    5d24:	subs	r8, r0, #0
    5d28:	bne	538c <doProlog+0x2b0>
    5d2c:	ldr	r1, [sp, #44]	; 0x2c
    5d30:	ldr	r0, [sp, #40]	; 0x28
    5d34:	bl	2c24 <storeAttributeValue.part.11>
    5d38:	subs	r8, r0, #0
    5d3c:	bne	538c <doProlog+0x2b0>
    5d40:	ldr	r2, [sl, #96]	; 0x60
    5d44:	ldr	r3, [sl, #92]	; 0x5c
    5d48:	str	r2, [sp, #40]	; 0x28
    5d4c:	str	r3, [sl, #96]	; 0x60
    5d50:	mov	r3, r8
    5d54:	ldr	r8, [sp, #40]	; 0x28
    5d58:	add	lr, r4, #16
    5d5c:	add	ip, r4, #12
    5d60:	ldrb	r2, [r4, #360]	; 0x168
    5d64:	ldr	r1, [r4, #356]	; 0x164
    5d68:	ldr	r0, [r4, #352]	; 0x160
    5d6c:	stm	sp, {r8, ip, lr}
    5d70:	bl	22b4 <defineAttribute.isra.2>
    5d74:	cmp	r0, #0
    5d78:	beq	5830 <doProlog+0x754>
    5d7c:	ldr	r8, [r4, #140]	; 0x8c
    5d80:	cmp	r8, #0
    5d84:	beq	5348 <doProlog+0x26c>
    5d88:	ldr	r3, [r4, #340]	; 0x154
    5d8c:	cmp	r3, #0
    5d90:	beq	5348 <doProlog+0x26c>
    5d94:	ldrb	r2, [r3]
    5d98:	cmp	r2, #40	; 0x28
    5d9c:	beq	6b58 <doProlog+0x1a7c>
    5da0:	cmp	r2, #78	; 0x4e
    5da4:	beq	6b4c <doProlog+0x1a70>
    5da8:	ldr	r3, [r4, #352]	; 0x160
    5dac:	ldr	r2, [r4, #356]	; 0x164
    5db0:	ldr	r1, [sp, #28]
    5db4:	ldr	ip, [sp, #40]	; 0x28
    5db8:	sub	r9, r9, #38	; 0x26
    5dbc:	clz	r9, r9
    5dc0:	lsr	r9, r9, #5
    5dc4:	str	r6, [r1]
    5dc8:	ldr	r1, [r3]
    5dcc:	ldr	r2, [r2]
    5dd0:	ldr	r3, [r4, #340]	; 0x154
    5dd4:	str	r9, [sp, #4]
    5dd8:	ldr	r0, [r4, #4]
    5ddc:	str	ip, [sp]
    5de0:	blx	r8
    5de4:	ldr	r1, [r4, #436]	; 0x1b4
    5de8:	ldr	r3, [r4, #432]	; 0x1b0
    5dec:	cmp	r1, #0
    5df0:	beq	5c50 <doProlog+0xb74>
    5df4:	cmp	r3, #0
    5df8:	bne	5e04 <doProlog+0xd28>
    5dfc:	b	5c54 <doProlog+0xb78>
    5e00:	mov	r3, r2
    5e04:	ldr	r2, [r3]
    5e08:	str	r1, [r3]
    5e0c:	cmp	r2, #0
    5e10:	mov	r1, r3
    5e14:	bne	5e00 <doProlog+0xd24>
    5e18:	b	5c50 <doProlog+0xb74>
    5e1c:	ldr	r3, [pc, #712]	; 60ec <doProlog+0x1010>
    5e20:	str	r3, [r4, #340]	; 0x154
    5e24:	b	55b4 <doProlog+0x4d8>
    5e28:	ldr	r3, [r4, #136]	; 0x88
    5e2c:	cmp	r3, #0
    5e30:	beq	5348 <doProlog+0x26c>
    5e34:	mov	r2, r6
    5e38:	ldr	r3, [sp, #100]	; 0x64
    5e3c:	mov	r1, r7
    5e40:	mov	r0, r4
    5e44:	bl	2ba8 <getElementType>
    5e48:	cmp	r0, #0
    5e4c:	str	r0, [r4, #352]	; 0x160
    5e50:	beq	5830 <doProlog+0x754>
    5e54:	mov	r3, #0
    5e58:	mov	r2, #1
    5e5c:	str	r3, [sl, #180]	; 0xb4
    5e60:	str	r3, [sl, #176]	; 0xb0
    5e64:	strb	r2, [sl, #160]	; 0xa0
    5e68:	b	5368 <doProlog+0x28c>
    5e6c:	ldr	r3, [pc, #636]	; 60f0 <doProlog+0x1014>
    5e70:	str	r3, [r4, #340]	; 0x154
    5e74:	b	55b4 <doProlog+0x4d8>
    5e78:	ldr	r1, [r4, #328]	; 0x148
    5e7c:	cmp	r1, #0
    5e80:	moveq	r9, #1
    5e84:	beq	5ef0 <doProlog+0xe14>
    5e88:	mov	ip, #0
    5e8c:	ldr	r3, [r4, #336]	; 0x150
    5e90:	ldr	r2, [r4, #332]	; 0x14c
    5e94:	ldr	r0, [r4, #4]
    5e98:	str	ip, [sp]
    5e9c:	ldr	r8, [r4, #92]	; 0x5c
    5ea0:	blx	r8
    5ea4:	ldr	r1, [r4, #436]	; 0x1b4
    5ea8:	ldr	r3, [r4, #432]	; 0x1b0
    5eac:	cmp	r1, #0
    5eb0:	beq	5ed8 <doProlog+0xdfc>
    5eb4:	cmp	r3, #0
    5eb8:	bne	5ec4 <doProlog+0xde8>
    5ebc:	b	5edc <doProlog+0xe00>
    5ec0:	mov	r3, r2
    5ec4:	ldr	r2, [r3]
    5ec8:	str	r1, [r3]
    5ecc:	cmp	r2, #0
    5ed0:	mov	r1, r3
    5ed4:	bne	5ec0 <doProlog+0xde4>
    5ed8:	str	r3, [r4, #436]	; 0x1b4
    5edc:	mov	r9, #0
    5ee0:	str	r9, [r4, #432]	; 0x1b0
    5ee4:	str	r9, [r4, #448]	; 0x1c0
    5ee8:	str	r9, [r4, #444]	; 0x1bc
    5eec:	str	r9, [r4, #440]	; 0x1b8
    5ef0:	ldr	r3, [r4, #332]	; 0x14c
    5ef4:	cmp	r3, #0
    5ef8:	beq	696c <doProlog+0x1890>
    5efc:	mov	r3, #1
    5f00:	ldrb	r8, [sl, #129]	; 0x81
    5f04:	strb	r3, [sl, #129]	; 0x81
    5f08:	ldr	r3, [r4, #508]	; 0x1fc
    5f0c:	cmp	r3, #0
    5f10:	beq	5fac <doProlog+0xed0>
    5f14:	ldr	r3, [r4, #120]	; 0x78
    5f18:	cmp	r3, #0
    5f1c:	beq	5fac <doProlog+0xed0>
    5f20:	mov	r3, #36	; 0x24
    5f24:	mov	r2, r5
    5f28:	add	r1, sl, #132	; 0x84
    5f2c:	mov	r0, r4
    5f30:	bl	9d8 <lookup>
    5f34:	cmp	r0, #0
    5f38:	beq	5830 <doProlog+0x754>
    5f3c:	ldrb	r3, [r4, #505]	; 0x1f9
    5f40:	mov	r1, #0
    5f44:	cmp	r3, #0
    5f48:	ldrne	r2, [r4, #368]	; 0x170
    5f4c:	ldreq	r2, [r0, #20]
    5f50:	strne	r2, [r0, #20]
    5f54:	strb	r1, [sl, #131]	; 0x83
    5f58:	ldr	ip, [r0, #24]
    5f5c:	ldr	r3, [r0, #16]
    5f60:	ldr	r0, [r4, #124]	; 0x7c
    5f64:	str	ip, [sp]
    5f68:	ldr	ip, [r4, #120]	; 0x78
    5f6c:	blx	ip
    5f70:	cmp	r0, #0
    5f74:	beq	5b04 <doProlog+0xa28>
    5f78:	ldrb	r3, [sl, #131]	; 0x83
    5f7c:	cmp	r3, #0
    5f80:	beq	695c <doProlog+0x1880>
    5f84:	ldrb	r3, [sl, #130]	; 0x82
    5f88:	cmp	r3, #0
    5f8c:	bne	5fac <doProlog+0xed0>
    5f90:	ldr	r3, [r4, #116]	; 0x74
    5f94:	cmp	r3, #0
    5f98:	beq	5fac <doProlog+0xed0>
    5f9c:	ldr	r0, [r4, #4]
    5fa0:	blx	r3
    5fa4:	cmp	r0, #0
    5fa8:	beq	64bc <doProlog+0x13e0>
    5fac:	mov	r3, #0
    5fb0:	strb	r3, [r4, #505]	; 0x1f9
    5fb4:	ldr	r3, [r4, #96]	; 0x60
    5fb8:	cmp	r3, #0
    5fbc:	beq	5688 <doProlog+0x5ac>
    5fc0:	ldr	r0, [r4, #4]
    5fc4:	blx	r3
    5fc8:	b	5368 <doProlog+0x28c>
    5fcc:	ldr	r2, [pc, #288]	; 60f4 <doProlog+0x1018>
    5fd0:	mov	r3, #1
    5fd4:	str	r2, [r4, #340]	; 0x154
    5fd8:	strb	r3, [r4, #361]	; 0x169
    5fdc:	b	55b4 <doProlog+0x4d8>
    5fe0:	ldr	r8, [r7, #56]	; 0x38
    5fe4:	mov	r3, fp
    5fe8:	ldr	r2, [sp, #100]	; 0x64
    5fec:	mov	r1, r6
    5ff0:	mov	r0, r7
    5ff4:	blx	r8
    5ff8:	cmp	r0, #0
    5ffc:	beq	6bc8 <doProlog+0x1aec>
    6000:	ldr	r3, [r4, #344]	; 0x158
    6004:	cmp	r3, #0
    6008:	beq	5348 <doProlog+0x26c>
    600c:	ldr	r3, [r7, #68]	; 0x44
    6010:	ldr	r1, [sp, #100]	; 0x64
    6014:	add	r2, r6, r3
    6018:	add	r0, r4, #432	; 0x1b0
    601c:	sub	r3, r1, r3
    6020:	mov	r1, r7
    6024:	bl	1108 <poolStoreString>
    6028:	subs	r6, r0, #0
    602c:	beq	5830 <doProlog+0x754>
    6030:	bl	638 <normalizePublicId>
    6034:	ldr	r3, [r4, #444]	; 0x1bc
    6038:	str	r6, [r4, #348]	; 0x15c
    603c:	str	r3, [r4, #448]	; 0x1c0
    6040:	b	5368 <doProlog+0x28c>
    6044:	ldrb	r3, [sl, #128]	; 0x80
    6048:	cmp	r3, #0
    604c:	beq	5348 <doProlog+0x26c>
    6050:	ldr	r3, [r7, #68]	; 0x44
    6054:	ldr	r1, [sp, #100]	; 0x64
    6058:	add	r2, r6, r3
    605c:	mov	r0, r4
    6060:	sub	r3, r1, r3
    6064:	mov	r1, r7
    6068:	bl	1b30 <storeEntityValue>
    606c:	ldr	r1, [r4, #324]	; 0x144
    6070:	cmp	r1, #0
    6074:	mov	r8, r0
    6078:	beq	6c10 <doProlog+0x1b34>
    607c:	ldr	ip, [sl, #120]	; 0x78
    6080:	ldr	r3, [sl, #116]	; 0x74
    6084:	ldr	r9, [r4, #144]	; 0x90
    6088:	str	ip, [r1, #4]
    608c:	cmp	r9, #0
    6090:	sub	ip, r3, ip
    6094:	str	ip, [r1, #8]
    6098:	str	r3, [sl, #120]	; 0x78
    609c:	beq	6a8c <doProlog+0x19b0>
    60a0:	ldr	r3, [sp, #28]
    60a4:	str	r6, [r3]
    60a8:	ldr	lr, [r4, #368]	; 0x170
    60ac:	ldrb	r2, [r1, #33]	; 0x21
    60b0:	ldr	r0, [r4, #4]
    60b4:	ldm	r1, {r1, r3}
    60b8:	str	ip, [sp]
    60bc:	mov	ip, #0
    60c0:	str	lr, [sp, #4]
    60c4:	str	ip, [sp, #16]
    60c8:	str	ip, [sp, #12]
    60cc:	str	ip, [sp, #8]
    60d0:	blx	r9
    60d4:	cmp	r8, #0
    60d8:	beq	5368 <doProlog+0x28c>
    60dc:	b	538c <doProlog+0x2b0>
    60e0:	.word	0x00000088
    60e4:	.word	0x000000c4
    60e8:	.word	0x00000084
    60ec:	.word	0x000000b0
    60f0:	.word	0x000000bc
    60f4:	.word	0x00000094
    60f8:	.word	0x0000008c
    60fc:	.word	0x00000000
    6100:	.word	0x000000a8
    6104:	.word	0x000000a0
    6108:	.word	0x00000098
    610c:	.word	0x00000000
    6110:	.word	0x00000080
    6114:	ldr	r3, [r4, #344]	; 0x158
    6118:	cmp	r3, #0
    611c:	beq	67a0 <doProlog+0x16c4>
    6120:	ldr	r3, [r4, #104]	; 0x68
    6124:	cmp	r3, #0
    6128:	beq	67a0 <doProlog+0x16c4>
    612c:	ldr	r3, [r7, #68]	; 0x44
    6130:	ldr	r1, [sp, #100]	; 0x64
    6134:	add	r2, r6, r3
    6138:	add	r0, r4, #432	; 0x1b0
    613c:	sub	r3, r1, r3
    6140:	mov	r1, r7
    6144:	bl	1108 <poolStoreString>
    6148:	subs	r3, r0, #0
    614c:	beq	5830 <doProlog+0x754>
    6150:	ldr	r2, [sp, #28]
    6154:	mov	r9, #0
    6158:	str	r6, [r2]
    615c:	ldr	ip, [r4, #348]	; 0x15c
    6160:	ldr	r2, [r4, #368]	; 0x170
    6164:	ldr	r1, [r4, #344]	; 0x158
    6168:	ldr	r0, [r4, #4]
    616c:	str	ip, [sp]
    6170:	ldr	r8, [r4, #104]	; 0x68
    6174:	blx	r8
    6178:	ldr	r1, [r4, #436]	; 0x1b4
    617c:	ldr	r3, [r4, #432]	; 0x1b0
    6180:	cmp	r1, #0
    6184:	beq	61ac <doProlog+0x10d0>
    6188:	cmp	r3, #0
    618c:	bne	6198 <doProlog+0x10bc>
    6190:	b	61b0 <doProlog+0x10d4>
    6194:	mov	r3, r2
    6198:	ldr	r2, [r3]
    619c:	str	r1, [r3]
    61a0:	cmp	r2, #0
    61a4:	mov	r1, r3
    61a8:	bne	6194 <doProlog+0x10b8>
    61ac:	str	r3, [r4, #436]	; 0x1b4
    61b0:	mov	r3, #0
    61b4:	str	r3, [r4, #432]	; 0x1b0
    61b8:	str	r3, [r4, #448]	; 0x1c0
    61bc:	str	r3, [r4, #444]	; 0x1bc
    61c0:	str	r3, [r4, #440]	; 0x1b8
    61c4:	b	5688 <doProlog+0x5ac>
    61c8:	ldr	r2, [r4, #104]	; 0x68
    61cc:	mov	r3, #0
    61d0:	cmp	r2, r3
    61d4:	str	r3, [r4, #348]	; 0x15c
    61d8:	str	r3, [r4, #344]	; 0x158
    61dc:	beq	5348 <doProlog+0x26c>
    61e0:	mov	r2, r6
    61e4:	ldr	r3, [sp, #100]	; 0x64
    61e8:	mov	r1, r7
    61ec:	add	r0, r4, #432	; 0x1b0
    61f0:	bl	1108 <poolStoreString>
    61f4:	cmp	r0, #0
    61f8:	str	r0, [r4, #344]	; 0x158
    61fc:	beq	5830 <doProlog+0x754>
    6200:	ldr	r3, [r4, #444]	; 0x1bc
    6204:	str	r3, [r4, #448]	; 0x1c0
    6208:	b	5368 <doProlog+0x28c>
    620c:	ldr	r8, [r4, #92]	; 0x5c
    6210:	cmp	r8, #0
    6214:	beq	5348 <doProlog+0x26c>
    6218:	add	r1, r4, #328	; 0x148
    621c:	mov	ip, #1
    6220:	ldm	r1, {r1, r2, r3}
    6224:	ldr	r0, [r4, #4]
    6228:	str	ip, [sp]
    622c:	blx	r8
    6230:	ldr	r1, [r4, #436]	; 0x1b4
    6234:	mov	r3, #0
    6238:	cmp	r1, r3
    623c:	str	r3, [r4, #328]	; 0x148
    6240:	ldr	r3, [r4, #432]	; 0x1b0
    6244:	beq	5c50 <doProlog+0xb74>
    6248:	cmp	r3, #0
    624c:	bne	6258 <doProlog+0x117c>
    6250:	b	5c54 <doProlog+0xb78>
    6254:	mov	r3, r2
    6258:	ldr	r2, [r3]
    625c:	str	r1, [r3]
    6260:	cmp	r2, #0
    6264:	mov	r1, r3
    6268:	bne	6254 <doProlog+0x1178>
    626c:	b	5c50 <doProlog+0xb74>
    6270:	mov	r9, #0
    6274:	strb	r9, [r4, #505]	; 0x1f9
    6278:	mov	r3, #36	; 0x24
    627c:	mov	r2, r5
    6280:	add	r1, sl, #132	; 0x84
    6284:	mov	r0, r4
    6288:	bl	9d8 <lookup>
    628c:	cmp	r0, r9
    6290:	str	r0, [r4, #324]	; 0x144
    6294:	beq	5830 <doProlog+0x754>
    6298:	mov	r3, #1
    629c:	strb	r3, [sl, #129]	; 0x81
    62a0:	ldr	r3, [r4, #92]	; 0x5c
    62a4:	cmp	r3, r9
    62a8:	beq	5608 <doProlog+0x52c>
    62ac:	ldr	r8, [r7, #56]	; 0x38
    62b0:	mov	r3, fp
    62b4:	ldr	r2, [sp, #100]	; 0x64
    62b8:	mov	r1, r6
    62bc:	mov	r0, r7
    62c0:	blx	r8
    62c4:	cmp	r0, r9
    62c8:	beq	6bc8 <doProlog+0x1aec>
    62cc:	ldr	r3, [r7, #68]	; 0x44
    62d0:	ldr	r1, [sp, #100]	; 0x64
    62d4:	add	r2, r6, r3
    62d8:	add	r0, r4, #432	; 0x1b0
    62dc:	sub	r3, r1, r3
    62e0:	mov	r1, r7
    62e4:	bl	1108 <poolStoreString>
    62e8:	subs	r8, r0, #0
    62ec:	beq	5830 <doProlog+0x754>
    62f0:	bl	638 <normalizePublicId>
    62f4:	ldr	r3, [r4, #444]	; 0x1bc
    62f8:	str	r8, [r4, #336]	; 0x150
    62fc:	str	r3, [r4, #448]	; 0x1c0
    6300:	ldrb	r3, [sl, #128]	; 0x80
    6304:	cmp	r3, #0
    6308:	beq	5368 <doProlog+0x28c>
    630c:	ldr	r3, [r4, #324]	; 0x144
    6310:	cmp	r3, #0
    6314:	bne	5644 <doProlog+0x568>
    6318:	b	5368 <doProlog+0x28c>
    631c:	mov	r9, #0
    6320:	mov	r3, #1
    6324:	strb	r9, [r4, #505]	; 0x1f9
    6328:	strb	r3, [sl, #129]	; 0x81
    632c:	ldr	r2, [r4, #92]	; 0x5c
    6330:	cmp	r2, r9
    6334:	beq	67e4 <doProlog+0x1708>
    6338:	ldr	r3, [r7, #68]	; 0x44
    633c:	ldr	r1, [sp, #100]	; 0x64
    6340:	add	r2, r6, r3
    6344:	add	r0, r4, #432	; 0x1b0
    6348:	sub	r3, r1, r3
    634c:	mov	r1, r7
    6350:	bl	1108 <poolStoreString>
    6354:	cmp	r0, r9
    6358:	str	r0, [r4, #332]	; 0x14c
    635c:	beq	5830 <doProlog+0x754>
    6360:	ldr	r3, [r4, #444]	; 0x1bc
    6364:	str	r3, [r4, #448]	; 0x1c0
    6368:	ldrb	r3, [sl, #130]	; 0x82
    636c:	cmp	r3, #0
    6370:	bne	639c <doProlog+0x12c0>
    6374:	ldr	r3, [r4, #508]	; 0x1fc
    6378:	cmp	r3, #0
    637c:	bne	639c <doProlog+0x12c0>
    6380:	ldr	r3, [r4, #116]	; 0x74
    6384:	cmp	r3, #0
    6388:	beq	639c <doProlog+0x12c0>
    638c:	ldr	r0, [r4, #4]
    6390:	blx	r3
    6394:	cmp	r0, #0
    6398:	beq	64bc <doProlog+0x13e0>
    639c:	ldr	r8, [r4, #324]	; 0x144
    63a0:	cmp	r8, #0
    63a4:	beq	6a98 <doProlog+0x19bc>
    63a8:	ldrb	r3, [sl, #128]	; 0x80
    63ac:	cmp	r3, #0
    63b0:	beq	5688 <doProlog+0x5ac>
    63b4:	ldr	r8, [r4, #324]	; 0x144
    63b8:	b	5a08 <doProlog+0x92c>
    63bc:	ldr	r3, [r4, #92]	; 0x5c
    63c0:	cmp	r3, #0
    63c4:	streq	r3, [r4, #332]	; 0x14c
    63c8:	beq	5348 <doProlog+0x26c>
    63cc:	mov	r2, r6
    63d0:	ldr	r3, [sp, #100]	; 0x64
    63d4:	mov	r1, r7
    63d8:	add	r0, r4, #432	; 0x1b0
    63dc:	bl	1108 <poolStoreString>
    63e0:	cmp	r0, #0
    63e4:	str	r0, [r4, #328]	; 0x148
    63e8:	beq	5830 <doProlog+0x754>
    63ec:	ldr	r2, [r4, #444]	; 0x1bc
    63f0:	mov	r3, #0
    63f4:	str	r2, [r4, #448]	; 0x1c0
    63f8:	str	r3, [r4, #336]	; 0x150
    63fc:	str	r3, [r4, #332]	; 0x14c
    6400:	b	5368 <doProlog+0x28c>
    6404:	ldr	r3, [r4, #348]	; 0x15c
    6408:	cmp	r3, #0
    640c:	beq	67a8 <doProlog+0x16cc>
    6410:	ldr	r8, [r4, #104]	; 0x68
    6414:	cmp	r8, #0
    6418:	beq	67a8 <doProlog+0x16cc>
    641c:	ldr	r3, [sp, #28]
    6420:	mov	r9, #0
    6424:	str	r6, [r3]
    6428:	ldr	r3, [r4, #348]	; 0x15c
    642c:	ldr	r2, [r4, #368]	; 0x170
    6430:	ldr	r1, [r4, #344]	; 0x158
    6434:	ldr	r0, [r4, #4]
    6438:	str	r3, [sp]
    643c:	mov	r3, #0
    6440:	blx	r8
    6444:	ldr	r1, [r4, #436]	; 0x1b4
    6448:	ldr	r3, [r4, #432]	; 0x1b0
    644c:	cmp	r1, #0
    6450:	beq	61ac <doProlog+0x10d0>
    6454:	cmp	r3, #0
    6458:	bne	6464 <doProlog+0x1388>
    645c:	b	61b0 <doProlog+0x10d4>
    6460:	mov	r3, r2
    6464:	ldr	r2, [r3]
    6468:	str	r1, [r3]
    646c:	cmp	r2, #0
    6470:	mov	r1, r3
    6474:	bne	6460 <doProlog+0x1384>
    6478:	b	61ac <doProlog+0x10d0>
    647c:	mov	r3, #1
    6480:	strb	r3, [sl, #129]	; 0x81
    6484:	ldr	r3, [r4, #508]	; 0x1fc
    6488:	cmp	r3, #0
    648c:	bne	6824 <doProlog+0x1748>
    6490:	ldrb	r3, [sl, #130]	; 0x82
    6494:	cmp	r3, #0
    6498:	strb	r3, [sl, #128]	; 0x80
    649c:	bne	5348 <doProlog+0x26c>
    64a0:	ldr	r3, [r4, #116]	; 0x74
    64a4:	cmp	r3, #0
    64a8:	beq	5348 <doProlog+0x26c>
    64ac:	ldr	r0, [r4, #4]
    64b0:	blx	r3
    64b4:	cmp	r0, #0
    64b8:	bne	5348 <doProlog+0x26c>
    64bc:	mov	r8, #22
    64c0:	b	538c <doProlog+0x2b0>
    64c4:	ldr	r0, [r4, #480]	; 0x1e0
    64c8:	ldr	r1, [r4, #268]	; 0x10c
    64cc:	ldrb	r2, [r0, r1]
    64d0:	cmp	r2, #44	; 0x2c
    64d4:	beq	66e8 <doProlog+0x160c>
    64d8:	ldrb	ip, [sl, #160]	; 0xa0
    64dc:	adds	r3, ip, #0
    64e0:	movne	r3, #1
    64e4:	cmp	r2, #0
    64e8:	movne	r3, #0
    64ec:	cmp	r3, #0
    64f0:	beq	6738 <doProlog+0x165c>
    64f4:	ldr	r3, [sl, #180]	; 0xb4
    64f8:	ldr	r2, [sl, #184]	; 0xb8
    64fc:	sub	r3, r3, #-1073741823	; 0xc0000001
    6500:	ldr	ip, [sl, #164]	; 0xa4
    6504:	ldr	r3, [r2, r3, lsl #2]
    6508:	rsb	r3, r3, r3, lsl #3
    650c:	ldr	r2, [ip, r3, lsl #2]
    6510:	cmp	r2, #3
    6514:	beq	6738 <doProlog+0x165c>
    6518:	mov	lr, #5
    651c:	mov	r2, #124	; 0x7c
    6520:	ldr	r9, [r4, #136]	; 0x88
    6524:	str	lr, [ip, r3, lsl #2]
    6528:	clz	r9, r9
    652c:	strb	r2, [r0, r1]
    6530:	lsr	r9, r9, lr
    6534:	b	5688 <doProlog+0x5ac>
    6538:	mov	r1, #3
    653c:	b	5744 <doProlog+0x668>
    6540:	ldr	r2, [pc, #-1104]	; 60f8 <doProlog+0x101c>
    6544:	mov	r3, #1
    6548:	str	r2, [r4, #340]	; 0x154
    654c:	strb	r3, [r4, #360]	; 0x168
    6550:	b	55b4 <doProlog+0x4d8>
    6554:	ldr	r3, [r4, #88]	; 0x58
    6558:	cmp	r3, #0
    655c:	beq	6574 <doProlog+0x1498>
    6560:	mov	r2, r6
    6564:	ldr	r3, [sp, #100]	; 0x64
    6568:	mov	r1, r7
    656c:	mov	r0, r4
    6570:	bl	90 <reportDefault>
    6574:	ldr	r3, [sp, #32]
    6578:	add	r2, sp, #100	; 0x64
    657c:	str	r3, [sp, #4]
    6580:	ldr	r3, [sp, #104]	; 0x68
    6584:	mov	r1, r7
    6588:	str	r3, [sp]
    658c:	mov	r0, r4
    6590:	ldr	r3, [sp, #36]	; 0x24
    6594:	bl	464 <doIgnoreSection>
    6598:	subs	r8, r0, #0
    659c:	bne	538c <doProlog+0x2b0>
    65a0:	ldr	r3, [sp, #100]	; 0x64
    65a4:	cmp	r3, #0
    65a8:	bne	5368 <doProlog+0x28c>
    65ac:	ldr	r3, [pc, #-1208]	; 60fc <doProlog+0x1020>
    65b0:	str	r3, [r4, #288]	; 0x120
    65b4:	b	538c <doProlog+0x2b0>
    65b8:	mov	r2, r6
    65bc:	ldr	r3, [sp, #100]	; 0x64
    65c0:	mov	r1, #1
    65c4:	mov	r0, r4
    65c8:	bl	1160 <processXmlDecl>
    65cc:	subs	r8, r0, #0
    65d0:	beq	5b28 <doProlog+0xa4c>
    65d4:	b	538c <doProlog+0x2b0>
    65d8:	ldrb	r3, [sl, #128]	; 0x80
    65dc:	cmp	r3, #0
    65e0:	beq	5348 <doProlog+0x26c>
    65e4:	ldr	r8, [r4, #324]	; 0x144
    65e8:	cmp	r8, #0
    65ec:	beq	5348 <doProlog+0x26c>
    65f0:	ldr	r3, [sp, #100]	; 0x64
    65f4:	mov	r2, r6
    65f8:	mov	r1, r7
    65fc:	add	r0, sl, #80	; 0x50
    6600:	bl	1108 <poolStoreString>
    6604:	ldr	ip, [r4, #324]	; 0x144
    6608:	str	r0, [r8, #28]
    660c:	ldr	r3, [ip, #28]
    6610:	cmp	r3, #0
    6614:	beq	5830 <doProlog+0x754>
    6618:	ldr	r8, [r4, #100]	; 0x64
    661c:	ldr	r3, [sl, #92]	; 0x5c
    6620:	cmp	r8, #0
    6624:	str	r3, [sl, #96]	; 0x60
    6628:	beq	6984 <doProlog+0x18a8>
    662c:	ldr	r3, [sp, #28]
    6630:	str	r6, [r3]
    6634:	ldr	r0, [ip, #28]
    6638:	ldr	r3, [ip, #16]
    663c:	ldr	r2, [ip, #20]
    6640:	ldr	r1, [ip]
    6644:	str	r0, [sp, #4]
    6648:	ldr	ip, [ip, #24]
    664c:	ldr	r0, [r4, #4]
    6650:	str	ip, [sp]
    6654:	blx	r8
    6658:	b	5368 <doProlog+0x28c>
    665c:	ldr	r3, [pc, #-1380]	; 6100 <doProlog+0x1024>
    6660:	str	r3, [r4, #340]	; 0x154
    6664:	b	55b4 <doProlog+0x4d8>
    6668:	ldrb	r3, [sl, #160]	; 0xa0
    666c:	cmp	r3, #0
    6670:	movne	r9, #0
    6674:	ldrne	r3, [sp, #100]	; 0x64
    6678:	bne	56b0 <doProlog+0x5d4>
    667c:	b	5348 <doProlog+0x26c>
    6680:	ldrb	r3, [sl, #160]	; 0xa0
    6684:	cmp	r3, #0
    6688:	beq	5348 <doProlog+0x26c>
    668c:	mov	r9, #1
    6690:	b	56a4 <doProlog+0x5c8>
    6694:	mov	r9, #2
    6698:	b	5698 <doProlog+0x5bc>
    669c:	ldr	r3, [r4, #104]	; 0x68
    66a0:	cmp	r3, #0
    66a4:	bne	5368 <doProlog+0x28c>
    66a8:	b	5348 <doProlog+0x26c>
    66ac:	ldr	r3, [pc, #-1456]	; 6104 <doProlog+0x1028>
    66b0:	str	r3, [r4, #340]	; 0x154
    66b4:	b	55b4 <doProlog+0x4d8>
    66b8:	ldr	r3, [pc, #-1464]	; 6108 <doProlog+0x102c>
    66bc:	str	r3, [r4, #340]	; 0x154
    66c0:	b	55b4 <doProlog+0x4d8>
    66c4:	cmp	r8, #14
    66c8:	beq	5368 <doProlog+0x28c>
    66cc:	b	5348 <doProlog+0x26c>
    66d0:	cmp	r8, #12
    66d4:	moveq	r8, #17
    66d8:	beq	538c <doProlog+0x2b0>
    66dc:	cmp	r8, #28
    66e0:	moveq	r8, #10
    66e4:	beq	538c <doProlog+0x2b0>
    66e8:	mov	r8, #2
    66ec:	b	538c <doProlog+0x2b0>
    66f0:	ldr	r3, [sp, #104]	; 0x68
    66f4:	str	r6, [r3]
    66f8:	b	538c <doProlog+0x2b0>
    66fc:	ldrb	r3, [r4, #504]	; 0x1f8
    6700:	cmp	r3, #0
    6704:	moveq	r8, #3
    6708:	beq	538c <doProlog+0x2b0>
    670c:	b	5410 <doProlog+0x334>
    6710:	strb	r5, [sl, #129]	; 0x81
    6714:	ldr	r3, [pc, #-1552]	; 610c <doProlog+0x1030>
    6718:	ldr	r2, [sp, #36]	; 0x24
    671c:	str	r3, [r4, #288]	; 0x120
    6720:	mov	r1, r6
    6724:	mov	r0, r4
    6728:	ldr	r3, [sp, #104]	; 0x68
    672c:	bl	4c04 <contentProcessor>
    6730:	mov	r8, r0
    6734:	b	538c <doProlog+0x2b0>
    6738:	mov	r3, #124	; 0x7c
    673c:	strb	r3, [r0, r1]
    6740:	b	5348 <doProlog+0x26c>
    6744:	cmp	r2, #0
    6748:	beq	6934 <doProlog+0x1858>
    674c:	lsl	r1, r2, #1
    6750:	ldr	r0, [r4, #480]	; 0x1e0
    6754:	str	r1, [r4, #484]	; 0x1e4
    6758:	ldr	r3, [r4, #16]
    675c:	blx	r3
    6760:	subs	r2, r0, #0
    6764:	beq	5830 <doProlog+0x754>
    6768:	ldr	r0, [sl, #184]	; 0xb8
    676c:	str	r2, [r4, #480]	; 0x1e0
    6770:	cmp	r0, #0
    6774:	beq	6798 <doProlog+0x16bc>
    6778:	ldr	r1, [r4, #484]	; 0x1e4
    677c:	ldr	r3, [r4, #16]
    6780:	lsl	r1, r1, #2
    6784:	blx	r3
    6788:	cmp	r0, #0
    678c:	beq	5830 <doProlog+0x754>
    6790:	ldr	r2, [r4, #480]	; 0x1e0
    6794:	str	r0, [sl, #184]	; 0xb8
    6798:	ldr	r3, [r4, #268]	; 0x10c
    679c:	b	5854 <doProlog+0x778>
    67a0:	mov	r9, #1
    67a4:	b	6178 <doProlog+0x109c>
    67a8:	mov	r9, #1
    67ac:	b	6444 <doProlog+0x1368>
    67b0:	ldr	r3, [r4, #448]	; 0x1c0
    67b4:	cmp	r3, #0
    67b8:	beq	5830 <doProlog+0x754>
    67bc:	mov	r2, r6
    67c0:	mov	r0, r8
    67c4:	ldr	r3, [sp, #100]	; 0x64
    67c8:	mov	r1, r7
    67cc:	bl	107c <poolAppend>
    67d0:	cmp	r0, #0
    67d4:	beq	5830 <doProlog+0x754>
    67d8:	ldr	r3, [r4, #448]	; 0x1c0
    67dc:	str	r3, [r4, #340]	; 0x154
    67e0:	b	5368 <doProlog+0x28c>
    67e4:	mov	r9, r3
    67e8:	str	r5, [r4, #332]	; 0x14c
    67ec:	b	6368 <doProlog+0x128c>
    67f0:	ldr	r3, [sl, #180]	; 0xb4
    67f4:	ldr	r2, [sl, #184]	; 0xb8
    67f8:	sub	r3, r3, #1
    67fc:	str	r3, [sl, #180]	; 0xb4
    6800:	ldr	r2, [r2, r3, lsl #2]
    6804:	ldr	r0, [sl, #164]	; 0xa4
    6808:	cmp	r3, #0
    680c:	rsb	r2, r2, r2, lsl #3
    6810:	add	r2, r0, r2, lsl #2
    6814:	str	r1, [r2, #4]
    6818:	strbeq	r3, [sl, #160]	; 0xa0
    681c:	streq	r3, [sl, #168]	; 0xa8
    6820:	b	5348 <doProlog+0x26c>
    6824:	ldr	r3, [r7, #68]	; 0x44
    6828:	ldr	r1, [sp, #100]	; 0x64
    682c:	add	r2, r6, r3
    6830:	add	r0, sl, #80	; 0x50
    6834:	sub	r3, r1, r3
    6838:	mov	r1, r7
    683c:	bl	1108 <poolStoreString>
    6840:	subs	r3, r0, #0
    6844:	mov	r2, r3
    6848:	str	r3, [sp, #40]	; 0x28
    684c:	beq	5830 <doProlog+0x754>
    6850:	mov	r3, #0
    6854:	add	r1, sl, #132	; 0x84
    6858:	mov	r0, r4
    685c:	bl	9d8 <lookup>
    6860:	ldr	r2, [r4, #280]	; 0x118
    6864:	ldr	r3, [sl, #96]	; 0x60
    6868:	cmp	r2, #0
    686c:	str	r3, [sl, #92]	; 0x5c
    6870:	mov	r8, r0
    6874:	beq	6890 <doProlog+0x17b4>
    6878:	ldrb	r3, [sl, #130]	; 0x82
    687c:	cmp	r3, #0
    6880:	beq	6ac0 <doProlog+0x19e4>
    6884:	ldr	r3, [r4, #308]	; 0x134
    6888:	cmp	r3, #0
    688c:	beq	6acc <doProlog+0x19f0>
    6890:	cmp	r8, #0
    6894:	beq	6c24 <doProlog+0x1b48>
    6898:	ldrb	r3, [r8, #32]
    689c:	cmp	r3, #0
    68a0:	bne	6cc8 <doProlog+0x1bec>
    68a4:	ldr	r3, [r8, #4]
    68a8:	cmp	r3, #0
    68ac:	str	r3, [sp, #40]	; 0x28
    68b0:	beq	6a0c <doProlog+0x1930>
    68b4:	mov	r1, r8
    68b8:	sub	r2, r9, #60	; 0x3c
    68bc:	mov	r0, r4
    68c0:	clz	r2, r2
    68c4:	lsr	r2, r2, #5
    68c8:	bl	4f7c <processInternalEntity>
    68cc:	subs	r8, r0, #0
    68d0:	beq	5368 <doProlog+0x28c>
    68d4:	b	538c <doProlog+0x2b0>
    68d8:	ldr	r3, [sp, #100]	; 0x64
    68dc:	mov	r2, r6
    68e0:	mov	r1, r7
    68e4:	add	r0, sl, #80	; 0x50
    68e8:	bl	1108 <poolStoreString>
    68ec:	subs	r8, r0, #0
    68f0:	beq	5830 <doProlog+0x754>
    68f4:	mov	r3, #36	; 0x24
    68f8:	mov	r2, r8
    68fc:	add	r1, sl, #132	; 0x84
    6900:	mov	r0, r4
    6904:	bl	9d8 <lookup>
    6908:	cmp	r0, #0
    690c:	str	r0, [r4, #324]	; 0x144
    6910:	beq	5830 <doProlog+0x754>
    6914:	ldr	r3, [r0]
    6918:	cmp	r8, r3
    691c:	beq	6bd0 <doProlog+0x1af4>
    6920:	ldr	r2, [sl, #96]	; 0x60
    6924:	mov	r3, #0
    6928:	str	r2, [sl, #92]	; 0x5c
    692c:	str	r3, [r4, #324]	; 0x144
    6930:	b	5348 <doProlog+0x26c>
    6934:	mov	r0, #32
    6938:	str	r0, [r4, #484]	; 0x1e4
    693c:	ldr	r3, [r4, #12]
    6940:	blx	r3
    6944:	cmp	r0, #0
    6948:	str	r0, [r4, #480]	; 0x1e0
    694c:	beq	5830 <doProlog+0x754>
    6950:	ldr	r3, [r4, #268]	; 0x10c
    6954:	mov	r2, r0
    6958:	b	5854 <doProlog+0x778>
    695c:	ldr	r3, [r4, #332]	; 0x14c
    6960:	cmp	r3, #0
    6964:	strbeq	r8, [sl, #129]	; 0x81
    6968:	b	5fac <doProlog+0xed0>
    696c:	ldrb	r3, [r4, #505]	; 0x1f9
    6970:	cmp	r3, #0
    6974:	beq	5fb4 <doProlog+0xed8>
    6978:	b	5efc <doProlog+0xe20>
    697c:	strb	r3, [sl, #160]	; 0xa0
    6980:	b	5348 <doProlog+0x26c>
    6984:	ldr	r9, [r4, #144]	; 0x90
    6988:	cmp	r9, #0
    698c:	beq	5348 <doProlog+0x26c>
    6990:	ldr	r3, [sp, #28]
    6994:	mov	r2, r8
    6998:	str	r6, [r3]
    699c:	ldr	r3, [ip, #28]
    69a0:	ldr	r1, [ip]
    69a4:	str	r3, [sp, #16]
    69a8:	ldr	r3, [ip, #24]
    69ac:	str	r3, [sp, #12]
    69b0:	ldr	r3, [ip, #16]
    69b4:	ldr	r0, [r4, #4]
    69b8:	str	r3, [sp, #8]
    69bc:	ldr	r3, [ip, #20]
    69c0:	str	r8, [sp]
    69c4:	str	r3, [sp, #4]
    69c8:	mov	r3, r8
    69cc:	blx	r9
    69d0:	b	5368 <doProlog+0x28c>
    69d4:	ldrb	r3, [sl, #131]	; 0x83
    69d8:	cmp	r3, #0
    69dc:	beq	6710 <doProlog+0x1634>
    69e0:	ldrb	r3, [sl, #130]	; 0x82
    69e4:	cmp	r3, #0
    69e8:	bne	6714 <doProlog+0x1638>
    69ec:	ldr	r3, [r4, #116]	; 0x74
    69f0:	cmp	r3, #0
    69f4:	beq	6714 <doProlog+0x1638>
    69f8:	ldr	r0, [r4, #4]
    69fc:	blx	r3
    6a00:	cmp	r0, #0
    6a04:	beq	64bc <doProlog+0x13e0>
    6a08:	b	6714 <doProlog+0x1638>
    6a0c:	ldr	r9, [r4, #120]	; 0x78
    6a10:	cmp	r9, #0
    6a14:	beq	6c54 <doProlog+0x1b78>
    6a18:	ldr	r1, [sp, #40]	; 0x28
    6a1c:	mov	r2, #1
    6a20:	strb	r1, [sl, #131]	; 0x83
    6a24:	ldr	r3, [r8, #24]
    6a28:	strb	r2, [r8, #32]
    6a2c:	str	r3, [sp]
    6a30:	ldr	r0, [r4, #124]	; 0x7c
    6a34:	ldr	r3, [r8, #16]
    6a38:	ldr	r2, [r8, #20]
    6a3c:	blx	r9
    6a40:	cmp	r0, #0
    6a44:	beq	6d08 <doProlog+0x1c2c>
    6a48:	ldrb	r3, [sp, #40]	; 0x28
    6a4c:	strb	r3, [r8, #32]
    6a50:	ldrb	r3, [sl, #131]	; 0x83
    6a54:	cmp	r3, #0
    6a58:	ldrb	r3, [sl, #130]	; 0x82
    6a5c:	strbeq	r3, [sl, #128]	; 0x80
    6a60:	beq	5368 <doProlog+0x28c>
    6a64:	cmp	r3, #0
    6a68:	bne	5368 <doProlog+0x28c>
    6a6c:	ldr	r3, [r4, #116]	; 0x74
    6a70:	cmp	r3, #0
    6a74:	beq	5368 <doProlog+0x28c>
    6a78:	ldr	r0, [r4, #4]
    6a7c:	blx	r3
    6a80:	cmp	r0, #0
    6a84:	bne	5368 <doProlog+0x28c>
    6a88:	b	64bc <doProlog+0x13e0>
    6a8c:	cmp	r0, #0
    6a90:	beq	5348 <doProlog+0x26c>
    6a94:	b	538c <doProlog+0x2b0>
    6a98:	mov	r3, #36	; 0x24
    6a9c:	mov	r2, r5
    6aa0:	add	r1, sl, #132	; 0x84
    6aa4:	mov	r0, r4
    6aa8:	bl	9d8 <lookup>
    6aac:	cmp	r0, #0
    6ab0:	str	r0, [r4, #324]	; 0x144
    6ab4:	beq	5830 <doProlog+0x754>
    6ab8:	str	r8, [r0, #24]
    6abc:	b	63a8 <doProlog+0x12cc>
    6ac0:	ldrb	r3, [sl, #129]	; 0x81
    6ac4:	cmp	r3, #0
    6ac8:	bne	6890 <doProlog+0x17b4>
    6acc:	cmp	r8, #0
    6ad0:	beq	6d00 <doProlog+0x1c24>
    6ad4:	ldrb	r3, [r8, #34]	; 0x22
    6ad8:	cmp	r3, #0
    6adc:	bne	6898 <doProlog+0x17bc>
    6ae0:	mov	r8, #24
    6ae4:	b	538c <doProlog+0x2b0>
    6ae8:	ldrb	r3, [r3, #1]
    6aec:	cmp	r3, #79	; 0x4f
    6af0:	bne	5be0 <doProlog+0xb04>
    6af4:	ldr	r3, [r4, #444]	; 0x1bc
    6af8:	ldr	r2, [r4, #440]	; 0x1b8
    6afc:	cmp	r3, r2
    6b00:	beq	6ce8 <doProlog+0x1c0c>
    6b04:	add	r1, r3, #1
    6b08:	mov	r2, #41	; 0x29
    6b0c:	str	r1, [r4, #444]	; 0x1bc
    6b10:	strb	r2, [r3]
    6b14:	ldr	r3, [r4, #444]	; 0x1bc
    6b18:	ldr	r2, [r4, #440]	; 0x1b8
    6b1c:	cmp	r3, r2
    6b20:	beq	6cd0 <doProlog+0x1bf4>
    6b24:	add	r1, r3, #1
    6b28:	mov	r2, #0
    6b2c:	str	r1, [r4, #444]	; 0x1bc
    6b30:	strb	r2, [r3]
    6b34:	ldr	r3, [r4, #448]	; 0x1c0
    6b38:	ldr	r2, [r4, #444]	; 0x1bc
    6b3c:	ldr	r8, [r4, #140]	; 0x8c
    6b40:	str	r2, [r4, #448]	; 0x1c0
    6b44:	str	r3, [r4, #340]	; 0x154
    6b48:	b	5be0 <doProlog+0xb04>
    6b4c:	ldrb	r3, [r3, #1]
    6b50:	cmp	r3, #79	; 0x4f
    6b54:	bne	5da8 <doProlog+0xccc>
    6b58:	ldr	r3, [r4, #444]	; 0x1bc
    6b5c:	ldr	r2, [r4, #440]	; 0x1b8
    6b60:	cmp	r3, r2
    6b64:	beq	6cb0 <doProlog+0x1bd4>
    6b68:	add	r1, r3, #1
    6b6c:	mov	r2, #41	; 0x29
    6b70:	str	r1, [r4, #444]	; 0x1bc
    6b74:	strb	r2, [r3]
    6b78:	ldr	r3, [r4, #444]	; 0x1bc
    6b7c:	ldr	r2, [r4, #440]	; 0x1b8
    6b80:	cmp	r3, r2
    6b84:	beq	6c98 <doProlog+0x1bbc>
    6b88:	add	r1, r3, #1
    6b8c:	mov	r2, #0
    6b90:	str	r1, [r4, #444]	; 0x1bc
    6b94:	strb	r2, [r3]
    6b98:	ldr	r3, [r4, #448]	; 0x1c0
    6b9c:	ldr	r2, [r4, #444]	; 0x1bc
    6ba0:	ldr	r8, [r4, #140]	; 0x8c
    6ba4:	str	r2, [r4, #448]	; 0x1c0
    6ba8:	str	r3, [r4, #340]	; 0x154
    6bac:	b	5da8 <doProlog+0xccc>
    6bb0:	ldr	r3, [pc, #-2728]	; 6110 <doProlog+0x1034>
    6bb4:	cmp	r9, #32
    6bb8:	sub	r2, r3, #12
    6bbc:	moveq	r3, r2
    6bc0:	mov	r9, r3
    6bc4:	b	5c94 <doProlog+0xbb8>
    6bc8:	mov	r8, #32
    6bcc:	b	538c <doProlog+0x2b0>
    6bd0:	ldr	r2, [sl, #92]	; 0x5c
    6bd4:	mov	r3, #1
    6bd8:	str	r2, [sl, #96]	; 0x60
    6bdc:	strb	r3, [r0, #33]	; 0x21
    6be0:	ldr	r2, [r4, #492]	; 0x1ec
    6be4:	mov	r3, #0
    6be8:	cmp	r2, r3
    6bec:	str	r3, [r0, #24]
    6bf0:	ldreq	r3, [r4, #308]	; 0x134
    6bf4:	clzeq	r3, r3
    6bf8:	lsreq	r3, r3, #5
    6bfc:	strb	r3, [r0, #34]	; 0x22
    6c00:	ldr	r3, [r4, #144]	; 0x90
    6c04:	cmp	r3, #0
    6c08:	bne	5368 <doProlog+0x28c>
    6c0c:	b	5348 <doProlog+0x26c>
    6c10:	ldr	r3, [sl, #120]	; 0x78
    6c14:	cmp	r0, #0
    6c18:	str	r3, [sl, #116]	; 0x74
    6c1c:	beq	5348 <doProlog+0x26c>
    6c20:	b	538c <doProlog+0x2b0>
    6c24:	ldrb	r3, [sl, #130]	; 0x82
    6c28:	cmp	r9, #60	; 0x3c
    6c2c:	strb	r3, [sl, #128]	; 0x80
    6c30:	bne	5348 <doProlog+0x26c>
    6c34:	ldr	r3, [r4, #128]	; 0x80
    6c38:	cmp	r3, #0
    6c3c:	beq	5348 <doProlog+0x26c>
    6c40:	ldr	r1, [sp, #40]	; 0x28
    6c44:	mov	r2, #1
    6c48:	ldr	r0, [r4, #4]
    6c4c:	blx	r3
    6c50:	b	5368 <doProlog+0x28c>
    6c54:	ldrb	r3, [sl, #130]	; 0x82
    6c58:	strb	r3, [sl, #128]	; 0x80
    6c5c:	b	5348 <doProlog+0x26c>
    6c60:	ldr	r3, [sl, #92]	; 0x5c
    6c64:	str	r3, [sl, #96]	; 0x60
    6c68:	strb	r9, [r0, #33]	; 0x21
    6c6c:	ldr	r3, [r4, #492]	; 0x1ec
    6c70:	str	r9, [r0, #24]
    6c74:	cmp	r3, #0
    6c78:	ldreq	r9, [r4, #308]	; 0x134
    6c7c:	clzeq	r9, r9
    6c80:	lsreq	r9, r9, #5
    6c84:	strb	r9, [r0, #34]	; 0x22
    6c88:	ldr	r3, [r4, #144]	; 0x90
    6c8c:	cmp	r3, #0
    6c90:	bne	5368 <doProlog+0x28c>
    6c94:	b	5348 <doProlog+0x26c>
    6c98:	add	r0, r4, #432	; 0x1b0
    6c9c:	bl	ec8 <poolGrow>
    6ca0:	cmp	r0, #0
    6ca4:	beq	5830 <doProlog+0x754>
    6ca8:	ldr	r3, [r4, #444]	; 0x1bc
    6cac:	b	6b88 <doProlog+0x1aac>
    6cb0:	add	r0, r4, #432	; 0x1b0
    6cb4:	bl	ec8 <poolGrow>
    6cb8:	cmp	r0, #0
    6cbc:	beq	5830 <doProlog+0x754>
    6cc0:	ldr	r3, [r4, #444]	; 0x1bc
    6cc4:	b	6b68 <doProlog+0x1a8c>
    6cc8:	mov	r8, #12
    6ccc:	b	538c <doProlog+0x2b0>
    6cd0:	add	r0, r4, #432	; 0x1b0
    6cd4:	bl	ec8 <poolGrow>
    6cd8:	cmp	r0, #0
    6cdc:	beq	5830 <doProlog+0x754>
    6ce0:	ldr	r3, [r4, #444]	; 0x1bc
    6ce4:	b	6b24 <doProlog+0x1a48>
    6ce8:	add	r0, r4, #432	; 0x1b0
    6cec:	bl	ec8 <poolGrow>
    6cf0:	cmp	r0, #0
    6cf4:	beq	5830 <doProlog+0x754>
    6cf8:	ldr	r3, [r4, #444]	; 0x1bc
    6cfc:	b	6b04 <doProlog+0x1a28>
    6d00:	mov	r8, #11
    6d04:	b	538c <doProlog+0x2b0>
    6d08:	strb	r0, [r8, #32]
    6d0c:	b	5b04 <doProlog+0xa28>

00006d10 <prologProcessor>:
    6d10:	push	{r4, r5, r6, r7, r8, lr}
    6d14:	mov	r4, r0
    6d18:	sub	sp, sp, #24
    6d1c:	ldr	r0, [r0, #152]	; 0x98
    6d20:	add	ip, sp, #24
    6d24:	mov	r6, r3
    6d28:	ldr	r8, [r0]
    6d2c:	str	r1, [ip, #-4]!
    6d30:	mov	r3, ip
    6d34:	mov	r5, r1
    6d38:	mov	r7, r2
    6d3c:	blx	r8
    6d40:	ldr	lr, [sp, #20]
    6d44:	ldrb	ip, [r4, #500]	; 0x1f4
    6d48:	clz	ip, ip
    6d4c:	lsr	ip, ip, #5
    6d50:	ldr	r1, [r4, #152]	; 0x98
    6d54:	mov	r3, r7
    6d58:	str	r6, [sp, #8]
    6d5c:	mov	r2, r5
    6d60:	str	ip, [sp, #12]
    6d64:	stm	sp, {r0, lr}
    6d68:	mov	r0, r4
    6d6c:	bl	50dc <doProlog>
    6d70:	add	sp, sp, #24
    6d74:	pop	{r4, r5, r6, r7, r8, pc}

00006d78 <prologInitProcessor>:
    6d78:	push	{r4, r5, r6, r7, r8, lr}
    6d7c:	mov	r5, r1
    6d80:	mov	r6, r2
    6d84:	mov	r7, r3
    6d88:	mov	r4, r0
    6d8c:	bl	23ec <initializeEncoding>
    6d90:	cmp	r0, #0
    6d94:	popne	{r4, r5, r6, r7, r8, pc}
    6d98:	ldr	r0, [pc, #24]	; 6db8 <prologInitProcessor+0x40>
    6d9c:	mov	r3, r7
    6da0:	str	r0, [r4, #288]	; 0x120
    6da4:	mov	r2, r6
    6da8:	mov	r1, r5
    6dac:	mov	r0, r4
    6db0:	pop	{r4, r5, r6, r7, r8, lr}
    6db4:	b	6d10 <prologProcessor>
    6db8:	.word	0x00000000

00006dbc <ignoreSectionProcessor>:
    6dbc:	push	{r4, r5, r6, lr}
    6dc0:	sub	sp, sp, #16
    6dc4:	ldr	lr, [r0, #152]	; 0x98
    6dc8:	add	ip, sp, #16
    6dcc:	mov	r6, r3
    6dd0:	ldrb	r3, [r0, #500]	; 0x1f4
    6dd4:	clz	r3, r3
    6dd8:	lsr	r3, r3, #5
    6ddc:	str	r3, [sp, #4]
    6de0:	str	r6, [sp]
    6de4:	mov	r3, r2
    6de8:	str	r1, [ip, #-4]!
    6dec:	mov	r5, r2
    6df0:	mov	r1, lr
    6df4:	mov	r2, ip
    6df8:	mov	r4, r0
    6dfc:	bl	464 <doIgnoreSection>
    6e00:	cmp	r0, #0
    6e04:	bne	6e2c <ignoreSectionProcessor+0x70>
    6e08:	ldr	r1, [sp, #12]
    6e0c:	cmp	r1, #0
    6e10:	beq	6e2c <ignoreSectionProcessor+0x70>
    6e14:	ldr	r0, [pc, #24]	; 6e34 <ignoreSectionProcessor+0x78>
    6e18:	mov	r3, r6
    6e1c:	str	r0, [r4, #288]	; 0x120
    6e20:	mov	r2, r5
    6e24:	mov	r0, r4
    6e28:	bl	6d10 <prologProcessor>
    6e2c:	add	sp, sp, #16
    6e30:	pop	{r4, r5, r6, pc}
    6e34:	.word	0x00000000

00006e38 <externalParEntProcessor>:
    6e38:	push	{r4, r5, r6, r7, r8, r9, lr}
    6e3c:	mov	r4, r0
    6e40:	sub	sp, sp, #28
    6e44:	ldr	r0, [r0, #152]	; 0x98
    6e48:	add	r8, sp, #24
    6e4c:	mov	r7, r3
    6e50:	ldr	r9, [r0]
    6e54:	str	r1, [r8, #-4]!
    6e58:	mov	r3, r8
    6e5c:	mov	r5, r1
    6e60:	mov	r6, r2
    6e64:	blx	r9
    6e68:	cmp	r0, #0
    6e6c:	ble	6ebc <externalParEntProcessor+0x84>
    6e70:	cmp	r0, #14
    6e74:	beq	6f0c <externalParEntProcessor+0xd4>
    6e78:	ldrb	r3, [r4, #500]	; 0x1f4
    6e7c:	clz	r3, r3
    6e80:	lsr	r3, r3, #5
    6e84:	ldr	lr, [pc, #160]	; 6f2c <externalParEntProcessor+0xf4>
    6e88:	ldr	ip, [sp, #20]
    6e8c:	ldr	r1, [r4, #152]	; 0x98
    6e90:	mov	r2, r5
    6e94:	str	r3, [sp, #12]
    6e98:	str	r0, [sp]
    6e9c:	str	r7, [sp, #8]
    6ea0:	mov	r3, r6
    6ea4:	str	lr, [r4, #288]	; 0x120
    6ea8:	mov	r0, r4
    6eac:	str	ip, [sp, #4]
    6eb0:	bl	50dc <doProlog>
    6eb4:	add	sp, sp, #28
    6eb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    6ebc:	ldrb	r3, [r4, #500]	; 0x1f4
    6ec0:	clz	r3, r3
    6ec4:	lsr	r3, r3, #5
    6ec8:	cmp	r0, #0
    6ecc:	moveq	r2, #0
    6ed0:	andne	r2, r3, #1
    6ed4:	cmp	r2, #0
    6ed8:	strne	r5, [r7]
    6edc:	movne	r0, #0
    6ee0:	bne	6eb4 <externalParEntProcessor+0x7c>
    6ee4:	cmn	r0, #1
    6ee8:	moveq	r0, #5
    6eec:	beq	6eb4 <externalParEntProcessor+0x7c>
    6ef0:	cmp	r0, #0
    6ef4:	moveq	r0, #4
    6ef8:	beq	6eb4 <externalParEntProcessor+0x7c>
    6efc:	cmn	r0, #2
    6f00:	bne	6e84 <externalParEntProcessor+0x4c>
    6f04:	mov	r0, #6
    6f08:	b	6eb4 <externalParEntProcessor+0x7c>
    6f0c:	ldr	r0, [r4, #152]	; 0x98
    6f10:	ldr	r5, [sp, #20]
    6f14:	mov	r3, r8
    6f18:	mov	r1, r5
    6f1c:	ldr	r8, [r0]
    6f20:	mov	r2, r6
    6f24:	blx	r8
    6f28:	b	6e78 <externalParEntProcessor+0x40>
    6f2c:	.word	0x00000000

00006f30 <externalParEntInitProcessor>:
    6f30:	push	{r4, r5, r6, r7, r8, lr}
    6f34:	mov	r5, r1
    6f38:	mov	r6, r2
    6f3c:	mov	r7, r3
    6f40:	mov	r4, r0
    6f44:	bl	23ec <initializeEncoding>
    6f48:	cmp	r0, #0
    6f4c:	popne	{r4, r5, r6, r7, r8, pc}
    6f50:	ldr	r3, [r4, #364]	; 0x16c
    6f54:	mov	r2, #1
    6f58:	strb	r2, [r3, #131]	; 0x83
    6f5c:	ldr	r3, [r4, #284]	; 0x11c
    6f60:	cmp	r3, #0
    6f64:	bne	6f88 <externalParEntInitProcessor+0x58>
    6f68:	ldr	r0, [pc, #56]	; 6fa8 <externalParEntInitProcessor+0x78>
    6f6c:	mov	r3, r7
    6f70:	str	r0, [r4, #288]	; 0x120
    6f74:	mov	r2, r6
    6f78:	mov	r1, r5
    6f7c:	mov	r0, r4
    6f80:	pop	{r4, r5, r6, r7, r8, lr}
    6f84:	b	6e38 <externalParEntProcessor>
    6f88:	ldr	r0, [pc, #28]	; 6fac <externalParEntInitProcessor+0x7c>
    6f8c:	mov	r3, r7
    6f90:	str	r0, [r4, #288]	; 0x120
    6f94:	mov	r2, r6
    6f98:	mov	r1, r5
    6f9c:	mov	r0, r4
    6fa0:	pop	{r4, r5, r6, r7, r8, lr}
    6fa4:	b	1f94 <entityValueInitProcessor>
	...

00006fb0 <internalEntityProcessor>:
    6fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6fb4:	sub	sp, sp, #36	; 0x24
    6fb8:	ldr	r7, [r0, #308]	; 0x134
    6fbc:	cmp	r7, #0
    6fc0:	moveq	r0, #23
    6fc4:	beq	709c <internalEntityProcessor+0xec>
    6fc8:	ldr	r5, [r7, #12]
    6fcc:	str	r3, [sp, #20]
    6fd0:	mov	r4, r0
    6fd4:	ldrb	ip, [r5, #33]	; 0x21
    6fd8:	ldr	r6, [r5, #4]
    6fdc:	ldr	r8, [r5, #12]
    6fe0:	ldr	r3, [r5, #8]
    6fe4:	cmp	ip, #0
    6fe8:	add	r8, r6, r8
    6fec:	mov	fp, r2
    6ff0:	mov	r9, r1
    6ff4:	add	r6, r6, r3
    6ff8:	bne	70a4 <internalEntityProcessor+0xf4>
    6ffc:	add	sl, sp, #28
    7000:	ldr	r2, [r0, #236]	; 0xec
    7004:	ldr	r1, [r7, #16]
    7008:	mov	r3, r8
    700c:	stm	sp, {r6, sl, ip}
    7010:	bl	3bb4 <doContent>
    7014:	cmp	r0, #0
    7018:	bne	709c <internalEntityProcessor+0xec>
    701c:	ldr	r3, [sp, #28]
    7020:	cmp	r6, r3
    7024:	beq	7034 <internalEntityProcessor+0x84>
    7028:	ldr	r2, [r4, #496]	; 0x1f0
    702c:	cmp	r2, #3
    7030:	beq	7154 <internalEntityProcessor+0x1a4>
    7034:	mov	r3, #0
    7038:	strb	r3, [r5, #32]
    703c:	ldr	r2, [r7, #8]
    7040:	ldr	r3, [r4, #312]	; 0x138
    7044:	str	r2, [r4, #308]	; 0x134
    7048:	str	r3, [r7, #8]
    704c:	str	r7, [r4, #312]	; 0x138
    7050:	ldrb	r3, [r5, #33]	; 0x21
    7054:	cmp	r3, #0
    7058:	bne	70f8 <internalEntityProcessor+0x148>
    705c:	ldr	r1, [r4, #492]	; 0x1ec
    7060:	ldr	r3, [sp, #20]
    7064:	ldr	ip, [pc, #248]	; 7164 <internalEntityProcessor+0x1b4>
    7068:	ldrb	r0, [r4, #500]	; 0x1f4
    706c:	adds	r1, r1, #0
    7070:	clz	r0, r0
    7074:	lsr	r0, r0, #5
    7078:	ldr	r2, [r4, #152]	; 0x98
    707c:	movne	r1, #1
    7080:	str	r3, [sp, #4]
    7084:	str	r0, [sp, #8]
    7088:	str	fp, [sp]
    708c:	mov	r3, r9
    7090:	str	ip, [r4, #288]	; 0x120
    7094:	mov	r0, r4
    7098:	bl	3bb4 <doContent>
    709c:	add	sp, sp, #36	; 0x24
    70a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    70a4:	ldr	r3, [r0, #236]	; 0xec
    70a8:	add	sl, sp, #28
    70ac:	mov	r0, r3
    70b0:	ldr	r3, [r3]
    70b4:	mov	r2, r6
    70b8:	mov	ip, r3
    70bc:	mov	r1, r8
    70c0:	mov	r3, sl
    70c4:	blx	ip
    70c8:	ldr	ip, [sp, #28]
    70cc:	mov	r3, #0
    70d0:	ldr	r1, [r4, #236]	; 0xec
    70d4:	mov	r2, r8
    70d8:	str	r3, [sp, #12]
    70dc:	str	sl, [sp, #8]
    70e0:	str	ip, [sp, #4]
    70e4:	mov	r3, r6
    70e8:	str	r0, [sp]
    70ec:	mov	r0, r4
    70f0:	bl	50dc <doProlog>
    70f4:	b	7014 <internalEntityProcessor+0x64>
    70f8:	ldr	r0, [r4, #152]	; 0x98
    70fc:	ldr	r2, [pc, #100]	; 7168 <internalEntityProcessor+0x1b8>
    7100:	mov	r3, sl
    7104:	ldr	r5, [r0]
    7108:	mov	r1, r9
    710c:	str	r2, [r4, #288]	; 0x120
    7110:	mov	r2, fp
    7114:	blx	r5
    7118:	ldr	lr, [sp, #28]
    711c:	ldr	r3, [sp, #20]
    7120:	ldrb	ip, [r4, #500]	; 0x1f4
    7124:	clz	ip, ip
    7128:	lsr	ip, ip, #5
    712c:	ldr	r1, [r4, #152]	; 0x98
    7130:	mov	r2, r9
    7134:	str	r3, [sp, #8]
    7138:	str	ip, [sp, #12]
    713c:	mov	r3, fp
    7140:	stm	sp, {r0, lr}
    7144:	mov	r0, r4
    7148:	bl	50dc <doProlog>
    714c:	add	sp, sp, #36	; 0x24
    7150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7154:	ldr	r2, [r5, #4]
    7158:	sub	r3, r3, r2
    715c:	str	r3, [r5, #12]
    7160:	b	709c <internalEntityProcessor+0xec>
	...

0000716c <coda_XML_ParserReset>:
    716c:	push	{r4, r5, r6, r7, r8, lr}
    7170:	ldr	r5, [r0, #492]	; 0x1ec
    7174:	cmp	r5, #0
    7178:	beq	7184 <coda_XML_ParserReset+0x18>
    717c:	mov	r0, #0
    7180:	pop	{r4, r5, r6, r7, r8, pc}
    7184:	ldr	lr, [r0, #372]	; 0x174
    7188:	cmp	lr, #0
    718c:	ldrne	r2, [r0, #376]	; 0x178
    7190:	beq	71e0 <coda_XML_ParserReset+0x74>
    7194:	ldr	r3, [lr, #44]	; 0x2c
    7198:	ldr	r4, [lr]
    719c:	cmp	r3, #0
    71a0:	str	r2, [lr]
    71a4:	ldrne	ip, [r0, #384]	; 0x180
    71a8:	beq	71c8 <coda_XML_ParserReset+0x5c>
    71ac:	ldr	r2, [r3, #4]
    71b0:	str	ip, [r3, #4]
    71b4:	cmp	r2, #0
    71b8:	str	r3, [r0, #384]	; 0x180
    71bc:	mov	ip, r3
    71c0:	mov	r3, r2
    71c4:	bne	71ac <coda_XML_ParserReset+0x40>
    71c8:	cmp	r4, #0
    71cc:	str	r5, [lr, #44]	; 0x2c
    71d0:	mov	r2, lr
    71d4:	str	lr, [r0, #376]	; 0x178
    71d8:	movne	lr, r4
    71dc:	bne	7194 <coda_XML_ParserReset+0x28>
    71e0:	ldr	r3, [r0, #308]	; 0x134
    71e4:	cmp	r3, #0
    71e8:	ldrne	ip, [r0, #312]	; 0x138
    71ec:	bne	7570 <coda_XML_ParserReset+0x404>
    71f0:	ldr	r3, [r0, #380]	; 0x17c
    71f4:	cmp	r3, #0
    71f8:	ldrne	ip, [r0, #384]	; 0x180
    71fc:	beq	721c <coda_XML_ParserReset+0xb0>
    7200:	ldr	r2, [r3, #4]
    7204:	str	ip, [r3, #4]
    7208:	cmp	r2, #0
    720c:	str	r3, [r0, #384]	; 0x180
    7210:	mov	ip, r3
    7214:	mov	r3, r2
    7218:	bne	7200 <coda_XML_ParserReset+0x94>
    721c:	mov	r6, r0
    7220:	ldr	r3, [r0, #20]
    7224:	ldr	r0, [r0, #248]	; 0xf8
    7228:	mov	r4, r1
    722c:	blx	r3
    7230:	ldr	r3, [r6, #260]	; 0x104
    7234:	cmp	r3, #0
    7238:	beq	7244 <coda_XML_ParserReset+0xd8>
    723c:	ldr	r0, [r6, #252]	; 0xfc
    7240:	blx	r3
    7244:	ldr	r1, [r6, #436]	; 0x1b4
    7248:	ldr	r3, [r6, #432]	; 0x1b0
    724c:	cmp	r1, #0
    7250:	beq	7278 <coda_XML_ParserReset+0x10c>
    7254:	cmp	r3, #0
    7258:	bne	7264 <coda_XML_ParserReset+0xf8>
    725c:	b	727c <coda_XML_ParserReset+0x110>
    7260:	mov	r3, r2
    7264:	ldr	r2, [r3]
    7268:	str	r1, [r3]
    726c:	cmp	r2, #0
    7270:	mov	r1, r3
    7274:	bne	7260 <coda_XML_ParserReset+0xf4>
    7278:	str	r3, [r6, #436]	; 0x1b4
    727c:	ldr	r1, [r6, #460]	; 0x1cc
    7280:	mov	r3, #0
    7284:	cmp	r1, r3
    7288:	str	r3, [r6, #432]	; 0x1b0
    728c:	str	r3, [r6, #448]	; 0x1c0
    7290:	str	r3, [r6, #444]	; 0x1bc
    7294:	str	r3, [r6, #440]	; 0x1b8
    7298:	ldr	r3, [r6, #456]	; 0x1c8
    729c:	beq	72c4 <coda_XML_ParserReset+0x158>
    72a0:	cmp	r3, #0
    72a4:	bne	72b0 <coda_XML_ParserReset+0x144>
    72a8:	b	72c8 <coda_XML_ParserReset+0x15c>
    72ac:	mov	r3, r2
    72b0:	ldr	r2, [r3]
    72b4:	str	r1, [r3]
    72b8:	cmp	r2, #0
    72bc:	mov	r1, r3
    72c0:	bne	72ac <coda_XML_ParserReset+0x140>
    72c4:	str	r3, [r6, #460]	; 0x1cc
    72c8:	mov	r3, #0
    72cc:	mov	r1, r4
    72d0:	str	r3, [r6, #456]	; 0x1c8
    72d4:	str	r3, [r6, #472]	; 0x1d8
    72d8:	str	r3, [r6, #468]	; 0x1d4
    72dc:	str	r3, [r6, #464]	; 0x1d0
    72e0:	mov	r0, r6
    72e4:	bl	2154 <parserInit>
    72e8:	ldr	r5, [r6, #364]	; 0x16c
    72ec:	ldr	r7, [r5, #28]
    72f0:	ldr	r4, [r5, #20]
    72f4:	add	r7, r4, r7, lsl #2
    72f8:	cmp	r7, r4
    72fc:	beq	7328 <coda_XML_ParserReset+0x1bc>
    7300:	ldr	r2, [r4]
    7304:	add	r3, r4, #4
    7308:	cmp	r2, #0
    730c:	beq	7320 <coda_XML_ParserReset+0x1b4>
    7310:	b	759c <coda_XML_ParserReset+0x430>
    7314:	ldr	r2, [r3], #4
    7318:	cmp	r2, #0
    731c:	bne	759c <coda_XML_ParserReset+0x430>
    7320:	cmp	r7, r3
    7324:	bne	7314 <coda_XML_ParserReset+0x1a8>
    7328:	ldr	r3, [r5, #8]
    732c:	cmp	r3, #0
    7330:	beq	7368 <coda_XML_ParserReset+0x1fc>
    7334:	mov	r4, #0
    7338:	ldr	r3, [r5]
    733c:	mov	r7, r4
    7340:	ldr	r2, [r5, #16]
    7344:	ldr	r0, [r3, r4, lsl #2]
    7348:	ldr	r3, [r2, #8]
    734c:	blx	r3
    7350:	ldr	r3, [r5]
    7354:	ldr	r2, [r5, #8]
    7358:	str	r7, [r3, r4, lsl #2]
    735c:	add	r4, r4, #1
    7360:	cmp	r4, r2
    7364:	bcc	7340 <coda_XML_ParserReset+0x1d4>
    7368:	ldr	r3, [r5, #140]	; 0x8c
    736c:	mov	r4, #0
    7370:	cmp	r3, r4
    7374:	str	r4, [r5, #12]
    7378:	strb	r4, [r5, #131]	; 0x83
    737c:	ldrne	r3, [r5, #132]	; 0x84
    7380:	movne	r7, r4
    7384:	beq	73b0 <coda_XML_ParserReset+0x244>
    7388:	ldr	r2, [r5, #148]	; 0x94
    738c:	ldr	r0, [r3, r4, lsl #2]
    7390:	ldr	r3, [r2, #8]
    7394:	blx	r3
    7398:	ldr	r3, [r5, #132]	; 0x84
    739c:	ldr	r2, [r5, #140]	; 0x8c
    73a0:	str	r7, [r3, r4, lsl #2]
    73a4:	add	r4, r4, #1
    73a8:	cmp	r4, r2
    73ac:	bcc	7388 <coda_XML_ParserReset+0x21c>
    73b0:	ldr	r3, [r5, #28]
    73b4:	mov	r4, #0
    73b8:	cmp	r3, r4
    73bc:	str	r4, [r5, #144]	; 0x90
    73c0:	ldrne	r3, [r5, #20]
    73c4:	movne	r7, r4
    73c8:	beq	73f4 <coda_XML_ParserReset+0x288>
    73cc:	ldr	r2, [r5, #36]	; 0x24
    73d0:	ldr	r0, [r3, r4, lsl #2]
    73d4:	ldr	r3, [r2, #8]
    73d8:	blx	r3
    73dc:	ldr	r3, [r5, #20]
    73e0:	ldr	r2, [r5, #28]
    73e4:	str	r7, [r3, r4, lsl #2]
    73e8:	add	r4, r4, #1
    73ec:	cmp	r4, r2
    73f0:	bcc	73cc <coda_XML_ParserReset+0x260>
    73f4:	ldr	r3, [r5, #48]	; 0x30
    73f8:	mov	r4, #0
    73fc:	cmp	r3, r4
    7400:	str	r4, [r5, #32]
    7404:	ldrne	r3, [r5, #40]	; 0x28
    7408:	movne	r7, r4
    740c:	beq	7438 <coda_XML_ParserReset+0x2cc>
    7410:	ldr	r2, [r5, #56]	; 0x38
    7414:	ldr	r0, [r3, r4, lsl #2]
    7418:	ldr	r3, [r2, #8]
    741c:	blx	r3
    7420:	ldr	r3, [r5, #40]	; 0x28
    7424:	ldr	r2, [r5, #48]	; 0x30
    7428:	str	r7, [r3, r4, lsl #2]
    742c:	add	r4, r4, #1
    7430:	cmp	r4, r2
    7434:	bcc	7410 <coda_XML_ParserReset+0x2a4>
    7438:	ldr	r3, [r5, #68]	; 0x44
    743c:	mov	r4, #0
    7440:	cmp	r3, r4
    7444:	str	r4, [r5, #52]	; 0x34
    7448:	ldrne	r3, [r5, #60]	; 0x3c
    744c:	movne	r7, r4
    7450:	beq	747c <coda_XML_ParserReset+0x310>
    7454:	ldr	r2, [r5, #76]	; 0x4c
    7458:	ldr	r0, [r3, r4, lsl #2]
    745c:	ldr	r3, [r2, #8]
    7460:	blx	r3
    7464:	ldr	r3, [r5, #60]	; 0x3c
    7468:	ldr	r2, [r5, #68]	; 0x44
    746c:	str	r7, [r3, r4, lsl #2]
    7470:	add	r4, r4, #1
    7474:	cmp	r4, r2
    7478:	bcc	7454 <coda_XML_ParserReset+0x2e8>
    747c:	ldr	r1, [r5, #84]	; 0x54
    7480:	mov	r3, #0
    7484:	cmp	r1, r3
    7488:	str	r3, [r5, #72]	; 0x48
    748c:	beq	75bc <coda_XML_ParserReset+0x450>
    7490:	ldr	r3, [r5, #80]	; 0x50
    7494:	cmp	r3, #0
    7498:	bne	74a4 <coda_XML_ParserReset+0x338>
    749c:	b	74bc <coda_XML_ParserReset+0x350>
    74a0:	mov	r3, r2
    74a4:	ldr	r2, [r3]
    74a8:	str	r1, [r3]
    74ac:	cmp	r2, #0
    74b0:	mov	r1, r3
    74b4:	bne	74a0 <coda_XML_ParserReset+0x334>
    74b8:	str	r3, [r5, #84]	; 0x54
    74bc:	ldr	r1, [r5, #108]	; 0x6c
    74c0:	mov	r3, #0
    74c4:	cmp	r1, r3
    74c8:	str	r3, [r5, #80]	; 0x50
    74cc:	str	r3, [r5, #96]	; 0x60
    74d0:	str	r3, [r5, #92]	; 0x5c
    74d4:	str	r3, [r5, #88]	; 0x58
    74d8:	ldr	r3, [r5, #104]	; 0x68
    74dc:	beq	7504 <coda_XML_ParserReset+0x398>
    74e0:	cmp	r3, #0
    74e4:	bne	74f0 <coda_XML_ParserReset+0x384>
    74e8:	b	7508 <coda_XML_ParserReset+0x39c>
    74ec:	mov	r3, r2
    74f0:	ldr	r2, [r3]
    74f4:	str	r1, [r3]
    74f8:	cmp	r2, #0
    74fc:	mov	r1, r3
    7500:	bne	74ec <coda_XML_ParserReset+0x380>
    7504:	str	r3, [r5, #108]	; 0x6c
    7508:	mov	r4, #0
    750c:	strb	r4, [r5, #160]	; 0xa0
    7510:	ldr	r0, [r5, #184]	; 0xb8
    7514:	ldr	r3, [r6, #20]
    7518:	str	r4, [r5, #104]	; 0x68
    751c:	str	r4, [r5, #120]	; 0x78
    7520:	str	r4, [r5, #116]	; 0x74
    7524:	str	r4, [r5, #112]	; 0x70
    7528:	str	r4, [r5, #152]	; 0x98
    752c:	str	r4, [r5, #156]	; 0x9c
    7530:	blx	r3
    7534:	ldr	r0, [r5, #164]	; 0xa4
    7538:	str	r4, [r5, #184]	; 0xb8
    753c:	ldr	r3, [r6, #20]
    7540:	blx	r3
    7544:	mov	r0, #1
    7548:	str	r4, [r5, #164]	; 0xa4
    754c:	str	r4, [r5, #180]	; 0xb4
    7550:	str	r4, [r5, #172]	; 0xac
    7554:	str	r4, [r5, #176]	; 0xb0
    7558:	str	r4, [r5, #168]	; 0xa8
    755c:	strb	r4, [r5, #129]	; 0x81
    7560:	strb	r4, [r5, #130]	; 0x82
    7564:	strb	r0, [r5, #128]	; 0x80
    7568:	pop	{r4, r5, r6, r7, r8, pc}
    756c:	mov	r3, r2
    7570:	ldr	r2, [r3, #8]
    7574:	str	ip, [r3, #8]
    7578:	cmp	r2, #0
    757c:	mov	ip, r3
    7580:	bne	756c <coda_XML_ParserReset+0x400>
    7584:	str	r3, [r0, #312]	; 0x138
    7588:	ldr	r3, [r0, #380]	; 0x17c
    758c:	cmp	r3, #0
    7590:	ldrne	ip, [r0, #384]	; 0x180
    7594:	bne	7200 <coda_XML_ParserReset+0x94>
    7598:	b	721c <coda_XML_ParserReset+0xb0>
    759c:	mov	r4, r3
    75a0:	ldr	r3, [r2, #16]
    75a4:	cmp	r3, #0
    75a8:	beq	72f8 <coda_XML_ParserReset+0x18c>
    75ac:	ldr	r0, [r2, #20]
    75b0:	ldr	r3, [r6, #20]
    75b4:	blx	r3
    75b8:	b	72f8 <coda_XML_ParserReset+0x18c>
    75bc:	ldr	r3, [r5, #80]	; 0x50
    75c0:	str	r3, [r5, #84]	; 0x54
    75c4:	b	74bc <coda_XML_ParserReset+0x350>

000075c8 <coda_XML_SetEncoding>:
    75c8:	ldr	r3, [r0, #496]	; 0x1f0
    75cc:	bic	r3, r3, #2
    75d0:	cmp	r3, #1
    75d4:	beq	7600 <coda_XML_SetEncoding+0x38>
    75d8:	cmp	r1, #0
    75dc:	beq	7608 <coda_XML_SetEncoding+0x40>
    75e0:	push	{r4, lr}
    75e4:	mov	r4, r0
    75e8:	add	r0, r0, #432	; 0x1b0
    75ec:	bl	20f0 <poolCopyString>
    75f0:	str	r0, [r4, #240]	; 0xf0
    75f4:	adds	r0, r0, #0
    75f8:	movne	r0, #1
    75fc:	pop	{r4, pc}
    7600:	mov	r0, #0
    7604:	bx	lr
    7608:	str	r1, [r0, #240]	; 0xf0
    760c:	mov	r0, #1
    7610:	bx	lr

00007614 <coda_XML_ParserFree>:
    7614:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7618:	subs	r6, r0, #0
    761c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    7620:	ldr	r7, [r6, #372]	; 0x174
    7624:	mov	r9, #0
    7628:	cmp	r7, #0
    762c:	beq	7688 <coda_XML_ParserFree+0x74>
    7630:	ldr	r3, [r6, #20]
    7634:	ldr	r0, [r7, #36]	; 0x24
    7638:	ldr	r8, [r7]
    763c:	blx	r3
    7640:	ldr	r4, [r7, #44]	; 0x2c
    7644:	cmp	r4, #0
    7648:	beq	7670 <coda_XML_ParserFree+0x5c>
    764c:	ldr	r0, [r4, #16]
    7650:	ldr	r5, [r4, #4]
    7654:	ldr	r3, [r6, #20]
    7658:	blx	r3
    765c:	mov	r0, r4
    7660:	ldr	r3, [r6, #20]
    7664:	blx	r3
    7668:	subs	r4, r5, #0
    766c:	bne	764c <coda_XML_ParserFree+0x38>
    7670:	mov	r0, r7
    7674:	ldr	r3, [r6, #20]
    7678:	mov	r7, r8
    767c:	blx	r3
    7680:	cmp	r7, #0
    7684:	bne	7630 <coda_XML_ParserFree+0x1c>
    7688:	ldr	r7, [r6, #376]	; 0x178
    768c:	cmp	r7, #0
    7690:	strne	r9, [r6, #376]	; 0x178
    7694:	bne	7630 <coda_XML_ParserFree+0x1c>
    7698:	ldr	r0, [r6, #308]	; 0x134
    769c:	b	76b0 <coda_XML_ParserFree+0x9c>
    76a0:	ldr	r4, [r0, #8]
    76a4:	ldr	r3, [r6, #20]
    76a8:	blx	r3
    76ac:	mov	r0, r4
    76b0:	cmp	r0, #0
    76b4:	bne	76a0 <coda_XML_ParserFree+0x8c>
    76b8:	ldr	r0, [r6, #312]	; 0x138
    76bc:	cmp	r0, #0
    76c0:	strne	r7, [r6, #312]	; 0x138
    76c4:	bne	76a0 <coda_XML_ParserFree+0x8c>
    76c8:	ldr	r4, [r6, #384]	; 0x180
    76cc:	cmp	r4, #0
    76d0:	beq	76f8 <coda_XML_ParserFree+0xe4>
    76d4:	ldr	r0, [r4, #16]
    76d8:	ldr	r5, [r4, #4]
    76dc:	ldr	r3, [r6, #20]
    76e0:	blx	r3
    76e4:	mov	r0, r4
    76e8:	ldr	r3, [r6, #20]
    76ec:	blx	r3
    76f0:	subs	r4, r5, #0
    76f4:	bne	76d4 <coda_XML_ParserFree+0xc0>
    76f8:	ldr	r4, [r6, #380]	; 0x17c
    76fc:	cmp	r4, #0
    7700:	beq	7728 <coda_XML_ParserFree+0x114>
    7704:	ldr	r0, [r4, #16]
    7708:	ldr	r5, [r4, #4]
    770c:	ldr	r3, [r6, #20]
    7710:	blx	r3
    7714:	mov	r0, r4
    7718:	ldr	r3, [r6, #20]
    771c:	blx	r3
    7720:	subs	r4, r5, #0
    7724:	bne	7704 <coda_XML_ParserFree+0xf0>
    7728:	add	r0, r6, #432	; 0x1b0
    772c:	bl	738 <poolDestroy>
    7730:	add	r0, r6, #456	; 0x1c8
    7734:	bl	738 <poolDestroy>
    7738:	ldrb	r3, [r6, #504]	; 0x1f8
    773c:	cmp	r3, #0
    7740:	bne	77dc <coda_XML_ParserFree+0x1c8>
    7744:	ldr	r7, [r6, #364]	; 0x16c
    7748:	cmp	r7, #0
    774c:	beq	77dc <coda_XML_ParserFree+0x1c8>
    7750:	ldr	r5, [r7, #28]
    7754:	ldr	r4, [r7, #20]
    7758:	ldr	r8, [r6, #492]	; 0x1ec
    775c:	add	r5, r4, r5, lsl #2
    7760:	cmp	r5, r4
    7764:	beq	7790 <coda_XML_ParserFree+0x17c>
    7768:	ldr	r2, [r4]
    776c:	add	r3, r4, #4
    7770:	cmp	r2, #0
    7774:	beq	7788 <coda_XML_ParserFree+0x174>
    7778:	b	7848 <coda_XML_ParserFree+0x234>
    777c:	ldr	r2, [r3], #4
    7780:	cmp	r2, #0
    7784:	bne	7848 <coda_XML_ParserFree+0x234>
    7788:	cmp	r5, r3
    778c:	bne	777c <coda_XML_ParserFree+0x168>
    7790:	mov	r0, r7
    7794:	bl	6e8 <hashTableDestroy>
    7798:	add	r0, r7, #132	; 0x84
    779c:	bl	6e8 <hashTableDestroy>
    77a0:	add	r0, r7, #20
    77a4:	bl	6e8 <hashTableDestroy>
    77a8:	add	r0, r7, #40	; 0x28
    77ac:	bl	6e8 <hashTableDestroy>
    77b0:	add	r0, r7, #60	; 0x3c
    77b4:	bl	6e8 <hashTableDestroy>
    77b8:	add	r0, r7, #80	; 0x50
    77bc:	bl	738 <poolDestroy>
    77c0:	add	r0, r7, #104	; 0x68
    77c4:	bl	738 <poolDestroy>
    77c8:	cmp	r8, #0
    77cc:	beq	7868 <coda_XML_ParserFree+0x254>
    77d0:	mov	r0, r7
    77d4:	ldr	r3, [r6, #20]
    77d8:	blx	r3
    77dc:	ldr	r3, [r6, #20]
    77e0:	ldr	r0, [r6, #400]	; 0x190
    77e4:	blx	r3
    77e8:	ldr	r3, [r6, #20]
    77ec:	ldr	r0, [r6, #480]	; 0x1e0
    77f0:	blx	r3
    77f4:	ldr	r3, [r6, #20]
    77f8:	ldr	r0, [r6, #8]
    77fc:	blx	r3
    7800:	ldr	r3, [r6, #20]
    7804:	ldr	r0, [r6, #52]	; 0x34
    7808:	blx	r3
    780c:	ldr	r3, [r6, #20]
    7810:	ldr	r0, [r6, #404]	; 0x194
    7814:	blx	r3
    7818:	ldr	r3, [r6, #20]
    781c:	ldr	r0, [r6, #248]	; 0xf8
    7820:	blx	r3
    7824:	ldr	r3, [r6, #260]	; 0x104
    7828:	cmp	r3, #0
    782c:	beq	7838 <coda_XML_ParserFree+0x224>
    7830:	ldr	r0, [r6, #252]	; 0xfc
    7834:	blx	r3
    7838:	ldr	r3, [r6, #20]
    783c:	mov	r0, r6
    7840:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    7844:	bx	r3
    7848:	mov	r4, r3
    784c:	ldr	r3, [r2, #16]
    7850:	cmp	r3, #0
    7854:	beq	7760 <coda_XML_ParserFree+0x14c>
    7858:	ldr	r0, [r2, #20]
    785c:	ldr	r3, [r6, #20]
    7860:	blx	r3
    7864:	b	7760 <coda_XML_ParserFree+0x14c>
    7868:	ldr	r3, [r6, #20]
    786c:	ldr	r0, [r7, #184]	; 0xb8
    7870:	blx	r3
    7874:	ldr	r3, [r6, #20]
    7878:	ldr	r0, [r7, #164]	; 0xa4
    787c:	blx	r3
    7880:	b	77d0 <coda_XML_ParserFree+0x1bc>

00007884 <parserCreate>:
    7884:	push	{r4, r5, r6, r7, r8, lr}
    7888:	subs	r5, r1, #0
    788c:	mov	r7, r0
    7890:	mov	r8, r2
    7894:	mov	r6, r3
    7898:	beq	79f4 <parserCreate+0x170>
    789c:	ldr	r3, [r5]
    78a0:	mov	r0, #520	; 0x208
    78a4:	blx	r3
    78a8:	subs	r4, r0, #0
    78ac:	beq	79e8 <parserCreate+0x164>
    78b0:	ldmib	r5, {r1, r2}
    78b4:	ldr	r3, [r5]
    78b8:	str	r1, [r4, #16]
    78bc:	str	r3, [r4, #12]
    78c0:	str	r2, [r4, #20]
    78c4:	mov	r2, #0
    78c8:	mov	r1, #16
    78cc:	str	r2, [r4, #8]
    78d0:	str	r2, [r4, #32]
    78d4:	str	r1, [r4, #388]	; 0x184
    78d8:	mov	r0, #256	; 0x100
    78dc:	blx	r3
    78e0:	cmp	r0, #0
    78e4:	mov	r5, r0
    78e8:	str	r0, [r4, #400]	; 0x190
    78ec:	beq	7b48 <parserCreate+0x2c4>
    78f0:	ldr	r3, [r4, #12]
    78f4:	mov	r0, #1024	; 0x400
    78f8:	blx	r3
    78fc:	cmp	r0, #0
    7900:	mov	r5, r0
    7904:	str	r0, [r4, #52]	; 0x34
    7908:	beq	7b3c <parserCreate+0x2b8>
    790c:	add	r5, r0, #1024	; 0x400
    7910:	cmp	r6, #0
    7914:	str	r5, [r4, #56]	; 0x38
    7918:	beq	7a20 <parserCreate+0x19c>
    791c:	add	r2, r4, #12
    7920:	str	r6, [r4, #364]	; 0x16c
    7924:	mov	r3, #0
    7928:	mov	r1, #33	; 0x21
    792c:	strb	r1, [r4, #488]	; 0x1e8
    7930:	str	r2, [r4, #452]	; 0x1c4
    7934:	str	r2, [r4, #476]	; 0x1dc
    7938:	str	r3, [r4, #384]	; 0x180
    793c:	str	r3, [r4, #376]	; 0x178
    7940:	str	r3, [r4, #312]	; 0x138
    7944:	str	r3, [r4, #484]	; 0x1e4
    7948:	str	r3, [r4, #480]	; 0x1e0
    794c:	str	r3, [r4, #132]	; 0x84
    7950:	str	r3, [r4, #256]	; 0x100
    7954:	strb	r3, [r4, #244]	; 0xf4
    7958:	strb	r3, [r4, #245]	; 0xf5
    795c:	str	r3, [r4, #404]	; 0x194
    7960:	str	r3, [r4, #408]	; 0x198
    7964:	strb	r3, [r4, #412]	; 0x19c
    7968:	str	r3, [r4, #432]	; 0x1b0
    796c:	str	r3, [r4, #436]	; 0x1b4
    7970:	str	r3, [r4, #448]	; 0x1c0
    7974:	str	r3, [r4, #444]	; 0x1bc
    7978:	str	r3, [r4, #440]	; 0x1b8
    797c:	str	r3, [r4, #456]	; 0x1c8
    7980:	str	r3, [r4, #460]	; 0x1cc
    7984:	str	r3, [r4, #472]	; 0x1d8
    7988:	str	r3, [r4, #468]	; 0x1d4
    798c:	str	r3, [r4, #464]	; 0x1d0
    7990:	mov	r1, r7
    7994:	mov	r0, r4
    7998:	bl	2154 <parserInit>
    799c:	cmp	r7, #0
    79a0:	beq	79b0 <parserCreate+0x12c>
    79a4:	ldr	r5, [r4, #240]	; 0xf0
    79a8:	cmp	r5, #0
    79ac:	beq	7b5c <parserCreate+0x2d8>
    79b0:	cmp	r8, #0
    79b4:	beq	79d8 <parserCreate+0x154>
    79b8:	mov	r3, #1
    79bc:	strb	r3, [r4, #244]	; 0xf4
    79c0:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
    79c4:	str	r0, [r4, #236]	; 0xec
    79c8:	ldrb	r3, [r8]
    79cc:	strb	r3, [r4, #488]	; 0x1e8
    79d0:	mov	r0, r4
    79d4:	pop	{r4, r5, r6, r7, r8, pc}
    79d8:	bl	0 <coda_XmlGetUtf8InternalEncoding>
    79dc:	str	r0, [r4, #236]	; 0xec
    79e0:	mov	r0, r4
    79e4:	pop	{r4, r5, r6, r7, r8, pc}
    79e8:	mov	r4, #0
    79ec:	mov	r0, r4
    79f0:	pop	{r4, r5, r6, r7, r8, pc}
    79f4:	mov	r0, #520	; 0x208
    79f8:	bl	0 <malloc>
    79fc:	subs	r4, r0, #0
    7a00:	beq	79e8 <parserCreate+0x164>
    7a04:	ldr	r3, [pc, #352]	; 7b6c <parserCreate+0x2e8>
    7a08:	ldr	r1, [pc, #352]	; 7b70 <parserCreate+0x2ec>
    7a0c:	ldr	r2, [pc, #352]	; 7b74 <parserCreate+0x2f0>
    7a10:	str	r3, [r4, #12]
    7a14:	str	r1, [r4, #16]
    7a18:	str	r2, [r4, #20]
    7a1c:	b	78c4 <parserCreate+0x40>
    7a20:	ldr	r3, [r4, #12]
    7a24:	mov	r0, #188	; 0xbc
    7a28:	blx	r3
    7a2c:	add	r2, r4, #12
    7a30:	cmp	r0, #0
    7a34:	beq	7b0c <parserCreate+0x288>
    7a38:	mov	r3, #1
    7a3c:	str	r6, [r0, #80]	; 0x50
    7a40:	str	r6, [r0, #84]	; 0x54
    7a44:	str	r6, [r0, #96]	; 0x60
    7a48:	str	r6, [r0, #92]	; 0x5c
    7a4c:	str	r6, [r0, #88]	; 0x58
    7a50:	str	r2, [r0, #100]	; 0x64
    7a54:	str	r6, [r0, #104]	; 0x68
    7a58:	str	r6, [r0, #108]	; 0x6c
    7a5c:	str	r6, [r0, #120]	; 0x78
    7a60:	str	r6, [r0, #116]	; 0x74
    7a64:	str	r6, [r0, #112]	; 0x70
    7a68:	str	r2, [r0, #124]	; 0x7c
    7a6c:	strb	r6, [r0, #4]
    7a70:	str	r6, [r0, #8]
    7a74:	str	r6, [r0, #12]
    7a78:	str	r6, [r0]
    7a7c:	str	r2, [r0, #16]
    7a80:	strb	r6, [r0, #24]
    7a84:	str	r6, [r0, #28]
    7a88:	str	r6, [r0, #32]
    7a8c:	str	r6, [r0, #20]
    7a90:	str	r2, [r0, #36]	; 0x24
    7a94:	strb	r6, [r0, #44]	; 0x2c
    7a98:	str	r6, [r0, #48]	; 0x30
    7a9c:	str	r6, [r0, #52]	; 0x34
    7aa0:	str	r6, [r0, #40]	; 0x28
    7aa4:	str	r2, [r0, #56]	; 0x38
    7aa8:	strb	r6, [r0, #64]	; 0x40
    7aac:	str	r6, [r0, #68]	; 0x44
    7ab0:	str	r6, [r0, #72]	; 0x48
    7ab4:	str	r6, [r0, #60]	; 0x3c
    7ab8:	str	r2, [r0, #76]	; 0x4c
    7abc:	strb	r6, [r0, #131]	; 0x83
    7ac0:	strb	r6, [r0, #136]	; 0x88
    7ac4:	str	r6, [r0, #140]	; 0x8c
    7ac8:	str	r6, [r0, #144]	; 0x90
    7acc:	str	r6, [r0, #132]	; 0x84
    7ad0:	str	r2, [r0, #148]	; 0x94
    7ad4:	str	r6, [r0, #152]	; 0x98
    7ad8:	str	r6, [r0, #156]	; 0x9c
    7adc:	strb	r6, [r0, #160]	; 0xa0
    7ae0:	str	r6, [r0, #184]	; 0xb8
    7ae4:	str	r6, [r0, #164]	; 0xa4
    7ae8:	str	r6, [r0, #180]	; 0xb4
    7aec:	str	r6, [r0, #172]	; 0xac
    7af0:	str	r6, [r0, #176]	; 0xb0
    7af4:	str	r6, [r0, #168]	; 0xa8
    7af8:	strb	r6, [r0, #129]	; 0x81
    7afc:	strb	r6, [r0, #130]	; 0x82
    7b00:	strb	r3, [r0, #128]	; 0x80
    7b04:	str	r0, [r4, #364]	; 0x16c
    7b08:	b	7924 <parserCreate+0xa0>
    7b0c:	ldr	r3, [r4, #20]
    7b10:	ldr	r0, [r4, #52]	; 0x34
    7b14:	str	r6, [r4, #364]	; 0x16c
    7b18:	blx	r3
    7b1c:	ldr	r3, [r4, #20]
    7b20:	ldr	r0, [r4, #400]	; 0x190
    7b24:	blx	r3
    7b28:	ldr	r3, [r4, #20]
    7b2c:	mov	r0, r4
    7b30:	blx	r3
    7b34:	mov	r4, r6
    7b38:	b	79d0 <parserCreate+0x14c>
    7b3c:	ldr	r3, [r4, #20]
    7b40:	ldr	r0, [r4, #400]	; 0x190
    7b44:	blx	r3
    7b48:	ldr	r3, [r4, #20]
    7b4c:	mov	r0, r4
    7b50:	blx	r3
    7b54:	mov	r4, r5
    7b58:	b	79d0 <parserCreate+0x14c>
    7b5c:	mov	r0, r4
    7b60:	bl	7614 <coda_XML_ParserFree>
    7b64:	mov	r4, r5
    7b68:	b	79d0 <parserCreate+0x14c>
	...

00007b78 <coda_XML_ParserCreate_MM>:
    7b78:	mov	r3, #0
    7b7c:	b	7884 <parserCreate>

00007b80 <coda_XML_ParserCreate>:
    7b80:	mov	r3, #0
    7b84:	mov	r2, r3
    7b88:	mov	r1, r3
    7b8c:	b	7884 <parserCreate>

00007b90 <coda_XML_ParserCreateNS>:
    7b90:	push	{lr}		; (str lr, [sp, #-4]!)
    7b94:	sub	sp, sp, #12
    7b98:	add	r2, sp, #8
    7b9c:	mov	r3, #0
    7ba0:	strb	r1, [r2, #-4]!
    7ba4:	mov	r1, r3
    7ba8:	bl	7884 <parserCreate>
    7bac:	add	sp, sp, #12
    7bb0:	pop	{pc}		; (ldr pc, [sp], #4)

00007bb4 <coda_XML_ExternalEntityParserCreate>:
    7bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7bb8:	mov	r4, r0
    7bbc:	sub	sp, sp, #116	; 0x74
    7bc0:	mov	r3, r1
    7bc4:	cmp	r1, #0
    7bc8:	str	r1, [sp, #24]
    7bcc:	ldr	r1, [r4, #60]	; 0x3c
    7bd0:	mov	r0, r2
    7bd4:	str	r1, [sp, #4]
    7bd8:	ldr	r1, [r4, #64]	; 0x40
    7bdc:	ldrb	r2, [r4, #244]	; 0xf4
    7be0:	str	r1, [sp, #8]
    7be4:	ldr	r1, [r4, #68]	; 0x44
    7be8:	ldr	fp, [r4, #364]	; 0x16c
    7bec:	str	r1, [sp, #12]
    7bf0:	ldr	r1, [r4, #72]	; 0x48
    7bf4:	moveq	r3, fp
    7bf8:	str	r1, [sp, #16]
    7bfc:	ldr	r1, [r4, #76]	; 0x4c
    7c00:	movne	r3, #0
    7c04:	str	r1, [sp, #20]
    7c08:	ldr	r1, [r4, #80]	; 0x50
    7c0c:	cmp	r2, #0
    7c10:	str	r1, [sp, #28]
    7c14:	ldr	r1, [r4, #84]	; 0x54
    7c18:	addne	r2, sp, #112	; 0x70
    7c1c:	str	r1, [sp, #32]
    7c20:	ldr	r1, [r4, #88]	; 0x58
    7c24:	str	r1, [sp, #36]	; 0x24
    7c28:	ldr	r1, [r4, #100]	; 0x64
    7c2c:	str	r1, [sp, #40]	; 0x28
    7c30:	ldr	r1, [r4, #104]	; 0x68
    7c34:	str	r1, [sp, #44]	; 0x2c
    7c38:	ldr	r1, [r4, #108]	; 0x6c
    7c3c:	str	r1, [sp, #48]	; 0x30
    7c40:	ldr	r1, [r4, #112]	; 0x70
    7c44:	str	r1, [sp, #52]	; 0x34
    7c48:	ldr	r1, [r4, #116]	; 0x74
    7c4c:	str	r1, [sp, #56]	; 0x38
    7c50:	ldr	r1, [r4, #120]	; 0x78
    7c54:	str	r1, [sp, #60]	; 0x3c
    7c58:	ldr	r1, [r4, #128]	; 0x80
    7c5c:	ldr	r7, [r4]
    7c60:	str	r1, [sp, #64]	; 0x40
    7c64:	ldr	r1, [r4, #132]	; 0x84
    7c68:	ldr	r5, [r4, #4]
    7c6c:	str	r1, [sp, #68]	; 0x44
    7c70:	ldr	r1, [r4, #136]	; 0x88
    7c74:	ldr	r8, [r4, #124]	; 0x7c
    7c78:	str	r1, [sp, #72]	; 0x48
    7c7c:	ldr	r1, [r4, #140]	; 0x8c
    7c80:	ldrb	sl, [r4, #245]	; 0xf5
    7c84:	str	r1, [sp, #76]	; 0x4c
    7c88:	ldr	r1, [r4, #144]	; 0x90
    7c8c:	ldr	r9, [r4, #512]	; 0x200
    7c90:	str	r1, [sp, #80]	; 0x50
    7c94:	ldr	r1, [r4, #148]	; 0x94
    7c98:	str	r1, [sp, #84]	; 0x54
    7c9c:	ldr	r1, [r4, #352]	; 0x160
    7ca0:	str	r1, [sp, #88]	; 0x58
    7ca4:	ldrb	r1, [r4, #316]	; 0x13c
    7ca8:	str	r1, [sp, #92]	; 0x5c
    7cac:	ldr	r1, [r4, #508]	; 0x1fc
    7cb0:	str	r1, [sp, #96]	; 0x60
    7cb4:	ldr	r1, [r4, #284]	; 0x11c
    7cb8:	str	r1, [sp, #100]	; 0x64
    7cbc:	ldrbne	r1, [r4, #488]	; 0x1e8
    7cc0:	strbne	r1, [r2, #-4]!
    7cc4:	add	r1, r4, #12
    7cc8:	bl	7884 <parserCreate>
    7ccc:	cmp	r0, #0
    7cd0:	mov	r6, r0
    7cd4:	beq	7f14 <coda_XML_ExternalEntityParserCreate+0x360>
    7cd8:	ldr	r3, [sp, #4]
    7cdc:	cmp	r7, r5
    7ce0:	str	r3, [r0, #60]	; 0x3c
    7ce4:	ldr	r3, [sp, #8]
    7ce8:	movne	r5, r0
    7cec:	str	r3, [r0, #64]	; 0x40
    7cf0:	ldr	r3, [sp, #12]
    7cf4:	str	r5, [r0, #4]
    7cf8:	str	r3, [r0, #68]	; 0x44
    7cfc:	ldr	r3, [sp, #16]
    7d00:	cmp	r4, r8
    7d04:	str	r3, [r0, #72]	; 0x48
    7d08:	ldr	r3, [sp, #20]
    7d0c:	str	r3, [r0, #76]	; 0x4c
    7d10:	ldr	r3, [sp, #28]
    7d14:	str	r3, [r0, #80]	; 0x50
    7d18:	ldr	r3, [sp, #32]
    7d1c:	str	r3, [r0, #84]	; 0x54
    7d20:	ldr	r3, [sp, #36]	; 0x24
    7d24:	str	r3, [r0, #88]	; 0x58
    7d28:	ldr	r3, [sp, #40]	; 0x28
    7d2c:	str	r3, [r0, #100]	; 0x64
    7d30:	ldr	r3, [sp, #44]	; 0x2c
    7d34:	str	r3, [r0, #104]	; 0x68
    7d38:	ldr	r3, [sp, #48]	; 0x30
    7d3c:	str	r3, [r0, #108]	; 0x6c
    7d40:	ldr	r3, [sp, #52]	; 0x34
    7d44:	str	r3, [r0, #112]	; 0x70
    7d48:	ldr	r3, [sp, #56]	; 0x38
    7d4c:	str	r3, [r0, #116]	; 0x74
    7d50:	ldr	r3, [sp, #60]	; 0x3c
    7d54:	str	r3, [r0, #120]	; 0x78
    7d58:	ldr	r3, [sp, #64]	; 0x40
    7d5c:	str	r3, [r0, #128]	; 0x80
    7d60:	ldr	r3, [sp, #68]	; 0x44
    7d64:	str	r3, [r0, #132]	; 0x84
    7d68:	ldr	r3, [sp, #72]	; 0x48
    7d6c:	strne	r8, [r0, #124]	; 0x7c
    7d70:	str	r3, [r0, #136]	; 0x88
    7d74:	ldr	r3, [sp, #76]	; 0x4c
    7d78:	str	r7, [r0]
    7d7c:	str	r3, [r0, #140]	; 0x8c
    7d80:	ldr	r3, [sp, #80]	; 0x50
    7d84:	strb	sl, [r0, #245]	; 0xf5
    7d88:	str	r3, [r0, #144]	; 0x90
    7d8c:	ldr	r3, [sp, #84]	; 0x54
    7d90:	str	r9, [r0, #512]	; 0x200
    7d94:	str	r3, [r0, #148]	; 0x94
    7d98:	ldr	r3, [sp, #88]	; 0x58
    7d9c:	str	r4, [r0, #492]	; 0x1ec
    7da0:	str	r3, [r0, #352]	; 0x160
    7da4:	ldr	r3, [sp, #24]
    7da8:	cmp	r3, #0
    7dac:	ldrb	r3, [sp, #92]	; 0x5c
    7db0:	strb	r3, [r0, #316]	; 0x13c
    7db4:	ldr	r3, [sp, #96]	; 0x60
    7db8:	str	r3, [r0, #508]	; 0x1fc
    7dbc:	ldr	r3, [sp, #100]	; 0x64
    7dc0:	str	r3, [r0, #284]	; 0x11c
    7dc4:	beq	8144 <coda_XML_ExternalEntityParserCreate+0x590>
    7dc8:	ldr	r8, [fp, #68]	; 0x44
    7dcc:	ldr	r5, [r0, #364]	; 0x16c
    7dd0:	ldr	r7, [fp, #60]	; 0x3c
    7dd4:	add	sl, r5, #60	; 0x3c
    7dd8:	add	r8, r7, r8, lsl #2
    7ddc:	mov	r9, #8
    7de0:	add	r3, r5, #80	; 0x50
    7de4:	str	r3, [sp, #4]
    7de8:	cmp	r8, r7
    7dec:	beq	7e18 <coda_XML_ExternalEntityParserCreate+0x264>
    7df0:	ldr	r3, [r7]
    7df4:	add	r7, r7, #4
    7df8:	cmp	r3, #0
    7dfc:	beq	7e10 <coda_XML_ExternalEntityParserCreate+0x25c>
    7e00:	b	7f20 <coda_XML_ExternalEntityParserCreate+0x36c>
    7e04:	ldr	r3, [r7], #4
    7e08:	cmp	r3, #0
    7e0c:	bne	7f20 <coda_XML_ExternalEntityParserCreate+0x36c>
    7e10:	cmp	r8, r7
    7e14:	bne	7e04 <coda_XML_ExternalEntityParserCreate+0x250>
    7e18:	ldr	r9, [fp, #48]	; 0x30
    7e1c:	add	r3, r5, #40	; 0x28
    7e20:	ldr	r7, [fp, #40]	; 0x28
    7e24:	str	r3, [sp, #8]
    7e28:	add	r3, fp, #152	; 0x98
    7e2c:	str	r3, [sp, #12]
    7e30:	add	r9, r7, r9, lsl #2
    7e34:	add	r3, r5, #60	; 0x3c
    7e38:	str	r3, [sp, #16]
    7e3c:	add	r3, r5, #152	; 0x98
    7e40:	str	r3, [sp, #20]
    7e44:	cmp	r9, r7
    7e48:	beq	7e74 <coda_XML_ExternalEntityParserCreate+0x2c0>
    7e4c:	ldr	r8, [r7]
    7e50:	add	r7, r7, #4
    7e54:	cmp	r8, #0
    7e58:	beq	7e6c <coda_XML_ExternalEntityParserCreate+0x2b8>
    7e5c:	b	7f5c <coda_XML_ExternalEntityParserCreate+0x3a8>
    7e60:	ldr	r8, [r7], #4
    7e64:	cmp	r8, #0
    7e68:	bne	7f5c <coda_XML_ExternalEntityParserCreate+0x3a8>
    7e6c:	cmp	r9, r7
    7e70:	bne	7e60 <coda_XML_ExternalEntityParserCreate+0x2ac>
    7e74:	ldr	r3, [fp, #28]
    7e78:	ldr	r8, [fp, #20]
    7e7c:	add	r2, r5, #20
    7e80:	add	r3, r8, r3, lsl #2
    7e84:	str	r3, [sp, #12]
    7e88:	add	r3, r5, #40	; 0x28
    7e8c:	str	r3, [sp, #16]
    7e90:	add	r3, r5, #60	; 0x3c
    7e94:	str	r2, [sp, #32]
    7e98:	str	r3, [sp, #36]	; 0x24
    7e9c:	str	fp, [sp, #20]
    7ea0:	str	r5, [sp, #28]
    7ea4:	str	r6, [sp, #8]
    7ea8:	ldr	r3, [sp, #12]
    7eac:	cmp	r3, r8
    7eb0:	beq	7ee0 <coda_XML_ExternalEntityParserCreate+0x32c>
    7eb4:	ldr	r9, [r8]
    7eb8:	add	r8, r8, #4
    7ebc:	cmp	r9, #0
    7ec0:	ldreq	r3, [sp, #12]
    7ec4:	beq	7ed8 <coda_XML_ExternalEntityParserCreate+0x324>
    7ec8:	b	8014 <coda_XML_ExternalEntityParserCreate+0x460>
    7ecc:	ldr	r9, [r8], #4
    7ed0:	cmp	r9, #0
    7ed4:	bne	8014 <coda_XML_ExternalEntityParserCreate+0x460>
    7ed8:	cmp	r3, r8
    7edc:	bne	7ecc <coda_XML_ExternalEntityParserCreate+0x318>
    7ee0:	ldr	fp, [sp, #20]
    7ee4:	ldr	r5, [sp, #28]
    7ee8:	mov	r3, fp
    7eec:	ldr	r2, [sp, #4]
    7ef0:	mov	r1, r5
    7ef4:	mov	r0, r4
    7ef8:	ldr	r6, [sp, #8]
    7efc:	bl	0 <errorProcessor>
    7f00:	cmp	r0, #0
    7f04:	bne	81ac <coda_XML_ExternalEntityParserCreate+0x5f8>
    7f08:	mov	r0, r6
    7f0c:	bl	7614 <coda_XML_ParserFree>
    7f10:	mov	r6, #0
    7f14:	mov	r0, r6
    7f18:	add	sp, sp, #116	; 0x74
    7f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7f20:	ldr	r1, [r3]
    7f24:	ldr	r0, [sp, #4]
    7f28:	bl	20f0 <poolCopyString>
    7f2c:	subs	r2, r0, #0
    7f30:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    7f34:	mov	r3, r9
    7f38:	mov	r1, sl
    7f3c:	mov	r0, r4
    7f40:	bl	9d8 <lookup>
    7f44:	cmp	r0, #0
    7f48:	bne	7de8 <coda_XML_ExternalEntityParserCreate+0x234>
    7f4c:	mov	r0, r6
    7f50:	bl	7614 <coda_XML_ParserFree>
    7f54:	mov	r6, #0
    7f58:	b	7f14 <coda_XML_ExternalEntityParserCreate+0x360>
    7f5c:	ldr	r3, [r5, #92]	; 0x5c
    7f60:	ldr	r2, [r5, #88]	; 0x58
    7f64:	cmp	r3, r2
    7f68:	beq	7ffc <coda_XML_ExternalEntityParserCreate+0x448>
    7f6c:	add	r2, r3, #1
    7f70:	str	r2, [r5, #92]	; 0x5c
    7f74:	mov	r2, #0
    7f78:	strb	r2, [r3]
    7f7c:	ldr	r0, [sp, #4]
    7f80:	ldr	r1, [r8]
    7f84:	bl	20f0 <poolCopyString>
    7f88:	subs	r2, r0, #0
    7f8c:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    7f90:	add	r2, r2, #1
    7f94:	mov	r3, #12
    7f98:	ldr	r1, [sp, #8]
    7f9c:	mov	r0, r4
    7fa0:	bl	9d8 <lookup>
    7fa4:	subs	sl, r0, #0
    7fa8:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    7fac:	ldrb	r3, [r8, #8]
    7fb0:	strb	r3, [sl, #8]
    7fb4:	ldr	r3, [r8, #4]
    7fb8:	cmp	r3, #0
    7fbc:	beq	7e44 <coda_XML_ExternalEntityParserCreate+0x290>
    7fc0:	ldrb	r2, [r8, #9]
    7fc4:	ldr	r1, [sp, #12]
    7fc8:	cmp	r3, r1
    7fcc:	strb	r2, [sl, #9]
    7fd0:	beq	7ff0 <coda_XML_ExternalEntityParserCreate+0x43c>
    7fd4:	ldr	r2, [r3]
    7fd8:	ldr	r1, [sp, #16]
    7fdc:	mov	r3, #0
    7fe0:	mov	r0, r4
    7fe4:	bl	9d8 <lookup>
    7fe8:	str	r0, [sl, #4]
    7fec:	b	7e44 <coda_XML_ExternalEntityParserCreate+0x290>
    7ff0:	ldr	r3, [sp, #20]
    7ff4:	str	r3, [sl, #4]
    7ff8:	b	7e44 <coda_XML_ExternalEntityParserCreate+0x290>
    7ffc:	ldr	r0, [sp, #4]
    8000:	bl	ec8 <poolGrow>
    8004:	cmp	r0, #0
    8008:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    800c:	ldr	r3, [r5, #92]	; 0x5c
    8010:	b	7f6c <coda_XML_ExternalEntityParserCreate+0x3b8>
    8014:	ldr	r1, [r9]
    8018:	ldr	r0, [sp, #4]
    801c:	bl	20f0 <poolCopyString>
    8020:	subs	r2, r0, #0
    8024:	beq	8170 <coda_XML_ExternalEntityParserCreate+0x5bc>
    8028:	mov	r3, #24
    802c:	ldr	r1, [sp, #32]
    8030:	mov	r0, r4
    8034:	bl	9d8 <lookup>
    8038:	subs	r7, r0, #0
    803c:	beq	8170 <coda_XML_ExternalEntityParserCreate+0x5bc>
    8040:	ldr	r0, [r9, #12]
    8044:	cmp	r0, #0
    8048:	bne	8178 <coda_XML_ExternalEntityParserCreate+0x5c4>
    804c:	ldr	r3, [r9, #8]
    8050:	cmp	r3, #0
    8054:	beq	8070 <coda_XML_ExternalEntityParserCreate+0x4bc>
    8058:	ldr	r2, [r3]
    805c:	ldr	r1, [sp, #16]
    8060:	mov	r3, #0
    8064:	mov	r0, r4
    8068:	bl	9d8 <lookup>
    806c:	str	r0, [r7, #8]
    8070:	ldr	r2, [r9, #4]
    8074:	ldr	r3, [r9, #12]
    8078:	cmp	r2, #0
    807c:	str	r3, [r7, #12]
    8080:	str	r3, [r7, #16]
    8084:	beq	80a4 <coda_XML_ExternalEntityParserCreate+0x4f0>
    8088:	mov	r3, #0
    808c:	ldr	r2, [r2]
    8090:	ldr	r1, [sp, #36]	; 0x24
    8094:	mov	r0, r4
    8098:	bl	9d8 <lookup>
    809c:	ldr	r3, [r7, #12]
    80a0:	str	r0, [r7, #4]
    80a4:	cmp	r3, #0
    80a8:	ble	7ea8 <coda_XML_ExternalEntityParserCreate+0x2f4>
    80ac:	mov	r5, #0
    80b0:	mov	sl, r5
    80b4:	str	r8, [sp, #40]	; 0x28
    80b8:	ldr	fp, [sp, #16]
    80bc:	b	80ec <coda_XML_ExternalEntityParserCreate+0x538>
    80c0:	bl	20f0 <poolCopyString>
    80c4:	ldr	r3, [r7, #20]
    80c8:	add	r3, r3, r5
    80cc:	str	r0, [r8, #8]
    80d0:	ldr	r3, [r3, #8]
    80d4:	cmp	r3, #0
    80d8:	beq	8170 <coda_XML_ExternalEntityParserCreate+0x5bc>
    80dc:	ldr	r3, [r7, #12]
    80e0:	add	r5, r5, #12
    80e4:	cmp	sl, r3
    80e8:	bge	8168 <coda_XML_ExternalEntityParserCreate+0x5b4>
    80ec:	ldr	r2, [r9, #20]
    80f0:	mov	r3, #0
    80f4:	mov	r1, fp
    80f8:	ldr	r2, [r2, r5]
    80fc:	mov	r0, r4
    8100:	ldr	r6, [r7, #20]
    8104:	ldr	r2, [r2]
    8108:	bl	9d8 <lookup>
    810c:	ldr	r3, [r9, #20]
    8110:	ldr	r2, [r7, #20]
    8114:	add	r3, r3, r5
    8118:	add	r8, r2, r5
    811c:	add	sl, sl, #1
    8120:	str	r0, [r6, r5]
    8124:	ldrb	r1, [r3, #4]
    8128:	ldr	r0, [sp, #4]
    812c:	strb	r1, [r8, #4]
    8130:	ldr	r3, [r3, #8]
    8134:	subs	r1, r3, #0
    8138:	bne	80c0 <coda_XML_ExternalEntityParserCreate+0x50c>
    813c:	str	r3, [r8, #8]
    8140:	b	80dc <coda_XML_ExternalEntityParserCreate+0x528>
    8144:	mov	r3, #1
    8148:	strb	r3, [r0, #504]	; 0x1f8
    814c:	add	r0, r0, #264	; 0x108
    8150:	bl	0 <coda_XmlPrologStateInitExternalEntity>
    8154:	ldr	r3, [pc, #228]	; 8240 <coda_XML_ExternalEntityParserCreate+0x68c>
    8158:	mov	r0, r6
    815c:	str	r3, [r6, #288]	; 0x120
    8160:	add	sp, sp, #116	; 0x74
    8164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8168:	ldr	r8, [sp, #40]	; 0x28
    816c:	b	7ea8 <coda_XML_ExternalEntityParserCreate+0x2f4>
    8170:	ldr	r6, [sp, #8]
    8174:	b	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    8178:	ldr	r3, [sp, #8]
    817c:	add	r0, r0, r0, lsl #1
    8180:	ldr	r3, [r3, #12]
    8184:	lsl	r0, r0, #2
    8188:	blx	r3
    818c:	cmp	r0, #0
    8190:	str	r0, [r7, #20]
    8194:	bne	804c <coda_XML_ExternalEntityParserCreate+0x498>
    8198:	ldr	r6, [sp, #8]
    819c:	mov	r0, r7
    81a0:	ldr	r3, [r6, #20]
    81a4:	blx	r3
    81a8:	b	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    81ac:	ldr	r2, [sp, #4]
    81b0:	mov	r0, r4
    81b4:	add	r3, fp, #132	; 0x84
    81b8:	add	r1, r5, #132	; 0x84
    81bc:	bl	0 <errorProcessor>
    81c0:	cmp	r0, #0
    81c4:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    81c8:	ldrb	r3, [fp, #131]	; 0x83
    81cc:	ldr	r1, [sp, #24]
    81d0:	mov	r0, r6
    81d4:	strb	r3, [r5, #131]	; 0x83
    81d8:	ldrb	r3, [fp, #128]	; 0x80
    81dc:	strb	r3, [r5, #128]	; 0x80
    81e0:	ldrb	r3, [fp, #129]	; 0x81
    81e4:	strb	r3, [r5, #129]	; 0x81
    81e8:	ldrb	r3, [fp, #130]	; 0x82
    81ec:	strb	r3, [r5, #130]	; 0x82
    81f0:	ldrb	r3, [fp, #160]	; 0xa0
    81f4:	strb	r3, [r5, #160]	; 0xa0
    81f8:	ldr	r3, [fp, #164]	; 0xa4
    81fc:	ldr	lr, [fp, #168]	; 0xa8
    8200:	ldr	ip, [fp, #172]	; 0xac
    8204:	ldr	r2, [fp, #180]	; 0xb4
    8208:	str	r3, [r5, #164]	; 0xa4
    820c:	ldr	r3, [fp, #184]	; 0xb8
    8210:	str	lr, [r5, #168]	; 0xa8
    8214:	str	r3, [r5, #184]	; 0xb8
    8218:	str	ip, [r5, #172]	; 0xac
    821c:	str	r2, [r5, #180]	; 0xb4
    8220:	bl	2710 <setContext>
    8224:	cmp	r0, #0
    8228:	ldrne	r3, [pc, #20]	; 8244 <coda_XML_ExternalEntityParserCreate+0x690>
    822c:	strne	r3, [r6, #288]	; 0x120
    8230:	beq	7f08 <coda_XML_ExternalEntityParserCreate+0x354>
    8234:	mov	r0, r6
    8238:	add	sp, sp, #116	; 0x74
    823c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

00008248 <coda_XML_UseParserAsHandlerArg>:
    8248:	str	r0, [r0, #4]
    824c:	bx	lr

00008250 <coda_XML_UseForeignDTD>:
    8250:	ldr	r3, [r0, #496]	; 0x1f0
    8254:	bic	r3, r3, #2
    8258:	cmp	r3, #1
    825c:	strbne	r1, [r0, #505]	; 0x1f9
    8260:	movne	r0, #0
    8264:	moveq	r0, #26
    8268:	bx	lr

0000826c <coda_XML_SetReturnNSTriplet>:
    826c:	ldr	r3, [r0, #496]	; 0x1f0
    8270:	bic	r3, r3, #2
    8274:	cmp	r3, #1
    8278:	bxeq	lr
    827c:	adds	r1, r1, #0
    8280:	movne	r1, #1
    8284:	strb	r1, [r0, #245]	; 0xf5
    8288:	bx	lr

0000828c <coda_XML_SetUserData>:
    828c:	ldr	r2, [r0, #4]
    8290:	ldr	r3, [r0]
    8294:	str	r1, [r0]
    8298:	cmp	r2, r3
    829c:	streq	r1, [r0, #4]
    82a0:	bx	lr

000082a4 <coda_XML_SetBase>:
    82a4:	subs	r3, r1, #0
    82a8:	beq	82d0 <coda_XML_SetBase+0x2c>
    82ac:	push	{r4, lr}
    82b0:	mov	r4, r0
    82b4:	ldr	r0, [r0, #364]	; 0x16c
    82b8:	add	r0, r0, #80	; 0x50
    82bc:	bl	20f0 <poolCopyString>
    82c0:	cmp	r0, #0
    82c4:	strne	r0, [r4, #368]	; 0x170
    82c8:	movne	r0, #1
    82cc:	pop	{r4, pc}
    82d0:	str	r3, [r0, #368]	; 0x170
    82d4:	mov	r0, #1
    82d8:	bx	lr

000082dc <coda_XML_GetBase>:
    82dc:	ldr	r0, [r0, #368]	; 0x170
    82e0:	bx	lr

000082e4 <coda_XML_GetSpecifiedAttributeCount>:
    82e4:	ldr	r0, [r0, #392]	; 0x188
    82e8:	bx	lr

000082ec <coda_XML_GetIdAttributeIndex>:
    82ec:	ldr	r0, [r0, #396]	; 0x18c
    82f0:	bx	lr

000082f4 <coda_XML_SetElementHandler>:
    82f4:	str	r1, [r0, #60]	; 0x3c
    82f8:	str	r2, [r0, #64]	; 0x40
    82fc:	bx	lr

00008300 <coda_XML_SetStartElementHandler>:
    8300:	str	r1, [r0, #60]	; 0x3c
    8304:	bx	lr

00008308 <coda_XML_SetEndElementHandler>:
    8308:	str	r1, [r0, #64]	; 0x40
    830c:	bx	lr

00008310 <coda_XML_SetCharacterDataHandler>:
    8310:	str	r1, [r0, #68]	; 0x44
    8314:	bx	lr

00008318 <coda_XML_SetProcessingInstructionHandler>:
    8318:	str	r1, [r0, #72]	; 0x48
    831c:	bx	lr

00008320 <coda_XML_SetCommentHandler>:
    8320:	str	r1, [r0, #76]	; 0x4c
    8324:	bx	lr

00008328 <coda_XML_SetCdataSectionHandler>:
    8328:	str	r1, [r0, #80]	; 0x50
    832c:	str	r2, [r0, #84]	; 0x54
    8330:	bx	lr

00008334 <coda_XML_SetStartCdataSectionHandler>:
    8334:	str	r1, [r0, #80]	; 0x50
    8338:	bx	lr

0000833c <coda_XML_SetEndCdataSectionHandler>:
    833c:	str	r1, [r0, #84]	; 0x54
    8340:	bx	lr

00008344 <coda_XML_SetDefaultHandler>:
    8344:	mov	r3, #0
    8348:	str	r1, [r0, #88]	; 0x58
    834c:	strb	r3, [r0, #316]	; 0x13c
    8350:	bx	lr

00008354 <coda_XML_SetDefaultHandlerExpand>:
    8354:	mov	r3, #1
    8358:	str	r1, [r0, #88]	; 0x58
    835c:	strb	r3, [r0, #316]	; 0x13c
    8360:	bx	lr

00008364 <coda_XML_SetDoctypeDeclHandler>:
    8364:	str	r1, [r0, #92]	; 0x5c
    8368:	str	r2, [r0, #96]	; 0x60
    836c:	bx	lr

00008370 <coda_XML_SetStartDoctypeDeclHandler>:
    8370:	str	r1, [r0, #92]	; 0x5c
    8374:	bx	lr

00008378 <coda_XML_SetEndDoctypeDeclHandler>:
    8378:	str	r1, [r0, #96]	; 0x60
    837c:	bx	lr

00008380 <coda_XML_SetUnparsedEntityDeclHandler>:
    8380:	str	r1, [r0, #100]	; 0x64
    8384:	bx	lr

00008388 <coda_XML_SetNotationDeclHandler>:
    8388:	str	r1, [r0, #104]	; 0x68
    838c:	bx	lr

00008390 <coda_XML_SetNamespaceDeclHandler>:
    8390:	str	r1, [r0, #108]	; 0x6c
    8394:	str	r2, [r0, #112]	; 0x70
    8398:	bx	lr

0000839c <coda_XML_SetStartNamespaceDeclHandler>:
    839c:	str	r1, [r0, #108]	; 0x6c
    83a0:	bx	lr

000083a4 <coda_XML_SetEndNamespaceDeclHandler>:
    83a4:	str	r1, [r0, #112]	; 0x70
    83a8:	bx	lr

000083ac <coda_XML_SetNotStandaloneHandler>:
    83ac:	str	r1, [r0, #116]	; 0x74
    83b0:	bx	lr

000083b4 <coda_XML_SetExternalEntityRefHandler>:
    83b4:	str	r1, [r0, #120]	; 0x78
    83b8:	bx	lr

000083bc <coda_XML_SetExternalEntityRefHandlerArg>:
    83bc:	cmp	r1, #0
    83c0:	moveq	r1, r0
    83c4:	str	r1, [r0, #124]	; 0x7c
    83c8:	bx	lr

000083cc <coda_XML_SetSkippedEntityHandler>:
    83cc:	str	r1, [r0, #128]	; 0x80
    83d0:	bx	lr

000083d4 <coda_XML_SetUnknownEncodingHandler>:
    83d4:	str	r1, [r0, #132]	; 0x84
    83d8:	str	r2, [r0, #256]	; 0x100
    83dc:	bx	lr

000083e0 <coda_XML_SetElementDeclHandler>:
    83e0:	str	r1, [r0, #136]	; 0x88
    83e4:	bx	lr

000083e8 <coda_XML_SetAttlistDeclHandler>:
    83e8:	str	r1, [r0, #140]	; 0x8c
    83ec:	bx	lr

000083f0 <coda_XML_SetEntityDeclHandler>:
    83f0:	str	r1, [r0, #144]	; 0x90
    83f4:	bx	lr

000083f8 <coda_XML_SetXmlDeclHandler>:
    83f8:	str	r1, [r0, #148]	; 0x94
    83fc:	bx	lr

00008400 <coda_XML_SetParamEntityParsing>:
    8400:	ldr	r3, [r0, #496]	; 0x1f0
    8404:	bic	r3, r3, #2
    8408:	cmp	r3, #1
    840c:	strne	r1, [r0, #508]	; 0x1fc
    8410:	movne	r0, #1
    8414:	moveq	r0, #0
    8418:	bx	lr

0000841c <coda_XML_SetHashSalt>:
    841c:	ldr	r3, [r0, #496]	; 0x1f0
    8420:	bic	r3, r3, #2
    8424:	cmp	r3, #1
    8428:	strne	r1, [r0, #512]	; 0x200
    842c:	movne	r0, #1
    8430:	moveq	r0, #0
    8434:	bx	lr

00008438 <coda_XML_ParseBuffer>:
    8438:	ldr	r3, [r0, #496]	; 0x1f0
    843c:	push	{r4, r5, r6, r7, r8, lr}
    8440:	cmp	r3, #2
    8444:	mov	r4, r0
    8448:	beq	8534 <coda_XML_ParseBuffer+0xfc>
    844c:	cmp	r3, #3
    8450:	beq	8520 <coda_XML_ParseBuffer+0xe8>
    8454:	cmp	r3, #0
    8458:	mov	r6, r2
    845c:	mov	r7, r1
    8460:	beq	84fc <coda_XML_ParseBuffer+0xc4>
    8464:	ldrd	r0, [r4, #40]	; 0x28
    8468:	ldr	r2, [r4, #28]
    846c:	ldr	r3, [r4, #24]
    8470:	adds	r0, r0, r7
    8474:	adc	r1, r1, r7, asr #31
    8478:	add	r2, r2, r7
    847c:	mov	r5, #1
    8480:	strd	r0, [r4, #40]	; 0x28
    8484:	str	r3, [r4, #304]	; 0x130
    8488:	mov	r1, r3
    848c:	strb	r6, [r4, #500]	; 0x1f4
    8490:	str	r2, [r4, #28]
    8494:	str	r2, [r4, #48]	; 0x30
    8498:	str	r5, [r4, #496]	; 0x1f0
    849c:	ldr	r7, [r4, #288]	; 0x120
    84a0:	add	r3, r4, #24
    84a4:	mov	r0, r4
    84a8:	blx	r7
    84ac:	cmp	r0, #0
    84b0:	str	r0, [r4, #292]	; 0x124
    84b4:	bne	8548 <coda_XML_ParseBuffer+0x110>
    84b8:	ldr	r0, [r4, #496]	; 0x1f0
    84bc:	cmp	r0, #1
    84c0:	bls	8564 <coda_XML_ParseBuffer+0x12c>
    84c4:	cmp	r0, #3
    84c8:	moveq	r5, #2
    84cc:	movne	r5, #1
    84d0:	ldr	r2, [r4, #152]	; 0x98
    84d4:	add	r3, r4, #416	; 0x1a0
    84d8:	mov	r0, r2
    84dc:	ldr	r6, [r2, #52]	; 0x34
    84e0:	ldr	r1, [r4, #304]	; 0x130
    84e4:	ldr	r2, [r4, #24]
    84e8:	blx	r6
    84ec:	ldr	r3, [r4, #24]
    84f0:	str	r3, [r4, #304]	; 0x130
    84f4:	mov	r0, r5
    84f8:	pop	{r4, r5, r6, r7, r8, pc}
    84fc:	ldr	r3, [r0, #492]	; 0x1ec
    8500:	cmp	r3, #0
    8504:	bne	8464 <coda_XML_ParseBuffer+0x2c>
    8508:	bl	3098 <startParsing>
    850c:	subs	r5, r0, #0
    8510:	moveq	r3, #1
    8514:	streq	r3, [r4, #292]	; 0x124
    8518:	bne	8464 <coda_XML_ParseBuffer+0x2c>
    851c:	b	84f4 <coda_XML_ParseBuffer+0xbc>
    8520:	mov	r3, #33	; 0x21
    8524:	mov	r5, #0
    8528:	str	r3, [r0, #292]	; 0x124
    852c:	mov	r0, r5
    8530:	pop	{r4, r5, r6, r7, r8, pc}
    8534:	mov	r3, #36	; 0x24
    8538:	mov	r5, #0
    853c:	str	r3, [r0, #292]	; 0x124
    8540:	mov	r0, r5
    8544:	pop	{r4, r5, r6, r7, r8, pc}
    8548:	ldr	r2, [r4, #296]	; 0x128
    854c:	ldr	r3, [pc, #36]	; 8578 <coda_XML_ParseBuffer+0x140>
    8550:	mov	r5, #0
    8554:	str	r2, [r4, #300]	; 0x12c
    8558:	str	r3, [r4, #288]	; 0x120
    855c:	mov	r0, r5
    8560:	pop	{r4, r5, r6, r7, r8, pc}
    8564:	cmp	r6, #0
    8568:	movne	r3, #2
    856c:	strne	r3, [r4, #496]	; 0x1f0
    8570:	beq	84d0 <coda_XML_ParseBuffer+0x98>
    8574:	b	84f4 <coda_XML_ParseBuffer+0xbc>
    8578:	.word	0x00000000

0000857c <coda_XML_GetBuffer>:
    857c:	cmp	r1, #0
    8580:	push	{r4, r5, r6, lr}
    8584:	mov	r4, r0
    8588:	blt	86dc <coda_XML_GetBuffer+0x160>
    858c:	ldr	r3, [r0, #496]	; 0x1f0
    8590:	cmp	r3, #2
    8594:	beq	86b8 <coda_XML_GetBuffer+0x13c>
    8598:	cmp	r3, #3
    859c:	bne	85b0 <coda_XML_GetBuffer+0x34>
    85a0:	mov	r3, #33	; 0x21
    85a4:	str	r3, [r0, #292]	; 0x124
    85a8:	mov	r0, #0
    85ac:	pop	{r4, r5, r6, pc}
    85b0:	ldr	r5, [r0, #32]
    85b4:	ldr	r0, [r0, #28]
    85b8:	sub	r3, r5, r0
    85bc:	cmp	r1, r3
    85c0:	pople	{r4, r5, r6, pc}
    85c4:	ldr	ip, [r4, #24]
    85c8:	ldr	r3, [r4, #8]
    85cc:	sub	r2, r0, ip
    85d0:	adds	r1, r1, r2
    85d4:	sub	lr, ip, r3
    85d8:	bmi	86dc <coda_XML_GetBuffer+0x160>
    85dc:	cmp	lr, #1024	; 0x400
    85e0:	ble	86c8 <coda_XML_GetBuffer+0x14c>
    85e4:	add	r1, r1, #1024	; 0x400
    85e8:	sub	r0, r5, r3
    85ec:	cmp	r1, r0
    85f0:	ble	86ec <coda_XML_GetBuffer+0x170>
    85f4:	cmp	r5, ip
    85f8:	subne	r5, r5, ip
    85fc:	moveq	r5, #1024	; 0x400
    8600:	lsl	r5, r5, #1
    8604:	cmp	r5, r1
    8608:	movge	r3, #0
    860c:	movlt	r3, #1
    8610:	cmp	r5, #0
    8614:	movle	r3, #0
    8618:	cmp	r3, #0
    861c:	bne	8600 <coda_XML_GetBuffer+0x84>
    8620:	cmp	r5, #0
    8624:	ble	86dc <coda_XML_GetBuffer+0x160>
    8628:	ldr	r3, [r4, #12]
    862c:	mov	r0, r5
    8630:	blx	r3
    8634:	subs	r6, r0, #0
    8638:	beq	86dc <coda_XML_GetBuffer+0x160>
    863c:	ldr	r1, [r4, #24]
    8640:	add	r5, r6, r5
    8644:	cmp	r1, #0
    8648:	str	r5, [r4, #32]
    864c:	beq	8720 <coda_XML_GetBuffer+0x1a4>
    8650:	ldr	r5, [r4, #8]
    8654:	ldr	r2, [r4, #28]
    8658:	sub	r5, r1, r5
    865c:	cmp	r5, #1024	; 0x400
    8660:	movge	r5, #1024	; 0x400
    8664:	sub	r2, r2, r1
    8668:	add	r2, r2, r5
    866c:	sub	r1, r1, r5
    8670:	bl	0 <memcpy>
    8674:	ldr	r3, [r4, #20]
    8678:	ldr	r0, [r4, #8]
    867c:	blx	r3
    8680:	ldr	r0, [r4, #28]
    8684:	ldr	r2, [r4, #24]
    8688:	add	r3, r6, r5
    868c:	sub	r0, r0, r2
    8690:	add	r0, r0, r5
    8694:	add	r0, r6, r0
    8698:	str	r6, [r4, #8]
    869c:	str	r0, [r4, #28]
    86a0:	str	r3, [r4, #24]
    86a4:	mov	r3, #0
    86a8:	str	r3, [r4, #300]	; 0x12c
    86ac:	str	r3, [r4, #296]	; 0x128
    86b0:	str	r3, [r4, #304]	; 0x130
    86b4:	pop	{r4, r5, r6, pc}
    86b8:	mov	r3, #36	; 0x24
    86bc:	str	r3, [r0, #292]	; 0x124
    86c0:	mov	r0, #0
    86c4:	pop	{r4, r5, r6, pc}
    86c8:	add	r1, r1, lr
    86cc:	sub	r3, r5, r3
    86d0:	cmp	r1, r3
    86d4:	ble	86a4 <coda_XML_GetBuffer+0x128>
    86d8:	b	85f4 <coda_XML_GetBuffer+0x78>
    86dc:	mov	r3, #1
    86e0:	str	r3, [r4, #292]	; 0x124
    86e4:	mov	r0, #0
    86e8:	pop	{r4, r5, r6, pc}
    86ec:	sub	r5, lr, #1024	; 0x400
    86f0:	add	r1, r3, r5
    86f4:	mov	r0, r3
    86f8:	add	r2, r2, #1024	; 0x400
    86fc:	bl	0 <memmove>
    8700:	ldr	r0, [r4, #28]
    8704:	ldr	r3, [r4, #24]
    8708:	rsb	lr, r5, #0
    870c:	add	r0, r0, lr
    8710:	add	lr, r3, lr
    8714:	str	r0, [r4, #28]
    8718:	str	lr, [r4, #24]
    871c:	b	86a4 <coda_XML_GetBuffer+0x128>
    8720:	ldr	r0, [r4, #28]
    8724:	str	r6, [r4, #8]
    8728:	add	r0, r6, r0
    872c:	str	r6, [r4, #24]
    8730:	str	r0, [r4, #28]
    8734:	b	86a4 <coda_XML_GetBuffer+0x128>

00008738 <coda_XML_Parse>:
    8738:	ldr	ip, [r0, #496]	; 0x1f0
    873c:	push	{r4, r5, r6, r7, r8, lr}
    8740:	cmp	ip, #2
    8744:	mov	r4, r0
    8748:	beq	87c0 <coda_XML_Parse+0x88>
    874c:	cmp	ip, #3
    8750:	beq	87b0 <coda_XML_Parse+0x78>
    8754:	cmp	ip, #0
    8758:	mov	r7, r3
    875c:	mov	r6, r2
    8760:	mov	r8, r1
    8764:	beq	878c <coda_XML_Parse+0x54>
    8768:	mov	r5, #1
    876c:	cmp	r6, #0
    8770:	str	r5, [r4, #496]	; 0x1f0
    8774:	bne	87d0 <coda_XML_Parse+0x98>
    8778:	cmp	r7, #0
    877c:	strb	r7, [r4, #500]	; 0x1f4
    8780:	bne	8804 <coda_XML_Parse+0xcc>
    8784:	mov	r0, r5
    8788:	pop	{r4, r5, r6, r7, r8, pc}
    878c:	ldr	r3, [r0, #492]	; 0x1ec
    8790:	cmp	r3, #0
    8794:	bne	8768 <coda_XML_Parse+0x30>
    8798:	bl	3098 <startParsing>
    879c:	cmp	r0, #0
    87a0:	bne	8768 <coda_XML_Parse+0x30>
    87a4:	mov	r3, #1
    87a8:	str	r3, [r4, #292]	; 0x124
    87ac:	pop	{r4, r5, r6, r7, r8, pc}
    87b0:	mov	r3, #33	; 0x21
    87b4:	str	r3, [r0, #292]	; 0x124
    87b8:	mov	r0, #0
    87bc:	pop	{r4, r5, r6, r7, r8, pc}
    87c0:	mov	r3, #36	; 0x24
    87c4:	str	r3, [r0, #292]	; 0x124
    87c8:	mov	r0, #0
    87cc:	pop	{r4, r5, r6, r7, r8, pc}
    87d0:	mov	r1, r6
    87d4:	mov	r0, r4
    87d8:	bl	857c <coda_XML_GetBuffer>
    87dc:	subs	ip, r0, #0
    87e0:	beq	87b8 <coda_XML_Parse+0x80>
    87e4:	mov	r1, r8
    87e8:	mov	r2, r6
    87ec:	bl	0 <memcpy>
    87f0:	mov	r2, r7
    87f4:	mov	r1, r6
    87f8:	mov	r0, r4
    87fc:	pop	{r4, r5, r6, r7, r8, lr}
    8800:	b	8438 <coda_XML_ParseBuffer>
    8804:	ldr	r1, [r4, #24]
    8808:	ldr	r2, [r4, #28]
    880c:	str	r1, [r4, #304]	; 0x130
    8810:	str	r2, [r4, #48]	; 0x30
    8814:	ldr	r7, [r4, #288]	; 0x120
    8818:	add	r3, r4, #24
    881c:	mov	r0, r4
    8820:	blx	r7
    8824:	cmp	r0, #0
    8828:	str	r0, [r4, #292]	; 0x124
    882c:	bne	8870 <coda_XML_Parse+0x138>
    8830:	ldr	r3, [r4, #496]	; 0x1f0
    8834:	cmp	r3, r5
    8838:	bls	8888 <coda_XML_Parse+0x150>
    883c:	cmp	r3, #3
    8840:	bne	8784 <coda_XML_Parse+0x4c>
    8844:	ldr	r2, [r4, #152]	; 0x98
    8848:	add	r3, r4, #416	; 0x1a0
    884c:	mov	r0, r2
    8850:	ldr	r5, [r2, #52]	; 0x34
    8854:	ldr	r1, [r4, #304]	; 0x130
    8858:	ldr	r2, [r4, #24]
    885c:	blx	r5
    8860:	ldr	r3, [r4, #24]
    8864:	mov	r0, #2
    8868:	str	r3, [r4, #304]	; 0x130
    886c:	pop	{r4, r5, r6, r7, r8, pc}
    8870:	ldr	r2, [r4, #296]	; 0x128
    8874:	ldr	r3, [pc, #28]	; 8898 <coda_XML_Parse+0x160>
    8878:	mov	r0, r6
    887c:	str	r2, [r4, #300]	; 0x12c
    8880:	str	r3, [r4, #288]	; 0x120
    8884:	pop	{r4, r5, r6, r7, r8, pc}
    8888:	mov	r3, #2
    888c:	mov	r0, r5
    8890:	str	r3, [r4, #496]	; 0x1f0
    8894:	pop	{r4, r5, r6, r7, r8, pc}
    8898:	.word	0x00000000

0000889c <coda_XML_StopParser>:
    889c:	ldr	r3, [r0, #496]	; 0x1f0
    88a0:	cmp	r3, #2
    88a4:	beq	88fc <coda_XML_StopParser+0x60>
    88a8:	cmp	r3, #3
    88ac:	bne	88cc <coda_XML_StopParser+0x30>
    88b0:	cmp	r1, #0
    88b4:	bne	8910 <coda_XML_StopParser+0x74>
    88b8:	mov	r3, #2
    88bc:	str	r3, [r0, #496]	; 0x1f0
    88c0:	mov	r3, #1
    88c4:	mov	r0, r3
    88c8:	bx	lr
    88cc:	cmp	r1, #0
    88d0:	beq	88b8 <coda_XML_StopParser+0x1c>
    88d4:	ldrb	r3, [r0, #504]	; 0x1f8
    88d8:	cmp	r3, #0
    88dc:	movne	r3, #37	; 0x25
    88e0:	strne	r3, [r0, #292]	; 0x124
    88e4:	moveq	r3, #1
    88e8:	movne	r3, #0
    88ec:	moveq	r2, #3
    88f0:	streq	r2, [r0, #496]	; 0x1f0
    88f4:	mov	r0, r3
    88f8:	bx	lr
    88fc:	mov	r3, #36	; 0x24
    8900:	str	r3, [r0, #292]	; 0x124
    8904:	mov	r3, #0
    8908:	mov	r0, r3
    890c:	bx	lr
    8910:	mov	r3, #33	; 0x21
    8914:	str	r3, [r0, #292]	; 0x124
    8918:	mov	r3, #0
    891c:	mov	r0, r3
    8920:	bx	lr

00008924 <coda_XML_ResumeParser>:
    8924:	ldr	r2, [r0, #496]	; 0x1f0
    8928:	push	{r4, r5, r6, lr}
    892c:	cmp	r2, #3
    8930:	mov	r4, r0
    8934:	beq	894c <coda_XML_ResumeParser+0x28>
    8938:	mov	r5, #0
    893c:	mov	r2, #34	; 0x22
    8940:	str	r2, [r0, #292]	; 0x124
    8944:	mov	r0, r5
    8948:	pop	{r4, r5, r6, pc}
    894c:	mov	r5, #1
    8950:	str	r5, [r0, #496]	; 0x1f0
    8954:	ldr	r6, [r0, #288]	; 0x120
    8958:	add	r3, r0, #24
    895c:	ldr	r2, [r0, #48]	; 0x30
    8960:	ldr	r1, [r0, #24]
    8964:	blx	r6
    8968:	cmp	r0, #0
    896c:	str	r0, [r4, #292]	; 0x124
    8970:	bne	89b8 <coda_XML_ResumeParser+0x94>
    8974:	ldr	r3, [r4, #496]	; 0x1f0
    8978:	cmp	r3, #1
    897c:	bls	89d0 <coda_XML_ResumeParser+0xac>
    8980:	cmp	r3, #3
    8984:	moveq	r5, #2
    8988:	movne	r5, #1
    898c:	ldr	r2, [r4, #152]	; 0x98
    8990:	add	r3, r4, #416	; 0x1a0
    8994:	mov	r0, r2
    8998:	ldr	r6, [r2, #52]	; 0x34
    899c:	ldr	r1, [r4, #304]	; 0x130
    89a0:	ldr	r2, [r4, #24]
    89a4:	blx	r6
    89a8:	ldr	r3, [r4, #24]
    89ac:	mov	r0, r5
    89b0:	str	r3, [r4, #304]	; 0x130
    89b4:	pop	{r4, r5, r6, pc}
    89b8:	ldr	r2, [r4, #296]	; 0x128
    89bc:	ldr	r3, [pc, #36]	; 89e8 <coda_XML_ResumeParser+0xc4>
    89c0:	str	r2, [r4, #300]	; 0x12c
    89c4:	str	r3, [r4, #288]	; 0x120
    89c8:	mov	r5, #0
    89cc:	b	8944 <coda_XML_ResumeParser+0x20>
    89d0:	ldrb	r3, [r4, #500]	; 0x1f4
    89d4:	cmp	r3, #0
    89d8:	movne	r3, #2
    89dc:	strne	r3, [r4, #496]	; 0x1f0
    89e0:	beq	898c <coda_XML_ResumeParser+0x68>
    89e4:	b	8944 <coda_XML_ResumeParser+0x20>
    89e8:	.word	0x00000000

000089ec <coda_XML_GetParsingStatus>:
    89ec:	subs	r3, r1, #0
    89f0:	beq	8a04 <coda_XML_GetParsingStatus+0x18>
    89f4:	add	r0, r0, #496	; 0x1f0
    89f8:	ldm	r0, {r0, r1}
    89fc:	stm	r3, {r0, r1}
    8a00:	bx	lr
    8a04:	push	{r4, lr}
    8a08:	ldr	r3, [pc, #12]	; 8a1c <coda_XML_GetParsingStatus+0x30>
    8a0c:	ldr	r2, [pc, #12]	; 8a20 <coda_XML_GetParsingStatus+0x34>
    8a10:	ldr	r1, [pc, #12]	; 8a24 <coda_XML_GetParsingStatus+0x38>
    8a14:	ldr	r0, [pc, #12]	; 8a28 <coda_XML_GetParsingStatus+0x3c>
    8a18:	bl	0 <__assert_fail>
    8a1c:	.word	0x000000d0
    8a20:	.word	0x0000072b
    8a24:	.word	0x00000000
    8a28:	.word	0x00000050

00008a2c <coda_XML_GetErrorCode>:
    8a2c:	ldr	r0, [r0, #292]	; 0x124
    8a30:	bx	lr

00008a34 <coda_XML_GetCurrentByteIndex>:
    8a34:	ldr	r2, [r0, #296]	; 0x128
    8a38:	cmp	r2, #0
    8a3c:	beq	8a58 <coda_XML_GetCurrentByteIndex+0x24>
    8a40:	ldr	r3, [r0, #48]	; 0x30
    8a44:	ldrd	r0, [r0, #40]	; 0x28
    8a48:	sub	r3, r3, r2
    8a4c:	subs	r0, r0, r3
    8a50:	sbc	r1, r1, r3, asr #31
    8a54:	bx	lr
    8a58:	mvn	r0, #0
    8a5c:	mvn	r1, #0
    8a60:	bx	lr

00008a64 <coda_XML_GetCurrentByteCount>:
    8a64:	ldr	r3, [r0, #300]	; 0x12c
    8a68:	cmp	r3, #0
    8a6c:	beq	8a80 <coda_XML_GetCurrentByteCount+0x1c>
    8a70:	ldr	r0, [r0, #296]	; 0x128
    8a74:	cmp	r0, #0
    8a78:	subne	r0, r3, r0
    8a7c:	bx	lr
    8a80:	mov	r0, r3
    8a84:	bx	lr

00008a88 <coda_XML_GetInputContext>:
    8a88:	ldr	r3, [r0, #296]	; 0x128
    8a8c:	cmp	r3, #0
    8a90:	beq	8ab8 <coda_XML_GetInputContext+0x30>
    8a94:	ldr	ip, [r0, #8]
    8a98:	cmp	ip, #0
    8a9c:	subne	r3, r3, ip
    8aa0:	ldrne	r0, [r0, #28]
    8aa4:	moveq	r3, ip
    8aa8:	strne	r3, [r1]
    8aac:	movne	r3, ip
    8ab0:	subne	r0, r0, ip
    8ab4:	strne	r0, [r2]
    8ab8:	mov	r0, r3
    8abc:	bx	lr

00008ac0 <coda_XML_GetCurrentLineNumber>:
    8ac0:	ldr	r2, [r0, #296]	; 0x128
    8ac4:	push	{r4, r5, r6, lr}
    8ac8:	cmp	r2, #0
    8acc:	beq	8adc <coda_XML_GetCurrentLineNumber+0x1c>
    8ad0:	ldr	r1, [r0, #304]	; 0x130
    8ad4:	cmp	r2, r1
    8ad8:	bcs	8af0 <coda_XML_GetCurrentLineNumber+0x30>
    8adc:	add	r5, r0, #416	; 0x1a0
    8ae0:	ldrd	r0, [r5]
    8ae4:	adds	r0, r0, #1
    8ae8:	adc	r1, r1, #0
    8aec:	pop	{r4, r5, r6, pc}
    8af0:	mov	r4, r0
    8af4:	ldr	r0, [r0, #152]	; 0x98
    8af8:	add	r5, r4, #416	; 0x1a0
    8afc:	mov	r3, r5
    8b00:	ldr	r6, [r0, #52]	; 0x34
    8b04:	blx	r6
    8b08:	ldr	r3, [r4, #296]	; 0x128
    8b0c:	str	r3, [r4, #304]	; 0x130
    8b10:	b	8ae0 <coda_XML_GetCurrentLineNumber+0x20>

00008b14 <coda_XML_GetCurrentColumnNumber>:
    8b14:	ldr	r2, [r0, #296]	; 0x128
    8b18:	push	{r4, r5, r6, lr}
    8b1c:	cmp	r2, #0
    8b20:	mov	r4, r0
    8b24:	beq	8b4c <coda_XML_GetCurrentColumnNumber+0x38>
    8b28:	ldr	r1, [r0, #304]	; 0x130
    8b2c:	cmp	r2, r1
    8b30:	bcc	8b4c <coda_XML_GetCurrentColumnNumber+0x38>
    8b34:	ldr	r0, [r0, #152]	; 0x98
    8b38:	add	r3, r4, #416	; 0x1a0
    8b3c:	ldr	r5, [r0, #52]	; 0x34
    8b40:	blx	r5
    8b44:	ldr	r3, [r4, #296]	; 0x128
    8b48:	str	r3, [r4, #304]	; 0x130
    8b4c:	add	r4, r4, #432	; 0x1b0
    8b50:	ldrd	r0, [r4, #-8]
    8b54:	pop	{r4, r5, r6, pc}

00008b58 <coda_XML_FreeContentModel>:
    8b58:	ldr	r3, [r0, #20]
    8b5c:	mov	r0, r1
    8b60:	bx	r3

00008b64 <coda_XML_MemMalloc>:
    8b64:	ldr	r3, [r0, #12]
    8b68:	mov	r0, r1
    8b6c:	bx	r3

00008b70 <coda_XML_MemRealloc>:
    8b70:	mov	ip, r1
    8b74:	ldr	r3, [r0, #16]
    8b78:	mov	r1, r2
    8b7c:	mov	r0, ip
    8b80:	bx	r3

00008b84 <coda_XML_MemFree>:
    8b84:	ldr	r3, [r0, #20]
    8b88:	mov	r0, r1
    8b8c:	bx	r3

00008b90 <coda_XML_DefaultCurrent>:
    8b90:	ldr	r3, [r0, #88]	; 0x58
    8b94:	cmp	r3, #0
    8b98:	bxeq	lr
    8b9c:	ldr	r2, [r0, #308]	; 0x134
    8ba0:	cmp	r2, #0
    8ba4:	beq	8bb4 <coda_XML_DefaultCurrent+0x24>
    8ba8:	ldr	r1, [r0, #236]	; 0xec
    8bac:	ldm	r2, {r2, r3}
    8bb0:	b	90 <reportDefault>
    8bb4:	ldr	r3, [r0, #300]	; 0x12c
    8bb8:	ldr	r2, [r0, #296]	; 0x128
    8bbc:	ldr	r1, [r0, #152]	; 0x98
    8bc0:	b	90 <reportDefault>

00008bc4 <coda_XML_ErrorString>:
    8bc4:	sub	r3, r0, #1
    8bc8:	cmp	r3, #39	; 0x27
    8bcc:	ldrls	r3, [pc, #12]	; 8be0 <coda_XML_ErrorString+0x1c>
    8bd0:	addls	r0, r3, r0, lsl #2
    8bd4:	ldrls	r0, [r0, #236]	; 0xec
    8bd8:	movhi	r0, #0
    8bdc:	bx	lr
    8be0:	.word	0x00000000

00008be4 <coda_XML_ExpatVersion>:
    8be4:	ldr	r0, [pc]	; 8bec <coda_XML_ExpatVersion+0x8>
    8be8:	bx	lr
    8bec:	.word	0x00000060

00008bf0 <coda_XML_ExpatVersionInfo>:
    8bf0:	mov	r2, #1
    8bf4:	mov	r1, #2
    8bf8:	str	r2, [r0, #8]
    8bfc:	stm	r0, {r1, r2}
    8c00:	bx	lr

00008c04 <coda_XML_GetFeatureList>:
    8c04:	ldr	r0, [pc]	; 8c0c <coda_XML_GetFeatureList+0x8>
    8c08:	bx	lr
    8c0c:	.word	0x00000190

Disassembly of section .text.unlikely:

00000000 <copyEntityTable>:
   0:	ldr	ip, [r3, #8]
   4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	mov	r7, #0
   c:	ldr	r8, [r3]
  10:	sub	sp, sp, #20
  14:	mov	r4, r2
  18:	mov	r9, r7
  1c:	add	r3, r8, ip, lsl #2
  20:	stmib	sp, {r0, r1}
  24:	str	r3, [sp]
  28:	ldr	r3, [sp]
  2c:	cmp	r8, r3
  30:	beq	44 <copyEntityTable+0x44>
  34:	ldr	r5, [r8], #4
  38:	cmp	r5, #0
  3c:	beq	28 <copyEntityTable+0x28>
  40:	b	4c <copyEntityTable+0x4c>
  44:	mov	r0, #1
  48:	b	1c4 <copyEntityTable+0x1c4>
  4c:	ldr	r1, [r5]
  50:	mov	r0, r4
  54:	bl	20f0 <poolCopyString>
  58:	subs	r2, r0, #0
  5c:	beq	74 <copyEntityTable+0x74>
  60:	mov	r3, #36	; 0x24
  64:	ldmib	sp, {r0, r1}
  68:	bl	9d8 <lookup>
  6c:	subs	r6, r0, #0
  70:	bne	7c <copyEntityTable+0x7c>
  74:	mov	r0, #0
  78:	b	1c4 <copyEntityTable+0x1c4>
  7c:	ldr	r1, [r5, #16]
  80:	cmp	r1, #0
  84:	beq	f0 <copyEntityTable+0xf0>
  88:	mov	r0, r4
  8c:	bl	20f0 <poolCopyString>
  90:	cmp	r0, #0
  94:	beq	74 <copyEntityTable+0x74>
  98:	ldr	sl, [r5, #20]
  9c:	str	r0, [r6, #16]
  a0:	cmp	sl, #0
  a4:	beq	cc <copyEntityTable+0xcc>
  a8:	cmp	r9, sl
  ac:	beq	c8 <copyEntityTable+0xc8>
  b0:	mov	r1, sl
  b4:	mov	r0, r4
  b8:	bl	20f0 <poolCopyString>
  bc:	subs	r7, r0, #0
  c0:	beq	74 <copyEntityTable+0x74>
  c4:	mov	r9, sl
  c8:	str	r7, [r6, #20]
  cc:	ldr	r1, [r5, #24]
  d0:	cmp	r1, #0
  d4:	beq	190 <copyEntityTable+0x190>
  d8:	mov	r0, r4
  dc:	bl	20f0 <poolCopyString>
  e0:	cmp	r0, #0
  e4:	beq	74 <copyEntityTable+0x74>
  e8:	str	r0, [r6, #24]
  ec:	b	190 <copyEntityTable+0x190>
  f0:	ldr	r3, [r4, #12]
  f4:	ldr	sl, [r5, #4]
  f8:	cmp	r3, #0
  fc:	ldr	fp, [r5, #8]
 100:	beq	110 <copyEntityTable+0x110>
 104:	str	r5, [sp, #12]
 108:	mov	r5, sl
 10c:	b	144 <copyEntityTable+0x144>
 110:	mov	r0, r4
 114:	bl	ec8 <poolGrow>
 118:	cmp	r0, #0
 11c:	bne	104 <copyEntityTable+0x104>
 120:	b	74 <copyEntityTable+0x74>
 124:	ldr	r1, [r4, #8]
 128:	cmp	r2, r1
 12c:	beq	15c <copyEntityTable+0x15c>
 130:	ldr	r2, [r4, #12]
 134:	add	r1, r2, #1
 138:	str	r1, [r4, #12]
 13c:	ldrb	r1, [r5], #1
 140:	strb	r1, [r2]
 144:	sub	r2, fp, r5
 148:	add	r2, sl, r2
 14c:	cmp	r2, #0
 150:	ldr	r2, [r4, #12]
 154:	bgt	124 <copyEntityTable+0x124>
 158:	b	170 <copyEntityTable+0x170>
 15c:	mov	r0, r4
 160:	bl	ec8 <poolGrow>
 164:	cmp	r0, #0
 168:	bne	130 <copyEntityTable+0x130>
 16c:	b	74 <copyEntityTable+0x74>
 170:	ldr	r3, [r4, #16]
 174:	ldr	r5, [sp, #12]
 178:	cmp	r3, #0
 17c:	str	r2, [r4, #16]
 180:	beq	74 <copyEntityTable+0x74>
 184:	ldr	r2, [r5, #8]
 188:	str	r3, [r6, #4]
 18c:	str	r2, [r6, #8]
 190:	ldr	r1, [r5, #28]
 194:	cmp	r1, #0
 198:	beq	1b0 <copyEntityTable+0x1b0>
 19c:	mov	r0, r4
 1a0:	bl	20f0 <poolCopyString>
 1a4:	cmp	r0, #0
 1a8:	beq	74 <copyEntityTable+0x74>
 1ac:	str	r0, [r6, #28]
 1b0:	ldrb	r3, [r5, #33]	; 0x21
 1b4:	strb	r3, [r6, #33]	; 0x21
 1b8:	ldrb	r3, [r5, #34]	; 0x22
 1bc:	strb	r3, [r6, #34]	; 0x22
 1c0:	b	28 <copyEntityTable+0x28>
 1c4:	add	sp, sp, #20
 1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
