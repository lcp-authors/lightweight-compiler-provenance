
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_tree_node_new>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	str	r0, [sp, #8]
      10:	movw	r0, #28
      14:	bl	0 <malloc>
      18:	str	r0, [sp, #4]
      1c:	ldr	r0, [sp, #4]
      20:	movw	lr, #0
      24:	cmp	r0, lr
      28:	bne	5c <coda_tree_node_new+0x5c>
      2c:	mvn	r0, #0
      30:	movw	r1, #0
      34:	movt	r1, #0
      38:	movw	r2, #28
      3c:	movw	r3, #0
      40:	movt	r3, #0
      44:	movw	ip, #53	; 0x35
      48:	str	ip, [sp]
      4c:	bl	0 <coda_set_error>
      50:	movw	r0, #0
      54:	str	r0, [fp, #-4]
      58:	b	a4 <coda_tree_node_new+0xa4>
      5c:	ldr	r0, [sp, #8]
      60:	ldr	r1, [sp, #4]
      64:	str	r0, [r1]
      68:	ldr	r0, [sp, #4]
      6c:	movw	r1, #0
      70:	str	r1, [r0, #4]
      74:	ldr	r0, [sp, #4]
      78:	str	r1, [r0, #8]
      7c:	ldr	r0, [sp, #4]
      80:	str	r1, [r0, #12]
      84:	ldr	r0, [sp, #4]
      88:	str	r1, [r0, #16]
      8c:	ldr	r0, [sp, #4]
      90:	str	r1, [r0, #20]
      94:	ldr	r0, [sp, #4]
      98:	str	r1, [r0, #24]
      9c:	ldr	r0, [sp, #4]
      a0:	str	r0, [fp, #-4]
      a4:	ldr	r0, [fp, #-4]
      a8:	mov	sp, fp
      ac:	pop	{fp, pc}

000000b0 <coda_tree_node_delete>:
      b0:	push	{fp, lr}
      b4:	mov	fp, sp
      b8:	sub	sp, sp, #16
      bc:	str	r0, [fp, #-4]
      c0:	str	r1, [sp, #8]
      c4:	ldr	r0, [fp, #-4]
      c8:	ldr	r0, [r0, #12]
      cc:	movw	r1, #0
      d0:	cmp	r0, r1
      d4:	beq	e8 <coda_tree_node_delete+0x38>
      d8:	ldr	r0, [fp, #-4]
      dc:	ldr	r0, [r0, #12]
      e0:	ldr	r1, [sp, #8]
      e4:	bl	b0 <coda_tree_node_delete>
      e8:	ldr	r0, [fp, #-4]
      ec:	ldr	r0, [r0, #20]
      f0:	movw	r1, #0
      f4:	cmp	r0, r1
      f8:	beq	108 <coda_tree_node_delete+0x58>
      fc:	ldr	r0, [fp, #-4]
     100:	ldr	r0, [r0, #20]
     104:	bl	0 <free>
     108:	ldr	r0, [fp, #-4]
     10c:	ldr	r0, [r0, #24]
     110:	movw	r1, #0
     114:	cmp	r0, r1
     118:	beq	194 <coda_tree_node_delete+0xe4>
     11c:	movw	r0, #0
     120:	str	r0, [sp, #4]
     124:	ldr	r0, [sp, #4]
     128:	ldr	r1, [fp, #-4]
     12c:	ldr	r1, [r1, #16]
     130:	cmp	r0, r1
     134:	bge	188 <coda_tree_node_delete+0xd8>
     138:	ldr	r0, [fp, #-4]
     13c:	ldr	r0, [r0, #24]
     140:	ldr	r1, [sp, #4]
     144:	add	r0, r0, r1, lsl #2
     148:	ldr	r0, [r0]
     14c:	movw	r1, #0
     150:	cmp	r0, r1
     154:	beq	174 <coda_tree_node_delete+0xc4>
     158:	ldr	r0, [fp, #-4]
     15c:	ldr	r0, [r0, #24]
     160:	ldr	r1, [sp, #4]
     164:	add	r0, r0, r1, lsl #2
     168:	ldr	r0, [r0]
     16c:	ldr	r1, [sp, #8]
     170:	bl	b0 <coda_tree_node_delete>
     174:	b	178 <coda_tree_node_delete+0xc8>
     178:	ldr	r0, [sp, #4]
     17c:	add	r0, r0, #1
     180:	str	r0, [sp, #4]
     184:	b	124 <coda_tree_node_delete+0x74>
     188:	ldr	r0, [fp, #-4]
     18c:	ldr	r0, [r0, #24]
     190:	bl	0 <free>
     194:	ldr	r0, [fp, #-4]
     198:	ldr	r0, [r0, #8]
     19c:	movw	r1, #0
     1a0:	cmp	r0, r1
     1a4:	beq	240 <coda_tree_node_delete+0x190>
     1a8:	ldr	r0, [sp, #8]
     1ac:	movw	r1, #0
     1b0:	cmp	r0, r1
     1b4:	beq	234 <coda_tree_node_delete+0x184>
     1b8:	movw	r0, #0
     1bc:	str	r0, [sp, #4]
     1c0:	ldr	r0, [sp, #4]
     1c4:	ldr	r1, [fp, #-4]
     1c8:	ldr	r1, [r1, #4]
     1cc:	cmp	r0, r1
     1d0:	bge	230 <coda_tree_node_delete+0x180>
     1d4:	ldr	r0, [fp, #-4]
     1d8:	ldr	r0, [r0, #8]
     1dc:	ldr	r1, [sp, #4]
     1e0:	add	r0, r0, r1, lsl #2
     1e4:	ldr	r0, [r0]
     1e8:	movw	r1, #0
     1ec:	cmp	r0, r1
     1f0:	beq	21c <coda_tree_node_delete+0x16c>
     1f4:	ldr	r0, [sp, #8]
     1f8:	ldr	r1, [fp, #-4]
     1fc:	ldr	r1, [r1, #8]
     200:	ldr	r2, [sp, #4]
     204:	add	r1, r1, r2, lsl #2
     208:	ldr	r1, [r1]
     20c:	str	r0, [sp]
     210:	mov	r0, r1
     214:	ldr	r1, [sp]
     218:	blx	r1
     21c:	b	220 <coda_tree_node_delete+0x170>
     220:	ldr	r0, [sp, #4]
     224:	add	r0, r0, #1
     228:	str	r0, [sp, #4]
     22c:	b	1c0 <coda_tree_node_delete+0x110>
     230:	b	234 <coda_tree_node_delete+0x184>
     234:	ldr	r0, [fp, #-4]
     238:	ldr	r0, [r0, #8]
     23c:	bl	0 <free>
     240:	ldr	r0, [fp, #-4]
     244:	bl	0 <free>
     248:	mov	sp, fp
     24c:	pop	{fp, pc}

00000250 <coda_tree_node_add_item_for_path>:
     250:	push	{fp, lr}
     254:	mov	fp, sp
     258:	sub	sp, sp, #104	; 0x68
     25c:	str	r0, [fp, #-8]
     260:	str	r1, [fp, #-12]
     264:	str	r2, [fp, #-16]
     268:	str	r3, [fp, #-20]	; 0xffffffec
     26c:	movw	r0, #0
     270:	str	r0, [fp, #-28]	; 0xffffffe4
     274:	ldr	r0, [fp, #-12]
     278:	ldr	r1, [fp, #-28]	; 0xffffffe4
     27c:	add	r0, r0, r1
     280:	ldrb	r0, [r0]
     284:	cmp	r0, #47	; 0x2f
     288:	bne	30c <coda_tree_node_add_item_for_path+0xbc>
     28c:	ldr	r0, [fp, #-12]
     290:	ldr	r1, [fp, #-28]	; 0xffffffe4
     294:	add	r1, r1, #1
     298:	add	r0, r0, r1
     29c:	ldrb	r0, [r0]
     2a0:	cmp	r0, #0
     2a4:	beq	2fc <coda_tree_node_add_item_for_path+0xac>
     2a8:	ldr	r0, [fp, #-12]
     2ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2b0:	add	r1, r1, #1
     2b4:	add	r0, r0, r1
     2b8:	ldrb	r0, [r0]
     2bc:	cmp	r0, #47	; 0x2f
     2c0:	beq	2fc <coda_tree_node_add_item_for_path+0xac>
     2c4:	ldr	r0, [fp, #-12]
     2c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2cc:	add	r1, r1, #1
     2d0:	add	r0, r0, r1
     2d4:	ldrb	r0, [r0]
     2d8:	cmp	r0, #91	; 0x5b
     2dc:	beq	2fc <coda_tree_node_add_item_for_path+0xac>
     2e0:	ldr	r0, [fp, #-12]
     2e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2e8:	add	r1, r1, #1
     2ec:	add	r0, r0, r1
     2f0:	ldrb	r0, [r0]
     2f4:	cmp	r0, #64	; 0x40
     2f8:	bne	308 <coda_tree_node_add_item_for_path+0xb8>
     2fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     300:	add	r0, r0, #1
     304:	str	r0, [fp, #-28]	; 0xffffffe4
     308:	b	30c <coda_tree_node_add_item_for_path+0xbc>
     30c:	b	310 <coda_tree_node_add_item_for_path+0xc0>
     310:	ldr	r0, [fp, #-12]
     314:	ldr	r1, [fp, #-28]	; 0xffffffe4
     318:	add	r0, r0, r1
     31c:	ldrb	r0, [r0]
     320:	cmp	r0, #0
     324:	beq	770 <coda_tree_node_add_item_for_path+0x520>
     328:	ldr	r0, [fp, #-12]
     32c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     330:	add	r0, r0, r1
     334:	ldrb	r0, [r0]
     338:	cmp	r0, #64	; 0x40
     33c:	bne	378 <coda_tree_node_add_item_for_path+0x128>
     340:	ldr	r0, [fp, #-8]
     344:	mvn	r1, #0
     348:	sub	r2, fp, #8
     34c:	movw	r3, #1
     350:	bl	7e4 <tree_node_get_node_for_index>
     354:	cmp	r0, #0
     358:	beq	368 <coda_tree_node_add_item_for_path+0x118>
     35c:	mvn	r0, #0
     360:	str	r0, [fp, #-4]
     364:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     368:	ldr	r0, [fp, #-28]	; 0xffffffe4
     36c:	add	r0, r0, #1
     370:	str	r0, [fp, #-28]	; 0xffffffe4
     374:	b	76c <coda_tree_node_add_item_for_path+0x51c>
     378:	ldr	r0, [fp, #-8]
     37c:	ldr	r0, [r0]
     380:	sub	r1, fp, #24
     384:	bl	0 <coda_type_get_class>
     388:	ldr	r1, [fp, #-24]	; 0xffffffe8
     38c:	cmp	r1, #6
     390:	str	r0, [sp, #48]	; 0x30
     394:	bne	3cc <coda_tree_node_add_item_for_path+0x17c>
     398:	ldr	r0, [fp, #-8]
     39c:	ldr	r0, [r0]
     3a0:	sub	r1, fp, #36	; 0x24
     3a4:	bl	0 <coda_type_get_special_base_type>
     3a8:	cmp	r0, #0
     3ac:	beq	3bc <coda_tree_node_add_item_for_path+0x16c>
     3b0:	mvn	r0, #0
     3b4:	str	r0, [fp, #-4]
     3b8:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     3bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     3c0:	sub	r1, fp, #24
     3c4:	bl	0 <coda_type_get_class>
     3c8:	str	r0, [sp, #44]	; 0x2c
     3cc:	ldr	r0, [fp, #-12]
     3d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3d4:	add	r0, r0, r1
     3d8:	ldrb	r0, [r0]
     3dc:	cmp	r0, #91	; 0x5b
     3e0:	bne	5c8 <coda_tree_node_add_item_for_path+0x378>
     3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3e8:	cmp	r0, #1
     3ec:	beq	430 <coda_tree_node_add_item_for_path+0x1e0>
     3f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
     3f4:	ldr	r3, [fp, #-12]
     3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     3fc:	str	r2, [sp, #40]	; 0x28
     400:	str	r3, [sp, #36]	; 0x24
     404:	bl	0 <coda_type_get_class_name>
     408:	mvn	r2, #99	; 0x63
     40c:	str	r0, [sp, #32]
     410:	mov	r0, r2
     414:	movw	r1, #0
     418:	movt	r1, #0
     41c:	ldr	r2, [sp, #40]	; 0x28
     420:	ldr	r3, [sp, #36]	; 0x24
     424:	ldr	lr, [sp, #32]
     428:	str	lr, [sp]
     42c:	bl	0 <coda_set_error>
     430:	ldr	r0, [fp, #-28]	; 0xffffffe4
     434:	add	r0, r0, #1
     438:	str	r0, [fp, #-28]	; 0xffffffe4
     43c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     440:	str	r0, [fp, #-40]	; 0xffffffd8
     444:	ldr	r0, [fp, #-12]
     448:	ldr	r1, [fp, #-40]	; 0xffffffd8
     44c:	add	r0, r0, r1
     450:	ldrb	r0, [r0]
     454:	cmp	r0, #0
     458:	movw	r0, #0
     45c:	str	r0, [sp, #28]
     460:	beq	484 <coda_tree_node_add_item_for_path+0x234>
     464:	ldr	r0, [fp, #-12]
     468:	ldr	r1, [fp, #-40]	; 0xffffffd8
     46c:	add	r0, r0, r1
     470:	ldrb	r0, [r0]
     474:	cmp	r0, #93	; 0x5d
     478:	movw	r0, #0
     47c:	movne	r0, #1
     480:	str	r0, [sp, #28]
     484:	ldr	r0, [sp, #28]
     488:	tst	r0, #1
     48c:	beq	4a0 <coda_tree_node_add_item_for_path+0x250>
     490:	ldr	r0, [fp, #-40]	; 0xffffffd8
     494:	add	r0, r0, #1
     498:	str	r0, [fp, #-40]	; 0xffffffd8
     49c:	b	444 <coda_tree_node_add_item_for_path+0x1f4>
     4a0:	ldr	r0, [fp, #-12]
     4a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
     4a8:	add	r0, r0, r1
     4ac:	ldrb	r0, [r0]
     4b0:	cmp	r0, #0
     4b4:	bne	4d8 <coda_tree_node_add_item_for_path+0x288>
     4b8:	ldr	r2, [fp, #-12]
     4bc:	mvn	r0, #99	; 0x63
     4c0:	movw	r1, #0
     4c4:	movt	r1, #0
     4c8:	bl	0 <coda_set_error>
     4cc:	mvn	r0, #0
     4d0:	str	r0, [fp, #-4]
     4d4:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     4d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     4dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
     4e0:	cmp	r0, r1
     4e4:	bne	510 <coda_tree_node_add_item_for_path+0x2c0>
     4e8:	ldr	r0, [fp, #-8]
     4ec:	sub	r1, fp, #8
     4f0:	movw	r2, #1
     4f4:	bl	c2c <tree_node_get_node_for_all>
     4f8:	cmp	r0, #0
     4fc:	beq	50c <coda_tree_node_add_item_for_path+0x2bc>
     500:	mvn	r0, #0
     504:	str	r0, [fp, #-4]
     508:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     50c:	b	5b8 <coda_tree_node_add_item_for_path+0x368>
     510:	ldr	r0, [fp, #-12]
     514:	ldr	r1, [fp, #-28]	; 0xffffffe4
     518:	add	r0, r0, r1
     51c:	movw	r1, #0
     520:	movt	r1, #0
     524:	sub	r2, fp, #32
     528:	sub	r3, fp, #48	; 0x30
     52c:	bl	0 <__isoc99_sscanf>
     530:	str	r0, [fp, #-44]	; 0xffffffd4
     534:	ldr	r0, [fp, #-44]	; 0xffffffd4
     538:	cmp	r0, #1
     53c:	bne	558 <coda_tree_node_add_item_for_path+0x308>
     540:	ldr	r0, [fp, #-48]	; 0xffffffd0
     544:	ldr	r1, [fp, #-40]	; 0xffffffd8
     548:	ldr	r2, [fp, #-28]	; 0xffffffe4
     54c:	sub	r1, r1, r2
     550:	cmp	r0, r1
     554:	beq	58c <coda_tree_node_add_item_for_path+0x33c>
     558:	ldr	r0, [fp, #-40]	; 0xffffffd8
     55c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     560:	sub	r2, r0, r1
     564:	ldr	r0, [fp, #-12]
     568:	ldr	r1, [fp, #-28]	; 0xffffffe4
     56c:	add	r3, r0, r1
     570:	mvn	r0, #99	; 0x63
     574:	movw	r1, #0
     578:	movt	r1, #0
     57c:	bl	0 <coda_set_error>
     580:	mvn	r0, #0
     584:	str	r0, [fp, #-4]
     588:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     58c:	ldr	r0, [fp, #-8]
     590:	ldr	r1, [fp, #-32]	; 0xffffffe0
     594:	sub	r2, fp, #8
     598:	movw	r3, #1
     59c:	bl	7e4 <tree_node_get_node_for_index>
     5a0:	cmp	r0, #0
     5a4:	beq	5b4 <coda_tree_node_add_item_for_path+0x364>
     5a8:	mvn	r0, #0
     5ac:	str	r0, [fp, #-4]
     5b0:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     5b4:	b	5b8 <coda_tree_node_add_item_for_path+0x368>
     5b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     5bc:	add	r0, r0, #1
     5c0:	str	r0, [fp, #-28]	; 0xffffffe4
     5c4:	b	768 <coda_tree_node_add_item_for_path+0x518>
     5c8:	ldr	r0, [fp, #-12]
     5cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     5d0:	add	r0, r0, r1
     5d4:	ldrb	r0, [r0]
     5d8:	cmp	r0, #47	; 0x2f
     5dc:	beq	600 <coda_tree_node_add_item_for_path+0x3b0>
     5e0:	ldr	r2, [fp, #-12]
     5e4:	mvn	r0, #99	; 0x63
     5e8:	movw	r1, #0
     5ec:	movt	r1, #0
     5f0:	bl	0 <coda_set_error>
     5f4:	mvn	r0, #0
     5f8:	str	r0, [fp, #-4]
     5fc:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     600:	ldr	r0, [fp, #-24]	; 0xffffffe8
     604:	cmp	r0, #0
     608:	beq	64c <coda_tree_node_add_item_for_path+0x3fc>
     60c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     610:	ldr	r3, [fp, #-12]
     614:	ldr	r0, [fp, #-24]	; 0xffffffe8
     618:	str	r2, [sp, #24]
     61c:	str	r3, [sp, #20]
     620:	bl	0 <coda_type_get_class_name>
     624:	mvn	r2, #99	; 0x63
     628:	str	r0, [sp, #16]
     62c:	mov	r0, r2
     630:	movw	r1, #0
     634:	movt	r1, #0
     638:	ldr	r2, [sp, #24]
     63c:	ldr	r3, [sp, #20]
     640:	ldr	lr, [sp, #16]
     644:	str	lr, [sp]
     648:	bl	0 <coda_set_error>
     64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     650:	add	r0, r0, #1
     654:	str	r0, [fp, #-28]	; 0xffffffe4
     658:	ldr	r0, [fp, #-28]	; 0xffffffe4
     65c:	str	r0, [sp, #52]	; 0x34
     660:	ldr	r0, [fp, #-12]
     664:	ldr	r1, [sp, #52]	; 0x34
     668:	add	r0, r0, r1
     66c:	ldrb	r0, [r0]
     670:	cmp	r0, #0
     674:	movw	r0, #0
     678:	str	r0, [sp, #12]
     67c:	beq	6e0 <coda_tree_node_add_item_for_path+0x490>
     680:	ldr	r0, [fp, #-12]
     684:	ldr	r1, [sp, #52]	; 0x34
     688:	add	r0, r0, r1
     68c:	ldrb	r0, [r0]
     690:	cmp	r0, #47	; 0x2f
     694:	movw	r0, #0
     698:	str	r0, [sp, #12]
     69c:	beq	6e0 <coda_tree_node_add_item_for_path+0x490>
     6a0:	ldr	r0, [fp, #-12]
     6a4:	ldr	r1, [sp, #52]	; 0x34
     6a8:	add	r0, r0, r1
     6ac:	ldrb	r0, [r0]
     6b0:	cmp	r0, #91	; 0x5b
     6b4:	movw	r0, #0
     6b8:	str	r0, [sp, #12]
     6bc:	beq	6e0 <coda_tree_node_add_item_for_path+0x490>
     6c0:	ldr	r0, [fp, #-12]
     6c4:	ldr	r1, [sp, #52]	; 0x34
     6c8:	add	r0, r0, r1
     6cc:	ldrb	r0, [r0]
     6d0:	cmp	r0, #64	; 0x40
     6d4:	movw	r0, #0
     6d8:	movne	r0, #1
     6dc:	str	r0, [sp, #12]
     6e0:	ldr	r0, [sp, #12]
     6e4:	tst	r0, #1
     6e8:	beq	6fc <coda_tree_node_add_item_for_path+0x4ac>
     6ec:	ldr	r0, [sp, #52]	; 0x34
     6f0:	add	r0, r0, #1
     6f4:	str	r0, [sp, #52]	; 0x34
     6f8:	b	660 <coda_tree_node_add_item_for_path+0x410>
     6fc:	ldr	r0, [fp, #-8]
     700:	ldr	r0, [r0]
     704:	ldr	r1, [fp, #-12]
     708:	ldr	r2, [fp, #-28]	; 0xffffffe4
     70c:	add	r1, r1, r2
     710:	ldr	r2, [sp, #52]	; 0x34
     714:	ldr	r3, [fp, #-28]	; 0xffffffe4
     718:	sub	r2, r2, r3
     71c:	sub	r3, fp, #32
     720:	bl	0 <coda_type_get_record_field_index_from_name_n>
     724:	cmp	r0, #0
     728:	beq	738 <coda_tree_node_add_item_for_path+0x4e8>
     72c:	mvn	r0, #0
     730:	str	r0, [fp, #-4]
     734:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     738:	ldr	r0, [fp, #-8]
     73c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     740:	sub	r2, fp, #8
     744:	movw	r3, #1
     748:	bl	7e4 <tree_node_get_node_for_index>
     74c:	cmp	r0, #0
     750:	beq	760 <coda_tree_node_add_item_for_path+0x510>
     754:	mvn	r0, #0
     758:	str	r0, [fp, #-4]
     75c:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     760:	ldr	r0, [sp, #52]	; 0x34
     764:	str	r0, [fp, #-28]	; 0xffffffe4
     768:	b	76c <coda_tree_node_add_item_for_path+0x51c>
     76c:	b	310 <coda_tree_node_add_item_for_path+0xc0>
     770:	ldr	r0, [fp, #-8]
     774:	ldr	r0, [r0]
     778:	sub	r1, fp, #24
     77c:	bl	0 <coda_type_get_class>
     780:	ldr	r1, [fp, #-20]	; 0xffffffec
     784:	cmp	r1, #0
     788:	str	r0, [sp, #8]
     78c:	beq	7c8 <coda_tree_node_add_item_for_path+0x578>
     790:	ldr	r0, [fp, #-24]	; 0xffffffe8
     794:	cmp	r0, #1
     798:	beq	7a8 <coda_tree_node_add_item_for_path+0x558>
     79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7a0:	cmp	r0, #0
     7a4:	bne	7c8 <coda_tree_node_add_item_for_path+0x578>
     7a8:	ldr	r2, [fp, #-12]
     7ac:	mvn	r0, #99	; 0x63
     7b0:	movw	r1, #0
     7b4:	movt	r1, #0
     7b8:	bl	0 <coda_set_error>
     7bc:	mvn	r0, #0
     7c0:	str	r0, [fp, #-4]
     7c4:	b	7d8 <coda_tree_node_add_item_for_path+0x588>
     7c8:	ldr	r0, [fp, #-8]
     7cc:	ldr	r1, [fp, #-16]
     7d0:	bl	d6c <tree_node_add_item>
     7d4:	str	r0, [fp, #-4]
     7d8:	ldr	r0, [fp, #-4]
     7dc:	mov	sp, fp
     7e0:	pop	{fp, pc}

000007e4 <tree_node_get_node_for_index>:
     7e4:	push	{fp, lr}
     7e8:	mov	fp, sp
     7ec:	sub	sp, sp, #80	; 0x50
     7f0:	str	r0, [fp, #-8]
     7f4:	str	r1, [fp, #-12]
     7f8:	str	r2, [fp, #-16]
     7fc:	str	r3, [fp, #-20]	; 0xffffffec
     800:	movw	r0, #0
     804:	str	r0, [fp, #-24]	; 0xffffffe8
     808:	ldr	r0, [fp, #-8]
     80c:	ldr	r0, [r0, #16]
     810:	sub	r0, r0, #1
     814:	str	r0, [fp, #-28]	; 0xffffffe4
     818:	ldr	r0, [fp, #-8]
     81c:	ldr	r0, [r0, #16]
     820:	cmp	r0, #0
     824:	ble	8b0 <tree_node_get_node_for_index+0xcc>
     828:	b	82c <tree_node_get_node_for_index+0x48>
     82c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     830:	ldr	r1, [fp, #-24]	; 0xffffffe8
     834:	cmp	r0, r1
     838:	beq	8ac <tree_node_get_node_for_index+0xc8>
     83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     840:	ldr	r1, [fp, #-28]	; 0xffffffe4
     844:	add	r0, r0, r1
     848:	add	r0, r0, r0, lsr #31
     84c:	asr	r0, r0, #1
     850:	str	r0, [fp, #-32]	; 0xffffffe0
     854:	ldr	r0, [fp, #-12]
     858:	ldr	r1, [fp, #-8]
     85c:	ldr	r1, [r1, #20]
     860:	ldr	r2, [fp, #-32]	; 0xffffffe0
     864:	add	r1, r1, r2, lsl #2
     868:	ldr	r1, [r1]
     86c:	cmp	r0, r1
     870:	bgt	87c <tree_node_get_node_for_index+0x98>
     874:	ldr	r0, [fp, #-32]	; 0xffffffe0
     878:	str	r0, [fp, #-28]	; 0xffffffe4
     87c:	ldr	r0, [fp, #-12]
     880:	ldr	r1, [fp, #-8]
     884:	ldr	r1, [r1, #20]
     888:	ldr	r2, [fp, #-32]	; 0xffffffe0
     88c:	add	r1, r1, r2, lsl #2
     890:	ldr	r1, [r1]
     894:	cmp	r0, r1
     898:	ble	8a8 <tree_node_get_node_for_index+0xc4>
     89c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     8a0:	add	r0, r0, #1
     8a4:	str	r0, [fp, #-24]	; 0xffffffe8
     8a8:	b	82c <tree_node_get_node_for_index+0x48>
     8ac:	b	8b0 <tree_node_get_node_for_index+0xcc>
     8b0:	ldr	r0, [fp, #-8]
     8b4:	ldr	r0, [r0, #16]
     8b8:	cmp	r0, #0
     8bc:	ble	900 <tree_node_get_node_for_index+0x11c>
     8c0:	ldr	r0, [fp, #-12]
     8c4:	ldr	r1, [fp, #-8]
     8c8:	ldr	r1, [r1, #20]
     8cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     8d0:	add	r1, r1, r2, lsl #2
     8d4:	ldr	r1, [r1]
     8d8:	cmp	r0, r1
     8dc:	bne	900 <tree_node_get_node_for_index+0x11c>
     8e0:	ldr	r0, [fp, #-8]
     8e4:	ldr	r0, [r0, #24]
     8e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     8ec:	add	r0, r0, r1, lsl #2
     8f0:	ldr	r0, [r0]
     8f4:	ldr	r1, [fp, #-16]
     8f8:	str	r0, [r1]
     8fc:	b	c18 <tree_node_get_node_for_index+0x434>
     900:	ldr	r0, [fp, #-20]	; 0xffffffec
     904:	cmp	r0, #0
     908:	beq	c08 <tree_node_get_node_for_index+0x424>
     90c:	ldr	r0, [fp, #-8]
     910:	ldr	r0, [r0]
     914:	str	r0, [sp, #36]	; 0x24
     918:	ldr	r0, [fp, #-8]
     91c:	ldr	r1, [r0, #16]
     920:	ldr	r0, [r0, #20]
     924:	add	r1, r1, #1
     928:	lsl	r1, r1, #2
     92c:	bl	0 <realloc>
     930:	str	r0, [sp, #28]
     934:	ldr	r0, [sp, #28]
     938:	movw	r1, #0
     93c:	cmp	r0, r1
     940:	bne	980 <tree_node_get_node_for_index+0x19c>
     944:	ldr	r0, [fp, #-8]
     948:	ldr	r0, [r0, #16]
     94c:	add	r0, r0, #1
     950:	lsl	r2, r0, #2
     954:	mvn	r0, #0
     958:	movw	r1, #0
     95c:	movt	r1, #0
     960:	movw	r3, #0
     964:	movt	r3, #0
     968:	movw	ip, #204	; 0xcc
     96c:	str	ip, [sp]
     970:	bl	0 <coda_set_error>
     974:	mvn	r0, #0
     978:	str	r0, [fp, #-4]
     97c:	b	c20 <tree_node_get_node_for_index+0x43c>
     980:	ldr	r0, [sp, #28]
     984:	ldr	r1, [fp, #-8]
     988:	str	r0, [r1, #20]
     98c:	ldr	r0, [fp, #-8]
     990:	ldr	r1, [r0, #16]
     994:	ldr	r0, [r0, #24]
     998:	add	r1, r1, #1
     99c:	lsl	r1, r1, #2
     9a0:	bl	0 <realloc>
     9a4:	str	r0, [fp, #-36]	; 0xffffffdc
     9a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     9ac:	movw	r1, #0
     9b0:	cmp	r0, r1
     9b4:	bne	9f4 <tree_node_get_node_for_index+0x210>
     9b8:	ldr	r0, [fp, #-8]
     9bc:	ldr	r0, [r0, #16]
     9c0:	add	r0, r0, #1
     9c4:	lsl	r2, r0, #2
     9c8:	mvn	r0, #0
     9cc:	movw	r1, #0
     9d0:	movt	r1, #0
     9d4:	movw	r3, #0
     9d8:	movt	r3, #0
     9dc:	movw	ip, #212	; 0xd4
     9e0:	str	ip, [sp]
     9e4:	bl	0 <coda_set_error>
     9e8:	mvn	r0, #0
     9ec:	str	r0, [fp, #-4]
     9f0:	b	c20 <tree_node_get_node_for_index+0x43c>
     9f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     9f8:	ldr	r1, [fp, #-8]
     9fc:	str	r0, [r1, #24]
     a00:	ldr	r0, [fp, #-12]
     a04:	cmn	r0, #1
     a08:	bne	a30 <tree_node_get_node_for_index+0x24c>
     a0c:	ldr	r0, [sp, #36]	; 0x24
     a10:	add	r1, sp, #32
     a14:	bl	0 <coda_type_get_attributes>
     a18:	cmp	r0, #0
     a1c:	beq	a2c <tree_node_get_node_for_index+0x248>
     a20:	mvn	r0, #0
     a24:	str	r0, [fp, #-4]
     a28:	b	c20 <tree_node_get_node_for_index+0x43c>
     a2c:	b	ae0 <tree_node_get_node_for_index+0x2fc>
     a30:	ldr	r0, [sp, #36]	; 0x24
     a34:	add	r1, sp, #20
     a38:	bl	0 <coda_type_get_class>
     a3c:	ldr	r1, [sp, #20]
     a40:	cmp	r1, #6
     a44:	str	r0, [sp, #8]
     a48:	bne	a84 <tree_node_get_node_for_index+0x2a0>
     a4c:	ldr	r0, [sp, #36]	; 0x24
     a50:	add	r1, sp, #32
     a54:	bl	0 <coda_type_get_special_base_type>
     a58:	cmp	r0, #0
     a5c:	beq	a6c <tree_node_get_node_for_index+0x288>
     a60:	mvn	r0, #0
     a64:	str	r0, [fp, #-4]
     a68:	b	c20 <tree_node_get_node_for_index+0x43c>
     a6c:	ldr	r0, [sp, #32]
     a70:	str	r0, [sp, #36]	; 0x24
     a74:	ldr	r0, [sp, #36]	; 0x24
     a78:	add	r1, sp, #20
     a7c:	bl	0 <coda_type_get_class>
     a80:	str	r0, [sp, #4]
     a84:	ldr	r0, [sp, #20]
     a88:	cmp	r0, #1
     a8c:	bne	ab4 <tree_node_get_node_for_index+0x2d0>
     a90:	ldr	r0, [sp, #36]	; 0x24
     a94:	add	r1, sp, #32
     a98:	bl	0 <coda_type_get_array_base_type>
     a9c:	cmp	r0, #0
     aa0:	beq	ab0 <tree_node_get_node_for_index+0x2cc>
     aa4:	mvn	r0, #0
     aa8:	str	r0, [fp, #-4]
     aac:	b	c20 <tree_node_get_node_for_index+0x43c>
     ab0:	b	adc <tree_node_get_node_for_index+0x2f8>
     ab4:	ldr	r0, [sp, #36]	; 0x24
     ab8:	ldr	r1, [fp, #-12]
     abc:	add	r2, sp, #32
     ac0:	bl	0 <coda_type_get_record_field_type>
     ac4:	cmp	r0, #0
     ac8:	beq	ad8 <tree_node_get_node_for_index+0x2f4>
     acc:	mvn	r0, #0
     ad0:	str	r0, [fp, #-4]
     ad4:	b	c20 <tree_node_get_node_for_index+0x43c>
     ad8:	b	adc <tree_node_get_node_for_index+0x2f8>
     adc:	b	ae0 <tree_node_get_node_for_index+0x2fc>
     ae0:	ldr	r0, [sp, #32]
     ae4:	bl	0 <coda_tree_node_new>
     ae8:	str	r0, [sp, #40]	; 0x28
     aec:	ldr	r0, [sp, #40]	; 0x28
     af0:	movw	lr, #0
     af4:	cmp	r0, lr
     af8:	bne	b08 <tree_node_get_node_for_index+0x324>
     afc:	mvn	r0, #0
     b00:	str	r0, [fp, #-4]
     b04:	b	c20 <tree_node_get_node_for_index+0x43c>
     b08:	ldr	r0, [sp, #40]	; 0x28
     b0c:	ldr	r1, [fp, #-16]
     b10:	str	r0, [r1]
     b14:	movw	r0, #0
     b18:	str	r0, [sp, #24]
     b1c:	ldr	r0, [sp, #24]
     b20:	ldr	r1, [fp, #-8]
     b24:	ldr	r1, [r1, #16]
     b28:	cmp	r0, r1
     b2c:	bge	bc8 <tree_node_get_node_for_index+0x3e4>
     b30:	ldr	r0, [fp, #-12]
     b34:	ldr	r1, [fp, #-8]
     b38:	ldr	r1, [r1, #20]
     b3c:	ldr	r2, [sp, #24]
     b40:	add	r1, r1, r2, lsl #2
     b44:	ldr	r1, [r1]
     b48:	cmp	r0, r1
     b4c:	bge	bb4 <tree_node_get_node_for_index+0x3d0>
     b50:	ldr	r0, [fp, #-8]
     b54:	ldr	r0, [r0, #20]
     b58:	ldr	r1, [sp, #24]
     b5c:	ldr	r0, [r0, r1, lsl #2]
     b60:	str	r0, [sp, #16]
     b64:	ldr	r0, [fp, #-8]
     b68:	ldr	r0, [r0, #24]
     b6c:	ldr	r1, [sp, #24]
     b70:	ldr	r0, [r0, r1, lsl #2]
     b74:	str	r0, [sp, #12]
     b78:	ldr	r0, [fp, #-12]
     b7c:	ldr	r1, [fp, #-8]
     b80:	ldr	r1, [r1, #20]
     b84:	ldr	r2, [sp, #24]
     b88:	str	r0, [r1, r2, lsl #2]
     b8c:	ldr	r0, [sp, #40]	; 0x28
     b90:	ldr	r1, [fp, #-8]
     b94:	ldr	r1, [r1, #24]
     b98:	ldr	r2, [sp, #24]
     b9c:	add	r1, r1, r2, lsl #2
     ba0:	str	r0, [r1]
     ba4:	ldr	r0, [sp, #16]
     ba8:	str	r0, [fp, #-12]
     bac:	ldr	r0, [sp, #12]
     bb0:	str	r0, [sp, #40]	; 0x28
     bb4:	b	bb8 <tree_node_get_node_for_index+0x3d4>
     bb8:	ldr	r0, [sp, #24]
     bbc:	add	r0, r0, #1
     bc0:	str	r0, [sp, #24]
     bc4:	b	b1c <tree_node_get_node_for_index+0x338>
     bc8:	ldr	r0, [fp, #-12]
     bcc:	ldr	r1, [fp, #-8]
     bd0:	ldr	r2, [r1, #16]
     bd4:	ldr	r1, [r1, #20]
     bd8:	str	r0, [r1, r2, lsl #2]
     bdc:	ldr	r0, [sp, #40]	; 0x28
     be0:	ldr	r1, [fp, #-8]
     be4:	ldr	r2, [r1, #16]
     be8:	ldr	r1, [r1, #24]
     bec:	add	r1, r1, r2, lsl #2
     bf0:	str	r0, [r1]
     bf4:	ldr	r0, [fp, #-8]
     bf8:	ldr	r1, [r0, #16]
     bfc:	add	r1, r1, #1
     c00:	str	r1, [r0, #16]
     c04:	b	c14 <tree_node_get_node_for_index+0x430>
     c08:	ldr	r0, [fp, #-16]
     c0c:	movw	r1, #0
     c10:	str	r1, [r0]
     c14:	b	c18 <tree_node_get_node_for_index+0x434>
     c18:	movw	r0, #0
     c1c:	str	r0, [fp, #-4]
     c20:	ldr	r0, [fp, #-4]
     c24:	mov	sp, fp
     c28:	pop	{fp, pc}

00000c2c <tree_node_get_node_for_all>:
     c2c:	push	{fp, lr}
     c30:	mov	fp, sp
     c34:	sub	sp, sp, #40	; 0x28
     c38:	str	r0, [fp, #-8]
     c3c:	str	r1, [fp, #-12]
     c40:	str	r2, [fp, #-16]
     c44:	ldr	r0, [fp, #-8]
     c48:	ldr	r0, [r0, #12]
     c4c:	movw	r1, #0
     c50:	cmp	r0, r1
     c54:	bne	d48 <tree_node_get_node_for_all+0x11c>
     c58:	ldr	r0, [fp, #-16]
     c5c:	cmp	r0, #0
     c60:	beq	d48 <tree_node_get_node_for_all+0x11c>
     c64:	ldr	r0, [fp, #-8]
     c68:	ldr	r0, [r0]
     c6c:	str	r0, [sp, #16]
     c70:	ldr	r0, [sp, #16]
     c74:	add	r1, sp, #20
     c78:	bl	0 <coda_type_get_class>
     c7c:	ldr	r1, [sp, #20]
     c80:	cmp	r1, #6
     c84:	str	r0, [sp, #8]
     c88:	bne	cc4 <tree_node_get_node_for_all+0x98>
     c8c:	ldr	r0, [sp, #16]
     c90:	add	r1, sp, #12
     c94:	bl	0 <coda_type_get_special_base_type>
     c98:	cmp	r0, #0
     c9c:	beq	cac <tree_node_get_node_for_all+0x80>
     ca0:	mvn	r0, #0
     ca4:	str	r0, [fp, #-4]
     ca8:	b	d60 <tree_node_get_node_for_all+0x134>
     cac:	ldr	r0, [sp, #12]
     cb0:	str	r0, [sp, #16]
     cb4:	ldr	r0, [sp, #16]
     cb8:	add	r1, sp, #20
     cbc:	bl	0 <coda_type_get_class>
     cc0:	str	r0, [sp, #4]
     cc4:	ldr	r0, [sp, #20]
     cc8:	cmp	r0, #1
     ccc:	bne	cd4 <tree_node_get_node_for_all+0xa8>
     cd0:	b	cf4 <tree_node_get_node_for_all+0xc8>
     cd4:	movw	r0, #0
     cd8:	movt	r0, #0
     cdc:	movw	r1, #0
     ce0:	movt	r1, #0
     ce4:	movw	r2, #149	; 0x95
     ce8:	movw	r3, #0
     cec:	movt	r3, #0
     cf0:	bl	0 <__assert_fail>
     cf4:	ldr	r0, [sp, #16]
     cf8:	add	r1, sp, #12
     cfc:	bl	0 <coda_type_get_array_base_type>
     d00:	cmp	r0, #0
     d04:	beq	d14 <tree_node_get_node_for_all+0xe8>
     d08:	mvn	r0, #0
     d0c:	str	r0, [fp, #-4]
     d10:	b	d60 <tree_node_get_node_for_all+0x134>
     d14:	ldr	r0, [sp, #12]
     d18:	bl	0 <coda_tree_node_new>
     d1c:	ldr	lr, [fp, #-8]
     d20:	str	r0, [lr, #12]
     d24:	ldr	r0, [fp, #-8]
     d28:	ldr	r0, [r0, #12]
     d2c:	movw	lr, #0
     d30:	cmp	r0, lr
     d34:	bne	d44 <tree_node_get_node_for_all+0x118>
     d38:	mvn	r0, #0
     d3c:	str	r0, [fp, #-4]
     d40:	b	d60 <tree_node_get_node_for_all+0x134>
     d44:	b	d48 <tree_node_get_node_for_all+0x11c>
     d48:	ldr	r0, [fp, #-8]
     d4c:	ldr	r0, [r0, #12]
     d50:	ldr	r1, [fp, #-12]
     d54:	str	r0, [r1]
     d58:	movw	r0, #0
     d5c:	str	r0, [fp, #-4]
     d60:	ldr	r0, [fp, #-4]
     d64:	mov	sp, fp
     d68:	pop	{fp, pc}

00000d6c <tree_node_add_item>:
     d6c:	push	{fp, lr}
     d70:	mov	fp, sp
     d74:	sub	sp, sp, #24
     d78:	str	r0, [fp, #-8]
     d7c:	str	r1, [sp, #12]
     d80:	ldr	r0, [fp, #-8]
     d84:	ldr	r1, [r0, #4]
     d88:	ldr	r0, [r0, #8]
     d8c:	add	r1, r1, #1
     d90:	lsl	r1, r1, #2
     d94:	bl	0 <realloc>
     d98:	str	r0, [sp, #8]
     d9c:	ldr	r0, [sp, #8]
     da0:	movw	r1, #0
     da4:	cmp	r0, r1
     da8:	bne	de8 <tree_node_add_item+0x7c>
     dac:	ldr	r0, [fp, #-8]
     db0:	ldr	r0, [r0, #4]
     db4:	add	r0, r0, #1
     db8:	lsl	r2, r0, #2
     dbc:	mvn	r0, #0
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	movw	r3, #0
     dcc:	movt	r3, #0
     dd0:	movw	ip, #119	; 0x77
     dd4:	str	ip, [sp]
     dd8:	bl	0 <coda_set_error>
     ddc:	mvn	r0, #0
     de0:	str	r0, [fp, #-4]
     de4:	b	e24 <tree_node_add_item+0xb8>
     de8:	ldr	r0, [sp, #8]
     dec:	ldr	r1, [fp, #-8]
     df0:	str	r0, [r1, #8]
     df4:	ldr	r0, [sp, #12]
     df8:	ldr	r1, [fp, #-8]
     dfc:	ldr	r2, [r1, #4]
     e00:	ldr	r1, [r1, #8]
     e04:	add	r1, r1, r2, lsl #2
     e08:	str	r0, [r1]
     e0c:	ldr	r0, [fp, #-8]
     e10:	ldr	r1, [r0, #4]
     e14:	add	r1, r1, #1
     e18:	str	r1, [r0, #4]
     e1c:	movw	r0, #0
     e20:	str	r0, [fp, #-4]
     e24:	ldr	r0, [fp, #-4]
     e28:	mov	sp, fp
     e2c:	pop	{fp, pc}

00000e30 <coda_tree_node_get_item_for_cursor>:
     e30:	push	{fp, lr}
     e34:	mov	fp, sp
     e38:	sub	sp, sp, #16
     e3c:	str	r0, [fp, #-4]
     e40:	str	r1, [sp, #8]
     e44:	str	r2, [sp, #4]
     e48:	ldr	r0, [fp, #-4]
     e4c:	ldr	r2, [sp, #8]
     e50:	ldr	r3, [sp, #4]
     e54:	movw	r1, #0
     e58:	bl	e64 <get_item_for_cursor>
     e5c:	mov	sp, fp
     e60:	pop	{fp, pc}

00000e64 <get_item_for_cursor>:
     e64:	push	{fp, lr}
     e68:	mov	fp, sp
     e6c:	sub	sp, sp, #40	; 0x28
     e70:	str	r0, [fp, #-8]
     e74:	str	r1, [fp, #-12]
     e78:	str	r2, [fp, #-16]
     e7c:	str	r3, [sp, #20]
     e80:	ldr	r0, [fp, #-8]
     e84:	movw	r1, #0
     e88:	cmp	r0, r1
     e8c:	bne	ea4 <get_item_for_cursor+0x40>
     e90:	ldr	r0, [sp, #20]
     e94:	movw	r1, #0
     e98:	str	r1, [r0]
     e9c:	str	r1, [fp, #-4]
     ea0:	b	10b8 <get_item_for_cursor+0x254>
     ea4:	ldr	r0, [fp, #-12]
     ea8:	ldr	r1, [fp, #-16]
     eac:	ldr	r1, [r1, #4]
     eb0:	sub	r1, r1, #1
     eb4:	cmp	r0, r1
     eb8:	bge	1068 <get_item_for_cursor+0x204>
     ebc:	ldr	r0, [fp, #-8]
     ec0:	ldr	r0, [r0, #16]
     ec4:	cmp	r0, #0
     ec8:	ble	1000 <get_item_for_cursor+0x19c>
     ecc:	mov	r0, #0
     ed0:	str	r0, [sp, #16]
     ed4:	ldr	r0, [fp, #-8]
     ed8:	ldr	r0, [r0, #16]
     edc:	sub	r0, r0, #1
     ee0:	str	r0, [sp, #12]
     ee4:	ldr	r0, [fp, #-16]
     ee8:	add	r0, r0, #8
     eec:	ldr	r1, [fp, #-12]
     ef0:	add	r1, r1, #1
     ef4:	add	r0, r0, r1, lsl #4
     ef8:	ldr	r0, [r0, #4]
     efc:	str	r0, [sp, #8]
     f00:	ldr	r0, [sp, #12]
     f04:	ldr	r1, [sp, #16]
     f08:	cmp	r0, r1
     f0c:	beq	f80 <get_item_for_cursor+0x11c>
     f10:	ldr	r0, [sp, #16]
     f14:	ldr	r1, [sp, #12]
     f18:	add	r0, r0, r1
     f1c:	add	r0, r0, r0, lsr #31
     f20:	asr	r0, r0, #1
     f24:	str	r0, [sp, #4]
     f28:	ldr	r0, [sp, #8]
     f2c:	ldr	r1, [fp, #-8]
     f30:	ldr	r1, [r1, #20]
     f34:	ldr	r2, [sp, #4]
     f38:	add	r1, r1, r2, lsl #2
     f3c:	ldr	r1, [r1]
     f40:	cmp	r0, r1
     f44:	bgt	f50 <get_item_for_cursor+0xec>
     f48:	ldr	r0, [sp, #4]
     f4c:	str	r0, [sp, #12]
     f50:	ldr	r0, [sp, #8]
     f54:	ldr	r1, [fp, #-8]
     f58:	ldr	r1, [r1, #20]
     f5c:	ldr	r2, [sp, #4]
     f60:	add	r1, r1, r2, lsl #2
     f64:	ldr	r1, [r1]
     f68:	cmp	r0, r1
     f6c:	ble	f7c <get_item_for_cursor+0x118>
     f70:	ldr	r0, [sp, #4]
     f74:	add	r0, r0, #1
     f78:	str	r0, [sp, #16]
     f7c:	b	f00 <get_item_for_cursor+0x9c>
     f80:	ldr	r0, [sp, #8]
     f84:	ldr	r1, [fp, #-8]
     f88:	ldr	r1, [r1, #20]
     f8c:	ldr	r2, [sp, #12]
     f90:	add	r1, r1, r2, lsl #2
     f94:	ldr	r1, [r1]
     f98:	cmp	r0, r1
     f9c:	bne	ffc <get_item_for_cursor+0x198>
     fa0:	ldr	r0, [fp, #-8]
     fa4:	ldr	r0, [r0, #24]
     fa8:	ldr	r1, [sp, #12]
     fac:	add	r0, r0, r1, lsl #2
     fb0:	ldr	r0, [r0]
     fb4:	ldr	r1, [fp, #-12]
     fb8:	add	r1, r1, #1
     fbc:	ldr	r2, [fp, #-16]
     fc0:	ldr	r3, [sp, #20]
     fc4:	bl	e64 <get_item_for_cursor>
     fc8:	cmp	r0, #0
     fcc:	beq	fdc <get_item_for_cursor+0x178>
     fd0:	mvn	r0, #0
     fd4:	str	r0, [fp, #-4]
     fd8:	b	10b8 <get_item_for_cursor+0x254>
     fdc:	ldr	r0, [sp, #20]
     fe0:	movw	r1, #0
     fe4:	cmp	r0, r1
     fe8:	beq	ff8 <get_item_for_cursor+0x194>
     fec:	movw	r0, #0
     ff0:	str	r0, [fp, #-4]
     ff4:	b	10b8 <get_item_for_cursor+0x254>
     ff8:	b	ffc <get_item_for_cursor+0x198>
     ffc:	b	1000 <get_item_for_cursor+0x19c>
    1000:	ldr	r0, [fp, #-8]
    1004:	ldr	r0, [r0, #12]
    1008:	movw	r1, #0
    100c:	cmp	r0, r1
    1010:	beq	1064 <get_item_for_cursor+0x200>
    1014:	ldr	r0, [fp, #-8]
    1018:	ldr	r0, [r0, #12]
    101c:	ldr	r1, [fp, #-12]
    1020:	add	r1, r1, #1
    1024:	ldr	r2, [fp, #-16]
    1028:	ldr	r3, [sp, #20]
    102c:	bl	e64 <get_item_for_cursor>
    1030:	cmp	r0, #0
    1034:	beq	1044 <get_item_for_cursor+0x1e0>
    1038:	mvn	r0, #0
    103c:	str	r0, [fp, #-4]
    1040:	b	10b8 <get_item_for_cursor+0x254>
    1044:	ldr	r0, [sp, #20]
    1048:	movw	r1, #0
    104c:	cmp	r0, r1
    1050:	beq	1060 <get_item_for_cursor+0x1fc>
    1054:	movw	r0, #0
    1058:	str	r0, [fp, #-4]
    105c:	b	10b8 <get_item_for_cursor+0x254>
    1060:	b	1064 <get_item_for_cursor+0x200>
    1064:	b	10a8 <get_item_for_cursor+0x244>
    1068:	ldr	r0, [fp, #-8]
    106c:	ldr	r0, [r0, #4]
    1070:	cmp	r0, #0
    1074:	ble	10a4 <get_item_for_cursor+0x240>
    1078:	ldr	r0, [fp, #-8]
    107c:	ldr	r1, [r0, #4]
    1080:	ldr	r0, [r0, #8]
    1084:	sub	r1, r1, #1
    1088:	add	r0, r0, r1, lsl #2
    108c:	ldr	r0, [r0]
    1090:	ldr	r1, [sp, #20]
    1094:	str	r0, [r1]
    1098:	movw	r0, #0
    109c:	str	r0, [fp, #-4]
    10a0:	b	10b8 <get_item_for_cursor+0x254>
    10a4:	b	10a8 <get_item_for_cursor+0x244>
    10a8:	ldr	r0, [sp, #20]
    10ac:	movw	r1, #0
    10b0:	str	r1, [r0]
    10b4:	str	r1, [fp, #-4]
    10b8:	ldr	r0, [fp, #-4]
    10bc:	mov	sp, fp
    10c0:	pop	{fp, pc}
