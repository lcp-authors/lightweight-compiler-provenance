
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_XML_ParserCreate>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #8
      10:	str	r0, [fp, #-8]
      14:	mov	r2, #0
      18:	mov	r1, #0
      1c:	ldr	r0, [fp, #-8]
      20:	bl	158 <coda_XML_ParserCreate_MM>
      24:	mov	r3, r0
      28:	mov	r0, r3
      2c:	sub	sp, fp, #4
      30:	ldr	fp, [sp]
      34:	add	sp, sp, #4
      38:	pop	{pc}		; (ldr pc, [sp], #4)

0000003c <coda_XML_ParserCreateNS>:
      3c:	str	fp, [sp, #-8]!
      40:	str	lr, [sp, #4]
      44:	add	fp, sp, #4
      48:	sub	sp, sp, #16
      4c:	str	r0, [fp, #-16]
      50:	mov	r3, r1
      54:	strb	r3, [fp, #-17]	; 0xffffffef
      58:	ldrb	r3, [fp, #-17]	; 0xffffffef
      5c:	strb	r3, [fp, #-8]
      60:	sub	r3, fp, #8
      64:	mov	r2, r3
      68:	mov	r1, #0
      6c:	ldr	r0, [fp, #-16]
      70:	bl	158 <coda_XML_ParserCreate_MM>
      74:	mov	r3, r0
      78:	mov	r0, r3
      7c:	sub	sp, fp, #4
      80:	ldr	fp, [sp]
      84:	add	sp, sp, #4
      88:	pop	{pc}		; (ldr pc, [sp], #4)

0000008c <generate_hash_secret_salt>:
      8c:	str	fp, [sp, #-8]!
      90:	str	lr, [sp, #4]
      94:	add	fp, sp, #4
      98:	sub	sp, sp, #8
      9c:	mov	r0, #0
      a0:	bl	0 <time>
      a4:	mov	r3, r0
      a8:	cmn	r3, #1
      ac:	movcs	r2, #1
      b0:	movcc	r2, #0
      b4:	rsb	r2, r2, #0
      b8:	sub	r3, r3, r2
      bc:	str	r3, [fp, #-8]
      c0:	ldr	r0, [fp, #-8]
      c4:	bl	0 <srand>
      c8:	bl	0 <rand>
      cc:	mov	r3, r0
      d0:	mov	r0, r3
      d4:	sub	sp, fp, #4
      d8:	ldr	fp, [sp]
      dc:	add	sp, sp, #4
      e0:	pop	{pc}		; (ldr pc, [sp], #4)

000000e4 <startParsing>:
      e4:	str	fp, [sp, #-8]!
      e8:	str	lr, [sp, #4]
      ec:	add	fp, sp, #4
      f0:	sub	sp, sp, #8
      f4:	str	r0, [fp, #-8]
      f8:	ldr	r3, [fp, #-8]
      fc:	ldr	r3, [r3, #512]	; 0x200
     100:	cmp	r3, #0
     104:	bne	118 <startParsing+0x34>
     108:	bl	8c <generate_hash_secret_salt>
     10c:	mov	r2, r0
     110:	ldr	r3, [fp, #-8]
     114:	str	r2, [r3, #512]	; 0x200
     118:	ldr	r3, [fp, #-8]
     11c:	ldrb	r3, [r3, #244]	; 0xf4
     120:	cmp	r3, #0
     124:	beq	140 <startParsing+0x5c>
     128:	movw	r1, #0
     12c:	movt	r1, #0
     130:	ldr	r0, [fp, #-8]
     134:	bl	cb78 <setContext>
     138:	mov	r3, r0
     13c:	b	144 <startParsing+0x60>
     140:	mov	r3, #1
     144:	mov	r0, r3
     148:	sub	sp, fp, #4
     14c:	ldr	fp, [sp]
     150:	add	sp, sp, #4
     154:	pop	{pc}		; (ldr pc, [sp], #4)

00000158 <coda_XML_ParserCreate_MM>:
     158:	str	fp, [sp, #-8]!
     15c:	str	lr, [sp, #4]
     160:	add	fp, sp, #4
     164:	sub	sp, sp, #16
     168:	str	r0, [fp, #-8]
     16c:	str	r1, [fp, #-12]
     170:	str	r2, [fp, #-16]
     174:	mov	r3, #0
     178:	ldr	r2, [fp, #-16]
     17c:	ldr	r1, [fp, #-12]
     180:	ldr	r0, [fp, #-8]
     184:	bl	1a0 <parserCreate>
     188:	mov	r3, r0
     18c:	mov	r0, r3
     190:	sub	sp, fp, #4
     194:	ldr	fp, [sp]
     198:	add	sp, sp, #4
     19c:	pop	{pc}		; (ldr pc, [sp], #4)

000001a0 <parserCreate>:
     1a0:	str	fp, [sp, #-8]!
     1a4:	str	lr, [sp, #4]
     1a8:	add	fp, sp, #4
     1ac:	sub	sp, sp, #32
     1b0:	str	r0, [fp, #-24]	; 0xffffffe8
     1b4:	str	r1, [fp, #-28]	; 0xffffffe4
     1b8:	str	r2, [fp, #-32]	; 0xffffffe0
     1bc:	str	r3, [fp, #-36]	; 0xffffffdc
     1c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1c4:	cmp	r3, #0
     1c8:	beq	22c <parserCreate+0x8c>
     1cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1d0:	ldr	r3, [r3]
     1d4:	mov	r0, #520	; 0x208
     1d8:	blx	r3
     1dc:	str	r0, [fp, #-8]
     1e0:	ldr	r3, [fp, #-8]
     1e4:	cmp	r3, #0
     1e8:	beq	284 <parserCreate+0xe4>
     1ec:	ldr	r3, [fp, #-8]
     1f0:	add	r3, r3, #12
     1f4:	str	r3, [fp, #-12]
     1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1fc:	ldr	r2, [r3]
     200:	ldr	r3, [fp, #-12]
     204:	str	r2, [r3]
     208:	ldr	r3, [fp, #-28]	; 0xffffffe4
     20c:	ldr	r2, [r3, #4]
     210:	ldr	r3, [fp, #-12]
     214:	str	r2, [r3, #4]
     218:	ldr	r3, [fp, #-28]	; 0xffffffe4
     21c:	ldr	r2, [r3, #8]
     220:	ldr	r3, [fp, #-12]
     224:	str	r2, [r3, #8]
     228:	b	284 <parserCreate+0xe4>
     22c:	mov	r0, #520	; 0x208
     230:	bl	0 <malloc>
     234:	mov	r3, r0
     238:	str	r3, [fp, #-8]
     23c:	ldr	r3, [fp, #-8]
     240:	cmp	r3, #0
     244:	beq	284 <parserCreate+0xe4>
     248:	ldr	r3, [fp, #-8]
     24c:	add	r3, r3, #12
     250:	str	r3, [fp, #-16]
     254:	ldr	r2, [fp, #-16]
     258:	movw	r3, #0
     25c:	movt	r3, #0
     260:	str	r3, [r2]
     264:	ldr	r2, [fp, #-16]
     268:	movw	r3, #0
     26c:	movt	r3, #0
     270:	str	r3, [r2, #4]
     274:	ldr	r2, [fp, #-16]
     278:	movw	r3, #0
     27c:	movt	r3, #0
     280:	str	r3, [r2, #8]
     284:	ldr	r3, [fp, #-8]
     288:	cmp	r3, #0
     28c:	bne	298 <parserCreate+0xf8>
     290:	ldr	r3, [fp, #-8]
     294:	b	568 <parserCreate+0x3c8>
     298:	ldr	r3, [fp, #-8]
     29c:	mov	r2, #0
     2a0:	str	r2, [r3, #8]
     2a4:	ldr	r3, [fp, #-8]
     2a8:	mov	r2, #0
     2ac:	str	r2, [r3, #32]
     2b0:	ldr	r3, [fp, #-8]
     2b4:	mov	r2, #16
     2b8:	str	r2, [r3, #388]	; 0x184
     2bc:	ldr	r3, [fp, #-8]
     2c0:	ldr	r3, [r3, #12]
     2c4:	ldr	r2, [fp, #-8]
     2c8:	ldr	r2, [r2, #388]	; 0x184
     2cc:	lsl	r2, r2, #4
     2d0:	mov	r0, r2
     2d4:	blx	r3
     2d8:	mov	r2, r0
     2dc:	ldr	r3, [fp, #-8]
     2e0:	str	r2, [r3, #400]	; 0x190
     2e4:	ldr	r3, [fp, #-8]
     2e8:	ldr	r3, [r3, #400]	; 0x190
     2ec:	cmp	r3, #0
     2f0:	bne	30c <parserCreate+0x16c>
     2f4:	ldr	r3, [fp, #-8]
     2f8:	ldr	r3, [r3, #20]
     2fc:	ldr	r0, [fp, #-8]
     300:	blx	r3
     304:	mov	r3, #0
     308:	b	568 <parserCreate+0x3c8>
     30c:	ldr	r3, [fp, #-8]
     310:	ldr	r3, [r3, #12]
     314:	mov	r0, #1024	; 0x400
     318:	blx	r3
     31c:	mov	r2, r0
     320:	ldr	r3, [fp, #-8]
     324:	str	r2, [r3, #52]	; 0x34
     328:	ldr	r3, [fp, #-8]
     32c:	ldr	r3, [r3, #52]	; 0x34
     330:	cmp	r3, #0
     334:	bne	368 <parserCreate+0x1c8>
     338:	ldr	r3, [fp, #-8]
     33c:	ldr	r3, [r3, #20]
     340:	ldr	r2, [fp, #-8]
     344:	ldr	r2, [r2, #400]	; 0x190
     348:	mov	r0, r2
     34c:	blx	r3
     350:	ldr	r3, [fp, #-8]
     354:	ldr	r3, [r3, #20]
     358:	ldr	r0, [fp, #-8]
     35c:	blx	r3
     360:	mov	r3, #0
     364:	b	568 <parserCreate+0x3c8>
     368:	ldr	r3, [fp, #-8]
     36c:	ldr	r3, [r3, #52]	; 0x34
     370:	add	r2, r3, #1024	; 0x400
     374:	ldr	r3, [fp, #-8]
     378:	str	r2, [r3, #56]	; 0x38
     37c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     380:	cmp	r3, #0
     384:	beq	398 <parserCreate+0x1f8>
     388:	ldr	r3, [fp, #-8]
     38c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     390:	str	r2, [r3, #364]	; 0x16c
     394:	b	40c <parserCreate+0x26c>
     398:	ldr	r3, [fp, #-8]
     39c:	add	r3, r3, #12
     3a0:	mov	r0, r3
     3a4:	bl	d118 <dtdCreate>
     3a8:	mov	r2, r0
     3ac:	ldr	r3, [fp, #-8]
     3b0:	str	r2, [r3, #364]	; 0x16c
     3b4:	ldr	r3, [fp, #-8]
     3b8:	ldr	r3, [r3, #364]	; 0x16c
     3bc:	cmp	r3, #0
     3c0:	bne	40c <parserCreate+0x26c>
     3c4:	ldr	r3, [fp, #-8]
     3c8:	ldr	r3, [r3, #20]
     3cc:	ldr	r2, [fp, #-8]
     3d0:	ldr	r2, [r2, #52]	; 0x34
     3d4:	mov	r0, r2
     3d8:	blx	r3
     3dc:	ldr	r3, [fp, #-8]
     3e0:	ldr	r3, [r3, #20]
     3e4:	ldr	r2, [fp, #-8]
     3e8:	ldr	r2, [r2, #400]	; 0x190
     3ec:	mov	r0, r2
     3f0:	blx	r3
     3f4:	ldr	r3, [fp, #-8]
     3f8:	ldr	r3, [r3, #20]
     3fc:	ldr	r0, [fp, #-8]
     400:	blx	r3
     404:	mov	r3, #0
     408:	b	568 <parserCreate+0x3c8>
     40c:	ldr	r3, [fp, #-8]
     410:	mov	r2, #0
     414:	str	r2, [r3, #384]	; 0x180
     418:	ldr	r3, [fp, #-8]
     41c:	mov	r2, #0
     420:	str	r2, [r3, #376]	; 0x178
     424:	ldr	r3, [fp, #-8]
     428:	mov	r2, #0
     42c:	str	r2, [r3, #312]	; 0x138
     430:	ldr	r3, [fp, #-8]
     434:	mov	r2, #0
     438:	str	r2, [r3, #484]	; 0x1e4
     43c:	ldr	r3, [fp, #-8]
     440:	mov	r2, #0
     444:	str	r2, [r3, #480]	; 0x1e0
     448:	ldr	r3, [fp, #-8]
     44c:	mov	r2, #0
     450:	str	r2, [r3, #132]	; 0x84
     454:	ldr	r3, [fp, #-8]
     458:	mov	r2, #0
     45c:	str	r2, [r3, #256]	; 0x100
     460:	ldr	r3, [fp, #-8]
     464:	mov	r2, #33	; 0x21
     468:	strb	r2, [r3, #488]	; 0x1e8
     46c:	ldr	r3, [fp, #-8]
     470:	mov	r2, #0
     474:	strb	r2, [r3, #244]	; 0xf4
     478:	ldr	r3, [fp, #-8]
     47c:	mov	r2, #0
     480:	strb	r2, [r3, #245]	; 0xf5
     484:	ldr	r3, [fp, #-8]
     488:	mov	r2, #0
     48c:	str	r2, [r3, #404]	; 0x194
     490:	ldr	r3, [fp, #-8]
     494:	mov	r2, #0
     498:	str	r2, [r3, #408]	; 0x198
     49c:	ldr	r3, [fp, #-8]
     4a0:	mov	r2, #0
     4a4:	strb	r2, [r3, #412]	; 0x19c
     4a8:	ldr	r3, [fp, #-8]
     4ac:	add	r2, r3, #432	; 0x1b0
     4b0:	ldr	r3, [fp, #-8]
     4b4:	add	r3, r3, #12
     4b8:	mov	r1, r3
     4bc:	mov	r0, r2
     4c0:	bl	e88c <poolInit>
     4c4:	ldr	r3, [fp, #-8]
     4c8:	add	r2, r3, #456	; 0x1c8
     4cc:	ldr	r3, [fp, #-8]
     4d0:	add	r3, r3, #12
     4d4:	mov	r1, r3
     4d8:	mov	r0, r2
     4dc:	bl	e88c <poolInit>
     4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     4e4:	ldr	r0, [fp, #-8]
     4e8:	bl	57c <parserInit>
     4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4f0:	cmp	r3, #0
     4f4:	beq	518 <parserCreate+0x378>
     4f8:	ldr	r3, [fp, #-8]
     4fc:	ldr	r3, [r3, #240]	; 0xf0
     500:	cmp	r3, #0
     504:	bne	518 <parserCreate+0x378>
     508:	ldr	r0, [fp, #-8]
     50c:	bl	108c <coda_XML_ParserFree>
     510:	mov	r3, #0
     514:	b	568 <parserCreate+0x3c8>
     518:	ldr	r3, [fp, #-32]	; 0xffffffe0
     51c:	cmp	r3, #0
     520:	beq	554 <parserCreate+0x3b4>
     524:	ldr	r3, [fp, #-8]
     528:	mov	r2, #1
     52c:	strb	r2, [r3, #244]	; 0xf4
     530:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
     534:	mov	r2, r0
     538:	ldr	r3, [fp, #-8]
     53c:	str	r2, [r3, #236]	; 0xec
     540:	ldr	r3, [fp, #-32]	; 0xffffffe0
     544:	ldrb	r2, [r3]
     548:	ldr	r3, [fp, #-8]
     54c:	strb	r2, [r3, #488]	; 0x1e8
     550:	b	564 <parserCreate+0x3c4>
     554:	bl	0 <coda_XmlGetUtf8InternalEncoding>
     558:	mov	r2, r0
     55c:	ldr	r3, [fp, #-8]
     560:	str	r2, [r3, #236]	; 0xec
     564:	ldr	r3, [fp, #-8]
     568:	mov	r0, r3
     56c:	sub	sp, fp, #4
     570:	ldr	fp, [sp]
     574:	add	sp, sp, #4
     578:	pop	{pc}		; (ldr pc, [sp], #4)

0000057c <parserInit>:
     57c:	str	fp, [sp, #-8]!
     580:	str	lr, [sp, #4]
     584:	add	fp, sp, #4
     588:	sub	sp, sp, #8
     58c:	str	r0, [fp, #-8]
     590:	str	r1, [fp, #-12]
     594:	ldr	r2, [fp, #-8]
     598:	movw	r3, #0
     59c:	movt	r3, #0
     5a0:	str	r3, [r2, #288]	; 0x120
     5a4:	ldr	r3, [fp, #-8]
     5a8:	add	r3, r3, #264	; 0x108
     5ac:	mov	r0, r3
     5b0:	bl	0 <coda_XmlPrologStateInit>
     5b4:	ldr	r3, [fp, #-12]
     5b8:	cmp	r3, #0
     5bc:	beq	5dc <parserInit+0x60>
     5c0:	ldr	r3, [fp, #-8]
     5c4:	add	r3, r3, #432	; 0x1b0
     5c8:	ldr	r1, [fp, #-12]
     5cc:	mov	r0, r3
     5d0:	bl	eb38 <poolCopyString>
     5d4:	mov	r2, r0
     5d8:	b	5e0 <parserInit+0x64>
     5dc:	mov	r2, #0
     5e0:	ldr	r3, [fp, #-8]
     5e4:	str	r2, [r3, #240]	; 0xf0
     5e8:	ldr	r3, [fp, #-8]
     5ec:	mov	r2, #0
     5f0:	str	r2, [r3, #368]	; 0x170
     5f4:	ldr	r3, [fp, #-8]
     5f8:	add	r0, r3, #156	; 0x9c
     5fc:	ldr	r3, [fp, #-8]
     600:	add	r3, r3, #152	; 0x98
     604:	mov	r2, #0
     608:	mov	r1, r3
     60c:	bl	0 <coda_XmlInitEncoding>
     610:	ldr	r3, [fp, #-8]
     614:	mov	r2, #0
     618:	str	r2, [r3]
     61c:	ldr	r3, [fp, #-8]
     620:	mov	r2, #0
     624:	str	r2, [r3, #4]
     628:	ldr	r3, [fp, #-8]
     62c:	mov	r2, #0
     630:	str	r2, [r3, #60]	; 0x3c
     634:	ldr	r3, [fp, #-8]
     638:	mov	r2, #0
     63c:	str	r2, [r3, #64]	; 0x40
     640:	ldr	r3, [fp, #-8]
     644:	mov	r2, #0
     648:	str	r2, [r3, #68]	; 0x44
     64c:	ldr	r3, [fp, #-8]
     650:	mov	r2, #0
     654:	str	r2, [r3, #72]	; 0x48
     658:	ldr	r3, [fp, #-8]
     65c:	mov	r2, #0
     660:	str	r2, [r3, #76]	; 0x4c
     664:	ldr	r3, [fp, #-8]
     668:	mov	r2, #0
     66c:	str	r2, [r3, #80]	; 0x50
     670:	ldr	r3, [fp, #-8]
     674:	mov	r2, #0
     678:	str	r2, [r3, #84]	; 0x54
     67c:	ldr	r3, [fp, #-8]
     680:	mov	r2, #0
     684:	str	r2, [r3, #88]	; 0x58
     688:	ldr	r3, [fp, #-8]
     68c:	mov	r2, #0
     690:	str	r2, [r3, #92]	; 0x5c
     694:	ldr	r3, [fp, #-8]
     698:	mov	r2, #0
     69c:	str	r2, [r3, #96]	; 0x60
     6a0:	ldr	r3, [fp, #-8]
     6a4:	mov	r2, #0
     6a8:	str	r2, [r3, #100]	; 0x64
     6ac:	ldr	r3, [fp, #-8]
     6b0:	mov	r2, #0
     6b4:	str	r2, [r3, #104]	; 0x68
     6b8:	ldr	r3, [fp, #-8]
     6bc:	mov	r2, #0
     6c0:	str	r2, [r3, #108]	; 0x6c
     6c4:	ldr	r3, [fp, #-8]
     6c8:	mov	r2, #0
     6cc:	str	r2, [r3, #112]	; 0x70
     6d0:	ldr	r3, [fp, #-8]
     6d4:	mov	r2, #0
     6d8:	str	r2, [r3, #116]	; 0x74
     6dc:	ldr	r3, [fp, #-8]
     6e0:	mov	r2, #0
     6e4:	str	r2, [r3, #120]	; 0x78
     6e8:	ldr	r3, [fp, #-8]
     6ec:	ldr	r2, [fp, #-8]
     6f0:	str	r2, [r3, #124]	; 0x7c
     6f4:	ldr	r3, [fp, #-8]
     6f8:	mov	r2, #0
     6fc:	str	r2, [r3, #128]	; 0x80
     700:	ldr	r3, [fp, #-8]
     704:	mov	r2, #0
     708:	str	r2, [r3, #136]	; 0x88
     70c:	ldr	r3, [fp, #-8]
     710:	mov	r2, #0
     714:	str	r2, [r3, #140]	; 0x8c
     718:	ldr	r3, [fp, #-8]
     71c:	mov	r2, #0
     720:	str	r2, [r3, #144]	; 0x90
     724:	ldr	r3, [fp, #-8]
     728:	mov	r2, #0
     72c:	str	r2, [r3, #148]	; 0x94
     730:	ldr	r3, [fp, #-8]
     734:	ldr	r2, [r3, #8]
     738:	ldr	r3, [fp, #-8]
     73c:	str	r2, [r3, #24]
     740:	ldr	r3, [fp, #-8]
     744:	ldr	r2, [r3, #8]
     748:	ldr	r3, [fp, #-8]
     74c:	str	r2, [r3, #28]
     750:	ldr	r1, [fp, #-8]
     754:	mov	r2, #0
     758:	mov	r3, #0
     75c:	strd	r2, [r1, #40]	; 0x28
     760:	ldr	r3, [fp, #-8]
     764:	mov	r2, #0
     768:	str	r2, [r3, #48]	; 0x30
     76c:	ldr	r3, [fp, #-8]
     770:	mov	r2, #0
     774:	str	r2, [r3, #352]	; 0x160
     778:	ldr	r3, [fp, #-8]
     77c:	mov	r2, #0
     780:	str	r2, [r3, #356]	; 0x164
     784:	ldr	r3, [fp, #-8]
     788:	mov	r2, #0
     78c:	str	r2, [r3, #324]	; 0x144
     790:	ldr	r3, [fp, #-8]
     794:	mov	r2, #0
     798:	str	r2, [r3, #328]	; 0x148
     79c:	ldr	r3, [fp, #-8]
     7a0:	mov	r2, #0
     7a4:	str	r2, [r3, #332]	; 0x14c
     7a8:	ldr	r3, [fp, #-8]
     7ac:	mov	r2, #0
     7b0:	str	r2, [r3, #336]	; 0x150
     7b4:	ldr	r3, [fp, #-8]
     7b8:	mov	r2, #0
     7bc:	str	r2, [r3, #340]	; 0x154
     7c0:	ldr	r3, [fp, #-8]
     7c4:	mov	r2, #0
     7c8:	str	r2, [r3, #344]	; 0x158
     7cc:	ldr	r3, [fp, #-8]
     7d0:	mov	r2, #0
     7d4:	str	r2, [r3, #348]	; 0x15c
     7d8:	ldr	r3, [fp, #-8]
     7dc:	mov	r2, #0
     7e0:	strb	r2, [r3, #360]	; 0x168
     7e4:	ldr	r3, [fp, #-8]
     7e8:	mov	r2, #0
     7ec:	strb	r2, [r3, #361]	; 0x169
     7f0:	ldr	r3, [fp, #-8]
     7f4:	add	r3, r3, #416	; 0x1a0
     7f8:	mov	r2, #16
     7fc:	mov	r1, #0
     800:	mov	r0, r3
     804:	bl	0 <memset>
     808:	ldr	r3, [fp, #-8]
     80c:	mov	r2, #0
     810:	str	r2, [r3, #292]	; 0x124
     814:	ldr	r3, [fp, #-8]
     818:	mov	r2, #0
     81c:	str	r2, [r3, #296]	; 0x128
     820:	ldr	r3, [fp, #-8]
     824:	mov	r2, #0
     828:	str	r2, [r3, #300]	; 0x12c
     82c:	ldr	r3, [fp, #-8]
     830:	mov	r2, #0
     834:	str	r2, [r3, #304]	; 0x130
     838:	ldr	r3, [fp, #-8]
     83c:	mov	r2, #0
     840:	str	r2, [r3, #308]	; 0x134
     844:	ldr	r3, [fp, #-8]
     848:	mov	r2, #1
     84c:	strb	r2, [r3, #316]	; 0x13c
     850:	ldr	r3, [fp, #-8]
     854:	mov	r2, #0
     858:	str	r2, [r3, #320]	; 0x140
     85c:	ldr	r3, [fp, #-8]
     860:	mov	r2, #0
     864:	str	r2, [r3, #372]	; 0x174
     868:	ldr	r3, [fp, #-8]
     86c:	mov	r2, #0
     870:	str	r2, [r3, #380]	; 0x17c
     874:	ldr	r3, [fp, #-8]
     878:	mov	r2, #0
     87c:	str	r2, [r3, #392]	; 0x188
     880:	ldr	r3, [fp, #-8]
     884:	mov	r2, #0
     888:	str	r2, [r3, #248]	; 0xf8
     88c:	ldr	r3, [fp, #-8]
     890:	mov	r2, #0
     894:	str	r2, [r3, #260]	; 0x104
     898:	ldr	r3, [fp, #-8]
     89c:	mov	r2, #0
     8a0:	str	r2, [r3, #252]	; 0xfc
     8a4:	ldr	r3, [fp, #-8]
     8a8:	mov	r2, #0
     8ac:	str	r2, [r3, #492]	; 0x1ec
     8b0:	ldr	r3, [fp, #-8]
     8b4:	mov	r2, #0
     8b8:	str	r2, [r3, #496]	; 0x1f0
     8bc:	ldr	r3, [fp, #-8]
     8c0:	mov	r2, #0
     8c4:	strb	r2, [r3, #504]	; 0x1f8
     8c8:	ldr	r3, [fp, #-8]
     8cc:	mov	r2, #0
     8d0:	strb	r2, [r3, #505]	; 0x1f9
     8d4:	ldr	r3, [fp, #-8]
     8d8:	mov	r2, #0
     8dc:	str	r2, [r3, #508]	; 0x1fc
     8e0:	ldr	r3, [fp, #-8]
     8e4:	mov	r2, #0
     8e8:	str	r2, [r3, #512]	; 0x200
     8ec:	nop	{0}
     8f0:	sub	sp, fp, #4
     8f4:	ldr	fp, [sp]
     8f8:	add	sp, sp, #4
     8fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000900 <moveToFreeBindingList>:
     900:	push	{fp}		; (str fp, [sp, #-4]!)
     904:	add	fp, sp, #0
     908:	sub	sp, sp, #20
     90c:	str	r0, [fp, #-16]
     910:	str	r1, [fp, #-20]	; 0xffffffec
     914:	b	948 <moveToFreeBindingList+0x48>
     918:	ldr	r3, [fp, #-20]	; 0xffffffec
     91c:	str	r3, [fp, #-8]
     920:	ldr	r3, [fp, #-20]	; 0xffffffec
     924:	ldr	r3, [r3, #4]
     928:	str	r3, [fp, #-20]	; 0xffffffec
     92c:	ldr	r3, [fp, #-16]
     930:	ldr	r2, [r3, #384]	; 0x180
     934:	ldr	r3, [fp, #-8]
     938:	str	r2, [r3, #4]
     93c:	ldr	r3, [fp, #-16]
     940:	ldr	r2, [fp, #-8]
     944:	str	r2, [r3, #384]	; 0x180
     948:	ldr	r3, [fp, #-20]	; 0xffffffec
     94c:	cmp	r3, #0
     950:	bne	918 <moveToFreeBindingList+0x18>
     954:	nop	{0}
     958:	add	sp, fp, #0
     95c:	pop	{fp}		; (ldr fp, [sp], #4)
     960:	bx	lr

00000964 <coda_XML_ParserReset>:
     964:	str	fp, [sp, #-8]!
     968:	str	lr, [sp, #4]
     96c:	add	fp, sp, #4
     970:	sub	sp, sp, #24
     974:	str	r0, [fp, #-24]	; 0xffffffe8
     978:	str	r1, [fp, #-28]	; 0xffffffe4
     97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     980:	ldr	r3, [r3, #492]	; 0x1ec
     984:	cmp	r3, #0
     988:	beq	994 <coda_XML_ParserReset+0x30>
     98c:	mov	r3, #0
     990:	b	aec <coda_XML_ParserReset+0x188>
     994:	ldr	r3, [fp, #-24]	; 0xffffffe8
     998:	ldr	r3, [r3, #372]	; 0x174
     99c:	str	r3, [fp, #-8]
     9a0:	b	9f4 <coda_XML_ParserReset+0x90>
     9a4:	ldr	r3, [fp, #-8]
     9a8:	str	r3, [fp, #-16]
     9ac:	ldr	r3, [fp, #-8]
     9b0:	ldr	r3, [r3]
     9b4:	str	r3, [fp, #-8]
     9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9bc:	ldr	r2, [r3, #376]	; 0x178
     9c0:	ldr	r3, [fp, #-16]
     9c4:	str	r2, [r3]
     9c8:	ldr	r3, [fp, #-16]
     9cc:	ldr	r3, [r3, #44]	; 0x2c
     9d0:	mov	r1, r3
     9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9d8:	bl	900 <moveToFreeBindingList>
     9dc:	ldr	r3, [fp, #-16]
     9e0:	mov	r2, #0
     9e4:	str	r2, [r3, #44]	; 0x2c
     9e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9ec:	ldr	r2, [fp, #-16]
     9f0:	str	r2, [r3, #376]	; 0x178
     9f4:	ldr	r3, [fp, #-8]
     9f8:	cmp	r3, #0
     9fc:	bne	9a4 <coda_XML_ParserReset+0x40>
     a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a04:	ldr	r3, [r3, #308]	; 0x134
     a08:	str	r3, [fp, #-12]
     a0c:	b	a40 <coda_XML_ParserReset+0xdc>
     a10:	ldr	r3, [fp, #-12]
     a14:	str	r3, [fp, #-20]	; 0xffffffec
     a18:	ldr	r3, [fp, #-20]	; 0xffffffec
     a1c:	ldr	r3, [r3, #8]
     a20:	str	r3, [fp, #-12]
     a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a28:	ldr	r2, [r3, #312]	; 0x138
     a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
     a30:	str	r2, [r3, #8]
     a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a38:	ldr	r2, [fp, #-20]	; 0xffffffec
     a3c:	str	r2, [r3, #312]	; 0x138
     a40:	ldr	r3, [fp, #-12]
     a44:	cmp	r3, #0
     a48:	bne	a10 <coda_XML_ParserReset+0xac>
     a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a50:	ldr	r3, [r3, #380]	; 0x17c
     a54:	mov	r1, r3
     a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a5c:	bl	900 <moveToFreeBindingList>
     a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a64:	ldr	r3, [r3, #20]
     a68:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a6c:	ldr	r2, [r2, #248]	; 0xf8
     a70:	mov	r0, r2
     a74:	blx	r3
     a78:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a7c:	ldr	r3, [r3, #260]	; 0x104
     a80:	cmp	r3, #0
     a84:	beq	aa0 <coda_XML_ParserReset+0x13c>
     a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a8c:	ldr	r3, [r3, #260]	; 0x104
     a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a94:	ldr	r2, [r2, #252]	; 0xfc
     a98:	mov	r0, r2
     a9c:	blx	r3
     aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     aa4:	add	r3, r3, #432	; 0x1b0
     aa8:	mov	r0, r3
     aac:	bl	e8f8 <poolClear>
     ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ab4:	add	r3, r3, #456	; 0x1c8
     ab8:	mov	r0, r3
     abc:	bl	e8f8 <poolClear>
     ac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ac8:	bl	57c <parserInit>
     acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ad0:	ldr	r2, [r3, #364]	; 0x16c
     ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ad8:	add	r3, r3, #12
     adc:	mov	r1, r3
     ae0:	mov	r0, r2
     ae4:	bl	d290 <dtdReset>
     ae8:	mov	r3, #1
     aec:	mov	r0, r3
     af0:	sub	sp, fp, #4
     af4:	ldr	fp, [sp]
     af8:	add	sp, sp, #4
     afc:	pop	{pc}		; (ldr pc, [sp], #4)

00000b00 <coda_XML_SetEncoding>:
     b00:	str	fp, [sp, #-8]!
     b04:	str	lr, [sp, #4]
     b08:	add	fp, sp, #4
     b0c:	sub	sp, sp, #8
     b10:	str	r0, [fp, #-8]
     b14:	str	r1, [fp, #-12]
     b18:	ldr	r3, [fp, #-8]
     b1c:	ldr	r3, [r3, #496]	; 0x1f0
     b20:	cmp	r3, #1
     b24:	beq	b38 <coda_XML_SetEncoding+0x38>
     b28:	ldr	r3, [fp, #-8]
     b2c:	ldr	r3, [r3, #496]	; 0x1f0
     b30:	cmp	r3, #3
     b34:	bne	b40 <coda_XML_SetEncoding+0x40>
     b38:	mov	r3, #0
     b3c:	b	b98 <coda_XML_SetEncoding+0x98>
     b40:	ldr	r3, [fp, #-12]
     b44:	cmp	r3, #0
     b48:	bne	b5c <coda_XML_SetEncoding+0x5c>
     b4c:	ldr	r3, [fp, #-8]
     b50:	mov	r2, #0
     b54:	str	r2, [r3, #240]	; 0xf0
     b58:	b	b94 <coda_XML_SetEncoding+0x94>
     b5c:	ldr	r3, [fp, #-8]
     b60:	add	r3, r3, #432	; 0x1b0
     b64:	ldr	r1, [fp, #-12]
     b68:	mov	r0, r3
     b6c:	bl	eb38 <poolCopyString>
     b70:	mov	r2, r0
     b74:	ldr	r3, [fp, #-8]
     b78:	str	r2, [r3, #240]	; 0xf0
     b7c:	ldr	r3, [fp, #-8]
     b80:	ldr	r3, [r3, #240]	; 0xf0
     b84:	cmp	r3, #0
     b88:	bne	b94 <coda_XML_SetEncoding+0x94>
     b8c:	mov	r3, #0
     b90:	b	b98 <coda_XML_SetEncoding+0x98>
     b94:	mov	r3, #1
     b98:	mov	r0, r3
     b9c:	sub	sp, fp, #4
     ba0:	ldr	fp, [sp]
     ba4:	add	sp, sp, #4
     ba8:	pop	{pc}		; (ldr pc, [sp], #4)

00000bac <coda_XML_ExternalEntityParserCreate>:
     bac:	str	fp, [sp, #-8]!
     bb0:	str	lr, [sp, #4]
     bb4:	add	fp, sp, #4
     bb8:	sub	sp, sp, #152	; 0x98
     bbc:	str	r0, [fp, #-144]	; 0xffffff70
     bc0:	str	r1, [fp, #-148]	; 0xffffff6c
     bc4:	str	r2, [fp, #-152]	; 0xffffff68
     bc8:	ldr	r3, [fp, #-144]	; 0xffffff70
     bcc:	str	r3, [fp, #-8]
     bd0:	mov	r3, #0
     bd4:	str	r3, [fp, #-12]
     bd8:	ldr	r3, [fp, #-8]
     bdc:	ldr	r3, [r3, #364]	; 0x16c
     be0:	str	r3, [fp, #-16]
     be4:	ldr	r3, [fp, #-8]
     be8:	ldr	r3, [r3, #60]	; 0x3c
     bec:	str	r3, [fp, #-20]	; 0xffffffec
     bf0:	ldr	r3, [fp, #-8]
     bf4:	ldr	r3, [r3, #64]	; 0x40
     bf8:	str	r3, [fp, #-24]	; 0xffffffe8
     bfc:	ldr	r3, [fp, #-8]
     c00:	ldr	r3, [r3, #68]	; 0x44
     c04:	str	r3, [fp, #-28]	; 0xffffffe4
     c08:	ldr	r3, [fp, #-8]
     c0c:	ldr	r3, [r3, #72]	; 0x48
     c10:	str	r3, [fp, #-32]	; 0xffffffe0
     c14:	ldr	r3, [fp, #-8]
     c18:	ldr	r3, [r3, #76]	; 0x4c
     c1c:	str	r3, [fp, #-36]	; 0xffffffdc
     c20:	ldr	r3, [fp, #-8]
     c24:	ldr	r3, [r3, #80]	; 0x50
     c28:	str	r3, [fp, #-40]	; 0xffffffd8
     c2c:	ldr	r3, [fp, #-8]
     c30:	ldr	r3, [r3, #84]	; 0x54
     c34:	str	r3, [fp, #-44]	; 0xffffffd4
     c38:	ldr	r3, [fp, #-8]
     c3c:	ldr	r3, [r3, #88]	; 0x58
     c40:	str	r3, [fp, #-48]	; 0xffffffd0
     c44:	ldr	r3, [fp, #-8]
     c48:	ldr	r3, [r3, #100]	; 0x64
     c4c:	str	r3, [fp, #-52]	; 0xffffffcc
     c50:	ldr	r3, [fp, #-8]
     c54:	ldr	r3, [r3, #104]	; 0x68
     c58:	str	r3, [fp, #-56]	; 0xffffffc8
     c5c:	ldr	r3, [fp, #-8]
     c60:	ldr	r3, [r3, #108]	; 0x6c
     c64:	str	r3, [fp, #-60]	; 0xffffffc4
     c68:	ldr	r3, [fp, #-8]
     c6c:	ldr	r3, [r3, #112]	; 0x70
     c70:	str	r3, [fp, #-64]	; 0xffffffc0
     c74:	ldr	r3, [fp, #-8]
     c78:	ldr	r3, [r3, #116]	; 0x74
     c7c:	str	r3, [fp, #-68]	; 0xffffffbc
     c80:	ldr	r3, [fp, #-8]
     c84:	ldr	r3, [r3, #120]	; 0x78
     c88:	str	r3, [fp, #-72]	; 0xffffffb8
     c8c:	ldr	r3, [fp, #-8]
     c90:	ldr	r3, [r3, #128]	; 0x80
     c94:	str	r3, [fp, #-76]	; 0xffffffb4
     c98:	ldr	r3, [fp, #-8]
     c9c:	ldr	r3, [r3, #132]	; 0x84
     ca0:	str	r3, [fp, #-80]	; 0xffffffb0
     ca4:	ldr	r3, [fp, #-8]
     ca8:	ldr	r3, [r3, #136]	; 0x88
     cac:	str	r3, [fp, #-84]	; 0xffffffac
     cb0:	ldr	r3, [fp, #-8]
     cb4:	ldr	r3, [r3, #140]	; 0x8c
     cb8:	str	r3, [fp, #-88]	; 0xffffffa8
     cbc:	ldr	r3, [fp, #-8]
     cc0:	ldr	r3, [r3, #144]	; 0x90
     cc4:	str	r3, [fp, #-92]	; 0xffffffa4
     cc8:	ldr	r3, [fp, #-8]
     ccc:	ldr	r3, [r3, #148]	; 0x94
     cd0:	str	r3, [fp, #-96]	; 0xffffffa0
     cd4:	ldr	r3, [fp, #-8]
     cd8:	ldr	r3, [r3, #352]	; 0x160
     cdc:	str	r3, [fp, #-100]	; 0xffffff9c
     ce0:	ldr	r3, [fp, #-8]
     ce4:	ldr	r3, [r3]
     ce8:	str	r3, [fp, #-104]	; 0xffffff98
     cec:	ldr	r3, [fp, #-8]
     cf0:	ldr	r3, [r3, #4]
     cf4:	str	r3, [fp, #-108]	; 0xffffff94
     cf8:	ldr	r3, [fp, #-8]
     cfc:	ldrb	r3, [r3, #316]	; 0x13c
     d00:	strb	r3, [fp, #-109]	; 0xffffff93
     d04:	ldr	r3, [fp, #-8]
     d08:	ldr	r3, [r3, #124]	; 0x7c
     d0c:	str	r3, [fp, #-116]	; 0xffffff8c
     d10:	ldr	r3, [fp, #-8]
     d14:	ldr	r3, [r3, #508]	; 0x1fc
     d18:	str	r3, [fp, #-120]	; 0xffffff88
     d1c:	ldr	r3, [fp, #-8]
     d20:	ldr	r3, [r3, #284]	; 0x11c
     d24:	str	r3, [fp, #-124]	; 0xffffff84
     d28:	ldr	r3, [fp, #-8]
     d2c:	ldrb	r3, [r3, #245]	; 0xf5
     d30:	strb	r3, [fp, #-125]	; 0xffffff83
     d34:	ldr	r3, [fp, #-8]
     d38:	ldr	r3, [r3, #512]	; 0x200
     d3c:	str	r3, [fp, #-132]	; 0xffffff7c
     d40:	ldr	r3, [fp, #-148]	; 0xffffff6c
     d44:	cmp	r3, #0
     d48:	bne	d54 <coda_XML_ExternalEntityParserCreate+0x1a8>
     d4c:	ldr	r3, [fp, #-16]
     d50:	str	r3, [fp, #-12]
     d54:	ldr	r3, [fp, #-8]
     d58:	ldrb	r3, [r3, #244]	; 0xf4
     d5c:	cmp	r3, #0
     d60:	beq	d90 <coda_XML_ExternalEntityParserCreate+0x1e4>
     d64:	ldr	r3, [fp, #-8]
     d68:	ldrb	r3, [r3, #488]	; 0x1e8
     d6c:	strb	r3, [fp, #-136]	; 0xffffff78
     d70:	ldr	r3, [fp, #-8]
     d74:	add	r1, r3, #12
     d78:	sub	r2, fp, #136	; 0x88
     d7c:	ldr	r3, [fp, #-12]
     d80:	ldr	r0, [fp, #-152]	; 0xffffff68
     d84:	bl	1a0 <parserCreate>
     d88:	str	r0, [fp, #-8]
     d8c:	b	dac <coda_XML_ExternalEntityParserCreate+0x200>
     d90:	ldr	r3, [fp, #-8]
     d94:	add	r1, r3, #12
     d98:	ldr	r3, [fp, #-12]
     d9c:	mov	r2, #0
     da0:	ldr	r0, [fp, #-152]	; 0xffffff68
     da4:	bl	1a0 <parserCreate>
     da8:	str	r0, [fp, #-8]
     dac:	ldr	r3, [fp, #-8]
     db0:	cmp	r3, #0
     db4:	bne	dc0 <coda_XML_ExternalEntityParserCreate+0x214>
     db8:	mov	r3, #0
     dbc:	b	ffc <coda_XML_ExternalEntityParserCreate+0x450>
     dc0:	ldr	r3, [fp, #-8]
     dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
     dc8:	str	r2, [r3, #60]	; 0x3c
     dcc:	ldr	r3, [fp, #-8]
     dd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     dd4:	str	r2, [r3, #64]	; 0x40
     dd8:	ldr	r3, [fp, #-8]
     ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     de0:	str	r2, [r3, #68]	; 0x44
     de4:	ldr	r3, [fp, #-8]
     de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     dec:	str	r2, [r3, #72]	; 0x48
     df0:	ldr	r3, [fp, #-8]
     df4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     df8:	str	r2, [r3, #76]	; 0x4c
     dfc:	ldr	r3, [fp, #-8]
     e00:	ldr	r2, [fp, #-40]	; 0xffffffd8
     e04:	str	r2, [r3, #80]	; 0x50
     e08:	ldr	r3, [fp, #-8]
     e0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     e10:	str	r2, [r3, #84]	; 0x54
     e14:	ldr	r3, [fp, #-8]
     e18:	ldr	r2, [fp, #-48]	; 0xffffffd0
     e1c:	str	r2, [r3, #88]	; 0x58
     e20:	ldr	r3, [fp, #-8]
     e24:	ldr	r2, [fp, #-52]	; 0xffffffcc
     e28:	str	r2, [r3, #100]	; 0x64
     e2c:	ldr	r3, [fp, #-8]
     e30:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e34:	str	r2, [r3, #104]	; 0x68
     e38:	ldr	r3, [fp, #-8]
     e3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
     e40:	str	r2, [r3, #108]	; 0x6c
     e44:	ldr	r3, [fp, #-8]
     e48:	ldr	r2, [fp, #-64]	; 0xffffffc0
     e4c:	str	r2, [r3, #112]	; 0x70
     e50:	ldr	r3, [fp, #-8]
     e54:	ldr	r2, [fp, #-68]	; 0xffffffbc
     e58:	str	r2, [r3, #116]	; 0x74
     e5c:	ldr	r3, [fp, #-8]
     e60:	ldr	r2, [fp, #-72]	; 0xffffffb8
     e64:	str	r2, [r3, #120]	; 0x78
     e68:	ldr	r3, [fp, #-8]
     e6c:	ldr	r2, [fp, #-76]	; 0xffffffb4
     e70:	str	r2, [r3, #128]	; 0x80
     e74:	ldr	r3, [fp, #-8]
     e78:	ldr	r2, [fp, #-80]	; 0xffffffb0
     e7c:	str	r2, [r3, #132]	; 0x84
     e80:	ldr	r3, [fp, #-8]
     e84:	ldr	r2, [fp, #-84]	; 0xffffffac
     e88:	str	r2, [r3, #136]	; 0x88
     e8c:	ldr	r3, [fp, #-8]
     e90:	ldr	r2, [fp, #-88]	; 0xffffffa8
     e94:	str	r2, [r3, #140]	; 0x8c
     e98:	ldr	r3, [fp, #-8]
     e9c:	ldr	r2, [fp, #-92]	; 0xffffffa4
     ea0:	str	r2, [r3, #144]	; 0x90
     ea4:	ldr	r3, [fp, #-8]
     ea8:	ldr	r2, [fp, #-96]	; 0xffffffa0
     eac:	str	r2, [r3, #148]	; 0x94
     eb0:	ldr	r3, [fp, #-8]
     eb4:	ldr	r2, [fp, #-100]	; 0xffffff9c
     eb8:	str	r2, [r3, #352]	; 0x160
     ebc:	ldr	r3, [fp, #-8]
     ec0:	ldr	r2, [fp, #-104]	; 0xffffff98
     ec4:	str	r2, [r3]
     ec8:	ldr	r2, [fp, #-104]	; 0xffffff98
     ecc:	ldr	r3, [fp, #-108]	; 0xffffff94
     ed0:	cmp	r2, r3
     ed4:	bne	eec <coda_XML_ExternalEntityParserCreate+0x340>
     ed8:	ldr	r3, [fp, #-8]
     edc:	ldr	r2, [r3]
     ee0:	ldr	r3, [fp, #-8]
     ee4:	str	r2, [r3, #4]
     ee8:	b	ef8 <coda_XML_ExternalEntityParserCreate+0x34c>
     eec:	ldr	r3, [fp, #-8]
     ef0:	ldr	r2, [fp, #-8]
     ef4:	str	r2, [r3, #4]
     ef8:	ldr	r2, [fp, #-116]	; 0xffffff8c
     efc:	ldr	r3, [fp, #-144]	; 0xffffff70
     f00:	cmp	r2, r3
     f04:	beq	f14 <coda_XML_ExternalEntityParserCreate+0x368>
     f08:	ldr	r3, [fp, #-8]
     f0c:	ldr	r2, [fp, #-116]	; 0xffffff8c
     f10:	str	r2, [r3, #124]	; 0x7c
     f14:	ldr	r3, [fp, #-8]
     f18:	ldrb	r2, [fp, #-109]	; 0xffffff93
     f1c:	strb	r2, [r3, #316]	; 0x13c
     f20:	ldr	r3, [fp, #-8]
     f24:	ldrb	r2, [fp, #-125]	; 0xffffff83
     f28:	strb	r2, [r3, #245]	; 0xf5
     f2c:	ldr	r3, [fp, #-8]
     f30:	ldr	r2, [fp, #-132]	; 0xffffff7c
     f34:	str	r2, [r3, #512]	; 0x200
     f38:	ldr	r3, [fp, #-8]
     f3c:	ldr	r2, [fp, #-144]	; 0xffffff70
     f40:	str	r2, [r3, #492]	; 0x1ec
     f44:	ldr	r3, [fp, #-8]
     f48:	ldr	r2, [fp, #-120]	; 0xffffff88
     f4c:	str	r2, [r3, #508]	; 0x1fc
     f50:	ldr	r3, [fp, #-8]
     f54:	ldr	r2, [fp, #-124]	; 0xffffff84
     f58:	str	r2, [r3, #284]	; 0x11c
     f5c:	ldr	r3, [fp, #-148]	; 0xffffff6c
     f60:	cmp	r3, #0
     f64:	beq	fcc <coda_XML_ExternalEntityParserCreate+0x420>
     f68:	ldr	r3, [fp, #-8]
     f6c:	ldr	r1, [r3, #364]	; 0x16c
     f70:	ldr	r3, [fp, #-8]
     f74:	add	r3, r3, #12
     f78:	ldr	r2, [fp, #-16]
     f7c:	ldr	r0, [fp, #-144]	; 0xffffff70
     f80:	bl	d5a8 <dtdCopy>
     f84:	mov	r3, r0
     f88:	cmp	r3, #0
     f8c:	beq	fa8 <coda_XML_ExternalEntityParserCreate+0x3fc>
     f90:	ldr	r1, [fp, #-148]	; 0xffffff6c
     f94:	ldr	r0, [fp, #-8]
     f98:	bl	cb78 <setContext>
     f9c:	mov	r3, r0
     fa0:	cmp	r3, #0
     fa4:	bne	fb8 <coda_XML_ExternalEntityParserCreate+0x40c>
     fa8:	ldr	r0, [fp, #-8]
     fac:	bl	108c <coda_XML_ParserFree>
     fb0:	mov	r3, #0
     fb4:	b	ffc <coda_XML_ExternalEntityParserCreate+0x450>
     fb8:	ldr	r2, [fp, #-8]
     fbc:	movw	r3, #0
     fc0:	movt	r3, #0
     fc4:	str	r3, [r2, #288]	; 0x120
     fc8:	b	ff8 <coda_XML_ExternalEntityParserCreate+0x44c>
     fcc:	ldr	r3, [fp, #-8]
     fd0:	mov	r2, #1
     fd4:	strb	r2, [r3, #504]	; 0x1f8
     fd8:	ldr	r3, [fp, #-8]
     fdc:	add	r3, r3, #264	; 0x108
     fe0:	mov	r0, r3
     fe4:	bl	0 <coda_XmlPrologStateInitExternalEntity>
     fe8:	ldr	r2, [fp, #-8]
     fec:	movw	r3, #0
     ff0:	movt	r3, #0
     ff4:	str	r3, [r2, #288]	; 0x120
     ff8:	ldr	r3, [fp, #-8]
     ffc:	mov	r0, r3
    1000:	sub	sp, fp, #4
    1004:	ldr	fp, [sp]
    1008:	add	sp, sp, #4
    100c:	pop	{pc}		; (ldr pc, [sp], #4)

00001010 <destroyBindings>:
    1010:	str	fp, [sp, #-8]!
    1014:	str	lr, [sp, #4]
    1018:	add	fp, sp, #4
    101c:	sub	sp, sp, #16
    1020:	str	r0, [fp, #-16]
    1024:	str	r1, [fp, #-20]	; 0xffffffec
    1028:	ldr	r3, [fp, #-16]
    102c:	str	r3, [fp, #-8]
    1030:	ldr	r3, [fp, #-8]
    1034:	cmp	r3, #0
    1038:	beq	1074 <destroyBindings+0x64>
    103c:	ldr	r3, [fp, #-8]
    1040:	ldr	r3, [r3, #4]
    1044:	str	r3, [fp, #-16]
    1048:	ldr	r3, [fp, #-20]	; 0xffffffec
    104c:	ldr	r3, [r3, #20]
    1050:	ldr	r2, [fp, #-8]
    1054:	ldr	r2, [r2, #16]
    1058:	mov	r0, r2
    105c:	blx	r3
    1060:	ldr	r3, [fp, #-20]	; 0xffffffec
    1064:	ldr	r3, [r3, #20]
    1068:	ldr	r0, [fp, #-8]
    106c:	blx	r3
    1070:	b	1028 <destroyBindings+0x18>
    1074:	nop	{0}
    1078:	nop	{0}
    107c:	sub	sp, fp, #4
    1080:	ldr	fp, [sp]
    1084:	add	sp, sp, #4
    1088:	pop	{pc}		; (ldr pc, [sp], #4)

0000108c <coda_XML_ParserFree>:
    108c:	str	fp, [sp, #-8]!
    1090:	str	lr, [sp, #4]
    1094:	add	fp, sp, #4
    1098:	sub	sp, sp, #24
    109c:	str	r0, [fp, #-24]	; 0xffffffe8
    10a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10a4:	cmp	r3, #0
    10a8:	beq	1318 <coda_XML_ParserFree+0x28c>
    10ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10b0:	ldr	r3, [r3, #372]	; 0x174
    10b4:	str	r3, [fp, #-8]
    10b8:	ldr	r3, [fp, #-8]
    10bc:	cmp	r3, #0
    10c0:	bne	10ec <coda_XML_ParserFree+0x60>
    10c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10c8:	ldr	r3, [r3, #376]	; 0x178
    10cc:	cmp	r3, #0
    10d0:	beq	1140 <coda_XML_ParserFree+0xb4>
    10d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10d8:	ldr	r3, [r3, #376]	; 0x178
    10dc:	str	r3, [fp, #-8]
    10e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10e4:	mov	r2, #0
    10e8:	str	r2, [r3, #376]	; 0x178
    10ec:	ldr	r3, [fp, #-8]
    10f0:	str	r3, [fp, #-20]	; 0xffffffec
    10f4:	ldr	r3, [fp, #-8]
    10f8:	ldr	r3, [r3]
    10fc:	str	r3, [fp, #-8]
    1100:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1104:	ldr	r3, [r3, #20]
    1108:	ldr	r2, [fp, #-20]	; 0xffffffec
    110c:	ldr	r2, [r2, #36]	; 0x24
    1110:	mov	r0, r2
    1114:	blx	r3
    1118:	ldr	r3, [fp, #-20]	; 0xffffffec
    111c:	ldr	r3, [r3, #44]	; 0x2c
    1120:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1124:	mov	r0, r3
    1128:	bl	1010 <destroyBindings>
    112c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1130:	ldr	r3, [r3, #20]
    1134:	ldr	r0, [fp, #-20]	; 0xffffffec
    1138:	blx	r3
    113c:	b	10b8 <coda_XML_ParserFree+0x2c>
    1140:	nop	{0}
    1144:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1148:	ldr	r3, [r3, #308]	; 0x134
    114c:	str	r3, [fp, #-12]
    1150:	ldr	r3, [fp, #-12]
    1154:	cmp	r3, #0
    1158:	bne	1184 <coda_XML_ParserFree+0xf8>
    115c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1160:	ldr	r3, [r3, #312]	; 0x138
    1164:	cmp	r3, #0
    1168:	beq	11ac <coda_XML_ParserFree+0x120>
    116c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1170:	ldr	r3, [r3, #312]	; 0x138
    1174:	str	r3, [fp, #-12]
    1178:	ldr	r3, [fp, #-24]	; 0xffffffe8
    117c:	mov	r2, #0
    1180:	str	r2, [r3, #312]	; 0x138
    1184:	ldr	r3, [fp, #-12]
    1188:	str	r3, [fp, #-16]
    118c:	ldr	r3, [fp, #-12]
    1190:	ldr	r3, [r3, #8]
    1194:	str	r3, [fp, #-12]
    1198:	ldr	r3, [fp, #-24]	; 0xffffffe8
    119c:	ldr	r3, [r3, #20]
    11a0:	ldr	r0, [fp, #-16]
    11a4:	blx	r3
    11a8:	b	1150 <coda_XML_ParserFree+0xc4>
    11ac:	nop	{0}
    11b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11b4:	ldr	r3, [r3, #384]	; 0x180
    11b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11bc:	mov	r0, r3
    11c0:	bl	1010 <destroyBindings>
    11c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11c8:	ldr	r3, [r3, #380]	; 0x17c
    11cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11d0:	mov	r0, r3
    11d4:	bl	1010 <destroyBindings>
    11d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11dc:	add	r3, r3, #432	; 0x1b0
    11e0:	mov	r0, r3
    11e4:	bl	e9b8 <poolDestroy>
    11e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11ec:	add	r3, r3, #456	; 0x1c8
    11f0:	mov	r0, r3
    11f4:	bl	e9b8 <poolDestroy>
    11f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11fc:	ldrb	r3, [r3, #504]	; 0x1f8
    1200:	cmp	r3, #0
    1204:	bne	124c <coda_XML_ParserFree+0x1c0>
    1208:	ldr	r3, [fp, #-24]	; 0xffffffe8
    120c:	ldr	r3, [r3, #364]	; 0x16c
    1210:	cmp	r3, #0
    1214:	beq	124c <coda_XML_ParserFree+0x1c0>
    1218:	ldr	r3, [fp, #-24]	; 0xffffffe8
    121c:	ldr	r0, [r3, #364]	; 0x16c
    1220:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1224:	ldr	r3, [r3, #492]	; 0x1ec
    1228:	cmp	r3, #0
    122c:	moveq	r3, #1
    1230:	movne	r3, #0
    1234:	uxtb	r3, r3
    1238:	mov	r1, r3
    123c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1240:	add	r3, r3, #12
    1244:	mov	r2, r3
    1248:	bl	d458 <dtdDestroy>
    124c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1250:	ldr	r3, [r3, #20]
    1254:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1258:	ldr	r2, [r2, #400]	; 0x190
    125c:	mov	r0, r2
    1260:	blx	r3
    1264:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1268:	ldr	r3, [r3, #20]
    126c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1270:	ldr	r2, [r2, #480]	; 0x1e0
    1274:	mov	r0, r2
    1278:	blx	r3
    127c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1280:	ldr	r3, [r3, #20]
    1284:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1288:	ldr	r2, [r2, #8]
    128c:	mov	r0, r2
    1290:	blx	r3
    1294:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1298:	ldr	r3, [r3, #20]
    129c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    12a0:	ldr	r2, [r2, #52]	; 0x34
    12a4:	mov	r0, r2
    12a8:	blx	r3
    12ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12b0:	ldr	r3, [r3, #20]
    12b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    12b8:	ldr	r2, [r2, #404]	; 0x194
    12bc:	mov	r0, r2
    12c0:	blx	r3
    12c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12c8:	ldr	r3, [r3, #20]
    12cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    12d0:	ldr	r2, [r2, #248]	; 0xf8
    12d4:	mov	r0, r2
    12d8:	blx	r3
    12dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12e0:	ldr	r3, [r3, #260]	; 0x104
    12e4:	cmp	r3, #0
    12e8:	beq	1304 <coda_XML_ParserFree+0x278>
    12ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12f0:	ldr	r3, [r3, #260]	; 0x104
    12f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    12f8:	ldr	r2, [r2, #252]	; 0xfc
    12fc:	mov	r0, r2
    1300:	blx	r3
    1304:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1308:	ldr	r3, [r3, #20]
    130c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1310:	blx	r3
    1314:	b	131c <coda_XML_ParserFree+0x290>
    1318:	nop	{0}
    131c:	sub	sp, fp, #4
    1320:	ldr	fp, [sp]
    1324:	add	sp, sp, #4
    1328:	pop	{pc}		; (ldr pc, [sp], #4)

0000132c <coda_XML_UseParserAsHandlerArg>:
    132c:	push	{fp}		; (str fp, [sp, #-4]!)
    1330:	add	fp, sp, #0
    1334:	sub	sp, sp, #12
    1338:	str	r0, [fp, #-8]
    133c:	ldr	r3, [fp, #-8]
    1340:	ldr	r2, [fp, #-8]
    1344:	str	r2, [r3, #4]
    1348:	nop	{0}
    134c:	add	sp, fp, #0
    1350:	pop	{fp}		; (ldr fp, [sp], #4)
    1354:	bx	lr

00001358 <coda_XML_UseForeignDTD>:
    1358:	push	{fp}		; (str fp, [sp, #-4]!)
    135c:	add	fp, sp, #0
    1360:	sub	sp, sp, #12
    1364:	str	r0, [fp, #-8]
    1368:	mov	r3, r1
    136c:	strb	r3, [fp, #-9]
    1370:	ldr	r3, [fp, #-8]
    1374:	ldr	r3, [r3, #496]	; 0x1f0
    1378:	cmp	r3, #1
    137c:	beq	1390 <coda_XML_UseForeignDTD+0x38>
    1380:	ldr	r3, [fp, #-8]
    1384:	ldr	r3, [r3, #496]	; 0x1f0
    1388:	cmp	r3, #3
    138c:	bne	1398 <coda_XML_UseForeignDTD+0x40>
    1390:	mov	r3, #26
    1394:	b	13a8 <coda_XML_UseForeignDTD+0x50>
    1398:	ldr	r3, [fp, #-8]
    139c:	ldrb	r2, [fp, #-9]
    13a0:	strb	r2, [r3, #505]	; 0x1f9
    13a4:	mov	r3, #0
    13a8:	mov	r0, r3
    13ac:	add	sp, fp, #0
    13b0:	pop	{fp}		; (ldr fp, [sp], #4)
    13b4:	bx	lr

000013b8 <coda_XML_SetReturnNSTriplet>:
    13b8:	push	{fp}		; (str fp, [sp, #-4]!)
    13bc:	add	fp, sp, #0
    13c0:	sub	sp, sp, #12
    13c4:	str	r0, [fp, #-8]
    13c8:	str	r1, [fp, #-12]
    13cc:	ldr	r3, [fp, #-8]
    13d0:	ldr	r3, [r3, #496]	; 0x1f0
    13d4:	cmp	r3, #1
    13d8:	beq	1410 <coda_XML_SetReturnNSTriplet+0x58>
    13dc:	ldr	r3, [fp, #-8]
    13e0:	ldr	r3, [r3, #496]	; 0x1f0
    13e4:	cmp	r3, #3
    13e8:	beq	1410 <coda_XML_SetReturnNSTriplet+0x58>
    13ec:	ldr	r3, [fp, #-12]
    13f0:	cmp	r3, #0
    13f4:	movne	r3, #1
    13f8:	moveq	r3, #0
    13fc:	uxtb	r3, r3
    1400:	mov	r2, r3
    1404:	ldr	r3, [fp, #-8]
    1408:	strb	r2, [r3, #245]	; 0xf5
    140c:	b	1414 <coda_XML_SetReturnNSTriplet+0x5c>
    1410:	nop	{0}
    1414:	add	sp, fp, #0
    1418:	pop	{fp}		; (ldr fp, [sp], #4)
    141c:	bx	lr

00001420 <coda_XML_SetUserData>:
    1420:	push	{fp}		; (str fp, [sp, #-4]!)
    1424:	add	fp, sp, #0
    1428:	sub	sp, sp, #12
    142c:	str	r0, [fp, #-8]
    1430:	str	r1, [fp, #-12]
    1434:	ldr	r3, [fp, #-8]
    1438:	ldr	r2, [r3, #4]
    143c:	ldr	r3, [fp, #-8]
    1440:	ldr	r3, [r3]
    1444:	cmp	r2, r3
    1448:	bne	146c <coda_XML_SetUserData+0x4c>
    144c:	ldr	r3, [fp, #-8]
    1450:	ldr	r2, [fp, #-12]
    1454:	str	r2, [r3]
    1458:	ldr	r3, [fp, #-8]
    145c:	ldr	r2, [r3]
    1460:	ldr	r3, [fp, #-8]
    1464:	str	r2, [r3, #4]
    1468:	b	1478 <coda_XML_SetUserData+0x58>
    146c:	ldr	r3, [fp, #-8]
    1470:	ldr	r2, [fp, #-12]
    1474:	str	r2, [r3]
    1478:	nop	{0}
    147c:	add	sp, fp, #0
    1480:	pop	{fp}		; (ldr fp, [sp], #4)
    1484:	bx	lr

00001488 <coda_XML_SetBase>:
    1488:	str	fp, [sp, #-8]!
    148c:	str	lr, [sp, #4]
    1490:	add	fp, sp, #4
    1494:	sub	sp, sp, #8
    1498:	str	r0, [fp, #-8]
    149c:	str	r1, [fp, #-12]
    14a0:	ldr	r3, [fp, #-12]
    14a4:	cmp	r3, #0
    14a8:	beq	14ec <coda_XML_SetBase+0x64>
    14ac:	ldr	r3, [fp, #-8]
    14b0:	ldr	r3, [r3, #364]	; 0x16c
    14b4:	add	r3, r3, #80	; 0x50
    14b8:	ldr	r1, [fp, #-12]
    14bc:	mov	r0, r3
    14c0:	bl	eb38 <poolCopyString>
    14c4:	str	r0, [fp, #-12]
    14c8:	ldr	r3, [fp, #-12]
    14cc:	cmp	r3, #0
    14d0:	bne	14dc <coda_XML_SetBase+0x54>
    14d4:	mov	r3, #0
    14d8:	b	14fc <coda_XML_SetBase+0x74>
    14dc:	ldr	r3, [fp, #-8]
    14e0:	ldr	r2, [fp, #-12]
    14e4:	str	r2, [r3, #368]	; 0x170
    14e8:	b	14f8 <coda_XML_SetBase+0x70>
    14ec:	ldr	r3, [fp, #-8]
    14f0:	mov	r2, #0
    14f4:	str	r2, [r3, #368]	; 0x170
    14f8:	mov	r3, #1
    14fc:	mov	r0, r3
    1500:	sub	sp, fp, #4
    1504:	ldr	fp, [sp]
    1508:	add	sp, sp, #4
    150c:	pop	{pc}		; (ldr pc, [sp], #4)

00001510 <coda_XML_GetBase>:
    1510:	push	{fp}		; (str fp, [sp, #-4]!)
    1514:	add	fp, sp, #0
    1518:	sub	sp, sp, #12
    151c:	str	r0, [fp, #-8]
    1520:	ldr	r3, [fp, #-8]
    1524:	ldr	r3, [r3, #368]	; 0x170
    1528:	mov	r0, r3
    152c:	add	sp, fp, #0
    1530:	pop	{fp}		; (ldr fp, [sp], #4)
    1534:	bx	lr

00001538 <coda_XML_GetSpecifiedAttributeCount>:
    1538:	push	{fp}		; (str fp, [sp, #-4]!)
    153c:	add	fp, sp, #0
    1540:	sub	sp, sp, #12
    1544:	str	r0, [fp, #-8]
    1548:	ldr	r3, [fp, #-8]
    154c:	ldr	r3, [r3, #392]	; 0x188
    1550:	mov	r0, r3
    1554:	add	sp, fp, #0
    1558:	pop	{fp}		; (ldr fp, [sp], #4)
    155c:	bx	lr

00001560 <coda_XML_GetIdAttributeIndex>:
    1560:	push	{fp}		; (str fp, [sp, #-4]!)
    1564:	add	fp, sp, #0
    1568:	sub	sp, sp, #12
    156c:	str	r0, [fp, #-8]
    1570:	ldr	r3, [fp, #-8]
    1574:	ldr	r3, [r3, #396]	; 0x18c
    1578:	mov	r0, r3
    157c:	add	sp, fp, #0
    1580:	pop	{fp}		; (ldr fp, [sp], #4)
    1584:	bx	lr

00001588 <coda_XML_SetElementHandler>:
    1588:	push	{fp}		; (str fp, [sp, #-4]!)
    158c:	add	fp, sp, #0
    1590:	sub	sp, sp, #20
    1594:	str	r0, [fp, #-8]
    1598:	str	r1, [fp, #-12]
    159c:	str	r2, [fp, #-16]
    15a0:	ldr	r3, [fp, #-8]
    15a4:	ldr	r2, [fp, #-12]
    15a8:	str	r2, [r3, #60]	; 0x3c
    15ac:	ldr	r3, [fp, #-8]
    15b0:	ldr	r2, [fp, #-16]
    15b4:	str	r2, [r3, #64]	; 0x40
    15b8:	nop	{0}
    15bc:	add	sp, fp, #0
    15c0:	pop	{fp}		; (ldr fp, [sp], #4)
    15c4:	bx	lr

000015c8 <coda_XML_SetStartElementHandler>:
    15c8:	push	{fp}		; (str fp, [sp, #-4]!)
    15cc:	add	fp, sp, #0
    15d0:	sub	sp, sp, #12
    15d4:	str	r0, [fp, #-8]
    15d8:	str	r1, [fp, #-12]
    15dc:	ldr	r3, [fp, #-8]
    15e0:	ldr	r2, [fp, #-12]
    15e4:	str	r2, [r3, #60]	; 0x3c
    15e8:	nop	{0}
    15ec:	add	sp, fp, #0
    15f0:	pop	{fp}		; (ldr fp, [sp], #4)
    15f4:	bx	lr

000015f8 <coda_XML_SetEndElementHandler>:
    15f8:	push	{fp}		; (str fp, [sp, #-4]!)
    15fc:	add	fp, sp, #0
    1600:	sub	sp, sp, #12
    1604:	str	r0, [fp, #-8]
    1608:	str	r1, [fp, #-12]
    160c:	ldr	r3, [fp, #-8]
    1610:	ldr	r2, [fp, #-12]
    1614:	str	r2, [r3, #64]	; 0x40
    1618:	nop	{0}
    161c:	add	sp, fp, #0
    1620:	pop	{fp}		; (ldr fp, [sp], #4)
    1624:	bx	lr

00001628 <coda_XML_SetCharacterDataHandler>:
    1628:	push	{fp}		; (str fp, [sp, #-4]!)
    162c:	add	fp, sp, #0
    1630:	sub	sp, sp, #12
    1634:	str	r0, [fp, #-8]
    1638:	str	r1, [fp, #-12]
    163c:	ldr	r3, [fp, #-8]
    1640:	ldr	r2, [fp, #-12]
    1644:	str	r2, [r3, #68]	; 0x44
    1648:	nop	{0}
    164c:	add	sp, fp, #0
    1650:	pop	{fp}		; (ldr fp, [sp], #4)
    1654:	bx	lr

00001658 <coda_XML_SetProcessingInstructionHandler>:
    1658:	push	{fp}		; (str fp, [sp, #-4]!)
    165c:	add	fp, sp, #0
    1660:	sub	sp, sp, #12
    1664:	str	r0, [fp, #-8]
    1668:	str	r1, [fp, #-12]
    166c:	ldr	r3, [fp, #-8]
    1670:	ldr	r2, [fp, #-12]
    1674:	str	r2, [r3, #72]	; 0x48
    1678:	nop	{0}
    167c:	add	sp, fp, #0
    1680:	pop	{fp}		; (ldr fp, [sp], #4)
    1684:	bx	lr

00001688 <coda_XML_SetCommentHandler>:
    1688:	push	{fp}		; (str fp, [sp, #-4]!)
    168c:	add	fp, sp, #0
    1690:	sub	sp, sp, #12
    1694:	str	r0, [fp, #-8]
    1698:	str	r1, [fp, #-12]
    169c:	ldr	r3, [fp, #-8]
    16a0:	ldr	r2, [fp, #-12]
    16a4:	str	r2, [r3, #76]	; 0x4c
    16a8:	nop	{0}
    16ac:	add	sp, fp, #0
    16b0:	pop	{fp}		; (ldr fp, [sp], #4)
    16b4:	bx	lr

000016b8 <coda_XML_SetCdataSectionHandler>:
    16b8:	push	{fp}		; (str fp, [sp, #-4]!)
    16bc:	add	fp, sp, #0
    16c0:	sub	sp, sp, #20
    16c4:	str	r0, [fp, #-8]
    16c8:	str	r1, [fp, #-12]
    16cc:	str	r2, [fp, #-16]
    16d0:	ldr	r3, [fp, #-8]
    16d4:	ldr	r2, [fp, #-12]
    16d8:	str	r2, [r3, #80]	; 0x50
    16dc:	ldr	r3, [fp, #-8]
    16e0:	ldr	r2, [fp, #-16]
    16e4:	str	r2, [r3, #84]	; 0x54
    16e8:	nop	{0}
    16ec:	add	sp, fp, #0
    16f0:	pop	{fp}		; (ldr fp, [sp], #4)
    16f4:	bx	lr

000016f8 <coda_XML_SetStartCdataSectionHandler>:
    16f8:	push	{fp}		; (str fp, [sp, #-4]!)
    16fc:	add	fp, sp, #0
    1700:	sub	sp, sp, #12
    1704:	str	r0, [fp, #-8]
    1708:	str	r1, [fp, #-12]
    170c:	ldr	r3, [fp, #-8]
    1710:	ldr	r2, [fp, #-12]
    1714:	str	r2, [r3, #80]	; 0x50
    1718:	nop	{0}
    171c:	add	sp, fp, #0
    1720:	pop	{fp}		; (ldr fp, [sp], #4)
    1724:	bx	lr

00001728 <coda_XML_SetEndCdataSectionHandler>:
    1728:	push	{fp}		; (str fp, [sp, #-4]!)
    172c:	add	fp, sp, #0
    1730:	sub	sp, sp, #12
    1734:	str	r0, [fp, #-8]
    1738:	str	r1, [fp, #-12]
    173c:	ldr	r3, [fp, #-8]
    1740:	ldr	r2, [fp, #-12]
    1744:	str	r2, [r3, #84]	; 0x54
    1748:	nop	{0}
    174c:	add	sp, fp, #0
    1750:	pop	{fp}		; (ldr fp, [sp], #4)
    1754:	bx	lr

00001758 <coda_XML_SetDefaultHandler>:
    1758:	push	{fp}		; (str fp, [sp, #-4]!)
    175c:	add	fp, sp, #0
    1760:	sub	sp, sp, #12
    1764:	str	r0, [fp, #-8]
    1768:	str	r1, [fp, #-12]
    176c:	ldr	r3, [fp, #-8]
    1770:	ldr	r2, [fp, #-12]
    1774:	str	r2, [r3, #88]	; 0x58
    1778:	ldr	r3, [fp, #-8]
    177c:	mov	r2, #0
    1780:	strb	r2, [r3, #316]	; 0x13c
    1784:	nop	{0}
    1788:	add	sp, fp, #0
    178c:	pop	{fp}		; (ldr fp, [sp], #4)
    1790:	bx	lr

00001794 <coda_XML_SetDefaultHandlerExpand>:
    1794:	push	{fp}		; (str fp, [sp, #-4]!)
    1798:	add	fp, sp, #0
    179c:	sub	sp, sp, #12
    17a0:	str	r0, [fp, #-8]
    17a4:	str	r1, [fp, #-12]
    17a8:	ldr	r3, [fp, #-8]
    17ac:	ldr	r2, [fp, #-12]
    17b0:	str	r2, [r3, #88]	; 0x58
    17b4:	ldr	r3, [fp, #-8]
    17b8:	mov	r2, #1
    17bc:	strb	r2, [r3, #316]	; 0x13c
    17c0:	nop	{0}
    17c4:	add	sp, fp, #0
    17c8:	pop	{fp}		; (ldr fp, [sp], #4)
    17cc:	bx	lr

000017d0 <coda_XML_SetDoctypeDeclHandler>:
    17d0:	push	{fp}		; (str fp, [sp, #-4]!)
    17d4:	add	fp, sp, #0
    17d8:	sub	sp, sp, #20
    17dc:	str	r0, [fp, #-8]
    17e0:	str	r1, [fp, #-12]
    17e4:	str	r2, [fp, #-16]
    17e8:	ldr	r3, [fp, #-8]
    17ec:	ldr	r2, [fp, #-12]
    17f0:	str	r2, [r3, #92]	; 0x5c
    17f4:	ldr	r3, [fp, #-8]
    17f8:	ldr	r2, [fp, #-16]
    17fc:	str	r2, [r3, #96]	; 0x60
    1800:	nop	{0}
    1804:	add	sp, fp, #0
    1808:	pop	{fp}		; (ldr fp, [sp], #4)
    180c:	bx	lr

00001810 <coda_XML_SetStartDoctypeDeclHandler>:
    1810:	push	{fp}		; (str fp, [sp, #-4]!)
    1814:	add	fp, sp, #0
    1818:	sub	sp, sp, #12
    181c:	str	r0, [fp, #-8]
    1820:	str	r1, [fp, #-12]
    1824:	ldr	r3, [fp, #-8]
    1828:	ldr	r2, [fp, #-12]
    182c:	str	r2, [r3, #92]	; 0x5c
    1830:	nop	{0}
    1834:	add	sp, fp, #0
    1838:	pop	{fp}		; (ldr fp, [sp], #4)
    183c:	bx	lr

00001840 <coda_XML_SetEndDoctypeDeclHandler>:
    1840:	push	{fp}		; (str fp, [sp, #-4]!)
    1844:	add	fp, sp, #0
    1848:	sub	sp, sp, #12
    184c:	str	r0, [fp, #-8]
    1850:	str	r1, [fp, #-12]
    1854:	ldr	r3, [fp, #-8]
    1858:	ldr	r2, [fp, #-12]
    185c:	str	r2, [r3, #96]	; 0x60
    1860:	nop	{0}
    1864:	add	sp, fp, #0
    1868:	pop	{fp}		; (ldr fp, [sp], #4)
    186c:	bx	lr

00001870 <coda_XML_SetUnparsedEntityDeclHandler>:
    1870:	push	{fp}		; (str fp, [sp, #-4]!)
    1874:	add	fp, sp, #0
    1878:	sub	sp, sp, #12
    187c:	str	r0, [fp, #-8]
    1880:	str	r1, [fp, #-12]
    1884:	ldr	r3, [fp, #-8]
    1888:	ldr	r2, [fp, #-12]
    188c:	str	r2, [r3, #100]	; 0x64
    1890:	nop	{0}
    1894:	add	sp, fp, #0
    1898:	pop	{fp}		; (ldr fp, [sp], #4)
    189c:	bx	lr

000018a0 <coda_XML_SetNotationDeclHandler>:
    18a0:	push	{fp}		; (str fp, [sp, #-4]!)
    18a4:	add	fp, sp, #0
    18a8:	sub	sp, sp, #12
    18ac:	str	r0, [fp, #-8]
    18b0:	str	r1, [fp, #-12]
    18b4:	ldr	r3, [fp, #-8]
    18b8:	ldr	r2, [fp, #-12]
    18bc:	str	r2, [r3, #104]	; 0x68
    18c0:	nop	{0}
    18c4:	add	sp, fp, #0
    18c8:	pop	{fp}		; (ldr fp, [sp], #4)
    18cc:	bx	lr

000018d0 <coda_XML_SetNamespaceDeclHandler>:
    18d0:	push	{fp}		; (str fp, [sp, #-4]!)
    18d4:	add	fp, sp, #0
    18d8:	sub	sp, sp, #20
    18dc:	str	r0, [fp, #-8]
    18e0:	str	r1, [fp, #-12]
    18e4:	str	r2, [fp, #-16]
    18e8:	ldr	r3, [fp, #-8]
    18ec:	ldr	r2, [fp, #-12]
    18f0:	str	r2, [r3, #108]	; 0x6c
    18f4:	ldr	r3, [fp, #-8]
    18f8:	ldr	r2, [fp, #-16]
    18fc:	str	r2, [r3, #112]	; 0x70
    1900:	nop	{0}
    1904:	add	sp, fp, #0
    1908:	pop	{fp}		; (ldr fp, [sp], #4)
    190c:	bx	lr

00001910 <coda_XML_SetStartNamespaceDeclHandler>:
    1910:	push	{fp}		; (str fp, [sp, #-4]!)
    1914:	add	fp, sp, #0
    1918:	sub	sp, sp, #12
    191c:	str	r0, [fp, #-8]
    1920:	str	r1, [fp, #-12]
    1924:	ldr	r3, [fp, #-8]
    1928:	ldr	r2, [fp, #-12]
    192c:	str	r2, [r3, #108]	; 0x6c
    1930:	nop	{0}
    1934:	add	sp, fp, #0
    1938:	pop	{fp}		; (ldr fp, [sp], #4)
    193c:	bx	lr

00001940 <coda_XML_SetEndNamespaceDeclHandler>:
    1940:	push	{fp}		; (str fp, [sp, #-4]!)
    1944:	add	fp, sp, #0
    1948:	sub	sp, sp, #12
    194c:	str	r0, [fp, #-8]
    1950:	str	r1, [fp, #-12]
    1954:	ldr	r3, [fp, #-8]
    1958:	ldr	r2, [fp, #-12]
    195c:	str	r2, [r3, #112]	; 0x70
    1960:	nop	{0}
    1964:	add	sp, fp, #0
    1968:	pop	{fp}		; (ldr fp, [sp], #4)
    196c:	bx	lr

00001970 <coda_XML_SetNotStandaloneHandler>:
    1970:	push	{fp}		; (str fp, [sp, #-4]!)
    1974:	add	fp, sp, #0
    1978:	sub	sp, sp, #12
    197c:	str	r0, [fp, #-8]
    1980:	str	r1, [fp, #-12]
    1984:	ldr	r3, [fp, #-8]
    1988:	ldr	r2, [fp, #-12]
    198c:	str	r2, [r3, #116]	; 0x74
    1990:	nop	{0}
    1994:	add	sp, fp, #0
    1998:	pop	{fp}		; (ldr fp, [sp], #4)
    199c:	bx	lr

000019a0 <coda_XML_SetExternalEntityRefHandler>:
    19a0:	push	{fp}		; (str fp, [sp, #-4]!)
    19a4:	add	fp, sp, #0
    19a8:	sub	sp, sp, #12
    19ac:	str	r0, [fp, #-8]
    19b0:	str	r1, [fp, #-12]
    19b4:	ldr	r3, [fp, #-8]
    19b8:	ldr	r2, [fp, #-12]
    19bc:	str	r2, [r3, #120]	; 0x78
    19c0:	nop	{0}
    19c4:	add	sp, fp, #0
    19c8:	pop	{fp}		; (ldr fp, [sp], #4)
    19cc:	bx	lr

000019d0 <coda_XML_SetExternalEntityRefHandlerArg>:
    19d0:	push	{fp}		; (str fp, [sp, #-4]!)
    19d4:	add	fp, sp, #0
    19d8:	sub	sp, sp, #12
    19dc:	str	r0, [fp, #-8]
    19e0:	str	r1, [fp, #-12]
    19e4:	ldr	r3, [fp, #-12]
    19e8:	cmp	r3, #0
    19ec:	beq	1a00 <coda_XML_SetExternalEntityRefHandlerArg+0x30>
    19f0:	ldr	r3, [fp, #-8]
    19f4:	ldr	r2, [fp, #-12]
    19f8:	str	r2, [r3, #124]	; 0x7c
    19fc:	b	1a0c <coda_XML_SetExternalEntityRefHandlerArg+0x3c>
    1a00:	ldr	r3, [fp, #-8]
    1a04:	ldr	r2, [fp, #-8]
    1a08:	str	r2, [r3, #124]	; 0x7c
    1a0c:	nop	{0}
    1a10:	add	sp, fp, #0
    1a14:	pop	{fp}		; (ldr fp, [sp], #4)
    1a18:	bx	lr

00001a1c <coda_XML_SetSkippedEntityHandler>:
    1a1c:	push	{fp}		; (str fp, [sp, #-4]!)
    1a20:	add	fp, sp, #0
    1a24:	sub	sp, sp, #12
    1a28:	str	r0, [fp, #-8]
    1a2c:	str	r1, [fp, #-12]
    1a30:	ldr	r3, [fp, #-8]
    1a34:	ldr	r2, [fp, #-12]
    1a38:	str	r2, [r3, #128]	; 0x80
    1a3c:	nop	{0}
    1a40:	add	sp, fp, #0
    1a44:	pop	{fp}		; (ldr fp, [sp], #4)
    1a48:	bx	lr

00001a4c <coda_XML_SetUnknownEncodingHandler>:
    1a4c:	push	{fp}		; (str fp, [sp, #-4]!)
    1a50:	add	fp, sp, #0
    1a54:	sub	sp, sp, #20
    1a58:	str	r0, [fp, #-8]
    1a5c:	str	r1, [fp, #-12]
    1a60:	str	r2, [fp, #-16]
    1a64:	ldr	r3, [fp, #-8]
    1a68:	ldr	r2, [fp, #-12]
    1a6c:	str	r2, [r3, #132]	; 0x84
    1a70:	ldr	r3, [fp, #-8]
    1a74:	ldr	r2, [fp, #-16]
    1a78:	str	r2, [r3, #256]	; 0x100
    1a7c:	nop	{0}
    1a80:	add	sp, fp, #0
    1a84:	pop	{fp}		; (ldr fp, [sp], #4)
    1a88:	bx	lr

00001a8c <coda_XML_SetElementDeclHandler>:
    1a8c:	push	{fp}		; (str fp, [sp, #-4]!)
    1a90:	add	fp, sp, #0
    1a94:	sub	sp, sp, #12
    1a98:	str	r0, [fp, #-8]
    1a9c:	str	r1, [fp, #-12]
    1aa0:	ldr	r3, [fp, #-8]
    1aa4:	ldr	r2, [fp, #-12]
    1aa8:	str	r2, [r3, #136]	; 0x88
    1aac:	nop	{0}
    1ab0:	add	sp, fp, #0
    1ab4:	pop	{fp}		; (ldr fp, [sp], #4)
    1ab8:	bx	lr

00001abc <coda_XML_SetAttlistDeclHandler>:
    1abc:	push	{fp}		; (str fp, [sp, #-4]!)
    1ac0:	add	fp, sp, #0
    1ac4:	sub	sp, sp, #12
    1ac8:	str	r0, [fp, #-8]
    1acc:	str	r1, [fp, #-12]
    1ad0:	ldr	r3, [fp, #-8]
    1ad4:	ldr	r2, [fp, #-12]
    1ad8:	str	r2, [r3, #140]	; 0x8c
    1adc:	nop	{0}
    1ae0:	add	sp, fp, #0
    1ae4:	pop	{fp}		; (ldr fp, [sp], #4)
    1ae8:	bx	lr

00001aec <coda_XML_SetEntityDeclHandler>:
    1aec:	push	{fp}		; (str fp, [sp, #-4]!)
    1af0:	add	fp, sp, #0
    1af4:	sub	sp, sp, #12
    1af8:	str	r0, [fp, #-8]
    1afc:	str	r1, [fp, #-12]
    1b00:	ldr	r3, [fp, #-8]
    1b04:	ldr	r2, [fp, #-12]
    1b08:	str	r2, [r3, #144]	; 0x90
    1b0c:	nop	{0}
    1b10:	add	sp, fp, #0
    1b14:	pop	{fp}		; (ldr fp, [sp], #4)
    1b18:	bx	lr

00001b1c <coda_XML_SetXmlDeclHandler>:
    1b1c:	push	{fp}		; (str fp, [sp, #-4]!)
    1b20:	add	fp, sp, #0
    1b24:	sub	sp, sp, #12
    1b28:	str	r0, [fp, #-8]
    1b2c:	str	r1, [fp, #-12]
    1b30:	ldr	r3, [fp, #-8]
    1b34:	ldr	r2, [fp, #-12]
    1b38:	str	r2, [r3, #148]	; 0x94
    1b3c:	nop	{0}
    1b40:	add	sp, fp, #0
    1b44:	pop	{fp}		; (ldr fp, [sp], #4)
    1b48:	bx	lr

00001b4c <coda_XML_SetParamEntityParsing>:
    1b4c:	push	{fp}		; (str fp, [sp, #-4]!)
    1b50:	add	fp, sp, #0
    1b54:	sub	sp, sp, #12
    1b58:	str	r0, [fp, #-8]
    1b5c:	str	r1, [fp, #-12]
    1b60:	ldr	r3, [fp, #-8]
    1b64:	ldr	r3, [r3, #496]	; 0x1f0
    1b68:	cmp	r3, #1
    1b6c:	beq	1b80 <coda_XML_SetParamEntityParsing+0x34>
    1b70:	ldr	r3, [fp, #-8]
    1b74:	ldr	r3, [r3, #496]	; 0x1f0
    1b78:	cmp	r3, #3
    1b7c:	bne	1b88 <coda_XML_SetParamEntityParsing+0x3c>
    1b80:	mov	r3, #0
    1b84:	b	1b98 <coda_XML_SetParamEntityParsing+0x4c>
    1b88:	ldr	r3, [fp, #-8]
    1b8c:	ldr	r2, [fp, #-12]
    1b90:	str	r2, [r3, #508]	; 0x1fc
    1b94:	mov	r3, #1
    1b98:	mov	r0, r3
    1b9c:	add	sp, fp, #0
    1ba0:	pop	{fp}		; (ldr fp, [sp], #4)
    1ba4:	bx	lr

00001ba8 <coda_XML_SetHashSalt>:
    1ba8:	push	{fp}		; (str fp, [sp, #-4]!)
    1bac:	add	fp, sp, #0
    1bb0:	sub	sp, sp, #12
    1bb4:	str	r0, [fp, #-8]
    1bb8:	str	r1, [fp, #-12]
    1bbc:	ldr	r3, [fp, #-8]
    1bc0:	ldr	r3, [r3, #496]	; 0x1f0
    1bc4:	cmp	r3, #1
    1bc8:	beq	1bdc <coda_XML_SetHashSalt+0x34>
    1bcc:	ldr	r3, [fp, #-8]
    1bd0:	ldr	r3, [r3, #496]	; 0x1f0
    1bd4:	cmp	r3, #3
    1bd8:	bne	1be4 <coda_XML_SetHashSalt+0x3c>
    1bdc:	mov	r3, #0
    1be0:	b	1bf4 <coda_XML_SetHashSalt+0x4c>
    1be4:	ldr	r3, [fp, #-8]
    1be8:	ldr	r2, [fp, #-12]
    1bec:	str	r2, [r3, #512]	; 0x200
    1bf0:	mov	r3, #1
    1bf4:	mov	r0, r3
    1bf8:	add	sp, fp, #0
    1bfc:	pop	{fp}		; (ldr fp, [sp], #4)
    1c00:	bx	lr

00001c04 <coda_XML_Parse>:
    1c04:	str	r4, [sp, #-12]!
    1c08:	str	fp, [sp, #4]
    1c0c:	str	lr, [sp, #8]
    1c10:	add	fp, sp, #8
    1c14:	sub	sp, sp, #28
    1c18:	str	r0, [fp, #-24]	; 0xffffffe8
    1c1c:	str	r1, [fp, #-28]	; 0xffffffe4
    1c20:	str	r2, [fp, #-32]	; 0xffffffe0
    1c24:	str	r3, [fp, #-36]	; 0xffffffdc
    1c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c2c:	ldr	r3, [r3, #496]	; 0x1f0
    1c30:	cmp	r3, #2
    1c34:	beq	1c60 <coda_XML_Parse+0x5c>
    1c38:	cmp	r3, #3
    1c3c:	beq	1c4c <coda_XML_Parse+0x48>
    1c40:	cmp	r3, #0
    1c44:	beq	1c74 <coda_XML_Parse+0x70>
    1c48:	b	1cac <coda_XML_Parse+0xa8>
    1c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c50:	mov	r2, #33	; 0x21
    1c54:	str	r2, [r3, #292]	; 0x124
    1c58:	mov	r3, #0
    1c5c:	b	1e34 <coda_XML_Parse+0x230>
    1c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c64:	mov	r2, #36	; 0x24
    1c68:	str	r2, [r3, #292]	; 0x124
    1c6c:	mov	r3, #0
    1c70:	b	1e34 <coda_XML_Parse+0x230>
    1c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c78:	ldr	r3, [r3, #492]	; 0x1ec
    1c7c:	cmp	r3, #0
    1c80:	bne	1cac <coda_XML_Parse+0xa8>
    1c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c88:	bl	e4 <startParsing>
    1c8c:	mov	r3, r0
    1c90:	cmp	r3, #0
    1c94:	bne	1cac <coda_XML_Parse+0xa8>
    1c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c9c:	mov	r2, #1
    1ca0:	str	r2, [r3, #292]	; 0x124
    1ca4:	mov	r3, #0
    1ca8:	b	1e34 <coda_XML_Parse+0x230>
    1cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cb0:	mov	r2, #1
    1cb4:	str	r2, [r3, #496]	; 0x1f0
    1cb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1cbc:	cmp	r3, #0
    1cc0:	bne	1de8 <coda_XML_Parse+0x1e4>
    1cc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1cc8:	uxtb	r2, r3
    1ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cd0:	strb	r2, [r3, #500]	; 0x1f4
    1cd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1cd8:	cmp	r3, #0
    1cdc:	bne	1ce8 <coda_XML_Parse+0xe4>
    1ce0:	mov	r3, #1
    1ce4:	b	1e34 <coda_XML_Parse+0x230>
    1ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cec:	ldr	r2, [r3, #24]
    1cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cf4:	str	r2, [r3, #304]	; 0x130
    1cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cfc:	ldr	r2, [r3, #28]
    1d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d04:	str	r2, [r3, #48]	; 0x30
    1d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d0c:	ldr	r4, [r3, #288]	; 0x120
    1d10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d14:	ldr	r1, [r3, #24]
    1d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d1c:	ldr	r2, [r3, #48]	; 0x30
    1d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d24:	add	r3, r3, #24
    1d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d2c:	blx	r4
    1d30:	mov	r2, r0
    1d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d38:	str	r2, [r3, #292]	; 0x124
    1d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d40:	ldr	r3, [r3, #292]	; 0x124
    1d44:	cmp	r3, #0
    1d48:	bne	1dc0 <coda_XML_Parse+0x1bc>
    1d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d50:	ldr	r3, [r3, #496]	; 0x1f0
    1d54:	cmp	r3, #1
    1d58:	bls	1dac <coda_XML_Parse+0x1a8>
    1d5c:	cmp	r3, #3
    1d60:	bne	1db8 <coda_XML_Parse+0x1b4>
    1d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d68:	ldr	r3, [r3, #152]	; 0x98
    1d6c:	ldr	r4, [r3, #52]	; 0x34
    1d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d74:	ldr	r0, [r3, #152]	; 0x98
    1d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d7c:	ldr	r1, [r3, #304]	; 0x130
    1d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d84:	ldr	r2, [r3, #24]
    1d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d8c:	add	r3, r3, #416	; 0x1a0
    1d90:	blx	r4
    1d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d98:	ldr	r2, [r3, #24]
    1d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1da0:	str	r2, [r3, #304]	; 0x130
    1da4:	mov	r3, #2
    1da8:	b	1e34 <coda_XML_Parse+0x230>
    1dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1db0:	mov	r2, #2
    1db4:	str	r2, [r3, #496]	; 0x1f0
    1db8:	mov	r3, #1
    1dbc:	b	1e34 <coda_XML_Parse+0x230>
    1dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dc4:	ldr	r2, [r3, #296]	; 0x128
    1dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dcc:	str	r2, [r3, #300]	; 0x12c
    1dd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1dd4:	movw	r3, #0
    1dd8:	movt	r3, #0
    1ddc:	str	r3, [r2, #288]	; 0x120
    1de0:	mov	r3, #0
    1de4:	b	1e34 <coda_XML_Parse+0x230>
    1de8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1df0:	bl	2080 <coda_XML_GetBuffer>
    1df4:	str	r0, [fp, #-16]
    1df8:	ldr	r3, [fp, #-16]
    1dfc:	cmp	r3, #0
    1e00:	bne	1e0c <coda_XML_Parse+0x208>
    1e04:	mov	r3, #0
    1e08:	b	1e34 <coda_XML_Parse+0x230>
    1e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1e10:	mov	r2, r3
    1e14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e18:	ldr	r0, [fp, #-16]
    1e1c:	bl	0 <memcpy>
    1e20:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1e24:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e2c:	bl	1e4c <coda_XML_ParseBuffer>
    1e30:	mov	r3, r0
    1e34:	mov	r0, r3
    1e38:	sub	sp, fp, #8
    1e3c:	ldr	r4, [sp]
    1e40:	ldr	fp, [sp, #4]
    1e44:	add	sp, sp, #8
    1e48:	pop	{pc}		; (ldr pc, [sp], #4)

00001e4c <coda_XML_ParseBuffer>:
    1e4c:	strd	r4, [sp, #-16]!
    1e50:	str	fp, [sp, #8]
    1e54:	str	lr, [sp, #12]
    1e58:	add	fp, sp, #12
    1e5c:	sub	sp, sp, #24
    1e60:	str	r0, [fp, #-24]	; 0xffffffe8
    1e64:	str	r1, [fp, #-28]	; 0xffffffe4
    1e68:	str	r2, [fp, #-32]	; 0xffffffe0
    1e6c:	mov	r3, #1
    1e70:	str	r3, [fp, #-16]
    1e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e78:	ldr	r3, [r3, #496]	; 0x1f0
    1e7c:	cmp	r3, #2
    1e80:	beq	1eac <coda_XML_ParseBuffer+0x60>
    1e84:	cmp	r3, #3
    1e88:	beq	1e98 <coda_XML_ParseBuffer+0x4c>
    1e8c:	cmp	r3, #0
    1e90:	beq	1ec0 <coda_XML_ParseBuffer+0x74>
    1e94:	b	1ef8 <coda_XML_ParseBuffer+0xac>
    1e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e9c:	mov	r2, #33	; 0x21
    1ea0:	str	r2, [r3, #292]	; 0x124
    1ea4:	mov	r3, #0
    1ea8:	b	2068 <coda_XML_ParseBuffer+0x21c>
    1eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1eb0:	mov	r2, #36	; 0x24
    1eb4:	str	r2, [r3, #292]	; 0x124
    1eb8:	mov	r3, #0
    1ebc:	b	2068 <coda_XML_ParseBuffer+0x21c>
    1ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ec4:	ldr	r3, [r3, #492]	; 0x1ec
    1ec8:	cmp	r3, #0
    1ecc:	bne	1ef8 <coda_XML_ParseBuffer+0xac>
    1ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ed4:	bl	e4 <startParsing>
    1ed8:	mov	r3, r0
    1edc:	cmp	r3, #0
    1ee0:	bne	1ef8 <coda_XML_ParseBuffer+0xac>
    1ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ee8:	mov	r2, #1
    1eec:	str	r2, [r3, #292]	; 0x124
    1ef0:	mov	r3, #0
    1ef4:	b	2068 <coda_XML_ParseBuffer+0x21c>
    1ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1efc:	mov	r2, #1
    1f00:	str	r2, [r3, #496]	; 0x1f0
    1f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f08:	ldr	r3, [r3, #24]
    1f0c:	str	r3, [fp, #-20]	; 0xffffffec
    1f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f14:	ldr	r2, [fp, #-20]	; 0xffffffec
    1f18:	str	r2, [r3, #304]	; 0x130
    1f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f20:	ldr	r2, [r3, #28]
    1f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f28:	add	r2, r2, r3
    1f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f30:	str	r2, [r3, #28]
    1f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f38:	ldr	r2, [r3, #28]
    1f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f40:	str	r2, [r3, #48]	; 0x30
    1f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f48:	ldrd	r0, [r3, #40]	; 0x28
    1f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f50:	mov	r2, r3
    1f54:	asr	r3, r2, #31
    1f58:	adds	r4, r0, r2
    1f5c:	adc	r5, r1, r3
    1f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f64:	strd	r4, [r3, #40]	; 0x28
    1f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f6c:	uxtb	r2, r3
    1f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f74:	strb	r2, [r3, #500]	; 0x1f4
    1f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f7c:	ldr	r4, [r3, #288]	; 0x120
    1f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f84:	ldr	r2, [r3, #48]	; 0x30
    1f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f8c:	add	r3, r3, #24
    1f90:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f98:	blx	r4
    1f9c:	mov	r2, r0
    1fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fa4:	str	r2, [r3, #292]	; 0x124
    1fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fac:	ldr	r3, [r3, #292]	; 0x124
    1fb0:	cmp	r3, #0
    1fb4:	beq	1fe0 <coda_XML_ParseBuffer+0x194>
    1fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fbc:	ldr	r2, [r3, #296]	; 0x128
    1fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fc4:	str	r2, [r3, #300]	; 0x12c
    1fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1fcc:	movw	r3, #0
    1fd0:	movt	r3, #0
    1fd4:	str	r3, [r2, #288]	; 0x120
    1fd8:	mov	r3, #0
    1fdc:	b	2068 <coda_XML_ParseBuffer+0x21c>
    1fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fe4:	ldr	r3, [r3, #496]	; 0x1f0
    1fe8:	cmp	r3, #1
    1fec:	bls	2004 <coda_XML_ParseBuffer+0x1b8>
    1ff0:	cmp	r3, #3
    1ff4:	bne	2024 <coda_XML_ParseBuffer+0x1d8>
    1ff8:	mov	r3, #2
    1ffc:	str	r3, [fp, #-16]
    2000:	b	2024 <coda_XML_ParseBuffer+0x1d8>
    2004:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2008:	cmp	r3, #0
    200c:	beq	2024 <coda_XML_ParseBuffer+0x1d8>
    2010:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2014:	mov	r2, #2
    2018:	str	r2, [r3, #496]	; 0x1f0
    201c:	ldr	r3, [fp, #-16]
    2020:	b	2068 <coda_XML_ParseBuffer+0x21c>
    2024:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2028:	ldr	r3, [r3, #152]	; 0x98
    202c:	ldr	r4, [r3, #52]	; 0x34
    2030:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2034:	ldr	r0, [r3, #152]	; 0x98
    2038:	ldr	r3, [fp, #-24]	; 0xffffffe8
    203c:	ldr	r1, [r3, #304]	; 0x130
    2040:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2044:	ldr	r2, [r3, #24]
    2048:	ldr	r3, [fp, #-24]	; 0xffffffe8
    204c:	add	r3, r3, #416	; 0x1a0
    2050:	blx	r4
    2054:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2058:	ldr	r2, [r3, #24]
    205c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2060:	str	r2, [r3, #304]	; 0x130
    2064:	ldr	r3, [fp, #-16]
    2068:	mov	r0, r3
    206c:	sub	sp, fp, #12
    2070:	ldrd	r4, [sp]
    2074:	ldr	fp, [sp, #8]
    2078:	add	sp, sp, #12
    207c:	pop	{pc}		; (ldr pc, [sp], #4)

00002080 <coda_XML_GetBuffer>:
    2080:	str	fp, [sp, #-8]!
    2084:	str	lr, [sp, #4]
    2088:	add	fp, sp, #4
    208c:	sub	sp, sp, #32
    2090:	str	r0, [fp, #-32]	; 0xffffffe0
    2094:	str	r1, [fp, #-36]	; 0xffffffdc
    2098:	ldr	r3, [fp, #-36]	; 0xffffffdc
    209c:	cmp	r3, #0
    20a0:	bge	20b8 <coda_XML_GetBuffer+0x38>
    20a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20a8:	mov	r2, #1
    20ac:	str	r2, [r3, #292]	; 0x124
    20b0:	mov	r3, #0
    20b4:	b	248c <coda_XML_GetBuffer+0x40c>
    20b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20bc:	ldr	r3, [r3, #496]	; 0x1f0
    20c0:	cmp	r3, #2
    20c4:	beq	20e4 <coda_XML_GetBuffer+0x64>
    20c8:	cmp	r3, #3
    20cc:	bne	20f8 <coda_XML_GetBuffer+0x78>
    20d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20d4:	mov	r2, #33	; 0x21
    20d8:	str	r2, [r3, #292]	; 0x124
    20dc:	mov	r3, #0
    20e0:	b	248c <coda_XML_GetBuffer+0x40c>
    20e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20e8:	mov	r2, #36	; 0x24
    20ec:	str	r2, [r3, #292]	; 0x124
    20f0:	mov	r3, #0
    20f4:	b	248c <coda_XML_GetBuffer+0x40c>
    20f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20fc:	ldr	r2, [r3, #32]
    2100:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2104:	ldr	r3, [r3, #28]
    2108:	sub	r3, r2, r3
    210c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2110:	cmp	r2, r3
    2114:	ble	2484 <coda_XML_GetBuffer+0x404>
    2118:	ldr	r3, [fp, #-32]	; 0xffffffe0
    211c:	ldr	r2, [r3, #28]
    2120:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2124:	ldr	r3, [r3, #24]
    2128:	sub	r3, r2, r3
    212c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2130:	add	r3, r2, r3
    2134:	str	r3, [fp, #-20]	; 0xffffffec
    2138:	ldr	r3, [fp, #-32]	; 0xffffffe0
    213c:	ldr	r2, [r3, #24]
    2140:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2144:	ldr	r3, [r3, #8]
    2148:	sub	r3, r2, r3
    214c:	str	r3, [fp, #-8]
    2150:	ldr	r3, [fp, #-20]	; 0xffffffec
    2154:	cmp	r3, #0
    2158:	bge	2170 <coda_XML_GetBuffer+0xf0>
    215c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2160:	mov	r2, #1
    2164:	str	r2, [r3, #292]	; 0x124
    2168:	mov	r3, #0
    216c:	b	248c <coda_XML_GetBuffer+0x40c>
    2170:	ldr	r3, [fp, #-8]
    2174:	cmp	r3, #1024	; 0x400
    2178:	ble	2184 <coda_XML_GetBuffer+0x104>
    217c:	mov	r3, #1024	; 0x400
    2180:	str	r3, [fp, #-8]
    2184:	ldr	r2, [fp, #-20]	; 0xffffffec
    2188:	ldr	r3, [fp, #-8]
    218c:	add	r3, r2, r3
    2190:	str	r3, [fp, #-20]	; 0xffffffec
    2194:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2198:	ldr	r2, [r3, #32]
    219c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21a0:	ldr	r3, [r3, #8]
    21a4:	sub	r3, r2, r3
    21a8:	ldr	r2, [fp, #-20]	; 0xffffffec
    21ac:	cmp	r2, r3
    21b0:	bgt	226c <coda_XML_GetBuffer+0x1ec>
    21b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21b8:	ldr	r2, [r3, #24]
    21bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21c0:	ldr	r3, [r3, #8]
    21c4:	sub	r3, r2, r3
    21c8:	ldr	r2, [fp, #-8]
    21cc:	cmp	r2, r3
    21d0:	bge	245c <coda_XML_GetBuffer+0x3dc>
    21d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21d8:	ldr	r2, [r3, #24]
    21dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21e0:	ldr	r3, [r3, #8]
    21e4:	sub	r2, r2, r3
    21e8:	ldr	r3, [fp, #-8]
    21ec:	sub	r3, r2, r3
    21f0:	str	r3, [fp, #-24]	; 0xffffffe8
    21f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21f8:	ldr	r0, [r3, #8]
    21fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2200:	ldr	r2, [r3, #8]
    2204:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2208:	add	r1, r2, r3
    220c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2210:	ldr	r2, [r3, #28]
    2214:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2218:	ldr	r3, [r3, #24]
    221c:	sub	r2, r2, r3
    2220:	ldr	r3, [fp, #-8]
    2224:	add	r3, r2, r3
    2228:	mov	r2, r3
    222c:	bl	0 <memmove>
    2230:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2234:	ldr	r2, [r3, #28]
    2238:	ldr	r3, [fp, #-24]	; 0xffffffe8
    223c:	rsb	r3, r3, #0
    2240:	add	r2, r2, r3
    2244:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2248:	str	r2, [r3, #28]
    224c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2250:	ldr	r2, [r3, #24]
    2254:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2258:	rsb	r3, r3, #0
    225c:	add	r2, r2, r3
    2260:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2264:	str	r2, [r3, #24]
    2268:	b	245c <coda_XML_GetBuffer+0x3dc>
    226c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2270:	ldr	r2, [r3, #32]
    2274:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2278:	ldr	r3, [r3, #24]
    227c:	sub	r3, r2, r3
    2280:	str	r3, [fp, #-12]
    2284:	ldr	r3, [fp, #-12]
    2288:	cmp	r3, #0
    228c:	bne	2298 <coda_XML_GetBuffer+0x218>
    2290:	mov	r3, #1024	; 0x400
    2294:	str	r3, [fp, #-12]
    2298:	ldr	r3, [fp, #-12]
    229c:	lsl	r3, r3, #1
    22a0:	str	r3, [fp, #-12]
    22a4:	ldr	r2, [fp, #-12]
    22a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    22ac:	cmp	r2, r3
    22b0:	bge	22c0 <coda_XML_GetBuffer+0x240>
    22b4:	ldr	r3, [fp, #-12]
    22b8:	cmp	r3, #0
    22bc:	bgt	2298 <coda_XML_GetBuffer+0x218>
    22c0:	ldr	r3, [fp, #-12]
    22c4:	cmp	r3, #0
    22c8:	bgt	22e0 <coda_XML_GetBuffer+0x260>
    22cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22d0:	mov	r2, #1
    22d4:	str	r2, [r3, #292]	; 0x124
    22d8:	mov	r3, #0
    22dc:	b	248c <coda_XML_GetBuffer+0x40c>
    22e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22e4:	ldr	r3, [r3, #12]
    22e8:	ldr	r2, [fp, #-12]
    22ec:	mov	r0, r2
    22f0:	blx	r3
    22f4:	str	r0, [fp, #-28]	; 0xffffffe4
    22f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    22fc:	cmp	r3, #0
    2300:	bne	2318 <coda_XML_GetBuffer+0x298>
    2304:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2308:	mov	r2, #1
    230c:	str	r2, [r3, #292]	; 0x124
    2310:	mov	r3, #0
    2314:	b	248c <coda_XML_GetBuffer+0x40c>
    2318:	ldr	r3, [fp, #-12]
    231c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2320:	add	r2, r2, r3
    2324:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2328:	str	r2, [r3, #32]
    232c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2330:	ldr	r3, [r3, #24]
    2334:	cmp	r3, #0
    2338:	beq	2418 <coda_XML_GetBuffer+0x398>
    233c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2340:	ldr	r2, [r3, #24]
    2344:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2348:	ldr	r3, [r3, #8]
    234c:	sub	r3, r2, r3
    2350:	str	r3, [fp, #-16]
    2354:	ldr	r3, [fp, #-16]
    2358:	cmp	r3, #1024	; 0x400
    235c:	ble	2368 <coda_XML_GetBuffer+0x2e8>
    2360:	mov	r3, #1024	; 0x400
    2364:	str	r3, [fp, #-16]
    2368:	ldr	r3, [fp, #-32]	; 0xffffffe0
    236c:	ldr	r3, [r3, #24]
    2370:	ldr	r2, [fp, #-16]
    2374:	rsb	r2, r2, #0
    2378:	add	r1, r3, r2
    237c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2380:	ldr	r2, [r3, #28]
    2384:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2388:	ldr	r3, [r3, #24]
    238c:	sub	r2, r2, r3
    2390:	ldr	r3, [fp, #-16]
    2394:	add	r3, r2, r3
    2398:	mov	r2, r3
    239c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    23a0:	bl	0 <memcpy>
    23a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23a8:	ldr	r3, [r3, #20]
    23ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    23b0:	ldr	r2, [r2, #8]
    23b4:	mov	r0, r2
    23b8:	blx	r3
    23bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    23c4:	str	r2, [r3, #8]
    23c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23cc:	ldr	r2, [r3, #8]
    23d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23d4:	ldr	r1, [r3, #28]
    23d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23dc:	ldr	r3, [r3, #24]
    23e0:	sub	r3, r1, r3
    23e4:	mov	r1, r3
    23e8:	ldr	r3, [fp, #-16]
    23ec:	add	r3, r1, r3
    23f0:	add	r2, r2, r3
    23f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23f8:	str	r2, [r3, #28]
    23fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2400:	ldr	r2, [r3, #8]
    2404:	ldr	r3, [fp, #-16]
    2408:	add	r2, r2, r3
    240c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2410:	str	r2, [r3, #24]
    2414:	b	245c <coda_XML_GetBuffer+0x3dc>
    2418:	ldr	r3, [fp, #-32]	; 0xffffffe0
    241c:	ldr	r2, [r3, #28]
    2420:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2424:	ldr	r3, [r3, #24]
    2428:	sub	r3, r2, r3
    242c:	mov	r2, r3
    2430:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2434:	add	r2, r3, r2
    2438:	ldr	r3, [fp, #-32]	; 0xffffffe0
    243c:	str	r2, [r3, #28]
    2440:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2444:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2448:	str	r2, [r3, #8]
    244c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2450:	ldr	r2, [r3, #8]
    2454:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2458:	str	r2, [r3, #24]
    245c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2460:	mov	r2, #0
    2464:	str	r2, [r3, #300]	; 0x12c
    2468:	ldr	r3, [fp, #-32]	; 0xffffffe0
    246c:	ldr	r2, [r3, #300]	; 0x12c
    2470:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2474:	str	r2, [r3, #296]	; 0x128
    2478:	ldr	r3, [fp, #-32]	; 0xffffffe0
    247c:	mov	r2, #0
    2480:	str	r2, [r3, #304]	; 0x130
    2484:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2488:	ldr	r3, [r3, #28]
    248c:	mov	r0, r3
    2490:	sub	sp, fp, #4
    2494:	ldr	fp, [sp]
    2498:	add	sp, sp, #4
    249c:	pop	{pc}		; (ldr pc, [sp], #4)

000024a0 <coda_XML_StopParser>:
    24a0:	push	{fp}		; (str fp, [sp, #-4]!)
    24a4:	add	fp, sp, #0
    24a8:	sub	sp, sp, #12
    24ac:	str	r0, [fp, #-8]
    24b0:	mov	r3, r1
    24b4:	strb	r3, [fp, #-9]
    24b8:	ldr	r3, [fp, #-8]
    24bc:	ldr	r3, [r3, #496]	; 0x1f0
    24c0:	cmp	r3, #2
    24c4:	beq	2500 <coda_XML_StopParser+0x60>
    24c8:	cmp	r3, #3
    24cc:	bne	2514 <coda_XML_StopParser+0x74>
    24d0:	ldrb	r3, [fp, #-9]
    24d4:	cmp	r3, #0
    24d8:	beq	24f0 <coda_XML_StopParser+0x50>
    24dc:	ldr	r3, [fp, #-8]
    24e0:	mov	r2, #33	; 0x21
    24e4:	str	r2, [r3, #292]	; 0x124
    24e8:	mov	r3, #0
    24ec:	b	2564 <coda_XML_StopParser+0xc4>
    24f0:	ldr	r3, [fp, #-8]
    24f4:	mov	r2, #2
    24f8:	str	r2, [r3, #496]	; 0x1f0
    24fc:	b	2560 <coda_XML_StopParser+0xc0>
    2500:	ldr	r3, [fp, #-8]
    2504:	mov	r2, #36	; 0x24
    2508:	str	r2, [r3, #292]	; 0x124
    250c:	mov	r3, #0
    2510:	b	2564 <coda_XML_StopParser+0xc4>
    2514:	ldrb	r3, [fp, #-9]
    2518:	cmp	r3, #0
    251c:	beq	2554 <coda_XML_StopParser+0xb4>
    2520:	ldr	r3, [fp, #-8]
    2524:	ldrb	r3, [r3, #504]	; 0x1f8
    2528:	cmp	r3, #0
    252c:	beq	2544 <coda_XML_StopParser+0xa4>
    2530:	ldr	r3, [fp, #-8]
    2534:	mov	r2, #37	; 0x25
    2538:	str	r2, [r3, #292]	; 0x124
    253c:	mov	r3, #0
    2540:	b	2564 <coda_XML_StopParser+0xc4>
    2544:	ldr	r3, [fp, #-8]
    2548:	mov	r2, #3
    254c:	str	r2, [r3, #496]	; 0x1f0
    2550:	b	2560 <coda_XML_StopParser+0xc0>
    2554:	ldr	r3, [fp, #-8]
    2558:	mov	r2, #2
    255c:	str	r2, [r3, #496]	; 0x1f0
    2560:	mov	r3, #1
    2564:	mov	r0, r3
    2568:	add	sp, fp, #0
    256c:	pop	{fp}		; (ldr fp, [sp], #4)
    2570:	bx	lr

00002574 <coda_XML_ResumeParser>:
    2574:	str	r4, [sp, #-12]!
    2578:	str	fp, [sp, #4]
    257c:	str	lr, [sp, #8]
    2580:	add	fp, sp, #8
    2584:	sub	sp, sp, #20
    2588:	str	r0, [fp, #-24]	; 0xffffffe8
    258c:	mov	r3, #1
    2590:	str	r3, [fp, #-16]
    2594:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2598:	ldr	r3, [r3, #496]	; 0x1f0
    259c:	cmp	r3, #3
    25a0:	beq	25b8 <coda_XML_ResumeParser+0x44>
    25a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25a8:	mov	r2, #34	; 0x22
    25ac:	str	r2, [r3, #292]	; 0x124
    25b0:	mov	r3, #0
    25b4:	b	26bc <coda_XML_ResumeParser+0x148>
    25b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25bc:	mov	r2, #1
    25c0:	str	r2, [r3, #496]	; 0x1f0
    25c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25c8:	ldr	r4, [r3, #288]	; 0x120
    25cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25d0:	ldr	r1, [r3, #24]
    25d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25d8:	ldr	r2, [r3, #48]	; 0x30
    25dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25e0:	add	r3, r3, #24
    25e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25e8:	blx	r4
    25ec:	mov	r2, r0
    25f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25f4:	str	r2, [r3, #292]	; 0x124
    25f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25fc:	ldr	r3, [r3, #292]	; 0x124
    2600:	cmp	r3, #0
    2604:	beq	2630 <coda_XML_ResumeParser+0xbc>
    2608:	ldr	r3, [fp, #-24]	; 0xffffffe8
    260c:	ldr	r2, [r3, #296]	; 0x128
    2610:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2614:	str	r2, [r3, #300]	; 0x12c
    2618:	ldr	r2, [fp, #-24]	; 0xffffffe8
    261c:	movw	r3, #0
    2620:	movt	r3, #0
    2624:	str	r3, [r2, #288]	; 0x120
    2628:	mov	r3, #0
    262c:	b	26bc <coda_XML_ResumeParser+0x148>
    2630:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2634:	ldr	r3, [r3, #496]	; 0x1f0
    2638:	cmp	r3, #1
    263c:	bls	2654 <coda_XML_ResumeParser+0xe0>
    2640:	cmp	r3, #3
    2644:	bne	2678 <coda_XML_ResumeParser+0x104>
    2648:	mov	r3, #2
    264c:	str	r3, [fp, #-16]
    2650:	b	2678 <coda_XML_ResumeParser+0x104>
    2654:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2658:	ldrb	r3, [r3, #500]	; 0x1f4
    265c:	cmp	r3, #0
    2660:	beq	2678 <coda_XML_ResumeParser+0x104>
    2664:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2668:	mov	r2, #2
    266c:	str	r2, [r3, #496]	; 0x1f0
    2670:	ldr	r3, [fp, #-16]
    2674:	b	26bc <coda_XML_ResumeParser+0x148>
    2678:	ldr	r3, [fp, #-24]	; 0xffffffe8
    267c:	ldr	r3, [r3, #152]	; 0x98
    2680:	ldr	r4, [r3, #52]	; 0x34
    2684:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2688:	ldr	r0, [r3, #152]	; 0x98
    268c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2690:	ldr	r1, [r3, #304]	; 0x130
    2694:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2698:	ldr	r2, [r3, #24]
    269c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26a0:	add	r3, r3, #416	; 0x1a0
    26a4:	blx	r4
    26a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26ac:	ldr	r2, [r3, #24]
    26b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26b4:	str	r2, [r3, #304]	; 0x130
    26b8:	ldr	r3, [fp, #-16]
    26bc:	mov	r0, r3
    26c0:	sub	sp, fp, #8
    26c4:	ldr	r4, [sp]
    26c8:	ldr	fp, [sp, #4]
    26cc:	add	sp, sp, #8
    26d0:	pop	{pc}		; (ldr pc, [sp], #4)

000026d4 <coda_XML_GetParsingStatus>:
    26d4:	str	fp, [sp, #-8]!
    26d8:	str	lr, [sp, #4]
    26dc:	add	fp, sp, #4
    26e0:	sub	sp, sp, #8
    26e4:	str	r0, [fp, #-8]
    26e8:	str	r1, [fp, #-12]
    26ec:	ldr	r3, [fp, #-12]
    26f0:	cmp	r3, #0
    26f4:	bne	2718 <coda_XML_GetParsingStatus+0x44>
    26f8:	movw	r3, #0
    26fc:	movt	r3, #0
    2700:	movw	r2, #1835	; 0x72b
    2704:	movw	r1, #0
    2708:	movt	r1, #0
    270c:	movw	r0, #0
    2710:	movt	r0, #0
    2714:	bl	0 <__assert_fail>
    2718:	ldr	r2, [fp, #-12]
    271c:	ldr	r3, [fp, #-8]
    2720:	mov	r1, r2
    2724:	add	r3, r3, #496	; 0x1f0
    2728:	ldrd	r2, [r3]
    272c:	strd	r2, [r1]
    2730:	nop	{0}
    2734:	sub	sp, fp, #4
    2738:	ldr	fp, [sp]
    273c:	add	sp, sp, #4
    2740:	pop	{pc}		; (ldr pc, [sp], #4)

00002744 <coda_XML_GetErrorCode>:
    2744:	push	{fp}		; (str fp, [sp, #-4]!)
    2748:	add	fp, sp, #0
    274c:	sub	sp, sp, #12
    2750:	str	r0, [fp, #-8]
    2754:	ldr	r3, [fp, #-8]
    2758:	ldr	r3, [r3, #292]	; 0x124
    275c:	mov	r0, r3
    2760:	add	sp, fp, #0
    2764:	pop	{fp}		; (ldr fp, [sp], #4)
    2768:	bx	lr

0000276c <coda_XML_GetCurrentByteIndex>:
    276c:	strd	r4, [sp, #-12]!
    2770:	str	fp, [sp, #8]
    2774:	add	fp, sp, #8
    2778:	sub	sp, sp, #12
    277c:	str	r0, [fp, #-16]
    2780:	ldr	r3, [fp, #-16]
    2784:	ldr	r3, [r3, #296]	; 0x128
    2788:	cmp	r3, #0
    278c:	beq	27c0 <coda_XML_GetCurrentByteIndex+0x54>
    2790:	ldr	r3, [fp, #-16]
    2794:	ldrd	r0, [r3, #40]	; 0x28
    2798:	ldr	r3, [fp, #-16]
    279c:	ldr	r2, [r3, #48]	; 0x30
    27a0:	ldr	r3, [fp, #-16]
    27a4:	ldr	r3, [r3, #296]	; 0x128
    27a8:	sub	r3, r2, r3
    27ac:	mov	r2, r3
    27b0:	asr	r3, r2, #31
    27b4:	subs	r4, r0, r2
    27b8:	sbc	r5, r1, r3
    27bc:	b	27c8 <coda_XML_GetCurrentByteIndex+0x5c>
    27c0:	mvn	r4, #0
    27c4:	mvn	r5, #0
    27c8:	mov	r2, r4
    27cc:	mov	r3, r5
    27d0:	mov	r0, r2
    27d4:	mov	r1, r3
    27d8:	sub	sp, fp, #8
    27dc:	ldrd	r4, [sp]
    27e0:	ldr	fp, [sp, #8]
    27e4:	add	sp, sp, #12
    27e8:	bx	lr

000027ec <coda_XML_GetCurrentByteCount>:
    27ec:	push	{fp}		; (str fp, [sp, #-4]!)
    27f0:	add	fp, sp, #0
    27f4:	sub	sp, sp, #12
    27f8:	str	r0, [fp, #-8]
    27fc:	ldr	r3, [fp, #-8]
    2800:	ldr	r3, [r3, #300]	; 0x12c
    2804:	cmp	r3, #0
    2808:	beq	2834 <coda_XML_GetCurrentByteCount+0x48>
    280c:	ldr	r3, [fp, #-8]
    2810:	ldr	r3, [r3, #296]	; 0x128
    2814:	cmp	r3, #0
    2818:	beq	2834 <coda_XML_GetCurrentByteCount+0x48>
    281c:	ldr	r3, [fp, #-8]
    2820:	ldr	r2, [r3, #300]	; 0x12c
    2824:	ldr	r3, [fp, #-8]
    2828:	ldr	r3, [r3, #296]	; 0x128
    282c:	sub	r3, r2, r3
    2830:	b	2838 <coda_XML_GetCurrentByteCount+0x4c>
    2834:	mov	r3, #0
    2838:	mov	r0, r3
    283c:	add	sp, fp, #0
    2840:	pop	{fp}		; (ldr fp, [sp], #4)
    2844:	bx	lr

00002848 <coda_XML_GetInputContext>:
    2848:	push	{fp}		; (str fp, [sp, #-4]!)
    284c:	add	fp, sp, #0
    2850:	sub	sp, sp, #20
    2854:	str	r0, [fp, #-8]
    2858:	str	r1, [fp, #-12]
    285c:	str	r2, [fp, #-16]
    2860:	ldr	r3, [fp, #-8]
    2864:	ldr	r3, [r3, #296]	; 0x128
    2868:	cmp	r3, #0
    286c:	beq	28c4 <coda_XML_GetInputContext+0x7c>
    2870:	ldr	r3, [fp, #-8]
    2874:	ldr	r3, [r3, #8]
    2878:	cmp	r3, #0
    287c:	beq	28c4 <coda_XML_GetInputContext+0x7c>
    2880:	ldr	r3, [fp, #-8]
    2884:	ldr	r2, [r3, #296]	; 0x128
    2888:	ldr	r3, [fp, #-8]
    288c:	ldr	r3, [r3, #8]
    2890:	sub	r2, r2, r3
    2894:	ldr	r3, [fp, #-12]
    2898:	str	r2, [r3]
    289c:	ldr	r3, [fp, #-8]
    28a0:	ldr	r2, [r3, #28]
    28a4:	ldr	r3, [fp, #-8]
    28a8:	ldr	r3, [r3, #8]
    28ac:	sub	r2, r2, r3
    28b0:	ldr	r3, [fp, #-16]
    28b4:	str	r2, [r3]
    28b8:	ldr	r3, [fp, #-8]
    28bc:	ldr	r3, [r3, #8]
    28c0:	b	28c8 <coda_XML_GetInputContext+0x80>
    28c4:	mov	r3, #0
    28c8:	mov	r0, r3
    28cc:	add	sp, fp, #0
    28d0:	pop	{fp}		; (ldr fp, [sp], #4)
    28d4:	bx	lr

000028d8 <coda_XML_GetCurrentLineNumber>:
    28d8:	strd	r4, [sp, #-20]!	; 0xffffffec
    28dc:	str	r6, [sp, #8]
    28e0:	str	fp, [sp, #12]
    28e4:	str	lr, [sp, #16]
    28e8:	add	fp, sp, #16
    28ec:	sub	sp, sp, #12
    28f0:	str	r0, [fp, #-24]	; 0xffffffe8
    28f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    28f8:	ldr	r3, [r3, #296]	; 0x128
    28fc:	cmp	r3, #0
    2900:	beq	295c <coda_XML_GetCurrentLineNumber+0x84>
    2904:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2908:	ldr	r2, [r3, #296]	; 0x128
    290c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2910:	ldr	r3, [r3, #304]	; 0x130
    2914:	cmp	r2, r3
    2918:	bcc	295c <coda_XML_GetCurrentLineNumber+0x84>
    291c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2920:	ldr	r3, [r3, #152]	; 0x98
    2924:	ldr	r6, [r3, #52]	; 0x34
    2928:	ldr	r3, [fp, #-24]	; 0xffffffe8
    292c:	ldr	r0, [r3, #152]	; 0x98
    2930:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2934:	ldr	r1, [r3, #304]	; 0x130
    2938:	ldr	r3, [fp, #-24]	; 0xffffffe8
    293c:	ldr	r2, [r3, #296]	; 0x128
    2940:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2944:	add	r3, r3, #416	; 0x1a0
    2948:	blx	r6
    294c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2950:	ldr	r2, [r3, #296]	; 0x128
    2954:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2958:	str	r2, [r3, #304]	; 0x130
    295c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2960:	add	r3, r3, #416	; 0x1a0
    2964:	ldrd	r2, [r3]
    2968:	adds	r4, r2, #1
    296c:	adc	r5, r3, #0
    2970:	mov	r2, r4
    2974:	mov	r3, r5
    2978:	mov	r0, r2
    297c:	mov	r1, r3
    2980:	sub	sp, fp, #16
    2984:	ldrd	r4, [sp]
    2988:	ldr	r6, [sp, #8]
    298c:	ldr	fp, [sp, #12]
    2990:	add	sp, sp, #16
    2994:	pop	{pc}		; (ldr pc, [sp], #4)

00002998 <coda_XML_GetCurrentColumnNumber>:
    2998:	str	r4, [sp, #-12]!
    299c:	str	fp, [sp, #4]
    29a0:	str	lr, [sp, #8]
    29a4:	add	fp, sp, #8
    29a8:	sub	sp, sp, #12
    29ac:	str	r0, [fp, #-16]
    29b0:	ldr	r3, [fp, #-16]
    29b4:	ldr	r3, [r3, #296]	; 0x128
    29b8:	cmp	r3, #0
    29bc:	beq	2a18 <coda_XML_GetCurrentColumnNumber+0x80>
    29c0:	ldr	r3, [fp, #-16]
    29c4:	ldr	r2, [r3, #296]	; 0x128
    29c8:	ldr	r3, [fp, #-16]
    29cc:	ldr	r3, [r3, #304]	; 0x130
    29d0:	cmp	r2, r3
    29d4:	bcc	2a18 <coda_XML_GetCurrentColumnNumber+0x80>
    29d8:	ldr	r3, [fp, #-16]
    29dc:	ldr	r3, [r3, #152]	; 0x98
    29e0:	ldr	r4, [r3, #52]	; 0x34
    29e4:	ldr	r3, [fp, #-16]
    29e8:	ldr	r0, [r3, #152]	; 0x98
    29ec:	ldr	r3, [fp, #-16]
    29f0:	ldr	r1, [r3, #304]	; 0x130
    29f4:	ldr	r3, [fp, #-16]
    29f8:	ldr	r2, [r3, #296]	; 0x128
    29fc:	ldr	r3, [fp, #-16]
    2a00:	add	r3, r3, #416	; 0x1a0
    2a04:	blx	r4
    2a08:	ldr	r3, [fp, #-16]
    2a0c:	ldr	r2, [r3, #296]	; 0x128
    2a10:	ldr	r3, [fp, #-16]
    2a14:	str	r2, [r3, #304]	; 0x130
    2a18:	ldr	r3, [fp, #-16]
    2a1c:	add	r3, r3, #432	; 0x1b0
    2a20:	ldrd	r2, [r3, #-8]
    2a24:	mov	r0, r2
    2a28:	mov	r1, r3
    2a2c:	sub	sp, fp, #8
    2a30:	ldr	r4, [sp]
    2a34:	ldr	fp, [sp, #4]
    2a38:	add	sp, sp, #8
    2a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00002a40 <coda_XML_FreeContentModel>:
    2a40:	str	fp, [sp, #-8]!
    2a44:	str	lr, [sp, #4]
    2a48:	add	fp, sp, #4
    2a4c:	sub	sp, sp, #8
    2a50:	str	r0, [fp, #-8]
    2a54:	str	r1, [fp, #-12]
    2a58:	ldr	r3, [fp, #-8]
    2a5c:	ldr	r3, [r3, #20]
    2a60:	ldr	r0, [fp, #-12]
    2a64:	blx	r3
    2a68:	nop	{0}
    2a6c:	sub	sp, fp, #4
    2a70:	ldr	fp, [sp]
    2a74:	add	sp, sp, #4
    2a78:	pop	{pc}		; (ldr pc, [sp], #4)

00002a7c <coda_XML_MemMalloc>:
    2a7c:	str	fp, [sp, #-8]!
    2a80:	str	lr, [sp, #4]
    2a84:	add	fp, sp, #4
    2a88:	sub	sp, sp, #8
    2a8c:	str	r0, [fp, #-8]
    2a90:	str	r1, [fp, #-12]
    2a94:	ldr	r3, [fp, #-8]
    2a98:	ldr	r3, [r3, #12]
    2a9c:	ldr	r0, [fp, #-12]
    2aa0:	blx	r3
    2aa4:	mov	r3, r0
    2aa8:	mov	r0, r3
    2aac:	sub	sp, fp, #4
    2ab0:	ldr	fp, [sp]
    2ab4:	add	sp, sp, #4
    2ab8:	pop	{pc}		; (ldr pc, [sp], #4)

00002abc <coda_XML_MemRealloc>:
    2abc:	str	fp, [sp, #-8]!
    2ac0:	str	lr, [sp, #4]
    2ac4:	add	fp, sp, #4
    2ac8:	sub	sp, sp, #16
    2acc:	str	r0, [fp, #-8]
    2ad0:	str	r1, [fp, #-12]
    2ad4:	str	r2, [fp, #-16]
    2ad8:	ldr	r3, [fp, #-8]
    2adc:	ldr	r3, [r3, #16]
    2ae0:	ldr	r1, [fp, #-16]
    2ae4:	ldr	r0, [fp, #-12]
    2ae8:	blx	r3
    2aec:	mov	r3, r0
    2af0:	mov	r0, r3
    2af4:	sub	sp, fp, #4
    2af8:	ldr	fp, [sp]
    2afc:	add	sp, sp, #4
    2b00:	pop	{pc}		; (ldr pc, [sp], #4)

00002b04 <coda_XML_MemFree>:
    2b04:	str	fp, [sp, #-8]!
    2b08:	str	lr, [sp, #4]
    2b0c:	add	fp, sp, #4
    2b10:	sub	sp, sp, #8
    2b14:	str	r0, [fp, #-8]
    2b18:	str	r1, [fp, #-12]
    2b1c:	ldr	r3, [fp, #-8]
    2b20:	ldr	r3, [r3, #20]
    2b24:	ldr	r0, [fp, #-12]
    2b28:	blx	r3
    2b2c:	nop	{0}
    2b30:	sub	sp, fp, #4
    2b34:	ldr	fp, [sp]
    2b38:	add	sp, sp, #4
    2b3c:	pop	{pc}		; (ldr pc, [sp], #4)

00002b40 <coda_XML_DefaultCurrent>:
    2b40:	str	fp, [sp, #-8]!
    2b44:	str	lr, [sp, #4]
    2b48:	add	fp, sp, #4
    2b4c:	sub	sp, sp, #8
    2b50:	str	r0, [fp, #-8]
    2b54:	ldr	r3, [fp, #-8]
    2b58:	ldr	r3, [r3, #88]	; 0x58
    2b5c:	cmp	r3, #0
    2b60:	beq	2bc0 <coda_XML_DefaultCurrent+0x80>
    2b64:	ldr	r3, [fp, #-8]
    2b68:	ldr	r3, [r3, #308]	; 0x134
    2b6c:	cmp	r3, #0
    2b70:	beq	2ba0 <coda_XML_DefaultCurrent+0x60>
    2b74:	ldr	r3, [fp, #-8]
    2b78:	ldr	r1, [r3, #236]	; 0xec
    2b7c:	ldr	r3, [fp, #-8]
    2b80:	ldr	r3, [r3, #308]	; 0x134
    2b84:	ldr	r2, [r3]
    2b88:	ldr	r3, [fp, #-8]
    2b8c:	ldr	r3, [r3, #308]	; 0x134
    2b90:	ldr	r3, [r3, #4]
    2b94:	ldr	r0, [fp, #-8]
    2b98:	bl	bb70 <reportDefault>
    2b9c:	b	2bc0 <coda_XML_DefaultCurrent+0x80>
    2ba0:	ldr	r3, [fp, #-8]
    2ba4:	ldr	r1, [r3, #152]	; 0x98
    2ba8:	ldr	r3, [fp, #-8]
    2bac:	ldr	r2, [r3, #296]	; 0x128
    2bb0:	ldr	r3, [fp, #-8]
    2bb4:	ldr	r3, [r3, #300]	; 0x12c
    2bb8:	ldr	r0, [fp, #-8]
    2bbc:	bl	bb70 <reportDefault>
    2bc0:	nop	{0}
    2bc4:	sub	sp, fp, #4
    2bc8:	ldr	fp, [sp]
    2bcc:	add	sp, sp, #4
    2bd0:	pop	{pc}		; (ldr pc, [sp], #4)

00002bd4 <coda_XML_ErrorString>:
    2bd4:	push	{fp}		; (str fp, [sp, #-4]!)
    2bd8:	add	fp, sp, #0
    2bdc:	sub	sp, sp, #12
    2be0:	str	r0, [fp, #-8]
    2be4:	ldr	r3, [fp, #-8]
    2be8:	cmp	r3, #0
    2bec:	beq	2c10 <coda_XML_ErrorString+0x3c>
    2bf0:	ldr	r3, [fp, #-8]
    2bf4:	cmp	r3, #40	; 0x28
    2bf8:	bhi	2c10 <coda_XML_ErrorString+0x3c>
    2bfc:	movw	r3, #0
    2c00:	movt	r3, #0
    2c04:	ldr	r2, [fp, #-8]
    2c08:	ldr	r3, [r3, r2, lsl #2]
    2c0c:	b	2c14 <coda_XML_ErrorString+0x40>
    2c10:	mov	r3, #0
    2c14:	mov	r0, r3
    2c18:	add	sp, fp, #0
    2c1c:	pop	{fp}		; (ldr fp, [sp], #4)
    2c20:	bx	lr

00002c24 <coda_XML_ExpatVersion>:
    2c24:	push	{fp}		; (str fp, [sp, #-4]!)
    2c28:	add	fp, sp, #0
    2c2c:	movw	r3, #0
    2c30:	movt	r3, #0
    2c34:	mov	r0, r3
    2c38:	add	sp, fp, #0
    2c3c:	pop	{fp}		; (ldr fp, [sp], #4)
    2c40:	bx	lr

00002c44 <coda_XML_ExpatVersionInfo>:
    2c44:	push	{fp}		; (str fp, [sp, #-4]!)
    2c48:	add	fp, sp, #0
    2c4c:	sub	sp, sp, #28
    2c50:	str	r0, [fp, #-24]	; 0xffffffe8
    2c54:	mov	r3, #2
    2c58:	str	r3, [fp, #-16]
    2c5c:	mov	r3, #1
    2c60:	str	r3, [fp, #-12]
    2c64:	mov	r3, #1
    2c68:	str	r3, [fp, #-8]
    2c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c70:	mov	r0, r3
    2c74:	sub	r1, fp, #16
    2c78:	ldrd	r2, [r1]
    2c7c:	strd	r2, [r0]
    2c80:	ldr	r3, [r1, #8]
    2c84:	str	r3, [r0, #8]
    2c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c8c:	add	sp, fp, #0
    2c90:	pop	{fp}		; (ldr fp, [sp], #4)
    2c94:	bx	lr

00002c98 <coda_XML_GetFeatureList>:
    2c98:	push	{fp}		; (str fp, [sp, #-4]!)
    2c9c:	add	fp, sp, #0
    2ca0:	movw	r3, #0
    2ca4:	movt	r3, #0
    2ca8:	mov	r0, r3
    2cac:	add	sp, fp, #0
    2cb0:	pop	{fp}		; (ldr fp, [sp], #4)
    2cb4:	bx	lr

00002cb8 <storeRawNames>:
    2cb8:	str	fp, [sp, #-8]!
    2cbc:	str	lr, [sp, #4]
    2cc0:	add	fp, sp, #4
    2cc4:	sub	sp, sp, #32
    2cc8:	str	r0, [fp, #-32]	; 0xffffffe0
    2ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2cd0:	ldr	r3, [r3, #372]	; 0x174
    2cd4:	str	r3, [fp, #-8]
    2cd8:	b	2e40 <storeRawNames+0x188>
    2cdc:	ldr	r3, [fp, #-8]
    2ce0:	ldr	r3, [r3, #24]
    2ce4:	add	r3, r3, #1
    2ce8:	str	r3, [fp, #-16]
    2cec:	ldr	r3, [fp, #-8]
    2cf0:	ldr	r2, [r3, #36]	; 0x24
    2cf4:	ldr	r3, [fp, #-16]
    2cf8:	add	r3, r2, r3
    2cfc:	str	r3, [fp, #-12]
    2d00:	ldr	r3, [fp, #-8]
    2d04:	ldr	r3, [r3, #4]
    2d08:	ldr	r2, [fp, #-12]
    2d0c:	cmp	r2, r3
    2d10:	beq	2e50 <storeRawNames+0x198>
    2d14:	ldr	r3, [fp, #-8]
    2d18:	ldr	r3, [r3, #8]
    2d1c:	mov	r2, r3
    2d20:	ldr	r3, [fp, #-16]
    2d24:	add	r3, r2, r3
    2d28:	str	r3, [fp, #-20]	; 0xffffffec
    2d2c:	ldr	r3, [fp, #-8]
    2d30:	ldr	r2, [r3, #40]	; 0x28
    2d34:	ldr	r3, [fp, #-8]
    2d38:	ldr	r3, [r3, #36]	; 0x24
    2d3c:	sub	r3, r2, r3
    2d40:	ldr	r2, [fp, #-20]	; 0xffffffec
    2d44:	cmp	r2, r3
    2d48:	ble	2e0c <storeRawNames+0x154>
    2d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2d50:	ldr	r3, [r3, #16]
    2d54:	ldr	r2, [fp, #-8]
    2d58:	ldr	r2, [r2, #36]	; 0x24
    2d5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d60:	mov	r0, r2
    2d64:	blx	r3
    2d68:	str	r0, [fp, #-24]	; 0xffffffe8
    2d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2d70:	cmp	r3, #0
    2d74:	bne	2d80 <storeRawNames+0xc8>
    2d78:	mov	r3, #0
    2d7c:	b	2e58 <storeRawNames+0x1a0>
    2d80:	ldr	r3, [fp, #-8]
    2d84:	ldr	r2, [r3, #12]
    2d88:	ldr	r3, [fp, #-8]
    2d8c:	ldr	r3, [r3, #36]	; 0x24
    2d90:	cmp	r2, r3
    2d94:	bne	2da4 <storeRawNames+0xec>
    2d98:	ldr	r3, [fp, #-8]
    2d9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2da0:	str	r2, [r3, #12]
    2da4:	ldr	r3, [fp, #-8]
    2da8:	ldr	r3, [r3, #16]
    2dac:	cmp	r3, #0
    2db0:	beq	2ddc <storeRawNames+0x124>
    2db4:	ldr	r3, [fp, #-8]
    2db8:	ldr	r2, [r3, #16]
    2dbc:	ldr	r3, [fp, #-8]
    2dc0:	ldr	r3, [r3, #36]	; 0x24
    2dc4:	sub	r3, r2, r3
    2dc8:	mov	r2, r3
    2dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2dd0:	add	r2, r3, r2
    2dd4:	ldr	r3, [fp, #-8]
    2dd8:	str	r2, [r3, #16]
    2ddc:	ldr	r3, [fp, #-8]
    2de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2de4:	str	r2, [r3, #36]	; 0x24
    2de8:	ldr	r3, [fp, #-20]	; 0xffffffec
    2dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2df0:	add	r2, r2, r3
    2df4:	ldr	r3, [fp, #-8]
    2df8:	str	r2, [r3, #40]	; 0x28
    2dfc:	ldr	r3, [fp, #-16]
    2e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e04:	add	r3, r2, r3
    2e08:	str	r3, [fp, #-12]
    2e0c:	ldr	r3, [fp, #-8]
    2e10:	ldr	r1, [r3, #4]
    2e14:	ldr	r3, [fp, #-8]
    2e18:	ldr	r3, [r3, #8]
    2e1c:	mov	r2, r3
    2e20:	ldr	r0, [fp, #-12]
    2e24:	bl	0 <memcpy>
    2e28:	ldr	r3, [fp, #-8]
    2e2c:	ldr	r2, [fp, #-12]
    2e30:	str	r2, [r3, #4]
    2e34:	ldr	r3, [fp, #-8]
    2e38:	ldr	r3, [r3]
    2e3c:	str	r3, [fp, #-8]
    2e40:	ldr	r3, [fp, #-8]
    2e44:	cmp	r3, #0
    2e48:	bne	2cdc <storeRawNames+0x24>
    2e4c:	b	2e54 <storeRawNames+0x19c>
    2e50:	nop	{0}
    2e54:	mov	r3, #1
    2e58:	mov	r0, r3
    2e5c:	sub	sp, fp, #4
    2e60:	ldr	fp, [sp]
    2e64:	add	sp, sp, #4
    2e68:	pop	{pc}		; (ldr pc, [sp], #4)

00002e6c <contentProcessor>:
    2e6c:	str	fp, [sp, #-8]!
    2e70:	str	lr, [sp, #4]
    2e74:	add	fp, sp, #4
    2e78:	sub	sp, sp, #40	; 0x28
    2e7c:	str	r0, [fp, #-16]
    2e80:	str	r1, [fp, #-20]	; 0xffffffec
    2e84:	str	r2, [fp, #-24]	; 0xffffffe8
    2e88:	str	r3, [fp, #-28]	; 0xffffffe4
    2e8c:	ldr	r3, [fp, #-16]
    2e90:	ldr	r2, [r3, #152]	; 0x98
    2e94:	ldr	r3, [fp, #-16]
    2e98:	ldrb	r3, [r3, #500]	; 0x1f4
    2e9c:	cmp	r3, #0
    2ea0:	moveq	r3, #1
    2ea4:	movne	r3, #0
    2ea8:	uxtb	r3, r3
    2eac:	str	r3, [sp, #8]
    2eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2eb4:	str	r3, [sp, #4]
    2eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ebc:	str	r3, [sp]
    2ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ec4:	mov	r1, #0
    2ec8:	ldr	r0, [fp, #-16]
    2ecc:	bl	3348 <doContent>
    2ed0:	str	r0, [fp, #-8]
    2ed4:	ldr	r3, [fp, #-8]
    2ed8:	cmp	r3, #0
    2edc:	bne	2efc <contentProcessor+0x90>
    2ee0:	ldr	r0, [fp, #-16]
    2ee4:	bl	2cb8 <storeRawNames>
    2ee8:	mov	r3, r0
    2eec:	cmp	r3, #0
    2ef0:	bne	2efc <contentProcessor+0x90>
    2ef4:	mov	r3, #1
    2ef8:	b	2f00 <contentProcessor+0x94>
    2efc:	ldr	r3, [fp, #-8]
    2f00:	mov	r0, r3
    2f04:	sub	sp, fp, #4
    2f08:	ldr	fp, [sp]
    2f0c:	add	sp, sp, #4
    2f10:	pop	{pc}		; (ldr pc, [sp], #4)

00002f14 <externalEntityInitProcessor>:
    2f14:	str	fp, [sp, #-8]!
    2f18:	str	lr, [sp, #4]
    2f1c:	add	fp, sp, #4
    2f20:	sub	sp, sp, #24
    2f24:	str	r0, [fp, #-16]
    2f28:	str	r1, [fp, #-20]	; 0xffffffec
    2f2c:	str	r2, [fp, #-24]	; 0xffffffe8
    2f30:	str	r3, [fp, #-28]	; 0xffffffe4
    2f34:	ldr	r0, [fp, #-16]
    2f38:	bl	6820 <initializeEncoding>
    2f3c:	str	r0, [fp, #-8]
    2f40:	ldr	r3, [fp, #-8]
    2f44:	cmp	r3, #0
    2f48:	beq	2f54 <externalEntityInitProcessor+0x40>
    2f4c:	ldr	r3, [fp, #-8]
    2f50:	b	2f7c <externalEntityInitProcessor+0x68>
    2f54:	ldr	r2, [fp, #-16]
    2f58:	movw	r3, #0
    2f5c:	movt	r3, #0
    2f60:	str	r3, [r2, #288]	; 0x120
    2f64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f70:	ldr	r0, [fp, #-16]
    2f74:	bl	2f90 <externalEntityInitProcessor2>
    2f78:	mov	r3, r0
    2f7c:	mov	r0, r3
    2f80:	sub	sp, fp, #4
    2f84:	ldr	fp, [sp]
    2f88:	add	sp, sp, #4
    2f8c:	pop	{pc}		; (ldr pc, [sp], #4)

00002f90 <externalEntityInitProcessor2>:
    2f90:	str	r4, [sp, #-12]!
    2f94:	str	fp, [sp, #4]
    2f98:	str	lr, [sp, #8]
    2f9c:	add	fp, sp, #8
    2fa0:	sub	sp, sp, #28
    2fa4:	str	r0, [fp, #-24]	; 0xffffffe8
    2fa8:	str	r1, [fp, #-28]	; 0xffffffe4
    2fac:	str	r2, [fp, #-32]	; 0xffffffe0
    2fb0:	str	r3, [fp, #-36]	; 0xffffffdc
    2fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2fb8:	str	r3, [fp, #-20]	; 0xffffffec
    2fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2fc0:	ldr	r3, [r3, #152]	; 0x98
    2fc4:	ldr	r4, [r3, #4]
    2fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2fcc:	ldr	r0, [r3, #152]	; 0x98
    2fd0:	sub	r3, fp, #20
    2fd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2fdc:	blx	r4
    2fe0:	str	r0, [fp, #-16]
    2fe4:	ldr	r3, [fp, #-16]
    2fe8:	cmn	r3, #1
    2fec:	beq	304c <externalEntityInitProcessor2+0xbc>
    2ff0:	ldr	r3, [fp, #-16]
    2ff4:	cmp	r3, #14
    2ff8:	beq	300c <externalEntityInitProcessor2+0x7c>
    2ffc:	ldr	r3, [fp, #-16]
    3000:	cmn	r3, #2
    3004:	beq	3084 <externalEntityInitProcessor2+0xf4>
    3008:	b	30bc <externalEntityInitProcessor2+0x12c>
    300c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3010:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3014:	cmp	r2, r3
    3018:	bne	3040 <externalEntityInitProcessor2+0xb0>
    301c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3020:	ldrb	r3, [r3, #500]	; 0x1f4
    3024:	cmp	r3, #0
    3028:	bne	3040 <externalEntityInitProcessor2+0xb0>
    302c:	ldr	r2, [fp, #-20]	; 0xffffffec
    3030:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3034:	str	r2, [r3]
    3038:	mov	r3, #0
    303c:	b	30e4 <externalEntityInitProcessor2+0x154>
    3040:	ldr	r3, [fp, #-20]	; 0xffffffec
    3044:	str	r3, [fp, #-28]	; 0xffffffe4
    3048:	b	30bc <externalEntityInitProcessor2+0x12c>
    304c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3050:	ldrb	r3, [r3, #500]	; 0x1f4
    3054:	cmp	r3, #0
    3058:	bne	3070 <externalEntityInitProcessor2+0xe0>
    305c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3060:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3064:	str	r2, [r3]
    3068:	mov	r3, #0
    306c:	b	30e4 <externalEntityInitProcessor2+0x154>
    3070:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3074:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3078:	str	r2, [r3, #296]	; 0x128
    307c:	mov	r3, #5
    3080:	b	30e4 <externalEntityInitProcessor2+0x154>
    3084:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3088:	ldrb	r3, [r3, #500]	; 0x1f4
    308c:	cmp	r3, #0
    3090:	bne	30a8 <externalEntityInitProcessor2+0x118>
    3094:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3098:	ldr	r2, [fp, #-28]	; 0xffffffe4
    309c:	str	r2, [r3]
    30a0:	mov	r3, #0
    30a4:	b	30e4 <externalEntityInitProcessor2+0x154>
    30a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    30b0:	str	r2, [r3, #296]	; 0x128
    30b4:	mov	r3, #6
    30b8:	b	30e4 <externalEntityInitProcessor2+0x154>
    30bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30c0:	movw	r3, #0
    30c4:	movt	r3, #0
    30c8:	str	r3, [r2, #288]	; 0x120
    30cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    30d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    30d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    30d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30dc:	bl	30fc <externalEntityInitProcessor3>
    30e0:	mov	r3, r0
    30e4:	mov	r0, r3
    30e8:	sub	sp, fp, #8
    30ec:	ldr	r4, [sp]
    30f0:	ldr	fp, [sp, #4]
    30f4:	add	sp, sp, #8
    30f8:	pop	{pc}		; (ldr pc, [sp], #4)

000030fc <externalEntityInitProcessor3>:
    30fc:	str	r4, [sp, #-12]!
    3100:	str	fp, [sp, #4]
    3104:	str	lr, [sp, #8]
    3108:	add	fp, sp, #8
    310c:	sub	sp, sp, #36	; 0x24
    3110:	str	r0, [fp, #-32]	; 0xffffffe0
    3114:	str	r1, [fp, #-36]	; 0xffffffdc
    3118:	str	r2, [fp, #-40]	; 0xffffffd8
    311c:	str	r3, [fp, #-44]	; 0xffffffd4
    3120:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3124:	str	r3, [fp, #-24]	; 0xffffffe8
    3128:	ldr	r3, [fp, #-32]	; 0xffffffe0
    312c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3130:	str	r2, [r3, #296]	; 0x128
    3134:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3138:	ldr	r3, [r3, #152]	; 0x98
    313c:	ldr	r4, [r3, #4]
    3140:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3144:	ldr	r0, [r3, #152]	; 0x98
    3148:	sub	r3, fp, #24
    314c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3150:	ldr	r1, [fp, #-36]	; 0xffffffdc
    3154:	blx	r4
    3158:	str	r0, [fp, #-16]
    315c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3160:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3164:	str	r2, [r3, #300]	; 0x12c
    3168:	ldr	r3, [fp, #-16]
    316c:	cmn	r3, #1
    3170:	beq	31fc <externalEntityInitProcessor3+0x100>
    3174:	ldr	r3, [fp, #-16]
    3178:	cmp	r3, #12
    317c:	beq	3190 <externalEntityInitProcessor3+0x94>
    3180:	ldr	r3, [fp, #-16]
    3184:	cmn	r3, #2
    3188:	beq	3228 <externalEntityInitProcessor3+0x12c>
    318c:	b	3254 <externalEntityInitProcessor3+0x158>
    3190:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3194:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3198:	mov	r1, #1
    319c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    31a0:	bl	68bc <processXmlDecl>
    31a4:	str	r0, [fp, #-20]	; 0xffffffec
    31a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    31ac:	cmp	r3, #0
    31b0:	beq	31bc <externalEntityInitProcessor3+0xc0>
    31b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    31b8:	b	3288 <externalEntityInitProcessor3+0x18c>
    31bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    31c0:	ldr	r3, [r3, #496]	; 0x1f0
    31c4:	cmp	r3, #2
    31c8:	beq	31e8 <externalEntityInitProcessor3+0xec>
    31cc:	cmp	r3, #3
    31d0:	bne	31f0 <externalEntityInitProcessor3+0xf4>
    31d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    31dc:	str	r2, [r3]
    31e0:	mov	r3, #0
    31e4:	b	3288 <externalEntityInitProcessor3+0x18c>
    31e8:	mov	r3, #35	; 0x23
    31ec:	b	3288 <externalEntityInitProcessor3+0x18c>
    31f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    31f4:	str	r3, [fp, #-36]	; 0xffffffdc
    31f8:	b	3254 <externalEntityInitProcessor3+0x158>
    31fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3200:	ldrb	r3, [r3, #500]	; 0x1f4
    3204:	cmp	r3, #0
    3208:	bne	3220 <externalEntityInitProcessor3+0x124>
    320c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3210:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3214:	str	r2, [r3]
    3218:	mov	r3, #0
    321c:	b	3288 <externalEntityInitProcessor3+0x18c>
    3220:	mov	r3, #5
    3224:	b	3288 <externalEntityInitProcessor3+0x18c>
    3228:	ldr	r3, [fp, #-32]	; 0xffffffe0
    322c:	ldrb	r3, [r3, #500]	; 0x1f4
    3230:	cmp	r3, #0
    3234:	bne	324c <externalEntityInitProcessor3+0x150>
    3238:	ldr	r3, [fp, #-44]	; 0xffffffd4
    323c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3240:	str	r2, [r3]
    3244:	mov	r3, #0
    3248:	b	3288 <externalEntityInitProcessor3+0x18c>
    324c:	mov	r3, #6
    3250:	b	3288 <externalEntityInitProcessor3+0x18c>
    3254:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3258:	movw	r3, #0
    325c:	movt	r3, #0
    3260:	str	r3, [r2, #288]	; 0x120
    3264:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3268:	mov	r2, #1
    326c:	str	r2, [r3, #320]	; 0x140
    3270:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3274:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3278:	ldr	r1, [fp, #-36]	; 0xffffffdc
    327c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3280:	bl	32a0 <externalEntityContentProcessor>
    3284:	mov	r3, r0
    3288:	mov	r0, r3
    328c:	sub	sp, fp, #8
    3290:	ldr	r4, [sp]
    3294:	ldr	fp, [sp, #4]
    3298:	add	sp, sp, #8
    329c:	pop	{pc}		; (ldr pc, [sp], #4)

000032a0 <externalEntityContentProcessor>:
    32a0:	str	fp, [sp, #-8]!
    32a4:	str	lr, [sp, #4]
    32a8:	add	fp, sp, #4
    32ac:	sub	sp, sp, #40	; 0x28
    32b0:	str	r0, [fp, #-16]
    32b4:	str	r1, [fp, #-20]	; 0xffffffec
    32b8:	str	r2, [fp, #-24]	; 0xffffffe8
    32bc:	str	r3, [fp, #-28]	; 0xffffffe4
    32c0:	ldr	r3, [fp, #-16]
    32c4:	ldr	r2, [r3, #152]	; 0x98
    32c8:	ldr	r3, [fp, #-16]
    32cc:	ldrb	r3, [r3, #500]	; 0x1f4
    32d0:	cmp	r3, #0
    32d4:	moveq	r3, #1
    32d8:	movne	r3, #0
    32dc:	uxtb	r3, r3
    32e0:	str	r3, [sp, #8]
    32e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    32e8:	str	r3, [sp, #4]
    32ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32f0:	str	r3, [sp]
    32f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    32f8:	mov	r1, #1
    32fc:	ldr	r0, [fp, #-16]
    3300:	bl	3348 <doContent>
    3304:	str	r0, [fp, #-8]
    3308:	ldr	r3, [fp, #-8]
    330c:	cmp	r3, #0
    3310:	bne	3330 <externalEntityContentProcessor+0x90>
    3314:	ldr	r0, [fp, #-16]
    3318:	bl	2cb8 <storeRawNames>
    331c:	mov	r3, r0
    3320:	cmp	r3, #0
    3324:	bne	3330 <externalEntityContentProcessor+0x90>
    3328:	mov	r3, #1
    332c:	b	3334 <externalEntityContentProcessor+0x94>
    3330:	ldr	r3, [fp, #-8]
    3334:	mov	r0, r3
    3338:	sub	sp, fp, #4
    333c:	ldr	fp, [sp]
    3340:	add	sp, sp, #4
    3344:	pop	{pc}		; (ldr pc, [sp], #4)

00003348 <doContent>:
    3348:	strd	r4, [sp, #-16]!
    334c:	str	fp, [sp, #8]
    3350:	str	lr, [sp, #12]
    3354:	add	fp, sp, #12
    3358:	sub	sp, sp, #200	; 0xc8
    335c:	str	r0, [fp, #-192]	; 0xffffff40
    3360:	str	r1, [fp, #-196]	; 0xffffff3c
    3364:	str	r2, [fp, #-200]	; 0xffffff38
    3368:	str	r3, [fp, #-204]	; 0xffffff34
    336c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3370:	ldr	r3, [r3, #364]	; 0x16c
    3374:	str	r3, [fp, #-44]	; 0xffffffd4
    3378:	ldr	r3, [fp, #-192]	; 0xffffff40
    337c:	ldr	r3, [r3, #152]	; 0x98
    3380:	ldr	r2, [fp, #-200]	; 0xffffff38
    3384:	cmp	r2, r3
    3388:	bne	33a8 <doContent+0x60>
    338c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3390:	add	r3, r3, #296	; 0x128
    3394:	str	r3, [fp, #-16]
    3398:	ldr	r3, [fp, #-192]	; 0xffffff40
    339c:	add	r3, r3, #300	; 0x12c
    33a0:	str	r3, [fp, #-20]	; 0xffffffec
    33a4:	b	33c4 <doContent+0x7c>
    33a8:	ldr	r3, [fp, #-192]	; 0xffffff40
    33ac:	ldr	r3, [r3, #308]	; 0x134
    33b0:	str	r3, [fp, #-16]
    33b4:	ldr	r3, [fp, #-192]	; 0xffffff40
    33b8:	ldr	r3, [r3, #308]	; 0x134
    33bc:	add	r3, r3, #4
    33c0:	str	r3, [fp, #-20]	; 0xffffffec
    33c4:	ldr	r2, [fp, #-204]	; 0xffffff34
    33c8:	ldr	r3, [fp, #-16]
    33cc:	str	r2, [r3]
    33d0:	ldr	r3, [fp, #-204]	; 0xffffff34
    33d4:	str	r3, [fp, #-128]	; 0xffffff80
    33d8:	ldr	r3, [fp, #-200]	; 0xffffff38
    33dc:	ldr	r4, [r3, #4]
    33e0:	ldr	r1, [fp, #-204]	; 0xffffff34
    33e4:	sub	r3, fp, #128	; 0x80
    33e8:	ldr	r2, [fp, #4]
    33ec:	ldr	r0, [fp, #-200]	; 0xffffff38
    33f0:	blx	r4
    33f4:	str	r0, [fp, #-48]	; 0xffffffd0
    33f8:	ldr	r2, [fp, #-128]	; 0xffffff80
    33fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    3400:	str	r2, [r3]
    3404:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3408:	add	r3, r3, #5
    340c:	cmp	r3, #18
    3410:	ldrls	pc, [pc, r3, lsl #2]
    3414:	b	465c <doContent+0x1314>
    3418:	.word	0x000043b4
    341c:	.word	0x00003530
    3420:	.word	0x00003464
    3424:	.word	0x000035d0
    3428:	.word	0x000035a8
    342c:	.word	0x00003594
    3430:	.word	0x00003974
    3434:	.word	0x00003974
    3438:	.word	0x00003ca4
    343c:	.word	0x00003ca4
    3440:	.word	0x00003ef8
    3444:	.word	0x0000450c
    3448:	.word	0x0000429c
    344c:	.word	0x000042fc
    3450:	.word	0x000035f8
    3454:	.word	0x000041f4
    3458:	.word	0x0000460c
    345c:	.word	0x00004294
    3460:	.word	0x00004634
    3464:	ldrb	r3, [fp, #12]
    3468:	cmp	r3, #0
    346c:	beq	3484 <doContent+0x13c>
    3470:	ldr	r2, [fp, #-204]	; 0xffffff34
    3474:	ldr	r3, [fp, #8]
    3478:	str	r2, [r3]
    347c:	mov	r3, #0
    3480:	b	471c <doContent+0x13d4>
    3484:	ldr	r3, [fp, #-20]	; 0xffffffec
    3488:	ldr	r2, [fp, #4]
    348c:	str	r2, [r3]
    3490:	ldr	r3, [fp, #-192]	; 0xffffff40
    3494:	ldr	r3, [r3, #68]	; 0x44
    3498:	cmp	r3, #0
    349c:	beq	34c8 <doContent+0x180>
    34a0:	mov	r3, #10
    34a4:	strb	r3, [fp, #-129]	; 0xffffff7f
    34a8:	ldr	r3, [fp, #-192]	; 0xffffff40
    34ac:	ldr	r3, [r3, #68]	; 0x44
    34b0:	ldr	r2, [fp, #-192]	; 0xffffff40
    34b4:	ldr	r0, [r2, #4]
    34b8:	sub	r1, fp, #129	; 0x81
    34bc:	mov	r2, #1
    34c0:	blx	r3
    34c4:	b	34ec <doContent+0x1a4>
    34c8:	ldr	r3, [fp, #-192]	; 0xffffff40
    34cc:	ldr	r3, [r3, #88]	; 0x58
    34d0:	cmp	r3, #0
    34d4:	beq	34ec <doContent+0x1a4>
    34d8:	ldr	r2, [fp, #-204]	; 0xffffff34
    34dc:	ldr	r3, [fp, #4]
    34e0:	ldr	r1, [fp, #-200]	; 0xffffff38
    34e4:	ldr	r0, [fp, #-192]	; 0xffffff40
    34e8:	bl	bb70 <reportDefault>
    34ec:	ldr	r3, [fp, #-196]	; 0xffffff3c
    34f0:	cmp	r3, #0
    34f4:	bne	3500 <doContent+0x1b8>
    34f8:	mov	r3, #3
    34fc:	b	471c <doContent+0x13d4>
    3500:	ldr	r3, [fp, #-192]	; 0xffffff40
    3504:	ldr	r3, [r3, #320]	; 0x140
    3508:	ldr	r2, [fp, #-196]	; 0xffffff3c
    350c:	cmp	r2, r3
    3510:	beq	351c <doContent+0x1d4>
    3514:	mov	r3, #13
    3518:	b	471c <doContent+0x13d4>
    351c:	ldr	r3, [fp, #8]
    3520:	ldr	r2, [fp, #4]
    3524:	str	r2, [r3]
    3528:	mov	r3, #0
    352c:	b	471c <doContent+0x13d4>
    3530:	ldrb	r3, [fp, #12]
    3534:	cmp	r3, #0
    3538:	beq	3550 <doContent+0x208>
    353c:	ldr	r2, [fp, #-204]	; 0xffffff34
    3540:	ldr	r3, [fp, #8]
    3544:	str	r2, [r3]
    3548:	mov	r3, #0
    354c:	b	471c <doContent+0x13d4>
    3550:	ldr	r3, [fp, #-196]	; 0xffffff3c
    3554:	cmp	r3, #0
    3558:	ble	358c <doContent+0x244>
    355c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3560:	ldr	r3, [r3, #320]	; 0x140
    3564:	ldr	r2, [fp, #-196]	; 0xffffff3c
    3568:	cmp	r2, r3
    356c:	beq	3578 <doContent+0x230>
    3570:	mov	r3, #13
    3574:	b	471c <doContent+0x13d4>
    3578:	ldr	r2, [fp, #-204]	; 0xffffff34
    357c:	ldr	r3, [fp, #8]
    3580:	str	r2, [r3]
    3584:	mov	r3, #0
    3588:	b	471c <doContent+0x13d4>
    358c:	mov	r3, #3
    3590:	b	471c <doContent+0x13d4>
    3594:	ldr	r2, [fp, #-128]	; 0xffffff80
    3598:	ldr	r3, [fp, #-16]
    359c:	str	r2, [r3]
    35a0:	mov	r3, #4
    35a4:	b	471c <doContent+0x13d4>
    35a8:	ldrb	r3, [fp, #12]
    35ac:	cmp	r3, #0
    35b0:	beq	35c8 <doContent+0x280>
    35b4:	ldr	r2, [fp, #-204]	; 0xffffff34
    35b8:	ldr	r3, [fp, #8]
    35bc:	str	r2, [r3]
    35c0:	mov	r3, #0
    35c4:	b	471c <doContent+0x13d4>
    35c8:	mov	r3, #5
    35cc:	b	471c <doContent+0x13d4>
    35d0:	ldrb	r3, [fp, #12]
    35d4:	cmp	r3, #0
    35d8:	beq	35f0 <doContent+0x2a8>
    35dc:	ldr	r2, [fp, #-204]	; 0xffffff34
    35e0:	ldr	r3, [fp, #8]
    35e4:	str	r2, [r3]
    35e8:	mov	r3, #0
    35ec:	b	471c <doContent+0x13d4>
    35f0:	mov	r3, #6
    35f4:	b	471c <doContent+0x13d4>
    35f8:	ldr	r3, [fp, #-200]	; 0xffffff38
    35fc:	ldr	r3, [r3, #48]	; 0x30
    3600:	ldr	r2, [fp, #-204]	; 0xffffff34
    3604:	ldr	r1, [fp, #-200]	; 0xffffff38
    3608:	ldr	r1, [r1, #68]	; 0x44
    360c:	add	r0, r2, r1
    3610:	ldr	r1, [fp, #-128]	; 0xffffff80
    3614:	ldr	r2, [fp, #-200]	; 0xffffff38
    3618:	ldr	r2, [r2, #68]	; 0x44
    361c:	rsb	r2, r2, #0
    3620:	add	r2, r1, r2
    3624:	mov	r1, r0
    3628:	ldr	r0, [fp, #-200]	; 0xffffff38
    362c:	blx	r3
    3630:	mov	r3, r0
    3634:	uxtb	r3, r3
    3638:	strb	r3, [fp, #-130]	; 0xffffff7e
    363c:	ldrb	r3, [fp, #-130]	; 0xffffff7e
    3640:	cmp	r3, #0
    3644:	beq	36a0 <doContent+0x358>
    3648:	ldr	r3, [fp, #-192]	; 0xffffff40
    364c:	ldr	r3, [r3, #68]	; 0x44
    3650:	cmp	r3, #0
    3654:	beq	3678 <doContent+0x330>
    3658:	ldr	r3, [fp, #-192]	; 0xffffff40
    365c:	ldr	r3, [r3, #68]	; 0x44
    3660:	ldr	r2, [fp, #-192]	; 0xffffff40
    3664:	ldr	r0, [r2, #4]
    3668:	sub	r1, fp, #130	; 0x82
    366c:	mov	r2, #1
    3670:	blx	r3
    3674:	b	4684 <doContent+0x133c>
    3678:	ldr	r3, [fp, #-192]	; 0xffffff40
    367c:	ldr	r3, [r3, #88]	; 0x58
    3680:	cmp	r3, #0
    3684:	beq	4684 <doContent+0x133c>
    3688:	ldr	r2, [fp, #-204]	; 0xffffff34
    368c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3690:	ldr	r1, [fp, #-200]	; 0xffffff38
    3694:	ldr	r0, [fp, #-192]	; 0xffffff40
    3698:	bl	bb70 <reportDefault>
    369c:	b	4684 <doContent+0x133c>
    36a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    36a4:	add	r0, r3, #80	; 0x50
    36a8:	ldr	r3, [fp, #-204]	; 0xffffff34
    36ac:	ldr	r2, [fp, #-200]	; 0xffffff38
    36b0:	ldr	r2, [r2, #68]	; 0x44
    36b4:	add	r1, r3, r2
    36b8:	ldr	r2, [fp, #-128]	; 0xffffff80
    36bc:	ldr	r3, [fp, #-200]	; 0xffffff38
    36c0:	ldr	r3, [r3, #68]	; 0x44
    36c4:	rsb	r3, r3, #0
    36c8:	add	r3, r2, r3
    36cc:	mov	r2, r1
    36d0:	ldr	r1, [fp, #-200]	; 0xffffff38
    36d4:	bl	edc8 <poolStoreString>
    36d8:	str	r0, [fp, #-52]	; 0xffffffcc
    36dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    36e0:	cmp	r3, #0
    36e4:	bne	36f0 <doContent+0x3a8>
    36e8:	mov	r3, #1
    36ec:	b	471c <doContent+0x13d4>
    36f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    36f4:	mov	r3, #0
    36f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    36fc:	ldr	r0, [fp, #-192]	; 0xffffff40
    3700:	bl	e00c <lookup>
    3704:	str	r0, [fp, #-56]	; 0xffffffc8
    3708:	ldr	r3, [fp, #-44]	; 0xffffffd4
    370c:	ldr	r2, [r3, #96]	; 0x60
    3710:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3714:	str	r2, [r3, #92]	; 0x5c
    3718:	ldr	r3, [fp, #-44]	; 0xffffffd4
    371c:	ldrb	r3, [r3, #129]	; 0x81
    3720:	cmp	r3, #0
    3724:	beq	3738 <doContent+0x3f0>
    3728:	ldr	r3, [fp, #-44]	; 0xffffffd4
    372c:	ldrb	r3, [r3, #130]	; 0x82
    3730:	cmp	r3, #0
    3734:	beq	3764 <doContent+0x41c>
    3738:	ldr	r3, [fp, #-56]	; 0xffffffc8
    373c:	cmp	r3, #0
    3740:	bne	374c <doContent+0x404>
    3744:	mov	r3, #11
    3748:	b	471c <doContent+0x13d4>
    374c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3750:	ldrb	r3, [r3, #34]	; 0x22
    3754:	cmp	r3, #0
    3758:	bne	37c8 <doContent+0x480>
    375c:	mov	r3, #24
    3760:	b	471c <doContent+0x13d4>
    3764:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3768:	cmp	r3, #0
    376c:	bne	37cc <doContent+0x484>
    3770:	ldr	r3, [fp, #-192]	; 0xffffff40
    3774:	ldr	r3, [r3, #128]	; 0x80
    3778:	cmp	r3, #0
    377c:	beq	37a0 <doContent+0x458>
    3780:	ldr	r3, [fp, #-192]	; 0xffffff40
    3784:	ldr	r3, [r3, #128]	; 0x80
    3788:	ldr	r2, [fp, #-192]	; 0xffffff40
    378c:	ldr	r0, [r2, #4]
    3790:	mov	r2, #0
    3794:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3798:	blx	r3
    379c:	b	468c <doContent+0x1344>
    37a0:	ldr	r3, [fp, #-192]	; 0xffffff40
    37a4:	ldr	r3, [r3, #88]	; 0x58
    37a8:	cmp	r3, #0
    37ac:	beq	468c <doContent+0x1344>
    37b0:	ldr	r2, [fp, #-204]	; 0xffffff34
    37b4:	ldr	r3, [fp, #-128]	; 0xffffff80
    37b8:	ldr	r1, [fp, #-200]	; 0xffffff38
    37bc:	ldr	r0, [fp, #-192]	; 0xffffff40
    37c0:	bl	bb70 <reportDefault>
    37c4:	b	468c <doContent+0x1344>
    37c8:	nop	{0}
    37cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    37d0:	ldrb	r3, [r3, #32]
    37d4:	cmp	r3, #0
    37d8:	beq	37e4 <doContent+0x49c>
    37dc:	mov	r3, #12
    37e0:	b	471c <doContent+0x13d4>
    37e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    37e8:	ldr	r3, [r3, #28]
    37ec:	cmp	r3, #0
    37f0:	beq	37fc <doContent+0x4b4>
    37f4:	mov	r3, #15
    37f8:	b	471c <doContent+0x13d4>
    37fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3800:	ldr	r3, [r3, #4]
    3804:	cmp	r3, #0
    3808:	beq	38a0 <doContent+0x558>
    380c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3810:	ldrb	r3, [r3, #316]	; 0x13c
    3814:	cmp	r3, #0
    3818:	bne	3878 <doContent+0x530>
    381c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3820:	ldr	r3, [r3, #128]	; 0x80
    3824:	cmp	r3, #0
    3828:	beq	3850 <doContent+0x508>
    382c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3830:	ldr	r3, [r3, #128]	; 0x80
    3834:	ldr	r2, [fp, #-192]	; 0xffffff40
    3838:	ldr	r0, [r2, #4]
    383c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3840:	ldr	r1, [r2]
    3844:	mov	r2, #0
    3848:	blx	r3
    384c:	b	4694 <doContent+0x134c>
    3850:	ldr	r3, [fp, #-192]	; 0xffffff40
    3854:	ldr	r3, [r3, #88]	; 0x58
    3858:	cmp	r3, #0
    385c:	beq	4694 <doContent+0x134c>
    3860:	ldr	r2, [fp, #-204]	; 0xffffff34
    3864:	ldr	r3, [fp, #-128]	; 0xffffff80
    3868:	ldr	r1, [fp, #-200]	; 0xffffff38
    386c:	ldr	r0, [fp, #-192]	; 0xffffff40
    3870:	bl	bb70 <reportDefault>
    3874:	b	4694 <doContent+0x134c>
    3878:	mov	r2, #0
    387c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3880:	ldr	r0, [fp, #-192]	; 0xffffff40
    3884:	bl	a398 <processInternalEntity>
    3888:	str	r0, [fp, #-60]	; 0xffffffc4
    388c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3890:	cmp	r3, #0
    3894:	beq	469c <doContent+0x1354>
    3898:	ldr	r3, [fp, #-60]	; 0xffffffc4
    389c:	b	471c <doContent+0x13d4>
    38a0:	ldr	r3, [fp, #-192]	; 0xffffff40
    38a4:	ldr	r3, [r3, #120]	; 0x78
    38a8:	cmp	r3, #0
    38ac:	beq	3948 <doContent+0x600>
    38b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    38b4:	mov	r2, #1
    38b8:	strb	r2, [r3, #32]
    38bc:	ldr	r0, [fp, #-192]	; 0xffffff40
    38c0:	bl	c554 <getContext>
    38c4:	str	r0, [fp, #-64]	; 0xffffffc0
    38c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    38cc:	mov	r2, #0
    38d0:	strb	r2, [r3, #32]
    38d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    38d8:	cmp	r3, #0
    38dc:	bne	38e8 <doContent+0x5a0>
    38e0:	mov	r3, #1
    38e4:	b	471c <doContent+0x13d4>
    38e8:	ldr	r3, [fp, #-192]	; 0xffffff40
    38ec:	ldr	r4, [r3, #120]	; 0x78
    38f0:	ldr	r3, [fp, #-192]	; 0xffffff40
    38f4:	ldr	r0, [r3, #124]	; 0x7c
    38f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    38fc:	ldr	r2, [r3, #20]
    3900:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3904:	ldr	r1, [r3, #16]
    3908:	ldr	r3, [fp, #-56]	; 0xffffffc8
    390c:	ldr	r3, [r3, #24]
    3910:	str	r3, [sp]
    3914:	mov	r3, r1
    3918:	ldr	r1, [fp, #-64]	; 0xffffffc0
    391c:	blx	r4
    3920:	mov	r3, r0
    3924:	cmp	r3, #0
    3928:	bne	3934 <doContent+0x5ec>
    392c:	mov	r3, #21
    3930:	b	471c <doContent+0x13d4>
    3934:	ldr	r3, [fp, #-192]	; 0xffffff40
    3938:	ldr	r2, [r3, #448]	; 0x1c0
    393c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3940:	str	r2, [r3, #444]	; 0x1bc
    3944:	b	469c <doContent+0x1354>
    3948:	ldr	r3, [fp, #-192]	; 0xffffff40
    394c:	ldr	r3, [r3, #88]	; 0x58
    3950:	cmp	r3, #0
    3954:	beq	469c <doContent+0x1354>
    3958:	ldr	r2, [fp, #-204]	; 0xffffff34
    395c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3960:	ldr	r1, [fp, #-200]	; 0xffffff38
    3964:	ldr	r0, [fp, #-192]	; 0xffffff40
    3968:	bl	bb70 <reportDefault>
    396c:	nop	{0}
    3970:	b	469c <doContent+0x1354>
    3974:	ldr	r3, [fp, #-192]	; 0xffffff40
    3978:	ldr	r3, [r3, #376]	; 0x178
    397c:	cmp	r3, #0
    3980:	beq	39a8 <doContent+0x660>
    3984:	ldr	r3, [fp, #-192]	; 0xffffff40
    3988:	ldr	r3, [r3, #376]	; 0x178
    398c:	str	r3, [fp, #-24]	; 0xffffffe8
    3990:	ldr	r3, [fp, #-192]	; 0xffffff40
    3994:	ldr	r3, [r3, #376]	; 0x178
    3998:	ldr	r2, [r3]
    399c:	ldr	r3, [fp, #-192]	; 0xffffff40
    39a0:	str	r2, [r3, #376]	; 0x178
    39a4:	b	3a28 <doContent+0x6e0>
    39a8:	ldr	r3, [fp, #-192]	; 0xffffff40
    39ac:	ldr	r3, [r3, #12]
    39b0:	mov	r0, #48	; 0x30
    39b4:	blx	r3
    39b8:	str	r0, [fp, #-24]	; 0xffffffe8
    39bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39c0:	cmp	r3, #0
    39c4:	bne	39d0 <doContent+0x688>
    39c8:	mov	r3, #1
    39cc:	b	471c <doContent+0x13d4>
    39d0:	ldr	r3, [fp, #-192]	; 0xffffff40
    39d4:	ldr	r3, [r3, #12]
    39d8:	mov	r0, #32
    39dc:	blx	r3
    39e0:	mov	r2, r0
    39e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39e8:	str	r2, [r3, #36]	; 0x24
    39ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39f0:	ldr	r3, [r3, #36]	; 0x24
    39f4:	cmp	r3, #0
    39f8:	bne	3a14 <doContent+0x6cc>
    39fc:	ldr	r3, [fp, #-192]	; 0xffffff40
    3a00:	ldr	r3, [r3, #20]
    3a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3a08:	blx	r3
    3a0c:	mov	r3, #1
    3a10:	b	471c <doContent+0x13d4>
    3a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a18:	ldr	r3, [r3, #36]	; 0x24
    3a1c:	add	r2, r3, #32
    3a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a24:	str	r2, [r3, #40]	; 0x28
    3a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a2c:	mov	r2, #0
    3a30:	str	r2, [r3, #44]	; 0x2c
    3a34:	ldr	r3, [fp, #-192]	; 0xffffff40
    3a38:	ldr	r2, [r3, #372]	; 0x174
    3a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a40:	str	r2, [r3]
    3a44:	ldr	r3, [fp, #-192]	; 0xffffff40
    3a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a4c:	str	r2, [r3, #372]	; 0x174
    3a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a54:	mov	r2, #0
    3a58:	str	r2, [r3, #16]
    3a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a60:	mov	r2, #0
    3a64:	str	r2, [r3, #20]
    3a68:	ldr	r3, [fp, #-204]	; 0xffffff34
    3a6c:	ldr	r2, [fp, #-200]	; 0xffffff38
    3a70:	ldr	r2, [r2, #68]	; 0x44
    3a74:	add	r2, r3, r2
    3a78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a7c:	str	r2, [r3, #4]
    3a80:	ldr	r3, [fp, #-200]	; 0xffffff38
    3a84:	ldr	r3, [r3, #32]
    3a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a8c:	ldr	r2, [r2, #4]
    3a90:	mov	r1, r2
    3a94:	ldr	r0, [fp, #-200]	; 0xffffff38
    3a98:	blx	r3
    3a9c:	mov	r2, r0
    3aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3aa4:	str	r2, [r3, #8]
    3aa8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3aac:	ldr	r3, [r3, #320]	; 0x140
    3ab0:	add	r2, r3, #1
    3ab4:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ab8:	str	r2, [r3, #320]	; 0x140
    3abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3ac0:	ldr	r3, [r3, #4]
    3ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ac8:	ldr	r2, [r2, #8]
    3acc:	add	r3, r3, r2
    3ad0:	str	r3, [fp, #-68]	; 0xffffffbc
    3ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3ad8:	ldr	r3, [r3, #4]
    3adc:	str	r3, [fp, #-140]	; 0xffffff74
    3ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3ae4:	ldr	r3, [r3, #36]	; 0x24
    3ae8:	str	r3, [fp, #-136]	; 0xffffff78
    3aec:	ldr	r3, [fp, #-200]	; 0xffffff38
    3af0:	ldr	r4, [r3, #60]	; 0x3c
    3af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3af8:	ldr	r3, [r3, #40]	; 0x28
    3afc:	sub	r3, r3, #1
    3b00:	sub	r2, fp, #136	; 0x88
    3b04:	sub	r1, fp, #140	; 0x8c
    3b08:	str	r3, [sp]
    3b0c:	mov	r3, r2
    3b10:	ldr	r2, [fp, #-68]	; 0xffffffbc
    3b14:	ldr	r0, [fp, #-200]	; 0xffffff38
    3b18:	blx	r4
    3b1c:	ldr	r2, [fp, #-136]	; 0xffffff78
    3b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b24:	ldr	r3, [r3, #36]	; 0x24
    3b28:	sub	r3, r2, r3
    3b2c:	str	r3, [fp, #-72]	; 0xffffffb8
    3b30:	ldr	r3, [fp, #-140]	; 0xffffff74
    3b34:	ldr	r2, [fp, #-68]	; 0xffffffbc
    3b38:	cmp	r2, r3
    3b3c:	bne	3ba8 <doContent+0x860>
    3b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b44:	ldr	r2, [fp, #-72]	; 0xffffffb8
    3b48:	str	r2, [r3, #24]
    3b4c:	nop	{0}
    3b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b54:	ldr	r2, [r3, #36]	; 0x24
    3b58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b5c:	str	r2, [r3, #12]
    3b60:	ldr	r3, [fp, #-136]	; 0xffffff78
    3b64:	mov	r2, #0
    3b68:	strb	r2, [r3]
    3b6c:	ldr	r2, [fp, #-204]	; 0xffffff34
    3b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b74:	add	r1, r3, #12
    3b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b7c:	add	r3, r3, #44	; 0x2c
    3b80:	str	r3, [sp]
    3b84:	mov	r3, r1
    3b88:	ldr	r1, [fp, #-200]	; 0xffffff38
    3b8c:	ldr	r0, [fp, #-192]	; 0xffffff40
    3b90:	bl	4734 <storeAtts>
    3b94:	str	r0, [fp, #-76]	; 0xffffffb4
    3b98:	ldr	r3, [fp, #-76]	; 0xffffffb4
    3b9c:	cmp	r3, #0
    3ba0:	beq	3c34 <doContent+0x8ec>
    3ba4:	b	3c2c <doContent+0x8e4>
    3ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3bac:	ldr	r2, [r3, #40]	; 0x28
    3bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3bb4:	ldr	r3, [r3, #36]	; 0x24
    3bb8:	sub	r3, r2, r3
    3bbc:	lsl	r3, r3, #1
    3bc0:	str	r3, [fp, #-80]	; 0xffffffb0
    3bc4:	ldr	r3, [fp, #-192]	; 0xffffff40
    3bc8:	ldr	r3, [r3, #16]
    3bcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3bd0:	ldr	r2, [r2, #36]	; 0x24
    3bd4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    3bd8:	mov	r0, r2
    3bdc:	blx	r3
    3be0:	str	r0, [fp, #-84]	; 0xffffffac
    3be4:	ldr	r3, [fp, #-84]	; 0xffffffac
    3be8:	cmp	r3, #0
    3bec:	bne	3bf8 <doContent+0x8b0>
    3bf0:	mov	r3, #1
    3bf4:	b	471c <doContent+0x13d4>
    3bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3bfc:	ldr	r2, [fp, #-84]	; 0xffffffac
    3c00:	str	r2, [r3, #36]	; 0x24
    3c04:	ldr	r3, [fp, #-80]	; 0xffffffb0
    3c08:	ldr	r2, [fp, #-84]	; 0xffffffac
    3c0c:	add	r2, r2, r3
    3c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3c14:	str	r2, [r3, #40]	; 0x28
    3c18:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3c1c:	ldr	r2, [fp, #-84]	; 0xffffffac
    3c20:	add	r3, r2, r3
    3c24:	str	r3, [fp, #-136]	; 0xffffff78
    3c28:	b	3aec <doContent+0x7a4>
    3c2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    3c30:	b	471c <doContent+0x13d4>
    3c34:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c38:	ldr	r3, [r3, #60]	; 0x3c
    3c3c:	cmp	r3, #0
    3c40:	beq	3c6c <doContent+0x924>
    3c44:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c48:	ldr	r3, [r3, #60]	; 0x3c
    3c4c:	ldr	r2, [fp, #-192]	; 0xffffff40
    3c50:	ldr	r0, [r2, #4]
    3c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c58:	ldr	r1, [r2, #12]
    3c5c:	ldr	r2, [fp, #-192]	; 0xffffff40
    3c60:	ldr	r2, [r2, #400]	; 0x190
    3c64:	blx	r3
    3c68:	b	3c90 <doContent+0x948>
    3c6c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c70:	ldr	r3, [r3, #88]	; 0x58
    3c74:	cmp	r3, #0
    3c78:	beq	3c90 <doContent+0x948>
    3c7c:	ldr	r2, [fp, #-204]	; 0xffffff34
    3c80:	ldr	r3, [fp, #-128]	; 0xffffff80
    3c84:	ldr	r1, [fp, #-200]	; 0xffffff38
    3c88:	ldr	r0, [fp, #-192]	; 0xffffff40
    3c8c:	bl	bb70 <reportDefault>
    3c90:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c94:	add	r3, r3, #432	; 0x1b0
    3c98:	mov	r0, r3
    3c9c:	bl	e8f8 <poolClear>
    3ca0:	b	46d8 <doContent+0x1390>
    3ca4:	ldr	r3, [fp, #-204]	; 0xffffff34
    3ca8:	ldr	r2, [fp, #-200]	; 0xffffff38
    3cac:	ldr	r2, [r2, #68]	; 0x44
    3cb0:	add	r3, r3, r2
    3cb4:	str	r3, [fp, #-88]	; 0xffffffa8
    3cb8:	mov	r3, #0
    3cbc:	str	r3, [fp, #-144]	; 0xffffff70
    3cc0:	mov	r3, #1
    3cc4:	strb	r3, [fp, #-25]	; 0xffffffe7
    3cc8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ccc:	add	r4, r3, #432	; 0x1b0
    3cd0:	ldr	r3, [fp, #-200]	; 0xffffff38
    3cd4:	ldr	r3, [r3, #32]
    3cd8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    3cdc:	ldr	r0, [fp, #-200]	; 0xffffff38
    3ce0:	blx	r3
    3ce4:	mov	r3, r0
    3ce8:	mov	r2, r3
    3cec:	ldr	r3, [fp, #-88]	; 0xffffffa8
    3cf0:	add	r3, r3, r2
    3cf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    3cf8:	ldr	r1, [fp, #-200]	; 0xffffff38
    3cfc:	mov	r0, r4
    3d00:	bl	edc8 <poolStoreString>
    3d04:	mov	r3, r0
    3d08:	str	r3, [fp, #-168]	; 0xffffff58
    3d0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    3d10:	cmp	r3, #0
    3d14:	bne	3d20 <doContent+0x9d8>
    3d18:	mov	r3, #1
    3d1c:	b	471c <doContent+0x13d4>
    3d20:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d24:	ldr	r2, [r3, #444]	; 0x1bc
    3d28:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d2c:	str	r2, [r3, #448]	; 0x1c0
    3d30:	ldr	r2, [fp, #-204]	; 0xffffff34
    3d34:	sub	r1, fp, #168	; 0xa8
    3d38:	sub	r3, fp, #144	; 0x90
    3d3c:	str	r3, [sp]
    3d40:	mov	r3, r1
    3d44:	ldr	r1, [fp, #-200]	; 0xffffff38
    3d48:	ldr	r0, [fp, #-192]	; 0xffffff40
    3d4c:	bl	4734 <storeAtts>
    3d50:	str	r0, [fp, #-92]	; 0xffffffa4
    3d54:	ldr	r3, [fp, #-92]	; 0xffffffa4
    3d58:	cmp	r3, #0
    3d5c:	beq	3d68 <doContent+0xa20>
    3d60:	ldr	r3, [fp, #-92]	; 0xffffffa4
    3d64:	b	471c <doContent+0x13d4>
    3d68:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d6c:	ldr	r2, [r3, #444]	; 0x1bc
    3d70:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d74:	str	r2, [r3, #448]	; 0x1c0
    3d78:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d7c:	ldr	r3, [r3, #60]	; 0x3c
    3d80:	cmp	r3, #0
    3d84:	beq	3db0 <doContent+0xa68>
    3d88:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d8c:	ldr	r3, [r3, #60]	; 0x3c
    3d90:	ldr	r2, [fp, #-192]	; 0xffffff40
    3d94:	ldr	r0, [r2, #4]
    3d98:	ldr	r1, [fp, #-168]	; 0xffffff58
    3d9c:	ldr	r2, [fp, #-192]	; 0xffffff40
    3da0:	ldr	r2, [r2, #400]	; 0x190
    3da4:	blx	r3
    3da8:	mov	r3, #0
    3dac:	strb	r3, [fp, #-25]	; 0xffffffe7
    3db0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3db4:	ldr	r3, [r3, #64]	; 0x40
    3db8:	cmp	r3, #0
    3dbc:	beq	3e04 <doContent+0xabc>
    3dc0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3dc4:	ldr	r3, [r3, #60]	; 0x3c
    3dc8:	cmp	r3, #0
    3dcc:	beq	3de0 <doContent+0xa98>
    3dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
    3dd4:	ldr	r2, [r3]
    3dd8:	ldr	r3, [fp, #-16]
    3ddc:	str	r2, [r3]
    3de0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3de4:	ldr	r3, [r3, #64]	; 0x40
    3de8:	ldr	r2, [fp, #-192]	; 0xffffff40
    3dec:	ldr	r2, [r2, #4]
    3df0:	ldr	r1, [fp, #-168]	; 0xffffff58
    3df4:	mov	r0, r2
    3df8:	blx	r3
    3dfc:	mov	r3, #0
    3e00:	strb	r3, [fp, #-25]	; 0xffffffe7
    3e04:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    3e08:	cmp	r3, #0
    3e0c:	beq	3e34 <doContent+0xaec>
    3e10:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e14:	ldr	r3, [r3, #88]	; 0x58
    3e18:	cmp	r3, #0
    3e1c:	beq	3e34 <doContent+0xaec>
    3e20:	ldr	r2, [fp, #-204]	; 0xffffff34
    3e24:	ldr	r3, [fp, #-128]	; 0xffffff80
    3e28:	ldr	r1, [fp, #-200]	; 0xffffff38
    3e2c:	ldr	r0, [fp, #-192]	; 0xffffff40
    3e30:	bl	bb70 <reportDefault>
    3e34:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e38:	add	r3, r3, #432	; 0x1b0
    3e3c:	mov	r0, r3
    3e40:	bl	e8f8 <poolClear>
    3e44:	b	3ec0 <doContent+0xb78>
    3e48:	ldr	r3, [fp, #-144]	; 0xffffff70
    3e4c:	str	r3, [fp, #-96]	; 0xffffffa0
    3e50:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e54:	ldr	r3, [r3, #112]	; 0x70
    3e58:	cmp	r3, #0
    3e5c:	beq	3e84 <doContent+0xb3c>
    3e60:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e64:	ldr	r3, [r3, #112]	; 0x70
    3e68:	ldr	r2, [fp, #-192]	; 0xffffff40
    3e6c:	ldr	r0, [r2, #4]
    3e70:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3e74:	ldr	r2, [r2]
    3e78:	ldr	r2, [r2]
    3e7c:	mov	r1, r2
    3e80:	blx	r3
    3e84:	ldr	r3, [fp, #-144]	; 0xffffff70
    3e88:	ldr	r3, [r3, #4]
    3e8c:	str	r3, [fp, #-144]	; 0xffffff70
    3e90:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e94:	ldr	r2, [r3, #384]	; 0x180
    3e98:	ldr	r3, [fp, #-96]	; 0xffffffa0
    3e9c:	str	r2, [r3, #4]
    3ea0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ea4:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3ea8:	str	r2, [r3, #384]	; 0x180
    3eac:	ldr	r3, [fp, #-96]	; 0xffffffa0
    3eb0:	ldr	r3, [r3]
    3eb4:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3eb8:	ldr	r2, [r2, #8]
    3ebc:	str	r2, [r3, #4]
    3ec0:	ldr	r3, [fp, #-144]	; 0xffffff70
    3ec4:	cmp	r3, #0
    3ec8:	bne	3e48 <doContent+0xb00>
    3ecc:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ed0:	ldr	r3, [r3, #320]	; 0x140
    3ed4:	cmp	r3, #0
    3ed8:	bne	46a4 <doContent+0x135c>
    3edc:	ldr	r1, [fp, #-128]	; 0xffffff80
    3ee0:	ldr	r3, [fp, #8]
    3ee4:	ldr	r2, [fp, #4]
    3ee8:	ldr	r0, [fp, #-192]	; 0xffffff40
    3eec:	bl	a0bc <epilogProcessor>
    3ef0:	mov	r3, r0
    3ef4:	b	471c <doContent+0x13d4>
    3ef8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3efc:	ldr	r3, [r3, #320]	; 0x140
    3f00:	ldr	r2, [fp, #-196]	; 0xffffff3c
    3f04:	cmp	r2, r3
    3f08:	bne	3f14 <doContent+0xbcc>
    3f0c:	mov	r3, #13
    3f10:	b	471c <doContent+0x13d4>
    3f14:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f18:	ldr	r3, [r3, #372]	; 0x174
    3f1c:	str	r3, [fp, #-100]	; 0xffffff9c
    3f20:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3f24:	ldr	r2, [r3]
    3f28:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f2c:	str	r2, [r3, #372]	; 0x174
    3f30:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f34:	ldr	r2, [r3, #376]	; 0x178
    3f38:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3f3c:	str	r2, [r3]
    3f40:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f44:	ldr	r2, [fp, #-100]	; 0xffffff9c
    3f48:	str	r2, [r3, #376]	; 0x178
    3f4c:	ldr	r3, [fp, #-204]	; 0xffffff34
    3f50:	ldr	r2, [fp, #-200]	; 0xffffff38
    3f54:	ldr	r2, [r2, #68]	; 0x44
    3f58:	lsl	r2, r2, #1
    3f5c:	add	r3, r3, r2
    3f60:	str	r3, [fp, #-104]	; 0xffffff98
    3f64:	ldr	r3, [fp, #-200]	; 0xffffff38
    3f68:	ldr	r3, [r3, #32]
    3f6c:	ldr	r1, [fp, #-104]	; 0xffffff98
    3f70:	ldr	r0, [fp, #-200]	; 0xffffff38
    3f74:	blx	r3
    3f78:	str	r0, [fp, #-108]	; 0xffffff94
    3f7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3f80:	ldr	r3, [r3, #8]
    3f84:	ldr	r2, [fp, #-108]	; 0xffffff94
    3f88:	cmp	r2, r3
    3f8c:	bne	3fb4 <doContent+0xc6c>
    3f90:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3f94:	ldr	r3, [r3, #4]
    3f98:	ldr	r2, [fp, #-108]	; 0xffffff94
    3f9c:	ldr	r1, [fp, #-104]	; 0xffffff98
    3fa0:	mov	r0, r3
    3fa4:	bl	0 <memcmp>
    3fa8:	mov	r3, r0
    3fac:	cmp	r3, #0
    3fb0:	beq	3fc8 <doContent+0xc80>
    3fb4:	ldr	r3, [fp, #-16]
    3fb8:	ldr	r2, [fp, #-104]	; 0xffffff98
    3fbc:	str	r2, [r3]
    3fc0:	mov	r3, #7
    3fc4:	b	471c <doContent+0x13d4>
    3fc8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3fcc:	ldr	r3, [r3, #320]	; 0x140
    3fd0:	sub	r2, r3, #1
    3fd4:	ldr	r3, [fp, #-192]	; 0xffffff40
    3fd8:	str	r2, [r3, #320]	; 0x140
    3fdc:	ldr	r3, [fp, #-192]	; 0xffffff40
    3fe0:	ldr	r3, [r3, #64]	; 0x40
    3fe4:	cmp	r3, #0
    3fe8:	beq	4104 <doContent+0xdbc>
    3fec:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3ff0:	ldr	r3, [r3, #16]
    3ff4:	str	r3, [fp, #-32]	; 0xffffffe0
    3ff8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ffc:	ldrb	r3, [r3, #244]	; 0xf4
    4000:	cmp	r3, #0
    4004:	beq	40e0 <doContent+0xd98>
    4008:	ldr	r3, [fp, #-32]	; 0xffffffe0
    400c:	cmp	r3, #0
    4010:	beq	40e0 <doContent+0xd98>
    4014:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4018:	ldr	r3, [r3, #12]
    401c:	ldr	r2, [fp, #-100]	; 0xffffff9c
    4020:	ldr	r2, [r2, #28]
    4024:	add	r3, r3, r2
    4028:	str	r3, [fp, #-40]	; 0xffffffd8
    402c:	b	4050 <doContent+0xd08>
    4030:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4034:	add	r3, r2, #1
    4038:	str	r3, [fp, #-32]	; 0xffffffe0
    403c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    4040:	add	r1, r3, #1
    4044:	str	r1, [fp, #-40]	; 0xffffffd8
    4048:	ldrb	r2, [r2]
    404c:	strb	r2, [r3]
    4050:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4054:	ldrb	r3, [r3]
    4058:	cmp	r3, #0
    405c:	bne	4030 <doContent+0xce8>
    4060:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4064:	ldr	r3, [r3, #20]
    4068:	str	r3, [fp, #-36]	; 0xffffffdc
    406c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4070:	ldrb	r3, [r3, #245]	; 0xf5
    4074:	cmp	r3, #0
    4078:	beq	40d4 <doContent+0xd8c>
    407c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    4080:	cmp	r3, #0
    4084:	beq	40d4 <doContent+0xd8c>
    4088:	ldr	r3, [fp, #-40]	; 0xffffffd8
    408c:	add	r2, r3, #1
    4090:	str	r2, [fp, #-40]	; 0xffffffd8
    4094:	ldr	r2, [fp, #-192]	; 0xffffff40
    4098:	ldrb	r2, [r2, #488]	; 0x1e8
    409c:	strb	r2, [r3]
    40a0:	b	40c4 <doContent+0xd7c>
    40a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    40a8:	add	r3, r2, #1
    40ac:	str	r3, [fp, #-36]	; 0xffffffdc
    40b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    40b4:	add	r1, r3, #1
    40b8:	str	r1, [fp, #-40]	; 0xffffffd8
    40bc:	ldrb	r2, [r2]
    40c0:	strb	r2, [r3]
    40c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    40c8:	ldrb	r3, [r3]
    40cc:	cmp	r3, #0
    40d0:	bne	40a4 <doContent+0xd5c>
    40d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    40d8:	mov	r2, #0
    40dc:	strb	r2, [r3]
    40e0:	ldr	r3, [fp, #-192]	; 0xffffff40
    40e4:	ldr	r3, [r3, #64]	; 0x40
    40e8:	ldr	r2, [fp, #-192]	; 0xffffff40
    40ec:	ldr	r0, [r2, #4]
    40f0:	ldr	r2, [fp, #-100]	; 0xffffff9c
    40f4:	ldr	r2, [r2, #12]
    40f8:	mov	r1, r2
    40fc:	blx	r3
    4100:	b	41b0 <doContent+0xe68>
    4104:	ldr	r3, [fp, #-192]	; 0xffffff40
    4108:	ldr	r3, [r3, #88]	; 0x58
    410c:	cmp	r3, #0
    4110:	beq	41b0 <doContent+0xe68>
    4114:	ldr	r2, [fp, #-204]	; 0xffffff34
    4118:	ldr	r3, [fp, #-128]	; 0xffffff80
    411c:	ldr	r1, [fp, #-200]	; 0xffffff38
    4120:	ldr	r0, [fp, #-192]	; 0xffffff40
    4124:	bl	bb70 <reportDefault>
    4128:	b	41b0 <doContent+0xe68>
    412c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4130:	ldr	r3, [r3, #44]	; 0x2c
    4134:	str	r3, [fp, #-112]	; 0xffffff90
    4138:	ldr	r3, [fp, #-192]	; 0xffffff40
    413c:	ldr	r3, [r3, #112]	; 0x70
    4140:	cmp	r3, #0
    4144:	beq	416c <doContent+0xe24>
    4148:	ldr	r3, [fp, #-192]	; 0xffffff40
    414c:	ldr	r3, [r3, #112]	; 0x70
    4150:	ldr	r2, [fp, #-192]	; 0xffffff40
    4154:	ldr	r0, [r2, #4]
    4158:	ldr	r2, [fp, #-112]	; 0xffffff90
    415c:	ldr	r2, [r2]
    4160:	ldr	r2, [r2]
    4164:	mov	r1, r2
    4168:	blx	r3
    416c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4170:	ldr	r3, [r3, #44]	; 0x2c
    4174:	ldr	r2, [r3, #4]
    4178:	ldr	r3, [fp, #-100]	; 0xffffff9c
    417c:	str	r2, [r3, #44]	; 0x2c
    4180:	ldr	r3, [fp, #-192]	; 0xffffff40
    4184:	ldr	r2, [r3, #384]	; 0x180
    4188:	ldr	r3, [fp, #-112]	; 0xffffff90
    418c:	str	r2, [r3, #4]
    4190:	ldr	r3, [fp, #-192]	; 0xffffff40
    4194:	ldr	r2, [fp, #-112]	; 0xffffff90
    4198:	str	r2, [r3, #384]	; 0x180
    419c:	ldr	r3, [fp, #-112]	; 0xffffff90
    41a0:	ldr	r3, [r3]
    41a4:	ldr	r2, [fp, #-112]	; 0xffffff90
    41a8:	ldr	r2, [r2, #8]
    41ac:	str	r2, [r3, #4]
    41b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    41b4:	ldr	r3, [r3, #44]	; 0x2c
    41b8:	cmp	r3, #0
    41bc:	bne	412c <doContent+0xde4>
    41c0:	ldr	r3, [fp, #-192]	; 0xffffff40
    41c4:	ldr	r3, [r3, #320]	; 0x140
    41c8:	cmp	r3, #0
    41cc:	bne	41ec <doContent+0xea4>
    41d0:	ldr	r1, [fp, #-128]	; 0xffffff80
    41d4:	ldr	r3, [fp, #8]
    41d8:	ldr	r2, [fp, #4]
    41dc:	ldr	r0, [fp, #-192]	; 0xffffff40
    41e0:	bl	a0bc <epilogProcessor>
    41e4:	mov	r3, r0
    41e8:	b	471c <doContent+0x13d4>
    41ec:	nop	{0}
    41f0:	b	46d8 <doContent+0x1390>
    41f4:	ldr	r3, [fp, #-200]	; 0xffffff38
    41f8:	ldr	r3, [r3, #44]	; 0x2c
    41fc:	ldr	r2, [fp, #-204]	; 0xffffff34
    4200:	mov	r1, r2
    4204:	ldr	r0, [fp, #-200]	; 0xffffff38
    4208:	blx	r3
    420c:	str	r0, [fp, #-116]	; 0xffffff8c
    4210:	ldr	r3, [fp, #-116]	; 0xffffff8c
    4214:	cmp	r3, #0
    4218:	bge	4224 <doContent+0xedc>
    421c:	mov	r3, #14
    4220:	b	471c <doContent+0x13d4>
    4224:	ldr	r3, [fp, #-192]	; 0xffffff40
    4228:	ldr	r3, [r3, #68]	; 0x44
    422c:	cmp	r3, #0
    4230:	beq	426c <doContent+0xf24>
    4234:	ldr	r3, [fp, #-192]	; 0xffffff40
    4238:	ldr	r4, [r3, #68]	; 0x44
    423c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4240:	ldr	r5, [r3, #4]
    4244:	sub	r3, fp, #172	; 0xac
    4248:	mov	r1, r3
    424c:	ldr	r0, [fp, #-116]	; 0xffffff8c
    4250:	bl	0 <coda_XmlUtf8Encode>
    4254:	mov	r2, r0
    4258:	sub	r3, fp, #172	; 0xac
    425c:	mov	r1, r3
    4260:	mov	r0, r5
    4264:	blx	r4
    4268:	b	46ac <doContent+0x1364>
    426c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4270:	ldr	r3, [r3, #88]	; 0x58
    4274:	cmp	r3, #0
    4278:	beq	46ac <doContent+0x1364>
    427c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4280:	ldr	r3, [fp, #-128]	; 0xffffff80
    4284:	ldr	r1, [fp, #-200]	; 0xffffff38
    4288:	ldr	r0, [fp, #-192]	; 0xffffff40
    428c:	bl	bb70 <reportDefault>
    4290:	b	46ac <doContent+0x1364>
    4294:	mov	r3, #17
    4298:	b	471c <doContent+0x13d4>
    429c:	ldr	r3, [fp, #-192]	; 0xffffff40
    42a0:	ldr	r3, [r3, #68]	; 0x44
    42a4:	cmp	r3, #0
    42a8:	beq	42d4 <doContent+0xf8c>
    42ac:	mov	r3, #10
    42b0:	strb	r3, [fp, #-173]	; 0xffffff53
    42b4:	ldr	r3, [fp, #-192]	; 0xffffff40
    42b8:	ldr	r3, [r3, #68]	; 0x44
    42bc:	ldr	r2, [fp, #-192]	; 0xffffff40
    42c0:	ldr	r0, [r2, #4]
    42c4:	sub	r1, fp, #173	; 0xad
    42c8:	mov	r2, #1
    42cc:	blx	r3
    42d0:	b	46b4 <doContent+0x136c>
    42d4:	ldr	r3, [fp, #-192]	; 0xffffff40
    42d8:	ldr	r3, [r3, #88]	; 0x58
    42dc:	cmp	r3, #0
    42e0:	beq	46b4 <doContent+0x136c>
    42e4:	ldr	r2, [fp, #-204]	; 0xffffff34
    42e8:	ldr	r3, [fp, #-128]	; 0xffffff80
    42ec:	ldr	r1, [fp, #-200]	; 0xffffff38
    42f0:	ldr	r0, [fp, #-192]	; 0xffffff40
    42f4:	bl	bb70 <reportDefault>
    42f8:	b	46b4 <doContent+0x136c>
    42fc:	ldr	r3, [fp, #-192]	; 0xffffff40
    4300:	ldr	r3, [r3, #80]	; 0x50
    4304:	cmp	r3, #0
    4308:	beq	4328 <doContent+0xfe0>
    430c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4310:	ldr	r3, [r3, #80]	; 0x50
    4314:	ldr	r2, [fp, #-192]	; 0xffffff40
    4318:	ldr	r2, [r2, #4]
    431c:	mov	r0, r2
    4320:	blx	r3
    4324:	b	434c <doContent+0x1004>
    4328:	ldr	r3, [fp, #-192]	; 0xffffff40
    432c:	ldr	r3, [r3, #88]	; 0x58
    4330:	cmp	r3, #0
    4334:	beq	434c <doContent+0x1004>
    4338:	ldr	r2, [fp, #-204]	; 0xffffff34
    433c:	ldr	r3, [fp, #-128]	; 0xffffff80
    4340:	ldr	r1, [fp, #-200]	; 0xffffff38
    4344:	ldr	r0, [fp, #-192]	; 0xffffff40
    4348:	bl	bb70 <reportDefault>
    434c:	sub	r2, fp, #128	; 0x80
    4350:	ldrb	r3, [fp, #12]
    4354:	str	r3, [sp, #4]
    4358:	ldr	r3, [fp, #8]
    435c:	str	r3, [sp]
    4360:	ldr	r3, [fp, #4]
    4364:	ldr	r1, [fp, #-200]	; 0xffffff38
    4368:	ldr	r0, [fp, #-192]	; 0xffffff40
    436c:	bl	607c <doCdataSection>
    4370:	str	r0, [fp, #-120]	; 0xffffff88
    4374:	ldr	r3, [fp, #-120]	; 0xffffff88
    4378:	cmp	r3, #0
    437c:	beq	4388 <doContent+0x1040>
    4380:	ldr	r3, [fp, #-120]	; 0xffffff88
    4384:	b	471c <doContent+0x13d4>
    4388:	ldr	r3, [fp, #-128]	; 0xffffff80
    438c:	cmp	r3, #0
    4390:	bne	43ac <doContent+0x1064>
    4394:	ldr	r2, [fp, #-192]	; 0xffffff40
    4398:	movw	r3, #0
    439c:	movt	r3, #0
    43a0:	str	r3, [r2, #288]	; 0x120
    43a4:	ldr	r3, [fp, #-120]	; 0xffffff88
    43a8:	b	471c <doContent+0x13d4>
    43ac:	nop	{0}
    43b0:	b	46d8 <doContent+0x1390>
    43b4:	ldrb	r3, [fp, #12]
    43b8:	cmp	r3, #0
    43bc:	beq	43d4 <doContent+0x108c>
    43c0:	ldr	r2, [fp, #-204]	; 0xffffff34
    43c4:	ldr	r3, [fp, #8]
    43c8:	str	r2, [r3]
    43cc:	mov	r3, #0
    43d0:	b	471c <doContent+0x13d4>
    43d4:	ldr	r3, [fp, #-192]	; 0xffffff40
    43d8:	ldr	r3, [r3, #68]	; 0x44
    43dc:	cmp	r3, #0
    43e0:	beq	448c <doContent+0x1144>
    43e4:	ldr	r3, [fp, #-200]	; 0xffffff38
    43e8:	ldrb	r3, [r3, #72]	; 0x48
    43ec:	cmp	r3, #0
    43f0:	bne	4460 <doContent+0x1118>
    43f4:	ldr	r3, [fp, #-192]	; 0xffffff40
    43f8:	ldr	r3, [r3, #52]	; 0x34
    43fc:	str	r3, [fp, #-180]	; 0xffffff4c
    4400:	ldr	r3, [fp, #-200]	; 0xffffff38
    4404:	ldr	r4, [r3, #60]	; 0x3c
    4408:	ldr	r3, [fp, #-192]	; 0xffffff40
    440c:	ldr	r3, [r3, #56]	; 0x38
    4410:	sub	r2, fp, #180	; 0xb4
    4414:	sub	r1, fp, #204	; 0xcc
    4418:	str	r3, [sp]
    441c:	mov	r3, r2
    4420:	ldr	r2, [fp, #4]
    4424:	ldr	r0, [fp, #-200]	; 0xffffff38
    4428:	blx	r4
    442c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4430:	ldr	r3, [r3, #68]	; 0x44
    4434:	ldr	r2, [fp, #-192]	; 0xffffff40
    4438:	ldr	r0, [r2, #4]
    443c:	ldr	r2, [fp, #-192]	; 0xffffff40
    4440:	ldr	ip, [r2, #52]	; 0x34
    4444:	ldr	r1, [fp, #-180]	; 0xffffff4c
    4448:	ldr	r2, [fp, #-192]	; 0xffffff40
    444c:	ldr	r2, [r2, #52]	; 0x34
    4450:	sub	r2, r1, r2
    4454:	mov	r1, ip
    4458:	blx	r3
    445c:	b	44b0 <doContent+0x1168>
    4460:	ldr	r3, [fp, #-192]	; 0xffffff40
    4464:	ldr	r3, [r3, #68]	; 0x44
    4468:	ldr	r2, [fp, #-192]	; 0xffffff40
    446c:	ldr	r0, [r2, #4]
    4470:	ldr	ip, [fp, #-204]	; 0xffffff34
    4474:	ldr	r2, [fp, #-204]	; 0xffffff34
    4478:	ldr	r1, [fp, #4]
    447c:	sub	r2, r1, r2
    4480:	mov	r1, ip
    4484:	blx	r3
    4488:	b	44b0 <doContent+0x1168>
    448c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4490:	ldr	r3, [r3, #88]	; 0x58
    4494:	cmp	r3, #0
    4498:	beq	44b0 <doContent+0x1168>
    449c:	ldr	r2, [fp, #-204]	; 0xffffff34
    44a0:	ldr	r3, [fp, #4]
    44a4:	ldr	r1, [fp, #-200]	; 0xffffff38
    44a8:	ldr	r0, [fp, #-192]	; 0xffffff40
    44ac:	bl	bb70 <reportDefault>
    44b0:	ldr	r3, [fp, #-196]	; 0xffffff3c
    44b4:	cmp	r3, #0
    44b8:	bne	44d0 <doContent+0x1188>
    44bc:	ldr	r3, [fp, #-16]
    44c0:	ldr	r2, [fp, #4]
    44c4:	str	r2, [r3]
    44c8:	mov	r3, #3
    44cc:	b	471c <doContent+0x13d4>
    44d0:	ldr	r3, [fp, #-192]	; 0xffffff40
    44d4:	ldr	r3, [r3, #320]	; 0x140
    44d8:	ldr	r2, [fp, #-196]	; 0xffffff3c
    44dc:	cmp	r2, r3
    44e0:	beq	44f8 <doContent+0x11b0>
    44e4:	ldr	r3, [fp, #-16]
    44e8:	ldr	r2, [fp, #4]
    44ec:	str	r2, [r3]
    44f0:	mov	r3, #13
    44f4:	b	471c <doContent+0x13d4>
    44f8:	ldr	r3, [fp, #8]
    44fc:	ldr	r2, [fp, #4]
    4500:	str	r2, [r3]
    4504:	mov	r3, #0
    4508:	b	471c <doContent+0x13d4>
    450c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4510:	ldr	r3, [r3, #68]	; 0x44
    4514:	str	r3, [fp, #-124]	; 0xffffff84
    4518:	ldr	r3, [fp, #-124]	; 0xffffff84
    451c:	cmp	r3, #0
    4520:	beq	45e4 <doContent+0x129c>
    4524:	ldr	r3, [fp, #-200]	; 0xffffff38
    4528:	ldrb	r3, [r3, #72]	; 0x48
    452c:	cmp	r3, #0
    4530:	bne	45c0 <doContent+0x1278>
    4534:	ldr	r3, [fp, #-192]	; 0xffffff40
    4538:	ldr	r3, [r3, #52]	; 0x34
    453c:	str	r3, [fp, #-184]	; 0xffffff48
    4540:	ldr	r3, [fp, #-200]	; 0xffffff38
    4544:	ldr	r4, [r3, #60]	; 0x3c
    4548:	ldr	r2, [fp, #-128]	; 0xffffff80
    454c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4550:	ldr	r3, [r3, #56]	; 0x38
    4554:	sub	r0, fp, #184	; 0xb8
    4558:	sub	r1, fp, #204	; 0xcc
    455c:	str	r3, [sp]
    4560:	mov	r3, r0
    4564:	ldr	r0, [fp, #-200]	; 0xffffff38
    4568:	blx	r4
    456c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4570:	ldr	r3, [fp, #-20]	; 0xffffffec
    4574:	str	r2, [r3]
    4578:	ldr	r3, [fp, #-192]	; 0xffffff40
    457c:	ldr	r0, [r3, #4]
    4580:	ldr	r3, [fp, #-192]	; 0xffffff40
    4584:	ldr	r1, [r3, #52]	; 0x34
    4588:	ldr	r2, [fp, #-184]	; 0xffffff48
    458c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4590:	ldr	r3, [r3, #52]	; 0x34
    4594:	sub	r2, r2, r3
    4598:	ldr	r3, [fp, #-124]	; 0xffffff84
    459c:	blx	r3
    45a0:	ldr	r2, [fp, #-204]	; 0xffffff34
    45a4:	ldr	r3, [fp, #-128]	; 0xffffff80
    45a8:	cmp	r2, r3
    45ac:	beq	46bc <doContent+0x1374>
    45b0:	ldr	r2, [fp, #-204]	; 0xffffff34
    45b4:	ldr	r3, [fp, #-16]
    45b8:	str	r2, [r3]
    45bc:	b	4534 <doContent+0x11ec>
    45c0:	ldr	r3, [fp, #-192]	; 0xffffff40
    45c4:	ldr	r0, [r3, #4]
    45c8:	ldr	r1, [fp, #-204]	; 0xffffff34
    45cc:	ldr	r2, [fp, #-128]	; 0xffffff80
    45d0:	ldr	r3, [fp, #-204]	; 0xffffff34
    45d4:	sub	r2, r2, r3
    45d8:	ldr	r3, [fp, #-124]	; 0xffffff84
    45dc:	blx	r3
    45e0:	b	46bc <doContent+0x1374>
    45e4:	ldr	r3, [fp, #-192]	; 0xffffff40
    45e8:	ldr	r3, [r3, #88]	; 0x58
    45ec:	cmp	r3, #0
    45f0:	beq	46bc <doContent+0x1374>
    45f4:	ldr	r2, [fp, #-204]	; 0xffffff34
    45f8:	ldr	r3, [fp, #-128]	; 0xffffff80
    45fc:	ldr	r1, [fp, #-200]	; 0xffffff38
    4600:	ldr	r0, [fp, #-192]	; 0xffffff40
    4604:	bl	bb70 <reportDefault>
    4608:	b	46bc <doContent+0x1374>
    460c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4610:	ldr	r3, [fp, #-128]	; 0xffffff80
    4614:	ldr	r1, [fp, #-200]	; 0xffffff38
    4618:	ldr	r0, [fp, #-192]	; 0xffffff40
    461c:	bl	b8d0 <reportProcessingInstruction>
    4620:	mov	r3, r0
    4624:	cmp	r3, #0
    4628:	bne	46c4 <doContent+0x137c>
    462c:	mov	r3, #1
    4630:	b	471c <doContent+0x13d4>
    4634:	ldr	r2, [fp, #-204]	; 0xffffff34
    4638:	ldr	r3, [fp, #-128]	; 0xffffff80
    463c:	ldr	r1, [fp, #-200]	; 0xffffff38
    4640:	ldr	r0, [fp, #-192]	; 0xffffff40
    4644:	bl	ba64 <reportComment>
    4648:	mov	r3, r0
    464c:	cmp	r3, #0
    4650:	bne	46cc <doContent+0x1384>
    4654:	mov	r3, #1
    4658:	b	471c <doContent+0x13d4>
    465c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4660:	ldr	r3, [r3, #88]	; 0x58
    4664:	cmp	r3, #0
    4668:	beq	46d4 <doContent+0x138c>
    466c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4670:	ldr	r3, [fp, #-128]	; 0xffffff80
    4674:	ldr	r1, [fp, #-200]	; 0xffffff38
    4678:	ldr	r0, [fp, #-192]	; 0xffffff40
    467c:	bl	bb70 <reportDefault>
    4680:	b	46d4 <doContent+0x138c>
    4684:	nop	{0}
    4688:	b	46d8 <doContent+0x1390>
    468c:	nop	{0}
    4690:	b	46d8 <doContent+0x1390>
    4694:	nop	{0}
    4698:	b	46d8 <doContent+0x1390>
    469c:	nop	{0}
    46a0:	b	46d8 <doContent+0x1390>
    46a4:	nop	{0}
    46a8:	b	46d8 <doContent+0x1390>
    46ac:	nop	{0}
    46b0:	b	46d8 <doContent+0x1390>
    46b4:	nop	{0}
    46b8:	b	46d8 <doContent+0x1390>
    46bc:	nop	{0}
    46c0:	b	46d8 <doContent+0x1390>
    46c4:	nop	{0}
    46c8:	b	46d8 <doContent+0x1390>
    46cc:	nop	{0}
    46d0:	b	46d8 <doContent+0x1390>
    46d4:	nop	{0}
    46d8:	ldr	r3, [fp, #-128]	; 0xffffff80
    46dc:	str	r3, [fp, #-204]	; 0xffffff34
    46e0:	ldr	r2, [fp, #-204]	; 0xffffff34
    46e4:	ldr	r3, [fp, #-16]
    46e8:	str	r2, [r3]
    46ec:	ldr	r3, [fp, #-192]	; 0xffffff40
    46f0:	ldr	r3, [r3, #496]	; 0x1f0
    46f4:	cmp	r3, #2
    46f8:	beq	4718 <doContent+0x13d0>
    46fc:	cmp	r3, #3
    4700:	bne	33d0 <doContent+0x88>
    4704:	ldr	r2, [fp, #-128]	; 0xffffff80
    4708:	ldr	r3, [fp, #8]
    470c:	str	r2, [r3]
    4710:	mov	r3, #0
    4714:	b	471c <doContent+0x13d4>
    4718:	mov	r3, #35	; 0x23
    471c:	mov	r0, r3
    4720:	sub	sp, fp, #12
    4724:	ldrd	r4, [sp]
    4728:	ldr	fp, [sp, #8]
    472c:	add	sp, sp, #12
    4730:	pop	{pc}		; (ldr pc, [sp], #4)

00004734 <storeAtts>:
    4734:	strd	r4, [sp, #-16]!
    4738:	str	fp, [sp, #8]
    473c:	str	lr, [sp, #12]
    4740:	add	fp, sp, #12
    4744:	sub	sp, sp, #176	; 0xb0
    4748:	str	r0, [fp, #-168]	; 0xffffff58
    474c:	str	r1, [fp, #-172]	; 0xffffff54
    4750:	str	r2, [fp, #-176]	; 0xffffff50
    4754:	str	r3, [fp, #-180]	; 0xffffff4c
    4758:	ldr	r3, [fp, #-168]	; 0xffffff58
    475c:	ldr	r3, [r3, #364]	; 0x16c
    4760:	str	r3, [fp, #-88]	; 0xffffffa8
    4764:	mov	r3, #0
    4768:	str	r3, [fp, #-20]	; 0xffffffec
    476c:	mov	r3, #0
    4770:	str	r3, [fp, #-32]	; 0xffffffe0
    4774:	ldr	r3, [fp, #-88]	; 0xffffffa8
    4778:	add	r1, r3, #20
    477c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    4780:	ldr	r2, [r3]
    4784:	mov	r3, #0
    4788:	ldr	r0, [fp, #-168]	; 0xffffff58
    478c:	bl	e00c <lookup>
    4790:	str	r0, [fp, #-16]
    4794:	ldr	r3, [fp, #-16]
    4798:	cmp	r3, #0
    479c:	bne	4834 <storeAtts+0x100>
    47a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    47a4:	add	r2, r3, #80	; 0x50
    47a8:	ldr	r3, [fp, #-180]	; 0xffffff4c
    47ac:	ldr	r3, [r3]
    47b0:	mov	r1, r3
    47b4:	mov	r0, r2
    47b8:	bl	eb38 <poolCopyString>
    47bc:	str	r0, [fp, #-92]	; 0xffffffa4
    47c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    47c4:	cmp	r3, #0
    47c8:	bne	47d4 <storeAtts+0xa0>
    47cc:	mov	r3, #1
    47d0:	b	5a2c <storeAtts+0x12f8>
    47d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    47d8:	add	r1, r3, #20
    47dc:	mov	r3, #24
    47e0:	ldr	r2, [fp, #-92]	; 0xffffffa4
    47e4:	ldr	r0, [fp, #-168]	; 0xffffff58
    47e8:	bl	e00c <lookup>
    47ec:	str	r0, [fp, #-16]
    47f0:	ldr	r3, [fp, #-16]
    47f4:	cmp	r3, #0
    47f8:	bne	4804 <storeAtts+0xd0>
    47fc:	mov	r3, #1
    4800:	b	5a2c <storeAtts+0x12f8>
    4804:	ldr	r3, [fp, #-168]	; 0xffffff58
    4808:	ldrb	r3, [r3, #244]	; 0xf4
    480c:	cmp	r3, #0
    4810:	beq	4834 <storeAtts+0x100>
    4814:	ldr	r1, [fp, #-16]
    4818:	ldr	r0, [fp, #-168]	; 0xffffff58
    481c:	bl	bf34 <setElementTypePrefix>
    4820:	mov	r3, r0
    4824:	cmp	r3, #0
    4828:	bne	4834 <storeAtts+0x100>
    482c:	mov	r3, #1
    4830:	b	5a2c <storeAtts+0x12f8>
    4834:	ldr	r3, [fp, #-16]
    4838:	ldr	r3, [r3, #12]
    483c:	str	r3, [fp, #-96]	; 0xffffffa0
    4840:	ldr	r3, [fp, #-172]	; 0xffffff54
    4844:	ldr	r4, [r3, #40]	; 0x28
    4848:	ldr	r3, [fp, #-168]	; 0xffffff58
    484c:	ldr	r2, [r3, #388]	; 0x184
    4850:	ldr	r3, [fp, #-168]	; 0xffffff58
    4854:	ldr	r3, [r3, #400]	; 0x190
    4858:	ldr	r1, [fp, #-176]	; 0xffffff50
    485c:	ldr	r0, [fp, #-172]	; 0xffffff54
    4860:	blx	r4
    4864:	str	r0, [fp, #-100]	; 0xffffff9c
    4868:	ldr	r2, [fp, #-100]	; 0xffffff9c
    486c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4870:	add	r2, r2, r3
    4874:	ldr	r3, [fp, #-168]	; 0xffffff58
    4878:	ldr	r3, [r3, #388]	; 0x184
    487c:	cmp	r2, r3
    4880:	ble	4920 <storeAtts+0x1ec>
    4884:	ldr	r3, [fp, #-168]	; 0xffffff58
    4888:	ldr	r3, [r3, #388]	; 0x184
    488c:	str	r3, [fp, #-104]	; 0xffffff98
    4890:	ldr	r2, [fp, #-100]	; 0xffffff9c
    4894:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4898:	add	r3, r2, r3
    489c:	add	r2, r3, #16
    48a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    48a4:	str	r2, [r3, #388]	; 0x184
    48a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    48ac:	ldr	r3, [r3, #16]
    48b0:	ldr	r2, [fp, #-168]	; 0xffffff58
    48b4:	ldr	r0, [r2, #400]	; 0x190
    48b8:	ldr	r2, [fp, #-168]	; 0xffffff58
    48bc:	ldr	r2, [r2, #388]	; 0x184
    48c0:	lsl	r2, r2, #4
    48c4:	mov	r1, r2
    48c8:	blx	r3
    48cc:	str	r0, [fp, #-108]	; 0xffffff94
    48d0:	ldr	r3, [fp, #-108]	; 0xffffff94
    48d4:	cmp	r3, #0
    48d8:	bne	48e4 <storeAtts+0x1b0>
    48dc:	mov	r3, #1
    48e0:	b	5a2c <storeAtts+0x12f8>
    48e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    48e8:	ldr	r2, [fp, #-108]	; 0xffffff94
    48ec:	str	r2, [r3, #400]	; 0x190
    48f0:	ldr	r2, [fp, #-100]	; 0xffffff9c
    48f4:	ldr	r3, [fp, #-104]	; 0xffffff98
    48f8:	cmp	r2, r3
    48fc:	ble	4920 <storeAtts+0x1ec>
    4900:	ldr	r3, [fp, #-172]	; 0xffffff54
    4904:	ldr	r4, [r3, #40]	; 0x28
    4908:	ldr	r3, [fp, #-168]	; 0xffffff58
    490c:	ldr	r3, [r3, #400]	; 0x190
    4910:	ldr	r2, [fp, #-100]	; 0xffffff9c
    4914:	ldr	r1, [fp, #-176]	; 0xffffff50
    4918:	ldr	r0, [fp, #-172]	; 0xffffff54
    491c:	blx	r4
    4920:	ldr	r3, [fp, #-168]	; 0xffffff58
    4924:	ldr	r3, [r3, #400]	; 0x190
    4928:	str	r3, [fp, #-112]	; 0xffffff90
    492c:	mov	r3, #0
    4930:	str	r3, [fp, #-28]	; 0xffffffe4
    4934:	b	4cec <storeAtts+0x5b8>
    4938:	ldr	r3, [fp, #-168]	; 0xffffff58
    493c:	ldr	r2, [r3, #400]	; 0x190
    4940:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4944:	lsl	r3, r3, #4
    4948:	add	r3, r2, r3
    494c:	str	r3, [fp, #-116]	; 0xffffff8c
    4950:	ldr	r3, [fp, #-116]	; 0xffffff8c
    4954:	ldr	r5, [r3]
    4958:	ldr	r3, [fp, #-116]	; 0xffffff8c
    495c:	ldr	r4, [r3]
    4960:	ldr	r3, [fp, #-172]	; 0xffffff54
    4964:	ldr	r3, [r3, #32]
    4968:	ldr	r2, [fp, #-116]	; 0xffffff8c
    496c:	ldr	r2, [r2]
    4970:	mov	r1, r2
    4974:	ldr	r0, [fp, #-172]	; 0xffffff54
    4978:	blx	r3
    497c:	mov	r3, r0
    4980:	add	r3, r4, r3
    4984:	mov	r2, r5
    4988:	ldr	r1, [fp, #-172]	; 0xffffff54
    498c:	ldr	r0, [fp, #-168]	; 0xffffff58
    4990:	bl	c130 <getAttributeId>
    4994:	str	r0, [fp, #-120]	; 0xffffff88
    4998:	ldr	r3, [fp, #-120]	; 0xffffff88
    499c:	cmp	r3, #0
    49a0:	bne	49ac <storeAtts+0x278>
    49a4:	mov	r3, #1
    49a8:	b	5a2c <storeAtts+0x12f8>
    49ac:	ldr	r3, [fp, #-120]	; 0xffffff88
    49b0:	ldr	r3, [r3]
    49b4:	sub	r3, r3, #1
    49b8:	ldrb	r3, [r3]
    49bc:	cmp	r3, #0
    49c0:	beq	4a00 <storeAtts+0x2cc>
    49c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    49c8:	ldr	r3, [r3, #152]	; 0x98
    49cc:	ldr	r2, [fp, #-172]	; 0xffffff54
    49d0:	cmp	r2, r3
    49d4:	bne	49f8 <storeAtts+0x2c4>
    49d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    49dc:	ldr	r2, [r3, #400]	; 0x190
    49e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    49e4:	lsl	r3, r3, #4
    49e8:	add	r3, r2, r3
    49ec:	ldr	r2, [r3]
    49f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    49f4:	str	r2, [r3, #296]	; 0x128
    49f8:	mov	r3, #8
    49fc:	b	5a2c <storeAtts+0x12f8>
    4a00:	ldr	r3, [fp, #-120]	; 0xffffff88
    4a04:	ldr	r3, [r3]
    4a08:	sub	r3, r3, #1
    4a0c:	mov	r2, #1
    4a10:	strb	r2, [r3]
    4a14:	ldr	r3, [fp, #-20]	; 0xffffffec
    4a18:	add	r2, r3, #1
    4a1c:	str	r2, [fp, #-20]	; 0xffffffec
    4a20:	lsl	r3, r3, #2
    4a24:	ldr	r2, [fp, #-112]	; 0xffffff90
    4a28:	add	r3, r2, r3
    4a2c:	ldr	r2, [fp, #-120]	; 0xffffff88
    4a30:	ldr	r2, [r2]
    4a34:	str	r2, [r3]
    4a38:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a3c:	ldr	r2, [r3, #400]	; 0x190
    4a40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4a44:	lsl	r3, r3, #4
    4a48:	add	r3, r2, r3
    4a4c:	ldrb	r3, [r3, #12]
    4a50:	cmp	r3, #0
    4a54:	bne	4b94 <storeAtts+0x460>
    4a58:	mov	r3, #1
    4a5c:	strb	r3, [fp, #-41]	; 0xffffffd7
    4a60:	ldr	r3, [fp, #-120]	; 0xffffff88
    4a64:	ldrb	r3, [r3, #8]
    4a68:	cmp	r3, #0
    4a6c:	beq	4af4 <storeAtts+0x3c0>
    4a70:	mov	r3, #0
    4a74:	str	r3, [fp, #-48]	; 0xffffffd0
    4a78:	b	4ae4 <storeAtts+0x3b0>
    4a7c:	ldr	r3, [fp, #-16]
    4a80:	ldr	r1, [r3, #20]
    4a84:	ldr	r2, [fp, #-48]	; 0xffffffd0
    4a88:	mov	r3, r2
    4a8c:	lsl	r3, r3, #1
    4a90:	add	r3, r3, r2
    4a94:	lsl	r3, r3, #2
    4a98:	add	r3, r1, r3
    4a9c:	ldr	r3, [r3]
    4aa0:	ldr	r2, [fp, #-120]	; 0xffffff88
    4aa4:	cmp	r2, r3
    4aa8:	bne	4ad8 <storeAtts+0x3a4>
    4aac:	ldr	r3, [fp, #-16]
    4ab0:	ldr	r1, [r3, #20]
    4ab4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    4ab8:	mov	r3, r2
    4abc:	lsl	r3, r3, #1
    4ac0:	add	r3, r3, r2
    4ac4:	lsl	r3, r3, #2
    4ac8:	add	r3, r1, r3
    4acc:	ldrb	r3, [r3, #4]
    4ad0:	strb	r3, [fp, #-41]	; 0xffffffd7
    4ad4:	b	4af4 <storeAtts+0x3c0>
    4ad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4adc:	add	r3, r3, #1
    4ae0:	str	r3, [fp, #-48]	; 0xffffffd0
    4ae4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    4ae8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4aec:	cmp	r2, r3
    4af0:	blt	4a7c <storeAtts+0x348>
    4af4:	ldr	r3, [fp, #-168]	; 0xffffff58
    4af8:	ldr	r2, [r3, #400]	; 0x190
    4afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4b00:	lsl	r3, r3, #4
    4b04:	add	r3, r2, r3
    4b08:	ldr	r0, [r3, #4]
    4b0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4b10:	ldr	r2, [r3, #400]	; 0x190
    4b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4b18:	lsl	r3, r3, #4
    4b1c:	add	r3, r2, r3
    4b20:	ldr	r3, [r3, #8]
    4b24:	ldr	r2, [fp, #-168]	; 0xffffff58
    4b28:	add	r2, r2, #432	; 0x1b0
    4b2c:	ldrb	r1, [fp, #-41]	; 0xffffffd7
    4b30:	str	r2, [sp, #4]
    4b34:	str	r3, [sp]
    4b38:	mov	r3, r0
    4b3c:	mov	r2, r1
    4b40:	ldr	r1, [fp, #-172]	; 0xffffff54
    4b44:	ldr	r0, [fp, #-168]	; 0xffffff58
    4b48:	bl	a918 <storeAttributeValue>
    4b4c:	str	r0, [fp, #-124]	; 0xffffff84
    4b50:	ldr	r3, [fp, #-124]	; 0xffffff84
    4b54:	cmp	r3, #0
    4b58:	beq	4b64 <storeAtts+0x430>
    4b5c:	ldr	r3, [fp, #-124]	; 0xffffff84
    4b60:	b	5a2c <storeAtts+0x12f8>
    4b64:	ldr	r3, [fp, #-20]	; 0xffffffec
    4b68:	lsl	r3, r3, #2
    4b6c:	ldr	r2, [fp, #-112]	; 0xffffff90
    4b70:	add	r3, r2, r3
    4b74:	ldr	r2, [fp, #-168]	; 0xffffff58
    4b78:	ldr	r2, [r2, #448]	; 0x1c0
    4b7c:	str	r2, [r3]
    4b80:	ldr	r3, [fp, #-168]	; 0xffffff58
    4b84:	ldr	r2, [r3, #444]	; 0x1bc
    4b88:	ldr	r3, [fp, #-168]	; 0xffffff58
    4b8c:	str	r2, [r3, #448]	; 0x1c0
    4b90:	b	4c28 <storeAtts+0x4f4>
    4b94:	ldr	r3, [fp, #-168]	; 0xffffff58
    4b98:	add	r0, r3, #432	; 0x1b0
    4b9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4ba0:	ldr	r2, [r3, #400]	; 0x190
    4ba4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4ba8:	lsl	r3, r3, #4
    4bac:	add	r3, r2, r3
    4bb0:	ldr	r1, [r3, #4]
    4bb4:	ldr	r3, [fp, #-168]	; 0xffffff58
    4bb8:	ldr	r2, [r3, #400]	; 0x190
    4bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4bc0:	lsl	r3, r3, #4
    4bc4:	add	r3, r2, r3
    4bc8:	ldr	ip, [r3, #8]
    4bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
    4bd0:	lsl	r3, r3, #2
    4bd4:	ldr	r2, [fp, #-112]	; 0xffffff90
    4bd8:	add	r4, r2, r3
    4bdc:	mov	r3, ip
    4be0:	mov	r2, r1
    4be4:	ldr	r1, [fp, #-172]	; 0xffffff54
    4be8:	bl	edc8 <poolStoreString>
    4bec:	mov	r3, r0
    4bf0:	str	r3, [r4]
    4bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
    4bf8:	lsl	r3, r3, #2
    4bfc:	ldr	r2, [fp, #-112]	; 0xffffff90
    4c00:	add	r3, r2, r3
    4c04:	ldr	r3, [r3]
    4c08:	cmp	r3, #0
    4c0c:	bne	4c18 <storeAtts+0x4e4>
    4c10:	mov	r3, #1
    4c14:	b	5a2c <storeAtts+0x12f8>
    4c18:	ldr	r3, [fp, #-168]	; 0xffffff58
    4c1c:	ldr	r2, [r3, #444]	; 0x1bc
    4c20:	ldr	r3, [fp, #-168]	; 0xffffff58
    4c24:	str	r2, [r3, #448]	; 0x1c0
    4c28:	ldr	r3, [fp, #-120]	; 0xffffff88
    4c2c:	ldr	r3, [r3, #4]
    4c30:	cmp	r3, #0
    4c34:	beq	4cd4 <storeAtts+0x5a0>
    4c38:	ldr	r3, [fp, #-120]	; 0xffffff88
    4c3c:	ldrb	r3, [r3, #9]
    4c40:	cmp	r3, #0
    4c44:	beq	4ca4 <storeAtts+0x570>
    4c48:	ldr	r3, [fp, #-120]	; 0xffffff88
    4c4c:	ldr	r1, [r3, #4]
    4c50:	ldr	r3, [fp, #-20]	; 0xffffffec
    4c54:	lsl	r3, r3, #2
    4c58:	ldr	r2, [fp, #-112]	; 0xffffff90
    4c5c:	add	r3, r2, r3
    4c60:	ldr	r2, [r3]
    4c64:	ldr	r3, [fp, #4]
    4c68:	str	r3, [sp]
    4c6c:	mov	r3, r2
    4c70:	ldr	r2, [fp, #-120]	; 0xffffff88
    4c74:	ldr	r0, [fp, #-168]	; 0xffffff58
    4c78:	bl	5a44 <addBinding>
    4c7c:	str	r0, [fp, #-128]	; 0xffffff80
    4c80:	ldr	r3, [fp, #-128]	; 0xffffff80
    4c84:	cmp	r3, #0
    4c88:	beq	4c94 <storeAtts+0x560>
    4c8c:	ldr	r3, [fp, #-128]	; 0xffffff80
    4c90:	b	5a2c <storeAtts+0x12f8>
    4c94:	ldr	r3, [fp, #-20]	; 0xffffffec
    4c98:	sub	r3, r3, #1
    4c9c:	str	r3, [fp, #-20]	; 0xffffffec
    4ca0:	b	4ce0 <storeAtts+0x5ac>
    4ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
    4ca8:	add	r3, r3, #1
    4cac:	str	r3, [fp, #-20]	; 0xffffffec
    4cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4cb4:	add	r3, r3, #1
    4cb8:	str	r3, [fp, #-32]	; 0xffffffe0
    4cbc:	ldr	r3, [fp, #-120]	; 0xffffff88
    4cc0:	ldr	r3, [r3]
    4cc4:	sub	r3, r3, #1
    4cc8:	mov	r2, #2
    4ccc:	strb	r2, [r3]
    4cd0:	b	4ce0 <storeAtts+0x5ac>
    4cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
    4cd8:	add	r3, r3, #1
    4cdc:	str	r3, [fp, #-20]	; 0xffffffec
    4ce0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4ce4:	add	r3, r3, #1
    4ce8:	str	r3, [fp, #-28]	; 0xffffffe4
    4cec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4cf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4cf4:	cmp	r2, r3
    4cf8:	blt	4938 <storeAtts+0x204>
    4cfc:	ldr	r3, [fp, #-168]	; 0xffffff58
    4d00:	ldr	r2, [fp, #-20]	; 0xffffffec
    4d04:	str	r2, [r3, #392]	; 0x188
    4d08:	ldr	r3, [fp, #-16]
    4d0c:	ldr	r3, [r3, #8]
    4d10:	cmp	r3, #0
    4d14:	beq	4d9c <storeAtts+0x668>
    4d18:	ldr	r3, [fp, #-16]
    4d1c:	ldr	r3, [r3, #8]
    4d20:	ldr	r3, [r3]
    4d24:	sub	r3, r3, #1
    4d28:	ldrb	r3, [r3]
    4d2c:	cmp	r3, #0
    4d30:	beq	4d9c <storeAtts+0x668>
    4d34:	mov	r3, #0
    4d38:	str	r3, [fp, #-28]	; 0xffffffe4
    4d3c:	b	4d88 <storeAtts+0x654>
    4d40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4d44:	lsl	r3, r3, #2
    4d48:	ldr	r2, [fp, #-112]	; 0xffffff90
    4d4c:	add	r3, r2, r3
    4d50:	ldr	r2, [r3]
    4d54:	ldr	r3, [fp, #-16]
    4d58:	ldr	r3, [r3, #8]
    4d5c:	ldr	r3, [r3]
    4d60:	cmp	r2, r3
    4d64:	bne	4d7c <storeAtts+0x648>
    4d68:	ldr	r3, [fp, #-168]	; 0xffffff58
    4d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4d70:	str	r2, [r3, #396]	; 0x18c
    4d74:	nop	{0}
    4d78:	b	4da8 <storeAtts+0x674>
    4d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4d80:	add	r3, r3, #2
    4d84:	str	r3, [fp, #-28]	; 0xffffffe4
    4d88:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4d8c:	ldr	r3, [fp, #-20]	; 0xffffffec
    4d90:	cmp	r2, r3
    4d94:	blt	4d40 <storeAtts+0x60c>
    4d98:	b	4da8 <storeAtts+0x674>
    4d9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4da0:	mvn	r2, #0
    4da4:	str	r2, [r3, #396]	; 0x18c
    4da8:	mov	r3, #0
    4dac:	str	r3, [fp, #-28]	; 0xffffffe4
    4db0:	b	4f58 <storeAtts+0x824>
    4db4:	ldr	r3, [fp, #-16]
    4db8:	ldr	r1, [r3, #20]
    4dbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4dc0:	mov	r3, r2
    4dc4:	lsl	r3, r3, #1
    4dc8:	add	r3, r3, r2
    4dcc:	lsl	r3, r3, #2
    4dd0:	add	r3, r1, r3
    4dd4:	str	r3, [fp, #-132]	; 0xffffff7c
    4dd8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4ddc:	ldr	r3, [r3]
    4de0:	ldr	r3, [r3]
    4de4:	sub	r3, r3, #1
    4de8:	ldrb	r3, [r3]
    4dec:	cmp	r3, #0
    4df0:	bne	4f4c <storeAtts+0x818>
    4df4:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4df8:	ldr	r3, [r3, #8]
    4dfc:	cmp	r3, #0
    4e00:	beq	4f4c <storeAtts+0x818>
    4e04:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e08:	ldr	r3, [r3]
    4e0c:	ldr	r3, [r3, #4]
    4e10:	cmp	r3, #0
    4e14:	beq	4ee8 <storeAtts+0x7b4>
    4e18:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e1c:	ldr	r3, [r3]
    4e20:	ldrb	r3, [r3, #9]
    4e24:	cmp	r3, #0
    4e28:	beq	4e74 <storeAtts+0x740>
    4e2c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e30:	ldr	r3, [r3]
    4e34:	ldr	r1, [r3, #4]
    4e38:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e3c:	ldr	r2, [r3]
    4e40:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e44:	ldr	r0, [r3, #8]
    4e48:	ldr	r3, [fp, #4]
    4e4c:	str	r3, [sp]
    4e50:	mov	r3, r0
    4e54:	ldr	r0, [fp, #-168]	; 0xffffff58
    4e58:	bl	5a44 <addBinding>
    4e5c:	str	r0, [fp, #-136]	; 0xffffff78
    4e60:	ldr	r3, [fp, #-136]	; 0xffffff78
    4e64:	cmp	r3, #0
    4e68:	beq	4f4c <storeAtts+0x818>
    4e6c:	ldr	r3, [fp, #-136]	; 0xffffff78
    4e70:	b	5a2c <storeAtts+0x12f8>
    4e74:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e78:	ldr	r3, [r3]
    4e7c:	ldr	r3, [r3]
    4e80:	sub	r3, r3, #1
    4e84:	mov	r2, #2
    4e88:	strb	r2, [r3]
    4e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4e90:	add	r3, r3, #1
    4e94:	str	r3, [fp, #-32]	; 0xffffffe0
    4e98:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4e9c:	ldr	r2, [r3]
    4ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
    4ea4:	add	r1, r3, #1
    4ea8:	str	r1, [fp, #-20]	; 0xffffffec
    4eac:	lsl	r3, r3, #2
    4eb0:	ldr	r1, [fp, #-112]	; 0xffffff90
    4eb4:	add	r3, r1, r3
    4eb8:	ldr	r2, [r2]
    4ebc:	str	r2, [r3]
    4ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
    4ec4:	add	r2, r3, #1
    4ec8:	str	r2, [fp, #-20]	; 0xffffffec
    4ecc:	lsl	r3, r3, #2
    4ed0:	ldr	r2, [fp, #-112]	; 0xffffff90
    4ed4:	add	r3, r2, r3
    4ed8:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4edc:	ldr	r2, [r2, #8]
    4ee0:	str	r2, [r3]
    4ee4:	b	4f4c <storeAtts+0x818>
    4ee8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4eec:	ldr	r3, [r3]
    4ef0:	ldr	r3, [r3]
    4ef4:	sub	r3, r3, #1
    4ef8:	mov	r2, #1
    4efc:	strb	r2, [r3]
    4f00:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4f04:	ldr	r2, [r3]
    4f08:	ldr	r3, [fp, #-20]	; 0xffffffec
    4f0c:	add	r1, r3, #1
    4f10:	str	r1, [fp, #-20]	; 0xffffffec
    4f14:	lsl	r3, r3, #2
    4f18:	ldr	r1, [fp, #-112]	; 0xffffff90
    4f1c:	add	r3, r1, r3
    4f20:	ldr	r2, [r2]
    4f24:	str	r2, [r3]
    4f28:	ldr	r3, [fp, #-20]	; 0xffffffec
    4f2c:	add	r2, r3, #1
    4f30:	str	r2, [fp, #-20]	; 0xffffffec
    4f34:	lsl	r3, r3, #2
    4f38:	ldr	r2, [fp, #-112]	; 0xffffff90
    4f3c:	add	r3, r2, r3
    4f40:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4f44:	ldr	r2, [r2, #8]
    4f48:	str	r2, [r3]
    4f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4f50:	add	r3, r3, #1
    4f54:	str	r3, [fp, #-28]	; 0xffffffe4
    4f58:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4f5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4f60:	cmp	r2, r3
    4f64:	blt	4db4 <storeAtts+0x680>
    4f68:	ldr	r3, [fp, #-20]	; 0xffffffec
    4f6c:	lsl	r3, r3, #2
    4f70:	ldr	r2, [fp, #-112]	; 0xffffff90
    4f74:	add	r3, r2, r3
    4f78:	mov	r2, #0
    4f7c:	str	r2, [r3]
    4f80:	mov	r3, #0
    4f84:	str	r3, [fp, #-28]	; 0xffffffe4
    4f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4f8c:	cmp	r3, #0
    4f90:	beq	56e0 <storeAtts+0xfac>
    4f94:	ldr	r3, [fp, #-168]	; 0xffffff58
    4f98:	ldr	r3, [r3, #408]	; 0x198
    4f9c:	str	r3, [fp, #-56]	; 0xffffffc8
    4fa0:	ldr	r3, [fp, #-168]	; 0xffffff58
    4fa4:	ldrb	r3, [r3, #412]	; 0x19c
    4fa8:	mov	r2, r3
    4fac:	mov	r3, #1
    4fb0:	lsl	r3, r3, r2
    4fb4:	str	r3, [fp, #-60]	; 0xffffffc4
    4fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4fbc:	lsl	r3, r3, #1
    4fc0:	ldr	r2, [fp, #-168]	; 0xffffff58
    4fc4:	ldrb	r2, [r2, #412]	; 0x19c
    4fc8:	asr	r3, r3, r2
    4fcc:	cmp	r3, #0
    4fd0:	beq	5090 <storeAtts+0x95c>
    4fd4:	nop	{0}
    4fd8:	ldr	r3, [fp, #-168]	; 0xffffff58
    4fdc:	ldrb	r3, [r3, #412]	; 0x19c
    4fe0:	add	r2, r3, #1
    4fe4:	uxtb	r1, r2
    4fe8:	ldr	r2, [fp, #-168]	; 0xffffff58
    4fec:	strb	r1, [r2, #412]	; 0x19c
    4ff0:	mov	r2, r3
    4ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4ff8:	asr	r3, r3, r2
    4ffc:	cmp	r3, #0
    5000:	bne	4fd8 <storeAtts+0x8a4>
    5004:	ldr	r3, [fp, #-168]	; 0xffffff58
    5008:	ldrb	r3, [r3, #412]	; 0x19c
    500c:	cmp	r3, #2
    5010:	bhi	5020 <storeAtts+0x8ec>
    5014:	ldr	r3, [fp, #-168]	; 0xffffff58
    5018:	mov	r2, #3
    501c:	strb	r2, [r3, #412]	; 0x19c
    5020:	ldr	r3, [fp, #-168]	; 0xffffff58
    5024:	ldrb	r3, [r3, #412]	; 0x19c
    5028:	mov	r2, r3
    502c:	mov	r3, #1
    5030:	lsl	r3, r3, r2
    5034:	str	r3, [fp, #-60]	; 0xffffffc4
    5038:	ldr	r3, [fp, #-168]	; 0xffffff58
    503c:	ldr	r4, [r3, #16]
    5040:	ldr	r3, [fp, #-168]	; 0xffffff58
    5044:	ldr	r0, [r3, #404]	; 0x194
    5048:	ldr	r2, [fp, #-60]	; 0xffffffc4
    504c:	mov	r3, r2
    5050:	lsl	r3, r3, #1
    5054:	add	r3, r3, r2
    5058:	lsl	r3, r3, #2
    505c:	mov	r1, r3
    5060:	blx	r4
    5064:	str	r0, [fp, #-140]	; 0xffffff74
    5068:	ldr	r3, [fp, #-140]	; 0xffffff74
    506c:	cmp	r3, #0
    5070:	bne	507c <storeAtts+0x948>
    5074:	mov	r3, #1
    5078:	b	5a2c <storeAtts+0x12f8>
    507c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5080:	ldr	r2, [fp, #-140]	; 0xffffff74
    5084:	str	r2, [r3, #404]	; 0x194
    5088:	mov	r3, #0
    508c:	str	r3, [fp, #-56]	; 0xffffffc8
    5090:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5094:	cmp	r3, #0
    5098:	bne	50f0 <storeAtts+0x9bc>
    509c:	mvn	r3, #0
    50a0:	str	r3, [fp, #-56]	; 0xffffffc8
    50a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    50a8:	str	r3, [fp, #-52]	; 0xffffffcc
    50ac:	b	50e4 <storeAtts+0x9b0>
    50b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    50b4:	ldr	r1, [r3, #404]	; 0x194
    50b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    50bc:	sub	r3, r3, #1
    50c0:	str	r3, [fp, #-52]	; 0xffffffcc
    50c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    50c8:	mov	r3, r2
    50cc:	lsl	r3, r3, #1
    50d0:	add	r3, r3, r2
    50d4:	lsl	r3, r3, #2
    50d8:	add	r3, r1, r3
    50dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    50e0:	str	r2, [r3]
    50e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    50e8:	cmp	r3, #0
    50ec:	bne	50b0 <storeAtts+0x97c>
    50f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    50f4:	sub	r3, r3, #1
    50f8:	str	r3, [fp, #-56]	; 0xffffffc8
    50fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    5100:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5104:	str	r2, [r3, #408]	; 0x198
    5108:	b	56a0 <storeAtts+0xf6c>
    510c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5110:	lsl	r3, r3, #2
    5114:	ldr	r2, [fp, #-112]	; 0xffffff90
    5118:	add	r3, r2, r3
    511c:	ldr	r3, [r3]
    5120:	str	r3, [fp, #-64]	; 0xffffffc0
    5124:	ldr	r3, [fp, #-64]	; 0xffffffc0
    5128:	sub	r3, r3, #1
    512c:	ldrb	r3, [r3]
    5130:	cmp	r3, #2
    5134:	bne	5684 <storeAtts+0xf50>
    5138:	ldr	r3, [fp, #-168]	; 0xffffff58
    513c:	ldr	r3, [r3, #512]	; 0x200
    5140:	str	r3, [fp, #-68]	; 0xffffffbc
    5144:	ldr	r3, [fp, #-64]	; 0xffffffc0
    5148:	sub	r3, r3, #1
    514c:	mov	r2, #0
    5150:	strb	r2, [r3]
    5154:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5158:	add	r1, r3, #40	; 0x28
    515c:	mov	r3, #0
    5160:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5164:	ldr	r0, [fp, #-168]	; 0xffffff58
    5168:	bl	e00c <lookup>
    516c:	str	r0, [fp, #-144]	; 0xffffff70
    5170:	ldr	r3, [fp, #-144]	; 0xffffff70
    5174:	cmp	r3, #0
    5178:	beq	518c <storeAtts+0xa58>
    517c:	ldr	r3, [fp, #-144]	; 0xffffff70
    5180:	ldr	r3, [r3, #4]
    5184:	cmp	r3, #0
    5188:	bne	5194 <storeAtts+0xa60>
    518c:	mov	r3, #1
    5190:	b	5a2c <storeAtts+0x12f8>
    5194:	ldr	r3, [fp, #-144]	; 0xffffff70
    5198:	ldr	r3, [r3, #4]
    519c:	ldr	r3, [r3, #4]
    51a0:	str	r3, [fp, #-148]	; 0xffffff6c
    51a4:	ldr	r3, [fp, #-148]	; 0xffffff6c
    51a8:	cmp	r3, #0
    51ac:	bne	51b8 <storeAtts+0xa84>
    51b0:	mov	r3, #27
    51b4:	b	5a2c <storeAtts+0x12f8>
    51b8:	mov	r3, #0
    51bc:	str	r3, [fp, #-52]	; 0xffffffcc
    51c0:	b	5270 <storeAtts+0xb3c>
    51c4:	ldr	r3, [fp, #-148]	; 0xffffff6c
    51c8:	ldr	r2, [r3, #16]
    51cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    51d0:	add	r3, r2, r3
    51d4:	ldrb	r3, [r3]
    51d8:	strb	r3, [fp, #-149]	; 0xffffff6b
    51dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    51e0:	ldr	r2, [r3, #444]	; 0x1bc
    51e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    51e8:	ldr	r3, [r3, #440]	; 0x1b8
    51ec:	cmp	r2, r3
    51f0:	bne	5210 <storeAtts+0xadc>
    51f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    51f8:	add	r3, r3, #432	; 0x1b0
    51fc:	mov	r0, r3
    5200:	bl	ee7c <poolGrow>
    5204:	mov	r3, r0
    5208:	cmp	r3, #0
    520c:	beq	5234 <storeAtts+0xb00>
    5210:	ldr	r3, [fp, #-168]	; 0xffffff58
    5214:	ldr	r3, [r3, #444]	; 0x1bc
    5218:	add	r1, r3, #1
    521c:	ldr	r2, [fp, #-168]	; 0xffffff58
    5220:	str	r1, [r2, #444]	; 0x1bc
    5224:	ldrb	r2, [fp, #-149]	; 0xffffff6b
    5228:	strb	r2, [r3]
    522c:	mov	r3, #0
    5230:	b	5238 <storeAtts+0xb04>
    5234:	mov	r3, #1
    5238:	cmp	r3, #0
    523c:	beq	5248 <storeAtts+0xb14>
    5240:	mov	r3, #1
    5244:	b	5a2c <storeAtts+0x12f8>
    5248:	ldr	r2, [fp, #-68]	; 0xffffffbc
    524c:	movw	r3, #16963	; 0x4243
    5250:	movt	r3, #15
    5254:	mul	r2, r3, r2
    5258:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    525c:	eor	r3, r3, r2
    5260:	str	r3, [fp, #-68]	; 0xffffffbc
    5264:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5268:	add	r3, r3, #1
    526c:	str	r3, [fp, #-52]	; 0xffffffcc
    5270:	ldr	r3, [fp, #-148]	; 0xffffff6c
    5274:	ldr	r3, [r3, #20]
    5278:	ldr	r2, [fp, #-52]	; 0xffffffcc
    527c:	cmp	r2, r3
    5280:	blt	51c4 <storeAtts+0xa90>
    5284:	nop	{0}
    5288:	ldr	r3, [fp, #-64]	; 0xffffffc0
    528c:	add	r2, r3, #1
    5290:	str	r2, [fp, #-64]	; 0xffffffc0
    5294:	ldrb	r3, [r3]
    5298:	cmp	r3, #58	; 0x3a
    529c:	bne	5288 <storeAtts+0xb54>
    52a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    52a4:	ldrb	r3, [r3]
    52a8:	strb	r3, [fp, #-150]	; 0xffffff6a
    52ac:	ldr	r3, [fp, #-168]	; 0xffffff58
    52b0:	ldr	r2, [r3, #444]	; 0x1bc
    52b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    52b8:	ldr	r3, [r3, #440]	; 0x1b8
    52bc:	cmp	r2, r3
    52c0:	bne	52e0 <storeAtts+0xbac>
    52c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    52c8:	add	r3, r3, #432	; 0x1b0
    52cc:	mov	r0, r3
    52d0:	bl	ee7c <poolGrow>
    52d4:	mov	r3, r0
    52d8:	cmp	r3, #0
    52dc:	beq	5308 <storeAtts+0xbd4>
    52e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    52e4:	ldr	r3, [r3, #444]	; 0x1bc
    52e8:	add	r1, r3, #1
    52ec:	ldr	r2, [fp, #-168]	; 0xffffff58
    52f0:	str	r1, [r2, #444]	; 0x1bc
    52f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    52f8:	ldrb	r2, [r2]
    52fc:	strb	r2, [r3]
    5300:	mov	r3, #0
    5304:	b	530c <storeAtts+0xbd8>
    5308:	mov	r3, #1
    530c:	cmp	r3, #0
    5310:	beq	531c <storeAtts+0xbe8>
    5314:	mov	r3, #1
    5318:	b	5a2c <storeAtts+0x12f8>
    531c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    5320:	movw	r3, #16963	; 0x4243
    5324:	movt	r3, #15
    5328:	mul	r2, r3, r2
    532c:	ldrb	r3, [fp, #-150]	; 0xffffff6a
    5330:	eor	r3, r3, r2
    5334:	str	r3, [fp, #-68]	; 0xffffffbc
    5338:	ldr	r3, [fp, #-64]	; 0xffffffc0
    533c:	add	r2, r3, #1
    5340:	str	r2, [fp, #-64]	; 0xffffffc0
    5344:	ldrb	r3, [r3]
    5348:	cmp	r3, #0
    534c:	bne	52a0 <storeAtts+0xb6c>
    5350:	mov	r3, #0
    5354:	strb	r3, [fp, #-69]	; 0xffffffbb
    5358:	ldr	r3, [fp, #-60]	; 0xffffffc4
    535c:	sub	r3, r3, #1
    5360:	str	r3, [fp, #-156]	; 0xffffff64
    5364:	ldr	r2, [fp, #-68]	; 0xffffffbc
    5368:	ldr	r3, [fp, #-156]	; 0xffffff64
    536c:	and	r3, r3, r2
    5370:	str	r3, [fp, #-52]	; 0xffffffcc
    5374:	b	54c0 <storeAtts+0xd8c>
    5378:	ldr	r3, [fp, #-168]	; 0xffffff58
    537c:	ldr	r1, [r3, #404]	; 0x194
    5380:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5384:	mov	r3, r2
    5388:	lsl	r3, r3, #1
    538c:	add	r3, r3, r2
    5390:	lsl	r3, r3, #2
    5394:	add	r3, r1, r3
    5398:	ldr	r3, [r3, #4]
    539c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    53a0:	cmp	r2, r3
    53a4:	bne	5438 <storeAtts+0xd04>
    53a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    53ac:	ldr	r3, [r3, #448]	; 0x1c0
    53b0:	str	r3, [fp, #-76]	; 0xffffffb4
    53b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    53b8:	ldr	r1, [r3, #404]	; 0x194
    53bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    53c0:	mov	r3, r2
    53c4:	lsl	r3, r3, #1
    53c8:	add	r3, r3, r2
    53cc:	lsl	r3, r3, #2
    53d0:	add	r3, r1, r3
    53d4:	ldr	r3, [r3, #8]
    53d8:	str	r3, [fp, #-80]	; 0xffffffb0
    53dc:	b	53f8 <storeAtts+0xcc4>
    53e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    53e4:	add	r3, r3, #1
    53e8:	str	r3, [fp, #-76]	; 0xffffffb4
    53ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
    53f0:	add	r3, r3, #1
    53f4:	str	r3, [fp, #-80]	; 0xffffffb0
    53f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    53fc:	ldrb	r2, [r3]
    5400:	ldr	r3, [fp, #-80]	; 0xffffffb0
    5404:	ldrb	r3, [r3]
    5408:	cmp	r2, r3
    540c:	bne	5420 <storeAtts+0xcec>
    5410:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5414:	ldrb	r3, [r3]
    5418:	cmp	r3, #0
    541c:	bne	53e0 <storeAtts+0xcac>
    5420:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5424:	ldrb	r3, [r3]
    5428:	cmp	r3, #0
    542c:	bne	5438 <storeAtts+0xd04>
    5430:	mov	r3, #8
    5434:	b	5a2c <storeAtts+0x12f8>
    5438:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    543c:	cmp	r3, #0
    5440:	bne	5484 <storeAtts+0xd50>
    5444:	ldr	r3, [fp, #-156]	; 0xffffff64
    5448:	mvn	r2, r3
    544c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5450:	and	r2, r2, r3
    5454:	ldr	r3, [fp, #-168]	; 0xffffff58
    5458:	ldrb	r3, [r3, #412]	; 0x19c
    545c:	sub	r3, r3, #1
    5460:	lsr	r3, r2, r3
    5464:	uxtb	r2, r3
    5468:	ldr	r3, [fp, #-156]	; 0xffffff64
    546c:	lsr	r3, r3, #2
    5470:	uxtb	r3, r3
    5474:	and	r3, r3, r2
    5478:	uxtb	r3, r3
    547c:	orr	r3, r3, #1
    5480:	strb	r3, [fp, #-69]	; 0xffffffbb
    5484:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    5488:	ldr	r2, [fp, #-52]	; 0xffffffcc
    548c:	cmp	r2, r3
    5490:	bge	54b0 <storeAtts+0xd7c>
    5494:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    5498:	ldr	r2, [fp, #-60]	; 0xffffffc4
    549c:	sub	r3, r2, r3
    54a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    54a4:	add	r3, r2, r3
    54a8:	str	r3, [fp, #-52]	; 0xffffffcc
    54ac:	b	54c0 <storeAtts+0xd8c>
    54b0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    54b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    54b8:	sub	r3, r2, r3
    54bc:	str	r3, [fp, #-52]	; 0xffffffcc
    54c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    54c4:	ldr	r1, [r3, #404]	; 0x194
    54c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    54cc:	mov	r3, r2
    54d0:	lsl	r3, r3, #1
    54d4:	add	r3, r3, r2
    54d8:	lsl	r3, r3, #2
    54dc:	add	r3, r1, r3
    54e0:	ldr	r3, [r3]
    54e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    54e8:	cmp	r2, r3
    54ec:	beq	5378 <storeAtts+0xc44>
    54f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    54f4:	ldrb	r3, [r3, #245]	; 0xf5
    54f8:	cmp	r3, #0
    54fc:	beq	55b0 <storeAtts+0xe7c>
    5500:	ldr	r3, [fp, #-168]	; 0xffffff58
    5504:	ldr	r3, [r3, #444]	; 0x1bc
    5508:	sub	r3, r3, #1
    550c:	ldr	r2, [fp, #-168]	; 0xffffff58
    5510:	ldrb	r2, [r2, #488]	; 0x1e8
    5514:	strb	r2, [r3]
    5518:	ldr	r3, [fp, #-148]	; 0xffffff6c
    551c:	ldr	r3, [r3]
    5520:	ldr	r3, [r3]
    5524:	str	r3, [fp, #-64]	; 0xffffffc0
    5528:	ldr	r3, [fp, #-168]	; 0xffffff58
    552c:	ldr	r2, [r3, #444]	; 0x1bc
    5530:	ldr	r3, [fp, #-168]	; 0xffffff58
    5534:	ldr	r3, [r3, #440]	; 0x1b8
    5538:	cmp	r2, r3
    553c:	bne	555c <storeAtts+0xe28>
    5540:	ldr	r3, [fp, #-168]	; 0xffffff58
    5544:	add	r3, r3, #432	; 0x1b0
    5548:	mov	r0, r3
    554c:	bl	ee7c <poolGrow>
    5550:	mov	r3, r0
    5554:	cmp	r3, #0
    5558:	beq	5584 <storeAtts+0xe50>
    555c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5560:	ldr	r3, [r3, #444]	; 0x1bc
    5564:	add	r1, r3, #1
    5568:	ldr	r2, [fp, #-168]	; 0xffffff58
    556c:	str	r1, [r2, #444]	; 0x1bc
    5570:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5574:	ldrb	r2, [r2]
    5578:	strb	r2, [r3]
    557c:	mov	r3, #0
    5580:	b	5588 <storeAtts+0xe54>
    5584:	mov	r3, #1
    5588:	cmp	r3, #0
    558c:	beq	5598 <storeAtts+0xe64>
    5590:	mov	r3, #1
    5594:	b	5a2c <storeAtts+0x12f8>
    5598:	ldr	r3, [fp, #-64]	; 0xffffffc0
    559c:	add	r2, r3, #1
    55a0:	str	r2, [fp, #-64]	; 0xffffffc0
    55a4:	ldrb	r3, [r3]
    55a8:	cmp	r3, #0
    55ac:	bne	5528 <storeAtts+0xdf4>
    55b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    55b4:	ldr	r3, [r3, #448]	; 0x1c0
    55b8:	str	r3, [fp, #-64]	; 0xffffffc0
    55bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    55c0:	ldr	r2, [r3, #444]	; 0x1bc
    55c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    55c8:	str	r2, [r3, #448]	; 0x1c0
    55cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    55d0:	lsl	r3, r3, #2
    55d4:	ldr	r2, [fp, #-112]	; 0xffffff90
    55d8:	add	r3, r2, r3
    55dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    55e0:	str	r2, [r3]
    55e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    55e8:	ldr	r1, [r3, #404]	; 0x194
    55ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
    55f0:	mov	r3, r2
    55f4:	lsl	r3, r3, #1
    55f8:	add	r3, r3, r2
    55fc:	lsl	r3, r3, #2
    5600:	add	r3, r1, r3
    5604:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5608:	str	r2, [r3]
    560c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5610:	ldr	r1, [r3, #404]	; 0x194
    5614:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5618:	mov	r3, r2
    561c:	lsl	r3, r3, #1
    5620:	add	r3, r3, r2
    5624:	lsl	r3, r3, #2
    5628:	add	r3, r1, r3
    562c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    5630:	str	r2, [r3, #4]
    5634:	ldr	r3, [fp, #-168]	; 0xffffff58
    5638:	ldr	r1, [r3, #404]	; 0x194
    563c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5640:	mov	r3, r2
    5644:	lsl	r3, r3, #1
    5648:	add	r3, r3, r2
    564c:	lsl	r3, r3, #2
    5650:	add	r3, r1, r3
    5654:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5658:	str	r2, [r3, #8]
    565c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5660:	sub	r3, r3, #1
    5664:	str	r3, [fp, #-32]	; 0xffffffe0
    5668:	ldr	r3, [fp, #-32]	; 0xffffffe0
    566c:	cmp	r3, #0
    5670:	bne	5694 <storeAtts+0xf60>
    5674:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5678:	add	r3, r3, #2
    567c:	str	r3, [fp, #-28]	; 0xffffffe4
    5680:	b	56b0 <storeAtts+0xf7c>
    5684:	ldr	r3, [fp, #-64]	; 0xffffffc0
    5688:	sub	r3, r3, #1
    568c:	mov	r2, #0
    5690:	strb	r2, [r3]
    5694:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5698:	add	r3, r3, #2
    569c:	str	r3, [fp, #-28]	; 0xffffffe4
    56a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    56a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    56a8:	cmp	r2, r3
    56ac:	blt	510c <storeAtts+0x9d8>
    56b0:	b	56e0 <storeAtts+0xfac>
    56b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    56b8:	lsl	r3, r3, #2
    56bc:	ldr	r2, [fp, #-112]	; 0xffffff90
    56c0:	add	r3, r2, r3
    56c4:	ldr	r3, [r3]
    56c8:	sub	r3, r3, #1
    56cc:	mov	r2, #0
    56d0:	strb	r2, [r3]
    56d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    56d8:	add	r3, r3, #2
    56dc:	str	r3, [fp, #-28]	; 0xffffffe4
    56e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    56e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    56e8:	cmp	r2, r3
    56ec:	blt	56b4 <storeAtts+0xf80>
    56f0:	ldr	r3, [fp, #4]
    56f4:	ldr	r3, [r3]
    56f8:	str	r3, [fp, #-36]	; 0xffffffdc
    56fc:	b	5724 <storeAtts+0xff0>
    5700:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5704:	ldr	r3, [r3, #12]
    5708:	ldr	r3, [r3]
    570c:	sub	r3, r3, #1
    5710:	mov	r2, #0
    5714:	strb	r2, [r3]
    5718:	ldr	r3, [fp, #-36]	; 0xffffffdc
    571c:	ldr	r3, [r3, #4]
    5720:	str	r3, [fp, #-36]	; 0xffffffdc
    5724:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5728:	cmp	r3, #0
    572c:	bne	5700 <storeAtts+0xfcc>
    5730:	ldr	r3, [fp, #-168]	; 0xffffff58
    5734:	ldrb	r3, [r3, #244]	; 0xf4
    5738:	cmp	r3, #0
    573c:	bne	5748 <storeAtts+0x1014>
    5740:	mov	r3, #0
    5744:	b	5a2c <storeAtts+0x12f8>
    5748:	ldr	r3, [fp, #-16]
    574c:	ldr	r3, [r3, #4]
    5750:	cmp	r3, #0
    5754:	beq	57a8 <storeAtts+0x1074>
    5758:	ldr	r3, [fp, #-16]
    575c:	ldr	r3, [r3, #4]
    5760:	ldr	r3, [r3, #4]
    5764:	str	r3, [fp, #-36]	; 0xffffffdc
    5768:	ldr	r3, [fp, #-36]	; 0xffffffdc
    576c:	cmp	r3, #0
    5770:	bne	577c <storeAtts+0x1048>
    5774:	mov	r3, #27
    5778:	b	5a2c <storeAtts+0x12f8>
    577c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5780:	ldr	r3, [r3]
    5784:	str	r3, [fp, #-40]	; 0xffffffd8
    5788:	nop	{0}
    578c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5790:	add	r2, r3, #1
    5794:	str	r2, [fp, #-40]	; 0xffffffd8
    5798:	ldrb	r3, [r3]
    579c:	cmp	r3, #58	; 0x3a
    57a0:	bne	578c <storeAtts+0x1058>
    57a4:	b	57dc <storeAtts+0x10a8>
    57a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    57ac:	ldr	r3, [r3, #156]	; 0x9c
    57b0:	cmp	r3, #0
    57b4:	beq	57d4 <storeAtts+0x10a0>
    57b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    57bc:	ldr	r3, [r3, #156]	; 0x9c
    57c0:	str	r3, [fp, #-36]	; 0xffffffdc
    57c4:	ldr	r3, [fp, #-180]	; 0xffffff4c
    57c8:	ldr	r3, [r3]
    57cc:	str	r3, [fp, #-40]	; 0xffffffd8
    57d0:	b	57dc <storeAtts+0x10a8>
    57d4:	mov	r3, #0
    57d8:	b	5a2c <storeAtts+0x12f8>
    57dc:	mov	r3, #0
    57e0:	str	r3, [fp, #-24]	; 0xffffffe8
    57e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    57e8:	ldrb	r3, [r3, #245]	; 0xf5
    57ec:	cmp	r3, #0
    57f0:	beq	5834 <storeAtts+0x1100>
    57f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    57f8:	ldr	r3, [r3]
    57fc:	ldr	r3, [r3]
    5800:	cmp	r3, #0
    5804:	beq	5834 <storeAtts+0x1100>
    5808:	nop	{0}
    580c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5810:	ldr	r3, [r3]
    5814:	ldr	r2, [r3]
    5818:	ldr	r3, [fp, #-24]	; 0xffffffe8
    581c:	add	r1, r3, #1
    5820:	str	r1, [fp, #-24]	; 0xffffffe8
    5824:	add	r3, r2, r3
    5828:	ldrb	r3, [r3]
    582c:	cmp	r3, #0
    5830:	bne	580c <storeAtts+0x10d8>
    5834:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5838:	ldr	r2, [fp, #-40]	; 0xffffffd8
    583c:	str	r2, [r3, #4]
    5840:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5844:	ldr	r2, [r3, #20]
    5848:	ldr	r3, [fp, #-180]	; 0xffffff4c
    584c:	str	r2, [r3, #16]
    5850:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5854:	ldr	r3, [r3]
    5858:	ldr	r2, [r3]
    585c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5860:	str	r2, [r3, #8]
    5864:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5868:	ldr	r2, [fp, #-24]	; 0xffffffe8
    586c:	str	r2, [r3, #20]
    5870:	mov	r3, #0
    5874:	str	r3, [fp, #-28]	; 0xffffffe4
    5878:	nop	{0}
    587c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5880:	add	r2, r3, #1
    5884:	str	r2, [fp, #-28]	; 0xffffffe4
    5888:	mov	r2, r3
    588c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5890:	add	r3, r3, r2
    5894:	ldrb	r3, [r3]
    5898:	cmp	r3, #0
    589c:	bne	587c <storeAtts+0x1148>
    58a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    58a4:	ldr	r2, [r3, #20]
    58a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58ac:	add	r3, r2, r3
    58b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    58b4:	add	r3, r2, r3
    58b8:	str	r3, [fp, #-100]	; 0xffffff9c
    58bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    58c0:	ldr	r3, [r3, #24]
    58c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    58c8:	cmp	r2, r3
    58cc:	ble	599c <storeAtts+0x1268>
    58d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    58d4:	ldr	r3, [r3, #12]
    58d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    58dc:	add	r2, r2, #24
    58e0:	mov	r0, r2
    58e4:	blx	r3
    58e8:	str	r0, [fp, #-160]	; 0xffffff60
    58ec:	ldr	r3, [fp, #-160]	; 0xffffff60
    58f0:	cmp	r3, #0
    58f4:	bne	5900 <storeAtts+0x11cc>
    58f8:	mov	r3, #1
    58fc:	b	5a2c <storeAtts+0x12f8>
    5900:	ldr	r3, [fp, #-100]	; 0xffffff9c
    5904:	add	r2, r3, #24
    5908:	ldr	r3, [fp, #-36]	; 0xffffffdc
    590c:	str	r2, [r3, #24]
    5910:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5914:	ldr	r1, [r3, #16]
    5918:	ldr	r3, [fp, #-36]	; 0xffffffdc
    591c:	ldr	r3, [r3, #20]
    5920:	mov	r2, r3
    5924:	ldr	r0, [fp, #-160]	; 0xffffff60
    5928:	bl	0 <memcpy>
    592c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5930:	ldr	r3, [r3, #372]	; 0x174
    5934:	str	r3, [fp, #-84]	; 0xffffffac
    5938:	b	596c <storeAtts+0x1238>
    593c:	ldr	r3, [fp, #-84]	; 0xffffffac
    5940:	ldr	r2, [r3, #12]
    5944:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5948:	ldr	r3, [r3, #16]
    594c:	cmp	r2, r3
    5950:	bne	5960 <storeAtts+0x122c>
    5954:	ldr	r3, [fp, #-84]	; 0xffffffac
    5958:	ldr	r2, [fp, #-160]	; 0xffffff60
    595c:	str	r2, [r3, #12]
    5960:	ldr	r3, [fp, #-84]	; 0xffffffac
    5964:	ldr	r3, [r3]
    5968:	str	r3, [fp, #-84]	; 0xffffffac
    596c:	ldr	r3, [fp, #-84]	; 0xffffffac
    5970:	cmp	r3, #0
    5974:	bne	593c <storeAtts+0x1208>
    5978:	ldr	r3, [fp, #-168]	; 0xffffff58
    597c:	ldr	r3, [r3, #20]
    5980:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5984:	ldr	r2, [r2, #16]
    5988:	mov	r0, r2
    598c:	blx	r3
    5990:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5994:	ldr	r2, [fp, #-160]	; 0xffffff60
    5998:	str	r2, [r3, #16]
    599c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    59a0:	ldr	r3, [r3, #16]
    59a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    59a8:	ldr	r2, [r2, #20]
    59ac:	add	r3, r3, r2
    59b0:	str	r3, [fp, #-160]	; 0xffffff60
    59b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    59b8:	mov	r2, r3
    59bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    59c0:	ldr	r0, [fp, #-160]	; 0xffffff60
    59c4:	bl	0 <memcpy>
    59c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    59cc:	cmp	r3, #0
    59d0:	beq	5a18 <storeAtts+0x12e4>
    59d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    59d8:	sub	r3, r3, #1
    59dc:	ldr	r2, [fp, #-160]	; 0xffffff60
    59e0:	add	r3, r2, r3
    59e4:	str	r3, [fp, #-160]	; 0xffffff60
    59e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    59ec:	ldrb	r2, [r3, #488]	; 0x1e8
    59f0:	ldr	r3, [fp, #-160]	; 0xffffff60
    59f4:	strb	r2, [r3]
    59f8:	ldr	r3, [fp, #-160]	; 0xffffff60
    59fc:	add	r0, r3, #1
    5a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5a04:	ldr	r3, [r3]
    5a08:	ldr	r3, [r3]
    5a0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5a10:	mov	r1, r3
    5a14:	bl	0 <memcpy>
    5a18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5a1c:	ldr	r2, [r3, #16]
    5a20:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5a24:	str	r2, [r3]
    5a28:	mov	r3, #0
    5a2c:	mov	r0, r3
    5a30:	sub	sp, fp, #12
    5a34:	ldrd	r4, [sp]
    5a38:	ldr	fp, [sp, #8]
    5a3c:	add	sp, sp, #12
    5a40:	pop	{pc}		; (ldr pc, [sp], #4)

00005a44 <addBinding>:
    5a44:	str	fp, [sp, #-8]!
    5a48:	str	lr, [sp, #4]
    5a4c:	add	fp, sp, #4
    5a50:	sub	sp, sp, #32
    5a54:	str	r0, [fp, #-24]	; 0xffffffe8
    5a58:	str	r1, [fp, #-28]	; 0xffffffe4
    5a5c:	str	r2, [fp, #-32]	; 0xffffffe0
    5a60:	str	r3, [fp, #-36]	; 0xffffffdc
    5a64:	mov	r3, #0
    5a68:	strb	r3, [fp, #-5]
    5a6c:	mov	r3, #1
    5a70:	strb	r3, [fp, #-6]
    5a74:	mov	r3, #1
    5a78:	strb	r3, [fp, #-7]
    5a7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5a80:	ldrb	r3, [r3]
    5a84:	cmp	r3, #0
    5a88:	bne	5aa4 <addBinding+0x60>
    5a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5a90:	ldr	r3, [r3]
    5a94:	cmp	r3, #0
    5a98:	beq	5aa4 <addBinding+0x60>
    5a9c:	mov	r3, #28
    5aa0:	b	5f68 <addBinding+0x524>
    5aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5aa8:	ldr	r3, [r3]
    5aac:	cmp	r3, #0
    5ab0:	beq	5b68 <addBinding+0x124>
    5ab4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ab8:	ldr	r3, [r3]
    5abc:	ldrb	r3, [r3]
    5ac0:	cmp	r3, #120	; 0x78
    5ac4:	bne	5b68 <addBinding+0x124>
    5ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5acc:	ldr	r3, [r3]
    5ad0:	add	r3, r3, #1
    5ad4:	ldrb	r3, [r3]
    5ad8:	cmp	r3, #109	; 0x6d
    5adc:	bne	5b68 <addBinding+0x124>
    5ae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ae4:	ldr	r3, [r3]
    5ae8:	add	r3, r3, #2
    5aec:	ldrb	r3, [r3]
    5af0:	cmp	r3, #108	; 0x6c
    5af4:	bne	5b68 <addBinding+0x124>
    5af8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5afc:	ldr	r3, [r3]
    5b00:	add	r3, r3, #3
    5b04:	ldrb	r3, [r3]
    5b08:	cmp	r3, #110	; 0x6e
    5b0c:	bne	5b48 <addBinding+0x104>
    5b10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b14:	ldr	r3, [r3]
    5b18:	add	r3, r3, #4
    5b1c:	ldrb	r3, [r3]
    5b20:	cmp	r3, #115	; 0x73
    5b24:	bne	5b48 <addBinding+0x104>
    5b28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b2c:	ldr	r3, [r3]
    5b30:	add	r3, r3, #5
    5b34:	ldrb	r3, [r3]
    5b38:	cmp	r3, #0
    5b3c:	bne	5b48 <addBinding+0x104>
    5b40:	mov	r3, #39	; 0x27
    5b44:	b	5f68 <addBinding+0x524>
    5b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b4c:	ldr	r3, [r3]
    5b50:	add	r3, r3, #3
    5b54:	ldrb	r3, [r3]
    5b58:	cmp	r3, #0
    5b5c:	bne	5b68 <addBinding+0x124>
    5b60:	mov	r3, #1
    5b64:	strb	r3, [fp, #-5]
    5b68:	mov	r3, #0
    5b6c:	str	r3, [fp, #-16]
    5b70:	b	5c3c <addBinding+0x1f8>
    5b74:	ldrb	r3, [fp, #-6]
    5b78:	cmp	r3, #0
    5b7c:	beq	5bcc <addBinding+0x188>
    5b80:	movw	r3, #0
    5b84:	movt	r3, #0
    5b88:	ldr	r3, [r3]
    5b8c:	ldr	r2, [fp, #-16]
    5b90:	cmp	r2, r3
    5b94:	bgt	5bc4 <addBinding+0x180>
    5b98:	ldr	r3, [fp, #-16]
    5b9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5ba0:	add	r3, r2, r3
    5ba4:	ldrb	r2, [r3]
    5ba8:	movw	r3, #0
    5bac:	movt	r3, #0
    5bb0:	ldr	r1, [fp, #-16]
    5bb4:	add	r3, r3, r1
    5bb8:	ldrb	r3, [r3]
    5bbc:	cmp	r2, r3
    5bc0:	beq	5bcc <addBinding+0x188>
    5bc4:	mov	r3, #0
    5bc8:	strb	r3, [fp, #-6]
    5bcc:	ldrb	r3, [fp, #-5]
    5bd0:	cmp	r3, #0
    5bd4:	bne	5c30 <addBinding+0x1ec>
    5bd8:	ldrb	r3, [fp, #-7]
    5bdc:	cmp	r3, #0
    5be0:	beq	5c30 <addBinding+0x1ec>
    5be4:	movw	r3, #0
    5be8:	movt	r3, #0
    5bec:	ldr	r3, [r3]
    5bf0:	ldr	r2, [fp, #-16]
    5bf4:	cmp	r2, r3
    5bf8:	bgt	5c28 <addBinding+0x1e4>
    5bfc:	ldr	r3, [fp, #-16]
    5c00:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5c04:	add	r3, r2, r3
    5c08:	ldrb	r2, [r3]
    5c0c:	movw	r3, #0
    5c10:	movt	r3, #0
    5c14:	ldr	r1, [fp, #-16]
    5c18:	add	r3, r3, r1
    5c1c:	ldrb	r3, [r3]
    5c20:	cmp	r2, r3
    5c24:	beq	5c30 <addBinding+0x1ec>
    5c28:	mov	r3, #0
    5c2c:	strb	r3, [fp, #-7]
    5c30:	ldr	r3, [fp, #-16]
    5c34:	add	r3, r3, #1
    5c38:	str	r3, [fp, #-16]
    5c3c:	ldr	r3, [fp, #-16]
    5c40:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5c44:	add	r3, r2, r3
    5c48:	ldrb	r3, [r3]
    5c4c:	cmp	r3, #0
    5c50:	bne	5b74 <addBinding+0x130>
    5c54:	ldrb	r3, [fp, #-6]
    5c58:	cmp	r3, #0
    5c5c:	beq	5c80 <addBinding+0x23c>
    5c60:	movw	r3, #0
    5c64:	movt	r3, #0
    5c68:	ldr	r3, [r3]
    5c6c:	ldr	r2, [fp, #-16]
    5c70:	cmp	r2, r3
    5c74:	bne	5c80 <addBinding+0x23c>
    5c78:	mov	r3, #1
    5c7c:	b	5c84 <addBinding+0x240>
    5c80:	mov	r3, #0
    5c84:	strb	r3, [fp, #-6]
    5c88:	ldrb	r3, [fp, #-7]
    5c8c:	cmp	r3, #0
    5c90:	beq	5cb4 <addBinding+0x270>
    5c94:	movw	r3, #0
    5c98:	movt	r3, #0
    5c9c:	ldr	r3, [r3]
    5ca0:	ldr	r2, [fp, #-16]
    5ca4:	cmp	r2, r3
    5ca8:	bne	5cb4 <addBinding+0x270>
    5cac:	mov	r3, #1
    5cb0:	b	5cb8 <addBinding+0x274>
    5cb4:	mov	r3, #0
    5cb8:	strb	r3, [fp, #-7]
    5cbc:	ldrb	r2, [fp, #-5]
    5cc0:	ldrb	r3, [fp, #-6]
    5cc4:	cmp	r2, r3
    5cc8:	beq	5ce8 <addBinding+0x2a4>
    5ccc:	ldrb	r3, [fp, #-5]
    5cd0:	cmp	r3, #0
    5cd4:	beq	5ce0 <addBinding+0x29c>
    5cd8:	mov	r3, #38	; 0x26
    5cdc:	b	5f68 <addBinding+0x524>
    5ce0:	mov	r3, #40	; 0x28
    5ce4:	b	5f68 <addBinding+0x524>
    5ce8:	ldrb	r3, [fp, #-7]
    5cec:	cmp	r3, #0
    5cf0:	beq	5cfc <addBinding+0x2b8>
    5cf4:	mov	r3, #40	; 0x28
    5cf8:	b	5f68 <addBinding+0x524>
    5cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d00:	ldrb	r3, [r3, #488]	; 0x1e8
    5d04:	cmp	r3, #0
    5d08:	beq	5d18 <addBinding+0x2d4>
    5d0c:	ldr	r3, [fp, #-16]
    5d10:	add	r3, r3, #1
    5d14:	str	r3, [fp, #-16]
    5d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d1c:	ldr	r3, [r3, #384]	; 0x180
    5d20:	cmp	r3, #0
    5d24:	beq	5db0 <addBinding+0x36c>
    5d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d2c:	ldr	r3, [r3, #384]	; 0x180
    5d30:	str	r3, [fp, #-12]
    5d34:	ldr	r3, [fp, #-12]
    5d38:	ldr	r3, [r3, #24]
    5d3c:	ldr	r2, [fp, #-16]
    5d40:	cmp	r2, r3
    5d44:	ble	5d9c <addBinding+0x358>
    5d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d4c:	ldr	r3, [r3, #16]
    5d50:	ldr	r2, [fp, #-12]
    5d54:	ldr	r0, [r2, #16]
    5d58:	ldr	r2, [fp, #-16]
    5d5c:	add	r2, r2, #24
    5d60:	mov	r1, r2
    5d64:	blx	r3
    5d68:	str	r0, [fp, #-20]	; 0xffffffec
    5d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5d70:	cmp	r3, #0
    5d74:	bne	5d80 <addBinding+0x33c>
    5d78:	mov	r3, #1
    5d7c:	b	5f68 <addBinding+0x524>
    5d80:	ldr	r3, [fp, #-12]
    5d84:	ldr	r2, [fp, #-20]	; 0xffffffec
    5d88:	str	r2, [r3, #16]
    5d8c:	ldr	r3, [fp, #-16]
    5d90:	add	r2, r3, #24
    5d94:	ldr	r3, [fp, #-12]
    5d98:	str	r2, [r3, #24]
    5d9c:	ldr	r3, [fp, #-12]
    5da0:	ldr	r2, [r3, #4]
    5da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5da8:	str	r2, [r3, #384]	; 0x180
    5dac:	b	5e34 <addBinding+0x3f0>
    5db0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5db4:	ldr	r3, [r3, #12]
    5db8:	mov	r0, #28
    5dbc:	blx	r3
    5dc0:	str	r0, [fp, #-12]
    5dc4:	ldr	r3, [fp, #-12]
    5dc8:	cmp	r3, #0
    5dcc:	bne	5dd8 <addBinding+0x394>
    5dd0:	mov	r3, #1
    5dd4:	b	5f68 <addBinding+0x524>
    5dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ddc:	ldr	r3, [r3, #12]
    5de0:	ldr	r2, [fp, #-16]
    5de4:	add	r2, r2, #24
    5de8:	mov	r0, r2
    5dec:	blx	r3
    5df0:	mov	r2, r0
    5df4:	ldr	r3, [fp, #-12]
    5df8:	str	r2, [r3, #16]
    5dfc:	ldr	r3, [fp, #-12]
    5e00:	ldr	r3, [r3, #16]
    5e04:	cmp	r3, #0
    5e08:	bne	5e24 <addBinding+0x3e0>
    5e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5e10:	ldr	r3, [r3, #20]
    5e14:	ldr	r0, [fp, #-12]
    5e18:	blx	r3
    5e1c:	mov	r3, #1
    5e20:	b	5f68 <addBinding+0x524>
    5e24:	ldr	r3, [fp, #-16]
    5e28:	add	r2, r3, #24
    5e2c:	ldr	r3, [fp, #-12]
    5e30:	str	r2, [r3, #24]
    5e34:	ldr	r3, [fp, #-12]
    5e38:	ldr	r2, [fp, #-16]
    5e3c:	str	r2, [r3, #20]
    5e40:	ldr	r3, [fp, #-12]
    5e44:	ldr	r3, [r3, #16]
    5e48:	ldr	r2, [fp, #-16]
    5e4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5e50:	mov	r0, r3
    5e54:	bl	0 <memcpy>
    5e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5e5c:	ldrb	r3, [r3, #488]	; 0x1e8
    5e60:	cmp	r3, #0
    5e64:	beq	5e88 <addBinding+0x444>
    5e68:	ldr	r3, [fp, #-12]
    5e6c:	ldr	r2, [r3, #16]
    5e70:	ldr	r3, [fp, #-16]
    5e74:	sub	r3, r3, #1
    5e78:	add	r3, r2, r3
    5e7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e80:	ldrb	r2, [r2, #488]	; 0x1e8
    5e84:	strb	r2, [r3]
    5e88:	ldr	r3, [fp, #-12]
    5e8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5e90:	str	r2, [r3]
    5e94:	ldr	r3, [fp, #-12]
    5e98:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5e9c:	str	r2, [r3, #12]
    5ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ea4:	ldr	r2, [r3, #4]
    5ea8:	ldr	r3, [fp, #-12]
    5eac:	str	r2, [r3, #8]
    5eb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5eb4:	ldrb	r3, [r3]
    5eb8:	cmp	r3, #0
    5ebc:	bne	5ee8 <addBinding+0x4a4>
    5ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ec4:	ldr	r3, [r3, #364]	; 0x16c
    5ec8:	add	r3, r3, #152	; 0x98
    5ecc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5ed0:	cmp	r2, r3
    5ed4:	bne	5ee8 <addBinding+0x4a4>
    5ed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5edc:	mov	r2, #0
    5ee0:	str	r2, [r3, #4]
    5ee4:	b	5ef4 <addBinding+0x4b0>
    5ee8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5eec:	ldr	r2, [fp, #-12]
    5ef0:	str	r2, [r3, #4]
    5ef4:	ldr	r3, [fp, #4]
    5ef8:	ldr	r2, [r3]
    5efc:	ldr	r3, [fp, #-12]
    5f00:	str	r2, [r3, #4]
    5f04:	ldr	r3, [fp, #4]
    5f08:	ldr	r2, [fp, #-12]
    5f0c:	str	r2, [r3]
    5f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5f14:	cmp	r3, #0
    5f18:	beq	5f64 <addBinding+0x520>
    5f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5f20:	ldr	r3, [r3, #108]	; 0x6c
    5f24:	cmp	r3, #0
    5f28:	beq	5f64 <addBinding+0x520>
    5f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5f30:	ldr	r3, [r3, #108]	; 0x6c
    5f34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f38:	ldr	r0, [r2, #4]
    5f3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5f40:	ldr	r1, [r2]
    5f44:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5f48:	ldr	r2, [r2, #4]
    5f4c:	cmp	r2, #0
    5f50:	beq	5f5c <addBinding+0x518>
    5f54:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5f58:	b	5f60 <addBinding+0x51c>
    5f5c:	mov	r2, #0
    5f60:	blx	r3
    5f64:	mov	r3, #0
    5f68:	mov	r0, r3
    5f6c:	sub	sp, fp, #4
    5f70:	ldr	fp, [sp]
    5f74:	add	sp, sp, #4
    5f78:	pop	{pc}		; (ldr pc, [sp], #4)

00005f7c <cdataSectionProcessor>:
    5f7c:	str	fp, [sp, #-8]!
    5f80:	str	lr, [sp, #4]
    5f84:	add	fp, sp, #4
    5f88:	sub	sp, sp, #32
    5f8c:	str	r0, [fp, #-16]
    5f90:	str	r1, [fp, #-20]	; 0xffffffec
    5f94:	str	r2, [fp, #-24]	; 0xffffffe8
    5f98:	str	r3, [fp, #-28]	; 0xffffffe4
    5f9c:	ldr	r3, [fp, #-16]
    5fa0:	ldr	r1, [r3, #152]	; 0x98
    5fa4:	ldr	r3, [fp, #-16]
    5fa8:	ldrb	r3, [r3, #500]	; 0x1f4
    5fac:	cmp	r3, #0
    5fb0:	moveq	r3, #1
    5fb4:	movne	r3, #0
    5fb8:	uxtb	r3, r3
    5fbc:	sub	r2, fp, #20
    5fc0:	str	r3, [sp, #4]
    5fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5fc8:	str	r3, [sp]
    5fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5fd0:	ldr	r0, [fp, #-16]
    5fd4:	bl	607c <doCdataSection>
    5fd8:	str	r0, [fp, #-8]
    5fdc:	ldr	r3, [fp, #-8]
    5fe0:	cmp	r3, #0
    5fe4:	beq	5ff0 <cdataSectionProcessor+0x74>
    5fe8:	ldr	r3, [fp, #-8]
    5fec:	b	6068 <cdataSectionProcessor+0xec>
    5ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
    5ff4:	cmp	r3, #0
    5ff8:	beq	6064 <cdataSectionProcessor+0xe8>
    5ffc:	ldr	r3, [fp, #-16]
    6000:	ldr	r3, [r3, #492]	; 0x1ec
    6004:	cmp	r3, #0
    6008:	beq	6038 <cdataSectionProcessor+0xbc>
    600c:	ldr	r2, [fp, #-16]
    6010:	movw	r3, #0
    6014:	movt	r3, #0
    6018:	str	r3, [r2, #288]	; 0x120
    601c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6020:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6024:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6028:	ldr	r0, [fp, #-16]
    602c:	bl	32a0 <externalEntityContentProcessor>
    6030:	mov	r3, r0
    6034:	b	6068 <cdataSectionProcessor+0xec>
    6038:	ldr	r2, [fp, #-16]
    603c:	movw	r3, #0
    6040:	movt	r3, #0
    6044:	str	r3, [r2, #288]	; 0x120
    6048:	ldr	r1, [fp, #-20]	; 0xffffffec
    604c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6050:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6054:	ldr	r0, [fp, #-16]
    6058:	bl	2e6c <contentProcessor>
    605c:	mov	r3, r0
    6060:	b	6068 <cdataSectionProcessor+0xec>
    6064:	ldr	r3, [fp, #-8]
    6068:	mov	r0, r3
    606c:	sub	sp, fp, #4
    6070:	ldr	fp, [sp]
    6074:	add	sp, sp, #4
    6078:	pop	{pc}		; (ldr pc, [sp], #4)

0000607c <doCdataSection>:
    607c:	str	r4, [sp, #-12]!
    6080:	str	fp, [sp, #4]
    6084:	str	lr, [sp, #8]
    6088:	add	fp, sp, #8
    608c:	sub	sp, sp, #60	; 0x3c
    6090:	str	r0, [fp, #-48]	; 0xffffffd0
    6094:	str	r1, [fp, #-52]	; 0xffffffcc
    6098:	str	r2, [fp, #-56]	; 0xffffffc8
    609c:	str	r3, [fp, #-60]	; 0xffffffc4
    60a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    60a4:	ldr	r3, [r3]
    60a8:	str	r3, [fp, #-32]	; 0xffffffe0
    60ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60b0:	ldr	r3, [r3, #152]	; 0x98
    60b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    60b8:	cmp	r2, r3
    60bc:	bne	60e8 <doCdataSection+0x6c>
    60c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60c4:	add	r3, r3, #296	; 0x128
    60c8:	str	r3, [fp, #-16]
    60cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    60d0:	ldr	r3, [fp, #-16]
    60d4:	str	r2, [r3]
    60d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60dc:	add	r3, r3, #300	; 0x12c
    60e0:	str	r3, [fp, #-20]	; 0xffffffec
    60e4:	b	6104 <doCdataSection+0x88>
    60e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60ec:	ldr	r3, [r3, #308]	; 0x134
    60f0:	str	r3, [fp, #-16]
    60f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60f8:	ldr	r3, [r3, #308]	; 0x134
    60fc:	add	r3, r3, #4
    6100:	str	r3, [fp, #-20]	; 0xffffffec
    6104:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6108:	ldr	r3, [fp, #-16]
    610c:	str	r2, [r3]
    6110:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6114:	mov	r2, #0
    6118:	str	r2, [r3]
    611c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6120:	ldr	r4, [r3, #8]
    6124:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6128:	sub	r3, fp, #36	; 0x24
    612c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6130:	ldr	r0, [fp, #-52]	; 0xffffffcc
    6134:	blx	r4
    6138:	str	r0, [fp, #-24]	; 0xffffffe8
    613c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6140:	ldr	r3, [fp, #-20]	; 0xffffffec
    6144:	str	r2, [r3]
    6148:	ldr	r3, [fp, #-24]	; 0xffffffe8
    614c:	add	r3, r3, #4
    6150:	cmp	r3, #44	; 0x2c
    6154:	ldrls	pc, [pc, r3, lsl #2]
    6158:	b	645c <doCdataSection+0x3e0>
    615c:	.word	0x00006434
    6160:	.word	0x0000645c
    6164:	.word	0x0000640c
    6168:	.word	0x00006434
    616c:	.word	0x000063f8
    6170:	.word	0x0000645c
    6174:	.word	0x0000645c
    6178:	.word	0x0000645c
    617c:	.word	0x0000645c
    6180:	.word	0x0000645c
    6184:	.word	0x000062f8
    6188:	.word	0x00006298
    618c:	.word	0x0000645c
    6190:	.word	0x0000645c
    6194:	.word	0x0000645c
    6198:	.word	0x0000645c
    619c:	.word	0x0000645c
    61a0:	.word	0x0000645c
    61a4:	.word	0x0000645c
    61a8:	.word	0x0000645c
    61ac:	.word	0x0000645c
    61b0:	.word	0x0000645c
    61b4:	.word	0x0000645c
    61b8:	.word	0x0000645c
    61bc:	.word	0x0000645c
    61c0:	.word	0x0000645c
    61c4:	.word	0x0000645c
    61c8:	.word	0x0000645c
    61cc:	.word	0x0000645c
    61d0:	.word	0x0000645c
    61d4:	.word	0x0000645c
    61d8:	.word	0x0000645c
    61dc:	.word	0x0000645c
    61e0:	.word	0x0000645c
    61e4:	.word	0x0000645c
    61e8:	.word	0x0000645c
    61ec:	.word	0x0000645c
    61f0:	.word	0x0000645c
    61f4:	.word	0x0000645c
    61f8:	.word	0x0000645c
    61fc:	.word	0x0000645c
    6200:	.word	0x0000645c
    6204:	.word	0x0000645c
    6208:	.word	0x0000645c
    620c:	.word	0x00006210
    6210:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6214:	ldr	r3, [r3, #84]	; 0x54
    6218:	cmp	r3, #0
    621c:	beq	623c <doCdataSection+0x1c0>
    6220:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6224:	ldr	r3, [r3, #84]	; 0x54
    6228:	ldr	r2, [fp, #-48]	; 0xffffffd0
    622c:	ldr	r2, [r2, #4]
    6230:	mov	r0, r2
    6234:	blx	r3
    6238:	b	6260 <doCdataSection+0x1e4>
    623c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6240:	ldr	r3, [r3, #88]	; 0x58
    6244:	cmp	r3, #0
    6248:	beq	6260 <doCdataSection+0x1e4>
    624c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6250:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6254:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6258:	ldr	r0, [fp, #-48]	; 0xffffffd0
    625c:	bl	bb70 <reportDefault>
    6260:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6264:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6268:	str	r2, [r3]
    626c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6270:	ldr	r3, [fp, #4]
    6274:	str	r2, [r3]
    6278:	ldr	r3, [fp, #-48]	; 0xffffffd0
    627c:	ldr	r3, [r3, #496]	; 0x1f0
    6280:	cmp	r3, #2
    6284:	bne	6290 <doCdataSection+0x214>
    6288:	mov	r3, #35	; 0x23
    628c:	b	64c0 <doCdataSection+0x444>
    6290:	mov	r3, #0
    6294:	b	64c0 <doCdataSection+0x444>
    6298:	ldr	r3, [fp, #-48]	; 0xffffffd0
    629c:	ldr	r3, [r3, #68]	; 0x44
    62a0:	cmp	r3, #0
    62a4:	beq	62d0 <doCdataSection+0x254>
    62a8:	mov	r3, #10
    62ac:	strb	r3, [fp, #-37]	; 0xffffffdb
    62b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    62b4:	ldr	r3, [r3, #68]	; 0x44
    62b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    62bc:	ldr	r0, [r2, #4]
    62c0:	sub	r1, fp, #37	; 0x25
    62c4:	mov	r2, #1
    62c8:	blx	r3
    62cc:	b	6470 <doCdataSection+0x3f4>
    62d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    62d4:	ldr	r3, [r3, #88]	; 0x58
    62d8:	cmp	r3, #0
    62dc:	beq	6470 <doCdataSection+0x3f4>
    62e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    62e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    62e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    62ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    62f0:	bl	bb70 <reportDefault>
    62f4:	b	6470 <doCdataSection+0x3f4>
    62f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    62fc:	ldr	r3, [r3, #68]	; 0x44
    6300:	str	r3, [fp, #-28]	; 0xffffffe4
    6304:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6308:	cmp	r3, #0
    630c:	beq	63d0 <doCdataSection+0x354>
    6310:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6314:	ldrb	r3, [r3, #72]	; 0x48
    6318:	cmp	r3, #0
    631c:	bne	63ac <doCdataSection+0x330>
    6320:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6324:	ldr	r3, [r3, #52]	; 0x34
    6328:	str	r3, [fp, #-44]	; 0xffffffd4
    632c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6330:	ldr	r4, [r3, #60]	; 0x3c
    6334:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6338:	ldr	r3, [fp, #-48]	; 0xffffffd0
    633c:	ldr	r3, [r3, #56]	; 0x38
    6340:	sub	r0, fp, #44	; 0x2c
    6344:	sub	r1, fp, #32
    6348:	str	r3, [sp]
    634c:	mov	r3, r0
    6350:	ldr	r0, [fp, #-52]	; 0xffffffcc
    6354:	blx	r4
    6358:	ldr	r2, [fp, #-36]	; 0xffffffdc
    635c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6360:	str	r2, [r3]
    6364:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6368:	ldr	r0, [r3, #4]
    636c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6370:	ldr	r1, [r3, #52]	; 0x34
    6374:	ldr	r2, [fp, #-44]	; 0xffffffd4
    6378:	ldr	r3, [fp, #-48]	; 0xffffffd0
    637c:	ldr	r3, [r3, #52]	; 0x34
    6380:	sub	r2, r2, r3
    6384:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6388:	blx	r3
    638c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6390:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6394:	cmp	r2, r3
    6398:	beq	6478 <doCdataSection+0x3fc>
    639c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    63a0:	ldr	r3, [fp, #-16]
    63a4:	str	r2, [r3]
    63a8:	b	6320 <doCdataSection+0x2a4>
    63ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    63b0:	ldr	r0, [r3, #4]
    63b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    63b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    63bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    63c0:	sub	r2, r2, r3
    63c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    63c8:	blx	r3
    63cc:	b	6478 <doCdataSection+0x3fc>
    63d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    63d4:	ldr	r3, [r3, #88]	; 0x58
    63d8:	cmp	r3, #0
    63dc:	beq	6478 <doCdataSection+0x3fc>
    63e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    63e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    63ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    63f0:	bl	bb70 <reportDefault>
    63f4:	b	6478 <doCdataSection+0x3fc>
    63f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    63fc:	ldr	r3, [fp, #-16]
    6400:	str	r2, [r3]
    6404:	mov	r3, #4
    6408:	b	64c0 <doCdataSection+0x444>
    640c:	ldrb	r3, [fp, #8]
    6410:	cmp	r3, #0
    6414:	beq	642c <doCdataSection+0x3b0>
    6418:	ldr	r2, [fp, #-32]	; 0xffffffe0
    641c:	ldr	r3, [fp, #4]
    6420:	str	r2, [r3]
    6424:	mov	r3, #0
    6428:	b	64c0 <doCdataSection+0x444>
    642c:	mov	r3, #6
    6430:	b	64c0 <doCdataSection+0x444>
    6434:	ldrb	r3, [fp, #8]
    6438:	cmp	r3, #0
    643c:	beq	6454 <doCdataSection+0x3d8>
    6440:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6444:	ldr	r3, [fp, #4]
    6448:	str	r2, [r3]
    644c:	mov	r3, #0
    6450:	b	64c0 <doCdataSection+0x444>
    6454:	mov	r3, #20
    6458:	b	64c0 <doCdataSection+0x444>
    645c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6460:	ldr	r3, [fp, #-16]
    6464:	str	r2, [r3]
    6468:	mov	r3, #23
    646c:	b	64c0 <doCdataSection+0x444>
    6470:	nop	{0}
    6474:	b	647c <doCdataSection+0x400>
    6478:	nop	{0}
    647c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6480:	str	r3, [fp, #-32]	; 0xffffffe0
    6484:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6488:	ldr	r3, [fp, #-16]
    648c:	str	r2, [r3]
    6490:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6494:	ldr	r3, [r3, #496]	; 0x1f0
    6498:	cmp	r3, #2
    649c:	beq	64bc <doCdataSection+0x440>
    64a0:	cmp	r3, #3
    64a4:	bne	611c <doCdataSection+0xa0>
    64a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    64ac:	ldr	r3, [fp, #4]
    64b0:	str	r2, [r3]
    64b4:	mov	r3, #0
    64b8:	b	64c0 <doCdataSection+0x444>
    64bc:	mov	r3, #35	; 0x23
    64c0:	mov	r0, r3
    64c4:	sub	sp, fp, #8
    64c8:	ldr	r4, [sp]
    64cc:	ldr	fp, [sp, #4]
    64d0:	add	sp, sp, #8
    64d4:	pop	{pc}		; (ldr pc, [sp], #4)

000064d8 <ignoreSectionProcessor>:
    64d8:	str	fp, [sp, #-8]!
    64dc:	str	lr, [sp, #4]
    64e0:	add	fp, sp, #4
    64e4:	sub	sp, sp, #32
    64e8:	str	r0, [fp, #-16]
    64ec:	str	r1, [fp, #-20]	; 0xffffffec
    64f0:	str	r2, [fp, #-24]	; 0xffffffe8
    64f4:	str	r3, [fp, #-28]	; 0xffffffe4
    64f8:	ldr	r3, [fp, #-16]
    64fc:	ldr	r1, [r3, #152]	; 0x98
    6500:	ldr	r3, [fp, #-16]
    6504:	ldrb	r3, [r3, #500]	; 0x1f4
    6508:	cmp	r3, #0
    650c:	moveq	r3, #1
    6510:	movne	r3, #0
    6514:	uxtb	r3, r3
    6518:	sub	r2, fp, #20
    651c:	str	r3, [sp, #4]
    6520:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6524:	str	r3, [sp]
    6528:	ldr	r3, [fp, #-24]	; 0xffffffe8
    652c:	ldr	r0, [fp, #-16]
    6530:	bl	659c <doIgnoreSection>
    6534:	str	r0, [fp, #-8]
    6538:	ldr	r3, [fp, #-8]
    653c:	cmp	r3, #0
    6540:	beq	654c <ignoreSectionProcessor+0x74>
    6544:	ldr	r3, [fp, #-8]
    6548:	b	6588 <ignoreSectionProcessor+0xb0>
    654c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6550:	cmp	r3, #0
    6554:	beq	6584 <ignoreSectionProcessor+0xac>
    6558:	ldr	r2, [fp, #-16]
    655c:	movw	r3, #0
    6560:	movt	r3, #0
    6564:	str	r3, [r2, #288]	; 0x120
    6568:	ldr	r1, [fp, #-20]	; 0xffffffec
    656c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6570:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6574:	ldr	r0, [fp, #-16]
    6578:	bl	745c <prologProcessor>
    657c:	mov	r3, r0
    6580:	b	6588 <ignoreSectionProcessor+0xb0>
    6584:	ldr	r3, [fp, #-8]
    6588:	mov	r0, r3
    658c:	sub	sp, fp, #4
    6590:	ldr	fp, [sp]
    6594:	add	sp, sp, #4
    6598:	pop	{pc}		; (ldr pc, [sp], #4)

0000659c <doIgnoreSection>:
    659c:	str	r4, [sp, #-12]!
    65a0:	str	fp, [sp, #4]
    65a4:	str	lr, [sp, #8]
    65a8:	add	fp, sp, #8
    65ac:	sub	sp, sp, #44	; 0x2c
    65b0:	str	r0, [fp, #-40]	; 0xffffffd8
    65b4:	str	r1, [fp, #-44]	; 0xffffffd4
    65b8:	str	r2, [fp, #-48]	; 0xffffffd0
    65bc:	str	r3, [fp, #-52]	; 0xffffffcc
    65c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    65c4:	ldr	r3, [r3]
    65c8:	str	r3, [fp, #-24]	; 0xffffffe8
    65cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    65d0:	ldr	r3, [r3, #152]	; 0x98
    65d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    65d8:	cmp	r2, r3
    65dc:	bne	6608 <doIgnoreSection+0x6c>
    65e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    65e4:	add	r3, r3, #296	; 0x128
    65e8:	str	r3, [fp, #-16]
    65ec:	ldr	r3, [fp, #-16]
    65f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    65f4:	str	r2, [r3]
    65f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    65fc:	add	r3, r3, #300	; 0x12c
    6600:	str	r3, [fp, #-20]	; 0xffffffec
    6604:	b	6624 <doIgnoreSection+0x88>
    6608:	ldr	r3, [fp, #-40]	; 0xffffffd8
    660c:	ldr	r3, [r3, #308]	; 0x134
    6610:	str	r3, [fp, #-16]
    6614:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6618:	ldr	r3, [r3, #308]	; 0x134
    661c:	add	r3, r3, #4
    6620:	str	r3, [fp, #-20]	; 0xffffffec
    6624:	ldr	r3, [fp, #-16]
    6628:	ldr	r2, [fp, #-24]	; 0xffffffe8
    662c:	str	r2, [r3]
    6630:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6634:	mov	r2, #0
    6638:	str	r2, [r3]
    663c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6640:	ldr	r4, [r3, #12]
    6644:	sub	r3, fp, #32
    6648:	ldr	r2, [fp, #-52]	; 0xffffffcc
    664c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6650:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6654:	blx	r4
    6658:	str	r0, [fp, #-28]	; 0xffffffe4
    665c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6660:	ldr	r3, [fp, #-20]	; 0xffffffec
    6664:	str	r2, [r3]
    6668:	ldr	r3, [fp, #-28]	; 0xffffffe4
    666c:	add	r3, r3, #4
    6670:	cmp	r3, #46	; 0x2e
    6674:	ldrls	pc, [pc, r3, lsl #2]
    6678:	b	67f8 <doIgnoreSection+0x25c>
    667c:	.word	0x000067d0
    6680:	.word	0x000067f8
    6684:	.word	0x000067a8
    6688:	.word	0x000067d0
    668c:	.word	0x00006794
    6690:	.word	0x000067f8
    6694:	.word	0x000067f8
    6698:	.word	0x000067f8
    669c:	.word	0x000067f8
    66a0:	.word	0x000067f8
    66a4:	.word	0x000067f8
    66a8:	.word	0x000067f8
    66ac:	.word	0x000067f8
    66b0:	.word	0x000067f8
    66b4:	.word	0x000067f8
    66b8:	.word	0x000067f8
    66bc:	.word	0x000067f8
    66c0:	.word	0x000067f8
    66c4:	.word	0x000067f8
    66c8:	.word	0x000067f8
    66cc:	.word	0x000067f8
    66d0:	.word	0x000067f8
    66d4:	.word	0x000067f8
    66d8:	.word	0x000067f8
    66dc:	.word	0x000067f8
    66e0:	.word	0x000067f8
    66e4:	.word	0x000067f8
    66e8:	.word	0x000067f8
    66ec:	.word	0x000067f8
    66f0:	.word	0x000067f8
    66f4:	.word	0x000067f8
    66f8:	.word	0x000067f8
    66fc:	.word	0x000067f8
    6700:	.word	0x000067f8
    6704:	.word	0x000067f8
    6708:	.word	0x000067f8
    670c:	.word	0x000067f8
    6710:	.word	0x000067f8
    6714:	.word	0x000067f8
    6718:	.word	0x000067f8
    671c:	.word	0x000067f8
    6720:	.word	0x000067f8
    6724:	.word	0x000067f8
    6728:	.word	0x000067f8
    672c:	.word	0x000067f8
    6730:	.word	0x000067f8
    6734:	.word	0x00006738
    6738:	ldr	r3, [fp, #-40]	; 0xffffffd8
    673c:	ldr	r3, [r3, #88]	; 0x58
    6740:	cmp	r3, #0
    6744:	beq	675c <doIgnoreSection+0x1c0>
    6748:	ldr	r3, [fp, #-32]	; 0xffffffe0
    674c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6750:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6754:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6758:	bl	bb70 <reportDefault>
    675c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6760:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6764:	str	r2, [r3]
    6768:	ldr	r2, [fp, #-32]	; 0xffffffe0
    676c:	ldr	r3, [fp, #4]
    6770:	str	r2, [r3]
    6774:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6778:	ldr	r3, [r3, #496]	; 0x1f0
    677c:	cmp	r3, #2
    6780:	bne	678c <doIgnoreSection+0x1f0>
    6784:	mov	r3, #35	; 0x23
    6788:	b	6808 <doIgnoreSection+0x26c>
    678c:	mov	r3, #0
    6790:	b	6808 <doIgnoreSection+0x26c>
    6794:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6798:	ldr	r3, [fp, #-16]
    679c:	str	r2, [r3]
    67a0:	mov	r3, #4
    67a4:	b	6808 <doIgnoreSection+0x26c>
    67a8:	ldrb	r3, [fp, #8]
    67ac:	cmp	r3, #0
    67b0:	beq	67c8 <doIgnoreSection+0x22c>
    67b4:	ldr	r3, [fp, #4]
    67b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67bc:	str	r2, [r3]
    67c0:	mov	r3, #0
    67c4:	b	6808 <doIgnoreSection+0x26c>
    67c8:	mov	r3, #6
    67cc:	b	6808 <doIgnoreSection+0x26c>
    67d0:	ldrb	r3, [fp, #8]
    67d4:	cmp	r3, #0
    67d8:	beq	67f0 <doIgnoreSection+0x254>
    67dc:	ldr	r3, [fp, #4]
    67e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67e4:	str	r2, [r3]
    67e8:	mov	r3, #0
    67ec:	b	6808 <doIgnoreSection+0x26c>
    67f0:	mov	r3, #2
    67f4:	b	6808 <doIgnoreSection+0x26c>
    67f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    67fc:	ldr	r3, [fp, #-16]
    6800:	str	r2, [r3]
    6804:	mov	r3, #23
    6808:	mov	r0, r3
    680c:	sub	sp, fp, #8
    6810:	ldr	r4, [sp]
    6814:	ldr	fp, [sp, #4]
    6818:	add	sp, sp, #8
    681c:	pop	{pc}		; (ldr pc, [sp], #4)

00006820 <initializeEncoding>:
    6820:	str	fp, [sp, #-8]!
    6824:	str	lr, [sp, #4]
    6828:	add	fp, sp, #4
    682c:	sub	sp, sp, #16
    6830:	str	r0, [fp, #-16]
    6834:	ldr	r3, [fp, #-16]
    6838:	ldr	r3, [r3, #240]	; 0xf0
    683c:	str	r3, [fp, #-8]
    6840:	ldr	r3, [fp, #-16]
    6844:	ldrb	r3, [r3, #244]	; 0xf4
    6848:	cmp	r3, #0
    684c:	beq	685c <initializeEncoding+0x3c>
    6850:	movw	r3, #0
    6854:	movt	r3, #0
    6858:	b	6864 <initializeEncoding+0x44>
    685c:	movw	r3, #0
    6860:	movt	r3, #0
    6864:	ldr	r2, [fp, #-16]
    6868:	add	r0, r2, #156	; 0x9c
    686c:	ldr	r2, [fp, #-16]
    6870:	add	r1, r2, #152	; 0x98
    6874:	ldr	r2, [fp, #-8]
    6878:	blx	r3
    687c:	mov	r3, r0
    6880:	cmp	r3, #0
    6884:	beq	6890 <initializeEncoding+0x70>
    6888:	mov	r3, #0
    688c:	b	68a8 <initializeEncoding+0x88>
    6890:	ldr	r3, [fp, #-16]
    6894:	ldr	r3, [r3, #240]	; 0xf0
    6898:	mov	r1, r3
    689c:	ldr	r0, [fp, #-16]
    68a0:	bl	6c8c <handleUnknownEncoding>
    68a4:	mov	r3, r0
    68a8:	mov	r0, r3
    68ac:	sub	sp, fp, #4
    68b0:	ldr	fp, [sp]
    68b4:	add	sp, sp, #4
    68b8:	pop	{pc}		; (ldr pc, [sp], #4)

000068bc <processXmlDecl>:
    68bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    68c0:	strd	r6, [sp, #8]
    68c4:	str	fp, [sp, #16]
    68c8:	str	lr, [sp, #20]
    68cc:	add	fp, sp, #20
    68d0:	sub	sp, sp, #72	; 0x48
    68d4:	str	r0, [fp, #-56]	; 0xffffffc8
    68d8:	str	r1, [fp, #-60]	; 0xffffffc4
    68dc:	str	r2, [fp, #-64]	; 0xffffffc0
    68e0:	str	r3, [fp, #-68]	; 0xffffffbc
    68e4:	mov	r3, #0
    68e8:	str	r3, [fp, #-36]	; 0xffffffdc
    68ec:	mov	r3, #0
    68f0:	str	r3, [fp, #-24]	; 0xffffffe8
    68f4:	mov	r3, #0
    68f8:	str	r3, [fp, #-40]	; 0xffffffd8
    68fc:	mov	r3, #0
    6900:	str	r3, [fp, #-44]	; 0xffffffd4
    6904:	mov	r3, #0
    6908:	str	r3, [fp, #-28]	; 0xffffffe4
    690c:	mvn	r3, #0
    6910:	str	r3, [fp, #-52]	; 0xffffffcc
    6914:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6918:	ldrb	r3, [r3, #244]	; 0xf4
    691c:	cmp	r3, #0
    6920:	beq	6930 <processXmlDecl+0x74>
    6924:	movw	r4, #0
    6928:	movt	r4, #0
    692c:	b	6938 <processXmlDecl+0x7c>
    6930:	movw	r4, #0
    6934:	movt	r4, #0
    6938:	ldr	r3, [fp, #-56]	; 0xffffffc8
    693c:	ldr	r1, [r3, #152]	; 0x98
    6940:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6944:	add	r3, r3, #296	; 0x128
    6948:	sub	r2, fp, #52	; 0x34
    694c:	str	r2, [sp, #20]
    6950:	sub	r2, fp, #40	; 0x28
    6954:	str	r2, [sp, #16]
    6958:	sub	r2, fp, #36	; 0x24
    695c:	str	r2, [sp, #12]
    6960:	sub	r2, fp, #48	; 0x30
    6964:	str	r2, [sp, #8]
    6968:	sub	r2, fp, #44	; 0x2c
    696c:	str	r2, [sp, #4]
    6970:	str	r3, [sp]
    6974:	ldr	r3, [fp, #-68]	; 0xffffffbc
    6978:	ldr	r2, [fp, #-64]	; 0xffffffc0
    697c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    6980:	blx	r4
    6984:	mov	r3, r0
    6988:	cmp	r3, #0
    698c:	bne	69ac <processXmlDecl+0xf0>
    6990:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6994:	cmp	r3, #0
    6998:	beq	69a4 <processXmlDecl+0xe8>
    699c:	mov	r3, #31
    69a0:	b	6c70 <processXmlDecl+0x3b4>
    69a4:	mov	r3, #30
    69a8:	b	6c70 <processXmlDecl+0x3b4>
    69ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    69b0:	cmp	r3, #0
    69b4:	bne	69f0 <processXmlDecl+0x134>
    69b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    69bc:	cmp	r3, #1
    69c0:	bne	69f0 <processXmlDecl+0x134>
    69c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    69c8:	ldr	r3, [r3, #364]	; 0x16c
    69cc:	mov	r2, #1
    69d0:	strb	r2, [r3, #130]	; 0x82
    69d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    69d8:	ldr	r3, [r3, #508]	; 0x1fc
    69dc:	cmp	r3, #1
    69e0:	bne	69f0 <processXmlDecl+0x134>
    69e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    69e8:	mov	r2, #0
    69ec:	str	r2, [r3, #508]	; 0x1fc
    69f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    69f4:	ldr	r3, [r3, #148]	; 0x94
    69f8:	cmp	r3, #0
    69fc:	beq	6b00 <processXmlDecl+0x244>
    6a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6a04:	cmp	r3, #0
    6a08:	beq	6a84 <processXmlDecl+0x1c8>
    6a0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a10:	add	r5, r3, #456	; 0x1c8
    6a14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a18:	ldr	r6, [r3, #152]	; 0x98
    6a1c:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6a20:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6a24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a28:	ldr	r3, [r3, #152]	; 0x98
    6a2c:	ldr	r3, [r3, #32]
    6a30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    6a34:	ldr	r2, [r2, #152]	; 0x98
    6a38:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6a3c:	mov	r0, r2
    6a40:	blx	r3
    6a44:	mov	r3, r0
    6a48:	add	r3, r4, r3
    6a4c:	mov	r2, r7
    6a50:	mov	r1, r6
    6a54:	mov	r0, r5
    6a58:	bl	edc8 <poolStoreString>
    6a5c:	str	r0, [fp, #-24]	; 0xffffffe8
    6a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6a64:	cmp	r3, #0
    6a68:	bne	6a74 <processXmlDecl+0x1b8>
    6a6c:	mov	r3, #1
    6a70:	b	6c70 <processXmlDecl+0x3b4>
    6a74:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a78:	ldr	r2, [r3, #468]	; 0x1d4
    6a7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a80:	str	r2, [r3, #472]	; 0x1d8
    6a84:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a88:	cmp	r3, #0
    6a8c:	beq	6adc <processXmlDecl+0x220>
    6a90:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a94:	add	r0, r3, #456	; 0x1c8
    6a98:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a9c:	ldr	r1, [r3, #152]	; 0x98
    6aa0:	ldr	ip, [fp, #-44]	; 0xffffffd4
    6aa4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    6aa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6aac:	ldr	r3, [r3, #152]	; 0x98
    6ab0:	ldr	r3, [r3, #68]	; 0x44
    6ab4:	rsb	r3, r3, #0
    6ab8:	add	r3, r2, r3
    6abc:	mov	r2, ip
    6ac0:	bl	edc8 <poolStoreString>
    6ac4:	str	r0, [fp, #-28]	; 0xffffffe4
    6ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6acc:	cmp	r3, #0
    6ad0:	bne	6adc <processXmlDecl+0x220>
    6ad4:	mov	r3, #1
    6ad8:	b	6c70 <processXmlDecl+0x3b4>
    6adc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6ae0:	ldr	r4, [r3, #148]	; 0x94
    6ae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6ae8:	ldr	r0, [r3, #4]
    6aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6af0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6af4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6af8:	blx	r4
    6afc:	b	6b28 <processXmlDecl+0x26c>
    6b00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b04:	ldr	r3, [r3, #88]	; 0x58
    6b08:	cmp	r3, #0
    6b0c:	beq	6b28 <processXmlDecl+0x26c>
    6b10:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b14:	ldr	r1, [r3, #152]	; 0x98
    6b18:	ldr	r3, [fp, #-68]	; 0xffffffbc
    6b1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6b20:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6b24:	bl	bb70 <reportDefault>
    6b28:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b2c:	ldr	r3, [r3, #240]	; 0xf0
    6b30:	cmp	r3, #0
    6b34:	bne	6c44 <processXmlDecl+0x388>
    6b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6b3c:	cmp	r3, #0
    6b40:	beq	6b84 <processXmlDecl+0x2c8>
    6b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6b48:	ldr	r2, [r3, #68]	; 0x44
    6b4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b50:	ldr	r3, [r3, #152]	; 0x98
    6b54:	ldr	r3, [r3, #68]	; 0x44
    6b58:	cmp	r2, r3
    6b5c:	beq	6b74 <processXmlDecl+0x2b8>
    6b60:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6b64:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b68:	str	r2, [r3, #296]	; 0x128
    6b6c:	mov	r3, #19
    6b70:	b	6c70 <processXmlDecl+0x3b4>
    6b74:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6b7c:	str	r2, [r3, #152]	; 0x98
    6b80:	b	6c44 <processXmlDecl+0x388>
    6b84:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6b88:	cmp	r3, #0
    6b8c:	beq	6c44 <processXmlDecl+0x388>
    6b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6b94:	cmp	r3, #0
    6b98:	bne	6c04 <processXmlDecl+0x348>
    6b9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6ba0:	add	r5, r3, #456	; 0x1c8
    6ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6ba8:	ldr	r6, [r3, #152]	; 0x98
    6bac:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6bb0:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6bb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6bb8:	ldr	r3, [r3, #152]	; 0x98
    6bbc:	ldr	r3, [r3, #32]
    6bc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    6bc4:	ldr	r2, [r2, #152]	; 0x98
    6bc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6bcc:	mov	r0, r2
    6bd0:	blx	r3
    6bd4:	mov	r3, r0
    6bd8:	add	r3, r4, r3
    6bdc:	mov	r2, r7
    6be0:	mov	r1, r6
    6be4:	mov	r0, r5
    6be8:	bl	edc8 <poolStoreString>
    6bec:	str	r0, [fp, #-24]	; 0xffffffe8
    6bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6bf4:	cmp	r3, #0
    6bf8:	bne	6c04 <processXmlDecl+0x348>
    6bfc:	mov	r3, #1
    6c00:	b	6c70 <processXmlDecl+0x3b4>
    6c04:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6c08:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6c0c:	bl	6c8c <handleUnknownEncoding>
    6c10:	str	r0, [fp, #-32]	; 0xffffffe0
    6c14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6c18:	add	r3, r3, #456	; 0x1c8
    6c1c:	mov	r0, r3
    6c20:	bl	e8f8 <poolClear>
    6c24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6c28:	cmp	r3, #18
    6c2c:	bne	6c3c <processXmlDecl+0x380>
    6c30:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6c34:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6c38:	str	r2, [r3, #296]	; 0x128
    6c3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6c40:	b	6c70 <processXmlDecl+0x3b4>
    6c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6c48:	cmp	r3, #0
    6c4c:	bne	6c5c <processXmlDecl+0x3a0>
    6c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6c54:	cmp	r3, #0
    6c58:	beq	6c6c <processXmlDecl+0x3b0>
    6c5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6c60:	add	r3, r3, #456	; 0x1c8
    6c64:	mov	r0, r3
    6c68:	bl	e8f8 <poolClear>
    6c6c:	mov	r3, #0
    6c70:	mov	r0, r3
    6c74:	sub	sp, fp, #20
    6c78:	ldrd	r4, [sp]
    6c7c:	ldrd	r6, [sp, #8]
    6c80:	ldr	fp, [sp, #16]
    6c84:	add	sp, sp, #20
    6c88:	pop	{pc}		; (ldr pc, [sp], #4)

00006c8c <handleUnknownEncoding>:
    6c8c:	str	r4, [sp, #-12]!
    6c90:	str	fp, [sp, #4]
    6c94:	str	lr, [sp, #8]
    6c98:	add	fp, sp, #8
    6c9c:	sub	sp, sp, #1056	; 0x420
    6ca0:	sub	sp, sp, #4
    6ca4:	str	r0, [fp, #-1064]	; 0xfffffbd8
    6ca8:	str	r1, [fp, #-1068]	; 0xfffffbd4
    6cac:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6cb0:	ldr	r3, [r3, #132]	; 0x84
    6cb4:	cmp	r3, #0
    6cb8:	beq	6e38 <handleUnknownEncoding+0x1ac>
    6cbc:	mov	r3, #0
    6cc0:	str	r3, [fp, #-16]
    6cc4:	b	6cec <handleUnknownEncoding+0x60>
    6cc8:	ldr	r3, [fp, #-16]
    6ccc:	lsl	r3, r3, #2
    6cd0:	sub	r2, fp, #12
    6cd4:	add	r3, r2, r3
    6cd8:	mvn	r2, #0
    6cdc:	str	r2, [r3, #-1044]	; 0xfffffbec
    6ce0:	ldr	r3, [fp, #-16]
    6ce4:	add	r3, r3, #1
    6ce8:	str	r3, [fp, #-16]
    6cec:	ldr	r3, [fp, #-16]
    6cf0:	cmp	r3, #255	; 0xff
    6cf4:	ble	6cc8 <handleUnknownEncoding+0x3c>
    6cf8:	mov	r3, #0
    6cfc:	str	r3, [fp, #-28]	; 0xffffffe4
    6d00:	mov	r3, #0
    6d04:	str	r3, [fp, #-32]	; 0xffffffe0
    6d08:	mov	r3, #0
    6d0c:	str	r3, [fp, #-24]	; 0xffffffe8
    6d10:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6d14:	ldr	r4, [r3, #132]	; 0x84
    6d18:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6d1c:	ldr	r0, [r3, #256]	; 0x100
    6d20:	sub	r3, fp, #1040	; 0x410
    6d24:	sub	r3, r3, #12
    6d28:	sub	r3, r3, #4
    6d2c:	mov	r2, r3
    6d30:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
    6d34:	blx	r4
    6d38:	mov	r3, r0
    6d3c:	cmp	r3, #0
    6d40:	beq	6e1c <handleUnknownEncoding+0x190>
    6d44:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6d48:	ldr	r4, [r3, #12]
    6d4c:	bl	0 <coda_XmlSizeOfUnknownEncoding>
    6d50:	mov	r3, r0
    6d54:	mov	r0, r3
    6d58:	blx	r4
    6d5c:	mov	r2, r0
    6d60:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6d64:	str	r2, [r3, #248]	; 0xf8
    6d68:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6d6c:	ldr	r3, [r3, #248]	; 0xf8
    6d70:	cmp	r3, #0
    6d74:	bne	6d9c <handleUnknownEncoding+0x110>
    6d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6d7c:	cmp	r3, #0
    6d80:	beq	6d94 <handleUnknownEncoding+0x108>
    6d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6d88:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6d8c:	mov	r0, r2
    6d90:	blx	r3
    6d94:	mov	r3, #1
    6d98:	b	6e3c <handleUnknownEncoding+0x1b0>
    6d9c:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6da0:	ldrb	r3, [r3, #244]	; 0xf4
    6da4:	cmp	r3, #0
    6da8:	beq	6db8 <handleUnknownEncoding+0x12c>
    6dac:	movw	r4, #0
    6db0:	movt	r4, #0
    6db4:	b	6dc0 <handleUnknownEncoding+0x134>
    6db8:	movw	r4, #0
    6dbc:	movt	r4, #0
    6dc0:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6dc4:	ldr	r0, [r3, #248]	; 0xf8
    6dc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6dcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6dd0:	sub	r1, fp, #1040	; 0x410
    6dd4:	sub	r1, r1, #12
    6dd8:	sub	r1, r1, #4
    6ddc:	blx	r4
    6de0:	str	r0, [fp, #-20]	; 0xffffffec
    6de4:	ldr	r3, [fp, #-20]	; 0xffffffec
    6de8:	cmp	r3, #0
    6dec:	beq	6e1c <handleUnknownEncoding+0x190>
    6df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6df4:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6df8:	str	r2, [r3, #252]	; 0xfc
    6dfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e00:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6e04:	str	r2, [r3, #260]	; 0x104
    6e08:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6e0c:	ldr	r2, [fp, #-20]	; 0xffffffec
    6e10:	str	r2, [r3, #152]	; 0x98
    6e14:	mov	r3, #0
    6e18:	b	6e3c <handleUnknownEncoding+0x1b0>
    6e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e20:	cmp	r3, #0
    6e24:	beq	6e38 <handleUnknownEncoding+0x1ac>
    6e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6e30:	mov	r0, r2
    6e34:	blx	r3
    6e38:	mov	r3, #18
    6e3c:	mov	r0, r3
    6e40:	sub	sp, fp, #8
    6e44:	ldr	r4, [sp]
    6e48:	ldr	fp, [sp, #4]
    6e4c:	add	sp, sp, #8
    6e50:	pop	{pc}		; (ldr pc, [sp], #4)

00006e54 <prologInitProcessor>:
    6e54:	str	fp, [sp, #-8]!
    6e58:	str	lr, [sp, #4]
    6e5c:	add	fp, sp, #4
    6e60:	sub	sp, sp, #24
    6e64:	str	r0, [fp, #-16]
    6e68:	str	r1, [fp, #-20]	; 0xffffffec
    6e6c:	str	r2, [fp, #-24]	; 0xffffffe8
    6e70:	str	r3, [fp, #-28]	; 0xffffffe4
    6e74:	ldr	r0, [fp, #-16]
    6e78:	bl	6820 <initializeEncoding>
    6e7c:	str	r0, [fp, #-8]
    6e80:	ldr	r3, [fp, #-8]
    6e84:	cmp	r3, #0
    6e88:	beq	6e94 <prologInitProcessor+0x40>
    6e8c:	ldr	r3, [fp, #-8]
    6e90:	b	6ebc <prologInitProcessor+0x68>
    6e94:	ldr	r2, [fp, #-16]
    6e98:	movw	r3, #0
    6e9c:	movt	r3, #0
    6ea0:	str	r3, [r2, #288]	; 0x120
    6ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6ea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6eac:	ldr	r1, [fp, #-20]	; 0xffffffec
    6eb0:	ldr	r0, [fp, #-16]
    6eb4:	bl	745c <prologProcessor>
    6eb8:	mov	r3, r0
    6ebc:	mov	r0, r3
    6ec0:	sub	sp, fp, #4
    6ec4:	ldr	fp, [sp]
    6ec8:	add	sp, sp, #4
    6ecc:	pop	{pc}		; (ldr pc, [sp], #4)

00006ed0 <externalParEntInitProcessor>:
    6ed0:	str	fp, [sp, #-8]!
    6ed4:	str	lr, [sp, #4]
    6ed8:	add	fp, sp, #4
    6edc:	sub	sp, sp, #24
    6ee0:	str	r0, [fp, #-16]
    6ee4:	str	r1, [fp, #-20]	; 0xffffffec
    6ee8:	str	r2, [fp, #-24]	; 0xffffffe8
    6eec:	str	r3, [fp, #-28]	; 0xffffffe4
    6ef0:	ldr	r0, [fp, #-16]
    6ef4:	bl	6820 <initializeEncoding>
    6ef8:	str	r0, [fp, #-8]
    6efc:	ldr	r3, [fp, #-8]
    6f00:	cmp	r3, #0
    6f04:	beq	6f10 <externalParEntInitProcessor+0x40>
    6f08:	ldr	r3, [fp, #-8]
    6f0c:	b	6f84 <externalParEntInitProcessor+0xb4>
    6f10:	ldr	r3, [fp, #-16]
    6f14:	ldr	r3, [r3, #364]	; 0x16c
    6f18:	mov	r2, #1
    6f1c:	strb	r2, [r3, #131]	; 0x83
    6f20:	ldr	r3, [fp, #-16]
    6f24:	ldr	r3, [r3, #284]	; 0x11c
    6f28:	cmp	r3, #0
    6f2c:	beq	6f5c <externalParEntInitProcessor+0x8c>
    6f30:	ldr	r2, [fp, #-16]
    6f34:	movw	r3, #0
    6f38:	movt	r3, #0
    6f3c:	str	r3, [r2, #288]	; 0x120
    6f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6f48:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f4c:	ldr	r0, [fp, #-16]
    6f50:	bl	6f98 <entityValueInitProcessor>
    6f54:	mov	r3, r0
    6f58:	b	6f84 <externalParEntInitProcessor+0xb4>
    6f5c:	ldr	r2, [fp, #-16]
    6f60:	movw	r3, #0
    6f64:	movt	r3, #0
    6f68:	str	r3, [r2, #288]	; 0x120
    6f6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6f74:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f78:	ldr	r0, [fp, #-16]
    6f7c:	bl	71bc <externalParEntProcessor>
    6f80:	mov	r3, r0
    6f84:	mov	r0, r3
    6f88:	sub	sp, fp, #4
    6f8c:	ldr	fp, [sp]
    6f90:	add	sp, sp, #4
    6f94:	pop	{pc}		; (ldr pc, [sp], #4)

00006f98 <entityValueInitProcessor>:
    6f98:	str	r4, [sp, #-12]!
    6f9c:	str	fp, [sp, #4]
    6fa0:	str	lr, [sp, #8]
    6fa4:	add	fp, sp, #8
    6fa8:	sub	sp, sp, #36	; 0x24
    6fac:	str	r0, [fp, #-32]	; 0xffffffe0
    6fb0:	str	r1, [fp, #-36]	; 0xffffffdc
    6fb4:	str	r2, [fp, #-40]	; 0xffffffd8
    6fb8:	str	r3, [fp, #-44]	; 0xffffffd4
    6fbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6fc0:	str	r3, [fp, #-16]
    6fc4:	ldr	r3, [fp, #-16]
    6fc8:	str	r3, [fp, #-28]	; 0xffffffe4
    6fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6fd0:	ldr	r2, [fp, #-16]
    6fd4:	str	r2, [r3, #296]	; 0x128
    6fd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6fdc:	ldr	r3, [r3, #152]	; 0x98
    6fe0:	ldr	r4, [r3]
    6fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6fe8:	ldr	r0, [r3, #152]	; 0x98
    6fec:	sub	r3, fp, #28
    6ff0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6ff4:	ldr	r1, [fp, #-16]
    6ff8:	blx	r4
    6ffc:	str	r0, [fp, #-20]	; 0xffffffec
    7000:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7004:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7008:	str	r2, [r3, #300]	; 0x12c
    700c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7010:	cmp	r3, #0
    7014:	bgt	70a8 <entityValueInitProcessor+0x110>
    7018:	ldr	r3, [fp, #-32]	; 0xffffffe0
    701c:	ldrb	r3, [r3, #500]	; 0x1f4
    7020:	cmp	r3, #0
    7024:	bne	7048 <entityValueInitProcessor+0xb0>
    7028:	ldr	r3, [fp, #-20]	; 0xffffffec
    702c:	cmp	r3, #0
    7030:	beq	7048 <entityValueInitProcessor+0xb0>
    7034:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7038:	ldr	r2, [fp, #-36]	; 0xffffffdc
    703c:	str	r2, [r3]
    7040:	mov	r3, #0
    7044:	b	71a4 <entityValueInitProcessor+0x20c>
    7048:	ldr	r3, [fp, #-20]	; 0xffffffec
    704c:	cmn	r3, #1
    7050:	beq	7098 <entityValueInitProcessor+0x100>
    7054:	ldr	r3, [fp, #-20]	; 0xffffffec
    7058:	cmp	r3, #0
    705c:	beq	7090 <entityValueInitProcessor+0xf8>
    7060:	ldr	r3, [fp, #-20]	; 0xffffffec
    7064:	cmn	r3, #2
    7068:	beq	70a0 <entityValueInitProcessor+0x108>
    706c:	nop	{0}
    7070:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7074:	ldr	r1, [r3, #152]	; 0x98
    7078:	ldr	r3, [fp, #-40]	; 0xffffffd8
    707c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7080:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7084:	bl	b1bc <storeEntityValue>
    7088:	mov	r3, r0
    708c:	b	71a4 <entityValueInitProcessor+0x20c>
    7090:	mov	r3, #4
    7094:	b	71a4 <entityValueInitProcessor+0x20c>
    7098:	mov	r3, #5
    709c:	b	71a4 <entityValueInitProcessor+0x20c>
    70a0:	mov	r3, #6
    70a4:	b	71a4 <entityValueInitProcessor+0x20c>
    70a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    70ac:	cmp	r3, #12
    70b0:	bne	714c <entityValueInitProcessor+0x1b4>
    70b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70b8:	ldr	r2, [fp, #-16]
    70bc:	mov	r1, #0
    70c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    70c4:	bl	68bc <processXmlDecl>
    70c8:	str	r0, [fp, #-24]	; 0xffffffe8
    70cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    70d0:	cmp	r3, #0
    70d4:	beq	70e0 <entityValueInitProcessor+0x148>
    70d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    70dc:	b	71a4 <entityValueInitProcessor+0x20c>
    70e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    70e4:	ldr	r3, [r3, #496]	; 0x1f0
    70e8:	cmp	r3, #2
    70ec:	beq	710c <entityValueInitProcessor+0x174>
    70f0:	cmp	r3, #3
    70f4:	bne	7114 <entityValueInitProcessor+0x17c>
    70f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    70fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7100:	str	r2, [r3]
    7104:	mov	r3, #0
    7108:	b	71a4 <entityValueInitProcessor+0x20c>
    710c:	mov	r3, #35	; 0x23
    7110:	b	71a4 <entityValueInitProcessor+0x20c>
    7114:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7118:	ldr	r3, [fp, #-44]	; 0xffffffd4
    711c:	str	r2, [r3]
    7120:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7124:	movw	r3, #0
    7128:	movt	r3, #0
    712c:	str	r3, [r2, #288]	; 0x120
    7130:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7134:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7138:	ldr	r2, [fp, #-40]	; 0xffffffd8
    713c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7140:	bl	7340 <entityValueProcessor>
    7144:	mov	r3, r0
    7148:	b	71a4 <entityValueInitProcessor+0x20c>
    714c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7150:	cmp	r3, #14
    7154:	bne	718c <entityValueInitProcessor+0x1f4>
    7158:	ldr	r3, [fp, #-28]	; 0xffffffe4
    715c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7160:	cmp	r2, r3
    7164:	bne	718c <entityValueInitProcessor+0x1f4>
    7168:	ldr	r3, [fp, #-32]	; 0xffffffe0
    716c:	ldrb	r3, [r3, #500]	; 0x1f4
    7170:	cmp	r3, #0
    7174:	bne	718c <entityValueInitProcessor+0x1f4>
    7178:	ldr	r2, [fp, #-28]	; 0xffffffe4
    717c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7180:	str	r2, [r3]
    7184:	mov	r3, #0
    7188:	b	71a4 <entityValueInitProcessor+0x20c>
    718c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7190:	str	r3, [fp, #-16]
    7194:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7198:	ldr	r2, [fp, #-16]
    719c:	str	r2, [r3, #296]	; 0x128
    71a0:	b	6fd8 <entityValueInitProcessor+0x40>
    71a4:	mov	r0, r3
    71a8:	sub	sp, fp, #8
    71ac:	ldr	r4, [sp]
    71b0:	ldr	fp, [sp, #4]
    71b4:	add	sp, sp, #8
    71b8:	pop	{pc}		; (ldr pc, [sp], #4)

000071bc <externalParEntProcessor>:
    71bc:	str	r4, [sp, #-12]!
    71c0:	str	fp, [sp, #4]
    71c4:	str	lr, [sp, #8]
    71c8:	add	fp, sp, #8
    71cc:	sub	sp, sp, #44	; 0x2c
    71d0:	str	r0, [fp, #-24]	; 0xffffffe8
    71d4:	str	r1, [fp, #-28]	; 0xffffffe4
    71d8:	str	r2, [fp, #-32]	; 0xffffffe0
    71dc:	str	r3, [fp, #-36]	; 0xffffffdc
    71e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    71e4:	str	r3, [fp, #-20]	; 0xffffffec
    71e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    71ec:	ldr	r3, [r3, #152]	; 0x98
    71f0:	ldr	r4, [r3]
    71f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    71f8:	ldr	r0, [r3, #152]	; 0x98
    71fc:	sub	r3, fp, #20
    7200:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7204:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7208:	blx	r4
    720c:	str	r0, [fp, #-16]
    7210:	ldr	r3, [fp, #-16]
    7214:	cmp	r3, #0
    7218:	bgt	728c <externalParEntProcessor+0xd0>
    721c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7220:	ldrb	r3, [r3, #500]	; 0x1f4
    7224:	cmp	r3, #0
    7228:	bne	724c <externalParEntProcessor+0x90>
    722c:	ldr	r3, [fp, #-16]
    7230:	cmp	r3, #0
    7234:	beq	724c <externalParEntProcessor+0x90>
    7238:	ldr	r3, [fp, #-36]	; 0xffffffdc
    723c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7240:	str	r2, [r3]
    7244:	mov	r3, #0
    7248:	b	7328 <externalParEntProcessor+0x16c>
    724c:	ldr	r3, [fp, #-16]
    7250:	cmn	r3, #1
    7254:	beq	727c <externalParEntProcessor+0xc0>
    7258:	ldr	r3, [fp, #-16]
    725c:	cmp	r3, #0
    7260:	beq	7274 <externalParEntProcessor+0xb8>
    7264:	ldr	r3, [fp, #-16]
    7268:	cmn	r3, #2
    726c:	beq	7284 <externalParEntProcessor+0xc8>
    7270:	b	72c8 <externalParEntProcessor+0x10c>
    7274:	mov	r3, #4
    7278:	b	7328 <externalParEntProcessor+0x16c>
    727c:	mov	r3, #5
    7280:	b	7328 <externalParEntProcessor+0x16c>
    7284:	mov	r3, #6
    7288:	b	7328 <externalParEntProcessor+0x16c>
    728c:	ldr	r3, [fp, #-16]
    7290:	cmp	r3, #14
    7294:	bne	72c8 <externalParEntProcessor+0x10c>
    7298:	ldr	r3, [fp, #-20]	; 0xffffffec
    729c:	str	r3, [fp, #-28]	; 0xffffffe4
    72a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72a4:	ldr	r3, [r3, #152]	; 0x98
    72a8:	ldr	r4, [r3]
    72ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72b0:	ldr	r0, [r3, #152]	; 0x98
    72b4:	sub	r3, fp, #20
    72b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    72bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    72c0:	blx	r4
    72c4:	str	r0, [fp, #-16]
    72c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    72cc:	movw	r3, #0
    72d0:	movt	r3, #0
    72d4:	str	r3, [r2, #288]	; 0x120
    72d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72dc:	ldr	r1, [r3, #152]	; 0x98
    72e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    72e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    72e8:	ldrb	r2, [r2, #500]	; 0x1f4
    72ec:	cmp	r2, #0
    72f0:	moveq	r2, #1
    72f4:	movne	r2, #0
    72f8:	uxtb	r2, r2
    72fc:	str	r2, [sp, #12]
    7300:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7304:	str	r2, [sp, #8]
    7308:	str	r3, [sp, #4]
    730c:	ldr	r3, [fp, #-16]
    7310:	str	r3, [sp]
    7314:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7318:	ldr	r2, [fp, #-28]	; 0xffffffe4
    731c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7320:	bl	7518 <doProlog>
    7324:	mov	r3, r0
    7328:	mov	r0, r3
    732c:	sub	sp, fp, #8
    7330:	ldr	r4, [sp]
    7334:	ldr	fp, [sp, #4]
    7338:	add	sp, sp, #8
    733c:	pop	{pc}		; (ldr pc, [sp], #4)

00007340 <entityValueProcessor>:
    7340:	str	r4, [sp, #-12]!
    7344:	str	fp, [sp, #4]
    7348:	str	lr, [sp, #8]
    734c:	add	fp, sp, #8
    7350:	sub	sp, sp, #36	; 0x24
    7354:	str	r0, [fp, #-32]	; 0xffffffe0
    7358:	str	r1, [fp, #-36]	; 0xffffffdc
    735c:	str	r2, [fp, #-40]	; 0xffffffd8
    7360:	str	r3, [fp, #-44]	; 0xffffffd4
    7364:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7368:	str	r3, [fp, #-16]
    736c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7370:	str	r3, [fp, #-28]	; 0xffffffe4
    7374:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7378:	ldr	r3, [r3, #152]	; 0x98
    737c:	str	r3, [fp, #-20]	; 0xffffffec
    7380:	ldr	r3, [fp, #-20]	; 0xffffffec
    7384:	ldr	r4, [r3]
    7388:	sub	r3, fp, #28
    738c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7390:	ldr	r1, [fp, #-16]
    7394:	ldr	r0, [fp, #-20]	; 0xffffffec
    7398:	blx	r4
    739c:	str	r0, [fp, #-24]	; 0xffffffe8
    73a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73a4:	cmp	r3, #0
    73a8:	bgt	7438 <entityValueProcessor+0xf8>
    73ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    73b0:	ldrb	r3, [r3, #500]	; 0x1f4
    73b4:	cmp	r3, #0
    73b8:	bne	73dc <entityValueProcessor+0x9c>
    73bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73c0:	cmp	r3, #0
    73c4:	beq	73dc <entityValueProcessor+0x9c>
    73c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    73cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    73d0:	str	r2, [r3]
    73d4:	mov	r3, #0
    73d8:	b	7444 <entityValueProcessor+0x104>
    73dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73e0:	cmn	r3, #1
    73e4:	beq	7428 <entityValueProcessor+0xe8>
    73e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73ec:	cmp	r3, #0
    73f0:	beq	7420 <entityValueProcessor+0xe0>
    73f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73f8:	cmn	r3, #2
    73fc:	beq	7430 <entityValueProcessor+0xf0>
    7400:	nop	{0}
    7404:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7408:	ldr	r2, [fp, #-36]	; 0xffffffdc
    740c:	ldr	r1, [fp, #-20]	; 0xffffffec
    7410:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7414:	bl	b1bc <storeEntityValue>
    7418:	mov	r3, r0
    741c:	b	7444 <entityValueProcessor+0x104>
    7420:	mov	r3, #4
    7424:	b	7444 <entityValueProcessor+0x104>
    7428:	mov	r3, #5
    742c:	b	7444 <entityValueProcessor+0x104>
    7430:	mov	r3, #6
    7434:	b	7444 <entityValueProcessor+0x104>
    7438:	ldr	r3, [fp, #-28]	; 0xffffffe4
    743c:	str	r3, [fp, #-16]
    7440:	b	7380 <entityValueProcessor+0x40>
    7444:	mov	r0, r3
    7448:	sub	sp, fp, #8
    744c:	ldr	r4, [sp]
    7450:	ldr	fp, [sp, #4]
    7454:	add	sp, sp, #8
    7458:	pop	{pc}		; (ldr pc, [sp], #4)

0000745c <prologProcessor>:
    745c:	str	r4, [sp, #-12]!
    7460:	str	fp, [sp, #4]
    7464:	str	lr, [sp, #8]
    7468:	add	fp, sp, #8
    746c:	sub	sp, sp, #44	; 0x2c
    7470:	str	r0, [fp, #-24]	; 0xffffffe8
    7474:	str	r1, [fp, #-28]	; 0xffffffe4
    7478:	str	r2, [fp, #-32]	; 0xffffffe0
    747c:	str	r3, [fp, #-36]	; 0xffffffdc
    7480:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7484:	str	r3, [fp, #-20]	; 0xffffffec
    7488:	ldr	r3, [fp, #-24]	; 0xffffffe8
    748c:	ldr	r3, [r3, #152]	; 0x98
    7490:	ldr	r4, [r3]
    7494:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7498:	ldr	r0, [r3, #152]	; 0x98
    749c:	sub	r3, fp, #20
    74a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    74a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    74a8:	blx	r4
    74ac:	str	r0, [fp, #-16]
    74b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    74b4:	ldr	r1, [r3, #152]	; 0x98
    74b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    74bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    74c0:	ldrb	r2, [r2, #500]	; 0x1f4
    74c4:	cmp	r2, #0
    74c8:	moveq	r2, #1
    74cc:	movne	r2, #0
    74d0:	uxtb	r2, r2
    74d4:	str	r2, [sp, #12]
    74d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    74dc:	str	r2, [sp, #8]
    74e0:	str	r3, [sp, #4]
    74e4:	ldr	r3, [fp, #-16]
    74e8:	str	r3, [sp]
    74ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    74f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    74f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    74f8:	bl	7518 <doProlog>
    74fc:	mov	r3, r0
    7500:	mov	r0, r3
    7504:	sub	sp, fp, #8
    7508:	ldr	r4, [sp]
    750c:	ldr	fp, [sp, #4]
    7510:	add	sp, sp, #8
    7514:	pop	{pc}		; (ldr pc, [sp], #4)

00007518 <doProlog>:
    7518:	strd	r4, [sp, #-16]!
    751c:	str	fp, [sp, #8]
    7520:	str	lr, [sp, #12]
    7524:	add	fp, sp, #12
    7528:	sub	sp, sp, #192	; 0xc0
    752c:	str	r0, [fp, #-168]	; 0xffffff58
    7530:	str	r1, [fp, #-172]	; 0xffffff54
    7534:	str	r2, [fp, #-176]	; 0xffffff50
    7538:	str	r3, [fp, #-180]	; 0xffffff4c
    753c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7540:	ldr	r3, [r3, #364]	; 0x16c
    7544:	str	r3, [fp, #-40]	; 0xffffffd8
    7548:	ldr	r3, [fp, #-168]	; 0xffffff58
    754c:	ldr	r3, [r3, #152]	; 0x98
    7550:	ldr	r2, [fp, #-172]	; 0xffffff54
    7554:	cmp	r2, r3
    7558:	bne	7578 <doProlog+0x60>
    755c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7560:	add	r3, r3, #296	; 0x128
    7564:	str	r3, [fp, #-16]
    7568:	ldr	r3, [fp, #-168]	; 0xffffff58
    756c:	add	r3, r3, #300	; 0x12c
    7570:	str	r3, [fp, #-20]	; 0xffffffec
    7574:	b	7594 <doProlog+0x7c>
    7578:	ldr	r3, [fp, #-168]	; 0xffffff58
    757c:	ldr	r3, [r3, #308]	; 0x134
    7580:	str	r3, [fp, #-16]
    7584:	ldr	r3, [fp, #-168]	; 0xffffff58
    7588:	ldr	r3, [r3, #308]	; 0x134
    758c:	add	r3, r3, #4
    7590:	str	r3, [fp, #-20]	; 0xffffffec
    7594:	mov	r3, #1
    7598:	strb	r3, [fp, #-25]	; 0xffffffe7
    759c:	ldr	r3, [fp, #-16]
    75a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    75a4:	str	r2, [r3]
    75a8:	ldr	r2, [fp, #8]
    75ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    75b0:	str	r2, [r3]
    75b4:	ldr	r3, [fp, #4]
    75b8:	cmp	r3, #0
    75bc:	bgt	7744 <doProlog+0x22c>
    75c0:	ldrb	r3, [fp, #16]
    75c4:	cmp	r3, #0
    75c8:	beq	75ec <doProlog+0xd4>
    75cc:	ldr	r3, [fp, #4]
    75d0:	cmp	r3, #0
    75d4:	beq	75ec <doProlog+0xd4>
    75d8:	ldr	r3, [fp, #12]
    75dc:	ldr	r2, [fp, #-176]	; 0xffffff50
    75e0:	str	r2, [r3]
    75e4:	mov	r3, #0
    75e8:	b	a0a4 <doProlog+0x2b8c>
    75ec:	ldr	r3, [fp, #4]
    75f0:	add	r3, r3, #15
    75f4:	cmp	r3, #15
    75f8:	ldrls	pc, [pc, r3, lsl #2]
    75fc:	b	772c <doProlog+0x214>
    7600:	.word	0x00007664
    7604:	.word	0x0000772c
    7608:	.word	0x0000772c
    760c:	.word	0x0000772c
    7610:	.word	0x0000772c
    7614:	.word	0x0000772c
    7618:	.word	0x0000772c
    761c:	.word	0x0000772c
    7620:	.word	0x0000772c
    7624:	.word	0x0000772c
    7628:	.word	0x0000772c
    762c:	.word	0x00007674
    7630:	.word	0x0000772c
    7634:	.word	0x0000765c
    7638:	.word	0x00007654
    763c:	.word	0x00007640
    7640:	ldr	r2, [fp, #8]
    7644:	ldr	r3, [fp, #-16]
    7648:	str	r2, [r3]
    764c:	mov	r3, #4
    7650:	b	a0a4 <doProlog+0x2b8c>
    7654:	mov	r3, #5
    7658:	b	a0a4 <doProlog+0x2b8c>
    765c:	mov	r3, #6
    7660:	b	a0a4 <doProlog+0x2b8c>
    7664:	ldr	r3, [fp, #4]
    7668:	rsb	r3, r3, #0
    766c:	str	r3, [fp, #4]
    7670:	b	7748 <doProlog+0x230>
    7674:	ldr	r3, [fp, #-168]	; 0xffffff58
    7678:	ldr	r3, [r3, #152]	; 0x98
    767c:	ldr	r2, [fp, #-172]	; 0xffffff54
    7680:	cmp	r2, r3
    7684:	beq	76b0 <doProlog+0x198>
    7688:	ldr	r3, [fp, #-168]	; 0xffffff58
    768c:	ldr	r3, [r3, #308]	; 0x134
    7690:	ldrb	r3, [r3, #20]
    7694:	cmp	r3, #0
    7698:	bne	76b0 <doProlog+0x198>
    769c:	ldr	r3, [fp, #12]
    76a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    76a4:	str	r2, [r3]
    76a8:	mov	r3, #0
    76ac:	b	a0a4 <doProlog+0x2b8c>
    76b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    76b4:	ldrb	r3, [r3, #504]	; 0x1f8
    76b8:	cmp	r3, #0
    76bc:	bne	76d4 <doProlog+0x1bc>
    76c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    76c4:	ldr	r3, [r3, #152]	; 0x98
    76c8:	ldr	r2, [fp, #-172]	; 0xffffff54
    76cc:	cmp	r2, r3
    76d0:	beq	7724 <doProlog+0x20c>
    76d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    76d8:	ldr	r4, [r3, #264]	; 0x108
    76dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    76e0:	add	r0, r3, #264	; 0x108
    76e4:	ldr	r3, [fp, #-172]	; 0xffffff54
    76e8:	str	r3, [sp]
    76ec:	ldr	r3, [fp, #-180]	; 0xffffff4c
    76f0:	ldr	r2, [fp, #-180]	; 0xffffff4c
    76f4:	mvn	r1, #3
    76f8:	blx	r4
    76fc:	mov	r3, r0
    7700:	cmn	r3, #1
    7704:	bne	7710 <doProlog+0x1f8>
    7708:	mov	r3, #29
    770c:	b	a0a4 <doProlog+0x2b8c>
    7710:	ldr	r3, [fp, #12]
    7714:	ldr	r2, [fp, #-176]	; 0xffffff50
    7718:	str	r2, [r3]
    771c:	mov	r3, #0
    7720:	b	a0a4 <doProlog+0x2b8c>
    7724:	mov	r3, #3
    7728:	b	a0a4 <doProlog+0x2b8c>
    772c:	ldr	r3, [fp, #4]
    7730:	rsb	r3, r3, #0
    7734:	str	r3, [fp, #4]
    7738:	ldr	r3, [fp, #-180]	; 0xffffff4c
    773c:	str	r3, [fp, #8]
    7740:	b	7748 <doProlog+0x230>
    7744:	nop	{0}
    7748:	ldr	r3, [fp, #-168]	; 0xffffff58
    774c:	ldr	r4, [r3, #264]	; 0x108
    7750:	ldr	r3, [fp, #-168]	; 0xffffff58
    7754:	add	r0, r3, #264	; 0x108
    7758:	ldr	r2, [fp, #8]
    775c:	ldr	r3, [fp, #-172]	; 0xffffff54
    7760:	str	r3, [sp]
    7764:	mov	r3, r2
    7768:	ldr	r2, [fp, #-176]	; 0xffffff50
    776c:	ldr	r1, [fp, #4]
    7770:	blx	r4
    7774:	str	r0, [fp, #-44]	; 0xffffffd4
    7778:	ldr	r3, [fp, #-44]	; 0xffffffd4
    777c:	add	r3, r3, #1
    7780:	cmp	r3, #61	; 0x3d
    7784:	ldrls	pc, [pc, r3, lsl #2]
    7788:	b	a014 <doProlog+0x2afc>
    778c:	.word	0x00009208
    7790:	.word	0x00009e60
    7794:	.word	0x00007884
    7798:	.word	0x00007e20
    779c:	.word	0x00009e7c
    77a0:	.word	0x000078c8
    77a4:	.word	0x000087ec
    77a8:	.word	0x000079fc
    77ac:	.word	0x00007948
    77b0:	.word	0x00007c04
    77b4:	.word	0x00008c90
    77b8:	.word	0x00008e1c
    77bc:	.word	0x00009e98
    77c0:	.word	0x00008684
    77c4:	.word	0x0000895c
    77c8:	.word	0x00007b18
    77cc:	.word	0x00008a28
    77d0:	.word	0x00008af0
    77d4:	.word	0x00009ec4
    77d8:	.word	0x00008f78
    77dc:	.word	0x000090bc
    77e0:	.word	0x0000918c
    77e4:	.word	0x00008ff8
    77e8:	.word	0x00007fd0
    77ec:	.word	0x00008030
    77f0:	.word	0x00008050
    77f4:	.word	0x00008070
    77f8:	.word	0x00008084
    77fc:	.word	0x00008098
    7800:	.word	0x000080ac
    7804:	.word	0x000080c0
    7808:	.word	0x000080d4
    780c:	.word	0x00008118
    7810:	.word	0x00008118
    7814:	.word	0x00009ee0
    7818:	.word	0x00007f98
    781c:	.word	0x000081ec
    7820:	.word	0x000081ec
    7824:	.word	0x000083f8
    7828:	.word	0x000083f8
    782c:	.word	0x00009f0c
    7830:	.word	0x0000995c
    7834:	.word	0x000099d4
    7838:	.word	0x000099d4
    783c:	.word	0x00009ab4
    7840:	.word	0x000092cc
    7844:	.word	0x00009cc4
    7848:	.word	0x00009cdc
    784c:	.word	0x00009cd0
    7850:	.word	0x00009ce8
    7854:	.word	0x00009524
    7858:	.word	0x000094b4
    785c:	.word	0x00009b28
    7860:	.word	0x00009b40
    7864:	.word	0x00009b34
    7868:	.word	0x00009b4c
    786c:	.word	0x00009df8
    7870:	.word	0x00009e2c
    7874:	.word	0x000079b8
    7878:	.word	0x00009238
    787c:	.word	0x00009648
    7880:	.word	0x00009648
    7884:	ldr	r3, [fp, #8]
    7888:	ldr	r2, [fp, #-176]	; 0xffffff50
    788c:	mov	r1, #0
    7890:	ldr	r0, [fp, #-168]	; 0xffffff58
    7894:	bl	68bc <processXmlDecl>
    7898:	str	r0, [fp, #-48]	; 0xffffffd0
    789c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    78a0:	cmp	r3, #0
    78a4:	beq	78b0 <doProlog+0x398>
    78a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    78ac:	b	a0a4 <doProlog+0x2b8c>
    78b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    78b4:	ldr	r3, [r3, #152]	; 0x98
    78b8:	str	r3, [fp, #-172]	; 0xffffff54
    78bc:	mov	r3, #0
    78c0:	strb	r3, [fp, #-25]	; 0xffffffe7
    78c4:	b	a014 <doProlog+0x2afc>
    78c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    78cc:	ldr	r3, [r3, #92]	; 0x5c
    78d0:	cmp	r3, #0
    78d4:	beq	7938 <doProlog+0x420>
    78d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    78dc:	add	r0, r3, #432	; 0x1b0
    78e0:	ldr	r3, [fp, #8]
    78e4:	ldr	r2, [fp, #-176]	; 0xffffff50
    78e8:	ldr	r1, [fp, #-172]	; 0xffffff54
    78ec:	bl	edc8 <poolStoreString>
    78f0:	mov	r2, r0
    78f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    78f8:	str	r2, [r3, #328]	; 0x148
    78fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7900:	ldr	r3, [r3, #328]	; 0x148
    7904:	cmp	r3, #0
    7908:	bne	7914 <doProlog+0x3fc>
    790c:	mov	r3, #1
    7910:	b	a0a4 <doProlog+0x2b8c>
    7914:	ldr	r3, [fp, #-168]	; 0xffffff58
    7918:	ldr	r2, [r3, #444]	; 0x1bc
    791c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7920:	str	r2, [r3, #448]	; 0x1c0
    7924:	ldr	r3, [fp, #-168]	; 0xffffff58
    7928:	mov	r2, #0
    792c:	str	r2, [r3, #336]	; 0x150
    7930:	mov	r3, #0
    7934:	strb	r3, [fp, #-25]	; 0xffffffe7
    7938:	ldr	r3, [fp, #-168]	; 0xffffff58
    793c:	mov	r2, #0
    7940:	str	r2, [r3, #332]	; 0x14c
    7944:	b	a014 <doProlog+0x2afc>
    7948:	ldr	r3, [fp, #-168]	; 0xffffff58
    794c:	ldr	r3, [r3, #92]	; 0x5c
    7950:	cmp	r3, #0
    7954:	beq	9f28 <doProlog+0x2a10>
    7958:	ldr	r3, [fp, #-168]	; 0xffffff58
    795c:	ldr	r4, [r3, #92]	; 0x5c
    7960:	ldr	r3, [fp, #-168]	; 0xffffff58
    7964:	ldr	r0, [r3, #4]
    7968:	ldr	r3, [fp, #-168]	; 0xffffff58
    796c:	ldr	r1, [r3, #328]	; 0x148
    7970:	ldr	r3, [fp, #-168]	; 0xffffff58
    7974:	ldr	r2, [r3, #332]	; 0x14c
    7978:	ldr	r3, [fp, #-168]	; 0xffffff58
    797c:	ldr	ip, [r3, #336]	; 0x150
    7980:	mov	r3, #1
    7984:	str	r3, [sp]
    7988:	mov	r3, ip
    798c:	blx	r4
    7990:	ldr	r3, [fp, #-168]	; 0xffffff58
    7994:	mov	r2, #0
    7998:	str	r2, [r3, #328]	; 0x148
    799c:	ldr	r3, [fp, #-168]	; 0xffffff58
    79a0:	add	r3, r3, #432	; 0x1b0
    79a4:	mov	r0, r3
    79a8:	bl	e8f8 <poolClear>
    79ac:	mov	r3, #0
    79b0:	strb	r3, [fp, #-25]	; 0xffffffe7
    79b4:	b	9f28 <doProlog+0x2a10>
    79b8:	ldr	r3, [fp, #8]
    79bc:	ldr	r2, [fp, #-176]	; 0xffffff50
    79c0:	mov	r1, #1
    79c4:	ldr	r0, [fp, #-168]	; 0xffffff58
    79c8:	bl	68bc <processXmlDecl>
    79cc:	str	r0, [fp, #-52]	; 0xffffffcc
    79d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    79d4:	cmp	r3, #0
    79d8:	beq	79e4 <doProlog+0x4cc>
    79dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    79e0:	b	a0a4 <doProlog+0x2b8c>
    79e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    79e8:	ldr	r3, [r3, #152]	; 0x98
    79ec:	str	r3, [fp, #-172]	; 0xffffff54
    79f0:	mov	r3, #0
    79f4:	strb	r3, [fp, #-25]	; 0xffffffe7
    79f8:	b	a014 <doProlog+0x2afc>
    79fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a00:	mov	r2, #0
    7a04:	strb	r2, [r3, #505]	; 0x1f9
    7a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7a0c:	add	r1, r3, #132	; 0x84
    7a10:	mov	r3, #36	; 0x24
    7a14:	movw	r2, #0
    7a18:	movt	r2, #0
    7a1c:	ldr	r0, [fp, #-168]	; 0xffffff58
    7a20:	bl	e00c <lookup>
    7a24:	mov	r2, r0
    7a28:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a2c:	str	r2, [r3, #324]	; 0x144
    7a30:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a34:	ldr	r3, [r3, #324]	; 0x144
    7a38:	cmp	r3, #0
    7a3c:	bne	7a48 <doProlog+0x530>
    7a40:	mov	r3, #1
    7a44:	b	a0a4 <doProlog+0x2b8c>
    7a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7a4c:	mov	r2, #1
    7a50:	strb	r2, [r3, #129]	; 0x81
    7a54:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a58:	ldr	r3, [r3, #92]	; 0x5c
    7a5c:	cmp	r3, #0
    7a60:	beq	7b18 <doProlog+0x600>
    7a64:	ldr	r3, [fp, #-172]	; 0xffffff54
    7a68:	ldr	r4, [r3, #56]	; 0x38
    7a6c:	ldr	r2, [fp, #8]
    7a70:	ldr	r3, [fp, #-16]
    7a74:	ldr	r1, [fp, #-176]	; 0xffffff50
    7a78:	ldr	r0, [fp, #-172]	; 0xffffff54
    7a7c:	blx	r4
    7a80:	mov	r3, r0
    7a84:	cmp	r3, #0
    7a88:	bne	7a94 <doProlog+0x57c>
    7a8c:	mov	r3, #32
    7a90:	b	a0a4 <doProlog+0x2b8c>
    7a94:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a98:	add	r0, r3, #432	; 0x1b0
    7a9c:	ldr	r3, [fp, #-172]	; 0xffffff54
    7aa0:	ldr	r3, [r3, #68]	; 0x44
    7aa4:	mov	r2, r3
    7aa8:	ldr	r3, [fp, #-176]	; 0xffffff50
    7aac:	add	r1, r3, r2
    7ab0:	ldr	r2, [fp, #8]
    7ab4:	ldr	r3, [fp, #-172]	; 0xffffff54
    7ab8:	ldr	r3, [r3, #68]	; 0x44
    7abc:	rsb	r3, r3, #0
    7ac0:	add	r3, r2, r3
    7ac4:	mov	r2, r1
    7ac8:	ldr	r1, [fp, #-172]	; 0xffffff54
    7acc:	bl	edc8 <poolStoreString>
    7ad0:	str	r0, [fp, #-56]	; 0xffffffc8
    7ad4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7ad8:	cmp	r3, #0
    7adc:	bne	7ae8 <doProlog+0x5d0>
    7ae0:	mov	r3, #1
    7ae4:	b	a0a4 <doProlog+0x2b8c>
    7ae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7aec:	bl	d010 <normalizePublicId>
    7af0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7af4:	ldr	r2, [r3, #444]	; 0x1bc
    7af8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7afc:	str	r2, [r3, #448]	; 0x1c0
    7b00:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7b08:	str	r2, [r3, #336]	; 0x150
    7b0c:	mov	r3, #0
    7b10:	strb	r3, [fp, #-25]	; 0xffffffe7
    7b14:	b	7b4c <doProlog+0x634>
    7b18:	ldr	r3, [fp, #-172]	; 0xffffff54
    7b1c:	ldr	r4, [r3, #56]	; 0x38
    7b20:	ldr	r2, [fp, #8]
    7b24:	ldr	r3, [fp, #-16]
    7b28:	ldr	r1, [fp, #-176]	; 0xffffff50
    7b2c:	ldr	r0, [fp, #-172]	; 0xffffff54
    7b30:	blx	r4
    7b34:	mov	r3, r0
    7b38:	cmp	r3, #0
    7b3c:	bne	7b48 <doProlog+0x630>
    7b40:	mov	r3, #32
    7b44:	b	a0a4 <doProlog+0x2b8c>
    7b48:	nop	{0}
    7b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b50:	ldrb	r3, [r3, #128]	; 0x80
    7b54:	cmp	r3, #0
    7b58:	beq	9f30 <doProlog+0x2a18>
    7b5c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b60:	ldr	r3, [r3, #324]	; 0x144
    7b64:	cmp	r3, #0
    7b68:	beq	9f30 <doProlog+0x2a18>
    7b6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b70:	add	r0, r3, #80	; 0x50
    7b74:	ldr	r3, [fp, #-172]	; 0xffffff54
    7b78:	ldr	r3, [r3, #68]	; 0x44
    7b7c:	mov	r2, r3
    7b80:	ldr	r3, [fp, #-176]	; 0xffffff50
    7b84:	add	r1, r3, r2
    7b88:	ldr	r2, [fp, #8]
    7b8c:	ldr	r3, [fp, #-172]	; 0xffffff54
    7b90:	ldr	r3, [r3, #68]	; 0x44
    7b94:	rsb	r3, r3, #0
    7b98:	add	r3, r2, r3
    7b9c:	mov	r2, r1
    7ba0:	ldr	r1, [fp, #-172]	; 0xffffff54
    7ba4:	bl	edc8 <poolStoreString>
    7ba8:	str	r0, [fp, #-60]	; 0xffffffc4
    7bac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7bb0:	cmp	r3, #0
    7bb4:	bne	7bc0 <doProlog+0x6a8>
    7bb8:	mov	r3, #1
    7bbc:	b	a0a4 <doProlog+0x2b8c>
    7bc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    7bc4:	bl	d010 <normalizePublicId>
    7bc8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7bcc:	ldr	r3, [r3, #324]	; 0x144
    7bd0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7bd4:	str	r2, [r3, #24]
    7bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7bdc:	ldr	r2, [r3, #92]	; 0x5c
    7be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7be4:	str	r2, [r3, #96]	; 0x60
    7be8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7bec:	ldr	r3, [r3, #144]	; 0x90
    7bf0:	cmp	r3, #0
    7bf4:	beq	9f30 <doProlog+0x2a18>
    7bf8:	mov	r3, #0
    7bfc:	strb	r3, [fp, #-25]	; 0xffffffe7
    7c00:	b	9f30 <doProlog+0x2a18>
    7c04:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c08:	ldr	r3, [r3, #328]	; 0x148
    7c0c:	cmp	r3, #0
    7c10:	beq	7c64 <doProlog+0x74c>
    7c14:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c18:	ldr	r4, [r3, #92]	; 0x5c
    7c1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c20:	ldr	r0, [r3, #4]
    7c24:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c28:	ldr	r1, [r3, #328]	; 0x148
    7c2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c30:	ldr	r2, [r3, #332]	; 0x14c
    7c34:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c38:	ldr	ip, [r3, #336]	; 0x150
    7c3c:	mov	r3, #0
    7c40:	str	r3, [sp]
    7c44:	mov	r3, ip
    7c48:	blx	r4
    7c4c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c50:	add	r3, r3, #432	; 0x1b0
    7c54:	mov	r0, r3
    7c58:	bl	e8f8 <poolClear>
    7c5c:	mov	r3, #0
    7c60:	strb	r3, [fp, #-25]	; 0xffffffe7
    7c64:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c68:	ldr	r3, [r3, #332]	; 0x14c
    7c6c:	cmp	r3, #0
    7c70:	bne	7c84 <doProlog+0x76c>
    7c74:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c78:	ldrb	r3, [r3, #505]	; 0x1f9
    7c7c:	cmp	r3, #0
    7c80:	beq	7dec <doProlog+0x8d4>
    7c84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7c88:	ldrb	r3, [r3, #129]	; 0x81
    7c8c:	strb	r3, [fp, #-61]	; 0xffffffc3
    7c90:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7c94:	mov	r2, #1
    7c98:	strb	r2, [r3, #129]	; 0x81
    7c9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ca0:	ldr	r3, [r3, #508]	; 0x1fc
    7ca4:	cmp	r3, #0
    7ca8:	beq	7de0 <doProlog+0x8c8>
    7cac:	ldr	r3, [fp, #-168]	; 0xffffff58
    7cb0:	ldr	r3, [r3, #120]	; 0x78
    7cb4:	cmp	r3, #0
    7cb8:	beq	7de0 <doProlog+0x8c8>
    7cbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7cc0:	add	r1, r3, #132	; 0x84
    7cc4:	mov	r3, #36	; 0x24
    7cc8:	movw	r2, #0
    7ccc:	movt	r2, #0
    7cd0:	ldr	r0, [fp, #-168]	; 0xffffff58
    7cd4:	bl	e00c <lookup>
    7cd8:	str	r0, [fp, #-68]	; 0xffffffbc
    7cdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7ce0:	cmp	r3, #0
    7ce4:	bne	7cf0 <doProlog+0x7d8>
    7ce8:	mov	r3, #1
    7cec:	b	a0a4 <doProlog+0x2b8c>
    7cf0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7cf4:	ldrb	r3, [r3, #505]	; 0x1f9
    7cf8:	cmp	r3, #0
    7cfc:	beq	7d10 <doProlog+0x7f8>
    7d00:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d04:	ldr	r2, [r3, #368]	; 0x170
    7d08:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7d0c:	str	r2, [r3, #20]
    7d10:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7d14:	mov	r2, #0
    7d18:	strb	r2, [r3, #131]	; 0x83
    7d1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d20:	ldr	r4, [r3, #120]	; 0x78
    7d24:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d28:	ldr	r0, [r3, #124]	; 0x7c
    7d2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7d30:	ldr	r2, [r3, #20]
    7d34:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7d38:	ldr	r1, [r3, #16]
    7d3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7d40:	ldr	r3, [r3, #24]
    7d44:	str	r3, [sp]
    7d48:	mov	r3, r1
    7d4c:	mov	r1, #0
    7d50:	blx	r4
    7d54:	mov	r3, r0
    7d58:	cmp	r3, #0
    7d5c:	bne	7d68 <doProlog+0x850>
    7d60:	mov	r3, #21
    7d64:	b	a0a4 <doProlog+0x2b8c>
    7d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7d6c:	ldrb	r3, [r3, #131]	; 0x83
    7d70:	cmp	r3, #0
    7d74:	beq	7dc4 <doProlog+0x8ac>
    7d78:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7d7c:	ldrb	r3, [r3, #130]	; 0x82
    7d80:	cmp	r3, #0
    7d84:	bne	7de0 <doProlog+0x8c8>
    7d88:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d8c:	ldr	r3, [r3, #116]	; 0x74
    7d90:	cmp	r3, #0
    7d94:	beq	7de0 <doProlog+0x8c8>
    7d98:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d9c:	ldr	r3, [r3, #116]	; 0x74
    7da0:	ldr	r2, [fp, #-168]	; 0xffffff58
    7da4:	ldr	r2, [r2, #4]
    7da8:	mov	r0, r2
    7dac:	blx	r3
    7db0:	mov	r3, r0
    7db4:	cmp	r3, #0
    7db8:	bne	7de0 <doProlog+0x8c8>
    7dbc:	mov	r3, #22
    7dc0:	b	a0a4 <doProlog+0x2b8c>
    7dc4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7dc8:	ldr	r3, [r3, #332]	; 0x14c
    7dcc:	cmp	r3, #0
    7dd0:	bne	7de0 <doProlog+0x8c8>
    7dd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7dd8:	ldrb	r2, [fp, #-61]	; 0xffffffc3
    7ddc:	strb	r2, [r3, #129]	; 0x81
    7de0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7de4:	mov	r2, #0
    7de8:	strb	r2, [r3, #505]	; 0x1f9
    7dec:	ldr	r3, [fp, #-168]	; 0xffffff58
    7df0:	ldr	r3, [r3, #96]	; 0x60
    7df4:	cmp	r3, #0
    7df8:	beq	9f38 <doProlog+0x2a20>
    7dfc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e00:	ldr	r3, [r3, #96]	; 0x60
    7e04:	ldr	r2, [fp, #-168]	; 0xffffff58
    7e08:	ldr	r2, [r2, #4]
    7e0c:	mov	r0, r2
    7e10:	blx	r3
    7e14:	mov	r3, #0
    7e18:	strb	r3, [fp, #-25]	; 0xffffffe7
    7e1c:	b	9f38 <doProlog+0x2a20>
    7e20:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e24:	ldrb	r3, [r3, #505]	; 0x1f9
    7e28:	cmp	r3, #0
    7e2c:	beq	7f6c <doProlog+0xa54>
    7e30:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e34:	ldrb	r3, [r3, #129]	; 0x81
    7e38:	strb	r3, [fp, #-69]	; 0xffffffbb
    7e3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e40:	mov	r2, #1
    7e44:	strb	r2, [r3, #129]	; 0x81
    7e48:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e4c:	ldr	r3, [r3, #508]	; 0x1fc
    7e50:	cmp	r3, #0
    7e54:	beq	7f6c <doProlog+0xa54>
    7e58:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e5c:	ldr	r3, [r3, #120]	; 0x78
    7e60:	cmp	r3, #0
    7e64:	beq	7f6c <doProlog+0xa54>
    7e68:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e6c:	add	r1, r3, #132	; 0x84
    7e70:	mov	r3, #36	; 0x24
    7e74:	movw	r2, #0
    7e78:	movt	r2, #0
    7e7c:	ldr	r0, [fp, #-168]	; 0xffffff58
    7e80:	bl	e00c <lookup>
    7e84:	str	r0, [fp, #-76]	; 0xffffffb4
    7e88:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7e8c:	cmp	r3, #0
    7e90:	bne	7e9c <doProlog+0x984>
    7e94:	mov	r3, #1
    7e98:	b	a0a4 <doProlog+0x2b8c>
    7e9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ea0:	ldr	r2, [r3, #368]	; 0x170
    7ea4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7ea8:	str	r2, [r3, #20]
    7eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7eb0:	mov	r2, #0
    7eb4:	strb	r2, [r3, #131]	; 0x83
    7eb8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ebc:	ldr	r4, [r3, #120]	; 0x78
    7ec0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ec4:	ldr	r0, [r3, #124]	; 0x7c
    7ec8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7ecc:	ldr	r2, [r3, #20]
    7ed0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7ed4:	ldr	r1, [r3, #16]
    7ed8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7edc:	ldr	r3, [r3, #24]
    7ee0:	str	r3, [sp]
    7ee4:	mov	r3, r1
    7ee8:	mov	r1, #0
    7eec:	blx	r4
    7ef0:	mov	r3, r0
    7ef4:	cmp	r3, #0
    7ef8:	bne	7f04 <doProlog+0x9ec>
    7efc:	mov	r3, #21
    7f00:	b	a0a4 <doProlog+0x2b8c>
    7f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7f08:	ldrb	r3, [r3, #131]	; 0x83
    7f0c:	cmp	r3, #0
    7f10:	beq	7f60 <doProlog+0xa48>
    7f14:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7f18:	ldrb	r3, [r3, #130]	; 0x82
    7f1c:	cmp	r3, #0
    7f20:	bne	7f6c <doProlog+0xa54>
    7f24:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f28:	ldr	r3, [r3, #116]	; 0x74
    7f2c:	cmp	r3, #0
    7f30:	beq	7f6c <doProlog+0xa54>
    7f34:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f38:	ldr	r3, [r3, #116]	; 0x74
    7f3c:	ldr	r2, [fp, #-168]	; 0xffffff58
    7f40:	ldr	r2, [r2, #4]
    7f44:	mov	r0, r2
    7f48:	blx	r3
    7f4c:	mov	r3, r0
    7f50:	cmp	r3, #0
    7f54:	bne	7f6c <doProlog+0xa54>
    7f58:	mov	r3, #22
    7f5c:	b	a0a4 <doProlog+0x2b8c>
    7f60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7f64:	ldrb	r2, [fp, #-69]	; 0xffffffbb
    7f68:	strb	r2, [r3, #129]	; 0x81
    7f6c:	ldr	r2, [fp, #-168]	; 0xffffff58
    7f70:	movw	r3, #0
    7f74:	movt	r3, #0
    7f78:	str	r3, [r2, #288]	; 0x120
    7f7c:	ldr	r3, [fp, #12]
    7f80:	ldr	r2, [fp, #-180]	; 0xffffff4c
    7f84:	ldr	r1, [fp, #-176]	; 0xffffff50
    7f88:	ldr	r0, [fp, #-168]	; 0xffffff58
    7f8c:	bl	2e6c <contentProcessor>
    7f90:	mov	r3, r0
    7f94:	b	a0a4 <doProlog+0x2b8c>
    7f98:	ldr	r3, [fp, #8]
    7f9c:	ldr	r2, [fp, #-176]	; 0xffffff50
    7fa0:	ldr	r1, [fp, #-172]	; 0xffffff54
    7fa4:	ldr	r0, [fp, #-168]	; 0xffffff58
    7fa8:	bl	f870 <getElementType>
    7fac:	mov	r2, r0
    7fb0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fb4:	str	r2, [r3, #352]	; 0x160
    7fb8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fbc:	ldr	r3, [r3, #352]	; 0x160
    7fc0:	cmp	r3, #0
    7fc4:	bne	80e8 <doProlog+0xbd0>
    7fc8:	mov	r3, #1
    7fcc:	b	a0a4 <doProlog+0x2b8c>
    7fd0:	ldr	r3, [fp, #8]
    7fd4:	ldr	r2, [fp, #-176]	; 0xffffff50
    7fd8:	ldr	r1, [fp, #-172]	; 0xffffff54
    7fdc:	ldr	r0, [fp, #-168]	; 0xffffff58
    7fe0:	bl	c130 <getAttributeId>
    7fe4:	mov	r2, r0
    7fe8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fec:	str	r2, [r3, #356]	; 0x164
    7ff0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ff4:	ldr	r3, [r3, #356]	; 0x164
    7ff8:	cmp	r3, #0
    7ffc:	bne	8008 <doProlog+0xaf0>
    8000:	mov	r3, #1
    8004:	b	a0a4 <doProlog+0x2b8c>
    8008:	ldr	r3, [fp, #-168]	; 0xffffff58
    800c:	mov	r2, #0
    8010:	strb	r2, [r3, #360]	; 0x168
    8014:	ldr	r3, [fp, #-168]	; 0xffffff58
    8018:	mov	r2, #0
    801c:	str	r2, [r3, #340]	; 0x154
    8020:	ldr	r3, [fp, #-168]	; 0xffffff58
    8024:	mov	r2, #0
    8028:	strb	r2, [r3, #361]	; 0x169
    802c:	b	80ec <doProlog+0xbd4>
    8030:	ldr	r3, [fp, #-168]	; 0xffffff58
    8034:	mov	r2, #1
    8038:	strb	r2, [r3, #360]	; 0x168
    803c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8040:	movw	r3, #0
    8044:	movt	r3, #0
    8048:	str	r3, [r2, #340]	; 0x154
    804c:	b	80ec <doProlog+0xbd4>
    8050:	ldr	r3, [fp, #-168]	; 0xffffff58
    8054:	mov	r2, #1
    8058:	strb	r2, [r3, #361]	; 0x169
    805c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8060:	movw	r3, #0
    8064:	movt	r3, #0
    8068:	str	r3, [r2, #340]	; 0x154
    806c:	b	80ec <doProlog+0xbd4>
    8070:	ldr	r2, [fp, #-168]	; 0xffffff58
    8074:	movw	r3, #0
    8078:	movt	r3, #0
    807c:	str	r3, [r2, #340]	; 0x154
    8080:	b	80ec <doProlog+0xbd4>
    8084:	ldr	r2, [fp, #-168]	; 0xffffff58
    8088:	movw	r3, #0
    808c:	movt	r3, #0
    8090:	str	r3, [r2, #340]	; 0x154
    8094:	b	80ec <doProlog+0xbd4>
    8098:	ldr	r2, [fp, #-168]	; 0xffffff58
    809c:	movw	r3, #0
    80a0:	movt	r3, #0
    80a4:	str	r3, [r2, #340]	; 0x154
    80a8:	b	80ec <doProlog+0xbd4>
    80ac:	ldr	r2, [fp, #-168]	; 0xffffff58
    80b0:	movw	r3, #0
    80b4:	movt	r3, #0
    80b8:	str	r3, [r2, #340]	; 0x154
    80bc:	b	80ec <doProlog+0xbd4>
    80c0:	ldr	r2, [fp, #-168]	; 0xffffff58
    80c4:	movw	r3, #0
    80c8:	movt	r3, #0
    80cc:	str	r3, [r2, #340]	; 0x154
    80d0:	b	80ec <doProlog+0xbd4>
    80d4:	ldr	r2, [fp, #-168]	; 0xffffff58
    80d8:	movw	r3, #0
    80dc:	movt	r3, #0
    80e0:	str	r3, [r2, #340]	; 0x154
    80e4:	b	80ec <doProlog+0xbd4>
    80e8:	nop	{0}
    80ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    80f0:	ldrb	r3, [r3, #128]	; 0x80
    80f4:	cmp	r3, #0
    80f8:	beq	9f40 <doProlog+0x2a28>
    80fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8100:	ldr	r3, [r3, #140]	; 0x8c
    8104:	cmp	r3, #0
    8108:	beq	9f40 <doProlog+0x2a28>
    810c:	mov	r3, #0
    8110:	strb	r3, [fp, #-25]	; 0xffffffe7
    8114:	b	9f40 <doProlog+0x2a28>
    8118:	ldr	r3, [fp, #-40]	; 0xffffffd8
    811c:	ldrb	r3, [r3, #128]	; 0x80
    8120:	cmp	r3, #0
    8124:	beq	9f48 <doProlog+0x2a30>
    8128:	ldr	r3, [fp, #-168]	; 0xffffff58
    812c:	ldr	r3, [r3, #140]	; 0x8c
    8130:	cmp	r3, #0
    8134:	beq	9f48 <doProlog+0x2a30>
    8138:	ldr	r3, [fp, #-168]	; 0xffffff58
    813c:	ldr	r3, [r3, #340]	; 0x154
    8140:	cmp	r3, #0
    8144:	beq	8158 <doProlog+0xc40>
    8148:	movw	r3, #0
    814c:	movt	r3, #0
    8150:	str	r3, [fp, #-32]	; 0xffffffe0
    8154:	b	817c <doProlog+0xc64>
    8158:	ldr	r3, [fp, #-44]	; 0xffffffd4
    815c:	cmp	r3, #32
    8160:	bne	8170 <doProlog+0xc58>
    8164:	movw	r3, #0
    8168:	movt	r3, #0
    816c:	b	8178 <doProlog+0xc60>
    8170:	movw	r3, #0
    8174:	movt	r3, #0
    8178:	str	r3, [fp, #-32]	; 0xffffffe0
    817c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8180:	add	r3, r3, #432	; 0x1b0
    8184:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8188:	mov	r0, r3
    818c:	bl	ed0c <poolAppendString>
    8190:	mov	r3, r0
    8194:	cmp	r3, #0
    8198:	bne	81a4 <doProlog+0xc8c>
    819c:	mov	r3, #1
    81a0:	b	a0a4 <doProlog+0x2b8c>
    81a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    81a8:	add	r0, r3, #432	; 0x1b0
    81ac:	ldr	r3, [fp, #8]
    81b0:	ldr	r2, [fp, #-176]	; 0xffffff50
    81b4:	ldr	r1, [fp, #-172]	; 0xffffff54
    81b8:	bl	ea68 <poolAppend>
    81bc:	mov	r3, r0
    81c0:	cmp	r3, #0
    81c4:	bne	81d0 <doProlog+0xcb8>
    81c8:	mov	r3, #1
    81cc:	b	a0a4 <doProlog+0x2b8c>
    81d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    81d4:	ldr	r2, [r3, #448]	; 0x1c0
    81d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    81dc:	str	r2, [r3, #340]	; 0x154
    81e0:	mov	r3, #0
    81e4:	strb	r3, [fp, #-25]	; 0xffffffe7
    81e8:	b	9f48 <doProlog+0x2a30>
    81ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    81f0:	ldrb	r3, [r3, #128]	; 0x80
    81f4:	cmp	r3, #0
    81f8:	beq	9f50 <doProlog+0x2a38>
    81fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8200:	ldr	r0, [r3, #352]	; 0x160
    8204:	ldr	r3, [fp, #-168]	; 0xffffff58
    8208:	ldr	r1, [r3, #356]	; 0x164
    820c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8210:	ldrb	r2, [r3, #360]	; 0x168
    8214:	ldr	r3, [fp, #-168]	; 0xffffff58
    8218:	ldrb	ip, [r3, #361]	; 0x169
    821c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8220:	str	r3, [sp, #4]
    8224:	mov	r3, #0
    8228:	str	r3, [sp]
    822c:	mov	r3, ip
    8230:	bl	bcc4 <defineAttribute>
    8234:	mov	r3, r0
    8238:	cmp	r3, #0
    823c:	bne	8248 <doProlog+0xd30>
    8240:	mov	r3, #1
    8244:	b	a0a4 <doProlog+0x2b8c>
    8248:	ldr	r3, [fp, #-168]	; 0xffffff58
    824c:	ldr	r3, [r3, #140]	; 0x8c
    8250:	cmp	r3, #0
    8254:	beq	9f50 <doProlog+0x2a38>
    8258:	ldr	r3, [fp, #-168]	; 0xffffff58
    825c:	ldr	r3, [r3, #340]	; 0x154
    8260:	cmp	r3, #0
    8264:	beq	9f50 <doProlog+0x2a38>
    8268:	ldr	r3, [fp, #-168]	; 0xffffff58
    826c:	ldr	r3, [r3, #340]	; 0x154
    8270:	ldrb	r3, [r3]
    8274:	cmp	r3, #40	; 0x28
    8278:	beq	82a8 <doProlog+0xd90>
    827c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8280:	ldr	r3, [r3, #340]	; 0x154
    8284:	ldrb	r3, [r3]
    8288:	cmp	r3, #78	; 0x4e
    828c:	bne	8378 <doProlog+0xe60>
    8290:	ldr	r3, [fp, #-168]	; 0xffffff58
    8294:	ldr	r3, [r3, #340]	; 0x154
    8298:	add	r3, r3, #1
    829c:	ldrb	r3, [r3]
    82a0:	cmp	r3, #79	; 0x4f
    82a4:	bne	8378 <doProlog+0xe60>
    82a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    82ac:	ldr	r2, [r3, #444]	; 0x1bc
    82b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    82b4:	ldr	r3, [r3, #440]	; 0x1b8
    82b8:	cmp	r2, r3
    82bc:	bne	82dc <doProlog+0xdc4>
    82c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    82c4:	add	r3, r3, #432	; 0x1b0
    82c8:	mov	r0, r3
    82cc:	bl	ee7c <poolGrow>
    82d0:	mov	r3, r0
    82d4:	cmp	r3, #0
    82d8:	beq	8370 <doProlog+0xe58>
    82dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    82e0:	ldr	r3, [r3, #444]	; 0x1bc
    82e4:	add	r1, r3, #1
    82e8:	ldr	r2, [fp, #-168]	; 0xffffff58
    82ec:	str	r1, [r2, #444]	; 0x1bc
    82f0:	mov	r2, #41	; 0x29
    82f4:	strb	r2, [r3]
    82f8:	nop	{0}
    82fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8300:	ldr	r2, [r3, #444]	; 0x1bc
    8304:	ldr	r3, [fp, #-168]	; 0xffffff58
    8308:	ldr	r3, [r3, #440]	; 0x1b8
    830c:	cmp	r2, r3
    8310:	bne	8330 <doProlog+0xe18>
    8314:	ldr	r3, [fp, #-168]	; 0xffffff58
    8318:	add	r3, r3, #432	; 0x1b0
    831c:	mov	r0, r3
    8320:	bl	ee7c <poolGrow>
    8324:	mov	r3, r0
    8328:	cmp	r3, #0
    832c:	beq	8370 <doProlog+0xe58>
    8330:	ldr	r3, [fp, #-168]	; 0xffffff58
    8334:	ldr	r3, [r3, #444]	; 0x1bc
    8338:	add	r1, r3, #1
    833c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8340:	str	r1, [r2, #444]	; 0x1bc
    8344:	mov	r2, #0
    8348:	strb	r2, [r3]
    834c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8350:	ldr	r2, [r3, #448]	; 0x1c0
    8354:	ldr	r3, [fp, #-168]	; 0xffffff58
    8358:	str	r2, [r3, #340]	; 0x154
    835c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8360:	ldr	r2, [r3, #444]	; 0x1bc
    8364:	ldr	r3, [fp, #-168]	; 0xffffff58
    8368:	str	r2, [r3, #448]	; 0x1c0
    836c:	b	8378 <doProlog+0xe60>
    8370:	mov	r3, #1
    8374:	b	a0a4 <doProlog+0x2b8c>
    8378:	ldr	r3, [fp, #-20]	; 0xffffffec
    837c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8380:	str	r2, [r3]
    8384:	ldr	r3, [fp, #-168]	; 0xffffff58
    8388:	ldr	r4, [r3, #140]	; 0x8c
    838c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8390:	ldr	r0, [r3, #4]
    8394:	ldr	r3, [fp, #-168]	; 0xffffff58
    8398:	ldr	r3, [r3, #352]	; 0x160
    839c:	ldr	r1, [r3]
    83a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    83a4:	ldr	r3, [r3, #356]	; 0x164
    83a8:	ldr	r2, [r3]
    83ac:	ldr	r3, [fp, #-168]	; 0xffffff58
    83b0:	ldr	ip, [r3, #340]	; 0x154
    83b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    83b8:	cmp	r3, #36	; 0x24
    83bc:	moveq	r3, #1
    83c0:	movne	r3, #0
    83c4:	uxtb	r3, r3
    83c8:	str	r3, [sp, #4]
    83cc:	mov	r3, #0
    83d0:	str	r3, [sp]
    83d4:	mov	r3, ip
    83d8:	blx	r4
    83dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    83e0:	add	r3, r3, #432	; 0x1b0
    83e4:	mov	r0, r3
    83e8:	bl	e8f8 <poolClear>
    83ec:	mov	r3, #0
    83f0:	strb	r3, [fp, #-25]	; 0xffffffe7
    83f4:	b	9f50 <doProlog+0x2a38>
    83f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    83fc:	ldrb	r3, [r3, #128]	; 0x80
    8400:	cmp	r3, #0
    8404:	beq	9f58 <doProlog+0x2a40>
    8408:	ldr	r3, [fp, #-168]	; 0xffffff58
    840c:	ldrb	r1, [r3, #360]	; 0x168
    8410:	ldr	r3, [fp, #-172]	; 0xffffff54
    8414:	ldr	r3, [r3, #68]	; 0x44
    8418:	mov	r2, r3
    841c:	ldr	r3, [fp, #-176]	; 0xffffff50
    8420:	add	r0, r3, r2
    8424:	ldr	r2, [fp, #8]
    8428:	ldr	r3, [fp, #-172]	; 0xffffff54
    842c:	ldr	r3, [r3, #68]	; 0x44
    8430:	rsb	r3, r3, #0
    8434:	add	r3, r2, r3
    8438:	ldr	r2, [fp, #-40]	; 0xffffffd8
    843c:	add	r2, r2, #80	; 0x50
    8440:	str	r2, [sp, #4]
    8444:	str	r3, [sp]
    8448:	mov	r3, r0
    844c:	mov	r2, r1
    8450:	ldr	r1, [fp, #-172]	; 0xffffff54
    8454:	ldr	r0, [fp, #-168]	; 0xffffff58
    8458:	bl	a918 <storeAttributeValue>
    845c:	str	r0, [fp, #-80]	; 0xffffffb0
    8460:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8464:	cmp	r3, #0
    8468:	beq	8474 <doProlog+0xf5c>
    846c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8470:	b	a0a4 <doProlog+0x2b8c>
    8474:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8478:	ldr	r3, [r3, #96]	; 0x60
    847c:	str	r3, [fp, #-84]	; 0xffffffac
    8480:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8484:	ldr	r2, [r3, #92]	; 0x5c
    8488:	ldr	r3, [fp, #-40]	; 0xffffffd8
    848c:	str	r2, [r3, #96]	; 0x60
    8490:	ldr	r3, [fp, #-168]	; 0xffffff58
    8494:	ldr	r0, [r3, #352]	; 0x160
    8498:	ldr	r3, [fp, #-168]	; 0xffffff58
    849c:	ldr	r1, [r3, #356]	; 0x164
    84a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    84a4:	ldrb	r2, [r3, #360]	; 0x168
    84a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    84ac:	str	r3, [sp, #4]
    84b0:	ldr	r3, [fp, #-84]	; 0xffffffac
    84b4:	str	r3, [sp]
    84b8:	mov	r3, #0
    84bc:	bl	bcc4 <defineAttribute>
    84c0:	mov	r3, r0
    84c4:	cmp	r3, #0
    84c8:	bne	84d4 <doProlog+0xfbc>
    84cc:	mov	r3, #1
    84d0:	b	a0a4 <doProlog+0x2b8c>
    84d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    84d8:	ldr	r3, [r3, #140]	; 0x8c
    84dc:	cmp	r3, #0
    84e0:	beq	9f58 <doProlog+0x2a40>
    84e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    84e8:	ldr	r3, [r3, #340]	; 0x154
    84ec:	cmp	r3, #0
    84f0:	beq	9f58 <doProlog+0x2a40>
    84f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    84f8:	ldr	r3, [r3, #340]	; 0x154
    84fc:	ldrb	r3, [r3]
    8500:	cmp	r3, #40	; 0x28
    8504:	beq	8534 <doProlog+0x101c>
    8508:	ldr	r3, [fp, #-168]	; 0xffffff58
    850c:	ldr	r3, [r3, #340]	; 0x154
    8510:	ldrb	r3, [r3]
    8514:	cmp	r3, #78	; 0x4e
    8518:	bne	8604 <doProlog+0x10ec>
    851c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8520:	ldr	r3, [r3, #340]	; 0x154
    8524:	add	r3, r3, #1
    8528:	ldrb	r3, [r3]
    852c:	cmp	r3, #79	; 0x4f
    8530:	bne	8604 <doProlog+0x10ec>
    8534:	ldr	r3, [fp, #-168]	; 0xffffff58
    8538:	ldr	r2, [r3, #444]	; 0x1bc
    853c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8540:	ldr	r3, [r3, #440]	; 0x1b8
    8544:	cmp	r2, r3
    8548:	bne	8568 <doProlog+0x1050>
    854c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8550:	add	r3, r3, #432	; 0x1b0
    8554:	mov	r0, r3
    8558:	bl	ee7c <poolGrow>
    855c:	mov	r3, r0
    8560:	cmp	r3, #0
    8564:	beq	85fc <doProlog+0x10e4>
    8568:	ldr	r3, [fp, #-168]	; 0xffffff58
    856c:	ldr	r3, [r3, #444]	; 0x1bc
    8570:	add	r1, r3, #1
    8574:	ldr	r2, [fp, #-168]	; 0xffffff58
    8578:	str	r1, [r2, #444]	; 0x1bc
    857c:	mov	r2, #41	; 0x29
    8580:	strb	r2, [r3]
    8584:	nop	{0}
    8588:	ldr	r3, [fp, #-168]	; 0xffffff58
    858c:	ldr	r2, [r3, #444]	; 0x1bc
    8590:	ldr	r3, [fp, #-168]	; 0xffffff58
    8594:	ldr	r3, [r3, #440]	; 0x1b8
    8598:	cmp	r2, r3
    859c:	bne	85bc <doProlog+0x10a4>
    85a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    85a4:	add	r3, r3, #432	; 0x1b0
    85a8:	mov	r0, r3
    85ac:	bl	ee7c <poolGrow>
    85b0:	mov	r3, r0
    85b4:	cmp	r3, #0
    85b8:	beq	85fc <doProlog+0x10e4>
    85bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    85c0:	ldr	r3, [r3, #444]	; 0x1bc
    85c4:	add	r1, r3, #1
    85c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    85cc:	str	r1, [r2, #444]	; 0x1bc
    85d0:	mov	r2, #0
    85d4:	strb	r2, [r3]
    85d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    85dc:	ldr	r2, [r3, #448]	; 0x1c0
    85e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    85e4:	str	r2, [r3, #340]	; 0x154
    85e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    85ec:	ldr	r2, [r3, #444]	; 0x1bc
    85f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    85f4:	str	r2, [r3, #448]	; 0x1c0
    85f8:	b	8604 <doProlog+0x10ec>
    85fc:	mov	r3, #1
    8600:	b	a0a4 <doProlog+0x2b8c>
    8604:	ldr	r3, [fp, #-20]	; 0xffffffec
    8608:	ldr	r2, [fp, #-176]	; 0xffffff50
    860c:	str	r2, [r3]
    8610:	ldr	r3, [fp, #-168]	; 0xffffff58
    8614:	ldr	r4, [r3, #140]	; 0x8c
    8618:	ldr	r3, [fp, #-168]	; 0xffffff58
    861c:	ldr	r0, [r3, #4]
    8620:	ldr	r3, [fp, #-168]	; 0xffffff58
    8624:	ldr	r3, [r3, #352]	; 0x160
    8628:	ldr	r1, [r3]
    862c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8630:	ldr	r3, [r3, #356]	; 0x164
    8634:	ldr	r2, [r3]
    8638:	ldr	r3, [fp, #-168]	; 0xffffff58
    863c:	ldr	ip, [r3, #340]	; 0x154
    8640:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8644:	cmp	r3, #38	; 0x26
    8648:	moveq	r3, #1
    864c:	movne	r3, #0
    8650:	uxtb	r3, r3
    8654:	str	r3, [sp, #4]
    8658:	ldr	r3, [fp, #-84]	; 0xffffffac
    865c:	str	r3, [sp]
    8660:	mov	r3, ip
    8664:	blx	r4
    8668:	ldr	r3, [fp, #-168]	; 0xffffff58
    866c:	add	r3, r3, #432	; 0x1b0
    8670:	mov	r0, r3
    8674:	bl	e8f8 <poolClear>
    8678:	mov	r3, #0
    867c:	strb	r3, [fp, #-25]	; 0xffffffe7
    8680:	b	9f58 <doProlog+0x2a40>
    8684:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8688:	ldrb	r3, [r3, #128]	; 0x80
    868c:	cmp	r3, #0
    8690:	beq	9f60 <doProlog+0x2a48>
    8694:	ldr	r3, [fp, #-172]	; 0xffffff54
    8698:	ldr	r3, [r3, #68]	; 0x44
    869c:	mov	r2, r3
    86a0:	ldr	r3, [fp, #-176]	; 0xffffff50
    86a4:	add	r1, r3, r2
    86a8:	ldr	r2, [fp, #8]
    86ac:	ldr	r3, [fp, #-172]	; 0xffffff54
    86b0:	ldr	r3, [r3, #68]	; 0x44
    86b4:	rsb	r3, r3, #0
    86b8:	add	r3, r2, r3
    86bc:	mov	r2, r1
    86c0:	ldr	r1, [fp, #-172]	; 0xffffff54
    86c4:	ldr	r0, [fp, #-168]	; 0xffffff58
    86c8:	bl	b1bc <storeEntityValue>
    86cc:	str	r0, [fp, #-88]	; 0xffffffa8
    86d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    86d4:	ldr	r3, [r3, #324]	; 0x144
    86d8:	cmp	r3, #0
    86dc:	beq	87c8 <doProlog+0x12b0>
    86e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    86e4:	ldr	r3, [r3, #324]	; 0x144
    86e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    86ec:	ldr	r2, [r2, #120]	; 0x78
    86f0:	str	r2, [r3, #4]
    86f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    86f8:	ldr	r1, [r3, #116]	; 0x74
    86fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8700:	ldr	r2, [r3, #120]	; 0x78
    8704:	ldr	r3, [fp, #-168]	; 0xffffff58
    8708:	ldr	r3, [r3, #324]	; 0x144
    870c:	sub	r2, r1, r2
    8710:	str	r2, [r3, #8]
    8714:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8718:	ldr	r2, [r3, #116]	; 0x74
    871c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8720:	str	r2, [r3, #120]	; 0x78
    8724:	ldr	r3, [fp, #-168]	; 0xffffff58
    8728:	ldr	r3, [r3, #144]	; 0x90
    872c:	cmp	r3, #0
    8730:	beq	87d8 <doProlog+0x12c0>
    8734:	ldr	r3, [fp, #-20]	; 0xffffffec
    8738:	ldr	r2, [fp, #-176]	; 0xffffff50
    873c:	str	r2, [r3]
    8740:	ldr	r3, [fp, #-168]	; 0xffffff58
    8744:	ldr	r4, [r3, #144]	; 0x90
    8748:	ldr	r3, [fp, #-168]	; 0xffffff58
    874c:	ldr	r0, [r3, #4]
    8750:	ldr	r3, [fp, #-168]	; 0xffffff58
    8754:	ldr	r3, [r3, #324]	; 0x144
    8758:	ldr	ip, [r3]
    875c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8760:	ldr	r3, [r3, #324]	; 0x144
    8764:	ldrb	r3, [r3, #33]	; 0x21
    8768:	mov	r5, r3
    876c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8770:	ldr	r3, [r3, #324]	; 0x144
    8774:	ldr	lr, [r3, #4]
    8778:	ldr	r3, [fp, #-168]	; 0xffffff58
    877c:	ldr	r3, [r3, #324]	; 0x144
    8780:	ldr	r3, [r3, #8]
    8784:	ldr	r2, [fp, #-168]	; 0xffffff58
    8788:	ldr	r2, [r2, #368]	; 0x170
    878c:	mov	r1, #0
    8790:	str	r1, [sp, #16]
    8794:	mov	r1, #0
    8798:	str	r1, [sp, #12]
    879c:	mov	r1, #0
    87a0:	str	r1, [sp, #8]
    87a4:	str	r2, [sp, #4]
    87a8:	str	r3, [sp]
    87ac:	mov	r3, lr
    87b0:	mov	r2, r5
    87b4:	mov	r1, ip
    87b8:	blx	r4
    87bc:	mov	r3, #0
    87c0:	strb	r3, [fp, #-25]	; 0xffffffe7
    87c4:	b	87d8 <doProlog+0x12c0>
    87c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    87cc:	ldr	r2, [r3, #120]	; 0x78
    87d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    87d4:	str	r2, [r3, #116]	; 0x74
    87d8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    87dc:	cmp	r3, #0
    87e0:	beq	9f60 <doProlog+0x2a48>
    87e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    87e8:	b	a0a4 <doProlog+0x2b8c>
    87ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    87f0:	mov	r2, #0
    87f4:	strb	r2, [r3, #505]	; 0x1f9
    87f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    87fc:	mov	r2, #1
    8800:	strb	r2, [r3, #129]	; 0x81
    8804:	ldr	r3, [fp, #-168]	; 0xffffff58
    8808:	ldr	r3, [r3, #92]	; 0x5c
    880c:	cmp	r3, #0
    8810:	beq	8890 <doProlog+0x1378>
    8814:	ldr	r3, [fp, #-168]	; 0xffffff58
    8818:	add	r0, r3, #432	; 0x1b0
    881c:	ldr	r3, [fp, #-172]	; 0xffffff54
    8820:	ldr	r3, [r3, #68]	; 0x44
    8824:	mov	r2, r3
    8828:	ldr	r3, [fp, #-176]	; 0xffffff50
    882c:	add	r1, r3, r2
    8830:	ldr	r2, [fp, #8]
    8834:	ldr	r3, [fp, #-172]	; 0xffffff54
    8838:	ldr	r3, [r3, #68]	; 0x44
    883c:	rsb	r3, r3, #0
    8840:	add	r3, r2, r3
    8844:	mov	r2, r1
    8848:	ldr	r1, [fp, #-172]	; 0xffffff54
    884c:	bl	edc8 <poolStoreString>
    8850:	mov	r2, r0
    8854:	ldr	r3, [fp, #-168]	; 0xffffff58
    8858:	str	r2, [r3, #332]	; 0x14c
    885c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8860:	ldr	r3, [r3, #332]	; 0x14c
    8864:	cmp	r3, #0
    8868:	bne	8874 <doProlog+0x135c>
    886c:	mov	r3, #1
    8870:	b	a0a4 <doProlog+0x2b8c>
    8874:	ldr	r3, [fp, #-168]	; 0xffffff58
    8878:	ldr	r2, [r3, #444]	; 0x1bc
    887c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8880:	str	r2, [r3, #448]	; 0x1c0
    8884:	mov	r3, #0
    8888:	strb	r3, [fp, #-25]	; 0xffffffe7
    888c:	b	88a0 <doProlog+0x1388>
    8890:	ldr	r2, [fp, #-168]	; 0xffffff58
    8894:	movw	r3, #0
    8898:	movt	r3, #0
    889c:	str	r3, [r2, #332]	; 0x14c
    88a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    88a4:	ldrb	r3, [r3, #130]	; 0x82
    88a8:	cmp	r3, #0
    88ac:	bne	88fc <doProlog+0x13e4>
    88b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    88b4:	ldr	r3, [r3, #508]	; 0x1fc
    88b8:	cmp	r3, #0
    88bc:	bne	88fc <doProlog+0x13e4>
    88c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    88c4:	ldr	r3, [r3, #116]	; 0x74
    88c8:	cmp	r3, #0
    88cc:	beq	88fc <doProlog+0x13e4>
    88d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    88d4:	ldr	r3, [r3, #116]	; 0x74
    88d8:	ldr	r2, [fp, #-168]	; 0xffffff58
    88dc:	ldr	r2, [r2, #4]
    88e0:	mov	r0, r2
    88e4:	blx	r3
    88e8:	mov	r3, r0
    88ec:	cmp	r3, #0
    88f0:	bne	88fc <doProlog+0x13e4>
    88f4:	mov	r3, #22
    88f8:	b	a0a4 <doProlog+0x2b8c>
    88fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8900:	ldr	r3, [r3, #324]	; 0x144
    8904:	cmp	r3, #0
    8908:	bne	895c <doProlog+0x1444>
    890c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8910:	add	r1, r3, #132	; 0x84
    8914:	mov	r3, #36	; 0x24
    8918:	movw	r2, #0
    891c:	movt	r2, #0
    8920:	ldr	r0, [fp, #-168]	; 0xffffff58
    8924:	bl	e00c <lookup>
    8928:	mov	r2, r0
    892c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8930:	str	r2, [r3, #324]	; 0x144
    8934:	ldr	r3, [fp, #-168]	; 0xffffff58
    8938:	ldr	r3, [r3, #324]	; 0x144
    893c:	cmp	r3, #0
    8940:	bne	894c <doProlog+0x1434>
    8944:	mov	r3, #1
    8948:	b	a0a4 <doProlog+0x2b8c>
    894c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8950:	ldr	r3, [r3, #324]	; 0x144
    8954:	mov	r2, #0
    8958:	str	r2, [r3, #24]
    895c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8960:	ldrb	r3, [r3, #128]	; 0x80
    8964:	cmp	r3, #0
    8968:	beq	9f68 <doProlog+0x2a50>
    896c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8970:	ldr	r3, [r3, #324]	; 0x144
    8974:	cmp	r3, #0
    8978:	beq	9f68 <doProlog+0x2a50>
    897c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8980:	add	r0, r3, #80	; 0x50
    8984:	ldr	r3, [fp, #-172]	; 0xffffff54
    8988:	ldr	r3, [r3, #68]	; 0x44
    898c:	mov	r2, r3
    8990:	ldr	r3, [fp, #-176]	; 0xffffff50
    8994:	add	r1, r3, r2
    8998:	ldr	r2, [fp, #8]
    899c:	ldr	r3, [fp, #-172]	; 0xffffff54
    89a0:	ldr	r3, [r3, #68]	; 0x44
    89a4:	rsb	r3, r3, #0
    89a8:	add	r2, r2, r3
    89ac:	ldr	r3, [fp, #-168]	; 0xffffff58
    89b0:	ldr	r4, [r3, #324]	; 0x144
    89b4:	mov	r3, r2
    89b8:	mov	r2, r1
    89bc:	ldr	r1, [fp, #-172]	; 0xffffff54
    89c0:	bl	edc8 <poolStoreString>
    89c4:	mov	r3, r0
    89c8:	str	r3, [r4, #16]
    89cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    89d0:	ldr	r3, [r3, #324]	; 0x144
    89d4:	ldr	r3, [r3, #16]
    89d8:	cmp	r3, #0
    89dc:	bne	89e8 <doProlog+0x14d0>
    89e0:	mov	r3, #1
    89e4:	b	a0a4 <doProlog+0x2b8c>
    89e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    89ec:	ldr	r3, [r3, #324]	; 0x144
    89f0:	ldr	r2, [fp, #-168]	; 0xffffff58
    89f4:	ldr	r2, [r2, #368]	; 0x170
    89f8:	str	r2, [r3, #20]
    89fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a00:	ldr	r2, [r3, #92]	; 0x5c
    8a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a08:	str	r2, [r3, #96]	; 0x60
    8a0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a10:	ldr	r3, [r3, #144]	; 0x90
    8a14:	cmp	r3, #0
    8a18:	beq	9f68 <doProlog+0x2a50>
    8a1c:	mov	r3, #0
    8a20:	strb	r3, [fp, #-25]	; 0xffffffe7
    8a24:	b	9f68 <doProlog+0x2a50>
    8a28:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a2c:	ldrb	r3, [r3, #128]	; 0x80
    8a30:	cmp	r3, #0
    8a34:	beq	9f70 <doProlog+0x2a58>
    8a38:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a3c:	ldr	r3, [r3, #324]	; 0x144
    8a40:	cmp	r3, #0
    8a44:	beq	9f70 <doProlog+0x2a58>
    8a48:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a4c:	ldr	r3, [r3, #144]	; 0x90
    8a50:	cmp	r3, #0
    8a54:	beq	9f70 <doProlog+0x2a58>
    8a58:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a5c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8a60:	str	r2, [r3]
    8a64:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a68:	ldr	r4, [r3, #144]	; 0x90
    8a6c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a70:	ldr	ip, [r3, #4]
    8a74:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a78:	ldr	r3, [r3, #324]	; 0x144
    8a7c:	ldr	lr, [r3]
    8a80:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a84:	ldr	r3, [r3, #324]	; 0x144
    8a88:	ldrb	r3, [r3, #33]	; 0x21
    8a8c:	mov	r5, r3
    8a90:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a94:	ldr	r3, [r3, #324]	; 0x144
    8a98:	ldr	r3, [r3, #20]
    8a9c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8aa0:	ldr	r2, [r2, #324]	; 0x144
    8aa4:	ldr	r2, [r2, #16]
    8aa8:	ldr	r1, [fp, #-168]	; 0xffffff58
    8aac:	ldr	r1, [r1, #324]	; 0x144
    8ab0:	ldr	r1, [r1, #24]
    8ab4:	mov	r0, #0
    8ab8:	str	r0, [sp, #16]
    8abc:	str	r1, [sp, #12]
    8ac0:	str	r2, [sp, #8]
    8ac4:	str	r3, [sp, #4]
    8ac8:	mov	r3, #0
    8acc:	str	r3, [sp]
    8ad0:	mov	r3, #0
    8ad4:	mov	r2, r5
    8ad8:	mov	r1, lr
    8adc:	mov	r0, ip
    8ae0:	blx	r4
    8ae4:	mov	r3, #0
    8ae8:	strb	r3, [fp, #-25]	; 0xffffffe7
    8aec:	b	9f70 <doProlog+0x2a58>
    8af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8af4:	ldrb	r3, [r3, #128]	; 0x80
    8af8:	cmp	r3, #0
    8afc:	beq	9f78 <doProlog+0x2a60>
    8b00:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b04:	ldr	r3, [r3, #324]	; 0x144
    8b08:	cmp	r3, #0
    8b0c:	beq	9f78 <doProlog+0x2a60>
    8b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b14:	add	r0, r3, #80	; 0x50
    8b18:	ldr	r2, [fp, #8]
    8b1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b20:	ldr	r4, [r3, #324]	; 0x144
    8b24:	mov	r3, r2
    8b28:	ldr	r2, [fp, #-176]	; 0xffffff50
    8b2c:	ldr	r1, [fp, #-172]	; 0xffffff54
    8b30:	bl	edc8 <poolStoreString>
    8b34:	mov	r3, r0
    8b38:	str	r3, [r4, #28]
    8b3c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b40:	ldr	r3, [r3, #324]	; 0x144
    8b44:	ldr	r3, [r3, #28]
    8b48:	cmp	r3, #0
    8b4c:	bne	8b58 <doProlog+0x1640>
    8b50:	mov	r3, #1
    8b54:	b	a0a4 <doProlog+0x2b8c>
    8b58:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b5c:	ldr	r2, [r3, #92]	; 0x5c
    8b60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b64:	str	r2, [r3, #96]	; 0x60
    8b68:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b6c:	ldr	r3, [r3, #100]	; 0x64
    8b70:	cmp	r3, #0
    8b74:	beq	8bf0 <doProlog+0x16d8>
    8b78:	ldr	r3, [fp, #-20]	; 0xffffffec
    8b7c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8b80:	str	r2, [r3]
    8b84:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b88:	ldr	r4, [r3, #100]	; 0x64
    8b8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b90:	ldr	r0, [r3, #4]
    8b94:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b98:	ldr	r3, [r3, #324]	; 0x144
    8b9c:	ldr	r1, [r3]
    8ba0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ba4:	ldr	r3, [r3, #324]	; 0x144
    8ba8:	ldr	ip, [r3, #20]
    8bac:	ldr	r3, [fp, #-168]	; 0xffffff58
    8bb0:	ldr	r3, [r3, #324]	; 0x144
    8bb4:	ldr	lr, [r3, #16]
    8bb8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8bbc:	ldr	r3, [r3, #324]	; 0x144
    8bc0:	ldr	r3, [r3, #24]
    8bc4:	ldr	r2, [fp, #-168]	; 0xffffff58
    8bc8:	ldr	r2, [r2, #324]	; 0x144
    8bcc:	ldr	r2, [r2, #28]
    8bd0:	str	r2, [sp, #4]
    8bd4:	str	r3, [sp]
    8bd8:	mov	r3, lr
    8bdc:	mov	r2, ip
    8be0:	blx	r4
    8be4:	mov	r3, #0
    8be8:	strb	r3, [fp, #-25]	; 0xffffffe7
    8bec:	b	9f78 <doProlog+0x2a60>
    8bf0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8bf4:	ldr	r3, [r3, #144]	; 0x90
    8bf8:	cmp	r3, #0
    8bfc:	beq	9f78 <doProlog+0x2a60>
    8c00:	ldr	r3, [fp, #-20]	; 0xffffffec
    8c04:	ldr	r2, [fp, #-176]	; 0xffffff50
    8c08:	str	r2, [r3]
    8c0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c10:	ldr	r4, [r3, #144]	; 0x90
    8c14:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c18:	ldr	ip, [r3, #4]
    8c1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c20:	ldr	r3, [r3, #324]	; 0x144
    8c24:	ldr	lr, [r3]
    8c28:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c2c:	ldr	r3, [r3, #324]	; 0x144
    8c30:	ldr	r3, [r3, #20]
    8c34:	ldr	r2, [fp, #-168]	; 0xffffff58
    8c38:	ldr	r2, [r2, #324]	; 0x144
    8c3c:	ldr	r2, [r2, #16]
    8c40:	ldr	r1, [fp, #-168]	; 0xffffff58
    8c44:	ldr	r1, [r1, #324]	; 0x144
    8c48:	ldr	r1, [r1, #24]
    8c4c:	ldr	r0, [fp, #-168]	; 0xffffff58
    8c50:	ldr	r0, [r0, #324]	; 0x144
    8c54:	ldr	r0, [r0, #28]
    8c58:	str	r0, [sp, #16]
    8c5c:	str	r1, [sp, #12]
    8c60:	str	r2, [sp, #8]
    8c64:	str	r3, [sp, #4]
    8c68:	mov	r3, #0
    8c6c:	str	r3, [sp]
    8c70:	mov	r3, #0
    8c74:	mov	r2, #0
    8c78:	mov	r1, lr
    8c7c:	mov	r0, ip
    8c80:	blx	r4
    8c84:	mov	r3, #0
    8c88:	strb	r3, [fp, #-25]	; 0xffffffe7
    8c8c:	b	9f78 <doProlog+0x2a60>
    8c90:	ldr	r3, [fp, #-172]	; 0xffffff54
    8c94:	ldr	r3, [r3, #48]	; 0x30
    8c98:	ldr	r2, [fp, #8]
    8c9c:	ldr	r1, [fp, #-176]	; 0xffffff50
    8ca0:	ldr	r0, [fp, #-172]	; 0xffffff54
    8ca4:	blx	r3
    8ca8:	mov	r3, r0
    8cac:	cmp	r3, #0
    8cb0:	beq	8cc4 <doProlog+0x17ac>
    8cb4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8cb8:	mov	r2, #0
    8cbc:	str	r2, [r3, #324]	; 0x144
    8cc0:	b	a014 <doProlog+0x2afc>
    8cc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8cc8:	ldrb	r3, [r3, #128]	; 0x80
    8ccc:	cmp	r3, #0
    8cd0:	beq	8dfc <doProlog+0x18e4>
    8cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8cd8:	add	r0, r3, #80	; 0x50
    8cdc:	ldr	r3, [fp, #8]
    8ce0:	ldr	r2, [fp, #-176]	; 0xffffff50
    8ce4:	ldr	r1, [fp, #-172]	; 0xffffff54
    8ce8:	bl	edc8 <poolStoreString>
    8cec:	str	r0, [fp, #-92]	; 0xffffffa4
    8cf0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8cf4:	cmp	r3, #0
    8cf8:	bne	8d04 <doProlog+0x17ec>
    8cfc:	mov	r3, #1
    8d00:	b	a0a4 <doProlog+0x2b8c>
    8d04:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8d08:	mov	r3, #36	; 0x24
    8d0c:	ldr	r2, [fp, #-92]	; 0xffffffa4
    8d10:	ldr	r0, [fp, #-168]	; 0xffffff58
    8d14:	bl	e00c <lookup>
    8d18:	mov	r2, r0
    8d1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d20:	str	r2, [r3, #324]	; 0x144
    8d24:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d28:	ldr	r3, [r3, #324]	; 0x144
    8d2c:	cmp	r3, #0
    8d30:	bne	8d3c <doProlog+0x1824>
    8d34:	mov	r3, #1
    8d38:	b	a0a4 <doProlog+0x2b8c>
    8d3c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d40:	ldr	r3, [r3, #324]	; 0x144
    8d44:	ldr	r3, [r3]
    8d48:	ldr	r2, [fp, #-92]	; 0xffffffa4
    8d4c:	cmp	r2, r3
    8d50:	beq	8d74 <doProlog+0x185c>
    8d54:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8d58:	ldr	r2, [r3, #96]	; 0x60
    8d5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8d60:	str	r2, [r3, #92]	; 0x5c
    8d64:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d68:	mov	r2, #0
    8d6c:	str	r2, [r3, #324]	; 0x144
    8d70:	b	9f80 <doProlog+0x2a68>
    8d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8d78:	ldr	r2, [r3, #92]	; 0x5c
    8d7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8d80:	str	r2, [r3, #96]	; 0x60
    8d84:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d88:	ldr	r3, [r3, #324]	; 0x144
    8d8c:	mov	r2, #0
    8d90:	str	r2, [r3, #24]
    8d94:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d98:	ldr	r3, [r3, #324]	; 0x144
    8d9c:	mov	r2, #0
    8da0:	strb	r2, [r3, #33]	; 0x21
    8da4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8da8:	ldr	r3, [r3, #492]	; 0x1ec
    8dac:	cmp	r3, #0
    8db0:	bne	8dcc <doProlog+0x18b4>
    8db4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8db8:	ldr	r3, [r3, #308]	; 0x134
    8dbc:	cmp	r3, #0
    8dc0:	bne	8dcc <doProlog+0x18b4>
    8dc4:	mov	r2, #1
    8dc8:	b	8dd0 <doProlog+0x18b8>
    8dcc:	mov	r2, #0
    8dd0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8dd4:	ldr	r3, [r3, #324]	; 0x144
    8dd8:	uxtb	r2, r2
    8ddc:	strb	r2, [r3, #34]	; 0x22
    8de0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8de4:	ldr	r3, [r3, #144]	; 0x90
    8de8:	cmp	r3, #0
    8dec:	beq	9f80 <doProlog+0x2a68>
    8df0:	mov	r3, #0
    8df4:	strb	r3, [fp, #-25]	; 0xffffffe7
    8df8:	b	9f80 <doProlog+0x2a68>
    8dfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e00:	ldr	r2, [r3, #96]	; 0x60
    8e04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e08:	str	r2, [r3, #92]	; 0x5c
    8e0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e10:	mov	r2, #0
    8e14:	str	r2, [r3, #324]	; 0x144
    8e18:	b	9f80 <doProlog+0x2a68>
    8e1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e20:	ldrb	r3, [r3, #128]	; 0x80
    8e24:	cmp	r3, #0
    8e28:	beq	8f58 <doProlog+0x1a40>
    8e2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e30:	add	r0, r3, #80	; 0x50
    8e34:	ldr	r3, [fp, #8]
    8e38:	ldr	r2, [fp, #-176]	; 0xffffff50
    8e3c:	ldr	r1, [fp, #-172]	; 0xffffff54
    8e40:	bl	edc8 <poolStoreString>
    8e44:	str	r0, [fp, #-96]	; 0xffffffa0
    8e48:	ldr	r3, [fp, #-96]	; 0xffffffa0
    8e4c:	cmp	r3, #0
    8e50:	bne	8e5c <doProlog+0x1944>
    8e54:	mov	r3, #1
    8e58:	b	a0a4 <doProlog+0x2b8c>
    8e5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8e60:	add	r1, r3, #132	; 0x84
    8e64:	mov	r3, #36	; 0x24
    8e68:	ldr	r2, [fp, #-96]	; 0xffffffa0
    8e6c:	ldr	r0, [fp, #-168]	; 0xffffff58
    8e70:	bl	e00c <lookup>
    8e74:	mov	r2, r0
    8e78:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e7c:	str	r2, [r3, #324]	; 0x144
    8e80:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e84:	ldr	r3, [r3, #324]	; 0x144
    8e88:	cmp	r3, #0
    8e8c:	bne	8e98 <doProlog+0x1980>
    8e90:	mov	r3, #1
    8e94:	b	a0a4 <doProlog+0x2b8c>
    8e98:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e9c:	ldr	r3, [r3, #324]	; 0x144
    8ea0:	ldr	r3, [r3]
    8ea4:	ldr	r2, [fp, #-96]	; 0xffffffa0
    8ea8:	cmp	r2, r3
    8eac:	beq	8ed0 <doProlog+0x19b8>
    8eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8eb4:	ldr	r2, [r3, #96]	; 0x60
    8eb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8ebc:	str	r2, [r3, #92]	; 0x5c
    8ec0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ec4:	mov	r2, #0
    8ec8:	str	r2, [r3, #324]	; 0x144
    8ecc:	b	9f88 <doProlog+0x2a70>
    8ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8ed4:	ldr	r2, [r3, #92]	; 0x5c
    8ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8edc:	str	r2, [r3, #96]	; 0x60
    8ee0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ee4:	ldr	r3, [r3, #324]	; 0x144
    8ee8:	mov	r2, #0
    8eec:	str	r2, [r3, #24]
    8ef0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ef4:	ldr	r3, [r3, #324]	; 0x144
    8ef8:	mov	r2, #1
    8efc:	strb	r2, [r3, #33]	; 0x21
    8f00:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f04:	ldr	r3, [r3, #492]	; 0x1ec
    8f08:	cmp	r3, #0
    8f0c:	bne	8f28 <doProlog+0x1a10>
    8f10:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f14:	ldr	r3, [r3, #308]	; 0x134
    8f18:	cmp	r3, #0
    8f1c:	bne	8f28 <doProlog+0x1a10>
    8f20:	mov	r2, #1
    8f24:	b	8f2c <doProlog+0x1a14>
    8f28:	mov	r2, #0
    8f2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f30:	ldr	r3, [r3, #324]	; 0x144
    8f34:	uxtb	r2, r2
    8f38:	strb	r2, [r3, #34]	; 0x22
    8f3c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f40:	ldr	r3, [r3, #144]	; 0x90
    8f44:	cmp	r3, #0
    8f48:	beq	9f88 <doProlog+0x2a70>
    8f4c:	mov	r3, #0
    8f50:	strb	r3, [fp, #-25]	; 0xffffffe7
    8f54:	b	9f88 <doProlog+0x2a70>
    8f58:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8f5c:	ldr	r2, [r3, #96]	; 0x60
    8f60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8f64:	str	r2, [r3, #92]	; 0x5c
    8f68:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f6c:	mov	r2, #0
    8f70:	str	r2, [r3, #324]	; 0x144
    8f74:	b	9f88 <doProlog+0x2a70>
    8f78:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f7c:	mov	r2, #0
    8f80:	str	r2, [r3, #348]	; 0x15c
    8f84:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f88:	mov	r2, #0
    8f8c:	str	r2, [r3, #344]	; 0x158
    8f90:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f94:	ldr	r3, [r3, #104]	; 0x68
    8f98:	cmp	r3, #0
    8f9c:	beq	9f90 <doProlog+0x2a78>
    8fa0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fa4:	add	r0, r3, #432	; 0x1b0
    8fa8:	ldr	r3, [fp, #8]
    8fac:	ldr	r2, [fp, #-176]	; 0xffffff50
    8fb0:	ldr	r1, [fp, #-172]	; 0xffffff54
    8fb4:	bl	edc8 <poolStoreString>
    8fb8:	mov	r2, r0
    8fbc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fc0:	str	r2, [r3, #344]	; 0x158
    8fc4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fc8:	ldr	r3, [r3, #344]	; 0x158
    8fcc:	cmp	r3, #0
    8fd0:	bne	8fdc <doProlog+0x1ac4>
    8fd4:	mov	r3, #1
    8fd8:	b	a0a4 <doProlog+0x2b8c>
    8fdc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fe0:	ldr	r2, [r3, #444]	; 0x1bc
    8fe4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fe8:	str	r2, [r3, #448]	; 0x1c0
    8fec:	mov	r3, #0
    8ff0:	strb	r3, [fp, #-25]	; 0xffffffe7
    8ff4:	b	9f90 <doProlog+0x2a78>
    8ff8:	ldr	r3, [fp, #-172]	; 0xffffff54
    8ffc:	ldr	r4, [r3, #56]	; 0x38
    9000:	ldr	r2, [fp, #8]
    9004:	ldr	r3, [fp, #-16]
    9008:	ldr	r1, [fp, #-176]	; 0xffffff50
    900c:	ldr	r0, [fp, #-172]	; 0xffffff54
    9010:	blx	r4
    9014:	mov	r3, r0
    9018:	cmp	r3, #0
    901c:	bne	9028 <doProlog+0x1b10>
    9020:	mov	r3, #32
    9024:	b	a0a4 <doProlog+0x2b8c>
    9028:	ldr	r3, [fp, #-168]	; 0xffffff58
    902c:	ldr	r3, [r3, #344]	; 0x158
    9030:	cmp	r3, #0
    9034:	beq	9f98 <doProlog+0x2a80>
    9038:	ldr	r3, [fp, #-168]	; 0xffffff58
    903c:	add	r0, r3, #432	; 0x1b0
    9040:	ldr	r3, [fp, #-172]	; 0xffffff54
    9044:	ldr	r3, [r3, #68]	; 0x44
    9048:	mov	r2, r3
    904c:	ldr	r3, [fp, #-176]	; 0xffffff50
    9050:	add	r1, r3, r2
    9054:	ldr	r2, [fp, #8]
    9058:	ldr	r3, [fp, #-172]	; 0xffffff54
    905c:	ldr	r3, [r3, #68]	; 0x44
    9060:	rsb	r3, r3, #0
    9064:	add	r3, r2, r3
    9068:	mov	r2, r1
    906c:	ldr	r1, [fp, #-172]	; 0xffffff54
    9070:	bl	edc8 <poolStoreString>
    9074:	str	r0, [fp, #-100]	; 0xffffff9c
    9078:	ldr	r3, [fp, #-100]	; 0xffffff9c
    907c:	cmp	r3, #0
    9080:	bne	908c <doProlog+0x1b74>
    9084:	mov	r3, #1
    9088:	b	a0a4 <doProlog+0x2b8c>
    908c:	ldr	r0, [fp, #-100]	; 0xffffff9c
    9090:	bl	d010 <normalizePublicId>
    9094:	ldr	r3, [fp, #-168]	; 0xffffff58
    9098:	ldr	r2, [fp, #-100]	; 0xffffff9c
    909c:	str	r2, [r3, #348]	; 0x15c
    90a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    90a4:	ldr	r2, [r3, #444]	; 0x1bc
    90a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    90ac:	str	r2, [r3, #448]	; 0x1c0
    90b0:	mov	r3, #0
    90b4:	strb	r3, [fp, #-25]	; 0xffffffe7
    90b8:	b	9f98 <doProlog+0x2a80>
    90bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    90c0:	ldr	r3, [r3, #344]	; 0x158
    90c4:	cmp	r3, #0
    90c8:	beq	9178 <doProlog+0x1c60>
    90cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    90d0:	ldr	r3, [r3, #104]	; 0x68
    90d4:	cmp	r3, #0
    90d8:	beq	9178 <doProlog+0x1c60>
    90dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    90e0:	add	r0, r3, #432	; 0x1b0
    90e4:	ldr	r3, [fp, #-172]	; 0xffffff54
    90e8:	ldr	r3, [r3, #68]	; 0x44
    90ec:	mov	r2, r3
    90f0:	ldr	r3, [fp, #-176]	; 0xffffff50
    90f4:	add	r1, r3, r2
    90f8:	ldr	r2, [fp, #8]
    90fc:	ldr	r3, [fp, #-172]	; 0xffffff54
    9100:	ldr	r3, [r3, #68]	; 0x44
    9104:	rsb	r3, r3, #0
    9108:	add	r3, r2, r3
    910c:	mov	r2, r1
    9110:	ldr	r1, [fp, #-172]	; 0xffffff54
    9114:	bl	edc8 <poolStoreString>
    9118:	str	r0, [fp, #-104]	; 0xffffff98
    911c:	ldr	r3, [fp, #-104]	; 0xffffff98
    9120:	cmp	r3, #0
    9124:	bne	9130 <doProlog+0x1c18>
    9128:	mov	r3, #1
    912c:	b	a0a4 <doProlog+0x2b8c>
    9130:	ldr	r3, [fp, #-20]	; 0xffffffec
    9134:	ldr	r2, [fp, #-176]	; 0xffffff50
    9138:	str	r2, [r3]
    913c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9140:	ldr	r4, [r3, #104]	; 0x68
    9144:	ldr	r3, [fp, #-168]	; 0xffffff58
    9148:	ldr	r0, [r3, #4]
    914c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9150:	ldr	r1, [r3, #344]	; 0x158
    9154:	ldr	r3, [fp, #-168]	; 0xffffff58
    9158:	ldr	r2, [r3, #368]	; 0x170
    915c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9160:	ldr	r3, [r3, #348]	; 0x15c
    9164:	str	r3, [sp]
    9168:	ldr	r3, [fp, #-104]	; 0xffffff98
    916c:	blx	r4
    9170:	mov	r3, #0
    9174:	strb	r3, [fp, #-25]	; 0xffffffe7
    9178:	ldr	r3, [fp, #-168]	; 0xffffff58
    917c:	add	r3, r3, #432	; 0x1b0
    9180:	mov	r0, r3
    9184:	bl	e8f8 <poolClear>
    9188:	b	a014 <doProlog+0x2afc>
    918c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9190:	ldr	r3, [r3, #348]	; 0x15c
    9194:	cmp	r3, #0
    9198:	beq	91f4 <doProlog+0x1cdc>
    919c:	ldr	r3, [fp, #-168]	; 0xffffff58
    91a0:	ldr	r3, [r3, #104]	; 0x68
    91a4:	cmp	r3, #0
    91a8:	beq	91f4 <doProlog+0x1cdc>
    91ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    91b0:	ldr	r2, [fp, #-176]	; 0xffffff50
    91b4:	str	r2, [r3]
    91b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    91bc:	ldr	r4, [r3, #104]	; 0x68
    91c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    91c4:	ldr	r0, [r3, #4]
    91c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    91cc:	ldr	r1, [r3, #344]	; 0x158
    91d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    91d4:	ldr	r2, [r3, #368]	; 0x170
    91d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    91dc:	ldr	r3, [r3, #348]	; 0x15c
    91e0:	str	r3, [sp]
    91e4:	mov	r3, #0
    91e8:	blx	r4
    91ec:	mov	r3, #0
    91f0:	strb	r3, [fp, #-25]	; 0xffffffe7
    91f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    91f8:	add	r3, r3, #432	; 0x1b0
    91fc:	mov	r0, r3
    9200:	bl	e8f8 <poolClear>
    9204:	b	a014 <doProlog+0x2afc>
    9208:	ldr	r3, [fp, #4]
    920c:	cmp	r3, #12
    9210:	beq	9228 <doProlog+0x1d10>
    9214:	ldr	r3, [fp, #4]
    9218:	cmp	r3, #28
    921c:	bne	9230 <doProlog+0x1d18>
    9220:	mov	r3, #10
    9224:	b	a0a4 <doProlog+0x2b8c>
    9228:	mov	r3, #17
    922c:	b	a0a4 <doProlog+0x2b8c>
    9230:	mov	r3, #2
    9234:	b	a0a4 <doProlog+0x2b8c>
    9238:	ldr	r3, [fp, #-168]	; 0xffffff58
    923c:	ldr	r3, [r3, #88]	; 0x58
    9240:	cmp	r3, #0
    9244:	beq	925c <doProlog+0x1d44>
    9248:	ldr	r3, [fp, #8]
    924c:	ldr	r2, [fp, #-176]	; 0xffffff50
    9250:	ldr	r1, [fp, #-172]	; 0xffffff54
    9254:	ldr	r0, [fp, #-168]	; 0xffffff58
    9258:	bl	bb70 <reportDefault>
    925c:	mov	r3, #0
    9260:	strb	r3, [fp, #-25]	; 0xffffffe7
    9264:	add	r2, fp, #8
    9268:	ldrb	r3, [fp, #16]
    926c:	str	r3, [sp, #4]
    9270:	ldr	r3, [fp, #12]
    9274:	str	r3, [sp]
    9278:	ldr	r3, [fp, #-180]	; 0xffffff4c
    927c:	ldr	r1, [fp, #-172]	; 0xffffff54
    9280:	ldr	r0, [fp, #-168]	; 0xffffff58
    9284:	bl	659c <doIgnoreSection>
    9288:	str	r0, [fp, #-108]	; 0xffffff94
    928c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9290:	cmp	r3, #0
    9294:	beq	92a0 <doProlog+0x1d88>
    9298:	ldr	r3, [fp, #-108]	; 0xffffff94
    929c:	b	a0a4 <doProlog+0x2b8c>
    92a0:	ldr	r3, [fp, #8]
    92a4:	cmp	r3, #0
    92a8:	bne	92c4 <doProlog+0x1dac>
    92ac:	ldr	r2, [fp, #-168]	; 0xffffff58
    92b0:	movw	r3, #0
    92b4:	movt	r3, #0
    92b8:	str	r3, [r2, #288]	; 0x120
    92bc:	ldr	r3, [fp, #-108]	; 0xffffff94
    92c0:	b	a0a4 <doProlog+0x2b8c>
    92c4:	nop	{0}
    92c8:	b	a014 <doProlog+0x2afc>
    92cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    92d0:	ldr	r2, [r3, #268]	; 0x10c
    92d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    92d8:	ldr	r3, [r3, #484]	; 0x1e4
    92dc:	cmp	r2, r3
    92e0:	bcc	93f0 <doProlog+0x1ed8>
    92e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    92e8:	ldr	r3, [r3, #484]	; 0x1e4
    92ec:	cmp	r3, #0
    92f0:	beq	93a8 <doProlog+0x1e90>
    92f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    92f8:	ldr	r3, [r3, #16]
    92fc:	ldr	r2, [fp, #-168]	; 0xffffff58
    9300:	ldr	r0, [r2, #480]	; 0x1e0
    9304:	ldr	r2, [fp, #-168]	; 0xffffff58
    9308:	ldr	r2, [r2, #484]	; 0x1e4
    930c:	lsl	r1, r2, #1
    9310:	ldr	r2, [fp, #-168]	; 0xffffff58
    9314:	str	r1, [r2, #484]	; 0x1e4
    9318:	ldr	r2, [fp, #-168]	; 0xffffff58
    931c:	ldr	r2, [r2, #484]	; 0x1e4
    9320:	mov	r1, r2
    9324:	blx	r3
    9328:	str	r0, [fp, #-112]	; 0xffffff90
    932c:	ldr	r3, [fp, #-112]	; 0xffffff90
    9330:	cmp	r3, #0
    9334:	bne	9340 <doProlog+0x1e28>
    9338:	mov	r3, #1
    933c:	b	a0a4 <doProlog+0x2b8c>
    9340:	ldr	r3, [fp, #-168]	; 0xffffff58
    9344:	ldr	r2, [fp, #-112]	; 0xffffff90
    9348:	str	r2, [r3, #480]	; 0x1e0
    934c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9350:	ldr	r3, [r3, #184]	; 0xb8
    9354:	cmp	r3, #0
    9358:	beq	93f0 <doProlog+0x1ed8>
    935c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9360:	ldr	r3, [r3, #16]
    9364:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9368:	ldr	r0, [r2, #184]	; 0xb8
    936c:	ldr	r2, [fp, #-168]	; 0xffffff58
    9370:	ldr	r2, [r2, #484]	; 0x1e4
    9374:	lsl	r2, r2, #2
    9378:	mov	r1, r2
    937c:	blx	r3
    9380:	str	r0, [fp, #-116]	; 0xffffff8c
    9384:	ldr	r3, [fp, #-116]	; 0xffffff8c
    9388:	cmp	r3, #0
    938c:	bne	9398 <doProlog+0x1e80>
    9390:	mov	r3, #1
    9394:	b	a0a4 <doProlog+0x2b8c>
    9398:	ldr	r3, [fp, #-40]	; 0xffffffd8
    939c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    93a0:	str	r2, [r3, #184]	; 0xb8
    93a4:	b	93f0 <doProlog+0x1ed8>
    93a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    93ac:	ldr	r3, [r3, #12]
    93b0:	ldr	r2, [fp, #-168]	; 0xffffff58
    93b4:	mov	r1, #32
    93b8:	str	r1, [r2, #484]	; 0x1e4
    93bc:	ldr	r2, [fp, #-168]	; 0xffffff58
    93c0:	ldr	r2, [r2, #484]	; 0x1e4
    93c4:	mov	r0, r2
    93c8:	blx	r3
    93cc:	mov	r2, r0
    93d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    93d4:	str	r2, [r3, #480]	; 0x1e0
    93d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    93dc:	ldr	r3, [r3, #480]	; 0x1e0
    93e0:	cmp	r3, #0
    93e4:	bne	93f0 <doProlog+0x1ed8>
    93e8:	mov	r3, #1
    93ec:	b	a0a4 <doProlog+0x2b8c>
    93f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    93f4:	ldr	r2, [r3, #480]	; 0x1e0
    93f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    93fc:	ldr	r3, [r3, #268]	; 0x10c
    9400:	add	r3, r2, r3
    9404:	mov	r2, #0
    9408:	strb	r2, [r3]
    940c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9410:	ldrb	r3, [r3, #160]	; 0xa0
    9414:	cmp	r3, #0
    9418:	beq	9fa0 <doProlog+0x2a88>
    941c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9420:	bl	f270 <nextScaffoldPart>
    9424:	str	r0, [fp, #-120]	; 0xffffff88
    9428:	ldr	r3, [fp, #-120]	; 0xffffff88
    942c:	cmp	r3, #0
    9430:	bge	943c <doProlog+0x1f24>
    9434:	mov	r3, #1
    9438:	b	a0a4 <doProlog+0x2b8c>
    943c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9440:	ldr	r2, [r3, #184]	; 0xb8
    9444:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9448:	ldr	r3, [r3, #180]	; 0xb4
    944c:	lsl	r3, r3, #2
    9450:	add	r3, r2, r3
    9454:	ldr	r2, [fp, #-120]	; 0xffffff88
    9458:	str	r2, [r3]
    945c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9460:	ldr	r3, [r3, #180]	; 0xb4
    9464:	add	r2, r3, #1
    9468:	ldr	r3, [fp, #-40]	; 0xffffffd8
    946c:	str	r2, [r3, #180]	; 0xb4
    9470:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9474:	ldr	r1, [r3, #164]	; 0xa4
    9478:	ldr	r2, [fp, #-120]	; 0xffffff88
    947c:	mov	r3, r2
    9480:	lsl	r3, r3, #3
    9484:	sub	r3, r3, r2
    9488:	lsl	r3, r3, #2
    948c:	add	r3, r1, r3
    9490:	mov	r2, #6
    9494:	str	r2, [r3]
    9498:	ldr	r3, [fp, #-168]	; 0xffffff58
    949c:	ldr	r3, [r3, #136]	; 0x88
    94a0:	cmp	r3, #0
    94a4:	beq	9fa0 <doProlog+0x2a88>
    94a8:	mov	r3, #0
    94ac:	strb	r3, [fp, #-25]	; 0xffffffe7
    94b0:	b	9fa0 <doProlog+0x2a88>
    94b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    94b8:	ldr	r2, [r3, #480]	; 0x1e0
    94bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    94c0:	ldr	r3, [r3, #268]	; 0x10c
    94c4:	add	r3, r2, r3
    94c8:	ldrb	r3, [r3]
    94cc:	cmp	r3, #124	; 0x7c
    94d0:	bne	94dc <doProlog+0x1fc4>
    94d4:	mov	r3, #2
    94d8:	b	a0a4 <doProlog+0x2b8c>
    94dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    94e0:	ldr	r2, [r3, #480]	; 0x1e0
    94e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    94e8:	ldr	r3, [r3, #268]	; 0x10c
    94ec:	add	r3, r2, r3
    94f0:	mov	r2, #44	; 0x2c
    94f4:	strb	r2, [r3]
    94f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    94fc:	ldrb	r3, [r3, #160]	; 0xa0
    9500:	cmp	r3, #0
    9504:	beq	9fa8 <doProlog+0x2a90>
    9508:	ldr	r3, [fp, #-168]	; 0xffffff58
    950c:	ldr	r3, [r3, #136]	; 0x88
    9510:	cmp	r3, #0
    9514:	beq	9fa8 <doProlog+0x2a90>
    9518:	mov	r3, #0
    951c:	strb	r3, [fp, #-25]	; 0xffffffe7
    9520:	b	9fa8 <doProlog+0x2a90>
    9524:	ldr	r3, [fp, #-168]	; 0xffffff58
    9528:	ldr	r2, [r3, #480]	; 0x1e0
    952c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9530:	ldr	r3, [r3, #268]	; 0x10c
    9534:	add	r3, r2, r3
    9538:	ldrb	r3, [r3]
    953c:	cmp	r3, #44	; 0x2c
    9540:	bne	954c <doProlog+0x2034>
    9544:	mov	r3, #2
    9548:	b	a0a4 <doProlog+0x2b8c>
    954c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9550:	ldrb	r3, [r3, #160]	; 0xa0
    9554:	cmp	r3, #0
    9558:	beq	9628 <doProlog+0x2110>
    955c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9560:	ldr	r2, [r3, #480]	; 0x1e0
    9564:	ldr	r3, [fp, #-168]	; 0xffffff58
    9568:	ldr	r3, [r3, #268]	; 0x10c
    956c:	add	r3, r2, r3
    9570:	ldrb	r3, [r3]
    9574:	cmp	r3, #0
    9578:	bne	9628 <doProlog+0x2110>
    957c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9580:	ldr	r2, [r3, #164]	; 0xa4
    9584:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9588:	ldr	r1, [r3, #184]	; 0xb8
    958c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9590:	ldr	r3, [r3, #180]	; 0xb4
    9594:	sub	r3, r3, #-1073741823	; 0xc0000001
    9598:	lsl	r3, r3, #2
    959c:	add	r3, r1, r3
    95a0:	ldr	r3, [r3]
    95a4:	mov	r1, r3
    95a8:	mov	r3, r1
    95ac:	lsl	r3, r3, #3
    95b0:	sub	r3, r3, r1
    95b4:	lsl	r3, r3, #2
    95b8:	add	r3, r2, r3
    95bc:	ldr	r3, [r3]
    95c0:	cmp	r3, #3
    95c4:	beq	9628 <doProlog+0x2110>
    95c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    95cc:	ldr	r2, [r3, #164]	; 0xa4
    95d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    95d4:	ldr	r1, [r3, #184]	; 0xb8
    95d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    95dc:	ldr	r3, [r3, #180]	; 0xb4
    95e0:	sub	r3, r3, #-1073741823	; 0xc0000001
    95e4:	lsl	r3, r3, #2
    95e8:	add	r3, r1, r3
    95ec:	ldr	r3, [r3]
    95f0:	mov	r1, r3
    95f4:	mov	r3, r1
    95f8:	lsl	r3, r3, #3
    95fc:	sub	r3, r3, r1
    9600:	lsl	r3, r3, #2
    9604:	add	r3, r2, r3
    9608:	mov	r2, #5
    960c:	str	r2, [r3]
    9610:	ldr	r3, [fp, #-168]	; 0xffffff58
    9614:	ldr	r3, [r3, #136]	; 0x88
    9618:	cmp	r3, #0
    961c:	beq	9628 <doProlog+0x2110>
    9620:	mov	r3, #0
    9624:	strb	r3, [fp, #-25]	; 0xffffffe7
    9628:	ldr	r3, [fp, #-168]	; 0xffffff58
    962c:	ldr	r2, [r3, #480]	; 0x1e0
    9630:	ldr	r3, [fp, #-168]	; 0xffffff58
    9634:	ldr	r3, [r3, #268]	; 0x10c
    9638:	add	r3, r2, r3
    963c:	mov	r2, #124	; 0x7c
    9640:	strb	r2, [r3]
    9644:	b	a014 <doProlog+0x2afc>
    9648:	ldr	r3, [fp, #-40]	; 0xffffffd8
    964c:	mov	r2, #1
    9650:	strb	r2, [r3, #129]	; 0x81
    9654:	ldr	r3, [fp, #-168]	; 0xffffff58
    9658:	ldr	r3, [r3, #508]	; 0x1fc
    965c:	cmp	r3, #0
    9660:	bne	9678 <doProlog+0x2160>
    9664:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9668:	ldrb	r2, [r3, #130]	; 0x82
    966c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9670:	strb	r2, [r3, #128]	; 0x80
    9674:	b	9910 <doProlog+0x23f8>
    9678:	ldr	r3, [fp, #-40]	; 0xffffffd8
    967c:	add	r0, r3, #80	; 0x50
    9680:	ldr	r3, [fp, #-172]	; 0xffffff54
    9684:	ldr	r3, [r3, #68]	; 0x44
    9688:	mov	r2, r3
    968c:	ldr	r3, [fp, #-176]	; 0xffffff50
    9690:	add	r1, r3, r2
    9694:	ldr	r2, [fp, #8]
    9698:	ldr	r3, [fp, #-172]	; 0xffffff54
    969c:	ldr	r3, [r3, #68]	; 0x44
    96a0:	rsb	r3, r3, #0
    96a4:	add	r3, r2, r3
    96a8:	mov	r2, r1
    96ac:	ldr	r1, [fp, #-172]	; 0xffffff54
    96b0:	bl	edc8 <poolStoreString>
    96b4:	str	r0, [fp, #-124]	; 0xffffff84
    96b8:	ldr	r3, [fp, #-124]	; 0xffffff84
    96bc:	cmp	r3, #0
    96c0:	bne	96cc <doProlog+0x21b4>
    96c4:	mov	r3, #1
    96c8:	b	a0a4 <doProlog+0x2b8c>
    96cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96d0:	add	r1, r3, #132	; 0x84
    96d4:	mov	r3, #0
    96d8:	ldr	r2, [fp, #-124]	; 0xffffff84
    96dc:	ldr	r0, [fp, #-168]	; 0xffffff58
    96e0:	bl	e00c <lookup>
    96e4:	str	r0, [fp, #-128]	; 0xffffff80
    96e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96ec:	ldr	r2, [r3, #96]	; 0x60
    96f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96f4:	str	r2, [r3, #92]	; 0x5c
    96f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    96fc:	ldr	r3, [r3, #280]	; 0x118
    9700:	cmp	r3, #0
    9704:	beq	9768 <doProlog+0x2250>
    9708:	ldr	r3, [fp, #-40]	; 0xffffffd8
    970c:	ldrb	r3, [r3, #130]	; 0x82
    9710:	cmp	r3, #0
    9714:	beq	972c <doProlog+0x2214>
    9718:	ldr	r3, [fp, #-168]	; 0xffffff58
    971c:	ldr	r3, [r3, #308]	; 0x134
    9720:	cmp	r3, #0
    9724:	beq	973c <doProlog+0x2224>
    9728:	b	9768 <doProlog+0x2250>
    972c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9730:	ldrb	r3, [r3, #129]	; 0x81
    9734:	cmp	r3, #0
    9738:	bne	9768 <doProlog+0x2250>
    973c:	ldr	r3, [fp, #-128]	; 0xffffff80
    9740:	cmp	r3, #0
    9744:	bne	9750 <doProlog+0x2238>
    9748:	mov	r3, #11
    974c:	b	a0a4 <doProlog+0x2b8c>
    9750:	ldr	r3, [fp, #-128]	; 0xffffff80
    9754:	ldrb	r3, [r3, #34]	; 0x22
    9758:	cmp	r3, #0
    975c:	bne	97c8 <doProlog+0x22b0>
    9760:	mov	r3, #24
    9764:	b	a0a4 <doProlog+0x2b8c>
    9768:	ldr	r3, [fp, #-128]	; 0xffffff80
    976c:	cmp	r3, #0
    9770:	bne	97cc <doProlog+0x22b4>
    9774:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9778:	ldrb	r2, [r3, #130]	; 0x82
    977c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9780:	strb	r2, [r3, #128]	; 0x80
    9784:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9788:	cmp	r3, #60	; 0x3c
    978c:	bne	9fb0 <doProlog+0x2a98>
    9790:	ldr	r3, [fp, #-168]	; 0xffffff58
    9794:	ldr	r3, [r3, #128]	; 0x80
    9798:	cmp	r3, #0
    979c:	beq	9fb0 <doProlog+0x2a98>
    97a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    97a4:	ldr	r3, [r3, #128]	; 0x80
    97a8:	ldr	r2, [fp, #-168]	; 0xffffff58
    97ac:	ldr	r0, [r2, #4]
    97b0:	mov	r2, #1
    97b4:	ldr	r1, [fp, #-124]	; 0xffffff84
    97b8:	blx	r3
    97bc:	mov	r3, #0
    97c0:	strb	r3, [fp, #-25]	; 0xffffffe7
    97c4:	b	9fb0 <doProlog+0x2a98>
    97c8:	nop	{0}
    97cc:	ldr	r3, [fp, #-128]	; 0xffffff80
    97d0:	ldrb	r3, [r3, #32]
    97d4:	cmp	r3, #0
    97d8:	beq	97e4 <doProlog+0x22cc>
    97dc:	mov	r3, #12
    97e0:	b	a0a4 <doProlog+0x2b8c>
    97e4:	ldr	r3, [fp, #-128]	; 0xffffff80
    97e8:	ldr	r3, [r3, #4]
    97ec:	cmp	r3, #0
    97f0:	beq	9844 <doProlog+0x232c>
    97f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97f8:	cmp	r3, #60	; 0x3c
    97fc:	moveq	r3, #1
    9800:	movne	r3, #0
    9804:	uxtb	r3, r3
    9808:	strb	r3, [fp, #-129]	; 0xffffff7f
    980c:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    9810:	mov	r2, r3
    9814:	ldr	r1, [fp, #-128]	; 0xffffff80
    9818:	ldr	r0, [fp, #-168]	; 0xffffff58
    981c:	bl	a398 <processInternalEntity>
    9820:	str	r0, [fp, #-136]	; 0xffffff78
    9824:	ldr	r3, [fp, #-136]	; 0xffffff78
    9828:	cmp	r3, #0
    982c:	beq	9838 <doProlog+0x2320>
    9830:	ldr	r3, [fp, #-136]	; 0xffffff78
    9834:	b	a0a4 <doProlog+0x2b8c>
    9838:	mov	r3, #0
    983c:	strb	r3, [fp, #-25]	; 0xffffffe7
    9840:	b	a014 <doProlog+0x2afc>
    9844:	ldr	r3, [fp, #-168]	; 0xffffff58
    9848:	ldr	r3, [r3, #120]	; 0x78
    984c:	cmp	r3, #0
    9850:	beq	98fc <doProlog+0x23e4>
    9854:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9858:	mov	r2, #0
    985c:	strb	r2, [r3, #131]	; 0x83
    9860:	ldr	r3, [fp, #-128]	; 0xffffff80
    9864:	mov	r2, #1
    9868:	strb	r2, [r3, #32]
    986c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9870:	ldr	r4, [r3, #120]	; 0x78
    9874:	ldr	r3, [fp, #-168]	; 0xffffff58
    9878:	ldr	r0, [r3, #124]	; 0x7c
    987c:	ldr	r3, [fp, #-128]	; 0xffffff80
    9880:	ldr	r2, [r3, #20]
    9884:	ldr	r3, [fp, #-128]	; 0xffffff80
    9888:	ldr	r1, [r3, #16]
    988c:	ldr	r3, [fp, #-128]	; 0xffffff80
    9890:	ldr	r3, [r3, #24]
    9894:	str	r3, [sp]
    9898:	mov	r3, r1
    989c:	mov	r1, #0
    98a0:	blx	r4
    98a4:	mov	r3, r0
    98a8:	cmp	r3, #0
    98ac:	bne	98c4 <doProlog+0x23ac>
    98b0:	ldr	r3, [fp, #-128]	; 0xffffff80
    98b4:	mov	r2, #0
    98b8:	strb	r2, [r3, #32]
    98bc:	mov	r3, #21
    98c0:	b	a0a4 <doProlog+0x2b8c>
    98c4:	ldr	r3, [fp, #-128]	; 0xffffff80
    98c8:	mov	r2, #0
    98cc:	strb	r2, [r3, #32]
    98d0:	mov	r3, #0
    98d4:	strb	r3, [fp, #-25]	; 0xffffffe7
    98d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    98dc:	ldrb	r3, [r3, #131]	; 0x83
    98e0:	cmp	r3, #0
    98e4:	bne	9910 <doProlog+0x23f8>
    98e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    98ec:	ldrb	r2, [r3, #130]	; 0x82
    98f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    98f4:	strb	r2, [r3, #128]	; 0x80
    98f8:	b	a014 <doProlog+0x2afc>
    98fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9900:	ldrb	r2, [r3, #130]	; 0x82
    9904:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9908:	strb	r2, [r3, #128]	; 0x80
    990c:	b	a014 <doProlog+0x2afc>
    9910:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9914:	ldrb	r3, [r3, #130]	; 0x82
    9918:	cmp	r3, #0
    991c:	bne	9fb8 <doProlog+0x2aa0>
    9920:	ldr	r3, [fp, #-168]	; 0xffffff58
    9924:	ldr	r3, [r3, #116]	; 0x74
    9928:	cmp	r3, #0
    992c:	beq	9fb8 <doProlog+0x2aa0>
    9930:	ldr	r3, [fp, #-168]	; 0xffffff58
    9934:	ldr	r3, [r3, #116]	; 0x74
    9938:	ldr	r2, [fp, #-168]	; 0xffffff58
    993c:	ldr	r2, [r2, #4]
    9940:	mov	r0, r2
    9944:	blx	r3
    9948:	mov	r3, r0
    994c:	cmp	r3, #0
    9950:	bne	9fb8 <doProlog+0x2aa0>
    9954:	mov	r3, #22
    9958:	b	a0a4 <doProlog+0x2b8c>
    995c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9960:	ldr	r3, [r3, #136]	; 0x88
    9964:	cmp	r3, #0
    9968:	beq	9fc0 <doProlog+0x2aa8>
    996c:	ldr	r3, [fp, #8]
    9970:	ldr	r2, [fp, #-176]	; 0xffffff50
    9974:	ldr	r1, [fp, #-172]	; 0xffffff54
    9978:	ldr	r0, [fp, #-168]	; 0xffffff58
    997c:	bl	f870 <getElementType>
    9980:	mov	r2, r0
    9984:	ldr	r3, [fp, #-168]	; 0xffffff58
    9988:	str	r2, [r3, #352]	; 0x160
    998c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9990:	ldr	r3, [r3, #352]	; 0x160
    9994:	cmp	r3, #0
    9998:	bne	99a4 <doProlog+0x248c>
    999c:	mov	r3, #1
    99a0:	b	a0a4 <doProlog+0x2b8c>
    99a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99a8:	mov	r2, #0
    99ac:	str	r2, [r3, #180]	; 0xb4
    99b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99b4:	mov	r2, #0
    99b8:	str	r2, [r3, #176]	; 0xb0
    99bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99c0:	mov	r2, #1
    99c4:	strb	r2, [r3, #160]	; 0xa0
    99c8:	mov	r3, #0
    99cc:	strb	r3, [fp, #-25]	; 0xffffffe7
    99d0:	b	9fc0 <doProlog+0x2aa8>
    99d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99d8:	ldrb	r3, [r3, #160]	; 0xa0
    99dc:	cmp	r3, #0
    99e0:	beq	9fc8 <doProlog+0x2ab0>
    99e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    99e8:	ldr	r3, [r3, #136]	; 0x88
    99ec:	cmp	r3, #0
    99f0:	beq	9aa4 <doProlog+0x258c>
    99f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    99f8:	ldr	r3, [r3, #12]
    99fc:	mov	r0, #20
    9a00:	blx	r3
    9a04:	str	r0, [fp, #-140]	; 0xffffff74
    9a08:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a0c:	cmp	r3, #0
    9a10:	bne	9a1c <doProlog+0x2504>
    9a14:	mov	r3, #1
    9a18:	b	a0a4 <doProlog+0x2b8c>
    9a1c:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a20:	mov	r2, #0
    9a24:	str	r2, [r3, #4]
    9a28:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a2c:	mov	r2, #0
    9a30:	str	r2, [r3, #8]
    9a34:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a38:	mov	r2, #0
    9a3c:	str	r2, [r3, #12]
    9a40:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a44:	mov	r2, #0
    9a48:	str	r2, [r3, #16]
    9a4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a50:	cmp	r3, #41	; 0x29
    9a54:	bne	9a60 <doProlog+0x2548>
    9a58:	mov	r2, #2
    9a5c:	b	9a64 <doProlog+0x254c>
    9a60:	mov	r2, #1
    9a64:	ldr	r3, [fp, #-140]	; 0xffffff74
    9a68:	str	r2, [r3]
    9a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9a70:	ldr	r2, [fp, #-176]	; 0xffffff50
    9a74:	str	r2, [r3]
    9a78:	ldr	r3, [fp, #-168]	; 0xffffff58
    9a7c:	ldr	r3, [r3, #136]	; 0x88
    9a80:	ldr	r2, [fp, #-168]	; 0xffffff58
    9a84:	ldr	r0, [r2, #4]
    9a88:	ldr	r2, [fp, #-168]	; 0xffffff58
    9a8c:	ldr	r2, [r2, #352]	; 0x160
    9a90:	ldr	r1, [r2]
    9a94:	ldr	r2, [fp, #-140]	; 0xffffff74
    9a98:	blx	r3
    9a9c:	mov	r3, #0
    9aa0:	strb	r3, [fp, #-25]	; 0xffffffe7
    9aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9aa8:	mov	r2, #0
    9aac:	strb	r2, [r3, #160]	; 0xa0
    9ab0:	b	9fc8 <doProlog+0x2ab0>
    9ab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ab8:	ldrb	r3, [r3, #160]	; 0xa0
    9abc:	cmp	r3, #0
    9ac0:	beq	9fd0 <doProlog+0x2ab8>
    9ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ac8:	ldr	r2, [r3, #164]	; 0xa4
    9acc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ad0:	ldr	r1, [r3, #184]	; 0xb8
    9ad4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ad8:	ldr	r3, [r3, #180]	; 0xb4
    9adc:	sub	r3, r3, #-1073741823	; 0xc0000001
    9ae0:	lsl	r3, r3, #2
    9ae4:	add	r3, r1, r3
    9ae8:	ldr	r3, [r3]
    9aec:	mov	r1, r3
    9af0:	mov	r3, r1
    9af4:	lsl	r3, r3, #3
    9af8:	sub	r3, r3, r1
    9afc:	lsl	r3, r3, #2
    9b00:	add	r3, r2, r3
    9b04:	mov	r2, #3
    9b08:	str	r2, [r3]
    9b0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9b10:	ldr	r3, [r3, #136]	; 0x88
    9b14:	cmp	r3, #0
    9b18:	beq	9fd0 <doProlog+0x2ab8>
    9b1c:	mov	r3, #0
    9b20:	strb	r3, [fp, #-25]	; 0xffffffe7
    9b24:	b	9fd0 <doProlog+0x2ab8>
    9b28:	mov	r3, #0
    9b2c:	str	r3, [fp, #-24]	; 0xffffffe8
    9b30:	b	9b54 <doProlog+0x263c>
    9b34:	mov	r3, #1
    9b38:	str	r3, [fp, #-24]	; 0xffffffe8
    9b3c:	b	9b54 <doProlog+0x263c>
    9b40:	mov	r3, #2
    9b44:	str	r3, [fp, #-24]	; 0xffffffe8
    9b48:	b	9b54 <doProlog+0x263c>
    9b4c:	mov	r3, #3
    9b50:	str	r3, [fp, #-24]	; 0xffffffe8
    9b54:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9b58:	ldrb	r3, [r3, #160]	; 0xa0
    9b5c:	cmp	r3, #0
    9b60:	beq	9fd8 <doProlog+0x2ac0>
    9b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b68:	cmp	r3, #0
    9b6c:	beq	9b88 <doProlog+0x2670>
    9b70:	ldr	r2, [fp, #8]
    9b74:	ldr	r3, [fp, #-172]	; 0xffffff54
    9b78:	ldr	r3, [r3, #68]	; 0x44
    9b7c:	rsb	r3, r3, #0
    9b80:	add	r3, r2, r3
    9b84:	b	9b8c <doProlog+0x2674>
    9b88:	ldr	r3, [fp, #8]
    9b8c:	str	r3, [fp, #-144]	; 0xffffff70
    9b90:	ldr	r0, [fp, #-168]	; 0xffffff58
    9b94:	bl	f270 <nextScaffoldPart>
    9b98:	str	r0, [fp, #-148]	; 0xffffff6c
    9b9c:	ldr	r3, [fp, #-148]	; 0xffffff6c
    9ba0:	cmp	r3, #0
    9ba4:	bge	9bb0 <doProlog+0x2698>
    9ba8:	mov	r3, #1
    9bac:	b	a0a4 <doProlog+0x2b8c>
    9bb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bb4:	ldr	r1, [r3, #164]	; 0xa4
    9bb8:	ldr	r2, [fp, #-148]	; 0xffffff6c
    9bbc:	mov	r3, r2
    9bc0:	lsl	r3, r3, #3
    9bc4:	sub	r3, r3, r2
    9bc8:	lsl	r3, r3, #2
    9bcc:	add	r3, r1, r3
    9bd0:	mov	r2, #4
    9bd4:	str	r2, [r3]
    9bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bdc:	ldr	r1, [r3, #164]	; 0xa4
    9be0:	ldr	r2, [fp, #-148]	; 0xffffff6c
    9be4:	mov	r3, r2
    9be8:	lsl	r3, r3, #3
    9bec:	sub	r3, r3, r2
    9bf0:	lsl	r3, r3, #2
    9bf4:	add	r3, r1, r3
    9bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9bfc:	str	r2, [r3, #4]
    9c00:	ldr	r3, [fp, #-144]	; 0xffffff70
    9c04:	ldr	r2, [fp, #-176]	; 0xffffff50
    9c08:	ldr	r1, [fp, #-172]	; 0xffffff54
    9c0c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9c10:	bl	f870 <getElementType>
    9c14:	str	r0, [fp, #-152]	; 0xffffff68
    9c18:	ldr	r3, [fp, #-152]	; 0xffffff68
    9c1c:	cmp	r3, #0
    9c20:	bne	9c2c <doProlog+0x2714>
    9c24:	mov	r3, #1
    9c28:	b	a0a4 <doProlog+0x2b8c>
    9c2c:	ldr	r3, [fp, #-152]	; 0xffffff68
    9c30:	ldr	r3, [r3]
    9c34:	str	r3, [fp, #-156]	; 0xffffff64
    9c38:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9c3c:	ldr	r1, [r3, #164]	; 0xa4
    9c40:	ldr	r2, [fp, #-148]	; 0xffffff6c
    9c44:	mov	r3, r2
    9c48:	lsl	r3, r3, #3
    9c4c:	sub	r3, r3, r2
    9c50:	lsl	r3, r3, #2
    9c54:	add	r3, r1, r3
    9c58:	ldr	r2, [fp, #-156]	; 0xffffff64
    9c5c:	str	r2, [r3, #8]
    9c60:	mov	r3, #0
    9c64:	str	r3, [fp, #-36]	; 0xffffffdc
    9c68:	nop	{0}
    9c6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9c70:	add	r2, r3, #1
    9c74:	str	r2, [fp, #-36]	; 0xffffffdc
    9c78:	mov	r2, r3
    9c7c:	ldr	r3, [fp, #-156]	; 0xffffff64
    9c80:	add	r3, r3, r2
    9c84:	ldrb	r3, [r3]
    9c88:	cmp	r3, #0
    9c8c:	bne	9c6c <doProlog+0x2754>
    9c90:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9c94:	ldr	r2, [r3, #168]	; 0xa8
    9c98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9c9c:	add	r2, r2, r3
    9ca0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ca4:	str	r2, [r3, #168]	; 0xa8
    9ca8:	ldr	r3, [fp, #-168]	; 0xffffff58
    9cac:	ldr	r3, [r3, #136]	; 0x88
    9cb0:	cmp	r3, #0
    9cb4:	beq	9fd8 <doProlog+0x2ac0>
    9cb8:	mov	r3, #0
    9cbc:	strb	r3, [fp, #-25]	; 0xffffffe7
    9cc0:	b	9fd8 <doProlog+0x2ac0>
    9cc4:	mov	r3, #0
    9cc8:	str	r3, [fp, #-24]	; 0xffffffe8
    9ccc:	b	9cf0 <doProlog+0x27d8>
    9cd0:	mov	r3, #1
    9cd4:	str	r3, [fp, #-24]	; 0xffffffe8
    9cd8:	b	9cf0 <doProlog+0x27d8>
    9cdc:	mov	r3, #2
    9ce0:	str	r3, [fp, #-24]	; 0xffffffe8
    9ce4:	b	9cf0 <doProlog+0x27d8>
    9ce8:	mov	r3, #3
    9cec:	str	r3, [fp, #-24]	; 0xffffffe8
    9cf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9cf4:	ldrb	r3, [r3, #160]	; 0xa0
    9cf8:	cmp	r3, #0
    9cfc:	beq	9fe0 <doProlog+0x2ac8>
    9d00:	ldr	r3, [fp, #-168]	; 0xffffff58
    9d04:	ldr	r3, [r3, #136]	; 0x88
    9d08:	cmp	r3, #0
    9d0c:	beq	9d18 <doProlog+0x2800>
    9d10:	mov	r3, #0
    9d14:	strb	r3, [fp, #-25]	; 0xffffffe7
    9d18:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d1c:	ldr	r3, [r3, #180]	; 0xb4
    9d20:	sub	r2, r3, #1
    9d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d28:	str	r2, [r3, #180]	; 0xb4
    9d2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d30:	ldr	r2, [r3, #164]	; 0xa4
    9d34:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d38:	ldr	r1, [r3, #184]	; 0xb8
    9d3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d40:	ldr	r3, [r3, #180]	; 0xb4
    9d44:	lsl	r3, r3, #2
    9d48:	add	r3, r1, r3
    9d4c:	ldr	r3, [r3]
    9d50:	mov	r1, r3
    9d54:	mov	r3, r1
    9d58:	lsl	r3, r3, #3
    9d5c:	sub	r3, r3, r1
    9d60:	lsl	r3, r3, #2
    9d64:	add	r3, r2, r3
    9d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d6c:	str	r2, [r3, #4]
    9d70:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9d74:	ldr	r3, [r3, #180]	; 0xb4
    9d78:	cmp	r3, #0
    9d7c:	bne	9fe0 <doProlog+0x2ac8>
    9d80:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    9d84:	cmp	r3, #0
    9d88:	bne	9ddc <doProlog+0x28c4>
    9d8c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9d90:	bl	f78c <build_model>
    9d94:	str	r0, [fp, #-160]	; 0xffffff60
    9d98:	ldr	r3, [fp, #-160]	; 0xffffff60
    9d9c:	cmp	r3, #0
    9da0:	bne	9dac <doProlog+0x2894>
    9da4:	mov	r3, #1
    9da8:	b	a0a4 <doProlog+0x2b8c>
    9dac:	ldr	r3, [fp, #-20]	; 0xffffffec
    9db0:	ldr	r2, [fp, #-176]	; 0xffffff50
    9db4:	str	r2, [r3]
    9db8:	ldr	r3, [fp, #-168]	; 0xffffff58
    9dbc:	ldr	r3, [r3, #136]	; 0x88
    9dc0:	ldr	r2, [fp, #-168]	; 0xffffff58
    9dc4:	ldr	r0, [r2, #4]
    9dc8:	ldr	r2, [fp, #-168]	; 0xffffff58
    9dcc:	ldr	r2, [r2, #352]	; 0x160
    9dd0:	ldr	r1, [r2]
    9dd4:	ldr	r2, [fp, #-160]	; 0xffffff60
    9dd8:	blx	r3
    9ddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9de0:	mov	r2, #0
    9de4:	strb	r2, [r3, #160]	; 0xa0
    9de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9dec:	mov	r2, #0
    9df0:	str	r2, [r3, #168]	; 0xa8
    9df4:	b	9fe0 <doProlog+0x2ac8>
    9df8:	ldr	r3, [fp, #8]
    9dfc:	ldr	r2, [fp, #-176]	; 0xffffff50
    9e00:	ldr	r1, [fp, #-172]	; 0xffffff54
    9e04:	ldr	r0, [fp, #-168]	; 0xffffff58
    9e08:	bl	b8d0 <reportProcessingInstruction>
    9e0c:	mov	r3, r0
    9e10:	cmp	r3, #0
    9e14:	bne	9e20 <doProlog+0x2908>
    9e18:	mov	r3, #1
    9e1c:	b	a0a4 <doProlog+0x2b8c>
    9e20:	mov	r3, #0
    9e24:	strb	r3, [fp, #-25]	; 0xffffffe7
    9e28:	b	a014 <doProlog+0x2afc>
    9e2c:	ldr	r3, [fp, #8]
    9e30:	ldr	r2, [fp, #-176]	; 0xffffff50
    9e34:	ldr	r1, [fp, #-172]	; 0xffffff54
    9e38:	ldr	r0, [fp, #-168]	; 0xffffff58
    9e3c:	bl	ba64 <reportComment>
    9e40:	mov	r3, r0
    9e44:	cmp	r3, #0
    9e48:	bne	9e54 <doProlog+0x293c>
    9e4c:	mov	r3, #1
    9e50:	b	a0a4 <doProlog+0x2b8c>
    9e54:	mov	r3, #0
    9e58:	strb	r3, [fp, #-25]	; 0xffffffe7
    9e5c:	b	a014 <doProlog+0x2afc>
    9e60:	ldr	r3, [fp, #4]
    9e64:	cmp	r3, #14
    9e68:	bne	9fe8 <doProlog+0x2ad0>
    9e6c:	mov	r3, #0
    9e70:	strb	r3, [fp, #-25]	; 0xffffffe7
    9e74:	nop	{0}
    9e78:	b	9fe8 <doProlog+0x2ad0>
    9e7c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9e80:	ldr	r3, [r3, #92]	; 0x5c
    9e84:	cmp	r3, #0
    9e88:	beq	9ff0 <doProlog+0x2ad8>
    9e8c:	mov	r3, #0
    9e90:	strb	r3, [fp, #-25]	; 0xffffffe7
    9e94:	b	9ff0 <doProlog+0x2ad8>
    9e98:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9e9c:	ldrb	r3, [r3, #128]	; 0x80
    9ea0:	cmp	r3, #0
    9ea4:	beq	9ff8 <doProlog+0x2ae0>
    9ea8:	ldr	r3, [fp, #-168]	; 0xffffff58
    9eac:	ldr	r3, [r3, #144]	; 0x90
    9eb0:	cmp	r3, #0
    9eb4:	beq	9ff8 <doProlog+0x2ae0>
    9eb8:	mov	r3, #0
    9ebc:	strb	r3, [fp, #-25]	; 0xffffffe7
    9ec0:	b	9ff8 <doProlog+0x2ae0>
    9ec4:	ldr	r3, [fp, #-168]	; 0xffffff58
    9ec8:	ldr	r3, [r3, #104]	; 0x68
    9ecc:	cmp	r3, #0
    9ed0:	beq	a000 <doProlog+0x2ae8>
    9ed4:	mov	r3, #0
    9ed8:	strb	r3, [fp, #-25]	; 0xffffffe7
    9edc:	b	a000 <doProlog+0x2ae8>
    9ee0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9ee4:	ldrb	r3, [r3, #128]	; 0x80
    9ee8:	cmp	r3, #0
    9eec:	beq	a008 <doProlog+0x2af0>
    9ef0:	ldr	r3, [fp, #-168]	; 0xffffff58
    9ef4:	ldr	r3, [r3, #140]	; 0x8c
    9ef8:	cmp	r3, #0
    9efc:	beq	a008 <doProlog+0x2af0>
    9f00:	mov	r3, #0
    9f04:	strb	r3, [fp, #-25]	; 0xffffffe7
    9f08:	b	a008 <doProlog+0x2af0>
    9f0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9f10:	ldr	r3, [r3, #136]	; 0x88
    9f14:	cmp	r3, #0
    9f18:	beq	a010 <doProlog+0x2af8>
    9f1c:	mov	r3, #0
    9f20:	strb	r3, [fp, #-25]	; 0xffffffe7
    9f24:	b	a010 <doProlog+0x2af8>
    9f28:	nop	{0}
    9f2c:	b	a014 <doProlog+0x2afc>
    9f30:	nop	{0}
    9f34:	b	a014 <doProlog+0x2afc>
    9f38:	nop	{0}
    9f3c:	b	a014 <doProlog+0x2afc>
    9f40:	nop	{0}
    9f44:	b	a014 <doProlog+0x2afc>
    9f48:	nop	{0}
    9f4c:	b	a014 <doProlog+0x2afc>
    9f50:	nop	{0}
    9f54:	b	a014 <doProlog+0x2afc>
    9f58:	nop	{0}
    9f5c:	b	a014 <doProlog+0x2afc>
    9f60:	nop	{0}
    9f64:	b	a014 <doProlog+0x2afc>
    9f68:	nop	{0}
    9f6c:	b	a014 <doProlog+0x2afc>
    9f70:	nop	{0}
    9f74:	b	a014 <doProlog+0x2afc>
    9f78:	nop	{0}
    9f7c:	b	a014 <doProlog+0x2afc>
    9f80:	nop	{0}
    9f84:	b	a014 <doProlog+0x2afc>
    9f88:	nop	{0}
    9f8c:	b	a014 <doProlog+0x2afc>
    9f90:	nop	{0}
    9f94:	b	a014 <doProlog+0x2afc>
    9f98:	nop	{0}
    9f9c:	b	a014 <doProlog+0x2afc>
    9fa0:	nop	{0}
    9fa4:	b	a014 <doProlog+0x2afc>
    9fa8:	nop	{0}
    9fac:	b	a014 <doProlog+0x2afc>
    9fb0:	nop	{0}
    9fb4:	b	a014 <doProlog+0x2afc>
    9fb8:	nop	{0}
    9fbc:	b	a014 <doProlog+0x2afc>
    9fc0:	nop	{0}
    9fc4:	b	a014 <doProlog+0x2afc>
    9fc8:	nop	{0}
    9fcc:	b	a014 <doProlog+0x2afc>
    9fd0:	nop	{0}
    9fd4:	b	a014 <doProlog+0x2afc>
    9fd8:	nop	{0}
    9fdc:	b	a014 <doProlog+0x2afc>
    9fe0:	nop	{0}
    9fe4:	b	a014 <doProlog+0x2afc>
    9fe8:	nop	{0}
    9fec:	b	a014 <doProlog+0x2afc>
    9ff0:	nop	{0}
    9ff4:	b	a014 <doProlog+0x2afc>
    9ff8:	nop	{0}
    9ffc:	b	a014 <doProlog+0x2afc>
    a000:	nop	{0}
    a004:	b	a014 <doProlog+0x2afc>
    a008:	nop	{0}
    a00c:	b	a014 <doProlog+0x2afc>
    a010:	nop	{0}
    a014:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    a018:	cmp	r3, #0
    a01c:	beq	a044 <doProlog+0x2b2c>
    a020:	ldr	r3, [fp, #-168]	; 0xffffff58
    a024:	ldr	r3, [r3, #88]	; 0x58
    a028:	cmp	r3, #0
    a02c:	beq	a044 <doProlog+0x2b2c>
    a030:	ldr	r3, [fp, #8]
    a034:	ldr	r2, [fp, #-176]	; 0xffffff50
    a038:	ldr	r1, [fp, #-172]	; 0xffffff54
    a03c:	ldr	r0, [fp, #-168]	; 0xffffff58
    a040:	bl	bb70 <reportDefault>
    a044:	ldr	r3, [fp, #-168]	; 0xffffff58
    a048:	ldr	r3, [r3, #496]	; 0x1f0
    a04c:	cmp	r3, #2
    a050:	beq	a070 <doProlog+0x2b58>
    a054:	cmp	r3, #3
    a058:	bne	a078 <doProlog+0x2b60>
    a05c:	ldr	r2, [fp, #8]
    a060:	ldr	r3, [fp, #12]
    a064:	str	r2, [r3]
    a068:	mov	r3, #0
    a06c:	b	a0a4 <doProlog+0x2b8c>
    a070:	mov	r3, #35	; 0x23
    a074:	b	a0a4 <doProlog+0x2b8c>
    a078:	ldr	r3, [fp, #8]
    a07c:	str	r3, [fp, #-176]	; 0xffffff50
    a080:	ldr	r3, [fp, #-172]	; 0xffffff54
    a084:	ldr	r4, [r3]
    a088:	add	r3, fp, #8
    a08c:	ldr	r2, [fp, #-180]	; 0xffffff4c
    a090:	ldr	r1, [fp, #-176]	; 0xffffff50
    a094:	ldr	r0, [fp, #-172]	; 0xffffff54
    a098:	blx	r4
    a09c:	str	r0, [fp, #4]
    a0a0:	b	7594 <doProlog+0x7c>
    a0a4:	mov	r0, r3
    a0a8:	sub	sp, fp, #12
    a0ac:	ldrd	r4, [sp]
    a0b0:	ldr	fp, [sp, #8]
    a0b4:	add	sp, sp, #12
    a0b8:	pop	{pc}		; (ldr pc, [sp], #4)

0000a0bc <epilogProcessor>:
    a0bc:	str	r4, [sp, #-12]!
    a0c0:	str	fp, [sp, #4]
    a0c4:	str	lr, [sp, #8]
    a0c8:	add	fp, sp, #8
    a0cc:	sub	sp, sp, #28
    a0d0:	str	r0, [fp, #-24]	; 0xffffffe8
    a0d4:	str	r1, [fp, #-28]	; 0xffffffe4
    a0d8:	str	r2, [fp, #-32]	; 0xffffffe0
    a0dc:	str	r3, [fp, #-36]	; 0xffffffdc
    a0e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a0e4:	movw	r3, #0
    a0e8:	movt	r3, #0
    a0ec:	str	r3, [r2, #288]	; 0x120
    a0f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a0f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a0f8:	str	r2, [r3, #296]	; 0x128
    a0fc:	mov	r3, #0
    a100:	str	r3, [fp, #-20]	; 0xffffffec
    a104:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a108:	ldr	r3, [r3, #152]	; 0x98
    a10c:	ldr	r4, [r3]
    a110:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a114:	ldr	r0, [r3, #152]	; 0x98
    a118:	sub	r3, fp, #20
    a11c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a120:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a124:	blx	r4
    a128:	str	r0, [fp, #-16]
    a12c:	ldr	r2, [fp, #-20]	; 0xffffffec
    a130:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a134:	str	r2, [r3, #300]	; 0x12c
    a138:	ldr	r3, [fp, #-16]
    a13c:	add	r3, r3, #15
    a140:	cmp	r3, #30
    a144:	ldrls	pc, [pc, r3, lsl #2]
    a148:	b	a320 <epilogProcessor+0x264>
    a14c:	.word	0x0000a1c8
    a150:	.word	0x0000a320
    a154:	.word	0x0000a320
    a158:	.word	0x0000a320
    a15c:	.word	0x0000a320
    a160:	.word	0x0000a320
    a164:	.word	0x0000a320
    a168:	.word	0x0000a320
    a16c:	.word	0x0000a320
    a170:	.word	0x0000a320
    a174:	.word	0x0000a320
    a178:	.word	0x0000a21c
    a17c:	.word	0x0000a320
    a180:	.word	0x0000a2f4
    a184:	.word	0x0000a2c8
    a188:	.word	0x0000a2b4
    a18c:	.word	0x0000a320
    a190:	.word	0x0000a320
    a194:	.word	0x0000a320
    a198:	.word	0x0000a320
    a19c:	.word	0x0000a320
    a1a0:	.word	0x0000a320
    a1a4:	.word	0x0000a320
    a1a8:	.word	0x0000a320
    a1ac:	.word	0x0000a320
    a1b0:	.word	0x0000a320
    a1b4:	.word	0x0000a25c
    a1b8:	.word	0x0000a320
    a1bc:	.word	0x0000a288
    a1c0:	.word	0x0000a320
    a1c4:	.word	0x0000a230
    a1c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1cc:	ldr	r3, [r3, #88]	; 0x58
    a1d0:	cmp	r3, #0
    a1d4:	beq	a208 <epilogProcessor+0x14c>
    a1d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1dc:	ldr	r1, [r3, #152]	; 0x98
    a1e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    a1e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a1ec:	bl	bb70 <reportDefault>
    a1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a1f4:	ldr	r3, [r3, #496]	; 0x1f0
    a1f8:	cmp	r3, #2
    a1fc:	bne	a208 <epilogProcessor+0x14c>
    a200:	mov	r3, #35	; 0x23
    a204:	b	a380 <epilogProcessor+0x2c4>
    a208:	ldr	r2, [fp, #-20]	; 0xffffffec
    a20c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a210:	str	r2, [r3]
    a214:	mov	r3, #0
    a218:	b	a380 <epilogProcessor+0x2c4>
    a21c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a220:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a224:	str	r2, [r3]
    a228:	mov	r3, #0
    a22c:	b	a380 <epilogProcessor+0x2c4>
    a230:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a234:	ldr	r3, [r3, #88]	; 0x58
    a238:	cmp	r3, #0
    a23c:	beq	a328 <epilogProcessor+0x26c>
    a240:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a244:	ldr	r1, [r3, #152]	; 0x98
    a248:	ldr	r3, [fp, #-20]	; 0xffffffec
    a24c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a254:	bl	bb70 <reportDefault>
    a258:	b	a328 <epilogProcessor+0x26c>
    a25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a260:	ldr	r1, [r3, #152]	; 0x98
    a264:	ldr	r3, [fp, #-20]	; 0xffffffec
    a268:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a26c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a270:	bl	b8d0 <reportProcessingInstruction>
    a274:	mov	r3, r0
    a278:	cmp	r3, #0
    a27c:	bne	a330 <epilogProcessor+0x274>
    a280:	mov	r3, #1
    a284:	b	a380 <epilogProcessor+0x2c4>
    a288:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a28c:	ldr	r1, [r3, #152]	; 0x98
    a290:	ldr	r3, [fp, #-20]	; 0xffffffec
    a294:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a298:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a29c:	bl	ba64 <reportComment>
    a2a0:	mov	r3, r0
    a2a4:	cmp	r3, #0
    a2a8:	bne	a338 <epilogProcessor+0x27c>
    a2ac:	mov	r3, #1
    a2b0:	b	a380 <epilogProcessor+0x2c4>
    a2b4:	ldr	r2, [fp, #-20]	; 0xffffffec
    a2b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a2bc:	str	r2, [r3, #296]	; 0x128
    a2c0:	mov	r3, #4
    a2c4:	b	a380 <epilogProcessor+0x2c4>
    a2c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a2cc:	ldrb	r3, [r3, #500]	; 0x1f4
    a2d0:	cmp	r3, #0
    a2d4:	bne	a2ec <epilogProcessor+0x230>
    a2d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a2dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a2e0:	str	r2, [r3]
    a2e4:	mov	r3, #0
    a2e8:	b	a380 <epilogProcessor+0x2c4>
    a2ec:	mov	r3, #5
    a2f0:	b	a380 <epilogProcessor+0x2c4>
    a2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a2f8:	ldrb	r3, [r3, #500]	; 0x1f4
    a2fc:	cmp	r3, #0
    a300:	bne	a318 <epilogProcessor+0x25c>
    a304:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a308:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a30c:	str	r2, [r3]
    a310:	mov	r3, #0
    a314:	b	a380 <epilogProcessor+0x2c4>
    a318:	mov	r3, #6
    a31c:	b	a380 <epilogProcessor+0x2c4>
    a320:	mov	r3, #9
    a324:	b	a380 <epilogProcessor+0x2c4>
    a328:	nop	{0}
    a32c:	b	a33c <epilogProcessor+0x280>
    a330:	nop	{0}
    a334:	b	a33c <epilogProcessor+0x280>
    a338:	nop	{0}
    a33c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a340:	str	r3, [fp, #-28]	; 0xffffffe4
    a344:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a348:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a34c:	str	r2, [r3, #296]	; 0x128
    a350:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a354:	ldr	r3, [r3, #496]	; 0x1f0
    a358:	cmp	r3, #2
    a35c:	beq	a37c <epilogProcessor+0x2c0>
    a360:	cmp	r3, #3
    a364:	bne	a0fc <epilogProcessor+0x40>
    a368:	ldr	r2, [fp, #-20]	; 0xffffffec
    a36c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a370:	str	r2, [r3]
    a374:	mov	r3, #0
    a378:	b	a380 <epilogProcessor+0x2c4>
    a37c:	mov	r3, #35	; 0x23
    a380:	mov	r0, r3
    a384:	sub	sp, fp, #8
    a388:	ldr	r4, [sp]
    a38c:	ldr	fp, [sp, #4]
    a390:	add	sp, sp, #8
    a394:	pop	{pc}		; (ldr pc, [sp], #4)

0000a398 <processInternalEntity>:
    a398:	str	r4, [sp, #-12]!
    a39c:	str	fp, [sp, #4]
    a3a0:	str	lr, [sp, #8]
    a3a4:	add	fp, sp, #8
    a3a8:	sub	sp, sp, #60	; 0x3c
    a3ac:	str	r0, [fp, #-40]	; 0xffffffd8
    a3b0:	str	r1, [fp, #-44]	; 0xffffffd4
    a3b4:	mov	r3, r2
    a3b8:	strb	r3, [fp, #-45]	; 0xffffffd3
    a3bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a3c0:	ldr	r3, [r3, #312]	; 0x138
    a3c4:	cmp	r3, #0
    a3c8:	beq	a3ec <processInternalEntity+0x54>
    a3cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a3d0:	ldr	r3, [r3, #312]	; 0x138
    a3d4:	str	r3, [fp, #-20]	; 0xffffffec
    a3d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a3dc:	ldr	r2, [r3, #8]
    a3e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a3e4:	str	r2, [r3, #312]	; 0x138
    a3e8:	b	a414 <processInternalEntity+0x7c>
    a3ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a3f0:	ldr	r3, [r3, #12]
    a3f4:	mov	r0, #24
    a3f8:	blx	r3
    a3fc:	str	r0, [fp, #-20]	; 0xffffffec
    a400:	ldr	r3, [fp, #-20]	; 0xffffffec
    a404:	cmp	r3, #0
    a408:	bne	a414 <processInternalEntity+0x7c>
    a40c:	mov	r3, #1
    a410:	b	a5ec <processInternalEntity+0x254>
    a414:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a418:	mov	r2, #1
    a41c:	strb	r2, [r3, #32]
    a420:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a424:	mov	r2, #0
    a428:	str	r2, [r3, #12]
    a42c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a430:	ldr	r2, [r3, #308]	; 0x134
    a434:	ldr	r3, [fp, #-20]	; 0xffffffec
    a438:	str	r2, [r3, #8]
    a43c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a440:	ldr	r2, [fp, #-20]	; 0xffffffec
    a444:	str	r2, [r3, #308]	; 0x134
    a448:	ldr	r3, [fp, #-20]	; 0xffffffec
    a44c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a450:	str	r2, [r3, #12]
    a454:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a458:	ldr	r2, [r3, #320]	; 0x140
    a45c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a460:	str	r2, [r3, #16]
    a464:	ldr	r3, [fp, #-20]	; 0xffffffec
    a468:	ldrb	r2, [fp, #-45]	; 0xffffffd3
    a46c:	strb	r2, [r3, #20]
    a470:	ldr	r3, [fp, #-20]	; 0xffffffec
    a474:	mov	r2, #0
    a478:	str	r2, [r3]
    a47c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a480:	mov	r2, #0
    a484:	str	r2, [r3, #4]
    a488:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a48c:	ldr	r3, [r3, #4]
    a490:	str	r3, [fp, #-24]	; 0xffffffe8
    a494:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a498:	ldr	r3, [r3, #4]
    a49c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a4a0:	ldr	r2, [r2, #8]
    a4a4:	add	r3, r3, r2
    a4a8:	str	r3, [fp, #-28]	; 0xffffffe4
    a4ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a4b0:	ldrb	r3, [r3, #33]	; 0x21
    a4b4:	cmp	r3, #0
    a4b8:	beq	a524 <processInternalEntity+0x18c>
    a4bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a4c0:	ldr	r3, [r3, #236]	; 0xec
    a4c4:	ldr	r4, [r3]
    a4c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a4cc:	ldr	r0, [r3, #236]	; 0xec
    a4d0:	sub	r3, fp, #36	; 0x24
    a4d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a4d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a4dc:	blx	r4
    a4e0:	str	r0, [fp, #-32]	; 0xffffffe0
    a4e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a4e8:	ldr	r1, [r3, #236]	; 0xec
    a4ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a4f0:	mov	r2, #0
    a4f4:	str	r2, [sp, #12]
    a4f8:	sub	r2, fp, #36	; 0x24
    a4fc:	str	r2, [sp, #8]
    a500:	str	r3, [sp, #4]
    a504:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a508:	str	r3, [sp]
    a50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a510:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a514:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a518:	bl	7518 <doProlog>
    a51c:	str	r0, [fp, #-16]
    a520:	b	a55c <processInternalEntity+0x1c4>
    a524:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a528:	ldr	r1, [r3, #320]	; 0x140
    a52c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a530:	ldr	r2, [r3, #236]	; 0xec
    a534:	mov	r3, #0
    a538:	str	r3, [sp, #8]
    a53c:	sub	r3, fp, #36	; 0x24
    a540:	str	r3, [sp, #4]
    a544:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a548:	str	r3, [sp]
    a54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a550:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a554:	bl	3348 <doContent>
    a558:	str	r0, [fp, #-16]
    a55c:	ldr	r3, [fp, #-16]
    a560:	cmp	r3, #0
    a564:	bne	a5e8 <processInternalEntity+0x250>
    a568:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a56c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a570:	cmp	r2, r3
    a574:	beq	a5b0 <processInternalEntity+0x218>
    a578:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a57c:	ldr	r3, [r3, #496]	; 0x1f0
    a580:	cmp	r3, #3
    a584:	bne	a5b0 <processInternalEntity+0x218>
    a588:	ldr	r2, [fp, #-36]	; 0xffffffdc
    a58c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a590:	sub	r2, r2, r3
    a594:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a598:	str	r2, [r3, #12]
    a59c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a5a0:	movw	r3, #0
    a5a4:	movt	r3, #0
    a5a8:	str	r3, [r2, #288]	; 0x120
    a5ac:	b	a5e8 <processInternalEntity+0x250>
    a5b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a5b4:	mov	r2, #0
    a5b8:	strb	r2, [r3, #32]
    a5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    a5c0:	ldr	r2, [r3, #8]
    a5c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a5c8:	str	r2, [r3, #308]	; 0x134
    a5cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a5d0:	ldr	r2, [r3, #312]	; 0x138
    a5d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    a5d8:	str	r2, [r3, #8]
    a5dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a5e0:	ldr	r2, [fp, #-20]	; 0xffffffec
    a5e4:	str	r2, [r3, #312]	; 0x138
    a5e8:	ldr	r3, [fp, #-16]
    a5ec:	mov	r0, r3
    a5f0:	sub	sp, fp, #8
    a5f4:	ldr	r4, [sp]
    a5f8:	ldr	fp, [sp, #4]
    a5fc:	add	sp, sp, #8
    a600:	pop	{pc}		; (ldr pc, [sp], #4)

0000a604 <internalEntityProcessor>:
    a604:	str	r4, [sp, #-12]!
    a608:	str	fp, [sp, #4]
    a60c:	str	lr, [sp, #8]
    a610:	add	fp, sp, #8
    a614:	sub	sp, sp, #68	; 0x44
    a618:	str	r0, [fp, #-48]	; 0xffffffd0
    a61c:	str	r1, [fp, #-52]	; 0xffffffcc
    a620:	str	r2, [fp, #-56]	; 0xffffffc8
    a624:	str	r3, [fp, #-60]	; 0xffffffc4
    a628:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a62c:	ldr	r3, [r3, #308]	; 0x134
    a630:	str	r3, [fp, #-20]	; 0xffffffec
    a634:	ldr	r3, [fp, #-20]	; 0xffffffec
    a638:	cmp	r3, #0
    a63c:	bne	a648 <internalEntityProcessor+0x44>
    a640:	mov	r3, #23
    a644:	b	a8cc <internalEntityProcessor+0x2c8>
    a648:	ldr	r3, [fp, #-20]	; 0xffffffec
    a64c:	ldr	r3, [r3, #12]
    a650:	str	r3, [fp, #-24]	; 0xffffffe8
    a654:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a658:	ldr	r3, [r3, #4]
    a65c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a660:	ldr	r2, [r2, #12]
    a664:	add	r3, r3, r2
    a668:	str	r3, [fp, #-28]	; 0xffffffe4
    a66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a670:	ldr	r3, [r3, #4]
    a674:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a678:	ldr	r2, [r2, #8]
    a67c:	add	r3, r3, r2
    a680:	str	r3, [fp, #-32]	; 0xffffffe0
    a684:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a688:	ldrb	r3, [r3, #33]	; 0x21
    a68c:	cmp	r3, #0
    a690:	beq	a6fc <internalEntityProcessor+0xf8>
    a694:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a698:	ldr	r3, [r3, #236]	; 0xec
    a69c:	ldr	r4, [r3]
    a6a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a6a4:	ldr	r0, [r3, #236]	; 0xec
    a6a8:	sub	r3, fp, #44	; 0x2c
    a6ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a6b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a6b4:	blx	r4
    a6b8:	str	r0, [fp, #-36]	; 0xffffffdc
    a6bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a6c0:	ldr	r1, [r3, #236]	; 0xec
    a6c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a6c8:	mov	r2, #0
    a6cc:	str	r2, [sp, #12]
    a6d0:	sub	r2, fp, #44	; 0x2c
    a6d4:	str	r2, [sp, #8]
    a6d8:	str	r3, [sp, #4]
    a6dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a6e0:	str	r3, [sp]
    a6e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a6e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a6ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a6f0:	bl	7518 <doProlog>
    a6f4:	str	r0, [fp, #-16]
    a6f8:	b	a734 <internalEntityProcessor+0x130>
    a6fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    a700:	ldr	r1, [r3, #16]
    a704:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a708:	ldr	r2, [r3, #236]	; 0xec
    a70c:	mov	r3, #0
    a710:	str	r3, [sp, #8]
    a714:	sub	r3, fp, #44	; 0x2c
    a718:	str	r3, [sp, #4]
    a71c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a720:	str	r3, [sp]
    a724:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a728:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a72c:	bl	3348 <doContent>
    a730:	str	r0, [fp, #-16]
    a734:	ldr	r3, [fp, #-16]
    a738:	cmp	r3, #0
    a73c:	beq	a748 <internalEntityProcessor+0x144>
    a740:	ldr	r3, [fp, #-16]
    a744:	b	a8cc <internalEntityProcessor+0x2c8>
    a748:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a74c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a750:	cmp	r2, r3
    a754:	beq	a788 <internalEntityProcessor+0x184>
    a758:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a75c:	ldr	r3, [r3, #496]	; 0x1f0
    a760:	cmp	r3, #3
    a764:	bne	a788 <internalEntityProcessor+0x184>
    a768:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a770:	ldr	r3, [r3, #4]
    a774:	sub	r2, r2, r3
    a778:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a77c:	str	r2, [r3, #12]
    a780:	ldr	r3, [fp, #-16]
    a784:	b	a8cc <internalEntityProcessor+0x2c8>
    a788:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a78c:	mov	r2, #0
    a790:	strb	r2, [r3, #32]
    a794:	ldr	r3, [fp, #-20]	; 0xffffffec
    a798:	ldr	r2, [r3, #8]
    a79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7a0:	str	r2, [r3, #308]	; 0x134
    a7a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7a8:	ldr	r2, [r3, #312]	; 0x138
    a7ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    a7b0:	str	r2, [r3, #8]
    a7b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    a7bc:	str	r2, [r3, #312]	; 0x138
    a7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a7c4:	ldrb	r3, [r3, #33]	; 0x21
    a7c8:	cmp	r3, #0
    a7cc:	beq	a85c <internalEntityProcessor+0x258>
    a7d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a7d4:	movw	r3, #0
    a7d8:	movt	r3, #0
    a7dc:	str	r3, [r2, #288]	; 0x120
    a7e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7e4:	ldr	r3, [r3, #152]	; 0x98
    a7e8:	ldr	r4, [r3]
    a7ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a7f0:	ldr	r0, [r3, #152]	; 0x98
    a7f4:	sub	r3, fp, #44	; 0x2c
    a7f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    a7fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    a800:	blx	r4
    a804:	str	r0, [fp, #-40]	; 0xffffffd8
    a808:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a80c:	ldr	r1, [r3, #152]	; 0x98
    a810:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a814:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a818:	ldrb	r2, [r2, #500]	; 0x1f4
    a81c:	cmp	r2, #0
    a820:	moveq	r2, #1
    a824:	movne	r2, #0
    a828:	uxtb	r2, r2
    a82c:	str	r2, [sp, #12]
    a830:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a834:	str	r2, [sp, #8]
    a838:	str	r3, [sp, #4]
    a83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a840:	str	r3, [sp]
    a844:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a848:	ldr	r2, [fp, #-52]	; 0xffffffcc
    a84c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a850:	bl	7518 <doProlog>
    a854:	mov	r3, r0
    a858:	b	a8cc <internalEntityProcessor+0x2c8>
    a85c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a860:	movw	r3, #0
    a864:	movt	r3, #0
    a868:	str	r3, [r2, #288]	; 0x120
    a86c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a870:	ldr	r3, [r3, #492]	; 0x1ec
    a874:	cmp	r3, #0
    a878:	movne	r3, #1
    a87c:	moveq	r3, #0
    a880:	uxtb	r3, r3
    a884:	mov	r1, r3
    a888:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a88c:	ldr	r2, [r3, #152]	; 0x98
    a890:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a894:	ldrb	r3, [r3, #500]	; 0x1f4
    a898:	cmp	r3, #0
    a89c:	moveq	r3, #1
    a8a0:	movne	r3, #0
    a8a4:	uxtb	r3, r3
    a8a8:	str	r3, [sp, #8]
    a8ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a8b0:	str	r3, [sp, #4]
    a8b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a8b8:	str	r3, [sp]
    a8bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a8c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a8c4:	bl	3348 <doContent>
    a8c8:	mov	r3, r0
    a8cc:	mov	r0, r3
    a8d0:	sub	sp, fp, #8
    a8d4:	ldr	r4, [sp]
    a8d8:	ldr	fp, [sp, #4]
    a8dc:	add	sp, sp, #8
    a8e0:	pop	{pc}		; (ldr pc, [sp], #4)

0000a8e4 <errorProcessor>:
    a8e4:	push	{fp}		; (str fp, [sp, #-4]!)
    a8e8:	add	fp, sp, #0
    a8ec:	sub	sp, sp, #20
    a8f0:	str	r0, [fp, #-8]
    a8f4:	str	r1, [fp, #-12]
    a8f8:	str	r2, [fp, #-16]
    a8fc:	str	r3, [fp, #-20]	; 0xffffffec
    a900:	ldr	r3, [fp, #-8]
    a904:	ldr	r3, [r3, #292]	; 0x124
    a908:	mov	r0, r3
    a90c:	add	sp, fp, #0
    a910:	pop	{fp}		; (ldr fp, [sp], #4)
    a914:	bx	lr

0000a918 <storeAttributeValue>:
    a918:	str	fp, [sp, #-8]!
    a91c:	str	lr, [sp, #4]
    a920:	add	fp, sp, #4
    a924:	sub	sp, sp, #32
    a928:	str	r0, [fp, #-16]
    a92c:	str	r1, [fp, #-20]	; 0xffffffec
    a930:	str	r3, [fp, #-28]	; 0xffffffe4
    a934:	mov	r3, r2
    a938:	strb	r3, [fp, #-21]	; 0xffffffeb
    a93c:	ldrb	r2, [fp, #-21]	; 0xffffffeb
    a940:	ldr	r3, [fp, #8]
    a944:	str	r3, [sp, #4]
    a948:	ldr	r3, [fp, #4]
    a94c:	str	r3, [sp]
    a950:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a954:	ldr	r1, [fp, #-20]	; 0xffffffec
    a958:	ldr	r0, [fp, #-16]
    a95c:	bl	aa44 <appendAttributeValue>
    a960:	str	r0, [fp, #-8]
    a964:	ldr	r3, [fp, #-8]
    a968:	cmp	r3, #0
    a96c:	beq	a978 <storeAttributeValue+0x60>
    a970:	ldr	r3, [fp, #-8]
    a974:	b	aa30 <storeAttributeValue+0x118>
    a978:	ldrb	r3, [fp, #-21]	; 0xffffffeb
    a97c:	cmp	r3, #0
    a980:	bne	a9c8 <storeAttributeValue+0xb0>
    a984:	ldr	r3, [fp, #8]
    a988:	ldr	r2, [r3, #12]
    a98c:	ldr	r3, [fp, #8]
    a990:	ldr	r3, [r3, #16]
    a994:	cmp	r2, r3
    a998:	beq	a9c8 <storeAttributeValue+0xb0>
    a99c:	ldr	r3, [fp, #8]
    a9a0:	ldr	r3, [r3, #12]
    a9a4:	sub	r3, r3, #1
    a9a8:	ldrb	r3, [r3]
    a9ac:	cmp	r3, #32
    a9b0:	bne	a9c8 <storeAttributeValue+0xb0>
    a9b4:	ldr	r3, [fp, #8]
    a9b8:	ldr	r3, [r3, #12]
    a9bc:	sub	r2, r3, #1
    a9c0:	ldr	r3, [fp, #8]
    a9c4:	str	r2, [r3, #12]
    a9c8:	ldr	r3, [fp, #8]
    a9cc:	ldr	r2, [r3, #12]
    a9d0:	ldr	r3, [fp, #8]
    a9d4:	ldr	r3, [r3, #8]
    a9d8:	cmp	r2, r3
    a9dc:	bne	a9f4 <storeAttributeValue+0xdc>
    a9e0:	ldr	r0, [fp, #8]
    a9e4:	bl	ee7c <poolGrow>
    a9e8:	mov	r3, r0
    a9ec:	cmp	r3, #0
    a9f0:	beq	aa18 <storeAttributeValue+0x100>
    a9f4:	ldr	r3, [fp, #8]
    a9f8:	ldr	r3, [r3, #12]
    a9fc:	add	r1, r3, #1
    aa00:	ldr	r2, [fp, #8]
    aa04:	str	r1, [r2, #12]
    aa08:	mov	r2, #0
    aa0c:	strb	r2, [r3]
    aa10:	mov	r3, #0
    aa14:	b	aa1c <storeAttributeValue+0x104>
    aa18:	mov	r3, #1
    aa1c:	cmp	r3, #0
    aa20:	beq	aa2c <storeAttributeValue+0x114>
    aa24:	mov	r3, #1
    aa28:	b	aa30 <storeAttributeValue+0x118>
    aa2c:	mov	r3, #0
    aa30:	mov	r0, r3
    aa34:	sub	sp, fp, #4
    aa38:	ldr	fp, [sp]
    aa3c:	add	sp, sp, #4
    aa40:	pop	{pc}		; (ldr pc, [sp], #4)

0000aa44 <appendAttributeValue>:
    aa44:	str	r4, [sp, #-12]!
    aa48:	str	fp, [sp, #4]
    aa4c:	str	lr, [sp, #8]
    aa50:	add	fp, sp, #8
    aa54:	sub	sp, sp, #76	; 0x4c
    aa58:	str	r0, [fp, #-64]	; 0xffffffc0
    aa5c:	str	r1, [fp, #-68]	; 0xffffffbc
    aa60:	str	r3, [fp, #-76]	; 0xffffffb4
    aa64:	mov	r3, r2
    aa68:	strb	r3, [fp, #-69]	; 0xffffffbb
    aa6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    aa70:	ldr	r3, [r3, #364]	; 0x16c
    aa74:	str	r3, [fp, #-24]	; 0xffffffe8
    aa78:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aa7c:	ldr	r4, [r3, #16]
    aa80:	sub	r3, fp, #56	; 0x38
    aa84:	ldr	r2, [fp, #4]
    aa88:	ldr	r1, [fp, #-76]	; 0xffffffb4
    aa8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    aa90:	blx	r4
    aa94:	str	r0, [fp, #-28]	; 0xffffffe4
    aa98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa9c:	add	r3, r3, #4
    aaa0:	cmp	r3, #43	; 0x2b
    aaa4:	ldrls	pc, [pc, r3, lsl #2]
    aaa8:	b	b144 <appendAttributeValue+0x700>
    aaac:	.word	0x0000ab5c
    aab0:	.word	0x0000ad54
    aab4:	.word	0x0000b144
    aab8:	.word	0x0000ab8c
    aabc:	.word	0x0000ab64
    aac0:	.word	0x0000b144
    aac4:	.word	0x0000b144
    aac8:	.word	0x0000b144
    aacc:	.word	0x0000b144
    aad0:	.word	0x0000b144
    aad4:	.word	0x0000ad2c
    aad8:	.word	0x0000ad6c
    aadc:	.word	0x0000b144
    aae0:	.word	0x0000ae0c
    aae4:	.word	0x0000abb4
    aae8:	.word	0x0000b144
    aaec:	.word	0x0000b144
    aaf0:	.word	0x0000b144
    aaf4:	.word	0x0000b144
    aaf8:	.word	0x0000b144
    aafc:	.word	0x0000b144
    ab00:	.word	0x0000b144
    ab04:	.word	0x0000b144
    ab08:	.word	0x0000b144
    ab0c:	.word	0x0000b144
    ab10:	.word	0x0000b144
    ab14:	.word	0x0000b144
    ab18:	.word	0x0000b144
    ab1c:	.word	0x0000b144
    ab20:	.word	0x0000b144
    ab24:	.word	0x0000b144
    ab28:	.word	0x0000b144
    ab2c:	.word	0x0000b144
    ab30:	.word	0x0000b144
    ab34:	.word	0x0000b144
    ab38:	.word	0x0000b144
    ab3c:	.word	0x0000b144
    ab40:	.word	0x0000b144
    ab44:	.word	0x0000b144
    ab48:	.word	0x0000b144
    ab4c:	.word	0x0000b144
    ab50:	.word	0x0000b144
    ab54:	.word	0x0000b144
    ab58:	.word	0x0000ad6c
    ab5c:	mov	r3, #0
    ab60:	b	b1a4 <appendAttributeValue+0x760>
    ab64:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ab68:	ldr	r3, [r3, #152]	; 0x98
    ab6c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ab70:	cmp	r2, r3
    ab74:	bne	ab84 <appendAttributeValue+0x140>
    ab78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    ab7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ab80:	str	r2, [r3, #296]	; 0x128
    ab84:	mov	r3, #4
    ab88:	b	b1a4 <appendAttributeValue+0x760>
    ab8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ab90:	ldr	r3, [r3, #152]	; 0x98
    ab94:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ab98:	cmp	r2, r3
    ab9c:	bne	abac <appendAttributeValue+0x168>
    aba0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    aba4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    aba8:	str	r2, [r3, #296]	; 0x128
    abac:	mov	r3, #4
    abb0:	b	b1a4 <appendAttributeValue+0x760>
    abb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    abb8:	ldr	r3, [r3, #44]	; 0x2c
    abbc:	ldr	r1, [fp, #-76]	; 0xffffffb4
    abc0:	ldr	r0, [fp, #-68]	; 0xffffffbc
    abc4:	blx	r3
    abc8:	str	r0, [fp, #-32]	; 0xffffffe0
    abcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    abd0:	cmp	r3, #0
    abd4:	bge	ac00 <appendAttributeValue+0x1bc>
    abd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    abdc:	ldr	r3, [r3, #152]	; 0x98
    abe0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    abe4:	cmp	r2, r3
    abe8:	bne	abf8 <appendAttributeValue+0x1b4>
    abec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    abf0:	ldr	r2, [fp, #-76]	; 0xffffffb4
    abf4:	str	r2, [r3, #296]	; 0x128
    abf8:	mov	r3, #14
    abfc:	b	b1a4 <appendAttributeValue+0x760>
    ac00:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    ac04:	cmp	r3, #0
    ac08:	bne	ac48 <appendAttributeValue+0x204>
    ac0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ac10:	cmp	r3, #32
    ac14:	bne	ac48 <appendAttributeValue+0x204>
    ac18:	ldr	r3, [fp, #8]
    ac1c:	ldr	r2, [r3, #12]
    ac20:	ldr	r3, [fp, #8]
    ac24:	ldr	r3, [r3, #16]
    ac28:	cmp	r2, r3
    ac2c:	beq	b16c <appendAttributeValue+0x728>
    ac30:	ldr	r3, [fp, #8]
    ac34:	ldr	r3, [r3, #12]
    ac38:	sub	r3, r3, #1
    ac3c:	ldrb	r3, [r3]
    ac40:	cmp	r3, #32
    ac44:	beq	b16c <appendAttributeValue+0x728>
    ac48:	sub	r3, fp, #60	; 0x3c
    ac4c:	mov	r1, r3
    ac50:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ac54:	bl	0 <coda_XmlUtf8Encode>
    ac58:	str	r0, [fp, #-32]	; 0xffffffe0
    ac5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ac60:	cmp	r3, #0
    ac64:	bne	ac90 <appendAttributeValue+0x24c>
    ac68:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac6c:	ldr	r3, [r3, #152]	; 0x98
    ac70:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ac74:	cmp	r2, r3
    ac78:	bne	ac88 <appendAttributeValue+0x244>
    ac7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac80:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ac84:	str	r2, [r3, #296]	; 0x128
    ac88:	mov	r3, #14
    ac8c:	b	b1a4 <appendAttributeValue+0x760>
    ac90:	mov	r3, #0
    ac94:	str	r3, [fp, #-16]
    ac98:	b	ad18 <appendAttributeValue+0x2d4>
    ac9c:	ldr	r3, [fp, #8]
    aca0:	ldr	r2, [r3, #12]
    aca4:	ldr	r3, [fp, #8]
    aca8:	ldr	r3, [r3, #8]
    acac:	cmp	r2, r3
    acb0:	bne	acc8 <appendAttributeValue+0x284>
    acb4:	ldr	r0, [fp, #8]
    acb8:	bl	ee7c <poolGrow>
    acbc:	mov	r3, r0
    acc0:	cmp	r3, #0
    acc4:	beq	acf8 <appendAttributeValue+0x2b4>
    acc8:	ldr	r3, [fp, #8]
    accc:	ldr	r3, [r3, #12]
    acd0:	add	r1, r3, #1
    acd4:	ldr	r2, [fp, #8]
    acd8:	str	r1, [r2, #12]
    acdc:	sub	r1, fp, #60	; 0x3c
    ace0:	ldr	r2, [fp, #-16]
    ace4:	add	r2, r1, r2
    ace8:	ldrb	r2, [r2]
    acec:	strb	r2, [r3]
    acf0:	mov	r3, #0
    acf4:	b	acfc <appendAttributeValue+0x2b8>
    acf8:	mov	r3, #1
    acfc:	cmp	r3, #0
    ad00:	beq	ad0c <appendAttributeValue+0x2c8>
    ad04:	mov	r3, #1
    ad08:	b	b1a4 <appendAttributeValue+0x760>
    ad0c:	ldr	r3, [fp, #-16]
    ad10:	add	r3, r3, #1
    ad14:	str	r3, [fp, #-16]
    ad18:	ldr	r2, [fp, #-16]
    ad1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ad20:	cmp	r2, r3
    ad24:	blt	ac9c <appendAttributeValue+0x258>
    ad28:	b	b198 <appendAttributeValue+0x754>
    ad2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ad30:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ad34:	ldr	r1, [fp, #-68]	; 0xffffffbc
    ad38:	ldr	r0, [fp, #8]
    ad3c:	bl	ea68 <poolAppend>
    ad40:	mov	r3, r0
    ad44:	cmp	r3, #0
    ad48:	bne	b174 <appendAttributeValue+0x730>
    ad4c:	mov	r3, #1
    ad50:	b	b1a4 <appendAttributeValue+0x760>
    ad54:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ad58:	ldr	r3, [r3, #68]	; 0x44
    ad5c:	mov	r2, r3
    ad60:	ldr	r3, [fp, #-76]	; 0xffffffb4
    ad64:	add	r3, r3, r2
    ad68:	str	r3, [fp, #-56]	; 0xffffffc8
    ad6c:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    ad70:	cmp	r3, #0
    ad74:	bne	ada8 <appendAttributeValue+0x364>
    ad78:	ldr	r3, [fp, #8]
    ad7c:	ldr	r2, [r3, #12]
    ad80:	ldr	r3, [fp, #8]
    ad84:	ldr	r3, [r3, #16]
    ad88:	cmp	r2, r3
    ad8c:	beq	b17c <appendAttributeValue+0x738>
    ad90:	ldr	r3, [fp, #8]
    ad94:	ldr	r3, [r3, #12]
    ad98:	sub	r3, r3, #1
    ad9c:	ldrb	r3, [r3]
    ada0:	cmp	r3, #32
    ada4:	beq	b17c <appendAttributeValue+0x738>
    ada8:	ldr	r3, [fp, #8]
    adac:	ldr	r2, [r3, #12]
    adb0:	ldr	r3, [fp, #8]
    adb4:	ldr	r3, [r3, #8]
    adb8:	cmp	r2, r3
    adbc:	bne	add4 <appendAttributeValue+0x390>
    adc0:	ldr	r0, [fp, #8]
    adc4:	bl	ee7c <poolGrow>
    adc8:	mov	r3, r0
    adcc:	cmp	r3, #0
    add0:	beq	adf8 <appendAttributeValue+0x3b4>
    add4:	ldr	r3, [fp, #8]
    add8:	ldr	r3, [r3, #12]
    addc:	add	r1, r3, #1
    ade0:	ldr	r2, [fp, #8]
    ade4:	str	r1, [r2, #12]
    ade8:	mov	r2, #32
    adec:	strb	r2, [r3]
    adf0:	mov	r3, #0
    adf4:	b	adfc <appendAttributeValue+0x3b8>
    adf8:	mov	r3, #1
    adfc:	cmp	r3, #0
    ae00:	beq	b184 <appendAttributeValue+0x740>
    ae04:	mov	r3, #1
    ae08:	b	b1a4 <appendAttributeValue+0x760>
    ae0c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ae10:	ldr	r3, [r3, #48]	; 0x30
    ae14:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ae18:	ldr	r2, [r2, #68]	; 0x44
    ae1c:	mov	r1, r2
    ae20:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ae24:	add	r0, r2, r1
    ae28:	ldr	r1, [fp, #-56]	; 0xffffffc8
    ae2c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ae30:	ldr	r2, [r2, #68]	; 0x44
    ae34:	rsb	r2, r2, #0
    ae38:	add	r2, r1, r2
    ae3c:	mov	r1, r0
    ae40:	ldr	r0, [fp, #-68]	; 0xffffffbc
    ae44:	blx	r3
    ae48:	mov	r3, r0
    ae4c:	strb	r3, [fp, #-33]	; 0xffffffdf
    ae50:	ldrb	r3, [fp, #-33]	; 0xffffffdf
    ae54:	cmp	r3, #0
    ae58:	beq	aec0 <appendAttributeValue+0x47c>
    ae5c:	ldr	r3, [fp, #8]
    ae60:	ldr	r2, [r3, #12]
    ae64:	ldr	r3, [fp, #8]
    ae68:	ldr	r3, [r3, #8]
    ae6c:	cmp	r2, r3
    ae70:	bne	ae88 <appendAttributeValue+0x444>
    ae74:	ldr	r0, [fp, #8]
    ae78:	bl	ee7c <poolGrow>
    ae7c:	mov	r3, r0
    ae80:	cmp	r3, #0
    ae84:	beq	aeac <appendAttributeValue+0x468>
    ae88:	ldr	r3, [fp, #8]
    ae8c:	ldr	r3, [r3, #12]
    ae90:	add	r1, r3, #1
    ae94:	ldr	r2, [fp, #8]
    ae98:	str	r1, [r2, #12]
    ae9c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
    aea0:	strb	r2, [r3]
    aea4:	mov	r3, #0
    aea8:	b	aeb0 <appendAttributeValue+0x46c>
    aeac:	mov	r3, #1
    aeb0:	cmp	r3, #0
    aeb4:	beq	b18c <appendAttributeValue+0x748>
    aeb8:	mov	r3, #1
    aebc:	b	b1a4 <appendAttributeValue+0x760>
    aec0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    aec4:	add	r0, r3, #456	; 0x1c8
    aec8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aecc:	ldr	r3, [r3, #68]	; 0x44
    aed0:	mov	r2, r3
    aed4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    aed8:	add	r1, r3, r2
    aedc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    aee0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aee4:	ldr	r3, [r3, #68]	; 0x44
    aee8:	rsb	r3, r3, #0
    aeec:	add	r3, r2, r3
    aef0:	mov	r2, r1
    aef4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    aef8:	bl	edc8 <poolStoreString>
    aefc:	str	r0, [fp, #-40]	; 0xffffffd8
    af00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    af04:	cmp	r3, #0
    af08:	bne	af14 <appendAttributeValue+0x4d0>
    af0c:	mov	r3, #1
    af10:	b	b1a4 <appendAttributeValue+0x760>
    af14:	ldr	r1, [fp, #-24]	; 0xffffffe8
    af18:	mov	r3, #0
    af1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    af20:	ldr	r0, [fp, #-64]	; 0xffffffc0
    af24:	bl	e00c <lookup>
    af28:	str	r0, [fp, #-44]	; 0xffffffd4
    af2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    af30:	ldr	r2, [r3, #472]	; 0x1d8
    af34:	ldr	r3, [fp, #-64]	; 0xffffffc0
    af38:	str	r2, [r3, #468]	; 0x1d4
    af3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    af40:	add	r3, r3, #80	; 0x50
    af44:	ldr	r2, [fp, #8]
    af48:	cmp	r2, r3
    af4c:	bne	afa8 <appendAttributeValue+0x564>
    af50:	ldr	r3, [fp, #-64]	; 0xffffffc0
    af54:	ldr	r3, [r3, #280]	; 0x118
    af58:	cmp	r3, #0
    af5c:	beq	af9c <appendAttributeValue+0x558>
    af60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    af64:	ldrb	r3, [r3, #130]	; 0x82
    af68:	cmp	r3, #0
    af6c:	beq	af84 <appendAttributeValue+0x540>
    af70:	ldr	r3, [fp, #-64]	; 0xffffffc0
    af74:	ldr	r3, [r3, #308]	; 0x134
    af78:	cmp	r3, #0
    af7c:	beq	af94 <appendAttributeValue+0x550>
    af80:	b	af9c <appendAttributeValue+0x558>
    af84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    af88:	ldrb	r3, [r3, #129]	; 0x81
    af8c:	cmp	r3, #0
    af90:	bne	af9c <appendAttributeValue+0x558>
    af94:	mov	r3, #1
    af98:	b	afa0 <appendAttributeValue+0x55c>
    af9c:	mov	r3, #0
    afa0:	strb	r3, [fp, #-17]	; 0xffffffef
    afa4:	b	afd8 <appendAttributeValue+0x594>
    afa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    afac:	ldrb	r3, [r3, #129]	; 0x81
    afb0:	cmp	r3, #0
    afb4:	beq	afc8 <appendAttributeValue+0x584>
    afb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    afbc:	ldrb	r3, [r3, #130]	; 0x82
    afc0:	cmp	r3, #0
    afc4:	beq	afd0 <appendAttributeValue+0x58c>
    afc8:	mov	r3, #1
    afcc:	b	afd4 <appendAttributeValue+0x590>
    afd0:	mov	r3, #0
    afd4:	strb	r3, [fp, #-17]	; 0xffffffef
    afd8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    afdc:	cmp	r3, #0
    afe0:	beq	b010 <appendAttributeValue+0x5cc>
    afe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    afe8:	cmp	r3, #0
    afec:	bne	aff8 <appendAttributeValue+0x5b4>
    aff0:	mov	r3, #11
    aff4:	b	b1a4 <appendAttributeValue+0x760>
    aff8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    affc:	ldrb	r3, [r3, #34]	; 0x22
    b000:	cmp	r3, #0
    b004:	bne	b01c <appendAttributeValue+0x5d8>
    b008:	mov	r3, #24
    b00c:	b	b1a4 <appendAttributeValue+0x760>
    b010:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b014:	cmp	r3, #0
    b018:	beq	b194 <appendAttributeValue+0x750>
    b01c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b020:	ldrb	r3, [r3, #32]
    b024:	cmp	r3, #0
    b028:	beq	b054 <appendAttributeValue+0x610>
    b02c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b030:	ldr	r3, [r3, #152]	; 0x98
    b034:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b038:	cmp	r2, r3
    b03c:	bne	b04c <appendAttributeValue+0x608>
    b040:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b044:	ldr	r2, [fp, #-76]	; 0xffffffb4
    b048:	str	r2, [r3, #296]	; 0x128
    b04c:	mov	r3, #12
    b050:	b	b1a4 <appendAttributeValue+0x760>
    b054:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b058:	ldr	r3, [r3, #28]
    b05c:	cmp	r3, #0
    b060:	beq	b08c <appendAttributeValue+0x648>
    b064:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b068:	ldr	r3, [r3, #152]	; 0x98
    b06c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b070:	cmp	r2, r3
    b074:	bne	b084 <appendAttributeValue+0x640>
    b078:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b07c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    b080:	str	r2, [r3, #296]	; 0x128
    b084:	mov	r3, #15
    b088:	b	b1a4 <appendAttributeValue+0x760>
    b08c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b090:	ldr	r3, [r3, #4]
    b094:	cmp	r3, #0
    b098:	bne	b0c4 <appendAttributeValue+0x680>
    b09c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0a0:	ldr	r3, [r3, #152]	; 0x98
    b0a4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b0a8:	cmp	r2, r3
    b0ac:	bne	b0bc <appendAttributeValue+0x678>
    b0b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0b4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    b0b8:	str	r2, [r3, #296]	; 0x128
    b0bc:	mov	r3, #16
    b0c0:	b	b1a4 <appendAttributeValue+0x760>
    b0c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b0c8:	ldr	r3, [r3, #4]
    b0cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b0d0:	ldr	r2, [r2, #8]
    b0d4:	add	r3, r3, r2
    b0d8:	str	r3, [fp, #-48]	; 0xffffffd0
    b0dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b0e0:	mov	r2, #1
    b0e4:	strb	r2, [r3, #32]
    b0e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0ec:	ldr	r1, [r3, #236]	; 0xec
    b0f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b0f4:	ldr	r0, [r3, #4]
    b0f8:	ldrb	r2, [fp, #-69]	; 0xffffffbb
    b0fc:	ldr	r3, [fp, #8]
    b100:	str	r3, [sp, #4]
    b104:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b108:	str	r3, [sp]
    b10c:	mov	r3, r0
    b110:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b114:	bl	aa44 <appendAttributeValue>
    b118:	str	r0, [fp, #-52]	; 0xffffffcc
    b11c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b120:	mov	r2, #0
    b124:	strb	r2, [r3, #32]
    b128:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b12c:	cmp	r3, #0
    b130:	beq	b13c <appendAttributeValue+0x6f8>
    b134:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b138:	b	b1a4 <appendAttributeValue+0x760>
    b13c:	nop	{0}
    b140:	b	b198 <appendAttributeValue+0x754>
    b144:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b148:	ldr	r3, [r3, #152]	; 0x98
    b14c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b150:	cmp	r2, r3
    b154:	bne	b164 <appendAttributeValue+0x720>
    b158:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b15c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    b160:	str	r2, [r3, #296]	; 0x128
    b164:	mov	r3, #23
    b168:	b	b1a4 <appendAttributeValue+0x760>
    b16c:	nop	{0}
    b170:	b	b198 <appendAttributeValue+0x754>
    b174:	nop	{0}
    b178:	b	b198 <appendAttributeValue+0x754>
    b17c:	nop	{0}
    b180:	b	b198 <appendAttributeValue+0x754>
    b184:	nop	{0}
    b188:	b	b198 <appendAttributeValue+0x754>
    b18c:	nop	{0}
    b190:	b	b198 <appendAttributeValue+0x754>
    b194:	nop	{0}
    b198:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b19c:	str	r3, [fp, #-76]	; 0xffffffb4
    b1a0:	b	aa78 <appendAttributeValue+0x34>
    b1a4:	mov	r0, r3
    b1a8:	sub	sp, fp, #8
    b1ac:	ldr	r4, [sp]
    b1b0:	ldr	fp, [sp, #4]
    b1b4:	add	sp, sp, #8
    b1b8:	pop	{pc}		; (ldr pc, [sp], #4)

0000b1bc <storeEntityValue>:
    b1bc:	str	r4, [sp, #-12]!
    b1c0:	str	fp, [sp, #4]
    b1c4:	str	lr, [sp, #8]
    b1c8:	add	fp, sp, #8
    b1cc:	sub	sp, sp, #76	; 0x4c
    b1d0:	str	r0, [fp, #-64]	; 0xffffffc0
    b1d4:	str	r1, [fp, #-68]	; 0xffffffbc
    b1d8:	str	r2, [fp, #-72]	; 0xffffffb8
    b1dc:	str	r3, [fp, #-76]	; 0xffffffb4
    b1e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b1e4:	ldr	r3, [r3, #364]	; 0x16c
    b1e8:	str	r3, [fp, #-24]	; 0xffffffe8
    b1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b1f0:	add	r3, r3, #104	; 0x68
    b1f4:	str	r3, [fp, #-28]	; 0xffffffe4
    b1f8:	mov	r3, #0
    b1fc:	str	r3, [fp, #-16]
    b200:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b204:	ldr	r3, [r3, #284]	; 0x11c
    b208:	str	r3, [fp, #-32]	; 0xffffffe0
    b20c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b210:	mov	r2, #1
    b214:	str	r2, [r3, #284]	; 0x11c
    b218:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b21c:	ldr	r3, [r3]
    b220:	cmp	r3, #0
    b224:	bne	b244 <storeEntityValue+0x88>
    b228:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b22c:	bl	ee7c <poolGrow>
    b230:	mov	r3, r0
    b234:	cmp	r3, #0
    b238:	bne	b244 <storeEntityValue+0x88>
    b23c:	mov	r3, #1
    b240:	b	b7cc <storeEntityValue+0x610>
    b244:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b248:	ldr	r4, [r3, #20]
    b24c:	sub	r3, fp, #52	; 0x34
    b250:	ldr	r2, [fp, #-76]	; 0xffffffb4
    b254:	ldr	r1, [fp, #-72]	; 0xffffffb8
    b258:	ldr	r0, [fp, #-68]	; 0xffffffbc
    b25c:	blx	r4
    b260:	str	r0, [fp, #-36]	; 0xffffffdc
    b264:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b268:	add	r3, r3, #4
    b26c:	cmp	r3, #32
    b270:	ldrls	pc, [pc, r3, lsl #2]
    b274:	b	b778 <storeEntityValue+0x5bc>
    b278:	.word	0x0000b54c
    b27c:	.word	0x0000b584
    b280:	.word	0x0000b778
    b284:	.word	0x0000b720
    b288:	.word	0x0000b74c
    b28c:	.word	0x0000b778
    b290:	.word	0x0000b778
    b294:	.word	0x0000b778
    b298:	.word	0x0000b778
    b29c:	.word	0x0000b778
    b2a0:	.word	0x0000b558
    b2a4:	.word	0x0000b59c
    b2a8:	.word	0x0000b778
    b2ac:	.word	0x0000b558
    b2b0:	.word	0x0000b5f4
    b2b4:	.word	0x0000b778
    b2b8:	.word	0x0000b778
    b2bc:	.word	0x0000b778
    b2c0:	.word	0x0000b778
    b2c4:	.word	0x0000b778
    b2c8:	.word	0x0000b778
    b2cc:	.word	0x0000b778
    b2d0:	.word	0x0000b778
    b2d4:	.word	0x0000b778
    b2d8:	.word	0x0000b778
    b2dc:	.word	0x0000b778
    b2e0:	.word	0x0000b778
    b2e4:	.word	0x0000b778
    b2e8:	.word	0x0000b778
    b2ec:	.word	0x0000b778
    b2f0:	.word	0x0000b778
    b2f4:	.word	0x0000b778
    b2f8:	.word	0x0000b2fc
    b2fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b300:	ldrb	r3, [r3, #504]	; 0x1f8
    b304:	cmp	r3, #0
    b308:	bne	b320 <storeEntityValue+0x164>
    b30c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b310:	ldr	r3, [r3, #152]	; 0x98
    b314:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b318:	cmp	r2, r3
    b31c:	beq	b534 <storeEntityValue+0x378>
    b320:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b324:	add	r0, r3, #432	; 0x1b0
    b328:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b32c:	ldr	r3, [r3, #68]	; 0x44
    b330:	mov	r2, r3
    b334:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b338:	add	r1, r3, r2
    b33c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b340:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b344:	ldr	r3, [r3, #68]	; 0x44
    b348:	rsb	r3, r3, #0
    b34c:	add	r3, r2, r3
    b350:	mov	r2, r1
    b354:	ldr	r1, [fp, #-68]	; 0xffffffbc
    b358:	bl	edc8 <poolStoreString>
    b35c:	str	r0, [fp, #-40]	; 0xffffffd8
    b360:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b364:	cmp	r3, #0
    b368:	bne	b378 <storeEntityValue+0x1bc>
    b36c:	mov	r3, #1
    b370:	str	r3, [fp, #-16]
    b374:	b	b7bc <storeEntityValue+0x600>
    b378:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b37c:	add	r1, r3, #132	; 0x84
    b380:	mov	r3, #0
    b384:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b388:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b38c:	bl	e00c <lookup>
    b390:	str	r0, [fp, #-44]	; 0xffffffd4
    b394:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b398:	ldr	r2, [r3, #448]	; 0x1c0
    b39c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b3a0:	str	r2, [r3, #444]	; 0x1bc
    b3a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b3a8:	cmp	r3, #0
    b3ac:	bne	b3c4 <storeEntityValue+0x208>
    b3b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b3b4:	ldrb	r2, [r3, #130]	; 0x82
    b3b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b3bc:	strb	r2, [r3, #128]	; 0x80
    b3c0:	b	b7bc <storeEntityValue+0x600>
    b3c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b3c8:	ldrb	r3, [r3, #32]
    b3cc:	cmp	r3, #0
    b3d0:	beq	b400 <storeEntityValue+0x244>
    b3d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b3d8:	ldr	r3, [r3, #152]	; 0x98
    b3dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b3e0:	cmp	r2, r3
    b3e4:	bne	b3f4 <storeEntityValue+0x238>
    b3e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b3ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b3f0:	str	r2, [r3, #296]	; 0x128
    b3f4:	mov	r3, #12
    b3f8:	str	r3, [fp, #-16]
    b3fc:	b	b7bc <storeEntityValue+0x600>
    b400:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b404:	ldr	r3, [r3, #16]
    b408:	cmp	r3, #0
    b40c:	beq	b4d8 <storeEntityValue+0x31c>
    b410:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b414:	ldr	r3, [r3, #120]	; 0x78
    b418:	cmp	r3, #0
    b41c:	beq	b4c4 <storeEntityValue+0x308>
    b420:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b424:	mov	r2, #0
    b428:	strb	r2, [r3, #131]	; 0x83
    b42c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b430:	mov	r2, #1
    b434:	strb	r2, [r3, #32]
    b438:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b43c:	ldr	r4, [r3, #120]	; 0x78
    b440:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b444:	ldr	r0, [r3, #124]	; 0x7c
    b448:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b44c:	ldr	r2, [r3, #20]
    b450:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b454:	ldr	r1, [r3, #16]
    b458:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b45c:	ldr	r3, [r3, #24]
    b460:	str	r3, [sp]
    b464:	mov	r3, r1
    b468:	mov	r1, #0
    b46c:	blx	r4
    b470:	mov	r3, r0
    b474:	cmp	r3, #0
    b478:	bne	b494 <storeEntityValue+0x2d8>
    b47c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b480:	mov	r2, #0
    b484:	strb	r2, [r3, #32]
    b488:	mov	r3, #21
    b48c:	str	r3, [fp, #-16]
    b490:	b	b7bc <storeEntityValue+0x600>
    b494:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b498:	mov	r2, #0
    b49c:	strb	r2, [r3, #32]
    b4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b4a4:	ldrb	r3, [r3, #131]	; 0x83
    b4a8:	cmp	r3, #0
    b4ac:	bne	b7a4 <storeEntityValue+0x5e8>
    b4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b4b4:	ldrb	r2, [r3, #130]	; 0x82
    b4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b4bc:	strb	r2, [r3, #128]	; 0x80
    b4c0:	b	b7a4 <storeEntityValue+0x5e8>
    b4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b4c8:	ldrb	r2, [r3, #130]	; 0x82
    b4cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b4d0:	strb	r2, [r3, #128]	; 0x80
    b4d4:	b	b7a4 <storeEntityValue+0x5e8>
    b4d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b4dc:	mov	r2, #1
    b4e0:	strb	r2, [r3, #32]
    b4e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b4e8:	ldr	r1, [r3, #236]	; 0xec
    b4ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b4f0:	ldr	r0, [r3, #4]
    b4f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b4f8:	ldr	r3, [r3, #4]
    b4fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b500:	ldr	r2, [r2, #8]
    b504:	add	r3, r3, r2
    b508:	mov	r2, r0
    b50c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b510:	bl	b1bc <storeEntityValue>
    b514:	str	r0, [fp, #-16]
    b518:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b51c:	mov	r2, #0
    b520:	strb	r2, [r3, #32]
    b524:	ldr	r3, [fp, #-16]
    b528:	cmp	r3, #0
    b52c:	beq	b7a4 <storeEntityValue+0x5e8>
    b530:	b	b7bc <storeEntityValue+0x600>
    b534:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b538:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b53c:	str	r2, [r3, #296]	; 0x128
    b540:	mov	r3, #10
    b544:	str	r3, [fp, #-16]
    b548:	b	b7bc <storeEntityValue+0x600>
    b54c:	mov	r3, #0
    b550:	str	r3, [fp, #-16]
    b554:	b	b7bc <storeEntityValue+0x600>
    b558:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b55c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b560:	ldr	r1, [fp, #-68]	; 0xffffffbc
    b564:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b568:	bl	ea68 <poolAppend>
    b56c:	mov	r3, r0
    b570:	cmp	r3, #0
    b574:	bne	b7ac <storeEntityValue+0x5f0>
    b578:	mov	r3, #1
    b57c:	str	r3, [fp, #-16]
    b580:	b	b7bc <storeEntityValue+0x600>
    b584:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b588:	ldr	r3, [r3, #68]	; 0x44
    b58c:	mov	r2, r3
    b590:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b594:	add	r3, r3, r2
    b598:	str	r3, [fp, #-52]	; 0xffffffcc
    b59c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b5a0:	ldr	r2, [r3, #8]
    b5a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b5a8:	ldr	r3, [r3, #12]
    b5ac:	cmp	r2, r3
    b5b0:	bne	b5d4 <storeEntityValue+0x418>
    b5b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b5b8:	bl	ee7c <poolGrow>
    b5bc:	mov	r3, r0
    b5c0:	cmp	r3, #0
    b5c4:	bne	b5d4 <storeEntityValue+0x418>
    b5c8:	mov	r3, #1
    b5cc:	str	r3, [fp, #-16]
    b5d0:	b	b7bc <storeEntityValue+0x600>
    b5d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b5d8:	ldr	r3, [r3, #12]
    b5dc:	add	r1, r3, #1
    b5e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b5e4:	str	r1, [r2, #12]
    b5e8:	mov	r2, #10
    b5ec:	strb	r2, [r3]
    b5f0:	b	b7b0 <storeEntityValue+0x5f4>
    b5f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b5f8:	ldr	r3, [r3, #44]	; 0x2c
    b5fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
    b600:	ldr	r0, [fp, #-68]	; 0xffffffbc
    b604:	blx	r3
    b608:	str	r0, [fp, #-48]	; 0xffffffd0
    b60c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b610:	cmp	r3, #0
    b614:	bge	b644 <storeEntityValue+0x488>
    b618:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b61c:	ldr	r3, [r3, #152]	; 0x98
    b620:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b624:	cmp	r2, r3
    b628:	bne	b638 <storeEntityValue+0x47c>
    b62c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b630:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b634:	str	r2, [r3, #296]	; 0x128
    b638:	mov	r3, #14
    b63c:	str	r3, [fp, #-16]
    b640:	b	b7bc <storeEntityValue+0x600>
    b644:	sub	r3, fp, #56	; 0x38
    b648:	mov	r1, r3
    b64c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b650:	bl	0 <coda_XmlUtf8Encode>
    b654:	str	r0, [fp, #-48]	; 0xffffffd0
    b658:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b65c:	cmp	r3, #0
    b660:	bne	b690 <storeEntityValue+0x4d4>
    b664:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b668:	ldr	r3, [r3, #152]	; 0x98
    b66c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b670:	cmp	r2, r3
    b674:	bne	b684 <storeEntityValue+0x4c8>
    b678:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b67c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b680:	str	r2, [r3, #296]	; 0x128
    b684:	mov	r3, #14
    b688:	str	r3, [fp, #-16]
    b68c:	b	b7bc <storeEntityValue+0x600>
    b690:	mov	r3, #0
    b694:	str	r3, [fp, #-20]	; 0xffffffec
    b698:	b	b70c <storeEntityValue+0x550>
    b69c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6a0:	ldr	r2, [r3, #8]
    b6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6a8:	ldr	r3, [r3, #12]
    b6ac:	cmp	r2, r3
    b6b0:	bne	b6d8 <storeEntityValue+0x51c>
    b6b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b6b8:	bl	ee7c <poolGrow>
    b6bc:	mov	r3, r0
    b6c0:	cmp	r3, #0
    b6c4:	bne	b6d8 <storeEntityValue+0x51c>
    b6c8:	mov	r3, #1
    b6cc:	str	r3, [fp, #-16]
    b6d0:	nop	{0}
    b6d4:	b	b7bc <storeEntityValue+0x600>
    b6d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b6dc:	ldr	r3, [r3, #12]
    b6e0:	add	r1, r3, #1
    b6e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b6e8:	str	r1, [r2, #12]
    b6ec:	sub	r1, fp, #56	; 0x38
    b6f0:	ldr	r2, [fp, #-20]	; 0xffffffec
    b6f4:	add	r2, r1, r2
    b6f8:	ldrb	r2, [r2]
    b6fc:	strb	r2, [r3]
    b700:	ldr	r3, [fp, #-20]	; 0xffffffec
    b704:	add	r3, r3, #1
    b708:	str	r3, [fp, #-20]	; 0xffffffec
    b70c:	ldr	r2, [fp, #-20]	; 0xffffffec
    b710:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b714:	cmp	r2, r3
    b718:	blt	b69c <storeEntityValue+0x4e0>
    b71c:	b	b7b0 <storeEntityValue+0x5f4>
    b720:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b724:	ldr	r3, [r3, #152]	; 0x98
    b728:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b72c:	cmp	r2, r3
    b730:	bne	b740 <storeEntityValue+0x584>
    b734:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b738:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b73c:	str	r2, [r3, #296]	; 0x128
    b740:	mov	r3, #4
    b744:	str	r3, [fp, #-16]
    b748:	b	b7bc <storeEntityValue+0x600>
    b74c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b750:	ldr	r3, [r3, #152]	; 0x98
    b754:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b758:	cmp	r2, r3
    b75c:	bne	b76c <storeEntityValue+0x5b0>
    b760:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b764:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b768:	str	r2, [r3, #296]	; 0x128
    b76c:	mov	r3, #4
    b770:	str	r3, [fp, #-16]
    b774:	b	b7bc <storeEntityValue+0x600>
    b778:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b77c:	ldr	r3, [r3, #152]	; 0x98
    b780:	ldr	r2, [fp, #-68]	; 0xffffffbc
    b784:	cmp	r2, r3
    b788:	bne	b798 <storeEntityValue+0x5dc>
    b78c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b790:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b794:	str	r2, [r3, #296]	; 0x128
    b798:	mov	r3, #23
    b79c:	str	r3, [fp, #-16]
    b7a0:	b	b7bc <storeEntityValue+0x600>
    b7a4:	nop	{0}
    b7a8:	b	b7b0 <storeEntityValue+0x5f4>
    b7ac:	nop	{0}
    b7b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b7b4:	str	r3, [fp, #-72]	; 0xffffffb8
    b7b8:	b	b244 <storeEntityValue+0x88>
    b7bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b7c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b7c4:	str	r2, [r3, #284]	; 0x11c
    b7c8:	ldr	r3, [fp, #-16]
    b7cc:	mov	r0, r3
    b7d0:	sub	sp, fp, #8
    b7d4:	ldr	r4, [sp]
    b7d8:	ldr	fp, [sp, #4]
    b7dc:	add	sp, sp, #8
    b7e0:	pop	{pc}		; (ldr pc, [sp], #4)

0000b7e4 <normalizeLines>:
    b7e4:	push	{fp}		; (str fp, [sp, #-4]!)
    b7e8:	add	fp, sp, #0
    b7ec:	sub	sp, sp, #20
    b7f0:	str	r0, [fp, #-16]
    b7f4:	ldr	r3, [fp, #-16]
    b7f8:	ldrb	r3, [r3]
    b7fc:	cmp	r3, #0
    b800:	beq	b8c0 <normalizeLines+0xdc>
    b804:	ldr	r3, [fp, #-16]
    b808:	ldrb	r3, [r3]
    b80c:	cmp	r3, #13
    b810:	beq	b824 <normalizeLines+0x40>
    b814:	ldr	r3, [fp, #-16]
    b818:	add	r3, r3, #1
    b81c:	str	r3, [fp, #-16]
    b820:	b	b7f4 <normalizeLines+0x10>
    b824:	nop	{0}
    b828:	ldr	r3, [fp, #-16]
    b82c:	str	r3, [fp, #-8]
    b830:	ldr	r3, [fp, #-16]
    b834:	ldrb	r3, [r3]
    b838:	cmp	r3, #13
    b83c:	bne	b880 <normalizeLines+0x9c>
    b840:	ldr	r3, [fp, #-8]
    b844:	add	r2, r3, #1
    b848:	str	r2, [fp, #-8]
    b84c:	mov	r2, #10
    b850:	strb	r2, [r3]
    b854:	ldr	r3, [fp, #-16]
    b858:	add	r3, r3, #1
    b85c:	str	r3, [fp, #-16]
    b860:	ldr	r3, [fp, #-16]
    b864:	ldrb	r3, [r3]
    b868:	cmp	r3, #10
    b86c:	bne	b8a0 <normalizeLines+0xbc>
    b870:	ldr	r3, [fp, #-16]
    b874:	add	r3, r3, #1
    b878:	str	r3, [fp, #-16]
    b87c:	b	b8a0 <normalizeLines+0xbc>
    b880:	ldr	r2, [fp, #-16]
    b884:	add	r3, r2, #1
    b888:	str	r3, [fp, #-16]
    b88c:	ldr	r3, [fp, #-8]
    b890:	add	r1, r3, #1
    b894:	str	r1, [fp, #-8]
    b898:	ldrb	r2, [r2]
    b89c:	strb	r2, [r3]
    b8a0:	ldr	r3, [fp, #-16]
    b8a4:	ldrb	r3, [r3]
    b8a8:	cmp	r3, #0
    b8ac:	bne	b830 <normalizeLines+0x4c>
    b8b0:	ldr	r3, [fp, #-8]
    b8b4:	mov	r2, #0
    b8b8:	strb	r2, [r3]
    b8bc:	b	b8c4 <normalizeLines+0xe0>
    b8c0:	nop	{0}
    b8c4:	add	sp, fp, #0
    b8c8:	pop	{fp}		; (ldr fp, [sp], #4)
    b8cc:	bx	lr

0000b8d0 <reportProcessingInstruction>:
    b8d0:	str	r4, [sp, #-12]!
    b8d4:	str	fp, [sp, #4]
    b8d8:	str	lr, [sp, #8]
    b8dc:	add	fp, sp, #8
    b8e0:	sub	sp, sp, #36	; 0x24
    b8e4:	str	r0, [fp, #-32]	; 0xffffffe0
    b8e8:	str	r1, [fp, #-36]	; 0xffffffdc
    b8ec:	str	r2, [fp, #-40]	; 0xffffffd8
    b8f0:	str	r3, [fp, #-44]	; 0xffffffd4
    b8f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b8f8:	ldr	r3, [r3, #72]	; 0x48
    b8fc:	cmp	r3, #0
    b900:	bne	b930 <reportProcessingInstruction+0x60>
    b904:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b908:	ldr	r3, [r3, #88]	; 0x58
    b90c:	cmp	r3, #0
    b910:	beq	b928 <reportProcessingInstruction+0x58>
    b914:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b918:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b91c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b920:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b924:	bl	bb70 <reportDefault>
    b928:	mov	r3, #1
    b92c:	b	ba4c <reportProcessingInstruction+0x17c>
    b930:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b934:	ldr	r3, [r3, #68]	; 0x44
    b938:	lsl	r3, r3, #1
    b93c:	mov	r2, r3
    b940:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b944:	add	r3, r3, r2
    b948:	str	r3, [fp, #-40]	; 0xffffffd8
    b94c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b950:	ldr	r3, [r3, #32]
    b954:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b958:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b95c:	blx	r3
    b960:	mov	r3, r0
    b964:	mov	r2, r3
    b968:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b96c:	add	r3, r3, r2
    b970:	str	r3, [fp, #-16]
    b974:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b978:	add	r0, r3, #432	; 0x1b0
    b97c:	ldr	r3, [fp, #-16]
    b980:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b984:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b988:	bl	edc8 <poolStoreString>
    b98c:	str	r0, [fp, #-20]	; 0xffffffec
    b990:	ldr	r3, [fp, #-20]	; 0xffffffec
    b994:	cmp	r3, #0
    b998:	bne	b9a4 <reportProcessingInstruction+0xd4>
    b99c:	mov	r3, #0
    b9a0:	b	ba4c <reportProcessingInstruction+0x17c>
    b9a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9a8:	ldr	r2, [r3, #444]	; 0x1bc
    b9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9b0:	str	r2, [r3, #448]	; 0x1c0
    b9b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9b8:	add	r4, r3, #432	; 0x1b0
    b9bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b9c0:	ldr	r3, [r3, #36]	; 0x24
    b9c4:	ldr	r1, [fp, #-16]
    b9c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b9cc:	blx	r3
    b9d0:	mov	r1, r0
    b9d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b9d8:	ldr	r3, [r3, #68]	; 0x44
    b9dc:	lsl	r3, r3, #1
    b9e0:	rsb	r3, r3, #0
    b9e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b9e8:	add	r3, r2, r3
    b9ec:	mov	r2, r1
    b9f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b9f4:	mov	r0, r4
    b9f8:	bl	edc8 <poolStoreString>
    b9fc:	str	r0, [fp, #-24]	; 0xffffffe8
    ba00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ba04:	cmp	r3, #0
    ba08:	bne	ba14 <reportProcessingInstruction+0x144>
    ba0c:	mov	r3, #0
    ba10:	b	ba4c <reportProcessingInstruction+0x17c>
    ba14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ba18:	bl	b7e4 <normalizeLines>
    ba1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba20:	ldr	r3, [r3, #72]	; 0x48
    ba24:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ba28:	ldr	r0, [r2, #4]
    ba2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ba30:	ldr	r1, [fp, #-20]	; 0xffffffec
    ba34:	blx	r3
    ba38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba3c:	add	r3, r3, #432	; 0x1b0
    ba40:	mov	r0, r3
    ba44:	bl	e8f8 <poolClear>
    ba48:	mov	r3, #1
    ba4c:	mov	r0, r3
    ba50:	sub	sp, fp, #8
    ba54:	ldr	r4, [sp]
    ba58:	ldr	fp, [sp, #4]
    ba5c:	add	sp, sp, #8
    ba60:	pop	{pc}		; (ldr pc, [sp], #4)

0000ba64 <reportComment>:
    ba64:	str	fp, [sp, #-8]!
    ba68:	str	lr, [sp, #4]
    ba6c:	add	fp, sp, #4
    ba70:	sub	sp, sp, #24
    ba74:	str	r0, [fp, #-16]
    ba78:	str	r1, [fp, #-20]	; 0xffffffec
    ba7c:	str	r2, [fp, #-24]	; 0xffffffe8
    ba80:	str	r3, [fp, #-28]	; 0xffffffe4
    ba84:	ldr	r3, [fp, #-16]
    ba88:	ldr	r3, [r3, #76]	; 0x4c
    ba8c:	cmp	r3, #0
    ba90:	bne	bac0 <reportComment+0x5c>
    ba94:	ldr	r3, [fp, #-16]
    ba98:	ldr	r3, [r3, #88]	; 0x58
    ba9c:	cmp	r3, #0
    baa0:	beq	bab8 <reportComment+0x54>
    baa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    baa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    baac:	ldr	r1, [fp, #-20]	; 0xffffffec
    bab0:	ldr	r0, [fp, #-16]
    bab4:	bl	bb70 <reportDefault>
    bab8:	mov	r3, #1
    babc:	b	bb5c <reportComment+0xf8>
    bac0:	ldr	r3, [fp, #-16]
    bac4:	add	r0, r3, #432	; 0x1b0
    bac8:	ldr	r3, [fp, #-20]	; 0xffffffec
    bacc:	ldr	r3, [r3, #68]	; 0x44
    bad0:	lsl	r3, r3, #2
    bad4:	mov	r2, r3
    bad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    badc:	add	r1, r3, r2
    bae0:	ldr	r3, [fp, #-20]	; 0xffffffec
    bae4:	ldr	r2, [r3, #68]	; 0x44
    bae8:	mov	r3, r2
    baec:	lsl	r3, r3, #1
    baf0:	add	r3, r3, r2
    baf4:	rsb	r3, r3, #0
    baf8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    bafc:	add	r3, r2, r3
    bb00:	mov	r2, r1
    bb04:	ldr	r1, [fp, #-20]	; 0xffffffec
    bb08:	bl	edc8 <poolStoreString>
    bb0c:	str	r0, [fp, #-8]
    bb10:	ldr	r3, [fp, #-8]
    bb14:	cmp	r3, #0
    bb18:	bne	bb24 <reportComment+0xc0>
    bb1c:	mov	r3, #0
    bb20:	b	bb5c <reportComment+0xf8>
    bb24:	ldr	r0, [fp, #-8]
    bb28:	bl	b7e4 <normalizeLines>
    bb2c:	ldr	r3, [fp, #-16]
    bb30:	ldr	r3, [r3, #76]	; 0x4c
    bb34:	ldr	r2, [fp, #-16]
    bb38:	ldr	r2, [r2, #4]
    bb3c:	ldr	r1, [fp, #-8]
    bb40:	mov	r0, r2
    bb44:	blx	r3
    bb48:	ldr	r3, [fp, #-16]
    bb4c:	add	r3, r3, #432	; 0x1b0
    bb50:	mov	r0, r3
    bb54:	bl	e8f8 <poolClear>
    bb58:	mov	r3, #1
    bb5c:	mov	r0, r3
    bb60:	sub	sp, fp, #4
    bb64:	ldr	fp, [sp]
    bb68:	add	sp, sp, #4
    bb6c:	pop	{pc}		; (ldr pc, [sp], #4)

0000bb70 <reportDefault>:
    bb70:	str	r4, [sp, #-12]!
    bb74:	str	fp, [sp, #4]
    bb78:	str	lr, [sp, #8]
    bb7c:	add	fp, sp, #8
    bb80:	sub	sp, sp, #44	; 0x2c
    bb84:	str	r0, [fp, #-32]	; 0xffffffe0
    bb88:	str	r1, [fp, #-36]	; 0xffffffdc
    bb8c:	str	r2, [fp, #-40]	; 0xffffffd8
    bb90:	str	r3, [fp, #-44]	; 0xffffffd4
    bb94:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bb98:	ldrb	r3, [r3, #72]	; 0x48
    bb9c:	cmp	r3, #0
    bba0:	bne	bc84 <reportDefault+0x114>
    bba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bba8:	ldr	r3, [r3, #152]	; 0x98
    bbac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    bbb0:	cmp	r2, r3
    bbb4:	bne	bbd4 <reportDefault+0x64>
    bbb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbbc:	add	r3, r3, #296	; 0x128
    bbc0:	str	r3, [fp, #-16]
    bbc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbc8:	add	r3, r3, #300	; 0x12c
    bbcc:	str	r3, [fp, #-20]	; 0xffffffec
    bbd0:	b	bbf0 <reportDefault+0x80>
    bbd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbd8:	ldr	r3, [r3, #308]	; 0x134
    bbdc:	str	r3, [fp, #-16]
    bbe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbe4:	ldr	r3, [r3, #308]	; 0x134
    bbe8:	add	r3, r3, #4
    bbec:	str	r3, [fp, #-20]	; 0xffffffec
    bbf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bbf4:	ldr	r3, [r3, #52]	; 0x34
    bbf8:	str	r3, [fp, #-24]	; 0xffffffe8
    bbfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bc00:	ldr	r4, [r3, #60]	; 0x3c
    bc04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bc08:	ldr	r3, [r3, #56]	; 0x38
    bc0c:	sub	r2, fp, #24
    bc10:	sub	r1, fp, #40	; 0x28
    bc14:	str	r3, [sp]
    bc18:	mov	r3, r2
    bc1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    bc20:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bc24:	blx	r4
    bc28:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bc2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    bc30:	str	r2, [r3]
    bc34:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bc38:	ldr	r3, [r3, #88]	; 0x58
    bc3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc40:	ldr	r0, [r2, #4]
    bc44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc48:	ldr	ip, [r2, #52]	; 0x34
    bc4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bc50:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc54:	ldr	r2, [r2, #52]	; 0x34
    bc58:	sub	r2, r1, r2
    bc5c:	mov	r1, ip
    bc60:	blx	r3
    bc64:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bc68:	ldr	r3, [fp, #-16]
    bc6c:	str	r2, [r3]
    bc70:	ldr	r3, [fp, #-40]	; 0xffffffd8
    bc74:	ldr	r2, [fp, #-44]	; 0xffffffd4
    bc78:	cmp	r2, r3
    bc7c:	bne	bbf0 <reportDefault+0x80>
    bc80:	b	bcac <reportDefault+0x13c>
    bc84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bc88:	ldr	r3, [r3, #88]	; 0x58
    bc8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bc90:	ldr	r0, [r2, #4]
    bc94:	ldr	ip, [fp, #-40]	; 0xffffffd8
    bc98:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bc9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    bca0:	sub	r2, r1, r2
    bca4:	mov	r1, ip
    bca8:	blx	r3
    bcac:	nop	{0}
    bcb0:	sub	sp, fp, #8
    bcb4:	ldr	r4, [sp]
    bcb8:	ldr	fp, [sp, #4]
    bcbc:	add	sp, sp, #8
    bcc0:	pop	{pc}		; (ldr pc, [sp], #4)

0000bcc4 <defineAttribute>:
    bcc4:	str	r4, [sp, #-12]!
    bcc8:	str	fp, [sp, #4]
    bccc:	str	lr, [sp, #8]
    bcd0:	add	fp, sp, #8
    bcd4:	sub	sp, sp, #36	; 0x24
    bcd8:	str	r0, [fp, #-32]	; 0xffffffe0
    bcdc:	str	r1, [fp, #-36]	; 0xffffffdc
    bce0:	mov	r1, r2
    bce4:	mov	r2, r3
    bce8:	mov	r3, r1
    bcec:	strb	r3, [fp, #-37]	; 0xffffffdb
    bcf0:	mov	r3, r2
    bcf4:	strb	r3, [fp, #-38]	; 0xffffffda
    bcf8:	ldr	r3, [fp, #4]
    bcfc:	cmp	r3, #0
    bd00:	bne	bd10 <defineAttribute+0x4c>
    bd04:	ldrb	r3, [fp, #-38]	; 0xffffffda
    bd08:	cmp	r3, #0
    bd0c:	beq	bdac <defineAttribute+0xe8>
    bd10:	mov	r3, #0
    bd14:	str	r3, [fp, #-16]
    bd18:	b	bd60 <defineAttribute+0x9c>
    bd1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bd20:	ldr	r1, [r3, #20]
    bd24:	ldr	r2, [fp, #-16]
    bd28:	mov	r3, r2
    bd2c:	lsl	r3, r3, #1
    bd30:	add	r3, r3, r2
    bd34:	lsl	r3, r3, #2
    bd38:	add	r3, r1, r3
    bd3c:	ldr	r3, [r3]
    bd40:	ldr	r2, [fp, #-36]	; 0xffffffdc
    bd44:	cmp	r2, r3
    bd48:	bne	bd54 <defineAttribute+0x90>
    bd4c:	mov	r3, #1
    bd50:	b	bf1c <defineAttribute+0x258>
    bd54:	ldr	r3, [fp, #-16]
    bd58:	add	r3, r3, #1
    bd5c:	str	r3, [fp, #-16]
    bd60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bd64:	ldr	r3, [r3, #12]
    bd68:	ldr	r2, [fp, #-16]
    bd6c:	cmp	r2, r3
    bd70:	blt	bd1c <defineAttribute+0x58>
    bd74:	ldrb	r3, [fp, #-38]	; 0xffffffda
    bd78:	cmp	r3, #0
    bd7c:	beq	bdac <defineAttribute+0xe8>
    bd80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bd84:	ldr	r3, [r3, #8]
    bd88:	cmp	r3, #0
    bd8c:	bne	bdac <defineAttribute+0xe8>
    bd90:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bd94:	ldrb	r3, [r3, #9]
    bd98:	cmp	r3, #0
    bd9c:	bne	bdac <defineAttribute+0xe8>
    bda0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bda4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    bda8:	str	r2, [r3, #8]
    bdac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdb0:	ldr	r2, [r3, #12]
    bdb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdb8:	ldr	r3, [r3, #16]
    bdbc:	cmp	r2, r3
    bdc0:	bne	be9c <defineAttribute+0x1d8>
    bdc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdc8:	ldr	r3, [r3, #16]
    bdcc:	cmp	r3, #0
    bdd0:	bne	be30 <defineAttribute+0x16c>
    bdd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdd8:	mov	r2, #8
    bddc:	str	r2, [r3, #16]
    bde0:	ldr	r3, [fp, #8]
    bde4:	ldr	r2, [r3, #12]
    bde8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdec:	ldr	r3, [r3, #16]
    bdf0:	mov	r1, r3
    bdf4:	mov	r3, r1
    bdf8:	lsl	r3, r3, #1
    bdfc:	add	r3, r3, r1
    be00:	lsl	r3, r3, #2
    be04:	mov	r0, r3
    be08:	blx	r2
    be0c:	mov	r2, r0
    be10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be14:	str	r2, [r3, #20]
    be18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be1c:	ldr	r3, [r3, #20]
    be20:	cmp	r3, #0
    be24:	bne	be9c <defineAttribute+0x1d8>
    be28:	mov	r3, #0
    be2c:	b	bf1c <defineAttribute+0x258>
    be30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be34:	ldr	r3, [r3, #16]
    be38:	lsl	r3, r3, #1
    be3c:	str	r3, [fp, #-20]	; 0xffffffec
    be40:	ldr	r3, [fp, #8]
    be44:	ldr	r4, [r3, #16]
    be48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be4c:	ldr	r0, [r3, #20]
    be50:	ldr	r2, [fp, #-20]	; 0xffffffec
    be54:	mov	r3, r2
    be58:	lsl	r3, r3, #1
    be5c:	add	r3, r3, r2
    be60:	lsl	r3, r3, #2
    be64:	mov	r1, r3
    be68:	blx	r4
    be6c:	str	r0, [fp, #-24]	; 0xffffffe8
    be70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    be74:	cmp	r3, #0
    be78:	bne	be84 <defineAttribute+0x1c0>
    be7c:	mov	r3, #0
    be80:	b	bf1c <defineAttribute+0x258>
    be84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be88:	ldr	r2, [fp, #-20]	; 0xffffffec
    be8c:	str	r2, [r3, #16]
    be90:	ldr	r3, [fp, #-32]	; 0xffffffe0
    be94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    be98:	str	r2, [r3, #20]
    be9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bea0:	ldr	r2, [r3, #20]
    bea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bea8:	ldr	r3, [r3, #12]
    beac:	mov	r1, r3
    beb0:	mov	r3, r1
    beb4:	lsl	r3, r3, #1
    beb8:	add	r3, r3, r1
    bebc:	lsl	r3, r3, #2
    bec0:	add	r3, r2, r3
    bec4:	str	r3, [fp, #-28]	; 0xffffffe4
    bec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    becc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    bed0:	str	r2, [r3]
    bed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bed8:	ldr	r2, [fp, #4]
    bedc:	str	r2, [r3, #8]
    bee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bee4:	ldrb	r2, [fp, #-37]	; 0xffffffdb
    bee8:	strb	r2, [r3, #4]
    beec:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    bef0:	cmp	r3, #0
    bef4:	bne	bf04 <defineAttribute+0x240>
    bef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    befc:	mov	r2, #1
    bf00:	strb	r2, [r3, #8]
    bf04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bf08:	ldr	r3, [r3, #12]
    bf0c:	add	r2, r3, #1
    bf10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bf14:	str	r2, [r3, #12]
    bf18:	mov	r3, #1
    bf1c:	mov	r0, r3
    bf20:	sub	sp, fp, #8
    bf24:	ldr	r4, [sp]
    bf28:	ldr	fp, [sp, #4]
    bf2c:	add	sp, sp, #8
    bf30:	pop	{pc}		; (ldr pc, [sp], #4)

0000bf34 <setElementTypePrefix>:
    bf34:	str	fp, [sp, #-8]!
    bf38:	str	lr, [sp, #4]
    bf3c:	add	fp, sp, #4
    bf40:	sub	sp, sp, #24
    bf44:	str	r0, [fp, #-24]	; 0xffffffe8
    bf48:	str	r1, [fp, #-28]	; 0xffffffe4
    bf4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bf50:	ldr	r3, [r3, #364]	; 0x16c
    bf54:	str	r3, [fp, #-16]
    bf58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bf5c:	ldr	r3, [r3]
    bf60:	str	r3, [fp, #-8]
    bf64:	b	c108 <setElementTypePrefix+0x1d4>
    bf68:	ldr	r3, [fp, #-8]
    bf6c:	ldrb	r3, [r3]
    bf70:	cmp	r3, #58	; 0x3a
    bf74:	bne	c0fc <setElementTypePrefix+0x1c8>
    bf78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bf7c:	ldr	r3, [r3]
    bf80:	str	r3, [fp, #-12]
    bf84:	b	c004 <setElementTypePrefix+0xd0>
    bf88:	ldr	r3, [fp, #-16]
    bf8c:	ldr	r2, [r3, #92]	; 0x5c
    bf90:	ldr	r3, [fp, #-16]
    bf94:	ldr	r3, [r3, #88]	; 0x58
    bf98:	cmp	r2, r3
    bf9c:	bne	bfbc <setElementTypePrefix+0x88>
    bfa0:	ldr	r3, [fp, #-16]
    bfa4:	add	r3, r3, #80	; 0x50
    bfa8:	mov	r0, r3
    bfac:	bl	ee7c <poolGrow>
    bfb0:	mov	r3, r0
    bfb4:	cmp	r3, #0
    bfb8:	beq	bfe4 <setElementTypePrefix+0xb0>
    bfbc:	ldr	r3, [fp, #-16]
    bfc0:	ldr	r3, [r3, #92]	; 0x5c
    bfc4:	add	r1, r3, #1
    bfc8:	ldr	r2, [fp, #-16]
    bfcc:	str	r1, [r2, #92]	; 0x5c
    bfd0:	ldr	r2, [fp, #-12]
    bfd4:	ldrb	r2, [r2]
    bfd8:	strb	r2, [r3]
    bfdc:	mov	r3, #0
    bfe0:	b	bfe8 <setElementTypePrefix+0xb4>
    bfe4:	mov	r3, #1
    bfe8:	cmp	r3, #0
    bfec:	beq	bff8 <setElementTypePrefix+0xc4>
    bff0:	mov	r3, #0
    bff4:	b	c11c <setElementTypePrefix+0x1e8>
    bff8:	ldr	r3, [fp, #-12]
    bffc:	add	r3, r3, #1
    c000:	str	r3, [fp, #-12]
    c004:	ldr	r2, [fp, #-12]
    c008:	ldr	r3, [fp, #-8]
    c00c:	cmp	r2, r3
    c010:	bne	bf88 <setElementTypePrefix+0x54>
    c014:	ldr	r3, [fp, #-16]
    c018:	ldr	r2, [r3, #92]	; 0x5c
    c01c:	ldr	r3, [fp, #-16]
    c020:	ldr	r3, [r3, #88]	; 0x58
    c024:	cmp	r2, r3
    c028:	bne	c048 <setElementTypePrefix+0x114>
    c02c:	ldr	r3, [fp, #-16]
    c030:	add	r3, r3, #80	; 0x50
    c034:	mov	r0, r3
    c038:	bl	ee7c <poolGrow>
    c03c:	mov	r3, r0
    c040:	cmp	r3, #0
    c044:	beq	c06c <setElementTypePrefix+0x138>
    c048:	ldr	r3, [fp, #-16]
    c04c:	ldr	r3, [r3, #92]	; 0x5c
    c050:	add	r1, r3, #1
    c054:	ldr	r2, [fp, #-16]
    c058:	str	r1, [r2, #92]	; 0x5c
    c05c:	mov	r2, #0
    c060:	strb	r2, [r3]
    c064:	mov	r3, #0
    c068:	b	c070 <setElementTypePrefix+0x13c>
    c06c:	mov	r3, #1
    c070:	cmp	r3, #0
    c074:	beq	c080 <setElementTypePrefix+0x14c>
    c078:	mov	r3, #0
    c07c:	b	c11c <setElementTypePrefix+0x1e8>
    c080:	ldr	r3, [fp, #-16]
    c084:	add	r1, r3, #60	; 0x3c
    c088:	ldr	r3, [fp, #-16]
    c08c:	ldr	r2, [r3, #96]	; 0x60
    c090:	mov	r3, #8
    c094:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c098:	bl	e00c <lookup>
    c09c:	str	r0, [fp, #-20]	; 0xffffffec
    c0a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    c0a4:	cmp	r3, #0
    c0a8:	bne	c0b4 <setElementTypePrefix+0x180>
    c0ac:	mov	r3, #0
    c0b0:	b	c11c <setElementTypePrefix+0x1e8>
    c0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    c0b8:	ldr	r2, [r3]
    c0bc:	ldr	r3, [fp, #-16]
    c0c0:	ldr	r3, [r3, #96]	; 0x60
    c0c4:	cmp	r2, r3
    c0c8:	bne	c0e0 <setElementTypePrefix+0x1ac>
    c0cc:	ldr	r3, [fp, #-16]
    c0d0:	ldr	r2, [r3, #92]	; 0x5c
    c0d4:	ldr	r3, [fp, #-16]
    c0d8:	str	r2, [r3, #96]	; 0x60
    c0dc:	b	c0f0 <setElementTypePrefix+0x1bc>
    c0e0:	ldr	r3, [fp, #-16]
    c0e4:	ldr	r2, [r3, #96]	; 0x60
    c0e8:	ldr	r3, [fp, #-16]
    c0ec:	str	r2, [r3, #92]	; 0x5c
    c0f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c0f4:	ldr	r2, [fp, #-20]	; 0xffffffec
    c0f8:	str	r2, [r3, #4]
    c0fc:	ldr	r3, [fp, #-8]
    c100:	add	r3, r3, #1
    c104:	str	r3, [fp, #-8]
    c108:	ldr	r3, [fp, #-8]
    c10c:	ldrb	r3, [r3]
    c110:	cmp	r3, #0
    c114:	bne	bf68 <setElementTypePrefix+0x34>
    c118:	mov	r3, #1
    c11c:	mov	r0, r3
    c120:	sub	sp, fp, #4
    c124:	ldr	fp, [sp]
    c128:	add	sp, sp, #4
    c12c:	pop	{pc}		; (ldr pc, [sp], #4)

0000c130 <getAttributeId>:
    c130:	str	fp, [sp, #-8]!
    c134:	str	lr, [sp, #4]
    c138:	add	fp, sp, #4
    c13c:	sub	sp, sp, #40	; 0x28
    c140:	str	r0, [fp, #-32]	; 0xffffffe0
    c144:	str	r1, [fp, #-36]	; 0xffffffdc
    c148:	str	r2, [fp, #-40]	; 0xffffffd8
    c14c:	str	r3, [fp, #-44]	; 0xffffffd4
    c150:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c154:	ldr	r3, [r3, #364]	; 0x16c
    c158:	str	r3, [fp, #-16]
    c15c:	ldr	r3, [fp, #-16]
    c160:	ldr	r2, [r3, #92]	; 0x5c
    c164:	ldr	r3, [fp, #-16]
    c168:	ldr	r3, [r3, #88]	; 0x58
    c16c:	cmp	r2, r3
    c170:	bne	c190 <getAttributeId+0x60>
    c174:	ldr	r3, [fp, #-16]
    c178:	add	r3, r3, #80	; 0x50
    c17c:	mov	r0, r3
    c180:	bl	ee7c <poolGrow>
    c184:	mov	r3, r0
    c188:	cmp	r3, #0
    c18c:	beq	c1b4 <getAttributeId+0x84>
    c190:	ldr	r3, [fp, #-16]
    c194:	ldr	r3, [r3, #92]	; 0x5c
    c198:	add	r1, r3, #1
    c19c:	ldr	r2, [fp, #-16]
    c1a0:	str	r1, [r2, #92]	; 0x5c
    c1a4:	mov	r2, #0
    c1a8:	strb	r2, [r3]
    c1ac:	mov	r3, #0
    c1b0:	b	c1b8 <getAttributeId+0x88>
    c1b4:	mov	r3, #1
    c1b8:	cmp	r3, #0
    c1bc:	beq	c1c8 <getAttributeId+0x98>
    c1c0:	mov	r3, #0
    c1c4:	b	c540 <getAttributeId+0x410>
    c1c8:	ldr	r3, [fp, #-16]
    c1cc:	add	r0, r3, #80	; 0x50
    c1d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c1d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c1d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c1dc:	bl	edc8 <poolStoreString>
    c1e0:	str	r0, [fp, #-20]	; 0xffffffec
    c1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    c1e8:	cmp	r3, #0
    c1ec:	bne	c1f8 <getAttributeId+0xc8>
    c1f0:	mov	r3, #0
    c1f4:	b	c540 <getAttributeId+0x410>
    c1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    c1fc:	add	r3, r3, #1
    c200:	str	r3, [fp, #-20]	; 0xffffffec
    c204:	ldr	r3, [fp, #-16]
    c208:	add	r1, r3, #40	; 0x28
    c20c:	mov	r3, #12
    c210:	ldr	r2, [fp, #-20]	; 0xffffffec
    c214:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c218:	bl	e00c <lookup>
    c21c:	str	r0, [fp, #-24]	; 0xffffffe8
    c220:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c224:	cmp	r3, #0
    c228:	bne	c234 <getAttributeId+0x104>
    c22c:	mov	r3, #0
    c230:	b	c540 <getAttributeId+0x410>
    c234:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c238:	ldr	r3, [r3]
    c23c:	ldr	r2, [fp, #-20]	; 0xffffffec
    c240:	cmp	r2, r3
    c244:	beq	c25c <getAttributeId+0x12c>
    c248:	ldr	r3, [fp, #-16]
    c24c:	ldr	r2, [r3, #96]	; 0x60
    c250:	ldr	r3, [fp, #-16]
    c254:	str	r2, [r3, #92]	; 0x5c
    c258:	b	c53c <getAttributeId+0x40c>
    c25c:	ldr	r3, [fp, #-16]
    c260:	ldr	r2, [r3, #92]	; 0x5c
    c264:	ldr	r3, [fp, #-16]
    c268:	str	r2, [r3, #96]	; 0x60
    c26c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c270:	ldrb	r3, [r3, #244]	; 0xf4
    c274:	cmp	r3, #0
    c278:	beq	c53c <getAttributeId+0x40c>
    c27c:	ldr	r3, [fp, #-20]	; 0xffffffec
    c280:	ldrb	r3, [r3]
    c284:	cmp	r3, #120	; 0x78
    c288:	bne	c364 <getAttributeId+0x234>
    c28c:	ldr	r3, [fp, #-20]	; 0xffffffec
    c290:	add	r3, r3, #1
    c294:	ldrb	r3, [r3]
    c298:	cmp	r3, #109	; 0x6d
    c29c:	bne	c364 <getAttributeId+0x234>
    c2a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2a4:	add	r3, r3, #2
    c2a8:	ldrb	r3, [r3]
    c2ac:	cmp	r3, #108	; 0x6c
    c2b0:	bne	c364 <getAttributeId+0x234>
    c2b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2b8:	add	r3, r3, #3
    c2bc:	ldrb	r3, [r3]
    c2c0:	cmp	r3, #110	; 0x6e
    c2c4:	bne	c364 <getAttributeId+0x234>
    c2c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2cc:	add	r3, r3, #4
    c2d0:	ldrb	r3, [r3]
    c2d4:	cmp	r3, #115	; 0x73
    c2d8:	bne	c364 <getAttributeId+0x234>
    c2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2e0:	add	r3, r3, #5
    c2e4:	ldrb	r3, [r3]
    c2e8:	cmp	r3, #0
    c2ec:	beq	c304 <getAttributeId+0x1d4>
    c2f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    c2f4:	add	r3, r3, #5
    c2f8:	ldrb	r3, [r3]
    c2fc:	cmp	r3, #58	; 0x3a
    c300:	bne	c364 <getAttributeId+0x234>
    c304:	ldr	r3, [fp, #-20]	; 0xffffffec
    c308:	add	r3, r3, #5
    c30c:	ldrb	r3, [r3]
    c310:	cmp	r3, #0
    c314:	bne	c32c <getAttributeId+0x1fc>
    c318:	ldr	r3, [fp, #-16]
    c31c:	add	r2, r3, #152	; 0x98
    c320:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c324:	str	r2, [r3, #4]
    c328:	b	c354 <getAttributeId+0x224>
    c32c:	ldr	r3, [fp, #-16]
    c330:	add	r1, r3, #60	; 0x3c
    c334:	ldr	r3, [fp, #-20]	; 0xffffffec
    c338:	add	r2, r3, #6
    c33c:	mov	r3, #8
    c340:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c344:	bl	e00c <lookup>
    c348:	mov	r2, r0
    c34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c350:	str	r2, [r3, #4]
    c354:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c358:	mov	r2, #1
    c35c:	strb	r2, [r3, #9]
    c360:	b	c53c <getAttributeId+0x40c>
    c364:	mov	r3, #0
    c368:	str	r3, [fp, #-8]
    c36c:	b	c524 <getAttributeId+0x3f4>
    c370:	ldr	r3, [fp, #-8]
    c374:	ldr	r2, [fp, #-20]	; 0xffffffec
    c378:	add	r3, r2, r3
    c37c:	ldrb	r3, [r3]
    c380:	cmp	r3, #58	; 0x3a
    c384:	bne	c518 <getAttributeId+0x3e8>
    c388:	mov	r3, #0
    c38c:	str	r3, [fp, #-12]
    c390:	b	c418 <getAttributeId+0x2e8>
    c394:	ldr	r3, [fp, #-16]
    c398:	ldr	r2, [r3, #92]	; 0x5c
    c39c:	ldr	r3, [fp, #-16]
    c3a0:	ldr	r3, [r3, #88]	; 0x58
    c3a4:	cmp	r2, r3
    c3a8:	bne	c3c8 <getAttributeId+0x298>
    c3ac:	ldr	r3, [fp, #-16]
    c3b0:	add	r3, r3, #80	; 0x50
    c3b4:	mov	r0, r3
    c3b8:	bl	ee7c <poolGrow>
    c3bc:	mov	r3, r0
    c3c0:	cmp	r3, #0
    c3c4:	beq	c3f8 <getAttributeId+0x2c8>
    c3c8:	ldr	r3, [fp, #-12]
    c3cc:	ldr	r2, [fp, #-20]	; 0xffffffec
    c3d0:	add	r2, r2, r3
    c3d4:	ldr	r3, [fp, #-16]
    c3d8:	ldr	r3, [r3, #92]	; 0x5c
    c3dc:	add	r0, r3, #1
    c3e0:	ldr	r1, [fp, #-16]
    c3e4:	str	r0, [r1, #92]	; 0x5c
    c3e8:	ldrb	r2, [r2]
    c3ec:	strb	r2, [r3]
    c3f0:	mov	r3, #0
    c3f4:	b	c3fc <getAttributeId+0x2cc>
    c3f8:	mov	r3, #1
    c3fc:	cmp	r3, #0
    c400:	beq	c40c <getAttributeId+0x2dc>
    c404:	mov	r3, #0
    c408:	b	c540 <getAttributeId+0x410>
    c40c:	ldr	r3, [fp, #-12]
    c410:	add	r3, r3, #1
    c414:	str	r3, [fp, #-12]
    c418:	ldr	r2, [fp, #-12]
    c41c:	ldr	r3, [fp, #-8]
    c420:	cmp	r2, r3
    c424:	blt	c394 <getAttributeId+0x264>
    c428:	ldr	r3, [fp, #-16]
    c42c:	ldr	r2, [r3, #92]	; 0x5c
    c430:	ldr	r3, [fp, #-16]
    c434:	ldr	r3, [r3, #88]	; 0x58
    c438:	cmp	r2, r3
    c43c:	bne	c45c <getAttributeId+0x32c>
    c440:	ldr	r3, [fp, #-16]
    c444:	add	r3, r3, #80	; 0x50
    c448:	mov	r0, r3
    c44c:	bl	ee7c <poolGrow>
    c450:	mov	r3, r0
    c454:	cmp	r3, #0
    c458:	beq	c480 <getAttributeId+0x350>
    c45c:	ldr	r3, [fp, #-16]
    c460:	ldr	r3, [r3, #92]	; 0x5c
    c464:	add	r1, r3, #1
    c468:	ldr	r2, [fp, #-16]
    c46c:	str	r1, [r2, #92]	; 0x5c
    c470:	mov	r2, #0
    c474:	strb	r2, [r3]
    c478:	mov	r3, #0
    c47c:	b	c484 <getAttributeId+0x354>
    c480:	mov	r3, #1
    c484:	cmp	r3, #0
    c488:	beq	c494 <getAttributeId+0x364>
    c48c:	mov	r3, #0
    c490:	b	c540 <getAttributeId+0x410>
    c494:	ldr	r3, [fp, #-16]
    c498:	add	r1, r3, #60	; 0x3c
    c49c:	ldr	r3, [fp, #-16]
    c4a0:	ldr	r2, [r3, #96]	; 0x60
    c4a4:	mov	r3, #8
    c4a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c4ac:	bl	e00c <lookup>
    c4b0:	mov	r2, r0
    c4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c4b8:	str	r2, [r3, #4]
    c4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c4c0:	ldr	r3, [r3, #4]
    c4c4:	cmp	r3, #0
    c4c8:	bne	c4d4 <getAttributeId+0x3a4>
    c4cc:	mov	r3, #0
    c4d0:	b	c540 <getAttributeId+0x410>
    c4d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c4d8:	ldr	r3, [r3, #4]
    c4dc:	ldr	r2, [r3]
    c4e0:	ldr	r3, [fp, #-16]
    c4e4:	ldr	r3, [r3, #96]	; 0x60
    c4e8:	cmp	r2, r3
    c4ec:	bne	c504 <getAttributeId+0x3d4>
    c4f0:	ldr	r3, [fp, #-16]
    c4f4:	ldr	r2, [r3, #92]	; 0x5c
    c4f8:	ldr	r3, [fp, #-16]
    c4fc:	str	r2, [r3, #96]	; 0x60
    c500:	b	c53c <getAttributeId+0x40c>
    c504:	ldr	r3, [fp, #-16]
    c508:	ldr	r2, [r3, #96]	; 0x60
    c50c:	ldr	r3, [fp, #-16]
    c510:	str	r2, [r3, #92]	; 0x5c
    c514:	b	c53c <getAttributeId+0x40c>
    c518:	ldr	r3, [fp, #-8]
    c51c:	add	r3, r3, #1
    c520:	str	r3, [fp, #-8]
    c524:	ldr	r3, [fp, #-8]
    c528:	ldr	r2, [fp, #-20]	; 0xffffffec
    c52c:	add	r3, r2, r3
    c530:	ldrb	r3, [r3]
    c534:	cmp	r3, #0
    c538:	bne	c370 <getAttributeId+0x240>
    c53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c540:	mov	r0, r3
    c544:	sub	sp, fp, #4
    c548:	ldr	fp, [sp]
    c54c:	add	sp, sp, #4
    c550:	pop	{pc}		; (ldr pc, [sp], #4)

0000c554 <getContext>:
    c554:	str	fp, [sp, #-8]!
    c558:	str	lr, [sp, #4]
    c55c:	add	fp, sp, #4
    c560:	sub	sp, sp, #56	; 0x38
    c564:	str	r0, [fp, #-56]	; 0xffffffc8
    c568:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c56c:	ldr	r3, [r3, #364]	; 0x16c
    c570:	str	r3, [fp, #-36]	; 0xffffffdc
    c574:	mov	r3, #0
    c578:	strb	r3, [fp, #-5]
    c57c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c580:	ldr	r3, [r3, #156]	; 0x9c
    c584:	cmp	r3, #0
    c588:	beq	c6d4 <getContext+0x180>
    c58c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c590:	ldr	r2, [r3, #444]	; 0x1bc
    c594:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c598:	ldr	r3, [r3, #440]	; 0x1b8
    c59c:	cmp	r2, r3
    c5a0:	bne	c5c0 <getContext+0x6c>
    c5a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c5a8:	add	r3, r3, #432	; 0x1b0
    c5ac:	mov	r0, r3
    c5b0:	bl	ee7c <poolGrow>
    c5b4:	mov	r3, r0
    c5b8:	cmp	r3, #0
    c5bc:	beq	c5e4 <getContext+0x90>
    c5c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c5c4:	ldr	r3, [r3, #444]	; 0x1bc
    c5c8:	add	r1, r3, #1
    c5cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c5d0:	str	r1, [r2, #444]	; 0x1bc
    c5d4:	mov	r2, #61	; 0x3d
    c5d8:	strb	r2, [r3]
    c5dc:	mov	r3, #0
    c5e0:	b	c5e8 <getContext+0x94>
    c5e4:	mov	r3, #1
    c5e8:	cmp	r3, #0
    c5ec:	beq	c5f8 <getContext+0xa4>
    c5f0:	mov	r3, #0
    c5f4:	b	cb64 <getContext+0x610>
    c5f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c5fc:	ldr	r3, [r3, #156]	; 0x9c
    c600:	ldr	r3, [r3, #20]
    c604:	str	r3, [fp, #-16]
    c608:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c60c:	ldrb	r3, [r3, #488]	; 0x1e8
    c610:	cmp	r3, #0
    c614:	beq	c624 <getContext+0xd0>
    c618:	ldr	r3, [fp, #-16]
    c61c:	sub	r3, r3, #1
    c620:	str	r3, [fp, #-16]
    c624:	mov	r3, #0
    c628:	str	r3, [fp, #-12]
    c62c:	b	c6bc <getContext+0x168>
    c630:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c634:	ldr	r2, [r3, #444]	; 0x1bc
    c638:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c63c:	ldr	r3, [r3, #440]	; 0x1b8
    c640:	cmp	r2, r3
    c644:	bne	c664 <getContext+0x110>
    c648:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c64c:	add	r3, r3, #432	; 0x1b0
    c650:	mov	r0, r3
    c654:	bl	ee7c <poolGrow>
    c658:	mov	r3, r0
    c65c:	cmp	r3, #0
    c660:	beq	c69c <getContext+0x148>
    c664:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c668:	ldr	r3, [r3, #156]	; 0x9c
    c66c:	ldr	r2, [r3, #16]
    c670:	ldr	r3, [fp, #-12]
    c674:	add	r2, r2, r3
    c678:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c67c:	ldr	r3, [r3, #444]	; 0x1bc
    c680:	add	r0, r3, #1
    c684:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c688:	str	r0, [r1, #444]	; 0x1bc
    c68c:	ldrb	r2, [r2]
    c690:	strb	r2, [r3]
    c694:	mov	r3, #0
    c698:	b	c6a0 <getContext+0x14c>
    c69c:	mov	r3, #1
    c6a0:	cmp	r3, #0
    c6a4:	beq	c6b0 <getContext+0x15c>
    c6a8:	mov	r3, #0
    c6ac:	b	cb64 <getContext+0x610>
    c6b0:	ldr	r3, [fp, #-12]
    c6b4:	add	r3, r3, #1
    c6b8:	str	r3, [fp, #-12]
    c6bc:	ldr	r2, [fp, #-12]
    c6c0:	ldr	r3, [fp, #-16]
    c6c4:	cmp	r2, r3
    c6c8:	blt	c630 <getContext+0xdc>
    c6cc:	mov	r3, #1
    c6d0:	strb	r3, [fp, #-5]
    c6d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c6d8:	add	r2, r3, #60	; 0x3c
    c6dc:	sub	r3, fp, #52	; 0x34
    c6e0:	mov	r1, r2
    c6e4:	mov	r0, r3
    c6e8:	bl	e7c8 <hashTableIterInit>
    c6ec:	sub	r3, fp, #52	; 0x34
    c6f0:	mov	r0, r3
    c6f4:	bl	e81c <hashTableIterNext>
    c6f8:	str	r0, [fp, #-40]	; 0xffffffd8
    c6fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c700:	cmp	r3, #0
    c704:	beq	c980 <getContext+0x42c>
    c708:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c70c:	ldr	r3, [r3, #4]
    c710:	cmp	r3, #0
    c714:	beq	c978 <getContext+0x424>
    c718:	ldrb	r3, [fp, #-5]
    c71c:	cmp	r3, #0
    c720:	beq	c790 <getContext+0x23c>
    c724:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c728:	ldr	r2, [r3, #444]	; 0x1bc
    c72c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c730:	ldr	r3, [r3, #440]	; 0x1b8
    c734:	cmp	r2, r3
    c738:	bne	c758 <getContext+0x204>
    c73c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c740:	add	r3, r3, #432	; 0x1b0
    c744:	mov	r0, r3
    c748:	bl	ee7c <poolGrow>
    c74c:	mov	r3, r0
    c750:	cmp	r3, #0
    c754:	beq	c77c <getContext+0x228>
    c758:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c75c:	ldr	r3, [r3, #444]	; 0x1bc
    c760:	add	r1, r3, #1
    c764:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c768:	str	r1, [r2, #444]	; 0x1bc
    c76c:	mov	r2, #12
    c770:	strb	r2, [r3]
    c774:	mov	r3, #0
    c778:	b	c780 <getContext+0x22c>
    c77c:	mov	r3, #1
    c780:	cmp	r3, #0
    c784:	beq	c790 <getContext+0x23c>
    c788:	mov	r3, #0
    c78c:	b	cb64 <getContext+0x610>
    c790:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c794:	ldr	r3, [r3]
    c798:	str	r3, [fp, #-28]	; 0xffffffe4
    c79c:	b	c81c <getContext+0x2c8>
    c7a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c7a4:	ldr	r2, [r3, #444]	; 0x1bc
    c7a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c7ac:	ldr	r3, [r3, #440]	; 0x1b8
    c7b0:	cmp	r2, r3
    c7b4:	bne	c7d4 <getContext+0x280>
    c7b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c7bc:	add	r3, r3, #432	; 0x1b0
    c7c0:	mov	r0, r3
    c7c4:	bl	ee7c <poolGrow>
    c7c8:	mov	r3, r0
    c7cc:	cmp	r3, #0
    c7d0:	beq	c7fc <getContext+0x2a8>
    c7d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c7d8:	ldr	r3, [r3, #444]	; 0x1bc
    c7dc:	add	r1, r3, #1
    c7e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c7e4:	str	r1, [r2, #444]	; 0x1bc
    c7e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c7ec:	ldrb	r2, [r2]
    c7f0:	strb	r2, [r3]
    c7f4:	mov	r3, #0
    c7f8:	b	c800 <getContext+0x2ac>
    c7fc:	mov	r3, #1
    c800:	cmp	r3, #0
    c804:	beq	c810 <getContext+0x2bc>
    c808:	mov	r3, #0
    c80c:	b	cb64 <getContext+0x610>
    c810:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c814:	add	r3, r3, #1
    c818:	str	r3, [fp, #-28]	; 0xffffffe4
    c81c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c820:	ldrb	r3, [r3]
    c824:	cmp	r3, #0
    c828:	bne	c7a0 <getContext+0x24c>
    c82c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c830:	ldr	r2, [r3, #444]	; 0x1bc
    c834:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c838:	ldr	r3, [r3, #440]	; 0x1b8
    c83c:	cmp	r2, r3
    c840:	bne	c860 <getContext+0x30c>
    c844:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c848:	add	r3, r3, #432	; 0x1b0
    c84c:	mov	r0, r3
    c850:	bl	ee7c <poolGrow>
    c854:	mov	r3, r0
    c858:	cmp	r3, #0
    c85c:	beq	c884 <getContext+0x330>
    c860:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c864:	ldr	r3, [r3, #444]	; 0x1bc
    c868:	add	r1, r3, #1
    c86c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c870:	str	r1, [r2, #444]	; 0x1bc
    c874:	mov	r2, #61	; 0x3d
    c878:	strb	r2, [r3]
    c87c:	mov	r3, #0
    c880:	b	c888 <getContext+0x334>
    c884:	mov	r3, #1
    c888:	cmp	r3, #0
    c88c:	beq	c898 <getContext+0x344>
    c890:	mov	r3, #0
    c894:	b	cb64 <getContext+0x610>
    c898:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c89c:	ldr	r3, [r3, #4]
    c8a0:	ldr	r3, [r3, #20]
    c8a4:	str	r3, [fp, #-24]	; 0xffffffe8
    c8a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c8ac:	ldrb	r3, [r3, #488]	; 0x1e8
    c8b0:	cmp	r3, #0
    c8b4:	beq	c8c4 <getContext+0x370>
    c8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8bc:	sub	r3, r3, #1
    c8c0:	str	r3, [fp, #-24]	; 0xffffffe8
    c8c4:	mov	r3, #0
    c8c8:	str	r3, [fp, #-20]	; 0xffffffec
    c8cc:	b	c95c <getContext+0x408>
    c8d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c8d4:	ldr	r2, [r3, #444]	; 0x1bc
    c8d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c8dc:	ldr	r3, [r3, #440]	; 0x1b8
    c8e0:	cmp	r2, r3
    c8e4:	bne	c904 <getContext+0x3b0>
    c8e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c8ec:	add	r3, r3, #432	; 0x1b0
    c8f0:	mov	r0, r3
    c8f4:	bl	ee7c <poolGrow>
    c8f8:	mov	r3, r0
    c8fc:	cmp	r3, #0
    c900:	beq	c93c <getContext+0x3e8>
    c904:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c908:	ldr	r3, [r3, #4]
    c90c:	ldr	r2, [r3, #16]
    c910:	ldr	r3, [fp, #-20]	; 0xffffffec
    c914:	add	r2, r2, r3
    c918:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c91c:	ldr	r3, [r3, #444]	; 0x1bc
    c920:	add	r0, r3, #1
    c924:	ldr	r1, [fp, #-56]	; 0xffffffc8
    c928:	str	r0, [r1, #444]	; 0x1bc
    c92c:	ldrb	r2, [r2]
    c930:	strb	r2, [r3]
    c934:	mov	r3, #0
    c938:	b	c940 <getContext+0x3ec>
    c93c:	mov	r3, #1
    c940:	cmp	r3, #0
    c944:	beq	c950 <getContext+0x3fc>
    c948:	mov	r3, #0
    c94c:	b	cb64 <getContext+0x610>
    c950:	ldr	r3, [fp, #-20]	; 0xffffffec
    c954:	add	r3, r3, #1
    c958:	str	r3, [fp, #-20]	; 0xffffffec
    c95c:	ldr	r2, [fp, #-20]	; 0xffffffec
    c960:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c964:	cmp	r2, r3
    c968:	blt	c8d0 <getContext+0x37c>
    c96c:	mov	r3, #1
    c970:	strb	r3, [fp, #-5]
    c974:	b	c6ec <getContext+0x198>
    c978:	nop	{0}
    c97c:	b	c6ec <getContext+0x198>
    c980:	nop	{0}
    c984:	ldr	r2, [fp, #-36]	; 0xffffffdc
    c988:	sub	r3, fp, #52	; 0x34
    c98c:	mov	r1, r2
    c990:	mov	r0, r3
    c994:	bl	e7c8 <hashTableIterInit>
    c998:	sub	r3, fp, #52	; 0x34
    c99c:	mov	r0, r3
    c9a0:	bl	e81c <hashTableIterNext>
    c9a4:	str	r0, [fp, #-44]	; 0xffffffd4
    c9a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c9ac:	cmp	r3, #0
    c9b0:	beq	caec <getContext+0x598>
    c9b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c9b8:	ldrb	r3, [r3, #32]
    c9bc:	cmp	r3, #0
    c9c0:	beq	cae4 <getContext+0x590>
    c9c4:	ldrb	r3, [fp, #-5]
    c9c8:	cmp	r3, #0
    c9cc:	beq	ca3c <getContext+0x4e8>
    c9d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c9d4:	ldr	r2, [r3, #444]	; 0x1bc
    c9d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c9dc:	ldr	r3, [r3, #440]	; 0x1b8
    c9e0:	cmp	r2, r3
    c9e4:	bne	ca04 <getContext+0x4b0>
    c9e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c9ec:	add	r3, r3, #432	; 0x1b0
    c9f0:	mov	r0, r3
    c9f4:	bl	ee7c <poolGrow>
    c9f8:	mov	r3, r0
    c9fc:	cmp	r3, #0
    ca00:	beq	ca28 <getContext+0x4d4>
    ca04:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ca08:	ldr	r3, [r3, #444]	; 0x1bc
    ca0c:	add	r1, r3, #1
    ca10:	ldr	r2, [fp, #-56]	; 0xffffffc8
    ca14:	str	r1, [r2, #444]	; 0x1bc
    ca18:	mov	r2, #12
    ca1c:	strb	r2, [r3]
    ca20:	mov	r3, #0
    ca24:	b	ca2c <getContext+0x4d8>
    ca28:	mov	r3, #1
    ca2c:	cmp	r3, #0
    ca30:	beq	ca3c <getContext+0x4e8>
    ca34:	mov	r3, #0
    ca38:	b	cb64 <getContext+0x610>
    ca3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ca40:	ldr	r3, [r3]
    ca44:	str	r3, [fp, #-32]	; 0xffffffe0
    ca48:	b	cac8 <getContext+0x574>
    ca4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ca50:	ldr	r2, [r3, #444]	; 0x1bc
    ca54:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ca58:	ldr	r3, [r3, #440]	; 0x1b8
    ca5c:	cmp	r2, r3
    ca60:	bne	ca80 <getContext+0x52c>
    ca64:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ca68:	add	r3, r3, #432	; 0x1b0
    ca6c:	mov	r0, r3
    ca70:	bl	ee7c <poolGrow>
    ca74:	mov	r3, r0
    ca78:	cmp	r3, #0
    ca7c:	beq	caa8 <getContext+0x554>
    ca80:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ca84:	ldr	r3, [r3, #444]	; 0x1bc
    ca88:	add	r1, r3, #1
    ca8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    ca90:	str	r1, [r2, #444]	; 0x1bc
    ca94:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ca98:	ldrb	r2, [r2]
    ca9c:	strb	r2, [r3]
    caa0:	mov	r3, #0
    caa4:	b	caac <getContext+0x558>
    caa8:	mov	r3, #1
    caac:	cmp	r3, #0
    cab0:	beq	cabc <getContext+0x568>
    cab4:	mov	r3, #0
    cab8:	b	cb64 <getContext+0x610>
    cabc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    cac0:	add	r3, r3, #1
    cac4:	str	r3, [fp, #-32]	; 0xffffffe0
    cac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    cacc:	ldrb	r3, [r3]
    cad0:	cmp	r3, #0
    cad4:	bne	ca4c <getContext+0x4f8>
    cad8:	mov	r3, #1
    cadc:	strb	r3, [fp, #-5]
    cae0:	b	c998 <getContext+0x444>
    cae4:	nop	{0}
    cae8:	b	c998 <getContext+0x444>
    caec:	nop	{0}
    caf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    caf4:	ldr	r2, [r3, #444]	; 0x1bc
    caf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cafc:	ldr	r3, [r3, #440]	; 0x1b8
    cb00:	cmp	r2, r3
    cb04:	bne	cb24 <getContext+0x5d0>
    cb08:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cb0c:	add	r3, r3, #432	; 0x1b0
    cb10:	mov	r0, r3
    cb14:	bl	ee7c <poolGrow>
    cb18:	mov	r3, r0
    cb1c:	cmp	r3, #0
    cb20:	beq	cb48 <getContext+0x5f4>
    cb24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cb28:	ldr	r3, [r3, #444]	; 0x1bc
    cb2c:	add	r1, r3, #1
    cb30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    cb34:	str	r1, [r2, #444]	; 0x1bc
    cb38:	mov	r2, #0
    cb3c:	strb	r2, [r3]
    cb40:	mov	r3, #0
    cb44:	b	cb4c <getContext+0x5f8>
    cb48:	mov	r3, #1
    cb4c:	cmp	r3, #0
    cb50:	beq	cb5c <getContext+0x608>
    cb54:	mov	r3, #0
    cb58:	b	cb64 <getContext+0x610>
    cb5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cb60:	ldr	r3, [r3, #448]	; 0x1c0
    cb64:	mov	r0, r3
    cb68:	sub	sp, fp, #4
    cb6c:	ldr	fp, [sp]
    cb70:	add	sp, sp, #4
    cb74:	pop	{pc}		; (ldr pc, [sp], #4)

0000cb78 <setContext>:
    cb78:	str	fp, [sp, #-8]!
    cb7c:	str	lr, [sp, #4]
    cb80:	add	fp, sp, #4
    cb84:	sub	sp, sp, #32
    cb88:	str	r0, [fp, #-24]	; 0xffffffe8
    cb8c:	str	r1, [fp, #-28]	; 0xffffffe4
    cb90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb94:	ldr	r3, [r3, #364]	; 0x16c
    cb98:	str	r3, [fp, #-16]
    cb9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cba0:	str	r3, [fp, #-8]
    cba4:	b	cfe8 <setContext+0x470>
    cba8:	ldr	r3, [fp, #-8]
    cbac:	ldrb	r3, [r3]
    cbb0:	cmp	r3, #12
    cbb4:	beq	cbc8 <setContext+0x50>
    cbb8:	ldr	r3, [fp, #-8]
    cbbc:	ldrb	r3, [r3]
    cbc0:	cmp	r3, #0
    cbc4:	bne	cca0 <setContext+0x128>
    cbc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbcc:	ldr	r2, [r3, #444]	; 0x1bc
    cbd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbd4:	ldr	r3, [r3, #440]	; 0x1b8
    cbd8:	cmp	r2, r3
    cbdc:	bne	cbfc <setContext+0x84>
    cbe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbe4:	add	r3, r3, #432	; 0x1b0
    cbe8:	mov	r0, r3
    cbec:	bl	ee7c <poolGrow>
    cbf0:	mov	r3, r0
    cbf4:	cmp	r3, #0
    cbf8:	beq	cc20 <setContext+0xa8>
    cbfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc00:	ldr	r3, [r3, #444]	; 0x1bc
    cc04:	add	r1, r3, #1
    cc08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cc0c:	str	r1, [r2, #444]	; 0x1bc
    cc10:	mov	r2, #0
    cc14:	strb	r2, [r3]
    cc18:	mov	r3, #0
    cc1c:	b	cc24 <setContext+0xac>
    cc20:	mov	r3, #1
    cc24:	cmp	r3, #0
    cc28:	beq	cc34 <setContext+0xbc>
    cc2c:	mov	r3, #0
    cc30:	b	cffc <setContext+0x484>
    cc34:	ldr	r1, [fp, #-16]
    cc38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc3c:	ldr	r2, [r3, #448]	; 0x1c0
    cc40:	mov	r3, #0
    cc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc48:	bl	e00c <lookup>
    cc4c:	str	r0, [fp, #-20]	; 0xffffffec
    cc50:	ldr	r3, [fp, #-20]	; 0xffffffec
    cc54:	cmp	r3, #0
    cc58:	beq	cc68 <setContext+0xf0>
    cc5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    cc60:	mov	r2, #1
    cc64:	strb	r2, [r3, #32]
    cc68:	ldr	r3, [fp, #-8]
    cc6c:	ldrb	r3, [r3]
    cc70:	cmp	r3, #0
    cc74:	beq	cc84 <setContext+0x10c>
    cc78:	ldr	r3, [fp, #-8]
    cc7c:	add	r3, r3, #1
    cc80:	str	r3, [fp, #-8]
    cc84:	ldr	r3, [fp, #-8]
    cc88:	str	r3, [fp, #-28]	; 0xffffffe4
    cc8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc90:	ldr	r2, [r3, #448]	; 0x1c0
    cc94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc98:	str	r2, [r3, #444]	; 0x1bc
    cc9c:	b	cfe8 <setContext+0x470>
    cca0:	ldr	r3, [fp, #-8]
    cca4:	ldrb	r3, [r3]
    cca8:	cmp	r3, #61	; 0x3d
    ccac:	bne	cf6c <setContext+0x3f4>
    ccb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ccb4:	ldr	r2, [r3, #444]	; 0x1bc
    ccb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ccbc:	ldr	r3, [r3, #448]	; 0x1c0
    ccc0:	cmp	r2, r3
    ccc4:	bne	ccd8 <setContext+0x160>
    ccc8:	ldr	r3, [fp, #-16]
    cccc:	add	r3, r3, #152	; 0x98
    ccd0:	str	r3, [fp, #-12]
    ccd4:	b	cde0 <setContext+0x268>
    ccd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ccdc:	ldr	r2, [r3, #444]	; 0x1bc
    cce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cce4:	ldr	r3, [r3, #440]	; 0x1b8
    cce8:	cmp	r2, r3
    ccec:	bne	cd0c <setContext+0x194>
    ccf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ccf4:	add	r3, r3, #432	; 0x1b0
    ccf8:	mov	r0, r3
    ccfc:	bl	ee7c <poolGrow>
    cd00:	mov	r3, r0
    cd04:	cmp	r3, #0
    cd08:	beq	cd30 <setContext+0x1b8>
    cd0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd10:	ldr	r3, [r3, #444]	; 0x1bc
    cd14:	add	r1, r3, #1
    cd18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cd1c:	str	r1, [r2, #444]	; 0x1bc
    cd20:	mov	r2, #0
    cd24:	strb	r2, [r3]
    cd28:	mov	r3, #0
    cd2c:	b	cd34 <setContext+0x1bc>
    cd30:	mov	r3, #1
    cd34:	cmp	r3, #0
    cd38:	beq	cd44 <setContext+0x1cc>
    cd3c:	mov	r3, #0
    cd40:	b	cffc <setContext+0x484>
    cd44:	ldr	r3, [fp, #-16]
    cd48:	add	r1, r3, #60	; 0x3c
    cd4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd50:	ldr	r2, [r3, #448]	; 0x1c0
    cd54:	mov	r3, #8
    cd58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd5c:	bl	e00c <lookup>
    cd60:	str	r0, [fp, #-12]
    cd64:	ldr	r3, [fp, #-12]
    cd68:	cmp	r3, #0
    cd6c:	bne	cd78 <setContext+0x200>
    cd70:	mov	r3, #0
    cd74:	b	cffc <setContext+0x484>
    cd78:	ldr	r3, [fp, #-12]
    cd7c:	ldr	r2, [r3]
    cd80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd84:	ldr	r3, [r3, #448]	; 0x1c0
    cd88:	cmp	r2, r3
    cd8c:	bne	cdd0 <setContext+0x258>
    cd90:	ldr	r3, [fp, #-16]
    cd94:	add	r2, r3, #80	; 0x50
    cd98:	ldr	r3, [fp, #-12]
    cd9c:	ldr	r3, [r3]
    cda0:	mov	r1, r3
    cda4:	mov	r0, r2
    cda8:	bl	eb38 <poolCopyString>
    cdac:	mov	r2, r0
    cdb0:	ldr	r3, [fp, #-12]
    cdb4:	str	r2, [r3]
    cdb8:	ldr	r3, [fp, #-12]
    cdbc:	ldr	r3, [r3]
    cdc0:	cmp	r3, #0
    cdc4:	bne	cdd0 <setContext+0x258>
    cdc8:	mov	r3, #0
    cdcc:	b	cffc <setContext+0x484>
    cdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cdd4:	ldr	r2, [r3, #448]	; 0x1c0
    cdd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cddc:	str	r2, [r3, #444]	; 0x1bc
    cde0:	ldr	r3, [fp, #-8]
    cde4:	add	r3, r3, #1
    cde8:	str	r3, [fp, #-28]	; 0xffffffe4
    cdec:	b	ce6c <setContext+0x2f4>
    cdf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cdf4:	ldr	r2, [r3, #444]	; 0x1bc
    cdf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cdfc:	ldr	r3, [r3, #440]	; 0x1b8
    ce00:	cmp	r2, r3
    ce04:	bne	ce24 <setContext+0x2ac>
    ce08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce0c:	add	r3, r3, #432	; 0x1b0
    ce10:	mov	r0, r3
    ce14:	bl	ee7c <poolGrow>
    ce18:	mov	r3, r0
    ce1c:	cmp	r3, #0
    ce20:	beq	ce4c <setContext+0x2d4>
    ce24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce28:	ldr	r3, [r3, #444]	; 0x1bc
    ce2c:	add	r1, r3, #1
    ce30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ce34:	str	r1, [r2, #444]	; 0x1bc
    ce38:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ce3c:	ldrb	r2, [r2]
    ce40:	strb	r2, [r3]
    ce44:	mov	r3, #0
    ce48:	b	ce50 <setContext+0x2d8>
    ce4c:	mov	r3, #1
    ce50:	cmp	r3, #0
    ce54:	beq	ce60 <setContext+0x2e8>
    ce58:	mov	r3, #0
    ce5c:	b	cffc <setContext+0x484>
    ce60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ce64:	add	r3, r3, #1
    ce68:	str	r3, [fp, #-28]	; 0xffffffe4
    ce6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ce70:	ldrb	r3, [r3]
    ce74:	cmp	r3, #12
    ce78:	beq	ce8c <setContext+0x314>
    ce7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ce80:	ldrb	r3, [r3]
    ce84:	cmp	r3, #0
    ce88:	bne	cdf0 <setContext+0x278>
    ce8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce90:	ldr	r2, [r3, #444]	; 0x1bc
    ce94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ce98:	ldr	r3, [r3, #440]	; 0x1b8
    ce9c:	cmp	r2, r3
    cea0:	bne	cec0 <setContext+0x348>
    cea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cea8:	add	r3, r3, #432	; 0x1b0
    ceac:	mov	r0, r3
    ceb0:	bl	ee7c <poolGrow>
    ceb4:	mov	r3, r0
    ceb8:	cmp	r3, #0
    cebc:	beq	cee4 <setContext+0x36c>
    cec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cec4:	ldr	r3, [r3, #444]	; 0x1bc
    cec8:	add	r1, r3, #1
    cecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ced0:	str	r1, [r2, #444]	; 0x1bc
    ced4:	mov	r2, #0
    ced8:	strb	r2, [r3]
    cedc:	mov	r3, #0
    cee0:	b	cee8 <setContext+0x370>
    cee4:	mov	r3, #1
    cee8:	cmp	r3, #0
    ceec:	beq	cef8 <setContext+0x380>
    cef0:	mov	r3, #0
    cef4:	b	cffc <setContext+0x484>
    cef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cefc:	ldr	r2, [r3, #448]	; 0x1c0
    cf00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf04:	add	r3, r3, #380	; 0x17c
    cf08:	str	r3, [sp]
    cf0c:	mov	r3, r2
    cf10:	mov	r2, #0
    cf14:	ldr	r1, [fp, #-12]
    cf18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf1c:	bl	5a44 <addBinding>
    cf20:	mov	r3, r0
    cf24:	cmp	r3, #0
    cf28:	beq	cf34 <setContext+0x3bc>
    cf2c:	mov	r3, #0
    cf30:	b	cffc <setContext+0x484>
    cf34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf38:	ldr	r2, [r3, #448]	; 0x1c0
    cf3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf40:	str	r2, [r3, #444]	; 0x1bc
    cf44:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cf48:	ldrb	r3, [r3]
    cf4c:	cmp	r3, #0
    cf50:	beq	cf60 <setContext+0x3e8>
    cf54:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cf58:	add	r3, r3, #1
    cf5c:	str	r3, [fp, #-28]	; 0xffffffe4
    cf60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cf64:	str	r3, [fp, #-8]
    cf68:	b	cfe8 <setContext+0x470>
    cf6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf70:	ldr	r2, [r3, #444]	; 0x1bc
    cf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf78:	ldr	r3, [r3, #440]	; 0x1b8
    cf7c:	cmp	r2, r3
    cf80:	bne	cfa0 <setContext+0x428>
    cf84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf88:	add	r3, r3, #432	; 0x1b0
    cf8c:	mov	r0, r3
    cf90:	bl	ee7c <poolGrow>
    cf94:	mov	r3, r0
    cf98:	cmp	r3, #0
    cf9c:	beq	cfc8 <setContext+0x450>
    cfa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cfa4:	ldr	r3, [r3, #444]	; 0x1bc
    cfa8:	add	r1, r3, #1
    cfac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cfb0:	str	r1, [r2, #444]	; 0x1bc
    cfb4:	ldr	r2, [fp, #-8]
    cfb8:	ldrb	r2, [r2]
    cfbc:	strb	r2, [r3]
    cfc0:	mov	r3, #0
    cfc4:	b	cfcc <setContext+0x454>
    cfc8:	mov	r3, #1
    cfcc:	cmp	r3, #0
    cfd0:	beq	cfdc <setContext+0x464>
    cfd4:	mov	r3, #0
    cfd8:	b	cffc <setContext+0x484>
    cfdc:	ldr	r3, [fp, #-8]
    cfe0:	add	r3, r3, #1
    cfe4:	str	r3, [fp, #-8]
    cfe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cfec:	ldrb	r3, [r3]
    cff0:	cmp	r3, #0
    cff4:	bne	cba8 <setContext+0x30>
    cff8:	mov	r3, #1
    cffc:	mov	r0, r3
    d000:	sub	sp, fp, #4
    d004:	ldr	fp, [sp]
    d008:	add	sp, sp, #4
    d00c:	pop	{pc}		; (ldr pc, [sp], #4)

0000d010 <normalizePublicId>:
    d010:	push	{fp}		; (str fp, [sp, #-4]!)
    d014:	add	fp, sp, #0
    d018:	sub	sp, sp, #20
    d01c:	str	r0, [fp, #-16]
    d020:	ldr	r3, [fp, #-16]
    d024:	str	r3, [fp, #-8]
    d028:	ldr	r3, [fp, #-16]
    d02c:	str	r3, [fp, #-12]
    d030:	b	d0bc <normalizePublicId+0xac>
    d034:	ldr	r3, [fp, #-12]
    d038:	ldrb	r3, [r3]
    d03c:	cmp	r3, #13
    d040:	beq	d054 <normalizePublicId+0x44>
    d044:	cmp	r3, #32
    d048:	beq	d054 <normalizePublicId+0x44>
    d04c:	cmp	r3, #10
    d050:	bne	d090 <normalizePublicId+0x80>
    d054:	ldr	r2, [fp, #-8]
    d058:	ldr	r3, [fp, #-16]
    d05c:	cmp	r2, r3
    d060:	beq	d0ac <normalizePublicId+0x9c>
    d064:	ldr	r3, [fp, #-8]
    d068:	sub	r3, r3, #1
    d06c:	ldrb	r3, [r3]
    d070:	cmp	r3, #32
    d074:	beq	d0ac <normalizePublicId+0x9c>
    d078:	ldr	r3, [fp, #-8]
    d07c:	add	r2, r3, #1
    d080:	str	r2, [fp, #-8]
    d084:	mov	r2, #32
    d088:	strb	r2, [r3]
    d08c:	b	d0ac <normalizePublicId+0x9c>
    d090:	ldr	r3, [fp, #-8]
    d094:	add	r2, r3, #1
    d098:	str	r2, [fp, #-8]
    d09c:	ldr	r2, [fp, #-12]
    d0a0:	ldrb	r2, [r2]
    d0a4:	strb	r2, [r3]
    d0a8:	b	d0b0 <normalizePublicId+0xa0>
    d0ac:	nop	{0}
    d0b0:	ldr	r3, [fp, #-12]
    d0b4:	add	r3, r3, #1
    d0b8:	str	r3, [fp, #-12]
    d0bc:	ldr	r3, [fp, #-12]
    d0c0:	ldrb	r3, [r3]
    d0c4:	cmp	r3, #0
    d0c8:	bne	d034 <normalizePublicId+0x24>
    d0cc:	ldr	r2, [fp, #-8]
    d0d0:	ldr	r3, [fp, #-16]
    d0d4:	cmp	r2, r3
    d0d8:	beq	d0fc <normalizePublicId+0xec>
    d0dc:	ldr	r3, [fp, #-8]
    d0e0:	sub	r3, r3, #1
    d0e4:	ldrb	r3, [r3]
    d0e8:	cmp	r3, #32
    d0ec:	bne	d0fc <normalizePublicId+0xec>
    d0f0:	ldr	r3, [fp, #-8]
    d0f4:	sub	r3, r3, #1
    d0f8:	str	r3, [fp, #-8]
    d0fc:	ldr	r3, [fp, #-8]
    d100:	mov	r2, #0
    d104:	strb	r2, [r3]
    d108:	nop	{0}
    d10c:	add	sp, fp, #0
    d110:	pop	{fp}		; (ldr fp, [sp], #4)
    d114:	bx	lr

0000d118 <dtdCreate>:
    d118:	str	fp, [sp, #-8]!
    d11c:	str	lr, [sp, #4]
    d120:	add	fp, sp, #4
    d124:	sub	sp, sp, #16
    d128:	str	r0, [fp, #-16]
    d12c:	ldr	r3, [fp, #-16]
    d130:	ldr	r3, [r3]
    d134:	mov	r0, #188	; 0xbc
    d138:	blx	r3
    d13c:	str	r0, [fp, #-8]
    d140:	ldr	r3, [fp, #-8]
    d144:	cmp	r3, #0
    d148:	bne	d154 <dtdCreate+0x3c>
    d14c:	ldr	r3, [fp, #-8]
    d150:	b	d27c <dtdCreate+0x164>
    d154:	ldr	r3, [fp, #-8]
    d158:	add	r3, r3, #80	; 0x50
    d15c:	ldr	r1, [fp, #-16]
    d160:	mov	r0, r3
    d164:	bl	e88c <poolInit>
    d168:	ldr	r3, [fp, #-8]
    d16c:	add	r3, r3, #104	; 0x68
    d170:	ldr	r1, [fp, #-16]
    d174:	mov	r0, r3
    d178:	bl	e88c <poolInit>
    d17c:	ldr	r3, [fp, #-8]
    d180:	ldr	r1, [fp, #-16]
    d184:	mov	r0, r3
    d188:	bl	e768 <hashTableInit>
    d18c:	ldr	r3, [fp, #-8]
    d190:	add	r3, r3, #20
    d194:	ldr	r1, [fp, #-16]
    d198:	mov	r0, r3
    d19c:	bl	e768 <hashTableInit>
    d1a0:	ldr	r3, [fp, #-8]
    d1a4:	add	r3, r3, #40	; 0x28
    d1a8:	ldr	r1, [fp, #-16]
    d1ac:	mov	r0, r3
    d1b0:	bl	e768 <hashTableInit>
    d1b4:	ldr	r3, [fp, #-8]
    d1b8:	add	r3, r3, #60	; 0x3c
    d1bc:	ldr	r1, [fp, #-16]
    d1c0:	mov	r0, r3
    d1c4:	bl	e768 <hashTableInit>
    d1c8:	ldr	r3, [fp, #-8]
    d1cc:	mov	r2, #0
    d1d0:	strb	r2, [r3, #131]	; 0x83
    d1d4:	ldr	r3, [fp, #-8]
    d1d8:	add	r3, r3, #132	; 0x84
    d1dc:	ldr	r1, [fp, #-16]
    d1e0:	mov	r0, r3
    d1e4:	bl	e768 <hashTableInit>
    d1e8:	ldr	r3, [fp, #-8]
    d1ec:	mov	r2, #0
    d1f0:	str	r2, [r3, #152]	; 0x98
    d1f4:	ldr	r3, [fp, #-8]
    d1f8:	mov	r2, #0
    d1fc:	str	r2, [r3, #156]	; 0x9c
    d200:	ldr	r3, [fp, #-8]
    d204:	mov	r2, #0
    d208:	strb	r2, [r3, #160]	; 0xa0
    d20c:	ldr	r3, [fp, #-8]
    d210:	mov	r2, #0
    d214:	str	r2, [r3, #184]	; 0xb8
    d218:	ldr	r3, [fp, #-8]
    d21c:	mov	r2, #0
    d220:	str	r2, [r3, #164]	; 0xa4
    d224:	ldr	r3, [fp, #-8]
    d228:	mov	r2, #0
    d22c:	str	r2, [r3, #180]	; 0xb4
    d230:	ldr	r3, [fp, #-8]
    d234:	mov	r2, #0
    d238:	str	r2, [r3, #172]	; 0xac
    d23c:	ldr	r3, [fp, #-8]
    d240:	mov	r2, #0
    d244:	str	r2, [r3, #176]	; 0xb0
    d248:	ldr	r3, [fp, #-8]
    d24c:	mov	r2, #0
    d250:	str	r2, [r3, #168]	; 0xa8
    d254:	ldr	r3, [fp, #-8]
    d258:	mov	r2, #1
    d25c:	strb	r2, [r3, #128]	; 0x80
    d260:	ldr	r3, [fp, #-8]
    d264:	mov	r2, #0
    d268:	strb	r2, [r3, #129]	; 0x81
    d26c:	ldr	r3, [fp, #-8]
    d270:	mov	r2, #0
    d274:	strb	r2, [r3, #130]	; 0x82
    d278:	ldr	r3, [fp, #-8]
    d27c:	mov	r0, r3
    d280:	sub	sp, fp, #4
    d284:	ldr	fp, [sp]
    d288:	add	sp, sp, #4
    d28c:	pop	{pc}		; (ldr pc, [sp], #4)

0000d290 <dtdReset>:
    d290:	str	fp, [sp, #-8]!
    d294:	str	lr, [sp, #4]
    d298:	add	fp, sp, #4
    d29c:	sub	sp, sp, #24
    d2a0:	str	r0, [fp, #-24]	; 0xffffffe8
    d2a4:	str	r1, [fp, #-28]	; 0xffffffe4
    d2a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d2ac:	add	r2, r3, #20
    d2b0:	sub	r3, fp, #16
    d2b4:	mov	r1, r2
    d2b8:	mov	r0, r3
    d2bc:	bl	e7c8 <hashTableIterInit>
    d2c0:	sub	r3, fp, #16
    d2c4:	mov	r0, r3
    d2c8:	bl	e81c <hashTableIterNext>
    d2cc:	str	r0, [fp, #-8]
    d2d0:	ldr	r3, [fp, #-8]
    d2d4:	cmp	r3, #0
    d2d8:	beq	d308 <dtdReset+0x78>
    d2dc:	ldr	r3, [fp, #-8]
    d2e0:	ldr	r3, [r3, #16]
    d2e4:	cmp	r3, #0
    d2e8:	beq	d2c0 <dtdReset+0x30>
    d2ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d2f0:	ldr	r3, [r3, #8]
    d2f4:	ldr	r2, [fp, #-8]
    d2f8:	ldr	r2, [r2, #20]
    d2fc:	mov	r0, r2
    d300:	blx	r3
    d304:	b	d2c0 <dtdReset+0x30>
    d308:	nop	{0}
    d30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d310:	mov	r0, r3
    d314:	bl	e624 <hashTableClear>
    d318:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d31c:	mov	r2, #0
    d320:	strb	r2, [r3, #131]	; 0x83
    d324:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d328:	add	r3, r3, #132	; 0x84
    d32c:	mov	r0, r3
    d330:	bl	e624 <hashTableClear>
    d334:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d338:	add	r3, r3, #20
    d33c:	mov	r0, r3
    d340:	bl	e624 <hashTableClear>
    d344:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d348:	add	r3, r3, #40	; 0x28
    d34c:	mov	r0, r3
    d350:	bl	e624 <hashTableClear>
    d354:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d358:	add	r3, r3, #60	; 0x3c
    d35c:	mov	r0, r3
    d360:	bl	e624 <hashTableClear>
    d364:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d368:	add	r3, r3, #80	; 0x50
    d36c:	mov	r0, r3
    d370:	bl	e8f8 <poolClear>
    d374:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d378:	add	r3, r3, #104	; 0x68
    d37c:	mov	r0, r3
    d380:	bl	e8f8 <poolClear>
    d384:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d388:	mov	r2, #0
    d38c:	str	r2, [r3, #152]	; 0x98
    d390:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d394:	mov	r2, #0
    d398:	str	r2, [r3, #156]	; 0x9c
    d39c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d3a0:	mov	r2, #0
    d3a4:	strb	r2, [r3, #160]	; 0xa0
    d3a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3ac:	ldr	r3, [r3, #8]
    d3b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d3b4:	ldr	r2, [r2, #184]	; 0xb8
    d3b8:	mov	r0, r2
    d3bc:	blx	r3
    d3c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d3c4:	mov	r2, #0
    d3c8:	str	r2, [r3, #184]	; 0xb8
    d3cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3d0:	ldr	r3, [r3, #8]
    d3d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d3d8:	ldr	r2, [r2, #164]	; 0xa4
    d3dc:	mov	r0, r2
    d3e0:	blx	r3
    d3e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d3e8:	mov	r2, #0
    d3ec:	str	r2, [r3, #164]	; 0xa4
    d3f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d3f4:	mov	r2, #0
    d3f8:	str	r2, [r3, #180]	; 0xb4
    d3fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d400:	mov	r2, #0
    d404:	str	r2, [r3, #172]	; 0xac
    d408:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d40c:	mov	r2, #0
    d410:	str	r2, [r3, #176]	; 0xb0
    d414:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d418:	mov	r2, #0
    d41c:	str	r2, [r3, #168]	; 0xa8
    d420:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d424:	mov	r2, #1
    d428:	strb	r2, [r3, #128]	; 0x80
    d42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d430:	mov	r2, #0
    d434:	strb	r2, [r3, #129]	; 0x81
    d438:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d43c:	mov	r2, #0
    d440:	strb	r2, [r3, #130]	; 0x82
    d444:	nop	{0}
    d448:	sub	sp, fp, #4
    d44c:	ldr	fp, [sp]
    d450:	add	sp, sp, #4
    d454:	pop	{pc}		; (ldr pc, [sp], #4)

0000d458 <dtdDestroy>:
    d458:	str	fp, [sp, #-8]!
    d45c:	str	lr, [sp, #4]
    d460:	add	fp, sp, #4
    d464:	sub	sp, sp, #32
    d468:	str	r0, [fp, #-24]	; 0xffffffe8
    d46c:	mov	r3, r1
    d470:	str	r2, [fp, #-32]	; 0xffffffe0
    d474:	strb	r3, [fp, #-25]	; 0xffffffe7
    d478:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d47c:	add	r2, r3, #20
    d480:	sub	r3, fp, #16
    d484:	mov	r1, r2
    d488:	mov	r0, r3
    d48c:	bl	e7c8 <hashTableIterInit>
    d490:	sub	r3, fp, #16
    d494:	mov	r0, r3
    d498:	bl	e81c <hashTableIterNext>
    d49c:	str	r0, [fp, #-8]
    d4a0:	ldr	r3, [fp, #-8]
    d4a4:	cmp	r3, #0
    d4a8:	beq	d4d8 <dtdDestroy+0x80>
    d4ac:	ldr	r3, [fp, #-8]
    d4b0:	ldr	r3, [r3, #16]
    d4b4:	cmp	r3, #0
    d4b8:	beq	d490 <dtdDestroy+0x38>
    d4bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d4c0:	ldr	r3, [r3, #8]
    d4c4:	ldr	r2, [fp, #-8]
    d4c8:	ldr	r2, [r2, #20]
    d4cc:	mov	r0, r2
    d4d0:	blx	r3
    d4d4:	b	d490 <dtdDestroy+0x38>
    d4d8:	nop	{0}
    d4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d4e0:	mov	r0, r3
    d4e4:	bl	e6cc <hashTableDestroy>
    d4e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d4ec:	add	r3, r3, #132	; 0x84
    d4f0:	mov	r0, r3
    d4f4:	bl	e6cc <hashTableDestroy>
    d4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d4fc:	add	r3, r3, #20
    d500:	mov	r0, r3
    d504:	bl	e6cc <hashTableDestroy>
    d508:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d50c:	add	r3, r3, #40	; 0x28
    d510:	mov	r0, r3
    d514:	bl	e6cc <hashTableDestroy>
    d518:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d51c:	add	r3, r3, #60	; 0x3c
    d520:	mov	r0, r3
    d524:	bl	e6cc <hashTableDestroy>
    d528:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d52c:	add	r3, r3, #80	; 0x50
    d530:	mov	r0, r3
    d534:	bl	e9b8 <poolDestroy>
    d538:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d53c:	add	r3, r3, #104	; 0x68
    d540:	mov	r0, r3
    d544:	bl	e9b8 <poolDestroy>
    d548:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    d54c:	cmp	r3, #0
    d550:	beq	d584 <dtdDestroy+0x12c>
    d554:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d558:	ldr	r3, [r3, #8]
    d55c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d560:	ldr	r2, [r2, #184]	; 0xb8
    d564:	mov	r0, r2
    d568:	blx	r3
    d56c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d570:	ldr	r3, [r3, #8]
    d574:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d578:	ldr	r2, [r2, #164]	; 0xa4
    d57c:	mov	r0, r2
    d580:	blx	r3
    d584:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d588:	ldr	r3, [r3, #8]
    d58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d590:	blx	r3
    d594:	nop	{0}
    d598:	sub	sp, fp, #4
    d59c:	ldr	fp, [sp]
    d5a0:	add	sp, sp, #4
    d5a4:	pop	{pc}		; (ldr pc, [sp], #4)

0000d5a8 <dtdCopy>:
    d5a8:	str	r4, [sp, #-12]!
    d5ac:	str	fp, [sp, #4]
    d5b0:	str	lr, [sp, #8]
    d5b4:	add	fp, sp, #8
    d5b8:	sub	sp, sp, #68	; 0x44
    d5bc:	str	r0, [fp, #-64]	; 0xffffffc0
    d5c0:	str	r1, [fp, #-68]	; 0xffffffbc
    d5c4:	str	r2, [fp, #-72]	; 0xffffffb8
    d5c8:	str	r3, [fp, #-76]	; 0xffffffb4
    d5cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d5d0:	add	r2, r3, #60	; 0x3c
    d5d4:	sub	r3, fp, #56	; 0x38
    d5d8:	mov	r1, r2
    d5dc:	mov	r0, r3
    d5e0:	bl	e7c8 <hashTableIterInit>
    d5e4:	sub	r3, fp, #56	; 0x38
    d5e8:	mov	r0, r3
    d5ec:	bl	e81c <hashTableIterNext>
    d5f0:	str	r0, [fp, #-20]	; 0xffffffec
    d5f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    d5f8:	cmp	r3, #0
    d5fc:	beq	d660 <dtdCopy+0xb8>
    d600:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d604:	add	r2, r3, #80	; 0x50
    d608:	ldr	r3, [fp, #-20]	; 0xffffffec
    d60c:	ldr	r3, [r3]
    d610:	mov	r1, r3
    d614:	mov	r0, r2
    d618:	bl	eb38 <poolCopyString>
    d61c:	str	r0, [fp, #-48]	; 0xffffffd0
    d620:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d624:	cmp	r3, #0
    d628:	bne	d634 <dtdCopy+0x8c>
    d62c:	mov	r3, #0
    d630:	b	dc74 <dtdCopy+0x6cc>
    d634:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d638:	add	r1, r3, #60	; 0x3c
    d63c:	mov	r3, #8
    d640:	ldr	r2, [fp, #-48]	; 0xffffffd0
    d644:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d648:	bl	e00c <lookup>
    d64c:	mov	r3, r0
    d650:	cmp	r3, #0
    d654:	bne	d5e4 <dtdCopy+0x3c>
    d658:	mov	r3, #0
    d65c:	b	dc74 <dtdCopy+0x6cc>
    d660:	nop	{0}
    d664:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d668:	add	r2, r3, #40	; 0x28
    d66c:	sub	r3, fp, #56	; 0x38
    d670:	mov	r1, r2
    d674:	mov	r0, r3
    d678:	bl	e7c8 <hashTableIterInit>
    d67c:	sub	r3, fp, #56	; 0x38
    d680:	mov	r0, r3
    d684:	bl	e81c <hashTableIterNext>
    d688:	str	r0, [fp, #-24]	; 0xffffffe8
    d68c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d690:	cmp	r3, #0
    d694:	beq	d800 <dtdCopy+0x258>
    d698:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d69c:	ldr	r2, [r3, #92]	; 0x5c
    d6a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d6a4:	ldr	r3, [r3, #88]	; 0x58
    d6a8:	cmp	r2, r3
    d6ac:	bne	d6cc <dtdCopy+0x124>
    d6b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d6b4:	add	r3, r3, #80	; 0x50
    d6b8:	mov	r0, r3
    d6bc:	bl	ee7c <poolGrow>
    d6c0:	mov	r3, r0
    d6c4:	cmp	r3, #0
    d6c8:	beq	d6f0 <dtdCopy+0x148>
    d6cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d6d0:	ldr	r3, [r3, #92]	; 0x5c
    d6d4:	add	r1, r3, #1
    d6d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
    d6dc:	str	r1, [r2, #92]	; 0x5c
    d6e0:	mov	r2, #0
    d6e4:	strb	r2, [r3]
    d6e8:	mov	r3, #0
    d6ec:	b	d6f4 <dtdCopy+0x14c>
    d6f0:	mov	r3, #1
    d6f4:	cmp	r3, #0
    d6f8:	beq	d704 <dtdCopy+0x15c>
    d6fc:	mov	r3, #0
    d700:	b	dc74 <dtdCopy+0x6cc>
    d704:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d708:	add	r2, r3, #80	; 0x50
    d70c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d710:	ldr	r3, [r3]
    d714:	mov	r1, r3
    d718:	mov	r0, r2
    d71c:	bl	eb38 <poolCopyString>
    d720:	str	r0, [fp, #-40]	; 0xffffffd8
    d724:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d728:	cmp	r3, #0
    d72c:	bne	d738 <dtdCopy+0x190>
    d730:	mov	r3, #0
    d734:	b	dc74 <dtdCopy+0x6cc>
    d738:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d73c:	add	r3, r3, #1
    d740:	str	r3, [fp, #-40]	; 0xffffffd8
    d744:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d748:	add	r1, r3, #40	; 0x28
    d74c:	mov	r3, #12
    d750:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d754:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d758:	bl	e00c <lookup>
    d75c:	str	r0, [fp, #-44]	; 0xffffffd4
    d760:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d764:	cmp	r3, #0
    d768:	bne	d774 <dtdCopy+0x1cc>
    d76c:	mov	r3, #0
    d770:	b	dc74 <dtdCopy+0x6cc>
    d774:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d778:	ldrb	r2, [r3, #8]
    d77c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d780:	strb	r2, [r3, #8]
    d784:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d788:	ldr	r3, [r3, #4]
    d78c:	cmp	r3, #0
    d790:	beq	d67c <dtdCopy+0xd4>
    d794:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d798:	ldrb	r2, [r3, #9]
    d79c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d7a0:	strb	r2, [r3, #9]
    d7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d7a8:	ldr	r2, [r3, #4]
    d7ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7b0:	add	r3, r3, #152	; 0x98
    d7b4:	cmp	r2, r3
    d7b8:	bne	d7d0 <dtdCopy+0x228>
    d7bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7c0:	add	r2, r3, #152	; 0x98
    d7c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d7c8:	str	r2, [r3, #4]
    d7cc:	b	d67c <dtdCopy+0xd4>
    d7d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7d4:	add	r1, r3, #60	; 0x3c
    d7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d7dc:	ldr	r3, [r3, #4]
    d7e0:	ldr	r2, [r3]
    d7e4:	mov	r3, #0
    d7e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d7ec:	bl	e00c <lookup>
    d7f0:	mov	r2, r0
    d7f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d7f8:	str	r2, [r3, #4]
    d7fc:	b	d67c <dtdCopy+0xd4>
    d800:	nop	{0}
    d804:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d808:	add	r2, r3, #20
    d80c:	sub	r3, fp, #56	; 0x38
    d810:	mov	r1, r2
    d814:	mov	r0, r3
    d818:	bl	e7c8 <hashTableIterInit>
    d81c:	sub	r3, fp, #56	; 0x38
    d820:	mov	r0, r3
    d824:	bl	e81c <hashTableIterNext>
    d828:	str	r0, [fp, #-28]	; 0xffffffe4
    d82c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d830:	cmp	r3, #0
    d834:	beq	db6c <dtdCopy+0x5c4>
    d838:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d83c:	add	r2, r3, #80	; 0x50
    d840:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d844:	ldr	r3, [r3]
    d848:	mov	r1, r3
    d84c:	mov	r0, r2
    d850:	bl	eb38 <poolCopyString>
    d854:	str	r0, [fp, #-32]	; 0xffffffe0
    d858:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d85c:	cmp	r3, #0
    d860:	bne	d86c <dtdCopy+0x2c4>
    d864:	mov	r3, #0
    d868:	b	dc74 <dtdCopy+0x6cc>
    d86c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d870:	add	r1, r3, #20
    d874:	mov	r3, #24
    d878:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d87c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d880:	bl	e00c <lookup>
    d884:	str	r0, [fp, #-36]	; 0xffffffdc
    d888:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d88c:	cmp	r3, #0
    d890:	bne	d89c <dtdCopy+0x2f4>
    d894:	mov	r3, #0
    d898:	b	dc74 <dtdCopy+0x6cc>
    d89c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8a0:	ldr	r3, [r3, #12]
    d8a4:	cmp	r3, #0
    d8a8:	beq	d90c <dtdCopy+0x364>
    d8ac:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d8b0:	ldr	r2, [r3]
    d8b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8b8:	ldr	r3, [r3, #12]
    d8bc:	mov	r1, r3
    d8c0:	mov	r3, r1
    d8c4:	lsl	r3, r3, #1
    d8c8:	add	r3, r3, r1
    d8cc:	lsl	r3, r3, #2
    d8d0:	mov	r0, r3
    d8d4:	blx	r2
    d8d8:	mov	r2, r0
    d8dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d8e0:	str	r2, [r3, #20]
    d8e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d8e8:	ldr	r3, [r3, #20]
    d8ec:	cmp	r3, #0
    d8f0:	bne	d90c <dtdCopy+0x364>
    d8f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d8f8:	ldr	r3, [r3, #8]
    d8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    d900:	blx	r3
    d904:	mov	r3, #0
    d908:	b	dc74 <dtdCopy+0x6cc>
    d90c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d910:	ldr	r3, [r3, #8]
    d914:	cmp	r3, #0
    d918:	beq	d948 <dtdCopy+0x3a0>
    d91c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d920:	add	r1, r3, #40	; 0x28
    d924:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d928:	ldr	r3, [r3, #8]
    d92c:	ldr	r2, [r3]
    d930:	mov	r3, #0
    d934:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d938:	bl	e00c <lookup>
    d93c:	mov	r2, r0
    d940:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d944:	str	r2, [r3, #8]
    d948:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d94c:	ldr	r2, [r3, #12]
    d950:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d954:	str	r2, [r3, #12]
    d958:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d95c:	ldr	r2, [r3, #12]
    d960:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d964:	str	r2, [r3, #16]
    d968:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d96c:	ldr	r3, [r3, #4]
    d970:	cmp	r3, #0
    d974:	beq	d9a4 <dtdCopy+0x3fc>
    d978:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d97c:	add	r1, r3, #60	; 0x3c
    d980:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d984:	ldr	r3, [r3, #4]
    d988:	ldr	r2, [r3]
    d98c:	mov	r3, #0
    d990:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d994:	bl	e00c <lookup>
    d998:	mov	r2, r0
    d99c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d9a0:	str	r2, [r3, #4]
    d9a4:	mov	r3, #0
    d9a8:	str	r3, [fp, #-16]
    d9ac:	b	db54 <dtdCopy+0x5ac>
    d9b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d9b4:	add	r0, r3, #40	; 0x28
    d9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d9bc:	ldr	r1, [r3, #20]
    d9c0:	ldr	r2, [fp, #-16]
    d9c4:	mov	r3, r2
    d9c8:	lsl	r3, r3, #1
    d9cc:	add	r3, r3, r2
    d9d0:	lsl	r3, r3, #2
    d9d4:	add	r3, r1, r3
    d9d8:	ldr	r3, [r3]
    d9dc:	ldr	ip, [r3]
    d9e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d9e4:	ldr	r1, [r3, #20]
    d9e8:	ldr	r2, [fp, #-16]
    d9ec:	mov	r3, r2
    d9f0:	lsl	r3, r3, #1
    d9f4:	add	r3, r3, r2
    d9f8:	lsl	r3, r3, #2
    d9fc:	add	r4, r1, r3
    da00:	mov	r3, #0
    da04:	mov	r2, ip
    da08:	mov	r1, r0
    da0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    da10:	bl	e00c <lookup>
    da14:	mov	r3, r0
    da18:	str	r3, [r4]
    da1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da20:	ldr	r1, [r3, #20]
    da24:	ldr	r2, [fp, #-16]
    da28:	mov	r3, r2
    da2c:	lsl	r3, r3, #1
    da30:	add	r3, r3, r2
    da34:	lsl	r3, r3, #2
    da38:	add	r1, r1, r3
    da3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    da40:	ldr	r0, [r3, #20]
    da44:	ldr	r2, [fp, #-16]
    da48:	mov	r3, r2
    da4c:	lsl	r3, r3, #1
    da50:	add	r3, r3, r2
    da54:	lsl	r3, r3, #2
    da58:	add	r3, r0, r3
    da5c:	ldrb	r2, [r1, #4]
    da60:	strb	r2, [r3, #4]
    da64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da68:	ldr	r1, [r3, #20]
    da6c:	ldr	r2, [fp, #-16]
    da70:	mov	r3, r2
    da74:	lsl	r3, r3, #1
    da78:	add	r3, r3, r2
    da7c:	lsl	r3, r3, #2
    da80:	add	r3, r1, r3
    da84:	ldr	r3, [r3, #8]
    da88:	cmp	r3, #0
    da8c:	beq	db20 <dtdCopy+0x578>
    da90:	ldr	r3, [fp, #-68]	; 0xffffffbc
    da94:	add	r0, r3, #80	; 0x50
    da98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da9c:	ldr	r1, [r3, #20]
    daa0:	ldr	r2, [fp, #-16]
    daa4:	mov	r3, r2
    daa8:	lsl	r3, r3, #1
    daac:	add	r3, r3, r2
    dab0:	lsl	r3, r3, #2
    dab4:	add	r3, r1, r3
    dab8:	ldr	ip, [r3, #8]
    dabc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dac0:	ldr	r1, [r3, #20]
    dac4:	ldr	r2, [fp, #-16]
    dac8:	mov	r3, r2
    dacc:	lsl	r3, r3, #1
    dad0:	add	r3, r3, r2
    dad4:	lsl	r3, r3, #2
    dad8:	add	r4, r1, r3
    dadc:	mov	r1, ip
    dae0:	bl	eb38 <poolCopyString>
    dae4:	mov	r3, r0
    dae8:	str	r3, [r4, #8]
    daec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    daf0:	ldr	r1, [r3, #20]
    daf4:	ldr	r2, [fp, #-16]
    daf8:	mov	r3, r2
    dafc:	lsl	r3, r3, #1
    db00:	add	r3, r3, r2
    db04:	lsl	r3, r3, #2
    db08:	add	r3, r1, r3
    db0c:	ldr	r3, [r3, #8]
    db10:	cmp	r3, #0
    db14:	bne	db48 <dtdCopy+0x5a0>
    db18:	mov	r3, #0
    db1c:	b	dc74 <dtdCopy+0x6cc>
    db20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    db24:	ldr	r1, [r3, #20]
    db28:	ldr	r2, [fp, #-16]
    db2c:	mov	r3, r2
    db30:	lsl	r3, r3, #1
    db34:	add	r3, r3, r2
    db38:	lsl	r3, r3, #2
    db3c:	add	r3, r1, r3
    db40:	mov	r2, #0
    db44:	str	r2, [r3, #8]
    db48:	ldr	r3, [fp, #-16]
    db4c:	add	r3, r3, #1
    db50:	str	r3, [fp, #-16]
    db54:	ldr	r3, [fp, #-36]	; 0xffffffdc
    db58:	ldr	r3, [r3, #12]
    db5c:	ldr	r2, [fp, #-16]
    db60:	cmp	r2, r3
    db64:	blt	d9b0 <dtdCopy+0x408>
    db68:	b	d81c <dtdCopy+0x274>
    db6c:	nop	{0}
    db70:	ldr	r1, [fp, #-68]	; 0xffffffbc
    db74:	ldr	r3, [fp, #-68]	; 0xffffffbc
    db78:	add	r2, r3, #80	; 0x50
    db7c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    db80:	ldr	r0, [fp, #-64]	; 0xffffffc0
    db84:	bl	dc8c <copyEntityTable>
    db88:	mov	r3, r0
    db8c:	cmp	r3, #0
    db90:	bne	db9c <dtdCopy+0x5f4>
    db94:	mov	r3, #0
    db98:	b	dc74 <dtdCopy+0x6cc>
    db9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dba0:	add	r1, r3, #132	; 0x84
    dba4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dba8:	add	r2, r3, #80	; 0x50
    dbac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dbb0:	add	r3, r3, #132	; 0x84
    dbb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dbb8:	bl	dc8c <copyEntityTable>
    dbbc:	mov	r3, r0
    dbc0:	cmp	r3, #0
    dbc4:	bne	dbd0 <dtdCopy+0x628>
    dbc8:	mov	r3, #0
    dbcc:	b	dc74 <dtdCopy+0x6cc>
    dbd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dbd4:	ldrb	r2, [r3, #131]	; 0x83
    dbd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dbdc:	strb	r2, [r3, #131]	; 0x83
    dbe0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dbe4:	ldrb	r2, [r3, #128]	; 0x80
    dbe8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dbec:	strb	r2, [r3, #128]	; 0x80
    dbf0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dbf4:	ldrb	r2, [r3, #129]	; 0x81
    dbf8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dbfc:	strb	r2, [r3, #129]	; 0x81
    dc00:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc04:	ldrb	r2, [r3, #130]	; 0x82
    dc08:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc0c:	strb	r2, [r3, #130]	; 0x82
    dc10:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc14:	ldrb	r2, [r3, #160]	; 0xa0
    dc18:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc1c:	strb	r2, [r3, #160]	; 0xa0
    dc20:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc24:	ldr	r2, [r3, #164]	; 0xa4
    dc28:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc2c:	str	r2, [r3, #164]	; 0xa4
    dc30:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc34:	ldr	r2, [r3, #168]	; 0xa8
    dc38:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc3c:	str	r2, [r3, #168]	; 0xa8
    dc40:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc44:	ldr	r2, [r3, #172]	; 0xac
    dc48:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc4c:	str	r2, [r3, #172]	; 0xac
    dc50:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc54:	ldr	r2, [r3, #180]	; 0xb4
    dc58:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc5c:	str	r2, [r3, #180]	; 0xb4
    dc60:	ldr	r3, [fp, #-72]	; 0xffffffb8
    dc64:	ldr	r2, [r3, #184]	; 0xb8
    dc68:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc6c:	str	r2, [r3, #184]	; 0xb8
    dc70:	mov	r3, #1
    dc74:	mov	r0, r3
    dc78:	sub	sp, fp, #8
    dc7c:	ldr	r4, [sp]
    dc80:	ldr	fp, [sp, #4]
    dc84:	add	sp, sp, #8
    dc88:	pop	{pc}		; (ldr pc, [sp], #4)

0000dc8c <copyEntityTable>:
    dc8c:	str	fp, [sp, #-8]!
    dc90:	str	lr, [sp, #4]
    dc94:	add	fp, sp, #4
    dc98:	sub	sp, sp, #56	; 0x38
    dc9c:	str	r0, [fp, #-48]	; 0xffffffd0
    dca0:	str	r1, [fp, #-52]	; 0xffffffcc
    dca4:	str	r2, [fp, #-56]	; 0xffffffc8
    dca8:	str	r3, [fp, #-60]	; 0xffffffc4
    dcac:	mov	r3, #0
    dcb0:	str	r3, [fp, #-8]
    dcb4:	mov	r3, #0
    dcb8:	str	r3, [fp, #-12]
    dcbc:	sub	r3, fp, #44	; 0x2c
    dcc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    dcc4:	mov	r0, r3
    dcc8:	bl	e7c8 <hashTableIterInit>
    dccc:	sub	r3, fp, #44	; 0x2c
    dcd0:	mov	r0, r3
    dcd4:	bl	e81c <hashTableIterNext>
    dcd8:	str	r0, [fp, #-16]
    dcdc:	ldr	r3, [fp, #-16]
    dce0:	cmp	r3, #0
    dce4:	beq	df0c <copyEntityTable+0x280>
    dce8:	ldr	r3, [fp, #-16]
    dcec:	ldr	r3, [r3]
    dcf0:	mov	r1, r3
    dcf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    dcf8:	bl	eb38 <poolCopyString>
    dcfc:	str	r0, [fp, #-20]	; 0xffffffec
    dd00:	ldr	r3, [fp, #-20]	; 0xffffffec
    dd04:	cmp	r3, #0
    dd08:	bne	dd14 <copyEntityTable+0x88>
    dd0c:	mov	r3, #0
    dd10:	b	df14 <copyEntityTable+0x288>
    dd14:	mov	r3, #36	; 0x24
    dd18:	ldr	r2, [fp, #-20]	; 0xffffffec
    dd1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    dd20:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dd24:	bl	e00c <lookup>
    dd28:	str	r0, [fp, #-24]	; 0xffffffe8
    dd2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dd30:	cmp	r3, #0
    dd34:	bne	dd40 <copyEntityTable+0xb4>
    dd38:	mov	r3, #0
    dd3c:	b	df14 <copyEntityTable+0x288>
    dd40:	ldr	r3, [fp, #-16]
    dd44:	ldr	r3, [r3, #16]
    dd48:	cmp	r3, #0
    dd4c:	beq	de50 <copyEntityTable+0x1c4>
    dd50:	ldr	r3, [fp, #-16]
    dd54:	ldr	r3, [r3, #16]
    dd58:	mov	r1, r3
    dd5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    dd60:	bl	eb38 <poolCopyString>
    dd64:	str	r0, [fp, #-28]	; 0xffffffe4
    dd68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dd6c:	cmp	r3, #0
    dd70:	bne	dd7c <copyEntityTable+0xf0>
    dd74:	mov	r3, #0
    dd78:	b	df14 <copyEntityTable+0x288>
    dd7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dd80:	ldr	r2, [fp, #-28]	; 0xffffffe4
    dd84:	str	r2, [r3, #16]
    dd88:	ldr	r3, [fp, #-16]
    dd8c:	ldr	r3, [r3, #20]
    dd90:	cmp	r3, #0
    dd94:	beq	de04 <copyEntityTable+0x178>
    dd98:	ldr	r3, [fp, #-16]
    dd9c:	ldr	r3, [r3, #20]
    dda0:	ldr	r2, [fp, #-8]
    dda4:	cmp	r2, r3
    dda8:	bne	ddbc <copyEntityTable+0x130>
    ddac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddb0:	ldr	r2, [fp, #-12]
    ddb4:	str	r2, [r3, #20]
    ddb8:	b	de04 <copyEntityTable+0x178>
    ddbc:	ldr	r3, [fp, #-16]
    ddc0:	ldr	r3, [r3, #20]
    ddc4:	str	r3, [fp, #-8]
    ddc8:	ldr	r1, [fp, #-8]
    ddcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    ddd0:	bl	eb38 <poolCopyString>
    ddd4:	str	r0, [fp, #-28]	; 0xffffffe4
    ddd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dddc:	cmp	r3, #0
    dde0:	bne	ddec <copyEntityTable+0x160>
    dde4:	mov	r3, #0
    dde8:	b	df14 <copyEntityTable+0x288>
    ddec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddf0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ddf4:	str	r2, [r3, #20]
    ddf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ddfc:	ldr	r3, [r3, #20]
    de00:	str	r3, [fp, #-12]
    de04:	ldr	r3, [fp, #-16]
    de08:	ldr	r3, [r3, #24]
    de0c:	cmp	r3, #0
    de10:	beq	dea0 <copyEntityTable+0x214>
    de14:	ldr	r3, [fp, #-16]
    de18:	ldr	r3, [r3, #24]
    de1c:	mov	r1, r3
    de20:	ldr	r0, [fp, #-56]	; 0xffffffc8
    de24:	bl	eb38 <poolCopyString>
    de28:	str	r0, [fp, #-28]	; 0xffffffe4
    de2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    de30:	cmp	r3, #0
    de34:	bne	de40 <copyEntityTable+0x1b4>
    de38:	mov	r3, #0
    de3c:	b	df14 <copyEntityTable+0x288>
    de40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    de44:	ldr	r2, [fp, #-28]	; 0xffffffe4
    de48:	str	r2, [r3, #24]
    de4c:	b	dea0 <copyEntityTable+0x214>
    de50:	ldr	r3, [fp, #-16]
    de54:	ldr	r1, [r3, #4]
    de58:	ldr	r3, [fp, #-16]
    de5c:	ldr	r3, [r3, #8]
    de60:	mov	r2, r3
    de64:	ldr	r0, [fp, #-56]	; 0xffffffc8
    de68:	bl	ec04 <poolCopyStringN>
    de6c:	str	r0, [fp, #-32]	; 0xffffffe0
    de70:	ldr	r3, [fp, #-32]	; 0xffffffe0
    de74:	cmp	r3, #0
    de78:	bne	de84 <copyEntityTable+0x1f8>
    de7c:	mov	r3, #0
    de80:	b	df14 <copyEntityTable+0x288>
    de84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    de88:	ldr	r2, [fp, #-32]	; 0xffffffe0
    de8c:	str	r2, [r3, #4]
    de90:	ldr	r3, [fp, #-16]
    de94:	ldr	r2, [r3, #8]
    de98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    de9c:	str	r2, [r3, #8]
    dea0:	ldr	r3, [fp, #-16]
    dea4:	ldr	r3, [r3, #28]
    dea8:	cmp	r3, #0
    deac:	beq	dee8 <copyEntityTable+0x25c>
    deb0:	ldr	r3, [fp, #-16]
    deb4:	ldr	r3, [r3, #28]
    deb8:	mov	r1, r3
    debc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    dec0:	bl	eb38 <poolCopyString>
    dec4:	str	r0, [fp, #-36]	; 0xffffffdc
    dec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    decc:	cmp	r3, #0
    ded0:	bne	dedc <copyEntityTable+0x250>
    ded4:	mov	r3, #0
    ded8:	b	df14 <copyEntityTable+0x288>
    dedc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dee0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    dee4:	str	r2, [r3, #28]
    dee8:	ldr	r3, [fp, #-16]
    deec:	ldrb	r2, [r3, #33]	; 0x21
    def0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    def4:	strb	r2, [r3, #33]	; 0x21
    def8:	ldr	r3, [fp, #-16]
    defc:	ldrb	r2, [r3, #34]	; 0x22
    df00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    df04:	strb	r2, [r3, #34]	; 0x22
    df08:	b	dccc <copyEntityTable+0x40>
    df0c:	nop	{0}
    df10:	mov	r3, #1
    df14:	mov	r0, r3
    df18:	sub	sp, fp, #4
    df1c:	ldr	fp, [sp]
    df20:	add	sp, sp, #4
    df24:	pop	{pc}		; (ldr pc, [sp], #4)

0000df28 <keyeq>:
    df28:	push	{fp}		; (str fp, [sp, #-4]!)
    df2c:	add	fp, sp, #0
    df30:	sub	sp, sp, #12
    df34:	str	r0, [fp, #-8]
    df38:	str	r1, [fp, #-12]
    df3c:	b	df70 <keyeq+0x48>
    df40:	ldr	r3, [fp, #-8]
    df44:	ldrb	r3, [r3]
    df48:	cmp	r3, #0
    df4c:	bne	df58 <keyeq+0x30>
    df50:	mov	r3, #1
    df54:	b	df8c <keyeq+0x64>
    df58:	ldr	r3, [fp, #-8]
    df5c:	add	r3, r3, #1
    df60:	str	r3, [fp, #-8]
    df64:	ldr	r3, [fp, #-12]
    df68:	add	r3, r3, #1
    df6c:	str	r3, [fp, #-12]
    df70:	ldr	r3, [fp, #-8]
    df74:	ldrb	r2, [r3]
    df78:	ldr	r3, [fp, #-12]
    df7c:	ldrb	r3, [r3]
    df80:	cmp	r2, r3
    df84:	beq	df40 <keyeq+0x18>
    df88:	mov	r3, #0
    df8c:	mov	r0, r3
    df90:	add	sp, fp, #0
    df94:	pop	{fp}		; (ldr fp, [sp], #4)
    df98:	bx	lr

0000df9c <hash>:
    df9c:	push	{fp}		; (str fp, [sp, #-4]!)
    dfa0:	add	fp, sp, #0
    dfa4:	sub	sp, sp, #20
    dfa8:	str	r0, [fp, #-16]
    dfac:	str	r1, [fp, #-20]	; 0xffffffec
    dfb0:	ldr	r3, [fp, #-16]
    dfb4:	ldr	r3, [r3, #512]	; 0x200
    dfb8:	str	r3, [fp, #-8]
    dfbc:	b	dfe8 <hash+0x4c>
    dfc0:	ldr	r2, [fp, #-8]
    dfc4:	movw	r3, #16963	; 0x4243
    dfc8:	movt	r3, #15
    dfcc:	mul	r2, r3, r2
    dfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
    dfd4:	add	r1, r3, #1
    dfd8:	str	r1, [fp, #-20]	; 0xffffffec
    dfdc:	ldrb	r3, [r3]
    dfe0:	eor	r3, r3, r2
    dfe4:	str	r3, [fp, #-8]
    dfe8:	ldr	r3, [fp, #-20]	; 0xffffffec
    dfec:	ldrb	r3, [r3]
    dff0:	cmp	r3, #0
    dff4:	bne	dfc0 <hash+0x24>
    dff8:	ldr	r3, [fp, #-8]
    dffc:	mov	r0, r3
    e000:	add	sp, fp, #0
    e004:	pop	{fp}		; (ldr fp, [sp], #4)
    e008:	bx	lr

0000e00c <lookup>:
    e00c:	str	r4, [sp, #-12]!
    e010:	str	fp, [sp, #4]
    e014:	str	lr, [sp, #8]
    e018:	add	fp, sp, #8
    e01c:	sub	sp, sp, #68	; 0x44
    e020:	str	r0, [fp, #-64]	; 0xffffffc0
    e024:	str	r1, [fp, #-68]	; 0xffffffbc
    e028:	str	r2, [fp, #-72]	; 0xffffffb8
    e02c:	str	r3, [fp, #-76]	; 0xffffffb4
    e030:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e034:	ldr	r3, [r3, #8]
    e038:	cmp	r3, #0
    e03c:	bne	e100 <lookup+0xf4>
    e040:	ldr	r3, [fp, #-76]	; 0xffffffb4
    e044:	cmp	r3, #0
    e048:	bne	e054 <lookup+0x48>
    e04c:	mov	r3, #0
    e050:	b	e60c <lookup+0x600>
    e054:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e058:	mov	r2, #6
    e05c:	strb	r2, [r3, #4]
    e060:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e064:	mov	r2, #64	; 0x40
    e068:	str	r2, [r3, #8]
    e06c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e070:	ldr	r3, [r3, #8]
    e074:	lsl	r3, r3, #2
    e078:	str	r3, [fp, #-28]	; 0xffffffe4
    e07c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e080:	ldr	r3, [r3, #16]
    e084:	ldr	r3, [r3]
    e088:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e08c:	blx	r3
    e090:	mov	r2, r0
    e094:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e098:	str	r2, [r3]
    e09c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e0a0:	ldr	r3, [r3]
    e0a4:	cmp	r3, #0
    e0a8:	bne	e0c0 <lookup+0xb4>
    e0ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e0b0:	mov	r2, #0
    e0b4:	str	r2, [r3, #8]
    e0b8:	mov	r3, #0
    e0bc:	b	e60c <lookup+0x600>
    e0c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e0c4:	ldr	r3, [r3]
    e0c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    e0cc:	mov	r1, #0
    e0d0:	mov	r0, r3
    e0d4:	bl	0 <memset>
    e0d8:	ldr	r1, [fp, #-72]	; 0xffffffb8
    e0dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e0e0:	bl	df9c <hash>
    e0e4:	mov	r2, r0
    e0e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e0ec:	ldr	r3, [r3, #8]
    e0f0:	sub	r3, r3, #1
    e0f4:	and	r3, r3, r2
    e0f8:	str	r3, [fp, #-16]
    e0fc:	b	e540 <lookup+0x534>
    e100:	ldr	r1, [fp, #-72]	; 0xffffffb8
    e104:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e108:	bl	df9c <hash>
    e10c:	str	r0, [fp, #-32]	; 0xffffffe0
    e110:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e114:	ldr	r3, [r3, #8]
    e118:	sub	r3, r3, #1
    e11c:	str	r3, [fp, #-36]	; 0xffffffdc
    e120:	mov	r3, #0
    e124:	strb	r3, [fp, #-17]	; 0xffffffef
    e128:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e12c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e130:	and	r3, r3, r2
    e134:	str	r3, [fp, #-16]
    e138:	b	e218 <lookup+0x20c>
    e13c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e140:	ldr	r2, [r3]
    e144:	ldr	r3, [fp, #-16]
    e148:	lsl	r3, r3, #2
    e14c:	add	r3, r2, r3
    e150:	ldr	r3, [r3]
    e154:	ldr	r3, [r3]
    e158:	mov	r1, r3
    e15c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    e160:	bl	df28 <keyeq>
    e164:	mov	r3, r0
    e168:	cmp	r3, #0
    e16c:	beq	e18c <lookup+0x180>
    e170:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e174:	ldr	r2, [r3]
    e178:	ldr	r3, [fp, #-16]
    e17c:	lsl	r3, r3, #2
    e180:	add	r3, r2, r3
    e184:	ldr	r3, [r3]
    e188:	b	e60c <lookup+0x600>
    e18c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e190:	cmp	r3, #0
    e194:	bne	e1d8 <lookup+0x1cc>
    e198:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e19c:	mvn	r2, r3
    e1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e1a4:	and	r2, r2, r3
    e1a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1ac:	ldrb	r3, [r3, #4]
    e1b0:	sub	r3, r3, #1
    e1b4:	lsr	r3, r2, r3
    e1b8:	uxtb	r2, r3
    e1bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e1c0:	lsr	r3, r3, #2
    e1c4:	uxtb	r3, r3
    e1c8:	and	r3, r3, r2
    e1cc:	uxtb	r3, r3
    e1d0:	orr	r3, r3, #1
    e1d4:	strb	r3, [fp, #-17]	; 0xffffffef
    e1d8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e1dc:	ldr	r2, [fp, #-16]
    e1e0:	cmp	r2, r3
    e1e4:	bcs	e208 <lookup+0x1fc>
    e1e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1ec:	ldr	r2, [r3, #8]
    e1f0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e1f4:	sub	r3, r2, r3
    e1f8:	ldr	r2, [fp, #-16]
    e1fc:	add	r3, r2, r3
    e200:	str	r3, [fp, #-16]
    e204:	b	e218 <lookup+0x20c>
    e208:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e20c:	ldr	r2, [fp, #-16]
    e210:	sub	r3, r2, r3
    e214:	str	r3, [fp, #-16]
    e218:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e21c:	ldr	r2, [r3]
    e220:	ldr	r3, [fp, #-16]
    e224:	lsl	r3, r3, #2
    e228:	add	r3, r2, r3
    e22c:	ldr	r3, [r3]
    e230:	cmp	r3, #0
    e234:	bne	e13c <lookup+0x130>
    e238:	ldr	r3, [fp, #-76]	; 0xffffffb4
    e23c:	cmp	r3, #0
    e240:	bne	e24c <lookup+0x240>
    e244:	mov	r3, #0
    e248:	b	e60c <lookup+0x600>
    e24c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e250:	ldr	r2, [r3, #12]
    e254:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e258:	ldrb	r3, [r3, #4]
    e25c:	sub	r3, r3, #1
    e260:	lsr	r3, r2, r3
    e264:	cmp	r3, #0
    e268:	beq	e540 <lookup+0x534>
    e26c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e270:	ldrb	r3, [r3, #4]
    e274:	add	r3, r3, #1
    e278:	strb	r3, [fp, #-37]	; 0xffffffdb
    e27c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    e280:	mov	r2, #1
    e284:	lsl	r3, r2, r3
    e288:	str	r3, [fp, #-44]	; 0xffffffd4
    e28c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e290:	sub	r3, r3, #1
    e294:	str	r3, [fp, #-48]	; 0xffffffd0
    e298:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e29c:	lsl	r3, r3, #2
    e2a0:	str	r3, [fp, #-52]	; 0xffffffcc
    e2a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e2a8:	ldr	r3, [r3, #16]
    e2ac:	ldr	r3, [r3]
    e2b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    e2b4:	blx	r3
    e2b8:	str	r0, [fp, #-56]	; 0xffffffc8
    e2bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    e2c0:	cmp	r3, #0
    e2c4:	bne	e2d0 <lookup+0x2c4>
    e2c8:	mov	r3, #0
    e2cc:	b	e60c <lookup+0x600>
    e2d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    e2d4:	mov	r1, #0
    e2d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    e2dc:	bl	0 <memset>
    e2e0:	mov	r3, #0
    e2e4:	str	r3, [fp, #-16]
    e2e8:	b	e42c <lookup+0x420>
    e2ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e2f0:	ldr	r2, [r3]
    e2f4:	ldr	r3, [fp, #-16]
    e2f8:	lsl	r3, r3, #2
    e2fc:	add	r3, r2, r3
    e300:	ldr	r3, [r3]
    e304:	cmp	r3, #0
    e308:	beq	e420 <lookup+0x414>
    e30c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e310:	ldr	r2, [r3]
    e314:	ldr	r3, [fp, #-16]
    e318:	lsl	r3, r3, #2
    e31c:	add	r3, r2, r3
    e320:	ldr	r3, [r3]
    e324:	ldr	r3, [r3]
    e328:	mov	r1, r3
    e32c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e330:	bl	df9c <hash>
    e334:	str	r0, [fp, #-60]	; 0xffffffc4
    e338:	ldr	r2, [fp, #-60]	; 0xffffffc4
    e33c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e340:	and	r3, r3, r2
    e344:	str	r3, [fp, #-24]	; 0xffffffe8
    e348:	mov	r3, #0
    e34c:	strb	r3, [fp, #-17]	; 0xffffffef
    e350:	b	e3d8 <lookup+0x3cc>
    e354:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e358:	cmp	r3, #0
    e35c:	bne	e39c <lookup+0x390>
    e360:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e364:	mvn	r2, r3
    e368:	ldr	r3, [fp, #-60]	; 0xffffffc4
    e36c:	and	r2, r2, r3
    e370:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    e374:	sub	r3, r3, #1
    e378:	lsr	r3, r2, r3
    e37c:	uxtb	r2, r3
    e380:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e384:	lsr	r3, r3, #2
    e388:	uxtb	r3, r3
    e38c:	and	r3, r3, r2
    e390:	uxtb	r3, r3
    e394:	orr	r3, r3, #1
    e398:	strb	r3, [fp, #-17]	; 0xffffffef
    e39c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e3a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3a4:	cmp	r2, r3
    e3a8:	bcs	e3c8 <lookup+0x3bc>
    e3ac:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e3b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e3b4:	sub	r3, r2, r3
    e3b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3bc:	add	r3, r2, r3
    e3c0:	str	r3, [fp, #-24]	; 0xffffffe8
    e3c4:	b	e3d8 <lookup+0x3cc>
    e3c8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e3cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3d0:	sub	r3, r2, r3
    e3d4:	str	r3, [fp, #-24]	; 0xffffffe8
    e3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e3dc:	lsl	r3, r3, #2
    e3e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    e3e4:	add	r3, r2, r3
    e3e8:	ldr	r3, [r3]
    e3ec:	cmp	r3, #0
    e3f0:	bne	e354 <lookup+0x348>
    e3f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e3f8:	ldr	r2, [r3]
    e3fc:	ldr	r3, [fp, #-16]
    e400:	lsl	r3, r3, #2
    e404:	add	r2, r2, r3
    e408:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e40c:	lsl	r3, r3, #2
    e410:	ldr	r1, [fp, #-56]	; 0xffffffc8
    e414:	add	r3, r1, r3
    e418:	ldr	r2, [r2]
    e41c:	str	r2, [r3]
    e420:	ldr	r3, [fp, #-16]
    e424:	add	r3, r3, #1
    e428:	str	r3, [fp, #-16]
    e42c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e430:	ldr	r3, [r3, #8]
    e434:	ldr	r2, [fp, #-16]
    e438:	cmp	r2, r3
    e43c:	bcc	e2ec <lookup+0x2e0>
    e440:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e444:	ldr	r3, [r3, #16]
    e448:	ldr	r3, [r3, #8]
    e44c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    e450:	ldr	r2, [r2]
    e454:	mov	r0, r2
    e458:	blx	r3
    e45c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e460:	ldr	r2, [fp, #-56]	; 0xffffffc8
    e464:	str	r2, [r3]
    e468:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e46c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
    e470:	strb	r2, [r3, #4]
    e474:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e478:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e47c:	str	r2, [r3, #8]
    e480:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e484:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e488:	and	r3, r3, r2
    e48c:	str	r3, [fp, #-16]
    e490:	mov	r3, #0
    e494:	strb	r3, [fp, #-17]	; 0xffffffef
    e498:	b	e520 <lookup+0x514>
    e49c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e4a0:	cmp	r3, #0
    e4a4:	bne	e4e4 <lookup+0x4d8>
    e4a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e4ac:	mvn	r2, r3
    e4b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e4b4:	and	r2, r2, r3
    e4b8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    e4bc:	sub	r3, r3, #1
    e4c0:	lsr	r3, r2, r3
    e4c4:	uxtb	r2, r3
    e4c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e4cc:	lsr	r3, r3, #2
    e4d0:	uxtb	r3, r3
    e4d4:	and	r3, r3, r2
    e4d8:	uxtb	r3, r3
    e4dc:	orr	r3, r3, #1
    e4e0:	strb	r3, [fp, #-17]	; 0xffffffef
    e4e4:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e4e8:	ldr	r2, [fp, #-16]
    e4ec:	cmp	r2, r3
    e4f0:	bcs	e510 <lookup+0x504>
    e4f4:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e4f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e4fc:	sub	r3, r2, r3
    e500:	ldr	r2, [fp, #-16]
    e504:	add	r3, r2, r3
    e508:	str	r3, [fp, #-16]
    e50c:	b	e520 <lookup+0x514>
    e510:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e514:	ldr	r2, [fp, #-16]
    e518:	sub	r3, r2, r3
    e51c:	str	r3, [fp, #-16]
    e520:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e524:	ldr	r2, [r3]
    e528:	ldr	r3, [fp, #-16]
    e52c:	lsl	r3, r3, #2
    e530:	add	r3, r2, r3
    e534:	ldr	r3, [r3]
    e538:	cmp	r3, #0
    e53c:	bne	e49c <lookup+0x490>
    e540:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e544:	ldr	r3, [r3, #16]
    e548:	ldr	r3, [r3]
    e54c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    e550:	ldr	r1, [r2]
    e554:	ldr	r2, [fp, #-16]
    e558:	lsl	r2, r2, #2
    e55c:	add	r4, r1, r2
    e560:	ldr	r0, [fp, #-76]	; 0xffffffb4
    e564:	blx	r3
    e568:	mov	r3, r0
    e56c:	str	r3, [r4]
    e570:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e574:	ldr	r2, [r3]
    e578:	ldr	r3, [fp, #-16]
    e57c:	lsl	r3, r3, #2
    e580:	add	r3, r2, r3
    e584:	ldr	r3, [r3]
    e588:	cmp	r3, #0
    e58c:	bne	e598 <lookup+0x58c>
    e590:	mov	r3, #0
    e594:	b	e60c <lookup+0x600>
    e598:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e59c:	ldr	r2, [r3]
    e5a0:	ldr	r3, [fp, #-16]
    e5a4:	lsl	r3, r3, #2
    e5a8:	add	r3, r2, r3
    e5ac:	ldr	r3, [r3]
    e5b0:	ldr	r2, [fp, #-76]	; 0xffffffb4
    e5b4:	mov	r1, #0
    e5b8:	mov	r0, r3
    e5bc:	bl	0 <memset>
    e5c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e5c4:	ldr	r2, [r3]
    e5c8:	ldr	r3, [fp, #-16]
    e5cc:	lsl	r3, r3, #2
    e5d0:	add	r3, r2, r3
    e5d4:	ldr	r3, [r3]
    e5d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    e5dc:	str	r2, [r3]
    e5e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e5e4:	ldr	r3, [r3, #12]
    e5e8:	add	r2, r3, #1
    e5ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e5f0:	str	r2, [r3, #12]
    e5f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e5f8:	ldr	r2, [r3]
    e5fc:	ldr	r3, [fp, #-16]
    e600:	lsl	r3, r3, #2
    e604:	add	r3, r2, r3
    e608:	ldr	r3, [r3]
    e60c:	mov	r0, r3
    e610:	sub	sp, fp, #8
    e614:	ldr	r4, [sp]
    e618:	ldr	fp, [sp, #4]
    e61c:	add	sp, sp, #8
    e620:	pop	{pc}		; (ldr pc, [sp], #4)

0000e624 <hashTableClear>:
    e624:	str	fp, [sp, #-8]!
    e628:	str	lr, [sp, #4]
    e62c:	add	fp, sp, #4
    e630:	sub	sp, sp, #16
    e634:	str	r0, [fp, #-16]
    e638:	mov	r3, #0
    e63c:	str	r3, [fp, #-8]
    e640:	b	e698 <hashTableClear+0x74>
    e644:	ldr	r3, [fp, #-16]
    e648:	ldr	r3, [r3, #16]
    e64c:	ldr	r3, [r3, #8]
    e650:	ldr	r2, [fp, #-16]
    e654:	ldr	r1, [r2]
    e658:	ldr	r2, [fp, #-8]
    e65c:	lsl	r2, r2, #2
    e660:	add	r2, r1, r2
    e664:	ldr	r2, [r2]
    e668:	mov	r0, r2
    e66c:	blx	r3
    e670:	ldr	r3, [fp, #-16]
    e674:	ldr	r2, [r3]
    e678:	ldr	r3, [fp, #-8]
    e67c:	lsl	r3, r3, #2
    e680:	add	r3, r2, r3
    e684:	mov	r2, #0
    e688:	str	r2, [r3]
    e68c:	ldr	r3, [fp, #-8]
    e690:	add	r3, r3, #1
    e694:	str	r3, [fp, #-8]
    e698:	ldr	r3, [fp, #-16]
    e69c:	ldr	r3, [r3, #8]
    e6a0:	ldr	r2, [fp, #-8]
    e6a4:	cmp	r2, r3
    e6a8:	bcc	e644 <hashTableClear+0x20>
    e6ac:	ldr	r3, [fp, #-16]
    e6b0:	mov	r2, #0
    e6b4:	str	r2, [r3, #12]
    e6b8:	nop	{0}
    e6bc:	sub	sp, fp, #4
    e6c0:	ldr	fp, [sp]
    e6c4:	add	sp, sp, #4
    e6c8:	pop	{pc}		; (ldr pc, [sp], #4)

0000e6cc <hashTableDestroy>:
    e6cc:	str	fp, [sp, #-8]!
    e6d0:	str	lr, [sp, #4]
    e6d4:	add	fp, sp, #4
    e6d8:	sub	sp, sp, #16
    e6dc:	str	r0, [fp, #-16]
    e6e0:	mov	r3, #0
    e6e4:	str	r3, [fp, #-8]
    e6e8:	b	e724 <hashTableDestroy+0x58>
    e6ec:	ldr	r3, [fp, #-16]
    e6f0:	ldr	r3, [r3, #16]
    e6f4:	ldr	r3, [r3, #8]
    e6f8:	ldr	r2, [fp, #-16]
    e6fc:	ldr	r1, [r2]
    e700:	ldr	r2, [fp, #-8]
    e704:	lsl	r2, r2, #2
    e708:	add	r2, r1, r2
    e70c:	ldr	r2, [r2]
    e710:	mov	r0, r2
    e714:	blx	r3
    e718:	ldr	r3, [fp, #-8]
    e71c:	add	r3, r3, #1
    e720:	str	r3, [fp, #-8]
    e724:	ldr	r3, [fp, #-16]
    e728:	ldr	r3, [r3, #8]
    e72c:	ldr	r2, [fp, #-8]
    e730:	cmp	r2, r3
    e734:	bcc	e6ec <hashTableDestroy+0x20>
    e738:	ldr	r3, [fp, #-16]
    e73c:	ldr	r3, [r3, #16]
    e740:	ldr	r3, [r3, #8]
    e744:	ldr	r2, [fp, #-16]
    e748:	ldr	r2, [r2]
    e74c:	mov	r0, r2
    e750:	blx	r3
    e754:	nop	{0}
    e758:	sub	sp, fp, #4
    e75c:	ldr	fp, [sp]
    e760:	add	sp, sp, #4
    e764:	pop	{pc}		; (ldr pc, [sp], #4)

0000e768 <hashTableInit>:
    e768:	push	{fp}		; (str fp, [sp, #-4]!)
    e76c:	add	fp, sp, #0
    e770:	sub	sp, sp, #12
    e774:	str	r0, [fp, #-8]
    e778:	str	r1, [fp, #-12]
    e77c:	ldr	r3, [fp, #-8]
    e780:	mov	r2, #0
    e784:	strb	r2, [r3, #4]
    e788:	ldr	r3, [fp, #-8]
    e78c:	mov	r2, #0
    e790:	str	r2, [r3, #8]
    e794:	ldr	r3, [fp, #-8]
    e798:	mov	r2, #0
    e79c:	str	r2, [r3, #12]
    e7a0:	ldr	r3, [fp, #-8]
    e7a4:	mov	r2, #0
    e7a8:	str	r2, [r3]
    e7ac:	ldr	r3, [fp, #-8]
    e7b0:	ldr	r2, [fp, #-12]
    e7b4:	str	r2, [r3, #16]
    e7b8:	nop	{0}
    e7bc:	add	sp, fp, #0
    e7c0:	pop	{fp}		; (ldr fp, [sp], #4)
    e7c4:	bx	lr

0000e7c8 <hashTableIterInit>:
    e7c8:	push	{fp}		; (str fp, [sp, #-4]!)
    e7cc:	add	fp, sp, #0
    e7d0:	sub	sp, sp, #12
    e7d4:	str	r0, [fp, #-8]
    e7d8:	str	r1, [fp, #-12]
    e7dc:	ldr	r3, [fp, #-12]
    e7e0:	ldr	r2, [r3]
    e7e4:	ldr	r3, [fp, #-8]
    e7e8:	str	r2, [r3]
    e7ec:	ldr	r3, [fp, #-8]
    e7f0:	ldr	r2, [r3]
    e7f4:	ldr	r3, [fp, #-12]
    e7f8:	ldr	r3, [r3, #8]
    e7fc:	lsl	r3, r3, #2
    e800:	add	r2, r2, r3
    e804:	ldr	r3, [fp, #-8]
    e808:	str	r2, [r3, #4]
    e80c:	nop	{0}
    e810:	add	sp, fp, #0
    e814:	pop	{fp}		; (ldr fp, [sp], #4)
    e818:	bx	lr

0000e81c <hashTableIterNext>:
    e81c:	push	{fp}		; (str fp, [sp, #-4]!)
    e820:	add	fp, sp, #0
    e824:	sub	sp, sp, #20
    e828:	str	r0, [fp, #-16]
    e82c:	b	e860 <hashTableIterNext+0x44>
    e830:	ldr	r3, [fp, #-16]
    e834:	ldr	r3, [r3]
    e838:	add	r1, r3, #4
    e83c:	ldr	r2, [fp, #-16]
    e840:	str	r1, [r2]
    e844:	ldr	r3, [r3]
    e848:	str	r3, [fp, #-8]
    e84c:	ldr	r3, [fp, #-8]
    e850:	cmp	r3, #0
    e854:	beq	e860 <hashTableIterNext+0x44>
    e858:	ldr	r3, [fp, #-8]
    e85c:	b	e87c <hashTableIterNext+0x60>
    e860:	ldr	r3, [fp, #-16]
    e864:	ldr	r2, [r3]
    e868:	ldr	r3, [fp, #-16]
    e86c:	ldr	r3, [r3, #4]
    e870:	cmp	r2, r3
    e874:	bne	e830 <hashTableIterNext+0x14>
    e878:	mov	r3, #0
    e87c:	mov	r0, r3
    e880:	add	sp, fp, #0
    e884:	pop	{fp}		; (ldr fp, [sp], #4)
    e888:	bx	lr

0000e88c <poolInit>:
    e88c:	push	{fp}		; (str fp, [sp, #-4]!)
    e890:	add	fp, sp, #0
    e894:	sub	sp, sp, #12
    e898:	str	r0, [fp, #-8]
    e89c:	str	r1, [fp, #-12]
    e8a0:	ldr	r3, [fp, #-8]
    e8a4:	mov	r2, #0
    e8a8:	str	r2, [r3]
    e8ac:	ldr	r3, [fp, #-8]
    e8b0:	mov	r2, #0
    e8b4:	str	r2, [r3, #4]
    e8b8:	ldr	r3, [fp, #-8]
    e8bc:	mov	r2, #0
    e8c0:	str	r2, [r3, #16]
    e8c4:	ldr	r3, [fp, #-8]
    e8c8:	mov	r2, #0
    e8cc:	str	r2, [r3, #12]
    e8d0:	ldr	r3, [fp, #-8]
    e8d4:	mov	r2, #0
    e8d8:	str	r2, [r3, #8]
    e8dc:	ldr	r3, [fp, #-8]
    e8e0:	ldr	r2, [fp, #-12]
    e8e4:	str	r2, [r3, #20]
    e8e8:	nop	{0}
    e8ec:	add	sp, fp, #0
    e8f0:	pop	{fp}		; (ldr fp, [sp], #4)
    e8f4:	bx	lr

0000e8f8 <poolClear>:
    e8f8:	push	{fp}		; (str fp, [sp, #-4]!)
    e8fc:	add	fp, sp, #0
    e900:	sub	sp, sp, #20
    e904:	str	r0, [fp, #-16]
    e908:	ldr	r3, [fp, #-16]
    e90c:	ldr	r3, [r3, #4]
    e910:	cmp	r3, #0
    e914:	bne	e92c <poolClear+0x34>
    e918:	ldr	r3, [fp, #-16]
    e91c:	ldr	r2, [r3]
    e920:	ldr	r3, [fp, #-16]
    e924:	str	r2, [r3, #4]
    e928:	b	e978 <poolClear+0x80>
    e92c:	ldr	r3, [fp, #-16]
    e930:	ldr	r3, [r3]
    e934:	str	r3, [fp, #-8]
    e938:	b	e96c <poolClear+0x74>
    e93c:	ldr	r3, [fp, #-8]
    e940:	ldr	r3, [r3]
    e944:	str	r3, [fp, #-12]
    e948:	ldr	r3, [fp, #-16]
    e94c:	ldr	r2, [r3, #4]
    e950:	ldr	r3, [fp, #-8]
    e954:	str	r2, [r3]
    e958:	ldr	r3, [fp, #-16]
    e95c:	ldr	r2, [fp, #-8]
    e960:	str	r2, [r3, #4]
    e964:	ldr	r3, [fp, #-12]
    e968:	str	r3, [fp, #-8]
    e96c:	ldr	r3, [fp, #-8]
    e970:	cmp	r3, #0
    e974:	bne	e93c <poolClear+0x44>
    e978:	ldr	r3, [fp, #-16]
    e97c:	mov	r2, #0
    e980:	str	r2, [r3]
    e984:	ldr	r3, [fp, #-16]
    e988:	mov	r2, #0
    e98c:	str	r2, [r3, #16]
    e990:	ldr	r3, [fp, #-16]
    e994:	mov	r2, #0
    e998:	str	r2, [r3, #12]
    e99c:	ldr	r3, [fp, #-16]
    e9a0:	mov	r2, #0
    e9a4:	str	r2, [r3, #8]
    e9a8:	nop	{0}
    e9ac:	add	sp, fp, #0
    e9b0:	pop	{fp}		; (ldr fp, [sp], #4)
    e9b4:	bx	lr

0000e9b8 <poolDestroy>:
    e9b8:	str	fp, [sp, #-8]!
    e9bc:	str	lr, [sp, #4]
    e9c0:	add	fp, sp, #4
    e9c4:	sub	sp, sp, #24
    e9c8:	str	r0, [fp, #-24]	; 0xffffffe8
    e9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9d0:	ldr	r3, [r3]
    e9d4:	str	r3, [fp, #-8]
    e9d8:	b	ea04 <poolDestroy+0x4c>
    e9dc:	ldr	r3, [fp, #-8]
    e9e0:	ldr	r3, [r3]
    e9e4:	str	r3, [fp, #-12]
    e9e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9ec:	ldr	r3, [r3, #20]
    e9f0:	ldr	r3, [r3, #8]
    e9f4:	ldr	r0, [fp, #-8]
    e9f8:	blx	r3
    e9fc:	ldr	r3, [fp, #-12]
    ea00:	str	r3, [fp, #-8]
    ea04:	ldr	r3, [fp, #-8]
    ea08:	cmp	r3, #0
    ea0c:	bne	e9dc <poolDestroy+0x24>
    ea10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea14:	ldr	r3, [r3, #4]
    ea18:	str	r3, [fp, #-8]
    ea1c:	b	ea48 <poolDestroy+0x90>
    ea20:	ldr	r3, [fp, #-8]
    ea24:	ldr	r3, [r3]
    ea28:	str	r3, [fp, #-16]
    ea2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea30:	ldr	r3, [r3, #20]
    ea34:	ldr	r3, [r3, #8]
    ea38:	ldr	r0, [fp, #-8]
    ea3c:	blx	r3
    ea40:	ldr	r3, [fp, #-16]
    ea44:	str	r3, [fp, #-8]
    ea48:	ldr	r3, [fp, #-8]
    ea4c:	cmp	r3, #0
    ea50:	bne	ea20 <poolDestroy+0x68>
    ea54:	nop	{0}
    ea58:	sub	sp, fp, #4
    ea5c:	ldr	fp, [sp]
    ea60:	add	sp, sp, #4
    ea64:	pop	{pc}		; (ldr pc, [sp], #4)

0000ea68 <poolAppend>:
    ea68:	str	r4, [sp, #-12]!
    ea6c:	str	fp, [sp, #4]
    ea70:	str	lr, [sp, #8]
    ea74:	add	fp, sp, #8
    ea78:	sub	sp, sp, #28
    ea7c:	str	r0, [fp, #-16]
    ea80:	str	r1, [fp, #-20]	; 0xffffffec
    ea84:	str	r2, [fp, #-24]	; 0xffffffe8
    ea88:	str	r3, [fp, #-28]	; 0xffffffe4
    ea8c:	ldr	r3, [fp, #-16]
    ea90:	ldr	r3, [r3, #12]
    ea94:	cmp	r3, #0
    ea98:	bne	eab8 <poolAppend+0x50>
    ea9c:	ldr	r0, [fp, #-16]
    eaa0:	bl	ee7c <poolGrow>
    eaa4:	mov	r3, r0
    eaa8:	cmp	r3, #0
    eaac:	bne	eab8 <poolAppend+0x50>
    eab0:	mov	r3, #0
    eab4:	b	eb20 <poolAppend+0xb8>
    eab8:	ldr	r3, [fp, #-20]	; 0xffffffec
    eabc:	ldr	r4, [r3, #60]	; 0x3c
    eac0:	ldr	r3, [fp, #-16]
    eac4:	add	r2, r3, #12
    eac8:	ldr	r3, [fp, #-16]
    eacc:	ldr	r3, [r3, #8]
    ead0:	sub	r1, fp, #24
    ead4:	str	r3, [sp]
    ead8:	mov	r3, r2
    eadc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    eae0:	ldr	r0, [fp, #-20]	; 0xffffffec
    eae4:	blx	r4
    eae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    eaec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    eaf0:	cmp	r2, r3
    eaf4:	beq	eb14 <poolAppend+0xac>
    eaf8:	ldr	r0, [fp, #-16]
    eafc:	bl	ee7c <poolGrow>
    eb00:	mov	r3, r0
    eb04:	cmp	r3, #0
    eb08:	bne	eab8 <poolAppend+0x50>
    eb0c:	mov	r3, #0
    eb10:	b	eb20 <poolAppend+0xb8>
    eb14:	nop	{0}
    eb18:	ldr	r3, [fp, #-16]
    eb1c:	ldr	r3, [r3, #16]
    eb20:	mov	r0, r3
    eb24:	sub	sp, fp, #8
    eb28:	ldr	r4, [sp]
    eb2c:	ldr	fp, [sp, #4]
    eb30:	add	sp, sp, #8
    eb34:	pop	{pc}		; (ldr pc, [sp], #4)

0000eb38 <poolCopyString>:
    eb38:	str	fp, [sp, #-8]!
    eb3c:	str	lr, [sp, #4]
    eb40:	add	fp, sp, #4
    eb44:	sub	sp, sp, #8
    eb48:	str	r0, [fp, #-8]
    eb4c:	str	r1, [fp, #-12]
    eb50:	ldr	r3, [fp, #-8]
    eb54:	ldr	r2, [r3, #12]
    eb58:	ldr	r3, [fp, #-8]
    eb5c:	ldr	r3, [r3, #8]
    eb60:	cmp	r2, r3
    eb64:	bne	eb7c <poolCopyString+0x44>
    eb68:	ldr	r0, [fp, #-8]
    eb6c:	bl	ee7c <poolGrow>
    eb70:	mov	r3, r0
    eb74:	cmp	r3, #0
    eb78:	beq	eba4 <poolCopyString+0x6c>
    eb7c:	ldr	r3, [fp, #-8]
    eb80:	ldr	r3, [r3, #12]
    eb84:	add	r1, r3, #1
    eb88:	ldr	r2, [fp, #-8]
    eb8c:	str	r1, [r2, #12]
    eb90:	ldr	r2, [fp, #-12]
    eb94:	ldrb	r2, [r2]
    eb98:	strb	r2, [r3]
    eb9c:	mov	r3, #0
    eba0:	b	eba8 <poolCopyString+0x70>
    eba4:	mov	r3, #1
    eba8:	cmp	r3, #0
    ebac:	beq	ebb8 <poolCopyString+0x80>
    ebb0:	mov	r3, #0
    ebb4:	b	ebf0 <poolCopyString+0xb8>
    ebb8:	ldr	r3, [fp, #-12]
    ebbc:	add	r2, r3, #1
    ebc0:	str	r2, [fp, #-12]
    ebc4:	ldrb	r3, [r3]
    ebc8:	cmp	r3, #0
    ebcc:	bne	eb50 <poolCopyString+0x18>
    ebd0:	ldr	r3, [fp, #-8]
    ebd4:	ldr	r3, [r3, #16]
    ebd8:	str	r3, [fp, #-12]
    ebdc:	ldr	r3, [fp, #-8]
    ebe0:	ldr	r2, [r3, #12]
    ebe4:	ldr	r3, [fp, #-8]
    ebe8:	str	r2, [r3, #16]
    ebec:	ldr	r3, [fp, #-12]
    ebf0:	mov	r0, r3
    ebf4:	sub	sp, fp, #4
    ebf8:	ldr	fp, [sp]
    ebfc:	add	sp, sp, #4
    ec00:	pop	{pc}		; (ldr pc, [sp], #4)

0000ec04 <poolCopyStringN>:
    ec04:	str	fp, [sp, #-8]!
    ec08:	str	lr, [sp, #4]
    ec0c:	add	fp, sp, #4
    ec10:	sub	sp, sp, #16
    ec14:	str	r0, [fp, #-8]
    ec18:	str	r1, [fp, #-12]
    ec1c:	str	r2, [fp, #-16]
    ec20:	ldr	r3, [fp, #-8]
    ec24:	ldr	r3, [r3, #12]
    ec28:	cmp	r3, #0
    ec2c:	bne	eccc <poolCopyStringN+0xc8>
    ec30:	ldr	r0, [fp, #-8]
    ec34:	bl	ee7c <poolGrow>
    ec38:	mov	r3, r0
    ec3c:	cmp	r3, #0
    ec40:	bne	eccc <poolCopyStringN+0xc8>
    ec44:	mov	r3, #0
    ec48:	b	ecf8 <poolCopyStringN+0xf4>
    ec4c:	ldr	r3, [fp, #-8]
    ec50:	ldr	r2, [r3, #12]
    ec54:	ldr	r3, [fp, #-8]
    ec58:	ldr	r3, [r3, #8]
    ec5c:	cmp	r2, r3
    ec60:	bne	ec78 <poolCopyStringN+0x74>
    ec64:	ldr	r0, [fp, #-8]
    ec68:	bl	ee7c <poolGrow>
    ec6c:	mov	r3, r0
    ec70:	cmp	r3, #0
    ec74:	beq	eca0 <poolCopyStringN+0x9c>
    ec78:	ldr	r3, [fp, #-8]
    ec7c:	ldr	r3, [r3, #12]
    ec80:	add	r1, r3, #1
    ec84:	ldr	r2, [fp, #-8]
    ec88:	str	r1, [r2, #12]
    ec8c:	ldr	r2, [fp, #-12]
    ec90:	ldrb	r2, [r2]
    ec94:	strb	r2, [r3]
    ec98:	mov	r3, #0
    ec9c:	b	eca4 <poolCopyStringN+0xa0>
    eca0:	mov	r3, #1
    eca4:	cmp	r3, #0
    eca8:	beq	ecb4 <poolCopyStringN+0xb0>
    ecac:	mov	r3, #0
    ecb0:	b	ecf8 <poolCopyStringN+0xf4>
    ecb4:	ldr	r3, [fp, #-16]
    ecb8:	sub	r3, r3, #1
    ecbc:	str	r3, [fp, #-16]
    ecc0:	ldr	r3, [fp, #-12]
    ecc4:	add	r3, r3, #1
    ecc8:	str	r3, [fp, #-12]
    eccc:	ldr	r3, [fp, #-16]
    ecd0:	cmp	r3, #0
    ecd4:	bgt	ec4c <poolCopyStringN+0x48>
    ecd8:	ldr	r3, [fp, #-8]
    ecdc:	ldr	r3, [r3, #16]
    ece0:	str	r3, [fp, #-12]
    ece4:	ldr	r3, [fp, #-8]
    ece8:	ldr	r2, [r3, #12]
    ecec:	ldr	r3, [fp, #-8]
    ecf0:	str	r2, [r3, #16]
    ecf4:	ldr	r3, [fp, #-12]
    ecf8:	mov	r0, r3
    ecfc:	sub	sp, fp, #4
    ed00:	ldr	fp, [sp]
    ed04:	add	sp, sp, #4
    ed08:	pop	{pc}		; (ldr pc, [sp], #4)

0000ed0c <poolAppendString>:
    ed0c:	str	fp, [sp, #-8]!
    ed10:	str	lr, [sp, #4]
    ed14:	add	fp, sp, #4
    ed18:	sub	sp, sp, #8
    ed1c:	str	r0, [fp, #-8]
    ed20:	str	r1, [fp, #-12]
    ed24:	b	ed9c <poolAppendString+0x90>
    ed28:	ldr	r3, [fp, #-8]
    ed2c:	ldr	r2, [r3, #12]
    ed30:	ldr	r3, [fp, #-8]
    ed34:	ldr	r3, [r3, #8]
    ed38:	cmp	r2, r3
    ed3c:	bne	ed54 <poolAppendString+0x48>
    ed40:	ldr	r0, [fp, #-8]
    ed44:	bl	ee7c <poolGrow>
    ed48:	mov	r3, r0
    ed4c:	cmp	r3, #0
    ed50:	beq	ed7c <poolAppendString+0x70>
    ed54:	ldr	r3, [fp, #-8]
    ed58:	ldr	r3, [r3, #12]
    ed5c:	add	r1, r3, #1
    ed60:	ldr	r2, [fp, #-8]
    ed64:	str	r1, [r2, #12]
    ed68:	ldr	r2, [fp, #-12]
    ed6c:	ldrb	r2, [r2]
    ed70:	strb	r2, [r3]
    ed74:	mov	r3, #0
    ed78:	b	ed80 <poolAppendString+0x74>
    ed7c:	mov	r3, #1
    ed80:	cmp	r3, #0
    ed84:	beq	ed90 <poolAppendString+0x84>
    ed88:	mov	r3, #0
    ed8c:	b	edb4 <poolAppendString+0xa8>
    ed90:	ldr	r3, [fp, #-12]
    ed94:	add	r3, r3, #1
    ed98:	str	r3, [fp, #-12]
    ed9c:	ldr	r3, [fp, #-12]
    eda0:	ldrb	r3, [r3]
    eda4:	cmp	r3, #0
    eda8:	bne	ed28 <poolAppendString+0x1c>
    edac:	ldr	r3, [fp, #-8]
    edb0:	ldr	r3, [r3, #16]
    edb4:	mov	r0, r3
    edb8:	sub	sp, fp, #4
    edbc:	ldr	fp, [sp]
    edc0:	add	sp, sp, #4
    edc4:	pop	{pc}		; (ldr pc, [sp], #4)

0000edc8 <poolStoreString>:
    edc8:	str	fp, [sp, #-8]!
    edcc:	str	lr, [sp, #4]
    edd0:	add	fp, sp, #4
    edd4:	sub	sp, sp, #16
    edd8:	str	r0, [fp, #-8]
    eddc:	str	r1, [fp, #-12]
    ede0:	str	r2, [fp, #-16]
    ede4:	str	r3, [fp, #-20]	; 0xffffffec
    ede8:	ldr	r3, [fp, #-20]	; 0xffffffec
    edec:	ldr	r2, [fp, #-16]
    edf0:	ldr	r1, [fp, #-12]
    edf4:	ldr	r0, [fp, #-8]
    edf8:	bl	ea68 <poolAppend>
    edfc:	mov	r3, r0
    ee00:	cmp	r3, #0
    ee04:	bne	ee10 <poolStoreString+0x48>
    ee08:	mov	r3, #0
    ee0c:	b	ee68 <poolStoreString+0xa0>
    ee10:	ldr	r3, [fp, #-8]
    ee14:	ldr	r2, [r3, #12]
    ee18:	ldr	r3, [fp, #-8]
    ee1c:	ldr	r3, [r3, #8]
    ee20:	cmp	r2, r3
    ee24:	bne	ee44 <poolStoreString+0x7c>
    ee28:	ldr	r0, [fp, #-8]
    ee2c:	bl	ee7c <poolGrow>
    ee30:	mov	r3, r0
    ee34:	cmp	r3, #0
    ee38:	bne	ee44 <poolStoreString+0x7c>
    ee3c:	mov	r3, #0
    ee40:	b	ee68 <poolStoreString+0xa0>
    ee44:	ldr	r3, [fp, #-8]
    ee48:	ldr	r3, [r3, #12]
    ee4c:	add	r1, r3, #1
    ee50:	ldr	r2, [fp, #-8]
    ee54:	str	r1, [r2, #12]
    ee58:	mov	r2, #0
    ee5c:	strb	r2, [r3]
    ee60:	ldr	r3, [fp, #-8]
    ee64:	ldr	r3, [r3, #16]
    ee68:	mov	r0, r3
    ee6c:	sub	sp, fp, #4
    ee70:	ldr	fp, [sp]
    ee74:	add	sp, sp, #4
    ee78:	pop	{pc}		; (ldr pc, [sp], #4)

0000ee7c <poolGrow>:
    ee7c:	str	fp, [sp, #-8]!
    ee80:	str	lr, [sp, #4]
    ee84:	add	fp, sp, #4
    ee88:	sub	sp, sp, #32
    ee8c:	str	r0, [fp, #-32]	; 0xffffffe0
    ee90:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ee94:	ldr	r3, [r3, #4]
    ee98:	cmp	r3, #0
    ee9c:	beq	f030 <poolGrow+0x1b4>
    eea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eea4:	ldr	r3, [r3, #16]
    eea8:	cmp	r3, #0
    eeac:	bne	ef30 <poolGrow+0xb4>
    eeb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eeb4:	ldr	r2, [r3, #4]
    eeb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eebc:	str	r2, [r3]
    eec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eec4:	ldr	r3, [r3, #4]
    eec8:	ldr	r2, [r3]
    eecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eed0:	str	r2, [r3, #4]
    eed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eed8:	ldr	r3, [r3]
    eedc:	mov	r2, #0
    eee0:	str	r2, [r3]
    eee4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eee8:	ldr	r3, [r3]
    eeec:	add	r2, r3, #8
    eef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eef4:	str	r2, [r3, #16]
    eef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eefc:	ldr	r3, [r3, #16]
    ef00:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ef04:	ldr	r2, [r2]
    ef08:	ldr	r2, [r2, #4]
    ef0c:	add	r2, r3, r2
    ef10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef14:	str	r2, [r3, #8]
    ef18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef1c:	ldr	r2, [r3, #16]
    ef20:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef24:	str	r2, [r3, #12]
    ef28:	mov	r3, #1
    ef2c:	b	f25c <poolGrow+0x3e0>
    ef30:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef34:	ldr	r2, [r3, #8]
    ef38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef3c:	ldr	r3, [r3, #16]
    ef40:	sub	r2, r2, r3
    ef44:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef48:	ldr	r3, [r3, #4]
    ef4c:	ldr	r3, [r3, #4]
    ef50:	cmp	r2, r3
    ef54:	bge	f030 <poolGrow+0x1b4>
    ef58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef5c:	ldr	r3, [r3, #4]
    ef60:	ldr	r3, [r3]
    ef64:	str	r3, [fp, #-12]
    ef68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef6c:	ldr	r3, [r3, #4]
    ef70:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ef74:	ldr	r2, [r2]
    ef78:	str	r2, [r3]
    ef7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef80:	ldr	r2, [r3, #4]
    ef84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef88:	str	r2, [r3]
    ef8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef90:	ldr	r2, [fp, #-12]
    ef94:	str	r2, [r3, #4]
    ef98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef9c:	ldr	r3, [r3]
    efa0:	add	r0, r3, #8
    efa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efa8:	ldr	r1, [r3, #16]
    efac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efb0:	ldr	r2, [r3, #8]
    efb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efb8:	ldr	r3, [r3, #16]
    efbc:	sub	r3, r2, r3
    efc0:	mov	r2, r3
    efc4:	bl	0 <memcpy>
    efc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efcc:	ldr	r3, [r3]
    efd0:	add	r3, r3, #8
    efd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    efd8:	ldr	r1, [r2, #12]
    efdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    efe0:	ldr	r2, [r2, #16]
    efe4:	sub	r2, r1, r2
    efe8:	add	r2, r3, r2
    efec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eff0:	str	r2, [r3, #12]
    eff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eff8:	ldr	r3, [r3]
    effc:	add	r2, r3, #8
    f000:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f004:	str	r2, [r3, #16]
    f008:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f00c:	ldr	r3, [r3, #16]
    f010:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f014:	ldr	r2, [r2]
    f018:	ldr	r2, [r2, #4]
    f01c:	add	r2, r3, r2
    f020:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f024:	str	r2, [r3, #8]
    f028:	mov	r3, #1
    f02c:	b	f25c <poolGrow+0x3e0>
    f030:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f034:	ldr	r3, [r3]
    f038:	cmp	r3, #0
    f03c:	beq	f12c <poolGrow+0x2b0>
    f040:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f044:	ldr	r2, [r3, #16]
    f048:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f04c:	ldr	r3, [r3]
    f050:	add	r3, r3, #8
    f054:	cmp	r2, r3
    f058:	bne	f12c <poolGrow+0x2b0>
    f05c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f060:	ldr	r2, [r3, #8]
    f064:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f068:	ldr	r3, [r3, #16]
    f06c:	sub	r3, r2, r3
    f070:	lsl	r3, r3, #1
    f074:	str	r3, [fp, #-16]
    f078:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f07c:	ldr	r3, [r3, #20]
    f080:	ldr	r3, [r3, #4]
    f084:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f088:	ldr	r0, [r2]
    f08c:	ldr	r2, [fp, #-16]
    f090:	add	r2, r2, #8
    f094:	mov	r1, r2
    f098:	blx	r3
    f09c:	str	r0, [fp, #-20]	; 0xffffffec
    f0a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    f0a4:	cmp	r3, #0
    f0a8:	bne	f0b4 <poolGrow+0x238>
    f0ac:	mov	r3, #0
    f0b0:	b	f25c <poolGrow+0x3e0>
    f0b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    f0bc:	str	r2, [r3]
    f0c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0c4:	ldr	r3, [r3]
    f0c8:	ldr	r2, [fp, #-16]
    f0cc:	str	r2, [r3, #4]
    f0d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0d4:	ldr	r3, [r3]
    f0d8:	add	r3, r3, #8
    f0dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f0e0:	ldr	r1, [r2, #12]
    f0e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f0e8:	ldr	r2, [r2, #16]
    f0ec:	sub	r2, r1, r2
    f0f0:	add	r2, r3, r2
    f0f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0f8:	str	r2, [r3, #12]
    f0fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f100:	ldr	r3, [r3]
    f104:	add	r2, r3, #8
    f108:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f10c:	str	r2, [r3, #16]
    f110:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f114:	ldr	r2, [r3, #16]
    f118:	ldr	r3, [fp, #-16]
    f11c:	add	r2, r2, r3
    f120:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f124:	str	r2, [r3, #8]
    f128:	b	f258 <poolGrow+0x3dc>
    f12c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f130:	ldr	r2, [r3, #8]
    f134:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f138:	ldr	r3, [r3, #16]
    f13c:	sub	r3, r2, r3
    f140:	str	r3, [fp, #-8]
    f144:	ldr	r3, [fp, #-8]
    f148:	cmp	r3, #1024	; 0x400
    f14c:	bge	f15c <poolGrow+0x2e0>
    f150:	mov	r3, #1024	; 0x400
    f154:	str	r3, [fp, #-8]
    f158:	b	f168 <poolGrow+0x2ec>
    f15c:	ldr	r3, [fp, #-8]
    f160:	lsl	r3, r3, #1
    f164:	str	r3, [fp, #-8]
    f168:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f16c:	ldr	r3, [r3, #20]
    f170:	ldr	r3, [r3]
    f174:	ldr	r2, [fp, #-8]
    f178:	add	r2, r2, #8
    f17c:	mov	r0, r2
    f180:	blx	r3
    f184:	str	r0, [fp, #-24]	; 0xffffffe8
    f188:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f18c:	cmp	r3, #0
    f190:	bne	f19c <poolGrow+0x320>
    f194:	mov	r3, #0
    f198:	b	f25c <poolGrow+0x3e0>
    f19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f1a0:	ldr	r2, [fp, #-8]
    f1a4:	str	r2, [r3, #4]
    f1a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1ac:	ldr	r2, [r3]
    f1b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f1b4:	str	r2, [r3]
    f1b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f1c0:	str	r2, [r3]
    f1c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1c8:	ldr	r2, [r3, #12]
    f1cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1d0:	ldr	r3, [r3, #16]
    f1d4:	cmp	r2, r3
    f1d8:	beq	f208 <poolGrow+0x38c>
    f1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f1e0:	add	r0, r3, #8
    f1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1e8:	ldr	r1, [r3, #16]
    f1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1f0:	ldr	r2, [r3, #12]
    f1f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1f8:	ldr	r3, [r3, #16]
    f1fc:	sub	r3, r2, r3
    f200:	mov	r2, r3
    f204:	bl	0 <memcpy>
    f208:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f20c:	add	r3, r3, #8
    f210:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f214:	ldr	r1, [r2, #12]
    f218:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f21c:	ldr	r2, [r2, #16]
    f220:	sub	r2, r1, r2
    f224:	add	r2, r3, r2
    f228:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f22c:	str	r2, [r3, #12]
    f230:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f234:	add	r2, r3, #8
    f238:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f23c:	str	r2, [r3, #16]
    f240:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f244:	add	r2, r3, #8
    f248:	ldr	r3, [fp, #-8]
    f24c:	add	r2, r2, r3
    f250:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f254:	str	r2, [r3, #8]
    f258:	mov	r3, #1
    f25c:	mov	r0, r3
    f260:	sub	sp, fp, #4
    f264:	ldr	fp, [sp]
    f268:	add	sp, sp, #4
    f26c:	pop	{pc}		; (ldr pc, [sp], #4)

0000f270 <nextScaffoldPart>:
    f270:	str	r4, [sp, #-12]!
    f274:	str	fp, [sp, #4]
    f278:	str	lr, [sp, #8]
    f27c:	add	fp, sp, #8
    f280:	sub	sp, sp, #36	; 0x24
    f284:	str	r0, [fp, #-40]	; 0xffffffd8
    f288:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f28c:	ldr	r3, [r3, #364]	; 0x16c
    f290:	str	r3, [fp, #-20]	; 0xffffffec
    f294:	ldr	r3, [fp, #-20]	; 0xffffffec
    f298:	ldr	r3, [r3, #184]	; 0xb8
    f29c:	cmp	r3, #0
    f2a0:	bne	f2f4 <nextScaffoldPart+0x84>
    f2a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f2a8:	ldr	r3, [r3, #12]
    f2ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f2b0:	ldr	r2, [r2, #484]	; 0x1e4
    f2b4:	lsl	r2, r2, #2
    f2b8:	mov	r0, r2
    f2bc:	blx	r3
    f2c0:	mov	r2, r0
    f2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f2c8:	str	r2, [r3, #184]	; 0xb8
    f2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    f2d0:	ldr	r3, [r3, #184]	; 0xb8
    f2d4:	cmp	r3, #0
    f2d8:	bne	f2e4 <nextScaffoldPart+0x74>
    f2dc:	mvn	r3, #0
    f2e0:	b	f508 <nextScaffoldPart+0x298>
    f2e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f2e8:	ldr	r3, [r3, #184]	; 0xb8
    f2ec:	mov	r2, #0
    f2f0:	str	r2, [r3]
    f2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f2f8:	ldr	r2, [r3, #176]	; 0xb0
    f2fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    f300:	ldr	r3, [r3, #172]	; 0xac
    f304:	cmp	r2, r3
    f308:	bcc	f3bc <nextScaffoldPart+0x14c>
    f30c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f310:	ldr	r3, [r3, #164]	; 0xa4
    f314:	cmp	r3, #0
    f318:	beq	f37c <nextScaffoldPart+0x10c>
    f31c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f320:	ldr	r4, [r3, #16]
    f324:	ldr	r3, [fp, #-20]	; 0xffffffec
    f328:	ldr	r0, [r3, #164]	; 0xa4
    f32c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f330:	ldr	r2, [r3, #172]	; 0xac
    f334:	mov	r3, r2
    f338:	lsl	r3, r3, #3
    f33c:	sub	r3, r3, r2
    f340:	lsl	r3, r3, #3
    f344:	mov	r1, r3
    f348:	blx	r4
    f34c:	str	r0, [fp, #-16]
    f350:	ldr	r3, [fp, #-16]
    f354:	cmp	r3, #0
    f358:	bne	f364 <nextScaffoldPart+0xf4>
    f35c:	mvn	r3, #0
    f360:	b	f508 <nextScaffoldPart+0x298>
    f364:	ldr	r3, [fp, #-20]	; 0xffffffec
    f368:	ldr	r3, [r3, #172]	; 0xac
    f36c:	lsl	r2, r3, #1
    f370:	ldr	r3, [fp, #-20]	; 0xffffffec
    f374:	str	r2, [r3, #172]	; 0xac
    f378:	b	f3b0 <nextScaffoldPart+0x140>
    f37c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f380:	ldr	r3, [r3, #12]
    f384:	mov	r0, #896	; 0x380
    f388:	blx	r3
    f38c:	str	r0, [fp, #-16]
    f390:	ldr	r3, [fp, #-16]
    f394:	cmp	r3, #0
    f398:	bne	f3a4 <nextScaffoldPart+0x134>
    f39c:	mvn	r3, #0
    f3a0:	b	f508 <nextScaffoldPart+0x298>
    f3a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f3a8:	mov	r2, #32
    f3ac:	str	r2, [r3, #172]	; 0xac
    f3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    f3b4:	ldr	r2, [fp, #-16]
    f3b8:	str	r2, [r3, #164]	; 0xa4
    f3bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    f3c0:	ldr	r3, [r3, #176]	; 0xb0
    f3c4:	add	r1, r3, #1
    f3c8:	ldr	r2, [fp, #-20]	; 0xffffffec
    f3cc:	str	r1, [r2, #176]	; 0xb0
    f3d0:	str	r3, [fp, #-24]	; 0xffffffe8
    f3d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f3d8:	ldr	r1, [r3, #164]	; 0xa4
    f3dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f3e0:	mov	r3, r2
    f3e4:	lsl	r3, r3, #3
    f3e8:	sub	r3, r3, r2
    f3ec:	lsl	r3, r3, #2
    f3f0:	add	r3, r1, r3
    f3f4:	str	r3, [fp, #-28]	; 0xffffffe4
    f3f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    f3fc:	ldr	r3, [r3, #180]	; 0xb4
    f400:	cmp	r3, #0
    f404:	beq	f4c8 <nextScaffoldPart+0x258>
    f408:	ldr	r3, [fp, #-20]	; 0xffffffec
    f40c:	ldr	r2, [r3, #164]	; 0xa4
    f410:	ldr	r3, [fp, #-20]	; 0xffffffec
    f414:	ldr	r1, [r3, #184]	; 0xb8
    f418:	ldr	r3, [fp, #-20]	; 0xffffffec
    f41c:	ldr	r3, [r3, #180]	; 0xb4
    f420:	sub	r3, r3, #-1073741823	; 0xc0000001
    f424:	lsl	r3, r3, #2
    f428:	add	r3, r1, r3
    f42c:	ldr	r3, [r3]
    f430:	mov	r1, r3
    f434:	mov	r3, r1
    f438:	lsl	r3, r3, #3
    f43c:	sub	r3, r3, r1
    f440:	lsl	r3, r3, #2
    f444:	add	r3, r2, r3
    f448:	str	r3, [fp, #-32]	; 0xffffffe0
    f44c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f450:	ldr	r3, [r3, #16]
    f454:	cmp	r3, #0
    f458:	beq	f48c <nextScaffoldPart+0x21c>
    f45c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f460:	ldr	r2, [r3, #164]	; 0xa4
    f464:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f468:	ldr	r3, [r3, #16]
    f46c:	mov	r1, r3
    f470:	mov	r3, r1
    f474:	lsl	r3, r3, #3
    f478:	sub	r3, r3, r1
    f47c:	lsl	r3, r3, #2
    f480:	add	r3, r2, r3
    f484:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f488:	str	r2, [r3, #24]
    f48c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f490:	ldr	r3, [r3, #20]
    f494:	cmp	r3, #0
    f498:	bne	f4a8 <nextScaffoldPart+0x238>
    f49c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f4a4:	str	r2, [r3, #12]
    f4a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f4b0:	str	r2, [r3, #16]
    f4b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4b8:	ldr	r3, [r3, #20]
    f4bc:	add	r2, r3, #1
    f4c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f4c4:	str	r2, [r3, #20]
    f4c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4cc:	mov	r2, #0
    f4d0:	str	r2, [r3, #24]
    f4d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4d8:	ldr	r2, [r3, #24]
    f4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4e0:	str	r2, [r3, #20]
    f4e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4e8:	ldr	r2, [r3, #20]
    f4ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4f0:	str	r2, [r3, #16]
    f4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f4f8:	ldr	r2, [r3, #16]
    f4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f500:	str	r2, [r3, #12]
    f504:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f508:	mov	r0, r3
    f50c:	sub	sp, fp, #8
    f510:	ldr	r4, [sp]
    f514:	ldr	fp, [sp, #4]
    f518:	add	sp, sp, #8
    f51c:	pop	{pc}		; (ldr pc, [sp], #4)

0000f520 <build_node>:
    f520:	str	fp, [sp, #-8]!
    f524:	str	lr, [sp, #4]
    f528:	add	fp, sp, #4
    f52c:	sub	sp, sp, #40	; 0x28
    f530:	str	r0, [fp, #-24]	; 0xffffffe8
    f534:	str	r1, [fp, #-28]	; 0xffffffe4
    f538:	str	r2, [fp, #-32]	; 0xffffffe0
    f53c:	str	r3, [fp, #-36]	; 0xffffffdc
    f540:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f544:	ldr	r3, [r3, #364]	; 0x16c
    f548:	str	r3, [fp, #-20]	; 0xffffffec
    f54c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f550:	ldr	r1, [r3, #164]	; 0xa4
    f554:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f558:	mov	r3, r2
    f55c:	lsl	r3, r3, #3
    f560:	sub	r3, r3, r2
    f564:	lsl	r3, r3, #2
    f568:	add	r3, r1, r3
    f56c:	ldr	r2, [r3]
    f570:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f574:	str	r2, [r3]
    f578:	ldr	r3, [fp, #-20]	; 0xffffffec
    f57c:	ldr	r1, [r3, #164]	; 0xa4
    f580:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f584:	mov	r3, r2
    f588:	lsl	r3, r3, #3
    f58c:	sub	r3, r3, r2
    f590:	lsl	r3, r3, #2
    f594:	add	r3, r1, r3
    f598:	ldr	r2, [r3, #4]
    f59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f5a0:	str	r2, [r3, #4]
    f5a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f5a8:	ldr	r3, [r3]
    f5ac:	cmp	r3, #4
    f5b0:	bne	f64c <build_node+0x12c>
    f5b4:	ldr	r3, [fp, #4]
    f5b8:	ldr	r2, [r3]
    f5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f5c0:	str	r2, [r3, #8]
    f5c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f5c8:	ldr	r1, [r3, #164]	; 0xa4
    f5cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f5d0:	mov	r3, r2
    f5d4:	lsl	r3, r3, #3
    f5d8:	sub	r3, r3, r2
    f5dc:	lsl	r3, r3, #2
    f5e0:	add	r3, r1, r3
    f5e4:	ldr	r3, [r3, #8]
    f5e8:	str	r3, [fp, #-8]
    f5ec:	ldr	r3, [fp, #4]
    f5f0:	ldr	r3, [r3]
    f5f4:	add	r1, r3, #1
    f5f8:	ldr	r2, [fp, #4]
    f5fc:	str	r1, [r2]
    f600:	ldr	r2, [fp, #-8]
    f604:	ldrb	r2, [r2]
    f608:	strb	r2, [r3]
    f60c:	ldr	r3, [fp, #-8]
    f610:	ldrb	r3, [r3]
    f614:	cmp	r3, #0
    f618:	beq	f62c <build_node+0x10c>
    f61c:	ldr	r3, [fp, #-8]
    f620:	add	r3, r3, #1
    f624:	str	r3, [fp, #-8]
    f628:	b	f5ec <build_node+0xcc>
    f62c:	nop	{0}
    f630:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f634:	mov	r2, #0
    f638:	str	r2, [r3, #12]
    f63c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f640:	mov	r2, #0
    f644:	str	r2, [r3, #16]
    f648:	b	f778 <build_node+0x258>
    f64c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f650:	ldr	r1, [r3, #164]	; 0xa4
    f654:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f658:	mov	r3, r2
    f65c:	lsl	r3, r3, #3
    f660:	sub	r3, r3, r2
    f664:	lsl	r3, r3, #2
    f668:	add	r3, r1, r3
    f66c:	ldr	r3, [r3, #20]
    f670:	mov	r2, r3
    f674:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f678:	str	r2, [r3, #12]
    f67c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f680:	ldr	r2, [r3]
    f684:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f688:	str	r2, [r3, #16]
    f68c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f690:	ldr	r1, [r3]
    f694:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f698:	ldr	r2, [r3, #12]
    f69c:	mov	r3, r2
    f6a0:	lsl	r3, r3, #2
    f6a4:	add	r3, r3, r2
    f6a8:	lsl	r3, r3, #2
    f6ac:	add	r2, r1, r3
    f6b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f6b4:	str	r2, [r3]
    f6b8:	mov	r3, #0
    f6bc:	str	r3, [fp, #-12]
    f6c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    f6c4:	ldr	r1, [r3, #164]	; 0xa4
    f6c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f6cc:	mov	r3, r2
    f6d0:	lsl	r3, r3, #3
    f6d4:	sub	r3, r3, r2
    f6d8:	lsl	r3, r3, #2
    f6dc:	add	r3, r1, r3
    f6e0:	ldr	r3, [r3, #12]
    f6e4:	str	r3, [fp, #-16]
    f6e8:	b	f758 <build_node+0x238>
    f6ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f6f0:	ldr	r1, [r3, #16]
    f6f4:	ldr	r2, [fp, #-12]
    f6f8:	mov	r3, r2
    f6fc:	lsl	r3, r3, #2
    f700:	add	r3, r3, r2
    f704:	lsl	r3, r3, #2
    f708:	add	r2, r1, r3
    f70c:	ldr	r3, [fp, #4]
    f710:	str	r3, [sp]
    f714:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f718:	ldr	r1, [fp, #-16]
    f71c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f720:	bl	f520 <build_node>
    f724:	ldr	r3, [fp, #-12]
    f728:	add	r3, r3, #1
    f72c:	str	r3, [fp, #-12]
    f730:	ldr	r3, [fp, #-20]	; 0xffffffec
    f734:	ldr	r1, [r3, #164]	; 0xa4
    f738:	ldr	r2, [fp, #-16]
    f73c:	mov	r3, r2
    f740:	lsl	r3, r3, #3
    f744:	sub	r3, r3, r2
    f748:	lsl	r3, r3, #2
    f74c:	add	r3, r1, r3
    f750:	ldr	r3, [r3, #24]
    f754:	str	r3, [fp, #-16]
    f758:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f75c:	ldr	r3, [r3, #12]
    f760:	ldr	r2, [fp, #-12]
    f764:	cmp	r2, r3
    f768:	bcc	f6ec <build_node+0x1cc>
    f76c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f770:	mov	r2, #0
    f774:	str	r2, [r3, #8]
    f778:	nop	{0}
    f77c:	sub	sp, fp, #4
    f780:	ldr	fp, [sp]
    f784:	add	sp, sp, #4
    f788:	pop	{pc}		; (ldr pc, [sp], #4)

0000f78c <build_model>:
    f78c:	str	fp, [sp, #-8]!
    f790:	str	lr, [sp, #4]
    f794:	add	fp, sp, #4
    f798:	sub	sp, sp, #40	; 0x28
    f79c:	str	r0, [fp, #-32]	; 0xffffffe0
    f7a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f7a4:	ldr	r3, [r3, #364]	; 0x16c
    f7a8:	str	r3, [fp, #-8]
    f7ac:	ldr	r3, [fp, #-8]
    f7b0:	ldr	r2, [r3, #176]	; 0xb0
    f7b4:	mov	r3, r2
    f7b8:	lsl	r3, r3, #2
    f7bc:	add	r3, r3, r2
    f7c0:	lsl	r3, r3, #2
    f7c4:	mov	r2, r3
    f7c8:	ldr	r3, [fp, #-8]
    f7cc:	ldr	r3, [r3, #168]	; 0xa8
    f7d0:	add	r3, r2, r3
    f7d4:	str	r3, [fp, #-12]
    f7d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f7dc:	ldr	r3, [r3, #12]
    f7e0:	ldr	r2, [fp, #-12]
    f7e4:	mov	r0, r2
    f7e8:	blx	r3
    f7ec:	str	r0, [fp, #-16]
    f7f0:	ldr	r3, [fp, #-16]
    f7f4:	cmp	r3, #0
    f7f8:	bne	f804 <build_model+0x78>
    f7fc:	mov	r3, #0
    f800:	b	f85c <build_model+0xd0>
    f804:	ldr	r3, [fp, #-8]
    f808:	ldr	r2, [r3, #176]	; 0xb0
    f80c:	mov	r3, r2
    f810:	lsl	r3, r3, #2
    f814:	add	r3, r3, r2
    f818:	lsl	r3, r3, #2
    f81c:	mov	r2, r3
    f820:	ldr	r3, [fp, #-16]
    f824:	add	r3, r3, r2
    f828:	str	r3, [fp, #-24]	; 0xffffffe8
    f82c:	ldr	r3, [fp, #-16]
    f830:	add	r3, r3, #20
    f834:	str	r3, [fp, #-20]	; 0xffffffec
    f838:	sub	r2, fp, #20
    f83c:	sub	r3, fp, #24
    f840:	str	r3, [sp]
    f844:	mov	r3, r2
    f848:	ldr	r2, [fp, #-16]
    f84c:	mov	r1, #0
    f850:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f854:	bl	f520 <build_node>
    f858:	ldr	r3, [fp, #-16]
    f85c:	mov	r0, r3
    f860:	sub	sp, fp, #4
    f864:	ldr	fp, [sp]
    f868:	add	sp, sp, #4
    f86c:	pop	{pc}		; (ldr pc, [sp], #4)

0000f870 <getElementType>:
    f870:	str	fp, [sp, #-8]!
    f874:	str	lr, [sp, #4]
    f878:	add	fp, sp, #4
    f87c:	sub	sp, sp, #32
    f880:	str	r0, [fp, #-24]	; 0xffffffe8
    f884:	str	r1, [fp, #-28]	; 0xffffffe4
    f888:	str	r2, [fp, #-32]	; 0xffffffe0
    f88c:	str	r3, [fp, #-36]	; 0xffffffdc
    f890:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f894:	ldr	r3, [r3, #364]	; 0x16c
    f898:	str	r3, [fp, #-8]
    f89c:	ldr	r3, [fp, #-8]
    f8a0:	add	r0, r3, #80	; 0x50
    f8a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f8a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f8ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f8b0:	bl	edc8 <poolStoreString>
    f8b4:	str	r0, [fp, #-12]
    f8b8:	ldr	r3, [fp, #-12]
    f8bc:	cmp	r3, #0
    f8c0:	bne	f8cc <getElementType+0x5c>
    f8c4:	mov	r3, #0
    f8c8:	b	f958 <getElementType+0xe8>
    f8cc:	ldr	r3, [fp, #-8]
    f8d0:	add	r1, r3, #20
    f8d4:	mov	r3, #24
    f8d8:	ldr	r2, [fp, #-12]
    f8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f8e0:	bl	e00c <lookup>
    f8e4:	str	r0, [fp, #-16]
    f8e8:	ldr	r3, [fp, #-16]
    f8ec:	cmp	r3, #0
    f8f0:	bne	f8fc <getElementType+0x8c>
    f8f4:	mov	r3, #0
    f8f8:	b	f958 <getElementType+0xe8>
    f8fc:	ldr	r3, [fp, #-16]
    f900:	ldr	r3, [r3]
    f904:	ldr	r2, [fp, #-12]
    f908:	cmp	r2, r3
    f90c:	beq	f924 <getElementType+0xb4>
    f910:	ldr	r3, [fp, #-8]
    f914:	ldr	r2, [r3, #96]	; 0x60
    f918:	ldr	r3, [fp, #-8]
    f91c:	str	r2, [r3, #92]	; 0x5c
    f920:	b	f954 <getElementType+0xe4>
    f924:	ldr	r3, [fp, #-8]
    f928:	ldr	r2, [r3, #92]	; 0x5c
    f92c:	ldr	r3, [fp, #-8]
    f930:	str	r2, [r3, #96]	; 0x60
    f934:	ldr	r1, [fp, #-16]
    f938:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f93c:	bl	bf34 <setElementTypePrefix>
    f940:	mov	r3, r0
    f944:	cmp	r3, #0
    f948:	bne	f954 <getElementType+0xe4>
    f94c:	mov	r3, #0
    f950:	b	f958 <getElementType+0xe8>
    f954:	ldr	r3, [fp, #-16]
    f958:	mov	r0, r3
    f95c:	sub	sp, fp, #4
    f960:	ldr	fp, [sp]
    f964:	add	sp, sp, #4
    f968:	pop	{pc}		; (ldr pc, [sp], #4)
