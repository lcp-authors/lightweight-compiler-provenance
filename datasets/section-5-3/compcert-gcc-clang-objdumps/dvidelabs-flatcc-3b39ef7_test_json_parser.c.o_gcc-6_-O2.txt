
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_symbol_part_ext>:
       0:	sub	r1, r1, r0
       4:	cmp	r1, #8
       8:	push	{r4, r5, r6, r7}
       c:	bls	a8 <flatcc_json_parser_symbol_part_ext+0xa8>
      10:	ldrb	r4, [r0, #7]
      14:	mov	r5, #0
      18:	ldrb	r6, [r0, #6]
      1c:	lsr	r3, r6, #24
      20:	lsl	r2, r6, #8
      24:	orr	r4, r4, r2
      28:	orr	r5, r5, r3
      2c:	ldrb	r6, [r0, #5]
      30:	lsr	r3, r6, #16
      34:	lsl	r2, r6, #16
      38:	orr	r4, r4, r2
      3c:	orr	r5, r5, r3
      40:	ldrb	r6, [r0, #4]
      44:	lsr	r3, r6, #8
      48:	lsl	r2, r6, #24
      4c:	orr	r4, r4, r2
      50:	orr	r5, r5, r3
      54:	ldrb	r3, [r0, #3]
      58:	mov	r2, #0
      5c:	orr	r4, r4, r2
      60:	orr	r5, r5, r3
      64:	ldrb	r6, [r0, #2]
      68:	mov	r2, #0
      6c:	orr	r4, r4, r2
      70:	lsl	r3, r6, #8
      74:	orr	r5, r5, r3
      78:	ldrb	r6, [r0, #1]
      7c:	mov	r2, #0
      80:	orr	r2, r2, r4
      84:	lsl	r3, r6, #16
      88:	orr	r3, r3, r5
      8c:	ldrb	r4, [r0]
      90:	mov	r0, #0
      94:	orr	r0, r0, r2
      98:	lsl	r1, r4, #24
      9c:	orr	r1, r1, r3
      a0:	pop	{r4, r5, r6, r7}
      a4:	bx	lr
      a8:	sub	r1, r1, #1
      ac:	cmp	r1, #7
      b0:	ldrls	pc, [pc, r1, lsl #2]
      b4:	b	12c <flatcc_json_parser_symbol_part_ext+0x12c>
      b8:	.word	0x000000e4
      bc:	.word	0x000000f0
      c0:	.word	0x000000fc
      c4:	.word	0x00000108
      c8:	.word	0x00000114
      cc:	.word	0x00000120
      d0:	.word	0x000000d8
      d4:	.word	0x00000010
      d8:	mov	r4, #0
      dc:	mov	r5, #0
      e0:	b	18 <flatcc_json_parser_symbol_part_ext+0x18>
      e4:	mov	r2, #0
      e8:	mov	r3, #0
      ec:	b	8c <flatcc_json_parser_symbol_part_ext+0x8c>
      f0:	mov	r4, #0
      f4:	mov	r5, #0
      f8:	b	78 <flatcc_json_parser_symbol_part_ext+0x78>
      fc:	mov	r4, #0
     100:	mov	r5, #0
     104:	b	64 <flatcc_json_parser_symbol_part_ext+0x64>
     108:	mov	r4, #0
     10c:	mov	r5, #0
     110:	b	54 <flatcc_json_parser_symbol_part_ext+0x54>
     114:	mov	r4, #0
     118:	mov	r5, #0
     11c:	b	40 <flatcc_json_parser_symbol_part_ext+0x40>
     120:	mov	r4, #0
     124:	mov	r5, #0
     128:	b	2c <flatcc_json_parser_symbol_part_ext+0x2c>
     12c:	mov	r0, #0
     130:	mov	r1, #0
     134:	b	a0 <flatcc_json_parser_symbol_part_ext+0xa0>

00000138 <MyGame_Example_Any_json_union_accept_type>:
     138:	cmp	r0, #4
     13c:	movhi	r0, #0
     140:	movls	r0, #1
     144:	bx	lr

00000148 <Fantasy_Character_json_union_accept_type>:
     148:	cmp	r0, #11
     14c:	bhi	170 <Fantasy_Character_json_union_accept_type+0x28>
     150:	cmp	r0, #8
     154:	bcs	178 <Fantasy_Character_json_union_accept_type+0x30>
     158:	cmp	r0, #0
     15c:	beq	178 <Fantasy_Character_json_union_accept_type+0x30>
     160:	cmp	r0, #2
     164:	beq	178 <Fantasy_Character_json_union_accept_type+0x30>
     168:	mov	r0, #0
     16c:	bx	lr
     170:	cmp	r0, #255	; 0xff
     174:	bne	168 <Fantasy_Character_json_union_accept_type+0x20>
     178:	mov	r0, #1
     17c:	bx	lr

00000180 <Fantasy_Character_parse_json_enum>:
     180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     184:	mov	r4, r1
     188:	sub	sp, sp, #12
     18c:	mov	r1, r2
     190:	mov	r5, r0
     194:	mov	r0, r4
     198:	mov	sl, r2
     19c:	mov	fp, r3
     1a0:	bl	0 <flatcc_json_parser_symbol_part_ext>
     1a4:	add	r3, pc, #628	; 0x274
     1a8:	ldrd	r2, [r3]
     1ac:	cmp	r1, r3
     1b0:	cmpeq	r0, r2
     1b4:	bhi	228 <Fantasy_Character_parse_json_enum+0xa8>
     1b8:	add	r3, pc, #616	; 0x268
     1bc:	ldrd	r2, [r3]
     1c0:	cmp	r1, r3
     1c4:	cmpeq	r0, r2
     1c8:	bls	2f0 <Fantasy_Character_parse_json_enum+0x170>
     1cc:	add	r7, pc, #604	; 0x25c
     1d0:	ldrd	r6, [r7]
     1d4:	and	r8, r0, #-16777216	; 0xff000000
     1d8:	cmp	r1, r7
     1dc:	cmpeq	r8, r6
     1e0:	beq	3c4 <Fantasy_Character_parse_json_enum+0x244>
     1e4:	add	r3, pc, #588	; 0x24c
     1e8:	ldrd	r2, [r3]
     1ec:	bic	r0, r0, #255	; 0xff
     1f0:	cmp	r1, r3
     1f4:	cmpeq	r0, r2
     1f8:	bne	254 <Fantasy_Character_parse_json_enum+0xd4>
     1fc:	ldr	r3, [sp, #52]	; 0x34
     200:	mov	r2, sl
     204:	str	r3, [sp]
     208:	mov	r0, r5
     20c:	mov	r3, #7
     210:	mov	r1, r4
     214:	bl	0 <flatcc_json_parser_match_constant>
     218:	cmp	r4, r0
     21c:	movne	r6, #10
     220:	bne	330 <Fantasy_Character_parse_json_enum+0x1b0>
     224:	b	254 <Fantasy_Character_parse_json_enum+0xd4>
     228:	add	r3, pc, #528	; 0x210
     22c:	ldrd	r2, [r3]
     230:	cmp	r1, r3
     234:	cmpeq	r0, r2
     238:	bhi	260 <Fantasy_Character_parse_json_enum+0xe0>
     23c:	add	r3, pc, #516	; 0x204
     240:	ldrd	r2, [r3]
     244:	mov	r0, #0
     248:	cmp	r1, r3
     24c:	cmpeq	r0, r2
     250:	beq	398 <Fantasy_Character_parse_json_enum+0x218>
     254:	mov	r0, r4
     258:	add	sp, sp, #12
     25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     260:	add	r3, pc, #488	; 0x1e8
     264:	ldrd	r2, [r3]
     268:	cmp	r1, r3
     26c:	cmpeq	r0, r2
     270:	bls	354 <Fantasy_Character_parse_json_enum+0x1d4>
     274:	add	r7, pc, #476	; 0x1dc
     278:	ldrd	r6, [r7]
     27c:	ldr	r2, [pc, #500]	; 478 <Fantasy_Character_parse_json_enum+0x2f8>
     280:	mvn	r3, #0
     284:	and	r3, r3, r1
     288:	and	r2, r2, r0
     28c:	cmp	r3, r7
     290:	cmpeq	r2, r6
     294:	beq	3f0 <Fantasy_Character_parse_json_enum+0x270>
     298:	add	r3, pc, #448	; 0x1c0
     29c:	ldrd	r2, [r3]
     2a0:	cmp	r1, r3
     2a4:	cmpeq	r0, r2
     2a8:	bne	254 <Fantasy_Character_parse_json_enum+0xd4>
     2ac:	ldr	r3, [sp, #52]	; 0x34
     2b0:	mov	r2, sl
     2b4:	str	r3, [sp]
     2b8:	mov	r0, r5
     2bc:	mov	r3, #8
     2c0:	mov	r1, r4
     2c4:	bl	0 <flatcc_json_parser_match_constant>
     2c8:	cmp	r4, r0
     2cc:	beq	254 <Fantasy_Character_parse_json_enum+0xd4>
     2d0:	ldr	r2, [sp, #48]	; 0x30
     2d4:	mov	r4, r0
     2d8:	mov	r1, #0
     2dc:	mov	r0, #8
     2e0:	mov	r3, #0
     2e4:	strd	r0, [r2]
     2e8:	str	r3, [fp]
     2ec:	b	254 <Fantasy_Character_parse_json_enum+0xd4>
     2f0:	add	r3, pc, #368	; 0x170
     2f4:	ldrd	r2, [r3]
     2f8:	and	r0, r0, #-16777216	; 0xff000000
     2fc:	cmp	r1, r3
     300:	cmpeq	r0, r2
     304:	bne	254 <Fantasy_Character_parse_json_enum+0xd4>
     308:	ldr	r3, [sp, #52]	; 0x34
     30c:	mov	r2, sl
     310:	str	r3, [sp]
     314:	mov	r0, r5
     318:	mov	r3, #5
     31c:	mov	r1, r4
     320:	bl	0 <flatcc_json_parser_match_constant>
     324:	cmp	r4, r0
     328:	movne	r6, #9
     32c:	beq	254 <Fantasy_Character_parse_json_enum+0xd4>
     330:	ldr	r2, [sp, #48]	; 0x30
     334:	mov	r7, #0
     338:	mov	r3, #0
     33c:	mov	r4, r0
     340:	strd	r6, [r2]
     344:	mov	r0, r4
     348:	str	r3, [fp]
     34c:	add	sp, sp, #12
     350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     354:	add	r3, pc, #276	; 0x114
     358:	ldrd	r2, [r3]
     35c:	and	r0, r0, #-16777216	; 0xff000000
     360:	cmp	r1, r3
     364:	cmpeq	r0, r2
     368:	bne	254 <Fantasy_Character_parse_json_enum+0xd4>
     36c:	ldr	r3, [sp, #52]	; 0x34
     370:	mov	r2, sl
     374:	str	r3, [sp]
     378:	mov	r0, r5
     37c:	mov	r3, #5
     380:	mov	r1, r4
     384:	bl	0 <flatcc_json_parser_match_constant>
     388:	cmp	r4, r0
     38c:	beq	254 <Fantasy_Character_parse_json_enum+0xd4>
     390:	mov	r6, #11
     394:	b	330 <Fantasy_Character_parse_json_enum+0x1b0>
     398:	ldr	r3, [sp, #52]	; 0x34
     39c:	mov	r2, sl
     3a0:	str	r3, [sp]
     3a4:	mov	r0, r5
     3a8:	mov	r3, #4
     3ac:	mov	r1, r4
     3b0:	bl	0 <flatcc_json_parser_match_constant>
     3b4:	cmp	r4, r0
     3b8:	movne	r6, #0
     3bc:	bne	330 <Fantasy_Character_parse_json_enum+0x1b0>
     3c0:	b	254 <Fantasy_Character_parse_json_enum+0xd4>
     3c4:	ldr	r3, [sp, #52]	; 0x34
     3c8:	mov	r2, sl
     3cc:	str	r3, [sp]
     3d0:	mov	r0, r5
     3d4:	mov	r3, #5
     3d8:	mov	r1, r4
     3dc:	bl	0 <flatcc_json_parser_match_constant>
     3e0:	cmp	r4, r0
     3e4:	movne	r6, #2
     3e8:	bne	330 <Fantasy_Character_parse_json_enum+0x1b0>
     3ec:	b	254 <Fantasy_Character_parse_json_enum+0xd4>
     3f0:	ldr	r3, [sp, #52]	; 0x34
     3f4:	mov	r2, sl
     3f8:	str	r3, [sp]
     3fc:	mov	r0, r5
     400:	mov	r3, #6
     404:	mov	r1, r4
     408:	bl	0 <flatcc_json_parser_match_constant>
     40c:	cmp	r4, r0
     410:	movne	r6, #255	; 0xff
     414:	bne	330 <Fantasy_Character_parse_json_enum+0x1b0>
     418:	b	254 <Fantasy_Character_parse_json_enum+0xd4>
     41c:	nop			; (mov r0, r0)
     420:	.word	0xffffffff
     424:	.word	0x4e4f4e44
     428:	.word	0x46616dff
     42c:	.word	0x426f6f6b
     430:	.word	0x6e000000
     434:	.word	0x4d754c61
     438:	.word	0x46616e00
     43c:	.word	0x426f6f6b
     440:	.word	0x71ffffff
     444:	.word	0x4f746865
     448:	.word	0x00000000
     44c:	.word	0x4e4f4e45
     450:	.word	0x6e7a656b
     454:	.word	0x52617075
     458:	.word	0x65640000
     45c:	.word	0x556e7573
     460:	.word	0x6e7a656c
     464:	.word	0x52617075
     468:	.word	0x65000000
     46c:	.word	0x42656c6c
     470:	.word	0x72000000
     474:	.word	0x4f746865
     478:	.word	0xffff0000

0000047c <flatcc_json_parser_space>:
     47c:	sub	r3, r2, r1
     480:	cmp	r3, #1
     484:	ble	498 <flatcc_json_parser_space+0x1c>
     488:	ldrb	r3, [r1]
     48c:	cmp	r3, #32
     490:	bhi	49c <flatcc_json_parser_space+0x20>
     494:	beq	4a4 <flatcc_json_parser_space+0x28>
     498:	b	0 <flatcc_json_parser_space_ext>
     49c:	mov	r0, r1
     4a0:	bx	lr
     4a4:	ldrb	r3, [r1, #1]
     4a8:	cmp	r3, #32
     4ac:	bls	498 <flatcc_json_parser_space+0x1c>
     4b0:	add	r0, r1, #1
     4b4:	bx	lr

000004b8 <flatcc_json_parser_uint8>:
     4b8:	push	{r4, r5, r6, r7, lr}
     4bc:	mov	r6, #0
     4c0:	sub	sp, sp, #28
     4c4:	mov	r7, #0
     4c8:	mov	lr, #0
     4cc:	cmp	r1, r2
     4d0:	strb	lr, [r3]
     4d4:	str	lr, [sp, #12]
     4d8:	strd	r6, [sp, #16]
     4dc:	moveq	r0, r1
     4e0:	beq	52c <flatcc_json_parser_uint8+0x74>
     4e4:	mov	r5, r3
     4e8:	add	r3, sp, #16
     4ec:	str	r3, [sp]
     4f0:	add	r3, sp, #12
     4f4:	mov	r4, r1
     4f8:	mov	r7, r0
     4fc:	mov	r6, r2
     500:	bl	0 <flatcc_json_parser_integer>
     504:	cmp	r4, r0
     508:	beq	52c <flatcc_json_parser_uint8+0x74>
     50c:	ldr	r3, [sp, #12]
     510:	cmp	r3, #0
     514:	bne	534 <flatcc_json_parser_uint8+0x7c>
     518:	ldrd	r2, [sp, #16]
     51c:	cmp	r3, #0
     520:	cmpeq	r2, #255	; 0xff
     524:	strbls	r2, [r5]
     528:	bhi	550 <flatcc_json_parser_uint8+0x98>
     52c:	add	sp, sp, #28
     530:	pop	{r4, r5, r6, r7, pc}
     534:	mov	r1, r0
     538:	mov	r2, r6
     53c:	mov	r0, r7
     540:	mov	r3, #8
     544:	bl	0 <flatcc_json_parser_set_error>
     548:	add	sp, sp, #28
     54c:	pop	{r4, r5, r6, r7, pc}
     550:	mov	r1, r0
     554:	mov	r2, r6
     558:	mov	r0, r7
     55c:	mov	r3, #7
     560:	bl	0 <flatcc_json_parser_set_error>
     564:	add	sp, sp, #28
     568:	pop	{r4, r5, r6, r7, pc}

0000056c <flatcc_json_parser_uint32.constprop.28>:
     56c:	push	{r4, r5, r6, r7, r8, r9, lr}
     570:	mov	r6, #0
     574:	sub	sp, sp, #28
     578:	mov	r7, #0
     57c:	mov	lr, #0
     580:	cmp	r1, r2
     584:	str	lr, [r3]
     588:	str	lr, [sp, #12]
     58c:	strd	r6, [sp, #16]
     590:	moveq	r0, r1
     594:	beq	5e8 <flatcc_json_parser_uint32.constprop.28+0x7c>
     598:	mov	r5, r3
     59c:	add	r3, sp, #16
     5a0:	str	r3, [sp]
     5a4:	add	r3, sp, #12
     5a8:	mov	r4, r1
     5ac:	mov	r7, r0
     5b0:	mov	r6, r2
     5b4:	bl	0 <flatcc_json_parser_integer>
     5b8:	cmp	r4, r0
     5bc:	beq	5e8 <flatcc_json_parser_uint32.constprop.28+0x7c>
     5c0:	ldr	r3, [sp, #12]
     5c4:	cmp	r3, #0
     5c8:	bne	5f0 <flatcc_json_parser_uint32.constprop.28+0x84>
     5cc:	ldrd	r2, [sp, #16]
     5d0:	mov	r9, #0
     5d4:	mvn	r8, #0
     5d8:	cmp	r3, r9
     5dc:	cmpeq	r2, r8
     5e0:	strls	r2, [r5]
     5e4:	bhi	60c <flatcc_json_parser_uint32.constprop.28+0xa0>
     5e8:	add	sp, sp, #28
     5ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
     5f0:	mov	r1, r0
     5f4:	mov	r2, r6
     5f8:	mov	r0, r7
     5fc:	mov	r3, #8
     600:	bl	0 <flatcc_json_parser_set_error>
     604:	add	sp, sp, #28
     608:	pop	{r4, r5, r6, r7, r8, r9, pc}
     60c:	mov	r1, r0
     610:	mov	r2, r6
     614:	mov	r0, r7
     618:	mov	r3, #7
     61c:	bl	0 <flatcc_json_parser_set_error>
     620:	add	sp, sp, #28
     624:	pop	{r4, r5, r6, r7, r8, r9, pc}

00000628 <flatcc_json_parser_int16.constprop.25>:
     628:	push	{r4, r5, r6, r7, r8, r9, lr}
     62c:	mov	r6, #0
     630:	sub	sp, sp, #28
     634:	mov	r7, #0
     638:	mov	lr, #0
     63c:	cmp	r1, r2
     640:	strh	lr, [r3]
     644:	str	lr, [sp, #12]
     648:	strd	r6, [sp, #16]
     64c:	moveq	r0, r1
     650:	beq	6a0 <flatcc_json_parser_int16.constprop.25+0x78>
     654:	mov	r5, r3
     658:	add	r3, sp, #16
     65c:	str	r3, [sp]
     660:	add	r3, sp, #12
     664:	mov	r4, r1
     668:	mov	r7, r0
     66c:	mov	r6, r2
     670:	bl	0 <flatcc_json_parser_integer>
     674:	cmp	r4, r0
     678:	beq	6a0 <flatcc_json_parser_int16.constprop.25+0x78>
     67c:	ldr	r1, [sp, #12]
     680:	ldrd	r2, [sp, #16]
     684:	cmp	r1, #0
     688:	beq	6a8 <flatcc_json_parser_int16.constprop.25+0x80>
     68c:	cmp	r3, #0
     690:	cmpeq	r2, #32768	; 0x8000
     694:	rsbls	r2, r2, #0
     698:	strhls	r2, [r5]
     69c:	bhi	6d8 <flatcc_json_parser_int16.constprop.25+0xb0>
     6a0:	add	sp, sp, #28
     6a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
     6a8:	ldr	r8, [pc, #64]	; 6f0 <flatcc_json_parser_int16.constprop.25+0xc8>
     6ac:	mov	r9, #0
     6b0:	cmp	r3, r9
     6b4:	cmpeq	r2, r8
     6b8:	strhls	r2, [r5]
     6bc:	bls	6a0 <flatcc_json_parser_int16.constprop.25+0x78>
     6c0:	mov	r1, r0
     6c4:	mov	r2, r6
     6c8:	mov	r0, r7
     6cc:	mov	r3, #7
     6d0:	bl	0 <flatcc_json_parser_set_error>
     6d4:	b	6a0 <flatcc_json_parser_int16.constprop.25+0x78>
     6d8:	mov	r1, r0
     6dc:	mov	r2, r6
     6e0:	mov	r0, r7
     6e4:	mov	r3, #8
     6e8:	bl	0 <flatcc_json_parser_set_error>
     6ec:	b	6a0 <flatcc_json_parser_int16.constprop.25+0x78>
     6f0:	.word	0x00007fff

000006f4 <flatcc_json_parser_int32.constprop.26>:
     6f4:	push	{r4, r5, r6, r7, r8, r9, lr}
     6f8:	mov	r6, #0
     6fc:	sub	sp, sp, #28
     700:	mov	r7, #0
     704:	mov	lr, #0
     708:	cmp	r1, r2
     70c:	str	lr, [r3]
     710:	str	lr, [sp, #12]
     714:	strd	r6, [sp, #16]
     718:	moveq	r0, r1
     71c:	beq	76c <flatcc_json_parser_int32.constprop.26+0x78>
     720:	mov	r5, r3
     724:	add	r3, sp, #16
     728:	str	r3, [sp]
     72c:	add	r3, sp, #12
     730:	mov	r4, r1
     734:	mov	r7, r0
     738:	mov	r6, r2
     73c:	bl	0 <flatcc_json_parser_integer>
     740:	cmp	r4, r0
     744:	beq	76c <flatcc_json_parser_int32.constprop.26+0x78>
     748:	ldr	r1, [sp, #12]
     74c:	ldrd	r2, [sp, #16]
     750:	cmp	r1, #0
     754:	beq	774 <flatcc_json_parser_int32.constprop.26+0x80>
     758:	cmp	r3, #0
     75c:	cmpeq	r2, #-2147483648	; 0x80000000
     760:	rsbls	r2, r2, #0
     764:	strls	r2, [r5]
     768:	bhi	7a4 <flatcc_json_parser_int32.constprop.26+0xb0>
     76c:	add	sp, sp, #28
     770:	pop	{r4, r5, r6, r7, r8, r9, pc}
     774:	mov	r9, #0
     778:	cmp	r3, r9
     77c:	mvn	r8, #-2147483648	; 0x80000000
     780:	cmpeq	r2, r8
     784:	strls	r2, [r5]
     788:	bls	76c <flatcc_json_parser_int32.constprop.26+0x78>
     78c:	mov	r1, r0
     790:	mov	r2, r6
     794:	mov	r0, r7
     798:	mov	r3, #7
     79c:	bl	0 <flatcc_json_parser_set_error>
     7a0:	b	76c <flatcc_json_parser_int32.constprop.26+0x78>
     7a4:	mov	r1, r0
     7a8:	mov	r2, r6
     7ac:	mov	r0, r7
     7b0:	mov	r3, #8
     7b4:	bl	0 <flatcc_json_parser_set_error>
     7b8:	b	76c <flatcc_json_parser_int32.constprop.26+0x78>

000007bc <flatcc_json_parser_int64>:
     7bc:	push	{r4, r5, r6, r7, lr}
     7c0:	mov	r4, #0
     7c4:	sub	sp, sp, #28
     7c8:	mov	r5, #0
     7cc:	cmp	r1, r2
     7d0:	strd	r4, [r3]
     7d4:	strd	r4, [sp, #16]
     7d8:	str	r4, [sp, #12]
     7dc:	moveq	r0, r1
     7e0:	beq	834 <flatcc_json_parser_int64+0x78>
     7e4:	mov	r5, r3
     7e8:	add	r3, sp, #16
     7ec:	str	r3, [sp]
     7f0:	add	r3, sp, #12
     7f4:	mov	r4, r1
     7f8:	mov	r6, r2
     7fc:	mov	r7, r0
     800:	bl	0 <flatcc_json_parser_integer>
     804:	cmp	r4, r0
     808:	beq	834 <flatcc_json_parser_int64+0x78>
     80c:	ldr	r1, [sp, #12]
     810:	ldrd	r2, [sp, #16]
     814:	cmp	r1, #0
     818:	beq	83c <flatcc_json_parser_int64+0x80>
     81c:	cmp	r3, #-2147483648	; 0x80000000
     820:	cmpeq	r2, #0
     824:	bhi	854 <flatcc_json_parser_int64+0x98>
     828:	rsbs	r2, r2, #0
     82c:	rsc	r3, r3, #0
     830:	strd	r2, [r5]
     834:	add	sp, sp, #28
     838:	pop	{r4, r5, r6, r7, pc}
     83c:	cmp	r2, #0
     840:	sbcs	r1, r3, #0
     844:	blt	86c <flatcc_json_parser_int64+0xb0>
     848:	strd	r2, [r5]
     84c:	add	sp, sp, #28
     850:	pop	{r4, r5, r6, r7, pc}
     854:	mov	r1, r0
     858:	mov	r2, r6
     85c:	mov	r0, r7
     860:	mov	r3, #8
     864:	bl	0 <flatcc_json_parser_set_error>
     868:	b	834 <flatcc_json_parser_int64+0x78>
     86c:	mov	r1, r0
     870:	mov	r2, r6
     874:	mov	r0, r7
     878:	mov	r3, #7
     87c:	bl	0 <flatcc_json_parser_set_error>
     880:	b	834 <flatcc_json_parser_int64+0x78>

00000884 <flatcc_json_parser_object_start>:
     884:	cmp	r1, r2
     888:	beq	898 <flatcc_json_parser_object_start+0x14>
     88c:	ldrb	ip, [r1]
     890:	cmp	ip, #123	; 0x7b
     894:	beq	8a8 <flatcc_json_parser_object_start+0x24>
     898:	mov	ip, #0
     89c:	str	ip, [r3]
     8a0:	mov	r3, #21
     8a4:	b	0 <flatcc_json_parser_set_error>
     8a8:	push	{r4, r5, r6, lr}
     8ac:	mov	r5, r0
     8b0:	add	r0, r1, #1
     8b4:	mov	r6, r3
     8b8:	sub	r3, r2, r0
     8bc:	cmp	r3, #1
     8c0:	mov	r4, r2
     8c4:	ble	8d8 <flatcc_json_parser_object_start+0x54>
     8c8:	ldrb	r3, [r1, #1]
     8cc:	cmp	r3, #32
     8d0:	bhi	8e8 <flatcc_json_parser_object_start+0x64>
     8d4:	beq	908 <flatcc_json_parser_object_start+0x84>
     8d8:	mov	r1, r0
     8dc:	mov	r2, r4
     8e0:	mov	r0, r5
     8e4:	bl	0 <flatcc_json_parser_space_ext>
     8e8:	cmp	r4, r0
     8ec:	beq	8fc <flatcc_json_parser_object_start+0x78>
     8f0:	ldrb	r3, [r0]
     8f4:	cmp	r3, #125	; 0x7d
     8f8:	beq	91c <flatcc_json_parser_object_start+0x98>
     8fc:	mov	r3, #1
     900:	str	r3, [r6]
     904:	pop	{r4, r5, r6, pc}
     908:	ldrb	r3, [r1, #2]
     90c:	cmp	r3, #32
     910:	addhi	r0, r1, #2
     914:	bls	8d8 <flatcc_json_parser_object_start+0x54>
     918:	b	8e8 <flatcc_json_parser_object_start+0x64>
     91c:	mov	r3, #0
     920:	mov	r2, r4
     924:	add	r1, r0, #1
     928:	str	r3, [r6]
     92c:	mov	r0, r5
     930:	pop	{r4, r5, r6, lr}
     934:	b	47c <flatcc_json_parser_space>

00000938 <flatcc_json_parser_array_start>:
     938:	cmp	r1, r2
     93c:	beq	94c <flatcc_json_parser_array_start+0x14>
     940:	ldrb	ip, [r1]
     944:	cmp	ip, #91	; 0x5b
     948:	beq	95c <flatcc_json_parser_array_start+0x24>
     94c:	mov	ip, #0
     950:	str	ip, [r3]
     954:	mov	r3, #22
     958:	b	0 <flatcc_json_parser_set_error>
     95c:	push	{r4, r5, r6, lr}
     960:	mov	r5, r0
     964:	add	r0, r1, #1
     968:	mov	r6, r3
     96c:	sub	r3, r2, r0
     970:	cmp	r3, #1
     974:	mov	r4, r2
     978:	ble	98c <flatcc_json_parser_array_start+0x54>
     97c:	ldrb	r3, [r1, #1]
     980:	cmp	r3, #32
     984:	bhi	99c <flatcc_json_parser_array_start+0x64>
     988:	beq	9bc <flatcc_json_parser_array_start+0x84>
     98c:	mov	r1, r0
     990:	mov	r2, r4
     994:	mov	r0, r5
     998:	bl	0 <flatcc_json_parser_space_ext>
     99c:	cmp	r4, r0
     9a0:	beq	9b0 <flatcc_json_parser_array_start+0x78>
     9a4:	ldrb	r3, [r0]
     9a8:	cmp	r3, #93	; 0x5d
     9ac:	beq	9d0 <flatcc_json_parser_array_start+0x98>
     9b0:	mov	r3, #1
     9b4:	str	r3, [r6]
     9b8:	pop	{r4, r5, r6, pc}
     9bc:	ldrb	r3, [r1, #2]
     9c0:	cmp	r3, #32
     9c4:	addhi	r0, r1, #2
     9c8:	bls	98c <flatcc_json_parser_array_start+0x54>
     9cc:	b	99c <flatcc_json_parser_array_start+0x64>
     9d0:	mov	r3, #0
     9d4:	mov	r2, r4
     9d8:	add	r1, r0, #1
     9dc:	str	r3, [r6]
     9e0:	mov	r0, r5
     9e4:	pop	{r4, r5, r6, lr}
     9e8:	b	47c <flatcc_json_parser_space>

000009ec <flatcc_json_parser_symbolic_float>:
     9ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9f0:	sub	sp, sp, #36	; 0x24
     9f4:	mov	fp, r3
     9f8:	ldr	r3, [sp, #72]	; 0x48
     9fc:	mov	ip, #0
     a00:	cmp	r1, r2
     a04:	mov	r5, r1
     a08:	mov	r6, r2
     a0c:	str	ip, [r3]
     a10:	mov	r8, r0
     a14:	beq	b7c <flatcc_json_parser_symbolic_float+0x190>
     a18:	ldrb	r3, [r1]
     a1c:	cmp	r3, #34	; 0x22
     a20:	beq	b2c <flatcc_json_parser_symbolic_float+0x140>
     a24:	cmp	r3, #46	; 0x2e
     a28:	movne	r3, #1
     a2c:	strne	r3, [r0, #12]
     a30:	beq	b8c <flatcc_json_parser_symbolic_float+0x1a0>
     a34:	add	sl, sp, #20
     a38:	add	r9, sp, #24
     a3c:	mov	r3, #0
     a40:	str	r3, [sp, #12]
     a44:	ldr	r4, [fp]
     a48:	mov	r7, fp
     a4c:	b	a64 <flatcc_json_parser_symbolic_float+0x78>
     a50:	cmp	r5, r0
     a54:	bne	a90 <flatcc_json_parser_symbolic_float+0xa4>
     a58:	ldr	r4, [r7, #4]!
     a5c:	cmp	r4, #0
     a60:	beq	afc <flatcc_json_parser_symbolic_float+0x110>
     a64:	stm	sp, {r9, sl}
     a68:	add	r3, sp, #16
     a6c:	mov	r2, r6
     a70:	mov	r1, r5
     a74:	mov	r0, r8
     a78:	blx	r4
     a7c:	cmp	r6, r0
     a80:	bne	a50 <flatcc_json_parser_symbolic_float+0x64>
     a84:	mov	r0, r6
     a88:	add	sp, sp, #36	; 0x24
     a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a90:	ldr	r3, [sp, #12]
     a94:	mov	r4, r0
     a98:	cmp	r3, #0
     a9c:	beq	aac <flatcc_json_parser_symbolic_float+0xc0>
     aa0:	ldr	r3, [r8, #12]
     aa4:	cmp	r3, #0
     aa8:	bne	bc8 <flatcc_json_parser_symbolic_float+0x1dc>
     aac:	ldr	r3, [sp, #16]
     ab0:	ldrd	r0, [sp, #24]
     ab4:	cmp	r3, #0
     ab8:	beq	b20 <flatcc_json_parser_symbolic_float+0x134>
     abc:	bl	0 <__aeabi_ul2f>
     ac0:	vmov	s15, r0
     ac4:	vneg.f32	s14, s15
     ac8:	ldr	r3, [sp, #72]	; 0x48
     acc:	ldr	r2, [sp, #12]
     ad0:	vldr	s15, [r3]
     ad4:	ldr	r3, [sp, #20]
     ad8:	add	r2, r2, #1
     adc:	cmp	r3, #0
     ae0:	vadd.f32	s15, s15, s14
     ae4:	ldr	r3, [sp, #72]	; 0x48
     ae8:	str	r2, [sp, #12]
     aec:	vstr	s15, [r3]
     af0:	beq	bc0 <flatcc_json_parser_symbolic_float+0x1d4>
     af4:	mov	r5, r4
     af8:	b	a44 <flatcc_json_parser_symbolic_float+0x58>
     afc:	mov	r2, r6
     b00:	mov	r1, r5
     b04:	mov	r0, r8
     b08:	mov	r3, #23
     b0c:	bl	0 <flatcc_json_parser_set_error>
     b10:	mov	r6, r0
     b14:	mov	r0, r6
     b18:	add	sp, sp, #36	; 0x24
     b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b20:	bl	0 <__aeabi_ul2f>
     b24:	vmov	s14, r0
     b28:	b	ac8 <flatcc_json_parser_symbolic_float+0xdc>
     b2c:	add	r5, r1, #1
     b30:	sub	r3, r6, r5
     b34:	mov	r2, #0
     b38:	str	r2, [r0, #12]
     b3c:	cmp	r3, #1
     b40:	ble	b54 <flatcc_json_parser_symbolic_float+0x168>
     b44:	ldrb	r3, [r5]
     b48:	cmp	r3, #32
     b4c:	bhi	b68 <flatcc_json_parser_symbolic_float+0x17c>
     b50:	beq	bac <flatcc_json_parser_symbolic_float+0x1c0>
     b54:	mov	r1, r5
     b58:	mov	r2, r6
     b5c:	mov	r0, r8
     b60:	bl	0 <flatcc_json_parser_space_ext>
     b64:	mov	r5, r0
     b68:	cmp	r6, r5
     b6c:	bne	a34 <flatcc_json_parser_symbolic_float+0x48>
     b70:	mov	r0, r6
     b74:	add	sp, sp, #36	; 0x24
     b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b7c:	ldr	r3, [r0, #12]
     b80:	cmp	r3, #0
     b84:	beq	b54 <flatcc_json_parser_symbolic_float+0x168>
     b88:	b	a84 <flatcc_json_parser_symbolic_float+0x98>
     b8c:	mov	r3, #5
     b90:	bl	0 <flatcc_json_parser_set_error>
     b94:	ldr	r3, [r8, #12]
     b98:	cmp	r3, #0
     b9c:	mov	r5, r0
     ba0:	subeq	r3, r6, r0
     ba4:	beq	b3c <flatcc_json_parser_symbolic_float+0x150>
     ba8:	b	b68 <flatcc_json_parser_symbolic_float+0x17c>
     bac:	ldrb	r3, [r5, #1]
     bb0:	cmp	r3, #32
     bb4:	addhi	r5, r5, #1
     bb8:	bls	b54 <flatcc_json_parser_symbolic_float+0x168>
     bbc:	b	b68 <flatcc_json_parser_symbolic_float+0x17c>
     bc0:	mov	r6, r4
     bc4:	b	a84 <flatcc_json_parser_symbolic_float+0x98>
     bc8:	mov	r2, r6
     bcc:	mov	r1, r4
     bd0:	mov	r0, r8
     bd4:	mov	r3, #14
     bd8:	bl	0 <flatcc_json_parser_set_error>
     bdc:	mov	r6, r0
     be0:	b	a84 <flatcc_json_parser_symbolic_float+0x98>

00000be4 <flatcc_json_parser_symbolic_double>:
     be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     be8:	sub	sp, sp, #36	; 0x24
     bec:	mov	fp, r3
     bf0:	ldr	r3, [sp, #72]	; 0x48
     bf4:	mov	r8, #0
     bf8:	mov	r9, #0
     bfc:	cmp	r1, r2
     c00:	strd	r8, [r3]
     c04:	mov	r5, r1
     c08:	mov	r6, r2
     c0c:	mov	r8, r0
     c10:	beq	d78 <flatcc_json_parser_symbolic_double+0x194>
     c14:	ldrb	r3, [r1]
     c18:	cmp	r3, #34	; 0x22
     c1c:	beq	d28 <flatcc_json_parser_symbolic_double+0x144>
     c20:	cmp	r3, #46	; 0x2e
     c24:	movne	r3, #1
     c28:	strne	r3, [r0, #12]
     c2c:	beq	d88 <flatcc_json_parser_symbolic_double+0x1a4>
     c30:	add	sl, sp, #20
     c34:	add	r9, sp, #24
     c38:	mov	r3, #0
     c3c:	str	r3, [sp, #12]
     c40:	ldr	r4, [fp]
     c44:	mov	r7, fp
     c48:	b	c60 <flatcc_json_parser_symbolic_double+0x7c>
     c4c:	cmp	r5, r0
     c50:	bne	c8c <flatcc_json_parser_symbolic_double+0xa8>
     c54:	ldr	r4, [r7, #4]!
     c58:	cmp	r4, #0
     c5c:	beq	cf8 <flatcc_json_parser_symbolic_double+0x114>
     c60:	stm	sp, {r9, sl}
     c64:	add	r3, sp, #16
     c68:	mov	r2, r6
     c6c:	mov	r1, r5
     c70:	mov	r0, r8
     c74:	blx	r4
     c78:	cmp	r6, r0
     c7c:	bne	c4c <flatcc_json_parser_symbolic_double+0x68>
     c80:	mov	r0, r6
     c84:	add	sp, sp, #36	; 0x24
     c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     c8c:	ldr	r3, [sp, #12]
     c90:	mov	r4, r0
     c94:	cmp	r3, #0
     c98:	beq	ca8 <flatcc_json_parser_symbolic_double+0xc4>
     c9c:	ldr	r3, [r8, #12]
     ca0:	cmp	r3, #0
     ca4:	bne	dc4 <flatcc_json_parser_symbolic_double+0x1e0>
     ca8:	ldr	r3, [sp, #16]
     cac:	ldrd	r0, [sp, #24]
     cb0:	cmp	r3, #0
     cb4:	beq	d1c <flatcc_json_parser_symbolic_double+0x138>
     cb8:	bl	0 <__aeabi_ul2d>
     cbc:	vmov	d7, r0, r1
     cc0:	vneg.f64	d6, d7
     cc4:	ldr	r3, [sp, #72]	; 0x48
     cc8:	ldr	r2, [sp, #12]
     ccc:	vldr	d7, [r3]
     cd0:	ldr	r3, [sp, #20]
     cd4:	add	r2, r2, #1
     cd8:	cmp	r3, #0
     cdc:	vadd.f64	d7, d7, d6
     ce0:	ldr	r3, [sp, #72]	; 0x48
     ce4:	str	r2, [sp, #12]
     ce8:	vstr	d7, [r3]
     cec:	beq	dbc <flatcc_json_parser_symbolic_double+0x1d8>
     cf0:	mov	r5, r4
     cf4:	b	c40 <flatcc_json_parser_symbolic_double+0x5c>
     cf8:	mov	r2, r6
     cfc:	mov	r1, r5
     d00:	mov	r0, r8
     d04:	mov	r3, #23
     d08:	bl	0 <flatcc_json_parser_set_error>
     d0c:	mov	r6, r0
     d10:	mov	r0, r6
     d14:	add	sp, sp, #36	; 0x24
     d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d1c:	bl	0 <__aeabi_ul2d>
     d20:	vmov	d6, r0, r1
     d24:	b	cc4 <flatcc_json_parser_symbolic_double+0xe0>
     d28:	add	r5, r1, #1
     d2c:	sub	r3, r6, r5
     d30:	mov	r2, #0
     d34:	str	r2, [r0, #12]
     d38:	cmp	r3, #1
     d3c:	ble	d50 <flatcc_json_parser_symbolic_double+0x16c>
     d40:	ldrb	r3, [r5]
     d44:	cmp	r3, #32
     d48:	bhi	d64 <flatcc_json_parser_symbolic_double+0x180>
     d4c:	beq	da8 <flatcc_json_parser_symbolic_double+0x1c4>
     d50:	mov	r1, r5
     d54:	mov	r2, r6
     d58:	mov	r0, r8
     d5c:	bl	0 <flatcc_json_parser_space_ext>
     d60:	mov	r5, r0
     d64:	cmp	r6, r5
     d68:	bne	c30 <flatcc_json_parser_symbolic_double+0x4c>
     d6c:	mov	r0, r6
     d70:	add	sp, sp, #36	; 0x24
     d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d78:	ldr	r3, [r0, #12]
     d7c:	cmp	r3, #0
     d80:	beq	d50 <flatcc_json_parser_symbolic_double+0x16c>
     d84:	b	c80 <flatcc_json_parser_symbolic_double+0x9c>
     d88:	mov	r3, #5
     d8c:	bl	0 <flatcc_json_parser_set_error>
     d90:	ldr	r3, [r8, #12]
     d94:	cmp	r3, #0
     d98:	mov	r5, r0
     d9c:	subeq	r3, r6, r0
     da0:	beq	d38 <flatcc_json_parser_symbolic_double+0x154>
     da4:	b	d64 <flatcc_json_parser_symbolic_double+0x180>
     da8:	ldrb	r3, [r5, #1]
     dac:	cmp	r3, #32
     db0:	addhi	r5, r5, #1
     db4:	bls	d50 <flatcc_json_parser_symbolic_double+0x16c>
     db8:	b	d64 <flatcc_json_parser_symbolic_double+0x180>
     dbc:	mov	r6, r4
     dc0:	b	c80 <flatcc_json_parser_symbolic_double+0x9c>
     dc4:	mov	r2, r6
     dc8:	mov	r1, r4
     dcc:	mov	r0, r8
     dd0:	mov	r3, #14
     dd4:	bl	0 <flatcc_json_parser_set_error>
     dd8:	mov	r6, r0
     ddc:	b	c80 <flatcc_json_parser_symbolic_double+0x9c>

00000de0 <flatcc_json_parser_symbolic_bool>:
     de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     de4:	sub	sp, sp, #36	; 0x24
     de8:	mov	ip, #0
     dec:	str	r3, [sp, #12]
     df0:	ldr	r3, [sp, #72]	; 0x48
     df4:	cmp	r1, r2
     df8:	mov	r6, r1
     dfc:	mov	r5, r2
     e00:	strb	ip, [r3]
     e04:	mov	r8, r0
     e08:	beq	f84 <flatcc_json_parser_symbolic_bool+0x1a4>
     e0c:	ldrb	r3, [r1]
     e10:	cmp	r3, #34	; 0x22
     e14:	beq	f38 <flatcc_json_parser_symbolic_bool+0x158>
     e18:	cmp	r3, #46	; 0x2e
     e1c:	movne	r3, #1
     e20:	strne	r3, [r0, #12]
     e24:	beq	f94 <flatcc_json_parser_symbolic_bool+0x1b4>
     e28:	add	sl, sp, #20
     e2c:	add	r9, sp, #24
     e30:	mov	fp, #0
     e34:	str	fp, [sp, #8]
     e38:	ldr	r3, [sp, #12]
     e3c:	mov	r7, r3
     e40:	ldr	r4, [r3]
     e44:	b	e5c <flatcc_json_parser_symbolic_bool+0x7c>
     e48:	cmp	r6, r0
     e4c:	bne	e88 <flatcc_json_parser_symbolic_bool+0xa8>
     e50:	ldr	r4, [r7, #4]!
     e54:	cmp	r4, #0
     e58:	beq	ef4 <flatcc_json_parser_symbolic_bool+0x114>
     e5c:	stm	sp, {r9, sl}
     e60:	add	r3, sp, #16
     e64:	mov	r2, r5
     e68:	mov	r1, r6
     e6c:	mov	r0, r8
     e70:	blx	r4
     e74:	cmp	r5, r0
     e78:	bne	e48 <flatcc_json_parser_symbolic_bool+0x68>
     e7c:	mov	r0, r5
     e80:	add	sp, sp, #36	; 0x24
     e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e88:	cmp	fp, #0
     e8c:	mov	r4, r0
     e90:	beq	ea0 <flatcc_json_parser_symbolic_bool+0xc0>
     e94:	ldr	r3, [r8, #12]
     e98:	cmp	r3, #0
     e9c:	bne	fd0 <flatcc_json_parser_symbolic_bool+0x1f0>
     ea0:	ldr	r3, [sp, #16]
     ea4:	cmp	r3, #0
     ea8:	bne	f18 <flatcc_json_parser_symbolic_bool+0x138>
     eac:	ldr	r3, [sp, #28]
     eb0:	ldr	r2, [sp, #24]
     eb4:	orrs	r3, r2, r3
     eb8:	movne	r3, #1
     ebc:	moveq	r3, #0
     ec0:	str	r3, [sp, #8]
     ec4:	ldr	r3, [sp, #72]	; 0x48
     ec8:	ldr	r2, [sp, #20]
     ecc:	ldr	r1, [sp, #8]
     ed0:	ldrb	r3, [r3]
     ed4:	cmp	r2, #0
     ed8:	ldr	r2, [sp, #72]	; 0x48
     edc:	add	r3, r1, r3
     ee0:	add	fp, fp, #1
     ee4:	strb	r3, [r2]
     ee8:	beq	fc8 <flatcc_json_parser_symbolic_bool+0x1e8>
     eec:	mov	r6, r4
     ef0:	b	e38 <flatcc_json_parser_symbolic_bool+0x58>
     ef4:	mov	r2, r5
     ef8:	mov	r1, r6
     efc:	mov	r0, r8
     f00:	mov	r3, #23
     f04:	bl	0 <flatcc_json_parser_set_error>
     f08:	mov	r5, r0
     f0c:	mov	r0, r5
     f10:	add	sp, sp, #36	; 0x24
     f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f18:	mov	r3, #8
     f1c:	mov	r2, r5
     f20:	mov	r1, r4
     f24:	mov	r0, r8
     f28:	bl	0 <flatcc_json_parser_set_error>
     f2c:	cmp	r5, r0
     f30:	bne	ec4 <flatcc_json_parser_symbolic_bool+0xe4>
     f34:	b	e7c <flatcc_json_parser_symbolic_bool+0x9c>
     f38:	add	r6, r1, #1
     f3c:	sub	r3, r2, r6
     f40:	str	ip, [r0, #12]
     f44:	cmp	r3, #1
     f48:	ble	f5c <flatcc_json_parser_symbolic_bool+0x17c>
     f4c:	ldrb	r3, [r6]
     f50:	cmp	r3, #32
     f54:	bhi	f70 <flatcc_json_parser_symbolic_bool+0x190>
     f58:	beq	fb4 <flatcc_json_parser_symbolic_bool+0x1d4>
     f5c:	mov	r1, r6
     f60:	mov	r2, r5
     f64:	mov	r0, r8
     f68:	bl	0 <flatcc_json_parser_space_ext>
     f6c:	mov	r6, r0
     f70:	cmp	r5, r6
     f74:	bne	e28 <flatcc_json_parser_symbolic_bool+0x48>
     f78:	mov	r0, r5
     f7c:	add	sp, sp, #36	; 0x24
     f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f84:	ldr	r3, [r0, #12]
     f88:	cmp	r3, #0
     f8c:	beq	f5c <flatcc_json_parser_symbolic_bool+0x17c>
     f90:	b	e7c <flatcc_json_parser_symbolic_bool+0x9c>
     f94:	mov	r3, #5
     f98:	bl	0 <flatcc_json_parser_set_error>
     f9c:	ldr	r3, [r8, #12]
     fa0:	cmp	r3, #0
     fa4:	mov	r6, r0
     fa8:	subeq	r3, r5, r0
     fac:	beq	f44 <flatcc_json_parser_symbolic_bool+0x164>
     fb0:	b	f70 <flatcc_json_parser_symbolic_bool+0x190>
     fb4:	ldrb	r3, [r6, #1]
     fb8:	cmp	r3, #32
     fbc:	addhi	r6, r6, #1
     fc0:	bls	f5c <flatcc_json_parser_symbolic_bool+0x17c>
     fc4:	b	f70 <flatcc_json_parser_symbolic_bool+0x190>
     fc8:	mov	r5, r4
     fcc:	b	e7c <flatcc_json_parser_symbolic_bool+0x9c>
     fd0:	mov	r2, r5
     fd4:	mov	r1, r4
     fd8:	mov	r0, r8
     fdc:	mov	r3, #14
     fe0:	bl	0 <flatcc_json_parser_set_error>
     fe4:	mov	r5, r0
     fe8:	b	e7c <flatcc_json_parser_symbolic_bool+0x9c>

00000fec <flatcc_json_parser_symbolic_int32>:
     fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ff0:	sub	sp, sp, #36	; 0x24
     ff4:	mov	ip, #0
     ff8:	str	r3, [sp, #12]
     ffc:	ldr	r3, [sp, #72]	; 0x48
    1000:	cmp	r1, r2
    1004:	mov	r6, r1
    1008:	mov	r5, r2
    100c:	str	ip, [r3]
    1010:	mov	r8, r0
    1014:	beq	11b8 <flatcc_json_parser_symbolic_int32+0x1cc>
    1018:	ldrb	r3, [r1]
    101c:	cmp	r3, #34	; 0x22
    1020:	beq	1174 <flatcc_json_parser_symbolic_int32+0x188>
    1024:	cmp	r3, #46	; 0x2e
    1028:	movne	r3, #1
    102c:	strne	r3, [r0, #12]
    1030:	beq	11c8 <flatcc_json_parser_symbolic_int32+0x1dc>
    1034:	add	sl, sp, #20
    1038:	add	r9, sp, #24
    103c:	mov	fp, #0
    1040:	str	fp, [sp, #8]
    1044:	ldr	r3, [sp, #12]
    1048:	mov	r7, r3
    104c:	ldr	r4, [r3]
    1050:	b	1068 <flatcc_json_parser_symbolic_int32+0x7c>
    1054:	cmp	r6, r0
    1058:	bne	1094 <flatcc_json_parser_symbolic_int32+0xa8>
    105c:	ldr	r4, [r7, #4]!
    1060:	cmp	r4, #0
    1064:	beq	1100 <flatcc_json_parser_symbolic_int32+0x114>
    1068:	stm	sp, {r9, sl}
    106c:	add	r3, sp, #16
    1070:	mov	r2, r5
    1074:	mov	r1, r6
    1078:	mov	r0, r8
    107c:	blx	r4
    1080:	cmp	r5, r0
    1084:	bne	1054 <flatcc_json_parser_symbolic_int32+0x68>
    1088:	mov	r0, r5
    108c:	add	sp, sp, #36	; 0x24
    1090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1094:	cmp	fp, #0
    1098:	mov	r4, r0
    109c:	beq	10ac <flatcc_json_parser_symbolic_int32+0xc0>
    10a0:	ldr	r3, [r8, #12]
    10a4:	cmp	r3, #0
    10a8:	bne	1204 <flatcc_json_parser_symbolic_int32+0x218>
    10ac:	ldr	r1, [sp, #16]
    10b0:	ldrd	r2, [sp, #24]
    10b4:	cmp	r1, #0
    10b8:	beq	1124 <flatcc_json_parser_symbolic_int32+0x138>
    10bc:	cmp	r3, #0
    10c0:	cmpeq	r2, #-2147483648	; 0x80000000
    10c4:	rsbls	r3, r2, #0
    10c8:	strls	r3, [sp, #8]
    10cc:	bhi	1154 <flatcc_json_parser_symbolic_int32+0x168>
    10d0:	ldr	r3, [sp, #72]	; 0x48
    10d4:	ldr	r2, [sp, #20]
    10d8:	ldr	r1, [sp, #8]
    10dc:	ldr	r3, [r3]
    10e0:	cmp	r2, #0
    10e4:	ldr	r2, [sp, #72]	; 0x48
    10e8:	add	r3, r3, r1
    10ec:	add	fp, fp, #1
    10f0:	str	r3, [r2]
    10f4:	beq	11fc <flatcc_json_parser_symbolic_int32+0x210>
    10f8:	mov	r6, r4
    10fc:	b	1044 <flatcc_json_parser_symbolic_int32+0x58>
    1100:	mov	r2, r5
    1104:	mov	r1, r6
    1108:	mov	r0, r8
    110c:	mov	r3, #23
    1110:	bl	0 <flatcc_json_parser_set_error>
    1114:	mov	r5, r0
    1118:	mov	r0, r5
    111c:	add	sp, sp, #36	; 0x24
    1120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1124:	mov	r1, #0
    1128:	cmp	r3, r1
    112c:	mvn	r0, #-2147483648	; 0x80000000
    1130:	cmpeq	r2, r0
    1134:	strls	r2, [sp, #8]
    1138:	bls	10d0 <flatcc_json_parser_symbolic_int32+0xe4>
    113c:	mov	r3, #7
    1140:	mov	r2, r5
    1144:	mov	r1, r4
    1148:	mov	r0, r8
    114c:	bl	0 <flatcc_json_parser_set_error>
    1150:	b	1168 <flatcc_json_parser_symbolic_int32+0x17c>
    1154:	mov	r3, #8
    1158:	mov	r2, r5
    115c:	mov	r1, r4
    1160:	mov	r0, r8
    1164:	bl	0 <flatcc_json_parser_set_error>
    1168:	cmp	r5, r0
    116c:	bne	10d0 <flatcc_json_parser_symbolic_int32+0xe4>
    1170:	b	1088 <flatcc_json_parser_symbolic_int32+0x9c>
    1174:	add	r6, r1, #1
    1178:	sub	r3, r2, r6
    117c:	str	ip, [r0, #12]
    1180:	cmp	r3, #1
    1184:	ble	1198 <flatcc_json_parser_symbolic_int32+0x1ac>
    1188:	ldrb	r3, [r6]
    118c:	cmp	r3, #32
    1190:	bhi	11ac <flatcc_json_parser_symbolic_int32+0x1c0>
    1194:	beq	11e8 <flatcc_json_parser_symbolic_int32+0x1fc>
    1198:	mov	r1, r6
    119c:	mov	r2, r5
    11a0:	mov	r0, r8
    11a4:	bl	0 <flatcc_json_parser_space_ext>
    11a8:	mov	r6, r0
    11ac:	cmp	r5, r6
    11b0:	bne	1034 <flatcc_json_parser_symbolic_int32+0x48>
    11b4:	b	1088 <flatcc_json_parser_symbolic_int32+0x9c>
    11b8:	ldr	r3, [r0, #12]
    11bc:	cmp	r3, #0
    11c0:	bne	1088 <flatcc_json_parser_symbolic_int32+0x9c>
    11c4:	b	1198 <flatcc_json_parser_symbolic_int32+0x1ac>
    11c8:	mov	r3, #5
    11cc:	bl	0 <flatcc_json_parser_set_error>
    11d0:	ldr	r3, [r8, #12]
    11d4:	cmp	r3, #0
    11d8:	mov	r6, r0
    11dc:	subeq	r3, r5, r0
    11e0:	beq	1180 <flatcc_json_parser_symbolic_int32+0x194>
    11e4:	b	11ac <flatcc_json_parser_symbolic_int32+0x1c0>
    11e8:	ldrb	r3, [r6, #1]
    11ec:	cmp	r3, #32
    11f0:	addhi	r6, r6, #1
    11f4:	bls	1198 <flatcc_json_parser_symbolic_int32+0x1ac>
    11f8:	b	11ac <flatcc_json_parser_symbolic_int32+0x1c0>
    11fc:	mov	r5, r4
    1200:	b	1088 <flatcc_json_parser_symbolic_int32+0x9c>
    1204:	mov	r2, r5
    1208:	mov	r1, r4
    120c:	mov	r0, r8
    1210:	mov	r3, #14
    1214:	bl	0 <flatcc_json_parser_set_error>
    1218:	mov	r5, r0
    121c:	b	1088 <flatcc_json_parser_symbolic_int32+0x9c>

00001220 <flatcc_json_parser_symbolic_uint32>:
    1220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1224:	sub	sp, sp, #36	; 0x24
    1228:	mov	ip, #0
    122c:	str	r3, [sp, #8]
    1230:	ldr	r3, [sp, #72]	; 0x48
    1234:	cmp	r1, r2
    1238:	mov	r6, r1
    123c:	mov	r5, r2
    1240:	str	ip, [r3]
    1244:	mov	r8, r0
    1248:	beq	13dc <flatcc_json_parser_symbolic_uint32+0x1bc>
    124c:	ldrb	r3, [r1]
    1250:	cmp	r3, #34	; 0x22
    1254:	beq	1390 <flatcc_json_parser_symbolic_uint32+0x170>
    1258:	cmp	r3, #46	; 0x2e
    125c:	movne	r3, #1
    1260:	strne	r3, [r0, #12]
    1264:	beq	13ec <flatcc_json_parser_symbolic_uint32+0x1cc>
    1268:	add	sl, sp, #20
    126c:	add	r9, sp, #24
    1270:	mov	fp, #0
    1274:	str	fp, [sp, #12]
    1278:	ldr	r7, [sp, #8]
    127c:	ldr	r4, [r7]
    1280:	b	1298 <flatcc_json_parser_symbolic_uint32+0x78>
    1284:	cmp	r6, r0
    1288:	bne	12c4 <flatcc_json_parser_symbolic_uint32+0xa4>
    128c:	ldr	r4, [r7, #4]!
    1290:	cmp	r4, #0
    1294:	beq	1334 <flatcc_json_parser_symbolic_uint32+0x114>
    1298:	stm	sp, {r9, sl}
    129c:	add	r3, sp, #16
    12a0:	mov	r2, r5
    12a4:	mov	r1, r6
    12a8:	mov	r0, r8
    12ac:	blx	r4
    12b0:	cmp	r5, r0
    12b4:	bne	1284 <flatcc_json_parser_symbolic_uint32+0x64>
    12b8:	mov	r0, r5
    12bc:	add	sp, sp, #36	; 0x24
    12c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12c4:	cmp	fp, #0
    12c8:	mov	r4, r0
    12cc:	beq	12dc <flatcc_json_parser_symbolic_uint32+0xbc>
    12d0:	ldr	r3, [r8, #12]
    12d4:	cmp	r3, #0
    12d8:	bne	1428 <flatcc_json_parser_symbolic_uint32+0x208>
    12dc:	ldr	r3, [sp, #16]
    12e0:	cmp	r3, #0
    12e4:	bne	1358 <flatcc_json_parser_symbolic_uint32+0x138>
    12e8:	ldrd	r2, [sp, #24]
    12ec:	mov	r1, #0
    12f0:	mvn	r0, #0
    12f4:	cmp	r3, r1
    12f8:	cmpeq	r2, r0
    12fc:	strls	r2, [sp, #12]
    1300:	bhi	1378 <flatcc_json_parser_symbolic_uint32+0x158>
    1304:	ldr	r3, [sp, #72]	; 0x48
    1308:	ldr	r2, [sp, #20]
    130c:	ldr	r1, [sp, #12]
    1310:	ldr	r3, [r3]
    1314:	cmp	r2, #0
    1318:	ldr	r2, [sp, #72]	; 0x48
    131c:	add	r3, r3, r1
    1320:	add	fp, fp, #1
    1324:	str	r3, [r2]
    1328:	beq	1420 <flatcc_json_parser_symbolic_uint32+0x200>
    132c:	mov	r6, r4
    1330:	b	1278 <flatcc_json_parser_symbolic_uint32+0x58>
    1334:	mov	r2, r5
    1338:	mov	r1, r6
    133c:	mov	r0, r8
    1340:	mov	r3, #23
    1344:	bl	0 <flatcc_json_parser_set_error>
    1348:	mov	r5, r0
    134c:	mov	r0, r5
    1350:	add	sp, sp, #36	; 0x24
    1354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1358:	mov	r3, #8
    135c:	mov	r2, r5
    1360:	mov	r1, r4
    1364:	mov	r0, r8
    1368:	bl	0 <flatcc_json_parser_set_error>
    136c:	cmp	r5, r0
    1370:	bne	1304 <flatcc_json_parser_symbolic_uint32+0xe4>
    1374:	b	12b8 <flatcc_json_parser_symbolic_uint32+0x98>
    1378:	mov	r3, #7
    137c:	mov	r2, r5
    1380:	mov	r1, r4
    1384:	mov	r0, r8
    1388:	bl	0 <flatcc_json_parser_set_error>
    138c:	b	136c <flatcc_json_parser_symbolic_uint32+0x14c>
    1390:	add	r6, r1, #1
    1394:	sub	r3, r2, r6
    1398:	str	ip, [r0, #12]
    139c:	cmp	r3, #1
    13a0:	ble	13b4 <flatcc_json_parser_symbolic_uint32+0x194>
    13a4:	ldrb	r3, [r6]
    13a8:	cmp	r3, #32
    13ac:	bhi	13c8 <flatcc_json_parser_symbolic_uint32+0x1a8>
    13b0:	beq	140c <flatcc_json_parser_symbolic_uint32+0x1ec>
    13b4:	mov	r1, r6
    13b8:	mov	r2, r5
    13bc:	mov	r0, r8
    13c0:	bl	0 <flatcc_json_parser_space_ext>
    13c4:	mov	r6, r0
    13c8:	cmp	r5, r6
    13cc:	bne	1268 <flatcc_json_parser_symbolic_uint32+0x48>
    13d0:	mov	r0, r5
    13d4:	add	sp, sp, #36	; 0x24
    13d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13dc:	ldr	r3, [r0, #12]
    13e0:	cmp	r3, #0
    13e4:	beq	13b4 <flatcc_json_parser_symbolic_uint32+0x194>
    13e8:	b	12b8 <flatcc_json_parser_symbolic_uint32+0x98>
    13ec:	mov	r3, #5
    13f0:	bl	0 <flatcc_json_parser_set_error>
    13f4:	ldr	r3, [r8, #12]
    13f8:	cmp	r3, #0
    13fc:	mov	r6, r0
    1400:	subeq	r3, r5, r0
    1404:	beq	139c <flatcc_json_parser_symbolic_uint32+0x17c>
    1408:	b	13c8 <flatcc_json_parser_symbolic_uint32+0x1a8>
    140c:	ldrb	r3, [r6, #1]
    1410:	cmp	r3, #32
    1414:	addhi	r6, r6, #1
    1418:	bls	13b4 <flatcc_json_parser_symbolic_uint32+0x194>
    141c:	b	13c8 <flatcc_json_parser_symbolic_uint32+0x1a8>
    1420:	mov	r5, r4
    1424:	b	12b8 <flatcc_json_parser_symbolic_uint32+0x98>
    1428:	mov	r2, r5
    142c:	mov	r1, r4
    1430:	mov	r0, r8
    1434:	mov	r3, #14
    1438:	bl	0 <flatcc_json_parser_set_error>
    143c:	mov	r5, r0
    1440:	b	12b8 <flatcc_json_parser_symbolic_uint32+0x98>

00001444 <flatcc_json_parser_symbolic_uint16>:
    1444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1448:	sub	sp, sp, #36	; 0x24
    144c:	mov	ip, #0
    1450:	str	r3, [sp, #8]
    1454:	ldr	r3, [sp, #72]	; 0x48
    1458:	cmp	r1, r2
    145c:	mov	r6, r1
    1460:	mov	r5, r2
    1464:	strh	ip, [r3]
    1468:	mov	r8, r0
    146c:	beq	1604 <flatcc_json_parser_symbolic_uint16+0x1c0>
    1470:	ldrb	r3, [r1]
    1474:	cmp	r3, #34	; 0x22
    1478:	beq	15b8 <flatcc_json_parser_symbolic_uint16+0x174>
    147c:	cmp	r3, #46	; 0x2e
    1480:	movne	r3, #1
    1484:	strne	r3, [r0, #12]
    1488:	beq	1614 <flatcc_json_parser_symbolic_uint16+0x1d0>
    148c:	add	sl, sp, #20
    1490:	add	r9, sp, #24
    1494:	mov	fp, #0
    1498:	str	fp, [sp, #12]
    149c:	ldr	r7, [sp, #8]
    14a0:	ldr	r4, [r7]
    14a4:	b	14bc <flatcc_json_parser_symbolic_uint16+0x78>
    14a8:	cmp	r6, r0
    14ac:	bne	14e8 <flatcc_json_parser_symbolic_uint16+0xa4>
    14b0:	ldr	r4, [r7, #4]!
    14b4:	cmp	r4, #0
    14b8:	beq	155c <flatcc_json_parser_symbolic_uint16+0x118>
    14bc:	stm	sp, {r9, sl}
    14c0:	add	r3, sp, #16
    14c4:	mov	r2, r5
    14c8:	mov	r1, r6
    14cc:	mov	r0, r8
    14d0:	blx	r4
    14d4:	cmp	r5, r0
    14d8:	bne	14a8 <flatcc_json_parser_symbolic_uint16+0x64>
    14dc:	mov	r0, r5
    14e0:	add	sp, sp, #36	; 0x24
    14e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14e8:	cmp	fp, #0
    14ec:	mov	r4, r0
    14f0:	beq	1500 <flatcc_json_parser_symbolic_uint16+0xbc>
    14f4:	ldr	r3, [r8, #12]
    14f8:	cmp	r3, #0
    14fc:	bne	1650 <flatcc_json_parser_symbolic_uint16+0x20c>
    1500:	ldr	r3, [sp, #16]
    1504:	cmp	r3, #0
    1508:	bne	1580 <flatcc_json_parser_symbolic_uint16+0x13c>
    150c:	ldrd	r2, [sp, #24]
    1510:	ldr	r0, [pc, #340]	; 166c <flatcc_json_parser_symbolic_uint16+0x228>
    1514:	mov	r1, #0
    1518:	cmp	r3, r1
    151c:	cmpeq	r2, r0
    1520:	uxthls	r3, r2
    1524:	strls	r3, [sp, #12]
    1528:	bhi	15a0 <flatcc_json_parser_symbolic_uint16+0x15c>
    152c:	ldr	r3, [sp, #72]	; 0x48
    1530:	ldr	r2, [sp, #20]
    1534:	ldr	r1, [sp, #12]
    1538:	ldrh	r3, [r3]
    153c:	cmp	r2, #0
    1540:	ldr	r2, [sp, #72]	; 0x48
    1544:	add	r3, r1, r3
    1548:	add	fp, fp, #1
    154c:	strh	r3, [r2]
    1550:	beq	1648 <flatcc_json_parser_symbolic_uint16+0x204>
    1554:	mov	r6, r4
    1558:	b	149c <flatcc_json_parser_symbolic_uint16+0x58>
    155c:	mov	r2, r5
    1560:	mov	r1, r6
    1564:	mov	r0, r8
    1568:	mov	r3, #23
    156c:	bl	0 <flatcc_json_parser_set_error>
    1570:	mov	r5, r0
    1574:	mov	r0, r5
    1578:	add	sp, sp, #36	; 0x24
    157c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1580:	mov	r3, #8
    1584:	mov	r2, r5
    1588:	mov	r1, r4
    158c:	mov	r0, r8
    1590:	bl	0 <flatcc_json_parser_set_error>
    1594:	cmp	r5, r0
    1598:	bne	152c <flatcc_json_parser_symbolic_uint16+0xe8>
    159c:	b	14dc <flatcc_json_parser_symbolic_uint16+0x98>
    15a0:	mov	r3, #7
    15a4:	mov	r2, r5
    15a8:	mov	r1, r4
    15ac:	mov	r0, r8
    15b0:	bl	0 <flatcc_json_parser_set_error>
    15b4:	b	1594 <flatcc_json_parser_symbolic_uint16+0x150>
    15b8:	add	r6, r1, #1
    15bc:	sub	r3, r2, r6
    15c0:	str	ip, [r0, #12]
    15c4:	cmp	r3, #1
    15c8:	ble	15dc <flatcc_json_parser_symbolic_uint16+0x198>
    15cc:	ldrb	r3, [r6]
    15d0:	cmp	r3, #32
    15d4:	bhi	15f0 <flatcc_json_parser_symbolic_uint16+0x1ac>
    15d8:	beq	1634 <flatcc_json_parser_symbolic_uint16+0x1f0>
    15dc:	mov	r1, r6
    15e0:	mov	r2, r5
    15e4:	mov	r0, r8
    15e8:	bl	0 <flatcc_json_parser_space_ext>
    15ec:	mov	r6, r0
    15f0:	cmp	r5, r6
    15f4:	bne	148c <flatcc_json_parser_symbolic_uint16+0x48>
    15f8:	mov	r0, r5
    15fc:	add	sp, sp, #36	; 0x24
    1600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1604:	ldr	r3, [r0, #12]
    1608:	cmp	r3, #0
    160c:	beq	15dc <flatcc_json_parser_symbolic_uint16+0x198>
    1610:	b	14dc <flatcc_json_parser_symbolic_uint16+0x98>
    1614:	mov	r3, #5
    1618:	bl	0 <flatcc_json_parser_set_error>
    161c:	ldr	r3, [r8, #12]
    1620:	cmp	r3, #0
    1624:	mov	r6, r0
    1628:	subeq	r3, r5, r0
    162c:	beq	15c4 <flatcc_json_parser_symbolic_uint16+0x180>
    1630:	b	15f0 <flatcc_json_parser_symbolic_uint16+0x1ac>
    1634:	ldrb	r3, [r6, #1]
    1638:	cmp	r3, #32
    163c:	addhi	r6, r6, #1
    1640:	bls	15dc <flatcc_json_parser_symbolic_uint16+0x198>
    1644:	b	15f0 <flatcc_json_parser_symbolic_uint16+0x1ac>
    1648:	mov	r5, r4
    164c:	b	14dc <flatcc_json_parser_symbolic_uint16+0x98>
    1650:	mov	r2, r5
    1654:	mov	r1, r4
    1658:	mov	r0, r8
    165c:	mov	r3, #14
    1660:	bl	0 <flatcc_json_parser_set_error>
    1664:	mov	r5, r0
    1668:	b	14dc <flatcc_json_parser_symbolic_uint16+0x98>
    166c:	.word	0x0000ffff

00001670 <flatcc_json_parser_symbolic_int8>:
    1670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1674:	sub	sp, sp, #36	; 0x24
    1678:	mov	ip, #0
    167c:	str	r3, [sp, #12]
    1680:	ldr	r3, [sp, #72]	; 0x48
    1684:	cmp	r1, r2
    1688:	mov	r6, r1
    168c:	mov	r5, r2
    1690:	strb	ip, [r3]
    1694:	mov	r8, r0
    1698:	beq	183c <flatcc_json_parser_symbolic_int8+0x1cc>
    169c:	ldrb	r3, [r1]
    16a0:	cmp	r3, #34	; 0x22
    16a4:	beq	17f8 <flatcc_json_parser_symbolic_int8+0x188>
    16a8:	cmp	r3, #46	; 0x2e
    16ac:	movne	r3, #1
    16b0:	strne	r3, [r0, #12]
    16b4:	beq	184c <flatcc_json_parser_symbolic_int8+0x1dc>
    16b8:	add	sl, sp, #20
    16bc:	add	r9, sp, #24
    16c0:	mov	fp, #0
    16c4:	str	fp, [sp, #8]
    16c8:	ldr	r3, [sp, #12]
    16cc:	mov	r7, r3
    16d0:	ldr	r4, [r3]
    16d4:	b	16ec <flatcc_json_parser_symbolic_int8+0x7c>
    16d8:	cmp	r6, r0
    16dc:	bne	1718 <flatcc_json_parser_symbolic_int8+0xa8>
    16e0:	ldr	r4, [r7, #4]!
    16e4:	cmp	r4, #0
    16e8:	beq	1788 <flatcc_json_parser_symbolic_int8+0x118>
    16ec:	stm	sp, {r9, sl}
    16f0:	add	r3, sp, #16
    16f4:	mov	r2, r5
    16f8:	mov	r1, r6
    16fc:	mov	r0, r8
    1700:	blx	r4
    1704:	cmp	r5, r0
    1708:	bne	16d8 <flatcc_json_parser_symbolic_int8+0x68>
    170c:	mov	r0, r5
    1710:	add	sp, sp, #36	; 0x24
    1714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1718:	cmp	fp, #0
    171c:	mov	r4, r0
    1720:	beq	1730 <flatcc_json_parser_symbolic_int8+0xc0>
    1724:	ldr	r3, [r8, #12]
    1728:	cmp	r3, #0
    172c:	bne	1888 <flatcc_json_parser_symbolic_int8+0x218>
    1730:	ldr	r1, [sp, #16]
    1734:	ldrd	r2, [sp, #24]
    1738:	cmp	r1, #0
    173c:	beq	17ac <flatcc_json_parser_symbolic_int8+0x13c>
    1740:	cmp	r3, #0
    1744:	cmpeq	r2, #128	; 0x80
    1748:	rsbls	r2, r2, #0
    174c:	sxtbls	r3, r2
    1750:	strls	r3, [sp, #8]
    1754:	bhi	17d8 <flatcc_json_parser_symbolic_int8+0x168>
    1758:	ldr	r3, [sp, #72]	; 0x48
    175c:	ldr	r2, [sp, #20]
    1760:	ldr	r1, [sp, #8]
    1764:	ldrb	r3, [r3]
    1768:	cmp	r2, #0
    176c:	ldr	r2, [sp, #72]	; 0x48
    1770:	add	r3, r3, r1
    1774:	add	fp, fp, #1
    1778:	strb	r3, [r2]
    177c:	beq	1880 <flatcc_json_parser_symbolic_int8+0x210>
    1780:	mov	r6, r4
    1784:	b	16c8 <flatcc_json_parser_symbolic_int8+0x58>
    1788:	mov	r2, r5
    178c:	mov	r1, r6
    1790:	mov	r0, r8
    1794:	mov	r3, #23
    1798:	bl	0 <flatcc_json_parser_set_error>
    179c:	mov	r5, r0
    17a0:	mov	r0, r5
    17a4:	add	sp, sp, #36	; 0x24
    17a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17ac:	cmp	r3, #0
    17b0:	cmpeq	r2, #127	; 0x7f
    17b4:	sxtbls	r3, r2
    17b8:	strls	r3, [sp, #8]
    17bc:	bls	1758 <flatcc_json_parser_symbolic_int8+0xe8>
    17c0:	mov	r3, #7
    17c4:	mov	r2, r5
    17c8:	mov	r1, r4
    17cc:	mov	r0, r8
    17d0:	bl	0 <flatcc_json_parser_set_error>
    17d4:	b	17ec <flatcc_json_parser_symbolic_int8+0x17c>
    17d8:	mov	r3, #8
    17dc:	mov	r2, r5
    17e0:	mov	r1, r4
    17e4:	mov	r0, r8
    17e8:	bl	0 <flatcc_json_parser_set_error>
    17ec:	cmp	r5, r0
    17f0:	bne	1758 <flatcc_json_parser_symbolic_int8+0xe8>
    17f4:	b	170c <flatcc_json_parser_symbolic_int8+0x9c>
    17f8:	add	r6, r1, #1
    17fc:	sub	r3, r2, r6
    1800:	str	ip, [r0, #12]
    1804:	cmp	r3, #1
    1808:	ble	181c <flatcc_json_parser_symbolic_int8+0x1ac>
    180c:	ldrb	r3, [r6]
    1810:	cmp	r3, #32
    1814:	bhi	1830 <flatcc_json_parser_symbolic_int8+0x1c0>
    1818:	beq	186c <flatcc_json_parser_symbolic_int8+0x1fc>
    181c:	mov	r1, r6
    1820:	mov	r2, r5
    1824:	mov	r0, r8
    1828:	bl	0 <flatcc_json_parser_space_ext>
    182c:	mov	r6, r0
    1830:	cmp	r5, r6
    1834:	bne	16b8 <flatcc_json_parser_symbolic_int8+0x48>
    1838:	b	170c <flatcc_json_parser_symbolic_int8+0x9c>
    183c:	ldr	r3, [r0, #12]
    1840:	cmp	r3, #0
    1844:	bne	170c <flatcc_json_parser_symbolic_int8+0x9c>
    1848:	b	181c <flatcc_json_parser_symbolic_int8+0x1ac>
    184c:	mov	r3, #5
    1850:	bl	0 <flatcc_json_parser_set_error>
    1854:	ldr	r3, [r8, #12]
    1858:	cmp	r3, #0
    185c:	mov	r6, r0
    1860:	subeq	r3, r5, r0
    1864:	beq	1804 <flatcc_json_parser_symbolic_int8+0x194>
    1868:	b	1830 <flatcc_json_parser_symbolic_int8+0x1c0>
    186c:	ldrb	r3, [r6, #1]
    1870:	cmp	r3, #32
    1874:	addhi	r6, r6, #1
    1878:	bls	181c <flatcc_json_parser_symbolic_int8+0x1ac>
    187c:	b	1830 <flatcc_json_parser_symbolic_int8+0x1c0>
    1880:	mov	r5, r4
    1884:	b	170c <flatcc_json_parser_symbolic_int8+0x9c>
    1888:	mov	r2, r5
    188c:	mov	r1, r4
    1890:	mov	r0, r8
    1894:	mov	r3, #14
    1898:	bl	0 <flatcc_json_parser_set_error>
    189c:	mov	r5, r0
    18a0:	b	170c <flatcc_json_parser_symbolic_int8+0x9c>

000018a4 <flatcc_json_parser_symbolic_uint8>:
    18a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18a8:	sub	sp, sp, #36	; 0x24
    18ac:	mov	ip, #0
    18b0:	str	r3, [sp, #8]
    18b4:	ldr	r3, [sp, #72]	; 0x48
    18b8:	cmp	r1, r2
    18bc:	mov	r6, r1
    18c0:	mov	r5, r2
    18c4:	strb	ip, [r3]
    18c8:	mov	r8, r0
    18cc:	beq	1a60 <flatcc_json_parser_symbolic_uint8+0x1bc>
    18d0:	ldrb	r3, [r1]
    18d4:	cmp	r3, #34	; 0x22
    18d8:	beq	1a14 <flatcc_json_parser_symbolic_uint8+0x170>
    18dc:	cmp	r3, #46	; 0x2e
    18e0:	movne	r3, #1
    18e4:	strne	r3, [r0, #12]
    18e8:	beq	1a70 <flatcc_json_parser_symbolic_uint8+0x1cc>
    18ec:	add	sl, sp, #20
    18f0:	add	r9, sp, #24
    18f4:	mov	fp, #0
    18f8:	str	fp, [sp, #12]
    18fc:	ldr	r3, [sp, #8]
    1900:	mov	r7, r3
    1904:	ldr	r4, [r3]
    1908:	b	1920 <flatcc_json_parser_symbolic_uint8+0x7c>
    190c:	cmp	r6, r0
    1910:	bne	194c <flatcc_json_parser_symbolic_uint8+0xa8>
    1914:	ldr	r4, [r7, #4]!
    1918:	cmp	r4, #0
    191c:	beq	19b8 <flatcc_json_parser_symbolic_uint8+0x114>
    1920:	stm	sp, {r9, sl}
    1924:	add	r3, sp, #16
    1928:	mov	r2, r5
    192c:	mov	r1, r6
    1930:	mov	r0, r8
    1934:	blx	r4
    1938:	cmp	r5, r0
    193c:	bne	190c <flatcc_json_parser_symbolic_uint8+0x68>
    1940:	mov	r0, r5
    1944:	add	sp, sp, #36	; 0x24
    1948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    194c:	cmp	fp, #0
    1950:	mov	r4, r0
    1954:	beq	1964 <flatcc_json_parser_symbolic_uint8+0xc0>
    1958:	ldr	r3, [r8, #12]
    195c:	cmp	r3, #0
    1960:	bne	1aac <flatcc_json_parser_symbolic_uint8+0x208>
    1964:	ldr	r3, [sp, #16]
    1968:	cmp	r3, #0
    196c:	bne	19dc <flatcc_json_parser_symbolic_uint8+0x138>
    1970:	ldrd	r2, [sp, #24]
    1974:	cmp	r3, #0
    1978:	cmpeq	r2, #255	; 0xff
    197c:	uxtbls	r3, r2
    1980:	strls	r3, [sp, #12]
    1984:	bhi	19fc <flatcc_json_parser_symbolic_uint8+0x158>
    1988:	ldr	r3, [sp, #72]	; 0x48
    198c:	ldr	r2, [sp, #20]
    1990:	ldr	r1, [sp, #12]
    1994:	ldrb	r3, [r3]
    1998:	cmp	r2, #0
    199c:	ldr	r2, [sp, #72]	; 0x48
    19a0:	add	r3, r1, r3
    19a4:	add	fp, fp, #1
    19a8:	strb	r3, [r2]
    19ac:	beq	1aa4 <flatcc_json_parser_symbolic_uint8+0x200>
    19b0:	mov	r6, r4
    19b4:	b	18fc <flatcc_json_parser_symbolic_uint8+0x58>
    19b8:	mov	r2, r5
    19bc:	mov	r1, r6
    19c0:	mov	r0, r8
    19c4:	mov	r3, #23
    19c8:	bl	0 <flatcc_json_parser_set_error>
    19cc:	mov	r5, r0
    19d0:	mov	r0, r5
    19d4:	add	sp, sp, #36	; 0x24
    19d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19dc:	mov	r3, #8
    19e0:	mov	r2, r5
    19e4:	mov	r1, r4
    19e8:	mov	r0, r8
    19ec:	bl	0 <flatcc_json_parser_set_error>
    19f0:	cmp	r5, r0
    19f4:	bne	1988 <flatcc_json_parser_symbolic_uint8+0xe4>
    19f8:	b	1940 <flatcc_json_parser_symbolic_uint8+0x9c>
    19fc:	mov	r3, #7
    1a00:	mov	r2, r5
    1a04:	mov	r1, r4
    1a08:	mov	r0, r8
    1a0c:	bl	0 <flatcc_json_parser_set_error>
    1a10:	b	19f0 <flatcc_json_parser_symbolic_uint8+0x14c>
    1a14:	add	r6, r1, #1
    1a18:	sub	r3, r2, r6
    1a1c:	str	ip, [r0, #12]
    1a20:	cmp	r3, #1
    1a24:	ble	1a38 <flatcc_json_parser_symbolic_uint8+0x194>
    1a28:	ldrb	r3, [r6]
    1a2c:	cmp	r3, #32
    1a30:	bhi	1a4c <flatcc_json_parser_symbolic_uint8+0x1a8>
    1a34:	beq	1a90 <flatcc_json_parser_symbolic_uint8+0x1ec>
    1a38:	mov	r1, r6
    1a3c:	mov	r2, r5
    1a40:	mov	r0, r8
    1a44:	bl	0 <flatcc_json_parser_space_ext>
    1a48:	mov	r6, r0
    1a4c:	cmp	r5, r6
    1a50:	bne	18ec <flatcc_json_parser_symbolic_uint8+0x48>
    1a54:	mov	r0, r5
    1a58:	add	sp, sp, #36	; 0x24
    1a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1a60:	ldr	r3, [r0, #12]
    1a64:	cmp	r3, #0
    1a68:	beq	1a38 <flatcc_json_parser_symbolic_uint8+0x194>
    1a6c:	b	1940 <flatcc_json_parser_symbolic_uint8+0x9c>
    1a70:	mov	r3, #5
    1a74:	bl	0 <flatcc_json_parser_set_error>
    1a78:	ldr	r3, [r8, #12]
    1a7c:	cmp	r3, #0
    1a80:	mov	r6, r0
    1a84:	subeq	r3, r5, r0
    1a88:	beq	1a20 <flatcc_json_parser_symbolic_uint8+0x17c>
    1a8c:	b	1a4c <flatcc_json_parser_symbolic_uint8+0x1a8>
    1a90:	ldrb	r3, [r6, #1]
    1a94:	cmp	r3, #32
    1a98:	addhi	r6, r6, #1
    1a9c:	bls	1a38 <flatcc_json_parser_symbolic_uint8+0x194>
    1aa0:	b	1a4c <flatcc_json_parser_symbolic_uint8+0x1a8>
    1aa4:	mov	r5, r4
    1aa8:	b	1940 <flatcc_json_parser_symbolic_uint8+0x9c>
    1aac:	mov	r2, r5
    1ab0:	mov	r1, r4
    1ab4:	mov	r0, r8
    1ab8:	mov	r3, #14
    1abc:	bl	0 <flatcc_json_parser_set_error>
    1ac0:	mov	r5, r0
    1ac4:	b	1940 <flatcc_json_parser_symbolic_uint8+0x9c>

00001ac8 <flatcc_json_parser_symbolic_int16>:
    1ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1acc:	sub	sp, sp, #36	; 0x24
    1ad0:	mov	ip, #0
    1ad4:	str	r3, [sp, #12]
    1ad8:	ldr	r3, [sp, #72]	; 0x48
    1adc:	cmp	r1, r2
    1ae0:	mov	r6, r1
    1ae4:	mov	r5, r2
    1ae8:	strh	ip, [r3]
    1aec:	mov	r8, r0
    1af0:	beq	1c98 <flatcc_json_parser_symbolic_int16+0x1d0>
    1af4:	ldrb	r3, [r1]
    1af8:	cmp	r3, #34	; 0x22
    1afc:	beq	1c54 <flatcc_json_parser_symbolic_int16+0x18c>
    1b00:	cmp	r3, #46	; 0x2e
    1b04:	movne	r3, #1
    1b08:	strne	r3, [r0, #12]
    1b0c:	beq	1ca8 <flatcc_json_parser_symbolic_int16+0x1e0>
    1b10:	add	sl, sp, #20
    1b14:	add	r9, sp, #24
    1b18:	mov	fp, #0
    1b1c:	str	fp, [sp, #8]
    1b20:	ldr	r7, [sp, #12]
    1b24:	ldr	r4, [r7]
    1b28:	b	1b40 <flatcc_json_parser_symbolic_int16+0x78>
    1b2c:	cmp	r6, r0
    1b30:	bne	1b6c <flatcc_json_parser_symbolic_int16+0xa4>
    1b34:	ldr	r4, [r7, #4]!
    1b38:	cmp	r4, #0
    1b3c:	beq	1bdc <flatcc_json_parser_symbolic_int16+0x114>
    1b40:	stm	sp, {r9, sl}
    1b44:	add	r3, sp, #16
    1b48:	mov	r2, r5
    1b4c:	mov	r1, r6
    1b50:	mov	r0, r8
    1b54:	blx	r4
    1b58:	cmp	r5, r0
    1b5c:	bne	1b2c <flatcc_json_parser_symbolic_int16+0x64>
    1b60:	mov	r0, r5
    1b64:	add	sp, sp, #36	; 0x24
    1b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b6c:	cmp	fp, #0
    1b70:	mov	r4, r0
    1b74:	beq	1b84 <flatcc_json_parser_symbolic_int16+0xbc>
    1b78:	ldr	r3, [r8, #12]
    1b7c:	cmp	r3, #0
    1b80:	bne	1ce4 <flatcc_json_parser_symbolic_int16+0x21c>
    1b84:	ldr	r1, [sp, #16]
    1b88:	ldrd	r2, [sp, #24]
    1b8c:	cmp	r1, #0
    1b90:	beq	1c00 <flatcc_json_parser_symbolic_int16+0x138>
    1b94:	cmp	r3, #0
    1b98:	cmpeq	r2, #32768	; 0x8000
    1b9c:	rsbls	r2, r2, #0
    1ba0:	sxthls	r3, r2
    1ba4:	strls	r3, [sp, #8]
    1ba8:	bhi	1c34 <flatcc_json_parser_symbolic_int16+0x16c>
    1bac:	ldr	r3, [sp, #72]	; 0x48
    1bb0:	ldr	r2, [sp, #20]
    1bb4:	ldr	r1, [sp, #8]
    1bb8:	ldrh	r3, [r3]
    1bbc:	cmp	r2, #0
    1bc0:	ldr	r2, [sp, #72]	; 0x48
    1bc4:	add	r3, r3, r1
    1bc8:	add	fp, fp, #1
    1bcc:	strh	r3, [r2]
    1bd0:	beq	1cdc <flatcc_json_parser_symbolic_int16+0x214>
    1bd4:	mov	r6, r4
    1bd8:	b	1b20 <flatcc_json_parser_symbolic_int16+0x58>
    1bdc:	mov	r2, r5
    1be0:	mov	r1, r6
    1be4:	mov	r0, r8
    1be8:	mov	r3, #23
    1bec:	bl	0 <flatcc_json_parser_set_error>
    1bf0:	mov	r5, r0
    1bf4:	mov	r0, r5
    1bf8:	add	sp, sp, #36	; 0x24
    1bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c00:	ldr	r0, [pc, #248]	; 1d00 <flatcc_json_parser_symbolic_int16+0x238>
    1c04:	mov	r1, #0
    1c08:	cmp	r3, r1
    1c0c:	cmpeq	r2, r0
    1c10:	sxthls	r3, r2
    1c14:	strls	r3, [sp, #8]
    1c18:	bls	1bac <flatcc_json_parser_symbolic_int16+0xe4>
    1c1c:	mov	r3, #7
    1c20:	mov	r2, r5
    1c24:	mov	r1, r4
    1c28:	mov	r0, r8
    1c2c:	bl	0 <flatcc_json_parser_set_error>
    1c30:	b	1c48 <flatcc_json_parser_symbolic_int16+0x180>
    1c34:	mov	r3, #8
    1c38:	mov	r2, r5
    1c3c:	mov	r1, r4
    1c40:	mov	r0, r8
    1c44:	bl	0 <flatcc_json_parser_set_error>
    1c48:	cmp	r5, r0
    1c4c:	bne	1bac <flatcc_json_parser_symbolic_int16+0xe4>
    1c50:	b	1b60 <flatcc_json_parser_symbolic_int16+0x98>
    1c54:	add	r6, r1, #1
    1c58:	sub	r3, r2, r6
    1c5c:	str	ip, [r0, #12]
    1c60:	cmp	r3, #1
    1c64:	ble	1c78 <flatcc_json_parser_symbolic_int16+0x1b0>
    1c68:	ldrb	r3, [r6]
    1c6c:	cmp	r3, #32
    1c70:	bhi	1c8c <flatcc_json_parser_symbolic_int16+0x1c4>
    1c74:	beq	1cc8 <flatcc_json_parser_symbolic_int16+0x200>
    1c78:	mov	r1, r6
    1c7c:	mov	r2, r5
    1c80:	mov	r0, r8
    1c84:	bl	0 <flatcc_json_parser_space_ext>
    1c88:	mov	r6, r0
    1c8c:	cmp	r5, r6
    1c90:	bne	1b10 <flatcc_json_parser_symbolic_int16+0x48>
    1c94:	b	1b60 <flatcc_json_parser_symbolic_int16+0x98>
    1c98:	ldr	r3, [r0, #12]
    1c9c:	cmp	r3, #0
    1ca0:	bne	1b60 <flatcc_json_parser_symbolic_int16+0x98>
    1ca4:	b	1c78 <flatcc_json_parser_symbolic_int16+0x1b0>
    1ca8:	mov	r3, #5
    1cac:	bl	0 <flatcc_json_parser_set_error>
    1cb0:	ldr	r3, [r8, #12]
    1cb4:	cmp	r3, #0
    1cb8:	mov	r6, r0
    1cbc:	subeq	r3, r5, r0
    1cc0:	beq	1c60 <flatcc_json_parser_symbolic_int16+0x198>
    1cc4:	b	1c8c <flatcc_json_parser_symbolic_int16+0x1c4>
    1cc8:	ldrb	r3, [r6, #1]
    1ccc:	cmp	r3, #32
    1cd0:	addhi	r6, r6, #1
    1cd4:	bls	1c78 <flatcc_json_parser_symbolic_int16+0x1b0>
    1cd8:	b	1c8c <flatcc_json_parser_symbolic_int16+0x1c4>
    1cdc:	mov	r5, r4
    1ce0:	b	1b60 <flatcc_json_parser_symbolic_int16+0x98>
    1ce4:	mov	r2, r5
    1ce8:	mov	r1, r4
    1cec:	mov	r0, r8
    1cf0:	mov	r3, #14
    1cf4:	bl	0 <flatcc_json_parser_set_error>
    1cf8:	mov	r5, r0
    1cfc:	b	1b60 <flatcc_json_parser_symbolic_int16+0x98>
    1d00:	.word	0x00007fff

00001d04 <flatcc_json_parser_symbolic_int64>:
    1d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d08:	sub	sp, sp, #44	; 0x2c
    1d0c:	mov	fp, r3
    1d10:	ldr	r3, [sp, #80]	; 0x50
    1d14:	mov	r8, #0
    1d18:	mov	r9, #0
    1d1c:	cmp	r1, r2
    1d20:	strd	r8, [r3]
    1d24:	mov	r5, r1
    1d28:	mov	r6, r2
    1d2c:	mov	r8, r0
    1d30:	beq	1ee8 <flatcc_json_parser_symbolic_int64+0x1e4>
    1d34:	ldrb	r3, [r1]
    1d38:	cmp	r3, #34	; 0x22
    1d3c:	beq	1e98 <flatcc_json_parser_symbolic_int64+0x194>
    1d40:	cmp	r3, #46	; 0x2e
    1d44:	movne	r3, #1
    1d48:	strne	r3, [r0, #12]
    1d4c:	beq	1ef8 <flatcc_json_parser_symbolic_int64+0x1f4>
    1d50:	mov	r3, #0
    1d54:	str	r3, [sp, #12]
    1d58:	mov	r2, #0
    1d5c:	mov	r3, #0
    1d60:	add	sl, sp, #28
    1d64:	add	r9, sp, #32
    1d68:	strd	r2, [sp, #16]
    1d6c:	ldr	r4, [fp]
    1d70:	mov	r7, fp
    1d74:	b	1d8c <flatcc_json_parser_symbolic_int64+0x88>
    1d78:	cmp	r5, r0
    1d7c:	bne	1db8 <flatcc_json_parser_symbolic_int64+0xb4>
    1d80:	ldr	r4, [r7, #4]!
    1d84:	cmp	r4, #0
    1d88:	beq	1e40 <flatcc_json_parser_symbolic_int64+0x13c>
    1d8c:	stm	sp, {r9, sl}
    1d90:	add	r3, sp, #24
    1d94:	mov	r2, r6
    1d98:	mov	r1, r5
    1d9c:	mov	r0, r8
    1da0:	blx	r4
    1da4:	cmp	r6, r0
    1da8:	bne	1d78 <flatcc_json_parser_symbolic_int64+0x74>
    1dac:	mov	r0, r6
    1db0:	add	sp, sp, #44	; 0x2c
    1db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1db8:	ldr	r3, [sp, #12]
    1dbc:	mov	r4, r0
    1dc0:	cmp	r3, #0
    1dc4:	beq	1dd4 <flatcc_json_parser_symbolic_int64+0xd0>
    1dc8:	ldr	r3, [r8, #12]
    1dcc:	cmp	r3, #0
    1dd0:	bne	1f4c <flatcc_json_parser_symbolic_int64+0x248>
    1dd4:	ldr	r1, [sp, #24]
    1dd8:	ldrd	r2, [sp, #32]
    1ddc:	cmp	r1, #0
    1de0:	beq	1e64 <flatcc_json_parser_symbolic_int64+0x160>
    1de4:	cmp	r3, #-2147483648	; 0x80000000
    1de8:	cmpeq	r2, #0
    1dec:	bhi	1e78 <flatcc_json_parser_symbolic_int64+0x174>
    1df0:	rsbs	r2, r2, #0
    1df4:	rsc	r3, r3, #0
    1df8:	strd	r2, [sp, #16]
    1dfc:	ldr	r1, [sp, #12]
    1e00:	ldr	r3, [sp, #80]	; 0x50
    1e04:	add	r1, r1, #1
    1e08:	str	r1, [sp, #12]
    1e0c:	ldrd	r2, [r3]
    1e10:	ldrd	r0, [sp, #16]
    1e14:	ldr	ip, [sp, #28]
    1e18:	adds	r0, r0, r2
    1e1c:	adc	r1, r1, r3
    1e20:	mov	r3, r1
    1e24:	ldr	r1, [sp, #80]	; 0x50
    1e28:	mov	r2, r0
    1e2c:	cmp	ip, #0
    1e30:	strd	r2, [r1]
    1e34:	beq	1f44 <flatcc_json_parser_symbolic_int64+0x240>
    1e38:	mov	r5, r4
    1e3c:	b	1d6c <flatcc_json_parser_symbolic_int64+0x68>
    1e40:	mov	r2, r6
    1e44:	mov	r1, r5
    1e48:	mov	r0, r8
    1e4c:	mov	r3, #23
    1e50:	bl	0 <flatcc_json_parser_set_error>
    1e54:	mov	r6, r0
    1e58:	mov	r0, r6
    1e5c:	add	sp, sp, #44	; 0x2c
    1e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e64:	cmp	r2, #0
    1e68:	sbcs	r1, r3, #0
    1e6c:	blt	1f18 <flatcc_json_parser_symbolic_int64+0x214>
    1e70:	strd	r2, [sp, #16]
    1e74:	b	1dfc <flatcc_json_parser_symbolic_int64+0xf8>
    1e78:	mov	r3, #8
    1e7c:	mov	r2, r6
    1e80:	mov	r1, r4
    1e84:	mov	r0, r8
    1e88:	bl	0 <flatcc_json_parser_set_error>
    1e8c:	cmp	r6, r0
    1e90:	bne	1dfc <flatcc_json_parser_symbolic_int64+0xf8>
    1e94:	b	1dac <flatcc_json_parser_symbolic_int64+0xa8>
    1e98:	add	r5, r1, #1
    1e9c:	sub	r3, r6, r5
    1ea0:	mov	r2, #0
    1ea4:	str	r2, [r0, #12]
    1ea8:	cmp	r3, #1
    1eac:	ble	1ec0 <flatcc_json_parser_symbolic_int64+0x1bc>
    1eb0:	ldrb	r3, [r5]
    1eb4:	cmp	r3, #32
    1eb8:	bhi	1ed4 <flatcc_json_parser_symbolic_int64+0x1d0>
    1ebc:	beq	1f30 <flatcc_json_parser_symbolic_int64+0x22c>
    1ec0:	mov	r1, r5
    1ec4:	mov	r2, r6
    1ec8:	mov	r0, r8
    1ecc:	bl	0 <flatcc_json_parser_space_ext>
    1ed0:	mov	r5, r0
    1ed4:	cmp	r6, r5
    1ed8:	bne	1d50 <flatcc_json_parser_symbolic_int64+0x4c>
    1edc:	mov	r0, r6
    1ee0:	add	sp, sp, #44	; 0x2c
    1ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ee8:	ldr	r3, [r0, #12]
    1eec:	cmp	r3, #0
    1ef0:	beq	1ec0 <flatcc_json_parser_symbolic_int64+0x1bc>
    1ef4:	b	1dac <flatcc_json_parser_symbolic_int64+0xa8>
    1ef8:	mov	r3, #5
    1efc:	bl	0 <flatcc_json_parser_set_error>
    1f00:	ldr	r3, [r8, #12]
    1f04:	cmp	r3, #0
    1f08:	mov	r5, r0
    1f0c:	subeq	r3, r6, r0
    1f10:	beq	1ea8 <flatcc_json_parser_symbolic_int64+0x1a4>
    1f14:	b	1ed4 <flatcc_json_parser_symbolic_int64+0x1d0>
    1f18:	mov	r3, #7
    1f1c:	mov	r2, r6
    1f20:	mov	r1, r4
    1f24:	mov	r0, r8
    1f28:	bl	0 <flatcc_json_parser_set_error>
    1f2c:	b	1e8c <flatcc_json_parser_symbolic_int64+0x188>
    1f30:	ldrb	r3, [r5, #1]
    1f34:	cmp	r3, #32
    1f38:	addhi	r5, r5, #1
    1f3c:	bls	1ec0 <flatcc_json_parser_symbolic_int64+0x1bc>
    1f40:	b	1ed4 <flatcc_json_parser_symbolic_int64+0x1d0>
    1f44:	mov	r6, r4
    1f48:	b	1dac <flatcc_json_parser_symbolic_int64+0xa8>
    1f4c:	mov	r2, r6
    1f50:	mov	r1, r4
    1f54:	mov	r0, r8
    1f58:	mov	r3, #14
    1f5c:	bl	0 <flatcc_json_parser_set_error>
    1f60:	mov	r6, r0
    1f64:	b	1dac <flatcc_json_parser_symbolic_int64+0xa8>

00001f68 <monster_test_local_Fantasy_json_parser_enum>:
    1f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f6c:	sub	sp, sp, #12
    1f70:	mov	sl, r2
    1f74:	str	r3, [sp]
    1f78:	sub	r2, r2, r1
    1f7c:	ldr	r3, [sp, #48]	; 0x30
    1f80:	cmp	r2, #8
    1f84:	mov	r4, r1
    1f88:	mov	r5, r0
    1f8c:	str	r3, [sp, #4]
    1f90:	ldr	fp, [sp, #52]	; 0x34
    1f94:	bls	206c <monster_test_local_Fantasy_json_parser_enum+0x104>
    1f98:	ldrb	r6, [r4, #7]
    1f9c:	mov	r7, #0
    1fa0:	ldrb	r0, [r4, #6]
    1fa4:	lsr	r3, r0, #24
    1fa8:	lsl	r2, r0, #8
    1fac:	orr	r6, r6, r2
    1fb0:	orr	r7, r7, r3
    1fb4:	ldrb	r0, [r4, #5]
    1fb8:	lsr	r3, r0, #16
    1fbc:	lsl	r2, r0, #16
    1fc0:	orr	r6, r6, r2
    1fc4:	orr	r7, r7, r3
    1fc8:	ldrb	r0, [r4, #4]
    1fcc:	lsr	r3, r0, #8
    1fd0:	lsl	r2, r0, #24
    1fd4:	orr	r6, r6, r2
    1fd8:	orr	r7, r7, r3
    1fdc:	ldrb	r3, [r4, #3]
    1fe0:	mov	r2, #0
    1fe4:	orr	r2, r2, r6
    1fe8:	orr	r3, r3, r7
    1fec:	ldrb	r0, [r4, #2]
    1ff0:	mov	r6, #0
    1ff4:	orr	r2, r2, r6
    1ff8:	lsl	r7, r0, #8
    1ffc:	orr	r3, r3, r7
    2000:	ldrb	r0, [r4, #1]
    2004:	mov	r6, #0
    2008:	orr	r6, r6, r2
    200c:	lsl	r7, r0, #16
    2010:	orr	r7, r7, r3
    2014:	ldrb	r2, [r4]
    2018:	add	r9, pc, #280	; 0x118
    201c:	ldrd	r8, [r9]
    2020:	mov	r0, #0
    2024:	orr	r0, r0, r6
    2028:	lsl	r1, r2, #24
    202c:	orr	r1, r1, r7
    2030:	cmp	r1, r9
    2034:	cmpeq	r0, r8
    2038:	bne	2060 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    203c:	add	r6, r4, #8
    2040:	mov	r0, r6
    2044:	mov	r1, sl
    2048:	bl	0 <flatcc_json_parser_symbol_part_ext>
    204c:	mov	r0, #0
    2050:	and	r1, r1, #-16777216	; 0xff000000
    2054:	cmp	r1, #1912602624	; 0x72000000
    2058:	cmpeq	r0, #0
    205c:	beq	209c <monster_test_local_Fantasy_json_parser_enum+0x134>
    2060:	mov	r0, r4
    2064:	add	sp, sp, #12
    2068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    206c:	sub	r2, r2, #1
    2070:	cmp	r2, #7
    2074:	ldrls	pc, [pc, r2, lsl #2]
    2078:	b	2060 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    207c:	.word	0x000020e4
    2080:	.word	0x000020f0
    2084:	.word	0x000020fc
    2088:	.word	0x00002108
    208c:	.word	0x00002114
    2090:	.word	0x00002120
    2094:	.word	0x0000212c
    2098:	.word	0x00001f98
    209c:	sub	r3, sl, r6
    20a0:	cmp	r3, #1
    20a4:	ble	2060 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    20a8:	ldrb	r3, [r4, #9]
    20ac:	cmp	r3, #46	; 0x2e
    20b0:	bne	2060 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    20b4:	add	r1, r4, #10
    20b8:	cmp	r6, r1
    20bc:	beq	2060 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    20c0:	ldr	r3, [sp, #4]
    20c4:	str	fp, [sp, #52]	; 0x34
    20c8:	str	r3, [sp, #48]	; 0x30
    20cc:	mov	r2, sl
    20d0:	ldr	r3, [sp]
    20d4:	mov	r0, r5
    20d8:	add	sp, sp, #12
    20dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20e0:	b	180 <Fantasy_Character_parse_json_enum>
    20e4:	mov	r6, #0
    20e8:	mov	r7, #0
    20ec:	b	2014 <monster_test_local_Fantasy_json_parser_enum+0xac>
    20f0:	mov	r2, #0
    20f4:	mov	r3, #0
    20f8:	b	2000 <monster_test_local_Fantasy_json_parser_enum+0x98>
    20fc:	mov	r2, #0
    2100:	mov	r3, #0
    2104:	b	1fec <monster_test_local_Fantasy_json_parser_enum+0x84>
    2108:	mov	r6, #0
    210c:	mov	r7, #0
    2110:	b	1fdc <monster_test_local_Fantasy_json_parser_enum+0x74>
    2114:	mov	r6, #0
    2118:	mov	r7, #0
    211c:	b	1fc8 <monster_test_local_Fantasy_json_parser_enum+0x60>
    2120:	mov	r6, #0
    2124:	mov	r7, #0
    2128:	b	1fb4 <monster_test_local_Fantasy_json_parser_enum+0x4c>
    212c:	mov	r6, #0
    2130:	mov	r7, #0
    2134:	b	1fa0 <monster_test_local_Fantasy_json_parser_enum+0x38>
    2138:	.word	0x61637465
    213c:	.word	0x43686172

00002140 <flatcc_json_parser_array_end>:
    2140:	push	{r4, r5, r6, lr}
    2144:	mov	r4, r2
    2148:	sub	r2, r2, r1
    214c:	cmp	r2, #1
    2150:	mov	r5, r0
    2154:	mov	r6, r3
    2158:	ble	216c <flatcc_json_parser_array_end+0x2c>
    215c:	ldrb	r3, [r1]
    2160:	cmp	r3, #32
    2164:	bhi	217c <flatcc_json_parser_array_end+0x3c>
    2168:	beq	21ec <flatcc_json_parser_array_end+0xac>
    216c:	mov	r2, r4
    2170:	mov	r0, r5
    2174:	bl	0 <flatcc_json_parser_space_ext>
    2178:	mov	r1, r0
    217c:	cmp	r4, r1
    2180:	beq	2250 <flatcc_json_parser_array_end+0x110>
    2184:	ldrb	r3, [r1]
    2188:	cmp	r3, #44	; 0x2c
    218c:	beq	2200 <flatcc_json_parser_array_end+0xc0>
    2190:	mov	r3, #0
    2194:	str	r3, [r6]
    2198:	ldrb	r3, [r1]
    219c:	cmp	r3, #93	; 0x5d
    21a0:	beq	21b8 <flatcc_json_parser_array_end+0x78>
    21a4:	mov	r2, r4
    21a8:	mov	r0, r5
    21ac:	mov	r3, #9
    21b0:	pop	{r4, r5, r6, lr}
    21b4:	b	0 <flatcc_json_parser_set_error>
    21b8:	add	r0, r1, #1
    21bc:	sub	r3, r4, r0
    21c0:	cmp	r3, #1
    21c4:	ble	21d8 <flatcc_json_parser_array_end+0x98>
    21c8:	ldrb	r3, [r1, #1]
    21cc:	cmp	r3, #32
    21d0:	pophi	{r4, r5, r6, pc}
    21d4:	beq	2274 <flatcc_json_parser_array_end+0x134>
    21d8:	mov	r2, r4
    21dc:	mov	r1, r0
    21e0:	mov	r0, r5
    21e4:	pop	{r4, r5, r6, lr}
    21e8:	b	0 <flatcc_json_parser_space_ext>
    21ec:	ldrb	r3, [r1, #1]
    21f0:	cmp	r3, #32
    21f4:	addhi	r1, r1, #1
    21f8:	bls	216c <flatcc_json_parser_array_end+0x2c>
    21fc:	b	217c <flatcc_json_parser_array_end+0x3c>
    2200:	add	r0, r1, #1
    2204:	sub	r3, r4, r0
    2208:	cmp	r3, #1
    220c:	ble	2220 <flatcc_json_parser_array_end+0xe0>
    2210:	ldrb	r3, [r1, #1]
    2214:	cmp	r3, #32
    2218:	bhi	2230 <flatcc_json_parser_array_end+0xf0>
    221c:	beq	2260 <flatcc_json_parser_array_end+0x120>
    2220:	mov	r1, r0
    2224:	mov	r2, r4
    2228:	mov	r0, r5
    222c:	bl	0 <flatcc_json_parser_space_ext>
    2230:	cmp	r4, r0
    2234:	beq	22a4 <flatcc_json_parser_array_end+0x164>
    2238:	ldrb	r3, [r0]
    223c:	cmp	r3, #93	; 0x5d
    2240:	beq	2288 <flatcc_json_parser_array_end+0x148>
    2244:	mov	r3, #1
    2248:	str	r3, [r6]
    224c:	pop	{r4, r5, r6, pc}
    2250:	mov	r3, #0
    2254:	mov	r0, r4
    2258:	str	r3, [r6]
    225c:	pop	{r4, r5, r6, pc}
    2260:	ldrb	r3, [r1, #2]
    2264:	cmp	r3, #32
    2268:	addhi	r0, r1, #2
    226c:	bls	2220 <flatcc_json_parser_array_end+0xe0>
    2270:	b	2230 <flatcc_json_parser_array_end+0xf0>
    2274:	ldrb	r3, [r1, #2]
    2278:	cmp	r3, #32
    227c:	bls	21d8 <flatcc_json_parser_array_end+0x98>
    2280:	add	r0, r1, #2
    2284:	pop	{r4, r5, r6, pc}
    2288:	mov	r3, #0
    228c:	mov	r2, r4
    2290:	add	r1, r0, #1
    2294:	str	r3, [r6]
    2298:	mov	r0, r5
    229c:	pop	{r4, r5, r6, lr}
    22a0:	b	47c <flatcc_json_parser_space>
    22a4:	mov	r3, #0
    22a8:	str	r3, [r6]
    22ac:	mov	r0, r5
    22b0:	mov	r2, r4
    22b4:	mov	r1, r4
    22b8:	mov	r3, #9
    22bc:	pop	{r4, r5, r6, lr}
    22c0:	b	0 <flatcc_json_parser_set_error>

000022c4 <flatcc_json_parser_object_end>:
    22c4:	push	{r4, r5, r6, lr}
    22c8:	mov	r4, r2
    22cc:	sub	r2, r2, r1
    22d0:	cmp	r2, #1
    22d4:	mov	r5, r0
    22d8:	mov	r6, r3
    22dc:	ble	22f0 <flatcc_json_parser_object_end+0x2c>
    22e0:	ldrb	r3, [r1]
    22e4:	cmp	r3, #32
    22e8:	bhi	2300 <flatcc_json_parser_object_end+0x3c>
    22ec:	beq	2370 <flatcc_json_parser_object_end+0xac>
    22f0:	mov	r2, r4
    22f4:	mov	r0, r5
    22f8:	bl	0 <flatcc_json_parser_space_ext>
    22fc:	mov	r1, r0
    2300:	cmp	r4, r1
    2304:	beq	23d4 <flatcc_json_parser_object_end+0x110>
    2308:	ldrb	r3, [r1]
    230c:	cmp	r3, #44	; 0x2c
    2310:	beq	2384 <flatcc_json_parser_object_end+0xc0>
    2314:	mov	r3, #0
    2318:	str	r3, [r6]
    231c:	ldrb	r3, [r1]
    2320:	cmp	r3, #125	; 0x7d
    2324:	beq	233c <flatcc_json_parser_object_end+0x78>
    2328:	mov	r2, r4
    232c:	mov	r0, r5
    2330:	mov	r3, #10
    2334:	pop	{r4, r5, r6, lr}
    2338:	b	0 <flatcc_json_parser_set_error>
    233c:	add	r0, r1, #1
    2340:	sub	r3, r4, r0
    2344:	cmp	r3, #1
    2348:	ble	235c <flatcc_json_parser_object_end+0x98>
    234c:	ldrb	r3, [r1, #1]
    2350:	cmp	r3, #32
    2354:	pophi	{r4, r5, r6, pc}
    2358:	beq	23f8 <flatcc_json_parser_object_end+0x134>
    235c:	mov	r2, r4
    2360:	mov	r1, r0
    2364:	mov	r0, r5
    2368:	pop	{r4, r5, r6, lr}
    236c:	b	0 <flatcc_json_parser_space_ext>
    2370:	ldrb	r3, [r1, #1]
    2374:	cmp	r3, #32
    2378:	addhi	r1, r1, #1
    237c:	bls	22f0 <flatcc_json_parser_object_end+0x2c>
    2380:	b	2300 <flatcc_json_parser_object_end+0x3c>
    2384:	add	r0, r1, #1
    2388:	sub	r3, r4, r0
    238c:	cmp	r3, #1
    2390:	ble	23a4 <flatcc_json_parser_object_end+0xe0>
    2394:	ldrb	r3, [r1, #1]
    2398:	cmp	r3, #32
    239c:	bhi	23b4 <flatcc_json_parser_object_end+0xf0>
    23a0:	beq	23e4 <flatcc_json_parser_object_end+0x120>
    23a4:	mov	r1, r0
    23a8:	mov	r2, r4
    23ac:	mov	r0, r5
    23b0:	bl	0 <flatcc_json_parser_space_ext>
    23b4:	cmp	r4, r0
    23b8:	beq	2428 <flatcc_json_parser_object_end+0x164>
    23bc:	ldrb	r3, [r0]
    23c0:	cmp	r3, #125	; 0x7d
    23c4:	beq	240c <flatcc_json_parser_object_end+0x148>
    23c8:	mov	r3, #1
    23cc:	str	r3, [r6]
    23d0:	pop	{r4, r5, r6, pc}
    23d4:	mov	r3, #0
    23d8:	mov	r0, r4
    23dc:	str	r3, [r6]
    23e0:	pop	{r4, r5, r6, pc}
    23e4:	ldrb	r3, [r1, #2]
    23e8:	cmp	r3, #32
    23ec:	addhi	r0, r1, #2
    23f0:	bls	23a4 <flatcc_json_parser_object_end+0xe0>
    23f4:	b	23b4 <flatcc_json_parser_object_end+0xf0>
    23f8:	ldrb	r3, [r1, #2]
    23fc:	cmp	r3, #32
    2400:	bls	235c <flatcc_json_parser_object_end+0x98>
    2404:	add	r0, r1, #2
    2408:	pop	{r4, r5, r6, pc}
    240c:	mov	r3, #0
    2410:	mov	r2, r4
    2414:	add	r1, r0, #1
    2418:	str	r3, [r6]
    241c:	mov	r0, r5
    2420:	pop	{r4, r5, r6, lr}
    2424:	b	47c <flatcc_json_parser_space>
    2428:	mov	r3, #0
    242c:	str	r3, [r6]
    2430:	mov	r0, r5
    2434:	mov	r2, r4
    2438:	mov	r1, r4
    243c:	mov	r3, #10
    2440:	pop	{r4, r5, r6, lr}
    2444:	b	0 <flatcc_json_parser_set_error>

00002448 <MyGame_Example_Test_parse_json_struct_inline>:
    2448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    244c:	sub	sp, sp, #92	; 0x5c
    2450:	cmp	r1, r2
    2454:	mov	r5, r2
    2458:	mov	r6, r0
    245c:	str	r3, [sp, #64]	; 0x40
    2460:	beq	2470 <MyGame_Example_Test_parse_json_struct_inline+0x28>
    2464:	ldrb	r3, [r1]
    2468:	cmp	r3, #123	; 0x7b
    246c:	beq	2490 <MyGame_Example_Test_parse_json_struct_inline+0x48>
    2470:	mov	r2, r5
    2474:	mov	r0, r6
    2478:	mov	r3, #21
    247c:	bl	0 <flatcc_json_parser_set_error>
    2480:	mov	r5, r0
    2484:	mov	r0, r5
    2488:	add	sp, sp, #92	; 0x5c
    248c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2490:	add	r4, r1, #1
    2494:	sub	r3, r2, r4
    2498:	cmp	r3, #1
    249c:	ble	24b0 <MyGame_Example_Test_parse_json_struct_inline+0x68>
    24a0:	ldrb	r3, [r1, #1]
    24a4:	cmp	r3, #32
    24a8:	bhi	24c4 <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    24ac:	beq	2c6c <MyGame_Example_Test_parse_json_struct_inline+0x824>
    24b0:	mov	r1, r4
    24b4:	mov	r2, r5
    24b8:	mov	r0, r6
    24bc:	bl	0 <flatcc_json_parser_space_ext>
    24c0:	mov	r4, r0
    24c4:	cmp	r5, r4
    24c8:	beq	24d8 <MyGame_Example_Test_parse_json_struct_inline+0x90>
    24cc:	ldrb	r3, [r4]
    24d0:	cmp	r3, #125	; 0x7d
    24d4:	beq	2c80 <MyGame_Example_Test_parse_json_struct_inline+0x838>
    24d8:	mov	r7, #0
    24dc:	strd	r8, [sp, #32]
    24e0:	cmp	r5, r4
    24e4:	beq	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    24e8:	ldrb	r3, [r4]
    24ec:	cmp	r3, #34	; 0x22
    24f0:	beq	2954 <MyGame_Example_Test_parse_json_struct_inline+0x50c>
    24f4:	cmp	r3, #46	; 0x2e
    24f8:	movne	r3, #1
    24fc:	subne	ip, r5, r4
    2500:	strne	r3, [r6, #12]
    2504:	beq	2a90 <MyGame_Example_Test_parse_json_struct_inline+0x648>
    2508:	cmp	ip, #8
    250c:	bls	27a8 <MyGame_Example_Test_parse_json_struct_inline+0x360>
    2510:	mov	r9, #0
    2514:	ldrb	r2, [r4, #6]
    2518:	lsr	r1, r2, #24
    251c:	lsl	r3, r2, #8
    2520:	str	r1, [sp, #60]	; 0x3c
    2524:	str	r3, [sp, #56]	; 0x38
    2528:	ldrd	r2, [sp, #56]	; 0x38
    252c:	orr	r3, r3, r9
    2530:	mov	r9, r3
    2534:	ldrb	r2, [r4, #5]
    2538:	lsr	r1, r2, #16
    253c:	lsl	r3, r2, #16
    2540:	str	r1, [sp, #52]	; 0x34
    2544:	str	r3, [sp, #48]	; 0x30
    2548:	ldrd	r2, [sp, #48]	; 0x30
    254c:	orr	r3, r3, r9
    2550:	mov	r9, r3
    2554:	ldrb	r2, [r4, #4]
    2558:	lsr	r1, r2, #8
    255c:	lsl	r3, r2, #24
    2560:	str	r1, [sp, #28]
    2564:	str	r3, [sp, #24]
    2568:	ldrd	r2, [sp, #24]
    256c:	orr	r3, r3, r9
    2570:	mov	r9, r3
    2574:	ldrb	r3, [r4, #3]
    2578:	str	r3, [sp, #44]	; 0x2c
    257c:	mov	r3, #0
    2580:	str	r3, [sp, #40]	; 0x28
    2584:	ldrd	r2, [sp, #40]	; 0x28
    2588:	orr	r3, r3, r9
    258c:	mov	r9, r3
    2590:	ldrb	r2, [r4, #2]
    2594:	lsl	r3, r2, #8
    2598:	str	r3, [sp, #20]
    259c:	mov	r3, #0
    25a0:	str	r3, [sp, #16]
    25a4:	ldrd	r2, [sp, #16]
    25a8:	orr	r3, r3, r9
    25ac:	mov	r9, r3
    25b0:	ldrb	r2, [r4]
    25b4:	ldrb	r0, [r4, #1]
    25b8:	mov	sl, #0
    25bc:	str	sl, [sp, #8]
    25c0:	lsl	r3, r2, #24
    25c4:	str	r3, [sp, #12]
    25c8:	ldrd	r2, [sp, #8]
    25cc:	lsl	fp, r0, #16
    25d0:	orr	r9, r9, fp
    25d4:	orr	r3, r3, r9
    25d8:	and	r3, r3, #-16777216	; 0xff000000
    25dc:	mov	r2, #0
    25e0:	cmp	r3, #1644167168	; 0x62000000
    25e4:	cmpeq	r2, #0
    25e8:	strd	r2, [sp, #32]
    25ec:	beq	2820 <MyGame_Example_Test_parse_json_struct_inline+0x3d8>
    25f0:	ldrd	r2, [sp, #32]
    25f4:	cmp	r3, #1627389952	; 0x61000000
    25f8:	cmpeq	r2, #0
    25fc:	bne	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2600:	cmp	ip, #1
    2604:	ble	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2608:	ldr	r3, [r6, #12]
    260c:	cmp	r3, #0
    2610:	ldrb	r3, [r4, #1]
    2614:	beq	29f4 <MyGame_Example_Test_parse_json_struct_inline+0x5ac>
    2618:	cmp	r3, #58	; 0x3a
    261c:	cmpne	r3, #32
    2620:	movls	r3, #0
    2624:	movhi	r3, #1
    2628:	strls	r3, [r6, #12]
    262c:	addls	r1, r4, #1
    2630:	bhi	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2634:	sub	r3, r5, r1
    2638:	cmp	r3, #1
    263c:	ble	2650 <MyGame_Example_Test_parse_json_struct_inline+0x208>
    2640:	ldrb	r3, [r1]
    2644:	cmp	r3, #32
    2648:	bhi	2660 <MyGame_Example_Test_parse_json_struct_inline+0x218>
    264c:	beq	2b9c <MyGame_Example_Test_parse_json_struct_inline+0x754>
    2650:	mov	r2, r5
    2654:	mov	r0, r6
    2658:	bl	0 <flatcc_json_parser_space_ext>
    265c:	mov	r1, r0
    2660:	cmp	r5, r1
    2664:	beq	2674 <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    2668:	ldrb	r3, [r1]
    266c:	cmp	r3, #58	; 0x3a
    2670:	beq	2bc4 <MyGame_Example_Test_parse_json_struct_inline+0x77c>
    2674:	mov	r3, #4
    2678:	mov	r2, r5
    267c:	mov	r0, r6
    2680:	bl	0 <flatcc_json_parser_set_error>
    2684:	str	r0, [sp, #68]	; 0x44
    2688:	ldr	r3, [sp, #68]	; 0x44
    268c:	cmp	r3, r4
    2690:	beq	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2694:	mov	r4, r3
    2698:	cmp	r5, r3
    269c:	mov	r3, #0
    26a0:	strh	r7, [sp, #74]	; 0x4a
    26a4:	str	r3, [sp, #80]	; 0x50
    26a8:	str	r3, [sp, #84]	; 0x54
    26ac:	str	r7, [sp, #76]	; 0x4c
    26b0:	beq	2af4 <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    26b4:	add	r3, sp, #80	; 0x50
    26b8:	str	r3, [sp]
    26bc:	mov	r2, r5
    26c0:	add	r3, sp, #76	; 0x4c
    26c4:	mov	r1, r4
    26c8:	mov	r0, r6
    26cc:	bl	0 <flatcc_json_parser_integer>
    26d0:	cmp	r4, r0
    26d4:	beq	2af4 <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    26d8:	ldr	r1, [sp, #76]	; 0x4c
    26dc:	ldrd	r2, [sp, #80]	; 0x50
    26e0:	cmp	r1, #0
    26e4:	beq	2a04 <MyGame_Example_Test_parse_json_struct_inline+0x5bc>
    26e8:	cmp	r3, #0
    26ec:	cmpeq	r2, #32768	; 0x8000
    26f0:	rsbls	r2, r2, #0
    26f4:	sxthls	r2, r2
    26f8:	bhi	2ac4 <MyGame_Example_Test_parse_json_struct_inline+0x67c>
    26fc:	ldr	r3, [sp, #64]	; 0x40
    2700:	strh	r2, [r3]
    2704:	sub	r3, r5, r0
    2708:	cmp	r3, #1
    270c:	ble	2720 <MyGame_Example_Test_parse_json_struct_inline+0x2d8>
    2710:	ldrb	r3, [r0]
    2714:	cmp	r3, #32
    2718:	bhi	2730 <MyGame_Example_Test_parse_json_struct_inline+0x2e8>
    271c:	beq	2964 <MyGame_Example_Test_parse_json_struct_inline+0x51c>
    2720:	mov	r1, r0
    2724:	mov	r2, r5
    2728:	mov	r0, r6
    272c:	bl	0 <flatcc_json_parser_space_ext>
    2730:	cmp	r5, r0
    2734:	beq	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2738:	ldrb	r3, [r0]
    273c:	cmp	r3, #44	; 0x2c
    2740:	beq	2978 <MyGame_Example_Test_parse_json_struct_inline+0x530>
    2744:	cmp	r3, #125	; 0x7d
    2748:	beq	2920 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    274c:	mov	r2, r5
    2750:	mov	r1, r0
    2754:	mov	r3, #10
    2758:	mov	r0, r6
    275c:	bl	0 <flatcc_json_parser_set_error>
    2760:	mov	r5, r0
    2764:	mov	r0, r5
    2768:	add	sp, sp, #92	; 0x5c
    276c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2770:	ldrb	r2, [r4]
    2774:	lsl	r3, r2, #24
    2778:	str	r3, [sp, #36]	; 0x24
    277c:	mov	r3, #0
    2780:	str	r3, [sp, #32]
    2784:	ldrd	r2, [sp, #32]
    2788:	cmp	r3, #1644167168	; 0x62000000
    278c:	cmpeq	r2, #0
    2790:	bne	25f0 <MyGame_Example_Test_parse_json_struct_inline+0x1a8>
    2794:	mov	r1, r4
    2798:	mov	r2, r5
    279c:	mov	r0, r6
    27a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    27a4:	b	2704 <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    27a8:	sub	r3, ip, #1
    27ac:	cmp	r3, #7
    27b0:	ldrls	pc, [pc, r3, lsl #2]
    27b4:	b	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    27b8:	.word	0x00002770
    27bc:	.word	0x00002814
    27c0:	.word	0x00002808
    27c4:	.word	0x000027fc
    27c8:	.word	0x000027f0
    27cc:	.word	0x000027e4
    27d0:	.word	0x000027d8
    27d4:	.word	0x00002510
    27d8:	mov	r8, #0
    27dc:	mov	r9, r8
    27e0:	b	2514 <MyGame_Example_Test_parse_json_struct_inline+0xcc>
    27e4:	mov	r8, #0
    27e8:	mov	r9, r8
    27ec:	b	2534 <MyGame_Example_Test_parse_json_struct_inline+0xec>
    27f0:	mov	r8, #0
    27f4:	mov	r9, r8
    27f8:	b	2554 <MyGame_Example_Test_parse_json_struct_inline+0x10c>
    27fc:	mov	r8, #0
    2800:	mov	r9, r8
    2804:	b	2574 <MyGame_Example_Test_parse_json_struct_inline+0x12c>
    2808:	mov	r8, #0
    280c:	mov	r9, r8
    2810:	b	2590 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    2814:	mov	r8, #0
    2818:	mov	r9, r8
    281c:	b	25b0 <MyGame_Example_Test_parse_json_struct_inline+0x168>
    2820:	cmp	ip, #1
    2824:	ble	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2828:	ldr	r3, [r6, #12]
    282c:	cmp	r3, sl
    2830:	ldrb	r3, [r4, #1]
    2834:	beq	2a4c <MyGame_Example_Test_parse_json_struct_inline+0x604>
    2838:	cmp	r3, #58	; 0x3a
    283c:	cmpne	r3, #32
    2840:	movls	r3, #0
    2844:	movhi	r3, #1
    2848:	strls	r3, [r6, #12]
    284c:	addls	r1, r4, #1
    2850:	bhi	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2854:	sub	r3, r5, r1
    2858:	cmp	r3, #1
    285c:	ble	2870 <MyGame_Example_Test_parse_json_struct_inline+0x428>
    2860:	ldrb	r3, [r1]
    2864:	cmp	r3, #32
    2868:	bhi	2880 <MyGame_Example_Test_parse_json_struct_inline+0x438>
    286c:	beq	2bb0 <MyGame_Example_Test_parse_json_struct_inline+0x768>
    2870:	mov	r2, r5
    2874:	mov	r0, r6
    2878:	bl	0 <flatcc_json_parser_space_ext>
    287c:	mov	r1, r0
    2880:	cmp	r5, r1
    2884:	beq	2894 <MyGame_Example_Test_parse_json_struct_inline+0x44c>
    2888:	ldrb	r3, [r1]
    288c:	cmp	r3, #58	; 0x3a
    2890:	beq	2c00 <MyGame_Example_Test_parse_json_struct_inline+0x7b8>
    2894:	mov	r3, #4
    2898:	mov	r2, r5
    289c:	mov	r0, r6
    28a0:	bl	0 <flatcc_json_parser_set_error>
    28a4:	mov	r8, r0
    28a8:	cmp	r8, r4
    28ac:	beq	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    28b0:	mov	r3, #0
    28b4:	cmp	r5, r8
    28b8:	strb	r7, [sp, #74]	; 0x4a
    28bc:	str	r3, [sp, #80]	; 0x50
    28c0:	str	r3, [sp, #84]	; 0x54
    28c4:	str	r7, [sp, #76]	; 0x4c
    28c8:	beq	2b70 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    28cc:	add	r3, sp, #80	; 0x50
    28d0:	str	r3, [sp]
    28d4:	mov	r2, r5
    28d8:	add	r3, sp, #76	; 0x4c
    28dc:	mov	r1, r8
    28e0:	mov	r0, r6
    28e4:	bl	0 <flatcc_json_parser_integer>
    28e8:	cmp	r8, r0
    28ec:	beq	2b70 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    28f0:	ldr	r1, [sp, #76]	; 0x4c
    28f4:	ldrd	r2, [sp, #80]	; 0x50
    28f8:	cmp	r1, #0
    28fc:	beq	2a5c <MyGame_Example_Test_parse_json_struct_inline+0x614>
    2900:	cmp	r3, #0
    2904:	cmpeq	r2, #128	; 0x80
    2908:	rsbls	r2, r2, #0
    290c:	sxtbls	r2, r2
    2910:	bhi	2adc <MyGame_Example_Test_parse_json_struct_inline+0x694>
    2914:	ldr	r3, [sp, #64]	; 0x40
    2918:	strb	r2, [r3, #2]
    291c:	b	2704 <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    2920:	add	r1, r0, #1
    2924:	sub	r3, r5, r1
    2928:	cmp	r3, #1
    292c:	ble	2940 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    2930:	ldrb	r3, [r0, #1]
    2934:	cmp	r3, #32
    2938:	bhi	2a44 <MyGame_Example_Test_parse_json_struct_inline+0x5fc>
    293c:	beq	2ab0 <MyGame_Example_Test_parse_json_struct_inline+0x668>
    2940:	mov	r2, r5
    2944:	mov	r0, r6
    2948:	bl	0 <flatcc_json_parser_space_ext>
    294c:	mov	r5, r0
    2950:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2954:	add	r4, r4, #1
    2958:	str	r7, [r6, #12]
    295c:	sub	ip, r5, r4
    2960:	b	2508 <MyGame_Example_Test_parse_json_struct_inline+0xc0>
    2964:	ldrb	r3, [r0, #1]
    2968:	cmp	r3, #32
    296c:	addhi	r0, r0, #1
    2970:	bls	2720 <MyGame_Example_Test_parse_json_struct_inline+0x2d8>
    2974:	b	2730 <MyGame_Example_Test_parse_json_struct_inline+0x2e8>
    2978:	add	r4, r0, #1
    297c:	sub	r3, r5, r4
    2980:	cmp	r3, #1
    2984:	ble	2998 <MyGame_Example_Test_parse_json_struct_inline+0x550>
    2988:	ldrb	r3, [r0, #1]
    298c:	cmp	r3, #32
    2990:	bhi	29ac <MyGame_Example_Test_parse_json_struct_inline+0x564>
    2994:	beq	2b3c <MyGame_Example_Test_parse_json_struct_inline+0x6f4>
    2998:	mov	r1, r4
    299c:	mov	r2, r5
    29a0:	mov	r0, r6
    29a4:	bl	0 <flatcc_json_parser_space_ext>
    29a8:	mov	r4, r0
    29ac:	cmp	r5, r4
    29b0:	beq	2b54 <MyGame_Example_Test_parse_json_struct_inline+0x70c>
    29b4:	ldrb	r3, [r4]
    29b8:	cmp	r3, #125	; 0x7d
    29bc:	bne	24e0 <MyGame_Example_Test_parse_json_struct_inline+0x98>
    29c0:	add	r1, r4, #1
    29c4:	sub	r3, r5, r1
    29c8:	cmp	r3, #1
    29cc:	ble	2940 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    29d0:	ldrb	r3, [r4, #1]
    29d4:	cmp	r3, #32
    29d8:	bhi	2a44 <MyGame_Example_Test_parse_json_struct_inline+0x5fc>
    29dc:	bne	2940 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    29e0:	ldrb	r3, [r4, #2]
    29e4:	cmp	r3, #32
    29e8:	addhi	r5, r4, #2
    29ec:	bls	2940 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    29f0:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    29f4:	cmp	r3, #34	; 0x22
    29f8:	bne	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    29fc:	add	r1, r4, #2
    2a00:	b	2634 <MyGame_Example_Test_parse_json_struct_inline+0x1ec>
    2a04:	ldr	r8, [pc, #652]	; 2c98 <MyGame_Example_Test_parse_json_struct_inline+0x850>
    2a08:	mov	r9, #0
    2a0c:	cmp	r3, r9
    2a10:	cmpeq	r2, r8
    2a14:	sxthls	r2, r2
    2a18:	bls	26fc <MyGame_Example_Test_parse_json_struct_inline+0x2b4>
    2a1c:	mov	r1, r0
    2a20:	mov	r3, #7
    2a24:	mov	r2, r5
    2a28:	mov	r0, r6
    2a2c:	bl	0 <flatcc_json_parser_set_error>
    2a30:	ldr	r3, [sp, #68]	; 0x44
    2a34:	cmp	r3, r0
    2a38:	beq	2af4 <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    2a3c:	ldrsh	r2, [sp, #74]	; 0x4a
    2a40:	b	26fc <MyGame_Example_Test_parse_json_struct_inline+0x2b4>
    2a44:	mov	r5, r1
    2a48:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2a4c:	cmp	r3, #34	; 0x22
    2a50:	bne	2794 <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    2a54:	add	r1, r4, #2
    2a58:	b	2854 <MyGame_Example_Test_parse_json_struct_inline+0x40c>
    2a5c:	cmp	r3, #0
    2a60:	cmpeq	r2, #127	; 0x7f
    2a64:	sxtbls	r2, r2
    2a68:	bls	2914 <MyGame_Example_Test_parse_json_struct_inline+0x4cc>
    2a6c:	mov	r1, r0
    2a70:	mov	r3, #7
    2a74:	mov	r2, r5
    2a78:	mov	r0, r6
    2a7c:	bl	0 <flatcc_json_parser_set_error>
    2a80:	cmp	r8, r0
    2a84:	beq	2b70 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    2a88:	ldrsb	r2, [sp, #74]	; 0x4a
    2a8c:	b	2914 <MyGame_Example_Test_parse_json_struct_inline+0x4cc>
    2a90:	mov	r1, r4
    2a94:	mov	r3, #5
    2a98:	mov	r2, r5
    2a9c:	mov	r0, r6
    2aa0:	bl	0 <flatcc_json_parser_set_error>
    2aa4:	mov	r4, r0
    2aa8:	sub	ip, r5, r0
    2aac:	b	2508 <MyGame_Example_Test_parse_json_struct_inline+0xc0>
    2ab0:	ldrb	r3, [r0, #2]
    2ab4:	cmp	r3, #32
    2ab8:	addhi	r5, r0, #2
    2abc:	bls	2940 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    2ac0:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2ac4:	mov	r1, r0
    2ac8:	mov	r3, #8
    2acc:	mov	r2, r5
    2ad0:	mov	r0, r6
    2ad4:	bl	0 <flatcc_json_parser_set_error>
    2ad8:	b	2a30 <MyGame_Example_Test_parse_json_struct_inline+0x5e8>
    2adc:	mov	r1, r0
    2ae0:	mov	r3, #8
    2ae4:	mov	r2, r5
    2ae8:	mov	r0, r6
    2aec:	bl	0 <flatcc_json_parser_set_error>
    2af0:	b	2a80 <MyGame_Example_Test_parse_json_struct_inline+0x638>
    2af4:	ldr	r4, [sp, #68]	; 0x44
    2af8:	add	r3, sp, #74	; 0x4a
    2afc:	str	r3, [sp]
    2b00:	mov	r2, r5
    2b04:	ldr	r3, [pc, #400]	; 2c9c <MyGame_Example_Test_parse_json_struct_inline+0x854>
    2b08:	mov	r1, r4
    2b0c:	mov	r0, r6
    2b10:	bl	1ac8 <flatcc_json_parser_symbolic_int16>
    2b14:	cmp	r5, r0
    2b18:	cmpne	r0, r4
    2b1c:	bne	2a3c <MyGame_Example_Test_parse_json_struct_inline+0x5f4>
    2b20:	mov	r2, r5
    2b24:	mov	r1, r0
    2b28:	mov	r3, #33	; 0x21
    2b2c:	mov	r0, r6
    2b30:	bl	0 <flatcc_json_parser_set_error>
    2b34:	mov	r5, r0
    2b38:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2b3c:	ldrb	r3, [r0, #2]
    2b40:	cmp	r3, #32
    2b44:	addhi	r4, r0, #2
    2b48:	bls	2998 <MyGame_Example_Test_parse_json_struct_inline+0x550>
    2b4c:	cmp	r5, r4
    2b50:	bne	29b4 <MyGame_Example_Test_parse_json_struct_inline+0x56c>
    2b54:	mov	r2, r5
    2b58:	mov	r1, r5
    2b5c:	mov	r0, r6
    2b60:	mov	r3, #10
    2b64:	bl	0 <flatcc_json_parser_set_error>
    2b68:	mov	r5, r0
    2b6c:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2b70:	add	r3, sp, #74	; 0x4a
    2b74:	str	r3, [sp]
    2b78:	mov	r2, r5
    2b7c:	ldr	r3, [pc, #284]	; 2ca0 <MyGame_Example_Test_parse_json_struct_inline+0x858>
    2b80:	mov	r1, r8
    2b84:	mov	r0, r6
    2b88:	bl	1670 <flatcc_json_parser_symbolic_int8>
    2b8c:	cmp	r5, r0
    2b90:	cmpne	r0, r8
    2b94:	bne	2a88 <MyGame_Example_Test_parse_json_struct_inline+0x640>
    2b98:	b	2b20 <MyGame_Example_Test_parse_json_struct_inline+0x6d8>
    2b9c:	ldrb	r3, [r1, #1]
    2ba0:	cmp	r3, #32
    2ba4:	addhi	r1, r1, #1
    2ba8:	bls	2650 <MyGame_Example_Test_parse_json_struct_inline+0x208>
    2bac:	b	2660 <MyGame_Example_Test_parse_json_struct_inline+0x218>
    2bb0:	ldrb	r3, [r1, #1]
    2bb4:	cmp	r3, #32
    2bb8:	addhi	r1, r1, #1
    2bbc:	bls	2870 <MyGame_Example_Test_parse_json_struct_inline+0x428>
    2bc0:	b	2880 <MyGame_Example_Test_parse_json_struct_inline+0x438>
    2bc4:	add	r3, r1, #1
    2bc8:	str	r3, [sp, #68]	; 0x44
    2bcc:	sub	r3, r5, r3
    2bd0:	cmp	r3, #1
    2bd4:	ble	2be8 <MyGame_Example_Test_parse_json_struct_inline+0x7a0>
    2bd8:	ldrb	r3, [r1, #1]
    2bdc:	cmp	r3, #32
    2be0:	bhi	2688 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    2be4:	beq	2c3c <MyGame_Example_Test_parse_json_struct_inline+0x7f4>
    2be8:	ldr	r1, [sp, #68]	; 0x44
    2bec:	mov	r2, r5
    2bf0:	mov	r0, r6
    2bf4:	bl	0 <flatcc_json_parser_space_ext>
    2bf8:	str	r0, [sp, #68]	; 0x44
    2bfc:	b	2688 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    2c00:	add	r3, r1, #1
    2c04:	mov	r8, r3
    2c08:	sub	r3, r5, r3
    2c0c:	cmp	r3, #1
    2c10:	ble	2c24 <MyGame_Example_Test_parse_json_struct_inline+0x7dc>
    2c14:	ldrb	r3, [r1, #1]
    2c18:	cmp	r3, #32
    2c1c:	bhi	28a8 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    2c20:	beq	2c54 <MyGame_Example_Test_parse_json_struct_inline+0x80c>
    2c24:	mov	r1, r8
    2c28:	mov	r2, r5
    2c2c:	mov	r0, r6
    2c30:	bl	0 <flatcc_json_parser_space_ext>
    2c34:	mov	r8, r0
    2c38:	b	28a8 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    2c3c:	ldrb	r3, [r1, #2]
    2c40:	cmp	r3, #32
    2c44:	addhi	r3, r1, #2
    2c48:	strhi	r3, [sp, #68]	; 0x44
    2c4c:	bls	2be8 <MyGame_Example_Test_parse_json_struct_inline+0x7a0>
    2c50:	b	2688 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    2c54:	ldrb	r3, [r1, #2]
    2c58:	cmp	r3, #32
    2c5c:	addhi	r3, r1, #2
    2c60:	movhi	r8, r3
    2c64:	bls	2c24 <MyGame_Example_Test_parse_json_struct_inline+0x7dc>
    2c68:	b	28a8 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    2c6c:	ldrb	r3, [r1, #2]
    2c70:	cmp	r3, #32
    2c74:	addhi	r4, r1, #2
    2c78:	bls	24b0 <MyGame_Example_Test_parse_json_struct_inline+0x68>
    2c7c:	b	24c4 <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    2c80:	mov	r2, r5
    2c84:	add	r1, r4, #1
    2c88:	mov	r0, r6
    2c8c:	bl	47c <flatcc_json_parser_space>
    2c90:	mov	r5, r0
    2c94:	b	2484 <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    2c98:	.word	0x00007fff
    2c9c:	.word	0x0000000c
    2ca0:	.word	0x00000000

00002ca4 <MyGame_Example_Foo_parse_json_enum>:
    2ca4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2ca8:	mov	r5, r2
    2cac:	sub	r2, r2, r1
    2cb0:	cmp	r2, #8
    2cb4:	sub	sp, sp, #8
    2cb8:	mov	r4, r1
    2cbc:	mov	r8, r0
    2cc0:	mov	r9, r3
    2cc4:	bls	2d90 <MyGame_Example_Foo_parse_json_enum+0xec>
    2cc8:	ldrb	r6, [r4, #7]
    2ccc:	mov	r7, #0
    2cd0:	ldrb	r2, [r4, #6]
    2cd4:	lsr	r1, r2, #24
    2cd8:	lsl	r0, r2, #8
    2cdc:	orr	r6, r6, r0
    2ce0:	orr	r7, r7, r1
    2ce4:	ldrb	r2, [r4, #5]
    2ce8:	lsr	r1, r2, #16
    2cec:	lsl	r0, r2, #16
    2cf0:	orr	r0, r0, r6
    2cf4:	orr	r1, r1, r7
    2cf8:	ldrb	r2, [r4, #4]
    2cfc:	lsr	r7, r2, #8
    2d00:	lsl	r6, r2, #24
    2d04:	orr	r6, r6, r0
    2d08:	orr	r7, r7, r1
    2d0c:	ldrb	r1, [r4, #3]
    2d10:	mov	r0, #0
    2d14:	orr	r6, r6, r0
    2d18:	orr	r7, r7, r1
    2d1c:	ldrb	r2, [r4, #2]
    2d20:	mov	r0, #0
    2d24:	orr	r6, r6, r0
    2d28:	lsl	r1, r2, #8
    2d2c:	orr	r7, r7, r1
    2d30:	ldrb	r2, [r4, #1]
    2d34:	mov	r0, #0
    2d38:	orr	r0, r0, r6
    2d3c:	lsl	r1, r2, #16
    2d40:	orr	r1, r1, r7
    2d44:	ldrb	r2, [r4]
    2d48:	mov	r6, #0
    2d4c:	orr	r0, r0, r6
    2d50:	lsl	r7, r2, #24
    2d54:	add	r3, pc, #380	; 0x17c
    2d58:	ldrd	r2, [r3]
    2d5c:	orr	r1, r1, r7
    2d60:	cmp	r1, r3
    2d64:	cmpeq	r0, r2
    2d68:	beq	2dc0 <MyGame_Example_Foo_parse_json_enum+0x11c>
    2d6c:	add	r3, pc, #364	; 0x16c
    2d70:	ldrd	r2, [r3]
    2d74:	mov	r0, #0
    2d78:	cmp	r1, r3
    2d7c:	cmpeq	r0, r2
    2d80:	beq	2e40 <MyGame_Example_Foo_parse_json_enum+0x19c>
    2d84:	mov	r0, r4
    2d88:	add	sp, sp, #8
    2d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2d90:	sub	r2, r2, #1
    2d94:	cmp	r2, #7
    2d98:	ldrls	pc, [pc, r2, lsl #2]
    2d9c:	b	2d84 <MyGame_Example_Foo_parse_json_enum+0xe0>
    2da0:	.word	0x00002e80
    2da4:	.word	0x00002e8c
    2da8:	.word	0x00002e98
    2dac:	.word	0x00002ea4
    2db0:	.word	0x00002eb0
    2db4:	.word	0x00002ebc
    2db8:	.word	0x00002ec8
    2dbc:	.word	0x00002cc8
    2dc0:	mov	r1, r5
    2dc4:	add	r0, r4, #8
    2dc8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    2dcc:	add	r3, pc, #276	; 0x114
    2dd0:	ldrd	r2, [r3]
    2dd4:	cmp	r1, r3
    2dd8:	cmpeq	r0, r2
    2ddc:	bne	2d84 <MyGame_Example_Foo_parse_json_enum+0xe0>
    2de0:	add	sl, r4, #16
    2de4:	mov	r0, sl
    2de8:	mov	r1, r5
    2dec:	bl	0 <flatcc_json_parser_symbol_part_ext>
    2df0:	mov	r0, #0
    2df4:	and	r1, r1, #-16777216	; 0xff000000
    2df8:	cmp	r1, #1694498816	; 0x65000000
    2dfc:	cmpeq	r0, #0
    2e00:	bne	2d84 <MyGame_Example_Foo_parse_json_enum+0xe0>
    2e04:	ldr	r3, [sp, #44]	; 0x2c
    2e08:	mov	r2, r5
    2e0c:	str	r3, [sp]
    2e10:	mov	r0, r8
    2e14:	mov	r3, #1
    2e18:	mov	r1, sl
    2e1c:	bl	0 <flatcc_json_parser_match_constant>
    2e20:	cmp	sl, r0
    2e24:	beq	2d84 <MyGame_Example_Foo_parse_json_enum+0xe0>
    2e28:	ldr	r1, [sp, #40]	; 0x28
    2e2c:	mov	r2, #1
    2e30:	mov	r3, #0
    2e34:	strd	r2, [r1]
    2e38:	str	r6, [r9]
    2e3c:	b	2d88 <MyGame_Example_Foo_parse_json_enum+0xe4>
    2e40:	ldr	r3, [sp, #44]	; 0x2c
    2e44:	mov	r2, r5
    2e48:	str	r3, [sp]
    2e4c:	mov	r0, r8
    2e50:	mov	r3, #4
    2e54:	mov	r1, r4
    2e58:	bl	0 <flatcc_json_parser_match_constant>
    2e5c:	cmp	r4, r0
    2e60:	beq	2d88 <MyGame_Example_Foo_parse_json_enum+0xe4>
    2e64:	ldr	r1, [sp, #40]	; 0x28
    2e68:	mov	r2, #0
    2e6c:	mov	r3, #0
    2e70:	strd	r2, [r1]
    2e74:	str	r6, [r9]
    2e78:	add	sp, sp, #8
    2e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2e80:	mov	r0, #0
    2e84:	mov	r1, #0
    2e88:	b	2d44 <MyGame_Example_Foo_parse_json_enum+0xa0>
    2e8c:	mov	r6, #0
    2e90:	mov	r7, #0
    2e94:	b	2d30 <MyGame_Example_Foo_parse_json_enum+0x8c>
    2e98:	mov	r6, #0
    2e9c:	mov	r7, #0
    2ea0:	b	2d1c <MyGame_Example_Foo_parse_json_enum+0x78>
    2ea4:	mov	r6, #0
    2ea8:	mov	r7, #0
    2eac:	b	2d0c <MyGame_Example_Foo_parse_json_enum+0x68>
    2eb0:	mov	r0, #0
    2eb4:	mov	r1, #0
    2eb8:	b	2cf8 <MyGame_Example_Foo_parse_json_enum+0x54>
    2ebc:	mov	r6, #0
    2ec0:	mov	r7, #0
    2ec4:	b	2ce4 <MyGame_Example_Foo_parse_json_enum+0x40>
    2ec8:	mov	r6, #0
    2ecc:	mov	r7, #0
    2ed0:	b	2cd0 <MyGame_Example_Foo_parse_json_enum+0x2c>
    2ed4:	nop			; (mov r0, r0)
    2ed8:	.word	0x72656e74
    2edc:	.word	0x496e5061
    2ee0:	.word	0x00000000
    2ee4:	.word	0x4e4f4e45
    2ee8:	.word	0x73706163
    2eec:	.word	0x4e616d65

00002ef0 <MyGame_Example_neg_enum_parse_json_enum>:
    2ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2ef4:	mov	r6, r1
    2ef8:	sub	r1, r2, r1
    2efc:	cmp	r1, #8
    2f00:	sub	sp, sp, #12
    2f04:	mov	r7, r3
    2f08:	bls	2fe8 <MyGame_Example_neg_enum_parse_json_enum+0xf8>
    2f0c:	ldrb	sl, [r6, #7]
    2f10:	mov	fp, #0
    2f14:	ldrb	r4, [r6, #6]
    2f18:	lsr	r9, r4, #24
    2f1c:	lsl	r8, r4, #8
    2f20:	orr	sl, sl, r8
    2f24:	orr	fp, fp, r9
    2f28:	ldrb	r4, [r6, #5]
    2f2c:	lsr	r9, r4, #16
    2f30:	lsl	r8, r4, #16
    2f34:	orr	r8, r8, sl
    2f38:	orr	r9, r9, fp
    2f3c:	ldrb	r4, [r6, #4]
    2f40:	lsr	fp, r4, #8
    2f44:	lsl	sl, r4, #24
    2f48:	orr	sl, sl, r8
    2f4c:	orr	fp, fp, r9
    2f50:	ldrb	r9, [r6, #3]
    2f54:	mov	r8, #0
    2f58:	orr	sl, sl, r8
    2f5c:	orr	fp, fp, r9
    2f60:	ldrb	r4, [r6, #2]
    2f64:	mov	r8, #0
    2f68:	orr	sl, sl, r8
    2f6c:	lsl	r9, r4, #8
    2f70:	orr	fp, fp, r9
    2f74:	ldrb	r4, [r6, #1]
    2f78:	mov	r8, #0
    2f7c:	orr	r8, r8, sl
    2f80:	lsl	r9, r4, #16
    2f84:	orr	r9, r9, fp
    2f88:	ldrb	sl, [r6]
    2f8c:	mov	r4, #0
    2f90:	orr	r4, r4, r8
    2f94:	lsl	r5, sl, #24
    2f98:	add	fp, pc, #392	; 0x188
    2f9c:	ldrd	sl, [fp]
    2fa0:	orr	r5, r5, r9
    2fa4:	cmp	r5, fp
    2fa8:	cmpeq	r4, sl
    2fac:	bls	3018 <MyGame_Example_neg_enum_parse_json_enum+0x128>
    2fb0:	add	fp, pc, #376	; 0x178
    2fb4:	ldrd	sl, [fp]
    2fb8:	mov	r4, #0
    2fbc:	cmp	r5, fp
    2fc0:	cmpeq	r4, sl
    2fc4:	beq	3104 <MyGame_Example_neg_enum_parse_json_enum+0x214>
    2fc8:	add	r9, pc, #360	; 0x168
    2fcc:	ldrd	r8, [r9]
    2fd0:	cmp	r5, r9
    2fd4:	cmpeq	r4, r8
    2fd8:	beq	3074 <MyGame_Example_neg_enum_parse_json_enum+0x184>
    2fdc:	mov	r0, r6
    2fe0:	add	sp, sp, #12
    2fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2fe8:	sub	r1, r1, #1
    2fec:	cmp	r1, #7
    2ff0:	ldrls	pc, [pc, r1, lsl #2]
    2ff4:	b	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    2ff8:	.word	0x000030b0
    2ffc:	.word	0x000030d4
    3000:	.word	0x000030e0
    3004:	.word	0x000030ec
    3008:	.word	0x000030f8
    300c:	.word	0x000030bc
    3010:	.word	0x000030c8
    3014:	.word	0x00002f0c
    3018:	add	fp, pc, #288	; 0x120
    301c:	ldrd	sl, [fp]
    3020:	mov	r4, #0
    3024:	cmp	r5, fp
    3028:	cmpeq	r4, sl
    302c:	bne	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    3030:	ldr	r3, [sp, #52]	; 0x34
    3034:	mov	r1, r6
    3038:	str	r3, [sp]
    303c:	mov	r3, #4
    3040:	bl	0 <flatcc_json_parser_match_constant>
    3044:	cmp	r6, r0
    3048:	mvnne	r4, #11
    304c:	beq	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    3050:	ldr	r2, [sp, #48]	; 0x30
    3054:	mvn	r5, #0
    3058:	mov	r3, #1
    305c:	mov	r6, r0
    3060:	strd	r4, [r2]
    3064:	mov	r0, r6
    3068:	str	r3, [r7]
    306c:	add	sp, sp, #12
    3070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3074:	ldr	r3, [sp, #52]	; 0x34
    3078:	mov	r1, r6
    307c:	str	r3, [sp]
    3080:	mov	r3, #4
    3084:	bl	0 <flatcc_json_parser_match_constant>
    3088:	cmp	r6, r0
    308c:	beq	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    3090:	ldr	r2, [sp, #48]	; 0x30
    3094:	mov	r6, r0
    3098:	mvn	r1, #0
    309c:	mvn	r0, #10
    30a0:	mov	r3, #1
    30a4:	strd	r0, [r2]
    30a8:	str	r3, [r7]
    30ac:	b	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    30b0:	mov	r8, #0
    30b4:	mov	r9, #0
    30b8:	b	2f88 <MyGame_Example_neg_enum_parse_json_enum+0x98>
    30bc:	mov	sl, #0
    30c0:	mov	fp, #0
    30c4:	b	2f28 <MyGame_Example_neg_enum_parse_json_enum+0x38>
    30c8:	mov	sl, #0
    30cc:	mov	fp, #0
    30d0:	b	2f14 <MyGame_Example_neg_enum_parse_json_enum+0x24>
    30d4:	mov	sl, #0
    30d8:	mov	fp, #0
    30dc:	b	2f74 <MyGame_Example_neg_enum_parse_json_enum+0x84>
    30e0:	mov	sl, #0
    30e4:	mov	fp, #0
    30e8:	b	2f60 <MyGame_Example_neg_enum_parse_json_enum+0x70>
    30ec:	mov	sl, #0
    30f0:	mov	fp, #0
    30f4:	b	2f50 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    30f8:	mov	r8, #0
    30fc:	mov	r9, #0
    3100:	b	2f3c <MyGame_Example_neg_enum_parse_json_enum+0x4c>
    3104:	ldr	r3, [sp, #52]	; 0x34
    3108:	mov	r1, r6
    310c:	str	r3, [sp]
    3110:	mov	r3, #4
    3114:	bl	0 <flatcc_json_parser_match_constant>
    3118:	cmp	r6, r0
    311c:	beq	2fdc <MyGame_Example_neg_enum_parse_json_enum+0xec>
    3120:	mvn	r4, #9
    3124:	b	3050 <MyGame_Example_neg_enum_parse_json_enum+0x160>
    3128:	.word	0xffffffff
    312c:	.word	0x6e656731
    3130:	.word	0x00000000
    3134:	.word	0x6e656733
    3138:	.word	0x00000000
    313c:	.word	0x6e656732
    3140:	.word	0x00000000
    3144:	.word	0x6e656731

00003148 <MyGame_Example_Color_parse_json_enum>:
    3148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    314c:	mov	r6, r1
    3150:	sub	r1, r2, r1
    3154:	cmp	r1, #8
    3158:	sub	sp, sp, #12
    315c:	mov	ip, r0
    3160:	mov	r7, r3
    3164:	bls	324c <MyGame_Example_Color_parse_json_enum+0x104>
    3168:	ldrb	r8, [r6, #7]
    316c:	mov	r9, #0
    3170:	ldrb	r0, [r6, #6]
    3174:	lsr	r5, r0, #24
    3178:	lsl	r4, r0, #8
    317c:	orr	r8, r8, r4
    3180:	orr	r9, r9, r5
    3184:	ldrb	r0, [r6, #5]
    3188:	lsr	r5, r0, #16
    318c:	lsl	r4, r0, #16
    3190:	orr	r4, r4, r8
    3194:	orr	r5, r5, r9
    3198:	ldrb	r0, [r6, #4]
    319c:	lsr	r9, r0, #8
    31a0:	lsl	r8, r0, #24
    31a4:	orr	r8, r8, r4
    31a8:	orr	r9, r9, r5
    31ac:	ldrb	r1, [r6, #3]
    31b0:	mov	r0, #0
    31b4:	orr	r8, r8, r0
    31b8:	orr	r9, r9, r1
    31bc:	ldrb	r4, [r6, #2]
    31c0:	mov	r0, #0
    31c4:	orr	r8, r8, r0
    31c8:	lsl	r1, r4, #8
    31cc:	orr	r9, r9, r1
    31d0:	ldrb	r4, [r6, #1]
    31d4:	mov	r0, #0
    31d8:	orr	r0, r0, r8
    31dc:	lsl	r1, r4, #16
    31e0:	orr	r1, r1, r9
    31e4:	ldrb	r8, [r6]
    31e8:	mov	r4, #0
    31ec:	orr	r0, r0, r4
    31f0:	lsl	r5, r8, #24
    31f4:	add	r9, pc, #404	; 0x194
    31f8:	ldrd	r8, [r9]
    31fc:	orr	r1, r1, r5
    3200:	cmp	r1, r9
    3204:	cmpeq	r0, r8
    3208:	bls	327c <MyGame_Example_Color_parse_json_enum+0x134>
    320c:	add	r9, pc, #388	; 0x184
    3210:	ldrd	r8, [r9]
    3214:	bic	fp, r1, #255	; 0xff
    3218:	mov	sl, #0
    321c:	cmp	fp, r9
    3220:	cmpeq	sl, r8
    3224:	beq	3368 <MyGame_Example_Color_parse_json_enum+0x220>
    3228:	add	r9, pc, #368	; 0x170
    322c:	ldrd	r8, [r9]
    3230:	and	r0, r0, #-16777216	; 0xff000000
    3234:	cmp	r1, r9
    3238:	cmpeq	r0, r8
    323c:	beq	32d8 <MyGame_Example_Color_parse_json_enum+0x190>
    3240:	mov	r0, r6
    3244:	add	sp, sp, #12
    3248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    324c:	sub	r1, r1, #1
    3250:	cmp	r1, #7
    3254:	ldrls	pc, [pc, r1, lsl #2]
    3258:	b	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    325c:	.word	0x00003314
    3260:	.word	0x00003338
    3264:	.word	0x00003344
    3268:	.word	0x00003350
    326c:	.word	0x0000335c
    3270:	.word	0x00003320
    3274:	.word	0x0000332c
    3278:	.word	0x00003168
    327c:	add	r9, pc, #292	; 0x124
    3280:	ldrd	r8, [r9]
    3284:	mov	r0, #0
    3288:	cmp	r1, r9
    328c:	cmpeq	r0, r8
    3290:	bne	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    3294:	ldr	r3, [sp, #52]	; 0x34
    3298:	mov	r0, ip
    329c:	str	r3, [sp]
    32a0:	mov	r1, r6
    32a4:	mov	r3, #4
    32a8:	bl	0 <flatcc_json_parser_match_constant>
    32ac:	cmp	r6, r0
    32b0:	movne	r2, #8
    32b4:	beq	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    32b8:	ldr	r1, [sp, #48]	; 0x30
    32bc:	mov	r3, #0
    32c0:	mov	r6, r0
    32c4:	strd	r2, [r1]
    32c8:	mov	r0, r6
    32cc:	str	r4, [r7]
    32d0:	add	sp, sp, #12
    32d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    32d8:	ldr	r3, [sp, #52]	; 0x34
    32dc:	mov	r0, ip
    32e0:	str	r3, [sp]
    32e4:	mov	r1, r6
    32e8:	mov	r3, #5
    32ec:	bl	0 <flatcc_json_parser_match_constant>
    32f0:	cmp	r6, r0
    32f4:	beq	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    32f8:	ldr	r1, [sp, #48]	; 0x30
    32fc:	mov	r2, #2
    3300:	mov	r3, #0
    3304:	mov	r6, r0
    3308:	strd	r2, [r1]
    330c:	str	r4, [r7]
    3310:	b	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    3314:	mov	r0, #0
    3318:	mov	r1, #0
    331c:	b	31e4 <MyGame_Example_Color_parse_json_enum+0x9c>
    3320:	mov	r8, #0
    3324:	mov	r9, #0
    3328:	b	3184 <MyGame_Example_Color_parse_json_enum+0x3c>
    332c:	mov	r8, #0
    3330:	mov	r9, #0
    3334:	b	3170 <MyGame_Example_Color_parse_json_enum+0x28>
    3338:	mov	r8, #0
    333c:	mov	r9, #0
    3340:	b	31d0 <MyGame_Example_Color_parse_json_enum+0x88>
    3344:	mov	r8, #0
    3348:	mov	r9, #0
    334c:	b	31bc <MyGame_Example_Color_parse_json_enum+0x74>
    3350:	mov	r8, #0
    3354:	mov	r9, #0
    3358:	b	31ac <MyGame_Example_Color_parse_json_enum+0x64>
    335c:	mov	r4, #0
    3360:	mov	r5, #0
    3364:	b	3198 <MyGame_Example_Color_parse_json_enum+0x50>
    3368:	ldr	r3, [sp, #52]	; 0x34
    336c:	mov	r0, ip
    3370:	str	r3, [sp]
    3374:	mov	r1, r6
    3378:	mov	r3, #3
    337c:	bl	0 <flatcc_json_parser_match_constant>
    3380:	cmp	r6, r0
    3384:	beq	3240 <MyGame_Example_Color_parse_json_enum+0xf8>
    3388:	mov	r2, #1
    338c:	b	32b8 <MyGame_Example_Color_parse_json_enum+0x170>
    3390:	.word	0x6dffffff
    3394:	.word	0x47726565
    3398:	.word	0x00000000
    339c:	.word	0x52656400
    33a0:	.word	0x6e000000
    33a4:	.word	0x47726565
    33a8:	.word	0x00000000
    33ac:	.word	0x426c7565

000033b0 <MyGame_Example_hex_enum_parse_json_enum>:
    33b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    33b4:	mov	r6, r1
    33b8:	sub	r1, r2, r1
    33bc:	cmp	r1, #8
    33c0:	sub	sp, sp, #12
    33c4:	mov	ip, r0
    33c8:	mov	r7, r3
    33cc:	bls	34bc <MyGame_Example_hex_enum_parse_json_enum+0x10c>
    33d0:	ldrb	r8, [r6, #7]
    33d4:	mov	r9, #0
    33d8:	ldrb	r0, [r6, #6]
    33dc:	lsr	r5, r0, #24
    33e0:	lsl	r4, r0, #8
    33e4:	orr	r8, r8, r4
    33e8:	orr	r9, r9, r5
    33ec:	ldrb	r0, [r6, #5]
    33f0:	lsr	r5, r0, #16
    33f4:	lsl	r4, r0, #16
    33f8:	orr	r4, r4, r8
    33fc:	orr	r5, r5, r9
    3400:	ldrb	r0, [r6, #4]
    3404:	lsr	r9, r0, #8
    3408:	lsl	r8, r0, #24
    340c:	orr	r8, r8, r4
    3410:	orr	r9, r9, r5
    3414:	ldrb	r1, [r6, #3]
    3418:	mov	r0, #0
    341c:	orr	r8, r8, r0
    3420:	orr	r9, r9, r1
    3424:	ldrb	r4, [r6, #2]
    3428:	mov	r0, #0
    342c:	orr	r8, r8, r0
    3430:	lsl	r1, r4, #8
    3434:	orr	r9, r9, r1
    3438:	ldrb	r4, [r6, #1]
    343c:	mov	r0, #0
    3440:	orr	r0, r0, r8
    3444:	lsl	r1, r4, #16
    3448:	orr	r1, r1, r9
    344c:	ldrb	r8, [r6]
    3450:	mov	r4, #0
    3454:	orr	r0, r0, r4
    3458:	lsl	r5, r8, #24
    345c:	add	r9, pc, #428	; 0x1ac
    3460:	ldrd	r8, [r9]
    3464:	orr	r1, r1, r5
    3468:	cmp	r1, r9
    346c:	cmpeq	r0, r8
    3470:	bls	34ec <MyGame_Example_hex_enum_parse_json_enum+0x13c>
    3474:	add	fp, pc, #412	; 0x19c
    3478:	ldrd	sl, [fp]
    347c:	ldr	r8, [pc, #436]	; 3638 <MyGame_Example_hex_enum_parse_json_enum+0x288>
    3480:	mvn	r9, #0
    3484:	and	r9, r9, r1
    3488:	and	r8, r8, r0
    348c:	cmp	r9, fp
    3490:	cmpeq	r8, sl
    3494:	beq	35d0 <MyGame_Example_hex_enum_parse_json_enum+0x220>
    3498:	add	r9, pc, #384	; 0x180
    349c:	ldrd	r8, [r9]
    34a0:	mov	r0, #0
    34a4:	cmp	r1, r9
    34a8:	cmpeq	r0, r8
    34ac:	beq	3540 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    34b0:	mov	r0, r6
    34b4:	add	sp, sp, #12
    34b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    34bc:	sub	r1, r1, #1
    34c0:	cmp	r1, #7
    34c4:	ldrls	pc, [pc, r1, lsl #2]
    34c8:	b	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    34cc:	.word	0x0000357c
    34d0:	.word	0x000035a0
    34d4:	.word	0x000035ac
    34d8:	.word	0x000035b8
    34dc:	.word	0x000035c4
    34e0:	.word	0x00003588
    34e4:	.word	0x00003594
    34e8:	.word	0x000033d0
    34ec:	add	r9, pc, #308	; 0x134
    34f0:	ldrd	r8, [r9]
    34f4:	mov	r0, #0
    34f8:	cmp	r1, r9
    34fc:	cmpeq	r0, r8
    3500:	bne	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    3504:	ldr	r3, [sp, #52]	; 0x34
    3508:	mov	r0, ip
    350c:	str	r3, [sp]
    3510:	mov	r1, r6
    3514:	mov	r3, #4
    3518:	bl	0 <flatcc_json_parser_match_constant>
    351c:	cmp	r6, r0
    3520:	beq	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    3524:	ldr	r1, [sp, #48]	; 0x30
    3528:	mov	r2, #3
    352c:	mov	r3, #0
    3530:	mov	r6, r0
    3534:	strd	r2, [r1]
    3538:	str	r4, [r7]
    353c:	b	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    3540:	ldr	r3, [sp, #52]	; 0x34
    3544:	mov	r0, ip
    3548:	str	r3, [sp]
    354c:	mov	r1, r6
    3550:	mov	r3, #4
    3554:	bl	0 <flatcc_json_parser_match_constant>
    3558:	cmp	r6, r0
    355c:	beq	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    3560:	add	r3, pc, #200	; 0xc8
    3564:	ldrd	r2, [r3]
    3568:	ldr	r1, [sp, #48]	; 0x30
    356c:	mov	r6, r0
    3570:	strd	r2, [r1]
    3574:	str	r4, [r7]
    3578:	b	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    357c:	mov	r0, #0
    3580:	mov	r1, #0
    3584:	b	344c <MyGame_Example_hex_enum_parse_json_enum+0x9c>
    3588:	mov	r8, #0
    358c:	mov	r9, #0
    3590:	b	33ec <MyGame_Example_hex_enum_parse_json_enum+0x3c>
    3594:	mov	r8, #0
    3598:	mov	r9, #0
    359c:	b	33d8 <MyGame_Example_hex_enum_parse_json_enum+0x28>
    35a0:	mov	r8, #0
    35a4:	mov	r9, #0
    35a8:	b	3438 <MyGame_Example_hex_enum_parse_json_enum+0x88>
    35ac:	mov	r8, #0
    35b0:	mov	r9, #0
    35b4:	b	3424 <MyGame_Example_hex_enum_parse_json_enum+0x74>
    35b8:	mov	r8, #0
    35bc:	mov	r9, #0
    35c0:	b	3414 <MyGame_Example_hex_enum_parse_json_enum+0x64>
    35c4:	mov	r4, #0
    35c8:	mov	r5, #0
    35cc:	b	3400 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    35d0:	ldr	r3, [sp, #52]	; 0x34
    35d4:	mov	r0, ip
    35d8:	str	r3, [sp]
    35dc:	mov	r1, r6
    35e0:	mov	r3, #6
    35e4:	bl	0 <flatcc_json_parser_match_constant>
    35e8:	cmp	r6, r0
    35ec:	beq	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    35f0:	ldr	r2, [sp, #48]	; 0x30
    35f4:	mvn	r4, #1
    35f8:	mvn	r5, #0
    35fc:	mov	r3, #1
    3600:	strd	r4, [r2]
    3604:	mov	r6, r0
    3608:	str	r3, [r7]
    360c:	b	34b0 <MyGame_Example_hex_enum_parse_json_enum+0x100>
    3610:	.word	0xffffffff
    3614:	.word	0x68657831
    3618:	.word	0x65670000
    361c:	.word	0x6865786e
    3620:	.word	0x00000000
    3624:	.word	0x68657832
    3628:	.word	0x00000000
    362c:	.word	0x68657831
    3630:	.word	0x7eafbeaf
    3634:	.word	0x00000000
    3638:	.word	0xffff0000

0000363c <Fantasy_BookReader_parse_json_struct>:
    363c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3640:	sub	sp, sp, #148	; 0x94
    3644:	mov	r8, r0
    3648:	mov	r0, r3
    364c:	str	r3, [sp, #124]	; 0x7c
    3650:	mov	r4, r2
    3654:	mov	r3, #0
    3658:	mov	r2, #4
    365c:	str	r3, [r0]
    3660:	mov	r5, r1
    3664:	ldr	r0, [r8]
    3668:	mov	r1, r2
    366c:	bl	0 <flatcc_builder_start_struct>
    3670:	subs	r3, r0, #0
    3674:	str	r3, [sp, #116]	; 0x74
    3678:	beq	3e40 <Fantasy_BookReader_parse_json_struct+0x804>
    367c:	cmp	r5, r4
    3680:	beq	3690 <Fantasy_BookReader_parse_json_struct+0x54>
    3684:	ldrb	r3, [r5]
    3688:	cmp	r3, #123	; 0x7b
    368c:	beq	36f0 <Fantasy_BookReader_parse_json_struct+0xb4>
    3690:	mov	r1, r5
    3694:	mov	r3, #21
    3698:	mov	r2, r4
    369c:	mov	r0, r8
    36a0:	bl	0 <flatcc_json_parser_set_error>
    36a4:	mov	r1, r0
    36a8:	cmp	r4, r1
    36ac:	beq	36d0 <Fantasy_BookReader_parse_json_struct+0x94>
    36b0:	ldr	r0, [r8]
    36b4:	str	r1, [sp, #8]
    36b8:	bl	0 <flatcc_builder_end_struct>
    36bc:	ldr	r3, [sp, #124]	; 0x7c
    36c0:	ldr	r1, [sp, #8]
    36c4:	cmp	r0, #0
    36c8:	str	r0, [r3]
    36cc:	bne	36e4 <Fantasy_BookReader_parse_json_struct+0xa8>
    36d0:	mov	r2, r4
    36d4:	mov	r0, r8
    36d8:	mov	r3, #33	; 0x21
    36dc:	bl	0 <flatcc_json_parser_set_error>
    36e0:	mov	r1, r0
    36e4:	mov	r0, r1
    36e8:	add	sp, sp, #148	; 0x94
    36ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    36f0:	add	r3, r5, #1
    36f4:	sub	r2, r4, r3
    36f8:	cmp	r2, #1
    36fc:	ble	3710 <Fantasy_BookReader_parse_json_struct+0xd4>
    3700:	ldrb	r2, [r5, #1]
    3704:	cmp	r2, #32
    3708:	bhi	3724 <Fantasy_BookReader_parse_json_struct+0xe8>
    370c:	beq	3eb4 <Fantasy_BookReader_parse_json_struct+0x878>
    3710:	mov	r1, r3
    3714:	mov	r2, r4
    3718:	mov	r0, r8
    371c:	bl	0 <flatcc_json_parser_space_ext>
    3720:	mov	r3, r0
    3724:	cmp	r4, r3
    3728:	beq	3738 <Fantasy_BookReader_parse_json_struct+0xfc>
    372c:	ldrb	r2, [r3]
    3730:	cmp	r2, #125	; 0x7d
    3734:	beq	3ec8 <Fantasy_BookReader_parse_json_struct+0x88c>
    3738:	mov	r9, #0
    373c:	mov	r1, r3
    3740:	cmp	r4, r1
    3744:	beq	3a54 <Fantasy_BookReader_parse_json_struct+0x418>
    3748:	ldrb	r3, [r1]
    374c:	cmp	r3, #34	; 0x22
    3750:	moveq	r3, #0
    3754:	addeq	r1, r1, #1
    3758:	streq	r3, [r8, #12]
    375c:	beq	3770 <Fantasy_BookReader_parse_json_struct+0x134>
    3760:	cmp	r3, #46	; 0x2e
    3764:	movne	r3, #1
    3768:	strne	r3, [r8, #12]
    376c:	beq	3d50 <Fantasy_BookReader_parse_json_struct+0x714>
    3770:	sub	r3, r4, r1
    3774:	cmp	r3, #8
    3778:	bls	3a64 <Fantasy_BookReader_parse_json_struct+0x428>
    377c:	ldrb	r6, [r1, #7]
    3780:	mov	r7, #0
    3784:	ldrb	r2, [r1, #6]
    3788:	lsr	r0, r2, #24
    378c:	lsl	r3, r2, #8
    3790:	str	r0, [sp, #76]	; 0x4c
    3794:	str	r3, [sp, #72]	; 0x48
    3798:	ldrd	r2, [sp, #72]	; 0x48
    379c:	orr	r2, r2, r6
    37a0:	orr	r3, r3, r7
    37a4:	ldrb	r6, [r1, #5]
    37a8:	lsr	r0, r6, #16
    37ac:	str	r0, [sp, #52]	; 0x34
    37b0:	lsl	r0, r6, #16
    37b4:	str	r0, [sp, #48]	; 0x30
    37b8:	ldrd	r6, [sp, #48]	; 0x30
    37bc:	orr	r6, r6, r2
    37c0:	orr	r7, r7, r3
    37c4:	mov	r2, r6
    37c8:	mov	r3, r7
    37cc:	ldrb	r6, [r1, #4]
    37d0:	lsr	r0, r6, #8
    37d4:	str	r0, [sp, #28]
    37d8:	lsl	r0, r6, #24
    37dc:	str	r0, [sp, #24]
    37e0:	ldrd	r6, [sp, #24]
    37e4:	orr	r6, r6, r2
    37e8:	orr	r7, r7, r3
    37ec:	mov	r2, r6
    37f0:	mov	r3, r7
    37f4:	ldrb	r0, [r1, #3]
    37f8:	str	r0, [sp, #36]	; 0x24
    37fc:	mov	r0, #0
    3800:	str	r0, [sp, #32]
    3804:	ldrd	r6, [sp, #32]
    3808:	orr	r6, r6, r2
    380c:	orr	r7, r7, r3
    3810:	mov	r2, r6
    3814:	mov	r3, r7
    3818:	ldrb	r6, [r1, #2]
    381c:	lsl	r0, r6, #8
    3820:	str	r0, [sp, #20]
    3824:	mov	r0, #0
    3828:	str	r0, [sp, #16]
    382c:	ldrd	r6, [sp, #16]
    3830:	orr	r6, r6, r2
    3834:	orr	r7, r7, r3
    3838:	mov	r2, r6
    383c:	mov	r3, r7
    3840:	ldrb	r6, [r1, #1]
    3844:	lsl	r0, r6, #16
    3848:	str	r0, [sp, #12]
    384c:	mov	r0, #0
    3850:	str	r0, [sp, #8]
    3854:	ldrd	r6, [sp, #8]
    3858:	orr	r6, r6, r2
    385c:	orr	r7, r7, r3
    3860:	mov	r2, r6
    3864:	mov	r3, r7
    3868:	ldrb	r6, [r1]
    386c:	mov	sl, #0
    3870:	orr	r2, r2, sl
    3874:	lsl	fp, r6, #24
    3878:	add	r7, pc, #960	; 0x3c0
    387c:	ldrd	r6, [r7]
    3880:	orr	r3, r3, fp
    3884:	cmp	r3, r7
    3888:	cmpeq	r2, r6
    388c:	bne	3a54 <Fantasy_BookReader_parse_json_struct+0x418>
    3890:	add	r5, r1, #8
    3894:	sub	r0, r4, r5
    3898:	cmp	r0, #8
    389c:	bls	3ae8 <Fantasy_BookReader_parse_json_struct+0x4ac>
    38a0:	ldrb	r6, [r1, #15]
    38a4:	mov	r7, #0
    38a8:	ldrb	r2, [r1, #14]
    38ac:	lsr	ip, r2, #24
    38b0:	lsl	r3, r2, #8
    38b4:	str	ip, [sp, #108]	; 0x6c
    38b8:	str	r3, [sp, #104]	; 0x68
    38bc:	ldrd	r2, [sp, #104]	; 0x68
    38c0:	orr	r2, r2, r6
    38c4:	orr	r3, r3, r7
    38c8:	mov	r6, r2
    38cc:	mov	r7, r3
    38d0:	ldrb	r2, [r1, #13]
    38d4:	lsr	ip, r2, #16
    38d8:	lsl	r3, r2, #16
    38dc:	str	ip, [sp, #100]	; 0x64
    38e0:	str	r3, [sp, #96]	; 0x60
    38e4:	ldrd	r2, [sp, #96]	; 0x60
    38e8:	orr	r2, r2, r6
    38ec:	orr	r3, r3, r7
    38f0:	mov	r6, r2
    38f4:	mov	r7, r3
    38f8:	ldrb	r2, [r1, #12]
    38fc:	lsr	ip, r2, #8
    3900:	lsl	r3, r2, #24
    3904:	str	ip, [sp, #84]	; 0x54
    3908:	str	r3, [sp, #80]	; 0x50
    390c:	ldrd	r2, [sp, #80]	; 0x50
    3910:	orr	r2, r2, r6
    3914:	orr	r3, r3, r7
    3918:	mov	r6, r2
    391c:	mov	r7, r3
    3920:	ldrb	r3, [r1, #11]
    3924:	str	r3, [sp, #92]	; 0x5c
    3928:	mov	r3, #0
    392c:	str	r3, [sp, #88]	; 0x58
    3930:	ldrd	r2, [sp, #88]	; 0x58
    3934:	orr	r2, r2, r6
    3938:	orr	r3, r3, r7
    393c:	mov	r6, r2
    3940:	mov	r7, r3
    3944:	ldrb	r2, [r1, #10]
    3948:	lsl	r3, r2, #8
    394c:	str	r3, [sp, #68]	; 0x44
    3950:	mov	r3, #0
    3954:	str	r3, [sp, #64]	; 0x40
    3958:	ldrd	r2, [sp, #64]	; 0x40
    395c:	orr	r2, r2, r6
    3960:	orr	r3, r3, r7
    3964:	ldrb	r6, [r1, #9]
    3968:	lsl	ip, r6, #16
    396c:	str	ip, [sp, #60]	; 0x3c
    3970:	mov	ip, #0
    3974:	str	ip, [sp, #56]	; 0x38
    3978:	ldrd	r6, [sp, #56]	; 0x38
    397c:	orr	r6, r6, r2
    3980:	orr	r7, r7, r3
    3984:	mov	r2, r6
    3988:	mov	r3, r7
    398c:	ldrb	r6, [r1, #8]
    3990:	lsl	ip, r6, #24
    3994:	str	ip, [sp, #44]	; 0x2c
    3998:	mov	ip, #0
    399c:	str	ip, [sp, #40]	; 0x28
    39a0:	ldrd	r6, [sp, #40]	; 0x28
    39a4:	orr	r7, r7, r3
    39a8:	mov	r3, r7
    39ac:	ldr	r7, [pc, #660]	; 3c48 <Fantasy_BookReader_parse_json_struct+0x60c>
    39b0:	orr	r6, r6, r2
    39b4:	and	r3, r3, r7
    39b8:	ldr	r7, [pc, #652]	; 3c4c <Fantasy_BookReader_parse_json_struct+0x610>
    39bc:	mov	r2, r6
    39c0:	mov	r6, #0
    39c4:	and	r2, r2, r6
    39c8:	cmp	r3, r7
    39cc:	mov	r6, #0
    39d0:	cmpeq	r2, r6
    39d4:	bne	39e0 <Fantasy_BookReader_parse_json_struct+0x3a4>
    39d8:	cmp	r0, #2
    39dc:	bgt	3c54 <Fantasy_BookReader_parse_json_struct+0x618>
    39e0:	mov	r1, r5
    39e4:	mov	r2, r4
    39e8:	mov	r0, r8
    39ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    39f0:	sub	r3, r4, r0
    39f4:	cmp	r3, #1
    39f8:	ble	3a0c <Fantasy_BookReader_parse_json_struct+0x3d0>
    39fc:	ldrb	r3, [r0]
    3a00:	cmp	r3, #32
    3a04:	bhi	3a1c <Fantasy_BookReader_parse_json_struct+0x3e0>
    3a08:	beq	3ba0 <Fantasy_BookReader_parse_json_struct+0x564>
    3a0c:	mov	r1, r0
    3a10:	mov	r2, r4
    3a14:	mov	r0, r8
    3a18:	bl	0 <flatcc_json_parser_space_ext>
    3a1c:	cmp	r4, r0
    3a20:	beq	3bb8 <Fantasy_BookReader_parse_json_struct+0x57c>
    3a24:	ldrb	r3, [r0]
    3a28:	cmp	r3, #44	; 0x2c
    3a2c:	beq	3bc0 <Fantasy_BookReader_parse_json_struct+0x584>
    3a30:	cmp	r3, #125	; 0x7d
    3a34:	beq	3b6c <Fantasy_BookReader_parse_json_struct+0x530>
    3a38:	mov	r1, r0
    3a3c:	mov	r3, #10
    3a40:	mov	r2, r4
    3a44:	mov	r0, r8
    3a48:	bl	0 <flatcc_json_parser_set_error>
    3a4c:	mov	r1, r0
    3a50:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3a54:	mov	r2, r4
    3a58:	mov	r0, r8
    3a5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3a60:	b	39f0 <Fantasy_BookReader_parse_json_struct+0x3b4>
    3a64:	sub	r3, r3, #1
    3a68:	cmp	r3, #7
    3a6c:	ldrls	pc, [pc, r3, lsl #2]
    3a70:	b	3a54 <Fantasy_BookReader_parse_json_struct+0x418>
    3a74:	.word	0x00003adc
    3a78:	.word	0x00003ad0
    3a7c:	.word	0x00003ac4
    3a80:	.word	0x00003ab8
    3a84:	.word	0x00003aac
    3a88:	.word	0x00003aa0
    3a8c:	.word	0x00003a94
    3a90:	.word	0x0000377c
    3a94:	mov	r6, r9
    3a98:	mov	r7, #0
    3a9c:	b	3784 <Fantasy_BookReader_parse_json_struct+0x148>
    3aa0:	mov	r2, r9
    3aa4:	mov	r3, #0
    3aa8:	b	37a4 <Fantasy_BookReader_parse_json_struct+0x168>
    3aac:	mov	r2, r9
    3ab0:	mov	r3, #0
    3ab4:	b	37cc <Fantasy_BookReader_parse_json_struct+0x190>
    3ab8:	mov	r2, r9
    3abc:	mov	r3, #0
    3ac0:	b	37f4 <Fantasy_BookReader_parse_json_struct+0x1b8>
    3ac4:	mov	r2, r9
    3ac8:	mov	r3, #0
    3acc:	b	3818 <Fantasy_BookReader_parse_json_struct+0x1dc>
    3ad0:	mov	r2, r9
    3ad4:	mov	r3, #0
    3ad8:	b	3840 <Fantasy_BookReader_parse_json_struct+0x204>
    3adc:	mov	r2, r9
    3ae0:	mov	r3, #0
    3ae4:	b	3868 <Fantasy_BookReader_parse_json_struct+0x22c>
    3ae8:	sub	r3, r0, #1
    3aec:	cmp	r3, #7
    3af0:	ldrls	pc, [pc, r3, lsl #2]
    3af4:	b	39e0 <Fantasy_BookReader_parse_json_struct+0x3a4>
    3af8:	.word	0x00003b60
    3afc:	.word	0x00003b54
    3b00:	.word	0x00003b48
    3b04:	.word	0x00003b3c
    3b08:	.word	0x00003b30
    3b0c:	.word	0x00003b24
    3b10:	.word	0x00003b18
    3b14:	.word	0x000038a0
    3b18:	mov	r6, r9
    3b1c:	mov	r7, #0
    3b20:	b	38a8 <Fantasy_BookReader_parse_json_struct+0x26c>
    3b24:	mov	r6, r9
    3b28:	mov	r7, #0
    3b2c:	b	38d0 <Fantasy_BookReader_parse_json_struct+0x294>
    3b30:	mov	r6, r9
    3b34:	mov	r7, #0
    3b38:	b	38f8 <Fantasy_BookReader_parse_json_struct+0x2bc>
    3b3c:	mov	r6, r9
    3b40:	mov	r7, #0
    3b44:	b	3920 <Fantasy_BookReader_parse_json_struct+0x2e4>
    3b48:	mov	r6, r9
    3b4c:	mov	r7, #0
    3b50:	b	3944 <Fantasy_BookReader_parse_json_struct+0x308>
    3b54:	mov	r2, r9
    3b58:	mov	r3, #0
    3b5c:	b	3964 <Fantasy_BookReader_parse_json_struct+0x328>
    3b60:	mov	r2, r9
    3b64:	mov	r3, #0
    3b68:	b	398c <Fantasy_BookReader_parse_json_struct+0x350>
    3b6c:	add	r1, r0, #1
    3b70:	sub	r3, r4, r1
    3b74:	cmp	r3, #1
    3b78:	ble	3b8c <Fantasy_BookReader_parse_json_struct+0x550>
    3b7c:	ldrb	r3, [r0, #1]
    3b80:	cmp	r3, #32
    3b84:	bhi	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3b88:	beq	3db8 <Fantasy_BookReader_parse_json_struct+0x77c>
    3b8c:	mov	r2, r4
    3b90:	mov	r0, r8
    3b94:	bl	0 <flatcc_json_parser_space_ext>
    3b98:	mov	r1, r0
    3b9c:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3ba0:	ldrb	r3, [r0, #1]
    3ba4:	cmp	r3, #32
    3ba8:	addhi	r0, r0, #1
    3bac:	bls	3a0c <Fantasy_BookReader_parse_json_struct+0x3d0>
    3bb0:	cmp	r4, r0
    3bb4:	bne	3a24 <Fantasy_BookReader_parse_json_struct+0x3e8>
    3bb8:	mov	r1, r4
    3bbc:	b	36d0 <Fantasy_BookReader_parse_json_struct+0x94>
    3bc0:	add	r1, r0, #1
    3bc4:	sub	r3, r4, r1
    3bc8:	cmp	r3, #1
    3bcc:	ble	3be0 <Fantasy_BookReader_parse_json_struct+0x5a4>
    3bd0:	ldrb	r3, [r0, #1]
    3bd4:	cmp	r3, #32
    3bd8:	bhi	3bf0 <Fantasy_BookReader_parse_json_struct+0x5b4>
    3bdc:	beq	3dcc <Fantasy_BookReader_parse_json_struct+0x790>
    3be0:	mov	r2, r4
    3be4:	mov	r0, r8
    3be8:	bl	0 <flatcc_json_parser_space_ext>
    3bec:	mov	r1, r0
    3bf0:	cmp	r4, r1
    3bf4:	beq	3e48 <Fantasy_BookReader_parse_json_struct+0x80c>
    3bf8:	ldrb	r3, [r1]
    3bfc:	cmp	r3, #125	; 0x7d
    3c00:	bne	3740 <Fantasy_BookReader_parse_json_struct+0x104>
    3c04:	mov	r3, r1
    3c08:	add	r1, r1, #1
    3c0c:	sub	r2, r4, r1
    3c10:	cmp	r2, #1
    3c14:	ble	3b8c <Fantasy_BookReader_parse_json_struct+0x550>
    3c18:	ldrb	r2, [r3, #1]
    3c1c:	cmp	r2, #32
    3c20:	bhi	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3c24:	bne	3b8c <Fantasy_BookReader_parse_json_struct+0x550>
    3c28:	ldrb	r2, [r3, #2]
    3c2c:	cmp	r2, #32
    3c30:	addhi	r1, r3, #2
    3c34:	bls	3b8c <Fantasy_BookReader_parse_json_struct+0x550>
    3c38:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3c3c:	nop			; (mov r0, r0)
    3c40:	.word	0x735f7265
    3c44:	.word	0x626f6f6b
    3c48:	.word	0xffff0000
    3c4c:	.word	0x61640000
    3c50:	.word	0x00000018
    3c54:	ldr	r3, [r8, #12]
    3c58:	cmp	r3, ip
    3c5c:	ldrb	r3, [r1, #10]
    3c60:	beq	3da8 <Fantasy_BookReader_parse_json_struct+0x76c>
    3c64:	cmp	r3, #58	; 0x3a
    3c68:	cmpne	r3, #32
    3c6c:	movls	r3, #0
    3c70:	movhi	r3, #1
    3c74:	addls	r1, r1, #10
    3c78:	strls	r3, [r8, #12]
    3c7c:	bhi	39e0 <Fantasy_BookReader_parse_json_struct+0x3a4>
    3c80:	sub	r3, r4, r1
    3c84:	cmp	r3, #1
    3c88:	ble	3c9c <Fantasy_BookReader_parse_json_struct+0x660>
    3c8c:	ldrb	r3, [r1]
    3c90:	cmp	r3, #32
    3c94:	bhi	3cac <Fantasy_BookReader_parse_json_struct+0x670>
    3c98:	beq	3e64 <Fantasy_BookReader_parse_json_struct+0x828>
    3c9c:	mov	r2, r4
    3ca0:	mov	r0, r8
    3ca4:	bl	0 <flatcc_json_parser_space_ext>
    3ca8:	mov	r1, r0
    3cac:	cmp	r4, r1
    3cb0:	beq	3cc0 <Fantasy_BookReader_parse_json_struct+0x684>
    3cb4:	ldrb	r3, [r1]
    3cb8:	cmp	r3, #58	; 0x3a
    3cbc:	beq	3e78 <Fantasy_BookReader_parse_json_struct+0x83c>
    3cc0:	mov	r3, #4
    3cc4:	mov	r2, r4
    3cc8:	mov	r0, r8
    3ccc:	bl	0 <flatcc_json_parser_set_error>
    3cd0:	str	r0, [sp, #120]	; 0x78
    3cd4:	ldr	r3, [sp, #120]	; 0x78
    3cd8:	cmp	r5, r3
    3cdc:	beq	39e0 <Fantasy_BookReader_parse_json_struct+0x3a4>
    3ce0:	mov	r5, r3
    3ce4:	cmp	r4, r3
    3ce8:	mov	r3, #0
    3cec:	str	r3, [sp, #128]	; 0x80
    3cf0:	str	r9, [sp, #136]	; 0x88
    3cf4:	str	r3, [sp, #140]	; 0x8c
    3cf8:	str	r3, [sp, #132]	; 0x84
    3cfc:	beq	3df8 <Fantasy_BookReader_parse_json_struct+0x7bc>
    3d00:	add	r3, sp, #136	; 0x88
    3d04:	str	r3, [sp]
    3d08:	mov	r2, r4
    3d0c:	add	r3, sp, #132	; 0x84
    3d10:	mov	r1, r5
    3d14:	mov	r0, r8
    3d18:	bl	0 <flatcc_json_parser_integer>
    3d1c:	cmp	r5, r0
    3d20:	beq	3df8 <Fantasy_BookReader_parse_json_struct+0x7bc>
    3d24:	ldr	r1, [sp, #132]	; 0x84
    3d28:	ldrd	r2, [sp, #136]	; 0x88
    3d2c:	cmp	r1, #0
    3d30:	beq	3d68 <Fantasy_BookReader_parse_json_struct+0x72c>
    3d34:	cmp	r3, #0
    3d38:	cmpeq	r2, #-2147483648	; 0x80000000
    3d3c:	rsbls	r3, r2, #0
    3d40:	bhi	3de0 <Fantasy_BookReader_parse_json_struct+0x7a4>
    3d44:	ldr	r2, [sp, #116]	; 0x74
    3d48:	str	r3, [r2]
    3d4c:	b	39f0 <Fantasy_BookReader_parse_json_struct+0x3b4>
    3d50:	mov	r3, #5
    3d54:	mov	r2, r4
    3d58:	mov	r0, r8
    3d5c:	bl	0 <flatcc_json_parser_set_error>
    3d60:	mov	r1, r0
    3d64:	b	3770 <Fantasy_BookReader_parse_json_struct+0x134>
    3d68:	mov	r7, #0
    3d6c:	cmp	r3, r7
    3d70:	mvn	r6, #-2147483648	; 0x80000000
    3d74:	cmpeq	r2, r6
    3d78:	movls	r3, r2
    3d7c:	bls	3d44 <Fantasy_BookReader_parse_json_struct+0x708>
    3d80:	mov	r1, r0
    3d84:	mov	r3, #7
    3d88:	mov	r2, r4
    3d8c:	mov	r0, r8
    3d90:	bl	0 <flatcc_json_parser_set_error>
    3d94:	ldr	r3, [sp, #120]	; 0x78
    3d98:	cmp	r3, r0
    3d9c:	beq	3df8 <Fantasy_BookReader_parse_json_struct+0x7bc>
    3da0:	ldr	r3, [sp, #128]	; 0x80
    3da4:	b	3d44 <Fantasy_BookReader_parse_json_struct+0x708>
    3da8:	cmp	r3, #34	; 0x22
    3dac:	bne	39e0 <Fantasy_BookReader_parse_json_struct+0x3a4>
    3db0:	add	r1, r1, #11
    3db4:	b	3c80 <Fantasy_BookReader_parse_json_struct+0x644>
    3db8:	ldrb	r3, [r0, #2]
    3dbc:	cmp	r3, #32
    3dc0:	addhi	r1, r0, #2
    3dc4:	bls	3b8c <Fantasy_BookReader_parse_json_struct+0x550>
    3dc8:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3dcc:	ldrb	r3, [r0, #2]
    3dd0:	cmp	r3, #32
    3dd4:	addhi	r1, r0, #2
    3dd8:	bls	3be0 <Fantasy_BookReader_parse_json_struct+0x5a4>
    3ddc:	b	3bf0 <Fantasy_BookReader_parse_json_struct+0x5b4>
    3de0:	mov	r1, r0
    3de4:	mov	r3, #8
    3de8:	mov	r2, r4
    3dec:	mov	r0, r8
    3df0:	bl	0 <flatcc_json_parser_set_error>
    3df4:	b	3d94 <Fantasy_BookReader_parse_json_struct+0x758>
    3df8:	ldr	r5, [sp, #120]	; 0x78
    3dfc:	add	r3, sp, #128	; 0x80
    3e00:	str	r3, [sp]
    3e04:	mov	r2, r4
    3e08:	ldr	r3, [pc, #-448]	; 3c50 <Fantasy_BookReader_parse_json_struct+0x614>
    3e0c:	mov	r1, r5
    3e10:	mov	r0, r8
    3e14:	bl	fec <flatcc_json_parser_symbolic_int32>
    3e18:	cmp	r4, r0
    3e1c:	cmpne	r0, r5
    3e20:	bne	3da0 <Fantasy_BookReader_parse_json_struct+0x764>
    3e24:	mov	r1, r0
    3e28:	mov	r3, #33	; 0x21
    3e2c:	mov	r2, r4
    3e30:	mov	r0, r8
    3e34:	bl	0 <flatcc_json_parser_set_error>
    3e38:	mov	r1, r0
    3e3c:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3e40:	mov	r1, r5
    3e44:	b	36d0 <Fantasy_BookReader_parse_json_struct+0x94>
    3e48:	mov	r1, r4
    3e4c:	mov	r3, #10
    3e50:	mov	r2, r4
    3e54:	mov	r0, r8
    3e58:	bl	0 <flatcc_json_parser_set_error>
    3e5c:	mov	r1, r0
    3e60:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3e64:	ldrb	r3, [r1, #1]
    3e68:	cmp	r3, #32
    3e6c:	addhi	r1, r1, #1
    3e70:	bls	3c9c <Fantasy_BookReader_parse_json_struct+0x660>
    3e74:	b	3cac <Fantasy_BookReader_parse_json_struct+0x670>
    3e78:	add	r3, r1, #1
    3e7c:	str	r3, [sp, #120]	; 0x78
    3e80:	sub	r3, r4, r3
    3e84:	cmp	r3, #1
    3e88:	ble	3e9c <Fantasy_BookReader_parse_json_struct+0x860>
    3e8c:	ldrb	r3, [r1, #1]
    3e90:	cmp	r3, #32
    3e94:	bhi	3cd4 <Fantasy_BookReader_parse_json_struct+0x698>
    3e98:	beq	3ee0 <Fantasy_BookReader_parse_json_struct+0x8a4>
    3e9c:	ldr	r1, [sp, #120]	; 0x78
    3ea0:	mov	r2, r4
    3ea4:	mov	r0, r8
    3ea8:	bl	0 <flatcc_json_parser_space_ext>
    3eac:	str	r0, [sp, #120]	; 0x78
    3eb0:	b	3cd4 <Fantasy_BookReader_parse_json_struct+0x698>
    3eb4:	ldrb	r2, [r5, #2]
    3eb8:	cmp	r2, #32
    3ebc:	addhi	r3, r5, #2
    3ec0:	bls	3710 <Fantasy_BookReader_parse_json_struct+0xd4>
    3ec4:	b	3724 <Fantasy_BookReader_parse_json_struct+0xe8>
    3ec8:	add	r1, r3, #1
    3ecc:	mov	r2, r4
    3ed0:	mov	r0, r8
    3ed4:	bl	47c <flatcc_json_parser_space>
    3ed8:	mov	r1, r0
    3edc:	b	36a8 <Fantasy_BookReader_parse_json_struct+0x6c>
    3ee0:	ldrb	r3, [r1, #2]
    3ee4:	cmp	r3, #32
    3ee8:	addhi	r3, r1, #2
    3eec:	strhi	r3, [sp, #120]	; 0x78
    3ef0:	bls	3e9c <Fantasy_BookReader_parse_json_struct+0x860>
    3ef4:	b	3cd4 <Fantasy_BookReader_parse_json_struct+0x698>

00003ef8 <MyGame_Example_int_enum_parse_json_enum>:
    3ef8:	push	{r4, r5, r6, r7, r8, r9, lr}
    3efc:	mov	r6, r1
    3f00:	sub	r1, r2, r1
    3f04:	cmp	r1, #8
    3f08:	sub	sp, sp, #12
    3f0c:	mov	ip, r0
    3f10:	mov	r7, r3
    3f14:	bls	3ff4 <MyGame_Example_int_enum_parse_json_enum+0xfc>
    3f18:	ldrb	r8, [r6, #7]
    3f1c:	mov	r9, #0
    3f20:	ldrb	r0, [r6, #6]
    3f24:	lsr	r5, r0, #24
    3f28:	lsl	r4, r0, #8
    3f2c:	orr	r8, r8, r4
    3f30:	orr	r9, r9, r5
    3f34:	ldrb	r0, [r6, #5]
    3f38:	lsr	r5, r0, #16
    3f3c:	lsl	r4, r0, #16
    3f40:	orr	r4, r4, r8
    3f44:	orr	r5, r5, r9
    3f48:	ldrb	r0, [r6, #4]
    3f4c:	lsr	r9, r0, #8
    3f50:	lsl	r8, r0, #24
    3f54:	orr	r8, r8, r4
    3f58:	orr	r9, r9, r5
    3f5c:	ldrb	r1, [r6, #3]
    3f60:	mov	r0, #0
    3f64:	orr	r8, r8, r0
    3f68:	orr	r9, r9, r1
    3f6c:	ldrb	r4, [r6, #2]
    3f70:	mov	r0, #0
    3f74:	orr	r8, r8, r0
    3f78:	lsl	r1, r4, #8
    3f7c:	orr	r9, r9, r1
    3f80:	ldrb	r4, [r6, #1]
    3f84:	mov	r0, #0
    3f88:	orr	r0, r0, r8
    3f8c:	lsl	r1, r4, #16
    3f90:	orr	r1, r1, r9
    3f94:	ldrb	r8, [r6]
    3f98:	mov	r4, #0
    3f9c:	orr	r0, r0, r4
    3fa0:	lsl	r5, r8, #24
    3fa4:	add	r9, pc, #524	; 0x20c
    3fa8:	ldrd	r8, [r9]
    3fac:	orr	r1, r1, r5
    3fb0:	cmp	r1, r9
    3fb4:	cmpeq	r0, r8
    3fb8:	bls	4024 <MyGame_Example_int_enum_parse_json_enum+0x12c>
    3fbc:	add	r9, pc, #508	; 0x1fc
    3fc0:	ldrd	r8, [r9]
    3fc4:	cmp	r1, r9
    3fc8:	cmpeq	r0, r8
    3fcc:	bhi	4080 <MyGame_Example_int_enum_parse_json_enum+0x188>
    3fd0:	add	r9, pc, #496	; 0x1f0
    3fd4:	ldrd	r8, [r9]
    3fd8:	mov	r0, #0
    3fdc:	cmp	r1, r9
    3fe0:	cmpeq	r0, r8
    3fe4:	beq	4150 <MyGame_Example_int_enum_parse_json_enum+0x258>
    3fe8:	mov	r0, r6
    3fec:	add	sp, sp, #12
    3ff0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3ff4:	sub	r1, r1, #1
    3ff8:	cmp	r1, #7
    3ffc:	ldrls	pc, [pc, r1, lsl #2]
    4000:	b	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    4004:	.word	0x000040fc
    4008:	.word	0x00004108
    400c:	.word	0x00004114
    4010:	.word	0x00004120
    4014:	.word	0x0000412c
    4018:	.word	0x00004138
    401c:	.word	0x00004144
    4020:	.word	0x00003f18
    4024:	add	r9, pc, #420	; 0x1a4
    4028:	ldrd	r8, [r9]
    402c:	mov	r0, #0
    4030:	cmp	r1, r9
    4034:	cmpeq	r0, r8
    4038:	bne	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    403c:	ldr	r3, [sp, #44]	; 0x2c
    4040:	mov	r0, ip
    4044:	str	r3, [sp]
    4048:	mov	r1, r6
    404c:	mov	r3, #4
    4050:	bl	0 <flatcc_json_parser_match_constant>
    4054:	cmp	r6, r0
    4058:	movne	r2, #2
    405c:	beq	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    4060:	ldr	r1, [sp, #40]	; 0x28
    4064:	mov	r3, #0
    4068:	mov	r6, r0
    406c:	strd	r2, [r1]
    4070:	mov	r0, r6
    4074:	str	r4, [r7]
    4078:	add	sp, sp, #12
    407c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    4080:	add	r5, pc, #336	; 0x150
    4084:	ldrd	r4, [r5]
    4088:	bic	r8, r0, #255	; 0xff
    408c:	cmp	r1, r5
    4090:	cmpeq	r8, r4
    4094:	beq	4178 <MyGame_Example_int_enum_parse_json_enum+0x280>
    4098:	add	r9, pc, #320	; 0x140
    409c:	ldrd	r8, [r9]
    40a0:	ldr	r4, [pc, #320]	; 41e8 <MyGame_Example_int_enum_parse_json_enum+0x2f0>
    40a4:	mvn	r5, #0
    40a8:	and	r1, r1, r5
    40ac:	and	r0, r0, r4
    40b0:	cmp	r1, r9
    40b4:	cmpeq	r0, r8
    40b8:	bne	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    40bc:	ldr	r3, [sp, #44]	; 0x2c
    40c0:	mov	r0, ip
    40c4:	str	r3, [sp]
    40c8:	mov	r1, r6
    40cc:	mov	r3, #6
    40d0:	bl	0 <flatcc_json_parser_match_constant>
    40d4:	cmp	r6, r0
    40d8:	beq	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    40dc:	ldr	r2, [sp, #40]	; 0x28
    40e0:	mov	r6, r0
    40e4:	mvn	r1, #0
    40e8:	mvn	r0, #1
    40ec:	mov	r3, #1
    40f0:	strd	r0, [r2]
    40f4:	str	r3, [r7]
    40f8:	b	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    40fc:	mov	r0, #0
    4100:	mov	r1, #0
    4104:	b	3f94 <MyGame_Example_int_enum_parse_json_enum+0x9c>
    4108:	mov	r8, #0
    410c:	mov	r9, #0
    4110:	b	3f80 <MyGame_Example_int_enum_parse_json_enum+0x88>
    4114:	mov	r8, #0
    4118:	mov	r9, #0
    411c:	b	3f6c <MyGame_Example_int_enum_parse_json_enum+0x74>
    4120:	mov	r8, #0
    4124:	mov	r9, #0
    4128:	b	3f5c <MyGame_Example_int_enum_parse_json_enum+0x64>
    412c:	mov	r4, #0
    4130:	mov	r5, #0
    4134:	b	3f48 <MyGame_Example_int_enum_parse_json_enum+0x50>
    4138:	mov	r8, #0
    413c:	mov	r9, #0
    4140:	b	3f34 <MyGame_Example_int_enum_parse_json_enum+0x3c>
    4144:	mov	r8, #0
    4148:	mov	r9, #0
    414c:	b	3f20 <MyGame_Example_int_enum_parse_json_enum+0x28>
    4150:	ldr	r3, [sp, #44]	; 0x2c
    4154:	mov	r0, ip
    4158:	str	r3, [sp]
    415c:	mov	r1, r6
    4160:	mov	r3, #4
    4164:	bl	0 <flatcc_json_parser_match_constant>
    4168:	cmp	r6, r0
    416c:	beq	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    4170:	mov	r2, #42	; 0x2a
    4174:	b	4060 <MyGame_Example_int_enum_parse_json_enum+0x168>
    4178:	ldr	r3, [sp, #44]	; 0x2c
    417c:	mov	r0, ip
    4180:	str	r3, [sp]
    4184:	mov	r1, r6
    4188:	mov	r3, #7
    418c:	bl	0 <flatcc_json_parser_match_constant>
    4190:	cmp	r6, r0
    4194:	beq	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    4198:	ldr	r2, [sp, #40]	; 0x28
    419c:	mvn	r4, #0
    41a0:	mvn	r5, #0
    41a4:	mov	r3, #1
    41a8:	strd	r4, [r2]
    41ac:	mov	r6, r0
    41b0:	str	r3, [r7]
    41b4:	b	3fe8 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    41b8:	.word	0xffffffff
    41bc:	.word	0x696e7431
    41c0:	.word	0x6566ffff
    41c4:	.word	0x696e746e
    41c8:	.word	0x00000000
    41cc:	.word	0x696e7432
    41d0:	.word	0x00000000
    41d4:	.word	0x696e7431
    41d8:	.word	0x65673200
    41dc:	.word	0x696e746e
    41e0:	.word	0x65670000
    41e4:	.word	0x696e746e
    41e8:	.word	0xffff0000

000041ec <MyGame_Example_Any_parse_json_enum>:
    41ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    41f0:	mov	r7, r2
    41f4:	sub	r2, r2, r1
    41f8:	cmp	r2, #8
    41fc:	sub	sp, sp, #12
    4200:	mov	r6, r1
    4204:	mov	sl, r0
    4208:	mov	fp, r3
    420c:	bls	4318 <MyGame_Example_Any_parse_json_enum+0x12c>
    4210:	ldrb	r0, [r6, #7]
    4214:	mov	r1, #0
    4218:	ldrb	r2, [r6, #6]
    421c:	lsr	r5, r2, #24
    4220:	lsl	r4, r2, #8
    4224:	orr	r0, r0, r4
    4228:	orr	r1, r1, r5
    422c:	ldrb	r2, [r6, #5]
    4230:	lsr	r5, r2, #16
    4234:	lsl	r4, r2, #16
    4238:	orr	r4, r4, r0
    423c:	orr	r5, r5, r1
    4240:	ldrb	r2, [r6, #4]
    4244:	lsr	r1, r2, #8
    4248:	lsl	r0, r2, #24
    424c:	orr	r4, r4, r0
    4250:	orr	r5, r5, r1
    4254:	ldrb	r1, [r6, #3]
    4258:	mov	r0, #0
    425c:	orr	r4, r4, r0
    4260:	orr	r5, r5, r1
    4264:	ldrb	r2, [r6, #2]
    4268:	mov	r0, #0
    426c:	orr	r0, r0, r4
    4270:	lsl	r1, r2, #8
    4274:	orr	r1, r1, r5
    4278:	ldrb	r2, [r6, #1]
    427c:	mov	r4, #0
    4280:	orr	r4, r4, r0
    4284:	lsl	r5, r2, #16
    4288:	orr	r5, r5, r1
    428c:	ldrb	r2, [r6]
    4290:	mov	r8, #0
    4294:	orr	r4, r4, r8
    4298:	lsl	r9, r2, #24
    429c:	add	r3, pc, #636	; 0x27c
    42a0:	ldrd	r2, [r3]
    42a4:	orr	r5, r5, r9
    42a8:	cmp	r5, r3
    42ac:	cmpeq	r4, r2
    42b0:	bls	4348 <MyGame_Example_Any_parse_json_enum+0x15c>
    42b4:	add	r3, pc, #620	; 0x26c
    42b8:	ldrd	r2, [r3]
    42bc:	cmp	r5, r3
    42c0:	cmpeq	r4, r2
    42c4:	beq	447c <MyGame_Example_Any_parse_json_enum+0x290>
    42c8:	add	r3, pc, #608	; 0x260
    42cc:	ldrd	r2, [r3]
    42d0:	bic	r0, r4, #255	; 0xff
    42d4:	cmp	r5, r3
    42d8:	cmpeq	r0, r2
    42dc:	beq	44b8 <MyGame_Example_Any_parse_json_enum+0x2cc>
    42e0:	add	r3, pc, #592	; 0x250
    42e4:	ldrd	r2, [r3]
    42e8:	mov	r0, #0
    42ec:	cmp	r5, r3
    42f0:	cmpeq	r0, r2
    42f4:	beq	44f4 <MyGame_Example_Any_parse_json_enum+0x308>
    42f8:	add	r3, pc, #576	; 0x240
    42fc:	ldrd	r2, [r3]
    4300:	cmp	r5, r3
    4304:	cmpeq	r4, r2
    4308:	beq	43a0 <MyGame_Example_Any_parse_json_enum+0x1b4>
    430c:	mov	r0, r6
    4310:	add	sp, sp, #12
    4314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4318:	sub	r2, r2, #1
    431c:	cmp	r2, #7
    4320:	ldrls	pc, [pc, r2, lsl #2]
    4324:	b	430c <MyGame_Example_Any_parse_json_enum+0x120>
    4328:	.word	0x00004428
    432c:	.word	0x00004434
    4330:	.word	0x00004440
    4334:	.word	0x0000444c
    4338:	.word	0x00004458
    433c:	.word	0x00004464
    4340:	.word	0x00004470
    4344:	.word	0x00004210
    4348:	add	r3, pc, #504	; 0x1f8
    434c:	ldrd	r2, [r3]
    4350:	bic	r5, r5, #255	; 0xff
    4354:	mov	r4, #0
    4358:	cmp	r5, r3
    435c:	cmpeq	r4, r2
    4360:	bne	430c <MyGame_Example_Any_parse_json_enum+0x120>
    4364:	ldr	r3, [sp, #52]	; 0x34
    4368:	mov	r2, r7
    436c:	str	r3, [sp]
    4370:	mov	r0, sl
    4374:	mov	r3, #3
    4378:	mov	r1, r6
    437c:	bl	0 <flatcc_json_parser_match_constant>
    4380:	cmp	r6, r0
    4384:	beq	4310 <MyGame_Example_Any_parse_json_enum+0x124>
    4388:	ldr	r1, [sp, #48]	; 0x30
    438c:	mov	r2, #4
    4390:	mov	r3, #0
    4394:	strd	r2, [r1]
    4398:	str	r8, [fp]
    439c:	b	4310 <MyGame_Example_Any_parse_json_enum+0x124>
    43a0:	mov	r1, r7
    43a4:	add	r0, r6, #8
    43a8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    43ac:	add	r3, pc, #412	; 0x19c
    43b0:	ldrd	r2, [r3]
    43b4:	cmp	r1, r3
    43b8:	cmpeq	r0, r2
    43bc:	bne	430c <MyGame_Example_Any_parse_json_enum+0x120>
    43c0:	add	r4, r6, #16
    43c4:	mov	r0, r4
    43c8:	mov	r1, r7
    43cc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    43d0:	add	r3, pc, #384	; 0x180
    43d4:	ldrd	r2, [r3]
    43d8:	bic	r0, r0, #255	; 0xff
    43dc:	cmp	r1, r3
    43e0:	cmpeq	r0, r2
    43e4:	bne	430c <MyGame_Example_Any_parse_json_enum+0x120>
    43e8:	ldr	r3, [sp, #52]	; 0x34
    43ec:	mov	r2, r7
    43f0:	str	r3, [sp]
    43f4:	mov	r0, sl
    43f8:	mov	r3, #7
    43fc:	mov	r1, r4
    4400:	bl	0 <flatcc_json_parser_match_constant>
    4404:	cmp	r4, r0
    4408:	beq	430c <MyGame_Example_Any_parse_json_enum+0x120>
    440c:	mov	r4, #2
    4410:	ldr	r2, [sp, #48]	; 0x30
    4414:	mov	r5, #0
    4418:	mov	r3, #0
    441c:	strd	r4, [r2]
    4420:	str	r3, [fp]
    4424:	b	4310 <MyGame_Example_Any_parse_json_enum+0x124>
    4428:	mov	r4, #0
    442c:	mov	r5, #0
    4430:	b	428c <MyGame_Example_Any_parse_json_enum+0xa0>
    4434:	mov	r0, #0
    4438:	mov	r1, #0
    443c:	b	4278 <MyGame_Example_Any_parse_json_enum+0x8c>
    4440:	mov	r4, #0
    4444:	mov	r5, #0
    4448:	b	4264 <MyGame_Example_Any_parse_json_enum+0x78>
    444c:	mov	r4, #0
    4450:	mov	r5, #0
    4454:	b	4254 <MyGame_Example_Any_parse_json_enum+0x68>
    4458:	mov	r4, #0
    445c:	mov	r5, #0
    4460:	b	4240 <MyGame_Example_Any_parse_json_enum+0x54>
    4464:	mov	r0, #0
    4468:	mov	r1, #0
    446c:	b	422c <MyGame_Example_Any_parse_json_enum+0x40>
    4470:	mov	r0, #0
    4474:	mov	r1, #0
    4478:	b	4218 <MyGame_Example_Any_parse_json_enum+0x2c>
    447c:	ldr	r3, [sp, #52]	; 0x34
    4480:	mov	r2, r7
    4484:	str	r3, [sp]
    4488:	mov	r0, sl
    448c:	mov	r3, #8
    4490:	mov	r1, r6
    4494:	bl	0 <flatcc_json_parser_match_constant>
    4498:	cmp	r6, r0
    449c:	beq	430c <MyGame_Example_Any_parse_json_enum+0x120>
    44a0:	ldr	r1, [sp, #48]	; 0x30
    44a4:	mov	r2, #3
    44a8:	mov	r3, #0
    44ac:	strd	r2, [r1]
    44b0:	str	r8, [fp]
    44b4:	b	4310 <MyGame_Example_Any_parse_json_enum+0x124>
    44b8:	ldr	r3, [sp, #52]	; 0x34
    44bc:	mov	r2, r7
    44c0:	str	r3, [sp]
    44c4:	mov	r1, r6
    44c8:	mov	r3, #7
    44cc:	mov	r0, sl
    44d0:	bl	0 <flatcc_json_parser_match_constant>
    44d4:	cmp	r6, r0
    44d8:	beq	42e0 <MyGame_Example_Any_parse_json_enum+0xf4>
    44dc:	ldr	r1, [sp, #48]	; 0x30
    44e0:	mov	r2, #1
    44e4:	mov	r3, #0
    44e8:	strd	r2, [r1]
    44ec:	str	r8, [fp]
    44f0:	b	4310 <MyGame_Example_Any_parse_json_enum+0x124>
    44f4:	ldr	r3, [sp, #52]	; 0x34
    44f8:	mov	r2, r7
    44fc:	str	r3, [sp]
    4500:	mov	r0, sl
    4504:	mov	r3, #4
    4508:	mov	r1, r6
    450c:	bl	0 <flatcc_json_parser_match_constant>
    4510:	cmp	r6, r0
    4514:	movne	r4, #0
    4518:	bne	4410 <MyGame_Example_Any_parse_json_enum+0x224>
    451c:	b	430c <MyGame_Example_Any_parse_json_enum+0x120>
    4520:	.word	0x746571ff
    4524:	.word	0x4d6f6e73
    4528:	.word	0x74657232
    452c:	.word	0x4d6f6e73
    4530:	.word	0x74657200
    4534:	.word	0x4d6f6e73
    4538:	.word	0x00000000
    453c:	.word	0x4e4f4e45
    4540:	.word	0x53696d70
    4544:	.word	0x54657374
    4548:	.word	0x00000000
    454c:	.word	0x416c7400
    4550:	.word	0x626c6557
    4554:	.word	0x6c655461
    4558:	.word	0x6e756d00
    455c:	.word	0x69746845

00004560 <monster_test_global_json_parser_enum>:
    4560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4564:	mov	r4, r1
    4568:	sub	sp, sp, #28
    456c:	mov	r1, r2
    4570:	mov	r8, r0
    4574:	mov	r0, r4
    4578:	mov	r5, r2
    457c:	mov	sl, r3
    4580:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4584:	add	r3, pc, #956	; 0x3bc
    4588:	ldrd	r2, [r3]
    458c:	ldr	r7, [sp, #64]	; 0x40
    4590:	ldr	fp, [sp, #68]	; 0x44
    4594:	cmp	r1, r3
    4598:	cmpeq	r0, r2
    459c:	bhi	45c0 <monster_test_global_json_parser_enum+0x60>
    45a0:	add	r3, pc, #936	; 0x3a8
    45a4:	ldrd	r2, [r3]
    45a8:	cmp	r1, r3
    45ac:	cmpeq	r0, r2
    45b0:	beq	46d4 <monster_test_global_json_parser_enum+0x174>
    45b4:	mov	r0, r4
    45b8:	add	sp, sp, #28
    45bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    45c0:	add	r3, pc, #912	; 0x390
    45c4:	ldrd	r2, [r3]
    45c8:	cmp	r1, r3
    45cc:	cmpeq	r0, r2
    45d0:	beq	4754 <monster_test_global_json_parser_enum+0x1f4>
    45d4:	add	r3, pc, #900	; 0x384
    45d8:	ldrd	r2, [r3]
    45dc:	cmp	r1, r3
    45e0:	cmpeq	r0, r2
    45e4:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    45e8:	mov	r1, r5
    45ec:	add	r0, r4, #8
    45f0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    45f4:	add	r3, pc, #876	; 0x36c
    45f8:	ldrd	r2, [r3]
    45fc:	cmp	r1, r3
    4600:	cmpeq	r0, r2
    4604:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4608:	mov	r1, r5
    460c:	add	r0, r4, #16
    4610:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4614:	add	r3, pc, #852	; 0x354
    4618:	ldrd	r2, [r3]
    461c:	cmp	r1, r3
    4620:	cmpeq	r0, r2
    4624:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4628:	mov	r1, r5
    462c:	add	r0, r4, #24
    4630:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4634:	add	r3, pc, #828	; 0x33c
    4638:	ldrd	r2, [r3]
    463c:	cmp	r1, r3
    4640:	cmpeq	r0, r2
    4644:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4648:	add	r6, r4, #32
    464c:	mov	r0, r6
    4650:	mov	r1, r5
    4654:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4658:	mov	r0, #0
    465c:	and	r1, r1, #-16777216	; 0xff000000
    4660:	cmp	r1, #1694498816	; 0x65000000
    4664:	cmpeq	r0, #0
    4668:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    466c:	sub	r6, r5, r6
    4670:	cmp	r6, #1
    4674:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4678:	ldrb	r3, [r4, #33]	; 0x21
    467c:	cmp	r3, #46	; 0x2e
    4680:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4684:	add	r9, r4, #34	; 0x22
    4688:	mov	r0, r9
    468c:	mov	r1, r5
    4690:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4694:	mov	r2, #0
    4698:	bic	r3, r1, #255	; 0xff
    469c:	strd	r0, [sp, #8]
    46a0:	add	r1, pc, #728	; 0x2d8
    46a4:	ldrd	r0, [r1]
    46a8:	cmp	r3, r1
    46ac:	cmpeq	r2, r0
    46b0:	beq	4ce4 <monster_test_global_json_parser_enum+0x784>
    46b4:	add	r3, pc, #716	; 0x2cc
    46b8:	ldrd	r2, [r3]
    46bc:	ldrd	r0, [sp, #8]
    46c0:	cmp	r1, r3
    46c4:	cmpeq	r0, r2
    46c8:	beq	4c74 <monster_test_global_json_parser_enum+0x714>
    46cc:	mov	r4, r9
    46d0:	b	45b4 <monster_test_global_json_parser_enum+0x54>
    46d4:	mov	r1, r5
    46d8:	add	r0, r4, #8
    46dc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    46e0:	add	r3, pc, #680	; 0x2a8
    46e4:	ldrd	r2, [r3]
    46e8:	cmp	r1, r3
    46ec:	cmpeq	r0, r2
    46f0:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    46f4:	add	r6, r4, #16
    46f8:	mov	r0, r6
    46fc:	mov	r1, r5
    4700:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4704:	mov	r0, #0
    4708:	and	r1, r1, #-16777216	; 0xff000000
    470c:	cmp	r1, #1912602624	; 0x72000000
    4710:	cmpeq	r0, #0
    4714:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4718:	sub	r6, r5, r6
    471c:	cmp	r6, #1
    4720:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4724:	ldrb	r3, [r4, #17]
    4728:	cmp	r3, #46	; 0x2e
    472c:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4730:	str	fp, [sp, #68]	; 0x44
    4734:	str	r7, [sp, #64]	; 0x40
    4738:	mov	r3, sl
    473c:	mov	r2, r5
    4740:	add	r1, r4, #18
    4744:	mov	r0, r8
    4748:	add	sp, sp, #28
    474c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4750:	b	180 <Fantasy_Character_parse_json_enum>
    4754:	mov	r1, r5
    4758:	add	r0, r4, #8
    475c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4760:	add	r3, pc, #560	; 0x230
    4764:	ldrd	r2, [r3]
    4768:	cmp	r1, r3
    476c:	cmpeq	r0, r2
    4770:	bhi	4820 <monster_test_global_json_parser_enum+0x2c0>
    4774:	add	r3, pc, #548	; 0x224
    4778:	ldrd	r2, [r3]
    477c:	cmp	r1, r3
    4780:	cmpeq	r0, r2
    4784:	bls	48c0 <monster_test_global_json_parser_enum+0x360>
    4788:	add	r3, pc, #536	; 0x218
    478c:	ldrd	r2, [r3]
    4790:	cmp	r1, r3
    4794:	cmpeq	r0, r2
    4798:	beq	4bd4 <monster_test_global_json_parser_enum+0x674>
    479c:	add	r3, pc, #524	; 0x20c
    47a0:	ldrd	r2, [r3]
    47a4:	cmp	r1, r3
    47a8:	cmpeq	r0, r2
    47ac:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    47b0:	add	r6, r4, #16
    47b4:	mov	r0, r6
    47b8:	mov	r1, r5
    47bc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    47c0:	ldr	r3, [pc, #536]	; 49e0 <monster_test_global_json_parser_enum+0x480>
    47c4:	mov	r2, #0
    47c8:	and	r3, r3, r1
    47cc:	ldr	r1, [pc, #528]	; 49e4 <monster_test_global_json_parser_enum+0x484>
    47d0:	and	r2, r2, r0
    47d4:	cmp	r3, r1
    47d8:	mov	r0, #0
    47dc:	cmpeq	r2, r0
    47e0:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    47e4:	sub	r6, r5, r6
    47e8:	cmp	r6, #2
    47ec:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    47f0:	ldrb	r3, [r4, #18]
    47f4:	cmp	r3, #46	; 0x2e
    47f8:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    47fc:	str	fp, [sp, #68]	; 0x44
    4800:	str	r7, [sp, #64]	; 0x40
    4804:	mov	r3, sl
    4808:	mov	r2, r5
    480c:	add	r1, r4, #19
    4810:	mov	r0, r8
    4814:	add	sp, sp, #28
    4818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    481c:	b	2ca4 <MyGame_Example_Foo_parse_json_enum>
    4820:	add	r3, pc, #400	; 0x190
    4824:	ldrd	r2, [r3]
    4828:	cmp	r1, r3
    482c:	cmpeq	r0, r2
    4830:	beq	49ec <monster_test_global_json_parser_enum+0x48c>
    4834:	add	r3, pc, #388	; 0x184
    4838:	ldrd	r2, [r3]
    483c:	cmp	r1, r3
    4840:	cmpeq	r0, r2
    4844:	bhi	4a50 <monster_test_global_json_parser_enum+0x4f0>
    4848:	add	r3, pc, #376	; 0x178
    484c:	ldrd	r2, [r3]
    4850:	cmp	r1, r3
    4854:	cmpeq	r0, r2
    4858:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    485c:	add	r6, r4, #16
    4860:	mov	r0, r6
    4864:	mov	r1, r5
    4868:	bl	0 <flatcc_json_parser_symbol_part_ext>
    486c:	add	r3, pc, #348	; 0x15c
    4870:	ldrd	r2, [r3]
    4874:	bic	r0, r0, #255	; 0xff
    4878:	cmp	r1, r3
    487c:	cmpeq	r0, r2
    4880:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4884:	sub	r6, r5, r6
    4888:	cmp	r6, #7
    488c:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4890:	ldrb	r3, [r4, #23]
    4894:	cmp	r3, #46	; 0x2e
    4898:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    489c:	str	fp, [sp, #68]	; 0x44
    48a0:	str	r7, [sp, #64]	; 0x40
    48a4:	mov	r3, sl
    48a8:	mov	r2, r5
    48ac:	add	r1, r4, #24
    48b0:	mov	r0, r8
    48b4:	add	sp, sp, #28
    48b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    48bc:	b	3ef8 <MyGame_Example_int_enum_parse_json_enum>
    48c0:	add	r3, pc, #272	; 0x110
    48c4:	ldrd	r2, [r3]
    48c8:	cmp	r1, r3
    48cc:	cmpeq	r0, r2
    48d0:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    48d4:	add	r6, r4, #16
    48d8:	mov	r0, r6
    48dc:	mov	r1, r5
    48e0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    48e4:	ldr	r3, [pc, #244]	; 49e0 <monster_test_global_json_parser_enum+0x480>
    48e8:	mov	r2, #0
    48ec:	and	r3, r3, r1
    48f0:	ldr	r1, [pc, #240]	; 49e8 <monster_test_global_json_parser_enum+0x488>
    48f4:	and	r2, r2, r0
    48f8:	cmp	r3, r1
    48fc:	mov	r0, #0
    4900:	cmpeq	r2, r0
    4904:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4908:	sub	r6, r5, r6
    490c:	cmp	r6, #2
    4910:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4914:	ldrb	r3, [r4, #18]
    4918:	cmp	r3, #46	; 0x2e
    491c:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4920:	str	fp, [sp, #68]	; 0x44
    4924:	str	r7, [sp, #64]	; 0x40
    4928:	mov	r3, sl
    492c:	mov	r2, r5
    4930:	add	r1, r4, #19
    4934:	mov	r0, r8
    4938:	add	sp, sp, #28
    493c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4940:	b	41ec <MyGame_Example_Any_parse_json_enum>
    4944:	nop			; (mov r0, r0)
    4948:	.word	0x6d652e44
    494c:	.word	0x4d794761
    4950:	.word	0x6173792e
    4954:	.word	0x46616e74
    4958:	.word	0x6d652e45
    495c:	.word	0x4d794761
    4960:	.word	0x6d652e4f
    4964:	.word	0x4d794761
    4968:	.word	0x4e616d65
    496c:	.word	0x74686572
    4970:	.word	0x652e4672
    4974:	.word	0x53706163
    4978:	.word	0x636c7564
    497c:	.word	0x6f6d496e
    4980:	.word	0x00000000
    4984:	.word	0x466f6f00
    4988:	.word	0x75646556
    498c:	.word	0x496e636c
    4990:	.word	0x61637465
    4994:	.word	0x43686172
    4998:	.word	0x6c652e67
    499c:	.word	0x78616d70
    49a0:	.word	0x6c652e42
    49a4:	.word	0x78616d70
    49a8:	.word	0x6c652e43
    49ac:	.word	0x78616d70
    49b0:	.word	0x6c652e46
    49b4:	.word	0x78616d70
    49b8:	.word	0x6c652e68
    49bc:	.word	0x78616d70
    49c0:	.word	0x6c652e6d
    49c4:	.word	0x78616d70
    49c8:	.word	0x6c652e69
    49cc:	.word	0x78616d70
    49d0:	.word	0x6e756d00
    49d4:	.word	0x6e745f65
    49d8:	.word	0x6c652e41
    49dc:	.word	0x78616d70
    49e0:	.word	0xffff0000
    49e4:	.word	0x6f6f0000
    49e8:	.word	0x6e790000
    49ec:	add	r6, r4, #16
    49f0:	mov	r0, r6
    49f4:	mov	r1, r5
    49f8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    49fc:	add	r3, pc, #940	; 0x3ac
    4a00:	ldrd	r2, [r3]
    4a04:	bic	r0, r0, #255	; 0xff
    4a08:	cmp	r1, r3
    4a0c:	cmpeq	r0, r2
    4a10:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4a14:	sub	r6, r5, r6
    4a18:	cmp	r6, #7
    4a1c:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4a20:	ldrb	r3, [r4, #23]
    4a24:	cmp	r3, #46	; 0x2e
    4a28:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4a2c:	str	fp, [sp, #68]	; 0x44
    4a30:	str	r7, [sp, #64]	; 0x40
    4a34:	mov	r3, sl
    4a38:	mov	r2, r5
    4a3c:	add	r1, r4, #24
    4a40:	mov	r0, r8
    4a44:	add	sp, sp, #28
    4a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4a4c:	b	33b0 <MyGame_Example_hex_enum_parse_json_enum>
    4a50:	add	r3, pc, #864	; 0x360
    4a54:	ldrd	r2, [r3]
    4a58:	cmp	r1, r3
    4a5c:	cmpeq	r0, r2
    4a60:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4a64:	add	r9, r4, #16
    4a68:	mov	r0, r9
    4a6c:	mov	r1, r5
    4a70:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4a74:	mov	r3, r1
    4a78:	bic	r2, r0, #255	; 0xff
    4a7c:	strd	r0, [sp, #8]
    4a80:	add	r1, pc, #824	; 0x338
    4a84:	ldrd	r0, [r1]
    4a88:	cmp	r3, r1
    4a8c:	cmpeq	r2, r0
    4a90:	beq	4c38 <monster_test_global_json_parser_enum+0x6d8>
    4a94:	add	r3, pc, #812	; 0x32c
    4a98:	ldrd	r2, [r3]
    4a9c:	ldrd	r0, [sp, #8]
    4aa0:	cmp	r1, r3
    4aa4:	cmpeq	r0, r2
    4aa8:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4aac:	add	r6, r4, #24
    4ab0:	mov	r0, r6
    4ab4:	mov	r1, r5
    4ab8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4abc:	add	r3, pc, #780	; 0x30c
    4ac0:	ldrd	r2, [r3]
    4ac4:	mov	r0, #0
    4ac8:	bic	r1, r1, #255	; 0xff
    4acc:	cmp	r1, r3
    4ad0:	cmpeq	r0, r2
    4ad4:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4ad8:	sub	r6, r5, r6
    4adc:	cmp	r6, #3
    4ae0:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4ae4:	ldrb	r3, [r4, #27]
    4ae8:	cmp	r3, #46	; 0x2e
    4aec:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4af0:	add	r6, r4, #28
    4af4:	sub	r3, r5, r6
    4af8:	cmp	r3, #8
    4afc:	bls	4d20 <monster_test_global_json_parser_enum+0x7c0>
    4b00:	ldrb	r2, [r4, #35]	; 0x23
    4b04:	mov	r3, #0
    4b08:	strd	r2, [sp, #8]
    4b0c:	ldrb	r0, [r4, #34]	; 0x22
    4b10:	lsr	r3, r0, #24
    4b14:	lsl	r2, r0, #8
    4b18:	ldrd	r0, [sp, #8]
    4b1c:	orr	r0, r0, r2
    4b20:	orr	r1, r1, r3
    4b24:	strd	r0, [sp, #8]
    4b28:	ldrb	r0, [r4, #33]	; 0x21
    4b2c:	lsr	r3, r0, #16
    4b30:	lsl	r2, r0, #16
    4b34:	ldrd	r0, [sp, #8]
    4b38:	orr	r0, r0, r2
    4b3c:	orr	r1, r1, r3
    4b40:	strd	r0, [sp, #8]
    4b44:	ldrb	r0, [r4, #32]
    4b48:	lsr	r3, r0, #8
    4b4c:	ldrd	r0, [sp, #8]
    4b50:	orr	r1, r1, r3
    4b54:	mov	r3, r1
    4b58:	ldrb	r1, [r4, #31]
    4b5c:	orr	r1, r1, r3
    4b60:	ldrb	r2, [r4, #30]
    4b64:	mov	r3, #0
    4b68:	strd	r2, [sp, #8]
    4b6c:	ldr	ip, [sp, #8]
    4b70:	lsl	r3, ip, #8
    4b74:	orr	r3, r3, r1
    4b78:	ldrb	r0, [r4, #29]
    4b7c:	mov	r1, #0
    4b80:	strd	r0, [sp, #8]
    4b84:	ldr	ip, [sp, #8]
    4b88:	lsl	r1, ip, #16
    4b8c:	orr	r3, r3, r1
    4b90:	ldrb	r0, [r4, #28]
    4b94:	mov	r1, #0
    4b98:	mov	r2, #0
    4b9c:	strd	r0, [sp, #16]
    4ba0:	ldr	r1, [sp, #16]
    4ba4:	lsl	r1, r1, #24
    4ba8:	str	r1, [sp, #12]
    4bac:	mov	r1, #0
    4bb0:	str	r1, [sp, #8]
    4bb4:	ldrd	r0, [sp, #8]
    4bb8:	orr	r1, r1, r3
    4bbc:	and	r3, r1, #-16777216	; 0xff000000
    4bc0:	cmp	r3, #2013265920	; 0x78000000
    4bc4:	cmpeq	r2, #0
    4bc8:	beq	4d50 <monster_test_global_json_parser_enum+0x7f0>
    4bcc:	mov	r4, r6
    4bd0:	b	45b4 <monster_test_global_json_parser_enum+0x54>
    4bd4:	add	r6, r4, #16
    4bd8:	mov	r0, r6
    4bdc:	mov	r1, r5
    4be0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4be4:	add	r3, pc, #492	; 0x1ec
    4be8:	ldrd	r2, [r3]
    4bec:	mov	r0, #0
    4bf0:	cmp	r1, r3
    4bf4:	cmpeq	r0, r2
    4bf8:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4bfc:	sub	r6, r5, r6
    4c00:	cmp	r6, #4
    4c04:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4c08:	ldrb	r3, [r4, #20]
    4c0c:	cmp	r3, #46	; 0x2e
    4c10:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4c14:	str	fp, [sp, #68]	; 0x44
    4c18:	str	r7, [sp, #64]	; 0x40
    4c1c:	mov	r3, sl
    4c20:	mov	r2, r5
    4c24:	add	r1, r4, #21
    4c28:	mov	r0, r8
    4c2c:	add	sp, sp, #28
    4c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c34:	b	3148 <MyGame_Example_Color_parse_json_enum>
    4c38:	sub	r9, r5, r9
    4c3c:	cmp	r9, #7
    4c40:	ble	45b4 <monster_test_global_json_parser_enum+0x54>
    4c44:	ldrb	r3, [r4, #23]
    4c48:	cmp	r3, #46	; 0x2e
    4c4c:	bne	45b4 <monster_test_global_json_parser_enum+0x54>
    4c50:	str	fp, [sp, #68]	; 0x44
    4c54:	str	r7, [sp, #64]	; 0x40
    4c58:	mov	r3, sl
    4c5c:	mov	r2, r5
    4c60:	add	r1, r4, #24
    4c64:	mov	r0, r8
    4c68:	add	sp, sp, #28
    4c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c70:	b	2ef0 <MyGame_Example_neg_enum_parse_json_enum>
    4c74:	add	r6, r4, #42	; 0x2a
    4c78:	mov	r0, r6
    4c7c:	mov	r1, r5
    4c80:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4c84:	ldr	r3, [pc, #340]	; 4de0 <monster_test_global_json_parser_enum+0x880>
    4c88:	mov	r2, #0
    4c8c:	and	r3, r3, r1
    4c90:	ldr	r1, [pc, #332]	; 4de4 <monster_test_global_json_parser_enum+0x884>
    4c94:	and	r2, r2, r0
    4c98:	cmp	r3, r1
    4c9c:	mov	r0, #0
    4ca0:	cmpeq	r2, r0
    4ca4:	bne	46cc <monster_test_global_json_parser_enum+0x16c>
    4ca8:	str	fp, [sp]
    4cac:	mov	r2, r5
    4cb0:	mov	r0, r8
    4cb4:	mov	r3, #2
    4cb8:	mov	r1, r6
    4cbc:	bl	0 <flatcc_json_parser_match_constant>
    4cc0:	cmp	r6, r0
    4cc4:	mov	r4, r0
    4cc8:	beq	46cc <monster_test_global_json_parser_enum+0x16c>
    4ccc:	mov	r0, #0
    4cd0:	mov	r1, #0
    4cd4:	mov	r3, #0
    4cd8:	strd	r0, [r7]
    4cdc:	str	r3, [sl]
    4ce0:	b	45b4 <monster_test_global_json_parser_enum+0x54>
    4ce4:	str	fp, [sp]
    4ce8:	mov	r2, r5
    4cec:	mov	r0, r8
    4cf0:	mov	r3, #3
    4cf4:	mov	r1, r9
    4cf8:	bl	0 <flatcc_json_parser_match_constant>
    4cfc:	cmp	r9, r0
    4d00:	mov	r4, r0
    4d04:	beq	45b4 <monster_test_global_json_parser_enum+0x54>
    4d08:	mov	r0, #17
    4d0c:	mov	r1, #0
    4d10:	mov	r3, #0
    4d14:	strd	r0, [r7]
    4d18:	str	r3, [sl]
    4d1c:	b	45b4 <monster_test_global_json_parser_enum+0x54>
    4d20:	sub	r3, r3, #1
    4d24:	cmp	r3, #7
    4d28:	ldrls	pc, [pc, r3, lsl #2]
    4d2c:	b	4bcc <monster_test_global_json_parser_enum+0x66c>
    4d30:	.word	0x00004e10
    4d34:	.word	0x00004e08
    4d38:	.word	0x00004e00
    4d3c:	.word	0x00004df8
    4d40:	.word	0x00004de8
    4d44:	.word	0x00004d9c
    4d48:	.word	0x00004d8c
    4d4c:	.word	0x00004b00
    4d50:	str	fp, [sp]
    4d54:	mov	r2, r5
    4d58:	mov	r0, r8
    4d5c:	mov	r3, #1
    4d60:	mov	r1, r6
    4d64:	bl	0 <flatcc_json_parser_match_constant>
    4d68:	cmp	r6, r0
    4d6c:	mov	r4, r0
    4d70:	beq	45b4 <monster_test_global_json_parser_enum+0x54>
    4d74:	mov	r3, #0
    4d78:	mov	r2, #0
    4d7c:	strd	r2, [r7]
    4d80:	ldr	r3, [sp, #8]
    4d84:	str	r3, [sl]
    4d88:	b	45b4 <monster_test_global_json_parser_enum+0x54>
    4d8c:	mov	r2, #0
    4d90:	mov	r3, #0
    4d94:	strd	r2, [sp, #8]
    4d98:	b	4b0c <monster_test_global_json_parser_enum+0x5ac>
    4d9c:	mov	r2, #0
    4da0:	mov	r3, #0
    4da4:	strd	r2, [sp, #8]
    4da8:	b	4b28 <monster_test_global_json_parser_enum+0x5c8>
    4dac:	nop			; (mov r0, r0)
    4db0:	.word	0x6e756d00
    4db4:	.word	0x65785f65
    4db8:	.word	0x6c652e6e
    4dbc:	.word	0x78616d70
    4dc0:	.word	0x6e756d00
    4dc4:	.word	0x65675f65
    4dc8:	.word	0x70747965
    4dcc:	.word	0x6f74656d
    4dd0:	.word	0x00000000
    4dd4:	.word	0x6e756d00
    4dd8:	.word	0x00000000
    4ddc:	.word	0x6f6c6f72
    4de0:	.word	0xffff0000
    4de4:	.word	0x616c0000
    4de8:	mov	r2, #0
    4dec:	mov	r3, #0
    4df0:	strd	r2, [sp, #8]
    4df4:	b	4b44 <monster_test_global_json_parser_enum+0x5e4>
    4df8:	mov	r3, #0
    4dfc:	b	4b58 <monster_test_global_json_parser_enum+0x5f8>
    4e00:	mov	r1, #0
    4e04:	b	4b60 <monster_test_global_json_parser_enum+0x600>
    4e08:	mov	r3, #0
    4e0c:	b	4b78 <monster_test_global_json_parser_enum+0x618>
    4e10:	mov	r3, #0
    4e14:	b	4b90 <monster_test_global_json_parser_enum+0x630>

00004e18 <monster_test_local_MyGame_Example_json_parser_enum>:
    4e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4e1c:	mov	r4, r1
    4e20:	sub	sp, sp, #12
    4e24:	mov	r1, r2
    4e28:	mov	r5, r0
    4e2c:	mov	r0, r4
    4e30:	mov	sl, r2
    4e34:	mov	fp, r3
    4e38:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4e3c:	add	r3, pc, #780	; 0x30c
    4e40:	ldrd	r2, [r3]
    4e44:	ldr	r8, [sp, #48]	; 0x30
    4e48:	ldr	r9, [sp, #52]	; 0x34
    4e4c:	cmp	r1, r3
    4e50:	cmpeq	r0, r2
    4e54:	bhi	4e94 <monster_test_local_MyGame_Example_json_parser_enum+0x7c>
    4e58:	add	r3, pc, #760	; 0x2f8
    4e5c:	ldrd	r2, [r3]
    4e60:	cmp	r1, r3
    4e64:	cmpeq	r0, r2
    4e68:	bhi	4fe0 <monster_test_local_MyGame_Example_json_parser_enum+0x1c8>
    4e6c:	add	r3, pc, #748	; 0x2ec
    4e70:	ldrd	r2, [r3]
    4e74:	bic	r1, r1, #255	; 0xff
    4e78:	mov	r0, #0
    4e7c:	cmp	r1, r3
    4e80:	cmpeq	r0, r2
    4e84:	beq	50a0 <monster_test_local_MyGame_Example_json_parser_enum+0x288>
    4e88:	mov	r0, r4
    4e8c:	add	sp, sp, #12
    4e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4e94:	add	r3, pc, #716	; 0x2cc
    4e98:	ldrd	r2, [r3]
    4e9c:	cmp	r1, r3
    4ea0:	cmpeq	r0, r2
    4ea4:	bhi	4ef8 <monster_test_local_MyGame_Example_json_parser_enum+0xe0>
    4ea8:	add	r3, pc, #704	; 0x2c0
    4eac:	ldrd	r2, [r3]
    4eb0:	cmp	r1, r3
    4eb4:	cmpeq	r0, r2
    4eb8:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4ebc:	sub	r3, sl, r4
    4ec0:	cmp	r3, #8
    4ec4:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4ec8:	ldrb	r3, [r4, #8]
    4ecc:	cmp	r3, #46	; 0x2e
    4ed0:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4ed4:	str	r9, [sp, #52]	; 0x34
    4ed8:	str	r8, [sp, #48]	; 0x30
    4edc:	mov	r3, fp
    4ee0:	mov	r2, sl
    4ee4:	add	r1, r4, #9
    4ee8:	mov	r0, r5
    4eec:	add	sp, sp, #12
    4ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4ef4:	b	33b0 <MyGame_Example_hex_enum_parse_json_enum>
    4ef8:	add	r3, pc, #632	; 0x278
    4efc:	ldrd	r2, [r3]
    4f00:	cmp	r1, r3
    4f04:	cmpeq	r0, r2
    4f08:	bls	5050 <monster_test_local_MyGame_Example_json_parser_enum+0x238>
    4f0c:	add	r3, pc, #620	; 0x26c
    4f10:	ldrd	r2, [r3]
    4f14:	cmp	r1, r3
    4f18:	cmpeq	r0, r2
    4f1c:	beq	5110 <monster_test_local_MyGame_Example_json_parser_enum+0x2f8>
    4f20:	add	r3, pc, #608	; 0x260
    4f24:	ldrd	r2, [r3]
    4f28:	cmp	r1, r3
    4f2c:	cmpeq	r0, r2
    4f30:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4f34:	add	r6, r4, #8
    4f38:	mov	r0, r6
    4f3c:	mov	r1, sl
    4f40:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4f44:	add	r3, pc, #580	; 0x244
    4f48:	ldrd	r2, [r3]
    4f4c:	mov	r0, #0
    4f50:	cmp	r1, r3
    4f54:	cmpeq	r0, r2
    4f58:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4f5c:	sub	r3, sl, r6
    4f60:	cmp	r3, #4
    4f64:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4f68:	ldrb	r3, [r4, #12]
    4f6c:	cmp	r3, #46	; 0x2e
    4f70:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4f74:	add	r7, r4, #13
    4f78:	cmp	r6, r7
    4f7c:	beq	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4f80:	mov	r1, sl
    4f84:	mov	r0, r7
    4f88:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4f8c:	mov	r0, #0
    4f90:	and	r1, r1, #-16777216	; 0xff000000
    4f94:	cmp	r1, #2013265920	; 0x78000000
    4f98:	cmpeq	r0, #0
    4f9c:	movne	r4, r7
    4fa0:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4fa4:	str	r9, [sp]
    4fa8:	mov	r2, sl
    4fac:	mov	r0, r5
    4fb0:	mov	r3, #1
    4fb4:	mov	r1, r7
    4fb8:	bl	0 <flatcc_json_parser_match_constant>
    4fbc:	cmp	r7, r0
    4fc0:	mov	r4, r0
    4fc4:	beq	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4fc8:	mov	r0, #0
    4fcc:	mov	r1, #0
    4fd0:	mov	r3, #0
    4fd4:	strd	r0, [r8]
    4fd8:	str	r3, [fp]
    4fdc:	b	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    4fe0:	add	r7, pc, #432	; 0x1b0
    4fe4:	ldrd	r6, [r7]
    4fe8:	bic	r3, r1, #255	; 0xff
    4fec:	mov	r2, #0
    4ff0:	cmp	r3, r7
    4ff4:	cmpeq	r2, r6
    4ff8:	beq	50d4 <monster_test_local_MyGame_Example_json_parser_enum+0x2bc>
    4ffc:	add	r3, pc, #412	; 0x19c
    5000:	ldrd	r2, [r3]
    5004:	and	r0, r0, #-16777216	; 0xff000000
    5008:	cmp	r1, r3
    500c:	cmpeq	r0, r2
    5010:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    5014:	sub	r3, sl, r4
    5018:	cmp	r3, #5
    501c:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    5020:	ldrb	r3, [r4, #5]
    5024:	cmp	r3, #46	; 0x2e
    5028:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    502c:	str	r9, [sp, #52]	; 0x34
    5030:	str	r8, [sp, #48]	; 0x30
    5034:	mov	r3, fp
    5038:	mov	r2, sl
    503c:	add	r1, r4, #6
    5040:	mov	r0, r5
    5044:	add	sp, sp, #12
    5048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    504c:	b	3148 <MyGame_Example_Color_parse_json_enum>
    5050:	add	r3, pc, #336	; 0x150
    5054:	ldrd	r2, [r3]
    5058:	cmp	r1, r3
    505c:	cmpeq	r0, r2
    5060:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    5064:	sub	r3, sl, r4
    5068:	cmp	r3, #8
    506c:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    5070:	ldrb	r3, [r4, #8]
    5074:	cmp	r3, #46	; 0x2e
    5078:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    507c:	str	r9, [sp, #52]	; 0x34
    5080:	str	r8, [sp, #48]	; 0x30
    5084:	mov	r3, fp
    5088:	mov	r2, sl
    508c:	add	r1, r4, #9
    5090:	mov	r0, r5
    5094:	add	sp, sp, #12
    5098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    509c:	b	3ef8 <MyGame_Example_int_enum_parse_json_enum>
    50a0:	sub	r3, sl, r4
    50a4:	cmp	r3, #3
    50a8:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    50ac:	ldrb	r3, [r4, #3]
    50b0:	cmp	r3, #46	; 0x2e
    50b4:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    50b8:	mov	r3, fp
    50bc:	mov	r2, sl
    50c0:	add	r1, r4, #4
    50c4:	mov	r0, r5
    50c8:	add	sp, sp, #12
    50cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    50d0:	b	41ec <MyGame_Example_Any_parse_json_enum>
    50d4:	sub	r3, sl, r4
    50d8:	cmp	r3, #3
    50dc:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    50e0:	ldrb	r3, [r4, #3]
    50e4:	cmp	r3, #46	; 0x2e
    50e8:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    50ec:	str	r9, [sp, #52]	; 0x34
    50f0:	str	r8, [sp, #48]	; 0x30
    50f4:	mov	r3, fp
    50f8:	mov	r2, sl
    50fc:	add	r1, r4, #4
    5100:	mov	r0, r5
    5104:	add	sp, sp, #12
    5108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    510c:	b	2ca4 <MyGame_Example_Foo_parse_json_enum>
    5110:	sub	r3, sl, r4
    5114:	cmp	r3, #8
    5118:	ble	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    511c:	ldrb	r3, [r4, #8]
    5120:	cmp	r3, #46	; 0x2e
    5124:	bne	4e88 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    5128:	str	r9, [sp, #52]	; 0x34
    512c:	str	r8, [sp, #48]	; 0x30
    5130:	mov	r3, fp
    5134:	mov	r2, sl
    5138:	add	r1, r4, #9
    513c:	mov	r0, r5
    5140:	add	sp, sp, #12
    5144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5148:	b	2ef0 <MyGame_Example_neg_enum_parse_json_enum>
    514c:	nop			; (mov r0, r0)
    5150:	.word	0x656e756c
    5154:	.word	0x6865785f
    5158:	.word	0x71ffffff
    515c:	.word	0x436f6c6f
    5160:	.word	0x00000000
    5164:	.word	0x416e7900
    5168:	.word	0x656e756c
    516c:	.word	0x696e745f
    5170:	.word	0x656e756d
    5174:	.word	0x6865785f
    5178:	.word	0x656e756c
    517c:	.word	0x6e65675f
    5180:	.word	0x656e756d
    5184:	.word	0x6e65675f
    5188:	.word	0x6d707479
    518c:	.word	0x6e6f7465
    5190:	.word	0x00000000
    5194:	.word	0x656e756d
    5198:	.word	0x00000000
    519c:	.word	0x466f6f00
    51a0:	.word	0x72000000
    51a4:	.word	0x436f6c6f
    51a8:	.word	0x656e756d
    51ac:	.word	0x696e745f

000051b0 <MyGame_Example2_Monster_parse_json_table>:
    51b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    51b4:	mov	r7, r3
    51b8:	mov	r3, #0
    51bc:	mov	r5, r0
    51c0:	mov	r6, r1
    51c4:	str	r3, [r7]
    51c8:	mov	r1, r3
    51cc:	ldr	r0, [r0]
    51d0:	mov	r4, r2
    51d4:	bl	0 <flatcc_builder_start_table>
    51d8:	cmp	r0, #0
    51dc:	bne	5218 <MyGame_Example2_Monster_parse_json_table+0x68>
    51e0:	cmp	r6, r4
    51e4:	beq	51f4 <MyGame_Example2_Monster_parse_json_table+0x44>
    51e8:	ldrb	r3, [r6]
    51ec:	cmp	r3, #123	; 0x7b
    51f0:	beq	524c <MyGame_Example2_Monster_parse_json_table+0x9c>
    51f4:	mov	r1, r6
    51f8:	mov	r3, #21
    51fc:	mov	r2, r4
    5200:	mov	r0, r5
    5204:	bl	0 <flatcc_json_parser_set_error>
    5208:	mov	r6, r0
    520c:	ldr	r3, [r5, #24]
    5210:	cmp	r3, #0
    5214:	beq	5230 <MyGame_Example2_Monster_parse_json_table+0x80>
    5218:	mov	r2, r4
    521c:	mov	r1, r6
    5220:	mov	r0, r5
    5224:	mov	r3, #33	; 0x21
    5228:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    522c:	b	0 <flatcc_json_parser_set_error>
    5230:	ldr	r0, [r5]
    5234:	bl	0 <flatcc_builder_end_table>
    5238:	cmp	r0, #0
    523c:	str	r0, [r7]
    5240:	beq	5218 <MyGame_Example2_Monster_parse_json_table+0x68>
    5244:	mov	r0, r6
    5248:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    524c:	add	r1, r6, #1
    5250:	sub	r3, r4, r1
    5254:	cmp	r3, #1
    5258:	ble	526c <MyGame_Example2_Monster_parse_json_table+0xbc>
    525c:	ldrb	r3, [r6, #1]
    5260:	cmp	r3, #32
    5264:	bhi	527c <MyGame_Example2_Monster_parse_json_table+0xcc>
    5268:	beq	5444 <MyGame_Example2_Monster_parse_json_table+0x294>
    526c:	mov	r2, r4
    5270:	mov	r0, r5
    5274:	bl	0 <flatcc_json_parser_space_ext>
    5278:	mov	r1, r0
    527c:	cmp	r4, r1
    5280:	beq	5290 <MyGame_Example2_Monster_parse_json_table+0xe0>
    5284:	ldrb	r3, [r1]
    5288:	cmp	r3, #125	; 0x7d
    528c:	beq	5474 <MyGame_Example2_Monster_parse_json_table+0x2c4>
    5290:	mov	r6, #1
    5294:	mov	r9, #5
    5298:	mov	r8, #0
    529c:	cmp	r4, r1
    52a0:	beq	52c4 <MyGame_Example2_Monster_parse_json_table+0x114>
    52a4:	ldrb	r3, [r1]
    52a8:	cmp	r3, #34	; 0x22
    52ac:	addeq	r1, r1, #1
    52b0:	streq	r8, [r5, #12]
    52b4:	beq	52c4 <MyGame_Example2_Monster_parse_json_table+0x114>
    52b8:	cmp	r3, #46	; 0x2e
    52bc:	strne	r6, [r5, #12]
    52c0:	beq	5404 <MyGame_Example2_Monster_parse_json_table+0x254>
    52c4:	mov	r2, r4
    52c8:	mov	r0, r5
    52cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    52d0:	sub	r3, r4, r0
    52d4:	cmp	r3, #1
    52d8:	ble	52ec <MyGame_Example2_Monster_parse_json_table+0x13c>
    52dc:	ldrb	r3, [r0]
    52e0:	cmp	r3, #32
    52e4:	bhi	52fc <MyGame_Example2_Monster_parse_json_table+0x14c>
    52e8:	beq	536c <MyGame_Example2_Monster_parse_json_table+0x1bc>
    52ec:	mov	r1, r0
    52f0:	mov	r2, r4
    52f4:	mov	r0, r5
    52f8:	bl	0 <flatcc_json_parser_space_ext>
    52fc:	cmp	r4, r0
    5300:	beq	5384 <MyGame_Example2_Monster_parse_json_table+0x1d4>
    5304:	ldrb	r3, [r0]
    5308:	cmp	r3, #44	; 0x2c
    530c:	beq	538c <MyGame_Example2_Monster_parse_json_table+0x1dc>
    5310:	cmp	r3, #125	; 0x7d
    5314:	beq	5334 <MyGame_Example2_Monster_parse_json_table+0x184>
    5318:	mov	r1, r0
    531c:	mov	r3, #10
    5320:	mov	r2, r4
    5324:	mov	r0, r5
    5328:	bl	0 <flatcc_json_parser_set_error>
    532c:	mov	r6, r0
    5330:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    5334:	add	r6, r0, #1
    5338:	sub	r3, r4, r6
    533c:	cmp	r3, #1
    5340:	ble	5354 <MyGame_Example2_Monster_parse_json_table+0x1a4>
    5344:	ldrb	r3, [r0, #1]
    5348:	cmp	r3, #32
    534c:	bhi	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    5350:	beq	541c <MyGame_Example2_Monster_parse_json_table+0x26c>
    5354:	mov	r1, r6
    5358:	mov	r2, r4
    535c:	mov	r0, r5
    5360:	bl	0 <flatcc_json_parser_space_ext>
    5364:	mov	r6, r0
    5368:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    536c:	ldrb	r3, [r0, #1]
    5370:	cmp	r3, #32
    5374:	addhi	r0, r0, #1
    5378:	bls	52ec <MyGame_Example2_Monster_parse_json_table+0x13c>
    537c:	cmp	r4, r0
    5380:	bne	5304 <MyGame_Example2_Monster_parse_json_table+0x154>
    5384:	mov	r6, r4
    5388:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    538c:	add	r1, r0, #1
    5390:	sub	r3, r4, r1
    5394:	cmp	r3, #1
    5398:	ble	53ac <MyGame_Example2_Monster_parse_json_table+0x1fc>
    539c:	ldrb	r3, [r0, #1]
    53a0:	cmp	r3, #32
    53a4:	bhi	53bc <MyGame_Example2_Monster_parse_json_table+0x20c>
    53a8:	beq	5430 <MyGame_Example2_Monster_parse_json_table+0x280>
    53ac:	mov	r2, r4
    53b0:	mov	r0, r5
    53b4:	bl	0 <flatcc_json_parser_space_ext>
    53b8:	mov	r1, r0
    53bc:	cmp	r4, r1
    53c0:	beq	5458 <MyGame_Example2_Monster_parse_json_table+0x2a8>
    53c4:	ldrb	r3, [r1]
    53c8:	cmp	r3, #125	; 0x7d
    53cc:	bne	529c <MyGame_Example2_Monster_parse_json_table+0xec>
    53d0:	add	r6, r1, #1
    53d4:	sub	r3, r4, r6
    53d8:	cmp	r3, #1
    53dc:	ble	5354 <MyGame_Example2_Monster_parse_json_table+0x1a4>
    53e0:	ldrb	r3, [r1, #1]
    53e4:	cmp	r3, #32
    53e8:	bhi	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    53ec:	bne	5354 <MyGame_Example2_Monster_parse_json_table+0x1a4>
    53f0:	ldrb	r3, [r1, #2]
    53f4:	cmp	r3, #32
    53f8:	addhi	r6, r1, #2
    53fc:	bls	5354 <MyGame_Example2_Monster_parse_json_table+0x1a4>
    5400:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    5404:	mov	r3, r9
    5408:	mov	r2, r4
    540c:	mov	r0, r5
    5410:	bl	0 <flatcc_json_parser_set_error>
    5414:	mov	r1, r0
    5418:	b	52c4 <MyGame_Example2_Monster_parse_json_table+0x114>
    541c:	ldrb	r3, [r0, #2]
    5420:	cmp	r3, #32
    5424:	addhi	r6, r0, #2
    5428:	bls	5354 <MyGame_Example2_Monster_parse_json_table+0x1a4>
    542c:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    5430:	ldrb	r3, [r0, #2]
    5434:	cmp	r3, #32
    5438:	addhi	r1, r0, #2
    543c:	bls	53ac <MyGame_Example2_Monster_parse_json_table+0x1fc>
    5440:	b	53bc <MyGame_Example2_Monster_parse_json_table+0x20c>
    5444:	ldrb	r3, [r6, #2]
    5448:	cmp	r3, #32
    544c:	addhi	r1, r6, #2
    5450:	bls	526c <MyGame_Example2_Monster_parse_json_table+0xbc>
    5454:	b	527c <MyGame_Example2_Monster_parse_json_table+0xcc>
    5458:	mov	r3, #10
    545c:	mov	r2, r4
    5460:	mov	r1, r4
    5464:	mov	r0, r5
    5468:	bl	0 <flatcc_json_parser_set_error>
    546c:	mov	r6, r0
    5470:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>
    5474:	add	r1, r1, #1
    5478:	mov	r2, r4
    547c:	mov	r0, r5
    5480:	bl	47c <flatcc_json_parser_space>
    5484:	mov	r6, r0
    5488:	b	520c <MyGame_Example2_Monster_parse_json_table+0x5c>

0000548c <flatcc_json_parser_match_symbol.part.18>:
    548c:	push	{r4, r5, r6, lr}
    5490:	mov	r4, r0
    5494:	ldr	r0, [r0, #12]
    5498:	mov	r5, r2
    549c:	cmp	r0, #0
    54a0:	ldrb	r2, [r1, r3]
    54a4:	beq	551c <flatcc_json_parser_match_symbol.part.18+0x90>
    54a8:	cmp	r2, #58	; 0x3a
    54ac:	cmpne	r2, #32
    54b0:	movls	r2, #0
    54b4:	add	r0, r1, r3
    54b8:	movhi	r2, #1
    54bc:	strls	r2, [r4, #12]
    54c0:	bhi	5524 <flatcc_json_parser_match_symbol.part.18+0x98>
    54c4:	sub	r2, r5, r0
    54c8:	cmp	r2, #1
    54cc:	ble	54e0 <flatcc_json_parser_match_symbol.part.18+0x54>
    54d0:	ldrb	r2, [r0]
    54d4:	cmp	r2, #32
    54d8:	bhi	54f0 <flatcc_json_parser_match_symbol.part.18+0x64>
    54dc:	beq	5538 <flatcc_json_parser_match_symbol.part.18+0xac>
    54e0:	mov	r1, r0
    54e4:	mov	r2, r5
    54e8:	mov	r0, r4
    54ec:	bl	0 <flatcc_json_parser_space_ext>
    54f0:	cmp	r5, r0
    54f4:	beq	5504 <flatcc_json_parser_match_symbol.part.18+0x78>
    54f8:	ldrb	r2, [r0]
    54fc:	cmp	r2, #58	; 0x3a
    5500:	beq	554c <flatcc_json_parser_match_symbol.part.18+0xc0>
    5504:	mov	r2, r5
    5508:	mov	r1, r0
    550c:	mov	r3, #4
    5510:	mov	r0, r4
    5514:	pop	{r4, r5, r6, lr}
    5518:	b	0 <flatcc_json_parser_set_error>
    551c:	cmp	r2, #34	; 0x22
    5520:	beq	552c <flatcc_json_parser_match_symbol.part.18+0xa0>
    5524:	mov	r0, r1
    5528:	pop	{r4, r5, r6, pc}
    552c:	add	r3, r3, #1
    5530:	add	r0, r1, r3
    5534:	b	54c4 <flatcc_json_parser_match_symbol.part.18+0x38>
    5538:	ldrb	r2, [r0, #1]
    553c:	cmp	r2, #32
    5540:	addhi	r0, r0, #1
    5544:	bls	54e0 <flatcc_json_parser_match_symbol.part.18+0x54>
    5548:	b	54f0 <flatcc_json_parser_match_symbol.part.18+0x64>
    554c:	add	r1, r0, #1
    5550:	sub	r2, r5, r1
    5554:	cmp	r2, #1
    5558:	ble	556c <flatcc_json_parser_match_symbol.part.18+0xe0>
    555c:	ldrb	r2, [r0, #1]
    5560:	cmp	r2, #32
    5564:	bhi	5524 <flatcc_json_parser_match_symbol.part.18+0x98>
    5568:	beq	557c <flatcc_json_parser_match_symbol.part.18+0xf0>
    556c:	mov	r2, r5
    5570:	mov	r0, r4
    5574:	pop	{r4, r5, r6, lr}
    5578:	b	0 <flatcc_json_parser_space_ext>
    557c:	ldrb	r2, [r0, #2]
    5580:	cmp	r2, #32
    5584:	addhi	r1, r0, #2
    5588:	bls	556c <flatcc_json_parser_match_symbol.part.18+0xe0>
    558c:	b	5524 <flatcc_json_parser_match_symbol.part.18+0x98>

00005590 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    5590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5594:	mov	r9, r3
    5598:	mov	r3, #0
    559c:	sub	sp, sp, #76	; 0x4c
    55a0:	mov	r8, r0
    55a4:	mov	r4, r1
    55a8:	str	r3, [r9]
    55ac:	ldr	r0, [r0]
    55b0:	mov	r1, #9
    55b4:	mov	r5, r2
    55b8:	bl	0 <flatcc_builder_start_table>
    55bc:	cmp	r0, #0
    55c0:	bne	5830 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2a0>
    55c4:	mov	r1, r4
    55c8:	add	r3, sp, #56	; 0x38
    55cc:	mov	r2, r5
    55d0:	mov	r0, r8
    55d4:	bl	884 <flatcc_json_parser_object_start>
    55d8:	ldr	r3, [sp, #56]	; 0x38
    55dc:	mov	r4, r0
    55e0:	cmp	r3, #0
    55e4:	beq	5a30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4a0>
    55e8:	cmp	r5, r4
    55ec:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    55f0:	ldrb	r3, [r4]
    55f4:	cmp	r3, #34	; 0x22
    55f8:	beq	59f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x468>
    55fc:	cmp	r3, #46	; 0x2e
    5600:	movne	r3, #1
    5604:	subne	ip, r5, r4
    5608:	strne	r3, [r8, #12]
    560c:	beq	5dc8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x838>
    5610:	cmp	ip, #8
    5614:	bls	5938 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3a8>
    5618:	ldrb	r2, [r4, #7]
    561c:	mov	r3, #0
    5620:	ldrb	r0, [r4, #6]
    5624:	lsr	lr, r0, #24
    5628:	lsl	r1, r0, #8
    562c:	str	lr, [sp, #52]	; 0x34
    5630:	str	r1, [sp, #48]	; 0x30
    5634:	ldrd	r0, [sp, #48]	; 0x30
    5638:	orr	r0, r0, r2
    563c:	orr	r1, r1, r3
    5640:	mov	r2, r0
    5644:	mov	r3, r1
    5648:	ldrb	r0, [r4, #5]
    564c:	lsr	lr, r0, #16
    5650:	lsl	r1, r0, #16
    5654:	str	lr, [sp, #44]	; 0x2c
    5658:	str	r1, [sp, #40]	; 0x28
    565c:	ldrd	r0, [sp, #40]	; 0x28
    5660:	orr	r0, r0, r2
    5664:	orr	r1, r1, r3
    5668:	mov	r2, r0
    566c:	mov	r3, r1
    5670:	ldrb	r0, [r4, #4]
    5674:	lsr	lr, r0, #8
    5678:	lsl	r1, r0, #24
    567c:	str	lr, [sp, #28]
    5680:	str	r1, [sp, #24]
    5684:	ldrd	r0, [sp, #24]
    5688:	orr	r0, r0, r2
    568c:	orr	r1, r1, r3
    5690:	mov	r2, r0
    5694:	mov	r3, r1
    5698:	ldrb	r1, [r4, #3]
    569c:	str	r1, [sp, #36]	; 0x24
    56a0:	mov	r1, #0
    56a4:	str	r1, [sp, #32]
    56a8:	ldrd	r0, [sp, #32]
    56ac:	orr	r0, r0, r2
    56b0:	orr	r1, r1, r3
    56b4:	mov	r2, r0
    56b8:	mov	r3, r1
    56bc:	ldrb	r0, [r4, #2]
    56c0:	lsl	r1, r0, #8
    56c4:	str	r1, [sp, #20]
    56c8:	mov	r1, #0
    56cc:	str	r1, [sp, #16]
    56d0:	ldrd	r0, [sp, #16]
    56d4:	orr	r0, r0, r2
    56d8:	orr	r1, r1, r3
    56dc:	mov	r2, r0
    56e0:	mov	r3, r1
    56e4:	ldrb	r0, [r4, #1]
    56e8:	lsl	r1, r0, #16
    56ec:	str	r1, [sp, #12]
    56f0:	mov	r1, #0
    56f4:	str	r1, [sp, #8]
    56f8:	ldrd	r0, [sp, #8]
    56fc:	orr	r0, r0, r2
    5700:	orr	r1, r1, r3
    5704:	mov	r2, r0
    5708:	mov	r3, r1
    570c:	ldrb	r6, [r4]
    5710:	add	r1, pc, #832	; 0x340
    5714:	ldrd	r0, [r1]
    5718:	mov	sl, #0
    571c:	orr	r2, r2, sl
    5720:	lsl	fp, r6, #24
    5724:	orr	r3, r3, fp
    5728:	cmp	r3, r1
    572c:	cmpeq	r2, r0
    5730:	bls	584c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2bc>
    5734:	add	r1, pc, #804	; 0x324
    5738:	ldrd	r0, [r1]
    573c:	cmp	r3, r1
    5740:	cmpeq	r2, r0
    5744:	beq	5b68 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5d8>
    5748:	add	r1, pc, #792	; 0x318
    574c:	ldrd	r0, [r1]
    5750:	mov	r6, #0
    5754:	cmp	r3, r1
    5758:	cmpeq	r6, r0
    575c:	beq	5cd8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x748>
    5760:	add	r1, pc, #776	; 0x308
    5764:	ldrd	r0, [r1]
    5768:	cmp	r3, r1
    576c:	cmpeq	r2, r0
    5770:	bne	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5774:	cmp	ip, #8
    5778:	bgt	5de8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x858>
    577c:	add	r4, r4, #8
    5780:	mov	r0, r4
    5784:	mov	r1, r5
    5788:	bl	0 <flatcc_json_parser_symbol_part_ext>
    578c:	mov	r0, #0
    5790:	and	r1, r1, #-16777216	; 0xff000000
    5794:	cmp	r1, #889192448	; 0x35000000
    5798:	cmpeq	r0, #0
    579c:	bne	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    57a0:	sub	r3, r5, r4
    57a4:	cmp	r3, #1
    57a8:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    57ac:	mov	r3, #1
    57b0:	mov	r2, r5
    57b4:	mov	r1, r4
    57b8:	mov	r0, r8
    57bc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    57c0:	cmp	r4, r0
    57c4:	mov	r7, r0
    57c8:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    57cc:	add	r4, sp, #72	; 0x48
    57d0:	mov	r3, #0
    57d4:	str	r3, [r4, #-8]!
    57d8:	mov	r1, r0
    57dc:	mov	r2, r5
    57e0:	mov	r3, r4
    57e4:	mov	r0, r8
    57e8:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    57ec:	cmp	r0, r7
    57f0:	mov	r6, r0
    57f4:	beq	60b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb20>
    57f8:	ldr	r3, [sp, #64]	; 0x40
    57fc:	cmp	r3, #0
    5800:	bne	5810 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x280>
    5804:	ldr	r3, [r8, #8]
    5808:	tst	r3, #2
    580c:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5810:	mov	r3, #4
    5814:	mov	r2, r3
    5818:	mov	r1, #8
    581c:	ldr	r0, [r8]
    5820:	bl	0 <flatcc_builder_table_add>
    5824:	cmp	r0, #0
    5828:	bne	5b5c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5cc>
    582c:	mov	r4, r6
    5830:	mov	r2, r5
    5834:	mov	r1, r4
    5838:	mov	r0, r8
    583c:	mov	r3, #33	; 0x21
    5840:	bl	0 <flatcc_json_parser_set_error>
    5844:	add	sp, sp, #76	; 0x4c
    5848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    584c:	add	r1, pc, #548	; 0x224
    5850:	ldrd	r0, [r1]
    5854:	cmp	r3, r1
    5858:	cmpeq	r2, r0
    585c:	beq	5ab0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x520>
    5860:	add	r7, pc, #536	; 0x218
    5864:	ldrd	r6, [r7]
    5868:	mov	r0, #0
    586c:	mov	r1, r3
    5870:	cmp	r3, r7
    5874:	cmpeq	r0, r6
    5878:	beq	5c78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6e8>
    587c:	add	r7, pc, #516	; 0x204
    5880:	ldrd	r6, [r7]
    5884:	cmp	r3, r7
    5888:	cmpeq	r2, r6
    588c:	beq	5d38 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7a8>
    5890:	add	r3, pc, #504	; 0x1f8
    5894:	ldrd	r2, [r3]
    5898:	cmp	r1, r3
    589c:	cmpeq	r0, r2
    58a0:	bne	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    58a4:	cmp	ip, #4
    58a8:	bgt	5f00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x970>
    58ac:	mov	r1, r4
    58b0:	mov	r2, r5
    58b4:	mov	r0, r8
    58b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    58bc:	mov	r6, r0
    58c0:	sub	r3, r5, r6
    58c4:	cmp	r3, #1
    58c8:	ble	58dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x34c>
    58cc:	ldrb	r3, [r6]
    58d0:	cmp	r3, #32
    58d4:	bhi	58f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x360>
    58d8:	beq	5a0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x47c>
    58dc:	mov	r1, r6
    58e0:	mov	r2, r5
    58e4:	mov	r0, r8
    58e8:	bl	0 <flatcc_json_parser_space_ext>
    58ec:	mov	r6, r0
    58f0:	cmp	r5, r6
    58f4:	beq	5a24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x494>
    58f8:	ldrb	r3, [r6]
    58fc:	cmp	r3, #44	; 0x2c
    5900:	beq	5c24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x694>
    5904:	mov	r3, #0
    5908:	str	r3, [sp, #56]	; 0x38
    590c:	ldrb	r3, [r6]
    5910:	cmp	r3, #125	; 0x7d
    5914:	beq	59bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x42c>
    5918:	mov	r3, #10
    591c:	mov	r1, r6
    5920:	mov	r2, r5
    5924:	mov	r0, r8
    5928:	bl	0 <flatcc_json_parser_set_error>
    592c:	ldr	r3, [sp, #56]	; 0x38
    5930:	mov	r4, r0
    5934:	b	55e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50>
    5938:	sub	r3, ip, #1
    593c:	cmp	r3, #7
    5940:	ldrls	pc, [pc, r3, lsl #2]
    5944:	b	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5948:	.word	0x000059b0
    594c:	.word	0x000059a4
    5950:	.word	0x00005998
    5954:	.word	0x0000598c
    5958:	.word	0x00005980
    595c:	.word	0x00005974
    5960:	.word	0x00005968
    5964:	.word	0x00005618
    5968:	mov	r2, #0
    596c:	mov	r3, #0
    5970:	b	5620 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x90>
    5974:	mov	r2, #0
    5978:	mov	r3, #0
    597c:	b	5648 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8>
    5980:	mov	r2, #0
    5984:	mov	r3, #0
    5988:	b	5670 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xe0>
    598c:	mov	r2, #0
    5990:	mov	r3, #0
    5994:	b	5698 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x108>
    5998:	mov	r2, #0
    599c:	mov	r3, #0
    59a0:	b	56bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x12c>
    59a4:	mov	r2, #0
    59a8:	mov	r3, #0
    59ac:	b	56e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x154>
    59b0:	mov	r2, #0
    59b4:	mov	r3, #0
    59b8:	b	570c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x17c>
    59bc:	add	r4, r6, #1
    59c0:	sub	r3, r5, r4
    59c4:	cmp	r3, #1
    59c8:	ble	59dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    59cc:	ldrb	r3, [r6, #1]
    59d0:	cmp	r3, #32
    59d4:	bhi	5a30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4a0>
    59d8:	beq	5f60 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9d0>
    59dc:	mov	r1, r4
    59e0:	mov	r2, r5
    59e4:	mov	r0, r8
    59e8:	bl	0 <flatcc_json_parser_space_ext>
    59ec:	ldr	r3, [sp, #56]	; 0x38
    59f0:	mov	r4, r0
    59f4:	b	55e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50>
    59f8:	add	r4, r4, #1
    59fc:	mov	r3, #0
    5a00:	sub	ip, r5, r4
    5a04:	str	r3, [r8, #12]
    5a08:	b	5610 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x80>
    5a0c:	ldrb	r3, [r6, #1]
    5a10:	cmp	r3, #32
    5a14:	addhi	r6, r6, #1
    5a18:	bls	58dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x34c>
    5a1c:	cmp	r5, r6
    5a20:	bne	58f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x368>
    5a24:	mov	r4, r5
    5a28:	mov	r3, #0
    5a2c:	str	r3, [sp, #56]	; 0x38
    5a30:	ldr	r3, [r8, #24]
    5a34:	cmp	r3, #0
    5a38:	bne	5830 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2a0>
    5a3c:	ldr	r0, [r8]
    5a40:	bl	0 <flatcc_builder_end_table>
    5a44:	cmp	r0, #0
    5a48:	str	r0, [r9]
    5a4c:	beq	5830 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2a0>
    5a50:	mov	r0, r4
    5a54:	b	5844 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2b4>
    5a58:	.word	0xffffffff
    5a5c:	.word	0x63636362
    5a60:	.word	0x31323334
    5a64:	.word	0x63636363
    5a68:	.word	0x00000000
    5a6c:	.word	0x63636363
    5a70:	.word	0x31323334
    5a74:	.word	0x64646464
    5a78:	.word	0x31323334
    5a7c:	.word	0x61616161
    5a80:	.word	0x00000000
    5a84:	.word	0x61616161
    5a88:	.word	0x31323334
    5a8c:	.word	0x62626262
    5a90:	.word	0x00000000
    5a94:	.word	0x62626262
    5a98:	.word	0x00000054
    5a9c:	.word	0x0000003c
    5aa0:	.word	0x00000030
    5aa4:	.word	0x00000024
    5aa8:	.word	0x00000048
    5aac:	.word	0x00000060
    5ab0:	add	r4, r4, #8
    5ab4:	mov	r0, r4
    5ab8:	mov	r1, r5
    5abc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    5ac0:	mov	r0, #0
    5ac4:	and	r1, r1, #-16777216	; 0xff000000
    5ac8:	cmp	r1, #889192448	; 0x35000000
    5acc:	cmpeq	r0, #0
    5ad0:	bne	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5ad4:	sub	r3, r5, r4
    5ad8:	cmp	r3, #1
    5adc:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5ae0:	mov	r3, #1
    5ae4:	mov	r2, r5
    5ae8:	mov	r1, r4
    5aec:	mov	r0, r8
    5af0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5af4:	cmp	r4, r0
    5af8:	mov	r7, r0
    5afc:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5b00:	add	r4, sp, #72	; 0x48
    5b04:	mov	r1, r0
    5b08:	str	sl, [r4, #-8]!
    5b0c:	mov	r2, r5
    5b10:	mov	r3, r4
    5b14:	mov	r0, r8
    5b18:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    5b1c:	cmp	r0, r7
    5b20:	mov	r6, r0
    5b24:	beq	6058 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xac8>
    5b28:	ldr	r3, [sp, #64]	; 0x40
    5b2c:	cmp	r3, #0
    5b30:	bne	5b40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5b0>
    5b34:	ldr	r3, [r8, #8]
    5b38:	tst	r3, #2
    5b3c:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5b40:	mov	r3, #4
    5b44:	mov	r2, r3
    5b48:	mov	r1, #1
    5b4c:	ldr	r0, [r8]
    5b50:	bl	0 <flatcc_builder_table_add>
    5b54:	cmp	r0, #0
    5b58:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5b5c:	ldr	r3, [sp, #64]	; 0x40
    5b60:	str	r3, [r0]
    5b64:	b	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5b68:	cmp	ip, #8
    5b6c:	bgt	5e78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8e8>
    5b70:	add	r4, r4, #8
    5b74:	mov	r0, r4
    5b78:	mov	r1, r5
    5b7c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    5b80:	mov	r0, #0
    5b84:	and	r1, r1, #-16777216	; 0xff000000
    5b88:	cmp	r1, #889192448	; 0x35000000
    5b8c:	cmpeq	r0, #0
    5b90:	bne	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5b94:	sub	r3, r5, r4
    5b98:	cmp	r3, #1
    5b9c:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5ba0:	mov	r3, #1
    5ba4:	mov	r2, r5
    5ba8:	mov	r1, r4
    5bac:	mov	r0, r8
    5bb0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5bb4:	cmp	r4, r0
    5bb8:	mov	r7, r0
    5bbc:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5bc0:	add	r4, sp, #72	; 0x48
    5bc4:	mov	r3, #0
    5bc8:	str	r3, [r4, #-8]!
    5bcc:	mov	r1, r0
    5bd0:	mov	r2, r5
    5bd4:	mov	r3, r4
    5bd8:	mov	r0, r8
    5bdc:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    5be0:	cmp	r0, r7
    5be4:	mov	r6, r0
    5be8:	beq	6084 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaf4>
    5bec:	ldr	r3, [sp, #64]	; 0x40
    5bf0:	cmp	r3, #0
    5bf4:	bne	5c04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x674>
    5bf8:	ldr	r3, [r8, #8]
    5bfc:	tst	r3, #2
    5c00:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5c04:	mov	r3, #4
    5c08:	mov	r2, r3
    5c0c:	mov	r1, #6
    5c10:	ldr	r0, [r8]
    5c14:	bl	0 <flatcc_builder_table_add>
    5c18:	cmp	r0, #0
    5c1c:	bne	5b5c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5cc>
    5c20:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5c24:	add	r4, r6, #1
    5c28:	sub	r3, r5, r4
    5c2c:	cmp	r3, #1
    5c30:	ble	5c44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6b4>
    5c34:	ldrb	r3, [r6, #1]
    5c38:	cmp	r3, #32
    5c3c:	bhi	5c58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c8>
    5c40:	beq	5f74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9e4>
    5c44:	mov	r1, r4
    5c48:	mov	r2, r5
    5c4c:	mov	r0, r8
    5c50:	bl	0 <flatcc_json_parser_space_ext>
    5c54:	mov	r4, r0
    5c58:	cmp	r5, r4
    5c5c:	beq	6004 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa74>
    5c60:	ldrb	r3, [r4]
    5c64:	cmp	r3, #125	; 0x7d
    5c68:	beq	5f88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f8>
    5c6c:	mov	r3, #1
    5c70:	str	r3, [sp, #56]	; 0x38
    5c74:	b	55e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x58>
    5c78:	cmp	ip, #4
    5c7c:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5c80:	mov	r1, r4
    5c84:	mov	r3, #4
    5c88:	mov	r2, r5
    5c8c:	mov	r0, r8
    5c90:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5c94:	cmp	r0, r4
    5c98:	mov	r1, r0
    5c9c:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5ca0:	add	r3, sp, #60	; 0x3c
    5ca4:	mov	r2, r5
    5ca8:	mov	r0, r8
    5cac:	bl	0 <flatcc_json_parser_build_string>
    5cb0:	ldr	r3, [sp, #60]	; 0x3c
    5cb4:	cmp	r3, #0
    5cb8:	mov	r6, r0
    5cbc:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5cc0:	mov	r1, sl
    5cc4:	ldr	r0, [r8]
    5cc8:	bl	0 <flatcc_builder_table_add_offset>
    5ccc:	cmp	r0, #0
    5cd0:	bne	5f54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
    5cd4:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5cd8:	cmp	ip, #4
    5cdc:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5ce0:	mov	r1, r4
    5ce4:	mov	r3, #4
    5ce8:	mov	r2, r5
    5cec:	mov	r0, r8
    5cf0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5cf4:	cmp	r0, r4
    5cf8:	mov	r1, r0
    5cfc:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5d00:	add	r3, sp, #60	; 0x3c
    5d04:	mov	r2, r5
    5d08:	mov	r0, r8
    5d0c:	bl	0 <flatcc_json_parser_build_string>
    5d10:	ldr	r3, [sp, #60]	; 0x3c
    5d14:	cmp	r3, #0
    5d18:	mov	r6, r0
    5d1c:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5d20:	mov	r1, #4
    5d24:	ldr	r0, [r8]
    5d28:	bl	0 <flatcc_builder_table_add_offset>
    5d2c:	cmp	r0, #0
    5d30:	bne	5f54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
    5d34:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5d38:	cmp	ip, #8
    5d3c:	ble	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5d40:	mov	r3, #8
    5d44:	mov	r2, r5
    5d48:	mov	r1, r4
    5d4c:	mov	r0, r8
    5d50:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5d54:	cmp	r0, r4
    5d58:	mov	r7, r0
    5d5c:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5d60:	mov	r0, #0
    5d64:	mov	r1, #0
    5d68:	add	r4, sp, #72	; 0x48
    5d6c:	mov	r2, r5
    5d70:	strd	r0, [r4, #-8]!
    5d74:	mov	r1, r7
    5d78:	mov	r3, r4
    5d7c:	mov	r0, r8
    5d80:	bl	7bc <flatcc_json_parser_int64>
    5d84:	cmp	r0, r7
    5d88:	mov	r6, r0
    5d8c:	beq	602c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa9c>
    5d90:	ldrd	r2, [sp, #64]	; 0x40
    5d94:	orrs	r3, r2, r3
    5d98:	bne	5da8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x818>
    5d9c:	ldr	r3, [r8, #8]
    5da0:	tst	r3, #2
    5da4:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5da8:	mov	r3, #8
    5dac:	mov	r2, r3
    5db0:	mov	r1, #3
    5db4:	ldr	r0, [r8]
    5db8:	bl	0 <flatcc_builder_table_add>
    5dbc:	cmp	r0, #0
    5dc0:	bne	5e6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8dc>
    5dc4:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5dc8:	mov	r1, r4
    5dcc:	mov	r3, #5
    5dd0:	mov	r2, r5
    5dd4:	mov	r0, r8
    5dd8:	bl	0 <flatcc_json_parser_set_error>
    5ddc:	mov	r4, r0
    5de0:	sub	ip, r5, r0
    5de4:	b	5610 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x80>
    5de8:	mov	r3, #8
    5dec:	mov	r2, r5
    5df0:	mov	r1, r4
    5df4:	mov	r0, r8
    5df8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5dfc:	cmp	r0, r4
    5e00:	mov	r7, r0
    5e04:	beq	577c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1ec>
    5e08:	mov	r0, #0
    5e0c:	mov	r1, #0
    5e10:	add	r4, sp, #72	; 0x48
    5e14:	mov	r2, r5
    5e18:	strd	r0, [r4, #-8]!
    5e1c:	mov	r1, r7
    5e20:	mov	r3, r4
    5e24:	mov	r0, r8
    5e28:	bl	7bc <flatcc_json_parser_int64>
    5e2c:	cmp	r0, r7
    5e30:	mov	r6, r0
    5e34:	beq	5fac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa1c>
    5e38:	ldrd	r2, [sp, #64]	; 0x40
    5e3c:	orrs	r3, r2, r3
    5e40:	bne	5e50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8c0>
    5e44:	ldr	r3, [r8, #8]
    5e48:	tst	r3, #2
    5e4c:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5e50:	mov	r3, #8
    5e54:	mov	r2, r3
    5e58:	mov	r1, #7
    5e5c:	ldr	r0, [r8]
    5e60:	bl	0 <flatcc_builder_table_add>
    5e64:	cmp	r0, #0
    5e68:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5e6c:	ldrd	r2, [sp, #64]	; 0x40
    5e70:	strd	r2, [r0]
    5e74:	b	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5e78:	mov	r3, #8
    5e7c:	mov	r2, r5
    5e80:	mov	r1, r4
    5e84:	mov	r0, r8
    5e88:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5e8c:	cmp	r0, r4
    5e90:	mov	r7, r0
    5e94:	beq	5b70 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5e0>
    5e98:	mov	r0, #0
    5e9c:	mov	r1, #0
    5ea0:	add	r4, sp, #72	; 0x48
    5ea4:	mov	r2, r5
    5ea8:	strd	r0, [r4, #-8]!
    5eac:	mov	r1, r7
    5eb0:	mov	r3, r4
    5eb4:	mov	r0, r8
    5eb8:	bl	7bc <flatcc_json_parser_int64>
    5ebc:	cmp	r0, r7
    5ec0:	mov	r6, r0
    5ec4:	beq	5fd8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa48>
    5ec8:	ldrd	r2, [sp, #64]	; 0x40
    5ecc:	orrs	r3, r2, r3
    5ed0:	bne	5ee0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x950>
    5ed4:	ldr	r3, [r8, #8]
    5ed8:	tst	r3, #2
    5edc:	beq	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5ee0:	mov	r3, #8
    5ee4:	mov	r2, r3
    5ee8:	mov	r1, #5
    5eec:	ldr	r0, [r8]
    5ef0:	bl	0 <flatcc_builder_table_add>
    5ef4:	cmp	r0, #0
    5ef8:	bne	5e6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8dc>
    5efc:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5f00:	mov	r1, r4
    5f04:	mov	r3, #4
    5f08:	mov	r2, r5
    5f0c:	mov	r0, r8
    5f10:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    5f14:	cmp	r0, r4
    5f18:	mov	r1, r0
    5f1c:	beq	58ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x31c>
    5f20:	add	r3, sp, #60	; 0x3c
    5f24:	mov	r2, r5
    5f28:	mov	r0, r8
    5f2c:	bl	0 <flatcc_json_parser_build_string>
    5f30:	ldr	r3, [sp, #60]	; 0x3c
    5f34:	cmp	r3, #0
    5f38:	mov	r6, r0
    5f3c:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5f40:	mov	r1, #2
    5f44:	ldr	r0, [r8]
    5f48:	bl	0 <flatcc_builder_table_add_offset>
    5f4c:	cmp	r0, #0
    5f50:	beq	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5f54:	ldr	r3, [sp, #60]	; 0x3c
    5f58:	str	r3, [r0]
    5f5c:	b	58c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x330>
    5f60:	ldrb	r3, [r6, #2]
    5f64:	cmp	r3, #32
    5f68:	bls	59dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    5f6c:	add	r4, r6, #2
    5f70:	b	5a30 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4a0>
    5f74:	ldrb	r3, [r6, #2]
    5f78:	cmp	r3, #32
    5f7c:	addhi	r4, r6, #2
    5f80:	bls	5c44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6b4>
    5f84:	b	5c58 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c8>
    5f88:	mov	r3, #0
    5f8c:	add	r1, r4, #1
    5f90:	mov	r2, r5
    5f94:	mov	r0, r8
    5f98:	str	r3, [sp, #56]	; 0x38
    5f9c:	bl	47c <flatcc_json_parser_space>
    5fa0:	ldr	r3, [sp, #56]	; 0x38
    5fa4:	mov	r4, r0
    5fa8:	b	55e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50>
    5fac:	mov	r1, r0
    5fb0:	str	r4, [sp]
    5fb4:	ldr	r3, [pc, #-1316]	; 5a98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x508>
    5fb8:	mov	r2, r5
    5fbc:	mov	r0, r8
    5fc0:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    5fc4:	cmp	r5, r0
    5fc8:	cmpne	r6, r0
    5fcc:	mov	r6, r0
    5fd0:	bne	5e38 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
    5fd4:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    5fd8:	mov	r1, r0
    5fdc:	str	r4, [sp]
    5fe0:	ldr	r3, [pc, #-1356]	; 5a9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50c>
    5fe4:	mov	r2, r5
    5fe8:	mov	r0, r8
    5fec:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    5ff0:	cmp	r5, r0
    5ff4:	cmpne	r6, r0
    5ff8:	mov	r6, r0
    5ffc:	bne	5ec8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x938>
    6000:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    6004:	mov	ip, #0
    6008:	mov	r3, #10
    600c:	mov	r2, r5
    6010:	mov	r1, r5
    6014:	mov	r0, r8
    6018:	str	ip, [sp, #56]	; 0x38
    601c:	bl	0 <flatcc_json_parser_set_error>
    6020:	ldr	r3, [sp, #56]	; 0x38
    6024:	mov	r4, r0
    6028:	b	55e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50>
    602c:	mov	r1, r0
    6030:	str	r4, [sp]
    6034:	ldr	r3, [pc, #-1436]	; 5aa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x510>
    6038:	mov	r2, r5
    603c:	mov	r0, r8
    6040:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    6044:	cmp	r5, r0
    6048:	cmpne	r6, r0
    604c:	mov	r6, r0
    6050:	bne	5d90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x800>
    6054:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    6058:	mov	r1, r0
    605c:	str	r4, [sp]
    6060:	ldr	r3, [pc, #-1476]	; 5aa4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x514>
    6064:	mov	r2, r5
    6068:	mov	r0, r8
    606c:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    6070:	cmp	r5, r0
    6074:	cmpne	r6, r0
    6078:	mov	r6, r0
    607c:	bne	5b28 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x598>
    6080:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    6084:	mov	r1, r0
    6088:	str	r4, [sp]
    608c:	ldr	r3, [pc, #-1516]	; 5aa8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x518>
    6090:	mov	r2, r5
    6094:	mov	r0, r8
    6098:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    609c:	cmp	r5, r0
    60a0:	cmpne	r6, r0
    60a4:	mov	r6, r0
    60a8:	bne	5bec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x65c>
    60ac:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>
    60b0:	mov	r1, r0
    60b4:	str	r4, [sp]
    60b8:	ldr	r3, [pc, #-1556]	; 5aac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x51c>
    60bc:	mov	r2, r5
    60c0:	mov	r0, r8
    60c4:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    60c8:	cmp	r5, r0
    60cc:	cmpne	r6, r0
    60d0:	mov	r6, r0
    60d4:	bne	57f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x268>
    60d8:	b	582c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x29c>

000060dc <Fantasy_Character_parse_json_union>:
    60dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    60e0:	sub	sp, sp, #244	; 0xf4
    60e4:	mov	ip, #0
    60e8:	ldr	lr, [sp, #280]	; 0x118
    60ec:	cmp	r3, #9
    60f0:	mov	r5, r0
    60f4:	str	ip, [lr]
    60f8:	mov	r4, r2
    60fc:	beq	61a8 <Fantasy_Character_parse_json_union+0xcc>
    6100:	mov	r6, r1
    6104:	bls	614c <Fantasy_Character_parse_json_union+0x70>
    6108:	cmp	r3, #11
    610c:	beq	61f0 <Fantasy_Character_parse_json_union+0x114>
    6110:	bcc	61a8 <Fantasy_Character_parse_json_union+0xcc>
    6114:	cmp	r3, #255	; 0xff
    6118:	beq	61f0 <Fantasy_Character_parse_json_union+0x114>
    611c:	ldr	r3, [r5, #8]
    6120:	mov	r2, r4
    6124:	tst	r3, #1
    6128:	mov	r1, r6
    612c:	mov	r0, r5
    6130:	bne	6ce0 <Fantasy_Character_parse_json_union+0xc04>
    6134:	mov	r3, #15
    6138:	bl	0 <flatcc_json_parser_set_error>
    613c:	mov	r1, r0
    6140:	mov	r0, r1
    6144:	add	sp, sp, #244	; 0xf4
    6148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    614c:	cmp	r3, #2
    6150:	beq	66fc <Fantasy_Character_parse_json_union+0x620>
    6154:	cmp	r3, #8
    6158:	beq	6200 <Fantasy_Character_parse_json_union+0x124>
    615c:	cmp	r3, ip
    6160:	bne	611c <Fantasy_Character_parse_json_union+0x40>
    6164:	sub	r3, r2, r1
    6168:	cmp	r3, #3
    616c:	ble	618c <Fantasy_Character_parse_json_union+0xb0>
    6170:	ldr	r1, [pc, #1400]	; 66f0 <Fantasy_Character_parse_json_union+0x614>
    6174:	mov	r2, #4
    6178:	mov	r0, r6
    617c:	bl	0 <memcmp>
    6180:	cmp	r0, #0
    6184:	addeq	r1, r6, #4
    6188:	beq	6140 <Fantasy_Character_parse_json_union+0x64>
    618c:	mov	r1, r6
    6190:	mov	r2, r4
    6194:	mov	r0, r5
    6198:	mov	r3, #26
    619c:	bl	0 <flatcc_json_parser_set_error>
    61a0:	mov	r1, r0
    61a4:	b	6140 <Fantasy_Character_parse_json_union+0x64>
    61a8:	ldr	r3, [sp, #280]	; 0x118
    61ac:	bl	363c <Fantasy_BookReader_parse_json_struct>
    61b0:	mov	r1, r0
    61b4:	ldr	r3, [r5, #24]
    61b8:	cmp	r3, #0
    61bc:	bne	6140 <Fantasy_Character_parse_json_union+0x64>
    61c0:	ldr	r3, [sp, #280]	; 0x118
    61c4:	ldr	r3, [r3]
    61c8:	cmp	r3, #0
    61cc:	bne	6140 <Fantasy_Character_parse_json_union+0x64>
    61d0:	mov	r2, r4
    61d4:	mov	r0, r5
    61d8:	mov	r3, #33	; 0x21
    61dc:	bl	0 <flatcc_json_parser_set_error>
    61e0:	mov	r1, r0
    61e4:	mov	r0, r1
    61e8:	add	sp, sp, #244	; 0xf4
    61ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    61f0:	ldr	r3, [sp, #280]	; 0x118
    61f4:	bl	0 <flatcc_json_parser_build_string>
    61f8:	mov	r1, r0
    61fc:	b	61b4 <Fantasy_Character_parse_json_union+0xd8>
    6200:	mov	r2, #2
    6204:	mov	r1, r2
    6208:	ldr	r0, [r0]
    620c:	bl	0 <flatcc_builder_start_struct>
    6210:	mov	r1, r6
    6214:	subs	r3, r0, #0
    6218:	str	r3, [sp, #24]
    621c:	beq	6610 <Fantasy_Character_parse_json_union+0x534>
    6220:	add	r3, sp, #224	; 0xe0
    6224:	mov	r2, r4
    6228:	mov	r0, r5
    622c:	bl	884 <flatcc_json_parser_object_start>
    6230:	ldr	r3, [sp, #224]	; 0xe0
    6234:	cmp	r3, #0
    6238:	mov	r1, r0
    623c:	beq	6bc4 <Fantasy_Character_parse_json_union+0xae8>
    6240:	mov	r7, #0
    6244:	mov	r6, r5
    6248:	b	6388 <Fantasy_Character_parse_json_union+0x2ac>
    624c:	add	r5, r0, #8
    6250:	sub	ip, r4, r5
    6254:	cmp	ip, #8
    6258:	bls	6574 <Fantasy_Character_parse_json_union+0x498>
    625c:	ldrb	r2, [r0, #14]
    6260:	mov	r9, #0
    6264:	lsr	r1, r2, #24
    6268:	lsl	r3, r2, #8
    626c:	str	r1, [sp, #204]	; 0xcc
    6270:	str	r3, [sp, #200]	; 0xc8
    6274:	ldrd	r2, [sp, #200]	; 0xc8
    6278:	orr	r3, r3, r9
    627c:	mov	r9, r3
    6280:	ldrb	r2, [r0, #13]
    6284:	lsr	r1, r2, #16
    6288:	lsl	r3, r2, #16
    628c:	str	r1, [sp, #188]	; 0xbc
    6290:	str	r3, [sp, #184]	; 0xb8
    6294:	ldrd	r2, [sp, #184]	; 0xb8
    6298:	orr	r3, r3, r9
    629c:	mov	r9, r3
    62a0:	ldrb	r2, [r0, #12]
    62a4:	lsr	r1, r2, #8
    62a8:	lsl	r3, r2, #24
    62ac:	str	r1, [sp, #140]	; 0x8c
    62b0:	str	r3, [sp, #136]	; 0x88
    62b4:	ldrd	r2, [sp, #136]	; 0x88
    62b8:	orr	r3, r3, r9
    62bc:	mov	r9, r3
    62c0:	ldrb	r3, [r0, #11]
    62c4:	str	r3, [sp, #156]	; 0x9c
    62c8:	mov	r3, #0
    62cc:	str	r3, [sp, #152]	; 0x98
    62d0:	ldrd	r2, [sp, #152]	; 0x98
    62d4:	orr	r3, r3, r9
    62d8:	mov	r9, r3
    62dc:	ldrb	r2, [r0, #10]
    62e0:	lsl	r3, r2, #8
    62e4:	str	r3, [sp, #116]	; 0x74
    62e8:	mov	r3, #0
    62ec:	str	r3, [sp, #112]	; 0x70
    62f0:	ldrd	r2, [sp, #112]	; 0x70
    62f4:	orr	r3, r3, r9
    62f8:	ldrb	r8, [r0, #9]
    62fc:	lsl	r1, r8, #16
    6300:	str	r1, [sp, #100]	; 0x64
    6304:	mov	r1, #0
    6308:	str	r1, [sp, #96]	; 0x60
    630c:	ldrd	r8, [sp, #96]	; 0x60
    6310:	orr	r9, r9, r3
    6314:	mov	r3, r9
    6318:	ldrb	r0, [r0, #8]
    631c:	mov	r2, #0
    6320:	lsl	r1, r0, #24
    6324:	str	r1, [sp, #60]	; 0x3c
    6328:	mov	r1, #0
    632c:	str	r1, [sp, #56]	; 0x38
    6330:	ldrd	r8, [sp, #56]	; 0x38
    6334:	add	r1, pc, #932	; 0x3a4
    6338:	ldrd	r0, [r1]
    633c:	orr	r9, r9, r3
    6340:	bic	r3, r9, #255	; 0xff
    6344:	cmp	r3, r1
    6348:	cmpeq	r2, r0
    634c:	bne	6358 <Fantasy_Character_parse_json_union+0x27c>
    6350:	cmp	ip, #3
    6354:	bgt	6628 <Fantasy_Character_parse_json_union+0x54c>
    6358:	mov	r1, r5
    635c:	mov	r2, r4
    6360:	mov	r0, r6
    6364:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6368:	mov	r1, r0
    636c:	add	r3, sp, #224	; 0xe0
    6370:	mov	r2, r4
    6374:	mov	r0, r6
    6378:	bl	22c4 <flatcc_json_parser_object_end>
    637c:	ldr	r3, [sp, #224]	; 0xe0
    6380:	cmp	r3, #0
    6384:	beq	6bf0 <Fantasy_Character_parse_json_union+0xb14>
    6388:	cmp	r4, r0
    638c:	beq	64d8 <Fantasy_Character_parse_json_union+0x3fc>
    6390:	ldrb	r3, [r0]
    6394:	cmp	r3, #34	; 0x22
    6398:	moveq	r3, #0
    639c:	addeq	r0, r0, #1
    63a0:	streq	r3, [r6, #12]
    63a4:	beq	63b8 <Fantasy_Character_parse_json_union+0x2dc>
    63a8:	cmp	r3, #46	; 0x2e
    63ac:	movne	r3, #1
    63b0:	strne	r3, [r6, #12]
    63b4:	beq	66c8 <Fantasy_Character_parse_json_union+0x5ec>
    63b8:	sub	r3, r4, r0
    63bc:	cmp	r3, #8
    63c0:	bls	64f0 <Fantasy_Character_parse_json_union+0x414>
    63c4:	ldrb	r8, [r0, #7]
    63c8:	mov	r9, #0
    63cc:	ldrb	r2, [r0, #6]
    63d0:	lsr	r1, r2, #24
    63d4:	lsl	r3, r2, #8
    63d8:	str	r1, [sp, #132]	; 0x84
    63dc:	str	r3, [sp, #128]	; 0x80
    63e0:	ldrd	r2, [sp, #128]	; 0x80
    63e4:	orr	r2, r2, r8
    63e8:	orr	r3, r3, r9
    63ec:	ldrb	r8, [r0, #5]
    63f0:	lsr	r1, r8, #16
    63f4:	str	r1, [sp, #84]	; 0x54
    63f8:	lsl	r1, r8, #16
    63fc:	str	r1, [sp, #80]	; 0x50
    6400:	ldrd	r8, [sp, #80]	; 0x50
    6404:	orr	r8, r8, r2
    6408:	orr	r9, r9, r3
    640c:	mov	r2, r8
    6410:	mov	r3, r9
    6414:	ldrb	r8, [r0, #4]
    6418:	lsr	r1, r8, #8
    641c:	str	r1, [sp, #36]	; 0x24
    6420:	lsl	r1, r8, #24
    6424:	str	r1, [sp, #32]
    6428:	ldrd	r8, [sp, #32]
    642c:	orr	r8, r8, r2
    6430:	orr	r9, r9, r3
    6434:	mov	r2, r8
    6438:	mov	r3, r9
    643c:	ldrb	r1, [r0, #3]
    6440:	str	r1, [sp, #52]	; 0x34
    6444:	mov	r1, #0
    6448:	str	r1, [sp, #48]	; 0x30
    644c:	ldrd	r8, [sp, #48]	; 0x30
    6450:	orr	r8, r8, r2
    6454:	orr	r9, r9, r3
    6458:	mov	r2, r8
    645c:	mov	r3, r9
    6460:	ldrb	r8, [r0, #2]
    6464:	lsl	r1, r8, #8
    6468:	str	r1, [sp, #20]
    646c:	mov	r1, #0
    6470:	str	r1, [sp, #16]
    6474:	ldrd	r8, [sp, #16]
    6478:	orr	r8, r8, r2
    647c:	orr	r9, r9, r3
    6480:	mov	r2, r8
    6484:	mov	r3, r9
    6488:	ldrb	r8, [r0, #1]
    648c:	lsl	r1, r8, #16
    6490:	str	r1, [sp, #12]
    6494:	mov	r1, #0
    6498:	str	r1, [sp, #8]
    649c:	ldrd	r8, [sp, #8]
    64a0:	orr	r8, r8, r2
    64a4:	orr	r9, r9, r3
    64a8:	mov	r2, r8
    64ac:	mov	r3, r9
    64b0:	ldrb	r8, [r0]
    64b4:	mov	sl, #0
    64b8:	orr	r2, r2, sl
    64bc:	lsl	fp, r8, #24
    64c0:	add	r9, pc, #544	; 0x220
    64c4:	ldrd	r8, [r9]
    64c8:	orr	r3, r3, fp
    64cc:	cmp	r3, r9
    64d0:	cmpeq	r2, r8
    64d4:	beq	624c <Fantasy_Character_parse_json_union+0x170>
    64d8:	mov	r1, r0
    64dc:	mov	r2, r4
    64e0:	mov	r0, r6
    64e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    64e8:	mov	r1, r0
    64ec:	b	636c <Fantasy_Character_parse_json_union+0x290>
    64f0:	sub	r3, r3, #1
    64f4:	cmp	r3, #7
    64f8:	ldrls	pc, [pc, r3, lsl #2]
    64fc:	b	64d8 <Fantasy_Character_parse_json_union+0x3fc>
    6500:	.word	0x00006568
    6504:	.word	0x0000655c
    6508:	.word	0x00006550
    650c:	.word	0x00006544
    6510:	.word	0x00006538
    6514:	.word	0x0000652c
    6518:	.word	0x00006520
    651c:	.word	0x000063c4
    6520:	mov	r8, r7
    6524:	mov	r9, #0
    6528:	b	63cc <Fantasy_Character_parse_json_union+0x2f0>
    652c:	mov	r2, r7
    6530:	mov	r3, #0
    6534:	b	63ec <Fantasy_Character_parse_json_union+0x310>
    6538:	mov	r2, r7
    653c:	mov	r3, #0
    6540:	b	6414 <Fantasy_Character_parse_json_union+0x338>
    6544:	mov	r2, r7
    6548:	mov	r3, #0
    654c:	b	643c <Fantasy_Character_parse_json_union+0x360>
    6550:	mov	r2, r7
    6554:	mov	r3, #0
    6558:	b	6460 <Fantasy_Character_parse_json_union+0x384>
    655c:	mov	r2, r7
    6560:	mov	r3, #0
    6564:	b	6488 <Fantasy_Character_parse_json_union+0x3ac>
    6568:	mov	r2, r7
    656c:	mov	r3, #0
    6570:	b	64b0 <Fantasy_Character_parse_json_union+0x3d4>
    6574:	sub	r3, ip, #1
    6578:	cmp	r3, #7
    657c:	ldrls	pc, [pc, r3, lsl #2]
    6580:	b	6358 <Fantasy_Character_parse_json_union+0x27c>
    6584:	.word	0x000065cc
    6588:	.word	0x000065c4
    658c:	.word	0x000065bc
    6590:	.word	0x000065b4
    6594:	.word	0x000065ac
    6598:	.word	0x000065a4
    659c:	.word	0x0000625c
    65a0:	.word	0x0000625c
    65a4:	mov	r9, #0
    65a8:	b	6280 <Fantasy_Character_parse_json_union+0x1a4>
    65ac:	mov	r9, #0
    65b0:	b	62a0 <Fantasy_Character_parse_json_union+0x1c4>
    65b4:	mov	r9, #0
    65b8:	b	62c0 <Fantasy_Character_parse_json_union+0x1e4>
    65bc:	mov	r9, #0
    65c0:	b	62dc <Fantasy_Character_parse_json_union+0x200>
    65c4:	mov	r3, #0
    65c8:	b	62f8 <Fantasy_Character_parse_json_union+0x21c>
    65cc:	mov	r3, #0
    65d0:	b	6318 <Fantasy_Character_parse_json_union+0x23c>
    65d4:	mov	r4, r0
    65d8:	add	r3, sp, #224	; 0xe0
    65dc:	str	r3, [sp]
    65e0:	mov	r2, fp
    65e4:	ldr	r3, [pc, #264]	; 66f4 <Fantasy_Character_parse_json_union+0x618>
    65e8:	mov	r1, r4
    65ec:	mov	r0, r9
    65f0:	bl	fec <flatcc_json_parser_symbolic_int32>
    65f4:	cmp	fp, r0
    65f8:	cmpne	r0, r4
    65fc:	mov	r6, r0
    6600:	bne	6d9c <Fantasy_Character_parse_json_union+0xcc0>
    6604:	mov	r5, r9
    6608:	mov	r4, fp
    660c:	mov	r1, r6
    6610:	mov	r3, #33	; 0x21
    6614:	mov	r2, r4
    6618:	mov	r0, r5
    661c:	bl	0 <flatcc_json_parser_set_error>
    6620:	mov	r1, r0
    6624:	b	61b4 <Fantasy_Character_parse_json_union+0xd8>
    6628:	mov	r3, #3
    662c:	mov	r2, r4
    6630:	mov	r1, r5
    6634:	mov	r0, r6
    6638:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    663c:	cmp	r5, r0
    6640:	str	r0, [sp, #40]	; 0x28
    6644:	beq	6358 <Fantasy_Character_parse_json_union+0x27c>
    6648:	ldrd	r2, [sp, #56]	; 0x38
    664c:	mov	r1, #0
    6650:	cmp	r4, r0
    6654:	mov	r5, r0
    6658:	strh	r2, [sp, #220]	; 0xdc
    665c:	str	r7, [sp, #232]	; 0xe8
    6660:	str	r1, [sp, #236]	; 0xec
    6664:	str	r2, [sp, #228]	; 0xe4
    6668:	beq	6b7c <Fantasy_Character_parse_json_union+0xaa0>
    666c:	add	r3, sp, #232	; 0xe8
    6670:	mov	r1, r0
    6674:	str	r3, [sp]
    6678:	mov	r2, r4
    667c:	add	r3, sp, #228	; 0xe4
    6680:	mov	r0, r6
    6684:	bl	0 <flatcc_json_parser_integer>
    6688:	cmp	r5, r0
    668c:	mov	r1, r0
    6690:	beq	6b7c <Fantasy_Character_parse_json_union+0xaa0>
    6694:	ldr	r3, [sp, #228]	; 0xe4
    6698:	cmp	r3, #0
    669c:	bne	6d54 <Fantasy_Character_parse_json_union+0xc78>
    66a0:	ldrd	r2, [sp, #232]	; 0xe8
    66a4:	ldr	r8, [pc, #76]	; 66f8 <Fantasy_Character_parse_json_union+0x61c>
    66a8:	mov	r9, #0
    66ac:	cmp	r3, r9
    66b0:	cmpeq	r2, r8
    66b4:	uxthls	r2, r2
    66b8:	bhi	6da4 <Fantasy_Character_parse_json_union+0xcc8>
    66bc:	ldr	r3, [sp, #24]
    66c0:	strh	r2, [r3]
    66c4:	b	636c <Fantasy_Character_parse_json_union+0x290>
    66c8:	mov	r1, r0
    66cc:	mov	r3, #5
    66d0:	mov	r2, r4
    66d4:	mov	r0, r6
    66d8:	bl	0 <flatcc_json_parser_set_error>
    66dc:	b	63b8 <Fantasy_Character_parse_json_union+0x2dc>
    66e0:	.word	0x00000000
    66e4:	.word	0x67746800
    66e8:	.word	0x5f6c656e
    66ec:	.word	0x68616972
    66f0:	.word	0x00000000
    66f4:	.word	0x0000006c
    66f8:	.word	0x0000ffff
    66fc:	mov	r1, #1
    6700:	ldr	r0, [r0]
    6704:	bl	0 <flatcc_builder_start_table>
    6708:	cmp	r0, #0
    670c:	bne	660c <Fantasy_Character_parse_json_union+0x530>
    6710:	mov	r1, r6
    6714:	add	r3, sp, #220	; 0xdc
    6718:	mov	r2, r4
    671c:	mov	r0, r5
    6720:	bl	884 <flatcc_json_parser_object_start>
    6724:	ldr	r3, [sp, #220]	; 0xdc
    6728:	cmp	r3, #0
    672c:	mov	r6, r0
    6730:	beq	6cf4 <Fantasy_Character_parse_json_union+0xc18>
    6734:	mov	sl, #0
    6738:	strd	r8, [sp, #8]
    673c:	mov	r7, sl
    6740:	mov	fp, r4
    6744:	mov	r9, r5
    6748:	b	6a1c <Fantasy_Character_parse_json_union+0x940>
    674c:	ldrb	r0, [r6, #7]
    6750:	mov	r1, #0
    6754:	ldrb	r2, [r6, #6]
    6758:	lsr	ip, r2, #24
    675c:	lsl	r3, r2, #8
    6760:	str	ip, [sp, #164]	; 0xa4
    6764:	str	r3, [sp, #160]	; 0xa0
    6768:	ldrd	r2, [sp, #160]	; 0xa0
    676c:	orr	r2, r2, r0
    6770:	orr	r3, r3, r1
    6774:	ldrb	r0, [r6, #5]
    6778:	lsr	ip, r0, #16
    677c:	lsl	r1, r0, #16
    6780:	str	ip, [sp, #108]	; 0x6c
    6784:	str	r1, [sp, #104]	; 0x68
    6788:	ldrd	r0, [sp, #104]	; 0x68
    678c:	orr	r0, r0, r2
    6790:	orr	r1, r1, r3
    6794:	mov	r2, r0
    6798:	mov	r3, r1
    679c:	ldrb	r0, [r6, #4]
    67a0:	lsr	ip, r0, #8
    67a4:	lsl	r1, r0, #24
    67a8:	str	ip, [sp, #68]	; 0x44
    67ac:	str	r1, [sp, #64]	; 0x40
    67b0:	ldrd	r0, [sp, #64]	; 0x40
    67b4:	orr	r0, r0, r2
    67b8:	orr	r1, r1, r3
    67bc:	mov	r2, r0
    67c0:	mov	r3, r1
    67c4:	ldrb	r1, [r6, #3]
    67c8:	str	r1, [sp, #76]	; 0x4c
    67cc:	mov	r1, #0
    67d0:	str	r1, [sp, #72]	; 0x48
    67d4:	ldrd	r0, [sp, #72]	; 0x48
    67d8:	orr	r0, r0, r2
    67dc:	orr	r1, r1, r3
    67e0:	mov	r2, r0
    67e4:	mov	r3, r1
    67e8:	ldrb	r0, [r6, #2]
    67ec:	lsl	r1, r0, #8
    67f0:	str	r1, [sp, #44]	; 0x2c
    67f4:	mov	r1, #0
    67f8:	str	r1, [sp, #40]	; 0x28
    67fc:	ldrd	r0, [sp, #40]	; 0x28
    6800:	orr	r0, r0, r2
    6804:	orr	r1, r1, r3
    6808:	mov	r2, r0
    680c:	mov	r3, r1
    6810:	ldrb	r0, [r6, #1]
    6814:	lsl	r1, r0, #16
    6818:	str	r1, [sp, #28]
    681c:	mov	r1, #0
    6820:	str	r1, [sp, #24]
    6824:	ldrd	r0, [sp, #24]
    6828:	orr	r0, r0, r2
    682c:	orr	r1, r1, r3
    6830:	mov	r2, r0
    6834:	mov	r3, r1
    6838:	ldrb	r0, [r6]
    683c:	lsl	r1, r0, #24
    6840:	str	r1, [sp, #12]
    6844:	mov	r1, #0
    6848:	str	r1, [sp, #8]
    684c:	ldrd	r0, [sp, #8]
    6850:	orr	r0, r0, r2
    6854:	orr	r1, r1, r3
    6858:	mov	r2, r0
    685c:	mov	r3, r1
    6860:	add	r1, pc, #920	; 0x398
    6864:	ldrd	r0, [r1]
    6868:	cmp	r3, r1
    686c:	cmpeq	r2, r0
    6870:	bne	69e4 <Fantasy_Character_parse_json_union+0x908>
    6874:	add	r1, r6, #8
    6878:	sub	r3, fp, r1
    687c:	cmp	r3, #8
    6880:	bls	6adc <Fantasy_Character_parse_json_union+0xa00>
    6884:	ldrb	r4, [r6, #15]
    6888:	mov	r5, #0
    688c:	ldrb	r2, [r6, #14]
    6890:	lsr	r0, r2, #24
    6894:	lsl	r3, r2, #8
    6898:	str	r0, [sp, #212]	; 0xd4
    689c:	str	r3, [sp, #208]	; 0xd0
    68a0:	ldrd	r2, [sp, #208]	; 0xd0
    68a4:	orr	r2, r2, r4
    68a8:	orr	r3, r3, r5
    68ac:	mov	r4, r2
    68b0:	mov	r5, r3
    68b4:	ldrb	r2, [r6, #13]
    68b8:	lsr	r0, r2, #16
    68bc:	lsl	r3, r2, #16
    68c0:	str	r0, [sp, #196]	; 0xc4
    68c4:	str	r3, [sp, #192]	; 0xc0
    68c8:	ldrd	r2, [sp, #192]	; 0xc0
    68cc:	orr	r2, r2, r4
    68d0:	orr	r3, r3, r5
    68d4:	mov	r4, r2
    68d8:	mov	r5, r3
    68dc:	ldrb	r2, [r6, #12]
    68e0:	lsr	r0, r2, #8
    68e4:	lsl	r3, r2, #24
    68e8:	str	r0, [sp, #172]	; 0xac
    68ec:	str	r3, [sp, #168]	; 0xa8
    68f0:	ldrd	r2, [sp, #168]	; 0xa8
    68f4:	orr	r2, r2, r4
    68f8:	orr	r3, r3, r5
    68fc:	ldrb	r0, [r6, #11]
    6900:	str	r0, [sp, #180]	; 0xb4
    6904:	mov	r0, #0
    6908:	str	r0, [sp, #176]	; 0xb0
    690c:	ldrd	r4, [sp, #176]	; 0xb0
    6910:	orr	r4, r4, r2
    6914:	orr	r5, r5, r3
    6918:	mov	r2, r4
    691c:	mov	r3, r5
    6920:	ldrb	r4, [r6, #10]
    6924:	lsl	r0, r4, #8
    6928:	str	r0, [sp, #148]	; 0x94
    692c:	mov	r0, #0
    6930:	str	r0, [sp, #144]	; 0x90
    6934:	ldrd	r4, [sp, #144]	; 0x90
    6938:	orr	r4, r4, r2
    693c:	orr	r5, r5, r3
    6940:	mov	r2, r4
    6944:	mov	r3, r5
    6948:	ldrb	r4, [r6, #9]
    694c:	lsl	r0, r4, #16
    6950:	str	r0, [sp, #124]	; 0x7c
    6954:	mov	r0, #0
    6958:	str	r0, [sp, #120]	; 0x78
    695c:	ldrd	r4, [sp, #120]	; 0x78
    6960:	orr	r4, r4, r2
    6964:	orr	r5, r5, r3
    6968:	mov	r2, r4
    696c:	mov	r3, r5
    6970:	ldrb	r4, [r6, #8]
    6974:	lsl	r0, r4, #24
    6978:	str	r0, [sp, #92]	; 0x5c
    697c:	mov	r0, #0
    6980:	str	r0, [sp, #88]	; 0x58
    6984:	ldrd	r4, [sp, #88]	; 0x58
    6988:	orr	r4, r4, r2
    698c:	orr	r5, r5, r3
    6990:	mov	r2, r4
    6994:	mov	r3, r5
    6998:	add	r5, pc, #616	; 0x268
    699c:	ldrd	r4, [r5]
    69a0:	cmp	r3, r5
    69a4:	cmpeq	r2, r4
    69a8:	bne	69e8 <Fantasy_Character_parse_json_union+0x90c>
    69ac:	add	r6, r6, #16
    69b0:	mov	r0, r6
    69b4:	mov	r1, fp
    69b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    69bc:	add	r3, pc, #588	; 0x24c
    69c0:	ldrd	r2, [r3]
    69c4:	mov	r0, #0
    69c8:	bic	r1, r1, #255	; 0xff
    69cc:	cmp	r1, r3
    69d0:	cmpeq	r0, r2
    69d4:	bne	69e4 <Fantasy_Character_parse_json_union+0x908>
    69d8:	sub	r3, fp, r6
    69dc:	cmp	r3, #3
    69e0:	bgt	6c1c <Fantasy_Character_parse_json_union+0xb40>
    69e4:	mov	r1, r6
    69e8:	mov	r2, fp
    69ec:	mov	r0, r9
    69f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    69f4:	mov	r6, r0
    69f8:	mov	r1, r6
    69fc:	add	r3, sp, #220	; 0xdc
    6a00:	mov	r2, fp
    6a04:	mov	r0, r9
    6a08:	bl	22c4 <flatcc_json_parser_object_end>
    6a0c:	ldr	r3, [sp, #220]	; 0xdc
    6a10:	cmp	r3, #0
    6a14:	mov	r6, r0
    6a18:	beq	6cec <Fantasy_Character_parse_json_union+0xc10>
    6a1c:	cmp	fp, r6
    6a20:	beq	69e4 <Fantasy_Character_parse_json_union+0x908>
    6a24:	ldrb	r3, [r6]
    6a28:	cmp	r3, #34	; 0x22
    6a2c:	moveq	r3, #0
    6a30:	addeq	r6, r6, #1
    6a34:	streq	r3, [r9, #12]
    6a38:	beq	6a4c <Fantasy_Character_parse_json_union+0x970>
    6a3c:	cmp	r3, #46	; 0x2e
    6a40:	movne	r3, #1
    6a44:	strne	r3, [r9, #12]
    6a48:	beq	6b60 <Fantasy_Character_parse_json_union+0xa84>
    6a4c:	sub	r3, fp, r6
    6a50:	cmp	r3, #8
    6a54:	bhi	674c <Fantasy_Character_parse_json_union+0x670>
    6a58:	sub	r3, r3, #1
    6a5c:	cmp	r3, #7
    6a60:	ldrls	pc, [pc, r3, lsl #2]
    6a64:	b	69e4 <Fantasy_Character_parse_json_union+0x908>
    6a68:	.word	0x00006ad0
    6a6c:	.word	0x00006ac4
    6a70:	.word	0x00006ab8
    6a74:	.word	0x00006aac
    6a78:	.word	0x00006aa0
    6a7c:	.word	0x00006a94
    6a80:	.word	0x00006a88
    6a84:	.word	0x0000674c
    6a88:	mov	r0, sl
    6a8c:	mov	r1, r7
    6a90:	b	6754 <Fantasy_Character_parse_json_union+0x678>
    6a94:	mov	r2, sl
    6a98:	mov	r3, r7
    6a9c:	b	6774 <Fantasy_Character_parse_json_union+0x698>
    6aa0:	mov	r2, sl
    6aa4:	mov	r3, r7
    6aa8:	b	679c <Fantasy_Character_parse_json_union+0x6c0>
    6aac:	mov	r2, sl
    6ab0:	mov	r3, r7
    6ab4:	b	67c4 <Fantasy_Character_parse_json_union+0x6e8>
    6ab8:	mov	r2, sl
    6abc:	mov	r3, r7
    6ac0:	b	67e8 <Fantasy_Character_parse_json_union+0x70c>
    6ac4:	mov	r2, sl
    6ac8:	mov	r3, r7
    6acc:	b	6810 <Fantasy_Character_parse_json_union+0x734>
    6ad0:	mov	r2, sl
    6ad4:	mov	r3, r7
    6ad8:	b	6838 <Fantasy_Character_parse_json_union+0x75c>
    6adc:	sub	r3, r3, #1
    6ae0:	cmp	r3, #7
    6ae4:	ldrls	pc, [pc, r3, lsl #2]
    6ae8:	b	69e8 <Fantasy_Character_parse_json_union+0x90c>
    6aec:	.word	0x00006b54
    6af0:	.word	0x00006b48
    6af4:	.word	0x00006b3c
    6af8:	.word	0x00006b30
    6afc:	.word	0x00006b24
    6b00:	.word	0x00006b18
    6b04:	.word	0x00006b0c
    6b08:	.word	0x00006884
    6b0c:	mov	r4, sl
    6b10:	mov	r5, r7
    6b14:	b	688c <Fantasy_Character_parse_json_union+0x7b0>
    6b18:	mov	r4, sl
    6b1c:	mov	r5, r7
    6b20:	b	68b4 <Fantasy_Character_parse_json_union+0x7d8>
    6b24:	mov	r4, sl
    6b28:	mov	r5, r7
    6b2c:	b	68dc <Fantasy_Character_parse_json_union+0x800>
    6b30:	mov	r2, sl
    6b34:	mov	r3, r7
    6b38:	b	68fc <Fantasy_Character_parse_json_union+0x820>
    6b3c:	mov	r2, sl
    6b40:	mov	r3, r7
    6b44:	b	6920 <Fantasy_Character_parse_json_union+0x844>
    6b48:	mov	r2, sl
    6b4c:	mov	r3, r7
    6b50:	b	6948 <Fantasy_Character_parse_json_union+0x86c>
    6b54:	mov	r2, sl
    6b58:	mov	r3, r7
    6b5c:	b	6970 <Fantasy_Character_parse_json_union+0x894>
    6b60:	mov	r1, r6
    6b64:	mov	r3, #5
    6b68:	mov	r2, fp
    6b6c:	mov	r0, r9
    6b70:	bl	0 <flatcc_json_parser_set_error>
    6b74:	mov	r6, r0
    6b78:	b	6a4c <Fantasy_Character_parse_json_union+0x970>
    6b7c:	ldr	r5, [sp, #40]	; 0x28
    6b80:	add	r3, sp, #220	; 0xdc
    6b84:	str	r3, [sp]
    6b88:	mov	r1, r5
    6b8c:	ldr	r3, [pc, #132]	; 6c18 <Fantasy_Character_parse_json_union+0xb3c>
    6b90:	mov	r2, r4
    6b94:	mov	r0, r6
    6b98:	bl	1444 <flatcc_json_parser_symbolic_uint16>
    6b9c:	cmp	r4, r0
    6ba0:	cmpne	r0, r5
    6ba4:	mov	r1, r0
    6ba8:	bne	6d74 <Fantasy_Character_parse_json_union+0xc98>
    6bac:	mov	r3, #33	; 0x21
    6bb0:	mov	r2, r4
    6bb4:	mov	r0, r6
    6bb8:	bl	0 <flatcc_json_parser_set_error>
    6bbc:	mov	r5, r6
    6bc0:	mov	r1, r0
    6bc4:	cmp	r4, r1
    6bc8:	beq	6610 <Fantasy_Character_parse_json_union+0x534>
    6bcc:	ldr	r0, [r5]
    6bd0:	str	r1, [sp, #8]
    6bd4:	bl	0 <flatcc_builder_end_struct>
    6bd8:	ldr	r3, [sp, #280]	; 0x118
    6bdc:	ldr	r1, [sp, #8]
    6be0:	cmp	r0, #0
    6be4:	str	r0, [r3]
    6be8:	beq	6610 <Fantasy_Character_parse_json_union+0x534>
    6bec:	b	6140 <Fantasy_Character_parse_json_union+0x64>
    6bf0:	mov	r1, r0
    6bf4:	mov	r5, r6
    6bf8:	b	6bc4 <Fantasy_Character_parse_json_union+0xae8>
    6bfc:	nop			; (mov r0, r0)
    6c00:	.word	0x645f6174
    6c04:	.word	0x73776f72
    6c08:	.word	0x5f64616d
    6c0c:	.word	0x7461636b
    6c10:	.word	0x00000000
    6c14:	.word	0x61676500
    6c18:	.word	0x00000078
    6c1c:	mov	r3, #3
    6c20:	mov	r2, fp
    6c24:	mov	r1, r6
    6c28:	mov	r0, r9
    6c2c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    6c30:	cmp	r6, r0
    6c34:	mov	r4, r0
    6c38:	beq	69e4 <Fantasy_Character_parse_json_union+0x908>
    6c3c:	ldrd	r2, [sp, #88]	; 0x58
    6c40:	cmp	fp, r0
    6c44:	str	sl, [sp, #232]	; 0xe8
    6c48:	str	r2, [sp, #224]	; 0xe0
    6c4c:	str	r7, [sp, #236]	; 0xec
    6c50:	str	r2, [sp, #228]	; 0xe4
    6c54:	beq	65d8 <Fantasy_Character_parse_json_union+0x4fc>
    6c58:	add	r3, sp, #232	; 0xe8
    6c5c:	str	r3, [sp]
    6c60:	mov	r1, r0
    6c64:	add	r3, sp, #228	; 0xe4
    6c68:	mov	r2, fp
    6c6c:	mov	r0, r9
    6c70:	bl	0 <flatcc_json_parser_integer>
    6c74:	cmp	r4, r0
    6c78:	mov	r6, r0
    6c7c:	beq	65d4 <Fantasy_Character_parse_json_union+0x4f8>
    6c80:	ldr	r3, [sp, #228]	; 0xe4
    6c84:	ldrd	r0, [sp, #232]	; 0xe8
    6c88:	cmp	r3, #0
    6c8c:	beq	6d20 <Fantasy_Character_parse_json_union+0xc44>
    6c90:	cmp	r1, #0
    6c94:	cmpeq	r0, #-2147483648	; 0x80000000
    6c98:	rsbls	r0, r0, #0
    6c9c:	strls	r0, [sp, #224]	; 0xe0
    6ca0:	bhi	6d7c <Fantasy_Character_parse_json_union+0xca0>
    6ca4:	cmp	r0, #0
    6ca8:	bne	6cb8 <Fantasy_Character_parse_json_union+0xbdc>
    6cac:	ldr	r3, [r9, #8]
    6cb0:	tst	r3, #2
    6cb4:	beq	69f8 <Fantasy_Character_parse_json_union+0x91c>
    6cb8:	mov	r3, #4
    6cbc:	mov	r2, r3
    6cc0:	mov	r1, #0
    6cc4:	ldr	r0, [r9]
    6cc8:	bl	0 <flatcc_builder_table_add>
    6ccc:	cmp	r0, #0
    6cd0:	beq	6604 <Fantasy_Character_parse_json_union+0x528>
    6cd4:	ldr	r3, [sp, #224]	; 0xe0
    6cd8:	str	r3, [r0]
    6cdc:	b	69f8 <Fantasy_Character_parse_json_union+0x91c>
    6ce0:	bl	0 <flatcc_json_parser_generic_json>
    6ce4:	mov	r1, r0
    6ce8:	b	6140 <Fantasy_Character_parse_json_union+0x64>
    6cec:	mov	r5, r9
    6cf0:	mov	r4, fp
    6cf4:	ldr	r3, [r5, #24]
    6cf8:	cmp	r3, #0
    6cfc:	bne	660c <Fantasy_Character_parse_json_union+0x530>
    6d00:	ldr	r0, [r5]
    6d04:	bl	0 <flatcc_builder_end_table>
    6d08:	ldr	r3, [sp, #280]	; 0x118
    6d0c:	cmp	r0, #0
    6d10:	str	r0, [r3]
    6d14:	beq	660c <Fantasy_Character_parse_json_union+0x530>
    6d18:	mov	r1, r6
    6d1c:	b	61b4 <Fantasy_Character_parse_json_union+0xd8>
    6d20:	mov	r3, #0
    6d24:	cmp	r1, r3
    6d28:	mvn	r2, #-2147483648	; 0x80000000
    6d2c:	cmpeq	r0, r2
    6d30:	strls	r0, [sp, #224]	; 0xe0
    6d34:	bls	6ca4 <Fantasy_Character_parse_json_union+0xbc8>
    6d38:	mov	r1, r6
    6d3c:	mov	r3, #7
    6d40:	mov	r2, fp
    6d44:	mov	r0, r9
    6d48:	bl	0 <flatcc_json_parser_set_error>
    6d4c:	mov	r6, r0
    6d50:	b	6d94 <Fantasy_Character_parse_json_union+0xcb8>
    6d54:	mov	r3, #8
    6d58:	mov	r2, r4
    6d5c:	mov	r0, r6
    6d60:	bl	0 <flatcc_json_parser_set_error>
    6d64:	mov	r1, r0
    6d68:	ldr	r3, [sp, #40]	; 0x28
    6d6c:	cmp	r3, r1
    6d70:	beq	6b7c <Fantasy_Character_parse_json_union+0xaa0>
    6d74:	ldrh	r2, [sp, #220]	; 0xdc
    6d78:	b	66bc <Fantasy_Character_parse_json_union+0x5e0>
    6d7c:	mov	r1, r6
    6d80:	mov	r3, #8
    6d84:	mov	r2, fp
    6d88:	mov	r0, r9
    6d8c:	bl	0 <flatcc_json_parser_set_error>
    6d90:	mov	r6, r0
    6d94:	cmp	r4, r6
    6d98:	beq	65d8 <Fantasy_Character_parse_json_union+0x4fc>
    6d9c:	ldr	r0, [sp, #224]	; 0xe0
    6da0:	b	6ca4 <Fantasy_Character_parse_json_union+0xbc8>
    6da4:	mov	r3, #7
    6da8:	mov	r2, r4
    6dac:	mov	r0, r6
    6db0:	bl	0 <flatcc_json_parser_set_error>
    6db4:	mov	r1, r0
    6db8:	b	6d68 <Fantasy_Character_parse_json_union+0xc8c>

00006dbc <MyGame_Example_Monster_parse_json_table>:
    6dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6dc0:	vpush	{d8-d9}
    6dc4:	mov	sl, r0
    6dc8:	mov	r0, r3
    6dcc:	mov	fp, r1
    6dd0:	sub	sp, sp, #124	; 0x7c
    6dd4:	mov	r1, #36	; 0x24
    6dd8:	str	r3, [sp, #68]	; 0x44
    6ddc:	mov	r3, #0
    6de0:	str	r3, [r0]
    6de4:	ldr	r0, [sl]
    6de8:	mov	r9, r2
    6dec:	bl	0 <flatcc_builder_start_table>
    6df0:	cmp	r0, #0
    6df4:	bne	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6df8:	add	r3, sp, #92	; 0x5c
    6dfc:	str	r3, [sp]
    6e00:	mov	r2, r9
    6e04:	mov	r3, #1
    6e08:	mov	r1, fp
    6e0c:	mov	r0, sl
    6e10:	bl	0 <flatcc_json_parser_prepare_unions>
    6e14:	cmp	r9, r0
    6e18:	beq	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6e1c:	mov	r1, fp
    6e20:	add	r3, sp, #84	; 0x54
    6e24:	mov	r2, r9
    6e28:	mov	r0, sl
    6e2c:	bl	884 <flatcc_json_parser_object_start>
    6e30:	ldr	r3, [sp, #84]	; 0x54
    6e34:	cmp	r3, #0
    6e38:	mov	fp, r0
    6e3c:	beq	6f54 <MyGame_Example_Monster_parse_json_table+0x198>
    6e40:	mov	r3, r9
    6e44:	mov	r9, sl
    6e48:	mov	sl, r3
    6e4c:	cmp	sl, fp
    6e50:	beq	6e7c <MyGame_Example_Monster_parse_json_table+0xc0>
    6e54:	ldrb	r3, [fp]
    6e58:	cmp	r3, #34	; 0x22
    6e5c:	moveq	r3, #0
    6e60:	addeq	fp, fp, #1
    6e64:	streq	r3, [r9, #12]
    6e68:	beq	6e7c <MyGame_Example_Monster_parse_json_table+0xc0>
    6e6c:	cmp	r3, #46	; 0x2e
    6e70:	movne	r3, #1
    6e74:	strne	r3, [r9, #12]
    6e78:	beq	7418 <MyGame_Example_Monster_parse_json_table+0x65c>
    6e7c:	mov	r1, sl
    6e80:	mov	r0, fp
    6e84:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6e88:	add	r3, pc, #872	; 0x368
    6e8c:	ldrd	r2, [r3]
    6e90:	cmp	r1, r3
    6e94:	cmpeq	r0, r2
    6e98:	mov	r4, r0
    6e9c:	mov	r5, r1
    6ea0:	bhi	6fac <MyGame_Example_Monster_parse_json_table+0x1f0>
    6ea4:	add	r3, pc, #852	; 0x354
    6ea8:	ldrd	r2, [r3]
    6eac:	cmp	r1, r3
    6eb0:	cmpeq	r0, r2
    6eb4:	bhi	7028 <MyGame_Example_Monster_parse_json_table+0x26c>
    6eb8:	add	r3, pc, #840	; 0x348
    6ebc:	ldrd	r2, [r3]
    6ec0:	cmp	r1, r3
    6ec4:	cmpeq	r0, r2
    6ec8:	bhi	70dc <MyGame_Example_Monster_parse_json_table+0x320>
    6ecc:	add	r3, pc, #828	; 0x33c
    6ed0:	ldrd	r2, [r3]
    6ed4:	and	r4, r0, #-16777216	; 0xff000000
    6ed8:	cmp	r1, r3
    6edc:	cmpeq	r4, r2
    6ee0:	beq	7928 <MyGame_Example_Monster_parse_json_table+0xb6c>
    6ee4:	add	r3, pc, #812	; 0x32c
    6ee8:	ldrd	r2, [r3]
    6eec:	cmp	r1, r3
    6ef0:	cmpeq	r4, r2
    6ef4:	beq	7584 <MyGame_Example_Monster_parse_json_table+0x7c8>
    6ef8:	mov	r1, fp
    6efc:	mov	r2, sl
    6f00:	mov	r0, r9
    6f04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f08:	mov	fp, r0
    6f0c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    6f10:	mov	r1, fp
    6f14:	mov	r2, sl
    6f18:	mov	r0, r9
    6f1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f20:	mov	fp, r0
    6f24:	mov	r1, fp
    6f28:	add	r3, sp, #84	; 0x54
    6f2c:	mov	r2, sl
    6f30:	mov	r0, r9
    6f34:	bl	22c4 <flatcc_json_parser_object_end>
    6f38:	ldr	r3, [sp, #84]	; 0x54
    6f3c:	cmp	r3, #0
    6f40:	mov	fp, r0
    6f44:	bne	6e4c <MyGame_Example_Monster_parse_json_table+0x90>
    6f48:	mov	r3, sl
    6f4c:	mov	sl, r9
    6f50:	mov	r9, r3
    6f54:	ldr	r3, [sl, #24]
    6f58:	cmp	r3, #0
    6f5c:	bne	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6f60:	mov	r1, #3
    6f64:	ldr	r0, [sl]
    6f68:	bl	0 <flatcc_builder_check_required_field>
    6f6c:	mov	r1, fp
    6f70:	cmp	r0, #0
    6f74:	bne	9cf4 <MyGame_Example_Monster_parse_json_table+0x2f38>
    6f78:	mov	r3, #29
    6f7c:	mov	r2, r9
    6f80:	mov	r0, sl
    6f84:	bl	0 <flatcc_json_parser_set_error>
    6f88:	mov	fp, r0
    6f8c:	mov	r2, r9
    6f90:	mov	r1, fp
    6f94:	mov	r0, sl
    6f98:	mov	r3, #33	; 0x21
    6f9c:	bl	0 <flatcc_json_parser_set_error>
    6fa0:	add	sp, sp, #124	; 0x7c
    6fa4:	vpop	{d8-d9}
    6fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6fac:	add	r3, pc, #620	; 0x26c
    6fb0:	ldrd	r2, [r3]
    6fb4:	cmp	r1, r3
    6fb8:	cmpeq	r0, r2
    6fbc:	bhi	7080 <MyGame_Example_Monster_parse_json_table+0x2c4>
    6fc0:	add	r3, pc, #608	; 0x260
    6fc4:	ldrd	r2, [r3]
    6fc8:	cmp	r1, r3
    6fcc:	cmpeq	r0, r2
    6fd0:	beq	738c <MyGame_Example_Monster_parse_json_table+0x5d0>
    6fd4:	add	r3, pc, #596	; 0x254
    6fd8:	ldrd	r2, [r3]
    6fdc:	cmp	r1, r3
    6fe0:	cmpeq	r0, r2
    6fe4:	bhi	7330 <MyGame_Example_Monster_parse_json_table+0x574>
    6fe8:	add	r3, pc, #584	; 0x248
    6fec:	ldrd	r2, [r3]
    6ff0:	cmp	r1, r3
    6ff4:	cmpeq	r0, r2
    6ff8:	beq	799c <MyGame_Example_Monster_parse_json_table+0xbe0>
    6ffc:	add	r3, pc, #572	; 0x23c
    7000:	ldrd	r2, [r3]
    7004:	cmp	r1, r3
    7008:	cmpeq	r0, r2
    700c:	beq	760c <MyGame_Example_Monster_parse_json_table+0x850>
    7010:	mov	r1, fp
    7014:	mov	r2, sl
    7018:	mov	r0, r9
    701c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7020:	mov	fp, r0
    7024:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7028:	add	r3, pc, #536	; 0x218
    702c:	ldrd	r2, [r3]
    7030:	cmp	r1, r3
    7034:	cmpeq	r0, r2
    7038:	bhi	7120 <MyGame_Example_Monster_parse_json_table+0x364>
    703c:	add	r3, pc, #524	; 0x20c
    7040:	ldrd	r2, [r3]
    7044:	cmp	r1, r3
    7048:	cmpeq	r0, r2
    704c:	bhi	7434 <MyGame_Example_Monster_parse_json_table+0x678>
    7050:	add	r3, pc, #512	; 0x200
    7054:	ldrd	r2, [r3]
    7058:	mov	r4, #0
    705c:	cmp	r1, r3
    7060:	cmpeq	r4, r2
    7064:	beq	7728 <MyGame_Example_Monster_parse_json_table+0x96c>
    7068:	mov	r1, fp
    706c:	mov	r2, sl
    7070:	mov	r0, r9
    7074:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7078:	mov	fp, r0
    707c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7080:	add	r3, pc, #472	; 0x1d8
    7084:	ldrd	r2, [r3]
    7088:	cmp	r1, r3
    708c:	cmpeq	r0, r2
    7090:	bhi	72a0 <MyGame_Example_Monster_parse_json_table+0x4e4>
    7094:	add	r3, pc, #460	; 0x1cc
    7098:	ldrd	r2, [r3]
    709c:	ldr	r0, [pc, #492]	; 7290 <MyGame_Example_Monster_parse_json_table+0x4d4>
    70a0:	mvn	r1, #0
    70a4:	and	r5, r5, r1
    70a8:	and	r4, r4, r0
    70ac:	cmp	r5, r3
    70b0:	cmpeq	r4, r2
    70b4:	bne	6f10 <MyGame_Example_Monster_parse_json_table+0x154>
    70b8:	sub	r3, sl, fp
    70bc:	cmp	r3, #6
    70c0:	bgt	7770 <MyGame_Example_Monster_parse_json_table+0x9b4>
    70c4:	mov	r1, fp
    70c8:	mov	r2, sl
    70cc:	mov	r0, r9
    70d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70d4:	mov	fp, r0
    70d8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    70dc:	ldr	r3, [pc, #432]	; 7294 <MyGame_Example_Monster_parse_json_table+0x4d8>
    70e0:	mvn	r2, #0
    70e4:	cmp	r1, r3
    70e8:	cmpeq	r0, r2
    70ec:	bhi	7488 <MyGame_Example_Monster_parse_json_table+0x6cc>
    70f0:	add	r3, pc, #376	; 0x178
    70f4:	ldrd	r2, [r3]
    70f8:	mov	r4, #0
    70fc:	cmp	r1, r3
    7100:	cmpeq	r4, r2
    7104:	beq	774c <MyGame_Example_Monster_parse_json_table+0x990>
    7108:	mov	r1, fp
    710c:	mov	r2, sl
    7110:	mov	r0, r9
    7114:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7118:	mov	fp, r0
    711c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7120:	add	r3, pc, #336	; 0x150
    7124:	ldrd	r2, [r3]
    7128:	and	r6, r0, #-16777216	; 0xff000000
    712c:	mov	r7, r1
    7130:	cmp	r1, r3
    7134:	cmpeq	r6, r2
    7138:	beq	785c <MyGame_Example_Monster_parse_json_table+0xaa0>
    713c:	sub	r8, sl, fp
    7140:	cmp	r8, #4
    7144:	bgt	9124 <MyGame_Example_Monster_parse_json_table+0x2368>
    7148:	add	r3, pc, #304	; 0x130
    714c:	ldrd	r2, [r3]
    7150:	cmp	r7, r3
    7154:	cmpeq	r6, r2
    7158:	beq	783c <MyGame_Example_Monster_parse_json_table+0xa80>
    715c:	add	r3, pc, #292	; 0x124
    7160:	ldrd	r2, [r3]
    7164:	cmp	r5, r3
    7168:	cmpeq	r4, r2
    716c:	bne	7844 <MyGame_Example_Monster_parse_json_table+0xa88>
    7170:	add	fp, fp, #8
    7174:	mov	r0, fp
    7178:	mov	r1, sl
    717c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7180:	mov	r0, #0
    7184:	and	r1, r1, #-16777216	; 0xff000000
    7188:	cmp	r1, #1694498816	; 0x65000000
    718c:	cmpeq	r0, #0
    7190:	bne	7b84 <MyGame_Example_Monster_parse_json_table+0xdc8>
    7194:	sub	r3, sl, fp
    7198:	cmp	r3, #1
    719c:	ble	81b4 <MyGame_Example_Monster_parse_json_table+0x13f8>
    71a0:	mov	r1, fp
    71a4:	mov	r3, #1
    71a8:	mov	r2, sl
    71ac:	mov	r0, r9
    71b0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    71b4:	cmp	fp, r0
    71b8:	mov	r1, r0
    71bc:	beq	81b4 <MyGame_Example_Monster_parse_json_table+0x13f8>
    71c0:	ldr	r2, [sp, #92]	; 0x5c
    71c4:	ldr	ip, [pc, #204]	; 7298 <MyGame_Example_Monster_parse_json_table+0x4dc>
    71c8:	ldr	r0, [pc, #204]	; 729c <MyGame_Example_Monster_parse_json_table+0x4e0>
    71cc:	mov	r3, #8
    71d0:	str	r0, [sp, #8]
    71d4:	str	r2, [sp, #4]
    71d8:	str	r3, [sp]
    71dc:	str	ip, [sp, #12]
    71e0:	mov	r3, #0
    71e4:	mov	r2, sl
    71e8:	mov	r0, r9
    71ec:	bl	0 <flatcc_json_parser_union_type>
    71f0:	mov	fp, r0
    71f4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    71f8:	.word	0x61727260
    71fc:	.word	0x74657374
    7200:	.word	0xffffffff
    7204:	.word	0x6e616d64
    7208:	.word	0xffffffff
    720c:	.word	0x666c6577
    7210:	.word	0x79000000
    7214:	.word	0x656e656d
    7218:	.word	0x72000000
    721c:	.word	0x636f6c6f
    7220:	.word	0x6632ffff
    7224:	.word	0x74657374
    7228:	.word	0x61727261
    722c:	.word	0x74657374
    7230:	.word	0x656d7073
    7234:	.word	0x74657374
    7238:	.word	0x62617365
    723c:	.word	0x74657374
    7240:	.word	0x626f6f6c
    7244:	.word	0x74657374
    7248:	.word	0xffffffff
    724c:	.word	0x74657373
    7250:	.word	0x6e745f6d
    7254:	.word	0x70617265
    7258:	.word	0x00000000
    725c:	.word	0x6e616d65
    7260:	.word	0x68617367
    7264:	.word	0x74657374
    7268:	.word	0x66330000
    726c:	.word	0x74657374
    7270:	.word	0x00000000
    7274:	.word	0x666c6578
    7278:	.word	0x34000000
    727c:	.word	0x74657374
    7280:	.word	0x35000000
    7284:	.word	0x74657374
    7288:	.word	0x5f747970
    728c:	.word	0x74657374
    7290:	.word	0xffff0000
    7294:	.word	0x686fffff
    7298:	.word	0x00000000
    729c:	.word	0x00000104
    72a0:	add	r3, pc, #976	; 0x3d0
    72a4:	ldrd	r2, [r3]
    72a8:	cmp	r1, r3
    72ac:	cmpeq	r0, r2
    72b0:	beq	794c <MyGame_Example_Monster_parse_json_table+0xb90>
    72b4:	add	r3, pc, #964	; 0x3c4
    72b8:	ldrd	r2, [r3]
    72bc:	cmp	r1, r3
    72c0:	cmpeq	r0, r2
    72c4:	bls	7534 <MyGame_Example_Monster_parse_json_table+0x778>
    72c8:	add	r3, pc, #952	; 0x3b8
    72cc:	ldrd	r2, [r3]
    72d0:	cmp	r1, r3
    72d4:	cmpeq	r0, r2
    72d8:	bne	79f4 <MyGame_Example_Monster_parse_json_table+0xc38>
    72dc:	add	r4, fp, #8
    72e0:	mov	r0, r4
    72e4:	mov	r1, sl
    72e8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    72ec:	add	r3, pc, #924	; 0x39c
    72f0:	ldrd	r2, [r3]
    72f4:	cmp	r1, r3
    72f8:	cmpeq	r0, r2
    72fc:	beq	985c <MyGame_Example_Monster_parse_json_table+0x2aa0>
    7300:	add	r3, pc, #912	; 0x390
    7304:	ldrd	r2, [r3]
    7308:	bic	r0, r0, #255	; 0xff
    730c:	cmp	r1, r3
    7310:	cmpeq	r0, r2
    7314:	beq	8190 <MyGame_Example_Monster_parse_json_table+0x13d4>
    7318:	mov	r1, r4
    731c:	mov	r2, sl
    7320:	mov	r0, r9
    7324:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7328:	mov	fp, r0
    732c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7330:	add	r3, pc, #872	; 0x368
    7334:	ldrd	r2, [r3]
    7338:	cmp	r1, r3
    733c:	cmpeq	r0, r2
    7340:	bls	74e4 <MyGame_Example_Monster_parse_json_table+0x728>
    7344:	add	r3, pc, #860	; 0x35c
    7348:	ldrd	r2, [r3]
    734c:	ldr	r0, [pc, #972]	; 7720 <MyGame_Example_Monster_parse_json_table+0x964>
    7350:	mvn	r1, #0
    7354:	and	r5, r5, r1
    7358:	cmp	r5, r3
    735c:	and	r4, r4, r0
    7360:	cmpeq	r4, r2
    7364:	sub	r3, sl, fp
    7368:	beq	7c38 <MyGame_Example_Monster_parse_json_table+0xe7c>
    736c:	cmp	r3, #5
    7370:	bgt	9a30 <MyGame_Example_Monster_parse_json_table+0x2c74>
    7374:	mov	r1, fp
    7378:	mov	r2, sl
    737c:	mov	r0, r9
    7380:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7384:	mov	fp, r0
    7388:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    738c:	add	r4, fp, #8
    7390:	mov	r0, r4
    7394:	mov	r1, sl
    7398:	bl	0 <flatcc_json_parser_symbol_part_ext>
    739c:	add	r3, pc, #780	; 0x30c
    73a0:	ldrd	r2, [r3]
    73a4:	cmp	r1, r3
    73a8:	cmpeq	r0, r2
    73ac:	bhi	75a8 <MyGame_Example_Monster_parse_json_table+0x7ec>
    73b0:	add	r3, pc, #768	; 0x300
    73b4:	ldrd	r2, [r3]
    73b8:	cmp	r1, r3
    73bc:	cmpeq	r0, r2
    73c0:	beq	8ab0 <MyGame_Example_Monster_parse_json_table+0x1cf4>
    73c4:	add	r3, pc, #756	; 0x2f4
    73c8:	ldrd	r2, [r3]
    73cc:	cmp	r1, r3
    73d0:	cmpeq	r0, r2
    73d4:	bne	7bb8 <MyGame_Example_Monster_parse_json_table+0xdfc>
    73d8:	add	r4, fp, #16
    73dc:	mov	r0, r4
    73e0:	mov	r1, sl
    73e4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    73e8:	add	r3, pc, #728	; 0x2d8
    73ec:	ldrd	r2, [r3]
    73f0:	bic	r0, r0, #255	; 0xff
    73f4:	cmp	r1, r3
    73f8:	cmpeq	r0, r2
    73fc:	beq	8208 <MyGame_Example_Monster_parse_json_table+0x144c>
    7400:	mov	r1, r4
    7404:	mov	r2, sl
    7408:	mov	r0, r9
    740c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7410:	mov	fp, r0
    7414:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7418:	mov	r1, fp
    741c:	mov	r3, #5
    7420:	mov	r2, sl
    7424:	mov	r0, r9
    7428:	bl	0 <flatcc_json_parser_set_error>
    742c:	mov	fp, r0
    7430:	b	6e7c <MyGame_Example_Monster_parse_json_table+0xc0>
    7434:	add	r3, pc, #660	; 0x294
    7438:	ldrd	r2, [r3]
    743c:	cmp	r1, r3
    7440:	cmpeq	r0, r2
    7444:	beq	7800 <MyGame_Example_Monster_parse_json_table+0xa44>
    7448:	add	r3, pc, #648	; 0x288
    744c:	ldrd	r2, [r3]
    7450:	bic	r5, r1, #255	; 0xff
    7454:	mov	r4, #0
    7458:	cmp	r5, r3
    745c:	cmpeq	r4, r2
    7460:	bne	7a3c <MyGame_Example_Monster_parse_json_table+0xc80>
    7464:	sub	r3, sl, fp
    7468:	cmp	r3, #3
    746c:	bgt	9170 <MyGame_Example_Monster_parse_json_table+0x23b4>
    7470:	mov	r1, fp
    7474:	mov	r2, sl
    7478:	mov	r0, r9
    747c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7480:	mov	fp, r0
    7484:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7488:	add	r3, pc, #592	; 0x250
    748c:	ldrd	r2, [r3]
    7490:	cmp	r1, r3
    7494:	cmpeq	r0, r2
    7498:	bhi	7630 <MyGame_Example_Monster_parse_json_table+0x874>
    749c:	ldr	r3, [pc, #636]	; 7720 <MyGame_Example_Monster_parse_json_table+0x964>
    74a0:	mov	r2, #0
    74a4:	and	r5, r5, r3
    74a8:	ldr	r3, [pc, #628]	; 7724 <MyGame_Example_Monster_parse_json_table+0x968>
    74ac:	and	r4, r4, r2
    74b0:	cmp	r5, r3
    74b4:	mov	r2, #0
    74b8:	cmpeq	r4, r2
    74bc:	bne	7b9c <MyGame_Example_Monster_parse_json_table+0xde0>
    74c0:	sub	r3, sl, fp
    74c4:	cmp	r3, #2
    74c8:	bgt	83b4 <MyGame_Example_Monster_parse_json_table+0x15f8>
    74cc:	mov	r1, fp
    74d0:	mov	r2, sl
    74d4:	mov	r0, r9
    74d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    74dc:	mov	fp, r0
    74e0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    74e4:	add	r3, pc, #508	; 0x1fc
    74e8:	ldrd	r2, [r3]
    74ec:	cmp	r1, r3
    74f0:	cmpeq	r0, r2
    74f4:	bne	7a24 <MyGame_Example_Monster_parse_json_table+0xc68>
    74f8:	add	r4, fp, #8
    74fc:	mov	r0, r4
    7500:	mov	r1, sl
    7504:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7508:	mov	r0, #0
    750c:	and	r1, r1, #-16777216	; 0xff000000
    7510:	cmp	r1, #2030043136	; 0x79000000
    7514:	cmpeq	r0, #0
    7518:	beq	7d84 <MyGame_Example_Monster_parse_json_table+0xfc8>
    751c:	mov	r1, r4
    7520:	mov	r2, sl
    7524:	mov	r0, r9
    7528:	bl	0 <flatcc_json_parser_unmatched_symbol>
    752c:	mov	fp, r0
    7530:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7534:	add	r3, pc, #436	; 0x1b4
    7538:	ldrd	r2, [r3]
    753c:	cmp	r1, r3
    7540:	cmpeq	r0, r2
    7544:	bne	7a0c <MyGame_Example_Monster_parse_json_table+0xc50>
    7548:	add	r4, fp, #8
    754c:	mov	r0, r4
    7550:	mov	r1, sl
    7554:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7558:	add	r3, pc, #408	; 0x198
    755c:	ldrd	r2, [r3]
    7560:	cmp	r1, r3
    7564:	cmpeq	r0, r2
    7568:	beq	7f50 <MyGame_Example_Monster_parse_json_table+0x1194>
    756c:	mov	r1, r4
    7570:	mov	r2, sl
    7574:	mov	r0, r9
    7578:	bl	0 <flatcc_json_parser_unmatched_symbol>
    757c:	mov	fp, r0
    7580:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7584:	sub	r3, sl, fp
    7588:	cmp	r3, #5
    758c:	bgt	7c58 <MyGame_Example_Monster_parse_json_table+0xe9c>
    7590:	mov	r1, fp
    7594:	mov	r2, sl
    7598:	mov	r0, r9
    759c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    75a0:	mov	fp, r0
    75a4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    75a8:	add	r3, pc, #336	; 0x150
    75ac:	ldrd	r2, [r3]
    75b0:	cmp	r1, r3
    75b4:	cmpeq	r0, r2
    75b8:	beq	8990 <MyGame_Example_Monster_parse_json_table+0x1bd4>
    75bc:	add	r3, pc, #324	; 0x144
    75c0:	ldrd	r2, [r3]
    75c4:	cmp	r1, r3
    75c8:	cmpeq	r0, r2
    75cc:	bne	7bd0 <MyGame_Example_Monster_parse_json_table+0xe14>
    75d0:	add	r4, fp, #16
    75d4:	mov	r0, r4
    75d8:	mov	r1, sl
    75dc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    75e0:	mov	r0, #0
    75e4:	and	r1, r1, #-16777216	; 0xff000000
    75e8:	cmp	r1, #1929379840	; 0x73000000
    75ec:	cmpeq	r0, #0
    75f0:	beq	82e0 <MyGame_Example_Monster_parse_json_table+0x1524>
    75f4:	mov	r1, r4
    75f8:	mov	r2, sl
    75fc:	mov	r0, r9
    7600:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7604:	mov	fp, r0
    7608:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    760c:	sub	r3, sl, fp
    7610:	cmp	r3, #8
    7614:	bgt	8ca8 <MyGame_Example_Monster_parse_json_table+0x1eec>
    7618:	mov	r1, fp
    761c:	mov	r2, sl
    7620:	mov	r0, r9
    7624:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7628:	mov	fp, r0
    762c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7630:	add	r3, pc, #216	; 0xd8
    7634:	ldrd	r2, [r3]
    7638:	cmp	r1, r3
    763c:	cmpeq	r0, r2
    7640:	beq	8f78 <MyGame_Example_Monster_parse_json_table+0x21bc>
    7644:	add	r3, pc, #204	; 0xcc
    7648:	ldrd	r2, [r3]
    764c:	mov	r4, #0
    7650:	cmp	r1, r3
    7654:	cmpeq	r4, r2
    7658:	beq	7d60 <MyGame_Example_Monster_parse_json_table+0xfa4>
    765c:	mov	r1, fp
    7660:	mov	r2, sl
    7664:	mov	r0, r9
    7668:	bl	0 <flatcc_json_parser_unmatched_symbol>
    766c:	mov	fp, r0
    7670:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7674:	nop			; (mov r0, r0)
    7678:	.word	0x68617368
    767c:	.word	0x74657374
    7680:	.word	0x6f725f6e
    7684:	.word	0x76656374
    7688:	.word	0x6f725f6f
    768c:	.word	0x76656374
    7690:	.word	0x75626c65
    7694:	.word	0x665f646f
    7698:	.word	0x6e677300
    769c:	.word	0x665f6c6f
    76a0:	.word	0x65ffffff
    76a4:	.word	0x74657374
    76a8:	.word	0x66320000
    76ac:	.word	0x74657374
    76b0:	.word	0x7472696d
    76b4:	.word	0x796f6673
    76b8:	.word	0x6f6f6c73
    76bc:	.word	0x796f6662
    76c0:	.word	0x6f727465
    76c4:	.word	0x796f6673
    76c8:	.word	0x75637400
    76cc:	.word	0x64737472
    76d0:	.word	0x6e745f6e
    76d4:	.word	0x70617265
    76d8:	.word	0x00000000
    76dc:	.word	0x706f7300
    76e0:	.word	0x6e746f71
    76e4:	.word	0x696e7665
    76e8:	.word	0x656d7074
    76ec:	.word	0x74657374
    76f0:	.word	0x6e657374
    76f4:	.word	0x74657374
    76f8:	.word	0x61746275
    76fc:	.word	0x6564666c
    7700:	.word	0x7472696e
    7704:	.word	0x796f6673
    7708:	.word	0x61626c65
    770c:	.word	0x796f6674
    7710:	.word	0x6e746f72
    7714:	.word	0x696e7665
    7718:	.word	0x00000000
    771c:	.word	0x6d616e61
    7720:	.word	0xffff0000
    7724:	.word	0x68700000
    7728:	sub	r3, sl, fp
    772c:	cmp	r3, #4
    7730:	bgt	8efc <MyGame_Example_Monster_parse_json_table+0x2140>
    7734:	mov	r1, fp
    7738:	mov	r2, sl
    773c:	mov	r0, r9
    7740:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7744:	mov	fp, r0
    7748:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    774c:	sub	r3, sl, fp
    7750:	cmp	r3, #4
    7754:	bgt	8dc0 <MyGame_Example_Monster_parse_json_table+0x2004>
    7758:	mov	r1, fp
    775c:	mov	r2, sl
    7760:	mov	r0, r9
    7764:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7768:	mov	fp, r0
    776c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7770:	mov	r3, #6
    7774:	mov	r2, sl
    7778:	mov	r1, fp
    777c:	mov	r0, r9
    7780:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    7784:	cmp	r0, fp
    7788:	mov	r5, r0
    778c:	beq	70c4 <MyGame_Example_Monster_parse_json_table+0x308>
    7790:	add	r4, sp, #120	; 0x78
    7794:	mov	r3, #0
    7798:	mov	r1, r0
    779c:	str	r3, [r4, #-8]!
    77a0:	mov	r2, sl
    77a4:	mov	r0, r9
    77a8:	mov	r3, r4
    77ac:	bl	0 <flatcc_json_parser_float>
    77b0:	cmp	r0, r5
    77b4:	mov	fp, r0
    77b8:	beq	9b48 <MyGame_Example_Monster_parse_json_table+0x2d8c>
    77bc:	vldr	s15, [sp, #112]	; 0x70
    77c0:	vcmp.f32	s15, #0.0
    77c4:	vmrs	APSR_nzcv, fpscr
    77c8:	bne	77d8 <MyGame_Example_Monster_parse_json_table+0xa1c>
    77cc:	ldr	r3, [r9, #8]
    77d0:	tst	r3, #2
    77d4:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    77d8:	mov	r3, #4
    77dc:	mov	r2, r3
    77e0:	mov	r1, #27
    77e4:	ldr	r0, [r9]
    77e8:	bl	0 <flatcc_builder_table_add>
    77ec:	cmp	r0, #0
    77f0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    77f4:	ldr	r3, [sp, #112]	; 0x70
    77f8:	str	r3, [r0]
    77fc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7800:	add	r4, fp, #8
    7804:	mov	r0, r4
    7808:	mov	r1, sl
    780c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7810:	add	r3, pc, #976	; 0x3d0
    7814:	ldrd	r2, [r3]
    7818:	cmp	r1, r3
    781c:	cmpeq	r0, r2
    7820:	beq	8144 <MyGame_Example_Monster_parse_json_table+0x1388>
    7824:	mov	r1, r4
    7828:	mov	r2, sl
    782c:	mov	r0, r9
    7830:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7834:	mov	fp, r0
    7838:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    783c:	cmp	r8, #5
    7840:	bgt	822c <MyGame_Example_Monster_parse_json_table+0x1470>
    7844:	mov	r1, fp
    7848:	mov	r2, sl
    784c:	mov	r0, r9
    7850:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7854:	mov	fp, r0
    7858:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    785c:	sub	r3, sl, fp
    7860:	cmp	r3, #5
    7864:	ble	7844 <MyGame_Example_Monster_parse_json_table+0xa88>
    7868:	mov	r3, #5
    786c:	mov	r2, sl
    7870:	mov	r1, fp
    7874:	mov	r0, r9
    7878:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    787c:	cmp	r0, fp
    7880:	mov	r4, r0
    7884:	beq	7844 <MyGame_Example_Monster_parse_json_table+0xa88>
    7888:	mvn	r3, #-1073741824	; 0xc0000000
    788c:	mov	r2, #2
    7890:	mov	r1, #4
    7894:	ldr	r0, [r9]
    7898:	bl	0 <flatcc_builder_start_vector>
    789c:	cmp	r0, #0
    78a0:	bne	a44c <MyGame_Example_Monster_parse_json_table+0x3690>
    78a4:	add	r3, sp, #84	; 0x54
    78a8:	mov	r1, r4
    78ac:	mov	r2, sl
    78b0:	mov	r0, r9
    78b4:	bl	938 <flatcc_json_parser_array_start>
    78b8:	ldr	r3, [sp, #84]	; 0x54
    78bc:	cmp	r3, #0
    78c0:	mov	fp, r0
    78c4:	beq	87e8 <MyGame_Example_Monster_parse_json_table+0x1a2c>
    78c8:	mov	r4, #1
    78cc:	b	78f8 <MyGame_Example_Monster_parse_json_table+0xb3c>
    78d0:	bl	2448 <MyGame_Example_Test_parse_json_struct_inline>
    78d4:	add	r3, sp, #84	; 0x54
    78d8:	mov	r2, sl
    78dc:	mov	r1, r0
    78e0:	mov	r0, r9
    78e4:	bl	2140 <flatcc_json_parser_array_end>
    78e8:	ldr	r3, [sp, #84]	; 0x54
    78ec:	cmp	r3, #0
    78f0:	mov	fp, r0
    78f4:	beq	87e8 <MyGame_Example_Monster_parse_json_table+0x1a2c>
    78f8:	mov	r1, r4
    78fc:	ldr	r0, [r9]
    7900:	bl	0 <flatcc_builder_extend_vector>
    7904:	mov	r1, fp
    7908:	mov	r2, sl
    790c:	subs	r3, r0, #0
    7910:	mov	r0, r9
    7914:	bne	78d0 <MyGame_Example_Monster_parse_json_table+0xb14>
    7918:	mov	r3, sl
    791c:	mov	sl, r9
    7920:	mov	r9, r3
    7924:	b	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    7928:	sub	r3, sl, fp
    792c:	cmp	r3, #5
    7930:	bgt	8930 <MyGame_Example_Monster_parse_json_table+0x1b74>
    7934:	mov	r1, fp
    7938:	mov	r2, sl
    793c:	mov	r0, r9
    7940:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7944:	mov	fp, r0
    7948:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    794c:	add	fp, fp, #8
    7950:	mov	r0, fp
    7954:	mov	r1, sl
    7958:	bl	0 <flatcc_json_parser_symbol_part_ext>
    795c:	add	r3, pc, #652	; 0x28c
    7960:	ldrd	r2, [r3]
    7964:	cmp	r1, r3
    7968:	cmpeq	r0, r2
    796c:	bhi	7a54 <MyGame_Example_Monster_parse_json_table+0xc98>
    7970:	add	r3, pc, #640	; 0x280
    7974:	ldrd	r2, [r3]
    7978:	cmp	r1, r3
    797c:	cmpeq	r0, r2
    7980:	beq	807c <MyGame_Example_Monster_parse_json_table+0x12c0>
    7984:	mov	r1, fp
    7988:	mov	r2, sl
    798c:	mov	r0, r9
    7990:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7994:	mov	fp, r0
    7998:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    799c:	add	r4, fp, #8
    79a0:	mov	r0, r4
    79a4:	mov	r1, sl
    79a8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    79ac:	ldr	r3, [pc, #612]	; 7c18 <MyGame_Example_Monster_parse_json_table+0xe5c>
    79b0:	ldr	r7, [pc, #612]	; 7c1c <MyGame_Example_Monster_parse_json_table+0xe60>
    79b4:	mov	r2, #0
    79b8:	mov	r6, #0
    79bc:	and	r3, r3, r1
    79c0:	and	r2, r2, r0
    79c4:	cmp	r3, r7
    79c8:	cmpeq	r2, r6
    79cc:	bne	7c20 <MyGame_Example_Monster_parse_json_table+0xe64>
    79d0:	sub	r3, sl, r4
    79d4:	cmp	r3, #2
    79d8:	bgt	84d4 <MyGame_Example_Monster_parse_json_table+0x1718>
    79dc:	mov	r1, r4
    79e0:	mov	r2, sl
    79e4:	mov	r0, r9
    79e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    79ec:	mov	fp, r0
    79f0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    79f4:	mov	r1, fp
    79f8:	mov	r2, sl
    79fc:	mov	r0, r9
    7a00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a04:	mov	fp, r0
    7a08:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7a0c:	mov	r1, fp
    7a10:	mov	r2, sl
    7a14:	mov	r0, r9
    7a18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a1c:	mov	fp, r0
    7a20:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7a24:	mov	r1, fp
    7a28:	mov	r2, sl
    7a2c:	mov	r0, r9
    7a30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a34:	mov	fp, r0
    7a38:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7a3c:	mov	r1, fp
    7a40:	mov	r2, sl
    7a44:	mov	r0, r9
    7a48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a4c:	mov	fp, r0
    7a50:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7a54:	add	r3, pc, #420	; 0x1a4
    7a58:	ldrd	r2, [r3]
    7a5c:	cmp	r1, r3
    7a60:	cmpeq	r0, r2
    7a64:	bls	7f9c <MyGame_Example_Monster_parse_json_table+0x11e0>
    7a68:	add	r3, pc, #408	; 0x198
    7a6c:	ldrd	r2, [r3]
    7a70:	cmp	r1, r3
    7a74:	cmpeq	r0, r2
    7a78:	beq	9e18 <MyGame_Example_Monster_parse_json_table+0x305c>
    7a7c:	add	r3, pc, #396	; 0x18c
    7a80:	ldrd	r2, [r3]
    7a84:	cmp	r1, r3
    7a88:	cmpeq	r0, r2
    7a8c:	bne	9c4c <MyGame_Example_Monster_parse_json_table+0x2e90>
    7a90:	sub	r3, sl, fp
    7a94:	cmp	r3, #8
    7a98:	bgt	a72c <MyGame_Example_Monster_parse_json_table+0x3970>
    7a9c:	add	fp, fp, #8
    7aa0:	mov	r0, fp
    7aa4:	mov	r1, sl
    7aa8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7aac:	mov	r0, #0
    7ab0:	and	r1, r1, #-16777216	; 0xff000000
    7ab4:	cmp	r1, #1627389952	; 0x61000000
    7ab8:	cmpeq	r0, #0
    7abc:	bne	aa10 <MyGame_Example_Monster_parse_json_table+0x3c54>
    7ac0:	sub	r3, sl, fp
    7ac4:	cmp	r3, #1
    7ac8:	ble	ac6c <MyGame_Example_Monster_parse_json_table+0x3eb0>
    7acc:	mov	r3, #1
    7ad0:	mov	r2, sl
    7ad4:	mov	r1, fp
    7ad8:	mov	r0, r9
    7adc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    7ae0:	cmp	fp, r0
    7ae4:	mov	r4, r0
    7ae8:	beq	ac70 <MyGame_Example_Monster_parse_json_table+0x3eb4>
    7aec:	mov	r2, #0
    7af0:	mov	r3, #0
    7af4:	mov	r1, #0
    7af8:	cmp	sl, r0
    7afc:	strd	r2, [sp, #104]	; 0x68
    7b00:	strd	r2, [sp, #112]	; 0x70
    7b04:	str	r1, [sp, #100]	; 0x64
    7b08:	beq	ad3c <MyGame_Example_Monster_parse_json_table+0x3f80>
    7b0c:	add	r3, sp, #112	; 0x70
    7b10:	str	r3, [sp]
    7b14:	mov	r1, r0
    7b18:	add	r3, sp, #100	; 0x64
    7b1c:	mov	r2, sl
    7b20:	mov	r0, r9
    7b24:	bl	0 <flatcc_json_parser_integer>
    7b28:	cmp	r4, r0
    7b2c:	mov	fp, r0
    7b30:	beq	ad40 <MyGame_Example_Monster_parse_json_table+0x3f84>
    7b34:	ldr	r1, [sp, #100]	; 0x64
    7b38:	ldrd	r2, [sp, #112]	; 0x70
    7b3c:	cmp	r1, #0
    7b40:	bne	accc <MyGame_Example_Monster_parse_json_table+0x3f10>
    7b44:	strd	r2, [sp, #104]	; 0x68
    7b48:	orrs	r3, r2, r3
    7b4c:	bne	7b5c <MyGame_Example_Monster_parse_json_table+0xda0>
    7b50:	ldr	r3, [r9, #8]
    7b54:	tst	r3, #2
    7b58:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7b5c:	mov	r3, #8
    7b60:	mov	r2, r3
    7b64:	mov	r1, #23
    7b68:	ldr	r0, [r9]
    7b6c:	bl	0 <flatcc_builder_table_add>
    7b70:	cmp	r0, #0
    7b74:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    7b78:	ldrd	r2, [sp, #104]	; 0x68
    7b7c:	strd	r2, [r0]
    7b80:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7b84:	mov	r1, fp
    7b88:	mov	r2, sl
    7b8c:	mov	r0, r9
    7b90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7b94:	mov	fp, r0
    7b98:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7b9c:	mov	r1, fp
    7ba0:	mov	r2, sl
    7ba4:	mov	r0, r9
    7ba8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7bac:	mov	fp, r0
    7bb0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7bb4:	mov	r4, r0
    7bb8:	mov	r1, r4
    7bbc:	mov	r2, sl
    7bc0:	mov	r0, r9
    7bc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7bc8:	mov	fp, r0
    7bcc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7bd0:	mov	r1, r4
    7bd4:	mov	r2, sl
    7bd8:	mov	r0, r9
    7bdc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7be0:	mov	fp, r0
    7be4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7be8:	.word	0x70616365
    7bec:	.word	0x616d6573
    7bf0:	.word	0x666e7630
    7bf4:	.word	0x7336345f
    7bf8:	.word	0x666e7631
    7bfc:	.word	0x7333325f
    7c00:	.word	0x666e7630
    7c04:	.word	0x7533325f
    7c08:	.word	0x666e7631
    7c0c:	.word	0x7533325f
    7c10:	.word	0x666e7631
    7c14:	.word	0x7536345f
    7c18:	.word	0xffff0000
    7c1c:	.word	0x36340000
    7c20:	mov	r1, r4
    7c24:	mov	r2, sl
    7c28:	mov	r0, r9
    7c2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7c30:	mov	fp, r0
    7c34:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7c38:	cmp	r3, #6
    7c3c:	bgt	8440 <MyGame_Example_Monster_parse_json_table+0x1684>
    7c40:	mov	r1, fp
    7c44:	mov	r2, sl
    7c48:	mov	r0, r9
    7c4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7c50:	mov	fp, r0
    7c54:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7c58:	mov	r3, #5
    7c5c:	mov	r2, sl
    7c60:	mov	r1, fp
    7c64:	mov	r0, r9
    7c68:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    7c6c:	cmp	r0, fp
    7c70:	mov	r4, r0
    7c74:	beq	7590 <MyGame_Example_Monster_parse_json_table+0x7d4>
    7c78:	mov	r0, #0
    7c7c:	mov	r1, #0
    7c80:	mov	r3, #0
    7c84:	cmp	sl, r4
    7c88:	strd	r0, [sp, #112]	; 0x70
    7c8c:	strb	r3, [sp, #100]	; 0x64
    7c90:	str	r3, [sp, #104]	; 0x68
    7c94:	beq	982c <MyGame_Example_Monster_parse_json_table+0x2a70>
    7c98:	add	r3, sp, #112	; 0x70
    7c9c:	str	r3, [sp]
    7ca0:	mov	r2, sl
    7ca4:	add	r3, sp, #104	; 0x68
    7ca8:	mov	r1, r4
    7cac:	mov	r0, r9
    7cb0:	bl	0 <flatcc_json_parser_integer>
    7cb4:	cmp	r4, r0
    7cb8:	mov	fp, r0
    7cbc:	beq	9828 <MyGame_Example_Monster_parse_json_table+0x2a6c>
    7cc0:	ldr	r1, [sp, #104]	; 0x68
    7cc4:	ldrd	r2, [sp, #112]	; 0x70
    7cc8:	cmp	r1, #0
    7ccc:	bne	7d20 <MyGame_Example_Monster_parse_json_table+0xf64>
    7cd0:	cmp	r3, #0
    7cd4:	cmpeq	r2, #127	; 0x7f
    7cd8:	sxtbls	r2, r2
    7cdc:	strbls	r2, [sp, #100]	; 0x64
    7ce0:	bhi	9dfc <MyGame_Example_Monster_parse_json_table+0x3040>
    7ce4:	cmp	r2, #8
    7ce8:	bne	7cf8 <MyGame_Example_Monster_parse_json_table+0xf3c>
    7cec:	ldr	r3, [r9, #8]
    7cf0:	tst	r3, #2
    7cf4:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7cf8:	mov	r3, #1
    7cfc:	mov	r2, r3
    7d00:	mov	r1, #6
    7d04:	ldr	r0, [r9]
    7d08:	bl	0 <flatcc_builder_table_add>
    7d0c:	cmp	r0, #0
    7d10:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    7d14:	ldrsb	r3, [sp, #100]	; 0x64
    7d18:	strb	r3, [r0]
    7d1c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7d20:	cmp	r3, #0
    7d24:	cmpeq	r2, #128	; 0x80
    7d28:	rsbls	r2, r2, #0
    7d2c:	sxtbls	r2, r2
    7d30:	strbls	r2, [sp, #100]	; 0x64
    7d34:	bls	7ce4 <MyGame_Example_Monster_parse_json_table+0xf28>
    7d38:	mov	r1, r0
    7d3c:	mov	r3, #8
    7d40:	mov	r2, sl
    7d44:	mov	r0, r9
    7d48:	bl	0 <flatcc_json_parser_set_error>
    7d4c:	mov	fp, r0
    7d50:	cmp	r4, fp
    7d54:	beq	982c <MyGame_Example_Monster_parse_json_table+0x2a70>
    7d58:	ldrsb	r2, [sp, #100]	; 0x64
    7d5c:	b	7ce4 <MyGame_Example_Monster_parse_json_table+0xf28>
    7d60:	sub	r3, sl, fp
    7d64:	cmp	r3, #4
    7d68:	bgt	9b74 <MyGame_Example_Monster_parse_json_table+0x2db8>
    7d6c:	mov	r1, fp
    7d70:	mov	r2, sl
    7d74:	mov	r0, r9
    7d78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d7c:	mov	fp, r0
    7d80:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7d84:	sub	r3, sl, r4
    7d88:	cmp	r3, #1
    7d8c:	ble	a434 <MyGame_Example_Monster_parse_json_table+0x3678>
    7d90:	mov	r3, #1
    7d94:	mov	r2, sl
    7d98:	mov	r1, r4
    7d9c:	mov	r0, r9
    7da0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    7da4:	cmp	r4, r0
    7da8:	mov	fp, r0
    7dac:	beq	a430 <MyGame_Example_Monster_parse_json_table+0x3674>
    7db0:	mov	r3, #0
    7db4:	mov	r1, #3
    7db8:	ldr	r0, [r9]
    7dbc:	str	r3, [sp, #88]	; 0x58
    7dc0:	bl	0 <flatcc_builder_start_table>
    7dc4:	cmp	r0, #0
    7dc8:	bne	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    7dcc:	mov	r1, fp
    7dd0:	add	r3, sp, #96	; 0x60
    7dd4:	mov	r2, sl
    7dd8:	mov	r0, r9
    7ddc:	bl	884 <flatcc_json_parser_object_start>
    7de0:	ldr	r3, [sp, #96]	; 0x60
    7de4:	cmp	r3, #0
    7de8:	mov	fp, r0
    7dec:	beq	9cac <MyGame_Example_Monster_parse_json_table+0x2ef0>
    7df0:	mov	r6, #1
    7df4:	mov	r8, #5
    7df8:	mov	r7, #0
    7dfc:	b	7e5c <MyGame_Example_Monster_parse_json_table+0x10a0>
    7e00:	add	r3, pc, #968	; 0x3c8
    7e04:	ldrd	r2, [r3]
    7e08:	and	r0, r0, #-16777216	; 0xff000000
    7e0c:	cmp	r1, r3
    7e10:	cmpeq	r0, r2
    7e14:	bne	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    7e18:	sub	r3, sl, fp
    7e1c:	cmp	r3, #5
    7e20:	bgt	881c <MyGame_Example_Monster_parse_json_table+0x1a60>
    7e24:	mov	r1, fp
    7e28:	mov	r2, sl
    7e2c:	mov	r0, r9
    7e30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7e34:	mov	fp, r0
    7e38:	mov	r1, fp
    7e3c:	add	r3, sp, #96	; 0x60
    7e40:	mov	r2, sl
    7e44:	mov	r0, r9
    7e48:	bl	22c4 <flatcc_json_parser_object_end>
    7e4c:	ldr	r3, [sp, #96]	; 0x60
    7e50:	cmp	r3, #0
    7e54:	mov	fp, r0
    7e58:	beq	9cac <MyGame_Example_Monster_parse_json_table+0x2ef0>
    7e5c:	cmp	sl, fp
    7e60:	beq	7e84 <MyGame_Example_Monster_parse_json_table+0x10c8>
    7e64:	ldrb	r3, [fp]
    7e68:	cmp	r3, #34	; 0x22
    7e6c:	addeq	fp, fp, #1
    7e70:	streq	r7, [r9, #12]
    7e74:	beq	7e84 <MyGame_Example_Monster_parse_json_table+0x10c8>
    7e78:	cmp	r3, #46	; 0x2e
    7e7c:	strne	r6, [r9, #12]
    7e80:	beq	8c2c <MyGame_Example_Monster_parse_json_table+0x1e70>
    7e84:	mov	r1, sl
    7e88:	mov	r0, fp
    7e8c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7e90:	ldr	r3, [pc, #864]	; 81f8 <MyGame_Example_Monster_parse_json_table+0x143c>
    7e94:	mvn	r2, #0
    7e98:	cmp	r1, r3
    7e9c:	cmpeq	r0, r2
    7ea0:	bls	7e00 <MyGame_Example_Monster_parse_json_table+0x1044>
    7ea4:	add	r3, pc, #812	; 0x32c
    7ea8:	ldrd	r2, [r3]
    7eac:	bic	r5, r1, #255	; 0xff
    7eb0:	mov	r4, #0
    7eb4:	cmp	r5, r3
    7eb8:	cmpeq	r4, r2
    7ebc:	beq	86a0 <MyGame_Example_Monster_parse_json_table+0x18e4>
    7ec0:	ldr	r3, [pc, #820]	; 81fc <MyGame_Example_Monster_parse_json_table+0x1440>
    7ec4:	mov	r2, #0
    7ec8:	and	r1, r1, r3
    7ecc:	ldr	r3, [pc, #812]	; 8200 <MyGame_Example_Monster_parse_json_table+0x1444>
    7ed0:	and	r0, r0, r2
    7ed4:	cmp	r1, r3
    7ed8:	mov	r2, #0
    7edc:	cmpeq	r0, r2
    7ee0:	bne	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    7ee4:	sub	r3, sl, fp
    7ee8:	cmp	r3, #2
    7eec:	ble	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    7ef0:	mov	r1, fp
    7ef4:	mov	r3, #2
    7ef8:	mov	r2, sl
    7efc:	mov	r0, r9
    7f00:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    7f04:	cmp	r0, fp
    7f08:	mov	r1, r0
    7f0c:	beq	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    7f10:	add	r3, sp, #100	; 0x64
    7f14:	mov	r2, sl
    7f18:	mov	r0, r9
    7f1c:	bl	0 <flatcc_json_parser_build_string>
    7f20:	ldr	r3, [sp, #100]	; 0x64
    7f24:	cmp	r3, #0
    7f28:	mov	fp, r0
    7f2c:	beq	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    7f30:	mov	r1, r7
    7f34:	ldr	r0, [r9]
    7f38:	bl	0 <flatcc_builder_table_add_offset>
    7f3c:	cmp	r0, #0
    7f40:	beq	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    7f44:	ldr	r3, [sp, #100]	; 0x64
    7f48:	str	r3, [r0]
    7f4c:	b	7e38 <MyGame_Example_Monster_parse_json_table+0x107c>
    7f50:	add	r4, fp, #16
    7f54:	mov	r0, r4
    7f58:	mov	r1, sl
    7f5c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7f60:	add	r3, pc, #632	; 0x278
    7f64:	ldrd	r2, [r3]
    7f68:	mov	r0, #0
    7f6c:	cmp	r1, r3
    7f70:	cmpeq	r0, r2
    7f74:	bne	99d0 <MyGame_Example_Monster_parse_json_table+0x2c14>
    7f78:	sub	r3, sl, r4
    7f7c:	cmp	r3, #4
    7f80:	bgt	a4d4 <MyGame_Example_Monster_parse_json_table+0x3718>
    7f84:	mov	r1, r4
    7f88:	mov	r2, sl
    7f8c:	mov	r0, r9
    7f90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f94:	mov	fp, r0
    7f98:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    7f9c:	add	r3, pc, #580	; 0x244
    7fa0:	ldrd	r2, [r3]
    7fa4:	cmp	r1, r3
    7fa8:	cmpeq	r0, r2
    7fac:	bne	9ac4 <MyGame_Example_Monster_parse_json_table+0x2d08>
    7fb0:	sub	r3, sl, fp
    7fb4:	cmp	r3, #8
    7fb8:	bgt	a594 <MyGame_Example_Monster_parse_json_table+0x37d8>
    7fbc:	add	fp, fp, #8
    7fc0:	mov	r0, fp
    7fc4:	mov	r1, sl
    7fc8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7fcc:	mov	r0, #0
    7fd0:	and	r1, r1, #-16777216	; 0xff000000
    7fd4:	cmp	r1, #1627389952	; 0x61000000
    7fd8:	cmpeq	r0, #0
    7fdc:	bne	a9c4 <MyGame_Example_Monster_parse_json_table+0x3c08>
    7fe0:	sub	r3, sl, fp
    7fe4:	cmp	r3, #1
    7fe8:	ble	ac88 <MyGame_Example_Monster_parse_json_table+0x3ecc>
    7fec:	mov	r3, #1
    7ff0:	mov	r2, sl
    7ff4:	mov	r1, fp
    7ff8:	mov	r0, r9
    7ffc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8000:	cmp	fp, r0
    8004:	mov	r4, r0
    8008:	beq	ac8c <MyGame_Example_Monster_parse_json_table+0x3ed0>
    800c:	mov	r0, #0
    8010:	mov	r1, #0
    8014:	add	r5, sp, #120	; 0x78
    8018:	mov	r2, sl
    801c:	strd	r0, [r5, #-8]!
    8020:	mov	r1, r4
    8024:	mov	r3, r5
    8028:	mov	r0, r9
    802c:	bl	7bc <flatcc_json_parser_int64>
    8030:	cmp	r0, r4
    8034:	mov	fp, r0
    8038:	beq	ae0c <MyGame_Example_Monster_parse_json_table+0x4050>
    803c:	ldrd	r2, [sp, #112]	; 0x70
    8040:	orrs	r3, r2, r3
    8044:	bne	8054 <MyGame_Example_Monster_parse_json_table+0x1298>
    8048:	ldr	r3, [r9, #8]
    804c:	tst	r3, #2
    8050:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8054:	mov	r3, #8
    8058:	mov	r2, r3
    805c:	mov	r1, #22
    8060:	ldr	r0, [r9]
    8064:	bl	0 <flatcc_builder_table_add>
    8068:	cmp	r0, #0
    806c:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    8070:	ldrd	r2, [sp, #112]	; 0x70
    8074:	strd	r2, [r0]
    8078:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    807c:	sub	r3, sl, fp
    8080:	cmp	r3, #8
    8084:	bgt	9d70 <MyGame_Example_Monster_parse_json_table+0x2fb4>
    8088:	add	fp, fp, #8
    808c:	mov	r0, fp
    8090:	mov	r1, sl
    8094:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8098:	mov	r0, #0
    809c:	and	r1, r1, #-16777216	; 0xff000000
    80a0:	cmp	r1, #1627389952	; 0x61000000
    80a4:	cmpeq	r0, #0
    80a8:	bne	a57c <MyGame_Example_Monster_parse_json_table+0x37c0>
    80ac:	sub	r3, sl, fp
    80b0:	cmp	r3, #1
    80b4:	ble	acf8 <MyGame_Example_Monster_parse_json_table+0x3f3c>
    80b8:	mov	r3, #1
    80bc:	mov	r2, sl
    80c0:	mov	r1, fp
    80c4:	mov	r0, r9
    80c8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    80cc:	cmp	fp, r0
    80d0:	mov	r5, r0
    80d4:	beq	acf8 <MyGame_Example_Monster_parse_json_table+0x3f3c>
    80d8:	add	r4, sp, #120	; 0x78
    80dc:	mov	r3, #0
    80e0:	str	r3, [r4, #-8]!
    80e4:	mov	r1, r0
    80e8:	mov	r2, sl
    80ec:	mov	r3, r4
    80f0:	mov	r0, r9
    80f4:	bl	6f4 <flatcc_json_parser_int32.constprop.26>
    80f8:	cmp	r0, r5
    80fc:	mov	fp, r0
    8100:	beq	ada0 <MyGame_Example_Monster_parse_json_table+0x3fe4>
    8104:	ldr	r3, [sp, #112]	; 0x70
    8108:	cmp	r3, #0
    810c:	bne	811c <MyGame_Example_Monster_parse_json_table+0x1360>
    8110:	ldr	r3, [r9, #8]
    8114:	tst	r3, #2
    8118:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    811c:	mov	r3, #4
    8120:	mov	r2, r3
    8124:	mov	r1, #20
    8128:	ldr	r0, [r9]
    812c:	bl	0 <flatcc_builder_table_add>
    8130:	cmp	r0, #0
    8134:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    8138:	ldr	r3, [sp, #112]	; 0x70
    813c:	str	r3, [r0]
    8140:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8144:	add	fp, fp, #16
    8148:	mov	r0, fp
    814c:	mov	r1, sl
    8150:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8154:	add	r3, pc, #148	; 0x94
    8158:	ldrd	r2, [r3]
    815c:	and	r0, r0, #-16777216	; 0xff000000
    8160:	cmp	r1, r3
    8164:	cmpeq	r0, r2
    8168:	bne	9af4 <MyGame_Example_Monster_parse_json_table+0x2d38>
    816c:	sub	r3, sl, fp
    8170:	cmp	r3, #5
    8174:	bgt	a624 <MyGame_Example_Monster_parse_json_table+0x3868>
    8178:	mov	r1, fp
    817c:	mov	r2, sl
    8180:	mov	r0, r9
    8184:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8188:	mov	fp, r0
    818c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8190:	sub	r3, sl, r4
    8194:	cmp	r3, #7
    8198:	bgt	9ee0 <MyGame_Example_Monster_parse_json_table+0x3124>
    819c:	mov	r1, r4
    81a0:	mov	r2, sl
    81a4:	mov	r0, r9
    81a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    81ac:	mov	fp, r0
    81b0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    81b4:	mov	r1, fp
    81b8:	mov	r2, sl
    81bc:	mov	r0, r9
    81c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    81c4:	mov	fp, r0
    81c8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    81cc:	nop			; (mov r0, r0)
    81d0:	.word	0x74000000
    81d4:	.word	0x636f756e
    81d8:	.word	0x00000000
    81dc:	.word	0x76616c00
    81e0:	.word	0x00000000
    81e4:	.word	0x66666572
    81e8:	.word	0x666e7631
    81ec:	.word	0x7336345f
    81f0:	.word	0x74000000
    81f4:	.word	0x5f746573
    81f8:	.word	0x6963ffff
    81fc:	.word	0xffff0000
    8200:	.word	0x69640000
    8204:	.word	0x40400000
    8208:	sub	r3, sl, r4
    820c:	cmp	r3, #7
    8210:	bgt	a068 <MyGame_Example_Monster_parse_json_table+0x32ac>
    8214:	mov	r1, r4
    8218:	mov	r2, sl
    821c:	mov	r0, r9
    8220:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8224:	mov	fp, r0
    8228:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    822c:	mov	r3, #5
    8230:	mov	r2, sl
    8234:	mov	r1, fp
    8238:	mov	r0, r9
    823c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8240:	cmp	r0, fp
    8244:	mov	r4, r0
    8248:	beq	7844 <MyGame_Example_Monster_parse_json_table+0xa88>
    824c:	mvn	r3, #-1073741824	; 0xc0000000
    8250:	mov	r2, #2
    8254:	mov	r1, #4
    8258:	ldr	r0, [r9]
    825c:	bl	0 <flatcc_builder_start_vector>
    8260:	cmp	r0, #0
    8264:	bne	a44c <MyGame_Example_Monster_parse_json_table+0x3690>
    8268:	add	r3, sp, #84	; 0x54
    826c:	mov	r1, r4
    8270:	mov	r2, sl
    8274:	mov	r0, r9
    8278:	bl	938 <flatcc_json_parser_array_start>
    827c:	ldr	r3, [sp, #84]	; 0x54
    8280:	cmp	r3, #0
    8284:	mov	fp, r0
    8288:	beq	90f0 <MyGame_Example_Monster_parse_json_table+0x2334>
    828c:	mov	r4, #1
    8290:	b	82bc <MyGame_Example_Monster_parse_json_table+0x1500>
    8294:	bl	2448 <MyGame_Example_Test_parse_json_struct_inline>
    8298:	add	r3, sp, #84	; 0x54
    829c:	mov	r2, sl
    82a0:	mov	r1, r0
    82a4:	mov	r0, r9
    82a8:	bl	2140 <flatcc_json_parser_array_end>
    82ac:	ldr	r3, [sp, #84]	; 0x54
    82b0:	cmp	r3, #0
    82b4:	mov	fp, r0
    82b8:	beq	90f0 <MyGame_Example_Monster_parse_json_table+0x2334>
    82bc:	mov	r1, r4
    82c0:	ldr	r0, [r9]
    82c4:	bl	0 <flatcc_builder_extend_vector>
    82c8:	mov	r1, fp
    82cc:	mov	r2, sl
    82d0:	subs	r3, r0, #0
    82d4:	mov	r0, r9
    82d8:	bne	8294 <MyGame_Example_Monster_parse_json_table+0x14d8>
    82dc:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    82e0:	sub	r3, sl, r4
    82e4:	cmp	r3, #1
    82e8:	ble	a6e8 <MyGame_Example_Monster_parse_json_table+0x392c>
    82ec:	mov	r3, #1
    82f0:	mov	r2, sl
    82f4:	mov	r1, r4
    82f8:	mov	r0, r9
    82fc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8300:	cmp	r4, r0
    8304:	mov	fp, r0
    8308:	beq	a6e4 <MyGame_Example_Monster_parse_json_table+0x3928>
    830c:	ldr	r0, [r9]
    8310:	bl	0 <flatcc_builder_start_offset_vector>
    8314:	cmp	r0, #0
    8318:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    831c:	mov	r1, fp
    8320:	add	r3, sp, #84	; 0x54
    8324:	mov	r2, sl
    8328:	mov	r0, r9
    832c:	bl	938 <flatcc_json_parser_array_start>
    8330:	ldr	r3, [sp, #84]	; 0x54
    8334:	cmp	r3, #0
    8338:	mov	fp, r0
    833c:	beq	a39c <MyGame_Example_Monster_parse_json_table+0x35e0>
    8340:	add	r4, sp, #88	; 0x58
    8344:	mov	r5, #1
    8348:	b	8388 <MyGame_Example_Monster_parse_json_table+0x15cc>
    834c:	ldr	r0, [r9]
    8350:	bl	0 <flatcc_builder_extend_offset_vector>
    8354:	add	r3, sp, #84	; 0x54
    8358:	mov	r2, sl
    835c:	mov	r1, fp
    8360:	subs	ip, r0, #0
    8364:	mov	r0, r9
    8368:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    836c:	ldr	lr, [sp, #88]	; 0x58
    8370:	str	lr, [ip]
    8374:	bl	2140 <flatcc_json_parser_array_end>
    8378:	ldr	r3, [sp, #84]	; 0x54
    837c:	cmp	r3, #0
    8380:	mov	fp, r0
    8384:	beq	a39c <MyGame_Example_Monster_parse_json_table+0x35e0>
    8388:	mov	r1, fp
    838c:	mov	r3, r4
    8390:	mov	r2, sl
    8394:	mov	r0, r9
    8398:	bl	6dbc <MyGame_Example_Monster_parse_json_table>
    839c:	ldr	r3, [sp, #88]	; 0x58
    83a0:	mov	r1, r5
    83a4:	cmp	r3, #0
    83a8:	mov	fp, r0
    83ac:	bne	834c <MyGame_Example_Monster_parse_json_table+0x1590>
    83b0:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    83b4:	mov	r3, #2
    83b8:	mov	r2, sl
    83bc:	mov	r1, fp
    83c0:	mov	r0, r9
    83c4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    83c8:	cmp	r0, fp
    83cc:	mov	r5, r0
    83d0:	beq	74cc <MyGame_Example_Monster_parse_json_table+0x710>
    83d4:	add	r4, sp, #120	; 0x78
    83d8:	mov	r3, #0
    83dc:	strh	r3, [r4, #-8]!
    83e0:	mov	r1, r0
    83e4:	mov	r2, sl
    83e8:	mov	r3, r4
    83ec:	mov	r0, r9
    83f0:	bl	628 <flatcc_json_parser_int16.constprop.25>
    83f4:	cmp	r5, r0
    83f8:	mov	fp, r0
    83fc:	beq	a700 <MyGame_Example_Monster_parse_json_table+0x3944>
    8400:	ldrsh	r3, [sp, #112]	; 0x70
    8404:	cmp	r3, #100	; 0x64
    8408:	bne	8418 <MyGame_Example_Monster_parse_json_table+0x165c>
    840c:	ldr	r3, [r9, #8]
    8410:	tst	r3, #2
    8414:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8418:	mov	r3, #2
    841c:	mov	r2, r3
    8420:	mov	r1, r3
    8424:	ldr	r0, [r9]
    8428:	bl	0 <flatcc_builder_table_add>
    842c:	cmp	r0, #0
    8430:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8434:	ldrsh	r3, [sp, #112]	; 0x70
    8438:	strh	r3, [r0]
    843c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8440:	mov	r3, #6
    8444:	mov	r2, sl
    8448:	mov	r1, fp
    844c:	mov	r0, r9
    8450:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8454:	cmp	r0, fp
    8458:	mov	r5, r0
    845c:	beq	7c40 <MyGame_Example_Monster_parse_json_table+0xe84>
    8460:	add	r4, sp, #120	; 0x78
    8464:	mov	r3, #0
    8468:	mov	r1, r0
    846c:	str	r3, [r4, #-8]!
    8470:	mov	r2, sl
    8474:	mov	r0, r9
    8478:	mov	r3, r4
    847c:	bl	0 <flatcc_json_parser_float>
    8480:	cmp	r0, r5
    8484:	mov	fp, r0
    8488:	beq	a90c <MyGame_Example_Monster_parse_json_table+0x3b50>
    848c:	vldr	s15, [pc, #-656]	; 8204 <MyGame_Example_Monster_parse_json_table+0x1448>
    8490:	vldr	s14, [sp, #112]	; 0x70
    8494:	vcmp.f32	s14, s15
    8498:	vmrs	APSR_nzcv, fpscr
    849c:	bne	84ac <MyGame_Example_Monster_parse_json_table+0x16f0>
    84a0:	ldr	r3, [r9, #8]
    84a4:	tst	r3, #2
    84a8:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    84ac:	mov	r3, #4
    84b0:	mov	r2, r3
    84b4:	mov	r1, #26
    84b8:	ldr	r0, [r9]
    84bc:	bl	0 <flatcc_builder_table_add>
    84c0:	cmp	r0, #0
    84c4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    84c8:	ldr	r3, [sp, #112]	; 0x70
    84cc:	str	r3, [r0]
    84d0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    84d4:	mov	r3, #2
    84d8:	mov	r2, sl
    84dc:	mov	r1, r4
    84e0:	mov	r0, r9
    84e4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    84e8:	cmp	r4, r0
    84ec:	mov	fp, r0
    84f0:	beq	ad78 <MyGame_Example_Monster_parse_json_table+0x3fbc>
    84f4:	mov	r3, #0
    84f8:	mov	r1, #3
    84fc:	ldr	r0, [r9]
    8500:	str	r3, [sp, #88]	; 0x58
    8504:	bl	0 <flatcc_builder_start_table>
    8508:	cmp	r0, #0
    850c:	bne	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8510:	mov	r1, fp
    8514:	add	r3, sp, #104	; 0x68
    8518:	mov	r2, sl
    851c:	mov	r0, r9
    8520:	bl	884 <flatcc_json_parser_object_start>
    8524:	ldr	r3, [sp, #104]	; 0x68
    8528:	cmp	r3, #0
    852c:	mov	fp, r0
    8530:	beq	9d28 <MyGame_Example_Monster_parse_json_table+0x2f6c>
    8534:	add	r7, pc, #940	; 0x3ac
    8538:	ldrd	r6, [r7]
    853c:	mov	r8, #5
    8540:	b	85a0 <MyGame_Example_Monster_parse_json_table+0x17e4>
    8544:	add	r3, pc, #932	; 0x3a4
    8548:	ldrd	r2, [r3]
    854c:	mov	r0, #0
    8550:	cmp	r1, r3
    8554:	cmpeq	r0, r2
    8558:	bne	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    855c:	sub	r3, sl, fp
    8560:	cmp	r3, #4
    8564:	bgt	8c48 <MyGame_Example_Monster_parse_json_table+0x1e8c>
    8568:	mov	r1, fp
    856c:	mov	r2, sl
    8570:	mov	r0, r9
    8574:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8578:	mov	fp, r0
    857c:	mov	r1, fp
    8580:	add	r3, sp, #104	; 0x68
    8584:	mov	r2, sl
    8588:	mov	r0, r9
    858c:	bl	22c4 <flatcc_json_parser_object_end>
    8590:	ldr	r3, [sp, #104]	; 0x68
    8594:	cmp	r3, #0
    8598:	mov	fp, r0
    859c:	beq	9d28 <MyGame_Example_Monster_parse_json_table+0x2f6c>
    85a0:	cmp	sl, fp
    85a4:	beq	85d0 <MyGame_Example_Monster_parse_json_table+0x1814>
    85a8:	ldrb	r3, [fp]
    85ac:	cmp	r3, #34	; 0x22
    85b0:	moveq	r3, #0
    85b4:	addeq	fp, fp, #1
    85b8:	streq	r3, [r9, #12]
    85bc:	beq	85d0 <MyGame_Example_Monster_parse_json_table+0x1814>
    85c0:	cmp	r3, #46	; 0x2e
    85c4:	movne	r3, #1
    85c8:	strne	r3, [r9, #12]
    85cc:	beq	8f5c <MyGame_Example_Monster_parse_json_table+0x21a0>
    85d0:	mov	r1, sl
    85d4:	mov	r0, fp
    85d8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    85dc:	cmp	r1, r7
    85e0:	cmpeq	r0, r6
    85e4:	bls	8544 <MyGame_Example_Monster_parse_json_table+0x1788>
    85e8:	add	r5, pc, #776	; 0x308
    85ec:	ldrd	r4, [r5]
    85f0:	bic	r2, r0, #255	; 0xff
    85f4:	cmp	r1, r5
    85f8:	cmpeq	r2, r4
    85fc:	beq	873c <MyGame_Example_Monster_parse_json_table+0x1980>
    8600:	ldr	r2, [pc, #772]	; 890c <MyGame_Example_Monster_parse_json_table+0x1b50>
    8604:	mvn	r3, #0
    8608:	and	r2, r2, r0
    860c:	and	r3, r3, r1
    8610:	mov	r0, r2
    8614:	mov	r1, r3
    8618:	add	r3, pc, #736	; 0x2e0
    861c:	ldrd	r2, [r3]
    8620:	cmp	r1, r3
    8624:	cmpeq	r0, r2
    8628:	bne	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    862c:	sub	r3, sl, fp
    8630:	cmp	r3, #6
    8634:	ble	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    8638:	mov	r1, fp
    863c:	mov	r3, #6
    8640:	mov	r2, sl
    8644:	mov	r0, r9
    8648:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    864c:	cmp	r0, fp
    8650:	mov	r1, r0
    8654:	beq	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    8658:	mov	r3, #0
    865c:	str	r3, [sp]
    8660:	mov	r2, sl
    8664:	add	r3, sp, #112	; 0x70
    8668:	mov	r0, r9
    866c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8670:	ldr	r3, [sp, #112]	; 0x70
    8674:	cmp	r3, #0
    8678:	mov	fp, r0
    867c:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8680:	mov	r1, #2
    8684:	ldr	r0, [r9]
    8688:	bl	0 <flatcc_builder_table_add_offset>
    868c:	cmp	r0, #0
    8690:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8694:	ldr	r3, [sp, #112]	; 0x70
    8698:	str	r3, [r0]
    869c:	b	857c <MyGame_Example_Monster_parse_json_table+0x17c0>
    86a0:	sub	r3, sl, fp
    86a4:	cmp	r3, #3
    86a8:	ble	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    86ac:	mov	r3, #3
    86b0:	mov	r2, sl
    86b4:	mov	r1, fp
    86b8:	mov	r0, r9
    86bc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    86c0:	cmp	r0, fp
    86c4:	mov	r5, r0
    86c8:	beq	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    86cc:	mov	r0, #0
    86d0:	mov	r1, #0
    86d4:	add	r4, sp, #120	; 0x78
    86d8:	mov	r2, sl
    86dc:	strd	r0, [r4, #-8]!
    86e0:	mov	r1, r5
    86e4:	mov	r3, r4
    86e8:	mov	r0, r9
    86ec:	bl	7bc <flatcc_json_parser_int64>
    86f0:	cmp	r5, r0
    86f4:	mov	fp, r0
    86f8:	beq	a6b8 <MyGame_Example_Monster_parse_json_table+0x38fc>
    86fc:	ldrd	r2, [sp, #112]	; 0x70
    8700:	orrs	r3, r2, r3
    8704:	bne	8714 <MyGame_Example_Monster_parse_json_table+0x1958>
    8708:	ldr	r3, [r9, #8]
    870c:	tst	r3, #2
    8710:	beq	7e38 <MyGame_Example_Monster_parse_json_table+0x107c>
    8714:	mov	r3, #8
    8718:	mov	r2, r3
    871c:	mov	r1, r6
    8720:	ldr	r0, [r9]
    8724:	bl	0 <flatcc_builder_table_add>
    8728:	cmp	r0, #0
    872c:	beq	90a4 <MyGame_Example_Monster_parse_json_table+0x22e8>
    8730:	ldrd	r2, [sp, #112]	; 0x70
    8734:	strd	r2, [r0]
    8738:	b	7e38 <MyGame_Example_Monster_parse_json_table+0x107c>
    873c:	sub	r3, sl, fp
    8740:	cmp	r3, #7
    8744:	ble	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    8748:	mov	r1, fp
    874c:	mov	r3, #7
    8750:	mov	r2, sl
    8754:	mov	r0, r9
    8758:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    875c:	cmp	r0, fp
    8760:	mov	r1, r0
    8764:	beq	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    8768:	mov	r3, #1
    876c:	str	r3, [sp]
    8770:	mov	r2, sl
    8774:	add	r3, sp, #112	; 0x70
    8778:	mov	r0, r9
    877c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8780:	ldr	r3, [sp, #112]	; 0x70
    8784:	cmp	r3, #0
    8788:	mov	fp, r0
    878c:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8790:	mov	r1, #1
    8794:	ldr	r0, [r9]
    8798:	bl	0 <flatcc_builder_table_add_offset>
    879c:	cmp	r0, #0
    87a0:	bne	8694 <MyGame_Example_Monster_parse_json_table+0x18d8>
    87a4:	mov	r1, fp
    87a8:	mov	r3, #33	; 0x21
    87ac:	mov	r2, sl
    87b0:	mov	r0, r9
    87b4:	bl	0 <flatcc_json_parser_set_error>
    87b8:	ldr	r3, [sp, #88]	; 0x58
    87bc:	cmp	r3, #0
    87c0:	mov	fp, r0
    87c4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    87c8:	mov	r1, #35	; 0x23
    87cc:	ldr	r0, [r9]
    87d0:	bl	0 <flatcc_builder_table_add_offset>
    87d4:	cmp	r0, #0
    87d8:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    87dc:	ldr	r3, [sp, #88]	; 0x58
    87e0:	str	r3, [r0]
    87e4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    87e8:	ldr	r0, [r9]
    87ec:	bl	0 <flatcc_builder_end_vector>
    87f0:	cmp	r0, #0
    87f4:	str	r0, [sp, #88]	; 0x58
    87f8:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    87fc:	mov	r1, #9
    8800:	ldr	r0, [r9]
    8804:	bl	0 <flatcc_builder_table_add_offset>
    8808:	cmp	r0, #0
    880c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8810:	ldr	r3, [sp, #88]	; 0x58
    8814:	str	r3, [r0]
    8818:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    881c:	mov	r3, r8
    8820:	mov	r2, sl
    8824:	mov	r1, fp
    8828:	mov	r0, r9
    882c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8830:	cmp	r0, fp
    8834:	mov	r4, r0
    8838:	beq	7e24 <MyGame_Example_Monster_parse_json_table+0x1068>
    883c:	mov	r2, #0
    8840:	mov	r3, #0
    8844:	cmp	sl, r0
    8848:	strh	r7, [sp, #82]	; 0x52
    884c:	str	r7, [sp, #104]	; 0x68
    8850:	strd	r2, [sp, #112]	; 0x70
    8854:	beq	99fc <MyGame_Example_Monster_parse_json_table+0x2c40>
    8858:	add	r3, sp, #112	; 0x70
    885c:	str	r3, [sp]
    8860:	mov	r1, r0
    8864:	add	r3, sp, #104	; 0x68
    8868:	mov	r2, sl
    886c:	mov	r0, r9
    8870:	bl	0 <flatcc_json_parser_integer>
    8874:	cmp	r4, r0
    8878:	mov	fp, r0
    887c:	beq	99f8 <MyGame_Example_Monster_parse_json_table+0x2c3c>
    8880:	ldr	r3, [sp, #104]	; 0x68
    8884:	cmp	r3, #0
    8888:	bne	9b0c <MyGame_Example_Monster_parse_json_table+0x2d50>
    888c:	ldrd	r2, [sp, #112]	; 0x70
    8890:	ldr	r0, [pc, #112]	; 8908 <MyGame_Example_Monster_parse_json_table+0x1b4c>
    8894:	mov	r1, #0
    8898:	cmp	r3, r1
    889c:	cmpeq	r2, r0
    88a0:	uxthls	r2, r2
    88a4:	strhls	r2, [sp, #82]	; 0x52
    88a8:	bhi	9c64 <MyGame_Example_Monster_parse_json_table+0x2ea8>
    88ac:	cmp	r2, #0
    88b0:	bne	88c0 <MyGame_Example_Monster_parse_json_table+0x1b04>
    88b4:	ldr	r3, [r9, #8]
    88b8:	tst	r3, #2
    88bc:	beq	7e38 <MyGame_Example_Monster_parse_json_table+0x107c>
    88c0:	mov	r3, #2
    88c4:	mov	r2, r3
    88c8:	mov	r1, r3
    88cc:	ldr	r0, [r9]
    88d0:	bl	0 <flatcc_builder_table_add>
    88d4:	cmp	r0, #0
    88d8:	beq	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    88dc:	ldrh	r3, [sp, #82]	; 0x52
    88e0:	strh	r3, [r0]
    88e4:	b	7e38 <MyGame_Example_Monster_parse_json_table+0x107c>
    88e8:	.word	0x6563ffff
    88ec:	.word	0x6e657374
    88f0:	.word	0x00000000
    88f4:	.word	0x64617461
    88f8:	.word	0x61746100
    88fc:	.word	0x75726c64
    8900:	.word	0x65640000
    8904:	.word	0x6e657374
    8908:	.word	0x0000ffff
    890c:	.word	0xffff0000
    8910:	.word	0x67320000
    8914:	.word	0x00000114
    8918:	.word	0x00000008
    891c:	.word	0x00000010
    8920:	.word	0x00000094
    8924:	.word	0x000000ac
    8928:	.word	0x00000000
    892c:	.word	0x000000f8
    8930:	mov	r1, fp
    8934:	mov	r3, #5
    8938:	mov	r2, sl
    893c:	mov	r0, r9
    8940:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8944:	cmp	r0, fp
    8948:	mov	r1, r0
    894c:	beq	7934 <MyGame_Example_Monster_parse_json_table+0xb78>
    8950:	add	r3, sp, #88	; 0x58
    8954:	mov	r2, sl
    8958:	mov	r0, r9
    895c:	bl	6dbc <MyGame_Example_Monster_parse_json_table>
    8960:	ldr	r3, [sp, #88]	; 0x58
    8964:	cmp	r3, #0
    8968:	mov	fp, r0
    896c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8970:	mov	r1, #12
    8974:	ldr	r0, [r9]
    8978:	bl	0 <flatcc_builder_table_add_offset>
    897c:	cmp	r0, #0
    8980:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8984:	ldr	r3, [sp, #88]	; 0x58
    8988:	str	r3, [r0]
    898c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8990:	add	r4, fp, #16
    8994:	mov	r0, r4
    8998:	mov	r1, sl
    899c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    89a0:	ldr	r3, [pc, #-156]	; 890c <MyGame_Example_Monster_parse_json_table+0x1b50>
    89a4:	mov	r2, #0
    89a8:	and	r3, r3, r1
    89ac:	mov	r7, r1
    89b0:	ldr	r1, [pc, #-168]	; 8910 <MyGame_Example_Monster_parse_json_table+0x1b54>
    89b4:	and	r2, r2, r0
    89b8:	cmp	r3, r1
    89bc:	mov	r0, #0
    89c0:	cmpeq	r2, r0
    89c4:	beq	9d4c <MyGame_Example_Monster_parse_json_table+0x2f90>
    89c8:	and	r7, r7, #-16777216	; 0xff000000
    89cc:	mov	r6, #0
    89d0:	cmp	r7, #1728053248	; 0x67000000
    89d4:	cmpeq	r6, #0
    89d8:	bne	9b30 <MyGame_Example_Monster_parse_json_table+0x2d74>
    89dc:	sub	r3, sl, r4
    89e0:	cmp	r3, #1
    89e4:	ble	aa2c <MyGame_Example_Monster_parse_json_table+0x3c70>
    89e8:	mov	r3, #1
    89ec:	mov	r2, sl
    89f0:	mov	r1, r4
    89f4:	mov	r0, r9
    89f8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    89fc:	cmp	r4, r0
    8a00:	mov	fp, r0
    8a04:	beq	aa28 <MyGame_Example_Monster_parse_json_table+0x3c6c>
    8a08:	ldr	r0, [r9]
    8a0c:	bl	0 <flatcc_builder_start_offset_vector>
    8a10:	cmp	r0, #0
    8a14:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8a18:	mov	r1, fp
    8a1c:	add	r3, sp, #84	; 0x54
    8a20:	mov	r2, sl
    8a24:	mov	r0, r9
    8a28:	bl	938 <flatcc_json_parser_array_start>
    8a2c:	ldr	r3, [sp, #84]	; 0x54
    8a30:	cmp	r3, #0
    8a34:	mov	fp, r0
    8a38:	beq	a810 <MyGame_Example_Monster_parse_json_table+0x3a54>
    8a3c:	add	r4, sp, #88	; 0x58
    8a40:	mov	r5, #1
    8a44:	b	8a84 <MyGame_Example_Monster_parse_json_table+0x1cc8>
    8a48:	ldr	r0, [r9]
    8a4c:	bl	0 <flatcc_builder_extend_offset_vector>
    8a50:	add	r3, sp, #84	; 0x54
    8a54:	mov	r2, sl
    8a58:	mov	r1, fp
    8a5c:	subs	ip, r0, #0
    8a60:	mov	r0, r9
    8a64:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8a68:	ldr	lr, [sp, #88]	; 0x58
    8a6c:	str	lr, [ip]
    8a70:	bl	2140 <flatcc_json_parser_array_end>
    8a74:	ldr	r3, [sp, #84]	; 0x54
    8a78:	cmp	r3, #0
    8a7c:	mov	fp, r0
    8a80:	beq	a810 <MyGame_Example_Monster_parse_json_table+0x3a54>
    8a84:	mov	r1, fp
    8a88:	mov	r3, r4
    8a8c:	mov	r2, sl
    8a90:	mov	r0, r9
    8a94:	bl	0 <flatcc_json_parser_build_string>
    8a98:	ldr	r3, [sp, #88]	; 0x58
    8a9c:	mov	r1, r5
    8aa0:	cmp	r3, #0
    8aa4:	mov	fp, r0
    8aa8:	bne	8a48 <MyGame_Example_Monster_parse_json_table+0x1c8c>
    8aac:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8ab0:	sub	r3, sl, r4
    8ab4:	cmp	r3, #8
    8ab8:	ble	7bb8 <MyGame_Example_Monster_parse_json_table+0xdfc>
    8abc:	mov	r3, #8
    8ac0:	mov	r2, sl
    8ac4:	mov	r1, r4
    8ac8:	mov	r0, r9
    8acc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8ad0:	cmp	r4, r0
    8ad4:	mov	fp, r0
    8ad8:	beq	7bb4 <MyGame_Example_Monster_parse_json_table+0xdf8>
    8adc:	mov	r2, #1
    8ae0:	mov	r1, r2
    8ae4:	mvn	r3, #0
    8ae8:	ldr	r0, [r9]
    8aec:	bl	0 <flatcc_builder_start_vector>
    8af0:	subs	r6, r0, #0
    8af4:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8af8:	mov	r1, fp
    8afc:	add	r3, sp, #84	; 0x54
    8b00:	mov	r2, sl
    8b04:	mov	r0, r9
    8b08:	bl	938 <flatcc_json_parser_array_start>
    8b0c:	ldr	r3, [sp, #84]	; 0x54
    8b10:	cmp	r3, #0
    8b14:	mov	fp, r0
    8b18:	beq	9c00 <MyGame_Example_Monster_parse_json_table+0x2e44>
    8b1c:	ldr	r7, [pc, #-520]	; 891c <MyGame_Example_Monster_parse_json_table+0x1b60>
    8b20:	mov	r5, #1
    8b24:	b	8b50 <MyGame_Example_Monster_parse_json_table+0x1d94>
    8b28:	ldrb	r2, [sp, #104]	; 0x68
    8b2c:	add	r3, sp, #84	; 0x54
    8b30:	mov	r0, r9
    8b34:	strb	r2, [r4]
    8b38:	mov	r2, sl
    8b3c:	bl	2140 <flatcc_json_parser_array_end>
    8b40:	ldr	r3, [sp, #84]	; 0x54
    8b44:	cmp	r3, #0
    8b48:	mov	fp, r0
    8b4c:	beq	9c00 <MyGame_Example_Monster_parse_json_table+0x2e44>
    8b50:	mov	r1, r5
    8b54:	ldr	r0, [r9]
    8b58:	strb	r6, [sp, #104]	; 0x68
    8b5c:	bl	0 <flatcc_builder_extend_vector>
    8b60:	subs	r4, r0, #0
    8b64:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8b68:	sub	r8, sl, fp
    8b6c:	cmp	r8, #3
    8b70:	ble	8bbc <MyGame_Example_Monster_parse_json_table+0x1e00>
    8b74:	ldr	r1, [pc, #-612]	; 8918 <MyGame_Example_Monster_parse_json_table+0x1b5c>
    8b78:	mov	r2, #4
    8b7c:	mov	r0, fp
    8b80:	bl	0 <memcmp>
    8b84:	cmp	r0, #0
    8b88:	strbeq	r5, [sp, #104]	; 0x68
    8b8c:	addeq	r1, fp, #4
    8b90:	beq	8be4 <MyGame_Example_Monster_parse_json_table+0x1e28>
    8b94:	cmp	r8, #4
    8b98:	beq	8bbc <MyGame_Example_Monster_parse_json_table+0x1e00>
    8b9c:	mov	r1, r7
    8ba0:	mov	r2, #5
    8ba4:	mov	r0, fp
    8ba8:	bl	0 <memcmp>
    8bac:	cmp	r0, #0
    8bb0:	strbeq	r0, [sp, #104]	; 0x68
    8bb4:	addeq	r1, fp, #5
    8bb8:	beq	8be4 <MyGame_Example_Monster_parse_json_table+0x1e28>
    8bbc:	add	r3, sp, #112	; 0x70
    8bc0:	mov	r1, fp
    8bc4:	mov	r2, sl
    8bc8:	mov	r0, r9
    8bcc:	bl	4b8 <flatcc_json_parser_uint8>
    8bd0:	ldrb	r3, [sp, #112]	; 0x70
    8bd4:	adds	r3, r3, #0
    8bd8:	movne	r3, #1
    8bdc:	strb	r3, [sp, #104]	; 0x68
    8be0:	mov	r1, r0
    8be4:	cmp	r1, fp
    8be8:	bne	8b28 <MyGame_Example_Monster_parse_json_table+0x1d6c>
    8bec:	add	r3, sp, #104	; 0x68
    8bf0:	str	r3, [sp]
    8bf4:	mov	r1, fp
    8bf8:	ldr	r3, [pc, #-748]	; 8914 <MyGame_Example_Monster_parse_json_table+0x1b58>
    8bfc:	mov	r2, sl
    8c00:	mov	r0, r9
    8c04:	bl	de0 <flatcc_json_parser_symbolic_bool>
    8c08:	cmp	sl, r0
    8c0c:	cmpne	r0, fp
    8c10:	mov	r1, r0
    8c14:	bne	8b28 <MyGame_Example_Monster_parse_json_table+0x1d6c>
    8c18:	mov	r3, sl
    8c1c:	mov	fp, r0
    8c20:	mov	sl, r9
    8c24:	mov	r9, r3
    8c28:	b	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    8c2c:	mov	r1, fp
    8c30:	mov	r3, r8
    8c34:	mov	r2, sl
    8c38:	mov	r0, r9
    8c3c:	bl	0 <flatcc_json_parser_set_error>
    8c40:	mov	fp, r0
    8c44:	b	7e84 <MyGame_Example_Monster_parse_json_table+0x10c8>
    8c48:	mov	r1, fp
    8c4c:	mov	r3, #4
    8c50:	mov	r2, sl
    8c54:	mov	r0, r9
    8c58:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8c5c:	cmp	r0, fp
    8c60:	mov	r1, r0
    8c64:	beq	8568 <MyGame_Example_Monster_parse_json_table+0x17ac>
    8c68:	mov	r5, #0
    8c6c:	add	r3, sp, #112	; 0x70
    8c70:	str	r5, [sp]
    8c74:	mov	r2, sl
    8c78:	mov	r0, r9
    8c7c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8c80:	ldr	r3, [sp, #112]	; 0x70
    8c84:	cmp	r3, r5
    8c88:	mov	fp, r0
    8c8c:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8c90:	mov	r1, r5
    8c94:	ldr	r0, [r9]
    8c98:	bl	0 <flatcc_builder_table_add_offset>
    8c9c:	cmp	r0, #0
    8ca0:	bne	8694 <MyGame_Example_Monster_parse_json_table+0x18d8>
    8ca4:	b	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    8ca8:	mov	r3, #8
    8cac:	mov	r2, sl
    8cb0:	mov	r1, fp
    8cb4:	mov	r0, r9
    8cb8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8cbc:	cmp	r0, fp
    8cc0:	mov	r4, r0
    8cc4:	beq	7618 <MyGame_Example_Monster_parse_json_table+0x85c>
    8cc8:	sub	r5, sl, r0
    8ccc:	mov	r3, #0
    8cd0:	cmp	r5, #3
    8cd4:	strb	r3, [sp, #100]	; 0x64
    8cd8:	ble	8d14 <MyGame_Example_Monster_parse_json_table+0x1f58>
    8cdc:	mov	r2, #4
    8ce0:	ldr	r1, [pc, #-976]	; 8918 <MyGame_Example_Monster_parse_json_table+0x1b5c>
    8ce4:	bl	0 <memcmp>
    8ce8:	cmp	r0, #0
    8cec:	beq	99e8 <MyGame_Example_Monster_parse_json_table+0x2c2c>
    8cf0:	cmp	r5, #4
    8cf4:	beq	8d14 <MyGame_Example_Monster_parse_json_table+0x1f58>
    8cf8:	mov	r2, #5
    8cfc:	ldr	r1, [pc, #-1000]	; 891c <MyGame_Example_Monster_parse_json_table+0x1b60>
    8d00:	mov	r0, r4
    8d04:	bl	0 <memcmp>
    8d08:	cmp	r0, #0
    8d0c:	addeq	fp, r4, #5
    8d10:	beq	8d98 <MyGame_Example_Monster_parse_json_table+0x1fdc>
    8d14:	mov	r0, #0
    8d18:	mov	r1, #0
    8d1c:	mov	r3, #0
    8d20:	cmp	sl, r4
    8d24:	strd	r0, [sp, #112]	; 0x70
    8d28:	str	r3, [sp, #104]	; 0x68
    8d2c:	beq	9994 <MyGame_Example_Monster_parse_json_table+0x2bd8>
    8d30:	add	r3, sp, #112	; 0x70
    8d34:	str	r3, [sp]
    8d38:	mov	r2, sl
    8d3c:	add	r3, sp, #104	; 0x68
    8d40:	mov	r1, r4
    8d44:	mov	r0, r9
    8d48:	bl	0 <flatcc_json_parser_integer>
    8d4c:	cmp	r4, r0
    8d50:	mov	fp, r0
    8d54:	beq	9994 <MyGame_Example_Monster_parse_json_table+0x2bd8>
    8d58:	ldr	r3, [sp, #104]	; 0x68
    8d5c:	cmp	r3, #0
    8d60:	bne	a03c <MyGame_Example_Monster_parse_json_table+0x3280>
    8d64:	ldrd	r2, [sp, #112]	; 0x70
    8d68:	cmp	r3, #0
    8d6c:	cmpeq	r2, #255	; 0xff
    8d70:	bhi	a460 <MyGame_Example_Monster_parse_json_table+0x36a4>
    8d74:	tst	r2, #255	; 0xff
    8d78:	movne	r3, #1
    8d7c:	moveq	r3, #0
    8d80:	strb	r3, [sp, #100]	; 0x64
    8d84:	cmp	r3, #1
    8d88:	bne	8d98 <MyGame_Example_Monster_parse_json_table+0x1fdc>
    8d8c:	ldr	r3, [r9, #8]
    8d90:	tst	r3, #2
    8d94:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8d98:	mov	r3, #1
    8d9c:	mov	r2, r3
    8da0:	mov	r1, #15
    8da4:	ldr	r0, [r9]
    8da8:	bl	0 <flatcc_builder_table_add>
    8dac:	cmp	r0, #0
    8db0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8db4:	ldrb	r3, [sp, #100]	; 0x64
    8db8:	strb	r3, [r0]
    8dbc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8dc0:	mov	r3, #4
    8dc4:	mov	r2, sl
    8dc8:	mov	r1, fp
    8dcc:	mov	r0, r9
    8dd0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8dd4:	cmp	r0, fp
    8dd8:	mov	r4, r0
    8ddc:	beq	7758 <MyGame_Example_Monster_parse_json_table+0x99c>
    8de0:	mov	r2, #1
    8de4:	mov	r1, r2
    8de8:	mvn	r3, #0
    8dec:	ldr	r0, [r9]
    8df0:	bl	0 <flatcc_builder_start_vector>
    8df4:	subs	r6, r0, #0
    8df8:	bne	a44c <MyGame_Example_Monster_parse_json_table+0x3690>
    8dfc:	add	r3, sp, #84	; 0x54
    8e00:	mov	r1, r4
    8e04:	mov	r2, sl
    8e08:	mov	r0, r9
    8e0c:	bl	938 <flatcc_json_parser_array_start>
    8e10:	ldr	r3, [sp, #84]	; 0x54
    8e14:	cmp	r3, #0
    8e18:	mov	fp, r0
    8e1c:	beq	8ec8 <MyGame_Example_Monster_parse_json_table+0x210c>
    8e20:	ldr	r8, [pc, #-1288]	; 8920 <MyGame_Example_Monster_parse_json_table+0x1b64>
    8e24:	mov	r7, #1
    8e28:	add	r5, sp, #112	; 0x70
    8e2c:	b	8e5c <MyGame_Example_Monster_parse_json_table+0x20a0>
    8e30:	ldrb	r2, [sp, #112]	; 0x70
    8e34:	mov	r1, r0
    8e38:	add	r3, sp, #84	; 0x54
    8e3c:	strb	r2, [r4]
    8e40:	mov	r0, r9
    8e44:	mov	r2, sl
    8e48:	bl	2140 <flatcc_json_parser_array_end>
    8e4c:	ldr	r3, [sp, #84]	; 0x54
    8e50:	cmp	r3, #0
    8e54:	mov	fp, r0
    8e58:	beq	8ec8 <MyGame_Example_Monster_parse_json_table+0x210c>
    8e5c:	mov	r1, r7
    8e60:	ldr	r0, [r9]
    8e64:	strb	r6, [sp, #112]	; 0x70
    8e68:	bl	0 <flatcc_builder_extend_vector>
    8e6c:	mov	r1, fp
    8e70:	mov	r3, r5
    8e74:	mov	r2, sl
    8e78:	subs	r4, r0, #0
    8e7c:	mov	r0, r9
    8e80:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8e84:	bl	4b8 <flatcc_json_parser_uint8>
    8e88:	cmp	r0, fp
    8e8c:	bne	8e30 <MyGame_Example_Monster_parse_json_table+0x2074>
    8e90:	str	r5, [sp]
    8e94:	mov	r3, r8
    8e98:	mov	r2, sl
    8e9c:	mov	r1, fp
    8ea0:	mov	r0, r9
    8ea4:	bl	18a4 <flatcc_json_parser_symbolic_uint8>
    8ea8:	cmp	sl, r0
    8eac:	cmpne	r0, fp
    8eb0:	bne	8e30 <MyGame_Example_Monster_parse_json_table+0x2074>
    8eb4:	mov	r3, sl
    8eb8:	mov	fp, r0
    8ebc:	mov	sl, r9
    8ec0:	mov	r9, r3
    8ec4:	b	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    8ec8:	ldr	r0, [r9]
    8ecc:	bl	0 <flatcc_builder_end_vector>
    8ed0:	cmp	r0, #0
    8ed4:	str	r0, [sp, #88]	; 0x58
    8ed8:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8edc:	mov	r1, #30
    8ee0:	ldr	r0, [r9]
    8ee4:	bl	0 <flatcc_builder_table_add_offset>
    8ee8:	cmp	r0, #0
    8eec:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8ef0:	ldr	r3, [sp, #88]	; 0x58
    8ef4:	str	r3, [r0]
    8ef8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8efc:	mov	r1, fp
    8f00:	mov	r3, #4
    8f04:	mov	r2, sl
    8f08:	mov	r0, r9
    8f0c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8f10:	cmp	r0, fp
    8f14:	mov	r1, r0
    8f18:	beq	7734 <MyGame_Example_Monster_parse_json_table+0x978>
    8f1c:	add	r3, sp, #88	; 0x58
    8f20:	mov	r2, sl
    8f24:	mov	r0, r9
    8f28:	bl	0 <flatcc_json_parser_build_string>
    8f2c:	ldr	r3, [sp, #88]	; 0x58
    8f30:	cmp	r3, #0
    8f34:	mov	fp, r0
    8f38:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8f3c:	mov	r1, #3
    8f40:	ldr	r0, [r9]
    8f44:	bl	0 <flatcc_builder_table_add_offset>
    8f48:	cmp	r0, #0
    8f4c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8f50:	ldr	r3, [sp, #88]	; 0x58
    8f54:	str	r3, [r0]
    8f58:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    8f5c:	mov	r1, fp
    8f60:	mov	r3, r8
    8f64:	mov	r2, sl
    8f68:	mov	r0, r9
    8f6c:	bl	0 <flatcc_json_parser_set_error>
    8f70:	mov	fp, r0
    8f74:	b	85d0 <MyGame_Example_Monster_parse_json_table+0x1814>
    8f78:	add	r4, fp, #8
    8f7c:	mov	r0, r4
    8f80:	mov	r1, sl
    8f84:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8f88:	mov	r0, #0
    8f8c:	and	r1, r1, #-16777216	; 0xff000000
    8f90:	cmp	r1, #2030043136	; 0x79000000
    8f94:	cmpeq	r0, #0
    8f98:	bne	9adc <MyGame_Example_Monster_parse_json_table+0x2d20>
    8f9c:	sub	r3, sl, r4
    8fa0:	cmp	r3, #1
    8fa4:	ble	ab4c <MyGame_Example_Monster_parse_json_table+0x3d90>
    8fa8:	mov	r3, #1
    8fac:	mov	r2, sl
    8fb0:	mov	r1, r4
    8fb4:	mov	r0, r9
    8fb8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    8fbc:	cmp	r4, r0
    8fc0:	mov	fp, r0
    8fc4:	beq	ab48 <MyGame_Example_Monster_parse_json_table+0x3d8c>
    8fc8:	mov	r2, #1
    8fcc:	mov	r1, r2
    8fd0:	mvn	r3, #0
    8fd4:	ldr	r0, [r9]
    8fd8:	bl	0 <flatcc_builder_start_vector>
    8fdc:	cmp	r0, #0
    8fe0:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    8fe4:	mov	r1, fp
    8fe8:	add	r3, sp, #84	; 0x54
    8fec:	mov	r2, sl
    8ff0:	mov	r0, r9
    8ff4:	bl	938 <flatcc_json_parser_array_start>
    8ff8:	ldr	r3, [sp, #84]	; 0x54
    8ffc:	cmp	r3, #0
    9000:	mov	fp, r0
    9004:	beq	a3fc <MyGame_Example_Monster_parse_json_table+0x3640>
    9008:	ldr	r8, [pc, #-1772]	; 8924 <MyGame_Example_Monster_parse_json_table+0x1b68>
    900c:	mov	r7, #0
    9010:	mov	r6, #1
    9014:	add	r5, sp, #112	; 0x70
    9018:	b	9048 <MyGame_Example_Monster_parse_json_table+0x228c>
    901c:	ldrb	r2, [sp, #112]	; 0x70
    9020:	mov	r1, r0
    9024:	add	r3, sp, #84	; 0x54
    9028:	strb	r2, [r4]
    902c:	mov	r0, r9
    9030:	mov	r2, sl
    9034:	bl	2140 <flatcc_json_parser_array_end>
    9038:	ldr	r3, [sp, #84]	; 0x54
    903c:	cmp	r3, #0
    9040:	mov	fp, r0
    9044:	beq	a3fc <MyGame_Example_Monster_parse_json_table+0x3640>
    9048:	mov	r1, r6
    904c:	ldr	r0, [r9]
    9050:	strb	r7, [sp, #112]	; 0x70
    9054:	bl	0 <flatcc_builder_extend_vector>
    9058:	mov	r1, fp
    905c:	mov	r3, r5
    9060:	mov	r2, sl
    9064:	subs	r4, r0, #0
    9068:	mov	r0, r9
    906c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9070:	bl	4b8 <flatcc_json_parser_uint8>
    9074:	cmp	r0, fp
    9078:	bne	901c <MyGame_Example_Monster_parse_json_table+0x2260>
    907c:	str	r5, [sp]
    9080:	mov	r3, r8
    9084:	mov	r2, sl
    9088:	mov	r1, fp
    908c:	mov	r0, r9
    9090:	bl	18a4 <flatcc_json_parser_symbolic_uint8>
    9094:	cmp	sl, r0
    9098:	cmpne	r0, fp
    909c:	bne	901c <MyGame_Example_Monster_parse_json_table+0x2260>
    90a0:	b	8eb4 <MyGame_Example_Monster_parse_json_table+0x20f8>
    90a4:	mov	r0, fp
    90a8:	mov	fp, r0
    90ac:	mov	r1, fp
    90b0:	mov	r3, #33	; 0x21
    90b4:	mov	r2, sl
    90b8:	mov	r0, r9
    90bc:	bl	0 <flatcc_json_parser_set_error>
    90c0:	ldr	r3, [sp, #88]	; 0x58
    90c4:	cmp	r3, #0
    90c8:	mov	fp, r0
    90cc:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    90d0:	mov	r1, #14
    90d4:	ldr	r0, [r9]
    90d8:	bl	0 <flatcc_builder_table_add_offset>
    90dc:	cmp	r0, #0
    90e0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    90e4:	ldr	r3, [sp, #88]	; 0x58
    90e8:	str	r3, [r0]
    90ec:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    90f0:	ldr	r0, [r9]
    90f4:	bl	0 <flatcc_builder_end_vector>
    90f8:	cmp	r0, #0
    90fc:	str	r0, [sp, #88]	; 0x58
    9100:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9104:	mov	r1, #31
    9108:	ldr	r0, [r9]
    910c:	bl	0 <flatcc_builder_table_add_offset>
    9110:	cmp	r0, #0
    9114:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9118:	ldr	r3, [sp, #88]	; 0x58
    911c:	str	r3, [r0]
    9120:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9124:	mov	r1, fp
    9128:	mov	r3, #4
    912c:	mov	r2, sl
    9130:	mov	r0, r9
    9134:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9138:	cmp	r0, fp
    913c:	mov	r1, r0
    9140:	beq	7148 <MyGame_Example_Monster_parse_json_table+0x38c>
    9144:	ldr	r2, [sp, #92]	; 0x5c
    9148:	ldr	ip, [pc, #-2088]	; 8928 <MyGame_Example_Monster_parse_json_table+0x1b6c>
    914c:	mov	r3, #8
    9150:	str	r3, [sp]
    9154:	stmib	sp, {r2, ip}
    9158:	mov	r3, #0
    915c:	mov	r2, sl
    9160:	mov	r0, r9
    9164:	bl	0 <flatcc_json_parser_union>
    9168:	mov	fp, r0
    916c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9170:	mov	r3, #3
    9174:	mov	r2, sl
    9178:	mov	r1, fp
    917c:	mov	r0, r9
    9180:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9184:	cmp	r0, fp
    9188:	mov	r5, r0
    918c:	beq	7470 <MyGame_Example_Monster_parse_json_table+0x6b4>
    9190:	mov	r3, #16
    9194:	mov	r2, #32
    9198:	mov	r1, #0
    919c:	ldr	r0, [r9]
    91a0:	bl	0 <flatcc_builder_table_add>
    91a4:	subs	r6, r0, #0
    91a8:	beq	abb8 <MyGame_Example_Monster_parse_json_table+0x3dfc>
    91ac:	add	r3, sp, #100	; 0x64
    91b0:	mov	r1, r5
    91b4:	mov	r2, sl
    91b8:	mov	r0, r9
    91bc:	bl	884 <flatcc_json_parser_object_start>
    91c0:	ldr	r3, [sp, #100]	; 0x64
    91c4:	cmp	r3, #0
    91c8:	mov	fp, r0
    91cc:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    91d0:	str	r6, [sp, #64]	; 0x40
    91d4:	ldr	r8, [pc, #-2224]	; 892c <MyGame_Example_Monster_parse_json_table+0x1b70>
    91d8:	vldr	s18, [pc, #896]	; 9560 <MyGame_Example_Monster_parse_json_table+0x27a4>
    91dc:	vldr	d8, [pc, #852]	; 9538 <MyGame_Example_Monster_parse_json_table+0x277c>
    91e0:	ldrd	r6, [sp, #72]	; 0x48
    91e4:	b	9370 <MyGame_Example_Monster_parse_json_table+0x25b4>
    91e8:	ldrb	r2, [fp, #7]
    91ec:	mov	r3, #0
    91f0:	ldrb	r0, [fp, #6]
    91f4:	lsr	lr, r0, #24
    91f8:	lsl	r1, r0, #8
    91fc:	str	lr, [sp, #60]	; 0x3c
    9200:	str	r1, [sp, #56]	; 0x38
    9204:	ldrd	r0, [sp, #56]	; 0x38
    9208:	orr	r0, r0, r2
    920c:	orr	r1, r1, r3
    9210:	mov	r2, r0
    9214:	mov	r3, r1
    9218:	ldrb	r0, [fp, #5]
    921c:	lsr	lr, r0, #16
    9220:	lsl	r1, r0, #16
    9224:	str	lr, [sp, #52]	; 0x34
    9228:	str	r1, [sp, #48]	; 0x30
    922c:	ldrd	r0, [sp, #48]	; 0x30
    9230:	orr	r0, r0, r2
    9234:	orr	r1, r1, r3
    9238:	mov	r2, r0
    923c:	mov	r3, r1
    9240:	ldrb	r0, [fp, #4]
    9244:	lsr	lr, r0, #8
    9248:	lsl	r1, r0, #24
    924c:	str	lr, [sp, #36]	; 0x24
    9250:	str	r1, [sp, #32]
    9254:	ldrd	r0, [sp, #32]
    9258:	orr	r0, r0, r2
    925c:	orr	r1, r1, r3
    9260:	mov	r2, r0
    9264:	mov	r3, r1
    9268:	ldrb	r1, [fp, #3]
    926c:	str	r1, [sp, #44]	; 0x2c
    9270:	mov	r1, #0
    9274:	str	r1, [sp, #40]	; 0x28
    9278:	ldrd	r0, [sp, #40]	; 0x28
    927c:	orr	r0, r0, r2
    9280:	orr	r1, r1, r3
    9284:	mov	r2, r0
    9288:	mov	r3, r1
    928c:	ldrb	r0, [fp, #2]
    9290:	lsl	r1, r0, #8
    9294:	str	r1, [sp, #28]
    9298:	mov	r1, #0
    929c:	str	r1, [sp, #24]
    92a0:	ldrd	r0, [sp, #24]
    92a4:	orr	r0, r0, r2
    92a8:	orr	r1, r1, r3
    92ac:	mov	r2, r0
    92b0:	mov	r3, r1
    92b4:	ldrb	r0, [fp, #1]
    92b8:	lsl	r1, r0, #16
    92bc:	str	r1, [sp, #20]
    92c0:	mov	r1, #0
    92c4:	str	r1, [sp, #16]
    92c8:	ldrd	r0, [sp, #16]
    92cc:	orr	r0, r0, r2
    92d0:	orr	r1, r1, r3
    92d4:	mov	r2, r0
    92d8:	mov	r3, r1
    92dc:	ldrb	r4, [fp]
    92e0:	add	r1, pc, #600	; 0x258
    92e4:	ldrd	r0, [r1]
    92e8:	mov	r6, #0
    92ec:	orr	r2, r2, r6
    92f0:	lsl	r7, r4, #24
    92f4:	orr	r3, r3, r7
    92f8:	cmp	r3, r1
    92fc:	cmpeq	r2, r0
    9300:	bls	9430 <MyGame_Example_Monster_parse_json_table+0x2674>
    9304:	mvn	r1, #-2013265920	; 0x88000000
    9308:	mvn	r0, #0
    930c:	cmp	r3, r1
    9310:	cmpeq	r2, r0
    9314:	bhi	94bc <MyGame_Example_Monster_parse_json_table+0x2700>
    9318:	add	r1, pc, #552	; 0x228
    931c:	ldrd	r0, [r1]
    9320:	and	r2, r2, #-16777216	; 0xff000000
    9324:	cmp	r3, r1
    9328:	cmpeq	r2, r0
    932c:	bne	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9330:	cmp	ip, #5
    9334:	bgt	96ec <MyGame_Example_Monster_parse_json_table+0x2930>
    9338:	mov	r1, fp
    933c:	mov	r2, sl
    9340:	mov	r0, r9
    9344:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9348:	mov	r4, r0
    934c:	add	r3, sp, #100	; 0x64
    9350:	mov	r1, r4
    9354:	mov	r2, sl
    9358:	mov	r0, r9
    935c:	bl	22c4 <flatcc_json_parser_object_end>
    9360:	ldr	r3, [sp, #100]	; 0x64
    9364:	cmp	r3, #0
    9368:	mov	fp, r0
    936c:	beq	978c <MyGame_Example_Monster_parse_json_table+0x29d0>
    9370:	cmp	sl, fp
    9374:	beq	9690 <MyGame_Example_Monster_parse_json_table+0x28d4>
    9378:	ldrb	r3, [fp]
    937c:	cmp	r3, #34	; 0x22
    9380:	moveq	r3, #0
    9384:	addeq	fp, fp, #1
    9388:	streq	r3, [r9, #12]
    938c:	beq	93a0 <MyGame_Example_Monster_parse_json_table+0x25e4>
    9390:	cmp	r3, #46	; 0x2e
    9394:	movne	r3, #1
    9398:	strne	r3, [r9, #12]
    939c:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x28dc>
    93a0:	sub	ip, sl, fp
    93a4:	cmp	ip, #8
    93a8:	bhi	91e8 <MyGame_Example_Monster_parse_json_table+0x242c>
    93ac:	sub	r3, ip, #1
    93b0:	cmp	r3, #7
    93b4:	ldrls	pc, [pc, r3, lsl #2]
    93b8:	b	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    93bc:	.word	0x00009424
    93c0:	.word	0x00009418
    93c4:	.word	0x0000940c
    93c8:	.word	0x00009400
    93cc:	.word	0x000093f4
    93d0:	.word	0x000093e8
    93d4:	.word	0x000093dc
    93d8:	.word	0x000091e8
    93dc:	mov	r2, #0
    93e0:	mov	r3, #0
    93e4:	b	91f0 <MyGame_Example_Monster_parse_json_table+0x2434>
    93e8:	mov	r2, #0
    93ec:	mov	r3, #0
    93f0:	b	9218 <MyGame_Example_Monster_parse_json_table+0x245c>
    93f4:	mov	r2, #0
    93f8:	mov	r3, #0
    93fc:	b	9240 <MyGame_Example_Monster_parse_json_table+0x2484>
    9400:	mov	r2, #0
    9404:	mov	r3, #0
    9408:	b	9268 <MyGame_Example_Monster_parse_json_table+0x24ac>
    940c:	mov	r2, #0
    9410:	mov	r3, #0
    9414:	b	928c <MyGame_Example_Monster_parse_json_table+0x24d0>
    9418:	mov	r2, #0
    941c:	mov	r3, #0
    9420:	b	92b4 <MyGame_Example_Monster_parse_json_table+0x24f8>
    9424:	mov	r2, #0
    9428:	mov	r3, #0
    942c:	b	92dc <MyGame_Example_Monster_parse_json_table+0x2520>
    9430:	add	r1, pc, #280	; 0x118
    9434:	ldrd	r0, [r1]
    9438:	and	r2, r2, #-16777216	; 0xff000000
    943c:	cmp	r3, r1
    9440:	cmpeq	r2, r0
    9444:	beq	9570 <MyGame_Example_Monster_parse_json_table+0x27b4>
    9448:	add	r1, pc, #264	; 0x108
    944c:	ldrd	r0, [r1]
    9450:	cmp	r3, r1
    9454:	cmpeq	r2, r0
    9458:	bne	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    945c:	cmp	ip, #5
    9460:	ble	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9464:	mov	r3, #5
    9468:	mov	r2, sl
    946c:	mov	r1, fp
    9470:	mov	r0, r9
    9474:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9478:	cmp	r0, fp
    947c:	mov	r5, r0
    9480:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9484:	add	fp, sp, #120	; 0x78
    9488:	mov	r1, r0
    948c:	vstmdb	fp!, {d8}
    9490:	mov	r2, sl
    9494:	mov	r0, r9
    9498:	mov	r3, fp
    949c:	bl	0 <flatcc_json_parser_double>
    94a0:	cmp	r5, r0
    94a4:	mov	r4, r0
    94a8:	beq	97b0 <MyGame_Example_Monster_parse_json_table+0x29f4>
    94ac:	ldrd	r2, [sp, #112]	; 0x70
    94b0:	ldr	r1, [sp, #64]	; 0x40
    94b4:	strd	r2, [r1, #16]
    94b8:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    94bc:	mvn	r1, #-2030043136	; 0x87000000
    94c0:	mvn	r0, #0
    94c4:	cmp	r3, r1
    94c8:	cmpeq	r2, r0
    94cc:	bhi	960c <MyGame_Example_Monster_parse_json_table+0x2850>
    94d0:	cmp	ip, #1
    94d4:	ble	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    94d8:	mov	r3, #1
    94dc:	mov	r2, sl
    94e0:	mov	r1, fp
    94e4:	mov	r0, r9
    94e8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    94ec:	cmp	r0, fp
    94f0:	mov	r5, r0
    94f4:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    94f8:	vmov	r3, s18
    94fc:	add	fp, sp, #120	; 0x78
    9500:	mov	r1, r0
    9504:	mov	r2, sl
    9508:	str	r3, [fp, #-8]!
    950c:	mov	r0, r9
    9510:	mov	r3, fp
    9514:	bl	0 <flatcc_json_parser_float>
    9518:	cmp	r5, r0
    951c:	mov	r4, r0
    9520:	beq	9c80 <MyGame_Example_Monster_parse_json_table+0x2ec4>
    9524:	ldr	r2, [sp, #64]	; 0x40
    9528:	ldr	r3, [sp, #112]	; 0x70
    952c:	str	r3, [r2]
    9530:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    9534:	nop			; (mov r0, r0)
	...
    9540:	.word	0x32ffffff
    9544:	.word	0x74657374
    9548:	.word	0x33000000
    954c:	.word	0x74657374
    9550:	.word	0x32000000
    9554:	.word	0x74657374
    9558:	.word	0x31000000
    955c:	.word	0x74657374
    9560:	.word	0x00000000
    9564:	.word	0x000000d4
    9568:	.word	0x000000c4
    956c:	.word	0x00000084
    9570:	cmp	ip, #5
    9574:	ble	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9578:	mov	r3, #5
    957c:	mov	r2, sl
    9580:	mov	r1, fp
    9584:	mov	r0, r9
    9588:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    958c:	cmp	r0, fp
    9590:	mov	r5, r0
    9594:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9598:	mov	r2, #0
    959c:	mov	r3, #0
    95a0:	cmp	sl, r0
    95a4:	strb	r6, [sp, #96]	; 0x60
    95a8:	str	r6, [sp, #104]	; 0x68
    95ac:	strd	r2, [sp, #112]	; 0x70
    95b0:	beq	97dc <MyGame_Example_Monster_parse_json_table+0x2a20>
    95b4:	add	r3, sp, #112	; 0x70
    95b8:	str	r3, [sp]
    95bc:	mov	r1, r0
    95c0:	add	r3, sp, #104	; 0x68
    95c4:	mov	r2, sl
    95c8:	mov	r0, r9
    95cc:	bl	0 <flatcc_json_parser_integer>
    95d0:	cmp	r5, r0
    95d4:	mov	r4, r0
    95d8:	beq	97dc <MyGame_Example_Monster_parse_json_table+0x2a20>
    95dc:	ldr	r1, [sp, #104]	; 0x68
    95e0:	ldrd	r2, [sp, #112]	; 0x70
    95e4:	cmp	r1, r6
    95e8:	beq	96b4 <MyGame_Example_Monster_parse_json_table+0x28f8>
    95ec:	cmp	r3, #0
    95f0:	cmpeq	r2, #128	; 0x80
    95f4:	rsbls	r2, r2, #0
    95f8:	sxtbls	r2, r2
    95fc:	bhi	9794 <MyGame_Example_Monster_parse_json_table+0x29d8>
    9600:	ldr	r3, [sp, #64]	; 0x40
    9604:	strb	r2, [r3, #24]
    9608:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    960c:	and	r3, r3, #-16777216	; 0xff000000
    9610:	mov	r2, #0
    9614:	cmp	r3, #2046820352	; 0x7a000000
    9618:	cmpeq	r2, #0
    961c:	beq	9728 <MyGame_Example_Monster_parse_json_table+0x296c>
    9620:	cmp	r3, #2030043136	; 0x79000000
    9624:	cmpeq	r2, #0
    9628:	bne	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    962c:	cmp	ip, #1
    9630:	ble	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9634:	mov	r3, #1
    9638:	mov	r2, sl
    963c:	mov	r1, fp
    9640:	mov	r0, r9
    9644:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9648:	cmp	r0, fp
    964c:	mov	r5, r0
    9650:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9654:	vmov	r3, s18
    9658:	add	fp, sp, #120	; 0x78
    965c:	mov	r1, r0
    9660:	mov	r2, sl
    9664:	str	r3, [fp, #-8]!
    9668:	mov	r0, r9
    966c:	mov	r3, fp
    9670:	bl	0 <flatcc_json_parser_float>
    9674:	cmp	r5, r0
    9678:	mov	r4, r0
    967c:	beq	a010 <MyGame_Example_Monster_parse_json_table+0x3254>
    9680:	ldr	r2, [sp, #64]	; 0x40
    9684:	ldr	r3, [sp, #112]	; 0x70
    9688:	str	r3, [r2, #4]
    968c:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    9690:	mov	fp, sl
    9694:	b	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9698:	mov	r1, fp
    969c:	mov	r3, #5
    96a0:	mov	r2, sl
    96a4:	mov	r0, r9
    96a8:	bl	0 <flatcc_json_parser_set_error>
    96ac:	mov	fp, r0
    96b0:	b	93a0 <MyGame_Example_Monster_parse_json_table+0x25e4>
    96b4:	cmp	r3, #0
    96b8:	cmpeq	r2, #127	; 0x7f
    96bc:	sxtbls	r2, r2
    96c0:	bls	9600 <MyGame_Example_Monster_parse_json_table+0x2844>
    96c4:	mov	r1, r0
    96c8:	mov	r3, #7
    96cc:	mov	r2, sl
    96d0:	mov	r0, r9
    96d4:	bl	0 <flatcc_json_parser_set_error>
    96d8:	mov	r4, r0
    96dc:	cmp	r5, r4
    96e0:	beq	97dc <MyGame_Example_Monster_parse_json_table+0x2a20>
    96e4:	ldrsb	r2, [sp, #96]	; 0x60
    96e8:	b	9600 <MyGame_Example_Monster_parse_json_table+0x2844>
    96ec:	mov	r1, fp
    96f0:	mov	r3, #5
    96f4:	mov	r2, sl
    96f8:	mov	r0, r9
    96fc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9700:	cmp	r0, fp
    9704:	mov	r1, r0
    9708:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    970c:	ldr	r3, [sp, #64]	; 0x40
    9710:	mov	r2, sl
    9714:	add	r3, r3, #26
    9718:	mov	r0, r9
    971c:	bl	2448 <MyGame_Example_Test_parse_json_struct_inline>
    9720:	mov	r4, r0
    9724:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    9728:	cmp	ip, #1
    972c:	ble	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9730:	mov	r3, #1
    9734:	mov	r2, sl
    9738:	mov	r1, fp
    973c:	mov	r0, r9
    9740:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9744:	cmp	r0, fp
    9748:	mov	r5, r0
    974c:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x257c>
    9750:	vmov	r3, s18
    9754:	add	fp, sp, #120	; 0x78
    9758:	mov	r1, r0
    975c:	mov	r2, sl
    9760:	str	r3, [fp, #-8]!
    9764:	mov	r0, r9
    9768:	mov	r3, fp
    976c:	bl	0 <flatcc_json_parser_float>
    9770:	cmp	r5, r0
    9774:	mov	r4, r0
    9778:	beq	a3d0 <MyGame_Example_Monster_parse_json_table+0x3614>
    977c:	ldr	r2, [sp, #64]	; 0x40
    9780:	ldr	r3, [sp, #112]	; 0x70
    9784:	str	r3, [r2, #8]
    9788:	b	934c <MyGame_Example_Monster_parse_json_table+0x2590>
    978c:	strd	r6, [sp, #72]	; 0x48
    9790:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9794:	mov	r1, r0
    9798:	mov	r3, #8
    979c:	mov	r2, sl
    97a0:	mov	r0, r9
    97a4:	bl	0 <flatcc_json_parser_set_error>
    97a8:	mov	r4, r0
    97ac:	b	96dc <MyGame_Example_Monster_parse_json_table+0x2920>
    97b0:	mov	r1, r0
    97b4:	str	fp, [sp]
    97b8:	ldr	r3, [pc, #-604]	; 9564 <MyGame_Example_Monster_parse_json_table+0x27a8>
    97bc:	mov	r2, sl
    97c0:	mov	r0, r9
    97c4:	bl	be4 <flatcc_json_parser_symbolic_double>
    97c8:	cmp	sl, r0
    97cc:	cmpne	r4, r0
    97d0:	beq	acc0 <MyGame_Example_Monster_parse_json_table+0x3f04>
    97d4:	mov	r4, r0
    97d8:	b	94ac <MyGame_Example_Monster_parse_json_table+0x26f0>
    97dc:	add	r3, sp, #96	; 0x60
    97e0:	str	r3, [sp]
    97e4:	mov	r2, sl
    97e8:	ldr	r3, [pc, #-648]	; 9568 <MyGame_Example_Monster_parse_json_table+0x27ac>
    97ec:	mov	r1, r5
    97f0:	mov	r0, r9
    97f4:	bl	1670 <flatcc_json_parser_symbolic_int8>
    97f8:	cmp	sl, r0
    97fc:	cmpne	r0, r5
    9800:	mov	r4, r0
    9804:	bne	96e4 <MyGame_Example_Monster_parse_json_table+0x2928>
    9808:	strd	r6, [sp, #72]	; 0x48
    980c:	mov	r1, r4
    9810:	mov	r3, #33	; 0x21
    9814:	mov	r2, sl
    9818:	mov	r0, r9
    981c:	bl	0 <flatcc_json_parser_set_error>
    9820:	mov	fp, r0
    9824:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9828:	mov	r4, r0
    982c:	add	r3, sp, #100	; 0x64
    9830:	str	r3, [sp]
    9834:	mov	r2, sl
    9838:	ldr	r3, [pc, #-724]	; 956c <MyGame_Example_Monster_parse_json_table+0x27b0>
    983c:	mov	r1, r4
    9840:	mov	r0, r9
    9844:	bl	1670 <flatcc_json_parser_symbolic_int8>
    9848:	cmp	sl, r0
    984c:	cmpne	r0, r4
    9850:	mov	fp, r0
    9854:	bne	7d58 <MyGame_Example_Monster_parse_json_table+0xf9c>
    9858:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    985c:	add	r4, fp, #16
    9860:	mov	r0, r4
    9864:	mov	r1, sl
    9868:	bl	0 <flatcc_json_parser_symbol_part_ext>
    986c:	mov	r0, #0
    9870:	and	r1, r1, #-16777216	; 0xff000000
    9874:	cmp	r1, #1929379840	; 0x73000000
    9878:	cmpeq	r0, #0
    987c:	bne	9c34 <MyGame_Example_Monster_parse_json_table+0x2e78>
    9880:	sub	r3, sl, r4
    9884:	cmp	r3, #1
    9888:	ble	abd0 <MyGame_Example_Monster_parse_json_table+0x3e14>
    988c:	mov	r3, #1
    9890:	mov	r2, sl
    9894:	mov	r1, r4
    9898:	mov	r0, r9
    989c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    98a0:	cmp	r4, r0
    98a4:	mov	fp, r0
    98a8:	beq	abcc <MyGame_Example_Monster_parse_json_table+0x3e10>
    98ac:	mov	r2, #8
    98b0:	mov	r1, r2
    98b4:	mvn	r3, #-536870912	; 0xe0000000
    98b8:	ldr	r0, [r9]
    98bc:	bl	0 <flatcc_builder_start_vector>
    98c0:	cmp	r0, #0
    98c4:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    98c8:	mov	r1, fp
    98cc:	add	r3, sp, #84	; 0x54
    98d0:	mov	r2, sl
    98d4:	mov	r0, r9
    98d8:	bl	938 <flatcc_json_parser_array_start>
    98dc:	ldr	r3, [sp, #84]	; 0x54
    98e0:	cmp	r3, #0
    98e4:	mov	fp, r0
    98e8:	beq	a684 <MyGame_Example_Monster_parse_json_table+0x38c8>
    98ec:	vldr	d8, [pc, #988]	; 9cd0 <MyGame_Example_Monster_parse_json_table+0x2f14>
    98f0:	ldr	r7, [pc, #996]	; 9cdc <MyGame_Example_Monster_parse_json_table+0x2f20>
    98f4:	mov	r6, #1
    98f8:	add	r5, sp, #112	; 0x70
    98fc:	b	992c <MyGame_Example_Monster_parse_json_table+0x2b70>
    9900:	vldr	d7, [sp, #112]	; 0x70
    9904:	mov	r1, r0
    9908:	add	r3, sp, #84	; 0x54
    990c:	mov	r2, sl
    9910:	vstr	d7, [r4]
    9914:	mov	r0, r9
    9918:	bl	2140 <flatcc_json_parser_array_end>
    991c:	ldr	r3, [sp, #84]	; 0x54
    9920:	cmp	r3, #0
    9924:	mov	fp, r0
    9928:	beq	a684 <MyGame_Example_Monster_parse_json_table+0x38c8>
    992c:	mov	r1, r6
    9930:	ldr	r0, [r9]
    9934:	vstr	d8, [sp, #112]	; 0x70
    9938:	bl	0 <flatcc_builder_extend_vector>
    993c:	mov	r1, fp
    9940:	mov	r3, r5
    9944:	mov	r2, sl
    9948:	subs	r4, r0, #0
    994c:	mov	r0, r9
    9950:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9954:	bl	0 <flatcc_json_parser_double>
    9958:	cmp	r0, fp
    995c:	bne	9900 <MyGame_Example_Monster_parse_json_table+0x2b44>
    9960:	str	r5, [sp]
    9964:	mov	r3, r7
    9968:	mov	r2, sl
    996c:	mov	r1, fp
    9970:	mov	r0, r9
    9974:	bl	be4 <flatcc_json_parser_symbolic_double>
    9978:	cmp	sl, r0
    997c:	cmpne	r0, fp
    9980:	bne	9900 <MyGame_Example_Monster_parse_json_table+0x2b44>
    9984:	mov	r3, sl
    9988:	mov	sl, r9
    998c:	mov	r9, r3
    9990:	b	6f88 <MyGame_Example_Monster_parse_json_table+0x1cc>
    9994:	mov	r3, #0
    9998:	strb	r3, [sp, #100]	; 0x64
    999c:	add	r3, sp, #100	; 0x64
    99a0:	str	r3, [sp]
    99a4:	mov	r2, sl
    99a8:	ldr	r3, [pc, #816]	; 9ce0 <MyGame_Example_Monster_parse_json_table+0x2f24>
    99ac:	mov	r1, r4
    99b0:	mov	r0, r9
    99b4:	bl	de0 <flatcc_json_parser_symbolic_bool>
    99b8:	cmp	sl, r0
    99bc:	cmpne	r0, r4
    99c0:	mov	fp, r0
    99c4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    99c8:	ldrb	r3, [sp, #100]	; 0x64
    99cc:	b	8d84 <MyGame_Example_Monster_parse_json_table+0x1fc8>
    99d0:	mov	r1, r4
    99d4:	mov	r2, sl
    99d8:	mov	r0, r9
    99dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99e0:	mov	fp, r0
    99e4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    99e8:	mov	r3, #1
    99ec:	add	fp, r4, #4
    99f0:	strb	r3, [sp, #100]	; 0x64
    99f4:	b	8d8c <MyGame_Example_Monster_parse_json_table+0x1fd0>
    99f8:	mov	r4, r0
    99fc:	add	r3, sp, #82	; 0x52
    9a00:	str	r3, [sp]
    9a04:	mov	r2, sl
    9a08:	ldr	r3, [pc, #724]	; 9ce4 <MyGame_Example_Monster_parse_json_table+0x2f28>
    9a0c:	mov	r1, r4
    9a10:	mov	r0, r9
    9a14:	bl	1444 <flatcc_json_parser_symbolic_uint16>
    9a18:	cmp	sl, r0
    9a1c:	cmpne	r0, r4
    9a20:	mov	fp, r0
    9a24:	beq	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    9a28:	ldrh	r2, [sp, #82]	; 0x52
    9a2c:	b	88ac <MyGame_Example_Monster_parse_json_table+0x1af0>
    9a30:	mov	r3, #5
    9a34:	mov	r2, sl
    9a38:	mov	r1, fp
    9a3c:	mov	r0, r9
    9a40:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9a44:	cmp	r0, fp
    9a48:	mov	r5, r0
    9a4c:	beq	7374 <MyGame_Example_Monster_parse_json_table+0x5b8>
    9a50:	add	r4, sp, #120	; 0x78
    9a54:	mov	r3, #0
    9a58:	mov	r1, r0
    9a5c:	str	r3, [r4, #-8]!
    9a60:	mov	r2, sl
    9a64:	mov	r0, r9
    9a68:	mov	r3, r4
    9a6c:	bl	0 <flatcc_json_parser_float>
    9a70:	cmp	r0, r5
    9a74:	mov	fp, r0
    9a78:	beq	a7e4 <MyGame_Example_Monster_parse_json_table+0x3a28>
    9a7c:	vldr	s15, [pc, #596]	; 9cd8 <MyGame_Example_Monster_parse_json_table+0x2f1c>
    9a80:	vldr	s14, [sp, #112]	; 0x70
    9a84:	vcmp.f32	s14, s15
    9a88:	vmrs	APSR_nzcv, fpscr
    9a8c:	bne	9a9c <MyGame_Example_Monster_parse_json_table+0x2ce0>
    9a90:	ldr	r3, [r9, #8]
    9a94:	tst	r3, #2
    9a98:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9a9c:	mov	r3, #4
    9aa0:	mov	r2, r3
    9aa4:	mov	r1, #25
    9aa8:	ldr	r0, [r9]
    9aac:	bl	0 <flatcc_builder_table_add>
    9ab0:	cmp	r0, #0
    9ab4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9ab8:	ldr	r3, [sp, #112]	; 0x70
    9abc:	str	r3, [r0]
    9ac0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9ac4:	mov	r1, fp
    9ac8:	mov	r2, sl
    9acc:	mov	r0, r9
    9ad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ad4:	mov	fp, r0
    9ad8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9adc:	mov	r1, r4
    9ae0:	mov	r2, sl
    9ae4:	mov	r0, r9
    9ae8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9aec:	mov	fp, r0
    9af0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9af4:	mov	r1, fp
    9af8:	mov	r2, sl
    9afc:	mov	r0, r9
    9b00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b04:	mov	fp, r0
    9b08:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9b0c:	mov	r1, r0
    9b10:	mov	r3, #8
    9b14:	mov	r2, sl
    9b18:	mov	r0, r9
    9b1c:	bl	0 <flatcc_json_parser_set_error>
    9b20:	mov	fp, r0
    9b24:	cmp	r4, fp
    9b28:	bne	9a28 <MyGame_Example_Monster_parse_json_table+0x2c6c>
    9b2c:	b	99fc <MyGame_Example_Monster_parse_json_table+0x2c40>
    9b30:	mov	r1, r4
    9b34:	mov	r2, sl
    9b38:	mov	r0, r9
    9b3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b40:	mov	fp, r0
    9b44:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9b48:	mov	r1, r0
    9b4c:	str	r4, [sp]
    9b50:	ldr	r3, [pc, #400]	; 9ce8 <MyGame_Example_Monster_parse_json_table+0x2f2c>
    9b54:	mov	r2, sl
    9b58:	mov	r0, r9
    9b5c:	bl	9ec <flatcc_json_parser_symbolic_float>
    9b60:	cmp	sl, r0
    9b64:	cmpne	fp, r0
    9b68:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    9b6c:	mov	fp, r0
    9b70:	b	77bc <MyGame_Example_Monster_parse_json_table+0xa00>
    9b74:	mov	r3, #4
    9b78:	mov	r2, sl
    9b7c:	mov	r1, fp
    9b80:	mov	r0, r9
    9b84:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9b88:	cmp	r0, fp
    9b8c:	mov	r5, r0
    9b90:	beq	7d6c <MyGame_Example_Monster_parse_json_table+0xfb0>
    9b94:	add	r4, sp, #120	; 0x78
    9b98:	mov	r3, #0
    9b9c:	strh	r3, [r4, #-8]!
    9ba0:	mov	r1, r0
    9ba4:	mov	r2, sl
    9ba8:	mov	r3, r4
    9bac:	mov	r0, r9
    9bb0:	bl	628 <flatcc_json_parser_int16.constprop.25>
    9bb4:	cmp	r0, r5
    9bb8:	mov	fp, r0
    9bbc:	beq	aa44 <MyGame_Example_Monster_parse_json_table+0x3c88>
    9bc0:	ldrsh	r3, [sp, #112]	; 0x70
    9bc4:	cmp	r3, #150	; 0x96
    9bc8:	bne	9bd8 <MyGame_Example_Monster_parse_json_table+0x2e1c>
    9bcc:	ldr	r3, [r9, #8]
    9bd0:	tst	r3, #2
    9bd4:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9bd8:	mov	r3, #2
    9bdc:	mov	r2, r3
    9be0:	mov	r1, #1
    9be4:	ldr	r0, [r9]
    9be8:	bl	0 <flatcc_builder_table_add>
    9bec:	cmp	r0, #0
    9bf0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9bf4:	ldrsh	r3, [sp, #112]	; 0x70
    9bf8:	strh	r3, [r0]
    9bfc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9c00:	ldr	r0, [r9]
    9c04:	bl	0 <flatcc_builder_end_vector>
    9c08:	cmp	r0, #0
    9c0c:	str	r0, [sp, #88]	; 0x58
    9c10:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9c14:	mov	r1, #24
    9c18:	ldr	r0, [r9]
    9c1c:	bl	0 <flatcc_builder_table_add_offset>
    9c20:	cmp	r0, #0
    9c24:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9c28:	ldr	r3, [sp, #88]	; 0x58
    9c2c:	str	r3, [r0]
    9c30:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9c34:	mov	r1, r4
    9c38:	mov	r2, sl
    9c3c:	mov	r0, r9
    9c40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c44:	mov	fp, r0
    9c48:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9c4c:	mov	r1, fp
    9c50:	mov	r2, sl
    9c54:	mov	r0, r9
    9c58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c5c:	mov	fp, r0
    9c60:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9c64:	mov	r1, fp
    9c68:	mov	r3, #7
    9c6c:	mov	r2, sl
    9c70:	mov	r0, r9
    9c74:	bl	0 <flatcc_json_parser_set_error>
    9c78:	mov	fp, r0
    9c7c:	b	9b24 <MyGame_Example_Monster_parse_json_table+0x2d68>
    9c80:	mov	r1, r0
    9c84:	str	fp, [sp]
    9c88:	ldr	r3, [pc, #92]	; 9cec <MyGame_Example_Monster_parse_json_table+0x2f30>
    9c8c:	mov	r2, sl
    9c90:	mov	r0, r9
    9c94:	bl	9ec <flatcc_json_parser_symbolic_float>
    9c98:	cmp	sl, r0
    9c9c:	cmpne	r4, r0
    9ca0:	beq	acc0 <MyGame_Example_Monster_parse_json_table+0x3f04>
    9ca4:	mov	r4, r0
    9ca8:	b	9524 <MyGame_Example_Monster_parse_json_table+0x2768>
    9cac:	ldr	r3, [r9, #24]
    9cb0:	cmp	r3, #0
    9cb4:	bne	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    9cb8:	ldr	r0, [r9]
    9cbc:	bl	0 <flatcc_builder_end_table>
    9cc0:	cmp	r0, #0
    9cc4:	str	r0, [sp, #88]	; 0x58
    9cc8:	beq	90ac <MyGame_Example_Monster_parse_json_table+0x22f0>
    9ccc:	b	90d0 <MyGame_Example_Monster_parse_json_table+0x2314>
	...
    9cd8:	.word	0x489965e0
    9cdc:	.word	0x000001ec
    9ce0:	.word	0x00000138
    9ce4:	.word	0x00000144
    9ce8:	.word	0x00000174
    9cec:	.word	0x000000e0
    9cf0:	.word	0x000001f8
    9cf4:	ldr	r3, [sp, #92]	; 0x5c
    9cf8:	mov	r2, r9
    9cfc:	mov	r0, sl
    9d00:	bl	0 <flatcc_json_parser_finalize_unions>
    9d04:	mov	fp, r0
    9d08:	ldr	r0, [sl]
    9d0c:	bl	0 <flatcc_builder_end_table>
    9d10:	ldr	r3, [sp, #68]	; 0x44
    9d14:	cmp	r0, #0
    9d18:	str	r0, [r3]
    9d1c:	beq	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    9d20:	mov	r0, fp
    9d24:	b	6fa0 <MyGame_Example_Monster_parse_json_table+0x1e4>
    9d28:	ldr	r3, [r9, #24]
    9d2c:	cmp	r3, #0
    9d30:	bne	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    9d34:	ldr	r0, [r9]
    9d38:	bl	0 <flatcc_builder_end_table>
    9d3c:	cmp	r0, #0
    9d40:	str	r0, [sp, #88]	; 0x58
    9d44:	beq	87a4 <MyGame_Example_Monster_parse_json_table+0x19e8>
    9d48:	b	87c8 <MyGame_Example_Monster_parse_json_table+0x1a0c>
    9d4c:	sub	r3, sl, r4
    9d50:	cmp	r3, #2
    9d54:	bgt	a844 <MyGame_Example_Monster_parse_json_table+0x3a88>
    9d58:	mov	r1, r4
    9d5c:	mov	r2, sl
    9d60:	mov	r0, r9
    9d64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9d68:	mov	fp, r0
    9d6c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9d70:	mov	r3, #8
    9d74:	mov	r2, sl
    9d78:	mov	r1, fp
    9d7c:	mov	r0, r9
    9d80:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9d84:	cmp	fp, r0
    9d88:	mov	r5, r0
    9d8c:	beq	8088 <MyGame_Example_Monster_parse_json_table+0x12cc>
    9d90:	add	r4, sp, #120	; 0x78
    9d94:	mov	r3, #0
    9d98:	str	r3, [r4, #-8]!
    9d9c:	mov	r1, r0
    9da0:	mov	r2, sl
    9da4:	mov	r3, r4
    9da8:	mov	r0, r9
    9dac:	bl	6f4 <flatcc_json_parser_int32.constprop.26>
    9db0:	cmp	r0, r5
    9db4:	mov	fp, r0
    9db8:	beq	ab64 <MyGame_Example_Monster_parse_json_table+0x3da8>
    9dbc:	ldr	r3, [sp, #112]	; 0x70
    9dc0:	cmp	r3, #0
    9dc4:	bne	9dd4 <MyGame_Example_Monster_parse_json_table+0x3018>
    9dc8:	ldr	r3, [r9, #8]
    9dcc:	tst	r3, #2
    9dd0:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9dd4:	mov	r3, #4
    9dd8:	mov	r2, r3
    9ddc:	mov	r1, #16
    9de0:	ldr	r0, [r9]
    9de4:	bl	0 <flatcc_builder_table_add>
    9de8:	cmp	r0, #0
    9dec:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    9df0:	ldr	r3, [sp, #112]	; 0x70
    9df4:	str	r3, [r0]
    9df8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9dfc:	mov	r1, r0
    9e00:	mov	r3, #7
    9e04:	mov	r2, sl
    9e08:	mov	r0, r9
    9e0c:	bl	0 <flatcc_json_parser_set_error>
    9e10:	mov	fp, r0
    9e14:	b	7d50 <MyGame_Example_Monster_parse_json_table+0xf94>
    9e18:	sub	r3, sl, fp
    9e1c:	cmp	r3, #8
    9e20:	bgt	a938 <MyGame_Example_Monster_parse_json_table+0x3b7c>
    9e24:	add	fp, fp, #8
    9e28:	mov	r0, fp
    9e2c:	mov	r1, sl
    9e30:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9e34:	mov	r0, #0
    9e38:	and	r1, r1, #-16777216	; 0xff000000
    9e3c:	cmp	r1, #1627389952	; 0x61000000
    9e40:	cmpeq	r0, #0
    9e44:	bne	aba0 <MyGame_Example_Monster_parse_json_table+0x3de4>
    9e48:	sub	r3, sl, fp
    9e4c:	cmp	r3, #1
    9e50:	ble	aca4 <MyGame_Example_Monster_parse_json_table+0x3ee8>
    9e54:	mov	r3, #1
    9e58:	mov	r2, sl
    9e5c:	mov	r1, fp
    9e60:	mov	r0, r9
    9e64:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9e68:	cmp	fp, r0
    9e6c:	mov	r4, r0
    9e70:	beq	aca8 <MyGame_Example_Monster_parse_json_table+0x3eec>
    9e74:	add	r5, sp, #120	; 0x78
    9e78:	mov	r3, #0
    9e7c:	str	r3, [r5, #-8]!
    9e80:	mov	r1, r0
    9e84:	mov	r2, sl
    9e88:	mov	r3, r5
    9e8c:	mov	r0, r9
    9e90:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    9e94:	cmp	r0, r4
    9e98:	mov	fp, r0
    9e9c:	beq	ade0 <MyGame_Example_Monster_parse_json_table+0x4024>
    9ea0:	ldr	r3, [sp, #112]	; 0x70
    9ea4:	cmp	r3, #0
    9ea8:	bne	9eb8 <MyGame_Example_Monster_parse_json_table+0x30fc>
    9eac:	ldr	r3, [r9, #8]
    9eb0:	tst	r3, #2
    9eb4:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9eb8:	mov	r3, #4
    9ebc:	mov	r2, r3
    9ec0:	mov	r1, #21
    9ec4:	ldr	r0, [r9]
    9ec8:	bl	0 <flatcc_builder_table_add>
    9ecc:	cmp	r0, #0
    9ed0:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    9ed4:	ldr	r3, [sp, #112]	; 0x70
    9ed8:	str	r3, [r0]
    9edc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    9ee0:	mov	r3, #7
    9ee4:	mov	r2, sl
    9ee8:	mov	r1, r4
    9eec:	mov	r0, r9
    9ef0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    9ef4:	cmp	r4, r0
    9ef8:	mov	fp, r0
    9efc:	beq	ad80 <MyGame_Example_Monster_parse_json_table+0x3fc4>
    9f00:	mov	r2, #8
    9f04:	mov	r1, r2
    9f08:	mvn	r3, #-536870912	; 0xe0000000
    9f0c:	ldr	r0, [r9]
    9f10:	bl	0 <flatcc_builder_start_vector>
    9f14:	cmp	r0, #0
    9f18:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9f1c:	mov	r1, fp
    9f20:	add	r3, sp, #84	; 0x54
    9f24:	mov	r2, sl
    9f28:	mov	r0, r9
    9f2c:	bl	938 <flatcc_json_parser_array_start>
    9f30:	ldr	r3, [sp, #84]	; 0x54
    9f34:	cmp	r3, #0
    9f38:	mov	fp, r0
    9f3c:	beq	9fdc <MyGame_Example_Monster_parse_json_table+0x3220>
    9f40:	mov	r8, #1
    9f44:	add	r7, sp, #112	; 0x70
    9f48:	b	9f78 <MyGame_Example_Monster_parse_json_table+0x31bc>
    9f4c:	ldrd	r4, [sp, #112]	; 0x70
    9f50:	mov	r1, r0
    9f54:	add	r3, sp, #84	; 0x54
    9f58:	strd	r4, [r6]
    9f5c:	mov	r2, sl
    9f60:	mov	r0, r9
    9f64:	bl	2140 <flatcc_json_parser_array_end>
    9f68:	ldr	r3, [sp, #84]	; 0x54
    9f6c:	cmp	r3, #0
    9f70:	mov	fp, r0
    9f74:	beq	9fdc <MyGame_Example_Monster_parse_json_table+0x3220>
    9f78:	mov	r2, #0
    9f7c:	mov	r3, #0
    9f80:	mov	r1, r8
    9f84:	ldr	r0, [r9]
    9f88:	strd	r2, [sp, #112]	; 0x70
    9f8c:	bl	0 <flatcc_builder_extend_vector>
    9f90:	mov	r1, fp
    9f94:	mov	r3, r7
    9f98:	mov	r2, sl
    9f9c:	subs	r6, r0, #0
    9fa0:	mov	r0, r9
    9fa4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9fa8:	bl	7bc <flatcc_json_parser_int64>
    9fac:	cmp	r0, fp
    9fb0:	bne	9f4c <MyGame_Example_Monster_parse_json_table+0x3190>
    9fb4:	str	r7, [sp]
    9fb8:	ldr	r3, [pc, #-720]	; 9cf0 <MyGame_Example_Monster_parse_json_table+0x2f34>
    9fbc:	mov	r2, sl
    9fc0:	mov	r1, fp
    9fc4:	mov	r0, r9
    9fc8:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    9fcc:	cmp	sl, r0
    9fd0:	cmpne	r0, fp
    9fd4:	bne	9f4c <MyGame_Example_Monster_parse_json_table+0x3190>
    9fd8:	b	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    9fdc:	ldr	r0, [r9]
    9fe0:	bl	0 <flatcc_builder_end_vector>
    9fe4:	cmp	r0, #0
    9fe8:	str	r0, [sp, #88]	; 0x58
    9fec:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    9ff0:	mov	r1, #32
    9ff4:	ldr	r0, [r9]
    9ff8:	bl	0 <flatcc_builder_table_add_offset>
    9ffc:	cmp	r0, #0
    a000:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a004:	ldr	r3, [sp, #88]	; 0x58
    a008:	str	r3, [r0]
    a00c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a010:	mov	r1, r0
    a014:	str	fp, [sp]
    a018:	mov	r3, r8
    a01c:	mov	r2, sl
    a020:	mov	r0, r9
    a024:	bl	9ec <flatcc_json_parser_symbolic_float>
    a028:	cmp	sl, r0
    a02c:	cmpne	r4, r0
    a030:	beq	acc0 <MyGame_Example_Monster_parse_json_table+0x3f04>
    a034:	mov	r4, r0
    a038:	b	9680 <MyGame_Example_Monster_parse_json_table+0x28c4>
    a03c:	mov	r1, r0
    a040:	mov	r3, #8
    a044:	mov	r2, sl
    a048:	mov	r0, r9
    a04c:	bl	0 <flatcc_json_parser_set_error>
    a050:	mov	fp, r0
    a054:	mov	r3, #0
    a058:	cmp	r4, fp
    a05c:	strb	r3, [sp, #100]	; 0x64
    a060:	bne	8d98 <MyGame_Example_Monster_parse_json_table+0x1fdc>
    a064:	b	999c <MyGame_Example_Monster_parse_json_table+0x2be0>
    a068:	mov	r3, #7
    a06c:	mov	r2, sl
    a070:	mov	r1, r4
    a074:	mov	r0, r9
    a078:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a07c:	cmp	r4, r0
    a080:	mov	fp, r0
    a084:	beq	ad90 <MyGame_Example_Monster_parse_json_table+0x3fd4>
    a088:	mvn	r3, #-536870912	; 0xe0000000
    a08c:	mov	r2, #4
    a090:	mov	r1, #8
    a094:	ldr	r0, [r9]
    a098:	bl	0 <flatcc_builder_start_vector>
    a09c:	cmp	r0, #0
    a0a0:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a0a4:	mov	r1, fp
    a0a8:	add	r3, sp, #84	; 0x54
    a0ac:	mov	r2, sl
    a0b0:	mov	r0, r9
    a0b4:	bl	938 <flatcc_json_parser_array_start>
    a0b8:	ldr	r3, [sp, #84]	; 0x54
    a0bc:	cmp	r3, #0
    a0c0:	mov	fp, r0
    a0c4:	beq	a308 <MyGame_Example_Monster_parse_json_table+0x354c>
    a0c8:	mov	r8, #1
    a0cc:	mov	r1, r8
    a0d0:	ldr	r0, [r9]
    a0d4:	bl	0 <flatcc_builder_extend_vector>
    a0d8:	subs	r5, r0, #0
    a0dc:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a0e0:	add	r3, sp, #104	; 0x68
    a0e4:	mov	r1, fp
    a0e8:	mov	r2, sl
    a0ec:	mov	r0, r9
    a0f0:	bl	884 <flatcc_json_parser_object_start>
    a0f4:	ldr	r3, [sp, #104]	; 0x68
    a0f8:	cmp	r3, #0
    a0fc:	mov	r4, r0
    a100:	beq	a2e4 <MyGame_Example_Monster_parse_json_table+0x3528>
    a104:	mov	fp, #0
    a108:	b	a164 <MyGame_Example_Monster_parse_json_table+0x33a8>
    a10c:	add	r3, pc, #876	; 0x36c
    a110:	ldrd	r2, [r3]
    a114:	cmp	r7, r3
    a118:	cmpeq	r6, r2
    a11c:	bne	a12c <MyGame_Example_Monster_parse_json_table+0x3370>
    a120:	sub	r3, sl, r4
    a124:	cmp	r3, #8
    a128:	bgt	a220 <MyGame_Example_Monster_parse_json_table+0x3464>
    a12c:	mov	r1, r4
    a130:	mov	r2, sl
    a134:	mov	r0, r9
    a138:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a13c:	mov	r4, r0
    a140:	mov	r1, r4
    a144:	add	r3, sp, #104	; 0x68
    a148:	mov	r2, sl
    a14c:	mov	r0, r9
    a150:	bl	22c4 <flatcc_json_parser_object_end>
    a154:	ldr	r3, [sp, #104]	; 0x68
    a158:	cmp	r3, #0
    a15c:	mov	r4, r0
    a160:	beq	a2e4 <MyGame_Example_Monster_parse_json_table+0x3528>
    a164:	cmp	sl, r4
    a168:	beq	a270 <MyGame_Example_Monster_parse_json_table+0x34b4>
    a16c:	ldrb	r3, [r4]
    a170:	cmp	r3, #34	; 0x22
    a174:	addeq	r4, r4, #1
    a178:	streq	fp, [r9, #12]
    a17c:	beq	a18c <MyGame_Example_Monster_parse_json_table+0x33d0>
    a180:	cmp	r3, #46	; 0x2e
    a184:	strne	r8, [r9, #12]
    a188:	beq	a2b0 <MyGame_Example_Monster_parse_json_table+0x34f4>
    a18c:	mov	r1, sl
    a190:	mov	r0, r4
    a194:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a198:	ldr	r3, [pc, #744]	; a488 <MyGame_Example_Monster_parse_json_table+0x36cc>
    a19c:	mov	r2, #0
    a1a0:	and	r3, r3, r1
    a1a4:	mov	r7, r1
    a1a8:	ldr	r1, [pc, #732]	; a48c <MyGame_Example_Monster_parse_json_table+0x36d0>
    a1ac:	and	r2, r2, r0
    a1b0:	mov	r6, r0
    a1b4:	cmp	r3, r1
    a1b8:	mov	r0, #0
    a1bc:	cmpeq	r2, r0
    a1c0:	bne	a10c <MyGame_Example_Monster_parse_json_table+0x3350>
    a1c4:	sub	r3, sl, r4
    a1c8:	cmp	r3, #2
    a1cc:	ble	a12c <MyGame_Example_Monster_parse_json_table+0x3370>
    a1d0:	mov	r3, #2
    a1d4:	mov	r2, sl
    a1d8:	mov	r1, r4
    a1dc:	mov	r0, r9
    a1e0:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a1e4:	cmp	r0, r4
    a1e8:	mov	r6, r0
    a1ec:	beq	a12c <MyGame_Example_Monster_parse_json_table+0x3370>
    a1f0:	mov	r1, r0
    a1f4:	add	r3, sp, #112	; 0x70
    a1f8:	mov	r2, sl
    a1fc:	mov	r0, r9
    a200:	str	fp, [sp, #112]	; 0x70
    a204:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    a208:	cmp	r6, r0
    a20c:	mov	r4, r0
    a210:	beq	a36c <MyGame_Example_Monster_parse_json_table+0x35b0>
    a214:	ldr	r3, [sp, #112]	; 0x70
    a218:	str	r3, [r5]
    a21c:	b	a140 <MyGame_Example_Monster_parse_json_table+0x3384>
    a220:	mov	r3, #8
    a224:	mov	r2, sl
    a228:	mov	r1, r4
    a22c:	mov	r0, r9
    a230:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a234:	cmp	r0, r4
    a238:	mov	r6, r0
    a23c:	beq	a12c <MyGame_Example_Monster_parse_json_table+0x3370>
    a240:	mov	r1, r0
    a244:	add	r3, sp, #112	; 0x70
    a248:	mov	r2, sl
    a24c:	mov	r0, r9
    a250:	str	fp, [sp, #112]	; 0x70
    a254:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    a258:	cmp	r6, r0
    a25c:	mov	r4, r0
    a260:	beq	a33c <MyGame_Example_Monster_parse_json_table+0x3580>
    a264:	ldr	r3, [sp, #112]	; 0x70
    a268:	str	r3, [r5, #4]
    a26c:	b	a140 <MyGame_Example_Monster_parse_json_table+0x3384>
    a270:	mov	r1, sl
    a274:	mov	r0, sl
    a278:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a27c:	ldr	r3, [pc, #516]	; a488 <MyGame_Example_Monster_parse_json_table+0x36cc>
    a280:	mov	r2, #0
    a284:	mov	r4, sl
    a288:	and	r3, r3, r1
    a28c:	mov	r7, r1
    a290:	ldr	r1, [pc, #500]	; a48c <MyGame_Example_Monster_parse_json_table+0x36d0>
    a294:	and	r2, r2, r0
    a298:	mov	r6, r0
    a29c:	cmp	r3, r1
    a2a0:	mov	r0, #0
    a2a4:	cmpeq	r2, r0
    a2a8:	bne	a10c <MyGame_Example_Monster_parse_json_table+0x3350>
    a2ac:	b	a12c <MyGame_Example_Monster_parse_json_table+0x3370>
    a2b0:	mov	r1, r4
    a2b4:	mov	r3, #5
    a2b8:	mov	r2, sl
    a2bc:	mov	r0, r9
    a2c0:	bl	0 <flatcc_json_parser_set_error>
    a2c4:	mov	r4, r0
    a2c8:	b	a18c <MyGame_Example_Monster_parse_json_table+0x33d0>
    a2cc:	mov	r1, r0
    a2d0:	mov	r3, #33	; 0x21
    a2d4:	mov	r2, sl
    a2d8:	mov	r0, r9
    a2dc:	bl	0 <flatcc_json_parser_set_error>
    a2e0:	mov	r4, r0
    a2e4:	add	r3, sp, #84	; 0x54
    a2e8:	mov	r1, r4
    a2ec:	mov	r2, sl
    a2f0:	mov	r0, r9
    a2f4:	bl	2140 <flatcc_json_parser_array_end>
    a2f8:	ldr	r3, [sp, #84]	; 0x54
    a2fc:	cmp	r3, #0
    a300:	mov	fp, r0
    a304:	bne	a0cc <MyGame_Example_Monster_parse_json_table+0x3310>
    a308:	ldr	r0, [r9]
    a30c:	bl	0 <flatcc_builder_end_vector>
    a310:	cmp	r0, #0
    a314:	str	r0, [sp, #88]	; 0x58
    a318:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a31c:	mov	r1, #29
    a320:	ldr	r0, [r9]
    a324:	bl	0 <flatcc_builder_table_add_offset>
    a328:	cmp	r0, #0
    a32c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a330:	ldr	r3, [sp, #88]	; 0x58
    a334:	str	r3, [r0]
    a338:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a33c:	add	r3, sp, #112	; 0x70
    a340:	str	r3, [sp]
    a344:	mov	r1, r0
    a348:	ldr	r3, [pc, #320]	; a490 <MyGame_Example_Monster_parse_json_table+0x36d4>
    a34c:	mov	r2, sl
    a350:	mov	r0, r9
    a354:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    a358:	cmp	sl, r0
    a35c:	cmpne	r4, r0
    a360:	beq	a2cc <MyGame_Example_Monster_parse_json_table+0x3510>
    a364:	mov	r4, r0
    a368:	b	a264 <MyGame_Example_Monster_parse_json_table+0x34a8>
    a36c:	add	r3, sp, #112	; 0x70
    a370:	str	r3, [sp]
    a374:	mov	r1, r0
    a378:	ldr	r3, [pc, #276]	; a494 <MyGame_Example_Monster_parse_json_table+0x36d8>
    a37c:	mov	r2, sl
    a380:	mov	r0, r9
    a384:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    a388:	cmp	sl, r0
    a38c:	cmpne	r4, r0
    a390:	beq	a2cc <MyGame_Example_Monster_parse_json_table+0x3510>
    a394:	mov	r4, r0
    a398:	b	a214 <MyGame_Example_Monster_parse_json_table+0x3458>
    a39c:	ldr	r0, [r9]
    a3a0:	bl	0 <flatcc_builder_end_offset_vector>
    a3a4:	cmp	r0, #0
    a3a8:	str	r0, [sp, #88]	; 0x58
    a3ac:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a3b0:	mov	r1, #11
    a3b4:	ldr	r0, [r9]
    a3b8:	bl	0 <flatcc_builder_table_add_offset>
    a3bc:	cmp	r0, #0
    a3c0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a3c4:	ldr	r3, [sp, #88]	; 0x58
    a3c8:	str	r3, [r0]
    a3cc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a3d0:	mov	r1, r0
    a3d4:	str	fp, [sp]
    a3d8:	ldr	r3, [pc, #184]	; a498 <MyGame_Example_Monster_parse_json_table+0x36dc>
    a3dc:	mov	r2, sl
    a3e0:	mov	r0, r9
    a3e4:	bl	9ec <flatcc_json_parser_symbolic_float>
    a3e8:	cmp	sl, r0
    a3ec:	cmpne	r4, r0
    a3f0:	beq	acc0 <MyGame_Example_Monster_parse_json_table+0x3f04>
    a3f4:	mov	r4, r0
    a3f8:	b	977c <MyGame_Example_Monster_parse_json_table+0x29c0>
    a3fc:	ldr	r0, [r9]
    a400:	bl	0 <flatcc_builder_end_vector>
    a404:	cmp	r0, #0
    a408:	str	r0, [sp, #88]	; 0x58
    a40c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a410:	mov	r1, #5
    a414:	ldr	r0, [r9]
    a418:	bl	0 <flatcc_builder_table_add_offset>
    a41c:	cmp	r0, #0
    a420:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a424:	ldr	r3, [sp, #88]	; 0x58
    a428:	str	r3, [r0]
    a42c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a430:	mov	r4, r0
    a434:	mov	r1, r4
    a438:	mov	r2, sl
    a43c:	mov	r0, r9
    a440:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a444:	mov	fp, r0
    a448:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a44c:	mov	r3, sl
    a450:	mov	fp, r4
    a454:	mov	sl, r9
    a458:	mov	r9, r3
    a45c:	b	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    a460:	mov	r1, r0
    a464:	mov	r3, #7
    a468:	mov	r2, sl
    a46c:	mov	r0, r9
    a470:	bl	0 <flatcc_json_parser_set_error>
    a474:	mov	fp, r0
    a478:	b	a054 <MyGame_Example_Monster_parse_json_table+0x3298>
    a47c:	nop			; (mov r0, r0)
    a480:	.word	0x616e6365
    a484:	.word	0x64697374
    a488:	.word	0xffff0000
    a48c:	.word	0x69640000
    a490:	.word	0x0000012c
    a494:	.word	0x00000120
    a498:	.word	0x000000ec
    a49c:	.word	0x00000150
    a4a0:	.word	0x000000a0
    a4a4:	.word	0x00000168
    a4a8:	.word	0x0000015c
    a4ac:	.word	0x000000b8
    a4b0:	.word	0x000001e0
    a4b4:	.word	0x00000180
    a4b8:	.word	0x000001b0
    a4bc:	.word	0x000001c8
    a4c0:	.word	0x00000198
    a4c4:	.word	0x000001d4
    a4c8:	.word	0x0000018c
    a4cc:	.word	0x000001bc
    a4d0:	.word	0x000001a4
    a4d4:	mov	r3, #4
    a4d8:	mov	r2, sl
    a4dc:	mov	r1, r4
    a4e0:	mov	r0, r9
    a4e4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a4e8:	cmp	r4, r0
    a4ec:	mov	fp, r0
    a4f0:	beq	ad98 <MyGame_Example_Monster_parse_json_table+0x3fdc>
    a4f4:	cmp	sl, r0
    a4f8:	beq	a508 <MyGame_Example_Monster_parse_json_table+0x374c>
    a4fc:	ldrb	r3, [r0]
    a500:	cmp	r3, #91	; 0x5b
    a504:	beq	aa70 <MyGame_Example_Monster_parse_json_table+0x3cb4>
    a508:	mov	r3, #0
    a50c:	mov	r2, r3
    a510:	mov	r1, r3
    a514:	ldr	r0, [r9]
    a518:	bl	0 <flatcc_builder_start_buffer>
    a51c:	cmp	r0, #0
    a520:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a524:	mov	r1, fp
    a528:	add	r3, sp, #88	; 0x58
    a52c:	mov	r2, sl
    a530:	mov	r0, r9
    a534:	bl	6dbc <MyGame_Example_Monster_parse_json_table>
    a538:	ldr	r1, [sp, #88]	; 0x58
    a53c:	cmp	r1, #0
    a540:	mov	fp, r0
    a544:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a548:	ldr	r0, [r9]
    a54c:	bl	0 <flatcc_builder_end_buffer>
    a550:	str	r0, [sp, #88]	; 0x58
    a554:	cmp	r0, #0
    a558:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a55c:	mov	r1, #13
    a560:	ldr	r0, [r9]
    a564:	bl	0 <flatcc_builder_table_add_offset>
    a568:	cmp	r0, #0
    a56c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a570:	ldr	r3, [sp, #88]	; 0x58
    a574:	str	r3, [r0]
    a578:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a57c:	mov	r1, fp
    a580:	mov	r2, sl
    a584:	mov	r0, r9
    a588:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a58c:	mov	fp, r0
    a590:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a594:	mov	r3, #8
    a598:	mov	r2, sl
    a59c:	mov	r1, fp
    a5a0:	mov	r0, r9
    a5a4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a5a8:	cmp	fp, r0
    a5ac:	mov	r5, r0
    a5b0:	beq	7fbc <MyGame_Example_Monster_parse_json_table+0x1200>
    a5b4:	mov	r0, #0
    a5b8:	mov	r1, #0
    a5bc:	add	r4, sp, #120	; 0x78
    a5c0:	mov	r2, sl
    a5c4:	strd	r0, [r4, #-8]!
    a5c8:	mov	r1, r5
    a5cc:	mov	r3, r4
    a5d0:	mov	r0, r9
    a5d4:	bl	7bc <flatcc_json_parser_int64>
    a5d8:	cmp	r0, r5
    a5dc:	mov	fp, r0
    a5e0:	beq	ad10 <MyGame_Example_Monster_parse_json_table+0x3f54>
    a5e4:	ldrd	r2, [sp, #112]	; 0x70
    a5e8:	orrs	r3, r2, r3
    a5ec:	bne	a5fc <MyGame_Example_Monster_parse_json_table+0x3840>
    a5f0:	ldr	r3, [r9, #8]
    a5f4:	tst	r3, #2
    a5f8:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a5fc:	mov	r3, #8
    a600:	mov	r2, r3
    a604:	mov	r1, #18
    a608:	ldr	r0, [r9]
    a60c:	bl	0 <flatcc_builder_table_add>
    a610:	cmp	r0, #0
    a614:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    a618:	ldrd	r2, [sp, #112]	; 0x70
    a61c:	strd	r2, [r0]
    a620:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a624:	mov	r1, fp
    a628:	mov	r3, #5
    a62c:	mov	r2, sl
    a630:	mov	r0, r9
    a634:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a638:	cmp	fp, r0
    a63c:	mov	r1, r0
    a640:	beq	8178 <MyGame_Example_Monster_parse_json_table+0x13bc>
    a644:	add	r3, sp, #88	; 0x58
    a648:	mov	r2, sl
    a64c:	mov	r0, r9
    a650:	bl	51b0 <MyGame_Example2_Monster_parse_json_table>
    a654:	ldr	r3, [sp, #88]	; 0x58
    a658:	cmp	r3, #0
    a65c:	mov	fp, r0
    a660:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a664:	mov	r1, #34	; 0x22
    a668:	ldr	r0, [r9]
    a66c:	bl	0 <flatcc_builder_table_add_offset>
    a670:	cmp	r0, #0
    a674:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a678:	ldr	r3, [sp, #88]	; 0x58
    a67c:	str	r3, [r0]
    a680:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a684:	ldr	r0, [r9]
    a688:	bl	0 <flatcc_builder_end_vector>
    a68c:	cmp	r0, #0
    a690:	str	r0, [sp, #88]	; 0x58
    a694:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a698:	mov	r1, #33	; 0x21
    a69c:	ldr	r0, [r9]
    a6a0:	bl	0 <flatcc_builder_table_add_offset>
    a6a4:	cmp	r0, #0
    a6a8:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a6ac:	ldr	r3, [sp, #88]	; 0x58
    a6b0:	str	r3, [r0]
    a6b4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a6b8:	mov	r1, r0
    a6bc:	str	r4, [sp]
    a6c0:	ldr	r3, [pc, #-556]	; a49c <MyGame_Example_Monster_parse_json_table+0x36e0>
    a6c4:	mov	r2, sl
    a6c8:	mov	r0, r9
    a6cc:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    a6d0:	cmp	sl, r0
    a6d4:	cmpne	fp, r0
    a6d8:	beq	90a8 <MyGame_Example_Monster_parse_json_table+0x22ec>
    a6dc:	mov	fp, r0
    a6e0:	b	86fc <MyGame_Example_Monster_parse_json_table+0x1940>
    a6e4:	mov	r4, r0
    a6e8:	mov	r1, r4
    a6ec:	mov	r2, sl
    a6f0:	mov	r0, r9
    a6f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a6f8:	mov	fp, r0
    a6fc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a700:	mov	r1, r0
    a704:	str	r4, [sp]
    a708:	ldr	r3, [pc, #-624]	; a4a0 <MyGame_Example_Monster_parse_json_table+0x36e4>
    a70c:	mov	r2, sl
    a710:	mov	r0, r9
    a714:	bl	1ac8 <flatcc_json_parser_symbolic_int16>
    a718:	cmp	sl, r0
    a71c:	cmpne	fp, r0
    a720:	beq	8eb4 <MyGame_Example_Monster_parse_json_table+0x20f8>
    a724:	mov	fp, r0
    a728:	b	8400 <MyGame_Example_Monster_parse_json_table+0x1644>
    a72c:	mov	r3, #8
    a730:	mov	r2, sl
    a734:	mov	r1, fp
    a738:	mov	r0, r9
    a73c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a740:	cmp	fp, r0
    a744:	mov	r4, r0
    a748:	beq	ae38 <MyGame_Example_Monster_parse_json_table+0x407c>
    a74c:	mov	r2, #0
    a750:	mov	r3, #0
    a754:	mov	r1, #0
    a758:	cmp	sl, r0
    a75c:	strd	r2, [sp, #104]	; 0x68
    a760:	strd	r2, [sp, #112]	; 0x70
    a764:	str	r1, [sp, #100]	; 0x64
    a768:	beq	ac3c <MyGame_Example_Monster_parse_json_table+0x3e80>
    a76c:	add	r3, sp, #112	; 0x70
    a770:	str	r3, [sp]
    a774:	mov	r1, r0
    a778:	add	r3, sp, #100	; 0x64
    a77c:	mov	r2, sl
    a780:	mov	r0, r9
    a784:	bl	0 <flatcc_json_parser_integer>
    a788:	cmp	r4, r0
    a78c:	mov	fp, r0
    a790:	beq	ac3c <MyGame_Example_Monster_parse_json_table+0x3e80>
    a794:	ldr	r3, [sp, #100]	; 0x64
    a798:	cmp	r3, #0
    a79c:	bne	abe8 <MyGame_Example_Monster_parse_json_table+0x3e2c>
    a7a0:	ldrd	r2, [sp, #112]	; 0x70
    a7a4:	strd	r2, [sp, #104]	; 0x68
    a7a8:	orrs	r3, r2, r3
    a7ac:	bne	a7bc <MyGame_Example_Monster_parse_json_table+0x3a00>
    a7b0:	ldr	r3, [r9, #8]
    a7b4:	tst	r3, #2
    a7b8:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a7bc:	mov	r3, #8
    a7c0:	mov	r2, r3
    a7c4:	mov	r1, #19
    a7c8:	ldr	r0, [r9]
    a7cc:	bl	0 <flatcc_builder_table_add>
    a7d0:	cmp	r0, #0
    a7d4:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a7d8:	ldrd	r2, [sp, #104]	; 0x68
    a7dc:	strd	r2, [r0]
    a7e0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a7e4:	mov	r1, r0
    a7e8:	str	r4, [sp]
    a7ec:	ldr	r3, [pc, #-848]	; a4a4 <MyGame_Example_Monster_parse_json_table+0x36e8>
    a7f0:	mov	r2, sl
    a7f4:	mov	r0, r9
    a7f8:	bl	9ec <flatcc_json_parser_symbolic_float>
    a7fc:	cmp	sl, r0
    a800:	cmpne	fp, r0
    a804:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    a808:	mov	fp, r0
    a80c:	b	9a7c <MyGame_Example_Monster_parse_json_table+0x2cc0>
    a810:	ldr	r0, [r9]
    a814:	bl	0 <flatcc_builder_end_offset_vector>
    a818:	cmp	r0, #0
    a81c:	str	r0, [sp, #88]	; 0x58
    a820:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a824:	mov	r1, #10
    a828:	ldr	r0, [r9]
    a82c:	bl	0 <flatcc_builder_table_add_offset>
    a830:	cmp	r0, #0
    a834:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a838:	ldr	r3, [sp, #88]	; 0x58
    a83c:	str	r3, [r0]
    a840:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a844:	mov	r3, #2
    a848:	mov	r2, sl
    a84c:	mov	r1, r4
    a850:	mov	r0, r9
    a854:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a858:	cmp	r4, r0
    a85c:	mov	fp, r0
    a860:	beq	ad88 <MyGame_Example_Monster_parse_json_table+0x3fcc>
    a864:	ldr	r0, [r9]
    a868:	bl	0 <flatcc_builder_start_offset_vector>
    a86c:	cmp	r0, #0
    a870:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a874:	mov	r1, fp
    a878:	add	r3, sp, #84	; 0x54
    a87c:	mov	r2, sl
    a880:	mov	r0, r9
    a884:	bl	938 <flatcc_json_parser_array_start>
    a888:	ldr	r3, [sp, #84]	; 0x54
    a88c:	cmp	r3, #0
    a890:	mov	fp, r0
    a894:	beq	a9dc <MyGame_Example_Monster_parse_json_table+0x3c20>
    a898:	add	r4, sp, #88	; 0x58
    a89c:	mov	r5, #1
    a8a0:	b	a8e0 <MyGame_Example_Monster_parse_json_table+0x3b24>
    a8a4:	ldr	r0, [r9]
    a8a8:	bl	0 <flatcc_builder_extend_offset_vector>
    a8ac:	add	r3, sp, #84	; 0x54
    a8b0:	mov	r2, sl
    a8b4:	mov	r1, fp
    a8b8:	subs	ip, r0, #0
    a8bc:	mov	r0, r9
    a8c0:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a8c4:	ldr	lr, [sp, #88]	; 0x58
    a8c8:	str	lr, [ip]
    a8cc:	bl	2140 <flatcc_json_parser_array_end>
    a8d0:	ldr	r3, [sp, #84]	; 0x54
    a8d4:	cmp	r3, #0
    a8d8:	mov	fp, r0
    a8dc:	beq	a9dc <MyGame_Example_Monster_parse_json_table+0x3c20>
    a8e0:	mov	r1, fp
    a8e4:	mov	r3, r4
    a8e8:	mov	r2, sl
    a8ec:	mov	r0, r9
    a8f0:	bl	0 <flatcc_json_parser_build_string>
    a8f4:	ldr	r3, [sp, #88]	; 0x58
    a8f8:	mov	r1, r5
    a8fc:	cmp	r3, #0
    a900:	mov	fp, r0
    a904:	bne	a8a4 <MyGame_Example_Monster_parse_json_table+0x3ae8>
    a908:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a90c:	mov	r1, r0
    a910:	str	r4, [sp]
    a914:	ldr	r3, [pc, #-1140]	; a4a8 <MyGame_Example_Monster_parse_json_table+0x36ec>
    a918:	mov	r2, sl
    a91c:	mov	r0, r9
    a920:	bl	9ec <flatcc_json_parser_symbolic_float>
    a924:	cmp	sl, r0
    a928:	cmpne	fp, r0
    a92c:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    a930:	mov	fp, r0
    a934:	b	848c <MyGame_Example_Monster_parse_json_table+0x16d0>
    a938:	mov	r3, #8
    a93c:	mov	r2, sl
    a940:	mov	r1, fp
    a944:	mov	r0, r9
    a948:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    a94c:	cmp	fp, r0
    a950:	mov	r5, r0
    a954:	beq	9e24 <MyGame_Example_Monster_parse_json_table+0x3068>
    a958:	add	r4, sp, #120	; 0x78
    a95c:	mov	r3, #0
    a960:	str	r3, [r4, #-8]!
    a964:	mov	r1, r0
    a968:	mov	r2, sl
    a96c:	mov	r3, r4
    a970:	mov	r0, r9
    a974:	bl	56c <flatcc_json_parser_uint32.constprop.28>
    a978:	cmp	r0, r5
    a97c:	mov	fp, r0
    a980:	beq	ac10 <MyGame_Example_Monster_parse_json_table+0x3e54>
    a984:	ldr	r3, [sp, #112]	; 0x70
    a988:	cmp	r3, #0
    a98c:	bne	a99c <MyGame_Example_Monster_parse_json_table+0x3be0>
    a990:	ldr	r3, [r9, #8]
    a994:	tst	r3, #2
    a998:	beq	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a99c:	mov	r3, #4
    a9a0:	mov	r2, r3
    a9a4:	mov	r1, #17
    a9a8:	ldr	r0, [r9]
    a9ac:	bl	0 <flatcc_builder_table_add>
    a9b0:	cmp	r0, #0
    a9b4:	beq	adcc <MyGame_Example_Monster_parse_json_table+0x4010>
    a9b8:	ldr	r3, [sp, #112]	; 0x70
    a9bc:	str	r3, [r0]
    a9c0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a9c4:	mov	r1, fp
    a9c8:	mov	r2, sl
    a9cc:	mov	r0, r9
    a9d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a9d4:	mov	fp, r0
    a9d8:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    a9dc:	ldr	r0, [r9]
    a9e0:	bl	0 <flatcc_builder_end_offset_vector>
    a9e4:	cmp	r0, #0
    a9e8:	str	r0, [sp, #88]	; 0x58
    a9ec:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    a9f0:	mov	r1, #28
    a9f4:	ldr	r0, [r9]
    a9f8:	bl	0 <flatcc_builder_table_add_offset>
    a9fc:	cmp	r0, #0
    aa00:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    aa04:	ldr	r3, [sp, #88]	; 0x58
    aa08:	str	r3, [r0]
    aa0c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    aa10:	mov	r1, fp
    aa14:	mov	r2, sl
    aa18:	mov	r0, r9
    aa1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa20:	mov	fp, r0
    aa24:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    aa28:	mov	r4, r0
    aa2c:	mov	r1, r4
    aa30:	mov	r2, sl
    aa34:	mov	r0, r9
    aa38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa3c:	mov	fp, r0
    aa40:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    aa44:	mov	r1, r0
    aa48:	str	r4, [sp]
    aa4c:	ldr	r3, [pc, #-1448]	; a4ac <MyGame_Example_Monster_parse_json_table+0x36f0>
    aa50:	mov	r2, sl
    aa54:	mov	r0, r9
    aa58:	bl	1ac8 <flatcc_json_parser_symbolic_int16>
    aa5c:	cmp	sl, r0
    aa60:	cmpne	fp, r0
    aa64:	beq	8eb4 <MyGame_Example_Monster_parse_json_table+0x20f8>
    aa68:	mov	fp, r0
    aa6c:	b	9bc0 <MyGame_Example_Monster_parse_json_table+0x2e04>
    aa70:	mov	r2, #1
    aa74:	mov	r1, r2
    aa78:	mvn	r3, #0
    aa7c:	ldr	r0, [r9]
    aa80:	bl	0 <flatcc_builder_start_vector>
    aa84:	subs	r6, r0, #0
    aa88:	bne	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    aa8c:	mov	r1, fp
    aa90:	add	r3, sp, #84	; 0x54
    aa94:	mov	r2, sl
    aa98:	mov	r0, r9
    aa9c:	bl	938 <flatcc_json_parser_array_start>
    aaa0:	ldr	r3, [sp, #84]	; 0x54
    aaa4:	cmp	r3, #0
    aaa8:	mov	fp, r0
    aaac:	beq	ab90 <MyGame_Example_Monster_parse_json_table+0x3dd4>
    aab0:	ldr	r8, [pc, #-1544]	; a4b0 <MyGame_Example_Monster_parse_json_table+0x36f4>
    aab4:	mov	r7, #1
    aab8:	add	r5, sp, #112	; 0x70
    aabc:	b	aaec <MyGame_Example_Monster_parse_json_table+0x3d30>
    aac0:	ldrb	r2, [sp, #112]	; 0x70
    aac4:	mov	r1, r0
    aac8:	add	r3, sp, #84	; 0x54
    aacc:	strb	r2, [r4]
    aad0:	mov	r0, r9
    aad4:	mov	r2, sl
    aad8:	bl	2140 <flatcc_json_parser_array_end>
    aadc:	ldr	r3, [sp, #84]	; 0x54
    aae0:	cmp	r3, #0
    aae4:	mov	fp, r0
    aae8:	beq	ab90 <MyGame_Example_Monster_parse_json_table+0x3dd4>
    aaec:	mov	r1, r7
    aaf0:	ldr	r0, [r9]
    aaf4:	strb	r6, [sp, #112]	; 0x70
    aaf8:	bl	0 <flatcc_builder_extend_vector>
    aafc:	mov	r1, fp
    ab00:	mov	r3, r5
    ab04:	mov	r2, sl
    ab08:	subs	r4, r0, #0
    ab0c:	mov	r0, r9
    ab10:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    ab14:	bl	4b8 <flatcc_json_parser_uint8>
    ab18:	cmp	r0, fp
    ab1c:	bne	aac0 <MyGame_Example_Monster_parse_json_table+0x3d04>
    ab20:	str	r5, [sp]
    ab24:	mov	r3, r8
    ab28:	mov	r2, sl
    ab2c:	mov	r1, fp
    ab30:	mov	r0, r9
    ab34:	bl	18a4 <flatcc_json_parser_symbolic_uint8>
    ab38:	cmp	sl, r0
    ab3c:	cmpne	r0, fp
    ab40:	bne	aac0 <MyGame_Example_Monster_parse_json_table+0x3d04>
    ab44:	b	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ab48:	mov	r4, r0
    ab4c:	mov	r1, r4
    ab50:	mov	r2, sl
    ab54:	mov	r0, r9
    ab58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab5c:	mov	fp, r0
    ab60:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    ab64:	mov	r1, r0
    ab68:	str	r4, [sp]
    ab6c:	ldr	r3, [pc, #-1728]	; a4b4 <MyGame_Example_Monster_parse_json_table+0x36f8>
    ab70:	mov	r2, sl
    ab74:	mov	r0, r9
    ab78:	bl	fec <flatcc_json_parser_symbolic_int32>
    ab7c:	cmp	sl, r0
    ab80:	cmpne	fp, r0
    ab84:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ab88:	mov	fp, r0
    ab8c:	b	9dbc <MyGame_Example_Monster_parse_json_table+0x3000>
    ab90:	ldr	r0, [r9]
    ab94:	bl	0 <flatcc_builder_end_vector>
    ab98:	str	r0, [sp, #88]	; 0x58
    ab9c:	b	a554 <MyGame_Example_Monster_parse_json_table+0x3798>
    aba0:	mov	r1, fp
    aba4:	mov	r2, sl
    aba8:	mov	r0, r9
    abac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abb0:	mov	fp, r0
    abb4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    abb8:	mov	r3, sl
    abbc:	mov	fp, r5
    abc0:	mov	sl, r9
    abc4:	mov	r9, r3
    abc8:	b	6f8c <MyGame_Example_Monster_parse_json_table+0x1d0>
    abcc:	mov	r4, r0
    abd0:	mov	r1, r4
    abd4:	mov	r2, sl
    abd8:	mov	r0, r9
    abdc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abe0:	mov	fp, r0
    abe4:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    abe8:	mov	r1, r0
    abec:	mov	r3, #8
    abf0:	mov	r2, sl
    abf4:	mov	r0, r9
    abf8:	bl	0 <flatcc_json_parser_set_error>
    abfc:	cmp	r4, r0
    ac00:	mov	fp, r0
    ac04:	beq	ac3c <MyGame_Example_Monster_parse_json_table+0x3e80>
    ac08:	ldrd	r2, [sp, #104]	; 0x68
    ac0c:	b	a7a8 <MyGame_Example_Monster_parse_json_table+0x39ec>
    ac10:	mov	r1, r0
    ac14:	str	r4, [sp]
    ac18:	ldr	r3, [pc, #-1896]	; a4b8 <MyGame_Example_Monster_parse_json_table+0x36fc>
    ac1c:	mov	r2, sl
    ac20:	mov	r0, r9
    ac24:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    ac28:	cmp	sl, r0
    ac2c:	cmpne	fp, r0
    ac30:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ac34:	mov	fp, r0
    ac38:	b	a984 <MyGame_Example_Monster_parse_json_table+0x3bc8>
    ac3c:	add	r3, sp, #104	; 0x68
    ac40:	str	r3, [sp]
    ac44:	mov	r2, sl
    ac48:	ldr	r3, [pc, #-1940]	; a4bc <MyGame_Example_Monster_parse_json_table+0x3700>
    ac4c:	mov	r1, r4
    ac50:	mov	r0, r9
    ac54:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ac58:	cmp	sl, r0
    ac5c:	cmpne	r0, r4
    ac60:	mov	fp, r0
    ac64:	bne	ac08 <MyGame_Example_Monster_parse_json_table+0x3e4c>
    ac68:	b	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    ac6c:	mov	r4, fp
    ac70:	mov	r1, r4
    ac74:	mov	r2, sl
    ac78:	mov	r0, r9
    ac7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac80:	mov	fp, r0
    ac84:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    ac88:	mov	r4, fp
    ac8c:	mov	r1, r4
    ac90:	mov	r2, sl
    ac94:	mov	r0, r9
    ac98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac9c:	mov	fp, r0
    aca0:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    aca4:	mov	r4, fp
    aca8:	mov	r1, r4
    acac:	mov	r2, sl
    acb0:	mov	r0, r9
    acb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    acb8:	mov	fp, r0
    acbc:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    acc0:	strd	r6, [sp, #72]	; 0x48
    acc4:	mov	r4, r0
    acc8:	b	980c <MyGame_Example_Monster_parse_json_table+0x2a50>
    accc:	mov	r1, r0
    acd0:	mov	r3, #8
    acd4:	mov	r2, sl
    acd8:	mov	r0, r9
    acdc:	bl	0 <flatcc_json_parser_set_error>
    ace0:	cmp	r4, r0
    ace4:	mov	r5, r0
    ace8:	beq	ad44 <MyGame_Example_Monster_parse_json_table+0x3f88>
    acec:	mov	fp, r0
    acf0:	ldrd	r2, [sp, #104]	; 0x68
    acf4:	b	7b48 <MyGame_Example_Monster_parse_json_table+0xd8c>
    acf8:	mov	r1, fp
    acfc:	mov	r2, sl
    ad00:	mov	r0, r9
    ad04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad08:	mov	fp, r0
    ad0c:	b	6f24 <MyGame_Example_Monster_parse_json_table+0x168>
    ad10:	mov	r1, r0
    ad14:	str	r4, [sp]
    ad18:	ldr	r3, [pc, #-2144]	; a4c0 <MyGame_Example_Monster_parse_json_table+0x3704>
    ad1c:	mov	r2, sl
    ad20:	mov	r0, r9
    ad24:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    ad28:	cmp	sl, r0
    ad2c:	cmpne	fp, r0
    ad30:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ad34:	mov	fp, r0
    ad38:	b	a5e4 <MyGame_Example_Monster_parse_json_table+0x3828>
    ad3c:	mov	fp, sl
    ad40:	mov	r5, fp
    ad44:	add	r3, sp, #104	; 0x68
    ad48:	str	r3, [sp]
    ad4c:	mov	r2, sl
    ad50:	ldr	r3, [pc, #-2196]	; a4c4 <MyGame_Example_Monster_parse_json_table+0x3708>
    ad54:	mov	r1, r5
    ad58:	mov	r0, r9
    ad5c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ad60:	cmp	sl, r0
    ad64:	cmpne	r0, r5
    ad68:	mov	fp, r0
    ad6c:	beq	7918 <MyGame_Example_Monster_parse_json_table+0xb5c>
    ad70:	ldrd	r2, [sp, #104]	; 0x68
    ad74:	b	7b48 <MyGame_Example_Monster_parse_json_table+0xd8c>
    ad78:	mov	r4, r0
    ad7c:	b	79dc <MyGame_Example_Monster_parse_json_table+0xc20>
    ad80:	mov	r4, r0
    ad84:	b	819c <MyGame_Example_Monster_parse_json_table+0x13e0>
    ad88:	mov	r4, r0
    ad8c:	b	9d58 <MyGame_Example_Monster_parse_json_table+0x2f9c>
    ad90:	mov	r4, r0
    ad94:	b	8214 <MyGame_Example_Monster_parse_json_table+0x1458>
    ad98:	mov	r4, r0
    ad9c:	b	7f84 <MyGame_Example_Monster_parse_json_table+0x11c8>
    ada0:	mov	r1, r0
    ada4:	str	r4, [sp]
    ada8:	ldr	r3, [pc, #-2280]	; a4c8 <MyGame_Example_Monster_parse_json_table+0x370c>
    adac:	mov	r2, sl
    adb0:	mov	r0, r9
    adb4:	bl	fec <flatcc_json_parser_symbolic_int32>
    adb8:	cmp	sl, r0
    adbc:	cmpne	fp, r0
    adc0:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    adc4:	mov	fp, r0
    adc8:	b	8104 <MyGame_Example_Monster_parse_json_table+0x1348>
    adcc:	mov	r3, sl
    add0:	mov	r0, fp
    add4:	mov	sl, r9
    add8:	mov	r9, r3
    addc:	b	6f88 <MyGame_Example_Monster_parse_json_table+0x1cc>
    ade0:	mov	r1, r0
    ade4:	str	r5, [sp]
    ade8:	ldr	r3, [pc, #-2340]	; a4cc <MyGame_Example_Monster_parse_json_table+0x3710>
    adec:	mov	r2, sl
    adf0:	mov	r0, r9
    adf4:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    adf8:	cmp	sl, r0
    adfc:	cmpne	fp, r0
    ae00:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ae04:	mov	fp, r0
    ae08:	b	9ea0 <MyGame_Example_Monster_parse_json_table+0x30e4>
    ae0c:	mov	r1, r0
    ae10:	str	r5, [sp]
    ae14:	ldr	r3, [pc, #-2380]	; a4d0 <MyGame_Example_Monster_parse_json_table+0x3714>
    ae18:	mov	r2, sl
    ae1c:	mov	r0, r9
    ae20:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    ae24:	cmp	sl, r0
    ae28:	cmpne	fp, r0
    ae2c:	beq	9984 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    ae30:	mov	fp, r0
    ae34:	b	803c <MyGame_Example_Monster_parse_json_table+0x1280>
    ae38:	mov	fp, r0
    ae3c:	b	7a9c <MyGame_Example_Monster_parse_json_table+0xce0>

0000ae40 <MyGame_Example_Any_parse_json_union>:
    ae40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae44:	sub	sp, sp, #684	; 0x2ac
    ae48:	mov	r5, r2
    ae4c:	ldr	r2, [sp, #720]	; 0x2d0
    ae50:	mov	ip, #0
    ae54:	mov	fp, r0
    ae58:	mov	r4, r1
    ae5c:	str	ip, [r2]
    ae60:	cmp	r3, #4
    ae64:	ldrls	pc, [pc, r3, lsl #2]
    ae68:	b	cc38 <MyGame_Example_Any_parse_json_union+0x1df8>
    ae6c:	.word	0x0000b164
    ae70:	.word	0x0000b1a8
    ae74:	.word	0x0000b218
    ae78:	.word	0x0000b504
    ae7c:	.word	0x0000ae80
    ae80:	mov	r1, #4
    ae84:	ldr	r0, [r0]
    ae88:	bl	0 <flatcc_builder_start_table>
    ae8c:	cmp	r0, #0
    ae90:	bne	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    ae94:	add	r3, sp, #644	; 0x284
    ae98:	str	r3, [sp]
    ae9c:	mov	r2, r5
    aea0:	mov	r3, #1
    aea4:	mov	r1, r4
    aea8:	mov	r0, fp
    aeac:	bl	0 <flatcc_json_parser_prepare_unions>
    aeb0:	cmp	r5, r0
    aeb4:	beq	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    aeb8:	mov	r1, r4
    aebc:	add	r3, sp, #640	; 0x280
    aec0:	mov	r2, r5
    aec4:	mov	r0, fp
    aec8:	bl	884 <flatcc_json_parser_object_start>
    aecc:	ldr	r3, [sp, #640]	; 0x280
    aed0:	mov	r4, r0
    aed4:	cmp	r3, #0
    aed8:	beq	cb10 <MyGame_Example_Any_parse_json_union+0x1cd0>
    aedc:	mov	r7, fp
    aee0:	mov	fp, r5
    aee4:	cmp	fp, r4
    aee8:	beq	af14 <MyGame_Example_Any_parse_json_union+0xd4>
    aeec:	ldrb	r3, [r4]
    aef0:	cmp	r3, #34	; 0x22
    aef4:	moveq	r3, #0
    aef8:	addeq	r4, r4, #1
    aefc:	streq	r3, [r7, #12]
    af00:	beq	af14 <MyGame_Example_Any_parse_json_union+0xd4>
    af04:	cmp	r3, #46	; 0x2e
    af08:	movne	r3, #1
    af0c:	strne	r3, [r7, #12]
    af10:	beq	cde4 <MyGame_Example_Any_parse_json_union+0x1fa4>
    af14:	sub	r5, fp, r4
    af18:	cmp	r5, #8
    af1c:	bls	b598 <MyGame_Example_Any_parse_json_union+0x758>
    af20:	ldrb	r0, [r4, #7]
    af24:	mov	r1, #0
    af28:	ldrb	r2, [r4, #6]
    af2c:	lsl	r3, r2, #8
    af30:	str	r3, [sp, #536]	; 0x218
    af34:	add	r3, sp, #536	; 0x218
    af38:	lsr	ip, r2, #24
    af3c:	str	ip, [sp, #540]	; 0x21c
    af40:	ldrd	r2, [r3]
    af44:	orr	r2, r2, r0
    af48:	orr	r3, r3, r1
    af4c:	mov	r0, r2
    af50:	mov	r1, r3
    af54:	ldrb	r2, [r4, #5]
    af58:	lsl	r3, r2, #16
    af5c:	str	r3, [sp, #464]	; 0x1d0
    af60:	add	r3, sp, #464	; 0x1d0
    af64:	lsr	ip, r2, #16
    af68:	str	ip, [sp, #468]	; 0x1d4
    af6c:	ldrd	r2, [r3]
    af70:	orr	r2, r2, r0
    af74:	orr	r3, r3, r1
    af78:	mov	r0, r2
    af7c:	mov	r1, r3
    af80:	ldrb	r2, [r4, #4]
    af84:	lsl	r3, r2, #24
    af88:	str	r3, [sp, #400]	; 0x190
    af8c:	add	r3, sp, #400	; 0x190
    af90:	lsr	ip, r2, #8
    af94:	str	ip, [sp, #404]	; 0x194
    af98:	ldrd	r2, [r3]
    af9c:	orr	r2, r2, r0
    afa0:	orr	r3, r3, r1
    afa4:	ldrb	r1, [r4, #3]
    afa8:	str	r1, [sp, #420]	; 0x1a4
    afac:	mov	r1, #0
    afb0:	str	r1, [sp, #416]	; 0x1a0
    afb4:	add	r1, sp, #416	; 0x1a0
    afb8:	ldrd	r0, [r1]
    afbc:	orr	r0, r0, r2
    afc0:	orr	r1, r1, r3
    afc4:	ldrb	r2, [r4, #2]
    afc8:	lsl	r3, r2, #8
    afcc:	str	r3, [sp, #388]	; 0x184
    afd0:	mov	r3, #0
    afd4:	str	r3, [sp, #384]	; 0x180
    afd8:	add	r3, sp, #384	; 0x180
    afdc:	ldrd	r2, [r3]
    afe0:	orr	r2, r2, r0
    afe4:	orr	r3, r3, r1
    afe8:	mov	r0, r2
    afec:	mov	r1, r3
    aff0:	ldrb	r2, [r4, #1]
    aff4:	lsl	r3, r2, #16
    aff8:	str	r3, [sp, #324]	; 0x144
    affc:	mov	r3, #0
    b000:	str	r3, [sp, #320]	; 0x140
    b004:	add	r3, sp, #320	; 0x140
    b008:	ldrd	r8, [r3]
    b00c:	orr	r8, r8, r0
    b010:	orr	r9, r9, r1
    b014:	ldrb	r0, [r4]
    b018:	add	r3, pc, #464	; 0x1d0
    b01c:	ldrd	r2, [r3]
    b020:	lsl	r1, r0, #24
    b024:	str	r1, [sp, #284]	; 0x11c
    b028:	mov	r1, #0
    b02c:	str	r1, [sp, #280]	; 0x118
    b030:	add	r1, sp, #280	; 0x118
    b034:	ldrd	r0, [r1]
    b038:	orr	r1, r1, r9
    b03c:	orr	r0, r0, r8
    b040:	cmp	r1, r3
    b044:	cmpeq	r0, r2
    b048:	mov	r8, r0
    b04c:	mov	r9, r1
    b050:	beq	b82c <MyGame_Example_Any_parse_json_union+0x9ec>
    b054:	add	r3, pc, #412	; 0x19c
    b058:	ldrd	r2, [r3]
    b05c:	bic	r0, r0, #255	; 0xff
    b060:	cmp	r1, r3
    b064:	cmpeq	r0, r2
    b068:	movne	r3, #1
    b06c:	moveq	r3, #0
    b070:	cmp	r5, #7
    b074:	movgt	r6, r3
    b078:	orrle	r6, r3, #1
    b07c:	cmp	r6, #0
    b080:	beq	d2e4 <MyGame_Example_Any_parse_json_union+0x24a4>
    b084:	add	r1, pc, #372	; 0x174
    b088:	ldrd	r0, [r1]
    b08c:	ldr	r2, [pc, #380]	; b210 <MyGame_Example_Any_parse_json_union+0x3d0>
    b090:	mvn	r3, #0
    b094:	and	r3, r3, r9
    b098:	and	r2, r2, r8
    b09c:	cmp	r3, r1
    b0a0:	cmpeq	r2, r0
    b0a4:	beq	ba48 <MyGame_Example_Any_parse_json_union+0xc08>
    b0a8:	add	r3, pc, #344	; 0x158
    b0ac:	ldrd	r2, [r3]
    b0b0:	and	r0, r8, #-16777216	; 0xff000000
    b0b4:	cmp	r9, r3
    b0b8:	cmpeq	r0, r2
    b0bc:	bne	b0c8 <MyGame_Example_Any_parse_json_union+0x288>
    b0c0:	cmp	r5, #5
    b0c4:	bgt	ce00 <MyGame_Example_Any_parse_json_union+0x1fc0>
    b0c8:	mov	r1, r4
    b0cc:	mov	r2, fp
    b0d0:	mov	r0, r7
    b0d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0d8:	mov	sl, r0
    b0dc:	sub	r3, fp, sl
    b0e0:	cmp	r3, #1
    b0e4:	ble	b0f8 <MyGame_Example_Any_parse_json_union+0x2b8>
    b0e8:	ldrb	r3, [sl]
    b0ec:	cmp	r3, #32
    b0f0:	bhi	b10c <MyGame_Example_Any_parse_json_union+0x2cc>
    b0f4:	beq	c998 <MyGame_Example_Any_parse_json_union+0x1b58>
    b0f8:	mov	r1, sl
    b0fc:	mov	r2, fp
    b100:	mov	r0, r7
    b104:	bl	0 <flatcc_json_parser_space_ext>
    b108:	mov	sl, r0
    b10c:	cmp	fp, sl
    b110:	beq	cafc <MyGame_Example_Any_parse_json_union+0x1cbc>
    b114:	ldrb	r3, [sl]
    b118:	cmp	r3, #44	; 0x2c
    b11c:	beq	caa8 <MyGame_Example_Any_parse_json_union+0x1c68>
    b120:	mov	r3, #0
    b124:	str	r3, [sp, #640]	; 0x280
    b128:	ldrb	r3, [sl]
    b12c:	mov	r5, fp
    b130:	mov	fp, r7
    b134:	cmp	r3, #125	; 0x7d
    b138:	beq	b9a0 <MyGame_Example_Any_parse_json_union+0xb60>
    b13c:	mov	r3, #10
    b140:	mov	r1, sl
    b144:	mov	r2, r5
    b148:	mov	r0, r7
    b14c:	bl	0 <flatcc_json_parser_set_error>
    b150:	ldr	r3, [sp, #640]	; 0x280
    b154:	cmp	r3, #0
    b158:	mov	r4, r0
    b15c:	bne	aedc <MyGame_Example_Any_parse_json_union+0x9c>
    b160:	b	cb10 <MyGame_Example_Any_parse_json_union+0x1cd0>
    b164:	sub	r3, r5, r1
    b168:	cmp	r3, #3
    b16c:	ble	b18c <MyGame_Example_Any_parse_json_union+0x34c>
    b170:	mov	r2, #4
    b174:	ldr	r1, [pc, #152]	; b214 <MyGame_Example_Any_parse_json_union+0x3d4>
    b178:	mov	r0, r4
    b17c:	bl	0 <memcmp>
    b180:	cmp	r0, #0
    b184:	addeq	r0, r4, #4
    b188:	beq	b1a0 <MyGame_Example_Any_parse_json_union+0x360>
    b18c:	mov	r2, r5
    b190:	mov	r1, r4
    b194:	mov	r0, fp
    b198:	mov	r3, #26
    b19c:	bl	0 <flatcc_json_parser_set_error>
    b1a0:	add	sp, sp, #684	; 0x2ac
    b1a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1a8:	ldr	r3, [sp, #720]	; 0x2d0
    b1ac:	mov	r2, r5
    b1b0:	bl	6dbc <MyGame_Example_Monster_parse_json_table>
    b1b4:	ldr	r3, [fp, #24]
    b1b8:	cmp	r3, #0
    b1bc:	bne	b1a0 <MyGame_Example_Any_parse_json_union+0x360>
    b1c0:	ldr	r3, [sp, #720]	; 0x2d0
    b1c4:	ldr	r3, [r3]
    b1c8:	cmp	r3, #0
    b1cc:	bne	b1a0 <MyGame_Example_Any_parse_json_union+0x360>
    b1d0:	mov	r1, r0
    b1d4:	mov	r2, r5
    b1d8:	mov	r0, fp
    b1dc:	mov	r3, #33	; 0x21
    b1e0:	bl	0 <flatcc_json_parser_set_error>
    b1e4:	add	sp, sp, #684	; 0x2ac
    b1e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1ec:	nop			; (mov r0, r0)
    b1f0:	.word	0x616e795f
    b1f4:	.word	0x6d616e79
    b1f8:	.word	0x616e7900
    b1fc:	.word	0x6d616e79
    b200:	.word	0x69780000
    b204:	.word	0x70726566
    b208:	.word	0x65000000
    b20c:	.word	0x6d6f7669
    b210:	.word	0xffff0000
    b214:	.word	0x00000000
    b218:	mov	r1, #4
    b21c:	ldr	r0, [r0]
    b220:	bl	0 <flatcc_builder_start_table>
    b224:	cmp	r0, #0
    b228:	bne	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    b22c:	mov	r1, r4
    b230:	add	r3, sp, #660	; 0x294
    b234:	mov	r2, r5
    b238:	mov	r0, fp
    b23c:	bl	884 <flatcc_json_parser_object_start>
    b240:	ldr	r3, [sp, #660]	; 0x294
    b244:	mov	r4, r0
    b248:	cmp	r3, #0
    b24c:	beq	b4e0 <MyGame_Example_Any_parse_json_union+0x6a0>
    b250:	cmp	r5, r4
    b254:	beq	b280 <MyGame_Example_Any_parse_json_union+0x440>
    b258:	ldrb	r3, [r4]
    b25c:	cmp	r3, #34	; 0x22
    b260:	moveq	r3, #0
    b264:	addeq	r4, r4, #1
    b268:	streq	r3, [fp, #12]
    b26c:	beq	b280 <MyGame_Example_Any_parse_json_union+0x440>
    b270:	cmp	r3, #46	; 0x2e
    b274:	movne	r3, #1
    b278:	strne	r3, [fp, #12]
    b27c:	beq	cc1c <MyGame_Example_Any_parse_json_union+0x1ddc>
    b280:	sub	r8, r5, r4
    b284:	cmp	r8, #8
    b288:	bls	b514 <MyGame_Example_Any_parse_json_union+0x6d4>
    b28c:	ldrb	r6, [r4, #7]
    b290:	mov	r7, #0
    b294:	ldrb	r2, [r4, #6]
    b298:	lsl	r3, r2, #8
    b29c:	str	r3, [sp, #456]	; 0x1c8
    b2a0:	add	r3, sp, #456	; 0x1c8
    b2a4:	lsr	r1, r2, #24
    b2a8:	str	r1, [sp, #460]	; 0x1cc
    b2ac:	ldrd	r2, [r3]
    b2b0:	orr	r2, r2, r6
    b2b4:	orr	r3, r3, r7
    b2b8:	mov	r6, r2
    b2bc:	mov	r7, r3
    b2c0:	ldrb	r2, [r4, #5]
    b2c4:	lsl	r3, r2, #16
    b2c8:	str	r3, [sp, #368]	; 0x170
    b2cc:	add	r3, sp, #368	; 0x170
    b2d0:	lsr	r1, r2, #16
    b2d4:	str	r1, [sp, #372]	; 0x174
    b2d8:	ldrd	r2, [r3]
    b2dc:	orr	r2, r2, r6
    b2e0:	orr	r3, r3, r7
    b2e4:	mov	r6, r2
    b2e8:	mov	r7, r3
    b2ec:	ldrb	r2, [r4, #4]
    b2f0:	lsl	r3, r2, #24
    b2f4:	str	r3, [sp, #272]	; 0x110
    b2f8:	add	r3, sp, #272	; 0x110
    b2fc:	lsr	r1, r2, #8
    b300:	str	r1, [sp, #276]	; 0x114
    b304:	ldrd	r2, [r3]
    b308:	orr	r2, r2, r6
    b30c:	orr	r3, r3, r7
    b310:	mov	r6, r2
    b314:	mov	r7, r3
    b318:	ldrb	r3, [r4, #3]
    b31c:	str	r3, [sp, #292]	; 0x124
    b320:	mov	r3, #0
    b324:	str	r3, [sp, #288]	; 0x120
    b328:	add	r3, sp, #288	; 0x120
    b32c:	ldrd	r2, [r3]
    b330:	orr	r2, r2, r6
    b334:	orr	r3, r3, r7
    b338:	mov	r6, r2
    b33c:	mov	r7, r3
    b340:	ldrb	r2, [r4, #2]
    b344:	lsl	r3, r2, #8
    b348:	str	r3, [sp, #244]	; 0xf4
    b34c:	mov	r3, #0
    b350:	str	r3, [sp, #240]	; 0xf0
    b354:	ldrd	r2, [sp, #240]	; 0xf0
    b358:	orr	r2, r2, r6
    b35c:	orr	r3, r3, r7
    b360:	mov	r6, r2
    b364:	mov	r7, r3
    b368:	ldrb	r2, [r4, #1]
    b36c:	lsl	r3, r2, #16
    b370:	str	r3, [sp, #188]	; 0xbc
    b374:	mov	r3, #0
    b378:	str	r3, [sp, #184]	; 0xb8
    b37c:	ldrd	r2, [sp, #184]	; 0xb8
    b380:	orr	r2, r2, r6
    b384:	orr	r3, r3, r7
    b388:	mov	r6, r2
    b38c:	mov	r7, r3
    b390:	ldrb	r2, [r4]
    b394:	add	r1, pc, #924	; 0x39c
    b398:	ldrd	r0, [r1]
    b39c:	lsl	r3, r2, #24
    b3a0:	str	r3, [sp, #132]	; 0x84
    b3a4:	mov	r3, #0
    b3a8:	str	r3, [sp, #128]	; 0x80
    b3ac:	ldrd	r2, [sp, #128]	; 0x80
    b3b0:	orr	r2, r2, r6
    b3b4:	orr	r3, r3, r7
    b3b8:	mov	r6, r2
    b3bc:	mov	r7, r3
    b3c0:	ldr	r2, [pc, #904]	; b750 <MyGame_Example_Any_parse_json_union+0x910>
    b3c4:	mvn	r3, #0
    b3c8:	and	r3, r3, r7
    b3cc:	and	r2, r2, r6
    b3d0:	cmp	r3, r1
    b3d4:	cmpeq	r2, r0
    b3d8:	beq	b61c <MyGame_Example_Any_parse_json_union+0x7dc>
    b3dc:	add	r3, pc, #860	; 0x35c
    b3e0:	ldrd	r2, [r3]
    b3e4:	and	r0, r6, #-16777216	; 0xff000000
    b3e8:	cmp	r7, r3
    b3ec:	cmpeq	r0, r2
    b3f0:	movne	r9, #1
    b3f4:	moveq	r9, #0
    b3f8:	cmp	r8, #5
    b3fc:	orrle	r9, r9, #1
    b400:	cmp	r9, #0
    b404:	beq	cc94 <MyGame_Example_Any_parse_json_union+0x1e54>
    b408:	add	r3, pc, #824	; 0x338
    b40c:	ldrd	r2, [r3]
    b410:	bic	r1, r7, #255	; 0xff
    b414:	mov	r0, #0
    b418:	cmp	r1, r3
    b41c:	cmpeq	r0, r2
    b420:	beq	b758 <MyGame_Example_Any_parse_json_union+0x918>
    b424:	ldr	r3, [pc, #804]	; b750 <MyGame_Example_Any_parse_json_union+0x910>
    b428:	mov	r2, #0
    b42c:	and	r7, r7, r3
    b430:	ldr	r3, [pc, #796]	; b754 <MyGame_Example_Any_parse_json_union+0x914>
    b434:	and	r6, r6, r2
    b438:	cmp	r7, r3
    b43c:	mov	r2, #0
    b440:	cmpeq	r6, r2
    b444:	bne	b450 <MyGame_Example_Any_parse_json_union+0x610>
    b448:	cmp	r8, #2
    b44c:	bgt	cb54 <MyGame_Example_Any_parse_json_union+0x1d14>
    b450:	mov	r1, r4
    b454:	mov	r2, r5
    b458:	mov	r0, fp
    b45c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b460:	mov	r7, r0
    b464:	sub	r3, r5, r7
    b468:	cmp	r3, #1
    b46c:	ble	b480 <MyGame_Example_Any_parse_json_union+0x640>
    b470:	ldrb	r3, [r7]
    b474:	cmp	r3, #32
    b478:	bhi	b494 <MyGame_Example_Any_parse_json_union+0x654>
    b47c:	beq	b96c <MyGame_Example_Any_parse_json_union+0xb2c>
    b480:	mov	r1, r7
    b484:	mov	r2, r5
    b488:	mov	r0, fp
    b48c:	bl	0 <flatcc_json_parser_space_ext>
    b490:	mov	r7, r0
    b494:	cmp	r5, r7
    b498:	beq	b984 <MyGame_Example_Any_parse_json_union+0xb44>
    b49c:	ldrb	r3, [r7]
    b4a0:	cmp	r3, #44	; 0x2c
    b4a4:	beq	b9dc <MyGame_Example_Any_parse_json_union+0xb9c>
    b4a8:	mov	r3, #0
    b4ac:	str	r3, [sp, #660]	; 0x294
    b4b0:	ldrb	r3, [r7]
    b4b4:	cmp	r3, #125	; 0x7d
    b4b8:	beq	b6f8 <MyGame_Example_Any_parse_json_union+0x8b8>
    b4bc:	mov	r3, #10
    b4c0:	mov	r1, r7
    b4c4:	mov	r2, r5
    b4c8:	mov	r0, fp
    b4cc:	bl	0 <flatcc_json_parser_set_error>
    b4d0:	ldr	r3, [sp, #660]	; 0x294
    b4d4:	cmp	r3, #0
    b4d8:	mov	r4, r0
    b4dc:	bne	b250 <MyGame_Example_Any_parse_json_union+0x410>
    b4e0:	ldr	r3, [fp, #24]
    b4e4:	cmp	r3, #0
    b4e8:	beq	cb34 <MyGame_Example_Any_parse_json_union+0x1cf4>
    b4ec:	mov	r1, r4
    b4f0:	mov	r3, #33	; 0x21
    b4f4:	mov	r2, r5
    b4f8:	mov	r0, fp
    b4fc:	bl	0 <flatcc_json_parser_set_error>
    b500:	b	b1b4 <MyGame_Example_Any_parse_json_union+0x374>
    b504:	ldr	r3, [sp, #720]	; 0x2d0
    b508:	mov	r2, r5
    b50c:	bl	51b0 <MyGame_Example2_Monster_parse_json_table>
    b510:	b	b1b4 <MyGame_Example_Any_parse_json_union+0x374>
    b514:	sub	r3, r8, #1
    b518:	cmp	r3, #7
    b51c:	ldrls	pc, [pc, r3, lsl #2]
    b520:	b	e7ac <MyGame_Example_Any_parse_json_union+0x396c>
    b524:	.word	0x0000b58c
    b528:	.word	0x0000b580
    b52c:	.word	0x0000b574
    b530:	.word	0x0000b568
    b534:	.word	0x0000b55c
    b538:	.word	0x0000b550
    b53c:	.word	0x0000b544
    b540:	.word	0x0000b28c
    b544:	mov	r6, #0
    b548:	mov	r7, #0
    b54c:	b	b294 <MyGame_Example_Any_parse_json_union+0x454>
    b550:	mov	r6, #0
    b554:	mov	r7, #0
    b558:	b	b2c0 <MyGame_Example_Any_parse_json_union+0x480>
    b55c:	mov	r6, #0
    b560:	mov	r7, #0
    b564:	b	b2ec <MyGame_Example_Any_parse_json_union+0x4ac>
    b568:	mov	r6, #0
    b56c:	mov	r7, #0
    b570:	b	b318 <MyGame_Example_Any_parse_json_union+0x4d8>
    b574:	mov	r6, #0
    b578:	mov	r7, #0
    b57c:	b	b340 <MyGame_Example_Any_parse_json_union+0x500>
    b580:	mov	r6, #0
    b584:	mov	r7, #0
    b588:	b	b368 <MyGame_Example_Any_parse_json_union+0x528>
    b58c:	mov	r6, #0
    b590:	mov	r7, #0
    b594:	b	b390 <MyGame_Example_Any_parse_json_union+0x550>
    b598:	sub	r3, r5, #1
    b59c:	cmp	r3, #7
    b5a0:	ldrls	pc, [pc, r3, lsl #2]
    b5a4:	b	e7b8 <MyGame_Example_Any_parse_json_union+0x3978>
    b5a8:	.word	0x0000b610
    b5ac:	.word	0x0000b604
    b5b0:	.word	0x0000b5f8
    b5b4:	.word	0x0000b5ec
    b5b8:	.word	0x0000b5e0
    b5bc:	.word	0x0000b5d4
    b5c0:	.word	0x0000b5c8
    b5c4:	.word	0x0000af20
    b5c8:	mov	r0, #0
    b5cc:	mov	r1, #0
    b5d0:	b	af28 <MyGame_Example_Any_parse_json_union+0xe8>
    b5d4:	mov	r0, #0
    b5d8:	mov	r1, #0
    b5dc:	b	af54 <MyGame_Example_Any_parse_json_union+0x114>
    b5e0:	mov	r0, #0
    b5e4:	mov	r1, #0
    b5e8:	b	af80 <MyGame_Example_Any_parse_json_union+0x140>
    b5ec:	mov	r2, #0
    b5f0:	mov	r3, #0
    b5f4:	b	afa4 <MyGame_Example_Any_parse_json_union+0x164>
    b5f8:	mov	r0, #0
    b5fc:	mov	r1, #0
    b600:	b	afc4 <MyGame_Example_Any_parse_json_union+0x184>
    b604:	mov	r0, #0
    b608:	mov	r1, #0
    b60c:	b	aff0 <MyGame_Example_Any_parse_json_union+0x1b0>
    b610:	mov	r8, #0
    b614:	mov	r9, #0
    b618:	b	b014 <MyGame_Example_Any_parse_json_union+0x1d4>
    b61c:	cmp	r8, #6
    b620:	ble	b424 <MyGame_Example_Any_parse_json_union+0x5e4>
    b624:	mov	r3, #6
    b628:	mov	r2, r5
    b62c:	mov	r1, r4
    b630:	mov	r0, fp
    b634:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    b638:	cmp	r0, r4
    b63c:	mov	r9, r0
    b640:	beq	b424 <MyGame_Example_Any_parse_json_union+0x5e4>
    b644:	cmp	r5, r0
    b648:	ldrd	r0, [sp, #128]	; 0x80
    b64c:	mov	r2, #0
    b650:	mov	r3, #0
    b654:	add	r1, sp, #672	; 0x2a0
    b658:	strb	r0, [sp, #656]	; 0x290
    b65c:	str	r0, [sp, #664]	; 0x298
    b660:	strd	r2, [r1]
    b664:	beq	d958 <MyGame_Example_Any_parse_json_union+0x2b18>
    b668:	str	r1, [sp]
    b66c:	add	r3, sp, #664	; 0x298
    b670:	mov	r2, r5
    b674:	mov	r1, r9
    b678:	mov	r0, fp
    b67c:	bl	0 <flatcc_json_parser_integer>
    b680:	cmp	r9, r0
    b684:	mov	r7, r0
    b688:	beq	d958 <MyGame_Example_Any_parse_json_union+0x2b18>
    b68c:	ldr	r1, [sp, #664]	; 0x298
    b690:	add	r3, sp, #672	; 0x2a0
    b694:	cmp	r1, #0
    b698:	ldrd	r2, [r3]
    b69c:	beq	cc54 <MyGame_Example_Any_parse_json_union+0x1e14>
    b6a0:	cmp	r3, #0
    b6a4:	cmpeq	r2, #128	; 0x80
    b6a8:	rsbls	r2, r2, #0
    b6ac:	sxtbls	r2, r2
    b6b0:	strbls	r2, [sp, #656]	; 0x290
    b6b4:	bhi	d6ec <MyGame_Example_Any_parse_json_union+0x28ac>
    b6b8:	cmp	r2, #2
    b6bc:	bne	b6cc <MyGame_Example_Any_parse_json_union+0x88c>
    b6c0:	ldr	r3, [fp, #8]
    b6c4:	tst	r3, #2
    b6c8:	beq	b464 <MyGame_Example_Any_parse_json_union+0x624>
    b6cc:	mov	r3, #1
    b6d0:	mov	r2, r3
    b6d4:	mov	r1, r3
    b6d8:	ldr	r0, [fp]
    b6dc:	bl	0 <flatcc_builder_table_add>
    b6e0:	cmp	r0, #0
    b6e4:	beq	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    b6e8:	add	r3, sp, #656	; 0x290
    b6ec:	ldrsb	r3, [r3]
    b6f0:	strb	r3, [r0]
    b6f4:	b	b464 <MyGame_Example_Any_parse_json_union+0x624>
    b6f8:	add	r4, r7, #1
    b6fc:	sub	r3, r5, r4
    b700:	cmp	r3, #1
    b704:	ble	b718 <MyGame_Example_Any_parse_json_union+0x8d8>
    b708:	ldrb	r3, [r7, #1]
    b70c:	cmp	r3, #32
    b710:	bhi	b4e0 <MyGame_Example_Any_parse_json_union+0x6a0>
    b714:	beq	d3f0 <MyGame_Example_Any_parse_json_union+0x25b0>
    b718:	mov	r1, r4
    b71c:	mov	r2, r5
    b720:	mov	r0, fp
    b724:	bl	0 <flatcc_json_parser_space_ext>
    b728:	ldr	r3, [sp, #660]	; 0x294
    b72c:	mov	r4, r0
    b730:	b	b248 <MyGame_Example_Any_parse_json_union+0x408>
    b734:	nop			; (mov r0, r0)
    b738:	.word	0x72320000
    b73c:	.word	0x636f6c6f
    b740:	.word	0x72000000
    b744:	.word	0x636f6c6f
    b748:	.word	0x00000000
    b74c:	.word	0x75633200
    b750:	.word	0xffff0000
    b754:	.word	0x75630000
    b758:	cmp	r8, #3
    b75c:	ble	b450 <MyGame_Example_Any_parse_json_union+0x610>
    b760:	mov	r3, #3
    b764:	mov	r2, r5
    b768:	mov	r1, r4
    b76c:	mov	r0, fp
    b770:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    b774:	cmp	r0, r4
    b778:	mov	r6, r0
    b77c:	beq	b450 <MyGame_Example_Any_parse_json_union+0x610>
    b780:	mov	r0, #0
    b784:	mov	r1, #0
    b788:	add	r2, sp, #672	; 0x2a0
    b78c:	mov	r3, #0
    b790:	cmp	r5, r6
    b794:	strd	r0, [r2]
    b798:	strb	r3, [sp, #656]	; 0x290
    b79c:	str	r3, [sp, #664]	; 0x298
    b7a0:	beq	e474 <MyGame_Example_Any_parse_json_union+0x3634>
    b7a4:	str	r2, [sp]
    b7a8:	add	r3, sp, #664	; 0x298
    b7ac:	mov	r2, r5
    b7b0:	mov	r1, r6
    b7b4:	mov	r0, fp
    b7b8:	bl	0 <flatcc_json_parser_integer>
    b7bc:	cmp	r6, r0
    b7c0:	mov	r7, r0
    b7c4:	beq	e474 <MyGame_Example_Any_parse_json_union+0x3634>
    b7c8:	ldr	r3, [sp, #664]	; 0x298
    b7cc:	cmp	r3, #0
    b7d0:	bne	d5d4 <MyGame_Example_Any_parse_json_union+0x2794>
    b7d4:	add	r3, sp, #672	; 0x2a0
    b7d8:	ldrd	r2, [r3]
    b7dc:	cmp	r3, #0
    b7e0:	cmpeq	r2, #255	; 0xff
    b7e4:	uxtbls	r2, r2
    b7e8:	strbls	r2, [sp, #656]	; 0x290
    b7ec:	bhi	d774 <MyGame_Example_Any_parse_json_union+0x2934>
    b7f0:	cmp	r2, #2
    b7f4:	bne	b804 <MyGame_Example_Any_parse_json_union+0x9c4>
    b7f8:	ldr	r3, [fp, #8]
    b7fc:	tst	r3, #2
    b800:	beq	b464 <MyGame_Example_Any_parse_json_union+0x624>
    b804:	mov	r3, #1
    b808:	mov	r2, r3
    b80c:	mov	r1, #3
    b810:	ldr	r0, [fp]
    b814:	bl	0 <flatcc_builder_table_add>
    b818:	cmp	r0, #0
    b81c:	beq	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    b820:	ldrb	r3, [sp, #656]	; 0x290
    b824:	strb	r3, [r0]
    b828:	b	b464 <MyGame_Example_Any_parse_json_union+0x624>
    b82c:	add	r5, r4, #8
    b830:	sub	ip, fp, r5
    b834:	cmp	ip, #8
    b838:	bls	c9ac <MyGame_Example_Any_parse_json_union+0x1b6c>
    b83c:	ldrb	r0, [r4, #14]
    b840:	mov	r3, #0
    b844:	lsl	r1, r0, #8
    b848:	str	r1, [sp, #632]	; 0x278
    b84c:	add	r1, sp, #632	; 0x278
    b850:	lsr	lr, r0, #24
    b854:	str	lr, [sp, #636]	; 0x27c
    b858:	ldrd	r0, [r1]
    b85c:	orr	r1, r1, r3
    b860:	mov	r3, r1
    b864:	ldrb	r0, [r4, #13]
    b868:	lsl	r1, r0, #16
    b86c:	str	r1, [sp, #624]	; 0x270
    b870:	add	r1, sp, #624	; 0x270
    b874:	lsr	lr, r0, #16
    b878:	str	lr, [sp, #628]	; 0x274
    b87c:	ldrd	r0, [r1]
    b880:	orr	r1, r1, r3
    b884:	mov	r3, r1
    b888:	ldrb	r0, [r4, #12]
    b88c:	lsl	r1, r0, #24
    b890:	str	r1, [sp, #600]	; 0x258
    b894:	add	r1, sp, #600	; 0x258
    b898:	lsr	lr, r0, #8
    b89c:	str	lr, [sp, #604]	; 0x25c
    b8a0:	ldrd	r0, [r1]
    b8a4:	orr	r1, r1, r3
    b8a8:	mov	r3, r1
    b8ac:	ldrb	r1, [r4, #11]
    b8b0:	str	r1, [sp, #612]	; 0x264
    b8b4:	mov	r1, #0
    b8b8:	str	r1, [sp, #608]	; 0x260
    b8bc:	add	r1, sp, #608	; 0x260
    b8c0:	ldrd	r0, [r1]
    b8c4:	orr	r1, r1, r3
    b8c8:	mov	r3, r1
    b8cc:	ldrb	r0, [r4, #10]
    b8d0:	lsl	r1, r0, #8
    b8d4:	str	r1, [sp, #588]	; 0x24c
    b8d8:	mov	r1, #0
    b8dc:	str	r1, [sp, #584]	; 0x248
    b8e0:	add	r1, sp, #584	; 0x248
    b8e4:	ldrd	r0, [r1]
    b8e8:	orr	r1, r1, r3
    b8ec:	mov	r3, r1
    b8f0:	ldrb	r0, [r4, #9]
    b8f4:	lsl	r1, r0, #16
    b8f8:	str	r1, [sp, #572]	; 0x23c
    b8fc:	mov	r1, #0
    b900:	str	r1, [sp, #568]	; 0x238
    b904:	add	r1, sp, #568	; 0x238
    b908:	ldrd	r0, [r1]
    b90c:	orr	r1, r1, r3
    b910:	mov	r3, r1
    b914:	ldrb	r0, [r4, #8]
    b918:	add	lr, sp, #528	; 0x210
    b91c:	mov	r2, #0
    b920:	lsl	r1, r0, #24
    b924:	str	r1, [sp, #532]	; 0x214
    b928:	mov	r1, #0
    b92c:	str	r1, [sp, #528]	; 0x210
    b930:	ldrd	r8, [lr]
    b934:	add	r1, pc, #244	; 0xf4
    b938:	ldrd	r0, [r1]
    b93c:	orr	r9, r9, r3
    b940:	cmp	r9, r1
    b944:	cmpeq	r2, r0
    b948:	bne	b954 <MyGame_Example_Any_parse_json_union+0xb14>
    b94c:	cmp	ip, #4
    b950:	bgt	d4cc <MyGame_Example_Any_parse_json_union+0x268c>
    b954:	mov	r1, r5
    b958:	mov	r2, fp
    b95c:	mov	r0, r7
    b960:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b964:	mov	sl, r0
    b968:	b	b0dc <MyGame_Example_Any_parse_json_union+0x29c>
    b96c:	ldrb	r3, [r7, #1]
    b970:	cmp	r3, #32
    b974:	addhi	r7, r7, #1
    b978:	bls	b480 <MyGame_Example_Any_parse_json_union+0x640>
    b97c:	cmp	r5, r7
    b980:	bne	b49c <MyGame_Example_Any_parse_json_union+0x65c>
    b984:	mov	r3, #0
    b988:	str	r3, [sp, #660]	; 0x294
    b98c:	ldr	r3, [fp, #24]
    b990:	mov	r4, r5
    b994:	cmp	r3, #0
    b998:	bne	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    b99c:	b	cb34 <MyGame_Example_Any_parse_json_union+0x1cf4>
    b9a0:	add	r4, sl, #1
    b9a4:	sub	r3, r5, r4
    b9a8:	cmp	r3, #1
    b9ac:	ble	b9c0 <MyGame_Example_Any_parse_json_union+0xb80>
    b9b0:	ldrb	r3, [sl, #1]
    b9b4:	cmp	r3, #32
    b9b8:	bhi	cb10 <MyGame_Example_Any_parse_json_union+0x1cd0>
    b9bc:	beq	d5c0 <MyGame_Example_Any_parse_json_union+0x2780>
    b9c0:	mov	r1, r4
    b9c4:	mov	r2, r5
    b9c8:	mov	r0, fp
    b9cc:	bl	0 <flatcc_json_parser_space_ext>
    b9d0:	ldr	r3, [sp, #640]	; 0x280
    b9d4:	mov	r4, r0
    b9d8:	b	aed4 <MyGame_Example_Any_parse_json_union+0x94>
    b9dc:	add	r4, r7, #1
    b9e0:	sub	r3, r5, r4
    b9e4:	cmp	r3, #1
    b9e8:	ble	b9fc <MyGame_Example_Any_parse_json_union+0xbbc>
    b9ec:	ldrb	r3, [r7, #1]
    b9f0:	cmp	r3, #32
    b9f4:	bhi	ba10 <MyGame_Example_Any_parse_json_union+0xbd0>
    b9f8:	beq	d6d8 <MyGame_Example_Any_parse_json_union+0x2898>
    b9fc:	mov	r1, r4
    ba00:	mov	r2, r5
    ba04:	mov	r0, fp
    ba08:	bl	0 <flatcc_json_parser_space_ext>
    ba0c:	mov	r4, r0
    ba10:	cmp	r5, r4
    ba14:	beq	e6c8 <MyGame_Example_Any_parse_json_union+0x3888>
    ba18:	ldrb	r3, [r4]
    ba1c:	cmp	r3, #125	; 0x7d
    ba20:	beq	d9e8 <MyGame_Example_Any_parse_json_union+0x2ba8>
    ba24:	mov	r3, #1
    ba28:	str	r3, [sp, #660]	; 0x294
    ba2c:	b	b250 <MyGame_Example_Any_parse_json_union+0x410>
    ba30:	.word	0x00000000
    ba34:	.word	0x74797065
    ba38:	.word	0x6a736f6e
    ba3c:	.word	0x74657374
    ba40:	.word	0x69787061
    ba44:	.word	0x70726566
    ba48:	cmp	r5, #6
    ba4c:	ble	b0c8 <MyGame_Example_Any_parse_json_union+0x288>
    ba50:	mov	r3, #6
    ba54:	mov	r2, fp
    ba58:	mov	r1, r4
    ba5c:	mov	r0, r7
    ba60:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    ba64:	cmp	r0, r4
    ba68:	mov	sl, r0
    ba6c:	beq	b0c8 <MyGame_Example_Any_parse_json_union+0x288>
    ba70:	mov	r1, #3
    ba74:	ldr	r0, [r7]
    ba78:	bl	0 <flatcc_builder_start_table>
    ba7c:	cmp	r0, #0
    ba80:	bne	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    ba84:	mov	r1, sl
    ba88:	add	r3, sp, #648	; 0x288
    ba8c:	mov	r2, fp
    ba90:	mov	r0, r7
    ba94:	bl	884 <flatcc_json_parser_object_start>
    ba98:	ldr	r3, [sp, #648]	; 0x288
    ba9c:	mov	sl, r7
    baa0:	cmp	r3, #0
    baa4:	beq	bfac <MyGame_Example_Any_parse_json_union+0x116c>
    baa8:	cmp	fp, r0
    baac:	beq	bfe4 <MyGame_Example_Any_parse_json_union+0x11a4>
    bab0:	ldrb	r3, [r0]
    bab4:	cmp	r3, #34	; 0x22
    bab8:	moveq	r3, #0
    babc:	addeq	r0, r0, #1
    bac0:	streq	r3, [sl, #12]
    bac4:	beq	bad8 <MyGame_Example_Any_parse_json_union+0xc98>
    bac8:	cmp	r3, #46	; 0x2e
    bacc:	movne	r3, #1
    bad0:	strne	r3, [sl, #12]
    bad4:	beq	c968 <MyGame_Example_Any_parse_json_union+0x1b28>
    bad8:	sub	r3, fp, r0
    badc:	cmp	r3, #8
    bae0:	bls	bffc <MyGame_Example_Any_parse_json_union+0x11bc>
    bae4:	ldrb	r2, [r0, #7]
    bae8:	mov	r3, #0
    baec:	ldrb	r4, [r0, #6]
    baf0:	lsr	r1, r4, #24
    baf4:	str	r1, [sp, #332]	; 0x14c
    baf8:	lsl	r1, r4, #8
    bafc:	str	r1, [sp, #328]	; 0x148
    bb00:	add	r1, sp, #328	; 0x148
    bb04:	ldrd	r4, [r1]
    bb08:	orr	r4, r4, r2
    bb0c:	orr	r5, r5, r3
    bb10:	mov	r2, r4
    bb14:	mov	r3, r5
    bb18:	ldrb	r4, [r0, #5]
    bb1c:	lsr	r1, r4, #16
    bb20:	str	r1, [sp, #204]	; 0xcc
    bb24:	lsl	r1, r4, #16
    bb28:	str	r1, [sp, #200]	; 0xc8
    bb2c:	ldrd	r4, [sp, #200]	; 0xc8
    bb30:	orr	r4, r4, r2
    bb34:	orr	r5, r5, r3
    bb38:	mov	r2, r4
    bb3c:	mov	r3, r5
    bb40:	ldrb	r4, [r0, #4]
    bb44:	lsr	r1, r4, #8
    bb48:	str	r1, [sp, #140]	; 0x8c
    bb4c:	lsl	r1, r4, #24
    bb50:	str	r1, [sp, #136]	; 0x88
    bb54:	ldrd	r4, [sp, #136]	; 0x88
    bb58:	orr	r4, r4, r2
    bb5c:	orr	r5, r5, r3
    bb60:	mov	r2, r4
    bb64:	mov	r3, r5
    bb68:	ldrb	r1, [r0, #3]
    bb6c:	str	r1, [sp, #156]	; 0x9c
    bb70:	mov	r1, #0
    bb74:	str	r1, [sp, #152]	; 0x98
    bb78:	ldrd	r4, [sp, #152]	; 0x98
    bb7c:	orr	r4, r4, r2
    bb80:	orr	r5, r5, r3
    bb84:	mov	r2, r4
    bb88:	mov	r3, r5
    bb8c:	ldrb	r4, [r0, #2]
    bb90:	lsl	r1, r4, #8
    bb94:	str	r1, [sp, #108]	; 0x6c
    bb98:	mov	r1, #0
    bb9c:	str	r1, [sp, #104]	; 0x68
    bba0:	ldrd	r4, [sp, #104]	; 0x68
    bba4:	orr	r4, r4, r2
    bba8:	orr	r5, r5, r3
    bbac:	mov	r2, r4
    bbb0:	mov	r3, r5
    bbb4:	ldrb	r4, [r0, #1]
    bbb8:	lsl	r1, r4, #16
    bbbc:	str	r1, [sp, #76]	; 0x4c
    bbc0:	mov	r1, #0
    bbc4:	str	r1, [sp, #72]	; 0x48
    bbc8:	ldrd	r4, [sp, #72]	; 0x48
    bbcc:	orr	r4, r4, r2
    bbd0:	orr	r5, r5, r3
    bbd4:	mov	r2, r4
    bbd8:	mov	r3, r5
    bbdc:	ldrb	r4, [r0]
    bbe0:	lsl	r1, r4, #24
    bbe4:	str	r1, [sp, #52]	; 0x34
    bbe8:	mov	r1, #0
    bbec:	str	r1, [sp, #48]	; 0x30
    bbf0:	ldrd	r4, [sp, #48]	; 0x30
    bbf4:	orr	r4, r4, r2
    bbf8:	orr	r5, r5, r3
    bbfc:	mov	r2, r4
    bc00:	mov	r3, r5
    bc04:	sub	r5, pc, #468	; 0x1d4
    bc08:	ldrd	r4, [r5]
    bc0c:	cmp	r3, r5
    bc10:	cmpeq	r2, r4
    bc14:	bne	bfe4 <MyGame_Example_Any_parse_json_union+0x11a4>
    bc18:	add	r1, r0, #8
    bc1c:	sub	r3, fp, r1
    bc20:	cmp	r3, #8
    bc24:	bls	c080 <MyGame_Example_Any_parse_json_union+0x1240>
    bc28:	ldrb	r2, [r0, #15]
    bc2c:	mov	r3, #0
    bc30:	ldrb	r4, [r0, #14]
    bc34:	lsr	ip, r4, #24
    bc38:	str	ip, [sp, #492]	; 0x1ec
    bc3c:	lsl	ip, r4, #8
    bc40:	str	ip, [sp, #488]	; 0x1e8
    bc44:	add	ip, sp, #488	; 0x1e8
    bc48:	ldrd	r4, [ip]
    bc4c:	orr	r4, r4, r2
    bc50:	orr	r5, r5, r3
    bc54:	mov	r2, r4
    bc58:	mov	r3, r5
    bc5c:	ldrb	r4, [r0, #13]
    bc60:	lsr	ip, r4, #16
    bc64:	str	ip, [sp, #412]	; 0x19c
    bc68:	lsl	ip, r4, #16
    bc6c:	str	ip, [sp, #408]	; 0x198
    bc70:	add	ip, sp, #408	; 0x198
    bc74:	ldrd	r4, [ip]
    bc78:	orr	r4, r4, r2
    bc7c:	orr	r5, r5, r3
    bc80:	mov	r2, r4
    bc84:	mov	r3, r5
    bc88:	ldrb	r4, [r0, #12]
    bc8c:	lsr	ip, r4, #8
    bc90:	str	ip, [sp, #340]	; 0x154
    bc94:	lsl	ip, r4, #24
    bc98:	str	ip, [sp, #336]	; 0x150
    bc9c:	add	ip, sp, #336	; 0x150
    bca0:	ldrd	r4, [ip]
    bca4:	orr	r4, r4, r2
    bca8:	orr	r5, r5, r3
    bcac:	mov	r2, r4
    bcb0:	mov	r3, r5
    bcb4:	ldrb	ip, [r0, #11]
    bcb8:	str	ip, [sp, #364]	; 0x16c
    bcbc:	mov	ip, #0
    bcc0:	str	ip, [sp, #360]	; 0x168
    bcc4:	add	ip, sp, #360	; 0x168
    bcc8:	ldrd	r4, [ip]
    bccc:	orr	r4, r4, r2
    bcd0:	orr	r5, r5, r3
    bcd4:	mov	r2, r4
    bcd8:	mov	r3, r5
    bcdc:	ldrb	r4, [r0, #10]
    bce0:	lsl	ip, r4, #8
    bce4:	str	ip, [sp, #300]	; 0x12c
    bce8:	mov	ip, #0
    bcec:	str	ip, [sp, #296]	; 0x128
    bcf0:	add	ip, sp, #296	; 0x128
    bcf4:	ldrd	r4, [ip]
    bcf8:	orr	r4, r4, r2
    bcfc:	orr	r5, r5, r3
    bd00:	mov	r2, r4
    bd04:	mov	r3, r5
    bd08:	ldrb	r4, [r0, #9]
    bd0c:	lsl	ip, r4, #16
    bd10:	str	ip, [sp, #252]	; 0xfc
    bd14:	mov	ip, #0
    bd18:	str	ip, [sp, #248]	; 0xf8
    bd1c:	ldrd	r4, [sp, #248]	; 0xf8
    bd20:	orr	r4, r4, r2
    bd24:	orr	r5, r5, r3
    bd28:	mov	r2, r4
    bd2c:	mov	r3, r5
    bd30:	ldrb	r4, [r0, #8]
    bd34:	lsl	ip, r4, #24
    bd38:	str	ip, [sp, #212]	; 0xd4
    bd3c:	mov	ip, #0
    bd40:	str	ip, [sp, #208]	; 0xd0
    bd44:	ldrd	r4, [sp, #208]	; 0xd0
    bd48:	orr	r4, r4, r2
    bd4c:	orr	r5, r5, r3
    bd50:	mov	r2, r4
    bd54:	mov	r3, r5
    bd58:	sub	r5, pc, #800	; 0x320
    bd5c:	ldrd	r4, [r5]
    bd60:	cmp	r3, r5
    bd64:	cmpeq	r2, r4
    bd68:	bne	bfe8 <MyGame_Example_Any_parse_json_union+0x11a8>
    bd6c:	add	r5, r0, #16
    bd70:	sub	r4, fp, r5
    bd74:	cmp	r4, #8
    bd78:	bls	c1b8 <MyGame_Example_Any_parse_json_union+0x1378>
    bd7c:	ldrb	r2, [r0, #23]
    bd80:	mov	r3, #0
    bd84:	ldrb	r6, [r0, #22]
    bd88:	lsr	r1, r6, #24
    bd8c:	str	r1, [sp, #596]	; 0x254
    bd90:	lsl	r1, r6, #8
    bd94:	str	r1, [sp, #592]	; 0x250
    bd98:	add	r1, sp, #592	; 0x250
    bd9c:	ldrd	r6, [r1]
    bda0:	orr	r6, r6, r2
    bda4:	orr	r7, r7, r3
    bda8:	mov	r2, r6
    bdac:	mov	r3, r7
    bdb0:	ldrb	r6, [r0, #21]
    bdb4:	lsr	r1, r6, #16
    bdb8:	str	r1, [sp, #564]	; 0x234
    bdbc:	lsl	r1, r6, #16
    bdc0:	str	r1, [sp, #560]	; 0x230
    bdc4:	add	r1, sp, #560	; 0x230
    bdc8:	ldrd	r6, [r1]
    bdcc:	orr	r6, r6, r2
    bdd0:	orr	r7, r7, r3
    bdd4:	mov	r2, r6
    bdd8:	mov	r3, r7
    bddc:	ldrb	r6, [r0, #20]
    bde0:	lsr	r1, r6, #8
    bde4:	str	r1, [sp, #500]	; 0x1f4
    bde8:	lsl	r1, r6, #24
    bdec:	str	r1, [sp, #496]	; 0x1f0
    bdf0:	add	r1, sp, #496	; 0x1f0
    bdf4:	ldrd	r6, [r1]
    bdf8:	orr	r6, r6, r2
    bdfc:	orr	r7, r7, r3
    be00:	mov	r2, r6
    be04:	mov	r3, r7
    be08:	ldrb	r1, [r0, #19]
    be0c:	str	r1, [sp, #516]	; 0x204
    be10:	mov	r1, #0
    be14:	str	r1, [sp, #512]	; 0x200
    be18:	add	r1, sp, #512	; 0x200
    be1c:	ldrd	r6, [r1]
    be20:	orr	r6, r6, r2
    be24:	orr	r7, r7, r3
    be28:	mov	r2, r6
    be2c:	mov	r3, r7
    be30:	ldrb	r6, [r0, #18]
    be34:	lsl	r1, r6, #8
    be38:	str	r1, [sp, #476]	; 0x1dc
    be3c:	mov	r1, #0
    be40:	str	r1, [sp, #472]	; 0x1d8
    be44:	add	r1, sp, #472	; 0x1d8
    be48:	ldrd	r6, [r1]
    be4c:	orr	r6, r6, r2
    be50:	orr	r7, r7, r3
    be54:	mov	r2, r6
    be58:	mov	r3, r7
    be5c:	ldrb	r6, [r0, #17]
    be60:	lsl	r1, r6, #16
    be64:	str	r1, [sp, #452]	; 0x1c4
    be68:	mov	r1, #0
    be6c:	str	r1, [sp, #448]	; 0x1c0
    be70:	add	r1, sp, #448	; 0x1c0
    be74:	ldrd	r6, [r1]
    be78:	orr	r6, r6, r2
    be7c:	orr	r7, r7, r3
    be80:	mov	r2, r6
    be84:	mov	r3, r7
    be88:	ldrb	r6, [r0, #16]
    be8c:	add	r1, pc, #940	; 0x3ac
    be90:	ldrd	r0, [r1]
    be94:	lsl	ip, r6, #24
    be98:	str	ip, [sp, #396]	; 0x18c
    be9c:	mov	ip, #0
    bea0:	str	ip, [sp, #392]	; 0x188
    bea4:	add	ip, sp, #392	; 0x188
    bea8:	ldrd	r6, [ip]
    beac:	orr	r6, r6, r2
    beb0:	orr	r7, r7, r3
    beb4:	mov	r2, r6
    beb8:	mov	r3, r7
    bebc:	ldr	r6, [pc, #916]	; c258 <MyGame_Example_Any_parse_json_union+0x1418>
    bec0:	mvn	r7, #0
    bec4:	and	r7, r7, r3
    bec8:	and	r6, r6, r2
    becc:	cmp	r7, r1
    bed0:	cmpeq	r6, r0
    bed4:	beq	c260 <MyGame_Example_Any_parse_json_union+0x1420>
    bed8:	add	r1, pc, #872	; 0x368
    bedc:	ldrd	r0, [r1]
    bee0:	and	r2, r2, #-16777216	; 0xff000000
    bee4:	cmp	r3, r1
    bee8:	cmpeq	r2, r0
    beec:	movne	r8, #1
    bef0:	moveq	r8, #0
    bef4:	cmp	r4, #5
    bef8:	orrle	r8, r8, #1
    befc:	cmp	r8, #0
    bf00:	beq	d568 <MyGame_Example_Any_parse_json_union+0x2728>
    bf04:	add	r3, pc, #836	; 0x344
    bf08:	ldrd	r2, [r3]
    bf0c:	cmp	r7, r3
    bf10:	cmpeq	r6, r2
    bf14:	bne	bf20 <MyGame_Example_Any_parse_json_union+0x10e0>
    bf18:	cmp	r4, #6
    bf1c:	bgt	d32c <MyGame_Example_Any_parse_json_union+0x24ec>
    bf20:	mov	r1, r5
    bf24:	mov	r2, fp
    bf28:	mov	r0, sl
    bf2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf30:	mov	r9, r0
    bf34:	sub	r3, fp, r9
    bf38:	cmp	r3, #1
    bf3c:	ble	bf50 <MyGame_Example_Any_parse_json_union+0x1110>
    bf40:	ldrb	r3, [r9]
    bf44:	cmp	r3, #32
    bf48:	bhi	bf64 <MyGame_Example_Any_parse_json_union+0x1124>
    bf4c:	beq	c13c <MyGame_Example_Any_parse_json_union+0x12fc>
    bf50:	mov	r1, r9
    bf54:	mov	r2, fp
    bf58:	mov	r0, sl
    bf5c:	bl	0 <flatcc_json_parser_space_ext>
    bf60:	mov	r9, r0
    bf64:	cmp	fp, r9
    bf68:	beq	c154 <MyGame_Example_Any_parse_json_union+0x1314>
    bf6c:	ldrb	r3, [r9]
    bf70:	cmp	r3, #44	; 0x2c
    bf74:	beq	c168 <MyGame_Example_Any_parse_json_union+0x1328>
    bf78:	mov	r3, #0
    bf7c:	str	r3, [sp, #648]	; 0x288
    bf80:	ldrb	r3, [r9]
    bf84:	cmp	r3, #125	; 0x7d
    bf88:	beq	c104 <MyGame_Example_Any_parse_json_union+0x12c4>
    bf8c:	mov	r3, #10
    bf90:	mov	r1, r9
    bf94:	mov	r2, fp
    bf98:	mov	r0, sl
    bf9c:	bl	0 <flatcc_json_parser_set_error>
    bfa0:	ldr	r3, [sp, #648]	; 0x288
    bfa4:	cmp	r3, #0
    bfa8:	bne	baa8 <MyGame_Example_Any_parse_json_union+0xc68>
    bfac:	mov	r7, sl
    bfb0:	mov	sl, r0
    bfb4:	ldr	r1, [r7, #24]
    bfb8:	cmp	r1, #0
    bfbc:	beq	e4a4 <MyGame_Example_Any_parse_json_union+0x3664>
    bfc0:	mov	r5, fp
    bfc4:	mov	fp, r7
    bfc8:	mov	r1, sl
    bfcc:	mov	r3, #33	; 0x21
    bfd0:	mov	r2, r5
    bfd4:	mov	r0, fp
    bfd8:	bl	0 <flatcc_json_parser_set_error>
    bfdc:	mov	r4, r0
    bfe0:	b	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    bfe4:	mov	r1, r0
    bfe8:	mov	r2, fp
    bfec:	mov	r0, sl
    bff0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bff4:	mov	r9, r0
    bff8:	b	bf34 <MyGame_Example_Any_parse_json_union+0x10f4>
    bffc:	sub	r3, r3, #1
    c000:	cmp	r3, #7
    c004:	ldrls	pc, [pc, r3, lsl #2]
    c008:	b	bfe4 <MyGame_Example_Any_parse_json_union+0x11a4>
    c00c:	.word	0x0000c074
    c010:	.word	0x0000c068
    c014:	.word	0x0000c05c
    c018:	.word	0x0000c050
    c01c:	.word	0x0000c044
    c020:	.word	0x0000c038
    c024:	.word	0x0000c02c
    c028:	.word	0x0000bae4
    c02c:	mov	r2, #0
    c030:	mov	r3, #0
    c034:	b	baec <MyGame_Example_Any_parse_json_union+0xcac>
    c038:	mov	r2, #0
    c03c:	mov	r3, #0
    c040:	b	bb18 <MyGame_Example_Any_parse_json_union+0xcd8>
    c044:	mov	r2, #0
    c048:	mov	r3, #0
    c04c:	b	bb40 <MyGame_Example_Any_parse_json_union+0xd00>
    c050:	mov	r2, #0
    c054:	mov	r3, #0
    c058:	b	bb68 <MyGame_Example_Any_parse_json_union+0xd28>
    c05c:	mov	r2, #0
    c060:	mov	r3, #0
    c064:	b	bb8c <MyGame_Example_Any_parse_json_union+0xd4c>
    c068:	mov	r2, #0
    c06c:	mov	r3, #0
    c070:	b	bbb4 <MyGame_Example_Any_parse_json_union+0xd74>
    c074:	mov	r2, #0
    c078:	mov	r3, #0
    c07c:	b	bbdc <MyGame_Example_Any_parse_json_union+0xd9c>
    c080:	sub	r3, r3, #1
    c084:	cmp	r3, #7
    c088:	ldrls	pc, [pc, r3, lsl #2]
    c08c:	b	bfe8 <MyGame_Example_Any_parse_json_union+0x11a8>
    c090:	.word	0x0000c0f8
    c094:	.word	0x0000c0ec
    c098:	.word	0x0000c0e0
    c09c:	.word	0x0000c0d4
    c0a0:	.word	0x0000c0c8
    c0a4:	.word	0x0000c0bc
    c0a8:	.word	0x0000c0b0
    c0ac:	.word	0x0000bc28
    c0b0:	mov	r2, #0
    c0b4:	mov	r3, #0
    c0b8:	b	bc30 <MyGame_Example_Any_parse_json_union+0xdf0>
    c0bc:	mov	r2, #0
    c0c0:	mov	r3, #0
    c0c4:	b	bc5c <MyGame_Example_Any_parse_json_union+0xe1c>
    c0c8:	mov	r2, #0
    c0cc:	mov	r3, #0
    c0d0:	b	bc88 <MyGame_Example_Any_parse_json_union+0xe48>
    c0d4:	mov	r2, #0
    c0d8:	mov	r3, #0
    c0dc:	b	bcb4 <MyGame_Example_Any_parse_json_union+0xe74>
    c0e0:	mov	r2, #0
    c0e4:	mov	r3, #0
    c0e8:	b	bcdc <MyGame_Example_Any_parse_json_union+0xe9c>
    c0ec:	mov	r2, #0
    c0f0:	mov	r3, #0
    c0f4:	b	bd08 <MyGame_Example_Any_parse_json_union+0xec8>
    c0f8:	mov	r2, #0
    c0fc:	mov	r3, #0
    c100:	b	bd30 <MyGame_Example_Any_parse_json_union+0xef0>
    c104:	add	r0, r9, #1
    c108:	sub	r3, fp, r0
    c10c:	cmp	r3, #1
    c110:	ble	c124 <MyGame_Example_Any_parse_json_union+0x12e4>
    c114:	ldrb	r3, [r9, #1]
    c118:	cmp	r3, #32
    c11c:	bhi	bfac <MyGame_Example_Any_parse_json_union+0x116c>
    c120:	beq	cd70 <MyGame_Example_Any_parse_json_union+0x1f30>
    c124:	mov	r1, r0
    c128:	mov	r2, fp
    c12c:	mov	r0, sl
    c130:	bl	0 <flatcc_json_parser_space_ext>
    c134:	ldr	r3, [sp, #648]	; 0x288
    c138:	b	baa0 <MyGame_Example_Any_parse_json_union+0xc60>
    c13c:	ldrb	r3, [r9, #1]
    c140:	cmp	r3, #32
    c144:	addhi	r9, r9, #1
    c148:	bls	bf50 <MyGame_Example_Any_parse_json_union+0x1110>
    c14c:	cmp	fp, r9
    c150:	bne	bf6c <MyGame_Example_Any_parse_json_union+0x112c>
    c154:	mov	r3, #0
    c158:	mov	r7, sl
    c15c:	str	r3, [sp, #648]	; 0x288
    c160:	mov	sl, fp
    c164:	b	bfb4 <MyGame_Example_Any_parse_json_union+0x1174>
    c168:	add	r0, r9, #1
    c16c:	sub	r3, fp, r0
    c170:	cmp	r3, #1
    c174:	ble	c188 <MyGame_Example_Any_parse_json_union+0x1348>
    c178:	ldrb	r3, [r9, #1]
    c17c:	cmp	r3, #32
    c180:	bhi	c198 <MyGame_Example_Any_parse_json_union+0x1358>
    c184:	beq	d404 <MyGame_Example_Any_parse_json_union+0x25c4>
    c188:	mov	r1, r0
    c18c:	mov	r2, fp
    c190:	mov	r0, sl
    c194:	bl	0 <flatcc_json_parser_space_ext>
    c198:	cmp	fp, r0
    c19c:	beq	e57c <MyGame_Example_Any_parse_json_union+0x373c>
    c1a0:	ldrb	r3, [r0]
    c1a4:	cmp	r3, #125	; 0x7d
    c1a8:	beq	d69c <MyGame_Example_Any_parse_json_union+0x285c>
    c1ac:	mov	r3, #1
    c1b0:	str	r3, [sp, #648]	; 0x288
    c1b4:	b	baa8 <MyGame_Example_Any_parse_json_union+0xc68>
    c1b8:	sub	r3, r4, #1
    c1bc:	cmp	r3, #7
    c1c0:	ldrls	pc, [pc, r3, lsl #2]
    c1c4:	b	bf20 <MyGame_Example_Any_parse_json_union+0x10e0>
    c1c8:	.word	0x0000c230
    c1cc:	.word	0x0000c224
    c1d0:	.word	0x0000c218
    c1d4:	.word	0x0000c20c
    c1d8:	.word	0x0000c200
    c1dc:	.word	0x0000c1f4
    c1e0:	.word	0x0000c1e8
    c1e4:	.word	0x0000bd7c
    c1e8:	mov	r2, #0
    c1ec:	mov	r3, #0
    c1f0:	b	bd84 <MyGame_Example_Any_parse_json_union+0xf44>
    c1f4:	mov	r2, #0
    c1f8:	mov	r3, #0
    c1fc:	b	bdb0 <MyGame_Example_Any_parse_json_union+0xf70>
    c200:	mov	r2, #0
    c204:	mov	r3, #0
    c208:	b	bddc <MyGame_Example_Any_parse_json_union+0xf9c>
    c20c:	mov	r2, #0
    c210:	mov	r3, #0
    c214:	b	be08 <MyGame_Example_Any_parse_json_union+0xfc8>
    c218:	mov	r2, #0
    c21c:	mov	r3, #0
    c220:	b	be30 <MyGame_Example_Any_parse_json_union+0xff0>
    c224:	mov	r2, #0
    c228:	mov	r3, #0
    c22c:	b	be5c <MyGame_Example_Any_parse_json_union+0x101c>
    c230:	mov	r2, #0
    c234:	mov	r3, #0
    c238:	b	be88 <MyGame_Example_Any_parse_json_union+0x1048>
    c23c:	nop			; (mov r0, r0)
    c240:	.word	0x67320000
    c244:	.word	0x7273696e
    c248:	.word	0x67000000
    c24c:	.word	0x7273696e
    c250:	.word	0x67330000
    c254:	.word	0x7273696e
    c258:	.word	0xffff0000
    c25c:	.word	0x00000258
    c260:	cmp	r4, #6
    c264:	ble	bf20 <MyGame_Example_Any_parse_json_union+0x10e0>
    c268:	mov	r3, #6
    c26c:	mov	r2, fp
    c270:	mov	r1, r5
    c274:	mov	r0, sl
    c278:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    c27c:	cmp	r5, r0
    c280:	mov	r9, r0
    c284:	beq	bf20 <MyGame_Example_Any_parse_json_union+0x10e0>
    c288:	ldr	r3, [sp, #392]	; 0x188
    c28c:	mov	r1, #2
    c290:	ldr	r0, [sl]
    c294:	str	r3, [sp, #652]	; 0x28c
    c298:	bl	0 <flatcc_builder_start_table>
    c29c:	cmp	r0, #0
    c2a0:	bne	c658 <MyGame_Example_Any_parse_json_union+0x1818>
    c2a4:	mov	r1, r9
    c2a8:	add	r3, sp, #656	; 0x290
    c2ac:	mov	r2, fp
    c2b0:	mov	r0, sl
    c2b4:	bl	884 <flatcc_json_parser_object_start>
    c2b8:	mov	r5, #0
    c2bc:	ldr	r8, [pc, #-104]	; c25c <MyGame_Example_Any_parse_json_union+0x141c>
    c2c0:	ldr	r3, [sp, #656]	; 0x290
    c2c4:	mov	r6, r5
    c2c8:	mov	r9, sl
    c2cc:	mov	r7, fp
    c2d0:	cmp	r3, #0
    c2d4:	beq	c640 <MyGame_Example_Any_parse_json_union+0x1800>
    c2d8:	mov	r1, r0
    c2dc:	cmp	r7, r1
    c2e0:	beq	c69c <MyGame_Example_Any_parse_json_union+0x185c>
    c2e4:	ldrb	r3, [r1]
    c2e8:	cmp	r3, #34	; 0x22
    c2ec:	moveq	r3, #0
    c2f0:	addeq	r1, r1, #1
    c2f4:	streq	r3, [r9, #12]
    c2f8:	beq	c30c <MyGame_Example_Any_parse_json_union+0x14cc>
    c2fc:	cmp	r3, #46	; 0x2e
    c300:	movne	r3, #1
    c304:	strne	r3, [r9, #12]
    c308:	beq	c980 <MyGame_Example_Any_parse_json_union+0x1b40>
    c30c:	sub	r3, r7, r1
    c310:	cmp	r3, #8
    c314:	bls	c6b0 <MyGame_Example_Any_parse_json_union+0x1870>
    c318:	ldrb	sl, [r1, #7]
    c31c:	mov	fp, #0
    c320:	ldrb	r2, [r1, #6]
    c324:	lsl	r3, r2, #8
    c328:	str	r3, [sp, #344]	; 0x158
    c32c:	add	r3, sp, #344	; 0x158
    c330:	lsr	r0, r2, #24
    c334:	str	r0, [sp, #348]	; 0x15c
    c338:	ldrd	r2, [r3]
    c33c:	orr	r2, r2, sl
    c340:	orr	r3, r3, fp
    c344:	ldrb	sl, [r1, #5]
    c348:	lsr	r0, sl, #16
    c34c:	str	r0, [sp, #220]	; 0xdc
    c350:	lsl	r0, sl, #16
    c354:	str	r0, [sp, #216]	; 0xd8
    c358:	ldrd	sl, [sp, #216]	; 0xd8
    c35c:	orr	sl, sl, r2
    c360:	orr	fp, fp, r3
    c364:	mov	r2, sl
    c368:	mov	r3, fp
    c36c:	ldrb	sl, [r1, #4]
    c370:	lsr	r0, sl, #8
    c374:	str	r0, [sp, #148]	; 0x94
    c378:	lsl	r0, sl, #24
    c37c:	str	r0, [sp, #144]	; 0x90
    c380:	ldrd	sl, [sp, #144]	; 0x90
    c384:	orr	sl, sl, r2
    c388:	orr	fp, fp, r3
    c38c:	mov	r2, sl
    c390:	mov	r3, fp
    c394:	ldrb	r0, [r1, #3]
    c398:	str	r0, [sp, #164]	; 0xa4
    c39c:	mov	r0, #0
    c3a0:	str	r0, [sp, #160]	; 0xa0
    c3a4:	ldrd	sl, [sp, #160]	; 0xa0
    c3a8:	orr	sl, sl, r2
    c3ac:	orr	fp, fp, r3
    c3b0:	mov	r2, sl
    c3b4:	mov	r3, fp
    c3b8:	ldrb	sl, [r1, #2]
    c3bc:	lsl	r0, sl, #8
    c3c0:	str	r0, [sp, #116]	; 0x74
    c3c4:	mov	r0, #0
    c3c8:	str	r0, [sp, #112]	; 0x70
    c3cc:	ldrd	sl, [sp, #112]	; 0x70
    c3d0:	orr	sl, sl, r2
    c3d4:	orr	fp, fp, r3
    c3d8:	mov	r2, sl
    c3dc:	mov	r3, fp
    c3e0:	ldrb	sl, [r1, #1]
    c3e4:	lsl	r0, sl, #16
    c3e8:	str	r0, [sp, #92]	; 0x5c
    c3ec:	mov	r0, #0
    c3f0:	str	r0, [sp, #88]	; 0x58
    c3f4:	ldrd	sl, [sp, #88]	; 0x58
    c3f8:	orr	sl, sl, r2
    c3fc:	orr	fp, fp, r3
    c400:	mov	r2, sl
    c404:	mov	r3, fp
    c408:	ldrb	sl, [r1]
    c40c:	lsl	r0, sl, #24
    c410:	str	r0, [sp, #60]	; 0x3c
    c414:	mov	r0, #0
    c418:	str	r0, [sp, #56]	; 0x38
    c41c:	ldrd	sl, [sp, #56]	; 0x38
    c420:	orr	sl, sl, r2
    c424:	orr	fp, fp, r3
    c428:	mov	r2, sl
    c42c:	mov	r3, fp
    c430:	add	fp, pc, #952	; 0x3b8
    c434:	ldrd	sl, [fp]
    c438:	cmp	r3, fp
    c43c:	cmpeq	r2, sl
    c440:	bne	c69c <MyGame_Example_Any_parse_json_union+0x185c>
    c444:	add	r4, r1, #8
    c448:	sub	r0, r7, r4
    c44c:	cmp	r0, #8
    c450:	bls	c734 <MyGame_Example_Any_parse_json_union+0x18f4>
    c454:	ldrb	sl, [r1, #15]
    c458:	mov	fp, #0
    c45c:	ldrb	r2, [r1, #14]
    c460:	lsl	r3, r2, #8
    c464:	str	r3, [sp, #504]	; 0x1f8
    c468:	add	r3, sp, #504	; 0x1f8
    c46c:	lsr	ip, r2, #24
    c470:	str	ip, [sp, #508]	; 0x1fc
    c474:	ldrd	r2, [r3]
    c478:	orr	r2, r2, sl
    c47c:	orr	r3, r3, fp
    c480:	mov	sl, r2
    c484:	mov	fp, r3
    c488:	ldrb	r2, [r1, #13]
    c48c:	lsl	r3, r2, #16
    c490:	str	r3, [sp, #424]	; 0x1a8
    c494:	add	r3, sp, #424	; 0x1a8
    c498:	lsr	ip, r2, #16
    c49c:	str	ip, [sp, #428]	; 0x1ac
    c4a0:	ldrd	r2, [r3]
    c4a4:	orr	r2, r2, sl
    c4a8:	orr	r3, r3, fp
    c4ac:	mov	sl, r2
    c4b0:	mov	fp, r3
    c4b4:	ldrb	r2, [r1, #12]
    c4b8:	lsl	r3, r2, #24
    c4bc:	str	r3, [sp, #352]	; 0x160
    c4c0:	add	r3, sp, #352	; 0x160
    c4c4:	lsr	ip, r2, #8
    c4c8:	str	ip, [sp, #356]	; 0x164
    c4cc:	ldrd	r2, [r3]
    c4d0:	orr	r2, r2, sl
    c4d4:	orr	r3, r3, fp
    c4d8:	ldrb	ip, [r1, #11]
    c4dc:	str	ip, [sp, #380]	; 0x17c
    c4e0:	mov	ip, #0
    c4e4:	str	ip, [sp, #376]	; 0x178
    c4e8:	add	ip, sp, #376	; 0x178
    c4ec:	ldrd	sl, [ip]
    c4f0:	orr	sl, sl, r2
    c4f4:	orr	fp, fp, r3
    c4f8:	mov	r2, sl
    c4fc:	mov	r3, fp
    c500:	ldrb	sl, [r1, #10]
    c504:	lsl	ip, sl, #8
    c508:	str	ip, [sp, #308]	; 0x134
    c50c:	mov	ip, #0
    c510:	str	ip, [sp, #304]	; 0x130
    c514:	add	ip, sp, #304	; 0x130
    c518:	ldrd	sl, [ip]
    c51c:	orr	sl, sl, r2
    c520:	orr	fp, fp, r3
    c524:	mov	r2, sl
    c528:	mov	r3, fp
    c52c:	ldrb	sl, [r1, #9]
    c530:	lsl	ip, sl, #16
    c534:	str	ip, [sp, #268]	; 0x10c
    c538:	mov	ip, #0
    c53c:	str	ip, [sp, #264]	; 0x108
    c540:	add	ip, sp, #264	; 0x108
    c544:	ldrd	sl, [ip]
    c548:	orr	sl, sl, r2
    c54c:	orr	fp, fp, r3
    c550:	mov	r2, sl
    c554:	mov	r3, fp
    c558:	ldrb	sl, [r1, #8]
    c55c:	lsl	r1, sl, #24
    c560:	str	r1, [sp, #180]	; 0xb4
    c564:	mov	r1, #0
    c568:	str	r1, [sp, #176]	; 0xb0
    c56c:	ldrd	sl, [sp, #176]	; 0xb0
    c570:	orr	sl, sl, r2
    c574:	orr	fp, fp, r3
    c578:	add	r3, pc, #632	; 0x278
    c57c:	ldrd	r2, [r3]
    c580:	strd	sl, [sp, #128]	; 0x80
    c584:	bic	sl, sl, #255	; 0xff
    c588:	cmp	fp, r3
    c58c:	cmpeq	sl, r2
    c590:	beq	c838 <MyGame_Example_Any_parse_json_union+0x19f8>
    c594:	add	r3, pc, #612	; 0x264
    c598:	ldrd	r2, [r3]
    c59c:	ldrd	sl, [sp, #128]	; 0x80
    c5a0:	cmp	fp, r3
    c5a4:	cmpeq	sl, r2
    c5a8:	bne	c5b4 <MyGame_Example_Any_parse_json_union+0x1774>
    c5ac:	cmp	r0, #8
    c5b0:	bgt	c9dc <MyGame_Example_Any_parse_json_union+0x1b9c>
    c5b4:	mov	r1, r4
    c5b8:	mov	r2, r7
    c5bc:	mov	r0, r9
    c5c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5c4:	mov	r4, r0
    c5c8:	sub	r3, r7, r4
    c5cc:	cmp	r3, #1
    c5d0:	ble	c5e4 <MyGame_Example_Any_parse_json_union+0x17a4>
    c5d4:	ldrb	r3, [r4]
    c5d8:	cmp	r3, #32
    c5dc:	bhi	c5f8 <MyGame_Example_Any_parse_json_union+0x17b8>
    c5e0:	beq	c808 <MyGame_Example_Any_parse_json_union+0x19c8>
    c5e4:	mov	r1, r4
    c5e8:	mov	r2, r7
    c5ec:	mov	r0, r9
    c5f0:	bl	0 <flatcc_json_parser_space_ext>
    c5f4:	mov	r4, r0
    c5f8:	cmp	r7, r4
    c5fc:	beq	c820 <MyGame_Example_Any_parse_json_union+0x19e0>
    c600:	ldrb	r3, [r4]
    c604:	cmp	r3, #44	; 0x2c
    c608:	beq	c918 <MyGame_Example_Any_parse_json_union+0x1ad8>
    c60c:	mov	r3, #0
    c610:	str	r3, [sp, #656]	; 0x290
    c614:	ldrb	r3, [r4]
    c618:	cmp	r3, #125	; 0x7d
    c61c:	beq	c7b8 <MyGame_Example_Any_parse_json_union+0x1978>
    c620:	mov	r3, #10
    c624:	mov	r1, r4
    c628:	mov	r2, r7
    c62c:	mov	r0, r9
    c630:	bl	0 <flatcc_json_parser_set_error>
    c634:	ldr	r3, [sp, #656]	; 0x290
    c638:	cmp	r3, #0
    c63c:	bne	c2d8 <MyGame_Example_Any_parse_json_union+0x1498>
    c640:	mov	sl, r9
    c644:	mov	fp, r7
    c648:	mov	r9, r0
    c64c:	ldr	r3, [sl, #24]
    c650:	cmp	r3, #0
    c654:	beq	e518 <MyGame_Example_Any_parse_json_union+0x36d8>
    c658:	mov	r1, r9
    c65c:	mov	r3, #33	; 0x21
    c660:	mov	r2, fp
    c664:	mov	r0, sl
    c668:	bl	0 <flatcc_json_parser_set_error>
    c66c:	ldr	r3, [sp, #652]	; 0x28c
    c670:	cmp	r3, #0
    c674:	mov	r9, r0
    c678:	beq	d3d8 <MyGame_Example_Any_parse_json_union+0x2598>
    c67c:	mov	r1, #1
    c680:	ldr	r0, [sl]
    c684:	bl	0 <flatcc_builder_table_add_offset>
    c688:	cmp	r0, #0
    c68c:	beq	d3d8 <MyGame_Example_Any_parse_json_union+0x2598>
    c690:	ldr	r3, [sp, #652]	; 0x28c
    c694:	str	r3, [r0]
    c698:	b	bf34 <MyGame_Example_Any_parse_json_union+0x10f4>
    c69c:	mov	r2, r7
    c6a0:	mov	r0, r9
    c6a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6a8:	mov	r4, r0
    c6ac:	b	c5c8 <MyGame_Example_Any_parse_json_union+0x1788>
    c6b0:	sub	r3, r3, #1
    c6b4:	cmp	r3, #7
    c6b8:	ldrls	pc, [pc, r3, lsl #2]
    c6bc:	b	c69c <MyGame_Example_Any_parse_json_union+0x185c>
    c6c0:	.word	0x0000c728
    c6c4:	.word	0x0000c71c
    c6c8:	.word	0x0000c710
    c6cc:	.word	0x0000c704
    c6d0:	.word	0x0000c6f8
    c6d4:	.word	0x0000c6ec
    c6d8:	.word	0x0000c6e0
    c6dc:	.word	0x0000c318
    c6e0:	mov	sl, r5
    c6e4:	mov	fp, r6
    c6e8:	b	c320 <MyGame_Example_Any_parse_json_union+0x14e0>
    c6ec:	mov	r2, r5
    c6f0:	mov	r3, r6
    c6f4:	b	c344 <MyGame_Example_Any_parse_json_union+0x1504>
    c6f8:	mov	r2, r5
    c6fc:	mov	r3, r6
    c700:	b	c36c <MyGame_Example_Any_parse_json_union+0x152c>
    c704:	mov	r2, r5
    c708:	mov	r3, r6
    c70c:	b	c394 <MyGame_Example_Any_parse_json_union+0x1554>
    c710:	mov	r2, r5
    c714:	mov	r3, r6
    c718:	b	c3b8 <MyGame_Example_Any_parse_json_union+0x1578>
    c71c:	mov	r2, r5
    c720:	mov	r3, r6
    c724:	b	c3e0 <MyGame_Example_Any_parse_json_union+0x15a0>
    c728:	mov	r2, r5
    c72c:	mov	r3, r6
    c730:	b	c408 <MyGame_Example_Any_parse_json_union+0x15c8>
    c734:	sub	r3, r0, #1
    c738:	cmp	r3, #7
    c73c:	ldrls	pc, [pc, r3, lsl #2]
    c740:	b	c5b4 <MyGame_Example_Any_parse_json_union+0x1774>
    c744:	.word	0x0000c7ac
    c748:	.word	0x0000c7a0
    c74c:	.word	0x0000c794
    c750:	.word	0x0000c788
    c754:	.word	0x0000c77c
    c758:	.word	0x0000c770
    c75c:	.word	0x0000c764
    c760:	.word	0x0000c454
    c764:	mov	sl, r5
    c768:	mov	fp, r6
    c76c:	b	c45c <MyGame_Example_Any_parse_json_union+0x161c>
    c770:	mov	sl, r5
    c774:	mov	fp, r6
    c778:	b	c488 <MyGame_Example_Any_parse_json_union+0x1648>
    c77c:	mov	sl, r5
    c780:	mov	fp, r6
    c784:	b	c4b4 <MyGame_Example_Any_parse_json_union+0x1674>
    c788:	mov	r2, r5
    c78c:	mov	r3, r6
    c790:	b	c4d8 <MyGame_Example_Any_parse_json_union+0x1698>
    c794:	mov	r2, r5
    c798:	mov	r3, r6
    c79c:	b	c500 <MyGame_Example_Any_parse_json_union+0x16c0>
    c7a0:	mov	r2, r5
    c7a4:	mov	r3, r6
    c7a8:	b	c52c <MyGame_Example_Any_parse_json_union+0x16ec>
    c7ac:	mov	r2, r5
    c7b0:	mov	r3, r6
    c7b4:	b	c558 <MyGame_Example_Any_parse_json_union+0x1718>
    c7b8:	add	r0, r4, #1
    c7bc:	sub	r3, r7, r0
    c7c0:	cmp	r3, #1
    c7c4:	ble	c7d8 <MyGame_Example_Any_parse_json_union+0x1998>
    c7c8:	ldrb	r3, [r4, #1]
    c7cc:	cmp	r3, #32
    c7d0:	bhi	c640 <MyGame_Example_Any_parse_json_union+0x1800>
    c7d4:	beq	cd88 <MyGame_Example_Any_parse_json_union+0x1f48>
    c7d8:	mov	r1, r0
    c7dc:	mov	r2, r7
    c7e0:	mov	r0, r9
    c7e4:	bl	0 <flatcc_json_parser_space_ext>
    c7e8:	ldr	r3, [sp, #656]	; 0x290
    c7ec:	b	c2d0 <MyGame_Example_Any_parse_json_union+0x1490>
    c7f0:	.word	0x5f626262
    c7f4:	.word	0x61616161
    c7f8:	.word	0x65707300
    c7fc:	.word	0x625f7374
    c800:	.word	0x6172745f
    c804:	.word	0x625f7374
    c808:	ldrb	r3, [r4, #1]
    c80c:	cmp	r3, #32
    c810:	addhi	r4, r4, #1
    c814:	bls	c5e4 <MyGame_Example_Any_parse_json_union+0x17a4>
    c818:	cmp	r7, r4
    c81c:	bne	c600 <MyGame_Example_Any_parse_json_union+0x17c0>
    c820:	mov	r3, #0
    c824:	mov	sl, r9
    c828:	mov	fp, r7
    c82c:	str	r3, [sp, #656]	; 0x290
    c830:	mov	r9, r7
    c834:	b	c64c <MyGame_Example_Any_parse_json_union+0x180c>
    c838:	cmp	r0, #7
    c83c:	ble	c5b4 <MyGame_Example_Any_parse_json_union+0x1774>
    c840:	mov	r3, #7
    c844:	mov	r2, r7
    c848:	mov	r1, r4
    c84c:	mov	r0, r9
    c850:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    c854:	cmp	r4, r0
    c858:	mov	sl, r0
    c85c:	beq	c5b4 <MyGame_Example_Any_parse_json_union+0x1774>
    c860:	ldr	r3, [sp, #176]	; 0xb0
    c864:	cmp	r7, r0
    c868:	str	r5, [sp, #664]	; 0x298
    c86c:	str	r6, [sp, #668]	; 0x29c
    c870:	str	r5, [sp, #672]	; 0x2a0
    c874:	str	r6, [sp, #676]	; 0x2a4
    c878:	str	r3, [sp, #660]	; 0x294
    c87c:	beq	d988 <MyGame_Example_Any_parse_json_union+0x2b48>
    c880:	add	r3, sp, #672	; 0x2a0
    c884:	str	r3, [sp]
    c888:	mov	r1, r0
    c88c:	add	r3, sp, #660	; 0x294
    c890:	mov	r2, r7
    c894:	mov	r0, r9
    c898:	bl	0 <flatcc_json_parser_integer>
    c89c:	cmp	sl, r0
    c8a0:	mov	r4, r0
    c8a4:	beq	d988 <MyGame_Example_Any_parse_json_union+0x2b48>
    c8a8:	ldr	r1, [sp, #660]	; 0x294
    c8ac:	add	r3, sp, #672	; 0x2a0
    c8b0:	cmp	r1, #0
    c8b4:	ldrd	r2, [r3]
    c8b8:	beq	cd58 <MyGame_Example_Any_parse_json_union+0x1f18>
    c8bc:	cmp	r3, #-2147483648	; 0x80000000
    c8c0:	cmpeq	r2, #0
    c8c4:	bhi	d748 <MyGame_Example_Any_parse_json_union+0x2908>
    c8c8:	rsbs	r2, r2, #0
    c8cc:	rsc	r3, r3, #0
    c8d0:	add	r1, sp, #664	; 0x298
    c8d4:	strd	r2, [r1]
    c8d8:	orrs	r3, r2, r3
    c8dc:	bne	c8ec <MyGame_Example_Any_parse_json_union+0x1aac>
    c8e0:	ldr	r3, [r9, #8]
    c8e4:	tst	r3, #2
    c8e8:	beq	c5c8 <MyGame_Example_Any_parse_json_union+0x1788>
    c8ec:	mov	r3, #8
    c8f0:	mov	r2, r3
    c8f4:	mov	r1, #0
    c8f8:	ldr	r0, [r9]
    c8fc:	bl	0 <flatcc_builder_table_add>
    c900:	cmp	r0, #0
    c904:	beq	d7bc <MyGame_Example_Any_parse_json_union+0x297c>
    c908:	add	r3, sp, #664	; 0x298
    c90c:	ldrd	r2, [r3]
    c910:	strd	r2, [r0]
    c914:	b	c5c8 <MyGame_Example_Any_parse_json_union+0x1788>
    c918:	add	r1, r4, #1
    c91c:	sub	r3, r7, r1
    c920:	cmp	r3, #1
    c924:	ble	c938 <MyGame_Example_Any_parse_json_union+0x1af8>
    c928:	ldrb	r3, [r4, #1]
    c92c:	cmp	r3, #32
    c930:	bhi	c948 <MyGame_Example_Any_parse_json_union+0x1b08>
    c934:	beq	d440 <MyGame_Example_Any_parse_json_union+0x2600>
    c938:	mov	r2, r7
    c93c:	mov	r0, r9
    c940:	bl	0 <flatcc_json_parser_space_ext>
    c944:	mov	r1, r0
    c948:	cmp	r7, r1
    c94c:	beq	e5d0 <MyGame_Example_Any_parse_json_union+0x3790>
    c950:	ldrb	r3, [r1]
    c954:	cmp	r3, #125	; 0x7d
    c958:	beq	d708 <MyGame_Example_Any_parse_json_union+0x28c8>
    c95c:	mov	r3, #1
    c960:	str	r3, [sp, #656]	; 0x290
    c964:	b	c2dc <MyGame_Example_Any_parse_json_union+0x149c>
    c968:	mov	r1, r0
    c96c:	mov	r3, #5
    c970:	mov	r2, fp
    c974:	mov	r0, sl
    c978:	bl	0 <flatcc_json_parser_set_error>
    c97c:	b	bad8 <MyGame_Example_Any_parse_json_union+0xc98>
    c980:	mov	r3, #5
    c984:	mov	r2, r7
    c988:	mov	r0, r9
    c98c:	bl	0 <flatcc_json_parser_set_error>
    c990:	mov	r1, r0
    c994:	b	c30c <MyGame_Example_Any_parse_json_union+0x14cc>
    c998:	ldrb	r3, [sl, #1]
    c99c:	cmp	r3, #32
    c9a0:	addhi	sl, sl, #1
    c9a4:	bls	b0f8 <MyGame_Example_Any_parse_json_union+0x2b8>
    c9a8:	b	b10c <MyGame_Example_Any_parse_json_union+0x2cc>
    c9ac:	sub	r3, ip, #1
    c9b0:	cmp	r3, #7
    c9b4:	ldrls	pc, [pc, r3, lsl #2]
    c9b8:	b	b954 <MyGame_Example_Any_parse_json_union+0xb14>
    c9bc:	.word	0x0000d628
    c9c0:	.word	0x0000d620
    c9c4:	.word	0x0000d638
    c9c8:	.word	0x0000d630
    c9cc:	.word	0x0000d640
    c9d0:	.word	0x0000d618
    c9d4:	.word	0x0000b83c
    c9d8:	.word	0x0000b83c
    c9dc:	mov	r3, #8
    c9e0:	mov	r2, r7
    c9e4:	mov	r1, r4
    c9e8:	mov	r0, r9
    c9ec:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    c9f0:	cmp	r4, r0
    c9f4:	mov	sl, r0
    c9f8:	beq	c5b4 <MyGame_Example_Any_parse_json_union+0x1774>
    c9fc:	ldrd	r2, [sp, #176]	; 0xb0
    ca00:	cmp	r7, r0
    ca04:	str	r5, [sp, #672]	; 0x2a0
    ca08:	str	r2, [sp, #660]	; 0x294
    ca0c:	str	r6, [sp, #676]	; 0x2a4
    ca10:	str	r2, [sp, #664]	; 0x298
    ca14:	beq	d790 <MyGame_Example_Any_parse_json_union+0x2950>
    ca18:	add	r3, sp, #672	; 0x2a0
    ca1c:	str	r3, [sp]
    ca20:	mov	r1, r0
    ca24:	add	r3, sp, #664	; 0x298
    ca28:	mov	r2, r7
    ca2c:	mov	r0, r9
    ca30:	bl	0 <flatcc_json_parser_integer>
    ca34:	cmp	sl, r0
    ca38:	mov	r4, r0
    ca3c:	beq	d790 <MyGame_Example_Any_parse_json_union+0x2950>
    ca40:	ldr	r3, [sp, #664]	; 0x298
    ca44:	cmp	r3, #0
    ca48:	bne	d418 <MyGame_Example_Any_parse_json_union+0x25d8>
    ca4c:	add	r3, sp, #672	; 0x2a0
    ca50:	mov	r1, #0
    ca54:	ldrd	r2, [r3]
    ca58:	mvn	r0, #0
    ca5c:	cmp	r3, r1
    ca60:	cmpeq	r2, r0
    ca64:	strls	r2, [sp, #660]	; 0x294
    ca68:	bhi	d54c <MyGame_Example_Any_parse_json_union+0x270c>
    ca6c:	cmp	r2, #0
    ca70:	bne	ca80 <MyGame_Example_Any_parse_json_union+0x1c40>
    ca74:	ldr	r3, [r9, #8]
    ca78:	tst	r3, #2
    ca7c:	beq	c5c8 <MyGame_Example_Any_parse_json_union+0x1788>
    ca80:	mov	r3, #4
    ca84:	mov	r2, r3
    ca88:	mov	r1, #1
    ca8c:	ldr	r0, [r9]
    ca90:	bl	0 <flatcc_builder_table_add>
    ca94:	cmp	r0, #0
    ca98:	beq	d7bc <MyGame_Example_Any_parse_json_union+0x297c>
    ca9c:	ldr	r3, [sp, #660]	; 0x294
    caa0:	str	r3, [r0]
    caa4:	b	c5c8 <MyGame_Example_Any_parse_json_union+0x1788>
    caa8:	add	r4, sl, #1
    caac:	sub	r3, fp, r4
    cab0:	cmp	r3, #1
    cab4:	ble	cac8 <MyGame_Example_Any_parse_json_union+0x1c88>
    cab8:	ldrb	r3, [sl, #1]
    cabc:	cmp	r3, #32
    cac0:	bhi	cadc <MyGame_Example_Any_parse_json_union+0x1c9c>
    cac4:	beq	d9d4 <MyGame_Example_Any_parse_json_union+0x2b94>
    cac8:	mov	r1, r4
    cacc:	mov	r2, fp
    cad0:	mov	r0, r7
    cad4:	bl	0 <flatcc_json_parser_space_ext>
    cad8:	mov	r4, r0
    cadc:	cmp	fp, r4
    cae0:	beq	e71c <MyGame_Example_Any_parse_json_union+0x38dc>
    cae4:	ldrb	r3, [r4]
    cae8:	cmp	r3, #125	; 0x7d
    caec:	beq	e680 <MyGame_Example_Any_parse_json_union+0x3840>
    caf0:	mov	r3, #1
    caf4:	str	r3, [sp, #640]	; 0x280
    caf8:	b	aee4 <MyGame_Example_Any_parse_json_union+0xa4>
    cafc:	mov	r5, fp
    cb00:	mov	r4, r5
    cb04:	mov	fp, r7
    cb08:	mov	r3, #0
    cb0c:	str	r3, [sp, #640]	; 0x280
    cb10:	ldr	r3, [fp, #24]
    cb14:	cmp	r3, #0
    cb18:	bne	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    cb1c:	mov	r1, r4
    cb20:	ldr	r3, [sp, #644]	; 0x284
    cb24:	mov	r2, r5
    cb28:	mov	r0, fp
    cb2c:	bl	0 <flatcc_json_parser_finalize_unions>
    cb30:	mov	r4, r0
    cb34:	ldr	r0, [fp]
    cb38:	bl	0 <flatcc_builder_end_table>
    cb3c:	ldr	r3, [sp, #720]	; 0x2d0
    cb40:	cmp	r0, #0
    cb44:	str	r0, [r3]
    cb48:	beq	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    cb4c:	mov	r0, r4
    cb50:	b	b1b4 <MyGame_Example_Any_parse_json_union+0x374>
    cb54:	mov	r3, #2
    cb58:	mov	r2, r5
    cb5c:	mov	r1, r4
    cb60:	mov	r0, fp
    cb64:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    cb68:	cmp	r0, r4
    cb6c:	mov	r6, r0
    cb70:	beq	b450 <MyGame_Example_Any_parse_json_union+0x610>
    cb74:	mov	r0, #0
    cb78:	mov	r1, #0
    cb7c:	add	r2, sp, #672	; 0x2a0
    cb80:	mov	r3, #0
    cb84:	cmp	r5, r6
    cb88:	strd	r0, [r2]
    cb8c:	strb	r3, [sp, #656]	; 0x290
    cb90:	str	r3, [sp, #664]	; 0x298
    cb94:	beq	d928 <MyGame_Example_Any_parse_json_union+0x2ae8>
    cb98:	str	r2, [sp]
    cb9c:	add	r3, sp, #664	; 0x298
    cba0:	mov	r2, r5
    cba4:	mov	r1, r6
    cba8:	mov	r0, fp
    cbac:	bl	0 <flatcc_json_parser_integer>
    cbb0:	cmp	r6, r0
    cbb4:	mov	r7, r0
    cbb8:	beq	d928 <MyGame_Example_Any_parse_json_union+0x2ae8>
    cbbc:	ldr	r3, [sp, #664]	; 0x298
    cbc0:	cmp	r3, #0
    cbc4:	bne	d524 <MyGame_Example_Any_parse_json_union+0x26e4>
    cbc8:	add	r3, sp, #672	; 0x2a0
    cbcc:	ldrd	r2, [r3]
    cbd0:	cmp	r3, #0
    cbd4:	cmpeq	r2, #255	; 0xff
    cbd8:	uxtbls	r2, r2
    cbdc:	strbls	r2, [sp, #656]	; 0x290
    cbe0:	bhi	d5fc <MyGame_Example_Any_parse_json_union+0x27bc>
    cbe4:	cmp	r2, #2
    cbe8:	bne	cbf8 <MyGame_Example_Any_parse_json_union+0x1db8>
    cbec:	ldr	r3, [fp, #8]
    cbf0:	tst	r3, #2
    cbf4:	beq	b464 <MyGame_Example_Any_parse_json_union+0x624>
    cbf8:	mov	r3, #1
    cbfc:	mov	r2, r3
    cc00:	mov	r1, #2
    cc04:	ldr	r0, [fp]
    cc08:	bl	0 <flatcc_builder_table_add>
    cc0c:	cmp	r0, #0
    cc10:	bne	b820 <MyGame_Example_Any_parse_json_union+0x9e0>
    cc14:	mov	r4, r7
    cc18:	b	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    cc1c:	mov	r1, r4
    cc20:	mov	r3, #5
    cc24:	mov	r2, r5
    cc28:	mov	r0, fp
    cc2c:	bl	0 <flatcc_json_parser_set_error>
    cc30:	mov	r4, r0
    cc34:	b	b280 <MyGame_Example_Any_parse_json_union+0x440>
    cc38:	ldr	r3, [r0, #8]
    cc3c:	mov	r2, r5
    cc40:	tst	r3, #1
    cc44:	bne	d3e8 <MyGame_Example_Any_parse_json_union+0x25a8>
    cc48:	mov	r3, #15
    cc4c:	bl	0 <flatcc_json_parser_set_error>
    cc50:	b	b1a0 <MyGame_Example_Any_parse_json_union+0x360>
    cc54:	cmp	r3, #0
    cc58:	cmpeq	r2, #127	; 0x7f
    cc5c:	sxtbls	r2, r2
    cc60:	strbls	r2, [sp, #656]	; 0x290
    cc64:	bls	b6b8 <MyGame_Example_Any_parse_json_union+0x878>
    cc68:	mov	r1, r0
    cc6c:	mov	r3, #7
    cc70:	mov	r2, r5
    cc74:	mov	r0, fp
    cc78:	bl	0 <flatcc_json_parser_set_error>
    cc7c:	mov	r7, r0
    cc80:	cmp	r9, r7
    cc84:	beq	d958 <MyGame_Example_Any_parse_json_union+0x2b18>
    cc88:	add	r3, sp, #656	; 0x290
    cc8c:	ldrsb	r2, [r3]
    cc90:	b	b6b8 <MyGame_Example_Any_parse_json_union+0x878>
    cc94:	mov	r3, #5
    cc98:	mov	r2, r5
    cc9c:	mov	r1, r4
    cca0:	mov	r0, fp
    cca4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    cca8:	cmp	r0, r4
    ccac:	mov	sl, r0
    ccb0:	beq	b408 <MyGame_Example_Any_parse_json_union+0x5c8>
    ccb4:	mov	r2, #0
    ccb8:	mov	r3, #0
    ccbc:	add	r1, sp, #672	; 0x2a0
    ccc0:	cmp	r5, r0
    ccc4:	strb	r9, [sp, #656]	; 0x290
    ccc8:	str	r9, [sp, #664]	; 0x298
    cccc:	strd	r2, [r1]
    ccd0:	beq	e54c <MyGame_Example_Any_parse_json_union+0x370c>
    ccd4:	str	r1, [sp]
    ccd8:	add	r3, sp, #664	; 0x298
    ccdc:	mov	r1, r0
    cce0:	mov	r2, r5
    cce4:	mov	r0, fp
    cce8:	bl	0 <flatcc_json_parser_integer>
    ccec:	cmp	sl, r0
    ccf0:	mov	r7, r0
    ccf4:	beq	e54c <MyGame_Example_Any_parse_json_union+0x370c>
    ccf8:	ldr	r1, [sp, #664]	; 0x298
    ccfc:	add	r3, sp, #672	; 0x2a0
    cd00:	cmp	r1, #0
    cd04:	ldrd	r2, [r3]
    cd08:	beq	cda4 <MyGame_Example_Any_parse_json_union+0x1f64>
    cd0c:	cmp	r3, #0
    cd10:	cmpeq	r2, #128	; 0x80
    cd14:	rsbls	r2, r2, #0
    cd18:	sxtbls	r2, r2
    cd1c:	strbls	r2, [sp, #656]	; 0x290
    cd20:	bhi	d9b8 <MyGame_Example_Any_parse_json_union+0x2b78>
    cd24:	cmp	r2, #2
    cd28:	bne	cd38 <MyGame_Example_Any_parse_json_union+0x1ef8>
    cd2c:	ldr	r3, [fp, #8]
    cd30:	tst	r3, #2
    cd34:	beq	b464 <MyGame_Example_Any_parse_json_union+0x624>
    cd38:	mov	r3, #1
    cd3c:	mov	r2, r3
    cd40:	mov	r1, #0
    cd44:	ldr	r0, [fp]
    cd48:	bl	0 <flatcc_builder_table_add>
    cd4c:	cmp	r0, #0
    cd50:	bne	b6e8 <MyGame_Example_Any_parse_json_union+0x8a8>
    cd54:	b	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    cd58:	cmp	r2, #0
    cd5c:	sbcs	r1, r3, #0
    cd60:	blt	e6f0 <MyGame_Example_Any_parse_json_union+0x38b0>
    cd64:	add	r1, sp, #664	; 0x298
    cd68:	strd	r2, [r1]
    cd6c:	b	c8d8 <MyGame_Example_Any_parse_json_union+0x1a98>
    cd70:	ldrb	r3, [r9, #2]
    cd74:	cmp	r3, #32
    cd78:	bls	c124 <MyGame_Example_Any_parse_json_union+0x12e4>
    cd7c:	mov	r7, sl
    cd80:	add	sl, r9, #2
    cd84:	b	bfb4 <MyGame_Example_Any_parse_json_union+0x1174>
    cd88:	ldrb	r3, [r4, #2]
    cd8c:	cmp	r3, #32
    cd90:	bls	c7d8 <MyGame_Example_Any_parse_json_union+0x1998>
    cd94:	mov	sl, r9
    cd98:	mov	fp, r7
    cd9c:	add	r9, r4, #2
    cda0:	b	c64c <MyGame_Example_Any_parse_json_union+0x180c>
    cda4:	cmp	r3, #0
    cda8:	cmpeq	r2, #127	; 0x7f
    cdac:	sxtbls	r2, r2
    cdb0:	strbls	r2, [sp, #656]	; 0x290
    cdb4:	bls	cd24 <MyGame_Example_Any_parse_json_union+0x1ee4>
    cdb8:	mov	r1, r0
    cdbc:	mov	r3, #7
    cdc0:	mov	r2, r5
    cdc4:	mov	r0, fp
    cdc8:	bl	0 <flatcc_json_parser_set_error>
    cdcc:	mov	r7, r0
    cdd0:	cmp	sl, r7
    cdd4:	beq	e54c <MyGame_Example_Any_parse_json_union+0x370c>
    cdd8:	add	r3, sp, #656	; 0x290
    cddc:	ldrsb	r2, [r3]
    cde0:	b	cd24 <MyGame_Example_Any_parse_json_union+0x1ee4>
    cde4:	mov	r1, r4
    cde8:	mov	r3, #5
    cdec:	mov	r2, fp
    cdf0:	mov	r0, r7
    cdf4:	bl	0 <flatcc_json_parser_set_error>
    cdf8:	mov	r4, r0
    cdfc:	b	af14 <MyGame_Example_Any_parse_json_union+0xd4>
    ce00:	mov	r3, #5
    ce04:	mov	r2, fp
    ce08:	mov	r1, r4
    ce0c:	mov	r0, r7
    ce10:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    ce14:	cmp	r0, r4
    ce18:	mov	sl, r0
    ce1c:	beq	b0c8 <MyGame_Example_Any_parse_json_union+0x288>
    ce20:	mov	r1, #10
    ce24:	ldr	r0, [r7]
    ce28:	bl	0 <flatcc_builder_start_table>
    ce2c:	cmp	r0, #0
    ce30:	bne	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    ce34:	add	r3, sp, #672	; 0x2a0
    ce38:	str	r3, [sp]
    ce3c:	mov	r2, fp
    ce40:	mov	r3, #5
    ce44:	mov	r1, sl
    ce48:	mov	r0, r7
    ce4c:	bl	0 <flatcc_json_parser_prepare_unions>
    ce50:	cmp	fp, r0
    ce54:	beq	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    ce58:	mov	r1, sl
    ce5c:	add	r3, sp, #664	; 0x298
    ce60:	mov	r2, fp
    ce64:	mov	r0, r7
    ce68:	bl	884 <flatcc_json_parser_object_start>
    ce6c:	ldr	r3, [sp, #664]	; 0x298
    ce70:	cmp	r3, #0
    ce74:	mov	sl, r0
    ce78:	beq	d220 <MyGame_Example_Any_parse_json_union+0x23e0>
    ce7c:	mov	r4, r0
    ce80:	mov	r8, r7
    ce84:	b	cf08 <MyGame_Example_Any_parse_json_union+0x20c8>
    ce88:	add	r3, pc, #992	; 0x3e0
    ce8c:	ldrd	r2, [r3]
    ce90:	cmp	r1, r3
    ce94:	cmpeq	r0, r2
    ce98:	beq	d0ec <MyGame_Example_Any_parse_json_union+0x22ac>
    ce9c:	add	r3, pc, #980	; 0x3d4
    cea0:	ldrd	r2, [r3]
    cea4:	cmp	r1, r3
    cea8:	cmpeq	r0, r2
    ceac:	beq	d18c <MyGame_Example_Any_parse_json_union+0x234c>
    ceb0:	add	r3, pc, #968	; 0x3c8
    ceb4:	ldrd	r2, [r3]
    ceb8:	and	r0, r0, #-16777216	; 0xff000000
    cebc:	cmp	r1, r3
    cec0:	cmpeq	r0, r2
    cec4:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    cec8:	sub	r3, fp, r4
    cecc:	cmp	r3, #5
    ced0:	bgt	d868 <MyGame_Example_Any_parse_json_union+0x2a28>
    ced4:	mov	r1, r4
    ced8:	mov	r2, fp
    cedc:	mov	r0, r8
    cee0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cee4:	mov	r1, r0
    cee8:	add	r3, sp, #664	; 0x298
    ceec:	mov	r2, fp
    cef0:	mov	r0, r8
    cef4:	bl	22c4 <flatcc_json_parser_object_end>
    cef8:	ldr	r3, [sp, #664]	; 0x298
    cefc:	cmp	r3, #0
    cf00:	mov	r4, r0
    cf04:	beq	d218 <MyGame_Example_Any_parse_json_union+0x23d8>
    cf08:	cmp	fp, r4
    cf0c:	beq	cf38 <MyGame_Example_Any_parse_json_union+0x20f8>
    cf10:	ldrb	r3, [r4]
    cf14:	cmp	r3, #34	; 0x22
    cf18:	moveq	r3, #0
    cf1c:	addeq	r4, r4, #1
    cf20:	streq	r3, [r8, #12]
    cf24:	beq	cf38 <MyGame_Example_Any_parse_json_union+0x20f8>
    cf28:	cmp	r3, #46	; 0x2e
    cf2c:	movne	r3, #1
    cf30:	strne	r3, [r8, #12]
    cf34:	beq	d4b0 <MyGame_Example_Any_parse_json_union+0x2670>
    cf38:	mov	r1, fp
    cf3c:	mov	r0, r4
    cf40:	bl	0 <flatcc_json_parser_symbol_part_ext>
    cf44:	add	r3, pc, #828	; 0x33c
    cf48:	ldrd	r2, [r3]
    cf4c:	cmp	r1, r3
    cf50:	cmpeq	r0, r2
    cf54:	bls	ce88 <MyGame_Example_Any_parse_json_union+0x2048>
    cf58:	add	r3, pc, #816	; 0x330
    cf5c:	ldrd	r2, [r3]
    cf60:	cmp	r1, r3
    cf64:	cmpeq	r0, r2
    cf68:	bhi	d020 <MyGame_Example_Any_parse_json_union+0x21e0>
    cf6c:	add	r3, pc, #804	; 0x324
    cf70:	ldrd	r2, [r3]
    cf74:	cmp	r1, r3
    cf78:	cmpeq	r0, r2
    cf7c:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    cf80:	add	r4, r4, #8
    cf84:	mov	r0, r4
    cf88:	mov	r1, fp
    cf8c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    cf90:	add	r3, pc, #776	; 0x308
    cf94:	ldrd	r2, [r3]
    cf98:	bic	r6, r0, #255	; 0xff
    cf9c:	cmp	r1, r3
    cfa0:	cmpeq	r6, r2
    cfa4:	beq	d8c8 <MyGame_Example_Any_parse_json_union+0x2a88>
    cfa8:	ldr	r3, [pc, #792]	; d2c8 <MyGame_Example_Any_parse_json_union+0x2488>
    cfac:	mov	r2, #0
    cfb0:	and	r1, r1, r3
    cfb4:	ldr	r3, [pc, #784]	; d2cc <MyGame_Example_Any_parse_json_union+0x248c>
    cfb8:	and	r0, r0, r2
    cfbc:	cmp	r1, r3
    cfc0:	mov	r2, #0
    cfc4:	cmpeq	r0, r2
    cfc8:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    cfcc:	sub	r3, fp, r4
    cfd0:	cmp	r3, #2
    cfd4:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    cfd8:	mov	r1, r4
    cfdc:	mov	r3, #2
    cfe0:	mov	r2, fp
    cfe4:	mov	r0, r8
    cfe8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    cfec:	cmp	r4, r0
    cff0:	mov	r1, r0
    cff4:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    cff8:	ldr	r2, [sp, #672]	; 0x2a0
    cffc:	ldr	ip, [pc, #716]	; d2d0 <MyGame_Example_Any_parse_json_union+0x2490>
    d000:	mov	r3, #9
    d004:	str	r3, [sp]
    d008:	stmib	sp, {r2, ip}
    d00c:	mov	r3, #4
    d010:	mov	r2, fp
    d014:	mov	r0, r8
    d018:	bl	0 <flatcc_json_parser_union_vector>
    d01c:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d020:	add	r3, pc, #640	; 0x280
    d024:	ldrd	r2, [r3]
    d028:	cmp	r1, r3
    d02c:	cmpeq	r0, r2
    d030:	beq	d454 <MyGame_Example_Any_parse_json_union+0x2614>
    d034:	add	r3, pc, #628	; 0x274
    d038:	ldrd	r2, [r3]
    d03c:	cmp	r1, r3
    d040:	cmpeq	r0, r2
    d044:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d048:	add	r4, r4, #8
    d04c:	mov	r0, r4
    d050:	mov	r1, fp
    d054:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d058:	ldr	r2, [pc, #616]	; d2c8 <MyGame_Example_Any_parse_json_union+0x2488>
    d05c:	mvn	r3, #0
    d060:	mov	r6, r0
    d064:	mov	r7, r1
    d068:	add	r1, pc, #584	; 0x248
    d06c:	ldrd	r0, [r1]
    d070:	and	r3, r3, r7
    d074:	and	r2, r2, r6
    d078:	cmp	r3, r1
    d07c:	cmpeq	r2, r0
    d080:	beq	e4c0 <MyGame_Example_Any_parse_json_union+0x3680>
    d084:	and	r7, r7, #-16777216	; 0xff000000
    d088:	mov	r6, #0
    d08c:	cmp	r7, #1795162112	; 0x6b000000
    d090:	cmpeq	r6, #0
    d094:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d098:	sub	r3, fp, r4
    d09c:	cmp	r3, #1
    d0a0:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d0a4:	mov	r1, r4
    d0a8:	mov	r3, #1
    d0ac:	mov	r2, fp
    d0b0:	mov	r0, r8
    d0b4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d0b8:	cmp	r4, r0
    d0bc:	mov	r1, r0
    d0c0:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d0c4:	ldr	r2, [sp, #672]	; 0x2a0
    d0c8:	ldr	ip, [pc, #512]	; d2d0 <MyGame_Example_Any_parse_json_union+0x2490>
    d0cc:	mov	r3, #5
    d0d0:	str	r3, [sp]
    d0d4:	stmib	sp, {r2, ip}
    d0d8:	mov	r3, #2
    d0dc:	mov	r2, fp
    d0e0:	mov	r0, r8
    d0e4:	bl	0 <flatcc_json_parser_union>
    d0e8:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d0ec:	add	r4, r4, #8
    d0f0:	mov	r0, r4
    d0f4:	mov	r1, fp
    d0f8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d0fc:	add	r3, pc, #444	; 0x1bc
    d100:	ldrd	r2, [r3]
    d104:	bic	r6, r0, #255	; 0xff
    d108:	cmp	r1, r3
    d10c:	cmpeq	r6, r2
    d110:	beq	d7cc <MyGame_Example_Any_parse_json_union+0x298c>
    d114:	ldr	r3, [pc, #428]	; d2c8 <MyGame_Example_Any_parse_json_union+0x2488>
    d118:	mov	r2, #0
    d11c:	and	r1, r1, r3
    d120:	ldr	r3, [pc, #428]	; d2d4 <MyGame_Example_Any_parse_json_union+0x2494>
    d124:	and	r0, r0, r2
    d128:	cmp	r1, r3
    d12c:	mov	r2, #0
    d130:	cmpeq	r0, r2
    d134:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d138:	sub	r3, fp, r4
    d13c:	cmp	r3, #2
    d140:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d144:	mov	r1, r4
    d148:	mov	r3, #2
    d14c:	mov	r2, fp
    d150:	mov	r0, r8
    d154:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d158:	cmp	r4, r0
    d15c:	mov	r1, r0
    d160:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d164:	ldr	r2, [sp, #672]	; 0x2a0
    d168:	ldr	ip, [pc, #352]	; d2d0 <MyGame_Example_Any_parse_json_union+0x2490>
    d16c:	mov	r3, #3
    d170:	str	r3, [sp]
    d174:	stmib	sp, {r2, ip}
    d178:	mov	r3, #1
    d17c:	mov	r2, fp
    d180:	mov	r0, r8
    d184:	bl	0 <flatcc_json_parser_union>
    d188:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d18c:	add	r4, r4, #8
    d190:	mov	r0, r4
    d194:	mov	r1, fp
    d198:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d19c:	ldr	r3, [pc, #292]	; d2c8 <MyGame_Example_Any_parse_json_union+0x2488>
    d1a0:	ldr	r7, [pc, #304]	; d2d8 <MyGame_Example_Any_parse_json_union+0x2498>
    d1a4:	mov	r2, #0
    d1a8:	mov	r6, #0
    d1ac:	and	r1, r1, r3
    d1b0:	and	r0, r0, r2
    d1b4:	cmp	r1, r7
    d1b8:	cmpeq	r0, r6
    d1bc:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d1c0:	sub	r3, fp, r4
    d1c4:	cmp	r3, #2
    d1c8:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d1cc:	mov	r1, r4
    d1d0:	mov	r3, #2
    d1d4:	mov	r2, fp
    d1d8:	mov	r0, r8
    d1dc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d1e0:	cmp	r4, r0
    d1e4:	mov	r1, r0
    d1e8:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d1ec:	ldr	r2, [sp, #672]	; 0x2a0
    d1f0:	ldr	lr, [pc, #216]	; d2d0 <MyGame_Example_Any_parse_json_union+0x2490>
    d1f4:	ldr	ip, [pc, #224]	; d2dc <MyGame_Example_Any_parse_json_union+0x249c>
    d1f8:	mov	r3, #7
    d1fc:	str	r3, [sp]
    d200:	stmib	sp, {r2, ip, lr}
    d204:	mov	r3, #3
    d208:	mov	r2, fp
    d20c:	mov	r0, r8
    d210:	bl	0 <flatcc_json_parser_union_type>
    d214:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d218:	mov	sl, r0
    d21c:	mov	r7, r8
    d220:	ldr	r3, [r7, #24]
    d224:	cmp	r3, #0
    d228:	bne	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    d22c:	mov	r1, sl
    d230:	ldr	r3, [sp, #672]	; 0x2a0
    d234:	mov	r2, fp
    d238:	mov	r0, r7
    d23c:	bl	0 <flatcc_json_parser_finalize_unions>
    d240:	mov	sl, r0
    d244:	ldr	r0, [r7]
    d248:	bl	0 <flatcc_builder_end_table>
    d24c:	subs	r4, r0, #0
    d250:	beq	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    d254:	mov	r1, #1
    d258:	ldr	r0, [r7]
    d25c:	bl	0 <flatcc_builder_table_add_offset>
    d260:	cmp	r0, #0
    d264:	beq	e70c <MyGame_Example_Any_parse_json_union+0x38cc>
    d268:	str	r4, [r0]
    d26c:	b	b0dc <MyGame_Example_Any_parse_json_union+0x29c>
    d270:	.word	0x676f6e69
    d274:	.word	0x616e7461
    d278:	.word	0x6f5f7479
    d27c:	.word	0x63616d65
    d280:	.word	0x6f000000
    d284:	.word	0x63616d65
    d288:	.word	0x61637464
    d28c:	.word	0x63686172
    d290:	.word	0x5f636860
    d294:	.word	0x6d61696e
    d298:	.word	0x61637465
    d29c:	.word	0x63686172
    d2a0:	.word	0x79706500
    d2a4:	.word	0x72735f74
    d2a8:	.word	0x5f636861
    d2ac:	.word	0x6d61696e
    d2b0:	.word	0x5f6b6963
    d2b4:	.word	0x73696465
    d2b8:	.word	0x70650000
    d2bc:	.word	0x6b5f7479
    d2c0:	.word	0x79706500
    d2c4:	.word	0x73745f74
    d2c8:	.word	0xffff0000
    d2cc:	.word	0x72730000
    d2d0:	.word	0x00000000
    d2d4:	.word	0x73740000
    d2d8:	.word	0x70650000
    d2dc:	.word	0x0000028c
    d2e0:	.word	0x00000000
    d2e4:	mov	r1, r4
    d2e8:	mov	r3, #7
    d2ec:	mov	r2, fp
    d2f0:	mov	r0, r7
    d2f4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d2f8:	cmp	r0, r4
    d2fc:	mov	r1, r0
    d300:	beq	b084 <MyGame_Example_Any_parse_json_union+0x244>
    d304:	ldr	lr, [pc, #-44]	; d2e0 <MyGame_Example_Any_parse_json_union+0x24a0>
    d308:	ldr	ip, [sp, #644]	; 0x284
    d30c:	mov	r2, #3
    d310:	mov	r3, r6
    d314:	stm	sp, {r2, ip, lr}
    d318:	mov	r0, r7
    d31c:	mov	r2, fp
    d320:	bl	0 <flatcc_json_parser_union_vector>
    d324:	mov	sl, r0
    d328:	b	b0dc <MyGame_Example_Any_parse_json_union+0x29c>
    d32c:	mov	r3, #6
    d330:	mov	r2, fp
    d334:	mov	r1, r5
    d338:	mov	r0, sl
    d33c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d340:	cmp	r5, r0
    d344:	mov	r9, r0
    d348:	beq	bf20 <MyGame_Example_Any_parse_json_union+0x10e0>
    d34c:	mov	r3, #0
    d350:	mov	r1, #2
    d354:	ldr	r0, [sl]
    d358:	str	r3, [sp, #652]	; 0x28c
    d35c:	bl	0 <flatcc_builder_start_table>
    d360:	cmp	r0, #0
    d364:	bne	d3a0 <MyGame_Example_Any_parse_json_union+0x2560>
    d368:	cmp	fp, r9
    d36c:	beq	d37c <MyGame_Example_Any_parse_json_union+0x253c>
    d370:	ldrb	r3, [r9]
    d374:	cmp	r3, #123	; 0x7b
    d378:	beq	da0c <MyGame_Example_Any_parse_json_union+0x2bcc>
    d37c:	mov	r1, r9
    d380:	mov	r3, #21
    d384:	mov	r2, fp
    d388:	mov	r0, sl
    d38c:	bl	0 <flatcc_json_parser_set_error>
    d390:	mov	r9, r0
    d394:	ldr	r3, [sl, #24]
    d398:	cmp	r3, #0
    d39c:	beq	d8b0 <MyGame_Example_Any_parse_json_union+0x2a70>
    d3a0:	mov	r1, r9
    d3a4:	mov	r3, #33	; 0x21
    d3a8:	mov	r2, fp
    d3ac:	mov	r0, sl
    d3b0:	bl	0 <flatcc_json_parser_set_error>
    d3b4:	ldr	r3, [sp, #652]	; 0x28c
    d3b8:	cmp	r3, #0
    d3bc:	mov	r9, r0
    d3c0:	beq	d3d8 <MyGame_Example_Any_parse_json_union+0x2598>
    d3c4:	mov	r1, #2
    d3c8:	ldr	r0, [sl]
    d3cc:	bl	0 <flatcc_builder_table_add_offset>
    d3d0:	cmp	r0, #0
    d3d4:	bne	c690 <MyGame_Example_Any_parse_json_union+0x1850>
    d3d8:	mov	r5, fp
    d3dc:	mov	fp, sl
    d3e0:	mov	sl, r9
    d3e4:	b	bfc8 <MyGame_Example_Any_parse_json_union+0x1188>
    d3e8:	bl	0 <flatcc_json_parser_generic_json>
    d3ec:	b	b1a0 <MyGame_Example_Any_parse_json_union+0x360>
    d3f0:	ldrb	r3, [r7, #2]
    d3f4:	cmp	r3, #32
    d3f8:	bls	b718 <MyGame_Example_Any_parse_json_union+0x8d8>
    d3fc:	add	r4, r7, #2
    d400:	b	b4e0 <MyGame_Example_Any_parse_json_union+0x6a0>
    d404:	ldrb	r3, [r9, #2]
    d408:	cmp	r3, #32
    d40c:	addhi	r0, r9, #2
    d410:	bls	c188 <MyGame_Example_Any_parse_json_union+0x1348>
    d414:	b	c198 <MyGame_Example_Any_parse_json_union+0x1358>
    d418:	mov	r1, r0
    d41c:	mov	r3, #8
    d420:	mov	r2, r7
    d424:	mov	r0, r9
    d428:	bl	0 <flatcc_json_parser_set_error>
    d42c:	mov	r4, r0
    d430:	cmp	sl, r4
    d434:	beq	d790 <MyGame_Example_Any_parse_json_union+0x2950>
    d438:	ldr	r2, [sp, #660]	; 0x294
    d43c:	b	ca6c <MyGame_Example_Any_parse_json_union+0x1c2c>
    d440:	ldrb	r3, [r4, #2]
    d444:	cmp	r3, #32
    d448:	addhi	r1, r4, #2
    d44c:	bls	c938 <MyGame_Example_Any_parse_json_union+0x1af8>
    d450:	b	c948 <MyGame_Example_Any_parse_json_union+0x1b08>
    d454:	add	r5, r4, #8
    d458:	mov	r0, r5
    d45c:	mov	r1, fp
    d460:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d464:	add	r3, pc, #956	; 0x3bc
    d468:	ldrd	r2, [r3]
    d46c:	cmp	r1, r3
    d470:	cmpeq	r0, r2
    d474:	beq	e5f4 <MyGame_Example_Any_parse_json_union+0x37b4>
    d478:	add	r3, pc, #944	; 0x3b0
    d47c:	ldrd	r2, [r3]
    d480:	ldr	r6, [pc, #944]	; d838 <MyGame_Example_Any_parse_json_union+0x29f8>
    d484:	mvn	r7, #0
    d488:	and	r1, r1, r7
    d48c:	and	r0, r0, r6
    d490:	cmp	r1, r3
    d494:	cmpeq	r0, r2
    d498:	beq	d648 <MyGame_Example_Any_parse_json_union+0x2808>
    d49c:	mov	r1, r5
    d4a0:	mov	r2, fp
    d4a4:	mov	r0, r8
    d4a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4ac:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d4b0:	mov	r1, r4
    d4b4:	mov	r3, #5
    d4b8:	mov	r2, fp
    d4bc:	mov	r0, r8
    d4c0:	bl	0 <flatcc_json_parser_set_error>
    d4c4:	mov	r4, r0
    d4c8:	b	cf38 <MyGame_Example_Any_parse_json_union+0x20f8>
    d4cc:	mov	r1, r5
    d4d0:	mov	r3, #4
    d4d4:	mov	r2, fp
    d4d8:	mov	r0, r7
    d4dc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d4e0:	cmp	r5, r0
    d4e4:	mov	r1, r0
    d4e8:	beq	b954 <MyGame_Example_Any_parse_json_union+0xb14>
    d4ec:	ldr	r2, [sp, #644]	; 0x284
    d4f0:	ldr	r3, [pc, #836]	; d83c <MyGame_Example_Any_parse_json_union+0x29fc>
    d4f4:	ldr	lr, [pc, #836]	; d840 <MyGame_Example_Any_parse_json_union+0x2a00>
    d4f8:	ldr	ip, [pc, #836]	; d844 <MyGame_Example_Any_parse_json_union+0x2a04>
    d4fc:	str	r3, [sp, #16]
    d500:	mov	r3, #3
    d504:	stmib	sp, {r2, ip, lr}
    d508:	mov	r0, r7
    d50c:	str	r3, [sp]
    d510:	mov	r2, fp
    d514:	ldr	r3, [sp, #528]	; 0x210
    d518:	bl	0 <flatcc_json_parser_union_type_vector>
    d51c:	mov	sl, r0
    d520:	b	b0dc <MyGame_Example_Any_parse_json_union+0x29c>
    d524:	mov	r1, r0
    d528:	mov	r3, #8
    d52c:	mov	r2, r5
    d530:	mov	r0, fp
    d534:	bl	0 <flatcc_json_parser_set_error>
    d538:	mov	r7, r0
    d53c:	cmp	r6, r7
    d540:	beq	d928 <MyGame_Example_Any_parse_json_union+0x2ae8>
    d544:	ldrb	r2, [sp, #656]	; 0x290
    d548:	b	cbe4 <MyGame_Example_Any_parse_json_union+0x1da4>
    d54c:	mov	r1, r4
    d550:	mov	r3, #7
    d554:	mov	r2, r7
    d558:	mov	r0, r9
    d55c:	bl	0 <flatcc_json_parser_set_error>
    d560:	mov	r4, r0
    d564:	b	d430 <MyGame_Example_Any_parse_json_union+0x25f0>
    d568:	mov	r1, r5
    d56c:	mov	r3, #5
    d570:	mov	r2, fp
    d574:	mov	r0, sl
    d578:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d57c:	cmp	r5, r0
    d580:	mov	r1, r0
    d584:	beq	bf04 <MyGame_Example_Any_parse_json_union+0x10c4>
    d588:	add	r3, sp, #652	; 0x28c
    d58c:	mov	r2, fp
    d590:	mov	r0, sl
    d594:	bl	5590 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    d598:	ldr	r3, [sp, #652]	; 0x28c
    d59c:	cmp	r3, #0
    d5a0:	mov	r9, r0
    d5a4:	beq	d3d8 <MyGame_Example_Any_parse_json_union+0x2598>
    d5a8:	mov	r1, r8
    d5ac:	ldr	r0, [sl]
    d5b0:	bl	0 <flatcc_builder_table_add_offset>
    d5b4:	cmp	r0, #0
    d5b8:	bne	c690 <MyGame_Example_Any_parse_json_union+0x1850>
    d5bc:	b	d3d8 <MyGame_Example_Any_parse_json_union+0x2598>
    d5c0:	ldrb	r3, [sl, #2]
    d5c4:	cmp	r3, #32
    d5c8:	bls	b9c0 <MyGame_Example_Any_parse_json_union+0xb80>
    d5cc:	add	r4, sl, #2
    d5d0:	b	cb10 <MyGame_Example_Any_parse_json_union+0x1cd0>
    d5d4:	mov	r1, r0
    d5d8:	mov	r3, #8
    d5dc:	mov	r2, r5
    d5e0:	mov	r0, fp
    d5e4:	bl	0 <flatcc_json_parser_set_error>
    d5e8:	mov	r7, r0
    d5ec:	cmp	r6, r7
    d5f0:	beq	e474 <MyGame_Example_Any_parse_json_union+0x3634>
    d5f4:	ldrb	r2, [sp, #656]	; 0x290
    d5f8:	b	b7f0 <MyGame_Example_Any_parse_json_union+0x9b0>
    d5fc:	mov	r1, r0
    d600:	mov	r3, #7
    d604:	mov	r2, r5
    d608:	mov	r0, fp
    d60c:	bl	0 <flatcc_json_parser_set_error>
    d610:	mov	r7, r0
    d614:	b	d53c <MyGame_Example_Any_parse_json_union+0x26fc>
    d618:	mov	r3, #0
    d61c:	b	b864 <MyGame_Example_Any_parse_json_union+0xa24>
    d620:	mov	r3, #0
    d624:	b	b8f0 <MyGame_Example_Any_parse_json_union+0xab0>
    d628:	mov	r3, #0
    d62c:	b	b914 <MyGame_Example_Any_parse_json_union+0xad4>
    d630:	mov	r3, #0
    d634:	b	b8ac <MyGame_Example_Any_parse_json_union+0xa6c>
    d638:	mov	r3, #0
    d63c:	b	b8cc <MyGame_Example_Any_parse_json_union+0xa8c>
    d640:	mov	r3, #0
    d644:	b	b888 <MyGame_Example_Any_parse_json_union+0xa48>
    d648:	sub	r3, fp, r5
    d64c:	cmp	r3, #6
    d650:	ble	d49c <MyGame_Example_Any_parse_json_union+0x265c>
    d654:	mov	r1, r5
    d658:	mov	r3, #6
    d65c:	mov	r2, fp
    d660:	mov	r0, r8
    d664:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d668:	cmp	r5, r0
    d66c:	mov	r1, r0
    d670:	beq	d49c <MyGame_Example_Any_parse_json_union+0x265c>
    d674:	ldr	r2, [sp, #672]	; 0x2a0
    d678:	ldr	ip, [pc, #464]	; d850 <MyGame_Example_Any_parse_json_union+0x2a10>
    d67c:	mov	r3, #1
    d680:	str	r3, [sp]
    d684:	stmib	sp, {r2, ip}
    d688:	mov	r3, #0
    d68c:	mov	r2, fp
    d690:	mov	r0, r8
    d694:	bl	0 <flatcc_json_parser_union>
    d698:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d69c:	add	r1, r0, #1
    d6a0:	sub	r3, fp, r1
    d6a4:	cmp	r3, #1
    d6a8:	mov	r3, #0
    d6ac:	str	r3, [sp, #648]	; 0x288
    d6b0:	ble	d6c4 <MyGame_Example_Any_parse_json_union+0x2884>
    d6b4:	ldrb	r3, [r0, #1]
    d6b8:	cmp	r3, #32
    d6bc:	bhi	e6ac <MyGame_Example_Any_parse_json_union+0x386c>
    d6c0:	beq	e74c <MyGame_Example_Any_parse_json_union+0x390c>
    d6c4:	mov	r2, fp
    d6c8:	mov	r0, sl
    d6cc:	bl	0 <flatcc_json_parser_space_ext>
    d6d0:	ldr	r3, [sp, #648]	; 0x288
    d6d4:	b	baa0 <MyGame_Example_Any_parse_json_union+0xc60>
    d6d8:	ldrb	r3, [r7, #2]
    d6dc:	cmp	r3, #32
    d6e0:	addhi	r4, r7, #2
    d6e4:	bls	b9fc <MyGame_Example_Any_parse_json_union+0xbbc>
    d6e8:	b	ba10 <MyGame_Example_Any_parse_json_union+0xbd0>
    d6ec:	mov	r1, r0
    d6f0:	mov	r3, #8
    d6f4:	mov	r2, r5
    d6f8:	mov	r0, fp
    d6fc:	bl	0 <flatcc_json_parser_set_error>
    d700:	mov	r7, r0
    d704:	b	cc80 <MyGame_Example_Any_parse_json_union+0x1e40>
    d708:	mov	r0, r1
    d70c:	add	r1, r1, #1
    d710:	sub	r3, r7, r1
    d714:	cmp	r3, #1
    d718:	mov	r3, #0
    d71c:	str	r3, [sp, #656]	; 0x290
    d720:	ble	d734 <MyGame_Example_Any_parse_json_union+0x28f4>
    d724:	ldrb	r3, [r0, #1]
    d728:	cmp	r3, #32
    d72c:	bhi	e6b8 <MyGame_Example_Any_parse_json_union+0x3878>
    d730:	beq	e764 <MyGame_Example_Any_parse_json_union+0x3924>
    d734:	mov	r2, r7
    d738:	mov	r0, r9
    d73c:	bl	0 <flatcc_json_parser_space_ext>
    d740:	ldr	r3, [sp, #656]	; 0x290
    d744:	b	c2d0 <MyGame_Example_Any_parse_json_union+0x1490>
    d748:	mov	r1, r0
    d74c:	mov	r3, #8
    d750:	mov	r2, r7
    d754:	mov	r0, r9
    d758:	bl	0 <flatcc_json_parser_set_error>
    d75c:	mov	r4, r0
    d760:	cmp	sl, r4
    d764:	beq	d988 <MyGame_Example_Any_parse_json_union+0x2b48>
    d768:	add	r3, sp, #664	; 0x298
    d76c:	ldrd	r2, [r3]
    d770:	b	c8d8 <MyGame_Example_Any_parse_json_union+0x1a98>
    d774:	mov	r1, r0
    d778:	mov	r3, #7
    d77c:	mov	r2, r5
    d780:	mov	r0, fp
    d784:	bl	0 <flatcc_json_parser_set_error>
    d788:	mov	r7, r0
    d78c:	b	d5ec <MyGame_Example_Any_parse_json_union+0x27ac>
    d790:	add	r3, sp, #660	; 0x294
    d794:	str	r3, [sp]
    d798:	mov	r2, r7
    d79c:	mov	r3, r8
    d7a0:	mov	r1, sl
    d7a4:	mov	r0, r9
    d7a8:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    d7ac:	cmp	r7, r0
    d7b0:	cmpne	r0, sl
    d7b4:	mov	r4, r0
    d7b8:	bne	d438 <MyGame_Example_Any_parse_json_union+0x25f8>
    d7bc:	mov	sl, r9
    d7c0:	mov	fp, r7
    d7c4:	mov	r9, r4
    d7c8:	b	c658 <MyGame_Example_Any_parse_json_union+0x1818>
    d7cc:	sub	r3, fp, r4
    d7d0:	cmp	r3, #7
    d7d4:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d7d8:	mov	r1, r4
    d7dc:	mov	r3, #7
    d7e0:	mov	r2, fp
    d7e4:	mov	r0, r8
    d7e8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d7ec:	cmp	r4, r0
    d7f0:	mov	r1, r0
    d7f4:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d7f8:	ldr	r2, [sp, #672]	; 0x2a0
    d7fc:	ldr	lr, [pc, #76]	; d850 <MyGame_Example_Any_parse_json_union+0x2a10>
    d800:	ldr	ip, [pc, #64]	; d848 <MyGame_Example_Any_parse_json_union+0x2a08>
    d804:	mov	r3, #3
    d808:	str	r3, [sp]
    d80c:	stmib	sp, {r2, ip, lr}
    d810:	mov	r3, #1
    d814:	mov	r2, fp
    d818:	mov	r0, r8
    d81c:	bl	0 <flatcc_json_parser_union_type>
    d820:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d824:	nop			; (mov r0, r0)
    d828:	.word	0x65725f74
    d82c:	.word	0x72616374
    d830:	.word	0x65720000
    d834:	.word	0x72616374
    d838:	.word	0xffff0000
	...
    d844:	.word	0x0000023c
    d848:	.word	0x0000027c
	...
    d854:	.word	0x0000029c
    d858:	.word	0x00000230
    d85c:	.word	0x00000204
    d860:	.word	0x0000024c
    d864:	.word	0x00000264
    d868:	mov	r1, r4
    d86c:	mov	r3, #5
    d870:	mov	r2, fp
    d874:	mov	r0, r8
    d878:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d87c:	cmp	r0, r4
    d880:	mov	r1, r0
    d884:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d888:	ldr	r2, [sp, #672]	; 0x2a0
    d88c:	ldr	ip, [pc, #-68]	; d850 <MyGame_Example_Any_parse_json_union+0x2a10>
    d890:	mov	r3, #7
    d894:	str	r3, [sp]
    d898:	stmib	sp, {r2, ip}
    d89c:	mov	r3, #3
    d8a0:	mov	r2, fp
    d8a4:	mov	r0, r8
    d8a8:	bl	0 <flatcc_json_parser_union>
    d8ac:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d8b0:	ldr	r0, [sl]
    d8b4:	bl	0 <flatcc_builder_end_table>
    d8b8:	cmp	r0, #0
    d8bc:	str	r0, [sp, #652]	; 0x28c
    d8c0:	beq	d3a0 <MyGame_Example_Any_parse_json_union+0x2560>
    d8c4:	b	d3c4 <MyGame_Example_Any_parse_json_union+0x2584>
    d8c8:	sub	r3, fp, r4
    d8cc:	cmp	r3, #7
    d8d0:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d8d4:	mov	r1, r4
    d8d8:	mov	r3, #7
    d8dc:	mov	r2, fp
    d8e0:	mov	r0, r8
    d8e4:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    d8e8:	cmp	r4, r0
    d8ec:	mov	r1, r0
    d8f0:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    d8f4:	ldr	r2, [sp, #672]	; 0x2a0
    d8f8:	ldr	r3, [pc, #-180]	; d84c <MyGame_Example_Any_parse_json_union+0x2a0c>
    d8fc:	ldr	lr, [pc, #-180]	; d850 <MyGame_Example_Any_parse_json_union+0x2a10>
    d900:	ldr	ip, [pc, #-180]	; d854 <MyGame_Example_Any_parse_json_union+0x2a14>
    d904:	str	r3, [sp, #16]
    d908:	mov	r3, #9
    d90c:	stmib	sp, {r2, ip, lr}
    d910:	mov	r0, r8
    d914:	str	r3, [sp]
    d918:	mov	r2, fp
    d91c:	mov	r3, #4
    d920:	bl	0 <flatcc_json_parser_union_type_vector>
    d924:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    d928:	add	r3, sp, #656	; 0x290
    d92c:	str	r3, [sp]
    d930:	mov	r2, r5
    d934:	ldr	r3, [pc, #-228]	; d858 <MyGame_Example_Any_parse_json_union+0x2a18>
    d938:	mov	r1, r6
    d93c:	mov	r0, fp
    d940:	bl	18a4 <flatcc_json_parser_symbolic_uint8>
    d944:	cmp	r5, r0
    d948:	cmpne	r0, r6
    d94c:	mov	r7, r0
    d950:	bne	d544 <MyGame_Example_Any_parse_json_union+0x2704>
    d954:	b	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    d958:	add	r3, sp, #656	; 0x290
    d95c:	str	r3, [sp]
    d960:	mov	r2, r5
    d964:	ldr	r3, [pc, #-272]	; d85c <MyGame_Example_Any_parse_json_union+0x2a1c>
    d968:	mov	r1, r9
    d96c:	mov	r0, fp
    d970:	bl	1670 <flatcc_json_parser_symbolic_int8>
    d974:	cmp	r5, r0
    d978:	cmpne	r0, r9
    d97c:	mov	r7, r0
    d980:	bne	cc88 <MyGame_Example_Any_parse_json_union+0x1e48>
    d984:	b	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    d988:	add	r3, sp, #664	; 0x298
    d98c:	str	r3, [sp]
    d990:	mov	r2, r7
    d994:	ldr	r3, [pc, #-316]	; d860 <MyGame_Example_Any_parse_json_union+0x2a20>
    d998:	mov	r1, sl
    d99c:	mov	r0, r9
    d9a0:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    d9a4:	cmp	r7, r0
    d9a8:	cmpne	r0, sl
    d9ac:	mov	r4, r0
    d9b0:	bne	d768 <MyGame_Example_Any_parse_json_union+0x2928>
    d9b4:	b	d7bc <MyGame_Example_Any_parse_json_union+0x297c>
    d9b8:	mov	r1, r0
    d9bc:	mov	r3, #8
    d9c0:	mov	r2, r5
    d9c4:	mov	r0, fp
    d9c8:	bl	0 <flatcc_json_parser_set_error>
    d9cc:	mov	r7, r0
    d9d0:	b	cdd0 <MyGame_Example_Any_parse_json_union+0x1f90>
    d9d4:	ldrb	r3, [sl, #2]
    d9d8:	cmp	r3, #32
    d9dc:	addhi	r4, sl, #2
    d9e0:	bls	cac8 <MyGame_Example_Any_parse_json_union+0x1c88>
    d9e4:	b	cadc <MyGame_Example_Any_parse_json_union+0x1c9c>
    d9e8:	mov	r3, #0
    d9ec:	add	r1, r4, #1
    d9f0:	mov	r2, r5
    d9f4:	mov	r0, fp
    d9f8:	str	r3, [sp, #660]	; 0x294
    d9fc:	bl	47c <flatcc_json_parser_space>
    da00:	ldr	r3, [sp, #660]	; 0x294
    da04:	mov	r4, r0
    da08:	b	b248 <MyGame_Example_Any_parse_json_union+0x408>
    da0c:	add	r1, r9, #1
    da10:	sub	r3, fp, r1
    da14:	cmp	r3, #1
    da18:	ble	da2c <MyGame_Example_Any_parse_json_union+0x2bec>
    da1c:	ldrb	r3, [r9, #1]
    da20:	cmp	r3, #32
    da24:	bhi	da3c <MyGame_Example_Any_parse_json_union+0x2bfc>
    da28:	beq	e780 <MyGame_Example_Any_parse_json_union+0x3940>
    da2c:	mov	r2, fp
    da30:	mov	r0, sl
    da34:	bl	0 <flatcc_json_parser_space_ext>
    da38:	mov	r1, r0
    da3c:	cmp	fp, r1
    da40:	beq	da50 <MyGame_Example_Any_parse_json_union+0x2c10>
    da44:	ldrb	r3, [r1]
    da48:	cmp	r3, #125	; 0x7d
    da4c:	beq	e794 <MyGame_Example_Any_parse_json_union+0x3954>
    da50:	mov	r5, #0
    da54:	ldr	r9, [pc, #-504]	; d864 <MyGame_Example_Any_parse_json_union+0x2a24>
    da58:	mov	r8, r5
    da5c:	cmp	fp, r1
    da60:	beq	dda8 <MyGame_Example_Any_parse_json_union+0x2f68>
    da64:	ldrb	r3, [r1]
    da68:	cmp	r3, #34	; 0x22
    da6c:	moveq	r3, #0
    da70:	addeq	r1, r1, #1
    da74:	streq	r3, [sl, #12]
    da78:	beq	da8c <MyGame_Example_Any_parse_json_union+0x2c4c>
    da7c:	cmp	r3, #46	; 0x2e
    da80:	movne	r3, #1
    da84:	strne	r3, [sl, #12]
    da88:	beq	e284 <MyGame_Example_Any_parse_json_union+0x3444>
    da8c:	sub	r3, fp, r1
    da90:	cmp	r3, #8
    da94:	bls	ddbc <MyGame_Example_Any_parse_json_union+0x2f7c>
    da98:	ldrb	r2, [r1, #7]
    da9c:	mov	r3, #0
    daa0:	ldrb	r6, [r1, #6]
    daa4:	lsr	r0, r6, #24
    daa8:	str	r0, [sp, #228]	; 0xe4
    daac:	lsl	r0, r6, #8
    dab0:	str	r0, [sp, #224]	; 0xe0
    dab4:	ldrd	r6, [sp, #224]	; 0xe0
    dab8:	orr	r6, r6, r2
    dabc:	orr	r7, r7, r3
    dac0:	mov	r2, r6
    dac4:	mov	r3, r7
    dac8:	ldrb	r6, [r1, #5]
    dacc:	lsr	r0, r6, #16
    dad0:	str	r0, [sp, #124]	; 0x7c
    dad4:	lsl	r0, r6, #16
    dad8:	str	r0, [sp, #120]	; 0x78
    dadc:	ldrd	r6, [sp, #120]	; 0x78
    dae0:	orr	r6, r6, r2
    dae4:	orr	r7, r7, r3
    dae8:	mov	r2, r6
    daec:	mov	r3, r7
    daf0:	ldrb	r6, [r1, #4]
    daf4:	lsr	r0, r6, #8
    daf8:	str	r0, [sp, #68]	; 0x44
    dafc:	lsl	r0, r6, #24
    db00:	str	r0, [sp, #64]	; 0x40
    db04:	ldrd	r6, [sp, #64]	; 0x40
    db08:	orr	r6, r6, r2
    db0c:	orr	r7, r7, r3
    db10:	mov	r2, r6
    db14:	mov	r3, r7
    db18:	ldrb	r0, [r1, #3]
    db1c:	str	r0, [sp, #84]	; 0x54
    db20:	mov	r0, #0
    db24:	str	r0, [sp, #80]	; 0x50
    db28:	ldrd	r6, [sp, #80]	; 0x50
    db2c:	orr	r6, r6, r2
    db30:	orr	r7, r7, r3
    db34:	mov	r2, r6
    db38:	mov	r3, r7
    db3c:	ldrb	r6, [r1, #2]
    db40:	lsl	r0, r6, #8
    db44:	str	r0, [sp, #44]	; 0x2c
    db48:	mov	r0, #0
    db4c:	str	r0, [sp, #40]	; 0x28
    db50:	ldrd	r6, [sp, #40]	; 0x28
    db54:	orr	r6, r6, r2
    db58:	orr	r7, r7, r3
    db5c:	mov	r2, r6
    db60:	mov	r3, r7
    db64:	ldrb	r6, [r1, #1]
    db68:	lsl	r0, r6, #16
    db6c:	str	r0, [sp, #36]	; 0x24
    db70:	mov	r0, #0
    db74:	str	r0, [sp, #32]
    db78:	ldrd	r6, [sp, #32]
    db7c:	orr	r6, r6, r2
    db80:	orr	r7, r7, r3
    db84:	mov	r2, r6
    db88:	mov	r3, r7
    db8c:	ldrb	r6, [r1]
    db90:	lsl	r0, r6, #24
    db94:	str	r0, [sp, #28]
    db98:	mov	r0, #0
    db9c:	str	r0, [sp, #24]
    dba0:	ldrd	r6, [sp, #24]
    dba4:	orr	r6, r6, r2
    dba8:	orr	r7, r7, r3
    dbac:	mov	r2, r6
    dbb0:	mov	r3, r7
    dbb4:	add	r7, pc, #868	; 0x364
    dbb8:	ldrd	r6, [r7]
    dbbc:	cmp	r3, r7
    dbc0:	cmpeq	r2, r6
    dbc4:	bne	dda8 <MyGame_Example_Any_parse_json_union+0x2f68>
    dbc8:	add	r4, r1, #8
    dbcc:	sub	r0, fp, r4
    dbd0:	cmp	r0, #8
    dbd4:	bls	de40 <MyGame_Example_Any_parse_json_union+0x3000>
    dbd8:	ldrb	r6, [r1, #15]
    dbdc:	mov	r7, #0
    dbe0:	ldrb	r2, [r1, #14]
    dbe4:	lsl	r3, r2, #8
    dbe8:	str	r3, [sp, #440]	; 0x1b8
    dbec:	add	r3, sp, #440	; 0x1b8
    dbf0:	lsr	ip, r2, #24
    dbf4:	str	ip, [sp, #444]	; 0x1bc
    dbf8:	ldrd	r2, [r3]
    dbfc:	orr	r2, r2, r6
    dc00:	orr	r3, r3, r7
    dc04:	mov	r6, r2
    dc08:	mov	r7, r3
    dc0c:	ldrb	r2, [r1, #13]
    dc10:	lsl	r3, r2, #16
    dc14:	str	r3, [sp, #312]	; 0x138
    dc18:	add	r3, sp, #312	; 0x138
    dc1c:	lsr	ip, r2, #16
    dc20:	str	ip, [sp, #316]	; 0x13c
    dc24:	ldrd	r2, [r3]
    dc28:	orr	r2, r2, r6
    dc2c:	orr	r3, r3, r7
    dc30:	mov	r6, r2
    dc34:	mov	r7, r3
    dc38:	ldrb	r2, [r1, #12]
    dc3c:	lsr	ip, r2, #8
    dc40:	lsl	r3, r2, #24
    dc44:	str	ip, [sp, #236]	; 0xec
    dc48:	str	r3, [sp, #232]	; 0xe8
    dc4c:	ldrd	r2, [sp, #232]	; 0xe8
    dc50:	orr	r2, r2, r6
    dc54:	orr	r3, r3, r7
    dc58:	ldrb	ip, [r1, #11]
    dc5c:	str	ip, [sp, #260]	; 0x104
    dc60:	mov	ip, #0
    dc64:	str	ip, [sp, #256]	; 0x100
    dc68:	add	ip, sp, #256	; 0x100
    dc6c:	ldrd	r6, [ip]
    dc70:	orr	r6, r6, r2
    dc74:	orr	r7, r7, r3
    dc78:	mov	r2, r6
    dc7c:	mov	r3, r7
    dc80:	ldrb	r6, [r1, #10]
    dc84:	lsl	ip, r6, #8
    dc88:	str	ip, [sp, #196]	; 0xc4
    dc8c:	mov	ip, #0
    dc90:	str	ip, [sp, #192]	; 0xc0
    dc94:	ldrd	r6, [sp, #192]	; 0xc0
    dc98:	orr	r6, r6, r2
    dc9c:	orr	r7, r7, r3
    dca0:	mov	r2, r6
    dca4:	mov	r3, r7
    dca8:	ldrb	r6, [r1, #9]
    dcac:	lsl	ip, r6, #16
    dcb0:	str	ip, [sp, #172]	; 0xac
    dcb4:	mov	ip, #0
    dcb8:	str	ip, [sp, #168]	; 0xa8
    dcbc:	ldrd	r6, [sp, #168]	; 0xa8
    dcc0:	orr	r6, r6, r2
    dcc4:	orr	r7, r7, r3
    dcc8:	mov	r2, r6
    dccc:	mov	r3, r7
    dcd0:	ldrb	r6, [r1, #8]
    dcd4:	lsl	ip, r6, #24
    dcd8:	str	ip, [sp, #100]	; 0x64
    dcdc:	mov	ip, #0
    dce0:	str	ip, [sp, #96]	; 0x60
    dce4:	ldrd	r6, [sp, #96]	; 0x60
    dce8:	orr	r6, r6, r2
    dcec:	orr	r7, r7, r3
    dcf0:	mov	r2, r6
    dcf4:	mov	r3, r7
    dcf8:	add	r7, pc, #552	; 0x228
    dcfc:	ldrd	r6, [r7]
    dd00:	cmp	r3, r7
    dd04:	cmpeq	r2, r6
    dd08:	beq	df54 <MyGame_Example_Any_parse_json_union+0x3114>
    dd0c:	add	r7, pc, #540	; 0x21c
    dd10:	ldrd	r6, [r7]
    dd14:	bic	r2, r2, #255	; 0xff
    dd18:	cmp	r3, r7
    dd1c:	cmpeq	r2, r6
    dd20:	bne	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    dd24:	cmp	r0, #7
    dd28:	bgt	e29c <MyGame_Example_Any_parse_json_union+0x345c>
    dd2c:	mov	r1, r4
    dd30:	mov	r2, fp
    dd34:	mov	r0, sl
    dd38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd3c:	mov	r4, r0
    dd40:	sub	r3, fp, r4
    dd44:	cmp	r3, #1
    dd48:	ble	dd5c <MyGame_Example_Any_parse_json_union+0x2f1c>
    dd4c:	ldrb	r3, [r4]
    dd50:	cmp	r3, #32
    dd54:	bhi	dd70 <MyGame_Example_Any_parse_json_union+0x2f30>
    dd58:	beq	defc <MyGame_Example_Any_parse_json_union+0x30bc>
    dd5c:	mov	r1, r4
    dd60:	mov	r2, fp
    dd64:	mov	r0, sl
    dd68:	bl	0 <flatcc_json_parser_space_ext>
    dd6c:	mov	r4, r0
    dd70:	cmp	fp, r4
    dd74:	beq	df14 <MyGame_Example_Any_parse_json_union+0x30d4>
    dd78:	ldrb	r3, [r4]
    dd7c:	cmp	r3, #44	; 0x2c
    dd80:	beq	e188 <MyGame_Example_Any_parse_json_union+0x3348>
    dd84:	cmp	r3, #125	; 0x7d
    dd88:	beq	dec4 <MyGame_Example_Any_parse_json_union+0x3084>
    dd8c:	mov	r1, r4
    dd90:	mov	r3, #10
    dd94:	mov	r2, fp
    dd98:	mov	r0, sl
    dd9c:	bl	0 <flatcc_json_parser_set_error>
    dda0:	mov	r9, r0
    dda4:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    dda8:	mov	r2, fp
    ddac:	mov	r0, sl
    ddb0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddb4:	mov	r4, r0
    ddb8:	b	dd40 <MyGame_Example_Any_parse_json_union+0x2f00>
    ddbc:	sub	r3, r3, #1
    ddc0:	cmp	r3, #7
    ddc4:	ldrls	pc, [pc, r3, lsl #2]
    ddc8:	b	dda8 <MyGame_Example_Any_parse_json_union+0x2f68>
    ddcc:	.word	0x0000de34
    ddd0:	.word	0x0000de28
    ddd4:	.word	0x0000de1c
    ddd8:	.word	0x0000de10
    dddc:	.word	0x0000de04
    dde0:	.word	0x0000ddf8
    dde4:	.word	0x0000ddec
    dde8:	.word	0x0000da98
    ddec:	mov	r2, r5
    ddf0:	mov	r3, r8
    ddf4:	b	daa0 <MyGame_Example_Any_parse_json_union+0x2c60>
    ddf8:	mov	r2, r5
    ddfc:	mov	r3, r8
    de00:	b	dac8 <MyGame_Example_Any_parse_json_union+0x2c88>
    de04:	mov	r2, r5
    de08:	mov	r3, r8
    de0c:	b	daf0 <MyGame_Example_Any_parse_json_union+0x2cb0>
    de10:	mov	r2, r5
    de14:	mov	r3, r8
    de18:	b	db18 <MyGame_Example_Any_parse_json_union+0x2cd8>
    de1c:	mov	r2, r5
    de20:	mov	r3, r8
    de24:	b	db3c <MyGame_Example_Any_parse_json_union+0x2cfc>
    de28:	mov	r2, r5
    de2c:	mov	r3, r8
    de30:	b	db64 <MyGame_Example_Any_parse_json_union+0x2d24>
    de34:	mov	r2, r5
    de38:	mov	r3, r8
    de3c:	b	db8c <MyGame_Example_Any_parse_json_union+0x2d4c>
    de40:	sub	r3, r0, #1
    de44:	cmp	r3, #7
    de48:	ldrls	pc, [pc, r3, lsl #2]
    de4c:	b	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    de50:	.word	0x0000deb8
    de54:	.word	0x0000deac
    de58:	.word	0x0000dea0
    de5c:	.word	0x0000de94
    de60:	.word	0x0000de88
    de64:	.word	0x0000de7c
    de68:	.word	0x0000de70
    de6c:	.word	0x0000dbd8
    de70:	mov	r6, r5
    de74:	mov	r7, r8
    de78:	b	dbe0 <MyGame_Example_Any_parse_json_union+0x2da0>
    de7c:	mov	r6, r5
    de80:	mov	r7, r8
    de84:	b	dc0c <MyGame_Example_Any_parse_json_union+0x2dcc>
    de88:	mov	r6, r5
    de8c:	mov	r7, r8
    de90:	b	dc38 <MyGame_Example_Any_parse_json_union+0x2df8>
    de94:	mov	r2, r5
    de98:	mov	r3, r8
    de9c:	b	dc58 <MyGame_Example_Any_parse_json_union+0x2e18>
    dea0:	mov	r2, r5
    dea4:	mov	r3, r8
    dea8:	b	dc80 <MyGame_Example_Any_parse_json_union+0x2e40>
    deac:	mov	r2, r5
    deb0:	mov	r3, r8
    deb4:	b	dca8 <MyGame_Example_Any_parse_json_union+0x2e68>
    deb8:	mov	r2, r5
    debc:	mov	r3, r8
    dec0:	b	dcd0 <MyGame_Example_Any_parse_json_union+0x2e90>
    dec4:	add	r9, r4, #1
    dec8:	sub	r3, fp, r9
    decc:	cmp	r3, #1
    ded0:	ble	dee4 <MyGame_Example_Any_parse_json_union+0x30a4>
    ded4:	ldrb	r3, [r4, #1]
    ded8:	cmp	r3, #32
    dedc:	bhi	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    dee0:	beq	e38c <MyGame_Example_Any_parse_json_union+0x354c>
    dee4:	mov	r1, r9
    dee8:	mov	r2, fp
    deec:	mov	r0, sl
    def0:	bl	0 <flatcc_json_parser_space_ext>
    def4:	mov	r9, r0
    def8:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    defc:	ldrb	r3, [r4, #1]
    df00:	cmp	r3, #32
    df04:	addhi	r4, r4, #1
    df08:	bls	dd5c <MyGame_Example_Any_parse_json_union+0x2f1c>
    df0c:	cmp	fp, r4
    df10:	bne	dd78 <MyGame_Example_Any_parse_json_union+0x2f38>
    df14:	mov	r9, fp
    df18:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    df1c:	nop			; (mov r0, r0)
    df20:	.word	0x5f626262
    df24:	.word	0x61616161
    df28:	.word	0x6172745f
    df2c:	.word	0x625f7374
    df30:	.word	0x65707300
    df34:	.word	0x625f7374
    df38:	.word	0x73000000
    df3c:	.word	0x73746570
    df40:	.word	0x00000214
    df44:	.word	0x000002bc
    df48:	.word	0x00000000
    df4c:	.word	0x00000224
    df50:	.word	0x00000270
    df54:	add	r4, r1, #16
    df58:	sub	r0, fp, r4
    df5c:	cmp	r0, #8
    df60:	bls	e200 <MyGame_Example_Any_parse_json_union+0x33c0>
    df64:	ldrb	r6, [r1, #23]
    df68:	mov	r7, #0
    df6c:	ldrb	r2, [r1, #22]
    df70:	lsl	r3, r2, #8
    df74:	str	r3, [sp, #616]	; 0x268
    df78:	add	r3, sp, #616	; 0x268
    df7c:	lsr	ip, r2, #24
    df80:	str	ip, [sp, #620]	; 0x26c
    df84:	ldrd	r2, [r3]
    df88:	orr	r2, r2, r6
    df8c:	orr	r3, r3, r7
    df90:	mov	r6, r2
    df94:	mov	r7, r3
    df98:	ldrb	r2, [r1, #21]
    df9c:	lsl	r3, r2, #16
    dfa0:	str	r3, [sp, #576]	; 0x240
    dfa4:	add	r3, sp, #576	; 0x240
    dfa8:	lsr	ip, r2, #16
    dfac:	str	ip, [sp, #580]	; 0x244
    dfb0:	ldrd	r2, [r3]
    dfb4:	orr	r2, r2, r6
    dfb8:	orr	r3, r3, r7
    dfbc:	mov	r6, r2
    dfc0:	mov	r7, r3
    dfc4:	ldrb	r2, [r1, #20]
    dfc8:	lsl	r3, r2, #24
    dfcc:	str	r3, [sp, #544]	; 0x220
    dfd0:	add	r3, sp, #544	; 0x220
    dfd4:	lsr	ip, r2, #8
    dfd8:	str	ip, [sp, #548]	; 0x224
    dfdc:	ldrd	r2, [r3]
    dfe0:	orr	r2, r2, r6
    dfe4:	orr	r3, r3, r7
    dfe8:	mov	r6, r2
    dfec:	mov	r7, r3
    dff0:	ldrb	r3, [r1, #19]
    dff4:	str	r3, [sp, #556]	; 0x22c
    dff8:	mov	r3, #0
    dffc:	str	r3, [sp, #552]	; 0x228
    e000:	add	r3, sp, #552	; 0x228
    e004:	ldrd	r2, [r3]
    e008:	orr	r2, r2, r6
    e00c:	orr	r3, r3, r7
    e010:	mov	r6, r2
    e014:	mov	r7, r3
    e018:	ldrb	r2, [r1, #18]
    e01c:	lsl	r3, r2, #8
    e020:	str	r3, [sp, #524]	; 0x20c
    e024:	mov	r3, #0
    e028:	str	r3, [sp, #520]	; 0x208
    e02c:	add	r3, sp, #520	; 0x208
    e030:	ldrd	r2, [r3]
    e034:	orr	r2, r2, r6
    e038:	orr	r3, r3, r7
    e03c:	mov	r6, r2
    e040:	mov	r7, r3
    e044:	ldrb	r2, [r1, #17]
    e048:	lsl	r3, r2, #16
    e04c:	str	r3, [sp, #484]	; 0x1e4
    e050:	mov	r3, #0
    e054:	str	r3, [sp, #480]	; 0x1e0
    e058:	add	r3, sp, #480	; 0x1e0
    e05c:	ldrd	r2, [r3]
    e060:	orr	r2, r2, r6
    e064:	orr	r3, r3, r7
    e068:	mov	r6, r2
    e06c:	mov	r7, r3
    e070:	ldrb	r2, [r1, #16]
    e074:	lsl	r3, r2, #24
    e078:	str	r3, [sp, #436]	; 0x1b4
    e07c:	mov	r3, #0
    e080:	str	r3, [sp, #432]	; 0x1b0
    e084:	add	r3, sp, #432	; 0x1b0
    e088:	ldrd	r2, [r3]
    e08c:	orr	r2, r2, r6
    e090:	orr	r3, r3, r7
    e094:	mov	r7, r3
    e098:	and	r6, r2, #-16777216	; 0xff000000
    e09c:	sub	r3, pc, #364	; 0x16c
    e0a0:	ldrd	r2, [r3]
    e0a4:	cmp	r7, r3
    e0a8:	cmpeq	r6, r2
    e0ac:	bne	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    e0b0:	cmp	r0, #5
    e0b4:	ble	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    e0b8:	mov	r3, #5
    e0bc:	mov	r2, fp
    e0c0:	mov	r1, r4
    e0c4:	mov	r0, sl
    e0c8:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    e0cc:	cmp	r4, r0
    e0d0:	mov	r6, r0
    e0d4:	beq	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    e0d8:	add	r3, sp, #432	; 0x1b0
    e0dc:	cmp	fp, r0
    e0e0:	ldrd	r2, [r3]
    e0e4:	str	r5, [sp, #672]	; 0x2a0
    e0e8:	str	r8, [sp, #676]	; 0x2a4
    e0ec:	str	r2, [sp, #660]	; 0x294
    e0f0:	str	r2, [sp, #664]	; 0x298
    e0f4:	beq	e5a0 <MyGame_Example_Any_parse_json_union+0x3760>
    e0f8:	add	r3, sp, #672	; 0x2a0
    e0fc:	str	r3, [sp]
    e100:	mov	r1, r0
    e104:	add	r3, sp, #664	; 0x298
    e108:	mov	r2, fp
    e10c:	mov	r0, sl
    e110:	bl	0 <flatcc_json_parser_integer>
    e114:	cmp	r6, r0
    e118:	mov	r4, r0
    e11c:	beq	e5a0 <MyGame_Example_Any_parse_json_union+0x3760>
    e120:	ldr	r3, [sp, #664]	; 0x298
    e124:	cmp	r3, #0
    e128:	bne	e414 <MyGame_Example_Any_parse_json_union+0x35d4>
    e12c:	add	r3, sp, #672	; 0x2a0
    e130:	mov	r1, #0
    e134:	ldrd	r2, [r3]
    e138:	mvn	r0, #0
    e13c:	cmp	r3, r1
    e140:	cmpeq	r2, r0
    e144:	strls	r2, [sp, #660]	; 0x294
    e148:	bhi	e43c <MyGame_Example_Any_parse_json_union+0x35fc>
    e14c:	cmp	r2, #0
    e150:	bne	e160 <MyGame_Example_Any_parse_json_union+0x3320>
    e154:	ldr	r3, [sl, #8]
    e158:	tst	r3, #2
    e15c:	beq	dd40 <MyGame_Example_Any_parse_json_union+0x2f00>
    e160:	mov	r3, #4
    e164:	mov	r2, r3
    e168:	mov	r1, #1
    e16c:	ldr	r0, [sl]
    e170:	bl	0 <flatcc_builder_table_add>
    e174:	cmp	r0, #0
    e178:	beq	e40c <MyGame_Example_Any_parse_json_union+0x35cc>
    e17c:	ldr	r3, [sp, #660]	; 0x294
    e180:	str	r3, [r0]
    e184:	b	dd40 <MyGame_Example_Any_parse_json_union+0x2f00>
    e188:	add	r1, r4, #1
    e18c:	sub	r3, fp, r1
    e190:	cmp	r3, #1
    e194:	ble	e1a8 <MyGame_Example_Any_parse_json_union+0x3368>
    e198:	ldrb	r3, [r4, #1]
    e19c:	cmp	r3, #32
    e1a0:	bhi	e1b8 <MyGame_Example_Any_parse_json_union+0x3378>
    e1a4:	beq	e3a0 <MyGame_Example_Any_parse_json_union+0x3560>
    e1a8:	mov	r2, fp
    e1ac:	mov	r0, sl
    e1b0:	bl	0 <flatcc_json_parser_space_ext>
    e1b4:	mov	r1, r0
    e1b8:	cmp	fp, r1
    e1bc:	beq	e458 <MyGame_Example_Any_parse_json_union+0x3618>
    e1c0:	ldrb	r3, [r1]
    e1c4:	cmp	r3, #125	; 0x7d
    e1c8:	bne	da5c <MyGame_Example_Any_parse_json_union+0x2c1c>
    e1cc:	add	r9, r1, #1
    e1d0:	sub	r3, fp, r9
    e1d4:	cmp	r3, #1
    e1d8:	ble	dee4 <MyGame_Example_Any_parse_json_union+0x30a4>
    e1dc:	ldrb	r3, [r1, #1]
    e1e0:	cmp	r3, #32
    e1e4:	bhi	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    e1e8:	bne	dee4 <MyGame_Example_Any_parse_json_union+0x30a4>
    e1ec:	ldrb	r3, [r1, #2]
    e1f0:	cmp	r3, #32
    e1f4:	addhi	r9, r1, #2
    e1f8:	bls	dee4 <MyGame_Example_Any_parse_json_union+0x30a4>
    e1fc:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    e200:	sub	r3, r0, #1
    e204:	cmp	r3, #7
    e208:	ldrls	pc, [pc, r3, lsl #2]
    e20c:	b	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    e210:	.word	0x0000e278
    e214:	.word	0x0000e26c
    e218:	.word	0x0000e260
    e21c:	.word	0x0000e254
    e220:	.word	0x0000e248
    e224:	.word	0x0000e23c
    e228:	.word	0x0000e230
    e22c:	.word	0x0000df64
    e230:	mov	r6, r5
    e234:	mov	r7, r8
    e238:	b	df6c <MyGame_Example_Any_parse_json_union+0x312c>
    e23c:	mov	r6, r5
    e240:	mov	r7, r8
    e244:	b	df98 <MyGame_Example_Any_parse_json_union+0x3158>
    e248:	mov	r6, r5
    e24c:	mov	r7, r8
    e250:	b	dfc4 <MyGame_Example_Any_parse_json_union+0x3184>
    e254:	mov	r6, r5
    e258:	mov	r7, r8
    e25c:	b	dff0 <MyGame_Example_Any_parse_json_union+0x31b0>
    e260:	mov	r6, r5
    e264:	mov	r7, r8
    e268:	b	e018 <MyGame_Example_Any_parse_json_union+0x31d8>
    e26c:	mov	r6, r5
    e270:	mov	r7, r8
    e274:	b	e044 <MyGame_Example_Any_parse_json_union+0x3204>
    e278:	mov	r6, r5
    e27c:	mov	r7, r8
    e280:	b	e070 <MyGame_Example_Any_parse_json_union+0x3230>
    e284:	mov	r3, #5
    e288:	mov	r2, fp
    e28c:	mov	r0, sl
    e290:	bl	0 <flatcc_json_parser_set_error>
    e294:	mov	r1, r0
    e298:	b	da8c <MyGame_Example_Any_parse_json_union+0x2c4c>
    e29c:	mov	r3, #7
    e2a0:	mov	r2, fp
    e2a4:	mov	r1, r4
    e2a8:	mov	r0, sl
    e2ac:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    e2b0:	cmp	r4, r0
    e2b4:	mov	r6, r0
    e2b8:	beq	dd2c <MyGame_Example_Any_parse_json_union+0x2eec>
    e2bc:	ldr	r3, [sp, #96]	; 0x60
    e2c0:	cmp	fp, r0
    e2c4:	str	r5, [sp, #664]	; 0x298
    e2c8:	str	r8, [sp, #668]	; 0x29c
    e2cc:	str	r5, [sp, #672]	; 0x2a0
    e2d0:	str	r8, [sp, #676]	; 0x2a4
    e2d4:	str	r3, [sp, #660]	; 0x294
    e2d8:	beq	e3e0 <MyGame_Example_Any_parse_json_union+0x35a0>
    e2dc:	add	r3, sp, #672	; 0x2a0
    e2e0:	str	r3, [sp]
    e2e4:	mov	r1, r0
    e2e8:	add	r3, sp, #660	; 0x294
    e2ec:	mov	r2, fp
    e2f0:	mov	r0, sl
    e2f4:	bl	0 <flatcc_json_parser_integer>
    e2f8:	cmp	r6, r0
    e2fc:	mov	r4, r0
    e300:	beq	e3e0 <MyGame_Example_Any_parse_json_union+0x35a0>
    e304:	ldr	r1, [sp, #660]	; 0x294
    e308:	add	r3, sp, #672	; 0x2a0
    e30c:	cmp	r1, #0
    e310:	ldrd	r2, [r3]
    e314:	beq	e374 <MyGame_Example_Any_parse_json_union+0x3534>
    e318:	cmp	r3, #-2147483648	; 0x80000000
    e31c:	cmpeq	r2, #0
    e320:	bhi	e3b4 <MyGame_Example_Any_parse_json_union+0x3574>
    e324:	rsbs	r2, r2, #0
    e328:	rsc	r3, r3, #0
    e32c:	add	r1, sp, #664	; 0x298
    e330:	strd	r2, [r1]
    e334:	orrs	r3, r2, r3
    e338:	bne	e348 <MyGame_Example_Any_parse_json_union+0x3508>
    e33c:	ldr	r3, [sl, #8]
    e340:	tst	r3, #2
    e344:	beq	dd40 <MyGame_Example_Any_parse_json_union+0x2f00>
    e348:	mov	r3, #8
    e34c:	mov	r2, r3
    e350:	mov	r1, #0
    e354:	ldr	r0, [sl]
    e358:	bl	0 <flatcc_builder_table_add>
    e35c:	cmp	r0, #0
    e360:	beq	e40c <MyGame_Example_Any_parse_json_union+0x35cc>
    e364:	add	r3, sp, #664	; 0x298
    e368:	ldrd	r2, [r3]
    e36c:	strd	r2, [r0]
    e370:	b	dd40 <MyGame_Example_Any_parse_json_union+0x2f00>
    e374:	cmp	r2, #0
    e378:	sbcs	r1, r3, #0
    e37c:	blt	e530 <MyGame_Example_Any_parse_json_union+0x36f0>
    e380:	add	r1, sp, #664	; 0x298
    e384:	strd	r2, [r1]
    e388:	b	e334 <MyGame_Example_Any_parse_json_union+0x34f4>
    e38c:	ldrb	r3, [r4, #2]
    e390:	cmp	r3, #32
    e394:	addhi	r9, r4, #2
    e398:	bls	dee4 <MyGame_Example_Any_parse_json_union+0x30a4>
    e39c:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    e3a0:	ldrb	r3, [r4, #2]
    e3a4:	cmp	r3, #32
    e3a8:	addhi	r1, r4, #2
    e3ac:	bls	e1a8 <MyGame_Example_Any_parse_json_union+0x3368>
    e3b0:	b	e1b8 <MyGame_Example_Any_parse_json_union+0x3378>
    e3b4:	mov	r1, r0
    e3b8:	mov	r3, #8
    e3bc:	mov	r2, fp
    e3c0:	mov	r0, sl
    e3c4:	bl	0 <flatcc_json_parser_set_error>
    e3c8:	mov	r4, r0
    e3cc:	cmp	r6, r4
    e3d0:	beq	e3e0 <MyGame_Example_Any_parse_json_union+0x35a0>
    e3d4:	add	r3, sp, #664	; 0x298
    e3d8:	ldrd	r2, [r3]
    e3dc:	b	e334 <MyGame_Example_Any_parse_json_union+0x34f4>
    e3e0:	add	r3, sp, #664	; 0x298
    e3e4:	str	r3, [sp]
    e3e8:	mov	r2, fp
    e3ec:	ldr	r3, [pc, #-1188]	; df50 <MyGame_Example_Any_parse_json_union+0x3110>
    e3f0:	mov	r1, r6
    e3f4:	mov	r0, sl
    e3f8:	bl	1d04 <flatcc_json_parser_symbolic_int64>
    e3fc:	cmp	fp, r0
    e400:	cmpne	r0, r6
    e404:	mov	r4, r0
    e408:	bne	e3d4 <MyGame_Example_Any_parse_json_union+0x3594>
    e40c:	mov	r9, r4
    e410:	b	d3a0 <MyGame_Example_Any_parse_json_union+0x2560>
    e414:	mov	r1, r0
    e418:	mov	r3, #8
    e41c:	mov	r2, fp
    e420:	mov	r0, sl
    e424:	bl	0 <flatcc_json_parser_set_error>
    e428:	mov	r4, r0
    e42c:	cmp	r6, r4
    e430:	beq	e5a0 <MyGame_Example_Any_parse_json_union+0x3760>
    e434:	ldr	r2, [sp, #660]	; 0x294
    e438:	b	e14c <MyGame_Example_Any_parse_json_union+0x330c>
    e43c:	mov	r1, r4
    e440:	mov	r3, #7
    e444:	mov	r2, fp
    e448:	mov	r0, sl
    e44c:	bl	0 <flatcc_json_parser_set_error>
    e450:	mov	r4, r0
    e454:	b	e42c <MyGame_Example_Any_parse_json_union+0x35ec>
    e458:	mov	r3, #10
    e45c:	mov	r2, fp
    e460:	mov	r1, fp
    e464:	mov	r0, sl
    e468:	bl	0 <flatcc_json_parser_set_error>
    e46c:	mov	r9, r0
    e470:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    e474:	add	r3, sp, #656	; 0x290
    e478:	str	r3, [sp]
    e47c:	mov	r2, r5
    e480:	ldr	r3, [pc, #-1340]	; df4c <MyGame_Example_Any_parse_json_union+0x310c>
    e484:	mov	r1, r6
    e488:	mov	r0, fp
    e48c:	bl	18a4 <flatcc_json_parser_symbolic_uint8>
    e490:	cmp	r5, r0
    e494:	cmpne	r0, r6
    e498:	mov	r7, r0
    e49c:	bne	d5f4 <MyGame_Example_Any_parse_json_union+0x27b4>
    e4a0:	b	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    e4a4:	ldr	r0, [r7]
    e4a8:	str	r1, [sp, #128]	; 0x80
    e4ac:	bl	0 <flatcc_builder_end_table>
    e4b0:	ldr	r1, [sp, #128]	; 0x80
    e4b4:	subs	r4, r0, #0
    e4b8:	beq	bfc0 <MyGame_Example_Any_parse_json_union+0x1180>
    e4bc:	b	d258 <MyGame_Example_Any_parse_json_union+0x2418>
    e4c0:	sub	r3, fp, r4
    e4c4:	cmp	r3, #6
    e4c8:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    e4cc:	mov	r1, r4
    e4d0:	mov	r3, #6
    e4d4:	mov	r2, fp
    e4d8:	mov	r0, r8
    e4dc:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    e4e0:	cmp	r4, r0
    e4e4:	mov	r1, r0
    e4e8:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    e4ec:	ldr	r2, [sp, #672]	; 0x2a0
    e4f0:	ldr	lr, [pc, #-1456]	; df48 <MyGame_Example_Any_parse_json_union+0x3108>
    e4f4:	ldr	ip, [pc, #-1464]	; df44 <MyGame_Example_Any_parse_json_union+0x3104>
    e4f8:	mov	r3, #5
    e4fc:	str	r3, [sp]
    e500:	stmib	sp, {r2, ip, lr}
    e504:	mov	r3, #2
    e508:	mov	r2, fp
    e50c:	mov	r0, r8
    e510:	bl	0 <flatcc_json_parser_union_type>
    e514:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    e518:	ldr	r0, [sl]
    e51c:	bl	0 <flatcc_builder_end_table>
    e520:	cmp	r0, #0
    e524:	str	r0, [sp, #652]	; 0x28c
    e528:	beq	c658 <MyGame_Example_Any_parse_json_union+0x1818>
    e52c:	b	c67c <MyGame_Example_Any_parse_json_union+0x183c>
    e530:	mov	r1, r0
    e534:	mov	r3, #7
    e538:	mov	r2, fp
    e53c:	mov	r0, sl
    e540:	bl	0 <flatcc_json_parser_set_error>
    e544:	mov	r4, r0
    e548:	b	e3cc <MyGame_Example_Any_parse_json_union+0x358c>
    e54c:	add	r3, sp, #656	; 0x290
    e550:	str	r3, [sp]
    e554:	mov	r2, r5
    e558:	ldr	r3, [pc, #-1568]	; df40 <MyGame_Example_Any_parse_json_union+0x3100>
    e55c:	mov	r1, sl
    e560:	mov	r0, fp
    e564:	bl	1670 <flatcc_json_parser_symbolic_int8>
    e568:	cmp	r5, r0
    e56c:	cmpne	r0, sl
    e570:	mov	r7, r0
    e574:	bne	cdd8 <MyGame_Example_Any_parse_json_union+0x1f98>
    e578:	b	cc14 <MyGame_Example_Any_parse_json_union+0x1dd4>
    e57c:	mov	ip, #0
    e580:	mov	r3, #10
    e584:	mov	r2, fp
    e588:	mov	r1, fp
    e58c:	mov	r0, sl
    e590:	str	ip, [sp, #648]	; 0x288
    e594:	bl	0 <flatcc_json_parser_set_error>
    e598:	ldr	r3, [sp, #648]	; 0x288
    e59c:	b	baa0 <MyGame_Example_Any_parse_json_union+0xc60>
    e5a0:	add	r3, sp, #660	; 0x294
    e5a4:	str	r3, [sp]
    e5a8:	mov	r2, fp
    e5ac:	mov	r3, r9
    e5b0:	mov	r1, r6
    e5b4:	mov	r0, sl
    e5b8:	bl	1220 <flatcc_json_parser_symbolic_uint32>
    e5bc:	cmp	fp, r0
    e5c0:	cmpne	r0, r6
    e5c4:	mov	r4, r0
    e5c8:	bne	e434 <MyGame_Example_Any_parse_json_union+0x35f4>
    e5cc:	b	e40c <MyGame_Example_Any_parse_json_union+0x35cc>
    e5d0:	mov	ip, #0
    e5d4:	mov	r3, #10
    e5d8:	mov	r2, r7
    e5dc:	mov	r1, r7
    e5e0:	mov	r0, r9
    e5e4:	str	ip, [sp, #656]	; 0x290
    e5e8:	bl	0 <flatcc_json_parser_set_error>
    e5ec:	ldr	r3, [sp, #656]	; 0x290
    e5f0:	b	c2d0 <MyGame_Example_Any_parse_json_union+0x1490>
    e5f4:	add	r4, r4, #16
    e5f8:	mov	r0, r4
    e5fc:	mov	r1, fp
    e600:	bl	0 <flatcc_json_parser_symbol_part_ext>
    e604:	add	r3, pc, #444	; 0x1bc
    e608:	ldrd	r2, [r3]
    e60c:	mov	r0, #0
    e610:	bic	r1, r1, #255	; 0xff
    e614:	cmp	r1, r3
    e618:	cmpeq	r0, r2
    e61c:	bne	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    e620:	sub	r3, fp, r4
    e624:	cmp	r3, #3
    e628:	ble	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    e62c:	mov	r1, r4
    e630:	mov	r3, #3
    e634:	mov	r2, fp
    e638:	mov	r0, r8
    e63c:	bl	548c <flatcc_json_parser_match_symbol.part.18>
    e640:	cmp	r4, r0
    e644:	mov	r1, r0
    e648:	beq	ced4 <MyGame_Example_Any_parse_json_union+0x2094>
    e64c:	ldr	r2, [sp, #672]	; 0x2a0
    e650:	ldr	ip, [pc, #376]	; e7d0 <MyGame_Example_Any_parse_json_union+0x3990>
    e654:	ldr	r0, [pc, #376]	; e7d4 <MyGame_Example_Any_parse_json_union+0x3994>
    e658:	mov	r3, #1
    e65c:	str	r0, [sp, #8]
    e660:	str	r2, [sp, #4]
    e664:	str	r3, [sp]
    e668:	str	ip, [sp, #12]
    e66c:	mov	r3, #0
    e670:	mov	r2, fp
    e674:	mov	r0, r8
    e678:	bl	0 <flatcc_json_parser_union_type>
    e67c:	b	cee4 <MyGame_Example_Any_parse_json_union+0x20a4>
    e680:	mov	r5, fp
    e684:	mov	r3, #0
    e688:	add	r1, r4, #1
    e68c:	mov	r2, r5
    e690:	mov	r0, r7
    e694:	str	r3, [sp, #640]	; 0x280
    e698:	bl	47c <flatcc_json_parser_space>
    e69c:	mov	fp, r7
    e6a0:	ldr	r3, [sp, #640]	; 0x280
    e6a4:	mov	r4, r0
    e6a8:	b	aed4 <MyGame_Example_Any_parse_json_union+0x94>
    e6ac:	mov	r7, sl
    e6b0:	mov	sl, r1
    e6b4:	b	bfb4 <MyGame_Example_Any_parse_json_union+0x1174>
    e6b8:	mov	sl, r9
    e6bc:	mov	fp, r7
    e6c0:	mov	r9, r1
    e6c4:	b	c64c <MyGame_Example_Any_parse_json_union+0x180c>
    e6c8:	mov	ip, #0
    e6cc:	mov	r3, #10
    e6d0:	mov	r2, r5
    e6d4:	mov	r1, r5
    e6d8:	mov	r0, fp
    e6dc:	str	ip, [sp, #660]	; 0x294
    e6e0:	bl	0 <flatcc_json_parser_set_error>
    e6e4:	ldr	r3, [sp, #660]	; 0x294
    e6e8:	mov	r4, r0
    e6ec:	b	b248 <MyGame_Example_Any_parse_json_union+0x408>
    e6f0:	mov	r1, r0
    e6f4:	mov	r3, #7
    e6f8:	mov	r2, r7
    e6fc:	mov	r0, r9
    e700:	bl	0 <flatcc_json_parser_set_error>
    e704:	mov	r4, r0
    e708:	b	d760 <MyGame_Example_Any_parse_json_union+0x2920>
    e70c:	mov	r5, fp
    e710:	mov	r4, sl
    e714:	mov	fp, r7
    e718:	b	b4ec <MyGame_Example_Any_parse_json_union+0x6ac>
    e71c:	mov	r5, fp
    e720:	mov	ip, #0
    e724:	mov	r3, #10
    e728:	mov	r2, r5
    e72c:	mov	r1, r5
    e730:	mov	r0, r7
    e734:	str	ip, [sp, #640]	; 0x280
    e738:	bl	0 <flatcc_json_parser_set_error>
    e73c:	mov	fp, r7
    e740:	ldr	r3, [sp, #640]	; 0x280
    e744:	mov	r4, r0
    e748:	b	aed4 <MyGame_Example_Any_parse_json_union+0x94>
    e74c:	ldrb	r3, [r0, #2]
    e750:	cmp	r3, #32
    e754:	bls	d6c4 <MyGame_Example_Any_parse_json_union+0x2884>
    e758:	mov	r7, sl
    e75c:	add	sl, r0, #2
    e760:	b	bfb4 <MyGame_Example_Any_parse_json_union+0x1174>
    e764:	ldrb	r3, [r0, #2]
    e768:	cmp	r3, #32
    e76c:	bls	d734 <MyGame_Example_Any_parse_json_union+0x28f4>
    e770:	mov	sl, r9
    e774:	mov	fp, r7
    e778:	add	r9, r0, #2
    e77c:	b	c64c <MyGame_Example_Any_parse_json_union+0x180c>
    e780:	ldrb	r3, [r9, #2]
    e784:	cmp	r3, #32
    e788:	addhi	r1, r9, #2
    e78c:	bls	da2c <MyGame_Example_Any_parse_json_union+0x2bec>
    e790:	b	da3c <MyGame_Example_Any_parse_json_union+0x2bfc>
    e794:	add	r1, r1, #1
    e798:	mov	r2, fp
    e79c:	mov	r0, sl
    e7a0:	bl	47c <flatcc_json_parser_space>
    e7a4:	mov	r9, r0
    e7a8:	b	d394 <MyGame_Example_Any_parse_json_union+0x2554>
    e7ac:	mov	r6, #0
    e7b0:	mov	r7, #0
    e7b4:	b	b424 <MyGame_Example_Any_parse_json_union+0x5e4>
    e7b8:	mov	r8, #0
    e7bc:	mov	r9, #0
    e7c0:	b	b0a8 <MyGame_Example_Any_parse_json_union+0x268>
    e7c4:	nop			; (mov r0, r0)
    e7c8:	.word	0x00000000
    e7cc:	.word	0x79706500
    e7d0:	.word	0x00000000
    e7d4:	.word	0x000002ac

0000e7d8 <verify_parse>:
    e7d8:	cmp	r0, #0
    e7dc:	push	{r4, lr}
    e7e0:	beq	e7f4 <verify_parse+0x1c>
    e7e4:	ldr	r3, [pc, #384]	; e96c <verify_parse+0x194>
    e7e8:	ldr	r2, [r0, #4]
    e7ec:	cmp	r2, r3
    e7f0:	beq	e808 <verify_parse+0x30>
    e7f4:	ldr	r3, [pc, #372]	; e970 <verify_parse+0x198>
    e7f8:	mov	r2, #696	; 0x2b8
    e7fc:	ldr	r1, [pc, #368]	; e974 <verify_parse+0x19c>
    e800:	ldr	r0, [pc, #368]	; e978 <verify_parse+0x1a0>
    e804:	bl	0 <__assert_fail>
    e808:	ldr	r2, [r0]
    e80c:	adds	r3, r0, r2
    e810:	beq	e7f4 <verify_parse+0x1c>
    e814:	ldr	r2, [r0, r2]
    e818:	sub	r2, r3, r2
    e81c:	ldrh	r1, [r2]
    e820:	cmp	r1, #5
    e824:	bhi	e83c <verify_parse+0x64>
    e828:	ldr	r3, [pc, #332]	; e97c <verify_parse+0x1a4>
    e82c:	mov	r2, #45	; 0x2d
    e830:	ldr	r1, [pc, #328]	; e980 <verify_parse+0x1a8>
    e834:	ldr	r0, [pc, #328]	; e984 <verify_parse+0x1ac>
    e838:	bl	0 <__assert_fail>
    e83c:	ldrh	r2, [r2, #4]
    e840:	cmp	r2, #0
    e844:	beq	e828 <verify_parse+0x50>
    e848:	adds	r3, r3, r2
    e84c:	beq	e828 <verify_parse+0x50>
    e850:	vldr	s15, [pc, #264]	; e960 <verify_parse+0x188>
    e854:	vldr	s14, [r3]
    e858:	vcmp.f32	s14, s15
    e85c:	vmrs	APSR_nzcv, fpscr
    e860:	bne	e8cc <verify_parse+0xf4>
    e864:	vldr	s15, [pc, #248]	; e964 <verify_parse+0x18c>
    e868:	vldr	s14, [r3, #4]
    e86c:	vcmp.f32	s14, s15
    e870:	vmrs	APSR_nzcv, fpscr
    e874:	bne	e8e0 <verify_parse+0x108>
    e878:	vldr	s15, [pc, #232]	; e968 <verify_parse+0x190>
    e87c:	vldr	s14, [r3, #8]
    e880:	vcmp.f32	s14, s15
    e884:	vmrs	APSR_nzcv, fpscr
    e888:	bne	e8f4 <verify_parse+0x11c>
    e88c:	vldr	d7, [pc, #196]	; e958 <verify_parse+0x180>
    e890:	vldr	d6, [r3, #16]
    e894:	vcmp.f64	d6, d7
    e898:	vmrs	APSR_nzcv, fpscr
    e89c:	bne	e908 <verify_parse+0x130>
    e8a0:	ldrsb	r2, [r3, #24]
    e8a4:	cmp	r2, #2
    e8a8:	bne	e91c <verify_parse+0x144>
    e8ac:	ldrsh	r2, [r3, #26]
    e8b0:	cmp	r2, #5
    e8b4:	bne	e930 <verify_parse+0x158>
    e8b8:	ldrsb	r3, [r3, #28]
    e8bc:	cmp	r3, #6
    e8c0:	bne	e944 <verify_parse+0x16c>
    e8c4:	mov	r0, #0
    e8c8:	pop	{r4, pc}
    e8cc:	ldr	r3, [pc, #168]	; e97c <verify_parse+0x1a4>
    e8d0:	mov	r2, #46	; 0x2e
    e8d4:	ldr	r1, [pc, #164]	; e980 <verify_parse+0x1a8>
    e8d8:	ldr	r0, [pc, #164]	; e984 <verify_parse+0x1ac>
    e8dc:	bl	0 <__assert_fail>
    e8e0:	ldr	r3, [pc, #148]	; e97c <verify_parse+0x1a4>
    e8e4:	mov	r2, #47	; 0x2f
    e8e8:	ldr	r1, [pc, #144]	; e980 <verify_parse+0x1a8>
    e8ec:	ldr	r0, [pc, #144]	; e984 <verify_parse+0x1ac>
    e8f0:	bl	0 <__assert_fail>
    e8f4:	ldr	r3, [pc, #128]	; e97c <verify_parse+0x1a4>
    e8f8:	mov	r2, #48	; 0x30
    e8fc:	ldr	r1, [pc, #124]	; e980 <verify_parse+0x1a8>
    e900:	ldr	r0, [pc, #124]	; e984 <verify_parse+0x1ac>
    e904:	bl	0 <__assert_fail>
    e908:	ldr	r3, [pc, #108]	; e97c <verify_parse+0x1a4>
    e90c:	mov	r2, #49	; 0x31
    e910:	ldr	r1, [pc, #104]	; e980 <verify_parse+0x1a8>
    e914:	ldr	r0, [pc, #104]	; e984 <verify_parse+0x1ac>
    e918:	bl	0 <__assert_fail>
    e91c:	ldr	r3, [pc, #88]	; e97c <verify_parse+0x1a4>
    e920:	mov	r2, #50	; 0x32
    e924:	ldr	r1, [pc, #84]	; e980 <verify_parse+0x1a8>
    e928:	ldr	r0, [pc, #84]	; e984 <verify_parse+0x1ac>
    e92c:	bl	0 <__assert_fail>
    e930:	ldr	r3, [pc, #68]	; e97c <verify_parse+0x1a4>
    e934:	mov	r2, #53	; 0x35
    e938:	ldr	r1, [pc, #64]	; e980 <verify_parse+0x1a8>
    e93c:	ldr	r0, [pc, #64]	; e984 <verify_parse+0x1ac>
    e940:	bl	0 <__assert_fail>
    e944:	ldr	r3, [pc, #48]	; e97c <verify_parse+0x1a4>
    e948:	mov	r2, #54	; 0x36
    e94c:	ldr	r1, [pc, #44]	; e980 <verify_parse+0x1a8>
    e950:	ldr	r0, [pc, #44]	; e984 <verify_parse+0x1ac>
    e954:	bl	0 <__assert_fail>
    e958:	.word	0x00000000
    e95c:	.word	0x40080000
    e960:	.word	0x3f800000
    e964:	.word	0x40000000
    e968:	.word	0x40400000
    e96c:	.word	0x534e4f4d
    e970:	.word	0x00000000
    e974:	.word	0x00000018
    e978:	.word	0x00000080
    e97c:	.word	0x0000001c
    e980:	.word	0x000000a8
    e984:	.word	0x00000104

0000e988 <test_parse>:
    e988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e98c:	sub	sp, sp, #324	; 0x144
    e990:	ldr	r8, [pc, #1008]	; ed88 <test_parse+0x400>
    e994:	add	r0, sp, #88	; 0x58
    e998:	bl	0 <flatcc_builder_init>
    e99c:	ldr	r0, [r8, #716]	; 0x2cc
    e9a0:	ldr	r1, [pc, #996]	; ed8c <test_parse+0x404>
    e9a4:	bl	0 <fopen>
    e9a8:	subs	r9, r0, #0
    e9ac:	beq	eb0c <test_parse+0x184>
    e9b0:	mov	r2, #2
    e9b4:	mov	r1, #0
    e9b8:	bl	0 <fseek>
    e9bc:	mov	r0, r9
    e9c0:	bl	0 <ftell>
    e9c4:	cmp	r0, #10240	; 0x2800
    e9c8:	mov	sl, r0
    e9cc:	bhi	eb04 <test_parse+0x17c>
    e9d0:	mov	r0, r9
    e9d4:	bl	0 <rewind>
    e9d8:	cmp	sl, #0
    e9dc:	movne	r0, sl
    e9e0:	moveq	r0, #1
    e9e4:	bl	0 <malloc>
    e9e8:	subs	r5, r0, #0
    e9ec:	beq	eb04 <test_parse+0x17c>
    e9f0:	mov	r6, #0
    e9f4:	mov	fp, #1
    e9f8:	b	ea00 <test_parse+0x78>
    e9fc:	add	r6, r6, r0
    ea00:	add	r4, r5, r6
    ea04:	mov	r0, r4
    ea08:	mov	r3, r9
    ea0c:	sub	r2, sl, r6
    ea10:	mov	r1, fp
    ea14:	bl	0 <fread>
    ea18:	cmp	r0, #0
    ea1c:	bne	e9fc <test_parse+0x74>
    ea20:	cmp	sl, r6
    ea24:	mov	r7, r0
    ea28:	mov	r0, r9
    ea2c:	bne	eb34 <test_parse+0x1ac>
    ea30:	bl	0 <fclose>
    ea34:	mov	r2, #44	; 0x2c
    ea38:	mov	r1, r7
    ea3c:	add	r0, sp, #44	; 0x2c
    ea40:	bl	0 <memset>
    ea44:	mov	ip, #1
    ea48:	add	r0, sp, #88	; 0x58
    ea4c:	mov	r3, r7
    ea50:	mov	r2, r7
    ea54:	ldr	r1, [pc, #820]	; ed90 <test_parse+0x408>
    ea58:	str	r0, [sp, #44]	; 0x2c
    ea5c:	str	r5, [sp, #48]	; 0x30
    ea60:	str	r5, [sp, #72]	; 0x48
    ea64:	str	r4, [sp, #76]	; 0x4c
    ea68:	str	r5, [sp, #80]	; 0x50
    ea6c:	str	ip, [sp, #60]	; 0x3c
    ea70:	bl	0 <flatcc_builder_start_buffer>
    ea74:	cmp	r0, #0
    ea78:	bne	ed7c <test_parse+0x3f4>
    ea7c:	add	r3, sp, #24
    ea80:	mov	r2, r4
    ea84:	add	r0, sp, #44	; 0x2c
    ea88:	mov	r1, r5
    ea8c:	bl	6dbc <MyGame_Example_Monster_parse_json_table>
    ea90:	ldr	r3, [sp, #68]	; 0x44
    ea94:	cmp	r3, #0
    ea98:	str	r3, [sp, #8]
    ea9c:	beq	eb44 <test_parse+0x1bc>
    eaa0:	ldr	r3, [pc, #748]	; ed94 <test_parse+0x40c>
    eaa4:	ldr	r2, [sp, #48]	; 0x30
    eaa8:	ldr	r4, [sp, #80]	; 0x50
    eaac:	ldr	r0, [sp, #8]
    eab0:	sub	r4, r4, r2
    eab4:	ldr	r7, [r8, #716]	; 0x2cc
    eab8:	ldr	r6, [r3]
    eabc:	ldr	r8, [sp, #60]	; 0x3c
    eac0:	bl	0 <flatcc_json_parser_error_string>
    eac4:	mvn	ip, #0
    eac8:	add	r4, r4, #1
    eacc:	str	r4, [sp]
    ead0:	mov	r3, r8
    ead4:	mov	r2, r7
    ead8:	ldr	r1, [pc, #696]	; ed98 <test_parse+0x410>
    eadc:	stmib	sp, {r0, ip}
    eae0:	mov	r0, r6
    eae4:	bl	0 <fprintf>
    eae8:	mov	r0, r5
    eaec:	bl	0 <free>
    eaf0:	add	r0, sp, #88	; 0x58
    eaf4:	bl	0 <flatcc_builder_clear>
    eaf8:	ldr	r0, [sp, #8]
    eafc:	add	sp, sp, #324	; 0x144
    eb00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb04:	mov	r0, r9
    eb08:	bl	0 <fclose>
    eb0c:	ldr	r3, [pc, #640]	; ed94 <test_parse+0x40c>
    eb10:	ldr	r2, [r8, #716]	; 0x2cc
    eb14:	ldr	r1, [pc, #640]	; ed9c <test_parse+0x414>
    eb18:	ldr	r0, [r3]
    eb1c:	bl	0 <fprintf>
    eb20:	mvn	r3, #0
    eb24:	str	r3, [sp, #8]
    eb28:	ldr	r0, [sp, #8]
    eb2c:	add	sp, sp, #324	; 0x144
    eb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb34:	bl	0 <fclose>
    eb38:	mov	r0, r5
    eb3c:	bl	0 <free>
    eb40:	b	eb0c <test_parse+0x184>
    eb44:	ldr	r1, [sp, #24]
    eb48:	add	r0, sp, #88	; 0x58
    eb4c:	bl	0 <flatcc_builder_end_buffer>
    eb50:	cmp	r0, #0
    eb54:	beq	ed7c <test_parse+0x3f4>
    eb58:	ldr	r3, [pc, #564]	; ed94 <test_parse+0x40c>
    eb5c:	ldr	r2, [r8, #716]	; 0x2cc
    eb60:	ldr	r1, [pc, #568]	; eda0 <test_parse+0x418>
    eb64:	ldr	r0, [r3]
    eb68:	ldr	r3, [sp, #60]	; 0x3c
    eb6c:	str	r5, [sp, #84]	; 0x54
    eb70:	bl	0 <fprintf>
    eb74:	add	r1, sp, #20
    eb78:	add	r0, sp, #88	; 0x58
    eb7c:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    eb80:	ldr	r3, [pc, #540]	; eda4 <test_parse+0x41c>
    eb84:	ldr	sl, [sp, #20]
    eb88:	ldr	r2, [pc, #536]	; eda8 <test_parse+0x420>
    eb8c:	ldr	r7, [r3]
    eb90:	ldr	r1, [pc, #532]	; edac <test_parse+0x424>
    eb94:	str	r0, [sp, #12]
    eb98:	mov	r0, r7
    eb9c:	bl	0 <fprintf>
    eba0:	cmp	sl, #0
    eba4:	beq	ec7c <test_parse+0x2f4>
    eba8:	ldr	r3, [sp, #12]
    ebac:	ldr	fp, [sp, #8]
    ebb0:	sub	r8, r3, #1
    ebb4:	mov	r4, fp
    ebb8:	b	ec1c <test_parse+0x294>
    ebbc:	cmp	r4, #0
    ebc0:	beq	ebc8 <test_parse+0x240>
    ebc4:	bl	0 <fprintf>
    ebc8:	mov	r2, r4
    ebcc:	ldr	r1, [pc, #476]	; edb0 <test_parse+0x428>
    ebd0:	mov	r0, r7
    ebd4:	bl	0 <fprintf>
    ebd8:	ldrb	r2, [r8, #1]
    ebdc:	ldr	r1, [pc, #464]	; edb4 <test_parse+0x42c>
    ebe0:	mov	r0, r7
    ebe4:	bl	0 <fprintf>
    ebe8:	ldrb	r2, [r8, #1]!
    ebec:	add	r3, sp, #320	; 0x140
    ebf0:	add	r3, r3, r9
    ebf4:	sub	r1, r2, #32
    ebf8:	cmp	r1, #94	; 0x5e
    ebfc:	addls	r3, sp, #320	; 0x140
    ec00:	addls	r3, r3, r9
    ec04:	add	r4, r4, #1
    ec08:	movhi	r2, #46	; 0x2e
    ec0c:	cmp	sl, r4
    ec10:	strb	r2, [r3, #-296]	; 0xfffffed8
    ec14:	strb	fp, [r3, #-295]	; 0xfffffed9
    ec18:	beq	ec48 <test_parse+0x2c0>
    ec1c:	ands	r9, r4, #15
    ec20:	add	r2, sp, #24
    ec24:	ldr	r1, [pc, #396]	; edb8 <test_parse+0x430>
    ec28:	mov	r0, r7
    ec2c:	beq	ebbc <test_parse+0x234>
    ec30:	tst	r4, #7
    ec34:	bne	ebd8 <test_parse+0x250>
    ec38:	mov	r1, r7
    ec3c:	mov	r0, #32
    ec40:	bl	0 <fputc>
    ec44:	b	ebd8 <test_parse+0x250>
    ec48:	tst	r4, #15
    ec4c:	beq	ec7c <test_parse+0x2f4>
    ec50:	ldr	sl, [pc, #356]	; edbc <test_parse+0x434>
    ec54:	mov	r9, #3
    ec58:	mov	r8, #1
    ec5c:	add	r4, r4, #1
    ec60:	mov	r3, r7
    ec64:	mov	r2, r9
    ec68:	mov	r1, r8
    ec6c:	mov	r0, sl
    ec70:	bl	0 <fwrite>
    ec74:	tst	r4, #15
    ec78:	bne	ec5c <test_parse+0x2d4>
    ec7c:	add	r2, sp, #24
    ec80:	mov	r0, r7
    ec84:	ldr	r1, [pc, #300]	; edb8 <test_parse+0x430>
    ec88:	bl	0 <fprintf>
    ec8c:	ldr	r3, [pc, #256]	; ed94 <test_parse+0x40c>
    ec90:	mov	r2, r6
    ec94:	ldr	r1, [pc, #292]	; edc0 <test_parse+0x438>
    ec98:	ldr	r0, [r3]
    ec9c:	ldr	r3, [sp, #20]
    eca0:	bl	0 <fprintf>
    eca4:	ldr	r0, [sp, #12]
    eca8:	bl	e7d8 <verify_parse>
    ecac:	ldr	r3, [pc, #240]	; eda4 <test_parse+0x41c>
    ecb0:	ldr	r8, [sp, #20]
    ecb4:	ldr	r2, [pc, #264]	; edc4 <test_parse+0x43c>
    ecb8:	ldr	r7, [r3]
    ecbc:	ldr	r1, [pc, #260]	; edc8 <test_parse+0x440>
    ecc0:	mov	r0, r7
    ecc4:	bl	0 <fprintf>
    ecc8:	cmp	r8, #0
    eccc:	beq	ed48 <test_parse+0x3c0>
    ecd0:	ldr	r3, [sp, #12]
    ecd4:	ldr	fp, [pc, #240]	; edcc <test_parse+0x444>
    ecd8:	ldr	r9, [pc, #240]	; edd0 <test_parse+0x448>
    ecdc:	sub	r6, r3, #1
    ece0:	mov	r4, #0
    ece4:	mov	sl, #1
    ece8:	b	ed10 <test_parse+0x388>
    ecec:	tst	r4, #7
    ecf0:	beq	ed30 <test_parse+0x3a8>
    ecf4:	add	r4, r4, #1
    ecf8:	ldrb	r2, [r6, #1]!
    ecfc:	mov	r1, r9
    ed00:	mov	r0, r7
    ed04:	bl	0 <fprintf>
    ed08:	cmp	r8, r4
    ed0c:	beq	ed48 <test_parse+0x3c0>
    ed10:	tst	r4, #15
    ed14:	bne	ecec <test_parse+0x364>
    ed18:	mov	r3, r7
    ed1c:	mov	r2, #4
    ed20:	mov	r1, sl
    ed24:	mov	r0, fp
    ed28:	bl	0 <fwrite>
    ed2c:	b	ecf4 <test_parse+0x36c>
    ed30:	mov	r3, r7
    ed34:	mov	r2, #3
    ed38:	mov	r1, sl
    ed3c:	ldr	r0, [pc, #120]	; edbc <test_parse+0x434>
    ed40:	bl	0 <fwrite>
    ed44:	b	ecf4 <test_parse+0x36c>
    ed48:	mov	r3, r7
    ed4c:	mov	r2, #4
    ed50:	mov	r1, #1
    ed54:	ldr	r0, [pc, #120]	; edd4 <test_parse+0x44c>
    ed58:	bl	0 <fwrite>
    ed5c:	add	r0, sp, #88	; 0x58
    ed60:	bl	0 <flatcc_builder_reset>
    ed64:	ldr	r3, [sp, #12]
    ed68:	cmp	r3, #0
    ed6c:	beq	eae8 <test_parse+0x160>
    ed70:	ldr	r0, [sp, #12]
    ed74:	bl	0 <flatcc_builder_aligned_free>
    ed78:	b	eae8 <test_parse+0x160>
    ed7c:	ldr	r3, [sp, #68]	; 0x44
    ed80:	str	r3, [sp, #8]
    ed84:	b	eaa0 <test_parse+0x118>
    ed88:	.word	0x00000000
    ed8c:	.word	0x00000108
    ed90:	.word	0x0000010c
    ed94:	.word	0x00000000
    ed98:	.word	0x00000208
    ed9c:	.word	0x000001e4
    eda0:	.word	0x00000114
    eda4:	.word	0x00000000
    eda8:	.word	0x00000138
    edac:	.word	0x00000158
    edb0:	.word	0x000001b4
    edb4:	.word	0x000001bc
    edb8:	.word	0x00000160
    edbc:	.word	0x000001c4
    edc0:	.word	0x00000168
    edc4:	.word	0x0000018c
    edc8:	.word	0x00000194
    edcc:	.word	0x000001d0
    edd0:	.word	0x000001d8
    edd4:	.word	0x000001c8

Disassembly of section .text.unlikely:

00000000 <flatcc_json_parser_symbolic_uint64>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	sub	sp, sp, #36	; 0x24
   8:	mov	r6, #0
   c:	ldr	r8, [sp, #72]	; 0x48
  10:	mov	r7, #0
  14:	cmp	r1, r2
  18:	strd	r6, [r8]
  1c:	mov	r5, r1
  20:	mov	r4, r2
  24:	mov	r9, r3
  28:	mov	r6, r0
  2c:	beq	64 <flatcc_json_parser_symbolic_uint64+0x64>
  30:	ldrb	r3, [r1]
  34:	cmp	r3, #34	; 0x22
  38:	moveq	r3, #0
  3c:	addeq	r5, r1, #1
  40:	streq	r3, [r0, #12]
  44:	beq	64 <flatcc_json_parser_symbolic_uint64+0x64>
  48:	cmp	r3, #46	; 0x2e
  4c:	movne	r3, #1
  50:	strne	r3, [r0, #12]
  54:	bne	64 <flatcc_json_parser_symbolic_uint64+0x64>
  58:	mov	r3, #5
  5c:	bl	0 <flatcc_json_parser_set_error>
  60:	mov	r5, r0
  64:	ldr	r3, [r6, #12]
  68:	cmp	r3, #0
  6c:	bne	84 <flatcc_json_parser_symbolic_uint64+0x84>
  70:	mov	r1, r5
  74:	mov	r2, r4
  78:	mov	r0, r6
  7c:	bl	47c <flatcc_json_parser_space>
  80:	mov	r5, r0
  84:	cmp	r4, r5
  88:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
  8c:	mov	r2, #0
  90:	mov	r3, #0
  94:	mov	sl, #0
  98:	strd	r2, [sp, #8]
  9c:	mov	fp, r9
  a0:	add	r3, sp, #20
  a4:	str	r3, [sp, #4]
  a8:	add	r3, sp, #24
  ac:	str	r3, [sp]
  b0:	ldr	r7, [fp]
  b4:	add	r3, sp, #16
  b8:	mov	r2, r4
  bc:	mov	r1, r5
  c0:	mov	r0, r6
  c4:	blx	r7
  c8:	cmp	r4, r0
  cc:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
  d0:	cmp	r5, r0
  d4:	bne	100 <flatcc_json_parser_symbolic_uint64+0x100>
  d8:	ldr	r3, [fp, #4]!
  dc:	cmp	r3, #0
  e0:	bne	a0 <flatcc_json_parser_symbolic_uint64+0xa0>
  e4:	mov	r2, r4
  e8:	mov	r1, r5
  ec:	mov	r0, r6
  f0:	mov	r3, #23
  f4:	bl	0 <flatcc_json_parser_set_error>
  f8:	mov	r4, r0
  fc:	b	198 <flatcc_json_parser_symbolic_uint64+0x198>
 100:	cmp	sl, #0
 104:	mov	r7, r0
 108:	beq	134 <flatcc_json_parser_symbolic_uint64+0x134>
 10c:	ldr	r3, [r6, #12]
 110:	cmp	r3, #0
 114:	beq	134 <flatcc_json_parser_symbolic_uint64+0x134>
 118:	mov	r2, r4
 11c:	mov	r1, r7
 120:	mov	r0, r6
 124:	mov	r3, #14
 128:	bl	0 <flatcc_json_parser_set_error>
 12c:	mov	r4, r0
 130:	b	198 <flatcc_json_parser_symbolic_uint64+0x198>
 134:	ldr	r3, [sp, #16]
 138:	cmp	r3, #0
 13c:	ldrdeq	r2, [sp, #24]
 140:	strdeq	r2, [sp, #8]
 144:	beq	164 <flatcc_json_parser_symbolic_uint64+0x164>
 148:	mov	r3, #8
 14c:	mov	r2, r4
 150:	mov	r1, r7
 154:	mov	r0, r6
 158:	bl	0 <flatcc_json_parser_set_error>
 15c:	cmp	r4, r0
 160:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
 164:	ldrd	r2, [r8]
 168:	ldrd	r0, [sp, #8]
 16c:	ldr	ip, [sp, #20]
 170:	add	sl, sl, #1
 174:	adds	r0, r0, r2
 178:	adc	r1, r1, r3
 17c:	mov	r2, r0
 180:	mov	r3, r1
 184:	cmp	ip, #0
 188:	strd	r2, [r8]
 18c:	movne	r5, r7
 190:	bne	9c <flatcc_json_parser_symbolic_uint64+0x9c>
 194:	mov	r4, r7
 198:	mov	r0, r4
 19c:	add	sp, sp, #36	; 0x24
 1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, lr}
   4:	mov	r2, #16
   8:	ldr	r5, [pc, #84]	; 64 <main+0x64>
   c:	mov	r4, r0
  10:	mov	r6, r1
  14:	ldr	r3, [r5]
  18:	mov	r1, #1
  1c:	ldr	r0, [pc, #68]	; 68 <main+0x68>
  20:	bl	0 <fwrite>
  24:	sub	r3, r4, #1
  28:	cmp	r3, #1
  2c:	bhi	48 <main+0x48>
  30:	cmp	r4, #2
  34:	ldreq	r3, [pc, #48]	; 6c <main+0x6c>
  38:	ldreq	r2, [r6, #4]
  3c:	pop	{r4, r5, r6, lr}
  40:	streq	r2, [r3, #716]	; 0x2cc
  44:	b	e988 <test_parse>
  48:	ldr	r3, [r5]
  4c:	mov	r2, #63	; 0x3f
  50:	mov	r1, #1
  54:	ldr	r0, [pc, #20]	; 70 <main+0x70>
  58:	bl	0 <fwrite>
  5c:	mov	r0, #1
  60:	bl	0 <exit>
  64:	.word	0x00000000
  68:	.word	0x00000218
  6c:	.word	0x00000000
  70:	.word	0x0000022c
