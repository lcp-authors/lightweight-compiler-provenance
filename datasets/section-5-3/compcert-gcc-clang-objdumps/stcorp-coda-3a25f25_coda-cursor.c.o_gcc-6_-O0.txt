
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	ldr	r3, [fp, #-8]
      14:	cmp	r3, #0
      18:	beq	ac <coda_dynamic_type_delete+0xac>
      1c:	ldr	r3, [fp, #-8]
      20:	ldr	r3, [r3]
      24:	cmp	r3, #101	; 0x65
      28:	beq	b4 <coda_dynamic_type_delete+0xb4>
      2c:	cmp	r3, #101	; 0x65
      30:	bhi	48 <coda_dynamic_type_delete+0x48>
      34:	cmp	r3, #1
      38:	bls	6c <coda_dynamic_type_delete+0x6c>
      3c:	cmp	r3, #100	; 0x64
      40:	beq	78 <coda_dynamic_type_delete+0x78>
      44:	b	c0 <coda_dynamic_type_delete+0xc0>
      48:	cmp	r3, #103	; 0x67
      4c:	beq	84 <coda_dynamic_type_delete+0x84>
      50:	cmp	r3, #103	; 0x67
      54:	bcc	bc <coda_dynamic_type_delete+0xbc>
      58:	cmp	r3, #104	; 0x68
      5c:	beq	90 <coda_dynamic_type_delete+0x90>
      60:	cmp	r3, #105	; 0x69
      64:	beq	9c <coda_dynamic_type_delete+0x9c>
      68:	b	c0 <coda_dynamic_type_delete+0xc0>
      6c:	ldr	r0, [fp, #-8]
      70:	bl	0 <coda_type_release>
      74:	b	c0 <coda_dynamic_type_delete+0xc0>
      78:	ldr	r0, [fp, #-8]
      7c:	bl	0 <coda_mem_type_delete>
      80:	b	c0 <coda_dynamic_type_delete+0xc0>
      84:	ldr	r0, [fp, #-8]
      88:	bl	0 <coda_cdf_type_delete>
      8c:	b	c0 <coda_dynamic_type_delete+0xc0>
      90:	ldr	r0, [fp, #-8]
      94:	bl	0 <coda_netcdf_type_delete>
      98:	b	c0 <coda_dynamic_type_delete+0xc0>
      9c:	ldr	r0, [fp, #-8]
      a0:	bl	0 <coda_grib_type_delete>
      a4:	nop			; (mov r0, r0)
      a8:	b	c0 <coda_dynamic_type_delete+0xc0>
      ac:	nop			; (mov r0, r0)
      b0:	b	c0 <coda_dynamic_type_delete+0xc0>
      b4:	nop			; (mov r0, r0)
      b8:	b	c0 <coda_dynamic_type_delete+0xc0>
      bc:	nop			; (mov r0, r0)
      c0:	sub	sp, fp, #4
      c4:	pop	{fp, pc}

000000c8 <coda_cursor_compare>:
      c8:	push	{fp}		; (str fp, [sp, #-4]!)
      cc:	add	fp, sp, #0
      d0:	sub	sp, sp, #20
      d4:	str	r0, [fp, #-16]
      d8:	str	r1, [fp, #-20]	; 0xffffffec
      dc:	mov	r3, #0
      e0:	str	r3, [fp, #-8]
      e4:	b	170 <coda_cursor_compare+0xa8>
      e8:	ldr	r3, [fp, #-8]
      ec:	cmp	r3, #0
      f0:	ble	164 <coda_cursor_compare+0x9c>
      f4:	ldr	r2, [fp, #-16]
      f8:	ldr	r3, [fp, #-8]
      fc:	lsl	r3, r3, #4
     100:	add	r3, r2, r3
     104:	ldr	r2, [r3, #12]
     108:	ldr	r1, [fp, #-20]	; 0xffffffec
     10c:	ldr	r3, [fp, #-8]
     110:	lsl	r3, r3, #4
     114:	add	r3, r1, r3
     118:	ldr	r3, [r3, #12]
     11c:	cmp	r2, r3
     120:	ble	12c <coda_cursor_compare+0x64>
     124:	mov	r3, #1
     128:	b	1d4 <coda_cursor_compare+0x10c>
     12c:	ldr	r2, [fp, #-16]
     130:	ldr	r3, [fp, #-8]
     134:	lsl	r3, r3, #4
     138:	add	r3, r2, r3
     13c:	ldr	r2, [r3, #12]
     140:	ldr	r1, [fp, #-20]	; 0xffffffec
     144:	ldr	r3, [fp, #-8]
     148:	lsl	r3, r3, #4
     14c:	add	r3, r1, r3
     150:	ldr	r3, [r3, #12]
     154:	cmp	r2, r3
     158:	bge	164 <coda_cursor_compare+0x9c>
     15c:	mvn	r3, #0
     160:	b	1d4 <coda_cursor_compare+0x10c>
     164:	ldr	r3, [fp, #-8]
     168:	add	r3, r3, #1
     16c:	str	r3, [fp, #-8]
     170:	ldr	r3, [fp, #-16]
     174:	ldr	r2, [r3, #4]
     178:	ldr	r3, [fp, #-8]
     17c:	cmp	r2, r3
     180:	ble	198 <coda_cursor_compare+0xd0>
     184:	ldr	r3, [fp, #-20]	; 0xffffffec
     188:	ldr	r2, [r3, #4]
     18c:	ldr	r3, [fp, #-8]
     190:	cmp	r2, r3
     194:	bgt	e8 <coda_cursor_compare+0x20>
     198:	ldr	r3, [fp, #-16]
     19c:	ldr	r2, [r3, #4]
     1a0:	ldr	r3, [fp, #-8]
     1a4:	cmp	r2, r3
     1a8:	ble	1b4 <coda_cursor_compare+0xec>
     1ac:	mov	r3, #1
     1b0:	b	1d4 <coda_cursor_compare+0x10c>
     1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
     1b8:	ldr	r2, [r3, #4]
     1bc:	ldr	r3, [fp, #-8]
     1c0:	cmp	r2, r3
     1c4:	ble	1d0 <coda_cursor_compare+0x108>
     1c8:	mvn	r3, #0
     1cc:	b	1d4 <coda_cursor_compare+0x10c>
     1d0:	mov	r3, #0
     1d4:	mov	r0, r3
     1d8:	add	sp, fp, #0
     1dc:	pop	{fp}		; (ldr fp, [sp], #4)
     1e0:	bx	lr

000001e4 <coda_cursor_print_path>:
     1e4:	push	{fp, lr}
     1e8:	add	fp, sp, #4
     1ec:	sub	sp, sp, #32
     1f0:	str	r0, [fp, #-32]	; 0xffffffe0
     1f4:	str	r1, [fp, #-36]	; 0xffffffdc
     1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     1fc:	ldr	r3, [r3, #4]
     200:	cmp	r3, #1
     204:	bgt	230 <coda_cursor_print_path+0x4c>
     208:	ldr	r3, [fp, #-36]	; 0xffffffdc
     20c:	ldr	r0, [pc, #580]	; 458 <coda_cursor_print_path+0x274>
     210:	blx	r3
     214:	mov	r3, r0
     218:	cmp	r3, #0
     21c:	bge	228 <coda_cursor_print_path+0x44>
     220:	mvn	r3, #0
     224:	b	44c <coda_cursor_print_path+0x268>
     228:	mov	r3, #0
     22c:	b	44c <coda_cursor_print_path+0x268>
     230:	mov	r3, #1
     234:	str	r3, [fp, #-8]
     238:	b	434 <coda_cursor_print_path+0x250>
     23c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     240:	ldr	r3, [fp, #-8]
     244:	lsl	r3, r3, #4
     248:	add	r3, r2, r3
     24c:	ldr	r3, [r3, #12]
     250:	str	r3, [fp, #-12]
     254:	ldr	r3, [fp, #-12]
     258:	cmn	r3, #1
     25c:	bne	298 <coda_cursor_print_path+0xb4>
     260:	ldr	r3, [fp, #-8]
     264:	cmp	r3, #1
     268:	bne	274 <coda_cursor_print_path+0x90>
     26c:	ldr	r2, [pc, #488]	; 45c <coda_cursor_print_path+0x278>
     270:	b	278 <coda_cursor_print_path+0x94>
     274:	ldr	r2, [pc, #484]	; 460 <coda_cursor_print_path+0x27c>
     278:	ldr	r3, [fp, #-36]	; 0xffffffdc
     27c:	mov	r0, r2
     280:	blx	r3
     284:	mov	r3, r0
     288:	cmp	r3, #0
     28c:	bge	428 <coda_cursor_print_path+0x244>
     290:	mvn	r3, #0
     294:	b	44c <coda_cursor_print_path+0x268>
     298:	ldr	r3, [fp, #-8]
     29c:	sub	r3, r3, #1
     2a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     2a4:	lsl	r3, r3, #4
     2a8:	add	r3, r2, r3
     2ac:	ldr	r3, [r3, #8]
     2b0:	ldr	r3, [r3]
     2b4:	cmp	r3, #99	; 0x63
     2b8:	bhi	2d8 <coda_cursor_print_path+0xf4>
     2bc:	ldr	r3, [fp, #-8]
     2c0:	sub	r3, r3, #1
     2c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
     2c8:	lsl	r3, r3, #4
     2cc:	add	r3, r2, r3
     2d0:	ldr	r3, [r3, #8]
     2d4:	b	2f4 <coda_cursor_print_path+0x110>
     2d8:	ldr	r3, [fp, #-8]
     2dc:	sub	r3, r3, #1
     2e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     2e4:	lsl	r3, r3, #4
     2e8:	add	r3, r2, r3
     2ec:	ldr	r3, [r3, #8]
     2f0:	ldr	r3, [r3, #4]
     2f4:	str	r3, [fp, #-16]
     2f8:	sub	r3, fp, #20
     2fc:	mov	r1, r3
     300:	ldr	r0, [fp, #-16]
     304:	bl	0 <coda_type_get_class>
     308:	mov	r3, r0
     30c:	cmp	r3, #0
     310:	beq	31c <coda_cursor_print_path+0x138>
     314:	mvn	r3, #0
     318:	b	44c <coda_cursor_print_path+0x268>
     31c:	ldr	r3, [fp, #-20]	; 0xffffffec
     320:	cmp	r3, #0
     324:	beq	36c <coda_cursor_print_path+0x188>
     328:	cmp	r3, #1
     32c:	bne	408 <coda_cursor_print_path+0x224>
     330:	ldr	r3, [fp, #-8]
     334:	cmp	r3, #1
     338:	bne	344 <coda_cursor_print_path+0x160>
     33c:	ldr	r2, [pc, #288]	; 464 <coda_cursor_print_path+0x280>
     340:	b	348 <coda_cursor_print_path+0x164>
     344:	ldr	r2, [pc, #284]	; 468 <coda_cursor_print_path+0x284>
     348:	ldr	r3, [fp, #-36]	; 0xffffffdc
     34c:	ldr	r1, [fp, #-12]
     350:	mov	r0, r2
     354:	blx	r3
     358:	mov	r3, r0
     35c:	cmp	r3, #0
     360:	bge	41c <coda_cursor_print_path+0x238>
     364:	mvn	r3, #0
     368:	b	44c <coda_cursor_print_path+0x268>
     36c:	sub	r3, fp, #24
     370:	mov	r2, r3
     374:	ldr	r1, [fp, #-12]
     378:	ldr	r0, [fp, #-16]
     37c:	bl	0 <coda_type_get_record_field_name>
     380:	mov	r3, r0
     384:	cmp	r3, #0
     388:	beq	394 <coda_cursor_print_path+0x1b0>
     38c:	mvn	r3, #0
     390:	b	44c <coda_cursor_print_path+0x268>
     394:	ldr	r3, [fp, #-8]
     398:	cmp	r3, #1
     39c:	beq	3c0 <coda_cursor_print_path+0x1dc>
     3a0:	ldr	r3, [fp, #-8]
     3a4:	sub	r3, r3, #1
     3a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     3ac:	lsl	r3, r3, #4
     3b0:	add	r3, r2, r3
     3b4:	ldr	r3, [r3, #12]
     3b8:	cmn	r3, #1
     3bc:	beq	3e0 <coda_cursor_print_path+0x1fc>
     3c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     3c4:	ldr	r0, [pc, #140]	; 458 <coda_cursor_print_path+0x274>
     3c8:	blx	r3
     3cc:	mov	r3, r0
     3d0:	cmp	r3, #0
     3d4:	bge	3e0 <coda_cursor_print_path+0x1fc>
     3d8:	mvn	r3, #0
     3dc:	b	404 <coda_cursor_print_path+0x220>
     3e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     3e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     3e8:	mov	r1, r2
     3ec:	ldr	r0, [pc, #120]	; 46c <coda_cursor_print_path+0x288>
     3f0:	blx	r3
     3f4:	mov	r3, r0
     3f8:	cmp	r3, #0
     3fc:	bge	424 <coda_cursor_print_path+0x240>
     400:	mvn	r3, #0
     404:	b	44c <coda_cursor_print_path+0x268>
     408:	ldr	r3, [pc, #96]	; 470 <coda_cursor_print_path+0x28c>
     40c:	ldr	r2, [pc, #96]	; 474 <coda_cursor_print_path+0x290>
     410:	ldr	r1, [pc, #96]	; 478 <coda_cursor_print_path+0x294>
     414:	ldr	r0, [pc, #96]	; 47c <coda_cursor_print_path+0x298>
     418:	bl	0 <__assert_fail>
     41c:	nop			; (mov r0, r0)
     420:	b	428 <coda_cursor_print_path+0x244>
     424:	nop			; (mov r0, r0)
     428:	ldr	r3, [fp, #-8]
     42c:	add	r3, r3, #1
     430:	str	r3, [fp, #-8]
     434:	ldr	r3, [fp, #-32]	; 0xffffffe0
     438:	ldr	r2, [r3, #4]
     43c:	ldr	r3, [fp, #-8]
     440:	cmp	r2, r3
     444:	bgt	23c <coda_cursor_print_path+0x58>
     448:	mov	r3, #0
     44c:	mov	r0, r3
     450:	sub	sp, fp, #4
     454:	pop	{fp, pc}
     458:	.word	0x00000000
     45c:	.word	0x00000004
     460:	.word	0x00000008
     464:	.word	0x0000000c
     468:	.word	0x00000014
     46c:	.word	0x0000001c
     470:	.word	0x00000578
     474:	.word	0x00000131
     478:	.word	0x00000020
     47c:	.word	0x0000006c

00000480 <coda_cursor_set_product>:
     480:	push	{fp, lr}
     484:	add	fp, sp, #4
     488:	sub	sp, sp, #8
     48c:	str	r0, [fp, #-8]
     490:	str	r1, [fp, #-12]
     494:	ldr	r3, [fp, #-8]
     498:	cmp	r3, #0
     49c:	bne	4bc <coda_cursor_set_product+0x3c>
     4a0:	ldr	r3, [pc, #332]	; 5f4 <coda_cursor_set_product+0x174>
     4a4:	ldr	r2, [pc, #332]	; 5f8 <coda_cursor_set_product+0x178>
     4a8:	ldr	r1, [pc, #332]	; 5fc <coda_cursor_set_product+0x17c>
     4ac:	mvn	r0, #99	; 0x63
     4b0:	bl	0 <coda_set_error>
     4b4:	mvn	r3, #0
     4b8:	b	5e8 <coda_cursor_set_product+0x168>
     4bc:	ldr	r3, [fp, #-12]
     4c0:	cmp	r3, #0
     4c4:	bne	4e4 <coda_cursor_set_product+0x64>
     4c8:	ldr	r3, [pc, #304]	; 600 <coda_cursor_set_product+0x180>
     4cc:	ldr	r2, [pc, #292]	; 5f8 <coda_cursor_set_product+0x178>
     4d0:	ldr	r1, [pc, #300]	; 604 <coda_cursor_set_product+0x184>
     4d4:	mvn	r0, #99	; 0x63
     4d8:	bl	0 <coda_set_error>
     4dc:	mvn	r3, #0
     4e0:	b	5e8 <coda_cursor_set_product+0x168>
     4e4:	ldr	r3, [fp, #-12]
     4e8:	ldr	r3, [r3, #16]
     4ec:	cmp	r3, #9
     4f0:	ldrls	pc, [pc, r3, lsl #2]
     4f4:	b	5d4 <coda_cursor_set_product+0x154>
     4f8:	.word	0x00000520
     4fc:	.word	0x00000520
     500:	.word	0x00000534
     504:	.word	0x00000584
     508:	.word	0x00000598
     50c:	.word	0x00000548
     510:	.word	0x0000055c
     514:	.word	0x00000570
     518:	.word	0x000005ac
     51c:	.word	0x000005c0
     520:	ldr	r1, [fp, #-12]
     524:	ldr	r0, [fp, #-8]
     528:	bl	0 <coda_ascbin_cursor_set_product>
     52c:	mov	r3, r0
     530:	b	5e8 <coda_cursor_set_product+0x168>
     534:	ldr	r1, [fp, #-12]
     538:	ldr	r0, [fp, #-8]
     53c:	bl	0 <coda_xml_cursor_set_product>
     540:	mov	r3, r0
     544:	b	5e8 <coda_cursor_set_product+0x168>
     548:	ldr	r1, [fp, #-12]
     54c:	ldr	r0, [fp, #-8]
     550:	bl	0 <coda_cdf_cursor_set_product>
     554:	mov	r3, r0
     558:	b	5e8 <coda_cursor_set_product+0x168>
     55c:	ldr	r1, [fp, #-12]
     560:	ldr	r0, [fp, #-8]
     564:	bl	0 <coda_netcdf_cursor_set_product>
     568:	mov	r3, r0
     56c:	b	5e8 <coda_cursor_set_product+0x168>
     570:	ldr	r1, [fp, #-12]
     574:	ldr	r0, [fp, #-8]
     578:	bl	0 <coda_grib_cursor_set_product>
     57c:	mov	r3, r0
     580:	b	5e8 <coda_cursor_set_product+0x168>
     584:	mov	r1, #0
     588:	mvn	r0, #10
     58c:	bl	0 <coda_set_error>
     590:	mvn	r3, #0
     594:	b	5e8 <coda_cursor_set_product+0x168>
     598:	mov	r1, #0
     59c:	mvn	r0, #12
     5a0:	bl	0 <coda_set_error>
     5a4:	mvn	r3, #0
     5a8:	b	5e8 <coda_cursor_set_product+0x168>
     5ac:	ldr	r1, [fp, #-12]
     5b0:	ldr	r0, [fp, #-8]
     5b4:	bl	0 <coda_rinex_cursor_set_product>
     5b8:	mov	r3, r0
     5bc:	b	5e8 <coda_cursor_set_product+0x168>
     5c0:	ldr	r1, [fp, #-12]
     5c4:	ldr	r0, [fp, #-8]
     5c8:	bl	0 <coda_sp3_cursor_set_product>
     5cc:	mov	r3, r0
     5d0:	b	5e8 <coda_cursor_set_product+0x168>
     5d4:	ldr	r3, [pc, #44]	; 608 <coda_cursor_set_product+0x188>
     5d8:	mov	r2, #368	; 0x170
     5dc:	ldr	r1, [pc, #20]	; 5f8 <coda_cursor_set_product+0x178>
     5e0:	ldr	r0, [pc, #36]	; 60c <coda_cursor_set_product+0x18c>
     5e4:	bl	0 <__assert_fail>
     5e8:	mov	r0, r3
     5ec:	sub	sp, fp, #4
     5f0:	pop	{fp, pc}
     5f4:	.word	0x00000145
     5f8:	.word	0x00000020
     5fc:	.word	0x00000070
     600:	.word	0x0000014b
     604:	.word	0x00000090
     608:	.word	0x00000590
     60c:	.word	0x0000006c

00000610 <coda_cursor_goto>:
     610:	push	{fp, lr}
     614:	add	fp, sp, #4
     618:	sub	sp, sp, #32
     61c:	str	r0, [fp, #-32]	; 0xffffffe0
     620:	str	r1, [fp, #-36]	; 0xffffffdc
     624:	mov	r3, #0
     628:	str	r3, [fp, #-20]	; 0xffffffec
     62c:	mov	r3, #0
     630:	str	r3, [fp, #-8]
     634:	ldr	r3, [fp, #-8]
     638:	ldr	r2, [fp, #-36]	; 0xffffffdc
     63c:	add	r3, r2, r3
     640:	ldrb	r3, [r3]
     644:	cmp	r3, #47	; 0x2f
     648:	bne	c10 <coda_cursor_goto+0x600>
     64c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     650:	bl	2424 <coda_cursor_goto_root>
     654:	mov	r3, r0
     658:	cmp	r3, #0
     65c:	beq	668 <coda_cursor_goto+0x58>
     660:	mvn	r3, #0
     664:	b	c2c <coda_cursor_goto+0x61c>
     668:	ldr	r3, [fp, #-8]
     66c:	add	r3, r3, #1
     670:	ldr	r2, [fp, #-36]	; 0xffffffdc
     674:	add	r3, r2, r3
     678:	ldrb	r3, [r3]
     67c:	cmp	r3, #0
     680:	beq	6d8 <coda_cursor_goto+0xc8>
     684:	ldr	r3, [fp, #-8]
     688:	add	r3, r3, #1
     68c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     690:	add	r3, r2, r3
     694:	ldrb	r3, [r3]
     698:	cmp	r3, #47	; 0x2f
     69c:	beq	6d8 <coda_cursor_goto+0xc8>
     6a0:	ldr	r3, [fp, #-8]
     6a4:	add	r3, r3, #1
     6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6ac:	add	r3, r2, r3
     6b0:	ldrb	r3, [r3]
     6b4:	cmp	r3, #91	; 0x5b
     6b8:	beq	6d8 <coda_cursor_goto+0xc8>
     6bc:	ldr	r3, [fp, #-8]
     6c0:	add	r3, r3, #1
     6c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6c8:	add	r3, r2, r3
     6cc:	ldrb	r3, [r3]
     6d0:	cmp	r3, #64	; 0x40
     6d4:	bne	c10 <coda_cursor_goto+0x600>
     6d8:	ldr	r3, [fp, #-8]
     6dc:	add	r3, r3, #1
     6e0:	str	r3, [fp, #-8]
     6e4:	b	c10 <coda_cursor_goto+0x600>
     6e8:	ldr	r3, [fp, #-8]
     6ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6f0:	add	r3, r2, r3
     6f4:	ldrb	r3, [r3]
     6f8:	cmp	r3, #64	; 0x40
     6fc:	bne	8cc <coda_cursor_goto+0x2bc>
     700:	ldr	r0, [fp, #-32]	; 0xffffffe0
     704:	bl	212c <coda_cursor_goto_attributes>
     708:	mov	r3, r0
     70c:	cmp	r3, #0
     710:	beq	71c <coda_cursor_goto+0x10c>
     714:	mvn	r3, #0
     718:	b	c2c <coda_cursor_goto+0x61c>
     71c:	ldr	r3, [fp, #-8]
     720:	add	r3, r3, #1
     724:	str	r3, [fp, #-8]
     728:	ldr	r3, [fp, #-8]
     72c:	str	r3, [fp, #-12]
     730:	b	740 <coda_cursor_goto+0x130>
     734:	ldr	r3, [fp, #-12]
     738:	add	r3, r3, #1
     73c:	str	r3, [fp, #-12]
     740:	ldr	r3, [fp, #-12]
     744:	ldr	r2, [fp, #-36]	; 0xffffffdc
     748:	add	r3, r2, r3
     74c:	ldrb	r3, [r3]
     750:	cmp	r3, #0
     754:	beq	7a0 <coda_cursor_goto+0x190>
     758:	ldr	r3, [fp, #-12]
     75c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     760:	add	r3, r2, r3
     764:	ldrb	r3, [r3]
     768:	cmp	r3, #47	; 0x2f
     76c:	beq	7a0 <coda_cursor_goto+0x190>
     770:	ldr	r3, [fp, #-12]
     774:	ldr	r2, [fp, #-36]	; 0xffffffdc
     778:	add	r3, r2, r3
     77c:	ldrb	r3, [r3]
     780:	cmp	r3, #91	; 0x5b
     784:	beq	7a0 <coda_cursor_goto+0x190>
     788:	ldr	r3, [fp, #-12]
     78c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     790:	add	r3, r2, r3
     794:	ldrb	r3, [r3]
     798:	cmp	r3, #64	; 0x40
     79c:	bne	734 <coda_cursor_goto+0x124>
     7a0:	ldr	r3, [fp, #-8]
     7a4:	add	r2, r3, #1
     7a8:	ldr	r3, [fp, #-12]
     7ac:	cmp	r2, r3
     7b0:	bne	7cc <coda_cursor_goto+0x1bc>
     7b4:	ldr	r3, [fp, #-8]
     7b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7bc:	add	r3, r2, r3
     7c0:	ldrb	r3, [r3]
     7c4:	cmp	r3, #46	; 0x2e
     7c8:	beq	8c0 <coda_cursor_goto+0x2b0>
     7cc:	ldr	r3, [fp, #-8]
     7d0:	add	r2, r3, #2
     7d4:	ldr	r3, [fp, #-12]
     7d8:	cmp	r2, r3
     7dc:	bne	830 <coda_cursor_goto+0x220>
     7e0:	ldr	r3, [fp, #-8]
     7e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     7e8:	add	r3, r2, r3
     7ec:	ldrb	r3, [r3]
     7f0:	cmp	r3, #46	; 0x2e
     7f4:	bne	830 <coda_cursor_goto+0x220>
     7f8:	ldr	r3, [fp, #-8]
     7fc:	add	r3, r3, #1
     800:	ldr	r2, [fp, #-36]	; 0xffffffdc
     804:	add	r3, r2, r3
     808:	ldrb	r3, [r3]
     80c:	cmp	r3, #46	; 0x2e
     810:	bne	830 <coda_cursor_goto+0x220>
     814:	ldr	r0, [fp, #-32]	; 0xffffffe0
     818:	bl	2364 <coda_cursor_goto_parent>
     81c:	mov	r3, r0
     820:	cmp	r3, #0
     824:	beq	8c0 <coda_cursor_goto+0x2b0>
     828:	mvn	r3, #0
     82c:	b	c2c <coda_cursor_goto+0x61c>
     830:	ldr	r2, [fp, #-12]
     834:	ldr	r3, [fp, #-8]
     838:	cmp	r2, r3
     83c:	ble	8c0 <coda_cursor_goto+0x2b0>
     840:	sub	r3, fp, #20
     844:	mov	r1, r3
     848:	ldr	r0, [fp, #-32]	; 0xffffffe0
     84c:	bl	3b9c <coda_cursor_get_type>
     850:	mov	r3, r0
     854:	cmp	r3, #0
     858:	beq	864 <coda_cursor_goto+0x254>
     85c:	mvn	r3, #0
     860:	b	c2c <coda_cursor_goto+0x61c>
     864:	ldr	r0, [fp, #-20]	; 0xffffffec
     868:	ldr	r3, [fp, #-8]
     86c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     870:	add	r1, r2, r3
     874:	ldr	r2, [fp, #-12]
     878:	ldr	r3, [fp, #-8]
     87c:	sub	r2, r2, r3
     880:	sub	r3, fp, #24
     884:	bl	0 <coda_type_get_record_field_index_from_name_n>
     888:	mov	r3, r0
     88c:	cmp	r3, #0
     890:	beq	89c <coda_cursor_goto+0x28c>
     894:	mvn	r3, #0
     898:	b	c2c <coda_cursor_goto+0x61c>
     89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8a0:	mov	r1, r3
     8a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     8a8:	bl	c78 <coda_cursor_goto_record_field_by_index>
     8ac:	mov	r3, r0
     8b0:	cmp	r3, #0
     8b4:	beq	8c0 <coda_cursor_goto+0x2b0>
     8b8:	mvn	r3, #0
     8bc:	b	c2c <coda_cursor_goto+0x61c>
     8c0:	ldr	r3, [fp, #-12]
     8c4:	str	r3, [fp, #-8]
     8c8:	b	c10 <coda_cursor_goto+0x600>
     8cc:	ldr	r3, [fp, #-8]
     8d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     8d4:	add	r3, r2, r3
     8d8:	ldrb	r3, [r3]
     8dc:	cmp	r3, #91	; 0x5b
     8e0:	bne	a34 <coda_cursor_goto+0x424>
     8e4:	ldr	r3, [fp, #-8]
     8e8:	add	r3, r3, #1
     8ec:	str	r3, [fp, #-8]
     8f0:	ldr	r3, [fp, #-8]
     8f4:	str	r3, [fp, #-12]
     8f8:	b	908 <coda_cursor_goto+0x2f8>
     8fc:	ldr	r3, [fp, #-12]
     900:	add	r3, r3, #1
     904:	str	r3, [fp, #-12]
     908:	ldr	r3, [fp, #-12]
     90c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     910:	add	r3, r2, r3
     914:	ldrb	r3, [r3]
     918:	cmp	r3, #0
     91c:	beq	938 <coda_cursor_goto+0x328>
     920:	ldr	r3, [fp, #-12]
     924:	ldr	r2, [fp, #-36]	; 0xffffffdc
     928:	add	r3, r2, r3
     92c:	ldrb	r3, [r3]
     930:	cmp	r3, #93	; 0x5d
     934:	bne	8fc <coda_cursor_goto+0x2ec>
     938:	ldr	r3, [fp, #-12]
     93c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     940:	add	r3, r2, r3
     944:	ldrb	r3, [r3]
     948:	cmp	r3, #0
     94c:	bne	968 <coda_cursor_goto+0x358>
     950:	ldr	r2, [fp, #-36]	; 0xffffffdc
     954:	ldr	r1, [pc, #732]	; c38 <coda_cursor_goto+0x628>
     958:	mvn	r0, #99	; 0x63
     95c:	bl	0 <coda_set_error>
     960:	mvn	r3, #0
     964:	b	c2c <coda_cursor_goto+0x61c>
     968:	ldr	r2, [fp, #-8]
     96c:	ldr	r3, [fp, #-12]
     970:	cmp	r2, r3
     974:	bne	98c <coda_cursor_goto+0x37c>
     978:	ldr	r1, [pc, #700]	; c3c <coda_cursor_goto+0x62c>
     97c:	mvn	r0, #99	; 0x63
     980:	bl	0 <coda_set_error>
     984:	mvn	r3, #0
     988:	b	c2c <coda_cursor_goto+0x61c>
     98c:	ldr	r3, [fp, #-8]
     990:	ldr	r2, [fp, #-36]	; 0xffffffdc
     994:	add	r0, r2, r3
     998:	sub	r3, fp, #28
     99c:	sub	r2, fp, #24
     9a0:	ldr	r1, [pc, #664]	; c40 <coda_cursor_goto+0x630>
     9a4:	bl	0 <__isoc99_sscanf>
     9a8:	str	r0, [fp, #-16]
     9ac:	ldr	r3, [fp, #-16]
     9b0:	cmp	r3, #1
     9b4:	bne	9d0 <coda_cursor_goto+0x3c0>
     9b8:	ldr	r2, [fp, #-12]
     9bc:	ldr	r3, [fp, #-8]
     9c0:	sub	r2, r2, r3
     9c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9c8:	cmp	r2, r3
     9cc:	beq	a00 <coda_cursor_goto+0x3f0>
     9d0:	ldr	r2, [fp, #-12]
     9d4:	ldr	r3, [fp, #-8]
     9d8:	sub	r1, r2, r3
     9dc:	ldr	r3, [fp, #-8]
     9e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     9e4:	add	r3, r2, r3
     9e8:	mov	r2, r1
     9ec:	ldr	r1, [pc, #592]	; c44 <coda_cursor_goto+0x634>
     9f0:	mvn	r0, #99	; 0x63
     9f4:	bl	0 <coda_set_error>
     9f8:	mvn	r3, #0
     9fc:	b	c2c <coda_cursor_goto+0x61c>
     a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a04:	mov	r1, r3
     a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
     a0c:	bl	19f4 <coda_cursor_goto_array_element_by_index>
     a10:	mov	r3, r0
     a14:	cmp	r3, #0
     a18:	beq	a24 <coda_cursor_goto+0x414>
     a1c:	mvn	r3, #0
     a20:	b	c2c <coda_cursor_goto+0x61c>
     a24:	ldr	r3, [fp, #-12]
     a28:	add	r3, r3, #1
     a2c:	str	r3, [fp, #-8]
     a30:	b	c10 <coda_cursor_goto+0x600>
     a34:	ldr	r3, [fp, #-8]
     a38:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a3c:	add	r3, r2, r3
     a40:	ldrb	r3, [r3]
     a44:	cmp	r3, #47	; 0x2f
     a48:	bne	a5c <coda_cursor_goto+0x44c>
     a4c:	ldr	r3, [fp, #-8]
     a50:	add	r3, r3, #1
     a54:	str	r3, [fp, #-8]
     a58:	b	a80 <coda_cursor_goto+0x470>
     a5c:	ldr	r3, [fp, #-8]
     a60:	cmp	r3, #0
     a64:	ble	a80 <coda_cursor_goto+0x470>
     a68:	ldr	r2, [fp, #-36]	; 0xffffffdc
     a6c:	ldr	r1, [pc, #468]	; c48 <coda_cursor_goto+0x638>
     a70:	mvn	r0, #99	; 0x63
     a74:	bl	0 <coda_set_error>
     a78:	mvn	r3, #0
     a7c:	b	c2c <coda_cursor_goto+0x61c>
     a80:	ldr	r3, [fp, #-8]
     a84:	str	r3, [fp, #-12]
     a88:	b	a98 <coda_cursor_goto+0x488>
     a8c:	ldr	r3, [fp, #-12]
     a90:	add	r3, r3, #1
     a94:	str	r3, [fp, #-12]
     a98:	ldr	r3, [fp, #-12]
     a9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     aa0:	add	r3, r2, r3
     aa4:	ldrb	r3, [r3]
     aa8:	cmp	r3, #0
     aac:	beq	af8 <coda_cursor_goto+0x4e8>
     ab0:	ldr	r3, [fp, #-12]
     ab4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ab8:	add	r3, r2, r3
     abc:	ldrb	r3, [r3]
     ac0:	cmp	r3, #47	; 0x2f
     ac4:	beq	af8 <coda_cursor_goto+0x4e8>
     ac8:	ldr	r3, [fp, #-12]
     acc:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ad0:	add	r3, r2, r3
     ad4:	ldrb	r3, [r3]
     ad8:	cmp	r3, #91	; 0x5b
     adc:	beq	af8 <coda_cursor_goto+0x4e8>
     ae0:	ldr	r3, [fp, #-12]
     ae4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     ae8:	add	r3, r2, r3
     aec:	ldrb	r3, [r3]
     af0:	cmp	r3, #64	; 0x40
     af4:	bne	a8c <coda_cursor_goto+0x47c>
     af8:	ldr	r3, [fp, #-8]
     afc:	add	r2, r3, #1
     b00:	ldr	r3, [fp, #-12]
     b04:	cmp	r2, r3
     b08:	bne	b24 <coda_cursor_goto+0x514>
     b0c:	ldr	r3, [fp, #-8]
     b10:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b14:	add	r3, r2, r3
     b18:	ldrb	r3, [r3]
     b1c:	cmp	r3, #46	; 0x2e
     b20:	beq	c08 <coda_cursor_goto+0x5f8>
     b24:	ldr	r3, [fp, #-8]
     b28:	add	r2, r3, #2
     b2c:	ldr	r3, [fp, #-12]
     b30:	cmp	r2, r3
     b34:	bne	b88 <coda_cursor_goto+0x578>
     b38:	ldr	r3, [fp, #-8]
     b3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b40:	add	r3, r2, r3
     b44:	ldrb	r3, [r3]
     b48:	cmp	r3, #46	; 0x2e
     b4c:	bne	b88 <coda_cursor_goto+0x578>
     b50:	ldr	r3, [fp, #-8]
     b54:	add	r3, r3, #1
     b58:	ldr	r2, [fp, #-36]	; 0xffffffdc
     b5c:	add	r3, r2, r3
     b60:	ldrb	r3, [r3]
     b64:	cmp	r3, #46	; 0x2e
     b68:	bne	b88 <coda_cursor_goto+0x578>
     b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b70:	bl	2364 <coda_cursor_goto_parent>
     b74:	mov	r3, r0
     b78:	cmp	r3, #0
     b7c:	beq	c08 <coda_cursor_goto+0x5f8>
     b80:	mvn	r3, #0
     b84:	b	c2c <coda_cursor_goto+0x61c>
     b88:	sub	r3, fp, #20
     b8c:	mov	r1, r3
     b90:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b94:	bl	3b9c <coda_cursor_get_type>
     b98:	mov	r3, r0
     b9c:	cmp	r3, #0
     ba0:	beq	bac <coda_cursor_goto+0x59c>
     ba4:	mvn	r3, #0
     ba8:	b	c2c <coda_cursor_goto+0x61c>
     bac:	ldr	r0, [fp, #-20]	; 0xffffffec
     bb0:	ldr	r3, [fp, #-8]
     bb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
     bb8:	add	r1, r2, r3
     bbc:	ldr	r2, [fp, #-12]
     bc0:	ldr	r3, [fp, #-8]
     bc4:	sub	r2, r2, r3
     bc8:	sub	r3, fp, #24
     bcc:	bl	0 <coda_type_get_record_field_index_from_name_n>
     bd0:	mov	r3, r0
     bd4:	cmp	r3, #0
     bd8:	beq	be4 <coda_cursor_goto+0x5d4>
     bdc:	mvn	r3, #0
     be0:	b	c2c <coda_cursor_goto+0x61c>
     be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     be8:	mov	r1, r3
     bec:	ldr	r0, [fp, #-32]	; 0xffffffe0
     bf0:	bl	c78 <coda_cursor_goto_record_field_by_index>
     bf4:	mov	r3, r0
     bf8:	cmp	r3, #0
     bfc:	beq	c08 <coda_cursor_goto+0x5f8>
     c00:	mvn	r3, #0
     c04:	b	c2c <coda_cursor_goto+0x61c>
     c08:	ldr	r3, [fp, #-12]
     c0c:	str	r3, [fp, #-8]
     c10:	ldr	r3, [fp, #-8]
     c14:	ldr	r2, [fp, #-36]	; 0xffffffdc
     c18:	add	r3, r2, r3
     c1c:	ldrb	r3, [r3]
     c20:	cmp	r3, #0
     c24:	bne	6e8 <coda_cursor_goto+0xd8>
     c28:	mov	r3, #0
     c2c:	mov	r0, r3
     c30:	sub	sp, fp, #4
     c34:	pop	{fp, pc}
     c38:	.word	0x000000b8
     c3c:	.word	0x000000d8
     c40:	.word	0x000000f8
     c44:	.word	0x00000100
     c48:	.word	0x00000124

00000c4c <coda_cursor_goto_first_record_field>:
     c4c:	push	{fp, lr}
     c50:	add	fp, sp, #4
     c54:	sub	sp, sp, #8
     c58:	str	r0, [fp, #-8]
     c5c:	mov	r1, #0
     c60:	ldr	r0, [fp, #-8]
     c64:	bl	c78 <coda_cursor_goto_record_field_by_index>
     c68:	mov	r3, r0
     c6c:	mov	r0, r3
     c70:	sub	sp, fp, #4
     c74:	pop	{fp, pc}

00000c78 <coda_cursor_goto_record_field_by_index>:
     c78:	push	{fp, lr}
     c7c:	add	fp, sp, #4
     c80:	sub	sp, sp, #24
     c84:	str	r0, [fp, #-16]
     c88:	str	r1, [fp, #-20]	; 0xffffffec
     c8c:	ldr	r3, [fp, #-16]
     c90:	cmp	r3, #0
     c94:	beq	ccc <coda_cursor_goto_record_field_by_index+0x54>
     c98:	ldr	r3, [fp, #-16]
     c9c:	ldr	r3, [r3, #4]
     ca0:	cmp	r3, #0
     ca4:	ble	ccc <coda_cursor_goto_record_field_by_index+0x54>
     ca8:	ldr	r3, [fp, #-16]
     cac:	ldr	r3, [r3, #4]
     cb0:	sub	r3, r3, #1
     cb4:	ldr	r2, [fp, #-16]
     cb8:	lsl	r3, r3, #4
     cbc:	add	r3, r2, r3
     cc0:	ldr	r3, [r3, #8]
     cc4:	cmp	r3, #0
     cc8:	bne	ce8 <coda_cursor_goto_record_field_by_index+0x70>
     ccc:	ldr	r3, [pc, #704]	; f94 <coda_cursor_goto_record_field_by_index+0x31c>
     cd0:	ldr	r2, [pc, #704]	; f98 <coda_cursor_goto_record_field_by_index+0x320>
     cd4:	ldr	r1, [pc, #704]	; f9c <coda_cursor_goto_record_field_by_index+0x324>
     cd8:	mvn	r0, #99	; 0x63
     cdc:	bl	0 <coda_set_error>
     ce0:	mvn	r3, #0
     ce4:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     ce8:	ldr	r3, [fp, #-16]
     cec:	ldr	r3, [r3, #4]
     cf0:	sub	r3, r3, #1
     cf4:	ldr	r2, [fp, #-16]
     cf8:	lsl	r3, r3, #4
     cfc:	add	r3, r2, r3
     d00:	ldr	r3, [r3, #8]
     d04:	ldr	r3, [r3]
     d08:	cmp	r3, #99	; 0x63
     d0c:	bhi	d30 <coda_cursor_goto_record_field_by_index+0xb8>
     d10:	ldr	r3, [fp, #-16]
     d14:	ldr	r3, [r3, #4]
     d18:	sub	r3, r3, #1
     d1c:	ldr	r2, [fp, #-16]
     d20:	lsl	r3, r3, #4
     d24:	add	r3, r2, r3
     d28:	ldr	r3, [r3, #8]
     d2c:	b	d50 <coda_cursor_goto_record_field_by_index+0xd8>
     d30:	ldr	r3, [fp, #-16]
     d34:	ldr	r3, [r3, #4]
     d38:	sub	r3, r3, #1
     d3c:	ldr	r2, [fp, #-16]
     d40:	lsl	r3, r3, #4
     d44:	add	r3, r2, r3
     d48:	ldr	r3, [r3, #8]
     d4c:	ldr	r3, [r3, #4]
     d50:	str	r3, [fp, #-8]
     d54:	ldr	r3, [fp, #-8]
     d58:	ldr	r3, [r3, #8]
     d5c:	cmp	r3, #0
     d60:	beq	d90 <coda_cursor_goto_record_field_by_index+0x118>
     d64:	ldr	r3, [fp, #-8]
     d68:	ldr	r3, [r3, #8]
     d6c:	mov	r0, r3
     d70:	bl	0 <coda_type_get_class_name>
     d74:	mov	r3, r0
     d78:	mov	r2, r3
     d7c:	ldr	r1, [pc, #540]	; fa0 <coda_cursor_goto_record_field_by_index+0x328>
     d80:	mvn	r0, #104	; 0x68
     d84:	bl	0 <coda_set_error>
     d88:	mvn	r3, #0
     d8c:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     d90:	ldr	r3, [fp, #-16]
     d94:	ldr	r3, [r3, #4]
     d98:	cmp	r3, #32
     d9c:	bne	dc8 <coda_cursor_goto_record_field_by_index+0x150>
     da0:	ldr	r3, [fp, #-16]
     da4:	ldr	r2, [r3, #4]
     da8:	mov	r3, #584	; 0x248
     dac:	str	r3, [sp]
     db0:	ldr	r3, [pc, #480]	; f98 <coda_cursor_goto_record_field_by_index+0x320>
     db4:	ldr	r1, [pc, #488]	; fa4 <coda_cursor_goto_record_field_by_index+0x32c>
     db8:	mvn	r0, #99	; 0x63
     dbc:	bl	0 <coda_set_error>
     dc0:	mvn	r3, #0
     dc4:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     dc8:	ldr	r3, [fp, #-16]
     dcc:	ldr	r3, [r3, #4]
     dd0:	sub	r3, r3, #1
     dd4:	ldr	r2, [fp, #-16]
     dd8:	lsl	r3, r3, #4
     ddc:	add	r3, r2, r3
     de0:	ldr	r3, [r3, #8]
     de4:	ldr	r3, [r3]
     de8:	cmp	r3, #101	; 0x65
     dec:	beq	e60 <coda_cursor_goto_record_field_by_index+0x1e8>
     df0:	cmp	r3, #101	; 0x65
     df4:	bhi	e0c <coda_cursor_goto_record_field_by_index+0x194>
     df8:	cmp	r3, #1
     dfc:	bls	e20 <coda_cursor_goto_record_field_by_index+0x1a8>
     e00:	cmp	r3, #100	; 0x64
     e04:	beq	e40 <coda_cursor_goto_record_field_by_index+0x1c8>
     e08:	b	ea8 <coda_cursor_goto_record_field_by_index+0x230>
     e0c:	cmp	r3, #102	; 0x66
     e10:	beq	e74 <coda_cursor_goto_record_field_by_index+0x1fc>
     e14:	cmp	r3, #105	; 0x69
     e18:	bhi	ea8 <coda_cursor_goto_record_field_by_index+0x230>
     e1c:	b	e88 <coda_cursor_goto_record_field_by_index+0x210>
     e20:	ldr	r1, [fp, #-20]	; 0xffffffec
     e24:	ldr	r0, [fp, #-16]
     e28:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
     e2c:	mov	r3, r0
     e30:	cmp	r3, #0
     e34:	beq	e9c <coda_cursor_goto_record_field_by_index+0x224>
     e38:	mvn	r3, #0
     e3c:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     e40:	ldr	r1, [fp, #-20]	; 0xffffffec
     e44:	ldr	r0, [fp, #-16]
     e48:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
     e4c:	mov	r3, r0
     e50:	cmp	r3, #0
     e54:	beq	ea4 <coda_cursor_goto_record_field_by_index+0x22c>
     e58:	mvn	r3, #0
     e5c:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     e60:	mov	r1, #0
     e64:	mvn	r0, #10
     e68:	bl	0 <coda_set_error>
     e6c:	mvn	r3, #0
     e70:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     e74:	mov	r1, #0
     e78:	mvn	r0, #12
     e7c:	bl	0 <coda_set_error>
     e80:	mvn	r3, #0
     e84:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     e88:	ldr	r3, [pc, #280]	; fa8 <coda_cursor_goto_record_field_by_index+0x330>
     e8c:	mov	r2, #628	; 0x274
     e90:	ldr	r1, [pc, #256]	; f98 <coda_cursor_goto_record_field_by_index+0x320>
     e94:	ldr	r0, [pc, #272]	; fac <coda_cursor_goto_record_field_by_index+0x334>
     e98:	bl	0 <__assert_fail>
     e9c:	nop			; (mov r0, r0)
     ea0:	b	ea8 <coda_cursor_goto_record_field_by_index+0x230>
     ea4:	nop			; (mov r0, r0)
     ea8:	ldr	r3, [fp, #-16]
     eac:	ldr	r3, [r3, #4]
     eb0:	sub	r3, r3, #1
     eb4:	ldr	r2, [fp, #-16]
     eb8:	lsl	r3, r3, #4
     ebc:	add	r3, r2, r3
     ec0:	ldr	r3, [r3, #8]
     ec4:	ldr	r3, [r3]
     ec8:	cmp	r3, #100	; 0x64
     ecc:	bne	ed8 <coda_cursor_goto_record_field_by_index+0x260>
     ed0:	ldr	r0, [fp, #-16]
     ed4:	bl	0 <coda_mem_cursor_update_offset>
     ed8:	ldr	r3, [pc, #208]	; fb0 <coda_cursor_goto_record_field_by_index+0x338>
     edc:	ldr	r3, [pc, r3]
     ee0:	bl	0 <__aeabi_read_tp>
     ee4:	mov	r2, r0
     ee8:	ldr	r3, [r2, r3]
     eec:	cmp	r3, #0
     ef0:	beq	f84 <coda_cursor_goto_record_field_by_index+0x30c>
     ef4:	ldr	r3, [fp, #-16]
     ef8:	ldr	r3, [r3, #4]
     efc:	sub	r3, r3, #1
     f00:	ldr	r2, [fp, #-16]
     f04:	lsl	r3, r3, #4
     f08:	add	r3, r2, r3
     f0c:	ldr	r3, [r3, #8]
     f10:	ldr	r3, [r3]
     f14:	cmp	r3, #99	; 0x63
     f18:	bhi	f3c <coda_cursor_goto_record_field_by_index+0x2c4>
     f1c:	ldr	r3, [fp, #-16]
     f20:	ldr	r3, [r3, #4]
     f24:	sub	r3, r3, #1
     f28:	ldr	r2, [fp, #-16]
     f2c:	lsl	r3, r3, #4
     f30:	add	r3, r2, r3
     f34:	ldr	r3, [r3, #8]
     f38:	b	f5c <coda_cursor_goto_record_field_by_index+0x2e4>
     f3c:	ldr	r3, [fp, #-16]
     f40:	ldr	r3, [r3, #4]
     f44:	sub	r3, r3, #1
     f48:	ldr	r2, [fp, #-16]
     f4c:	lsl	r3, r3, #4
     f50:	add	r3, r2, r3
     f54:	ldr	r3, [r3, #8]
     f58:	ldr	r3, [r3, #4]
     f5c:	ldr	r3, [r3, #8]
     f60:	cmp	r3, #6
     f64:	bne	f84 <coda_cursor_goto_record_field_by_index+0x30c>
     f68:	ldr	r0, [fp, #-16]
     f6c:	bl	2598 <coda_cursor_use_base_type_of_special_type>
     f70:	mov	r3, r0
     f74:	cmp	r3, #0
     f78:	beq	f84 <coda_cursor_goto_record_field_by_index+0x30c>
     f7c:	mvn	r3, #0
     f80:	b	f88 <coda_cursor_goto_record_field_by_index+0x310>
     f84:	mov	r3, #0
     f88:	mov	r0, r3
     f8c:	sub	sp, fp, #4
     f90:	pop	{fp, pc}
     f94:	.word	0x00000239
     f98:	.word	0x00000020
     f9c:	.word	0x00000148
     fa0:	.word	0x00000168
     fa4:	.word	0x000001a0
     fa8:	.word	0x000005a8
     fac:	.word	0x0000006c
     fb0:	.word	0x000000cc

00000fb4 <coda_cursor_goto_record_field_by_name>:
     fb4:	push	{fp, lr}
     fb8:	add	fp, sp, #4
     fbc:	sub	sp, sp, #16
     fc0:	str	r0, [fp, #-16]
     fc4:	str	r1, [fp, #-20]	; 0xffffffec
     fc8:	sub	r3, fp, #8
     fcc:	mov	r2, r3
     fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
     fd4:	ldr	r0, [fp, #-16]
     fd8:	bl	3cc8 <coda_cursor_get_record_field_index_from_name>
     fdc:	mov	r3, r0
     fe0:	cmp	r3, #0
     fe4:	beq	ff0 <coda_cursor_goto_record_field_by_name+0x3c>
     fe8:	mvn	r3, #0
     fec:	b	1004 <coda_cursor_goto_record_field_by_name+0x50>
     ff0:	ldr	r3, [fp, #-8]
     ff4:	mov	r1, r3
     ff8:	ldr	r0, [fp, #-16]
     ffc:	bl	c78 <coda_cursor_goto_record_field_by_index>
    1000:	mov	r3, r0
    1004:	mov	r0, r3
    1008:	sub	sp, fp, #4
    100c:	pop	{fp, pc}

00001010 <coda_cursor_goto_next_record_field>:
    1010:	push	{fp, lr}
    1014:	add	fp, sp, #4
    1018:	sub	sp, sp, #16
    101c:	str	r0, [fp, #-16]
    1020:	ldr	r3, [fp, #-16]
    1024:	cmp	r3, #0
    1028:	beq	1060 <coda_cursor_goto_next_record_field+0x50>
    102c:	ldr	r3, [fp, #-16]
    1030:	ldr	r3, [r3, #4]
    1034:	cmp	r3, #1
    1038:	ble	1060 <coda_cursor_goto_next_record_field+0x50>
    103c:	ldr	r3, [fp, #-16]
    1040:	ldr	r3, [r3, #4]
    1044:	sub	r3, r3, #2
    1048:	ldr	r2, [fp, #-16]
    104c:	lsl	r3, r3, #4
    1050:	add	r3, r2, r3
    1054:	ldr	r3, [r3, #8]
    1058:	cmp	r3, #0
    105c:	bne	107c <coda_cursor_goto_next_record_field+0x6c>
    1060:	ldr	r3, [pc, #696]	; 1320 <coda_cursor_goto_next_record_field+0x310>
    1064:	ldr	r2, [pc, #696]	; 1324 <coda_cursor_goto_next_record_field+0x314>
    1068:	ldr	r1, [pc, #696]	; 1328 <coda_cursor_goto_next_record_field+0x318>
    106c:	mvn	r0, #99	; 0x63
    1070:	bl	0 <coda_set_error>
    1074:	mvn	r3, #0
    1078:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    107c:	ldr	r3, [fp, #-16]
    1080:	ldr	r3, [r3, #4]
    1084:	sub	r3, r3, #2
    1088:	ldr	r2, [fp, #-16]
    108c:	lsl	r3, r3, #4
    1090:	add	r3, r2, r3
    1094:	ldr	r3, [r3, #8]
    1098:	ldr	r3, [r3]
    109c:	cmp	r3, #99	; 0x63
    10a0:	bhi	10c4 <coda_cursor_goto_next_record_field+0xb4>
    10a4:	ldr	r3, [fp, #-16]
    10a8:	ldr	r3, [r3, #4]
    10ac:	sub	r3, r3, #2
    10b0:	ldr	r2, [fp, #-16]
    10b4:	lsl	r3, r3, #4
    10b8:	add	r3, r2, r3
    10bc:	ldr	r3, [r3, #8]
    10c0:	b	10e4 <coda_cursor_goto_next_record_field+0xd4>
    10c4:	ldr	r3, [fp, #-16]
    10c8:	ldr	r3, [r3, #4]
    10cc:	sub	r3, r3, #2
    10d0:	ldr	r2, [fp, #-16]
    10d4:	lsl	r3, r3, #4
    10d8:	add	r3, r2, r3
    10dc:	ldr	r3, [r3, #8]
    10e0:	ldr	r3, [r3, #4]
    10e4:	str	r3, [fp, #-8]
    10e8:	ldr	r3, [fp, #-8]
    10ec:	ldr	r3, [r3, #8]
    10f0:	cmp	r3, #0
    10f4:	beq	1124 <coda_cursor_goto_next_record_field+0x114>
    10f8:	ldr	r3, [fp, #-8]
    10fc:	ldr	r3, [r3, #8]
    1100:	mov	r0, r3
    1104:	bl	0 <coda_type_get_class_name>
    1108:	mov	r3, r0
    110c:	mov	r2, r3
    1110:	ldr	r1, [pc, #532]	; 132c <coda_cursor_goto_next_record_field+0x31c>
    1114:	mvn	r0, #104	; 0x68
    1118:	bl	0 <coda_set_error>
    111c:	mvn	r3, #0
    1120:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    1124:	ldr	r3, [fp, #-16]
    1128:	ldr	r3, [r3, #4]
    112c:	sub	r3, r3, #1
    1130:	ldr	r2, [fp, #-16]
    1134:	lsl	r3, r3, #4
    1138:	add	r3, r2, r3
    113c:	ldr	r3, [r3, #12]
    1140:	cmn	r3, #1
    1144:	bne	115c <coda_cursor_goto_next_record_field+0x14c>
    1148:	ldr	r1, [pc, #480]	; 1330 <coda_cursor_goto_next_record_field+0x320>
    114c:	mvn	r0, #104	; 0x68
    1150:	bl	0 <coda_set_error>
    1154:	mvn	r3, #0
    1158:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    115c:	ldr	r3, [fp, #-16]
    1160:	ldr	r3, [r3, #4]
    1164:	sub	r3, r3, #2
    1168:	ldr	r2, [fp, #-16]
    116c:	lsl	r3, r3, #4
    1170:	add	r3, r2, r3
    1174:	ldr	r3, [r3, #8]
    1178:	ldr	r3, [r3]
    117c:	cmp	r3, #101	; 0x65
    1180:	beq	11ec <coda_cursor_goto_next_record_field+0x1dc>
    1184:	cmp	r3, #101	; 0x65
    1188:	bhi	11a0 <coda_cursor_goto_next_record_field+0x190>
    118c:	cmp	r3, #1
    1190:	bls	11b4 <coda_cursor_goto_next_record_field+0x1a4>
    1194:	cmp	r3, #100	; 0x64
    1198:	beq	11d0 <coda_cursor_goto_next_record_field+0x1c0>
    119c:	b	1234 <coda_cursor_goto_next_record_field+0x224>
    11a0:	cmp	r3, #102	; 0x66
    11a4:	beq	1200 <coda_cursor_goto_next_record_field+0x1f0>
    11a8:	cmp	r3, #105	; 0x69
    11ac:	bhi	1234 <coda_cursor_goto_next_record_field+0x224>
    11b0:	b	1214 <coda_cursor_goto_next_record_field+0x204>
    11b4:	ldr	r0, [fp, #-16]
    11b8:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
    11bc:	mov	r3, r0
    11c0:	cmp	r3, #0
    11c4:	beq	1228 <coda_cursor_goto_next_record_field+0x218>
    11c8:	mvn	r3, #0
    11cc:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    11d0:	ldr	r0, [fp, #-16]
    11d4:	bl	0 <coda_mem_cursor_goto_next_record_field>
    11d8:	mov	r3, r0
    11dc:	cmp	r3, #0
    11e0:	beq	1230 <coda_cursor_goto_next_record_field+0x220>
    11e4:	mvn	r3, #0
    11e8:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    11ec:	mov	r1, #0
    11f0:	mvn	r0, #10
    11f4:	bl	0 <coda_set_error>
    11f8:	mvn	r3, #0
    11fc:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    1200:	mov	r1, #0
    1204:	mvn	r0, #12
    1208:	bl	0 <coda_set_error>
    120c:	mvn	r3, #0
    1210:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    1214:	ldr	r3, [pc, #280]	; 1334 <coda_cursor_goto_next_record_field+0x324>
    1218:	ldr	r2, [pc, #280]	; 1338 <coda_cursor_goto_next_record_field+0x328>
    121c:	ldr	r1, [pc, #256]	; 1324 <coda_cursor_goto_next_record_field+0x314>
    1220:	ldr	r0, [pc, #276]	; 133c <coda_cursor_goto_next_record_field+0x32c>
    1224:	bl	0 <__assert_fail>
    1228:	nop			; (mov r0, r0)
    122c:	b	1234 <coda_cursor_goto_next_record_field+0x224>
    1230:	nop			; (mov r0, r0)
    1234:	ldr	r3, [fp, #-16]
    1238:	ldr	r3, [r3, #4]
    123c:	sub	r3, r3, #1
    1240:	ldr	r2, [fp, #-16]
    1244:	lsl	r3, r3, #4
    1248:	add	r3, r2, r3
    124c:	ldr	r3, [r3, #8]
    1250:	ldr	r3, [r3]
    1254:	cmp	r3, #100	; 0x64
    1258:	bne	1264 <coda_cursor_goto_next_record_field+0x254>
    125c:	ldr	r0, [fp, #-16]
    1260:	bl	0 <coda_mem_cursor_update_offset>
    1264:	ldr	r3, [pc, #212]	; 1340 <coda_cursor_goto_next_record_field+0x330>
    1268:	ldr	r3, [pc, r3]
    126c:	bl	0 <__aeabi_read_tp>
    1270:	mov	r2, r0
    1274:	ldr	r3, [r2, r3]
    1278:	cmp	r3, #0
    127c:	beq	1310 <coda_cursor_goto_next_record_field+0x300>
    1280:	ldr	r3, [fp, #-16]
    1284:	ldr	r3, [r3, #4]
    1288:	sub	r3, r3, #1
    128c:	ldr	r2, [fp, #-16]
    1290:	lsl	r3, r3, #4
    1294:	add	r3, r2, r3
    1298:	ldr	r3, [r3, #8]
    129c:	ldr	r3, [r3]
    12a0:	cmp	r3, #99	; 0x63
    12a4:	bhi	12c8 <coda_cursor_goto_next_record_field+0x2b8>
    12a8:	ldr	r3, [fp, #-16]
    12ac:	ldr	r3, [r3, #4]
    12b0:	sub	r3, r3, #1
    12b4:	ldr	r2, [fp, #-16]
    12b8:	lsl	r3, r3, #4
    12bc:	add	r3, r2, r3
    12c0:	ldr	r3, [r3, #8]
    12c4:	b	12e8 <coda_cursor_goto_next_record_field+0x2d8>
    12c8:	ldr	r3, [fp, #-16]
    12cc:	ldr	r3, [r3, #4]
    12d0:	sub	r3, r3, #1
    12d4:	ldr	r2, [fp, #-16]
    12d8:	lsl	r3, r3, #4
    12dc:	add	r3, r2, r3
    12e0:	ldr	r3, [r3, #8]
    12e4:	ldr	r3, [r3, #4]
    12e8:	ldr	r3, [r3, #8]
    12ec:	cmp	r3, #6
    12f0:	bne	1310 <coda_cursor_goto_next_record_field+0x300>
    12f4:	ldr	r0, [fp, #-16]
    12f8:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    12fc:	mov	r3, r0
    1300:	cmp	r3, #0
    1304:	beq	1310 <coda_cursor_goto_next_record_field+0x300>
    1308:	mvn	r3, #0
    130c:	b	1314 <coda_cursor_goto_next_record_field+0x304>
    1310:	mov	r3, #0
    1314:	mov	r0, r3
    1318:	sub	sp, fp, #4
    131c:	pop	{fp, pc}
    1320:	.word	0x000002c2
    1324:	.word	0x00000020
    1328:	.word	0x00000148
    132c:	.word	0x000001d0
    1330:	.word	0x00000210
    1334:	.word	0x000005d0
    1338:	.word	0x000002fe
    133c:	.word	0x0000006c
    1340:	.word	0x000000d0

00001344 <coda_cursor_goto_available_union_field>:
    1344:	push	{fp, lr}
    1348:	add	fp, sp, #4
    134c:	sub	sp, sp, #16
    1350:	str	r0, [fp, #-16]
    1354:	ldr	r3, [fp, #-16]
    1358:	cmp	r3, #0
    135c:	beq	1394 <coda_cursor_goto_available_union_field+0x50>
    1360:	ldr	r3, [fp, #-16]
    1364:	ldr	r3, [r3, #4]
    1368:	cmp	r3, #0
    136c:	ble	1394 <coda_cursor_goto_available_union_field+0x50>
    1370:	ldr	r3, [fp, #-16]
    1374:	ldr	r3, [r3, #4]
    1378:	sub	r3, r3, #1
    137c:	ldr	r2, [fp, #-16]
    1380:	lsl	r3, r3, #4
    1384:	add	r3, r2, r3
    1388:	ldr	r3, [r3, #8]
    138c:	cmp	r3, #0
    1390:	bne	13b0 <coda_cursor_goto_available_union_field+0x6c>
    1394:	ldr	r3, [pc, #584]	; 15e4 <coda_cursor_goto_available_union_field+0x2a0>
    1398:	ldr	r2, [pc, #584]	; 15e8 <coda_cursor_goto_available_union_field+0x2a4>
    139c:	ldr	r1, [pc, #584]	; 15ec <coda_cursor_goto_available_union_field+0x2a8>
    13a0:	mvn	r0, #99	; 0x63
    13a4:	bl	0 <coda_set_error>
    13a8:	mvn	r3, #0
    13ac:	b	15d8 <coda_cursor_goto_available_union_field+0x294>
    13b0:	ldr	r3, [fp, #-16]
    13b4:	ldr	r3, [r3, #4]
    13b8:	sub	r3, r3, #1
    13bc:	ldr	r2, [fp, #-16]
    13c0:	lsl	r3, r3, #4
    13c4:	add	r3, r2, r3
    13c8:	ldr	r3, [r3, #8]
    13cc:	ldr	r3, [r3]
    13d0:	cmp	r3, #99	; 0x63
    13d4:	bhi	13f8 <coda_cursor_goto_available_union_field+0xb4>
    13d8:	ldr	r3, [fp, #-16]
    13dc:	ldr	r3, [r3, #4]
    13e0:	sub	r3, r3, #1
    13e4:	ldr	r2, [fp, #-16]
    13e8:	lsl	r3, r3, #4
    13ec:	add	r3, r2, r3
    13f0:	ldr	r3, [r3, #8]
    13f4:	b	1418 <coda_cursor_goto_available_union_field+0xd4>
    13f8:	ldr	r3, [fp, #-16]
    13fc:	ldr	r3, [r3, #4]
    1400:	sub	r3, r3, #1
    1404:	ldr	r2, [fp, #-16]
    1408:	lsl	r3, r3, #4
    140c:	add	r3, r2, r3
    1410:	ldr	r3, [r3, #8]
    1414:	ldr	r3, [r3, #4]
    1418:	str	r3, [fp, #-8]
    141c:	ldr	r3, [fp, #-8]
    1420:	ldr	r3, [r3, #8]
    1424:	cmp	r3, #0
    1428:	beq	1458 <coda_cursor_goto_available_union_field+0x114>
    142c:	ldr	r3, [fp, #-8]
    1430:	ldr	r3, [r3, #8]
    1434:	mov	r0, r3
    1438:	bl	0 <coda_type_get_class_name>
    143c:	mov	r3, r0
    1440:	mov	r2, r3
    1444:	ldr	r1, [pc, #420]	; 15f0 <coda_cursor_goto_available_union_field+0x2ac>
    1448:	mvn	r0, #104	; 0x68
    144c:	bl	0 <coda_set_error>
    1450:	mvn	r3, #0
    1454:	b	15d8 <coda_cursor_goto_available_union_field+0x294>
    1458:	ldr	r3, [fp, #-16]
    145c:	ldr	r3, [r3, #4]
    1460:	sub	r3, r3, #1
    1464:	ldr	r2, [fp, #-16]
    1468:	lsl	r3, r3, #4
    146c:	add	r3, r2, r3
    1470:	ldr	r3, [r3, #8]
    1474:	ldr	r3, [r3]
    1478:	cmp	r3, #100	; 0x64
    147c:	beq	14bc <coda_cursor_goto_available_union_field+0x178>
    1480:	cmp	r3, #100	; 0x64
    1484:	bhi	1494 <coda_cursor_goto_available_union_field+0x150>
    1488:	cmp	r3, #1
    148c:	bhi	14f8 <coda_cursor_goto_available_union_field+0x1b4>
    1490:	b	14a0 <coda_cursor_goto_available_union_field+0x15c>
    1494:	cmp	r3, #105	; 0x69
    1498:	bhi	14f8 <coda_cursor_goto_available_union_field+0x1b4>
    149c:	b	14d8 <coda_cursor_goto_available_union_field+0x194>
    14a0:	ldr	r0, [fp, #-16]
    14a4:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
    14a8:	mov	r3, r0
    14ac:	cmp	r3, #0
    14b0:	beq	14ec <coda_cursor_goto_available_union_field+0x1a8>
    14b4:	mvn	r3, #0
    14b8:	b	15d8 <coda_cursor_goto_available_union_field+0x294>
    14bc:	ldr	r0, [fp, #-16]
    14c0:	bl	0 <coda_mem_cursor_goto_available_union_field>
    14c4:	mov	r3, r0
    14c8:	cmp	r3, #0
    14cc:	beq	14f4 <coda_cursor_goto_available_union_field+0x1b0>
    14d0:	mvn	r3, #0
    14d4:	b	15d8 <coda_cursor_goto_available_union_field+0x294>
    14d8:	ldr	r3, [pc, #276]	; 15f4 <coda_cursor_goto_available_union_field+0x2b0>
    14dc:	ldr	r2, [pc, #276]	; 15f8 <coda_cursor_goto_available_union_field+0x2b4>
    14e0:	ldr	r1, [pc, #256]	; 15e8 <coda_cursor_goto_available_union_field+0x2a4>
    14e4:	ldr	r0, [pc, #272]	; 15fc <coda_cursor_goto_available_union_field+0x2b8>
    14e8:	bl	0 <__assert_fail>
    14ec:	nop			; (mov r0, r0)
    14f0:	b	14f8 <coda_cursor_goto_available_union_field+0x1b4>
    14f4:	nop			; (mov r0, r0)
    14f8:	ldr	r3, [fp, #-16]
    14fc:	ldr	r3, [r3, #4]
    1500:	sub	r3, r3, #1
    1504:	ldr	r2, [fp, #-16]
    1508:	lsl	r3, r3, #4
    150c:	add	r3, r2, r3
    1510:	ldr	r3, [r3, #8]
    1514:	ldr	r3, [r3]
    1518:	cmp	r3, #100	; 0x64
    151c:	bne	1528 <coda_cursor_goto_available_union_field+0x1e4>
    1520:	ldr	r0, [fp, #-16]
    1524:	bl	0 <coda_mem_cursor_update_offset>
    1528:	ldr	r3, [pc, #208]	; 1600 <coda_cursor_goto_available_union_field+0x2bc>
    152c:	ldr	r3, [pc, r3]
    1530:	bl	0 <__aeabi_read_tp>
    1534:	mov	r2, r0
    1538:	ldr	r3, [r2, r3]
    153c:	cmp	r3, #0
    1540:	beq	15d4 <coda_cursor_goto_available_union_field+0x290>
    1544:	ldr	r3, [fp, #-16]
    1548:	ldr	r3, [r3, #4]
    154c:	sub	r3, r3, #1
    1550:	ldr	r2, [fp, #-16]
    1554:	lsl	r3, r3, #4
    1558:	add	r3, r2, r3
    155c:	ldr	r3, [r3, #8]
    1560:	ldr	r3, [r3]
    1564:	cmp	r3, #99	; 0x63
    1568:	bhi	158c <coda_cursor_goto_available_union_field+0x248>
    156c:	ldr	r3, [fp, #-16]
    1570:	ldr	r3, [r3, #4]
    1574:	sub	r3, r3, #1
    1578:	ldr	r2, [fp, #-16]
    157c:	lsl	r3, r3, #4
    1580:	add	r3, r2, r3
    1584:	ldr	r3, [r3, #8]
    1588:	b	15ac <coda_cursor_goto_available_union_field+0x268>
    158c:	ldr	r3, [fp, #-16]
    1590:	ldr	r3, [r3, #4]
    1594:	sub	r3, r3, #1
    1598:	ldr	r2, [fp, #-16]
    159c:	lsl	r3, r3, #4
    15a0:	add	r3, r2, r3
    15a4:	ldr	r3, [r3, #8]
    15a8:	ldr	r3, [r3, #4]
    15ac:	ldr	r3, [r3, #8]
    15b0:	cmp	r3, #6
    15b4:	bne	15d4 <coda_cursor_goto_available_union_field+0x290>
    15b8:	ldr	r0, [fp, #-16]
    15bc:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    15c0:	mov	r3, r0
    15c4:	cmp	r3, #0
    15c8:	beq	15d4 <coda_cursor_goto_available_union_field+0x290>
    15cc:	mvn	r3, #0
    15d0:	b	15d8 <coda_cursor_goto_available_union_field+0x294>
    15d4:	mov	r3, #0
    15d8:	mov	r0, r3
    15dc:	sub	sp, fp, #4
    15e0:	pop	{fp, pc}
    15e4:	.word	0x00000323
    15e8:	.word	0x00000020
    15ec:	.word	0x00000148
    15f0:	.word	0x00000168
    15f4:	.word	0x000005f4
    15f8:	.word	0x00000343
    15fc:	.word	0x0000006c
    1600:	.word	0x000000cc

00001604 <coda_cursor_goto_first_array_element>:
    1604:	push	{fp, lr}
    1608:	add	fp, sp, #4
    160c:	sub	sp, sp, #8
    1610:	str	r0, [fp, #-8]
    1614:	mov	r1, #0
    1618:	ldr	r0, [fp, #-8]
    161c:	bl	19f4 <coda_cursor_goto_array_element_by_index>
    1620:	mov	r3, r0
    1624:	mov	r0, r3
    1628:	sub	sp, fp, #4
    162c:	pop	{fp, pc}

00001630 <coda_cursor_goto_array_element>:
    1630:	push	{fp, lr}
    1634:	add	fp, sp, #4
    1638:	sub	sp, sp, #32
    163c:	str	r0, [fp, #-16]
    1640:	str	r1, [fp, #-20]	; 0xffffffec
    1644:	str	r2, [fp, #-24]	; 0xffffffe8
    1648:	ldr	r3, [fp, #-16]
    164c:	cmp	r3, #0
    1650:	beq	1688 <coda_cursor_goto_array_element+0x58>
    1654:	ldr	r3, [fp, #-16]
    1658:	ldr	r3, [r3, #4]
    165c:	cmp	r3, #0
    1660:	ble	1688 <coda_cursor_goto_array_element+0x58>
    1664:	ldr	r3, [fp, #-16]
    1668:	ldr	r3, [r3, #4]
    166c:	sub	r3, r3, #1
    1670:	ldr	r2, [fp, #-16]
    1674:	lsl	r3, r3, #4
    1678:	add	r3, r2, r3
    167c:	ldr	r3, [r3, #8]
    1680:	cmp	r3, #0
    1684:	bne	16a4 <coda_cursor_goto_array_element+0x74>
    1688:	ldr	r3, [pc, #840]	; 19d8 <coda_cursor_goto_array_element+0x3a8>
    168c:	ldr	r2, [pc, #840]	; 19dc <coda_cursor_goto_array_element+0x3ac>
    1690:	ldr	r1, [pc, #840]	; 19e0 <coda_cursor_goto_array_element+0x3b0>
    1694:	mvn	r0, #99	; 0x63
    1698:	bl	0 <coda_set_error>
    169c:	mvn	r3, #0
    16a0:	b	19cc <coda_cursor_goto_array_element+0x39c>
    16a4:	ldr	r3, [fp, #-16]
    16a8:	ldr	r3, [r3, #4]
    16ac:	sub	r3, r3, #1
    16b0:	ldr	r2, [fp, #-16]
    16b4:	lsl	r3, r3, #4
    16b8:	add	r3, r2, r3
    16bc:	ldr	r3, [r3, #8]
    16c0:	ldr	r3, [r3]
    16c4:	cmp	r3, #99	; 0x63
    16c8:	bhi	16ec <coda_cursor_goto_array_element+0xbc>
    16cc:	ldr	r3, [fp, #-16]
    16d0:	ldr	r3, [r3, #4]
    16d4:	sub	r3, r3, #1
    16d8:	ldr	r2, [fp, #-16]
    16dc:	lsl	r3, r3, #4
    16e0:	add	r3, r2, r3
    16e4:	ldr	r3, [r3, #8]
    16e8:	b	170c <coda_cursor_goto_array_element+0xdc>
    16ec:	ldr	r3, [fp, #-16]
    16f0:	ldr	r3, [r3, #4]
    16f4:	sub	r3, r3, #1
    16f8:	ldr	r2, [fp, #-16]
    16fc:	lsl	r3, r3, #4
    1700:	add	r3, r2, r3
    1704:	ldr	r3, [r3, #8]
    1708:	ldr	r3, [r3, #4]
    170c:	str	r3, [fp, #-8]
    1710:	ldr	r3, [fp, #-8]
    1714:	ldr	r3, [r3, #8]
    1718:	cmp	r3, #1
    171c:	beq	174c <coda_cursor_goto_array_element+0x11c>
    1720:	ldr	r3, [fp, #-8]
    1724:	ldr	r3, [r3, #8]
    1728:	mov	r0, r3
    172c:	bl	0 <coda_type_get_class_name>
    1730:	mov	r3, r0
    1734:	mov	r2, r3
    1738:	ldr	r1, [pc, #676]	; 19e4 <coda_cursor_goto_array_element+0x3b4>
    173c:	mvn	r0, #104	; 0x68
    1740:	bl	0 <coda_set_error>
    1744:	mvn	r3, #0
    1748:	b	19cc <coda_cursor_goto_array_element+0x39c>
    174c:	ldr	r3, [fp, #-16]
    1750:	ldr	r3, [r3, #4]
    1754:	cmp	r3, #32
    1758:	bne	1784 <coda_cursor_goto_array_element+0x154>
    175c:	ldr	r3, [fp, #-16]
    1760:	ldr	r2, [r3, #4]
    1764:	ldr	r3, [pc, #636]	; 19e8 <coda_cursor_goto_array_element+0x3b8>
    1768:	str	r3, [sp]
    176c:	ldr	r3, [pc, #616]	; 19dc <coda_cursor_goto_array_element+0x3ac>
    1770:	ldr	r1, [pc, #628]	; 19ec <coda_cursor_goto_array_element+0x3bc>
    1774:	mvn	r0, #99	; 0x63
    1778:	bl	0 <coda_set_error>
    177c:	mvn	r3, #0
    1780:	b	19cc <coda_cursor_goto_array_element+0x39c>
    1784:	ldr	r3, [fp, #-16]
    1788:	ldr	r3, [r3, #4]
    178c:	sub	r3, r3, #1
    1790:	ldr	r2, [fp, #-16]
    1794:	lsl	r3, r3, #4
    1798:	add	r3, r2, r3
    179c:	ldr	r3, [r3, #8]
    17a0:	ldr	r3, [r3]
    17a4:	cmp	r3, #101	; 0x65
    17a8:	beq	1834 <coda_cursor_goto_array_element+0x204>
    17ac:	cmp	r3, #101	; 0x65
    17b0:	bhi	17c8 <coda_cursor_goto_array_element+0x198>
    17b4:	cmp	r3, #1
    17b8:	bls	17ec <coda_cursor_goto_array_element+0x1bc>
    17bc:	cmp	r3, #100	; 0x64
    17c0:	beq	1810 <coda_cursor_goto_array_element+0x1e0>
    17c4:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    17c8:	cmp	r3, #103	; 0x67
    17cc:	beq	185c <coda_cursor_goto_array_element+0x22c>
    17d0:	cmp	r3, #103	; 0x67
    17d4:	bcc	1848 <coda_cursor_goto_array_element+0x218>
    17d8:	cmp	r3, #104	; 0x68
    17dc:	beq	1880 <coda_cursor_goto_array_element+0x250>
    17e0:	cmp	r3, #105	; 0x69
    17e4:	beq	18a4 <coda_cursor_goto_array_element+0x274>
    17e8:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    17ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    17f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    17f4:	ldr	r0, [fp, #-16]
    17f8:	bl	0 <coda_ascbin_cursor_goto_array_element>
    17fc:	mov	r3, r0
    1800:	cmp	r3, #0
    1804:	beq	18c8 <coda_cursor_goto_array_element+0x298>
    1808:	mvn	r3, #0
    180c:	b	19cc <coda_cursor_goto_array_element+0x39c>
    1810:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1814:	ldr	r1, [fp, #-20]	; 0xffffffec
    1818:	ldr	r0, [fp, #-16]
    181c:	bl	0 <coda_mem_cursor_goto_array_element>
    1820:	mov	r3, r0
    1824:	cmp	r3, #0
    1828:	beq	18d0 <coda_cursor_goto_array_element+0x2a0>
    182c:	mvn	r3, #0
    1830:	b	19cc <coda_cursor_goto_array_element+0x39c>
    1834:	mov	r1, #0
    1838:	mvn	r0, #10
    183c:	bl	0 <coda_set_error>
    1840:	mvn	r3, #0
    1844:	b	19cc <coda_cursor_goto_array_element+0x39c>
    1848:	mov	r1, #0
    184c:	mvn	r0, #12
    1850:	bl	0 <coda_set_error>
    1854:	mvn	r3, #0
    1858:	b	19cc <coda_cursor_goto_array_element+0x39c>
    185c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1860:	ldr	r1, [fp, #-20]	; 0xffffffec
    1864:	ldr	r0, [fp, #-16]
    1868:	bl	0 <coda_cdf_cursor_goto_array_element>
    186c:	mov	r3, r0
    1870:	cmp	r3, #0
    1874:	beq	18d8 <coda_cursor_goto_array_element+0x2a8>
    1878:	mvn	r3, #0
    187c:	b	19cc <coda_cursor_goto_array_element+0x39c>
    1880:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1884:	ldr	r1, [fp, #-20]	; 0xffffffec
    1888:	ldr	r0, [fp, #-16]
    188c:	bl	0 <coda_netcdf_cursor_goto_array_element>
    1890:	mov	r3, r0
    1894:	cmp	r3, #0
    1898:	beq	18e0 <coda_cursor_goto_array_element+0x2b0>
    189c:	mvn	r3, #0
    18a0:	b	19cc <coda_cursor_goto_array_element+0x39c>
    18a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    18ac:	ldr	r0, [fp, #-16]
    18b0:	bl	0 <coda_grib_cursor_goto_array_element>
    18b4:	mov	r3, r0
    18b8:	cmp	r3, #0
    18bc:	beq	18e8 <coda_cursor_goto_array_element+0x2b8>
    18c0:	mvn	r3, #0
    18c4:	b	19cc <coda_cursor_goto_array_element+0x39c>
    18c8:	nop			; (mov r0, r0)
    18cc:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    18d0:	nop			; (mov r0, r0)
    18d4:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    18d8:	nop			; (mov r0, r0)
    18dc:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    18e0:	nop			; (mov r0, r0)
    18e4:	b	18ec <coda_cursor_goto_array_element+0x2bc>
    18e8:	nop			; (mov r0, r0)
    18ec:	ldr	r3, [fp, #-16]
    18f0:	ldr	r3, [r3, #4]
    18f4:	sub	r3, r3, #1
    18f8:	ldr	r2, [fp, #-16]
    18fc:	lsl	r3, r3, #4
    1900:	add	r3, r2, r3
    1904:	ldr	r3, [r3, #8]
    1908:	ldr	r3, [r3]
    190c:	cmp	r3, #100	; 0x64
    1910:	bne	191c <coda_cursor_goto_array_element+0x2ec>
    1914:	ldr	r0, [fp, #-16]
    1918:	bl	0 <coda_mem_cursor_update_offset>
    191c:	ldr	r3, [pc, #204]	; 19f0 <coda_cursor_goto_array_element+0x3c0>
    1920:	ldr	r3, [pc, r3]
    1924:	bl	0 <__aeabi_read_tp>
    1928:	mov	r2, r0
    192c:	ldr	r3, [r2, r3]
    1930:	cmp	r3, #0
    1934:	beq	19c8 <coda_cursor_goto_array_element+0x398>
    1938:	ldr	r3, [fp, #-16]
    193c:	ldr	r3, [r3, #4]
    1940:	sub	r3, r3, #1
    1944:	ldr	r2, [fp, #-16]
    1948:	lsl	r3, r3, #4
    194c:	add	r3, r2, r3
    1950:	ldr	r3, [r3, #8]
    1954:	ldr	r3, [r3]
    1958:	cmp	r3, #99	; 0x63
    195c:	bhi	1980 <coda_cursor_goto_array_element+0x350>
    1960:	ldr	r3, [fp, #-16]
    1964:	ldr	r3, [r3, #4]
    1968:	sub	r3, r3, #1
    196c:	ldr	r2, [fp, #-16]
    1970:	lsl	r3, r3, #4
    1974:	add	r3, r2, r3
    1978:	ldr	r3, [r3, #8]
    197c:	b	19a0 <coda_cursor_goto_array_element+0x370>
    1980:	ldr	r3, [fp, #-16]
    1984:	ldr	r3, [r3, #4]
    1988:	sub	r3, r3, #1
    198c:	ldr	r2, [fp, #-16]
    1990:	lsl	r3, r3, #4
    1994:	add	r3, r2, r3
    1998:	ldr	r3, [r3, #8]
    199c:	ldr	r3, [r3, #4]
    19a0:	ldr	r3, [r3, #8]
    19a4:	cmp	r3, #6
    19a8:	bne	19c8 <coda_cursor_goto_array_element+0x398>
    19ac:	ldr	r0, [fp, #-16]
    19b0:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    19b4:	mov	r3, r0
    19b8:	cmp	r3, #0
    19bc:	beq	19c8 <coda_cursor_goto_array_element+0x398>
    19c0:	mvn	r3, #0
    19c4:	b	19cc <coda_cursor_goto_array_element+0x39c>
    19c8:	mov	r3, #0
    19cc:	mov	r0, r3
    19d0:	sub	sp, fp, #4
    19d4:	pop	{fp, pc}
    19d8:	.word	0x0000037a
    19dc:	.word	0x00000020
    19e0:	.word	0x00000148
    19e4:	.word	0x00000268
    19e8:	.word	0x00000389
    19ec:	.word	0x000001a0
    19f0:	.word	0x000000c8

000019f4 <coda_cursor_goto_array_element_by_index>:
    19f4:	push	{fp, lr}
    19f8:	add	fp, sp, #4
    19fc:	sub	sp, sp, #24
    1a00:	str	r0, [fp, #-16]
    1a04:	str	r1, [fp, #-20]	; 0xffffffec
    1a08:	ldr	r3, [fp, #-16]
    1a0c:	cmp	r3, #0
    1a10:	beq	1a48 <coda_cursor_goto_array_element_by_index+0x54>
    1a14:	ldr	r3, [fp, #-16]
    1a18:	ldr	r3, [r3, #4]
    1a1c:	cmp	r3, #0
    1a20:	ble	1a48 <coda_cursor_goto_array_element_by_index+0x54>
    1a24:	ldr	r3, [fp, #-16]
    1a28:	ldr	r3, [r3, #4]
    1a2c:	sub	r3, r3, #1
    1a30:	ldr	r2, [fp, #-16]
    1a34:	lsl	r3, r3, #4
    1a38:	add	r3, r2, r3
    1a3c:	ldr	r3, [r3, #8]
    1a40:	cmp	r3, #0
    1a44:	bne	1a64 <coda_cursor_goto_array_element_by_index+0x70>
    1a48:	mov	r3, #1008	; 0x3f0
    1a4c:	ldr	r2, [pc, #816]	; 1d84 <coda_cursor_goto_array_element_by_index+0x390>
    1a50:	ldr	r1, [pc, #816]	; 1d88 <coda_cursor_goto_array_element_by_index+0x394>
    1a54:	mvn	r0, #99	; 0x63
    1a58:	bl	0 <coda_set_error>
    1a5c:	mvn	r3, #0
    1a60:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1a64:	ldr	r3, [fp, #-16]
    1a68:	ldr	r3, [r3, #4]
    1a6c:	sub	r3, r3, #1
    1a70:	ldr	r2, [fp, #-16]
    1a74:	lsl	r3, r3, #4
    1a78:	add	r3, r2, r3
    1a7c:	ldr	r3, [r3, #8]
    1a80:	ldr	r3, [r3]
    1a84:	cmp	r3, #99	; 0x63
    1a88:	bhi	1aac <coda_cursor_goto_array_element_by_index+0xb8>
    1a8c:	ldr	r3, [fp, #-16]
    1a90:	ldr	r3, [r3, #4]
    1a94:	sub	r3, r3, #1
    1a98:	ldr	r2, [fp, #-16]
    1a9c:	lsl	r3, r3, #4
    1aa0:	add	r3, r2, r3
    1aa4:	ldr	r3, [r3, #8]
    1aa8:	b	1acc <coda_cursor_goto_array_element_by_index+0xd8>
    1aac:	ldr	r3, [fp, #-16]
    1ab0:	ldr	r3, [r3, #4]
    1ab4:	sub	r3, r3, #1
    1ab8:	ldr	r2, [fp, #-16]
    1abc:	lsl	r3, r3, #4
    1ac0:	add	r3, r2, r3
    1ac4:	ldr	r3, [r3, #8]
    1ac8:	ldr	r3, [r3, #4]
    1acc:	str	r3, [fp, #-8]
    1ad0:	ldr	r3, [fp, #-8]
    1ad4:	ldr	r3, [r3, #8]
    1ad8:	cmp	r3, #1
    1adc:	beq	1b0c <coda_cursor_goto_array_element_by_index+0x118>
    1ae0:	ldr	r3, [fp, #-8]
    1ae4:	ldr	r3, [r3, #8]
    1ae8:	mov	r0, r3
    1aec:	bl	0 <coda_type_get_class_name>
    1af0:	mov	r3, r0
    1af4:	mov	r2, r3
    1af8:	ldr	r1, [pc, #652]	; 1d8c <coda_cursor_goto_array_element_by_index+0x398>
    1afc:	mvn	r0, #104	; 0x68
    1b00:	bl	0 <coda_set_error>
    1b04:	mvn	r3, #0
    1b08:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1b0c:	ldr	r3, [fp, #-16]
    1b10:	ldr	r3, [r3, #4]
    1b14:	cmp	r3, #32
    1b18:	bne	1b44 <coda_cursor_goto_array_element_by_index+0x150>
    1b1c:	ldr	r3, [fp, #-16]
    1b20:	ldr	r2, [r3, #4]
    1b24:	ldr	r3, [pc, #612]	; 1d90 <coda_cursor_goto_array_element_by_index+0x39c>
    1b28:	str	r3, [sp]
    1b2c:	ldr	r3, [pc, #592]	; 1d84 <coda_cursor_goto_array_element_by_index+0x390>
    1b30:	ldr	r1, [pc, #604]	; 1d94 <coda_cursor_goto_array_element_by_index+0x3a0>
    1b34:	mvn	r0, #99	; 0x63
    1b38:	bl	0 <coda_set_error>
    1b3c:	mvn	r3, #0
    1b40:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1b44:	ldr	r3, [fp, #-16]
    1b48:	ldr	r3, [r3, #4]
    1b4c:	sub	r3, r3, #1
    1b50:	ldr	r2, [fp, #-16]
    1b54:	lsl	r3, r3, #4
    1b58:	add	r3, r2, r3
    1b5c:	ldr	r3, [r3, #8]
    1b60:	ldr	r3, [r3]
    1b64:	cmp	r3, #101	; 0x65
    1b68:	beq	1bec <coda_cursor_goto_array_element_by_index+0x1f8>
    1b6c:	cmp	r3, #101	; 0x65
    1b70:	bhi	1b88 <coda_cursor_goto_array_element_by_index+0x194>
    1b74:	cmp	r3, #1
    1b78:	bls	1bac <coda_cursor_goto_array_element_by_index+0x1b8>
    1b7c:	cmp	r3, #100	; 0x64
    1b80:	beq	1bcc <coda_cursor_goto_array_element_by_index+0x1d8>
    1b84:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1b88:	cmp	r3, #103	; 0x67
    1b8c:	beq	1c14 <coda_cursor_goto_array_element_by_index+0x220>
    1b90:	cmp	r3, #103	; 0x67
    1b94:	bcc	1c00 <coda_cursor_goto_array_element_by_index+0x20c>
    1b98:	cmp	r3, #104	; 0x68
    1b9c:	beq	1c34 <coda_cursor_goto_array_element_by_index+0x240>
    1ba0:	cmp	r3, #105	; 0x69
    1ba4:	beq	1c54 <coda_cursor_goto_array_element_by_index+0x260>
    1ba8:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1bac:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bb0:	ldr	r0, [fp, #-16]
    1bb4:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
    1bb8:	mov	r3, r0
    1bbc:	cmp	r3, #0
    1bc0:	beq	1c74 <coda_cursor_goto_array_element_by_index+0x280>
    1bc4:	mvn	r3, #0
    1bc8:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1bcc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bd0:	ldr	r0, [fp, #-16]
    1bd4:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
    1bd8:	mov	r3, r0
    1bdc:	cmp	r3, #0
    1be0:	beq	1c7c <coda_cursor_goto_array_element_by_index+0x288>
    1be4:	mvn	r3, #0
    1be8:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1bec:	mov	r1, #0
    1bf0:	mvn	r0, #10
    1bf4:	bl	0 <coda_set_error>
    1bf8:	mvn	r3, #0
    1bfc:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1c00:	mov	r1, #0
    1c04:	mvn	r0, #12
    1c08:	bl	0 <coda_set_error>
    1c0c:	mvn	r3, #0
    1c10:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1c14:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c18:	ldr	r0, [fp, #-16]
    1c1c:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
    1c20:	mov	r3, r0
    1c24:	cmp	r3, #0
    1c28:	beq	1c84 <coda_cursor_goto_array_element_by_index+0x290>
    1c2c:	mvn	r3, #0
    1c30:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1c34:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c38:	ldr	r0, [fp, #-16]
    1c3c:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
    1c40:	mov	r3, r0
    1c44:	cmp	r3, #0
    1c48:	beq	1c8c <coda_cursor_goto_array_element_by_index+0x298>
    1c4c:	mvn	r3, #0
    1c50:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1c54:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c58:	ldr	r0, [fp, #-16]
    1c5c:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
    1c60:	mov	r3, r0
    1c64:	cmp	r3, #0
    1c68:	beq	1c94 <coda_cursor_goto_array_element_by_index+0x2a0>
    1c6c:	mvn	r3, #0
    1c70:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1c74:	nop			; (mov r0, r0)
    1c78:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1c7c:	nop			; (mov r0, r0)
    1c80:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1c84:	nop			; (mov r0, r0)
    1c88:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1c8c:	nop			; (mov r0, r0)
    1c90:	b	1c98 <coda_cursor_goto_array_element_by_index+0x2a4>
    1c94:	nop			; (mov r0, r0)
    1c98:	ldr	r3, [fp, #-16]
    1c9c:	ldr	r3, [r3, #4]
    1ca0:	sub	r3, r3, #1
    1ca4:	ldr	r2, [fp, #-16]
    1ca8:	lsl	r3, r3, #4
    1cac:	add	r3, r2, r3
    1cb0:	ldr	r3, [r3, #8]
    1cb4:	ldr	r3, [r3]
    1cb8:	cmp	r3, #100	; 0x64
    1cbc:	bne	1cc8 <coda_cursor_goto_array_element_by_index+0x2d4>
    1cc0:	ldr	r0, [fp, #-16]
    1cc4:	bl	0 <coda_mem_cursor_update_offset>
    1cc8:	ldr	r3, [pc, #200]	; 1d98 <coda_cursor_goto_array_element_by_index+0x3a4>
    1ccc:	ldr	r3, [pc, r3]
    1cd0:	bl	0 <__aeabi_read_tp>
    1cd4:	mov	r2, r0
    1cd8:	ldr	r3, [r2, r3]
    1cdc:	cmp	r3, #0
    1ce0:	beq	1d74 <coda_cursor_goto_array_element_by_index+0x380>
    1ce4:	ldr	r3, [fp, #-16]
    1ce8:	ldr	r3, [r3, #4]
    1cec:	sub	r3, r3, #1
    1cf0:	ldr	r2, [fp, #-16]
    1cf4:	lsl	r3, r3, #4
    1cf8:	add	r3, r2, r3
    1cfc:	ldr	r3, [r3, #8]
    1d00:	ldr	r3, [r3]
    1d04:	cmp	r3, #99	; 0x63
    1d08:	bhi	1d2c <coda_cursor_goto_array_element_by_index+0x338>
    1d0c:	ldr	r3, [fp, #-16]
    1d10:	ldr	r3, [r3, #4]
    1d14:	sub	r3, r3, #1
    1d18:	ldr	r2, [fp, #-16]
    1d1c:	lsl	r3, r3, #4
    1d20:	add	r3, r2, r3
    1d24:	ldr	r3, [r3, #8]
    1d28:	b	1d4c <coda_cursor_goto_array_element_by_index+0x358>
    1d2c:	ldr	r3, [fp, #-16]
    1d30:	ldr	r3, [r3, #4]
    1d34:	sub	r3, r3, #1
    1d38:	ldr	r2, [fp, #-16]
    1d3c:	lsl	r3, r3, #4
    1d40:	add	r3, r2, r3
    1d44:	ldr	r3, [r3, #8]
    1d48:	ldr	r3, [r3, #4]
    1d4c:	ldr	r3, [r3, #8]
    1d50:	cmp	r3, #6
    1d54:	bne	1d74 <coda_cursor_goto_array_element_by_index+0x380>
    1d58:	ldr	r0, [fp, #-16]
    1d5c:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    1d60:	mov	r3, r0
    1d64:	cmp	r3, #0
    1d68:	beq	1d74 <coda_cursor_goto_array_element_by_index+0x380>
    1d6c:	mvn	r3, #0
    1d70:	b	1d78 <coda_cursor_goto_array_element_by_index+0x384>
    1d74:	mov	r3, #0
    1d78:	mov	r0, r3
    1d7c:	sub	sp, fp, #4
    1d80:	pop	{fp, pc}
    1d84:	.word	0x00000020
    1d88:	.word	0x00000148
    1d8c:	.word	0x00000268
    1d90:	.word	0x000003ff
    1d94:	.word	0x000001a0
    1d98:	.word	0x000000c4

00001d9c <coda_cursor_goto_next_array_element>:
    1d9c:	push	{fp, lr}
    1da0:	add	fp, sp, #4
    1da4:	sub	sp, sp, #16
    1da8:	str	r0, [fp, #-16]
    1dac:	ldr	r3, [fp, #-16]
    1db0:	cmp	r3, #0
    1db4:	beq	1dec <coda_cursor_goto_next_array_element+0x50>
    1db8:	ldr	r3, [fp, #-16]
    1dbc:	ldr	r3, [r3, #4]
    1dc0:	cmp	r3, #1
    1dc4:	ble	1dec <coda_cursor_goto_next_array_element+0x50>
    1dc8:	ldr	r3, [fp, #-16]
    1dcc:	ldr	r3, [r3, #4]
    1dd0:	sub	r3, r3, #1
    1dd4:	ldr	r2, [fp, #-16]
    1dd8:	lsl	r3, r3, #4
    1ddc:	add	r3, r2, r3
    1de0:	ldr	r3, [r3, #8]
    1de4:	cmp	r3, #0
    1de8:	bne	1e08 <coda_cursor_goto_next_array_element+0x6c>
    1dec:	ldr	r3, [pc, #800]	; 2114 <coda_cursor_goto_next_array_element+0x378>
    1df0:	ldr	r2, [pc, #800]	; 2118 <coda_cursor_goto_next_array_element+0x37c>
    1df4:	ldr	r1, [pc, #800]	; 211c <coda_cursor_goto_next_array_element+0x380>
    1df8:	mvn	r0, #99	; 0x63
    1dfc:	bl	0 <coda_set_error>
    1e00:	mvn	r3, #0
    1e04:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1e08:	ldr	r3, [fp, #-16]
    1e0c:	ldr	r3, [r3, #4]
    1e10:	sub	r3, r3, #2
    1e14:	ldr	r2, [fp, #-16]
    1e18:	lsl	r3, r3, #4
    1e1c:	add	r3, r2, r3
    1e20:	ldr	r3, [r3, #8]
    1e24:	ldr	r3, [r3]
    1e28:	cmp	r3, #99	; 0x63
    1e2c:	bhi	1e50 <coda_cursor_goto_next_array_element+0xb4>
    1e30:	ldr	r3, [fp, #-16]
    1e34:	ldr	r3, [r3, #4]
    1e38:	sub	r3, r3, #2
    1e3c:	ldr	r2, [fp, #-16]
    1e40:	lsl	r3, r3, #4
    1e44:	add	r3, r2, r3
    1e48:	ldr	r3, [r3, #8]
    1e4c:	b	1e70 <coda_cursor_goto_next_array_element+0xd4>
    1e50:	ldr	r3, [fp, #-16]
    1e54:	ldr	r3, [r3, #4]
    1e58:	sub	r3, r3, #2
    1e5c:	ldr	r2, [fp, #-16]
    1e60:	lsl	r3, r3, #4
    1e64:	add	r3, r2, r3
    1e68:	ldr	r3, [r3, #8]
    1e6c:	ldr	r3, [r3, #4]
    1e70:	str	r3, [fp, #-8]
    1e74:	ldr	r3, [fp, #-8]
    1e78:	ldr	r3, [r3, #8]
    1e7c:	cmp	r3, #1
    1e80:	beq	1eb0 <coda_cursor_goto_next_array_element+0x114>
    1e84:	ldr	r3, [fp, #-8]
    1e88:	ldr	r3, [r3, #8]
    1e8c:	mov	r0, r3
    1e90:	bl	0 <coda_type_get_class_name>
    1e94:	mov	r3, r0
    1e98:	mov	r2, r3
    1e9c:	ldr	r1, [pc, #636]	; 2120 <coda_cursor_goto_next_array_element+0x384>
    1ea0:	mvn	r0, #104	; 0x68
    1ea4:	bl	0 <coda_set_error>
    1ea8:	mvn	r3, #0
    1eac:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1eb0:	ldr	r3, [fp, #-16]
    1eb4:	ldr	r3, [r3, #4]
    1eb8:	sub	r3, r3, #1
    1ebc:	ldr	r2, [fp, #-16]
    1ec0:	lsl	r3, r3, #4
    1ec4:	add	r3, r2, r3
    1ec8:	ldr	r3, [r3, #12]
    1ecc:	cmn	r3, #1
    1ed0:	bne	1ee8 <coda_cursor_goto_next_array_element+0x14c>
    1ed4:	ldr	r1, [pc, #584]	; 2124 <coda_cursor_goto_next_array_element+0x388>
    1ed8:	mvn	r0, #104	; 0x68
    1edc:	bl	0 <coda_set_error>
    1ee0:	mvn	r3, #0
    1ee4:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1ee8:	ldr	r3, [fp, #-16]
    1eec:	ldr	r3, [r3, #4]
    1ef0:	sub	r3, r3, #2
    1ef4:	ldr	r2, [fp, #-16]
    1ef8:	lsl	r3, r3, #4
    1efc:	add	r3, r2, r3
    1f00:	ldr	r3, [r3, #8]
    1f04:	ldr	r3, [r3]
    1f08:	cmp	r3, #101	; 0x65
    1f0c:	beq	1f88 <coda_cursor_goto_next_array_element+0x1ec>
    1f10:	cmp	r3, #101	; 0x65
    1f14:	bhi	1f2c <coda_cursor_goto_next_array_element+0x190>
    1f18:	cmp	r3, #1
    1f1c:	bls	1f50 <coda_cursor_goto_next_array_element+0x1b4>
    1f20:	cmp	r3, #100	; 0x64
    1f24:	beq	1f6c <coda_cursor_goto_next_array_element+0x1d0>
    1f28:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    1f2c:	cmp	r3, #103	; 0x67
    1f30:	beq	1fb0 <coda_cursor_goto_next_array_element+0x214>
    1f34:	cmp	r3, #103	; 0x67
    1f38:	bcc	1f9c <coda_cursor_goto_next_array_element+0x200>
    1f3c:	cmp	r3, #104	; 0x68
    1f40:	beq	1fcc <coda_cursor_goto_next_array_element+0x230>
    1f44:	cmp	r3, #105	; 0x69
    1f48:	beq	1fe8 <coda_cursor_goto_next_array_element+0x24c>
    1f4c:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    1f50:	ldr	r0, [fp, #-16]
    1f54:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    1f58:	mov	r3, r0
    1f5c:	cmp	r3, #0
    1f60:	beq	2004 <coda_cursor_goto_next_array_element+0x268>
    1f64:	mvn	r3, #0
    1f68:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1f6c:	ldr	r0, [fp, #-16]
    1f70:	bl	0 <coda_mem_cursor_goto_next_array_element>
    1f74:	mov	r3, r0
    1f78:	cmp	r3, #0
    1f7c:	beq	200c <coda_cursor_goto_next_array_element+0x270>
    1f80:	mvn	r3, #0
    1f84:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1f88:	mov	r1, #0
    1f8c:	mvn	r0, #10
    1f90:	bl	0 <coda_set_error>
    1f94:	mvn	r3, #0
    1f98:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1f9c:	mov	r1, #0
    1fa0:	mvn	r0, #12
    1fa4:	bl	0 <coda_set_error>
    1fa8:	mvn	r3, #0
    1fac:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1fb0:	ldr	r0, [fp, #-16]
    1fb4:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    1fb8:	mov	r3, r0
    1fbc:	cmp	r3, #0
    1fc0:	beq	2014 <coda_cursor_goto_next_array_element+0x278>
    1fc4:	mvn	r3, #0
    1fc8:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1fcc:	ldr	r0, [fp, #-16]
    1fd0:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    1fd4:	mov	r3, r0
    1fd8:	cmp	r3, #0
    1fdc:	beq	201c <coda_cursor_goto_next_array_element+0x280>
    1fe0:	mvn	r3, #0
    1fe4:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    1fe8:	ldr	r0, [fp, #-16]
    1fec:	bl	0 <coda_grib_cursor_goto_next_array_element>
    1ff0:	mov	r3, r0
    1ff4:	cmp	r3, #0
    1ff8:	beq	2024 <coda_cursor_goto_next_array_element+0x288>
    1ffc:	mvn	r3, #0
    2000:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    2004:	nop			; (mov r0, r0)
    2008:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    200c:	nop			; (mov r0, r0)
    2010:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    2014:	nop			; (mov r0, r0)
    2018:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    201c:	nop			; (mov r0, r0)
    2020:	b	2028 <coda_cursor_goto_next_array_element+0x28c>
    2024:	nop			; (mov r0, r0)
    2028:	ldr	r3, [fp, #-16]
    202c:	ldr	r3, [r3, #4]
    2030:	sub	r3, r3, #1
    2034:	ldr	r2, [fp, #-16]
    2038:	lsl	r3, r3, #4
    203c:	add	r3, r2, r3
    2040:	ldr	r3, [r3, #8]
    2044:	ldr	r3, [r3]
    2048:	cmp	r3, #100	; 0x64
    204c:	bne	2058 <coda_cursor_goto_next_array_element+0x2bc>
    2050:	ldr	r0, [fp, #-16]
    2054:	bl	0 <coda_mem_cursor_update_offset>
    2058:	ldr	r3, [pc, #200]	; 2128 <coda_cursor_goto_next_array_element+0x38c>
    205c:	ldr	r3, [pc, r3]
    2060:	bl	0 <__aeabi_read_tp>
    2064:	mov	r2, r0
    2068:	ldr	r3, [r2, r3]
    206c:	cmp	r3, #0
    2070:	beq	2104 <coda_cursor_goto_next_array_element+0x368>
    2074:	ldr	r3, [fp, #-16]
    2078:	ldr	r3, [r3, #4]
    207c:	sub	r3, r3, #1
    2080:	ldr	r2, [fp, #-16]
    2084:	lsl	r3, r3, #4
    2088:	add	r3, r2, r3
    208c:	ldr	r3, [r3, #8]
    2090:	ldr	r3, [r3]
    2094:	cmp	r3, #99	; 0x63
    2098:	bhi	20bc <coda_cursor_goto_next_array_element+0x320>
    209c:	ldr	r3, [fp, #-16]
    20a0:	ldr	r3, [r3, #4]
    20a4:	sub	r3, r3, #1
    20a8:	ldr	r2, [fp, #-16]
    20ac:	lsl	r3, r3, #4
    20b0:	add	r3, r2, r3
    20b4:	ldr	r3, [r3, #8]
    20b8:	b	20dc <coda_cursor_goto_next_array_element+0x340>
    20bc:	ldr	r3, [fp, #-16]
    20c0:	ldr	r3, [r3, #4]
    20c4:	sub	r3, r3, #1
    20c8:	ldr	r2, [fp, #-16]
    20cc:	lsl	r3, r3, #4
    20d0:	add	r3, r2, r3
    20d4:	ldr	r3, [r3, #8]
    20d8:	ldr	r3, [r3, #4]
    20dc:	ldr	r3, [r3, #8]
    20e0:	cmp	r3, #6
    20e4:	bne	2104 <coda_cursor_goto_next_array_element+0x368>
    20e8:	ldr	r0, [fp, #-16]
    20ec:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    20f0:	mov	r3, r0
    20f4:	cmp	r3, #0
    20f8:	beq	2104 <coda_cursor_goto_next_array_element+0x368>
    20fc:	mvn	r3, #0
    2100:	b	2108 <coda_cursor_goto_next_array_element+0x36c>
    2104:	mov	r3, #0
    2108:	mov	r0, r3
    210c:	sub	sp, fp, #4
    2110:	pop	{fp, pc}
    2114:	.word	0x0000046e
    2118:	.word	0x00000020
    211c:	.word	0x00000148
    2120:	.word	0x000002a0
    2124:	.word	0x000002e4
    2128:	.word	0x000000c4

0000212c <coda_cursor_goto_attributes>:
    212c:	push	{fp, lr}
    2130:	add	fp, sp, #4
    2134:	sub	sp, sp, #16
    2138:	str	r0, [fp, #-8]
    213c:	ldr	r3, [fp, #-8]
    2140:	cmp	r3, #0
    2144:	beq	217c <coda_cursor_goto_attributes+0x50>
    2148:	ldr	r3, [fp, #-8]
    214c:	ldr	r3, [r3, #4]
    2150:	cmp	r3, #0
    2154:	ble	217c <coda_cursor_goto_attributes+0x50>
    2158:	ldr	r3, [fp, #-8]
    215c:	ldr	r3, [r3, #4]
    2160:	sub	r3, r3, #1
    2164:	ldr	r2, [fp, #-8]
    2168:	lsl	r3, r3, #4
    216c:	add	r3, r2, r3
    2170:	ldr	r3, [r3, #8]
    2174:	cmp	r3, #0
    2178:	bne	2198 <coda_cursor_goto_attributes+0x6c>
    217c:	ldr	r3, [pc, #460]	; 2350 <coda_cursor_goto_attributes+0x224>
    2180:	ldr	r2, [pc, #460]	; 2354 <coda_cursor_goto_attributes+0x228>
    2184:	ldr	r1, [pc, #460]	; 2358 <coda_cursor_goto_attributes+0x22c>
    2188:	mvn	r0, #99	; 0x63
    218c:	bl	0 <coda_set_error>
    2190:	mvn	r3, #0
    2194:	b	2344 <coda_cursor_goto_attributes+0x218>
    2198:	ldr	r3, [fp, #-8]
    219c:	ldr	r3, [r3, #4]
    21a0:	cmp	r3, #32
    21a4:	bne	21d0 <coda_cursor_goto_attributes+0xa4>
    21a8:	ldr	r3, [fp, #-8]
    21ac:	ldr	r2, [r3, #4]
    21b0:	ldr	r3, [pc, #420]	; 235c <coda_cursor_goto_attributes+0x230>
    21b4:	str	r3, [sp]
    21b8:	ldr	r3, [pc, #404]	; 2354 <coda_cursor_goto_attributes+0x228>
    21bc:	ldr	r1, [pc, #412]	; 2360 <coda_cursor_goto_attributes+0x234>
    21c0:	mvn	r0, #99	; 0x63
    21c4:	bl	0 <coda_set_error>
    21c8:	mvn	r3, #0
    21cc:	b	2344 <coda_cursor_goto_attributes+0x218>
    21d0:	ldr	r3, [fp, #-8]
    21d4:	ldr	r3, [r3, #4]
    21d8:	sub	r3, r3, #1
    21dc:	ldr	r2, [fp, #-8]
    21e0:	lsl	r3, r3, #4
    21e4:	add	r3, r2, r3
    21e8:	ldr	r3, [r3, #8]
    21ec:	ldr	r3, [r3]
    21f0:	cmp	r3, #101	; 0x65
    21f4:	beq	2270 <coda_cursor_goto_attributes+0x144>
    21f8:	cmp	r3, #101	; 0x65
    21fc:	bhi	2214 <coda_cursor_goto_attributes+0xe8>
    2200:	cmp	r3, #1
    2204:	bls	2238 <coda_cursor_goto_attributes+0x10c>
    2208:	cmp	r3, #100	; 0x64
    220c:	beq	2254 <coda_cursor_goto_attributes+0x128>
    2210:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    2214:	cmp	r3, #103	; 0x67
    2218:	beq	2298 <coda_cursor_goto_attributes+0x16c>
    221c:	cmp	r3, #103	; 0x67
    2220:	bcc	2284 <coda_cursor_goto_attributes+0x158>
    2224:	cmp	r3, #104	; 0x68
    2228:	beq	22b4 <coda_cursor_goto_attributes+0x188>
    222c:	cmp	r3, #105	; 0x69
    2230:	beq	22d0 <coda_cursor_goto_attributes+0x1a4>
    2234:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    2238:	ldr	r0, [fp, #-8]
    223c:	bl	0 <coda_ascbin_cursor_goto_attributes>
    2240:	mov	r3, r0
    2244:	cmp	r3, #0
    2248:	beq	22ec <coda_cursor_goto_attributes+0x1c0>
    224c:	mvn	r3, #0
    2250:	b	2344 <coda_cursor_goto_attributes+0x218>
    2254:	ldr	r0, [fp, #-8]
    2258:	bl	0 <coda_mem_cursor_goto_attributes>
    225c:	mov	r3, r0
    2260:	cmp	r3, #0
    2264:	beq	22f4 <coda_cursor_goto_attributes+0x1c8>
    2268:	mvn	r3, #0
    226c:	b	2344 <coda_cursor_goto_attributes+0x218>
    2270:	mov	r1, #0
    2274:	mvn	r0, #10
    2278:	bl	0 <coda_set_error>
    227c:	mvn	r3, #0
    2280:	b	2344 <coda_cursor_goto_attributes+0x218>
    2284:	mov	r1, #0
    2288:	mvn	r0, #12
    228c:	bl	0 <coda_set_error>
    2290:	mvn	r3, #0
    2294:	b	2344 <coda_cursor_goto_attributes+0x218>
    2298:	ldr	r0, [fp, #-8]
    229c:	bl	0 <coda_cdf_cursor_goto_attributes>
    22a0:	mov	r3, r0
    22a4:	cmp	r3, #0
    22a8:	beq	22fc <coda_cursor_goto_attributes+0x1d0>
    22ac:	mvn	r3, #0
    22b0:	b	2344 <coda_cursor_goto_attributes+0x218>
    22b4:	ldr	r0, [fp, #-8]
    22b8:	bl	0 <coda_netcdf_cursor_goto_attributes>
    22bc:	mov	r3, r0
    22c0:	cmp	r3, #0
    22c4:	beq	2304 <coda_cursor_goto_attributes+0x1d8>
    22c8:	mvn	r3, #0
    22cc:	b	2344 <coda_cursor_goto_attributes+0x218>
    22d0:	ldr	r0, [fp, #-8]
    22d4:	bl	0 <coda_grib_cursor_goto_attributes>
    22d8:	mov	r3, r0
    22dc:	cmp	r3, #0
    22e0:	beq	230c <coda_cursor_goto_attributes+0x1e0>
    22e4:	mvn	r3, #0
    22e8:	b	2344 <coda_cursor_goto_attributes+0x218>
    22ec:	nop			; (mov r0, r0)
    22f0:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    22f4:	nop			; (mov r0, r0)
    22f8:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    22fc:	nop			; (mov r0, r0)
    2300:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    2304:	nop			; (mov r0, r0)
    2308:	b	2310 <coda_cursor_goto_attributes+0x1e4>
    230c:	nop			; (mov r0, r0)
    2310:	ldr	r3, [fp, #-8]
    2314:	ldr	r3, [r3, #4]
    2318:	sub	r3, r3, #1
    231c:	ldr	r2, [fp, #-8]
    2320:	lsl	r3, r3, #4
    2324:	add	r3, r2, r3
    2328:	ldr	r3, [r3, #8]
    232c:	ldr	r3, [r3]
    2330:	cmp	r3, #100	; 0x64
    2334:	bne	2340 <coda_cursor_goto_attributes+0x214>
    2338:	ldr	r0, [fp, #-8]
    233c:	bl	0 <coda_mem_cursor_update_offset>
    2340:	mov	r3, #0
    2344:	mov	r0, r3
    2348:	sub	sp, fp, #4
    234c:	pop	{fp, pc}
    2350:	.word	0x000004dc
    2354:	.word	0x00000020
    2358:	.word	0x00000148
    235c:	.word	0x000004e3
    2360:	.word	0x000001a0

00002364 <coda_cursor_goto_parent>:
    2364:	push	{fp, lr}
    2368:	add	fp, sp, #4
    236c:	sub	sp, sp, #8
    2370:	str	r0, [fp, #-8]
    2374:	ldr	r3, [fp, #-8]
    2378:	cmp	r3, #0
    237c:	beq	23b4 <coda_cursor_goto_parent+0x50>
    2380:	ldr	r3, [fp, #-8]
    2384:	ldr	r3, [r3, #4]
    2388:	cmp	r3, #0
    238c:	ble	23b4 <coda_cursor_goto_parent+0x50>
    2390:	ldr	r3, [fp, #-8]
    2394:	ldr	r3, [r3, #4]
    2398:	sub	r3, r3, #1
    239c:	ldr	r2, [fp, #-8]
    23a0:	lsl	r3, r3, #4
    23a4:	add	r3, r2, r3
    23a8:	ldr	r3, [r3, #8]
    23ac:	cmp	r3, #0
    23b0:	bne	23d0 <coda_cursor_goto_parent+0x6c>
    23b4:	ldr	r3, [pc, #92]	; 2418 <coda_cursor_goto_parent+0xb4>
    23b8:	ldr	r2, [pc, #92]	; 241c <coda_cursor_goto_parent+0xb8>
    23bc:	ldr	r1, [pc, #92]	; 2420 <coda_cursor_goto_parent+0xbc>
    23c0:	mvn	r0, #99	; 0x63
    23c4:	bl	0 <coda_set_error>
    23c8:	mvn	r3, #0
    23cc:	b	240c <coda_cursor_goto_parent+0xa8>
    23d0:	ldr	r3, [fp, #-8]
    23d4:	ldr	r3, [r3, #4]
    23d8:	cmp	r3, #1
    23dc:	bgt	23f4 <coda_cursor_goto_parent+0x90>
    23e0:	mov	r1, #0
    23e4:	mvn	r0, #107	; 0x6b
    23e8:	bl	0 <coda_set_error>
    23ec:	mvn	r3, #0
    23f0:	b	240c <coda_cursor_goto_parent+0xa8>
    23f4:	ldr	r3, [fp, #-8]
    23f8:	ldr	r3, [r3, #4]
    23fc:	sub	r2, r3, #1
    2400:	ldr	r3, [fp, #-8]
    2404:	str	r2, [r3, #4]
    2408:	mov	r3, #0
    240c:	mov	r0, r3
    2410:	sub	sp, fp, #4
    2414:	pop	{fp, pc}
    2418:	.word	0x00000535
    241c:	.word	0x00000020
    2420:	.word	0x00000148

00002424 <coda_cursor_goto_root>:
    2424:	push	{fp, lr}
    2428:	add	fp, sp, #4
    242c:	sub	sp, sp, #8
    2430:	str	r0, [fp, #-8]
    2434:	ldr	r3, [fp, #-8]
    2438:	cmp	r3, #0
    243c:	beq	2474 <coda_cursor_goto_root+0x50>
    2440:	ldr	r3, [fp, #-8]
    2444:	ldr	r3, [r3, #4]
    2448:	cmp	r3, #0
    244c:	ble	2474 <coda_cursor_goto_root+0x50>
    2450:	ldr	r3, [fp, #-8]
    2454:	ldr	r3, [r3, #4]
    2458:	sub	r3, r3, #1
    245c:	ldr	r2, [fp, #-8]
    2460:	lsl	r3, r3, #4
    2464:	add	r3, r2, r3
    2468:	ldr	r3, [r3, #8]
    246c:	cmp	r3, #0
    2470:	bne	2490 <coda_cursor_goto_root+0x6c>
    2474:	ldr	r3, [pc, #268]	; 2588 <coda_cursor_goto_root+0x164>
    2478:	ldr	r2, [pc, #268]	; 258c <coda_cursor_goto_root+0x168>
    247c:	ldr	r1, [pc, #268]	; 2590 <coda_cursor_goto_root+0x16c>
    2480:	mvn	r0, #99	; 0x63
    2484:	bl	0 <coda_set_error>
    2488:	mvn	r3, #0
    248c:	b	257c <coda_cursor_goto_root+0x158>
    2490:	ldr	r3, [fp, #-8]
    2494:	mov	r2, #1
    2498:	str	r2, [r3, #4]
    249c:	ldr	r3, [fp, #-8]
    24a0:	ldr	r3, [r3, #4]
    24a4:	sub	r3, r3, #1
    24a8:	ldr	r2, [fp, #-8]
    24ac:	lsl	r3, r3, #4
    24b0:	add	r3, r2, r3
    24b4:	ldr	r3, [r3, #8]
    24b8:	ldr	r3, [r3]
    24bc:	cmp	r3, #100	; 0x64
    24c0:	bne	24cc <coda_cursor_goto_root+0xa8>
    24c4:	ldr	r0, [fp, #-8]
    24c8:	bl	0 <coda_mem_cursor_update_offset>
    24cc:	ldr	r3, [pc, #192]	; 2594 <coda_cursor_goto_root+0x170>
    24d0:	ldr	r3, [pc, r3]
    24d4:	bl	0 <__aeabi_read_tp>
    24d8:	mov	r2, r0
    24dc:	ldr	r3, [r2, r3]
    24e0:	cmp	r3, #0
    24e4:	beq	2578 <coda_cursor_goto_root+0x154>
    24e8:	ldr	r3, [fp, #-8]
    24ec:	ldr	r3, [r3, #4]
    24f0:	sub	r3, r3, #1
    24f4:	ldr	r2, [fp, #-8]
    24f8:	lsl	r3, r3, #4
    24fc:	add	r3, r2, r3
    2500:	ldr	r3, [r3, #8]
    2504:	ldr	r3, [r3]
    2508:	cmp	r3, #99	; 0x63
    250c:	bhi	2530 <coda_cursor_goto_root+0x10c>
    2510:	ldr	r3, [fp, #-8]
    2514:	ldr	r3, [r3, #4]
    2518:	sub	r3, r3, #1
    251c:	ldr	r2, [fp, #-8]
    2520:	lsl	r3, r3, #4
    2524:	add	r3, r2, r3
    2528:	ldr	r3, [r3, #8]
    252c:	b	2550 <coda_cursor_goto_root+0x12c>
    2530:	ldr	r3, [fp, #-8]
    2534:	ldr	r3, [r3, #4]
    2538:	sub	r3, r3, #1
    253c:	ldr	r2, [fp, #-8]
    2540:	lsl	r3, r3, #4
    2544:	add	r3, r2, r3
    2548:	ldr	r3, [r3, #8]
    254c:	ldr	r3, [r3, #4]
    2550:	ldr	r3, [r3, #8]
    2554:	cmp	r3, #6
    2558:	bne	2578 <coda_cursor_goto_root+0x154>
    255c:	ldr	r0, [fp, #-8]
    2560:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    2564:	mov	r3, r0
    2568:	cmp	r3, #0
    256c:	beq	2578 <coda_cursor_goto_root+0x154>
    2570:	mvn	r3, #0
    2574:	b	257c <coda_cursor_goto_root+0x158>
    2578:	mov	r3, #0
    257c:	mov	r0, r3
    2580:	sub	sp, fp, #4
    2584:	pop	{fp, pc}
    2588:	.word	0x0000054f
    258c:	.word	0x00000020
    2590:	.word	0x00000148
    2594:	.word	0x000000bc

00002598 <coda_cursor_use_base_type_of_special_type>:
    2598:	push	{fp, lr}
    259c:	add	fp, sp, #4
    25a0:	sub	sp, sp, #16
    25a4:	str	r0, [fp, #-16]
    25a8:	ldr	r3, [fp, #-16]
    25ac:	cmp	r3, #0
    25b0:	beq	25e8 <coda_cursor_use_base_type_of_special_type+0x50>
    25b4:	ldr	r3, [fp, #-16]
    25b8:	ldr	r3, [r3, #4]
    25bc:	cmp	r3, #0
    25c0:	ble	25e8 <coda_cursor_use_base_type_of_special_type+0x50>
    25c4:	ldr	r3, [fp, #-16]
    25c8:	ldr	r3, [r3, #4]
    25cc:	sub	r3, r3, #1
    25d0:	ldr	r2, [fp, #-16]
    25d4:	lsl	r3, r3, #4
    25d8:	add	r3, r2, r3
    25dc:	ldr	r3, [r3, #8]
    25e0:	cmp	r3, #0
    25e4:	bne	2604 <coda_cursor_use_base_type_of_special_type+0x6c>
    25e8:	ldr	r3, [pc, #636]	; 286c <coda_cursor_use_base_type_of_special_type+0x2d4>
    25ec:	ldr	r2, [pc, #636]	; 2870 <coda_cursor_use_base_type_of_special_type+0x2d8>
    25f0:	ldr	r1, [pc, #636]	; 2874 <coda_cursor_use_base_type_of_special_type+0x2dc>
    25f4:	mvn	r0, #99	; 0x63
    25f8:	bl	0 <coda_set_error>
    25fc:	mvn	r3, #0
    2600:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    2604:	ldr	r3, [fp, #-16]
    2608:	ldr	r3, [r3, #4]
    260c:	sub	r3, r3, #1
    2610:	ldr	r2, [fp, #-16]
    2614:	lsl	r3, r3, #4
    2618:	add	r3, r2, r3
    261c:	ldr	r3, [r3, #8]
    2620:	ldr	r3, [r3]
    2624:	cmp	r3, #99	; 0x63
    2628:	bhi	264c <coda_cursor_use_base_type_of_special_type+0xb4>
    262c:	ldr	r3, [fp, #-16]
    2630:	ldr	r3, [r3, #4]
    2634:	sub	r3, r3, #1
    2638:	ldr	r2, [fp, #-16]
    263c:	lsl	r3, r3, #4
    2640:	add	r3, r2, r3
    2644:	ldr	r3, [r3, #8]
    2648:	b	266c <coda_cursor_use_base_type_of_special_type+0xd4>
    264c:	ldr	r3, [fp, #-16]
    2650:	ldr	r3, [r3, #4]
    2654:	sub	r3, r3, #1
    2658:	ldr	r2, [fp, #-16]
    265c:	lsl	r3, r3, #4
    2660:	add	r3, r2, r3
    2664:	ldr	r3, [r3, #8]
    2668:	ldr	r3, [r3, #4]
    266c:	str	r3, [fp, #-8]
    2670:	ldr	r3, [fp, #-8]
    2674:	ldr	r3, [r3, #8]
    2678:	cmp	r3, #6
    267c:	beq	26ac <coda_cursor_use_base_type_of_special_type+0x114>
    2680:	ldr	r3, [fp, #-8]
    2684:	ldr	r3, [r3, #8]
    2688:	mov	r0, r3
    268c:	bl	0 <coda_type_get_class_name>
    2690:	mov	r3, r0
    2694:	mov	r2, r3
    2698:	ldr	r1, [pc, #472]	; 2878 <coda_cursor_use_base_type_of_special_type+0x2e0>
    269c:	mvn	r0, #104	; 0x68
    26a0:	bl	0 <coda_set_error>
    26a4:	mvn	r3, #0
    26a8:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    26ac:	ldr	r3, [fp, #-16]
    26b0:	ldr	r3, [r3, #4]
    26b4:	sub	r3, r3, #1
    26b8:	ldr	r2, [fp, #-16]
    26bc:	lsl	r3, r3, #4
    26c0:	add	r3, r2, r3
    26c4:	ldr	r3, [r3, #8]
    26c8:	ldr	r3, [r3]
    26cc:	cmp	r3, #102	; 0x66
    26d0:	bhi	26f0 <coda_cursor_use_base_type_of_special_type+0x158>
    26d4:	cmp	r3, #101	; 0x65
    26d8:	bcs	2758 <coda_cursor_use_base_type_of_special_type+0x1c0>
    26dc:	cmp	r3, #1
    26e0:	bls	2704 <coda_cursor_use_base_type_of_special_type+0x16c>
    26e4:	cmp	r3, #100	; 0x64
    26e8:	beq	2720 <coda_cursor_use_base_type_of_special_type+0x188>
    26ec:	b	2780 <coda_cursor_use_base_type_of_special_type+0x1e8>
    26f0:	cmp	r3, #103	; 0x67
    26f4:	beq	273c <coda_cursor_use_base_type_of_special_type+0x1a4>
    26f8:	cmp	r3, #105	; 0x69
    26fc:	bhi	2780 <coda_cursor_use_base_type_of_special_type+0x1e8>
    2700:	b	2758 <coda_cursor_use_base_type_of_special_type+0x1c0>
    2704:	ldr	r0, [fp, #-16]
    2708:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
    270c:	mov	r3, r0
    2710:	cmp	r3, #0
    2714:	beq	276c <coda_cursor_use_base_type_of_special_type+0x1d4>
    2718:	mvn	r3, #0
    271c:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    2720:	ldr	r0, [fp, #-16]
    2724:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
    2728:	mov	r3, r0
    272c:	cmp	r3, #0
    2730:	beq	2774 <coda_cursor_use_base_type_of_special_type+0x1dc>
    2734:	mvn	r3, #0
    2738:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    273c:	ldr	r0, [fp, #-16]
    2740:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
    2744:	mov	r3, r0
    2748:	cmp	r3, #0
    274c:	beq	277c <coda_cursor_use_base_type_of_special_type+0x1e4>
    2750:	mvn	r3, #0
    2754:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    2758:	ldr	r3, [pc, #284]	; 287c <coda_cursor_use_base_type_of_special_type+0x2e4>
    275c:	mov	r2, #1440	; 0x5a0
    2760:	ldr	r1, [pc, #264]	; 2870 <coda_cursor_use_base_type_of_special_type+0x2d8>
    2764:	ldr	r0, [pc, #276]	; 2880 <coda_cursor_use_base_type_of_special_type+0x2e8>
    2768:	bl	0 <__assert_fail>
    276c:	nop			; (mov r0, r0)
    2770:	b	2780 <coda_cursor_use_base_type_of_special_type+0x1e8>
    2774:	nop			; (mov r0, r0)
    2778:	b	2780 <coda_cursor_use_base_type_of_special_type+0x1e8>
    277c:	nop			; (mov r0, r0)
    2780:	ldr	r3, [fp, #-16]
    2784:	ldr	r3, [r3, #4]
    2788:	sub	r3, r3, #1
    278c:	ldr	r2, [fp, #-16]
    2790:	lsl	r3, r3, #4
    2794:	add	r3, r2, r3
    2798:	ldr	r3, [r3, #8]
    279c:	ldr	r3, [r3]
    27a0:	cmp	r3, #100	; 0x64
    27a4:	bne	27b0 <coda_cursor_use_base_type_of_special_type+0x218>
    27a8:	ldr	r0, [fp, #-16]
    27ac:	bl	0 <coda_mem_cursor_update_offset>
    27b0:	ldr	r3, [pc, #204]	; 2884 <coda_cursor_use_base_type_of_special_type+0x2ec>
    27b4:	ldr	r3, [pc, r3]
    27b8:	bl	0 <__aeabi_read_tp>
    27bc:	mov	r2, r0
    27c0:	ldr	r3, [r2, r3]
    27c4:	cmp	r3, #0
    27c8:	beq	285c <coda_cursor_use_base_type_of_special_type+0x2c4>
    27cc:	ldr	r3, [fp, #-16]
    27d0:	ldr	r3, [r3, #4]
    27d4:	sub	r3, r3, #1
    27d8:	ldr	r2, [fp, #-16]
    27dc:	lsl	r3, r3, #4
    27e0:	add	r3, r2, r3
    27e4:	ldr	r3, [r3, #8]
    27e8:	ldr	r3, [r3]
    27ec:	cmp	r3, #99	; 0x63
    27f0:	bhi	2814 <coda_cursor_use_base_type_of_special_type+0x27c>
    27f4:	ldr	r3, [fp, #-16]
    27f8:	ldr	r3, [r3, #4]
    27fc:	sub	r3, r3, #1
    2800:	ldr	r2, [fp, #-16]
    2804:	lsl	r3, r3, #4
    2808:	add	r3, r2, r3
    280c:	ldr	r3, [r3, #8]
    2810:	b	2834 <coda_cursor_use_base_type_of_special_type+0x29c>
    2814:	ldr	r3, [fp, #-16]
    2818:	ldr	r3, [r3, #4]
    281c:	sub	r3, r3, #1
    2820:	ldr	r2, [fp, #-16]
    2824:	lsl	r3, r3, #4
    2828:	add	r3, r2, r3
    282c:	ldr	r3, [r3, #8]
    2830:	ldr	r3, [r3, #4]
    2834:	ldr	r3, [r3, #8]
    2838:	cmp	r3, #6
    283c:	bne	285c <coda_cursor_use_base_type_of_special_type+0x2c4>
    2840:	ldr	r0, [fp, #-16]
    2844:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    2848:	mov	r3, r0
    284c:	cmp	r3, #0
    2850:	beq	285c <coda_cursor_use_base_type_of_special_type+0x2c4>
    2854:	mvn	r3, #0
    2858:	b	2860 <coda_cursor_use_base_type_of_special_type+0x2c8>
    285c:	mov	r3, #0
    2860:	mov	r0, r3
    2864:	sub	sp, fp, #4
    2868:	pop	{fp, pc}
    286c:	.word	0x0000057b
    2870:	.word	0x00000020
    2874:	.word	0x00000148
    2878:	.word	0x0000033c
    287c:	.word	0x0000061c
    2880:	.word	0x0000006c
    2884:	.word	0x000000c8

00002888 <coda_cursor_has_ascii_content>:
    2888:	push	{fp, lr}
    288c:	add	fp, sp, #4
    2890:	sub	sp, sp, #536	; 0x218
    2894:	str	r0, [fp, #-536]	; 0xfffffde8
    2898:	str	r1, [fp, #-540]	; 0xfffffde4
    289c:	ldr	r3, [fp, #-536]	; 0xfffffde8
    28a0:	cmp	r3, #0
    28a4:	beq	28dc <coda_cursor_has_ascii_content+0x54>
    28a8:	ldr	r3, [fp, #-536]	; 0xfffffde8
    28ac:	ldr	r3, [r3, #4]
    28b0:	cmp	r3, #0
    28b4:	ble	28dc <coda_cursor_has_ascii_content+0x54>
    28b8:	ldr	r3, [fp, #-536]	; 0xfffffde8
    28bc:	ldr	r3, [r3, #4]
    28c0:	sub	r3, r3, #1
    28c4:	ldr	r2, [fp, #-536]	; 0xfffffde8
    28c8:	lsl	r3, r3, #4
    28cc:	add	r3, r2, r3
    28d0:	ldr	r3, [r3, #8]
    28d4:	cmp	r3, #0
    28d8:	bne	28f8 <coda_cursor_has_ascii_content+0x70>
    28dc:	ldr	r3, [pc, #392]	; 2a6c <coda_cursor_has_ascii_content+0x1e4>
    28e0:	ldr	r2, [pc, #392]	; 2a70 <coda_cursor_has_ascii_content+0x1e8>
    28e4:	ldr	r1, [pc, #392]	; 2a74 <coda_cursor_has_ascii_content+0x1ec>
    28e8:	mvn	r0, #99	; 0x63
    28ec:	bl	0 <coda_set_error>
    28f0:	mvn	r3, #0
    28f4:	b	2a60 <coda_cursor_has_ascii_content+0x1d8>
    28f8:	ldr	r3, [fp, #-540]	; 0xfffffde4
    28fc:	cmp	r3, #0
    2900:	bne	2920 <coda_cursor_has_ascii_content+0x98>
    2904:	ldr	r3, [pc, #364]	; 2a78 <coda_cursor_has_ascii_content+0x1f0>
    2908:	ldr	r2, [pc, #352]	; 2a70 <coda_cursor_has_ascii_content+0x1e8>
    290c:	ldr	r1, [pc, #360]	; 2a7c <coda_cursor_has_ascii_content+0x1f4>
    2910:	mvn	r0, #99	; 0x63
    2914:	bl	0 <coda_set_error>
    2918:	mvn	r3, #0
    291c:	b	2a60 <coda_cursor_has_ascii_content+0x1d8>
    2920:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2924:	ldr	r3, [r3, #4]
    2928:	sub	r3, r3, #1
    292c:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2930:	lsl	r3, r3, #4
    2934:	add	r3, r2, r3
    2938:	ldr	r3, [r3, #8]
    293c:	ldr	r3, [r3]
    2940:	cmp	r3, #0
    2944:	bne	2958 <coda_cursor_has_ascii_content+0xd0>
    2948:	ldr	r3, [fp, #-540]	; 0xfffffde4
    294c:	mov	r2, #1
    2950:	str	r2, [r3]
    2954:	b	2a5c <coda_cursor_has_ascii_content+0x1d4>
    2958:	ldr	r3, [fp, #-536]	; 0xfffffde8
    295c:	ldr	r3, [r3, #4]
    2960:	sub	r3, r3, #1
    2964:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2968:	lsl	r3, r3, #4
    296c:	add	r3, r2, r3
    2970:	ldr	r3, [r3, #8]
    2974:	ldr	r3, [r3]
    2978:	cmp	r3, #99	; 0x63
    297c:	bhi	29a0 <coda_cursor_has_ascii_content+0x118>
    2980:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2984:	ldr	r3, [r3, #4]
    2988:	sub	r3, r3, #1
    298c:	ldr	r2, [fp, #-536]	; 0xfffffde8
    2990:	lsl	r3, r3, #4
    2994:	add	r3, r2, r3
    2998:	ldr	r3, [r3, #8]
    299c:	b	29c0 <coda_cursor_has_ascii_content+0x138>
    29a0:	ldr	r3, [fp, #-536]	; 0xfffffde8
    29a4:	ldr	r3, [r3, #4]
    29a8:	sub	r3, r3, #1
    29ac:	ldr	r2, [fp, #-536]	; 0xfffffde8
    29b0:	lsl	r3, r3, #4
    29b4:	add	r3, r2, r3
    29b8:	ldr	r3, [r3, #8]
    29bc:	ldr	r3, [r3, #4]
    29c0:	str	r3, [fp, #-8]
    29c4:	ldr	r3, [fp, #-8]
    29c8:	ldr	r3, [r3, #8]
    29cc:	cmp	r3, #6
    29d0:	bne	2a24 <coda_cursor_has_ascii_content+0x19c>
    29d4:	ldr	r2, [fp, #-536]	; 0xfffffde8
    29d8:	sub	r3, fp, #532	; 0x214
    29dc:	mov	r1, r2
    29e0:	mov	r2, #520	; 0x208
    29e4:	mov	r0, r3
    29e8:	bl	0 <memcpy>
    29ec:	sub	r3, fp, #532	; 0x214
    29f0:	mov	r0, r3
    29f4:	bl	2598 <coda_cursor_use_base_type_of_special_type>
    29f8:	mov	r3, r0
    29fc:	cmp	r3, #0
    2a00:	beq	2a0c <coda_cursor_has_ascii_content+0x184>
    2a04:	mvn	r3, #0
    2a08:	b	2a60 <coda_cursor_has_ascii_content+0x1d8>
    2a0c:	sub	r3, fp, #532	; 0x214
    2a10:	ldr	r1, [fp, #-540]	; 0xfffffde4
    2a14:	mov	r0, r3
    2a18:	bl	2888 <coda_cursor_has_ascii_content>
    2a1c:	mov	r3, r0
    2a20:	b	2a60 <coda_cursor_has_ascii_content+0x1d8>
    2a24:	ldr	r3, [fp, #-8]
    2a28:	ldr	r3, [r3]
    2a2c:	cmp	r3, #0
    2a30:	beq	2a44 <coda_cursor_has_ascii_content+0x1bc>
    2a34:	ldr	r3, [fp, #-8]
    2a38:	ldr	r3, [r3, #8]
    2a3c:	cmp	r3, #4
    2a40:	bne	2a4c <coda_cursor_has_ascii_content+0x1c4>
    2a44:	mov	r2, #1
    2a48:	b	2a50 <coda_cursor_has_ascii_content+0x1c8>
    2a4c:	mov	r2, #0
    2a50:	ldr	r3, [fp, #-540]	; 0xfffffde4
    2a54:	str	r2, [r3]
    2a58:	nop			; (mov r0, r0)
    2a5c:	mov	r3, #0
    2a60:	mov	r0, r3
    2a64:	sub	sp, fp, #4
    2a68:	pop	{fp, pc}
    2a6c:	.word	0x000005c5
    2a70:	.word	0x00000020
    2a74:	.word	0x00000148
    2a78:	.word	0x000005ca
    2a7c:	.word	0x0000037c

00002a80 <coda_cursor_has_attributes>:
    2a80:	push	{fp, lr}
    2a84:	add	fp, sp, #4
    2a88:	sub	sp, sp, #16
    2a8c:	str	r0, [fp, #-16]
    2a90:	str	r1, [fp, #-20]	; 0xffffffec
    2a94:	ldr	r3, [fp, #-16]
    2a98:	cmp	r3, #0
    2a9c:	beq	2ad4 <coda_cursor_has_attributes+0x54>
    2aa0:	ldr	r3, [fp, #-16]
    2aa4:	ldr	r3, [r3, #4]
    2aa8:	cmp	r3, #0
    2aac:	ble	2ad4 <coda_cursor_has_attributes+0x54>
    2ab0:	ldr	r3, [fp, #-16]
    2ab4:	ldr	r3, [r3, #4]
    2ab8:	sub	r3, r3, #1
    2abc:	ldr	r2, [fp, #-16]
    2ac0:	lsl	r3, r3, #4
    2ac4:	add	r3, r2, r3
    2ac8:	ldr	r3, [r3, #8]
    2acc:	cmp	r3, #0
    2ad0:	bne	2af0 <coda_cursor_has_attributes+0x70>
    2ad4:	ldr	r3, [pc, #220]	; 2bb8 <coda_cursor_has_attributes+0x138>
    2ad8:	ldr	r2, [pc, #220]	; 2bbc <coda_cursor_has_attributes+0x13c>
    2adc:	ldr	r1, [pc, #220]	; 2bc0 <coda_cursor_has_attributes+0x140>
    2ae0:	mvn	r0, #99	; 0x63
    2ae4:	bl	0 <coda_set_error>
    2ae8:	mvn	r3, #0
    2aec:	b	2bac <coda_cursor_has_attributes+0x12c>
    2af0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2af4:	cmp	r3, #0
    2af8:	bne	2b18 <coda_cursor_has_attributes+0x98>
    2afc:	ldr	r3, [pc, #192]	; 2bc4 <coda_cursor_has_attributes+0x144>
    2b00:	ldr	r2, [pc, #180]	; 2bbc <coda_cursor_has_attributes+0x13c>
    2b04:	ldr	r1, [pc, #188]	; 2bc8 <coda_cursor_has_attributes+0x148>
    2b08:	mvn	r0, #99	; 0x63
    2b0c:	bl	0 <coda_set_error>
    2b10:	mvn	r3, #0
    2b14:	b	2bac <coda_cursor_has_attributes+0x12c>
    2b18:	ldr	r3, [fp, #-16]
    2b1c:	ldr	r3, [r3, #4]
    2b20:	sub	r3, r3, #1
    2b24:	ldr	r2, [fp, #-16]
    2b28:	lsl	r3, r3, #4
    2b2c:	add	r3, r2, r3
    2b30:	ldr	r3, [r3, #8]
    2b34:	ldr	r3, [r3]
    2b38:	cmp	r3, #99	; 0x63
    2b3c:	bhi	2b60 <coda_cursor_has_attributes+0xe0>
    2b40:	ldr	r3, [fp, #-16]
    2b44:	ldr	r3, [r3, #4]
    2b48:	sub	r3, r3, #1
    2b4c:	ldr	r2, [fp, #-16]
    2b50:	lsl	r3, r3, #4
    2b54:	add	r3, r2, r3
    2b58:	ldr	r3, [r3, #8]
    2b5c:	b	2b80 <coda_cursor_has_attributes+0x100>
    2b60:	ldr	r3, [fp, #-16]
    2b64:	ldr	r3, [r3, #4]
    2b68:	sub	r3, r3, #1
    2b6c:	ldr	r2, [fp, #-16]
    2b70:	lsl	r3, r3, #4
    2b74:	add	r3, r2, r3
    2b78:	ldr	r3, [r3, #8]
    2b7c:	ldr	r3, [r3, #4]
    2b80:	str	r3, [fp, #-8]
    2b84:	ldr	r3, [fp, #-8]
    2b88:	ldr	r3, [r3, #36]	; 0x24
    2b8c:	cmp	r3, #0
    2b90:	movne	r3, #1
    2b94:	moveq	r3, #0
    2b98:	uxtb	r3, r3
    2b9c:	mov	r2, r3
    2ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ba4:	str	r2, [r3]
    2ba8:	mov	r3, #0
    2bac:	mov	r0, r3
    2bb0:	sub	sp, fp, #4
    2bb4:	pop	{fp, pc}
    2bb8:	.word	0x000005f8
    2bbc:	.word	0x00000020
    2bc0:	.word	0x00000148
    2bc4:	.word	0x000005fd
    2bc8:	.word	0x000003a8

00002bcc <coda_cursor_get_string_length>:
    2bcc:	push	{fp, lr}
    2bd0:	add	fp, sp, #4
    2bd4:	sub	sp, sp, #16
    2bd8:	str	r0, [fp, #-16]
    2bdc:	str	r1, [fp, #-20]	; 0xffffffec
    2be0:	ldr	r3, [fp, #-16]
    2be4:	cmp	r3, #0
    2be8:	beq	2c20 <coda_cursor_get_string_length+0x54>
    2bec:	ldr	r3, [fp, #-16]
    2bf0:	ldr	r3, [r3, #4]
    2bf4:	cmp	r3, #0
    2bf8:	ble	2c20 <coda_cursor_get_string_length+0x54>
    2bfc:	ldr	r3, [fp, #-16]
    2c00:	ldr	r3, [r3, #4]
    2c04:	sub	r3, r3, #1
    2c08:	ldr	r2, [fp, #-16]
    2c0c:	lsl	r3, r3, #4
    2c10:	add	r3, r2, r3
    2c14:	ldr	r3, [r3, #8]
    2c18:	cmp	r3, #0
    2c1c:	bne	2c3c <coda_cursor_get_string_length+0x70>
    2c20:	ldr	r3, [pc, #408]	; 2dc0 <coda_cursor_get_string_length+0x1f4>
    2c24:	ldr	r2, [pc, #408]	; 2dc4 <coda_cursor_get_string_length+0x1f8>
    2c28:	ldr	r1, [pc, #408]	; 2dc8 <coda_cursor_get_string_length+0x1fc>
    2c2c:	mvn	r0, #99	; 0x63
    2c30:	bl	0 <coda_set_error>
    2c34:	mvn	r3, #0
    2c38:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c40:	cmp	r3, #0
    2c44:	bne	2c64 <coda_cursor_get_string_length+0x98>
    2c48:	ldr	r3, [pc, #380]	; 2dcc <coda_cursor_get_string_length+0x200>
    2c4c:	ldr	r2, [pc, #368]	; 2dc4 <coda_cursor_get_string_length+0x1f8>
    2c50:	ldr	r1, [pc, #376]	; 2dd0 <coda_cursor_get_string_length+0x204>
    2c54:	mvn	r0, #99	; 0x63
    2c58:	bl	0 <coda_set_error>
    2c5c:	mvn	r3, #0
    2c60:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2c64:	sub	r3, fp, #8
    2c68:	mov	r1, r3
    2c6c:	ldr	r0, [fp, #-16]
    2c70:	bl	2888 <coda_cursor_has_ascii_content>
    2c74:	mov	r3, r0
    2c78:	cmp	r3, #0
    2c7c:	beq	2c88 <coda_cursor_get_string_length+0xbc>
    2c80:	mvn	r3, #0
    2c84:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2c88:	ldr	r3, [fp, #-8]
    2c8c:	cmp	r3, #0
    2c90:	bne	2ca8 <coda_cursor_get_string_length+0xdc>
    2c94:	ldr	r1, [pc, #312]	; 2dd4 <coda_cursor_get_string_length+0x208>
    2c98:	mvn	r0, #104	; 0x68
    2c9c:	bl	0 <coda_set_error>
    2ca0:	mvn	r3, #0
    2ca4:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2ca8:	ldr	r3, [fp, #-16]
    2cac:	ldr	r3, [r3, #4]
    2cb0:	sub	r3, r3, #1
    2cb4:	ldr	r2, [fp, #-16]
    2cb8:	lsl	r3, r3, #4
    2cbc:	add	r3, r2, r3
    2cc0:	ldr	r3, [r3, #8]
    2cc4:	ldr	r3, [r3]
    2cc8:	cmp	r3, #101	; 0x65
    2ccc:	beq	2d50 <coda_cursor_get_string_length+0x184>
    2cd0:	cmp	r3, #101	; 0x65
    2cd4:	bhi	2cf4 <coda_cursor_get_string_length+0x128>
    2cd8:	cmp	r3, #1
    2cdc:	beq	2d28 <coda_cursor_get_string_length+0x15c>
    2ce0:	cmp	r3, #1
    2ce4:	bcc	2d14 <coda_cursor_get_string_length+0x148>
    2ce8:	cmp	r3, #100	; 0x64
    2cec:	beq	2d3c <coda_cursor_get_string_length+0x170>
    2cf0:	b	2da0 <coda_cursor_get_string_length+0x1d4>
    2cf4:	cmp	r3, #103	; 0x67
    2cf8:	beq	2d78 <coda_cursor_get_string_length+0x1ac>
    2cfc:	cmp	r3, #103	; 0x67
    2d00:	bcc	2d64 <coda_cursor_get_string_length+0x198>
    2d04:	cmp	r3, #104	; 0x68
    2d08:	beq	2d8c <coda_cursor_get_string_length+0x1c0>
    2d0c:	cmp	r3, #105	; 0x69
    2d10:	b	2da0 <coda_cursor_get_string_length+0x1d4>
    2d14:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d18:	ldr	r0, [fp, #-16]
    2d1c:	bl	0 <coda_ascii_cursor_get_string_length>
    2d20:	mov	r3, r0
    2d24:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d28:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d2c:	ldr	r0, [fp, #-16]
    2d30:	bl	0 <coda_bin_cursor_get_string_length>
    2d34:	mov	r3, r0
    2d38:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d40:	ldr	r0, [fp, #-16]
    2d44:	bl	0 <coda_mem_cursor_get_string_length>
    2d48:	mov	r3, r0
    2d4c:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d50:	mov	r1, #0
    2d54:	mvn	r0, #10
    2d58:	bl	0 <coda_set_error>
    2d5c:	mvn	r3, #0
    2d60:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d64:	mov	r1, #0
    2d68:	mvn	r0, #12
    2d6c:	bl	0 <coda_set_error>
    2d70:	mvn	r3, #0
    2d74:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d78:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d7c:	ldr	r0, [fp, #-16]
    2d80:	bl	0 <coda_cdf_cursor_get_string_length>
    2d84:	mov	r3, r0
    2d88:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d90:	ldr	r0, [fp, #-16]
    2d94:	bl	0 <coda_netcdf_cursor_get_string_length>
    2d98:	mov	r3, r0
    2d9c:	b	2db4 <coda_cursor_get_string_length+0x1e8>
    2da0:	ldr	r3, [pc, #48]	; 2dd8 <coda_cursor_get_string_length+0x20c>
    2da4:	ldr	r2, [pc, #48]	; 2ddc <coda_cursor_get_string_length+0x210>
    2da8:	ldr	r1, [pc, #20]	; 2dc4 <coda_cursor_get_string_length+0x1f8>
    2dac:	ldr	r0, [pc, #44]	; 2de0 <coda_cursor_get_string_length+0x214>
    2db0:	bl	0 <__assert_fail>
    2db4:	mov	r0, r3
    2db8:	sub	sp, fp, #4
    2dbc:	pop	{fp, pc}
    2dc0:	.word	0x00000617
    2dc4:	.word	0x00000020
    2dc8:	.word	0x00000148
    2dcc:	.word	0x0000061c
    2dd0:	.word	0x000003d0
    2dd4:	.word	0x000003f0
    2dd8:	.word	0x00000648
    2ddc:	.word	0x00000648
    2de0:	.word	0x0000006c

00002de4 <coda_cursor_get_bit_size>:
    2de4:	push	{fp, lr}
    2de8:	add	fp, sp, #4
    2dec:	sub	sp, sp, #8
    2df0:	str	r0, [fp, #-8]
    2df4:	str	r1, [fp, #-12]
    2df8:	ldr	r3, [fp, #-8]
    2dfc:	cmp	r3, #0
    2e00:	beq	2e38 <coda_cursor_get_bit_size+0x54>
    2e04:	ldr	r3, [fp, #-8]
    2e08:	ldr	r3, [r3, #4]
    2e0c:	cmp	r3, #0
    2e10:	ble	2e38 <coda_cursor_get_bit_size+0x54>
    2e14:	ldr	r3, [fp, #-8]
    2e18:	ldr	r3, [r3, #4]
    2e1c:	sub	r3, r3, #1
    2e20:	ldr	r2, [fp, #-8]
    2e24:	lsl	r3, r3, #4
    2e28:	add	r3, r2, r3
    2e2c:	ldr	r3, [r3, #8]
    2e30:	cmp	r3, #0
    2e34:	bne	2e54 <coda_cursor_get_bit_size+0x70>
    2e38:	ldr	r3, [pc, #196]	; 2f04 <coda_cursor_get_bit_size+0x120>
    2e3c:	ldr	r2, [pc, #196]	; 2f08 <coda_cursor_get_bit_size+0x124>
    2e40:	ldr	r1, [pc, #196]	; 2f0c <coda_cursor_get_bit_size+0x128>
    2e44:	mvn	r0, #99	; 0x63
    2e48:	bl	0 <coda_set_error>
    2e4c:	mvn	r3, #0
    2e50:	b	2ef8 <coda_cursor_get_bit_size+0x114>
    2e54:	ldr	r3, [fp, #-8]
    2e58:	ldr	r3, [r3, #4]
    2e5c:	sub	r3, r3, #1
    2e60:	ldr	r2, [fp, #-8]
    2e64:	lsl	r3, r3, #4
    2e68:	add	r3, r2, r3
    2e6c:	ldr	r3, [r3, #8]
    2e70:	ldr	r3, [r3]
    2e74:	cmp	r3, #100	; 0x64
    2e78:	beq	2ecc <coda_cursor_get_bit_size+0xe8>
    2e7c:	cmp	r3, #100	; 0x64
    2e80:	bhi	2e98 <coda_cursor_get_bit_size+0xb4>
    2e84:	cmp	r3, #0
    2e88:	beq	2ea4 <coda_cursor_get_bit_size+0xc0>
    2e8c:	cmp	r3, #1
    2e90:	beq	2eb8 <coda_cursor_get_bit_size+0xd4>
    2e94:	b	2ef4 <coda_cursor_get_bit_size+0x110>
    2e98:	cmp	r3, #105	; 0x69
    2e9c:	bhi	2ef4 <coda_cursor_get_bit_size+0x110>
    2ea0:	b	2ee0 <coda_cursor_get_bit_size+0xfc>
    2ea4:	ldr	r1, [fp, #-12]
    2ea8:	ldr	r0, [fp, #-8]
    2eac:	bl	0 <coda_ascii_cursor_get_bit_size>
    2eb0:	mov	r3, r0
    2eb4:	b	2ef8 <coda_cursor_get_bit_size+0x114>
    2eb8:	ldr	r1, [fp, #-12]
    2ebc:	ldr	r0, [fp, #-8]
    2ec0:	bl	0 <coda_bin_cursor_get_bit_size>
    2ec4:	mov	r3, r0
    2ec8:	b	2ef8 <coda_cursor_get_bit_size+0x114>
    2ecc:	ldr	r1, [fp, #-12]
    2ed0:	ldr	r0, [fp, #-8]
    2ed4:	bl	0 <coda_mem_cursor_get_bit_size>
    2ed8:	mov	r3, r0
    2edc:	b	2ef8 <coda_cursor_get_bit_size+0x114>
    2ee0:	ldr	r1, [fp, #-12]
    2ee4:	mvn	r2, #0
    2ee8:	mvn	r3, #0
    2eec:	strd	r2, [r1]
    2ef0:	nop			; (mov r0, r0)
    2ef4:	mov	r3, #0
    2ef8:	mov	r0, r3
    2efc:	sub	sp, fp, #4
    2f00:	pop	{fp, pc}
    2f04:	.word	0x0000065e
    2f08:	.word	0x00000020
    2f0c:	.word	0x00000148

00002f10 <coda_cursor_get_byte_size>:
    2f10:	push	{r4, r5, fp, lr}
    2f14:	add	fp, sp, #12
    2f18:	sub	sp, sp, #16
    2f1c:	str	r0, [fp, #-24]	; 0xffffffe8
    2f20:	str	r1, [fp, #-28]	; 0xffffffe4
    2f24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f28:	cmp	r3, #0
    2f2c:	beq	2f64 <coda_cursor_get_byte_size+0x54>
    2f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f34:	ldr	r3, [r3, #4]
    2f38:	cmp	r3, #0
    2f3c:	ble	2f64 <coda_cursor_get_byte_size+0x54>
    2f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f44:	ldr	r3, [r3, #4]
    2f48:	sub	r3, r3, #1
    2f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f50:	lsl	r3, r3, #4
    2f54:	add	r3, r2, r3
    2f58:	ldr	r3, [r3, #8]
    2f5c:	cmp	r3, #0
    2f60:	bne	2f80 <coda_cursor_get_byte_size+0x70>
    2f64:	ldr	r3, [pc, #192]	; 302c <coda_cursor_get_byte_size+0x11c>
    2f68:	ldr	r2, [pc, #192]	; 3030 <coda_cursor_get_byte_size+0x120>
    2f6c:	ldr	r1, [pc, #192]	; 3034 <coda_cursor_get_byte_size+0x124>
    2f70:	mvn	r0, #99	; 0x63
    2f74:	bl	0 <coda_set_error>
    2f78:	mvn	r3, #0
    2f7c:	b	3020 <coda_cursor_get_byte_size+0x110>
    2f80:	sub	r3, fp, #20
    2f84:	mov	r1, r3
    2f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f8c:	bl	2de4 <coda_cursor_get_bit_size>
    2f90:	mov	r3, r0
    2f94:	cmp	r3, #0
    2f98:	beq	2fa4 <coda_cursor_get_byte_size+0x94>
    2f9c:	mvn	r3, #0
    2fa0:	b	3020 <coda_cursor_get_byte_size+0x110>
    2fa4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2fa8:	cmp	r2, #0
    2fac:	sbcs	r3, r3, #0
    2fb0:	bge	2fcc <coda_cursor_get_byte_size+0xbc>
    2fb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2fb8:	mvn	r2, #0
    2fbc:	mvn	r3, #0
    2fc0:	strd	r2, [r1]
    2fc4:	mov	r3, #0
    2fc8:	b	3020 <coda_cursor_get_byte_size+0x110>
    2fcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2fd0:	lsr	r4, r2, #3
    2fd4:	orr	r4, r4, r3, lsl #29
    2fd8:	asr	r5, r3, #3
    2fdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2fe0:	mov	r0, #7
    2fe4:	mov	r1, #0
    2fe8:	and	r2, r2, r0
    2fec:	and	r3, r3, r1
    2ff0:	orrs	r3, r2, r3
    2ff4:	beq	3004 <coda_cursor_get_byte_size+0xf4>
    2ff8:	mov	r2, #1
    2ffc:	mov	r3, #0
    3000:	b	300c <coda_cursor_get_byte_size+0xfc>
    3004:	mov	r2, #0
    3008:	mov	r3, #0
    300c:	adds	r2, r2, r4
    3010:	adc	r3, r3, r5
    3014:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3018:	strd	r2, [r1]
    301c:	mov	r3, #0
    3020:	mov	r0, r3
    3024:	sub	sp, fp, #12
    3028:	pop	{r4, r5, fp, pc}
    302c:	.word	0x00000686
    3030:	.word	0x00000020
    3034:	.word	0x00000148

00003038 <coda_cursor_get_num_elements>:
    3038:	push	{fp, lr}
    303c:	add	fp, sp, #4
    3040:	sub	sp, sp, #8
    3044:	str	r0, [fp, #-8]
    3048:	str	r1, [fp, #-12]
    304c:	ldr	r3, [fp, #-8]
    3050:	cmp	r3, #0
    3054:	beq	308c <coda_cursor_get_num_elements+0x54>
    3058:	ldr	r3, [fp, #-8]
    305c:	ldr	r3, [r3, #4]
    3060:	cmp	r3, #0
    3064:	ble	308c <coda_cursor_get_num_elements+0x54>
    3068:	ldr	r3, [fp, #-8]
    306c:	ldr	r3, [r3, #4]
    3070:	sub	r3, r3, #1
    3074:	ldr	r2, [fp, #-8]
    3078:	lsl	r3, r3, #4
    307c:	add	r3, r2, r3
    3080:	ldr	r3, [r3, #8]
    3084:	cmp	r3, #0
    3088:	bne	30a8 <coda_cursor_get_num_elements+0x70>
    308c:	ldr	r3, [pc, #324]	; 31d8 <coda_cursor_get_num_elements+0x1a0>
    3090:	ldr	r2, [pc, #324]	; 31dc <coda_cursor_get_num_elements+0x1a4>
    3094:	ldr	r1, [pc, #324]	; 31e0 <coda_cursor_get_num_elements+0x1a8>
    3098:	mvn	r0, #99	; 0x63
    309c:	bl	0 <coda_set_error>
    30a0:	mvn	r3, #0
    30a4:	b	31cc <coda_cursor_get_num_elements+0x194>
    30a8:	ldr	r3, [fp, #-8]
    30ac:	ldr	r3, [r3, #4]
    30b0:	sub	r3, r3, #1
    30b4:	ldr	r2, [fp, #-8]
    30b8:	lsl	r3, r3, #4
    30bc:	add	r3, r2, r3
    30c0:	ldr	r3, [r3, #8]
    30c4:	ldr	r3, [r3]
    30c8:	cmp	r3, #101	; 0x65
    30cc:	beq	3154 <coda_cursor_get_num_elements+0x11c>
    30d0:	cmp	r3, #101	; 0x65
    30d4:	bhi	30f4 <coda_cursor_get_num_elements+0xbc>
    30d8:	cmp	r3, #1
    30dc:	beq	312c <coda_cursor_get_num_elements+0xf4>
    30e0:	cmp	r3, #1
    30e4:	bcc	3118 <coda_cursor_get_num_elements+0xe0>
    30e8:	cmp	r3, #100	; 0x64
    30ec:	beq	3140 <coda_cursor_get_num_elements+0x108>
    30f0:	b	31b8 <coda_cursor_get_num_elements+0x180>
    30f4:	cmp	r3, #103	; 0x67
    30f8:	beq	317c <coda_cursor_get_num_elements+0x144>
    30fc:	cmp	r3, #103	; 0x67
    3100:	bcc	3168 <coda_cursor_get_num_elements+0x130>
    3104:	cmp	r3, #104	; 0x68
    3108:	beq	3190 <coda_cursor_get_num_elements+0x158>
    310c:	cmp	r3, #105	; 0x69
    3110:	beq	31a4 <coda_cursor_get_num_elements+0x16c>
    3114:	b	31b8 <coda_cursor_get_num_elements+0x180>
    3118:	ldr	r1, [fp, #-12]
    311c:	ldr	r0, [fp, #-8]
    3120:	bl	0 <coda_ascii_cursor_get_num_elements>
    3124:	mov	r3, r0
    3128:	b	31cc <coda_cursor_get_num_elements+0x194>
    312c:	ldr	r1, [fp, #-12]
    3130:	ldr	r0, [fp, #-8]
    3134:	bl	0 <coda_bin_cursor_get_num_elements>
    3138:	mov	r3, r0
    313c:	b	31cc <coda_cursor_get_num_elements+0x194>
    3140:	ldr	r1, [fp, #-12]
    3144:	ldr	r0, [fp, #-8]
    3148:	bl	0 <coda_mem_cursor_get_num_elements>
    314c:	mov	r3, r0
    3150:	b	31cc <coda_cursor_get_num_elements+0x194>
    3154:	mov	r1, #0
    3158:	mvn	r0, #10
    315c:	bl	0 <coda_set_error>
    3160:	mvn	r3, #0
    3164:	b	31cc <coda_cursor_get_num_elements+0x194>
    3168:	mov	r1, #0
    316c:	mvn	r0, #12
    3170:	bl	0 <coda_set_error>
    3174:	mvn	r3, #0
    3178:	b	31cc <coda_cursor_get_num_elements+0x194>
    317c:	ldr	r1, [fp, #-12]
    3180:	ldr	r0, [fp, #-8]
    3184:	bl	0 <coda_cdf_cursor_get_num_elements>
    3188:	mov	r3, r0
    318c:	b	31cc <coda_cursor_get_num_elements+0x194>
    3190:	ldr	r1, [fp, #-12]
    3194:	ldr	r0, [fp, #-8]
    3198:	bl	0 <coda_netcdf_cursor_get_num_elements>
    319c:	mov	r3, r0
    31a0:	b	31cc <coda_cursor_get_num_elements+0x194>
    31a4:	ldr	r1, [fp, #-12]
    31a8:	ldr	r0, [fp, #-8]
    31ac:	bl	0 <coda_grib_cursor_get_num_elements>
    31b0:	mov	r3, r0
    31b4:	b	31cc <coda_cursor_get_num_elements+0x194>
    31b8:	ldr	r3, [pc, #36]	; 31e4 <coda_cursor_get_num_elements+0x1ac>
    31bc:	ldr	r2, [pc, #36]	; 31e8 <coda_cursor_get_num_elements+0x1b0>
    31c0:	ldr	r1, [pc, #20]	; 31dc <coda_cursor_get_num_elements+0x1a4>
    31c4:	ldr	r0, [pc, #32]	; 31ec <coda_cursor_get_num_elements+0x1b4>
    31c8:	bl	0 <__assert_fail>
    31cc:	mov	r0, r3
    31d0:	sub	sp, fp, #4
    31d4:	pop	{fp, pc}
    31d8:	.word	0x000006a8
    31dc:	.word	0x00000020
    31e0:	.word	0x00000148
    31e4:	.word	0x00000668
    31e8:	.word	0x000006ca
    31ec:	.word	0x0000006c

000031f0 <coda_cursor_get_product_file>:
    31f0:	push	{fp, lr}
    31f4:	add	fp, sp, #4
    31f8:	sub	sp, sp, #8
    31fc:	str	r0, [fp, #-8]
    3200:	str	r1, [fp, #-12]
    3204:	ldr	r3, [fp, #-8]
    3208:	cmp	r3, #0
    320c:	beq	3244 <coda_cursor_get_product_file+0x54>
    3210:	ldr	r3, [fp, #-8]
    3214:	ldr	r3, [r3, #4]
    3218:	cmp	r3, #0
    321c:	ble	3244 <coda_cursor_get_product_file+0x54>
    3220:	ldr	r3, [fp, #-8]
    3224:	ldr	r3, [r3, #4]
    3228:	sub	r3, r3, #1
    322c:	ldr	r2, [fp, #-8]
    3230:	lsl	r3, r3, #4
    3234:	add	r3, r2, r3
    3238:	ldr	r3, [r3, #8]
    323c:	cmp	r3, #0
    3240:	bne	3260 <coda_cursor_get_product_file+0x70>
    3244:	ldr	r3, [pc, #52]	; 3280 <coda_cursor_get_product_file+0x90>
    3248:	ldr	r2, [pc, #52]	; 3284 <coda_cursor_get_product_file+0x94>
    324c:	ldr	r1, [pc, #52]	; 3288 <coda_cursor_get_product_file+0x98>
    3250:	mvn	r0, #99	; 0x63
    3254:	bl	0 <coda_set_error>
    3258:	mvn	r3, #0
    325c:	b	3274 <coda_cursor_get_product_file+0x84>
    3260:	ldr	r3, [fp, #-8]
    3264:	ldr	r2, [r3]
    3268:	ldr	r3, [fp, #-12]
    326c:	str	r2, [r3]
    3270:	mov	r3, #0
    3274:	mov	r0, r3
    3278:	sub	sp, fp, #4
    327c:	pop	{fp, pc}
    3280:	.word	0x000006d9
    3284:	.word	0x00000020
    3288:	.word	0x00000148

0000328c <coda_cursor_get_depth>:
    328c:	push	{fp, lr}
    3290:	add	fp, sp, #4
    3294:	sub	sp, sp, #8
    3298:	str	r0, [fp, #-8]
    329c:	str	r1, [fp, #-12]
    32a0:	ldr	r3, [fp, #-8]
    32a4:	cmp	r3, #0
    32a8:	beq	32e0 <coda_cursor_get_depth+0x54>
    32ac:	ldr	r3, [fp, #-8]
    32b0:	ldr	r3, [r3, #4]
    32b4:	cmp	r3, #0
    32b8:	ble	32e0 <coda_cursor_get_depth+0x54>
    32bc:	ldr	r3, [fp, #-8]
    32c0:	ldr	r3, [r3, #4]
    32c4:	sub	r3, r3, #1
    32c8:	ldr	r2, [fp, #-8]
    32cc:	lsl	r3, r3, #4
    32d0:	add	r3, r2, r3
    32d4:	ldr	r3, [r3, #8]
    32d8:	cmp	r3, #0
    32dc:	bne	32fc <coda_cursor_get_depth+0x70>
    32e0:	ldr	r3, [pc, #96]	; 3348 <coda_cursor_get_depth+0xbc>
    32e4:	ldr	r2, [pc, #96]	; 334c <coda_cursor_get_depth+0xc0>
    32e8:	ldr	r1, [pc, #96]	; 3350 <coda_cursor_get_depth+0xc4>
    32ec:	mvn	r0, #99	; 0x63
    32f0:	bl	0 <coda_set_error>
    32f4:	mvn	r3, #0
    32f8:	b	333c <coda_cursor_get_depth+0xb0>
    32fc:	ldr	r3, [fp, #-12]
    3300:	cmp	r3, #0
    3304:	bne	3324 <coda_cursor_get_depth+0x98>
    3308:	ldr	r3, [pc, #68]	; 3354 <coda_cursor_get_depth+0xc8>
    330c:	ldr	r2, [pc, #56]	; 334c <coda_cursor_get_depth+0xc0>
    3310:	ldr	r1, [pc, #64]	; 3358 <coda_cursor_get_depth+0xcc>
    3314:	mvn	r0, #99	; 0x63
    3318:	bl	0 <coda_set_error>
    331c:	mvn	r3, #0
    3320:	b	333c <coda_cursor_get_depth+0xb0>
    3324:	ldr	r3, [fp, #-8]
    3328:	ldr	r3, [r3, #4]
    332c:	sub	r2, r3, #1
    3330:	ldr	r3, [fp, #-12]
    3334:	str	r2, [r3]
    3338:	mov	r3, #0
    333c:	mov	r0, r3
    3340:	sub	sp, fp, #4
    3344:	pop	{fp, pc}
    3348:	.word	0x000006ef
    334c:	.word	0x00000020
    3350:	.word	0x00000148
    3354:	.word	0x000006f5
    3358:	.word	0x00000414

0000335c <coda_cursor_get_index>:
    335c:	push	{fp, lr}
    3360:	add	fp, sp, #4
    3364:	sub	sp, sp, #8
    3368:	str	r0, [fp, #-8]
    336c:	str	r1, [fp, #-12]
    3370:	ldr	r3, [fp, #-8]
    3374:	cmp	r3, #0
    3378:	beq	33b0 <coda_cursor_get_index+0x54>
    337c:	ldr	r3, [fp, #-8]
    3380:	ldr	r3, [r3, #4]
    3384:	cmp	r3, #1
    3388:	ble	33b0 <coda_cursor_get_index+0x54>
    338c:	ldr	r3, [fp, #-8]
    3390:	ldr	r3, [r3, #4]
    3394:	sub	r3, r3, #1
    3398:	ldr	r2, [fp, #-8]
    339c:	lsl	r3, r3, #4
    33a0:	add	r3, r2, r3
    33a4:	ldr	r3, [r3, #8]
    33a8:	cmp	r3, #0
    33ac:	bne	33cc <coda_cursor_get_index+0x70>
    33b0:	ldr	r3, [pc, #112]	; 3428 <coda_cursor_get_index+0xcc>
    33b4:	ldr	r2, [pc, #112]	; 342c <coda_cursor_get_index+0xd0>
    33b8:	ldr	r1, [pc, #112]	; 3430 <coda_cursor_get_index+0xd4>
    33bc:	mvn	r0, #99	; 0x63
    33c0:	bl	0 <coda_set_error>
    33c4:	mvn	r3, #0
    33c8:	b	341c <coda_cursor_get_index+0xc0>
    33cc:	ldr	r3, [fp, #-12]
    33d0:	cmp	r3, #0
    33d4:	bne	33f4 <coda_cursor_get_index+0x98>
    33d8:	ldr	r3, [pc, #84]	; 3434 <coda_cursor_get_index+0xd8>
    33dc:	ldr	r2, [pc, #72]	; 342c <coda_cursor_get_index+0xd0>
    33e0:	ldr	r1, [pc, #80]	; 3438 <coda_cursor_get_index+0xdc>
    33e4:	mvn	r0, #99	; 0x63
    33e8:	bl	0 <coda_set_error>
    33ec:	mvn	r3, #0
    33f0:	b	341c <coda_cursor_get_index+0xc0>
    33f4:	ldr	r3, [fp, #-8]
    33f8:	ldr	r3, [r3, #4]
    33fc:	sub	r3, r3, #1
    3400:	ldr	r2, [fp, #-8]
    3404:	lsl	r3, r3, #4
    3408:	add	r3, r2, r3
    340c:	ldr	r2, [r3, #12]
    3410:	ldr	r3, [fp, #-12]
    3414:	str	r2, [r3]
    3418:	mov	r3, #0
    341c:	mov	r0, r3
    3420:	sub	sp, fp, #4
    3424:	pop	{fp, pc}
    3428:	.word	0x0000070d
    342c:	.word	0x00000020
    3430:	.word	0x00000148
    3434:	.word	0x00000713
    3438:	.word	0x00000434

0000343c <coda_cursor_get_file_bit_offset>:
    343c:	push	{fp, lr}
    3440:	add	fp, sp, #4
    3444:	sub	sp, sp, #8
    3448:	str	r0, [fp, #-8]
    344c:	str	r1, [fp, #-12]
    3450:	ldr	r3, [fp, #-8]
    3454:	cmp	r3, #0
    3458:	beq	3490 <coda_cursor_get_file_bit_offset+0x54>
    345c:	ldr	r3, [fp, #-8]
    3460:	ldr	r3, [r3, #4]
    3464:	cmp	r3, #0
    3468:	ble	3490 <coda_cursor_get_file_bit_offset+0x54>
    346c:	ldr	r3, [fp, #-8]
    3470:	ldr	r3, [r3, #4]
    3474:	sub	r3, r3, #1
    3478:	ldr	r2, [fp, #-8]
    347c:	lsl	r3, r3, #4
    3480:	add	r3, r2, r3
    3484:	ldr	r3, [r3, #8]
    3488:	cmp	r3, #0
    348c:	bne	34ac <coda_cursor_get_file_bit_offset+0x70>
    3490:	ldr	r3, [pc, #196]	; 355c <coda_cursor_get_file_bit_offset+0x120>
    3494:	ldr	r2, [pc, #196]	; 3560 <coda_cursor_get_file_bit_offset+0x124>
    3498:	ldr	r1, [pc, #196]	; 3564 <coda_cursor_get_file_bit_offset+0x128>
    349c:	mvn	r0, #99	; 0x63
    34a0:	bl	0 <coda_set_error>
    34a4:	mvn	r3, #0
    34a8:	b	3550 <coda_cursor_get_file_bit_offset+0x114>
    34ac:	ldr	r3, [fp, #-12]
    34b0:	cmp	r3, #0
    34b4:	bne	34d4 <coda_cursor_get_file_bit_offset+0x98>
    34b8:	ldr	r3, [pc, #168]	; 3568 <coda_cursor_get_file_bit_offset+0x12c>
    34bc:	ldr	r2, [pc, #156]	; 3560 <coda_cursor_get_file_bit_offset+0x124>
    34c0:	ldr	r1, [pc, #164]	; 356c <coda_cursor_get_file_bit_offset+0x130>
    34c4:	mvn	r0, #99	; 0x63
    34c8:	bl	0 <coda_set_error>
    34cc:	mvn	r3, #0
    34d0:	b	3550 <coda_cursor_get_file_bit_offset+0x114>
    34d4:	ldr	r3, [fp, #-8]
    34d8:	ldr	r3, [r3, #4]
    34dc:	sub	r3, r3, #1
    34e0:	ldr	r2, [fp, #-8]
    34e4:	lsl	r3, r3, #4
    34e8:	add	r3, r2, r3
    34ec:	ldr	r3, [r3, #8]
    34f0:	ldr	r3, [r3]
    34f4:	cmp	r3, #1
    34f8:	bls	350c <coda_cursor_get_file_bit_offset+0xd0>
    34fc:	sub	r3, r3, #100	; 0x64
    3500:	cmp	r3, #5
    3504:	bhi	354c <coda_cursor_get_file_bit_offset+0x110>
    3508:	b	3538 <coda_cursor_get_file_bit_offset+0xfc>
    350c:	ldr	r3, [fp, #-8]
    3510:	ldr	r3, [r3, #4]
    3514:	sub	r3, r3, #1
    3518:	ldr	r2, [fp, #-8]
    351c:	add	r3, r3, #1
    3520:	lsl	r3, r3, #4
    3524:	add	r3, r2, r3
    3528:	ldrd	r2, [r3]
    352c:	ldr	r1, [fp, #-12]
    3530:	strd	r2, [r1]
    3534:	b	354c <coda_cursor_get_file_bit_offset+0x110>
    3538:	ldr	r1, [fp, #-12]
    353c:	mvn	r2, #0
    3540:	mvn	r3, #0
    3544:	strd	r2, [r1]
    3548:	nop			; (mov r0, r0)
    354c:	mov	r3, #0
    3550:	mov	r0, r3
    3554:	sub	sp, fp, #4
    3558:	pop	{fp, pc}
    355c:	.word	0x00000729
    3560:	.word	0x00000020
    3564:	.word	0x00000148
    3568:	.word	0x0000072f
    356c:	.word	0x00000454

00003570 <coda_cursor_get_file_byte_offset>:
    3570:	push	{r4, r5, fp, lr}
    3574:	add	fp, sp, #12
    3578:	sub	sp, sp, #8
    357c:	str	r0, [fp, #-16]
    3580:	str	r1, [fp, #-20]	; 0xffffffec
    3584:	ldr	r1, [fp, #-16]
    3588:	cmp	r1, #0
    358c:	beq	35c4 <coda_cursor_get_file_byte_offset+0x54>
    3590:	ldr	r1, [fp, #-16]
    3594:	ldr	r1, [r1, #4]
    3598:	cmp	r1, #0
    359c:	ble	35c4 <coda_cursor_get_file_byte_offset+0x54>
    35a0:	ldr	r1, [fp, #-16]
    35a4:	ldr	r1, [r1, #4]
    35a8:	sub	r1, r1, #1
    35ac:	ldr	r0, [fp, #-16]
    35b0:	lsl	r1, r1, #4
    35b4:	add	r1, r0, r1
    35b8:	ldr	r1, [r1, #8]
    35bc:	cmp	r1, #0
    35c0:	bne	35e0 <coda_cursor_get_file_byte_offset+0x70>
    35c4:	ldr	r3, [pc, #284]	; 36e8 <coda_cursor_get_file_byte_offset+0x178>
    35c8:	ldr	r2, [pc, #284]	; 36ec <coda_cursor_get_file_byte_offset+0x17c>
    35cc:	ldr	r1, [pc, #284]	; 36f0 <coda_cursor_get_file_byte_offset+0x180>
    35d0:	mvn	r0, #99	; 0x63
    35d4:	bl	0 <coda_set_error>
    35d8:	mvn	r3, #0
    35dc:	b	36dc <coda_cursor_get_file_byte_offset+0x16c>
    35e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    35e4:	cmp	r1, #0
    35e8:	bne	3608 <coda_cursor_get_file_byte_offset+0x98>
    35ec:	ldr	r3, [pc, #256]	; 36f4 <coda_cursor_get_file_byte_offset+0x184>
    35f0:	ldr	r2, [pc, #244]	; 36ec <coda_cursor_get_file_byte_offset+0x17c>
    35f4:	ldr	r1, [pc, #252]	; 36f8 <coda_cursor_get_file_byte_offset+0x188>
    35f8:	mvn	r0, #99	; 0x63
    35fc:	bl	0 <coda_set_error>
    3600:	mvn	r3, #0
    3604:	b	36dc <coda_cursor_get_file_byte_offset+0x16c>
    3608:	ldr	r1, [fp, #-16]
    360c:	ldr	r1, [r1, #4]
    3610:	sub	r1, r1, #1
    3614:	ldr	r0, [fp, #-16]
    3618:	lsl	r1, r1, #4
    361c:	add	r1, r0, r1
    3620:	ldr	r1, [r1, #8]
    3624:	ldr	r1, [r1]
    3628:	cmp	r1, #1
    362c:	bls	3640 <coda_cursor_get_file_byte_offset+0xd0>
    3630:	sub	r3, r1, #100	; 0x64
    3634:	cmp	r3, #5
    3638:	bhi	36d8 <coda_cursor_get_file_byte_offset+0x168>
    363c:	b	36c0 <coda_cursor_get_file_byte_offset+0x150>
    3640:	ldr	r1, [fp, #-16]
    3644:	ldr	r1, [r1, #4]
    3648:	sub	r1, r1, #1
    364c:	ldr	r0, [fp, #-16]
    3650:	add	r1, r1, #1
    3654:	lsl	r1, r1, #4
    3658:	add	r1, r0, r1
    365c:	ldrd	r0, [r1]
    3660:	mvn	r4, #0
    3664:	mvn	r5, #0
    3668:	cmp	r1, r5
    366c:	cmpeq	r0, r4
    3670:	bne	3688 <coda_cursor_get_file_byte_offset+0x118>
    3674:	ldr	r1, [fp, #-20]	; 0xffffffec
    3678:	mvn	r2, #0
    367c:	mvn	r3, #0
    3680:	strd	r2, [r1]
    3684:	b	36d8 <coda_cursor_get_file_byte_offset+0x168>
    3688:	ldr	r1, [fp, #-16]
    368c:	ldr	r1, [r1, #4]
    3690:	sub	r1, r1, #1
    3694:	ldr	r0, [fp, #-16]
    3698:	add	r1, r1, #1
    369c:	lsl	r1, r1, #4
    36a0:	add	r1, r0, r1
    36a4:	ldrd	r0, [r1]
    36a8:	lsr	r2, r0, #3
    36ac:	orr	r2, r2, r1, lsl #29
    36b0:	asr	r3, r1, #3
    36b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    36b8:	strd	r2, [r1]
    36bc:	b	36d8 <coda_cursor_get_file_byte_offset+0x168>
    36c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    36c4:	mvn	r2, #0
    36c8:	mvn	r3, #0
    36cc:	strd	r2, [r1]
    36d0:	mvn	r3, #0
    36d4:	b	36dc <coda_cursor_get_file_byte_offset+0x16c>
    36d8:	mov	r3, #0
    36dc:	mov	r0, r3
    36e0:	sub	sp, fp, #12
    36e4:	pop	{r4, r5, fp, pc}
    36e8:	.word	0x00000753
    36ec:	.word	0x00000020
    36f0:	.word	0x00000148
    36f4:	.word	0x00000759
    36f8:	.word	0x00000478

000036fc <coda_cursor_get_format>:
    36fc:	push	{fp, lr}
    3700:	add	fp, sp, #4
    3704:	sub	sp, sp, #16
    3708:	str	r0, [fp, #-16]
    370c:	str	r1, [fp, #-20]	; 0xffffffec
    3710:	ldr	r3, [fp, #-16]
    3714:	cmp	r3, #0
    3718:	beq	3750 <coda_cursor_get_format+0x54>
    371c:	ldr	r3, [fp, #-16]
    3720:	ldr	r3, [r3, #4]
    3724:	cmp	r3, #0
    3728:	ble	3750 <coda_cursor_get_format+0x54>
    372c:	ldr	r3, [fp, #-16]
    3730:	ldr	r3, [r3, #4]
    3734:	sub	r3, r3, #1
    3738:	ldr	r2, [fp, #-16]
    373c:	lsl	r3, r3, #4
    3740:	add	r3, r2, r3
    3744:	ldr	r3, [r3, #8]
    3748:	cmp	r3, #0
    374c:	bne	376c <coda_cursor_get_format+0x70>
    3750:	ldr	r3, [pc, #200]	; 3820 <coda_cursor_get_format+0x124>
    3754:	ldr	r2, [pc, #200]	; 3824 <coda_cursor_get_format+0x128>
    3758:	ldr	r1, [pc, #200]	; 3828 <coda_cursor_get_format+0x12c>
    375c:	mvn	r0, #99	; 0x63
    3760:	bl	0 <coda_set_error>
    3764:	mvn	r3, #0
    3768:	b	3814 <coda_cursor_get_format+0x118>
    376c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3770:	cmp	r3, #0
    3774:	bne	3794 <coda_cursor_get_format+0x98>
    3778:	ldr	r3, [pc, #172]	; 382c <coda_cursor_get_format+0x130>
    377c:	ldr	r2, [pc, #160]	; 3824 <coda_cursor_get_format+0x128>
    3780:	ldr	r1, [pc, #168]	; 3830 <coda_cursor_get_format+0x134>
    3784:	mvn	r0, #99	; 0x63
    3788:	bl	0 <coda_set_error>
    378c:	mvn	r3, #0
    3790:	b	3814 <coda_cursor_get_format+0x118>
    3794:	ldr	r3, [fp, #-16]
    3798:	ldr	r3, [r3, #4]
    379c:	sub	r3, r3, #1
    37a0:	ldr	r2, [fp, #-16]
    37a4:	lsl	r3, r3, #4
    37a8:	add	r3, r2, r3
    37ac:	ldr	r3, [r3, #8]
    37b0:	ldr	r3, [r3]
    37b4:	cmp	r3, #99	; 0x63
    37b8:	bhi	37dc <coda_cursor_get_format+0xe0>
    37bc:	ldr	r3, [fp, #-16]
    37c0:	ldr	r3, [r3, #4]
    37c4:	sub	r3, r3, #1
    37c8:	ldr	r2, [fp, #-16]
    37cc:	lsl	r3, r3, #4
    37d0:	add	r3, r2, r3
    37d4:	ldr	r3, [r3, #8]
    37d8:	b	37fc <coda_cursor_get_format+0x100>
    37dc:	ldr	r3, [fp, #-16]
    37e0:	ldr	r3, [r3, #4]
    37e4:	sub	r3, r3, #1
    37e8:	ldr	r2, [fp, #-16]
    37ec:	lsl	r3, r3, #4
    37f0:	add	r3, r2, r3
    37f4:	ldr	r3, [r3, #8]
    37f8:	ldr	r3, [r3, #4]
    37fc:	str	r3, [fp, #-8]
    3800:	ldr	r3, [fp, #-8]
    3804:	ldr	r2, [r3]
    3808:	ldr	r3, [fp, #-20]	; 0xffffffec
    380c:	str	r2, [r3]
    3810:	mov	r3, #0
    3814:	mov	r0, r3
    3818:	sub	sp, fp, #4
    381c:	pop	{fp, pc}
    3820:	.word	0x00000785
    3824:	.word	0x00000020
    3828:	.word	0x00000148
    382c:	.word	0x0000078a
    3830:	.word	0x000004a0

00003834 <coda_cursor_get_type_class>:
    3834:	push	{fp, lr}
    3838:	add	fp, sp, #4
    383c:	sub	sp, sp, #16
    3840:	str	r0, [fp, #-16]
    3844:	str	r1, [fp, #-20]	; 0xffffffec
    3848:	ldr	r3, [fp, #-16]
    384c:	cmp	r3, #0
    3850:	beq	3888 <coda_cursor_get_type_class+0x54>
    3854:	ldr	r3, [fp, #-16]
    3858:	ldr	r3, [r3, #4]
    385c:	cmp	r3, #0
    3860:	ble	3888 <coda_cursor_get_type_class+0x54>
    3864:	ldr	r3, [fp, #-16]
    3868:	ldr	r3, [r3, #4]
    386c:	sub	r3, r3, #1
    3870:	ldr	r2, [fp, #-16]
    3874:	lsl	r3, r3, #4
    3878:	add	r3, r2, r3
    387c:	ldr	r3, [r3, #8]
    3880:	cmp	r3, #0
    3884:	bne	38a4 <coda_cursor_get_type_class+0x70>
    3888:	ldr	r3, [pc, #200]	; 3958 <coda_cursor_get_type_class+0x124>
    388c:	ldr	r2, [pc, #200]	; 395c <coda_cursor_get_type_class+0x128>
    3890:	ldr	r1, [pc, #200]	; 3960 <coda_cursor_get_type_class+0x12c>
    3894:	mvn	r0, #99	; 0x63
    3898:	bl	0 <coda_set_error>
    389c:	mvn	r3, #0
    38a0:	b	394c <coda_cursor_get_type_class+0x118>
    38a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    38a8:	cmp	r3, #0
    38ac:	bne	38cc <coda_cursor_get_type_class+0x98>
    38b0:	ldr	r3, [pc, #172]	; 3964 <coda_cursor_get_type_class+0x130>
    38b4:	ldr	r2, [pc, #160]	; 395c <coda_cursor_get_type_class+0x128>
    38b8:	ldr	r1, [pc, #168]	; 3968 <coda_cursor_get_type_class+0x134>
    38bc:	mvn	r0, #99	; 0x63
    38c0:	bl	0 <coda_set_error>
    38c4:	mvn	r3, #0
    38c8:	b	394c <coda_cursor_get_type_class+0x118>
    38cc:	ldr	r3, [fp, #-16]
    38d0:	ldr	r3, [r3, #4]
    38d4:	sub	r3, r3, #1
    38d8:	ldr	r2, [fp, #-16]
    38dc:	lsl	r3, r3, #4
    38e0:	add	r3, r2, r3
    38e4:	ldr	r3, [r3, #8]
    38e8:	ldr	r3, [r3]
    38ec:	cmp	r3, #99	; 0x63
    38f0:	bhi	3914 <coda_cursor_get_type_class+0xe0>
    38f4:	ldr	r3, [fp, #-16]
    38f8:	ldr	r3, [r3, #4]
    38fc:	sub	r3, r3, #1
    3900:	ldr	r2, [fp, #-16]
    3904:	lsl	r3, r3, #4
    3908:	add	r3, r2, r3
    390c:	ldr	r3, [r3, #8]
    3910:	b	3934 <coda_cursor_get_type_class+0x100>
    3914:	ldr	r3, [fp, #-16]
    3918:	ldr	r3, [r3, #4]
    391c:	sub	r3, r3, #1
    3920:	ldr	r2, [fp, #-16]
    3924:	lsl	r3, r3, #4
    3928:	add	r3, r2, r3
    392c:	ldr	r3, [r3, #8]
    3930:	ldr	r3, [r3, #4]
    3934:	str	r3, [fp, #-8]
    3938:	ldr	r3, [fp, #-8]
    393c:	ldr	r2, [r3, #8]
    3940:	ldr	r3, [fp, #-20]	; 0xffffffec
    3944:	str	r2, [r3]
    3948:	mov	r3, #0
    394c:	mov	r0, r3
    3950:	sub	sp, fp, #4
    3954:	pop	{fp, pc}
    3958:	.word	0x000007a2
    395c:	.word	0x00000020
    3960:	.word	0x00000148
    3964:	.word	0x000007a7
    3968:	.word	0x000004c0

0000396c <coda_cursor_get_read_type>:
    396c:	push	{fp, lr}
    3970:	add	fp, sp, #4
    3974:	sub	sp, sp, #8
    3978:	str	r0, [fp, #-8]
    397c:	str	r1, [fp, #-12]
    3980:	ldr	r3, [fp, #-8]
    3984:	cmp	r3, #0
    3988:	beq	39c0 <coda_cursor_get_read_type+0x54>
    398c:	ldr	r3, [fp, #-8]
    3990:	ldr	r3, [r3, #4]
    3994:	cmp	r3, #0
    3998:	ble	39c0 <coda_cursor_get_read_type+0x54>
    399c:	ldr	r3, [fp, #-8]
    39a0:	ldr	r3, [r3, #4]
    39a4:	sub	r3, r3, #1
    39a8:	ldr	r2, [fp, #-8]
    39ac:	lsl	r3, r3, #4
    39b0:	add	r3, r2, r3
    39b4:	ldr	r3, [r3, #8]
    39b8:	cmp	r3, #0
    39bc:	bne	39dc <coda_cursor_get_read_type+0x70>
    39c0:	ldr	r3, [pc, #152]	; 3a60 <coda_cursor_get_read_type+0xf4>
    39c4:	ldr	r2, [pc, #152]	; 3a64 <coda_cursor_get_read_type+0xf8>
    39c8:	ldr	r1, [pc, #152]	; 3a68 <coda_cursor_get_read_type+0xfc>
    39cc:	mvn	r0, #99	; 0x63
    39d0:	bl	0 <coda_set_error>
    39d4:	mvn	r3, #0
    39d8:	b	3a54 <coda_cursor_get_read_type+0xe8>
    39dc:	ldr	r3, [fp, #-8]
    39e0:	ldr	r3, [r3, #4]
    39e4:	sub	r3, r3, #1
    39e8:	ldr	r2, [fp, #-8]
    39ec:	lsl	r3, r3, #4
    39f0:	add	r3, r2, r3
    39f4:	ldr	r3, [r3, #8]
    39f8:	ldr	r3, [r3]
    39fc:	cmp	r3, #99	; 0x63
    3a00:	bhi	3a24 <coda_cursor_get_read_type+0xb8>
    3a04:	ldr	r3, [fp, #-8]
    3a08:	ldr	r3, [r3, #4]
    3a0c:	sub	r3, r3, #1
    3a10:	ldr	r2, [fp, #-8]
    3a14:	lsl	r3, r3, #4
    3a18:	add	r3, r2, r3
    3a1c:	ldr	r3, [r3, #8]
    3a20:	b	3a44 <coda_cursor_get_read_type+0xd8>
    3a24:	ldr	r3, [fp, #-8]
    3a28:	ldr	r3, [r3, #4]
    3a2c:	sub	r3, r3, #1
    3a30:	ldr	r2, [fp, #-8]
    3a34:	lsl	r3, r3, #4
    3a38:	add	r3, r2, r3
    3a3c:	ldr	r3, [r3, #8]
    3a40:	ldr	r3, [r3, #4]
    3a44:	ldr	r1, [fp, #-12]
    3a48:	mov	r0, r3
    3a4c:	bl	0 <coda_type_get_read_type>
    3a50:	mov	r3, r0
    3a54:	mov	r0, r3
    3a58:	sub	sp, fp, #4
    3a5c:	pop	{fp, pc}
    3a60:	.word	0x000007be
    3a64:	.word	0x00000020
    3a68:	.word	0x00000148

00003a6c <coda_cursor_get_special_type>:
    3a6c:	push	{fp, lr}
    3a70:	add	fp, sp, #4
    3a74:	sub	sp, sp, #8
    3a78:	str	r0, [fp, #-8]
    3a7c:	str	r1, [fp, #-12]
    3a80:	ldr	r3, [fp, #-8]
    3a84:	cmp	r3, #0
    3a88:	beq	3ac0 <coda_cursor_get_special_type+0x54>
    3a8c:	ldr	r3, [fp, #-8]
    3a90:	ldr	r3, [r3, #4]
    3a94:	cmp	r3, #0
    3a98:	ble	3ac0 <coda_cursor_get_special_type+0x54>
    3a9c:	ldr	r3, [fp, #-8]
    3aa0:	ldr	r3, [r3, #4]
    3aa4:	sub	r3, r3, #1
    3aa8:	ldr	r2, [fp, #-8]
    3aac:	lsl	r3, r3, #4
    3ab0:	add	r3, r2, r3
    3ab4:	ldr	r3, [r3, #8]
    3ab8:	cmp	r3, #0
    3abc:	bne	3adc <coda_cursor_get_special_type+0x70>
    3ac0:	ldr	r3, [pc, #192]	; 3b88 <coda_cursor_get_special_type+0x11c>
    3ac4:	ldr	r2, [pc, #192]	; 3b8c <coda_cursor_get_special_type+0x120>
    3ac8:	ldr	r1, [pc, #192]	; 3b90 <coda_cursor_get_special_type+0x124>
    3acc:	mvn	r0, #99	; 0x63
    3ad0:	bl	0 <coda_set_error>
    3ad4:	mvn	r3, #0
    3ad8:	b	3b7c <coda_cursor_get_special_type+0x110>
    3adc:	ldr	r3, [fp, #-12]
    3ae0:	cmp	r3, #0
    3ae4:	bne	3b04 <coda_cursor_get_special_type+0x98>
    3ae8:	ldr	r3, [pc, #164]	; 3b94 <coda_cursor_get_special_type+0x128>
    3aec:	ldr	r2, [pc, #152]	; 3b8c <coda_cursor_get_special_type+0x120>
    3af0:	ldr	r1, [pc, #160]	; 3b98 <coda_cursor_get_special_type+0x12c>
    3af4:	mvn	r0, #99	; 0x63
    3af8:	bl	0 <coda_set_error>
    3afc:	mvn	r3, #0
    3b00:	b	3b7c <coda_cursor_get_special_type+0x110>
    3b04:	ldr	r3, [fp, #-8]
    3b08:	ldr	r3, [r3, #4]
    3b0c:	sub	r3, r3, #1
    3b10:	ldr	r2, [fp, #-8]
    3b14:	lsl	r3, r3, #4
    3b18:	add	r3, r2, r3
    3b1c:	ldr	r3, [r3, #8]
    3b20:	ldr	r3, [r3]
    3b24:	cmp	r3, #99	; 0x63
    3b28:	bhi	3b4c <coda_cursor_get_special_type+0xe0>
    3b2c:	ldr	r3, [fp, #-8]
    3b30:	ldr	r3, [r3, #4]
    3b34:	sub	r3, r3, #1
    3b38:	ldr	r2, [fp, #-8]
    3b3c:	lsl	r3, r3, #4
    3b40:	add	r3, r2, r3
    3b44:	ldr	r3, [r3, #8]
    3b48:	b	3b6c <coda_cursor_get_special_type+0x100>
    3b4c:	ldr	r3, [fp, #-8]
    3b50:	ldr	r3, [r3, #4]
    3b54:	sub	r3, r3, #1
    3b58:	ldr	r2, [fp, #-8]
    3b5c:	lsl	r3, r3, #4
    3b60:	add	r3, r2, r3
    3b64:	ldr	r3, [r3, #8]
    3b68:	ldr	r3, [r3, #4]
    3b6c:	ldr	r1, [fp, #-12]
    3b70:	mov	r0, r3
    3b74:	bl	0 <coda_type_get_special_type>
    3b78:	mov	r3, r0
    3b7c:	mov	r0, r3
    3b80:	sub	sp, fp, #4
    3b84:	pop	{fp, pc}
    3b88:	.word	0x000007d3
    3b8c:	.word	0x00000020
    3b90:	.word	0x00000148
    3b94:	.word	0x000007d8
    3b98:	.word	0x000004e4

00003b9c <coda_cursor_get_type>:
    3b9c:	push	{fp, lr}
    3ba0:	add	fp, sp, #4
    3ba4:	sub	sp, sp, #8
    3ba8:	str	r0, [fp, #-8]
    3bac:	str	r1, [fp, #-12]
    3bb0:	ldr	r3, [fp, #-8]
    3bb4:	cmp	r3, #0
    3bb8:	beq	3bf0 <coda_cursor_get_type+0x54>
    3bbc:	ldr	r3, [fp, #-8]
    3bc0:	ldr	r3, [r3, #4]
    3bc4:	cmp	r3, #0
    3bc8:	ble	3bf0 <coda_cursor_get_type+0x54>
    3bcc:	ldr	r3, [fp, #-8]
    3bd0:	ldr	r3, [r3, #4]
    3bd4:	sub	r3, r3, #1
    3bd8:	ldr	r2, [fp, #-8]
    3bdc:	lsl	r3, r3, #4
    3be0:	add	r3, r2, r3
    3be4:	ldr	r3, [r3, #8]
    3be8:	cmp	r3, #0
    3bec:	bne	3c0c <coda_cursor_get_type+0x70>
    3bf0:	ldr	r3, [pc, #188]	; 3cb4 <coda_cursor_get_type+0x118>
    3bf4:	ldr	r2, [pc, #188]	; 3cb8 <coda_cursor_get_type+0x11c>
    3bf8:	ldr	r1, [pc, #188]	; 3cbc <coda_cursor_get_type+0x120>
    3bfc:	mvn	r0, #99	; 0x63
    3c00:	bl	0 <coda_set_error>
    3c04:	mvn	r3, #0
    3c08:	b	3ca8 <coda_cursor_get_type+0x10c>
    3c0c:	ldr	r3, [fp, #-12]
    3c10:	cmp	r3, #0
    3c14:	bne	3c34 <coda_cursor_get_type+0x98>
    3c18:	ldr	r3, [pc, #160]	; 3cc0 <coda_cursor_get_type+0x124>
    3c1c:	ldr	r2, [pc, #148]	; 3cb8 <coda_cursor_get_type+0x11c>
    3c20:	ldr	r1, [pc, #156]	; 3cc4 <coda_cursor_get_type+0x128>
    3c24:	mvn	r0, #99	; 0x63
    3c28:	bl	0 <coda_set_error>
    3c2c:	mvn	r3, #0
    3c30:	b	3ca8 <coda_cursor_get_type+0x10c>
    3c34:	ldr	r3, [fp, #-8]
    3c38:	ldr	r3, [r3, #4]
    3c3c:	sub	r3, r3, #1
    3c40:	ldr	r2, [fp, #-8]
    3c44:	lsl	r3, r3, #4
    3c48:	add	r3, r2, r3
    3c4c:	ldr	r3, [r3, #8]
    3c50:	ldr	r3, [r3]
    3c54:	cmp	r3, #99	; 0x63
    3c58:	bhi	3c7c <coda_cursor_get_type+0xe0>
    3c5c:	ldr	r3, [fp, #-8]
    3c60:	ldr	r3, [r3, #4]
    3c64:	sub	r3, r3, #1
    3c68:	ldr	r2, [fp, #-8]
    3c6c:	lsl	r3, r3, #4
    3c70:	add	r3, r2, r3
    3c74:	ldr	r3, [r3, #8]
    3c78:	b	3c9c <coda_cursor_get_type+0x100>
    3c7c:	ldr	r3, [fp, #-8]
    3c80:	ldr	r3, [r3, #4]
    3c84:	sub	r3, r3, #1
    3c88:	ldr	r2, [fp, #-8]
    3c8c:	lsl	r3, r3, #4
    3c90:	add	r3, r2, r3
    3c94:	ldr	r3, [r3, #8]
    3c98:	ldr	r3, [r3, #4]
    3c9c:	ldr	r2, [fp, #-12]
    3ca0:	str	r3, [r2]
    3ca4:	mov	r3, #0
    3ca8:	mov	r0, r3
    3cac:	sub	sp, fp, #4
    3cb0:	pop	{fp, pc}
    3cb4:	.word	0x000007ec
    3cb8:	.word	0x00000020
    3cbc:	.word	0x00000148
    3cc0:	.word	0x000007f1
    3cc4:	.word	0x0000050c

00003cc8 <coda_cursor_get_record_field_index_from_name>:
    3cc8:	push	{fp, lr}
    3ccc:	add	fp, sp, #4
    3cd0:	sub	sp, sp, #24
    3cd4:	str	r0, [fp, #-16]
    3cd8:	str	r1, [fp, #-20]	; 0xffffffec
    3cdc:	str	r2, [fp, #-24]	; 0xffffffe8
    3ce0:	ldr	r3, [fp, #-16]
    3ce4:	cmp	r3, #0
    3ce8:	beq	3d30 <coda_cursor_get_record_field_index_from_name+0x68>
    3cec:	ldr	r3, [fp, #-16]
    3cf0:	ldr	r3, [r3, #4]
    3cf4:	cmp	r3, #0
    3cf8:	ble	3d30 <coda_cursor_get_record_field_index_from_name+0x68>
    3cfc:	ldr	r3, [fp, #-16]
    3d00:	ldr	r3, [r3]
    3d04:	cmp	r3, #0
    3d08:	beq	3d30 <coda_cursor_get_record_field_index_from_name+0x68>
    3d0c:	ldr	r3, [fp, #-16]
    3d10:	ldr	r3, [r3, #4]
    3d14:	sub	r3, r3, #1
    3d18:	ldr	r2, [fp, #-16]
    3d1c:	lsl	r3, r3, #4
    3d20:	add	r3, r2, r3
    3d24:	ldr	r3, [r3, #8]
    3d28:	cmp	r3, #0
    3d2c:	bne	3d4c <coda_cursor_get_record_field_index_from_name+0x84>
    3d30:	ldr	r3, [pc, #160]	; 3dd8 <coda_cursor_get_record_field_index_from_name+0x110>
    3d34:	ldr	r2, [pc, #160]	; 3ddc <coda_cursor_get_record_field_index_from_name+0x114>
    3d38:	ldr	r1, [pc, #160]	; 3de0 <coda_cursor_get_record_field_index_from_name+0x118>
    3d3c:	mvn	r0, #99	; 0x63
    3d40:	bl	0 <coda_set_error>
    3d44:	mvn	r3, #0
    3d48:	b	3dcc <coda_cursor_get_record_field_index_from_name+0x104>
    3d4c:	ldr	r3, [fp, #-16]
    3d50:	ldr	r3, [r3, #4]
    3d54:	sub	r3, r3, #1
    3d58:	ldr	r2, [fp, #-16]
    3d5c:	lsl	r3, r3, #4
    3d60:	add	r3, r2, r3
    3d64:	ldr	r3, [r3, #8]
    3d68:	ldr	r3, [r3]
    3d6c:	cmp	r3, #99	; 0x63
    3d70:	bhi	3d94 <coda_cursor_get_record_field_index_from_name+0xcc>
    3d74:	ldr	r3, [fp, #-16]
    3d78:	ldr	r3, [r3, #4]
    3d7c:	sub	r3, r3, #1
    3d80:	ldr	r2, [fp, #-16]
    3d84:	lsl	r3, r3, #4
    3d88:	add	r3, r2, r3
    3d8c:	ldr	r3, [r3, #8]
    3d90:	b	3db4 <coda_cursor_get_record_field_index_from_name+0xec>
    3d94:	ldr	r3, [fp, #-16]
    3d98:	ldr	r3, [r3, #4]
    3d9c:	sub	r3, r3, #1
    3da0:	ldr	r2, [fp, #-16]
    3da4:	lsl	r3, r3, #4
    3da8:	add	r3, r2, r3
    3dac:	ldr	r3, [r3, #8]
    3db0:	ldr	r3, [r3, #4]
    3db4:	str	r3, [fp, #-8]
    3db8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3dbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3dc0:	ldr	r0, [fp, #-8]
    3dc4:	bl	0 <coda_type_get_record_field_index_from_name>
    3dc8:	mov	r3, r0
    3dcc:	mov	r0, r3
    3dd0:	sub	sp, fp, #4
    3dd4:	pop	{fp, pc}
    3dd8:	.word	0x00000809
    3ddc:	.word	0x00000020
    3de0:	.word	0x00000148

00003de4 <coda_cursor_get_record_field_available_status>:
    3de4:	push	{fp, lr}
    3de8:	add	fp, sp, #4
    3dec:	sub	sp, sp, #24
    3df0:	str	r0, [fp, #-16]
    3df4:	str	r1, [fp, #-20]	; 0xffffffec
    3df8:	str	r2, [fp, #-24]	; 0xffffffe8
    3dfc:	ldr	r3, [fp, #-16]
    3e00:	cmp	r3, #0
    3e04:	beq	3e4c <coda_cursor_get_record_field_available_status+0x68>
    3e08:	ldr	r3, [fp, #-16]
    3e0c:	ldr	r3, [r3, #4]
    3e10:	cmp	r3, #0
    3e14:	ble	3e4c <coda_cursor_get_record_field_available_status+0x68>
    3e18:	ldr	r3, [fp, #-16]
    3e1c:	ldr	r3, [r3]
    3e20:	cmp	r3, #0
    3e24:	beq	3e4c <coda_cursor_get_record_field_available_status+0x68>
    3e28:	ldr	r3, [fp, #-16]
    3e2c:	ldr	r3, [r3, #4]
    3e30:	sub	r3, r3, #1
    3e34:	ldr	r2, [fp, #-16]
    3e38:	lsl	r3, r3, #4
    3e3c:	add	r3, r2, r3
    3e40:	ldr	r3, [r3, #8]
    3e44:	cmp	r3, #0
    3e48:	bne	3e68 <coda_cursor_get_record_field_available_status+0x84>
    3e4c:	ldr	r3, [pc, #408]	; 3fec <coda_cursor_get_record_field_available_status+0x208>
    3e50:	ldr	r2, [pc, #408]	; 3ff0 <coda_cursor_get_record_field_available_status+0x20c>
    3e54:	ldr	r1, [pc, #408]	; 3ff4 <coda_cursor_get_record_field_available_status+0x210>
    3e58:	mvn	r0, #99	; 0x63
    3e5c:	bl	0 <coda_set_error>
    3e60:	mvn	r3, #0
    3e64:	b	3fe0 <coda_cursor_get_record_field_available_status+0x1fc>
    3e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3e6c:	cmp	r3, #0
    3e70:	bne	3e90 <coda_cursor_get_record_field_available_status+0xac>
    3e74:	ldr	r3, [pc, #380]	; 3ff8 <coda_cursor_get_record_field_available_status+0x214>
    3e78:	ldr	r2, [pc, #368]	; 3ff0 <coda_cursor_get_record_field_available_status+0x20c>
    3e7c:	ldr	r1, [pc, #376]	; 3ffc <coda_cursor_get_record_field_available_status+0x218>
    3e80:	mvn	r0, #99	; 0x63
    3e84:	bl	0 <coda_set_error>
    3e88:	mvn	r3, #0
    3e8c:	b	3fe0 <coda_cursor_get_record_field_available_status+0x1fc>
    3e90:	ldr	r3, [fp, #-16]
    3e94:	ldr	r3, [r3, #4]
    3e98:	sub	r3, r3, #1
    3e9c:	ldr	r2, [fp, #-16]
    3ea0:	lsl	r3, r3, #4
    3ea4:	add	r3, r2, r3
    3ea8:	ldr	r3, [r3, #8]
    3eac:	ldr	r3, [r3]
    3eb0:	cmp	r3, #99	; 0x63
    3eb4:	bhi	3ed8 <coda_cursor_get_record_field_available_status+0xf4>
    3eb8:	ldr	r3, [fp, #-16]
    3ebc:	ldr	r3, [r3, #4]
    3ec0:	sub	r3, r3, #1
    3ec4:	ldr	r2, [fp, #-16]
    3ec8:	lsl	r3, r3, #4
    3ecc:	add	r3, r2, r3
    3ed0:	ldr	r3, [r3, #8]
    3ed4:	b	3ef8 <coda_cursor_get_record_field_available_status+0x114>
    3ed8:	ldr	r3, [fp, #-16]
    3edc:	ldr	r3, [r3, #4]
    3ee0:	sub	r3, r3, #1
    3ee4:	ldr	r2, [fp, #-16]
    3ee8:	lsl	r3, r3, #4
    3eec:	add	r3, r2, r3
    3ef0:	ldr	r3, [r3, #8]
    3ef4:	ldr	r3, [r3, #4]
    3ef8:	str	r3, [fp, #-8]
    3efc:	ldr	r3, [fp, #-8]
    3f00:	ldr	r3, [r3, #8]
    3f04:	cmp	r3, #0
    3f08:	beq	3f38 <coda_cursor_get_record_field_available_status+0x154>
    3f0c:	ldr	r3, [fp, #-8]
    3f10:	ldr	r3, [r3, #8]
    3f14:	mov	r0, r3
    3f18:	bl	0 <coda_type_get_class_name>
    3f1c:	mov	r3, r0
    3f20:	mov	r2, r3
    3f24:	ldr	r1, [pc, #212]	; 4000 <coda_cursor_get_record_field_available_status+0x21c>
    3f28:	mvn	r0, #104	; 0x68
    3f2c:	bl	0 <coda_set_error>
    3f30:	mvn	r3, #0
    3f34:	b	3fe0 <coda_cursor_get_record_field_available_status+0x1fc>
    3f38:	ldr	r3, [fp, #-16]
    3f3c:	ldr	r3, [r3, #4]
    3f40:	sub	r3, r3, #1
    3f44:	ldr	r2, [fp, #-16]
    3f48:	lsl	r3, r3, #4
    3f4c:	add	r3, r2, r3
    3f50:	ldr	r3, [r3, #8]
    3f54:	ldr	r3, [r3]
    3f58:	cmp	r3, #100	; 0x64
    3f5c:	beq	3fa0 <coda_cursor_get_record_field_available_status+0x1bc>
    3f60:	cmp	r3, #100	; 0x64
    3f64:	bhi	3f74 <coda_cursor_get_record_field_available_status+0x190>
    3f68:	cmp	r3, #1
    3f6c:	bhi	3fdc <coda_cursor_get_record_field_available_status+0x1f8>
    3f70:	b	3f88 <coda_cursor_get_record_field_available_status+0x1a4>
    3f74:	cmp	r3, #104	; 0x68
    3f78:	bls	3fb8 <coda_cursor_get_record_field_available_status+0x1d4>
    3f7c:	cmp	r3, #105	; 0x69
    3f80:	beq	3fc8 <coda_cursor_get_record_field_available_status+0x1e4>
    3f84:	b	3fdc <coda_cursor_get_record_field_available_status+0x1f8>
    3f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f90:	ldr	r0, [fp, #-16]
    3f94:	bl	0 <coda_ascbin_cursor_get_record_field_available_status>
    3f98:	mov	r3, r0
    3f9c:	b	3fe0 <coda_cursor_get_record_field_available_status+0x1fc>
    3fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fa8:	ldr	r0, [fp, #-16]
    3fac:	bl	0 <coda_mem_cursor_get_record_field_available_status>
    3fb0:	mov	r3, r0
    3fb4:	b	3fe0 <coda_cursor_get_record_field_available_status+0x1fc>
    3fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3fbc:	mov	r2, #1
    3fc0:	str	r2, [r3]
    3fc4:	b	3fdc <coda_cursor_get_record_field_available_status+0x1f8>
    3fc8:	ldr	r3, [pc, #52]	; 4004 <coda_cursor_get_record_field_available_status+0x220>
    3fcc:	ldr	r2, [pc, #52]	; 4008 <coda_cursor_get_record_field_available_status+0x224>
    3fd0:	ldr	r1, [pc, #24]	; 3ff0 <coda_cursor_get_record_field_available_status+0x20c>
    3fd4:	ldr	r0, [pc, #48]	; 400c <coda_cursor_get_record_field_available_status+0x228>
    3fd8:	bl	0 <__assert_fail>
    3fdc:	mov	r3, #0
    3fe0:	mov	r0, r3
    3fe4:	sub	sp, fp, #4
    3fe8:	pop	{fp, pc}
    3fec:	.word	0x00000825
    3ff0:	.word	0x00000020
    3ff4:	.word	0x00000148
    3ff8:	.word	0x0000082a
    3ffc:	.word	0x0000052c
    4000:	.word	0x00000168
    4004:	.word	0x00000688
    4008:	.word	0x00000845
    400c:	.word	0x0000006c

00004010 <coda_cursor_get_available_union_field_index>:
    4010:	push	{fp, lr}
    4014:	add	fp, sp, #4
    4018:	sub	sp, sp, #16
    401c:	str	r0, [fp, #-16]
    4020:	str	r1, [fp, #-20]	; 0xffffffec
    4024:	ldr	r3, [fp, #-16]
    4028:	cmp	r3, #0
    402c:	beq	4074 <coda_cursor_get_available_union_field_index+0x64>
    4030:	ldr	r3, [fp, #-16]
    4034:	ldr	r3, [r3, #4]
    4038:	cmp	r3, #0
    403c:	ble	4074 <coda_cursor_get_available_union_field_index+0x64>
    4040:	ldr	r3, [fp, #-16]
    4044:	ldr	r3, [r3]
    4048:	cmp	r3, #0
    404c:	beq	4074 <coda_cursor_get_available_union_field_index+0x64>
    4050:	ldr	r3, [fp, #-16]
    4054:	ldr	r3, [r3, #4]
    4058:	sub	r3, r3, #1
    405c:	ldr	r2, [fp, #-16]
    4060:	lsl	r3, r3, #4
    4064:	add	r3, r2, r3
    4068:	ldr	r3, [r3, #8]
    406c:	cmp	r3, #0
    4070:	bne	4090 <coda_cursor_get_available_union_field_index+0x80>
    4074:	ldr	r3, [pc, #372]	; 41f0 <coda_cursor_get_available_union_field_index+0x1e0>
    4078:	ldr	r2, [pc, #372]	; 41f4 <coda_cursor_get_available_union_field_index+0x1e4>
    407c:	ldr	r1, [pc, #372]	; 41f8 <coda_cursor_get_available_union_field_index+0x1e8>
    4080:	mvn	r0, #99	; 0x63
    4084:	bl	0 <coda_set_error>
    4088:	mvn	r3, #0
    408c:	b	41e4 <coda_cursor_get_available_union_field_index+0x1d4>
    4090:	ldr	r3, [fp, #-20]	; 0xffffffec
    4094:	cmp	r3, #0
    4098:	bne	40b8 <coda_cursor_get_available_union_field_index+0xa8>
    409c:	ldr	r3, [pc, #344]	; 41fc <coda_cursor_get_available_union_field_index+0x1ec>
    40a0:	ldr	r2, [pc, #332]	; 41f4 <coda_cursor_get_available_union_field_index+0x1e4>
    40a4:	ldr	r1, [pc, #340]	; 4200 <coda_cursor_get_available_union_field_index+0x1f0>
    40a8:	mvn	r0, #99	; 0x63
    40ac:	bl	0 <coda_set_error>
    40b0:	mvn	r3, #0
    40b4:	b	41e4 <coda_cursor_get_available_union_field_index+0x1d4>
    40b8:	ldr	r3, [fp, #-16]
    40bc:	ldr	r3, [r3, #4]
    40c0:	sub	r3, r3, #1
    40c4:	ldr	r2, [fp, #-16]
    40c8:	lsl	r3, r3, #4
    40cc:	add	r3, r2, r3
    40d0:	ldr	r3, [r3, #8]
    40d4:	ldr	r3, [r3]
    40d8:	cmp	r3, #99	; 0x63
    40dc:	bhi	4100 <coda_cursor_get_available_union_field_index+0xf0>
    40e0:	ldr	r3, [fp, #-16]
    40e4:	ldr	r3, [r3, #4]
    40e8:	sub	r3, r3, #1
    40ec:	ldr	r2, [fp, #-16]
    40f0:	lsl	r3, r3, #4
    40f4:	add	r3, r2, r3
    40f8:	ldr	r3, [r3, #8]
    40fc:	b	4120 <coda_cursor_get_available_union_field_index+0x110>
    4100:	ldr	r3, [fp, #-16]
    4104:	ldr	r3, [r3, #4]
    4108:	sub	r3, r3, #1
    410c:	ldr	r2, [fp, #-16]
    4110:	lsl	r3, r3, #4
    4114:	add	r3, r2, r3
    4118:	ldr	r3, [r3, #8]
    411c:	ldr	r3, [r3, #4]
    4120:	str	r3, [fp, #-8]
    4124:	ldr	r3, [fp, #-8]
    4128:	ldr	r3, [r3, #8]
    412c:	cmp	r3, #0
    4130:	beq	4160 <coda_cursor_get_available_union_field_index+0x150>
    4134:	ldr	r3, [fp, #-8]
    4138:	ldr	r3, [r3, #8]
    413c:	mov	r0, r3
    4140:	bl	0 <coda_type_get_class_name>
    4144:	mov	r3, r0
    4148:	mov	r2, r3
    414c:	ldr	r1, [pc, #176]	; 4204 <coda_cursor_get_available_union_field_index+0x1f4>
    4150:	mvn	r0, #104	; 0x68
    4154:	bl	0 <coda_set_error>
    4158:	mvn	r3, #0
    415c:	b	41e4 <coda_cursor_get_available_union_field_index+0x1d4>
    4160:	ldr	r3, [fp, #-16]
    4164:	ldr	r3, [r3, #4]
    4168:	sub	r3, r3, #1
    416c:	ldr	r2, [fp, #-16]
    4170:	lsl	r3, r3, #4
    4174:	add	r3, r2, r3
    4178:	ldr	r3, [r3, #8]
    417c:	ldr	r3, [r3]
    4180:	cmp	r3, #100	; 0x64
    4184:	beq	41bc <coda_cursor_get_available_union_field_index+0x1ac>
    4188:	cmp	r3, #100	; 0x64
    418c:	bhi	419c <coda_cursor_get_available_union_field_index+0x18c>
    4190:	cmp	r3, #1
    4194:	bhi	41d0 <coda_cursor_get_available_union_field_index+0x1c0>
    4198:	b	41a8 <coda_cursor_get_available_union_field_index+0x198>
    419c:	cmp	r3, #105	; 0x69
    41a0:	bhi	41d0 <coda_cursor_get_available_union_field_index+0x1c0>
    41a4:	b	41d0 <coda_cursor_get_available_union_field_index+0x1c0>
    41a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    41ac:	ldr	r0, [fp, #-16]
    41b0:	bl	0 <coda_ascbin_cursor_get_available_union_field_index>
    41b4:	mov	r3, r0
    41b8:	b	41e4 <coda_cursor_get_available_union_field_index+0x1d4>
    41bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    41c0:	ldr	r0, [fp, #-16]
    41c4:	bl	0 <coda_mem_cursor_get_available_union_field_index>
    41c8:	mov	r3, r0
    41cc:	b	41e4 <coda_cursor_get_available_union_field_index+0x1d4>
    41d0:	ldr	r3, [pc, #48]	; 4208 <coda_cursor_get_available_union_field_index+0x1f8>
    41d4:	ldr	r2, [pc, #48]	; 420c <coda_cursor_get_available_union_field_index+0x1fc>
    41d8:	ldr	r1, [pc, #20]	; 41f4 <coda_cursor_get_available_union_field_index+0x1e4>
    41dc:	ldr	r0, [pc, #44]	; 4210 <coda_cursor_get_available_union_field_index+0x200>
    41e0:	bl	0 <__assert_fail>
    41e4:	mov	r0, r3
    41e8:	sub	sp, fp, #4
    41ec:	pop	{fp, pc}
    41f0:	.word	0x0000085c
    41f4:	.word	0x00000020
    41f8:	.word	0x00000148
    41fc:	.word	0x00000861
    4200:	.word	0x00000434
    4204:	.word	0x00000168
    4208:	.word	0x000006b8
    420c:	.word	0x0000087c
    4210:	.word	0x0000006c

00004214 <coda_cursor_get_array_dim>:
    4214:	push	{fp, lr}
    4218:	add	fp, sp, #4
    421c:	sub	sp, sp, #24
    4220:	str	r0, [fp, #-16]
    4224:	str	r1, [fp, #-20]	; 0xffffffec
    4228:	str	r2, [fp, #-24]	; 0xffffffe8
    422c:	ldr	r3, [fp, #-16]
    4230:	cmp	r3, #0
    4234:	beq	426c <coda_cursor_get_array_dim+0x58>
    4238:	ldr	r3, [fp, #-16]
    423c:	ldr	r3, [r3, #4]
    4240:	cmp	r3, #0
    4244:	ble	426c <coda_cursor_get_array_dim+0x58>
    4248:	ldr	r3, [fp, #-16]
    424c:	ldr	r3, [r3, #4]
    4250:	sub	r3, r3, #1
    4254:	ldr	r2, [fp, #-16]
    4258:	lsl	r3, r3, #4
    425c:	add	r3, r2, r3
    4260:	ldr	r3, [r3, #8]
    4264:	cmp	r3, #0
    4268:	bne	4288 <coda_cursor_get_array_dim+0x74>
    426c:	ldr	r3, [pc, #536]	; 448c <coda_cursor_get_array_dim+0x278>
    4270:	ldr	r2, [pc, #536]	; 4490 <coda_cursor_get_array_dim+0x27c>
    4274:	ldr	r1, [pc, #536]	; 4494 <coda_cursor_get_array_dim+0x280>
    4278:	mvn	r0, #99	; 0x63
    427c:	bl	0 <coda_set_error>
    4280:	mvn	r3, #0
    4284:	b	4480 <coda_cursor_get_array_dim+0x26c>
    4288:	ldr	r3, [fp, #-20]	; 0xffffffec
    428c:	cmp	r3, #0
    4290:	beq	42a0 <coda_cursor_get_array_dim+0x8c>
    4294:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4298:	cmp	r3, #0
    429c:	bne	42bc <coda_cursor_get_array_dim+0xa8>
    42a0:	ldr	r3, [pc, #496]	; 4498 <coda_cursor_get_array_dim+0x284>
    42a4:	ldr	r2, [pc, #484]	; 4490 <coda_cursor_get_array_dim+0x27c>
    42a8:	ldr	r1, [pc, #492]	; 449c <coda_cursor_get_array_dim+0x288>
    42ac:	mvn	r0, #99	; 0x63
    42b0:	bl	0 <coda_set_error>
    42b4:	mvn	r3, #0
    42b8:	b	4480 <coda_cursor_get_array_dim+0x26c>
    42bc:	ldr	r3, [fp, #-16]
    42c0:	ldr	r3, [r3, #4]
    42c4:	sub	r3, r3, #1
    42c8:	ldr	r2, [fp, #-16]
    42cc:	lsl	r3, r3, #4
    42d0:	add	r3, r2, r3
    42d4:	ldr	r3, [r3, #8]
    42d8:	ldr	r3, [r3]
    42dc:	cmp	r3, #99	; 0x63
    42e0:	bhi	4304 <coda_cursor_get_array_dim+0xf0>
    42e4:	ldr	r3, [fp, #-16]
    42e8:	ldr	r3, [r3, #4]
    42ec:	sub	r3, r3, #1
    42f0:	ldr	r2, [fp, #-16]
    42f4:	lsl	r3, r3, #4
    42f8:	add	r3, r2, r3
    42fc:	ldr	r3, [r3, #8]
    4300:	b	4324 <coda_cursor_get_array_dim+0x110>
    4304:	ldr	r3, [fp, #-16]
    4308:	ldr	r3, [r3, #4]
    430c:	sub	r3, r3, #1
    4310:	ldr	r2, [fp, #-16]
    4314:	lsl	r3, r3, #4
    4318:	add	r3, r2, r3
    431c:	ldr	r3, [r3, #8]
    4320:	ldr	r3, [r3, #4]
    4324:	str	r3, [fp, #-8]
    4328:	ldr	r3, [fp, #-8]
    432c:	ldr	r3, [r3, #8]
    4330:	cmp	r3, #1
    4334:	beq	4364 <coda_cursor_get_array_dim+0x150>
    4338:	ldr	r3, [fp, #-8]
    433c:	ldr	r3, [r3, #8]
    4340:	mov	r0, r3
    4344:	bl	0 <coda_type_get_class_name>
    4348:	mov	r3, r0
    434c:	mov	r2, r3
    4350:	ldr	r1, [pc, #328]	; 44a0 <coda_cursor_get_array_dim+0x28c>
    4354:	mvn	r0, #104	; 0x68
    4358:	bl	0 <coda_set_error>
    435c:	mvn	r3, #0
    4360:	b	4480 <coda_cursor_get_array_dim+0x26c>
    4364:	ldr	r3, [fp, #-16]
    4368:	ldr	r3, [r3, #4]
    436c:	sub	r3, r3, #1
    4370:	ldr	r2, [fp, #-16]
    4374:	lsl	r3, r3, #4
    4378:	add	r3, r2, r3
    437c:	ldr	r3, [r3, #8]
    4380:	ldr	r3, [r3]
    4384:	cmp	r3, #101	; 0x65
    4388:	beq	43fc <coda_cursor_get_array_dim+0x1e8>
    438c:	cmp	r3, #101	; 0x65
    4390:	bhi	43a8 <coda_cursor_get_array_dim+0x194>
    4394:	cmp	r3, #1
    4398:	bls	43cc <coda_cursor_get_array_dim+0x1b8>
    439c:	cmp	r3, #100	; 0x64
    43a0:	beq	43e4 <coda_cursor_get_array_dim+0x1d0>
    43a4:	b	446c <coda_cursor_get_array_dim+0x258>
    43a8:	cmp	r3, #103	; 0x67
    43ac:	beq	4424 <coda_cursor_get_array_dim+0x210>
    43b0:	cmp	r3, #103	; 0x67
    43b4:	bcc	4410 <coda_cursor_get_array_dim+0x1fc>
    43b8:	cmp	r3, #104	; 0x68
    43bc:	beq	443c <coda_cursor_get_array_dim+0x228>
    43c0:	cmp	r3, #105	; 0x69
    43c4:	beq	4454 <coda_cursor_get_array_dim+0x240>
    43c8:	b	446c <coda_cursor_get_array_dim+0x258>
    43cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    43d4:	ldr	r0, [fp, #-16]
    43d8:	bl	0 <coda_ascbin_cursor_get_array_dim>
    43dc:	mov	r3, r0
    43e0:	b	4480 <coda_cursor_get_array_dim+0x26c>
    43e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    43ec:	ldr	r0, [fp, #-16]
    43f0:	bl	0 <coda_mem_cursor_get_array_dim>
    43f4:	mov	r3, r0
    43f8:	b	4480 <coda_cursor_get_array_dim+0x26c>
    43fc:	mov	r1, #0
    4400:	mvn	r0, #10
    4404:	bl	0 <coda_set_error>
    4408:	mvn	r3, #0
    440c:	b	4480 <coda_cursor_get_array_dim+0x26c>
    4410:	mov	r1, #0
    4414:	mvn	r0, #12
    4418:	bl	0 <coda_set_error>
    441c:	mvn	r3, #0
    4420:	b	4480 <coda_cursor_get_array_dim+0x26c>
    4424:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4428:	ldr	r1, [fp, #-20]	; 0xffffffec
    442c:	ldr	r0, [fp, #-16]
    4430:	bl	0 <coda_cdf_cursor_get_array_dim>
    4434:	mov	r3, r0
    4438:	b	4480 <coda_cursor_get_array_dim+0x26c>
    443c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4440:	ldr	r1, [fp, #-20]	; 0xffffffec
    4444:	ldr	r0, [fp, #-16]
    4448:	bl	0 <coda_netcdf_cursor_get_array_dim>
    444c:	mov	r3, r0
    4450:	b	4480 <coda_cursor_get_array_dim+0x26c>
    4454:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4458:	ldr	r1, [fp, #-20]	; 0xffffffec
    445c:	ldr	r0, [fp, #-16]
    4460:	bl	0 <coda_grib_cursor_get_array_dim>
    4464:	mov	r3, r0
    4468:	b	4480 <coda_cursor_get_array_dim+0x26c>
    446c:	ldr	r3, [pc, #48]	; 44a4 <coda_cursor_get_array_dim+0x290>
    4470:	ldr	r2, [pc, #48]	; 44a8 <coda_cursor_get_array_dim+0x294>
    4474:	ldr	r1, [pc, #20]	; 4490 <coda_cursor_get_array_dim+0x27c>
    4478:	ldr	r0, [pc, #44]	; 44ac <coda_cursor_get_array_dim+0x298>
    447c:	bl	0 <__assert_fail>
    4480:	mov	r0, r3
    4484:	sub	sp, fp, #4
    4488:	pop	{fp, pc}
    448c:	.word	0x00000895
    4490:	.word	0x00000020
    4494:	.word	0x00000148
    4498:	.word	0x0000089a
    449c:	.word	0x00000550
    44a0:	.word	0x00000268
    44a4:	.word	0x000006e4
    44a8:	.word	0x000008c3
    44ac:	.word	0x0000006c
