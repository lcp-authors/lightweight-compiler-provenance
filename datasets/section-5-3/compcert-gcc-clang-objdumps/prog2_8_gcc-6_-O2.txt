
../compcert-repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa8 <.init>:
   10aa8:	push	{r3, lr}
   10aac:	bl	10c2c <_start@@Base+0x3c>
   10ab0:	pop	{r3, pc}

Disassembly of section .plt:

00010ab4 <calloc@plt-0x14>:
   10ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab8:	ldr	lr, [pc, #4]	; 10ac4 <calloc@plt-0x4>
   10abc:	add	lr, pc, lr
   10ac0:	ldr	pc, [lr, #8]!
   10ac4:	andeq	r2, r1, ip, lsr r5

00010ac8 <calloc@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad4 <printf@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1332]!	; 0x534

00010ae0 <free@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1324]!	; 0x52c

00010aec <realloc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1316]!	; 0x524

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1308]!	; 0x51c

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1300]!	; 0x514

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1292]!	; 0x50c

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1284]!	; 0x504

00010b28 <setvbuf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b34 <putchar@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1260]!	; 0x4ec

Disassembly of section .text:

00010b4c <main@@Base>:
   10b4c:	ldr	r2, [pc, #140]	; 10be0 <main@@Base+0x94>
   10b50:	mov	r3, #0
   10b54:	push	{r4, lr}
   10b58:	mov	r1, r3
   10b5c:	ldr	r0, [r2]
   10b60:	mov	r2, #2
   10b64:	bl	10b28 <setvbuf@plt>
   10b68:	ldr	r2, [pc, #116]	; 10be4 <main@@Base+0x98>
   10b6c:	mov	r3, #0
   10b70:	mov	r1, r3
   10b74:	ldr	r0, [r2]
   10b78:	mov	r2, #2
   10b7c:	bl	10b28 <setvbuf@plt>
   10b80:	bl	10e38 <teste_grafo_novo@@Base>
   10b84:	mov	r4, r0
   10b88:	bl	10f18 <teste_grafo_aresta@@Base>
   10b8c:	add	r4, r4, r0
   10b90:	bl	110b0 <teste_grafo_adiciona@@Base>
   10b94:	add	r4, r4, r0
   10b98:	bl	112b8 <teste_grafo_remove@@Base>
   10b9c:	add	r4, r4, r0
   10ba0:	bl	11458 <teste_v_sucessores@@Base>
   10ba4:	add	r4, r4, r0
   10ba8:	bl	1162c <teste_v_antecessores@@Base>
   10bac:	add	r4, r4, r0
   10bb0:	bl	11804 <teste_v_grau@@Base>
   10bb4:	add	r4, r4, r0
   10bb8:	bl	1196c <teste_v_celebridade@@Base>
   10bbc:	adds	r1, r4, r0
   10bc0:	beq	10bd4 <main@@Base+0x88>
   10bc4:	ldr	r0, [pc, #28]	; 10be8 <main@@Base+0x9c>
   10bc8:	bl	10ad4 <printf@plt>
   10bcc:	mov	r0, #0
   10bd0:	pop	{r4, pc}
   10bd4:	ldr	r0, [pc, #16]	; 10bec <main@@Base+0xa0>
   10bd8:	bl	10af8 <puts@plt>
   10bdc:	b	10bcc <main@@Base+0x80>
   10be0:	andeq	r3, r2, ip, asr #32
   10be4:	andeq	r3, r2, r8, asr #32
   10be8:	andeq	r2, r1, r8, lsr #19
   10bec:	muleq	r1, r0, r9

00010bf0 <_start@@Base>:
   10bf0:	mov	fp, #0
   10bf4:	mov	lr, #0
   10bf8:	pop	{r1}		; (ldr r1, [sp], #4)
   10bfc:	mov	r2, sp
   10c00:	push	{r2}		; (str r2, [sp, #-4]!)
   10c04:	push	{r0}		; (str r0, [sp, #-4]!)
   10c08:	ldr	ip, [pc, #16]	; 10c20 <_start@@Base+0x30>
   10c0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c10:	ldr	r0, [pc, #12]	; 10c24 <_start@@Base+0x34>
   10c14:	ldr	r3, [pc, #12]	; 10c28 <_start@@Base+0x38>
   10c18:	bl	10b10 <__libc_start_main@plt>
   10c1c:	bl	10b40 <abort@plt>
   10c20:	andeq	r2, r1, ip, lsr #5
   10c24:	andeq	r0, r1, ip, asr #22
   10c28:	andeq	r2, r1, ip, asr #4
   10c2c:	ldr	r3, [pc, #20]	; 10c48 <_start@@Base+0x58>
   10c30:	ldr	r2, [pc, #20]	; 10c4c <_start@@Base+0x5c>
   10c34:	add	r3, pc, r3
   10c38:	ldr	r2, [r3, r2]
   10c3c:	cmp	r2, #0
   10c40:	bxeq	lr
   10c44:	b	10b1c <__gmon_start__@plt>
   10c48:	andeq	r2, r1, r4, asr #7
   10c4c:	andeq	r0, r0, r8, lsr r0
   10c50:	ldr	r3, [pc, #28]	; 10c74 <_start@@Base+0x84>
   10c54:	ldr	r0, [pc, #28]	; 10c78 <_start@@Base+0x88>
   10c58:	sub	r3, r3, r0
   10c5c:	cmp	r3, #6
   10c60:	bxls	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x8c>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r3, r2, r7, asr #32
   10c78:	andeq	r3, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r1, [pc, #36]	; 10cac <_start@@Base+0xbc>
   10c84:	ldr	r0, [pc, #36]	; 10cb0 <_start@@Base+0xc0>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc4>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r3, r2, r4, asr #32
   10cb0:	andeq	r3, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xec>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c50 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r3, r2, r0, asr r0
   10ce0:	ldr	r0, [pc, #40]	; 10d10 <_start@@Base+0x120>
   10ce4:	ldr	r3, [r0]
   10ce8:	cmp	r3, #0
   10cec:	bne	10cf4 <_start@@Base+0x104>
   10cf0:	b	10c80 <_start@@Base+0x90>
   10cf4:	ldr	r3, [pc, #24]	; 10d14 <_start@@Base+0x124>
   10cf8:	cmp	r3, #0
   10cfc:	beq	10cf0 <_start@@Base+0x100>
   10d00:	push	{r4, lr}
   10d04:	blx	r3
   10d08:	pop	{r4, lr}
   10d0c:	b	10c80 <_start@@Base+0x90>
   10d10:	andeq	r2, r2, r4, lsl pc
   10d14:	andeq	r0, r0, r0

00010d18 <_g@@Base>:
   10d18:	push	{r1, r2, r3}
   10d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d20:	sub	sp, sp, #16
   10d24:	mov	r4, r0
   10d28:	str	r0, [sp, #4]
   10d2c:	mov	r0, #8
   10d30:	ldr	r6, [sp, #52]	; 0x34
   10d34:	bl	10b04 <malloc@plt>
   10d38:	add	r3, sp, #56	; 0x38
   10d3c:	mov	r1, #8
   10d40:	str	r3, [sp, #12]
   10d44:	mov	r9, r0
   10d48:	mov	r0, r4
   10d4c:	bl	10ac8 <calloc@plt>
   10d50:	cmp	r6, #0
   10d54:	str	r0, [r9, #4]
   10d58:	ble	10dc4 <_g@@Base+0xac>
   10d5c:	sub	r6, r6, #1
   10d60:	bic	r6, r6, #1
   10d64:	mov	r5, r0
   10d68:	add	r6, r6, #2
   10d6c:	mov	fp, #0
   10d70:	mov	r8, #8
   10d74:	mov	r7, #1
   10d78:	ldr	r2, [sp, #12]
   10d7c:	mov	r1, r8
   10d80:	mov	r3, r2
   10d84:	mov	r0, r7
   10d88:	ldr	r4, [r3], #8
   10d8c:	ldr	sl, [r2, #4]
   10d90:	str	r3, [sp, #12]
   10d94:	bl	10ac8 <calloc@plt>
   10d98:	add	r1, r5, r4, lsl #3
   10d9c:	ldr	r3, [r5, r4, lsl #3]
   10da0:	ldr	ip, [r1, #4]
   10da4:	add	fp, fp, #2
   10da8:	add	r3, r3, #1
   10dac:	cmp	fp, r6
   10db0:	str	r0, [r1, #4]
   10db4:	str	sl, [r0]
   10db8:	str	ip, [r0, #4]
   10dbc:	str	r3, [r5, r4, lsl #3]
   10dc0:	bne	10d78 <_g@@Base+0x60>
   10dc4:	ldr	r3, [sp, #4]
   10dc8:	mov	r0, r9
   10dcc:	str	r3, [r9]
   10dd0:	add	sp, sp, #16
   10dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dd8:	add	sp, sp, #12
   10ddc:	bx	lr

00010de0 <_f@@Base>:
   10de0:	push	{r4, r5, r6, lr}
   10de4:	subs	r5, r0, #0
   10de8:	beq	10e30 <_f@@Base+0x50>
   10dec:	ldr	r3, [r5]
   10df0:	cmp	r3, #0
   10df4:	ble	10e30 <_f@@Base+0x50>
   10df8:	mov	r6, r1
   10dfc:	mov	r4, #0
   10e00:	b	10e10 <_f@@Base+0x30>
   10e04:	ldr	r3, [r5]
   10e08:	cmp	r3, r4
   10e0c:	ble	10e30 <_f@@Base+0x50>
   10e10:	mov	r1, r4
   10e14:	mov	r0, r5
   10e18:	bl	1202c <vetor_elemento@@Base>
   10e1c:	add	r4, r4, #1
   10e20:	cmp	r0, r6
   10e24:	bne	10e04 <_f@@Base+0x24>
   10e28:	mov	r0, #1
   10e2c:	pop	{r4, r5, r6, pc}
   10e30:	mov	r0, #0
   10e34:	pop	{r4, r5, r6, pc}

00010e38 <teste_grafo_novo@@Base>:
   10e38:	push	{r4, r5, r6, lr}
   10e3c:	ldr	r0, [pc, #192]	; 10f04 <teste_grafo_novo@@Base+0xcc>
   10e40:	bl	10ad4 <printf@plt>
   10e44:	mov	r0, #10
   10e48:	bl	11aec <grafo_novo@@Base>
   10e4c:	subs	r5, r0, #0
   10e50:	beq	10ed4 <teste_grafo_novo@@Base+0x9c>
   10e54:	ldr	r3, [r5]
   10e58:	cmp	r3, #10
   10e5c:	moveq	r4, #0
   10e60:	beq	10e70 <teste_grafo_novo@@Base+0x38>
   10e64:	ldr	r0, [pc, #156]	; 10f08 <teste_grafo_novo@@Base+0xd0>
   10e68:	bl	10ad4 <printf@plt>
   10e6c:	mov	r4, #1
   10e70:	mov	r0, r5
   10e74:	bl	11b48 <grafo_apaga@@Base>
   10e78:	mov	r0, #1
   10e7c:	bl	11aec <grafo_novo@@Base>
   10e80:	subs	r5, r0, #0
   10e84:	beq	10eec <teste_grafo_novo@@Base+0xb4>
   10e88:	ldr	r3, [r5]
   10e8c:	cmp	r3, #1
   10e90:	beq	10eb8 <teste_grafo_novo@@Base+0x80>
   10e94:	ldr	r0, [pc, #112]	; 10f0c <teste_grafo_novo@@Base+0xd4>
   10e98:	bl	10ad4 <printf@plt>
   10e9c:	mov	r0, r5
   10ea0:	add	r4, r4, #1
   10ea4:	bl	11b48 <grafo_apaga@@Base>
   10ea8:	mov	r0, #10
   10eac:	bl	10b34 <putchar@plt>
   10eb0:	mov	r0, r4
   10eb4:	pop	{r4, r5, r6, pc}
   10eb8:	bl	11b48 <grafo_apaga@@Base>
   10ebc:	cmp	r4, #0
   10ec0:	bne	10ea8 <teste_grafo_novo@@Base+0x70>
   10ec4:	ldr	r0, [pc, #68]	; 10f10 <teste_grafo_novo@@Base+0xd8>
   10ec8:	bl	10af8 <puts@plt>
   10ecc:	mov	r0, r4
   10ed0:	pop	{r4, r5, r6, pc}
   10ed4:	ldr	r0, [pc, #56]	; 10f14 <teste_grafo_novo@@Base+0xdc>
   10ed8:	bl	10ad4 <printf@plt>
   10edc:	mov	r0, #10
   10ee0:	bl	10b34 <putchar@plt>
   10ee4:	mov	r4, #1
   10ee8:	b	10eb0 <teste_grafo_novo@@Base+0x78>
   10eec:	ldr	r0, [pc, #32]	; 10f14 <teste_grafo_novo@@Base+0xdc>
   10ef0:	bl	10ad4 <printf@plt>
   10ef4:	mov	r0, #10
   10ef8:	add	r4, r4, #1
   10efc:	bl	10b34 <putchar@plt>
   10f00:	b	10eb0 <teste_grafo_novo@@Base+0x78>
   10f04:			; <UNDEFINED> instruction: 0x000122bc
   10f08:	andeq	r2, r1, r4, ror #5
   10f0c:	andeq	r2, r1, r8, lsl #6
   10f10:	andeq	r2, r1, ip, lsr #6
   10f14:	andeq	r2, r1, ip, asr #5

00010f18 <teste_grafo_aresta@@Base>:
   10f18:	push	{r4, r5, r6, r7, r8, lr}
   10f1c:	sub	sp, sp, #80	; 0x50
   10f20:	mov	ip, #7
   10f24:	mov	r3, #2
   10f28:	mov	r7, #0
   10f2c:	mov	r0, #6
   10f30:	mov	r5, #4
   10f34:	mov	r1, #3
   10f38:	mov	r8, #5
   10f3c:	mov	r4, #1
   10f40:	mov	r2, r1
   10f44:	str	ip, [sp, #16]
   10f48:	str	ip, [sp]
   10f4c:	str	r3, [sp, #12]
   10f50:	str	r3, [sp, #4]
   10f54:	str	r0, [sp, #44]	; 0x2c
   10f58:	str	r1, [sp, #68]	; 0x44
   10f5c:	str	r0, [sp, #64]	; 0x40
   10f60:	mov	r1, #22
   10f64:	str	r0, [sp, #60]	; 0x3c
   10f68:	str	r7, [sp, #36]	; 0x24
   10f6c:	str	r7, [sp, #8]
   10f70:	str	r5, [sp, #40]	; 0x28
   10f74:	str	r5, [sp, #32]
   10f78:	str	r5, [sp, #28]
   10f7c:	str	r8, [sp, #24]
   10f80:	str	r8, [sp, #20]
   10f84:	mov	r0, #8
   10f88:	str	ip, [sp, #56]	; 0x38
   10f8c:	str	r4, [sp, #76]	; 0x4c
   10f90:	str	r4, [sp, #52]	; 0x34
   10f94:	str	r4, [sp, #48]	; 0x30
   10f98:	str	r7, [sp, #72]	; 0x48
   10f9c:	bl	10d18 <_g@@Base>
   10fa0:	mov	r6, r0
   10fa4:	ldr	r0, [pc, #240]	; 1109c <teste_grafo_aresta@@Base+0x184>
   10fa8:	bl	10ad4 <printf@plt>
   10fac:	mov	r2, r5
   10fb0:	mov	r1, r8
   10fb4:	mov	r0, r6
   10fb8:	bl	11ba8 <grafo_aresta@@Base>
   10fbc:	cmp	r0, r4
   10fc0:	moveq	r4, r7
   10fc4:	beq	10fd0 <teste_grafo_aresta@@Base+0xb8>
   10fc8:	ldr	r0, [pc, #208]	; 110a0 <teste_grafo_aresta@@Base+0x188>
   10fcc:	bl	10ad4 <printf@plt>
   10fd0:	mov	r2, #6
   10fd4:	mov	r1, #7
   10fd8:	mov	r0, r6
   10fdc:	bl	11ba8 <grafo_aresta@@Base>
   10fe0:	cmp	r0, #1
   10fe4:	beq	10ff4 <teste_grafo_aresta@@Base+0xdc>
   10fe8:	ldr	r0, [pc, #176]	; 110a0 <teste_grafo_aresta@@Base+0x188>
   10fec:	bl	10ad4 <printf@plt>
   10ff0:	add	r4, r4, #1
   10ff4:	mov	r2, #1
   10ff8:	mov	r1, #7
   10ffc:	mov	r0, r6
   11000:	bl	11ba8 <grafo_aresta@@Base>
   11004:	cmp	r0, #0
   11008:	bne	1106c <teste_grafo_aresta@@Base+0x154>
   1100c:	mov	r2, #7
   11010:	mov	r1, #2
   11014:	bl	11ba8 <grafo_aresta@@Base>
   11018:	cmn	r0, #1
   1101c:	beq	11048 <teste_grafo_aresta@@Base+0x130>
   11020:	ldr	r0, [pc, #124]	; 110a4 <teste_grafo_aresta@@Base+0x18c>
   11024:	bl	10ad4 <printf@plt>
   11028:	mov	r0, r6
   1102c:	add	r4, r4, #1
   11030:	bl	11b48 <grafo_apaga@@Base>
   11034:	mov	r0, #10
   11038:	bl	10b34 <putchar@plt>
   1103c:	mov	r0, r4
   11040:	add	sp, sp, #80	; 0x50
   11044:	pop	{r4, r5, r6, r7, r8, pc}
   11048:	mov	r0, r6
   1104c:	bl	11b48 <grafo_apaga@@Base>
   11050:	cmp	r4, #0
   11054:	bne	11034 <teste_grafo_aresta@@Base+0x11c>
   11058:	ldr	r0, [pc, #72]	; 110a8 <teste_grafo_aresta@@Base+0x190>
   1105c:	bl	10af8 <puts@plt>
   11060:	mov	r0, r4
   11064:	add	sp, sp, #80	; 0x50
   11068:	pop	{r4, r5, r6, r7, r8, pc}
   1106c:	ldr	r0, [pc, #56]	; 110ac <teste_grafo_aresta@@Base+0x194>
   11070:	bl	10ad4 <printf@plt>
   11074:	mov	r2, #7
   11078:	mov	r1, #2
   1107c:	mov	r0, #0
   11080:	bl	11ba8 <grafo_aresta@@Base>
   11084:	add	r4, r4, #1
   11088:	cmn	r0, #1
   1108c:	bne	11020 <teste_grafo_aresta@@Base+0x108>
   11090:	mov	r0, r6
   11094:	bl	11b48 <grafo_apaga@@Base>
   11098:	b	11034 <teste_grafo_aresta@@Base+0x11c>
   1109c:	andeq	r2, r1, r0, lsr r3
   110a0:	andeq	r2, r1, r4, asr #6
   110a4:			; <UNDEFINED> instruction: 0x000123b8
   110a8:	andeq	r2, r1, ip, lsr #6
   110ac:	andeq	r2, r1, ip, ror r3

000110b0 <teste_grafo_adiciona@@Base>:
   110b0:	push	{r4, r5, r6, lr}
   110b4:	sub	sp, sp, #8
   110b8:	mov	r4, #2
   110bc:	mov	r6, #7
   110c0:	mov	r3, r4
   110c4:	mov	r2, #3
   110c8:	mov	r1, #4
   110cc:	str	r4, [sp, #4]
   110d0:	str	r6, [sp]
   110d4:	mov	r0, #9
   110d8:	bl	10d18 <_g@@Base>
   110dc:	mov	r5, r0
   110e0:	ldr	r0, [pc, #432]	; 11298 <teste_grafo_adiciona@@Base+0x1e8>
   110e4:	bl	10ad4 <printf@plt>
   110e8:	mov	r1, r4
   110ec:	mov	r2, r6
   110f0:	mov	r0, r5
   110f4:	bl	11c10 <grafo_adiciona@@Base>
   110f8:	cmp	r0, #1
   110fc:	moveq	r4, #0
   11100:	beq	11110 <teste_grafo_adiciona@@Base+0x60>
   11104:	ldr	r0, [pc, #400]	; 1129c <teste_grafo_adiciona@@Base+0x1ec>
   11108:	bl	10ad4 <printf@plt>
   1110c:	mov	r4, #1
   11110:	ldr	r3, [r5, #4]
   11114:	ldr	r3, [r3, #20]
   11118:	cmp	r3, #0
   1111c:	beq	1112c <teste_grafo_adiciona@@Base+0x7c>
   11120:	ldr	r3, [r3]
   11124:	cmp	r3, #7
   11128:	beq	11138 <teste_grafo_adiciona@@Base+0x88>
   1112c:	ldr	r0, [pc, #364]	; 112a0 <teste_grafo_adiciona@@Base+0x1f0>
   11130:	bl	10ad4 <printf@plt>
   11134:	add	r4, r4, #1
   11138:	mov	r2, #8
   1113c:	mov	r1, #3
   11140:	mov	r0, r5
   11144:	bl	11c10 <grafo_adiciona@@Base>
   11148:	cmp	r0, #1
   1114c:	beq	1115c <teste_grafo_adiciona@@Base+0xac>
   11150:	ldr	r0, [pc, #324]	; 1129c <teste_grafo_adiciona@@Base+0x1ec>
   11154:	bl	10ad4 <printf@plt>
   11158:	add	r4, r4, #1
   1115c:	ldr	r3, [r5, #4]
   11160:	ldr	r3, [r3, #28]
   11164:	cmp	r3, #0
   11168:	beq	11184 <teste_grafo_adiciona@@Base+0xd4>
   1116c:	ldr	r2, [r3, #4]
   11170:	cmp	r2, #0
   11174:	beq	11184 <teste_grafo_adiciona@@Base+0xd4>
   11178:	ldr	r1, [r2, #4]
   1117c:	cmp	r1, #0
   11180:	beq	11264 <teste_grafo_adiciona@@Base+0x1b4>
   11184:	ldr	r0, [pc, #280]	; 112a4 <teste_grafo_adiciona@@Base+0x1f4>
   11188:	bl	10ad4 <printf@plt>
   1118c:	add	r4, r4, #1
   11190:	mov	r2, #7
   11194:	mov	r1, #2
   11198:	mov	r0, r5
   1119c:	bl	11c10 <grafo_adiciona@@Base>
   111a0:	cmp	r0, #0
   111a4:	bne	11254 <teste_grafo_adiciona@@Base+0x1a4>
   111a8:	mov	r2, #7
   111ac:	mov	r1, #22
   111b0:	mov	r0, r5
   111b4:	bl	11c10 <grafo_adiciona@@Base>
   111b8:	cmn	r0, #1
   111bc:	beq	11218 <teste_grafo_adiciona@@Base+0x168>
   111c0:	ldr	r0, [pc, #224]	; 112a8 <teste_grafo_adiciona@@Base+0x1f8>
   111c4:	bl	10ad4 <printf@plt>
   111c8:	mov	r2, #7
   111cc:	mov	r1, #2
   111d0:	mov	r0, #0
   111d4:	bl	11c10 <grafo_adiciona@@Base>
   111d8:	add	r4, r4, #1
   111dc:	cmn	r0, #1
   111e0:	beq	1120c <teste_grafo_adiciona@@Base+0x15c>
   111e4:	ldr	r0, [pc, #192]	; 112ac <teste_grafo_adiciona@@Base+0x1fc>
   111e8:	bl	10ad4 <printf@plt>
   111ec:	mov	r0, r5
   111f0:	add	r4, r4, #1
   111f4:	bl	11b48 <grafo_apaga@@Base>
   111f8:	mov	r0, #10
   111fc:	bl	10b34 <putchar@plt>
   11200:	mov	r0, r4
   11204:	add	sp, sp, #8
   11208:	pop	{r4, r5, r6, pc}
   1120c:	mov	r0, r5
   11210:	bl	11b48 <grafo_apaga@@Base>
   11214:	b	111f8 <teste_grafo_adiciona@@Base+0x148>
   11218:	mov	r2, #7
   1121c:	mov	r1, #2
   11220:	mov	r0, #0
   11224:	bl	11c10 <grafo_adiciona@@Base>
   11228:	cmn	r0, #1
   1122c:	bne	111e4 <teste_grafo_adiciona@@Base+0x134>
   11230:	mov	r0, r5
   11234:	bl	11b48 <grafo_apaga@@Base>
   11238:	cmp	r4, #0
   1123c:	bne	111f8 <teste_grafo_adiciona@@Base+0x148>
   11240:	ldr	r0, [pc, #104]	; 112b0 <teste_grafo_adiciona@@Base+0x200>
   11244:	bl	10af8 <puts@plt>
   11248:	mov	r0, r4
   1124c:	add	sp, sp, #8
   11250:	pop	{r4, r5, r6, pc}
   11254:	ldr	r0, [pc, #88]	; 112b4 <teste_grafo_adiciona@@Base+0x204>
   11258:	bl	10ad4 <printf@plt>
   1125c:	add	r4, r4, #1
   11260:	b	111a8 <teste_grafo_adiciona@@Base+0xf8>
   11264:	ldr	r3, [r3]
   11268:	cmp	r3, #2
   1126c:	beq	11288 <teste_grafo_adiciona@@Base+0x1d8>
   11270:	cmp	r3, #8
   11274:	bne	11184 <teste_grafo_adiciona@@Base+0xd4>
   11278:	ldr	r3, [r2]
   1127c:	cmp	r3, #2
   11280:	bne	11184 <teste_grafo_adiciona@@Base+0xd4>
   11284:	b	11190 <teste_grafo_adiciona@@Base+0xe0>
   11288:	ldr	r3, [r2]
   1128c:	cmp	r3, #8
   11290:	bne	11184 <teste_grafo_adiciona@@Base+0xd4>
   11294:	b	11190 <teste_grafo_adiciona@@Base+0xe0>
   11298:	strdeq	r2, [r1], -r0
   1129c:	andeq	r2, r1, r4, lsl #8
   112a0:	andeq	r2, r1, r0, asr #8
   112a4:	andeq	r2, r1, r0, ror r4
   112a8:	andeq	r2, r1, r4, ror #9
   112ac:	andeq	r2, r1, ip, lsl r5
   112b0:	andeq	r2, r1, ip, lsr #6
   112b4:	andeq	r2, r1, ip, lsr #9

000112b8 <teste_grafo_remove@@Base>:
   112b8:	push	{r4, r5, r6, lr}
   112bc:	sub	sp, sp, #16
   112c0:	mov	r4, #1
   112c4:	mov	r3, #2
   112c8:	mov	r6, #7
   112cc:	str	r3, [sp, #4]
   112d0:	mov	r2, #3
   112d4:	mov	r1, #6
   112d8:	str	r4, [sp, #12]
   112dc:	str	r6, [sp, #8]
   112e0:	str	r6, [sp]
   112e4:	mov	r0, #9
   112e8:	bl	10d18 <_g@@Base>
   112ec:	mov	r5, r0
   112f0:	ldr	r0, [pc, #328]	; 11440 <teste_grafo_remove@@Base+0x188>
   112f4:	bl	10ad4 <printf@plt>
   112f8:	mov	r2, r4
   112fc:	mov	r1, r6
   11300:	mov	r0, r5
   11304:	bl	11cbc <grafo_remove@@Base>
   11308:	cmp	r0, r4
   1130c:	moveq	r4, #0
   11310:	beq	1131c <teste_grafo_remove@@Base+0x64>
   11314:	ldr	r0, [pc, #296]	; 11444 <teste_grafo_remove@@Base+0x18c>
   11318:	bl	10ad4 <printf@plt>
   1131c:	ldr	r3, [r5, #4]
   11320:	ldr	r3, [r3, #60]	; 0x3c
   11324:	cmp	r3, #0
   11328:	beq	11338 <teste_grafo_remove@@Base+0x80>
   1132c:	ldr	r2, [r3, #4]
   11330:	cmp	r2, #0
   11334:	beq	11430 <teste_grafo_remove@@Base+0x178>
   11338:	ldr	r0, [pc, #264]	; 11448 <teste_grafo_remove@@Base+0x190>
   1133c:	bl	10ad4 <printf@plt>
   11340:	add	r4, r4, #1
   11344:	mov	r2, #2
   11348:	mov	r1, #7
   1134c:	mov	r0, r5
   11350:	bl	11cbc <grafo_remove@@Base>
   11354:	cmp	r0, #1
   11358:	beq	11368 <teste_grafo_remove@@Base+0xb0>
   1135c:	ldr	r0, [pc, #224]	; 11444 <teste_grafo_remove@@Base+0x18c>
   11360:	bl	10ad4 <printf@plt>
   11364:	add	r4, r4, #1
   11368:	ldr	r3, [r5, #4]
   1136c:	ldr	r3, [r3, #60]	; 0x3c
   11370:	cmp	r3, #0
   11374:	beq	11384 <teste_grafo_remove@@Base+0xcc>
   11378:	ldr	r0, [pc, #200]	; 11448 <teste_grafo_remove@@Base+0x190>
   1137c:	bl	10ad4 <printf@plt>
   11380:	add	r4, r4, #1
   11384:	mov	r2, #0
   11388:	mov	r1, #4
   1138c:	mov	r0, r5
   11390:	bl	11cbc <grafo_remove@@Base>
   11394:	cmp	r0, #0
   11398:	bne	11400 <teste_grafo_remove@@Base+0x148>
   1139c:	mov	r2, #22
   113a0:	mov	r1, #7
   113a4:	mov	r0, r5
   113a8:	bl	11cbc <grafo_remove@@Base>
   113ac:	cmn	r0, #1
   113b0:	beq	113dc <teste_grafo_remove@@Base+0x124>
   113b4:	ldr	r0, [pc, #144]	; 1144c <teste_grafo_remove@@Base+0x194>
   113b8:	bl	10ad4 <printf@plt>
   113bc:	mov	r0, r5
   113c0:	add	r4, r4, #1
   113c4:	bl	11b48 <grafo_apaga@@Base>
   113c8:	mov	r0, #10
   113cc:	bl	10b34 <putchar@plt>
   113d0:	mov	r0, r4
   113d4:	add	sp, sp, #16
   113d8:	pop	{r4, r5, r6, pc}
   113dc:	mov	r0, r5
   113e0:	bl	11b48 <grafo_apaga@@Base>
   113e4:	cmp	r4, #0
   113e8:	bne	113c8 <teste_grafo_remove@@Base+0x110>
   113ec:	ldr	r0, [pc, #92]	; 11450 <teste_grafo_remove@@Base+0x198>
   113f0:	bl	10af8 <puts@plt>
   113f4:	mov	r0, r4
   113f8:	add	sp, sp, #16
   113fc:	pop	{r4, r5, r6, pc}
   11400:	ldr	r0, [pc, #76]	; 11454 <teste_grafo_remove@@Base+0x19c>
   11404:	bl	10ad4 <printf@plt>
   11408:	mov	r2, #22
   1140c:	mov	r1, #7
   11410:	mov	r0, r5
   11414:	bl	11cbc <grafo_remove@@Base>
   11418:	add	r4, r4, #1
   1141c:	cmn	r0, #1
   11420:	bne	113b4 <teste_grafo_remove@@Base+0xfc>
   11424:	mov	r0, r5
   11428:	bl	11b48 <grafo_apaga@@Base>
   1142c:	b	113c8 <teste_grafo_remove@@Base+0x110>
   11430:	ldr	r3, [r3]
   11434:	cmp	r3, #2
   11438:	bne	11338 <teste_grafo_remove@@Base+0x80>
   1143c:	b	11344 <teste_grafo_remove@@Base+0x8c>
   11440:	andeq	r2, r1, r4, asr r5
   11444:	andeq	r2, r1, r8, ror #10
   11448:	andeq	r2, r1, r4, lsr #11
   1144c:	andeq	r2, r1, ip, lsl r6
   11450:	andeq	r2, r1, ip, lsr #6
   11454:	andeq	r2, r1, r0, ror #11

00011458 <teste_v_sucessores@@Base>:
   11458:	push	{r4, r5, r6, r7, lr}
   1145c:	sub	sp, sp, #84	; 0x54
   11460:	mov	r5, #7
   11464:	mov	r3, #2
   11468:	mov	r2, #4
   1146c:	mov	r4, #0
   11470:	mov	r0, #3
   11474:	mov	r1, #5
   11478:	mov	ip, #6
   1147c:	str	r3, [sp, #12]
   11480:	str	r3, [sp, #4]
   11484:	mov	r6, #1
   11488:	str	r5, [sp, #16]
   1148c:	str	r5, [sp]
   11490:	str	r2, [sp, #40]	; 0x28
   11494:	str	r2, [sp, #32]
   11498:	str	r2, [sp, #28]
   1149c:	str	r1, [sp, #24]
   114a0:	mov	r2, r0
   114a4:	str	r1, [sp, #20]
   114a8:	str	r0, [sp, #68]	; 0x44
   114ac:	mov	r1, #22
   114b0:	str	r4, [sp, #36]	; 0x24
   114b4:	str	r4, [sp, #8]
   114b8:	mov	r0, #8
   114bc:	str	ip, [sp, #44]	; 0x2c
   114c0:	str	ip, [sp, #64]	; 0x40
   114c4:	str	ip, [sp, #60]	; 0x3c
   114c8:	str	r5, [sp, #56]	; 0x38
   114cc:	str	r4, [sp, #72]	; 0x48
   114d0:	str	r6, [sp, #76]	; 0x4c
   114d4:	str	r6, [sp, #52]	; 0x34
   114d8:	str	r6, [sp, #48]	; 0x30
   114dc:	bl	10d18 <_g@@Base>
   114e0:	mov	r7, r0
   114e4:	ldr	r0, [pc, #292]	; 11610 <teste_v_sucessores@@Base+0x1b8>
   114e8:	bl	10ad4 <printf@plt>
   114ec:	mov	r1, r5
   114f0:	mov	r0, r7
   114f4:	bl	11d78 <v_sucessores@@Base>
   114f8:	subs	r5, r0, #0
   114fc:	beq	115e4 <teste_v_sucessores@@Base+0x18c>
   11500:	ldr	r3, [r5]
   11504:	cmp	r3, #3
   11508:	moveq	r6, r4
   1150c:	beq	11518 <teste_v_sucessores@@Base+0xc0>
   11510:	ldr	r0, [pc, #252]	; 11614 <teste_v_sucessores@@Base+0x1bc>
   11514:	bl	10ad4 <printf@plt>
   11518:	mov	r1, #2
   1151c:	mov	r0, r5
   11520:	bl	10de0 <_f@@Base>
   11524:	cmp	r0, #0
   11528:	bne	11588 <teste_v_sucessores@@Base+0x130>
   1152c:	ldr	r0, [pc, #228]	; 11618 <teste_v_sucessores@@Base+0x1c0>
   11530:	add	r6, r6, #1
   11534:	bl	10ad4 <printf@plt>
   11538:	mov	r0, r5
   1153c:	bl	11fc8 <vetor_apaga@@Base>
   11540:	mov	r1, #2
   11544:	mov	r0, r7
   11548:	bl	11d78 <v_sucessores@@Base>
   1154c:	subs	r5, r0, #0
   11550:	beq	115f8 <teste_v_sucessores@@Base+0x1a0>
   11554:	ldr	r3, [r5]
   11558:	cmp	r3, #0
   1155c:	bne	115b4 <teste_v_sucessores@@Base+0x15c>
   11560:	bl	11fc8 <vetor_apaga@@Base>
   11564:	mov	r0, r7
   11568:	bl	11b48 <grafo_apaga@@Base>
   1156c:	cmp	r6, #0
   11570:	bne	115d0 <teste_v_sucessores@@Base+0x178>
   11574:	ldr	r0, [pc, #160]	; 1161c <teste_v_sucessores@@Base+0x1c4>
   11578:	bl	10af8 <puts@plt>
   1157c:	mov	r0, r6
   11580:	add	sp, sp, #84	; 0x54
   11584:	pop	{r4, r5, r6, r7, pc}
   11588:	mov	r1, #5
   1158c:	mov	r0, r5
   11590:	bl	10de0 <_f@@Base>
   11594:	cmp	r0, #0
   11598:	beq	1152c <teste_v_sucessores@@Base+0xd4>
   1159c:	mov	r1, #6
   115a0:	mov	r0, r5
   115a4:	bl	10de0 <_f@@Base>
   115a8:	cmp	r0, #0
   115ac:	beq	1152c <teste_v_sucessores@@Base+0xd4>
   115b0:	b	11538 <teste_v_sucessores@@Base+0xe0>
   115b4:	ldr	r0, [pc, #100]	; 11620 <teste_v_sucessores@@Base+0x1c8>
   115b8:	bl	10ad4 <printf@plt>
   115bc:	mov	r0, r5
   115c0:	bl	11fc8 <vetor_apaga@@Base>
   115c4:	mov	r0, r7
   115c8:	add	r6, r6, #1
   115cc:	bl	11b48 <grafo_apaga@@Base>
   115d0:	mov	r0, #10
   115d4:	bl	10b34 <putchar@plt>
   115d8:	mov	r0, r6
   115dc:	add	sp, sp, #84	; 0x54
   115e0:	pop	{r4, r5, r6, r7, pc}
   115e4:	ldr	r0, [pc, #56]	; 11624 <teste_v_sucessores@@Base+0x1cc>
   115e8:	bl	10ad4 <printf@plt>
   115ec:	mov	r0, #10
   115f0:	bl	10b34 <putchar@plt>
   115f4:	b	1157c <teste_v_sucessores@@Base+0x124>
   115f8:	ldr	r0, [pc, #40]	; 11628 <teste_v_sucessores@@Base+0x1d0>
   115fc:	bl	10ad4 <printf@plt>
   11600:	mov	r0, #10
   11604:	add	r6, r6, #1
   11608:	bl	10b34 <putchar@plt>
   1160c:	b	1157c <teste_v_sucessores@@Base+0x124>
   11610:	andeq	r2, r1, r4, asr r6
   11614:	muleq	r1, r8, r6
   11618:	andeq	r2, r1, r4, asr #13
   1161c:	andeq	r2, r1, ip, lsr #6
   11620:	andeq	r2, r1, r0, lsr r7
   11624:	andeq	r2, r1, r8, ror #12
   11628:	strdeq	r2, [r1], -r0

0001162c <teste_v_antecessores@@Base>:
   1162c:	push	{r4, r5, r6, r7, lr}
   11630:	sub	sp, sp, #84	; 0x54
   11634:	mov	ip, #7
   11638:	mov	lr, #5
   1163c:	mov	r5, #2
   11640:	mov	r0, #6
   11644:	mov	r3, #4
   11648:	mov	r4, #0
   1164c:	mov	r1, #3
   11650:	mov	r2, r1
   11654:	str	ip, [sp, #16]
   11658:	str	ip, [sp]
   1165c:	str	lr, [sp, #24]
   11660:	str	lr, [sp, #20]
   11664:	mov	r6, #1
   11668:	str	r0, [sp, #44]	; 0x2c
   1166c:	str	r3, [sp, #40]	; 0x28
   11670:	str	r3, [sp, #32]
   11674:	str	r3, [sp, #28]
   11678:	str	r5, [sp, #12]
   1167c:	mov	r3, r5
   11680:	str	r5, [sp, #4]
   11684:	str	r1, [sp, #68]	; 0x44
   11688:	str	r0, [sp, #64]	; 0x40
   1168c:	mov	r1, #22
   11690:	str	r0, [sp, #60]	; 0x3c
   11694:	str	r4, [sp, #36]	; 0x24
   11698:	str	r4, [sp, #8]
   1169c:	mov	r0, #8
   116a0:	str	ip, [sp, #56]	; 0x38
   116a4:	str	r4, [sp, #72]	; 0x48
   116a8:	str	r6, [sp, #76]	; 0x4c
   116ac:	str	r6, [sp, #52]	; 0x34
   116b0:	str	r6, [sp, #48]	; 0x30
   116b4:	bl	10d18 <_g@@Base>
   116b8:	mov	r7, r0
   116bc:	ldr	r0, [pc, #292]	; 117e8 <teste_v_antecessores@@Base+0x1bc>
   116c0:	bl	10ad4 <printf@plt>
   116c4:	mov	r1, r5
   116c8:	mov	r0, r7
   116cc:	bl	11df8 <v_antecessores@@Base>
   116d0:	subs	r5, r0, #0
   116d4:	beq	117bc <teste_v_antecessores@@Base+0x190>
   116d8:	ldr	r3, [r5]
   116dc:	cmp	r3, #3
   116e0:	moveq	r6, r4
   116e4:	beq	116f0 <teste_v_antecessores@@Base+0xc4>
   116e8:	ldr	r0, [pc, #252]	; 117ec <teste_v_antecessores@@Base+0x1c0>
   116ec:	bl	10ad4 <printf@plt>
   116f0:	mov	r1, #0
   116f4:	mov	r0, r5
   116f8:	bl	10de0 <_f@@Base>
   116fc:	cmp	r0, #0
   11700:	bne	11760 <teste_v_antecessores@@Base+0x134>
   11704:	ldr	r0, [pc, #228]	; 117f0 <teste_v_antecessores@@Base+0x1c4>
   11708:	add	r6, r6, #1
   1170c:	bl	10ad4 <printf@plt>
   11710:	mov	r0, r5
   11714:	bl	11fc8 <vetor_apaga@@Base>
   11718:	mov	r1, #7
   1171c:	mov	r0, r7
   11720:	bl	11df8 <v_antecessores@@Base>
   11724:	subs	r5, r0, #0
   11728:	beq	117d0 <teste_v_antecessores@@Base+0x1a4>
   1172c:	ldr	r3, [r5]
   11730:	cmp	r3, #0
   11734:	bne	1178c <teste_v_antecessores@@Base+0x160>
   11738:	bl	11fc8 <vetor_apaga@@Base>
   1173c:	mov	r0, r7
   11740:	bl	11b48 <grafo_apaga@@Base>
   11744:	cmp	r6, #0
   11748:	bne	117a8 <teste_v_antecessores@@Base+0x17c>
   1174c:	ldr	r0, [pc, #160]	; 117f4 <teste_v_antecessores@@Base+0x1c8>
   11750:	bl	10af8 <puts@plt>
   11754:	mov	r0, r6
   11758:	add	sp, sp, #84	; 0x54
   1175c:	pop	{r4, r5, r6, r7, pc}
   11760:	mov	r1, #3
   11764:	mov	r0, r5
   11768:	bl	10de0 <_f@@Base>
   1176c:	cmp	r0, #0
   11770:	beq	11704 <teste_v_antecessores@@Base+0xd8>
   11774:	mov	r1, #7
   11778:	mov	r0, r5
   1177c:	bl	10de0 <_f@@Base>
   11780:	cmp	r0, #0
   11784:	beq	11704 <teste_v_antecessores@@Base+0xd8>
   11788:	b	11710 <teste_v_antecessores@@Base+0xe4>
   1178c:	ldr	r0, [pc, #100]	; 117f8 <teste_v_antecessores@@Base+0x1cc>
   11790:	bl	10ad4 <printf@plt>
   11794:	mov	r0, r5
   11798:	bl	11fc8 <vetor_apaga@@Base>
   1179c:	mov	r0, r7
   117a0:	add	r6, r6, #1
   117a4:	bl	11b48 <grafo_apaga@@Base>
   117a8:	mov	r0, #10
   117ac:	bl	10b34 <putchar@plt>
   117b0:	mov	r0, r6
   117b4:	add	sp, sp, #84	; 0x54
   117b8:	pop	{r4, r5, r6, r7, pc}
   117bc:	ldr	r0, [pc, #56]	; 117fc <teste_v_antecessores@@Base+0x1d0>
   117c0:	bl	10ad4 <printf@plt>
   117c4:	mov	r0, #10
   117c8:	bl	10b34 <putchar@plt>
   117cc:	b	11754 <teste_v_antecessores@@Base+0x128>
   117d0:	ldr	r0, [pc, #40]	; 11800 <teste_v_antecessores@@Base+0x1d4>
   117d4:	bl	10ad4 <printf@plt>
   117d8:	mov	r0, #10
   117dc:	add	r6, r6, #1
   117e0:	bl	10b34 <putchar@plt>
   117e4:	b	11754 <teste_v_antecessores@@Base+0x128>
   117e8:	andeq	r2, r1, r0, ror #14
   117ec:	andeq	r2, r1, r4, lsr #15
   117f0:	ldrdeq	r2, [r1], -r4
   117f4:	andeq	r2, r1, ip, lsr #6
   117f8:	andeq	r2, r1, r4, asr #16
   117fc:	andeq	r2, r1, r4, ror r7
   11800:	andeq	r2, r1, r4, lsl #16

00011804 <teste_v_grau@@Base>:
   11804:	push	{r4, r5, r6, lr}
   11808:	sub	sp, sp, #80	; 0x50
   1180c:	mov	ip, #7
   11810:	mov	r3, #2
   11814:	mov	r6, #0
   11818:	mov	r2, #4
   1181c:	mov	r0, #3
   11820:	mov	r1, #5
   11824:	mov	lr, #6
   11828:	mov	r4, #1
   1182c:	str	ip, [sp, #16]
   11830:	str	ip, [sp]
   11834:	str	r3, [sp, #12]
   11838:	str	r3, [sp, #4]
   1183c:	str	r2, [sp, #40]	; 0x28
   11840:	str	r2, [sp, #32]
   11844:	str	r2, [sp, #28]
   11848:	str	r1, [sp, #24]
   1184c:	mov	r2, r0
   11850:	str	r1, [sp, #20]
   11854:	str	r0, [sp, #68]	; 0x44
   11858:	mov	r1, #22
   1185c:	str	r6, [sp, #36]	; 0x24
   11860:	str	r6, [sp, #8]
   11864:	mov	r0, #8
   11868:	str	lr, [sp, #44]	; 0x2c
   1186c:	str	lr, [sp, #64]	; 0x40
   11870:	str	lr, [sp, #60]	; 0x3c
   11874:	str	ip, [sp, #56]	; 0x38
   11878:	str	r4, [sp, #76]	; 0x4c
   1187c:	str	r4, [sp, #52]	; 0x34
   11880:	str	r4, [sp, #48]	; 0x30
   11884:	str	r6, [sp, #72]	; 0x48
   11888:	bl	10d18 <_g@@Base>
   1188c:	mov	r5, r0
   11890:	ldr	r0, [pc, #192]	; 11958 <teste_v_grau@@Base+0x154>
   11894:	bl	10ad4 <printf@plt>
   11898:	mov	r0, r5
   1189c:	mvn	r1, #3
   118a0:	bl	11eb0 <v_grau@@Base>
   118a4:	cmn	r0, #1
   118a8:	moveq	r4, r6
   118ac:	beq	118b8 <teste_v_grau@@Base+0xb4>
   118b0:	ldr	r0, [pc, #164]	; 1195c <teste_v_grau@@Base+0x158>
   118b4:	bl	10ad4 <printf@plt>
   118b8:	mov	r1, #7
   118bc:	mov	r0, r5
   118c0:	bl	11eb0 <v_grau@@Base>
   118c4:	cmp	r0, #3
   118c8:	beq	11920 <teste_v_grau@@Base+0x11c>
   118cc:	ldr	r0, [pc, #140]	; 11960 <teste_v_grau@@Base+0x15c>
   118d0:	bl	10ad4 <printf@plt>
   118d4:	mov	r1, #5
   118d8:	mov	r0, r5
   118dc:	bl	11eb0 <v_grau@@Base>
   118e0:	add	r4, r4, #1
   118e4:	cmp	r0, #2
   118e8:	beq	11914 <teste_v_grau@@Base+0x110>
   118ec:	ldr	r0, [pc, #112]	; 11964 <teste_v_grau@@Base+0x160>
   118f0:	bl	10ad4 <printf@plt>
   118f4:	mov	r0, r5
   118f8:	add	r4, r4, #1
   118fc:	bl	11b48 <grafo_apaga@@Base>
   11900:	mov	r0, #10
   11904:	bl	10b34 <putchar@plt>
   11908:	mov	r0, r4
   1190c:	add	sp, sp, #80	; 0x50
   11910:	pop	{r4, r5, r6, pc}
   11914:	mov	r0, r5
   11918:	bl	11b48 <grafo_apaga@@Base>
   1191c:	b	11900 <teste_v_grau@@Base+0xfc>
   11920:	mov	r1, #5
   11924:	mov	r0, r5
   11928:	bl	11eb0 <v_grau@@Base>
   1192c:	cmp	r0, #2
   11930:	bne	118ec <teste_v_grau@@Base+0xe8>
   11934:	mov	r0, r5
   11938:	bl	11b48 <grafo_apaga@@Base>
   1193c:	cmp	r4, #0
   11940:	bne	11900 <teste_v_grau@@Base+0xfc>
   11944:	ldr	r0, [pc, #28]	; 11968 <teste_v_grau@@Base+0x164>
   11948:	bl	10af8 <puts@plt>
   1194c:	mov	r0, r4
   11950:	add	sp, sp, #80	; 0x50
   11954:	pop	{r4, r5, r6, pc}
   11958:	andeq	r2, r1, r4, ror r8
   1195c:	andeq	r2, r1, r0, lsl #17
   11960:			; <UNDEFINED> instruction: 0x000128b0
   11964:	andeq	r2, r1, r0, ror #17
   11968:	andeq	r2, r1, ip, lsr #6

0001196c <teste_v_celebridade@@Base>:
   1196c:	push	{r4, r5, r6, r7, lr}
   11970:	sub	sp, sp, #116	; 0x74
   11974:	mov	r4, #2
   11978:	mov	lr, #3
   1197c:	mov	r6, #7
   11980:	mov	r0, #4
   11984:	mov	ip, #0
   11988:	mov	r1, #5
   1198c:	mov	r5, #1
   11990:	mov	r3, r4
   11994:	mov	r2, lr
   11998:	str	ip, [sp, #8]
   1199c:	str	r6, [sp]
   119a0:	str	ip, [sp, #72]	; 0x48
   119a4:	str	ip, [sp, #36]	; 0x24
   119a8:	str	r1, [sp, #104]	; 0x68
   119ac:	mov	ip, #6
   119b0:	str	r1, [sp, #24]
   119b4:	str	r1, [sp, #20]
   119b8:	str	r0, [sp, #96]	; 0x60
   119bc:	mov	r1, #30
   119c0:	str	r0, [sp, #40]	; 0x28
   119c4:	str	r0, [sp, #32]
   119c8:	str	r0, [sp, #28]
   119cc:	str	r4, [sp, #4]
   119d0:	mov	r0, #8
   119d4:	str	lr, [sp, #68]	; 0x44
   119d8:	str	ip, [sp, #88]	; 0x58
   119dc:	str	ip, [sp, #64]	; 0x40
   119e0:	str	ip, [sp, #60]	; 0x3c
   119e4:	str	ip, [sp, #44]	; 0x2c
   119e8:	str	r6, [sp, #56]	; 0x38
   119ec:	str	r6, [sp, #16]
   119f0:	str	r4, [sp, #12]
   119f4:	str	r4, [sp, #108]	; 0x6c
   119f8:	str	r4, [sp, #100]	; 0x64
   119fc:	str	r4, [sp, #92]	; 0x5c
   11a00:	str	r4, [sp, #84]	; 0x54
   11a04:	str	r5, [sp, #80]	; 0x50
   11a08:	str	r5, [sp, #76]	; 0x4c
   11a0c:	str	r5, [sp, #52]	; 0x34
   11a10:	str	r5, [sp, #48]	; 0x30
   11a14:	bl	10d18 <_g@@Base>
   11a18:	mov	r7, r0
   11a1c:	ldr	r0, [pc, #148]	; 11ab8 <teste_v_celebridade@@Base+0x14c>
   11a20:	bl	10ad4 <printf@plt>
   11a24:	mov	r1, r6
   11a28:	mov	r0, r7
   11a2c:	bl	11f14 <v_celebridade@@Base>
   11a30:	subs	r6, r0, #0
   11a34:	bne	11a90 <teste_v_celebridade@@Base+0x124>
   11a38:	mov	r1, r4
   11a3c:	mov	r0, r7
   11a40:	bl	11f14 <v_celebridade@@Base>
   11a44:	cmp	r0, #1
   11a48:	movne	r6, r5
   11a4c:	beq	11a74 <teste_v_celebridade@@Base+0x108>
   11a50:	ldr	r0, [pc, #100]	; 11abc <teste_v_celebridade@@Base+0x150>
   11a54:	bl	10ad4 <printf@plt>
   11a58:	mov	r0, r7
   11a5c:	bl	11b48 <grafo_apaga@@Base>
   11a60:	mov	r0, #10
   11a64:	bl	10b34 <putchar@plt>
   11a68:	mov	r0, r6
   11a6c:	add	sp, sp, #116	; 0x74
   11a70:	pop	{r4, r5, r6, r7, pc}
   11a74:	mov	r0, r7
   11a78:	bl	11b48 <grafo_apaga@@Base>
   11a7c:	ldr	r0, [pc, #60]	; 11ac0 <teste_v_celebridade@@Base+0x154>
   11a80:	bl	10af8 <puts@plt>
   11a84:	mov	r0, r6
   11a88:	add	sp, sp, #116	; 0x74
   11a8c:	pop	{r4, r5, r6, r7, pc}
   11a90:	ldr	r0, [pc, #44]	; 11ac4 <teste_v_celebridade@@Base+0x158>
   11a94:	bl	10ad4 <printf@plt>
   11a98:	mov	r1, r4
   11a9c:	mov	r0, r7
   11aa0:	bl	11f14 <v_celebridade@@Base>
   11aa4:	cmp	r0, r5
   11aa8:	mov	r6, r0
   11aac:	movne	r6, r4
   11ab0:	beq	11a58 <teste_v_celebridade@@Base+0xec>
   11ab4:	b	11a50 <teste_v_celebridade@@Base+0xe4>
   11ab8:	andeq	r2, r1, r0, lsl r9
   11abc:	andeq	r2, r1, ip, asr r9
   11ac0:	andeq	r2, r1, ip, lsr #6
   11ac4:	andeq	r2, r1, r4, lsr #18

00011ac8 <cria_elem@@Base>:
   11ac8:	push	{r4, lr}
   11acc:	mov	r4, r0
   11ad0:	mov	r0, #8
   11ad4:	bl	10b04 <malloc@plt>
   11ad8:	cmp	r0, #0
   11adc:	movne	r3, #0
   11ae0:	strne	r4, [r0]
   11ae4:	strne	r3, [r0, #4]
   11ae8:	pop	{r4, pc}

00011aec <grafo_novo@@Base>:
   11aec:	push	{r4, r5, r6, lr}
   11af0:	subs	r5, r0, #0
   11af4:	ble	11b40 <grafo_novo@@Base+0x54>
   11af8:	mov	r0, #8
   11afc:	bl	10b04 <malloc@plt>
   11b00:	lsl	r4, r5, #3
   11b04:	mov	r6, r0
   11b08:	str	r5, [r0]
   11b0c:	mov	r0, r4
   11b10:	bl	10b04 <malloc@plt>
   11b14:	mov	r2, #0
   11b18:	mov	r3, r0
   11b1c:	add	r1, r0, r4
   11b20:	str	r0, [r6, #4]
   11b24:	str	r2, [r3]
   11b28:	str	r2, [r3, #4]
   11b2c:	add	r3, r3, #8
   11b30:	cmp	r3, r1
   11b34:	bne	11b24 <grafo_novo@@Base+0x38>
   11b38:	mov	r0, r6
   11b3c:	pop	{r4, r5, r6, pc}
   11b40:	mov	r6, #0
   11b44:	b	11b38 <grafo_novo@@Base+0x4c>

00011b48 <grafo_apaga@@Base>:
   11b48:	push	{r4, r5, r6, lr}
   11b4c:	subs	r6, r0, #0
   11b50:	popeq	{r4, r5, r6, pc}
   11b54:	ldm	r6, {r2, r3}
   11b58:	cmp	r2, #0
   11b5c:	ble	11b94 <grafo_apaga@@Base+0x4c>
   11b60:	mov	r5, #0
   11b64:	add	r1, r3, r5, lsl #3
   11b68:	ldr	r0, [r1, #4]
   11b6c:	cmp	r0, #0
   11b70:	beq	11b88 <grafo_apaga@@Base+0x40>
   11b74:	ldr	r4, [r0, #4]
   11b78:	bl	10ae0 <free@plt>
   11b7c:	subs	r0, r4, #0
   11b80:	bne	11b74 <grafo_apaga@@Base+0x2c>
   11b84:	ldm	r6, {r2, r3}
   11b88:	add	r5, r5, #1
   11b8c:	cmp	r2, r5
   11b90:	bgt	11b64 <grafo_apaga@@Base+0x1c>
   11b94:	mov	r0, r3
   11b98:	bl	10ae0 <free@plt>
   11b9c:	mov	r0, r6
   11ba0:	pop	{r4, r5, r6, lr}
   11ba4:	b	10ae0 <free@plt>

00011ba8 <grafo_aresta@@Base>:
   11ba8:	cmp	r0, #0
   11bac:	beq	11c08 <grafo_aresta@@Base+0x60>
   11bb0:	ldr	r3, [r0]
   11bb4:	cmp	r3, r1
   11bb8:	blt	11c08 <grafo_aresta@@Base+0x60>
   11bbc:	cmp	r3, r2
   11bc0:	blt	11bfc <grafo_aresta@@Base+0x54>
   11bc4:	ldr	r3, [r0, #4]
   11bc8:	add	r1, r3, r1, lsl #3
   11bcc:	ldr	r0, [r1, #4]
   11bd0:	cmp	r0, #0
   11bd4:	bne	11be8 <grafo_aresta@@Base+0x40>
   11bd8:	bx	lr
   11bdc:	ldr	r0, [r0, #4]
   11be0:	cmp	r0, #0
   11be4:	beq	11c04 <grafo_aresta@@Base+0x5c>
   11be8:	ldr	r3, [r0]
   11bec:	cmp	r2, r3
   11bf0:	bne	11bdc <grafo_aresta@@Base+0x34>
   11bf4:	mov	r0, #1
   11bf8:	bx	lr
   11bfc:	mov	r0, #0
   11c00:	bx	lr
   11c04:	bx	lr
   11c08:	mvn	r0, #0
   11c0c:	bx	lr

00011c10 <grafo_adiciona@@Base>:
   11c10:	cmp	r0, #0
   11c14:	beq	11cb4 <grafo_adiciona@@Base+0xa4>
   11c18:	ldr	r3, [r0]
   11c1c:	cmp	r3, r2
   11c20:	cmpge	r3, r1
   11c24:	blt	11cb4 <grafo_adiciona@@Base+0xa4>
   11c28:	push	{r4, r5, r6, r7, r8, lr}
   11c2c:	ldr	r7, [r0, #4]
   11c30:	add	r5, r7, r1, lsl #3
   11c34:	ldr	r6, [r5, #4]
   11c38:	cmp	r6, #0
   11c3c:	beq	11c6c <grafo_adiciona@@Base+0x5c>
   11c40:	ldr	r1, [r6]
   11c44:	cmp	r2, r1
   11c48:	beq	11cac <grafo_adiciona@@Base+0x9c>
   11c4c:	mov	r3, r6
   11c50:	b	11c60 <grafo_adiciona@@Base+0x50>
   11c54:	ldr	r0, [r3]
   11c58:	cmp	r2, r0
   11c5c:	beq	11cac <grafo_adiciona@@Base+0x9c>
   11c60:	ldr	r3, [r3, #4]
   11c64:	cmp	r3, #0
   11c68:	bne	11c54 <grafo_adiciona@@Base+0x44>
   11c6c:	mov	r0, #8
   11c70:	mov	r4, r2
   11c74:	bl	10b04 <malloc@plt>
   11c78:	subs	r3, r0, #0
   11c7c:	beq	11ca0 <grafo_adiciona@@Base+0x90>
   11c80:	ldr	r2, [r7]
   11c84:	mov	r0, #1
   11c88:	add	r2, r2, #1
   11c8c:	str	r4, [r3]
   11c90:	str	r3, [r5, #4]
   11c94:	str	r6, [r3, #4]
   11c98:	str	r2, [r7]
   11c9c:	pop	{r4, r5, r6, r7, r8, pc}
   11ca0:	str	r3, [r5, #4]
   11ca4:	str	r6, [r3, #4]
   11ca8:	udf	#0
   11cac:	mov	r0, #0
   11cb0:	pop	{r4, r5, r6, r7, r8, pc}
   11cb4:	mvn	r0, #0
   11cb8:	bx	lr

00011cbc <grafo_remove@@Base>:
   11cbc:	cmp	r0, #0
   11cc0:	beq	11d70 <grafo_remove@@Base+0xb4>
   11cc4:	cmp	r1, r2
   11cc8:	ldr	ip, [r0]
   11ccc:	movge	r3, r1
   11cd0:	movlt	r3, r2
   11cd4:	cmp	ip, r3
   11cd8:	blt	11d70 <grafo_remove@@Base+0xb4>
   11cdc:	ldr	ip, [r0, #4]
   11ce0:	add	r1, ip, r1, lsl #3
   11ce4:	ldr	r3, [r1, #4]
   11ce8:	cmp	r3, #0
   11cec:	beq	11d44 <grafo_remove@@Base+0x88>
   11cf0:	ldr	r0, [r3]
   11cf4:	push	{r4, lr}
   11cf8:	cmp	r2, r0
   11cfc:	bne	11d14 <grafo_remove@@Base+0x58>
   11d00:	b	11d4c <grafo_remove@@Base+0x90>
   11d04:	ldr	r1, [r0]
   11d08:	cmp	r2, r1
   11d0c:	beq	11d24 <grafo_remove@@Base+0x68>
   11d10:	mov	r3, r0
   11d14:	ldr	r0, [r3, #4]
   11d18:	cmp	r0, #0
   11d1c:	bne	11d04 <grafo_remove@@Base+0x48>
   11d20:	pop	{r4, pc}
   11d24:	ldr	r2, [ip]
   11d28:	ldr	r1, [r0, #4]
   11d2c:	sub	r2, r2, #1
   11d30:	str	r1, [r3, #4]
   11d34:	str	r2, [ip]
   11d38:	bl	10ae0 <free@plt>
   11d3c:	mov	r0, #1
   11d40:	pop	{r4, pc}
   11d44:	mov	r0, r3
   11d48:	bx	lr
   11d4c:	ldr	r2, [ip]
   11d50:	ldr	r0, [r3, #4]
   11d54:	sub	r2, r2, #1
   11d58:	str	r0, [r1, #4]
   11d5c:	mov	r0, r3
   11d60:	str	r2, [ip]
   11d64:	bl	10ae0 <free@plt>
   11d68:	mov	r0, #1
   11d6c:	pop	{r4, pc}
   11d70:	mvn	r0, #0
   11d74:	bx	lr

00011d78 <v_sucessores@@Base>:
   11d78:	push	{r4, r5, r6, lr}
   11d7c:	subs	r5, r0, #0
   11d80:	beq	11df0 <v_sucessores@@Base+0x78>
   11d84:	ldr	r3, [r5]
   11d88:	cmp	r1, #0
   11d8c:	cmpge	r3, r1
   11d90:	movgt	r3, #1
   11d94:	movle	r3, #0
   11d98:	ble	11de8 <v_sucessores@@Base+0x70>
   11d9c:	mov	r4, r1
   11da0:	bl	11fa4 <vetor_novo@@Base>
   11da4:	ldr	r1, [r5, #4]
   11da8:	add	r1, r1, r4, lsl #3
   11dac:	ldr	r4, [r1, #4]
   11db0:	cmp	r4, #0
   11db4:	mov	r6, r0
   11db8:	beq	11de0 <v_sucessores@@Base+0x68>
   11dbc:	mov	r5, #0
   11dc0:	mov	r2, r5
   11dc4:	ldr	r1, [r4]
   11dc8:	mov	r0, r6
   11dcc:	bl	1205c <vetor_insere@@Base>
   11dd0:	ldr	r4, [r4, #4]
   11dd4:	add	r5, r5, #1
   11dd8:	cmp	r4, #0
   11ddc:	bne	11dc0 <v_sucessores@@Base+0x48>
   11de0:	mov	r0, r6
   11de4:	pop	{r4, r5, r6, pc}
   11de8:	mov	r6, r3
   11dec:	b	11de0 <v_sucessores@@Base+0x68>
   11df0:	mov	r6, r5
   11df4:	b	11de0 <v_sucessores@@Base+0x68>

00011df8 <v_antecessores@@Base>:
   11df8:	push	{r4, r5, r6, r7, r8, lr}
   11dfc:	subs	r6, r0, #0
   11e00:	beq	11ea8 <v_antecessores@@Base+0xb0>
   11e04:	ldr	r3, [r6]
   11e08:	cmp	r1, #0
   11e0c:	cmpge	r3, r1
   11e10:	movgt	r3, #1
   11e14:	movle	r3, #0
   11e18:	ble	11e9c <v_antecessores@@Base+0xa4>
   11e1c:	mov	r4, r1
   11e20:	bl	11fa4 <vetor_novo@@Base>
   11e24:	ldr	r1, [r6]
   11e28:	cmp	r1, #0
   11e2c:	mov	r7, r0
   11e30:	ble	11e6c <v_antecessores@@Base+0x74>
   11e34:	mov	r8, #0
   11e38:	mov	r5, r8
   11e3c:	ldr	r3, [r6, #4]
   11e40:	add	r3, r3, r5, lsl #3
   11e44:	b	11e54 <v_antecessores@@Base+0x5c>
   11e48:	ldr	r2, [r3]
   11e4c:	cmp	r4, r2
   11e50:	beq	11e74 <v_antecessores@@Base+0x7c>
   11e54:	ldr	r3, [r3, #4]
   11e58:	cmp	r3, #0
   11e5c:	bne	11e48 <v_antecessores@@Base+0x50>
   11e60:	add	r5, r5, #1
   11e64:	cmp	r1, r5
   11e68:	bgt	11e3c <v_antecessores@@Base+0x44>
   11e6c:	mov	r0, r7
   11e70:	pop	{r4, r5, r6, r7, r8, pc}
   11e74:	mov	r1, r5
   11e78:	mov	r2, r8
   11e7c:	mov	r0, r7
   11e80:	bl	1205c <vetor_insere@@Base>
   11e84:	ldr	r1, [r6]
   11e88:	add	r5, r5, #1
   11e8c:	cmp	r1, r5
   11e90:	add	r8, r8, #1
   11e94:	bgt	11e3c <v_antecessores@@Base+0x44>
   11e98:	b	11e6c <v_antecessores@@Base+0x74>
   11e9c:	mov	r7, r3
   11ea0:	mov	r0, r7
   11ea4:	pop	{r4, r5, r6, r7, r8, pc}
   11ea8:	mov	r7, r6
   11eac:	b	11e6c <v_antecessores@@Base+0x74>

00011eb0 <v_grau@@Base>:
   11eb0:	subs	r2, r1, #0
   11eb4:	push	{r4, r5, r6, lr}
   11eb8:	blt	11f0c <v_grau@@Base+0x5c>
   11ebc:	mov	r5, r2
   11ec0:	mov	r4, r0
   11ec4:	bl	11df8 <v_antecessores@@Base>
   11ec8:	mov	r1, r5
   11ecc:	mov	r6, r0
   11ed0:	mov	r0, r4
   11ed4:	bl	11d78 <v_sucessores@@Base>
   11ed8:	mov	r5, r0
   11edc:	mov	r0, r6
   11ee0:	bl	1201c <vetor_tamanho@@Base>
   11ee4:	mov	r4, r0
   11ee8:	mov	r0, r5
   11eec:	bl	1201c <vetor_tamanho@@Base>
   11ef0:	add	r4, r4, r0
   11ef4:	mov	r0, r6
   11ef8:	bl	11fc8 <vetor_apaga@@Base>
   11efc:	mov	r0, r5
   11f00:	bl	11fc8 <vetor_apaga@@Base>
   11f04:	mov	r0, r4
   11f08:	pop	{r4, r5, r6, pc}
   11f0c:	mvn	r4, #0
   11f10:	b	11f04 <v_grau@@Base+0x54>

00011f14 <v_celebridade@@Base>:
   11f14:	subs	r3, r0, #0
   11f18:	beq	11f9c <v_celebridade@@Base+0x88>
   11f1c:	ldr	r0, [r3, #4]
   11f20:	ldr	ip, [r0, r1, lsl #3]
   11f24:	cmp	ip, #0
   11f28:	bne	11f8c <v_celebridade@@Base+0x78>
   11f2c:	push	{r4, lr}
   11f30:	ldr	r4, [r3]
   11f34:	cmp	r4, #0
   11f38:	ble	11f94 <v_celebridade@@Base+0x80>
   11f3c:	add	lr, r0, r4, lsl #3
   11f40:	ldr	r3, [r0, #4]
   11f44:	cmp	r3, #0
   11f48:	bne	11f5c <v_celebridade@@Base+0x48>
   11f4c:	b	11f6c <v_celebridade@@Base+0x58>
   11f50:	ldr	r3, [r3, #4]
   11f54:	cmp	r3, #0
   11f58:	beq	11f6c <v_celebridade@@Base+0x58>
   11f5c:	ldr	r2, [r3]
   11f60:	cmp	r1, r2
   11f64:	bne	11f50 <v_celebridade@@Base+0x3c>
   11f68:	add	ip, ip, #1
   11f6c:	add	r0, r0, #8
   11f70:	cmp	lr, r0
   11f74:	bne	11f40 <v_celebridade@@Base+0x2c>
   11f78:	add	ip, ip, #1
   11f7c:	sub	r0, r4, ip
   11f80:	clz	r0, r0
   11f84:	lsr	r0, r0, #5
   11f88:	pop	{r4, pc}
   11f8c:	mov	r0, #0
   11f90:	bx	lr
   11f94:	mov	ip, #1
   11f98:	b	11f7c <v_celebridade@@Base+0x68>
   11f9c:	mvn	r0, #0
   11fa0:	bx	lr

00011fa4 <vetor_novo@@Base>:
   11fa4:	push	{r4, lr}
   11fa8:	mov	r0, #12
   11fac:	bl	10b04 <malloc@plt>
   11fb0:	cmp	r0, #0
   11fb4:	movne	r3, #0
   11fb8:	strne	r3, [r0]
   11fbc:	strne	r3, [r0, #4]
   11fc0:	strne	r3, [r0, #8]
   11fc4:	pop	{r4, pc}

00011fc8 <vetor_apaga@@Base>:
   11fc8:	push	{r4, lr}
   11fcc:	subs	r4, r0, #0
   11fd0:	popeq	{r4, pc}
   11fd4:	ldr	r0, [r4, #8]
   11fd8:	bl	10ae0 <free@plt>
   11fdc:	mov	r0, r4
   11fe0:	pop	{r4, lr}
   11fe4:	b	10ae0 <free@plt>

00011fe8 <vetor_atribui@@Base>:
   11fe8:	clz	r3, r0
   11fec:	lsr	r3, r3, #5
   11ff0:	orrs	r3, r3, r1, lsr #31
   11ff4:	bne	12014 <vetor_atribui@@Base+0x2c>
   11ff8:	ldr	r3, [r0]
   11ffc:	cmp	r1, r3
   12000:	bge	12014 <vetor_atribui@@Base+0x2c>
   12004:	ldr	r3, [r0, #8]
   12008:	mov	r0, r1
   1200c:	str	r2, [r3, r1, lsl #2]
   12010:	bx	lr
   12014:	mvn	r0, #0
   12018:	bx	lr

0001201c <vetor_tamanho@@Base>:
   1201c:	cmp	r0, #0
   12020:	ldrne	r0, [r0]
   12024:	mvneq	r0, #0
   12028:	bx	lr

0001202c <vetor_elemento@@Base>:
   1202c:	clz	r3, r0
   12030:	lsr	r3, r3, #5
   12034:	orrs	r3, r3, r1, lsr #31
   12038:	bne	12054 <vetor_elemento@@Base+0x28>
   1203c:	ldr	r3, [r0]
   12040:	cmp	r1, r3
   12044:	bge	12054 <vetor_elemento@@Base+0x28>
   12048:	ldr	r3, [r0, #8]
   1204c:	ldr	r0, [r3, r1, lsl #2]
   12050:	bx	lr
   12054:	mov	r0, #-2147483648	; 0x80000000
   12058:	bx	lr

0001205c <vetor_insere@@Base>:
   1205c:	cmn	r2, #1
   12060:	movge	r3, #0
   12064:	movlt	r3, #1
   12068:	cmp	r0, #0
   1206c:	orreq	r3, r3, #1
   12070:	cmp	r3, #0
   12074:	push	{r4, r5, r6, lr}
   12078:	bne	12114 <vetor_insere@@Base+0xb8>
   1207c:	ldr	lr, [r0]
   12080:	cmp	r2, lr
   12084:	bgt	12114 <vetor_insere@@Base+0xb8>
   12088:	ldr	r3, [r0, #4]
   1208c:	cmn	r2, #1
   12090:	movne	r4, r2
   12094:	moveq	r4, lr
   12098:	cmp	lr, r3
   1209c:	mov	r5, r0
   120a0:	mov	r6, r1
   120a4:	beq	120e0 <vetor_insere@@Base+0x84>
   120a8:	ldr	r0, [r0, #8]
   120ac:	cmp	r4, lr
   120b0:	addlt	r3, r0, lr, lsl #2
   120b4:	addlt	ip, r0, r4, lsl #2
   120b8:	bge	120cc <vetor_insere@@Base+0x70>
   120bc:	ldr	r2, [r3, #-4]
   120c0:	str	r2, [r3], #-4
   120c4:	cmp	ip, r3
   120c8:	bne	120bc <vetor_insere@@Base+0x60>
   120cc:	add	lr, lr, #1
   120d0:	str	r6, [r0, r4, lsl #2]
   120d4:	str	lr, [r5]
   120d8:	mov	r0, r4
   120dc:	pop	{r4, r5, r6, pc}
   120e0:	cmp	lr, #0
   120e4:	moveq	r3, #1
   120e8:	lslne	r1, lr, #3
   120ec:	lslne	lr, lr, #1
   120f0:	streq	r3, [r0, #4]
   120f4:	strne	lr, [r0, #4]
   120f8:	moveq	r1, #4
   120fc:	ldr	r0, [r0, #8]
   12100:	bl	10aec <realloc@plt>
   12104:	cmp	r0, #0
   12108:	str	r0, [r5, #8]
   1210c:	ldrne	lr, [r5]
   12110:	bne	120ac <vetor_insere@@Base+0x50>
   12114:	mvn	r4, #0
   12118:	b	120d8 <vetor_insere@@Base+0x7c>

0001211c <vetor_remove@@Base>:
   1211c:	clz	r3, r0
   12120:	lsr	r3, r3, #5
   12124:	orrs	r3, r3, r1, lsr #31
   12128:	bne	12174 <vetor_remove@@Base+0x58>
   1212c:	ldr	ip, [r0]
   12130:	cmp	r1, ip
   12134:	bge	12174 <vetor_remove@@Base+0x58>
   12138:	add	r3, r1, #1
   1213c:	cmp	ip, r3
   12140:	ble	12164 <vetor_remove@@Base+0x48>
   12144:	ldr	r3, [r0, #8]
   12148:	sub	r2, ip, #-1073741823	; 0xc0000001
   1214c:	add	r1, r3, r1, lsl #2
   12150:	add	r2, r3, r2, lsl #2
   12154:	ldr	r3, [r1, #4]
   12158:	str	r3, [r1], #4
   1215c:	cmp	r1, r2
   12160:	bne	12154 <vetor_remove@@Base+0x38>
   12164:	sub	ip, ip, #1
   12168:	str	ip, [r0]
   1216c:	mov	r0, #0
   12170:	bx	lr
   12174:	mvn	r0, #0
   12178:	bx	lr

0001217c <vetor_pesquisa@@Base>:
   1217c:	cmp	r0, #0
   12180:	beq	121c4 <vetor_pesquisa@@Base+0x48>
   12184:	ldr	ip, [r0]
   12188:	cmp	ip, #0
   1218c:	ble	121c4 <vetor_pesquisa@@Base+0x48>
   12190:	ldr	r3, [r0, #8]
   12194:	ldr	r2, [r3]
   12198:	cmp	r1, r2
   1219c:	beq	121cc <vetor_pesquisa@@Base+0x50>
   121a0:	add	r3, r3, #4
   121a4:	mov	r0, #0
   121a8:	b	121b8 <vetor_pesquisa@@Base+0x3c>
   121ac:	ldr	r2, [r3], #4
   121b0:	cmp	r2, r1
   121b4:	bxeq	lr
   121b8:	add	r0, r0, #1
   121bc:	cmp	r0, ip
   121c0:	bne	121ac <vetor_pesquisa@@Base+0x30>
   121c4:	mvn	r0, #0
   121c8:	bx	lr
   121cc:	mov	r0, #0
   121d0:	bx	lr

000121d4 <vetor_ordena@@Base>:
   121d4:	cmp	r0, #0
   121d8:	beq	12244 <vetor_ordena@@Base+0x70>
   121dc:	ldr	r3, [r0]
   121e0:	cmp	r3, #1
   121e4:	ble	1223c <vetor_ordena@@Base+0x68>
   121e8:	push	{r4, r5, lr}
   121ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   121f0:	ldr	r5, [r0, #8]
   121f4:	mov	lr, #1
   121f8:	mov	ip, r5
   121fc:	add	r4, r5, r3, lsl #2
   12200:	ldr	r0, [ip, #4]!
   12204:	mov	r3, lr
   12208:	mov	r2, ip
   1220c:	ldr	r1, [r2, #-4]
   12210:	cmp	r0, r1
   12214:	bge	12224 <vetor_ordena@@Base+0x50>
   12218:	subs	r3, r3, #1
   1221c:	str	r1, [r2], #-4
   12220:	bne	1220c <vetor_ordena@@Base+0x38>
   12224:	cmp	ip, r4
   12228:	str	r0, [r5, r3, lsl #2]
   1222c:	add	lr, lr, #1
   12230:	bne	12200 <vetor_ordena@@Base+0x2c>
   12234:	mov	r0, #0
   12238:	pop	{r4, r5, pc}
   1223c:	mov	r0, #0
   12240:	bx	lr
   12244:	mvn	r0, #0
   12248:	bx	lr

0001224c <__libc_csu_init@@Base>:
   1224c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12250:	mov	r7, r0
   12254:	ldr	r6, [pc, #72]	; 122a4 <__libc_csu_init@@Base+0x58>
   12258:	ldr	r5, [pc, #72]	; 122a8 <__libc_csu_init@@Base+0x5c>
   1225c:	add	r6, pc, r6
   12260:	add	r5, pc, r5
   12264:	sub	r6, r6, r5
   12268:	mov	r8, r1
   1226c:	mov	r9, r2
   12270:	bl	10aa8 <calloc@plt-0x20>
   12274:	asrs	r6, r6, #2
   12278:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1227c:	mov	r4, #0
   12280:	add	r4, r4, #1
   12284:	ldr	r3, [r5], #4
   12288:	mov	r2, r9
   1228c:	mov	r1, r8
   12290:	mov	r0, r7
   12294:	blx	r3
   12298:	cmp	r6, r4
   1229c:	bne	12280 <__libc_csu_init@@Base+0x34>
   122a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122a4:	andeq	r0, r1, ip, lsr #25
   122a8:	andeq	r0, r1, r4, lsr #25

000122ac <__libc_csu_fini@@Base>:
   122ac:	bx	lr

Disassembly of section .fini:

000122b0 <.fini>:
   122b0:	push	{r3, lr}
   122b4:	pop	{r3, pc}
