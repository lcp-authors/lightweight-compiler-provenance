
../compcert-repos/prog2/CMakeFiles/0.8.dir/Aula00_Conceitos_base/08.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <lerpontuacoes>:
   0:	push	{r4, r5, r6, r7, lr}
   4:	sub	sp, sp, #12
   8:	mov	r5, r0
   c:	mov	r4, r1
  10:	ldr	r0, [pc, #72]	; 60 <lerpontuacoes+0x60>
  14:	add	r1, sp, #4
  18:	bl	0 <__isoc99_scanf>
  1c:	ldr	r0, [sp, #4]
  20:	cmp	r0, #0
  24:	ble	58 <lerpontuacoes+0x58>
  28:	ldr	r7, [pc, #52]	; 64 <lerpontuacoes+0x64>
  2c:	mov	r6, #0
  30:	mov	r2, r4
  34:	mov	r1, r5
  38:	mov	r0, r7
  3c:	bl	0 <__isoc99_scanf>
  40:	ldr	r0, [sp, #4]
  44:	add	r6, r6, #1
  48:	cmp	r0, r6
  4c:	add	r4, r4, #4
  50:	add	r5, r5, #50	; 0x32
  54:	bgt	30 <lerpontuacoes+0x30>
  58:	add	sp, sp, #12
  5c:	pop	{r4, r5, r6, r7, pc}
  60:	.word	0x00000000
  64:	.word	0x00000004

00000068 <primeiroUltimo>:
  68:	cmp	r2, #1
  6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  70:	ldr	r9, [r1]
  74:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
  78:	mov	r8, #50	; 0x32
  7c:	mov	r7, r3
  80:	add	r6, r1, #4
  84:	mla	r8, r8, r2, r0
  88:	add	r4, r0, #50	; 0x32
  8c:	mov	sl, r9
  90:	b	ac <primeiroUltimo+0x44>
  94:	cmp	r5, sl
  98:	add	r6, r6, #4
  9c:	blt	d8 <primeiroUltimo+0x70>
  a0:	add	r4, r4, #50	; 0x32
  a4:	cmp	r4, r8
  a8:	beq	f4 <primeiroUltimo+0x8c>
  ac:	ldr	r5, [r6]
  b0:	cmp	r5, r9
  b4:	ble	94 <primeiroUltimo+0x2c>
  b8:	mov	r1, r4
  bc:	mov	r0, r7
  c0:	bl	0 <strcpy>
  c4:	mov	r9, r5
  c8:	ldr	r5, [r6]
  cc:	add	r6, r6, #4
  d0:	cmp	r5, sl
  d4:	bge	a0 <primeiroUltimo+0x38>
  d8:	mov	r1, r4
  dc:	ldr	r0, [sp, #32]
  e0:	add	r4, r4, #50	; 0x32
  e4:	bl	0 <strcpy>
  e8:	cmp	r4, r8
  ec:	mov	sl, r5
  f0:	bne	ac <primeiroUltimo+0x44>
  f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, lr}
   4:	sub	sp, sp, #1200	; 0x4b0
   8:	sub	sp, sp, #4
   c:	add	r3, sp, #120	; 0x78
  10:	mov	r0, r3
  14:	mov	r2, #80	; 0x50
  18:	mov	r1, #0
  1c:	str	r3, [sp, #12]
  20:	mov	r5, #50	; 0x32
  24:	bl	0 <memset>
  28:	add	r0, sp, #200	; 0xc8
  2c:	mov	r2, #1000	; 0x3e8
  30:	mov	r1, #0
  34:	bl	0 <memset>
  38:	add	r4, sp, #68	; 0x44
  3c:	mov	r2, r5
  40:	add	r0, sp, #16
  44:	mov	r1, #0
  48:	bl	0 <memset>
  4c:	mov	r2, r5
  50:	mov	r0, r4
  54:	mov	r1, #0
  58:	bl	0 <memset>
  5c:	ldr	r1, [sp, #12]
  60:	add	r0, sp, #200	; 0xc8
  64:	bl	0 <main>
  68:	add	r3, sp, #16
  6c:	ldr	r1, [sp, #12]
  70:	str	r4, [sp]
  74:	mov	r5, r0
  78:	mov	r2, r5
  7c:	add	r0, sp, #200	; 0xc8
  80:	bl	68 <main+0x68>
  84:	mov	r1, r5
  88:	ldr	r0, [pc, #40]	; b8 <main+0xb8>
  8c:	bl	0 <printf>
  90:	add	r1, sp, #16
  94:	ldr	r0, [pc, #32]	; bc <main+0xbc>
  98:	bl	0 <printf>
  9c:	mov	r1, r4
  a0:	ldr	r0, [pc, #24]	; c0 <main+0xc0>
  a4:	bl	0 <printf>
  a8:	mov	r0, #0
  ac:	add	sp, sp, #1200	; 0x4b0
  b0:	add	sp, sp, #4
  b4:	pop	{r4, r5, pc}
  b8:	.word	0x0000000c
  bc:	.word	0x00000028
  c0:	.word	0x00000038
