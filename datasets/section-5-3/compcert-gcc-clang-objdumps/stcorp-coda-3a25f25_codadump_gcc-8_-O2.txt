
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

0001217c <.init>:
   1217c:	push	{r3, lr}
   12180:	bl	139dc <_start@@Base+0x3c>
   12184:	pop	{r3, pc}

Disassembly of section .plt:

00012188 <coda_cursor_get_byte_size@plt-0x14>:
   12188:	push	{lr}		; (str lr, [sp, #-4]!)
   1218c:	ldr	lr, [pc, #4]	; 12198 <coda_cursor_get_byte_size@plt-0x4>
   12190:	add	lr, pc, lr
   12194:	ldr	pc, [lr, #8]!
   12198:	andeq	r9, r1, r8, ror #28

0001219c <coda_cursor_get_byte_size@plt>:
   1219c:	add	ip, pc, #0, 12
   121a0:	add	ip, ip, #102400	; 0x19000
   121a4:	ldr	pc, [ip, #3688]!	; 0xe68

000121a8 <coda_type_get_special_type_name@plt>:
   121a8:	add	ip, pc, #0, 12
   121ac:	add	ip, ip, #102400	; 0x19000
   121b0:	ldr	pc, [ip, #3680]!	; 0xe60

000121b4 <coda_set_option_use_fast_size_expressions@plt>:
   121b4:	add	ip, pc, #0, 12
   121b8:	add	ip, ip, #102400	; 0x19000
   121bc:	ldr	pc, [ip, #3672]!	; 0xe58

000121c0 <raise@plt>:
   121c0:	add	ip, pc, #0, 12
   121c4:	add	ip, ip, #102400	; 0x19000
   121c8:	ldr	pc, [ip, #3664]!	; 0xe50

000121cc <coda_get_option_bypass_special_types@plt>:
   121cc:	add	ip, pc, #0, 12
   121d0:	add	ip, ip, #102400	; 0x19000
   121d4:	ldr	pc, [ip, #3656]!	; 0xe48

000121d8 <coda_set_option_perform_boundary_checks@plt>:
   121d8:	add	ip, pc, #0, 12
   121dc:	add	ip, ip, #102400	; 0x19000
   121e0:	ldr	pc, [ip, #3648]!	; 0xe40

000121e4 <strcmp@plt>:
   121e4:	add	ip, pc, #0, 12
   121e8:	add	ip, ip, #102400	; 0x19000
   121ec:	ldr	pc, [ip, #3640]!	; 0xe38

000121f0 <strtol@plt>:
   121f0:	add	ip, pc, #0, 12
   121f4:	add	ip, ip, #102400	; 0x19000
   121f8:	ldr	pc, [ip, #3632]!	; 0xe30

000121fc <coda_type_get_record_field_hidden_status@plt>:
   121fc:	add	ip, pc, #0, 12
   12200:	add	ip, ip, #102400	; 0x19000
   12204:	ldr	pc, [ip, #3624]!	; 0xe28

00012208 <printf@plt>:
   12208:	add	ip, pc, #0, 12
   1220c:	add	ip, ip, #102400	; 0x19000
   12210:	ldr	pc, [ip, #3616]!	; 0xe20

00012214 <coda_cursor_get_record_field_available_status@plt>:
   12214:	add	ip, pc, #0, 12
   12218:	add	ip, ip, #102400	; 0x19000
   1221c:	ldr	pc, [ip, #3608]!	; 0xe18

00012220 <fopen@plt>:
   12220:	add	ip, pc, #0, 12
   12224:	add	ip, ip, #102400	; 0x19000
   12228:	ldr	pc, [ip, #3600]!	; 0xe10

0001222c <coda_set_error@plt>:
   1222c:	add	ip, pc, #0, 12
   12230:	add	ip, ip, #102400	; 0x19000
   12234:	ldr	pc, [ip, #3592]!	; 0xe08

00012238 <coda_open@plt>:
   12238:	add	ip, pc, #0, 12
   1223c:	add	ip, ip, #102400	; 0x19000
   12240:	ldr	pc, [ip, #3584]!	; 0xe00

00012244 <fflush@plt>:
   12244:	add	ip, pc, #0, 12
   12248:	add	ip, ip, #102400	; 0x19000
   1224c:	ldr	pc, [ip, #3576]!	; 0xdf8

00012250 <coda_time_double_to_string@plt>:
   12250:	add	ip, pc, #0, 12
   12254:	add	ip, ip, #102400	; 0x19000
   12258:	ldr	pc, [ip, #3568]!	; 0xdf0

0001225c <coda_cursor_get_num_elements@plt>:
   1225c:	add	ip, pc, #0, 12
   12260:	add	ip, ip, #102400	; 0x19000
   12264:	ldr	pc, [ip, #3560]!	; 0xde8

00012268 <coda_str64u@plt>:
   12268:	add	ip, pc, #0, 12
   1226c:	add	ip, ip, #102400	; 0x19000
   12270:	ldr	pc, [ip, #3552]!	; 0xde0

00012274 <free@plt>:
   12274:	add	ip, pc, #0, 12
   12278:	add	ip, ip, #102400	; 0x19000
   1227c:	ldr	pc, [ip, #3544]!	; 0xdd8

00012280 <coda_set_option_use_mmap@plt>:
   12280:	add	ip, pc, #0, 12
   12284:	add	ip, ip, #102400	; 0x19000
   12288:	ldr	pc, [ip, #3536]!	; 0xdd0

0001228c <coda_set_definition_path_conditional@plt>:
   1228c:	add	ip, pc, #0, 12
   12290:	add	ip, ip, #102400	; 0x19000
   12294:	ldr	pc, [ip, #3528]!	; 0xdc8

00012298 <coda_cursor_read_uint32@plt>:
   12298:	add	ip, pc, #0, 12
   1229c:	add	ip, ip, #102400	; 0x19000
   122a0:	ldr	pc, [ip, #3520]!	; 0xdc0

000122a4 <coda_set_option_bypass_special_types@plt>:
   122a4:	add	ip, pc, #0, 12
   122a8:	add	ip, ip, #102400	; 0x19000
   122ac:	ldr	pc, [ip, #3512]!	; 0xdb8

000122b0 <coda_type_get_record_field_type@plt>:
   122b0:	add	ip, pc, #0, 12
   122b4:	add	ip, ip, #102400	; 0x19000
   122b8:	ldr	pc, [ip, #3504]!	; 0xdb0

000122bc <coda_cursor_get_type@plt>:
   122bc:	add	ip, pc, #0, 12
   122c0:	add	ip, ip, #102400	; 0x19000
   122c4:	ldr	pc, [ip, #3496]!	; 0xda8

000122c8 <memcpy@plt>:
   122c8:	add	ip, pc, #0, 12
   122cc:	add	ip, ip, #102400	; 0x19000
   122d0:	ldr	pc, [ip, #3488]!	; 0xda0

000122d4 <coda_isInf@plt>:
   122d4:	add	ip, pc, #0, 12
   122d8:	add	ip, ip, #102400	; 0x19000
   122dc:	ldr	pc, [ip, #3480]!	; 0xd98

000122e0 <coda_type_get_bit_size@plt>:
   122e0:	add	ip, pc, #0, 12
   122e4:	add	ip, ip, #102400	; 0x19000
   122e8:	ldr	pc, [ip, #3472]!	; 0xd90

000122ec <coda_type_get_record_field_available_status@plt>:
   122ec:	add	ip, pc, #0, 12
   122f0:	add	ip, ip, #102400	; 0x19000
   122f4:	ldr	pc, [ip, #3464]!	; 0xd88

000122f8 <coda_cursor_has_attributes@plt>:
   122f8:	add	ip, pc, #0, 12
   122fc:	add	ip, ip, #102400	; 0x19000
   12300:	ldr	pc, [ip, #3456]!	; 0xd80

00012304 <coda_cursor_get_type_class@plt>:
   12304:	add	ip, pc, #0, 12
   12308:	add	ip, ip, #102400	; 0x19000
   1230c:	ldr	pc, [ip, #3448]!	; 0xd78

00012310 <coda_set_definition_path@plt>:
   12310:	add	ip, pc, #0, 12
   12314:	add	ip, ip, #102400	; 0x19000
   12318:	ldr	pc, [ip, #3440]!	; 0xd70

0001231c <coda_get_product_format@plt>:
   1231c:	add	ip, pc, #0, 12
   12320:	add	ip, ip, #102400	; 0x19000
   12324:	ldr	pc, [ip, #3432]!	; 0xd68

00012328 <coda_type_get_unit@plt>:
   12328:	add	ip, pc, #0, 12
   1232c:	add	ip, ip, #102400	; 0x19000
   12330:	ldr	pc, [ip, #3424]!	; 0xd60

00012334 <coda_type_get_description@plt>:
   12334:	add	ip, pc, #0, 12
   12338:	add	ip, ip, #102400	; 0x19000
   1233c:	ldr	pc, [ip, #3416]!	; 0xd58

00012340 <coda_cursor_get_special_type@plt>:
   12340:	add	ip, pc, #0, 12
   12344:	add	ip, ip, #102400	; 0x19000
   12348:	ldr	pc, [ip, #3408]!	; 0xd50

0001234c <coda_cursor_goto_first_array_element@plt>:
   1234c:	add	ip, pc, #0, 12
   12350:	add	ip, ip, #102400	; 0x19000
   12354:	ldr	pc, [ip, #3400]!	; 0xd48

00012358 <fwrite@plt>:
   12358:	add	ip, pc, #0, 12
   1235c:	add	ip, ip, #102400	; 0x19000
   12360:	ldr	pc, [ip, #3392]!	; 0xd40

00012364 <coda_cursor_set_product@plt>:
   12364:	add	ip, pc, #0, 12
   12368:	add	ip, ip, #102400	; 0x19000
   1236c:	ldr	pc, [ip, #3384]!	; 0xd38

00012370 <coda_cursor_goto_first_record_field@plt>:
   12370:	add	ip, pc, #0, 12
   12374:	add	ip, ip, #102400	; 0x19000
   12378:	ldr	pc, [ip, #3376]!	; 0xd30

0001237c <coda_cursor_goto_record_field_by_index@plt>:
   1237c:	add	ip, pc, #0, 12
   12380:	add	ip, ip, #102400	; 0x19000
   12384:	ldr	pc, [ip, #3368]!	; 0xd28

00012388 <coda_done@plt>:
   12388:	add	ip, pc, #0, 12
   1238c:	add	ip, ip, #102400	; 0x19000
   12390:	ldr	pc, [ip, #3360]!	; 0xd20

00012394 <puts@plt>:
   12394:	add	ip, pc, #0, 12
   12398:	add	ip, ip, #102400	; 0x19000
   1239c:	ldr	pc, [ip, #3352]!	; 0xd18

000123a0 <coda_cursor_get_read_type@plt>:
   123a0:	add	ip, pc, #0, 12
   123a4:	add	ip, ip, #102400	; 0x19000
   123a8:	ldr	pc, [ip, #3344]!	; 0xd10

000123ac <malloc@plt>:
   123ac:	add	ip, pc, #0, 12
   123b0:	add	ip, ip, #102400	; 0x19000
   123b4:	ldr	pc, [ip, #3336]!	; 0xd08

000123b8 <__libc_start_main@plt>:
   123b8:	add	ip, pc, #0, 12
   123bc:	add	ip, ip, #102400	; 0x19000
   123c0:	ldr	pc, [ip, #3328]!	; 0xd00

000123c4 <__gmon_start__@plt>:
   123c4:	add	ip, pc, #0, 12
   123c8:	add	ip, ip, #102400	; 0x19000
   123cc:	ldr	pc, [ip, #3320]!	; 0xcf8

000123d0 <coda_cursor_read_string@plt>:
   123d0:	add	ip, pc, #0, 12
   123d4:	add	ip, ip, #102400	; 0x19000
   123d8:	ldr	pc, [ip, #3312]!	; 0xcf0

000123dc <coda_cursor_goto_parent@plt>:
   123dc:	add	ip, pc, #0, 12
   123e0:	add	ip, ip, #102400	; 0x19000
   123e4:	ldr	pc, [ip, #3304]!	; 0xce8

000123e8 <coda_type_get_num_record_fields@plt>:
   123e8:	add	ip, pc, #0, 12
   123ec:	add	ip, ip, #102400	; 0x19000
   123f0:	ldr	pc, [ip, #3296]!	; 0xce0

000123f4 <exit@plt>:
   123f4:	add	ip, pc, #0, 12
   123f8:	add	ip, ip, #102400	; 0x19000
   123fc:	ldr	pc, [ip, #3288]!	; 0xcd8

00012400 <coda_type_get_read_type@plt>:
   12400:	add	ip, pc, #0, 12
   12404:	add	ip, ip, #102400	; 0x19000
   12408:	ldr	pc, [ip, #3280]!	; 0xcd0

0001240c <coda_cursor_get_string_length@plt>:
   1240c:	add	ip, pc, #0, 12
   12410:	add	ip, ip, #102400	; 0x19000
   12414:	ldr	pc, [ip, #3272]!	; 0xcc8

00012418 <coda_cursor_read_uint64@plt>:
   12418:	add	ip, pc, #0, 12
   1241c:	add	ip, ip, #102400	; 0x19000
   12420:	ldr	pc, [ip, #3264]!	; 0xcc0

00012424 <coda_cursor_read_double@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #102400	; 0x19000
   1242c:	ldr	pc, [ip, #3256]!	; 0xcb8

00012430 <coda_isNaN@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #102400	; 0x19000
   12438:	ldr	pc, [ip, #3248]!	; 0xcb0

0001243c <fprintf@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #102400	; 0x19000
   12444:	ldr	pc, [ip, #3240]!	; 0xca8

00012448 <coda_cursor_goto_next_array_element@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #102400	; 0x19000
   12450:	ldr	pc, [ip, #3232]!	; 0xca0

00012454 <coda_open_as@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #102400	; 0x19000
   1245c:	ldr	pc, [ip, #3224]!	; 0xc98

00012460 <coda_init@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #102400	; 0x19000
   12468:	ldr	pc, [ip, #3216]!	; 0xc90

0001246c <coda_set_option_perform_conversions@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #102400	; 0x19000
   12474:	ldr	pc, [ip, #3208]!	; 0xc88

00012478 <coda_cursor_goto_attributes@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #102400	; 0x19000
   12480:	ldr	pc, [ip, #3200]!	; 0xc80

00012484 <coda_cursor_read_char@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #102400	; 0x19000
   1248c:	ldr	pc, [ip, #3192]!	; 0xc78

00012490 <memset@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #102400	; 0x19000
   12498:	ldr	pc, [ip, #3184]!	; 0xc70

0001249c <putchar@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #102400	; 0x19000
   124a4:	ldr	pc, [ip, #3176]!	; 0xc68

000124a8 <strncpy@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #102400	; 0x19000
   124b0:	ldr	pc, [ip, #3168]!	; 0xc60

000124b4 <coda_type_get_special_type@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #102400	; 0x19000
   124bc:	ldr	pc, [ip, #3160]!	; 0xc58

000124c0 <coda_type_get_record_union_status@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #102400	; 0x19000
   124c8:	ldr	pc, [ip, #3152]!	; 0xc50

000124cc <coda_cursor_read_complex_double_split@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #102400	; 0x19000
   124d4:	ldr	pc, [ip, #3144]!	; 0xc48

000124d8 <coda_type_get_array_base_type@plt>:
   124d8:	add	ip, pc, #0, 12
   124dc:	add	ip, ip, #102400	; 0x19000
   124e0:	ldr	pc, [ip, #3136]!	; 0xc40

000124e4 <fclose@plt>:
   124e4:	add	ip, pc, #0, 12
   124e8:	add	ip, ip, #102400	; 0x19000
   124ec:	ldr	pc, [ip, #3128]!	; 0xc38

000124f0 <coda_type_get_string_length@plt>:
   124f0:	add	ip, pc, #0, 12
   124f4:	add	ip, ip, #102400	; 0x19000
   124f8:	ldr	pc, [ip, #3120]!	; 0xc30

000124fc <coda_type_get_native_type_name@plt>:
   124fc:	add	ip, pc, #0, 12
   12500:	add	ip, ip, #102400	; 0x19000
   12504:	ldr	pc, [ip, #3112]!	; 0xc28

00012508 <coda_cursor_get_array_dim@plt>:
   12508:	add	ip, pc, #0, 12
   1250c:	add	ip, ip, #102400	; 0x19000
   12510:	ldr	pc, [ip, #3104]!	; 0xc20

00012514 <coda_cursor_has_ascii_content@plt>:
   12514:	add	ip, pc, #0, 12
   12518:	add	ip, ip, #102400	; 0x19000
   1251c:	ldr	pc, [ip, #3096]!	; 0xc18

00012520 <coda_close@plt>:
   12520:	add	ip, pc, #0, 12
   12524:	add	ip, ip, #102400	; 0x19000
   12528:	ldr	pc, [ip, #3088]!	; 0xc10

0001252c <coda_cursor_read_int64@plt>:
   1252c:	add	ip, pc, #0, 12
   12530:	add	ip, ip, #102400	; 0x19000
   12534:	ldr	pc, [ip, #3080]!	; 0xc08

00012538 <vfprintf@plt>:
   12538:	add	ip, pc, #0, 12
   1253c:	add	ip, ip, #102400	; 0x19000
   12540:	ldr	pc, [ip, #3072]!	; 0xc00

00012544 <coda_cursor_goto@plt>:
   12544:	add	ip, pc, #0, 12
   12548:	add	ip, ip, #102400	; 0x19000
   1254c:	ldr	pc, [ip, #3064]!	; 0xbf8

00012550 <coda_type_get_record_field_index_from_name@plt>:
   12550:	add	ip, pc, #0, 12
   12554:	add	ip, ip, #102400	; 0x19000
   12558:	ldr	pc, [ip, #3056]!	; 0xbf0

0001255c <coda_cursor_read_complex_double_pair@plt>:
   1255c:	add	ip, pc, #0, 12
   12560:	add	ip, ip, #102400	; 0x19000
   12564:	ldr	pc, [ip, #3048]!	; 0xbe8

00012568 <coda_cursor_goto_next_record_field@plt>:
   12568:	add	ip, pc, #0, 12
   1256c:	add	ip, ip, #102400	; 0x19000
   12570:	ldr	pc, [ip, #3040]!	; 0xbe0

00012574 <fputc@plt>:
   12574:	add	ip, pc, #0, 12
   12578:	add	ip, ip, #102400	; 0x19000
   1257c:	ldr	pc, [ip, #3032]!	; 0xbd8

00012580 <coda_type_get_array_dim@plt>:
   12580:	add	ip, pc, #0, 12
   12584:	add	ip, ip, #102400	; 0x19000
   12588:	ldr	pc, [ip, #3024]!	; 0xbd0

0001258c <coda_cursor_get_bit_size@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #102400	; 0x19000
   12594:	ldr	pc, [ip, #3016]!	; 0xbc8

00012598 <coda_errno_to_string@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #102400	; 0x19000
   125a0:	ldr	pc, [ip, #3008]!	; 0xbc0

000125a4 <coda_cursor_use_base_type_of_special_type@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #102400	; 0x19000
   125ac:	ldr	pc, [ip, #3000]!	; 0xbb8

000125b0 <coda_cursor_get_available_union_field_index@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #102400	; 0x19000
   125b8:	ldr	pc, [ip, #2992]!	; 0xbb0

000125bc <coda_cursor_read_int32@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #102400	; 0x19000
   125c4:	ldr	pc, [ip, #2984]!	; 0xba8

000125c8 <coda_cursor_get_file_bit_offset@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #102400	; 0x19000
   125d0:	ldr	pc, [ip, #2976]!	; 0xba0

000125d4 <coda_get_libcoda_version@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #102400	; 0x19000
   125dc:	ldr	pc, [ip, #2968]!	; 0xb98

000125e0 <coda_get_errno@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #102400	; 0x19000
   125e8:	ldr	pc, [ip, #2960]!	; 0xb90

000125ec <coda_type_get_special_base_type@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #102400	; 0x19000
   125f4:	ldr	pc, [ip, #2952]!	; 0xb88

000125f8 <coda_type_get_record_field_name@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #102400	; 0x19000
   12600:	ldr	pc, [ip, #2944]!	; 0xb80

00012604 <fputs@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #102400	; 0x19000
   1260c:	ldr	pc, [ip, #2936]!	; 0xb78

00012610 <abort@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #102400	; 0x19000
   12618:	ldr	pc, [ip, #2928]!	; 0xb70

0001261c <coda_cursor_read_bits@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2920]!	; 0xb68

00012628 <coda_str64@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2912]!	; 0xb60

00012634 <__assert_fail@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2904]!	; 0xb58

00012640 <coda_type_get_class@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2896]!	; 0xb50

Disassembly of section .text:

0001264c <main@@Base>:
   1264c:	cmp	r0, #1
   12650:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12654:	strd	r6, [sp, #8]
   12658:	strd	r8, [sp, #16]
   1265c:	strd	sl, [sp, #24]
   12660:	str	lr, [sp, #32]
   12664:	sub	sp, sp, #60	; 0x3c
   12668:	beq	12690 <main@@Base+0x44>
   1266c:	mov	r5, r1
   12670:	mov	r4, r0
   12674:	ldr	r6, [r5, #4]
   12678:	movw	r1, #46404	; 0xb544
   1267c:	movt	r1, #1
   12680:	mov	r0, r6
   12684:	bl	121e4 <strcmp@plt>
   12688:	cmp	r0, #0
   1268c:	bne	1269c <main@@Base+0x50>
   12690:	bl	1953c <print_yaml_data@@Base+0xec>
   12694:	mov	r0, #0
   12698:	bl	123f4 <exit@plt>
   1269c:	movw	r1, #46408	; 0xb548
   126a0:	movt	r1, #1
   126a4:	mov	r0, r6
   126a8:	bl	121e4 <strcmp@plt>
   126ac:	cmp	r0, #0
   126b0:	beq	12690 <main@@Base+0x44>
   126b4:	movw	r1, #46416	; 0xb550
   126b8:	movt	r1, #1
   126bc:	mov	r0, r6
   126c0:	bl	121e4 <strcmp@plt>
   126c4:	cmp	r0, #0
   126c8:	beq	12908 <main@@Base+0x2bc>
   126cc:	movw	r1, #46420	; 0xb554
   126d0:	movt	r1, #1
   126d4:	mov	r0, r6
   126d8:	bl	121e4 <strcmp@plt>
   126dc:	cmp	r0, #0
   126e0:	beq	12908 <main@@Base+0x2bc>
   126e4:	cmp	r4, #2
   126e8:	ble	12714 <main@@Base+0xc8>
   126ec:	mov	r0, r6
   126f0:	movw	r1, #46504	; 0xb5a8
   126f4:	movt	r1, #1
   126f8:	bl	121e4 <strcmp@plt>
   126fc:	cmp	r0, #0
   12700:	bne	12714 <main@@Base+0xc8>
   12704:	ldr	r0, [r5, #8]
   12708:	mov	r8, #3
   1270c:	bl	12310 <coda_set_definition_path@plt>
   12710:	b	12734 <main@@Base+0xe8>
   12714:	movw	r2, #46508	; 0xb5ac
   12718:	movt	r2, #1
   1271c:	ldr	r0, [r5]
   12720:	mov	r1, #0
   12724:	bl	1228c <coda_set_definition_path_conditional@plt>
   12728:	cmp	r0, #0
   1272c:	moveq	r8, #1
   12730:	bne	1396c <main@@Base+0x1320>
   12734:	ldr	sl, [r5, r8, lsl #2]
   12738:	movw	r1, #46536	; 0xb5c8
   1273c:	movt	r1, #1
   12740:	lsl	r6, r8, #2
   12744:	mov	r0, sl
   12748:	bl	121e4 <strcmp@plt>
   1274c:	subs	fp, r0, #0
   12750:	beq	12938 <main@@Base+0x2ec>
   12754:	movw	r1, #46648	; 0xb638
   12758:	movt	r1, #1
   1275c:	mov	r0, sl
   12760:	bl	121e4 <strcmp@plt>
   12764:	subs	fp, r0, #0
   12768:	beq	12d40 <main@@Base+0x6f4>
   1276c:	movw	r1, #46760	; 0xb6a8
   12770:	movt	r1, #1
   12774:	mov	r0, sl
   12778:	bl	121e4 <strcmp@plt>
   1277c:	subs	r9, r0, #0
   12780:	beq	13154 <main@@Base+0xb08>
   12784:	movw	r1, #46784	; 0xb6c0
   12788:	movt	r1, #1
   1278c:	mov	r0, sl
   12790:	bl	121e4 <strcmp@plt>
   12794:	subs	r7, r0, #0
   12798:	beq	13460 <main@@Base+0xe14>
   1279c:	mov	r0, sl
   127a0:	movw	r1, #45132	; 0xb04c
   127a4:	movt	r1, #1
   127a8:	bl	121e4 <strcmp@plt>
   127ac:	cmp	r0, #0
   127b0:	str	r0, [sp, #28]
   127b4:	bne	138a0 <main@@Base+0x1254>
   127b8:	movw	r3, #49596	; 0xc1bc
   127bc:	movt	r3, #2
   127c0:	str	r0, [sp, #16]
   127c4:	movw	r9, #53424	; 0xd0b0
   127c8:	movt	r9, #2
   127cc:	ldr	r1, [r3]
   127d0:	mov	r2, #5
   127d4:	movw	r3, #53420	; 0xd0ac
   127d8:	movt	r3, #2
   127dc:	str	r9, [sp, #12]
   127e0:	movw	ip, #53400	; 0xd098
   127e4:	movt	ip, #2
   127e8:	movw	lr, #49648	; 0xc1f0
   127ec:	movt	lr, #2
   127f0:	str	r2, [r3]
   127f4:	movw	r7, #49632	; 0xc1e0
   127f8:	movt	r7, #2
   127fc:	ldr	r3, [sp, #12]
   12800:	movw	r2, #46668	; 0xb64c
   12804:	movt	r2, #1
   12808:	add	r6, r6, #4
   1280c:	str	r1, [ip]
   12810:	add	r8, r8, #1
   12814:	add	r5, r5, r6
   12818:	str	r0, [r7]
   1281c:	movw	fp, #45304	; 0xb0f8
   12820:	movt	fp, #1
   12824:	stm	sp, {r7, lr}
   12828:	movw	r9, #46576	; 0xb5f0
   1282c:	movt	r9, #1
   12830:	str	r0, [lr]
   12834:	sub	r4, r4, r8
   12838:	mov	r6, r0
   1283c:	str	r0, [r3]
   12840:	mov	sl, #1
   12844:	str	r2, [sp, #8]
   12848:	str	ip, [sp, #20]
   1284c:	str	r0, [sp, #24]
   12850:	b	128dc <main@@Base+0x290>
   12854:	mov	r1, fp
   12858:	mov	r0, r7
   1285c:	bl	121e4 <strcmp@plt>
   12860:	cmp	r0, #0
   12864:	beq	12900 <main@@Base+0x2b4>
   12868:	mov	r0, r7
   1286c:	ldr	r1, [sp, #8]
   12870:	bl	121e4 <strcmp@plt>
   12874:	cmp	r0, #0
   12878:	beq	12ae0 <main@@Base+0x494>
   1287c:	movw	r1, #46672	; 0xb650
   12880:	movt	r1, #1
   12884:	mov	r0, r7
   12888:	bl	121e4 <strcmp@plt>
   1288c:	cmp	r0, #0
   12890:	beq	12ae0 <main@@Base+0x494>
   12894:	movw	r1, #46772	; 0xb6b4
   12898:	movt	r1, #1
   1289c:	mov	r0, r7
   128a0:	bl	121e4 <strcmp@plt>
   128a4:	cmp	r0, #0
   128a8:	bne	12c48 <main@@Base+0x5fc>
   128ac:	add	r3, r6, #1
   128b0:	cmp	r4, r3
   128b4:	ble	12b10 <main@@Base+0x4c4>
   128b8:	add	r2, r5, r8
   128bc:	ldr	r2, [r2, #4]
   128c0:	ldrb	r1, [r2]
   128c4:	cmp	r1, #45	; 0x2d
   128c8:	beq	12b10 <main@@Base+0x4c4>
   128cc:	mov	r6, r3
   128d0:	ldr	r3, [sp, #12]
   128d4:	str	r2, [r3]
   128d8:	add	r6, r6, #1
   128dc:	cmp	r4, r6
   128e0:	ble	1307c <main@@Base+0xa30>
   128e4:	ldr	r7, [r5, r6, lsl #2]
   128e8:	mov	r1, r9
   128ec:	lsl	r8, r6, #2
   128f0:	mov	r0, r7
   128f4:	bl	121e4 <strcmp@plt>
   128f8:	cmp	r0, #0
   128fc:	bne	12854 <main@@Base+0x208>
   12900:	mov	sl, r0
   12904:	b	128d8 <main@@Base+0x28c>
   12908:	bl	125d4 <coda_get_libcoda_version@plt>
   1290c:	mov	r1, r0
   12910:	movw	r0, #46432	; 0xb560
   12914:	movt	r0, #1
   12918:	bl	12208 <printf@plt>
   1291c:	movw	r0, #46456	; 0xb578
   12920:	movt	r0, #1
   12924:	bl	12394 <puts@plt>
   12928:	mov	r0, #10
   1292c:	bl	1249c <putchar@plt>
   12930:	mov	r0, #0
   12934:	bl	123f4 <exit@plt>
   12938:	movw	r1, #53420	; 0xd0ac
   1293c:	movt	r1, #2
   12940:	movw	r2, #49624	; 0xc1d8
   12944:	movt	r2, #2
   12948:	str	fp, [r1]
   1294c:	mov	r1, #1
   12950:	add	r8, r8, #1
   12954:	sub	r4, r4, r8
   12958:	movw	r3, #49648	; 0xc1f0
   1295c:	movt	r3, #2
   12960:	movw	r9, #49644	; 0xc1ec
   12964:	movt	r9, #2
   12968:	movw	r0, #49628	; 0xc1dc
   1296c:	movt	r0, #2
   12970:	movw	ip, #53408	; 0xd0a0
   12974:	movt	ip, #2
   12978:	movw	lr, #49640	; 0xc1e8
   1297c:	movt	lr, #2
   12980:	str	r1, [r2]
   12984:	movw	r2, #53412	; 0xd0a4
   12988:	movt	r2, #2
   1298c:	add	r6, r6, #4
   12990:	str	fp, [r0]
   12994:	cmp	r4, #0
   12998:	add	r5, r5, r6
   1299c:	str	fp, [r3]
   129a0:	str	fp, [r9]
   129a4:	str	fp, [ip]
   129a8:	str	fp, [lr]
   129ac:	str	fp, [r2]
   129b0:	str	r3, [sp, #4]
   129b4:	str	ip, [sp, #12]
   129b8:	str	lr, [sp, #24]
   129bc:	str	r2, [sp, #28]
   129c0:	str	r0, [sp, #32]
   129c4:	str	fp, [r3, #664]	; 0x298
   129c8:	ble	138a0 <main@@Base+0x1254>
   129cc:	movw	r3, #46576	; 0xb5f0
   129d0:	movt	r3, #1
   129d4:	movw	r7, #46572	; 0xb5ec
   129d8:	movt	r7, #1
   129dc:	movw	sl, #42568	; 0xa648
   129e0:	movt	sl, #1
   129e4:	str	r3, [sp]
   129e8:	str	r1, [sp, #8]
   129ec:	str	r1, [sp, #16]
   129f0:	b	12ab0 <main@@Base+0x464>
   129f4:	mov	r1, sl
   129f8:	mov	r0, r6
   129fc:	bl	121e4 <strcmp@plt>
   12a00:	cmp	r0, #0
   12a04:	beq	12acc <main@@Base+0x480>
   12a08:	mov	r0, r6
   12a0c:	ldr	r1, [sp]
   12a10:	bl	121e4 <strcmp@plt>
   12a14:	cmp	r0, #0
   12a18:	beq	12ad8 <main@@Base+0x48c>
   12a1c:	movw	r1, #42652	; 0xa69c
   12a20:	movt	r1, #1
   12a24:	mov	r0, r6
   12a28:	bl	121e4 <strcmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	beq	12ad8 <main@@Base+0x48c>
   12a34:	movw	r1, #46580	; 0xb5f4
   12a38:	movt	r1, #1
   12a3c:	mov	r0, r6
   12a40:	bl	121e4 <strcmp@plt>
   12a44:	cmp	r0, #0
   12a48:	beq	12a64 <main@@Base+0x418>
   12a4c:	movw	r1, #46584	; 0xb5f8
   12a50:	movt	r1, #1
   12a54:	mov	r0, r6
   12a58:	bl	121e4 <strcmp@plt>
   12a5c:	cmp	r0, #0
   12a60:	bne	12ba8 <main@@Base+0x55c>
   12a64:	add	r2, fp, #1
   12a68:	cmp	r4, r2
   12a6c:	str	r2, [sp, #20]
   12a70:	ble	12ba8 <main@@Base+0x55c>
   12a74:	add	r8, r5, r8
   12a78:	ldr	r0, [r8, #4]
   12a7c:	ldrb	r1, [r0]
   12a80:	cmp	r1, #45	; 0x2d
   12a84:	beq	12ba8 <main@@Base+0x55c>
   12a88:	bl	16fcc <codadump_filter_create@@Base>
   12a8c:	ldr	r3, [sp, #4]
   12a90:	cmp	r0, #0
   12a94:	ldr	r2, [sp, #20]
   12a98:	str	r0, [r3, #664]	; 0x298
   12a9c:	beq	13950 <main@@Base+0x1304>
   12aa0:	mov	fp, r2
   12aa4:	add	fp, fp, #1
   12aa8:	cmp	r4, fp
   12aac:	ble	12cc4 <main@@Base+0x678>
   12ab0:	ldr	r6, [r5, fp, lsl #2]
   12ab4:	mov	r1, r7
   12ab8:	lsl	r8, fp, #2
   12abc:	mov	r0, r6
   12ac0:	bl	121e4 <strcmp@plt>
   12ac4:	cmp	r0, #0
   12ac8:	bne	129f4 <main@@Base+0x3a8>
   12acc:	mov	r2, #1
   12ad0:	str	r2, [r9]
   12ad4:	b	12aa4 <main@@Base+0x458>
   12ad8:	str	r0, [sp, #8]
   12adc:	b	12aa4 <main@@Base+0x458>
   12ae0:	add	r3, r6, #1
   12ae4:	cmp	r4, r3
   12ae8:	ble	12c30 <main@@Base+0x5e4>
   12aec:	add	r2, r5, r8
   12af0:	ldr	r1, [r2, #4]
   12af4:	ldrb	r0, [r1]
   12af8:	cmp	r0, #45	; 0x2d
   12afc:	beq	13110 <main@@Base+0xac4>
   12b00:	mov	r6, r3
   12b04:	ldr	r3, [sp]
   12b08:	str	r1, [r3]
   12b0c:	b	128d8 <main@@Base+0x28c>
   12b10:	movw	r1, #46804	; 0xb6d4
   12b14:	movt	r1, #1
   12b18:	mov	r0, r7
   12b1c:	bl	121e4 <strcmp@plt>
   12b20:	subs	r1, r0, #0
   12b24:	bne	12b84 <main@@Base+0x538>
   12b28:	add	r3, r6, #3
   12b2c:	cmp	r4, r3
   12b30:	ble	12b84 <main@@Base+0x538>
   12b34:	add	r8, r5, r8
   12b38:	ldr	ip, [r8, #4]
   12b3c:	ldrb	r2, [ip]
   12b40:	cmp	r2, #45	; 0x2d
   12b44:	beq	12b84 <main@@Base+0x538>
   12b48:	ldr	lr, [r8, #8]
   12b4c:	ldrb	r2, [lr]
   12b50:	cmp	r2, #45	; 0x2d
   12b54:	beq	12b84 <main@@Base+0x538>
   12b58:	ldr	r0, [r8, #12]
   12b5c:	ldrb	r2, [r0]
   12b60:	cmp	r2, #45	; 0x2d
   12b64:	beq	12b84 <main@@Base+0x538>
   12b68:	mov	r2, #10
   12b6c:	mov	r6, r3
   12b70:	str	ip, [sp, #16]
   12b74:	str	lr, [sp, #24]
   12b78:	bl	121f0 <strtol@plt>
   12b7c:	str	r0, [sp, #28]
   12b80:	b	128d8 <main@@Base+0x28c>
   12b84:	sub	r3, r4, #1
   12b88:	cmp	r6, r3
   12b8c:	bne	138a0 <main@@Base+0x1254>
   12b90:	ldrb	r3, [r7]
   12b94:	cmp	r3, #45	; 0x2d
   12b98:	beq	138a0 <main@@Base+0x1254>
   12b9c:	ldr	r3, [sp, #4]
   12ba0:	str	r7, [r3]
   12ba4:	b	128d8 <main@@Base+0x28c>
   12ba8:	movw	r1, #46640	; 0xb630
   12bac:	movt	r1, #1
   12bb0:	mov	r0, r6
   12bb4:	bl	121e4 <strcmp@plt>
   12bb8:	cmp	r0, #0
   12bbc:	beq	12cb4 <main@@Base+0x668>
   12bc0:	movw	r1, #42872	; 0xa778
   12bc4:	movt	r1, #1
   12bc8:	mov	r0, r6
   12bcc:	bl	121e4 <strcmp@plt>
   12bd0:	cmp	r0, #0
   12bd4:	beq	12cb4 <main@@Base+0x668>
   12bd8:	movw	r1, #46644	; 0xb634
   12bdc:	movt	r1, #1
   12be0:	mov	r0, r6
   12be4:	bl	121e4 <strcmp@plt>
   12be8:	cmp	r0, #0
   12bec:	beq	13450 <main@@Base+0xe04>
   12bf0:	movw	r1, #42940	; 0xa7bc
   12bf4:	movt	r1, #1
   12bf8:	mov	r0, r6
   12bfc:	bl	121e4 <strcmp@plt>
   12c00:	cmp	r0, #0
   12c04:	beq	13450 <main@@Base+0xe04>
   12c08:	movw	r1, #43004	; 0xa7fc
   12c0c:	movt	r1, #1
   12c10:	mov	r0, r6
   12c14:	bl	121e4 <strcmp@plt>
   12c18:	cmp	r0, #0
   12c1c:	bne	13808 <main@@Base+0x11bc>
   12c20:	ldr	r3, [sp, #28]
   12c24:	mov	r2, #1
   12c28:	str	r2, [r3]
   12c2c:	b	12aa4 <main@@Base+0x458>
   12c30:	movw	r1, #46772	; 0xb6b4
   12c34:	movt	r1, #1
   12c38:	mov	r0, r7
   12c3c:	bl	121e4 <strcmp@plt>
   12c40:	cmp	r0, #0
   12c44:	beq	12b10 <main@@Base+0x4c4>
   12c48:	movw	r1, #46776	; 0xb6b8
   12c4c:	movt	r1, #1
   12c50:	mov	r0, r7
   12c54:	bl	121e4 <strcmp@plt>
   12c58:	cmp	r0, #0
   12c5c:	beq	128ac <main@@Base+0x260>
   12c60:	movw	r1, #46792	; 0xb6c8
   12c64:	movt	r1, #1
   12c68:	mov	r0, r7
   12c6c:	bl	121e4 <strcmp@plt>
   12c70:	subs	r1, r0, #0
   12c74:	bne	12b10 <main@@Base+0x4c4>
   12c78:	add	r3, r6, #1
   12c7c:	cmp	r4, r3
   12c80:	ble	12b10 <main@@Base+0x4c4>
   12c84:	add	r2, r5, r8
   12c88:	ldr	r0, [r2, #4]
   12c8c:	ldrb	r2, [r0]
   12c90:	cmp	r2, #45	; 0x2d
   12c94:	beq	12b10 <main@@Base+0x4c4>
   12c98:	mov	r2, #10
   12c9c:	mov	r6, r3
   12ca0:	bl	121f0 <strtol@plt>
   12ca4:	movw	r3, #49584	; 0xc1b0
   12ca8:	movt	r3, #2
   12cac:	str	r0, [r3]
   12cb0:	b	128d8 <main@@Base+0x28c>
   12cb4:	ldr	r3, [sp, #12]
   12cb8:	mov	r2, #1
   12cbc:	str	r2, [r3]
   12cc0:	b	12aa4 <main@@Base+0x458>
   12cc4:	ldr	r3, [sp, #4]
   12cc8:	ldr	r3, [r3]
   12ccc:	cmp	r3, #0
   12cd0:	beq	138a0 <main@@Base+0x1254>
   12cd4:	ldrb	r3, [r3]
   12cd8:	cmp	r3, #0
   12cdc:	beq	138a0 <main@@Base+0x1254>
   12ce0:	bl	12460 <coda_init@plt>
   12ce4:	subs	r4, r0, #0
   12ce8:	bne	1396c <main@@Base+0x1320>
   12cec:	ldr	r3, [sp, #16]
   12cf0:	eor	r0, r3, #1
   12cf4:	bl	122a4 <coda_set_option_bypass_special_types@plt>
   12cf8:	mov	r0, r4
   12cfc:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   12d00:	ldr	r0, [sp, #8]
   12d04:	bl	1246c <coda_set_option_perform_conversions@plt>
   12d08:	bl	1878c <traverse_info_init@@Base>
   12d0c:	bl	15ec4 <dim_info_init@@Base>
   12d10:	bl	187fc <traverse_product@@Base>
   12d14:	bl	15ee4 <dim_info_done@@Base>
   12d18:	bl	187ac <traverse_info_done@@Base>
   12d1c:	bl	12388 <coda_done@plt>
   12d20:	mov	r0, #0
   12d24:	add	sp, sp, #60	; 0x3c
   12d28:	ldrd	r4, [sp]
   12d2c:	ldrd	r6, [sp, #8]
   12d30:	ldrd	r8, [sp, #16]
   12d34:	ldrd	sl, [sp, #24]
   12d38:	add	sp, sp, #32
   12d3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d40:	movw	r2, #49596	; 0xc1bc
   12d44:	movt	r2, #2
   12d48:	ldr	r7, [r2]
   12d4c:	movw	r9, #53400	; 0xd098
   12d50:	movt	r9, #2
   12d54:	mov	r2, #1
   12d58:	movw	lr, #53420	; 0xd0ac
   12d5c:	movt	lr, #2
   12d60:	movw	ip, #49624	; 0xc1d8
   12d64:	movt	ip, #2
   12d68:	movw	r0, #49644	; 0xc1ec
   12d6c:	movt	r0, #2
   12d70:	movw	r3, #49648	; 0xc1f0
   12d74:	movt	r3, #2
   12d78:	movw	r1, #49632	; 0xc1e0
   12d7c:	movt	r1, #2
   12d80:	add	r8, r8, r2
   12d84:	str	r2, [lr]
   12d88:	str	r2, [r0]
   12d8c:	movw	sl, #53404	; 0xd09c
   12d90:	movt	sl, #2
   12d94:	str	r7, [r9]
   12d98:	movw	lr, #49636	; 0xc1e4
   12d9c:	movt	lr, #2
   12da0:	stm	sp, {r1, r3}
   12da4:	movw	r1, #46656	; 0xb640
   12da8:	movt	r1, #1
   12dac:	str	r2, [ip]
   12db0:	movw	r7, #53804	; 0xd22c
   12db4:	movt	r7, #2
   12db8:	str	r9, [sp, #20]
   12dbc:	mov	r9, r2
   12dc0:	movw	r0, #46580	; 0xb5f4
   12dc4:	movt	r0, #1
   12dc8:	ldr	r2, [sp]
   12dcc:	add	r6, r6, #4
   12dd0:	sub	r4, r4, r8
   12dd4:	add	r6, r5, r6
   12dd8:	str	fp, [r3]
   12ddc:	str	sl, [sp, #32]
   12de0:	movw	sl, #53416	; 0xd0a8
   12de4:	movt	sl, #2
   12de8:	movw	r8, #46576	; 0xb5f0
   12dec:	movt	r8, #1
   12df0:	str	fp, [r7]
   12df4:	str	fp, [lr]
   12df8:	str	fp, [r2]
   12dfc:	ldr	r2, [sp, #32]
   12e00:	str	sl, [sp, #16]
   12e04:	movw	sl, #53800	; 0xd228
   12e08:	movt	sl, #2
   12e0c:	str	r0, [sp, #8]
   12e10:	str	sl, [sp, #24]
   12e14:	movw	sl, #42652	; 0xa69c
   12e18:	movt	sl, #1
   12e1c:	str	r9, [sp, #28]
   12e20:	str	r1, [r2]
   12e24:	ldr	r2, [sp, #16]
   12e28:	str	r7, [sp, #36]	; 0x24
   12e2c:	str	lr, [sp, #40]	; 0x28
   12e30:	str	fp, [r3, #664]	; 0x298
   12e34:	str	fp, [r2]
   12e38:	ldr	r2, [sp, #24]
   12e3c:	str	fp, [r2]
   12e40:	b	12ec8 <main@@Base+0x87c>
   12e44:	mov	r1, sl
   12e48:	mov	r0, r5
   12e4c:	bl	121e4 <strcmp@plt>
   12e50:	cmp	r0, #0
   12e54:	beq	12eec <main@@Base+0x8a0>
   12e58:	mov	r0, r5
   12e5c:	ldr	r1, [sp, #8]
   12e60:	bl	121e4 <strcmp@plt>
   12e64:	cmp	r0, #0
   12e68:	beq	12e84 <main@@Base+0x838>
   12e6c:	movw	r1, #46584	; 0xb5f8
   12e70:	movt	r1, #1
   12e74:	mov	r0, r5
   12e78:	bl	121e4 <strcmp@plt>
   12e7c:	cmp	r0, #0
   12e80:	bne	12ef4 <main@@Base+0x8a8>
   12e84:	add	r2, fp, #1
   12e88:	cmp	r4, r2
   12e8c:	str	r2, [sp, #12]
   12e90:	ble	12ef4 <main@@Base+0x8a8>
   12e94:	add	r1, r6, r7
   12e98:	ldr	r0, [r1, #4]
   12e9c:	ldrb	r1, [r0]
   12ea0:	cmp	r1, #45	; 0x2d
   12ea4:	beq	12ef4 <main@@Base+0x8a8>
   12ea8:	bl	16fcc <codadump_filter_create@@Base>
   12eac:	ldr	r3, [sp, #4]
   12eb0:	cmp	r0, #0
   12eb4:	ldr	r2, [sp, #12]
   12eb8:	str	r0, [r3, #664]	; 0x298
   12ebc:	beq	13950 <main@@Base+0x1304>
   12ec0:	mov	fp, r2
   12ec4:	add	fp, fp, #1
   12ec8:	cmp	r4, fp
   12ecc:	ble	12fd4 <main@@Base+0x988>
   12ed0:	ldr	r5, [r6, fp, lsl #2]
   12ed4:	mov	r1, r8
   12ed8:	lsl	r7, fp, #2
   12edc:	mov	r0, r5
   12ee0:	bl	121e4 <strcmp@plt>
   12ee4:	cmp	r0, #0
   12ee8:	bne	12e44 <main@@Base+0x7f8>
   12eec:	mov	r9, r0
   12ef0:	b	12ec4 <main@@Base+0x878>
   12ef4:	movw	r1, #46660	; 0xb644
   12ef8:	movt	r1, #1
   12efc:	mov	r0, r5
   12f00:	bl	121e4 <strcmp@plt>
   12f04:	cmp	r0, #0
   12f08:	beq	12fb4 <main@@Base+0x968>
   12f0c:	movw	r1, #43588	; 0xaa44
   12f10:	movt	r1, #1
   12f14:	mov	r0, r5
   12f18:	bl	121e4 <strcmp@plt>
   12f1c:	cmp	r0, #0
   12f20:	beq	12fb4 <main@@Base+0x968>
   12f24:	movw	r1, #46664	; 0xb648
   12f28:	movt	r1, #1
   12f2c:	mov	r0, r5
   12f30:	bl	121e4 <strcmp@plt>
   12f34:	cmp	r0, #0
   12f38:	beq	12fc4 <main@@Base+0x978>
   12f3c:	movw	r1, #43680	; 0xaaa0
   12f40:	movt	r1, #1
   12f44:	mov	r0, r5
   12f48:	bl	121e4 <strcmp@plt>
   12f4c:	cmp	r0, #0
   12f50:	beq	12fc4 <main@@Base+0x978>
   12f54:	movw	r1, #46668	; 0xb64c
   12f58:	movt	r1, #1
   12f5c:	mov	r0, r5
   12f60:	bl	121e4 <strcmp@plt>
   12f64:	cmp	r0, #0
   12f68:	beq	12f84 <main@@Base+0x938>
   12f6c:	movw	r1, #46672	; 0xb650
   12f70:	movt	r1, #1
   12f74:	mov	r0, r5
   12f78:	bl	121e4 <strcmp@plt>
   12f7c:	cmp	r0, #0
   12f80:	bne	13758 <main@@Base+0x110c>
   12f84:	add	r2, fp, #1
   12f88:	cmp	r4, r2
   12f8c:	ble	13758 <main@@Base+0x110c>
   12f90:	add	r1, r6, r7
   12f94:	ldr	r1, [r1, #4]
   12f98:	ldrb	r0, [r1]
   12f9c:	cmp	r0, #45	; 0x2d
   12fa0:	beq	13758 <main@@Base+0x110c>
   12fa4:	ldr	r3, [sp]
   12fa8:	mov	fp, r2
   12fac:	str	r1, [r3]
   12fb0:	b	12ec4 <main@@Base+0x878>
   12fb4:	ldr	r3, [sp, #16]
   12fb8:	mov	r2, #1
   12fbc:	str	r2, [r3]
   12fc0:	b	12ec4 <main@@Base+0x878>
   12fc4:	ldr	r3, [sp, #24]
   12fc8:	mov	r2, #1
   12fcc:	str	r2, [r3]
   12fd0:	b	12ec4 <main@@Base+0x878>
   12fd4:	ldr	r3, [sp, #4]
   12fd8:	ldr	r3, [r3]
   12fdc:	cmp	r3, #0
   12fe0:	beq	138a0 <main@@Base+0x1254>
   12fe4:	ldrb	r3, [r3]
   12fe8:	cmp	r3, #0
   12fec:	beq	138a0 <main@@Base+0x1254>
   12ff0:	bl	12460 <coda_init@plt>
   12ff4:	subs	r4, r0, #0
   12ff8:	bne	1396c <main@@Base+0x1320>
   12ffc:	ldr	r3, [sp, #28]
   13000:	eor	r0, r3, #1
   13004:	bl	122a4 <coda_set_option_bypass_special_types@plt>
   13008:	mov	r0, r4
   1300c:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   13010:	mov	r0, r9
   13014:	bl	1246c <coda_set_option_perform_conversions@plt>
   13018:	bl	1878c <traverse_info_init@@Base>
   1301c:	bl	15ec4 <dim_info_init@@Base>
   13020:	ldr	r3, [sp]
   13024:	ldr	r0, [r3]
   13028:	cmp	r0, #0
   1302c:	beq	1304c <main@@Base+0xa00>
   13030:	movw	r1, #46712	; 0xb678
   13034:	movt	r1, #1
   13038:	bl	12220 <fopen@plt>
   1303c:	ldr	r3, [sp, #20]
   13040:	cmp	r0, #0
   13044:	str	r0, [r3]
   13048:	beq	13928 <main@@Base+0x12dc>
   1304c:	bl	187fc <traverse_product@@Base>
   13050:	ldr	r3, [sp]
   13054:	ldr	r3, [r3]
   13058:	cmp	r3, #0
   1305c:	beq	1306c <main@@Base+0xa20>
   13060:	ldr	r3, [sp, #20]
   13064:	ldr	r0, [r3]
   13068:	bl	124e4 <fclose@plt>
   1306c:	bl	15ee4 <dim_info_done@@Base>
   13070:	bl	187ac <traverse_info_done@@Base>
   13074:	bl	12388 <coda_done@plt>
   13078:	b	12d20 <main@@Base+0x6d4>
   1307c:	ldr	r3, [sp, #4]
   13080:	ldr	r3, [r3]
   13084:	cmp	r3, #0
   13088:	beq	138a0 <main@@Base+0x1254>
   1308c:	ldrb	r3, [r3]
   13090:	cmp	r3, #0
   13094:	beq	138a0 <main@@Base+0x1254>
   13098:	bl	12460 <coda_init@plt>
   1309c:	cmp	r0, #0
   130a0:	bne	1396c <main@@Base+0x1320>
   130a4:	bl	1246c <coda_set_option_perform_conversions@plt>
   130a8:	mov	r0, sl
   130ac:	bl	121b4 <coda_set_option_use_fast_size_expressions@plt>
   130b0:	ldr	r3, [sp]
   130b4:	ldr	r0, [r3]
   130b8:	cmp	r0, #0
   130bc:	beq	130dc <main@@Base+0xa90>
   130c0:	movw	r1, #46712	; 0xb678
   130c4:	movt	r1, #1
   130c8:	bl	12220 <fopen@plt>
   130cc:	ldr	r3, [sp, #20]
   130d0:	cmp	r0, #0
   130d4:	str	r0, [r3]
   130d8:	beq	13928 <main@@Base+0x12dc>
   130dc:	ldr	r0, [sp, #16]
   130e0:	ldr	r1, [sp, #24]
   130e4:	ldr	r2, [sp, #28]
   130e8:	bl	155f0 <print_debug_data@@Base>
   130ec:	ldr	r3, [sp]
   130f0:	ldr	r3, [r3]
   130f4:	cmp	r3, #0
   130f8:	beq	13108 <main@@Base+0xabc>
   130fc:	ldr	r3, [sp, #20]
   13100:	ldr	r0, [r3]
   13104:	bl	124e4 <fclose@plt>
   13108:	bl	12388 <coda_done@plt>
   1310c:	b	12d20 <main@@Base+0x6d4>
   13110:	movw	r1, #46772	; 0xb6b4
   13114:	movt	r1, #1
   13118:	str	r3, [sp, #32]
   1311c:	mov	r0, r7
   13120:	str	r2, [sp, #36]	; 0x24
   13124:	bl	121e4 <strcmp@plt>
   13128:	cmp	r0, #0
   1312c:	beq	12b10 <main@@Base+0x4c4>
   13130:	movw	r1, #46776	; 0xb6b8
   13134:	movt	r1, #1
   13138:	mov	r0, r7
   1313c:	bl	121e4 <strcmp@plt>
   13140:	cmp	r0, #0
   13144:	ldr	r3, [sp, #32]
   13148:	ldr	r2, [sp, #36]	; 0x24
   1314c:	beq	128bc <main@@Base+0x270>
   13150:	b	12c60 <main@@Base+0x614>
   13154:	movw	r3, #49596	; 0xc1bc
   13158:	movt	r3, #2
   1315c:	mov	r2, #3
   13160:	ldr	r1, [r3]
   13164:	movw	r3, #53420	; 0xd0ac
   13168:	movt	r3, #2
   1316c:	movw	r7, #53424	; 0xd0b0
   13170:	movt	r7, #2
   13174:	movw	r0, #53400	; 0xd098
   13178:	movt	r0, #2
   1317c:	str	r2, [r3]
   13180:	movw	r2, #46576	; 0xb5f0
   13184:	movt	r2, #1
   13188:	movw	ip, #49648	; 0xc1f0
   1318c:	movt	ip, #2
   13190:	movw	lr, #49632	; 0xc1e0
   13194:	movt	lr, #2
   13198:	str	r7, [sp, #12]
   1319c:	add	r8, r8, #1
   131a0:	str	r2, [sp, #8]
   131a4:	movw	r2, #42652	; 0xa69c
   131a8:	movt	r2, #1
   131ac:	ldr	r3, [sp, #12]
   131b0:	add	r6, r6, #4
   131b4:	movw	sl, #44380	; 0xad5c
   131b8:	movt	sl, #1
   131bc:	str	r1, [r0]
   131c0:	mov	r1, #1
   131c4:	str	r2, [sp, #24]
   131c8:	movw	r2, #46668	; 0xb64c
   131cc:	movt	r2, #1
   131d0:	movw	r7, #46768	; 0xb6b0
   131d4:	movt	r7, #1
   131d8:	str	r9, [ip]
   131dc:	sub	r4, r4, r8
   131e0:	add	r6, r5, r6
   131e4:	str	lr, [sp]
   131e8:	str	r2, [sp, #28]
   131ec:	movw	r2, #43228	; 0xa8dc
   131f0:	movt	r2, #1
   131f4:	mov	fp, r9
   131f8:	str	r9, [lr]
   131fc:	str	r9, [r3]
   13200:	str	r2, [sp, #36]	; 0x24
   13204:	movw	r2, #46772	; 0xb6b4
   13208:	movt	r2, #1
   1320c:	str	ip, [sp, #4]
   13210:	str	r1, [sp, #16]
   13214:	str	r2, [sp, #44]	; 0x2c
   13218:	movw	r2, #46776	; 0xb6b8
   1321c:	movt	r2, #1
   13220:	str	r0, [sp, #20]
   13224:	str	r1, [sp, #32]
   13228:	str	r2, [sp, #48]	; 0x30
   1322c:	movw	r2, #46672	; 0xb650
   13230:	movt	r2, #1
   13234:	str	r2, [sp, #40]	; 0x28
   13238:	b	132f8 <main@@Base+0xcac>
   1323c:	mov	r1, sl
   13240:	mov	r0, r5
   13244:	bl	121e4 <strcmp@plt>
   13248:	cmp	r0, #0
   1324c:	beq	1331c <main@@Base+0xcd0>
   13250:	mov	r0, r5
   13254:	ldr	r1, [sp, #8]
   13258:	bl	121e4 <strcmp@plt>
   1325c:	cmp	r0, #0
   13260:	beq	13324 <main@@Base+0xcd8>
   13264:	mov	r0, r5
   13268:	ldr	r1, [sp, #24]
   1326c:	bl	121e4 <strcmp@plt>
   13270:	cmp	r0, #0
   13274:	beq	13324 <main@@Base+0xcd8>
   13278:	mov	r0, r5
   1327c:	ldr	r1, [sp, #28]
   13280:	bl	121e4 <strcmp@plt>
   13284:	cmp	r0, #0
   13288:	beq	1332c <main@@Base+0xce0>
   1328c:	mov	r0, r5
   13290:	ldr	r1, [sp, #40]	; 0x28
   13294:	bl	121e4 <strcmp@plt>
   13298:	cmp	r0, #0
   1329c:	beq	1332c <main@@Base+0xce0>
   132a0:	mov	r0, r5
   132a4:	ldr	r1, [sp, #44]	; 0x2c
   132a8:	bl	121e4 <strcmp@plt>
   132ac:	cmp	r0, #0
   132b0:	beq	132c8 <main@@Base+0xc7c>
   132b4:	mov	r0, r5
   132b8:	ldr	r1, [sp, #48]	; 0x30
   132bc:	bl	121e4 <strcmp@plt>
   132c0:	cmp	r0, #0
   132c4:	bne	13418 <main@@Base+0xdcc>
   132c8:	add	r2, fp, #1
   132cc:	cmp	r4, r2
   132d0:	ble	13418 <main@@Base+0xdcc>
   132d4:	add	r8, r6, r8
   132d8:	ldr	r1, [r8, #4]
   132dc:	ldrb	r0, [r1]
   132e0:	cmp	r0, #45	; 0x2d
   132e4:	beq	13418 <main@@Base+0xdcc>
   132e8:	ldr	r3, [sp, #12]
   132ec:	mov	fp, r2
   132f0:	str	r1, [r3]
   132f4:	add	fp, fp, #1
   132f8:	cmp	r4, fp
   132fc:	ble	1335c <main@@Base+0xd10>
   13300:	ldr	r5, [r6, fp, lsl #2]
   13304:	mov	r1, r7
   13308:	lsl	r8, fp, #2
   1330c:	mov	r0, r5
   13310:	bl	121e4 <strcmp@plt>
   13314:	cmp	r0, #0
   13318:	bne	1323c <main@@Base+0xbf0>
   1331c:	mov	r9, #1
   13320:	b	132f4 <main@@Base+0xca8>
   13324:	str	r0, [sp, #16]
   13328:	b	132f4 <main@@Base+0xca8>
   1332c:	add	r2, fp, #1
   13330:	cmp	r4, r2
   13334:	ble	13418 <main@@Base+0xdcc>
   13338:	add	r8, r6, r8
   1333c:	ldr	r1, [r8, #4]
   13340:	ldrb	r0, [r1]
   13344:	cmp	r0, #45	; 0x2d
   13348:	beq	133e0 <main@@Base+0xd94>
   1334c:	ldr	r3, [sp]
   13350:	mov	fp, r2
   13354:	str	r1, [r3]
   13358:	b	132f4 <main@@Base+0xca8>
   1335c:	ldr	r3, [sp, #4]
   13360:	ldr	r3, [r3]
   13364:	cmp	r3, #0
   13368:	beq	138a0 <main@@Base+0x1254>
   1336c:	ldrb	r3, [r3]
   13370:	cmp	r3, #0
   13374:	beq	138a0 <main@@Base+0x1254>
   13378:	bl	12460 <coda_init@plt>
   1337c:	cmp	r0, #0
   13380:	bne	1396c <main@@Base+0x1320>
   13384:	ldr	r3, [sp, #32]
   13388:	eor	r0, r3, #1
   1338c:	bl	122a4 <coda_set_option_bypass_special_types@plt>
   13390:	ldr	r0, [sp, #16]
   13394:	bl	1246c <coda_set_option_perform_conversions@plt>
   13398:	ldr	r3, [sp]
   1339c:	ldr	r0, [r3]
   133a0:	cmp	r0, #0
   133a4:	beq	133c4 <main@@Base+0xd78>
   133a8:	movw	r1, #46712	; 0xb678
   133ac:	movt	r1, #1
   133b0:	bl	12220 <fopen@plt>
   133b4:	ldr	r3, [sp, #20]
   133b8:	cmp	r0, #0
   133bc:	str	r0, [r3]
   133c0:	beq	13928 <main@@Base+0x12dc>
   133c4:	mov	r0, r9
   133c8:	bl	17b14 <print_json_data@@Base>
   133cc:	ldr	r3, [sp]
   133d0:	ldr	r3, [r3]
   133d4:	cmp	r3, #0
   133d8:	bne	130fc <main@@Base+0xab0>
   133dc:	b	13108 <main@@Base+0xabc>
   133e0:	mov	r0, r5
   133e4:	ldr	r1, [sp, #44]	; 0x2c
   133e8:	str	r2, [sp, #52]	; 0x34
   133ec:	bl	121e4 <strcmp@plt>
   133f0:	cmp	r0, #0
   133f4:	ldr	r2, [sp, #52]	; 0x34
   133f8:	beq	13418 <main@@Base+0xdcc>
   133fc:	mov	r0, r5
   13400:	ldr	r1, [sp, #48]	; 0x30
   13404:	str	r2, [sp, #52]	; 0x34
   13408:	bl	121e4 <strcmp@plt>
   1340c:	cmp	r0, #0
   13410:	ldr	r2, [sp, #52]	; 0x34
   13414:	beq	132d8 <main@@Base+0xc8c>
   13418:	mov	r0, r5
   1341c:	ldr	r1, [sp, #36]	; 0x24
   13420:	bl	121e4 <strcmp@plt>
   13424:	cmp	r0, #0
   13428:	beq	137e8 <main@@Base+0x119c>
   1342c:	sub	r2, r4, #1
   13430:	cmp	fp, r2
   13434:	bne	138a0 <main@@Base+0x1254>
   13438:	ldrb	r2, [r5]
   1343c:	cmp	r2, #45	; 0x2d
   13440:	beq	138a0 <main@@Base+0x1254>
   13444:	ldr	r3, [sp, #4]
   13448:	str	r5, [r3]
   1344c:	b	132f4 <main@@Base+0xca8>
   13450:	ldr	r3, [sp, #24]
   13454:	mov	r2, #1
   13458:	str	r2, [r3]
   1345c:	b	12aa4 <main@@Base+0x458>
   13460:	movw	r3, #49596	; 0xc1bc
   13464:	movt	r3, #2
   13468:	mov	r2, #4
   1346c:	ldr	r1, [r3]
   13470:	movw	r3, #53420	; 0xd0ac
   13474:	movt	r3, #2
   13478:	movw	r0, #53400	; 0xd098
   1347c:	movt	r0, #2
   13480:	movw	ip, #49648	; 0xc1f0
   13484:	movt	ip, #2
   13488:	str	r2, [r3]
   1348c:	movw	r3, #46576	; 0xb5f0
   13490:	movt	r3, #1
   13494:	movw	lr, #49632	; 0xc1e0
   13498:	movt	lr, #2
   1349c:	movw	r9, #53424	; 0xd0b0
   134a0:	movt	r9, #2
   134a4:	str	r1, [r0]
   134a8:	mov	r1, #1
   134ac:	str	r3, [sp, #8]
   134b0:	movw	r3, #42652	; 0xa69c
   134b4:	movt	r3, #1
   134b8:	add	r8, r8, #1
   134bc:	add	r6, r6, r2
   134c0:	str	r7, [r9]
   134c4:	sub	r4, r4, r8
   134c8:	movw	sl, #44380	; 0xad5c
   134cc:	movt	sl, #1
   134d0:	str	r3, [sp, #24]
   134d4:	movw	r3, #46668	; 0xb64c
   134d8:	movt	r3, #1
   134dc:	movw	r8, #46768	; 0xb6b0
   134e0:	movt	r8, #1
   134e4:	add	r6, r5, r6
   134e8:	str	r7, [ip]
   134ec:	mov	fp, r7
   134f0:	str	lr, [sp]
   134f4:	str	r3, [sp, #28]
   134f8:	movw	r3, #43228	; 0xa8dc
   134fc:	movt	r3, #1
   13500:	str	r7, [lr]
   13504:	str	ip, [sp, #4]
   13508:	str	r3, [sp, #36]	; 0x24
   1350c:	movw	r3, #46772	; 0xb6b4
   13510:	movt	r3, #1
   13514:	str	r9, [sp, #12]
   13518:	str	r1, [sp, #16]
   1351c:	str	r3, [sp, #44]	; 0x2c
   13520:	movw	r3, #46776	; 0xb6b8
   13524:	movt	r3, #1
   13528:	str	r0, [sp, #20]
   1352c:	str	r1, [sp, #32]
   13530:	str	r3, [sp, #48]	; 0x30
   13534:	movw	r3, #46672	; 0xb650
   13538:	movt	r3, #1
   1353c:	str	r3, [sp, #40]	; 0x28
   13540:	b	13600 <main@@Base+0xfb4>
   13544:	mov	r1, sl
   13548:	mov	r0, r5
   1354c:	bl	121e4 <strcmp@plt>
   13550:	cmp	r0, #0
   13554:	beq	13624 <main@@Base+0xfd8>
   13558:	mov	r0, r5
   1355c:	ldr	r1, [sp, #8]
   13560:	bl	121e4 <strcmp@plt>
   13564:	cmp	r0, #0
   13568:	beq	1362c <main@@Base+0xfe0>
   1356c:	mov	r0, r5
   13570:	ldr	r1, [sp, #24]
   13574:	bl	121e4 <strcmp@plt>
   13578:	cmp	r0, #0
   1357c:	beq	1362c <main@@Base+0xfe0>
   13580:	mov	r0, r5
   13584:	ldr	r1, [sp, #28]
   13588:	bl	121e4 <strcmp@plt>
   1358c:	cmp	r0, #0
   13590:	beq	13634 <main@@Base+0xfe8>
   13594:	mov	r0, r5
   13598:	ldr	r1, [sp, #40]	; 0x28
   1359c:	bl	121e4 <strcmp@plt>
   135a0:	cmp	r0, #0
   135a4:	beq	13634 <main@@Base+0xfe8>
   135a8:	mov	r0, r5
   135ac:	ldr	r1, [sp, #44]	; 0x2c
   135b0:	bl	121e4 <strcmp@plt>
   135b4:	cmp	r0, #0
   135b8:	beq	135d0 <main@@Base+0xf84>
   135bc:	mov	r0, r5
   135c0:	ldr	r1, [sp, #48]	; 0x30
   135c4:	bl	121e4 <strcmp@plt>
   135c8:	cmp	r0, #0
   135cc:	bne	13720 <main@@Base+0x10d4>
   135d0:	add	r2, fp, #1
   135d4:	cmp	r4, r2
   135d8:	ble	13720 <main@@Base+0x10d4>
   135dc:	add	r9, r6, r9
   135e0:	ldr	r1, [r9, #4]
   135e4:	ldrb	r0, [r1]
   135e8:	cmp	r0, #45	; 0x2d
   135ec:	beq	13720 <main@@Base+0x10d4>
   135f0:	ldr	r3, [sp, #12]
   135f4:	mov	fp, r2
   135f8:	str	r1, [r3]
   135fc:	add	fp, fp, #1
   13600:	cmp	r4, fp
   13604:	ble	13664 <main@@Base+0x1018>
   13608:	ldr	r5, [r6, fp, lsl #2]
   1360c:	mov	r1, r8
   13610:	lsl	r9, fp, #2
   13614:	mov	r0, r5
   13618:	bl	121e4 <strcmp@plt>
   1361c:	cmp	r0, #0
   13620:	bne	13544 <main@@Base+0xef8>
   13624:	mov	r7, #1
   13628:	b	135fc <main@@Base+0xfb0>
   1362c:	str	r0, [sp, #16]
   13630:	b	135fc <main@@Base+0xfb0>
   13634:	add	r2, fp, #1
   13638:	cmp	r4, r2
   1363c:	ble	13720 <main@@Base+0x10d4>
   13640:	add	r9, r6, r9
   13644:	ldr	r1, [r9, #4]
   13648:	ldrb	r0, [r1]
   1364c:	cmp	r0, #45	; 0x2d
   13650:	beq	136e8 <main@@Base+0x109c>
   13654:	ldr	r3, [sp]
   13658:	mov	fp, r2
   1365c:	str	r1, [r3]
   13660:	b	135fc <main@@Base+0xfb0>
   13664:	ldr	r3, [sp, #4]
   13668:	ldr	r3, [r3]
   1366c:	cmp	r3, #0
   13670:	beq	138a0 <main@@Base+0x1254>
   13674:	ldrb	r3, [r3]
   13678:	cmp	r3, #0
   1367c:	beq	138a0 <main@@Base+0x1254>
   13680:	bl	12460 <coda_init@plt>
   13684:	cmp	r0, #0
   13688:	bne	1396c <main@@Base+0x1320>
   1368c:	ldr	r3, [sp, #32]
   13690:	eor	r0, r3, #1
   13694:	bl	122a4 <coda_set_option_bypass_special_types@plt>
   13698:	ldr	r0, [sp, #16]
   1369c:	bl	1246c <coda_set_option_perform_conversions@plt>
   136a0:	ldr	r3, [sp]
   136a4:	ldr	r0, [r3]
   136a8:	cmp	r0, #0
   136ac:	beq	136cc <main@@Base+0x1080>
   136b0:	movw	r1, #46712	; 0xb678
   136b4:	movt	r1, #1
   136b8:	bl	12220 <fopen@plt>
   136bc:	ldr	r3, [sp, #20]
   136c0:	cmp	r0, #0
   136c4:	str	r0, [r3]
   136c8:	beq	13928 <main@@Base+0x12dc>
   136cc:	mov	r0, r7
   136d0:	bl	19450 <print_yaml_data@@Base>
   136d4:	ldr	r3, [sp]
   136d8:	ldr	r3, [r3]
   136dc:	cmp	r3, #0
   136e0:	bne	130fc <main@@Base+0xab0>
   136e4:	b	13108 <main@@Base+0xabc>
   136e8:	mov	r0, r5
   136ec:	ldr	r1, [sp, #44]	; 0x2c
   136f0:	str	r2, [sp, #52]	; 0x34
   136f4:	bl	121e4 <strcmp@plt>
   136f8:	cmp	r0, #0
   136fc:	ldr	r2, [sp, #52]	; 0x34
   13700:	beq	13720 <main@@Base+0x10d4>
   13704:	mov	r0, r5
   13708:	ldr	r1, [sp, #48]	; 0x30
   1370c:	str	r2, [sp, #52]	; 0x34
   13710:	bl	121e4 <strcmp@plt>
   13714:	cmp	r0, #0
   13718:	ldr	r2, [sp, #52]	; 0x34
   1371c:	beq	135e0 <main@@Base+0xf94>
   13720:	mov	r0, r5
   13724:	ldr	r1, [sp, #36]	; 0x24
   13728:	bl	121e4 <strcmp@plt>
   1372c:	cmp	r0, #0
   13730:	beq	13800 <main@@Base+0x11b4>
   13734:	sub	r2, r4, #1
   13738:	cmp	fp, r2
   1373c:	bne	138a0 <main@@Base+0x1254>
   13740:	ldrb	r2, [r5]
   13744:	cmp	r2, #45	; 0x2d
   13748:	beq	138a0 <main@@Base+0x1254>
   1374c:	ldr	r3, [sp, #4]
   13750:	str	r5, [r3]
   13754:	b	135fc <main@@Base+0xfb0>
   13758:	movw	r1, #46684	; 0xb65c
   1375c:	movt	r1, #1
   13760:	mov	r0, r5
   13764:	bl	121e4 <strcmp@plt>
   13768:	cmp	r0, #0
   1376c:	beq	137f0 <main@@Base+0x11a4>
   13770:	movw	r1, #43868	; 0xab5c
   13774:	movt	r1, #1
   13778:	mov	r0, r5
   1377c:	bl	121e4 <strcmp@plt>
   13780:	cmp	r0, #0
   13784:	beq	137f0 <main@@Base+0x11a4>
   13788:	movw	r1, #46688	; 0xb660
   1378c:	movt	r1, #1
   13790:	mov	r0, r5
   13794:	bl	121e4 <strcmp@plt>
   13798:	cmp	r0, #0
   1379c:	beq	137b8 <main@@Base+0x116c>
   137a0:	movw	r1, #46692	; 0xb664
   137a4:	movt	r1, #1
   137a8:	mov	r0, r5
   137ac:	bl	121e4 <strcmp@plt>
   137b0:	cmp	r0, #0
   137b4:	bne	13834 <main@@Base+0x11e8>
   137b8:	add	r1, fp, #1
   137bc:	cmp	r4, r1
   137c0:	ble	13834 <main@@Base+0x11e8>
   137c4:	add	r7, r6, r7
   137c8:	ldr	r2, [r7, #4]
   137cc:	ldrb	r0, [r2]
   137d0:	cmp	r0, #45	; 0x2d
   137d4:	beq	13834 <main@@Base+0x11e8>
   137d8:	ldr	r3, [sp, #32]
   137dc:	mov	fp, r1
   137e0:	str	r2, [r3]
   137e4:	b	12ec4 <main@@Base+0x878>
   137e8:	str	r0, [sp, #32]
   137ec:	b	132f4 <main@@Base+0xca8>
   137f0:	ldr	r3, [sp, #36]	; 0x24
   137f4:	mov	r2, #1
   137f8:	str	r2, [r3]
   137fc:	b	12ec4 <main@@Base+0x878>
   13800:	str	r0, [sp, #32]
   13804:	b	135fc <main@@Base+0xfb0>
   13808:	movw	r1, #43084	; 0xa84c
   1380c:	movt	r1, #1
   13810:	mov	r0, r6
   13814:	bl	121e4 <strcmp@plt>
   13818:	cmp	r0, #0
   1381c:	bne	138dc <main@@Base+0x1290>
   13820:	ldr	r3, [sp, #32]
   13824:	mov	r2, #1
   13828:	str	r2, [r9]
   1382c:	str	r2, [r3]
   13830:	b	12aa4 <main@@Base+0x458>
   13834:	movw	r1, #46640	; 0xb630
   13838:	movt	r1, #1
   1383c:	mov	r0, r5
   13840:	bl	121e4 <strcmp@plt>
   13844:	cmp	r0, #0
   13848:	beq	138cc <main@@Base+0x1280>
   1384c:	movw	r1, #44108	; 0xac4c
   13850:	movt	r1, #1
   13854:	mov	r0, r5
   13858:	bl	121e4 <strcmp@plt>
   1385c:	cmp	r0, #0
   13860:	beq	138cc <main@@Base+0x1280>
   13864:	movw	r1, #43228	; 0xa8dc
   13868:	movt	r1, #1
   1386c:	mov	r0, r5
   13870:	bl	121e4 <strcmp@plt>
   13874:	cmp	r0, #0
   13878:	beq	13920 <main@@Base+0x12d4>
   1387c:	sub	r2, r4, #1
   13880:	cmp	fp, r2
   13884:	bne	138a0 <main@@Base+0x1254>
   13888:	ldrb	r2, [r5]
   1388c:	cmp	r2, #45	; 0x2d
   13890:	beq	138a0 <main@@Base+0x1254>
   13894:	ldr	r3, [sp, #4]
   13898:	str	r5, [r3]
   1389c:	b	12ec4 <main@@Base+0x878>
   138a0:	movw	r3, #49592	; 0xc1b8
   138a4:	movt	r3, #2
   138a8:	ldr	r3, [r3]
   138ac:	movw	r0, #46544	; 0xb5d0
   138b0:	movt	r0, #1
   138b4:	mov	r2, #25
   138b8:	mov	r1, #1
   138bc:	bl	12358 <fwrite@plt>
   138c0:	bl	1953c <print_yaml_data@@Base+0xec>
   138c4:	mov	r0, #1
   138c8:	bl	123f4 <exit@plt>
   138cc:	ldr	r3, [sp, #40]	; 0x28
   138d0:	mov	r2, #1
   138d4:	str	r2, [r3]
   138d8:	b	12ec4 <main@@Base+0x878>
   138dc:	movw	r1, #43228	; 0xa8dc
   138e0:	movt	r1, #1
   138e4:	mov	r0, r6
   138e8:	bl	121e4 <strcmp@plt>
   138ec:	cmp	r0, #0
   138f0:	beq	13918 <main@@Base+0x12cc>
   138f4:	sub	r2, r4, #1
   138f8:	cmp	r2, fp
   138fc:	bne	138a0 <main@@Base+0x1254>
   13900:	ldrb	r2, [r6]
   13904:	cmp	r2, #45	; 0x2d
   13908:	beq	138a0 <main@@Base+0x1254>
   1390c:	ldr	r3, [sp, #4]
   13910:	str	r6, [r3]
   13914:	b	12aa4 <main@@Base+0x458>
   13918:	str	r0, [sp, #16]
   1391c:	b	12aa4 <main@@Base+0x458>
   13920:	str	r0, [sp, #28]
   13924:	b	12ec4 <main@@Base+0x878>
   13928:	ldr	r2, [sp]
   1392c:	movw	r3, #49592	; 0xc1b8
   13930:	movt	r3, #2
   13934:	movw	r1, #46716	; 0xb67c
   13938:	movt	r1, #1
   1393c:	ldr	r0, [r3]
   13940:	ldr	r2, [r2]
   13944:	bl	1243c <fprintf@plt>
   13948:	mov	r0, #1
   1394c:	bl	123f4 <exit@plt>
   13950:	movw	r3, #49592	; 0xc1b8
   13954:	movt	r3, #2
   13958:	movw	r0, #46596	; 0xb604
   1395c:	movt	r0, #1
   13960:	ldr	r3, [r3]
   13964:	mov	r2, #40	; 0x28
   13968:	b	138b8 <main@@Base+0x126c>
   1396c:	movw	r3, #49592	; 0xc1b8
   13970:	movt	r3, #2
   13974:	ldr	r4, [r3]
   13978:	bl	125e0 <coda_get_errno@plt>
   1397c:	ldr	r0, [r0]
   13980:	bl	12598 <coda_errno_to_string@plt>
   13984:	mov	r2, r0
   13988:	movw	r1, #46392	; 0xb538
   1398c:	movt	r1, #1
   13990:	mov	r0, r4
   13994:	bl	1243c <fprintf@plt>
   13998:	mov	r0, #1
   1399c:	bl	123f4 <exit@plt>

000139a0 <_start@@Base>:
   139a0:	mov	fp, #0
   139a4:	mov	lr, #0
   139a8:	pop	{r1}		; (ldr r1, [sp], #4)
   139ac:	mov	r2, sp
   139b0:	push	{r2}		; (str r2, [sp, #-4]!)
   139b4:	push	{r0}		; (str r0, [sp, #-4]!)
   139b8:	ldr	ip, [pc, #16]	; 139d0 <_start@@Base+0x30>
   139bc:	push	{ip}		; (str ip, [sp, #-4]!)
   139c0:	ldr	r0, [pc, #12]	; 139d4 <_start@@Base+0x34>
   139c4:	ldr	r3, [pc, #12]	; 139d8 <_start@@Base+0x38>
   139c8:	bl	123b8 <__libc_start_main@plt>
   139cc:	bl	12610 <abort@plt>
   139d0:	andeq	r9, r1, r0, lsr #27
   139d4:	andeq	r2, r1, ip, asr #12
   139d8:	andeq	r9, r1, r0, asr #26
   139dc:	ldr	r3, [pc, #20]	; 139f8 <_start@@Base+0x58>
   139e0:	ldr	r2, [pc, #20]	; 139fc <_start@@Base+0x5c>
   139e4:	add	r3, pc, r3
   139e8:	ldr	r2, [r3, r2]
   139ec:	cmp	r2, #0
   139f0:	bxeq	lr
   139f4:	b	123c4 <__gmon_start__@plt>
   139f8:	andeq	r8, r1, r4, lsl r6
   139fc:	muleq	r0, ip, r1
   13a00:	ldr	r0, [pc, #24]	; 13a20 <_start@@Base+0x80>
   13a04:	ldr	r3, [pc, #24]	; 13a24 <_start@@Base+0x84>
   13a08:	cmp	r3, r0
   13a0c:	bxeq	lr
   13a10:	ldr	r3, [pc, #16]	; 13a28 <_start@@Base+0x88>
   13a14:	cmp	r3, #0
   13a18:	bxeq	lr
   13a1c:	bx	r3
   13a20:			; <UNDEFINED> instruction: 0x0002c1b4
   13a24:			; <UNDEFINED> instruction: 0x0002c1b4
   13a28:	andeq	r0, r0, r0
   13a2c:	ldr	r0, [pc, #36]	; 13a58 <_start@@Base+0xb8>
   13a30:	ldr	r1, [pc, #36]	; 13a5c <_start@@Base+0xbc>
   13a34:	sub	r1, r1, r0
   13a38:	asr	r1, r1, #2
   13a3c:	add	r1, r1, r1, lsr #31
   13a40:	asrs	r1, r1, #1
   13a44:	bxeq	lr
   13a48:	ldr	r3, [pc, #16]	; 13a60 <_start@@Base+0xc0>
   13a4c:	cmp	r3, #0
   13a50:	bxeq	lr
   13a54:	bx	r3
   13a58:			; <UNDEFINED> instruction: 0x0002c1b4
   13a5c:			; <UNDEFINED> instruction: 0x0002c1b4
   13a60:	andeq	r0, r0, r0
   13a64:	push	{r4, lr}
   13a68:	ldr	r4, [pc, #24]	; 13a88 <_start@@Base+0xe8>
   13a6c:	ldrb	r3, [r4]
   13a70:	cmp	r3, #0
   13a74:	popne	{r4, pc}
   13a78:	bl	13a00 <_start@@Base+0x60>
   13a7c:	mov	r3, #1
   13a80:	strb	r3, [r4]
   13a84:	pop	{r4, pc}
   13a88:	andeq	ip, r2, r0, asr #3
   13a8c:	b	13a2c <_start@@Base+0x8c>
   13a90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13a94:	mov	r5, r1
   13a98:	strd	r6, [sp, #8]
   13a9c:	add	r7, r1, #2
   13aa0:	strd	r8, [sp, #16]
   13aa4:	strd	sl, [sp, #24]
   13aa8:	movw	fp, #49648	; 0xc1f0
   13aac:	movt	fp, #2
   13ab0:	str	lr, [sp, #32]
   13ab4:	sub	sp, sp, #108	; 0x6c
   13ab8:	mov	sl, r2
   13abc:	add	r1, sp, #52	; 0x34
   13ac0:	str	r0, [sp, #16]
   13ac4:	ldr	r0, [fp, r7, lsl #2]
   13ac8:	str	r3, [sp, #20]
   13acc:	bl	12640 <coda_type_get_class@plt>
   13ad0:	cmp	r0, #0
   13ad4:	bne	13d3c <_start@@Base+0x39c>
   13ad8:	ldr	r3, [sp, #52]	; 0x34
   13adc:	cmp	r3, #0
   13ae0:	beq	13bc4 <_start@@Base+0x224>
   13ae4:	cmp	r3, #1
   13ae8:	bne	13c30 <_start@@Base+0x290>
   13aec:	lsl	r6, sl, #2
   13af0:	cmp	sl, #0
   13af4:	add	r3, r6, sl
   13af8:	add	r2, r6, sl
   13afc:	streq	sl, [fp, #844]	; 0x34c
   13b00:	add	r3, fp, r3, lsl #4
   13b04:	add	r2, fp, r2, lsl #4
   13b08:	ldr	r1, [r3, #800]	; 0x320
   13b0c:	movw	r3, #53432	; 0xd0b8
   13b10:	movt	r3, #2
   13b14:	ldr	lr, [r2, #804]	; 0x324
   13b18:	ldr	r9, [r3, #104]	; 0x68
   13b1c:	add	r0, lr, r1
   13b20:	cmp	r9, r0
   13b24:	str	r0, [sp, #24]
   13b28:	bge	13d44 <_start@@Base+0x3a4>
   13b2c:	cmp	lr, #0
   13b30:	addle	r7, sl, #1
   13b34:	ble	13d78 <_start@@Base+0x3d8>
   13b38:	add	ip, r6, sl
   13b3c:	add	r1, r1, #1
   13b40:	str	r5, [sp, #28]
   13b44:	lsl	ip, ip, #4
   13b48:	mov	r2, #0
   13b4c:	add	r0, sp, #68	; 0x44
   13b50:	add	r3, r3, r1, lsl #2
   13b54:	mov	r7, r2
   13b58:	mov	r4, #1
   13b5c:	add	r1, ip, #848	; 0x350
   13b60:	add	ip, fp, ip
   13b64:	add	r1, fp, r1
   13b68:	ldr	r8, [r3, #68]	; 0x44
   13b6c:	add	r2, r2, #1
   13b70:	add	r3, r3, #4
   13b74:	cmp	r8, #0
   13b78:	ldrne	r8, [r3, #100]	; 0x64
   13b7c:	ldrne	r5, [ip, #844]	; 0x34c
   13b80:	ldreq	r8, [r3, #-4]
   13b84:	ldrne	r8, [r8, r5, lsl #2]
   13b88:	cmp	lr, r2
   13b8c:	str	r7, [r1], #4
   13b90:	mul	r4, r8, r4
   13b94:	str	r8, [r0, #4]!
   13b98:	bgt	13b68 <_start@@Base+0x1c8>
   13b9c:	cmp	r4, #0
   13ba0:	ldr	r5, [sp, #28]
   13ba4:	bne	13e6c <_start@@Base+0x4cc>
   13ba8:	add	sp, sp, #108	; 0x6c
   13bac:	ldrd	r4, [sp]
   13bb0:	ldrd	r6, [sp, #8]
   13bb4:	ldrd	r8, [sp, #16]
   13bb8:	ldrd	sl, [sp, #24]
   13bbc:	add	sp, sp, #32
   13bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13bc4:	ldr	r3, [sp, #20]
   13bc8:	add	r2, sp, #72	; 0x48
   13bcc:	ldr	r0, [pc, #2616]	; 1460c <_start@@Base+0xc6c>
   13bd0:	add	r4, r3, #872	; 0x368
   13bd4:	add	r3, fp, r4, lsl #2
   13bd8:	ldr	r1, [r3, #4]
   13bdc:	bl	12214 <coda_cursor_get_record_field_available_status@plt>
   13be0:	cmp	r0, #0
   13be4:	bne	13fcc <_start@@Base+0x62c>
   13be8:	ldr	r3, [sp, #72]	; 0x48
   13bec:	cmp	r3, #0
   13bf0:	beq	13ba8 <_start@@Base+0x208>
   13bf4:	add	r4, fp, r4, lsl #2
   13bf8:	ldr	r0, [pc, #2572]	; 1460c <_start@@Base+0xc6c>
   13bfc:	ldr	r1, [r4, #4]
   13c00:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   13c04:	cmp	r0, #0
   13c08:	bne	143d0 <_start@@Base+0xa30>
   13c0c:	mov	r2, sl
   13c10:	add	r1, r5, #1
   13c14:	ldr	r0, [sp, #16]
   13c18:	ldr	r3, [sp, #20]
   13c1c:	add	r3, r3, #1
   13c20:	bl	13a90 <_start@@Base+0xf0>
   13c24:	ldr	r0, [pc, #2528]	; 1460c <_start@@Base+0xc6c>
   13c28:	bl	123dc <coda_cursor_goto_parent@plt>
   13c2c:	b	13ba8 <_start@@Base+0x208>
   13c30:	movw	r3, #53416	; 0xd0a8
   13c34:	movt	r3, #2
   13c38:	ldr	r3, [r3]
   13c3c:	cmp	r3, #0
   13c40:	bne	13fdc <_start@@Base+0x63c>
   13c44:	add	r1, sp, #56	; 0x38
   13c48:	ldr	r0, [fp, r7, lsl #2]
   13c4c:	bl	12640 <coda_type_get_class@plt>
   13c50:	cmp	r0, #0
   13c54:	bne	13fd4 <_start@@Base+0x634>
   13c58:	ldr	r3, [sp, #56]	; 0x38
   13c5c:	cmp	r3, #6
   13c60:	ldrls	pc, [pc, r3, lsl #2]
   13c64:	b	13d2c <_start@@Base+0x38c>
   13c68:	muleq	r1, r8, r3
   13c6c:	muleq	r1, r8, r3
   13c70:	andeq	r3, r1, ip, lsl #28
   13c74:	andeq	r3, r1, ip, lsl #28
   13c78:	andeq	r3, r1, ip, lsl #28
   13c7c:	andeq	r3, r1, ip, lsl #28
   13c80:	muleq	r1, r8, sp
   13c84:	add	r1, sp, #64	; 0x40
   13c88:	ldr	r0, [pc, #2428]	; 1460c <_start@@Base+0xc6c>
   13c8c:	bl	12424 <coda_cursor_read_double@plt>
   13c90:	cmp	r0, #0
   13c94:	bne	143e4 <_start@@Base+0xa44>
   13c98:	ldr	r1, [sp, #60]	; 0x3c
   13c9c:	ldrd	r2, [sp, #64]	; 0x40
   13ca0:	cmp	r1, #2
   13ca4:	bne	142c4 <_start@@Base+0x924>
   13ca8:	movw	r1, #49636	; 0xc1e4
   13cac:	movt	r1, #2
   13cb0:	ldr	r1, [r1]
   13cb4:	cmp	r1, #0
   13cb8:	beq	142c4 <_start@@Base+0x924>
   13cbc:	vmov	d0, r2, r3
   13cc0:	bl	12430 <coda_isNaN@plt>
   13cc4:	cmp	r0, #0
   13cc8:	beq	145b0 <_start@@Base+0xc10>
   13ccc:	movw	r1, #40648	; 0x9ec8
   13cd0:	movt	r1, #1
   13cd4:	ldrh	r0, [r1, #24]
   13cd8:	add	lr, sp, #72	; 0x48
   13cdc:	ldrd	r2, [r1]
   13ce0:	str	lr, [sp, #20]
   13ce4:	ldrb	ip, [r1, #26]
   13ce8:	strd	r2, [sp, #72]	; 0x48
   13cec:	strh	r0, [sp, #96]	; 0x60
   13cf0:	ldrd	r2, [r1, #8]
   13cf4:	ldrd	r0, [r1, #16]
   13cf8:	strd	r2, [sp, #80]	; 0x50
   13cfc:	strb	ip, [sp, #98]	; 0x62
   13d00:	strd	r0, [sp, #88]	; 0x58
   13d04:	movw	r3, #53804	; 0xd22c
   13d08:	movt	r3, #2
   13d0c:	ldr	r3, [r3]
   13d10:	cmp	r3, #0
   13d14:	beq	1453c <_start@@Base+0xb9c>
   13d18:	movw	r1, #40544	; 0x9e60
   13d1c:	movt	r1, #1
   13d20:	ldr	r0, [sp, #16]
   13d24:	ldr	r2, [sp, #20]
   13d28:	bl	1243c <fprintf@plt>
   13d2c:	mov	r0, #10
   13d30:	ldr	r1, [sp, #16]
   13d34:	bl	12574 <fputc@plt>
   13d38:	b	13ba8 <_start@@Base+0x208>
   13d3c:	bl	19af0 <handle_coda_error@@Base>
   13d40:	b	13ad8 <_start@@Base+0x138>
   13d44:	ldr	r0, [fp, #3360]	; 0xd20
   13d48:	sub	r0, r0, #1
   13d4c:	cmp	r0, sl
   13d50:	ble	13b2c <_start@@Base+0x18c>
   13d54:	ldr	ip, [r2, #840]	; 0x348
   13d58:	add	r7, sl, #1
   13d5c:	cmp	lr, #0
   13d60:	add	r0, r7, r7, lsl #2
   13d64:	ldr	r2, [r2, #844]	; 0x34c
   13d68:	add	r0, fp, r0, lsl #4
   13d6c:	mul	ip, ip, r2
   13d70:	str	ip, [r0, #844]	; 0x34c
   13d74:	bgt	13b38 <_start@@Base+0x198>
   13d78:	ldr	r0, [pc, #2188]	; 1460c <_start@@Base+0xc6c>
   13d7c:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   13d80:	subs	r8, r0, #0
   13d84:	moveq	r4, #1
   13d88:	beq	13e8c <_start@@Base+0x4ec>
   13d8c:	bl	19af0 <handle_coda_error@@Base>
   13d90:	mov	r4, #1
   13d94:	b	13e88 <_start@@Base+0x4e8>
   13d98:	add	r1, sp, #60	; 0x3c
   13d9c:	ldr	r0, [fp, r7, lsl #2]
   13da0:	bl	124b4 <coda_type_get_special_type@plt>
   13da4:	cmp	r0, #0
   13da8:	bne	143c0 <_start@@Base+0xa20>
   13dac:	ldr	r3, [sp, #60]	; 0x3c
   13db0:	cmp	r3, #0
   13db4:	beq	13d2c <_start@@Base+0x38c>
   13db8:	cmp	r3, #2
   13dbc:	bls	13c84 <_start@@Base+0x2e4>
   13dc0:	cmp	r3, #3
   13dc4:	bne	13d2c <_start@@Base+0x38c>
   13dc8:	add	r1, sp, #72	; 0x48
   13dcc:	ldr	r0, [pc, #2104]	; 1460c <_start@@Base+0xc6c>
   13dd0:	bl	1255c <coda_cursor_read_complex_double_pair@plt>
   13dd4:	cmp	r0, #0
   13dd8:	bne	14390 <_start@@Base+0x9f0>
   13ddc:	movw	r3, #53404	; 0xd09c
   13de0:	movt	r3, #2
   13de4:	ldr	r0, [sp, #16]
   13de8:	movw	r1, #40640	; 0x9ec0
   13dec:	movt	r1, #1
   13df0:	ldr	ip, [r3]
   13df4:	ldrd	r4, [sp, #80]	; 0x50
   13df8:	ldrd	r2, [sp, #72]	; 0x48
   13dfc:	str	ip, [sp]
   13e00:	strd	r4, [sp, #8]
   13e04:	bl	1243c <fprintf@plt>
   13e08:	b	13d2c <_start@@Base+0x38c>
   13e0c:	add	r1, sp, #60	; 0x3c
   13e10:	ldr	r0, [fp, r7, lsl #2]
   13e14:	bl	12400 <coda_type_get_read_type@plt>
   13e18:	cmp	r0, #0
   13e1c:	bne	143c8 <_start@@Base+0xa28>
   13e20:	ldr	r3, [sp, #60]	; 0x3c
   13e24:	add	r3, r3, #1
   13e28:	cmp	r3, #13
   13e2c:	ldrls	pc, [pc, r3, lsl #2]
   13e30:	b	13d2c <_start@@Base+0x38c>
   13e34:	andeq	r4, r1, ip, ror #11
   13e38:	andeq	r4, r1, r4, ror #6
   13e3c:	andeq	r4, r1, r8, lsr r3
   13e40:	andeq	r4, r1, r4, ror #6
   13e44:	andeq	r4, r1, r8, lsr r3
   13e48:	andeq	r4, r1, r4, ror #6
   13e4c:	andeq	r4, r1, r8, lsr r3
   13e50:	andeq	r4, r1, r8, lsl #6
   13e54:	ldrdeq	r4, [r1], -r8
   13e58:	andeq	r4, r1, r0, lsr #5
   13e5c:	andeq	r4, r1, r0, lsr #5
   13e60:	andeq	r4, r1, r0, ror #4
   13e64:	andeq	r4, r1, r8, ror #3
   13e68:	andeq	r4, r1, ip, asr #1
   13e6c:	ldr	r0, [pc, #1944]	; 1460c <_start@@Base+0xc6c>
   13e70:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   13e74:	cmp	r0, #0
   13e78:	bne	143b8 <_start@@Base+0xa18>
   13e7c:	cmp	r4, #0
   13e80:	addgt	r7, sl, #1
   13e84:	ble	13c24 <_start@@Base+0x284>
   13e88:	sub	r8, r4, #1
   13e8c:	add	r3, r6, sl
   13e90:	str	r9, [sp, #28]
   13e94:	add	r6, r5, #1
   13e98:	mov	r2, r3
   13e9c:	lsl	r3, r3, #2
   13ea0:	str	sl, [sp, #32]
   13ea4:	ldr	sl, [sp, #16]
   13ea8:	mov	r5, #0
   13eac:	ldr	r9, [sp, #20]
   13eb0:	strd	r2, [sp, #40]	; 0x28
   13eb4:	add	r3, fp, r2, lsl #4
   13eb8:	str	r3, [sp, #36]	; 0x24
   13ebc:	mov	r3, r9
   13ec0:	mov	r2, r7
   13ec4:	mov	r1, r6
   13ec8:	mov	r0, sl
   13ecc:	bl	13a90 <_start@@Base+0xf0>
   13ed0:	cmp	r5, r8
   13ed4:	blt	13ee8 <_start@@Base+0x548>
   13ed8:	add	r5, r5, #1
   13edc:	cmp	r5, r4
   13ee0:	blt	13ebc <_start@@Base+0x51c>
   13ee4:	b	13c24 <_start@@Base+0x284>
   13ee8:	ldr	r0, [pc, #1820]	; 1460c <_start@@Base+0xc6c>
   13eec:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   13ef0:	cmp	r0, #0
   13ef4:	bne	140c4 <_start@@Base+0x724>
   13ef8:	ldrd	r2, [sp, #24]
   13efc:	cmp	r3, r2
   13f00:	blt	13f2c <_start@@Base+0x58c>
   13f04:	ldr	r3, [fp, #3360]	; 0xd20
   13f08:	ldr	r2, [sp, #32]
   13f0c:	sub	r3, r3, #1
   13f10:	cmp	r3, r2
   13f14:	ble	13f2c <_start@@Base+0x58c>
   13f18:	add	r3, r7, r7, lsl #2
   13f1c:	add	r3, fp, r3, lsl #4
   13f20:	ldr	r2, [r3, #844]	; 0x34c
   13f24:	add	r2, r2, #1
   13f28:	str	r2, [r3, #844]	; 0x34c
   13f2c:	movw	r3, #53416	; 0xd0a8
   13f30:	movt	r3, #2
   13f34:	ldr	r3, [r3]
   13f38:	cmp	r3, #0
   13f3c:	beq	13ed8 <_start@@Base+0x538>
   13f40:	ldr	r3, [sp, #36]	; 0x24
   13f44:	ldr	r0, [r3, #804]	; 0x324
   13f48:	subs	r1, r0, #1
   13f4c:	bmi	13ed8 <_start@@Base+0x538>
   13f50:	ldr	r3, [sp, #40]	; 0x28
   13f54:	add	ip, sp, #104	; 0x68
   13f58:	add	ip, ip, r1, lsl #2
   13f5c:	ldr	ip, [ip, #-32]	; 0xffffffe0
   13f60:	add	r3, r1, r3, lsl #2
   13f64:	add	r3, r3, #212	; 0xd4
   13f68:	ldr	r2, [fp, r3, lsl #2]
   13f6c:	add	r2, r2, #1
   13f70:	cmp	ip, r2
   13f74:	str	r2, [fp, r3, lsl #2]
   13f78:	bne	13ed8 <_start@@Base+0x538>
   13f7c:	ldr	r3, [sp, #44]	; 0x2c
   13f80:	mov	lr, #0
   13f84:	add	r2, r0, r3
   13f88:	add	r3, sp, #104	; 0x68
   13f8c:	add	r0, r3, r0, lsl #2
   13f90:	add	r2, r2, #211	; 0xd3
   13f94:	add	r2, fp, r2, lsl #2
   13f98:	sub	r0, r0, #40	; 0x28
   13f9c:	b	13fb8 <_start@@Base+0x618>
   13fa0:	ldr	r3, [r2]
   13fa4:	ldr	ip, [r0], #-4
   13fa8:	add	r3, r3, #1
   13fac:	cmp	r3, ip
   13fb0:	str	r3, [r2]
   13fb4:	bne	13ed8 <_start@@Base+0x538>
   13fb8:	sub	r1, r1, #1
   13fbc:	str	lr, [r2], #-4
   13fc0:	cmn	r1, #1
   13fc4:	bne	13fa0 <_start@@Base+0x600>
   13fc8:	b	13ed8 <_start@@Base+0x538>
   13fcc:	bl	19af0 <handle_coda_error@@Base>
   13fd0:	b	13be8 <_start@@Base+0x248>
   13fd4:	bl	19af0 <handle_coda_error@@Base>
   13fd8:	b	13c58 <_start@@Base+0x2b8>
   13fdc:	ldr	r3, [fp, #136]	; 0x88
   13fe0:	cmp	r3, #0
   13fe4:	ble	13c44 <_start@@Base+0x2a4>
   13fe8:	mov	r6, #0
   13fec:	add	r3, sp, #72	; 0x48
   13ff0:	ldr	r8, [pc, #1560]	; 14610 <_start@@Base+0xc70>
   13ff4:	movw	r9, #53404	; 0xd09c
   13ff8:	movt	r9, #2
   13ffc:	movw	sl, #40388	; 0x9dc4
   14000:	movt	sl, #1
   14004:	str	r3, [sp, #20]
   14008:	str	r6, [sp, #24]
   1400c:	str	r7, [sp, #32]
   14010:	b	14030 <_start@@Base+0x690>
   14014:	ldr	r3, [sp, #72]	; 0x48
   14018:	cmp	r3, #1
   1401c:	beq	14054 <_start@@Base+0x6b4>
   14020:	ldr	r3, [fp, #136]	; 0x88
   14024:	add	r6, r6, #1
   14028:	cmp	r6, r3
   1402c:	bge	140bc <_start@@Base+0x71c>
   14030:	ldr	r0, [r8, #4]!
   14034:	ldr	r1, [sp, #20]
   14038:	bl	12640 <coda_type_get_class@plt>
   1403c:	cmp	r0, #0
   14040:	beq	14014 <_start@@Base+0x674>
   14044:	bl	19af0 <handle_coda_error@@Base>
   14048:	ldr	r3, [sp, #72]	; 0x48
   1404c:	cmp	r3, #1
   14050:	bne	14020 <_start@@Base+0x680>
   14054:	ldr	r3, [sp, #24]
   14058:	add	r5, r3, r3, lsl #2
   1405c:	lsl	r5, r5, #4
   14060:	add	r7, fp, r5
   14064:	ldr	r3, [r7, #804]	; 0x324
   14068:	cmp	r3, #0
   1406c:	ble	140ac <_start@@Base+0x70c>
   14070:	str	r6, [sp, #28]
   14074:	add	r5, r5, #848	; 0x350
   14078:	mov	r4, #0
   1407c:	ldr	r6, [sp, #16]
   14080:	add	r5, fp, r5
   14084:	mov	r1, sl
   14088:	mov	r0, r6
   1408c:	ldr	r3, [r9]
   14090:	add	r4, r4, #1
   14094:	ldr	r2, [r5], #4
   14098:	bl	1243c <fprintf@plt>
   1409c:	ldr	r3, [r7, #804]	; 0x324
   140a0:	cmp	r4, r3
   140a4:	blt	14084 <_start@@Base+0x6e4>
   140a8:	ldr	r6, [sp, #28]
   140ac:	ldr	r3, [sp, #24]
   140b0:	add	r3, r3, #1
   140b4:	str	r3, [sp, #24]
   140b8:	b	14020 <_start@@Base+0x680>
   140bc:	ldr	r7, [sp, #32]
   140c0:	b	13c44 <_start@@Base+0x2a4>
   140c4:	bl	19af0 <handle_coda_error@@Base>
   140c8:	b	13ef8 <_start@@Base+0x558>
   140cc:	add	r1, sp, #72	; 0x48
   140d0:	ldr	r0, [pc, #1332]	; 1460c <_start@@Base+0xc6c>
   140d4:	bl	1258c <coda_cursor_get_bit_size@plt>
   140d8:	cmp	r0, #0
   140dc:	bne	14534 <_start@@Base+0xb94>
   140e0:	ldr	r6, [sp, #72]	; 0x48
   140e4:	ldr	r8, [sp, #76]	; 0x4c
   140e8:	lsr	r2, r6, #3
   140ec:	ands	r1, r6, #7
   140f0:	movne	r1, #1
   140f4:	orr	r2, r2, r8, lsl #29
   140f8:	asr	r3, r8, #3
   140fc:	adds	r4, r2, r1
   14100:	mov	r0, r4
   14104:	adc	r5, r3, #0
   14108:	bl	123ac <malloc@plt>
   1410c:	subs	r7, r0, #0
   14110:	beq	1454c <_start@@Base+0xbac>
   14114:	mov	r2, #0
   14118:	mov	r3, #0
   1411c:	ldr	r0, [pc, #1256]	; 1460c <_start@@Base+0xc6c>
   14120:	mov	r1, r7
   14124:	stm	sp, {r6, r8}
   14128:	bl	1261c <coda_cursor_read_bits@plt>
   1412c:	cmp	r0, #0
   14130:	bne	1452c <_start@@Base+0xb8c>
   14134:	cmp	r4, #1
   14138:	sbcs	r3, r5, #0
   1413c:	blt	143d8 <_start@@Base+0xa38>
   14140:	sub	r2, r4, #1
   14144:	movw	r8, #40564	; 0x9e74
   14148:	movt	r8, #1
   1414c:	movw	r9, #40584	; 0x9e88
   14150:	movt	r9, #1
   14154:	movw	r6, #40572	; 0x9e7c
   14158:	movt	r6, #1
   1415c:	add	r5, r7, r2
   14160:	ldr	sl, [sp, #16]
   14164:	sub	r4, r7, #1
   14168:	b	141a8 <_start@@Base+0x808>
   1416c:	cmp	r2, #12
   14170:	beq	14440 <_start@@Base+0xaa0>
   14174:	bcc	14424 <_start@@Base+0xa84>
   14178:	cmp	r2, #13
   1417c:	beq	14408 <_start@@Base+0xa68>
   14180:	cmp	r2, #92	; 0x5c
   14184:	bne	143ec <_start@@Base+0xa4c>
   14188:	movw	r0, #40580	; 0x9e84
   1418c:	movt	r0, #1
   14190:	mov	r3, sl
   14194:	mov	r2, #2
   14198:	mov	r1, #1
   1419c:	bl	12358 <fwrite@plt>
   141a0:	cmp	r4, r5
   141a4:	beq	143d8 <_start@@Base+0xa38>
   141a8:	ldrb	r2, [r4, #1]!
   141ac:	cmp	r2, #10
   141b0:	beq	14490 <_start@@Base+0xaf0>
   141b4:	bhi	1416c <_start@@Base+0x7cc>
   141b8:	cmp	r2, #8
   141bc:	beq	14474 <_start@@Base+0xad4>
   141c0:	bhi	14458 <_start@@Base+0xab8>
   141c4:	cmp	r2, #7
   141c8:	bne	143ec <_start@@Base+0xa4c>
   141cc:	movw	r0, #40552	; 0x9e68
   141d0:	movt	r0, #1
   141d4:	mov	r3, sl
   141d8:	mov	r2, #2
   141dc:	mov	r1, #1
   141e0:	bl	12358 <fwrite@plt>
   141e4:	b	141a0 <_start@@Base+0x800>
   141e8:	add	r1, sp, #72	; 0x48
   141ec:	ldr	r0, [pc, #1048]	; 1460c <_start@@Base+0xc6c>
   141f0:	bl	1240c <coda_cursor_get_string_length@plt>
   141f4:	cmp	r0, #0
   141f8:	bne	144f4 <_start@@Base+0xb54>
   141fc:	ldr	r0, [sp, #72]	; 0x48
   14200:	add	r0, r0, #1
   14204:	bl	123ac <malloc@plt>
   14208:	subs	r4, r0, #0
   1420c:	beq	14580 <_start@@Base+0xbe0>
   14210:	ldr	r2, [sp, #72]	; 0x48
   14214:	mov	r1, r4
   14218:	ldr	r0, [pc, #1004]	; 1460c <_start@@Base+0xc6c>
   1421c:	add	r2, r2, #1
   14220:	bl	123d0 <coda_cursor_read_string@plt>
   14224:	cmp	r0, #0
   14228:	bne	1450c <_start@@Base+0xb6c>
   1422c:	movw	r3, #53804	; 0xd22c
   14230:	movt	r3, #2
   14234:	ldr	r3, [r3]
   14238:	cmp	r3, #0
   1423c:	beq	144b8 <_start@@Base+0xb18>
   14240:	movw	r1, #40544	; 0x9e60
   14244:	movt	r1, #1
   14248:	ldr	r0, [sp, #16]
   1424c:	mov	r2, r4
   14250:	bl	1243c <fprintf@plt>
   14254:	mov	r0, r4
   14258:	bl	12274 <free@plt>
   1425c:	b	13d2c <_start@@Base+0x38c>
   14260:	add	r1, sp, #72	; 0x48
   14264:	ldr	r0, [pc, #928]	; 1460c <_start@@Base+0xc6c>
   14268:	bl	12484 <coda_cursor_read_char@plt>
   1426c:	cmp	r0, #0
   14270:	bne	1451c <_start@@Base+0xb7c>
   14274:	movw	r3, #53804	; 0xd22c
   14278:	movt	r3, #2
   1427c:	ldrb	r2, [sp, #72]	; 0x48
   14280:	ldr	r3, [r3]
   14284:	cmp	r3, #0
   14288:	beq	144a8 <_start@@Base+0xb08>
   1428c:	movw	r1, #40396	; 0x9dcc
   14290:	movt	r1, #1
   14294:	ldr	r0, [sp, #16]
   14298:	bl	1243c <fprintf@plt>
   1429c:	b	13d2c <_start@@Base+0x38c>
   142a0:	add	r1, sp, #72	; 0x48
   142a4:	ldr	r0, [pc, #864]	; 1460c <_start@@Base+0xc6c>
   142a8:	bl	12424 <coda_cursor_read_double@plt>
   142ac:	cmp	r0, #0
   142b0:	bne	144ec <_start@@Base+0xb4c>
   142b4:	ldr	r1, [sp, #60]	; 0x3c
   142b8:	ldrd	r2, [sp, #72]	; 0x48
   142bc:	cmp	r1, #8
   142c0:	beq	144d8 <_start@@Base+0xb38>
   142c4:	movw	r1, #40604	; 0x9e9c
   142c8:	movt	r1, #1
   142cc:	ldr	r0, [sp, #16]
   142d0:	bl	1243c <fprintf@plt>
   142d4:	b	13d2c <_start@@Base+0x38c>
   142d8:	add	r1, sp, #64	; 0x40
   142dc:	ldr	r0, [pc, #808]	; 1460c <_start@@Base+0xc6c>
   142e0:	bl	12418 <coda_cursor_read_uint64@plt>
   142e4:	cmp	r0, #0
   142e8:	bne	14524 <_start@@Base+0xb84>
   142ec:	add	r2, sp, #72	; 0x48
   142f0:	ldrd	r0, [sp, #64]	; 0x40
   142f4:	bl	12268 <coda_str64u@plt>
   142f8:	add	r0, sp, #72	; 0x48
   142fc:	ldr	r1, [sp, #16]
   14300:	bl	12604 <fputs@plt>
   14304:	b	13d2c <_start@@Base+0x38c>
   14308:	add	r1, sp, #64	; 0x40
   1430c:	ldr	r0, [pc, #760]	; 1460c <_start@@Base+0xc6c>
   14310:	bl	1252c <coda_cursor_read_int64@plt>
   14314:	cmp	r0, #0
   14318:	bne	144fc <_start@@Base+0xb5c>
   1431c:	add	r2, sp, #72	; 0x48
   14320:	ldrd	r0, [sp, #64]	; 0x40
   14324:	bl	12628 <coda_str64@plt>
   14328:	add	r0, sp, #72	; 0x48
   1432c:	ldr	r1, [sp, #16]
   14330:	bl	12604 <fputs@plt>
   14334:	b	13d2c <_start@@Base+0x38c>
   14338:	add	r1, sp, #72	; 0x48
   1433c:	ldr	r0, [pc, #712]	; 1460c <_start@@Base+0xc6c>
   14340:	bl	12298 <coda_cursor_read_uint32@plt>
   14344:	cmp	r0, #0
   14348:	bne	14504 <_start@@Base+0xb64>
   1434c:	movw	r1, #40592	; 0x9e90
   14350:	movt	r1, #1
   14354:	ldr	r0, [sp, #16]
   14358:	ldr	r2, [sp, #72]	; 0x48
   1435c:	bl	1243c <fprintf@plt>
   14360:	b	13d2c <_start@@Base+0x38c>
   14364:	add	r1, sp, #72	; 0x48
   14368:	ldr	r0, [pc, #668]	; 1460c <_start@@Base+0xc6c>
   1436c:	bl	125bc <coda_cursor_read_int32@plt>
   14370:	cmp	r0, #0
   14374:	bne	14514 <_start@@Base+0xb74>
   14378:	movw	r1, #42032	; 0xa430
   1437c:	movt	r1, #1
   14380:	ldr	r0, [sp, #16]
   14384:	ldr	r2, [sp, #72]	; 0x48
   14388:	bl	1243c <fprintf@plt>
   1438c:	b	13d2c <_start@@Base+0x38c>
   14390:	bl	19af0 <handle_coda_error@@Base>
   14394:	b	13ddc <_start@@Base+0x43c>
   14398:	movw	r3, #40368	; 0x9db0
   1439c:	movt	r3, #1
   143a0:	movw	r1, #40404	; 0x9dd4
   143a4:	movt	r1, #1
   143a8:	movw	r0, #41456	; 0xa1f0
   143ac:	movt	r0, #1
   143b0:	mov	r2, #368	; 0x170
   143b4:	bl	12634 <__assert_fail@plt>
   143b8:	bl	19af0 <handle_coda_error@@Base>
   143bc:	b	13e7c <_start@@Base+0x4dc>
   143c0:	bl	19af0 <handle_coda_error@@Base>
   143c4:	b	13dac <_start@@Base+0x40c>
   143c8:	bl	19af0 <handle_coda_error@@Base>
   143cc:	b	13e20 <_start@@Base+0x480>
   143d0:	bl	19af0 <handle_coda_error@@Base>
   143d4:	b	13c0c <_start@@Base+0x26c>
   143d8:	mov	r0, r7
   143dc:	bl	12274 <free@plt>
   143e0:	b	13d2c <_start@@Base+0x38c>
   143e4:	bl	19af0 <handle_coda_error@@Base>
   143e8:	b	13c98 <_start@@Base+0x2f8>
   143ec:	sub	r3, r2, #32
   143f0:	cmp	r3, #94	; 0x5e
   143f4:	bhi	144c8 <_start@@Base+0xb28>
   143f8:	mov	r0, r2
   143fc:	mov	r1, sl
   14400:	bl	12574 <fputc@plt>
   14404:	b	141a0 <_start@@Base+0x800>
   14408:	movw	r0, #40576	; 0x9e80
   1440c:	movt	r0, #1
   14410:	mov	r3, sl
   14414:	mov	r2, #2
   14418:	mov	r1, #1
   1441c:	bl	12358 <fwrite@plt>
   14420:	b	141a0 <_start@@Base+0x800>
   14424:	movw	r0, #40568	; 0x9e78
   14428:	movt	r0, #1
   1442c:	mov	r3, sl
   14430:	mov	r2, #2
   14434:	mov	r1, #1
   14438:	bl	12358 <fwrite@plt>
   1443c:	b	141a0 <_start@@Base+0x800>
   14440:	mov	r3, sl
   14444:	mov	r2, #2
   14448:	mov	r1, #1
   1444c:	mov	r0, r6
   14450:	bl	12358 <fwrite@plt>
   14454:	b	141a0 <_start@@Base+0x800>
   14458:	movw	r0, #40560	; 0x9e70
   1445c:	movt	r0, #1
   14460:	mov	r3, sl
   14464:	mov	r2, #2
   14468:	mov	r1, #1
   1446c:	bl	12358 <fwrite@plt>
   14470:	b	141a0 <_start@@Base+0x800>
   14474:	movw	r0, #40556	; 0x9e6c
   14478:	movt	r0, #1
   1447c:	mov	r3, sl
   14480:	mov	r2, #2
   14484:	mov	r1, #1
   14488:	bl	12358 <fwrite@plt>
   1448c:	b	141a0 <_start@@Base+0x800>
   14490:	mov	r3, sl
   14494:	mov	r2, #2
   14498:	mov	r1, #1
   1449c:	mov	r0, r8
   144a0:	bl	12358 <fwrite@plt>
   144a4:	b	141a0 <_start@@Base+0x800>
   144a8:	mov	r0, r2
   144ac:	ldr	r1, [sp, #16]
   144b0:	bl	12574 <fputc@plt>
   144b4:	b	13d2c <_start@@Base+0x38c>
   144b8:	mov	r0, r4
   144bc:	ldr	r1, [sp, #16]
   144c0:	bl	12604 <fputs@plt>
   144c4:	b	14254 <_start@@Base+0x8b4>
   144c8:	mov	r1, r9
   144cc:	mov	r0, sl
   144d0:	bl	1243c <fprintf@plt>
   144d4:	b	141a0 <_start@@Base+0x800>
   144d8:	movw	r1, #40596	; 0x9e94
   144dc:	movt	r1, #1
   144e0:	ldr	r0, [sp, #16]
   144e4:	bl	1243c <fprintf@plt>
   144e8:	b	13d2c <_start@@Base+0x38c>
   144ec:	bl	19af0 <handle_coda_error@@Base>
   144f0:	b	142b4 <_start@@Base+0x914>
   144f4:	bl	19af0 <handle_coda_error@@Base>
   144f8:	b	141fc <_start@@Base+0x85c>
   144fc:	bl	19af0 <handle_coda_error@@Base>
   14500:	b	1431c <_start@@Base+0x97c>
   14504:	bl	19af0 <handle_coda_error@@Base>
   14508:	b	1434c <_start@@Base+0x9ac>
   1450c:	bl	19af0 <handle_coda_error@@Base>
   14510:	b	1422c <_start@@Base+0x88c>
   14514:	bl	19af0 <handle_coda_error@@Base>
   14518:	b	14378 <_start@@Base+0x9d8>
   1451c:	bl	19af0 <handle_coda_error@@Base>
   14520:	b	14274 <_start@@Base+0x8d4>
   14524:	bl	19af0 <handle_coda_error@@Base>
   14528:	b	142ec <_start@@Base+0x94c>
   1452c:	bl	19af0 <handle_coda_error@@Base>
   14530:	b	14134 <_start@@Base+0x794>
   14534:	bl	19af0 <handle_coda_error@@Base>
   14538:	b	140e0 <_start@@Base+0x740>
   1453c:	ldr	r1, [sp, #16]
   14540:	ldr	r0, [sp, #20]
   14544:	bl	12604 <fputs@plt>
   14548:	b	13d2c <_start@@Base+0x38c>
   1454c:	mov	r0, #163	; 0xa3
   14550:	mov	r2, r4
   14554:	movw	r3, #40404	; 0x9dd4
   14558:	movt	r3, #1
   1455c:	movw	r1, #40488	; 0x9e28
   14560:	movt	r1, #1
   14564:	str	r0, [sp]
   14568:	mvn	r0, #0
   1456c:	bl	1222c <coda_set_error@plt>
   14570:	bl	19af0 <handle_coda_error@@Base>
   14574:	ldr	r6, [sp, #72]	; 0x48
   14578:	ldr	r8, [sp, #76]	; 0x4c
   1457c:	b	14114 <_start@@Base+0x774>
   14580:	ldr	r2, [sp, #72]	; 0x48
   14584:	mov	r0, #126	; 0x7e
   14588:	movw	r3, #40404	; 0x9dd4
   1458c:	movt	r3, #1
   14590:	movw	r1, #40488	; 0x9e28
   14594:	movt	r1, #1
   14598:	str	r0, [sp]
   1459c:	mvn	r0, #0
   145a0:	add	r2, r2, #1
   145a4:	bl	1222c <coda_set_error@plt>
   145a8:	bl	19af0 <handle_coda_error@@Base>
   145ac:	b	14210 <_start@@Base+0x870>
   145b0:	vldr	d0, [sp, #64]	; 0x40
   145b4:	bl	122d4 <coda_isInf@plt>
   145b8:	cmp	r0, #0
   145bc:	bne	13ccc <_start@@Base+0x32c>
   145c0:	add	r3, sp, #72	; 0x48
   145c4:	movw	r0, #40612	; 0x9ea4
   145c8:	movt	r0, #1
   145cc:	mov	r1, r3
   145d0:	vldr	d0, [sp, #64]	; 0x40
   145d4:	str	r3, [sp, #20]
   145d8:	bl	12250 <coda_time_double_to_string@plt>
   145dc:	cmp	r0, #0
   145e0:	beq	13d04 <_start@@Base+0x364>
   145e4:	bl	19af0 <handle_coda_error@@Base>
   145e8:	b	13d04 <_start@@Base+0x364>
   145ec:	movw	r3, #40368	; 0x9db0
   145f0:	movt	r3, #1
   145f4:	movw	r1, #40404	; 0x9dd4
   145f8:	movt	r1, #1
   145fc:	movw	r0, #41456	; 0xa1f0
   14600:	movt	r0, #1
   14604:	movw	r2, #294	; 0x126
   14608:	bl	12634 <__assert_fail@plt>
   1460c:	andeq	ip, r2, r0, lsl #5
   14610:	strdeq	ip, [r2], -r4

00014614 <export_data_element_to_ascii@@Base>:
   14614:	movw	r3, #49576	; 0xc1a8
   14618:	movt	r3, #2
   1461c:	str	r4, [sp, #-8]!
   14620:	ldr	r2, [r3]
   14624:	str	lr, [sp, #4]
   14628:	cmp	r2, #0
   1462c:	beq	146d4 <export_data_element_to_ascii@@Base+0xc0>
   14630:	mov	r2, #0
   14634:	str	r2, [r3]
   14638:	movw	r3, #53800	; 0xd228
   1463c:	movt	r3, #2
   14640:	ldr	r3, [r3]
   14644:	cmp	r3, #0
   14648:	bne	146ac <export_data_element_to_ascii@@Base+0x98>
   1464c:	movw	r2, #53432	; 0xd0b8
   14650:	movt	r2, #2
   14654:	ldr	r3, [r2]
   14658:	cmp	r3, #0
   1465c:	ble	14678 <export_data_element_to_ascii@@Base+0x64>
   14660:	add	r3, r3, #37	; 0x25
   14664:	lsl	r3, r3, #3
   14668:	add	r2, r2, r3
   1466c:	ldrd	r2, [r2]
   14670:	orrs	r3, r2, r3
   14674:	beq	146a0 <export_data_element_to_ascii@@Base+0x8c>
   14678:	mov	r3, #0
   1467c:	movw	r2, #53400	; 0xd098
   14680:	movt	r2, #2
   14684:	mov	r1, r3
   14688:	ldr	r4, [sp]
   1468c:	ldr	r0, [r2]
   14690:	mov	r2, r3
   14694:	ldr	lr, [sp, #4]
   14698:	add	sp, sp, #8
   1469c:	b	13a90 <_start@@Base+0xf0>
   146a0:	ldr	r4, [sp]
   146a4:	add	sp, sp, #4
   146a8:	pop	{pc}		; (ldr pc, [sp], #4)
   146ac:	movw	r4, #53400	; 0xd098
   146b0:	movt	r4, #2
   146b4:	mov	r2, #0
   146b8:	mov	r1, #2
   146bc:	ldr	r0, [r4]
   146c0:	bl	17d14 <print_full_field_name@@Base>
   146c4:	mov	r0, #10
   146c8:	ldr	r1, [r4]
   146cc:	bl	12574 <fputc@plt>
   146d0:	b	1464c <export_data_element_to_ascii@@Base+0x38>
   146d4:	movw	r3, #53400	; 0xd098
   146d8:	movt	r3, #2
   146dc:	mov	r0, #10
   146e0:	ldr	r1, [r3]
   146e4:	bl	12574 <fputc@plt>
   146e8:	b	14638 <export_data_element_to_ascii@@Base+0x24>
   146ec:	push	{r0, r1, r2, r3}
   146f0:	movw	r3, #53400	; 0xd098
   146f4:	movt	r3, #2
   146f8:	push	{lr}		; (str lr, [sp, #-4]!)
   146fc:	sub	sp, sp, #12
   14700:	ldr	r1, [sp, #16]
   14704:	add	ip, sp, #20
   14708:	mov	r2, ip
   1470c:	ldr	r0, [r3]
   14710:	str	ip, [sp, #4]
   14714:	bl	12538 <vfprintf@plt>
   14718:	add	sp, sp, #12
   1471c:	pop	{lr}		; (ldr lr, [sp], #4)
   14720:	add	sp, sp, #16
   14724:	bx	lr
   14728:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1472c:	subs	r5, r1, #0
   14730:	strd	r6, [sp, #8]
   14734:	str	r8, [sp, #16]
   14738:	str	lr, [sp, #20]
   1473c:	ble	147cc <export_data_element_to_ascii@@Base+0x1b8>
   14740:	sub	r4, r0, #1
   14744:	movw	r6, #40564	; 0x9e74
   14748:	movt	r6, #1
   1474c:	movw	r8, #40584	; 0x9e88
   14750:	movt	r8, #1
   14754:	movw	r7, #40696	; 0x9ef8
   14758:	movt	r7, #1
   1475c:	add	r5, r4, r5
   14760:	b	14794 <export_data_element_to_ascii@@Base+0x180>
   14764:	cmp	r1, #12
   14768:	beq	14844 <export_data_element_to_ascii@@Base+0x230>
   1476c:	bcc	14834 <export_data_element_to_ascii@@Base+0x220>
   14770:	cmp	r1, #13
   14774:	beq	14824 <export_data_element_to_ascii@@Base+0x210>
   14778:	cmp	r1, #92	; 0x5c
   1477c:	bne	1480c <export_data_element_to_ascii@@Base+0x1f8>
   14780:	movw	r0, #40580	; 0x9e84
   14784:	movt	r0, #1
   14788:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   1478c:	cmp	r4, r5
   14790:	beq	147cc <export_data_element_to_ascii@@Base+0x1b8>
   14794:	ldrb	r1, [r4, #1]!
   14798:	cmp	r1, #10
   1479c:	beq	147e0 <export_data_element_to_ascii@@Base+0x1cc>
   147a0:	bhi	14764 <export_data_element_to_ascii@@Base+0x150>
   147a4:	cmp	r1, #8
   147a8:	beq	147fc <export_data_element_to_ascii@@Base+0x1e8>
   147ac:	bhi	147ec <export_data_element_to_ascii@@Base+0x1d8>
   147b0:	cmp	r1, #7
   147b4:	bne	1480c <export_data_element_to_ascii@@Base+0x1f8>
   147b8:	movw	r0, #40552	; 0x9e68
   147bc:	movt	r0, #1
   147c0:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   147c4:	cmp	r4, r5
   147c8:	bne	14794 <export_data_element_to_ascii@@Base+0x180>
   147cc:	ldrd	r4, [sp]
   147d0:	ldrd	r6, [sp, #8]
   147d4:	ldr	r8, [sp, #16]
   147d8:	add	sp, sp, #20
   147dc:	pop	{pc}		; (ldr pc, [sp], #4)
   147e0:	mov	r0, r6
   147e4:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   147e8:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   147ec:	movw	r0, #40560	; 0x9e70
   147f0:	movt	r0, #1
   147f4:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   147f8:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   147fc:	movw	r0, #40556	; 0x9e6c
   14800:	movt	r0, #1
   14804:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14808:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   1480c:	sub	r3, r1, #32
   14810:	cmp	r3, #94	; 0x5e
   14814:	movls	r0, r7
   14818:	movhi	r0, r8
   1481c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14820:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   14824:	movw	r0, #40576	; 0x9e80
   14828:	movt	r0, #1
   1482c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14830:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   14834:	movw	r0, #40568	; 0x9e78
   14838:	movt	r0, #1
   1483c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14840:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   14844:	movw	r0, #40572	; 0x9e7c
   14848:	movt	r0, #1
   1484c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14850:	b	1478c <export_data_element_to_ascii@@Base+0x178>
   14854:	push	{r0, r1, r2, r3}
   14858:	movw	r3, #49604	; 0xc1c4
   1485c:	movt	r3, #2
   14860:	strd	r4, [sp, #-16]!
   14864:	ldr	r4, [r3]
   14868:	str	r6, [sp, #8]
   1486c:	str	lr, [sp, #12]
   14870:	sub	sp, sp, #8
   14874:	cmp	r4, #0
   14878:	blt	148e0 <export_data_element_to_ascii@@Base+0x2cc>
   1487c:	movwne	r6, #40672	; 0x9ee0
   14880:	movw	r5, #53400	; 0xd098
   14884:	movt	r5, #2
   14888:	movtne	r6, #1
   1488c:	beq	148ac <export_data_element_to_ascii@@Base+0x298>
   14890:	mov	r2, #2
   14894:	mov	r1, #1
   14898:	ldr	r3, [r5]
   1489c:	mov	r0, r6
   148a0:	bl	12358 <fwrite@plt>
   148a4:	subs	r4, r4, #1
   148a8:	bne	14890 <export_data_element_to_ascii@@Base+0x27c>
   148ac:	ldr	r1, [sp, #24]
   148b0:	add	r3, sp, #28
   148b4:	mov	r2, r3
   148b8:	ldr	r0, [r5]
   148bc:	str	r3, [sp, #4]
   148c0:	bl	12538 <vfprintf@plt>
   148c4:	add	sp, sp, #8
   148c8:	ldrd	r4, [sp]
   148cc:	ldr	r6, [sp, #8]
   148d0:	ldr	lr, [sp, #12]
   148d4:	add	sp, sp, #16
   148d8:	add	sp, sp, #16
   148dc:	bx	lr
   148e0:	movw	r3, #40676	; 0x9ee4
   148e4:	movt	r3, #1
   148e8:	movw	r1, #40700	; 0x9efc
   148ec:	movt	r1, #1
   148f0:	movw	r0, #40784	; 0x9f50
   148f4:	movt	r0, #1
   148f8:	mov	r2, #44	; 0x2c
   148fc:	bl	12634 <__assert_fail@plt>
   14900:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14904:	mov	r4, r0
   14908:	strd	r6, [sp, #8]
   1490c:	mov	r6, r1
   14910:	strd	r8, [sp, #16]
   14914:	strd	sl, [sp, #24]
   14918:	str	lr, [sp, #32]
   1491c:	sub	sp, sp, #652	; 0x28c
   14920:	add	r1, sp, #48	; 0x30
   14924:	bl	122f8 <coda_cursor_has_attributes@plt>
   14928:	cmp	r0, #0
   1492c:	bne	14b0c <export_data_element_to_ascii@@Base+0x4f8>
   14930:	ldr	r3, [sp, #48]	; 0x30
   14934:	cmp	r3, #0
   14938:	bne	14ab8 <export_data_element_to_ascii@@Base+0x4a4>
   1493c:	add	r1, sp, #44	; 0x2c
   14940:	mov	r0, r4
   14944:	bl	12304 <coda_cursor_get_type_class@plt>
   14948:	cmp	r0, #0
   1494c:	bne	14ab0 <export_data_element_to_ascii@@Base+0x49c>
   14950:	ldr	r3, [sp, #44]	; 0x2c
   14954:	cmp	r3, #6
   14958:	ldrls	pc, [pc, r3, lsl #2]
   1495c:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14960:	andeq	r4, r1, ip, ror r9
   14964:	andeq	r4, r1, r8, ror #22
   14968:	andeq	r4, r1, ip, lsl #27
   1496c:	andeq	r4, r1, ip, lsl #27
   14970:	andeq	r4, r1, ip, lsl #27
   14974:	andeq	r4, r1, ip, lsl #27
   14978:	andeq	r4, r1, r4, lsl fp
   1497c:	add	r1, sp, #52	; 0x34
   14980:	mov	r0, r4
   14984:	bl	1225c <coda_cursor_get_num_elements@plt>
   14988:	cmp	r0, #0
   1498c:	bne	14e14 <export_data_element_to_ascii@@Base+0x800>
   14990:	ldr	r3, [sp, #52]	; 0x34
   14994:	cmp	r3, #0
   14998:	ble	14a94 <export_data_element_to_ascii@@Base+0x480>
   1499c:	add	r1, sp, #56	; 0x38
   149a0:	mov	r0, r4
   149a4:	bl	122bc <coda_cursor_get_type@plt>
   149a8:	cmp	r0, #0
   149ac:	bne	15408 <export_data_element_to_ascii@@Base+0xdf4>
   149b0:	add	r1, sp, #60	; 0x3c
   149b4:	ldr	r0, [sp, #56]	; 0x38
   149b8:	bl	124c0 <coda_type_get_record_union_status@plt>
   149bc:	cmp	r0, #0
   149c0:	bne	15400 <export_data_element_to_ascii@@Base+0xdec>
   149c4:	ldr	r1, [sp, #60]	; 0x3c
   149c8:	cmp	r1, #0
   149cc:	beq	14f9c <export_data_element_to_ascii@@Base+0x988>
   149d0:	add	r1, sp, #64	; 0x40
   149d4:	mov	r0, r4
   149d8:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   149dc:	cmp	r0, #0
   149e0:	bne	154bc <export_data_element_to_ascii@@Base+0xea8>
   149e4:	add	r2, sp, #72	; 0x48
   149e8:	ldr	r0, [sp, #56]	; 0x38
   149ec:	ldr	r1, [sp, #64]	; 0x40
   149f0:	bl	125f8 <coda_type_get_record_field_name@plt>
   149f4:	cmp	r0, #0
   149f8:	bne	154b4 <export_data_element_to_ascii@@Base+0xea0>
   149fc:	mov	r0, r4
   14a00:	ldr	r1, [sp, #64]	; 0x40
   14a04:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   14a08:	cmp	r0, #0
   14a0c:	bne	154ac <export_data_element_to_ascii@@Base+0xe98>
   14a10:	movw	r0, #40812	; 0x9f6c
   14a14:	movt	r0, #1
   14a18:	ldr	r1, [sp, #72]	; 0x48
   14a1c:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   14a20:	movw	r3, #49580	; 0xc1ac
   14a24:	movt	r3, #2
   14a28:	ldr	r3, [r3]
   14a2c:	cmp	r3, #0
   14a30:	bne	1543c <export_data_element_to_ascii@@Base+0xe28>
   14a34:	movw	r0, #46756	; 0xb6a4
   14a38:	movt	r0, #1
   14a3c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14a40:	movw	r5, #49604	; 0xc1c4
   14a44:	movt	r5, #2
   14a48:	movw	r2, #49584	; 0xc1b0
   14a4c:	movt	r2, #2
   14a50:	ldr	r3, [r5]
   14a54:	ldr	r2, [r2]
   14a58:	add	r3, r3, #1
   14a5c:	cmp	r2, r6
   14a60:	str	r3, [r5]
   14a64:	movle	r1, #0
   14a68:	movgt	r1, #1
   14a6c:	orrs	r3, r1, r2, lsr #31
   14a70:	beq	15514 <export_data_element_to_ascii@@Base+0xf00>
   14a74:	add	r1, r6, #1
   14a78:	mov	r0, r4
   14a7c:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   14a80:	ldr	r3, [r5]
   14a84:	mov	r0, r4
   14a88:	sub	r3, r3, #1
   14a8c:	str	r3, [r5]
   14a90:	bl	123dc <coda_cursor_goto_parent@plt>
   14a94:	add	sp, sp, #652	; 0x28c
   14a98:	ldrd	r4, [sp]
   14a9c:	ldrd	r6, [sp, #8]
   14aa0:	ldrd	r8, [sp, #16]
   14aa4:	ldrd	sl, [sp, #24]
   14aa8:	add	sp, sp, #32
   14aac:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab0:	bl	19af0 <handle_coda_error@@Base>
   14ab4:	b	14950 <export_data_element_to_ascii@@Base+0x33c>
   14ab8:	mov	r0, r4
   14abc:	bl	12478 <coda_cursor_goto_attributes@plt>
   14ac0:	cmp	r0, #0
   14ac4:	bne	14e0c <export_data_element_to_ascii@@Base+0x7f8>
   14ac8:	movw	r0, #40796	; 0x9f5c
   14acc:	movt	r0, #1
   14ad0:	movw	r5, #49604	; 0xc1c4
   14ad4:	movt	r5, #2
   14ad8:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   14adc:	ldr	r3, [r5]
   14ae0:	mov	r0, r4
   14ae4:	mov	r1, r6
   14ae8:	add	r3, r3, #1
   14aec:	str	r3, [r5]
   14af0:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   14af4:	ldr	r3, [r5]
   14af8:	mov	r0, r4
   14afc:	sub	r3, r3, #1
   14b00:	str	r3, [r5]
   14b04:	bl	123dc <coda_cursor_goto_parent@plt>
   14b08:	b	1493c <export_data_element_to_ascii@@Base+0x328>
   14b0c:	bl	19af0 <handle_coda_error@@Base>
   14b10:	b	14930 <export_data_element_to_ascii@@Base+0x31c>
   14b14:	add	r1, sp, #72	; 0x48
   14b18:	mov	r0, r4
   14b1c:	bl	12340 <coda_cursor_get_special_type@plt>
   14b20:	cmp	r0, #0
   14b24:	bne	14e50 <export_data_element_to_ascii@@Base+0x83c>
   14b28:	ldr	r0, [sp, #72]	; 0x48
   14b2c:	cmp	r0, #0
   14b30:	bne	14e1c <export_data_element_to_ascii@@Base+0x808>
   14b34:	bl	121a8 <coda_type_get_special_type_name@plt>
   14b38:	mov	r1, r0
   14b3c:	movw	r0, #40940	; 0x9fec
   14b40:	movt	r0, #1
   14b44:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   14b48:	ldr	r3, [sp, #72]	; 0x48
   14b4c:	cmp	r3, #3
   14b50:	ldrls	pc, [pc, r3, lsl #2]
   14b54:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14b58:	andeq	r4, r1, r4, ror #30
   14b5c:	andeq	r4, r1, r4, ror pc
   14b60:	andeq	r4, r1, ip, lsl pc
   14b64:	andeq	r4, r1, r8, ror #29
   14b68:	add	r1, sp, #60	; 0x3c
   14b6c:	add	r2, sp, #96	; 0x60
   14b70:	mov	r0, r4
   14b74:	bl	12508 <coda_cursor_get_array_dim@plt>
   14b78:	cmp	r0, #0
   14b7c:	bne	14e58 <export_data_element_to_ascii@@Base+0x844>
   14b80:	ldr	r1, [sp, #60]	; 0x3c
   14b84:	cmp	r1, #0
   14b88:	str	r1, [sp, #16]
   14b8c:	blt	14a94 <export_data_element_to_ascii@@Base+0x480>
   14b90:	beq	154dc <export_data_element_to_ascii@@Base+0xec8>
   14b94:	add	r3, sp, #92	; 0x5c
   14b98:	add	r2, sp, #124	; 0x7c
   14b9c:	add	fp, r3, r1, lsl #2
   14ba0:	mov	r8, #1
   14ba4:	mov	r0, #0
   14ba8:	ldr	r1, [r3, #4]!
   14bac:	str	r0, [r2, #4]!
   14bb0:	cmp	r3, fp
   14bb4:	mul	r8, r1, r8
   14bb8:	bne	14ba8 <export_data_element_to_ascii@@Base+0x594>
   14bbc:	cmp	r8, #0
   14bc0:	subgt	r3, r8, #1
   14bc4:	strgt	r3, [sp, #16]
   14bc8:	ble	14a94 <export_data_element_to_ascii@@Base+0x480>
   14bcc:	mov	r0, r4
   14bd0:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   14bd4:	cmp	r0, #0
   14bd8:	bne	15418 <export_data_element_to_ascii@@Base+0xe04>
   14bdc:	movw	r3, #49580	; 0xc1ac
   14be0:	movt	r3, #2
   14be4:	movw	r5, #49604	; 0xc1c4
   14be8:	movt	r5, #2
   14bec:	str	r3, [sp, #8]
   14bf0:	movw	r3, #40836	; 0x9f84
   14bf4:	movt	r3, #1
   14bf8:	movw	fp, #49584	; 0xc1b0
   14bfc:	movt	fp, #2
   14c00:	str	r3, [sp, #20]
   14c04:	mov	r3, #0
   14c08:	movw	r9, #40840	; 0x9f88
   14c0c:	movt	r9, #1
   14c10:	movw	sl, #40844	; 0x9f8c
   14c14:	movt	sl, #1
   14c18:	str	r8, [sp, #24]
   14c1c:	mov	r8, r3
   14c20:	str	r6, [sp, #28]
   14c24:	ldr	r0, [sp, #20]
   14c28:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   14c2c:	ldr	r3, [sp, #60]	; 0x3c
   14c30:	cmp	r3, #0
   14c34:	addgt	r7, sp, #124	; 0x7c
   14c38:	movgt	r6, #0
   14c3c:	bgt	14c50 <export_data_element_to_ascii@@Base+0x63c>
   14c40:	b	14c84 <export_data_element_to_ascii@@Base+0x670>
   14c44:	add	r6, r6, #1
   14c48:	cmp	r6, r3
   14c4c:	bge	14c84 <export_data_element_to_ascii@@Base+0x670>
   14c50:	mov	r0, r9
   14c54:	ldr	r1, [r7, #4]!
   14c58:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14c5c:	ldr	r3, [sp, #60]	; 0x3c
   14c60:	sub	r2, r3, #1
   14c64:	cmp	r2, r6
   14c68:	ble	14c44 <export_data_element_to_ascii@@Base+0x630>
   14c6c:	mov	r0, sl
   14c70:	add	r6, r6, #1
   14c74:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14c78:	ldr	r3, [sp, #60]	; 0x3c
   14c7c:	cmp	r6, r3
   14c80:	blt	14c50 <export_data_element_to_ascii@@Base+0x63c>
   14c84:	movw	r0, #45832	; 0xb308
   14c88:	movt	r0, #1
   14c8c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14c90:	ldr	r3, [sp, #8]
   14c94:	ldr	r3, [r3]
   14c98:	cmp	r3, #0
   14c9c:	bne	152cc <export_data_element_to_ascii@@Base+0xcb8>
   14ca0:	movw	r0, #46756	; 0xb6a4
   14ca4:	movt	r0, #1
   14ca8:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14cac:	ldr	r3, [r5]
   14cb0:	ldr	r2, [fp]
   14cb4:	ldr	r0, [sp, #28]
   14cb8:	add	r3, r3, #1
   14cbc:	str	r3, [r5]
   14cc0:	cmp	r2, r0
   14cc4:	movle	r1, #0
   14cc8:	movgt	r1, #1
   14ccc:	orrs	r3, r1, r2, lsr #31
   14cd0:	beq	153e0 <export_data_element_to_ascii@@Base+0xdcc>
   14cd4:	add	r1, r0, #1
   14cd8:	mov	r0, r4
   14cdc:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   14ce0:	ldr	r3, [r5]
   14ce4:	ldr	r0, [sp, #60]	; 0x3c
   14ce8:	sub	r3, r3, #1
   14cec:	subs	r1, r0, #1
   14cf0:	str	r3, [r5]
   14cf4:	bmi	14d64 <export_data_element_to_ascii@@Base+0x750>
   14cf8:	add	r3, sp, #648	; 0x288
   14cfc:	add	r2, r3, r1, lsl #2
   14d00:	ldr	ip, [r2, #-552]	; 0xfffffdd8
   14d04:	ldr	r3, [r2, #-520]	; 0xfffffdf8
   14d08:	add	r3, r3, #1
   14d0c:	cmp	ip, r3
   14d10:	str	r3, [r2, #-520]	; 0xfffffdf8
   14d14:	bne	14d64 <export_data_element_to_ascii@@Base+0x750>
   14d18:	sub	r0, r0, #-1073741822	; 0xc0000002
   14d1c:	add	r3, sp, #648	; 0x288
   14d20:	lsl	r0, r0, #2
   14d24:	mov	lr, #0
   14d28:	add	r2, r3, r0
   14d2c:	add	r3, sp, #96	; 0x60
   14d30:	add	r0, r3, r0
   14d34:	sub	r2, r2, #516	; 0x204
   14d38:	b	14d54 <export_data_element_to_ascii@@Base+0x740>
   14d3c:	ldr	r3, [r2]
   14d40:	ldr	ip, [r0], #-4
   14d44:	add	r3, r3, #1
   14d48:	cmp	r3, ip
   14d4c:	str	r3, [r2]
   14d50:	bne	14d64 <export_data_element_to_ascii@@Base+0x750>
   14d54:	sub	r1, r1, #1
   14d58:	str	lr, [r2], #-4
   14d5c:	cmn	r1, #1
   14d60:	bne	14d3c <export_data_element_to_ascii@@Base+0x728>
   14d64:	ldr	r3, [sp, #16]
   14d68:	cmp	r8, r3
   14d6c:	blt	152b4 <export_data_element_to_ascii@@Base+0xca0>
   14d70:	ldr	r3, [sp, #24]
   14d74:	add	r8, r8, #1
   14d78:	cmp	r8, r3
   14d7c:	blt	14c24 <export_data_element_to_ascii@@Base+0x610>
   14d80:	mov	r0, r4
   14d84:	bl	123dc <coda_cursor_goto_parent@plt>
   14d88:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14d8c:	add	r1, sp, #72	; 0x48
   14d90:	mov	r0, r4
   14d94:	bl	12514 <coda_cursor_has_ascii_content@plt>
   14d98:	cmp	r0, #0
   14d9c:	bne	14ee0 <export_data_element_to_ascii@@Base+0x8cc>
   14da0:	ldr	r3, [sp, #72]	; 0x48
   14da4:	cmp	r3, #0
   14da8:	bne	14e68 <export_data_element_to_ascii@@Base+0x854>
   14dac:	add	r1, sp, #64	; 0x40
   14db0:	mov	r0, r4
   14db4:	bl	123a0 <coda_cursor_get_read_type@plt>
   14db8:	cmp	r0, #0
   14dbc:	bne	14e60 <export_data_element_to_ascii@@Base+0x84c>
   14dc0:	ldr	r3, [sp, #64]	; 0x40
   14dc4:	add	r3, r3, #1
   14dc8:	cmp	r3, #13
   14dcc:	ldrls	pc, [pc, r3, lsl #2]
   14dd0:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14dd4:	andeq	r5, r1, ip, asr #4
   14dd8:	andeq	r5, r1, r4, ror r2
   14ddc:	strdeq	r5, [r1], -r0
   14de0:	andeq	r5, r1, r4, ror r2
   14de4:	strdeq	r5, [r1], -r0
   14de8:	andeq	r5, r1, r4, ror r2
   14dec:	strdeq	r5, [r1], -r0
   14df0:	andeq	r5, r1, r8, lsl r2
   14df4:			; <UNDEFINED> instruction: 0x000151bc
   14df8:	andeq	r5, r1, r4, lsl #3
   14dfc:	andeq	r5, r1, r4, lsl #3
   14e00:	andeq	r5, r1, ip, asr #4
   14e04:	andeq	r5, r1, ip, asr #4
   14e08:	muleq	r1, r4, r0
   14e0c:	bl	19af0 <handle_coda_error@@Base>
   14e10:	b	14ac8 <export_data_element_to_ascii@@Base+0x4b4>
   14e14:	bl	19af0 <handle_coda_error@@Base>
   14e18:	b	14990 <export_data_element_to_ascii@@Base+0x37c>
   14e1c:	mov	r2, #520	; 0x208
   14e20:	mov	r1, r4
   14e24:	add	r0, sp, #128	; 0x80
   14e28:	bl	122c8 <memcpy@plt>
   14e2c:	add	r0, sp, #128	; 0x80
   14e30:	bl	125a4 <coda_cursor_use_base_type_of_special_type@plt>
   14e34:	cmp	r0, #0
   14e38:	bne	152ac <export_data_element_to_ascii@@Base+0xc98>
   14e3c:	add	r0, sp, #128	; 0x80
   14e40:	mov	r1, r6
   14e44:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   14e48:	ldr	r0, [sp, #72]	; 0x48
   14e4c:	b	14b34 <export_data_element_to_ascii@@Base+0x520>
   14e50:	bl	19af0 <handle_coda_error@@Base>
   14e54:	b	14b28 <export_data_element_to_ascii@@Base+0x514>
   14e58:	bl	19af0 <handle_coda_error@@Base>
   14e5c:	b	14b80 <export_data_element_to_ascii@@Base+0x56c>
   14e60:	bl	19af0 <handle_coda_error@@Base>
   14e64:	b	14dc0 <export_data_element_to_ascii@@Base+0x7ac>
   14e68:	add	r1, sp, #128	; 0x80
   14e6c:	mov	r0, r4
   14e70:	bl	1240c <coda_cursor_get_string_length@plt>
   14e74:	cmp	r0, #0
   14e78:	bne	152a4 <export_data_element_to_ascii@@Base+0xc90>
   14e7c:	ldr	r0, [sp, #128]	; 0x80
   14e80:	add	r0, r0, #1
   14e84:	bl	123ac <malloc@plt>
   14e88:	subs	r5, r0, #0
   14e8c:	beq	154e4 <export_data_element_to_ascii@@Base+0xed0>
   14e90:	ldr	r2, [sp, #128]	; 0x80
   14e94:	mov	r1, r5
   14e98:	mov	r0, r4
   14e9c:	add	r2, r2, #1
   14ea0:	bl	123d0 <coda_cursor_read_string@plt>
   14ea4:	cmp	r0, #0
   14ea8:	bne	1529c <export_data_element_to_ascii@@Base+0xc88>
   14eac:	movw	r0, #42180	; 0xa4c4
   14eb0:	movt	r0, #1
   14eb4:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   14eb8:	mov	r0, r5
   14ebc:	ldr	r1, [sp, #128]	; 0x80
   14ec0:	bl	14728 <export_data_element_to_ascii@@Base+0x114>
   14ec4:	movw	r0, #40848	; 0x9f90
   14ec8:	movt	r0, #1
   14ecc:	ldr	r1, [sp, #128]	; 0x80
   14ed0:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14ed4:	mov	r0, r5
   14ed8:	bl	12274 <free@plt>
   14edc:	b	14dac <export_data_element_to_ascii@@Base+0x798>
   14ee0:	bl	19af0 <handle_coda_error@@Base>
   14ee4:	b	14da0 <export_data_element_to_ascii@@Base+0x78c>
   14ee8:	mov	r0, r4
   14eec:	add	r2, sp, #128	; 0x80
   14ef0:	add	r1, sp, #96	; 0x60
   14ef4:	bl	124cc <coda_cursor_read_complex_double_split@plt>
   14ef8:	cmp	r0, #0
   14efc:	bne	154d4 <export_data_element_to_ascii@@Base+0xec0>
   14f00:	movw	r0, #40984	; 0xa018
   14f04:	movt	r0, #1
   14f08:	ldrd	r2, [sp, #96]	; 0x60
   14f0c:	ldrd	r4, [sp, #128]	; 0x80
   14f10:	strd	r4, [sp]
   14f14:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14f18:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14f1c:	mov	r0, r4
   14f20:	add	r1, sp, #96	; 0x60
   14f24:	bl	12424 <coda_cursor_read_double@plt>
   14f28:	cmp	r0, #0
   14f2c:	bne	154cc <export_data_element_to_ascii@@Base+0xeb8>
   14f30:	vldr	d0, [sp, #96]	; 0x60
   14f34:	bl	12430 <coda_isNaN@plt>
   14f38:	cmp	r0, #0
   14f3c:	bne	14f50 <export_data_element_to_ascii@@Base+0x93c>
   14f40:	vldr	d0, [sp, #96]	; 0x60
   14f44:	bl	122d4 <coda_isInf@plt>
   14f48:	cmp	r0, #0
   14f4c:	beq	15570 <export_data_element_to_ascii@@Base+0xf5c>
   14f50:	movw	r0, #40948	; 0x9ff4
   14f54:	movt	r0, #1
   14f58:	ldrd	r2, [sp, #96]	; 0x60
   14f5c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14f60:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14f64:	movw	r0, #46756	; 0xb6a4
   14f68:	movt	r0, #1
   14f6c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14f70:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14f74:	mov	r0, r4
   14f78:	add	r1, sp, #128	; 0x80
   14f7c:	bl	12424 <coda_cursor_read_double@plt>
   14f80:	cmp	r0, #0
   14f84:	bne	154c4 <export_data_element_to_ascii@@Base+0xeb0>
   14f88:	movw	r0, #40912	; 0x9fd0
   14f8c:	movt	r0, #1
   14f90:	ldrd	r2, [sp, #128]	; 0x80
   14f94:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   14f98:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   14f9c:	mov	r0, r4
   14fa0:	str	r1, [sp, #16]
   14fa4:	bl	12370 <coda_cursor_goto_first_record_field@plt>
   14fa8:	cmp	r0, #0
   14fac:	ldr	r1, [sp, #16]
   14fb0:	bne	15430 <export_data_element_to_ascii@@Base+0xe1c>
   14fb4:	ldr	r3, [sp, #52]	; 0x34
   14fb8:	mov	r2, #0
   14fbc:	str	r2, [sp, #64]	; 0x40
   14fc0:	cmp	r3, r2
   14fc4:	ble	14d80 <export_data_element_to_ascii@@Base+0x76c>
   14fc8:	movw	r5, #49604	; 0xc1c4
   14fcc:	movt	r5, #2
   14fd0:	movw	sl, #49580	; 0xc1ac
   14fd4:	movt	sl, #2
   14fd8:	movw	fp, #49584	; 0xc1b0
   14fdc:	movt	fp, #2
   14fe0:	movw	r7, #40812	; 0x9f6c
   14fe4:	movt	r7, #1
   14fe8:	movw	r9, #40820	; 0x9f74
   14fec:	movt	r9, #1
   14ff0:	movw	r8, #40824	; 0x9f78
   14ff4:	movt	r8, #1
   14ff8:	add	r2, sp, #72	; 0x48
   14ffc:	ldr	r0, [sp, #56]	; 0x38
   15000:	bl	125f8 <coda_type_get_record_field_name@plt>
   15004:	cmp	r0, #0
   15008:	bne	153d8 <export_data_element_to_ascii@@Base+0xdc4>
   1500c:	mov	r0, r7
   15010:	ldr	r1, [sp, #72]	; 0x48
   15014:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15018:	ldr	r3, [sl]
   1501c:	cmp	r3, #0
   15020:	bne	15348 <export_data_element_to_ascii@@Base+0xd34>
   15024:	movw	r0, #46756	; 0xb6a4
   15028:	movt	r0, #1
   1502c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15030:	ldr	r3, [r5]
   15034:	ldr	r2, [fp]
   15038:	add	r3, r3, #1
   1503c:	cmp	r2, r6
   15040:	str	r3, [r5]
   15044:	movle	r1, #0
   15048:	movgt	r1, #1
   1504c:	orrs	r3, r1, r2, lsr #31
   15050:	beq	153f0 <export_data_element_to_ascii@@Base+0xddc>
   15054:	add	r1, r6, #1
   15058:	mov	r0, r4
   1505c:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   15060:	ldr	r3, [r5]
   15064:	ldr	r2, [sp, #52]	; 0x34
   15068:	ldr	r1, [sp, #64]	; 0x40
   1506c:	sub	r3, r3, #1
   15070:	sub	r0, r2, #1
   15074:	str	r3, [r5]
   15078:	cmp	r0, r1
   1507c:	bgt	153bc <export_data_element_to_ascii@@Base+0xda8>
   15080:	add	r1, r1, #1
   15084:	cmp	r1, r2
   15088:	str	r1, [sp, #64]	; 0x40
   1508c:	blt	14ff8 <export_data_element_to_ascii@@Base+0x9e4>
   15090:	b	14d80 <export_data_element_to_ascii@@Base+0x76c>
   15094:	add	r1, sp, #96	; 0x60
   15098:	mov	r0, r4
   1509c:	bl	1258c <coda_cursor_get_bit_size@plt>
   150a0:	cmp	r0, #0
   150a4:	bne	15568 <export_data_element_to_ascii@@Base+0xf54>
   150a8:	ldr	r5, [sp, #96]	; 0x60
   150ac:	ldr	r8, [sp, #100]	; 0x64
   150b0:	lsr	r2, r5, #3
   150b4:	ands	r1, r5, #7
   150b8:	movne	r1, #1
   150bc:	orr	r2, r2, r8, lsl #29
   150c0:	adds	r6, r2, r1
   150c4:	mov	r0, r6
   150c8:	bl	123ac <malloc@plt>
   150cc:	subs	r9, r0, #0
   150d0:	beq	155a4 <export_data_element_to_ascii@@Base+0xf90>
   150d4:	mov	r0, r4
   150d8:	mov	r1, r9
   150dc:	stm	sp, {r5, r8}
   150e0:	mov	r2, #0
   150e4:	mov	r3, #0
   150e8:	bl	1261c <coda_cursor_read_bits@plt>
   150ec:	cmp	r0, #0
   150f0:	bne	15560 <export_data_element_to_ascii@@Base+0xf4c>
   150f4:	movw	r0, #42180	; 0xa4c4
   150f8:	movt	r0, #1
   150fc:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15100:	mov	r1, r6
   15104:	mov	r0, r9
   15108:	bl	14728 <export_data_element_to_ascii@@Base+0x114>
   1510c:	movw	r0, #40864	; 0x9fa0
   15110:	movt	r0, #1
   15114:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15118:	ldrd	r0, [sp, #96]	; 0x60
   1511c:	add	r2, sp, #128	; 0x80
   15120:	lsr	r0, r0, #3
   15124:	orr	r0, r0, r1, lsl #29
   15128:	asr	r1, r1, #3
   1512c:	bl	12628 <coda_str64@plt>
   15130:	add	r1, sp, #128	; 0x80
   15134:	movw	r0, #40876	; 0x9fac
   15138:	movt	r0, #1
   1513c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15140:	ldr	r1, [sp, #96]	; 0x60
   15144:	mov	r3, #0
   15148:	and	r2, r1, #7
   1514c:	orrs	r3, r2, r3
   15150:	bne	1554c <export_data_element_to_ascii@@Base+0xf38>
   15154:	movw	r0, #40880	; 0x9fb0
   15158:	movt	r0, #1
   1515c:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15160:	mov	r0, r9
   15164:	add	sp, sp, #652	; 0x28c
   15168:	ldrd	r4, [sp]
   1516c:	ldrd	r6, [sp, #8]
   15170:	ldrd	r8, [sp, #16]
   15174:	ldrd	sl, [sp, #24]
   15178:	ldr	lr, [sp, #32]
   1517c:	add	sp, sp, #36	; 0x24
   15180:	b	12274 <free@plt>
   15184:	mov	r0, r4
   15188:	add	r1, sp, #128	; 0x80
   1518c:	bl	12424 <coda_cursor_read_double@plt>
   15190:	cmp	r0, #0
   15194:	bne	15524 <export_data_element_to_ascii@@Base+0xf10>
   15198:	ldr	r1, [sp, #64]	; 0x40
   1519c:	ldrd	r2, [sp, #128]	; 0x80
   151a0:	cmp	r1, #8
   151a4:	movweq	r0, #40904	; 0x9fc8
   151a8:	movwne	r0, #40912	; 0x9fd0
   151ac:	movteq	r0, #1
   151b0:	movtne	r0, #1
   151b4:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   151b8:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   151bc:	mov	r0, r4
   151c0:	add	r1, sp, #96	; 0x60
   151c4:	bl	12418 <coda_cursor_read_uint64@plt>
   151c8:	cmp	r0, #0
   151cc:	bne	1553c <export_data_element_to_ascii@@Base+0xf28>
   151d0:	add	r2, sp, #128	; 0x80
   151d4:	ldrd	r0, [sp, #96]	; 0x60
   151d8:	bl	12268 <coda_str64u@plt>
   151dc:	add	r1, sp, #128	; 0x80
   151e0:	movw	r0, #40900	; 0x9fc4
   151e4:	movt	r0, #1
   151e8:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   151ec:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   151f0:	mov	r0, r4
   151f4:	add	r1, sp, #128	; 0x80
   151f8:	bl	12298 <coda_cursor_read_uint32@plt>
   151fc:	cmp	r0, #0
   15200:	bne	1552c <export_data_element_to_ascii@@Base+0xf18>
   15204:	movw	r0, #40892	; 0x9fbc
   15208:	movt	r0, #1
   1520c:	ldr	r1, [sp, #128]	; 0x80
   15210:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15214:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   15218:	mov	r0, r4
   1521c:	add	r1, sp, #96	; 0x60
   15220:	bl	1252c <coda_cursor_read_int64@plt>
   15224:	cmp	r0, #0
   15228:	bne	15534 <export_data_element_to_ascii@@Base+0xf20>
   1522c:	add	r2, sp, #128	; 0x80
   15230:	ldrd	r0, [sp, #96]	; 0x60
   15234:	bl	12628 <coda_str64@plt>
   15238:	add	r1, sp, #128	; 0x80
   1523c:	movw	r0, #40900	; 0x9fc4
   15240:	movt	r0, #1
   15244:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15248:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   1524c:	ldr	r3, [sp, #72]	; 0x48
   15250:	cmp	r3, #0
   15254:	bne	14a94 <export_data_element_to_ascii@@Base+0x480>
   15258:	movw	r1, #40700	; 0x9efc
   1525c:	movt	r1, #1
   15260:	ldr	r3, [pc, #900]	; 155ec <export_data_element_to_ascii@@Base+0xfd8>
   15264:	movw	r0, #40920	; 0x9fd8
   15268:	movt	r0, #1
   1526c:	mov	r2, #548	; 0x224
   15270:	bl	12634 <__assert_fail@plt>
   15274:	mov	r0, r4
   15278:	add	r1, sp, #128	; 0x80
   1527c:	bl	125bc <coda_cursor_read_int32@plt>
   15280:	cmp	r0, #0
   15284:	bne	15544 <export_data_element_to_ascii@@Base+0xf30>
   15288:	movw	r0, #40884	; 0x9fb4
   1528c:	movt	r0, #1
   15290:	ldr	r1, [sp, #128]	; 0x80
   15294:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15298:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   1529c:	bl	19af0 <handle_coda_error@@Base>
   152a0:	b	14eac <export_data_element_to_ascii@@Base+0x898>
   152a4:	bl	19af0 <handle_coda_error@@Base>
   152a8:	b	14e7c <export_data_element_to_ascii@@Base+0x868>
   152ac:	bl	19af0 <handle_coda_error@@Base>
   152b0:	b	14e3c <export_data_element_to_ascii@@Base+0x828>
   152b4:	mov	r0, r4
   152b8:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   152bc:	cmp	r0, #0
   152c0:	beq	14d70 <export_data_element_to_ascii@@Base+0x75c>
   152c4:	bl	19af0 <handle_coda_error@@Base>
   152c8:	b	14d70 <export_data_element_to_ascii@@Base+0x75c>
   152cc:	add	r1, sp, #64	; 0x40
   152d0:	mov	r0, r4
   152d4:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   152d8:	cmp	r0, #0
   152dc:	bne	15410 <export_data_element_to_ascii@@Base+0xdfc>
   152e0:	ldrd	r6, [sp, #64]	; 0x40
   152e4:	cmp	r6, #0
   152e8:	sbcs	r3, r7, #0
   152ec:	blt	14ca0 <export_data_element_to_ascii@@Base+0x68c>
   152f0:	lsr	r0, r6, #3
   152f4:	add	r2, sp, #72	; 0x48
   152f8:	asr	r1, r7, #3
   152fc:	orr	r0, r0, r7, lsl #29
   15300:	bl	12628 <coda_str64@plt>
   15304:	add	r1, sp, #72	; 0x48
   15308:	movw	r0, #40820	; 0x9f74
   1530c:	movt	r0, #1
   15310:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15314:	ldr	r1, [sp, #64]	; 0x40
   15318:	and	r3, r1, #7
   1531c:	str	r3, [sp, #32]
   15320:	mov	r3, #0
   15324:	str	r3, [sp, #36]	; 0x24
   15328:	ldrd	r2, [sp, #32]
   1532c:	orrs	r3, r2, r3
   15330:	beq	14ca0 <export_data_element_to_ascii@@Base+0x68c>
   15334:	and	r1, r1, #7
   15338:	movw	r0, #40824	; 0x9f78
   1533c:	movt	r0, #1
   15340:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15344:	b	14ca0 <export_data_element_to_ascii@@Base+0x68c>
   15348:	add	r1, sp, #96	; 0x60
   1534c:	mov	r0, r4
   15350:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   15354:	cmp	r0, #0
   15358:	bne	15420 <export_data_element_to_ascii@@Base+0xe0c>
   1535c:	ldrd	r2, [sp, #96]	; 0x60
   15360:	cmp	r2, #0
   15364:	sbcs	r1, r3, #0
   15368:	blt	15024 <export_data_element_to_ascii@@Base+0xa10>
   1536c:	lsr	r0, r2, #3
   15370:	add	r2, sp, #128	; 0x80
   15374:	asr	r1, r3, #3
   15378:	orr	r0, r0, r3, lsl #29
   1537c:	bl	12628 <coda_str64@plt>
   15380:	add	r1, sp, #128	; 0x80
   15384:	mov	r0, r9
   15388:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   1538c:	ldr	r1, [sp, #96]	; 0x60
   15390:	and	r3, r1, #7
   15394:	str	r3, [sp, #8]
   15398:	mov	r3, #0
   1539c:	str	r3, [sp, #12]
   153a0:	ldrd	r2, [sp, #8]
   153a4:	orrs	r3, r2, r3
   153a8:	beq	15024 <export_data_element_to_ascii@@Base+0xa10>
   153ac:	and	r1, r1, #7
   153b0:	mov	r0, r8
   153b4:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   153b8:	b	15024 <export_data_element_to_ascii@@Base+0xa10>
   153bc:	mov	r0, r4
   153c0:	bl	12568 <coda_cursor_goto_next_record_field@plt>
   153c4:	cmp	r0, #0
   153c8:	bne	15428 <export_data_element_to_ascii@@Base+0xe14>
   153cc:	ldr	r2, [sp, #52]	; 0x34
   153d0:	ldr	r1, [sp, #64]	; 0x40
   153d4:	b	15080 <export_data_element_to_ascii@@Base+0xa6c>
   153d8:	bl	19af0 <handle_coda_error@@Base>
   153dc:	b	1500c <export_data_element_to_ascii@@Base+0x9f8>
   153e0:	movw	r0, #40828	; 0x9f7c
   153e4:	movt	r0, #1
   153e8:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   153ec:	b	14ce0 <export_data_element_to_ascii@@Base+0x6cc>
   153f0:	movw	r0, #40828	; 0x9f7c
   153f4:	movt	r0, #1
   153f8:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   153fc:	b	15060 <export_data_element_to_ascii@@Base+0xa4c>
   15400:	bl	19af0 <handle_coda_error@@Base>
   15404:	b	149c4 <export_data_element_to_ascii@@Base+0x3b0>
   15408:	bl	19af0 <handle_coda_error@@Base>
   1540c:	b	149b0 <export_data_element_to_ascii@@Base+0x39c>
   15410:	bl	19af0 <handle_coda_error@@Base>
   15414:	b	152e0 <export_data_element_to_ascii@@Base+0xccc>
   15418:	bl	19af0 <handle_coda_error@@Base>
   1541c:	b	14bdc <export_data_element_to_ascii@@Base+0x5c8>
   15420:	bl	19af0 <handle_coda_error@@Base>
   15424:	b	1535c <export_data_element_to_ascii@@Base+0xd48>
   15428:	bl	19af0 <handle_coda_error@@Base>
   1542c:	b	153cc <export_data_element_to_ascii@@Base+0xdb8>
   15430:	bl	19af0 <handle_coda_error@@Base>
   15434:	ldr	r1, [sp, #16]
   15438:	b	14fb4 <export_data_element_to_ascii@@Base+0x9a0>
   1543c:	add	r1, sp, #96	; 0x60
   15440:	mov	r0, r4
   15444:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   15448:	cmp	r0, #0
   1544c:	bne	1559c <export_data_element_to_ascii@@Base+0xf88>
   15450:	ldrd	r2, [sp, #96]	; 0x60
   15454:	cmp	r2, #0
   15458:	sbcs	r1, r3, #0
   1545c:	blt	14a34 <export_data_element_to_ascii@@Base+0x420>
   15460:	lsr	r0, r2, #3
   15464:	add	r2, sp, #128	; 0x80
   15468:	asr	r1, r3, #3
   1546c:	orr	r0, r0, r3, lsl #29
   15470:	bl	12628 <coda_str64@plt>
   15474:	add	r1, sp, #128	; 0x80
   15478:	movw	r0, #40820	; 0x9f74
   1547c:	movt	r0, #1
   15480:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15484:	ldr	r1, [sp, #96]	; 0x60
   15488:	mov	r3, #0
   1548c:	and	r2, r1, #7
   15490:	orrs	r3, r2, r3
   15494:	beq	14a34 <export_data_element_to_ascii@@Base+0x420>
   15498:	mov	r1, r2
   1549c:	movw	r0, #40824	; 0x9f78
   154a0:	movt	r0, #1
   154a4:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   154a8:	b	14a34 <export_data_element_to_ascii@@Base+0x420>
   154ac:	bl	19af0 <handle_coda_error@@Base>
   154b0:	b	14a10 <export_data_element_to_ascii@@Base+0x3fc>
   154b4:	bl	19af0 <handle_coda_error@@Base>
   154b8:	b	149fc <export_data_element_to_ascii@@Base+0x3e8>
   154bc:	bl	19af0 <handle_coda_error@@Base>
   154c0:	b	149e4 <export_data_element_to_ascii@@Base+0x3d0>
   154c4:	bl	19af0 <handle_coda_error@@Base>
   154c8:	b	14f88 <export_data_element_to_ascii@@Base+0x974>
   154cc:	bl	19af0 <handle_coda_error@@Base>
   154d0:	b	14f30 <export_data_element_to_ascii@@Base+0x91c>
   154d4:	bl	19af0 <handle_coda_error@@Base>
   154d8:	b	14f00 <export_data_element_to_ascii@@Base+0x8ec>
   154dc:	mov	r8, #1
   154e0:	b	14bcc <export_data_element_to_ascii@@Base+0x5b8>
   154e4:	ldr	r2, [sp, #128]	; 0x80
   154e8:	movw	r0, #410	; 0x19a
   154ec:	movw	r3, #40700	; 0x9efc
   154f0:	movt	r3, #1
   154f4:	movw	r1, #40488	; 0x9e28
   154f8:	movt	r1, #1
   154fc:	str	r0, [sp]
   15500:	mvn	r0, #0
   15504:	add	r2, r2, #1
   15508:	bl	1222c <coda_set_error@plt>
   1550c:	bl	19af0 <handle_coda_error@@Base>
   15510:	b	14e90 <export_data_element_to_ascii@@Base+0x87c>
   15514:	movw	r0, #40828	; 0x9f7c
   15518:	movt	r0, #1
   1551c:	bl	14854 <export_data_element_to_ascii@@Base+0x240>
   15520:	b	14a80 <export_data_element_to_ascii@@Base+0x46c>
   15524:	bl	19af0 <handle_coda_error@@Base>
   15528:	b	15198 <export_data_element_to_ascii@@Base+0xb84>
   1552c:	bl	19af0 <handle_coda_error@@Base>
   15530:	b	15204 <export_data_element_to_ascii@@Base+0xbf0>
   15534:	bl	19af0 <handle_coda_error@@Base>
   15538:	b	1522c <export_data_element_to_ascii@@Base+0xc18>
   1553c:	bl	19af0 <handle_coda_error@@Base>
   15540:	b	151d0 <export_data_element_to_ascii@@Base+0xbbc>
   15544:	bl	19af0 <handle_coda_error@@Base>
   15548:	b	15288 <export_data_element_to_ascii@@Base+0xc74>
   1554c:	mov	r1, r2
   15550:	movw	r0, #40824	; 0x9f78
   15554:	movt	r0, #1
   15558:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   1555c:	b	15154 <export_data_element_to_ascii@@Base+0xb40>
   15560:	bl	19af0 <handle_coda_error@@Base>
   15564:	b	150f4 <export_data_element_to_ascii@@Base+0xae0>
   15568:	bl	19af0 <handle_coda_error@@Base>
   1556c:	b	150a8 <export_data_element_to_ascii@@Base+0xa94>
   15570:	movw	r0, #40612	; 0x9ea4
   15574:	movt	r0, #1
   15578:	vldr	d0, [sp, #96]	; 0x60
   1557c:	add	r1, sp, #128	; 0x80
   15580:	bl	12250 <coda_time_double_to_string@plt>
   15584:	cmp	r0, #0
   15588:	beq	155d8 <export_data_element_to_ascii@@Base+0xfc4>
   1558c:	movw	r0, #40956	; 0x9ffc
   15590:	movt	r0, #1
   15594:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   15598:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   1559c:	bl	19af0 <handle_coda_error@@Base>
   155a0:	b	15450 <export_data_element_to_ascii@@Base+0xe3c>
   155a4:	movw	r0, #447	; 0x1bf
   155a8:	mov	r2, r6
   155ac:	movw	r3, #40700	; 0x9efc
   155b0:	movt	r3, #1
   155b4:	movw	r1, #40488	; 0x9e28
   155b8:	movt	r1, #1
   155bc:	str	r0, [sp]
   155c0:	mvn	r0, #0
   155c4:	bl	1222c <coda_set_error@plt>
   155c8:	bl	19af0 <handle_coda_error@@Base>
   155cc:	ldr	r5, [sp, #96]	; 0x60
   155d0:	ldr	r8, [sp, #100]	; 0x64
   155d4:	b	150d4 <export_data_element_to_ascii@@Base+0xac0>
   155d8:	add	r1, sp, #128	; 0x80
   155dc:	movw	r0, #46448	; 0xb570
   155e0:	movt	r0, #1
   155e4:	bl	146ec <export_data_element_to_ascii@@Base+0xd8>
   155e8:	b	14a94 <export_data_element_to_ascii@@Base+0x480>
   155ec:	andeq	r9, r1, ip, ror #29

000155f0 <print_debug_data@@Base>:
   155f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   155f4:	movw	r4, #49648	; 0xc1f0
   155f8:	movt	r4, #2
   155fc:	strd	r6, [sp, #8]
   15600:	subs	r6, r0, #0
   15604:	mov	r7, r1
   15608:	str	r8, [sp, #16]
   1560c:	mov	r8, r2
   15610:	str	lr, [sp, #20]
   15614:	sub	sp, sp, #536	; 0x218
   15618:	add	r5, sp, #8
   1561c:	ldr	r0, [r4]
   15620:	beq	15704 <print_debug_data@@Base+0x114>
   15624:	mov	r3, r2
   15628:	mov	r2, r1
   1562c:	str	r5, [sp]
   15630:	mov	r1, r6
   15634:	bl	12454 <coda_open_as@plt>
   15638:	cmp	r0, #0
   1563c:	bne	156ec <print_debug_data@@Base+0xfc>
   15640:	add	r1, sp, #12
   15644:	ldr	r0, [sp, #8]
   15648:	bl	1231c <coda_get_product_format@plt>
   1564c:	cmp	r0, #0
   15650:	bne	156e4 <print_debug_data@@Base+0xf4>
   15654:	movw	r3, #49580	; 0xc1ac
   15658:	movt	r3, #2
   1565c:	ldr	r1, [sp, #8]
   15660:	add	r0, sp, #16
   15664:	ldr	r2, [sp, #12]
   15668:	cmp	r2, #2
   1566c:	movhi	r2, #0
   15670:	movls	r2, #1
   15674:	str	r2, [r3]
   15678:	bl	12364 <coda_cursor_set_product@plt>
   1567c:	cmp	r0, #0
   15680:	bne	156dc <print_debug_data@@Base+0xec>
   15684:	movw	r3, #53424	; 0xd0b0
   15688:	movt	r3, #2
   1568c:	ldr	r1, [r3]
   15690:	cmp	r1, #0
   15694:	beq	156a8 <print_debug_data@@Base+0xb8>
   15698:	add	r0, sp, #16
   1569c:	bl	12544 <coda_cursor_goto@plt>
   156a0:	cmp	r0, #0
   156a4:	bne	15710 <print_debug_data@@Base+0x120>
   156a8:	mov	r0, #0
   156ac:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   156b0:	add	r0, sp, #16
   156b4:	mov	r1, #0
   156b8:	bl	14900 <export_data_element_to_ascii@@Base+0x2ec>
   156bc:	ldr	r0, [sp, #8]
   156c0:	bl	12520 <coda_close@plt>
   156c4:	add	sp, sp, #536	; 0x218
   156c8:	ldrd	r4, [sp]
   156cc:	ldrd	r6, [sp, #8]
   156d0:	ldr	r8, [sp, #16]
   156d4:	add	sp, sp, #20
   156d8:	pop	{pc}		; (ldr pc, [sp], #4)
   156dc:	bl	19af0 <handle_coda_error@@Base>
   156e0:	b	15684 <print_debug_data@@Base+0x94>
   156e4:	bl	19af0 <handle_coda_error@@Base>
   156e8:	b	15654 <print_debug_data@@Base+0x64>
   156ec:	bl	125e0 <coda_get_errno@plt>
   156f0:	ldr	r3, [r0]
   156f4:	cmn	r3, #21
   156f8:	beq	15718 <print_debug_data@@Base+0x128>
   156fc:	bl	19af0 <handle_coda_error@@Base>
   15700:	b	15640 <print_debug_data@@Base+0x50>
   15704:	mov	r1, r5
   15708:	bl	12238 <coda_open@plt>
   1570c:	b	15638 <print_debug_data@@Base+0x48>
   15710:	bl	19af0 <handle_coda_error@@Base>
   15714:	b	156a8 <print_debug_data@@Base+0xb8>
   15718:	mov	r0, #0
   1571c:	bl	12280 <coda_set_option_use_mmap@plt>
   15720:	cmp	r6, #0
   15724:	beq	15758 <print_debug_data@@Base+0x168>
   15728:	mov	r3, r8
   1572c:	mov	r2, r7
   15730:	str	r5, [sp]
   15734:	mov	r1, r6
   15738:	ldr	r0, [r4]
   1573c:	bl	12454 <coda_open_as@plt>
   15740:	mov	r4, r0
   15744:	mov	r0, #1
   15748:	bl	12280 <coda_set_option_use_mmap@plt>
   1574c:	cmp	r4, #0
   15750:	bne	156fc <print_debug_data@@Base+0x10c>
   15754:	b	15640 <print_debug_data@@Base+0x50>
   15758:	mov	r1, r5
   1575c:	ldr	r0, [r4]
   15760:	bl	12238 <coda_open@plt>
   15764:	mov	r4, r0
   15768:	b	15744 <print_debug_data@@Base+0x154>
   1576c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15770:	strd	r6, [sp, #8]
   15774:	mov	r7, r0
   15778:	mov	r6, r2
   1577c:	strd	r8, [sp, #16]
   15780:	mov	r8, r1
   15784:	strd	sl, [sp, #24]
   15788:	str	lr, [sp, #32]
   1578c:	sub	sp, sp, #12
   15790:	ldr	r0, [pc, #632]	; 15a10 <print_debug_data@@Base+0x420>
   15794:	mov	r1, sp
   15798:	bl	12304 <coda_cursor_get_type_class@plt>
   1579c:	cmp	r0, #0
   157a0:	bne	15918 <print_debug_data@@Base+0x328>
   157a4:	ldr	r3, [sp]
   157a8:	cmp	r3, #0
   157ac:	beq	1588c <print_debug_data@@Base+0x29c>
   157b0:	cmp	r3, #1
   157b4:	bne	159d0 <print_debug_data@@Base+0x3e0>
   157b8:	movw	r5, #49648	; 0xc1f0
   157bc:	movt	r5, #2
   157c0:	lsl	ip, r8, #2
   157c4:	ldr	r2, [r5, #3360]	; 0xd20
   157c8:	add	r3, ip, r8
   157cc:	add	r3, r5, r3, lsl #4
   157d0:	ldr	r3, [r3, #800]	; 0x320
   157d4:	cmp	r2, r8
   157d8:	ble	159f0 <print_debug_data@@Base+0x400>
   157dc:	add	ip, ip, r8
   157e0:	cmp	r8, #0
   157e4:	add	ip, r5, ip, lsl #4
   157e8:	streq	r8, [r5, #844]	; 0x34c
   157ec:	add	r8, r8, #1
   157f0:	ldr	r1, [ip, #804]	; 0x324
   157f4:	lsl	r9, r8, #2
   157f8:	ldr	lr, [ip, #840]	; 0x348
   157fc:	add	r0, r9, r8
   15800:	add	r0, r5, r0, lsl #4
   15804:	ldr	r2, [ip, #844]	; 0x34c
   15808:	mul	lr, lr, r2
   1580c:	add	r2, r3, r1
   15810:	cmp	r2, r3
   15814:	str	lr, [r0, #844]	; 0x34c
   15818:	ble	15920 <print_debug_data@@Base+0x330>
   1581c:	movw	r0, #53432	; 0xd0b8
   15820:	movt	r0, #2
   15824:	add	r3, r3, #1
   15828:	add	r1, r0, #4
   1582c:	add	r3, r0, r3, lsl #2
   15830:	mov	r4, #1
   15834:	add	r1, r1, r2, lsl #2
   15838:	ldr	r2, [r3, #68]	; 0x44
   1583c:	add	r3, r3, #4
   15840:	cmp	r2, #0
   15844:	ldrne	r2, [r3, #100]	; 0x64
   15848:	ldrne	r0, [ip, #844]	; 0x34c
   1584c:	ldreq	r2, [r3, #-4]
   15850:	ldrne	r2, [r2, r0, lsl #2]
   15854:	cmp	r3, r1
   15858:	mul	r4, r2, r4
   1585c:	bne	15838 <print_debug_data@@Base+0x248>
   15860:	cmp	r4, #0
   15864:	bgt	15924 <print_debug_data@@Base+0x334>
   15868:	mov	fp, #0
   1586c:	mov	r0, fp
   15870:	add	sp, sp, #12
   15874:	ldrd	r4, [sp]
   15878:	ldrd	r6, [sp, #8]
   1587c:	ldrd	r8, [sp, #16]
   15880:	ldrd	sl, [sp, #24]
   15884:	add	sp, sp, #32
   15888:	pop	{pc}		; (ldr pc, [sp], #4)
   1588c:	movw	r5, #49648	; 0xc1f0
   15890:	movt	r5, #2
   15894:	add	r4, r6, #872	; 0x368
   15898:	add	r0, r5, #144	; 0x90
   1589c:	add	r3, r5, r4, lsl #2
   158a0:	add	r2, sp, #4
   158a4:	ldr	r1, [r3, #4]
   158a8:	bl	12214 <coda_cursor_get_record_field_available_status@plt>
   158ac:	cmp	r0, #0
   158b0:	bne	159a8 <print_debug_data@@Base+0x3b8>
   158b4:	ldr	r3, [sp, #4]
   158b8:	cmp	r3, #0
   158bc:	beq	15868 <print_debug_data@@Base+0x278>
   158c0:	ldr	r3, [r5, #3748]	; 0xea4
   158c4:	sub	r3, r3, #1
   158c8:	cmp	r3, r6
   158cc:	beq	15910 <print_debug_data@@Base+0x320>
   158d0:	add	r5, r5, r4, lsl #2
   158d4:	ldr	r0, [pc, #308]	; 15a10 <print_debug_data@@Base+0x420>
   158d8:	ldr	r1, [r5, #4]
   158dc:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   158e0:	cmp	r0, #0
   158e4:	bne	159c8 <print_debug_data@@Base+0x3d8>
   158e8:	add	r2, r6, #1
   158ec:	mov	r1, r8
   158f0:	add	r0, r7, #1
   158f4:	bl	1576c <print_debug_data@@Base+0x17c>
   158f8:	str	r0, [sp, #4]
   158fc:	ldr	r0, [pc, #268]	; 15a10 <print_debug_data@@Base+0x420>
   15900:	bl	123dc <coda_cursor_goto_parent@plt>
   15904:	ldr	r3, [sp, #4]
   15908:	cmp	r3, #0
   1590c:	beq	15868 <print_debug_data@@Base+0x278>
   15910:	mov	fp, #1
   15914:	b	1586c <print_debug_data@@Base+0x27c>
   15918:	bl	19af0 <handle_coda_error@@Base>
   1591c:	b	157a4 <print_debug_data@@Base+0x1b4>
   15920:	mov	r4, #1
   15924:	ldr	r0, [pc, #228]	; 15a10 <print_debug_data@@Base+0x420>
   15928:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   1592c:	cmp	r0, #0
   15930:	bne	159a0 <print_debug_data@@Base+0x3b0>
   15934:	add	r9, r9, r8
   15938:	add	r7, r7, #1
   1593c:	add	r5, r5, r9, lsl #4
   15940:	mov	sl, #0
   15944:	mov	r2, r6
   15948:	mov	r1, r8
   1594c:	mov	r0, r7
   15950:	bl	1576c <print_debug_data@@Base+0x17c>
   15954:	subs	fp, r0, #0
   15958:	bne	159b8 <print_debug_data@@Base+0x3c8>
   1595c:	sub	r3, r4, #1
   15960:	cmp	r3, sl
   15964:	bgt	15980 <print_debug_data@@Base+0x390>
   15968:	add	sl, sl, #1
   1596c:	cmp	r4, sl
   15970:	bgt	15944 <print_debug_data@@Base+0x354>
   15974:	ldr	r0, [pc, #148]	; 15a10 <print_debug_data@@Base+0x420>
   15978:	bl	123dc <coda_cursor_goto_parent@plt>
   1597c:	b	1586c <print_debug_data@@Base+0x27c>
   15980:	ldr	r0, [pc, #136]	; 15a10 <print_debug_data@@Base+0x420>
   15984:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   15988:	cmp	r0, #0
   1598c:	bne	159b0 <print_debug_data@@Base+0x3c0>
   15990:	ldr	r3, [r5, #844]	; 0x34c
   15994:	add	r3, r3, #1
   15998:	str	r3, [r5, #844]	; 0x34c
   1599c:	b	15968 <print_debug_data@@Base+0x378>
   159a0:	bl	19af0 <handle_coda_error@@Base>
   159a4:	b	15934 <print_debug_data@@Base+0x344>
   159a8:	bl	19af0 <handle_coda_error@@Base>
   159ac:	b	158b4 <print_debug_data@@Base+0x2c4>
   159b0:	bl	19af0 <handle_coda_error@@Base>
   159b4:	b	15990 <print_debug_data@@Base+0x3a0>
   159b8:	ldr	r0, [pc, #80]	; 15a10 <print_debug_data@@Base+0x420>
   159bc:	mov	fp, #1
   159c0:	bl	123dc <coda_cursor_goto_parent@plt>
   159c4:	b	1586c <print_debug_data@@Base+0x27c>
   159c8:	bl	19af0 <handle_coda_error@@Base>
   159cc:	b	158e8 <print_debug_data@@Base+0x2f8>
   159d0:	movw	r3, #40996	; 0xa024
   159d4:	movt	r3, #1
   159d8:	movw	r1, #41112	; 0xa098
   159dc:	movt	r1, #1
   159e0:	movw	r0, #41456	; 0xa1f0
   159e4:	movt	r0, #1
   159e8:	movw	r2, #729	; 0x2d9
   159ec:	bl	12634 <__assert_fail@plt>
   159f0:	movw	r3, #40996	; 0xa024
   159f4:	movt	r3, #1
   159f8:	movw	r1, #41112	; 0xa098
   159fc:	movt	r1, #1
   15a00:	movw	r0, #41196	; 0xa0ec
   15a04:	movt	r0, #1
   15a08:	movw	r2, #638	; 0x27e
   15a0c:	bl	12634 <__assert_fail@plt>
   15a10:	andeq	ip, r2, r0, lsl #5
   15a14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15a18:	mov	r5, r1
   15a1c:	strd	r6, [sp, #8]
   15a20:	mov	r7, r0
   15a24:	mov	r6, r2
   15a28:	strd	r8, [sp, #16]
   15a2c:	strd	sl, [sp, #24]
   15a30:	str	lr, [sp, #32]
   15a34:	sub	sp, sp, #44	; 0x2c
   15a38:	ldr	r0, [pc, #1148]	; 15ebc <print_debug_data@@Base+0x8cc>
   15a3c:	mov	r1, sp
   15a40:	bl	12304 <coda_cursor_get_type_class@plt>
   15a44:	cmp	r0, #0
   15a48:	bne	15ce8 <print_debug_data@@Base+0x6f8>
   15a4c:	ldr	r3, [sp]
   15a50:	cmp	r3, #5
   15a54:	ldrls	pc, [pc, r3, lsl #2]
   15a58:	b	15e44 <print_debug_data@@Base+0x854>
   15a5c:	andeq	r5, r1, r8, lsr ip
   15a60:	andeq	r5, r1, r4, lsr fp
   15a64:	andeq	r5, r1, r4, asr #28
   15a68:	andeq	r5, r1, r4, asr #28
   15a6c:	andeq	r5, r1, r4, ror sl
   15a70:	andeq	r5, r1, r4, ror sl
   15a74:	movw	r4, #49648	; 0xc1f0
   15a78:	movt	r4, #2
   15a7c:	ldr	r2, [r4, #3360]	; 0xd20
   15a80:	cmp	r2, r5
   15a84:	bne	15e84 <print_debug_data@@Base+0x894>
   15a88:	cmp	r3, #4
   15a8c:	beq	15d18 <print_debug_data@@Base+0x728>
   15a90:	add	r1, sp, #8
   15a94:	add	r0, r4, #144	; 0x90
   15a98:	bl	1219c <coda_cursor_get_byte_size@plt>
   15a9c:	cmp	r0, #0
   15aa0:	bne	15cf0 <print_debug_data@@Base+0x700>
   15aa4:	ldrd	r0, [sp, #8]
   15aa8:	mov	ip, r0
   15aac:	add	r5, r5, r5, lsl #2
   15ab0:	movw	r3, #53432	; 0xd0b8
   15ab4:	movt	r3, #2
   15ab8:	add	r4, r4, r5, lsl #4
   15abc:	ldr	r2, [r4, #800]	; 0x320
   15ac0:	ldr	r5, [r4, #844]	; 0x34c
   15ac4:	add	r4, r3, r2, lsl #2
   15ac8:	mov	lr, r4
   15acc:	ldr	r4, [r4, #108]	; 0x6c
   15ad0:	str	ip, [r4, r5, lsl #2]
   15ad4:	ldr	r4, [lr, #4]
   15ad8:	cmn	r4, #1
   15adc:	moveq	r2, lr
   15ae0:	streq	ip, [lr, #4]
   15ae4:	streq	ip, [r2, #36]	; 0x24
   15ae8:	beq	15b18 <print_debug_data@@Base+0x528>
   15aec:	add	r2, r2, #8
   15af0:	asr	r5, r4, #31
   15af4:	cmp	r4, r0
   15af8:	add	r3, r3, r2, lsl #2
   15afc:	sbcs	r4, r5, r1
   15b00:	ldr	r4, [r3, #4]
   15b04:	strlt	ip, [lr, #4]
   15b08:	asr	r5, r4, #31
   15b0c:	cmp	r0, r4
   15b10:	sbcs	r2, r1, r5
   15b14:	strlt	ip, [r3, #4]
   15b18:	add	sp, sp, #44	; 0x2c
   15b1c:	ldrd	r4, [sp]
   15b20:	ldrd	r6, [sp, #8]
   15b24:	ldrd	r8, [sp, #16]
   15b28:	ldrd	sl, [sp, #24]
   15b2c:	add	sp, sp, #32
   15b30:	pop	{pc}		; (ldr pc, [sp], #4)
   15b34:	movw	r4, #49648	; 0xc1f0
   15b38:	movt	r4, #2
   15b3c:	lsl	r8, r5, #2
   15b40:	ldr	r2, [r4, #3360]	; 0xd20
   15b44:	add	r3, r8, r5
   15b48:	add	r3, r4, r3, lsl #4
   15b4c:	ldr	sl, [r3, #800]	; 0x320
   15b50:	cmp	r2, r5
   15b54:	beq	15d78 <print_debug_data@@Base+0x788>
   15b58:	add	r2, r8, r5
   15b5c:	cmp	r5, #0
   15b60:	add	r2, r4, r2, lsl #4
   15b64:	streq	r5, [r4, #844]	; 0x34c
   15b68:	add	r5, r5, #1
   15b6c:	ldr	r0, [r2, #804]	; 0x324
   15b70:	lsl	r9, r5, #2
   15b74:	ldr	ip, [r2, #840]	; 0x348
   15b78:	add	r3, r9, r5
   15b7c:	add	r3, r4, r3, lsl #4
   15b80:	ldr	r1, [r2, #844]	; 0x34c
   15b84:	mul	ip, ip, r1
   15b88:	add	r1, sl, r0
   15b8c:	cmp	sl, r1
   15b90:	str	ip, [r3, #844]	; 0x34c
   15b94:	bge	15e78 <print_debug_data@@Base+0x888>
   15b98:	movw	ip, #53432	; 0xd0b8
   15b9c:	movt	ip, #2
   15ba0:	add	r3, sl, #1
   15ba4:	add	r0, ip, #4
   15ba8:	add	r3, ip, r3, lsl #2
   15bac:	mov	r8, #1
   15bb0:	add	r0, r0, r1, lsl #2
   15bb4:	ldr	r1, [r3, #68]	; 0x44
   15bb8:	add	r3, r3, #4
   15bbc:	cmp	r1, #0
   15bc0:	ldrne	r1, [r3, #100]	; 0x64
   15bc4:	ldrne	ip, [r2, #844]	; 0x34c
   15bc8:	ldreq	r1, [r3, #-4]
   15bcc:	ldrne	r1, [r1, ip, lsl #2]
   15bd0:	cmp	r3, r0
   15bd4:	mul	r8, r1, r8
   15bd8:	bne	15bb4 <print_debug_data@@Base+0x5c4>
   15bdc:	cmp	r8, #0
   15be0:	subgt	fp, r8, #1
   15be4:	ble	15b18 <print_debug_data@@Base+0x528>
   15be8:	ldr	r0, [pc, #716]	; 15ebc <print_debug_data@@Base+0x8cc>
   15bec:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   15bf0:	cmp	r0, #0
   15bf4:	bne	15e68 <print_debug_data@@Base+0x878>
   15bf8:	add	r9, r9, r5
   15bfc:	add	r7, r7, #1
   15c00:	add	r4, r4, r9, lsl #4
   15c04:	mov	sl, #0
   15c08:	mov	r2, r6
   15c0c:	mov	r1, r5
   15c10:	mov	r0, r7
   15c14:	bl	15a14 <print_debug_data@@Base+0x424>
   15c18:	cmp	sl, fp
   15c1c:	blt	15cf8 <print_debug_data@@Base+0x708>
   15c20:	add	sl, sl, #1
   15c24:	cmp	r8, sl
   15c28:	bgt	15c08 <print_debug_data@@Base+0x618>
   15c2c:	ldr	r0, [pc, #648]	; 15ebc <print_debug_data@@Base+0x8cc>
   15c30:	bl	123dc <coda_cursor_goto_parent@plt>
   15c34:	b	15b18 <print_debug_data@@Base+0x528>
   15c38:	movw	r4, #49648	; 0xc1f0
   15c3c:	movt	r4, #2
   15c40:	add	r8, r6, #872	; 0x368
   15c44:	add	r0, r4, #144	; 0x90
   15c48:	add	r3, r4, r8, lsl #2
   15c4c:	add	r2, sp, #8
   15c50:	ldr	r1, [r3, #4]
   15c54:	bl	12214 <coda_cursor_get_record_field_available_status@plt>
   15c58:	cmp	r0, #0
   15c5c:	bne	15d70 <print_debug_data@@Base+0x780>
   15c60:	ldr	r2, [sp, #8]
   15c64:	cmp	r2, #0
   15c68:	bne	15d3c <print_debug_data@@Base+0x74c>
   15c6c:	ldr	r3, [r4, #3360]	; 0xd20
   15c70:	add	r3, r3, r3, lsl #2
   15c74:	lsl	r1, r3, #4
   15c78:	add	r0, r4, r1
   15c7c:	ldr	r3, [r0, #800]	; 0x320
   15c80:	ldr	ip, [r0, #804]	; 0x324
   15c84:	cmp	ip, #0
   15c88:	ble	15b18 <print_debug_data@@Base+0x528>
   15c8c:	add	ip, r3, #1
   15c90:	add	r1, r1, #808	; 0x328
   15c94:	movw	r3, #53432	; 0xd0b8
   15c98:	movt	r3, #2
   15c9c:	add	r3, r3, ip, lsl #2
   15ca0:	add	r4, r4, r1
   15ca4:	mov	ip, r2
   15ca8:	ldr	r1, [r4], #4
   15cac:	cmn	r1, #1
   15cb0:	bne	15cd0 <print_debug_data@@Base+0x6e0>
   15cb4:	ldr	r1, [r3, #104]	; 0x68
   15cb8:	ldr	lr, [r0, #844]	; 0x34c
   15cbc:	str	ip, [r1, lr, lsl #2]
   15cc0:	ldr	r1, [r3]
   15cc4:	str	ip, [r3, #32]
   15cc8:	cmn	r1, #1
   15ccc:	streq	ip, [r3]
   15cd0:	ldr	r1, [r0, #804]	; 0x324
   15cd4:	add	r2, r2, #1
   15cd8:	add	r3, r3, #4
   15cdc:	cmp	r1, r2
   15ce0:	bgt	15ca8 <print_debug_data@@Base+0x6b8>
   15ce4:	b	15b18 <print_debug_data@@Base+0x528>
   15ce8:	bl	19af0 <handle_coda_error@@Base>
   15cec:	b	15a4c <print_debug_data@@Base+0x45c>
   15cf0:	bl	19af0 <handle_coda_error@@Base>
   15cf4:	b	15aa4 <print_debug_data@@Base+0x4b4>
   15cf8:	ldr	r0, [pc, #444]	; 15ebc <print_debug_data@@Base+0x8cc>
   15cfc:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   15d00:	cmp	r0, #0
   15d04:	bne	15e34 <print_debug_data@@Base+0x844>
   15d08:	ldr	r3, [r4, #844]	; 0x34c
   15d0c:	add	r3, r3, #1
   15d10:	str	r3, [r4, #844]	; 0x34c
   15d14:	b	15c20 <print_debug_data@@Base+0x630>
   15d18:	add	r1, sp, #4
   15d1c:	add	r0, r4, #144	; 0x90
   15d20:	bl	1240c <coda_cursor_get_string_length@plt>
   15d24:	cmp	r0, #0
   15d28:	bne	15e60 <print_debug_data@@Base+0x870>
   15d2c:	ldr	ip, [sp, #4]
   15d30:	mov	r0, ip
   15d34:	asr	r1, ip, #31
   15d38:	b	15aac <print_debug_data@@Base+0x4bc>
   15d3c:	add	r4, r4, r8, lsl #2
   15d40:	ldr	r0, [pc, #372]	; 15ebc <print_debug_data@@Base+0x8cc>
   15d44:	ldr	r1, [r4, #4]
   15d48:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   15d4c:	cmp	r0, #0
   15d50:	bne	15e70 <print_debug_data@@Base+0x880>
   15d54:	add	r0, r7, #1
   15d58:	add	r2, r6, #1
   15d5c:	mov	r1, r5
   15d60:	bl	15a14 <print_debug_data@@Base+0x424>
   15d64:	ldr	r0, [pc, #336]	; 15ebc <print_debug_data@@Base+0x8cc>
   15d68:	bl	123dc <coda_cursor_goto_parent@plt>
   15d6c:	b	15b18 <print_debug_data@@Base+0x528>
   15d70:	bl	19af0 <handle_coda_error@@Base>
   15d74:	b	15c60 <print_debug_data@@Base+0x670>
   15d78:	add	r6, sp, #8
   15d7c:	add	r1, sp, #4
   15d80:	mov	r2, r6
   15d84:	add	r0, r4, #144	; 0x90
   15d88:	bl	12508 <coda_cursor_get_array_dim@plt>
   15d8c:	cmp	r0, #0
   15d90:	bne	15e3c <print_debug_data@@Base+0x84c>
   15d94:	add	r5, r8, r5
   15d98:	ldr	r2, [sp, #4]
   15d9c:	lsl	r5, r5, #4
   15da0:	add	r0, r4, r5
   15da4:	ldr	r3, [r0, #804]	; 0x324
   15da8:	cmp	r3, r2
   15dac:	bne	15ea0 <print_debug_data@@Base+0x8b0>
   15db0:	cmp	r3, #0
   15db4:	ble	15b18 <print_debug_data@@Base+0x528>
   15db8:	add	r3, sl, #1
   15dbc:	movw	r2, #53432	; 0xd0b8
   15dc0:	movt	r2, #2
   15dc4:	add	r5, r5, #808	; 0x328
   15dc8:	add	r3, r2, r3, lsl #2
   15dcc:	add	r4, r4, r5
   15dd0:	mov	r2, #0
   15dd4:	b	15dec <print_debug_data@@Base+0x7fc>
   15dd8:	ldr	r1, [r0, #804]	; 0x324
   15ddc:	add	r2, r2, #1
   15de0:	add	r3, r3, #4
   15de4:	cmp	r1, r2
   15de8:	ble	15b18 <print_debug_data@@Base+0x528>
   15dec:	ldr	r1, [r4], #4
   15df0:	cmn	r1, #1
   15df4:	bne	15dd8 <print_debug_data@@Base+0x7e8>
   15df8:	ldr	r1, [r6, r2, lsl #2]
   15dfc:	ldr	ip, [r3, #104]	; 0x68
   15e00:	ldr	lr, [r0, #844]	; 0x34c
   15e04:	str	r1, [ip, lr, lsl #2]
   15e08:	ldr	ip, [r3]
   15e0c:	cmn	ip, #1
   15e10:	streq	r1, [r3]
   15e14:	streq	r1, [r3, #32]
   15e18:	beq	15dd8 <print_debug_data@@Base+0x7e8>
   15e1c:	cmp	r1, ip
   15e20:	ldr	ip, [r3, #32]
   15e24:	strgt	r1, [r3]
   15e28:	cmp	r1, ip
   15e2c:	strlt	r1, [r3, #32]
   15e30:	b	15dd8 <print_debug_data@@Base+0x7e8>
   15e34:	bl	19af0 <handle_coda_error@@Base>
   15e38:	b	15d08 <print_debug_data@@Base+0x718>
   15e3c:	bl	19af0 <handle_coda_error@@Base>
   15e40:	b	15d94 <print_debug_data@@Base+0x7a4>
   15e44:	movw	r1, #41112	; 0xa098
   15e48:	movt	r1, #1
   15e4c:	ldr	r3, [pc, #108]	; 15ec0 <print_debug_data@@Base+0x8d0>
   15e50:	movw	r0, #41456	; 0xa1f0
   15e54:	movt	r0, #1
   15e58:	movw	r2, #294	; 0x126
   15e5c:	bl	12634 <__assert_fail@plt>
   15e60:	bl	19af0 <handle_coda_error@@Base>
   15e64:	b	15d2c <print_debug_data@@Base+0x73c>
   15e68:	bl	19af0 <handle_coda_error@@Base>
   15e6c:	b	15bf8 <print_debug_data@@Base+0x608>
   15e70:	bl	19af0 <handle_coda_error@@Base>
   15e74:	b	15d54 <print_debug_data@@Base+0x764>
   15e78:	mov	fp, #0
   15e7c:	mov	r8, #1
   15e80:	b	15be8 <print_debug_data@@Base+0x5f8>
   15e84:	movw	r1, #41112	; 0xa098
   15e88:	movt	r1, #1
   15e8c:	ldr	r3, [pc, #44]	; 15ec0 <print_debug_data@@Base+0x8d0>
   15e90:	movw	r0, #41272	; 0xa138
   15e94:	movt	r0, #1
   15e98:	mov	r2, #252	; 0xfc
   15e9c:	bl	12634 <__assert_fail@plt>
   15ea0:	movw	r1, #41112	; 0xa098
   15ea4:	movt	r1, #1
   15ea8:	ldr	r3, [pc, #16]	; 15ec0 <print_debug_data@@Base+0x8d0>
   15eac:	movw	r0, #41236	; 0xa114
   15eb0:	movt	r0, #1
   15eb4:	mov	r2, #125	; 0x7d
   15eb8:	bl	12634 <__assert_fail@plt>
   15ebc:	andeq	ip, r2, r0, lsl #5
   15ec0:	andeq	sl, r1, r8, asr #32

00015ec4 <dim_info_init@@Base>:
   15ec4:	mov	r2, #0
   15ec8:	movw	r3, #53432	; 0xd0b8
   15ecc:	movt	r3, #2
   15ed0:	mvn	r1, #0
   15ed4:	str	r2, [r3]
   15ed8:	str	r2, [r3, #68]	; 0x44
   15edc:	str	r1, [r3, #104]	; 0x68
   15ee0:	bx	lr

00015ee4 <dim_info_done@@Base>:
   15ee4:	bx	lr

00015ee8 <print_all_distinct_dims@@Base>:
   15ee8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15eec:	movw	r5, #53432	; 0xd0b8
   15ef0:	movt	r5, #2
   15ef4:	ldr	r3, [r5]
   15ef8:	strd	r6, [sp, #8]
   15efc:	strd	r8, [sp, #16]
   15f00:	strd	sl, [sp, #24]
   15f04:	str	lr, [sp, #32]
   15f08:	sub	sp, sp, #12
   15f0c:	cmp	r3, r0
   15f10:	ble	160f4 <print_all_distinct_dims@@Base+0x20c>
   15f14:	add	r3, r0, #18
   15f18:	mov	r9, r0
   15f1c:	ldr	r3, [r5, r3, lsl #2]
   15f20:	cmp	r3, #0
   15f24:	bne	15f44 <print_all_distinct_dims@@Base+0x5c>
   15f28:	add	sp, sp, #12
   15f2c:	ldrd	r4, [sp]
   15f30:	ldrd	r6, [sp, #8]
   15f34:	ldrd	r8, [sp, #16]
   15f38:	ldrd	sl, [sp, #24]
   15f3c:	add	sp, sp, #32
   15f40:	pop	{pc}		; (ldr pc, [sp], #4)
   15f44:	lsl	r7, r0, #2
   15f48:	add	r8, r5, r7
   15f4c:	ldr	r4, [r8, #4]
   15f50:	add	r4, r4, #1
   15f54:	lsl	r4, r4, #2
   15f58:	mov	r0, r4
   15f5c:	bl	123ac <malloc@plt>
   15f60:	subs	r6, r0, #0
   15f64:	beq	160bc <print_all_distinct_dims@@Base+0x1d4>
   15f68:	mov	r1, #0
   15f6c:	mov	r2, r4
   15f70:	mov	r0, r6
   15f74:	bl	12490 <memset@plt>
   15f78:	add	r3, r5, r9, lsl #2
   15f7c:	ldr	r3, [r3, #140]	; 0x8c
   15f80:	add	r3, r5, r3, lsl #3
   15f84:	ldrd	r0, [r3, #232]	; 0xe8
   15f88:	cmp	r0, #1
   15f8c:	sbcs	r3, r1, #0
   15f90:	blt	15fc0 <print_all_distinct_dims@@Base+0xd8>
   15f94:	add	r3, r5, r9, lsl #2
   15f98:	ldr	r3, [r3, #108]	; 0x6c
   15f9c:	add	r0, r3, r0, lsl #2
   15fa0:	ldr	r2, [r3], #4
   15fa4:	cmp	r2, #0
   15fa8:	blt	15fb8 <print_all_distinct_dims@@Base+0xd0>
   15fac:	ldr	r1, [r6, r2, lsl #2]
   15fb0:	add	r1, r1, #1
   15fb4:	str	r1, [r6, r2, lsl #2]
   15fb8:	cmp	r0, r3
   15fbc:	bne	15fa0 <print_all_distinct_dims@@Base+0xb8>
   15fc0:	add	r1, r9, #1
   15fc4:	movw	r0, #41340	; 0xa17c
   15fc8:	movt	r0, #1
   15fcc:	add	r9, r9, #8
   15fd0:	bl	12208 <printf@plt>
   15fd4:	add	r3, r5, r9, lsl #2
   15fd8:	add	fp, r5, r7
   15fdc:	ldr	r1, [fp, #4]
   15fe0:	ldr	r4, [r3, #4]
   15fe4:	cmp	r4, r1
   15fe8:	movwlt	sl, #41352	; 0xa188
   15fec:	addlt	r8, r6, r4, lsl #2
   15ff0:	movtlt	sl, #1
   15ff4:	bge	16020 <print_all_distinct_dims@@Base+0x138>
   15ff8:	ldr	r3, [r8], #4
   15ffc:	cmp	r3, #0
   16000:	ble	16010 <print_all_distinct_dims@@Base+0x128>
   16004:	mov	r1, r4
   16008:	mov	r0, sl
   1600c:	bl	12208 <printf@plt>
   16010:	ldr	r1, [fp, #4]
   16014:	add	r4, r4, #1
   16018:	cmp	r1, r4
   1601c:	bgt	15ff8 <print_all_distinct_dims@@Base+0x110>
   16020:	add	r9, r5, r9, lsl #2
   16024:	movw	r0, #41356	; 0xa18c
   16028:	movt	r0, #1
   1602c:	bl	12208 <printf@plt>
   16030:	add	r5, r5, r7
   16034:	movw	r0, #41360	; 0xa190
   16038:	movt	r0, #1
   1603c:	bl	12208 <printf@plt>
   16040:	ldr	r3, [r5, #4]
   16044:	ldr	r4, [r9, #4]
   16048:	cmp	r4, r3
   1604c:	bge	16080 <print_all_distinct_dims@@Base+0x198>
   16050:	add	r7, r6, r4, lsl #2
   16054:	movw	r8, #41352	; 0xa188
   16058:	movt	r8, #1
   1605c:	ldr	r1, [r7], #4
   16060:	cmp	r1, #0
   16064:	ble	16070 <print_all_distinct_dims@@Base+0x188>
   16068:	mov	r0, r8
   1606c:	bl	12208 <printf@plt>
   16070:	ldr	r3, [r5, #4]
   16074:	add	r4, r4, #1
   16078:	cmp	r3, r4
   1607c:	bgt	1605c <print_all_distinct_dims@@Base+0x174>
   16080:	ldr	r1, [r6, r3, lsl #2]
   16084:	movw	r0, #41356	; 0xa18c
   16088:	movt	r0, #1
   1608c:	bl	12208 <printf@plt>
   16090:	mov	r0, #10
   16094:	bl	1249c <putchar@plt>
   16098:	mov	r0, r6
   1609c:	add	sp, sp, #12
   160a0:	ldrd	r4, [sp]
   160a4:	ldrd	r6, [sp, #8]
   160a8:	ldrd	r8, [sp, #16]
   160ac:	ldrd	sl, [sp, #24]
   160b0:	ldr	lr, [sp, #32]
   160b4:	add	sp, sp, #36	; 0x24
   160b8:	b	12274 <free@plt>
   160bc:	mov	r0, #61	; 0x3d
   160c0:	mov	r2, r4
   160c4:	movw	r3, #41112	; 0xa098
   160c8:	movt	r3, #1
   160cc:	movw	r1, #40488	; 0x9e28
   160d0:	movt	r1, #1
   160d4:	str	r0, [sp]
   160d8:	mvn	r0, #0
   160dc:	bl	1222c <coda_set_error@plt>
   160e0:	bl	19af0 <handle_coda_error@@Base>
   160e4:	ldr	r4, [r8, #4]
   160e8:	add	r4, r4, #1
   160ec:	lsl	r4, r4, #2
   160f0:	b	15f68 <print_all_distinct_dims@@Base+0x80>
   160f4:	movw	r1, #41112	; 0xa098
   160f8:	movt	r1, #1
   160fc:	ldr	r3, [pc, #12]	; 16110 <print_all_distinct_dims@@Base+0x228>
   16100:	movw	r0, #41312	; 0xa160
   16104:	movt	r0, #1
   16108:	mov	r2, #50	; 0x32
   1610c:	bl	12634 <__assert_fail@plt>
   16110:	andeq	sl, r1, r0, rrx

00016114 <dim_enter_array@@Base>:
   16114:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16118:	strd	r6, [sp, #8]
   1611c:	strd	sl, [sp, #24]
   16120:	movw	fp, #49648	; 0xc1f0
   16124:	movt	fp, #2
   16128:	ldr	r3, [fp, #136]	; 0x88
   1612c:	strd	r8, [sp, #16]
   16130:	ldr	r2, [fp, #3360]	; 0xd20
   16134:	str	lr, [sp, #32]
   16138:	sub	sp, sp, #100	; 0x64
   1613c:	add	r1, sp, #56	; 0x38
   16140:	add	r3, r3, #2
   16144:	ldr	r0, [fp, r3, lsl #2]
   16148:	str	r2, [sp, #12]
   1614c:	bl	12640 <coda_type_get_class@plt>
   16150:	cmp	r0, #0
   16154:	bne	1681c <dim_enter_array@@Base+0x708>
   16158:	ldr	r3, [sp, #56]	; 0x38
   1615c:	sub	r3, r3, #1
   16160:	cmp	r3, #5
   16164:	ldrls	pc, [pc, r3, lsl #2]
   16168:	b	169f8 <dim_enter_array@@Base+0x8e4>
   1616c:	andeq	r6, r1, ip, ror r4
   16170:	strdeq	r6, [r1], -r8
   16174:	strdeq	r6, [r1], -r8
   16178:	andeq	r6, r1, r8, lsr r4
   1617c:	andeq	r6, r1, ip, asr #7
   16180:	andeq	r6, r1, r4, lsl #3
   16184:	ldr	r3, [fp, #136]	; 0x88
   16188:	add	r1, sp, #64	; 0x40
   1618c:	add	r3, r3, #2
   16190:	ldr	r0, [fp, r3, lsl #2]
   16194:	bl	124b4 <coda_type_get_special_type@plt>
   16198:	cmp	r0, #0
   1619c:	bne	16970 <dim_enter_array@@Base+0x85c>
   161a0:	ldr	r3, [sp, #64]	; 0x40
   161a4:	cmp	r3, #3
   161a8:	bne	16a30 <dim_enter_array@@Base+0x91c>
   161ac:	ldr	r0, [sp, #12]
   161b0:	mov	r1, #1
   161b4:	mov	r2, #2
   161b8:	lsl	r3, r0, #2
   161bc:	str	r3, [sp, #20]
   161c0:	add	r3, r3, r0
   161c4:	add	r3, fp, r3, lsl #4
   161c8:	str	r1, [r3, #804]	; 0x324
   161cc:	str	r2, [r3, #808]	; 0x328
   161d0:	movw	r3, #49644	; 0xc1ec
   161d4:	movt	r3, #2
   161d8:	ldr	r3, [r3]
   161dc:	cmp	r3, #0
   161e0:	beq	167f8 <dim_enter_array@@Base+0x6e4>
   161e4:	ldr	r2, [sp, #12]
   161e8:	movw	sl, #53432	; 0xd0b8
   161ec:	movt	sl, #2
   161f0:	ldr	r3, [sp, #20]
   161f4:	add	r3, r3, r2
   161f8:	ldr	r2, [sl]
   161fc:	add	r3, fp, r3, lsl #4
   16200:	ldr	r1, [r3, #804]	; 0x324
   16204:	str	r2, [sp, #16]
   16208:	str	r2, [r3, #800]	; 0x320
   1620c:	add	ip, r1, r2
   16210:	cmp	ip, #8
   16214:	mov	r2, ip
   16218:	bgt	16a14 <dim_enter_array@@Base+0x900>
   1621c:	ldr	r0, [sp, #16]
   16220:	str	ip, [sl]
   16224:	cmp	r0, #0
   16228:	ble	168b4 <dim_enter_array@@Base+0x7a0>
   1622c:	add	r3, r0, #37	; 0x25
   16230:	add	r0, sl, r0, lsl #3
   16234:	lsl	r3, r3, #3
   16238:	ldrd	r4, [r0, #232]	; 0xe8
   1623c:	strd	r4, [sp, #24]
   16240:	ldrd	r4, [sl, r3]
   16244:	cmp	r4, #1
   16248:	strd	r4, [sp, #40]	; 0x28
   1624c:	sbcs	r3, r5, #0
   16250:	blt	1691c <dim_enter_array@@Base+0x808>
   16254:	cmp	r1, #0
   16258:	ble	1694c <dim_enter_array@@Base+0x838>
   1625c:	ldr	r1, [sp, #12]
   16260:	mov	r5, #0
   16264:	mov	lr, r5
   16268:	ldr	r3, [sp, #20]
   1626c:	ldr	r0, [pc, #2008]	; 16a4c <dim_enter_array@@Base+0x938>
   16270:	add	r9, r3, r1
   16274:	ldr	r3, [sp, #16]
   16278:	add	r9, fp, r9, lsl #4
   1627c:	add	r0, r0, r2, lsl #2
   16280:	add	r9, r9, #808	; 0x328
   16284:	mov	r1, r9
   16288:	add	r6, r3, #1
   1628c:	lsl	r3, r6, #2
   16290:	str	r3, [sp, #32]
   16294:	add	r3, sl, r3
   16298:	ldr	r2, [r1], #4
   1629c:	cmn	r2, #1
   162a0:	str	r2, [r3], #4
   162a4:	moveq	r5, #1
   162a8:	cmp	r3, r0
   162ac:	str	lr, [r3, #64]	; 0x40
   162b0:	bne	16298 <dim_enter_array@@Base+0x184>
   162b4:	cmp	r5, #0
   162b8:	streq	r5, [sp, #32]
   162bc:	beq	164f0 <dim_enter_array@@Base+0x3dc>
   162c0:	ldr	r2, [sp, #12]
   162c4:	mov	r8, r9
   162c8:	mov	r6, #0
   162cc:	ldr	r3, [sp, #20]
   162d0:	add	r7, r3, r2
   162d4:	ldr	r3, [sp, #32]
   162d8:	add	r7, fp, r7, lsl #4
   162dc:	add	r4, r3, #104	; 0x68
   162e0:	ldr	r3, [sp, #24]
   162e4:	add	r4, sl, r4
   162e8:	lsl	r3, r3, #2
   162ec:	str	r3, [sp, #36]	; 0x24
   162f0:	movw	r3, #41112	; 0xa098
   162f4:	movt	r3, #1
   162f8:	str	r3, [sp, #52]	; 0x34
   162fc:	ldr	r3, [r8], #4
   16300:	cmn	r3, #1
   16304:	movne	r3, #0
   16308:	strne	r3, [r4]
   1630c:	strne	r3, [r4, #32]
   16310:	beq	168c8 <dim_enter_array@@Base+0x7b4>
   16314:	ldr	r2, [r7, #804]	; 0x324
   16318:	add	r6, r6, #1
   1631c:	add	r4, r4, #4
   16320:	add	r3, r7, #804	; 0x324
   16324:	cmp	r2, r6
   16328:	bgt	162fc <dim_enter_array@@Base+0x1e8>
   1632c:	mov	r4, #0
   16330:	str	r3, [sp, #36]	; 0x24
   16334:	mov	r2, r4
   16338:	mov	r1, r4
   1633c:	mov	r0, r4
   16340:	str	r4, [r7, #844]	; 0x34c
   16344:	bl	15a14 <print_debug_data@@Base+0x424>
   16348:	ldr	r3, [sp, #36]	; 0x24
   1634c:	ldr	r3, [r3]
   16350:	cmp	r3, r4
   16354:	ble	164e8 <dim_enter_array@@Base+0x3d4>
   16358:	ldr	r2, [sp, #12]
   1635c:	mov	r8, r4
   16360:	ldr	r3, [sp, #20]
   16364:	add	r7, r3, r2
   16368:	ldr	r3, [sp, #32]
   1636c:	add	r7, fp, r7, lsl #4
   16370:	str	r4, [sp, #32]
   16374:	add	r6, sl, r3
   16378:	mov	r3, fp
   1637c:	mov	fp, sl
   16380:	mov	sl, r5
   16384:	mov	r5, r3
   16388:	b	163a0 <dim_enter_array@@Base+0x28c>
   1638c:	ldr	r3, [r7, #804]	; 0x324
   16390:	add	r4, r4, #1
   16394:	add	r6, r6, #4
   16398:	cmp	r3, r4
   1639c:	ble	16824 <dim_enter_array@@Base+0x710>
   163a0:	ldr	r3, [r9], #4
   163a4:	cmn	r3, #1
   163a8:	bne	1638c <dim_enter_array@@Base+0x278>
   163ac:	ldr	r1, [r6]
   163b0:	ldr	r3, [r6, #32]
   163b4:	cmp	r1, r3
   163b8:	beq	16978 <dim_enter_array@@Base+0x864>
   163bc:	mov	r3, #1
   163c0:	str	sl, [sp, #32]
   163c4:	str	r3, [r6, #68]	; 0x44
   163c8:	b	1638c <dim_enter_array@@Base+0x278>
   163cc:	ldr	r3, [fp, #136]	; 0x88
   163d0:	add	r1, sp, #64	; 0x40
   163d4:	add	r3, r3, #2
   163d8:	ldr	r0, [fp, r3, lsl #2]
   163dc:	bl	122e0 <coda_type_get_bit_size@plt>
   163e0:	cmp	r0, #0
   163e4:	bne	16968 <dim_enter_array@@Base+0x854>
   163e8:	ldr	r1, [sp, #12]
   163ec:	mov	r2, #1
   163f0:	ldrd	r4, [sp, #64]	; 0x40
   163f4:	lsl	r3, r1, #2
   163f8:	cmp	r4, #0
   163fc:	str	r3, [sp, #20]
   16400:	add	r3, r3, r1
   16404:	sbcs	r1, r5, #0
   16408:	add	r3, fp, r3, lsl #4
   1640c:	str	r2, [r3, #804]	; 0x324
   16410:	mvnlt	r2, #0
   16414:	strlt	r2, [r3, #808]	; 0x328
   16418:	blt	161d0 <dim_enter_array@@Base+0xbc>
   1641c:	lsr	r2, r4, #3
   16420:	and	r0, r4, #7
   16424:	orr	r2, r2, r5, lsl #29
   16428:	cmp	r0, #0
   1642c:	addne	r2, r2, #1
   16430:	str	r2, [r3, #808]	; 0x328
   16434:	b	161d0 <dim_enter_array@@Base+0xbc>
   16438:	ldr	r3, [fp, #136]	; 0x88
   1643c:	add	r1, sp, #64	; 0x40
   16440:	add	r3, r3, #2
   16444:	ldr	r0, [fp, r3, lsl #2]
   16448:	bl	124f0 <coda_type_get_string_length@plt>
   1644c:	cmp	r0, #0
   16450:	bne	16960 <dim_enter_array@@Base+0x84c>
   16454:	ldr	r0, [sp, #12]
   16458:	mov	r1, #1
   1645c:	ldr	r2, [sp, #64]	; 0x40
   16460:	lsl	r3, r0, #2
   16464:	str	r3, [sp, #20]
   16468:	add	r3, r3, r0
   1646c:	add	r3, fp, r3, lsl #4
   16470:	str	r1, [r3, #804]	; 0x324
   16474:	str	r2, [r3, #808]	; 0x328
   16478:	b	161d0 <dim_enter_array@@Base+0xbc>
   1647c:	ldr	r3, [fp, #136]	; 0x88
   16480:	add	r2, sp, #64	; 0x40
   16484:	add	r1, sp, #60	; 0x3c
   16488:	add	r3, r3, #2
   1648c:	ldr	r0, [fp, r3, lsl #2]
   16490:	bl	12580 <coda_type_get_array_dim@plt>
   16494:	cmp	r0, #0
   16498:	bne	16958 <dim_enter_array@@Base+0x844>
   1649c:	ldr	r2, [sp, #12]
   164a0:	ldr	r0, [sp, #60]	; 0x3c
   164a4:	lsl	r3, r2, #2
   164a8:	add	r2, r3, r2
   164ac:	cmp	r0, #0
   164b0:	lsl	r2, r2, #4
   164b4:	str	r3, [sp, #20]
   164b8:	add	r3, fp, r2
   164bc:	str	r0, [r3, #804]	; 0x324
   164c0:	ble	161d0 <dim_enter_array@@Base+0xbc>
   164c4:	add	r3, sp, #60	; 0x3c
   164c8:	add	r2, r2, #808	; 0x328
   164cc:	add	r0, r3, r0, lsl #2
   164d0:	add	r2, fp, r2
   164d4:	ldr	r1, [r3, #4]!
   164d8:	cmp	r3, r0
   164dc:	str	r1, [r2], #4
   164e0:	bne	164d4 <dim_enter_array@@Base+0x3c0>
   164e4:	b	161d0 <dim_enter_array@@Base+0xbc>
   164e8:	ldr	ip, [sl]
   164ec:	str	r4, [sp, #32]
   164f0:	mov	r0, #0
   164f4:	mvn	lr, #0
   164f8:	cmp	ip, r0
   164fc:	str	r0, [sl, #68]	; 0x44
   16500:	str	lr, [sl, #104]	; 0x68
   16504:	ble	16544 <dim_enter_array@@Base+0x430>
   16508:	ldr	r2, [pc, #1344]	; 16a50 <dim_enter_array@@Base+0x93c>
   1650c:	mov	r4, r0
   16510:	mov	r3, r0
   16514:	ldr	r1, [r2], #4
   16518:	cmp	r1, #0
   1651c:	beq	1652c <dim_enter_array@@Base+0x418>
   16520:	mov	r0, #1
   16524:	mov	lr, r3
   16528:	mov	r4, r0
   1652c:	add	r3, r3, #1
   16530:	cmp	ip, r3
   16534:	bne	16514 <dim_enter_array@@Base+0x400>
   16538:	cmp	r0, #0
   1653c:	strne	r4, [sl, #68]	; 0x44
   16540:	strne	lr, [sl, #104]	; 0x68
   16544:	ldr	r2, [sp, #12]
   16548:	mov	ip, #1
   1654c:	ldr	r3, [sp, #20]
   16550:	add	r3, r3, r2
   16554:	add	r3, fp, r3, lsl #4
   16558:	ldr	r6, [r3, #804]	; 0x324
   1655c:	str	ip, [r3, #840]	; 0x348
   16560:	cmp	r6, #0
   16564:	ble	16990 <dim_enter_array@@Base+0x87c>
   16568:	ldr	r2, [sp, #16]
   1656c:	str	sl, [sp, #36]	; 0x24
   16570:	str	fp, [sp, #48]	; 0x30
   16574:	add	r3, r2, #29
   16578:	add	lr, r2, ip
   1657c:	add	r7, sl, r2, lsl #2
   16580:	lsl	r1, r3, #3
   16584:	add	r8, r2, #30
   16588:	mov	r3, #0
   1658c:	add	lr, sl, lr, lsl #2
   16590:	add	r8, sl, r8, lsl #3
   16594:	add	r2, sl, r1
   16598:	ldrd	sl, [sp, #24]
   1659c:	str	r1, [sp, #52]	; 0x34
   165a0:	b	165d4 <dim_enter_array@@Base+0x4c0>
   165a4:	ldr	r0, [r7, #4]
   165a8:	add	r3, r3, #1
   165ac:	add	r2, r2, #8
   165b0:	cmp	r3, r6
   165b4:	mul	r9, r0, fp
   165b8:	mov	r4, r0
   165bc:	asr	r5, r0, #31
   165c0:	umull	r0, r1, r0, sl
   165c4:	mla	r9, sl, r5, r9
   165c8:	add	r1, r9, r1
   165cc:	strd	r0, [r8]
   165d0:	beq	16614 <dim_enter_array@@Base+0x500>
   165d4:	ldr	r9, [lr], #4
   165d8:	cmp	r3, #0
   165dc:	mul	ip, r9, ip
   165e0:	beq	165a4 <dim_enter_array@@Base+0x490>
   165e4:	ldr	r0, [r2]
   165e8:	asr	r5, r9, #31
   165ec:	add	r3, r3, #1
   165f0:	cmp	r3, r6
   165f4:	add	r2, r2, #8
   165f8:	mul	r4, r5, r0
   165fc:	ldr	r5, [r2, #-4]
   16600:	umull	r0, r1, r0, r9
   16604:	mla	r9, r9, r5, r4
   16608:	add	r1, r9, r1
   1660c:	strd	r0, [r2]
   16610:	bne	165d4 <dim_enter_array@@Base+0x4c0>
   16614:	ldr	r1, [sp, #12]
   16618:	ldr	r2, [sp, #20]
   1661c:	ldr	sl, [sp, #36]	; 0x24
   16620:	ldr	fp, [sp, #48]	; 0x30
   16624:	add	r2, r2, r1
   16628:	ldr	r1, [sp, #32]
   1662c:	add	r2, fp, r2, lsl #4
   16630:	cmp	r1, #0
   16634:	str	ip, [r2, #840]	; 0x348
   16638:	beq	16834 <dim_enter_array@@Base+0x720>
   1663c:	ldr	r3, [sp, #16]
   16640:	mov	r2, #0
   16644:	ldr	ip, [pc, #1032]	; 16a54 <dim_enter_array@@Base+0x940>
   16648:	add	r0, r6, r3
   1664c:	ldr	r3, [sp, #52]	; 0x34
   16650:	add	r0, ip, r0, lsl #3
   16654:	add	r1, r3, #72	; 0x48
   16658:	mov	r3, #0
   1665c:	add	r1, sl, r1
   16660:	strd	r2, [r1], #8
   16664:	cmp	r0, r1
   16668:	bne	16660 <dim_enter_array@@Base+0x54c>
   1666c:	ldrd	r2, [sp, #24]
   16670:	cmp	r2, #1
   16674:	sbcs	r1, r3, #0
   16678:	blt	166f4 <dim_enter_array@@Base+0x5e0>
   1667c:	ldr	r1, [sp, #16]
   16680:	mov	r8, r2
   16684:	mov	r5, #0
   16688:	add	r7, r1, #38	; 0x26
   1668c:	add	lr, r6, r1
   16690:	add	r9, sl, r1, lsl #2
   16694:	add	r7, sl, r7, lsl #3
   16698:	add	lr, sl, lr, lsl #2
   1669c:	cmp	r6, #0
   166a0:	lslgt	r4, r5, #2
   166a4:	movgt	ip, r7
   166a8:	movgt	r3, r9
   166ac:	movgt	r2, #1
   166b0:	ble	166e8 <dim_enter_array@@Base+0x5d4>
   166b4:	ldr	r1, [r3, #72]	; 0x48
   166b8:	add	r3, r3, #4
   166bc:	cmp	r1, #0
   166c0:	ldrne	r1, [r3, #104]	; 0x68
   166c4:	ldreq	r1, [r3]
   166c8:	ldrne	r1, [r1, r4]
   166cc:	mul	r2, r1, r2
   166d0:	ldrd	r0, [ip]
   166d4:	adds	r0, r0, r2
   166d8:	adc	r1, r1, r2, asr #31
   166dc:	cmp	lr, r3
   166e0:	strd	r0, [ip], #8
   166e4:	bne	166b4 <dim_enter_array@@Base+0x5a0>
   166e8:	add	r5, r5, #1
   166ec:	cmp	r5, r8
   166f0:	bne	1669c <dim_enter_array@@Base+0x588>
   166f4:	ldr	r2, [sp, #12]
   166f8:	ldr	r3, [sp, #20]
   166fc:	add	r3, r3, r2
   16700:	add	fp, fp, r3, lsl #4
   16704:	ldr	r3, [sp, #16]
   16708:	ldr	r2, [fp, #804]	; 0x324
   1670c:	add	r3, r2, r3
   16710:	add	r3, r3, #37	; 0x25
   16714:	lsl	r3, r3, #3
   16718:	ldrd	r0, [sl, r3]
   1671c:	cmp	r0, #1
   16720:	sbcs	r3, r1, #0
   16724:	blt	167dc <dim_enter_array@@Base+0x6c8>
   16728:	ldr	r3, [sl]
   1672c:	cmp	r2, #1
   16730:	ldr	r0, [sl, r3, lsl #2]
   16734:	add	r3, sl, r3, lsl #3
   16738:	asr	r1, r0, #31
   1673c:	strd	r0, [r3, #168]	; 0xa8
   16740:	ble	1678c <dim_enter_array@@Base+0x678>
   16744:	ldr	r3, [sp, #16]
   16748:	ldr	r6, [pc, #764]	; 16a4c <dim_enter_array@@Base+0x938>
   1674c:	add	r0, r2, r3
   16750:	mov	r2, r0
   16754:	add	r0, r0, #21
   16758:	add	ip, sl, r2, lsl #2
   1675c:	add	r0, sl, r0, lsl #3
   16760:	add	r6, r6, r3, lsl #2
   16764:	ldr	r2, [ip, #-4]!
   16768:	ldm	r0, {r1, lr}
   1676c:	asr	r5, r2, #31
   16770:	cmp	r6, ip
   16774:	mul	lr, r2, lr
   16778:	umull	r2, r3, r1, r2
   1677c:	mla	r1, r1, r5, lr
   16780:	add	r3, r1, r3
   16784:	strd	r2, [r0, #-8]!
   16788:	bne	16764 <dim_enter_array@@Base+0x650>
   1678c:	ldr	r3, [sp, #16]
   16790:	cmp	r3, #0
   16794:	ble	167dc <dim_enter_array@@Base+0x6c8>
   16798:	ldr	r3, [sp, #16]
   1679c:	ldr	r4, [pc, #692]	; 16a58 <dim_enter_array@@Base+0x944>
   167a0:	add	r1, r3, #21
   167a4:	add	r3, r3, #22
   167a8:	add	r1, sl, r1, lsl #3
   167ac:	add	sl, sl, r3, lsl #3
   167b0:	ldr	r2, [sl]
   167b4:	ldr	lr, [r1]
   167b8:	ldr	ip, [r1, #4]
   167bc:	ldr	r0, [sl, #4]
   167c0:	mul	ip, ip, r2
   167c4:	umull	r2, r3, r2, lr
   167c8:	mla	r0, lr, r0, ip
   167cc:	add	r3, r0, r3
   167d0:	strd	r2, [r1], #-8
   167d4:	cmp	r1, r4
   167d8:	bne	167b0 <dim_enter_array@@Base+0x69c>
   167dc:	add	sp, sp, #100	; 0x64
   167e0:	ldrd	r4, [sp]
   167e4:	ldrd	r6, [sp, #8]
   167e8:	ldrd	r8, [sp, #16]
   167ec:	ldrd	sl, [sp, #24]
   167f0:	add	sp, sp, #32
   167f4:	pop	{pc}		; (ldr pc, [sp], #4)
   167f8:	ldr	r1, [sp, #12]
   167fc:	ldr	r2, [sp, #20]
   16800:	add	r2, r2, r1
   16804:	mvn	r1, #0
   16808:	add	fp, fp, r2, lsl #4
   1680c:	str	r1, [fp, #800]	; 0x320
   16810:	str	r3, [fp, #840]	; 0x348
   16814:	str	r3, [fp, #844]	; 0x34c
   16818:	b	167dc <dim_enter_array@@Base+0x6c8>
   1681c:	bl	19af0 <handle_coda_error@@Base>
   16820:	b	16158 <dim_enter_array@@Base+0x44>
   16824:	mov	sl, fp
   16828:	mov	fp, r5
   1682c:	ldr	ip, [sl]
   16830:	b	164f0 <dim_enter_array@@Base+0x3dc>
   16834:	ldr	r8, [sp, #16]
   16838:	cmp	r3, #1
   1683c:	ldrd	r6, [sp, #40]	; 0x28
   16840:	add	r1, sl, r8, lsl #2
   16844:	add	r2, r8, #38	; 0x26
   16848:	lsl	r2, r2, #3
   1684c:	ldr	r0, [r1, #4]
   16850:	add	ip, sl, r2
   16854:	mul	lr, r0, r7
   16858:	asr	r5, r0, #31
   1685c:	umull	r0, r1, r0, r6
   16860:	mla	lr, r6, r5, lr
   16864:	add	r1, lr, r1
   16868:	strd	r0, [sl, r2]
   1686c:	beq	166f4 <dim_enter_array@@Base+0x5e0>
   16870:	ldr	r5, [pc, #484]	; 16a5c <dim_enter_array@@Base+0x948>
   16874:	add	r3, r3, r8
   16878:	add	r4, sl, r8, lsl #2
   1687c:	add	r4, r4, #4
   16880:	add	r5, r5, r3, lsl #3
   16884:	ldr	r2, [r4, #4]!
   16888:	ldr	r1, [ip]
   1688c:	ldr	r0, [ip, #4]
   16890:	asr	r7, r2, #31
   16894:	mul	r0, r2, r0
   16898:	umull	r2, r3, r2, r1
   1689c:	mla	r1, r1, r7, r0
   168a0:	add	r3, r1, r3
   168a4:	strd	r2, [ip, #8]!
   168a8:	cmp	ip, r5
   168ac:	bne	16884 <dim_enter_array@@Base+0x770>
   168b0:	b	166f4 <dim_enter_array@@Base+0x5e0>
   168b4:	mov	r4, #1
   168b8:	mov	r5, #0
   168bc:	strd	r4, [sp, #24]
   168c0:	strd	r4, [sp, #40]	; 0x28
   168c4:	b	16254 <dim_enter_array@@Base+0x140>
   168c8:	str	r3, [sp, #48]	; 0x30
   168cc:	ldr	r3, [sp, #16]
   168d0:	ldr	r0, [sp, #36]	; 0x24
   168d4:	str	r3, [r4, #32]
   168d8:	bl	123ac <malloc@plt>
   168dc:	cmp	r0, #0
   168e0:	str	r0, [r4]
   168e4:	ldr	r3, [sp, #48]	; 0x30
   168e8:	beq	169d0 <dim_enter_array@@Base+0x8bc>
   168ec:	ldrd	r2, [sp, #24]
   168f0:	cmp	r2, #1
   168f4:	sbcs	r3, r3, #0
   168f8:	blt	16314 <dim_enter_array@@Base+0x200>
   168fc:	ldr	r3, [r4]
   16900:	mvn	r1, #0
   16904:	ldr	r2, [sp, #36]	; 0x24
   16908:	add	r2, r2, r3
   1690c:	str	r1, [r3], #4
   16910:	cmp	r3, r2
   16914:	bne	1690c <dim_enter_array@@Base+0x7f8>
   16918:	b	16314 <dim_enter_array@@Base+0x200>
   1691c:	cmp	r1, #0
   16920:	ble	1694c <dim_enter_array@@Base+0x838>
   16924:	ldr	r3, [sp, #16]
   16928:	add	r1, sl, #4
   1692c:	mov	r2, #0
   16930:	add	r1, r1, ip, lsl #2
   16934:	add	r3, r3, #1
   16938:	add	r3, sl, r3, lsl #2
   1693c:	str	r2, [r3], #4
   16940:	cmp	r3, r1
   16944:	str	r2, [r3, #64]	; 0x40
   16948:	bne	1693c <dim_enter_array@@Base+0x828>
   1694c:	mov	r3, #0
   16950:	str	r3, [sp, #32]
   16954:	b	164f0 <dim_enter_array@@Base+0x3dc>
   16958:	bl	19af0 <handle_coda_error@@Base>
   1695c:	b	1649c <dim_enter_array@@Base+0x388>
   16960:	bl	19af0 <handle_coda_error@@Base>
   16964:	b	16454 <dim_enter_array@@Base+0x340>
   16968:	bl	19af0 <handle_coda_error@@Base>
   1696c:	b	163e8 <dim_enter_array@@Base+0x2d4>
   16970:	bl	19af0 <handle_coda_error@@Base>
   16974:	b	161a0 <dim_enter_array@@Base+0x8c>
   16978:	str	r8, [r6, #68]	; 0x44
   1697c:	ldr	r0, [r6, #104]	; 0x68
   16980:	bl	12274 <free@plt>
   16984:	str	r8, [r6, #104]	; 0x68
   16988:	str	r8, [r6, #136]	; 0x88
   1698c:	b	1638c <dim_enter_array@@Base+0x278>
   16990:	ldr	r3, [sp, #32]
   16994:	cmp	r3, #0
   16998:	bne	1666c <dim_enter_array@@Base+0x558>
   1699c:	ldr	r2, [sp, #16]
   169a0:	ldrd	r4, [sp, #40]	; 0x28
   169a4:	add	r3, sl, r2, lsl #2
   169a8:	add	ip, r2, #38	; 0x26
   169ac:	lsl	ip, ip, #3
   169b0:	ldr	r0, [r3, #4]
   169b4:	mul	lr, r0, r5
   169b8:	asr	r3, r0, #31
   169bc:	umull	r0, r1, r0, r4
   169c0:	mla	r3, r4, r3, lr
   169c4:	add	r1, r3, r1
   169c8:	strd	r0, [sl, ip]
   169cc:	b	166f4 <dim_enter_array@@Base+0x5e0>
   169d0:	mov	r2, #456	; 0x1c8
   169d4:	mov	r0, r3
   169d8:	ldr	r3, [sp, #52]	; 0x34
   169dc:	movw	r1, #40488	; 0x9e28
   169e0:	movt	r1, #1
   169e4:	str	r2, [sp]
   169e8:	ldr	r2, [sp, #36]	; 0x24
   169ec:	bl	1222c <coda_set_error@plt>
   169f0:	bl	19af0 <handle_coda_error@@Base>
   169f4:	b	168ec <dim_enter_array@@Base+0x7d8>
   169f8:	movw	r1, #41112	; 0xa098
   169fc:	movt	r1, #1
   16a00:	ldr	r3, [pc, #88]	; 16a60 <dim_enter_array@@Base+0x94c>
   16a04:	movw	r0, #41456	; 0xa1f0
   16a08:	movt	r0, #1
   16a0c:	movw	r2, #386	; 0x182
   16a10:	bl	12634 <__assert_fail@plt>
   16a14:	movw	r1, #41112	; 0xa098
   16a18:	movt	r1, #1
   16a1c:	ldr	r3, [pc, #60]	; 16a60 <dim_enter_array@@Base+0x94c>
   16a20:	movw	r0, #41368	; 0xa198
   16a24:	movt	r0, #1
   16a28:	movw	r2, #402	; 0x192
   16a2c:	bl	12634 <__assert_fail@plt>
   16a30:	movw	r1, #41112	; 0xa098
   16a34:	movt	r1, #1
   16a38:	ldr	r3, [pc, #32]	; 16a60 <dim_enter_array@@Base+0x94c>
   16a3c:	movw	r0, #41456	; 0xa1f0
   16a40:	movt	r0, #1
   16a44:	movw	r2, #349	; 0x15d
   16a48:	bl	12634 <__assert_fail@plt>
   16a4c:	strheq	sp, [r2], -ip
   16a50:	andeq	sp, r2, r0, lsl #2
   16a54:	andeq	sp, r2, r8, ror #3
   16a58:	andeq	sp, r2, r0, ror #2
   16a5c:	andeq	sp, r2, r0, ror #3
   16a60:	andeq	sl, r1, r8, ror r0

00016a64 <dim_leave_array@@Base>:
   16a64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16a68:	strd	r6, [sp, #8]
   16a6c:	str	r8, [sp, #16]
   16a70:	movw	r8, #49648	; 0xc1f0
   16a74:	movt	r8, #2
   16a78:	ldr	r3, [r8, #3360]	; 0xd20
   16a7c:	str	lr, [sp, #20]
   16a80:	cmp	r3, #0
   16a84:	blt	16bb4 <dim_leave_array@@Base+0x150>
   16a88:	add	r3, r3, r3, lsl #2
   16a8c:	movw	r7, #53432	; 0xd0b8
   16a90:	movt	r7, #2
   16a94:	ldr	lr, [r7]
   16a98:	add	r8, r8, r3, lsl #4
   16a9c:	ldr	r6, [r8, #800]	; 0x320
   16aa0:	ldr	r2, [r8, #804]	; 0x324
   16aa4:	sub	lr, lr, r2
   16aa8:	cmp	r2, #0
   16aac:	str	lr, [r7]
   16ab0:	ble	16afc <dim_leave_array@@Base+0x98>
   16ab4:	add	r5, r6, #18
   16ab8:	mov	r4, #0
   16abc:	add	r5, r7, r5, lsl #2
   16ac0:	b	16ad4 <dim_leave_array@@Base+0x70>
   16ac4:	ldr	r2, [r8, #804]	; 0x324
   16ac8:	add	r4, r4, #1
   16acc:	cmp	r2, r4
   16ad0:	ble	16af8 <dim_leave_array@@Base+0x94>
   16ad4:	ldr	r3, [r5], #4
   16ad8:	cmp	r3, #0
   16adc:	beq	16ac4 <dim_leave_array@@Base+0x60>
   16ae0:	ldr	r0, [r5, #32]
   16ae4:	add	r4, r4, #1
   16ae8:	bl	12274 <free@plt>
   16aec:	ldr	r2, [r8, #804]	; 0x324
   16af0:	cmp	r2, r4
   16af4:	bgt	16ad4 <dim_leave_array@@Base+0x70>
   16af8:	ldr	lr, [r7]
   16afc:	mov	ip, #0
   16b00:	mvn	r4, #0
   16b04:	cmp	lr, ip
   16b08:	str	ip, [r7, #68]	; 0x44
   16b0c:	str	r4, [r7, #104]	; 0x68
   16b10:	ble	16b50 <dim_leave_array@@Base+0xec>
   16b14:	ldr	r1, [pc, #180]	; 16bd0 <dim_leave_array@@Base+0x16c>
   16b18:	mov	r5, ip
   16b1c:	mov	r3, ip
   16b20:	ldr	r0, [r1], #4
   16b24:	cmp	r0, #0
   16b28:	beq	16b38 <dim_leave_array@@Base+0xd4>
   16b2c:	mov	ip, #1
   16b30:	mov	r4, r3
   16b34:	mov	r5, ip
   16b38:	add	r3, r3, #1
   16b3c:	cmp	r3, lr
   16b40:	bne	16b20 <dim_leave_array@@Base+0xbc>
   16b44:	cmp	ip, #0
   16b48:	strne	r5, [r7, #68]	; 0x44
   16b4c:	strne	r4, [r7, #104]	; 0x68
   16b50:	add	r2, r2, r6
   16b54:	add	r2, r2, #37	; 0x25
   16b58:	lsl	r2, r2, #3
   16b5c:	ldrd	r2, [r2, r7]
   16b60:	cmp	r2, #1
   16b64:	sbcs	r3, r3, #0
   16b68:	blt	16ba0 <dim_leave_array@@Base+0x13c>
   16b6c:	cmp	r6, #0
   16b70:	ble	16ba0 <dim_leave_array@@Base+0x13c>
   16b74:	ldr	r5, [pc, #88]	; 16bd4 <dim_leave_array@@Base+0x170>
   16b78:	add	r4, r6, #21
   16b7c:	add	r6, r6, #22
   16b80:	add	r4, r7, r4, lsl #3
   16b84:	add	r7, r7, r6, lsl #3
   16b88:	ldrd	r0, [r4]
   16b8c:	ldrd	r2, [r7]
   16b90:	bl	19b34 <handle_coda_error@@Base+0x44>
   16b94:	strd	r0, [r4], #-8
   16b98:	cmp	r5, r4
   16b9c:	bne	16b88 <dim_leave_array@@Base+0x124>
   16ba0:	ldrd	r4, [sp]
   16ba4:	ldrd	r6, [sp, #8]
   16ba8:	ldr	r8, [sp, #16]
   16bac:	add	sp, sp, #20
   16bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   16bb4:	movw	r1, #41112	; 0xa098
   16bb8:	movt	r1, #1
   16bbc:	ldr	r3, [pc, #20]	; 16bd8 <dim_leave_array@@Base+0x174>
   16bc0:	movw	r0, #41428	; 0xa1d4
   16bc4:	movt	r0, #1
   16bc8:	movw	r2, #579	; 0x243
   16bcc:	bl	12634 <__assert_fail@plt>
   16bd0:	andeq	sp, r2, r0, lsl #2
   16bd4:	andeq	sp, r2, r0, ror #2
   16bd8:	andeq	sl, r1, r8, lsl #1

00016bdc <dim_record_field_available@@Base>:
   16bdc:	mov	r2, #0
   16be0:	mov	r1, r2
   16be4:	mov	r0, r2
   16be8:	b	1576c <print_debug_data@@Base+0x17c>

00016bec <codadump_filter_remove@@Base>:
   16bec:	str	r4, [sp, #-8]!
   16bf0:	subs	r4, r0, #0
   16bf4:	str	lr, [sp, #4]
   16bf8:	beq	16c70 <codadump_filter_remove@@Base+0x84>
   16bfc:	ldr	r0, [r4]
   16c00:	cmp	r0, #0
   16c04:	beq	16c64 <codadump_filter_remove@@Base+0x78>
   16c08:	ldr	r3, [r0, #8]
   16c0c:	cmp	r3, #0
   16c10:	beq	16c20 <codadump_filter_remove@@Base+0x34>
   16c14:	add	r0, r0, #8
   16c18:	bl	16bec <codadump_filter_remove@@Base>
   16c1c:	ldr	r0, [r4]
   16c20:	ldr	r3, [r0, #4]
   16c24:	cmp	r3, #0
   16c28:	beq	16c38 <codadump_filter_remove@@Base+0x4c>
   16c2c:	add	r0, r0, #4
   16c30:	bl	16bec <codadump_filter_remove@@Base>
   16c34:	ldr	r0, [r4]
   16c38:	ldr	r3, [r0]
   16c3c:	cmp	r3, #0
   16c40:	beq	16c58 <codadump_filter_remove@@Base+0x6c>
   16c44:	mov	r0, r3
   16c48:	bl	12274 <free@plt>
   16c4c:	ldr	r0, [r4]
   16c50:	mov	r3, #0
   16c54:	str	r3, [r0]
   16c58:	bl	12274 <free@plt>
   16c5c:	mov	r3, #0
   16c60:	str	r3, [r4]
   16c64:	ldr	r4, [sp]
   16c68:	add	sp, sp, #4
   16c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c70:	movw	r3, #41460	; 0xa1f4
   16c74:	movt	r3, #1
   16c78:	movw	r1, #41596	; 0xa27c
   16c7c:	movt	r1, #1
   16c80:	movw	r0, #41684	; 0xa2d4
   16c84:	movt	r0, #1
   16c88:	mov	r2, #192	; 0xc0
   16c8c:	bl	12634 <__assert_fail@plt>
   16c90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16c94:	subs	r4, r0, #0
   16c98:	strd	r6, [sp, #8]
   16c9c:	strd	r8, [sp, #16]
   16ca0:	strd	sl, [sp, #24]
   16ca4:	str	lr, [sp, #32]
   16ca8:	sub	sp, sp, #12
   16cac:	beq	16f00 <codadump_filter_remove@@Base+0x314>
   16cb0:	cmp	r1, #0
   16cb4:	mov	r6, r1
   16cb8:	beq	16ee4 <codadump_filter_remove@@Base+0x2f8>
   16cbc:	ldrb	r3, [r4]
   16cc0:	mov	r7, r2
   16cc4:	sub	r2, r3, #9
   16cc8:	cmp	r3, #32
   16ccc:	cmpne	r2, #1
   16cd0:	bhi	16ce8 <codadump_filter_remove@@Base+0xfc>
   16cd4:	ldrb	r3, [r4, #1]!
   16cd8:	sub	r2, r3, #9
   16cdc:	cmp	r3, #32
   16ce0:	cmpne	r2, #1
   16ce4:	bls	16cd4 <codadump_filter_remove@@Base+0xe8>
   16ce8:	subs	r2, r3, #59	; 0x3b
   16cec:	and	r1, r3, #253	; 0xfd
   16cf0:	movne	r2, #1
   16cf4:	cmp	r3, #0
   16cf8:	movne	r3, r2
   16cfc:	moveq	r3, #0
   16d00:	cmp	r1, #44	; 0x2c
   16d04:	moveq	r3, #0
   16d08:	andne	r3, r3, #1
   16d0c:	cmp	r3, #0
   16d10:	beq	16e18 <codadump_filter_remove@@Base+0x22c>
   16d14:	add	r1, r4, #1
   16d18:	mov	r9, #0
   16d1c:	b	16d24 <codadump_filter_remove@@Base+0x138>
   16d20:	mov	r9, r5
   16d24:	ldrb	r3, [r1]
   16d28:	mov	r8, r1
   16d2c:	add	r5, r9, #1
   16d30:	add	r1, r1, #1
   16d34:	cmp	r3, #59	; 0x3b
   16d38:	cmpne	r3, #0
   16d3c:	and	r3, r3, #253	; 0xfd
   16d40:	movne	r2, #1
   16d44:	moveq	r2, #0
   16d48:	cmp	r3, #44	; 0x2c
   16d4c:	moveq	r3, #0
   16d50:	andne	r3, r2, #1
   16d54:	cmp	r3, #0
   16d58:	bne	16d20 <codadump_filter_remove@@Base+0x134>
   16d5c:	mov	r0, #12
   16d60:	bl	123ac <malloc@plt>
   16d64:	cmp	r0, #0
   16d68:	mov	fp, r0
   16d6c:	str	r0, [r6]
   16d70:	beq	16eb4 <codadump_filter_remove@@Base+0x2c8>
   16d74:	add	sl, r9, #2
   16d78:	mov	r0, sl
   16d7c:	bl	123ac <malloc@plt>
   16d80:	cmp	r0, #0
   16d84:	str	r0, [fp]
   16d88:	beq	16e38 <codadump_filter_remove@@Base+0x24c>
   16d8c:	mov	r2, r5
   16d90:	mov	r1, r4
   16d94:	bl	124a8 <strncpy@plt>
   16d98:	ldr	r2, [r6]
   16d9c:	mov	r3, #0
   16da0:	str	r3, [r2, #4]
   16da4:	ldr	r2, [r6]
   16da8:	str	r3, [r2, #8]
   16dac:	ldr	r3, [r6]
   16db0:	ldr	ip, [r3]
   16db4:	ldrb	r3, [ip, r9]
   16db8:	sub	r2, r3, #9
   16dbc:	cmp	r3, #32
   16dc0:	cmpne	r2, #1
   16dc4:	bhi	16dec <codadump_filter_remove@@Base+0x200>
   16dc8:	sub	r3, r9, #1
   16dcc:	rsb	r0, ip, #1
   16dd0:	add	r3, ip, r3
   16dd4:	add	r5, r0, r3
   16dd8:	ldrb	r2, [r3], #-1
   16ddc:	sub	r1, r2, #9
   16de0:	cmp	r2, #32
   16de4:	cmpne	r1, #1
   16de8:	bls	16dd4 <codadump_filter_remove@@Base+0x1e8>
   16dec:	mov	r3, #0
   16df0:	strb	r3, [ip, r5]
   16df4:	ldrb	r3, [r8]
   16df8:	cmp	r3, #46	; 0x2e
   16dfc:	beq	16e6c <codadump_filter_remove@@Base+0x280>
   16e00:	cmp	r3, #44	; 0x2c
   16e04:	cmpne	r3, #59	; 0x3b
   16e08:	addeq	r4, r4, sl
   16e0c:	strne	r8, [r7]
   16e10:	streq	r4, [r7]
   16e14:	b	16e1c <codadump_filter_remove@@Base+0x230>
   16e18:	str	r3, [r6]
   16e1c:	add	sp, sp, #12
   16e20:	ldrd	r4, [sp]
   16e24:	ldrd	r6, [sp, #8]
   16e28:	ldrd	r8, [sp, #16]
   16e2c:	ldrd	sl, [sp, #24]
   16e30:	add	sp, sp, #32
   16e34:	pop	{pc}		; (ldr pc, [sp], #4)
   16e38:	mov	r0, #76	; 0x4c
   16e3c:	mov	r2, sl
   16e40:	movw	r3, #41596	; 0xa27c
   16e44:	movt	r3, #1
   16e48:	movw	r1, #41720	; 0xa2f8
   16e4c:	movt	r1, #1
   16e50:	str	r0, [sp]
   16e54:	mvn	r0, #0
   16e58:	bl	1222c <coda_set_error@plt>
   16e5c:	bl	19af0 <handle_coda_error@@Base>
   16e60:	ldr	r3, [r6]
   16e64:	ldr	r0, [r3]
   16e68:	b	16d8c <codadump_filter_remove@@Base+0x1a0>
   16e6c:	ldr	r1, [r6]
   16e70:	mov	r2, r7
   16e74:	add	r0, r4, sl
   16e78:	add	r1, r1, #4
   16e7c:	bl	16c90 <codadump_filter_remove@@Base+0xa4>
   16e80:	ldr	r3, [r6]
   16e84:	ldr	r3, [r3, #4]
   16e88:	cmp	r3, #0
   16e8c:	bne	16e1c <codadump_filter_remove@@Base+0x230>
   16e90:	mov	r0, r6
   16e94:	add	sp, sp, #12
   16e98:	ldrd	r4, [sp]
   16e9c:	ldrd	r6, [sp, #8]
   16ea0:	ldrd	r8, [sp, #16]
   16ea4:	ldrd	sl, [sp, #24]
   16ea8:	ldr	lr, [sp, #32]
   16eac:	add	sp, sp, #36	; 0x24
   16eb0:	b	16bec <codadump_filter_remove@@Base>
   16eb4:	mov	r0, #69	; 0x45
   16eb8:	mov	r2, #12
   16ebc:	movw	r3, #41596	; 0xa27c
   16ec0:	movt	r3, #1
   16ec4:	movw	r1, #40488	; 0x9e28
   16ec8:	movt	r1, #1
   16ecc:	str	r0, [sp]
   16ed0:	mvn	r0, #0
   16ed4:	bl	1222c <coda_set_error@plt>
   16ed8:	bl	19af0 <handle_coda_error@@Base>
   16edc:	ldr	fp, [r6]
   16ee0:	b	16d74 <codadump_filter_remove@@Base+0x188>
   16ee4:	movw	r1, #41596	; 0xa27c
   16ee8:	movt	r1, #1
   16eec:	ldr	r3, [pc, #40]	; 16f1c <codadump_filter_remove@@Base+0x330>
   16ef0:	movw	r0, #41684	; 0xa2d4
   16ef4:	movt	r0, #1
   16ef8:	mov	r2, #45	; 0x2d
   16efc:	bl	12634 <__assert_fail@plt>
   16f00:	movw	r1, #41596	; 0xa27c
   16f04:	movt	r1, #1
   16f08:	ldr	r3, [pc, #12]	; 16f1c <codadump_filter_remove@@Base+0x330>
   16f0c:	movw	r0, #41700	; 0xa2e4
   16f10:	movt	r0, #1
   16f14:	mov	r2, #44	; 0x2c
   16f18:	bl	12634 <__assert_fail@plt>
   16f1c:	andeq	sl, r1, ip, lsl #4
   16f20:	strd	r4, [sp, #-16]!
   16f24:	subs	r5, r1, #0
   16f28:	str	r6, [sp, #8]
   16f2c:	str	lr, [sp, #12]
   16f30:	sub	sp, sp, #8
   16f34:	str	r1, [sp, #4]
   16f38:	beq	16f7c <codadump_filter_remove@@Base+0x390>
   16f3c:	ldr	r4, [r0]
   16f40:	cmp	r4, #0
   16f44:	streq	r5, [r0]
   16f48:	beq	16f7c <codadump_filter_remove@@Base+0x390>
   16f4c:	ldr	r0, [r4]
   16f50:	ldr	r1, [r5]
   16f54:	bl	121e4 <strcmp@plt>
   16f58:	subs	r6, r0, #0
   16f5c:	beq	16f90 <codadump_filter_remove@@Base+0x3a4>
   16f60:	ldr	r3, [r4, #8]
   16f64:	cmp	r3, #0
   16f68:	streq	r5, [r4, #8]
   16f6c:	beq	16f7c <codadump_filter_remove@@Base+0x390>
   16f70:	mov	r1, r5
   16f74:	add	r0, r4, #8
   16f78:	bl	16f20 <codadump_filter_remove@@Base+0x334>
   16f7c:	add	sp, sp, #8
   16f80:	ldrd	r4, [sp]
   16f84:	ldr	r6, [sp, #8]
   16f88:	add	sp, sp, #12
   16f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f90:	ldr	r3, [r4, #4]
   16f94:	cmp	r3, #0
   16f98:	beq	16fb8 <codadump_filter_remove@@Base+0x3cc>
   16f9c:	ldr	r1, [r5, #4]
   16fa0:	add	r0, r4, #4
   16fa4:	cmp	r1, #0
   16fa8:	beq	16fc4 <codadump_filter_remove@@Base+0x3d8>
   16fac:	bl	16f20 <codadump_filter_remove@@Base+0x334>
   16fb0:	ldr	r3, [sp, #4]
   16fb4:	str	r6, [r3, #4]
   16fb8:	add	r0, sp, #4
   16fbc:	bl	16bec <codadump_filter_remove@@Base>
   16fc0:	b	16f7c <codadump_filter_remove@@Base+0x390>
   16fc4:	bl	16bec <codadump_filter_remove@@Base>
   16fc8:	b	16fb8 <codadump_filter_remove@@Base+0x3cc>

00016fcc <codadump_filter_create@@Base>:
   16fcc:	mov	r3, #0
   16fd0:	str	r4, [sp, #-8]!
   16fd4:	str	lr, [sp, #4]
   16fd8:	sub	sp, sp, #16
   16fdc:	cmp	r0, r3
   16fe0:	str	r3, [sp, #4]
   16fe4:	str	r3, [sp, #8]
   16fe8:	str	r0, [sp, #12]
   16fec:	beq	17040 <codadump_filter_create@@Base+0x74>
   16ff0:	ldrb	r2, [r0]
   16ff4:	cmp	r2, r3
   16ff8:	beq	17064 <codadump_filter_create@@Base+0x98>
   16ffc:	mov	r4, r3
   17000:	b	1701c <codadump_filter_create@@Base+0x50>
   17004:	bl	16f20 <codadump_filter_remove@@Base+0x334>
   17008:	ldr	r0, [sp, #12]
   1700c:	str	r4, [sp, #8]
   17010:	ldrb	r3, [r0]
   17014:	cmp	r3, #0
   17018:	beq	17050 <codadump_filter_create@@Base+0x84>
   1701c:	add	r1, sp, #8
   17020:	add	r2, sp, #12
   17024:	bl	16c90 <codadump_filter_remove@@Base+0xa4>
   17028:	ldr	r3, [sp, #8]
   1702c:	add	r0, sp, #4
   17030:	subs	r1, r3, #0
   17034:	bne	17004 <codadump_filter_create@@Base+0x38>
   17038:	bl	16bec <codadump_filter_remove@@Base>
   1703c:	ldr	r0, [sp, #4]
   17040:	add	sp, sp, #16
   17044:	ldr	r4, [sp]
   17048:	add	sp, sp, #4
   1704c:	pop	{pc}		; (ldr pc, [sp], #4)
   17050:	ldr	r0, [sp, #4]
   17054:	add	sp, sp, #16
   17058:	ldr	r4, [sp]
   1705c:	add	sp, sp, #4
   17060:	pop	{pc}		; (ldr pc, [sp], #4)
   17064:	mov	r0, r2
   17068:	b	17040 <codadump_filter_create@@Base+0x74>

0001706c <codadump_filter_get_fieldname@@Base>:
   1706c:	cmp	r0, #0
   17070:	beq	1707c <codadump_filter_get_fieldname@@Base+0x10>
   17074:	ldr	r0, [r0]
   17078:	bx	lr
   1707c:	movw	r1, #41596	; 0xa27c
   17080:	movt	r1, #1
   17084:	ldr	r3, [pc, #20]	; 170a0 <codadump_filter_get_fieldname@@Base+0x34>
   17088:	movw	r0, #41684	; 0xa2d4
   1708c:	movt	r0, #1
   17090:	str	r4, [sp, #-8]!
   17094:	mov	r2, #216	; 0xd8
   17098:	str	lr, [sp, #4]
   1709c:	bl	12634 <__assert_fail@plt>
   170a0:	andeq	sl, r1, ip, lsl r2

000170a4 <codadump_filter_get_subfilter@@Base>:
   170a4:	cmp	r0, #0
   170a8:	beq	170b4 <codadump_filter_get_subfilter@@Base+0x10>
   170ac:	ldr	r0, [r0, #4]
   170b0:	bx	lr
   170b4:	movw	r1, #41596	; 0xa27c
   170b8:	movt	r1, #1
   170bc:	ldr	r3, [pc, #20]	; 170d8 <codadump_filter_get_subfilter@@Base+0x34>
   170c0:	movw	r0, #41684	; 0xa2d4
   170c4:	movt	r0, #1
   170c8:	str	r4, [sp, #-8]!
   170cc:	mov	r2, #223	; 0xdf
   170d0:	str	lr, [sp, #4]
   170d4:	bl	12634 <__assert_fail@plt>
   170d8:	andeq	sl, r1, ip, lsr r2

000170dc <codadump_filter_get_next_filter@@Base>:
   170dc:	cmp	r0, #0
   170e0:	beq	170ec <codadump_filter_get_next_filter@@Base+0x10>
   170e4:	ldr	r0, [r0, #8]
   170e8:	bx	lr
   170ec:	movw	r1, #41596	; 0xa27c
   170f0:	movt	r1, #1
   170f4:	ldr	r3, [pc, #20]	; 17110 <codadump_filter_get_next_filter@@Base+0x34>
   170f8:	movw	r0, #41684	; 0xa2d4
   170fc:	movt	r0, #1
   17100:	str	r4, [sp, #-8]!
   17104:	mov	r2, #230	; 0xe6
   17108:	str	lr, [sp, #4]
   1710c:	bl	12634 <__assert_fail@plt>
   17110:	andeq	sl, r1, ip, asr r2
   17114:	push	{r0, r1, r2, r3}
   17118:	movw	r3, #53400	; 0xd098
   1711c:	movt	r3, #2
   17120:	push	{lr}		; (str lr, [sp, #-4]!)
   17124:	sub	sp, sp, #12
   17128:	ldr	r1, [sp, #16]
   1712c:	add	ip, sp, #20
   17130:	mov	r2, ip
   17134:	ldr	r0, [r3]
   17138:	str	ip, [sp, #4]
   1713c:	bl	12538 <vfprintf@plt>
   17140:	add	sp, sp, #12
   17144:	pop	{lr}		; (ldr lr, [sp], #4)
   17148:	add	sp, sp, #16
   1714c:	bx	lr
   17150:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17154:	subs	r5, r1, #0
   17158:	strd	r6, [sp, #8]
   1715c:	str	r8, [sp, #16]
   17160:	str	lr, [sp, #20]
   17164:	ble	171fc <codadump_filter_get_next_filter@@Base+0x120>
   17168:	sub	r4, r0, #1
   1716c:	movw	r6, #40572	; 0x9e7c
   17170:	movt	r6, #1
   17174:	movw	r8, #41776	; 0xa330
   17178:	movt	r8, #1
   1717c:	movw	r7, #40696	; 0x9ef8
   17180:	movt	r7, #1
   17184:	add	r5, r4, r5
   17188:	b	171c0 <codadump_filter_get_next_filter@@Base+0xe4>
   1718c:	cmp	r1, #9
   17190:	beq	1725c <codadump_filter_get_next_filter@@Base+0x180>
   17194:	cmp	r1, #10
   17198:	beq	1724c <codadump_filter_get_next_filter@@Base+0x170>
   1719c:	cmp	r1, #8
   171a0:	beq	1723c <codadump_filter_get_next_filter@@Base+0x160>
   171a4:	sub	r3, r1, #32
   171a8:	cmp	r3, #94	; 0x5e
   171ac:	movls	r0, r7
   171b0:	movhi	r0, r8
   171b4:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   171b8:	cmp	r4, r5
   171bc:	beq	171fc <codadump_filter_get_next_filter@@Base+0x120>
   171c0:	ldrb	r1, [r4, #1]!
   171c4:	cmp	r1, #12
   171c8:	beq	17210 <codadump_filter_get_next_filter@@Base+0x134>
   171cc:	bls	1718c <codadump_filter_get_next_filter@@Base+0xb0>
   171d0:	cmp	r1, #34	; 0x22
   171d4:	beq	1722c <codadump_filter_get_next_filter@@Base+0x150>
   171d8:	cmp	r1, #92	; 0x5c
   171dc:	beq	1721c <codadump_filter_get_next_filter@@Base+0x140>
   171e0:	cmp	r1, #13
   171e4:	bne	171a4 <codadump_filter_get_next_filter@@Base+0xc8>
   171e8:	movw	r0, #40576	; 0x9e80
   171ec:	movt	r0, #1
   171f0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   171f4:	cmp	r4, r5
   171f8:	bne	171c0 <codadump_filter_get_next_filter@@Base+0xe4>
   171fc:	ldrd	r4, [sp]
   17200:	ldrd	r6, [sp, #8]
   17204:	ldr	r8, [sp, #16]
   17208:	add	sp, sp, #20
   1720c:	pop	{pc}		; (ldr pc, [sp], #4)
   17210:	mov	r0, r6
   17214:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17218:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1721c:	movw	r0, #40580	; 0x9e84
   17220:	movt	r0, #1
   17224:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17228:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1722c:	movw	r0, #41772	; 0xa32c
   17230:	movt	r0, #1
   17234:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17238:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1723c:	movw	r0, #40556	; 0x9e6c
   17240:	movt	r0, #1
   17244:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17248:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1724c:	movw	r0, #40564	; 0x9e74
   17250:	movt	r0, #1
   17254:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17258:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1725c:	movw	r0, #40560	; 0x9e70
   17260:	movt	r0, #1
   17264:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17268:	b	171b8 <codadump_filter_get_next_filter@@Base+0xdc>
   1726c:	movw	r3, #49608	; 0xc1c8
   17270:	movt	r3, #2
   17274:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17278:	ldr	r3, [r3]
   1727c:	mov	r2, #0
   17280:	mov	r4, r0
   17284:	strd	r6, [sp, #8]
   17288:	strd	r8, [sp, #16]
   1728c:	str	lr, [sp, #24]
   17290:	sub	sp, sp, #76	; 0x4c
   17294:	cmp	r3, r2
   17298:	str	r2, [sp, #12]
   1729c:	bne	17380 <codadump_filter_get_next_filter@@Base+0x2a4>
   172a0:	add	r1, sp, #8
   172a4:	mov	r0, r4
   172a8:	bl	12304 <coda_cursor_get_type_class@plt>
   172ac:	cmp	r0, #0
   172b0:	bne	17378 <codadump_filter_get_next_filter@@Base+0x29c>
   172b4:	ldr	r3, [sp, #8]
   172b8:	cmp	r3, #6
   172bc:	ldrls	pc, [pc, r3, lsl #2]
   172c0:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   172c4:	andeq	r7, r1, ip, lsl r4
   172c8:	andeq	r7, r1, r8, asr r4
   172cc:	andeq	r7, r1, r4, asr #9
   172d0:	andeq	r7, r1, r4, asr #9
   172d4:	andeq	r7, r1, r4, asr #9
   172d8:	andeq	r7, r1, r4, asr #9
   172dc:	andeq	r7, r1, r8, ror #7
   172e0:	add	r1, sp, #40	; 0x28
   172e4:	mov	r0, r4
   172e8:	bl	1240c <coda_cursor_get_string_length@plt>
   172ec:	cmp	r0, #0
   172f0:	bne	17a7c <codadump_filter_get_next_filter@@Base+0x9a0>
   172f4:	ldr	r0, [sp, #40]	; 0x28
   172f8:	add	r0, r0, #1
   172fc:	bl	123ac <malloc@plt>
   17300:	subs	r5, r0, #0
   17304:	beq	17ad0 <codadump_filter_get_next_filter@@Base+0x9f4>
   17308:	ldr	r2, [sp, #40]	; 0x28
   1730c:	mov	r0, r4
   17310:	mov	r1, r5
   17314:	add	r2, r2, #1
   17318:	bl	123d0 <coda_cursor_read_string@plt>
   1731c:	cmp	r0, #0
   17320:	bne	17a74 <codadump_filter_get_next_filter@@Base+0x998>
   17324:	movw	r0, #42180	; 0xa4c4
   17328:	movt	r0, #1
   1732c:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17330:	mov	r0, r5
   17334:	ldr	r1, [sp, #40]	; 0x28
   17338:	bl	17150 <codadump_filter_get_next_filter@@Base+0x74>
   1733c:	movw	r0, #42180	; 0xa4c4
   17340:	movt	r0, #1
   17344:	ldr	r1, [sp, #40]	; 0x28
   17348:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   1734c:	mov	r0, r5
   17350:	bl	12274 <free@plt>
   17354:	ldr	r3, [sp, #12]
   17358:	cmp	r3, #0
   1735c:	bne	173d8 <codadump_filter_get_next_filter@@Base+0x2fc>
   17360:	add	sp, sp, #76	; 0x4c
   17364:	ldrd	r4, [sp]
   17368:	ldrd	r6, [sp, #8]
   1736c:	ldrd	r8, [sp, #16]
   17370:	add	sp, sp, #24
   17374:	pop	{pc}		; (ldr pc, [sp], #4)
   17378:	bl	19af0 <handle_coda_error@@Base>
   1737c:	b	172b4 <codadump_filter_get_next_filter@@Base+0x1d8>
   17380:	add	r1, sp, #12
   17384:	bl	122f8 <coda_cursor_has_attributes@plt>
   17388:	cmp	r0, #0
   1738c:	bne	17534 <codadump_filter_get_next_filter@@Base+0x458>
   17390:	ldr	r3, [sp, #12]
   17394:	cmp	r3, #0
   17398:	beq	172a0 <codadump_filter_get_next_filter@@Base+0x1c4>
   1739c:	movw	r0, #41784	; 0xa338
   173a0:	movt	r0, #1
   173a4:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   173a8:	mov	r0, r4
   173ac:	bl	12478 <coda_cursor_goto_attributes@plt>
   173b0:	cmp	r0, #0
   173b4:	bne	179ac <codadump_filter_get_next_filter@@Base+0x8d0>
   173b8:	mov	r0, r4
   173bc:	bl	1726c <codadump_filter_get_next_filter@@Base+0x190>
   173c0:	mov	r0, r4
   173c4:	bl	123dc <coda_cursor_goto_parent@plt>
   173c8:	movw	r0, #41796	; 0xa344
   173cc:	movt	r0, #1
   173d0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   173d4:	b	172a0 <codadump_filter_get_next_filter@@Base+0x1c4>
   173d8:	movw	r0, #41820	; 0xa35c
   173dc:	movt	r0, #1
   173e0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   173e4:	b	17360 <codadump_filter_get_next_filter@@Base+0x284>
   173e8:	add	r1, sp, #28
   173ec:	mov	r0, r4
   173f0:	bl	12340 <coda_cursor_get_special_type@plt>
   173f4:	cmp	r0, #0
   173f8:	bne	17650 <codadump_filter_get_next_filter@@Base+0x574>
   173fc:	ldr	r3, [sp, #28]
   17400:	cmp	r3, #3
   17404:	ldrls	pc, [pc, r3, lsl #2]
   17408:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   1740c:	andeq	r7, r1, r4, lsr #10
   17410:	ldrdeq	r7, [r1], -r4
   17414:	andeq	r7, r1, ip, lsl #13
   17418:	andeq	r7, r1, r8, asr r6
   1741c:	movw	r0, #41808	; 0xa350
   17420:	movt	r0, #1
   17424:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17428:	add	r1, sp, #16
   1742c:	mov	r0, r4
   17430:	bl	1225c <coda_cursor_get_num_elements@plt>
   17434:	cmp	r0, #0
   17438:	bne	17640 <codadump_filter_get_next_filter@@Base+0x564>
   1743c:	ldr	r3, [sp, #16]
   17440:	cmp	r3, #0
   17444:	bgt	1753c <codadump_filter_get_next_filter@@Base+0x460>
   17448:	movw	r0, #41820	; 0xa35c
   1744c:	movt	r0, #1
   17450:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17454:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   17458:	movw	r0, #41824	; 0xa360
   1745c:	movt	r0, #1
   17460:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17464:	add	r2, sp, #40	; 0x28
   17468:	add	r1, sp, #32
   1746c:	mov	r0, r4
   17470:	bl	12508 <coda_cursor_get_array_dim@plt>
   17474:	cmp	r0, #0
   17478:	bne	17648 <codadump_filter_get_next_filter@@Base+0x56c>
   1747c:	ldr	r6, [sp, #32]
   17480:	cmp	r6, #0
   17484:	blt	174b4 <codadump_filter_get_next_filter@@Base+0x3d8>
   17488:	beq	17920 <codadump_filter_get_next_filter@@Base+0x844>
   1748c:	add	r3, sp, #36	; 0x24
   17490:	mov	r5, #1
   17494:	add	r1, r3, r6, lsl #2
   17498:	ldr	r2, [r3, #4]!
   1749c:	cmp	r1, r3
   174a0:	mul	r5, r2, r5
   174a4:	bne	17498 <codadump_filter_get_next_filter@@Base+0x3bc>
   174a8:	cmp	r5, #0
   174ac:	subgt	r6, r5, #1
   174b0:	bgt	17924 <codadump_filter_get_next_filter@@Base+0x848>
   174b4:	movw	r0, #42172	; 0xa4bc
   174b8:	movt	r0, #1
   174bc:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   174c0:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   174c4:	add	r1, sp, #28
   174c8:	mov	r0, r4
   174cc:	bl	123a0 <coda_cursor_get_read_type@plt>
   174d0:	cmp	r0, #0
   174d4:	bne	17638 <codadump_filter_get_next_filter@@Base+0x55c>
   174d8:	ldr	r3, [sp, #28]
   174dc:	add	r3, r3, #1
   174e0:	cmp	r3, #13
   174e4:	ldrls	pc, [pc, r3, lsl #2]
   174e8:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   174ec:	andeq	r7, r1, r4, lsr #10
   174f0:	ldrdeq	r7, [r1], -r0
   174f4:	strdeq	r7, [r1], -r8
   174f8:	ldrdeq	r7, [r1], -r0
   174fc:	strdeq	r7, [r1], -r8
   17500:	ldrdeq	r7, [r1], -r0
   17504:	strdeq	r7, [r1], -r8
   17508:	muleq	r1, ip, r8
   1750c:	ldrdeq	r7, [r1], -r8
   17510:	andeq	r7, r1, r0, lsr #15
   17514:	andeq	r7, r1, r0, lsr #15
   17518:	andeq	r7, r1, r0, ror #14
   1751c:	andeq	r7, r1, r0, ror #5
   17520:	andeq	r7, r1, ip, lsl #16
   17524:	movw	r0, #41912	; 0xa3b8
   17528:	movt	r0, #1
   1752c:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17530:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   17534:	bl	19af0 <handle_coda_error@@Base>
   17538:	b	17390 <codadump_filter_get_next_filter@@Base+0x2b4>
   1753c:	add	r1, sp, #20
   17540:	mov	r0, r4
   17544:	bl	122bc <coda_cursor_get_type@plt>
   17548:	cmp	r0, #0
   1754c:	bne	179bc <codadump_filter_get_next_filter@@Base+0x8e0>
   17550:	add	r1, sp, #24
   17554:	ldr	r0, [sp, #20]
   17558:	bl	124c0 <coda_type_get_record_union_status@plt>
   1755c:	cmp	r0, #0
   17560:	bne	179b4 <codadump_filter_get_next_filter@@Base+0x8d8>
   17564:	ldr	r5, [sp, #24]
   17568:	cmp	r5, #0
   1756c:	bne	176fc <codadump_filter_get_next_filter@@Base+0x620>
   17570:	mov	r0, r4
   17574:	bl	12370 <coda_cursor_goto_first_record_field@plt>
   17578:	cmp	r0, #0
   1757c:	bne	179e8 <codadump_filter_get_next_filter@@Base+0x90c>
   17580:	ldr	r3, [sp, #16]
   17584:	mov	r2, #0
   17588:	str	r2, [sp, #28]
   1758c:	cmp	r3, r2
   17590:	ble	1762c <codadump_filter_get_next_filter@@Base+0x550>
   17594:	movw	r8, #41812	; 0xa354
   17598:	movt	r8, #1
   1759c:	movw	r9, #40844	; 0x9f8c
   175a0:	movt	r9, #1
   175a4:	mov	r7, #1
   175a8:	add	r6, sp, #40	; 0x28
   175ac:	mov	r1, r5
   175b0:	mov	r2, r6
   175b4:	ldr	r0, [sp, #20]
   175b8:	bl	121fc <coda_type_get_record_field_hidden_status@plt>
   175bc:	cmp	r0, #0
   175c0:	bne	17988 <codadump_filter_get_next_filter@@Base+0x8ac>
   175c4:	ldr	r3, [sp, #40]	; 0x28
   175c8:	cmp	r3, #0
   175cc:	bne	17608 <codadump_filter_get_next_filter@@Base+0x52c>
   175d0:	cmp	r7, #0
   175d4:	beq	179cc <codadump_filter_get_next_filter@@Base+0x8f0>
   175d8:	add	r2, sp, #32
   175dc:	ldr	r0, [sp, #20]
   175e0:	ldr	r1, [sp, #28]
   175e4:	bl	125f8 <coda_type_get_record_field_name@plt>
   175e8:	cmp	r0, #0
   175ec:	bne	179c4 <codadump_filter_get_next_filter@@Base+0x8e8>
   175f0:	mov	r0, r8
   175f4:	ldr	r1, [sp, #32]
   175f8:	mov	r7, #0
   175fc:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17600:	mov	r0, r4
   17604:	bl	1726c <codadump_filter_get_next_filter@@Base+0x190>
   17608:	ldr	r3, [sp, #16]
   1760c:	ldr	r5, [sp, #28]
   17610:	sub	r2, r3, #1
   17614:	cmp	r2, r5
   17618:	bgt	17990 <codadump_filter_get_next_filter@@Base+0x8b4>
   1761c:	add	r5, r5, #1
   17620:	cmp	r5, r3
   17624:	str	r5, [sp, #28]
   17628:	blt	175ac <codadump_filter_get_next_filter@@Base+0x4d0>
   1762c:	mov	r0, r4
   17630:	bl	123dc <coda_cursor_goto_parent@plt>
   17634:	b	17448 <codadump_filter_get_next_filter@@Base+0x36c>
   17638:	bl	19af0 <handle_coda_error@@Base>
   1763c:	b	174d8 <codadump_filter_get_next_filter@@Base+0x3fc>
   17640:	bl	19af0 <handle_coda_error@@Base>
   17644:	b	1743c <codadump_filter_get_next_filter@@Base+0x360>
   17648:	bl	19af0 <handle_coda_error@@Base>
   1764c:	b	1747c <codadump_filter_get_next_filter@@Base+0x3a0>
   17650:	bl	19af0 <handle_coda_error@@Base>
   17654:	b	173fc <codadump_filter_get_next_filter@@Base+0x320>
   17658:	mov	r0, r4
   1765c:	add	r2, sp, #40	; 0x28
   17660:	add	r1, sp, #32
   17664:	bl	124cc <coda_cursor_read_complex_double_split@plt>
   17668:	cmp	r0, #0
   1766c:	bne	17a08 <codadump_filter_get_next_filter@@Base+0x92c>
   17670:	movw	r0, #41980	; 0xa3fc
   17674:	movt	r0, #1
   17678:	ldrd	r2, [sp, #32]
   1767c:	ldrd	r4, [sp, #40]	; 0x28
   17680:	strd	r4, [sp]
   17684:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17688:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   1768c:	mov	r0, r4
   17690:	add	r1, sp, #32
   17694:	bl	12424 <coda_cursor_read_double@plt>
   17698:	cmp	r0, #0
   1769c:	bne	17a10 <codadump_filter_get_next_filter@@Base+0x934>
   176a0:	vldr	d0, [sp, #32]
   176a4:	bl	12430 <coda_isNaN@plt>
   176a8:	cmp	r0, #0
   176ac:	bne	176c0 <codadump_filter_get_next_filter@@Base+0x5e4>
   176b0:	vldr	d0, [sp, #32]
   176b4:	bl	122d4 <coda_isInf@plt>
   176b8:	cmp	r0, #0
   176bc:	beq	17a30 <codadump_filter_get_next_filter@@Base+0x954>
   176c0:	movw	r0, #40604	; 0x9e9c
   176c4:	movt	r0, #1
   176c8:	ldrd	r2, [sp, #32]
   176cc:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   176d0:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   176d4:	mov	r0, r4
   176d8:	add	r1, sp, #40	; 0x28
   176dc:	bl	12424 <coda_cursor_read_double@plt>
   176e0:	cmp	r0, #0
   176e4:	bne	17a18 <codadump_filter_get_next_filter@@Base+0x93c>
   176e8:	movw	r0, #40604	; 0x9e9c
   176ec:	movt	r0, #1
   176f0:	ldrd	r2, [sp, #40]	; 0x28
   176f4:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   176f8:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   176fc:	add	r1, sp, #28
   17700:	mov	r0, r4
   17704:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   17708:	cmp	r0, #0
   1770c:	bne	17a00 <codadump_filter_get_next_filter@@Base+0x924>
   17710:	add	r2, sp, #40	; 0x28
   17714:	ldr	r0, [sp, #20]
   17718:	ldr	r1, [sp, #28]
   1771c:	bl	125f8 <coda_type_get_record_field_name@plt>
   17720:	cmp	r0, #0
   17724:	bne	179f8 <codadump_filter_get_next_filter@@Base+0x91c>
   17728:	mov	r0, r4
   1772c:	ldr	r1, [sp, #28]
   17730:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   17734:	cmp	r0, #0
   17738:	bne	179f0 <codadump_filter_get_next_filter@@Base+0x914>
   1773c:	movw	r0, #41812	; 0xa354
   17740:	movt	r0, #1
   17744:	ldr	r1, [sp, #40]	; 0x28
   17748:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   1774c:	mov	r0, r4
   17750:	bl	1726c <codadump_filter_get_next_filter@@Base+0x190>
   17754:	mov	r0, r4
   17758:	bl	123dc <coda_cursor_goto_parent@plt>
   1775c:	b	17448 <codadump_filter_get_next_filter@@Base+0x36c>
   17760:	add	r6, sp, #40	; 0x28
   17764:	mov	r0, r4
   17768:	mov	r1, r6
   1776c:	bl	12484 <coda_cursor_read_char@plt>
   17770:	cmp	r0, #0
   17774:	bne	17a5c <codadump_filter_get_next_filter@@Base+0x980>
   17778:	movw	r0, #42180	; 0xa4c4
   1777c:	movt	r0, #1
   17780:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17784:	mov	r0, r6
   17788:	mov	r1, #1
   1778c:	bl	17150 <codadump_filter_get_next_filter@@Base+0x74>
   17790:	movw	r0, #42180	; 0xa4c4
   17794:	movt	r0, #1
   17798:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   1779c:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   177a0:	mov	r0, r4
   177a4:	add	r1, sp, #40	; 0x28
   177a8:	bl	12424 <coda_cursor_read_double@plt>
   177ac:	cmp	r0, #0
   177b0:	bne	17a64 <codadump_filter_get_next_filter@@Base+0x988>
   177b4:	ldr	r1, [sp, #28]
   177b8:	ldrd	r2, [sp, #40]	; 0x28
   177bc:	cmp	r1, #8
   177c0:	movweq	r0, #40596	; 0x9e94
   177c4:	movwne	r0, #40604	; 0x9e9c
   177c8:	movteq	r0, #1
   177cc:	movtne	r0, #1
   177d0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   177d4:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   177d8:	mov	r0, r4
   177dc:	add	r1, sp, #32
   177e0:	bl	12418 <coda_cursor_read_uint64@plt>
   177e4:	cmp	r0, #0
   177e8:	bne	17a28 <codadump_filter_get_next_filter@@Base+0x94c>
   177ec:	add	r2, sp, #40	; 0x28
   177f0:	ldrd	r0, [sp, #32]
   177f4:	bl	12268 <coda_str64u@plt>
   177f8:	add	r1, sp, #40	; 0x28
   177fc:	movw	r0, #40876	; 0x9fac
   17800:	movt	r0, #1
   17804:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17808:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   1780c:	add	r1, sp, #40	; 0x28
   17810:	mov	r0, r4
   17814:	bl	1258c <coda_cursor_get_bit_size@plt>
   17818:	cmp	r0, #0
   1781c:	bne	17a84 <codadump_filter_get_next_filter@@Base+0x9a8>
   17820:	ldr	r5, [sp, #40]	; 0x28
   17824:	ldr	r8, [sp, #44]	; 0x2c
   17828:	lsr	r2, r5, #3
   1782c:	ands	r1, r5, #7
   17830:	movne	r1, #1
   17834:	orr	r2, r2, r8, lsl #29
   17838:	adds	r6, r2, r1
   1783c:	mov	r0, r6
   17840:	bl	123ac <malloc@plt>
   17844:	subs	r9, r0, #0
   17848:	beq	17a9c <codadump_filter_get_next_filter@@Base+0x9c0>
   1784c:	mov	r0, r4
   17850:	mov	r1, r9
   17854:	stm	sp, {r5, r8}
   17858:	mov	r2, #0
   1785c:	mov	r3, #0
   17860:	bl	1261c <coda_cursor_read_bits@plt>
   17864:	cmp	r0, #0
   17868:	bne	17a8c <codadump_filter_get_next_filter@@Base+0x9b0>
   1786c:	movw	r0, #42180	; 0xa4c4
   17870:	movt	r0, #1
   17874:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17878:	mov	r1, r6
   1787c:	mov	r0, r9
   17880:	bl	17150 <codadump_filter_get_next_filter@@Base+0x74>
   17884:	movw	r0, #42180	; 0xa4c4
   17888:	movt	r0, #1
   1788c:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17890:	mov	r0, r9
   17894:	bl	12274 <free@plt>
   17898:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   1789c:	mov	r0, r4
   178a0:	add	r1, sp, #32
   178a4:	bl	1252c <coda_cursor_read_int64@plt>
   178a8:	cmp	r0, #0
   178ac:	bne	17a20 <codadump_filter_get_next_filter@@Base+0x944>
   178b0:	add	r2, sp, #40	; 0x28
   178b4:	ldrd	r0, [sp, #32]
   178b8:	bl	12628 <coda_str64@plt>
   178bc:	add	r1, sp, #40	; 0x28
   178c0:	movw	r0, #40876	; 0x9fac
   178c4:	movt	r0, #1
   178c8:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   178cc:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   178d0:	mov	r0, r4
   178d4:	add	r1, sp, #40	; 0x28
   178d8:	bl	125bc <coda_cursor_read_int32@plt>
   178dc:	cmp	r0, #0
   178e0:	bne	17a94 <codadump_filter_get_next_filter@@Base+0x9b8>
   178e4:	movw	r0, #42032	; 0xa430
   178e8:	movt	r0, #1
   178ec:	ldr	r1, [sp, #40]	; 0x28
   178f0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   178f4:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   178f8:	mov	r0, r4
   178fc:	add	r1, sp, #40	; 0x28
   17900:	bl	12298 <coda_cursor_read_uint32@plt>
   17904:	cmp	r0, #0
   17908:	bne	17a6c <codadump_filter_get_next_filter@@Base+0x990>
   1790c:	movw	r0, #40592	; 0x9e90
   17910:	movt	r0, #1
   17914:	ldr	r1, [sp, #40]	; 0x28
   17918:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   1791c:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   17920:	mov	r5, #1
   17924:	mov	r0, r4
   17928:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   1792c:	cmp	r0, #0
   17930:	bne	179d8 <codadump_filter_get_next_filter@@Base+0x8fc>
   17934:	movw	r8, #40844	; 0x9f8c
   17938:	movt	r8, #1
   1793c:	mov	r7, #0
   17940:	mov	r0, r4
   17944:	bl	1726c <codadump_filter_get_next_filter@@Base+0x190>
   17948:	cmp	r7, r6
   1794c:	mov	r0, r8
   17950:	add	r7, r7, #1
   17954:	blt	1796c <codadump_filter_get_next_filter@@Base+0x890>
   17958:	cmp	r5, r7
   1795c:	bgt	17940 <codadump_filter_get_next_filter@@Base+0x864>
   17960:	mov	r0, r4
   17964:	bl	123dc <coda_cursor_goto_parent@plt>
   17968:	b	174b4 <codadump_filter_get_next_filter@@Base+0x3d8>
   1796c:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17970:	mov	r0, r4
   17974:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   17978:	cmp	r0, #0
   1797c:	beq	17958 <codadump_filter_get_next_filter@@Base+0x87c>
   17980:	bl	19af0 <handle_coda_error@@Base>
   17984:	b	17958 <codadump_filter_get_next_filter@@Base+0x87c>
   17988:	bl	19af0 <handle_coda_error@@Base>
   1798c:	b	175c4 <codadump_filter_get_next_filter@@Base+0x4e8>
   17990:	mov	r0, r4
   17994:	bl	12568 <coda_cursor_goto_next_record_field@plt>
   17998:	cmp	r0, #0
   1799c:	bne	179e0 <codadump_filter_get_next_filter@@Base+0x904>
   179a0:	ldr	r3, [sp, #16]
   179a4:	ldr	r5, [sp, #28]
   179a8:	b	1761c <codadump_filter_get_next_filter@@Base+0x540>
   179ac:	bl	19af0 <handle_coda_error@@Base>
   179b0:	b	173b8 <codadump_filter_get_next_filter@@Base+0x2dc>
   179b4:	bl	19af0 <handle_coda_error@@Base>
   179b8:	b	17564 <codadump_filter_get_next_filter@@Base+0x488>
   179bc:	bl	19af0 <handle_coda_error@@Base>
   179c0:	b	17550 <codadump_filter_get_next_filter@@Base+0x474>
   179c4:	bl	19af0 <handle_coda_error@@Base>
   179c8:	b	175f0 <codadump_filter_get_next_filter@@Base+0x514>
   179cc:	mov	r0, r9
   179d0:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   179d4:	b	175d8 <codadump_filter_get_next_filter@@Base+0x4fc>
   179d8:	bl	19af0 <handle_coda_error@@Base>
   179dc:	b	17934 <codadump_filter_get_next_filter@@Base+0x858>
   179e0:	bl	19af0 <handle_coda_error@@Base>
   179e4:	b	179a0 <codadump_filter_get_next_filter@@Base+0x8c4>
   179e8:	bl	19af0 <handle_coda_error@@Base>
   179ec:	b	17580 <codadump_filter_get_next_filter@@Base+0x4a4>
   179f0:	bl	19af0 <handle_coda_error@@Base>
   179f4:	b	1773c <codadump_filter_get_next_filter@@Base+0x660>
   179f8:	bl	19af0 <handle_coda_error@@Base>
   179fc:	b	17728 <codadump_filter_get_next_filter@@Base+0x64c>
   17a00:	bl	19af0 <handle_coda_error@@Base>
   17a04:	b	17710 <codadump_filter_get_next_filter@@Base+0x634>
   17a08:	bl	19af0 <handle_coda_error@@Base>
   17a0c:	b	17670 <codadump_filter_get_next_filter@@Base+0x594>
   17a10:	bl	19af0 <handle_coda_error@@Base>
   17a14:	b	176a0 <codadump_filter_get_next_filter@@Base+0x5c4>
   17a18:	bl	19af0 <handle_coda_error@@Base>
   17a1c:	b	176e8 <codadump_filter_get_next_filter@@Base+0x60c>
   17a20:	bl	19af0 <handle_coda_error@@Base>
   17a24:	b	178b0 <codadump_filter_get_next_filter@@Base+0x7d4>
   17a28:	bl	19af0 <handle_coda_error@@Base>
   17a2c:	b	177ec <codadump_filter_get_next_filter@@Base+0x710>
   17a30:	movw	r0, #41920	; 0xa3c0
   17a34:	movt	r0, #1
   17a38:	vldr	d0, [sp, #32]
   17a3c:	add	r1, sp, #40	; 0x28
   17a40:	bl	12250 <coda_time_double_to_string@plt>
   17a44:	cmp	r0, #0
   17a48:	beq	17b00 <codadump_filter_get_next_filter@@Base+0xa24>
   17a4c:	movw	r0, #41952	; 0xa3e0
   17a50:	movt	r0, #1
   17a54:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17a58:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>
   17a5c:	bl	19af0 <handle_coda_error@@Base>
   17a60:	b	17778 <codadump_filter_get_next_filter@@Base+0x69c>
   17a64:	bl	19af0 <handle_coda_error@@Base>
   17a68:	b	177b4 <codadump_filter_get_next_filter@@Base+0x6d8>
   17a6c:	bl	19af0 <handle_coda_error@@Base>
   17a70:	b	1790c <codadump_filter_get_next_filter@@Base+0x830>
   17a74:	bl	19af0 <handle_coda_error@@Base>
   17a78:	b	17324 <codadump_filter_get_next_filter@@Base+0x248>
   17a7c:	bl	19af0 <handle_coda_error@@Base>
   17a80:	b	172f4 <codadump_filter_get_next_filter@@Base+0x218>
   17a84:	bl	19af0 <handle_coda_error@@Base>
   17a88:	b	17820 <codadump_filter_get_next_filter@@Base+0x744>
   17a8c:	bl	19af0 <handle_coda_error@@Base>
   17a90:	b	1786c <codadump_filter_get_next_filter@@Base+0x790>
   17a94:	bl	19af0 <handle_coda_error@@Base>
   17a98:	b	178e4 <codadump_filter_get_next_filter@@Base+0x808>
   17a9c:	movw	r0, #334	; 0x14e
   17aa0:	mov	r2, r6
   17aa4:	movw	r3, #41828	; 0xa364
   17aa8:	movt	r3, #1
   17aac:	movw	r1, #40488	; 0x9e28
   17ab0:	movt	r1, #1
   17ab4:	str	r0, [sp]
   17ab8:	mvn	r0, #0
   17abc:	bl	1222c <coda_set_error@plt>
   17ac0:	bl	19af0 <handle_coda_error@@Base>
   17ac4:	ldr	r5, [sp, #40]	; 0x28
   17ac8:	ldr	r8, [sp, #44]	; 0x2c
   17acc:	b	1784c <codadump_filter_get_next_filter@@Base+0x770>
   17ad0:	ldr	r2, [sp, #40]	; 0x28
   17ad4:	movw	r0, #303	; 0x12f
   17ad8:	movw	r3, #41828	; 0xa364
   17adc:	movt	r3, #1
   17ae0:	movw	r1, #40488	; 0x9e28
   17ae4:	movt	r1, #1
   17ae8:	str	r0, [sp]
   17aec:	mvn	r0, #0
   17af0:	add	r2, r2, #1
   17af4:	bl	1222c <coda_set_error@plt>
   17af8:	bl	19af0 <handle_coda_error@@Base>
   17afc:	b	17308 <codadump_filter_get_next_filter@@Base+0x22c>
   17b00:	add	r1, sp, #40	; 0x28
   17b04:	movw	r0, #40544	; 0x9e60
   17b08:	movt	r0, #1
   17b0c:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17b10:	b	17354 <codadump_filter_get_next_filter@@Base+0x278>

00017b14 <print_json_data@@Base>:
   17b14:	movw	r3, #49608	; 0xc1c8
   17b18:	movt	r3, #2
   17b1c:	str	r4, [sp, #-8]!
   17b20:	movw	r4, #49648	; 0xc1f0
   17b24:	movt	r4, #2
   17b28:	str	lr, [sp, #4]
   17b2c:	sub	sp, sp, #528	; 0x210
   17b30:	str	r0, [r3]
   17b34:	add	r1, sp, #4
   17b38:	ldr	r0, [r4]
   17b3c:	bl	12238 <coda_open@plt>
   17b40:	cmp	r0, #0
   17b44:	bne	17bbc <print_json_data@@Base+0xa8>
   17b48:	add	r0, sp, #8
   17b4c:	ldr	r1, [sp, #4]
   17b50:	bl	12364 <coda_cursor_set_product@plt>
   17b54:	cmp	r0, #0
   17b58:	bne	17bb4 <print_json_data@@Base+0xa0>
   17b5c:	movw	r3, #53424	; 0xd0b0
   17b60:	movt	r3, #2
   17b64:	ldr	r1, [r3]
   17b68:	cmp	r1, #0
   17b6c:	beq	17b80 <print_json_data@@Base+0x6c>
   17b70:	add	r0, sp, #8
   17b74:	bl	12544 <coda_cursor_goto@plt>
   17b78:	cmp	r0, #0
   17b7c:	bne	17bd4 <print_json_data@@Base+0xc0>
   17b80:	mov	r0, #0
   17b84:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   17b88:	add	r0, sp, #8
   17b8c:	bl	1726c <codadump_filter_get_next_filter@@Base+0x190>
   17b90:	movw	r0, #46756	; 0xb6a4
   17b94:	movt	r0, #1
   17b98:	bl	17114 <codadump_filter_get_next_filter@@Base+0x38>
   17b9c:	ldr	r0, [sp, #4]
   17ba0:	bl	12520 <coda_close@plt>
   17ba4:	add	sp, sp, #528	; 0x210
   17ba8:	ldr	r4, [sp]
   17bac:	add	sp, sp, #4
   17bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bb4:	bl	19af0 <handle_coda_error@@Base>
   17bb8:	b	17b5c <print_json_data@@Base+0x48>
   17bbc:	bl	125e0 <coda_get_errno@plt>
   17bc0:	ldr	r3, [r0]
   17bc4:	cmn	r3, #21
   17bc8:	beq	17bdc <print_json_data@@Base+0xc8>
   17bcc:	bl	19af0 <handle_coda_error@@Base>
   17bd0:	b	17b48 <print_json_data@@Base+0x34>
   17bd4:	bl	19af0 <handle_coda_error@@Base>
   17bd8:	b	17b80 <print_json_data@@Base+0x6c>
   17bdc:	mov	r0, #0
   17be0:	bl	12280 <coda_set_option_use_mmap@plt>
   17be4:	add	r1, sp, #4
   17be8:	ldr	r0, [r4]
   17bec:	bl	12238 <coda_open@plt>
   17bf0:	mov	r4, r0
   17bf4:	mov	r0, #1
   17bf8:	bl	12280 <coda_set_option_use_mmap@plt>
   17bfc:	cmp	r4, #0
   17c00:	bne	17bcc <print_json_data@@Base+0xb8>
   17c04:	b	17b48 <print_json_data@@Base+0x34>
   17c08:	add	r1, r1, r1, lsl #2
   17c0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17c10:	strd	r6, [sp, #8]
   17c14:	lsl	r1, r1, #4
   17c18:	str	r8, [sp, #16]
   17c1c:	movw	r8, #49648	; 0xc1f0
   17c20:	movt	r8, #2
   17c24:	str	lr, [sp, #20]
   17c28:	add	r6, r8, r1
   17c2c:	ldr	r3, [r6, #804]	; 0x324
   17c30:	cmp	r3, #0
   17c34:	ble	17cb0 <print_json_data@@Base+0x19c>
   17c38:	add	r1, r1, #808	; 0x328
   17c3c:	movw	r7, #49644	; 0xc1ec
   17c40:	movt	r7, #2
   17c44:	mov	r5, r0
   17c48:	add	r8, r8, r1
   17c4c:	mov	r4, #0
   17c50:	ldr	r2, [r7]
   17c54:	movw	r3, #53432	; 0xd0b8
   17c58:	movt	r3, #2
   17c5c:	cmp	r2, #0
   17c60:	beq	17ccc <print_json_data@@Base+0x1b8>
   17c64:	ldr	r2, [r6, #800]	; 0x320
   17c68:	movw	r1, #42028	; 0xa42c
   17c6c:	movt	r1, #1
   17c70:	mov	r0, r5
   17c74:	add	r2, r4, r2
   17c78:	add	ip, r2, #18
   17c7c:	add	lr, r3, r2, lsl #2
   17c80:	ldr	ip, [r3, ip, lsl #2]
   17c84:	ldr	r3, [lr, #4]
   17c88:	cmp	ip, #0
   17c8c:	beq	17cf0 <print_json_data@@Base+0x1dc>
   17c90:	ldr	r2, [lr, #36]	; 0x24
   17c94:	bl	1243c <fprintf@plt>
   17c98:	ldr	r3, [r6, #804]	; 0x324
   17c9c:	add	r4, r4, #1
   17ca0:	mov	r1, r5
   17ca4:	mov	r0, #44	; 0x2c
   17ca8:	cmp	r4, r3
   17cac:	blt	17cc4 <print_json_data@@Base+0x1b0>
   17cb0:	ldrd	r4, [sp]
   17cb4:	ldrd	r6, [sp, #8]
   17cb8:	ldr	r8, [sp, #16]
   17cbc:	add	sp, sp, #20
   17cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17cc4:	bl	12574 <fputc@plt>
   17cc8:	b	17c50 <print_json_data@@Base+0x13c>
   17ccc:	ldr	r3, [r8, r4, lsl #2]
   17cd0:	movw	r1, #42032	; 0xa430
   17cd4:	movt	r1, #1
   17cd8:	mov	r0, r5
   17cdc:	cmn	r3, #1
   17ce0:	mov	r2, r3
   17ce4:	beq	17d04 <print_json_data@@Base+0x1f0>
   17ce8:	bl	1243c <fprintf@plt>
   17cec:	b	17c98 <print_json_data@@Base+0x184>
   17cf0:	mov	r2, r3
   17cf4:	movw	r1, #42032	; 0xa430
   17cf8:	movt	r1, #1
   17cfc:	bl	1243c <fprintf@plt>
   17d00:	b	17c98 <print_json_data@@Base+0x184>
   17d04:	mov	r1, r5
   17d08:	mov	r0, #63	; 0x3f
   17d0c:	bl	12574 <fputc@plt>
   17d10:	b	17c98 <print_json_data@@Base+0x184>

00017d14 <print_full_field_name@@Base>:
   17d14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17d18:	cmp	r1, #1
   17d1c:	mov	r5, r0
   17d20:	strd	r6, [sp, #8]
   17d24:	strd	r8, [sp, #16]
   17d28:	strd	sl, [sp, #24]
   17d2c:	str	lr, [sp, #32]
   17d30:	sub	sp, sp, #20
   17d34:	str	r2, [sp, #4]
   17d38:	beq	17eb4 <print_full_field_name@@Base+0x1a0>
   17d3c:	movw	r4, #49648	; 0xc1f0
   17d40:	movt	r4, #2
   17d44:	ldr	r3, [r4, #3748]	; 0xea4
   17d48:	mov	r8, r1
   17d4c:	cmp	r3, #0
   17d50:	ble	17d88 <print_full_field_name@@Base+0x74>
   17d54:	add	r7, r4, #3616	; 0xe20
   17d58:	mov	r6, #0
   17d5c:	b	17d64 <print_full_field_name@@Base+0x50>
   17d60:	bl	12574 <fputc@plt>
   17d64:	mov	r1, r5
   17d68:	ldr	r0, [r7, #4]!
   17d6c:	add	r6, r6, #1
   17d70:	bl	12604 <fputs@plt>
   17d74:	ldr	r3, [r4, #3748]	; 0xea4
   17d78:	mov	r1, r5
   17d7c:	mov	r0, #46	; 0x2e
   17d80:	cmp	r3, r6
   17d84:	bgt	17d60 <print_full_field_name@@Base+0x4c>
   17d88:	cmp	r8, #2
   17d8c:	beq	17dac <print_full_field_name@@Base+0x98>
   17d90:	add	sp, sp, #20
   17d94:	ldrd	r4, [sp]
   17d98:	ldrd	r6, [sp, #8]
   17d9c:	ldrd	r8, [sp, #16]
   17da0:	ldrd	sl, [sp, #24]
   17da4:	add	sp, sp, #32
   17da8:	pop	{pc}		; (ldr pc, [sp], #4)
   17dac:	ldr	r3, [r4, #136]	; 0x88
   17db0:	cmp	r3, #0
   17db4:	ble	1801c <print_full_field_name@@Base+0x308>
   17db8:	mov	r8, #0
   17dbc:	movw	sl, #42040	; 0xa438
   17dc0:	movt	sl, #1
   17dc4:	ldr	r7, [pc, #624]	; 1803c <print_full_field_name@@Base+0x328>
   17dc8:	mov	r6, r8
   17dcc:	add	r9, sp, #12
   17dd0:	b	17de4 <print_full_field_name@@Base+0xd0>
   17dd4:	ldr	r3, [r4, #136]	; 0x88
   17dd8:	add	r6, r6, #1
   17ddc:	cmp	r3, r6
   17de0:	ble	17e60 <print_full_field_name@@Base+0x14c>
   17de4:	mov	r1, r9
   17de8:	ldr	r0, [r7, #4]!
   17dec:	bl	12640 <coda_type_get_class@plt>
   17df0:	cmp	r0, #0
   17df4:	bne	17fe4 <print_full_field_name@@Base+0x2d0>
   17df8:	ldr	ip, [sp, #12]
   17dfc:	cmp	ip, #1
   17e00:	bne	17dd4 <print_full_field_name@@Base+0xc0>
   17e04:	add	r3, r8, r8, lsl #2
   17e08:	add	r3, r4, r3, lsl #4
   17e0c:	ldr	r2, [r3, #804]	; 0x324
   17e10:	cmp	r2, #0
   17e14:	ble	17dd4 <print_full_field_name@@Base+0xc0>
   17e18:	ldr	lr, [r3, #800]	; 0x320
   17e1c:	mov	r1, r5
   17e20:	mov	r0, #44	; 0x2c
   17e24:	mov	r2, #2
   17e28:	mov	r3, r5
   17e2c:	cmp	lr, #0
   17e30:	bne	17ff8 <print_full_field_name@@Base+0x2e4>
   17e34:	mov	r1, ip
   17e38:	mov	r0, sl
   17e3c:	bl	12358 <fwrite@plt>
   17e40:	mov	r1, r8
   17e44:	mov	r0, r5
   17e48:	bl	17c08 <print_json_data@@Base+0xf4>
   17e4c:	ldr	r3, [r4, #136]	; 0x88
   17e50:	add	r6, r6, #1
   17e54:	add	r8, r8, #1
   17e58:	cmp	r3, r6
   17e5c:	bgt	17de4 <print_full_field_name@@Base+0xd0>
   17e60:	ldr	r3, [sp, #4]
   17e64:	cmp	r3, #0
   17e68:	beq	17fec <print_full_field_name@@Base+0x2d8>
   17e6c:	ldr	r3, [r4, #3360]	; 0xd20
   17e70:	cmp	r3, r8
   17e74:	ble	17fec <print_full_field_name@@Base+0x2d8>
   17e78:	add	r3, r8, r8, lsl #2
   17e7c:	add	r4, r4, r3, lsl #4
   17e80:	ldr	r3, [r4, #800]	; 0x320
   17e84:	cmp	r3, #0
   17e88:	beq	18000 <print_full_field_name@@Base+0x2ec>
   17e8c:	mov	r1, r5
   17e90:	mov	r0, #44	; 0x2c
   17e94:	bl	12574 <fputc@plt>
   17e98:	mov	r1, r8
   17e9c:	mov	r0, r5
   17ea0:	bl	17c08 <print_json_data@@Base+0xf4>
   17ea4:	mov	r1, r5
   17ea8:	mov	r0, #93	; 0x5d
   17eac:	bl	12574 <fputc@plt>
   17eb0:	b	17d90 <print_full_field_name@@Base+0x7c>
   17eb4:	movw	r4, #49648	; 0xc1f0
   17eb8:	movt	r4, #2
   17ebc:	ldr	r3, [r4, #136]	; 0x88
   17ec0:	mov	r8, #0
   17ec4:	cmp	r3, #0
   17ec8:	ble	17f8c <print_full_field_name@@Base+0x278>
   17ecc:	movw	fp, #42036	; 0xa434
   17ed0:	movt	fp, #1
   17ed4:	mov	sl, r8
   17ed8:	mov	r6, r8
   17edc:	add	r7, r4, #4
   17ee0:	add	r9, sp, #12
   17ee4:	b	17f44 <print_full_field_name@@Base+0x230>
   17ee8:	cmp	r3, #1
   17eec:	bne	17f34 <print_full_field_name@@Base+0x220>
   17ef0:	cmp	r6, #0
   17ef4:	beq	17fd4 <print_full_field_name@@Base+0x2c0>
   17ef8:	add	r3, r8, r8, lsl #2
   17efc:	add	r3, r4, r3, lsl #4
   17f00:	ldr	r3, [r3, #804]	; 0x324
   17f04:	cmp	r3, #0
   17f08:	ble	17f30 <print_full_field_name@@Base+0x21c>
   17f0c:	mov	r1, r5
   17f10:	mov	r0, #91	; 0x5b
   17f14:	bl	12574 <fputc@plt>
   17f18:	mov	r1, r8
   17f1c:	mov	r0, r5
   17f20:	bl	17c08 <print_json_data@@Base+0xf4>
   17f24:	mov	r1, r5
   17f28:	mov	r0, #93	; 0x5d
   17f2c:	bl	12574 <fputc@plt>
   17f30:	add	r8, r8, #1
   17f34:	ldr	r3, [r4, #136]	; 0x88
   17f38:	add	r6, r6, #1
   17f3c:	cmp	r3, r6
   17f40:	ble	17f8c <print_full_field_name@@Base+0x278>
   17f44:	mov	r1, r9
   17f48:	ldr	r0, [r7, #4]!
   17f4c:	bl	12640 <coda_type_get_class@plt>
   17f50:	cmp	r0, #0
   17f54:	bne	17fcc <print_full_field_name@@Base+0x2b8>
   17f58:	ldr	r3, [sp, #12]
   17f5c:	cmp	r3, #0
   17f60:	bne	17ee8 <print_full_field_name@@Base+0x1d4>
   17f64:	add	r3, r4, sl, lsl #2
   17f68:	mov	r1, fp
   17f6c:	mov	r0, r5
   17f70:	add	r6, r6, #1
   17f74:	add	sl, sl, #1
   17f78:	ldr	r2, [r3, #3620]	; 0xe24
   17f7c:	bl	1243c <fprintf@plt>
   17f80:	ldr	r3, [r4, #136]	; 0x88
   17f84:	cmp	r3, r6
   17f88:	bgt	17f44 <print_full_field_name@@Base+0x230>
   17f8c:	ldr	r3, [sp, #4]
   17f90:	cmp	r3, #0
   17f94:	beq	17d90 <print_full_field_name@@Base+0x7c>
   17f98:	ldr	r3, [r4, #3360]	; 0xd20
   17f9c:	cmp	r3, r8
   17fa0:	ble	17d90 <print_full_field_name@@Base+0x7c>
   17fa4:	mov	r1, r5
   17fa8:	mov	r0, #91	; 0x5b
   17fac:	bl	12574 <fputc@plt>
   17fb0:	mov	r1, r8
   17fb4:	mov	r0, r5
   17fb8:	bl	17c08 <print_json_data@@Base+0xf4>
   17fbc:	mov	r1, r5
   17fc0:	mov	r0, #93	; 0x5d
   17fc4:	bl	12574 <fputc@plt>
   17fc8:	b	17d90 <print_full_field_name@@Base+0x7c>
   17fcc:	bl	19af0 <handle_coda_error@@Base>
   17fd0:	b	17f58 <print_full_field_name@@Base+0x244>
   17fd4:	mov	r1, r5
   17fd8:	mov	r0, #47	; 0x2f
   17fdc:	bl	12574 <fputc@plt>
   17fe0:	b	17ef8 <print_full_field_name@@Base+0x1e4>
   17fe4:	bl	19af0 <handle_coda_error@@Base>
   17fe8:	b	17df8 <print_full_field_name@@Base+0xe4>
   17fec:	cmp	r8, #0
   17ff0:	beq	17d90 <print_full_field_name@@Base+0x7c>
   17ff4:	b	17ea4 <print_full_field_name@@Base+0x190>
   17ff8:	bl	12574 <fputc@plt>
   17ffc:	b	17e40 <print_full_field_name@@Base+0x12c>
   18000:	movw	r0, #42040	; 0xa438
   18004:	movt	r0, #1
   18008:	mov	r3, r5
   1800c:	mov	r2, #2
   18010:	mov	r1, #1
   18014:	bl	12358 <fwrite@plt>
   18018:	b	17e98 <print_full_field_name@@Base+0x184>
   1801c:	ldr	r3, [sp, #4]
   18020:	cmp	r3, #0
   18024:	beq	17d90 <print_full_field_name@@Base+0x7c>
   18028:	ldr	r3, [r4, #3360]	; 0xd20
   1802c:	cmp	r3, #0
   18030:	ble	17d90 <print_full_field_name@@Base+0x7c>
   18034:	mov	r8, #0
   18038:	b	17e78 <print_full_field_name@@Base+0x164>
   1803c:	strdeq	ip, [r2], -r4
   18040:	movw	r3, #53420	; 0xd0ac
   18044:	movt	r3, #2
   18048:	strd	r4, [sp, #-12]!
   1804c:	ldr	r2, [r3]
   18050:	str	lr, [sp, #8]
   18054:	sub	sp, sp, #12
   18058:	cmp	r2, #0
   1805c:	beq	18078 <print_full_field_name@@Base+0x364>
   18060:	cmp	r2, #1
   18064:	beq	18124 <print_full_field_name@@Base+0x410>
   18068:	add	sp, sp, #12
   1806c:	ldrd	r4, [sp]
   18070:	add	sp, sp, #8
   18074:	pop	{pc}		; (ldr pc, [sp], #4)
   18078:	movw	r4, #49596	; 0xc1bc
   1807c:	movt	r4, #2
   18080:	mov	r1, #1
   18084:	ldr	r0, [r4]
   18088:	bl	17d14 <print_full_field_name@@Base>
   1808c:	movw	r3, #53408	; 0xd0a0
   18090:	movt	r3, #2
   18094:	ldr	r3, [r3]
   18098:	cmp	r3, #0
   1809c:	bne	18138 <print_full_field_name@@Base+0x424>
   180a0:	movw	r3, #49640	; 0xc1e8
   180a4:	movt	r3, #2
   180a8:	ldr	r3, [r3]
   180ac:	cmp	r3, #0
   180b0:	bne	18224 <print_full_field_name@@Base+0x510>
   180b4:	movw	r3, #53412	; 0xd0a4
   180b8:	movt	r3, #2
   180bc:	ldr	r3, [r3]
   180c0:	cmp	r3, #0
   180c4:	bne	181d8 <print_full_field_name@@Base+0x4c4>
   180c8:	mov	r0, #10
   180cc:	bl	1249c <putchar@plt>
   180d0:	movw	r3, #49628	; 0xc1dc
   180d4:	movt	r3, #2
   180d8:	ldr	r3, [r3]
   180dc:	cmp	r3, #0
   180e0:	beq	18068 <print_full_field_name@@Base+0x354>
   180e4:	movw	r5, #53432	; 0xd0b8
   180e8:	movt	r5, #2
   180ec:	ldr	r3, [r5]
   180f0:	cmp	r3, #0
   180f4:	ble	18068 <print_full_field_name@@Base+0x354>
   180f8:	mov	r4, #0
   180fc:	mov	r0, r4
   18100:	add	r4, r4, #1
   18104:	bl	15ee8 <print_all_distinct_dims@@Base>
   18108:	ldr	r3, [r5]
   1810c:	cmp	r4, r3
   18110:	blt	180fc <print_full_field_name@@Base+0x3e8>
   18114:	add	sp, sp, #12
   18118:	ldrd	r4, [sp]
   1811c:	add	sp, sp, #8
   18120:	pop	{pc}		; (ldr pc, [sp], #4)
   18124:	bl	14614 <export_data_element_to_ascii@@Base>
   18128:	add	sp, sp, #12
   1812c:	ldrd	r4, [sp]
   18130:	add	sp, sp, #8
   18134:	pop	{pc}		; (ldr pc, [sp], #4)
   18138:	movw	r5, #49648	; 0xc1f0
   1813c:	movt	r5, #2
   18140:	ldr	r3, [r5, #136]	; 0x88
   18144:	mov	r1, sp
   18148:	add	r3, r3, #2
   1814c:	ldr	r0, [r5, r3, lsl #2]
   18150:	bl	12640 <coda_type_get_class@plt>
   18154:	cmp	r0, #0
   18158:	bne	182a8 <print_full_field_name@@Base+0x594>
   1815c:	ldr	r2, [sp]
   18160:	add	r1, sp, #4
   18164:	ldr	r3, [r5, #136]	; 0x88
   18168:	cmp	r2, #6
   1816c:	add	r3, r3, #2
   18170:	ldr	r0, [r5, r3, lsl #2]
   18174:	beq	18278 <print_full_field_name@@Base+0x564>
   18178:	bl	12400 <coda_type_get_read_type@plt>
   1817c:	cmp	r0, #0
   18180:	bne	18270 <print_full_field_name@@Base+0x55c>
   18184:	ldr	r0, [sp, #4]
   18188:	bl	124fc <coda_type_get_native_type_name@plt>
   1818c:	mov	r1, r0
   18190:	movw	r0, #42044	; 0xa43c
   18194:	movt	r0, #1
   18198:	bl	12208 <printf@plt>
   1819c:	ldr	r3, [sp, #4]
   181a0:	sub	r3, r3, #11
   181a4:	cmp	r3, #1
   181a8:	bhi	180a0 <print_full_field_name@@Base+0x38c>
   181ac:	mov	r0, #40	; 0x28
   181b0:	bl	1249c <putchar@plt>
   181b4:	ldr	r1, [r5, #3360]	; 0xd20
   181b8:	cmp	r1, #0
   181bc:	ble	182c0 <print_full_field_name@@Base+0x5ac>
   181c0:	sub	r1, r1, #1
   181c4:	ldr	r0, [r4]
   181c8:	bl	17c08 <print_json_data@@Base+0xf4>
   181cc:	mov	r0, #41	; 0x29
   181d0:	bl	1249c <putchar@plt>
   181d4:	b	180a0 <print_full_field_name@@Base+0x38c>
   181d8:	movw	r3, #49648	; 0xc1f0
   181dc:	movt	r3, #2
   181e0:	ldr	r2, [r3, #136]	; 0x88
   181e4:	add	r1, sp, #4
   181e8:	add	r2, r2, #2
   181ec:	ldr	r0, [r3, r2, lsl #2]
   181f0:	bl	12334 <coda_type_get_description@plt>
   181f4:	cmp	r0, #0
   181f8:	bne	182b0 <print_full_field_name@@Base+0x59c>
   181fc:	ldr	r1, [sp, #4]
   18200:	cmp	r1, #0
   18204:	beq	180c8 <print_full_field_name@@Base+0x3b4>
   18208:	ldrb	r3, [r1]
   1820c:	cmp	r3, #0
   18210:	beq	180c8 <print_full_field_name@@Base+0x3b4>
   18214:	movw	r0, #42176	; 0xa4c0
   18218:	movt	r0, #1
   1821c:	bl	12208 <printf@plt>
   18220:	b	180c8 <print_full_field_name@@Base+0x3b4>
   18224:	movw	r3, #49648	; 0xc1f0
   18228:	movt	r3, #2
   1822c:	ldr	r2, [r3, #136]	; 0x88
   18230:	add	r1, sp, #4
   18234:	add	r2, r2, #2
   18238:	ldr	r0, [r3, r2, lsl #2]
   1823c:	bl	12328 <coda_type_get_unit@plt>
   18240:	cmp	r0, #0
   18244:	bne	182a0 <print_full_field_name@@Base+0x58c>
   18248:	ldr	r1, [sp, #4]
   1824c:	cmp	r1, #0
   18250:	beq	180b4 <print_full_field_name@@Base+0x3a0>
   18254:	ldrb	r3, [r1]
   18258:	cmp	r3, #0
   1825c:	beq	180b4 <print_full_field_name@@Base+0x3a0>
   18260:	movw	r0, #42168	; 0xa4b8
   18264:	movt	r0, #1
   18268:	bl	12208 <printf@plt>
   1826c:	b	180b4 <print_full_field_name@@Base+0x3a0>
   18270:	bl	19af0 <handle_coda_error@@Base>
   18274:	b	18184 <print_full_field_name@@Base+0x470>
   18278:	bl	124b4 <coda_type_get_special_type@plt>
   1827c:	cmp	r0, #0
   18280:	bne	182b8 <print_full_field_name@@Base+0x5a4>
   18284:	ldr	r0, [sp, #4]
   18288:	bl	121a8 <coda_type_get_special_type_name@plt>
   1828c:	mov	r1, r0
   18290:	movw	r0, #42044	; 0xa43c
   18294:	movt	r0, #1
   18298:	bl	12208 <printf@plt>
   1829c:	b	180a0 <print_full_field_name@@Base+0x38c>
   182a0:	bl	19af0 <handle_coda_error@@Base>
   182a4:	b	18248 <print_full_field_name@@Base+0x534>
   182a8:	bl	19af0 <handle_coda_error@@Base>
   182ac:	b	1815c <print_full_field_name@@Base+0x448>
   182b0:	bl	19af0 <handle_coda_error@@Base>
   182b4:	b	181fc <print_full_field_name@@Base+0x4e8>
   182b8:	bl	19af0 <handle_coda_error@@Base>
   182bc:	b	18284 <print_full_field_name@@Base+0x570>
   182c0:	movw	r3, #41992	; 0xa408
   182c4:	movt	r3, #1
   182c8:	movw	r1, #42048	; 0xa440
   182cc:	movt	r1, #1
   182d0:	movw	r0, #42136	; 0xa498
   182d4:	movt	r0, #1
   182d8:	mov	r2, #238	; 0xee
   182dc:	bl	12634 <__assert_fail@plt>
   182e0:	strd	r4, [sp, #-16]!
   182e4:	movw	r4, #49648	; 0xc1f0
   182e8:	movt	r4, #2
   182ec:	ldr	r3, [r4, #136]	; 0x88
   182f0:	str	r6, [sp, #8]
   182f4:	str	lr, [sp, #12]
   182f8:	sub	sp, sp, #16
   182fc:	add	r1, sp, #4
   18300:	add	r3, r3, #2
   18304:	ldr	r0, [r4, r3, lsl #2]
   18308:	bl	12640 <coda_type_get_class@plt>
   1830c:	cmp	r0, #0
   18310:	bne	1854c <print_full_field_name@@Base+0x838>
   18314:	ldr	r3, [sp, #4]
   18318:	cmp	r3, #6
   1831c:	ldrls	pc, [pc, r3, lsl #2]
   18320:	b	18454 <print_full_field_name@@Base+0x740>
   18324:	andeq	r8, r1, r0, asr #6
   18328:	andeq	r8, r1, r4, ror #9
   1832c:			; <UNDEFINED> instruction: 0x000184b0
   18330:			; <UNDEFINED> instruction: 0x000184b0
   18334:			; <UNDEFINED> instruction: 0x000184b0
   18338:			; <UNDEFINED> instruction: 0x000184b0
   1833c:	andeq	r8, r1, r8, ror #8
   18340:	ldr	r3, [r4, #136]	; 0x88
   18344:	cmp	r3, #30
   18348:	bgt	18454 <print_full_field_name@@Base+0x740>
   1834c:	ldr	r2, [r4, #3748]	; 0xea4
   18350:	add	r3, r3, #2
   18354:	add	r1, sp, #8
   18358:	ldr	r0, [r4, r3, lsl #2]
   1835c:	add	r3, r2, #1
   18360:	str	r3, [r4, #3748]	; 0xea4
   18364:	bl	123e8 <coda_type_get_num_record_fields@plt>
   18368:	cmp	r0, #0
   1836c:	beq	18374 <print_full_field_name@@Base+0x660>
   18370:	bl	19af0 <handle_coda_error@@Base>
   18374:	ldr	r3, [r4, #136]	; 0x88
   18378:	ldr	r2, [r4, #796]	; 0x31c
   1837c:	add	r2, r2, #166	; 0xa6
   18380:	ldr	r6, [r4, r2, lsl #2]
   18384:	add	r2, r3, #1
   18388:	str	r2, [r4, #136]	; 0x88
   1838c:	cmp	r6, #0
   18390:	beq	185b4 <print_full_field_name@@Base+0x8a0>
   18394:	mov	r0, r6
   18398:	bl	1706c <codadump_filter_get_fieldname@@Base>
   1839c:	subs	r5, r0, #0
   183a0:	beq	185fc <print_full_field_name@@Base+0x8e8>
   183a4:	ldr	r3, [r4, #136]	; 0x88
   183a8:	add	r2, sp, #12
   183ac:	mov	r1, r5
   183b0:	add	r3, r3, #1
   183b4:	ldr	r0, [r4, r3, lsl #2]
   183b8:	bl	12550 <coda_type_get_record_field_index_from_name@plt>
   183bc:	cmp	r0, #0
   183c0:	beq	183d8 <print_full_field_name@@Base+0x6c4>
   183c4:	bl	125e0 <coda_get_errno@plt>
   183c8:	ldr	r3, [r0]
   183cc:	cmn	r3, #102	; 0x66
   183d0:	beq	18618 <print_full_field_name@@Base+0x904>
   183d4:	bl	19af0 <handle_coda_error@@Base>
   183d8:	ldr	r5, [r4, #796]	; 0x31c
   183dc:	add	r3, r5, #166	; 0xa6
   183e0:	add	r5, r5, #167	; 0xa7
   183e4:	ldr	r0, [r4, r3, lsl #2]
   183e8:	bl	170a4 <codadump_filter_get_subfilter@@Base>
   183ec:	ldr	r3, [r4, #796]	; 0x31c
   183f0:	mov	r1, #1
   183f4:	str	r0, [r4, r5, lsl #2]
   183f8:	ldr	r0, [sp, #12]
   183fc:	add	r3, r3, r1
   18400:	str	r3, [r4, #796]	; 0x31c
   18404:	bl	18640 <print_full_field_name@@Base+0x92c>
   18408:	ldr	r5, [r4, #796]	; 0x31c
   1840c:	sub	r3, r5, #1
   18410:	add	r5, r5, #165	; 0xa5
   18414:	ldr	r0, [r4, r5, lsl #2]
   18418:	str	r3, [r4, #796]	; 0x31c
   1841c:	bl	170dc <codadump_filter_get_next_filter@@Base>
   18420:	ldr	r3, [r4, #796]	; 0x31c
   18424:	str	r0, [r4, r5, lsl #2]
   18428:	add	r3, r3, #166	; 0xa6
   1842c:	ldr	r0, [r4, r3, lsl #2]
   18430:	cmp	r0, #0
   18434:	bne	18398 <print_full_field_name@@Base+0x684>
   18438:	ldr	r2, [r4, #136]	; 0x88
   1843c:	str	r6, [r4, r3, lsl #2]
   18440:	sub	r3, r2, #1
   18444:	ldr	r2, [r4, #3748]	; 0xea4
   18448:	str	r3, [r4, #136]	; 0x88
   1844c:	sub	r3, r2, #1
   18450:	str	r3, [r4, #3748]	; 0xea4
   18454:	add	sp, sp, #16
   18458:	ldrd	r4, [sp]
   1845c:	ldr	r6, [sp, #8]
   18460:	add	sp, sp, #12
   18464:	pop	{pc}		; (ldr pc, [sp], #4)
   18468:	bl	121cc <coda_get_option_bypass_special_types@plt>
   1846c:	cmp	r0, #0
   18470:	ldr	r3, [r4, #136]	; 0x88
   18474:	bne	1857c <print_full_field_name@@Base+0x868>
   18478:	add	r3, r3, #2
   1847c:	add	r1, sp, #12
   18480:	ldr	r0, [r4, r3, lsl #2]
   18484:	bl	124b4 <coda_type_get_special_type@plt>
   18488:	cmp	r0, #0
   1848c:	bne	185f4 <print_full_field_name@@Base+0x8e0>
   18490:	ldr	r3, [sp, #12]
   18494:	cmp	r3, #3
   18498:	ldrls	pc, [pc, r3, lsl #2]
   1849c:	b	18454 <print_full_field_name@@Base+0x740>
   184a0:	andeq	r8, r1, r4, asr r4
   184a4:	ldrdeq	r8, [r1], -ip
   184a8:	ldrdeq	r8, [r1], -ip
   184ac:	andeq	r8, r1, r4, asr r5
   184b0:	ldr	r3, [r4, #136]	; 0x88
   184b4:	add	r1, sp, #12
   184b8:	add	r3, r3, #2
   184bc:	ldr	r0, [r4, r3, lsl #2]
   184c0:	bl	12400 <coda_type_get_read_type@plt>
   184c4:	cmp	r0, #0
   184c8:	bne	1859c <print_full_field_name@@Base+0x888>
   184cc:	ldr	r3, [sp, #12]
   184d0:	sub	r3, r3, #11
   184d4:	cmp	r3, #1
   184d8:	bls	18554 <print_full_field_name@@Base+0x840>
   184dc:	bl	18040 <print_full_field_name@@Base+0x32c>
   184e0:	b	18454 <print_full_field_name@@Base+0x740>
   184e4:	ldr	r3, [r4, #136]	; 0x88
   184e8:	cmp	r3, #30
   184ec:	bgt	18454 <print_full_field_name@@Base+0x740>
   184f0:	bl	16114 <dim_enter_array@@Base>
   184f4:	ldr	r3, [r4, #136]	; 0x88
   184f8:	ldr	r2, [r4, #3360]	; 0xd20
   184fc:	add	ip, r3, #1
   18500:	add	r1, r3, #3
   18504:	add	r3, r3, #2
   18508:	add	r1, r4, r1, lsl #2
   1850c:	add	r2, r2, #1
   18510:	ldr	r0, [r4, r3, lsl #2]
   18514:	str	ip, [r4, #136]	; 0x88
   18518:	str	r2, [r4, #3360]	; 0xd20
   1851c:	bl	124d8 <coda_type_get_array_base_type@plt>
   18520:	cmp	r0, #0
   18524:	bne	185ac <print_full_field_name@@Base+0x898>
   18528:	bl	182e0 <print_full_field_name@@Base+0x5cc>
   1852c:	ldr	r2, [r4, #136]	; 0x88
   18530:	ldr	r3, [r4, #3360]	; 0xd20
   18534:	sub	r2, r2, #1
   18538:	sub	r3, r3, #1
   1853c:	str	r2, [r4, #136]	; 0x88
   18540:	str	r3, [r4, #3360]	; 0xd20
   18544:	bl	16a64 <dim_leave_array@@Base>
   18548:	b	18454 <print_full_field_name@@Base+0x740>
   1854c:	bl	19af0 <handle_coda_error@@Base>
   18550:	b	18314 <print_full_field_name@@Base+0x600>
   18554:	bl	16114 <dim_enter_array@@Base>
   18558:	ldr	r3, [r4, #3360]	; 0xd20
   1855c:	add	r3, r3, #1
   18560:	str	r3, [r4, #3360]	; 0xd20
   18564:	bl	18040 <print_full_field_name@@Base+0x32c>
   18568:	ldr	r3, [r4, #3360]	; 0xd20
   1856c:	sub	r3, r3, #1
   18570:	str	r3, [r4, #3360]	; 0xd20
   18574:	bl	16a64 <dim_leave_array@@Base>
   18578:	b	18454 <print_full_field_name@@Base+0x740>
   1857c:	add	r3, r3, #2
   18580:	add	r1, r4, r3, lsl #2
   18584:	ldr	r0, [r4, r3, lsl #2]
   18588:	bl	125ec <coda_type_get_special_base_type@plt>
   1858c:	cmp	r0, #0
   18590:	bne	185a4 <print_full_field_name@@Base+0x890>
   18594:	bl	182e0 <print_full_field_name@@Base+0x5cc>
   18598:	b	18454 <print_full_field_name@@Base+0x740>
   1859c:	bl	19af0 <handle_coda_error@@Base>
   185a0:	b	184cc <print_full_field_name@@Base+0x7b8>
   185a4:	bl	19af0 <handle_coda_error@@Base>
   185a8:	b	18594 <print_full_field_name@@Base+0x880>
   185ac:	bl	19af0 <handle_coda_error@@Base>
   185b0:	b	18528 <print_full_field_name@@Base+0x814>
   185b4:	ldr	r2, [sp, #8]
   185b8:	str	r6, [sp, #12]
   185bc:	cmp	r2, #0
   185c0:	ble	18444 <print_full_field_name@@Base+0x730>
   185c4:	mov	r0, r6
   185c8:	mov	r1, #0
   185cc:	bl	18640 <print_full_field_name@@Base+0x92c>
   185d0:	ldr	r3, [sp, #8]
   185d4:	ldr	r0, [sp, #12]
   185d8:	add	r0, r0, #1
   185dc:	cmp	r0, r3
   185e0:	str	r0, [sp, #12]
   185e4:	blt	185c8 <print_full_field_name@@Base+0x8b4>
   185e8:	ldr	r3, [r4, #136]	; 0x88
   185ec:	sub	r3, r3, #1
   185f0:	b	18444 <print_full_field_name@@Base+0x730>
   185f4:	bl	19af0 <handle_coda_error@@Base>
   185f8:	b	18490 <print_full_field_name@@Base+0x77c>
   185fc:	movw	r1, #42048	; 0xa440
   18600:	movt	r1, #1
   18604:	ldr	r3, [pc, #48]	; 1863c <print_full_field_name@@Base+0x928>
   18608:	movw	r0, #42184	; 0xa4c8
   1860c:	movt	r0, #1
   18610:	movw	r2, #393	; 0x189
   18614:	bl	12634 <__assert_fail@plt>
   18618:	movw	r3, #49592	; 0xc1b8
   1861c:	movt	r3, #2
   18620:	mov	r2, r5
   18624:	movw	r1, #42200	; 0xa4d8
   18628:	movt	r1, #1
   1862c:	ldr	r0, [r3]
   18630:	bl	1243c <fprintf@plt>
   18634:	mov	r0, #1
   18638:	bl	123f4 <exit@plt>
   1863c:	andeq	sl, r1, ip, lsl r4
   18640:	strd	r4, [sp, #-16]!
   18644:	movw	r4, #49648	; 0xc1f0
   18648:	movt	r4, #2
   1864c:	ldr	r3, [r4, #3748]	; 0xea4
   18650:	mov	r5, r0
   18654:	str	r6, [sp, #8]
   18658:	mov	r6, r1
   1865c:	mov	r1, r0
   18660:	str	lr, [sp, #12]
   18664:	sub	sp, sp, #8
   18668:	mov	r2, sp
   1866c:	add	r3, r4, r3, lsl #2
   18670:	str	r0, [r3, #3488]	; 0xda0
   18674:	ldr	r0, [r4, #136]	; 0x88
   18678:	add	r0, r0, #1
   1867c:	ldr	r0, [r4, r0, lsl #2]
   18680:	bl	121fc <coda_type_get_record_field_hidden_status@plt>
   18684:	cmp	r0, #0
   18688:	bne	18758 <print_full_field_name@@Base+0xa44>
   1868c:	ldr	r1, [sp]
   18690:	eor	r6, r6, #1
   18694:	cmp	r1, #0
   18698:	andne	r1, r6, #1
   1869c:	moveq	r1, #0
   186a0:	cmp	r1, #0
   186a4:	bne	1870c <print_full_field_name@@Base+0x9f8>
   186a8:	movw	r2, #49644	; 0xc1ec
   186ac:	movt	r2, #2
   186b0:	ldr	r3, [r4, #136]	; 0x88
   186b4:	ldr	r2, [r2]
   186b8:	add	r3, r3, #1
   186bc:	ldr	r0, [r4, r3, lsl #2]
   186c0:	cmp	r2, #0
   186c4:	bne	18720 <print_full_field_name@@Base+0xa0c>
   186c8:	ldr	r2, [r4, #3748]	; 0xea4
   186cc:	mov	r1, r5
   186d0:	add	r2, r2, #904	; 0x388
   186d4:	add	r2, r4, r2, lsl #2
   186d8:	bl	125f8 <coda_type_get_record_field_name@plt>
   186dc:	cmp	r0, #0
   186e0:	bne	18768 <print_full_field_name@@Base+0xa54>
   186e4:	ldr	r3, [r4, #136]	; 0x88
   186e8:	mov	r1, r5
   186ec:	add	r2, r3, #2
   186f0:	add	r3, r3, #1
   186f4:	add	r2, r4, r2, lsl #2
   186f8:	ldr	r0, [r4, r3, lsl #2]
   186fc:	bl	122b0 <coda_type_get_record_field_type@plt>
   18700:	cmp	r0, #0
   18704:	bne	18760 <print_full_field_name@@Base+0xa4c>
   18708:	bl	182e0 <print_full_field_name@@Base+0x5cc>
   1870c:	add	sp, sp, #8
   18710:	ldrd	r4, [sp]
   18714:	ldr	r6, [sp, #8]
   18718:	add	sp, sp, #12
   1871c:	pop	{pc}		; (ldr pc, [sp], #4)
   18720:	add	r2, sp, #4
   18724:	mov	r1, r5
   18728:	bl	122ec <coda_type_get_record_field_available_status@plt>
   1872c:	cmp	r0, #0
   18730:	bne	18770 <print_full_field_name@@Base+0xa5c>
   18734:	ldr	r2, [sp, #4]
   18738:	cmn	r2, #1
   1873c:	beq	18778 <print_full_field_name@@Base+0xa64>
   18740:	ldr	r3, [r4, #136]	; 0x88
   18744:	add	r1, r3, #1
   18748:	add	r3, r4, r3, lsl #2
   1874c:	ldr	r0, [r4, r1, lsl #2]
   18750:	str	r2, [r3, #3360]	; 0xd20
   18754:	b	186c8 <print_full_field_name@@Base+0x9b4>
   18758:	bl	19af0 <handle_coda_error@@Base>
   1875c:	b	1868c <print_full_field_name@@Base+0x978>
   18760:	bl	19af0 <handle_coda_error@@Base>
   18764:	b	18708 <print_full_field_name@@Base+0x9f4>
   18768:	bl	19af0 <handle_coda_error@@Base>
   1876c:	b	186e4 <print_full_field_name@@Base+0x9d0>
   18770:	bl	19af0 <handle_coda_error@@Base>
   18774:	b	18734 <print_full_field_name@@Base+0xa20>
   18778:	bl	16bdc <dim_record_field_available@@Base>
   1877c:	cmp	r0, #0
   18780:	beq	1870c <print_full_field_name@@Base+0x9f8>
   18784:	ldr	r2, [sp, #4]
   18788:	b	18740 <print_full_field_name@@Base+0xa2c>

0001878c <traverse_info_init@@Base>:
   1878c:	mov	r2, #0
   18790:	movw	r3, #49648	; 0xc1f0
   18794:	movt	r3, #2
   18798:	str	r2, [r3, #4]
   1879c:	str	r2, [r3, #136]	; 0x88
   187a0:	str	r2, [r3, #3360]	; 0xd20
   187a4:	str	r2, [r3, #3748]	; 0xea4
   187a8:	bx	lr

000187ac <traverse_info_done@@Base>:
   187ac:	str	r4, [sp, #-8]!
   187b0:	movw	r4, #49648	; 0xc1f0
   187b4:	movt	r4, #2
   187b8:	ldr	r0, [r4, #4]
   187bc:	str	lr, [sp, #4]
   187c0:	cmp	r0, #0
   187c4:	beq	187cc <traverse_info_done@@Base+0x20>
   187c8:	bl	12520 <coda_close@plt>
   187cc:	ldr	r3, [r4, #664]	; 0x298
   187d0:	cmp	r3, #0
   187d4:	beq	187ec <traverse_info_done@@Base+0x40>
   187d8:	ldr	r0, [pc, #24]	; 187f8 <traverse_info_done@@Base+0x4c>
   187dc:	ldr	r4, [sp]
   187e0:	ldr	lr, [sp, #4]
   187e4:	add	sp, sp, #8
   187e8:	b	16bec <codadump_filter_remove@@Base>
   187ec:	ldr	r4, [sp]
   187f0:	add	sp, sp, #4
   187f4:	pop	{pc}		; (ldr pc, [sp], #4)
   187f8:	andeq	ip, r2, r8, lsl #9

000187fc <traverse_product@@Base>:
   187fc:	str	r4, [sp, #-8]!
   18800:	ldr	r4, [pc, #192]	; 188c8 <traverse_product@@Base+0xcc>
   18804:	mov	r1, r4
   18808:	ldr	r0, [r4, #-4]
   1880c:	str	lr, [sp, #4]
   18810:	bl	12238 <coda_open@plt>
   18814:	cmp	r0, #0
   18818:	bne	18874 <traverse_product@@Base+0x78>
   1881c:	movw	r4, #49648	; 0xc1f0
   18820:	movt	r4, #2
   18824:	add	r0, r4, #144	; 0x90
   18828:	ldr	r1, [r4, #4]
   1882c:	bl	12364 <coda_cursor_set_product@plt>
   18830:	cmp	r0, #0
   18834:	bne	18894 <traverse_product@@Base+0x98>
   18838:	ldr	r1, [r4, #136]	; 0x88
   1883c:	ldr	r0, [pc, #136]	; 188cc <traverse_product@@Base+0xd0>
   18840:	add	r1, r1, #2
   18844:	add	r1, r4, r1, lsl #2
   18848:	bl	122bc <coda_cursor_get_type@plt>
   1884c:	cmp	r0, #0
   18850:	bne	1888c <traverse_product@@Base+0x90>
   18854:	bl	182e0 <print_full_field_name@@Base+0x5cc>
   18858:	ldr	r0, [r4, #4]
   1885c:	bl	12520 <coda_close@plt>
   18860:	mov	r3, #0
   18864:	str	r3, [r4, #4]
   18868:	ldr	r4, [sp]
   1886c:	add	sp, sp, #4
   18870:	pop	{pc}		; (ldr pc, [sp], #4)
   18874:	bl	125e0 <coda_get_errno@plt>
   18878:	ldr	r3, [r0]
   1887c:	cmn	r3, #21
   18880:	beq	1889c <traverse_product@@Base+0xa0>
   18884:	bl	19af0 <handle_coda_error@@Base>
   18888:	b	1881c <traverse_product@@Base+0x20>
   1888c:	bl	19af0 <handle_coda_error@@Base>
   18890:	b	18854 <traverse_product@@Base+0x58>
   18894:	bl	19af0 <handle_coda_error@@Base>
   18898:	b	18838 <traverse_product@@Base+0x3c>
   1889c:	mov	r0, #0
   188a0:	bl	12280 <coda_set_option_use_mmap@plt>
   188a4:	mov	r1, r4
   188a8:	ldr	r0, [r4, #-4]
   188ac:	bl	12238 <coda_open@plt>
   188b0:	mov	r4, r0
   188b4:	mov	r0, #1
   188b8:	bl	12280 <coda_set_option_use_mmap@plt>
   188bc:	cmp	r4, #0
   188c0:	bne	18884 <traverse_product@@Base+0x88>
   188c4:	b	1881c <traverse_product@@Base+0x20>
   188c8:	strdeq	ip, [r2], -r4
   188cc:	andeq	ip, r2, r0, lsl #5
   188d0:	push	{r0, r1, r2, r3}
   188d4:	movw	r3, #53400	; 0xd098
   188d8:	movt	r3, #2
   188dc:	push	{lr}		; (str lr, [sp, #-4]!)
   188e0:	sub	sp, sp, #12
   188e4:	ldr	r1, [sp, #16]
   188e8:	add	ip, sp, #20
   188ec:	mov	r2, ip
   188f0:	ldr	r0, [r3]
   188f4:	str	ip, [sp, #4]
   188f8:	bl	12538 <vfprintf@plt>
   188fc:	add	sp, sp, #12
   18900:	pop	{lr}		; (ldr lr, [sp], #4)
   18904:	add	sp, sp, #16
   18908:	bx	lr
   1890c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18910:	subs	r5, r1, #0
   18914:	strd	r6, [sp, #8]
   18918:	str	r8, [sp, #16]
   1891c:	str	lr, [sp, #20]
   18920:	ble	189b8 <traverse_product@@Base+0x1bc>
   18924:	sub	r4, r0, #1
   18928:	movw	r6, #40572	; 0x9e7c
   1892c:	movt	r6, #1
   18930:	movw	r8, #41776	; 0xa330
   18934:	movt	r8, #1
   18938:	movw	r7, #40696	; 0x9ef8
   1893c:	movt	r7, #1
   18940:	add	r5, r4, r5
   18944:	b	1897c <traverse_product@@Base+0x180>
   18948:	cmp	r1, #9
   1894c:	beq	18a18 <traverse_product@@Base+0x21c>
   18950:	cmp	r1, #10
   18954:	beq	18a08 <traverse_product@@Base+0x20c>
   18958:	cmp	r1, #8
   1895c:	beq	189f8 <traverse_product@@Base+0x1fc>
   18960:	sub	r3, r1, #32
   18964:	cmp	r3, #94	; 0x5e
   18968:	movls	r0, r7
   1896c:	movhi	r0, r8
   18970:	bl	188d0 <traverse_product@@Base+0xd4>
   18974:	cmp	r4, r5
   18978:	beq	189b8 <traverse_product@@Base+0x1bc>
   1897c:	ldrb	r1, [r4, #1]!
   18980:	cmp	r1, #12
   18984:	beq	189cc <traverse_product@@Base+0x1d0>
   18988:	bls	18948 <traverse_product@@Base+0x14c>
   1898c:	cmp	r1, #34	; 0x22
   18990:	beq	189e8 <traverse_product@@Base+0x1ec>
   18994:	cmp	r1, #92	; 0x5c
   18998:	beq	189d8 <traverse_product@@Base+0x1dc>
   1899c:	cmp	r1, #13
   189a0:	bne	18960 <traverse_product@@Base+0x164>
   189a4:	movw	r0, #40576	; 0x9e80
   189a8:	movt	r0, #1
   189ac:	bl	188d0 <traverse_product@@Base+0xd4>
   189b0:	cmp	r4, r5
   189b4:	bne	1897c <traverse_product@@Base+0x180>
   189b8:	ldrd	r4, [sp]
   189bc:	ldrd	r6, [sp, #8]
   189c0:	ldr	r8, [sp, #16]
   189c4:	add	sp, sp, #20
   189c8:	pop	{pc}		; (ldr pc, [sp], #4)
   189cc:	mov	r0, r6
   189d0:	bl	188d0 <traverse_product@@Base+0xd4>
   189d4:	b	18974 <traverse_product@@Base+0x178>
   189d8:	movw	r0, #40580	; 0x9e84
   189dc:	movt	r0, #1
   189e0:	bl	188d0 <traverse_product@@Base+0xd4>
   189e4:	b	18974 <traverse_product@@Base+0x178>
   189e8:	movw	r0, #41772	; 0xa32c
   189ec:	movt	r0, #1
   189f0:	bl	188d0 <traverse_product@@Base+0xd4>
   189f4:	b	18974 <traverse_product@@Base+0x178>
   189f8:	movw	r0, #40556	; 0x9e6c
   189fc:	movt	r0, #1
   18a00:	bl	188d0 <traverse_product@@Base+0xd4>
   18a04:	b	18974 <traverse_product@@Base+0x178>
   18a08:	movw	r0, #40564	; 0x9e74
   18a0c:	movt	r0, #1
   18a10:	bl	188d0 <traverse_product@@Base+0xd4>
   18a14:	b	18974 <traverse_product@@Base+0x178>
   18a18:	movw	r0, #40560	; 0x9e70
   18a1c:	movt	r0, #1
   18a20:	bl	188d0 <traverse_product@@Base+0xd4>
   18a24:	b	18974 <traverse_product@@Base+0x178>
   18a28:	movw	r3, #49612	; 0xc1cc
   18a2c:	movt	r3, #2
   18a30:	strd	r4, [sp, #-16]!
   18a34:	ldr	r4, [r3]
   18a38:	str	r6, [sp, #8]
   18a3c:	str	lr, [sp, #12]
   18a40:	cmp	r4, #0
   18a44:	blt	18a88 <traverse_product@@Base+0x28c>
   18a48:	beq	18a78 <traverse_product@@Base+0x27c>
   18a4c:	movw	r6, #53400	; 0xd098
   18a50:	movt	r6, #2
   18a54:	movw	r5, #40672	; 0x9ee0
   18a58:	movt	r5, #1
   18a5c:	mov	r2, #2
   18a60:	mov	r1, #1
   18a64:	ldr	r3, [r6]
   18a68:	mov	r0, r5
   18a6c:	bl	12358 <fwrite@plt>
   18a70:	subs	r4, r4, #1
   18a74:	bne	18a5c <traverse_product@@Base+0x260>
   18a78:	ldrd	r4, [sp]
   18a7c:	ldr	r6, [sp, #8]
   18a80:	add	sp, sp, #12
   18a84:	pop	{pc}		; (ldr pc, [sp], #4)
   18a88:	movw	r3, #42252	; 0xa50c
   18a8c:	movt	r3, #1
   18a90:	movw	r1, #42260	; 0xa514
   18a94:	movt	r1, #1
   18a98:	movw	r0, #40784	; 0x9f50
   18a9c:	movt	r0, #1
   18aa0:	mov	r2, #44	; 0x2c
   18aa4:	bl	12634 <__assert_fail@plt>
   18aa8:	push	{r0, r1, r2, r3}
   18aac:	push	{lr}		; (str lr, [sp, #-4]!)
   18ab0:	sub	sp, sp, #12
   18ab4:	bl	18a28 <traverse_product@@Base+0x22c>
   18ab8:	ldr	r1, [sp, #16]
   18abc:	add	ip, sp, #20
   18ac0:	movw	r3, #53400	; 0xd098
   18ac4:	movt	r3, #2
   18ac8:	mov	r2, ip
   18acc:	ldr	r0, [r3]
   18ad0:	str	ip, [sp, #4]
   18ad4:	bl	12538 <vfprintf@plt>
   18ad8:	add	sp, sp, #12
   18adc:	pop	{lr}		; (ldr lr, [sp], #4)
   18ae0:	add	sp, sp, #16
   18ae4:	bx	lr
   18ae8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18aec:	movw	r4, #49612	; 0xc1cc
   18af0:	movt	r4, #2
   18af4:	ldr	r3, [r4, #4]
   18af8:	mov	r2, #0
   18afc:	mov	r5, r0
   18b00:	strd	r6, [sp, #8]
   18b04:	mov	r7, r1
   18b08:	strd	r8, [sp, #16]
   18b0c:	str	sl, [sp, #24]
   18b10:	str	lr, [sp, #28]
   18b14:	sub	sp, sp, #72	; 0x48
   18b18:	cmp	r3, r2
   18b1c:	str	r2, [sp, #12]
   18b20:	bne	18e60 <traverse_product@@Base+0x664>
   18b24:	add	r1, sp, #8
   18b28:	mov	r0, r5
   18b2c:	bl	12304 <coda_cursor_get_type_class@plt>
   18b30:	cmp	r0, #0
   18b34:	bne	18e58 <traverse_product@@Base+0x65c>
   18b38:	ldr	r3, [sp, #8]
   18b3c:	cmp	r3, #6
   18b40:	ldrls	pc, [pc, r3, lsl #2]
   18b44:	b	18bd8 <traverse_product@@Base+0x3dc>
   18b48:	andeq	r8, r1, r4, ror sp
   18b4c:	andeq	r8, r1, r0, lsr #25
   18b50:	andeq	r8, r1, r0, asr #24
   18b54:	andeq	r8, r1, r0, asr #24
   18b58:	andeq	r8, r1, r0, asr #24
   18b5c:	andeq	r8, r1, r0, asr #24
   18b60:	andeq	r8, r1, ip, lsl #24
   18b64:	add	r1, sp, #40	; 0x28
   18b68:	mov	r0, r5
   18b6c:	bl	1240c <coda_cursor_get_string_length@plt>
   18b70:	cmp	r0, #0
   18b74:	bne	193ac <traverse_product@@Base+0xbb0>
   18b78:	ldr	r0, [sp, #40]	; 0x28
   18b7c:	add	r0, r0, #1
   18b80:	bl	123ac <malloc@plt>
   18b84:	subs	r6, r0, #0
   18b88:	beq	1940c <traverse_product@@Base+0xc10>
   18b8c:	ldr	r2, [sp, #40]	; 0x28
   18b90:	mov	r0, r5
   18b94:	mov	r1, r6
   18b98:	add	r2, r2, #1
   18b9c:	bl	123d0 <coda_cursor_read_string@plt>
   18ba0:	cmp	r0, #0
   18ba4:	bne	193c4 <traverse_product@@Base+0xbc8>
   18ba8:	movw	r0, #42180	; 0xa4c4
   18bac:	movt	r0, #1
   18bb0:	bl	188d0 <traverse_product@@Base+0xd4>
   18bb4:	mov	r0, r6
   18bb8:	ldr	r1, [sp, #40]	; 0x28
   18bbc:	bl	1890c <traverse_product@@Base+0x110>
   18bc0:	movw	r0, #42380	; 0xa58c
   18bc4:	movt	r0, #1
   18bc8:	ldr	r1, [sp, #40]	; 0x28
   18bcc:	bl	188d0 <traverse_product@@Base+0xd4>
   18bd0:	mov	r0, r6
   18bd4:	bl	12274 <free@plt>
   18bd8:	ldr	r3, [sp, #12]
   18bdc:	cmp	r3, #0
   18be0:	beq	18bf0 <traverse_product@@Base+0x3f4>
   18be4:	ldr	r3, [r4]
   18be8:	sub	r3, r3, #1
   18bec:	str	r3, [r4]
   18bf0:	add	sp, sp, #72	; 0x48
   18bf4:	ldrd	r4, [sp]
   18bf8:	ldrd	r6, [sp, #8]
   18bfc:	ldrd	r8, [sp, #16]
   18c00:	ldr	sl, [sp, #24]
   18c04:	add	sp, sp, #28
   18c08:	pop	{pc}		; (ldr pc, [sp], #4)
   18c0c:	add	r1, sp, #28
   18c10:	mov	r0, r5
   18c14:	bl	12340 <coda_cursor_get_special_type@plt>
   18c18:	cmp	r0, #0
   18c1c:	bne	18f00 <traverse_product@@Base+0x704>
   18c20:	ldr	r3, [sp, #28]
   18c24:	cmp	r3, #3
   18c28:	ldrls	pc, [pc, r3, lsl #2]
   18c2c:	b	18bd8 <traverse_product@@Base+0x3dc>
   18c30:	andeq	r8, r1, r4, lsr pc
   18c34:	andeq	r9, r1, r8, asr #1
   18c38:	andeq	r9, r1, r0, lsl #1
   18c3c:	strdeq	r9, [r1], -r0
   18c40:	add	r1, sp, #28
   18c44:	mov	r0, r5
   18c48:	bl	123a0 <coda_cursor_get_read_type@plt>
   18c4c:	cmp	r0, #0
   18c50:	bne	18ef8 <traverse_product@@Base+0x6fc>
   18c54:	ldr	r3, [sp, #28]
   18c58:	add	r3, r3, #1
   18c5c:	cmp	r3, #13
   18c60:	ldrls	pc, [pc, r3, lsl #2]
   18c64:	b	18bd8 <traverse_product@@Base+0x3dc>
   18c68:	andeq	r8, r1, r4, lsr pc
   18c6c:	andeq	r9, r1, ip, asr #2
   18c70:	andeq	r9, r1, r4, ror r1
   18c74:	andeq	r9, r1, ip, asr #2
   18c78:	andeq	r9, r1, r4, ror r1
   18c7c:	andeq	r9, r1, ip, asr #2
   18c80:	andeq	r9, r1, r4, ror r1
   18c84:	muleq	r1, ip, r1
   18c88:	andeq	r9, r1, r8, lsl #4
   18c8c:	ldrdeq	r9, [r1], -r0
   18c90:	ldrdeq	r9, [r1], -r0
   18c94:	andeq	r9, r1, r8, asr #5
   18c98:	andeq	r8, r1, r4, ror #22
   18c9c:	andeq	r9, r1, ip, lsr r2
   18ca0:	add	r2, sp, #40	; 0x28
   18ca4:	add	r1, sp, #32
   18ca8:	mov	r0, r5
   18cac:	bl	12508 <coda_cursor_get_array_dim@plt>
   18cb0:	cmp	r0, #0
   18cb4:	bne	18ef0 <traverse_product@@Base+0x6f4>
   18cb8:	ldr	r7, [sp, #32]
   18cbc:	cmp	r7, #0
   18cc0:	blt	18f08 <traverse_product@@Base+0x70c>
   18cc4:	beq	19340 <traverse_product@@Base+0xb44>
   18cc8:	add	r3, sp, #36	; 0x24
   18ccc:	mov	r6, #1
   18cd0:	add	r1, r3, r7, lsl #2
   18cd4:	ldr	r2, [r3, #4]!
   18cd8:	cmp	r3, r1
   18cdc:	mul	r6, r2, r6
   18ce0:	bne	18cd4 <traverse_product@@Base+0x4d8>
   18ce4:	cmp	r6, #0
   18ce8:	subgt	r7, r6, #1
   18cec:	ble	18f08 <traverse_product@@Base+0x70c>
   18cf0:	movw	r0, #46756	; 0xb6a4
   18cf4:	movt	r0, #1
   18cf8:	bl	188d0 <traverse_product@@Base+0xd4>
   18cfc:	mov	r0, r5
   18d00:	bl	1234c <coda_cursor_goto_first_array_element@plt>
   18d04:	cmp	r0, #0
   18d08:	bne	19328 <traverse_product@@Base+0xb2c>
   18d0c:	movw	r9, #42372	; 0xa584
   18d10:	movt	r9, #1
   18d14:	mov	r8, #0
   18d18:	mov	r0, r9
   18d1c:	bl	18aa8 <traverse_product@@Base+0x2ac>
   18d20:	ldr	r3, [r4]
   18d24:	mov	r0, r5
   18d28:	mov	r1, #0
   18d2c:	add	r3, r3, #1
   18d30:	str	r3, [r4]
   18d34:	bl	18ae8 <traverse_product@@Base+0x2ec>
   18d38:	ldr	r3, [r4]
   18d3c:	cmp	r8, r7
   18d40:	mov	r0, r5
   18d44:	add	r8, r8, #1
   18d48:	sub	r3, r3, #1
   18d4c:	str	r3, [r4]
   18d50:	blt	18f44 <traverse_product@@Base+0x748>
   18d54:	cmp	r6, r8
   18d58:	bgt	18d18 <traverse_product@@Base+0x51c>
   18d5c:	mov	r0, r5
   18d60:	bl	123dc <coda_cursor_goto_parent@plt>
   18d64:	ldr	r3, [sp, #12]
   18d68:	cmp	r3, #0
   18d6c:	beq	18bf0 <traverse_product@@Base+0x3f4>
   18d70:	b	18be4 <traverse_product@@Base+0x3e8>
   18d74:	add	r1, sp, #16
   18d78:	mov	r0, r5
   18d7c:	bl	1225c <coda_cursor_get_num_elements@plt>
   18d80:	cmp	r0, #0
   18d84:	bne	18ee8 <traverse_product@@Base+0x6ec>
   18d88:	ldr	r3, [sp, #16]
   18d8c:	cmp	r3, #0
   18d90:	ble	18f24 <traverse_product@@Base+0x728>
   18d94:	cmp	r7, #0
   18d98:	bne	19310 <traverse_product@@Base+0xb14>
   18d9c:	add	r1, sp, #20
   18da0:	mov	r0, r5
   18da4:	bl	122bc <coda_cursor_get_type@plt>
   18da8:	cmp	r0, #0
   18dac:	bne	19320 <traverse_product@@Base+0xb24>
   18db0:	add	r1, sp, #24
   18db4:	ldr	r0, [sp, #20]
   18db8:	bl	124c0 <coda_type_get_record_union_status@plt>
   18dbc:	cmp	r0, #0
   18dc0:	bne	19308 <traverse_product@@Base+0xb0c>
   18dc4:	ldr	r6, [sp, #24]
   18dc8:	cmp	r6, #0
   18dcc:	beq	18f60 <traverse_product@@Base+0x764>
   18dd0:	add	r1, sp, #28
   18dd4:	mov	r0, r5
   18dd8:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   18ddc:	cmp	r0, #0
   18de0:	bne	1913c <traverse_product@@Base+0x940>
   18de4:	add	r2, sp, #40	; 0x28
   18de8:	ldr	r0, [sp, #20]
   18dec:	ldr	r1, [sp, #28]
   18df0:	bl	125f8 <coda_type_get_record_field_name@plt>
   18df4:	cmp	r0, #0
   18df8:	bne	19134 <traverse_product@@Base+0x938>
   18dfc:	mov	r0, r5
   18e00:	ldr	r1, [sp, #28]
   18e04:	bl	1237c <coda_cursor_goto_record_field_by_index@plt>
   18e08:	cmp	r0, #0
   18e0c:	bne	1912c <traverse_product@@Base+0x930>
   18e10:	cmp	r7, #0
   18e14:	bne	19124 <traverse_product@@Base+0x928>
   18e18:	movw	r0, #42360	; 0xa578
   18e1c:	movt	r0, #1
   18e20:	ldr	r1, [sp, #40]	; 0x28
   18e24:	bl	188d0 <traverse_product@@Base+0xd4>
   18e28:	ldr	r3, [r4]
   18e2c:	mov	r1, #1
   18e30:	mov	r0, r5
   18e34:	add	r3, r3, r1
   18e38:	str	r3, [r4]
   18e3c:	bl	18ae8 <traverse_product@@Base+0x2ec>
   18e40:	ldr	r3, [r4]
   18e44:	mov	r0, r5
   18e48:	sub	r3, r3, #1
   18e4c:	str	r3, [r4]
   18e50:	bl	123dc <coda_cursor_goto_parent@plt>
   18e54:	b	18bd8 <traverse_product@@Base+0x3dc>
   18e58:	bl	19af0 <handle_coda_error@@Base>
   18e5c:	b	18b38 <traverse_product@@Base+0x33c>
   18e60:	add	r1, sp, #12
   18e64:	bl	122f8 <coda_cursor_has_attributes@plt>
   18e68:	cmp	r0, #0
   18e6c:	bne	18f58 <traverse_product@@Base+0x75c>
   18e70:	ldr	r3, [sp, #12]
   18e74:	cmp	r3, #0
   18e78:	beq	18b24 <traverse_product@@Base+0x328>
   18e7c:	cmp	r7, #0
   18e80:	bne	1906c <traverse_product@@Base+0x870>
   18e84:	movw	r0, #42344	; 0xa568
   18e88:	movt	r0, #1
   18e8c:	bl	188d0 <traverse_product@@Base+0xd4>
   18e90:	mov	r0, r5
   18e94:	bl	12478 <coda_cursor_goto_attributes@plt>
   18e98:	cmp	r0, #0
   18e9c:	bne	19064 <traverse_product@@Base+0x868>
   18ea0:	ldr	r3, [r4]
   18ea4:	mov	r1, #1
   18ea8:	mov	r0, r5
   18eac:	add	r3, r3, r1
   18eb0:	str	r3, [r4]
   18eb4:	bl	18ae8 <traverse_product@@Base+0x2ec>
   18eb8:	ldr	r3, [r4]
   18ebc:	mov	r0, r5
   18ec0:	sub	r3, r3, #1
   18ec4:	str	r3, [r4]
   18ec8:	bl	123dc <coda_cursor_goto_parent@plt>
   18ecc:	movw	r0, #42352	; 0xa570
   18ed0:	movt	r0, #1
   18ed4:	bl	18aa8 <traverse_product@@Base+0x2ac>
   18ed8:	ldr	r3, [r4]
   18edc:	add	r3, r3, #1
   18ee0:	str	r3, [r4]
   18ee4:	b	18b24 <traverse_product@@Base+0x328>
   18ee8:	bl	19af0 <handle_coda_error@@Base>
   18eec:	b	18d88 <traverse_product@@Base+0x58c>
   18ef0:	bl	19af0 <handle_coda_error@@Base>
   18ef4:	b	18cb8 <traverse_product@@Base+0x4bc>
   18ef8:	bl	19af0 <handle_coda_error@@Base>
   18efc:	b	18c54 <traverse_product@@Base+0x458>
   18f00:	bl	19af0 <handle_coda_error@@Base>
   18f04:	b	18c20 <traverse_product@@Base+0x424>
   18f08:	movw	r0, #42376	; 0xa588
   18f0c:	movt	r0, #1
   18f10:	bl	188d0 <traverse_product@@Base+0xd4>
   18f14:	ldr	r3, [sp, #12]
   18f18:	cmp	r3, #0
   18f1c:	beq	18bf0 <traverse_product@@Base+0x3f4>
   18f20:	b	18be4 <traverse_product@@Base+0x3e8>
   18f24:	movw	r0, #42368	; 0xa580
   18f28:	movt	r0, #1
   18f2c:	bl	188d0 <traverse_product@@Base+0xd4>
   18f30:	b	18bd8 <traverse_product@@Base+0x3dc>
   18f34:	movw	r0, #42384	; 0xa590
   18f38:	movt	r0, #1
   18f3c:	bl	188d0 <traverse_product@@Base+0xd4>
   18f40:	b	18bd8 <traverse_product@@Base+0x3dc>
   18f44:	bl	12448 <coda_cursor_goto_next_array_element@plt>
   18f48:	cmp	r0, #0
   18f4c:	beq	18d54 <traverse_product@@Base+0x558>
   18f50:	bl	19af0 <handle_coda_error@@Base>
   18f54:	b	18d54 <traverse_product@@Base+0x558>
   18f58:	bl	19af0 <handle_coda_error@@Base>
   18f5c:	b	18e70 <traverse_product@@Base+0x674>
   18f60:	mov	r0, r5
   18f64:	bl	12370 <coda_cursor_goto_first_record_field@plt>
   18f68:	cmp	r0, #0
   18f6c:	bne	19144 <traverse_product@@Base+0x948>
   18f70:	ldr	r3, [sp, #16]
   18f74:	mov	r2, #0
   18f78:	str	r2, [sp, #28]
   18f7c:	cmp	r3, r2
   18f80:	ble	18d5c <traverse_product@@Base+0x560>
   18f84:	movw	sl, #42360	; 0xa578
   18f88:	movt	sl, #1
   18f8c:	mov	r8, #1
   18f90:	add	r9, sp, #40	; 0x28
   18f94:	mov	r1, r6
   18f98:	mov	r2, r9
   18f9c:	ldr	r0, [sp, #20]
   18fa0:	bl	121fc <coda_type_get_record_field_hidden_status@plt>
   18fa4:	cmp	r0, #0
   18fa8:	bne	18fe0 <traverse_product@@Base+0x7e4>
   18fac:	ldr	r1, [sp, #28]
   18fb0:	ldr	r3, [sp, #40]	; 0x28
   18fb4:	cmp	r3, #0
   18fb8:	beq	19004 <traverse_product@@Base+0x808>
   18fbc:	ldr	r3, [sp, #16]
   18fc0:	sub	r2, r3, #1
   18fc4:	cmp	r2, r1
   18fc8:	bgt	18fe8 <traverse_product@@Base+0x7ec>
   18fcc:	add	r6, r1, #1
   18fd0:	cmp	r6, r3
   18fd4:	str	r6, [sp, #28]
   18fd8:	blt	18f94 <traverse_product@@Base+0x798>
   18fdc:	b	18d5c <traverse_product@@Base+0x560>
   18fe0:	bl	19af0 <handle_coda_error@@Base>
   18fe4:	b	18fac <traverse_product@@Base+0x7b0>
   18fe8:	mov	r0, r5
   18fec:	bl	12568 <coda_cursor_goto_next_record_field@plt>
   18ff0:	cmp	r0, #0
   18ff4:	bne	19338 <traverse_product@@Base+0xb3c>
   18ff8:	ldr	r3, [sp, #16]
   18ffc:	ldr	r1, [sp, #28]
   19000:	b	18fcc <traverse_product@@Base+0x7d0>
   19004:	add	r2, sp, #32
   19008:	ldr	r0, [sp, #20]
   1900c:	bl	125f8 <coda_type_get_record_field_name@plt>
   19010:	cmp	r0, #0
   19014:	bne	19330 <traverse_product@@Base+0xb34>
   19018:	eor	r8, r8, #1
   1901c:	orrs	r3, r8, r7
   19020:	beq	19028 <traverse_product@@Base+0x82c>
   19024:	bl	18a28 <traverse_product@@Base+0x22c>
   19028:	mov	r0, sl
   1902c:	ldr	r1, [sp, #32]
   19030:	mov	r8, #0
   19034:	bl	188d0 <traverse_product@@Base+0xd4>
   19038:	ldr	r3, [r4]
   1903c:	mov	r1, #1
   19040:	mov	r0, r5
   19044:	add	r3, r3, r1
   19048:	str	r3, [r4]
   1904c:	bl	18ae8 <traverse_product@@Base+0x2ec>
   19050:	ldr	r3, [r4]
   19054:	ldr	r1, [sp, #28]
   19058:	sub	r3, r3, #1
   1905c:	str	r3, [r4]
   19060:	b	18fbc <traverse_product@@Base+0x7c0>
   19064:	bl	19af0 <handle_coda_error@@Base>
   19068:	b	18ea0 <traverse_product@@Base+0x6a4>
   1906c:	movw	r0, #46756	; 0xb6a4
   19070:	movt	r0, #1
   19074:	bl	188d0 <traverse_product@@Base+0xd4>
   19078:	bl	18a28 <traverse_product@@Base+0x22c>
   1907c:	b	18e84 <traverse_product@@Base+0x688>
   19080:	mov	r0, r5
   19084:	add	r1, sp, #32
   19088:	bl	12424 <coda_cursor_read_double@plt>
   1908c:	cmp	r0, #0
   19090:	bne	19348 <traverse_product@@Base+0xb4c>
   19094:	vldr	d0, [sp, #32]
   19098:	bl	12430 <coda_isNaN@plt>
   1909c:	cmp	r0, #0
   190a0:	bne	190b4 <traverse_product@@Base+0x8b8>
   190a4:	vldr	d0, [sp, #32]
   190a8:	bl	122d4 <coda_isInf@plt>
   190ac:	cmp	r0, #0
   190b0:	beq	19370 <traverse_product@@Base+0xb74>
   190b4:	movw	r0, #40912	; 0x9fd0
   190b8:	movt	r0, #1
   190bc:	ldrd	r2, [sp, #32]
   190c0:	bl	188d0 <traverse_product@@Base+0xd4>
   190c4:	b	18bd8 <traverse_product@@Base+0x3dc>
   190c8:	mov	r0, r5
   190cc:	add	r1, sp, #40	; 0x28
   190d0:	bl	12424 <coda_cursor_read_double@plt>
   190d4:	cmp	r0, #0
   190d8:	bne	19350 <traverse_product@@Base+0xb54>
   190dc:	movw	r0, #40912	; 0x9fd0
   190e0:	movt	r0, #1
   190e4:	ldrd	r2, [sp, #40]	; 0x28
   190e8:	bl	188d0 <traverse_product@@Base+0xd4>
   190ec:	b	18bd8 <traverse_product@@Base+0x3dc>
   190f0:	mov	r0, r5
   190f4:	add	r2, sp, #40	; 0x28
   190f8:	add	r1, sp, #32
   190fc:	bl	124cc <coda_cursor_read_complex_double_split@plt>
   19100:	cmp	r0, #0
   19104:	bne	19358 <traverse_product@@Base+0xb5c>
   19108:	movw	r0, #42392	; 0xa598
   1910c:	movt	r0, #1
   19110:	ldrd	r2, [sp, #32]
   19114:	ldrd	r6, [sp, #40]	; 0x28
   19118:	strd	r6, [sp]
   1911c:	bl	188d0 <traverse_product@@Base+0xd4>
   19120:	b	18bd8 <traverse_product@@Base+0x3dc>
   19124:	bl	18a28 <traverse_product@@Base+0x22c>
   19128:	b	18e18 <traverse_product@@Base+0x61c>
   1912c:	bl	19af0 <handle_coda_error@@Base>
   19130:	b	18e10 <traverse_product@@Base+0x614>
   19134:	bl	19af0 <handle_coda_error@@Base>
   19138:	b	18dfc <traverse_product@@Base+0x600>
   1913c:	bl	19af0 <handle_coda_error@@Base>
   19140:	b	18de4 <traverse_product@@Base+0x5e8>
   19144:	bl	19af0 <handle_coda_error@@Base>
   19148:	b	18f70 <traverse_product@@Base+0x774>
   1914c:	mov	r0, r5
   19150:	add	r1, sp, #40	; 0x28
   19154:	bl	125bc <coda_cursor_read_int32@plt>
   19158:	cmp	r0, #0
   1915c:	bne	19360 <traverse_product@@Base+0xb64>
   19160:	movw	r0, #40884	; 0x9fb4
   19164:	movt	r0, #1
   19168:	ldr	r1, [sp, #40]	; 0x28
   1916c:	bl	188d0 <traverse_product@@Base+0xd4>
   19170:	b	18bd8 <traverse_product@@Base+0x3dc>
   19174:	mov	r0, r5
   19178:	add	r1, sp, #40	; 0x28
   1917c:	bl	12298 <coda_cursor_read_uint32@plt>
   19180:	cmp	r0, #0
   19184:	bne	1939c <traverse_product@@Base+0xba0>
   19188:	movw	r0, #40892	; 0x9fbc
   1918c:	movt	r0, #1
   19190:	ldr	r1, [sp, #40]	; 0x28
   19194:	bl	188d0 <traverse_product@@Base+0xd4>
   19198:	b	18bd8 <traverse_product@@Base+0x3dc>
   1919c:	mov	r0, r5
   191a0:	add	r1, sp, #32
   191a4:	bl	1252c <coda_cursor_read_int64@plt>
   191a8:	cmp	r0, #0
   191ac:	bne	193b4 <traverse_product@@Base+0xbb8>
   191b0:	add	r2, sp, #40	; 0x28
   191b4:	ldrd	r0, [sp, #32]
   191b8:	bl	12628 <coda_str64@plt>
   191bc:	add	r1, sp, #40	; 0x28
   191c0:	movw	r0, #40900	; 0x9fc4
   191c4:	movt	r0, #1
   191c8:	bl	188d0 <traverse_product@@Base+0xd4>
   191cc:	b	18bd8 <traverse_product@@Base+0x3dc>
   191d0:	mov	r0, r5
   191d4:	add	r1, sp, #40	; 0x28
   191d8:	bl	12424 <coda_cursor_read_double@plt>
   191dc:	cmp	r0, #0
   191e0:	bne	193a4 <traverse_product@@Base+0xba8>
   191e4:	ldr	r1, [sp, #28]
   191e8:	ldrd	r2, [sp, #40]	; 0x28
   191ec:	cmp	r1, #8
   191f0:	movweq	r0, #40904	; 0x9fc8
   191f4:	movwne	r0, #40912	; 0x9fd0
   191f8:	movteq	r0, #1
   191fc:	movtne	r0, #1
   19200:	bl	188d0 <traverse_product@@Base+0xd4>
   19204:	b	18bd8 <traverse_product@@Base+0x3dc>
   19208:	mov	r0, r5
   1920c:	add	r1, sp, #32
   19210:	bl	12418 <coda_cursor_read_uint64@plt>
   19214:	cmp	r0, #0
   19218:	bne	193bc <traverse_product@@Base+0xbc0>
   1921c:	add	r2, sp, #40	; 0x28
   19220:	ldrd	r0, [sp, #32]
   19224:	bl	12268 <coda_str64u@plt>
   19228:	add	r1, sp, #40	; 0x28
   1922c:	movw	r0, #40900	; 0x9fc4
   19230:	movt	r0, #1
   19234:	bl	188d0 <traverse_product@@Base+0xd4>
   19238:	b	18bd8 <traverse_product@@Base+0x3dc>
   1923c:	add	r1, sp, #40	; 0x28
   19240:	mov	r0, r5
   19244:	bl	1258c <coda_cursor_get_bit_size@plt>
   19248:	cmp	r0, #0
   1924c:	bne	193d4 <traverse_product@@Base+0xbd8>
   19250:	ldrd	r8, [sp, #40]	; 0x28
   19254:	lsr	r2, r8, #3
   19258:	ands	r1, r8, #7
   1925c:	movne	r1, #1
   19260:	orr	r2, r2, r9, lsl #29
   19264:	adds	r6, r2, r1
   19268:	mov	r0, r6
   1926c:	bl	123ac <malloc@plt>
   19270:	subs	sl, r0, #0
   19274:	beq	193dc <traverse_product@@Base+0xbe0>
   19278:	mov	r0, r5
   1927c:	mov	r1, sl
   19280:	strd	r8, [sp]
   19284:	mov	r2, #0
   19288:	mov	r3, #0
   1928c:	bl	1261c <coda_cursor_read_bits@plt>
   19290:	cmp	r0, #0
   19294:	bne	193cc <traverse_product@@Base+0xbd0>
   19298:	movw	r0, #42180	; 0xa4c4
   1929c:	movt	r0, #1
   192a0:	bl	188d0 <traverse_product@@Base+0xd4>
   192a4:	mov	r1, r6
   192a8:	mov	r0, sl
   192ac:	bl	1890c <traverse_product@@Base+0x110>
   192b0:	movw	r0, #42380	; 0xa58c
   192b4:	movt	r0, #1
   192b8:	bl	188d0 <traverse_product@@Base+0xd4>
   192bc:	mov	r0, sl
   192c0:	bl	12274 <free@plt>
   192c4:	b	18bd8 <traverse_product@@Base+0x3dc>
   192c8:	add	r9, sp, #40	; 0x28
   192cc:	mov	r0, r5
   192d0:	mov	r1, r9
   192d4:	bl	12484 <coda_cursor_read_char@plt>
   192d8:	cmp	r0, #0
   192dc:	bne	19368 <traverse_product@@Base+0xb6c>
   192e0:	movw	r0, #42180	; 0xa4c4
   192e4:	movt	r0, #1
   192e8:	bl	188d0 <traverse_product@@Base+0xd4>
   192ec:	mov	r0, r9
   192f0:	mov	r1, #1
   192f4:	bl	1890c <traverse_product@@Base+0x110>
   192f8:	movw	r0, #42380	; 0xa58c
   192fc:	movt	r0, #1
   19300:	bl	188d0 <traverse_product@@Base+0xd4>
   19304:	b	18bd8 <traverse_product@@Base+0x3dc>
   19308:	bl	19af0 <handle_coda_error@@Base>
   1930c:	b	18dc4 <traverse_product@@Base+0x5c8>
   19310:	movw	r0, #46756	; 0xb6a4
   19314:	movt	r0, #1
   19318:	bl	188d0 <traverse_product@@Base+0xd4>
   1931c:	b	18d9c <traverse_product@@Base+0x5a0>
   19320:	bl	19af0 <handle_coda_error@@Base>
   19324:	b	18db0 <traverse_product@@Base+0x5b4>
   19328:	bl	19af0 <handle_coda_error@@Base>
   1932c:	b	18d0c <traverse_product@@Base+0x510>
   19330:	bl	19af0 <handle_coda_error@@Base>
   19334:	b	19018 <traverse_product@@Base+0x81c>
   19338:	bl	19af0 <handle_coda_error@@Base>
   1933c:	b	18ff8 <traverse_product@@Base+0x7fc>
   19340:	mov	r6, #1
   19344:	b	18cf0 <traverse_product@@Base+0x4f4>
   19348:	bl	19af0 <handle_coda_error@@Base>
   1934c:	b	19094 <traverse_product@@Base+0x898>
   19350:	bl	19af0 <handle_coda_error@@Base>
   19354:	b	190dc <traverse_product@@Base+0x8e0>
   19358:	bl	19af0 <handle_coda_error@@Base>
   1935c:	b	19108 <traverse_product@@Base+0x90c>
   19360:	bl	19af0 <handle_coda_error@@Base>
   19364:	b	19160 <traverse_product@@Base+0x964>
   19368:	bl	19af0 <handle_coda_error@@Base>
   1936c:	b	192e0 <traverse_product@@Base+0xae4>
   19370:	movw	r0, #41920	; 0xa3c0
   19374:	movt	r0, #1
   19378:	vldr	d0, [sp, #32]
   1937c:	add	r1, sp, #40	; 0x28
   19380:	bl	12250 <coda_time_double_to_string@plt>
   19384:	cmp	r0, #0
   19388:	beq	1943c <traverse_product@@Base+0xc40>
   1938c:	movw	r0, #41952	; 0xa3e0
   19390:	movt	r0, #1
   19394:	bl	188d0 <traverse_product@@Base+0xd4>
   19398:	b	18bd8 <traverse_product@@Base+0x3dc>
   1939c:	bl	19af0 <handle_coda_error@@Base>
   193a0:	b	19188 <traverse_product@@Base+0x98c>
   193a4:	bl	19af0 <handle_coda_error@@Base>
   193a8:	b	191e4 <traverse_product@@Base+0x9e8>
   193ac:	bl	19af0 <handle_coda_error@@Base>
   193b0:	b	18b78 <traverse_product@@Base+0x37c>
   193b4:	bl	19af0 <handle_coda_error@@Base>
   193b8:	b	191b0 <traverse_product@@Base+0x9b4>
   193bc:	bl	19af0 <handle_coda_error@@Base>
   193c0:	b	1921c <traverse_product@@Base+0xa20>
   193c4:	bl	19af0 <handle_coda_error@@Base>
   193c8:	b	18ba8 <traverse_product@@Base+0x3ac>
   193cc:	bl	19af0 <handle_coda_error@@Base>
   193d0:	b	19298 <traverse_product@@Base+0xa9c>
   193d4:	bl	19af0 <handle_coda_error@@Base>
   193d8:	b	19250 <traverse_product@@Base+0xa54>
   193dc:	mov	r0, #392	; 0x188
   193e0:	mov	r2, r6
   193e4:	movw	r3, #42260	; 0xa514
   193e8:	movt	r3, #1
   193ec:	movw	r1, #40488	; 0x9e28
   193f0:	movt	r1, #1
   193f4:	str	r0, [sp]
   193f8:	mvn	r0, #0
   193fc:	bl	1222c <coda_set_error@plt>
   19400:	bl	19af0 <handle_coda_error@@Base>
   19404:	ldrd	r8, [sp, #40]	; 0x28
   19408:	b	19278 <traverse_product@@Base+0xa7c>
   1940c:	ldr	r2, [sp, #40]	; 0x28
   19410:	movw	r0, #361	; 0x169
   19414:	movw	r3, #42260	; 0xa514
   19418:	movt	r3, #1
   1941c:	movw	r1, #40488	; 0x9e28
   19420:	movt	r1, #1
   19424:	str	r0, [sp]
   19428:	mvn	r0, #0
   1942c:	add	r2, r2, #1
   19430:	bl	1222c <coda_set_error@plt>
   19434:	bl	19af0 <handle_coda_error@@Base>
   19438:	b	18b8c <traverse_product@@Base+0x390>
   1943c:	add	r1, sp, #40	; 0x28
   19440:	movw	r0, #40900	; 0x9fc4
   19444:	movt	r0, #1
   19448:	bl	188d0 <traverse_product@@Base+0xd4>
   1944c:	b	18bd8 <traverse_product@@Base+0x3dc>

00019450 <print_yaml_data@@Base>:
   19450:	movw	r3, #49612	; 0xc1cc
   19454:	movt	r3, #2
   19458:	str	r4, [sp, #-8]!
   1945c:	movw	r4, #49648	; 0xc1f0
   19460:	movt	r4, #2
   19464:	str	lr, [sp, #4]
   19468:	sub	sp, sp, #528	; 0x210
   1946c:	str	r0, [r3, #4]
   19470:	add	r1, sp, #4
   19474:	ldr	r0, [r4]
   19478:	bl	12238 <coda_open@plt>
   1947c:	cmp	r0, #0
   19480:	bne	194f0 <print_yaml_data@@Base+0xa0>
   19484:	add	r0, sp, #8
   19488:	ldr	r1, [sp, #4]
   1948c:	bl	12364 <coda_cursor_set_product@plt>
   19490:	cmp	r0, #0
   19494:	bne	194e8 <print_yaml_data@@Base+0x98>
   19498:	movw	r3, #53424	; 0xd0b0
   1949c:	movt	r3, #2
   194a0:	ldr	r1, [r3]
   194a4:	cmp	r1, #0
   194a8:	beq	194bc <print_yaml_data@@Base+0x6c>
   194ac:	add	r0, sp, #8
   194b0:	bl	12544 <coda_cursor_goto@plt>
   194b4:	cmp	r0, #0
   194b8:	bne	19508 <print_yaml_data@@Base+0xb8>
   194bc:	mov	r0, #0
   194c0:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   194c4:	add	r0, sp, #8
   194c8:	mov	r1, #0
   194cc:	bl	18ae8 <traverse_product@@Base+0x2ec>
   194d0:	ldr	r0, [sp, #4]
   194d4:	bl	12520 <coda_close@plt>
   194d8:	add	sp, sp, #528	; 0x210
   194dc:	ldr	r4, [sp]
   194e0:	add	sp, sp, #4
   194e4:	pop	{pc}		; (ldr pc, [sp], #4)
   194e8:	bl	19af0 <handle_coda_error@@Base>
   194ec:	b	19498 <print_yaml_data@@Base+0x48>
   194f0:	bl	125e0 <coda_get_errno@plt>
   194f4:	ldr	r3, [r0]
   194f8:	cmn	r3, #21
   194fc:	beq	19510 <print_yaml_data@@Base+0xc0>
   19500:	bl	19af0 <handle_coda_error@@Base>
   19504:	b	19484 <print_yaml_data@@Base+0x34>
   19508:	bl	19af0 <handle_coda_error@@Base>
   1950c:	b	194bc <print_yaml_data@@Base+0x6c>
   19510:	mov	r0, #0
   19514:	bl	12280 <coda_set_option_use_mmap@plt>
   19518:	add	r1, sp, #4
   1951c:	ldr	r0, [r4]
   19520:	bl	12238 <coda_open@plt>
   19524:	mov	r4, r0
   19528:	mov	r0, #1
   1952c:	bl	12280 <coda_set_option_use_mmap@plt>
   19530:	cmp	r4, #0
   19534:	bne	19500 <print_yaml_data@@Base+0xb0>
   19538:	b	19484 <print_yaml_data@@Base+0x34>
   1953c:	movw	r0, #42404	; 0xa5a4
   19540:	movt	r0, #1
   19544:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19548:	strd	r6, [sp, #8]
   1954c:	movw	r7, #43328	; 0xa940
   19550:	movt	r7, #1
   19554:	strd	r8, [sp, #16]
   19558:	movw	r9, #43216	; 0xa8d0
   1955c:	movt	r9, #1
   19560:	strd	sl, [sp, #24]
   19564:	movw	fp, #42636	; 0xa68c
   19568:	movt	fp, #1
   1956c:	str	lr, [sp, #32]
   19570:	sub	sp, sp, #36	; 0x24
   19574:	movw	sl, #42676	; 0xa6b4
   19578:	movt	sl, #1
   1957c:	movw	r8, #43248	; 0xa8f0
   19580:	movt	r8, #1
   19584:	movw	r6, #43408	; 0xa990
   19588:	movt	r6, #1
   1958c:	movw	r5, #43764	; 0xaaf4
   19590:	movt	r5, #1
   19594:	movw	r4, #43800	; 0xab18
   19598:	movt	r4, #1
   1959c:	bl	12394 <puts@plt>
   195a0:	movw	r0, #42412	; 0xa5ac
   195a4:	movt	r0, #1
   195a8:	bl	12394 <puts@plt>
   195ac:	movw	r2, #42528	; 0xa620
   195b0:	movt	r2, #1
   195b4:	movw	r0, #42484	; 0xa5f4
   195b8:	movt	r0, #1
   195bc:	str	r2, [sp, #4]
   195c0:	bl	12394 <puts@plt>
   195c4:	ldr	r2, [sp, #4]
   195c8:	movw	r3, #42736	; 0xa6f0
   195cc:	movt	r3, #1
   195d0:	movw	r1, #42784	; 0xa720
   195d4:	movt	r1, #1
   195d8:	str	r3, [sp, #16]
   195dc:	movw	r3, #44364	; 0xad4c
   195e0:	movt	r3, #1
   195e4:	str	r3, [sp, #4]
   195e8:	movw	r3, #44544	; 0xae00
   195ec:	movt	r3, #1
   195f0:	mov	r0, r2
   195f4:	str	r3, [sp, #12]
   195f8:	str	r2, [sp, #28]
   195fc:	movw	r2, #44396	; 0xad6c
   19600:	movt	r2, #1
   19604:	str	r1, [sp, #20]
   19608:	str	r2, [sp, #8]
   1960c:	bl	12394 <puts@plt>
   19610:	movw	r0, #42552	; 0xa638
   19614:	movt	r0, #1
   19618:	bl	12394 <puts@plt>
   1961c:	movw	r0, #42580	; 0xa654
   19620:	movt	r0, #1
   19624:	bl	12394 <puts@plt>
   19628:	mov	r0, fp
   1962c:	bl	12394 <puts@plt>
   19630:	mov	r0, sl
   19634:	bl	12394 <puts@plt>
   19638:	ldr	r3, [sp, #16]
   1963c:	mov	r0, r3
   19640:	bl	12394 <puts@plt>
   19644:	ldr	r1, [sp, #20]
   19648:	mov	r0, r1
   1964c:	str	r1, [sp, #24]
   19650:	bl	12394 <puts@plt>
   19654:	movw	r0, #42856	; 0xa768
   19658:	movt	r0, #1
   1965c:	bl	12394 <puts@plt>
   19660:	movw	r0, #42880	; 0xa780
   19664:	movt	r0, #1
   19668:	bl	12394 <puts@plt>
   1966c:	movw	r0, #42924	; 0xa7ac
   19670:	movt	r0, #1
   19674:	bl	12394 <puts@plt>
   19678:	movw	r0, #42948	; 0xa7c4
   1967c:	movt	r0, #1
   19680:	bl	12394 <puts@plt>
   19684:	movw	r0, #42992	; 0xa7f0
   19688:	movt	r0, #1
   1968c:	bl	12394 <puts@plt>
   19690:	movw	r0, #43020	; 0xa80c
   19694:	movt	r0, #1
   19698:	bl	12394 <puts@plt>
   1969c:	movw	r0, #43072	; 0xa840
   196a0:	movt	r0, #1
   196a4:	bl	12394 <puts@plt>
   196a8:	movw	r0, #43100	; 0xa85c
   196ac:	movt	r0, #1
   196b0:	bl	12394 <puts@plt>
   196b4:	movw	r0, #43172	; 0xa8a4
   196b8:	movt	r0, #1
   196bc:	bl	12394 <puts@plt>
   196c0:	mov	r0, r9
   196c4:	bl	12394 <puts@plt>
   196c8:	mov	r0, r8
   196cc:	bl	12394 <puts@plt>
   196d0:	mov	r0, r7
   196d4:	bl	12394 <puts@plt>
   196d8:	mov	r0, r6
   196dc:	bl	12394 <puts@plt>
   196e0:	mov	r0, #10
   196e4:	bl	1249c <putchar@plt>
   196e8:	movw	r0, #43440	; 0xa9b0
   196ec:	movt	r0, #1
   196f0:	bl	12394 <puts@plt>
   196f4:	movw	r0, #43512	; 0xa9f8
   196f8:	movt	r0, #1
   196fc:	bl	12394 <puts@plt>
   19700:	ldr	r2, [sp, #28]
   19704:	mov	r0, r2
   19708:	movw	r2, #44576	; 0xae20
   1970c:	movt	r2, #1
   19710:	str	r2, [sp, #20]
   19714:	bl	12394 <puts@plt>
   19718:	mov	r0, fp
   1971c:	bl	12394 <puts@plt>
   19720:	mov	r0, sl
   19724:	bl	12394 <puts@plt>
   19728:	ldr	r3, [sp, #16]
   1972c:	mov	r0, r3
   19730:	movw	r3, #44648	; 0xae68
   19734:	movt	r3, #1
   19738:	str	r3, [sp, #16]
   1973c:	bl	12394 <puts@plt>
   19740:	ldr	r1, [sp, #24]
   19744:	mov	r0, r1
   19748:	bl	12394 <puts@plt>
   1974c:	movw	r0, #43572	; 0xaa34
   19750:	movt	r0, #1
   19754:	bl	12394 <puts@plt>
   19758:	movw	r0, #43596	; 0xaa4c
   1975c:	movt	r0, #1
   19760:	bl	12394 <puts@plt>
   19764:	movw	r0, #43664	; 0xaa90
   19768:	movt	r0, #1
   1976c:	bl	12394 <puts@plt>
   19770:	movw	r0, #43688	; 0xaaa8
   19774:	movt	r0, #1
   19778:	bl	12394 <puts@plt>
   1977c:	mov	r0, r5
   19780:	bl	12394 <puts@plt>
   19784:	mov	r0, r4
   19788:	bl	12394 <puts@plt>
   1978c:	movw	r0, #43852	; 0xab4c
   19790:	movt	r0, #1
   19794:	bl	12394 <puts@plt>
   19798:	movw	r0, #43884	; 0xab6c
   1979c:	movt	r0, #1
   197a0:	bl	12394 <puts@plt>
   197a4:	movw	r0, #43960	; 0xabb8
   197a8:	movt	r0, #1
   197ac:	bl	12394 <puts@plt>
   197b0:	movw	r0, #44016	; 0xabf0
   197b4:	movt	r0, #1
   197b8:	bl	12394 <puts@plt>
   197bc:	movw	r0, #44092	; 0xac3c
   197c0:	movt	r0, #1
   197c4:	bl	12394 <puts@plt>
   197c8:	movw	r0, #44128	; 0xac60
   197cc:	movt	r0, #1
   197d0:	bl	12394 <puts@plt>
   197d4:	mov	r0, r9
   197d8:	bl	12394 <puts@plt>
   197dc:	mov	r0, r8
   197e0:	bl	12394 <puts@plt>
   197e4:	mov	r0, r7
   197e8:	bl	12394 <puts@plt>
   197ec:	mov	r0, r6
   197f0:	bl	12394 <puts@plt>
   197f4:	mov	r0, #10
   197f8:	bl	1249c <putchar@plt>
   197fc:	movw	r0, #44208	; 0xacb0
   19800:	movt	r0, #1
   19804:	bl	12394 <puts@plt>
   19808:	movw	r0, #44280	; 0xacf8
   1980c:	movt	r0, #1
   19810:	bl	12394 <puts@plt>
   19814:	movw	r0, #44340	; 0xad34
   19818:	movt	r0, #1
   1981c:	bl	12394 <puts@plt>
   19820:	ldr	r0, [sp, #4]
   19824:	bl	12394 <puts@plt>
   19828:	ldr	r0, [sp, #8]
   1982c:	bl	12394 <puts@plt>
   19830:	movw	r0, #44468	; 0xadb4
   19834:	movt	r0, #1
   19838:	bl	12394 <puts@plt>
   1983c:	mov	r0, fp
   19840:	bl	12394 <puts@plt>
   19844:	mov	r0, sl
   19848:	bl	12394 <puts@plt>
   1984c:	mov	r0, r5
   19850:	bl	12394 <puts@plt>
   19854:	mov	r0, r4
   19858:	bl	12394 <puts@plt>
   1985c:	ldr	r0, [sp, #12]
   19860:	bl	12394 <puts@plt>
   19864:	ldr	r2, [sp, #20]
   19868:	mov	r0, r2
   1986c:	bl	12394 <puts@plt>
   19870:	ldr	r3, [sp, #16]
   19874:	mov	r0, r3
   19878:	bl	12394 <puts@plt>
   1987c:	mov	r0, r9
   19880:	bl	12394 <puts@plt>
   19884:	mov	r0, r8
   19888:	bl	12394 <puts@plt>
   1988c:	mov	r0, r7
   19890:	bl	12394 <puts@plt>
   19894:	mov	r0, r6
   19898:	bl	12394 <puts@plt>
   1989c:	mov	r0, #10
   198a0:	bl	1249c <putchar@plt>
   198a4:	movw	r0, #44728	; 0xaeb8
   198a8:	movt	r0, #1
   198ac:	bl	12394 <puts@plt>
   198b0:	movw	r0, #44800	; 0xaf00
   198b4:	movt	r0, #1
   198b8:	bl	12394 <puts@plt>
   198bc:	movw	r0, #44860	; 0xaf3c
   198c0:	movt	r0, #1
   198c4:	bl	12394 <puts@plt>
   198c8:	ldr	r0, [sp, #4]
   198cc:	bl	12394 <puts@plt>
   198d0:	ldr	r0, [sp, #8]
   198d4:	bl	12394 <puts@plt>
   198d8:	movw	r0, #44884	; 0xaf54
   198dc:	movt	r0, #1
   198e0:	bl	12394 <puts@plt>
   198e4:	movw	r0, #44960	; 0xafa0
   198e8:	movt	r0, #1
   198ec:	bl	12394 <puts@plt>
   198f0:	mov	r0, fp
   198f4:	bl	12394 <puts@plt>
   198f8:	mov	r0, sl
   198fc:	bl	12394 <puts@plt>
   19900:	mov	r0, r5
   19904:	bl	12394 <puts@plt>
   19908:	mov	r0, r4
   1990c:	bl	12394 <puts@plt>
   19910:	ldr	sl, [sp, #12]
   19914:	mov	r0, sl
   19918:	bl	12394 <puts@plt>
   1991c:	ldr	r2, [sp, #20]
   19920:	mov	r0, r2
   19924:	str	r2, [sp, #8]
   19928:	bl	12394 <puts@plt>
   1992c:	ldr	r3, [sp, #16]
   19930:	mov	r0, r3
   19934:	str	r3, [sp, #4]
   19938:	bl	12394 <puts@plt>
   1993c:	mov	r0, r9
   19940:	bl	12394 <puts@plt>
   19944:	mov	r0, r8
   19948:	bl	12394 <puts@plt>
   1994c:	mov	r0, r7
   19950:	bl	12394 <puts@plt>
   19954:	mov	r0, r6
   19958:	bl	12394 <puts@plt>
   1995c:	mov	r0, #10
   19960:	bl	1249c <putchar@plt>
   19964:	movw	r0, #44992	; 0xafc0
   19968:	movt	r0, #1
   1996c:	bl	12394 <puts@plt>
   19970:	movw	r0, #45064	; 0xb008
   19974:	movt	r0, #1
   19978:	bl	12394 <puts@plt>
   1997c:	movw	r0, #45140	; 0xb054
   19980:	movt	r0, #1
   19984:	bl	12394 <puts@plt>
   19988:	movw	r0, #45216	; 0xb0a0
   1998c:	movt	r0, #1
   19990:	bl	12394 <puts@plt>
   19994:	movw	r0, #45264	; 0xb0d0
   19998:	movt	r0, #1
   1999c:	bl	12394 <puts@plt>
   199a0:	movw	r0, #45288	; 0xb0e8
   199a4:	movt	r0, #1
   199a8:	bl	12394 <puts@plt>
   199ac:	movw	r0, #45336	; 0xb118
   199b0:	movt	r0, #1
   199b4:	bl	12394 <puts@plt>
   199b8:	mov	r0, r5
   199bc:	bl	12394 <puts@plt>
   199c0:	mov	r0, r4
   199c4:	bl	12394 <puts@plt>
   199c8:	mov	r0, sl
   199cc:	bl	12394 <puts@plt>
   199d0:	ldr	r2, [sp, #8]
   199d4:	mov	r0, r2
   199d8:	bl	12394 <puts@plt>
   199dc:	ldr	r3, [sp, #4]
   199e0:	mov	r0, r3
   199e4:	bl	12394 <puts@plt>
   199e8:	movw	r0, #45392	; 0xb150
   199ec:	movt	r0, #1
   199f0:	bl	12394 <puts@plt>
   199f4:	movw	r0, #45424	; 0xb170
   199f8:	movt	r0, #1
   199fc:	bl	12394 <puts@plt>
   19a00:	movw	r0, #45504	; 0xb1c0
   19a04:	movt	r0, #1
   19a08:	bl	12394 <puts@plt>
   19a0c:	movw	r0, #45580	; 0xb20c
   19a10:	movt	r0, #1
   19a14:	bl	12394 <puts@plt>
   19a18:	movw	r0, #45644	; 0xb24c
   19a1c:	movt	r0, #1
   19a20:	bl	12394 <puts@plt>
   19a24:	movw	r0, #45724	; 0xb29c
   19a28:	movt	r0, #1
   19a2c:	bl	12394 <puts@plt>
   19a30:	mov	r0, #10
   19a34:	bl	1249c <putchar@plt>
   19a38:	movw	r0, #45780	; 0xb2d4
   19a3c:	movt	r0, #1
   19a40:	bl	12394 <puts@plt>
   19a44:	movw	r0, #45804	; 0xb2ec
   19a48:	movt	r0, #1
   19a4c:	bl	12394 <puts@plt>
   19a50:	mov	r0, #10
   19a54:	bl	1249c <putchar@plt>
   19a58:	movw	r0, #45836	; 0xb30c
   19a5c:	movt	r0, #1
   19a60:	bl	12394 <puts@plt>
   19a64:	movw	r0, #45864	; 0xb328
   19a68:	movt	r0, #1
   19a6c:	bl	12394 <puts@plt>
   19a70:	mov	r0, #10
   19a74:	bl	1249c <putchar@plt>
   19a78:	movw	r0, #45916	; 0xb35c
   19a7c:	movt	r0, #1
   19a80:	bl	12394 <puts@plt>
   19a84:	movw	r0, #45996	; 0xb3ac
   19a88:	movt	r0, #1
   19a8c:	bl	12394 <puts@plt>
   19a90:	movw	r0, #46072	; 0xb3f8
   19a94:	movt	r0, #1
   19a98:	bl	12394 <puts@plt>
   19a9c:	movw	r0, #46116	; 0xb424
   19aa0:	movt	r0, #1
   19aa4:	bl	12394 <puts@plt>
   19aa8:	movw	r0, #46192	; 0xb470
   19aac:	movt	r0, #1
   19ab0:	bl	12394 <puts@plt>
   19ab4:	movw	r0, #46264	; 0xb4b8
   19ab8:	movt	r0, #1
   19abc:	bl	12394 <puts@plt>
   19ac0:	movw	r0, #46328	; 0xb4f8
   19ac4:	movt	r0, #1
   19ac8:	bl	12394 <puts@plt>
   19acc:	mov	r0, #10
   19ad0:	add	sp, sp, #36	; 0x24
   19ad4:	ldrd	r4, [sp]
   19ad8:	ldrd	r6, [sp, #8]
   19adc:	ldrd	r8, [sp, #16]
   19ae0:	ldrd	sl, [sp, #24]
   19ae4:	ldr	lr, [sp, #32]
   19ae8:	add	sp, sp, #36	; 0x24
   19aec:	b	1249c <putchar@plt>

00019af0 <handle_coda_error@@Base>:
   19af0:	str	r4, [sp, #-8]!
   19af4:	movw	r4, #49592	; 0xc1b8
   19af8:	movt	r4, #2
   19afc:	ldr	r5, [r4]
   19b00:	str	lr, [sp, #4]
   19b04:	bl	125e0 <coda_get_errno@plt>
   19b08:	ldr	r0, [r0]
   19b0c:	bl	12598 <coda_errno_to_string@plt>
   19b10:	mov	r2, r0
   19b14:	movw	r1, #46392	; 0xb538
   19b18:	movt	r1, #1
   19b1c:	mov	r0, r5
   19b20:	bl	1243c <fprintf@plt>
   19b24:	ldr	r0, [r4]
   19b28:	bl	12244 <fflush@plt>
   19b2c:	mov	r0, #1
   19b30:	bl	123f4 <exit@plt>
   19b34:	cmp	r3, #0
   19b38:	cmpeq	r2, #0
   19b3c:	bne	19b60 <handle_coda_error@@Base+0x70>
   19b40:	cmp	r1, #0
   19b44:	movlt	r1, #-2147483648	; 0x80000000
   19b48:	movlt	r0, #0
   19b4c:	blt	19b5c <handle_coda_error@@Base+0x6c>
   19b50:	cmpeq	r0, #0
   19b54:	mvnne	r1, #-2147483648	; 0x80000000
   19b58:	mvnne	r0, #0
   19b5c:	b	19c08 <handle_coda_error@@Base+0x118>
   19b60:	sub	sp, sp, #8
   19b64:	push	{sp, lr}
   19b68:	cmp	r1, #0
   19b6c:	blt	19b8c <handle_coda_error@@Base+0x9c>
   19b70:	cmp	r3, #0
   19b74:	blt	19bc0 <handle_coda_error@@Base+0xd0>
   19b78:	bl	19c18 <handle_coda_error@@Base+0x128>
   19b7c:	ldr	lr, [sp, #4]
   19b80:	add	sp, sp, #8
   19b84:	pop	{r2, r3}
   19b88:	bx	lr
   19b8c:	rsbs	r0, r0, #0
   19b90:	sbc	r1, r1, r1, lsl #1
   19b94:	cmp	r3, #0
   19b98:	blt	19be4 <handle_coda_error@@Base+0xf4>
   19b9c:	bl	19c18 <handle_coda_error@@Base+0x128>
   19ba0:	ldr	lr, [sp, #4]
   19ba4:	add	sp, sp, #8
   19ba8:	pop	{r2, r3}
   19bac:	rsbs	r0, r0, #0
   19bb0:	sbc	r1, r1, r1, lsl #1
   19bb4:	rsbs	r2, r2, #0
   19bb8:	sbc	r3, r3, r3, lsl #1
   19bbc:	bx	lr
   19bc0:	rsbs	r2, r2, #0
   19bc4:	sbc	r3, r3, r3, lsl #1
   19bc8:	bl	19c18 <handle_coda_error@@Base+0x128>
   19bcc:	ldr	lr, [sp, #4]
   19bd0:	add	sp, sp, #8
   19bd4:	pop	{r2, r3}
   19bd8:	rsbs	r0, r0, #0
   19bdc:	sbc	r1, r1, r1, lsl #1
   19be0:	bx	lr
   19be4:	rsbs	r2, r2, #0
   19be8:	sbc	r3, r3, r3, lsl #1
   19bec:	bl	19c18 <handle_coda_error@@Base+0x128>
   19bf0:	ldr	lr, [sp, #4]
   19bf4:	add	sp, sp, #8
   19bf8:	pop	{r2, r3}
   19bfc:	rsbs	r2, r2, #0
   19c00:	sbc	r3, r3, r3, lsl #1
   19c04:	bx	lr
   19c08:	push	{r1, lr}
   19c0c:	mov	r0, #8
   19c10:	bl	121c0 <raise@plt>
   19c14:	pop	{r1, pc}
   19c18:	cmp	r1, r3
   19c1c:	cmpeq	r0, r2
   19c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c24:	mov	r4, r0
   19c28:	movcc	r0, #0
   19c2c:	mov	r5, r1
   19c30:	ldr	lr, [sp, #36]	; 0x24
   19c34:	movcc	r1, r0
   19c38:	bcc	19d34 <handle_coda_error@@Base+0x244>
   19c3c:	cmp	r3, #0
   19c40:	clzeq	ip, r2
   19c44:	clzne	ip, r3
   19c48:	addeq	ip, ip, #32
   19c4c:	cmp	r5, #0
   19c50:	clzeq	r1, r4
   19c54:	addeq	r1, r1, #32
   19c58:	clzne	r1, r5
   19c5c:	sub	ip, ip, r1
   19c60:	sub	sl, ip, #32
   19c64:	lsl	r9, r3, ip
   19c68:	rsb	fp, ip, #32
   19c6c:	orr	r9, r9, r2, lsl sl
   19c70:	orr	r9, r9, r2, lsr fp
   19c74:	lsl	r8, r2, ip
   19c78:	cmp	r5, r9
   19c7c:	cmpeq	r4, r8
   19c80:	movcc	r0, #0
   19c84:	movcc	r1, r0
   19c88:	bcc	19ca4 <handle_coda_error@@Base+0x1b4>
   19c8c:	mov	r0, #1
   19c90:	subs	r4, r4, r8
   19c94:	lsl	r1, r0, sl
   19c98:	orr	r1, r1, r0, lsr fp
   19c9c:	lsl	r0, r0, ip
   19ca0:	sbc	r5, r5, r9
   19ca4:	cmp	ip, #0
   19ca8:	beq	19d34 <handle_coda_error@@Base+0x244>
   19cac:	lsr	r6, r8, #1
   19cb0:	orr	r6, r6, r9, lsl #31
   19cb4:	lsr	r7, r9, #1
   19cb8:	mov	r2, ip
   19cbc:	b	19ce0 <handle_coda_error@@Base+0x1f0>
   19cc0:	subs	r3, r4, r6
   19cc4:	sbc	r8, r5, r7
   19cc8:	adds	r3, r3, r3
   19ccc:	adc	r8, r8, r8
   19cd0:	adds	r4, r3, #1
   19cd4:	adc	r5, r8, #0
   19cd8:	subs	r2, r2, #1
   19cdc:	beq	19cfc <handle_coda_error@@Base+0x20c>
   19ce0:	cmp	r5, r7
   19ce4:	cmpeq	r4, r6
   19ce8:	bcs	19cc0 <handle_coda_error@@Base+0x1d0>
   19cec:	adds	r4, r4, r4
   19cf0:	adc	r5, r5, r5
   19cf4:	subs	r2, r2, #1
   19cf8:	bne	19ce0 <handle_coda_error@@Base+0x1f0>
   19cfc:	lsr	r3, r4, ip
   19d00:	orr	r3, r3, r5, lsl fp
   19d04:	lsr	r2, r5, ip
   19d08:	orr	r3, r3, r5, lsr sl
   19d0c:	adds	r0, r0, r4
   19d10:	mov	r4, r3
   19d14:	lsl	r3, r2, ip
   19d18:	orr	r3, r3, r4, lsl sl
   19d1c:	lsl	ip, r4, ip
   19d20:	orr	r3, r3, r4, lsr fp
   19d24:	adc	r1, r1, r5
   19d28:	subs	r0, r0, ip
   19d2c:	mov	r5, r2
   19d30:	sbc	r1, r1, r3
   19d34:	cmp	lr, #0
   19d38:	strdne	r4, [lr]
   19d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019d40 <__libc_csu_init@@Base>:
   19d40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19d44:	mov	r7, r0
   19d48:	ldr	r6, [pc, #72]	; 19d98 <__libc_csu_init@@Base+0x58>
   19d4c:	ldr	r5, [pc, #72]	; 19d9c <__libc_csu_init@@Base+0x5c>
   19d50:	add	r6, pc, r6
   19d54:	add	r5, pc, r5
   19d58:	sub	r6, r6, r5
   19d5c:	mov	r8, r1
   19d60:	mov	r9, r2
   19d64:	bl	1217c <coda_cursor_get_byte_size@plt-0x20>
   19d68:	asrs	r6, r6, #2
   19d6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d70:	mov	r4, #0
   19d74:	add	r4, r4, #1
   19d78:	ldr	r3, [r5], #4
   19d7c:	mov	r2, r9
   19d80:	mov	r1, r8
   19d84:	mov	r0, r7
   19d88:	blx	r3
   19d8c:	cmp	r6, r4
   19d90:	bne	19d74 <__libc_csu_init@@Base+0x34>
   19d94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d98:	andeq	r2, r1, r4, lsr #3
   19d9c:	muleq	r1, ip, r1

00019da0 <__libc_csu_fini@@Base>:
   19da0:	bx	lr

Disassembly of section .fini:

00019da4 <.fini>:
   19da4:	push	{r3, lr}
   19da8:	pop	{r3, pc}
