
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	push	{r4, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-24]	; 0xffffffe8
  10:	ldr	r3, [fp, #-24]	; 0xffffffe8
  14:	mov	r2, #0
  18:	str	r2, [r3, #52]	; 0x34
  1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
  20:	mvn	r2, #0
  24:	str	r2, [r3, #56]	; 0x38
  28:	ldr	r3, [pc, #448]	; 1f0 <coda_bin_product_open+0x1f0>
  2c:	ldr	r3, [pc, r3]
  30:	bl	0 <__aeabi_read_tp>
  34:	mov	r2, r0
  38:	ldr	r3, [r2, r3]
  3c:	cmp	r3, #0
  40:	beq	170 <coda_bin_product_open+0x170>
  44:	ldr	r3, [fp, #-24]	; 0xffffffe8
  48:	ldrd	r2, [r3, #8]
  4c:	cmp	r2, #1
  50:	sbcs	r3, r3, #0
  54:	blt	170 <coda_bin_product_open+0x170>
  58:	ldr	r3, [fp, #-24]	; 0xffffffe8
  5c:	mov	r2, #1
  60:	str	r2, [r3, #52]	; 0x34
  64:	ldr	r3, [fp, #-24]	; 0xffffffe8
  68:	ldr	r3, [r3]
  6c:	mov	r1, #0
  70:	mov	r0, r3
  74:	bl	0 <open>
  78:	str	r0, [fp, #-16]
  7c:	ldr	r3, [fp, #-16]
  80:	cmp	r3, #0
  84:	bge	c0 <coda_bin_product_open+0xc0>
  88:	ldr	r3, [fp, #-24]	; 0xffffffe8
  8c:	ldr	r4, [r3]
  90:	bl	0 <__errno_location>
  94:	mov	r3, r0
  98:	ldr	r3, [r3]
  9c:	mov	r0, r3
  a0:	bl	0 <strerror>
  a4:	mov	r3, r0
  a8:	mov	r2, r4
  ac:	ldr	r1, [pc, #320]	; 1f4 <coda_bin_product_open+0x1f4>
  b0:	mvn	r0, #20
  b4:	bl	0 <coda_set_error>
  b8:	mvn	r3, #0
  bc:	b	1e4 <coda_bin_product_open+0x1e4>
  c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  c4:	ldrd	r2, [r3, #8]
  c8:	mov	r1, r2
  cc:	mov	r3, #0
  d0:	str	r3, [sp, #4]
  d4:	ldr	r3, [fp, #-16]
  d8:	str	r3, [sp]
  dc:	mov	r3, #1
  e0:	mov	r2, #1
  e4:	mov	r0, #0
  e8:	bl	0 <mmap>
  ec:	mov	r2, r0
  f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  f4:	str	r2, [r3, #48]	; 0x30
  f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
  fc:	ldr	r3, [r3, #48]	; 0x30
 100:	cmn	r3, #1
 104:	bne	154 <coda_bin_product_open+0x154>
 108:	ldr	r3, [fp, #-24]	; 0xffffffe8
 10c:	ldr	r4, [r3]
 110:	bl	0 <__errno_location>
 114:	mov	r3, r0
 118:	ldr	r3, [r3]
 11c:	mov	r0, r3
 120:	bl	0 <strerror>
 124:	mov	r3, r0
 128:	mov	r2, r4
 12c:	ldr	r1, [pc, #196]	; 1f8 <coda_bin_product_open+0x1f8>
 130:	mvn	r0, #20
 134:	bl	0 <coda_set_error>
 138:	ldr	r3, [fp, #-24]	; 0xffffffe8
 13c:	mov	r2, #0
 140:	str	r2, [r3, #48]	; 0x30
 144:	ldr	r0, [fp, #-16]
 148:	bl	0 <close>
 14c:	mvn	r3, #0
 150:	b	1e4 <coda_bin_product_open+0x1e4>
 154:	ldr	r0, [fp, #-16]
 158:	bl	0 <close>
 15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 160:	ldrd	r2, [r3, #8]
 164:	ldr	r1, [fp, #-24]	; 0xffffffe8
 168:	strd	r2, [r1, #40]	; 0x28
 16c:	b	1e0 <coda_bin_product_open+0x1e0>
 170:	mov	r3, #0
 174:	str	r3, [fp, #-20]	; 0xffffffec
 178:	ldr	r3, [fp, #-24]	; 0xffffffe8
 17c:	ldr	r3, [r3]
 180:	ldr	r1, [fp, #-20]	; 0xffffffec
 184:	mov	r0, r3
 188:	bl	0 <open>
 18c:	mov	r2, r0
 190:	ldr	r3, [fp, #-24]	; 0xffffffe8
 194:	str	r2, [r3, #56]	; 0x38
 198:	ldr	r3, [fp, #-24]	; 0xffffffe8
 19c:	ldr	r3, [r3, #56]	; 0x38
 1a0:	cmp	r3, #0
 1a4:	bge	1e0 <coda_bin_product_open+0x1e0>
 1a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1ac:	ldr	r4, [r3]
 1b0:	bl	0 <__errno_location>
 1b4:	mov	r3, r0
 1b8:	ldr	r3, [r3]
 1bc:	mov	r0, r3
 1c0:	bl	0 <strerror>
 1c4:	mov	r3, r0
 1c8:	mov	r2, r4
 1cc:	ldr	r1, [pc, #32]	; 1f4 <coda_bin_product_open+0x1f4>
 1d0:	mvn	r0, #20
 1d4:	bl	0 <coda_set_error>
 1d8:	mvn	r3, #0
 1dc:	b	1e4 <coda_bin_product_open+0x1e4>
 1e0:	mov	r3, #0
 1e4:	mov	r0, r3
 1e8:	sub	sp, fp, #8
 1ec:	pop	{r4, fp, pc}
 1f0:	.word	0x000001bc
 1f4:	.word	0x00000000
 1f8:	.word	0x0000001c

000001fc <coda_bin_product_close>:
 1fc:	push	{fp, lr}
 200:	add	fp, sp, #4
 204:	sub	sp, sp, #8
 208:	str	r0, [fp, #-8]
 20c:	ldr	r3, [fp, #-8]
 210:	ldr	r3, [r3, #52]	; 0x34
 214:	cmp	r3, #0
 218:	beq	264 <coda_bin_product_close+0x68>
 21c:	ldr	r3, [fp, #-8]
 220:	ldr	r3, [r3, #48]	; 0x30
 224:	cmp	r3, #0
 228:	beq	254 <coda_bin_product_close+0x58>
 22c:	ldr	r3, [fp, #-8]
 230:	ldr	r0, [r3, #48]	; 0x30
 234:	ldr	r3, [fp, #-8]
 238:	ldrd	r2, [r3, #8]
 23c:	mov	r3, r2
 240:	mov	r1, r3
 244:	bl	0 <munmap>
 248:	ldr	r3, [fp, #-8]
 24c:	mov	r2, #0
 250:	str	r2, [r3, #48]	; 0x30
 254:	ldr	r3, [fp, #-8]
 258:	mov	r2, #0
 25c:	str	r2, [r3, #52]	; 0x34
 260:	b	290 <coda_bin_product_close+0x94>
 264:	ldr	r3, [fp, #-8]
 268:	ldr	r3, [r3, #56]	; 0x38
 26c:	cmp	r3, #0
 270:	blt	290 <coda_bin_product_close+0x94>
 274:	ldr	r3, [fp, #-8]
 278:	ldr	r3, [r3, #56]	; 0x38
 27c:	mov	r0, r3
 280:	bl	0 <close>
 284:	ldr	r3, [fp, #-8]
 288:	mvn	r2, #0
 28c:	str	r2, [r3, #56]	; 0x38
 290:	mov	r3, #0
 294:	mov	r0, r3
 298:	sub	sp, fp, #4
 29c:	pop	{fp, pc}

000002a0 <coda_bin_open>:
 2a0:	push	{fp, lr}
 2a4:	add	fp, sp, #4
 2a8:	sub	sp, sp, #32
 2ac:	str	r0, [fp, #-16]
 2b0:	strd	r2, [fp, #-28]	; 0xffffffe4
 2b4:	mov	r0, #64	; 0x40
 2b8:	bl	0 <malloc>
 2bc:	mov	r3, r0
 2c0:	str	r3, [fp, #-8]
 2c4:	ldr	r3, [fp, #-8]
 2c8:	cmp	r3, #0
 2cc:	bne	2f4 <coda_bin_open+0x54>
 2d0:	mov	r3, #241	; 0xf1
 2d4:	str	r3, [sp]
 2d8:	ldr	r3, [pc, #344]	; 438 <coda_bin_open+0x198>
 2dc:	mov	r2, #64	; 0x40
 2e0:	ldr	r1, [pc, #340]	; 43c <coda_bin_open+0x19c>
 2e4:	mvn	r0, #0
 2e8:	bl	0 <coda_set_error>
 2ec:	mvn	r3, #0
 2f0:	b	42c <coda_bin_open+0x18c>
 2f4:	ldr	r3, [fp, #-8]
 2f8:	mov	r2, #0
 2fc:	str	r2, [r3]
 300:	ldr	r1, [fp, #-8]
 304:	ldrd	r2, [fp, #-28]	; 0xffffffe4
 308:	strd	r2, [r1, #8]
 30c:	ldr	r3, [fp, #-8]
 310:	mov	r2, #1
 314:	str	r2, [r3, #16]
 318:	ldr	r3, [fp, #-8]
 31c:	mov	r2, #0
 320:	str	r2, [r3, #20]
 324:	ldr	r3, [fp, #-8]
 328:	mov	r2, #0
 32c:	str	r2, [r3, #24]
 330:	ldr	r3, [fp, #-8]
 334:	mov	r2, #0
 338:	str	r2, [r3, #28]
 33c:	ldr	r3, [fp, #-8]
 340:	mov	r2, #0
 344:	str	r2, [r3, #32]
 348:	ldr	r1, [fp, #-8]
 34c:	mov	r2, #0
 350:	mov	r3, #0
 354:	strd	r2, [r1, #40]	; 0x28
 358:	ldr	r3, [fp, #-8]
 35c:	mov	r2, #0
 360:	str	r2, [r3, #48]	; 0x30
 364:	ldr	r3, [fp, #-8]
 368:	mov	r2, #0
 36c:	str	r2, [r3, #52]	; 0x34
 370:	ldr	r3, [fp, #-8]
 374:	mvn	r2, #0
 378:	str	r2, [r3, #56]	; 0x38
 37c:	bl	0 <coda_type_raw_file_singleton>
 380:	mov	r2, r0
 384:	ldr	r3, [fp, #-8]
 388:	str	r2, [r3, #20]
 38c:	ldr	r3, [fp, #-8]
 390:	ldr	r3, [r3, #20]
 394:	cmp	r3, #0
 398:	bne	3ac <coda_bin_open+0x10c>
 39c:	ldr	r0, [fp, #-8]
 3a0:	bl	514 <coda_bin_close>
 3a4:	mvn	r3, #0
 3a8:	b	42c <coda_bin_open+0x18c>
 3ac:	ldr	r0, [fp, #-16]
 3b0:	bl	0 <strdup>
 3b4:	mov	r3, r0
 3b8:	mov	r2, r3
 3bc:	ldr	r3, [fp, #-8]
 3c0:	str	r2, [r3]
 3c4:	ldr	r3, [fp, #-8]
 3c8:	ldr	r3, [r3]
 3cc:	cmp	r3, #0
 3d0:	bne	3f8 <coda_bin_open+0x158>
 3d4:	mov	r3, #268	; 0x10c
 3d8:	ldr	r2, [pc, #88]	; 438 <coda_bin_open+0x198>
 3dc:	ldr	r1, [pc, #92]	; 440 <coda_bin_open+0x1a0>
 3e0:	mvn	r0, #0
 3e4:	bl	0 <coda_set_error>
 3e8:	ldr	r0, [fp, #-8]
 3ec:	bl	514 <coda_bin_close>
 3f0:	mvn	r3, #0
 3f4:	b	42c <coda_bin_open+0x18c>
 3f8:	ldr	r0, [fp, #-8]
 3fc:	bl	0 <coda_bin_product_open>
 400:	mov	r3, r0
 404:	cmp	r3, #0
 408:	beq	41c <coda_bin_open+0x17c>
 40c:	ldr	r0, [fp, #-8]
 410:	bl	514 <coda_bin_close>
 414:	mvn	r3, #0
 418:	b	42c <coda_bin_open+0x18c>
 41c:	ldr	r3, [fp, #4]
 420:	ldr	r2, [fp, #-8]
 424:	str	r2, [r3]
 428:	mov	r3, #0
 42c:	mov	r0, r3
 430:	sub	sp, fp, #4
 434:	pop	{fp, pc}
 438:	.word	0x00000044
 43c:	.word	0x0000008c
 440:	.word	0x000000c4

00000444 <coda_bin_reopen_with_definition>:
 444:	push	{fp, lr}
 448:	add	fp, sp, #4
 44c:	sub	sp, sp, #16
 450:	str	r0, [fp, #-16]
 454:	str	r1, [fp, #-20]	; 0xffffffec
 458:	ldr	r3, [fp, #-16]
 45c:	ldr	r3, [r3]
 460:	str	r3, [fp, #-8]
 464:	ldr	r3, [fp, #-20]	; 0xffffffec
 468:	cmp	r3, #0
 46c:	bne	484 <coda_bin_reopen_with_definition+0x40>
 470:	ldr	r3, [pc, #128]	; 4f8 <coda_bin_reopen_with_definition+0xb4>
 474:	mov	r2, #288	; 0x120
 478:	ldr	r1, [pc, #124]	; 4fc <coda_bin_reopen_with_definition+0xb8>
 47c:	ldr	r0, [pc, #124]	; 500 <coda_bin_reopen_with_definition+0xbc>
 480:	bl	0 <__assert_fail>
 484:	ldr	r3, [fp, #-8]
 488:	ldr	r3, [r3, #16]
 48c:	cmp	r3, #1
 490:	beq	4a8 <coda_bin_reopen_with_definition+0x64>
 494:	ldr	r3, [pc, #92]	; 4f8 <coda_bin_reopen_with_definition+0xb4>
 498:	ldr	r2, [pc, #100]	; 504 <coda_bin_reopen_with_definition+0xc0>
 49c:	ldr	r1, [pc, #88]	; 4fc <coda_bin_reopen_with_definition+0xb8>
 4a0:	ldr	r0, [pc, #96]	; 508 <coda_bin_reopen_with_definition+0xc4>
 4a4:	bl	0 <__assert_fail>
 4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
 4ac:	ldr	r3, [r3]
 4b0:	cmp	r3, #1
 4b4:	beq	4cc <coda_bin_reopen_with_definition+0x88>
 4b8:	ldr	r3, [pc, #56]	; 4f8 <coda_bin_reopen_with_definition+0xb4>
 4bc:	ldr	r2, [pc, #72]	; 50c <coda_bin_reopen_with_definition+0xc8>
 4c0:	ldr	r1, [pc, #52]	; 4fc <coda_bin_reopen_with_definition+0xb8>
 4c4:	ldr	r0, [pc, #68]	; 510 <coda_bin_reopen_with_definition+0xcc>
 4c8:	bl	0 <__assert_fail>
 4cc:	ldr	r3, [fp, #-20]	; 0xffffffec
 4d0:	ldr	r2, [r3, #28]
 4d4:	ldr	r3, [fp, #-8]
 4d8:	str	r2, [r3, #20]
 4dc:	ldr	r3, [fp, #-8]
 4e0:	ldr	r2, [fp, #-20]	; 0xffffffec
 4e4:	str	r2, [r3, #24]
 4e8:	mov	r3, #0
 4ec:	mov	r0, r3
 4f0:	sub	sp, fp, #4
 4f4:	pop	{fp, pc}
 4f8:	.word	0x0000016c
 4fc:	.word	0x00000044
 500:	.word	0x00000100
 504:	.word	0x00000121
 508:	.word	0x00000114
 50c:	.word	0x00000122
 510:	.word	0x00000140

00000514 <coda_bin_close>:
 514:	push	{fp, lr}
 518:	add	fp, sp, #4
 51c:	sub	sp, sp, #16
 520:	str	r0, [fp, #-16]
 524:	ldr	r3, [fp, #-16]
 528:	str	r3, [fp, #-8]
 52c:	ldr	r0, [fp, #-8]
 530:	bl	1fc <coda_bin_product_close>
 534:	mov	r3, r0
 538:	cmp	r3, #0
 53c:	beq	548 <coda_bin_close+0x34>
 540:	mvn	r3, #0
 544:	b	574 <coda_bin_close+0x60>
 548:	ldr	r3, [fp, #-8]
 54c:	ldr	r3, [r3]
 550:	cmp	r3, #0
 554:	beq	568 <coda_bin_close+0x54>
 558:	ldr	r3, [fp, #-8]
 55c:	ldr	r3, [r3]
 560:	mov	r0, r3
 564:	bl	0 <free>
 568:	ldr	r0, [fp, #-8]
 56c:	bl	0 <free>
 570:	mov	r3, #0
 574:	mov	r0, r3
 578:	sub	sp, fp, #4
 57c:	pop	{fp, pc}
