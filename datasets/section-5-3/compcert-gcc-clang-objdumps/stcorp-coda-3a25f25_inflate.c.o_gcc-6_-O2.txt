
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <updatewindow>:
       0:	push	{r4, r5, r6, r7, r8, lr}
       4:	mov	r7, r1
       8:	ldr	r5, [r0, #28]
       c:	mov	r6, r2
      10:	ldr	r3, [r5, #52]	; 0x34
      14:	cmp	r3, #0
      18:	beq	100 <updatewindow+0x100>
      1c:	ldr	r2, [r5, #40]	; 0x28
      20:	cmp	r2, #0
      24:	beq	90 <updatewindow+0x90>
      28:	cmp	r6, r2
      2c:	bcs	b4 <updatewindow+0xb4>
      30:	ldr	r0, [r5, #48]	; 0x30
      34:	sub	r1, r7, r6
      38:	sub	r2, r2, r0
      3c:	cmp	r6, r2
      40:	movcc	r4, r6
      44:	movcs	r4, r2
      48:	add	r0, r3, r0
      4c:	mov	r2, r4
      50:	bl	0 <memcpy>
      54:	subs	r6, r6, r4
      58:	bne	dc <updatewindow+0xdc>
      5c:	ldr	r3, [r5, #48]	; 0x30
      60:	ldr	r1, [r5, #40]	; 0x28
      64:	add	r3, r4, r3
      68:	ldr	r2, [r5, #44]	; 0x2c
      6c:	cmp	r3, r1
      70:	str	r3, [r5, #48]	; 0x30
      74:	streq	r6, [r5, #48]	; 0x30
      78:	cmp	r1, r2
      7c:	bls	d4 <updatewindow+0xd4>
      80:	add	r2, r2, r4
      84:	str	r2, [r5, #44]	; 0x2c
      88:	mov	r0, #0
      8c:	pop	{r4, r5, r6, r7, r8, pc}
      90:	ldr	r0, [r5, #36]	; 0x24
      94:	mov	r2, #1
      98:	mov	r1, #0
      9c:	lsl	r2, r2, r0
      a0:	cmp	r6, r2
      a4:	str	r1, [r5, #48]	; 0x30
      a8:	str	r2, [r5, #40]	; 0x28
      ac:	str	r1, [r5, #44]	; 0x2c
      b0:	bcc	30 <updatewindow+0x30>
      b4:	sub	r1, r7, r2
      b8:	mov	r0, r3
      bc:	bl	0 <memcpy>
      c0:	ldr	r3, [r5, #40]	; 0x28
      c4:	mov	r0, #0
      c8:	str	r3, [r5, #44]	; 0x2c
      cc:	str	r0, [r5, #48]	; 0x30
      d0:	pop	{r4, r5, r6, r7, r8, pc}
      d4:	mov	r0, #0
      d8:	pop	{r4, r5, r6, r7, r8, pc}
      dc:	sub	r1, r7, r6
      e0:	mov	r2, r6
      e4:	ldr	r0, [r5, #52]	; 0x34
      e8:	bl	0 <memcpy>
      ec:	ldr	r3, [r5, #40]	; 0x28
      f0:	str	r6, [r5, #48]	; 0x30
      f4:	str	r3, [r5, #44]	; 0x2c
      f8:	mov	r0, #0
      fc:	pop	{r4, r5, r6, r7, r8, pc}
     100:	ldr	r1, [r5, #36]	; 0x24
     104:	mov	r4, #1
     108:	ldr	r3, [r0, #32]
     10c:	mov	r2, r4
     110:	lsl	r1, r4, r1
     114:	ldr	r0, [r0, #40]	; 0x28
     118:	blx	r3
     11c:	cmp	r0, #0
     120:	str	r0, [r5, #52]	; 0x34
     124:	movne	r3, r0
     128:	bne	1c <updatewindow+0x1c>
     12c:	mov	r0, r4
     130:	pop	{r4, r5, r6, r7, r8, pc}

00000134 <coda_inflateResetKeep>:
     134:	cmp	r0, #0
     138:	beq	1bc <coda_inflateResetKeep+0x88>
     13c:	ldr	r3, [r0, #28]
     140:	cmp	r3, #0
     144:	beq	1bc <coda_inflateResetKeep+0x88>
     148:	ldr	r1, [r3, #8]
     14c:	mov	r2, #0
     150:	cmp	r1, r2
     154:	andne	r1, r1, #1
     158:	push	{r4, lr}
     15c:	mvn	ip, #0
     160:	str	r2, [r3, #28]
     164:	strne	r1, [r0, #48]	; 0x30
     168:	add	r1, r3, #4096	; 0x1000
     16c:	str	r2, [r0, #20]
     170:	str	r2, [r0, #8]
     174:	str	r2, [r0, #24]
     178:	mov	r4, #32768	; 0x8000
     17c:	mov	r0, #0
     180:	add	r2, r3, #1328	; 0x530
     184:	mov	lr, #1
     188:	str	r0, [r3]
     18c:	str	r0, [r3, #4]
     190:	str	r0, [r3, #12]
     194:	str	r0, [r3, #32]
     198:	str	r0, [r3, #56]	; 0x38
     19c:	str	r0, [r3, #60]	; 0x3c
     1a0:	str	r4, [r3, #20]
     1a4:	str	r2, [r3, #108]	; 0x6c
     1a8:	str	r2, [r3, #80]	; 0x50
     1ac:	str	r2, [r3, #76]	; 0x4c
     1b0:	str	lr, [r1, #3008]	; 0xbc0
     1b4:	str	ip, [r1, #3012]	; 0xbc4
     1b8:	pop	{r4, pc}
     1bc:	mvn	r0, #1
     1c0:	bx	lr

000001c4 <coda_inflateReset>:
     1c4:	subs	r3, r0, #0
     1c8:	beq	1ec <coda_inflateReset+0x28>
     1cc:	ldr	r3, [r3, #28]
     1d0:	cmp	r3, #0
     1d4:	beq	1ec <coda_inflateReset+0x28>
     1d8:	mov	r2, #0
     1dc:	str	r2, [r3, #40]	; 0x28
     1e0:	str	r2, [r3, #44]	; 0x2c
     1e4:	str	r2, [r3, #48]	; 0x30
     1e8:	b	134 <coda_inflateResetKeep>
     1ec:	mvn	r0, #1
     1f0:	bx	lr

000001f4 <coda_inflateReset2>:
     1f4:	push	{r4, r5, r6, r7, r8, lr}
     1f8:	subs	r7, r0, #0
     1fc:	beq	284 <coda_inflateReset2+0x90>
     200:	ldr	r5, [r7, #28]
     204:	cmp	r5, #0
     208:	beq	284 <coda_inflateReset2+0x90>
     20c:	cmp	r1, #0
     210:	mov	r4, r1
     214:	movlt	r8, #0
     218:	rsblt	r4, r1, #0
     21c:	blt	230 <coda_inflateReset2+0x3c>
     220:	asr	r8, r4, #4
     224:	cmp	r4, #47	; 0x2f
     228:	add	r8, r8, #1
     22c:	andle	r4, r4, #15
     230:	sub	r3, r4, #8
     234:	cmp	r4, #0
     238:	cmpne	r3, #7
     23c:	movhi	r6, #1
     240:	movls	r6, #0
     244:	bhi	284 <coda_inflateReset2+0x90>
     248:	ldr	r1, [r5, #52]	; 0x34
     24c:	cmp	r1, #0
     250:	beq	270 <coda_inflateReset2+0x7c>
     254:	ldr	r3, [r5, #36]	; 0x24
     258:	cmp	r4, r3
     25c:	beq	270 <coda_inflateReset2+0x7c>
     260:	ldr	r3, [r7, #36]	; 0x24
     264:	ldr	r0, [r7, #40]	; 0x28
     268:	blx	r3
     26c:	str	r6, [r5, #52]	; 0x34
     270:	str	r8, [r5, #8]
     274:	str	r4, [r5, #36]	; 0x24
     278:	mov	r0, r7
     27c:	pop	{r4, r5, r6, r7, r8, lr}
     280:	b	1c4 <coda_inflateReset>
     284:	mvn	r0, #1
     288:	pop	{r4, r5, r6, r7, r8, pc}

0000028c <coda_inflateInit2_>:
     28c:	cmp	r2, #0
     290:	push	{r4, r5, r6, r7, r8, lr}
     294:	beq	350 <coda_inflateInit2_+0xc4>
     298:	ldrb	r2, [r2]
     29c:	cmp	r3, #56	; 0x38
     2a0:	cmpeq	r2, #49	; 0x31
     2a4:	movne	r2, #1
     2a8:	moveq	r2, #0
     2ac:	bne	350 <coda_inflateInit2_+0xc4>
     2b0:	cmp	r0, #0
     2b4:	beq	364 <coda_inflateInit2_+0xd8>
     2b8:	ldr	r3, [r0, #32]
     2bc:	str	r2, [r0, #24]
     2c0:	cmp	r3, #0
     2c4:	moveq	r2, r3
     2c8:	ldreq	ip, [pc, #156]	; 36c <coda_inflateInit2_+0xe0>
     2cc:	streq	r3, [r0, #40]	; 0x28
     2d0:	streq	ip, [r0, #32]
     2d4:	moveq	r3, ip
     2d8:	ldr	ip, [r0, #36]	; 0x24
     2dc:	ldrne	r2, [r0, #40]	; 0x28
     2e0:	cmp	ip, #0
     2e4:	mov	r5, r1
     2e8:	ldreq	ip, [pc, #128]	; 370 <coda_inflateInit2_+0xe4>
     2ec:	mov	r4, r0
     2f0:	streq	ip, [r0, #36]	; 0x24
     2f4:	mov	r1, #1
     2f8:	mov	r0, r2
     2fc:	ldr	r2, [pc, #112]	; 374 <coda_inflateInit2_+0xe8>
     300:	blx	r3
     304:	subs	r6, r0, #0
     308:	beq	35c <coda_inflateInit2_+0xd0>
     30c:	mov	r7, #0
     310:	str	r6, [r4, #28]
     314:	mov	r1, r5
     318:	str	r7, [r6, #52]	; 0x34
     31c:	mov	r0, r4
     320:	bl	1f4 <coda_inflateReset2>
     324:	subs	r5, r0, #0
     328:	bne	334 <coda_inflateInit2_+0xa8>
     32c:	mov	r0, r5
     330:	pop	{r4, r5, r6, r7, r8, pc}
     334:	ldr	r0, [r4, #40]	; 0x28
     338:	mov	r1, r6
     33c:	ldr	r3, [r4, #36]	; 0x24
     340:	blx	r3
     344:	str	r7, [r4, #28]
     348:	mov	r0, r5
     34c:	pop	{r4, r5, r6, r7, r8, pc}
     350:	mvn	r5, #5
     354:	mov	r0, r5
     358:	pop	{r4, r5, r6, r7, r8, pc}
     35c:	mvn	r5, #3
     360:	b	32c <coda_inflateInit2_+0xa0>
     364:	mvn	r5, #1
     368:	b	32c <coda_inflateInit2_+0xa0>
	...
     374:	.word	0x00001bcc

00000378 <coda_inflateInit_>:
     378:	mov	r3, r2
     37c:	mov	r2, r1
     380:	mov	r1, #15
     384:	b	28c <coda_inflateInit2_>

00000388 <coda_inflatePrime>:
     388:	cmp	r0, #0
     38c:	beq	3f0 <coda_inflatePrime+0x68>
     390:	ldr	r3, [r0, #28]
     394:	cmp	r3, #0
     398:	beq	3f0 <coda_inflatePrime+0x68>
     39c:	cmp	r1, #0
     3a0:	blt	3e0 <coda_inflatePrime+0x58>
     3a4:	cmp	r1, #16
     3a8:	bgt	3f0 <coda_inflatePrime+0x68>
     3ac:	ldr	ip, [r3, #60]	; 0x3c
     3b0:	push	{r4, lr}
     3b4:	add	lr, r1, ip
     3b8:	cmp	lr, #32
     3bc:	bhi	3f8 <coda_inflatePrime+0x70>
     3c0:	mvn	r4, #0
     3c4:	ldr	r0, [r3, #56]	; 0x38
     3c8:	bic	r1, r2, r4, lsl r1
     3cc:	str	lr, [r3, #60]	; 0x3c
     3d0:	add	r1, r0, r1, lsl ip
     3d4:	mov	r0, #0
     3d8:	str	r1, [r3, #56]	; 0x38
     3dc:	pop	{r4, pc}
     3e0:	mov	r0, #0
     3e4:	str	r0, [r3, #56]	; 0x38
     3e8:	str	r0, [r3, #60]	; 0x3c
     3ec:	bx	lr
     3f0:	mvn	r0, #1
     3f4:	bx	lr
     3f8:	mvn	r0, #1
     3fc:	pop	{r4, pc}

00000400 <coda_inflate>:
     400:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     404:	subs	fp, r0, #0
     408:	sub	sp, sp, #60	; 0x3c
     40c:	beq	c7c <coda_inflate+0x87c>
     410:	ldr	r9, [fp, #28]
     414:	cmp	r9, #0
     418:	beq	c7c <coda_inflate+0x87c>
     41c:	ldr	r3, [fp, #12]
     420:	cmp	r3, #0
     424:	str	r3, [sp, #16]
     428:	beq	c7c <coda_inflate+0x87c>
     42c:	ldr	sl, [fp]
     430:	ldr	r3, [fp, #4]
     434:	cmp	sl, #0
     438:	str	r3, [sp, #24]
     43c:	beq	c74 <coda_inflate+0x874>
     440:	ldr	r3, [r9]
     444:	ldr	r6, [r9, #56]	; 0x38
     448:	cmp	r3, #11
     44c:	moveq	r2, #12
     450:	moveq	r3, r2
     454:	streq	r2, [r9]
     458:	ldr	r4, [r9, #60]	; 0x3c
     45c:	ldr	r2, [fp, #16]
     460:	ldr	r5, [sp, #24]
     464:	str	r2, [sp, #12]
     468:	str	r2, [sp, #20]
     46c:	add	r2, r9, #1328	; 0x530
     470:	str	r1, [sp, #28]
     474:	str	r2, [sp, #32]
     478:	cmp	r3, #30
     47c:	ldrls	pc, [pc, r3, lsl #2]
     480:	b	c7c <coda_inflate+0x87c>
     484:	.word	0x00000e6c
     488:	.word	0x00000708
     48c:	.word	0x00000580
     490:	.word	0x000005f4
     494:	.word	0x00001260
     498:	.word	0x00001cf4
     49c:	.word	0x00001360
     4a0:	.word	0x00001148
     4a4:	.word	0x00000c0c
     4a8:	.word	0x00000758
     4ac:	.word	0x00001d0c
     4b0:	.word	0x00001d04
     4b4:	.word	0x00001cd0
     4b8:	.word	0x00000eec
     4bc:	.word	0x0000103c
     4c0:	.word	0x000010bc
     4c4:	.word	0x00000518
     4c8:	.word	0x000010c4
     4cc:	.word	0x000007c8
     4d0:	.word	0x00000c00
     4d4:	.word	0x00000a38
     4d8:	.word	0x00000d2c
     4dc:	.word	0x00000d4c
     4e0:	.word	0x00001250
     4e4:	.word	0x00000cd8
     4e8:	.word	0x00000a08
     4ec:	.word	0x00000f3c
     4f0:	.word	0x000011e4
     4f4:	.word	0x00001cfc
     4f8:	.word	0x00001034
     4fc:	.word	0x00001760
     500:	cmp	r5, #0
     504:	beq	c6c <coda_inflate+0x86c>
     508:	ldrb	r3, [sl], #1
     50c:	sub	r5, r5, #1
     510:	add	r6, r6, r3, lsl r4
     514:	add	r4, r4, #8
     518:	cmp	r4, #13
     51c:	bls	500 <coda_inflate+0x100>
     520:	and	r0, r6, #31
     524:	lsr	r1, r6, #5
     528:	ldr	r3, [pc, #3968]	; 14b0 <coda_inflate+0x10b0>
     52c:	lsr	r2, r6, #10
     530:	add	r0, r0, #256	; 0x100
     534:	and	r1, r1, #31
     538:	add	r0, r0, #1
     53c:	add	r1, r1, #1
     540:	and	r2, r2, #15
     544:	cmp	r0, r3
     548:	cmpls	r1, #30
     54c:	add	r2, r2, #4
     550:	movhi	r3, #1
     554:	movls	r3, #0
     558:	sub	r4, r4, #14
     55c:	str	r0, [r9, #96]	; 0x60
     560:	str	r1, [r9, #100]	; 0x64
     564:	str	r2, [r9, #92]	; 0x5c
     568:	lsr	r6, r6, #14
     56c:	bhi	1720 <coda_inflate+0x1320>
     570:	mov	r1, #17
     574:	str	r3, [r9, #104]	; 0x68
     578:	str	r1, [r9]
     57c:	b	10d4 <coda_inflate+0xcd4>
     580:	cmp	r4, #31
     584:	bhi	5b4 <coda_inflate+0x1b4>
     588:	cmp	r5, #0
     58c:	bne	59c <coda_inflate+0x19c>
     590:	b	890 <coda_inflate+0x490>
     594:	cmp	r5, #0
     598:	beq	c6c <coda_inflate+0x86c>
     59c:	ldrb	r3, [sl], #1
     5a0:	sub	r5, r5, #1
     5a4:	add	r6, r6, r3, lsl r4
     5a8:	add	r4, r4, #8
     5ac:	cmp	r4, #31
     5b0:	bls	594 <coda_inflate+0x194>
     5b4:	ldr	r3, [r9, #32]
     5b8:	cmp	r3, #0
     5bc:	strne	r6, [r3, #4]
     5c0:	ldr	r3, [r9, #16]
     5c4:	tst	r3, #512	; 0x200
     5c8:	bne	17e8 <coda_inflate+0x13e8>
     5cc:	mov	r4, #0
     5d0:	mov	r6, r4
     5d4:	mov	r3, #3
     5d8:	str	r3, [r9]
     5dc:	cmp	r5, #0
     5e0:	beq	890 <coda_inflate+0x490>
     5e4:	ldrb	r3, [sl], #1
     5e8:	sub	r5, r5, #1
     5ec:	add	r6, r6, r3, lsl r4
     5f0:	add	r4, r4, #8
     5f4:	cmp	r4, #15
     5f8:	bls	5dc <coda_inflate+0x1dc>
     5fc:	ldr	r3, [r9, #32]
     600:	cmp	r3, #0
     604:	uxtbne	r1, r6
     608:	lsrne	r2, r6, #8
     60c:	strne	r1, [r3, #8]
     610:	strne	r2, [r3, #12]
     614:	ldr	r3, [r9, #16]
     618:	tst	r3, #512	; 0x200
     61c:	bne	1768 <coda_inflate+0x1368>
     620:	mov	r2, #4
     624:	ands	r4, r3, #1024	; 0x400
     628:	str	r2, [r9]
     62c:	moveq	r6, r4
     630:	beq	126c <coda_inflate+0xe6c>
     634:	mov	r4, #0
     638:	mov	r6, r4
     63c:	cmp	r5, #0
     640:	beq	890 <coda_inflate+0x490>
     644:	ldrb	r2, [sl], #1
     648:	sub	r5, r5, #1
     64c:	add	r6, r6, r2, lsl r4
     650:	add	r4, r4, #8
     654:	cmp	r4, #15
     658:	bls	63c <coda_inflate+0x23c>
     65c:	ldr	r2, [r9, #32]
     660:	str	r6, [r9, #64]	; 0x40
     664:	cmp	r2, #0
     668:	strne	r6, [r2, #20]
     66c:	ands	r2, r3, #512	; 0x200
     670:	moveq	r6, r2
     674:	moveq	r4, r6
     678:	beq	127c <coda_inflate+0xe7c>
     67c:	lsr	r3, r6, #8
     680:	mov	r2, #2
     684:	add	r1, sp, #52	; 0x34
     688:	ldr	r0, [r9, #24]
     68c:	strb	r6, [sp, #52]	; 0x34
     690:	strb	r3, [sp, #53]	; 0x35
     694:	bl	0 <coda_crc32>
     698:	mov	r6, #0
     69c:	mov	r4, r6
     6a0:	ldr	r3, [r9, #16]
     6a4:	str	r0, [r9, #24]
     6a8:	b	127c <coda_inflate+0xe7c>
     6ac:	mov	r2, #0
     6b0:	mov	r1, r2
     6b4:	mov	r0, r2
     6b8:	bl	0 <coda_crc32>
     6bc:	mov	r1, #31
     6c0:	mvn	r3, #116	; 0x74
     6c4:	strb	r1, [sp, #52]	; 0x34
     6c8:	mov	r2, #2
     6cc:	add	r1, sp, #52	; 0x34
     6d0:	strb	r3, [sp, #53]	; 0x35
     6d4:	mov	r4, #0
     6d8:	mov	r6, r4
     6dc:	str	r0, [r9, #24]
     6e0:	bl	0 <coda_crc32>
     6e4:	mov	r3, #1
     6e8:	str	r3, [r9]
     6ec:	str	r0, [r9, #24]
     6f0:	cmp	r5, #0
     6f4:	beq	c6c <coda_inflate+0x86c>
     6f8:	ldrb	r3, [sl], #1
     6fc:	sub	r5, r5, #1
     700:	add	r6, r6, r3, lsl r4
     704:	add	r4, r4, #8
     708:	cmp	r4, #15
     70c:	bls	6f0 <coda_inflate+0x2f0>
     710:	uxtb	r3, r6
     714:	cmp	r3, #8
     718:	str	r6, [r9, #16]
     71c:	beq	185c <coda_inflate+0x145c>
     720:	ldr	r2, [pc, #3500]	; 14d4 <coda_inflate+0x10d4>
     724:	mov	r3, #29
     728:	str	r2, [fp, #24]
     72c:	str	r3, [r9]
     730:	b	1034 <coda_inflate+0xc34>
     734:	mov	r4, #0
     738:	mov	r3, #9
     73c:	str	r3, [r9]
     740:	cmp	r5, #0
     744:	beq	c6c <coda_inflate+0x86c>
     748:	ldrb	r3, [sl], #1
     74c:	sub	r5, r5, #1
     750:	add	r6, r6, r3, lsl r4
     754:	add	r4, r4, #8
     758:	cmp	r4, #31
     75c:	bls	740 <coda_inflate+0x340>
     760:	lsl	r3, r6, #24
     764:	lsr	r2, r6, #8
     768:	add	r3, r3, r6, lsr #24
     76c:	and	r2, r2, #65280	; 0xff00
     770:	lsl	r6, r6, #8
     774:	mov	r4, #0
     778:	add	r3, r3, r2
     77c:	and	r6, r6, #16711680	; 0xff0000
     780:	mov	r8, r4
     784:	add	r3, r3, r6
     788:	mov	r2, #10
     78c:	str	r3, [r9, #24]
     790:	str	r3, [fp, #48]	; 0x30
     794:	str	r2, [r9]
     798:	ldr	r3, [r9, #12]
     79c:	cmp	r3, #0
     7a0:	beq	1b14 <coda_inflate+0x1714>
     7a4:	mov	r2, #0
     7a8:	mov	r1, r2
     7ac:	mov	r0, r2
     7b0:	bl	0 <coda_adler32>
     7b4:	mov	r3, #11
     7b8:	str	r0, [r9, #24]
     7bc:	str	r0, [fp, #48]	; 0x30
     7c0:	str	r3, [r9]
     7c4:	b	c58 <coda_inflate+0x858>
     7c8:	ldr	lr, [r9, #104]	; 0x68
     7cc:	ldr	r2, [r9, #96]	; 0x60
     7d0:	ldr	r7, [r9, #100]	; 0x64
     7d4:	mov	r8, #1
     7d8:	add	r7, r2, r7
     7dc:	cmp	lr, r7
     7e0:	bcs	1ae4 <coda_inflate+0x16e4>
     7e4:	ldr	r1, [r9, #84]	; 0x54
     7e8:	ldr	r0, [r9, #76]	; 0x4c
     7ec:	lsl	r1, r8, r1
     7f0:	sub	r1, r1, #1
     7f4:	and	r3, r6, r1
     7f8:	add	r3, r0, r3, lsl #2
     7fc:	ldrb	ip, [r3, #1]
     800:	ldrh	r3, [r3, #2]
     804:	cmp	r4, ip
     808:	bcs	848 <coda_inflate+0x448>
     80c:	cmp	r5, #0
     810:	bne	820 <coda_inflate+0x420>
     814:	b	c6c <coda_inflate+0x86c>
     818:	cmp	r5, #0
     81c:	beq	890 <coda_inflate+0x490>
     820:	ldrb	r3, [sl], #1
     824:	sub	r5, r5, #1
     828:	add	r6, r6, r3, lsl r4
     82c:	and	r3, r6, r1
     830:	add	r4, r4, #8
     834:	add	r3, r0, r3, lsl #2
     838:	ldrb	ip, [r3, #1]
     83c:	ldrh	r3, [r3, #2]
     840:	cmp	ip, r4
     844:	bhi	818 <coda_inflate+0x418>
     848:	cmp	r3, #15
     84c:	bls	1624 <coda_inflate+0x1224>
     850:	cmp	r3, #16
     854:	beq	18a0 <coda_inflate+0x14a0>
     858:	cmp	r3, #17
     85c:	beq	19c8 <coda_inflate+0x15c8>
     860:	add	r1, ip, #7
     864:	cmp	r1, r4
     868:	bhi	888 <coda_inflate+0x488>
     86c:	b	18d4 <coda_inflate+0x14d4>
     870:	ldrb	r3, [sl], #1
     874:	sub	r5, r5, #1
     878:	add	r6, r6, r3, lsl r4
     87c:	add	r4, r4, #8
     880:	cmp	r1, r4
     884:	bls	18d4 <coda_inflate+0x14d4>
     888:	cmp	r5, #0
     88c:	bne	870 <coda_inflate+0x470>
     890:	mov	r7, r5
     894:	ldr	r3, [r9, #40]	; 0x28
     898:	ldr	r2, [sp, #16]
     89c:	cmp	r3, #0
     8a0:	ldr	r3, [sp, #12]
     8a4:	str	r2, [fp, #12]
     8a8:	str	r3, [fp, #16]
     8ac:	str	sl, [fp]
     8b0:	str	r5, [fp, #4]
     8b4:	str	r6, [r9, #56]	; 0x38
     8b8:	str	r4, [r9, #60]	; 0x3c
     8bc:	bne	8f8 <coda_inflate+0x4f8>
     8c0:	ldr	r2, [sp, #20]
     8c4:	cmp	r2, r3
     8c8:	beq	924 <coda_inflate+0x524>
     8cc:	ldr	r3, [r9]
     8d0:	cmp	r3, #28
     8d4:	bhi	924 <coda_inflate+0x524>
     8d8:	cmp	r3, #25
     8dc:	ldr	r2, [sp, #28]
     8e0:	movhi	r3, #0
     8e4:	movls	r3, #1
     8e8:	cmp	r2, #4
     8ec:	orrne	r3, r3, #1
     8f0:	cmp	r3, #0
     8f4:	beq	924 <coda_inflate+0x524>
     8f8:	ldr	r3, [sp, #20]
     8fc:	ldr	r2, [sp, #12]
     900:	ldr	r1, [sp, #16]
     904:	sub	r2, r3, r2
     908:	mov	r0, fp
     90c:	bl	0 <updatewindow>
     910:	cmp	r0, #0
     914:	bne	1758 <coda_inflate+0x1358>
     918:	ldr	r5, [fp, #4]
     91c:	ldr	r3, [fp, #16]
     920:	str	r3, [sp, #12]
     924:	ldr	r2, [sp, #24]
     928:	ldr	r0, [sp, #12]
     92c:	sub	r5, r2, r5
     930:	ldr	r2, [sp, #20]
     934:	ldr	r3, [r9, #8]
     938:	sub	r4, r2, r0
     93c:	ldr	r1, [fp, #8]
     940:	ldr	r2, [fp, #20]
     944:	cmp	r3, #0
     948:	cmpne	r4, #0
     94c:	ldr	r3, [r9, #28]
     950:	add	r1, r1, r5
     954:	add	r2, r2, r4
     958:	add	r3, r3, r4
     95c:	str	r1, [fp, #8]
     960:	str	r2, [fp, #20]
     964:	str	r3, [r9, #28]
     968:	beq	994 <coda_inflate+0x594>
     96c:	ldr	r3, [r9, #16]
     970:	ldr	r1, [fp, #12]
     974:	cmp	r3, #0
     978:	mov	r2, r4
     97c:	sub	r1, r1, r4
     980:	ldr	r0, [r9, #24]
     984:	bne	a00 <coda_inflate+0x600>
     988:	bl	0 <coda_adler32>
     98c:	str	r0, [r9, #24]
     990:	str	r0, [fp, #48]	; 0x30
     994:	ldm	r9, {r2, r3}
     998:	ldr	r1, [r9, #60]	; 0x3c
     99c:	cmp	r3, #0
     9a0:	movne	r3, #64	; 0x40
     9a4:	moveq	r3, #0
     9a8:	cmp	r2, #11
     9ac:	add	r3, r3, r1
     9b0:	beq	9f4 <coda_inflate+0x5f4>
     9b4:	cmp	r2, #14
     9b8:	cmpne	r2, #19
     9bc:	movne	r2, #0
     9c0:	moveq	r2, #256	; 0x100
     9c4:	ldr	r1, [sp, #28]
     9c8:	orr	r5, r5, r4
     9cc:	add	r3, r2, r3
     9d0:	cmp	r5, #0
     9d4:	cmpne	r1, #4
     9d8:	str	r3, [fp, #44]	; 0x2c
     9dc:	bne	9e8 <coda_inflate+0x5e8>
     9e0:	cmp	r7, #0
     9e4:	mvneq	r7, #4
     9e8:	mov	r0, r7
     9ec:	add	sp, sp, #60	; 0x3c
     9f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     9f4:	add	r3, r3, #128	; 0x80
     9f8:	mov	r2, #0
     9fc:	b	9c4 <coda_inflate+0x5c4>
     a00:	bl	0 <coda_crc32>
     a04:	b	98c <coda_inflate+0x58c>
     a08:	ldr	r1, [sp, #12]
     a0c:	cmp	r1, #0
     a10:	beq	c6c <coda_inflate+0x86c>
     a14:	sub	r1, r1, #1
     a18:	str	r1, [sp, #12]
     a1c:	ldr	r1, [sp, #16]
     a20:	ldr	r2, [r9, #64]	; 0x40
     a24:	mov	r3, #20
     a28:	strb	r2, [r1]
     a2c:	add	r2, r1, #1
     a30:	str	r2, [sp, #16]
     a34:	str	r3, [r9]
     a38:	ldr	r3, [sp, #12]
     a3c:	ldr	r2, [pc, #2672]	; 14b4 <coda_inflate+0x10b4>
     a40:	cmp	r5, #5
     a44:	cmphi	r3, r2
     a48:	movhi	ip, #1
     a4c:	movls	ip, #0
     a50:	bhi	166c <coda_inflate+0x126c>
     a54:	ldr	r3, [r9, #84]	; 0x54
     a58:	mvn	r7, #0
     a5c:	ldr	r2, [r9, #76]	; 0x4c
     a60:	mvn	r7, r7, lsl r3
     a64:	and	r3, r6, r7
     a68:	add	lr, r9, #4096	; 0x1000
     a6c:	add	r0, r2, r3, lsl #2
     a70:	ldrb	r1, [r2, r3, lsl #2]
     a74:	ldrb	r3, [r0, #1]
     a78:	ldrh	r0, [r0, #2]
     a7c:	str	ip, [lr, #3012]	; 0xbc4
     a80:	cmp	r4, r3
     a84:	mov	ip, r3
     a88:	bcs	ad0 <coda_inflate+0x6d0>
     a8c:	cmp	r5, #0
     a90:	bne	aa0 <coda_inflate+0x6a0>
     a94:	b	c6c <coda_inflate+0x86c>
     a98:	cmp	r5, #0
     a9c:	beq	890 <coda_inflate+0x490>
     aa0:	ldrb	r3, [sl], #1
     aa4:	sub	r5, r5, #1
     aa8:	add	r6, r6, r3, lsl r4
     aac:	and	r3, r6, r7
     ab0:	add	r4, r4, #8
     ab4:	add	r0, r2, r3, lsl #2
     ab8:	ldrb	r1, [r2, r3, lsl #2]
     abc:	ldrb	r3, [r0, #1]
     ac0:	ldrh	r0, [r0, #2]
     ac4:	cmp	r3, r4
     ac8:	mov	ip, r3
     acc:	bhi	a98 <coda_inflate+0x698>
     ad0:	cmp	r1, #0
     ad4:	beq	16d8 <coda_inflate+0x12d8>
     ad8:	tst	r1, #240	; 0xf0
     adc:	bne	16d8 <coda_inflate+0x12d8>
     ae0:	add	r1, r1, r3
     ae4:	mvn	r7, #0
     ae8:	mov	r8, r3
     aec:	mvn	r3, r7, lsl r1
     af0:	str	r3, [sp, #40]	; 0x28
     af4:	and	r3, r3, r6
     af8:	str	r0, [sp, #36]	; 0x24
     afc:	add	r3, r0, r3, lsr r8
     b00:	add	r0, r2, r3, lsl #2
     b04:	ldrb	r1, [r2, r3, lsl #2]
     b08:	ldrb	r3, [r0, #1]
     b0c:	ldrh	r0, [r0, #2]
     b10:	add	r7, r8, r3
     b14:	cmp	r7, r4
     b18:	bls	b7c <coda_inflate+0x77c>
     b1c:	cmp	r5, #0
     b20:	beq	c6c <coda_inflate+0x86c>
     b24:	str	ip, [sp, #44]	; 0x2c
     b28:	ldr	ip, [sp, #36]	; 0x24
     b2c:	str	lr, [sp, #36]	; 0x24
     b30:	ldr	lr, [sp, #40]	; 0x28
     b34:	b	b40 <coda_inflate+0x740>
     b38:	cmp	r5, #0
     b3c:	beq	890 <coda_inflate+0x490>
     b40:	ldrb	r3, [sl], #1
     b44:	sub	r5, r5, #1
     b48:	add	r6, r6, r3, lsl r4
     b4c:	and	r3, r6, lr
     b50:	add	r4, r4, #8
     b54:	add	r3, ip, r3, lsr r8
     b58:	add	r0, r2, r3, lsl #2
     b5c:	ldrb	r1, [r2, r3, lsl #2]
     b60:	ldrb	r3, [r0, #1]
     b64:	ldrh	r0, [r0, #2]
     b68:	add	r7, r3, r8
     b6c:	cmp	r7, r4
     b70:	bhi	b38 <coda_inflate+0x738>
     b74:	ldr	ip, [sp, #44]	; 0x2c
     b78:	ldr	lr, [sp, #36]	; 0x24
     b7c:	lsr	r6, r6, r8
     b80:	sub	r4, r4, ip
     b84:	cmp	r1, #0
     b88:	lsr	r6, r6, r3
     b8c:	sub	r4, r4, r3
     b90:	moveq	r3, #25
     b94:	str	r7, [lr, #3012]	; 0xbc4
     b98:	str	r0, [r9, #64]	; 0x40
     b9c:	streq	r3, [r9]
     ba0:	beq	a08 <coda_inflate+0x608>
     ba4:	tst	r1, #32
     ba8:	beq	181c <coda_inflate+0x141c>
     bac:	mvn	r2, #0
     bb0:	mov	r3, #11
     bb4:	str	r2, [lr, #3012]	; 0xbc4
     bb8:	mov	r8, r6
     bbc:	str	r3, [r9]
     bc0:	b	c58 <coda_inflate+0x858>
     bc4:	ldr	r3, [sp, #28]
     bc8:	ldr	r2, [pc, #2280]	; 14b8 <coda_inflate+0x10b8>
     bcc:	cmp	r3, #6
     bd0:	mov	r3, #9
     bd4:	sub	r1, r2, #2048	; 0x800
     bd8:	str	r2, [r9, #80]	; 0x50
     bdc:	str	r3, [r9, #84]	; 0x54
     be0:	mov	r2, #5
     be4:	mov	r3, #19
     be8:	str	r1, [r9, #76]	; 0x4c
     bec:	str	r2, [r9, #88]	; 0x58
     bf0:	str	r3, [r9]
     bf4:	beq	1c6c <coda_inflate+0x186c>
     bf8:	lsr	r6, r8, #3
     bfc:	sub	r4, r4, #3
     c00:	mov	r3, #20
     c04:	str	r3, [r9]
     c08:	b	a38 <coda_inflate+0x638>
     c0c:	ldr	r3, [r9, #16]
     c10:	tst	r3, #512	; 0x200
     c14:	bne	1010 <coda_inflate+0xc10>
     c18:	ldr	r2, [r9, #32]
     c1c:	mov	r8, r6
     c20:	cmp	r2, #0
     c24:	asrne	r3, r3, #9
     c28:	andne	r3, r3, #1
     c2c:	movne	r1, #1
     c30:	strne	r3, [r2, #44]	; 0x2c
     c34:	strne	r1, [r2, #48]	; 0x30
     c38:	mov	r2, #0
     c3c:	mov	r1, r2
     c40:	mov	r0, r2
     c44:	bl	0 <coda_crc32>
     c48:	mov	r3, #11
     c4c:	str	r0, [r9, #24]
     c50:	str	r0, [fp, #48]	; 0x30
     c54:	str	r3, [r9]
     c58:	ldr	r3, [sp, #28]
     c5c:	sub	r3, r3, #5
     c60:	cmp	r3, #1
     c64:	bhi	e84 <coda_inflate+0xa84>
     c68:	mov	r6, r8
     c6c:	mov	r7, #0
     c70:	b	894 <coda_inflate+0x494>
     c74:	cmp	r3, #0
     c78:	beq	440 <coda_inflate+0x40>
     c7c:	mvn	r7, #1
     c80:	b	9e8 <coda_inflate+0x5e8>
     c84:	cmp	r5, #0
     c88:	beq	890 <coda_inflate+0x490>
     c8c:	ldrb	r3, [sl], #1
     c90:	sub	r5, r5, #1
     c94:	add	r6, r6, r3, lsl r4
     c98:	add	r4, r4, #8
     c9c:	cmp	r4, r1
     ca0:	bcc	c84 <coda_inflate+0x884>
     ca4:	mvn	r3, #0
     ca8:	ldr	r2, [r9, #68]	; 0x44
     cac:	bic	r3, r6, r3, lsl r1
     cb0:	add	lr, r9, #4096	; 0x1000
     cb4:	add	r2, r2, r3
     cb8:	ldr	r3, [lr, #3012]	; 0xbc4
     cbc:	lsr	r6, r6, r1
     cc0:	sub	r4, r4, r1
     cc4:	add	r1, r3, r1
     cc8:	str	r2, [r9, #68]	; 0x44
     ccc:	str	r1, [lr, #3012]	; 0xbc4
     cd0:	mov	r3, #24
     cd4:	str	r3, [r9]
     cd8:	ldr	r2, [sp, #12]
     cdc:	cmp	r2, #0
     ce0:	beq	c6c <coda_inflate+0x86c>
     ce4:	ldr	r1, [sp, #20]
     ce8:	ldr	r3, [r9, #68]	; 0x44
     cec:	sub	ip, r1, r2
     cf0:	cmp	ip, r3
     cf4:	bcs	1368 <coda_inflate+0xf68>
     cf8:	ldr	r2, [r9, #44]	; 0x2c
     cfc:	sub	ip, r3, ip
     d00:	cmp	ip, r2
     d04:	bls	15bc <coda_inflate+0x11bc>
     d08:	add	lr, r9, #4096	; 0x1000
     d0c:	ldr	r3, [lr, #3008]	; 0xbc0
     d10:	cmp	r3, #0
     d14:	beq	15bc <coda_inflate+0x11bc>
     d18:	ldr	r2, [pc, #1948]	; 14bc <coda_inflate+0x10bc>
     d1c:	mov	r3, #29
     d20:	str	r2, [fp, #24]
     d24:	str	r3, [r9]
     d28:	b	1034 <coda_inflate+0xc34>
     d2c:	ldr	r1, [r9, #72]	; 0x48
     d30:	cmp	r1, #0
     d34:	bne	1434 <coda_inflate+0x1034>
     d38:	ldr	r3, [r9, #64]	; 0x40
     d3c:	add	lr, r9, #4096	; 0x1000
     d40:	mov	r2, #22
     d44:	str	r3, [lr, #3016]	; 0xbc8
     d48:	str	r2, [r9]
     d4c:	ldr	r3, [r9, #88]	; 0x58
     d50:	mvn	lr, #0
     d54:	ldr	r2, [r9, #80]	; 0x50
     d58:	mvn	lr, lr, lsl r3
     d5c:	and	r3, r6, lr
     d60:	add	r0, r2, r3, lsl #2
     d64:	ldrb	r1, [r2, r3, lsl #2]
     d68:	ldrb	r3, [r0, #1]
     d6c:	ldrh	r0, [r0, #2]
     d70:	cmp	r4, r3
     d74:	mov	ip, r3
     d78:	bcs	dc0 <coda_inflate+0x9c0>
     d7c:	cmp	r5, #0
     d80:	bne	d90 <coda_inflate+0x990>
     d84:	b	c6c <coda_inflate+0x86c>
     d88:	cmp	r5, #0
     d8c:	beq	890 <coda_inflate+0x490>
     d90:	ldrb	r3, [sl], #1
     d94:	sub	r5, r5, #1
     d98:	add	r6, r6, r3, lsl r4
     d9c:	and	r3, r6, lr
     da0:	add	r4, r4, #8
     da4:	add	r0, r2, r3, lsl #2
     da8:	ldrb	r1, [r2, r3, lsl #2]
     dac:	ldrb	r3, [r0, #1]
     db0:	ldrh	r0, [r0, #2]
     db4:	cmp	r3, r4
     db8:	mov	ip, r3
     dbc:	bhi	d88 <coda_inflate+0x988>
     dc0:	tst	r1, #240	; 0xf0
     dc4:	bne	15f0 <coda_inflate+0x11f0>
     dc8:	add	r1, r1, r3
     dcc:	mvn	r8, #0
     dd0:	mov	r7, r3
     dd4:	mvn	r8, r8, lsl r1
     dd8:	and	r3, r8, r6
     ddc:	str	r0, [sp, #36]	; 0x24
     de0:	add	r3, r0, r3, lsr r7
     de4:	add	r0, r2, r3, lsl #2
     de8:	ldrb	r1, [r2, r3, lsl #2]
     dec:	ldrb	r3, [r0, #1]
     df0:	ldrh	r0, [r0, #2]
     df4:	add	lr, r7, r3
     df8:	cmp	lr, r4
     dfc:	bls	e54 <coda_inflate+0xa54>
     e00:	cmp	r5, #0
     e04:	beq	c6c <coda_inflate+0x86c>
     e08:	ldr	lr, [sp, #36]	; 0x24
     e0c:	str	ip, [sp, #36]	; 0x24
     e10:	b	e1c <coda_inflate+0xa1c>
     e14:	cmp	r5, #0
     e18:	beq	890 <coda_inflate+0x490>
     e1c:	ldrb	r3, [sl], #1
     e20:	sub	r5, r5, #1
     e24:	add	r6, r6, r3, lsl r4
     e28:	and	r3, r6, r8
     e2c:	add	r4, r4, #8
     e30:	add	r3, lr, r3, lsr r7
     e34:	add	r0, r2, r3, lsl #2
     e38:	ldrb	r1, [r2, r3, lsl #2]
     e3c:	ldrb	r3, [r0, #1]
     e40:	ldrh	r0, [r0, #2]
     e44:	add	ip, r7, r3
     e48:	cmp	ip, r4
     e4c:	bhi	e14 <coda_inflate+0xa14>
     e50:	ldr	ip, [sp, #36]	; 0x24
     e54:	add	lr, r9, #4096	; 0x1000
     e58:	lsr	r6, r6, r7
     e5c:	ldr	r2, [lr, #3012]	; 0xbc4
     e60:	sub	r4, r4, ip
     e64:	add	r7, r7, r2
     e68:	b	15f8 <coda_inflate+0x11f8>
     e6c:	ldr	r1, [r9, #8]
     e70:	cmp	r1, #0
     e74:	bne	1498 <coda_inflate+0x1098>
     e78:	mov	r8, r6
     e7c:	mov	r3, #12
     e80:	str	r3, [r9]
     e84:	ldr	r0, [r9, #4]
     e88:	cmp	r0, #0
     e8c:	bne	f28 <coda_inflate+0xb28>
     e90:	cmp	r4, #2
     e94:	bhi	eb4 <coda_inflate+0xab4>
     e98:	cmp	r5, #0
     e9c:	beq	1a40 <coda_inflate+0x1640>
     ea0:	ldrb	r3, [sl]
     ea4:	sub	r5, r5, #1
     ea8:	add	sl, sl, #1
     eac:	add	r8, r8, r3, lsl r4
     eb0:	add	r4, r4, #8
     eb4:	lsr	r3, r8, #1
     eb8:	and	r3, r3, #3
     ebc:	and	r2, r8, #1
     ec0:	cmp	r3, #2
     ec4:	str	r2, [r9, #4]
     ec8:	beq	1640 <coda_inflate+0x1240>
     ecc:	cmp	r3, #3
     ed0:	beq	17b4 <coda_inflate+0x13b4>
     ed4:	cmp	r3, #1
     ed8:	beq	bc4 <coda_inflate+0x7c4>
     edc:	lsr	r6, r8, #3
     ee0:	sub	r4, r4, #3
     ee4:	mov	r3, #13
     ee8:	str	r3, [r9]
     eec:	and	r3, r4, #7
     ef0:	bic	r4, r4, #7
     ef4:	cmp	r4, #31
     ef8:	lsr	r6, r6, r3
     efc:	bls	f1c <coda_inflate+0xb1c>
     f00:	b	16e0 <coda_inflate+0x12e0>
     f04:	ldrb	r3, [sl], #1
     f08:	sub	r5, r5, #1
     f0c:	add	r6, r6, r3, lsl r4
     f10:	add	r4, r4, #8
     f14:	cmp	r4, #31
     f18:	bhi	16e0 <coda_inflate+0x12e0>
     f1c:	cmp	r5, #0
     f20:	bne	f04 <coda_inflate+0xb04>
     f24:	b	890 <coda_inflate+0x490>
     f28:	and	r6, r4, #7
     f2c:	bic	r4, r4, #7
     f30:	lsr	r6, r8, r6
     f34:	mov	r3, #26
     f38:	str	r3, [r9]
     f3c:	ldr	r3, [r9, #8]
     f40:	cmp	r3, #0
     f44:	bne	f70 <coda_inflate+0xb70>
     f48:	mov	r3, #28
     f4c:	str	r3, [r9]
     f50:	mov	r7, #1
     f54:	b	894 <coda_inflate+0x494>
     f58:	cmp	r5, #0
     f5c:	beq	890 <coda_inflate+0x490>
     f60:	ldrb	r3, [sl], #1
     f64:	sub	r5, r5, #1
     f68:	add	r6, r6, r3, lsl r4
     f6c:	add	r4, r4, #8
     f70:	cmp	r4, #31
     f74:	bls	f58 <coda_inflate+0xb58>
     f78:	ldr	r2, [sp, #20]
     f7c:	ldr	r0, [sp, #12]
     f80:	ldr	r1, [fp, #20]
     f84:	ldr	r3, [r9, #28]
     f88:	sub	r2, r2, r0
     f8c:	add	r1, r1, r2
     f90:	add	r3, r3, r2
     f94:	cmp	r2, #0
     f98:	str	r1, [fp, #20]
     f9c:	str	r3, [r9, #28]
     fa0:	bne	1878 <coda_inflate+0x1478>
     fa4:	ldr	r0, [r9, #24]
     fa8:	ldr	r3, [r9, #16]
     fac:	cmp	r3, #0
     fb0:	lsleq	r3, r6, #24
     fb4:	lsreq	r1, r6, #8
     fb8:	addeq	r3, r3, r6, lsr #24
     fbc:	lsleq	r2, r6, #8
     fc0:	andeq	r1, r1, #65280	; 0xff00
     fc4:	addeq	r3, r3, r1
     fc8:	andeq	r2, r2, #16711680	; 0xff0000
     fcc:	addeq	r3, r3, r2
     fd0:	movne	r3, r6
     fd4:	cmp	r3, r0
     fd8:	beq	1a4c <coda_inflate+0x164c>
     fdc:	ldr	r2, [pc, #1244]	; 14c0 <coda_inflate+0x10c0>
     fe0:	mov	r3, #29
     fe4:	str	r2, [fp, #24]
     fe8:	str	r3, [r9]
     fec:	ldr	r3, [sp, #12]
     ff0:	str	r3, [sp, #20]
     ff4:	b	1034 <coda_inflate+0xc34>
     ff8:	cmp	r5, #0
     ffc:	beq	890 <coda_inflate+0x490>
    1000:	ldrb	r2, [sl], #1
    1004:	sub	r5, r5, #1
    1008:	add	r6, r6, r2, lsl r4
    100c:	add	r4, r4, #8
    1010:	cmp	r4, #15
    1014:	bls	ff8 <coda_inflate+0xbf8>
    1018:	ldrh	r2, [r9, #24]
    101c:	cmp	r2, r6
    1020:	beq	1734 <coda_inflate+0x1334>
    1024:	ldr	r2, [pc, #1176]	; 14c4 <coda_inflate+0x10c4>
    1028:	mov	r3, #29
    102c:	str	r2, [fp, #24]
    1030:	str	r3, [r9]
    1034:	mvn	r7, #2
    1038:	b	894 <coda_inflate+0x494>
    103c:	ldr	r7, [r9, #64]	; 0x40
    1040:	mov	r3, #15
    1044:	str	r3, [r9]
    1048:	cmp	r7, #0
    104c:	beq	10ac <coda_inflate+0xcac>
    1050:	cmp	r5, r7
    1054:	ldr	r8, [sp, #12]
    1058:	movcc	r7, r5
    105c:	cmp	r7, r8
    1060:	movcs	r7, r8
    1064:	cmp	r7, #0
    1068:	beq	894 <coda_inflate+0x494>
    106c:	mov	r1, sl
    1070:	mov	r2, r7
    1074:	ldr	r0, [sp, #16]
    1078:	bl	0 <memcpy>
    107c:	ldr	r3, [r9, #64]	; 0x40
    1080:	ldr	r2, [sp, #16]
    1084:	sub	r3, r3, r7
    1088:	sub	r1, r8, r7
    108c:	add	r2, r2, r7
    1090:	str	r3, [r9, #64]	; 0x40
    1094:	sub	r5, r5, r7
    1098:	str	r1, [sp, #12]
    109c:	add	sl, sl, r7
    10a0:	str	r2, [sp, #16]
    10a4:	ldr	r3, [r9]
    10a8:	b	478 <coda_inflate+0x78>
    10ac:	mov	r3, #11
    10b0:	mov	r8, r6
    10b4:	str	r3, [r9]
    10b8:	b	c58 <coda_inflate+0x858>
    10bc:	ldr	r7, [r9, #64]	; 0x40
    10c0:	b	1048 <coda_inflate+0xc48>
    10c4:	ldr	r3, [r9, #104]	; 0x68
    10c8:	ldr	r2, [r9, #92]	; 0x5c
    10cc:	cmp	r3, r2
    10d0:	bcs	193c <coda_inflate+0x153c>
    10d4:	add	r0, r2, #1
    10d8:	ldr	r2, [pc, #1048]	; 14f8 <coda_inflate+0x10f8>
    10dc:	cmp	r4, #2
    10e0:	add	ip, r3, #1
    10e4:	add	r1, r2, r3, lsl #1
    10e8:	bhi	1140 <coda_inflate+0xd40>
    10ec:	cmp	r5, #0
    10f0:	beq	890 <coda_inflate+0x490>
    10f4:	ldrb	r3, [sl]
    10f8:	sub	r5, r5, #1
    10fc:	add	r2, sl, #1
    1100:	add	r6, r6, r3, lsl r4
    1104:	add	r4, r4, #8
    1108:	ldrh	r3, [r1], #2
    110c:	add	lr, ip, #1
    1110:	and	r7, r6, #7
    1114:	cmp	lr, r0
    1118:	add	r3, r9, r3, lsl #1
    111c:	str	ip, [r9, #104]	; 0x68
    1120:	mov	sl, r2
    1124:	sub	r4, r4, #3
    1128:	strh	r7, [r3, #112]	; 0x70
    112c:	lsr	r6, r6, #3
    1130:	beq	1938 <coda_inflate+0x1538>
    1134:	cmp	r4, #2
    1138:	mov	ip, lr
    113c:	bls	10ec <coda_inflate+0xcec>
    1140:	mov	r2, sl
    1144:	b	1108 <coda_inflate+0xd08>
    1148:	ldr	r3, [r9, #16]
    114c:	ands	r2, r3, #4096	; 0x1000
    1150:	beq	11d4 <coda_inflate+0xdd4>
    1154:	cmp	r5, #0
    1158:	beq	890 <coda_inflate+0x490>
    115c:	sub	r2, sl, #1
    1160:	mov	r7, #0
    1164:	ldr	r3, [r9, #32]
    1168:	add	r7, r7, #1
    116c:	cmp	r3, #0
    1170:	ldrb	r8, [r2, #1]!
    1174:	beq	119c <coda_inflate+0xd9c>
    1178:	ldr	r1, [r3, #36]	; 0x24
    117c:	cmp	r1, #0
    1180:	beq	119c <coda_inflate+0xd9c>
    1184:	ldr	r0, [r3, #40]	; 0x28
    1188:	ldr	r3, [r9, #64]	; 0x40
    118c:	cmp	r3, r0
    1190:	add	r0, r3, #1
    1194:	strcc	r0, [r9, #64]	; 0x40
    1198:	strbcc	r8, [r1, r3]
    119c:	cmp	r8, #0
    11a0:	cmpne	r5, r7
    11a4:	bhi	1164 <coda_inflate+0xd64>
    11a8:	ldr	r3, [r9, #16]
    11ac:	tst	r3, #512	; 0x200
    11b0:	bne	1654 <coda_inflate+0x1254>
    11b4:	cmp	r8, #0
    11b8:	sub	r5, r5, r7
    11bc:	add	sl, sl, r7
    11c0:	bne	c6c <coda_inflate+0x86c>
    11c4:	ldr	r3, [r9, #16]
    11c8:	mov	r2, #8
    11cc:	str	r2, [r9]
    11d0:	b	c10 <coda_inflate+0x810>
    11d4:	ldr	r1, [r9, #32]
    11d8:	cmp	r1, #0
    11dc:	strne	r2, [r1, #36]	; 0x24
    11e0:	b	11c8 <coda_inflate+0xdc8>
    11e4:	ldr	r3, [r9, #8]
    11e8:	cmp	r3, #0
    11ec:	beq	f48 <coda_inflate+0xb48>
    11f0:	ldr	r3, [r9, #16]
    11f4:	cmp	r3, #0
    11f8:	beq	f48 <coda_inflate+0xb48>
    11fc:	cmp	r4, #31
    1200:	bhi	1230 <coda_inflate+0xe30>
    1204:	cmp	r5, #0
    1208:	bne	1218 <coda_inflate+0xe18>
    120c:	b	890 <coda_inflate+0x490>
    1210:	cmp	r5, #0
    1214:	beq	c6c <coda_inflate+0x86c>
    1218:	ldrb	r3, [sl], #1
    121c:	sub	r5, r5, #1
    1220:	add	r6, r6, r3, lsl r4
    1224:	add	r4, r4, #8
    1228:	cmp	r4, #31
    122c:	bls	1210 <coda_inflate+0xe10>
    1230:	ldr	r3, [r9, #28]
    1234:	cmp	r3, r6
    1238:	beq	1b68 <coda_inflate+0x1768>
    123c:	ldr	r2, [pc, #644]	; 14c8 <coda_inflate+0x10c8>
    1240:	mov	r3, #29
    1244:	str	r2, [fp, #24]
    1248:	str	r3, [r9]
    124c:	b	1034 <coda_inflate+0xc34>
    1250:	ldr	r1, [r9, #72]	; 0x48
    1254:	cmp	r1, #0
    1258:	beq	cd0 <coda_inflate+0x8d0>
    125c:	b	c9c <coda_inflate+0x89c>
    1260:	ldr	r3, [r9, #16]
    1264:	tst	r3, #1024	; 0x400
    1268:	bne	654 <coda_inflate+0x254>
    126c:	ldr	r2, [r9, #32]
    1270:	cmp	r2, #0
    1274:	movne	r1, #0
    1278:	strne	r1, [r2, #16]
    127c:	mov	r2, #5
    1280:	str	r2, [r9]
    1284:	tst	r3, #1024	; 0x400
    1288:	beq	12b0 <coda_inflate+0xeb0>
    128c:	ldr	r2, [r9, #64]	; 0x40
    1290:	cmp	r5, r2
    1294:	movcc	r7, r5
    1298:	movcs	r7, r2
    129c:	cmp	r7, #0
    12a0:	bne	13d0 <coda_inflate+0xfd0>
    12a4:	cmp	r2, #0
    12a8:	bne	c6c <coda_inflate+0x86c>
    12ac:	ldr	r3, [r9, #16]
    12b0:	mov	r1, #0
    12b4:	mov	r2, #6
    12b8:	str	r1, [r9, #64]	; 0x40
    12bc:	str	r2, [r9]
    12c0:	ands	r1, r3, #2048	; 0x800
    12c4:	beq	1350 <coda_inflate+0xf50>
    12c8:	cmp	r5, #0
    12cc:	beq	890 <coda_inflate+0x490>
    12d0:	sub	r2, sl, #1
    12d4:	mov	r7, #0
    12d8:	ldr	r3, [r9, #32]
    12dc:	add	r7, r7, #1
    12e0:	cmp	r3, #0
    12e4:	ldrb	r8, [r2, #1]!
    12e8:	beq	1310 <coda_inflate+0xf10>
    12ec:	ldr	r1, [r3, #28]
    12f0:	cmp	r1, #0
    12f4:	beq	1310 <coda_inflate+0xf10>
    12f8:	ldr	r0, [r3, #32]
    12fc:	ldr	r3, [r9, #64]	; 0x40
    1300:	cmp	r3, r0
    1304:	add	r0, r3, #1
    1308:	strcc	r0, [r9, #64]	; 0x40
    130c:	strbcc	r8, [r1, r3]
    1310:	cmp	r8, #0
    1314:	cmpne	r5, r7
    1318:	bhi	12d8 <coda_inflate+0xed8>
    131c:	ldr	r3, [r9, #16]
    1320:	tst	r3, #512	; 0x200
    1324:	bne	1708 <coda_inflate+0x1308>
    1328:	cmp	r8, #0
    132c:	sub	r5, r5, r7
    1330:	add	sl, sl, r7
    1334:	bne	c6c <coda_inflate+0x86c>
    1338:	ldr	r3, [r9, #16]
    133c:	mov	r1, #0
    1340:	mov	r2, #7
    1344:	str	r1, [r9, #64]	; 0x40
    1348:	str	r2, [r9]
    134c:	b	114c <coda_inflate+0xd4c>
    1350:	ldr	r2, [r9, #32]
    1354:	cmp	r2, #0
    1358:	strne	r1, [r2, #28]
    135c:	b	133c <coda_inflate+0xf3c>
    1360:	ldr	r3, [r9, #16]
    1364:	b	12c0 <coda_inflate+0xec0>
    1368:	ldr	ip, [r9, #64]	; 0x40
    136c:	ldr	r2, [sp, #16]
    1370:	mov	r1, ip
    1374:	sub	r3, r2, r3
    1378:	ldr	r2, [sp, #12]
    137c:	cmp	ip, r2
    1380:	movcs	ip, r2
    1384:	sub	r2, r2, ip
    1388:	str	r2, [sp, #12]
    138c:	ldr	r2, [sp, #16]
    1390:	add	r0, r3, ip
    1394:	sub	r2, r2, #1
    1398:	sub	r1, r1, ip
    139c:	str	r1, [r9, #64]	; 0x40
    13a0:	ldrb	r1, [r3], #1
    13a4:	cmp	r0, r3
    13a8:	strb	r1, [r2, #1]!
    13ac:	bne	13a0 <coda_inflate+0xfa0>
    13b0:	ldr	r2, [sp, #16]
    13b4:	ldr	r3, [r9, #64]	; 0x40
    13b8:	add	r2, r2, ip
    13bc:	cmp	r3, #0
    13c0:	str	r2, [sp, #16]
    13c4:	beq	c00 <coda_inflate+0x800>
    13c8:	ldr	r3, [r9]
    13cc:	b	478 <coda_inflate+0x78>
    13d0:	ldr	r1, [r9, #32]
    13d4:	cmp	r1, #0
    13d8:	beq	1414 <coda_inflate+0x1014>
    13dc:	ldr	r0, [r1, #16]
    13e0:	cmp	r0, #0
    13e4:	beq	1414 <coda_inflate+0x1014>
    13e8:	ldr	r3, [r1, #20]
    13ec:	ldr	r1, [r1, #24]
    13f0:	sub	r2, r3, r2
    13f4:	add	r3, r7, r2
    13f8:	cmp	r3, r1
    13fc:	add	r0, r0, r2
    1400:	subhi	r2, r1, r2
    1404:	movls	r2, r7
    1408:	mov	r1, sl
    140c:	bl	0 <memcpy>
    1410:	ldr	r3, [r9, #16]
    1414:	tst	r3, #512	; 0x200
    1418:	bne	17d0 <coda_inflate+0x13d0>
    141c:	ldr	r2, [r9, #64]	; 0x40
    1420:	sub	r5, r5, r7
    1424:	sub	r2, r2, r7
    1428:	add	sl, sl, r7
    142c:	str	r2, [r9, #64]	; 0x40
    1430:	b	12a4 <coda_inflate+0xea4>
    1434:	cmp	r4, r1
    1438:	bcs	1468 <coda_inflate+0x1068>
    143c:	cmp	r5, #0
    1440:	bne	1450 <coda_inflate+0x1050>
    1444:	b	c6c <coda_inflate+0x86c>
    1448:	cmp	r5, #0
    144c:	beq	890 <coda_inflate+0x490>
    1450:	ldrb	r3, [sl], #1
    1454:	sub	r5, r5, #1
    1458:	add	r6, r6, r3, lsl r4
    145c:	add	r4, r4, #8
    1460:	cmp	r4, r1
    1464:	bcc	1448 <coda_inflate+0x1048>
    1468:	add	lr, r9, #4096	; 0x1000
    146c:	mvn	r3, #0
    1470:	ldr	r0, [r9, #64]	; 0x40
    1474:	bic	r3, r6, r3, lsl r1
    1478:	ldr	r2, [lr, #3012]	; 0xbc4
    147c:	lsr	r6, r6, r1
    1480:	sub	r4, r4, r1
    1484:	add	r3, r3, r0
    1488:	add	r1, r2, r1
    148c:	str	r3, [r9, #64]	; 0x40
    1490:	str	r1, [lr, #3012]	; 0xbc4
    1494:	b	d40 <coda_inflate+0x940>
    1498:	cmp	r4, #15
    149c:	bhi	1b3c <coda_inflate+0x173c>
    14a0:	cmp	r5, #0
    14a4:	beq	c6c <coda_inflate+0x86c>
    14a8:	mov	r3, r6
    14ac:	b	1520 <coda_inflate+0x1120>
    14b0:	.word	0x0000011e
    14b4:	.word	0x00000101
    14b8:	.word	0x00000800
    14bc:	.word	0x00000198
    14c0:	.word	0x000001b8
    14c4:	.word	0x00000064
    14c8:	.word	0x000001d0
    14cc:	.word	0x00008b1f
    14d0:	.word	0x08421085
    14d4:	.word	0x00000018
    14d8:	.word	0x00000180
    14dc:	.word	0x0000ffff
    14e0:	.word	0x0000008c
    14e4:	.word	0x000000ac
    14e8:	.word	0x00000000
    14ec:	.word	0x00000078
    14f0:	.word	0x00000164
    14f4:	.word	0x00000048
    14f8:	.word	0x00000880
    14fc:	.word	0x000008a6
    1500:	.word	0x000000d0
    1504:	.word	0x00000108
    1508:	.word	0x00000034
    150c:	.word	0x00000130
    1510:	.word	0x000000ec
    1514:	.word	0x0000014c
    1518:	cmp	r5, #0
    151c:	beq	1790 <coda_inflate+0x1390>
    1520:	ldrb	r2, [sl], #1
    1524:	sub	r5, r5, #1
    1528:	add	r3, r3, r2, lsl r4
    152c:	add	r4, r4, #8
    1530:	cmp	r4, #15
    1534:	bls	1518 <coda_inflate+0x1118>
    1538:	ldr	r2, [pc, #-116]	; 14cc <coda_inflate+0x10cc>
    153c:	sub	r2, r3, r2
    1540:	clz	r2, r2
    1544:	lsr	r2, r2, #5
    1548:	ands	r2, r2, r1, lsr #1
    154c:	bne	6ac <coda_inflate+0x2ac>
    1550:	ldr	r0, [r9, #32]
    1554:	str	r2, [r9, #16]
    1558:	cmp	r0, #0
    155c:	mvnne	r2, #0
    1560:	strne	r2, [r0, #48]	; 0x30
    1564:	tst	r1, #1
    1568:	beq	179c <coda_inflate+0x139c>
    156c:	ldr	r2, [pc, #-152]	; 14dc <coda_inflate+0x10dc>
    1570:	ldr	r1, [pc, #-168]	; 14d0 <coda_inflate+0x10d0>
    1574:	and	r2, r2, r3, lsl #8
    1578:	add	r2, r2, r3, lsr #8
    157c:	umull	r0, r1, r1, r2
    1580:	sub	r6, r2, r1
    1584:	add	r1, r1, r6, lsr #1
    1588:	lsr	r6, r1, #4
    158c:	rsb	r6, r6, r6, lsl #5
    1590:	subs	r6, r2, r6
    1594:	bne	179c <coda_inflate+0x139c>
    1598:	and	r2, r3, #15
    159c:	cmp	r2, #8
    15a0:	beq	1b74 <coda_inflate+0x1774>
    15a4:	ldr	r1, [pc, #-216]	; 14d4 <coda_inflate+0x10d4>
    15a8:	mov	r2, #29
    15ac:	str	r1, [fp, #24]
    15b0:	mov	r6, r3
    15b4:	str	r2, [r9]
    15b8:	b	1034 <coda_inflate+0xc34>
    15bc:	ldr	r2, [r9, #48]	; 0x30
    15c0:	ldr	r1, [r9, #64]	; 0x40
    15c4:	cmp	ip, r2
    15c8:	subhi	ip, ip, r2
    15cc:	ldrhi	r3, [r9, #40]	; 0x28
    15d0:	ldrhi	r2, [r9, #52]	; 0x34
    15d4:	ldrls	r3, [r9, #52]	; 0x34
    15d8:	subhi	r3, r3, ip
    15dc:	subls	r2, r2, ip
    15e0:	cmp	ip, r1
    15e4:	add	r3, r3, r2
    15e8:	movcs	ip, r1
    15ec:	b	1378 <coda_inflate+0xf78>
    15f0:	add	lr, r9, #4096	; 0x1000
    15f4:	ldr	r7, [lr, #3012]	; 0xbc4
    15f8:	add	r7, r7, r3
    15fc:	tst	r1, #64	; 0x40
    1600:	str	r7, [lr, #3012]	; 0xbc4
    1604:	lsr	r6, r6, r3
    1608:	sub	r4, r4, r3
    160c:	beq	1740 <coda_inflate+0x1340>
    1610:	ldr	r2, [pc, #-320]	; 14d8 <coda_inflate+0x10d8>
    1614:	mov	r3, #29
    1618:	str	r2, [fp, #24]
    161c:	str	r3, [r9]
    1620:	b	1034 <coda_inflate+0xc34>
    1624:	add	r1, r9, lr, lsl #1
    1628:	add	lr, lr, #1
    162c:	str	lr, [r9, #104]	; 0x68
    1630:	lsr	r6, r6, ip
    1634:	sub	r4, r4, ip
    1638:	strh	r3, [r1, #112]	; 0x70
    163c:	b	7dc <coda_inflate+0x3dc>
    1640:	mov	r3, #16
    1644:	lsr	r6, r8, #3
    1648:	sub	r4, r4, #3
    164c:	str	r3, [r9]
    1650:	b	518 <coda_inflate+0x118>
    1654:	mov	r2, r7
    1658:	mov	r1, sl
    165c:	ldr	r0, [r9, #24]
    1660:	bl	0 <coda_crc32>
    1664:	str	r0, [r9, #24]
    1668:	b	11b4 <coda_inflate+0xdb4>
    166c:	ldr	r3, [sp, #16]
    1670:	str	sl, [fp]
    1674:	str	r3, [fp, #12]
    1678:	ldr	r3, [sp, #12]
    167c:	str	r5, [fp, #4]
    1680:	str	r3, [fp, #16]
    1684:	ldr	r1, [sp, #20]
    1688:	str	r6, [r9, #56]	; 0x38
    168c:	str	r4, [r9, #60]	; 0x3c
    1690:	mov	r0, fp
    1694:	bl	0 <coda_inflate_fast>
    1698:	ldr	r2, [fp, #12]
    169c:	ldr	r3, [r9]
    16a0:	str	r2, [sp, #16]
    16a4:	ldr	r2, [fp, #16]
    16a8:	cmp	r3, #11
    16ac:	str	r2, [sp, #12]
    16b0:	ldr	sl, [fp]
    16b4:	ldr	r5, [fp, #4]
    16b8:	ldr	r6, [r9, #56]	; 0x38
    16bc:	ldr	r4, [r9, #60]	; 0x3c
    16c0:	bne	478 <coda_inflate+0x78>
    16c4:	add	lr, r9, #4096	; 0x1000
    16c8:	mvn	r3, #0
    16cc:	mov	r8, r6
    16d0:	str	r3, [lr, #3012]	; 0xbc4
    16d4:	b	c58 <coda_inflate+0x858>
    16d8:	mov	r7, r3
    16dc:	b	b84 <coda_inflate+0x784>
    16e0:	ldr	r3, [pc, #-524]	; 14dc <coda_inflate+0x10dc>
    16e4:	and	r7, r6, r3
    16e8:	eor	r3, r3, r6, lsr #16
    16ec:	cmp	r7, r3
    16f0:	beq	1838 <coda_inflate+0x1438>
    16f4:	ldr	r2, [pc, #-540]	; 14e0 <coda_inflate+0x10e0>
    16f8:	mov	r3, #29
    16fc:	str	r2, [fp, #24]
    1700:	str	r3, [r9]
    1704:	b	1034 <coda_inflate+0xc34>
    1708:	mov	r2, r7
    170c:	mov	r1, sl
    1710:	ldr	r0, [r9, #24]
    1714:	bl	0 <coda_crc32>
    1718:	str	r0, [r9, #24]
    171c:	b	1328 <coda_inflate+0xf28>
    1720:	ldr	r2, [pc, #-580]	; 14e4 <coda_inflate+0x10e4>
    1724:	mov	r3, #29
    1728:	str	r2, [fp, #24]
    172c:	str	r3, [r9]
    1730:	b	1034 <coda_inflate+0xc34>
    1734:	mov	r4, #0
    1738:	mov	r6, r4
    173c:	b	c18 <coda_inflate+0x818>
    1740:	and	r1, r1, #15
    1744:	mov	r3, #23
    1748:	str	r1, [r9, #72]	; 0x48
    174c:	str	r0, [r9, #68]	; 0x44
    1750:	str	r3, [r9]
    1754:	b	1254 <coda_inflate+0xe54>
    1758:	mov	r3, #30
    175c:	str	r3, [r9]
    1760:	mvn	r7, #3
    1764:	b	9e8 <coda_inflate+0x5e8>
    1768:	lsr	r3, r6, #8
    176c:	mov	r2, #2
    1770:	add	r1, sp, #52	; 0x34
    1774:	ldr	r0, [r9, #24]
    1778:	strb	r3, [sp, #53]	; 0x35
    177c:	strb	r6, [sp, #52]	; 0x34
    1780:	bl	0 <coda_crc32>
    1784:	ldr	r3, [r9, #16]
    1788:	str	r0, [r9, #24]
    178c:	b	620 <coda_inflate+0x220>
    1790:	mov	r6, r3
    1794:	mov	r7, r5
    1798:	b	894 <coda_inflate+0x494>
    179c:	ldr	r1, [pc, #-700]	; 14e8 <coda_inflate+0x10e8>
    17a0:	mov	r2, #29
    17a4:	str	r1, [fp, #24]
    17a8:	mov	r6, r3
    17ac:	str	r2, [r9]
    17b0:	b	1034 <coda_inflate+0xc34>
    17b4:	ldr	r1, [pc, #-720]	; 14ec <coda_inflate+0x10ec>
    17b8:	mov	r3, #29
    17bc:	str	r1, [fp, #24]
    17c0:	lsr	r6, r8, #3
    17c4:	sub	r4, r4, #3
    17c8:	str	r3, [r9]
    17cc:	b	1034 <coda_inflate+0xc34>
    17d0:	mov	r2, r7
    17d4:	mov	r1, sl
    17d8:	ldr	r0, [r9, #24]
    17dc:	bl	0 <coda_crc32>
    17e0:	str	r0, [r9, #24]
    17e4:	b	141c <coda_inflate+0x101c>
    17e8:	lsr	r1, r6, #8
    17ec:	lsr	r0, r6, #16
    17f0:	lsr	r3, r6, #24
    17f4:	strb	r1, [sp, #53]	; 0x35
    17f8:	strb	r0, [sp, #54]	; 0x36
    17fc:	mov	r2, #4
    1800:	add	r1, sp, #52	; 0x34
    1804:	ldr	r0, [r9, #24]
    1808:	strb	r6, [sp, #52]	; 0x34
    180c:	strb	r3, [sp, #55]	; 0x37
    1810:	bl	0 <coda_crc32>
    1814:	str	r0, [r9, #24]
    1818:	b	5cc <coda_inflate+0x1cc>
    181c:	tst	r1, #64	; 0x40
    1820:	beq	1a2c <coda_inflate+0x162c>
    1824:	ldr	r2, [pc, #-828]	; 14f0 <coda_inflate+0x10f0>
    1828:	mov	r3, #29
    182c:	str	r2, [fp, #24]
    1830:	str	r3, [r9]
    1834:	b	1034 <coda_inflate+0xc34>
    1838:	ldr	r3, [sp, #28]
    183c:	mov	r4, #0
    1840:	cmp	r3, #6
    1844:	mov	r3, #14
    1848:	str	r7, [r9, #64]	; 0x40
    184c:	str	r3, [r9]
    1850:	beq	1c4c <coda_inflate+0x184c>
    1854:	mov	r6, r4
    1858:	b	1040 <coda_inflate+0xc40>
    185c:	tst	r6, #57344	; 0xe000
    1860:	beq	1a6c <coda_inflate+0x166c>
    1864:	ldr	r2, [pc, #-888]	; 14f4 <coda_inflate+0x10f4>
    1868:	mov	r3, #29
    186c:	str	r2, [fp, #24]
    1870:	str	r3, [r9]
    1874:	b	1034 <coda_inflate+0xc34>
    1878:	ldr	r3, [r9, #16]
    187c:	ldr	r0, [r9, #24]
    1880:	cmp	r3, #0
    1884:	ldr	r3, [sp, #16]
    1888:	sub	r1, r3, r2
    188c:	beq	1a9c <coda_inflate+0x169c>
    1890:	bl	0 <coda_crc32>
    1894:	str	r0, [r9, #24]
    1898:	str	r0, [fp, #48]	; 0x30
    189c:	b	fa8 <coda_inflate+0xba8>
    18a0:	add	r1, ip, #2
    18a4:	cmp	r1, r4
    18a8:	bhi	18c8 <coda_inflate+0x14c8>
    18ac:	b	1aa4 <coda_inflate+0x16a4>
    18b0:	ldrb	r3, [sl], #1
    18b4:	sub	r5, r5, #1
    18b8:	add	r6, r6, r3, lsl r4
    18bc:	add	r4, r4, #8
    18c0:	cmp	r4, r1
    18c4:	bcs	1aa4 <coda_inflate+0x16a4>
    18c8:	cmp	r5, #0
    18cc:	bne	18b0 <coda_inflate+0x14b0>
    18d0:	b	c6c <coda_inflate+0x86c>
    18d4:	lsr	r6, r6, ip
    18d8:	rsb	ip, ip, #-16777216	; 0xff000000
    18dc:	add	ip, ip, #16711680	; 0xff0000
    18e0:	add	ip, ip, #65280	; 0xff00
    18e4:	add	ip, ip, #249	; 0xf9
    18e8:	and	r3, r6, #127	; 0x7f
    18ec:	add	r4, r4, ip
    18f0:	add	r3, r3, #11
    18f4:	lsr	r6, r6, #7
    18f8:	mov	ip, #0
    18fc:	add	r0, r3, lr
    1900:	cmp	r0, r7
    1904:	bhi	1c58 <coda_inflate+0x1858>
    1908:	add	r1, lr, #55	; 0x37
    190c:	add	r1, r1, r3
    1910:	add	r3, r9, lr, lsl #1
    1914:	uxth	ip, ip
    1918:	add	r1, r9, r1, lsl #1
    191c:	add	r3, r3, #110	; 0x6e
    1920:	strh	ip, [r3, #2]!
    1924:	cmp	r3, r1
    1928:	bne	1920 <coda_inflate+0x1520>
    192c:	mov	lr, r0
    1930:	str	r0, [r9, #104]	; 0x68
    1934:	b	7dc <coda_inflate+0x3dc>
    1938:	mov	r3, ip
    193c:	cmp	r3, #18
    1940:	bhi	1974 <coda_inflate+0x1574>
    1944:	ldr	r2, [pc, #-1108]	; 14f8 <coda_inflate+0x10f8>
    1948:	mov	r1, #0
    194c:	add	r3, r2, r3, lsl #1
    1950:	ldrh	r2, [r3], #2
    1954:	ldr	r0, [pc, #-1120]	; 14fc <coda_inflate+0x10fc>
    1958:	add	r2, r2, #56	; 0x38
    195c:	cmp	r0, r3
    1960:	lsl	r2, r2, #1
    1964:	strh	r1, [r9, r2]
    1968:	bne	1950 <coda_inflate+0x1550>
    196c:	mov	r3, #19
    1970:	str	r3, [r9, #104]	; 0x68
    1974:	ldr	r0, [sp, #32]
    1978:	mov	r3, #7
    197c:	add	r1, r9, #752	; 0x2f0
    1980:	add	r2, r9, #84	; 0x54
    1984:	str	r0, [r9, #108]	; 0x6c
    1988:	str	r0, [r9, #76]	; 0x4c
    198c:	str	r3, [r9, #84]	; 0x54
    1990:	mov	r0, #0
    1994:	str	r1, [sp, #4]
    1998:	str	r2, [sp]
    199c:	add	r3, r9, #108	; 0x6c
    19a0:	mov	r2, #19
    19a4:	add	r1, r9, #112	; 0x70
    19a8:	bl	0 <coda_inflate_table>
    19ac:	cmp	r0, #0
    19b0:	beq	1ad0 <coda_inflate+0x16d0>
    19b4:	ldr	r2, [pc, #-1212]	; 1500 <coda_inflate+0x1100>
    19b8:	mov	r3, #29
    19bc:	str	r2, [fp, #24]
    19c0:	str	r3, [r9]
    19c4:	b	1034 <coda_inflate+0xc34>
    19c8:	add	r1, ip, #3
    19cc:	cmp	r1, r4
    19d0:	bls	1a00 <coda_inflate+0x1600>
    19d4:	cmp	r5, #0
    19d8:	bne	19e8 <coda_inflate+0x15e8>
    19dc:	b	890 <coda_inflate+0x490>
    19e0:	cmp	r5, #0
    19e4:	beq	c6c <coda_inflate+0x86c>
    19e8:	ldrb	r3, [sl], #1
    19ec:	sub	r5, r5, #1
    19f0:	add	r6, r6, r3, lsl r4
    19f4:	add	r4, r4, #8
    19f8:	cmp	r4, r1
    19fc:	bcc	19e0 <coda_inflate+0x15e0>
    1a00:	lsr	r6, r6, ip
    1a04:	rsb	ip, ip, #-16777216	; 0xff000000
    1a08:	add	ip, ip, #16711680	; 0xff0000
    1a0c:	add	ip, ip, #65280	; 0xff00
    1a10:	add	ip, ip, #253	; 0xfd
    1a14:	and	r3, r6, #7
    1a18:	add	r4, r4, ip
    1a1c:	add	r3, r3, #3
    1a20:	lsr	r6, r6, #3
    1a24:	mov	ip, #0
    1a28:	b	18fc <coda_inflate+0x14fc>
    1a2c:	and	r1, r1, #15
    1a30:	mov	r3, #21
    1a34:	str	r1, [r9, #72]	; 0x48
    1a38:	str	r3, [r9]
    1a3c:	b	d30 <coda_inflate+0x930>
    1a40:	mov	r7, r0
    1a44:	mov	r6, r8
    1a48:	b	894 <coda_inflate+0x494>
    1a4c:	ldr	r2, [sp, #12]
    1a50:	mov	r3, #27
    1a54:	mov	r4, #0
    1a58:	str	r3, [r9]
    1a5c:	mov	r6, r4
    1a60:	ldr	r3, [r9, #8]
    1a64:	str	r2, [sp, #20]
    1a68:	b	11e8 <coda_inflate+0xde8>
    1a6c:	ldr	r3, [r9, #32]
    1a70:	cmp	r3, #0
    1a74:	lsrne	r2, r6, #8
    1a78:	andne	r2, r2, #1
    1a7c:	strne	r2, [r3]
    1a80:	tst	r6, #512	; 0x200
    1a84:	bne	1b44 <coda_inflate+0x1744>
    1a88:	mov	r3, #2
    1a8c:	mov	r6, #0
    1a90:	str	r3, [r9]
    1a94:	mov	r4, r6
    1a98:	b	588 <coda_inflate+0x188>
    1a9c:	bl	0 <coda_adler32>
    1aa0:	b	1894 <coda_inflate+0x1494>
    1aa4:	cmp	lr, #0
    1aa8:	lsr	r6, r6, ip
    1aac:	sub	r4, r4, ip
    1ab0:	beq	1c58 <coda_inflate+0x1858>
    1ab4:	add	r0, r9, lr, lsl #1
    1ab8:	and	r3, r6, #3
    1abc:	sub	r4, r4, #2
    1ac0:	ldrh	ip, [r0, #110]	; 0x6e
    1ac4:	add	r3, r3, #3
    1ac8:	lsr	r6, r6, #2
    1acc:	b	18fc <coda_inflate+0x14fc>
    1ad0:	mov	r3, #18
    1ad4:	mov	lr, r0
    1ad8:	str	r0, [r9, #104]	; 0x68
    1adc:	str	r3, [r9]
    1ae0:	b	7cc <coda_inflate+0x3cc>
    1ae4:	ldr	r3, [r9]
    1ae8:	cmp	r3, #29
    1aec:	beq	1034 <coda_inflate+0xc34>
    1af0:	add	r3, r9, #624	; 0x270
    1af4:	ldrh	r3, [r3]
    1af8:	cmp	r3, #0
    1afc:	bne	1bf0 <coda_inflate+0x17f0>
    1b00:	ldr	r2, [pc, #-1540]	; 1504 <coda_inflate+0x1104>
    1b04:	mov	r3, #29
    1b08:	str	r2, [fp, #24]
    1b0c:	str	r3, [r9]
    1b10:	b	1034 <coda_inflate+0xc34>
    1b14:	ldr	r3, [sp, #16]
    1b18:	str	sl, [fp]
    1b1c:	str	r3, [fp, #12]
    1b20:	ldr	r3, [sp, #12]
    1b24:	str	r5, [fp, #4]
    1b28:	str	r3, [fp, #16]
    1b2c:	mov	r7, #2
    1b30:	str	r8, [r9, #56]	; 0x38
    1b34:	str	r4, [r9, #60]	; 0x3c
    1b38:	b	9e8 <coda_inflate+0x5e8>
    1b3c:	mov	r3, r6
    1b40:	b	1538 <coda_inflate+0x1138>
    1b44:	lsr	r3, r6, #8
    1b48:	mov	r2, #2
    1b4c:	add	r1, sp, #52	; 0x34
    1b50:	ldr	r0, [r9, #24]
    1b54:	strb	r6, [sp, #52]	; 0x34
    1b58:	strb	r3, [sp, #53]	; 0x35
    1b5c:	bl	0 <coda_crc32>
    1b60:	str	r0, [r9, #24]
    1b64:	b	1a88 <coda_inflate+0x1688>
    1b68:	mov	r4, #0
    1b6c:	mov	r6, r4
    1b70:	b	f48 <coda_inflate+0xb48>
    1b74:	ldr	r2, [r9, #36]	; 0x24
    1b78:	lsr	r8, r3, #4
    1b7c:	and	r1, r8, #15
    1b80:	cmp	r2, #0
    1b84:	add	r1, r1, #8
    1b88:	streq	r1, [r9, #36]	; 0x24
    1b8c:	beq	1bb4 <coda_inflate+0x17b4>
    1b90:	cmp	r1, r2
    1b94:	bls	1bb4 <coda_inflate+0x17b4>
    1b98:	ldr	r2, [pc, #-1688]	; 1508 <coda_inflate+0x1108>
    1b9c:	mov	r3, #29
    1ba0:	str	r2, [fp, #24]
    1ba4:	sub	r4, r4, #4
    1ba8:	mov	r6, r8
    1bac:	str	r3, [r9]
    1bb0:	b	1034 <coda_inflate+0xc34>
    1bb4:	mov	r3, #1
    1bb8:	mov	r2, #0
    1bbc:	lsl	r3, r3, r1
    1bc0:	mov	r0, r2
    1bc4:	mov	r1, r2
    1bc8:	str	r3, [r9, #20]
    1bcc:	bl	0 <coda_adler32>
    1bd0:	ands	r8, r8, #512	; 0x200
    1bd4:	str	r0, [r9, #24]
    1bd8:	str	r0, [fp, #48]	; 0x30
    1bdc:	bne	734 <coda_inflate+0x334>
    1be0:	mov	r3, #11
    1be4:	str	r3, [r9]
    1be8:	mov	r4, r8
    1bec:	b	c58 <coda_inflate+0x858>
    1bf0:	add	r1, r9, #752	; 0x2f0
    1bf4:	mov	ip, r1
    1bf8:	str	r1, [sp, #36]	; 0x24
    1bfc:	add	r0, r9, #84	; 0x54
    1c00:	ldr	r1, [sp, #32]
    1c04:	mov	r3, #9
    1c08:	add	r8, r9, #112	; 0x70
    1c0c:	add	r7, r9, #108	; 0x6c
    1c10:	str	r1, [r9, #108]	; 0x6c
    1c14:	str	r1, [r9, #76]	; 0x4c
    1c18:	str	r3, [r9, #84]	; 0x54
    1c1c:	mov	r1, r8
    1c20:	stm	sp, {r0, ip}
    1c24:	mov	r3, r7
    1c28:	mov	r0, #1
    1c2c:	bl	0 <coda_inflate_table>
    1c30:	cmp	r0, #0
    1c34:	beq	1c7c <coda_inflate+0x187c>
    1c38:	ldr	r2, [pc, #-1844]	; 150c <coda_inflate+0x110c>
    1c3c:	mov	r3, #29
    1c40:	str	r2, [fp, #24]
    1c44:	str	r3, [r9]
    1c48:	b	1034 <coda_inflate+0xc34>
    1c4c:	mov	r7, r4
    1c50:	mov	r6, r4
    1c54:	b	894 <coda_inflate+0x494>
    1c58:	ldr	r2, [pc, #-1872]	; 1510 <coda_inflate+0x1110>
    1c5c:	mov	r3, #29
    1c60:	str	r2, [fp, #24]
    1c64:	str	r3, [r9]
    1c68:	b	1034 <coda_inflate+0xc34>
    1c6c:	mov	r7, r0
    1c70:	lsr	r6, r8, #3
    1c74:	sub	r4, r4, #3
    1c78:	b	894 <coda_inflate+0x494>
    1c7c:	ldr	r2, [r9, #108]	; 0x6c
    1c80:	ldr	r1, [r9, #96]	; 0x60
    1c84:	str	r2, [r9, #80]	; 0x50
    1c88:	ldr	r0, [sp, #36]	; 0x24
    1c8c:	mov	r2, #6
    1c90:	str	r2, [r9, #88]	; 0x58
    1c94:	add	r2, r9, #88	; 0x58
    1c98:	str	r0, [sp, #4]
    1c9c:	str	r2, [sp]
    1ca0:	mov	r3, r7
    1ca4:	add	r1, r8, r1, lsl #1
    1ca8:	mov	r0, #2
    1cac:	ldr	r2, [r9, #100]	; 0x64
    1cb0:	bl	0 <coda_inflate_table>
    1cb4:	cmp	r0, #0
    1cb8:	beq	1cd8 <coda_inflate+0x18d8>
    1cbc:	ldr	r2, [pc, #-1968]	; 1514 <coda_inflate+0x1114>
    1cc0:	mov	r3, #29
    1cc4:	str	r2, [fp, #24]
    1cc8:	str	r3, [r9]
    1ccc:	b	1034 <coda_inflate+0xc34>
    1cd0:	mov	r8, r6
    1cd4:	b	e84 <coda_inflate+0xa84>
    1cd8:	ldr	r3, [sp, #28]
    1cdc:	cmp	r3, #6
    1ce0:	mov	r3, #19
    1ce4:	str	r3, [r9]
    1ce8:	bne	c00 <coda_inflate+0x800>
    1cec:	mov	r7, r0
    1cf0:	b	894 <coda_inflate+0x494>
    1cf4:	ldr	r3, [r9, #16]
    1cf8:	b	1284 <coda_inflate+0xe84>
    1cfc:	mov	r7, #1
    1d00:	b	894 <coda_inflate+0x494>
    1d04:	mov	r8, r6
    1d08:	b	c58 <coda_inflate+0x858>
    1d0c:	mov	r8, r6
    1d10:	b	798 <coda_inflate+0x398>

00001d14 <coda_inflateEnd>:
    1d14:	push	{r4, lr}
    1d18:	subs	r4, r0, #0
    1d1c:	beq	1d6c <coda_inflateEnd+0x58>
    1d20:	ldr	r1, [r4, #28]
    1d24:	cmp	r1, #0
    1d28:	beq	1d6c <coda_inflateEnd+0x58>
    1d2c:	ldr	r3, [r4, #36]	; 0x24
    1d30:	cmp	r3, #0
    1d34:	beq	1d6c <coda_inflateEnd+0x58>
    1d38:	ldr	r2, [r1, #52]	; 0x34
    1d3c:	cmp	r2, #0
    1d40:	beq	1d58 <coda_inflateEnd+0x44>
    1d44:	mov	r1, r2
    1d48:	ldr	r0, [r4, #40]	; 0x28
    1d4c:	blx	r3
    1d50:	ldr	r3, [r4, #36]	; 0x24
    1d54:	ldr	r1, [r4, #28]
    1d58:	ldr	r0, [r4, #40]	; 0x28
    1d5c:	blx	r3
    1d60:	mov	r0, #0
    1d64:	str	r0, [r4, #28]
    1d68:	pop	{r4, pc}
    1d6c:	mvn	r0, #1
    1d70:	pop	{r4, pc}

00001d74 <coda_inflateGetDictionary>:
    1d74:	cmp	r0, #0
    1d78:	beq	1dfc <coda_inflateGetDictionary+0x88>
    1d7c:	push	{r4, r5, r6, lr}
    1d80:	ldr	r4, [r0, #28]
    1d84:	cmp	r4, #0
    1d88:	beq	1e04 <coda_inflateGetDictionary+0x90>
    1d8c:	mov	r5, r2
    1d90:	ldr	r2, [r4, #44]	; 0x2c
    1d94:	mov	r3, r1
    1d98:	cmp	r2, #0
    1d9c:	cmpne	r1, #0
    1da0:	beq	1ddc <coda_inflateGetDictionary+0x68>
    1da4:	ldr	r1, [r4, #48]	; 0x30
    1da8:	ldr	r0, [r4, #52]	; 0x34
    1dac:	sub	r2, r2, r1
    1db0:	add	r1, r0, r1
    1db4:	mov	r0, r3
    1db8:	bl	0 <memcpy>
    1dbc:	ldr	r1, [r4, #48]	; 0x30
    1dc0:	mov	r2, r1
    1dc4:	mov	r3, r0
    1dc8:	ldr	r0, [r4, #44]	; 0x2c
    1dcc:	sub	r0, r0, r1
    1dd0:	add	r0, r3, r0
    1dd4:	ldr	r1, [r4, #52]	; 0x34
    1dd8:	bl	0 <memcpy>
    1ddc:	cmp	r5, #0
    1de0:	beq	1df4 <coda_inflateGetDictionary+0x80>
    1de4:	ldr	r3, [r4, #44]	; 0x2c
    1de8:	mov	r0, #0
    1dec:	str	r3, [r5]
    1df0:	pop	{r4, r5, r6, pc}
    1df4:	mov	r0, r5
    1df8:	pop	{r4, r5, r6, pc}
    1dfc:	mvn	r0, #1
    1e00:	bx	lr
    1e04:	mvn	r0, #1
    1e08:	pop	{r4, r5, r6, pc}

00001e0c <coda_inflateSetDictionary>:
    1e0c:	push	{r4, r5, r6, r7, r8, lr}
    1e10:	subs	r6, r0, #0
    1e14:	beq	1ea0 <coda_inflateSetDictionary+0x94>
    1e18:	ldr	r4, [r6, #28]
    1e1c:	cmp	r4, #0
    1e20:	beq	1ea0 <coda_inflateSetDictionary+0x94>
    1e24:	ldr	r3, [r4, #8]
    1e28:	mov	r5, r2
    1e2c:	cmp	r3, #0
    1e30:	mov	r7, r1
    1e34:	ldr	r3, [r4]
    1e38:	bne	1e68 <coda_inflateSetDictionary+0x5c>
    1e3c:	cmp	r3, #10
    1e40:	beq	1e70 <coda_inflateSetDictionary+0x64>
    1e44:	add	r1, r7, r5
    1e48:	mov	r2, r5
    1e4c:	mov	r0, r6
    1e50:	bl	0 <updatewindow>
    1e54:	cmp	r0, #0
    1e58:	bne	1ea8 <coda_inflateSetDictionary+0x9c>
    1e5c:	mov	r3, #1
    1e60:	str	r3, [r4, #12]
    1e64:	pop	{r4, r5, r6, r7, r8, pc}
    1e68:	cmp	r3, #10
    1e6c:	bne	1ea0 <coda_inflateSetDictionary+0x94>
    1e70:	mov	r2, #0
    1e74:	mov	r1, r2
    1e78:	mov	r0, r2
    1e7c:	bl	0 <coda_adler32>
    1e80:	mov	r2, r5
    1e84:	mov	r1, r7
    1e88:	bl	0 <coda_adler32>
    1e8c:	ldr	r3, [r4, #24]
    1e90:	cmp	r0, r3
    1e94:	beq	1e44 <coda_inflateSetDictionary+0x38>
    1e98:	mvn	r0, #2
    1e9c:	pop	{r4, r5, r6, r7, r8, pc}
    1ea0:	mvn	r0, #1
    1ea4:	pop	{r4, r5, r6, r7, r8, pc}
    1ea8:	mov	r3, #30
    1eac:	str	r3, [r4]
    1eb0:	mvn	r0, #3
    1eb4:	pop	{r4, r5, r6, r7, r8, pc}

00001eb8 <coda_inflateGetHeader>:
    1eb8:	cmp	r0, #0
    1ebc:	beq	1eec <coda_inflateGetHeader+0x34>
    1ec0:	ldr	r3, [r0, #28]
    1ec4:	cmp	r3, #0
    1ec8:	beq	1eec <coda_inflateGetHeader+0x34>
    1ecc:	ldr	r2, [r3, #8]
    1ed0:	tst	r2, #2
    1ed4:	beq	1eec <coda_inflateGetHeader+0x34>
    1ed8:	mov	r2, #0
    1edc:	str	r1, [r3, #32]
    1ee0:	mov	r0, r2
    1ee4:	str	r2, [r1, #48]	; 0x30
    1ee8:	bx	lr
    1eec:	mvn	r0, #1
    1ef0:	bx	lr

00001ef4 <coda_inflateSync>:
    1ef4:	cmp	r0, #0
    1ef8:	beq	2118 <coda_inflateSync+0x224>
    1efc:	push	{r4, r5, r6, r7, lr}
    1f00:	sub	sp, sp, #12
    1f04:	ldr	r5, [r0, #28]
    1f08:	cmp	r5, #0
    1f0c:	beq	2110 <coda_inflateSync+0x21c>
    1f10:	ldr	r6, [r0, #4]
    1f14:	cmp	r6, #0
    1f18:	beq	20e8 <coda_inflateSync+0x1f4>
    1f1c:	ldr	r3, [r5]
    1f20:	cmp	r3, #31
    1f24:	beq	20fc <coda_inflateSync+0x208>
    1f28:	ldr	r3, [r5, #60]	; 0x3c
    1f2c:	ldr	r2, [r5, #56]	; 0x38
    1f30:	and	r1, r3, #7
    1f34:	bic	r3, r3, #7
    1f38:	lsl	r2, r2, r1
    1f3c:	cmp	r3, #7
    1f40:	mov	r1, #31
    1f44:	str	r3, [r5, #60]	; 0x3c
    1f48:	str	r2, [r5, #56]	; 0x38
    1f4c:	str	r1, [r5]
    1f50:	bls	1ffc <coda_inflateSync+0x108>
    1f54:	sub	r4, r3, #8
    1f58:	add	lr, sp, #4
    1f5c:	lsr	r4, r4, #3
    1f60:	add	r4, r4, #1
    1f64:	add	r1, lr, r4
    1f68:	mov	r3, lr
    1f6c:	strb	r2, [r3], #1
    1f70:	cmp	r1, r3
    1f74:	lsr	r2, r2, #8
    1f78:	bne	1f6c <coda_inflateSync+0x78>
    1f7c:	mov	ip, #0
    1f80:	mov	r3, ip
    1f84:	mov	r1, ip
    1f88:	str	r2, [r5, #56]	; 0x38
    1f8c:	mov	r6, #1
    1f90:	str	ip, [r5, #60]	; 0x3c
    1f94:	b	1fd0 <coda_inflateSync+0xdc>
    1f98:	cmp	ip, #0
    1f9c:	rsb	r3, r3, #4
    1fa0:	mov	r2, r6
    1fa4:	movne	r3, #0
    1fa8:	bne	1fb8 <coda_inflateSync+0xc4>
    1fac:	cmp	r3, #3
    1fb0:	movhi	r2, #0
    1fb4:	movls	r2, #1
    1fb8:	add	r1, r1, #1
    1fbc:	cmp	r1, r4
    1fc0:	movcs	ip, #0
    1fc4:	andcc	ip, r2, #1
    1fc8:	cmp	ip, #0
    1fcc:	beq	2004 <coda_inflateSync+0x110>
    1fd0:	ldrb	ip, [lr], #1
    1fd4:	cmp	r3, #1
    1fd8:	movhi	r2, #255	; 0xff
    1fdc:	movls	r2, #0
    1fe0:	cmp	ip, r2
    1fe4:	bne	1f98 <coda_inflateSync+0xa4>
    1fe8:	add	r3, r3, #1
    1fec:	cmp	r3, #3
    1ff0:	movhi	r2, #0
    1ff4:	movls	r2, #1
    1ff8:	b	1fb8 <coda_inflateSync+0xc4>
    1ffc:	mov	r2, #1
    2000:	mov	r3, #0
    2004:	str	r3, [r5, #104]	; 0x68
    2008:	ldr	r6, [r0, #4]
    200c:	cmp	r6, #0
    2010:	moveq	ip, #0
    2014:	andne	ip, r2, #1
    2018:	cmp	ip, #0
    201c:	ldr	r7, [r0]
    2020:	beq	2094 <coda_inflateSync+0x1a0>
    2024:	sub	r4, r7, #1
    2028:	mov	r1, #0
    202c:	b	2068 <coda_inflateSync+0x174>
    2030:	cmp	lr, #0
    2034:	rsb	r3, r3, #4
    2038:	mov	r2, ip
    203c:	movne	r3, #0
    2040:	bne	2050 <coda_inflateSync+0x15c>
    2044:	cmp	r3, #3
    2048:	movhi	r2, #0
    204c:	movls	r2, #1
    2050:	add	r1, r1, #1
    2054:	cmp	r6, r1
    2058:	movls	r2, #0
    205c:	andhi	r2, r2, #1
    2060:	cmp	r2, #0
    2064:	beq	2098 <coda_inflateSync+0x1a4>
    2068:	ldrb	lr, [r4, #1]!
    206c:	cmp	r3, #1
    2070:	movhi	r2, #255	; 0xff
    2074:	movls	r2, #0
    2078:	cmp	lr, r2
    207c:	bne	2030 <coda_inflateSync+0x13c>
    2080:	add	r3, r3, #1
    2084:	cmp	r3, #3
    2088:	movhi	r2, #0
    208c:	movls	r2, #1
    2090:	b	2050 <coda_inflateSync+0x15c>
    2094:	mov	r1, ip
    2098:	str	r3, [r5, #104]	; 0x68
    209c:	ldmib	r0, {r2, r4}
    20a0:	cmp	r3, #4
    20a4:	add	r7, r7, r1
    20a8:	sub	r3, r2, r1
    20ac:	add	r4, r1, r4
    20b0:	str	r7, [r0]
    20b4:	stmib	r0, {r3, r4}
    20b8:	mvnne	r0, #2
    20bc:	bne	20e0 <coda_inflateSync+0x1ec>
    20c0:	mov	r6, r0
    20c4:	ldr	r7, [r0, #20]
    20c8:	bl	1c4 <coda_inflateReset>
    20cc:	mov	r0, #0
    20d0:	mov	r3, #11
    20d4:	str	r7, [r6, #20]
    20d8:	str	r4, [r6, #8]
    20dc:	str	r3, [r5]
    20e0:	add	sp, sp, #12
    20e4:	pop	{r4, r5, r6, r7, pc}
    20e8:	ldr	r3, [r5, #60]	; 0x3c
    20ec:	cmp	r3, #7
    20f0:	bhi	1f1c <coda_inflateSync+0x28>
    20f4:	mvn	r0, #4
    20f8:	b	20e0 <coda_inflateSync+0x1ec>
    20fc:	ldr	r3, [r5, #104]	; 0x68
    2100:	cmp	r3, #3
    2104:	movhi	r2, #0
    2108:	movls	r2, #1
    210c:	b	200c <coda_inflateSync+0x118>
    2110:	mvn	r0, #1
    2114:	b	20e0 <coda_inflateSync+0x1ec>
    2118:	mvn	r0, #1
    211c:	bx	lr

00002120 <coda_inflateSyncPoint>:
    2120:	cmp	r0, #0
    2124:	beq	2158 <coda_inflateSyncPoint+0x38>
    2128:	ldr	r3, [r0, #28]
    212c:	cmp	r3, #0
    2130:	beq	2158 <coda_inflateSyncPoint+0x38>
    2134:	ldr	r2, [r3]
    2138:	cmp	r2, #13
    213c:	beq	2148 <coda_inflateSyncPoint+0x28>
    2140:	mov	r0, #0
    2144:	bx	lr
    2148:	ldr	r0, [r3, #60]	; 0x3c
    214c:	clz	r0, r0
    2150:	lsr	r0, r0, #5
    2154:	bx	lr
    2158:	mvn	r0, #1
    215c:	bx	lr

00002160 <coda_inflateCopy>:
    2160:	cmp	r1, #0
    2164:	cmpne	r0, #0
    2168:	beq	22c4 <coda_inflateCopy+0x164>
    216c:	push	{r4, r5, r6, r7, r8, lr}
    2170:	ldr	r5, [r1, #28]
    2174:	cmp	r5, #0
    2178:	beq	22cc <coda_inflateCopy+0x16c>
    217c:	ldr	r3, [r1, #32]
    2180:	cmp	r3, #0
    2184:	beq	22cc <coda_inflateCopy+0x16c>
    2188:	ldr	r2, [r1, #36]	; 0x24
    218c:	cmp	r2, #0
    2190:	beq	22cc <coda_inflateCopy+0x16c>
    2194:	mov	r4, r1
    2198:	mov	r8, r0
    219c:	ldr	r2, [pc, #336]	; 22f4 <coda_inflateCopy+0x194>
    21a0:	mov	r1, #1
    21a4:	ldr	r0, [r4, #40]	; 0x28
    21a8:	blx	r3
    21ac:	subs	r6, r0, #0
    21b0:	beq	22d4 <coda_inflateCopy+0x174>
    21b4:	ldr	r7, [r5, #52]	; 0x34
    21b8:	cmp	r7, #0
    21bc:	beq	21e0 <coda_inflateCopy+0x80>
    21c0:	ldr	r1, [r5, #36]	; 0x24
    21c4:	mov	r2, #1
    21c8:	ldr	r3, [r4, #32]
    21cc:	lsl	r1, r2, r1
    21d0:	ldr	r0, [r4, #40]	; 0x28
    21d4:	blx	r3
    21d8:	subs	r7, r0, #0
    21dc:	beq	22dc <coda_inflateCopy+0x17c>
    21e0:	mov	r1, r4
    21e4:	add	r2, r4, #48	; 0x30
    21e8:	mov	r3, r8
    21ec:	ldr	r4, [r1]
    21f0:	ldr	lr, [r1, #4]
    21f4:	ldr	ip, [r1, #8]
    21f8:	ldr	r0, [r1, #12]
    21fc:	add	r1, r1, #16
    2200:	cmp	r1, r2
    2204:	str	r4, [r3]
    2208:	str	lr, [r3, #4]
    220c:	str	ip, [r3, #8]
    2210:	str	r0, [r3, #12]
    2214:	add	r3, r3, #16
    2218:	bne	21ec <coda_inflateCopy+0x8c>
    221c:	ldr	r0, [r1]
    2220:	ldr	r2, [r1, #4]
    2224:	str	r0, [r3]
    2228:	str	r2, [r3, #4]
    222c:	mov	r1, r5
    2230:	ldr	r2, [pc, #188]	; 22f4 <coda_inflateCopy+0x194>
    2234:	mov	r0, r6
    2238:	bl	0 <memcpy>
    223c:	ldr	r1, [r5, #76]	; 0x4c
    2240:	add	r0, r5, #1328	; 0x530
    2244:	cmp	r1, r0
    2248:	bcs	2290 <coda_inflateCopy+0x130>
    224c:	add	r3, r6, #1328	; 0x530
    2250:	ldr	r2, [r5, #108]	; 0x6c
    2254:	cmp	r7, #0
    2258:	sub	r2, r2, r0
    225c:	add	r3, r3, r2
    2260:	str	r3, [r6, #108]	; 0x6c
    2264:	beq	2280 <coda_inflateCopy+0x120>
    2268:	ldr	r3, [r5, #36]	; 0x24
    226c:	mov	r2, #1
    2270:	ldr	r1, [r5, #52]	; 0x34
    2274:	lsl	r2, r2, r3
    2278:	mov	r0, r7
    227c:	bl	0 <memcpy>
    2280:	str	r7, [r6, #52]	; 0x34
    2284:	mov	r0, #0
    2288:	str	r6, [r8, #28]
    228c:	pop	{r4, r5, r6, r7, r8, pc}
    2290:	add	r3, r5, #7040	; 0x1b80
    2294:	add	r3, r3, #60	; 0x3c
    2298:	cmp	r3, r1
    229c:	bcc	224c <coda_inflateCopy+0xec>
    22a0:	ldr	r2, [r5, #80]	; 0x50
    22a4:	add	r3, r6, #1328	; 0x530
    22a8:	sub	r1, r1, r0
    22ac:	sub	r2, r2, r0
    22b0:	add	r2, r3, r2
    22b4:	add	r1, r3, r1
    22b8:	str	r2, [r6, #80]	; 0x50
    22bc:	str	r1, [r6, #76]	; 0x4c
    22c0:	b	2250 <coda_inflateCopy+0xf0>
    22c4:	mvn	r0, #1
    22c8:	bx	lr
    22cc:	mvn	r0, #1
    22d0:	pop	{r4, r5, r6, r7, r8, pc}
    22d4:	mvn	r0, #3
    22d8:	pop	{r4, r5, r6, r7, r8, pc}
    22dc:	ldr	r0, [r4, #40]	; 0x28
    22e0:	mov	r1, r6
    22e4:	ldr	r3, [r4, #36]	; 0x24
    22e8:	blx	r3
    22ec:	mvn	r0, #3
    22f0:	pop	{r4, r5, r6, r7, r8, pc}
    22f4:	.word	0x00001bcc

000022f8 <coda_inflateUndermine>:
    22f8:	cmp	r0, #0
    22fc:	beq	2320 <coda_inflateUndermine+0x28>
    2300:	ldr	r3, [r0, #28]
    2304:	cmp	r3, #0
    2308:	beq	2320 <coda_inflateUndermine+0x28>
    230c:	add	r3, r3, #4096	; 0x1000
    2310:	mov	r2, #1
    2314:	str	r2, [r3, #3008]	; 0xbc0
    2318:	mvn	r0, #2
    231c:	bx	lr
    2320:	mvn	r0, #1
    2324:	bx	lr

00002328 <coda_inflateMark>:
    2328:	cmp	r0, #0
    232c:	beq	2374 <coda_inflateMark+0x4c>
    2330:	ldr	r3, [r0, #28]
    2334:	cmp	r3, #0
    2338:	beq	2374 <coda_inflateMark+0x4c>
    233c:	add	ip, r3, #4096	; 0x1000
    2340:	ldr	r1, [r3]
    2344:	ldr	r0, [ip, #3012]	; 0xbc4
    2348:	cmp	r1, #15
    234c:	lsl	r2, r0, #16
    2350:	ldreq	r0, [r3, #64]	; 0x40
    2354:	beq	236c <coda_inflateMark+0x44>
    2358:	cmp	r1, #24
    235c:	movne	r0, #0
    2360:	ldreq	r0, [ip, #3016]	; 0xbc8
    2364:	ldreq	r3, [r3, #64]	; 0x40
    2368:	subeq	r0, r0, r3
    236c:	add	r0, r0, r2
    2370:	bx	lr
    2374:	ldr	r0, [pc]	; 237c <coda_inflateMark+0x54>
    2378:	bx	lr
    237c:	.word	0xffff0000
