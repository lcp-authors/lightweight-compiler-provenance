
compcert-binaries/ZendAccelerator.o_compcert:     file format elf32-littlearm


Disassembly of section .text:

00000000 <zif_accel_chdir>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #24
       8:	sub	sp, sp, #4096	; 0x1000
       c:	str	ip, [sp]
      10:	str	lr, [sp, #4]
      14:	str	r4, [sp, #8]
      18:	str	r5, [sp, #12]
      1c:	str	r6, [sp, #16]
      20:	ldr	r3, [pc, #304]	; 158 <zif_accel_chdir+0x158>
      24:	ldr	ip, [r3]
      28:	blx	ip
      2c:	add	r0, sp, #24
      30:	mov	r1, #4096	; 0x1000
      34:	bl	0 <getcwd>
      38:	cmp	r0, #0
      3c:	beq	e0 <zif_accel_chdir+0xe0>
      40:	ldr	r0, [pc, #276]	; 15c <zif_accel_chdir+0x15c>
      44:	ldr	r0, [r0]
      48:	cmp	r0, #0
      4c:	beq	78 <zif_accel_chdir+0x78>
      50:	ldr	ip, [r0, #4]
      54:	and	r1, ip, #64	; 0x40
      58:	cmp	r1, #0
      5c:	bne	78 <zif_accel_chdir+0x78>
      60:	ldr	r3, [r0]
      64:	sub	r1, r3, #1
      68:	str	r1, [r0]
      6c:	cmp	r1, #0
      70:	bne	78 <zif_accel_chdir+0x78>
      74:	bl	0 <_efree>
      78:	add	r0, sp, #24
      7c:	bl	0 <strlen>
      80:	mov	r4, r0
      84:	add	r6, sp, #24
      88:	add	r1, r4, #24
      8c:	bic	r0, r1, #7
      90:	bl	0 <_emalloc>
      94:	mov	r5, r0
      98:	mov	r2, #1
      9c:	str	r2, [r5]
      a0:	mov	r2, #0
      a4:	orr	r0, r2, #6
      a8:	str	r0, [r5, #4]
      ac:	mov	r0, #0
      b0:	str	r0, [r5, #8]
      b4:	str	r4, [r5, #12]
      b8:	add	r0, r5, #16
      bc:	mov	r2, r4
      c0:	mov	r1, r6
      c4:	bl	0 <memcpy>
      c8:	add	r2, r5, r4
      cc:	mov	ip, #0
      d0:	strb	ip, [r2, #16]
      d4:	ldr	ip, [pc, #128]	; 15c <zif_accel_chdir+0x15c>
      d8:	str	r5, [ip]
      dc:	b	124 <zif_accel_chdir+0x124>
      e0:	ldr	r0, [pc, #116]	; 15c <zif_accel_chdir+0x15c>
      e4:	ldr	r0, [r0]
      e8:	cmp	r0, #0
      ec:	beq	124 <zif_accel_chdir+0x124>
      f0:	ldr	r3, [r0, #4]
      f4:	and	r1, r3, #64	; 0x40
      f8:	cmp	r1, #0
      fc:	bne	118 <zif_accel_chdir+0x118>
     100:	ldr	r2, [r0]
     104:	sub	r1, r2, #1
     108:	str	r1, [r0]
     10c:	cmp	r1, #0
     110:	bne	118 <zif_accel_chdir+0x118>
     114:	bl	0 <_efree>
     118:	ldr	r3, [pc, #60]	; 15c <zif_accel_chdir+0x15c>
     11c:	mov	r1, #0
     120:	str	r1, [r3]
     124:	ldr	r2, [pc, #40]	; 154 <zif_accel_chdir+0x154>
     128:	mov	r1, #0
     12c:	str	r1, [r2]
     130:	ldr	ip, [pc, #40]	; 160 <zif_accel_chdir+0x160>
     134:	mov	r1, #1
     138:	str	r1, [ip]
     13c:	ldr	r4, [sp, #8]
     140:	ldr	r5, [sp, #12]
     144:	ldr	r6, [sp, #16]
     148:	ldr	lr, [sp, #4]
     14c:	ldr	sp, [sp]
     150:	bx	lr
     154:	.word	0x000000f0
     158:	.word	0x0000001c
     15c:	.word	0x000000a0
     160:	.word	0x000000f4

00000164 <zend_accel_schedule_restart_if_necessary>:
     164:	mov	ip, sp
     168:	sub	sp, sp, #8
     16c:	str	ip, [sp]
     170:	str	lr, [sp, #4]
     174:	ldr	r1, [pc, #76]	; 1c8 <zend_accel_schedule_restart_if_necessary+0x64>
     178:	ldr	r1, [r1]
     17c:	ldr	ip, [r1, #12]
     180:	vmov	s0, ip
     184:	vcvt.f64.u32	d0, s0
     188:	ldr	r1, [pc, #64]	; 1d0 <zend_accel_schedule_restart_if_necessary+0x6c>
     18c:	ldr	r3, [r1]
     190:	vmov	s2, r3
     194:	vcvt.f64.s32	d1, s2
     198:	vdiv.f64	d2, d0, d1
     19c:	ldr	r2, [pc, #40]	; 1cc <zend_accel_schedule_restart_if_necessary+0x68>
     1a0:	vldr	d3, [r2]
     1a4:	vcmp.f64	d2, d3
     1a8:	vmrs	APSR_nzcv, fpscr
     1ac:	blt	1bc <zend_accel_schedule_restart_if_necessary+0x58>
     1b0:	ldr	lr, [sp, #4]
     1b4:	add	sp, sp, #8
     1b8:	b	9a58 <zend_accel_schedule_restart>
     1bc:	ldr	lr, [sp, #4]
     1c0:	add	sp, sp, #8
     1c4:	bx	lr
     1c8:	.word	0x00000000
     1cc:	.word	0x00000040
     1d0:	.word	0x00000038

000001d4 <accel_include_path_on_modify>:
     1d4:	mov	ip, sp
     1d8:	sub	sp, sp, #24
     1dc:	str	ip, [sp, #8]
     1e0:	str	lr, [sp, #12]
     1e4:	str	r4, [sp, #16]
     1e8:	str	r6, [sp, #20]
     1ec:	ldr	r6, [ip, #4]
     1f0:	mov	r4, r1
     1f4:	ldr	r1, [ip]
     1f8:	ldr	ip, [pc, #76]	; 24c <accel_include_path_on_modify+0x78>
     1fc:	ldr	ip, [ip]
     200:	str	r6, [sp, #4]
     204:	str	r1, [sp]
     208:	mov	r1, r4
     20c:	blx	ip
     210:	cmp	r0, #0
     214:	bne	238 <accel_include_path_on_modify+0x64>
     218:	ldr	r1, [pc, #56]	; 258 <accel_include_path_on_modify+0x84>
     21c:	str	r4, [r1]
     220:	ldr	r1, [pc, #40]	; 250 <accel_include_path_on_modify+0x7c>
     224:	mov	ip, #0
     228:	str	ip, [r1]
     22c:	ldr	r3, [pc, #32]	; 254 <accel_include_path_on_modify+0x80>
     230:	mov	r2, #1
     234:	str	r2, [r3]
     238:	ldr	r4, [sp, #16]
     23c:	ldr	r6, [sp, #20]
     240:	ldr	lr, [sp, #12]
     244:	add	sp, sp, #24
     248:	bx	lr
     24c:	.word	0x00000020
     250:	.word	0x000000e8
     254:	.word	0x000000ec
     258:	.word	0x000000a4

0000025c <accel_interned_strings_save_state>:
     25c:	mov	ip, sp
     260:	sub	sp, sp, #8
     264:	str	ip, [sp]
     268:	str	lr, [sp, #4]
     26c:	ldr	r0, [pc, #20]	; 288 <accel_interned_strings_save_state+0x2c>
     270:	ldr	r0, [r0]
     274:	ldr	r1, [r0, #100]	; 0x64
     278:	str	r1, [r0, #108]	; 0x6c
     27c:	ldr	lr, [sp, #4]
     280:	add	sp, sp, #8
     284:	bx	lr
     288:	.word	0x00000000

0000028c <accel_new_interned_string>:
     28c:	mov	ip, sp
     290:	sub	sp, sp, #24
     294:	str	ip, [sp]
     298:	str	lr, [sp, #4]
     29c:	str	r4, [sp, #8]
     2a0:	str	r5, [sp, #12]
     2a4:	str	r6, [sp, #16]
     2a8:	mov	r5, r0
     2ac:	ldr	r3, [pc, #592]	; 504 <accel_new_interned_string+0x278>
     2b0:	ldrb	r2, [r3]
     2b4:	cmp	r2, #0
     2b8:	bne	4e8 <accel_new_interned_string+0x25c>
     2bc:	ldr	r1, [pc, #584]	; 50c <accel_new_interned_string+0x280>
     2c0:	ldr	r1, [r1]
     2c4:	ldr	ip, [r1, #96]	; 0x60
     2c8:	cmp	r5, ip
     2cc:	bcc	2dc <accel_new_interned_string+0x50>
     2d0:	ldr	r2, [r1, #100]	; 0x64
     2d4:	cmp	r5, r2
     2d8:	bcc	4e8 <accel_new_interned_string+0x25c>
     2dc:	ldr	r4, [r5, #8]
     2e0:	cmp	r4, #0
     2e4:	bne	2f4 <accel_new_interned_string+0x68>
     2e8:	mov	r0, r5
     2ec:	bl	0 <zend_string_hash_func>
     2f0:	mov	r4, r0
     2f4:	ldr	r0, [pc, #528]	; 50c <accel_new_interned_string+0x280>
     2f8:	ldr	r0, [r0]
     2fc:	ldr	r2, [r0, #88]	; 0x58
     300:	and	r1, r4, r2
     304:	add	r0, r0, r1
     308:	ldr	r0, [r0, #112]	; 0x70
     30c:	cmp	r0, #0
     310:	beq	3cc <accel_new_interned_string+0x140>
     314:	ldr	r2, [pc, #496]	; 50c <accel_new_interned_string+0x280>
     318:	ldr	ip, [r2]
     31c:	add	ip, ip, r0
     320:	add	r6, ip, #88	; 0x58
     324:	ldr	r1, [ip, #96]	; 0x60
     328:	cmp	r1, r4
     32c:	bne	3bc <accel_new_interned_string+0x130>
     330:	ldr	r2, [ip, #100]	; 0x64
     334:	ldr	r1, [r5, #12]
     338:	cmp	r2, r1
     33c:	bne	360 <accel_new_interned_string+0xd4>
     340:	mov	r3, r5
     344:	add	r0, ip, #104	; 0x68
     348:	add	r1, r3, #16
     34c:	bl	0 <memcmp>
     350:	cmp	r0, #0
     354:	moveq	ip, #1
     358:	movne	ip, #0
     35c:	b	364 <accel_new_interned_string+0xd8>
     360:	mov	ip, #0
     364:	and	r2, ip, #255	; 0xff
     368:	cmp	r2, #0
     36c:	beq	3bc <accel_new_interned_string+0x130>
     370:	mov	r0, r5
     374:	ldr	r2, [r0, #4]
     378:	and	r3, r2, #64	; 0x40
     37c:	cmp	r3, #0
     380:	bne	3b4 <accel_new_interned_string+0x128>
     384:	ldr	r1, [r0]
     388:	sub	r3, r1, #1
     38c:	str	r3, [r0]
     390:	cmp	r3, #0
     394:	bne	3b4 <accel_new_interned_string+0x128>
     398:	ldr	r1, [r0, #4]
     39c:	and	ip, r1, #128	; 0x80
     3a0:	cmp	ip, #0
     3a4:	bne	3b0 <accel_new_interned_string+0x124>
     3a8:	bl	0 <_efree>
     3ac:	b	3b4 <accel_new_interned_string+0x128>
     3b0:	bl	0 <free>
     3b4:	mov	r5, r6
     3b8:	b	4e8 <accel_new_interned_string+0x25c>
     3bc:	sub	lr, r6, #4096	; 0x1000
     3c0:	ldr	r0, [lr, #4092]	; 0xffc
     3c4:	cmp	r0, #0
     3c8:	bne	314 <accel_new_interned_string+0x88>
     3cc:	ldr	r0, [pc, #312]	; 50c <accel_new_interned_string+0x280>
     3d0:	ldr	ip, [r0]
     3d4:	ldr	r2, [ip, #104]	; 0x68
     3d8:	ldr	r1, [ip, #100]	; 0x64
     3dc:	sub	r3, r2, r1
     3e0:	lsr	r2, r3, #31
     3e4:	movw	r1, #26215	; 0x6667
     3e8:	movt	r1, #26214	; 0x6666
     3ec:	smull	lr, r1, r3, r1
     3f0:	add	r2, r2, r1, asr #3
     3f4:	ldr	r3, [r5, #12]
     3f8:	add	r1, r3, #28
     3fc:	bic	r1, r1, #7
     400:	cmp	r2, r1
     404:	bcs	418 <accel_new_interned_string+0x18c>
     408:	mov	r0, #2
     40c:	ldr	r1, [pc, #244]	; 508 <accel_new_interned_string+0x27c>
     410:	bl	0 <zend_accel_error>
     414:	b	4e8 <accel_new_interned_string+0x25c>
     418:	ldr	r1, [ip, #92]	; 0x5c
     41c:	add	r2, r1, #1
     420:	str	r2, [ip, #92]	; 0x5c
     424:	ldr	r2, [r0]
     428:	ldr	r6, [r2, #100]	; 0x64
     42c:	ldr	r3, [r2, #88]	; 0x58
     430:	and	r1, r4, r3
     434:	add	ip, r2, r1
     438:	ldr	r3, [ip, #112]	; 0x70
     43c:	sub	lr, r6, #4096	; 0x1000
     440:	str	r3, [lr, #4092]	; 0xffc
     444:	ldr	r2, [r0]
     448:	sub	r3, r6, r2
     44c:	sub	r3, r3, #88	; 0x58
     450:	str	r3, [ip, #112]	; 0x70
     454:	mov	r0, #1
     458:	str	r0, [r6]
     45c:	movw	ip, #326	; 0x146
     460:	str	ip, [r6, #4]
     464:	str	r4, [r6, #8]
     468:	ldr	ip, [r5, #12]
     46c:	str	ip, [r6, #12]
     470:	add	r0, r6, #16
     474:	add	r1, r5, #16
     478:	add	r2, ip, #1
     47c:	bl	0 <memcpy>
     480:	ldr	r0, [pc, #132]	; 50c <accel_new_interned_string+0x280>
     484:	ldr	r0, [r0]
     488:	ldr	ip, [r6, #12]
     48c:	add	r3, ip, #28
     490:	bic	r2, r3, #7
     494:	add	r3, r6, r2
     498:	str	r3, [r0, #100]	; 0x64
     49c:	ldr	r0, [r5, #4]
     4a0:	and	r3, r0, #64	; 0x40
     4a4:	cmp	r3, #0
     4a8:	bne	4e4 <accel_new_interned_string+0x258>
     4ac:	ldr	ip, [r5]
     4b0:	sub	r1, ip, #1
     4b4:	str	r1, [r5]
     4b8:	cmp	r1, #0
     4bc:	bne	4e4 <accel_new_interned_string+0x258>
     4c0:	ldr	r3, [r5, #4]
     4c4:	and	r3, r3, #128	; 0x80
     4c8:	cmp	r3, #0
     4cc:	bne	4dc <accel_new_interned_string+0x250>
     4d0:	mov	r0, r5
     4d4:	bl	0 <_efree>
     4d8:	b	4e4 <accel_new_interned_string+0x258>
     4dc:	mov	r0, r5
     4e0:	bl	0 <free>
     4e4:	mov	r5, r6
     4e8:	mov	r0, r5
     4ec:	ldr	r4, [sp, #8]
     4f0:	ldr	r5, [sp, #12]
     4f4:	ldr	r6, [sp, #16]
     4f8:	ldr	lr, [sp, #4]
     4fc:	add	sp, sp, #24
     500:	bx	lr
     504:	.word	0x00000000
     508:	.word	0x00000286
     50c:	.word	0x00000000

00000510 <accel_new_interned_string_for_php>:
     510:	mov	ip, sp
     514:	sub	sp, sp, #40	; 0x28
     518:	str	ip, [sp]
     51c:	str	lr, [sp, #4]
     520:	str	r4, [sp, #8]
     524:	str	r5, [sp, #12]
     528:	str	r6, [sp, #16]
     52c:	str	r7, [sp, #20]
     530:	mov	r4, r0
     534:	ldr	ip, [r4, #8]
     538:	cmp	ip, #0
     53c:	bne	548 <accel_new_interned_string_for_php+0x38>
     540:	mov	r0, r4
     544:	bl	0 <zend_string_hash_func>
     548:	ldr	r3, [pc, #524]	; 75c <accel_new_interned_string_for_php+0x24c>
     54c:	ldr	r1, [r3]
     550:	cmp	r1, #0
     554:	beq	738 <accel_new_interned_string_for_php+0x228>
     558:	mov	r5, r4
     55c:	ldr	r3, [pc, #520]	; 76c <accel_new_interned_string_for_php+0x25c>
     560:	ldr	r0, [r3]
     564:	ldr	r1, [r0, #96]	; 0x60
     568:	cmp	r5, r1
     56c:	bcc	584 <accel_new_interned_string_for_php+0x74>
     570:	ldr	r0, [r0, #100]	; 0x64
     574:	cmp	r5, r0
     578:	bcs	584 <accel_new_interned_string_for_php+0x74>
     57c:	mov	r6, r5
     580:	b	6e8 <accel_new_interned_string_for_php+0x1d8>
     584:	ldr	r2, [pc, #464]	; 75c <accel_new_interned_string_for_php+0x24c>
     588:	ldr	ip, [r2]
     58c:	cmp	ip, #0
     590:	bne	638 <accel_new_interned_string_for_php+0x128>
     594:	ldr	r3, [pc, #452]	; 760 <accel_new_interned_string_for_php+0x250>
     598:	ldrb	r2, [r3]
     59c:	cmp	r2, #0
     5a0:	beq	630 <accel_new_interned_string_for_php+0x120>
     5a4:	mov	r1, #0
     5a8:	strh	r1, [sp, #24]
     5ac:	mov	r0, #0
     5b0:	strh	r0, [sp, #26]
     5b4:	mov	r3, #1
     5b8:	str	r3, [sp, #28]
     5bc:	mov	r3, #1
     5c0:	str	r3, [sp, #32]
     5c4:	ldr	r2, [pc, #408]	; 764 <accel_new_interned_string_for_php+0x254>
     5c8:	ldr	r0, [r2]
     5cc:	mov	r1, #6
     5d0:	add	r2, sp, #24
     5d4:	bl	0 <fcntl>
     5d8:	cmn	r0, #1
     5dc:	bne	614 <accel_new_interned_string_for_php+0x104>
     5e0:	bl	0 <__errno_location>
     5e4:	ldr	r0, [r0]
     5e8:	bl	0 <strerror>
     5ec:	mov	r6, r0
     5f0:	bl	0 <__errno_location>
     5f4:	mov	r2, r0
     5f8:	mov	r0, #4
     5fc:	ldr	r1, [pc, #356]	; 768 <accel_new_interned_string_for_php+0x258>
     600:	ldr	r3, [r2]
     604:	mov	r2, r6
     608:	bl	0 <zend_accel_error>
     60c:	mvn	r1, #0
     610:	b	618 <accel_new_interned_string_for_php+0x108>
     614:	mov	r1, #0
     618:	cmn	r1, #1
     61c:	beq	630 <accel_new_interned_string_for_php+0x120>
     620:	ldr	r3, [pc, #308]	; 75c <accel_new_interned_string_for_php+0x24c>
     624:	mov	r0, #1
     628:	str	r0, [r3]
     62c:	b	638 <accel_new_interned_string_for_php+0x128>
     630:	mov	r6, #0
     634:	b	6e8 <accel_new_interned_string_for_php+0x1d8>
     638:	mov	r0, r5
     63c:	ldr	r3, [r0, #8]
     640:	cmp	r3, #0
     644:	bne	650 <accel_new_interned_string_for_php+0x140>
     648:	bl	0 <zend_string_hash_func>
     64c:	b	654 <accel_new_interned_string_for_php+0x144>
     650:	mov	r0, r3
     654:	mov	r7, r0
     658:	ldr	r1, [pc, #268]	; 76c <accel_new_interned_string_for_php+0x25c>
     65c:	ldr	r3, [r1]
     660:	ldr	ip, [r3, #88]	; 0x58
     664:	and	r1, r7, ip
     668:	add	r1, r3, r1
     66c:	ldr	r2, [r1, #112]	; 0x70
     670:	cmp	r2, #0
     674:	beq	6e4 <accel_new_interned_string_for_php+0x1d4>
     678:	ldr	r0, [pc, #236]	; 76c <accel_new_interned_string_for_php+0x25c>
     67c:	ldr	ip, [r0]
     680:	add	ip, ip, r2
     684:	add	r6, ip, #88	; 0x58
     688:	ldr	r0, [ip, #96]	; 0x60
     68c:	cmp	r0, r7
     690:	bne	6d4 <accel_new_interned_string_for_php+0x1c4>
     694:	ldr	r2, [ip, #100]	; 0x64
     698:	ldr	r3, [r5, #12]
     69c:	cmp	r2, r3
     6a0:	bne	6c4 <accel_new_interned_string_for_php+0x1b4>
     6a4:	mov	r3, r5
     6a8:	add	r0, ip, #104	; 0x68
     6ac:	add	r1, r3, #16
     6b0:	bl	0 <memcmp>
     6b4:	cmp	r0, #0
     6b8:	moveq	r1, #1
     6bc:	movne	r1, #0
     6c0:	b	6c8 <accel_new_interned_string_for_php+0x1b8>
     6c4:	mov	r1, #0
     6c8:	and	ip, r1, #255	; 0xff
     6cc:	cmp	ip, #0
     6d0:	bne	6e8 <accel_new_interned_string_for_php+0x1d8>
     6d4:	sub	lr, r6, #4096	; 0x1000
     6d8:	ldr	r2, [lr, #4092]	; 0xffc
     6dc:	cmp	r2, #0
     6e0:	bne	678 <accel_new_interned_string_for_php+0x168>
     6e4:	mov	r6, #0
     6e8:	cmp	r6, #0
     6ec:	beq	738 <accel_new_interned_string_for_php+0x228>
     6f0:	mov	r0, r4
     6f4:	ldr	ip, [r0, #4]
     6f8:	and	r2, ip, #64	; 0x40
     6fc:	cmp	r2, #0
     700:	bne	73c <accel_new_interned_string_for_php+0x22c>
     704:	ldr	r1, [r0]
     708:	sub	r1, r1, #1
     70c:	str	r1, [r0]
     710:	cmp	r1, #0
     714:	bne	73c <accel_new_interned_string_for_php+0x22c>
     718:	ldr	r1, [r0, #4]
     71c:	and	r1, r1, #128	; 0x80
     720:	cmp	r1, #0
     724:	bne	730 <accel_new_interned_string_for_php+0x220>
     728:	bl	0 <_efree>
     72c:	b	73c <accel_new_interned_string_for_php+0x22c>
     730:	bl	0 <free>
     734:	b	73c <accel_new_interned_string_for_php+0x22c>
     738:	mov	r6, r4
     73c:	mov	r0, r6
     740:	ldr	r4, [sp, #8]
     744:	ldr	r5, [sp, #12]
     748:	ldr	r6, [sp, #16]
     74c:	ldr	r7, [sp, #20]
     750:	ldr	lr, [sp, #4]
     754:	add	sp, sp, #40	; 0x28
     758:	bx	lr
     75c:	.word	0x00000000
     760:	.word	0x00000006
     764:	.word	0x00000000
     768:	.word	0x00000b9a
     76c:	.word	0x00000000

00000770 <accel_init_interned_string_for_php>:
     770:	mov	ip, sp
     774:	sub	sp, sp, #32
     778:	str	ip, [sp]
     77c:	str	lr, [sp, #4]
     780:	str	r4, [sp, #8]
     784:	str	r5, [sp, #12]
     788:	str	r6, [sp, #16]
     78c:	str	r7, [sp, #20]
     790:	str	r8, [sp, #24]
     794:	mov	r7, r2
     798:	mov	r6, r1
     79c:	mov	r4, r0
     7a0:	ldr	r1, [pc, #768]	; aa8 <accel_init_interned_string_for_php+0x338>
     7a4:	ldr	r2, [r1]
     7a8:	cmp	r2, #0
     7ac:	beq	a10 <accel_init_interned_string_for_php+0x2a0>
     7b0:	mov	r3, r6
     7b4:	mov	r0, r4
     7b8:	movw	r5, #5381	; 0x1505
     7bc:	cmp	r3, #8
     7c0:	bcc	83c <accel_init_interned_string_for_php+0xcc>
     7c4:	add	r2, r0, #1
     7c8:	add	ip, r5, r5, lsl #5
     7cc:	ldrb	r1, [r0]
     7d0:	add	ip, ip, r1
     7d4:	add	r1, r0, #2
     7d8:	add	r5, ip, ip, lsl #5
     7dc:	ldrb	ip, [r0, #1]
     7e0:	add	r5, r5, ip
     7e4:	add	ip, r0, #3
     7e8:	add	r8, r5, r5, lsl #5
     7ec:	ldrb	r5, [r0, #2]
     7f0:	add	r5, r8, r5
     7f4:	add	r5, r5, r5, lsl #5
     7f8:	ldrb	r8, [r0, #3]
     7fc:	add	r5, r5, r8
     800:	add	r5, r5, r5, lsl #5
     804:	ldrb	r0, [r0, #4]
     808:	add	r0, r5, r0
     80c:	add	r5, r0, r0, lsl #5
     810:	ldrb	r0, [r2, #4]
     814:	add	r0, r5, r0
     818:	add	r2, r0, r0, lsl #5
     81c:	ldrb	r0, [r1, #4]
     820:	add	r1, r2, r0
     824:	add	r0, ip, #5
     828:	add	r1, r1, r1, lsl #5
     82c:	ldrb	ip, [ip, #4]
     830:	add	r5, r1, ip
     834:	sub	r3, r3, #8
     838:	b	7bc <accel_init_interned_string_for_php+0x4c>
     83c:	cmp	r3, #8
     840:	bcs	8f0 <accel_init_interned_string_for_php+0x180>
     844:	add	pc, pc, r3, lsl #2
     848:	nop	{0}
     84c:	b	8f0 <accel_init_interned_string_for_php+0x180>
     850:	b	8e4 <accel_init_interned_string_for_php+0x174>
     854:	b	8d0 <accel_init_interned_string_for_php+0x160>
     858:	b	8bc <accel_init_interned_string_for_php+0x14c>
     85c:	b	8a8 <accel_init_interned_string_for_php+0x138>
     860:	b	894 <accel_init_interned_string_for_php+0x124>
     864:	b	880 <accel_init_interned_string_for_php+0x110>
     868:	b	86c <accel_init_interned_string_for_php+0xfc>
     86c:	mov	r1, r0
     870:	add	r0, r1, #1
     874:	add	r2, r5, r5, lsl #5
     878:	ldrb	r1, [r1]
     87c:	add	r5, r2, r1
     880:	mov	r1, r0
     884:	add	r0, r1, #1
     888:	add	r2, r5, r5, lsl #5
     88c:	ldrb	r1, [r1]
     890:	add	r5, r2, r1
     894:	mov	r1, r0
     898:	add	r0, r1, #1
     89c:	add	r2, r5, r5, lsl #5
     8a0:	ldrb	ip, [r1]
     8a4:	add	r5, r2, ip
     8a8:	mov	r3, r0
     8ac:	add	r0, r3, #1
     8b0:	add	r2, r5, r5, lsl #5
     8b4:	ldrb	r1, [r3]
     8b8:	add	r5, r2, r1
     8bc:	mov	ip, r0
     8c0:	add	r0, ip, #1
     8c4:	add	r1, r5, r5, lsl #5
     8c8:	ldrb	r3, [ip]
     8cc:	add	r5, r1, r3
     8d0:	mov	r1, r0
     8d4:	add	r0, r1, #1
     8d8:	add	r2, r5, r5, lsl #5
     8dc:	ldrb	r1, [r1]
     8e0:	add	r5, r2, r1
     8e4:	add	r3, r5, r5, lsl #5
     8e8:	ldrb	r0, [r0]
     8ec:	add	r5, r3, r0
     8f0:	orr	r8, r5, #-2147483648	; 0x80000000
     8f4:	ldr	r2, [pc, #432]	; aac <accel_init_interned_string_for_php+0x33c>
     8f8:	ldr	r0, [r2]
     8fc:	ldr	r1, [r0, #88]	; 0x58
     900:	and	r1, r8, r1
     904:	add	r1, r0, r1
     908:	ldr	r3, [r1, #112]	; 0x70
     90c:	cmp	r3, #0
     910:	beq	964 <accel_init_interned_string_for_php+0x1f4>
     914:	ldr	r2, [pc, #400]	; aac <accel_init_interned_string_for_php+0x33c>
     918:	ldr	ip, [r2]
     91c:	add	r0, ip, r3
     920:	add	r5, r0, #88	; 0x58
     924:	ldr	ip, [r0, #96]	; 0x60
     928:	cmp	ip, r8
     92c:	bne	954 <accel_init_interned_string_for_php+0x1e4>
     930:	ldr	r3, [r0, #100]	; 0x64
     934:	cmp	r3, r6
     938:	bne	954 <accel_init_interned_string_for_php+0x1e4>
     93c:	add	r0, r0, #104	; 0x68
     940:	mov	r2, r6
     944:	mov	r1, r4
     948:	bl	0 <memcmp>
     94c:	cmp	r0, #0
     950:	beq	968 <accel_init_interned_string_for_php+0x1f8>
     954:	sub	lr, r5, #4096	; 0x1000
     958:	ldr	r3, [lr, #4092]	; 0xffc
     95c:	cmp	r3, #0
     960:	bne	914 <accel_init_interned_string_for_php+0x1a4>
     964:	mov	r5, #0
     968:	cmp	r5, #0
     96c:	bne	9ec <accel_init_interned_string_for_php+0x27c>
     970:	cmp	r7, #0
     974:	bne	98c <accel_init_interned_string_for_php+0x21c>
     978:	add	ip, r6, #24
     97c:	bic	r0, ip, #7
     980:	bl	0 <_emalloc>
     984:	mov	r5, r0
     988:	b	99c <accel_init_interned_string_for_php+0x22c>
     98c:	add	r3, r6, #24
     990:	bic	r0, r3, #7
     994:	bl	0 <__zend_malloc>
     998:	mov	r5, r0
     99c:	mov	r1, #1
     9a0:	str	r1, [r5]
     9a4:	mov	ip, #128	; 0x80
     9a8:	mov	r3, #0
     9ac:	cmp	r7, #0
     9b0:	movne	r3, ip
     9b4:	moveq	r3, r3
     9b8:	orr	r2, r3, #6
     9bc:	str	r2, [r5, #4]
     9c0:	mov	r3, #0
     9c4:	str	r3, [r5, #8]
     9c8:	str	r6, [r5, #12]
     9cc:	add	r0, r5, #16
     9d0:	mov	r2, r6
     9d4:	mov	r1, r4
     9d8:	bl	0 <memcpy>
     9dc:	add	r3, r5, r6
     9e0:	mov	r0, #0
     9e4:	strb	r0, [r3, #16]
     9e8:	str	r8, [r5, #8]
     9ec:	mov	r0, r5
     9f0:	ldr	r4, [sp, #8]
     9f4:	ldr	r5, [sp, #12]
     9f8:	ldr	r6, [sp, #16]
     9fc:	ldr	r7, [sp, #20]
     a00:	ldr	r8, [sp, #24]
     a04:	ldr	lr, [sp, #4]
     a08:	add	sp, sp, #32
     a0c:	bx	lr
     a10:	cmp	r7, #0
     a14:	bne	a28 <accel_init_interned_string_for_php+0x2b8>
     a18:	add	r2, r6, #24
     a1c:	bic	r0, r2, #7
     a20:	bl	0 <_emalloc>
     a24:	b	a34 <accel_init_interned_string_for_php+0x2c4>
     a28:	add	ip, r6, #24
     a2c:	bic	r0, ip, #7
     a30:	bl	0 <__zend_malloc>
     a34:	mov	ip, #1
     a38:	str	ip, [r0]
     a3c:	mov	ip, #128	; 0x80
     a40:	mov	r2, #0
     a44:	cmp	r7, #0
     a48:	movne	r1, ip
     a4c:	moveq	r1, r2
     a50:	orr	r1, r1, #6
     a54:	str	r1, [r0, #4]
     a58:	mov	ip, #0
     a5c:	str	ip, [r0, #8]
     a60:	str	r6, [r0, #12]
     a64:	mov	r5, r0
     a68:	add	r0, r5, #16
     a6c:	mov	r2, r6
     a70:	mov	r1, r4
     a74:	bl	0 <memcpy>
     a78:	add	r2, r5, r6
     a7c:	mov	r0, #0
     a80:	strb	r0, [r2, #16]
     a84:	mov	r0, r5
     a88:	ldr	r4, [sp, #8]
     a8c:	ldr	r5, [sp, #12]
     a90:	ldr	r6, [sp, #16]
     a94:	ldr	r7, [sp, #20]
     a98:	ldr	r8, [sp, #24]
     a9c:	ldr	lr, [sp, #4]
     aa0:	add	sp, sp, #32
     aa4:	bx	lr
	...

00000ab0 <accel_copy_permanent_strings>:
     ab0:	mov	ip, sp
     ab4:	sub	sp, sp, #40	; 0x28
     ab8:	str	ip, [sp]
     abc:	str	lr, [sp, #4]
     ac0:	str	r4, [sp, #8]
     ac4:	str	r5, [sp, #12]
     ac8:	str	r6, [sp, #16]
     acc:	str	r7, [sp, #20]
     ad0:	str	r8, [sp, #24]
     ad4:	str	r9, [sp, #28]
     ad8:	str	sl, [sp, #32]
     adc:	mov	sl, r0
     ae0:	ldr	ip, [pc, #1568]	; 1108 <accel_copy_permanent_strings+0x658>
     ae4:	ldr	r0, [ip]
     ae8:	blx	sl
     aec:	ldr	r2, [pc, #1556]	; 1108 <accel_copy_permanent_strings+0x658>
     af0:	str	r0, [r2]
     af4:	mov	r4, #0
     af8:	ldr	r0, [pc, #1564]	; 111c <accel_copy_permanent_strings+0x66c>
     afc:	ldr	r0, [r0, r4, lsl #2]
     b00:	blx	sl
     b04:	ldr	r1, [pc, #1552]	; 111c <accel_copy_permanent_strings+0x66c>
     b08:	str	r0, [r1, r4, lsl #2]
     b0c:	add	r4, r4, #1
     b10:	cmp	r4, #256	; 0x100
     b14:	bcc	af8 <accel_copy_permanent_strings+0x48>
     b18:	mov	r4, #0
     b1c:	ldr	ip, [pc, #1524]	; 1118 <accel_copy_permanent_strings+0x668>
     b20:	ldr	r3, [ip]
     b24:	ldr	r0, [r3, r4, lsl #2]
     b28:	blx	sl
     b2c:	ldr	r1, [pc, #1508]	; 1118 <accel_copy_permanent_strings+0x668>
     b30:	ldr	r1, [r1]
     b34:	str	r0, [r1, r4, lsl #2]
     b38:	add	r4, r4, #1
     b3c:	cmp	r4, #48	; 0x30
     b40:	bcc	b1c <accel_copy_permanent_strings+0x6c>
     b44:	ldr	r1, [pc, #1464]	; 1104 <accel_copy_permanent_strings+0x654>
     b48:	ldr	r0, [r1]
     b4c:	ldr	r5, [r0, #16]
     b50:	ldr	ip, [r0, #20]
     b54:	lsl	r3, ip, #4
     b58:	add	r3, r3, ip, lsl #3
     b5c:	add	r8, r5, r3
     b60:	cmp	r5, r8
     b64:	beq	c58 <accel_copy_permanent_strings+0x1a8>
     b68:	mov	r1, r5
     b6c:	ldrb	r3, [r1, #8]
     b70:	and	ip, r3, #255	; 0xff
     b74:	cmp	ip, #0
     b78:	beq	c50 <accel_copy_permanent_strings+0x1a0>
     b7c:	ldr	r0, [r5, #20]
     b80:	cmp	r0, #0
     b84:	beq	b90 <accel_copy_permanent_strings+0xe0>
     b88:	blx	sl
     b8c:	str	r0, [r5, #20]
     b90:	ldr	r2, [r5]
     b94:	ldr	r0, [r2, #8]
     b98:	cmp	r0, #0
     b9c:	beq	bac <accel_copy_permanent_strings+0xfc>
     ba0:	blx	sl
     ba4:	ldr	r2, [r5]
     ba8:	str	r0, [r2, #8]
     bac:	ldr	r0, [r5]
     bb0:	ldr	r3, [r0, #28]
     bb4:	cmp	r3, #0
     bb8:	beq	c50 <accel_copy_permanent_strings+0x1a0>
     bbc:	ldr	r1, [r0, #4]
     bc0:	and	ip, r1, #8448	; 0x2100
     bc4:	cmp	ip, #0
     bc8:	beq	c50 <accel_copy_permanent_strings+0x1a0>
     bcc:	ldr	r0, [r0, #20]
     bd0:	add	r2, r0, #1
     bd4:	sub	r7, r3, #12
     bd8:	add	r0, r0, #2
     bdc:	and	r3, r1, #16384	; 0x4000
     be0:	cmp	r3, #0
     be4:	movne	r9, r0
     be8:	moveq	r9, r2
     bec:	mov	r6, #0
     bf0:	cmp	r6, r9
     bf4:	bcs	c50 <accel_copy_permanent_strings+0x1a0>
     bf8:	lsl	r0, r6, #3
     bfc:	add	r3, r0, r6, lsl #2
     c00:	add	ip, r7, r3
     c04:	ldr	r0, [ip, #4]
     c08:	movw	lr, #1023	; 0x3ff
     c0c:	cmp	r0, lr
     c10:	bls	c48 <accel_copy_permanent_strings+0x198>
     c14:	and	r4, r0, #1
     c18:	bic	r0, r0, #3
     c1c:	blx	sl
     c20:	mov	r2, #1
     c24:	mov	r3, #0
     c28:	cmp	r4, #0
     c2c:	movne	r2, r2
     c30:	moveq	r2, r3
     c34:	lsl	r1, r6, #3
     c38:	add	r1, r1, r6, lsl #2
     c3c:	add	ip, r7, r1
     c40:	orr	r1, r0, r2
     c44:	str	r1, [ip, #4]
     c48:	add	r6, r6, #1
     c4c:	b	bf0 <accel_copy_permanent_strings+0x140>
     c50:	add	r5, r5, #24
     c54:	b	b60 <accel_copy_permanent_strings+0xb0>
     c58:	ldr	r1, [pc, #1200]	; 1110 <accel_copy_permanent_strings+0x660>
     c5c:	ldr	ip, [r1]
     c60:	ldr	r4, [ip, #16]
     c64:	ldr	ip, [ip, #20]
     c68:	lsl	r2, ip, #4
     c6c:	add	r1, r2, ip, lsl #3
     c70:	add	r5, r4, r1
     c74:	cmp	r4, r5
     c78:	beq	ddc <accel_copy_permanent_strings+0x32c>
     c7c:	mov	r1, r4
     c80:	ldrb	r2, [r1, #8]
     c84:	and	r1, r2, #255	; 0xff
     c88:	cmp	r1, #0
     c8c:	beq	dd4 <accel_copy_permanent_strings+0x324>
     c90:	ldr	r6, [r4]
     c94:	ldr	r0, [r4, #20]
     c98:	cmp	r0, #0
     c9c:	beq	ca8 <accel_copy_permanent_strings+0x1f8>
     ca0:	blx	sl
     ca4:	str	r0, [r4, #20]
     ca8:	ldr	r0, [r6, #4]
     cac:	cmp	r0, #0
     cb0:	beq	cbc <accel_copy_permanent_strings+0x20c>
     cb4:	blx	sl
     cb8:	str	r0, [r6, #4]
     cbc:	ldr	r8, [r6, #100]	; 0x64
     cc0:	ldr	r2, [r6, #104]	; 0x68
     cc4:	lsl	ip, r2, #4
     cc8:	add	r2, ip, r2, lsl #3
     ccc:	add	r7, r8, r2
     cd0:	cmp	r8, r7
     cd4:	beq	d20 <accel_copy_permanent_strings+0x270>
     cd8:	mov	ip, r8
     cdc:	ldrb	r3, [ip, #8]
     ce0:	and	r2, r3, #255	; 0xff
     ce4:	cmp	r2, #0
     ce8:	beq	d18 <accel_copy_permanent_strings+0x268>
     cec:	ldr	r9, [r8]
     cf0:	ldr	r0, [r8, #20]
     cf4:	cmp	r0, #0
     cf8:	beq	d04 <accel_copy_permanent_strings+0x254>
     cfc:	blx	sl
     d00:	str	r0, [r8, #20]
     d04:	ldr	r0, [r9, #8]
     d08:	cmp	r0, #0
     d0c:	beq	d18 <accel_copy_permanent_strings+0x268>
     d10:	blx	sl
     d14:	str	r0, [r9, #8]
     d18:	add	r8, r8, #24
     d1c:	b	cd0 <accel_copy_permanent_strings+0x220>
     d20:	ldr	r8, [r6, #56]	; 0x38
     d24:	ldr	r0, [r6, #60]	; 0x3c
     d28:	lsl	r3, r0, #4
     d2c:	add	r3, r3, r0, lsl #3
     d30:	add	r7, r8, r3
     d34:	cmp	r8, r7
     d38:	beq	d88 <accel_copy_permanent_strings+0x2d8>
     d3c:	mov	ip, r8
     d40:	ldrb	ip, [ip, #8]
     d44:	and	r0, ip, #255	; 0xff
     d48:	cmp	r0, #0
     d4c:	beq	d80 <accel_copy_permanent_strings+0x2d0>
     d50:	ldr	r0, [r8, #20]
     d54:	cmp	r0, #0
     d58:	beq	d64 <accel_copy_permanent_strings+0x2b4>
     d5c:	blx	sl
     d60:	str	r0, [r8, #20]
     d64:	ldr	r2, [r8]
     d68:	ldr	r0, [r2, #8]
     d6c:	cmp	r0, #0
     d70:	beq	d80 <accel_copy_permanent_strings+0x2d0>
     d74:	blx	sl
     d78:	ldr	ip, [r8]
     d7c:	str	r0, [ip, #8]
     d80:	add	r8, r8, #24
     d84:	b	d34 <accel_copy_permanent_strings+0x284>
     d88:	ldr	r7, [r6, #144]	; 0x90
     d8c:	ldr	ip, [r6, #148]	; 0x94
     d90:	lsl	r3, ip, #4
     d94:	add	r0, r3, ip, lsl #3
     d98:	add	r6, r7, r0
     d9c:	cmp	r7, r6
     da0:	beq	dd4 <accel_copy_permanent_strings+0x324>
     da4:	mov	r0, r7
     da8:	ldrb	r2, [r0, #8]
     dac:	and	r2, r2, #255	; 0xff
     db0:	cmp	r2, #0
     db4:	beq	dcc <accel_copy_permanent_strings+0x31c>
     db8:	ldr	r0, [r7, #20]
     dbc:	cmp	r0, #0
     dc0:	beq	dcc <accel_copy_permanent_strings+0x31c>
     dc4:	blx	sl
     dc8:	str	r0, [r7, #20]
     dcc:	add	r7, r7, #24
     dd0:	b	d9c <accel_copy_permanent_strings+0x2ec>
     dd4:	add	r4, r4, #24
     dd8:	b	c74 <accel_copy_permanent_strings+0x1c4>
     ddc:	ldr	ip, [pc, #828]	; 1120 <accel_copy_permanent_strings+0x670>
     de0:	ldr	r0, [ip]
     de4:	ldr	r4, [r0, #16]
     de8:	ldr	ip, [r0, #20]
     dec:	lsl	r1, ip, #4
     df0:	add	r1, r1, ip, lsl #3
     df4:	add	r5, r4, r1
     df8:	cmp	r4, r5
     dfc:	beq	e84 <accel_copy_permanent_strings+0x3d4>
     e00:	mov	r1, r4
     e04:	ldrb	r0, [r1, #8]
     e08:	and	r0, r0, #255	; 0xff
     e0c:	cmp	r0, #0
     e10:	beq	e7c <accel_copy_permanent_strings+0x3cc>
     e14:	ldr	r0, [r4, #20]
     e18:	cmp	r0, #0
     e1c:	beq	e28 <accel_copy_permanent_strings+0x378>
     e20:	blx	sl
     e24:	str	r0, [r4, #20]
     e28:	ldr	r6, [r4]
     e2c:	ldr	r0, [r6, #16]
     e30:	cmp	r0, #0
     e34:	beq	e40 <accel_copy_permanent_strings+0x390>
     e38:	blx	sl
     e3c:	str	r0, [r6, #16]
     e40:	ldrb	r3, [r6, #8]
     e44:	and	r1, r3, #255	; 0xff
     e48:	cmp	r1, #6
     e4c:	bne	e7c <accel_copy_permanent_strings+0x3cc>
     e50:	ldr	r0, [r6]
     e54:	blx	sl
     e58:	str	r0, [r6]
     e5c:	ldr	ip, [r0, #4]
     e60:	mov	r1, #6
     e64:	movw	r2, #262	; 0x106
     e68:	and	r3, ip, #64	; 0x40
     e6c:	cmp	r3, #0
     e70:	movne	r1, r1
     e74:	moveq	r1, r2
     e78:	str	r1, [r6, #8]
     e7c:	add	r4, r4, #24
     e80:	b	df8 <accel_copy_permanent_strings+0x348>
     e84:	ldr	ip, [pc, #664]	; 1124 <accel_copy_permanent_strings+0x674>
     e88:	ldr	r2, [ip]
     e8c:	ldr	r4, [r2, #16]
     e90:	ldr	ip, [r2, #20]
     e94:	lsl	r3, ip, #4
     e98:	add	r1, r3, ip, lsl #3
     e9c:	add	r5, r4, r1
     ea0:	cmp	r4, r5
     ea4:	beq	f08 <accel_copy_permanent_strings+0x458>
     ea8:	mov	r3, r4
     eac:	ldrb	r0, [r3, #8]
     eb0:	and	r2, r0, #255	; 0xff
     eb4:	cmp	r2, #0
     eb8:	beq	f00 <accel_copy_permanent_strings+0x450>
     ebc:	ldr	r6, [r4]
     ec0:	ldr	ip, [r6]
     ec4:	ldr	r3, [ip, #4]
     ec8:	and	r2, r3, #64	; 0x40
     ecc:	cmp	r2, #0
     ed0:	bne	ee0 <accel_copy_permanent_strings+0x430>
     ed4:	ldr	r3, [ip]
     ed8:	add	r0, r3, #1
     edc:	str	r0, [ip]
     ee0:	ldr	r0, [r6]
     ee4:	blx	sl
     ee8:	str	r0, [r6]
     eec:	ldr	r0, [r4, #20]
     ef0:	cmp	r0, #0
     ef4:	beq	f00 <accel_copy_permanent_strings+0x450>
     ef8:	blx	sl
     efc:	str	r0, [r4, #20]
     f00:	add	r4, r4, #24
     f04:	b	ea0 <accel_copy_permanent_strings+0x3f0>
     f08:	ldr	ip, [pc, #516]	; 1114 <accel_copy_permanent_strings+0x664>
     f0c:	ldr	r4, [ip, #16]
     f10:	ldr	r2, [ip, #20]
     f14:	lsl	r3, r2, #4
     f18:	add	r3, r3, r2, lsl #3
     f1c:	add	r5, r4, r3
     f20:	cmp	r4, r5
     f24:	beq	f58 <accel_copy_permanent_strings+0x4a8>
     f28:	mov	r2, r4
     f2c:	ldrb	ip, [r2, #8]
     f30:	and	r1, ip, #255	; 0xff
     f34:	cmp	r1, #0
     f38:	beq	f50 <accel_copy_permanent_strings+0x4a0>
     f3c:	ldr	r0, [r4, #20]
     f40:	cmp	r0, #0
     f44:	beq	f50 <accel_copy_permanent_strings+0x4a0>
     f48:	blx	sl
     f4c:	str	r0, [r4, #20]
     f50:	add	r4, r4, #24
     f54:	b	f20 <accel_copy_permanent_strings+0x470>
     f58:	ldr	r0, [pc, #428]	; 110c <accel_copy_permanent_strings+0x65c>
     f5c:	ldr	r0, [r0]
     f60:	ldr	r4, [r0, #16]
     f64:	ldr	r1, [r0, #20]
     f68:	lsl	r3, r1, #4
     f6c:	add	r3, r3, r1, lsl #3
     f70:	add	r5, r4, r3
     f74:	cmp	r4, r5
     f78:	beq	fec <accel_copy_permanent_strings+0x53c>
     f7c:	mov	r3, r4
     f80:	ldrb	r0, [r3, #8]
     f84:	and	r1, r0, #255	; 0xff
     f88:	cmp	r1, #0
     f8c:	beq	fe4 <accel_copy_permanent_strings+0x534>
     f90:	ldr	r6, [r4]
     f94:	ldr	r0, [r4, #20]
     f98:	cmp	r0, #0
     f9c:	beq	fa8 <accel_copy_permanent_strings+0x4f8>
     fa0:	blx	sl
     fa4:	str	r0, [r4, #20]
     fa8:	ldr	r0, [r6]
     fac:	cmp	r0, #0
     fb0:	beq	fbc <accel_copy_permanent_strings+0x50c>
     fb4:	blx	sl
     fb8:	str	r0, [r6]
     fbc:	ldr	r0, [r6, #20]
     fc0:	cmp	r0, #0
     fc4:	beq	fd0 <accel_copy_permanent_strings+0x520>
     fc8:	blx	sl
     fcc:	str	r0, [r6, #20]
     fd0:	ldr	r0, [r6, #24]
     fd4:	cmp	r0, #0
     fd8:	beq	fe4 <accel_copy_permanent_strings+0x534>
     fdc:	blx	sl
     fe0:	str	r0, [r6, #24]
     fe4:	add	r4, r4, #24
     fe8:	b	f74 <accel_copy_permanent_strings+0x4c4>
     fec:	bl	0 <php_get_stream_filters_hash_global>
     ff0:	ldr	r4, [r0, #16]
     ff4:	ldr	r1, [r0, #20]
     ff8:	lsl	r2, r1, #4
     ffc:	add	r0, r2, r1, lsl #3
    1000:	add	r5, r4, r0
    1004:	cmp	r4, r5
    1008:	beq	103c <accel_copy_permanent_strings+0x58c>
    100c:	mov	r0, r4
    1010:	ldrb	r1, [r0, #8]
    1014:	and	ip, r1, #255	; 0xff
    1018:	cmp	ip, #0
    101c:	beq	1034 <accel_copy_permanent_strings+0x584>
    1020:	ldr	r0, [r4, #20]
    1024:	cmp	r0, #0
    1028:	beq	1034 <accel_copy_permanent_strings+0x584>
    102c:	blx	sl
    1030:	str	r0, [r4, #20]
    1034:	add	r4, r4, #24
    1038:	b	1004 <accel_copy_permanent_strings+0x554>
    103c:	bl	0 <php_stream_get_url_stream_wrappers_hash_global>
    1040:	ldr	r4, [r0, #16]
    1044:	ldr	r2, [r0, #20]
    1048:	lsl	r1, r2, #4
    104c:	add	r0, r1, r2, lsl #3
    1050:	add	r5, r4, r0
    1054:	cmp	r4, r5
    1058:	beq	108c <accel_copy_permanent_strings+0x5dc>
    105c:	mov	r2, r4
    1060:	ldrb	r2, [r2, #8]
    1064:	and	r3, r2, #255	; 0xff
    1068:	cmp	r3, #0
    106c:	beq	1084 <accel_copy_permanent_strings+0x5d4>
    1070:	ldr	r0, [r4, #20]
    1074:	cmp	r0, #0
    1078:	beq	1084 <accel_copy_permanent_strings+0x5d4>
    107c:	blx	sl
    1080:	str	r0, [r4, #20]
    1084:	add	r4, r4, #24
    1088:	b	1054 <accel_copy_permanent_strings+0x5a4>
    108c:	bl	0 <php_stream_xport_get_hash>
    1090:	ldr	r4, [r0, #16]
    1094:	ldr	ip, [r0, #20]
    1098:	lsl	r0, ip, #4
    109c:	add	ip, r0, ip, lsl #3
    10a0:	add	r5, r4, ip
    10a4:	cmp	r4, r5
    10a8:	beq	10dc <accel_copy_permanent_strings+0x62c>
    10ac:	mov	r3, r4
    10b0:	ldrb	r2, [r3, #8]
    10b4:	and	r2, r2, #255	; 0xff
    10b8:	cmp	r2, #0
    10bc:	beq	10d4 <accel_copy_permanent_strings+0x624>
    10c0:	ldr	r0, [r4, #20]
    10c4:	cmp	r0, #0
    10c8:	beq	10d4 <accel_copy_permanent_strings+0x624>
    10cc:	blx	sl
    10d0:	str	r0, [r4, #20]
    10d4:	add	r4, r4, #24
    10d8:	b	10a4 <accel_copy_permanent_strings+0x5f4>
    10dc:	ldr	r4, [sp, #8]
    10e0:	ldr	r5, [sp, #12]
    10e4:	ldr	r6, [sp, #16]
    10e8:	ldr	r7, [sp, #20]
    10ec:	ldr	r8, [sp, #24]
    10f0:	ldr	r9, [sp, #28]
    10f4:	ldr	sl, [sp, #32]
    10f8:	ldr	lr, [sp, #4]
    10fc:	add	sp, sp, #40	; 0x28
    1100:	bx	lr
    1104:	.word	0x00000020
    1108:	.word	0x00000000
    110c:	.word	0x00000210
    1110:	.word	0x00000024
	...
    1120:	.word	0x00000114
    1124:	.word	0x00000054

00001128 <accel_replace_string_by_shm_permanent>:
    1128:	mov	ip, sp
    112c:	sub	sp, sp, #40	; 0x28
    1130:	str	ip, [sp]
    1134:	str	lr, [sp, #4]
    1138:	str	r4, [sp, #8]
    113c:	str	r5, [sp, #12]
    1140:	str	r6, [sp, #16]
    1144:	str	r7, [sp, #20]
    1148:	mov	r4, r0
    114c:	mov	r5, r4
    1150:	ldr	r2, [pc, #520]	; 1360 <accel_replace_string_by_shm_permanent+0x238>
    1154:	ldr	r0, [r2]
    1158:	ldr	r1, [r0, #96]	; 0x60
    115c:	cmp	r5, r1
    1160:	bcc	1178 <accel_replace_string_by_shm_permanent+0x50>
    1164:	ldr	r3, [r0, #100]	; 0x64
    1168:	cmp	r5, r3
    116c:	bcs	1178 <accel_replace_string_by_shm_permanent+0x50>
    1170:	mov	r6, r5
    1174:	b	12dc <accel_replace_string_by_shm_permanent+0x1b4>
    1178:	ldr	ip, [pc, #464]	; 1350 <accel_replace_string_by_shm_permanent+0x228>
    117c:	ldr	r1, [ip]
    1180:	cmp	r1, #0
    1184:	bne	122c <accel_replace_string_by_shm_permanent+0x104>
    1188:	ldr	r0, [pc, #452]	; 1354 <accel_replace_string_by_shm_permanent+0x22c>
    118c:	ldrb	ip, [r0]
    1190:	cmp	ip, #0
    1194:	beq	1224 <accel_replace_string_by_shm_permanent+0xfc>
    1198:	mov	r3, #0
    119c:	strh	r3, [sp, #24]
    11a0:	mov	r2, #0
    11a4:	strh	r2, [sp, #26]
    11a8:	mov	r2, #1
    11ac:	str	r2, [sp, #28]
    11b0:	mov	r0, #1
    11b4:	str	r0, [sp, #32]
    11b8:	ldr	r2, [pc, #408]	; 1358 <accel_replace_string_by_shm_permanent+0x230>
    11bc:	ldr	r0, [r2]
    11c0:	mov	r1, #6
    11c4:	add	r2, sp, #24
    11c8:	bl	0 <fcntl>
    11cc:	cmn	r0, #1
    11d0:	bne	1208 <accel_replace_string_by_shm_permanent+0xe0>
    11d4:	bl	0 <__errno_location>
    11d8:	ldr	r0, [r0]
    11dc:	bl	0 <strerror>
    11e0:	mov	r6, r0
    11e4:	bl	0 <__errno_location>
    11e8:	mov	r2, r0
    11ec:	mov	r0, #4
    11f0:	ldr	r1, [pc, #356]	; 135c <accel_replace_string_by_shm_permanent+0x234>
    11f4:	ldr	r3, [r2]
    11f8:	mov	r2, r6
    11fc:	bl	0 <zend_accel_error>
    1200:	mvn	r1, #0
    1204:	b	120c <accel_replace_string_by_shm_permanent+0xe4>
    1208:	mov	r1, #0
    120c:	cmn	r1, #1
    1210:	beq	1224 <accel_replace_string_by_shm_permanent+0xfc>
    1214:	ldr	r2, [pc, #308]	; 1350 <accel_replace_string_by_shm_permanent+0x228>
    1218:	mov	r0, #1
    121c:	str	r0, [r2]
    1220:	b	122c <accel_replace_string_by_shm_permanent+0x104>
    1224:	mov	r6, #0
    1228:	b	12dc <accel_replace_string_by_shm_permanent+0x1b4>
    122c:	mov	r0, r5
    1230:	ldr	r3, [r0, #8]
    1234:	cmp	r3, #0
    1238:	bne	1244 <accel_replace_string_by_shm_permanent+0x11c>
    123c:	bl	0 <zend_string_hash_func>
    1240:	b	1248 <accel_replace_string_by_shm_permanent+0x120>
    1244:	mov	r0, r3
    1248:	mov	r7, r0
    124c:	ldr	r3, [pc, #268]	; 1360 <accel_replace_string_by_shm_permanent+0x238>
    1250:	ldr	r3, [r3]
    1254:	ldr	r0, [r3, #88]	; 0x58
    1258:	and	ip, r7, r0
    125c:	add	r1, r3, ip
    1260:	ldr	ip, [r1, #112]	; 0x70
    1264:	cmp	ip, #0
    1268:	beq	12d8 <accel_replace_string_by_shm_permanent+0x1b0>
    126c:	ldr	r0, [pc, #236]	; 1360 <accel_replace_string_by_shm_permanent+0x238>
    1270:	ldr	r0, [r0]
    1274:	add	r0, r0, ip
    1278:	add	r6, r0, #88	; 0x58
    127c:	ldr	ip, [r0, #96]	; 0x60
    1280:	cmp	ip, r7
    1284:	bne	12c8 <accel_replace_string_by_shm_permanent+0x1a0>
    1288:	ldr	r2, [r0, #100]	; 0x64
    128c:	ldr	r1, [r5, #12]
    1290:	cmp	r2, r1
    1294:	bne	12b8 <accel_replace_string_by_shm_permanent+0x190>
    1298:	mov	r3, r5
    129c:	add	r0, r0, #104	; 0x68
    12a0:	add	r1, r3, #16
    12a4:	bl	0 <memcmp>
    12a8:	cmp	r0, #0
    12ac:	moveq	r1, #1
    12b0:	movne	r1, #0
    12b4:	b	12bc <accel_replace_string_by_shm_permanent+0x194>
    12b8:	mov	r1, #0
    12bc:	and	ip, r1, #255	; 0xff
    12c0:	cmp	ip, #0
    12c4:	bne	12dc <accel_replace_string_by_shm_permanent+0x1b4>
    12c8:	sub	lr, r6, #4096	; 0x1000
    12cc:	ldr	ip, [lr, #4092]	; 0xffc
    12d0:	cmp	ip, #0
    12d4:	bne	126c <accel_replace_string_by_shm_permanent+0x144>
    12d8:	mov	r6, #0
    12dc:	cmp	r6, #0
    12e0:	beq	132c <accel_replace_string_by_shm_permanent+0x204>
    12e4:	mov	r0, r4
    12e8:	ldr	ip, [r0, #4]
    12ec:	and	r3, ip, #64	; 0x40
    12f0:	cmp	r3, #0
    12f4:	bne	1330 <accel_replace_string_by_shm_permanent+0x208>
    12f8:	ldr	r1, [r0]
    12fc:	sub	r1, r1, #1
    1300:	str	r1, [r0]
    1304:	cmp	r1, #0
    1308:	bne	1330 <accel_replace_string_by_shm_permanent+0x208>
    130c:	ldr	r1, [r0, #4]
    1310:	and	r2, r1, #128	; 0x80
    1314:	cmp	r2, #0
    1318:	bne	1324 <accel_replace_string_by_shm_permanent+0x1fc>
    131c:	bl	0 <_efree>
    1320:	b	1330 <accel_replace_string_by_shm_permanent+0x208>
    1324:	bl	0 <free>
    1328:	b	1330 <accel_replace_string_by_shm_permanent+0x208>
    132c:	mov	r6, r4
    1330:	mov	r0, r6
    1334:	ldr	r4, [sp, #8]
    1338:	ldr	r5, [sp, #12]
    133c:	ldr	r6, [sp, #16]
    1340:	ldr	r7, [sp, #20]
    1344:	ldr	lr, [sp, #4]
    1348:	add	sp, sp, #40	; 0x28
    134c:	bx	lr
    1350:	.word	0x00000000
    1354:	.word	0x00000006
    1358:	.word	0x00000000
    135c:	.word	0x00000b9a
    1360:	.word	0x00000000

00001364 <zend_get_stream_timestamp>:
    1364:	mov	ip, sp
    1368:	sub	sp, sp, #520	; 0x208
    136c:	str	ip, [sp, #4]
    1370:	str	lr, [sp, #8]
    1374:	str	r4, [sp, #16]
    1378:	str	r5, [sp, #20]
    137c:	str	r6, [sp, #24]
    1380:	str	r7, [sp, #28]
    1384:	str	r8, [sp, #32]
    1388:	mov	r5, r1
    138c:	mov	r6, r0
    1390:	cmp	r6, #0
    1394:	bne	13a0 <zend_get_stream_timestamp+0x3c>
    1398:	mvn	r0, #0
    139c:	b	1488 <zend_get_stream_timestamp+0x124>
    13a0:	mov	r1, #0
    13a4:	mov	r2, #64	; 0x40
    13a8:	mov	r0, r6
    13ac:	bl	0 <php_stream_locate_url_wrapper>
    13b0:	mov	r4, r0
    13b4:	cmp	r4, #0
    13b8:	bne	13c4 <zend_get_stream_timestamp+0x60>
    13bc:	mvn	r0, #0
    13c0:	b	1488 <zend_get_stream_timestamp+0x124>
    13c4:	ldr	r0, [r4]
    13c8:	cmp	r0, #0
    13cc:	beq	147c <zend_get_stream_timestamp+0x118>
    13d0:	ldr	r1, [r0, #12]
    13d4:	cmp	r1, #0
    13d8:	beq	147c <zend_get_stream_timestamp+0x118>
    13dc:	ldr	r1, [pc, #200]	; 14ac <zend_get_stream_timestamp+0x148>
    13e0:	ldr	r7, [r1]
    13e4:	mov	r3, #0
    13e8:	str	r3, [r1]
    13ec:	ldr	r2, [pc, #180]	; 14a8 <zend_get_stream_timestamp+0x144>
    13f0:	ldr	r8, [r2]
    13f4:	add	r0, sp, #128	; 0x80
    13f8:	str	r0, [r2]
    13fc:	add	r0, sp, #128	; 0x80
    1400:	bl	0 <_setjmp>
    1404:	cmp	r0, #0
    1408:	bne	1434 <zend_get_stream_timestamp+0xd0>
    140c:	ldr	ip, [r4]
    1410:	ldr	ip, [ip, #12]
    1414:	mov	r2, #2
    1418:	add	r3, sp, #40	; 0x28
    141c:	mov	r0, #0
    1420:	str	r0, [sp]
    1424:	mov	r1, r6
    1428:	mov	r0, r4
    142c:	blx	ip
    1430:	b	1438 <zend_get_stream_timestamp+0xd4>
    1434:	mvn	r0, #0
    1438:	ldr	r1, [pc, #104]	; 14a8 <zend_get_stream_timestamp+0x144>
    143c:	str	r8, [r1]
    1440:	ldr	r2, [pc, #100]	; 14ac <zend_get_stream_timestamp+0x148>
    1444:	str	r7, [r2]
    1448:	cmp	r0, #0
    144c:	beq	1458 <zend_get_stream_timestamp+0xf4>
    1450:	mvn	r0, #0
    1454:	b	1488 <zend_get_stream_timestamp+0x124>
    1458:	add	r2, sp, #40	; 0x28
    145c:	mov	r3, r5
    1460:	mov	lr, #22
    1464:	ldr	ip, [r2], #4
    1468:	subs	lr, lr, #1
    146c:	str	ip, [r3], #4
    1470:	bne	1464 <zend_get_stream_timestamp+0x100>
    1474:	mov	r0, #0
    1478:	b	1488 <zend_get_stream_timestamp+0x124>
    147c:	mov	r3, #1
    1480:	str	r3, [r5, #64]	; 0x40
    1484:	mov	r0, #0
    1488:	ldr	r4, [sp, #16]
    148c:	ldr	r5, [sp, #20]
    1490:	ldr	r6, [sp, #24]
    1494:	ldr	r7, [sp, #28]
    1498:	ldr	r8, [sp, #32]
    149c:	ldr	lr, [sp, #8]
    14a0:	add	sp, sp, #520	; 0x208
    14a4:	bx	lr
    14a8:	.word	0x00000100
    14ac:	.word	0x00000104

000014b0 <zend_get_file_handle_timestamp>:
    14b0:	mov	ip, sp
    14b4:	sub	sp, sp, #592	; 0x250
    14b8:	str	ip, [sp]
    14bc:	str	lr, [sp, #4]
    14c0:	str	r4, [sp, #8]
    14c4:	str	r5, [sp, #12]
    14c8:	str	r6, [sp, #16]
    14cc:	str	r7, [sp, #20]
    14d0:	mov	r4, r1
    14d4:	mov	r5, r0
    14d8:	ldr	r2, [pc, #648]	; 1768 <zend_get_file_handle_timestamp+0x2b8>
    14dc:	ldr	ip, [r2]
    14e0:	cmp	ip, #0
    14e4:	beq	1530 <zend_get_file_handle_timestamp+0x80>
    14e8:	ldr	r0, [pc, #640]	; 1770 <zend_get_file_handle_timestamp+0x2c0>
    14ec:	ldr	r3, [r0]
    14f0:	cmp	r3, #0
    14f4:	bne	1530 <zend_get_file_handle_timestamp+0x80>
    14f8:	ldr	r2, [r5, #20]
    14fc:	ldr	r1, [pc, #616]	; 176c <zend_get_file_handle_timestamp+0x2bc>
    1500:	ldr	r0, [r1]
    1504:	cmp	r2, r0
    1508:	bne	1530 <zend_get_file_handle_timestamp+0x80>
    150c:	blx	ip
    1510:	cmp	r0, #0
    1514:	beq	1530 <zend_get_file_handle_timestamp+0x80>
    1518:	cmp	r4, #0
    151c:	beq	1528 <zend_get_file_handle_timestamp+0x78>
    1520:	ldr	ip, [r0, #44]	; 0x2c
    1524:	str	ip, [r4]
    1528:	ldr	r0, [r0, #64]	; 0x40
    152c:	b	174c <zend_get_file_handle_timestamp+0x29c>
    1530:	ldr	ip, [r5, #28]
    1534:	cmp	ip, #0
    1538:	beq	1640 <zend_get_file_handle_timestamp+0x190>
    153c:	cmp	ip, #1
    1540:	beq	160c <zend_get_file_handle_timestamp+0x15c>
    1544:	cmp	ip, #2
    1548:	bne	1604 <zend_get_file_handle_timestamp+0x154>
    154c:	ldr	r5, [r5]
    1550:	cmp	r5, #0
    1554:	beq	15fc <zend_get_file_handle_timestamp+0x14c>
    1558:	ldr	r0, [r5]
    155c:	cmp	r0, #0
    1560:	beq	15fc <zend_get_file_handle_timestamp+0x14c>
    1564:	ldr	r1, [r0, #28]
    1568:	cmp	r1, #0
    156c:	beq	15fc <zend_get_file_handle_timestamp+0x14c>
    1570:	ldr	r1, [pc, #512]	; 1778 <zend_get_file_handle_timestamp+0x2c8>
    1574:	ldr	r6, [r1]
    1578:	mov	r3, #0
    157c:	str	r3, [r1]
    1580:	ldr	r0, [pc, #492]	; 1774 <zend_get_file_handle_timestamp+0x2c4>
    1584:	ldr	r7, [r0]
    1588:	add	r1, sp, #200	; 0xc8
    158c:	str	r1, [r0]
    1590:	add	r0, sp, #200	; 0xc8
    1594:	bl	0 <_setjmp>
    1598:	cmp	r0, #0
    159c:	bne	15b8 <zend_get_file_handle_timestamp+0x108>
    15a0:	ldr	r1, [r5]
    15a4:	ldr	ip, [r1, #28]
    15a8:	add	r1, sp, #112	; 0x70
    15ac:	mov	r0, r5
    15b0:	blx	ip
    15b4:	b	15bc <zend_get_file_handle_timestamp+0x10c>
    15b8:	mvn	r0, #0
    15bc:	ldr	r2, [pc, #432]	; 1774 <zend_get_file_handle_timestamp+0x2c4>
    15c0:	str	r7, [r2]
    15c4:	ldr	r2, [pc, #428]	; 1778 <zend_get_file_handle_timestamp+0x2c8>
    15c8:	str	r6, [r2]
    15cc:	cmp	r0, #0
    15d0:	beq	15dc <zend_get_file_handle_timestamp+0x12c>
    15d4:	mov	r0, #0
    15d8:	b	174c <zend_get_file_handle_timestamp+0x29c>
    15dc:	add	r2, sp, #112	; 0x70
    15e0:	add	r3, sp, #24
    15e4:	mov	lr, #22
    15e8:	ldr	ip, [r2], #4
    15ec:	subs	lr, lr, #1
    15f0:	str	ip, [r3], #4
    15f4:	bne	15e8 <zend_get_file_handle_timestamp+0x138>
    15f8:	b	1738 <zend_get_file_handle_timestamp+0x288>
    15fc:	mov	r0, #0
    1600:	b	174c <zend_get_file_handle_timestamp+0x29c>
    1604:	mov	r0, #0
    1608:	b	174c <zend_get_file_handle_timestamp+0x29c>
    160c:	ldr	r0, [r5]
    1610:	bl	0 <fileno>
    1614:	add	r1, sp, #24
    1618:	bl	0 <fstat>
    161c:	cmn	r0, #1
    1620:	bne	1738 <zend_get_file_handle_timestamp+0x288>
    1624:	ldr	r0, [r5, #20]
    1628:	add	r1, sp, #24
    162c:	bl	1364 <zend_get_stream_timestamp>
    1630:	cmp	r0, #0
    1634:	beq	1738 <zend_get_file_handle_timestamp+0x288>
    1638:	mov	r0, #0
    163c:	b	174c <zend_get_file_handle_timestamp+0x29c>
    1640:	ldr	r3, [r5, #24]
    1644:	cmp	r3, #0
    1648:	beq	171c <zend_get_file_handle_timestamp+0x26c>
    164c:	add	r6, r3, #16
    1650:	mov	r3, r6
    1654:	ldrb	r0, [r3]
    1658:	cmp	r0, #97	; 0x61
    165c:	blt	1668 <zend_get_file_handle_timestamp+0x1b8>
    1660:	cmp	r0, #122	; 0x7a
    1664:	ble	1714 <zend_get_file_handle_timestamp+0x264>
    1668:	ldrb	ip, [r3]
    166c:	cmp	ip, #65	; 0x41
    1670:	blt	167c <zend_get_file_handle_timestamp+0x1cc>
    1674:	cmp	ip, #90	; 0x5a
    1678:	ble	1714 <zend_get_file_handle_timestamp+0x264>
    167c:	ldrb	r1, [r3]
    1680:	cmp	r1, #48	; 0x30
    1684:	blt	1690 <zend_get_file_handle_timestamp+0x1e0>
    1688:	cmp	r1, #57	; 0x39
    168c:	ble	1714 <zend_get_file_handle_timestamp+0x264>
    1690:	ldrb	r2, [r3]
    1694:	cmp	r2, #43	; 0x2b
    1698:	beq	1714 <zend_get_file_handle_timestamp+0x264>
    169c:	cmp	r2, #45	; 0x2d
    16a0:	beq	1714 <zend_get_file_handle_timestamp+0x264>
    16a4:	cmp	r2, #46	; 0x2e
    16a8:	beq	1714 <zend_get_file_handle_timestamp+0x264>
    16ac:	cmp	r3, r6
    16b0:	beq	16dc <zend_get_file_handle_timestamp+0x22c>
    16b4:	cmp	r2, #58	; 0x3a
    16b8:	bne	16dc <zend_get_file_handle_timestamp+0x22c>
    16bc:	ldrb	ip, [r3, #1]
    16c0:	cmp	ip, #47	; 0x2f
    16c4:	bne	16dc <zend_get_file_handle_timestamp+0x22c>
    16c8:	ldrb	r3, [r3, #2]
    16cc:	cmp	r3, #47	; 0x2f
    16d0:	moveq	ip, #1
    16d4:	movne	ip, #0
    16d8:	b	16e0 <zend_get_file_handle_timestamp+0x230>
    16dc:	mov	ip, #0
    16e0:	cmp	ip, #0
    16e4:	beq	16fc <zend_get_file_handle_timestamp+0x24c>
    16e8:	add	r1, sp, #24
    16ec:	mov	r0, r6
    16f0:	bl	1364 <zend_get_stream_timestamp>
    16f4:	cmp	r0, #0
    16f8:	beq	1738 <zend_get_file_handle_timestamp+0x288>
    16fc:	add	r1, sp, #24
    1700:	mov	r0, r6
    1704:	bl	0 <stat>
    1708:	cmn	r0, #1
    170c:	bne	1738 <zend_get_file_handle_timestamp+0x288>
    1710:	b	171c <zend_get_file_handle_timestamp+0x26c>
    1714:	add	r3, r3, #1
    1718:	b	1654 <zend_get_file_handle_timestamp+0x1a4>
    171c:	ldr	r0, [r5, #20]
    1720:	add	r1, sp, #24
    1724:	bl	1364 <zend_get_stream_timestamp>
    1728:	cmp	r0, #0
    172c:	beq	1738 <zend_get_file_handle_timestamp+0x288>
    1730:	mov	r0, #0
    1734:	b	174c <zend_get_file_handle_timestamp+0x29c>
    1738:	cmp	r4, #0
    173c:	beq	1748 <zend_get_file_handle_timestamp+0x298>
    1740:	ldr	r0, [sp, #68]	; 0x44
    1744:	str	r0, [r4]
    1748:	ldr	r0, [sp, #88]	; 0x58
    174c:	ldr	r4, [sp, #8]
    1750:	ldr	r5, [sp, #12]
    1754:	ldr	r6, [sp, #16]
    1758:	ldr	r7, [sp, #20]
    175c:	ldr	lr, [sp, #4]
    1760:	add	sp, sp, #592	; 0x250
    1764:	bx	lr
    1768:	.word	0x00000020
    176c:	.word	0x00000014
    1770:	.word	0x00000128
    1774:	.word	0x00000100
    1778:	.word	0x00000104

0000177c <validate_timestamp_and_record>:
    177c:	mov	ip, sp
    1780:	sub	sp, sp, #72	; 0x48
    1784:	str	ip, [sp]
    1788:	str	lr, [sp, #4]
    178c:	str	r4, [sp, #8]
    1790:	str	r5, [sp, #12]
    1794:	str	r6, [sp, #16]
    1798:	mov	r4, r1
    179c:	mov	r5, r0
    17a0:	ldr	ip, [r5, #240]	; 0xf0
    17a4:	cmp	ip, #0
    17a8:	beq	1a48 <validate_timestamp_and_record+0x2cc>
    17ac:	ldr	r3, [pc, #692]	; 1a68 <validate_timestamp_and_record+0x2ec>
    17b0:	ldr	r2, [r3]
    17b4:	cmp	r2, #0
    17b8:	beq	17d8 <validate_timestamp_and_record+0x5c>
    17bc:	ldr	r3, [r5, #280]	; 0x118
    17c0:	ldr	r0, [pc, #676]	; 1a6c <validate_timestamp_and_record+0x2f0>
    17c4:	ldr	r0, [r0]
    17c8:	cmp	r3, r0
    17cc:	blt	17d8 <validate_timestamp_and_record+0x5c>
    17d0:	mov	r0, #0
    17d4:	b	1a4c <validate_timestamp_and_record+0x2d0>
    17d8:	mov	r6, #0
    17dc:	ldr	ip, [r4, #24]
    17e0:	cmp	ip, #0
    17e4:	bne	18a0 <validate_timestamp_and_record+0x124>
    17e8:	ldr	r0, [r4, #20]
    17ec:	bl	0 <strlen>
    17f0:	ldr	r1, [pc, #620]	; 1a64 <validate_timestamp_and_record+0x2e8>
    17f4:	ldr	ip, [r1]
    17f8:	ldr	r3, [r4, #20]
    17fc:	mov	r1, r0
    1800:	mov	r0, r3
    1804:	blx	ip
    1808:	mov	r6, r0
    180c:	cmp	r6, #0
    1810:	beq	1898 <validate_timestamp_and_record+0x11c>
    1814:	ldr	r0, [r5]
    1818:	cmp	r0, r6
    181c:	beq	1898 <validate_timestamp_and_record+0x11c>
    1820:	mov	r1, r6
    1824:	ldr	r2, [r0, #12]
    1828:	ldr	r3, [r1, #12]
    182c:	cmp	r2, r3
    1830:	bne	1850 <validate_timestamp_and_record+0xd4>
    1834:	add	r0, r0, #16
    1838:	add	r1, r1, #16
    183c:	bl	0 <memcmp>
    1840:	cmp	r0, #0
    1844:	moveq	r1, #1
    1848:	movne	r1, #0
    184c:	b	1854 <validate_timestamp_and_record+0xd8>
    1850:	mov	r1, #0
    1854:	and	r1, r1, #255	; 0xff
    1858:	eor	r1, r1, #1
    185c:	cmp	r1, #0
    1860:	beq	1898 <validate_timestamp_and_record+0x11c>
    1864:	mov	r0, r6
    1868:	ldr	r3, [r0, #4]
    186c:	and	r1, r3, #64	; 0x40
    1870:	cmp	r1, #0
    1874:	bne	1890 <validate_timestamp_and_record+0x114>
    1878:	ldr	r1, [r0]
    187c:	sub	ip, r1, #1
    1880:	str	ip, [r0]
    1884:	cmp	ip, #0
    1888:	bne	1890 <validate_timestamp_and_record+0x114>
    188c:	bl	0 <_efree>
    1890:	mvn	r2, #0
    1894:	b	1a18 <validate_timestamp_and_record+0x29c>
    1898:	str	r6, [r4, #24]
    189c:	b	18f4 <validate_timestamp_and_record+0x178>
    18a0:	ldr	r0, [r5]
    18a4:	cmp	r0, ip
    18a8:	beq	18f4 <validate_timestamp_and_record+0x178>
    18ac:	ldr	r2, [r0, #12]
    18b0:	ldr	r1, [ip, #12]
    18b4:	cmp	r2, r1
    18b8:	bne	18d8 <validate_timestamp_and_record+0x15c>
    18bc:	add	r0, r0, #16
    18c0:	add	r1, ip, #16
    18c4:	bl	0 <memcmp>
    18c8:	cmp	r0, #0
    18cc:	moveq	r0, #1
    18d0:	movne	r0, #0
    18d4:	b	18dc <validate_timestamp_and_record+0x160>
    18d8:	mov	r0, #0
    18dc:	and	r2, r0, #255	; 0xff
    18e0:	eor	r0, r2, #1
    18e4:	cmp	r0, #0
    18e8:	beq	18f4 <validate_timestamp_and_record+0x178>
    18ec:	mvn	r2, #0
    18f0:	b	1a18 <validate_timestamp_and_record+0x29c>
    18f4:	ldr	r1, [r5, #240]	; 0xf0
    18f8:	cmp	r1, #0
    18fc:	bne	1944 <validate_timestamp_and_record+0x1c8>
    1900:	cmp	r6, #0
    1904:	beq	193c <validate_timestamp_and_record+0x1c0>
    1908:	ldr	ip, [r6, #4]
    190c:	and	r2, ip, #64	; 0x40
    1910:	cmp	r2, #0
    1914:	bne	1934 <validate_timestamp_and_record+0x1b8>
    1918:	ldr	r1, [r6]
    191c:	sub	r1, r1, #1
    1920:	str	r1, [r6]
    1924:	cmp	r1, #0
    1928:	bne	1934 <validate_timestamp_and_record+0x1b8>
    192c:	mov	r0, r6
    1930:	bl	0 <_efree>
    1934:	mov	ip, #0
    1938:	str	ip, [r4, #24]
    193c:	mvn	r2, #0
    1940:	b	1a18 <validate_timestamp_and_record+0x29c>
    1944:	mov	r1, #0
    1948:	mov	r0, r4
    194c:	bl	14b0 <zend_get_file_handle_timestamp>
    1950:	ldr	r1, [r5, #240]	; 0xf0
    1954:	cmp	r0, r1
    1958:	bne	19a0 <validate_timestamp_and_record+0x224>
    195c:	cmp	r6, #0
    1960:	beq	1998 <validate_timestamp_and_record+0x21c>
    1964:	ldr	r2, [r6, #4]
    1968:	and	ip, r2, #64	; 0x40
    196c:	cmp	ip, #0
    1970:	bne	1990 <validate_timestamp_and_record+0x214>
    1974:	ldr	r0, [r6]
    1978:	sub	r3, r0, #1
    197c:	str	r3, [r6]
    1980:	cmp	r3, #0
    1984:	bne	1990 <validate_timestamp_and_record+0x214>
    1988:	mov	r0, r6
    198c:	bl	0 <_efree>
    1990:	mov	r3, #0
    1994:	str	r3, [r4, #24]
    1998:	mov	r2, #0
    199c:	b	1a18 <validate_timestamp_and_record+0x29c>
    19a0:	cmp	r6, #0
    19a4:	beq	19dc <validate_timestamp_and_record+0x260>
    19a8:	mov	r0, r6
    19ac:	ldr	r1, [r0, #4]
    19b0:	and	r1, r1, #64	; 0x40
    19b4:	cmp	r1, #0
    19b8:	bne	19d4 <validate_timestamp_and_record+0x258>
    19bc:	ldr	r1, [r0]
    19c0:	sub	r2, r1, #1
    19c4:	str	r2, [r0]
    19c8:	cmp	r2, #0
    19cc:	bne	19d4 <validate_timestamp_and_record+0x258>
    19d0:	bl	0 <_efree>
    19d4:	mov	r3, #0
    19d8:	str	r3, [r4, #24]
    19dc:	add	r0, sp, #24
    19e0:	ldr	r2, [r5]
    19e4:	add	r1, r2, #16
    19e8:	bl	0 <zend_stream_init_filename>
    19ec:	ldr	r2, [r5]
    19f0:	str	r2, [sp, #48]	; 0x30
    19f4:	add	r0, sp, #24
    19f8:	mov	r1, #0
    19fc:	bl	14b0 <zend_get_file_handle_timestamp>
    1a00:	ldr	r2, [r5, #240]	; 0xf0
    1a04:	cmp	r0, r2
    1a08:	bne	1a14 <validate_timestamp_and_record+0x298>
    1a0c:	mov	r2, #0
    1a10:	b	1a18 <validate_timestamp_and_record+0x29c>
    1a14:	mvn	r2, #0
    1a18:	cmn	r2, #1
    1a1c:	beq	1a40 <validate_timestamp_and_record+0x2c4>
    1a20:	ldr	ip, [pc, #68]	; 1a6c <validate_timestamp_and_record+0x2f0>
    1a24:	ldr	r3, [ip]
    1a28:	ldr	r1, [pc, #56]	; 1a68 <validate_timestamp_and_record+0x2ec>
    1a2c:	ldr	r2, [r1]
    1a30:	add	ip, r3, r2
    1a34:	str	ip, [r5, #280]	; 0x118
    1a38:	mov	r0, #0
    1a3c:	b	1a4c <validate_timestamp_and_record+0x2d0>
    1a40:	mvn	r0, #0
    1a44:	b	1a4c <validate_timestamp_and_record+0x2d0>
    1a48:	mov	r0, #0
    1a4c:	ldr	r4, [sp, #8]
    1a50:	ldr	r5, [sp, #12]
    1a54:	ldr	r6, [sp, #16]
    1a58:	ldr	lr, [sp, #4]
    1a5c:	add	sp, sp, #72	; 0x48
    1a60:	bx	lr
    1a64:	.word	0x00000008
    1a68:	.word	0x00000060
    1a6c:	.word	0x000000fc

00001a70 <validate_timestamp_and_record_ex>:
    1a70:	mov	ip, sp
    1a74:	sub	sp, sp, #16
    1a78:	str	ip, [sp]
    1a7c:	str	lr, [sp, #4]
    1a80:	str	r4, [sp, #8]
    1a84:	str	r5, [sp, #12]
    1a88:	mov	r4, r1
    1a8c:	mov	r5, r0
    1a90:	ldr	r0, [pc, #80]	; 1ae8 <validate_timestamp_and_record_ex+0x78>
    1a94:	ldrb	r2, [r0]
    1a98:	cmp	r2, #0
    1a9c:	beq	1aa8 <validate_timestamp_and_record_ex+0x38>
    1aa0:	mov	r0, #0
    1aa4:	bl	0 <zend_accel_shared_protect>
    1aa8:	mov	r1, r4
    1aac:	mov	r0, r5
    1ab0:	bl	177c <validate_timestamp_and_record>
    1ab4:	mov	r4, r0
    1ab8:	ldr	ip, [pc, #40]	; 1ae8 <validate_timestamp_and_record_ex+0x78>
    1abc:	ldrb	r1, [ip]
    1ac0:	cmp	r1, #0
    1ac4:	beq	1ad0 <validate_timestamp_and_record_ex+0x60>
    1ac8:	mov	r0, #1
    1acc:	bl	0 <zend_accel_shared_protect>
    1ad0:	mov	r0, r4
    1ad4:	ldr	r4, [sp, #8]
    1ad8:	ldr	r5, [sp, #12]
    1adc:	ldr	lr, [sp, #4]
    1ae0:	add	sp, sp, #16
    1ae4:	bx	lr
    1ae8:	.word	0x00000059

00001aec <accel_make_persistent_key>:
    1aec:	mov	ip, sp
    1af0:	sub	sp, sp, #112	; 0x70
    1af4:	sub	sp, sp, #4096	; 0x1000
    1af8:	str	ip, [sp]
    1afc:	str	lr, [sp, #4]
    1b00:	str	r4, [sp, #8]
    1b04:	str	r5, [sp, #12]
    1b08:	str	r6, [sp, #16]
    1b0c:	str	r7, [sp, #20]
    1b10:	str	r8, [sp, #24]
    1b14:	str	r9, [sp, #28]
    1b18:	str	sl, [sp, #32]
    1b1c:	str	fp, [sp, #36]	; 0x24
    1b20:	mov	r5, r2
    1b24:	mov	r6, r1
    1b28:	mov	r7, r0
    1b2c:	ldrb	r2, [r7]
    1b30:	cmp	r2, #47	; 0x2f
    1b34:	beq	2568 <accel_make_persistent_key+0xa7c>
    1b38:	mov	r1, r7
    1b3c:	ldrb	ip, [r1]
    1b40:	cmp	ip, #97	; 0x61
    1b44:	blt	1b50 <accel_make_persistent_key+0x64>
    1b48:	cmp	ip, #122	; 0x7a
    1b4c:	ble	2560 <accel_make_persistent_key+0xa74>
    1b50:	ldrb	ip, [r1]
    1b54:	cmp	ip, #65	; 0x41
    1b58:	blt	1b64 <accel_make_persistent_key+0x78>
    1b5c:	cmp	ip, #90	; 0x5a
    1b60:	ble	2560 <accel_make_persistent_key+0xa74>
    1b64:	ldrb	r2, [r1]
    1b68:	cmp	r2, #48	; 0x30
    1b6c:	blt	1b78 <accel_make_persistent_key+0x8c>
    1b70:	cmp	r2, #57	; 0x39
    1b74:	ble	2560 <accel_make_persistent_key+0xa74>
    1b78:	ldrb	r0, [r1]
    1b7c:	cmp	r0, #43	; 0x2b
    1b80:	beq	2560 <accel_make_persistent_key+0xa74>
    1b84:	cmp	r0, #45	; 0x2d
    1b88:	beq	2560 <accel_make_persistent_key+0xa74>
    1b8c:	cmp	r0, #46	; 0x2e
    1b90:	beq	2560 <accel_make_persistent_key+0xa74>
    1b94:	cmp	r1, r7
    1b98:	beq	1bc4 <accel_make_persistent_key+0xd8>
    1b9c:	cmp	r0, #58	; 0x3a
    1ba0:	bne	1bc4 <accel_make_persistent_key+0xd8>
    1ba4:	ldrb	r2, [r1, #1]
    1ba8:	cmp	r2, #47	; 0x2f
    1bac:	bne	1bc4 <accel_make_persistent_key+0xd8>
    1bb0:	ldrb	r0, [r1, #2]
    1bb4:	cmp	r0, #47	; 0x2f
    1bb8:	moveq	r0, #1
    1bbc:	movne	r0, #0
    1bc0:	b	1bc8 <accel_make_persistent_key+0xdc>
    1bc4:	mov	r0, #0
    1bc8:	cmp	r0, #0
    1bcc:	bne	2504 <accel_make_persistent_key+0xa18>
    1bd0:	ldr	r1, [pc, #2556]	; 25d4 <accel_make_persistent_key+0xae8>
    1bd4:	ldrb	r2, [r1]
    1bd8:	cmp	r2, #0
    1bdc:	beq	24f4 <accel_make_persistent_key+0xa08>
    1be0:	ldr	r3, [pc, #2496]	; 25a8 <accel_make_persistent_key+0xabc>
    1be4:	ldr	r4, [r3]
    1be8:	cmp	r4, #0
    1bec:	bne	2048 <accel_make_persistent_key+0x55c>
    1bf0:	ldr	r0, [pc, #2536]	; 25e0 <accel_make_persistent_key+0xaf4>
    1bf4:	ldr	r8, [r0]
    1bf8:	cmp	r8, #0
    1bfc:	bne	1c9c <accel_make_persistent_key+0x1b0>
    1c00:	add	r0, sp, #104	; 0x68
    1c04:	mov	r1, #4096	; 0x1000
    1c08:	bl	0 <getcwd>
    1c0c:	cmp	r0, #0
    1c10:	bne	1c1c <accel_make_persistent_key+0x130>
    1c14:	mov	r8, #0
    1c18:	b	1c9c <accel_make_persistent_key+0x1b0>
    1c1c:	add	r0, sp, #104	; 0x68
    1c20:	bl	0 <strlen>
    1c24:	mov	r8, r0
    1c28:	add	r9, sp, #104	; 0x68
    1c2c:	add	ip, r8, #24
    1c30:	bic	r0, ip, #7
    1c34:	bl	0 <_emalloc>
    1c38:	mov	r4, r0
    1c3c:	mov	r1, #1
    1c40:	str	r1, [r4]
    1c44:	mov	r3, #0
    1c48:	orr	r0, r3, #6
    1c4c:	str	r0, [r4, #4]
    1c50:	mov	r2, #0
    1c54:	str	r2, [r4, #8]
    1c58:	str	r8, [r4, #12]
    1c5c:	add	r0, r4, #16
    1c60:	mov	r2, r8
    1c64:	mov	r1, r9
    1c68:	bl	0 <memcpy>
    1c6c:	add	r0, r4, r8
    1c70:	mov	ip, #0
    1c74:	strb	ip, [r0, #16]
    1c78:	ldr	r0, [pc, #2400]	; 25e0 <accel_make_persistent_key+0xaf4>
    1c7c:	str	r4, [r0]
    1c80:	ldr	ip, [pc, #2336]	; 25a8 <accel_make_persistent_key+0xabc>
    1c84:	mov	r3, #0
    1c88:	str	r3, [ip]
    1c8c:	ldr	r1, [pc, #2384]	; 25e4 <accel_make_persistent_key+0xaf8>
    1c90:	mov	ip, #1
    1c94:	str	ip, [r1]
    1c98:	ldr	r8, [r0]
    1c9c:	cmp	r8, #0
    1ca0:	bne	1cc8 <accel_make_persistent_key+0x1dc>
    1ca4:	bl	0 <__errno_location>
    1ca8:	mov	ip, r0
    1cac:	mov	r0, #3
    1cb0:	ldr	r1, [pc, #2308]	; 25bc <accel_make_persistent_key+0xad0>
    1cb4:	ldr	r3, [ip]
    1cb8:	mov	r2, r7
    1cbc:	bl	0 <zend_accel_error>
    1cc0:	mov	r0, #0
    1cc4:	b	257c <accel_make_persistent_key+0xa90>
    1cc8:	add	r9, r8, #16
    1ccc:	ldr	r4, [r8, #12]
    1cd0:	ldr	r1, [pc, #2316]	; 25e4 <accel_make_persistent_key+0xaf8>
    1cd4:	ldr	ip, [r1]
    1cd8:	cmp	ip, #0
    1cdc:	beq	204c <accel_make_persistent_key+0x560>
    1ce0:	mov	r0, #0
    1ce4:	str	r0, [r1]
    1ce8:	ldr	r2, [pc, #2280]	; 25d8 <accel_make_persistent_key+0xaec>
    1cec:	ldrb	r1, [r2]
    1cf0:	cmp	r1, #0
    1cf4:	beq	2040 <accel_make_persistent_key+0x554>
    1cf8:	mov	sl, r8
    1cfc:	ldr	r2, [pc, #2304]	; 2604 <accel_make_persistent_key+0xb18>
    1d00:	ldr	r3, [r2]
    1d04:	ldr	r2, [r3, #96]	; 0x60
    1d08:	cmp	sl, r2
    1d0c:	bcc	1d24 <accel_make_persistent_key+0x238>
    1d10:	ldr	r3, [r3, #100]	; 0x64
    1d14:	cmp	sl, r3
    1d18:	bcs	1d24 <accel_make_persistent_key+0x238>
    1d1c:	mov	r4, sl
    1d20:	b	1e80 <accel_make_persistent_key+0x394>
    1d24:	ldr	r1, [pc, #2180]	; 25b0 <accel_make_persistent_key+0xac4>
    1d28:	ldr	ip, [r1]
    1d2c:	cmp	ip, #0
    1d30:	bne	1dd8 <accel_make_persistent_key+0x2ec>
    1d34:	ldr	ip, [pc, #2204]	; 25d8 <accel_make_persistent_key+0xaec>
    1d38:	ldrb	r0, [ip]
    1d3c:	cmp	r0, #0
    1d40:	beq	1dd0 <accel_make_persistent_key+0x2e4>
    1d44:	mov	r1, #0
    1d48:	strh	r1, [sp, #104]	; 0x68
    1d4c:	mov	r2, #0
    1d50:	strh	r2, [sp, #106]	; 0x6a
    1d54:	mov	ip, #1
    1d58:	str	ip, [sp, #108]	; 0x6c
    1d5c:	mov	ip, #1
    1d60:	str	ip, [sp, #112]	; 0x70
    1d64:	ldr	r1, [pc, #2172]	; 25e8 <accel_make_persistent_key+0xafc>
    1d68:	ldr	r0, [r1]
    1d6c:	mov	r1, #6
    1d70:	add	r2, sp, #104	; 0x68
    1d74:	bl	0 <fcntl>
    1d78:	cmn	r0, #1
    1d7c:	bne	1db4 <accel_make_persistent_key+0x2c8>
    1d80:	bl	0 <__errno_location>
    1d84:	ldr	r0, [r0]
    1d88:	bl	0 <strerror>
    1d8c:	mov	r4, r0
    1d90:	bl	0 <__errno_location>
    1d94:	mov	r2, #4
    1d98:	ldr	r1, [pc, #2136]	; 25f8 <accel_make_persistent_key+0xb0c>
    1d9c:	ldr	r3, [r0]
    1da0:	mov	r0, r2
    1da4:	mov	r2, r4
    1da8:	bl	0 <zend_accel_error>
    1dac:	mvn	ip, #0
    1db0:	b	1db8 <accel_make_persistent_key+0x2cc>
    1db4:	mov	ip, #0
    1db8:	cmn	ip, #1
    1dbc:	beq	1dd0 <accel_make_persistent_key+0x2e4>
    1dc0:	ldr	r1, [pc, #2024]	; 25b0 <accel_make_persistent_key+0xac4>
    1dc4:	mov	r0, #1
    1dc8:	str	r0, [r1]
    1dcc:	b	1dd8 <accel_make_persistent_key+0x2ec>
    1dd0:	mov	r4, #0
    1dd4:	b	1e80 <accel_make_persistent_key+0x394>
    1dd8:	ldr	r9, [sl, #8]
    1ddc:	cmp	r9, #0
    1de0:	bne	1df0 <accel_make_persistent_key+0x304>
    1de4:	mov	r0, sl
    1de8:	bl	0 <zend_string_hash_func>
    1dec:	mov	r9, r0
    1df0:	ldr	r0, [pc, #2060]	; 2604 <accel_make_persistent_key+0xb18>
    1df4:	ldr	r2, [r0]
    1df8:	ldr	r3, [r2, #88]	; 0x58
    1dfc:	and	r1, r9, r3
    1e00:	add	r2, r2, r1
    1e04:	ldr	r1, [r2, #112]	; 0x70
    1e08:	cmp	r1, #0
    1e0c:	beq	1e7c <accel_make_persistent_key+0x390>
    1e10:	ldr	r2, [pc, #2028]	; 2604 <accel_make_persistent_key+0xb18>
    1e14:	ldr	ip, [r2]
    1e18:	add	r3, ip, r1
    1e1c:	add	r4, r3, #88	; 0x58
    1e20:	ldr	r2, [r3, #96]	; 0x60
    1e24:	cmp	r2, r9
    1e28:	bne	1e6c <accel_make_persistent_key+0x380>
    1e2c:	mov	ip, sl
    1e30:	ldr	r2, [r3, #100]	; 0x64
    1e34:	ldr	r0, [ip, #12]
    1e38:	cmp	r2, r0
    1e3c:	bne	1e5c <accel_make_persistent_key+0x370>
    1e40:	add	r0, r3, #104	; 0x68
    1e44:	add	r1, ip, #16
    1e48:	bl	0 <memcmp>
    1e4c:	cmp	r0, #0
    1e50:	moveq	r2, #1
    1e54:	movne	r2, #0
    1e58:	b	1e60 <accel_make_persistent_key+0x374>
    1e5c:	mov	r2, #0
    1e60:	and	r3, r2, #255	; 0xff
    1e64:	cmp	r3, #0
    1e68:	bne	1e80 <accel_make_persistent_key+0x394>
    1e6c:	sub	lr, r4, #4096	; 0x1000
    1e70:	ldr	r1, [lr, #4092]	; 0xffc
    1e74:	cmp	r1, #0
    1e78:	bne	1e10 <accel_make_persistent_key+0x324>
    1e7c:	mov	r4, #0
    1e80:	cmp	r4, #0
    1e84:	bne	1f58 <accel_make_persistent_key+0x46c>
    1e88:	ldr	r0, [pc, #1844]	; 25c4 <accel_make_persistent_key+0xad8>
    1e8c:	ldr	r3, [r0]
    1e90:	add	r3, r3, #1
    1e94:	str	r3, [r0]
    1e98:	ldr	r3, [pc, #1812]	; 25b4 <accel_make_persistent_key+0xac8>
    1e9c:	ldrb	r3, [r3]
    1ea0:	cmp	r3, #0
    1ea4:	beq	1eb0 <accel_make_persistent_key+0x3c4>
    1ea8:	mov	r0, #0
    1eac:	bl	0 <zend_accel_shared_protect>
    1eb0:	bl	0 <zend_shared_alloc_lock>
    1eb4:	ldr	r1, [r8, #4]
    1eb8:	and	r3, r1, #64	; 0x40
    1ebc:	cmp	r3, #0
    1ec0:	bne	1ed4 <accel_make_persistent_key+0x3e8>
    1ec4:	mov	r3, r8
    1ec8:	ldr	ip, [r3]
    1ecc:	add	ip, ip, #1
    1ed0:	str	ip, [r3]
    1ed4:	mov	r0, r8
    1ed8:	bl	28c <accel_new_interned_string>
    1edc:	mov	r4, r0
    1ee0:	cmp	r4, r8
    1ee4:	bne	1f18 <accel_make_persistent_key+0x42c>
    1ee8:	mov	r0, r4
    1eec:	ldr	r1, [r0, #4]
    1ef0:	and	r1, r1, #64	; 0x40
    1ef4:	cmp	r1, #0
    1ef8:	bne	1f14 <accel_make_persistent_key+0x428>
    1efc:	ldr	r2, [r0]
    1f00:	sub	r1, r2, #1
    1f04:	str	r1, [r0]
    1f08:	cmp	r1, #0
    1f0c:	bne	1f14 <accel_make_persistent_key+0x428>
    1f10:	bl	0 <_efree>
    1f14:	mov	r4, #0
    1f18:	bl	0 <zend_shared_alloc_unlock>
    1f1c:	ldr	r1, [pc, #1680]	; 25b4 <accel_make_persistent_key+0xac8>
    1f20:	ldrb	r1, [r1]
    1f24:	cmp	r1, #0
    1f28:	beq	1f34 <accel_make_persistent_key+0x448>
    1f2c:	mov	r0, #1
    1f30:	bl	0 <zend_accel_shared_protect>
    1f34:	ldr	r1, [pc, #1672]	; 25c4 <accel_make_persistent_key+0xad8>
    1f38:	ldr	r3, [r1]
    1f3c:	sub	r0, r3, #1
    1f40:	str	r0, [r1]
    1f44:	ldr	ip, [pc, #1716]	; 2600 <accel_make_persistent_key+0xb14>
    1f48:	ldr	r0, [ip]
    1f4c:	cmp	r3, r0
    1f50:	bne	1f58 <accel_make_persistent_key+0x46c>
    1f54:	bl	0 <zend_signal_handler_unblock>
    1f58:	cmp	r4, #0
    1f5c:	beq	2038 <accel_make_persistent_key+0x54c>
    1f60:	ldr	ip, [pc, #1692]	; 2604 <accel_make_persistent_key+0xb18>
    1f64:	ldr	r1, [ip]
    1f68:	sub	r0, r4, r1
    1f6c:	sub	r3, r0, #88	; 0x58
    1f70:	cmp	r3, #0
    1f74:	bge	1fd4 <accel_make_persistent_key+0x4e8>
    1f78:	mvn	ip, r3
    1f7c:	add	r2, ip, #1
    1f80:	add	ip, sp, #71	; 0x47
    1f84:	mov	r3, #0
    1f88:	strb	r3, [sp, #71]	; 0x47
    1f8c:	sub	ip, ip, #1
    1f90:	movw	r0, #52429	; 0xcccd
    1f94:	movt	r0, #52428	; 0xcccc
    1f98:	umull	lr, r3, r2, r0
    1f9c:	lsr	r1, r3, #3
    1fa0:	lsl	r3, r1, #3
    1fa4:	add	r3, r3, r1, lsl #1
    1fa8:	sub	r2, r2, r3
    1fac:	add	r3, r2, #48	; 0x30
    1fb0:	strb	r3, [ip]
    1fb4:	mov	r2, r1
    1fb8:	cmp	r2, #0
    1fbc:	bhi	1f8c <accel_make_persistent_key+0x4a0>
    1fc0:	sub	r1, ip, #1
    1fc4:	mov	r2, #45	; 0x2d
    1fc8:	sub	lr, ip, #4096	; 0x1000
    1fcc:	strb	r2, [lr, #4095]	; 0xfff
    1fd0:	b	2014 <accel_make_persistent_key+0x528>
    1fd4:	add	r1, sp, #71	; 0x47
    1fd8:	mov	r2, #0
    1fdc:	strb	r2, [sp, #71]	; 0x47
    1fe0:	sub	r1, r1, #1
    1fe4:	mov	ip, r3
    1fe8:	movw	r2, #52429	; 0xcccd
    1fec:	movt	r2, #52428	; 0xcccc
    1ff0:	umull	lr, r0, ip, r2
    1ff4:	lsr	r3, r0, #3
    1ff8:	lsl	r0, r3, #3
    1ffc:	add	r0, r0, r3, lsl #1
    2000:	sub	ip, ip, r0
    2004:	add	r2, ip, #48	; 0x30
    2008:	strb	r2, [r1]
    200c:	cmp	r3, #0
    2010:	bhi	1fe0 <accel_make_persistent_key+0x4f4>
    2014:	add	r0, sp, #71	; 0x47
    2018:	sub	r4, r0, r1
    201c:	ldr	r0, [pc, #1412]	; 25a8 <accel_make_persistent_key+0xabc>
    2020:	str	r4, [r0]
    2024:	ldr	r9, [pc, #1488]	; 25fc <accel_make_persistent_key+0xb10>
    2028:	add	r2, r4, #1
    202c:	mov	r0, r9
    2030:	bl	0 <memcpy>
    2034:	b	204c <accel_make_persistent_key+0x560>
    2038:	mov	r0, #0
    203c:	b	257c <accel_make_persistent_key+0xa90>
    2040:	mov	r0, #0
    2044:	b	257c <accel_make_persistent_key+0xa90>
    2048:	ldr	r9, [pc, #1452]	; 25fc <accel_make_persistent_key+0xb10>
    204c:	ldr	ip, [pc, #1396]	; 25c8 <accel_make_persistent_key+0xadc>
    2050:	ldr	r8, [ip]
    2054:	cmp	r8, #0
    2058:	bne	23dc <accel_make_persistent_key+0x8f0>
    205c:	ldr	r2, [pc, #1420]	; 25f0 <accel_make_persistent_key+0xb04>
    2060:	ldr	r0, [r2]
    2064:	cmp	r0, #0
    2068:	beq	23d0 <accel_make_persistent_key+0x8e4>
    206c:	ldr	r8, [r0, #12]
    2070:	cmp	r8, #0
    2074:	beq	23d0 <accel_make_persistent_key+0x8e4>
    2078:	add	sl, r0, #16
    207c:	ldr	r1, [pc, #1356]	; 25d0 <accel_make_persistent_key+0xae4>
    2080:	ldr	r3, [r1]
    2084:	cmp	r3, #0
    2088:	beq	23e0 <accel_make_persistent_key+0x8f4>
    208c:	mov	ip, #0
    2090:	str	ip, [r1]
    2094:	ldr	r1, [pc, #1340]	; 25d8 <accel_make_persistent_key+0xaec>
    2098:	ldrb	ip, [r1]
    209c:	cmp	ip, #0
    20a0:	beq	23c8 <accel_make_persistent_key+0x8dc>
    20a4:	ldr	sl, [r2]
    20a8:	ldr	r3, [pc, #1364]	; 2604 <accel_make_persistent_key+0xb18>
    20ac:	ldr	r0, [r3]
    20b0:	ldr	r3, [r0, #96]	; 0x60
    20b4:	cmp	sl, r3
    20b8:	bcc	20d0 <accel_make_persistent_key+0x5e4>
    20bc:	ldr	ip, [r0, #100]	; 0x64
    20c0:	cmp	sl, ip
    20c4:	bcs	20d0 <accel_make_persistent_key+0x5e4>
    20c8:	mov	fp, sl
    20cc:	b	222c <accel_make_persistent_key+0x740>
    20d0:	ldr	ip, [pc, #1240]	; 25b0 <accel_make_persistent_key+0xac4>
    20d4:	ldr	ip, [ip]
    20d8:	cmp	ip, #0
    20dc:	bne	2184 <accel_make_persistent_key+0x698>
    20e0:	ldr	r3, [pc, #1264]	; 25d8 <accel_make_persistent_key+0xaec>
    20e4:	ldrb	r1, [r3]
    20e8:	cmp	r1, #0
    20ec:	beq	217c <accel_make_persistent_key+0x690>
    20f0:	mov	r0, #0
    20f4:	strh	r0, [sp, #104]	; 0x68
    20f8:	mov	ip, #0
    20fc:	strh	ip, [sp, #106]	; 0x6a
    2100:	mov	r3, #1
    2104:	str	r3, [sp, #108]	; 0x6c
    2108:	mov	ip, #1
    210c:	str	ip, [sp, #112]	; 0x70
    2110:	ldr	r3, [pc, #1232]	; 25e8 <accel_make_persistent_key+0xafc>
    2114:	ldr	r0, [r3]
    2118:	mov	r1, #6
    211c:	add	r2, sp, #104	; 0x68
    2120:	bl	0 <fcntl>
    2124:	cmn	r0, #1
    2128:	bne	2160 <accel_make_persistent_key+0x674>
    212c:	bl	0 <__errno_location>
    2130:	ldr	r0, [r0]
    2134:	bl	0 <strerror>
    2138:	mov	r8, r0
    213c:	bl	0 <__errno_location>
    2140:	mov	r2, #4
    2144:	ldr	r1, [pc, #1196]	; 25f8 <accel_make_persistent_key+0xb0c>
    2148:	ldr	r3, [r0]
    214c:	mov	r0, r2
    2150:	mov	r2, r8
    2154:	bl	0 <zend_accel_error>
    2158:	mvn	r3, #0
    215c:	b	2164 <accel_make_persistent_key+0x678>
    2160:	mov	r3, #0
    2164:	cmn	r3, #1
    2168:	beq	217c <accel_make_persistent_key+0x690>
    216c:	ldr	r2, [pc, #1084]	; 25b0 <accel_make_persistent_key+0xac4>
    2170:	mov	r1, #1
    2174:	str	r1, [r2]
    2178:	b	2184 <accel_make_persistent_key+0x698>
    217c:	mov	fp, #0
    2180:	b	222c <accel_make_persistent_key+0x740>
    2184:	ldr	r8, [sl, #8]
    2188:	cmp	r8, #0
    218c:	bne	219c <accel_make_persistent_key+0x6b0>
    2190:	mov	r0, sl
    2194:	bl	0 <zend_string_hash_func>
    2198:	mov	r8, r0
    219c:	ldr	r2, [pc, #1120]	; 2604 <accel_make_persistent_key+0xb18>
    21a0:	ldr	r2, [r2]
    21a4:	ldr	r3, [r2, #88]	; 0x58
    21a8:	and	r3, r8, r3
    21ac:	add	ip, r2, r3
    21b0:	ldr	r1, [ip, #112]	; 0x70
    21b4:	cmp	r1, #0
    21b8:	beq	2228 <accel_make_persistent_key+0x73c>
    21bc:	ldr	r2, [pc, #1088]	; 2604 <accel_make_persistent_key+0xb18>
    21c0:	ldr	r2, [r2]
    21c4:	add	ip, r2, r1
    21c8:	add	fp, ip, #88	; 0x58
    21cc:	ldr	r2, [ip, #96]	; 0x60
    21d0:	cmp	r2, r8
    21d4:	bne	2218 <accel_make_persistent_key+0x72c>
    21d8:	mov	r3, sl
    21dc:	ldr	r2, [ip, #100]	; 0x64
    21e0:	ldr	r0, [r3, #12]
    21e4:	cmp	r2, r0
    21e8:	bne	2208 <accel_make_persistent_key+0x71c>
    21ec:	add	r0, ip, #104	; 0x68
    21f0:	add	r1, r3, #16
    21f4:	bl	0 <memcmp>
    21f8:	cmp	r0, #0
    21fc:	moveq	r0, #1
    2200:	movne	r0, #0
    2204:	b	220c <accel_make_persistent_key+0x720>
    2208:	mov	r0, #0
    220c:	and	ip, r0, #255	; 0xff
    2210:	cmp	ip, #0
    2214:	bne	222c <accel_make_persistent_key+0x740>
    2218:	sub	lr, fp, #4096	; 0x1000
    221c:	ldr	r1, [lr, #4092]	; 0xffc
    2220:	cmp	r1, #0
    2224:	bne	21bc <accel_make_persistent_key+0x6d0>
    2228:	mov	fp, #0
    222c:	cmp	fp, #0
    2230:	bne	22e0 <accel_make_persistent_key+0x7f4>
    2234:	ldr	ip, [pc, #904]	; 25c4 <accel_make_persistent_key+0xad8>
    2238:	ldr	r0, [ip]
    223c:	add	r0, r0, #1
    2240:	str	r0, [ip]
    2244:	ldr	r3, [pc, #872]	; 25b4 <accel_make_persistent_key+0xac8>
    2248:	ldrb	r1, [r3]
    224c:	cmp	r1, #0
    2250:	beq	225c <accel_make_persistent_key+0x770>
    2254:	mov	r0, #0
    2258:	bl	0 <zend_accel_shared_protect>
    225c:	bl	0 <zend_shared_alloc_lock>
    2260:	ldr	r0, [pc, #904]	; 25f0 <accel_make_persistent_key+0xb04>
    2264:	ldr	r0, [r0]
    2268:	ldr	r3, [r0, #4]
    226c:	and	r1, r3, #64	; 0x40
    2270:	cmp	r1, #0
    2274:	bne	2284 <accel_make_persistent_key+0x798>
    2278:	ldr	ip, [r0]
    227c:	add	r1, ip, #1
    2280:	str	r1, [r0]
    2284:	bl	28c <accel_new_interned_string>
    2288:	mov	r3, #0
    228c:	ldr	r2, [pc, #860]	; 25f0 <accel_make_persistent_key+0xb04>
    2290:	ldr	r1, [r2]
    2294:	cmp	r0, r1
    2298:	moveq	fp, r3
    229c:	movne	fp, r0
    22a0:	bl	0 <zend_shared_alloc_unlock>
    22a4:	ldr	r1, [pc, #776]	; 25b4 <accel_make_persistent_key+0xac8>
    22a8:	ldrb	r3, [r1]
    22ac:	cmp	r3, #0
    22b0:	beq	22bc <accel_make_persistent_key+0x7d0>
    22b4:	mov	r0, #1
    22b8:	bl	0 <zend_accel_shared_protect>
    22bc:	ldr	r3, [pc, #768]	; 25c4 <accel_make_persistent_key+0xad8>
    22c0:	ldr	r0, [r3]
    22c4:	sub	ip, r0, #1
    22c8:	str	ip, [r3]
    22cc:	ldr	r1, [pc, #812]	; 2600 <accel_make_persistent_key+0xb14>
    22d0:	ldr	r2, [r1]
    22d4:	cmp	r0, r2
    22d8:	bne	22e0 <accel_make_persistent_key+0x7f4>
    22dc:	bl	0 <zend_signal_handler_unblock>
    22e0:	cmp	fp, #0
    22e4:	beq	23c0 <accel_make_persistent_key+0x8d4>
    22e8:	ldr	r3, [pc, #788]	; 2604 <accel_make_persistent_key+0xb18>
    22ec:	ldr	r0, [r3]
    22f0:	sub	r3, fp, r0
    22f4:	sub	r3, r3, #88	; 0x58
    22f8:	cmp	r3, #0
    22fc:	bge	235c <accel_make_persistent_key+0x870>
    2300:	mvn	r0, r3
    2304:	add	r2, r0, #1
    2308:	add	r3, sp, #103	; 0x67
    230c:	mov	r1, #0
    2310:	strb	r1, [sp, #103]	; 0x67
    2314:	sub	r3, r3, #1
    2318:	movw	ip, #52429	; 0xcccd
    231c:	movt	ip, #52428	; 0xcccc
    2320:	umull	lr, r0, r2, ip
    2324:	lsr	r1, r0, #3
    2328:	lsl	ip, r1, #3
    232c:	add	ip, ip, r1, lsl #1
    2330:	sub	r2, r2, ip
    2334:	add	r2, r2, #48	; 0x30
    2338:	strb	r2, [r3]
    233c:	mov	r2, r1
    2340:	cmp	r2, #0
    2344:	bhi	2314 <accel_make_persistent_key+0x828>
    2348:	sub	r1, r3, #1
    234c:	mov	ip, #45	; 0x2d
    2350:	sub	lr, r3, #4096	; 0x1000
    2354:	strb	ip, [lr, #4095]	; 0xfff
    2358:	b	239c <accel_make_persistent_key+0x8b0>
    235c:	add	r1, sp, #103	; 0x67
    2360:	mov	ip, #0
    2364:	strb	ip, [sp, #103]	; 0x67
    2368:	sub	r1, r1, #1
    236c:	mov	ip, r3
    2370:	movw	r2, #52429	; 0xcccd
    2374:	movt	r2, #52428	; 0xcccc
    2378:	umull	lr, r2, ip, r2
    237c:	lsr	r3, r2, #3
    2380:	lsl	r0, r3, #3
    2384:	add	r0, r0, r3, lsl #1
    2388:	sub	r2, ip, r0
    238c:	add	r0, r2, #48	; 0x30
    2390:	strb	r0, [r1]
    2394:	cmp	r3, #0
    2398:	bhi	2368 <accel_make_persistent_key+0x87c>
    239c:	add	r2, sp, #103	; 0x67
    23a0:	sub	r8, r2, r1
    23a4:	ldr	r3, [pc, #540]	; 25c8 <accel_make_persistent_key+0xadc>
    23a8:	str	r8, [r3]
    23ac:	ldr	sl, [pc, #504]	; 25ac <accel_make_persistent_key+0xac0>
    23b0:	add	r2, r8, #1
    23b4:	mov	r0, sl
    23b8:	bl	0 <memcpy>
    23bc:	b	23e0 <accel_make_persistent_key+0x8f4>
    23c0:	mov	r0, #0
    23c4:	b	257c <accel_make_persistent_key+0xa90>
    23c8:	mov	r0, #0
    23cc:	b	257c <accel_make_persistent_key+0xa90>
    23d0:	ldr	sl, [pc, #532]	; 25ec <accel_make_persistent_key+0xb00>
    23d4:	mov	r8, #0
    23d8:	b	23e0 <accel_make_persistent_key+0x8f4>
    23dc:	ldr	sl, [pc, #456]	; 25ac <accel_make_persistent_key+0xac0>
    23e0:	add	r2, r4, r6
    23e4:	add	r2, r2, r8
    23e8:	add	r2, r2, #2
    23ec:	cmp	r2, #32768	; 0x8000
    23f0:	bcc	23fc <accel_make_persistent_key+0x910>
    23f4:	mov	r0, #0
    23f8:	b	257c <accel_make_persistent_key+0xa90>
    23fc:	ldr	r0, [pc, #444]	; 25c0 <accel_make_persistent_key+0xad4>
    2400:	mov	r2, r6
    2404:	mov	r1, r7
    2408:	bl	0 <memcpy>
    240c:	ldr	r2, [pc, #428]	; 25c0 <accel_make_persistent_key+0xad4>
    2410:	mov	r0, #58	; 0x3a
    2414:	strb	r0, [r2, r6]
    2418:	add	r6, r6, #1
    241c:	add	r0, r2, r6
    2420:	mov	r2, r4
    2424:	mov	r1, r9
    2428:	bl	0 <memcpy>
    242c:	add	r6, r6, r4
    2430:	cmp	r8, #0
    2434:	beq	245c <accel_make_persistent_key+0x970>
    2438:	ldr	r3, [pc, #384]	; 25c0 <accel_make_persistent_key+0xad4>
    243c:	mov	r2, #58	; 0x3a
    2440:	strb	r2, [r3, r6]
    2444:	add	r4, r6, #1
    2448:	add	r0, r3, r4
    244c:	mov	r2, r8
    2450:	mov	r1, sl
    2454:	bl	0 <memcpy>
    2458:	add	r6, r4, r8
    245c:	ldr	r2, [pc, #376]	; 25dc <accel_make_persistent_key+0xaf0>
    2460:	ldr	r2, [r2]
    2464:	cmp	r2, #0
    2468:	beq	24d8 <accel_make_persistent_key+0x9ec>
    246c:	bl	0 <zend_get_executed_filename_ex>
    2470:	mov	r1, r0
    2474:	cmp	r1, #0
    2478:	beq	24d8 <accel_make_persistent_key+0x9ec>
    247c:	ldr	r4, [r1, #12]
    2480:	sub	r4, r4, #1
    2484:	cmp	r4, #0
    2488:	bls	249c <accel_make_persistent_key+0x9b0>
    248c:	add	r0, r1, r4
    2490:	ldrb	r0, [r0, #16]
    2494:	cmp	r0, #47	; 0x2f
    2498:	bne	2480 <accel_make_persistent_key+0x994>
    249c:	add	r3, r6, r4
    24a0:	add	ip, r3, #1
    24a4:	cmp	ip, #32768	; 0x8000
    24a8:	bcc	24b4 <accel_make_persistent_key+0x9c8>
    24ac:	mov	r0, #0
    24b0:	b	257c <accel_make_persistent_key+0xa90>
    24b4:	ldr	r0, [pc, #260]	; 25c0 <accel_make_persistent_key+0xad4>
    24b8:	mov	r2, #58	; 0x3a
    24bc:	strb	r2, [r0, r6]
    24c0:	add	r6, r6, #1
    24c4:	add	r0, r0, r6
    24c8:	add	r1, r1, #16
    24cc:	mov	r2, r4
    24d0:	bl	0 <memcpy>
    24d4:	add	r6, r6, r4
    24d8:	ldr	r0, [pc, #224]	; 25c0 <accel_make_persistent_key+0xad4>
    24dc:	mov	r1, #0
    24e0:	strb	r1, [r0, r6]
    24e4:	ldr	r3, [pc, #204]	; 25b8 <accel_make_persistent_key+0xacc>
    24e8:	str	r6, [r3]
    24ec:	str	r6, [r5]
    24f0:	b	257c <accel_make_persistent_key+0xa90>
    24f4:	ldr	r1, [pc, #188]	; 25b8 <accel_make_persistent_key+0xacc>
    24f8:	mov	r0, #0
    24fc:	str	r0, [r1]
    2500:	b	2574 <accel_make_persistent_key+0xa88>
    2504:	ldr	r1, [pc, #192]	; 25cc <accel_make_persistent_key+0xae0>
    2508:	mov	r2, #7
    250c:	mov	r0, r7
    2510:	bl	0 <memcmp>
    2514:	cmp	r0, #0
    2518:	beq	253c <accel_make_persistent_key+0xa50>
    251c:	ldr	r1, [pc, #208]	; 25f4 <accel_make_persistent_key+0xb08>
    2520:	mov	r2, #7
    2524:	mov	r0, r7
    2528:	bl	0 <memcmp>
    252c:	cmp	r0, #0
    2530:	moveq	r0, #1
    2534:	movne	r0, #0
    2538:	b	2540 <accel_make_persistent_key+0xa54>
    253c:	mov	r0, #1
    2540:	cmp	r0, #0
    2544:	bne	2550 <accel_make_persistent_key+0xa64>
    2548:	mov	r0, #0
    254c:	b	257c <accel_make_persistent_key+0xa90>
    2550:	ldr	r3, [pc, #96]	; 25b8 <accel_make_persistent_key+0xacc>
    2554:	mov	r1, #0
    2558:	str	r1, [r3]
    255c:	b	2574 <accel_make_persistent_key+0xa88>
    2560:	add	r1, r1, #1
    2564:	b	1b3c <accel_make_persistent_key+0x50>
    2568:	ldr	r0, [pc, #72]	; 25b8 <accel_make_persistent_key+0xacc>
    256c:	mov	ip, #0
    2570:	str	ip, [r0]
    2574:	str	r6, [r5]
    2578:	mov	r0, r7
    257c:	ldr	r4, [sp, #8]
    2580:	ldr	r5, [sp, #12]
    2584:	ldr	r6, [sp, #16]
    2588:	ldr	r7, [sp, #20]
    258c:	ldr	r8, [sp, #24]
    2590:	ldr	r9, [sp, #28]
    2594:	ldr	sl, [sp, #32]
    2598:	ldr	fp, [sp, #36]	; 0x24
    259c:	ldr	lr, [sp, #4]
    25a0:	ldr	sp, [sp]
    25a4:	bx	lr
    25a8:	.word	0x000000f0
    25ac:	.word	0x000000a8
    25b0:	.word	0x00000000
    25b4:	.word	0x00000059
    25b8:	.word	0x0000014c
    25bc:	.word	0x00000858
    25c0:	.word	0x00000150
    25c4:	.word	0x00000000
    25c8:	.word	0x000000e8
    25cc:	.word	0x00000ab5
    25d0:	.word	0x000000ec
    25d4:	.word	0x00000054
    25d8:	.word	0x00000006
    25dc:	.word	0x00000128
    25e0:	.word	0x000000a0
    25e4:	.word	0x000000f4
    25e8:	.word	0x00000000
    25ec:	.word	0x00000bc2
    25f0:	.word	0x000000a4
    25f4:	.word	0x000002f4
    25f8:	.word	0x00000b9a
    25fc:	.word	0x000000c8
    2600:	.word	0x00000004
    2604:	.word	0x00000000

00002608 <zend_accel_invalidate>:
    2608:	mov	ip, sp
    260c:	sub	sp, sp, #120	; 0x78
    2610:	str	ip, [sp]
    2614:	str	lr, [sp, #4]
    2618:	str	r4, [sp, #8]
    261c:	str	r5, [sp, #12]
    2620:	str	r6, [sp, #16]
    2624:	str	r7, [sp, #20]
    2628:	mov	r6, r2
    262c:	mov	r4, r1
    2630:	mov	r5, r0
    2634:	ldr	r2, [pc, #1096]	; 2a84 <zend_accel_invalidate+0x47c>
    2638:	ldrb	r1, [r2]
    263c:	cmp	r1, #0
    2640:	beq	2a50 <zend_accel_invalidate+0x448>
    2644:	bl	9bb8 <accelerator_shm_read_lock>
    2648:	cmp	r0, #0
    264c:	bne	2a50 <zend_accel_invalidate+0x448>
    2650:	ldr	r1, [pc, #1048]	; 2a70 <zend_accel_invalidate+0x468>
    2654:	ldr	ip, [r1]
    2658:	mov	r1, r4
    265c:	mov	r0, r5
    2660:	blx	ip
    2664:	mov	r5, r0
    2668:	cmp	r5, #0
    266c:	bne	2678 <zend_accel_invalidate+0x70>
    2670:	mvn	r0, #0
    2674:	b	2a54 <zend_accel_invalidate+0x44c>
    2678:	ldr	r1, [pc, #1032]	; 2a88 <zend_accel_invalidate+0x480>
    267c:	ldr	ip, [r1]
    2680:	cmp	ip, #0
    2684:	beq	2690 <zend_accel_invalidate+0x88>
    2688:	mov	r0, r5
    268c:	bl	0 <zend_file_cache_invalidate>
    2690:	ldr	r2, [pc, #1016]	; 2a90 <zend_accel_invalidate+0x488>
    2694:	ldr	r2, [r2]
    2698:	add	r0, r2, #24
    269c:	mov	r1, r5
    26a0:	bl	0 <zend_accel_hash_find>
    26a4:	mov	r4, r0
    26a8:	cmp	r4, #0
    26ac:	beq	2a18 <zend_accel_invalidate+0x410>
    26b0:	ldrb	r0, [r4, #244]	; 0xf4
    26b4:	cmp	r0, #0
    26b8:	bne	2a18 <zend_accel_invalidate+0x410>
    26bc:	add	r0, sp, #24
    26c0:	add	r1, r5, #16
    26c4:	bl	0 <zend_stream_init_filename>
    26c8:	str	r5, [sp, #48]	; 0x30
    26cc:	cmp	r6, #0
    26d0:	bne	292c <zend_accel_invalidate+0x324>
    26d4:	ldr	r1, [pc, #920]	; 2a74 <zend_accel_invalidate+0x46c>
    26d8:	ldrb	ip, [r1]
    26dc:	cmp	ip, #0
    26e0:	beq	292c <zend_accel_invalidate+0x324>
    26e4:	add	r6, sp, #24
    26e8:	mov	r7, #0
    26ec:	cmp	r5, #0
    26f0:	bne	27a8 <zend_accel_invalidate+0x1a0>
    26f4:	ldr	r0, [sp, #44]	; 0x2c
    26f8:	bl	0 <strlen>
    26fc:	mov	r1, r0
    2700:	ldr	r2, [pc, #872]	; 2a70 <zend_accel_invalidate+0x468>
    2704:	ldr	ip, [r2]
    2708:	ldr	r0, [sp, #44]	; 0x2c
    270c:	blx	ip
    2710:	mov	r7, r0
    2714:	cmp	r7, #0
    2718:	beq	27a0 <zend_accel_invalidate+0x198>
    271c:	ldr	ip, [r4]
    2720:	cmp	ip, r7
    2724:	beq	27a0 <zend_accel_invalidate+0x198>
    2728:	mov	r3, r7
    272c:	ldr	r2, [ip, #12]
    2730:	ldr	r0, [r3, #12]
    2734:	cmp	r2, r0
    2738:	bne	2758 <zend_accel_invalidate+0x150>
    273c:	add	r0, ip, #16
    2740:	add	r1, r3, #16
    2744:	bl	0 <memcmp>
    2748:	cmp	r0, #0
    274c:	moveq	r2, #1
    2750:	movne	r2, #0
    2754:	b	275c <zend_accel_invalidate+0x154>
    2758:	mov	r2, #0
    275c:	and	ip, r2, #255	; 0xff
    2760:	eor	r3, ip, #1
    2764:	cmp	r3, #0
    2768:	beq	27a0 <zend_accel_invalidate+0x198>
    276c:	ldr	r0, [r7, #4]
    2770:	and	r3, r0, #64	; 0x40
    2774:	cmp	r3, #0
    2778:	bne	2798 <zend_accel_invalidate+0x190>
    277c:	ldr	r1, [r7]
    2780:	sub	r1, r1, #1
    2784:	str	r1, [r7]
    2788:	cmp	r1, #0
    278c:	bne	2798 <zend_accel_invalidate+0x190>
    2790:	mov	r0, r7
    2794:	bl	0 <_efree>
    2798:	mvn	ip, #0
    279c:	b	2924 <zend_accel_invalidate+0x31c>
    27a0:	str	r7, [sp, #48]	; 0x30
    27a4:	b	2800 <zend_accel_invalidate+0x1f8>
    27a8:	ldr	r0, [r4]
    27ac:	mov	ip, r5
    27b0:	cmp	r0, ip
    27b4:	beq	2800 <zend_accel_invalidate+0x1f8>
    27b8:	ldr	r2, [r0, #12]
    27bc:	ldr	r1, [ip, #12]
    27c0:	cmp	r2, r1
    27c4:	bne	27e4 <zend_accel_invalidate+0x1dc>
    27c8:	add	r0, r0, #16
    27cc:	add	r1, ip, #16
    27d0:	bl	0 <memcmp>
    27d4:	cmp	r0, #0
    27d8:	moveq	r2, #1
    27dc:	movne	r2, #0
    27e0:	b	27e8 <zend_accel_invalidate+0x1e0>
    27e4:	mov	r2, #0
    27e8:	and	r2, r2, #255	; 0xff
    27ec:	eor	r2, r2, #1
    27f0:	cmp	r2, #0
    27f4:	beq	2800 <zend_accel_invalidate+0x1f8>
    27f8:	mvn	ip, #0
    27fc:	b	2924 <zend_accel_invalidate+0x31c>
    2800:	ldr	ip, [r4, #240]	; 0xf0
    2804:	cmp	ip, #0
    2808:	bne	2850 <zend_accel_invalidate+0x248>
    280c:	cmp	r7, #0
    2810:	beq	2848 <zend_accel_invalidate+0x240>
    2814:	mov	r0, r7
    2818:	ldr	r3, [r0, #4]
    281c:	and	r3, r3, #64	; 0x40
    2820:	cmp	r3, #0
    2824:	bne	2840 <zend_accel_invalidate+0x238>
    2828:	ldr	r3, [r0]
    282c:	sub	r1, r3, #1
    2830:	str	r1, [r0]
    2834:	cmp	r1, #0
    2838:	bne	2840 <zend_accel_invalidate+0x238>
    283c:	bl	0 <_efree>
    2840:	mov	ip, #0
    2844:	str	ip, [sp, #48]	; 0x30
    2848:	mvn	ip, #0
    284c:	b	2924 <zend_accel_invalidate+0x31c>
    2850:	mov	r1, #0
    2854:	mov	r0, r6
    2858:	bl	14b0 <zend_get_file_handle_timestamp>
    285c:	ldr	r1, [r4, #240]	; 0xf0
    2860:	cmp	r0, r1
    2864:	bne	28ac <zend_accel_invalidate+0x2a4>
    2868:	cmp	r7, #0
    286c:	beq	28a4 <zend_accel_invalidate+0x29c>
    2870:	mov	r0, r7
    2874:	ldr	r1, [r0, #4]
    2878:	and	ip, r1, #64	; 0x40
    287c:	cmp	ip, #0
    2880:	bne	289c <zend_accel_invalidate+0x294>
    2884:	ldr	r1, [r0]
    2888:	sub	r3, r1, #1
    288c:	str	r3, [r0]
    2890:	cmp	r3, #0
    2894:	bne	289c <zend_accel_invalidate+0x294>
    2898:	bl	0 <_efree>
    289c:	mov	r3, #0
    28a0:	str	r3, [sp, #48]	; 0x30
    28a4:	mov	ip, #0
    28a8:	b	2924 <zend_accel_invalidate+0x31c>
    28ac:	cmp	r7, #0
    28b0:	beq	28e8 <zend_accel_invalidate+0x2e0>
    28b4:	ldr	r3, [r7, #4]
    28b8:	and	r3, r3, #64	; 0x40
    28bc:	cmp	r3, #0
    28c0:	bne	28e0 <zend_accel_invalidate+0x2d8>
    28c4:	ldr	r0, [r7]
    28c8:	sub	r0, r0, #1
    28cc:	str	r0, [r7]
    28d0:	cmp	r0, #0
    28d4:	bne	28e0 <zend_accel_invalidate+0x2d8>
    28d8:	mov	r0, r7
    28dc:	bl	0 <_efree>
    28e0:	mov	ip, #0
    28e4:	str	ip, [sp, #48]	; 0x30
    28e8:	add	r0, sp, #72	; 0x48
    28ec:	ldr	r3, [r4]
    28f0:	add	r1, r3, #16
    28f4:	bl	0 <zend_stream_init_filename>
    28f8:	ldr	r1, [r4]
    28fc:	str	r1, [sp, #96]	; 0x60
    2900:	add	r0, sp, #72	; 0x48
    2904:	mov	r1, #0
    2908:	bl	14b0 <zend_get_file_handle_timestamp>
    290c:	ldr	r2, [r4, #240]	; 0xf0
    2910:	cmp	r0, r2
    2914:	bne	2920 <zend_accel_invalidate+0x318>
    2918:	mov	ip, #0
    291c:	b	2924 <zend_accel_invalidate+0x31c>
    2920:	mvn	ip, #0
    2924:	cmn	ip, #1
    2928:	bne	2a18 <zend_accel_invalidate+0x410>
    292c:	ldr	r1, [pc, #332]	; 2a80 <zend_accel_invalidate+0x478>
    2930:	ldr	r2, [r1]
    2934:	add	r0, r2, #1
    2938:	str	r0, [r1]
    293c:	ldr	r1, [pc, #312]	; 2a7c <zend_accel_invalidate+0x474>
    2940:	ldrb	r1, [r1]
    2944:	cmp	r1, #0
    2948:	beq	2954 <zend_accel_invalidate+0x34c>
    294c:	mov	r0, #0
    2950:	bl	0 <zend_accel_shared_protect>
    2954:	bl	0 <zend_shared_alloc_lock>
    2958:	ldrb	r2, [r4, #244]	; 0xf4
    295c:	cmp	r2, #0
    2960:	bne	29d8 <zend_accel_invalidate+0x3d0>
    2964:	mov	r2, #1
    2968:	strb	r2, [r4, #244]	; 0xf4
    296c:	mov	r2, #0
    2970:	str	r2, [r4, #240]	; 0xf0
    2974:	ldr	r0, [pc, #252]	; 2a78 <zend_accel_invalidate+0x470>
    2978:	ldr	r1, [r0]
    297c:	ldr	r2, [r1, #12]
    2980:	ldr	r3, [r4, #272]	; 0x110
    2984:	add	r2, r2, r3
    2988:	str	r2, [r1, #12]
    298c:	ldr	r3, [r0]
    2990:	ldrb	r0, [r3, #16]
    2994:	cmp	r0, #0
    2998:	beq	29d8 <zend_accel_invalidate+0x3d0>
    299c:	ldr	r0, [pc, #236]	; 2a90 <zend_accel_invalidate+0x488>
    29a0:	ldr	r3, [r0]
    29a4:	ldr	ip, [r3, #32]
    29a8:	ldr	r1, [r3, #36]	; 0x24
    29ac:	cmp	ip, r1
    29b0:	beq	29bc <zend_accel_invalidate+0x3b4>
    29b4:	mov	r2, #0
    29b8:	b	29c0 <zend_accel_invalidate+0x3b8>
    29bc:	mov	r2, #1
    29c0:	mov	r0, #1
    29c4:	mov	r3, #0
    29c8:	cmp	r2, #0
    29cc:	movne	r0, r0
    29d0:	moveq	r0, r3
    29d4:	bl	164 <zend_accel_schedule_restart_if_necessary>
    29d8:	bl	0 <zend_shared_alloc_unlock>
    29dc:	ldr	r2, [pc, #152]	; 2a7c <zend_accel_invalidate+0x474>
    29e0:	ldrb	r2, [r2]
    29e4:	cmp	r2, #0
    29e8:	beq	29f4 <zend_accel_invalidate+0x3ec>
    29ec:	mov	r0, #1
    29f0:	bl	0 <zend_accel_shared_protect>
    29f4:	ldr	r1, [pc, #132]	; 2a80 <zend_accel_invalidate+0x478>
    29f8:	ldr	r0, [r1]
    29fc:	sub	r3, r0, #1
    2a00:	str	r3, [r1]
    2a04:	ldr	ip, [pc, #128]	; 2a8c <zend_accel_invalidate+0x484>
    2a08:	ldr	ip, [ip]
    2a0c:	cmp	r0, ip
    2a10:	bne	2a18 <zend_accel_invalidate+0x410>
    2a14:	bl	0 <zend_signal_handler_unblock>
    2a18:	bl	9d20 <accelerator_shm_read_unlock>
    2a1c:	mov	r0, r5
    2a20:	ldr	r3, [r0, #4]
    2a24:	and	r1, r3, #64	; 0x40
    2a28:	cmp	r1, #0
    2a2c:	bne	2a48 <zend_accel_invalidate+0x440>
    2a30:	ldr	ip, [r0]
    2a34:	sub	r2, ip, #1
    2a38:	str	r2, [r0]
    2a3c:	cmp	r2, #0
    2a40:	bne	2a48 <zend_accel_invalidate+0x440>
    2a44:	bl	0 <_efree>
    2a48:	mov	r0, #0
    2a4c:	b	2a54 <zend_accel_invalidate+0x44c>
    2a50:	mvn	r0, #0
    2a54:	ldr	r4, [sp, #8]
    2a58:	ldr	r5, [sp, #12]
    2a5c:	ldr	r6, [sp, #16]
    2a60:	ldr	r7, [sp, #20]
    2a64:	ldr	lr, [sp, #4]
    2a68:	add	sp, sp, #120	; 0x78
    2a6c:	bx	lr
    2a70:	.word	0x00000008
    2a74:	.word	0x00000056
    2a78:	.word	0x00000000
    2a7c:	.word	0x00000059
    2a80:	.word	0x00000000
    2a84:	.word	0x00000006
    2a88:	.word	0x0000008c
    2a8c:	.word	0x00000004
    2a90:	.word	0x00000000

00002a94 <zend_accel_add_key>:
    2a94:	mov	ip, sp
    2a98:	sub	sp, sp, #32
    2a9c:	str	ip, [sp, #4]
    2aa0:	str	lr, [sp, #8]
    2aa4:	str	r4, [sp, #16]
    2aa8:	str	r5, [sp, #20]
    2aac:	str	r6, [sp, #24]
    2ab0:	str	r7, [sp, #28]
    2ab4:	mov	r6, r2
    2ab8:	mov	r4, r1
    2abc:	mov	r5, r0
    2ac0:	ldr	r2, [pc, #316]	; 2c04 <zend_accel_add_key+0x170>
    2ac4:	ldr	r3, [r2]
    2ac8:	add	r0, r3, #24
    2acc:	mov	r2, r4
    2ad0:	mov	r1, r5
    2ad4:	bl	0 <zend_accel_hash_str_find>
    2ad8:	cmp	r0, #0
    2adc:	bne	2bdc <zend_accel_add_key+0x148>
    2ae0:	ldr	r1, [pc, #284]	; 2c04 <zend_accel_add_key+0x170>
    2ae4:	ldr	r3, [r1]
    2ae8:	ldr	r0, [r3, #32]
    2aec:	ldr	ip, [r3, #36]	; 0x24
    2af0:	cmp	r0, ip
    2af4:	beq	2b00 <zend_accel_add_key+0x6c>
    2af8:	mov	r0, #0
    2afc:	b	2b04 <zend_accel_add_key+0x70>
    2b00:	mov	r0, #1
    2b04:	cmp	r0, #0
    2b08:	bne	2ba0 <zend_accel_add_key+0x10c>
    2b0c:	add	r0, r4, #1
    2b10:	bl	0 <zend_shared_alloc>
    2b14:	mov	r7, r0
    2b18:	cmp	r7, #0
    2b1c:	beq	2b80 <zend_accel_add_key+0xec>
    2b20:	add	r2, r4, #1
    2b24:	mov	r1, r5
    2b28:	mov	r0, r7
    2b2c:	bl	0 <memcpy>
    2b30:	ldr	ip, [pc, #204]	; 2c04 <zend_accel_add_key+0x170>
    2b34:	ldr	r2, [ip]
    2b38:	add	r0, r2, #24
    2b3c:	mov	r3, #1
    2b40:	str	r6, [sp]
    2b44:	mov	r2, r4
    2b48:	mov	r1, r7
    2b4c:	bl	0 <zend_accel_hash_update>
    2b50:	cmp	r0, #0
    2b54:	beq	2bdc <zend_accel_add_key+0x148>
    2b58:	mov	r0, #3
    2b5c:	ldr	r1, [pc, #156]	; 2c00 <zend_accel_add_key+0x16c>
    2b60:	mov	r2, r7
    2b64:	ldr	r4, [sp, #16]
    2b68:	ldr	r5, [sp, #20]
    2b6c:	ldr	r6, [sp, #24]
    2b70:	ldr	r7, [sp, #28]
    2b74:	ldr	lr, [sp, #8]
    2b78:	add	sp, sp, #32
    2b7c:	b	0 <zend_accel_error>
    2b80:	mov	r0, #0
    2b84:	ldr	r4, [sp, #16]
    2b88:	ldr	r5, [sp, #20]
    2b8c:	ldr	r6, [sp, #24]
    2b90:	ldr	r7, [sp, #28]
    2b94:	ldr	lr, [sp, #8]
    2b98:	add	sp, sp, #32
    2b9c:	b	164 <zend_accel_schedule_restart_if_necessary>
    2ba0:	mov	r0, #4
    2ba4:	ldr	r1, [pc, #80]	; 2bfc <zend_accel_add_key+0x168>
    2ba8:	bl	0 <zend_accel_error>
    2bac:	ldr	r0, [pc, #68]	; 2bf8 <zend_accel_add_key+0x164>
    2bb0:	ldr	r0, [r0]
    2bb4:	mov	r3, #1
    2bb8:	strb	r3, [r0, #16]
    2bbc:	mov	r0, #1
    2bc0:	ldr	r4, [sp, #16]
    2bc4:	ldr	r5, [sp, #20]
    2bc8:	ldr	r6, [sp, #24]
    2bcc:	ldr	r7, [sp, #28]
    2bd0:	ldr	lr, [sp, #8]
    2bd4:	add	sp, sp, #32
    2bd8:	b	164 <zend_accel_schedule_restart_if_necessary>
    2bdc:	ldr	r4, [sp, #16]
    2be0:	ldr	r5, [sp, #20]
    2be4:	ldr	r6, [sp, #24]
    2be8:	ldr	r7, [sp, #28]
    2bec:	ldr	lr, [sp, #8]
    2bf0:	add	sp, sp, #32
    2bf4:	bx	lr
    2bf8:	.word	0x00000000
    2bfc:	.word	0x0000008a
    2c00:	.word	0x00000467
    2c04:	.word	0x00000000

00002c08 <store_script_in_file_cache>:
    2c08:	mov	ip, sp
    2c0c:	sub	sp, sp, #40	; 0x28
    2c10:	str	ip, [sp, #8]
    2c14:	str	lr, [sp, #12]
    2c18:	str	r4, [sp, #16]
    2c1c:	str	r5, [sp, #20]
    2c20:	str	r6, [sp, #24]
    2c24:	str	r7, [sp, #28]
    2c28:	str	r8, [sp, #32]
    2c2c:	mov	r6, r0
    2c30:	bl	0 <zend_shared_alloc_init_xlat_table>
    2c34:	mov	r1, #0
    2c38:	mov	r2, #0
    2c3c:	mov	r3, #0
    2c40:	mov	r0, r6
    2c44:	bl	0 <zend_accel_script_persist_calc>
    2c48:	ldr	r4, [pc, #360]	; 2db8 <store_script_in_file_cache+0x1b0>
    2c4c:	ldr	r7, [r4]
    2c50:	ldr	r2, [r7]
    2c54:	add	r1, r0, #7
    2c58:	bic	r8, r1, #7
    2c5c:	ldr	r0, [r7, #4]
    2c60:	sub	ip, r0, r2
    2c64:	cmp	r8, ip
    2c68:	bls	2cac <store_script_in_file_cache+0xa4>
    2c6c:	add	r3, r8, #16
    2c70:	sub	r5, r0, r7
    2c74:	cmp	r3, r5
    2c78:	bls	2c80 <store_script_in_file_cache+0x78>
    2c7c:	mov	r5, r3
    2c80:	mov	r0, r5
    2c84:	bl	0 <_emalloc>
    2c88:	add	r2, r0, #16
    2c8c:	add	ip, r0, r8
    2c90:	add	r3, ip, #16
    2c94:	str	r3, [r0]
    2c98:	add	r1, r0, r5
    2c9c:	str	r1, [r0, #4]
    2ca0:	str	r7, [r0, #8]
    2ca4:	str	r0, [r4]
    2ca8:	b	2cb4 <store_script_in_file_cache+0xac>
    2cac:	add	r3, r2, r8
    2cb0:	str	r3, [r7]
    2cb4:	ldr	r3, [pc, #264]	; 2dc4 <store_script_in_file_cache+0x1bc>
    2cb8:	str	r2, [r3]
    2cbc:	bl	0 <zend_shared_alloc_clear_xlat_table>
    2cc0:	mov	r1, #0
    2cc4:	mov	r2, #0
    2cc8:	mov	r3, #0
    2ccc:	mov	r0, r6
    2cd0:	bl	0 <zend_accel_script_persist>
    2cd4:	mov	r5, r0
    2cd8:	bl	0 <zend_shared_alloc_destroy_xlat_table>
    2cdc:	ldr	r4, [r5]
    2ce0:	cmp	r4, #0
    2ce4:	beq	2d2c <store_script_in_file_cache+0x124>
    2ce8:	ldr	ip, [r4, #12]
    2cec:	cmp	ip, #6
    2cf0:	bcc	2d2c <store_script_in_file_cache+0x124>
    2cf4:	add	r2, r4, ip
    2cf8:	add	r0, r2, #11
    2cfc:	ldr	r1, [pc, #184]	; 2dbc <store_script_in_file_cache+0x1b4>
    2d00:	mov	r2, #5
    2d04:	bl	0 <memcmp>
    2d08:	cmp	r0, #0
    2d0c:	bne	2d2c <store_script_in_file_cache+0x124>
    2d10:	add	r0, r4, #16
    2d14:	ldr	r1, [pc, #172]	; 2dc8 <store_script_in_file_cache+0x1c0>
    2d18:	bl	0 <strstr>
    2d1c:	cmp	r0, #0
    2d20:	moveq	r0, #1
    2d24:	movne	r0, #0
    2d28:	b	2d30 <store_script_in_file_cache+0x128>
    2d2c:	mov	r0, #0
    2d30:	strb	r0, [r5, #245]	; 0xf5
    2d34:	ldr	r3, [r5, #248]	; 0xf8
    2d38:	ldr	ip, [r5, #252]	; 0xfc
    2d3c:	add	r4, r3, ip
    2d40:	ldr	r0, [pc, #124]	; 2dc4 <store_script_in_file_cache+0x1bc>
    2d44:	ldr	ip, [r0]
    2d48:	cmp	r4, ip
    2d4c:	beq	2d7c <store_script_in_file_cache+0x174>
    2d50:	mov	r2, #1
    2d54:	mov	r1, #2
    2d58:	cmp	r4, ip
    2d5c:	movcc	r0, r2
    2d60:	movcs	r0, r1
    2d64:	ldr	r1, [pc, #84]	; 2dc0 <store_script_in_file_cache+0x1b8>
    2d68:	ldr	r2, [r5]
    2d6c:	add	r2, r2, #16
    2d70:	str	ip, [sp, #4]
    2d74:	str	r4, [sp]
    2d78:	bl	0 <zend_accel_error>
    2d7c:	mov	r0, r5
    2d80:	bl	0 <zend_accel_script_checksum>
    2d84:	str	r0, [r5, #276]	; 0x114
    2d88:	mov	r1, #0
    2d8c:	mov	r0, r5
    2d90:	bl	0 <zend_file_cache_script_store>
    2d94:	mov	r0, r5
    2d98:	ldr	r4, [sp, #16]
    2d9c:	ldr	r5, [sp, #20]
    2da0:	ldr	r6, [sp, #24]
    2da4:	ldr	r7, [sp, #28]
    2da8:	ldr	r8, [sp, #32]
    2dac:	ldr	lr, [sp, #12]
    2db0:	add	sp, sp, #40	; 0x28
    2db4:	bx	lr
    2db8:	.word	0x000000f8
    2dbc:	.word	0x0000091d
    2dc0:	.word	0x000000b3
    2dc4:	.word	0x00000134
    2dc8:	.word	0x000003b1

00002dcc <zend_accel_get_auto_globals>:
    2dcc:	mov	ip, sp
    2dd0:	sub	sp, sp, #24
    2dd4:	str	ip, [sp]
    2dd8:	str	lr, [sp, #4]
    2ddc:	str	r4, [sp, #8]
    2de0:	str	r5, [sp, #12]
    2de4:	str	r6, [sp, #16]
    2de8:	mov	r5, #1
    2dec:	mov	r4, #0
    2df0:	mov	r6, #0
    2df4:	ldr	r0, [pc, #88]	; 2e54 <zend_accel_get_auto_globals+0x88>
    2df8:	ldr	r1, [pc, #80]	; 2e50 <zend_accel_get_auto_globals+0x84>
    2dfc:	ldr	r1, [r1, r6, lsl #2]
    2e00:	bl	0 <zend_hash_find>
    2e04:	cmp	r0, #0
    2e08:	movne	r2, #1
    2e0c:	moveq	r2, #0
    2e10:	and	r0, r2, #255	; 0xff
    2e14:	orr	ip, r4, r5
    2e18:	cmp	r0, #0
    2e1c:	movne	r4, ip
    2e20:	moveq	r4, r4
    2e24:	add	r5, r5, r5
    2e28:	add	r6, r6, #1
    2e2c:	cmp	r6, #4
    2e30:	blt	2df4 <zend_accel_get_auto_globals+0x28>
    2e34:	mov	r0, r4
    2e38:	ldr	r4, [sp, #8]
    2e3c:	ldr	r5, [sp, #12]
    2e40:	ldr	r6, [sp, #16]
    2e44:	ldr	lr, [sp, #4]
    2e48:	add	sp, sp, #24
    2e4c:	bx	lr
    2e50:	.word	0x00000010
    2e54:	.word	0x000000a8

00002e58 <zend_accel_get_auto_globals_no_jit>:
    2e58:	mov	ip, sp
    2e5c:	sub	sp, sp, #8
    2e60:	str	ip, [sp]
    2e64:	str	lr, [sp, #4]
    2e68:	ldr	r0, [pc, #60]	; 2eac <zend_accel_get_auto_globals_no_jit+0x54>
    2e6c:	ldr	r1, [pc, #52]	; 2ea8 <zend_accel_get_auto_globals_no_jit+0x50>
    2e70:	ldr	r1, [r1]
    2e74:	bl	0 <zend_hash_find>
    2e78:	cmp	r0, #0
    2e7c:	movne	r0, #1
    2e80:	moveq	r0, #0
    2e84:	and	r0, r0, #255	; 0xff
    2e88:	cmp	r0, #0
    2e8c:	beq	2e98 <zend_accel_get_auto_globals_no_jit+0x40>
    2e90:	mov	r0, #8
    2e94:	b	2e9c <zend_accel_get_auto_globals_no_jit+0x44>
    2e98:	mov	r0, #0
    2e9c:	ldr	lr, [sp, #4]
    2ea0:	add	sp, sp, #8
    2ea4:	bx	lr
    2ea8:	.word	0x0000001c
    2eac:	.word	0x000000a8

00002eb0 <zend_accel_set_auto_globals>:
    2eb0:	mov	ip, sp
    2eb4:	sub	sp, sp, #24
    2eb8:	str	ip, [sp]
    2ebc:	str	lr, [sp, #4]
    2ec0:	str	r4, [sp, #8]
    2ec4:	str	r5, [sp, #12]
    2ec8:	str	r6, [sp, #16]
    2ecc:	mov	r4, r0
    2ed0:	mov	r5, #1
    2ed4:	mov	r6, #0
    2ed8:	and	r0, r4, r5
    2edc:	cmp	r0, #0
    2ee0:	beq	2f0c <zend_accel_set_auto_globals+0x5c>
    2ee4:	ldr	r0, [pc, #72]	; 2f34 <zend_accel_set_auto_globals+0x84>
    2ee8:	ldr	r1, [r0]
    2eec:	and	ip, r1, r5
    2ef0:	cmp	ip, #0
    2ef4:	bne	2f0c <zend_accel_set_auto_globals+0x5c>
    2ef8:	orr	r2, r1, r5
    2efc:	str	r2, [r0]
    2f00:	ldr	r3, [pc, #48]	; 2f38 <zend_accel_set_auto_globals+0x88>
    2f04:	ldr	r0, [r3, r6, lsl #2]
    2f08:	bl	0 <zend_is_auto_global>
    2f0c:	add	r5, r5, r5
    2f10:	add	r6, r6, #1
    2f14:	cmp	r6, #4
    2f18:	blt	2ed8 <zend_accel_set_auto_globals+0x28>
    2f1c:	ldr	r4, [sp, #8]
    2f20:	ldr	r5, [sp, #12]
    2f24:	ldr	r6, [sp, #16]
    2f28:	ldr	lr, [sp, #4]
    2f2c:	add	sp, sp, #24
    2f30:	bx	lr
    2f34:	.word	0x000000f8
    2f38:	.word	0x00000010

00002f3c <zend_accel_init_auto_globals>:
    2f3c:	mov	ip, sp
    2f40:	sub	sp, sp, #24
    2f44:	str	ip, [sp]
    2f48:	str	lr, [sp, #4]
    2f4c:	str	r4, [sp, #8]
    2f50:	str	r5, [sp, #12]
    2f54:	str	r6, [sp, #16]
    2f58:	str	r7, [sp, #20]
    2f5c:	mov	r7, #0
    2f60:	ldr	r1, [pc, #172]	; 3014 <zend_accel_init_auto_globals+0xd8>
    2f64:	ldr	r4, [r1, r7, lsl #3]
    2f68:	add	r3, r1, r7, lsl #3
    2f6c:	ldr	r6, [r3, #4]
    2f70:	add	r2, r6, #24
    2f74:	bic	r0, r2, #7
    2f78:	bl	0 <__zend_malloc>
    2f7c:	mov	r1, #1
    2f80:	str	r1, [r0]
    2f84:	mov	r1, #128	; 0x80
    2f88:	orr	r2, r1, #6
    2f8c:	str	r2, [r0, #4]
    2f90:	mov	r3, #0
    2f94:	str	r3, [r0, #8]
    2f98:	str	r6, [r0, #12]
    2f9c:	mov	r5, r0
    2fa0:	add	r0, r5, #16
    2fa4:	mov	r2, r6
    2fa8:	mov	r1, r4
    2fac:	bl	0 <memcpy>
    2fb0:	add	ip, r5, r6
    2fb4:	mov	r2, #0
    2fb8:	strb	r2, [ip, #16]
    2fbc:	ldr	ip, [pc, #84]	; 3018 <zend_accel_init_auto_globals+0xdc>
    2fc0:	str	r5, [ip, r7, lsl #2]
    2fc4:	ldr	r0, [r5, #8]
    2fc8:	cmp	r0, #0
    2fcc:	bne	2fd8 <zend_accel_init_auto_globals+0x9c>
    2fd0:	mov	r0, r5
    2fd4:	bl	0 <zend_string_hash_func>
    2fd8:	ldr	r0, [pc, #56]	; 3018 <zend_accel_init_auto_globals+0xdc>
    2fdc:	ldr	r0, [r0, r7, lsl #2]
    2fe0:	bl	28c <accel_new_interned_string>
    2fe4:	ldr	r1, [pc, #44]	; 3018 <zend_accel_init_auto_globals+0xdc>
    2fe8:	str	r0, [r1, r7, lsl #2]
    2fec:	add	r7, r7, #1
    2ff0:	cmp	r7, #4
    2ff4:	blt	2f60 <zend_accel_init_auto_globals+0x24>
    2ff8:	ldr	r4, [sp, #8]
    2ffc:	ldr	r5, [sp, #12]
    3000:	ldr	r6, [sp, #16]
    3004:	ldr	r7, [sp, #20]
    3008:	ldr	lr, [sp, #4]
    300c:	add	sp, sp, #24
    3010:	bx	lr
    3014:	.word	0x00000be4
    3018:	.word	0x00000010

0000301c <opcache_compile_file>:
    301c:	mov	ip, sp
    3020:	sub	sp, sp, #464	; 0x1d0
    3024:	str	ip, [sp]
    3028:	str	lr, [sp, #4]
    302c:	str	r4, [sp, #16]
    3030:	str	r5, [sp, #20]
    3034:	str	r6, [sp, #24]
    3038:	str	r7, [sp, #28]
    303c:	str	r8, [sp, #32]
    3040:	str	r9, [sp, #36]	; 0x24
    3044:	str	sl, [sp, #40]	; 0x28
    3048:	str	fp, [sp, #44]	; 0x2c
    304c:	mov	r4, r3
    3050:	str	r1, [sp, #8]
    3054:	mov	sl, r0
    3058:	mov	r7, #0
    305c:	mov	r6, #0
    3060:	mov	r5, #0
    3064:	ldr	r1, [sl, #28]
    3068:	cmp	r1, #0
    306c:	bne	30d0 <opcache_compile_file+0xb4>
    3070:	ldr	r3, [pc, #1312]	; 3598 <opcache_compile_file+0x57c>
    3074:	ldr	r8, [r3]
    3078:	ldr	r0, [sl, #20]
    307c:	mov	r1, sl
    3080:	blx	r8
    3084:	cmp	r0, #0
    3088:	beq	30d0 <opcache_compile_file+0xb4>
    308c:	mov	r2, #0
    3090:	str	r2, [r4]
    3094:	ldr	ip, [sp, #8]
    3098:	cmp	ip, #8
    309c:	bne	30bc <opcache_compile_file+0xa0>
    30a0:	mov	r0, #2
    30a4:	ldr	r1, [sl, #20]
    30a8:	bl	0 <zend_message_dispatcher>
    30ac:	ldr	r0, [pc, #1264]	; 35a4 <opcache_compile_file+0x588>
    30b0:	movw	r1, #1682	; 0x692
    30b4:	bl	0 <_zend_bailout>
    30b8:	b	30c8 <opcache_compile_file+0xac>
    30bc:	mov	r0, #1
    30c0:	ldr	r1, [sl, #20]
    30c4:	bl	0 <zend_message_dispatcher>
    30c8:	mov	r0, #0
    30cc:	b	3544 <opcache_compile_file+0x528>
    30d0:	ldr	r2, [sl, #24]
    30d4:	cmp	r2, #0
    30d8:	beq	3158 <opcache_compile_file+0x13c>
    30dc:	ldr	r0, [pc, #1176]	; 357c <opcache_compile_file+0x560>
    30e0:	add	r1, r2, #16
    30e4:	ldr	r2, [r2, #12]
    30e8:	bl	0 <zend_accel_blacklist_is_blacklisted>
    30ec:	cmp	r0, #0
    30f0:	beq	3158 <opcache_compile_file+0x13c>
    30f4:	ldr	ip, [pc, #1164]	; 3588 <opcache_compile_file+0x56c>
    30f8:	ldrb	r0, [ip]
    30fc:	cmp	r0, #0
    3100:	beq	310c <opcache_compile_file+0xf0>
    3104:	mov	r0, #0
    3108:	bl	0 <zend_accel_shared_protect>
    310c:	ldr	r3, [pc, #1200]	; 35c4 <opcache_compile_file+0x5a8>
    3110:	ldr	ip, [r3]
    3114:	ldr	r2, [ip, #8]
    3118:	add	r3, r2, #1
    311c:	str	r3, [ip, #8]
    3120:	ldr	r0, [pc, #1120]	; 3588 <opcache_compile_file+0x56c>
    3124:	ldrb	r3, [r0]
    3128:	cmp	r3, #0
    312c:	beq	3138 <opcache_compile_file+0x11c>
    3130:	mov	r0, #1
    3134:	bl	0 <zend_accel_shared_protect>
    3138:	ldr	ip, [pc, #1108]	; 3594 <opcache_compile_file+0x578>
    313c:	ldr	ip, [ip]
    3140:	ldr	r1, [sp, #8]
    3144:	mov	r0, sl
    3148:	blx	ip
    314c:	str	r0, [r4]
    3150:	mov	r0, #0
    3154:	b	3544 <opcache_compile_file+0x528>
    3158:	ldr	ip, [pc, #1044]	; 3574 <opcache_compile_file+0x558>
    315c:	ldrb	r0, [ip]
    3160:	cmp	r0, #0
    3164:	bne	3188 <opcache_compile_file+0x16c>
    3168:	ldr	r1, [pc, #1092]	; 35b4 <opcache_compile_file+0x598>
    316c:	ldr	r0, [r1]
    3170:	cmp	r0, #0
    3174:	bne	3188 <opcache_compile_file+0x16c>
    3178:	ldr	r2, [pc, #1040]	; 3590 <opcache_compile_file+0x574>
    317c:	ldr	r0, [r2]
    3180:	cmp	r0, #0
    3184:	ble	32a4 <opcache_compile_file+0x288>
    3188:	mov	r0, #0
    318c:	str	r0, [sp, #48]	; 0x30
    3190:	add	r2, sp, #48	; 0x30
    3194:	mov	r3, #0
    3198:	ldr	ip, [pc, #1008]	; 3590 <opcache_compile_file+0x574>
    319c:	ldr	ip, [ip]
    31a0:	cmp	ip, #0
    31a4:	movgt	r1, r2
    31a8:	movle	r1, r3
    31ac:	mov	r0, sl
    31b0:	bl	14b0 <zend_get_file_handle_timestamp>
    31b4:	mov	r6, r0
    31b8:	cmp	r6, #0
    31bc:	bne	31e0 <opcache_compile_file+0x1c4>
    31c0:	ldr	r3, [pc, #972]	; 3594 <opcache_compile_file+0x578>
    31c4:	ldr	ip, [r3]
    31c8:	ldr	r1, [sp, #8]
    31cc:	mov	r0, sl
    31d0:	blx	ip
    31d4:	str	r0, [r4]
    31d8:	mov	r0, #0
    31dc:	b	3544 <opcache_compile_file+0x528>
    31e0:	ldr	r1, [pc, #972]	; 35b4 <opcache_compile_file+0x598>
    31e4:	ldr	r2, [r1]
    31e8:	cmp	r2, #0
    31ec:	beq	3224 <opcache_compile_file+0x208>
    31f0:	ldr	r1, [pc, #944]	; 35a8 <opcache_compile_file+0x58c>
    31f4:	ldr	r1, [r1]
    31f8:	sub	r3, r1, r2
    31fc:	cmp	r3, r6
    3200:	bge	3224 <opcache_compile_file+0x208>
    3204:	ldr	r0, [pc, #904]	; 3594 <opcache_compile_file+0x578>
    3208:	ldr	ip, [r0]
    320c:	ldr	r1, [sp, #8]
    3210:	mov	r0, sl
    3214:	blx	ip
    3218:	str	r0, [r4]
    321c:	mov	r0, #0
    3220:	b	3544 <opcache_compile_file+0x528>
    3224:	ldr	r3, [pc, #868]	; 3590 <opcache_compile_file+0x574>
    3228:	ldr	r2, [r3]
    322c:	cmp	r2, #0
    3230:	ble	32a4 <opcache_compile_file+0x288>
    3234:	ldr	r1, [sp, #48]	; 0x30
    3238:	cmp	r1, r2
    323c:	bls	32a4 <opcache_compile_file+0x288>
    3240:	ldr	r3, [pc, #832]	; 3588 <opcache_compile_file+0x56c>
    3244:	ldrb	ip, [r3]
    3248:	cmp	ip, #0
    324c:	beq	3258 <opcache_compile_file+0x23c>
    3250:	mov	r0, #0
    3254:	bl	0 <zend_accel_shared_protect>
    3258:	ldr	r0, [pc, #868]	; 35c4 <opcache_compile_file+0x5a8>
    325c:	ldr	ip, [r0]
    3260:	ldr	r2, [ip, #8]
    3264:	add	r0, r2, #1
    3268:	str	r0, [ip, #8]
    326c:	ldr	r3, [pc, #788]	; 3588 <opcache_compile_file+0x56c>
    3270:	ldrb	r1, [r3]
    3274:	cmp	r1, #0
    3278:	beq	3284 <opcache_compile_file+0x268>
    327c:	mov	r0, #1
    3280:	bl	0 <zend_accel_shared_protect>
    3284:	ldr	r1, [pc, #776]	; 3594 <opcache_compile_file+0x578>
    3288:	ldr	ip, [r1]
    328c:	ldr	r1, [sp, #8]
    3290:	mov	r0, sl
    3294:	blx	ip
    3298:	str	r0, [r4]
    329c:	mov	r0, #0
    32a0:	b	3544 <opcache_compile_file+0x528>
    32a4:	ldr	r1, [pc, #716]	; 3578 <opcache_compile_file+0x55c>
    32a8:	ldr	r8, [r1]
    32ac:	ldr	r2, [pc, #764]	; 35b0 <opcache_compile_file+0x594>
    32b0:	ldr	r3, [r2]
    32b4:	ldr	r9, [r3, #20]
    32b8:	ldr	r1, [pc, #768]	; 35c0 <opcache_compile_file+0x5a4>
    32bc:	ldr	r0, [r1]
    32c0:	ldr	r3, [r0, #20]
    32c4:	str	r3, [sp, #12]
    32c8:	ldr	ip, [pc, #688]	; 3580 <opcache_compile_file+0x564>
    32cc:	ldr	r3, [ip]
    32d0:	ldr	r0, [ip, #8]
    32d4:	ldr	r1, [ip, #4]
    32d8:	str	r3, [sp, #56]	; 0x38
    32dc:	str	r1, [sp, #60]	; 0x3c
    32e0:	str	r0, [sp, #64]	; 0x40
    32e4:	ldr	r0, [pc, #720]	; 35bc <opcache_compile_file+0x5a0>
    32e8:	mov	ip, #0
    32ec:	str	ip, [r0]
    32f0:	ldr	r3, [pc, #704]	; 35b8 <opcache_compile_file+0x59c>
    32f4:	ldr	fp, [r3]
    32f8:	add	ip, sp, #72	; 0x48
    32fc:	str	ip, [r3]
    3300:	add	r0, sp, #72	; 0x48
    3304:	bl	0 <_setjmp>
    3308:	cmp	r0, #0
    330c:	bne	3370 <opcache_compile_file+0x354>
    3310:	ldr	r0, [pc, #620]	; 3584 <opcache_compile_file+0x568>
    3314:	ldr	r5, [r0]
    3318:	orr	r2, r5, #4
    331c:	orr	r1, r2, #16
    3320:	orr	r3, r1, #32
    3324:	orr	r1, r3, #64	; 0x40
    3328:	orr	ip, r1, #8192	; 0x2000
    332c:	str	ip, [r0]
    3330:	ldr	r1, [pc, #628]	; 35ac <opcache_compile_file+0x590>
    3334:	ldr	r2, [r1]
    3338:	cmp	r2, #0
    333c:	beq	3348 <opcache_compile_file+0x32c>
    3340:	orr	r2, ip, #4096	; 0x1000
    3344:	str	r2, [r0]
    3348:	ldr	ip, [pc, #580]	; 3594 <opcache_compile_file+0x578>
    334c:	ldr	ip, [ip]
    3350:	ldr	r1, [sp, #8]
    3354:	mov	r0, sl
    3358:	blx	ip
    335c:	str	r0, [r4]
    3360:	mov	r4, r0
    3364:	ldr	r1, [pc, #536]	; 3584 <opcache_compile_file+0x568>
    3368:	str	r5, [r1]
    336c:	b	3380 <opcache_compile_file+0x364>
    3370:	mov	r4, #0
    3374:	mov	r7, #1
    3378:	ldr	r1, [pc, #516]	; 3584 <opcache_compile_file+0x568>
    337c:	str	r5, [r1]
    3380:	ldr	r2, [pc, #560]	; 35b8 <opcache_compile_file+0x59c>
    3384:	str	fp, [r2]
    3388:	ldr	ip, [pc, #488]	; 3578 <opcache_compile_file+0x55c>
    338c:	str	r8, [ip]
    3390:	ldr	ip, [pc, #488]	; 3580 <opcache_compile_file+0x564>
    3394:	vldr	d7, [sp, #56]	; 0x38
    3398:	vstr	d7, [ip]
    339c:	vldr	d7, [sp, #64]	; 0x40
    33a0:	vstr	d7, [ip, #8]
    33a4:	cmp	r4, #0
    33a8:	bne	33c8 <opcache_compile_file+0x3ac>
    33ac:	cmp	r7, #0
    33b0:	beq	33c0 <opcache_compile_file+0x3a4>
    33b4:	ldr	r0, [pc, #488]	; 35a4 <opcache_compile_file+0x588>
    33b8:	movw	r1, #1767	; 0x6e7
    33bc:	bl	0 <_zend_bailout>
    33c0:	mov	r0, #0
    33c4:	b	3544 <opcache_compile_file+0x528>
    33c8:	bl	0 <create_persistent_script>
    33cc:	mov	r5, r0
    33d0:	add	r3, r5, #4
    33d4:	mov	r2, r4
    33d8:	mov	lr, #34	; 0x22
    33dc:	ldr	ip, [r2], #4
    33e0:	subs	lr, lr, #1
    33e4:	str	ip, [r3], #4
    33e8:	bne	33dc <opcache_compile_file+0x3c0>
    33ec:	ldr	r2, [pc, #380]	; 3570 <opcache_compile_file+0x554>
    33f0:	ldr	r0, [r2]
    33f4:	ldr	ip, [r0, #20]
    33f8:	sub	r1, ip, r9
    33fc:	mov	r2, r5
    3400:	bl	0 <zend_accel_move_user_functions>
    3404:	ldr	r2, [pc, #404]	; 35a0 <opcache_compile_file+0x584>
    3408:	ldr	r0, [r2]
    340c:	ldr	r3, [r0, #20]
    3410:	ldr	r2, [sp, #12]
    3414:	sub	r1, r3, r2
    3418:	mov	r2, r5
    341c:	bl	0 <zend_accel_move_user_classes>
    3420:	ldr	r2, [r4, #4]
    3424:	and	r2, r2, #65536	; 0x10000
    3428:	cmp	r2, #0
    342c:	beq	343c <opcache_compile_file+0x420>
    3430:	mov	r0, r4
    3434:	bl	0 <zend_build_delayed_early_binding_list>
    3438:	b	3440 <opcache_compile_file+0x424>
    343c:	mvn	r0, #0
    3440:	str	r0, [r5, #228]	; 0xe4
    3444:	mov	r0, r4
    3448:	bl	0 <_efree>
    344c:	ldr	r3, [pc, #328]	; 359c <opcache_compile_file+0x580>
    3450:	ldrb	r2, [r3]
    3454:	cmp	r2, #0
    3458:	bne	3468 <opcache_compile_file+0x44c>
    345c:	bl	2e58 <zend_accel_get_auto_globals_no_jit>
    3460:	str	r0, [r5, #236]	; 0xec
    3464:	b	3470 <opcache_compile_file+0x454>
    3468:	bl	2dcc <zend_accel_get_auto_globals>
    346c:	str	r0, [r5, #236]	; 0xec
    3470:	ldr	r0, [pc, #252]	; 3574 <opcache_compile_file+0x558>
    3474:	ldrb	ip, [r0]
    3478:	cmp	ip, #0
    347c:	beq	349c <opcache_compile_file+0x480>
    3480:	str	r6, [r5, #240]	; 0xf0
    3484:	ldr	r2, [pc, #284]	; 35a8 <opcache_compile_file+0x58c>
    3488:	ldr	r0, [r2]
    348c:	ldr	r1, [pc, #248]	; 358c <opcache_compile_file+0x570>
    3490:	ldr	r1, [r1]
    3494:	add	r1, r0, r1
    3498:	str	r1, [r5, #280]	; 0x118
    349c:	ldr	r3, [sl, #24]
    34a0:	cmp	r3, #0
    34a4:	bne	350c <opcache_compile_file+0x4f0>
    34a8:	ldr	r0, [sl, #20]
    34ac:	bl	0 <strlen>
    34b0:	ldr	r7, [sl, #20]
    34b4:	mov	r6, r0
    34b8:	add	r0, r6, #24
    34bc:	bic	r0, r0, #7
    34c0:	bl	0 <_emalloc>
    34c4:	mov	ip, #1
    34c8:	str	ip, [r0]
    34cc:	mov	r1, #0
    34d0:	orr	r3, r1, #6
    34d4:	str	r3, [r0, #4]
    34d8:	mov	r2, #0
    34dc:	str	r2, [r0, #8]
    34e0:	str	r6, [r0, #12]
    34e4:	mov	r4, r0
    34e8:	add	r0, r4, #16
    34ec:	mov	r2, r6
    34f0:	mov	r1, r7
    34f4:	bl	0 <memcpy>
    34f8:	add	r0, r4, r6
    34fc:	mov	ip, #0
    3500:	strb	ip, [r0, #16]
    3504:	str	r4, [r5]
    3508:	b	352c <opcache_compile_file+0x510>
    350c:	ldr	r1, [r3, #4]
    3510:	and	r0, r1, #64	; 0x40
    3514:	cmp	r0, #0
    3518:	bne	3528 <opcache_compile_file+0x50c>
    351c:	ldr	r0, [r3]
    3520:	add	r2, r0, #1
    3524:	str	r2, [r3]
    3528:	str	r3, [r5]
    352c:	ldr	r0, [r5]
    3530:	ldr	r3, [r0, #8]
    3534:	cmp	r3, #0
    3538:	bne	3540 <opcache_compile_file+0x524>
    353c:	bl	0 <zend_string_hash_func>
    3540:	mov	r0, r5
    3544:	ldr	r4, [sp, #16]
    3548:	ldr	r5, [sp, #20]
    354c:	ldr	r6, [sp, #24]
    3550:	ldr	r7, [sp, #28]
    3554:	ldr	r8, [sp, #32]
    3558:	ldr	r9, [sp, #36]	; 0x24
    355c:	ldr	sl, [sp, #40]	; 0x28
    3560:	ldr	fp, [sp, #44]	; 0x2c
    3564:	ldr	lr, [sp, #4]
    3568:	add	sp, sp, #464	; 0x1d0
    356c:	bx	lr
    3570:	.word	0x00000020
    3574:	.word	0x00000056
    3578:	.word	0x0000001c
    357c:	.word	0x00000000
    3580:	.word	0x000001b0
    3584:	.word	0x0000008c
    3588:	.word	0x00000059
    358c:	.word	0x00000060
    3590:	.word	0x0000007c
    3594:	.word	0x00000000
    3598:	.word	0x00000004
    359c:	.word	0x0000012a
    35a0:	.word	0x00000024
    35a4:	.word	0x00000121
    35a8:	.word	0x000000fc
    35ac:	.word	0x0000008c
    35b0:	.word	0x0000010c
    35b4:	.word	0x00000064
    35b8:	.word	0x00000100
    35bc:	.word	0x000001b8
    35c0:	.word	0x00000110
    35c4:	.word	0x00000000

000035c8 <file_cache_compile_file>:
    35c8:	mov	ip, sp
    35cc:	sub	sp, sp, #120	; 0x78
    35d0:	str	ip, [sp]
    35d4:	str	lr, [sp, #4]
    35d8:	str	r4, [sp, #8]
    35dc:	str	r5, [sp, #12]
    35e0:	str	r6, [sp, #16]
    35e4:	mov	r5, r1
    35e8:	mov	r4, r0
    35ec:	mov	ip, #0
    35f0:	str	ip, [sp, #24]
    35f4:	ldr	r2, [r4, #20]
    35f8:	mov	r3, r2
    35fc:	ldrb	r0, [r3]
    3600:	cmp	r0, #97	; 0x61
    3604:	blt	3610 <file_cache_compile_file+0x48>
    3608:	cmp	r0, #122	; 0x7a
    360c:	ble	399c <file_cache_compile_file+0x3d4>
    3610:	ldrb	ip, [r3]
    3614:	cmp	ip, #65	; 0x41
    3618:	blt	3624 <file_cache_compile_file+0x5c>
    361c:	cmp	ip, #90	; 0x5a
    3620:	ble	399c <file_cache_compile_file+0x3d4>
    3624:	ldrb	r0, [r3]
    3628:	cmp	r0, #48	; 0x30
    362c:	blt	3638 <file_cache_compile_file+0x70>
    3630:	cmp	r0, #57	; 0x39
    3634:	ble	399c <file_cache_compile_file+0x3d4>
    3638:	ldrb	r1, [r3]
    363c:	cmp	r1, #43	; 0x2b
    3640:	beq	399c <file_cache_compile_file+0x3d4>
    3644:	cmp	r1, #45	; 0x2d
    3648:	beq	399c <file_cache_compile_file+0x3d4>
    364c:	cmp	r1, #46	; 0x2e
    3650:	beq	399c <file_cache_compile_file+0x3d4>
    3654:	cmp	r3, r2
    3658:	beq	3684 <file_cache_compile_file+0xbc>
    365c:	cmp	r1, #58	; 0x3a
    3660:	bne	3684 <file_cache_compile_file+0xbc>
    3664:	ldrb	ip, [r3, #1]
    3668:	cmp	ip, #47	; 0x2f
    366c:	bne	3684 <file_cache_compile_file+0xbc>
    3670:	ldrb	r0, [r3, #2]
    3674:	cmp	r0, #47	; 0x2f
    3678:	moveq	ip, #1
    367c:	movne	ip, #0
    3680:	b	3688 <file_cache_compile_file+0xc0>
    3684:	mov	ip, #0
    3688:	cmp	ip, #0
    368c:	beq	36f4 <file_cache_compile_file+0x12c>
    3690:	ldr	r6, [r4, #20]
    3694:	ldr	r1, [pc, #804]	; 39c0 <file_cache_compile_file+0x3f8>
    3698:	mov	r2, #7
    369c:	mov	r0, r6
    36a0:	bl	0 <memcmp>
    36a4:	cmp	r0, #0
    36a8:	beq	36cc <file_cache_compile_file+0x104>
    36ac:	ldr	r1, [pc, #792]	; 39cc <file_cache_compile_file+0x404>
    36b0:	mov	r2, #7
    36b4:	mov	r0, r6
    36b8:	bl	0 <memcmp>
    36bc:	cmp	r0, #0
    36c0:	moveq	r1, #1
    36c4:	movne	r1, #0
    36c8:	b	36d0 <file_cache_compile_file+0x108>
    36cc:	mov	r1, #1
    36d0:	eor	r1, r1, #1
    36d4:	cmp	r1, #0
    36d8:	beq	36f4 <file_cache_compile_file+0x12c>
    36dc:	ldr	r3, [pc, #716]	; 39b0 <file_cache_compile_file+0x3e8>
    36e0:	ldr	ip, [r3]
    36e4:	mov	r1, r5
    36e8:	mov	r0, r4
    36ec:	blx	ip
    36f0:	b	3984 <file_cache_compile_file+0x3bc>
    36f4:	ldr	r3, [r4, #24]
    36f8:	cmp	r3, #0
    36fc:	bne	3760 <file_cache_compile_file+0x198>
    3700:	ldr	r2, [r4, #28]
    3704:	cmp	r2, #0
    3708:	bne	3760 <file_cache_compile_file+0x198>
    370c:	ldr	r1, [pc, #672]	; 39b4 <file_cache_compile_file+0x3ec>
    3710:	ldr	r6, [r1]
    3714:	ldr	r0, [r4, #20]
    3718:	mov	r1, r4
    371c:	blx	r6
    3720:	cmn	r0, #1
    3724:	bne	3760 <file_cache_compile_file+0x198>
    3728:	cmp	r5, #8
    372c:	bne	374c <file_cache_compile_file+0x184>
    3730:	mov	r0, #2
    3734:	ldr	r1, [r4, #20]
    3738:	bl	0 <zend_message_dispatcher>
    373c:	ldr	r0, [pc, #628]	; 39b8 <file_cache_compile_file+0x3f0>
    3740:	movw	r1, #1830	; 0x726
    3744:	bl	0 <_zend_bailout>
    3748:	b	3758 <file_cache_compile_file+0x190>
    374c:	mov	r0, #1
    3750:	ldr	r1, [r4, #20]
    3754:	bl	0 <zend_message_dispatcher>
    3758:	mov	r0, #0
    375c:	b	3984 <file_cache_compile_file+0x3bc>
    3760:	ldr	r0, [pc, #596]	; 39bc <file_cache_compile_file+0x3f4>
    3764:	ldr	r1, [r0]
    3768:	add	r3, r1, #1
    376c:	str	r3, [r0]
    3770:	ldr	r3, [pc, #560]	; 39a8 <file_cache_compile_file+0x3e0>
    3774:	ldrb	r2, [r3]
    3778:	cmp	r2, #0
    377c:	beq	3788 <file_cache_compile_file+0x1c0>
    3780:	mov	r0, #0
    3784:	bl	0 <zend_accel_shared_protect>
    3788:	mov	r0, r4
    378c:	bl	0 <zend_file_cache_script_load>
    3790:	mov	r6, r0
    3794:	ldr	r2, [pc, #524]	; 39a8 <file_cache_compile_file+0x3e0>
    3798:	ldrb	r2, [r2]
    379c:	cmp	r2, #0
    37a0:	beq	37ac <file_cache_compile_file+0x1e4>
    37a4:	mov	r0, #1
    37a8:	bl	0 <zend_accel_shared_protect>
    37ac:	ldr	r3, [pc, #520]	; 39bc <file_cache_compile_file+0x3f4>
    37b0:	ldr	ip, [r3]
    37b4:	sub	r2, ip, #1
    37b8:	str	r2, [r3]
    37bc:	ldr	r0, [pc, #528]	; 39d4 <file_cache_compile_file+0x40c>
    37c0:	ldr	r1, [r0]
    37c4:	cmp	ip, r1
    37c8:	bne	37d0 <file_cache_compile_file+0x208>
    37cc:	bl	0 <zend_signal_handler_unblock>
    37d0:	cmp	r6, #0
    37d4:	beq	38dc <file_cache_compile_file+0x314>
    37d8:	ldr	r0, [r6]
    37dc:	cmp	r0, #0
    37e0:	beq	38b4 <file_cache_compile_file+0x2ec>
    37e4:	ldr	r1, [pc, #472]	; 39c4 <file_cache_compile_file+0x3fc>
    37e8:	ldr	r2, [r1]
    37ec:	cmp	r2, #0
    37f0:	beq	383c <file_cache_compile_file+0x274>
    37f4:	ldr	r0, [r2]
    37f8:	cmp	r0, #0
    37fc:	beq	383c <file_cache_compile_file+0x274>
    3800:	ldr	ip, [r2, #12]
    3804:	cmp	ip, #0
    3808:	beq	383c <file_cache_compile_file+0x274>
    380c:	ldrb	r1, [ip]
    3810:	and	r1, r1, #1
    3814:	cmp	r1, #0
    3818:	bne	383c <file_cache_compile_file+0x274>
    381c:	ldrb	r1, [r0, #24]
    3820:	cmp	r1, #73	; 0x49
    3824:	bne	383c <file_cache_compile_file+0x274>
    3828:	ldr	r2, [r0, #16]
    382c:	cmp	r2, #4
    3830:	beq	38b4 <file_cache_compile_file+0x2ec>
    3834:	cmp	r2, #16
    3838:	beq	38b4 <file_cache_compile_file+0x2ec>
    383c:	ldr	r0, [pc, #388]	; 39c8 <file_cache_compile_file+0x400>
    3840:	ldr	r1, [r6]
    3844:	bl	0 <zend_hash_add_empty_element>
    3848:	cmp	r0, #0
    384c:	beq	38b4 <file_cache_compile_file+0x2ec>
    3850:	ldrb	r0, [r6, #245]	; 0xf5
    3854:	cmp	r0, #0
    3858:	beq	38b4 <file_cache_compile_file+0x2ec>
    385c:	ldr	ip, [r6]
    3860:	ldr	r3, [ip, #12]
    3864:	add	r0, r3, #8
    3868:	bl	0 <_emalloc>
    386c:	mov	r5, r0
    3870:	ldr	r1, [pc, #340]	; 39cc <file_cache_compile_file+0x404>
    3874:	mov	r2, #7
    3878:	mov	r0, r5
    387c:	bl	0 <memcpy>
    3880:	add	r0, r5, #7
    3884:	ldr	r2, [r6]
    3888:	add	r1, r2, #16
    388c:	ldr	r3, [r2, #12]
    3890:	add	r2, r3, #1
    3894:	bl	0 <memcpy>
    3898:	mov	r1, #0
    389c:	add	r2, sp, #32
    38a0:	mov	r3, #0
    38a4:	mov	r0, r5
    38a8:	bl	0 <_php_stream_stat_path>
    38ac:	mov	r0, r5
    38b0:	bl	0 <_efree>
    38b4:	mov	r0, r4
    38b8:	bl	0 <zend_file_handle_dtor>
    38bc:	ldr	r0, [r6, #236]	; 0xec
    38c0:	cmp	r0, #0
    38c4:	beq	38cc <file_cache_compile_file+0x304>
    38c8:	bl	2eb0 <zend_accel_set_auto_globals>
    38cc:	mov	r1, #1
    38d0:	mov	r0, r6
    38d4:	bl	0 <zend_accel_load_script>
    38d8:	b	3984 <file_cache_compile_file+0x3bc>
    38dc:	mov	r2, #0
    38e0:	add	r3, sp, #24
    38e4:	mov	r1, r5
    38e8:	mov	r0, r4
    38ec:	bl	301c <opcache_compile_file>
    38f0:	mov	r4, r0
    38f4:	cmp	r4, #0
    38f8:	beq	3980 <file_cache_compile_file+0x3b8>
    38fc:	mov	ip, #0
    3900:	str	ip, [sp, #28]
    3904:	mov	r0, r4
    3908:	bl	0 <zend_accel_script_persistable>
    390c:	cmp	r0, #0
    3910:	bne	391c <file_cache_compile_file+0x354>
    3914:	mov	r0, r4
    3918:	b	3974 <file_cache_compile_file+0x3ac>
    391c:	ldr	r0, [pc, #128]	; 39a4 <file_cache_compile_file+0x3dc>
    3920:	ldr	r5, [r0]
    3924:	orr	r1, r5, #4096	; 0x1000
    3928:	str	r1, [r0]
    392c:	ldr	r3, [pc, #120]	; 39ac <file_cache_compile_file+0x3e4>
    3930:	ldr	r1, [r3]
    3934:	ldr	r2, [pc, #148]	; 39d0 <file_cache_compile_file+0x408>
    3938:	ldr	r2, [r2]
    393c:	mov	r0, r4
    3940:	bl	0 <zend_optimize_script>
    3944:	cmp	r0, #0
    3948:	bne	395c <file_cache_compile_file+0x394>
    394c:	ldr	ip, [pc, #80]	; 39a4 <file_cache_compile_file+0x3dc>
    3950:	str	r5, [ip]
    3954:	mov	r0, r4
    3958:	b	3974 <file_cache_compile_file+0x3ac>
    395c:	ldr	ip, [pc, #64]	; 39a4 <file_cache_compile_file+0x3dc>
    3960:	str	r5, [ip]
    3964:	mov	r0, #1
    3968:	str	r0, [sp, #28]
    396c:	mov	r0, r4
    3970:	bl	2c08 <store_script_in_file_cache>
    3974:	ldr	r1, [sp, #28]
    3978:	bl	0 <zend_accel_load_script>
    397c:	b	3984 <file_cache_compile_file+0x3bc>
    3980:	ldr	r0, [sp, #24]
    3984:	ldr	r4, [sp, #8]
    3988:	ldr	r5, [sp, #12]
    398c:	ldr	r6, [sp, #16]
    3990:	ldr	lr, [sp, #4]
    3994:	add	sp, sp, #120	; 0x78
    3998:	bx	lr
    399c:	add	r3, r3, #1
    39a0:	b	35fc <file_cache_compile_file+0x34>
    39a4:	.word	0x0000008c
    39a8:	.word	0x00000059
    39ac:	.word	0x00000074
    39b0:	.word	0x00000000
    39b4:	.word	0x00000004
    39b8:	.word	0x00000121
    39bc:	.word	0x00000000
    39c0:	.word	0x00000ab5
    39c4:	.word	0x00000128
    39c8:	.word	0x000000d4
    39cc:	.word	0x000002f4
    39d0:	.word	0x00000078
    39d4:	.word	0x00000004

000039d8 <check_persistent_script_access>:
    39d8:	mov	ip, sp
    39dc:	sub	sp, sp, #16
    39e0:	str	ip, [sp]
    39e4:	str	lr, [sp, #4]
    39e8:	str	r4, [sp, #8]
    39ec:	str	r5, [sp, #12]
    39f0:	mov	r4, r0
    39f4:	ldr	r0, [r4]
    39f8:	ldr	ip, [r0, #12]
    39fc:	cmp	ip, #13
    3a00:	bcc	3a70 <check_persistent_script_access+0x98>
    3a04:	add	r0, r0, #16
    3a08:	ldr	r1, [pc, #144]	; 3aa0 <check_persistent_script_access+0xc8>
    3a0c:	mov	r2, #7
    3a10:	bl	0 <memcmp>
    3a14:	cmp	r0, #0
    3a18:	bne	3a70 <check_persistent_script_access+0x98>
    3a1c:	ldr	r0, [r4]
    3a20:	add	r0, r0, #23
    3a24:	bl	0 <_estrdup>
    3a28:	mov	r5, r0
    3a2c:	ldr	r1, [pc, #112]	; 3aa4 <check_persistent_script_access+0xcc>
    3a30:	mov	r0, r5
    3a34:	bl	0 <strstr>
    3a38:	cmp	r0, #0
    3a3c:	beq	3a48 <check_persistent_script_access+0x70>
    3a40:	mov	r1, #0
    3a44:	strb	r1, [r0, #5]
    3a48:	mov	r1, #4
    3a4c:	mov	r0, r5
    3a50:	bl	0 <access>
    3a54:	cmp	r0, #0
    3a58:	movne	r4, #1
    3a5c:	moveq	r4, #0
    3a60:	mov	r0, r5
    3a64:	bl	0 <_efree>
    3a68:	mov	r0, r4
    3a6c:	b	3a8c <check_persistent_script_access+0xb4>
    3a70:	ldr	r0, [r4]
    3a74:	add	r0, r0, #16
    3a78:	mov	r1, #4
    3a7c:	bl	0 <access>
    3a80:	cmp	r0, #0
    3a84:	movne	r0, #1
    3a88:	moveq	r0, #0
    3a8c:	ldr	r4, [sp, #8]
    3a90:	ldr	r5, [sp, #12]
    3a94:	ldr	lr, [sp, #4]
    3a98:	add	sp, sp, #16
    3a9c:	bx	lr
    3aa0:	.word	0x000002f4
    3aa4:	.word	0x000008aa

00003aa8 <persistent_compile_file>:
    3aa8:	mov	ip, sp
    3aac:	sub	sp, sp, #160	; 0xa0
    3ab0:	str	ip, [sp, #8]
    3ab4:	str	lr, [sp, #12]
    3ab8:	str	r4, [sp, #16]
    3abc:	str	r5, [sp, #20]
    3ac0:	str	r6, [sp, #24]
    3ac4:	str	r7, [sp, #28]
    3ac8:	str	r8, [sp, #32]
    3acc:	str	r9, [sp, #36]	; 0x24
    3ad0:	mov	r6, r1
    3ad4:	mov	r8, r0
    3ad8:	mov	r4, #0
    3adc:	mov	r7, #0
    3ae0:	ldr	r2, [r8, #20]
    3ae4:	cmp	r2, #0
    3ae8:	beq	4b4c <persistent_compile_file+0x10a4>
    3aec:	ldr	r3, [pc, #3984]	; 4a84 <persistent_compile_file+0xfdc>
    3af0:	ldrb	r1, [r3]
    3af4:	cmp	r1, #0
    3af8:	beq	4b4c <persistent_compile_file+0x10a4>
    3afc:	ldr	r3, [pc, #3888]	; 4a34 <persistent_compile_file+0xf8c>
    3b00:	ldrb	ip, [r3]
    3b04:	cmp	ip, #0
    3b08:	bne	4b24 <persistent_compile_file+0x107c>
    3b0c:	cmp	r1, #0
    3b10:	beq	4ad4 <persistent_compile_file+0x102c>
    3b14:	ldr	r3, [pc, #4008]	; 4ac4 <persistent_compile_file+0x101c>
    3b18:	ldr	r3, [r3]
    3b1c:	ldrb	r1, [r3, #69]	; 0x45
    3b20:	cmp	r1, #0
    3b24:	beq	3bd8 <persistent_compile_file+0x130>
    3b28:	cmp	r1, #0
    3b2c:	beq	3bcc <persistent_compile_file+0x124>
    3b30:	mov	r2, #1
    3b34:	strh	r2, [sp, #144]	; 0x90
    3b38:	mov	ip, #0
    3b3c:	strh	ip, [sp, #146]	; 0x92
    3b40:	mov	r0, #2
    3b44:	str	r0, [sp, #148]	; 0x94
    3b48:	mov	ip, #1
    3b4c:	str	ip, [sp, #152]	; 0x98
    3b50:	ldr	r1, [pc, #3900]	; 4a94 <persistent_compile_file+0xfec>
    3b54:	ldr	r0, [r1]
    3b58:	mov	r1, #5
    3b5c:	add	r2, sp, #144	; 0x90
    3b60:	bl	0 <fcntl>
    3b64:	cmn	r0, #1
    3b68:	bne	3ba0 <persistent_compile_file+0xf8>
    3b6c:	bl	0 <__errno_location>
    3b70:	ldr	r0, [r0]
    3b74:	bl	0 <strerror>
    3b78:	mov	r5, r0
    3b7c:	bl	0 <__errno_location>
    3b80:	mov	r2, r0
    3b84:	mov	r0, #4
    3b88:	ldr	r1, [pc, #3744]	; 4a30 <persistent_compile_file+0xf88>
    3b8c:	ldr	r3, [r2]
    3b90:	mov	r2, r5
    3b94:	bl	0 <zend_accel_error>
    3b98:	mvn	r3, #0
    3b9c:	b	3bd0 <persistent_compile_file+0x128>
    3ba0:	ldrsh	r1, [sp, #144]	; 0x90
    3ba4:	cmp	r1, #2
    3ba8:	bne	3bc4 <persistent_compile_file+0x11c>
    3bac:	ldr	r2, [pc, #3856]	; 4ac4 <persistent_compile_file+0x101c>
    3bb0:	ldr	r0, [r2]
    3bb4:	mov	r3, #0
    3bb8:	strb	r3, [r0, #69]	; 0x45
    3bbc:	mov	r3, #0
    3bc0:	b	3bd0 <persistent_compile_file+0x128>
    3bc4:	mov	r3, #1
    3bc8:	b	3bd0 <persistent_compile_file+0x128>
    3bcc:	mov	r3, #0
    3bd0:	cmp	r3, #0
    3bd4:	bne	4ad4 <persistent_compile_file+0x102c>
    3bd8:	ldr	ip, [pc, #3712]	; 4a60 <persistent_compile_file+0xfb8>
    3bdc:	ldr	r3, [ip]
    3be0:	cmp	r3, #0
    3be4:	beq	3c84 <persistent_compile_file+0x1dc>
    3be8:	ldr	ip, [pc, #3736]	; 4a88 <persistent_compile_file+0xfe0>
    3bec:	ldr	r1, [ip]
    3bf0:	cmp	r1, #0
    3bf4:	bne	3c1c <persistent_compile_file+0x174>
    3bf8:	ldr	r3, [r8, #20]
    3bfc:	ldr	r2, [pc, #3696]	; 4a74 <persistent_compile_file+0xfcc>
    3c00:	ldr	r1, [r2]
    3c04:	cmp	r3, r1
    3c08:	bne	3c1c <persistent_compile_file+0x174>
    3c0c:	ldr	ip, [pc, #3704]	; 4a8c <persistent_compile_file+0xfe4>
    3c10:	ldr	r1, [ip]
    3c14:	cmp	r1, #0
    3c18:	beq	3c60 <persistent_compile_file+0x1b8>
    3c1c:	ldr	r1, [pc, #3684]	; 4a88 <persistent_compile_file+0xfe0>
    3c20:	ldr	r0, [r1]
    3c24:	cmp	r0, #0
    3c28:	beq	3c84 <persistent_compile_file+0x1dc>
    3c2c:	ldr	r1, [r0, #12]
    3c30:	cmp	r1, #0
    3c34:	beq	3c84 <persistent_compile_file+0x1dc>
    3c38:	ldrb	r3, [r1]
    3c3c:	and	r1, r3, #1
    3c40:	eor	ip, r1, #1
    3c44:	cmp	ip, #0
    3c48:	beq	3c84 <persistent_compile_file+0x1dc>
    3c4c:	ldr	ip, [pc, #3640]	; 4a8c <persistent_compile_file+0xfe4>
    3c50:	ldr	r3, [ip]
    3c54:	ldr	r0, [r0]
    3c58:	cmp	r3, r0
    3c5c:	bne	3c84 <persistent_compile_file+0x1dc>
    3c60:	ldr	r2, [pc, #3576]	; 4a60 <persistent_compile_file+0xfb8>
    3c64:	ldr	r4, [r2]
    3c68:	ldr	ip, [pc, #3532]	; 4a3c <persistent_compile_file+0xf94>
    3c6c:	ldr	ip, [ip]
    3c70:	cmp	ip, #0
    3c74:	beq	3f4c <persistent_compile_file+0x4a4>
    3c78:	ldr	r7, [pc, #3528]	; 4a48 <persistent_compile_file+0xfa0>
    3c7c:	str	ip, [sp, #40]	; 0x28
    3c80:	b	3f4c <persistent_compile_file+0x4a4>
    3c84:	ldr	r1, [pc, #3620]	; 4ab0 <persistent_compile_file+0x1008>
    3c88:	ldrb	r1, [r1]
    3c8c:	cmp	r1, #0
    3c90:	bne	3d10 <persistent_compile_file+0x268>
    3c94:	ldr	r0, [r8, #20]
    3c98:	bl	0 <strlen>
    3c9c:	ldr	r1, [r8, #20]
    3ca0:	add	r2, sp, #40	; 0x28
    3ca4:	mov	r3, r0
    3ca8:	mov	r0, r1
    3cac:	mov	r1, r3
    3cb0:	bl	1aec <accel_make_persistent_key>
    3cb4:	mov	r7, r0
    3cb8:	cmp	r7, #0
    3cbc:	bne	3cf0 <persistent_compile_file+0x248>
    3cc0:	ldr	r2, [pc, #3524]	; 4a8c <persistent_compile_file+0xfe4>
    3cc4:	mov	r0, #0
    3cc8:	str	r0, [r2]
    3ccc:	ldr	ip, [pc, #3468]	; 4a60 <persistent_compile_file+0xfb8>
    3cd0:	mov	r0, #0
    3cd4:	str	r0, [ip]
    3cd8:	ldr	r1, [pc, #3444]	; 4a54 <persistent_compile_file+0xfac>
    3cdc:	ldr	ip, [r1]
    3ce0:	mov	r1, r6
    3ce4:	mov	r0, r8
    3ce8:	blx	ip
    3cec:	b	4bc4 <persistent_compile_file+0x111c>
    3cf0:	ldr	r3, [pc, #3532]	; 4ac4 <persistent_compile_file+0x101c>
    3cf4:	ldr	r3, [r3]
    3cf8:	add	r0, r3, #24
    3cfc:	ldr	r2, [sp, #40]	; 0x28
    3d00:	mov	r1, r7
    3d04:	bl	0 <zend_accel_hash_str_find>
    3d08:	mov	r4, r0
    3d0c:	b	3e28 <persistent_compile_file+0x380>
    3d10:	ldr	r3, [r8, #20]
    3d14:	mov	ip, r3
    3d18:	ldrb	r0, [ip]
    3d1c:	cmp	r0, #97	; 0x61
    3d20:	blt	3d2c <persistent_compile_file+0x284>
    3d24:	cmp	r0, #122	; 0x7a
    3d28:	ble	4acc <persistent_compile_file+0x1024>
    3d2c:	ldrb	r0, [ip]
    3d30:	cmp	r0, #65	; 0x41
    3d34:	blt	3d40 <persistent_compile_file+0x298>
    3d38:	cmp	r0, #90	; 0x5a
    3d3c:	ble	4acc <persistent_compile_file+0x1024>
    3d40:	ldrb	r2, [ip]
    3d44:	cmp	r2, #48	; 0x30
    3d48:	blt	3d54 <persistent_compile_file+0x2ac>
    3d4c:	cmp	r2, #57	; 0x39
    3d50:	ble	4acc <persistent_compile_file+0x1024>
    3d54:	ldrb	r1, [ip]
    3d58:	cmp	r1, #43	; 0x2b
    3d5c:	beq	4acc <persistent_compile_file+0x1024>
    3d60:	cmp	r1, #45	; 0x2d
    3d64:	beq	4acc <persistent_compile_file+0x1024>
    3d68:	cmp	r1, #46	; 0x2e
    3d6c:	beq	4acc <persistent_compile_file+0x1024>
    3d70:	cmp	ip, r3
    3d74:	beq	3da0 <persistent_compile_file+0x2f8>
    3d78:	cmp	r1, #58	; 0x3a
    3d7c:	bne	3da0 <persistent_compile_file+0x2f8>
    3d80:	ldrb	r0, [ip, #1]
    3d84:	cmp	r0, #47	; 0x2f
    3d88:	bne	3da0 <persistent_compile_file+0x2f8>
    3d8c:	ldrb	r2, [ip, #2]
    3d90:	cmp	r2, #47	; 0x2f
    3d94:	moveq	r3, #1
    3d98:	movne	r3, #0
    3d9c:	b	3da4 <persistent_compile_file+0x2fc>
    3da0:	mov	r3, #0
    3da4:	cmp	r3, #0
    3da8:	beq	3e30 <persistent_compile_file+0x388>
    3dac:	ldr	r5, [r8, #20]
    3db0:	ldr	r1, [pc, #3264]	; 4a78 <persistent_compile_file+0xfd0>
    3db4:	mov	r2, #7
    3db8:	mov	r0, r5
    3dbc:	bl	0 <memcmp>
    3dc0:	cmp	r0, #0
    3dc4:	beq	3de8 <persistent_compile_file+0x340>
    3dc8:	ldr	r1, [pc, #3284]	; 4aa4 <persistent_compile_file+0xffc>
    3dcc:	mov	r2, #7
    3dd0:	mov	r0, r5
    3dd4:	bl	0 <memcmp>
    3dd8:	cmp	r0, #0
    3ddc:	moveq	r0, #1
    3de0:	movne	r0, #0
    3de4:	b	3dec <persistent_compile_file+0x344>
    3de8:	mov	r0, #1
    3dec:	eor	r0, r0, #1
    3df0:	cmp	r0, #0
    3df4:	beq	3e28 <persistent_compile_file+0x380>
    3df8:	ldr	r0, [pc, #3212]	; 4a8c <persistent_compile_file+0xfe4>
    3dfc:	mov	ip, #0
    3e00:	str	ip, [r0]
    3e04:	ldr	r1, [pc, #3156]	; 4a60 <persistent_compile_file+0xfb8>
    3e08:	mov	ip, #0
    3e0c:	str	ip, [r1]
    3e10:	ldr	r3, [pc, #3132]	; 4a54 <persistent_compile_file+0xfac>
    3e14:	ldr	ip, [r3]
    3e18:	mov	r1, r6
    3e1c:	mov	r0, r8
    3e20:	blx	ip
    3e24:	b	4bc4 <persistent_compile_file+0x111c>
    3e28:	cmp	r4, #0
    3e2c:	bne	3f4c <persistent_compile_file+0x4a4>
    3e30:	ldr	r1, [r8, #28]
    3e34:	cmp	r1, #0
    3e38:	bne	3e90 <persistent_compile_file+0x3e8>
    3e3c:	ldr	r3, [pc, #3092]	; 4a58 <persistent_compile_file+0xfb0>
    3e40:	ldr	ip, [r3]
    3e44:	ldr	r0, [r8, #20]
    3e48:	mov	r1, r8
    3e4c:	blx	ip
    3e50:	cmn	r0, #1
    3e54:	bne	3e90 <persistent_compile_file+0x3e8>
    3e58:	cmp	r6, #8
    3e5c:	bne	3e7c <persistent_compile_file+0x3d4>
    3e60:	mov	r0, #2
    3e64:	ldr	r1, [r8, #20]
    3e68:	bl	0 <zend_message_dispatcher>
    3e6c:	ldr	r0, [pc, #3060]	; 4a68 <persistent_compile_file+0xfc0>
    3e70:	mov	r1, #1984	; 0x7c0
    3e74:	bl	0 <_zend_bailout>
    3e78:	b	3e88 <persistent_compile_file+0x3e0>
    3e7c:	mov	r0, #1
    3e80:	ldr	r1, [r8, #20]
    3e84:	bl	0 <zend_message_dispatcher>
    3e88:	mov	r0, #0
    3e8c:	b	4bc4 <persistent_compile_file+0x111c>
    3e90:	ldr	r1, [r8, #24]
    3e94:	cmp	r1, #0
    3e98:	beq	3f4c <persistent_compile_file+0x4a4>
    3e9c:	ldr	r2, [pc, #3104]	; 4ac4 <persistent_compile_file+0x101c>
    3ea0:	ldr	r2, [r2]
    3ea4:	add	r0, r2, #24
    3ea8:	bl	0 <zend_accel_hash_find_entry>
    3eac:	mov	r5, r0
    3eb0:	cmp	r5, #0
    3eb4:	beq	3f4c <persistent_compile_file+0x4a4>
    3eb8:	ldr	r4, [r5, #12]
    3ebc:	cmp	r7, #0
    3ec0:	beq	3f4c <persistent_compile_file+0x4a4>
    3ec4:	ldrb	r2, [r4, #244]	; 0xf4
    3ec8:	cmp	r2, #0
    3ecc:	bne	3f4c <persistent_compile_file+0x4a4>
    3ed0:	ldr	r3, [pc, #2964]	; 4a6c <persistent_compile_file+0xfc4>
    3ed4:	ldr	ip, [r3]
    3ed8:	add	ip, ip, #1
    3edc:	str	ip, [r3]
    3ee0:	ldr	r3, [pc, #2904]	; 4a40 <persistent_compile_file+0xf98>
    3ee4:	ldrb	r0, [r3]
    3ee8:	cmp	r0, #0
    3eec:	beq	3ef8 <persistent_compile_file+0x450>
    3ef0:	mov	r0, #0
    3ef4:	bl	0 <zend_accel_shared_protect>
    3ef8:	bl	0 <zend_shared_alloc_lock>
    3efc:	ldr	r1, [sp, #40]	; 0x28
    3f00:	mov	r2, r5
    3f04:	mov	r0, r7
    3f08:	bl	2a94 <zend_accel_add_key>
    3f0c:	bl	0 <zend_shared_alloc_unlock>
    3f10:	ldr	r2, [pc, #2856]	; 4a40 <persistent_compile_file+0xf98>
    3f14:	ldrb	r1, [r2]
    3f18:	cmp	r1, #0
    3f1c:	beq	3f28 <persistent_compile_file+0x480>
    3f20:	mov	r0, #1
    3f24:	bl	0 <zend_accel_shared_protect>
    3f28:	ldr	r2, [pc, #2876]	; 4a6c <persistent_compile_file+0xfc4>
    3f2c:	ldr	r0, [r2]
    3f30:	sub	r3, r0, #1
    3f34:	str	r3, [r2]
    3f38:	ldr	r3, [pc, #2940]	; 4abc <persistent_compile_file+0x1014>
    3f3c:	ldr	r1, [r3]
    3f40:	cmp	r0, r1
    3f44:	bne	3f4c <persistent_compile_file+0x4a4>
    3f48:	bl	0 <zend_signal_handler_unblock>
    3f4c:	ldr	r2, [pc, #2872]	; 4a8c <persistent_compile_file+0xfe4>
    3f50:	mov	r0, #0
    3f54:	str	r0, [r2]
    3f58:	ldr	r0, [pc, #2816]	; 4a60 <persistent_compile_file+0xfb8>
    3f5c:	mov	ip, #0
    3f60:	str	ip, [r0]
    3f64:	cmp	r4, #0
    3f68:	beq	3f80 <persistent_compile_file+0x4d8>
    3f6c:	ldrb	r2, [r4, #244]	; 0xf4
    3f70:	cmp	r2, #0
    3f74:	movne	r2, #1
    3f78:	moveq	r2, #0
    3f7c:	b	3f84 <persistent_compile_file+0x4dc>
    3f80:	mov	r2, #0
    3f84:	mov	r3, #0
    3f88:	cmp	r2, #0
    3f8c:	movne	r4, r3
    3f90:	moveq	r4, r4
    3f94:	ldr	r1, [pc, #2728]	; 4a44 <persistent_compile_file+0xf9c>
    3f98:	ldr	r1, [r1]
    3f9c:	cmp	r1, #0
    3fa0:	bne	4064 <persistent_compile_file+0x5bc>
    3fa4:	mov	r3, #0
    3fa8:	strh	r3, [sp, #144]	; 0x90
    3fac:	mov	r0, #0
    3fb0:	strh	r0, [sp, #146]	; 0x92
    3fb4:	mov	r2, #1
    3fb8:	str	r2, [sp, #148]	; 0x94
    3fbc:	mov	ip, #1
    3fc0:	str	ip, [sp, #152]	; 0x98
    3fc4:	ldr	r0, [pc, #2760]	; 4a94 <persistent_compile_file+0xfec>
    3fc8:	ldr	r0, [r0]
    3fcc:	mov	r1, #6
    3fd0:	add	r2, sp, #144	; 0x90
    3fd4:	bl	0 <fcntl>
    3fd8:	cmn	r0, #1
    3fdc:	bne	4014 <persistent_compile_file+0x56c>
    3fe0:	bl	0 <__errno_location>
    3fe4:	ldr	r0, [r0]
    3fe8:	bl	0 <strerror>
    3fec:	mov	r5, r0
    3ff0:	bl	0 <__errno_location>
    3ff4:	mov	ip, r0
    3ff8:	mov	r0, #4
    3ffc:	ldr	r1, [pc, #2728]	; 4aac <persistent_compile_file+0x1004>
    4000:	ldr	r3, [ip]
    4004:	mov	r2, r5
    4008:	bl	0 <zend_accel_error>
    400c:	mvn	r3, #0
    4010:	b	4018 <persistent_compile_file+0x570>
    4014:	mov	r3, #0
    4018:	cmn	r3, #1
    401c:	bne	4058 <persistent_compile_file+0x5b0>
    4020:	ldr	r2, [pc, #2676]	; 4a9c <persistent_compile_file+0xff4>
    4024:	ldr	r0, [r2]
    4028:	cmp	r0, #0
    402c:	beq	4040 <persistent_compile_file+0x598>
    4030:	mov	r1, r6
    4034:	mov	r0, r8
    4038:	bl	35c8 <file_cache_compile_file>
    403c:	b	4bc4 <persistent_compile_file+0x111c>
    4040:	ldr	r0, [pc, #2572]	; 4a54 <persistent_compile_file+0xfac>
    4044:	ldr	ip, [r0]
    4048:	mov	r1, r6
    404c:	mov	r0, r8
    4050:	blx	ip
    4054:	b	4bc4 <persistent_compile_file+0x111c>
    4058:	ldr	r0, [pc, #2532]	; 4a44 <persistent_compile_file+0xf9c>
    405c:	mov	r3, #1
    4060:	str	r3, [r0]
    4064:	cmp	r4, #0
    4068:	beq	40d0 <persistent_compile_file+0x628>
    406c:	ldr	ip, [pc, #2520]	; 4a4c <persistent_compile_file+0xfa4>
    4070:	ldrb	ip, [ip]
    4074:	cmp	ip, #0
    4078:	beq	40d0 <persistent_compile_file+0x628>
    407c:	ldr	r0, [r8, #28]
    4080:	cmp	r0, #0
    4084:	bne	40d0 <persistent_compile_file+0x628>
    4088:	mov	r0, r4
    408c:	bl	39d8 <check_persistent_script_access>
    4090:	cmp	r0, #0
    4094:	beq	40d0 <persistent_compile_file+0x628>
    4098:	cmp	r6, #8
    409c:	bne	40bc <persistent_compile_file+0x614>
    40a0:	mov	r0, #2
    40a4:	ldr	r1, [r8, #20]
    40a8:	bl	0 <zend_message_dispatcher>
    40ac:	ldr	r0, [pc, #2484]	; 4a68 <persistent_compile_file+0xfc0>
    40b0:	movw	r1, #2040	; 0x7f8
    40b4:	bl	0 <_zend_bailout>
    40b8:	b	40c8 <persistent_compile_file+0x620>
    40bc:	mov	r0, #1
    40c0:	ldr	r1, [r8, #20]
    40c4:	bl	0 <zend_message_dispatcher>
    40c8:	mov	r0, #0
    40cc:	b	4bc4 <persistent_compile_file+0x111c>
    40d0:	ldr	r0, [pc, #2452]	; 4a6c <persistent_compile_file+0xfc4>
    40d4:	ldr	ip, [r0]
    40d8:	add	ip, ip, #1
    40dc:	str	ip, [r0]
    40e0:	ldr	ip, [pc, #2392]	; 4a40 <persistent_compile_file+0xf98>
    40e4:	ldrb	r3, [ip]
    40e8:	cmp	r3, #0
    40ec:	beq	40f8 <persistent_compile_file+0x650>
    40f0:	mov	r0, #0
    40f4:	bl	0 <zend_accel_shared_protect>
    40f8:	cmp	r4, #0
    40fc:	beq	41b4 <persistent_compile_file+0x70c>
    4100:	ldr	r2, [pc, #2336]	; 4a28 <persistent_compile_file+0xf80>
    4104:	ldrb	r0, [r2]
    4108:	cmp	r0, #0
    410c:	beq	41b4 <persistent_compile_file+0x70c>
    4110:	mov	r1, r8
    4114:	mov	r0, r4
    4118:	bl	177c <validate_timestamp_and_record>
    411c:	cmn	r0, #1
    4120:	bne	41b4 <persistent_compile_file+0x70c>
    4124:	bl	0 <zend_shared_alloc_lock>
    4128:	ldrb	r1, [r4, #244]	; 0xf4
    412c:	cmp	r1, #0
    4130:	bne	41a8 <persistent_compile_file+0x700>
    4134:	mov	ip, #1
    4138:	strb	ip, [r4, #244]	; 0xf4
    413c:	mov	r0, #0
    4140:	str	r0, [r4, #240]	; 0xf0
    4144:	ldr	ip, [pc, #2272]	; 4a2c <persistent_compile_file+0xf84>
    4148:	ldr	r2, [ip]
    414c:	ldr	r1, [r2, #12]
    4150:	ldr	r3, [r4, #272]	; 0x110
    4154:	add	r0, r1, r3
    4158:	str	r0, [r2, #12]
    415c:	ldr	r3, [ip]
    4160:	ldrb	ip, [r3, #16]
    4164:	cmp	ip, #0
    4168:	beq	41a8 <persistent_compile_file+0x700>
    416c:	ldr	r3, [pc, #2384]	; 4ac4 <persistent_compile_file+0x101c>
    4170:	ldr	r2, [r3]
    4174:	ldr	r3, [r2, #32]
    4178:	ldr	r2, [r2, #36]	; 0x24
    417c:	cmp	r3, r2
    4180:	beq	418c <persistent_compile_file+0x6e4>
    4184:	mov	r3, #0
    4188:	b	4190 <persistent_compile_file+0x6e8>
    418c:	mov	r3, #1
    4190:	mov	r2, #1
    4194:	mov	r0, #0
    4198:	cmp	r3, #0
    419c:	movne	r0, r2
    41a0:	moveq	r0, r0
    41a4:	bl	164 <zend_accel_schedule_restart_if_necessary>
    41a8:	bl	0 <zend_shared_alloc_unlock>
    41ac:	mov	r4, #0
    41b0:	b	42ac <persistent_compile_file+0x804>
    41b4:	cmp	r4, #0
    41b8:	beq	42ac <persistent_compile_file+0x804>
    41bc:	ldr	r3, [pc, #2232]	; 4a7c <persistent_compile_file+0xfd4>
    41c0:	ldr	r5, [r3]
    41c4:	cmp	r5, #0
    41c8:	beq	42ac <persistent_compile_file+0x804>
    41cc:	ldr	r9, [r4, #268]	; 0x10c
    41d0:	mov	r0, r9
    41d4:	mov	r1, r5
    41d8:	bl	0 <__aeabi_uidiv>
    41dc:	mul	r0, r0, r5
    41e0:	sub	r3, r9, r0
    41e4:	cmp	r3, #0
    41e8:	bne	42ac <persistent_compile_file+0x804>
    41ec:	mov	r0, r4
    41f0:	bl	0 <zend_accel_script_checksum>
    41f4:	mov	ip, r0
    41f8:	ldr	r3, [r4, #276]	; 0x114
    41fc:	cmp	ip, r3
    4200:	beq	42ac <persistent_compile_file+0x804>
    4204:	mov	r0, #3
    4208:	ldr	r1, [pc, #2124]	; 4a5c <persistent_compile_file+0xfb4>
    420c:	ldr	r2, [r4]
    4210:	add	r2, r2, #16
    4214:	str	ip, [sp]
    4218:	bl	0 <zend_accel_error>
    421c:	bl	0 <zend_shared_alloc_lock>
    4220:	ldrb	r1, [r4, #244]	; 0xf4
    4224:	cmp	r1, #0
    4228:	bne	42a0 <persistent_compile_file+0x7f8>
    422c:	mov	r3, #1
    4230:	strb	r3, [r4, #244]	; 0xf4
    4234:	mov	r2, #0
    4238:	str	r2, [r4, #240]	; 0xf0
    423c:	ldr	ip, [pc, #2024]	; 4a2c <persistent_compile_file+0xf84>
    4240:	ldr	r2, [ip]
    4244:	ldr	r3, [r2, #12]
    4248:	ldr	r1, [r4, #272]	; 0x110
    424c:	add	r3, r3, r1
    4250:	str	r3, [r2, #12]
    4254:	ldr	r2, [ip]
    4258:	ldrb	ip, [r2, #16]
    425c:	cmp	ip, #0
    4260:	beq	42a0 <persistent_compile_file+0x7f8>
    4264:	ldr	r3, [pc, #2136]	; 4ac4 <persistent_compile_file+0x101c>
    4268:	ldr	r1, [r3]
    426c:	ldr	r2, [r1, #32]
    4270:	ldr	ip, [r1, #36]	; 0x24
    4274:	cmp	r2, ip
    4278:	beq	4284 <persistent_compile_file+0x7dc>
    427c:	mov	ip, #0
    4280:	b	4288 <persistent_compile_file+0x7e0>
    4284:	mov	ip, #1
    4288:	mov	r0, #1
    428c:	mov	r2, #0
    4290:	cmp	ip, #0
    4294:	movne	r0, r0
    4298:	moveq	r0, r2
    429c:	bl	164 <zend_accel_schedule_restart_if_necessary>
    42a0:	bl	0 <zend_shared_alloc_unlock>
    42a4:	mov	r4, #0
    42a8:	b	42b4 <persistent_compile_file+0x80c>
    42ac:	cmp	r4, #0
    42b0:	bne	42d0 <persistent_compile_file+0x828>
    42b4:	ldr	r3, [pc, #2016]	; 4a9c <persistent_compile_file+0xff4>
    42b8:	ldr	r1, [r3]
    42bc:	cmp	r1, #0
    42c0:	beq	42d0 <persistent_compile_file+0x828>
    42c4:	mov	r0, r8
    42c8:	bl	0 <zend_file_cache_script_load>
    42cc:	mov	r4, r0
    42d0:	cmp	r4, #0
    42d4:	bne	48b4 <persistent_compile_file+0xe0c>
    42d8:	ldr	ip, [pc, #1952]	; 4a80 <persistent_compile_file+0xfd8>
    42dc:	ldr	r2, [ip]
    42e0:	ldr	r5, [r2, #36]	; 0x24
    42e4:	ldr	r0, [pc, #2008]	; 4ac4 <persistent_compile_file+0x101c>
    42e8:	ldr	r1, [r0]
    42ec:	ldr	r2, [r1, #4]
    42f0:	add	r2, r2, #1
    42f4:	str	r2, [r1, #4]
    42f8:	ldr	r3, [pc, #1836]	; 4a2c <persistent_compile_file+0xf84>
    42fc:	ldr	r2, [r3]
    4300:	ldrb	r1, [r2, #16]
    4304:	cmp	r1, #0
    4308:	bne	4840 <persistent_compile_file+0xd98>
    430c:	ldr	ip, [r0]
    4310:	ldrb	r2, [ip, #61]	; 0x3d
    4314:	cmp	r2, #0
    4318:	bne	4840 <persistent_compile_file+0xd98>
    431c:	ldr	r2, [pc, #1820]	; 4a40 <persistent_compile_file+0xf98>
    4320:	ldrb	r0, [r2]
    4324:	cmp	r0, #0
    4328:	beq	4334 <persistent_compile_file+0x88c>
    432c:	mov	r0, #1
    4330:	bl	0 <zend_accel_shared_protect>
    4334:	ldr	r0, [pc, #1840]	; 4a6c <persistent_compile_file+0xfc4>
    4338:	ldr	r2, [r0]
    433c:	sub	r1, r2, #1
    4340:	str	r1, [r0]
    4344:	ldr	r0, [pc, #1904]	; 4abc <persistent_compile_file+0x1014>
    4348:	ldr	ip, [r0]
    434c:	cmp	r2, ip
    4350:	bne	4358 <persistent_compile_file+0x8b0>
    4354:	bl	0 <zend_signal_handler_unblock>
    4358:	add	r3, sp, #48	; 0x30
    435c:	mov	r2, r7
    4360:	mov	r1, r6
    4364:	mov	r0, r8
    4368:	bl	301c <opcache_compile_file>
    436c:	mov	r4, r0
    4370:	ldr	r0, [pc, #1780]	; 4a6c <persistent_compile_file+0xfc4>
    4374:	ldr	r3, [r0]
    4378:	add	r1, r3, #1
    437c:	str	r1, [r0]
    4380:	ldr	r2, [pc, #1720]	; 4a40 <persistent_compile_file+0xf98>
    4384:	ldrb	r1, [r2]
    4388:	cmp	r1, #0
    438c:	beq	4398 <persistent_compile_file+0x8f0>
    4390:	mov	r0, #0
    4394:	bl	0 <zend_accel_shared_protect>
    4398:	mov	r1, #0
    439c:	str	r1, [sp, #44]	; 0x2c
    43a0:	cmp	r4, #0
    43a4:	beq	47bc <persistent_compile_file+0xd14>
    43a8:	cmp	r7, #0
    43ac:	bne	43b8 <persistent_compile_file+0x910>
    43b0:	mov	r6, #0
    43b4:	b	43bc <persistent_compile_file+0x914>
    43b8:	ldr	r6, [sp, #40]	; 0x28
    43bc:	str	r7, [sp, #144]	; 0x90
    43c0:	mov	r0, r4
    43c4:	bl	0 <zend_accel_script_persistable>
    43c8:	cmp	r0, #0
    43cc:	beq	47bc <persistent_compile_file+0xd14>
    43d0:	ldr	r2, [pc, #1632]	; 4a38 <persistent_compile_file+0xf90>
    43d4:	ldr	r7, [r2]
    43d8:	ldr	r0, [pc, #1724]	; 4a9c <persistent_compile_file+0xff4>
    43dc:	ldr	r1, [r0]
    43e0:	cmp	r1, #0
    43e4:	beq	43f0 <persistent_compile_file+0x948>
    43e8:	orr	r3, r7, #4096	; 0x1000
    43ec:	str	r3, [r2]
    43f0:	ldr	r1, [pc, #1624]	; 4a50 <persistent_compile_file+0xfa8>
    43f4:	ldr	r1, [r1]
    43f8:	ldr	r2, [pc, #1704]	; 4aa8 <persistent_compile_file+0x1000>
    43fc:	ldr	r2, [r2]
    4400:	mov	r0, r4
    4404:	bl	0 <zend_optimize_script>
    4408:	cmp	r0, #0
    440c:	bne	441c <persistent_compile_file+0x974>
    4410:	ldr	r0, [pc, #1568]	; 4a38 <persistent_compile_file+0xf90>
    4414:	str	r7, [r0]
    4418:	b	47bc <persistent_compile_file+0xd14>
    441c:	ldr	ip, [pc, #1556]	; 4a38 <persistent_compile_file+0xf90>
    4420:	str	r7, [ip]
    4424:	bl	0 <zend_shared_alloc_lock>
    4428:	ldr	r1, [pc, #1684]	; 4ac4 <persistent_compile_file+0x101c>
    442c:	ldr	r1, [r1]
    4430:	add	r0, r1, #24
    4434:	ldr	r1, [r4]
    4438:	bl	0 <zend_accel_hash_find_entry>
    443c:	mov	r2, r0
    4440:	cmp	r2, #0
    4444:	beq	4498 <persistent_compile_file+0x9f0>
    4448:	ldr	r7, [r2, #12]
    444c:	ldrb	r3, [r7, #244]	; 0xf4
    4450:	cmp	r3, #0
    4454:	bne	4498 <persistent_compile_file+0x9f0>
    4458:	ldr	r1, [sp, #144]	; 0x90
    445c:	cmp	r1, #0
    4460:	beq	4490 <persistent_compile_file+0x9e8>
    4464:	ldr	ip, [pc, #1468]	; 4a28 <persistent_compile_file+0xf80>
    4468:	ldrb	ip, [ip]
    446c:	cmp	ip, #0
    4470:	beq	4484 <persistent_compile_file+0x9dc>
    4474:	ldr	r0, [r4, #240]	; 0xf0
    4478:	ldr	r1, [r7, #240]	; 0xf0
    447c:	cmp	r0, r1
    4480:	bne	4490 <persistent_compile_file+0x9e8>
    4484:	ldr	r0, [sp, #144]	; 0x90
    4488:	mov	r1, r6
    448c:	bl	2a94 <zend_accel_add_key>
    4490:	bl	0 <zend_shared_alloc_unlock>
    4494:	b	47bc <persistent_compile_file+0xd14>
    4498:	ldr	r1, [pc, #1572]	; 4ac4 <persistent_compile_file+0x101c>
    449c:	ldr	r0, [r1]
    44a0:	ldr	r2, [r0, #32]
    44a4:	ldr	r3, [r0, #36]	; 0x24
    44a8:	cmp	r2, r3
    44ac:	beq	44b8 <persistent_compile_file+0xa10>
    44b0:	mov	r1, #0
    44b4:	b	44bc <persistent_compile_file+0xa14>
    44b8:	mov	r1, #1
    44bc:	cmp	r1, #0
    44c0:	beq	4514 <persistent_compile_file+0xa6c>
    44c4:	mov	r0, #4
    44c8:	ldr	r1, [pc, #1428]	; 4a64 <persistent_compile_file+0xfbc>
    44cc:	bl	0 <zend_accel_error>
    44d0:	ldr	r1, [pc, #1364]	; 4a2c <persistent_compile_file+0xf84>
    44d4:	ldr	r3, [r1]
    44d8:	mov	ip, #1
    44dc:	strb	ip, [r3, #16]
    44e0:	mov	r0, #1
    44e4:	bl	164 <zend_accel_schedule_restart_if_necessary>
    44e8:	bl	0 <zend_shared_alloc_unlock>
    44ec:	ldr	r1, [pc, #1448]	; 4a9c <persistent_compile_file+0xff4>
    44f0:	ldr	r0, [r1]
    44f4:	cmp	r0, #0
    44f8:	beq	47bc <persistent_compile_file+0xd14>
    44fc:	mov	r0, r4
    4500:	bl	2c08 <store_script_in_file_cache>
    4504:	mov	r4, r0
    4508:	mov	r1, #1
    450c:	str	r1, [sp, #44]	; 0x2c
    4510:	b	47bc <persistent_compile_file+0xd14>
    4514:	bl	0 <zend_shared_alloc_init_xlat_table>
    4518:	ldr	r1, [sp, #144]	; 0x90
    451c:	mov	r3, #1
    4520:	mov	r2, r6
    4524:	mov	r0, r4
    4528:	bl	0 <zend_accel_script_persist_calc>
    452c:	mov	r7, r0
    4530:	mov	r0, r7
    4534:	bl	0 <zend_shared_alloc>
    4538:	ldr	r1, [pc, #1400]	; 4ab8 <persistent_compile_file+0x1010>
    453c:	str	r0, [r1]
    4540:	cmp	r0, #0
    4544:	beq	4554 <persistent_compile_file+0xaac>
    4548:	mov	r1, #0
    454c:	mov	r2, r7
    4550:	bl	0 <memset>
    4554:	ldr	r0, [pc, #1372]	; 4ab8 <persistent_compile_file+0x1010>
    4558:	ldr	r0, [r0]
    455c:	cmp	r0, #0
    4560:	bne	459c <persistent_compile_file+0xaf4>
    4564:	bl	0 <zend_shared_alloc_destroy_xlat_table>
    4568:	mov	r0, #0
    456c:	bl	164 <zend_accel_schedule_restart_if_necessary>
    4570:	bl	0 <zend_shared_alloc_unlock>
    4574:	ldr	r1, [pc, #1312]	; 4a9c <persistent_compile_file+0xff4>
    4578:	ldr	ip, [r1]
    457c:	cmp	ip, #0
    4580:	beq	47bc <persistent_compile_file+0xd14>
    4584:	mov	r0, r4
    4588:	bl	2c08 <store_script_in_file_cache>
    458c:	mov	r4, r0
    4590:	mov	ip, #1
    4594:	str	ip, [sp, #44]	; 0x2c
    4598:	b	47bc <persistent_compile_file+0xd14>
    459c:	bl	0 <zend_shared_alloc_clear_xlat_table>
    45a0:	add	r1, sp, #144	; 0x90
    45a4:	mov	r3, #1
    45a8:	mov	r2, r6
    45ac:	mov	r0, r4
    45b0:	bl	0 <zend_accel_script_persist>
    45b4:	mov	r4, r0
    45b8:	bl	0 <zend_shared_alloc_destroy_xlat_table>
    45bc:	ldr	r7, [r4]
    45c0:	cmp	r7, #0
    45c4:	beq	460c <persistent_compile_file+0xb64>
    45c8:	ldr	r3, [r7, #12]
    45cc:	cmp	r3, #6
    45d0:	bcc	460c <persistent_compile_file+0xb64>
    45d4:	add	ip, r7, r3
    45d8:	add	r0, ip, #11
    45dc:	ldr	r1, [pc, #1196]	; 4a90 <persistent_compile_file+0xfe8>
    45e0:	mov	r2, #5
    45e4:	bl	0 <memcmp>
    45e8:	cmp	r0, #0
    45ec:	bne	460c <persistent_compile_file+0xb64>
    45f0:	add	r0, r7, #16
    45f4:	ldr	r1, [pc, #1220]	; 4ac0 <persistent_compile_file+0x1018>
    45f8:	bl	0 <strstr>
    45fc:	cmp	r0, #0
    4600:	moveq	r2, #1
    4604:	movne	r2, #0
    4608:	b	4610 <persistent_compile_file+0xb68>
    460c:	mov	r2, #0
    4610:	strb	r2, [r4, #245]	; 0xf5
    4614:	ldr	r3, [r4, #248]	; 0xf8
    4618:	ldr	ip, [r4, #252]	; 0xfc
    461c:	add	r7, r3, ip
    4620:	ldr	ip, [pc, #1168]	; 4ab8 <persistent_compile_file+0x1010>
    4624:	ldr	ip, [ip]
    4628:	cmp	r7, ip
    462c:	beq	465c <persistent_compile_file+0xbb4>
    4630:	mov	r0, #1
    4634:	mov	r2, #2
    4638:	cmp	r7, ip
    463c:	movcc	r0, r0
    4640:	movcs	r0, r2
    4644:	ldr	r1, [pc, #1100]	; 4a98 <persistent_compile_file+0xff0>
    4648:	ldr	r2, [r4]
    464c:	add	r2, r2, #16
    4650:	str	ip, [sp, #4]
    4654:	str	r7, [sp]
    4658:	bl	0 <zend_accel_error>
    465c:	mov	r0, r4
    4660:	bl	0 <zend_accel_script_checksum>
    4664:	str	r0, [r4, #276]	; 0x114
    4668:	ldr	r0, [pc, #1108]	; 4ac4 <persistent_compile_file+0x101c>
    466c:	ldr	r3, [r0]
    4670:	add	r0, r3, #24
    4674:	ldr	r2, [r4]
    4678:	add	r1, r2, #16
    467c:	ldr	r2, [r2, #12]
    4680:	mov	r3, #0
    4684:	str	r4, [sp]
    4688:	bl	0 <zend_accel_hash_update>
    468c:	mov	r7, r0
    4690:	cmp	r7, #0
    4694:	beq	4754 <persistent_compile_file+0xcac>
    4698:	mov	r0, #3
    469c:	ldr	r1, [pc, #1060]	; 4ac8 <persistent_compile_file+0x1020>
    46a0:	ldr	r3, [r4]
    46a4:	add	r2, r3, #16
    46a8:	bl	0 <zend_accel_error>
    46ac:	ldr	r0, [sp, #144]	; 0x90
    46b0:	cmp	r0, #0
    46b4:	beq	4754 <persistent_compile_file+0xcac>
    46b8:	ldr	r1, [pc, #996]	; 4aa4 <persistent_compile_file+0xffc>
    46bc:	mov	r2, #7
    46c0:	bl	0 <memcmp>
    46c4:	cmp	r0, #0
    46c8:	beq	4754 <persistent_compile_file+0xcac>
    46cc:	ldr	r1, [r4]
    46d0:	ldr	r2, [r1, #12]
    46d4:	cmp	r2, r6
    46d8:	bne	46f4 <persistent_compile_file+0xc4c>
    46dc:	add	r0, r1, #16
    46e0:	ldr	r1, [sp, #144]	; 0x90
    46e4:	mov	r2, r6
    46e8:	bl	0 <memcmp>
    46ec:	cmp	r0, #0
    46f0:	beq	4754 <persistent_compile_file+0xcac>
    46f4:	ldr	r2, [pc, #968]	; 4ac4 <persistent_compile_file+0x101c>
    46f8:	ldr	r1, [r2]
    46fc:	add	r0, r1, #24
    4700:	ldr	r1, [sp, #144]	; 0x90
    4704:	mov	r3, #1
    4708:	str	r7, [sp]
    470c:	mov	r2, r6
    4710:	bl	0 <zend_accel_hash_update>
    4714:	cmp	r0, #0
    4718:	bne	4744 <persistent_compile_file+0xc9c>
    471c:	mov	r0, #4
    4720:	ldr	r1, [pc, #828]	; 4a64 <persistent_compile_file+0xfbc>
    4724:	bl	0 <zend_accel_error>
    4728:	ldr	r0, [pc, #764]	; 4a2c <persistent_compile_file+0xf84>
    472c:	ldr	r1, [r0]
    4730:	mov	r2, #1
    4734:	strb	r2, [r1, #16]
    4738:	mov	r0, #1
    473c:	bl	164 <zend_accel_schedule_restart_if_necessary>
    4740:	b	4754 <persistent_compile_file+0xcac>
    4744:	mov	r0, #3
    4748:	ldr	r1, [pc, #868]	; 4ab4 <persistent_compile_file+0x100c>
    474c:	ldr	r2, [sp, #144]	; 0x90
    4750:	bl	0 <zend_accel_error>
    4754:	ldr	r1, [r4, #252]	; 0xfc
    4758:	add	r2, r1, #7
    475c:	bic	r3, r2, #7
    4760:	str	r3, [r4, #272]	; 0x110
    4764:	bl	0 <zend_shared_alloc_unlock>
    4768:	ldr	ip, [pc, #812]	; 4a9c <persistent_compile_file+0xff4>
    476c:	ldr	ip, [ip]
    4770:	cmp	ip, #0
    4774:	beq	47b4 <persistent_compile_file+0xd0c>
    4778:	ldr	r2, [pc, #704]	; 4a40 <persistent_compile_file+0xf98>
    477c:	ldrb	r1, [r2]
    4780:	cmp	r1, #0
    4784:	beq	4790 <persistent_compile_file+0xce8>
    4788:	mov	r0, #1
    478c:	bl	0 <zend_accel_shared_protect>
    4790:	mov	r1, #1
    4794:	mov	r0, r4
    4798:	bl	0 <zend_file_cache_script_store>
    479c:	ldr	ip, [pc, #668]	; 4a40 <persistent_compile_file+0xf98>
    47a0:	ldrb	ip, [ip]
    47a4:	cmp	ip, #0
    47a8:	beq	47b4 <persistent_compile_file+0xd0c>
    47ac:	mov	r0, #0
    47b0:	bl	0 <zend_accel_shared_protect>
    47b4:	mov	r0, #1
    47b8:	str	r0, [sp, #44]	; 0x2c
    47bc:	cmp	r4, #0
    47c0:	bne	4808 <persistent_compile_file+0xd60>
    47c4:	ldr	r0, [pc, #628]	; 4a40 <persistent_compile_file+0xf98>
    47c8:	ldrb	r0, [r0]
    47cc:	cmp	r0, #0
    47d0:	beq	47dc <persistent_compile_file+0xd34>
    47d4:	mov	r0, #1
    47d8:	bl	0 <zend_accel_shared_protect>
    47dc:	ldr	r0, [pc, #648]	; 4a6c <persistent_compile_file+0xfc4>
    47e0:	ldr	r1, [r0]
    47e4:	sub	r2, r1, #1
    47e8:	str	r2, [r0]
    47ec:	ldr	r2, [pc, #712]	; 4abc <persistent_compile_file+0x1014>
    47f0:	ldr	r2, [r2]
    47f4:	cmp	r1, r2
    47f8:	bne	4800 <persistent_compile_file+0xd58>
    47fc:	bl	0 <zend_signal_handler_unblock>
    4800:	ldr	r0, [sp, #48]	; 0x30
    4804:	b	4bc4 <persistent_compile_file+0x111c>
    4808:	ldr	r0, [sp, #44]	; 0x2c
    480c:	cmp	r0, #0
    4810:	beq	49c0 <persistent_compile_file+0xf18>
    4814:	ldr	ip, [pc, #612]	; 4a80 <persistent_compile_file+0xfd8>
    4818:	ldr	r3, [ip]
    481c:	ldr	r6, [r3, #36]	; 0x24
    4820:	cmp	r6, r5
    4824:	bls	49c0 <persistent_compile_file+0xf18>
    4828:	sub	r6, r6, #1
    482c:	ldr	r0, [pc, #588]	; 4a80 <persistent_compile_file+0xfd8>
    4830:	ldr	r0, [r0]
    4834:	mov	r1, r6
    4838:	bl	0 <zend_hash_index_del>
    483c:	b	4820 <persistent_compile_file+0xd78>
    4840:	ldr	r1, [pc, #504]	; 4a40 <persistent_compile_file+0xf98>
    4844:	ldrb	r0, [r1]
    4848:	cmp	r0, #0
    484c:	beq	4858 <persistent_compile_file+0xdb0>
    4850:	mov	r0, #1
    4854:	bl	0 <zend_accel_shared_protect>
    4858:	ldr	r3, [pc, #524]	; 4a6c <persistent_compile_file+0xfc4>
    485c:	ldr	ip, [r3]
    4860:	sub	r1, ip, #1
    4864:	str	r1, [r3]
    4868:	ldr	r2, [pc, #588]	; 4abc <persistent_compile_file+0x1014>
    486c:	ldr	r2, [r2]
    4870:	cmp	ip, r2
    4874:	bne	487c <persistent_compile_file+0xdd4>
    4878:	bl	0 <zend_signal_handler_unblock>
    487c:	ldr	ip, [pc, #536]	; 4a9c <persistent_compile_file+0xff4>
    4880:	ldr	r1, [ip]
    4884:	cmp	r1, #0
    4888:	beq	489c <persistent_compile_file+0xdf4>
    488c:	mov	r1, r6
    4890:	mov	r0, r8
    4894:	bl	35c8 <file_cache_compile_file>
    4898:	b	4bc4 <persistent_compile_file+0x111c>
    489c:	ldr	r2, [pc, #432]	; 4a54 <persistent_compile_file+0xfac>
    48a0:	ldr	ip, [r2]
    48a4:	mov	r1, r6
    48a8:	mov	r0, r8
    48ac:	blx	ip
    48b0:	b	4bc4 <persistent_compile_file+0x111c>
    48b4:	ldr	r2, [pc, #520]	; 4ac4 <persistent_compile_file+0x101c>
    48b8:	ldr	r2, [r2]
    48bc:	ldr	ip, [r2]
    48c0:	add	r3, ip, #1
    48c4:	str	r3, [r2]
    48c8:	ldr	ip, [r4, #268]	; 0x10c
    48cc:	add	r0, ip, #1
    48d0:	str	r0, [r4, #268]	; 0x10c
    48d4:	ldr	ip, [r4]
    48d8:	cmp	ip, #0
    48dc:	beq	49b0 <persistent_compile_file+0xf08>
    48e0:	ldr	ip, [pc, #416]	; 4a88 <persistent_compile_file+0xfe0>
    48e4:	ldr	r3, [ip]
    48e8:	cmp	r3, #0
    48ec:	beq	4938 <persistent_compile_file+0xe90>
    48f0:	ldr	ip, [r3]
    48f4:	cmp	ip, #0
    48f8:	beq	4938 <persistent_compile_file+0xe90>
    48fc:	ldr	r0, [r3, #12]
    4900:	cmp	r0, #0
    4904:	beq	4938 <persistent_compile_file+0xe90>
    4908:	ldrb	r0, [r0]
    490c:	and	r1, r0, #1
    4910:	cmp	r1, #0
    4914:	bne	4938 <persistent_compile_file+0xe90>
    4918:	ldrb	r1, [ip, #24]
    491c:	cmp	r1, #73	; 0x49
    4920:	bne	4938 <persistent_compile_file+0xe90>
    4924:	ldr	ip, [ip, #16]
    4928:	cmp	ip, #4
    492c:	beq	49b0 <persistent_compile_file+0xf08>
    4930:	cmp	ip, #16
    4934:	beq	49b0 <persistent_compile_file+0xf08>
    4938:	ldr	r0, [pc, #352]	; 4aa0 <persistent_compile_file+0xff8>
    493c:	ldr	r1, [r4]
    4940:	bl	0 <zend_hash_add_empty_element>
    4944:	cmp	r0, #0
    4948:	beq	49b0 <persistent_compile_file+0xf08>
    494c:	ldrb	r3, [r4, #245]	; 0xf5
    4950:	cmp	r3, #0
    4954:	beq	49b0 <persistent_compile_file+0xf08>
    4958:	ldr	r2, [r4]
    495c:	ldr	r2, [r2, #12]
    4960:	add	r0, r2, #8
    4964:	bl	0 <_emalloc>
    4968:	mov	r5, r0
    496c:	ldr	r1, [pc, #304]	; 4aa4 <persistent_compile_file+0xffc>
    4970:	mov	r2, #7
    4974:	mov	r0, r5
    4978:	bl	0 <memcpy>
    497c:	add	r0, r5, #7
    4980:	ldr	r2, [r4]
    4984:	add	r1, r2, #16
    4988:	ldr	r2, [r2, #12]
    498c:	add	r2, r2, #1
    4990:	bl	0 <memcpy>
    4994:	mov	r1, #0
    4998:	add	r2, sp, #56	; 0x38
    499c:	mov	r3, #0
    49a0:	mov	r0, r5
    49a4:	bl	0 <_php_stream_stat_path>
    49a8:	mov	r0, r5
    49ac:	bl	0 <_efree>
    49b0:	mov	r0, r8
    49b4:	bl	0 <zend_file_handle_dtor>
    49b8:	mov	r3, #1
    49bc:	str	r3, [sp, #44]	; 0x2c
    49c0:	ldr	r1, [pc, #168]	; 4a70 <persistent_compile_file+0xfc8>
    49c4:	ldr	r2, [r1]
    49c8:	str	r2, [r4, #264]	; 0x108
    49cc:	ldr	r2, [pc, #108]	; 4a40 <persistent_compile_file+0xf98>
    49d0:	ldrb	r0, [r2]
    49d4:	cmp	r0, #0
    49d8:	beq	49e4 <persistent_compile_file+0xf3c>
    49dc:	mov	r0, #1
    49e0:	bl	0 <zend_accel_shared_protect>
    49e4:	ldr	r1, [pc, #128]	; 4a6c <persistent_compile_file+0xfc4>
    49e8:	ldr	ip, [r1]
    49ec:	sub	r2, ip, #1
    49f0:	str	r2, [r1]
    49f4:	ldr	r1, [pc, #192]	; 4abc <persistent_compile_file+0x1014>
    49f8:	ldr	r0, [r1]
    49fc:	cmp	ip, r0
    4a00:	bne	4a08 <persistent_compile_file+0xf60>
    4a04:	bl	0 <zend_signal_handler_unblock>
    4a08:	ldr	r0, [r4, #236]	; 0xec
    4a0c:	cmp	r0, #0
    4a10:	beq	4a18 <persistent_compile_file+0xf70>
    4a14:	bl	2eb0 <zend_accel_set_auto_globals>
    4a18:	ldr	r1, [sp, #44]	; 0x2c
    4a1c:	mov	r0, r4
    4a20:	bl	0 <zend_accel_load_script>
    4a24:	b	4bc4 <persistent_compile_file+0x111c>
    4a28:	.word	0x00000056
    4a2c:	.word	0x00000000
    4a30:	.word	0x00000a15
    4a34:	.word	0x00000000
    4a38:	.word	0x0000008c
    4a3c:	.word	0x0000014c
    4a40:	.word	0x00000059
    4a44:	.word	0x00000000
    4a48:	.word	0x00000150
    4a4c:	.word	0x0000005c
    4a50:	.word	0x00000074
    4a54:	.word	0x00000000
    4a58:	.word	0x00000004
    4a5c:	.word	0x00000abd
    4a60:	.word	0x00000148
    4a64:	.word	0x0000008a
    4a68:	.word	0x00000121
    4a6c:	.word	0x00000000
    4a70:	.word	0x000000fc
    4a74:	.word	0x00000014
    4a78:	.word	0x00000ab5
    4a7c:	.word	0x0000004c
    4a80:	.word	0x00000114
    4a84:	.word	0x00000006
    4a88:	.word	0x00000128
    4a8c:	.word	0x00000144
    4a90:	.word	0x0000091d
    4a94:	.word	0x00000000
    4a98:	.word	0x000000b3
    4a9c:	.word	0x0000008c
    4aa0:	.word	0x000000d4
    4aa4:	.word	0x000002f4
    4aa8:	.word	0x00000078
    4aac:	.word	0x00000b9a
    4ab0:	.word	0x00000057
    4ab4:	.word	0x00000467
    4ab8:	.word	0x00000134
    4abc:	.word	0x00000004
    4ac0:	.word	0x000003b1
    4ac4:	.word	0x00000000
    4ac8:	.word	0x00000476
    4acc:	add	ip, ip, #1
    4ad0:	b	3d18 <persistent_compile_file+0x270>
    4ad4:	ldr	ip, [pc, #288]	; 4bfc <persistent_compile_file+0x1154>
    4ad8:	ldr	ip, [ip]
    4adc:	cmp	ip, #0
    4ae0:	beq	4af4 <persistent_compile_file+0x104c>
    4ae4:	mov	r1, r6
    4ae8:	mov	r0, r8
    4aec:	bl	35c8 <file_cache_compile_file>
    4af0:	b	4bc4 <persistent_compile_file+0x111c>
    4af4:	ldr	r2, [pc, #252]	; 4bf8 <persistent_compile_file+0x1150>
    4af8:	mov	r1, #0
    4afc:	str	r1, [r2]
    4b00:	ldr	r1, [pc, #232]	; 4bf0 <persistent_compile_file+0x1148>
    4b04:	mov	r2, #0
    4b08:	str	r2, [r1]
    4b0c:	ldr	r0, [pc, #216]	; 4bec <persistent_compile_file+0x1144>
    4b10:	ldr	ip, [r0]
    4b14:	mov	r1, r6
    4b18:	mov	r0, r8
    4b1c:	blx	ip
    4b20:	b	4bc4 <persistent_compile_file+0x111c>
    4b24:	ldr	r0, [pc, #204]	; 4bf8 <persistent_compile_file+0x1150>
    4b28:	mov	r3, #0
    4b2c:	str	r3, [r0]
    4b30:	ldr	r0, [pc, #184]	; 4bf0 <persistent_compile_file+0x1148>
    4b34:	mov	r3, #0
    4b38:	str	r3, [r0]
    4b3c:	mov	r1, r6
    4b40:	mov	r0, r8
    4b44:	bl	35c8 <file_cache_compile_file>
    4b48:	b	4bc4 <persistent_compile_file+0x111c>
    4b4c:	ldr	r0, [pc, #164]	; 4bf8 <persistent_compile_file+0x1150>
    4b50:	mov	r1, #0
    4b54:	str	r1, [r0]
    4b58:	ldr	r2, [pc, #144]	; 4bf0 <persistent_compile_file+0x1148>
    4b5c:	mov	r3, #0
    4b60:	str	r3, [r2]
    4b64:	ldr	r2, [r8, #20]
    4b68:	cmp	r2, #0
    4b6c:	beq	4bb0 <persistent_compile_file+0x1108>
    4b70:	ldr	r3, [pc, #132]	; 4bfc <persistent_compile_file+0x1154>
    4b74:	ldr	r1, [r3]
    4b78:	cmp	r1, #0
    4b7c:	beq	4bb0 <persistent_compile_file+0x1108>
    4b80:	ldr	r2, [pc, #96]	; 4be8 <persistent_compile_file+0x1140>
    4b84:	ldrb	r3, [r2]
    4b88:	cmp	r3, #0
    4b8c:	beq	4bb0 <persistent_compile_file+0x1108>
    4b90:	ldr	r2, [pc, #92]	; 4bf4 <persistent_compile_file+0x114c>
    4b94:	ldrb	ip, [r2]
    4b98:	cmp	ip, #0
    4b9c:	beq	4bb0 <persistent_compile_file+0x1108>
    4ba0:	mov	r1, r6
    4ba4:	mov	r0, r8
    4ba8:	bl	35c8 <file_cache_compile_file>
    4bac:	b	4bc4 <persistent_compile_file+0x111c>
    4bb0:	ldr	r0, [pc, #52]	; 4bec <persistent_compile_file+0x1144>
    4bb4:	ldr	ip, [r0]
    4bb8:	mov	r1, r6
    4bbc:	mov	r0, r8
    4bc0:	blx	ip
    4bc4:	ldr	r4, [sp, #16]
    4bc8:	ldr	r5, [sp, #20]
    4bcc:	ldr	r6, [sp, #24]
    4bd0:	ldr	r7, [sp, #28]
    4bd4:	ldr	r8, [sp, #32]
    4bd8:	ldr	r9, [sp, #36]	; 0x24
    4bdc:	ldr	lr, [sp, #12]
    4be0:	add	sp, sp, #160	; 0xa0
    4be4:	bx	lr
    4be8:	.word	0x00000004
    4bec:	.word	0x00000000
    4bf0:	.word	0x00000148
    4bf4:	.word	0x00000000
    4bf8:	.word	0x00000144
    4bfc:	.word	0x0000008c

00004c00 <persistent_stream_open_function>:
    4c00:	mov	ip, sp
    4c04:	sub	sp, sp, #16
    4c08:	str	ip, [sp]
    4c0c:	str	lr, [sp, #4]
    4c10:	str	r4, [sp, #8]
    4c14:	mov	r4, r1
    4c18:	mov	r1, r0
    4c1c:	ldr	ip, [pc, #256]	; 4d24 <persistent_stream_open_function+0x124>
    4c20:	ldr	r2, [ip]
    4c24:	cmp	r2, #0
    4c28:	beq	4d00 <persistent_stream_open_function+0x100>
    4c2c:	ldr	r3, [pc, #248]	; 4d2c <persistent_stream_open_function+0x12c>
    4c30:	ldr	r0, [r3]
    4c34:	cmp	r0, #0
    4c38:	bne	4c5c <persistent_stream_open_function+0x5c>
    4c3c:	ldr	ip, [pc, #228]	; 4d28 <persistent_stream_open_function+0x128>
    4c40:	ldr	r0, [ip]
    4c44:	cmp	r1, r0
    4c48:	bne	4c5c <persistent_stream_open_function+0x5c>
    4c4c:	ldr	r3, [pc, #220]	; 4d30 <persistent_stream_open_function+0x130>
    4c50:	ldr	r0, [r3]
    4c54:	cmp	r0, #0
    4c58:	beq	4ca0 <persistent_stream_open_function+0xa0>
    4c5c:	ldr	r2, [pc, #200]	; 4d2c <persistent_stream_open_function+0x12c>
    4c60:	ldr	r2, [r2]
    4c64:	cmp	r2, #0
    4c68:	beq	4ce8 <persistent_stream_open_function+0xe8>
    4c6c:	ldr	r3, [r2, #12]
    4c70:	cmp	r3, #0
    4c74:	beq	4ce8 <persistent_stream_open_function+0xe8>
    4c78:	ldrb	r3, [r3]
    4c7c:	and	r3, r3, #1
    4c80:	eor	r3, r3, #1
    4c84:	cmp	r3, #0
    4c88:	beq	4ce8 <persistent_stream_open_function+0xe8>
    4c8c:	ldr	r3, [pc, #156]	; 4d30 <persistent_stream_open_function+0x130>
    4c90:	ldr	ip, [r3]
    4c94:	ldr	r0, [r2]
    4c98:	cmp	ip, r0
    4c9c:	bne	4ce8 <persistent_stream_open_function+0xe8>
    4ca0:	mov	r0, r4
    4ca4:	bl	0 <zend_stream_init_filename>
    4ca8:	ldr	r2, [pc, #116]	; 4d24 <persistent_stream_open_function+0x124>
    4cac:	ldr	ip, [r2]
    4cb0:	ldr	r0, [ip]
    4cb4:	ldr	ip, [r0, #4]
    4cb8:	and	r1, ip, #64	; 0x40
    4cbc:	cmp	r1, #0
    4cc0:	bne	4cd0 <persistent_stream_open_function+0xd0>
    4cc4:	ldr	r2, [r0]
    4cc8:	add	r1, r2, #1
    4ccc:	str	r1, [r0]
    4cd0:	str	r0, [r4, #24]
    4cd4:	mov	r0, #0
    4cd8:	ldr	r4, [sp, #8]
    4cdc:	ldr	lr, [sp, #4]
    4ce0:	add	sp, sp, #16
    4ce4:	bx	lr
    4ce8:	ldr	r3, [pc, #64]	; 4d30 <persistent_stream_open_function+0x130>
    4cec:	mov	r2, #0
    4cf0:	str	r2, [r3]
    4cf4:	ldr	r3, [pc, #40]	; 4d24 <persistent_stream_open_function+0x124>
    4cf8:	mov	r2, #0
    4cfc:	str	r2, [r3]
    4d00:	ldr	r3, [pc, #24]	; 4d20 <persistent_stream_open_function+0x120>
    4d04:	ldr	ip, [r3]
    4d08:	mov	r0, r1
    4d0c:	mov	r1, r4
    4d10:	ldr	r4, [sp, #8]
    4d14:	ldr	lr, [sp, #4]
    4d18:	add	sp, sp, #16
    4d1c:	bx	ip
    4d20:	.word	0x00000004
    4d24:	.word	0x00000148
    4d28:	.word	0x00000014
    4d2c:	.word	0x00000128
    4d30:	.word	0x00000144

00004d34 <persistent_zend_resolve_path>:
    4d34:	mov	ip, sp
    4d38:	sub	sp, sp, #32
    4d3c:	str	ip, [sp]
    4d40:	str	lr, [sp, #4]
    4d44:	str	r4, [sp, #8]
    4d48:	str	r5, [sp, #12]
    4d4c:	str	r6, [sp, #16]
    4d50:	str	r7, [sp, #20]
    4d54:	mov	r4, r1
    4d58:	mov	r6, r0
    4d5c:	ldr	r2, [pc, #756]	; 5058 <persistent_zend_resolve_path+0x324>
    4d60:	ldrb	r2, [r2]
    4d64:	cmp	r2, #0
    4d68:	bne	5004 <persistent_zend_resolve_path+0x2d0>
    4d6c:	ldr	r0, [pc, #764]	; 5070 <persistent_zend_resolve_path+0x33c>
    4d70:	ldrb	ip, [r0]
    4d74:	cmp	ip, #0
    4d78:	beq	5004 <persistent_zend_resolve_path+0x2d0>
    4d7c:	ldr	r2, [pc, #752]	; 5074 <persistent_zend_resolve_path+0x340>
    4d80:	ldr	r1, [r2]
    4d84:	cmp	r1, #0
    4d88:	bne	4d9c <persistent_zend_resolve_path+0x68>
    4d8c:	ldr	r3, [pc, #728]	; 506c <persistent_zend_resolve_path+0x338>
    4d90:	ldr	r2, [r3]
    4d94:	cmp	r6, r2
    4d98:	beq	4df0 <persistent_zend_resolve_path+0xbc>
    4d9c:	ldr	r0, [pc, #720]	; 5074 <persistent_zend_resolve_path+0x340>
    4da0:	ldr	r3, [r0]
    4da4:	cmp	r3, #0
    4da8:	beq	5004 <persistent_zend_resolve_path+0x2d0>
    4dac:	ldr	r0, [r3, #12]
    4db0:	cmp	r0, #0
    4db4:	beq	5004 <persistent_zend_resolve_path+0x2d0>
    4db8:	ldrb	r2, [r0]
    4dbc:	and	ip, r2, #1
    4dc0:	eor	r0, ip, #1
    4dc4:	cmp	r0, #0
    4dc8:	beq	5004 <persistent_zend_resolve_path+0x2d0>
    4dcc:	ldr	r2, [r3]
    4dd0:	ldrb	ip, [r2, #24]
    4dd4:	cmp	ip, #73	; 0x49
    4dd8:	bne	5004 <persistent_zend_resolve_path+0x2d0>
    4ddc:	ldr	ip, [r2, #16]
    4de0:	cmp	ip, #4
    4de4:	beq	4df0 <persistent_zend_resolve_path+0xbc>
    4de8:	cmp	ip, #16
    4dec:	bne	5004 <persistent_zend_resolve_path+0x2d0>
    4df0:	mov	r5, #0
    4df4:	ldr	ip, [pc, #640]	; 507c <persistent_zend_resolve_path+0x348>
    4df8:	ldrb	r1, [ip]
    4dfc:	cmp	r1, #0
    4e00:	bne	4ed4 <persistent_zend_resolve_path+0x1a0>
    4e04:	add	r2, sp, #24
    4e08:	mov	r1, r4
    4e0c:	mov	r0, r6
    4e10:	bl	1aec <accel_make_persistent_key>
    4e14:	mov	r5, r0
    4e18:	cmp	r5, #0
    4e1c:	beq	4ea0 <persistent_zend_resolve_path+0x16c>
    4e20:	ldr	r0, [pc, #604]	; 5084 <persistent_zend_resolve_path+0x350>
    4e24:	ldr	ip, [r0]
    4e28:	add	r0, ip, #24
    4e2c:	ldr	r2, [sp, #24]
    4e30:	mov	r1, r5
    4e34:	bl	0 <zend_accel_hash_str_find_entry>
    4e38:	cmp	r0, #0
    4e3c:	beq	4ed4 <persistent_zend_resolve_path+0x1a0>
    4e40:	ldr	ip, [r0, #12]
    4e44:	ldrb	r0, [ip, #244]	; 0xf4
    4e48:	cmp	r0, #0
    4e4c:	bne	4ed4 <persistent_zend_resolve_path+0x1a0>
    4e50:	ldr	r1, [pc, #540]	; 5074 <persistent_zend_resolve_path+0x340>
    4e54:	ldr	r1, [r1]
    4e58:	cmp	r1, #0
    4e5c:	beq	4e68 <persistent_zend_resolve_path+0x134>
    4e60:	ldr	r2, [r1]
    4e64:	b	4e6c <persistent_zend_resolve_path+0x138>
    4e68:	mov	r2, #0
    4e6c:	ldr	r3, [pc, #516]	; 5078 <persistent_zend_resolve_path+0x344>
    4e70:	str	r2, [r3]
    4e74:	ldr	r3, [pc, #488]	; 5064 <persistent_zend_resolve_path+0x330>
    4e78:	str	ip, [r3]
    4e7c:	ldr	r4, [ip]
    4e80:	ldr	r2, [r4, #4]
    4e84:	and	r2, r2, #64	; 0x40
    4e88:	cmp	r2, #0
    4e8c:	bne	5034 <persistent_zend_resolve_path+0x300>
    4e90:	ldr	r1, [r4]
    4e94:	add	r0, r1, #1
    4e98:	str	r0, [r4]
    4e9c:	b	5034 <persistent_zend_resolve_path+0x300>
    4ea0:	ldr	ip, [pc, #464]	; 5078 <persistent_zend_resolve_path+0x344>
    4ea4:	mov	r0, #0
    4ea8:	str	r0, [ip]
    4eac:	ldr	r3, [pc, #432]	; 5064 <persistent_zend_resolve_path+0x330>
    4eb0:	mov	r2, #0
    4eb4:	str	r2, [r3]
    4eb8:	ldr	r1, [pc, #404]	; 5054 <persistent_zend_resolve_path+0x320>
    4ebc:	ldr	ip, [r1]
    4ec0:	mov	r1, r4
    4ec4:	mov	r0, r6
    4ec8:	blx	ip
    4ecc:	mov	r4, r0
    4ed0:	b	5034 <persistent_zend_resolve_path+0x300>
    4ed4:	ldr	r2, [pc, #376]	; 5054 <persistent_zend_resolve_path+0x320>
    4ed8:	ldr	r7, [r2]
    4edc:	mov	r1, r4
    4ee0:	mov	r0, r6
    4ee4:	blx	r7
    4ee8:	mov	r4, r0
    4eec:	cmp	r4, #0
    4ef0:	beq	4fe8 <persistent_zend_resolve_path+0x2b4>
    4ef4:	ldr	r0, [pc, #392]	; 5084 <persistent_zend_resolve_path+0x350>
    4ef8:	ldr	r1, [r0]
    4efc:	add	r0, r1, #24
    4f00:	mov	r1, r4
    4f04:	bl	0 <zend_accel_hash_find_entry>
    4f08:	mov	r6, r0
    4f0c:	cmp	r6, #0
    4f10:	beq	4fe8 <persistent_zend_resolve_path+0x2b4>
    4f14:	ldr	r7, [r6, #12]
    4f18:	ldrb	r0, [r7, #244]	; 0xf4
    4f1c:	cmp	r0, #0
    4f20:	bne	4fe8 <persistent_zend_resolve_path+0x2b4>
    4f24:	cmp	r5, #0
    4f28:	beq	4fac <persistent_zend_resolve_path+0x278>
    4f2c:	ldr	r1, [pc, #308]	; 5068 <persistent_zend_resolve_path+0x334>
    4f30:	ldr	r3, [r1]
    4f34:	add	ip, r3, #1
    4f38:	str	ip, [r1]
    4f3c:	ldr	r3, [pc, #280]	; 505c <persistent_zend_resolve_path+0x328>
    4f40:	ldrb	r2, [r3]
    4f44:	cmp	r2, #0
    4f48:	beq	4f54 <persistent_zend_resolve_path+0x220>
    4f4c:	mov	r0, #0
    4f50:	bl	0 <zend_accel_shared_protect>
    4f54:	bl	0 <zend_shared_alloc_lock>
    4f58:	ldr	r1, [sp, #24]
    4f5c:	mov	r2, r6
    4f60:	mov	r0, r5
    4f64:	bl	2a94 <zend_accel_add_key>
    4f68:	bl	0 <zend_shared_alloc_unlock>
    4f6c:	ldr	r0, [pc, #232]	; 505c <persistent_zend_resolve_path+0x328>
    4f70:	ldrb	r3, [r0]
    4f74:	cmp	r3, #0
    4f78:	beq	4f84 <persistent_zend_resolve_path+0x250>
    4f7c:	mov	r0, #1
    4f80:	bl	0 <zend_accel_shared_protect>
    4f84:	ldr	r0, [pc, #220]	; 5068 <persistent_zend_resolve_path+0x334>
    4f88:	ldr	r1, [r0]
    4f8c:	sub	r3, r1, #1
    4f90:	str	r3, [r0]
    4f94:	ldr	r0, [pc, #228]	; 5080 <persistent_zend_resolve_path+0x34c>
    4f98:	ldr	ip, [r0]
    4f9c:	cmp	r1, ip
    4fa0:	bne	4fb8 <persistent_zend_resolve_path+0x284>
    4fa4:	bl	0 <zend_signal_handler_unblock>
    4fa8:	b	4fb8 <persistent_zend_resolve_path+0x284>
    4fac:	ldr	r1, [pc, #172]	; 5060 <persistent_zend_resolve_path+0x32c>
    4fb0:	mov	r3, #0
    4fb4:	str	r3, [r1]
    4fb8:	ldr	r3, [pc, #180]	; 5074 <persistent_zend_resolve_path+0x340>
    4fbc:	ldr	r3, [r3]
    4fc0:	cmp	r3, #0
    4fc4:	beq	4fd0 <persistent_zend_resolve_path+0x29c>
    4fc8:	ldr	r3, [r3]
    4fcc:	b	4fd4 <persistent_zend_resolve_path+0x2a0>
    4fd0:	mov	r3, #0
    4fd4:	ldr	r2, [pc, #156]	; 5078 <persistent_zend_resolve_path+0x344>
    4fd8:	str	r3, [r2]
    4fdc:	ldr	r1, [pc, #128]	; 5064 <persistent_zend_resolve_path+0x330>
    4fe0:	str	r7, [r1]
    4fe4:	b	5034 <persistent_zend_resolve_path+0x300>
    4fe8:	ldr	r2, [pc, #136]	; 5078 <persistent_zend_resolve_path+0x344>
    4fec:	mov	ip, #0
    4ff0:	str	ip, [r2]
    4ff4:	ldr	r1, [pc, #104]	; 5064 <persistent_zend_resolve_path+0x330>
    4ff8:	mov	ip, #0
    4ffc:	str	ip, [r1]
    5000:	b	5034 <persistent_zend_resolve_path+0x300>
    5004:	ldr	r1, [pc, #108]	; 5078 <persistent_zend_resolve_path+0x344>
    5008:	mov	r0, #0
    500c:	str	r0, [r1]
    5010:	ldr	r3, [pc, #76]	; 5064 <persistent_zend_resolve_path+0x330>
    5014:	mov	r1, #0
    5018:	str	r1, [r3]
    501c:	ldr	r1, [pc, #48]	; 5054 <persistent_zend_resolve_path+0x320>
    5020:	ldr	ip, [r1]
    5024:	mov	r1, r4
    5028:	mov	r0, r6
    502c:	blx	ip
    5030:	mov	r4, r0
    5034:	mov	r0, r4
    5038:	ldr	r4, [sp, #8]
    503c:	ldr	r5, [sp, #12]
    5040:	ldr	r6, [sp, #16]
    5044:	ldr	r7, [sp, #20]
    5048:	ldr	lr, [sp, #4]
    504c:	add	sp, sp, #32
    5050:	bx	lr
    5054:	.word	0x00000008
    5058:	.word	0x00000000
    505c:	.word	0x00000059
    5060:	.word	0x0000014c
    5064:	.word	0x00000148
    5068:	.word	0x00000000
    506c:	.word	0x00000014
    5070:	.word	0x00000006
    5074:	.word	0x00000128
    5078:	.word	0x00000144
    507c:	.word	0x00000057
    5080:	.word	0x00000004
    5084:	.word	0x00000000

00005088 <zend_reset_cache_vars>:
    5088:	mov	ip, sp
    508c:	sub	sp, sp, #8
    5090:	str	ip, [sp]
    5094:	str	lr, [sp, #4]
    5098:	ldr	r0, [pc, #112]	; 5110 <zend_reset_cache_vars+0x88>
    509c:	ldr	r1, [r0]
    50a0:	mov	r2, #0
    50a4:	strb	r2, [r1, #16]
    50a8:	ldr	r1, [pc, #104]	; 5118 <zend_reset_cache_vars+0x90>
    50ac:	ldr	r3, [r1]
    50b0:	mov	r2, #0
    50b4:	str	r2, [r3]
    50b8:	ldr	r3, [r1]
    50bc:	mov	ip, #0
    50c0:	str	ip, [r3, #4]
    50c4:	ldr	r3, [r1]
    50c8:	mov	r2, #0
    50cc:	str	r2, [r3, #8]
    50d0:	ldr	ip, [r0]
    50d4:	mov	r2, #0
    50d8:	str	r2, [ip, #12]
    50dc:	ldr	r3, [r1]
    50e0:	mov	r2, #0
    50e4:	strb	r2, [r3, #61]	; 0x3d
    50e8:	ldr	r3, [r1]
    50ec:	mov	r2, #0
    50f0:	str	r2, [r3, #56]	; 0x38
    50f4:	ldr	r0, [r1]
    50f8:	ldr	r3, [pc, #20]	; 5114 <zend_reset_cache_vars+0x8c>
    50fc:	ldr	ip, [r3]
    5100:	str	ip, [r0, #44]	; 0x2c
    5104:	ldr	lr, [sp, #4]
    5108:	add	sp, sp, #8
    510c:	bx	lr
    5110:	.word	0x00000000
    5114:	.word	0x0000015c
    5118:	.word	0x00000000

0000511c <accel_reset_pcre_cache>:
    511c:	mov	ip, sp
    5120:	sub	sp, sp, #16
    5124:	str	ip, [sp]
    5128:	str	lr, [sp, #4]
    512c:	str	r4, [sp, #8]
    5130:	str	r5, [sp, #12]
    5134:	ldr	r0, [pc, #128]	; 51bc <accel_reset_pcre_cache+0xa0>
    5138:	ldrb	r0, [r0]
    513c:	cmp	r0, #0
    5140:	bne	51a4 <accel_reset_pcre_cache+0x88>
    5144:	ldr	r2, [pc, #108]	; 51b8 <accel_reset_pcre_cache+0x9c>
    5148:	ldr	r4, [r2, #16]
    514c:	ldr	ip, [r2, #20]
    5150:	lsl	r0, ip, #4
    5154:	add	r3, r0, ip, lsl #3
    5158:	add	r5, r4, r3
    515c:	cmp	r4, r5
    5160:	beq	51a4 <accel_reset_pcre_cache+0x88>
    5164:	mov	r1, r4
    5168:	ldrb	r2, [r1, #8]
    516c:	and	r0, r2, #255	; 0xff
    5170:	cmp	r0, #0
    5174:	beq	519c <accel_reset_pcre_cache+0x80>
    5178:	ldr	r0, [r4, #20]
    517c:	bl	0 <zend_accel_in_shm>
    5180:	cmp	r0, #0
    5184:	beq	519c <accel_reset_pcre_cache+0x80>
    5188:	mov	r1, #0
    518c:	str	r1, [r4, #20]
    5190:	ldr	r0, [pc, #32]	; 51b8 <accel_reset_pcre_cache+0x9c>
    5194:	mov	r1, r4
    5198:	bl	0 <zend_hash_del_bucket>
    519c:	add	r4, r4, #24
    51a0:	b	515c <accel_reset_pcre_cache+0x40>
    51a4:	ldr	r4, [sp, #8]
    51a8:	ldr	r5, [sp, #12]
    51ac:	ldr	lr, [sp, #4]
    51b0:	add	sp, sp, #16
    51b4:	bx	lr
    51b8:	.word	0x00000000
    51bc:	.word	0x00000035

000051c0 <accel_activate>:
    51c0:	mov	ip, sp
    51c4:	sub	sp, sp, #136	; 0x88
    51c8:	str	ip, [sp, #4]
    51cc:	str	lr, [sp, #8]
    51d0:	str	r4, [sp, #16]
    51d4:	str	r5, [sp, #20]
    51d8:	str	r6, [sp, #24]
    51dc:	ldr	r0, [pc, #2248]	; 5aac <accel_activate+0x8ec>
    51e0:	ldrb	r0, [r0]
    51e4:	cmp	r0, #0
    51e8:	beq	5a80 <accel_activate+0x8c0>
    51ec:	ldr	r0, [pc, #2268]	; 5ad0 <accel_activate+0x910>
    51f0:	ldrb	r0, [r0]
    51f4:	cmp	r0, #0
    51f8:	beq	5a80 <accel_activate+0x8c0>
    51fc:	ldr	r3, [pc, #2220]	; 5ab0 <accel_activate+0x8f0>
    5200:	mov	ip, #0
    5204:	str	ip, [r3]
    5208:	bl	0 <sapi_get_request_time>
    520c:	ldr	ip, [pc, #2260]	; 5ae8 <accel_activate+0x928>
    5210:	vcvt.s32.f64	s12, d0
    5214:	vmov	r2, s12
    5218:	str	r2, [ip]
    521c:	ldr	ip, [pc, #2292]	; 5b18 <accel_activate+0x958>
    5220:	mov	r0, #0
    5224:	str	r0, [ip]
    5228:	ldr	r2, [pc, #2212]	; 5ad4 <accel_activate+0x914>
    522c:	mov	ip, #0
    5230:	str	ip, [r2]
    5234:	ldr	r3, [pc, #2232]	; 5af4 <accel_activate+0x934>
    5238:	mov	r1, #0
    523c:	str	r1, [r3]
    5240:	ldr	ip, [pc, #2232]	; 5b00 <accel_activate+0x940>
    5244:	mov	r1, #1
    5248:	str	r1, [ip]
    524c:	ldr	r0, [pc, #2248]	; 5b1c <accel_activate+0x95c>
    5250:	mov	ip, #0
    5254:	str	ip, [r0]
    5258:	ldr	r3, [pc, #2120]	; 5aa8 <accel_activate+0x8e8>
    525c:	mov	r2, #0
    5260:	str	r2, [r3]
    5264:	ldr	ip, [pc, #2228]	; 5b20 <accel_activate+0x960>
    5268:	mov	r2, #1
    526c:	str	r2, [ip]
    5270:	ldr	r0, [pc, #2108]	; 5ab4 <accel_activate+0x8f4>
    5274:	ldrb	r0, [r0]
    5278:	cmp	r0, #0
    527c:	beq	5294 <accel_activate+0xd4>
    5280:	ldr	r2, [pc, #2180]	; 5b0c <accel_activate+0x94c>
    5284:	mov	r0, #0
    5288:	strb	r0, [r2]
    528c:	mov	r0, #0
    5290:	b	5a90 <accel_activate+0x8d0>
    5294:	ldr	r0, [pc, #2196]	; 5b30 <accel_activate+0x970>
    5298:	ldrb	r0, [r0]
    529c:	cmp	r0, #0
    52a0:	beq	52d8 <accel_activate+0x118>
    52a4:	ldr	r0, [pc, #2136]	; 5b04 <accel_activate+0x944>
    52a8:	add	r1, sp, #32
    52ac:	bl	0 <stat>
    52b0:	cmp	r0, #0
    52b4:	bne	52c8 <accel_activate+0x108>
    52b8:	ldr	ip, [pc, #2048]	; 5ac0 <accel_activate+0x900>
    52bc:	ldr	r2, [sp, #44]	; 0x2c
    52c0:	str	r2, [ip]
    52c4:	b	52e4 <accel_activate+0x124>
    52c8:	ldr	ip, [pc, #2032]	; 5ac0 <accel_activate+0x900>
    52cc:	mov	r3, #0
    52d0:	str	r3, [ip]
    52d4:	b	52e4 <accel_activate+0x124>
    52d8:	ldr	ip, [pc, #2016]	; 5ac0 <accel_activate+0x900>
    52dc:	mov	r3, #0
    52e0:	str	r3, [ip]
    52e4:	ldr	r2, [pc, #2048]	; 5aec <accel_activate+0x92c>
    52e8:	ldr	ip, [r2]
    52ec:	add	ip, ip, #1
    52f0:	str	ip, [r2]
    52f4:	ldr	r0, [pc, #1980]	; 5ab8 <accel_activate+0x8f8>
    52f8:	ldrb	r0, [r0]
    52fc:	cmp	r0, #0
    5300:	beq	530c <accel_activate+0x14c>
    5304:	mov	r0, #0
    5308:	bl	0 <zend_accel_shared_protect>
    530c:	ldr	r0, [pc, #1960]	; 5abc <accel_activate+0x8fc>
    5310:	ldr	r0, [r0]
    5314:	cmp	r0, #0
    5318:	beq	53ac <accel_activate+0x1ec>
    531c:	bl	0 <getpid>
    5320:	mov	r2, #2
    5324:	ldr	r1, [pc, #1964]	; 5ad8 <accel_activate+0x918>
    5328:	mov	r3, r0
    532c:	mov	r0, r2
    5330:	mov	r2, r3
    5334:	bl	0 <zend_accel_error>
    5338:	mov	r0, #2
    533c:	strh	r0, [sp, #120]	; 0x78
    5340:	mov	r0, #0
    5344:	strh	r0, [sp, #122]	; 0x7a
    5348:	mov	r0, #0
    534c:	str	r0, [sp, #124]	; 0x7c
    5350:	mov	r0, #0
    5354:	str	r0, [sp, #128]	; 0x80
    5358:	ldr	r0, [pc, #1988]	; 5b24 <accel_activate+0x964>
    535c:	ldr	r0, [r0]
    5360:	mov	r1, #6
    5364:	add	r2, sp, #120	; 0x78
    5368:	bl	0 <fcntl>
    536c:	cmn	r0, #1
    5370:	bne	53a0 <accel_activate+0x1e0>
    5374:	bl	0 <__errno_location>
    5378:	ldr	r0, [r0]
    537c:	bl	0 <strerror>
    5380:	mov	r4, r0
    5384:	bl	0 <__errno_location>
    5388:	mov	ip, #4
    538c:	ldr	r1, [pc, #1940]	; 5b28 <accel_activate+0x968>
    5390:	ldr	r3, [r0]
    5394:	mov	r2, r4
    5398:	mov	r0, ip
    539c:	bl	0 <zend_accel_error>
    53a0:	ldr	r0, [pc, #1812]	; 5abc <accel_activate+0x8fc>
    53a4:	mov	r1, #0
    53a8:	str	r1, [r0]
    53ac:	ldr	r0, [pc, #1928]	; 5b3c <accel_activate+0x97c>
    53b0:	ldr	r0, [r0]
    53b4:	ldrb	r0, [r0, #61]	; 0x3d
    53b8:	cmp	r0, #0
    53bc:	beq	598c <accel_activate+0x7cc>
    53c0:	bl	0 <zend_shared_alloc_lock>
    53c4:	ldr	r0, [pc, #1904]	; 5b3c <accel_activate+0x97c>
    53c8:	ldr	r0, [r0]
    53cc:	ldrb	r0, [r0, #61]	; 0x3d
    53d0:	cmp	r0, #0
    53d4:	beq	5988 <accel_activate+0x7c8>
    53d8:	mov	r0, #1
    53dc:	strh	r0, [sp, #120]	; 0x78
    53e0:	mov	r0, #0
    53e4:	strh	r0, [sp, #122]	; 0x7a
    53e8:	mov	r0, #1
    53ec:	str	r0, [sp, #124]	; 0x7c
    53f0:	mov	r0, #1
    53f4:	str	r0, [sp, #128]	; 0x80
    53f8:	mvn	r0, #0
    53fc:	str	r0, [sp, #132]	; 0x84
    5400:	ldr	r0, [pc, #1820]	; 5b24 <accel_activate+0x964>
    5404:	ldr	r0, [r0]
    5408:	mov	r1, #5
    540c:	add	r2, sp, #120	; 0x78
    5410:	bl	0 <fcntl>
    5414:	cmn	r0, #1
    5418:	bne	5450 <accel_activate+0x290>
    541c:	bl	0 <__errno_location>
    5420:	ldr	r0, [r0]
    5424:	bl	0 <strerror>
    5428:	mov	r4, r0
    542c:	bl	0 <__errno_location>
    5430:	mov	r3, r0
    5434:	mov	r0, #4
    5438:	ldr	r1, [pc, #1696]	; 5ae0 <accel_activate+0x920>
    543c:	ldr	r3, [r3]
    5440:	mov	r2, r4
    5444:	bl	0 <zend_accel_error>
    5448:	mvn	ip, #0
    544c:	b	5688 <accel_activate+0x4c8>
    5450:	ldrsh	r0, [sp, #120]	; 0x78
    5454:	cmp	r0, #2
    5458:	bne	5464 <accel_activate+0x2a4>
    545c:	mov	ip, #0
    5460:	b	5688 <accel_activate+0x4c8>
    5464:	ldr	r0, [pc, #1624]	; 5ac4 <accel_activate+0x904>
    5468:	ldr	r0, [r0]
    546c:	cmp	r0, #0
    5470:	beq	5684 <accel_activate+0x4c4>
    5474:	ldr	r0, [pc, #1728]	; 5b3c <accel_activate+0x97c>
    5478:	ldr	r0, [r0]
    547c:	ldr	r0, [r0, #56]	; 0x38
    5480:	cmp	r0, #0
    5484:	beq	5684 <accel_activate+0x4c4>
    5488:	mov	r0, #0
    548c:	bl	0 <time>
    5490:	ldr	ip, [pc, #1700]	; 5b3c <accel_activate+0x97c>
    5494:	ldr	r1, [ip]
    5498:	ldr	r1, [r1, #56]	; 0x38
    549c:	cmp	r0, r1
    54a0:	blt	5684 <accel_activate+0x4c4>
    54a4:	mov	r0, #0
    54a8:	bl	0 <time>
    54ac:	mov	r2, r0
    54b0:	mov	r0, #2
    54b4:	ldr	r1, [pc, #1612]	; 5b08 <accel_activate+0x948>
    54b8:	ldr	r3, [pc, #1540]	; 5ac4 <accel_activate+0x904>
    54bc:	ldr	r3, [r3]
    54c0:	ldr	r4, [sp, #132]	; 0x84
    54c4:	str	r4, [sp]
    54c8:	bl	0 <zend_accel_error>
    54cc:	add	r4, sp, #120	; 0x78
    54d0:	ldr	r1, [pc, #1636]	; 5b3c <accel_activate+0x97c>
    54d4:	ldr	r2, [r1]
    54d8:	mov	r0, #0
    54dc:	str	r0, [r2, #56]	; 0x38
    54e0:	ldr	r1, [sp, #132]	; 0x84
    54e4:	cmp	r1, #0
    54e8:	ble	567c <accel_activate+0x4bc>
    54ec:	bl	0 <__errno_location>
    54f0:	mov	ip, #0
    54f4:	str	ip, [r0]
    54f8:	mov	r5, #0
    54fc:	mov	r6, #10
    5500:	mov	r0, r6
    5504:	sub	r6, r0, #1
    5508:	cmp	r0, #0
    550c:	beq	55ac <accel_activate+0x3ec>
    5510:	mov	r0, #2
    5514:	ldr	r1, [pc, #1492]	; 5af0 <accel_activate+0x930>
    5518:	ldr	r2, [sp, #132]	; 0x84
    551c:	bl	0 <zend_accel_error>
    5520:	ldr	r0, [sp, #132]	; 0x84
    5524:	mov	r1, #9
    5528:	bl	0 <kill>
    552c:	cmp	r0, #0
    5530:	beq	555c <accel_activate+0x39c>
    5534:	bl	0 <__errno_location>
    5538:	ldr	r2, [r0]
    553c:	cmp	r2, #3
    5540:	bne	55ac <accel_activate+0x3ec>
    5544:	mov	r5, #1
    5548:	mov	r0, #2
    554c:	ldr	r1, [pc, #1444]	; 5af8 <accel_activate+0x938>
    5550:	ldr	r2, [sp, #132]	; 0x84
    5554:	bl	0 <zend_accel_error>
    5558:	b	55ac <accel_activate+0x3ec>
    555c:	movw	r0, #20000	; 0x4e20
    5560:	bl	0 <usleep>
    5564:	ldr	r0, [sp, #132]	; 0x84
    5568:	mov	r1, #0
    556c:	bl	0 <kill>
    5570:	cmp	r0, #0
    5574:	beq	55a0 <accel_activate+0x3e0>
    5578:	bl	0 <__errno_location>
    557c:	ldr	r0, [r0]
    5580:	cmp	r0, #3
    5584:	bne	55ac <accel_activate+0x3ec>
    5588:	mov	r5, #1
    558c:	mov	r0, #2
    5590:	ldr	r1, [pc, #1400]	; 5b10 <accel_activate+0x950>
    5594:	ldr	r2, [sp, #132]	; 0x84
    5598:	bl	0 <zend_accel_error>
    559c:	b	55ac <accel_activate+0x3ec>
    55a0:	movw	r0, #10000	; 0x2710
    55a4:	bl	0 <usleep>
    55a8:	b	5500 <accel_activate+0x340>
    55ac:	cmp	r5, #0
    55b0:	bne	55f0 <accel_activate+0x430>
    55b4:	mov	r0, #0
    55b8:	bl	0 <time>
    55bc:	ldr	ip, [pc, #1400]	; 5b3c <accel_activate+0x97c>
    55c0:	ldr	ip, [ip]
    55c4:	str	r0, [ip, #56]	; 0x38
    55c8:	bl	0 <__errno_location>
    55cc:	ldr	r0, [r0]
    55d0:	bl	0 <strerror>
    55d4:	mov	r3, #1
    55d8:	ldr	r1, [pc, #1308]	; 5afc <accel_activate+0x93c>
    55dc:	ldr	r2, [sp, #132]	; 0x84
    55e0:	mov	ip, r0
    55e4:	mov	r0, r3
    55e8:	mov	r3, ip
    55ec:	bl	0 <zend_accel_error>
    55f0:	mov	r3, #1
    55f4:	strh	r3, [sp, #120]	; 0x78
    55f8:	mov	r2, #0
    55fc:	strh	r2, [sp, #122]	; 0x7a
    5600:	mov	r3, #1
    5604:	str	r3, [sp, #124]	; 0x7c
    5608:	mov	r0, #1
    560c:	str	r0, [sp, #128]	; 0x80
    5610:	mvn	r1, #0
    5614:	str	r1, [sp, #132]	; 0x84
    5618:	ldr	r0, [pc, #1284]	; 5b24 <accel_activate+0x964>
    561c:	ldr	r0, [r0]
    5620:	mov	r1, #5
    5624:	mov	r2, r4
    5628:	bl	0 <fcntl>
    562c:	cmn	r0, #1
    5630:	bne	5664 <accel_activate+0x4a4>
    5634:	bl	0 <__errno_location>
    5638:	ldr	r0, [r0]
    563c:	bl	0 <strerror>
    5640:	mov	r4, r0
    5644:	bl	0 <__errno_location>
    5648:	mov	r3, r0
    564c:	mov	r0, #4
    5650:	ldr	r1, [pc, #1248]	; 5b38 <accel_activate+0x978>
    5654:	ldr	r3, [r3]
    5658:	mov	r2, r4
    565c:	bl	0 <zend_accel_error>
    5660:	b	567c <accel_activate+0x4bc>
    5664:	ldrsh	r1, [sp, #120]	; 0x78
    5668:	cmp	r1, #2
    566c:	beq	567c <accel_activate+0x4bc>
    5670:	ldr	r3, [sp, #132]	; 0x84
    5674:	cmp	r3, #0
    5678:	bgt	54e0 <accel_activate+0x320>
    567c:	mvn	ip, #0
    5680:	b	5688 <accel_activate+0x4c8>
    5684:	mvn	ip, #0
    5688:	cmp	ip, #0
    568c:	bne	5988 <accel_activate+0x7c8>
    5690:	mov	r0, #4
    5694:	ldr	r1, [pc, #1068]	; 5ac8 <accel_activate+0x908>
    5698:	bl	0 <zend_accel_error>
    569c:	ldr	r2, [pc, #1176]	; 5b3c <accel_activate+0x97c>
    56a0:	ldr	r0, [r2]
    56a4:	mov	r1, #0
    56a8:	strb	r1, [r0, #61]	; 0x3d
    56ac:	ldr	r0, [r2]
    56b0:	ldr	r1, [r0, #64]	; 0x40
    56b4:	cmp	r1, #0
    56b8:	beq	56ec <accel_activate+0x52c>
    56bc:	cmp	r1, #1
    56c0:	beq	56dc <accel_activate+0x51c>
    56c4:	cmp	r1, #2
    56c8:	bne	56f8 <accel_activate+0x538>
    56cc:	ldr	r2, [r0, #20]
    56d0:	add	r3, r2, #1
    56d4:	str	r3, [r0, #20]
    56d8:	b	56f8 <accel_activate+0x538>
    56dc:	ldr	r3, [r0, #16]
    56e0:	add	r1, r3, #1
    56e4:	str	r1, [r0, #16]
    56e8:	b	56f8 <accel_activate+0x538>
    56ec:	ldr	ip, [r0, #12]
    56f0:	add	r1, ip, #1
    56f4:	str	r1, [r0, #12]
    56f8:	mov	r0, #1
    56fc:	strh	r0, [sp, #120]	; 0x78
    5700:	mov	r0, #0
    5704:	strh	r0, [sp, #122]	; 0x7a
    5708:	mov	r0, #2
    570c:	str	r0, [sp, #124]	; 0x7c
    5710:	mov	r0, #1
    5714:	str	r0, [sp, #128]	; 0x80
    5718:	ldr	r0, [pc, #1028]	; 5b24 <accel_activate+0x964>
    571c:	ldr	r0, [r0]
    5720:	mov	r1, #6
    5724:	add	r2, sp, #120	; 0x78
    5728:	bl	0 <fcntl>
    572c:	cmn	r0, #1
    5730:	bne	5760 <accel_activate+0x5a0>
    5734:	bl	0 <__errno_location>
    5738:	ldr	r0, [r0]
    573c:	bl	0 <strerror>
    5740:	mov	r4, r0
    5744:	bl	0 <__errno_location>
    5748:	mov	ip, r0
    574c:	mov	r0, #4
    5750:	ldr	r1, [pc, #884]	; 5acc <accel_activate+0x90c>
    5754:	ldr	r3, [ip]
    5758:	mov	r2, r4
    575c:	bl	0 <zend_accel_error>
    5760:	ldr	r0, [pc, #980]	; 5b3c <accel_activate+0x97c>
    5764:	ldr	r0, [r0]
    5768:	mov	r3, #1
    576c:	strb	r3, [r0, #69]	; 0x45
    5770:	bl	0 <zend_map_ptr_reset>
    5774:	bl	5088 <zend_reset_cache_vars>
    5778:	ldr	r0, [pc, #956]	; 5b3c <accel_activate+0x97c>
    577c:	ldr	r0, [r0]
    5780:	add	r0, r0, #24
    5784:	bl	0 <zend_accel_hash_clean>
    5788:	ldr	r0, [pc, #852]	; 5ae4 <accel_activate+0x924>
    578c:	ldr	r0, [r0]
    5790:	cmp	r0, #0
    5794:	beq	5858 <accel_activate+0x698>
    5798:	ldr	r0, [pc, #924]	; 5b3c <accel_activate+0x97c>
    579c:	ldr	ip, [r0]
    57a0:	ldr	r0, [ip, #108]	; 0x6c
    57a4:	mov	r1, #0
    57a8:	ldr	r2, [ip, #100]	; 0x64
    57ac:	sub	r2, r2, r0
    57b0:	bl	0 <memset>
    57b4:	ldr	r3, [pc, #896]	; 5b3c <accel_activate+0x97c>
    57b8:	ldr	r1, [r3]
    57bc:	ldr	r0, [r1, #108]	; 0x6c
    57c0:	str	r0, [r1, #100]	; 0x64
    57c4:	ldr	r2, [r3]
    57c8:	add	r0, r2, #112	; 0x70
    57cc:	mov	r1, #0
    57d0:	ldr	r3, [r2, #96]	; 0x60
    57d4:	sub	r2, r3, r2
    57d8:	sub	r2, r2, #112	; 0x70
    57dc:	bl	0 <memset>
    57e0:	ldr	r0, [pc, #852]	; 5b3c <accel_activate+0x97c>
    57e4:	ldr	r1, [r0]
    57e8:	ldr	r4, [r1, #96]	; 0x60
    57ec:	ldr	r6, [r1, #100]	; 0x64
    57f0:	mov	r5, #0
    57f4:	cmp	r4, r6
    57f8:	bcs	584c <accel_activate+0x68c>
    57fc:	ldr	r1, [pc, #824]	; 5b3c <accel_activate+0x97c>
    5800:	ldr	ip, [r1]
    5804:	ldr	r2, [r4, #8]
    5808:	ldr	r0, [ip, #88]	; 0x58
    580c:	and	r2, r2, r0
    5810:	add	ip, ip, r2
    5814:	ldr	r2, [ip, #112]	; 0x70
    5818:	sub	lr, r4, #4096	; 0x1000
    581c:	str	r2, [lr, #4092]	; 0xffc
    5820:	ldr	r0, [r1]
    5824:	sub	r3, r4, r0
    5828:	sub	r3, r3, #88	; 0x58
    582c:	str	r3, [ip, #112]	; 0x70
    5830:	ldr	r0, [r4, #12]
    5834:	add	r3, r0, #28
    5838:	bic	r3, r3, #7
    583c:	add	r4, r4, r3
    5840:	add	r5, r5, #1
    5844:	cmp	r4, r6
    5848:	bcc	57fc <accel_activate+0x63c>
    584c:	ldr	r2, [pc, #744]	; 5b3c <accel_activate+0x97c>
    5850:	ldr	r1, [r2]
    5854:	str	r5, [r1, #92]	; 0x5c
    5858:	bl	0 <zend_shared_alloc_restore_state>
    585c:	ldr	r0, [pc, #728]	; 5b3c <accel_activate+0x97c>
    5860:	ldr	r2, [r0]
    5864:	ldr	ip, [r2, #72]	; 0x48
    5868:	cmp	ip, #0
    586c:	beq	58d8 <accel_activate+0x718>
    5870:	add	r0, r2, #24
    5874:	ldr	r2, [ip]
    5878:	add	r1, r2, #16
    587c:	ldr	r2, [r2, #12]
    5880:	mov	r3, #0
    5884:	str	ip, [sp]
    5888:	bl	0 <zend_accel_hash_update>
    588c:	ldr	r0, [pc, #680]	; 5b3c <accel_activate+0x97c>
    5890:	ldr	r0, [r0]
    5894:	ldr	r4, [r0, #76]	; 0x4c
    5898:	cmp	r4, #0
    589c:	beq	58d8 <accel_activate+0x718>
    58a0:	ldr	ip, [r4]
    58a4:	cmp	ip, #0
    58a8:	beq	58d8 <accel_activate+0x718>
    58ac:	ldr	r1, [pc, #648]	; 5b3c <accel_activate+0x97c>
    58b0:	ldr	r0, [r1]
    58b4:	add	r0, r0, #24
    58b8:	ldr	r3, [ip]
    58bc:	add	r1, r3, #16
    58c0:	ldr	r2, [r3, #12]
    58c4:	mov	r3, #0
    58c8:	str	ip, [sp]
    58cc:	bl	0 <zend_accel_hash_update>
    58d0:	add	r4, r4, #4
    58d4:	b	58a0 <accel_activate+0x6e0>
    58d8:	ldr	ip, [pc, #604]	; 5b3c <accel_activate+0x97c>
    58dc:	ldr	r0, [ip]
    58e0:	ldrb	r2, [r0, #68]	; 0x44
    58e4:	strb	r2, [r0, #60]	; 0x3c
    58e8:	ldr	r0, [ip]
    58ec:	ldr	r1, [r0, #52]	; 0x34
    58f0:	ldr	ip, [pc, #496]	; 5ae8 <accel_activate+0x928>
    58f4:	ldr	r3, [ip]
    58f8:	cmp	r1, r3
    58fc:	blt	590c <accel_activate+0x74c>
    5900:	add	r1, r1, #1
    5904:	str	r1, [r0, #52]	; 0x34
    5908:	b	5910 <accel_activate+0x750>
    590c:	str	r3, [r0, #52]	; 0x34
    5910:	mov	r0, #2
    5914:	strh	r0, [sp, #120]	; 0x78
    5918:	mov	r0, #0
    591c:	strh	r0, [sp, #122]	; 0x7a
    5920:	mov	r0, #2
    5924:	str	r0, [sp, #124]	; 0x7c
    5928:	mov	r0, #1
    592c:	str	r0, [sp, #128]	; 0x80
    5930:	ldr	r0, [pc, #516]	; 5b3c <accel_activate+0x97c>
    5934:	ldr	r3, [r0]
    5938:	mov	ip, #0
    593c:	strb	ip, [r3, #69]	; 0x45
    5940:	ldr	r0, [pc, #476]	; 5b24 <accel_activate+0x964>
    5944:	ldr	r0, [r0]
    5948:	mov	r1, #6
    594c:	add	r2, sp, #120	; 0x78
    5950:	bl	0 <fcntl>
    5954:	cmn	r0, #1
    5958:	bne	5988 <accel_activate+0x7c8>
    595c:	bl	0 <__errno_location>
    5960:	ldr	r0, [r0]
    5964:	bl	0 <strerror>
    5968:	mov	r4, r0
    596c:	bl	0 <__errno_location>
    5970:	mov	r2, #4
    5974:	ldr	r1, [pc, #408]	; 5b14 <accel_activate+0x954>
    5978:	ldr	r3, [r0]
    597c:	mov	r0, r2
    5980:	mov	r2, r4
    5984:	bl	0 <zend_accel_error>
    5988:	bl	0 <zend_shared_alloc_unlock>
    598c:	ldr	r2, [pc, #376]	; 5b0c <accel_activate+0x94c>
    5990:	ldr	r3, [pc, #420]	; 5b3c <accel_activate+0x97c>
    5994:	ldr	ip, [r3]
    5998:	ldrb	r0, [ip, #60]	; 0x3c
    599c:	strb	r0, [r2]
    59a0:	ldr	r0, [pc, #272]	; 5ab8 <accel_activate+0x8f8>
    59a4:	ldrb	r0, [r0]
    59a8:	cmp	r0, #0
    59ac:	beq	59b8 <accel_activate+0x7f8>
    59b0:	mov	r0, #1
    59b4:	bl	0 <zend_accel_shared_protect>
    59b8:	ldr	r3, [pc, #300]	; 5aec <accel_activate+0x92c>
    59bc:	ldr	r2, [r3]
    59c0:	sub	ip, r2, #1
    59c4:	str	ip, [r3]
    59c8:	ldr	r3, [pc, #356]	; 5b34 <accel_activate+0x974>
    59cc:	ldr	r3, [r3]
    59d0:	cmp	r2, r3
    59d4:	bne	59dc <accel_activate+0x81c>
    59d8:	bl	0 <zend_signal_handler_unblock>
    59dc:	ldr	r0, [pc, #296]	; 5b0c <accel_activate+0x94c>
    59e0:	ldrb	r0, [r0]
    59e4:	cmp	r0, #0
    59e8:	beq	5a24 <accel_activate+0x864>
    59ec:	ldr	r0, [pc, #328]	; 5b3c <accel_activate+0x97c>
    59f0:	ldr	r0, [r0]
    59f4:	ldr	r2, [r0, #52]	; 0x34
    59f8:	ldr	ip, [pc, #220]	; 5adc <accel_activate+0x91c>
    59fc:	ldr	r3, [ip]
    5a00:	cmp	r2, r3
    5a04:	beq	5a24 <accel_activate+0x864>
    5a08:	str	r2, [ip]
    5a0c:	bl	0 <realpath_cache_clean>
    5a10:	bl	511c <accel_reset_pcre_cache>
    5a14:	ldr	r0, [pc, #272]	; 5b2c <accel_activate+0x96c>
    5a18:	mov	ip, #0
    5a1c:	strb	ip, [r0]
    5a20:	b	5a54 <accel_activate+0x894>
    5a24:	ldr	r0, [pc, #224]	; 5b0c <accel_activate+0x94c>
    5a28:	ldrb	r0, [r0]
    5a2c:	cmp	r0, #0
    5a30:	bne	5a54 <accel_activate+0x894>
    5a34:	ldr	r0, [pc, #240]	; 5b2c <accel_activate+0x96c>
    5a38:	ldrb	r0, [r0]
    5a3c:	cmp	r0, #0
    5a40:	bne	5a54 <accel_activate+0x894>
    5a44:	bl	511c <accel_reset_pcre_cache>
    5a48:	ldr	r2, [pc, #220]	; 5b2c <accel_activate+0x96c>
    5a4c:	mov	r1, #1
    5a50:	strb	r1, [r2]
    5a54:	ldr	r0, [pc, #224]	; 5b3c <accel_activate+0x97c>
    5a58:	ldr	r0, [r0]
    5a5c:	ldr	r1, [r0, #72]	; 0x48
    5a60:	cmp	r1, #0
    5a64:	beq	5a78 <accel_activate+0x8b8>
    5a68:	ldr	r0, [r1, #236]	; 0xec
    5a6c:	cmp	r0, #0
    5a70:	beq	5a78 <accel_activate+0x8b8>
    5a74:	bl	2eb0 <zend_accel_set_auto_globals>
    5a78:	mov	r0, #0
    5a7c:	b	5a90 <accel_activate+0x8d0>
    5a80:	ldr	r1, [pc, #132]	; 5b0c <accel_activate+0x94c>
    5a84:	mov	ip, #0
    5a88:	strb	ip, [r1]
    5a8c:	mov	r0, #0
    5a90:	ldr	r4, [sp, #16]
    5a94:	ldr	r5, [sp, #20]
    5a98:	ldr	r6, [sp, #24]
    5a9c:	ldr	lr, [sp, #8]
    5aa0:	add	sp, sp, #136	; 0x88
    5aa4:	bx	lr
    5aa8:	.word	0x000000f0
    5aac:	.word	0x00000004
    5ab0:	.word	0x000000f8
    5ab4:	.word	0x00000000
    5ab8:	.word	0x00000059
    5abc:	.word	0x00000000
    5ac0:	.word	0x00000130
    5ac4:	.word	0x00000050
    5ac8:	.word	0x00000af6
    5acc:	.word	0x00000071
    5ad0:	.word	0x00000000
    5ad4:	.word	0x00000148
    5ad8:	.word	0x00000209
    5adc:	.word	0x00000100
    5ae0:	.word	0x00000bb0
    5ae4:	.word	0x00000080
    5ae8:	.word	0x000000fc
    5aec:	.word	0x00000000
    5af0:	.word	0x000002fc
    5af4:	.word	0x000000e8
    5af8:	.word	0x00000389
    5afc:	.word	0x000003c0
    5b00:	.word	0x000000ec
    5b04:	.word	0x000006cf
    5b08:	.word	0x00000700
    5b0c:	.word	0x00000006
    5b10:	.word	0x00000a28
    5b14:	.word	0x00000906
    5b18:	.word	0x00000144
    5b1c:	.word	0x000000a0
    5b20:	.word	0x000000f4
    5b24:	.word	0x00000000
    5b28:	.word	0x000008f2
    5b2c:	.word	0x00000007
    5b30:	.word	0x0000005d
    5b34:	.word	0x00000004
    5b38:	.word	0x0000033b
    5b3c:	.word	0x00000000

00005b40 <accel_post_deactivate>:
    5b40:	mov	ip, sp
    5b44:	sub	sp, sp, #32
    5b48:	str	ip, [sp]
    5b4c:	str	lr, [sp, #4]
    5b50:	str	r4, [sp, #8]
    5b54:	ldr	r0, [pc, #252]	; 5c58 <accel_post_deactivate+0x118>
    5b58:	ldr	r0, [r0]
    5b5c:	cmp	r0, #0
    5b60:	beq	5b98 <accel_post_deactivate+0x58>
    5b64:	ldr	r2, [r0, #4]
    5b68:	and	r1, r2, #64	; 0x40
    5b6c:	cmp	r1, #0
    5b70:	bne	5b8c <accel_post_deactivate+0x4c>
    5b74:	ldr	ip, [r0]
    5b78:	sub	r1, ip, #1
    5b7c:	str	r1, [r0]
    5b80:	cmp	r1, #0
    5b84:	bne	5b8c <accel_post_deactivate+0x4c>
    5b88:	bl	0 <_efree>
    5b8c:	ldr	r1, [pc, #196]	; 5c58 <accel_post_deactivate+0x118>
    5b90:	mov	r3, #0
    5b94:	str	r3, [r1]
    5b98:	ldr	r0, [pc, #172]	; 5c4c <accel_post_deactivate+0x10c>
    5b9c:	ldrb	r0, [r0]
    5ba0:	cmp	r0, #0
    5ba4:	beq	5c38 <accel_post_deactivate+0xf8>
    5ba8:	ldr	r0, [pc, #164]	; 5c54 <accel_post_deactivate+0x114>
    5bac:	ldrb	r0, [r0]
    5bb0:	cmp	r0, #0
    5bb4:	beq	5c38 <accel_post_deactivate+0xf8>
    5bb8:	bl	0 <zend_shared_alloc_safe_unlock>
    5bbc:	mov	r0, #2
    5bc0:	strh	r0, [sp, #16]
    5bc4:	mov	r0, #0
    5bc8:	strh	r0, [sp, #18]
    5bcc:	mov	r0, #0
    5bd0:	str	r0, [sp, #20]
    5bd4:	mov	r0, #0
    5bd8:	str	r0, [sp, #24]
    5bdc:	ldr	r0, [pc, #120]	; 5c5c <accel_post_deactivate+0x11c>
    5be0:	ldr	r0, [r0]
    5be4:	mov	r1, #6
    5be8:	add	r2, sp, #16
    5bec:	bl	0 <fcntl>
    5bf0:	cmn	r0, #1
    5bf4:	bne	5c24 <accel_post_deactivate+0xe4>
    5bf8:	bl	0 <__errno_location>
    5bfc:	ldr	r0, [r0]
    5c00:	bl	0 <strerror>
    5c04:	mov	r4, r0
    5c08:	bl	0 <__errno_location>
    5c0c:	mov	r2, #4
    5c10:	ldr	r1, [pc, #72]	; 5c60 <accel_post_deactivate+0x120>
    5c14:	ldr	r3, [r0]
    5c18:	mov	r0, r2
    5c1c:	mov	r2, r4
    5c20:	bl	0 <zend_accel_error>
    5c24:	ldr	r2, [pc, #36]	; 5c50 <accel_post_deactivate+0x110>
    5c28:	mov	r0, #0
    5c2c:	str	r0, [r2]
    5c30:	mov	r0, #0
    5c34:	b	5c3c <accel_post_deactivate+0xfc>
    5c38:	mov	r0, #0
    5c3c:	ldr	r4, [sp, #8]
    5c40:	ldr	lr, [sp, #4]
    5c44:	add	sp, sp, #32
    5c48:	bx	lr
    5c4c:	.word	0x00000004
	...
    5c58:	.word	0x000000a0
    5c5c:	.word	0x00000000
    5c60:	.word	0x000008f2

00005c64 <accelerator_remove_cb>:
    5c64:	mov	ip, sp
    5c68:	sub	sp, sp, #16
    5c6c:	str	ip, [sp]
    5c70:	str	lr, [sp, #4]
    5c74:	str	r4, [sp, #8]
    5c78:	mov	r4, r0
    5c7c:	ldr	r0, [r4]
    5c80:	ldr	r1, [pc, #60]	; 5cc4 <accelerator_remove_cb+0x60>
    5c84:	bl	0 <strcmp>
    5c88:	cmp	r0, #0
    5c8c:	bne	5cb0 <accelerator_remove_cb+0x4c>
    5c90:	mov	r0, #0
    5c94:	str	r0, [r4, #20]
    5c98:	mov	r2, #0
    5c9c:	str	r2, [r4, #28]
    5ca0:	mov	ip, #0
    5ca4:	str	ip, [r4, #32]
    5ca8:	mov	r1, #0
    5cac:	str	r1, [r4, #40]	; 0x28
    5cb0:	mov	r0, #0
    5cb4:	ldr	r4, [sp, #8]
    5cb8:	ldr	lr, [sp, #4]
    5cbc:	add	sp, sp, #16
    5cc0:	bx	lr
    5cc4:	.word	0x00000678

00005cc8 <zps_startup_failure>:
    5cc8:	mov	ip, sp
    5ccc:	sub	sp, sp, #8
    5cd0:	str	ip, [sp]
    5cd4:	str	lr, [sp, #4]
    5cd8:	ldr	ip, [pc, #56]	; 5d18 <zps_startup_failure+0x50>
    5cdc:	mov	r3, #0
    5ce0:	strb	r3, [ip]
    5ce4:	ldr	r3, [pc, #48]	; 5d1c <zps_startup_failure+0x54>
    5ce8:	str	r0, [r3]
    5cec:	cmp	r1, #0
    5cf0:	movne	r0, r1
    5cf4:	moveq	r0, r0
    5cf8:	ldr	r3, [pc, #32]	; 5d20 <zps_startup_failure+0x58>
    5cfc:	str	r0, [r3]
    5d00:	ldr	r0, [pc, #12]	; 5d14 <zps_startup_failure+0x4c>
    5d04:	mov	r1, #0
    5d08:	ldr	lr, [sp, #4]
    5d0c:	add	sp, sp, #8
    5d10:	b	0 <zend_llist_del_element>
	...
    5d1c:	.word	0x00000010
    5d20:	.word	0x00000000

00005d24 <accel_startup>:
    5d24:	mov	ip, sp
    5d28:	sub	sp, sp, #96	; 0x60
    5d2c:	sub	sp, sp, #4096	; 0x1000
    5d30:	str	ip, [sp, #20]
    5d34:	str	lr, [sp, #24]
    5d38:	str	r4, [sp, #32]
    5d3c:	str	r5, [sp, #36]	; 0x24
    5d40:	str	r6, [sp, #40]	; 0x28
    5d44:	str	r7, [sp, #44]	; 0x2c
    5d48:	str	r8, [sp, #48]	; 0x30
    5d4c:	str	r9, [sp, #52]	; 0x34
    5d50:	str	sl, [sp, #56]	; 0x38
    5d54:	mov	r5, r0
    5d58:	ldr	r0, [pc, #1380]	; 62c4 <accel_startup+0x5a0>
    5d5c:	mov	r1, #0
    5d60:	movw	r2, #33104	; 0x8150
    5d64:	bl	0 <memset>
    5d68:	add	r0, sp, #80	; 0x50
    5d6c:	bl	0 <PHP_MD5Init>
    5d70:	add	r0, sp, #80	; 0x50
    5d74:	ldr	r1, [pc, #1332]	; 62b0 <accel_startup+0x58c>
    5d78:	mov	r2, #5
    5d7c:	bl	0 <PHP_MD5Update>
    5d80:	add	r0, sp, #80	; 0x50
    5d84:	ldr	r1, [pc, #1312]	; 62ac <accel_startup+0x588>
    5d88:	mov	r2, #16
    5d8c:	bl	0 <PHP_MD5Update>
    5d90:	add	r0, sp, #80	; 0x50
    5d94:	ldr	r1, [pc, #1348]	; 62e0 <accel_startup+0x5bc>
    5d98:	mov	r2, #9
    5d9c:	bl	0 <PHP_MD5Update>
    5da0:	ldr	r0, [pc, #1288]	; 62b0 <accel_startup+0x58c>
    5da4:	ldr	r1, [pc, #1360]	; 62fc <accel_startup+0x5d8>
    5da8:	bl	0 <strstr>
    5dac:	cmp	r0, #0
    5db0:	beq	5dd4 <accel_startup+0xb0>
    5db4:	add	r0, sp, #80	; 0x50
    5db8:	ldr	r1, [pc, #1328]	; 62f0 <accel_startup+0x5cc>
    5dbc:	mov	r2, #11
    5dc0:	bl	0 <PHP_MD5Update>
    5dc4:	add	r0, sp, #80	; 0x50
    5dc8:	ldr	r1, [pc, #1372]	; 632c <accel_startup+0x608>
    5dcc:	mov	r2, #8
    5dd0:	bl	0 <PHP_MD5Update>
    5dd4:	add	r0, sp, #64	; 0x40
    5dd8:	add	r1, sp, #80	; 0x50
    5ddc:	bl	0 <PHP_MD5Final>
    5de0:	ldr	r0, [pc, #1292]	; 62f4 <accel_startup+0x5d0>
    5de4:	add	r4, sp, #64	; 0x40
    5de8:	mov	r6, #0
    5dec:	ldr	r1, [pc, #1304]	; 630c <accel_startup+0x5e8>
    5df0:	ldrb	r3, [r4, r6]
    5df4:	ldrb	ip, [r1, r3, asr #4]
    5df8:	strb	ip, [r0, r6, lsl #1]
    5dfc:	lsl	r2, r6, #1
    5e00:	add	r2, r0, r2
    5e04:	and	r3, r3, #15
    5e08:	ldrb	r1, [r1, r3]
    5e0c:	strb	r1, [r2, #1]
    5e10:	add	r6, r6, #1
    5e14:	cmp	r6, #16
    5e18:	bcc	5dec <accel_startup+0xc8>
    5e1c:	bl	0 <start_accel_module>
    5e20:	cmn	r0, #1
    5e24:	bne	5e48 <accel_startup+0x124>
    5e28:	ldr	r3, [pc, #1192]	; 62d8 <accel_startup+0x5b4>
    5e2c:	mov	r2, #0
    5e30:	strb	r2, [r3]
    5e34:	mov	r0, #2
    5e38:	ldr	r1, [pc, #1232]	; 6310 <accel_startup+0x5ec>
    5e3c:	bl	0 <zend_error>
    5e40:	mvn	r0, #0
    5e44:	b	6284 <accel_startup+0x560>
    5e48:	ldr	r2, [pc, #1180]	; 62ec <accel_startup+0x5c8>
    5e4c:	ldrb	r1, [r2]
    5e50:	cmp	r1, #0
    5e54:	beq	6150 <accel_startup+0x42c>
    5e58:	ldr	ip, [pc, #1128]	; 62c8 <accel_startup+0x5a4>
    5e5c:	ldr	r0, [ip]
    5e60:	ldr	r1, [pc, #1224]	; 6330 <accel_startup+0x60c>
    5e64:	bl	0 <strcmp>
    5e68:	cmp	r0, #0
    5e6c:	beq	5eb8 <accel_startup+0x194>
    5e70:	ldr	ip, [pc, #1104]	; 62c8 <accel_startup+0x5a4>
    5e74:	ldr	r0, [ip]
    5e78:	ldr	r1, [pc, #1108]	; 62d4 <accel_startup+0x5b0>
    5e7c:	bl	0 <strcmp>
    5e80:	cmp	r0, #0
    5e84:	beq	5eb8 <accel_startup+0x194>
    5e88:	ldr	r1, [pc, #1080]	; 62c8 <accel_startup+0x5a4>
    5e8c:	ldr	r0, [r1]
    5e90:	ldr	r1, [pc, #1148]	; 6314 <accel_startup+0x5f0>
    5e94:	bl	0 <strcmp>
    5e98:	cmp	r0, #0
    5e9c:	beq	5eb8 <accel_startup+0x194>
    5ea0:	ldr	r3, [pc, #1056]	; 62c8 <accel_startup+0x5a4>
    5ea4:	ldr	r0, [r3]
    5ea8:	ldr	r1, [pc, #1076]	; 62e4 <accel_startup+0x5c0>
    5eac:	bl	0 <strcmp>
    5eb0:	cmp	r0, #0
    5eb4:	bne	6150 <accel_startup+0x42c>
    5eb8:	ldr	r0, [pc, #1120]	; 6320 <accel_startup+0x5fc>
    5ebc:	ldr	r1, [pc, #1084]	; 6300 <accel_startup+0x5dc>
    5ec0:	bl	0 <fopen>
    5ec4:	mov	r8, r0
    5ec8:	cmp	r8, #0
    5ecc:	beq	6150 <accel_startup+0x42c>
    5ed0:	ldr	r1, [pc, #1072]	; 6308 <accel_startup+0x5e4>
    5ed4:	add	r2, sp, #64	; 0x40
    5ed8:	add	r3, sp, #68	; 0x44
    5edc:	add	r7, sp, #80	; 0x50
    5ee0:	add	r0, sp, #72	; 0x48
    5ee4:	add	r9, sp, #88	; 0x58
    5ee8:	add	ip, sp, #76	; 0x4c
    5eec:	add	r4, sp, #96	; 0x60
    5ef0:	str	r4, [sp, #16]
    5ef4:	str	ip, [sp, #12]
    5ef8:	str	r9, [sp, #8]
    5efc:	str	r0, [sp, #4]
    5f00:	str	r7, [sp]
    5f04:	mov	r0, r8
    5f08:	bl	0 <fscanf>
    5f0c:	cmp	r0, #7
    5f10:	bne	6148 <accel_startup+0x424>
    5f14:	ldrb	ip, [sp, #80]	; 0x50
    5f18:	cmp	ip, #114	; 0x72
    5f1c:	bne	5ed0 <accel_startup+0x1ac>
    5f20:	ldrb	r3, [sp, #81]	; 0x51
    5f24:	cmp	r3, #45	; 0x2d
    5f28:	bne	5ed0 <accel_startup+0x1ac>
    5f2c:	ldrb	r1, [sp, #82]	; 0x52
    5f30:	cmp	r1, #120	; 0x78
    5f34:	bne	5ed0 <accel_startup+0x1ac>
    5f38:	ldrb	r1, [sp, #96]	; 0x60
    5f3c:	cmp	r1, #47	; 0x2f
    5f40:	bne	5ed0 <accel_startup+0x1ac>
    5f44:	ldr	r0, [sp, #64]	; 0x40
    5f48:	add	r1, r0, #255	; 0xff
    5f4c:	add	r1, r1, #65280	; 0xff00
    5f50:	add	r1, r1, #2031616	; 0x1f0000
    5f54:	bic	r9, r1, #255	; 0xff
    5f58:	bic	r9, r9, #65280	; 0xff00
    5f5c:	bic	r9, r9, #2031616	; 0x1f0000
    5f60:	ldr	r2, [sp, #68]	; 0x44
    5f64:	bic	r4, r2, #255	; 0xff
    5f68:	bic	r4, r4, #65280	; 0xff00
    5f6c:	bic	r4, r4, #2031616	; 0x1f0000
    5f70:	ldr	r1, [pc, #944]	; 6328 <accel_startup+0x604>
    5f74:	add	r2, sp, #64	; 0x40
    5f78:	mov	r0, r8
    5f7c:	bl	0 <fscanf>
    5f80:	cmp	r0, #1
    5f84:	bne	5fa4 <accel_startup+0x280>
    5f88:	ldr	r2, [sp, #64]	; 0x40
    5f8c:	add	r0, r4, #2097152	; 0x200000
    5f90:	cmp	r2, r0
    5f94:	bne	5fa4 <accel_startup+0x280>
    5f98:	ldr	r6, [sp, #68]	; 0x44
    5f9c:	mov	r4, r2
    5fa0:	b	5fa8 <accel_startup+0x284>
    5fa4:	mov	r6, r4
    5fa8:	cmp	r4, r9
    5fac:	bls	6148 <accel_startup+0x424>
    5fb0:	mov	r0, #4
    5fb4:	ldr	r1, [pc, #800]	; 62dc <accel_startup+0x5b8>
    5fb8:	add	r2, sp, #96	; 0x60
    5fbc:	str	r2, [sp]
    5fc0:	mov	r3, r4
    5fc4:	mov	r2, r9
    5fc8:	bl	0 <zend_accel_error>
    5fcc:	sub	r4, r4, r9
    5fd0:	sub	r6, r6, r9
    5fd4:	mov	r0, #0
    5fd8:	mov	r2, #3
    5fdc:	mov	r3, #34	; 0x22
    5fe0:	mvn	r1, #0
    5fe4:	mov	r7, #0
    5fe8:	str	r7, [sp, #4]
    5fec:	str	r1, [sp]
    5ff0:	mov	r1, r4
    5ff4:	bl	0 <mmap>
    5ff8:	mov	r7, r0
    5ffc:	cmn	r7, #1
    6000:	bne	6034 <accel_startup+0x310>
    6004:	bl	0 <__errno_location>
    6008:	ldr	r0, [r0]
    600c:	bl	0 <strerror>
    6010:	mov	r4, r0
    6014:	bl	0 <__errno_location>
    6018:	mov	r2, #2
    601c:	ldr	r1, [pc, #668]	; 62c0 <accel_startup+0x59c>
    6020:	ldr	r3, [r0]
    6024:	mov	r0, r2
    6028:	mov	r2, r4
    602c:	bl	0 <zend_error>
    6030:	b	6148 <accel_startup+0x424>
    6034:	mov	r2, r6
    6038:	mov	r1, r9
    603c:	mov	r0, r7
    6040:	bl	0 <memcpy>
    6044:	mov	r2, #7
    6048:	movw	r3, #50	; 0x32
    604c:	movt	r3, #4
    6050:	mvn	r1, #0
    6054:	mov	r0, #0
    6058:	str	r0, [sp, #4]
    605c:	str	r1, [sp]
    6060:	mov	r1, r4
    6064:	mov	r0, r9
    6068:	bl	0 <mmap>
    606c:	mov	sl, r0
    6070:	cmn	sl, #1
    6074:	bne	6114 <accel_startup+0x3f0>
    6078:	mov	r2, #7
    607c:	mov	r3, #50	; 0x32
    6080:	mvn	r0, #0
    6084:	mov	r1, #0
    6088:	str	r1, [sp, #4]
    608c:	str	r0, [sp]
    6090:	mov	r1, r4
    6094:	mov	r0, r9
    6098:	bl	0 <mmap>
    609c:	mov	sl, r0
    60a0:	mov	r2, #14
    60a4:	mov	r1, r4
    60a8:	mov	r0, r9
    60ac:	bl	0 <madvise>
    60b0:	cmn	r0, #1
    60b4:	bne	6114 <accel_startup+0x3f0>
    60b8:	mov	r2, r6
    60bc:	mov	r1, r7
    60c0:	mov	r0, r9
    60c4:	bl	0 <memcpy>
    60c8:	mov	r2, #5
    60cc:	mov	r1, r4
    60d0:	mov	r0, r9
    60d4:	bl	0 <mprotect>
    60d8:	mov	r1, r4
    60dc:	mov	r0, r7
    60e0:	bl	0 <munmap>
    60e4:	bl	0 <__errno_location>
    60e8:	ldr	r0, [r0]
    60ec:	bl	0 <strerror>
    60f0:	mov	r4, r0
    60f4:	bl	0 <__errno_location>
    60f8:	mov	r2, #2
    60fc:	ldr	r1, [pc, #456]	; 62cc <accel_startup+0x5a8>
    6100:	ldr	r3, [r0]
    6104:	mov	r0, r2
    6108:	mov	r2, r4
    610c:	bl	0 <zend_error>
    6110:	b	6148 <accel_startup+0x424>
    6114:	cmp	sl, r9
    6118:	bne	613c <accel_startup+0x418>
    611c:	mov	r2, r6
    6120:	mov	r1, r7
    6124:	mov	r0, r9
    6128:	bl	0 <memcpy>
    612c:	mov	r2, #5
    6130:	mov	r1, r4
    6134:	mov	r0, r9
    6138:	bl	0 <mprotect>
    613c:	mov	r1, r4
    6140:	mov	r0, r7
    6144:	bl	0 <munmap>
    6148:	mov	r0, r8
    614c:	bl	0 <fclose>
    6150:	ldr	r2, [pc, #368]	; 62c8 <accel_startup+0x5a4>
    6154:	ldr	r0, [r2]
    6158:	cmp	r0, #0
    615c:	beq	61dc <accel_startup+0x4b8>
    6160:	ldr	r4, [pc, #412]	; 6304 <accel_startup+0x5e0>
    6164:	ldr	r1, [r4]
    6168:	cmp	r1, #0
    616c:	beq	6194 <accel_startup+0x470>
    6170:	ldr	ip, [pc, #336]	; 62c8 <accel_startup+0x5a4>
    6174:	ldr	r0, [ip]
    6178:	bl	0 <strcmp>
    617c:	cmp	r0, #0
    6180:	bne	618c <accel_startup+0x468>
    6184:	mov	r3, #0
    6188:	b	61e0 <accel_startup+0x4bc>
    618c:	add	r4, r4, #4
    6190:	b	6164 <accel_startup+0x440>
    6194:	ldr	r1, [pc, #380]	; 6318 <accel_startup+0x5f4>
    6198:	ldrb	ip, [r1]
    619c:	cmp	ip, #0
    61a0:	beq	61dc <accel_startup+0x4b8>
    61a4:	ldr	r2, [pc, #284]	; 62c8 <accel_startup+0x5a4>
    61a8:	ldr	r0, [r2]
    61ac:	ldr	r1, [pc, #380]	; 6330 <accel_startup+0x60c>
    61b0:	bl	0 <strcmp>
    61b4:	cmp	r0, #0
    61b8:	beq	61d4 <accel_startup+0x4b0>
    61bc:	ldr	ip, [pc, #260]	; 62c8 <accel_startup+0x5a4>
    61c0:	ldr	r0, [ip]
    61c4:	ldr	r1, [pc, #260]	; 62d0 <accel_startup+0x5ac>
    61c8:	bl	0 <strcmp>
    61cc:	cmp	r0, #0
    61d0:	bne	61dc <accel_startup+0x4b8>
    61d4:	mov	r3, #0
    61d8:	b	61e0 <accel_startup+0x4bc>
    61dc:	mvn	r3, #0
    61e0:	cmn	r3, #1
    61e4:	bne	6248 <accel_startup+0x524>
    61e8:	ldr	r3, [pc, #232]	; 62d8 <accel_startup+0x5b4>
    61ec:	mov	ip, #0
    61f0:	strb	ip, [r3]
    61f4:	ldr	r0, [pc, #284]	; 6318 <accel_startup+0x5f4>
    61f8:	ldrb	r0, [r0]
    61fc:	cmp	r0, #0
    6200:	bne	6230 <accel_startup+0x50c>
    6204:	ldr	r0, [pc, #188]	; 62c8 <accel_startup+0x5a4>
    6208:	ldr	r0, [r0]
    620c:	ldr	r1, [pc, #284]	; 6330 <accel_startup+0x60c>
    6210:	bl	0 <strcmp>
    6214:	cmp	r0, #0
    6218:	bne	6230 <accel_startup+0x50c>
    621c:	ldr	r0, [pc, #196]	; 62e8 <accel_startup+0x5c4>
    6220:	mov	r1, #0
    6224:	ldr	r2, [pc, #240]	; 631c <accel_startup+0x5f8>
    6228:	bl	5cc8 <zps_startup_failure>
    622c:	b	6240 <accel_startup+0x51c>
    6230:	ldr	r0, [pc, #192]	; 62f8 <accel_startup+0x5d4>
    6234:	mov	r1, #0
    6238:	ldr	r2, [pc, #220]	; 631c <accel_startup+0x5f8>
    623c:	bl	5cc8 <zps_startup_failure>
    6240:	mov	r0, #0
    6244:	b	6284 <accel_startup+0x560>
    6248:	ldr	r3, [pc, #104]	; 62b8 <accel_startup+0x594>
    624c:	ldrb	r1, [r3]
    6250:	cmp	r1, #0
    6254:	bne	6260 <accel_startup+0x53c>
    6258:	mov	r0, #0
    625c:	b	6284 <accel_startup+0x560>
    6260:	ldr	r3, [pc, #76]	; 62b4 <accel_startup+0x590>
    6264:	ldr	r2, [pc, #80]	; 62bc <accel_startup+0x598>
    6268:	ldr	ip, [r2]
    626c:	str	ip, [r3]
    6270:	ldr	r0, [pc, #172]	; 6324 <accel_startup+0x600>
    6274:	str	r0, [r2]
    6278:	mov	r0, #0
    627c:	str	r0, [r5, #96]	; 0x60
    6280:	mov	r0, #0
    6284:	ldr	r4, [sp, #32]
    6288:	ldr	r5, [sp, #36]	; 0x24
    628c:	ldr	r6, [sp, #40]	; 0x28
    6290:	ldr	r7, [sp, #44]	; 0x2c
    6294:	ldr	r8, [sp, #48]	; 0x30
    6298:	ldr	r9, [sp, #52]	; 0x34
    629c:	ldr	sl, [sp, #56]	; 0x38
    62a0:	ldr	lr, [sp, #24]
    62a4:	ldr	sp, [sp, #20]
    62a8:	bx	lr
    62ac:	.word	0x000007fa
    62b0:	.word	0x00000a69
    62b4:	.word	0x0000000c
    62b8:	.word	0x00000004
    62bc:	.word	0x00000000
    62c0:	.word	0x000008bf
	...
    62cc:	.word	0x0000054d
    62d0:	.word	0x0000097f
    62d4:	.word	0x000003b5
    62d8:	.word	0x00000000
    62dc:	.word	0x00000499
    62e0:	.word	0x00000923
    62e4:	.word	0x0000092d
    62e8:	.word	0x000006dd
    62ec:	.word	0x00000092
    62f0:	.word	0x000006d1
    62f4:	.word	0x00000000
    62f8:	.word	0x00000986
    62fc:	.word	0x000002a6
    6300:	.word	0x00000088
    6304:	.word	0x00000024
    6308:	.word	0x00000250
    630c:	.word	0x00000bd2
    6310:	.word	0x00000814
    6314:	.word	0x0000080b
    6318:	.word	0x0000005b
    631c:	.word	0x00000000
    6320:	.word	0x00000737
    6324:	.word	0x00000000
    6328:	.word	0x00000108
    632c:	.word	0x00000a6f
    6330:	.word	0x000002f0

00006334 <accel_post_startup>:
    6334:	mov	ip, sp
    6338:	sub	sp, sp, #392	; 0x188
    633c:	sub	sp, sp, #1024	; 0x400
    6340:	str	ip, [sp, #12]
    6344:	str	lr, [sp, #16]
    6348:	str	r4, [sp, #104]	; 0x68
    634c:	str	r5, [sp, #108]	; 0x6c
    6350:	str	r6, [sp, #112]	; 0x70
    6354:	str	r7, [sp, #116]	; 0x74
    6358:	str	r8, [sp, #120]	; 0x78
    635c:	str	r9, [sp, #124]	; 0x7c
    6360:	str	sl, [sp, #128]	; 0x80
    6364:	str	fp, [sp, #132]	; 0x84
    6368:	ldr	r0, [pc, #3556]	; 7154 <accel_post_startup+0xe20>
    636c:	ldr	ip, [r0]
    6370:	cmp	ip, #0
    6374:	beq	6394 <accel_post_startup+0x60>
    6378:	mov	r1, #0
    637c:	str	r1, [r0]
    6380:	blx	ip
    6384:	cmp	r0, #0
    6388:	beq	6394 <accel_post_startup+0x60>
    638c:	mvn	r0, #0
    6390:	b	6698 <accel_post_startup+0x364>
    6394:	ldr	r1, [pc, #3544]	; 7174 <accel_post_startup+0xe40>
    6398:	ldr	ip, [pc, #3484]	; 713c <accel_post_startup+0xe08>
    639c:	ldrb	r0, [ip]
    63a0:	and	r0, r0, #255	; 0xff
    63a4:	strb	r0, [r1]
    63a8:	cmp	r0, #0
    63ac:	bne	666c <accel_post_startup+0x338>
    63b0:	ldr	r0, [pc, #3708]	; 7234 <accel_post_startup+0xf00>
    63b4:	ldr	r0, [r0]
    63b8:	bl	0 <zend_shared_alloc_startup>
    63bc:	cmp	r0, #2
    63c0:	bcs	65d4 <accel_post_startup+0x2a0>
    63c4:	cmp	r0, #0
    63c8:	beq	65b4 <accel_post_startup+0x280>
    63cc:	bl	0 <zend_shared_alloc_lock>
    63d0:	ldr	r0, [pc, #3564]	; 71c4 <accel_post_startup+0xe90>
    63d4:	ldr	r0, [r0]
    63d8:	cmp	r0, #0
    63dc:	beq	63f4 <accel_post_startup+0xc0>
    63e0:	lsl	r0, r0, #20
    63e4:	bl	0 <zend_shared_alloc>
    63e8:	ldr	ip, [pc, #3792]	; 72c0 <accel_post_startup+0xf8c>
    63ec:	str	r0, [ip]
    63f0:	b	6404 <accel_post_startup+0xd0>
    63f4:	mov	r0, #112	; 0x70
    63f8:	bl	0 <zend_shared_alloc>
    63fc:	ldr	r3, [pc, #3772]	; 72c0 <accel_post_startup+0xf8c>
    6400:	str	r0, [r3]
    6404:	ldr	r0, [pc, #3764]	; 72c0 <accel_post_startup+0xf8c>
    6408:	ldr	r0, [r0]
    640c:	cmp	r0, #0
    6410:	bne	642c <accel_post_startup+0xf8>
    6414:	mov	r0, #0
    6418:	ldr	r1, [pc, #3460]	; 71a4 <accel_post_startup+0xe70>
    641c:	bl	0 <zend_accel_error>
    6420:	bl	0 <zend_shared_alloc_unlock>
    6424:	mvn	r1, #0
    6428:	b	6598 <accel_post_startup+0x264>
    642c:	mov	r1, #0
    6430:	mov	r2, #112	; 0x70
    6434:	bl	0 <memset>
    6438:	ldr	r0, [pc, #3360]	; 7160 <accel_post_startup+0xe2c>
    643c:	ldr	r0, [r0]
    6440:	ldr	r3, [pc, #3704]	; 72c0 <accel_post_startup+0xf8c>
    6444:	ldr	ip, [r3]
    6448:	str	ip, [r0, #28]
    644c:	ldr	r0, [r3]
    6450:	add	r0, r0, #24
    6454:	ldr	r3, [pc, #3664]	; 72ac <accel_post_startup+0xf78>
    6458:	ldr	r1, [r3]
    645c:	bl	0 <zend_accel_hash_init>
    6460:	ldr	r1, [pc, #3420]	; 71c4 <accel_post_startup+0xe90>
    6464:	ldr	r2, [r1]
    6468:	cmp	r2, #0
    646c:	beq	64f8 <accel_post_startup+0x1c4>
    6470:	lsl	r2, r2, #15
    6474:	orr	r2, r2, r2, lsr #1
    6478:	orr	r2, r2, r2, lsr #2
    647c:	orr	r3, r2, r2, lsr #4
    6480:	orr	r2, r3, r3, lsr #8
    6484:	orr	r2, r2, r2, lsr #16
    6488:	ldr	r0, [pc, #3632]	; 72c0 <accel_post_startup+0xf8c>
    648c:	ldr	r3, [r0]
    6490:	lsl	r2, r2, #2
    6494:	str	r2, [r3, #88]	; 0x58
    6498:	ldr	ip, [r0]
    649c:	mov	r3, #0
    64a0:	str	r3, [ip, #92]	; 0x5c
    64a4:	ldr	r3, [r0]
    64a8:	add	r2, r3, r2
    64ac:	add	r2, r2, #276	; 0x114
    64b0:	str	r2, [r3, #96]	; 0x60
    64b4:	ldr	ip, [r0]
    64b8:	ldr	r2, [ip, #96]	; 0x60
    64bc:	str	r2, [ip, #100]	; 0x64
    64c0:	ldr	ip, [r0]
    64c4:	ldr	r3, [r1]
    64c8:	add	r1, ip, r3, lsl #20
    64cc:	str	r1, [ip, #104]	; 0x68
    64d0:	ldr	r3, [r0]
    64d4:	mov	r1, #0
    64d8:	str	r1, [r3, #108]	; 0x6c
    64dc:	ldr	r2, [r0]
    64e0:	add	r0, r2, #112	; 0x70
    64e4:	mov	r1, #0
    64e8:	ldr	r3, [r2, #96]	; 0x60
    64ec:	sub	r2, r3, r2
    64f0:	sub	r2, r2, #112	; 0x70
    64f4:	bl	0 <memset>
    64f8:	ldr	r0, [pc, #3424]	; 7260 <accel_post_startup+0xf2c>
    64fc:	ldr	r1, [pc, #3196]	; 7180 <accel_post_startup+0xe4c>
    6500:	bl	0 <zend_interned_strings_set_request_storage_handlers>
    6504:	bl	5088 <zend_reset_cache_vars>
    6508:	ldr	r3, [pc, #3504]	; 72c0 <accel_post_startup+0xf8c>
    650c:	ldr	r2, [r3]
    6510:	mov	ip, #0
    6514:	str	ip, [r2, #12]
    6518:	ldr	ip, [r3]
    651c:	mov	r0, #0
    6520:	str	r0, [ip, #16]
    6524:	ldr	r0, [r3]
    6528:	mov	r1, #0
    652c:	str	r1, [r0, #20]
    6530:	ldr	r0, [r3]
    6534:	mov	ip, #1
    6538:	strb	ip, [r0, #60]	; 0x3c
    653c:	mov	r0, #0
    6540:	bl	0 <time>
    6544:	ldr	r2, [pc, #3444]	; 72c0 <accel_post_startup+0xf8c>
    6548:	ldr	r1, [r2]
    654c:	str	r0, [r1, #48]	; 0x30
    6550:	ldr	r3, [r2]
    6554:	mov	ip, #0
    6558:	str	ip, [r3, #52]	; 0x34
    655c:	ldr	ip, [r2]
    6560:	mov	r3, #0
    6564:	strb	r3, [ip, #69]	; 0x45
    6568:	mov	r2, #0
    656c:	ldr	r1, [pc, #3404]	; 72c0 <accel_post_startup+0xf8c>
    6570:	ldr	r0, [r1]
    6574:	lsl	r1, r2, #2
    6578:	add	r3, r0, r1
    657c:	mvn	ip, #0
    6580:	str	ip, [r3, #80]	; 0x50
    6584:	add	r2, r2, #1
    6588:	cmp	r2, #2
    658c:	bcc	656c <accel_post_startup+0x238>
    6590:	bl	0 <zend_shared_alloc_unlock>
    6594:	mov	r1, #0
    6598:	cmn	r1, #1
    659c:	bne	660c <accel_post_startup+0x2d8>
    65a0:	ldr	ip, [pc, #3072]	; 71a8 <accel_post_startup+0xe74>
    65a4:	mov	r1, #0
    65a8:	strb	r1, [ip]
    65ac:	mvn	r0, #0
    65b0:	b	6698 <accel_post_startup+0x364>
    65b4:	ldr	r3, [pc, #3052]	; 71a8 <accel_post_startup+0xe74>
    65b8:	mov	r1, #0
    65bc:	strb	r1, [r3]
    65c0:	mov	r0, #0
    65c4:	ldr	r1, [pc, #3152]	; 721c <accel_post_startup+0xee8>
    65c8:	bl	0 <zend_accel_error>
    65cc:	mov	r0, #0
    65d0:	b	6698 <accel_post_startup+0x364>
    65d4:	cmp	r0, #2
    65d8:	beq	664c <accel_post_startup+0x318>
    65dc:	cmp	r0, #4
    65e0:	bne	660c <accel_post_startup+0x2d8>
    65e4:	bl	0 <zend_shared_alloc_lock>
    65e8:	ldr	r3, [pc, #3280]	; 72c0 <accel_post_startup+0xf8c>
    65ec:	ldr	ip, [pc, #2924]	; 7160 <accel_post_startup+0xe2c>
    65f0:	ldr	ip, [ip]
    65f4:	ldr	ip, [ip, #28]
    65f8:	str	ip, [r3]
    65fc:	ldr	r0, [pc, #3164]	; 7260 <accel_post_startup+0xf2c>
    6600:	ldr	r1, [pc, #2936]	; 7180 <accel_post_startup+0xe4c>
    6604:	bl	0 <zend_interned_strings_set_request_storage_handlers>
    6608:	bl	0 <zend_shared_alloc_unlock>
    660c:	ldr	r2, [pc, #2984]	; 71bc <accel_post_startup+0xe88>
    6610:	ldr	r3, [pc, #3240]	; 72c0 <accel_post_startup+0xf8c>
    6614:	ldr	r1, [r3]
    6618:	ldr	r0, [r1, #52]	; 0x34
    661c:	str	r0, [r2]
    6620:	bl	2f3c <zend_accel_init_auto_globals>
    6624:	bl	0 <zend_shared_alloc_lock>
    6628:	bl	0 <zend_shared_alloc_save_state>
    662c:	bl	0 <zend_shared_alloc_unlock>
    6630:	ldr	r0, [pc, #2892]	; 7184 <accel_post_startup+0xe50>
    6634:	ldrb	r0, [r0]
    6638:	cmp	r0, #0
    663c:	beq	66dc <accel_post_startup+0x3a8>
    6640:	mov	r0, #1
    6644:	bl	0 <zend_accel_shared_protect>
    6648:	b	66dc <accel_post_startup+0x3a8>
    664c:	ldr	r0, [pc, #2900]	; 71a8 <accel_post_startup+0xe74>
    6650:	mov	r3, #0
    6654:	strb	r3, [r0]
    6658:	mov	r0, #0
    665c:	ldr	r1, [pc, #2984]	; 720c <accel_post_startup+0xed8>
    6660:	bl	0 <zend_accel_error>
    6664:	mov	r0, #0
    6668:	b	6698 <accel_post_startup+0x364>
    666c:	ldr	r0, [pc, #3016]	; 723c <accel_post_startup+0xf08>
    6670:	ldr	r0, [r0]
    6674:	cmp	r0, #0
    6678:	bne	66c4 <accel_post_startup+0x390>
    667c:	ldr	r3, [pc, #2852]	; 71a8 <accel_post_startup+0xe74>
    6680:	mov	r1, #0
    6684:	strb	r1, [r3]
    6688:	mov	r0, #0
    668c:	ldr	r1, [pc, #2988]	; 7240 <accel_post_startup+0xf0c>
    6690:	bl	0 <zend_accel_error>
    6694:	mov	r0, #0
    6698:	ldr	r4, [sp, #104]	; 0x68
    669c:	ldr	r5, [sp, #108]	; 0x6c
    66a0:	ldr	r6, [sp, #112]	; 0x70
    66a4:	ldr	r7, [sp, #116]	; 0x74
    66a8:	ldr	r8, [sp, #120]	; 0x78
    66ac:	ldr	r9, [sp, #124]	; 0x7c
    66b0:	ldr	sl, [sp, #128]	; 0x80
    66b4:	ldr	fp, [sp, #132]	; 0x84
    66b8:	ldr	lr, [sp, #16]
    66bc:	ldr	sp, [sp, #12]
    66c0:	bx	lr
    66c4:	mov	r0, #1
    66c8:	mov	r1, #112	; 0x70
    66cc:	bl	0 <calloc>
    66d0:	ldr	r1, [pc, #3048]	; 72c0 <accel_post_startup+0xf8c>
    66d4:	str	r0, [r1]
    66d8:	bl	2f3c <zend_accel_init_auto_globals>
    66dc:	ldr	ip, [pc, #2744]	; 719c <accel_post_startup+0xe68>
    66e0:	ldr	r2, [pc, #2784]	; 71c8 <accel_post_startup+0xe94>
    66e4:	ldr	r1, [r2]
    66e8:	str	r1, [ip]
    66ec:	ldr	r3, [pc, #2896]	; 7244 <accel_post_startup+0xf10>
    66f0:	str	r3, [r2]
    66f4:	ldr	r1, [pc, #2724]	; 71a0 <accel_post_startup+0xe6c>
    66f8:	ldr	ip, [pc, #2696]	; 7188 <accel_post_startup+0xe54>
    66fc:	ldr	r0, [ip]
    6700:	str	r0, [r1]
    6704:	ldr	r0, [pc, #2656]	; 716c <accel_post_startup+0xe38>
    6708:	str	r0, [ip]
    670c:	ldr	ip, [pc, #2612]	; 7148 <accel_post_startup+0xe14>
    6710:	ldr	r2, [pc, #2684]	; 7194 <accel_post_startup+0xe60>
    6714:	ldr	r3, [r2]
    6718:	str	r3, [ip]
    671c:	ldr	r0, [pc, #2600]	; 714c <accel_post_startup+0xe18>
    6720:	str	r0, [r2]
    6724:	ldr	r0, [pc, #2596]	; 7150 <accel_post_startup+0xe1c>
    6728:	ldr	r0, [r0]
    672c:	ldr	r1, [pc, #2872]	; 726c <accel_post_startup+0xf38>
    6730:	mov	r2, #5
    6734:	bl	0 <zend_hash_str_find>
    6738:	cmp	r0, #0
    673c:	beq	6748 <accel_post_startup+0x414>
    6740:	ldr	r1, [r0]
    6744:	b	674c <accel_post_startup+0x418>
    6748:	mov	r1, #0
    674c:	cmp	r1, #0
    6750:	beq	6774 <accel_post_startup+0x440>
    6754:	ldrb	r2, [r1]
    6758:	cmp	r2, #1
    675c:	bne	6774 <accel_post_startup+0x440>
    6760:	ldr	r3, [pc, #2576]	; 7178 <accel_post_startup+0xe44>
    6764:	ldr	r2, [r1, #32]
    6768:	str	r2, [r3]
    676c:	ldr	ip, [pc, #2512]	; 7144 <accel_post_startup+0xe10>
    6770:	str	ip, [r1, #32]
    6774:	ldr	r1, [pc, #2732]	; 7228 <accel_post_startup+0xef4>
    6778:	mov	r3, #0
    677c:	str	r3, [r1]
    6780:	ldr	r1, [pc, #2736]	; 7238 <accel_post_startup+0xf04>
    6784:	mov	r3, #0
    6788:	str	r3, [r1]
    678c:	ldr	r0, [pc, #2584]	; 71ac <accel_post_startup+0xe78>
    6790:	ldr	r0, [r0]
    6794:	ldr	r1, [pc, #2772]	; 7270 <accel_post_startup+0xf3c>
    6798:	mov	r2, #12
    679c:	bl	0 <zend_hash_str_find>
    67a0:	cmp	r0, #0
    67a4:	beq	67b0 <accel_post_startup+0x47c>
    67a8:	ldr	r3, [r0]
    67ac:	b	67b4 <accel_post_startup+0x480>
    67b0:	mov	r3, #0
    67b4:	cmp	r3, #0
    67b8:	beq	67dc <accel_post_startup+0x4a8>
    67bc:	ldr	r2, [pc, #2676]	; 7238 <accel_post_startup+0xf04>
    67c0:	ldr	r0, [r3, #20]
    67c4:	str	r0, [r2]
    67c8:	ldr	r0, [pc, #2408]	; 7138 <accel_post_startup+0xe04>
    67cc:	ldr	ip, [r3, #4]
    67d0:	str	ip, [r0]
    67d4:	ldr	ip, [pc, #2688]	; 725c <accel_post_startup+0xf28>
    67d8:	str	ip, [r3, #4]
    67dc:	ldr	r0, [pc, #2500]	; 71a8 <accel_post_startup+0xe74>
    67e0:	mov	r2, #1
    67e4:	strb	r2, [r0]
    67e8:	bl	0 <zend_accel_override_file_functions>
    67ec:	ldr	r0, [pc, #2428]	; 7170 <accel_post_startup+0xe3c>
    67f0:	mov	r2, #0
    67f4:	str	r2, [r0]
    67f8:	ldr	r1, [pc, #2404]	; 7164 <accel_post_startup+0xe30>
    67fc:	ldrb	r1, [r1]
    6800:	cmp	r1, #0
    6804:	beq	6848 <accel_post_startup+0x514>
    6808:	ldr	r1, [pc, #2456]	; 71a8 <accel_post_startup+0xe74>
    680c:	ldrb	r3, [r1]
    6810:	cmp	r3, #0
    6814:	beq	6848 <accel_post_startup+0x514>
    6818:	ldr	ip, [pc, #2524]	; 71fc <accel_post_startup+0xec8>
    681c:	ldr	r2, [ip]
    6820:	cmp	r2, #0
    6824:	beq	6848 <accel_post_startup+0x514>
    6828:	ldrb	r3, [r2]
    682c:	cmp	r3, #0
    6830:	beq	6848 <accel_post_startup+0x514>
    6834:	bl	0 <zend_accel_blacklist_init>
    6838:	ldr	r0, [pc, #2352]	; 7170 <accel_post_startup+0xe3c>
    683c:	ldr	r1, [pc, #2488]	; 71fc <accel_post_startup+0xec8>
    6840:	ldr	r1, [r1]
    6844:	bl	0 <zend_accel_blacklist_load>
    6848:	bl	0 <zend_optimizer_startup>
    684c:	ldr	r0, [pc, #2336]	; 7174 <accel_post_startup+0xe40>
    6850:	ldrb	r0, [r0]
    6854:	cmp	r0, #0
    6858:	bne	691c <accel_post_startup+0x5e8>
    685c:	ldr	r0, [pc, #2400]	; 71c4 <accel_post_startup+0xe90>
    6860:	ldr	r0, [r0]
    6864:	cmp	r0, #0
    6868:	beq	691c <accel_post_startup+0x5e8>
    686c:	ldr	r1, [pc, #2400]	; 71d4 <accel_post_startup+0xea0>
    6870:	ldr	r2, [r1]
    6874:	add	r2, r2, #1
    6878:	str	r2, [r1]
    687c:	ldr	r0, [pc, #2304]	; 7184 <accel_post_startup+0xe50>
    6880:	ldrb	r0, [r0]
    6884:	cmp	r0, #0
    6888:	beq	6894 <accel_post_startup+0x560>
    688c:	mov	r0, #0
    6890:	bl	0 <zend_accel_shared_protect>
    6894:	bl	0 <zend_shared_alloc_lock>
    6898:	ldr	r0, [pc, #2592]	; 72c0 <accel_post_startup+0xf8c>
    689c:	ldr	r0, [r0]
    68a0:	ldr	r0, [r0, #108]	; 0x6c
    68a4:	cmp	r0, #0
    68a8:	beq	68d0 <accel_post_startup+0x59c>
    68ac:	ldr	r0, [pc, #2264]	; 718c <accel_post_startup+0xe58>
    68b0:	mov	ip, #1
    68b4:	str	ip, [r0]
    68b8:	ldr	r0, [pc, #2548]	; 72b4 <accel_post_startup+0xf80>
    68bc:	bl	ab0 <accel_copy_permanent_strings>
    68c0:	ldr	ip, [pc, #2244]	; 718c <accel_post_startup+0xe58>
    68c4:	mov	r0, #0
    68c8:	str	r0, [ip]
    68cc:	b	68d8 <accel_post_startup+0x5a4>
    68d0:	ldr	r0, [pc, #2292]	; 71cc <accel_post_startup+0xe98>
    68d4:	bl	ab0 <accel_copy_permanent_strings>
    68d8:	bl	25c <accel_interned_strings_save_state>
    68dc:	bl	0 <zend_shared_alloc_unlock>
    68e0:	ldr	r0, [pc, #2204]	; 7184 <accel_post_startup+0xe50>
    68e4:	ldrb	r0, [r0]
    68e8:	cmp	r0, #0
    68ec:	beq	68f8 <accel_post_startup+0x5c4>
    68f0:	mov	r0, #1
    68f4:	bl	0 <zend_accel_shared_protect>
    68f8:	ldr	r0, [pc, #2260]	; 71d4 <accel_post_startup+0xea0>
    68fc:	ldr	ip, [r0]
    6900:	sub	r2, ip, #1
    6904:	str	r2, [r0]
    6908:	ldr	r0, [pc, #2420]	; 7284 <accel_post_startup+0xf50>
    690c:	ldr	r2, [r0]
    6910:	cmp	ip, r2
    6914:	bne	691c <accel_post_startup+0x5e8>
    6918:	bl	0 <zend_signal_handler_unblock>
    691c:	ldr	r0, [pc, #2112]	; 7164 <accel_post_startup+0xe30>
    6920:	ldrb	r0, [r0]
    6924:	cmp	r0, #0
    6928:	beq	9700 <accel_post_startup+0x33cc>
    692c:	ldr	r0, [pc, #2164]	; 71a8 <accel_post_startup+0xe74>
    6930:	ldrb	r0, [r0]
    6934:	cmp	r0, #0
    6938:	beq	9700 <accel_post_startup+0x33cc>
    693c:	ldr	r0, [pc, #2372]	; 7288 <accel_post_startup+0xf54>
    6940:	ldr	r3, [r0]
    6944:	cmp	r3, #0
    6948:	beq	96f8 <accel_post_startup+0x33c4>
    694c:	ldrb	r0, [r3]
    6950:	cmp	r0, #0
    6954:	beq	96f8 <accel_post_startup+0x33c4>
    6958:	mov	r1, #0
    695c:	str	r1, [sp, #56]	; 0x38
    6960:	mov	ip, #0
    6964:	str	ip, [sp, #76]	; 0x4c
    6968:	ldr	r2, [pc, #2192]	; 7200 <accel_post_startup+0xecc>
    696c:	ldr	r0, [r2]
    6970:	str	r0, [sp, #84]	; 0x54
    6974:	ldr	ip, [pc, #2320]	; 728c <accel_post_startup+0xf58>
    6978:	ldr	r0, [ip]
    697c:	str	r0, [sp, #80]	; 0x50
    6980:	ldr	r0, [pc, #2192]	; 7218 <accel_post_startup+0xee4>
    6984:	ldr	r0, [r0]
    6988:	str	r0, [sp, #96]	; 0x60
    698c:	ldr	r1, [pc, #2144]	; 71f4 <accel_post_startup+0xec0>
    6990:	ldr	r2, [r1]
    6994:	str	r2, [sp, #68]	; 0x44
    6998:	ldr	r2, [pc, #2096]	; 71d0 <accel_post_startup+0xe9c>
    699c:	ldr	r2, [r2]
    69a0:	str	r2, [sp, #92]	; 0x5c
    69a4:	ldr	ip, [pc, #2288]	; 729c <accel_post_startup+0xf68>
    69a8:	ldr	r0, [ip]
    69ac:	str	r0, [sp, #88]	; 0x58
    69b0:	ldr	ip, [pc, #2100]	; 71ec <accel_post_startup+0xeb8>
    69b4:	ldr	r1, [ip]
    69b8:	str	r1, [sp, #100]	; 0x64
    69bc:	ldr	r0, [pc, #1916]	; 7140 <accel_post_startup+0xe0c>
    69c0:	ldr	r2, [r0]
    69c4:	str	r2, [sp, #60]	; 0x3c
    69c8:	ldr	ip, [pc, #2168]	; 7248 <accel_post_startup+0xf14>
    69cc:	ldr	r1, [ip]
    69d0:	str	r1, [sp, #64]	; 0x40
    69d4:	ldr	ip, [pc, #1952]	; 717c <accel_post_startup+0xe48>
    69d8:	ldr	r3, [ip]
    69dc:	str	r3, [sp, #72]	; 0x48
    69e0:	ldr	r1, [pc, #2116]	; 722c <accel_post_startup+0xef8>
    69e4:	ldrb	r3, [r1]
    69e8:	str	r3, [sp, #52]	; 0x34
    69ec:	ldr	ip, [pc, #1920]	; 7174 <accel_post_startup+0xe40>
    69f0:	ldrb	r0, [ip]
    69f4:	cmp	r0, #0
    69f8:	beq	6a10 <accel_post_startup+0x6dc>
    69fc:	mov	r0, #2
    6a00:	ldr	r1, [pc, #1960]	; 71b0 <accel_post_startup+0xe7c>
    6a04:	bl	0 <zend_accel_error>
    6a08:	mov	r0, #0
    6a0c:	b	9704 <accel_post_startup+0x33d0>
    6a10:	bl	0 <zend_shared_alloc_lock>
    6a14:	ldr	r3, [pc, #2212]	; 72c0 <accel_post_startup+0xf8c>
    6a18:	ldr	r2, [r3]
    6a1c:	ldr	ip, [r2, #72]	; 0x48
    6a20:	cmp	ip, #0
    6a24:	beq	6a38 <accel_post_startup+0x704>
    6a28:	bl	a998 <preload_load>
    6a2c:	bl	0 <zend_shared_alloc_unlock>
    6a30:	mov	r0, #0
    6a34:	b	9704 <accel_post_startup+0x33d0>
    6a38:	bl	0 <geteuid>
    6a3c:	cmp	r0, #0
    6a40:	bne	6be4 <accel_post_startup+0x8b0>
    6a44:	ldr	r0, [pc, #2116]	; 7290 <accel_post_startup+0xf5c>
    6a48:	ldr	r0, [r0]
    6a4c:	cmp	r0, #0
    6a50:	beq	6bcc <accel_post_startup+0x898>
    6a54:	ldrb	r1, [r0]
    6a58:	cmp	r1, #0
    6a5c:	beq	6bcc <accel_post_startup+0x898>
    6a60:	bl	0 <getpwnam>
    6a64:	mov	r5, r0
    6a68:	cmp	r5, #0
    6a6c:	bne	6a90 <accel_post_startup+0x75c>
    6a70:	bl	0 <zend_shared_alloc_unlock>
    6a74:	mov	r0, #0
    6a78:	ldr	r1, [pc, #1912]	; 71f8 <accel_post_startup+0xec4>
    6a7c:	ldr	ip, [pc, #2060]	; 7290 <accel_post_startup+0xf5c>
    6a80:	ldr	r2, [ip]
    6a84:	bl	0 <zend_accel_error>
    6a88:	mvn	r0, #0
    6a8c:	b	9704 <accel_post_startup+0x33d0>
    6a90:	bl	0 <fork>
    6a94:	mov	r4, r0
    6a98:	cmn	r4, #1
    6a9c:	beq	6bb4 <accel_post_startup+0x880>
    6aa0:	cmp	r4, #0
    6aa4:	bne	6b34 <accel_post_startup+0x800>
    6aa8:	ldr	r0, [r5, #12]
    6aac:	bl	0 <setgid>
    6ab0:	cmp	r0, #0
    6ab4:	bge	6ad0 <accel_post_startup+0x79c>
    6ab8:	mov	r0, #2
    6abc:	ldr	r1, [pc, #1936]	; 7254 <accel_post_startup+0xf20>
    6ac0:	ldr	r2, [r5, #12]
    6ac4:	bl	0 <zend_accel_error>
    6ac8:	mov	r0, #1
    6acc:	bl	0 <exit>
    6ad0:	ldr	r0, [r5]
    6ad4:	ldr	r1, [r5, #12]
    6ad8:	bl	0 <initgroups>
    6adc:	cmp	r0, #0
    6ae0:	bge	6b00 <accel_post_startup+0x7cc>
    6ae4:	mov	r0, #2
    6ae8:	ldr	r1, [pc, #1924]	; 7274 <accel_post_startup+0xf40>
    6aec:	ldr	r2, [r5]
    6af0:	ldr	r3, [r5, #8]
    6af4:	bl	0 <zend_accel_error>
    6af8:	mov	r0, #1
    6afc:	bl	0 <exit>
    6b00:	ldr	r0, [r5, #8]
    6b04:	bl	0 <setuid>
    6b08:	cmp	r0, #0
    6b0c:	bge	6b28 <accel_post_startup+0x7f4>
    6b10:	mov	r0, #2
    6b14:	ldr	r1, [pc, #1728]	; 71dc <accel_post_startup+0xea8>
    6b18:	ldr	r2, [r5, #8]
    6b1c:	bl	0 <zend_accel_error>
    6b20:	mov	r0, #1
    6b24:	bl	0 <exit>
    6b28:	mov	r0, #1
    6b2c:	str	r0, [sp, #56]	; 0x38
    6b30:	b	6c0c <accel_post_startup+0x8d8>
    6b34:	add	r1, sp, #136	; 0x88
    6b38:	mov	r2, #0
    6b3c:	mov	r0, r4
    6b40:	bl	0 <waitpid>
    6b44:	cmp	r0, #0
    6b48:	bge	6b68 <accel_post_startup+0x834>
    6b4c:	bl	0 <zend_shared_alloc_unlock>
    6b50:	mov	r0, #0
    6b54:	ldr	r1, [pc, #1820]	; 7278 <accel_post_startup+0xf44>
    6b58:	mov	r2, r4
    6b5c:	bl	0 <zend_accel_error>
    6b60:	mvn	r0, #0
    6b64:	b	9704 <accel_post_startup+0x33d0>
    6b68:	ldr	r0, [pc, #1872]	; 72c0 <accel_post_startup+0xf8c>
    6b6c:	ldr	r0, [r0]
    6b70:	ldr	r0, [r0, #72]	; 0x48
    6b74:	cmp	r0, #0
    6b78:	beq	6b80 <accel_post_startup+0x84c>
    6b7c:	bl	a998 <preload_load>
    6b80:	bl	0 <zend_shared_alloc_unlock>
    6b84:	ldr	ip, [sp, #136]	; 0x88
    6b88:	and	r2, ip, #127	; 0x7f
    6b8c:	cmp	r2, #0
    6b90:	bne	6bac <accel_post_startup+0x878>
    6b94:	and	r0, ip, #65280	; 0xff00
    6b98:	asr	r0, r0, #8
    6b9c:	cmp	r0, #0
    6ba0:	bne	6bac <accel_post_startup+0x878>
    6ba4:	mov	r0, #0
    6ba8:	b	9704 <accel_post_startup+0x33d0>
    6bac:	mvn	r0, #0
    6bb0:	b	9704 <accel_post_startup+0x33d0>
    6bb4:	bl	0 <zend_shared_alloc_unlock>
    6bb8:	mov	r0, #0
    6bbc:	ldr	r1, [pc, #1564]	; 71e0 <accel_post_startup+0xeac>
    6bc0:	bl	0 <zend_accel_error>
    6bc4:	mvn	r0, #0
    6bc8:	b	9704 <accel_post_startup+0x33d0>
    6bcc:	bl	0 <zend_shared_alloc_unlock>
    6bd0:	mov	r0, #0
    6bd4:	ldr	r1, [pc, #1408]	; 715c <accel_post_startup+0xe28>
    6bd8:	bl	0 <zend_accel_error>
    6bdc:	mvn	r0, #0
    6be0:	b	9704 <accel_post_startup+0x33d0>
    6be4:	ldr	r2, [pc, #1700]	; 7290 <accel_post_startup+0xf5c>
    6be8:	ldr	r3, [r2]
    6bec:	cmp	r3, #0
    6bf0:	beq	6c0c <accel_post_startup+0x8d8>
    6bf4:	ldrb	r1, [r3]
    6bf8:	cmp	r1, #0
    6bfc:	beq	6c0c <accel_post_startup+0x8d8>
    6c00:	mov	r0, #2
    6c04:	ldr	r1, [pc, #1692]	; 72a8 <accel_post_startup+0xf74>
    6c08:	bl	0 <zend_accel_error>
    6c0c:	ldr	r1, [pc, #1516]	; 7200 <accel_post_startup+0xecc>
    6c10:	mov	r0, #0
    6c14:	str	r0, [r1]
    6c18:	ldr	r0, [pc, #1644]	; 728c <accel_post_startup+0xf58>
    6c1c:	mov	r2, #0
    6c20:	str	r2, [r0]
    6c24:	ldr	r3, [pc, #1516]	; 7218 <accel_post_startup+0xee4>
    6c28:	mov	r1, #0
    6c2c:	str	r1, [r3]
    6c30:	ldr	ip, [pc, #1468]	; 71f4 <accel_post_startup+0xec0>
    6c34:	ldr	r2, [pc, #1600]	; 727c <accel_post_startup+0xf48>
    6c38:	str	r2, [ip]
    6c3c:	ldr	ip, [pc, #1420]	; 71d0 <accel_post_startup+0xe9c>
    6c40:	ldr	r1, [pc, #1624]	; 72a0 <accel_post_startup+0xf6c>
    6c44:	str	r1, [ip]
    6c48:	ldr	r1, [pc, #1612]	; 729c <accel_post_startup+0xf68>
    6c4c:	ldr	r3, [pc, #1540]	; 7258 <accel_post_startup+0xf24>
    6c50:	str	r3, [r1]
    6c54:	ldr	r1, [pc, #1424]	; 71ec <accel_post_startup+0xeb8>
    6c58:	mov	r2, #0
    6c5c:	str	r2, [r1]
    6c60:	ldr	r0, [pc, #1240]	; 7140 <accel_post_startup+0xe0c>
    6c64:	ldr	ip, [pc, #1460]	; 7220 <accel_post_startup+0xeec>
    6c68:	str	ip, [r0]
    6c6c:	ldr	r3, [pc, #1492]	; 7248 <accel_post_startup+0xf14>
    6c70:	ldr	r1, [pc, #1304]	; 7190 <accel_post_startup+0xe5c>
    6c74:	str	r1, [r3]
    6c78:	ldr	r3, [sp, #56]	; 0x38
    6c7c:	cmp	r3, #0
    6c80:	beq	6c94 <accel_post_startup+0x960>
    6c84:	ldr	r1, [pc, #1264]	; 717c <accel_post_startup+0xe48>
    6c88:	ldr	r2, [r1]
    6c8c:	orr	ip, r2, #131072	; 0x20000
    6c90:	str	ip, [r1]
    6c94:	ldr	ip, [pc, #1248]	; 717c <accel_post_startup+0xe48>
    6c98:	ldr	r3, [ip]
    6c9c:	orr	r3, r3, #32768	; 0x8000
    6ca0:	orr	r2, r3, #4
    6ca4:	orr	r1, r2, #16
    6ca8:	orr	r0, r1, #32
    6cac:	orr	r3, r0, #64	; 0x40
    6cb0:	orr	r0, r3, #8192	; 0x2000
    6cb4:	str	r0, [ip]
    6cb8:	mov	r0, #1
    6cbc:	bl	0 <zend_interned_strings_switch_storage>
    6cc0:	ldr	ip, [pc, #1380]	; 722c <accel_post_startup+0xef8>
    6cc4:	mov	r0, #0
    6cc8:	strb	r0, [ip]
    6ccc:	ldr	r1, [pc, #1500]	; 72b0 <accel_post_startup+0xf7c>
    6cd0:	ldr	r4, [r1]
    6cd4:	mov	ip, #0
    6cd8:	str	ip, [r1]
    6cdc:	bl	0 <php_request_startup>
    6ce0:	ldr	r1, [pc, #1480]	; 72b0 <accel_post_startup+0xf7c>
    6ce4:	str	r4, [r1]
    6ce8:	cmp	r0, #0
    6cec:	bne	9638 <accel_post_startup+0x3304>
    6cf0:	ldr	r0, [pc, #1472]	; 72b8 <accel_post_startup+0xf84>
    6cf4:	mov	r2, #1
    6cf8:	strb	r2, [r0]
    6cfc:	ldr	r2, [pc, #1292]	; 7210 <accel_post_startup+0xedc>
    6d00:	mov	r3, #1
    6d04:	strb	r3, [r2]
    6d08:	mov	r0, #0
    6d0c:	bl	0 <php_output_set_status>
    6d10:	ldr	r0, [pc, #1104]	; 7168 <accel_post_startup+0xe34>
    6d14:	mov	r2, #0
    6d18:	str	r2, [r0]
    6d1c:	bl	0 <sapi_get_request_time>
    6d20:	ldr	r0, [pc, #1200]	; 71d8 <accel_post_startup+0xea4>
    6d24:	vcvt.s32.f64	s12, d0
    6d28:	vmov	r1, s12
    6d2c:	str	r1, [r0]
    6d30:	ldr	r3, [pc, #1260]	; 7224 <accel_post_startup+0xef0>
    6d34:	mov	ip, #0
    6d38:	str	ip, [r3]
    6d3c:	ldr	r0, [pc, #1136]	; 71b4 <accel_post_startup+0xe80>
    6d40:	mov	r3, #0
    6d44:	str	r3, [r0]
    6d48:	ldr	ip, [pc, #1172]	; 71e4 <accel_post_startup+0xeb0>
    6d4c:	mov	r1, #0
    6d50:	str	r1, [ip]
    6d54:	ldr	r2, [pc, #1192]	; 7204 <accel_post_startup+0xed0>
    6d58:	mov	ip, #1
    6d5c:	str	ip, [r2]
    6d60:	ldr	r0, [pc, #1216]	; 7228 <accel_post_startup+0xef4>
    6d64:	mov	ip, #0
    6d68:	str	ip, [r0]
    6d6c:	ldr	r0, [pc, #996]	; 7158 <accel_post_startup+0xe24>
    6d70:	mov	r2, #0
    6d74:	str	r2, [r0]
    6d78:	ldr	r3, [pc, #1200]	; 7230 <accel_post_startup+0xefc>
    6d7c:	mov	ip, #1
    6d80:	str	ip, [r3]
    6d84:	ldr	r0, [pc, #1276]	; 7288 <accel_post_startup+0xf54>
    6d88:	ldr	r1, [r0]
    6d8c:	ldr	ip, [pc, #976]	; 7164 <accel_post_startup+0xe30>
    6d90:	mov	r2, #0
    6d94:	strb	r2, [ip]
    6d98:	ldr	r3, [pc, #1140]	; 7214 <accel_post_startup+0xee0>
    6d9c:	mov	ip, #0
    6da0:	strb	ip, [r3]
    6da4:	ldr	r0, [pc, #1116]	; 7208 <accel_post_startup+0xed4>
    6da8:	ldr	ip, [r0]
    6dac:	str	ip, [sp, #40]	; 0x28
    6db0:	mov	ip, #0
    6db4:	str	ip, [r0]
    6db8:	ldr	r0, [pc, #1252]	; 72a4 <accel_post_startup+0xf70>
    6dbc:	ldr	r3, [pc, #984]	; 719c <accel_post_startup+0xe68>
    6dc0:	ldr	r2, [r3]
    6dc4:	str	r2, [r0]
    6dc8:	ldr	r2, [pc, #1048]	; 71e8 <accel_post_startup+0xeb4>
    6dcc:	str	r2, [r3]
    6dd0:	ldr	r3, [pc, #1212]	; 7294 <accel_post_startup+0xf60>
    6dd4:	ldr	fp, [r3]
    6dd8:	add	r0, sp, #144	; 0x90
    6ddc:	bl	0 <zend_stream_init_filename>
    6de0:	bl	0 <_emalloc_48>
    6de4:	ldr	r2, [pc, #940]	; 7198 <accel_post_startup+0xe64>
    6de8:	str	r0, [r2]
    6dec:	mov	r1, #0
    6df0:	mov	r2, #0
    6df4:	mov	r3, #0
    6df8:	bl	0 <_zend_hash_init>
    6dfc:	ldr	r0, [pc, #1120]	; 7264 <accel_post_startup+0xf30>
    6e00:	ldr	r3, [r0]
    6e04:	str	r3, [sp, #36]	; 0x24
    6e08:	add	r2, sp, #240	; 0xf0
    6e0c:	str	r2, [r0]
    6e10:	add	r0, sp, #240	; 0xf0
    6e14:	bl	0 <_setjmp>
    6e18:	cmp	r0, #0
    6e1c:	bne	72fc <accel_post_startup+0xfc8>
    6e20:	mov	r0, #0
    6e24:	str	r0, [sp, #48]	; 0x30
    6e28:	ldr	r1, [pc, #920]	; 71c8 <accel_post_startup+0xe94>
    6e2c:	ldr	ip, [r1]
    6e30:	add	r0, sp, #144	; 0x90
    6e34:	mov	r1, #8
    6e38:	blx	ip
    6e3c:	mov	r4, r0
    6e40:	ldr	r1, [sp, #168]	; 0xa8
    6e44:	cmp	r1, #0
    6e48:	beq	6e54 <accel_post_startup+0xb20>
    6e4c:	ldr	r0, [pc, #1016]	; 724c <accel_post_startup+0xf18>
    6e50:	bl	0 <zend_hash_add_empty_element>
    6e54:	add	r0, sp, #144	; 0x90
    6e58:	bl	0 <zend_destroy_file_handle>
    6e5c:	cmp	r4, #0
    6e60:	beq	72e4 <accel_post_startup+0xfb0>
    6e64:	mov	r1, #0
    6e68:	mov	r0, r4
    6e6c:	bl	0 <zend_execute>
    6e70:	bl	0 <zend_exception_restore>
    6e74:	ldr	r0, [pc, #836]	; 71c0 <accel_post_startup+0xe8c>
    6e78:	ldr	r2, [r0]
    6e7c:	cmp	r2, #0
    6e80:	beq	6ecc <accel_post_startup+0xb98>
    6e84:	ldr	r2, [pc, #988]	; 7268 <accel_post_startup+0xf34>
    6e88:	ldrb	r1, [r2, #8]
    6e8c:	and	r1, r1, #255	; 0xff
    6e90:	cmp	r1, #0
    6e94:	beq	6e9c <accel_post_startup+0xb68>
    6e98:	bl	0 <zend_user_exception_handler>
    6e9c:	ldr	ip, [pc, #796]	; 71c0 <accel_post_startup+0xe8c>
    6ea0:	ldr	r1, [ip]
    6ea4:	cmp	r1, #0
    6ea8:	beq	6ecc <accel_post_startup+0xb98>
    6eac:	mov	r0, r1
    6eb0:	mov	r1, #1
    6eb4:	bl	0 <zend_exception_error>
    6eb8:	ldr	r3, [pc, #760]	; 71b8 <accel_post_startup+0xe84>
    6ebc:	mov	ip, #1
    6ec0:	strb	ip, [r3]
    6ec4:	mvn	r2, #0
    6ec8:	str	r2, [sp, #48]	; 0x30
    6ecc:	mov	r0, r4
    6ed0:	bl	0 <destroy_op_array>
    6ed4:	mov	r0, r4
    6ed8:	bl	0 <_efree_160>
    6edc:	ldr	r1, [sp, #48]	; 0x30
    6ee0:	cmp	r1, #0
    6ee4:	bne	7304 <accel_post_startup+0xfd0>
    6ee8:	mov	r1, #0
    6eec:	str	r1, [sp, #24]
    6ef0:	ldr	r2, [pc, #928]	; 7298 <accel_post_startup+0xf64>
    6ef4:	ldr	r3, [r2]
    6ef8:	ldr	ip, [r3, #24]
    6efc:	str	ip, [sp, #32]
    6f00:	ldr	r0, [sp, #24]
    6f04:	cmp	ip, r0
    6f08:	beq	7304 <accel_post_startup+0xfd0>
    6f0c:	ldr	r5, [r3, #20]
    6f10:	ldr	r3, [r3, #16]
    6f14:	lsl	r1, r5, #4
    6f18:	add	ip, r1, r5, lsl #3
    6f1c:	add	sl, r3, ip
    6f20:	cmp	r5, #0
    6f24:	bls	72d8 <accel_post_startup+0xfa4>
    6f28:	sub	sl, sl, #24
    6f2c:	mov	r2, sl
    6f30:	ldrb	r3, [r2, #8]
    6f34:	and	r3, r3, #255	; 0xff
    6f38:	cmp	r3, #0
    6f3c:	beq	72d0 <accel_post_startup+0xf9c>
    6f40:	ldr	r9, [sl]
    6f44:	mov	r1, #1
    6f48:	ldr	r3, [sp, #24]
    6f4c:	cmp	r5, r3
    6f50:	moveq	r0, #1
    6f54:	movne	r0, #0
    6f58:	ldrb	r2, [r9]
    6f5c:	cmp	r2, #1
    6f60:	moveq	r0, r1
    6f64:	movne	r0, r0
    6f68:	cmp	r0, #0
    6f6c:	bne	72d8 <accel_post_startup+0xfa4>
    6f70:	ldr	ip, [r9, #16]
    6f74:	and	r3, ip, #8
    6f78:	cmp	r3, #0
    6f7c:	beq	72d0 <accel_post_startup+0xf9c>
    6f80:	and	r3, ip, #4096	; 0x1000
    6f84:	cmp	r3, #0
    6f88:	bne	6fe0 <accel_post_startup+0xcac>
    6f8c:	ldr	r2, [pc, #720]	; 7264 <accel_post_startup+0xf30>
    6f90:	ldr	r4, [r2]
    6f94:	add	r0, sp, #1024	; 0x400
    6f98:	str	r0, [r2]
    6f9c:	add	r0, sp, #1024	; 0x400
    6fa0:	bl	0 <_setjmp>
    6fa4:	cmp	r0, #0
    6fa8:	bne	6fb8 <accel_post_startup+0xc84>
    6fac:	mov	r0, r9
    6fb0:	bl	0 <zend_update_class_constants>
    6fb4:	b	6fbc <accel_post_startup+0xc88>
    6fb8:	mvn	r0, #0
    6fbc:	ldr	r3, [pc, #672]	; 7264 <accel_post_startup+0xf30>
    6fc0:	str	r4, [r3]
    6fc4:	cmn	r0, #1
    6fc8:	bne	6fe0 <accel_post_startup+0xcac>
    6fcc:	mov	r0, #1
    6fd0:	ldr	r1, [pc, #740]	; 72bc <accel_post_startup+0xf88>
    6fd4:	ldr	r3, [r9, #4]
    6fd8:	add	r2, r3, #16
    6fdc:	bl	0 <zend_error_noreturn>
    6fe0:	ldr	r0, [r9, #16]
    6fe4:	and	r1, r0, #131072	; 0x20000
    6fe8:	cmp	r1, #0
    6fec:	bne	72d0 <accel_post_startup+0xf9c>
    6ff0:	and	r1, r0, #256	; 0x100
    6ff4:	cmp	r1, #0
    6ff8:	beq	72c4 <accel_post_startup+0xf90>
    6ffc:	ldr	r8, [r9, #100]	; 0x64
    7000:	ldr	r1, [r9, #104]	; 0x68
    7004:	lsl	ip, r1, #4
    7008:	add	r0, ip, r1, lsl #3
    700c:	add	r2, r8, r0
    7010:	str	r2, [sp, #28]
    7014:	ldr	r1, [sp, #28]
    7018:	cmp	r8, r1
    701c:	beq	72c4 <accel_post_startup+0xf90>
    7020:	mov	r3, r8
    7024:	ldrb	r3, [r3, #8]
    7028:	and	ip, r3, #255	; 0xff
    702c:	cmp	ip, #0
    7030:	beq	7130 <accel_post_startup+0xdfc>
    7034:	ldr	r4, [r8]
    7038:	ldr	r3, [r4, #20]
    703c:	movw	lr, #1023	; 0x3ff
    7040:	cmp	r3, lr
    7044:	bls	7130 <accel_post_startup+0xdfc>
    7048:	and	r0, r3, #2
    704c:	cmp	r0, #0
    7050:	bne	7130 <accel_post_startup+0xdfc>
    7054:	bic	r6, r3, #3
    7058:	ldr	r1, [r6, #12]
    705c:	cmp	r1, #4
    7060:	bne	7084 <accel_post_startup+0xd50>
    7064:	add	r0, r6, #16
    7068:	ldr	r2, [pc, #528]	; 7280 <accel_post_startup+0xf4c>
    706c:	mov	r3, #4
    7070:	bl	0 <zend_binary_strcasecmp>
    7074:	cmp	r0, #0
    7078:	bne	7084 <accel_post_startup+0xd50>
    707c:	ldr	r7, [r4, #16]
    7080:	b	70c0 <accel_post_startup+0xd8c>
    7084:	ldr	r1, [r6, #12]
    7088:	cmp	r1, #6
    708c:	bne	70b4 <accel_post_startup+0xd80>
    7090:	add	r0, r6, #16
    7094:	ldr	r2, [pc, #436]	; 7250 <accel_post_startup+0xf1c>
    7098:	mov	r3, #6
    709c:	bl	0 <zend_binary_strcasecmp>
    70a0:	cmp	r0, #0
    70a4:	bne	70b4 <accel_post_startup+0xd80>
    70a8:	ldr	r1, [r4, #16]
    70ac:	ldr	r7, [r1, #8]
    70b0:	b	70c0 <accel_post_startup+0xd8c>
    70b4:	mov	r0, r6
    70b8:	bl	0 <zend_lookup_class>
    70bc:	mov	r7, r0
    70c0:	cmp	r7, #0
    70c4:	bne	710c <accel_post_startup+0xdd8>
    70c8:	ldr	r0, [r4, #8]
    70cc:	add	r1, sp, #1024	; 0x400
    70d0:	add	r2, sp, #4
    70d4:	add	r2, r2, #1024	; 0x400
    70d8:	mov	r3, #0
    70dc:	bl	0 <zend_unmangle_property_name_ex>
    70e0:	ldr	r2, [sp, #1028]	; 0x404
    70e4:	mov	r0, #1
    70e8:	ldr	r1, [pc, #256]	; 71f0 <accel_post_startup+0xebc>
    70ec:	add	r3, r6, #16
    70f0:	ldr	ip, [r4, #16]
    70f4:	ldr	ip, [ip, #4]
    70f8:	add	r6, ip, #16
    70fc:	str	r2, [sp]
    7100:	mov	r2, r3
    7104:	mov	r3, r6
    7108:	bl	0 <zend_error_noreturn>
    710c:	mov	ip, #3
    7110:	mov	r3, #2
    7114:	ldr	r0, [r4, #20]
    7118:	and	r2, r0, #1
    711c:	cmp	r2, #0
    7120:	movne	r0, ip
    7124:	moveq	r0, r3
    7128:	orr	ip, r7, r0
    712c:	str	ip, [r4, #20]
    7130:	add	r8, r8, #24
    7134:	b	7014 <accel_post_startup+0xce0>
    7138:	.word	0x00000020
    713c:	.word	0x00000090
    7140:	.word	0x00000018
    7144:	.word	0x00000000
    7148:	.word	0x00000008
    714c:	.word	0x00000000
    7150:	.word	0x00000020
    7154:	.word	0x0000000c
    7158:	.word	0x000000f0
    715c:	.word	0x000001dd
    7160:	.word	0x00000000
    7164:	.word	0x00000004
    7168:	.word	0x000000f8
	...
    7178:	.word	0x0000001c
    717c:	.word	0x0000008c
    7180:	.word	0x00000000
    7184:	.word	0x00000059
	...
    7198:	.word	0x0000004c
    719c:	.word	0x00000000
    71a0:	.word	0x00000004
    71a4:	.word	0x000004f5
    71a8:	.word	0x00000000
    71ac:	.word	0x00000210
    71b0:	.word	0x00000a83
    71b4:	.word	0x00000148
    71b8:	.word	0x0000005b
    71bc:	.word	0x00000100
    71c0:	.word	0x0000022c
    71c4:	.word	0x00000080
	...
    71d0:	.word	0x00000030
    71d4:	.word	0x00000000
    71d8:	.word	0x000000fc
    71dc:	.word	0x0000079b
    71e0:	.word	0x0000095b
    71e4:	.word	0x000000e8
    71e8:	.word	0x00000000
    71ec:	.word	0x00000024
    71f0:	.word	0x0000061d
    71f4:	.word	0x0000002c
    71f8:	.word	0x0000051f
    71fc:	.word	0x00000048
    7200:	.word	0x00000010
    7204:	.word	0x000000ec
    7208:	.word	0x0000003c
    720c:	.word	0x00000000
    7210:	.word	0x00000025
    7214:	.word	0x00000006
    7218:	.word	0x00000040
    721c:	.word	0x00000747
    7220:	.word	0x00000000
    7224:	.word	0x00000144
    7228:	.word	0x000000a0
    722c:	.word	0x00000011
    7230:	.word	0x000000f4
    7234:	.word	0x00000038
    7238:	.word	0x000000a4
    723c:	.word	0x0000008c
    7240:	.word	0x00000b02
    7244:	.word	0x00000000
    7248:	.word	0x0000001c
    724c:	.word	0x000000d4
    7250:	.word	0x0000027f
    7254:	.word	0x000009dc
	...
    7264:	.word	0x00000100
    7268:	.word	0x000001c0
    726c:	.word	0x00000617
    7270:	.word	0x0000068c
    7274:	.word	0x000002c6
    7278:	.word	0x000007d9
    727c:	.word	0x00000000
    7280:	.word	0x0000005c
    7284:	.word	0x00000004
    7288:	.word	0x00000094
    728c:	.word	0x00000014
    7290:	.word	0x00000098
    7294:	.word	0x0000015c
    7298:	.word	0x00000110
    729c:	.word	0x00000034
    72a0:	.word	0x00000000
    72a4:	.word	0x00000024
    72a8:	.word	0x00000319
    72ac:	.word	0x0000003c
    72b0:	.word	0x00000104
    72b4:	.word	0x00000000
    72b8:	.word	0x00000089
    72bc:	.word	0x000005b4
    72c0:	.word	0x00000000
    72c4:	ldr	ip, [r9, #16]
    72c8:	orr	ip, ip, #131072	; 0x20000
    72cc:	str	ip, [r9, #16]
    72d0:	sub	r5, r5, #1
    72d4:	b	6f20 <accel_post_startup+0xbec>
    72d8:	ldr	ip, [sp, #32]
    72dc:	str	ip, [sp, #24]
    72e0:	b	6ef0 <accel_post_startup+0xbbc>
    72e4:	ldr	r1, [pc, #3764]	; 81a0 <accel_post_startup+0x1e6c>
    72e8:	mov	r2, #1
    72ec:	strb	r2, [r1]
    72f0:	mvn	r2, #0
    72f4:	str	r2, [sp, #48]	; 0x30
    72f8:	b	7304 <accel_post_startup+0xfd0>
    72fc:	mvn	r3, #0
    7300:	str	r3, [sp, #48]	; 0x30
    7304:	ldr	r0, [pc, #3800]	; 81e4 <accel_post_startup+0x1eb0>
    7308:	ldr	r1, [sp, #36]	; 0x24
    730c:	str	r1, [r0]
    7310:	ldr	ip, [pc, #3740]	; 81b4 <accel_post_startup+0x1e80>
    7314:	ldr	r0, [sp, #40]	; 0x28
    7318:	str	r0, [ip]
    731c:	ldr	r1, [pc, #3696]	; 8194 <accel_post_startup+0x1e60>
    7320:	ldr	ip, [pc, #3792]	; 81f8 <accel_post_startup+0x1ec4>
    7324:	ldr	r2, [ip]
    7328:	str	r2, [r1]
    732c:	ldr	r3, [pc, #3668]	; 8188 <accel_post_startup+0x1e54>
    7330:	mov	ip, #1
    7334:	strb	ip, [r3]
    7338:	add	r0, sp, #144	; 0x90
    733c:	bl	0 <zend_destroy_file_handle>
    7340:	ldr	r2, [sp, #48]	; 0x30
    7344:	cmp	r2, #0
    7348:	bne	95c4 <accel_post_startup+0x3290>
    734c:	ldr	ip, [pc, #3668]	; 81a8 <accel_post_startup+0x1e74>
    7350:	ldrb	r2, [ip]
    7354:	cmp	r2, #0
    7358:	bne	7368 <accel_post_startup+0x1034>
    735c:	bl	2e58 <zend_accel_get_auto_globals_no_jit>
    7360:	str	r0, [sp, #40]	; 0x28
    7364:	b	7370 <accel_post_startup+0x103c>
    7368:	bl	2dcc <zend_accel_get_auto_globals>
    736c:	str	r0, [sp, #40]	; 0x28
    7370:	ldr	ip, [pc, #3604]	; 818c <accel_post_startup+0x1e58>
    7374:	ldrb	r3, [ip]
    7378:	orr	r0, r3, #1
    737c:	strb	r0, [ip]
    7380:	bl	0 <php_call_shutdown_functions>
    7384:	bl	0 <zend_call_destructors>
    7388:	bl	0 <php_free_shutdown_functions>
    738c:	ldr	r0, [pc, #3668]	; 81e8 <accel_post_startup+0x1eb4>
    7390:	bl	0 <zend_hash_graceful_reverse_destroy>
    7394:	ldr	r0, [pc, #3660]	; 81e8 <accel_post_startup+0x1eb4>
    7398:	mov	r1, #0
    739c:	ldr	r2, [pc, #3628]	; 81d0 <accel_post_startup+0x1e9c>
    73a0:	mov	r3, #0
    73a4:	bl	0 <_zend_hash_init>
    73a8:	ldr	r0, [pc, #3564]	; 819c <accel_post_startup+0x1e68>
    73ac:	mov	r1, #1
    73b0:	bl	0 <zend_objects_store_free_object_storage>
    73b4:	ldr	r0, [pc, #3616]	; 81dc <accel_post_startup+0x1ea8>
    73b8:	ldr	r3, [r0]
    73bc:	ldr	r4, [r3, #20]
    73c0:	ldr	r1, [r3, #16]
    73c4:	lsl	r2, r4, #4
    73c8:	add	r0, r2, r4, lsl #3
    73cc:	add	r6, r1, r0
    73d0:	cmp	r4, #0
    73d4:	bls	7484 <accel_post_startup+0x1150>
    73d8:	sub	r6, r6, #24
    73dc:	mov	r0, r6
    73e0:	ldrb	r0, [r0, #8]
    73e4:	and	r0, r0, #255	; 0xff
    73e8:	cmp	r0, #0
    73ec:	beq	747c <accel_post_startup+0x1148>
    73f0:	mov	r3, r6
    73f4:	ldr	r5, [r3]
    73f8:	ldrb	r0, [r5]
    73fc:	cmp	r0, #1
    7400:	beq	7484 <accel_post_startup+0x1150>
    7404:	ldr	r2, [r5, #60]	; 0x3c
    7408:	cmp	r2, #0
    740c:	beq	747c <accel_post_startup+0x1148>
    7410:	ldr	r1, [r5, #56]	; 0x38
    7414:	and	r0, r1, #1
    7418:	cmp	r0, #0
    741c:	beq	7438 <accel_post_startup+0x1104>
    7420:	ldr	r2, [pc, #3472]	; 81b8 <accel_post_startup+0x1e84>
    7424:	ldr	r2, [r2]
    7428:	add	r3, r2, r1
    742c:	sub	lr, r3, #4096	; 0x1000
    7430:	ldr	r0, [lr, #4095]	; 0xfff
    7434:	b	743c <accel_post_startup+0x1108>
    7438:	ldr	r0, [r1]
    743c:	cmp	r0, #0
    7440:	beq	747c <accel_post_startup+0x1148>
    7444:	bl	0 <zend_array_destroy>
    7448:	ldr	r1, [r5, #56]	; 0x38
    744c:	and	r3, r1, #1
    7450:	cmp	r3, #0
    7454:	beq	7474 <accel_post_startup+0x1140>
    7458:	ldr	r0, [pc, #3416]	; 81b8 <accel_post_startup+0x1e84>
    745c:	ldr	ip, [r0]
    7460:	add	r3, ip, r1
    7464:	mov	r2, #0
    7468:	sub	lr, r3, #4096	; 0x1000
    746c:	str	r2, [lr, #4095]	; 0xfff
    7470:	b	747c <accel_post_startup+0x1148>
    7474:	mov	ip, #0
    7478:	str	ip, [r1]
    747c:	sub	r4, r4, #1
    7480:	b	73d0 <accel_post_startup+0x109c>
    7484:	ldr	ip, [pc, #3424]	; 81ec <accel_post_startup+0x1eb8>
    7488:	ldr	r1, [ip]
    748c:	ldr	r4, [r1, #20]
    7490:	ldr	ip, [r1, #16]
    7494:	lsl	r0, r4, #4
    7498:	add	r0, r0, r4, lsl #3
    749c:	add	r8, ip, r0
    74a0:	cmp	r4, #0
    74a4:	bls	7624 <accel_post_startup+0x12f0>
    74a8:	sub	r8, r8, #24
    74ac:	mov	r2, r8
    74b0:	ldrb	r2, [r2, #8]
    74b4:	and	r2, r2, #255	; 0xff
    74b8:	cmp	r2, #0
    74bc:	beq	761c <accel_post_startup+0x12e8>
    74c0:	mov	r0, r8
    74c4:	ldr	r6, [r0]
    74c8:	ldrb	r1, [r6]
    74cc:	cmp	r1, #1
    74d0:	beq	7624 <accel_post_startup+0x12f0>
    74d4:	ldr	r1, [r6, #24]
    74d8:	cmp	r1, #0
    74dc:	beq	7538 <accel_post_startup+0x1204>
    74e0:	mov	r0, r6
    74e4:	bl	0 <zend_cleanup_internal_class_data>
    74e8:	ldr	r1, [r6, #16]
    74ec:	and	r1, r1, #4096	; 0x1000
    74f0:	cmp	r1, #0
    74f4:	beq	7538 <accel_post_startup+0x1204>
    74f8:	mov	r1, #0
    74fc:	ldr	r0, [r6, #24]
    7500:	cmp	r1, r0
    7504:	bge	7538 <accel_post_startup+0x1204>
    7508:	ldr	ip, [r6, #32]
    750c:	add	r2, ip, r1, lsl #4
    7510:	ldrb	r2, [r2, #8]
    7514:	and	ip, r2, #255	; 0xff
    7518:	cmp	ip, #11
    751c:	bne	7530 <accel_post_startup+0x11fc>
    7520:	ldr	r3, [r6, #16]
    7524:	bic	r0, r3, #4096	; 0x1000
    7528:	str	r0, [r6, #16]
    752c:	b	7538 <accel_post_startup+0x1204>
    7530:	add	r1, r1, #1
    7534:	b	74fc <accel_post_startup+0x11c8>
    7538:	ldr	ip, [r6, #16]
    753c:	and	r0, ip, #65536	; 0x10000
    7540:	cmp	r0, #0
    7544:	beq	761c <accel_post_startup+0x12e8>
    7548:	ldr	r5, [r6, #56]	; 0x38
    754c:	ldr	r0, [r6, #60]	; 0x3c
    7550:	lsl	r1, r0, #4
    7554:	add	r3, r1, r0, lsl #3
    7558:	add	r6, r5, r3
    755c:	cmp	r5, r6
    7560:	beq	761c <accel_post_startup+0x12e8>
    7564:	mov	r3, r5
    7568:	ldrb	r3, [r3, #8]
    756c:	and	r0, r3, #255	; 0xff
    7570:	cmp	r0, #0
    7574:	beq	7614 <accel_post_startup+0x12e0>
    7578:	ldr	r7, [r5]
    757c:	ldrb	r1, [r7]
    7580:	cmp	r1, #2
    7584:	bne	7614 <accel_post_startup+0x12e0>
    7588:	ldr	r3, [r7, #60]	; 0x3c
    758c:	cmp	r3, #0
    7590:	beq	7614 <accel_post_startup+0x12e0>
    7594:	ldr	r3, [r7, #56]	; 0x38
    7598:	and	r1, r3, #1
    759c:	cmp	r1, #0
    75a0:	beq	75bc <accel_post_startup+0x1288>
    75a4:	ldr	ip, [pc, #3084]	; 81b8 <accel_post_startup+0x1e84>
    75a8:	ldr	r0, [ip]
    75ac:	add	r1, r0, r3
    75b0:	sub	lr, r1, #4096	; 0x1000
    75b4:	ldr	r0, [lr, #4095]	; 0xfff
    75b8:	b	75c0 <accel_post_startup+0x128c>
    75bc:	ldr	r0, [r3]
    75c0:	cmp	r0, #0
    75c4:	beq	7614 <accel_post_startup+0x12e0>
    75c8:	ldr	r3, [r0]
    75cc:	sub	r1, r3, #1
    75d0:	str	r1, [r0]
    75d4:	cmp	r1, #0
    75d8:	bne	75e0 <accel_post_startup+0x12ac>
    75dc:	bl	0 <zend_array_destroy>
    75e0:	ldr	r0, [r7, #56]	; 0x38
    75e4:	and	r1, r0, #1
    75e8:	cmp	r1, #0
    75ec:	beq	760c <accel_post_startup+0x12d8>
    75f0:	ldr	ip, [pc, #3008]	; 81b8 <accel_post_startup+0x1e84>
    75f4:	ldr	r2, [ip]
    75f8:	add	r1, r2, r0
    75fc:	mov	r2, #0
    7600:	sub	lr, r1, #4096	; 0x1000
    7604:	str	r2, [lr, #4095]	; 0xfff
    7608:	b	7614 <accel_post_startup+0x12e0>
    760c:	mov	r2, #0
    7610:	str	r2, [r0]
    7614:	add	r5, r5, #24
    7618:	b	755c <accel_post_startup+0x1228>
    761c:	sub	r4, r4, #1
    7620:	b	74a0 <accel_post_startup+0x116c>
    7624:	ldr	r2, [pc, #3012]	; 81f0 <accel_post_startup+0x1ebc>
    7628:	str	fp, [r2]
    762c:	ldr	r3, [pc, #3016]	; 81fc <accel_post_startup+0x1ec8>
    7630:	ldrb	r0, [r3]
    7634:	cmp	r0, #0
    7638:	beq	7654 <accel_post_startup+0x1320>
    763c:	mov	r0, #0
    7640:	ldr	r1, [pc, #2940]	; 81c4 <accel_post_startup+0x1e90>
    7644:	bl	0 <zend_accel_error>
    7648:	mvn	r0, #0
    764c:	str	r0, [sp, #48]	; 0x30
    7650:	b	95cc <accel_post_startup+0x3298>
    7654:	ldr	r1, [pc, #2952]	; 81e4 <accel_post_startup+0x1eb0>
    7658:	ldr	r2, [r1]
    765c:	str	r2, [sp, #36]	; 0x24
    7660:	add	r2, sp, #632	; 0x278
    7664:	str	r2, [r1]
    7668:	add	r0, sp, #632	; 0x278
    766c:	bl	0 <_setjmp>
    7670:	cmp	r0, #0
    7674:	beq	7698 <accel_post_startup+0x1364>
    7678:	ldr	r2, [pc, #2916]	; 81e4 <accel_post_startup+0x1eb0>
    767c:	ldr	r3, [sp, #36]	; 0x24
    7680:	str	r3, [r2]
    7684:	ldr	r3, [pc, #2916]	; 81f0 <accel_post_startup+0x1ebc>
    7688:	str	fp, [r3]
    768c:	mvn	r3, #0
    7690:	str	r3, [sp, #48]	; 0x30
    7694:	b	95cc <accel_post_startup+0x3298>
    7698:	mov	r8, #0
    769c:	ldr	r1, [pc, #2888]	; 81ec <accel_post_startup+0x1eb8>
    76a0:	ldr	r2, [r1]
    76a4:	ldr	r4, [r2, #20]
    76a8:	ldr	r1, [r2, #16]
    76ac:	lsl	r0, r4, #4
    76b0:	add	r2, r0, r4, lsl #3
    76b4:	add	r0, r1, r2
    76b8:	str	r0, [sp, #28]
    76bc:	cmp	r4, #0
    76c0:	bls	7e34 <accel_post_startup+0x1b00>
    76c4:	ldr	r3, [sp, #28]
    76c8:	sub	ip, r3, #24
    76cc:	str	ip, [sp, #28]
    76d0:	ldr	r2, [sp, #28]
    76d4:	ldrb	r2, [r2, #8]
    76d8:	and	r1, r2, #255	; 0xff
    76dc:	cmp	r1, #0
    76e0:	beq	7e2c <accel_post_startup+0x1af8>
    76e4:	ldr	r7, [sp, #28]
    76e8:	ldr	fp, [r7]
    76ec:	ldrb	ip, [fp]
    76f0:	cmp	ip, #1
    76f4:	beq	7e34 <accel_post_startup+0x1b00>
    76f8:	ldr	r2, [fp, #16]
    76fc:	and	r0, r2, #516	; 0x204
    7700:	cmp	r0, #0
    7704:	beq	7a88 <accel_post_startup+0x1754>
    7708:	and	r1, r2, #8
    770c:	cmp	r1, #0
    7710:	bne	7a88 <accel_post_startup+0x1754>
    7714:	and	r3, r2, #4
    7718:	cmp	r3, #0
    771c:	bne	77e4 <accel_post_startup+0x14b0>
    7720:	ldr	r0, [fp, #4]
    7724:	mov	r1, #0
    7728:	bl	0 <zend_string_tolower_ex>
    772c:	mov	r5, r0
    7730:	ldr	r2, [pc, #2740]	; 81ec <accel_post_startup+0x1eb8>
    7734:	ldr	r0, [r2]
    7738:	mov	r1, r5
    773c:	bl	0 <zend_hash_find>
    7740:	cmp	r0, #0
    7744:	movne	r3, #1
    7748:	moveq	r3, #0
    774c:	and	r3, r3, #255	; 0xff
    7750:	cmp	r3, #0
    7754:	beq	77a0 <accel_post_startup+0x146c>
    7758:	mov	r0, r5
    775c:	ldr	r3, [r0, #4]
    7760:	and	r2, r3, #64	; 0x40
    7764:	cmp	r2, #0
    7768:	bne	7e2c <accel_post_startup+0x1af8>
    776c:	ldr	ip, [r0]
    7770:	sub	r1, ip, #1
    7774:	str	r1, [r0]
    7778:	cmp	r1, #0
    777c:	bne	7e2c <accel_post_startup+0x1af8>
    7780:	ldr	ip, [r0, #4]
    7784:	and	ip, ip, #128	; 0x80
    7788:	cmp	ip, #0
    778c:	bne	7798 <accel_post_startup+0x1464>
    7790:	bl	0 <_efree>
    7794:	b	7e2c <accel_post_startup+0x1af8>
    7798:	bl	0 <free>
    779c:	b	7e2c <accel_post_startup+0x1af8>
    77a0:	mov	r0, r5
    77a4:	ldr	r2, [r0, #4]
    77a8:	and	r3, r2, #64	; 0x40
    77ac:	cmp	r3, #0
    77b0:	bne	77e4 <accel_post_startup+0x14b0>
    77b4:	ldr	r2, [r0]
    77b8:	sub	r1, r2, #1
    77bc:	str	r1, [r0]
    77c0:	cmp	r1, #0
    77c4:	bne	77e4 <accel_post_startup+0x14b0>
    77c8:	ldr	r2, [r0, #4]
    77cc:	and	r2, r2, #128	; 0x80
    77d0:	cmp	r2, #0
    77d4:	bne	77e0 <accel_post_startup+0x14ac>
    77d8:	bl	0 <_efree>
    77dc:	b	77e4 <accel_post_startup+0x14b0>
    77e0:	bl	0 <free>
    77e4:	mov	r6, #0
    77e8:	ldr	r3, [fp, #8]
    77ec:	cmp	r3, #0
    77f0:	beq	7890 <accel_post_startup+0x155c>
    77f4:	mov	r0, r3
    77f8:	mov	r1, #0
    77fc:	bl	0 <zend_string_tolower_ex>
    7800:	mov	r5, r0
    7804:	ldr	r2, [pc, #2528]	; 81ec <accel_post_startup+0x1eb8>
    7808:	ldr	r0, [r2]
    780c:	mov	r1, r5
    7810:	bl	0 <zend_hash_find>
    7814:	cmp	r0, #0
    7818:	beq	7824 <accel_post_startup+0x14f0>
    781c:	ldr	r6, [r0]
    7820:	b	7828 <accel_post_startup+0x14f4>
    7824:	mov	r6, #0
    7828:	mov	r0, r5
    782c:	ldr	r1, [r0, #4]
    7830:	and	r2, r1, #64	; 0x40
    7834:	cmp	r2, #0
    7838:	bne	786c <accel_post_startup+0x1538>
    783c:	ldr	r3, [r0]
    7840:	sub	r3, r3, #1
    7844:	str	r3, [r0]
    7848:	cmp	r3, #0
    784c:	bne	786c <accel_post_startup+0x1538>
    7850:	ldr	r1, [r0, #4]
    7854:	and	ip, r1, #128	; 0x80
    7858:	cmp	ip, #0
    785c:	bne	7868 <accel_post_startup+0x1534>
    7860:	bl	0 <_efree>
    7864:	b	786c <accel_post_startup+0x1538>
    7868:	bl	0 <free>
    786c:	cmp	r6, #0
    7870:	beq	7e2c <accel_post_startup+0x1af8>
    7874:	ldr	r3, [r6, #16]
    7878:	and	r2, r3, #4096	; 0x1000
    787c:	cmp	r2, #0
    7880:	beq	7e2c <accel_post_startup+0x1af8>
    7884:	and	r0, r3, #131072	; 0x20000
    7888:	cmp	r0, #0
    788c:	beq	7e2c <accel_post_startup+0x1af8>
    7890:	ldr	r0, [fp, #252]	; 0xfc
    7894:	cmp	r0, #0
    7898:	beq	7904 <accel_post_startup+0x15d0>
    789c:	mov	r5, #1
    78a0:	mov	r9, #0
    78a4:	ldr	r1, [fp, #252]	; 0xfc
    78a8:	cmp	r9, r1
    78ac:	bcs	78fc <accel_post_startup+0x15c8>
    78b0:	ldr	r3, [pc, #2356]	; 81ec <accel_post_startup+0x1eb8>
    78b4:	ldr	r0, [r3]
    78b8:	ldr	r3, [fp, #260]	; 0x104
    78bc:	add	ip, r3, r9, lsl #3
    78c0:	ldr	r1, [ip, #4]
    78c4:	bl	0 <zend_hash_find>
    78c8:	cmp	r0, #0
    78cc:	beq	78d8 <accel_post_startup+0x15a4>
    78d0:	ldr	r2, [r0]
    78d4:	b	78dc <accel_post_startup+0x15a8>
    78d8:	mov	r2, #0
    78dc:	cmp	r2, #0
    78e0:	beq	7e2c <accel_post_startup+0x1af8>
    78e4:	ldr	ip, [r2, #16]
    78e8:	and	r0, ip, #4096	; 0x1000
    78ec:	cmp	r0, #0
    78f0:	beq	7e2c <accel_post_startup+0x1af8>
    78f4:	add	r9, r9, #1
    78f8:	b	78a4 <accel_post_startup+0x1570>
    78fc:	cmp	r5, #0
    7900:	beq	7e2c <accel_post_startup+0x1af8>
    7904:	ldr	r2, [fp, #256]	; 0x100
    7908:	cmp	r2, #0
    790c:	beq	7968 <accel_post_startup+0x1634>
    7910:	mov	r5, #1
    7914:	mov	r9, #0
    7918:	ldr	r3, [fp, #256]	; 0x100
    791c:	cmp	r9, r3
    7920:	bcs	7960 <accel_post_startup+0x162c>
    7924:	ldr	ip, [pc, #2240]	; 81ec <accel_post_startup+0x1eb8>
    7928:	ldr	r0, [ip]
    792c:	ldr	r1, [fp, #264]	; 0x108
    7930:	add	r3, r1, r9, lsl #3
    7934:	ldr	r1, [r3, #4]
    7938:	bl	0 <zend_hash_find>
    793c:	cmp	r0, #0
    7940:	beq	794c <accel_post_startup+0x1618>
    7944:	ldr	r1, [r0]
    7948:	b	7950 <accel_post_startup+0x161c>
    794c:	mov	r1, #0
    7950:	cmp	r1, #0
    7954:	beq	7e2c <accel_post_startup+0x1af8>
    7958:	add	r9, r9, #1
    795c:	b	7918 <accel_post_startup+0x15e4>
    7960:	cmp	r5, #0
    7964:	beq	7e2c <accel_post_startup+0x1af8>
    7968:	mov	r0, fp
    796c:	bl	a3f8 <preload_needed_types_known>
    7970:	cmp	r0, #0
    7974:	beq	7e2c <accel_post_startup+0x1af8>
    7978:	ldr	r0, [fp, #4]
    797c:	mov	r1, #0
    7980:	bl	0 <zend_string_tolower_ex>
    7984:	mov	r5, r0
    7988:	ldr	r1, [pc, #2140]	; 81ec <accel_post_startup+0x1eb8>
    798c:	ldr	r0, [r1]
    7990:	mov	r2, r5
    7994:	mov	r1, r7
    7998:	bl	0 <zend_hash_set_bucket_key>
    799c:	mov	r7, r0
    79a0:	mov	r0, r5
    79a4:	ldr	r1, [r0, #4]
    79a8:	and	r2, r1, #64	; 0x40
    79ac:	cmp	r2, #0
    79b0:	bne	79e4 <accel_post_startup+0x16b0>
    79b4:	ldr	r1, [r0]
    79b8:	sub	r1, r1, #1
    79bc:	str	r1, [r0]
    79c0:	cmp	r1, #0
    79c4:	bne	79e4 <accel_post_startup+0x16b0>
    79c8:	ldr	r3, [r0, #4]
    79cc:	and	ip, r3, #128	; 0x80
    79d0:	cmp	ip, #0
    79d4:	bne	79e0 <accel_post_startup+0x16ac>
    79d8:	bl	0 <_efree>
    79dc:	b	79e4 <accel_post_startup+0x16b0>
    79e0:	bl	0 <free>
    79e4:	cmp	r7, #0
    79e8:	beq	7a88 <accel_post_startup+0x1754>
    79ec:	ldr	r3, [pc, #1948]	; 8190 <accel_post_startup+0x1e5c>
    79f0:	mov	ip, #1
    79f4:	strb	ip, [r3]
    79f8:	ldr	r2, [pc, #1944]	; 8198 <accel_post_startup+0x1e64>
    79fc:	ldr	r3, [fp, #276]	; 0x114
    7a00:	str	r3, [r2]
    7a04:	ldr	r2, [fp, #8]
    7a08:	cmp	r2, #0
    7a0c:	beq	7a54 <accel_post_startup+0x1720>
    7a10:	ldr	r1, [fp, #252]	; 0xfc
    7a14:	cmp	r1, #0
    7a18:	bne	7a54 <accel_post_startup+0x1720>
    7a1c:	ldr	ip, [fp, #256]	; 0x100
    7a20:	cmp	ip, #0
    7a24:	bne	7a54 <accel_post_startup+0x1720>
    7a28:	ldrb	r0, [r6]
    7a2c:	cmp	r0, #1
    7a30:	beq	7a44 <accel_post_startup+0x1710>
    7a34:	ldr	ip, [r6, #276]	; 0x114
    7a38:	ldr	r2, [fp, #276]	; 0x114
    7a3c:	cmp	ip, r2
    7a40:	bne	7a54 <accel_post_startup+0x1720>
    7a44:	ldr	r0, [pc, #1892]	; 81b0 <accel_post_startup+0x1e7c>
    7a48:	ldr	r2, [fp, #284]	; 0x11c
    7a4c:	str	r2, [r0]
    7a50:	b	7a60 <accel_post_startup+0x172c>
    7a54:	ldr	r0, [pc, #1876]	; 81b0 <accel_post_startup+0x1e7c>
    7a58:	ldr	ip, [fp, #280]	; 0x118
    7a5c:	str	ip, [r0]
    7a60:	mov	r1, #0
    7a64:	mov	r0, fp
    7a68:	bl	0 <zend_do_link_class>
    7a6c:	ldr	r0, [pc, #1820]	; 8190 <accel_post_startup+0x1e5c>
    7a70:	mov	r2, #0
    7a74:	strb	r2, [r0]
    7a78:	ldr	ip, [pc, #1816]	; 8198 <accel_post_startup+0x1e64>
    7a7c:	mov	r2, #0
    7a80:	str	r2, [ip]
    7a84:	mov	r8, #1
    7a88:	ldr	r3, [fp, #16]
    7a8c:	and	ip, r3, #8
    7a90:	cmp	ip, #0
    7a94:	beq	7e2c <accel_post_startup+0x1af8>
    7a98:	and	ip, r3, #4096	; 0x1000
    7a9c:	cmp	ip, #0
    7aa0:	bne	7c60 <accel_post_startup+0x192c>
    7aa4:	and	ip, r3, #2
    7aa8:	cmp	ip, #0
    7aac:	bne	7c50 <accel_post_startup+0x191c>
    7ab0:	mov	r5, fp
    7ab4:	ldr	ip, [pc, #1768]	; 81a4 <accel_post_startup+0x1e70>
    7ab8:	mvn	r3, #0
    7abc:	str	r3, [ip]
    7ac0:	ldr	r2, [pc, #1736]	; 8190 <accel_post_startup+0x1e5c>
    7ac4:	mov	ip, #1
    7ac8:	strb	ip, [r2]
    7acc:	mov	sl, #1
    7ad0:	mov	r9, #0
    7ad4:	ldr	r6, [r5, #144]	; 0x90
    7ad8:	ldr	ip, [r5, #148]	; 0x94
    7adc:	lsl	r3, ip, #4
    7ae0:	add	r0, r3, ip, lsl #3
    7ae4:	add	r7, r6, r0
    7ae8:	cmp	r6, r7
    7aec:	beq	7b40 <accel_post_startup+0x180c>
    7af0:	mov	r3, r6
    7af4:	ldrb	r0, [r3, #8]
    7af8:	and	r2, r0, #255	; 0xff
    7afc:	cmp	r2, #0
    7b00:	beq	7b38 <accel_post_startup+0x1804>
    7b04:	ldr	r0, [r6]
    7b08:	mov	r2, r0
    7b0c:	ldrb	ip, [r2, #8]
    7b10:	and	r3, ip, #255	; 0xff
    7b14:	cmp	r3, #11
    7b18:	bne	7b38 <accel_post_startup+0x1804>
    7b1c:	ldr	r1, [r0, #20]
    7b20:	bl	0 <zval_update_constant_ex>
    7b24:	cmp	r0, #0
    7b28:	beq	7b34 <accel_post_startup+0x1800>
    7b2c:	mov	sl, #0
    7b30:	b	7b38 <accel_post_startup+0x1804>
    7b34:	mov	r9, #1
    7b38:	add	r6, r6, #24
    7b3c:	b	7ae8 <accel_post_startup+0x17b4>
    7b40:	ldr	r0, [r5, #20]
    7b44:	cmp	r0, #0
    7b48:	beq	7b9c <accel_post_startup+0x1868>
    7b4c:	mov	r6, #0
    7b50:	ldr	ip, [r5, #20]
    7b54:	cmp	r6, ip
    7b58:	bcs	7b9c <accel_post_startup+0x1868>
    7b5c:	ldr	r2, [r5, #28]
    7b60:	add	r0, r2, r6, lsl #4
    7b64:	ldrb	ip, [r0, #8]
    7b68:	and	r2, ip, #255	; 0xff
    7b6c:	cmp	r2, #11
    7b70:	bne	7b94 <accel_post_startup+0x1860>
    7b74:	ldr	r2, [r5, #172]	; 0xac
    7b78:	ldr	r2, [r2, r6, lsl #2]
    7b7c:	ldr	r1, [r2, #16]
    7b80:	bl	0 <zval_update_constant_ex>
    7b84:	mov	r1, #0
    7b88:	cmp	r0, #0
    7b8c:	movne	sl, r1
    7b90:	moveq	sl, sl
    7b94:	add	r6, r6, #1
    7b98:	b	7b50 <accel_post_startup+0x181c>
    7b9c:	ldr	ip, [r5, #24]
    7ba0:	cmp	ip, #0
    7ba4:	beq	7c10 <accel_post_startup+0x18dc>
    7ba8:	ldr	r0, [r5, #8]
    7bac:	cmp	r0, #0
    7bb0:	beq	7bbc <accel_post_startup+0x1888>
    7bb4:	ldr	r0, [r0, #24]
    7bb8:	sub	ip, ip, r0
    7bbc:	mov	r7, ip
    7bc0:	ldr	r1, [r5, #32]
    7bc4:	ldr	r0, [r5, #24]
    7bc8:	add	r0, r1, r0, lsl #4
    7bcc:	sub	r6, r0, #16
    7bd0:	cmp	r7, #0
    7bd4:	beq	7c10 <accel_post_startup+0x18dc>
    7bd8:	ldrb	ip, [r6, #8]
    7bdc:	and	r2, ip, #255	; 0xff
    7be0:	cmp	r2, #11
    7be4:	bne	7c04 <accel_post_startup+0x18d0>
    7be8:	mov	r1, r5
    7bec:	mov	r0, r6
    7bf0:	bl	0 <zval_update_constant_ex>
    7bf4:	mov	r3, #0
    7bf8:	cmp	r0, #0
    7bfc:	movne	sl, r3
    7c00:	moveq	sl, sl
    7c04:	sub	r6, r6, #16
    7c08:	sub	r7, r7, #1
    7c0c:	b	7bd0 <accel_post_startup+0x189c>
    7c10:	eor	r0, sl, #1
    7c14:	mov	r1, #0
    7c18:	cmp	r9, #0
    7c1c:	movne	r2, r0
    7c20:	moveq	r2, r1
    7c24:	cmp	r2, #0
    7c28:	bne	7acc <accel_post_startup+0x1798>
    7c2c:	ldr	r2, [pc, #1392]	; 81a4 <accel_post_startup+0x1e70>
    7c30:	mov	r1, #0
    7c34:	str	r1, [r2]
    7c38:	ldr	r3, [pc, #1360]	; 8190 <accel_post_startup+0x1e5c>
    7c3c:	mov	ip, #0
    7c40:	strb	ip, [r3]
    7c44:	and	ip, sl, #255	; 0xff
    7c48:	cmp	ip, #0
    7c4c:	beq	7c60 <accel_post_startup+0x192c>
    7c50:	ldr	r0, [fp, #16]
    7c54:	orr	r3, r0, #4096	; 0x1000
    7c58:	str	r3, [fp, #16]
    7c5c:	mov	r8, #1
    7c60:	ldr	r3, [fp, #16]
    7c64:	and	r0, r3, #131072	; 0x20000
    7c68:	cmp	r0, #0
    7c6c:	bne	7e2c <accel_post_startup+0x1af8>
    7c70:	and	r2, r3, #2
    7c74:	cmp	r2, #0
    7c78:	bne	7e1c <accel_post_startup+0x1ae8>
    7c7c:	mov	r7, #1
    7c80:	and	r1, r3, #256	; 0x100
    7c84:	cmp	r1, #0
    7c88:	beq	7e10 <accel_post_startup+0x1adc>
    7c8c:	ldr	r5, [fp, #100]	; 0x64
    7c90:	ldr	r2, [fp, #104]	; 0x68
    7c94:	lsl	r0, r2, #4
    7c98:	add	r2, r0, r2, lsl #3
    7c9c:	add	r6, r5, r2
    7ca0:	cmp	r5, r6
    7ca4:	beq	7e10 <accel_post_startup+0x1adc>
    7ca8:	mov	r1, r5
    7cac:	ldrb	ip, [r1, #8]
    7cb0:	and	r3, ip, #255	; 0xff
    7cb4:	cmp	r3, #0
    7cb8:	beq	7e08 <accel_post_startup+0x1ad4>
    7cbc:	ldr	sl, [r5]
    7cc0:	ldr	ip, [sl, #20]
    7cc4:	movw	lr, #1023	; 0x3ff
    7cc8:	cmp	ip, lr
    7ccc:	bls	7e08 <accel_post_startup+0x1ad4>
    7cd0:	and	r0, ip, #2
    7cd4:	cmp	r0, #0
    7cd8:	bne	7e08 <accel_post_startup+0x1ad4>
    7cdc:	bic	ip, ip, #3
    7ce0:	str	ip, [sp, #32]
    7ce4:	mov	r1, #0
    7ce8:	ldr	r0, [sp, #32]
    7cec:	bl	0 <zend_string_tolower_ex>
    7cf0:	str	r0, [sp, #24]
    7cf4:	ldr	r1, [pc, #1264]	; 81ec <accel_post_startup+0x1eb8>
    7cf8:	ldr	r0, [r1]
    7cfc:	ldr	r1, [sp, #24]
    7d00:	bl	0 <zend_hash_find>
    7d04:	cmp	r0, #0
    7d08:	beq	7d14 <accel_post_startup+0x19e0>
    7d0c:	ldr	r9, [r0]
    7d10:	b	7d18 <accel_post_startup+0x19e4>
    7d14:	mov	r9, #0
    7d18:	ldr	r0, [sp, #24]
    7d1c:	ldr	r2, [r0, #4]
    7d20:	and	ip, r2, #64	; 0x40
    7d24:	cmp	ip, #0
    7d28:	bne	7d5c <accel_post_startup+0x1a28>
    7d2c:	ldr	r1, [r0]
    7d30:	sub	r1, r1, #1
    7d34:	str	r1, [r0]
    7d38:	cmp	r1, #0
    7d3c:	bne	7d5c <accel_post_startup+0x1a28>
    7d40:	ldr	r3, [r0, #4]
    7d44:	and	r3, r3, #128	; 0x80
    7d48:	cmp	r3, #0
    7d4c:	bne	7d58 <accel_post_startup+0x1a24>
    7d50:	bl	0 <_efree>
    7d54:	b	7d5c <accel_post_startup+0x1a28>
    7d58:	bl	0 <free>
    7d5c:	cmp	r9, #0
    7d60:	bne	7d6c <accel_post_startup+0x1a38>
    7d64:	mov	r7, #0
    7d68:	b	7e08 <accel_post_startup+0x1ad4>
    7d6c:	cmp	r9, fp
    7d70:	beq	7da0 <accel_post_startup+0x1a6c>
    7d74:	ldr	r0, [r9, #16]
    7d78:	and	r3, r0, #4096	; 0x1000
    7d7c:	cmp	r3, #0
    7d80:	bne	7d8c <accel_post_startup+0x1a58>
    7d84:	mov	r7, #0
    7d88:	b	7e08 <accel_post_startup+0x1ad4>
    7d8c:	and	r3, r0, #131072	; 0x20000
    7d90:	cmp	r3, #0
    7d94:	bne	7da0 <accel_post_startup+0x1a6c>
    7d98:	mov	r7, #0
    7d9c:	b	7e08 <accel_post_startup+0x1ad4>
    7da0:	ldr	r0, [sp, #32]
    7da4:	ldr	r2, [r0, #4]
    7da8:	and	r3, r2, #64	; 0x40
    7dac:	cmp	r3, #0
    7db0:	bne	7de4 <accel_post_startup+0x1ab0>
    7db4:	ldr	r3, [r0]
    7db8:	sub	r2, r3, #1
    7dbc:	str	r2, [r0]
    7dc0:	cmp	r2, #0
    7dc4:	bne	7de4 <accel_post_startup+0x1ab0>
    7dc8:	ldr	ip, [r0, #4]
    7dcc:	and	ip, ip, #128	; 0x80
    7dd0:	cmp	ip, #0
    7dd4:	bne	7de0 <accel_post_startup+0x1aac>
    7dd8:	bl	0 <_efree>
    7ddc:	b	7de4 <accel_post_startup+0x1ab0>
    7de0:	bl	0 <free>
    7de4:	mov	r1, #3
    7de8:	mov	r0, #2
    7dec:	ldr	ip, [sl, #20]
    7df0:	and	r2, ip, #1
    7df4:	cmp	r2, #0
    7df8:	movne	r1, r1
    7dfc:	moveq	r1, r0
    7e00:	orr	r2, r9, r1
    7e04:	str	r2, [sl, #20]
    7e08:	add	r5, r5, #24
    7e0c:	b	7ca0 <accel_post_startup+0x196c>
    7e10:	and	ip, r7, #255	; 0xff
    7e14:	cmp	ip, #0
    7e18:	beq	7e2c <accel_post_startup+0x1af8>
    7e1c:	ldr	ip, [fp, #16]
    7e20:	orr	r3, ip, #131072	; 0x20000
    7e24:	str	r3, [fp, #16]
    7e28:	mov	r8, #1
    7e2c:	sub	r4, r4, #1
    7e30:	b	76bc <accel_post_startup+0x1388>
    7e34:	cmp	r8, #0
    7e38:	bne	7698 <accel_post_startup+0x1364>
    7e3c:	ldr	r3, [pc, #936]	; 81ec <accel_post_startup+0x1eb8>
    7e40:	ldr	r0, [r3]
    7e44:	ldr	r5, [r0, #40]	; 0x28
    7e48:	mov	r1, #0
    7e4c:	str	r1, [r0, #40]	; 0x28
    7e50:	ldr	r3, [r3]
    7e54:	ldr	r4, [r3, #20]
    7e58:	ldr	r2, [r3, #16]
    7e5c:	lsl	r3, r4, #4
    7e60:	add	r3, r3, r4, lsl #3
    7e64:	add	r6, r2, r3
    7e68:	cmp	r4, #0
    7e6c:	bls	84ac <accel_post_startup+0x2178>
    7e70:	sub	r6, r6, #24
    7e74:	mov	r0, r6
    7e78:	ldrb	ip, [r0, #8]
    7e7c:	and	r0, ip, #255	; 0xff
    7e80:	cmp	r0, #0
    7e84:	beq	84a4 <accel_post_startup+0x2170>
    7e88:	ldr	r3, [r6, #20]
    7e8c:	str	r3, [sp, #28]
    7e90:	mov	r7, r6
    7e94:	ldr	r8, [r7]
    7e98:	ldrb	r2, [r8]
    7e9c:	cmp	r2, #1
    7ea0:	beq	84ac <accel_post_startup+0x2178>
    7ea4:	ldr	r1, [r8, #16]
    7ea8:	and	r0, r1, #8
    7eac:	cmp	r0, #0
    7eb0:	bne	8208 <accel_post_startup+0x1ed4>
    7eb4:	ldr	r0, [r8, #4]
    7eb8:	mov	r1, #0
    7ebc:	bl	0 <zend_string_tolower_ex>
    7ec0:	str	r0, [sp, #24]
    7ec4:	ldr	r2, [pc, #800]	; 81ec <accel_post_startup+0x1eb8>
    7ec8:	ldr	r0, [r2]
    7ecc:	ldr	r1, [sp, #24]
    7ed0:	bl	0 <zend_hash_find>
    7ed4:	cmp	r0, #0
    7ed8:	movne	r3, #1
    7edc:	moveq	r3, #0
    7ee0:	and	r1, r3, #255	; 0xff
    7ee4:	cmp	r1, #0
    7ee8:	bne	8120 <accel_post_startup+0x1dec>
    7eec:	ldr	r1, [pc, #768]	; 81f4 <accel_post_startup+0x1ec0>
    7ef0:	str	r1, [sp, #1024]	; 0x400
    7ef4:	ldr	ip, [pc, #716]	; 81c8 <accel_post_startup+0x1e94>
    7ef8:	str	ip, [sp, #1028]	; 0x404
    7efc:	ldr	r0, [r8, #8]
    7f00:	cmp	r0, #0
    7f04:	beq	7fe8 <accel_post_startup+0x1cb4>
    7f08:	mov	r1, #0
    7f0c:	bl	0 <zend_string_tolower_ex>
    7f10:	mov	sl, r0
    7f14:	ldr	r3, [pc, #720]	; 81ec <accel_post_startup+0x1eb8>
    7f18:	ldr	r0, [r3]
    7f1c:	mov	r1, sl
    7f20:	bl	0 <zend_hash_find>
    7f24:	cmp	r0, #0
    7f28:	beq	7f34 <accel_post_startup+0x1c00>
    7f2c:	ldr	r9, [r0]
    7f30:	b	7f38 <accel_post_startup+0x1c04>
    7f34:	mov	r9, #0
    7f38:	mov	r0, sl
    7f3c:	ldr	r1, [r0, #4]
    7f40:	and	r2, r1, #64	; 0x40
    7f44:	cmp	r2, #0
    7f48:	bne	7f7c <accel_post_startup+0x1c48>
    7f4c:	ldr	ip, [r0]
    7f50:	sub	ip, ip, #1
    7f54:	str	ip, [r0]
    7f58:	cmp	ip, #0
    7f5c:	bne	7f7c <accel_post_startup+0x1c48>
    7f60:	ldr	r1, [r0, #4]
    7f64:	and	r2, r1, #128	; 0x80
    7f68:	cmp	r2, #0
    7f6c:	bne	7f78 <accel_post_startup+0x1c44>
    7f70:	bl	0 <_efree>
    7f74:	b	7f7c <accel_post_startup+0x1c48>
    7f78:	bl	0 <free>
    7f7c:	cmp	r9, #0
    7f80:	bne	7f9c <accel_post_startup+0x1c68>
    7f84:	ldr	ip, [pc, #544]	; 81ac <accel_post_startup+0x1e78>
    7f88:	str	ip, [sp, #1024]	; 0x400
    7f8c:	ldr	r1, [r8, #8]
    7f90:	add	r1, r1, #16
    7f94:	str	r1, [sp, #1028]	; 0x404
    7f98:	b	80e8 <accel_post_startup+0x1db4>
    7f9c:	ldr	r0, [r9, #16]
    7fa0:	and	r3, r0, #4096	; 0x1000
    7fa4:	cmp	r3, #0
    7fa8:	bne	7fc4 <accel_post_startup+0x1c90>
    7fac:	ldr	r2, [pc, #548]	; 81d8 <accel_post_startup+0x1ea4>
    7fb0:	str	r2, [sp, #1024]	; 0x400
    7fb4:	ldr	r3, [r8, #8]
    7fb8:	add	ip, r3, #16
    7fbc:	str	ip, [sp, #1028]	; 0x404
    7fc0:	b	80e8 <accel_post_startup+0x1db4>
    7fc4:	and	r1, r0, #131072	; 0x20000
    7fc8:	cmp	r1, #0
    7fcc:	bne	7fe8 <accel_post_startup+0x1cb4>
    7fd0:	ldr	r3, [pc, #428]	; 8184 <accel_post_startup+0x1e50>
    7fd4:	str	r3, [sp, #1024]	; 0x400
    7fd8:	ldr	r3, [r8, #8]
    7fdc:	add	r3, r3, #16
    7fe0:	str	r3, [sp, #1028]	; 0x404
    7fe4:	b	80e8 <accel_post_startup+0x1db4>
    7fe8:	ldr	r3, [r8, #252]	; 0xfc
    7fec:	cmp	r3, #0
    7ff0:	beq	805c <accel_post_startup+0x1d28>
    7ff4:	mov	r9, #0
    7ff8:	ldr	r2, [r8, #252]	; 0xfc
    7ffc:	cmp	r9, r2
    8000:	bcs	805c <accel_post_startup+0x1d28>
    8004:	ldr	r0, [pc, #480]	; 81ec <accel_post_startup+0x1eb8>
    8008:	ldr	r0, [r0]
    800c:	ldr	r3, [r8, #260]	; 0x104
    8010:	add	r2, r3, r9, lsl #3
    8014:	ldr	r1, [r2, #4]
    8018:	bl	0 <zend_hash_find>
    801c:	cmp	r0, #0
    8020:	beq	802c <accel_post_startup+0x1cf8>
    8024:	ldr	r2, [r0]
    8028:	b	8030 <accel_post_startup+0x1cfc>
    802c:	mov	r2, #0
    8030:	cmp	r2, #0
    8034:	bne	8054 <accel_post_startup+0x1d20>
    8038:	ldr	r0, [pc, #404]	; 81d4 <accel_post_startup+0x1ea0>
    803c:	str	r0, [sp, #1024]	; 0x400
    8040:	ldr	r1, [r8, #260]	; 0x104
    8044:	ldr	ip, [r1, r9, lsl #3]
    8048:	add	r1, ip, #16
    804c:	str	r1, [sp, #1028]	; 0x404
    8050:	b	80e8 <accel_post_startup+0x1db4>
    8054:	add	r9, r9, #1
    8058:	b	7ff8 <accel_post_startup+0x1cc4>
    805c:	ldr	r0, [r8, #256]	; 0x100
    8060:	cmp	r0, #0
    8064:	beq	80d0 <accel_post_startup+0x1d9c>
    8068:	mov	r9, #0
    806c:	ldr	ip, [r8, #256]	; 0x100
    8070:	cmp	r9, ip
    8074:	bcs	80d0 <accel_post_startup+0x1d9c>
    8078:	ldr	ip, [pc, #364]	; 81ec <accel_post_startup+0x1eb8>
    807c:	ldr	r0, [ip]
    8080:	ldr	r2, [r8, #264]	; 0x108
    8084:	add	r2, r2, r9, lsl #3
    8088:	ldr	r1, [r2, #4]
    808c:	bl	0 <zend_hash_find>
    8090:	cmp	r0, #0
    8094:	beq	80a0 <accel_post_startup+0x1d6c>
    8098:	ldr	r1, [r0]
    809c:	b	80a4 <accel_post_startup+0x1d70>
    80a0:	mov	r1, #0
    80a4:	cmp	r1, #0
    80a8:	bne	80c8 <accel_post_startup+0x1d94>
    80ac:	ldr	ip, [pc, #280]	; 81cc <accel_post_startup+0x1e98>
    80b0:	str	ip, [sp, #1024]	; 0x400
    80b4:	ldr	r2, [r8, #264]	; 0x108
    80b8:	ldr	r0, [r2, r9, lsl #3]
    80bc:	add	r2, r0, #16
    80c0:	str	r2, [sp, #1028]	; 0x404
    80c4:	b	80e8 <accel_post_startup+0x1db4>
    80c8:	add	r9, r9, #1
    80cc:	b	806c <accel_post_startup+0x1d38>
    80d0:	mov	r0, r8
    80d4:	bl	a3f8 <preload_needed_types_known>
    80d8:	cmp	r0, #0
    80dc:	bne	80e8 <accel_post_startup+0x1db4>
    80e0:	ldr	r0, [pc, #212]	; 81bc <accel_post_startup+0x1e88>
    80e4:	str	r0, [sp, #1024]	; 0x400
    80e8:	mov	r0, #2
    80ec:	ldr	r1, [r8, #276]	; 0x114
    80f0:	add	r1, r1, #16
    80f4:	ldr	r2, [r8, #280]	; 0x118
    80f8:	ldr	r3, [pc, #224]	; 81e0 <accel_post_startup+0x1eac>
    80fc:	ldr	ip, [r8, #4]
    8100:	add	r9, ip, #16
    8104:	ldr	fp, [sp, #1024]	; 0x400
    8108:	ldr	sl, [sp, #1028]	; 0x404
    810c:	str	sl, [sp, #8]
    8110:	str	fp, [sp, #4]
    8114:	str	r9, [sp]
    8118:	bl	0 <zend_error_at>
    811c:	b	8144 <accel_post_startup+0x1e10>
    8120:	mov	r0, #2
    8124:	ldr	r2, [r8, #276]	; 0x114
    8128:	add	r1, r2, #16
    812c:	ldr	r2, [r8, #280]	; 0x118
    8130:	ldr	r3, [pc, #136]	; 81c0 <accel_post_startup+0x1e8c>
    8134:	ldr	ip, [r8, #4]
    8138:	add	r9, ip, #16
    813c:	str	r9, [sp]
    8140:	bl	0 <zend_error_at>
    8144:	ldr	r0, [sp, #24]
    8148:	ldr	ip, [r0, #4]
    814c:	and	ip, ip, #64	; 0x40
    8150:	cmp	ip, #0
    8154:	bne	839c <accel_post_startup+0x2068>
    8158:	ldr	r1, [r0]
    815c:	sub	r2, r1, #1
    8160:	str	r2, [r0]
    8164:	cmp	r2, #0
    8168:	bne	839c <accel_post_startup+0x2068>
    816c:	ldr	r3, [r0, #4]
    8170:	and	r1, r3, #128	; 0x80
    8174:	cmp	r1, #0
    8178:	bne	8200 <accel_post_startup+0x1ecc>
    817c:	bl	0 <_efree>
    8180:	b	839c <accel_post_startup+0x2068>
    8184:	.word	0x0000058d
    8188:	.word	0x00000004
    818c:	.word	0x00000291
    8190:	.word	0x00000059
    8194:	.word	0x00000000
    8198:	.word	0x00000014
    819c:	.word	0x0000021c
    81a0:	.word	0x0000005b
    81a4:	.word	0x0000022c
    81a8:	.word	0x0000012a
    81ac:	.word	0x00000489
    81b0:	.word	0x00000018
    81b4:	.word	0x0000003c
    81b8:	.word	0x00000154
    81bc:	.word	0x0000083e
    81c0:	.word	0x00000a41
    81c4:	.word	0x00000b5f
    81c8:	.word	0x00000bc2
    81cc:	.word	0x00000bc3
    81d0:	.word	0x00000000
    81d4:	.word	0x0000026c
    81d8:	.word	0x00000364
    81dc:	.word	0x0000010c
    81e0:	.word	0x000005f1
    81e4:	.word	0x00000100
    81e8:	.word	0x000000a8
    81ec:	.word	0x00000110
    81f0:	.word	0x0000015c
    81f4:	.word	0x0000010d
    81f8:	.word	0x00000024
    81fc:	.word	0x0000014c
    8200:	bl	0 <free>
    8204:	b	839c <accel_post_startup+0x2068>
    8208:	and	r3, r1, #4096	; 0x1000
    820c:	cmp	r3, #0
    8210:	bne	836c <accel_post_startup+0x2038>
    8214:	mov	r2, r8
    8218:	ldr	r0, [pc, #3896]	; 9158 <accel_post_startup+0x2e24>
    821c:	str	r0, [sp, #1032]	; 0x408
    8220:	ldr	r3, [pc, #3916]	; 9174 <accel_post_startup+0x2e40>
    8224:	str	r3, [sp, #1036]	; 0x40c
    8228:	ldr	r3, [r2, #144]	; 0x90
    822c:	ldr	ip, [r2, #148]	; 0x94
    8230:	lsl	r0, ip, #4
    8234:	add	ip, r0, ip, lsl #3
    8238:	add	r0, r3, ip
    823c:	cmp	r3, r0
    8240:	beq	8288 <accel_post_startup+0x1f54>
    8244:	mov	r1, r3
    8248:	ldrb	r1, [r1, #8]
    824c:	and	ip, r1, #255	; 0xff
    8250:	cmp	ip, #0
    8254:	beq	8280 <accel_post_startup+0x1f4c>
    8258:	ldr	ip, [r3, #20]
    825c:	ldr	r1, [r3]
    8260:	ldrb	r1, [r1, #8]
    8264:	and	r1, r1, #255	; 0xff
    8268:	cmp	r1, #11
    826c:	bne	8280 <accel_post_startup+0x1f4c>
    8270:	ldr	r1, [pc, #3800]	; 9150 <accel_post_startup+0x2e1c>
    8274:	str	r1, [sp, #1032]	; 0x408
    8278:	add	r1, ip, #16
    827c:	str	r1, [sp, #1036]	; 0x40c
    8280:	add	r3, r3, #24
    8284:	b	823c <accel_post_startup+0x1f08>
    8288:	ldr	sl, [r2, #100]	; 0x64
    828c:	ldr	r0, [r2, #104]	; 0x68
    8290:	lsl	r3, r0, #4
    8294:	add	r3, r3, r0, lsl #3
    8298:	add	ip, sl, r3
    829c:	cmp	sl, ip
    82a0:	beq	8334 <accel_post_startup+0x2000>
    82a4:	mov	r1, sl
    82a8:	ldrb	r0, [r1, #8]
    82ac:	and	r1, r0, #255	; 0xff
    82b0:	cmp	r1, #0
    82b4:	beq	832c <accel_post_startup+0x1ff8>
    82b8:	ldr	r1, [sl, #20]
    82bc:	ldr	r9, [sl]
    82c0:	ldr	r3, [r9, #4]
    82c4:	and	r0, r3, #16
    82c8:	cmp	r0, #0
    82cc:	bne	82e8 <accel_post_startup+0x1fb4>
    82d0:	ldr	r3, [r2, #28]
    82d4:	ldr	r0, [r9]
    82d8:	sub	r0, r0, #24
    82dc:	lsr	r0, r0, #4
    82e0:	add	r3, r3, r0, lsl #4
    82e4:	b	82f4 <accel_post_startup+0x1fc0>
    82e8:	ldr	r0, [r2, #32]
    82ec:	ldr	r3, [r9]
    82f0:	add	r3, r0, r3, lsl #4
    82f4:	ldrb	r3, [r3, #8]
    82f8:	and	r0, r3, #255	; 0xff
    82fc:	cmp	r0, #11
    8300:	bne	832c <accel_post_startup+0x1ff8>
    8304:	ldr	r3, [pc, #3680]	; 916c <accel_post_startup+0x2e38>
    8308:	ldr	r0, [pc, #3632]	; 9140 <accel_post_startup+0x2e0c>
    830c:	ldr	r9, [r9, #4]
    8310:	and	r9, r9, #16
    8314:	cmp	r9, #0
    8318:	movne	r3, r3
    831c:	moveq	r3, r0
    8320:	str	r3, [sp, #1032]	; 0x408
    8324:	add	r3, r1, #16
    8328:	str	r3, [sp, #1036]	; 0x40c
    832c:	add	sl, sl, #24
    8330:	b	829c <accel_post_startup+0x1f68>
    8334:	mov	r0, #2
    8338:	ldr	ip, [r8, #276]	; 0x114
    833c:	add	r1, ip, #16
    8340:	ldr	r2, [r8, #280]	; 0x118
    8344:	ldr	r3, [pc, #3604]	; 9160 <accel_post_startup+0x2e2c>
    8348:	ldr	ip, [r8, #4]
    834c:	add	fp, ip, #16
    8350:	ldr	r9, [sp, #1032]	; 0x408
    8354:	ldr	sl, [sp, #1036]	; 0x40c
    8358:	str	sl, [sp, #8]
    835c:	str	r9, [sp, #4]
    8360:	str	fp, [sp]
    8364:	bl	0 <zend_error_at>
    8368:	b	839c <accel_post_startup+0x2068>
    836c:	and	ip, r1, #131072	; 0x20000
    8370:	cmp	ip, #0
    8374:	bne	84a4 <accel_post_startup+0x2170>
    8378:	mov	r0, #2
    837c:	ldr	r2, [r8, #276]	; 0x114
    8380:	add	r1, r2, #16
    8384:	ldr	r2, [r8, #280]	; 0x118
    8388:	ldr	r3, [pc, #3568]	; 9180 <accel_post_startup+0x2e4c>
    838c:	ldr	ip, [r8, #4]
    8390:	add	r9, ip, #16
    8394:	str	r9, [sp]
    8398:	bl	0 <zend_error_at>
    839c:	ldr	r3, [r8, #16]
    83a0:	bic	r1, r3, #1024	; 0x400
    83a4:	str	r1, [r8, #16]
    83a8:	ldr	r2, [r8, #56]	; 0x38
    83ac:	ldr	r0, [r8, #60]	; 0x3c
    83b0:	lsl	ip, r0, #4
    83b4:	add	r1, ip, r0, lsl #3
    83b8:	add	r0, r2, r1
    83bc:	cmp	r2, r0
    83c0:	beq	8408 <accel_post_startup+0x20d4>
    83c4:	mov	r3, r2
    83c8:	ldrb	r3, [r3, #8]
    83cc:	and	r3, r3, #255	; 0xff
    83d0:	cmp	r3, #0
    83d4:	beq	8400 <accel_post_startup+0x20cc>
    83d8:	ldr	r3, [r2]
    83dc:	ldrb	r1, [r3]
    83e0:	cmp	r1, #2
    83e4:	bne	8400 <accel_post_startup+0x20cc>
    83e8:	ldr	r1, [r3, #12]
    83ec:	cmp	r1, r8
    83f0:	bne	8400 <accel_post_startup+0x20cc>
    83f4:	ldr	r1, [r3, #4]
    83f8:	bic	ip, r1, #1024	; 0x400
    83fc:	str	ip, [r3, #4]
    8400:	add	r2, r2, #24
    8404:	b	83bc <accel_post_startup+0x2088>
    8408:	ldr	r1, [pc, #3396]	; 9154 <accel_post_startup+0x2e20>
    840c:	ldr	r0, [r1]
    8410:	ldr	r1, [r8, #276]	; 0x114
    8414:	mov	ip, r0
    8418:	mov	r0, ip
    841c:	bl	0 <zend_hash_find>
    8420:	cmp	r0, #0
    8424:	beq	8430 <accel_post_startup+0x20fc>
    8428:	ldr	r0, [r0]
    842c:	b	8434 <accel_post_startup+0x2100>
    8430:	mov	r0, #0
    8434:	add	r0, r0, #184	; 0xb8
    8438:	mov	r2, r7
    843c:	ldr	r1, [sp, #28]
    8440:	bl	0 <zend_hash_add>
    8444:	mov	r2, #0
    8448:	str	r2, [r7, #8]
    844c:	ldr	r0, [sp, #28]
    8450:	ldr	r1, [r0, #4]
    8454:	and	r2, r1, #64	; 0x40
    8458:	cmp	r2, #0
    845c:	bne	8490 <accel_post_startup+0x215c>
    8460:	ldr	r1, [r0]
    8464:	sub	ip, r1, #1
    8468:	str	ip, [r0]
    846c:	cmp	ip, #0
    8470:	bne	8490 <accel_post_startup+0x215c>
    8474:	ldr	r3, [r0, #4]
    8478:	and	r3, r3, #128	; 0x80
    847c:	cmp	r3, #0
    8480:	bne	848c <accel_post_startup+0x2158>
    8484:	bl	0 <_efree>
    8488:	b	8490 <accel_post_startup+0x215c>
    848c:	bl	0 <free>
    8490:	ldr	r1, [pc, #3300]	; 917c <accel_post_startup+0x2e48>
    8494:	ldr	r3, [r1]
    8498:	ldr	ip, [r3, #24]
    849c:	sub	r2, ip, #1
    84a0:	str	r2, [r3, #24]
    84a4:	sub	r4, r4, #1
    84a8:	b	7e68 <accel_post_startup+0x1b34>
    84ac:	ldr	ip, [pc, #3272]	; 917c <accel_post_startup+0x2e48>
    84b0:	ldr	r3, [ip]
    84b4:	str	r5, [r3, #40]	; 0x28
    84b8:	ldr	r0, [ip]
    84bc:	bl	0 <zend_hash_rehash>
    84c0:	ldr	r1, [pc, #3212]	; 9154 <accel_post_startup+0x2e20>
    84c4:	ldr	r1, [r1]
    84c8:	ldr	r9, [r1, #16]
    84cc:	ldr	ip, [r1, #20]
    84d0:	lsl	r3, ip, #4
    84d4:	add	ip, r3, ip, lsl #3
    84d8:	add	r4, r9, ip
    84dc:	cmp	r9, r4
    84e0:	beq	85cc <accel_post_startup+0x2298>
    84e4:	mov	r0, r9
    84e8:	ldrb	r1, [r0, #8]
    84ec:	and	r1, r1, #255	; 0xff
    84f0:	cmp	r1, #0
    84f4:	beq	85c4 <accel_post_startup+0x2290>
    84f8:	ldr	r7, [r9]
    84fc:	add	r5, r7, #4
    8500:	ldr	r8, [r7, #52]	; 0x34
    8504:	mov	r3, #28
    8508:	ldr	ip, [r7, #48]	; 0x30
    850c:	mla	r6, r3, ip, r8
    8510:	cmp	r8, r6
    8514:	beq	8594 <accel_post_startup+0x2260>
    8518:	ldrb	r1, [r8, #24]
    851c:	cmp	r1, #144	; 0x90
    8520:	beq	852c <accel_post_startup+0x21f8>
    8524:	cmp	r1, #145	; 0x91
    8528:	bne	858c <accel_post_startup+0x2258>
    852c:	ldr	ip, [r8, #4]
    8530:	ldr	r1, [ip, #16]
    8534:	add	r0, r7, #184	; 0xb8
    8538:	bl	0 <zend_hash_find>
    853c:	cmp	r0, #0
    8540:	movne	ip, #1
    8544:	moveq	ip, #0
    8548:	and	r1, ip, #255	; 0xff
    854c:	cmp	r1, #0
    8550:	bne	858c <accel_post_startup+0x2258>
    8554:	mov	r0, #0
    8558:	str	r0, [r8, #4]
    855c:	mov	r2, #0
    8560:	str	r2, [r8, #8]
    8564:	mov	r0, #0
    8568:	str	r0, [r8, #12]
    856c:	mov	r0, #0
    8570:	strb	r0, [r8, #24]
    8574:	mov	ip, #0
    8578:	strb	ip, [r8, #25]
    857c:	mov	r0, #0
    8580:	strb	r0, [r8, #26]
    8584:	mov	ip, #0
    8588:	strb	ip, [r8, #27]
    858c:	add	r8, r8, #28
    8590:	b	8510 <accel_post_startup+0x21dc>
    8594:	ldr	r0, [r5, #4]
    8598:	and	ip, r0, #65536	; 0x10000
    859c:	cmp	ip, #0
    85a0:	beq	85c4 <accel_post_startup+0x2290>
    85a4:	mov	r0, r5
    85a8:	bl	0 <zend_build_delayed_early_binding_list>
    85ac:	str	r0, [r7, #228]	; 0xe4
    85b0:	cmn	r0, #1
    85b4:	bne	85c4 <accel_post_startup+0x2290>
    85b8:	ldr	r2, [r5, #4]
    85bc:	bic	ip, r2, #65536	; 0x10000
    85c0:	str	ip, [r5, #4]
    85c4:	add	r9, r9, #24
    85c8:	b	84dc <accel_post_startup+0x21a8>
    85cc:	ldr	r1, [pc, #2980]	; 9178 <accel_post_startup+0x2e44>
    85d0:	ldr	r2, [sp, #36]	; 0x24
    85d4:	str	r2, [r1]
    85d8:	ldr	r1, [pc, #2932]	; 9154 <accel_post_startup+0x2e20>
    85dc:	ldr	r1, [r1]
    85e0:	ldr	ip, [r1, #16]
    85e4:	ldr	r1, [r1, #20]
    85e8:	lsl	r2, r1, #4
    85ec:	add	r1, r2, r1, lsl #3
    85f0:	add	r2, ip, r1
    85f4:	cmp	ip, r2
    85f8:	beq	8624 <accel_post_startup+0x22f0>
    85fc:	mov	r0, ip
    8600:	ldrb	r0, [r0, #8]
    8604:	and	r0, r0, #255	; 0xff
    8608:	cmp	r0, #0
    860c:	beq	861c <accel_post_startup+0x22e8>
    8610:	ldr	r3, [ip]
    8614:	mov	r1, #1
    8618:	strb	r1, [r3, #246]	; 0xf6
    861c:	add	ip, ip, #24
    8620:	b	85f4 <accel_post_startup+0x22c0>
    8624:	mov	r9, #0
    8628:	ldr	r2, [pc, #2852]	; 9154 <accel_post_startup+0x2e20>
    862c:	ldr	r0, [r2]
    8630:	ldr	r8, [r0, #16]
    8634:	ldr	r0, [r0, #20]
    8638:	lsl	r3, r0, #4
    863c:	add	r2, r3, r0, lsl #3
    8640:	add	r5, r8, r2
    8644:	cmp	r8, r5
    8648:	beq	879c <accel_post_startup+0x2468>
    864c:	mov	ip, r8
    8650:	ldrb	r0, [ip, #8]
    8654:	and	r1, r0, #255	; 0xff
    8658:	cmp	r1, #0
    865c:	beq	8794 <accel_post_startup+0x2460>
    8660:	ldr	r7, [r8]
    8664:	ldrb	r0, [r7, #246]	; 0xf6
    8668:	cmp	r0, #0
    866c:	beq	8794 <accel_post_startup+0x2460>
    8670:	mov	r4, #1
    8674:	ldr	r6, [r7, #52]	; 0x34
    8678:	mov	r0, #28
    867c:	ldr	r3, [r7, #48]	; 0x30
    8680:	mla	sl, r0, r3, r6
    8684:	cmp	r6, sl
    8688:	bcs	8780 <accel_post_startup+0x244c>
    868c:	ldrb	r1, [r6, #24]
    8690:	cmp	r1, #73	; 0x49
    8694:	bne	875c <accel_post_startup+0x2428>
    8698:	ldr	r1, [r6, #16]
    869c:	cmp	r1, #1
    86a0:	beq	875c <accel_post_startup+0x2428>
    86a4:	ldrb	r2, [r6, #25]
    86a8:	cmp	r2, #1
    86ac:	bne	875c <accel_post_startup+0x2428>
    86b0:	ldr	r1, [r6, #4]
    86b4:	ldrb	r2, [r1, #8]
    86b8:	and	r2, r2, #255	; 0xff
    86bc:	cmp	r2, #6
    86c0:	bne	875c <accel_post_startup+0x2428>
    86c4:	ldr	r0, [r1]
    86c8:	bl	a52c <preload_resolve_path>
    86cc:	str	r0, [sp, #24]
    86d0:	ldr	r2, [sp, #24]
    86d4:	cmp	r2, #0
    86d8:	beq	8788 <accel_post_startup+0x2454>
    86dc:	ldr	ip, [pc, #2672]	; 9154 <accel_post_startup+0x2e20>
    86e0:	ldr	r0, [ip]
    86e4:	ldr	r1, [sp, #24]
    86e8:	bl	0 <zend_hash_find>
    86ec:	cmp	r0, #0
    86f0:	beq	86fc <accel_post_startup+0x23c8>
    86f4:	ldr	fp, [r0]
    86f8:	b	8700 <accel_post_startup+0x23cc>
    86fc:	mov	fp, #0
    8700:	ldr	r0, [sp, #24]
    8704:	ldr	r1, [r0, #4]
    8708:	and	r1, r1, #64	; 0x40
    870c:	cmp	r1, #0
    8710:	bne	8744 <accel_post_startup+0x2410>
    8714:	ldr	r1, [r0]
    8718:	sub	ip, r1, #1
    871c:	str	ip, [r0]
    8720:	cmp	ip, #0
    8724:	bne	8744 <accel_post_startup+0x2410>
    8728:	ldr	r1, [r0, #4]
    872c:	and	r2, r1, #128	; 0x80
    8730:	cmp	r2, #0
    8734:	bne	8740 <accel_post_startup+0x240c>
    8738:	bl	0 <_efree>
    873c:	b	8744 <accel_post_startup+0x2410>
    8740:	bl	0 <free>
    8744:	cmp	fp, #0
    8748:	beq	8788 <accel_post_startup+0x2454>
    874c:	ldrb	ip, [fp, #246]	; 0xf6
    8750:	cmp	ip, #0
    8754:	beq	8788 <accel_post_startup+0x2454>
    8758:	b	8778 <accel_post_startup+0x2444>
    875c:	ldrb	r0, [r6, #24]
    8760:	cmp	r0, #0
    8764:	beq	8778 <accel_post_startup+0x2444>
    8768:	cmp	r0, #62	; 0x3e
    876c:	beq	8778 <accel_post_startup+0x2444>
    8770:	cmp	r0, #149	; 0x95
    8774:	bne	8788 <accel_post_startup+0x2454>
    8778:	add	r6, r6, #28
    877c:	b	8684 <accel_post_startup+0x2350>
    8780:	cmp	r4, #0
    8784:	bne	8794 <accel_post_startup+0x2460>
    8788:	mov	ip, #0
    878c:	strb	ip, [r7, #246]	; 0xf6
    8790:	mov	r9, #1
    8794:	add	r8, r8, #24
    8798:	b	8644 <accel_post_startup+0x2310>
    879c:	cmp	r9, #0
    87a0:	bne	8624 <accel_post_startup+0x22f0>
    87a4:	ldr	r2, [pc, #2472]	; 9154 <accel_post_startup+0x2e20>
    87a8:	ldr	r2, [r2]
    87ac:	ldr	r7, [r2, #16]
    87b0:	ldr	r0, [r2, #20]
    87b4:	lsl	r3, r0, #4
    87b8:	add	r3, r3, r0, lsl #3
    87bc:	add	r8, r7, r3
    87c0:	cmp	r7, r8
    87c4:	beq	899c <accel_post_startup+0x2668>
    87c8:	mov	r1, r7
    87cc:	ldrb	ip, [r1, #8]
    87d0:	and	ip, ip, #255	; 0xff
    87d4:	cmp	ip, #0
    87d8:	beq	8994 <accel_post_startup+0x2660>
    87dc:	ldr	r2, [r7]
    87e0:	ldr	r5, [r2, #52]	; 0x34
    87e4:	mov	r3, #28
    87e8:	ldr	ip, [r2, #48]	; 0x30
    87ec:	mla	r4, r3, ip, r5
    87f0:	cmp	r5, r4
    87f4:	bcs	8994 <accel_post_startup+0x2660>
    87f8:	ldrb	ip, [r5, #24]
    87fc:	cmp	ip, #73	; 0x49
    8800:	bne	898c <accel_post_startup+0x2658>
    8804:	ldr	r3, [r5, #16]
    8808:	cmp	r3, #1
    880c:	beq	898c <accel_post_startup+0x2658>
    8810:	ldrb	r1, [r5, #25]
    8814:	cmp	r1, #1
    8818:	bne	898c <accel_post_startup+0x2658>
    881c:	ldr	r2, [r5, #4]
    8820:	ldrb	r3, [r2, #8]
    8824:	and	r3, r3, #255	; 0xff
    8828:	cmp	r3, #6
    882c:	bne	898c <accel_post_startup+0x2658>
    8830:	ldr	r0, [r2]
    8834:	bl	a52c <preload_resolve_path>
    8838:	mov	r6, r0
    883c:	cmp	r6, #0
    8840:	beq	898c <accel_post_startup+0x2658>
    8844:	ldr	r1, [pc, #2312]	; 9154 <accel_post_startup+0x2e20>
    8848:	ldr	r0, [r1]
    884c:	mov	r1, r6
    8850:	bl	0 <zend_hash_find>
    8854:	cmp	r0, #0
    8858:	beq	8864 <accel_post_startup+0x2530>
    885c:	ldr	r1, [r0]
    8860:	b	8868 <accel_post_startup+0x2534>
    8864:	mov	r1, #0
    8868:	cmp	r1, #0
    886c:	beq	88b8 <accel_post_startup+0x2584>
    8870:	ldrb	r0, [r1, #246]	; 0xf6
    8874:	cmp	r0, #0
    8878:	beq	88b8 <accel_post_startup+0x2584>
    887c:	mov	r3, #0
    8880:	str	r3, [r5, #4]
    8884:	mov	r1, #0
    8888:	str	r1, [r5, #8]
    888c:	mov	r3, #0
    8890:	str	r3, [r5, #12]
    8894:	mov	r3, #0
    8898:	strb	r3, [r5, #24]
    889c:	mov	r1, #0
    88a0:	strb	r1, [r5, #25]
    88a4:	mov	r1, #0
    88a8:	strb	r1, [r5, #26]
    88ac:	mov	r2, #0
    88b0:	strb	r2, [r5, #27]
    88b4:	b	8948 <accel_post_startup+0x2614>
    88b8:	ldr	r1, [r5, #4]
    88bc:	ldr	r0, [r1]
    88c0:	ldrb	r1, [r0, #16]
    88c4:	cmp	r1, #47	; 0x2f
    88c8:	beq	8948 <accel_post_startup+0x2614>
    88cc:	ldr	r1, [r0, #4]
    88d0:	and	r3, r1, #64	; 0x40
    88d4:	cmp	r3, #0
    88d8:	bne	890c <accel_post_startup+0x25d8>
    88dc:	ldr	r1, [r0]
    88e0:	sub	r1, r1, #1
    88e4:	str	r1, [r0]
    88e8:	cmp	r1, #0
    88ec:	bne	890c <accel_post_startup+0x25d8>
    88f0:	ldr	r1, [r0, #4]
    88f4:	and	ip, r1, #128	; 0x80
    88f8:	cmp	ip, #0
    88fc:	bne	8908 <accel_post_startup+0x25d4>
    8900:	bl	0 <_efree>
    8904:	b	890c <accel_post_startup+0x25d8>
    8908:	bl	0 <free>
    890c:	ldr	ip, [r5, #4]
    8910:	mov	r1, r6
    8914:	str	r1, [ip]
    8918:	ldr	r2, [r1, #4]
    891c:	and	r2, r2, #64	; 0x40
    8920:	cmp	r2, #0
    8924:	bne	8940 <accel_post_startup+0x260c>
    8928:	ldr	r0, [r1]
    892c:	add	r0, r0, #1
    8930:	str	r0, [r1]
    8934:	movw	r0, #262	; 0x106
    8938:	str	r0, [ip, #8]
    893c:	b	8948 <accel_post_startup+0x2614>
    8940:	mov	r2, #6
    8944:	str	r2, [ip, #8]
    8948:	mov	r0, r6
    894c:	ldr	ip, [r0, #4]
    8950:	and	r2, ip, #64	; 0x40
    8954:	cmp	r2, #0
    8958:	bne	898c <accel_post_startup+0x2658>
    895c:	ldr	r1, [r0]
    8960:	sub	r3, r1, #1
    8964:	str	r3, [r0]
    8968:	cmp	r3, #0
    896c:	bne	898c <accel_post_startup+0x2658>
    8970:	ldr	r2, [r0, #4]
    8974:	and	r1, r2, #128	; 0x80
    8978:	cmp	r1, #0
    897c:	bne	8988 <accel_post_startup+0x2654>
    8980:	bl	0 <_efree>
    8984:	b	898c <accel_post_startup+0x2658>
    8988:	bl	0 <free>
    898c:	add	r5, r5, #28
    8990:	b	87f0 <accel_post_startup+0x24bc>
    8994:	add	r7, r7, #24
    8998:	b	87c0 <accel_post_startup+0x248c>
    899c:	ldr	r2, [pc, #1988]	; 9168 <accel_post_startup+0x2e34>
    89a0:	ldr	r0, [r2]
    89a4:	cmp	r0, #0
    89a8:	beq	8b5c <accel_post_startup+0x2828>
    89ac:	ldr	r1, [pc, #1952]	; 9154 <accel_post_startup+0x2e20>
    89b0:	ldr	r0, [r1]
    89b4:	ldr	r6, [r0, #16]
    89b8:	ldr	r0, [r0, #20]
    89bc:	lsl	ip, r0, #4
    89c0:	add	r3, ip, r0, lsl #3
    89c4:	add	r4, r6, r3
    89c8:	cmp	r6, r4
    89cc:	beq	8a40 <accel_post_startup+0x270c>
    89d0:	mov	r0, r6
    89d4:	ldrb	ip, [r0, #8]
    89d8:	and	r1, ip, #255	; 0xff
    89dc:	cmp	r1, #0
    89e0:	beq	8a38 <accel_post_startup+0x2704>
    89e4:	ldr	r7, [r6]
    89e8:	ldr	r1, [pc, #1920]	; 9170 <accel_post_startup+0x2e3c>
    89ec:	ldr	r5, [r1]
    89f0:	add	r0, sp, #192	; 0xc0
    89f4:	mov	r1, #0
    89f8:	mov	r2, #48	; 0x30
    89fc:	bl	0 <memset>
    8a00:	add	r2, r7, #4
    8a04:	str	r2, [sp, #204]	; 0xcc
    8a08:	ldr	r3, [pc, #1888]	; 9170 <accel_post_startup+0x2e3c>
    8a0c:	add	r0, sp, #192	; 0xc0
    8a10:	str	r0, [r3]
    8a14:	ldr	r0, [pc, #1832]	; 9144 <accel_post_startup+0x2e10>
    8a18:	mov	r1, #24
    8a1c:	bl	0 <zend_get_constant_str>
    8a20:	cmp	r0, #0
    8a24:	beq	8a30 <accel_post_startup+0x26fc>
    8a28:	ldr	r3, [r0]
    8a2c:	str	r3, [r7, #232]	; 0xe8
    8a30:	ldr	r2, [pc, #1848]	; 9170 <accel_post_startup+0x2e3c>
    8a34:	str	r5, [r2]
    8a38:	add	r6, r6, #24
    8a3c:	b	89c8 <accel_post_startup+0x2694>
    8a40:	ldr	r2, [pc, #1824]	; 9168 <accel_post_startup+0x2e34>
    8a44:	ldr	r5, [r2]
    8a48:	ldr	r4, [r5, #20]
    8a4c:	ldr	r2, [r5, #16]
    8a50:	lsl	ip, r4, #4
    8a54:	add	r3, ip, r4, lsl #3
    8a58:	add	r6, r2, r3
    8a5c:	cmp	r4, #0
    8a60:	bls	8b58 <accel_post_startup+0x2824>
    8a64:	sub	r6, r6, #24
    8a68:	mov	r0, r6
    8a6c:	ldrb	r0, [r0, #8]
    8a70:	and	r0, r0, #255	; 0xff
    8a74:	cmp	r0, #0
    8a78:	beq	8b50 <accel_post_startup+0x281c>
    8a7c:	ldr	r7, [r6, #20]
    8a80:	mov	r0, r6
    8a84:	ldr	r1, [r0]
    8a88:	ldr	r3, [r1, #12]
    8a8c:	and	ip, r3, #2
    8a90:	cmp	ip, #0
    8a94:	bne	8b58 <accel_post_startup+0x2824>
    8a98:	ldr	r1, [pc, #1736]	; 9168 <accel_post_startup+0x2e34>
    8a9c:	ldr	r3, [r1]
    8aa0:	ldr	ip, [r3, #40]	; 0x28
    8aa4:	blx	ip
    8aa8:	mov	r0, r7
    8aac:	ldr	r1, [r0, #4]
    8ab0:	and	r2, r1, #64	; 0x40
    8ab4:	cmp	r2, #0
    8ab8:	bne	8aec <accel_post_startup+0x27b8>
    8abc:	ldr	ip, [r0]
    8ac0:	sub	ip, ip, #1
    8ac4:	str	ip, [r0]
    8ac8:	cmp	ip, #0
    8acc:	bne	8aec <accel_post_startup+0x27b8>
    8ad0:	ldr	r1, [r0, #4]
    8ad4:	and	r1, r1, #128	; 0x80
    8ad8:	cmp	r1, #0
    8adc:	bne	8ae8 <accel_post_startup+0x27b4>
    8ae0:	bl	0 <_efree>
    8ae4:	b	8aec <accel_post_startup+0x27b8>
    8ae8:	bl	0 <free>
    8aec:	ldr	r1, [r5, #24]
    8af0:	sub	r3, r1, #1
    8af4:	str	r3, [r5, #24]
    8af8:	lsl	r2, r4, #4
    8afc:	add	r3, r2, r4, lsl #3
    8b00:	sub	r2, r3, #24
    8b04:	ldr	r3, [r6, #16]
    8b08:	ldr	ip, [r5, #12]
    8b0c:	orr	r1, r3, ip
    8b10:	ldr	r3, [r5, #16]
    8b14:	ldr	r0, [r3, r1, lsl #2]
    8b18:	cmp	r2, r0
    8b1c:	beq	8b48 <accel_post_startup+0x2814>
    8b20:	add	r1, r3, r0
    8b24:	ldr	r0, [r1, #12]
    8b28:	cmp	r0, r2
    8b2c:	beq	8b3c <accel_post_startup+0x2808>
    8b30:	ldr	r1, [r5, #16]
    8b34:	add	r1, r1, r0
    8b38:	b	8b24 <accel_post_startup+0x27f0>
    8b3c:	ldr	r2, [r6, #12]
    8b40:	str	r2, [r1, #12]
    8b44:	b	8b50 <accel_post_startup+0x281c>
    8b48:	ldr	ip, [r6, #12]
    8b4c:	str	ip, [r3, r1, lsl #2]
    8b50:	sub	r4, r4, #1
    8b54:	b	8a5c <accel_post_startup+0x2728>
    8b58:	str	r4, [r5, #20]
    8b5c:	bl	0 <create_persistent_script>
    8b60:	mov	sl, r0
    8b64:	ldr	r0, [sp, #40]	; 0x28
    8b68:	str	r0, [sl, #236]	; 0xec
    8b6c:	ldr	r0, [pc, #1492]	; 9148 <accel_post_startup+0x2e14>
    8b70:	bl	0 <strlen>
    8b74:	mov	r4, r0
    8b78:	ldr	r5, [pc, #1480]	; 9148 <accel_post_startup+0x2e14>
    8b7c:	add	r2, r4, #24
    8b80:	bic	r0, r2, #7
    8b84:	bl	0 <_emalloc>
    8b88:	mov	ip, #1
    8b8c:	str	ip, [r0]
    8b90:	mov	ip, #0
    8b94:	orr	r3, ip, #6
    8b98:	str	r3, [r0, #4]
    8b9c:	mov	r1, #0
    8ba0:	str	r1, [r0, #8]
    8ba4:	str	r4, [r0, #12]
    8ba8:	str	r0, [sp, #36]	; 0x24
    8bac:	ldr	r3, [sp, #36]	; 0x24
    8bb0:	add	r0, r3, #16
    8bb4:	mov	r2, r4
    8bb8:	mov	r1, r5
    8bbc:	bl	0 <memcpy>
    8bc0:	ldr	r3, [sp, #36]	; 0x24
    8bc4:	add	r0, r3, r4
    8bc8:	mov	r1, #0
    8bcc:	strb	r1, [r0, #16]
    8bd0:	add	r0, sl, #4
    8bd4:	mov	r1, #2
    8bd8:	mov	r2, #1
    8bdc:	bl	0 <init_op_array>
    8be0:	mov	r0, #1
    8be4:	str	r0, [sl, #48]	; 0x30
    8be8:	mov	r3, #1
    8bec:	str	r3, [sl, #108]	; 0x6c
    8bf0:	bl	0 <_emalloc_16>
    8bf4:	str	r0, [sl, #112]	; 0x70
    8bf8:	mov	r3, #1
    8bfc:	str	r3, [r0, #8]
    8c00:	ldr	r0, [sl, #52]	; 0x34
    8c04:	mov	r1, #0
    8c08:	mov	r2, #28
    8c0c:	bl	0 <memset>
    8c10:	ldr	r3, [sl, #52]	; 0x34
    8c14:	mov	r2, #62	; 0x3e
    8c18:	strb	r2, [r3, #24]
    8c1c:	ldr	ip, [sl, #52]	; 0x34
    8c20:	mov	r3, #1
    8c24:	strb	r3, [ip, #25]
    8c28:	ldr	r2, [sl, #52]	; 0x34
    8c2c:	mov	r3, #0
    8c30:	str	r3, [r2, #4]
    8c34:	ldr	r3, [sl, #52]	; 0x34
    8c38:	ldr	r1, [sl, #112]	; 0x70
    8c3c:	ldr	ip, [r3, #4]
    8c40:	add	r0, r1, ip, lsl #4
    8c44:	str	r0, [r3, #4]
    8c48:	ldr	r1, [sp, #36]	; 0x24
    8c4c:	str	r1, [sl, #92]	; 0x5c
    8c50:	ldr	r3, [sp, #36]	; 0x24
    8c54:	ldr	r2, [r3, #4]
    8c58:	and	ip, r2, #64	; 0x40
    8c5c:	cmp	ip, #0
    8c60:	bne	8c70 <accel_post_startup+0x293c>
    8c64:	ldr	r0, [r3]
    8c68:	add	r1, r0, #1
    8c6c:	str	r1, [r3]
    8c70:	mov	ip, r3
    8c74:	str	ip, [sl]
    8c78:	mvn	ip, #0
    8c7c:	str	ip, [sl, #228]	; 0xe4
    8c80:	ldr	r0, [pc, #1220]	; 914c <accel_post_startup+0x2e18>
    8c84:	ldr	fp, [r0]
    8c88:	add	r3, sl, #140	; 0x8c
    8c8c:	str	r3, [sp, #24]
    8c90:	ldr	r2, [fp, #40]	; 0x28
    8c94:	str	r2, [sp, #44]	; 0x2c
    8c98:	mov	ip, #0
    8c9c:	str	ip, [sp, #28]
    8ca0:	mov	r5, #0
    8ca4:	mov	ip, #0
    8ca8:	str	ip, [fp, #40]	; 0x28
    8cac:	ldr	r1, [sl, #160]	; 0xa0
    8cb0:	ldr	r3, [fp, #20]
    8cb4:	add	r1, r1, r3
    8cb8:	mov	r2, #0
    8cbc:	ldr	r0, [sp, #24]
    8cc0:	bl	0 <zend_hash_extend>
    8cc4:	ldr	r6, [fp, #20]
    8cc8:	ldr	ip, [fp, #16]
    8ccc:	lsl	r3, r6, #4
    8cd0:	add	r0, r3, r6, lsl #3
    8cd4:	add	r1, ip, r0
    8cd8:	str	r1, [sp, #32]
    8cdc:	cmp	r6, #0
    8ce0:	bls	8e5c <accel_post_startup+0x2b28>
    8ce4:	ldr	r3, [sp, #32]
    8ce8:	sub	ip, r3, #24
    8cec:	str	ip, [sp, #32]
    8cf0:	ldr	r2, [sp, #32]
    8cf4:	ldrb	ip, [r2, #8]
    8cf8:	and	ip, ip, #255	; 0xff
    8cfc:	cmp	ip, #0
    8d00:	beq	8e54 <accel_post_startup+0x2b20>
    8d04:	ldr	r0, [sp, #32]
    8d08:	str	r0, [sp, #40]	; 0x28
    8d0c:	ldr	r4, [r0]
    8d10:	ldrb	r1, [r4]
    8d14:	cmp	r1, #2
    8d18:	bne	8e5c <accel_post_startup+0x2b28>
    8d1c:	ldr	r0, [r4, #88]	; 0x58
    8d20:	ldr	r1, [sp, #28]
    8d24:	cmp	r0, r1
    8d28:	beq	8d68 <accel_post_startup+0x2a34>
    8d2c:	str	r0, [sp, #28]
    8d30:	ldr	r3, [sp, #28]
    8d34:	cmp	r3, #0
    8d38:	beq	8d60 <accel_post_startup+0x2a2c>
    8d3c:	ldr	ip, [pc, #1040]	; 9154 <accel_post_startup+0x2e20>
    8d40:	ldr	r0, [ip]
    8d44:	ldr	r1, [sp, #28]
    8d48:	bl	0 <zend_hash_find>
    8d4c:	cmp	r0, #0
    8d50:	movne	r1, #1
    8d54:	moveq	r1, #0
    8d58:	and	r5, r1, #255	; 0xff
    8d5c:	b	8d68 <accel_post_startup+0x2a34>
    8d60:	mov	r5, #0
    8d64:	b	8e3c <accel_post_startup+0x2b08>
    8d68:	cmp	r5, #0
    8d6c:	beq	8e3c <accel_post_startup+0x2b08>
    8d70:	ldr	r3, [sp, #40]	; 0x28
    8d74:	ldr	r2, [r3, #20]
    8d78:	mov	ip, r4
    8d7c:	mov	r4, r2
    8d80:	ldr	r7, [sp, #24]
    8d84:	ldr	r9, [r7, #20]
    8d88:	add	r2, r9, #1
    8d8c:	str	r2, [r7, #20]
    8d90:	ldr	r0, [r7, #16]
    8d94:	lsl	r1, r9, #4
    8d98:	add	r1, r1, r9, lsl #3
    8d9c:	add	r8, r0, r1
    8da0:	str	ip, [r8]
    8da4:	mov	r2, #14
    8da8:	str	r2, [r8, #8]
    8dac:	ldr	ip, [r4, #4]
    8db0:	and	r3, ip, #64	; 0x40
    8db4:	cmp	r3, #0
    8db8:	bne	8dfc <accel_post_startup+0x2ac8>
    8dbc:	ldr	r0, [r7, #8]
    8dc0:	bic	r0, r0, #16
    8dc4:	str	r0, [r7, #8]
    8dc8:	ldr	r1, [r4, #4]
    8dcc:	and	r2, r1, #64	; 0x40
    8dd0:	cmp	r2, #0
    8dd4:	bne	8de8 <accel_post_startup+0x2ab4>
    8dd8:	mov	r0, r4
    8ddc:	ldr	r1, [r0]
    8de0:	add	r3, r1, #1
    8de4:	str	r3, [r0]
    8de8:	ldr	r1, [r4, #8]
    8dec:	cmp	r1, #0
    8df0:	bne	8dfc <accel_post_startup+0x2ac8>
    8df4:	mov	r0, r4
    8df8:	bl	0 <zend_string_hash_func>
    8dfc:	str	r4, [r8, #20]
    8e00:	ldr	ip, [r4, #8]
    8e04:	str	ip, [r8, #16]
    8e08:	ldr	r1, [r7, #12]
    8e0c:	orr	r1, ip, r1
    8e10:	ldr	r3, [r7, #16]
    8e14:	ldr	r0, [r3, r1, lsl #2]
    8e18:	str	r0, [r8, #12]
    8e1c:	ldr	r2, [r7, #16]
    8e20:	lsl	r3, r9, #4
    8e24:	add	r3, r3, r9, lsl #3
    8e28:	str	r3, [r2, r1, lsl #2]
    8e2c:	ldr	ip, [r7, #24]
    8e30:	add	r2, ip, #1
    8e34:	str	r2, [r7, #24]
    8e38:	b	8e48 <accel_post_startup+0x2b14>
    8e3c:	ldr	r0, [sp, #40]	; 0x28
    8e40:	ldr	ip, [sp, #44]	; 0x2c
    8e44:	blx	ip
    8e48:	ldr	r1, [sp, #40]	; 0x28
    8e4c:	mov	r0, fp
    8e50:	bl	0 <zend_hash_del_bucket>
    8e54:	sub	r6, r6, #1
    8e58:	b	8cdc <accel_post_startup+0x29a8>
    8e5c:	ldr	r0, [sp, #44]	; 0x2c
    8e60:	str	r0, [fp, #40]	; 0x28
    8e64:	ldr	ip, [pc, #752]	; 915c <accel_post_startup+0x2e28>
    8e68:	ldr	fp, [ip]
    8e6c:	add	ip, sl, #184	; 0xb8
    8e70:	str	ip, [sp, #24]
    8e74:	ldr	r2, [fp, #40]	; 0x28
    8e78:	str	r2, [sp, #44]	; 0x2c
    8e7c:	mov	r0, #0
    8e80:	str	r0, [sp, #28]
    8e84:	mov	r9, #0
    8e88:	mov	r0, #0
    8e8c:	str	r0, [fp, #40]	; 0x28
    8e90:	ldr	r0, [sl, #204]	; 0xcc
    8e94:	ldr	ip, [fp, #20]
    8e98:	add	r1, r0, ip
    8e9c:	mov	r2, #0
    8ea0:	ldr	r0, [sp, #24]
    8ea4:	bl	0 <zend_hash_extend>
    8ea8:	ldr	r8, [fp, #20]
    8eac:	ldr	r3, [fp, #16]
    8eb0:	lsl	ip, r8, #4
    8eb4:	add	r0, ip, r8, lsl #3
    8eb8:	add	r2, r3, r0
    8ebc:	str	r2, [sp, #32]
    8ec0:	cmp	r8, #0
    8ec4:	bls	9040 <accel_post_startup+0x2d0c>
    8ec8:	ldr	r0, [sp, #32]
    8ecc:	sub	r1, r0, #24
    8ed0:	str	r1, [sp, #32]
    8ed4:	ldr	r2, [sp, #32]
    8ed8:	ldrb	r2, [r2, #8]
    8edc:	and	r0, r2, #255	; 0xff
    8ee0:	cmp	r0, #0
    8ee4:	beq	9038 <accel_post_startup+0x2d04>
    8ee8:	ldr	ip, [sp, #32]
    8eec:	str	ip, [sp, #40]	; 0x28
    8ef0:	ldr	r4, [ip]
    8ef4:	ldrb	r0, [r4]
    8ef8:	cmp	r0, #2
    8efc:	bne	9040 <accel_post_startup+0x2d0c>
    8f00:	ldr	r2, [r4, #276]	; 0x114
    8f04:	ldr	r3, [sp, #28]
    8f08:	cmp	r2, r3
    8f0c:	beq	8f4c <accel_post_startup+0x2c18>
    8f10:	str	r2, [sp, #28]
    8f14:	ldr	r2, [sp, #28]
    8f18:	cmp	r2, #0
    8f1c:	beq	8f44 <accel_post_startup+0x2c10>
    8f20:	ldr	ip, [pc, #556]	; 9154 <accel_post_startup+0x2e20>
    8f24:	ldr	r0, [ip]
    8f28:	ldr	r1, [sp, #28]
    8f2c:	bl	0 <zend_hash_find>
    8f30:	cmp	r0, #0
    8f34:	movne	r1, #1
    8f38:	moveq	r1, #0
    8f3c:	and	r9, r1, #255	; 0xff
    8f40:	b	8f4c <accel_post_startup+0x2c18>
    8f44:	mov	r9, #0
    8f48:	b	9020 <accel_post_startup+0x2cec>
    8f4c:	cmp	r9, #0
    8f50:	beq	9020 <accel_post_startup+0x2cec>
    8f54:	ldr	r0, [sp, #40]	; 0x28
    8f58:	ldr	r3, [r0, #20]
    8f5c:	mov	r0, r4
    8f60:	mov	r6, r3
    8f64:	ldr	r7, [sp, #24]
    8f68:	ldr	r4, [r7, #20]
    8f6c:	add	ip, r4, #1
    8f70:	str	ip, [r7, #20]
    8f74:	ldr	r2, [r7, #16]
    8f78:	lsl	r3, r4, #4
    8f7c:	add	ip, r3, r4, lsl #3
    8f80:	add	r5, r2, ip
    8f84:	str	r0, [r5]
    8f88:	mov	r0, #14
    8f8c:	str	r0, [r5, #8]
    8f90:	ldr	r2, [r6, #4]
    8f94:	and	r3, r2, #64	; 0x40
    8f98:	cmp	r3, #0
    8f9c:	bne	8fe0 <accel_post_startup+0x2cac>
    8fa0:	ldr	r1, [r7, #8]
    8fa4:	bic	r1, r1, #16
    8fa8:	str	r1, [r7, #8]
    8fac:	ldr	ip, [r6, #4]
    8fb0:	and	r1, ip, #64	; 0x40
    8fb4:	cmp	r1, #0
    8fb8:	bne	8fcc <accel_post_startup+0x2c98>
    8fbc:	mov	r1, r6
    8fc0:	ldr	r2, [r1]
    8fc4:	add	r2, r2, #1
    8fc8:	str	r2, [r1]
    8fcc:	ldr	r3, [r6, #8]
    8fd0:	cmp	r3, #0
    8fd4:	bne	8fe0 <accel_post_startup+0x2cac>
    8fd8:	mov	r0, r6
    8fdc:	bl	0 <zend_string_hash_func>
    8fe0:	str	r6, [r5, #20]
    8fe4:	ldr	r2, [r6, #8]
    8fe8:	str	r2, [r5, #16]
    8fec:	ldr	r0, [r7, #12]
    8ff0:	orr	ip, r2, r0
    8ff4:	ldr	r0, [r7, #16]
    8ff8:	ldr	r0, [r0, ip, lsl #2]
    8ffc:	str	r0, [r5, #12]
    9000:	ldr	r3, [r7, #16]
    9004:	lsl	r0, r4, #4
    9008:	add	r0, r0, r4, lsl #3
    900c:	str	r0, [r3, ip, lsl #2]
    9010:	ldr	r0, [r7, #24]
    9014:	add	r3, r0, #1
    9018:	str	r3, [r7, #24]
    901c:	b	902c <accel_post_startup+0x2cf8>
    9020:	ldr	r0, [sp, #40]	; 0x28
    9024:	ldr	ip, [sp, #44]	; 0x2c
    9028:	blx	ip
    902c:	ldr	r1, [sp, #40]	; 0x28
    9030:	mov	r0, fp
    9034:	bl	0 <zend_hash_del_bucket>
    9038:	sub	r8, r8, #1
    903c:	b	8ec0 <accel_post_startup+0x2b8c>
    9040:	ldr	r2, [sp, #44]	; 0x2c
    9044:	str	r2, [fp, #40]	; 0x28
    9048:	add	r0, sl, #184	; 0xb8
    904c:	ldr	r1, [pc, #272]	; 9164 <accel_post_startup+0x2e30>
    9050:	mov	r2, #0
    9054:	mov	r3, #0
    9058:	bl	0 <zend_hash_sort_ex>
    905c:	mov	r5, sl
    9060:	bl	0 <zend_shared_alloc_init_xlat_table>
    9064:	ldr	r4, [r5, #200]	; 0xc8
    9068:	ldr	r0, [r5, #204]	; 0xcc
    906c:	lsl	r2, r0, #4
    9070:	add	r2, r2, r0, lsl #3
    9074:	add	r6, r4, r2
    9078:	cmp	r4, r6
    907c:	beq	90b4 <accel_post_startup+0x2d80>
    9080:	mov	r2, r4
    9084:	ldrb	r3, [r2, #8]
    9088:	and	r1, r3, #255	; 0xff
    908c:	cmp	r1, #0
    9090:	beq	90ac <accel_post_startup+0x2d78>
    9094:	ldr	r0, [r4]
    9098:	ldr	r3, [r0, #16]
    909c:	and	r1, r3, #2
    90a0:	cmp	r1, #0
    90a4:	beq	90ac <accel_post_startup+0x2d78>
    90a8:	bl	a614 <preload_register_trait_methods>
    90ac:	add	r4, r4, #24
    90b0:	b	9078 <accel_post_startup+0x2d44>
    90b4:	ldr	ip, [pc, #152]	; 9154 <accel_post_startup+0x2e20>
    90b8:	ldr	r3, [ip]
    90bc:	ldr	r4, [r3, #16]
    90c0:	ldr	r1, [r3, #20]
    90c4:	lsl	r3, r1, #4
    90c8:	add	r0, r3, r1, lsl #3
    90cc:	add	r7, r4, r0
    90d0:	cmp	r4, r7
    90d4:	beq	918c <accel_post_startup+0x2e58>
    90d8:	mov	r1, r4
    90dc:	ldrb	ip, [r1, #8]
    90e0:	and	r0, ip, #255	; 0xff
    90e4:	cmp	r0, #0
    90e8:	beq	9184 <accel_post_startup+0x2e50>
    90ec:	ldr	r5, [r4]
    90f0:	ldr	r6, [r5, #200]	; 0xc8
    90f4:	ldr	ip, [r5, #204]	; 0xcc
    90f8:	lsl	r3, ip, #4
    90fc:	add	r1, r3, ip, lsl #3
    9100:	add	r8, r6, r1
    9104:	cmp	r6, r8
    9108:	beq	9184 <accel_post_startup+0x2e50>
    910c:	mov	r2, r6
    9110:	ldrb	r2, [r2, #8]
    9114:	and	r1, r2, #255	; 0xff
    9118:	cmp	r1, #0
    911c:	beq	9138 <accel_post_startup+0x2e04>
    9120:	ldr	r0, [r6]
    9124:	ldr	r3, [r0, #16]
    9128:	and	r1, r3, #2
    912c:	cmp	r1, #0
    9130:	beq	9138 <accel_post_startup+0x2e04>
    9134:	bl	a614 <preload_register_trait_methods>
    9138:	add	r6, r6, #24
    913c:	b	9104 <accel_post_startup+0x2dd0>
    9140:	.word	0x00000a78
    9144:	.word	0x000009fc
    9148:	.word	0x00000b90
    914c:	.word	0x00000020
    9150:	.word	0x00000220
    9154:	.word	0x0000004c
    9158:	.word	0x00000069
    915c:	.word	0x00000024
    9160:	.word	0x000004b9
    9164:	.word	0x00000000
    9168:	.word	0x00000114
    916c:	.word	0x00000936
    9170:	.word	0x00000128
    9174:	.word	0x00000bc2
    9178:	.word	0x00000100
    917c:	.word	0x00000110
    9180:	.word	0x00000699
    9184:	add	r4, r4, #24
    9188:	b	90d0 <accel_post_startup+0x2d9c>
    918c:	ldr	r3, [pc, #1452]	; 9740 <accel_post_startup+0x340c>
    9190:	ldr	r1, [r3]
    9194:	ldr	r2, [pc, #1488]	; 976c <accel_post_startup+0x3438>
    9198:	ldr	r2, [r2]
    919c:	mov	r0, r5
    91a0:	bl	0 <zend_optimize_script>
    91a4:	cmp	r0, #0
    91a8:	bne	91b4 <accel_post_startup+0x2e80>
    91ac:	mvn	r2, #0
    91b0:	b	9308 <accel_post_startup+0x2fd4>
    91b4:	ldr	r4, [r5, #200]	; 0xc8
    91b8:	ldr	r2, [r5, #204]	; 0xcc
    91bc:	lsl	r3, r2, #4
    91c0:	add	r2, r3, r2, lsl #3
    91c4:	add	r5, r4, r2
    91c8:	cmp	r4, r5
    91cc:	beq	9204 <accel_post_startup+0x2ed0>
    91d0:	mov	r0, r4
    91d4:	ldrb	ip, [r0, #8]
    91d8:	and	r3, ip, #255	; 0xff
    91dc:	cmp	r3, #0
    91e0:	beq	91fc <accel_post_startup+0x2ec8>
    91e4:	ldr	r0, [r4]
    91e8:	ldr	r1, [r0, #16]
    91ec:	and	ip, r1, #32768	; 0x8000
    91f0:	cmp	ip, #0
    91f4:	beq	91fc <accel_post_startup+0x2ec8>
    91f8:	bl	a694 <preload_fix_trait_methods>
    91fc:	add	r4, r4, #24
    9200:	b	91c8 <accel_post_startup+0x2e94>
    9204:	ldr	r2, [pc, #1336]	; 9744 <accel_post_startup+0x3410>
    9208:	ldr	ip, [r2]
    920c:	ldr	r5, [ip, #16]
    9210:	ldr	ip, [ip, #20]
    9214:	lsl	r1, ip, #4
    9218:	add	r1, r1, ip, lsl #3
    921c:	add	r7, r5, r1
    9220:	cmp	r5, r7
    9224:	beq	9298 <accel_post_startup+0x2f64>
    9228:	mov	ip, r5
    922c:	ldrb	r0, [ip, #8]
    9230:	and	r1, r0, #255	; 0xff
    9234:	cmp	r1, #0
    9238:	beq	9290 <accel_post_startup+0x2f5c>
    923c:	ldr	r2, [r5]
    9240:	ldr	r4, [r2, #200]	; 0xc8
    9244:	ldr	r3, [r2, #204]	; 0xcc
    9248:	lsl	r0, r3, #4
    924c:	add	r3, r0, r3, lsl #3
    9250:	add	r6, r4, r3
    9254:	cmp	r4, r6
    9258:	beq	9290 <accel_post_startup+0x2f5c>
    925c:	mov	r1, r4
    9260:	ldrb	r1, [r1, #8]
    9264:	and	r2, r1, #255	; 0xff
    9268:	cmp	r2, #0
    926c:	beq	9288 <accel_post_startup+0x2f54>
    9270:	ldr	r0, [r4]
    9274:	ldr	r2, [r0, #16]
    9278:	and	ip, r2, #32768	; 0x8000
    927c:	cmp	ip, #0
    9280:	beq	9288 <accel_post_startup+0x2f54>
    9284:	bl	a694 <preload_fix_trait_methods>
    9288:	add	r4, r4, #24
    928c:	b	9254 <accel_post_startup+0x2f20>
    9290:	add	r5, r5, #24
    9294:	b	9220 <accel_post_startup+0x2eec>
    9298:	bl	0 <zend_shared_alloc_destroy_xlat_table>
    929c:	ldr	r1, [pc, #1184]	; 9744 <accel_post_startup+0x3410>
    92a0:	ldr	r2, [r1]
    92a4:	ldr	r4, [r2, #16]
    92a8:	ldr	r1, [r2, #20]
    92ac:	lsl	ip, r1, #4
    92b0:	add	r3, ip, r1, lsl #3
    92b4:	add	r5, r4, r3
    92b8:	cmp	r4, r5
    92bc:	beq	9304 <accel_post_startup+0x2fd0>
    92c0:	mov	r3, r4
    92c4:	ldrb	r1, [r3, #8]
    92c8:	and	r2, r1, #255	; 0xff
    92cc:	cmp	r2, #0
    92d0:	beq	92fc <accel_post_startup+0x2fc8>
    92d4:	ldr	r0, [r4]
    92d8:	ldr	ip, [pc, #1120]	; 9740 <accel_post_startup+0x340c>
    92dc:	ldr	r1, [ip]
    92e0:	ldr	r2, [pc, #1156]	; 976c <accel_post_startup+0x3438>
    92e4:	ldr	r2, [r2]
    92e8:	bl	0 <zend_optimize_script>
    92ec:	cmp	r0, #0
    92f0:	bne	92fc <accel_post_startup+0x2fc8>
    92f4:	mvn	r2, #0
    92f8:	b	9308 <accel_post_startup+0x2fd4>
    92fc:	add	r4, r4, #24
    9300:	b	92b8 <accel_post_startup+0x2f84>
    9304:	mov	r2, #0
    9308:	cmp	r2, #0
    930c:	beq	9324 <accel_post_startup+0x2ff0>
    9310:	mov	r0, #0
    9314:	ldr	r1, [pc, #1112]	; 9774 <accel_post_startup+0x3440>
    9318:	bl	0 <zend_accel_error>
    931c:	mvn	ip, #0
    9320:	b	95f4 <accel_post_startup+0x32c0>
    9324:	bl	0 <zend_shared_alloc_init_xlat_table>
    9328:	ldr	r1, [pc, #1052]	; 974c <accel_post_startup+0x3418>
    932c:	ldr	r2, [r1]
    9330:	add	r2, r2, #1
    9334:	str	r2, [r1]
    9338:	ldr	r3, [pc, #1020]	; 973c <accel_post_startup+0x3408>
    933c:	ldrb	r0, [r3]
    9340:	cmp	r0, #0
    9344:	beq	9350 <accel_post_startup+0x301c>
    9348:	mov	r0, #0
    934c:	bl	0 <zend_accel_shared_protect>
    9350:	ldr	r9, [sl, #200]	; 0xc8
    9354:	ldr	r0, [sl, #204]	; 0xcc
    9358:	lsl	ip, r0, #4
    935c:	add	r3, ip, r0, lsl #3
    9360:	add	r5, r9, r3
    9364:	cmp	r9, r5
    9368:	beq	93f8 <accel_post_startup+0x30c4>
    936c:	mov	ip, r9
    9370:	ldrb	ip, [ip, #8]
    9374:	and	ip, ip, #255	; 0xff
    9378:	cmp	ip, #0
    937c:	beq	93f0 <accel_post_startup+0x30bc>
    9380:	ldr	ip, [r9]
    9384:	ldr	r6, [ip, #56]	; 0x38
    9388:	ldr	r0, [ip, #60]	; 0x3c
    938c:	lsl	ip, r0, #4
    9390:	add	r0, ip, r0, lsl #3
    9394:	add	r4, r6, r0
    9398:	cmp	r6, r4
    939c:	beq	93f0 <accel_post_startup+0x30bc>
    93a0:	mov	r2, r6
    93a4:	ldrb	ip, [r2, #8]
    93a8:	and	r1, ip, #255	; 0xff
    93ac:	cmp	r1, #0
    93b0:	beq	93e8 <accel_post_startup+0x30b4>
    93b4:	ldr	r8, [r6]
    93b8:	ldr	r0, [r8, #8]
    93bc:	bl	0 <zend_shared_alloc_get_xlat_entry>
    93c0:	mov	r7, r0
    93c4:	cmp	r7, #0
    93c8:	bne	93e4 <accel_post_startup+0x30b0>
    93cc:	ldr	r0, [r8, #8]
    93d0:	bl	28c <accel_new_interned_string>
    93d4:	mov	r7, r0
    93d8:	ldr	r0, [r8, #8]
    93dc:	mov	r1, r7
    93e0:	bl	0 <zend_shared_alloc_register_xlat_entry>
    93e4:	str	r7, [r8, #8]
    93e8:	add	r6, r6, #24
    93ec:	b	9398 <accel_post_startup+0x3064>
    93f0:	add	r9, r9, #24
    93f4:	b	9364 <accel_post_startup+0x3030>
    93f8:	mov	r0, sl
    93fc:	bl	a778 <preload_script_in_shared_memory>
    9400:	ldr	r1, [pc, #896]	; 9788 <accel_post_startup+0x3454>
    9404:	ldr	r3, [r1]
    9408:	str	r0, [r3, #72]	; 0x48
    940c:	ldr	r1, [pc, #808]	; 973c <accel_post_startup+0x3408>
    9410:	ldrb	r3, [r1]
    9414:	cmp	r3, #0
    9418:	beq	9424 <accel_post_startup+0x30f0>
    941c:	mov	r0, #1
    9420:	bl	0 <zend_accel_shared_protect>
    9424:	ldr	r0, [pc, #800]	; 974c <accel_post_startup+0x3418>
    9428:	ldr	r3, [r0]
    942c:	sub	r2, r3, #1
    9430:	str	r2, [r0]
    9434:	ldr	r0, [pc, #828]	; 9778 <accel_post_startup+0x3444>
    9438:	ldr	r1, [r0]
    943c:	cmp	r3, r1
    9440:	bne	9448 <accel_post_startup+0x3114>
    9444:	bl	0 <zend_signal_handler_unblock>
    9448:	ldr	r0, [sp, #36]	; 0x24
    944c:	ldr	r3, [r0, #4]
    9450:	and	r1, r3, #64	; 0x40
    9454:	cmp	r1, #0
    9458:	bne	948c <accel_post_startup+0x3158>
    945c:	ldr	ip, [r0]
    9460:	sub	ip, ip, #1
    9464:	str	ip, [r0]
    9468:	cmp	ip, #0
    946c:	bne	948c <accel_post_startup+0x3158>
    9470:	ldr	r1, [r0, #4]
    9474:	and	r1, r1, #128	; 0x80
    9478:	cmp	r1, #0
    947c:	bne	9488 <accel_post_startup+0x3154>
    9480:	bl	0 <_efree>
    9484:	b	948c <accel_post_startup+0x3158>
    9488:	bl	0 <free>
    948c:	bl	a998 <preload_load>
    9490:	ldr	ip, [pc, #692]	; 974c <accel_post_startup+0x3418>
    9494:	ldr	r3, [ip]
    9498:	add	r0, r3, #1
    949c:	str	r0, [ip]
    94a0:	ldr	r1, [pc, #660]	; 973c <accel_post_startup+0x3408>
    94a4:	ldrb	r2, [r1]
    94a8:	cmp	r2, #0
    94ac:	beq	94b8 <accel_post_startup+0x3184>
    94b0:	mov	r0, #0
    94b4:	bl	0 <zend_accel_shared_protect>
    94b8:	mov	r8, #0
    94bc:	ldr	ip, [pc, #640]	; 9744 <accel_post_startup+0x3410>
    94c0:	ldr	r2, [ip]
    94c4:	ldr	r0, [r2, #24]
    94c8:	lsl	r2, r0, #2
    94cc:	add	r0, r2, #4
    94d0:	bl	0 <zend_shared_alloc>
    94d4:	ldr	r1, [pc, #684]	; 9788 <accel_post_startup+0x3454>
    94d8:	ldr	r2, [r1]
    94dc:	str	r0, [r2, #76]	; 0x4c
    94e0:	ldr	r0, [pc, #604]	; 9744 <accel_post_startup+0x3410>
    94e4:	ldr	ip, [r0]
    94e8:	ldr	r4, [ip, #16]
    94ec:	ldr	r1, [ip, #20]
    94f0:	lsl	ip, r1, #4
    94f4:	add	r0, ip, r1, lsl #3
    94f8:	add	r5, r4, r0
    94fc:	cmp	r4, r5
    9500:	beq	9564 <accel_post_startup+0x3230>
    9504:	mov	ip, r4
    9508:	ldrb	ip, [ip, #8]
    950c:	and	r3, ip, #255	; 0xff
    9510:	cmp	r3, #0
    9514:	beq	955c <accel_post_startup+0x3228>
    9518:	ldr	r6, [r4]
    951c:	ldr	r1, [r6, #208]	; 0xd0
    9520:	cmp	r1, #1
    9524:	bls	953c <accel_post_startup+0x3208>
    9528:	add	r0, r6, #184	; 0xb8
    952c:	ldr	r1, [pc, #548]	; 9758 <accel_post_startup+0x3424>
    9530:	mov	r2, #0
    9534:	mov	r3, #0
    9538:	bl	0 <zend_hash_sort_ex>
    953c:	mov	r7, r8
    9540:	add	r8, r7, #1
    9544:	mov	r0, r6
    9548:	bl	a778 <preload_script_in_shared_memory>
    954c:	ldr	ip, [pc, #564]	; 9788 <accel_post_startup+0x3454>
    9550:	ldr	r1, [ip]
    9554:	ldr	r1, [r1, #76]	; 0x4c
    9558:	str	r0, [r1, r7, lsl #2]
    955c:	add	r4, r4, #24
    9560:	b	94fc <accel_post_startup+0x31c8>
    9564:	ldr	r2, [pc, #540]	; 9788 <accel_post_startup+0x3454>
    9568:	ldr	r1, [r2]
    956c:	ldr	r1, [r1, #76]	; 0x4c
    9570:	mov	r2, #0
    9574:	str	r2, [r1, r8, lsl #2]
    9578:	bl	0 <zend_shared_alloc_save_state>
    957c:	bl	25c <accel_interned_strings_save_state>
    9580:	ldr	r1, [pc, #436]	; 973c <accel_post_startup+0x3408>
    9584:	ldrb	r3, [r1]
    9588:	cmp	r3, #0
    958c:	beq	9598 <accel_post_startup+0x3264>
    9590:	mov	r0, #1
    9594:	bl	0 <zend_accel_shared_protect>
    9598:	ldr	r3, [pc, #428]	; 974c <accel_post_startup+0x3418>
    959c:	ldr	r0, [r3]
    95a0:	sub	ip, r0, #1
    95a4:	str	ip, [r3]
    95a8:	ldr	r3, [pc, #456]	; 9778 <accel_post_startup+0x3444>
    95ac:	ldr	ip, [r3]
    95b0:	cmp	r0, ip
    95b4:	bne	95bc <accel_post_startup+0x3288>
    95b8:	bl	0 <zend_signal_handler_unblock>
    95bc:	bl	0 <zend_shared_alloc_destroy_xlat_table>
    95c0:	b	95cc <accel_post_startup+0x3298>
    95c4:	ldr	r3, [pc, #436]	; 9780 <accel_post_startup+0x344c>
    95c8:	str	fp, [r3]
    95cc:	ldr	r0, [pc, #368]	; 9744 <accel_post_startup+0x3410>
    95d0:	ldr	r0, [r0]
    95d4:	bl	0 <zend_hash_destroy>
    95d8:	ldr	r3, [pc, #356]	; 9744 <accel_post_startup+0x3410>
    95dc:	ldr	r0, [r3]
    95e0:	bl	0 <_efree>
    95e4:	ldr	r0, [pc, #344]	; 9744 <accel_post_startup+0x3410>
    95e8:	mov	r1, #0
    95ec:	str	r1, [r0]
    95f0:	ldr	ip, [sp, #48]	; 0x30
    95f4:	mvn	r0, #0
    95f8:	ldr	r1, [sp, #76]	; 0x4c
    95fc:	cmp	ip, #0
    9600:	movne	r5, r0
    9604:	moveq	r5, r1
    9608:	ldr	r0, [pc, #352]	; 9770 <accel_post_startup+0x343c>
    960c:	ldrb	r4, [r0]
    9610:	mov	r1, #0
    9614:	strb	r1, [r0]
    9618:	ldr	r1, [pc, #276]	; 9734 <accel_post_startup+0x3400>
    961c:	mov	r2, #0
    9620:	strb	r2, [r1]
    9624:	mov	r0, #0
    9628:	bl	0 <php_request_shutdown>
    962c:	ldr	r0, [pc, #316]	; 9770 <accel_post_startup+0x343c>
    9630:	strb	r4, [r0]
    9634:	b	9640 <accel_post_startup+0x330c>
    9638:	bl	0 <zend_shared_alloc_unlock>
    963c:	mvn	r5, #0
    9640:	ldr	r1, [pc, #284]	; 9764 <accel_post_startup+0x3430>
    9644:	ldr	r2, [sp, #52]	; 0x34
    9648:	strb	r2, [r1]
    964c:	ldr	r1, [pc, #228]	; 9738 <accel_post_startup+0x3404>
    9650:	ldr	r2, [sp, #72]	; 0x48
    9654:	str	r2, [r1]
    9658:	ldr	r0, [pc, #252]	; 975c <accel_post_startup+0x3428>
    965c:	ldr	r2, [sp, #84]	; 0x54
    9660:	str	r2, [r0]
    9664:	ldr	r2, [pc, #272]	; 977c <accel_post_startup+0x3448>
    9668:	ldr	r3, [sp, #80]	; 0x50
    966c:	str	r3, [r2]
    9670:	ldr	r0, [pc, #232]	; 9760 <accel_post_startup+0x342c>
    9674:	ldr	r1, [sp, #96]	; 0x60
    9678:	str	r1, [r0]
    967c:	ldr	r1, [pc, #208]	; 9754 <accel_post_startup+0x3420>
    9680:	ldr	ip, [sp, #68]	; 0x44
    9684:	str	ip, [r1]
    9688:	ldr	r1, [pc, #184]	; 9748 <accel_post_startup+0x3414>
    968c:	ldr	ip, [sp, #92]	; 0x5c
    9690:	str	ip, [r1]
    9694:	ldr	ip, [pc, #232]	; 9784 <accel_post_startup+0x3450>
    9698:	ldr	r3, [sp, #88]	; 0x58
    969c:	str	r3, [ip]
    96a0:	ldr	ip, [pc, #168]	; 9750 <accel_post_startup+0x341c>
    96a4:	ldr	r1, [sp, #100]	; 0x64
    96a8:	str	r1, [ip]
    96ac:	ldr	r3, [pc, #124]	; 9730 <accel_post_startup+0x33fc>
    96b0:	ldr	ip, [sp, #60]	; 0x3c
    96b4:	str	ip, [r3]
    96b8:	ldr	ip, [pc, #168]	; 9768 <accel_post_startup+0x3434>
    96bc:	ldr	r0, [sp, #64]	; 0x40
    96c0:	str	r0, [ip]
    96c4:	bl	0 <sapi_activate>
    96c8:	ldr	ip, [sp, #56]	; 0x38
    96cc:	cmp	ip, #0
    96d0:	beq	96f0 <accel_post_startup+0x33bc>
    96d4:	cmp	r5, #0
    96d8:	beq	96e8 <accel_post_startup+0x33b4>
    96dc:	mov	r0, #2
    96e0:	bl	0 <exit>
    96e4:	b	96f0 <accel_post_startup+0x33bc>
    96e8:	mov	r0, #0
    96ec:	bl	0 <exit>
    96f0:	mov	r0, r5
    96f4:	b	9704 <accel_post_startup+0x33d0>
    96f8:	mov	r0, #0
    96fc:	b	9704 <accel_post_startup+0x33d0>
    9700:	mov	r0, #0
    9704:	ldr	r4, [sp, #104]	; 0x68
    9708:	ldr	r5, [sp, #108]	; 0x6c
    970c:	ldr	r6, [sp, #112]	; 0x70
    9710:	ldr	r7, [sp, #116]	; 0x74
    9714:	ldr	r8, [sp, #120]	; 0x78
    9718:	ldr	r9, [sp, #124]	; 0x7c
    971c:	ldr	sl, [sp, #128]	; 0x80
    9720:	ldr	fp, [sp, #132]	; 0x84
    9724:	ldr	lr, [sp, #16]
    9728:	ldr	sp, [sp, #12]
    972c:	bx	lr
    9730:	.word	0x00000018
    9734:	.word	0x00000010
    9738:	.word	0x0000008c
    973c:	.word	0x00000059
    9740:	.word	0x00000074
    9744:	.word	0x0000004c
    9748:	.word	0x00000030
    974c:	.word	0x00000000
    9750:	.word	0x00000024
    9754:	.word	0x0000002c
    9758:	.word	0x00000000
    975c:	.word	0x00000010
    9760:	.word	0x00000040
    9764:	.word	0x00000011
    9768:	.word	0x0000001c
    976c:	.word	0x00000078
    9770:	.word	0x0000002a
    9774:	.word	0x0000022a
    9778:	.word	0x00000004
    977c:	.word	0x00000014
    9780:	.word	0x0000015c
    9784:	.word	0x00000034
    9788:	.word	0x00000000

0000978c <accel_post_shutdown>:
    978c:	mov	ip, sp
    9790:	sub	sp, sp, #8
    9794:	str	ip, [sp]
    9798:	str	lr, [sp, #4]
    979c:	ldr	lr, [sp, #4]
    97a0:	add	sp, sp, #8
    97a4:	b	0 <zend_shared_alloc_shutdown>

000097a8 <accel_shutdown>:
    97a8:	mov	ip, sp
    97ac:	sub	sp, sp, #16
    97b0:	str	ip, [sp]
    97b4:	str	lr, [sp, #4]
    97b8:	str	r4, [sp, #8]
    97bc:	str	r5, [sp, #12]
    97c0:	bl	0 <zend_optimizer_shutdown>
    97c4:	ldr	r0, [pc, #600]	; 9a24 <accel_shutdown+0x27c>
    97c8:	bl	0 <zend_accel_blacklist_shutdown>
    97cc:	ldr	r0, [pc, #588]	; 9a20 <accel_shutdown+0x278>
    97d0:	ldrb	r0, [r0]
    97d4:	cmp	r0, #0
    97d8:	beq	9a08 <accel_shutdown+0x260>
    97dc:	ldr	r0, [pc, #588]	; 9a30 <accel_shutdown+0x288>
    97e0:	ldrb	r0, [r0]
    97e4:	cmp	r0, #0
    97e8:	beq	9a08 <accel_shutdown+0x260>
    97ec:	ldr	r0, [pc, #608]	; 9a54 <accel_shutdown+0x2ac>
    97f0:	ldr	r0, [r0]
    97f4:	ldr	r0, [r0, #72]	; 0x48
    97f8:	cmp	r0, #0
    97fc:	beq	998c <accel_shutdown+0x1e4>
    9800:	ldr	r0, [pc, #564]	; 9a3c <accel_shutdown+0x294>
    9804:	ldr	ip, [r0]
    9808:	cmp	ip, #0
    980c:	beq	98c8 <accel_shutdown+0x120>
    9810:	ldr	r2, [ip, #20]
    9814:	ldr	r0, [ip, #16]
    9818:	lsl	r1, r2, #4
    981c:	add	r3, r1, r2, lsl #3
    9820:	add	r0, r0, r3
    9824:	cmp	r2, #0
    9828:	bls	98c4 <accel_shutdown+0x11c>
    982c:	sub	r0, r0, #24
    9830:	mov	r3, r0
    9834:	ldrb	r1, [r3, #8]
    9838:	and	r3, r1, #255	; 0xff
    983c:	cmp	r3, #0
    9840:	beq	98bc <accel_shutdown+0x114>
    9844:	mov	r1, r0
    9848:	ldr	r3, [r1]
    984c:	ldrb	r1, [r3]
    9850:	cmp	r1, #1
    9854:	beq	98c4 <accel_shutdown+0x11c>
    9858:	ldr	r3, [ip, #24]
    985c:	sub	r3, r3, #1
    9860:	str	r3, [ip, #24]
    9864:	lsl	r1, r2, #4
    9868:	add	r1, r1, r2, lsl #3
    986c:	sub	r5, r1, #24
    9870:	ldr	r1, [r0, #16]
    9874:	ldr	r3, [ip, #12]
    9878:	orr	r4, r1, r3
    987c:	ldr	r1, [ip, #16]
    9880:	ldr	r3, [r1, r4, lsl #2]
    9884:	cmp	r5, r3
    9888:	beq	98b4 <accel_shutdown+0x10c>
    988c:	add	r3, r1, r3
    9890:	ldr	r1, [r3, #12]
    9894:	cmp	r1, r5
    9898:	beq	98a8 <accel_shutdown+0x100>
    989c:	ldr	r3, [ip, #16]
    98a0:	add	r3, r3, r1
    98a4:	b	9890 <accel_shutdown+0xe8>
    98a8:	ldr	r1, [r0, #12]
    98ac:	str	r1, [r3, #12]
    98b0:	b	98bc <accel_shutdown+0x114>
    98b4:	ldr	r3, [r0, #12]
    98b8:	str	r3, [r1, r4, lsl #2]
    98bc:	sub	r2, r2, #1
    98c0:	b	9824 <accel_shutdown+0x7c>
    98c4:	str	r2, [ip, #20]
    98c8:	ldr	r0, [pc, #380]	; 9a4c <accel_shutdown+0x2a4>
    98cc:	ldr	ip, [r0]
    98d0:	cmp	ip, #0
    98d4:	beq	998c <accel_shutdown+0x1e4>
    98d8:	ldr	r0, [ip, #20]
    98dc:	ldr	r1, [ip, #16]
    98e0:	lsl	r2, r0, #4
    98e4:	add	r3, r2, r0, lsl #3
    98e8:	add	r2, r1, r3
    98ec:	cmp	r0, #0
    98f0:	bls	9988 <accel_shutdown+0x1e0>
    98f4:	sub	r2, r2, #24
    98f8:	mov	r3, r2
    98fc:	ldrb	r1, [r3, #8]
    9900:	and	r1, r1, #255	; 0xff
    9904:	cmp	r1, #0
    9908:	beq	9980 <accel_shutdown+0x1d8>
    990c:	ldr	r1, [r3]
    9910:	ldrb	r1, [r1]
    9914:	cmp	r1, #1
    9918:	beq	9988 <accel_shutdown+0x1e0>
    991c:	ldr	r1, [ip, #24]
    9920:	sub	r3, r1, #1
    9924:	str	r3, [ip, #24]
    9928:	lsl	r1, r0, #4
    992c:	add	r3, r1, r0, lsl #3
    9930:	sub	r5, r3, #24
    9934:	ldr	r3, [r2, #16]
    9938:	ldr	r1, [ip, #12]
    993c:	orr	r4, r3, r1
    9940:	ldr	r1, [ip, #16]
    9944:	ldr	r3, [r1, r4, lsl #2]
    9948:	cmp	r5, r3
    994c:	beq	9978 <accel_shutdown+0x1d0>
    9950:	add	r1, r1, r3
    9954:	ldr	r3, [r1, #12]
    9958:	cmp	r3, r5
    995c:	beq	996c <accel_shutdown+0x1c4>
    9960:	ldr	r1, [ip, #16]
    9964:	add	r1, r1, r3
    9968:	b	9954 <accel_shutdown+0x1ac>
    996c:	ldr	r3, [r2, #12]
    9970:	str	r3, [r1, #12]
    9974:	b	9980 <accel_shutdown+0x1d8>
    9978:	ldr	r3, [r2, #12]
    997c:	str	r3, [r1, r4, lsl #2]
    9980:	sub	r0, r0, #1
    9984:	b	98ec <accel_shutdown+0x144>
    9988:	str	r0, [ip, #20]
    998c:	ldr	r0, [pc, #148]	; 9a28 <accel_shutdown+0x280>
    9990:	ldrb	r0, [r0]
    9994:	and	r4, r0, #255	; 0xff
    9998:	bl	511c <accel_reset_pcre_cache>
    999c:	cmp	r4, #0
    99a0:	bne	99bc <accel_shutdown+0x214>
    99a4:	ldr	r3, [pc, #164]	; 9a50 <accel_shutdown+0x2a8>
    99a8:	ldr	r1, [pc, #144]	; 9a40 <accel_shutdown+0x298>
    99ac:	ldr	r0, [r1]
    99b0:	str	r0, [r3]
    99b4:	ldr	r2, [pc, #136]	; 9a44 <accel_shutdown+0x29c>
    99b8:	str	r2, [r1]
    99bc:	ldr	r2, [pc, #116]	; 9a38 <accel_shutdown+0x290>
    99c0:	ldr	r3, [pc, #100]	; 9a2c <accel_shutdown+0x284>
    99c4:	ldr	r1, [r3]
    99c8:	str	r1, [r2]
    99cc:	ldr	r0, [pc, #96]	; 9a34 <accel_shutdown+0x28c>
    99d0:	ldr	r0, [r0]
    99d4:	ldr	r1, [pc, #108]	; 9a48 <accel_shutdown+0x2a0>
    99d8:	mov	r2, #12
    99dc:	bl	0 <zend_hash_str_find>
    99e0:	cmp	r0, #0
    99e4:	beq	99f0 <accel_shutdown+0x248>
    99e8:	ldr	ip, [r0]
    99ec:	b	99f4 <accel_shutdown+0x24c>
    99f0:	mov	ip, #0
    99f4:	cmp	ip, #0
    99f8:	beq	9a08 <accel_shutdown+0x260>
    99fc:	ldr	r0, [pc, #24]	; 9a1c <accel_shutdown+0x274>
    9a00:	ldr	r3, [r0]
    9a04:	str	r3, [ip, #4]
    9a08:	ldr	r4, [sp, #8]
    9a0c:	ldr	r5, [sp, #12]
    9a10:	ldr	lr, [sp, #4]
    9a14:	add	sp, sp, #16
    9a18:	bx	lr
    9a1c:	.word	0x00000020
    9a20:	.word	0x00000004
	...
    9a34:	.word	0x00000210
    9a38:	.word	0x00000000
    9a3c:	.word	0x0000010c
	...
    9a48:	.word	0x0000068c
    9a4c:	.word	0x00000110
    9a50:	.word	0x00000020
    9a54:	.word	0x00000000

00009a58 <zend_accel_schedule_restart>:
    9a58:	mov	ip, sp
    9a5c:	sub	sp, sp, #32
    9a60:	str	ip, [sp]
    9a64:	str	lr, [sp, #4]
    9a68:	str	r4, [sp, #8]
    9a6c:	mov	r4, r0
    9a70:	ldr	r1, [pc, #308]	; 9bac <zend_accel_schedule_restart+0x154>
    9a74:	str	r1, [sp, #16]
    9a78:	ldr	ip, [pc, #296]	; 9ba8 <zend_accel_schedule_restart+0x150>
    9a7c:	str	ip, [sp, #20]
    9a80:	ldr	r1, [pc, #276]	; 9b9c <zend_accel_schedule_restart+0x144>
    9a84:	str	r1, [sp, #24]
    9a88:	ldr	r2, [pc, #292]	; 9bb4 <zend_accel_schedule_restart+0x15c>
    9a8c:	ldr	ip, [r2]
    9a90:	ldrb	r1, [ip, #61]	; 0x3d
    9a94:	cmp	r1, #0
    9a98:	bne	9b84 <zend_accel_schedule_restart+0x12c>
    9a9c:	mov	r0, #4
    9aa0:	ldr	r1, [pc, #252]	; 9ba4 <zend_accel_schedule_restart+0x14c>
    9aa4:	add	r2, sp, #16
    9aa8:	ldr	r2, [r2, r4, lsl #2]
    9aac:	bl	0 <zend_accel_error>
    9ab0:	ldr	r3, [pc, #232]	; 9ba0 <zend_accel_schedule_restart+0x148>
    9ab4:	ldr	r1, [r3]
    9ab8:	add	r2, r1, #1
    9abc:	str	r2, [r3]
    9ac0:	ldr	r0, [pc, #204]	; 9b94 <zend_accel_schedule_restart+0x13c>
    9ac4:	ldrb	r0, [r0]
    9ac8:	cmp	r0, #0
    9acc:	beq	9ad8 <zend_accel_schedule_restart+0x80>
    9ad0:	mov	r0, #0
    9ad4:	bl	0 <zend_accel_shared_protect>
    9ad8:	ldr	r1, [pc, #212]	; 9bb4 <zend_accel_schedule_restart+0x15c>
    9adc:	ldr	r0, [r1]
    9ae0:	mov	r3, #1
    9ae4:	strb	r3, [r0, #61]	; 0x3d
    9ae8:	ldr	ip, [r1]
    9aec:	str	r4, [ip, #64]	; 0x40
    9af0:	ldr	ip, [r1]
    9af4:	ldrb	r2, [ip, #60]	; 0x3c
    9af8:	strb	r2, [ip, #68]	; 0x44
    9afc:	ldr	r2, [r1]
    9b00:	mov	r0, #0
    9b04:	strb	r0, [r2, #60]	; 0x3c
    9b08:	ldr	r3, [pc, #136]	; 9b98 <zend_accel_schedule_restart+0x140>
    9b0c:	ldr	r3, [r3]
    9b10:	cmp	r3, #0
    9b14:	beq	9b3c <zend_accel_schedule_restart+0xe4>
    9b18:	mov	r0, #0
    9b1c:	bl	0 <time>
    9b20:	ldr	r1, [pc, #140]	; 9bb4 <zend_accel_schedule_restart+0x15c>
    9b24:	ldr	r3, [r1]
    9b28:	ldr	r2, [pc, #104]	; 9b98 <zend_accel_schedule_restart+0x140>
    9b2c:	ldr	r2, [r2]
    9b30:	add	r1, r0, r2
    9b34:	str	r1, [r3, #56]	; 0x38
    9b38:	b	9b48 <zend_accel_schedule_restart+0xf0>
    9b3c:	ldr	r0, [r1]
    9b40:	mov	ip, #0
    9b44:	str	ip, [r0, #56]	; 0x38
    9b48:	ldr	r0, [pc, #68]	; 9b94 <zend_accel_schedule_restart+0x13c>
    9b4c:	ldrb	r0, [r0]
    9b50:	cmp	r0, #0
    9b54:	beq	9b60 <zend_accel_schedule_restart+0x108>
    9b58:	mov	r0, #1
    9b5c:	bl	0 <zend_accel_shared_protect>
    9b60:	ldr	r0, [pc, #56]	; 9ba0 <zend_accel_schedule_restart+0x148>
    9b64:	ldr	r3, [r0]
    9b68:	sub	ip, r3, #1
    9b6c:	str	ip, [r0]
    9b70:	ldr	ip, [pc, #56]	; 9bb0 <zend_accel_schedule_restart+0x158>
    9b74:	ldr	r1, [ip]
    9b78:	cmp	r3, r1
    9b7c:	bne	9b84 <zend_accel_schedule_restart+0x12c>
    9b80:	bl	0 <zend_signal_handler_unblock>
    9b84:	ldr	r4, [sp, #8]
    9b88:	ldr	lr, [sp, #4]
    9b8c:	add	sp, sp, #32
    9b90:	bx	lr
    9b94:	.word	0x00000059
    9b98:	.word	0x00000050
    9b9c:	.word	0x00000956
    9ba0:	.word	0x00000000
    9ba4:	.word	0x000007bb
    9ba8:	.word	0x00000511
    9bac:	.word	0x00000948
    9bb0:	.word	0x00000004
    9bb4:	.word	0x00000000

00009bb8 <accelerator_shm_read_lock>:
    9bb8:	mov	ip, sp
    9bbc:	sub	sp, sp, #32
    9bc0:	str	ip, [sp]
    9bc4:	str	lr, [sp, #4]
    9bc8:	str	r4, [sp, #8]
    9bcc:	ldr	r0, [pc, #312]	; 9d0c <accelerator_shm_read_lock+0x154>
    9bd0:	ldr	r0, [r0]
    9bd4:	cmp	r0, #0
    9bd8:	bne	9cf8 <accelerator_shm_read_lock+0x140>
    9bdc:	mov	r0, #0
    9be0:	strh	r0, [sp, #16]
    9be4:	mov	r0, #0
    9be8:	strh	r0, [sp, #18]
    9bec:	mov	r0, #1
    9bf0:	str	r0, [sp, #20]
    9bf4:	mov	r0, #1
    9bf8:	str	r0, [sp, #24]
    9bfc:	ldr	r0, [pc, #272]	; 9d14 <accelerator_shm_read_lock+0x15c>
    9c00:	ldr	r0, [r0]
    9c04:	mov	r1, #6
    9c08:	add	r2, sp, #16
    9c0c:	bl	0 <fcntl>
    9c10:	cmn	r0, #1
    9c14:	bne	9c4c <accelerator_shm_read_lock+0x94>
    9c18:	bl	0 <__errno_location>
    9c1c:	ldr	r0, [r0]
    9c20:	bl	0 <strerror>
    9c24:	mov	r4, r0
    9c28:	bl	0 <__errno_location>
    9c2c:	mov	r2, #4
    9c30:	ldr	r1, [pc, #224]	; 9d18 <accelerator_shm_read_lock+0x160>
    9c34:	ldr	r3, [r0]
    9c38:	mov	r0, r2
    9c3c:	mov	r2, r4
    9c40:	bl	0 <zend_accel_error>
    9c44:	mvn	r0, #0
    9c48:	b	9c50 <accelerator_shm_read_lock+0x98>
    9c4c:	mov	r0, #0
    9c50:	cmn	r0, #1
    9c54:	bne	9c60 <accelerator_shm_read_lock+0xa8>
    9c58:	mvn	r0, #0
    9c5c:	b	9cfc <accelerator_shm_read_lock+0x144>
    9c60:	ldr	r0, [pc, #180]	; 9d1c <accelerator_shm_read_lock+0x164>
    9c64:	ldr	r0, [r0]
    9c68:	ldrb	r0, [r0, #69]	; 0x45
    9c6c:	cmp	r0, #0
    9c70:	beq	9ce4 <accelerator_shm_read_lock+0x12c>
    9c74:	mov	r0, #2
    9c78:	strh	r0, [sp, #16]
    9c7c:	mov	r0, #0
    9c80:	strh	r0, [sp, #18]
    9c84:	mov	r0, #1
    9c88:	str	r0, [sp, #20]
    9c8c:	mov	r0, #1
    9c90:	str	r0, [sp, #24]
    9c94:	ldr	r0, [pc, #120]	; 9d14 <accelerator_shm_read_lock+0x15c>
    9c98:	ldr	r0, [r0]
    9c9c:	mov	r1, #6
    9ca0:	add	r2, sp, #16
    9ca4:	bl	0 <fcntl>
    9ca8:	cmn	r0, #1
    9cac:	bne	9cdc <accelerator_shm_read_lock+0x124>
    9cb0:	bl	0 <__errno_location>
    9cb4:	ldr	r0, [r0]
    9cb8:	bl	0 <strerror>
    9cbc:	mov	r4, r0
    9cc0:	bl	0 <__errno_location>
    9cc4:	mov	r2, #4
    9cc8:	ldr	r1, [pc, #64]	; 9d10 <accelerator_shm_read_lock+0x158>
    9ccc:	ldr	r3, [r0]
    9cd0:	mov	r0, r2
    9cd4:	mov	r2, r4
    9cd8:	bl	0 <zend_accel_error>
    9cdc:	mvn	r0, #0
    9ce0:	b	9cfc <accelerator_shm_read_lock+0x144>
    9ce4:	ldr	ip, [pc, #32]	; 9d0c <accelerator_shm_read_lock+0x154>
    9ce8:	mov	r3, #1
    9cec:	str	r3, [ip]
    9cf0:	mov	r0, #0
    9cf4:	b	9cfc <accelerator_shm_read_lock+0x144>
    9cf8:	mov	r0, #0
    9cfc:	ldr	r4, [sp, #8]
    9d00:	ldr	lr, [sp, #4]
    9d04:	add	sp, sp, #32
    9d08:	bx	lr
    9d0c:	.word	0x00000000
    9d10:	.word	0x0000034e
    9d14:	.word	0x00000000
    9d18:	.word	0x00000b9a
    9d1c:	.word	0x00000000

00009d20 <accelerator_shm_read_unlock>:
    9d20:	mov	ip, sp
    9d24:	sub	sp, sp, #32
    9d28:	str	ip, [sp]
    9d2c:	str	lr, [sp, #4]
    9d30:	str	r4, [sp, #8]
    9d34:	ldr	r0, [pc, #144]	; 9dcc <accelerator_shm_read_unlock+0xac>
    9d38:	ldr	r0, [r0]
    9d3c:	cmp	r0, #0
    9d40:	bne	9dbc <accelerator_shm_read_unlock+0x9c>
    9d44:	mov	r0, #2
    9d48:	strh	r0, [sp, #16]
    9d4c:	mov	r0, #0
    9d50:	strh	r0, [sp, #18]
    9d54:	mov	r0, #1
    9d58:	str	r0, [sp, #20]
    9d5c:	mov	r0, #1
    9d60:	str	r0, [sp, #24]
    9d64:	ldr	r0, [pc, #104]	; 9dd4 <accelerator_shm_read_unlock+0xb4>
    9d68:	ldr	r0, [r0]
    9d6c:	mov	r1, #6
    9d70:	add	r2, sp, #16
    9d74:	bl	0 <fcntl>
    9d78:	cmn	r0, #1
    9d7c:	bne	9dac <accelerator_shm_read_unlock+0x8c>
    9d80:	bl	0 <__errno_location>
    9d84:	ldr	r0, [r0]
    9d88:	bl	0 <strerror>
    9d8c:	mov	r4, r0
    9d90:	bl	0 <__errno_location>
    9d94:	mov	r2, #4
    9d98:	ldr	r1, [pc, #48]	; 9dd0 <accelerator_shm_read_unlock+0xb0>
    9d9c:	ldr	r3, [r0]
    9da0:	mov	r0, r2
    9da4:	mov	r2, r4
    9da8:	bl	0 <zend_accel_error>
    9dac:	ldr	r4, [sp, #8]
    9db0:	ldr	lr, [sp, #4]
    9db4:	add	sp, sp, #32
    9db8:	bx	lr
    9dbc:	ldr	r4, [sp, #8]
    9dc0:	ldr	lr, [sp, #4]
    9dc4:	add	sp, sp, #32
    9dc8:	bx	lr
    9dcc:	.word	0x00000000
    9dd0:	.word	0x0000034e
    9dd4:	.word	0x00000000

00009dd8 <preload_compile_file>:
    9dd8:	mov	ip, sp
    9ddc:	sub	sp, sp, #32
    9de0:	str	ip, [sp]
    9de4:	str	lr, [sp, #4]
    9de8:	str	r4, [sp, #8]
    9dec:	str	r5, [sp, #12]
    9df0:	ldr	r2, [pc, #236]	; 9ee4 <preload_compile_file+0x10c>
    9df4:	ldr	ip, [r2]
    9df8:	blx	ip
    9dfc:	mov	r5, r0
    9e00:	cmp	r5, #0
    9e04:	beq	9ec8 <preload_compile_file+0xf0>
    9e08:	ldr	r2, [r5, #68]	; 0x44
    9e0c:	cmp	r2, #0
    9e10:	beq	9ec8 <preload_compile_file+0xf0>
    9e14:	bl	0 <create_persistent_script>
    9e18:	mov	r4, r0
    9e1c:	mvn	r2, #0
    9e20:	str	r2, [r4, #228]	; 0xe4
    9e24:	ldr	r0, [r5, #88]	; 0x58
    9e28:	ldr	r2, [r0, #4]
    9e2c:	and	r3, r2, #64	; 0x40
    9e30:	cmp	r3, #0
    9e34:	bne	9e44 <preload_compile_file+0x6c>
    9e38:	ldr	ip, [r0]
    9e3c:	add	r3, ip, #1
    9e40:	str	r3, [r0]
    9e44:	str	r0, [r4]
    9e48:	ldr	ip, [r0, #8]
    9e4c:	cmp	ip, #0
    9e50:	bne	9e58 <preload_compile_file+0x80>
    9e54:	bl	0 <zend_string_hash_func>
    9e58:	add	r1, r4, #4
    9e5c:	mov	r2, r5
    9e60:	mov	r3, r1
    9e64:	mov	lr, #34	; 0x22
    9e68:	ldr	ip, [r2], #4
    9e6c:	subs	lr, lr, #1
    9e70:	str	ip, [r3], #4
    9e74:	bne	9e68 <preload_compile_file+0x90>
    9e78:	mov	r2, #0
    9e7c:	str	r2, [r5, #68]	; 0x44
    9e80:	ldr	r0, [r5, #60]	; 0x3c
    9e84:	cmp	r0, #0
    9e88:	beq	9ea8 <preload_compile_file+0xd0>
    9e8c:	ldr	r1, [r0, #4]
    9e90:	and	r1, r1, #64	; 0x40
    9e94:	cmp	r1, #0
    9e98:	bne	9ea8 <preload_compile_file+0xd0>
    9e9c:	ldr	r1, [r0]
    9ea0:	add	ip, r1, #1
    9ea4:	str	ip, [r0]
    9ea8:	ldr	r3, [pc, #48]	; 9ee0 <preload_compile_file+0x108>
    9eac:	ldr	r0, [r3]
    9eb0:	ldr	r1, [r4]
    9eb4:	str	r4, [sp, #16]
    9eb8:	mov	r3, #14
    9ebc:	str	r3, [sp, #24]
    9ec0:	add	r2, sp, #16
    9ec4:	bl	0 <zend_hash_add>
    9ec8:	mov	r0, r5
    9ecc:	ldr	r4, [sp, #8]
    9ed0:	ldr	r5, [sp, #12]
    9ed4:	ldr	lr, [sp, #4]
    9ed8:	add	sp, sp, #32
    9edc:	bx	lr
    9ee0:	.word	0x0000004c
    9ee4:	.word	0x00000024

00009ee8 <preload_sort_classes>:
    9ee8:	mov	ip, sp
    9eec:	sub	sp, sp, #48	; 0x30
    9ef0:	str	ip, [sp]
    9ef4:	str	lr, [sp, #4]
    9ef8:	str	r4, [sp, #8]
    9efc:	str	r5, [sp, #12]
    9f00:	str	r6, [sp, #16]
    9f04:	lsl	r2, r1, #4
    9f08:	add	r2, r2, r1, lsl #3
    9f0c:	add	r4, r0, r2
    9f10:	cmp	r0, r4
    9f14:	bcs	a06c <preload_sort_classes+0x184>
    9f18:	ldr	r6, [r0]
    9f1c:	ldr	r1, [r6, #8]
    9f20:	cmp	r1, #0
    9f24:	beq	9fb0 <preload_sort_classes+0xc8>
    9f28:	ldr	r3, [r6, #16]
    9f2c:	and	r2, r3, #8
    9f30:	cmp	r2, #0
    9f34:	beq	9fb0 <preload_sort_classes+0xc8>
    9f38:	ldrb	r2, [r1]
    9f3c:	cmp	r2, #2
    9f40:	bne	9fb0 <preload_sort_classes+0xc8>
    9f44:	add	r5, r0, #24
    9f48:	cmp	r5, r4
    9f4c:	bcs	9fb0 <preload_sort_classes+0xc8>
    9f50:	ldr	ip, [r5]
    9f54:	cmp	r1, ip
    9f58:	bne	9fa8 <preload_sort_classes+0xc0>
    9f5c:	vldr	d7, [r0]
    9f60:	vstr	d7, [sp, #24]
    9f64:	vldr	d7, [r0, #8]
    9f68:	vstr	d7, [sp, #32]
    9f6c:	vldr	d7, [r0, #16]
    9f70:	vstr	d7, [sp, #40]	; 0x28
    9f74:	vldr	d7, [r5]
    9f78:	vstr	d7, [r0]
    9f7c:	vldr	d7, [r5, #8]
    9f80:	vstr	d7, [r0, #8]
    9f84:	vldr	d7, [r5, #16]
    9f88:	vstr	d7, [r0, #16]
    9f8c:	vldr	d7, [sp, #24]
    9f90:	vstr	d7, [r5]
    9f94:	vldr	d7, [sp, #32]
    9f98:	vstr	d7, [r5, #8]
    9f9c:	vldr	d7, [sp, #40]	; 0x28
    9fa0:	vstr	d7, [r5, #16]
    9fa4:	b	9f18 <preload_sort_classes+0x30>
    9fa8:	add	r5, r5, #24
    9fac:	b	9f48 <preload_sort_classes+0x60>
    9fb0:	ldr	r1, [r6, #252]	; 0xfc
    9fb4:	cmp	r1, #0
    9fb8:	beq	a064 <preload_sort_classes+0x17c>
    9fbc:	ldr	r1, [r6, #16]
    9fc0:	and	r1, r1, #8
    9fc4:	cmp	r1, #0
    9fc8:	beq	a064 <preload_sort_classes+0x17c>
    9fcc:	mov	ip, #0
    9fd0:	ldr	r2, [r6, #252]	; 0xfc
    9fd4:	cmp	ip, r2
    9fd8:	bcs	a064 <preload_sort_classes+0x17c>
    9fdc:	ldr	r3, [r6, #260]	; 0x104
    9fe0:	ldr	r2, [r3, ip, lsl #2]
    9fe4:	ldrb	r3, [r2]
    9fe8:	cmp	r3, #2
    9fec:	bne	a05c <preload_sort_classes+0x174>
    9ff0:	add	r1, r0, #24
    9ff4:	cmp	r1, r4
    9ff8:	bcs	a05c <preload_sort_classes+0x174>
    9ffc:	ldr	r3, [r1]
    a000:	cmp	r2, r3
    a004:	bne	a054 <preload_sort_classes+0x16c>
    a008:	vldr	d7, [r0]
    a00c:	vstr	d7, [sp, #24]
    a010:	vldr	d7, [r0, #8]
    a014:	vstr	d7, [sp, #32]
    a018:	vldr	d7, [r0, #16]
    a01c:	vstr	d7, [sp, #40]	; 0x28
    a020:	vldr	d7, [r1]
    a024:	vstr	d7, [r0]
    a028:	vldr	d7, [r1, #8]
    a02c:	vstr	d7, [r0, #8]
    a030:	vldr	d7, [r1, #16]
    a034:	vstr	d7, [r0, #16]
    a038:	vldr	d7, [sp, #24]
    a03c:	vstr	d7, [r1]
    a040:	vldr	d7, [sp, #32]
    a044:	vstr	d7, [r1, #8]
    a048:	vldr	d7, [sp, #40]	; 0x28
    a04c:	vstr	d7, [r1, #16]
    a050:	b	9f18 <preload_sort_classes+0x30>
    a054:	add	r1, r1, #24
    a058:	b	9ff4 <preload_sort_classes+0x10c>
    a05c:	add	ip, ip, #1
    a060:	b	9fd0 <preload_sort_classes+0xe8>
    a064:	add	r0, r0, #24
    a068:	b	9f10 <preload_sort_classes+0x28>
    a06c:	ldr	r4, [sp, #8]
    a070:	ldr	r5, [sp, #12]
    a074:	ldr	r6, [sp, #16]
    a078:	ldr	lr, [sp, #4]
    a07c:	add	sp, sp, #48	; 0x30
    a080:	bx	lr

0000a084 <preload_is_type_known>:
    a084:	mov	ip, sp
    a088:	sub	sp, sp, #16
    a08c:	str	ip, [sp]
    a090:	str	lr, [sp, #4]
    a094:	str	r4, [sp, #8]
    a098:	str	r5, [sp, #12]
    a09c:	mov	r5, r0
    a0a0:	and	r2, r1, #2
    a0a4:	cmp	r2, #0
    a0a8:	moveq	r2, #1
    a0ac:	movne	r2, #0
    a0b0:	mov	r3, #0
    a0b4:	movw	lr, #1023	; 0x3ff
    a0b8:	cmp	r1, lr
    a0bc:	movhi	ip, r2
    a0c0:	movls	ip, r3
    a0c4:	cmp	ip, #0
    a0c8:	bne	a0d4 <preload_is_type_known+0x50>
    a0cc:	mov	r0, #1
    a0d0:	b	a1c8 <preload_is_type_known+0x144>
    a0d4:	bic	r4, r1, #3
    a0d8:	ldr	r1, [r4, #12]
    a0dc:	cmp	r1, #4
    a0e0:	bne	a0fc <preload_is_type_known+0x78>
    a0e4:	add	r0, r4, #16
    a0e8:	ldr	r2, [pc, #240]	; a1e0 <preload_is_type_known+0x15c>
    a0ec:	mov	r3, #4
    a0f0:	bl	0 <zend_binary_strcasecmp>
    a0f4:	cmp	r0, #0
    a0f8:	beq	a148 <preload_is_type_known+0xc4>
    a0fc:	ldr	r1, [r4, #12]
    a100:	cmp	r1, #6
    a104:	bne	a120 <preload_is_type_known+0x9c>
    a108:	add	r0, r4, #16
    a10c:	ldr	r2, [pc, #200]	; a1dc <preload_is_type_known+0x158>
    a110:	mov	r3, #6
    a114:	bl	0 <zend_binary_strcasecmp>
    a118:	cmp	r0, #0
    a11c:	beq	a148 <preload_is_type_known+0xc4>
    a120:	ldr	r1, [r4, #12]
    a124:	ldr	r2, [r5, #4]
    a128:	ldr	r3, [r2, #12]
    a12c:	cmp	r1, r3
    a130:	bne	a150 <preload_is_type_known+0xcc>
    a134:	add	r0, r4, #16
    a138:	add	r2, r2, #16
    a13c:	bl	0 <zend_binary_strcasecmp>
    a140:	cmp	r0, #0
    a144:	bne	a150 <preload_is_type_known+0xcc>
    a148:	mov	r0, #1
    a14c:	b	a1c8 <preload_is_type_known+0x144>
    a150:	mov	r1, #0
    a154:	mov	r0, r4
    a158:	bl	0 <zend_string_tolower_ex>
    a15c:	mov	r5, r0
    a160:	ldr	r1, [pc, #124]	; a1e4 <preload_is_type_known+0x160>
    a164:	ldr	r0, [r1]
    a168:	mov	r1, r5
    a16c:	bl	0 <zend_hash_find>
    a170:	cmp	r0, #0
    a174:	movne	r4, #1
    a178:	moveq	r4, #0
    a17c:	ldr	r0, [r5, #4]
    a180:	and	r0, r0, #64	; 0x40
    a184:	cmp	r0, #0
    a188:	bne	a1c4 <preload_is_type_known+0x140>
    a18c:	ldr	r2, [r5]
    a190:	sub	r3, r2, #1
    a194:	str	r3, [r5]
    a198:	cmp	r3, #0
    a19c:	bne	a1c4 <preload_is_type_known+0x140>
    a1a0:	ldr	r1, [r5, #4]
    a1a4:	and	ip, r1, #128	; 0x80
    a1a8:	cmp	ip, #0
    a1ac:	bne	a1bc <preload_is_type_known+0x138>
    a1b0:	mov	r0, r5
    a1b4:	bl	0 <_efree>
    a1b8:	b	a1c4 <preload_is_type_known+0x140>
    a1bc:	mov	r0, r5
    a1c0:	bl	0 <free>
    a1c4:	and	r0, r4, #255	; 0xff
    a1c8:	ldr	r4, [sp, #8]
    a1cc:	ldr	r5, [sp, #12]
    a1d0:	ldr	lr, [sp, #4]
    a1d4:	add	sp, sp, #16
    a1d8:	bx	lr
    a1dc:	.word	0x0000027f
    a1e0:	.word	0x0000005c
    a1e4:	.word	0x00000110

0000a1e8 <preload_is_method_maybe_override>:
    a1e8:	mov	ip, sp
    a1ec:	sub	sp, sp, #24
    a1f0:	str	ip, [sp]
    a1f4:	str	lr, [sp, #4]
    a1f8:	str	r4, [sp, #8]
    a1fc:	str	r5, [sp, #12]
    a200:	str	r6, [sp, #16]
    a204:	str	r7, [sp, #20]
    a208:	mov	r4, r1
    a20c:	mov	r5, r0
    a210:	ldr	ip, [r5, #268]	; 0x10c
    a214:	cmp	ip, #0
    a218:	bne	a3d4 <preload_is_method_maybe_override+0x1ec>
    a21c:	ldr	ip, [r5, #272]	; 0x110
    a220:	cmp	ip, #0
    a224:	bne	a3d4 <preload_is_method_maybe_override+0x1ec>
    a228:	ldr	r0, [r5, #8]
    a22c:	cmp	r0, #0
    a230:	beq	a2d4 <preload_is_method_maybe_override+0xec>
    a234:	mov	r1, #0
    a238:	bl	0 <zend_string_tolower_ex>
    a23c:	mov	r6, r0
    a240:	ldr	r3, [pc, #428]	; a3f4 <preload_is_method_maybe_override+0x20c>
    a244:	ldr	r0, [r3]
    a248:	mov	r1, r6
    a24c:	bl	0 <zend_hash_find>
    a250:	cmp	r0, #0
    a254:	beq	a260 <preload_is_method_maybe_override+0x78>
    a258:	ldr	r7, [r0]
    a25c:	b	a264 <preload_is_method_maybe_override+0x7c>
    a260:	mov	r7, #0
    a264:	mov	r0, r6
    a268:	ldr	r1, [r0, #4]
    a26c:	and	r2, r1, #64	; 0x40
    a270:	cmp	r2, #0
    a274:	bne	a2a8 <preload_is_method_maybe_override+0xc0>
    a278:	ldr	r1, [r0]
    a27c:	sub	r3, r1, #1
    a280:	str	r3, [r0]
    a284:	cmp	r3, #0
    a288:	bne	a2a8 <preload_is_method_maybe_override+0xc0>
    a28c:	ldr	r2, [r0, #4]
    a290:	and	r3, r2, #128	; 0x80
    a294:	cmp	r3, #0
    a298:	bne	a2a4 <preload_is_method_maybe_override+0xbc>
    a29c:	bl	0 <_efree>
    a2a0:	b	a2a8 <preload_is_method_maybe_override+0xc0>
    a2a4:	bl	0 <free>
    a2a8:	add	r0, r7, #40	; 0x28
    a2ac:	mov	r1, r4
    a2b0:	bl	0 <zend_hash_find>
    a2b4:	cmp	r0, #0
    a2b8:	movne	r1, #1
    a2bc:	moveq	r1, #0
    a2c0:	and	ip, r1, #255	; 0xff
    a2c4:	cmp	ip, #0
    a2c8:	beq	a2d4 <preload_is_method_maybe_override+0xec>
    a2cc:	mov	r0, #1
    a2d0:	b	a3d8 <preload_is_method_maybe_override+0x1f0>
    a2d4:	ldr	ip, [r5, #252]	; 0xfc
    a2d8:	cmp	ip, #0
    a2dc:	beq	a350 <preload_is_method_maybe_override+0x168>
    a2e0:	mov	r6, #0
    a2e4:	ldr	r2, [r5, #252]	; 0xfc
    a2e8:	cmp	r6, r2
    a2ec:	bcs	a350 <preload_is_method_maybe_override+0x168>
    a2f0:	ldr	r0, [pc, #252]	; a3f4 <preload_is_method_maybe_override+0x20c>
    a2f4:	ldr	r0, [r0]
    a2f8:	ldr	ip, [r5, #260]	; 0x104
    a2fc:	add	r1, ip, r6, lsl #3
    a300:	ldr	r1, [r1, #4]
    a304:	bl	0 <zend_hash_find>
    a308:	cmp	r0, #0
    a30c:	beq	a318 <preload_is_method_maybe_override+0x130>
    a310:	ldr	r1, [r0]
    a314:	b	a31c <preload_is_method_maybe_override+0x134>
    a318:	mov	r1, #0
    a31c:	add	r0, r1, #40	; 0x28
    a320:	mov	r1, r4
    a324:	bl	0 <zend_hash_find>
    a328:	cmp	r0, #0
    a32c:	movne	r1, #1
    a330:	moveq	r1, #0
    a334:	and	r0, r1, #255	; 0xff
    a338:	cmp	r0, #0
    a33c:	beq	a348 <preload_is_method_maybe_override+0x160>
    a340:	mov	r0, #1
    a344:	b	a3d8 <preload_is_method_maybe_override+0x1f0>
    a348:	add	r6, r6, #1
    a34c:	b	a2e4 <preload_is_method_maybe_override+0xfc>
    a350:	ldr	r3, [r5, #256]	; 0x100
    a354:	cmp	r3, #0
    a358:	beq	a3cc <preload_is_method_maybe_override+0x1e4>
    a35c:	mov	r6, #0
    a360:	ldr	r0, [r5, #256]	; 0x100
    a364:	cmp	r6, r0
    a368:	bcs	a3cc <preload_is_method_maybe_override+0x1e4>
    a36c:	ldr	r3, [pc, #128]	; a3f4 <preload_is_method_maybe_override+0x20c>
    a370:	ldr	r0, [r3]
    a374:	ldr	ip, [r5, #264]	; 0x108
    a378:	add	r2, ip, r6, lsl #3
    a37c:	ldr	r1, [r2, #4]
    a380:	bl	0 <zend_hash_find>
    a384:	cmp	r0, #0
    a388:	beq	a394 <preload_is_method_maybe_override+0x1ac>
    a38c:	ldr	r0, [r0]
    a390:	b	a398 <preload_is_method_maybe_override+0x1b0>
    a394:	mov	r0, #0
    a398:	add	r0, r0, #40	; 0x28
    a39c:	mov	r1, r4
    a3a0:	bl	0 <zend_hash_find>
    a3a4:	cmp	r0, #0
    a3a8:	movne	r1, #1
    a3ac:	moveq	r1, #0
    a3b0:	and	r2, r1, #255	; 0xff
    a3b4:	cmp	r2, #0
    a3b8:	beq	a3c4 <preload_is_method_maybe_override+0x1dc>
    a3bc:	mov	r0, #1
    a3c0:	b	a3d8 <preload_is_method_maybe_override+0x1f0>
    a3c4:	add	r6, r6, #1
    a3c8:	b	a360 <preload_is_method_maybe_override+0x178>
    a3cc:	mov	r0, #0
    a3d0:	b	a3d8 <preload_is_method_maybe_override+0x1f0>
    a3d4:	mov	r0, #1
    a3d8:	ldr	r4, [sp, #8]
    a3dc:	ldr	r5, [sp, #12]
    a3e0:	ldr	r6, [sp, #16]
    a3e4:	ldr	r7, [sp, #20]
    a3e8:	ldr	lr, [sp, #4]
    a3ec:	add	sp, sp, #24
    a3f0:	bx	lr
    a3f4:	.word	0x00000110

0000a3f8 <preload_needed_types_known>:
    a3f8:	mov	ip, sp
    a3fc:	sub	sp, sp, #32
    a400:	str	ip, [sp]
    a404:	str	lr, [sp, #4]
    a408:	str	r4, [sp, #8]
    a40c:	str	r5, [sp, #12]
    a410:	str	r6, [sp, #16]
    a414:	str	r7, [sp, #20]
    a418:	str	r8, [sp, #24]
    a41c:	str	r9, [sp, #28]
    a420:	mov	r5, r0
    a424:	ldr	r7, [r5, #56]	; 0x38
    a428:	ldr	r2, [r5, #60]	; 0x3c
    a42c:	lsl	r1, r2, #4
    a430:	add	r3, r1, r2, lsl #3
    a434:	add	r6, r7, r3
    a438:	cmp	r7, r6
    a43c:	beq	a504 <preload_needed_types_known+0x10c>
    a440:	mov	r1, r7
    a444:	ldrb	r2, [r1, #8]
    a448:	and	r0, r2, #255	; 0xff
    a44c:	cmp	r0, #0
    a450:	beq	a4fc <preload_needed_types_known+0x104>
    a454:	ldr	r8, [r7, #20]
    a458:	ldr	r9, [r1]
    a45c:	ldr	ip, [r9, #4]
    a460:	and	r0, ip, #8192	; 0x2000
    a464:	cmp	r0, #0
    a468:	beq	a4a4 <preload_needed_types_known+0xac>
    a46c:	ldr	ip, [r9, #28]
    a470:	sub	lr, ip, #4096	; 0x1000
    a474:	ldr	r1, [lr, #4088]	; 0xff8
    a478:	mov	r0, r5
    a47c:	bl	a084 <preload_is_type_known>
    a480:	cmp	r0, #0
    a484:	bne	a4a4 <preload_needed_types_known+0xac>
    a488:	mov	r1, r8
    a48c:	mov	r0, r5
    a490:	bl	a1e8 <preload_is_method_maybe_override>
    a494:	cmp	r0, #0
    a498:	beq	a4a4 <preload_needed_types_known+0xac>
    a49c:	mov	r0, #0
    a4a0:	b	a508 <preload_needed_types_known+0x110>
    a4a4:	mov	r4, #0
    a4a8:	ldr	r3, [r9, #20]
    a4ac:	cmp	r4, r3
    a4b0:	bcs	a4fc <preload_needed_types_known+0x104>
    a4b4:	ldr	ip, [r9, #28]
    a4b8:	lsl	r3, r4, #3
    a4bc:	add	r2, r3, r4, lsl #2
    a4c0:	add	r1, ip, r2
    a4c4:	ldr	r1, [r1, #4]
    a4c8:	mov	r0, r5
    a4cc:	bl	a084 <preload_is_type_known>
    a4d0:	cmp	r0, #0
    a4d4:	bne	a4f4 <preload_needed_types_known+0xfc>
    a4d8:	mov	r1, r8
    a4dc:	mov	r0, r5
    a4e0:	bl	a1e8 <preload_is_method_maybe_override>
    a4e4:	cmp	r0, #0
    a4e8:	beq	a4f4 <preload_needed_types_known+0xfc>
    a4ec:	mov	r0, #0
    a4f0:	b	a508 <preload_needed_types_known+0x110>
    a4f4:	add	r4, r4, #1
    a4f8:	b	a4a8 <preload_needed_types_known+0xb0>
    a4fc:	add	r7, r7, #24
    a500:	b	a438 <preload_needed_types_known+0x40>
    a504:	mov	r0, #1
    a508:	ldr	r4, [sp, #8]
    a50c:	ldr	r5, [sp, #12]
    a510:	ldr	r6, [sp, #16]
    a514:	ldr	r7, [sp, #20]
    a518:	ldr	r8, [sp, #24]
    a51c:	ldr	r9, [sp, #28]
    a520:	ldr	lr, [sp, #4]
    a524:	add	sp, sp, #32
    a528:	bx	lr

0000a52c <preload_resolve_path>:
    a52c:	mov	ip, sp
    a530:	sub	sp, sp, #8
    a534:	str	ip, [sp]
    a538:	str	lr, [sp, #4]
    a53c:	add	r3, r0, #16
    a540:	mov	ip, r3
    a544:	ldrb	r1, [ip]
    a548:	cmp	r1, #97	; 0x61
    a54c:	blt	a558 <preload_resolve_path+0x2c>
    a550:	cmp	r1, #122	; 0x7a
    a554:	ble	a608 <preload_resolve_path+0xdc>
    a558:	ldrb	r1, [ip]
    a55c:	cmp	r1, #65	; 0x41
    a560:	blt	a56c <preload_resolve_path+0x40>
    a564:	cmp	r1, #90	; 0x5a
    a568:	ble	a608 <preload_resolve_path+0xdc>
    a56c:	ldrb	r1, [ip]
    a570:	cmp	r1, #48	; 0x30
    a574:	blt	a580 <preload_resolve_path+0x54>
    a578:	cmp	r1, #57	; 0x39
    a57c:	ble	a608 <preload_resolve_path+0xdc>
    a580:	ldrb	r2, [ip]
    a584:	cmp	r2, #43	; 0x2b
    a588:	beq	a608 <preload_resolve_path+0xdc>
    a58c:	cmp	r2, #45	; 0x2d
    a590:	beq	a608 <preload_resolve_path+0xdc>
    a594:	cmp	r2, #46	; 0x2e
    a598:	beq	a608 <preload_resolve_path+0xdc>
    a59c:	cmp	ip, r3
    a5a0:	beq	a5cc <preload_resolve_path+0xa0>
    a5a4:	cmp	r2, #58	; 0x3a
    a5a8:	bne	a5cc <preload_resolve_path+0xa0>
    a5ac:	ldrb	r1, [ip, #1]
    a5b0:	cmp	r1, #47	; 0x2f
    a5b4:	bne	a5cc <preload_resolve_path+0xa0>
    a5b8:	ldrb	ip, [ip, #2]
    a5bc:	cmp	ip, #47	; 0x2f
    a5c0:	moveq	r1, #1
    a5c4:	movne	r1, #0
    a5c8:	b	a5d0 <preload_resolve_path+0xa4>
    a5cc:	mov	r1, #0
    a5d0:	cmp	r1, #0
    a5d4:	beq	a5e8 <preload_resolve_path+0xbc>
    a5d8:	mov	r0, #0
    a5dc:	ldr	lr, [sp, #4]
    a5e0:	add	sp, sp, #8
    a5e4:	bx	lr
    a5e8:	ldr	r2, [pc, #32]	; a610 <preload_resolve_path+0xe4>
    a5ec:	ldr	ip, [r2]
    a5f0:	add	r2, r0, #16
    a5f4:	ldr	r1, [r0, #12]
    a5f8:	mov	r0, r2
    a5fc:	ldr	lr, [sp, #4]
    a600:	add	sp, sp, #8
    a604:	bx	ip
    a608:	add	ip, ip, #1
    a60c:	b	a544 <preload_resolve_path+0x18>
    a610:	.word	0x00000000

0000a614 <preload_register_trait_methods>:
    a614:	mov	ip, sp
    a618:	sub	sp, sp, #16
    a61c:	str	ip, [sp]
    a620:	str	lr, [sp, #4]
    a624:	str	r4, [sp, #8]
    a628:	str	r5, [sp, #12]
    a62c:	ldr	r4, [r0, #56]	; 0x38
    a630:	ldr	ip, [r0, #60]	; 0x3c
    a634:	lsl	r2, ip, #4
    a638:	add	r1, r2, ip, lsl #3
    a63c:	add	r5, r4, r1
    a640:	cmp	r4, r5
    a644:	beq	a680 <preload_register_trait_methods+0x6c>
    a648:	mov	r1, r4
    a64c:	ldrb	r3, [r1, #8]
    a650:	and	r0, r3, #255	; 0xff
    a654:	cmp	r0, #0
    a658:	beq	a678 <preload_register_trait_methods+0x64>
    a65c:	ldr	r1, [r4]
    a660:	ldr	r0, [r1, #4]
    a664:	and	r3, r0, #134217728	; 0x8000000
    a668:	cmp	r3, #0
    a66c:	bne	a678 <preload_register_trait_methods+0x64>
    a670:	ldr	r0, [r1, #48]	; 0x30
    a674:	bl	0 <zend_shared_alloc_register_xlat_entry>
    a678:	add	r4, r4, #24
    a67c:	b	a640 <preload_register_trait_methods+0x2c>
    a680:	ldr	r4, [sp, #8]
    a684:	ldr	r5, [sp, #12]
    a688:	ldr	lr, [sp, #4]
    a68c:	add	sp, sp, #16
    a690:	bx	lr

0000a694 <preload_fix_trait_methods>:
    a694:	mov	ip, sp
    a698:	sub	sp, sp, #32
    a69c:	str	ip, [sp]
    a6a0:	str	lr, [sp, #4]
    a6a4:	str	r4, [sp, #8]
    a6a8:	str	r5, [sp, #12]
    a6ac:	str	r6, [sp, #16]
    a6b0:	str	r7, [sp, #20]
    a6b4:	str	r8, [sp, #24]
    a6b8:	str	r9, [sp, #28]
    a6bc:	ldr	r4, [r0, #56]	; 0x38
    a6c0:	ldr	r3, [r0, #60]	; 0x3c
    a6c4:	lsl	r2, r3, #4
    a6c8:	add	ip, r2, r3, lsl #3
    a6cc:	add	r5, r4, ip
    a6d0:	cmp	r4, r5
    a6d4:	beq	a754 <preload_fix_trait_methods+0xc0>
    a6d8:	mov	r0, r4
    a6dc:	ldrb	r1, [r0, #8]
    a6e0:	and	r1, r1, #255	; 0xff
    a6e4:	cmp	r1, #0
    a6e8:	beq	a74c <preload_fix_trait_methods+0xb8>
    a6ec:	ldr	r6, [r4]
    a6f0:	ldr	r0, [r6, #4]
    a6f4:	and	r3, r0, #134217728	; 0x8000000
    a6f8:	cmp	r3, #0
    a6fc:	beq	a74c <preload_fix_trait_methods+0xb8>
    a700:	ldr	r0, [r6, #48]	; 0x30
    a704:	bl	0 <zend_shared_alloc_get_xlat_entry>
    a708:	cmp	r0, #0
    a70c:	beq	a74c <preload_fix_trait_methods+0xb8>
    a710:	ldr	r7, [r6, #12]
    a714:	ldr	r1, [r6, #4]
    a718:	ldr	r9, [r6, #16]
    a71c:	ldr	r8, [r6, #60]	; 0x3c
    a720:	mov	r2, r0
    a724:	mov	r3, r6
    a728:	mov	lr, #34	; 0x22
    a72c:	ldr	ip, [r2], #4
    a730:	subs	lr, lr, #1
    a734:	str	ip, [r3], #4
    a738:	bne	a72c <preload_fix_trait_methods+0x98>
    a73c:	str	r7, [r6, #12]
    a740:	str	r1, [r6, #4]
    a744:	str	r9, [r6, #16]
    a748:	str	r8, [r6, #60]	; 0x3c
    a74c:	add	r4, r4, #24
    a750:	b	a6d0 <preload_fix_trait_methods+0x3c>
    a754:	ldr	r4, [sp, #8]
    a758:	ldr	r5, [sp, #12]
    a75c:	ldr	r6, [sp, #16]
    a760:	ldr	r7, [sp, #20]
    a764:	ldr	r8, [sp, #24]
    a768:	ldr	r9, [sp, #28]
    a76c:	ldr	lr, [sp, #4]
    a770:	add	sp, sp, #32
    a774:	bx	lr

0000a778 <preload_script_in_shared_memory>:
    a778:	mov	ip, sp
    a77c:	sub	sp, sp, #32
    a780:	str	ip, [sp, #8]
    a784:	str	lr, [sp, #12]
    a788:	str	r4, [sp, #16]
    a78c:	str	r5, [sp, #20]
    a790:	str	r6, [sp, #24]
    a794:	mov	r6, r0
    a798:	ldr	ip, [pc, #496]	; a990 <preload_script_in_shared_memory+0x218>
    a79c:	ldr	r2, [ip]
    a7a0:	ldr	r0, [r2, #32]
    a7a4:	ldr	ip, [r2, #36]	; 0x24
    a7a8:	cmp	r0, ip
    a7ac:	beq	a7b8 <preload_script_in_shared_memory+0x40>
    a7b0:	mov	r2, #0
    a7b4:	b	a7bc <preload_script_in_shared_memory+0x44>
    a7b8:	mov	r2, #1
    a7bc:	cmp	r2, #0
    a7c0:	beq	a7d8 <preload_script_in_shared_memory+0x60>
    a7c4:	mov	r0, #0
    a7c8:	ldr	r1, [pc, #440]	; a988 <preload_script_in_shared_memory+0x210>
    a7cc:	bl	0 <zend_accel_error>
    a7d0:	mov	r0, #0
    a7d4:	b	a960 <preload_script_in_shared_memory+0x1e8>
    a7d8:	bl	0 <zend_shared_alloc_checkpoint_xlat_table>
    a7dc:	mov	r4, r0
    a7e0:	mov	r1, #0
    a7e4:	mov	r2, #0
    a7e8:	mov	r3, #1
    a7ec:	mov	r0, r6
    a7f0:	bl	0 <zend_accel_script_persist_calc>
    a7f4:	mov	r5, r0
    a7f8:	mov	r0, r5
    a7fc:	bl	0 <zend_shared_alloc>
    a800:	ldr	r2, [pc, #380]	; a984 <preload_script_in_shared_memory+0x20c>
    a804:	str	r0, [r2]
    a808:	cmp	r0, #0
    a80c:	beq	a81c <preload_script_in_shared_memory+0xa4>
    a810:	mov	r1, #0
    a814:	mov	r2, r5
    a818:	bl	0 <memset>
    a81c:	ldr	ip, [pc, #352]	; a984 <preload_script_in_shared_memory+0x20c>
    a820:	ldr	r0, [ip]
    a824:	cmp	r0, #0
    a828:	bne	a840 <preload_script_in_shared_memory+0xc8>
    a82c:	mov	r0, #0
    a830:	ldr	r1, [pc, #320]	; a978 <preload_script_in_shared_memory+0x200>
    a834:	bl	0 <zend_accel_error>
    a838:	mov	r0, #0
    a83c:	b	a960 <preload_script_in_shared_memory+0x1e8>
    a840:	mov	r0, r4
    a844:	bl	0 <zend_shared_alloc_restore_xlat_table>
    a848:	mov	r1, #0
    a84c:	mov	r2, #0
    a850:	mov	r3, #1
    a854:	mov	r0, r6
    a858:	bl	0 <zend_accel_script_persist>
    a85c:	mov	r5, r0
    a860:	ldr	r4, [r5]
    a864:	cmp	r4, #0
    a868:	beq	a8b0 <preload_script_in_shared_memory+0x138>
    a86c:	ldr	ip, [r4, #12]
    a870:	cmp	ip, #6
    a874:	bcc	a8b0 <preload_script_in_shared_memory+0x138>
    a878:	add	ip, r4, ip
    a87c:	add	r0, ip, #11
    a880:	ldr	r1, [pc, #244]	; a97c <preload_script_in_shared_memory+0x204>
    a884:	mov	r2, #5
    a888:	bl	0 <memcmp>
    a88c:	cmp	r0, #0
    a890:	bne	a8b0 <preload_script_in_shared_memory+0x138>
    a894:	add	r0, r4, #16
    a898:	ldr	r1, [pc, #236]	; a98c <preload_script_in_shared_memory+0x214>
    a89c:	bl	0 <strstr>
    a8a0:	cmp	r0, #0
    a8a4:	moveq	r1, #1
    a8a8:	movne	r1, #0
    a8ac:	b	a8b4 <preload_script_in_shared_memory+0x13c>
    a8b0:	mov	r1, #0
    a8b4:	strb	r1, [r5, #245]	; 0xf5
    a8b8:	ldr	r3, [r5, #248]	; 0xf8
    a8bc:	ldr	r2, [r5, #252]	; 0xfc
    a8c0:	add	r4, r3, r2
    a8c4:	ldr	r2, [pc, #184]	; a984 <preload_script_in_shared_memory+0x20c>
    a8c8:	ldr	ip, [r2]
    a8cc:	cmp	r4, ip
    a8d0:	beq	a900 <preload_script_in_shared_memory+0x188>
    a8d4:	mov	r0, #1
    a8d8:	mov	r2, #2
    a8dc:	cmp	r4, ip
    a8e0:	movcc	r0, r0
    a8e4:	movcs	r0, r2
    a8e8:	ldr	r1, [pc, #144]	; a980 <preload_script_in_shared_memory+0x208>
    a8ec:	ldr	r2, [r5]
    a8f0:	add	r2, r2, #16
    a8f4:	str	ip, [sp, #4]
    a8f8:	str	r4, [sp]
    a8fc:	bl	0 <zend_accel_error>
    a900:	mov	r0, r5
    a904:	bl	0 <zend_accel_script_checksum>
    a908:	str	r0, [r5, #276]	; 0x114
    a90c:	ldr	r1, [pc, #124]	; a990 <preload_script_in_shared_memory+0x218>
    a910:	ldr	r0, [r1]
    a914:	add	r0, r0, #24
    a918:	ldr	r3, [r5]
    a91c:	add	r1, r3, #16
    a920:	ldr	r2, [r3, #12]
    a924:	mov	r3, #0
    a928:	str	r5, [sp]
    a92c:	bl	0 <zend_accel_hash_update>
    a930:	cmp	r0, #0
    a934:	beq	a94c <preload_script_in_shared_memory+0x1d4>
    a938:	mov	r0, #3
    a93c:	ldr	r1, [pc, #80]	; a994 <preload_script_in_shared_memory+0x21c>
    a940:	ldr	r2, [r5]
    a944:	add	r2, r2, #16
    a948:	bl	0 <zend_accel_error>
    a94c:	ldr	r1, [r5, #252]	; 0xfc
    a950:	add	r3, r1, #7
    a954:	bic	r3, r3, #7
    a958:	str	r3, [r5, #272]	; 0x110
    a95c:	mov	r0, r5
    a960:	ldr	r4, [sp, #16]
    a964:	ldr	r5, [sp, #20]
    a968:	ldr	r6, [sp, #24]
    a96c:	ldr	lr, [sp, #12]
    a970:	add	sp, sp, #32
    a974:	bx	lr
    a978:	.word	0x0000015d
    a97c:	.word	0x0000091d
    a980:	.word	0x000000b3
    a984:	.word	0x00000134
    a988:	.word	0x000003dc
    a98c:	.word	0x000003b1
    a990:	.word	0x00000000
    a994:	.word	0x00000476

0000a998 <preload_load>:
    a998:	mov	ip, sp
    a99c:	sub	sp, sp, #24
    a9a0:	str	ip, [sp]
    a9a4:	str	lr, [sp, #4]
    a9a8:	str	r4, [sp, #8]
    a9ac:	str	r5, [sp, #12]
    a9b0:	str	r6, [sp, #16]
    a9b4:	ldr	r0, [pc, #556]	; abe8 <preload_load+0x250>
    a9b8:	ldr	r0, [r0]
    a9bc:	ldr	r1, [r0, #72]	; 0x48
    a9c0:	ldr	r2, [r1, #164]	; 0xa4
    a9c4:	cmp	r2, #0
    a9c8:	beq	aa5c <preload_load+0xc4>
    a9cc:	ldr	r3, [r1, #156]	; 0x9c
    a9d0:	ldr	ip, [r1, #160]	; 0xa0
    a9d4:	lsl	r1, ip, #4
    a9d8:	add	r1, r1, ip, lsl #3
    a9dc:	add	r4, r3, r1
    a9e0:	cmp	r3, r4
    a9e4:	beq	aa5c <preload_load+0xc4>
    a9e8:	ldr	ip, [pc, #460]	; abbc <preload_load+0x224>
    a9ec:	ldr	ip, [ip]
    a9f0:	ldr	r0, [r3, #20]
    a9f4:	ldr	r1, [r3]
    a9f8:	ldr	r2, [ip, #20]
    a9fc:	add	r5, r2, #1
    aa00:	str	r5, [ip, #20]
    aa04:	ldr	r5, [ip, #16]
    aa08:	lsl	r6, r2, #4
    aa0c:	add	r2, r6, r2, lsl #3
    aa10:	add	r5, r5, r2
    aa14:	str	r1, [r5]
    aa18:	mov	r1, #14
    aa1c:	str	r1, [r5, #8]
    aa20:	str	r0, [r5, #20]
    aa24:	ldr	r0, [r0, #8]
    aa28:	str	r0, [r5, #16]
    aa2c:	ldr	r1, [ip, #12]
    aa30:	orr	r1, r0, r1
    aa34:	ldr	r0, [ip, #16]
    aa38:	ldr	r0, [r0, r1, lsl #2]
    aa3c:	str	r0, [r5, #12]
    aa40:	ldr	r0, [ip, #16]
    aa44:	str	r2, [r0, r1, lsl #2]
    aa48:	ldr	r0, [ip, #24]
    aa4c:	add	r0, r0, #1
    aa50:	str	r0, [ip, #24]
    aa54:	add	r3, r3, #24
    aa58:	b	a9e0 <preload_load+0x48>
    aa5c:	ldr	r0, [pc, #388]	; abe8 <preload_load+0x250>
    aa60:	ldr	r0, [r0]
    aa64:	ldr	r3, [r0, #72]	; 0x48
    aa68:	ldr	r1, [r3, #208]	; 0xd0
    aa6c:	cmp	r1, #0
    aa70:	beq	ab04 <preload_load+0x16c>
    aa74:	ldr	r4, [r3, #200]	; 0xc8
    aa78:	ldr	r1, [r3, #204]	; 0xcc
    aa7c:	lsl	r0, r1, #4
    aa80:	add	r3, r0, r1, lsl #3
    aa84:	add	r3, r4, r3
    aa88:	cmp	r4, r3
    aa8c:	beq	ab04 <preload_load+0x16c>
    aa90:	ldr	ip, [pc, #300]	; abc4 <preload_load+0x22c>
    aa94:	ldr	r1, [ip]
    aa98:	ldr	r0, [r4, #20]
    aa9c:	ldr	ip, [r4]
    aaa0:	ldr	r2, [r1, #20]
    aaa4:	add	r5, r2, #1
    aaa8:	str	r5, [r1, #20]
    aaac:	ldr	r5, [r1, #16]
    aab0:	lsl	r6, r2, #4
    aab4:	add	r2, r6, r2, lsl #3
    aab8:	add	r5, r5, r2
    aabc:	str	ip, [r5]
    aac0:	mov	ip, #14
    aac4:	str	ip, [r5, #8]
    aac8:	str	r0, [r5, #20]
    aacc:	ldr	r0, [r0, #8]
    aad0:	str	r0, [r5, #16]
    aad4:	ldr	ip, [r1, #12]
    aad8:	orr	r0, r0, ip
    aadc:	ldr	ip, [r1, #16]
    aae0:	ldr	ip, [ip, r0, lsl #2]
    aae4:	str	ip, [r5, #12]
    aae8:	ldr	ip, [r1, #16]
    aaec:	str	r2, [ip, r0, lsl #2]
    aaf0:	ldr	r2, [r1, #24]
    aaf4:	add	ip, r2, #1
    aaf8:	str	ip, [r1, #24]
    aafc:	add	r4, r4, #24
    ab00:	b	aa88 <preload_load+0xf0>
    ab04:	ldr	r0, [pc, #188]	; abc8 <preload_load+0x230>
    ab08:	ldr	r2, [r0]
    ab0c:	cmp	r2, #0
    ab10:	beq	ab20 <preload_load+0x188>
    ab14:	ldr	r1, [pc, #180]	; abd0 <preload_load+0x238>
    ab18:	ldr	r0, [r2, #20]
    ab1c:	str	r0, [r1]
    ab20:	ldr	r0, [pc, #172]	; abd4 <preload_load+0x23c>
    ab24:	ldr	r0, [r0]
    ab28:	cmp	r0, #0
    ab2c:	beq	ab3c <preload_load+0x1a4>
    ab30:	ldr	r1, [pc, #172]	; abe4 <preload_load+0x24c>
    ab34:	ldr	r3, [r0, #20]
    ab38:	str	r3, [r1]
    ab3c:	ldr	r0, [pc, #152]	; abdc <preload_load+0x244>
    ab40:	ldr	r3, [r0]
    ab44:	cmp	r3, #0
    ab48:	beq	ab58 <preload_load+0x1c0>
    ab4c:	ldr	r2, [pc, #132]	; abd8 <preload_load+0x240>
    ab50:	ldr	r3, [r3, #20]
    ab54:	str	r3, [r2]
    ab58:	ldr	ip, [pc, #128]	; abe0 <preload_load+0x248>
    ab5c:	ldr	r1, [ip]
    ab60:	ldr	r0, [pc, #128]	; abe8 <preload_load+0x250>
    ab64:	ldr	r2, [r0]
    ab68:	ldr	r3, [r2, #44]	; 0x2c
    ab6c:	cmp	r1, r3
    ab70:	beq	aba4 <preload_load+0x20c>
    ab74:	str	r3, [ip]
    ab78:	ldr	ip, [pc, #64]	; abc0 <preload_load+0x228>
    ab7c:	add	r2, r3, #4096	; 0x1000
    ab80:	bic	r3, r2, #255	; 0xff
    ab84:	bic	r3, r3, #3840	; 0xf00
    ab88:	str	r3, [ip]
    ab8c:	ldr	ip, [pc, #56]	; abcc <preload_load+0x234>
    ab90:	ldr	r0, [ip]
    ab94:	lsl	r1, r3, #2
    ab98:	bl	0 <__zend_realloc>
    ab9c:	ldr	r1, [pc, #40]	; abcc <preload_load+0x234>
    aba0:	str	r0, [r1]
    aba4:	ldr	r4, [sp, #8]
    aba8:	ldr	r5, [sp, #12]
    abac:	ldr	r6, [sp, #16]
    abb0:	ldr	lr, [sp, #4]
    abb4:	add	sp, sp, #24
    abb8:	bx	lr
    abbc:	.word	0x00000020
    abc0:	.word	0x00000158
    abc4:	.word	0x00000024
    abc8:	.word	0x00000114
    abcc:	.word	0x00000154
    abd0:	.word	0x00000138
    abd4:	.word	0x0000010c
    abd8:	.word	0x00000140
    abdc:	.word	0x00000110
    abe0:	.word	0x0000015c
    abe4:	.word	0x0000013c
    abe8:	.word	0x00000000

0000abec <preload_ub_write>:
    abec:	mov	ip, sp
    abf0:	sub	sp, sp, #8
    abf4:	str	ip, [sp]
    abf8:	str	lr, [sp, #4]
    abfc:	mov	r2, #1
    ac00:	ldr	r3, [pc, #24]	; ac20 <preload_ub_write+0x34>
    ac04:	ldr	r3, [r3]
    ac08:	mov	ip, r1
    ac0c:	mov	r1, r2
    ac10:	mov	r2, ip
    ac14:	ldr	lr, [sp, #4]
    ac18:	add	sp, sp, #8
    ac1c:	b	0 <fwrite>
    ac20:	.word	0x00000000

0000ac24 <preload_flush>:
    ac24:	mov	ip, sp
    ac28:	sub	sp, sp, #8
    ac2c:	str	ip, [sp]
    ac30:	str	lr, [sp, #4]
    ac34:	ldr	r0, [pc, #16]	; ac4c <preload_flush+0x28>
    ac38:	ldr	r0, [r0]
    ac3c:	bl	0 <fflush>
    ac40:	ldr	lr, [sp, #4]
    ac44:	add	sp, sp, #8
    ac48:	bx	lr
    ac4c:	.word	0x00000000

0000ac50 <preload_header_handler>:
    ac50:	mov	ip, sp
    ac54:	sub	sp, sp, #8
    ac58:	str	ip, [sp]
    ac5c:	str	lr, [sp, #4]
    ac60:	mov	r0, #0
    ac64:	ldr	lr, [sp, #4]
    ac68:	add	sp, sp, #8
    ac6c:	bx	lr

0000ac70 <preload_send_headers>:
    ac70:	mov	ip, sp
    ac74:	sub	sp, sp, #8
    ac78:	str	ip, [sp]
    ac7c:	str	lr, [sp, #4]
    ac80:	mov	r0, #1
    ac84:	ldr	lr, [sp, #4]
    ac88:	add	sp, sp, #8
    ac8c:	bx	lr

0000ac90 <preload_send_header>:
    ac90:	mov	ip, sp
    ac94:	sub	sp, sp, #8
    ac98:	str	ip, [sp]
    ac9c:	str	lr, [sp, #4]
    aca0:	ldr	lr, [sp, #4]
    aca4:	add	sp, sp, #8
    aca8:	bx	lr
