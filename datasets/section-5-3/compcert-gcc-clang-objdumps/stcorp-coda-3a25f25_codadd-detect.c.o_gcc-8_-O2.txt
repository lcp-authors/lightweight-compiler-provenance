
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-detect.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <indent>:
   0:	movw	r3, #0
   4:	movt	r3, #0
   8:	strd	r4, [sp, #-16]!
   c:	ldr	r4, [r3]
  10:	str	r6, [sp, #8]
  14:	str	lr, [sp, #12]
  18:	cmp	r4, #0
  1c:	blt	4c <indent+0x4c>
  20:	beq	3c <indent+0x3c>
  24:	movw	r5, #0
  28:	movt	r5, #0
  2c:	mov	r0, r5
  30:	bl	0 <printf>
  34:	subs	r4, r4, #1
  38:	bne	2c <indent+0x2c>
  3c:	ldrd	r4, [sp]
  40:	ldr	r6, [sp, #8]
  44:	add	sp, sp, #12
  48:	pop	{pc}		; (ldr pc, [sp], #4)
  4c:	movw	r3, #0
  50:	movt	r3, #0
  54:	movw	r1, #0
  58:	movt	r1, #0
  5c:	movw	r0, #0
  60:	movt	r0, #0
  64:	mov	r2, #52	; 0x34
  68:	bl	0 <__assert_fail>

0000006c <generate_detection_tree_sub>:
  6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
  70:	strd	r6, [sp, #8]
  74:	subs	r6, r0, #0
  78:	str	r8, [sp, #16]
  7c:	str	lr, [sp, #20]
  80:	beq	14c <generate_detection_tree_sub+0xe0>
  84:	ldr	r3, [r6]
  88:	mov	r7, r1
  8c:	cmp	r3, #0
  90:	beq	160 <generate_detection_tree_sub+0xf4>
  94:	bl	0 <indent>
  98:	movw	r0, #0
  9c:	movt	r0, #0
  a0:	ldr	r1, [r6]
  a4:	bl	0 <printf>
  a8:	ldr	r3, [r6, #8]
  ac:	cmp	r3, #0
  b0:	beq	f4 <generate_detection_tree_sub+0x88>
  b4:	ldr	r3, [r3, #8]
  b8:	movw	r0, #0
  bc:	movt	r0, #0
  c0:	ldr	r2, [r3, #44]	; 0x2c
  c4:	ldr	r3, [r3, #4]
  c8:	ldr	r1, [r2, #20]
  cc:	ldr	r2, [r2]
  d0:	ldr	r1, [r1]
  d4:	bl	0 <printf>
  d8:	ldr	r2, [r6, #12]
  dc:	cmp	r2, #0
  e0:	ble	188 <generate_detection_tree_sub+0x11c>
  e4:	movw	r0, #0
  e8:	movt	r0, #0
  ec:	mov	r1, r7
  f0:	bl	0 <printf>
  f4:	mov	r0, #10
  f8:	bl	0 <putchar>
  fc:	ldr	r3, [r6, #12]
 100:	cmp	r3, #0
 104:	ble	14c <generate_detection_tree_sub+0xe0>
 108:	movw	r5, #0
 10c:	movt	r5, #0
 110:	ldr	r3, [r5]
 114:	mov	r4, #0
 118:	add	r3, r3, #1
 11c:	add	r1, r7, r4
 120:	ldr	r2, [r6, #16]
 124:	str	r3, [r5]
 128:	ldr	r0, [r2, r4, lsl #2]
 12c:	add	r4, r4, #1
 130:	bl	6c <generate_detection_tree_sub>
 134:	ldr	r3, [r5]
 138:	ldr	r2, [r6, #12]
 13c:	sub	r3, r3, #1
 140:	cmp	r2, r4
 144:	str	r3, [r5]
 148:	bgt	118 <generate_detection_tree_sub+0xac>
 14c:	ldrd	r4, [sp]
 150:	ldrd	r6, [sp, #8]
 154:	ldr	r8, [sp, #16]
 158:	add	sp, sp, #20
 15c:	pop	{pc}		; (ldr pc, [sp], #4)
 160:	ldr	r3, [r6, #4]
 164:	cmp	r3, #0
 168:	beq	fc <generate_detection_tree_sub+0x90>
 16c:	bl	0 <indent>
 170:	movw	r1, #0
 174:	movt	r1, #0
 178:	ldr	r0, [r6, #4]
 17c:	add	r7, r7, #1
 180:	bl	0 <coda_expression_print>
 184:	b	a8 <generate_detection_tree_sub+0x3c>
 188:	movw	r0, #0
 18c:	movt	r0, #0
 190:	mov	r1, r7
 194:	bl	0 <printf>
 198:	b	f4 <generate_detection_tree_sub+0x88>

0000019c <generate_detection_tree>:
 19c:	str	r4, [sp, #-8]!
 1a0:	str	lr, [sp, #4]
 1a4:	bl	0 <coda_data_dictionary_get_detection_tree>
 1a8:	mov	r1, #0
 1ac:	ldr	r4, [sp]
 1b0:	ldr	lr, [sp, #4]
 1b4:	add	sp, sp, #8
 1b8:	b	6c <generate_detection_tree_sub>
