
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	push	{r4, r5, r6, r7, r8, r9, lr}
       4:	sub	sp, sp, #84	; 0x54
       8:	ldr	r5, [r0, #48]	; 0x30
       c:	mov	r6, r2
      10:	cmp	r5, #0
      14:	mov	r7, r3
      18:	mov	r4, r0
      1c:	ldrd	r2, [sp, #112]	; 0x70
      20:	beq	cc <read_bytes+0xcc>
      24:	ldrd	r8, [r0, #40]	; 0x28
      28:	adds	r0, r6, r2
      2c:	adc	r1, r7, r3
      30:	cmp	r1, r9
      34:	cmpeq	r0, r8
      38:	bls	b4 <read_bytes+0xb4>
      3c:	ldr	r1, [r4, #16]
      40:	cmp	r1, #1
      44:	bls	9c <read_bytes+0x9c>
      48:	mov	r1, r3
      4c:	mov	r0, r2
      50:	add	r2, sp, #8
      54:	bl	0 <coda_str64>
      58:	add	r5, sp, #56	; 0x38
      5c:	mov	r0, r6
      60:	mov	r1, r7
      64:	add	r2, sp, #32
      68:	bl	0 <coda_str64>
      6c:	ldrd	r0, [r4, #40]	; 0x28
      70:	mov	r2, r5
      74:	bl	0 <coda_str64>
      78:	mvn	r0, #300	; 0x12c
      7c:	str	r5, [sp]
      80:	add	r3, sp, #32
      84:	add	r2, sp, #8
      88:	ldr	r1, [pc, #180]	; 144 <read_bytes+0x144>
      8c:	bl	0 <coda_set_error>
      90:	mvn	r0, #0
      94:	add	sp, sp, #84	; 0x54
      98:	pop	{r4, r5, r6, r7, r8, r9, pc}
      9c:	ldr	r1, [pc, #164]	; 148 <read_bytes+0x148>
      a0:	mvn	r0, #300	; 0x12c
      a4:	bl	0 <coda_set_error>
      a8:	mvn	r0, #0
      ac:	add	sp, sp, #84	; 0x54
      b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
      b4:	add	r1, r5, r6
      b8:	ldr	r0, [sp, #120]	; 0x78
      bc:	bl	0 <memcpy>
      c0:	mov	r0, #0
      c4:	add	sp, sp, #84	; 0x54
      c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
      cc:	ldr	r1, [r0, #16]
      d0:	cmp	r1, #1
      d4:	bhi	130 <read_bytes+0x130>
      d8:	ldrd	r8, [r0, #8]
      dc:	adds	r0, r6, r2
      e0:	adc	r1, r7, r3
      e4:	cmp	r1, r9
      e8:	cmpeq	r0, r8
      ec:	bhi	9c <read_bytes+0x9c>
      f0:	mov	r3, r6
      f4:	ldr	r0, [r4, #56]	; 0x38
      f8:	ldr	r1, [sp, #120]	; 0x78
      fc:	bl	0 <pread>
     100:	cmp	r0, #0
     104:	movge	r0, r5
     108:	bge	94 <read_bytes+0x94>
     10c:	bl	0 <__errno_location>
     110:	ldr	r0, [r0]
     114:	bl	0 <strerror>
     118:	ldr	r1, [pc, #44]	; 14c <read_bytes+0x14c>
     11c:	mov	r2, r0
     120:	mvn	r0, #21
     124:	bl	0 <coda_set_error>
     128:	mvn	r0, #0
     12c:	b	94 <read_bytes+0x94>
     130:	ldr	r3, [pc, #24]	; 150 <read_bytes+0x150>
     134:	mov	r2, #83	; 0x53
     138:	ldr	r1, [pc, #20]	; 154 <read_bytes+0x154>
     13c:	ldr	r0, [pc, #20]	; 158 <read_bytes+0x158>
     140:	bl	0 <__assert_fail>
     144:	.word	0x0000002c
     148:	.word	0x00000000
     14c:	.word	0x00000108
     150:	.word	0x00000000
     154:	.word	0x00000068
     158:	.word	0x000000b8

0000015c <ibmfloat_to_iee754>:
     15c:	ldrb	r1, [r0, #1]
     160:	ldrb	r2, [r0, #2]
     164:	ldrb	r3, [r0, #3]
     168:	add	r2, r2, r1, lsl #8
     16c:	adds	r3, r3, r2, lsl #8
     170:	beq	1d0 <ibmfloat_to_iee754+0x74>
     174:	ldrb	r0, [r0]
     178:	ldr	r1, [pc, #144]	; 210 <ibmfloat_to_iee754+0xb4>
     17c:	and	r2, r0, #127	; 0x7f
     180:	cmp	r3, r1
     184:	lsl	r2, r2, #2
     188:	sub	r2, r2, #130	; 0x82
     18c:	bgt	1a0 <ibmfloat_to_iee754+0x44>
     190:	lsl	r3, r3, #1
     194:	cmp	r3, r1
     198:	sub	r2, r2, #1
     19c:	bls	190 <ibmfloat_to_iee754+0x34>
     1a0:	cmp	r2, #254	; 0xfe
     1a4:	bgt	1dc <ibmfloat_to_iee754+0x80>
     1a8:	cmp	r2, #0
     1ac:	ble	1f0 <ibmfloat_to_iee754+0x94>
     1b0:	bic	r3, r3, #-16777216	; 0xff000000
     1b4:	bic	r3, r3, #8388608	; 0x800000
     1b8:	lsl	r2, r2, #23
     1bc:	lsr	r0, r0, #7
     1c0:	orr	r2, r2, r0, lsl #31
     1c4:	orr	r3, r2, r3
     1c8:	vmov	s0, r3
     1cc:	bx	lr
     1d0:	mov	r3, #0
     1d4:	vmov	s0, r3
     1d8:	bx	lr
     1dc:	push	{r4, lr}
     1e0:	bl	0 <coda_PlusInf>
     1e4:	vcvt.f32.f64	s15, d0
     1e8:	vmov.f32	s0, s15
     1ec:	pop	{r4, pc}
     1f0:	cmn	r2, #24
     1f4:	rsbge	ip, r2, #0
     1f8:	ldrge	r1, [pc, #16]	; 210 <ibmfloat_to_iee754+0xb4>
     1fc:	movlt	r3, #0
     200:	movge	r2, #0
     204:	andge	r3, r1, r3, lsr ip
     208:	movlt	r2, r3
     20c:	b	1bc <ibmfloat_to_iee754+0x60>
     210:	.word	0x007fffff

00000214 <read_grib1_message>:
     214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     218:	vpush	{d8}
     21c:	mov	r6, #28
     220:	mov	r7, #0
     224:	mov	r4, r0
     228:	sub	sp, sp, #148	; 0x94
     22c:	add	ip, sp, #116	; 0x74
     230:	ldr	r0, [r0, #52]	; 0x34
     234:	strd	r6, [sp]
     238:	str	ip, [sp, #8]
     23c:	str	ip, [sp, #24]
     240:	mov	r6, r1
     244:	strd	r2, [sp, #32]
     248:	bl	0 <read_bytes>
     24c:	cmp	r0, #0
     250:	blt	880 <read_grib1_message+0x66c>
     254:	ldr	r5, [pc, #3252]	; f10 <read_grib1_message+0xcfc>
     258:	ldrb	r2, [sp, #116]	; 0x74
     25c:	bl	0 <__aeabi_read_tp>
     260:	ldrb	ip, [sp, #117]	; 0x75
     264:	ldr	r3, [r5, r0]
     268:	ldrb	r8, [sp, #118]	; 0x76
     26c:	add	ip, ip, r2, lsl #8
     270:	mov	r7, r0
     274:	mov	r2, r4
     278:	ldr	r0, [r3, #8]
     27c:	mov	r1, #0
     280:	ldrb	r3, [sp, #119]	; 0x77
     284:	add	r8, r8, ip, lsl #8
     288:	bl	0 <coda_mem_uint8_new>
     28c:	mov	r3, #0
     290:	ldr	r1, [pc, #3196]	; f14 <read_grib1_message+0xd00>
     294:	mov	r2, r0
     298:	mov	r0, r6
     29c:	bl	0 <coda_mem_record_add_field>
     2a0:	ldr	r1, [r5, r7]
     2a4:	ldrb	r3, [sp, #120]	; 0x78
     2a8:	mov	r2, r4
     2ac:	ldr	r0, [r1, #16]
     2b0:	mov	r1, #0
     2b4:	bl	0 <coda_mem_uint8_new>
     2b8:	mov	r3, #0
     2bc:	ldr	r1, [pc, #3156]	; f18 <read_grib1_message+0xd04>
     2c0:	mov	r2, r0
     2c4:	mov	r0, r6
     2c8:	bl	0 <coda_mem_record_add_field>
     2cc:	ldr	r1, [r5, r7]
     2d0:	ldrb	r3, [sp, #121]	; 0x79
     2d4:	mov	r2, r4
     2d8:	ldr	r0, [r1, #20]
     2dc:	mov	r1, #0
     2e0:	bl	0 <coda_mem_uint8_new>
     2e4:	mov	r3, #0
     2e8:	ldr	r1, [pc, #3116]	; f1c <read_grib1_message+0xd08>
     2ec:	mov	r2, r0
     2f0:	mov	r0, r6
     2f4:	bl	0 <coda_mem_record_add_field>
     2f8:	ldr	r3, [r5, r7]
     2fc:	ldrb	r9, [sp, #122]	; 0x7a
     300:	mov	r2, r4
     304:	ldr	r0, [r3, #24]
     308:	mov	r1, #0
     30c:	mov	r3, r9
     310:	bl	0 <coda_mem_uint8_new>
     314:	mov	r3, #0
     318:	ldr	r1, [pc, #3072]	; f20 <read_grib1_message+0xd0c>
     31c:	mov	r2, r0
     320:	mov	r0, r6
     324:	bl	0 <coda_mem_record_add_field>
     328:	ldrb	ip, [sp, #123]	; 0x7b
     32c:	ldr	r2, [r5, r7]
     330:	ldrb	r3, [sp, #124]	; 0x7c
     334:	mov	r1, #0
     338:	sxtb	lr, ip
     33c:	ldr	r0, [r2, #28]
     340:	and	ip, ip, #64	; 0x40
     344:	mov	r2, r4
     348:	str	lr, [sp, #40]	; 0x28
     34c:	str	ip, [sp, #28]
     350:	bl	0 <coda_mem_uint8_new>
     354:	mov	r3, #0
     358:	ldr	r1, [pc, #3012]	; f24 <read_grib1_message+0xd10>
     35c:	mov	r2, r0
     360:	mov	r0, r6
     364:	bl	0 <coda_mem_record_add_field>
     368:	ldr	r1, [r5, r7]
     36c:	ldrb	r3, [sp, #125]	; 0x7d
     370:	mov	r2, r4
     374:	ldr	r0, [r1, #32]
     378:	mov	r1, #0
     37c:	bl	0 <coda_mem_uint8_new>
     380:	mov	r3, #0
     384:	ldr	r1, [pc, #2972]	; f28 <read_grib1_message+0xd14>
     388:	mov	r2, r0
     38c:	mov	r0, r6
     390:	bl	0 <coda_mem_record_add_field>
     394:	ldrb	r0, [sp, #126]	; 0x7e
     398:	ldrb	r3, [sp, #127]	; 0x7f
     39c:	ldr	r1, [r5, r7]
     3a0:	mov	r2, r4
     3a4:	add	r3, r3, r0, lsl #8
     3a8:	ldr	r0, [r1, #36]	; 0x24
     3ac:	uxth	r3, r3
     3b0:	mov	r1, #0
     3b4:	bl	0 <coda_mem_uint16_new>
     3b8:	mov	r3, #0
     3bc:	ldr	r1, [pc, #2920]	; f2c <read_grib1_message+0xd18>
     3c0:	mov	r2, r0
     3c4:	mov	r0, r6
     3c8:	bl	0 <coda_mem_record_add_field>
     3cc:	ldr	r1, [r5, r7]
     3d0:	ldrb	r3, [sp, #128]	; 0x80
     3d4:	mov	r2, r4
     3d8:	ldr	r0, [r1, #40]	; 0x28
     3dc:	mov	r1, #0
     3e0:	bl	0 <coda_mem_uint8_new>
     3e4:	mov	r3, #0
     3e8:	ldr	r1, [pc, #2880]	; f30 <read_grib1_message+0xd1c>
     3ec:	mov	r2, r0
     3f0:	mov	r0, r6
     3f4:	bl	0 <coda_mem_record_add_field>
     3f8:	ldr	r1, [r5, r7]
     3fc:	ldrb	r3, [sp, #129]	; 0x81
     400:	mov	r2, r4
     404:	ldr	r0, [r1, #48]	; 0x30
     408:	mov	r1, #0
     40c:	bl	0 <coda_mem_uint8_new>
     410:	mov	r3, #0
     414:	ldr	r1, [pc, #2840]	; f34 <read_grib1_message+0xd20>
     418:	mov	r2, r0
     41c:	mov	r0, r6
     420:	bl	0 <coda_mem_record_add_field>
     424:	ldr	r1, [r5, r7]
     428:	ldrb	r3, [sp, #130]	; 0x82
     42c:	mov	r2, r4
     430:	ldr	r0, [r1, #52]	; 0x34
     434:	mov	r1, #0
     438:	bl	0 <coda_mem_uint8_new>
     43c:	mov	r3, #0
     440:	ldr	r1, [pc, #2800]	; f38 <read_grib1_message+0xd24>
     444:	mov	r2, r0
     448:	mov	r0, r6
     44c:	bl	0 <coda_mem_record_add_field>
     450:	ldr	r1, [r5, r7]
     454:	ldrb	r3, [sp, #131]	; 0x83
     458:	mov	r2, r4
     45c:	ldr	r0, [r1, #56]	; 0x38
     460:	mov	r1, #0
     464:	bl	0 <coda_mem_uint8_new>
     468:	mov	r3, #0
     46c:	ldr	r1, [pc, #2760]	; f3c <read_grib1_message+0xd28>
     470:	mov	r2, r0
     474:	mov	r0, r6
     478:	bl	0 <coda_mem_record_add_field>
     47c:	ldr	r1, [r5, r7]
     480:	ldrb	r3, [sp, #132]	; 0x84
     484:	mov	r2, r4
     488:	ldr	r0, [r1, #60]	; 0x3c
     48c:	mov	r1, #0
     490:	bl	0 <coda_mem_uint8_new>
     494:	mov	r3, #0
     498:	ldr	r1, [pc, #2720]	; f40 <read_grib1_message+0xd2c>
     49c:	mov	r2, r0
     4a0:	mov	r0, r6
     4a4:	bl	0 <coda_mem_record_add_field>
     4a8:	ldr	r1, [r5, r7]
     4ac:	ldrb	r3, [sp, #133]	; 0x85
     4b0:	mov	r2, r4
     4b4:	ldr	r0, [r1, #68]	; 0x44
     4b8:	mov	r1, #0
     4bc:	bl	0 <coda_mem_uint8_new>
     4c0:	mov	r3, #0
     4c4:	ldr	r1, [pc, #2680]	; f44 <read_grib1_message+0xd30>
     4c8:	mov	r2, r0
     4cc:	mov	r0, r6
     4d0:	bl	0 <coda_mem_record_add_field>
     4d4:	ldr	r1, [r5, r7]
     4d8:	ldrb	r3, [sp, #134]	; 0x86
     4dc:	mov	r2, r4
     4e0:	ldr	r0, [r1, #72]	; 0x48
     4e4:	mov	r1, #0
     4e8:	bl	0 <coda_mem_uint8_new>
     4ec:	mov	r3, #0
     4f0:	ldr	r1, [pc, #2640]	; f48 <read_grib1_message+0xd34>
     4f4:	mov	r2, r0
     4f8:	mov	r0, r6
     4fc:	bl	0 <coda_mem_record_add_field>
     500:	ldr	r1, [r5, r7]
     504:	ldrb	r3, [sp, #135]	; 0x87
     508:	mov	r2, r4
     50c:	ldr	r0, [r1, #76]	; 0x4c
     510:	mov	r1, #0
     514:	bl	0 <coda_mem_uint8_new>
     518:	mov	r3, #0
     51c:	ldr	r1, [pc, #2600]	; f4c <read_grib1_message+0xd38>
     520:	mov	r2, r0
     524:	mov	r0, r6
     528:	bl	0 <coda_mem_record_add_field>
     52c:	ldr	r1, [r5, r7]
     530:	ldrb	r3, [sp, #136]	; 0x88
     534:	mov	r2, r4
     538:	ldr	r0, [r1, #80]	; 0x50
     53c:	mov	r1, #0
     540:	bl	0 <coda_mem_uint8_new>
     544:	mov	r3, #0
     548:	ldr	r1, [pc, #2560]	; f50 <read_grib1_message+0xd3c>
     54c:	mov	r2, r0
     550:	mov	r0, r6
     554:	bl	0 <coda_mem_record_add_field>
     558:	ldrb	r0, [sp, #137]	; 0x89
     55c:	ldrb	r3, [sp, #138]	; 0x8a
     560:	ldr	r1, [r5, r7]
     564:	mov	r2, r4
     568:	add	r3, r3, r0, lsl #8
     56c:	ldr	r0, [r1, #84]	; 0x54
     570:	uxth	r3, r3
     574:	mov	r1, #0
     578:	bl	0 <coda_mem_uint16_new>
     57c:	mov	r3, #0
     580:	ldr	r1, [pc, #2508]	; f54 <read_grib1_message+0xd40>
     584:	mov	r2, r0
     588:	mov	r0, r6
     58c:	bl	0 <coda_mem_record_add_field>
     590:	ldr	r1, [r5, r7]
     594:	ldrb	r3, [sp, #139]	; 0x8b
     598:	mov	r2, r4
     59c:	ldr	r0, [r1, #88]	; 0x58
     5a0:	mov	r1, #0
     5a4:	bl	0 <coda_mem_uint8_new>
     5a8:	mov	r3, #0
     5ac:	ldr	r1, [pc, #2468]	; f58 <read_grib1_message+0xd44>
     5b0:	mov	r2, r0
     5b4:	mov	r0, r6
     5b8:	bl	0 <coda_mem_record_add_field>
     5bc:	ldr	r1, [r5, r7]
     5c0:	ldrb	r3, [sp, #140]	; 0x8c
     5c4:	mov	r2, r4
     5c8:	ldr	r0, [r1, #92]	; 0x5c
     5cc:	mov	r1, #0
     5d0:	bl	0 <coda_mem_uint8_new>
     5d4:	mov	r3, #0
     5d8:	ldr	r1, [pc, #2428]	; f5c <read_grib1_message+0xd48>
     5dc:	mov	r2, r0
     5e0:	mov	r0, r6
     5e4:	bl	0 <coda_mem_record_add_field>
     5e8:	ldr	r1, [r5, r7]
     5ec:	ldrb	r3, [sp, #141]	; 0x8d
     5f0:	mov	r2, r4
     5f4:	ldr	r0, [r1, #96]	; 0x60
     5f8:	mov	r1, #0
     5fc:	bl	0 <coda_mem_uint8_new>
     600:	mov	r3, #0
     604:	ldr	r1, [pc, #2388]	; f60 <read_grib1_message+0xd4c>
     608:	mov	r2, r0
     60c:	mov	r0, r6
     610:	bl	0 <coda_mem_record_add_field>
     614:	ldrb	r1, [sp, #142]	; 0x8e
     618:	ldrb	r3, [sp, #143]	; 0x8f
     61c:	ldr	r2, [pc, #2452]	; fb8 <read_grib1_message+0xda4>
     620:	and	r0, r1, #127	; 0x7f
     624:	tst	r1, #128	; 0x80
     628:	moveq	r2, #1
     62c:	add	r3, r3, r0, lsl #8
     630:	ldr	r1, [r5, r7]
     634:	smulbb	r3, r3, r2
     638:	mov	r2, r4
     63c:	ldr	r0, [r1, #100]	; 0x64
     640:	sxth	r3, r3
     644:	mov	r1, #0
     648:	str	r3, [sp, #44]	; 0x2c
     64c:	bl	0 <coda_mem_int16_new>
     650:	ldrd	sl, [sp, #32]
     654:	mov	r3, #0
     658:	ldr	r1, [pc, #2308]	; f64 <read_grib1_message+0xd50>
     65c:	adds	sl, sl, #28
     660:	adc	fp, fp, #0
     664:	strd	sl, [sp, #16]
     668:	mov	r2, r0
     66c:	mov	r0, r6
     670:	bl	0 <coda_mem_record_add_field>
     674:	cmp	r8, #28
     678:	ble	698 <read_grib1_message+0x484>
     67c:	cmp	r8, #40	; 0x28
     680:	bgt	890 <read_grib1_message+0x67c>
     684:	ldrd	r2, [sp, #16]
     688:	sub	r8, r8, #28
     68c:	adds	r2, r2, r8
     690:	adc	r3, r3, r8, asr #31
     694:	strd	r2, [sp, #16]
     698:	ldr	r3, [sp, #40]	; 0x28
     69c:	cmp	r3, #0
     6a0:	blt	920 <read_grib1_message+0x70c>
     6a4:	sub	r3, r9, #1
     6a8:	cmp	r3, #106	; 0x6a
     6ac:	ldrls	pc, [pc, r3, lsl #2]
     6b0:	b	1524 <read_grib1_message+0x1310>
     6b4:	.word	0x000013bc
     6b8:	.word	0x000013b0
     6bc:	.word	0x000013e0
     6c0:	.word	0x000013d4
     6c4:	.word	0x000013c8
     6c8:	.word	0x000013c8
     6cc:	.word	0x00001524
     6d0:	.word	0x00001518
     6d4:	.word	0x00001524
     6d8:	.word	0x00001524
     6dc:	.word	0x00001524
     6e0:	.word	0x00001524
     6e4:	.word	0x00001524
     6e8:	.word	0x00001524
     6ec:	.word	0x00001524
     6f0:	.word	0x00001524
     6f4:	.word	0x00001524
     6f8:	.word	0x00001524
     6fc:	.word	0x00001524
     700:	.word	0x00001524
     704:	.word	0x000014f4
     708:	.word	0x000014f4
     70c:	.word	0x000014f4
     710:	.word	0x000014f4
     714:	.word	0x000014e8
     718:	.word	0x000014e8
     71c:	.word	0x000014dc
     720:	.word	0x000014dc
     724:	.word	0x000014d0
     728:	.word	0x000014d0
     72c:	.word	0x00001524
     730:	.word	0x00001524
     734:	.word	0x000014c4
     738:	.word	0x000014c4
     73c:	.word	0x00001524
     740:	.word	0x00001524
     744:	.word	0x00001524
     748:	.word	0x00001524
     74c:	.word	0x00001524
     750:	.word	0x00001524
     754:	.word	0x00001524
     758:	.word	0x00001524
     75c:	.word	0x00001524
     760:	.word	0x00001524
     764:	.word	0x00001524
     768:	.word	0x00001524
     76c:	.word	0x00001524
     770:	.word	0x00001524
     774:	.word	0x00001524
     778:	.word	0x000014b8
     77c:	.word	0x00001524
     780:	.word	0x00001524
     784:	.word	0x000014ac
     788:	.word	0x00001524
     78c:	.word	0x000013ec
     790:	.word	0x000013ec
     794:	.word	0x00001524
     798:	.word	0x00001524
     79c:	.word	0x00001524
     7a0:	.word	0x00001524
     7a4:	.word	0x000014a0
     7a8:	.word	0x000014a0
     7ac:	.word	0x000014a0
     7b0:	.word	0x000014a0
     7b4:	.word	0x00001524
     7b8:	.word	0x00001524
     7bc:	.word	0x00001524
     7c0:	.word	0x00001524
     7c4:	.word	0x00001524
     7c8:	.word	0x00001524
     7cc:	.word	0x00001524
     7d0:	.word	0x00001524
     7d4:	.word	0x00001524
     7d8:	.word	0x00001524
     7dc:	.word	0x00001494
     7e0:	.word	0x00001494
     7e4:	.word	0x00001494
     7e8:	.word	0x00001524
     7ec:	.word	0x00001524
     7f0:	.word	0x00001524
     7f4:	.word	0x00001524
     7f8:	.word	0x00001524
     7fc:	.word	0x00001524
     800:	.word	0x00001524
     804:	.word	0x00001488
     808:	.word	0x00001488
     80c:	.word	0x0000147c
     810:	.word	0x00001524
     814:	.word	0x00001524
     818:	.word	0x00001470
     81c:	.word	0x00001464
     820:	.word	0x00001458
     824:	.word	0x0000144c
     828:	.word	0x00001440
     82c:	.word	0x00001434
     830:	.word	0x00001428
     834:	.word	0x0000141c
     838:	.word	0x00001524
     83c:	.word	0x00001524
     840:	.word	0x00001090
     844:	.word	0x00001404
     848:	.word	0x00001524
     84c:	.word	0x000013f8
     850:	.word	0x00001500
     854:	.word	0x00001090
     858:	.word	0x0000150c
     85c:	.word	0x00001410
     860:	cmp	r7, #0
     864:	beq	870 <read_grib1_message+0x65c>
     868:	mov	r0, r7
     86c:	bl	0 <free>
     870:	mov	r2, r8
     874:	ldr	r1, [pc, #1772]	; f68 <read_grib1_message+0xd54>
     878:	ldr	r0, [pc, #2056]	; 1088 <read_grib1_message+0xe74>
     87c:	bl	0 <coda_set_error>
     880:	mvn	r0, #0
     884:	add	sp, sp, #148	; 0x94
     888:	vpop	{d8}
     88c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     890:	sub	r3, r8, #40	; 0x28
     894:	mov	r0, r3
     898:	mov	fp, r3
     89c:	bl	0 <malloc>
     8a0:	subs	r3, r0, #0
     8a4:	mov	sl, r3
     8a8:	moveq	r2, fp
     8ac:	ldreq	r3, [pc, #1720]	; f6c <read_grib1_message+0xd58>
     8b0:	beq	17b4 <read_grib1_message+0x15a0>
     8b4:	mov	r2, fp
     8b8:	asr	r3, fp, #31
     8bc:	ldr	r0, [r4, #52]	; 0x34
     8c0:	strd	r2, [sp]
     8c4:	ldrd	r2, [sp, #32]
     8c8:	str	sl, [sp, #8]
     8cc:	adds	r2, r2, #40	; 0x28
     8d0:	adc	r3, r3, #0
     8d4:	bl	0 <read_bytes>
     8d8:	cmp	r0, #0
     8dc:	blt	1804 <read_grib1_message+0x15f0>
     8e0:	ldr	r1, [r5, r7]
     8e4:	mov	r3, fp
     8e8:	mov	r2, r4
     8ec:	ldr	r0, [r1, #128]	; 0x80
     8f0:	mov	r1, #0
     8f4:	str	sl, [sp]
     8f8:	bl	0 <coda_mem_raw_new>
     8fc:	mov	r7, r0
     900:	mov	r0, sl
     904:	bl	0 <free>
     908:	mov	r2, r7
     90c:	mov	r3, #0
     910:	ldr	r1, [pc, #1624]	; f70 <read_grib1_message+0xd5c>
     914:	mov	r0, r6
     918:	bl	0 <coda_mem_record_add_field>
     91c:	b	684 <read_grib1_message+0x470>
     920:	ldrd	r8, [sp, #16]
     924:	mov	r2, #6
     928:	mov	r3, #0
     92c:	ldr	r1, [sp, #24]
     930:	ldr	r0, [r4, #52]	; 0x34
     934:	strd	r2, [sp]
     938:	str	r1, [sp, #8]
     93c:	mov	r2, r8
     940:	mov	r3, r9
     944:	bl	0 <read_bytes>
     948:	cmp	r0, #0
     94c:	blt	880 <read_grib1_message+0x66c>
     950:	ldrb	r0, [sp, #116]	; 0x74
     954:	ldrb	r3, [sp, #117]	; 0x75
     958:	ldrb	r2, [sp, #121]	; 0x79
     95c:	ldrb	r1, [sp, #118]	; 0x76
     960:	adds	r8, r8, #6
     964:	add	r3, r3, r0, lsl #8
     968:	adc	r9, r9, #0
     96c:	cmp	r2, #24
     970:	add	r3, r1, r3, lsl #8
     974:	str	r3, [sp, #68]	; 0x44
     978:	ldrls	r3, [pc, #1524]	; f74 <read_grib1_message+0xd60>
     97c:	mov	sl, r8
     980:	sub	r8, r2, #4
     984:	mvnls	r3, r3, lsr r2
     988:	uxtb	r1, r8
     98c:	andls	r3, r3, #1
     990:	eorls	r3, r3, #1
     994:	movhi	r3, #0
     998:	cmp	r1, #30
     99c:	mov	fp, r9
     9a0:	ldrls	r8, [pc, #1488]	; f78 <read_grib1_message+0xd64>
     9a4:	movhi	r9, #0
     9a8:	mvnls	r8, r8, lsr r1
     9ac:	sub	r1, r2, #30
     9b0:	andls	r8, r8, #1
     9b4:	eorls	r9, r8, #1
     9b8:	tst	r1, #251	; 0xfb
     9bc:	orreq	r3, r3, #1
     9c0:	cmp	r3, #0
     9c4:	beq	1840 <read_grib1_message+0x162c>
     9c8:	bl	0 <__aeabi_read_tp>
     9cc:	ldr	r3, [r5, r0]
     9d0:	mov	r7, r0
     9d4:	mov	r1, #0
     9d8:	ldr	r0, [r3, #264]	; 0x108
     9dc:	bl	0 <coda_mem_record_new>
     9e0:	ldrb	r2, [sp, #119]	; 0x77
     9e4:	ldr	r3, [r5, r7]
     9e8:	mov	r1, r2
     9ec:	str	r2, [sp, #52]	; 0x34
     9f0:	mov	r2, r4
     9f4:	mov	r8, r0
     9f8:	ldr	r0, [r3, #132]	; 0x84
     9fc:	mov	r3, r1
     a00:	mov	r1, #0
     a04:	bl	0 <coda_mem_uint8_new>
     a08:	mov	r3, #0
     a0c:	ldr	r1, [pc, #1384]	; f7c <read_grib1_message+0xd68>
     a10:	mov	r2, r0
     a14:	mov	r0, r8
     a18:	bl	0 <coda_mem_record_add_field>
     a1c:	ldr	r1, [r5, r7]
     a20:	ldrb	ip, [sp, #120]	; 0x78
     a24:	ldrb	r3, [sp, #121]	; 0x79
     a28:	mov	r2, r4
     a2c:	ldr	r0, [r1, #136]	; 0x88
     a30:	mov	r1, #0
     a34:	str	ip, [sp, #64]	; 0x40
     a38:	bl	0 <coda_mem_uint8_new>
     a3c:	mov	r3, #0
     a40:	ldr	r1, [pc, #1336]	; f80 <read_grib1_message+0xd6c>
     a44:	mov	r2, r0
     a48:	mov	r0, r8
     a4c:	bl	0 <coda_mem_record_add_field>
     a50:	ldr	r3, [sp, #24]
     a54:	ldr	r0, [r4, #52]	; 0x34
     a58:	mov	r2, sl
     a5c:	str	r3, [sp, #8]
     a60:	mov	sl, #26
     a64:	mov	r3, fp
     a68:	mov	fp, #0
     a6c:	strd	sl, [sp]
     a70:	bl	0 <read_bytes>
     a74:	cmp	r0, #0
     a78:	blt	1830 <read_grib1_message+0x161c>
     a7c:	ldrb	r1, [sp, #118]	; 0x76
     a80:	ldrb	ip, [sp, #116]	; 0x74
     a84:	ldrb	r0, [sp, #117]	; 0x75
     a88:	ldrb	r2, [sp, #119]	; 0x77
     a8c:	ldr	r3, [pc, #1316]	; fb8 <read_grib1_message+0xda4>
     a90:	add	r0, r0, ip, lsl #8
     a94:	add	r2, r2, r1, lsl #8
     a98:	str	r2, [sp, #48]	; 0x30
     a9c:	sub	r1, r0, r3
     aa0:	sub	r2, r2, r3
     aa4:	clz	r1, r1
     aa8:	clz	r2, r2
     aac:	lsr	r1, r1, #5
     ab0:	lsr	r2, r2, #5
     ab4:	tst	r1, r2
     ab8:	str	r0, [sp, #40]	; 0x28
     abc:	str	r1, [sp, #72]	; 0x48
     ac0:	str	r2, [sp, #76]	; 0x4c
     ac4:	bne	1814 <read_grib1_message+0x1600>
     ac8:	ldr	r2, [sp, #40]	; 0x28
     acc:	ldr	r1, [sp, #48]	; 0x30
     ad0:	cmp	r2, r3
     ad4:	cmpne	r1, r3
     ad8:	movne	r3, #1
     adc:	moveq	r3, #0
     ae0:	mulne	r3, r1, r2
     ae4:	bl	0 <__aeabi_read_tp>
     ae8:	mov	r7, r0
     aec:	ldr	r0, [r5, r0]
     af0:	str	r3, [sp, #32]
     af4:	mov	r2, r4
     af8:	ldrh	r3, [sp, #40]	; 0x28
     afc:	mov	r1, #0
     b00:	ldr	r0, [r0, #168]	; 0xa8
     b04:	bl	0 <coda_mem_uint16_new>
     b08:	mov	r3, #0
     b0c:	ldr	r1, [pc, #1136]	; f84 <read_grib1_message+0xd70>
     b10:	mov	r2, r0
     b14:	mov	r0, r8
     b18:	bl	0 <coda_mem_record_add_field>
     b1c:	ldr	r1, [r5, r7]
     b20:	ldrh	r3, [sp, #48]	; 0x30
     b24:	mov	r2, r4
     b28:	ldr	r0, [r1, #172]	; 0xac
     b2c:	mov	r1, #0
     b30:	bl	0 <coda_mem_uint16_new>
     b34:	mov	r3, #0
     b38:	ldr	r1, [pc, #1096]	; f88 <read_grib1_message+0xd74>
     b3c:	mov	r2, r0
     b40:	mov	r0, r8
     b44:	bl	0 <coda_mem_record_add_field>
     b48:	ldrb	r1, [sp, #120]	; 0x78
     b4c:	ldrb	r2, [sp, #121]	; 0x79
     b50:	ldrb	r3, [sp, #122]	; 0x7a
     b54:	and	r0, r1, #127	; 0x7f
     b58:	tst	r1, #128	; 0x80
     b5c:	add	r2, r2, r0, lsl #8
     b60:	ldr	r1, [r5, r7]
     b64:	add	r3, r3, r2, lsl #8
     b68:	moveq	r2, #1
     b6c:	mvnne	r2, #0
     b70:	ldr	r0, [r1, #184]	; 0xb8
     b74:	mul	r3, r2, r3
     b78:	mov	r1, #0
     b7c:	mov	r2, r4
     b80:	bl	0 <coda_mem_int32_new>
     b84:	mov	r3, #0
     b88:	ldr	r1, [pc, #1020]	; f8c <read_grib1_message+0xd78>
     b8c:	mov	r2, r0
     b90:	mov	r0, r8
     b94:	bl	0 <coda_mem_record_add_field>
     b98:	ldrb	r1, [sp, #123]	; 0x7b
     b9c:	ldrb	r2, [sp, #124]	; 0x7c
     ba0:	ldrb	r3, [sp, #125]	; 0x7d
     ba4:	and	r0, r1, #127	; 0x7f
     ba8:	tst	r1, #128	; 0x80
     bac:	add	r2, r2, r0, lsl #8
     bb0:	ldr	r1, [r5, r7]
     bb4:	add	r3, r3, r2, lsl #8
     bb8:	moveq	r2, #1
     bbc:	mvnne	r2, #0
     bc0:	ldr	r0, [r1, #188]	; 0xbc
     bc4:	mul	r3, r2, r3
     bc8:	mov	r1, #0
     bcc:	mov	r2, r4
     bd0:	bl	0 <coda_mem_int32_new>
     bd4:	mov	r3, #0
     bd8:	ldr	r1, [pc, #944]	; f90 <read_grib1_message+0xd7c>
     bdc:	mov	r2, r0
     be0:	mov	r0, r8
     be4:	bl	0 <coda_mem_record_add_field>
     be8:	ldr	r1, [r5, r7]
     bec:	ldrb	r3, [sp, #126]	; 0x7e
     bf0:	mov	r2, r4
     bf4:	ldr	r0, [r1, #192]	; 0xc0
     bf8:	mov	r1, #0
     bfc:	bl	0 <coda_mem_uint8_new>
     c00:	mov	r3, #0
     c04:	ldr	r1, [pc, #904]	; f94 <read_grib1_message+0xd80>
     c08:	mov	r2, r0
     c0c:	mov	r0, r8
     c10:	bl	0 <coda_mem_record_add_field>
     c14:	ldrb	r1, [sp, #127]	; 0x7f
     c18:	ldrb	r2, [sp, #128]	; 0x80
     c1c:	ldrb	r3, [sp, #129]	; 0x81
     c20:	and	r0, r1, #127	; 0x7f
     c24:	tst	r1, #128	; 0x80
     c28:	add	r2, r2, r0, lsl #8
     c2c:	ldr	r1, [r5, r7]
     c30:	add	r3, r3, r2, lsl #8
     c34:	moveq	r2, #1
     c38:	mvnne	r2, #0
     c3c:	ldr	r0, [r1, #196]	; 0xc4
     c40:	mul	r3, r2, r3
     c44:	mov	r1, #0
     c48:	mov	r2, r4
     c4c:	bl	0 <coda_mem_int32_new>
     c50:	mov	r3, #0
     c54:	ldr	r1, [pc, #828]	; f98 <read_grib1_message+0xd84>
     c58:	mov	r2, r0
     c5c:	mov	r0, r8
     c60:	bl	0 <coda_mem_record_add_field>
     c64:	ldrb	r1, [sp, #130]	; 0x82
     c68:	ldrb	r2, [sp, #131]	; 0x83
     c6c:	ldrb	r3, [sp, #132]	; 0x84
     c70:	and	r0, r1, #127	; 0x7f
     c74:	tst	r1, #128	; 0x80
     c78:	add	r2, r2, r0, lsl #8
     c7c:	ldr	r1, [r5, r7]
     c80:	add	r3, r3, r2, lsl #8
     c84:	moveq	r2, #1
     c88:	mvnne	r2, #0
     c8c:	ldr	r0, [r1, #200]	; 0xc8
     c90:	mul	r3, r2, r3
     c94:	mov	r1, #0
     c98:	mov	r2, r4
     c9c:	bl	0 <coda_mem_int32_new>
     ca0:	mov	r3, #0
     ca4:	ldr	r1, [pc, #752]	; f9c <read_grib1_message+0xd88>
     ca8:	mov	r2, r0
     cac:	mov	r0, r8
     cb0:	bl	0 <coda_mem_record_add_field>
     cb4:	ldrb	r0, [sp, #133]	; 0x85
     cb8:	ldrb	r3, [sp, #134]	; 0x86
     cbc:	ldr	r1, [r5, r7]
     cc0:	mov	r2, r4
     cc4:	add	r3, r3, r0, lsl #8
     cc8:	ldr	r0, [r1, #204]	; 0xcc
     ccc:	uxth	r3, r3
     cd0:	mov	r1, #0
     cd4:	bl	0 <coda_mem_uint16_new>
     cd8:	mov	r3, #0
     cdc:	ldr	r1, [pc, #700]	; fa0 <read_grib1_message+0xd8c>
     ce0:	mov	r2, r0
     ce4:	mov	r0, r8
     ce8:	bl	0 <coda_mem_record_add_field>
     cec:	ldrb	r0, [sp, #135]	; 0x87
     cf0:	ldrb	r3, [sp, #136]	; 0x88
     cf4:	cmp	r9, #0
     cf8:	ldr	r1, [r5, r7]
     cfc:	mov	r2, r4
     d00:	add	r3, r3, r0, lsl #8
     d04:	beq	ee8 <read_grib1_message+0xcd4>
     d08:	ldr	r0, [r1, #212]	; 0xd4
     d0c:	uxth	r3, r3
     d10:	mov	r1, #0
     d14:	bl	0 <coda_mem_uint16_new>
     d18:	mov	r3, #0
     d1c:	ldr	r1, [pc, #640]	; fa4 <read_grib1_message+0xd90>
     d20:	mov	r2, r0
     d24:	mov	r0, r8
     d28:	bl	0 <coda_mem_record_add_field>
     d2c:	bl	0 <__aeabi_read_tp>
     d30:	mov	r7, r0
     d34:	ldr	r0, [r5, r0]
     d38:	ldrb	r3, [sp, #137]	; 0x89
     d3c:	mov	r2, r4
     d40:	mov	r1, #0
     d44:	ldr	r0, [r0, #216]	; 0xd8
     d48:	bl	0 <coda_mem_uint8_new>
     d4c:	ldrd	sl, [sp, #16]
     d50:	mov	r3, #0
     d54:	ldr	r1, [pc, #588]	; fa8 <read_grib1_message+0xd94>
     d58:	adds	sl, sl, #32
     d5c:	adc	fp, fp, #0
     d60:	strd	sl, [sp, #16]
     d64:	mov	r2, r0
     d68:	mov	r0, r8
     d6c:	bl	0 <coda_mem_record_add_field>
     d70:	ldr	r3, [sp, #64]	; 0x40
     d74:	cmp	r3, #255	; 0xff
     d78:	beq	15b4 <read_grib1_message+0x13a0>
     d7c:	sub	r9, r3, #1
     d80:	uxtb	r3, r9
     d84:	str	r3, [sp, #80]	; 0x50
     d88:	sub	r3, r3, #32
     d8c:	adds	sl, sl, r3
     d90:	adc	fp, fp, r3, asr #31
     d94:	ldr	r3, [sp, #52]	; 0x34
     d98:	strd	sl, [sp, #16]
     d9c:	cmp	r3, #0
     da0:	bne	15e8 <read_grib1_message+0x13d4>
     da4:	ldr	r2, [sp, #52]	; 0x34
     da8:	ldr	r3, [sp, #80]	; 0x50
     dac:	add	r2, r3, r2, lsl #2
     db0:	ldr	r3, [sp, #68]	; 0x44
     db4:	cmp	r3, r2
     db8:	ble	1388 <read_grib1_message+0x1174>
     dbc:	ldr	r3, [pc, #500]	; fb8 <read_grib1_message+0xda4>
     dc0:	ldr	r1, [sp, #40]	; 0x28
     dc4:	cmp	r1, r3
     dc8:	beq	1774 <read_grib1_message+0x1560>
     dcc:	ldr	r1, [sp, #48]	; 0x30
     dd0:	cmp	r1, r3
     dd4:	ldrne	r1, [pc, #464]	; fac <read_grib1_message+0xd98>
     dd8:	bne	17ec <read_grib1_message+0x15d8>
     ddc:	ldr	r9, [sp, #40]	; 0x28
     de0:	ldr	r3, [sp, #68]	; 0x44
     de4:	sub	r2, r3, r2
     de8:	lsl	r3, r9, #1
     dec:	cmp	r2, r3
     df0:	bne	17cc <read_grib1_message+0x15b8>
     df4:	bl	0 <__aeabi_read_tp>
     df8:	ldr	r3, [r5, r0]
     dfc:	mov	r1, #0
     e00:	ldr	r0, [r3, #232]	; 0xe8
     e04:	bl	0 <coda_mem_array_new>
     e08:	cmp	r9, #0
     e0c:	mov	r7, r0
     e10:	beq	1828 <read_grib1_message+0x1614>
     e14:	ldrd	sl, [sp, #16]
     e18:	sub	r0, r9, #1
     e1c:	mov	r1, #2
     e20:	adds	r2, sl, #2
     e24:	adc	r3, fp, #0
     e28:	umlal	r2, r3, r1, r0
     e2c:	str	r8, [sp, #40]	; 0x28
     e30:	mov	r9, r7
     e34:	strd	r2, [sp, #16]
     e38:	mov	r3, #0
     e3c:	str	r6, [sp, #48]	; 0x30
     e40:	mov	r8, r3
     e44:	mov	r6, sl
     e48:	mov	r7, fp
     e4c:	b	e98 <read_grib1_message+0xc84>
     e50:	ldrb	sl, [sp, #116]	; 0x74
     e54:	ldrb	r3, [sp, #117]	; 0x75
     e58:	bl	0 <__aeabi_read_tp>
     e5c:	ldr	r0, [r5, r0]
     e60:	add	sl, r3, sl, lsl #8
     e64:	adds	r6, r6, #2
     e68:	uxth	r3, sl
     e6c:	ldr	r0, [r0, #228]	; 0xe4
     e70:	adc	r7, r7, #0
     e74:	bl	0 <coda_mem_uint16_new>
     e78:	add	r8, r8, sl
     e7c:	mov	r1, r0
     e80:	mov	r0, r9
     e84:	bl	0 <coda_mem_array_add_element>
     e88:	ldrd	r2, [sp, #16]
     e8c:	cmp	r7, r3
     e90:	cmpeq	r6, r2
     e94:	beq	1724 <read_grib1_message+0x1510>
     e98:	ldr	r3, [sp, #24]
     e9c:	ldr	r0, [r4, #52]	; 0x34
     ea0:	mov	r2, #2
     ea4:	str	r3, [sp, #8]
     ea8:	mov	r3, #0
     eac:	strd	r2, [sp]
     eb0:	mov	r2, r6
     eb4:	mov	r3, r7
     eb8:	bl	0 <read_bytes>
     ebc:	mov	r1, #0
     ec0:	mov	r2, r4
     ec4:	cmp	r0, r1
     ec8:	bge	e50 <read_grib1_message+0xc3c>
     ecc:	ldr	r8, [sp, #40]	; 0x28
     ed0:	mov	r7, r9
     ed4:	mov	r0, r7
     ed8:	bl	0 <coda_dynamic_type_delete>
     edc:	mov	r0, r8
     ee0:	bl	0 <coda_dynamic_type_delete>
     ee4:	b	880 <read_grib1_message+0x66c>
     ee8:	ldr	r0, [r1, #208]	; 0xd0
     eec:	uxth	r3, r3
     ef0:	mov	r1, r9
     ef4:	bl	0 <coda_mem_uint16_new>
     ef8:	mov	r3, r9
     efc:	ldr	r1, [pc, #172]	; fb0 <read_grib1_message+0xd9c>
     f00:	mov	r2, r0
     f04:	mov	r0, r8
     f08:	bl	0 <coda_mem_record_add_field>
     f0c:	b	d2c <read_grib1_message+0xb18>
     f10:	.word	0x00000000
     f14:	.word	0x00000128
     f18:	.word	0x00000138
     f1c:	.word	0x00000140
     f20:	.word	0x0000015c
     f24:	.word	0x0000016c
     f28:	.word	0x00000184
     f2c:	.word	0x0000019c
     f30:	.word	0x000001a4
     f34:	.word	0x000001b4
     f38:	.word	0x000001bc
     f3c:	.word	0x000001c0
     f40:	.word	0x000001c8
     f44:	.word	0x000001d0
     f48:	.word	0x000001e0
     f4c:	.word	0x000001e4
     f50:	.word	0x000001e8
     f54:	.word	0x000001fc
     f58:	.word	0x00000214
     f5c:	.word	0x00000240
     f60:	.word	0x00000260
     f64:	.word	0x0000026c
     f68:	.word	0x00000720
     f6c:	.word	0x0000067e
     f70:	.word	0x00000300
     f74:	.word	0x01104411
     f78:	.word	0x40100401
     f7c:	.word	0x00000308
     f80:	.word	0x0000032c
     f84:	.word	0x00000390
     f88:	.word	0x00000394
     f8c:	.word	0x00000398
     f90:	.word	0x000003b4
     f94:	.word	0x000003d0
     f98:	.word	0x000003ec
     f9c:	.word	0x00000404
     fa0:	.word	0x00000420
     fa4:	.word	0x00000434
     fa8:	.word	0x0000044c
     fac:	.word	0x00000470
     fb0:	.word	0x00000438
     fb4:	.word	0x00001ae9
     fb8:	.word	0x0000ffff
     fbc:	.word	0x00000744
     fc0:	.word	0x00000754
     fc4:	.word	0x00000768
     fc8:	.word	0x00000778
     fcc:	.word	0x00000780
     fd0:	.word	0x00000788
     fd4:	.word	0x00000790
     fd8:	.word	0x0000057c
     fdc:	.word	0x00002910
     fe0:	.word	0x0000068f
     fe4:	.word	0x00000951
     fe8:	.word	0x0003f750
     fec:	.word	0x0000fe88
     ff0:	.word	0x00001821
     ff4:	.word	0x00000e38
     ff8:	.word	0x0000282b
     ffc:	.word	0x00002b20
    1000:	.word	0x0001453b
    1004:	.word	0x0000a29e
    1008:	.word	0x00017e27
    100c:	.word	0x0000bf14
    1010:	.word	0x00027a79
    1014:	.word	0x00013d3d
    1018:	.word	0x000064cb
    101c:	.word	0x00003266
    1020:	.word	0x0000139e
    1024:	.word	0x00007e90
    1028:	.word	0x00003021
    102c:	.word	0x0000174f
    1030:	.word	0x00002086
    1034:	.word	0x000014f5
    1038:	.word	0x00001081
    103c:	.word	0x00000511
    1040:	.word	0x00000535
    1044:	.word	0x00003f2a
    1048:	.word	0x00004b69
    104c:	.word	0x000013f0
    1050:	.word	0x000005b8
    1054:	.word	0x000006bc
    1058:	.word	0x000006ec
    105c:	.word	0x00000614
    1060:	.word	0x0000050c
    1064:	.word	0x0000045c
    1068:	.word	0x00000688
    106c:	.word	0x000005dc
    1070:	.word	0x0000080f
    1074:	.word	0x000002c8
    1078:	.word	0x00000280
    107c:	.word	0x000004cc
    1080:	.word	0x0000051c
    1084:	.word	0x00000344
    1088:	.word	0xfffffed4
    108c:	.word	0x00000584
    1090:	ldr	r3, [pc, #-228]	; fb4 <read_grib1_message+0xda0>
    1094:	str	r3, [sp, #32]
    1098:	ldr	r3, [sp, #28]
    109c:	ldr	r0, [r4, #52]	; 0x34
    10a0:	cmp	r3, #0
    10a4:	beq	153c <read_grib1_message+0x1328>
    10a8:	mov	r2, #6
    10ac:	mov	r3, #0
    10b0:	ldr	r1, [sp, #24]
    10b4:	strd	r2, [sp]
    10b8:	str	r1, [sp, #8]
    10bc:	ldrd	r2, [sp, #16]
    10c0:	bl	0 <read_bytes>
    10c4:	cmp	r0, #0
    10c8:	blt	880 <read_grib1_message+0x66c>
    10cc:	ldrb	r0, [sp, #116]	; 0x74
    10d0:	ldrb	r1, [sp, #120]	; 0x78
    10d4:	ldrb	r3, [sp, #117]	; 0x75
    10d8:	ldrb	r2, [sp, #121]	; 0x79
    10dc:	ldrb	sl, [sp, #118]	; 0x76
    10e0:	add	r3, r3, r0, lsl #8
    10e4:	add	r2, r2, r1, lsl #8
    10e8:	cmp	r2, #0
    10ec:	add	sl, sl, r3, lsl #8
    10f0:	bne	1798 <read_grib1_message+0x1584>
    10f4:	ldr	r2, [sp, #32]
    10f8:	ands	r3, r2, #7
    10fc:	movne	r3, #1
    1100:	add	r3, r3, r2, asr #3
    1104:	sub	r2, sl, #5
    1108:	cmp	r2, r3
    110c:	ble	1704 <read_grib1_message+0x14f0>
    1110:	sub	r8, sl, #6
    1114:	mov	r0, r8
    1118:	bl	0 <malloc>
    111c:	subs	r7, r0, #0
    1120:	beq	17ac <read_grib1_message+0x1598>
    1124:	ldrd	r2, [sp, #16]
    1128:	asr	r9, r8, #31
    112c:	ldr	r0, [r4, #52]	; 0x34
    1130:	adds	r2, r2, #6
    1134:	adc	r3, r3, #0
    1138:	str	r7, [sp, #8]
    113c:	strd	r8, [sp]
    1140:	bl	0 <read_bytes>
    1144:	cmp	r0, #0
    1148:	blt	159c <read_grib1_message+0x1388>
    114c:	ldrd	r2, [sp, #16]
    1150:	ldr	r1, [sp, #24]
    1154:	mov	r8, #11
    1158:	adds	r2, r2, sl
    115c:	mov	r9, #0
    1160:	adc	r3, r3, sl, asr #31
    1164:	ldr	r0, [r4, #52]	; 0x34
    1168:	str	r1, [sp, #8]
    116c:	strd	r8, [sp]
    1170:	strd	r2, [sp, #16]
    1174:	bl	0 <read_bytes>
    1178:	cmp	r0, #0
    117c:	blt	159c <read_grib1_message+0x1388>
    1180:	ldrb	r0, [sp, #116]	; 0x74
    1184:	ldrb	r3, [sp, #117]	; 0x75
    1188:	ldrb	r2, [sp, #119]	; 0x77
    118c:	ldrb	r1, [sp, #118]	; 0x76
    1190:	add	r3, r3, r0, lsl #8
    1194:	tst	r2, #128	; 0x80
    1198:	add	r3, r1, r3, lsl #8
    119c:	str	r3, [sp, #40]	; 0x28
    11a0:	bne	177c <read_grib1_message+0x1568>
    11a4:	tst	r2, #64	; 0x40
    11a8:	bne	16cc <read_grib1_message+0x14b8>
    11ac:	tst	r2, #16
    11b0:	bne	16e8 <read_grib1_message+0x14d4>
    11b4:	ldrb	r3, [sp, #120]	; 0x78
    11b8:	ldrb	r8, [sp, #121]	; 0x79
    11bc:	ldr	r2, [pc, #-524]	; fb8 <read_grib1_message+0xda4>
    11c0:	tst	r3, #128	; 0x80
    11c4:	and	r3, r3, #127	; 0x7f
    11c8:	moveq	r2, #1
    11cc:	add	r8, r8, r3, lsl #8
    11d0:	add	r0, sp, #122	; 0x7a
    11d4:	smulbb	r8, r8, r2
    11d8:	sxth	r3, r8
    11dc:	mov	fp, r3
    11e0:	bl	15c <ibmfloat_to_iee754>
    11e4:	ldrb	r8, [sp, #126]	; 0x7e
    11e8:	cmp	r8, #63	; 0x3f
    11ec:	vmov.f32	s16, s0
    11f0:	bhi	860 <read_grib1_message+0x64c>
    11f4:	ldrd	r2, [sp, #16]
    11f8:	bl	0 <__aeabi_read_tp>
    11fc:	mov	sl, r0
    1200:	ldr	r0, [r5, r0]
    1204:	adds	r2, r2, #11
    1208:	adc	r3, r3, #0
    120c:	mov	r1, #0
    1210:	ldr	r0, [r0, #268]	; 0x10c
    1214:	strd	r2, [sp, #16]
    1218:	bl	0 <coda_mem_record_new>
    121c:	ldr	r1, [r5, sl]
    1220:	mov	r3, r8
    1224:	mov	r2, r4
    1228:	mov	r9, r0
    122c:	ldr	r0, [r1, #248]	; 0xf8
    1230:	mov	r1, #0
    1234:	bl	0 <coda_mem_uint8_new>
    1238:	mov	r3, #0
    123c:	ldr	r1, [pc, #-648]	; fbc <read_grib1_message+0xda8>
    1240:	mov	r2, r0
    1244:	mov	r0, r9
    1248:	bl	0 <coda_mem_record_add_field>
    124c:	ldr	r1, [r5, sl]
    1250:	mov	r3, fp
    1254:	mov	r2, r4
    1258:	ldr	r0, [r1, #252]	; 0xfc
    125c:	mov	r1, #0
    1260:	bl	0 <coda_mem_int16_new>
    1264:	mov	r3, #0
    1268:	ldr	r1, [pc, #-688]	; fc0 <read_grib1_message+0xdac>
    126c:	mov	r2, r0
    1270:	mov	r0, r9
    1274:	bl	0 <coda_mem_record_add_field>
    1278:	ldr	r3, [r5, sl]
    127c:	vmov.f32	s0, s16
    1280:	mov	r2, r4
    1284:	ldr	r0, [r3, #256]	; 0x100
    1288:	mov	r1, #0
    128c:	bl	0 <coda_mem_float_new>
    1290:	mov	r3, #0
    1294:	ldr	r1, [pc, #-728]	; fc4 <read_grib1_message+0xdb0>
    1298:	mov	r2, r0
    129c:	mov	r0, r9
    12a0:	bl	0 <coda_mem_record_add_field>
    12a4:	ldr	r3, [r5, sl]
    12a8:	ldr	ip, [sp, #44]	; 0x2c
    12ac:	vmov.f32	s0, s16
    12b0:	ldr	r0, [r3, #260]	; 0x104
    12b4:	ldr	r1, [sp, #32]
    12b8:	ldrd	r2, [sp, #16]
    12bc:	str	r7, [sp, #12]
    12c0:	str	fp, [sp, #8]
    12c4:	stm	sp, {r8, ip}
    12c8:	bl	0 <coda_grib_value_array_simple_packing_new>
    12cc:	cmp	r7, #0
    12d0:	mov	r5, r0
    12d4:	beq	12e0 <read_grib1_message+0x10cc>
    12d8:	mov	r0, r7
    12dc:	bl	0 <free>
    12e0:	mov	r2, r5
    12e4:	mov	r3, #0
    12e8:	ldr	r1, [pc, #-808]	; fc8 <read_grib1_message+0xdb4>
    12ec:	mov	r0, r9
    12f0:	bl	0 <coda_mem_record_add_field>
    12f4:	mov	r2, r9
    12f8:	mov	r0, r6
    12fc:	mov	r3, #0
    1300:	ldr	r1, [pc, #-828]	; fcc <read_grib1_message+0xdb8>
    1304:	bl	0 <coda_mem_record_add_field>
    1308:	ldr	r0, [r4, #52]	; 0x34
    130c:	ldr	r3, [sp, #40]	; 0x28
    1310:	ldrd	r4, [sp, #16]
    1314:	sub	r3, r3, #11
    1318:	ldr	r8, [sp, #24]
    131c:	adds	r4, r4, r3
    1320:	mov	r6, #4
    1324:	mov	r7, #0
    1328:	adc	r5, r5, r3, asr #31
    132c:	str	r8, [sp, #8]
    1330:	mov	r2, r4
    1334:	mov	r3, r5
    1338:	strd	r6, [sp]
    133c:	bl	0 <read_bytes>
    1340:	cmp	r0, #0
    1344:	blt	880 <read_grib1_message+0x66c>
    1348:	mov	r0, r8
    134c:	mov	r2, #4
    1350:	ldr	r1, [pc, #-904]	; fd0 <read_grib1_message+0xdbc>
    1354:	bl	0 <memcmp>
    1358:	cmp	r0, #0
    135c:	beq	884 <read_grib1_message+0x670>
    1360:	mov	r0, r4
    1364:	mov	r1, r5
    1368:	add	r2, sp, #92	; 0x5c
    136c:	bl	0 <coda_str64>
    1370:	mvn	r0, #21
    1374:	add	r2, sp, #92	; 0x5c
    1378:	ldr	r1, [pc, #-940]	; fd4 <read_grib1_message+0xdc0>
    137c:	bl	0 <coda_set_error>
    1380:	mvn	r0, #0
    1384:	b	884 <read_grib1_message+0x670>
    1388:	ldr	r3, [sp, #72]	; 0x48
    138c:	ldr	r2, [sp, #76]	; 0x4c
    1390:	orrs	r3, r3, r2
    1394:	bne	17e8 <read_grib1_message+0x15d4>
    1398:	mov	r2, r8
    139c:	mov	r3, #0
    13a0:	ldr	r1, [pc, #-976]	; fd8 <read_grib1_message+0xdc4>
    13a4:	mov	r0, r6
    13a8:	bl	0 <coda_mem_record_add_field>
    13ac:	b	1098 <read_grib1_message+0xe84>
    13b0:	ldr	r3, [pc, #-988]	; fdc <read_grib1_message+0xdc8>
    13b4:	str	r3, [sp, #32]
    13b8:	b	1098 <read_grib1_message+0xe84>
    13bc:	ldr	r3, [pc, #-996]	; fe0 <read_grib1_message+0xdcc>
    13c0:	str	r3, [sp, #32]
    13c4:	b	1098 <read_grib1_message+0xe84>
    13c8:	ldr	r3, [pc, #-1004]	; fe4 <read_grib1_message+0xdd0>
    13cc:	str	r3, [sp, #32]
    13d0:	b	1098 <read_grib1_message+0xe84>
    13d4:	ldr	r3, [pc, #-1012]	; fe8 <read_grib1_message+0xdd4>
    13d8:	str	r3, [sp, #32]
    13dc:	b	1098 <read_grib1_message+0xe84>
    13e0:	ldr	r3, [pc, #-1020]	; fec <read_grib1_message+0xdd8>
    13e4:	str	r3, [sp, #32]
    13e8:	b	1098 <read_grib1_message+0xe84>
    13ec:	ldr	r3, [pc, #-1028]	; ff0 <read_grib1_message+0xddc>
    13f0:	str	r3, [sp, #32]
    13f4:	b	1098 <read_grib1_message+0xe84>
    13f8:	ldr	r3, [pc, #-1036]	; ff4 <read_grib1_message+0xde0>
    13fc:	str	r3, [sp, #32]
    1400:	b	1098 <read_grib1_message+0xe84>
    1404:	ldr	r3, [pc, #-1044]	; ff8 <read_grib1_message+0xde4>
    1408:	str	r3, [sp, #32]
    140c:	b	1098 <read_grib1_message+0xe84>
    1410:	ldr	r3, [pc, #-1052]	; ffc <read_grib1_message+0xde8>
    1414:	str	r3, [sp, #32]
    1418:	b	1098 <read_grib1_message+0xe84>
    141c:	ldr	r3, [pc, #-1060]	; 1000 <read_grib1_message+0xdec>
    1420:	str	r3, [sp, #32]
    1424:	b	1098 <read_grib1_message+0xe84>
    1428:	ldr	r3, [pc, #-1068]	; 1004 <read_grib1_message+0xdf0>
    142c:	str	r3, [sp, #32]
    1430:	b	1098 <read_grib1_message+0xe84>
    1434:	ldr	r3, [pc, #-1076]	; 1008 <read_grib1_message+0xdf4>
    1438:	str	r3, [sp, #32]
    143c:	b	1098 <read_grib1_message+0xe84>
    1440:	ldr	r3, [pc, #-1084]	; 100c <read_grib1_message+0xdf8>
    1444:	str	r3, [sp, #32]
    1448:	b	1098 <read_grib1_message+0xe84>
    144c:	ldr	r3, [pc, #-1092]	; 1010 <read_grib1_message+0xdfc>
    1450:	str	r3, [sp, #32]
    1454:	b	1098 <read_grib1_message+0xe84>
    1458:	ldr	r3, [pc, #-1100]	; 1014 <read_grib1_message+0xe00>
    145c:	str	r3, [sp, #32]
    1460:	b	1098 <read_grib1_message+0xe84>
    1464:	ldr	r3, [pc, #-1108]	; 1018 <read_grib1_message+0xe04>
    1468:	str	r3, [sp, #32]
    146c:	b	1098 <read_grib1_message+0xe84>
    1470:	ldr	r3, [pc, #-1116]	; 101c <read_grib1_message+0xe08>
    1474:	str	r3, [sp, #32]
    1478:	b	1098 <read_grib1_message+0xe84>
    147c:	ldr	r3, [pc, #-1124]	; 1020 <read_grib1_message+0xe0c>
    1480:	str	r3, [sp, #32]
    1484:	b	1098 <read_grib1_message+0xe84>
    1488:	ldr	r3, [pc, #-1132]	; 1024 <read_grib1_message+0xe10>
    148c:	str	r3, [sp, #32]
    1490:	b	1098 <read_grib1_message+0xe84>
    1494:	ldr	r3, [pc, #-1140]	; 1028 <read_grib1_message+0xe14>
    1498:	str	r3, [sp, #32]
    149c:	b	1098 <read_grib1_message+0xe84>
    14a0:	mov	r3, #4096	; 0x1000
    14a4:	str	r3, [sp, #32]
    14a8:	b	1098 <read_grib1_message+0xe84>
    14ac:	ldr	r3, [pc, #-1160]	; 102c <read_grib1_message+0xe18>
    14b0:	str	r3, [sp, #32]
    14b4:	b	1098 <read_grib1_message+0xe84>
    14b8:	mov	r3, #964	; 0x3c4
    14bc:	str	r3, [sp, #32]
    14c0:	b	1098 <read_grib1_message+0xe84>
    14c4:	ldr	r3, [pc, #-1180]	; 1030 <read_grib1_message+0xe1c>
    14c8:	str	r3, [sp, #32]
    14cc:	b	1098 <read_grib1_message+0xe84>
    14d0:	ldr	r3, [pc, #-1188]	; 1034 <read_grib1_message+0xe20>
    14d4:	str	r3, [sp, #32]
    14d8:	b	1098 <read_grib1_message+0xe84>
    14dc:	ldr	r3, [pc, #-1196]	; 1038 <read_grib1_message+0xe24>
    14e0:	str	r3, [sp, #32]
    14e4:	b	1098 <read_grib1_message+0xe84>
    14e8:	ldr	r3, [pc, #-1204]	; 103c <read_grib1_message+0xe28>
    14ec:	str	r3, [sp, #32]
    14f0:	b	1098 <read_grib1_message+0xe84>
    14f4:	ldr	r3, [pc, #-1212]	; 1040 <read_grib1_message+0xe2c>
    14f8:	str	r3, [sp, #32]
    14fc:	b	1098 <read_grib1_message+0xe84>
    1500:	ldr	r3, [pc, #-1220]	; 1044 <read_grib1_message+0xe30>
    1504:	str	r3, [sp, #32]
    1508:	b	1098 <read_grib1_message+0xe84>
    150c:	ldr	r3, [pc, #-1228]	; 1048 <read_grib1_message+0xe34>
    1510:	str	r3, [sp, #32]
    1514:	b	1098 <read_grib1_message+0xe84>
    1518:	ldr	r3, [pc, #-1236]	; 104c <read_grib1_message+0xe38>
    151c:	str	r3, [sp, #32]
    1520:	b	1098 <read_grib1_message+0xe84>
    1524:	ldr	r0, [pc, #-1188]	; 1088 <read_grib1_message+0xe74>
    1528:	mov	r2, r9
    152c:	ldr	r1, [pc, #-1252]	; 1050 <read_grib1_message+0xe3c>
    1530:	bl	0 <coda_set_error>
    1534:	mvn	r0, #0
    1538:	b	884 <read_grib1_message+0x670>
    153c:	mov	r2, #11
    1540:	mov	r3, #0
    1544:	ldr	r1, [sp, #24]
    1548:	strd	r2, [sp]
    154c:	str	r1, [sp, #8]
    1550:	ldrd	r2, [sp, #16]
    1554:	bl	0 <read_bytes>
    1558:	cmp	r0, #0
    155c:	blt	880 <read_grib1_message+0x66c>
    1560:	ldrb	r0, [sp, #116]	; 0x74
    1564:	ldrb	r3, [sp, #117]	; 0x75
    1568:	ldrb	r2, [sp, #119]	; 0x77
    156c:	ldrb	r1, [sp, #118]	; 0x76
    1570:	add	r3, r3, r0, lsl #8
    1574:	tst	r2, #128	; 0x80
    1578:	add	r3, r1, r3, lsl #8
    157c:	str	r3, [sp, #40]	; 0x28
    1580:	bne	1784 <read_grib1_message+0x1570>
    1584:	tst	r2, #64	; 0x40
    1588:	bne	16d4 <read_grib1_message+0x14c0>
    158c:	tst	r2, #16
    1590:	bne	16f0 <read_grib1_message+0x14dc>
    1594:	ldr	r7, [sp, #28]
    1598:	b	11b4 <read_grib1_message+0xfa0>
    159c:	mov	r0, r7
    15a0:	bl	0 <free>
    15a4:	mvn	r0, #0
    15a8:	add	sp, sp, #148	; 0x94
    15ac:	vpop	{d8}
    15b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    15b4:	ldr	r3, [sp, #72]	; 0x48
    15b8:	ldr	r2, [sp, #76]	; 0x4c
    15bc:	orrs	r3, r3, r2
    15c0:	bne	17e8 <read_grib1_message+0x15d4>
    15c4:	ldr	r3, [sp, #68]	; 0x44
    15c8:	cmp	r3, #32
    15cc:	ble	1398 <read_grib1_message+0x1184>
    15d0:	ldrd	r0, [sp, #16]
    15d4:	sub	r2, r3, #32
    15d8:	adds	r0, r0, r2
    15dc:	adc	r1, r1, r2, asr #31
    15e0:	strd	r0, [sp, #16]
    15e4:	b	1398 <read_grib1_message+0x1184>
    15e8:	ldr	r3, [r5, r7]
    15ec:	mov	r1, #0
    15f0:	ldr	r0, [r3, #224]	; 0xe0
    15f4:	bl	0 <coda_mem_array_new>
    15f8:	ldr	r3, [sp, #52]	; 0x34
    15fc:	mov	r1, #4
    1600:	mov	r2, #4
    1604:	mov	sl, r2
    1608:	str	r6, [sp, #84]	; 0x54
    160c:	str	r2, [sp, #64]	; 0x40
    1610:	mov	r7, r0
    1614:	sub	r0, r3, #1
    1618:	mov	r3, #0
    161c:	mov	fp, r3
    1620:	umlal	sl, fp, r1, r0
    1624:	mov	r0, sl
    1628:	mov	r1, fp
    162c:	ldrd	sl, [sp, #16]
    1630:	mov	r9, r3
    1634:	adds	sl, sl, r0
    1638:	adc	fp, fp, r1
    163c:	strd	sl, [sp, #56]	; 0x38
    1640:	mov	sl, r7
    1644:	mov	fp, r8
    1648:	ldrd	r6, [sp, #16]
    164c:	b	1698 <read_grib1_message+0x1484>
    1650:	bl	0 <__aeabi_read_tp>
    1654:	ldr	r3, [r5, r0]
    1658:	adds	r6, r6, #4
    165c:	ldr	r0, [sp, #24]
    1660:	ldr	r8, [r3, #220]	; 0xdc
    1664:	adc	r7, r7, #0
    1668:	bl	15c <ibmfloat_to_iee754>
    166c:	mov	r2, r4
    1670:	mov	r1, #0
    1674:	mov	r0, r8
    1678:	bl	0 <coda_mem_float_new>
    167c:	mov	r1, r0
    1680:	mov	r0, sl
    1684:	bl	0 <coda_mem_array_add_element>
    1688:	ldrd	r2, [sp, #56]	; 0x38
    168c:	cmp	r3, r7
    1690:	cmpeq	r2, r6
    1694:	beq	1750 <read_grib1_message+0x153c>
    1698:	ldr	r3, [sp, #24]
    169c:	ldr	r0, [r4, #52]	; 0x34
    16a0:	str	r3, [sp, #8]
    16a4:	ldr	r3, [sp, #64]	; 0x40
    16a8:	mov	r2, r6
    16ac:	stm	sp, {r3, r9}
    16b0:	mov	r3, r7
    16b4:	bl	0 <read_bytes>
    16b8:	cmp	r0, #0
    16bc:	bge	1650 <read_grib1_message+0x143c>
    16c0:	mov	r8, fp
    16c4:	mov	r7, sl
    16c8:	b	ed4 <read_grib1_message+0xcc0>
    16cc:	mov	r0, r7
    16d0:	bl	0 <free>
    16d4:	ldr	r0, [pc, #-1620]	; 1088 <read_grib1_message+0xe74>
    16d8:	ldr	r1, [pc, #-1676]	; 1054 <read_grib1_message+0xe40>
    16dc:	bl	0 <coda_set_error>
    16e0:	mvn	r0, #0
    16e4:	b	884 <read_grib1_message+0x670>
    16e8:	mov	r0, r7
    16ec:	bl	0 <free>
    16f0:	ldr	r0, [pc, #-1648]	; 1088 <read_grib1_message+0xe74>
    16f4:	ldr	r1, [pc, #-1700]	; 1058 <read_grib1_message+0xe44>
    16f8:	bl	0 <coda_set_error>
    16fc:	mvn	r0, #0
    1700:	b	884 <read_grib1_message+0x670>
    1704:	ldr	r2, [sp, #32]
    1708:	ldr	r0, [pc, #-1672]	; 1088 <read_grib1_message+0xe74>
    170c:	str	r2, [sp]
    1710:	ldr	r1, [pc, #-1724]	; 105c <read_grib1_message+0xe48>
    1714:	sub	r2, sl, #6
    1718:	bl	0 <coda_set_error>
    171c:	mvn	r0, #0
    1720:	b	884 <read_grib1_message+0x670>
    1724:	strd	r6, [sp, #16]
    1728:	str	r8, [sp, #32]
    172c:	ldr	r6, [sp, #48]	; 0x30
    1730:	ldr	r8, [sp, #40]	; 0x28
    1734:	mov	r7, r9
    1738:	mov	r2, r7
    173c:	mov	r3, #0
    1740:	ldr	r1, [pc, #-1768]	; 1060 <read_grib1_message+0xe4c>
    1744:	mov	r0, r8
    1748:	bl	0 <coda_mem_record_add_field>
    174c:	b	1398 <read_grib1_message+0x1184>
    1750:	mov	r2, sl
    1754:	mov	r3, #0
    1758:	ldr	r1, [pc, #-1788]	; 1064 <read_grib1_message+0xe50>
    175c:	mov	r0, fp
    1760:	strd	r6, [sp, #16]
    1764:	mov	r8, fp
    1768:	ldr	r6, [sp, #84]	; 0x54
    176c:	bl	0 <coda_mem_record_add_field>
    1770:	b	da4 <read_grib1_message+0xb90>
    1774:	ldr	r9, [sp, #48]	; 0x30
    1778:	b	de0 <read_grib1_message+0xbcc>
    177c:	mov	r0, r7
    1780:	bl	0 <free>
    1784:	ldr	r0, [pc, #-1796]	; 1088 <read_grib1_message+0xe74>
    1788:	ldr	r1, [pc, #-1832]	; 1068 <read_grib1_message+0xe54>
    178c:	bl	0 <coda_set_error>
    1790:	mvn	r0, #0
    1794:	b	884 <read_grib1_message+0x670>
    1798:	ldr	r0, [pc, #-1816]	; 1088 <read_grib1_message+0xe74>
    179c:	ldr	r1, [pc, #-1848]	; 106c <read_grib1_message+0xe58>
    17a0:	bl	0 <coda_set_error>
    17a4:	mvn	r0, #0
    17a8:	b	884 <read_grib1_message+0x670>
    17ac:	ldr	r3, [pc, #-1860]	; 1070 <read_grib1_message+0xe5c>
    17b0:	mov	r2, r8
    17b4:	str	r3, [sp]
    17b8:	ldr	r1, [pc, #-1868]	; 1074 <read_grib1_message+0xe60>
    17bc:	ldr	r3, [pc, #-1868]	; 1078 <read_grib1_message+0xe64>
    17c0:	mvn	r0, #0
    17c4:	bl	0 <coda_set_error>
    17c8:	b	880 <read_grib1_message+0x66c>
    17cc:	ldr	r1, [pc, #-1880]	; 107c <read_grib1_message+0xe68>
    17d0:	ldr	r0, [pc, #-1872]	; 1088 <read_grib1_message+0xe74>
    17d4:	bl	0 <coda_set_error>
    17d8:	mov	r0, r8
    17dc:	bl	0 <coda_dynamic_type_delete>
    17e0:	mvn	r0, #0
    17e4:	b	884 <read_grib1_message+0x670>
    17e8:	ldr	r1, [pc, #-1904]	; 1080 <read_grib1_message+0xe6c>
    17ec:	ldr	r0, [pc, #-1900]	; 1088 <read_grib1_message+0xe74>
    17f0:	bl	0 <coda_set_error>
    17f4:	mov	r0, r8
    17f8:	bl	0 <coda_dynamic_type_delete>
    17fc:	mvn	r0, #0
    1800:	b	884 <read_grib1_message+0x670>
    1804:	mov	r0, sl
    1808:	bl	0 <free>
    180c:	mvn	r0, #0
    1810:	b	884 <read_grib1_message+0x670>
    1814:	ldr	r0, [pc, #-1940]	; 1088 <read_grib1_message+0xe74>
    1818:	ldr	r1, [pc, #-1948]	; 1084 <read_grib1_message+0xe70>
    181c:	bl	0 <coda_set_error>
    1820:	mvn	r0, #0
    1824:	b	884 <read_grib1_message+0x670>
    1828:	str	r9, [sp, #32]
    182c:	b	1738 <read_grib1_message+0x1524>
    1830:	mov	r0, r8
    1834:	bl	0 <coda_grib_type_delete>
    1838:	mvn	r0, #0
    183c:	b	884 <read_grib1_message+0x670>
    1840:	ldr	r0, [pc, #-1984]	; 1088 <read_grib1_message+0xe74>
    1844:	ldr	r1, [pc, #-1984]	; 108c <read_grib1_message+0xe78>
    1848:	bl	0 <coda_set_error>
    184c:	mvn	r0, #0
    1850:	b	884 <read_grib1_message+0x670>

00001854 <coda_grib_done>:
    1854:	push	{r4, r5, r6, lr}
    1858:	bl	0 <__aeabi_read_tp>
    185c:	ldr	r5, [pc, #80]	; 18b4 <coda_grib_done+0x60>
    1860:	ldr	r2, [r5, r0]
    1864:	cmp	r2, #0
    1868:	popeq	{r4, r5, r6, pc}
    186c:	mov	r4, #0
    1870:	mov	r6, r4
    1874:	ldr	r3, [r2, r4]
    1878:	subs	r0, r3, #0
    187c:	beq	1890 <coda_grib_done+0x3c>
    1880:	bl	0 <coda_type_release>
    1884:	bl	0 <__aeabi_read_tp>
    1888:	ldr	r2, [r5, r0]
    188c:	str	r6, [r2, r4]
    1890:	add	r4, r4, #4
    1894:	cmp	r4, #572	; 0x23c
    1898:	bne	1874 <coda_grib_done+0x20>
    189c:	mov	r0, r2
    18a0:	bl	0 <free>
    18a4:	mov	r3, #0
    18a8:	bl	0 <__aeabi_read_tp>
    18ac:	str	r3, [r5, r0]
    18b0:	pop	{r4, r5, r6, pc}
    18b4:	.word	0x00000000

000018b8 <coda_grib_close>:
    18b8:	push	{r4, lr}
    18bc:	mov	r4, r0
    18c0:	ldr	r0, [r0]
    18c4:	cmp	r0, #0
    18c8:	beq	18d0 <coda_grib_close+0x18>
    18cc:	bl	0 <free>
    18d0:	ldr	r0, [r4, #20]
    18d4:	cmp	r0, #0
    18d8:	beq	18e0 <coda_grib_close+0x28>
    18dc:	bl	0 <coda_dynamic_type_delete>
    18e0:	ldr	r0, [r4, #48]	; 0x30
    18e4:	cmp	r0, #0
    18e8:	beq	18f0 <coda_grib_close+0x38>
    18ec:	bl	0 <free>
    18f0:	ldr	r0, [r4, #52]	; 0x34
    18f4:	cmp	r0, #0
    18f8:	beq	1900 <coda_grib_close+0x48>
    18fc:	bl	0 <coda_bin_close>
    1900:	mov	r0, r4
    1904:	bl	0 <free>
    1908:	mov	r0, #0
    190c:	pop	{r4, pc}

00001910 <coda_grib_reopen>:
    1910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1914:	vpush	{d8-d11}
    1918:	ldr	sl, [pc, #356]	; 1a84 <coda_grib_reopen+0x174>
    191c:	sub	sp, sp, #316	; 0x13c
    1920:	str	r0, [sp, #44]	; 0x2c
    1924:	bl	0 <__aeabi_read_tp>
    1928:	ldr	r4, [sl, r0]
    192c:	cmp	r4, #0
    1930:	beq	34e8 <coda_grib_reopen+0x1bd8>
    1934:	mov	r0, #56	; 0x38
    1938:	bl	0 <malloc>
    193c:	subs	fp, r0, #0
    1940:	beq	7904 <coda_grib_reopen+0x5ff4>
    1944:	ldr	r3, [sp, #44]	; 0x2c
    1948:	mov	r8, #0
    194c:	mov	ip, #7
    1950:	ldr	r1, [r3]
    1954:	str	r8, [fp]
    1958:	ldrd	r2, [r1, #8]
    195c:	ldr	r0, [r1]
    1960:	str	r1, [fp, #52]	; 0x34
    1964:	strd	r2, [fp, #8]
    1968:	str	r8, [fp, #20]
    196c:	str	r8, [fp, #24]
    1970:	str	r8, [fp, #28]
    1974:	str	r8, [fp, #32]
    1978:	str	r8, [fp, #48]	; 0x30
    197c:	str	ip, [fp, #16]
    1980:	str	r8, [fp, #40]	; 0x28
    1984:	str	r8, [fp, #44]	; 0x2c
    1988:	bl	0 <strdup>
    198c:	cmp	r0, r8
    1990:	str	r0, [fp]
    1994:	beq	78e0 <coda_grib_reopen+0x5fd0>
    1998:	bl	0 <__aeabi_read_tp>
    199c:	ldr	r3, [sl, r0]
    19a0:	mov	r1, r8
    19a4:	ldr	r0, [r3, #568]	; 0x238
    19a8:	bl	0 <coda_mem_array_new>
    19ac:	ldrd	r4, [fp, #8]
    19b0:	cmp	r4, #2
    19b4:	sbcs	r3, r5, #0
    19b8:	str	r0, [fp, #20]
    19bc:	blt	2de0 <coda_grib_reopen+0x14d0>
    19c0:	vldr	s22, [pc, #184]	; 1a80 <coda_grib_reopen+0x170>
    19c4:	vldr	d10, [pc, #172]	; 1a78 <coda_grib_reopen+0x168>
    19c8:	mov	r6, #0
    19cc:	mov	r7, r8
    19d0:	str	r8, [sp, #40]	; 0x28
    19d4:	subs	r2, r4, #1
    19d8:	sbc	r3, r5, #0
    19dc:	cmp	r6, r2
    19e0:	sbcs	r3, r7, r3
    19e4:	mov	r3, #0
    19e8:	strb	r3, [sp, #220]	; 0xdc
    19ec:	bge	2de0 <coda_grib_reopen+0x14d0>
    19f0:	mov	r8, #1
    19f4:	b	1a34 <coda_grib_reopen+0x124>
    19f8:	add	r3, r3, r6
    19fc:	ldrb	r3, [r3]
    1a00:	strb	r3, [sp, #220]	; 0xdc
    1a04:	adds	r2, r6, #1
    1a08:	adc	r3, r7, #0
    1a0c:	subs	r0, r4, #1
    1a10:	sbc	r1, r5, #0
    1a14:	cmp	r2, r0
    1a18:	sbcs	r1, r3, r1
    1a1c:	bge	2de0 <coda_grib_reopen+0x14d0>
    1a20:	ldrb	r1, [sp, #220]	; 0xdc
    1a24:	cmp	r1, #71	; 0x47
    1a28:	beq	1ad0 <coda_grib_reopen+0x1c0>
    1a2c:	mov	r6, r2
    1a30:	mov	r7, r3
    1a34:	ldr	r2, [fp, #52]	; 0x34
    1a38:	ldr	r3, [r2, #48]	; 0x30
    1a3c:	cmp	r3, #0
    1a40:	bne	19f8 <coda_grib_reopen+0xe8>
    1a44:	ldr	r3, [r2, #16]
    1a48:	cmp	r3, #1
    1a4c:	bhi	7968 <coda_grib_reopen+0x6058>
    1a50:	ldr	r0, [r2, #56]	; 0x38
    1a54:	mov	r3, r6
    1a58:	mov	r2, r8
    1a5c:	add	r1, sp, #220	; 0xdc
    1a60:	bl	0 <pread>
    1a64:	cmp	r0, #0
    1a68:	blt	7540 <coda_grib_reopen+0x5c30>
    1a6c:	ldrd	r4, [fp, #8]
    1a70:	b	1a04 <coda_grib_reopen+0xf4>
    1a74:	nop			; (mov r0, r0)
    1a78:	.word	0x00000000
    1a7c:	.word	0x40240000
	...
    1a88:	.word	0x00001198
    1a8c:	.word	0x00001700
    1a90:	.word	0x00000138
    1a94:	.word	0x00000260
    1a98:	.word	0x0000170c
    1a9c:	.word	0x00001720
    1aa0:	.word	0x00001734
    1aa4:	.word	0x00001750
    1aa8:	.word	0x000001b4
    1aac:	.word	0x000001bc
    1ab0:	.word	0x000001c0
    1ab4:	.word	0x000001c8
    1ab8:	.word	0x00001758
    1abc:	.word	0x00001760
    1ac0:	.word	0x00001780
    1ac4:	.word	0x00000300
    1ac8:	.word	0x0000057c
    1acc:	.word	0x00000780
    1ad0:	mov	r4, #8
    1ad4:	mov	r5, #0
    1ad8:	add	r3, sp, #220	; 0xdc
    1adc:	ldr	r0, [fp, #52]	; 0x34
    1ae0:	mov	r2, r6
    1ae4:	str	r3, [sp, #8]
    1ae8:	strd	r4, [sp]
    1aec:	mov	r3, r7
    1af0:	bl	0 <read_bytes>
    1af4:	cmp	r0, #0
    1af8:	blt	2cfc <coda_grib_reopen+0x13ec>
    1afc:	ldrb	r3, [sp, #220]	; 0xdc
    1b00:	cmp	r3, #71	; 0x47
    1b04:	bne	3428 <coda_grib_reopen+0x1b18>
    1b08:	ldrb	r3, [sp, #221]	; 0xdd
    1b0c:	cmp	r3, #82	; 0x52
    1b10:	bne	3428 <coda_grib_reopen+0x1b18>
    1b14:	ldrb	r3, [sp, #222]	; 0xde
    1b18:	cmp	r3, #73	; 0x49
    1b1c:	bne	3428 <coda_grib_reopen+0x1b18>
    1b20:	ldrb	r3, [sp, #223]	; 0xdf
    1b24:	cmp	r3, #66	; 0x42
    1b28:	bne	3428 <coda_grib_reopen+0x1b18>
    1b2c:	ldrb	r9, [sp, #227]	; 0xe3
    1b30:	sub	r3, r9, #1
    1b34:	cmp	r3, #1
    1b38:	bhi	7650 <coda_grib_reopen+0x5d40>
    1b3c:	bl	0 <__aeabi_read_tp>
    1b40:	ldr	r3, [sl, r0]
    1b44:	mov	r8, r0
    1b48:	mov	r1, #0
    1b4c:	ldr	r0, [r3, #564]	; 0x234
    1b50:	bl	0 <coda_mem_record_new>
    1b54:	cmp	r9, #1
    1b58:	str	r0, [sp, #36]	; 0x24
    1b5c:	beq	2d14 <coda_grib_reopen+0x1404>
    1b60:	adds	r2, r6, #8
    1b64:	add	r3, sp, #184	; 0xb8
    1b68:	ldr	r0, [fp, #52]	; 0x34
    1b6c:	str	r3, [sp, #8]
    1b70:	strd	r4, [sp]
    1b74:	adc	r3, r7, #0
    1b78:	bl	0 <read_bytes>
    1b7c:	cmp	r0, #0
    1b80:	blt	2cfc <coda_grib_reopen+0x13ec>
    1b84:	ldrb	lr, [sp, #190]	; 0xbe
    1b88:	ldrb	ip, [sp, #191]	; 0xbf
    1b8c:	ldrb	r1, [sp, #185]	; 0xb9
    1b90:	str	lr, [sp, #24]
    1b94:	str	ip, [sp, #16]
    1b98:	ldrb	r5, [sp, #184]	; 0xb8
    1b9c:	bl	0 <__aeabi_read_tp>
    1ba0:	ldr	lr, [sp, #24]
    1ba4:	ldr	ip, [sp, #16]
    1ba8:	ldrb	r9, [sp, #189]	; 0xbd
    1bac:	ldrb	r8, [sp, #188]	; 0xbc
    1bb0:	ldrb	r2, [sp, #186]	; 0xba
    1bb4:	ldrb	r3, [sp, #187]	; 0xbb
    1bb8:	eor	r1, r1, lr
    1bbc:	eor	lr, lr, r1
    1bc0:	eor	r5, r5, ip
    1bc4:	eor	r1, r1, lr
    1bc8:	mov	r4, r0
    1bcc:	eor	ip, ip, r5
    1bd0:	ldr	r0, [sl, r0]
    1bd4:	eor	r5, r5, ip
    1bd8:	str	r1, [sp, #16]
    1bdc:	eor	r2, r2, r9
    1be0:	eor	r3, r3, r8
    1be4:	strb	ip, [sp, #191]	; 0xbf
    1be8:	ldrb	ip, [sp, #16]
    1bec:	eor	r9, r9, r2
    1bf0:	eor	r8, r8, r3
    1bf4:	eor	r2, r2, r9
    1bf8:	eor	r3, r3, r8
    1bfc:	mov	r1, #0
    1c00:	ldr	r0, [r0, #560]	; 0x230
    1c04:	strb	ip, [sp, #185]	; 0xb9
    1c08:	strb	lr, [sp, #190]	; 0xbe
    1c0c:	strb	r5, [sp, #184]	; 0xb8
    1c10:	strb	r2, [sp, #186]	; 0xba
    1c14:	strb	r9, [sp, #189]	; 0xbd
    1c18:	strb	r3, [sp, #187]	; 0xbb
    1c1c:	strb	r8, [sp, #188]	; 0xbc
    1c20:	bl	0 <coda_mem_record_new>
    1c24:	ldr	r3, [sp, #36]	; 0x24
    1c28:	ldr	r2, [sl, r4]
    1c2c:	ldr	r1, [r3, #20]
    1c30:	mov	r3, #2
    1c34:	mov	r5, r0
    1c38:	str	r0, [r1, #4]
    1c3c:	str	r0, [sp, #76]	; 0x4c
    1c40:	mov	r1, #0
    1c44:	ldr	r0, [r2, #284]	; 0x11c
    1c48:	mov	r2, fp
    1c4c:	bl	0 <coda_mem_uint8_new>
    1c50:	adds	r8, r6, #16
    1c54:	adc	r9, r7, #0
    1c58:	mov	r3, #0
    1c5c:	ldr	r1, [pc, #-476]	; 1a88 <coda_grib_reopen+0x178>
    1c60:	strd	r8, [sp, #24]
    1c64:	mov	r2, r0
    1c68:	mov	r0, r5
    1c6c:	bl	0 <coda_mem_record_add_field>
    1c70:	ldr	r1, [sl, r4]
    1c74:	ldrb	r3, [sp, #226]	; 0xe2
    1c78:	mov	r2, fp
    1c7c:	ldr	r0, [r1, #324]	; 0x144
    1c80:	mov	r1, #0
    1c84:	bl	0 <coda_mem_uint8_new>
    1c88:	mov	r3, #0
    1c8c:	ldr	r1, [pc, #-520]	; 1a8c <coda_grib_reopen+0x17c>
    1c90:	mov	r2, r0
    1c94:	mov	r0, r5
    1c98:	bl	0 <coda_mem_record_add_field>
    1c9c:	mov	r2, #21
    1ca0:	mov	r3, #0
    1ca4:	add	r1, sp, #248	; 0xf8
    1ca8:	ldr	r0, [fp, #52]	; 0x34
    1cac:	strd	r2, [sp]
    1cb0:	str	r1, [sp, #8]
    1cb4:	mov	r2, r8
    1cb8:	mov	r3, r9
    1cbc:	vstr	s22, [sp, #180]	; 0xb4
    1cc0:	bl	0 <read_bytes>
    1cc4:	cmp	r0, #0
    1cc8:	blt	2cf4 <coda_grib_reopen+0x13e4>
    1ccc:	ldrb	r1, [sp, #248]	; 0xf8
    1cd0:	ldrb	r2, [sp, #249]	; 0xf9
    1cd4:	ldrb	r3, [sp, #250]	; 0xfa
    1cd8:	add	r2, r2, r1, lsl #8
    1cdc:	ldrb	r1, [sp, #252]	; 0xfc
    1ce0:	add	r3, r3, r2, lsl #8
    1ce4:	ldrb	r2, [sp, #251]	; 0xfb
    1ce8:	cmp	r1, #1
    1cec:	str	r1, [sp, #16]
    1cf0:	add	r9, r2, r3, lsl #8
    1cf4:	bne	74cc <coda_grib_reopen+0x5bbc>
    1cf8:	ldrb	r0, [sp, #253]	; 0xfd
    1cfc:	ldrb	r3, [sp, #254]	; 0xfe
    1d00:	ldr	r1, [sl, r4]
    1d04:	mov	r2, fp
    1d08:	add	r3, r3, r0, lsl #8
    1d0c:	ldr	r0, [r1, #288]	; 0x120
    1d10:	uxth	r3, r3
    1d14:	mov	r1, #0
    1d18:	bl	0 <coda_mem_uint16_new>
    1d1c:	ldr	r5, [sp, #76]	; 0x4c
    1d20:	mov	r3, #0
    1d24:	ldr	r1, [pc, #-668]	; 1a90 <coda_grib_reopen+0x180>
    1d28:	mov	r2, r0
    1d2c:	mov	r0, r5
    1d30:	bl	0 <coda_mem_record_add_field>
    1d34:	ldrb	r0, [sp, #255]	; 0xff
    1d38:	ldrb	r3, [sp, #256]	; 0x100
    1d3c:	ldr	r1, [sl, r4]
    1d40:	mov	r2, fp
    1d44:	add	r3, r3, r0, lsl #8
    1d48:	ldr	r0, [r1, #316]	; 0x13c
    1d4c:	uxth	r3, r3
    1d50:	mov	r1, #0
    1d54:	bl	0 <coda_mem_uint16_new>
    1d58:	mov	r3, #0
    1d5c:	ldr	r1, [pc, #-720]	; 1a94 <coda_grib_reopen+0x184>
    1d60:	mov	r2, r0
    1d64:	mov	r0, r5
    1d68:	bl	0 <coda_mem_record_add_field>
    1d6c:	ldr	r1, [sl, r4]
    1d70:	ldrb	r3, [sp, #257]	; 0x101
    1d74:	mov	r2, fp
    1d78:	ldr	r0, [r1, #328]	; 0x148
    1d7c:	mov	r1, #0
    1d80:	bl	0 <coda_mem_uint8_new>
    1d84:	mov	r3, #0
    1d88:	ldr	r1, [pc, #-760]	; 1a98 <coda_grib_reopen+0x188>
    1d8c:	mov	r2, r0
    1d90:	mov	r0, r5
    1d94:	bl	0 <coda_mem_record_add_field>
    1d98:	ldr	r1, [sl, r4]
    1d9c:	ldrb	r3, [sp, #258]	; 0x102
    1da0:	mov	r2, fp
    1da4:	ldr	r0, [r1, #332]	; 0x14c
    1da8:	mov	r1, #0
    1dac:	bl	0 <coda_mem_uint8_new>
    1db0:	mov	r3, #0
    1db4:	ldr	r1, [pc, #-800]	; 1a9c <coda_grib_reopen+0x18c>
    1db8:	mov	r2, r0
    1dbc:	mov	r0, r5
    1dc0:	bl	0 <coda_mem_record_add_field>
    1dc4:	ldr	r1, [sl, r4]
    1dc8:	ldrb	r3, [sp, #259]	; 0x103
    1dcc:	mov	r2, fp
    1dd0:	ldr	r0, [r1, #336]	; 0x150
    1dd4:	mov	r1, #0
    1dd8:	bl	0 <coda_mem_uint8_new>
    1ddc:	mov	r3, #0
    1de0:	ldr	r1, [pc, #-840]	; 1aa0 <coda_grib_reopen+0x190>
    1de4:	mov	r2, r0
    1de8:	mov	r0, r5
    1dec:	bl	0 <coda_mem_record_add_field>
    1df0:	ldrb	r0, [sp, #260]	; 0x104
    1df4:	ldrb	r3, [sp, #261]	; 0x105
    1df8:	ldr	r1, [sl, r4]
    1dfc:	mov	r2, fp
    1e00:	add	r3, r3, r0, lsl #8
    1e04:	ldr	r0, [r1, #292]	; 0x124
    1e08:	uxth	r3, r3
    1e0c:	mov	r1, #0
    1e10:	bl	0 <coda_mem_uint16_new>
    1e14:	mov	r3, #0
    1e18:	ldr	r1, [pc, #-892]	; 1aa4 <coda_grib_reopen+0x194>
    1e1c:	mov	r2, r0
    1e20:	mov	r0, r5
    1e24:	bl	0 <coda_mem_record_add_field>
    1e28:	ldr	r1, [sl, r4]
    1e2c:	ldrb	r3, [sp, #262]	; 0x106
    1e30:	mov	r2, fp
    1e34:	ldr	r0, [r1, #296]	; 0x128
    1e38:	mov	r1, #0
    1e3c:	bl	0 <coda_mem_uint8_new>
    1e40:	mov	r3, #0
    1e44:	ldr	r1, [pc, #-932]	; 1aa8 <coda_grib_reopen+0x198>
    1e48:	mov	r2, r0
    1e4c:	mov	r0, r5
    1e50:	bl	0 <coda_mem_record_add_field>
    1e54:	ldr	r1, [sl, r4]
    1e58:	ldrb	r3, [sp, #263]	; 0x107
    1e5c:	mov	r2, fp
    1e60:	ldr	r0, [r1, #300]	; 0x12c
    1e64:	mov	r1, #0
    1e68:	bl	0 <coda_mem_uint8_new>
    1e6c:	mov	r3, #0
    1e70:	ldr	r1, [pc, #-972]	; 1aac <coda_grib_reopen+0x19c>
    1e74:	mov	r2, r0
    1e78:	mov	r0, r5
    1e7c:	bl	0 <coda_mem_record_add_field>
    1e80:	ldr	r1, [sl, r4]
    1e84:	ldrb	r3, [sp, #264]	; 0x108
    1e88:	mov	r2, fp
    1e8c:	ldr	r0, [r1, #304]	; 0x130
    1e90:	mov	r1, #0
    1e94:	bl	0 <coda_mem_uint8_new>
    1e98:	mov	r3, #0
    1e9c:	ldr	r1, [pc, #-1012]	; 1ab0 <coda_grib_reopen+0x1a0>
    1ea0:	mov	r2, r0
    1ea4:	mov	r0, r5
    1ea8:	bl	0 <coda_mem_record_add_field>
    1eac:	ldr	r1, [sl, r4]
    1eb0:	ldrb	r3, [sp, #265]	; 0x109
    1eb4:	mov	r2, fp
    1eb8:	ldr	r0, [r1, #308]	; 0x134
    1ebc:	mov	r1, #0
    1ec0:	bl	0 <coda_mem_uint8_new>
    1ec4:	mov	r3, #0
    1ec8:	ldr	r1, [pc, #-1052]	; 1ab4 <coda_grib_reopen+0x1a4>
    1ecc:	mov	r2, r0
    1ed0:	mov	r0, r5
    1ed4:	bl	0 <coda_mem_record_add_field>
    1ed8:	ldr	r1, [sl, r4]
    1edc:	ldrb	r3, [sp, #266]	; 0x10a
    1ee0:	mov	r2, fp
    1ee4:	ldr	r0, [r1, #312]	; 0x138
    1ee8:	mov	r1, #0
    1eec:	bl	0 <coda_mem_uint8_new>
    1ef0:	mov	r3, #0
    1ef4:	ldr	r1, [pc, #-1092]	; 1ab8 <coda_grib_reopen+0x1a8>
    1ef8:	mov	r2, r0
    1efc:	mov	r0, r5
    1f00:	bl	0 <coda_mem_record_add_field>
    1f04:	ldr	r1, [sl, r4]
    1f08:	ldrb	r3, [sp, #267]	; 0x10b
    1f0c:	mov	r2, fp
    1f10:	ldr	r0, [r1, #340]	; 0x154
    1f14:	mov	r1, #0
    1f18:	bl	0 <coda_mem_uint8_new>
    1f1c:	mov	r3, #0
    1f20:	ldr	r1, [pc, #-1132]	; 1abc <coda_grib_reopen+0x1ac>
    1f24:	mov	r2, r0
    1f28:	mov	r0, r5
    1f2c:	bl	0 <coda_mem_record_add_field>
    1f30:	ldr	r1, [sl, r4]
    1f34:	ldrb	r3, [sp, #268]	; 0x10c
    1f38:	mov	r2, fp
    1f3c:	ldr	r0, [r1, #344]	; 0x158
    1f40:	mov	r1, #0
    1f44:	bl	0 <coda_mem_uint8_new>
    1f48:	mov	r3, #0
    1f4c:	ldr	r1, [pc, #-1172]	; 1ac0 <coda_grib_reopen+0x1b0>
    1f50:	mov	r2, r0
    1f54:	mov	r0, r5
    1f58:	bl	0 <coda_mem_record_add_field>
    1f5c:	ldr	r3, [sl, r4]
    1f60:	mov	r1, #0
    1f64:	ldr	r0, [r3, #548]	; 0x224
    1f68:	bl	0 <coda_mem_array_new>
    1f6c:	mov	r3, #0
    1f70:	ldr	r1, [pc, #-1204]	; 1ac4 <coda_grib_reopen+0x1b4>
    1f74:	mov	r2, r0
    1f78:	str	r0, [sp, #164]	; 0xa4
    1f7c:	mov	r0, r5
    1f80:	bl	0 <coda_mem_record_add_field>
    1f84:	ldr	r3, [sl, r4]
    1f88:	mov	r1, #0
    1f8c:	ldr	r0, [r3, #552]	; 0x228
    1f90:	bl	0 <coda_mem_array_new>
    1f94:	mov	r3, #0
    1f98:	ldr	r1, [pc, #-1240]	; 1ac8 <coda_grib_reopen+0x1b8>
    1f9c:	mov	r2, r0
    1fa0:	str	r0, [sp, #160]	; 0xa0
    1fa4:	mov	r0, r5
    1fa8:	bl	0 <coda_mem_record_add_field>
    1fac:	ldr	r3, [sl, r4]
    1fb0:	mov	r1, #0
    1fb4:	ldr	r0, [r3, #556]	; 0x22c
    1fb8:	bl	0 <coda_mem_array_new>
    1fbc:	mov	r3, #0
    1fc0:	ldr	r1, [pc, #-1276]	; 1acc <coda_grib_reopen+0x1bc>
    1fc4:	mov	r2, r0
    1fc8:	str	r0, [sp, #140]	; 0x8c
    1fcc:	mov	r0, r5
    1fd0:	bl	0 <coda_mem_record_add_field>
    1fd4:	adds	r4, r6, #37	; 0x25
    1fd8:	adc	r5, r7, #0
    1fdc:	cmp	r9, #21
    1fe0:	bgt	301c <coda_grib_reopen+0x170c>
    1fe4:	mov	r2, #4
    1fe8:	mov	r3, #0
    1fec:	add	r1, sp, #248	; 0xf8
    1ff0:	ldr	r0, [fp, #52]	; 0x34
    1ff4:	strd	r2, [sp]
    1ff8:	str	r1, [sp, #8]
    1ffc:	mov	r2, r4
    2000:	mov	r3, r5
    2004:	bl	0 <read_bytes>
    2008:	cmp	r0, #0
    200c:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2010:	vldr	d8, [pc, #968]	; 23e0 <coda_grib_reopen+0xad0>
    2014:	adds	r8, r4, #4
    2018:	ldr	r4, [sp, #16]
    201c:	adc	r9, r5, #0
    2020:	vmov.f64	d9, d8
    2024:	mov	r3, #0
    2028:	mvn	r2, #0
    202c:	str	r2, [sp, #144]	; 0x90
    2030:	str	r2, [sp, #148]	; 0x94
    2034:	str	r3, [sp, #132]	; 0x84
    2038:	str	r2, [sp, #48]	; 0x30
    203c:	str	r2, [sp, #72]	; 0x48
    2040:	strd	r8, [sp, #24]
    2044:	str	r2, [sp, #52]	; 0x34
    2048:	str	r3, [sp, #60]	; 0x3c
    204c:	str	r3, [sp, #68]	; 0x44
    2050:	str	r3, [sp, #64]	; 0x40
    2054:	str	r3, [sp, #128]	; 0x80
    2058:	str	r3, [sp, #124]	; 0x7c
    205c:	str	r3, [sp, #120]	; 0x78
    2060:	str	r3, [sp, #116]	; 0x74
    2064:	str	r3, [sp, #112]	; 0x70
    2068:	str	r3, [sp, #108]	; 0x6c
    206c:	str	r3, [sp, #104]	; 0x68
    2070:	str	r3, [sp, #100]	; 0x64
    2074:	str	r3, [sp, #96]	; 0x60
    2078:	str	r3, [sp, #92]	; 0x5c
    207c:	str	r3, [sp, #88]	; 0x58
    2080:	str	r3, [sp, #56]	; 0x38
    2084:	str	r3, [sp, #136]	; 0x88
    2088:	str	r3, [sp, #156]	; 0x9c
    208c:	str	r3, [sp, #84]	; 0x54
    2090:	str	r2, [sp, #80]	; 0x50
    2094:	strd	r6, [sp, #168]	; 0xa8
    2098:	mov	r2, #4
    209c:	ldr	r1, [pc, #836]	; 23e8 <coda_grib_reopen+0xad8>
    20a0:	add	r0, sp, #248	; 0xf8
    20a4:	bl	0 <memcmp>
    20a8:	cmp	r0, #0
    20ac:	beq	74fc <coda_grib_reopen+0x5bec>
    20b0:	ldrb	r2, [sp, #248]	; 0xf8
    20b4:	ldrb	r3, [sp, #249]	; 0xf9
    20b8:	ldrb	r1, [sp, #250]	; 0xfa
    20bc:	ldrd	r6, [sp, #24]
    20c0:	add	r3, r3, r2, lsl #8
    20c4:	ldrb	ip, [sp, #251]	; 0xfb
    20c8:	add	r1, r1, r3, lsl #8
    20cc:	mov	r8, #1
    20d0:	mov	r9, #0
    20d4:	add	r3, sp, #248	; 0xf8
    20d8:	ldr	r0, [fp, #52]	; 0x34
    20dc:	add	r1, ip, r1, lsl #8
    20e0:	str	r3, [sp, #8]
    20e4:	strd	r8, [sp]
    20e8:	mov	r2, r6
    20ec:	mov	r3, r7
    20f0:	str	r1, [sp, #32]
    20f4:	bl	0 <read_bytes>
    20f8:	cmp	r0, #0
    20fc:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2100:	ldrb	r5, [sp, #248]	; 0xf8
    2104:	adds	r2, r6, r8
    2108:	adc	r3, r7, r9
    210c:	cmp	r5, #2
    2110:	strd	r2, [sp, #16]
    2114:	beq	25f0 <coda_grib_reopen+0xce0>
    2118:	cmp	r5, #3
    211c:	beq	2654 <coda_grib_reopen+0xd44>
    2120:	cmp	r5, #4
    2124:	beq	2df8 <coda_grib_reopen+0x14e8>
    2128:	cmp	r5, #5
    212c:	beq	30d0 <coda_grib_reopen+0x17c0>
    2130:	cmp	r5, #6
    2134:	beq	3340 <coda_grib_reopen+0x1a30>
    2138:	cmp	r5, #7
    213c:	bne	7808 <coda_grib_reopen+0x5ef8>
    2140:	sub	r3, r4, #5
    2144:	cmp	r3, #1
    2148:	bhi	7830 <coda_grib_reopen+0x5f20>
    214c:	bl	0 <__aeabi_read_tp>
    2150:	ldr	r3, [sl, r0]
    2154:	mov	r4, r0
    2158:	mov	r1, #0
    215c:	ldr	r0, [r3, #544]	; 0x220
    2160:	bl	0 <coda_mem_record_new>
    2164:	ldr	r1, [sl, r4]
    2168:	ldr	r3, [sp, #72]	; 0x48
    216c:	mov	r2, fp
    2170:	mov	r8, r0
    2174:	ldr	r0, [r1, #280]	; 0x118
    2178:	mov	r1, #0
    217c:	bl	0 <coda_mem_uint32_new>
    2180:	mov	r3, #0
    2184:	ldr	r1, [pc, #608]	; 23ec <coda_grib_reopen+0xadc>
    2188:	mov	r2, r0
    218c:	mov	r0, r8
    2190:	bl	0 <coda_mem_record_add_field>
    2194:	ldr	r1, [sl, r4]
    2198:	ldr	r3, [sp, #88]	; 0x58
    219c:	mov	r2, fp
    21a0:	ldr	r0, [r1, #460]	; 0x1cc
    21a4:	mov	r1, #0
    21a8:	bl	0 <coda_mem_uint8_new>
    21ac:	mov	r3, #0
    21b0:	ldr	r1, [pc, #568]	; 23f0 <coda_grib_reopen+0xae0>
    21b4:	mov	r2, r0
    21b8:	mov	r0, r8
    21bc:	bl	0 <coda_mem_record_add_field>
    21c0:	ldr	r1, [sl, r4]
    21c4:	ldr	r3, [sp, #92]	; 0x5c
    21c8:	mov	r2, fp
    21cc:	ldr	r0, [r1, #464]	; 0x1d0
    21d0:	mov	r1, #0
    21d4:	bl	0 <coda_mem_uint8_new>
    21d8:	mov	r3, #0
    21dc:	ldr	r1, [pc, #528]	; 23f4 <coda_grib_reopen+0xae4>
    21e0:	mov	r2, r0
    21e4:	mov	r0, r8
    21e8:	bl	0 <coda_mem_record_add_field>
    21ec:	ldr	r1, [sl, r4]
    21f0:	ldr	r3, [sp, #96]	; 0x60
    21f4:	mov	r2, fp
    21f8:	ldr	r0, [r1, #468]	; 0x1d4
    21fc:	mov	r1, #0
    2200:	bl	0 <coda_mem_uint8_new>
    2204:	mov	r3, #0
    2208:	ldr	r1, [pc, #488]	; 23f8 <coda_grib_reopen+0xae8>
    220c:	mov	r2, r0
    2210:	mov	r0, r8
    2214:	bl	0 <coda_mem_record_add_field>
    2218:	ldr	r1, [sl, r4]
    221c:	ldr	r3, [sp, #100]	; 0x64
    2220:	mov	r2, fp
    2224:	ldr	r0, [r1, #472]	; 0x1d8
    2228:	mov	r1, #0
    222c:	bl	0 <coda_mem_uint8_new>
    2230:	mov	r3, #0
    2234:	ldr	r1, [pc, #448]	; 23fc <coda_grib_reopen+0xaec>
    2238:	mov	r2, r0
    223c:	mov	r0, r8
    2240:	bl	0 <coda_mem_record_add_field>
    2244:	ldr	r1, [sl, r4]
    2248:	ldr	r3, [sp, #104]	; 0x68
    224c:	mov	r2, fp
    2250:	ldr	r0, [r1, #476]	; 0x1dc
    2254:	mov	r1, #0
    2258:	bl	0 <coda_mem_uint8_new>
    225c:	mov	r3, #0
    2260:	ldr	r1, [pc, #408]	; 2400 <coda_grib_reopen+0xaf0>
    2264:	mov	r2, r0
    2268:	mov	r0, r8
    226c:	bl	0 <coda_mem_record_add_field>
    2270:	ldr	r1, [sl, r4]
    2274:	ldr	r3, [sp, #108]	; 0x6c
    2278:	mov	r2, fp
    227c:	ldr	r0, [r1, #480]	; 0x1e0
    2280:	mov	r1, #0
    2284:	bl	0 <coda_mem_uint16_new>
    2288:	mov	r3, #0
    228c:	ldr	r1, [pc, #368]	; 2404 <coda_grib_reopen+0xaf4>
    2290:	mov	r2, r0
    2294:	mov	r0, r8
    2298:	bl	0 <coda_mem_record_add_field>
    229c:	ldr	r1, [sl, r4]
    22a0:	ldr	r3, [sp, #112]	; 0x70
    22a4:	mov	r2, fp
    22a8:	ldr	r0, [r1, #484]	; 0x1e4
    22ac:	mov	r1, #0
    22b0:	bl	0 <coda_mem_uint8_new>
    22b4:	mov	r3, #0
    22b8:	ldr	r1, [pc, #328]	; 2408 <coda_grib_reopen+0xaf8>
    22bc:	mov	r2, r0
    22c0:	mov	r0, r8
    22c4:	bl	0 <coda_mem_record_add_field>
    22c8:	ldr	r1, [sl, r4]
    22cc:	ldr	r3, [sp, #116]	; 0x74
    22d0:	mov	r2, fp
    22d4:	ldr	r0, [r1, #488]	; 0x1e8
    22d8:	mov	r1, #0
    22dc:	bl	0 <coda_mem_uint8_new>
    22e0:	mov	r3, #0
    22e4:	ldr	r1, [pc, #288]	; 240c <coda_grib_reopen+0xafc>
    22e8:	mov	r2, r0
    22ec:	mov	r0, r8
    22f0:	bl	0 <coda_mem_record_add_field>
    22f4:	ldr	r1, [sl, r4]
    22f8:	ldr	r3, [sp, #120]	; 0x78
    22fc:	mov	r2, fp
    2300:	ldr	r0, [r1, #492]	; 0x1ec
    2304:	mov	r1, #0
    2308:	bl	0 <coda_mem_uint32_new>
    230c:	mov	r3, #0
    2310:	ldr	r1, [pc, #248]	; 2410 <coda_grib_reopen+0xb00>
    2314:	mov	r2, r0
    2318:	mov	r0, r8
    231c:	bl	0 <coda_mem_record_add_field>
    2320:	ldr	r1, [sl, r4]
    2324:	ldr	r3, [sp, #124]	; 0x7c
    2328:	mov	r2, fp
    232c:	ldr	r0, [r1, #496]	; 0x1f0
    2330:	mov	r1, #0
    2334:	bl	0 <coda_mem_uint8_new>
    2338:	mov	r3, #0
    233c:	ldr	r1, [pc, #208]	; 2414 <coda_grib_reopen+0xb04>
    2340:	mov	r2, r0
    2344:	mov	r0, r8
    2348:	bl	0 <coda_mem_record_add_field>
    234c:	ldr	r3, [sl, r4]
    2350:	vmov.f64	d0, d9
    2354:	mov	r2, fp
    2358:	ldr	r0, [r3, #500]	; 0x1f4
    235c:	mov	r1, #0
    2360:	bl	0 <coda_mem_double_new>
    2364:	mov	r3, #0
    2368:	ldr	r1, [pc, #168]	; 2418 <coda_grib_reopen+0xb08>
    236c:	mov	r2, r0
    2370:	mov	r0, r8
    2374:	bl	0 <coda_mem_record_add_field>
    2378:	ldr	r1, [sl, r4]
    237c:	ldr	r3, [sp, #128]	; 0x80
    2380:	mov	r2, fp
    2384:	ldr	r0, [r1, #504]	; 0x1f8
    2388:	mov	r1, #0
    238c:	bl	0 <coda_mem_uint8_new>
    2390:	mov	r3, #0
    2394:	ldr	r1, [pc, #128]	; 241c <coda_grib_reopen+0xb0c>
    2398:	mov	r2, r0
    239c:	mov	r0, r8
    23a0:	bl	0 <coda_mem_record_add_field>
    23a4:	ldr	r3, [sl, r4]
    23a8:	vmov.f64	d0, d8
    23ac:	mov	r2, fp
    23b0:	ldr	r0, [r3, #508]	; 0x1fc
    23b4:	mov	r1, #0
    23b8:	bl	0 <coda_mem_double_new>
    23bc:	mov	r3, #0
    23c0:	ldr	r1, [pc, #88]	; 2420 <coda_grib_reopen+0xb10>
    23c4:	mov	r2, r0
    23c8:	mov	r0, r8
    23cc:	bl	0 <coda_mem_record_add_field>
    23d0:	ldr	r3, [sp, #56]	; 0x38
    23d4:	cmp	r3, #0
    23d8:	bne	33c0 <coda_grib_reopen+0x1ab0>
    23dc:	b	24b0 <coda_grib_reopen+0xba0>
	...
    23e8:	.word	0x00000788
    23ec:	.word	0x000015e8
    23f0:	.word	0x000015f8
    23f4:	.word	0x0000160c
    23f8:	.word	0x0000161c
    23fc:	.word	0x00001634
    2400:	.word	0x00000140
    2404:	.word	0x00001648
    2408:	.word	0x00001660
    240c:	.word	0x00001678
    2410:	.word	0x00001694
    2414:	.word	0x000016a4
    2418:	.word	0x000016bc
    241c:	.word	0x000016d0
    2420:	.word	0x000016ec
    2424:	.word	0x00000744
    2428:	.word	0x0000026c
    242c:	.word	0x00000754
    2430:	.word	0x00000768
    2434:	.word	0x0000145c
    2438:	.word	0x00001470
    243c:	.word	0x00001488
    2440:	.word	0x0000149c
    2444:	.word	0x000014bc
    2448:	.word	0x000014dc
    244c:	.word	0x000014ec
    2450:	.word	0x00001510
    2454:	.word	0x00001534
    2458:	.word	0x00001550
    245c:	.word	0x0000156c
    2460:	.word	0x00001588
    2464:	.word	0x00000390
    2468:	.word	0x00000394
    246c:	.word	0x000015a4
    2470:	.word	0x000015cc
    2474:	.word	0x00000398
    2478:	.word	0x000003b4
    247c:	.word	0x000003d0
    2480:	.word	0x000003ec
    2484:	.word	0x00000404
    2488:	.word	0x00000420
    248c:	.word	0x00000438
    2490:	.word	0x0000044c
    2494:	.word	0x00001900
    2498:	.word	0xfffffed4
    249c:	.word	0x00001198
    24a0:	.word	0x00000778
    24a4:	.word	0x00000434
    24a8:	.word	0x0000ffff
    24ac:	.word	0x0000045c
    24b0:	bl	0 <__aeabi_read_tp>
    24b4:	mov	r9, r0
    24b8:	ldr	r0, [sl, r0]
    24bc:	ldr	r3, [sp, #60]	; 0x3c
    24c0:	mov	r2, fp
    24c4:	mov	r1, #0
    24c8:	ldr	r0, [r0, #524]	; 0x20c
    24cc:	bl	0 <coda_mem_uint8_new>
    24d0:	mov	r3, #0
    24d4:	ldr	r1, [pc, #-184]	; 2424 <coda_grib_reopen+0xb14>
    24d8:	mov	r2, r0
    24dc:	mov	r0, r8
    24e0:	bl	0 <coda_mem_record_add_field>
    24e4:	ldr	r1, [sl, r9]
    24e8:	ldr	r3, [sp, #64]	; 0x40
    24ec:	mov	r2, fp
    24f0:	ldr	r0, [r1, #320]	; 0x140
    24f4:	mov	r1, #0
    24f8:	bl	0 <coda_mem_int16_new>
    24fc:	mov	r3, #0
    2500:	ldr	r1, [pc, #-224]	; 2428 <coda_grib_reopen+0xb18>
    2504:	mov	r2, r0
    2508:	mov	r0, r8
    250c:	bl	0 <coda_mem_record_add_field>
    2510:	ldr	r1, [sl, r9]
    2514:	ldr	r3, [sp, #68]	; 0x44
    2518:	mov	r2, fp
    251c:	ldr	r0, [r1, #528]	; 0x210
    2520:	mov	r1, #0
    2524:	bl	0 <coda_mem_int16_new>
    2528:	mov	r3, #0
    252c:	ldr	r1, [pc, #-264]	; 242c <coda_grib_reopen+0xb1c>
    2530:	mov	r2, r0
    2534:	mov	r0, r8
    2538:	bl	0 <coda_mem_record_add_field>
    253c:	ldr	r3, [sl, r9]
    2540:	vldr	s0, [sp, #180]	; 0xb4
    2544:	mov	r2, fp
    2548:	ldr	r0, [r3, #532]	; 0x214
    254c:	mov	r1, #0
    2550:	bl	0 <coda_mem_float_new>
    2554:	mov	r3, #0
    2558:	ldr	r1, [pc, #-304]	; 2430 <coda_grib_reopen+0xb20>
    255c:	mov	r2, r0
    2560:	mov	r0, r8
    2564:	bl	0 <coda_mem_record_add_field>
    2568:	ldr	r3, [sp, #84]	; 0x54
    256c:	cmp	r3, #0
    2570:	beq	302c <coda_grib_reopen+0x171c>
    2574:	ldr	r0, [sp, #136]	; 0x88
    2578:	bl	0 <malloc>
    257c:	subs	r4, r0, #0
    2580:	beq	7918 <coda_grib_reopen+0x6008>
    2584:	ldr	r1, [sp, #136]	; 0x88
    2588:	ldr	r0, [fp, #52]	; 0x34
    258c:	str	r1, [sp]
    2590:	ldr	r1, [sp, #156]	; 0x9c
    2594:	ldrd	r2, [sp, #48]	; 0x30
    2598:	str	r4, [sp, #8]
    259c:	str	r1, [sp, #4]
    25a0:	bl	0 <read_bytes>
    25a4:	cmp	r0, #0
    25a8:	blt	78c0 <coda_grib_reopen+0x5fb0>
    25ac:	ldr	r1, [sl, r9]
    25b0:	vldr	s0, [sp, #180]	; 0xb4
    25b4:	ldrd	r2, [sp, #16]
    25b8:	ldr	r0, [r1, #536]	; 0x218
    25bc:	ldr	r1, [sp, #68]	; 0x44
    25c0:	str	r4, [sp, #12]
    25c4:	str	r1, [sp, #8]
    25c8:	ldr	r1, [sp, #64]	; 0x40
    25cc:	str	r1, [sp, #4]
    25d0:	ldr	r1, [sp, #60]	; 0x3c
    25d4:	str	r1, [sp]
    25d8:	ldr	r1, [sp, #132]	; 0x84
    25dc:	bl	0 <coda_grib_value_array_simple_packing_new>
    25e0:	mov	r9, r0
    25e4:	mov	r0, r4
    25e8:	bl	0 <free>
    25ec:	b	3068 <coda_grib_reopen+0x1758>
    25f0:	cmp	r4, #1
    25f4:	cmpne	r4, #7
    25f8:	movne	r9, #1
    25fc:	moveq	r9, #0
    2600:	bne	7674 <coda_grib_reopen+0x5d64>
    2604:	ldr	r3, [sp, #32]
    2608:	cmp	r3, #5
    260c:	bgt	32b4 <coda_grib_reopen+0x19a4>
    2610:	ldrd	r6, [sp, #16]
    2614:	mov	r2, #4
    2618:	mov	r3, #0
    261c:	add	r1, sp, #248	; 0xf8
    2620:	ldr	r0, [fp, #52]	; 0x34
    2624:	strd	r2, [sp]
    2628:	str	r1, [sp, #8]
    262c:	mov	r2, r6
    2630:	mov	r3, r7
    2634:	bl	0 <read_bytes>
    2638:	cmp	r0, #0
    263c:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2640:	adds	r2, r6, #4
    2644:	adc	r3, r7, #0
    2648:	mov	r4, r5
    264c:	strd	r2, [sp, #24]
    2650:	b	2098 <coda_grib_reopen+0x788>
    2654:	sub	r8, r4, #1
    2658:	cmp	r4, #7
    265c:	cmpne	r8, #1
    2660:	movhi	r8, #1
    2664:	movls	r8, #0
    2668:	bhi	7848 <coda_grib_reopen+0x5f38>
    266c:	mov	r6, #9
    2670:	mov	r7, #0
    2674:	add	r1, sp, #248	; 0xf8
    2678:	ldr	r0, [fp, #52]	; 0x34
    267c:	ldrd	r2, [sp, #16]
    2680:	str	r1, [sp, #8]
    2684:	strd	r6, [sp]
    2688:	bl	0 <read_bytes>
    268c:	cmp	r0, #0
    2690:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2694:	bl	0 <__aeabi_read_tp>
    2698:	ldr	r3, [sl, r0]
    269c:	mov	r9, r0
    26a0:	mov	r1, r8
    26a4:	ldr	r0, [r3, #540]	; 0x21c
    26a8:	bl	0 <coda_mem_record_new>
    26ac:	ldr	r1, [sl, r9]
    26b0:	ldr	r3, [sp, #80]	; 0x50
    26b4:	mov	r2, fp
    26b8:	mov	r4, r0
    26bc:	ldr	r0, [r1, #276]	; 0x114
    26c0:	mov	r1, r8
    26c4:	bl	0 <coda_mem_int32_new>
    26c8:	mov	r3, r8
    26cc:	ldr	r1, [pc, #-672]	; 2434 <coda_grib_reopen+0xb24>
    26d0:	mov	r2, r0
    26d4:	mov	r0, r4
    26d8:	bl	0 <coda_mem_record_add_field>
    26dc:	ldr	r1, [sl, r9]
    26e0:	ldrb	r3, [sp, #248]	; 0xf8
    26e4:	mov	r2, fp
    26e8:	ldr	r0, [r1, #448]	; 0x1c0
    26ec:	mov	r1, r8
    26f0:	bl	0 <coda_mem_uint8_new>
    26f4:	mov	r3, r8
    26f8:	ldr	r1, [pc, #-712]	; 2438 <coda_grib_reopen+0xb28>
    26fc:	mov	r2, r0
    2700:	mov	r0, r4
    2704:	bl	0 <coda_mem_record_add_field>
    2708:	ldrb	r1, [sp, #249]	; 0xf9
    270c:	ldrb	r3, [sp, #250]	; 0xfa
    2710:	ldrb	r2, [sp, #251]	; 0xfb
    2714:	ldr	r0, [sl, r9]
    2718:	add	r3, r3, r1, lsl #8
    271c:	ldrb	r1, [sp, #252]	; 0xfc
    2720:	add	r3, r2, r3, lsl #8
    2724:	ldr	r0, [r0, #452]	; 0x1c4
    2728:	add	r3, r1, r3, lsl #8
    272c:	mov	r2, fp
    2730:	mov	r1, r8
    2734:	bl	0 <coda_mem_uint32_new>
    2738:	mov	r3, r8
    273c:	ldr	r1, [pc, #-776]	; 243c <coda_grib_reopen+0xb2c>
    2740:	mov	r2, r0
    2744:	mov	r0, r4
    2748:	bl	0 <coda_mem_record_add_field>
    274c:	ldrb	r1, [sp, #254]	; 0xfe
    2750:	ldr	r3, [sl, r9]
    2754:	mov	r2, fp
    2758:	str	r1, [sp, #16]
    275c:	ldr	r0, [r3, #456]	; 0x1c8
    2760:	mov	r3, r1
    2764:	mov	r1, r8
    2768:	bl	0 <coda_mem_uint8_new>
    276c:	mov	r3, r8
    2770:	ldr	r1, [pc, #-824]	; 2440 <coda_grib_reopen+0xb30>
    2774:	mov	r2, r0
    2778:	mov	r0, r4
    277c:	bl	0 <coda_mem_record_add_field>
    2780:	ldrb	r0, [sp, #255]	; 0xff
    2784:	ldrb	r3, [sp, #256]	; 0x100
    2788:	ldr	r1, [sl, r9]
    278c:	mov	r2, fp
    2790:	add	r3, r3, r0, lsl #8
    2794:	ldr	r0, [r1, #520]	; 0x208
    2798:	uxth	r6, r3
    279c:	mov	r1, r8
    27a0:	mov	r3, r6
    27a4:	bl	0 <coda_mem_uint16_new>
    27a8:	mov	r3, r8
    27ac:	ldr	r1, [pc, #-880]	; 2444 <coda_grib_reopen+0xb34>
    27b0:	mov	r2, r0
    27b4:	mov	r0, r4
    27b8:	bl	0 <coda_mem_record_add_field>
    27bc:	ldrd	r2, [sp, #24]
    27c0:	ldrb	r8, [sp, #248]	; 0xf8
    27c4:	adds	r2, r2, #10
    27c8:	adc	r3, r3, #0
    27cc:	cmp	r8, #0
    27d0:	bne	756c <coda_grib_reopen+0x5c5c>
    27d4:	sub	r1, r6, #40	; 0x28
    27d8:	uxth	r1, r1
    27dc:	cmp	r1, #3
    27e0:	cmphi	r6, #3
    27e4:	str	r1, [sp, #152]	; 0x98
    27e8:	movls	r1, #1
    27ec:	movhi	r1, #0
    27f0:	bhi	7860 <coda_grib_reopen+0x5f50>
    27f4:	mov	r6, #58	; 0x3a
    27f8:	mov	r7, #0
    27fc:	add	r1, sp, #248	; 0xf8
    2800:	ldr	r0, [fp, #52]	; 0x34
    2804:	str	r1, [sp, #8]
    2808:	strd	r6, [sp]
    280c:	bl	0 <read_bytes>
    2810:	cmp	r0, #0
    2814:	blt	7580 <coda_grib_reopen+0x5c70>
    2818:	ldr	r1, [sl, r9]
    281c:	ldrb	r3, [sp, #248]	; 0xf8
    2820:	mov	r2, fp
    2824:	ldr	r0, [r1, #360]	; 0x168
    2828:	mov	r1, r8
    282c:	bl	0 <coda_mem_uint8_new>
    2830:	mov	r3, r8
    2834:	ldr	r1, [pc, #-1012]	; 2448 <coda_grib_reopen+0xb38>
    2838:	mov	r2, r0
    283c:	mov	r0, r4
    2840:	bl	0 <coda_mem_record_add_field>
    2844:	ldr	r1, [sl, r9]
    2848:	ldrb	r3, [sp, #249]	; 0xf9
    284c:	mov	r2, fp
    2850:	ldr	r0, [r1, #364]	; 0x16c
    2854:	mov	r1, r8
    2858:	bl	0 <coda_mem_uint8_new>
    285c:	mov	r3, r8
    2860:	ldr	r1, [pc, #-1052]	; 244c <coda_grib_reopen+0xb3c>
    2864:	mov	r2, r0
    2868:	mov	r0, r4
    286c:	bl	0 <coda_mem_record_add_field>
    2870:	ldrb	r1, [sp, #250]	; 0xfa
    2874:	ldrb	r3, [sp, #251]	; 0xfb
    2878:	ldrb	r2, [sp, #252]	; 0xfc
    287c:	ldrb	r0, [sp, #253]	; 0xfd
    2880:	add	r3, r3, r1, lsl #8
    2884:	ldr	r1, [sl, r9]
    2888:	add	r3, r2, r3, lsl #8
    288c:	mov	r2, fp
    2890:	add	r3, r0, r3, lsl #8
    2894:	ldr	r0, [r1, #368]	; 0x170
    2898:	mov	r1, r8
    289c:	bl	0 <coda_mem_uint32_new>
    28a0:	mov	r3, r8
    28a4:	ldr	r1, [pc, #-1116]	; 2450 <coda_grib_reopen+0xb40>
    28a8:	mov	r2, r0
    28ac:	mov	r0, r4
    28b0:	bl	0 <coda_mem_record_add_field>
    28b4:	ldr	r1, [sl, r9]
    28b8:	ldrb	r3, [sp, #254]	; 0xfe
    28bc:	mov	r2, fp
    28c0:	ldr	r0, [r1, #372]	; 0x174
    28c4:	mov	r1, r8
    28c8:	bl	0 <coda_mem_uint8_new>
    28cc:	mov	r3, r8
    28d0:	ldr	r1, [pc, #-1156]	; 2454 <coda_grib_reopen+0xb44>
    28d4:	mov	r2, r0
    28d8:	mov	r0, r4
    28dc:	bl	0 <coda_mem_record_add_field>
    28e0:	ldrb	r1, [sp, #255]	; 0xff
    28e4:	ldrb	r3, [sp, #256]	; 0x100
    28e8:	ldrb	r2, [sp, #257]	; 0x101
    28ec:	ldrb	r0, [sp, #258]	; 0x102
    28f0:	add	r3, r3, r1, lsl #8
    28f4:	ldr	r1, [sl, r9]
    28f8:	add	r3, r2, r3, lsl #8
    28fc:	mov	r2, fp
    2900:	add	r3, r0, r3, lsl #8
    2904:	ldr	r0, [r1, #376]	; 0x178
    2908:	mov	r1, r8
    290c:	bl	0 <coda_mem_uint32_new>
    2910:	mov	r3, r8
    2914:	ldr	r1, [pc, #-1220]	; 2458 <coda_grib_reopen+0xb48>
    2918:	mov	r2, r0
    291c:	mov	r0, r4
    2920:	bl	0 <coda_mem_record_add_field>
    2924:	ldr	r1, [sl, r9]
    2928:	ldrb	r3, [sp, #259]	; 0x103
    292c:	mov	r2, fp
    2930:	ldr	r0, [r1, #380]	; 0x17c
    2934:	mov	r1, r8
    2938:	bl	0 <coda_mem_uint8_new>
    293c:	mov	r3, r8
    2940:	ldr	r1, [pc, #-1260]	; 245c <coda_grib_reopen+0xb4c>
    2944:	mov	r2, r0
    2948:	mov	r0, r4
    294c:	bl	0 <coda_mem_record_add_field>
    2950:	ldrb	r1, [sp, #260]	; 0x104
    2954:	ldrb	r3, [sp, #261]	; 0x105
    2958:	ldrb	r2, [sp, #262]	; 0x106
    295c:	ldrb	r0, [sp, #263]	; 0x107
    2960:	add	r3, r3, r1, lsl #8
    2964:	ldr	r1, [sl, r9]
    2968:	add	r3, r2, r3, lsl #8
    296c:	mov	r2, fp
    2970:	add	r3, r0, r3, lsl #8
    2974:	ldr	r0, [r1, #384]	; 0x180
    2978:	mov	r1, r8
    297c:	bl	0 <coda_mem_uint32_new>
    2980:	mov	r3, r8
    2984:	ldr	r1, [pc, #-1324]	; 2460 <coda_grib_reopen+0xb50>
    2988:	mov	r2, r0
    298c:	mov	r0, r4
    2990:	bl	0 <coda_mem_record_add_field>
    2994:	ldrb	r1, [sp, #264]	; 0x108
    2998:	ldrb	r3, [sp, #265]	; 0x109
    299c:	ldrb	r2, [sp, #266]	; 0x10a
    29a0:	ldrb	r0, [sp, #267]	; 0x10b
    29a4:	add	r3, r3, r1, lsl #8
    29a8:	ldr	r1, [sl, r9]
    29ac:	add	r3, r2, r3, lsl #8
    29b0:	mov	r2, fp
    29b4:	add	r3, r0, r3, lsl #8
    29b8:	ldr	r0, [r1, #388]	; 0x184
    29bc:	mov	r1, r8
    29c0:	bl	0 <coda_mem_uint32_new>
    29c4:	mov	r3, r8
    29c8:	ldr	r1, [pc, #-1388]	; 2464 <coda_grib_reopen+0xb54>
    29cc:	mov	r2, r0
    29d0:	mov	r0, r4
    29d4:	bl	0 <coda_mem_record_add_field>
    29d8:	ldrb	r1, [sp, #268]	; 0x10c
    29dc:	ldrb	r3, [sp, #269]	; 0x10d
    29e0:	ldrb	r2, [sp, #270]	; 0x10e
    29e4:	ldrb	r0, [sp, #271]	; 0x10f
    29e8:	add	r3, r3, r1, lsl #8
    29ec:	ldr	r1, [sl, r9]
    29f0:	add	r3, r2, r3, lsl #8
    29f4:	mov	r2, fp
    29f8:	add	r3, r0, r3, lsl #8
    29fc:	ldr	r0, [r1, #392]	; 0x188
    2a00:	mov	r1, r8
    2a04:	bl	0 <coda_mem_uint32_new>
    2a08:	mov	r3, r8
    2a0c:	ldr	r1, [pc, #-1452]	; 2468 <coda_grib_reopen+0xb58>
    2a10:	mov	r2, r0
    2a14:	mov	r0, r4
    2a18:	bl	0 <coda_mem_record_add_field>
    2a1c:	ldrb	r1, [sp, #272]	; 0x110
    2a20:	ldrb	r3, [sp, #273]	; 0x111
    2a24:	ldrb	r2, [sp, #274]	; 0x112
    2a28:	ldrb	r0, [sp, #275]	; 0x113
    2a2c:	add	r3, r3, r1, lsl #8
    2a30:	ldr	r1, [sl, r9]
    2a34:	add	r3, r2, r3, lsl #8
    2a38:	mov	r2, fp
    2a3c:	add	r3, r0, r3, lsl #8
    2a40:	ldr	r0, [r1, #396]	; 0x18c
    2a44:	mov	r1, r8
    2a48:	bl	0 <coda_mem_uint32_new>
    2a4c:	mov	r3, r8
    2a50:	ldr	r1, [pc, #-1516]	; 246c <coda_grib_reopen+0xb5c>
    2a54:	mov	r2, r0
    2a58:	mov	r0, r4
    2a5c:	bl	0 <coda_mem_record_add_field>
    2a60:	ldrb	r1, [sp, #276]	; 0x114
    2a64:	ldrb	r3, [sp, #277]	; 0x115
    2a68:	ldrb	r2, [sp, #278]	; 0x116
    2a6c:	ldr	r0, [sl, r9]
    2a70:	add	r3, r3, r1, lsl #8
    2a74:	ldrb	r1, [sp, #279]	; 0x117
    2a78:	add	r3, r2, r3, lsl #8
    2a7c:	ldr	r0, [r0, #400]	; 0x190
    2a80:	add	r3, r1, r3, lsl #8
    2a84:	mov	r2, fp
    2a88:	mov	r1, r8
    2a8c:	bl	0 <coda_mem_uint32_new>
    2a90:	mov	r3, r8
    2a94:	ldr	r1, [pc, #-1580]	; 2470 <coda_grib_reopen+0xb60>
    2a98:	mov	r2, r0
    2a9c:	mov	r0, r4
    2aa0:	bl	0 <coda_mem_record_add_field>
    2aa4:	ldrb	r0, [sp, #280]	; 0x118
    2aa8:	ldrb	r1, [sp, #281]	; 0x119
    2aac:	ldrb	r2, [sp, #282]	; 0x11a
    2ab0:	ldrb	r3, [sp, #283]	; 0x11b
    2ab4:	add	r1, r1, r0, lsl #8
    2ab8:	tst	r0, #128	; 0x80
    2abc:	add	r2, r2, r1, lsl #8
    2ac0:	add	r3, r3, r2, lsl #8
    2ac4:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2ac8:	bl	0 <__aeabi_read_tp>
    2acc:	ldr	r1, [sl, r0]
    2ad0:	mov	r2, fp
    2ad4:	ldr	r0, [r1, #404]	; 0x194
    2ad8:	mov	r1, #0
    2adc:	bl	0 <coda_mem_int32_new>
    2ae0:	mov	r3, #0
    2ae4:	ldr	r1, [pc, #-1656]	; 2474 <coda_grib_reopen+0xb64>
    2ae8:	mov	r2, r0
    2aec:	mov	r0, r4
    2af0:	bl	0 <coda_mem_record_add_field>
    2af4:	ldrb	r0, [sp, #284]	; 0x11c
    2af8:	ldrb	r1, [sp, #285]	; 0x11d
    2afc:	ldrb	r2, [sp, #286]	; 0x11e
    2b00:	ldrb	r3, [sp, #287]	; 0x11f
    2b04:	add	r1, r1, r0, lsl #8
    2b08:	tst	r0, #128	; 0x80
    2b0c:	add	r2, r2, r1, lsl #8
    2b10:	mov	r1, #0
    2b14:	add	r3, r3, r2, lsl #8
    2b18:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2b1c:	bl	0 <__aeabi_read_tp>
    2b20:	mov	r8, r0
    2b24:	ldr	r0, [sl, r0]
    2b28:	mov	r2, fp
    2b2c:	ldr	r0, [r0, #408]	; 0x198
    2b30:	bl	0 <coda_mem_int32_new>
    2b34:	mov	r3, #0
    2b38:	ldr	r1, [pc, #-1736]	; 2478 <coda_grib_reopen+0xb68>
    2b3c:	mov	r2, r0
    2b40:	mov	r0, r4
    2b44:	bl	0 <coda_mem_record_add_field>
    2b48:	ldr	r1, [sl, r8]
    2b4c:	ldrb	r3, [sp, #288]	; 0x120
    2b50:	mov	r2, fp
    2b54:	ldr	r0, [r1, #412]	; 0x19c
    2b58:	mov	r1, #0
    2b5c:	bl	0 <coda_mem_uint8_new>
    2b60:	mov	r3, #0
    2b64:	ldr	r1, [pc, #-1776]	; 247c <coda_grib_reopen+0xb6c>
    2b68:	mov	r2, r0
    2b6c:	mov	r0, r4
    2b70:	bl	0 <coda_mem_record_add_field>
    2b74:	ldrb	r0, [sp, #289]	; 0x121
    2b78:	ldrb	r1, [sp, #290]	; 0x122
    2b7c:	ldrb	r2, [sp, #291]	; 0x123
    2b80:	ldrb	r3, [sp, #292]	; 0x124
    2b84:	add	r1, r1, r0, lsl #8
    2b88:	tst	r0, #128	; 0x80
    2b8c:	add	r2, r2, r1, lsl #8
    2b90:	add	r3, r3, r2, lsl #8
    2b94:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2b98:	bl	0 <__aeabi_read_tp>
    2b9c:	ldr	r1, [sl, r0]
    2ba0:	mov	r2, fp
    2ba4:	ldr	r0, [r1, #416]	; 0x1a0
    2ba8:	mov	r1, #0
    2bac:	bl	0 <coda_mem_int32_new>
    2bb0:	mov	r3, #0
    2bb4:	ldr	r1, [pc, #-1852]	; 2480 <coda_grib_reopen+0xb70>
    2bb8:	mov	r2, r0
    2bbc:	mov	r0, r4
    2bc0:	bl	0 <coda_mem_record_add_field>
    2bc4:	ldrb	r0, [sp, #293]	; 0x125
    2bc8:	ldrb	r1, [sp, #294]	; 0x126
    2bcc:	ldrb	r2, [sp, #295]	; 0x127
    2bd0:	ldrb	r3, [sp, #296]	; 0x128
    2bd4:	add	r1, r1, r0, lsl #8
    2bd8:	tst	r0, #128	; 0x80
    2bdc:	add	r2, r2, r1, lsl #8
    2be0:	mov	r1, #0
    2be4:	add	r3, r3, r2, lsl #8
    2be8:	rsbne	r3, r3, #-2147483648	; 0x80000000
    2bec:	bl	0 <__aeabi_read_tp>
    2bf0:	mov	r8, r0
    2bf4:	ldr	r0, [sl, r0]
    2bf8:	mov	r2, fp
    2bfc:	ldr	r0, [r0, #420]	; 0x1a4
    2c00:	bl	0 <coda_mem_int32_new>
    2c04:	mov	r3, #0
    2c08:	ldr	r1, [pc, #-1932]	; 2484 <coda_grib_reopen+0xb74>
    2c0c:	mov	r2, r0
    2c10:	mov	r0, r4
    2c14:	bl	0 <coda_mem_record_add_field>
    2c18:	ldrb	r1, [sp, #297]	; 0x129
    2c1c:	ldrb	r3, [sp, #298]	; 0x12a
    2c20:	ldrb	r2, [sp, #299]	; 0x12b
    2c24:	ldr	r0, [sl, r8]
    2c28:	add	r3, r3, r1, lsl #8
    2c2c:	ldrb	r1, [sp, #300]	; 0x12c
    2c30:	add	r3, r2, r3, lsl #8
    2c34:	ldr	r0, [r0, #424]	; 0x1a8
    2c38:	add	r3, r1, r3, lsl #8
    2c3c:	mov	r2, fp
    2c40:	mov	r1, #0
    2c44:	bl	0 <coda_mem_uint32_new>
    2c48:	mov	r3, #0
    2c4c:	ldr	r1, [pc, #-1996]	; 2488 <coda_grib_reopen+0xb78>
    2c50:	mov	r2, r0
    2c54:	mov	r0, r4
    2c58:	bl	0 <coda_mem_record_add_field>
    2c5c:	ldrb	r0, [sp, #301]	; 0x12d
    2c60:	ldrb	r2, [sp, #302]	; 0x12e
    2c64:	ldrb	r3, [sp, #303]	; 0x12f
    2c68:	ldrb	r1, [sp, #304]	; 0x130
    2c6c:	add	r2, r2, r0, lsl #8
    2c70:	ldr	r0, [sp, #152]	; 0x98
    2c74:	add	r3, r3, r2, lsl #8
    2c78:	cmp	r0, #3
    2c7c:	add	r3, r1, r3, lsl #8
    2c80:	mov	r2, fp
    2c84:	ldr	r1, [sl, r8]
    2c88:	bls	30ac <coda_grib_reopen+0x179c>
    2c8c:	ldr	r0, [r1, #428]	; 0x1ac
    2c90:	mov	r1, #0
    2c94:	bl	0 <coda_mem_uint32_new>
    2c98:	mov	r3, #0
    2c9c:	ldr	r1, [pc, #-2072]	; 248c <coda_grib_reopen+0xb7c>
    2ca0:	mov	r2, r0
    2ca4:	mov	r0, r4
    2ca8:	bl	0 <coda_mem_record_add_field>
    2cac:	bl	0 <__aeabi_read_tp>
    2cb0:	ldr	r1, [sl, r0]
    2cb4:	ldrb	r3, [sp, #305]	; 0x131
    2cb8:	mov	r2, fp
    2cbc:	ldr	r0, [r1, #436]	; 0x1b4
    2cc0:	mov	r1, #0
    2cc4:	bl	0 <coda_mem_uint8_new>
    2cc8:	mov	r3, #0
    2ccc:	ldr	r1, [pc, #-2116]	; 2490 <coda_grib_reopen+0xb80>
    2cd0:	mov	r2, r0
    2cd4:	mov	r0, r4
    2cd8:	bl	0 <coda_mem_record_add_field>
    2cdc:	ldr	r3, [sp, #16]
    2ce0:	cmp	r3, #0
    2ce4:	beq	3264 <coda_grib_reopen+0x1954>
    2ce8:	ldr	r1, [pc, #-2140]	; 2494 <coda_grib_reopen+0xb84>
    2cec:	ldr	r0, [pc, #-2140]	; 2498 <coda_grib_reopen+0xb88>
    2cf0:	bl	0 <coda_set_error>
    2cf4:	ldr	r0, [sp, #36]	; 0x24
    2cf8:	bl	0 <coda_dynamic_type_delete>
    2cfc:	mov	r0, fp
    2d00:	bl	18b8 <coda_grib_close>
    2d04:	mvn	r0, #0
    2d08:	add	sp, sp, #316	; 0x13c
    2d0c:	vpop	{d8-d11}
    2d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2d14:	ldrb	r1, [sp, #224]	; 0xe0
    2d18:	ldrb	r3, [sp, #225]	; 0xe1
    2d1c:	ldrb	r2, [sp, #226]	; 0xe2
    2d20:	ldr	r0, [sl, r8]
    2d24:	add	r3, r3, r1, lsl #8
    2d28:	mov	r1, #0
    2d2c:	add	r2, r2, r3, lsl #8
    2d30:	ldr	r0, [r0, #272]	; 0x110
    2d34:	asr	r3, r2, #31
    2d38:	strd	r2, [sp, #184]	; 0xb8
    2d3c:	bl	0 <coda_mem_record_new>
    2d40:	ldr	r3, [sp, #36]	; 0x24
    2d44:	ldr	r1, [sl, r8]
    2d48:	ldr	r2, [r3, #20]
    2d4c:	mov	r3, r9
    2d50:	mov	r4, r0
    2d54:	str	r0, [sp, #76]	; 0x4c
    2d58:	ldr	r0, [r1, #12]
    2d5c:	str	r4, [r2]
    2d60:	mov	r1, #0
    2d64:	mov	r2, fp
    2d68:	bl	0 <coda_mem_uint8_new>
    2d6c:	mov	r3, #0
    2d70:	ldr	r1, [pc, #-2268]	; 249c <coda_grib_reopen+0xb8c>
    2d74:	mov	r2, r0
    2d78:	mov	r0, r4
    2d7c:	bl	0 <coda_mem_record_add_field>
    2d80:	adds	r2, r6, #8
    2d84:	adc	r3, r7, #0
    2d88:	mov	r1, r4
    2d8c:	mov	r0, fp
    2d90:	bl	214 <read_grib1_message>
    2d94:	cmp	r0, #0
    2d98:	bne	2cf4 <coda_grib_reopen+0x13e4>
    2d9c:	ldr	r1, [sp, #36]	; 0x24
    2da0:	ldr	r0, [fp, #20]
    2da4:	bl	0 <coda_mem_array_add_element>
    2da8:	cmp	r0, #0
    2dac:	bne	7638 <coda_grib_reopen+0x5d28>
    2db0:	ldrd	r2, [sp, #184]	; 0xb8
    2db4:	ldrd	r4, [fp, #8]
    2db8:	ldr	r1, [sp, #40]	; 0x28
    2dbc:	adds	r6, r6, r2
    2dc0:	adc	r7, r7, r3
    2dc4:	subs	r2, r4, #1
    2dc8:	sbc	r3, r5, #0
    2dcc:	cmp	r6, r2
    2dd0:	add	r1, r1, #1
    2dd4:	sbcs	r3, r7, r3
    2dd8:	str	r1, [sp, #40]	; 0x28
    2ddc:	blt	19d4 <coda_grib_reopen+0xc4>
    2de0:	ldr	r3, [sp, #44]	; 0x2c
    2de4:	mov	r0, #0
    2de8:	str	fp, [r3]
    2dec:	add	sp, sp, #316	; 0x13c
    2df0:	vpop	{d8-d11}
    2df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2df8:	and	r3, r4, #251	; 0xfb
    2dfc:	cmp	r3, #3
    2e00:	bne	7868 <coda_grib_reopen+0x5f58>
    2e04:	mov	r8, #4
    2e08:	mov	r9, #0
    2e0c:	add	r1, sp, #248	; 0xf8
    2e10:	ldr	r0, [fp, #52]	; 0x34
    2e14:	ldrd	r2, [sp, #16]
    2e18:	str	r1, [sp, #8]
    2e1c:	strd	r8, [sp]
    2e20:	bl	0 <read_bytes>
    2e24:	cmp	r0, #0
    2e28:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2e2c:	ldrb	r3, [sp, #250]	; 0xfa
    2e30:	ldrb	r1, [sp, #251]	; 0xfb
    2e34:	ldrb	ip, [sp, #248]	; 0xf8
    2e38:	ldrb	r0, [sp, #249]	; 0xf9
    2e3c:	add	r1, r1, r3, lsl #8
    2e40:	ldrd	r2, [sp, #24]
    2e44:	add	r0, r0, ip, lsl #8
    2e48:	uxth	r1, r1
    2e4c:	adds	r2, r2, #5
    2e50:	adc	r3, r3, #0
    2e54:	uxth	r0, r0
    2e58:	cmp	r1, #15
    2e5c:	cmpne	r1, #6
    2e60:	str	r0, [sp, #56]	; 0x38
    2e64:	bls	2e74 <coda_grib_reopen+0x1564>
    2e68:	cmp	r1, #51	; 0x33
    2e6c:	cmpne	r1, #40	; 0x28
    2e70:	bne	78cc <coda_grib_reopen+0x5fbc>
    2e74:	mov	r8, #25
    2e78:	mov	r9, #0
    2e7c:	add	r1, sp, #248	; 0xf8
    2e80:	ldr	r0, [fp, #52]	; 0x34
    2e84:	str	r1, [sp, #8]
    2e88:	strd	r8, [sp]
    2e8c:	bl	0 <read_bytes>
    2e90:	cmp	r0, #0
    2e94:	blt	2cf4 <coda_grib_reopen+0x13e4>
    2e98:	ldrb	ip, [sp, #253]	; 0xfd
    2e9c:	ldrb	r3, [sp, #254]	; 0xfe
    2ea0:	ldrb	r0, [sp, #257]	; 0x101
    2ea4:	ldrb	r1, [sp, #258]	; 0x102
    2ea8:	add	r3, r3, ip, lsl #8
    2eac:	ldrb	r2, [sp, #259]	; 0x103
    2eb0:	uxth	r3, r3
    2eb4:	str	r3, [sp, #108]	; 0x6c
    2eb8:	ldrb	r3, [sp, #248]	; 0xf8
    2ebc:	add	r1, r1, r0, lsl #8
    2ec0:	ldrb	lr, [sp, #261]	; 0x105
    2ec4:	str	r3, [sp, #88]	; 0x58
    2ec8:	ldrb	r3, [sp, #249]	; 0xf9
    2ecc:	ldrb	r0, [sp, #260]	; 0x104
    2ed0:	add	r2, r2, r1, lsl #8
    2ed4:	str	r3, [sp, #92]	; 0x5c
    2ed8:	ldrb	r3, [sp, #250]	; 0xfa
    2edc:	add	r2, r0, r2, lsl #8
    2ee0:	cmp	lr, #255	; 0xff
    2ee4:	str	r3, [sp, #96]	; 0x60
    2ee8:	ldrb	r3, [sp, #251]	; 0xfb
    2eec:	str	lr, [sp, #124]	; 0x7c
    2ef0:	str	r2, [sp, #120]	; 0x78
    2ef4:	str	r3, [sp, #100]	; 0x64
    2ef8:	ldrb	r3, [sp, #252]	; 0xfc
    2efc:	str	r3, [sp, #104]	; 0x68
    2f00:	ldrb	r3, [sp, #255]	; 0xff
    2f04:	str	r3, [sp, #112]	; 0x70
    2f08:	ldrb	r3, [sp, #256]	; 0x100
    2f0c:	str	r3, [sp, #116]	; 0x74
    2f10:	beq	7534 <coda_grib_reopen+0x5c24>
    2f14:	ldrb	r2, [sp, #263]	; 0x107
    2f18:	ldrb	r3, [sp, #264]	; 0x108
    2f1c:	ldrb	r1, [sp, #265]	; 0x109
    2f20:	add	r3, r3, r2, lsl #8
    2f24:	ldrb	r2, [sp, #266]	; 0x10a
    2f28:	add	r1, r1, r3, lsl #8
    2f2c:	add	r3, sp, #260	; 0x104
    2f30:	add	r3, r3, #2
    2f34:	add	r2, r2, r1, lsl #8
    2f38:	ldrsb	r3, [r3]
    2f3c:	vmov	s15, r2
    2f40:	cmp	r3, #0
    2f44:	vcvt.f64.s32	d9, s15
    2f48:	bge	7614 <coda_grib_reopen+0x5d04>
    2f4c:	ldr	r7, [sp, #32]
    2f50:	add	r3, r3, #1
    2f54:	vmul.f64	d9, d9, d10
    2f58:	sxtb	r3, r3
    2f5c:	cmp	r3, #0
    2f60:	bne	2f50 <coda_grib_reopen+0x1640>
    2f64:	str	r7, [sp, #32]
    2f68:	ldrb	r3, [sp, #267]	; 0x10b
    2f6c:	cmp	r3, #255	; 0xff
    2f70:	str	r3, [sp, #128]	; 0x80
    2f74:	beq	7528 <coda_grib_reopen+0x5c18>
    2f78:	ldrb	r2, [sp, #269]	; 0x10d
    2f7c:	ldrb	r3, [sp, #270]	; 0x10e
    2f80:	ldrb	r1, [sp, #271]	; 0x10f
    2f84:	add	r3, r3, r2, lsl #8
    2f88:	ldrb	r2, [sp, #272]	; 0x110
    2f8c:	add	r1, r1, r3, lsl #8
    2f90:	add	r3, sp, #268	; 0x10c
    2f94:	add	r2, r2, r1, lsl #8
    2f98:	ldrsb	r3, [r3]
    2f9c:	vmov	s15, r2
    2fa0:	cmp	r3, #0
    2fa4:	vcvt.f64.s32	d8, s15
    2fa8:	bge	75bc <coda_grib_reopen+0x5cac>
    2fac:	ldr	r7, [sp, #32]
    2fb0:	add	r3, r3, #1
    2fb4:	vmul.f64	d8, d8, d10
    2fb8:	sxtb	r3, r3
    2fbc:	cmp	r3, #0
    2fc0:	bne	2fb0 <coda_grib_reopen+0x16a0>
    2fc4:	str	r7, [sp, #32]
    2fc8:	ldrd	r2, [sp, #24]
    2fcc:	ldr	r1, [sp, #56]	; 0x38
    2fd0:	adds	r2, r2, #30
    2fd4:	adc	r3, r3, #0
    2fd8:	cmp	r1, #0
    2fdc:	strd	r2, [sp, #16]
    2fe0:	mvneq	r3, #0
    2fe4:	streq	r3, [sp, #144]	; 0x90
    2fe8:	str	r3, [sp, #148]	; 0x94
    2fec:	ldr	r3, [sp, #32]
    2ff0:	movne	r1, r2
    2ff4:	strne	r1, [sp, #144]	; 0x90
    2ff8:	cmp	r3, #34	; 0x22
    2ffc:	ble	2610 <coda_grib_reopen+0xd00>
    3000:	ldrd	r0, [sp, #16]
    3004:	ldr	r3, [sp, #32]
    3008:	sub	r3, r3, #34	; 0x22
    300c:	adds	r0, r0, r3
    3010:	adc	r1, r1, #0
    3014:	strd	r0, [sp, #16]
    3018:	b	2610 <coda_grib_reopen+0xd00>
    301c:	sub	r3, r9, #21
    3020:	adds	r4, r4, r3
    3024:	adc	r5, r5, #0
    3028:	b	1fe4 <coda_grib_reopen+0x6d4>
    302c:	ldr	r1, [sl, r9]
    3030:	vldr	s0, [sp, #180]	; 0xb4
    3034:	ldrd	r2, [sp, #16]
    3038:	ldr	r0, [r1, #536]	; 0x218
    303c:	ldr	r1, [sp, #84]	; 0x54
    3040:	str	r1, [sp, #12]
    3044:	ldr	r1, [sp, #68]	; 0x44
    3048:	str	r1, [sp, #8]
    304c:	ldr	r1, [sp, #64]	; 0x40
    3050:	str	r1, [sp, #4]
    3054:	ldr	r1, [sp, #60]	; 0x3c
    3058:	str	r1, [sp]
    305c:	ldr	r1, [sp, #132]	; 0x84
    3060:	bl	0 <coda_grib_value_array_simple_packing_new>
    3064:	mov	r9, r0
    3068:	mov	r3, #0
    306c:	mov	r2, r9
    3070:	ldr	r1, [pc, #-3032]	; 24a0 <coda_grib_reopen+0xb90>
    3074:	mov	r0, r8
    3078:	bl	0 <coda_mem_record_add_field>
    307c:	mov	r1, r8
    3080:	ldr	r0, [sp, #140]	; 0x8c
    3084:	bl	0 <coda_mem_array_add_element>
    3088:	ldr	r3, [sp, #32]
    308c:	cmp	r3, #5
    3090:	ble	2610 <coda_grib_reopen+0xd00>
    3094:	ldrd	r0, [sp, #16]
    3098:	sub	r3, r3, #5
    309c:	adds	r0, r0, r3
    30a0:	adc	r1, r1, #0
    30a4:	strd	r0, [sp, #16]
    30a8:	b	2610 <coda_grib_reopen+0xd00>
    30ac:	ldr	r0, [r1, #432]	; 0x1b0
    30b0:	mov	r1, #0
    30b4:	bl	0 <coda_mem_uint32_new>
    30b8:	mov	r3, #0
    30bc:	ldr	r1, [pc, #-3104]	; 24a4 <coda_grib_reopen+0xb94>
    30c0:	mov	r2, r0
    30c4:	mov	r0, r4
    30c8:	bl	0 <coda_mem_record_add_field>
    30cc:	b	2cac <coda_grib_reopen+0x139c>
    30d0:	cmp	r4, #4
    30d4:	bne	7880 <coda_grib_reopen+0x5f70>
    30d8:	mov	r8, #6
    30dc:	mov	r9, #0
    30e0:	add	r1, sp, #248	; 0xf8
    30e4:	ldr	r0, [fp, #52]	; 0x34
    30e8:	ldrd	r2, [sp, #16]
    30ec:	str	r1, [sp, #8]
    30f0:	strd	r8, [sp]
    30f4:	bl	0 <read_bytes>
    30f8:	cmp	r0, #0
    30fc:	blt	2cf4 <coda_grib_reopen+0x13e4>
    3100:	ldrb	ip, [sp, #248]	; 0xf8
    3104:	ldrb	r2, [sp, #252]	; 0xfc
    3108:	ldrb	r3, [sp, #249]	; 0xf9
    310c:	ldrb	r1, [sp, #253]	; 0xfd
    3110:	ldrb	r0, [sp, #250]	; 0xfa
    3114:	add	r3, r3, ip, lsl #8
    3118:	ldrd	r6, [sp, #24]
    311c:	add	r1, r1, r2, lsl #8
    3120:	ldrb	ip, [sp, #251]	; 0xfb
    3124:	add	r0, r0, r3, lsl #8
    3128:	adds	r2, r6, #7
    312c:	uxth	r1, r1
    3130:	adc	r3, r7, #0
    3134:	add	r0, ip, r0, lsl #8
    3138:	cmp	r1, #1
    313c:	str	r0, [sp, #132]	; 0x84
    3140:	bhi	7898 <coda_grib_reopen+0x5f88>
    3144:	mov	r8, #4
    3148:	mov	r9, #0
    314c:	add	r1, sp, #180	; 0xb4
    3150:	ldr	r0, [fp, #52]	; 0x34
    3154:	strd	r8, [sp]
    3158:	str	r1, [sp, #8]
    315c:	bl	0 <read_bytes>
    3160:	cmp	r0, #0
    3164:	blt	2cf4 <coda_grib_reopen+0x13e4>
    3168:	ldrb	r2, [sp, #183]	; 0xb7
    316c:	ldrb	r3, [sp, #180]	; 0xb4
    3170:	ldrb	r1, [sp, #182]	; 0xb6
    3174:	ldrb	ip, [sp, #181]	; 0xb5
    3178:	eor	r3, r3, r2
    317c:	eor	r2, r2, r3
    3180:	eor	r3, r3, r2
    3184:	strb	r3, [sp, #180]	; 0xb4
    3188:	strb	r2, [sp, #183]	; 0xb7
    318c:	mov	r3, #0
    3190:	mov	r2, #5
    3194:	eor	ip, ip, r1
    3198:	eor	r1, r1, ip
    319c:	ldr	r0, [fp, #52]	; 0x34
    31a0:	add	lr, sp, #248	; 0xf8
    31a4:	strd	r2, [sp]
    31a8:	adds	r2, r6, #11
    31ac:	eor	ip, ip, r1
    31b0:	adc	r3, r7, #0
    31b4:	str	lr, [sp, #8]
    31b8:	strb	ip, [sp, #181]	; 0xb5
    31bc:	strb	r1, [sp, #182]	; 0xb6
    31c0:	bl	0 <read_bytes>
    31c4:	cmp	r0, #0
    31c8:	blt	2cf4 <coda_grib_reopen+0x13e4>
    31cc:	ldrb	r0, [sp, #248]	; 0xf8
    31d0:	ldrb	ip, [sp, #250]	; 0xfa
    31d4:	ldrb	r2, [sp, #249]	; 0xf9
    31d8:	tst	r0, #128	; 0x80
    31dc:	ldr	r1, [pc, #-3388]	; 24a8 <coda_grib_reopen+0xb98>
    31e0:	and	r0, r0, #127	; 0x7f
    31e4:	ldrb	r3, [sp, #251]	; 0xfb
    31e8:	and	lr, ip, #127	; 0x7f
    31ec:	add	r2, r2, r0, lsl #8
    31f0:	moveq	r0, #1
    31f4:	movne	r0, r1
    31f8:	tst	ip, #128	; 0x80
    31fc:	moveq	r1, #1
    3200:	add	r3, r3, lr, lsl #8
    3204:	ldrb	ip, [sp, #252]	; 0xfc
    3208:	smulbb	r2, r2, r0
    320c:	smulbb	r3, r3, r1
    3210:	cmp	ip, #63	; 0x3f
    3214:	sxth	r2, r2
    3218:	sxth	r3, r3
    321c:	str	ip, [sp, #60]	; 0x3c
    3220:	str	r2, [sp, #68]	; 0x44
    3224:	str	r3, [sp, #64]	; 0x40
    3228:	bhi	78ac <coda_grib_reopen+0x5f9c>
    322c:	ldrd	r2, [sp, #24]
    3230:	adds	r2, r2, #16
    3234:	adc	r3, r3, #0
    3238:	strd	r2, [sp, #16]
    323c:	ldr	r3, [sp, #32]
    3240:	cmp	r3, #20
    3244:	ble	2610 <coda_grib_reopen+0xd00>
    3248:	ldrd	r0, [sp, #16]
    324c:	ldr	r3, [sp, #32]
    3250:	sub	r3, r3, #20
    3254:	adds	r0, r0, r3
    3258:	adc	r1, r1, #0
    325c:	strd	r0, [sp, #16]
    3260:	b	2610 <coda_grib_reopen+0xd00>
    3264:	ldrd	r2, [sp, #24]
    3268:	adds	r2, r2, #68	; 0x44
    326c:	adc	r3, r3, #0
    3270:	mov	r1, r3
    3274:	ldr	r3, [sp, #32]
    3278:	mov	r0, r2
    327c:	cmp	r3, #72	; 0x48
    3280:	strd	r0, [sp, #16]
    3284:	ble	3298 <coda_grib_reopen+0x1988>
    3288:	sub	r3, r3, #72	; 0x48
    328c:	adds	r0, r2, r3
    3290:	adc	r1, r1, #0
    3294:	strd	r0, [sp, #16]
    3298:	ldr	r3, [sp, #72]	; 0x48
    329c:	mov	r1, r4
    32a0:	add	r3, r3, #1
    32a4:	ldr	r0, [sp, #160]	; 0xa0
    32a8:	str	r3, [sp, #72]	; 0x48
    32ac:	bl	0 <coda_mem_array_add_element>
    32b0:	b	2610 <coda_grib_reopen+0xd00>
    32b4:	sub	r4, r3, #5
    32b8:	mov	r0, r4
    32bc:	bl	0 <malloc>
    32c0:	subs	r8, r0, #0
    32c4:	beq	7938 <coda_grib_reopen+0x6028>
    32c8:	mov	r3, #0
    32cc:	mov	r7, r3
    32d0:	mov	r6, r4
    32d4:	ldr	r0, [fp, #52]	; 0x34
    32d8:	ldrd	r2, [sp, #16]
    32dc:	strd	r6, [sp]
    32e0:	str	r8, [sp, #8]
    32e4:	bl	0 <read_bytes>
    32e8:	cmp	r0, #0
    32ec:	blt	7944 <coda_grib_reopen+0x6034>
    32f0:	bl	0 <__aeabi_read_tp>
    32f4:	ldr	r2, [sl, r0]
    32f8:	mov	r3, r4
    32fc:	mov	r1, r9
    3300:	ldr	r0, [r2, #348]	; 0x15c
    3304:	mov	r2, fp
    3308:	str	r8, [sp]
    330c:	bl	0 <coda_mem_raw_new>
    3310:	mov	r3, r7
    3314:	ldrd	r6, [sp, #16]
    3318:	adds	r2, r4, r6
    331c:	adc	r3, r3, r7
    3320:	strd	r2, [sp, #16]
    3324:	ldr	r3, [sp, #80]	; 0x50
    3328:	add	r3, r3, #1
    332c:	str	r3, [sp, #80]	; 0x50
    3330:	mov	r1, r0
    3334:	ldr	r0, [sp, #164]	; 0xa4
    3338:	bl	0 <coda_mem_array_add_element>
    333c:	b	2610 <coda_grib_reopen+0xd00>
    3340:	cmp	r4, #5
    3344:	bne	7950 <coda_grib_reopen+0x6040>
    3348:	add	r1, sp, #248	; 0xf8
    334c:	ldr	r0, [fp, #52]	; 0x34
    3350:	ldrd	r2, [sp, #16]
    3354:	str	r1, [sp, #8]
    3358:	strd	r8, [sp]
    335c:	bl	0 <read_bytes>
    3360:	cmp	r0, #0
    3364:	blt	2cf4 <coda_grib_reopen+0x13e4>
    3368:	ldrb	r3, [sp, #248]	; 0xf8
    336c:	cmp	r3, #0
    3370:	beq	33f4 <coda_grib_reopen+0x1ae4>
    3374:	cmp	r3, #254	; 0xfe
    3378:	beq	75e0 <coda_grib_reopen+0x5cd0>
    337c:	cmp	r3, #255	; 0xff
    3380:	bne	797c <coda_grib_reopen+0x606c>
    3384:	ldrd	r2, [sp, #24]
    3388:	adds	r2, r2, #2
    338c:	adc	r3, r3, #0
    3390:	strd	r2, [sp, #16]
    3394:	mov	r3, #0
    3398:	str	r3, [sp, #84]	; 0x54
    339c:	ldr	r3, [sp, #32]
    33a0:	cmp	r3, #6
    33a4:	ble	2610 <coda_grib_reopen+0xd00>
    33a8:	ldrd	r0, [sp, #16]
    33ac:	sub	r3, r3, #6
    33b0:	adds	r0, r0, r3
    33b4:	adc	r1, r1, #0
    33b8:	strd	r0, [sp, #16]
    33bc:	b	2610 <coda_grib_reopen+0xd00>
    33c0:	bl	0 <__aeabi_read_tp>
    33c4:	ldr	r1, [sl, r0]
    33c8:	ldr	r2, [sp, #144]	; 0x90
    33cc:	ldr	r3, [sp, #148]	; 0x94
    33d0:	ldr	r0, [r1, #516]	; 0x204
    33d4:	ldr	r1, [sp, #56]	; 0x38
    33d8:	bl	0 <coda_grib_value_array_new>
    33dc:	mov	r3, #0
    33e0:	ldr	r1, [pc, #-3900]	; 24ac <coda_grib_reopen+0xb9c>
    33e4:	mov	r2, r0
    33e8:	mov	r0, r8
    33ec:	bl	0 <coda_mem_record_add_field>
    33f0:	b	24b0 <coda_grib_reopen+0xba0>
    33f4:	ldrd	r2, [sp, #24]
    33f8:	adds	r2, r2, #2
    33fc:	adc	r3, r3, #0
    3400:	strd	r2, [sp, #16]
    3404:	strd	r2, [sp, #48]	; 0x30
    3408:	ldr	r3, [sp, #32]
    340c:	sub	r3, r3, #6
    3410:	str	r3, [sp, #136]	; 0x88
    3414:	mov	r3, #0
    3418:	str	r3, [sp, #156]	; 0x9c
    341c:	mov	r3, #1
    3420:	str	r3, [sp, #84]	; 0x54
    3424:	b	339c <coda_grib_reopen+0x1a8c>
    3428:	ldr	r2, [sp, #40]	; 0x28
    342c:	ldr	r1, [pc, #28]	; 3450 <coda_grib_reopen+0x1b40>
    3430:	ldr	r0, [pc, #28]	; 3454 <coda_grib_reopen+0x1b44>
    3434:	bl	0 <coda_set_error>
    3438:	mov	r0, fp
    343c:	bl	18b8 <coda_grib_close>
    3440:	mvn	r0, #0
    3444:	add	sp, sp, #316	; 0x13c
    3448:	vpop	{d8-d11}
    344c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3450:	.word	0x00001838
    3454:	.word	0xfffffed4
    3458:	.word	0x000007c8
    345c:	.word	0x00000858
    3460:	.word	0x0000086c
    3464:	.word	0x00000888
    3468:	.word	0x000008a8
    346c:	.word	0x000008bc
    3470:	.word	0x000008e0
    3474:	.word	0x00000904
    3478:	.word	0x00000934
    347c:	.word	0x00000944
    3480:	.word	0x0000094c
    3484:	.word	0x0000095c
    3488:	.word	0x0000096c
    348c:	.word	0x00000978
    3490:	.word	0x00000988
    3494:	.word	0x0000099c
    3498:	.word	0x000009b0
    349c:	.word	0x000009d8
    34a0:	.word	0x000009f0
    34a4:	.word	0x00000a64
    34a8:	.word	0x00000a94
    34ac:	.word	0x00000ad4
    34b0:	.word	0x00000b24
    34b4:	.word	0x00000b40
    34b8:	.word	0x00000b5c
    34bc:	.word	0x00000b80
    34c0:	.word	0x00000ba4
    34c4:	.word	0x00000bc4
    34c8:	.word	0x00000c00
    34cc:	.word	0x00000c2c
    34d0:	.word	0x00000c50
    34d4:	.word	0x00000c80
    34d8:	.word	0x00000c9c
    34dc:	.word	0x00000cc4
    34e0:	.word	0x00000cf0
    34e4:	.word	0x00000d60
    34e8:	mov	r5, r0
    34ec:	mov	r0, #572	; 0x23c
    34f0:	bl	0 <malloc>
    34f4:	cmp	r0, #0
    34f8:	mov	r6, r0
    34fc:	str	r0, [sl, r5]
    3500:	movne	r2, r4
    3504:	subne	r3, r0, #4
    3508:	addne	r1, r0, #568	; 0x238
    350c:	beq	758c <coda_grib_reopen+0x5c7c>
    3510:	str	r2, [r3, #4]!
    3514:	cmp	r3, r1
    3518:	bne	3510 <coda_grib_reopen+0x1c00>
    351c:	mov	r1, #2
    3520:	mov	r0, #7
    3524:	bl	0 <coda_type_number_new>
    3528:	mov	r1, #1
    352c:	str	r0, [r6]
    3530:	bl	0 <__aeabi_read_tp>
    3534:	ldr	r3, [sl, r0]
    3538:	mov	r4, r0
    353c:	ldr	r0, [r3]
    3540:	bl	0 <coda_type_number_set_endianness>
    3544:	ldr	r3, [sl, r4]
    3548:	mov	r1, #4
    354c:	ldr	r0, [r3]
    3550:	bl	0 <coda_type_set_read_type>
    3554:	ldr	r1, [sl, r4]
    3558:	mov	r2, #32
    355c:	mov	r3, #0
    3560:	ldr	r0, [r1]
    3564:	bl	0 <coda_type_set_bit_size>
    3568:	mov	r1, #2
    356c:	mov	r0, #7
    3570:	ldr	r5, [sl, r4]
    3574:	bl	0 <coda_type_number_new>
    3578:	ldr	r3, [sl, r4]
    357c:	mov	r1, #1
    3580:	str	r0, [r5, #4]
    3584:	ldr	r0, [r3, #4]
    3588:	bl	0 <coda_type_number_set_endianness>
    358c:	ldr	r3, [sl, r4]
    3590:	mov	r1, #5
    3594:	ldr	r0, [r3, #4]
    3598:	bl	0 <coda_type_set_read_type>
    359c:	ldr	r1, [sl, r4]
    35a0:	mov	r2, #32
    35a4:	mov	r3, #0
    35a8:	ldr	r0, [r1, #4]
    35ac:	bl	0 <coda_type_set_bit_size>
    35b0:	mov	r1, #2
    35b4:	mov	r0, #7
    35b8:	ldr	r5, [sl, r4]
    35bc:	bl	0 <coda_type_number_new>
    35c0:	ldr	r3, [sl, r4]
    35c4:	mov	r1, #1
    35c8:	str	r0, [r5, #8]
    35cc:	ldr	r0, [r3, #8]
    35d0:	bl	0 <coda_type_number_set_endianness>
    35d4:	ldr	r3, [sl, r4]
    35d8:	mov	r1, #1
    35dc:	ldr	r0, [r3, #8]
    35e0:	bl	0 <coda_type_set_read_type>
    35e4:	ldr	r1, [sl, r4]
    35e8:	mov	r2, #8
    35ec:	mov	r3, #0
    35f0:	ldr	r0, [r1, #8]
    35f4:	bl	0 <coda_type_set_bit_size>
    35f8:	ldr	r3, [sl, r4]
    35fc:	ldr	r1, [pc, #-428]	; 3458 <coda_grib_reopen+0x1b48>
    3600:	ldr	r0, [r3, #8]
    3604:	bl	0 <coda_type_set_description>
    3608:	mov	r1, #2
    360c:	mov	r0, #7
    3610:	ldr	r5, [sl, r4]
    3614:	bl	0 <coda_type_number_new>
    3618:	ldr	r3, [sl, r4]
    361c:	mov	r1, #1
    3620:	str	r0, [r5, #12]
    3624:	ldr	r0, [r3, #12]
    3628:	bl	0 <coda_type_number_set_endianness>
    362c:	ldr	r3, [sl, r4]
    3630:	mov	r1, #1
    3634:	ldr	r0, [r3, #12]
    3638:	bl	0 <coda_type_set_read_type>
    363c:	ldr	r1, [sl, r4]
    3640:	mov	r2, #8
    3644:	mov	r3, #0
    3648:	ldr	r0, [r1, #12]
    364c:	bl	0 <coda_type_set_bit_size>
    3650:	ldr	r3, [sl, r4]
    3654:	ldr	r1, [pc, #-512]	; 345c <coda_grib_reopen+0x1b4c>
    3658:	ldr	r0, [r3, #12]
    365c:	bl	0 <coda_type_set_description>
    3660:	mov	r1, #2
    3664:	mov	r0, #7
    3668:	ldr	r5, [sl, r4]
    366c:	bl	0 <coda_type_number_new>
    3670:	ldr	r3, [sl, r4]
    3674:	mov	r1, #1
    3678:	str	r0, [r5, #16]
    367c:	ldr	r0, [r3, #16]
    3680:	bl	0 <coda_type_number_set_endianness>
    3684:	ldr	r3, [sl, r4]
    3688:	mov	r1, #1
    368c:	ldr	r0, [r3, #16]
    3690:	bl	0 <coda_type_set_read_type>
    3694:	ldr	r1, [sl, r4]
    3698:	mov	r2, #8
    369c:	mov	r3, #0
    36a0:	ldr	r0, [r1, #16]
    36a4:	bl	0 <coda_type_set_bit_size>
    36a8:	ldr	r3, [sl, r4]
    36ac:	ldr	r1, [pc, #-596]	; 3460 <coda_grib_reopen+0x1b50>
    36b0:	ldr	r0, [r3, #16]
    36b4:	bl	0 <coda_type_set_description>
    36b8:	mov	r1, #2
    36bc:	mov	r0, #7
    36c0:	ldr	r5, [sl, r4]
    36c4:	bl	0 <coda_type_number_new>
    36c8:	ldr	r3, [sl, r4]
    36cc:	mov	r1, #1
    36d0:	str	r0, [r5, #20]
    36d4:	ldr	r0, [r3, #20]
    36d8:	bl	0 <coda_type_number_set_endianness>
    36dc:	ldr	r3, [sl, r4]
    36e0:	mov	r1, #1
    36e4:	ldr	r0, [r3, #20]
    36e8:	bl	0 <coda_type_set_read_type>
    36ec:	ldr	r1, [sl, r4]
    36f0:	mov	r2, #8
    36f4:	mov	r3, #0
    36f8:	ldr	r0, [r1, #20]
    36fc:	bl	0 <coda_type_set_bit_size>
    3700:	ldr	r3, [sl, r4]
    3704:	ldr	r1, [pc, #-680]	; 3464 <coda_grib_reopen+0x1b54>
    3708:	ldr	r0, [r3, #20]
    370c:	bl	0 <coda_type_set_description>
    3710:	mov	r1, #2
    3714:	mov	r0, #7
    3718:	ldr	r5, [sl, r4]
    371c:	bl	0 <coda_type_number_new>
    3720:	ldr	r3, [sl, r4]
    3724:	mov	r1, #1
    3728:	str	r0, [r5, #24]
    372c:	ldr	r0, [r3, #24]
    3730:	bl	0 <coda_type_number_set_endianness>
    3734:	ldr	r3, [sl, r4]
    3738:	mov	r1, #1
    373c:	ldr	r0, [r3, #24]
    3740:	bl	0 <coda_type_set_read_type>
    3744:	ldr	r1, [sl, r4]
    3748:	mov	r2, #8
    374c:	mov	r3, #0
    3750:	ldr	r0, [r1, #24]
    3754:	bl	0 <coda_type_set_bit_size>
    3758:	ldr	r3, [sl, r4]
    375c:	ldr	r1, [pc, #-764]	; 3468 <coda_grib_reopen+0x1b58>
    3760:	ldr	r0, [r3, #24]
    3764:	bl	0 <coda_type_set_description>
    3768:	mov	r1, #2
    376c:	mov	r0, #7
    3770:	ldr	r5, [sl, r4]
    3774:	bl	0 <coda_type_number_new>
    3778:	ldr	r3, [sl, r4]
    377c:	mov	r1, #1
    3780:	str	r0, [r5, #28]
    3784:	ldr	r0, [r3, #28]
    3788:	bl	0 <coda_type_number_set_endianness>
    378c:	ldr	r3, [sl, r4]
    3790:	mov	r1, #1
    3794:	ldr	r0, [r3, #28]
    3798:	bl	0 <coda_type_set_read_type>
    379c:	ldr	r1, [sl, r4]
    37a0:	mov	r2, #8
    37a4:	mov	r3, #0
    37a8:	ldr	r0, [r1, #28]
    37ac:	bl	0 <coda_type_set_bit_size>
    37b0:	ldr	r3, [sl, r4]
    37b4:	ldr	r1, [pc, #-848]	; 346c <coda_grib_reopen+0x1b5c>
    37b8:	ldr	r0, [r3, #28]
    37bc:	bl	0 <coda_type_set_description>
    37c0:	mov	r1, #2
    37c4:	mov	r0, #7
    37c8:	ldr	r5, [sl, r4]
    37cc:	bl	0 <coda_type_number_new>
    37d0:	ldr	r3, [sl, r4]
    37d4:	mov	r1, #1
    37d8:	str	r0, [r5, #32]
    37dc:	ldr	r0, [r3, #32]
    37e0:	bl	0 <coda_type_number_set_endianness>
    37e4:	ldr	r3, [sl, r4]
    37e8:	mov	r1, #1
    37ec:	ldr	r0, [r3, #32]
    37f0:	bl	0 <coda_type_set_read_type>
    37f4:	ldr	r1, [sl, r4]
    37f8:	mov	r2, #8
    37fc:	mov	r3, #0
    3800:	ldr	r0, [r1, #32]
    3804:	bl	0 <coda_type_set_bit_size>
    3808:	ldr	r3, [sl, r4]
    380c:	ldr	r1, [pc, #-932]	; 3470 <coda_grib_reopen+0x1b60>
    3810:	ldr	r0, [r3, #32]
    3814:	bl	0 <coda_type_set_description>
    3818:	mov	r1, #2
    381c:	mov	r0, #7
    3820:	ldr	r5, [sl, r4]
    3824:	bl	0 <coda_type_number_new>
    3828:	ldr	r3, [sl, r4]
    382c:	mov	r1, #1
    3830:	str	r0, [r5, #36]	; 0x24
    3834:	ldr	r0, [r3, #36]	; 0x24
    3838:	bl	0 <coda_type_number_set_endianness>
    383c:	ldr	r3, [sl, r4]
    3840:	mov	r1, #3
    3844:	ldr	r0, [r3, #36]	; 0x24
    3848:	bl	0 <coda_type_set_read_type>
    384c:	ldr	r1, [sl, r4]
    3850:	mov	r2, #16
    3854:	mov	r3, #0
    3858:	ldr	r0, [r1, #36]	; 0x24
    385c:	bl	0 <coda_type_set_bit_size>
    3860:	ldr	r3, [sl, r4]
    3864:	ldr	r1, [pc, #-1016]	; 3474 <coda_grib_reopen+0x1b64>
    3868:	ldr	r0, [r3, #36]	; 0x24
    386c:	bl	0 <coda_type_set_description>
    3870:	mov	r1, #2
    3874:	mov	r0, #7
    3878:	ldr	r5, [sl, r4]
    387c:	bl	0 <coda_type_number_new>
    3880:	ldr	r3, [sl, r4]
    3884:	mov	r1, #1
    3888:	str	r0, [r5, #40]	; 0x28
    388c:	ldr	r0, [r3, #40]	; 0x28
    3890:	bl	0 <coda_type_number_set_endianness>
    3894:	ldr	r3, [sl, r4]
    3898:	mov	r1, #1
    389c:	ldr	r0, [r3, #40]	; 0x28
    38a0:	bl	0 <coda_type_set_read_type>
    38a4:	ldr	r1, [sl, r4]
    38a8:	mov	r2, #8
    38ac:	mov	r3, #0
    38b0:	ldr	r0, [r1, #40]	; 0x28
    38b4:	bl	0 <coda_type_set_bit_size>
    38b8:	ldr	r3, [sl, r4]
    38bc:	ldr	r1, [pc, #-1100]	; 3478 <coda_grib_reopen+0x1b68>
    38c0:	ldr	r0, [r3, #40]	; 0x28
    38c4:	bl	0 <coda_type_set_description>
    38c8:	mov	r1, #2
    38cc:	mov	r0, #7
    38d0:	ldr	r5, [sl, r4]
    38d4:	bl	0 <coda_type_number_new>
    38d8:	ldr	r3, [sl, r4]
    38dc:	mov	r1, #1
    38e0:	str	r0, [r5, #44]	; 0x2c
    38e4:	ldr	r0, [r3, #44]	; 0x2c
    38e8:	bl	0 <coda_type_number_set_endianness>
    38ec:	ldr	r3, [sl, r4]
    38f0:	mov	r1, #3
    38f4:	ldr	r0, [r3, #44]	; 0x2c
    38f8:	bl	0 <coda_type_set_read_type>
    38fc:	ldr	r1, [sl, r4]
    3900:	mov	r2, #16
    3904:	mov	r3, #0
    3908:	ldr	r0, [r1, #44]	; 0x2c
    390c:	bl	0 <coda_type_set_bit_size>
    3910:	ldr	r3, [sl, r4]
    3914:	ldr	r1, [pc, #-1184]	; 347c <coda_grib_reopen+0x1b6c>
    3918:	ldr	r0, [r3, #44]	; 0x2c
    391c:	bl	0 <coda_type_set_description>
    3920:	mov	r1, #2
    3924:	mov	r0, #7
    3928:	ldr	r5, [sl, r4]
    392c:	bl	0 <coda_type_number_new>
    3930:	ldr	r3, [sl, r4]
    3934:	mov	r1, #1
    3938:	str	r0, [r5, #48]	; 0x30
    393c:	ldr	r0, [r3, #48]	; 0x30
    3940:	bl	0 <coda_type_number_set_endianness>
    3944:	ldr	r3, [sl, r4]
    3948:	mov	r1, #1
    394c:	ldr	r0, [r3, #48]	; 0x30
    3950:	bl	0 <coda_type_set_read_type>
    3954:	ldr	r1, [sl, r4]
    3958:	mov	r2, #8
    395c:	mov	r3, #0
    3960:	ldr	r0, [r1, #48]	; 0x30
    3964:	bl	0 <coda_type_set_bit_size>
    3968:	ldr	r3, [sl, r4]
    396c:	ldr	r1, [pc, #-1268]	; 3480 <coda_grib_reopen+0x1b70>
    3970:	ldr	r0, [r3, #48]	; 0x30
    3974:	bl	0 <coda_type_set_description>
    3978:	mov	r1, #2
    397c:	mov	r0, #7
    3980:	ldr	r5, [sl, r4]
    3984:	bl	0 <coda_type_number_new>
    3988:	ldr	r3, [sl, r4]
    398c:	mov	r1, #1
    3990:	str	r0, [r5, #52]	; 0x34
    3994:	ldr	r0, [r3, #52]	; 0x34
    3998:	bl	0 <coda_type_number_set_endianness>
    399c:	ldr	r3, [sl, r4]
    39a0:	mov	r1, #1
    39a4:	ldr	r0, [r3, #52]	; 0x34
    39a8:	bl	0 <coda_type_set_read_type>
    39ac:	ldr	r1, [sl, r4]
    39b0:	mov	r2, #8
    39b4:	mov	r3, #0
    39b8:	ldr	r0, [r1, #52]	; 0x34
    39bc:	bl	0 <coda_type_set_bit_size>
    39c0:	ldr	r3, [sl, r4]
    39c4:	ldr	r1, [pc, #-1352]	; 3484 <coda_grib_reopen+0x1b74>
    39c8:	ldr	r0, [r3, #52]	; 0x34
    39cc:	bl	0 <coda_type_set_description>
    39d0:	mov	r1, #2
    39d4:	mov	r0, #7
    39d8:	ldr	r5, [sl, r4]
    39dc:	bl	0 <coda_type_number_new>
    39e0:	ldr	r3, [sl, r4]
    39e4:	mov	r1, #1
    39e8:	str	r0, [r5, #56]	; 0x38
    39ec:	ldr	r0, [r3, #56]	; 0x38
    39f0:	bl	0 <coda_type_number_set_endianness>
    39f4:	ldr	r3, [sl, r4]
    39f8:	mov	r1, #1
    39fc:	ldr	r0, [r3, #56]	; 0x38
    3a00:	bl	0 <coda_type_set_read_type>
    3a04:	ldr	r1, [sl, r4]
    3a08:	mov	r2, #8
    3a0c:	mov	r3, #0
    3a10:	ldr	r0, [r1, #56]	; 0x38
    3a14:	bl	0 <coda_type_set_bit_size>
    3a18:	ldr	r3, [sl, r4]
    3a1c:	ldr	r1, [pc, #-1436]	; 3488 <coda_grib_reopen+0x1b78>
    3a20:	ldr	r0, [r3, #56]	; 0x38
    3a24:	bl	0 <coda_type_set_description>
    3a28:	mov	r1, #2
    3a2c:	mov	r0, #7
    3a30:	ldr	r5, [sl, r4]
    3a34:	bl	0 <coda_type_number_new>
    3a38:	ldr	r3, [sl, r4]
    3a3c:	mov	r1, #1
    3a40:	str	r0, [r5, #60]	; 0x3c
    3a44:	ldr	r0, [r3, #60]	; 0x3c
    3a48:	bl	0 <coda_type_number_set_endianness>
    3a4c:	ldr	r3, [sl, r4]
    3a50:	mov	r1, #1
    3a54:	ldr	r0, [r3, #60]	; 0x3c
    3a58:	bl	0 <coda_type_set_read_type>
    3a5c:	ldr	r1, [sl, r4]
    3a60:	mov	r2, #8
    3a64:	mov	r3, #0
    3a68:	ldr	r0, [r1, #60]	; 0x3c
    3a6c:	bl	0 <coda_type_set_bit_size>
    3a70:	ldr	r3, [sl, r4]
    3a74:	ldr	r1, [pc, #-1520]	; 348c <coda_grib_reopen+0x1b7c>
    3a78:	ldr	r0, [r3, #60]	; 0x3c
    3a7c:	bl	0 <coda_type_set_description>
    3a80:	mov	r1, #2
    3a84:	mov	r0, #7
    3a88:	ldr	r5, [sl, r4]
    3a8c:	bl	0 <coda_type_number_new>
    3a90:	ldr	r3, [sl, r4]
    3a94:	mov	r1, #1
    3a98:	str	r0, [r5, #64]	; 0x40
    3a9c:	ldr	r0, [r3, #64]	; 0x40
    3aa0:	bl	0 <coda_type_number_set_endianness>
    3aa4:	ldr	r3, [sl, r4]
    3aa8:	mov	r1, #1
    3aac:	ldr	r0, [r3, #64]	; 0x40
    3ab0:	bl	0 <coda_type_set_read_type>
    3ab4:	ldr	r1, [sl, r4]
    3ab8:	mov	r2, #8
    3abc:	mov	r3, #0
    3ac0:	ldr	r0, [r1, #64]	; 0x40
    3ac4:	bl	0 <coda_type_set_bit_size>
    3ac8:	ldr	r3, [sl, r4]
    3acc:	ldr	r1, [pc, #-1604]	; 3490 <coda_grib_reopen+0x1b80>
    3ad0:	ldr	r0, [r3, #64]	; 0x40
    3ad4:	bl	0 <coda_type_set_description>
    3ad8:	mov	r1, #2
    3adc:	mov	r0, #7
    3ae0:	ldr	r5, [sl, r4]
    3ae4:	bl	0 <coda_type_number_new>
    3ae8:	ldr	r3, [sl, r4]
    3aec:	mov	r1, #1
    3af0:	str	r0, [r5, #68]	; 0x44
    3af4:	ldr	r0, [r3, #68]	; 0x44
    3af8:	bl	0 <coda_type_number_set_endianness>
    3afc:	ldr	r3, [sl, r4]
    3b00:	mov	r1, #1
    3b04:	ldr	r0, [r3, #68]	; 0x44
    3b08:	bl	0 <coda_type_set_read_type>
    3b0c:	ldr	r1, [sl, r4]
    3b10:	mov	r2, #8
    3b14:	mov	r3, #0
    3b18:	ldr	r0, [r1, #68]	; 0x44
    3b1c:	bl	0 <coda_type_set_bit_size>
    3b20:	ldr	r3, [sl, r4]
    3b24:	ldr	r1, [pc, #-1688]	; 3494 <coda_grib_reopen+0x1b84>
    3b28:	ldr	r0, [r3, #68]	; 0x44
    3b2c:	bl	0 <coda_type_set_description>
    3b30:	mov	r1, #2
    3b34:	mov	r0, #7
    3b38:	ldr	r5, [sl, r4]
    3b3c:	bl	0 <coda_type_number_new>
    3b40:	ldr	r3, [sl, r4]
    3b44:	mov	r1, #1
    3b48:	str	r0, [r5, #72]	; 0x48
    3b4c:	ldr	r0, [r3, #72]	; 0x48
    3b50:	bl	0 <coda_type_number_set_endianness>
    3b54:	ldr	r3, [sl, r4]
    3b58:	mov	r1, #1
    3b5c:	ldr	r0, [r3, #72]	; 0x48
    3b60:	bl	0 <coda_type_set_read_type>
    3b64:	ldr	r1, [sl, r4]
    3b68:	mov	r2, #8
    3b6c:	mov	r3, #0
    3b70:	ldr	r0, [r1, #72]	; 0x48
    3b74:	bl	0 <coda_type_set_bit_size>
    3b78:	ldr	r3, [sl, r4]
    3b7c:	ldr	r1, [pc, #-1772]	; 3498 <coda_grib_reopen+0x1b88>
    3b80:	ldr	r0, [r3, #72]	; 0x48
    3b84:	bl	0 <coda_type_set_description>
    3b88:	mov	r1, #2
    3b8c:	mov	r0, #7
    3b90:	ldr	r5, [sl, r4]
    3b94:	bl	0 <coda_type_number_new>
    3b98:	ldr	r3, [sl, r4]
    3b9c:	mov	r1, #1
    3ba0:	str	r0, [r5, #76]	; 0x4c
    3ba4:	ldr	r0, [r3, #76]	; 0x4c
    3ba8:	bl	0 <coda_type_number_set_endianness>
    3bac:	ldr	r3, [sl, r4]
    3bb0:	mov	r1, #1
    3bb4:	ldr	r0, [r3, #76]	; 0x4c
    3bb8:	bl	0 <coda_type_set_read_type>
    3bbc:	ldr	r1, [sl, r4]
    3bc0:	mov	r2, #8
    3bc4:	mov	r3, #0
    3bc8:	ldr	r0, [r1, #76]	; 0x4c
    3bcc:	bl	0 <coda_type_set_bit_size>
    3bd0:	ldr	r3, [sl, r4]
    3bd4:	ldr	r1, [pc, #-1860]	; 3498 <coda_grib_reopen+0x1b88>
    3bd8:	ldr	r0, [r3, #76]	; 0x4c
    3bdc:	bl	0 <coda_type_set_description>
    3be0:	mov	r1, #2
    3be4:	mov	r0, #7
    3be8:	ldr	r5, [sl, r4]
    3bec:	bl	0 <coda_type_number_new>
    3bf0:	ldr	r3, [sl, r4]
    3bf4:	mov	r1, #1
    3bf8:	str	r0, [r5, #80]	; 0x50
    3bfc:	ldr	r0, [r3, #80]	; 0x50
    3c00:	bl	0 <coda_type_number_set_endianness>
    3c04:	ldr	r3, [sl, r4]
    3c08:	mov	r1, #1
    3c0c:	ldr	r0, [r3, #80]	; 0x50
    3c10:	bl	0 <coda_type_set_read_type>
    3c14:	ldr	r1, [sl, r4]
    3c18:	mov	r2, #8
    3c1c:	mov	r3, #0
    3c20:	ldr	r0, [r1, #80]	; 0x50
    3c24:	bl	0 <coda_type_set_bit_size>
    3c28:	ldr	r3, [sl, r4]
    3c2c:	ldr	r1, [pc, #-1944]	; 349c <coda_grib_reopen+0x1b8c>
    3c30:	ldr	r0, [r3, #80]	; 0x50
    3c34:	bl	0 <coda_type_set_description>
    3c38:	mov	r1, #2
    3c3c:	mov	r0, #7
    3c40:	ldr	r5, [sl, r4]
    3c44:	bl	0 <coda_type_number_new>
    3c48:	ldr	r3, [sl, r4]
    3c4c:	mov	r1, #1
    3c50:	str	r0, [r5, #84]	; 0x54
    3c54:	ldr	r0, [r3, #84]	; 0x54
    3c58:	bl	0 <coda_type_number_set_endianness>
    3c5c:	ldr	r3, [sl, r4]
    3c60:	mov	r1, #3
    3c64:	ldr	r0, [r3, #84]	; 0x54
    3c68:	bl	0 <coda_type_set_read_type>
    3c6c:	ldr	r1, [sl, r4]
    3c70:	mov	r2, #16
    3c74:	mov	r3, #0
    3c78:	ldr	r0, [r1, #84]	; 0x54
    3c7c:	bl	0 <coda_type_set_bit_size>
    3c80:	ldr	r3, [sl, r4]
    3c84:	ldr	r1, [pc, #-2028]	; 34a0 <coda_grib_reopen+0x1b90>
    3c88:	ldr	r0, [r3, #84]	; 0x54
    3c8c:	bl	0 <coda_type_set_description>
    3c90:	mov	r1, #2
    3c94:	mov	r0, #7
    3c98:	ldr	r5, [sl, r4]
    3c9c:	bl	0 <coda_type_number_new>
    3ca0:	ldr	r3, [sl, r4]
    3ca4:	mov	r1, #1
    3ca8:	str	r0, [r5, #88]	; 0x58
    3cac:	ldr	r0, [r3, #88]	; 0x58
    3cb0:	bl	0 <coda_type_number_set_endianness>
    3cb4:	ldr	r3, [sl, r4]
    3cb8:	mov	r1, #1
    3cbc:	ldr	r0, [r3, #88]	; 0x58
    3cc0:	bl	0 <coda_type_set_read_type>
    3cc4:	ldr	r1, [sl, r4]
    3cc8:	mov	r2, #8
    3ccc:	mov	r3, #0
    3cd0:	ldr	r0, [r1, #88]	; 0x58
    3cd4:	bl	0 <coda_type_set_bit_size>
    3cd8:	ldr	r3, [sl, r4]
    3cdc:	ldr	r1, [pc, #-2112]	; 34a4 <coda_grib_reopen+0x1b94>
    3ce0:	ldr	r0, [r3, #88]	; 0x58
    3ce4:	bl	0 <coda_type_set_description>
    3ce8:	mov	r1, #2
    3cec:	mov	r0, #7
    3cf0:	ldr	r5, [sl, r4]
    3cf4:	bl	0 <coda_type_number_new>
    3cf8:	ldr	r3, [sl, r4]
    3cfc:	mov	r1, #1
    3d00:	str	r0, [r5, #92]	; 0x5c
    3d04:	ldr	r0, [r3, #92]	; 0x5c
    3d08:	bl	0 <coda_type_number_set_endianness>
    3d0c:	ldr	r3, [sl, r4]
    3d10:	mov	r1, #1
    3d14:	ldr	r0, [r3, #92]	; 0x5c
    3d18:	bl	0 <coda_type_set_read_type>
    3d1c:	ldr	r1, [sl, r4]
    3d20:	mov	r2, #8
    3d24:	mov	r3, #0
    3d28:	ldr	r0, [r1, #92]	; 0x5c
    3d2c:	bl	0 <coda_type_set_bit_size>
    3d30:	ldr	r3, [sl, r4]
    3d34:	ldr	r1, [pc, #-2196]	; 34a8 <coda_grib_reopen+0x1b98>
    3d38:	ldr	r0, [r3, #92]	; 0x5c
    3d3c:	bl	0 <coda_type_set_description>
    3d40:	mov	r1, #2
    3d44:	mov	r0, #7
    3d48:	ldr	r5, [sl, r4]
    3d4c:	bl	0 <coda_type_number_new>
    3d50:	ldr	r3, [sl, r4]
    3d54:	mov	r1, #1
    3d58:	str	r0, [r5, #96]	; 0x60
    3d5c:	ldr	r0, [r3, #96]	; 0x60
    3d60:	bl	0 <coda_type_number_set_endianness>
    3d64:	ldr	r3, [sl, r4]
    3d68:	mov	r1, #1
    3d6c:	ldr	r0, [r3, #96]	; 0x60
    3d70:	bl	0 <coda_type_set_read_type>
    3d74:	ldr	r1, [sl, r4]
    3d78:	mov	r2, #8
    3d7c:	mov	r3, #0
    3d80:	ldr	r0, [r1, #96]	; 0x60
    3d84:	bl	0 <coda_type_set_bit_size>
    3d88:	ldr	r3, [sl, r4]
    3d8c:	ldr	r1, [pc, #-2280]	; 34ac <coda_grib_reopen+0x1b9c>
    3d90:	ldr	r0, [r3, #96]	; 0x60
    3d94:	bl	0 <coda_type_set_description>
    3d98:	mov	r1, #2
    3d9c:	mov	r0, #7
    3da0:	ldr	r5, [sl, r4]
    3da4:	bl	0 <coda_type_number_new>
    3da8:	ldr	r3, [sl, r4]
    3dac:	mov	r1, #1
    3db0:	str	r0, [r5, #100]	; 0x64
    3db4:	ldr	r0, [r3, #100]	; 0x64
    3db8:	bl	0 <coda_type_number_set_endianness>
    3dbc:	ldr	r3, [sl, r4]
    3dc0:	mov	r1, #2
    3dc4:	ldr	r0, [r3, #100]	; 0x64
    3dc8:	bl	0 <coda_type_set_read_type>
    3dcc:	ldr	r1, [sl, r4]
    3dd0:	mov	r2, #16
    3dd4:	mov	r3, #0
    3dd8:	ldr	r0, [r1, #100]	; 0x64
    3ddc:	bl	0 <coda_type_set_bit_size>
    3de0:	ldr	r3, [sl, r4]
    3de4:	ldr	r1, [pc, #-2364]	; 34b0 <coda_grib_reopen+0x1ba0>
    3de8:	ldr	r0, [r3, #100]	; 0x64
    3dec:	bl	0 <coda_type_set_description>
    3df0:	mov	r1, #2
    3df4:	mov	r0, #7
    3df8:	ldr	r5, [sl, r4]
    3dfc:	bl	0 <coda_type_number_new>
    3e00:	ldr	r3, [sl, r4]
    3e04:	mov	r1, #1
    3e08:	str	r0, [r5, #104]	; 0x68
    3e0c:	ldr	r0, [r3, #104]	; 0x68
    3e10:	bl	0 <coda_type_number_set_endianness>
    3e14:	ldr	r3, [sl, r4]
    3e18:	mov	r1, #1
    3e1c:	ldr	r0, [r3, #104]	; 0x68
    3e20:	bl	0 <coda_type_set_read_type>
    3e24:	ldr	r1, [sl, r4]
    3e28:	mov	r2, #8
    3e2c:	mov	r3, #0
    3e30:	ldr	r0, [r1, #104]	; 0x68
    3e34:	bl	0 <coda_type_set_bit_size>
    3e38:	ldr	r3, [sl, r4]
    3e3c:	ldr	r1, [pc, #-2448]	; 34b4 <coda_grib_reopen+0x1ba4>
    3e40:	ldr	r0, [r3, #104]	; 0x68
    3e44:	bl	0 <coda_type_set_description>
    3e48:	mov	r1, #2
    3e4c:	mov	r0, #7
    3e50:	ldr	r5, [sl, r4]
    3e54:	bl	0 <coda_type_number_new>
    3e58:	ldr	r3, [sl, r4]
    3e5c:	mov	r1, #1
    3e60:	str	r0, [r5, #108]	; 0x6c
    3e64:	ldr	r0, [r3, #108]	; 0x6c
    3e68:	bl	0 <coda_type_number_set_endianness>
    3e6c:	ldr	r3, [sl, r4]
    3e70:	mov	r1, #1
    3e74:	ldr	r0, [r3, #108]	; 0x6c
    3e78:	bl	0 <coda_type_set_read_type>
    3e7c:	ldr	r1, [sl, r4]
    3e80:	mov	r2, #8
    3e84:	mov	r3, #0
    3e88:	ldr	r0, [r1, #108]	; 0x6c
    3e8c:	bl	0 <coda_type_set_bit_size>
    3e90:	ldr	r3, [sl, r4]
    3e94:	ldr	r1, [pc, #-2532]	; 34b8 <coda_grib_reopen+0x1ba8>
    3e98:	ldr	r0, [r3, #108]	; 0x6c
    3e9c:	bl	0 <coda_type_set_description>
    3ea0:	mov	r1, #2
    3ea4:	mov	r0, #7
    3ea8:	ldr	r5, [sl, r4]
    3eac:	bl	0 <coda_type_number_new>
    3eb0:	ldr	r3, [sl, r4]
    3eb4:	mov	r1, #1
    3eb8:	str	r0, [r5, #112]	; 0x70
    3ebc:	ldr	r0, [r3, #112]	; 0x70
    3ec0:	bl	0 <coda_type_number_set_endianness>
    3ec4:	ldr	r3, [sl, r4]
    3ec8:	mov	r1, #1
    3ecc:	ldr	r0, [r3, #112]	; 0x70
    3ed0:	bl	0 <coda_type_set_read_type>
    3ed4:	ldr	r1, [sl, r4]
    3ed8:	mov	r2, #8
    3edc:	mov	r3, #0
    3ee0:	ldr	r0, [r1, #112]	; 0x70
    3ee4:	bl	0 <coda_type_set_bit_size>
    3ee8:	ldr	r3, [sl, r4]
    3eec:	ldr	r1, [pc, #-2616]	; 34bc <coda_grib_reopen+0x1bac>
    3ef0:	ldr	r0, [r3, #112]	; 0x70
    3ef4:	bl	0 <coda_type_set_description>
    3ef8:	mov	r1, #2
    3efc:	mov	r0, #7
    3f00:	ldr	r5, [sl, r4]
    3f04:	bl	0 <coda_type_number_new>
    3f08:	ldr	r3, [sl, r4]
    3f0c:	mov	r1, #1
    3f10:	str	r0, [r5, #116]	; 0x74
    3f14:	ldr	r0, [r3, #116]	; 0x74
    3f18:	bl	0 <coda_type_number_set_endianness>
    3f1c:	ldr	r3, [sl, r4]
    3f20:	mov	r1, #1
    3f24:	ldr	r0, [r3, #116]	; 0x74
    3f28:	bl	0 <coda_type_set_read_type>
    3f2c:	ldr	r1, [sl, r4]
    3f30:	mov	r2, #8
    3f34:	mov	r3, #0
    3f38:	ldr	r0, [r1, #116]	; 0x74
    3f3c:	bl	0 <coda_type_set_bit_size>
    3f40:	ldr	r3, [sl, r4]
    3f44:	ldr	r1, [pc, #-2700]	; 34c0 <coda_grib_reopen+0x1bb0>
    3f48:	ldr	r0, [r3, #116]	; 0x74
    3f4c:	bl	0 <coda_type_set_description>
    3f50:	mov	r1, #2
    3f54:	mov	r0, #7
    3f58:	ldr	r5, [sl, r4]
    3f5c:	bl	0 <coda_type_number_new>
    3f60:	ldr	r3, [sl, r4]
    3f64:	mov	r1, #1
    3f68:	str	r0, [r5, #120]	; 0x78
    3f6c:	ldr	r0, [r3, #120]	; 0x78
    3f70:	bl	0 <coda_type_number_set_endianness>
    3f74:	ldr	r3, [sl, r4]
    3f78:	mov	r1, #1
    3f7c:	ldr	r0, [r3, #120]	; 0x78
    3f80:	bl	0 <coda_type_set_read_type>
    3f84:	ldr	r1, [sl, r4]
    3f88:	mov	r2, #8
    3f8c:	mov	r3, #0
    3f90:	ldr	r0, [r1, #120]	; 0x78
    3f94:	bl	0 <coda_type_set_bit_size>
    3f98:	ldr	r3, [sl, r4]
    3f9c:	ldr	r1, [pc, #-2784]	; 34c4 <coda_grib_reopen+0x1bb4>
    3fa0:	ldr	r0, [r3, #120]	; 0x78
    3fa4:	bl	0 <coda_type_set_description>
    3fa8:	mov	r1, #2
    3fac:	mov	r0, #7
    3fb0:	ldr	r5, [sl, r4]
    3fb4:	bl	0 <coda_type_number_new>
    3fb8:	ldr	r3, [sl, r4]
    3fbc:	mov	r1, #1
    3fc0:	str	r0, [r5, #124]	; 0x7c
    3fc4:	ldr	r0, [r3, #124]	; 0x7c
    3fc8:	bl	0 <coda_type_number_set_endianness>
    3fcc:	ldr	r3, [sl, r4]
    3fd0:	mov	r1, #1
    3fd4:	ldr	r0, [r3, #124]	; 0x7c
    3fd8:	bl	0 <coda_type_set_read_type>
    3fdc:	ldr	r1, [sl, r4]
    3fe0:	mov	r2, #8
    3fe4:	mov	r3, #0
    3fe8:	ldr	r0, [r1, #124]	; 0x7c
    3fec:	bl	0 <coda_type_set_bit_size>
    3ff0:	ldr	r3, [sl, r4]
    3ff4:	ldr	r1, [pc, #-2868]	; 34c8 <coda_grib_reopen+0x1bb8>
    3ff8:	ldr	r0, [r3, #124]	; 0x7c
    3ffc:	bl	0 <coda_type_set_description>
    4000:	mov	r0, #7
    4004:	ldr	r5, [sl, r4]
    4008:	bl	0 <coda_type_raw_new>
    400c:	ldr	r3, [sl, r4]
    4010:	ldr	r1, [pc, #-2892]	; 34cc <coda_grib_reopen+0x1bbc>
    4014:	str	r0, [r5, #128]	; 0x80
    4018:	ldr	r0, [r3, #128]	; 0x80
    401c:	bl	0 <coda_type_set_description>
    4020:	mov	r1, #2
    4024:	mov	r0, #7
    4028:	ldr	r5, [sl, r4]
    402c:	bl	0 <coda_type_number_new>
    4030:	ldr	r3, [sl, r4]
    4034:	mov	r1, #1
    4038:	str	r0, [r5, #132]	; 0x84
    403c:	ldr	r0, [r3, #132]	; 0x84
    4040:	bl	0 <coda_type_number_set_endianness>
    4044:	ldr	r3, [sl, r4]
    4048:	mov	r1, #1
    404c:	ldr	r0, [r3, #132]	; 0x84
    4050:	bl	0 <coda_type_set_read_type>
    4054:	ldr	r1, [sl, r4]
    4058:	mov	r2, #8
    405c:	mov	r3, #0
    4060:	ldr	r0, [r1, #132]	; 0x84
    4064:	bl	0 <coda_type_set_bit_size>
    4068:	ldr	r3, [sl, r4]
    406c:	ldr	r1, [pc, #-2980]	; 34d0 <coda_grib_reopen+0x1bc0>
    4070:	ldr	r0, [r3, #132]	; 0x84
    4074:	bl	0 <coda_type_set_description>
    4078:	mov	r1, #2
    407c:	mov	r0, #7
    4080:	ldr	r5, [sl, r4]
    4084:	bl	0 <coda_type_number_new>
    4088:	ldr	r3, [sl, r4]
    408c:	mov	r1, #1
    4090:	str	r0, [r5, #136]	; 0x88
    4094:	ldr	r0, [r3, #136]	; 0x88
    4098:	bl	0 <coda_type_number_set_endianness>
    409c:	ldr	r3, [sl, r4]
    40a0:	mov	r1, #1
    40a4:	ldr	r0, [r3, #136]	; 0x88
    40a8:	bl	0 <coda_type_set_read_type>
    40ac:	ldr	r1, [sl, r4]
    40b0:	mov	r2, #8
    40b4:	mov	r3, #0
    40b8:	ldr	r0, [r1, #136]	; 0x88
    40bc:	bl	0 <coda_type_set_bit_size>
    40c0:	ldr	r3, [sl, r4]
    40c4:	ldr	r1, [pc, #-3064]	; 34d4 <coda_grib_reopen+0x1bc4>
    40c8:	ldr	r0, [r3, #136]	; 0x88
    40cc:	bl	0 <coda_type_set_description>
    40d0:	mov	r1, #2
    40d4:	mov	r0, #7
    40d8:	ldr	r5, [sl, r4]
    40dc:	bl	0 <coda_type_number_new>
    40e0:	ldr	r3, [sl, r4]
    40e4:	mov	r1, #1
    40e8:	str	r0, [r5, #140]	; 0x8c
    40ec:	ldr	r0, [r3, #140]	; 0x8c
    40f0:	bl	0 <coda_type_number_set_endianness>
    40f4:	ldr	r3, [sl, r4]
    40f8:	mov	r1, #1
    40fc:	ldr	r0, [r3, #140]	; 0x8c
    4100:	bl	0 <coda_type_set_read_type>
    4104:	ldr	r1, [sl, r4]
    4108:	mov	r2, #8
    410c:	mov	r3, #0
    4110:	ldr	r0, [r1, #140]	; 0x8c
    4114:	bl	0 <coda_type_set_bit_size>
    4118:	mov	r1, #2
    411c:	mov	r0, #7
    4120:	ldr	r5, [sl, r4]
    4124:	bl	0 <coda_type_number_new>
    4128:	ldr	r3, [sl, r4]
    412c:	mov	r1, #1
    4130:	str	r0, [r5, #144]	; 0x90
    4134:	ldr	r0, [r3, #144]	; 0x90
    4138:	bl	0 <coda_type_number_set_endianness>
    413c:	ldr	r3, [sl, r4]
    4140:	mov	r1, #1
    4144:	ldr	r0, [r3, #144]	; 0x90
    4148:	bl	0 <coda_type_set_read_type>
    414c:	ldr	r1, [sl, r4]
    4150:	mov	r2, #8
    4154:	mov	r3, #0
    4158:	ldr	r0, [r1, #144]	; 0x90
    415c:	bl	0 <coda_type_set_bit_size>
    4160:	mov	r1, #2
    4164:	mov	r0, #7
    4168:	ldr	r5, [sl, r4]
    416c:	bl	0 <coda_type_number_new>
    4170:	ldr	r3, [sl, r4]
    4174:	mov	r1, #1
    4178:	str	r0, [r5, #148]	; 0x94
    417c:	ldr	r0, [r3, #148]	; 0x94
    4180:	bl	0 <coda_type_number_set_endianness>
    4184:	ldr	r3, [sl, r4]
    4188:	mov	r1, #5
    418c:	ldr	r0, [r3, #148]	; 0x94
    4190:	bl	0 <coda_type_set_read_type>
    4194:	ldr	r1, [sl, r4]
    4198:	mov	r2, #32
    419c:	mov	r3, #0
    41a0:	ldr	r0, [r1, #148]	; 0x94
    41a4:	bl	0 <coda_type_set_bit_size>
    41a8:	mov	r1, #2
    41ac:	mov	r0, #7
    41b0:	ldr	r5, [sl, r4]
    41b4:	bl	0 <coda_type_number_new>
    41b8:	ldr	r3, [sl, r4]
    41bc:	mov	r1, #1
    41c0:	str	r0, [r5, #152]	; 0x98
    41c4:	ldr	r0, [r3, #152]	; 0x98
    41c8:	bl	0 <coda_type_number_set_endianness>
    41cc:	ldr	r3, [sl, r4]
    41d0:	mov	r1, #1
    41d4:	ldr	r0, [r3, #152]	; 0x98
    41d8:	bl	0 <coda_type_set_read_type>
    41dc:	ldr	r1, [sl, r4]
    41e0:	mov	r2, #8
    41e4:	mov	r3, #0
    41e8:	ldr	r0, [r1, #152]	; 0x98
    41ec:	bl	0 <coda_type_set_bit_size>
    41f0:	mov	r1, #2
    41f4:	mov	r0, #7
    41f8:	ldr	r5, [sl, r4]
    41fc:	bl	0 <coda_type_number_new>
    4200:	ldr	r3, [sl, r4]
    4204:	mov	r1, #1
    4208:	str	r0, [r5, #156]	; 0x9c
    420c:	ldr	r0, [r3, #156]	; 0x9c
    4210:	bl	0 <coda_type_number_set_endianness>
    4214:	ldr	r3, [sl, r4]
    4218:	mov	r1, #5
    421c:	ldr	r0, [r3, #156]	; 0x9c
    4220:	bl	0 <coda_type_set_read_type>
    4224:	ldr	r1, [sl, r4]
    4228:	mov	r2, #32
    422c:	mov	r3, #0
    4230:	ldr	r0, [r1, #156]	; 0x9c
    4234:	bl	0 <coda_type_set_bit_size>
    4238:	mov	r1, #2
    423c:	mov	r0, #7
    4240:	ldr	r5, [sl, r4]
    4244:	bl	0 <coda_type_number_new>
    4248:	ldr	r3, [sl, r4]
    424c:	mov	r1, #1
    4250:	str	r0, [r5, #160]	; 0xa0
    4254:	ldr	r0, [r3, #160]	; 0xa0
    4258:	bl	0 <coda_type_number_set_endianness>
    425c:	ldr	r3, [sl, r4]
    4260:	mov	r1, #1
    4264:	ldr	r0, [r3, #160]	; 0xa0
    4268:	bl	0 <coda_type_set_read_type>
    426c:	ldr	r1, [sl, r4]
    4270:	mov	r2, #8
    4274:	mov	r3, #0
    4278:	ldr	r0, [r1, #160]	; 0xa0
    427c:	bl	0 <coda_type_set_bit_size>
    4280:	mov	r1, #2
    4284:	mov	r0, #7
    4288:	ldr	r5, [sl, r4]
    428c:	bl	0 <coda_type_number_new>
    4290:	ldr	r3, [sl, r4]
    4294:	mov	r1, #1
    4298:	str	r0, [r5, #164]	; 0xa4
    429c:	ldr	r0, [r3, #164]	; 0xa4
    42a0:	bl	0 <coda_type_number_set_endianness>
    42a4:	ldr	r3, [sl, r4]
    42a8:	mov	r1, #5
    42ac:	ldr	r0, [r3, #164]	; 0xa4
    42b0:	bl	0 <coda_type_set_read_type>
    42b4:	ldr	r1, [sl, r4]
    42b8:	mov	r2, #32
    42bc:	mov	r3, #0
    42c0:	ldr	r0, [r1, #164]	; 0xa4
    42c4:	bl	0 <coda_type_set_bit_size>
    42c8:	mov	r1, #2
    42cc:	mov	r0, #7
    42d0:	ldr	r5, [sl, r4]
    42d4:	bl	0 <coda_type_number_new>
    42d8:	ldr	r3, [sl, r4]
    42dc:	mov	r1, #1
    42e0:	str	r0, [r5, #168]	; 0xa8
    42e4:	ldr	r0, [r3, #168]	; 0xa8
    42e8:	bl	0 <coda_type_number_set_endianness>
    42ec:	ldr	r3, [sl, r4]
    42f0:	mov	r1, #3
    42f4:	ldr	r0, [r3, #168]	; 0xa8
    42f8:	bl	0 <coda_type_set_read_type>
    42fc:	ldr	r1, [sl, r4]
    4300:	mov	r2, #16
    4304:	mov	r3, #0
    4308:	ldr	r0, [r1, #168]	; 0xa8
    430c:	bl	0 <coda_type_set_bit_size>
    4310:	ldr	r3, [sl, r4]
    4314:	ldr	r1, [pc, #-3652]	; 34d8 <coda_grib_reopen+0x1bc8>
    4318:	ldr	r0, [r3, #168]	; 0xa8
    431c:	bl	0 <coda_type_set_description>
    4320:	mov	r1, #2
    4324:	mov	r0, #7
    4328:	ldr	r5, [sl, r4]
    432c:	bl	0 <coda_type_number_new>
    4330:	ldr	r3, [sl, r4]
    4334:	mov	r1, #1
    4338:	str	r0, [r5, #172]	; 0xac
    433c:	ldr	r0, [r3, #172]	; 0xac
    4340:	bl	0 <coda_type_number_set_endianness>
    4344:	ldr	r3, [sl, r4]
    4348:	mov	r1, #3
    434c:	ldr	r0, [r3, #172]	; 0xac
    4350:	bl	0 <coda_type_set_read_type>
    4354:	ldr	r1, [sl, r4]
    4358:	mov	r2, #16
    435c:	mov	r3, #0
    4360:	ldr	r0, [r1, #172]	; 0xac
    4364:	bl	0 <coda_type_set_bit_size>
    4368:	ldr	r3, [sl, r4]
    436c:	ldr	r1, [pc, #-3736]	; 34dc <coda_grib_reopen+0x1bcc>
    4370:	ldr	r0, [r3, #172]	; 0xac
    4374:	bl	0 <coda_type_set_description>
    4378:	mov	r1, #2
    437c:	mov	r0, #7
    4380:	ldr	r5, [sl, r4]
    4384:	bl	0 <coda_type_number_new>
    4388:	ldr	r3, [sl, r4]
    438c:	mov	r1, #1
    4390:	str	r0, [r5, #176]	; 0xb0
    4394:	ldr	r0, [r3, #176]	; 0xb0
    4398:	bl	0 <coda_type_number_set_endianness>
    439c:	ldr	r3, [sl, r4]
    43a0:	mov	r1, #5
    43a4:	ldr	r0, [r3, #176]	; 0xb0
    43a8:	bl	0 <coda_type_set_read_type>
    43ac:	ldr	r1, [sl, r4]
    43b0:	mov	r2, #32
    43b4:	mov	r3, #0
    43b8:	ldr	r0, [r1, #176]	; 0xb0
    43bc:	bl	0 <coda_type_set_bit_size>
    43c0:	mov	r1, #2
    43c4:	mov	r0, #7
    43c8:	ldr	r5, [sl, r4]
    43cc:	bl	0 <coda_type_number_new>
    43d0:	ldr	r3, [sl, r4]
    43d4:	mov	r1, #1
    43d8:	str	r0, [r5, #180]	; 0xb4
    43dc:	ldr	r0, [r3, #180]	; 0xb4
    43e0:	bl	0 <coda_type_number_set_endianness>
    43e4:	ldr	r3, [sl, r4]
    43e8:	mov	r1, #5
    43ec:	ldr	r0, [r3, #180]	; 0xb4
    43f0:	bl	0 <coda_type_set_read_type>
    43f4:	ldr	r1, [sl, r4]
    43f8:	mov	r2, #32
    43fc:	mov	r3, #0
    4400:	ldr	r0, [r1, #180]	; 0xb4
    4404:	bl	0 <coda_type_set_bit_size>
    4408:	mov	r1, #2
    440c:	mov	r0, #7
    4410:	ldr	r5, [sl, r4]
    4414:	bl	0 <coda_type_number_new>
    4418:	ldr	r3, [sl, r4]
    441c:	mov	r1, #1
    4420:	str	r0, [r5, #184]	; 0xb8
    4424:	ldr	r0, [r3, #184]	; 0xb8
    4428:	bl	0 <coda_type_number_set_endianness>
    442c:	ldr	r3, [sl, r4]
    4430:	mov	r1, #4
    4434:	ldr	r0, [r3, #184]	; 0xb8
    4438:	bl	0 <coda_type_set_read_type>
    443c:	ldr	r1, [sl, r4]
    4440:	mov	r2, #32
    4444:	mov	r3, #0
    4448:	ldr	r0, [r1, #184]	; 0xb8
    444c:	bl	0 <coda_type_set_bit_size>
    4450:	ldr	r3, [sl, r4]
    4454:	ldr	r1, [pc, #-3964]	; 34e0 <coda_grib_reopen+0x1bd0>
    4458:	ldr	r0, [r3, #184]	; 0xb8
    445c:	bl	0 <coda_type_set_description>
    4460:	mov	r1, #2
    4464:	mov	r0, #7
    4468:	ldr	r5, [sl, r4]
    446c:	bl	0 <coda_type_number_new>
    4470:	ldr	r3, [sl, r4]
    4474:	mov	r1, #1
    4478:	str	r0, [r5, #188]	; 0xbc
    447c:	ldr	r0, [r3, #188]	; 0xbc
    4480:	bl	0 <coda_type_number_set_endianness>
    4484:	ldr	r3, [sl, r4]
    4488:	mov	r1, #4
    448c:	ldr	r0, [r3, #188]	; 0xbc
    4490:	bl	0 <coda_type_set_read_type>
    4494:	ldr	r1, [sl, r4]
    4498:	mov	r2, #32
    449c:	mov	r3, #0
    44a0:	ldr	r0, [r1, #188]	; 0xbc
    44a4:	bl	0 <coda_type_set_bit_size>
    44a8:	ldr	r3, [sl, r4]
    44ac:	ldr	r1, [pc, #-4048]	; 34e4 <coda_grib_reopen+0x1bd4>
    44b0:	ldr	r0, [r3, #188]	; 0xbc
    44b4:	bl	0 <coda_type_set_description>
    44b8:	mov	r1, #2
    44bc:	mov	r0, #7
    44c0:	ldr	r5, [sl, r4]
    44c4:	bl	0 <coda_type_number_new>
    44c8:	ldr	r3, [sl, r4]
    44cc:	mov	r1, #1
    44d0:	str	r0, [r5, #192]	; 0xc0
    44d4:	ldr	r0, [r3, #192]	; 0xc0
    44d8:	bl	0 <coda_type_number_set_endianness>
    44dc:	ldr	r3, [sl, r4]
    44e0:	mov	r1, #1
    44e4:	ldr	r0, [r3, #192]	; 0xc0
    44e8:	bl	0 <coda_type_set_read_type>
    44ec:	ldr	r1, [sl, r4]
    44f0:	mov	r2, #8
    44f4:	mov	r3, #0
    44f8:	ldr	r0, [r1, #192]	; 0xc0
    44fc:	bl	0 <coda_type_set_bit_size>
    4500:	ldr	r3, [sl, r4]
    4504:	ldr	r1, [pc, #4080]	; 54fc <coda_grib_reopen+0x3bec>
    4508:	ldr	r0, [r3, #192]	; 0xc0
    450c:	bl	0 <coda_type_set_description>
    4510:	mov	r1, #2
    4514:	mov	r0, #7
    4518:	ldr	r5, [sl, r4]
    451c:	bl	0 <coda_type_number_new>
    4520:	ldr	r3, [sl, r4]
    4524:	mov	r1, #1
    4528:	str	r0, [r5, #196]	; 0xc4
    452c:	ldr	r0, [r3, #196]	; 0xc4
    4530:	bl	0 <coda_type_number_set_endianness>
    4534:	ldr	r3, [sl, r4]
    4538:	mov	r1, #4
    453c:	ldr	r0, [r3, #196]	; 0xc4
    4540:	bl	0 <coda_type_set_read_type>
    4544:	ldr	r1, [sl, r4]
    4548:	mov	r2, #32
    454c:	mov	r3, #0
    4550:	ldr	r0, [r1, #196]	; 0xc4
    4554:	bl	0 <coda_type_set_bit_size>
    4558:	ldr	r3, [sl, r4]
    455c:	ldr	r1, [pc, #3996]	; 5500 <coda_grib_reopen+0x3bf0>
    4560:	ldr	r0, [r3, #196]	; 0xc4
    4564:	bl	0 <coda_type_set_description>
    4568:	mov	r1, #2
    456c:	mov	r0, #7
    4570:	ldr	r5, [sl, r4]
    4574:	bl	0 <coda_type_number_new>
    4578:	ldr	r3, [sl, r4]
    457c:	mov	r1, #1
    4580:	str	r0, [r5, #200]	; 0xc8
    4584:	ldr	r0, [r3, #200]	; 0xc8
    4588:	bl	0 <coda_type_number_set_endianness>
    458c:	ldr	r3, [sl, r4]
    4590:	mov	r1, #4
    4594:	ldr	r0, [r3, #200]	; 0xc8
    4598:	bl	0 <coda_type_set_read_type>
    459c:	ldr	r1, [sl, r4]
    45a0:	mov	r2, #32
    45a4:	mov	r3, #0
    45a8:	ldr	r0, [r1, #200]	; 0xc8
    45ac:	bl	0 <coda_type_set_bit_size>
    45b0:	ldr	r3, [sl, r4]
    45b4:	ldr	r1, [pc, #3912]	; 5504 <coda_grib_reopen+0x3bf4>
    45b8:	ldr	r0, [r3, #200]	; 0xc8
    45bc:	bl	0 <coda_type_set_description>
    45c0:	mov	r1, #2
    45c4:	mov	r0, #7
    45c8:	ldr	r5, [sl, r4]
    45cc:	bl	0 <coda_type_number_new>
    45d0:	ldr	r3, [sl, r4]
    45d4:	mov	r1, #1
    45d8:	str	r0, [r5, #204]	; 0xcc
    45dc:	ldr	r0, [r3, #204]	; 0xcc
    45e0:	bl	0 <coda_type_number_set_endianness>
    45e4:	ldr	r3, [sl, r4]
    45e8:	mov	r1, #3
    45ec:	ldr	r0, [r3, #204]	; 0xcc
    45f0:	bl	0 <coda_type_set_read_type>
    45f4:	ldr	r1, [sl, r4]
    45f8:	mov	r2, #16
    45fc:	mov	r3, #0
    4600:	ldr	r0, [r1, #204]	; 0xcc
    4604:	bl	0 <coda_type_set_bit_size>
    4608:	ldr	r3, [sl, r4]
    460c:	ldr	r1, [pc, #3828]	; 5508 <coda_grib_reopen+0x3bf8>
    4610:	ldr	r0, [r3, #204]	; 0xcc
    4614:	bl	0 <coda_type_set_description>
    4618:	mov	r1, #2
    461c:	mov	r0, #7
    4620:	ldr	r5, [sl, r4]
    4624:	bl	0 <coda_type_number_new>
    4628:	ldr	r3, [sl, r4]
    462c:	mov	r1, #1
    4630:	str	r0, [r5, #208]	; 0xd0
    4634:	ldr	r0, [r3, #208]	; 0xd0
    4638:	bl	0 <coda_type_number_set_endianness>
    463c:	ldr	r3, [sl, r4]
    4640:	mov	r1, #3
    4644:	ldr	r0, [r3, #208]	; 0xd0
    4648:	bl	0 <coda_type_set_read_type>
    464c:	ldr	r1, [sl, r4]
    4650:	mov	r2, #16
    4654:	mov	r3, #0
    4658:	ldr	r0, [r1, #208]	; 0xd0
    465c:	bl	0 <coda_type_set_bit_size>
    4660:	ldr	r3, [sl, r4]
    4664:	ldr	r1, [pc, #4048]	; 563c <coda_grib_reopen+0x3d2c>
    4668:	ldr	r0, [r3, #208]	; 0xd0
    466c:	bl	0 <coda_type_set_description>
    4670:	mov	r1, #2
    4674:	mov	r0, #7
    4678:	ldr	r5, [sl, r4]
    467c:	bl	0 <coda_type_number_new>
    4680:	ldr	r3, [sl, r4]
    4684:	mov	r1, #1
    4688:	str	r0, [r5, #212]	; 0xd4
    468c:	ldr	r0, [r3, #212]	; 0xd4
    4690:	bl	0 <coda_type_number_set_endianness>
    4694:	ldr	r3, [sl, r4]
    4698:	mov	r1, #3
    469c:	ldr	r0, [r3, #212]	; 0xd4
    46a0:	bl	0 <coda_type_set_read_type>
    46a4:	ldr	r1, [sl, r4]
    46a8:	mov	r2, #16
    46ac:	mov	r3, #0
    46b0:	ldr	r0, [r1, #212]	; 0xd4
    46b4:	bl	0 <coda_type_set_bit_size>
    46b8:	ldr	r3, [sl, r4]
    46bc:	ldr	r1, [pc, #3964]	; 5640 <coda_grib_reopen+0x3d30>
    46c0:	ldr	r0, [r3, #212]	; 0xd4
    46c4:	bl	0 <coda_type_set_description>
    46c8:	mov	r1, #2
    46cc:	mov	r0, #7
    46d0:	ldr	r5, [sl, r4]
    46d4:	bl	0 <coda_type_number_new>
    46d8:	ldr	r3, [sl, r4]
    46dc:	mov	r1, #1
    46e0:	str	r0, [r5, #216]	; 0xd8
    46e4:	ldr	r0, [r3, #216]	; 0xd8
    46e8:	bl	0 <coda_type_number_set_endianness>
    46ec:	ldr	r3, [sl, r4]
    46f0:	mov	r1, #1
    46f4:	ldr	r0, [r3, #216]	; 0xd8
    46f8:	bl	0 <coda_type_set_read_type>
    46fc:	ldr	r1, [sl, r4]
    4700:	mov	r2, #8
    4704:	mov	r3, #0
    4708:	ldr	r0, [r1, #216]	; 0xd8
    470c:	bl	0 <coda_type_set_bit_size>
    4710:	ldr	r3, [sl, r4]
    4714:	ldr	r1, [pc, #3880]	; 5644 <coda_grib_reopen+0x3d34>
    4718:	ldr	r0, [r3, #216]	; 0xd8
    471c:	bl	0 <coda_type_set_description>
    4720:	mov	r1, #3
    4724:	mov	r0, #7
    4728:	ldr	r5, [sl, r4]
    472c:	bl	0 <coda_type_number_new>
    4730:	ldr	r3, [sl, r4]
    4734:	mov	r1, #1
    4738:	str	r0, [r5, #220]	; 0xdc
    473c:	ldr	r0, [r3, #220]	; 0xdc
    4740:	bl	0 <coda_type_number_set_endianness>
    4744:	ldr	r3, [sl, r4]
    4748:	mov	r1, #8
    474c:	ldr	r0, [r3, #220]	; 0xdc
    4750:	bl	0 <coda_type_set_read_type>
    4754:	ldr	r1, [sl, r4]
    4758:	mov	r2, #32
    475c:	mov	r3, #0
    4760:	ldr	r0, [r1, #220]	; 0xdc
    4764:	bl	0 <coda_type_set_bit_size>
    4768:	mov	r0, #7
    476c:	ldr	r5, [sl, r4]
    4770:	bl	0 <coda_type_array_new>
    4774:	ldr	r3, [sl, r4]
    4778:	ldr	r1, [pc, #3468]	; 550c <coda_grib_reopen+0x3bfc>
    477c:	str	r0, [r5, #224]	; 0xe0
    4780:	ldr	r0, [r3, #224]	; 0xe0
    4784:	bl	0 <coda_type_set_description>
    4788:	ldr	r3, [sl, r4]
    478c:	ldr	r1, [r3, #220]	; 0xdc
    4790:	ldr	r0, [r3, #224]	; 0xe0
    4794:	bl	0 <coda_type_array_set_base_type>
    4798:	ldr	r3, [sl, r4]
    479c:	mov	r1, #0
    47a0:	ldr	r0, [r3, #224]	; 0xe0
    47a4:	bl	0 <coda_type_array_add_variable_dimension>
    47a8:	mov	r1, #2
    47ac:	mov	r0, #7
    47b0:	ldr	r5, [sl, r4]
    47b4:	bl	0 <coda_type_number_new>
    47b8:	ldr	r3, [sl, r4]
    47bc:	mov	r1, #1
    47c0:	str	r0, [r5, #228]	; 0xe4
    47c4:	ldr	r0, [r3, #228]	; 0xe4
    47c8:	bl	0 <coda_type_number_set_endianness>
    47cc:	ldr	r3, [sl, r4]
    47d0:	mov	r1, #3
    47d4:	ldr	r0, [r3, #228]	; 0xe4
    47d8:	bl	0 <coda_type_set_read_type>
    47dc:	ldr	r1, [sl, r4]
    47e0:	mov	r2, #16
    47e4:	mov	r3, #0
    47e8:	ldr	r0, [r1, #228]	; 0xe4
    47ec:	bl	0 <coda_type_set_bit_size>
    47f0:	mov	r0, #7
    47f4:	ldr	r5, [sl, r4]
    47f8:	bl	0 <coda_type_array_new>
    47fc:	ldr	r3, [sl, r4]
    4800:	ldr	r1, [pc, #3648]	; 5648 <coda_grib_reopen+0x3d38>
    4804:	str	r0, [r5, #232]	; 0xe8
    4808:	ldr	r0, [r3, #232]	; 0xe8
    480c:	bl	0 <coda_type_set_description>
    4810:	ldr	r3, [sl, r4]
    4814:	ldr	r1, [r3, #228]	; 0xe4
    4818:	ldr	r0, [r3, #232]	; 0xe8
    481c:	bl	0 <coda_type_array_set_base_type>
    4820:	ldr	r3, [sl, r4]
    4824:	mov	r1, #0
    4828:	ldr	r0, [r3, #232]	; 0xe8
    482c:	bl	0 <coda_type_array_add_variable_dimension>
    4830:	mov	r1, #2
    4834:	mov	r0, #7
    4838:	ldr	r5, [sl, r4]
    483c:	bl	0 <coda_type_number_new>
    4840:	ldr	r3, [sl, r4]
    4844:	mov	r1, #1
    4848:	str	r0, [r5, #236]	; 0xec
    484c:	ldr	r0, [r3, #236]	; 0xec
    4850:	bl	0 <coda_type_number_set_endianness>
    4854:	ldr	r3, [sl, r4]
    4858:	mov	r1, #1
    485c:	ldr	r0, [r3, #236]	; 0xec
    4860:	bl	0 <coda_type_set_read_type>
    4864:	ldr	r1, [sl, r4]
    4868:	mov	r2, #8
    486c:	mov	r3, #0
    4870:	ldr	r0, [r1, #236]	; 0xec
    4874:	bl	0 <coda_type_set_bit_size>
    4878:	ldr	r3, [sl, r4]
    487c:	ldr	r1, [pc, #3528]	; 564c <coda_grib_reopen+0x3d3c>
    4880:	ldr	r0, [r3, #236]	; 0xec
    4884:	bl	0 <coda_type_set_description>
    4888:	mov	r1, #2
    488c:	mov	r0, #7
    4890:	ldr	r5, [sl, r4]
    4894:	bl	0 <coda_type_number_new>
    4898:	ldr	r3, [sl, r4]
    489c:	mov	r1, #1
    48a0:	str	r0, [r5, #240]	; 0xf0
    48a4:	ldr	r0, [r3, #240]	; 0xf0
    48a8:	bl	0 <coda_type_number_set_endianness>
    48ac:	ldr	r3, [sl, r4]
    48b0:	mov	r1, #5
    48b4:	ldr	r0, [r3, #240]	; 0xf0
    48b8:	bl	0 <coda_type_set_read_type>
    48bc:	ldr	r1, [sl, r4]
    48c0:	mov	r2, #32
    48c4:	mov	r3, #0
    48c8:	ldr	r0, [r1, #240]	; 0xf0
    48cc:	bl	0 <coda_type_set_bit_size>
    48d0:	ldr	r3, [sl, r4]
    48d4:	ldr	r1, [pc, #3444]	; 5650 <coda_grib_reopen+0x3d40>
    48d8:	ldr	r0, [r3, #240]	; 0xf0
    48dc:	bl	0 <coda_type_set_description>
    48e0:	mov	r1, #2
    48e4:	mov	r0, #7
    48e8:	ldr	r5, [sl, r4]
    48ec:	bl	0 <coda_type_number_new>
    48f0:	ldr	r3, [sl, r4]
    48f4:	mov	r1, #1
    48f8:	str	r0, [r5, #244]	; 0xf4
    48fc:	ldr	r0, [r3, #244]	; 0xf4
    4900:	bl	0 <coda_type_number_set_endianness>
    4904:	ldr	r3, [sl, r4]
    4908:	mov	r1, #3
    490c:	ldr	r0, [r3, #244]	; 0xf4
    4910:	bl	0 <coda_type_set_read_type>
    4914:	ldr	r1, [sl, r4]
    4918:	mov	r2, #16
    491c:	mov	r3, #0
    4920:	ldr	r0, [r1, #244]	; 0xf4
    4924:	bl	0 <coda_type_set_bit_size>
    4928:	ldr	r3, [sl, r4]
    492c:	ldr	r1, [pc, #3036]	; 5510 <coda_grib_reopen+0x3c00>
    4930:	ldr	r0, [r3, #244]	; 0xf4
    4934:	bl	0 <coda_type_set_description>
    4938:	mov	r1, #2
    493c:	mov	r0, #7
    4940:	ldr	r5, [sl, r4]
    4944:	bl	0 <coda_type_number_new>
    4948:	ldr	r3, [sl, r4]
    494c:	mov	r1, #1
    4950:	str	r0, [r5, #248]	; 0xf8
    4954:	ldr	r0, [r3, #248]	; 0xf8
    4958:	bl	0 <coda_type_number_set_endianness>
    495c:	ldr	r3, [sl, r4]
    4960:	mov	r1, #1
    4964:	ldr	r0, [r3, #248]	; 0xf8
    4968:	bl	0 <coda_type_set_read_type>
    496c:	ldr	r1, [sl, r4]
    4970:	mov	r2, #8
    4974:	mov	r3, #0
    4978:	ldr	r0, [r1, #248]	; 0xf8
    497c:	bl	0 <coda_type_set_bit_size>
    4980:	ldr	r3, [sl, r4]
    4984:	ldr	r1, [pc, #2952]	; 5514 <coda_grib_reopen+0x3c04>
    4988:	ldr	r0, [r3, #248]	; 0xf8
    498c:	bl	0 <coda_type_set_description>
    4990:	mov	r1, #2
    4994:	mov	r0, #7
    4998:	ldr	r5, [sl, r4]
    499c:	bl	0 <coda_type_number_new>
    49a0:	ldr	r3, [sl, r4]
    49a4:	mov	r1, #1
    49a8:	str	r0, [r5, #252]	; 0xfc
    49ac:	ldr	r0, [r3, #252]	; 0xfc
    49b0:	bl	0 <coda_type_number_set_endianness>
    49b4:	ldr	r3, [sl, r4]
    49b8:	mov	r1, #2
    49bc:	ldr	r0, [r3, #252]	; 0xfc
    49c0:	bl	0 <coda_type_set_read_type>
    49c4:	ldr	r1, [sl, r4]
    49c8:	mov	r2, #16
    49cc:	mov	r3, #0
    49d0:	ldr	r0, [r1, #252]	; 0xfc
    49d4:	bl	0 <coda_type_set_bit_size>
    49d8:	ldr	r3, [sl, r4]
    49dc:	ldr	r1, [pc, #2868]	; 5518 <coda_grib_reopen+0x3c08>
    49e0:	ldr	r0, [r3, #252]	; 0xfc
    49e4:	bl	0 <coda_type_set_description>
    49e8:	mov	r1, #3
    49ec:	mov	r0, #7
    49f0:	ldr	r5, [sl, r4]
    49f4:	bl	0 <coda_type_number_new>
    49f8:	ldr	r3, [sl, r4]
    49fc:	mov	r1, #1
    4a00:	str	r0, [r5, #256]	; 0x100
    4a04:	ldr	r0, [r3, #256]	; 0x100
    4a08:	bl	0 <coda_type_number_set_endianness>
    4a0c:	ldr	r3, [sl, r4]
    4a10:	mov	r1, #8
    4a14:	ldr	r0, [r3, #256]	; 0x100
    4a18:	bl	0 <coda_type_set_read_type>
    4a1c:	ldr	r1, [sl, r4]
    4a20:	mov	r2, #32
    4a24:	mov	r3, #0
    4a28:	ldr	r0, [r1, #256]	; 0x100
    4a2c:	bl	0 <coda_type_set_bit_size>
    4a30:	ldr	r3, [sl, r4]
    4a34:	ldr	r1, [pc, #2784]	; 551c <coda_grib_reopen+0x3c0c>
    4a38:	ldr	r0, [r3, #256]	; 0x100
    4a3c:	bl	0 <coda_type_set_description>
    4a40:	mov	r0, #7
    4a44:	ldr	r5, [sl, r4]
    4a48:	bl	0 <coda_type_array_new>
    4a4c:	mov	r1, #3
    4a50:	str	r0, [r5, #260]	; 0x104
    4a54:	mov	r0, #7
    4a58:	bl	0 <coda_type_number_new>
    4a5c:	mov	r1, #1
    4a60:	mov	r5, r0
    4a64:	bl	0 <coda_type_number_set_endianness>
    4a68:	mov	r1, #8
    4a6c:	mov	r0, r5
    4a70:	bl	0 <coda_type_set_read_type>
    4a74:	mov	r2, #32
    4a78:	mov	r0, r5
    4a7c:	mov	r3, #0
    4a80:	bl	0 <coda_type_set_bit_size>
    4a84:	ldr	r3, [sl, r4]
    4a88:	mov	r1, r5
    4a8c:	ldr	r0, [r3, #260]	; 0x104
    4a90:	bl	0 <coda_type_array_set_base_type>
    4a94:	mov	r0, r5
    4a98:	bl	0 <coda_type_release>
    4a9c:	ldr	r3, [sl, r4]
    4aa0:	mov	r1, #0
    4aa4:	ldr	r0, [r3, #260]	; 0x104
    4aa8:	bl	0 <coda_type_array_add_variable_dimension>
    4aac:	mov	r0, #7
    4ab0:	ldr	r5, [sl, r4]
    4ab4:	bl	0 <coda_type_record_new>
    4ab8:	str	r0, [r5, #264]	; 0x108
    4abc:	ldr	r0, [pc, #2652]	; 5520 <coda_grib_reopen+0x3c10>
    4ac0:	bl	0 <coda_type_record_field_new>
    4ac4:	ldr	r3, [sl, r4]
    4ac8:	ldr	r1, [r3, #132]	; 0x84
    4acc:	mov	r5, r0
    4ad0:	bl	0 <coda_type_record_field_set_type>
    4ad4:	ldr	r3, [sl, r4]
    4ad8:	mov	r1, r5
    4adc:	ldr	r0, [r3, #264]	; 0x108
    4ae0:	bl	0 <coda_type_record_add_field>
    4ae4:	ldr	r0, [pc, #2616]	; 5524 <coda_grib_reopen+0x3c14>
    4ae8:	bl	0 <coda_type_record_field_new>
    4aec:	ldr	r3, [sl, r4]
    4af0:	ldr	r1, [r3, #136]	; 0x88
    4af4:	mov	r5, r0
    4af8:	bl	0 <coda_type_record_field_set_type>
    4afc:	ldr	r3, [sl, r4]
    4b00:	mov	r1, r5
    4b04:	ldr	r0, [r3, #264]	; 0x108
    4b08:	bl	0 <coda_type_record_add_field>
    4b0c:	ldr	r0, [pc, #2580]	; 5528 <coda_grib_reopen+0x3c18>
    4b10:	bl	0 <coda_type_record_field_new>
    4b14:	ldr	r3, [sl, r4]
    4b18:	ldr	r1, [r3, #168]	; 0xa8
    4b1c:	mov	r5, r0
    4b20:	bl	0 <coda_type_record_field_set_type>
    4b24:	ldr	r3, [sl, r4]
    4b28:	mov	r1, r5
    4b2c:	ldr	r0, [r3, #264]	; 0x108
    4b30:	bl	0 <coda_type_record_add_field>
    4b34:	ldr	r0, [pc, #2544]	; 552c <coda_grib_reopen+0x3c1c>
    4b38:	bl	0 <coda_type_record_field_new>
    4b3c:	ldr	r3, [sl, r4]
    4b40:	ldr	r1, [r3, #172]	; 0xac
    4b44:	mov	r5, r0
    4b48:	bl	0 <coda_type_record_field_set_type>
    4b4c:	ldr	r3, [sl, r4]
    4b50:	mov	r1, r5
    4b54:	ldr	r0, [r3, #264]	; 0x108
    4b58:	bl	0 <coda_type_record_add_field>
    4b5c:	ldr	r0, [pc, #2508]	; 5530 <coda_grib_reopen+0x3c20>
    4b60:	bl	0 <coda_type_record_field_new>
    4b64:	ldr	r3, [sl, r4]
    4b68:	ldr	r1, [r3, #184]	; 0xb8
    4b6c:	mov	r5, r0
    4b70:	bl	0 <coda_type_record_field_set_type>
    4b74:	ldr	r3, [sl, r4]
    4b78:	mov	r1, r5
    4b7c:	ldr	r0, [r3, #264]	; 0x108
    4b80:	bl	0 <coda_type_record_add_field>
    4b84:	ldr	r0, [pc, #2472]	; 5534 <coda_grib_reopen+0x3c24>
    4b88:	bl	0 <coda_type_record_field_new>
    4b8c:	ldr	r3, [sl, r4]
    4b90:	ldr	r1, [r3, #188]	; 0xbc
    4b94:	mov	r5, r0
    4b98:	bl	0 <coda_type_record_field_set_type>
    4b9c:	ldr	r3, [sl, r4]
    4ba0:	mov	r1, r5
    4ba4:	ldr	r0, [r3, #264]	; 0x108
    4ba8:	bl	0 <coda_type_record_add_field>
    4bac:	ldr	r0, [pc, #2436]	; 5538 <coda_grib_reopen+0x3c28>
    4bb0:	bl	0 <coda_type_record_field_new>
    4bb4:	ldr	r3, [sl, r4]
    4bb8:	ldr	r1, [r3, #192]	; 0xc0
    4bbc:	mov	r5, r0
    4bc0:	bl	0 <coda_type_record_field_set_type>
    4bc4:	ldr	r3, [sl, r4]
    4bc8:	mov	r1, r5
    4bcc:	ldr	r0, [r3, #264]	; 0x108
    4bd0:	bl	0 <coda_type_record_add_field>
    4bd4:	ldr	r0, [pc, #2400]	; 553c <coda_grib_reopen+0x3c2c>
    4bd8:	bl	0 <coda_type_record_field_new>
    4bdc:	ldr	r3, [sl, r4]
    4be0:	ldr	r1, [r3, #196]	; 0xc4
    4be4:	mov	r5, r0
    4be8:	bl	0 <coda_type_record_field_set_type>
    4bec:	ldr	r3, [sl, r4]
    4bf0:	mov	r1, r5
    4bf4:	ldr	r0, [r3, #264]	; 0x108
    4bf8:	bl	0 <coda_type_record_add_field>
    4bfc:	ldr	r0, [pc, #2364]	; 5540 <coda_grib_reopen+0x3c30>
    4c00:	bl	0 <coda_type_record_field_new>
    4c04:	ldr	r3, [sl, r4]
    4c08:	ldr	r1, [r3, #200]	; 0xc8
    4c0c:	mov	r5, r0
    4c10:	bl	0 <coda_type_record_field_set_type>
    4c14:	ldr	r3, [sl, r4]
    4c18:	mov	r1, r5
    4c1c:	ldr	r0, [r3, #264]	; 0x108
    4c20:	bl	0 <coda_type_record_add_field>
    4c24:	ldr	r0, [pc, #2328]	; 5544 <coda_grib_reopen+0x3c34>
    4c28:	bl	0 <coda_type_record_field_new>
    4c2c:	ldr	r3, [sl, r4]
    4c30:	ldr	r1, [r3, #204]	; 0xcc
    4c34:	mov	r5, r0
    4c38:	bl	0 <coda_type_record_field_set_type>
    4c3c:	ldr	r3, [sl, r4]
    4c40:	mov	r1, r5
    4c44:	ldr	r0, [r3, #264]	; 0x108
    4c48:	bl	0 <coda_type_record_add_field>
    4c4c:	ldr	r0, [pc, #2292]	; 5548 <coda_grib_reopen+0x3c38>
    4c50:	bl	0 <coda_type_record_field_new>
    4c54:	ldr	r3, [sl, r4]
    4c58:	ldr	r1, [r3, #208]	; 0xd0
    4c5c:	mov	r5, r0
    4c60:	bl	0 <coda_type_record_field_set_type>
    4c64:	mov	r0, r5
    4c68:	bl	0 <coda_type_record_field_set_optional>
    4c6c:	ldr	r3, [sl, r4]
    4c70:	mov	r1, r5
    4c74:	ldr	r0, [r3, #264]	; 0x108
    4c78:	bl	0 <coda_type_record_add_field>
    4c7c:	ldr	r0, [pc, #2248]	; 554c <coda_grib_reopen+0x3c3c>
    4c80:	bl	0 <coda_type_record_field_new>
    4c84:	ldr	r3, [sl, r4]
    4c88:	ldr	r1, [r3, #212]	; 0xd4
    4c8c:	mov	r5, r0
    4c90:	bl	0 <coda_type_record_field_set_type>
    4c94:	mov	r0, r5
    4c98:	bl	0 <coda_type_record_field_set_optional>
    4c9c:	ldr	r3, [sl, r4]
    4ca0:	mov	r1, r5
    4ca4:	ldr	r0, [r3, #264]	; 0x108
    4ca8:	bl	0 <coda_type_record_add_field>
    4cac:	ldr	r0, [pc, #2204]	; 5550 <coda_grib_reopen+0x3c40>
    4cb0:	bl	0 <coda_type_record_field_new>
    4cb4:	ldr	r3, [sl, r4]
    4cb8:	ldr	r1, [r3, #216]	; 0xd8
    4cbc:	mov	r5, r0
    4cc0:	bl	0 <coda_type_record_field_set_type>
    4cc4:	ldr	r3, [sl, r4]
    4cc8:	mov	r1, r5
    4ccc:	ldr	r0, [r3, #264]	; 0x108
    4cd0:	bl	0 <coda_type_record_add_field>
    4cd4:	ldr	r0, [pc, #2168]	; 5554 <coda_grib_reopen+0x3c44>
    4cd8:	bl	0 <coda_type_record_field_new>
    4cdc:	ldr	r3, [sl, r4]
    4ce0:	ldr	r1, [r3, #224]	; 0xe0
    4ce4:	mov	r5, r0
    4ce8:	bl	0 <coda_type_record_field_set_type>
    4cec:	mov	r0, r5
    4cf0:	bl	0 <coda_type_record_field_set_optional>
    4cf4:	ldr	r3, [sl, r4]
    4cf8:	mov	r1, r5
    4cfc:	ldr	r0, [r3, #264]	; 0x108
    4d00:	bl	0 <coda_type_record_add_field>
    4d04:	ldr	r0, [pc, #2124]	; 5558 <coda_grib_reopen+0x3c48>
    4d08:	bl	0 <coda_type_record_field_new>
    4d0c:	ldr	r3, [sl, r4]
    4d10:	ldr	r1, [r3, #232]	; 0xe8
    4d14:	mov	r5, r0
    4d18:	bl	0 <coda_type_record_field_set_type>
    4d1c:	mov	r0, r5
    4d20:	bl	0 <coda_type_record_field_set_optional>
    4d24:	ldr	r3, [sl, r4]
    4d28:	mov	r1, r5
    4d2c:	ldr	r0, [r3, #264]	; 0x108
    4d30:	bl	0 <coda_type_record_add_field>
    4d34:	mov	r0, #7
    4d38:	ldr	r5, [sl, r4]
    4d3c:	bl	0 <coda_type_record_new>
    4d40:	str	r0, [r5, #268]	; 0x10c
    4d44:	ldr	r0, [pc, #2064]	; 555c <coda_grib_reopen+0x3c4c>
    4d48:	bl	0 <coda_type_record_field_new>
    4d4c:	ldr	r3, [sl, r4]
    4d50:	ldr	r1, [r3, #248]	; 0xf8
    4d54:	mov	r5, r0
    4d58:	bl	0 <coda_type_record_field_set_type>
    4d5c:	mov	r0, r5
    4d60:	bl	0 <coda_type_record_field_set_hidden>
    4d64:	ldr	r3, [sl, r4]
    4d68:	mov	r1, r5
    4d6c:	ldr	r0, [r3, #268]	; 0x10c
    4d70:	bl	0 <coda_type_record_add_field>
    4d74:	ldr	r0, [pc, #2020]	; 5560 <coda_grib_reopen+0x3c50>
    4d78:	bl	0 <coda_type_record_field_new>
    4d7c:	ldr	r3, [sl, r4]
    4d80:	ldr	r1, [r3, #252]	; 0xfc
    4d84:	mov	r5, r0
    4d88:	bl	0 <coda_type_record_field_set_type>
    4d8c:	mov	r0, r5
    4d90:	bl	0 <coda_type_record_field_set_hidden>
    4d94:	ldr	r3, [sl, r4]
    4d98:	mov	r1, r5
    4d9c:	ldr	r0, [r3, #268]	; 0x10c
    4da0:	bl	0 <coda_type_record_add_field>
    4da4:	ldr	r0, [pc, #1976]	; 5564 <coda_grib_reopen+0x3c54>
    4da8:	bl	0 <coda_type_record_field_new>
    4dac:	ldr	r3, [sl, r4]
    4db0:	ldr	r1, [r3, #256]	; 0x100
    4db4:	mov	r5, r0
    4db8:	bl	0 <coda_type_record_field_set_type>
    4dbc:	mov	r0, r5
    4dc0:	bl	0 <coda_type_record_field_set_hidden>
    4dc4:	ldr	r3, [sl, r4]
    4dc8:	mov	r1, r5
    4dcc:	ldr	r0, [r3, #268]	; 0x10c
    4dd0:	bl	0 <coda_type_record_add_field>
    4dd4:	ldr	r0, [pc, #1932]	; 5568 <coda_grib_reopen+0x3c58>
    4dd8:	bl	0 <coda_type_record_field_new>
    4ddc:	ldr	r3, [sl, r4]
    4de0:	ldr	r1, [r3, #260]	; 0x104
    4de4:	mov	r5, r0
    4de8:	bl	0 <coda_type_record_field_set_type>
    4dec:	ldr	r3, [sl, r4]
    4df0:	mov	r1, r5
    4df4:	ldr	r0, [r3, #268]	; 0x10c
    4df8:	bl	0 <coda_type_record_add_field>
    4dfc:	mov	r0, #7
    4e00:	ldr	r5, [sl, r4]
    4e04:	bl	0 <coda_type_record_new>
    4e08:	str	r0, [r5, #272]	; 0x110
    4e0c:	ldr	r0, [pc, #1880]	; 556c <coda_grib_reopen+0x3c5c>
    4e10:	bl	0 <coda_type_record_field_new>
    4e14:	ldr	r3, [sl, r4]
    4e18:	ldr	r1, [r3, #12]
    4e1c:	mov	r5, r0
    4e20:	bl	0 <coda_type_record_field_set_type>
    4e24:	ldr	r3, [sl, r4]
    4e28:	mov	r1, r5
    4e2c:	ldr	r0, [r3, #272]	; 0x110
    4e30:	bl	0 <coda_type_record_add_field>
    4e34:	ldr	r0, [pc, #1844]	; 5570 <coda_grib_reopen+0x3c60>
    4e38:	bl	0 <coda_type_record_field_new>
    4e3c:	ldr	r3, [sl, r4]
    4e40:	ldr	r1, [r3, #8]
    4e44:	mov	r5, r0
    4e48:	bl	0 <coda_type_record_field_set_type>
    4e4c:	ldr	r3, [sl, r4]
    4e50:	mov	r1, r5
    4e54:	ldr	r0, [r3, #272]	; 0x110
    4e58:	bl	0 <coda_type_record_add_field>
    4e5c:	ldr	r0, [pc, #1808]	; 5574 <coda_grib_reopen+0x3c64>
    4e60:	bl	0 <coda_type_record_field_new>
    4e64:	ldr	r3, [sl, r4]
    4e68:	ldr	r1, [r3, #16]
    4e6c:	mov	r5, r0
    4e70:	bl	0 <coda_type_record_field_set_type>
    4e74:	ldr	r3, [sl, r4]
    4e78:	mov	r1, r5
    4e7c:	ldr	r0, [r3, #272]	; 0x110
    4e80:	bl	0 <coda_type_record_add_field>
    4e84:	ldr	r0, [pc, #1772]	; 5578 <coda_grib_reopen+0x3c68>
    4e88:	bl	0 <coda_type_record_field_new>
    4e8c:	ldr	r3, [sl, r4]
    4e90:	ldr	r1, [r3, #20]
    4e94:	mov	r5, r0
    4e98:	bl	0 <coda_type_record_field_set_type>
    4e9c:	ldr	r3, [sl, r4]
    4ea0:	mov	r1, r5
    4ea4:	ldr	r0, [r3, #272]	; 0x110
    4ea8:	bl	0 <coda_type_record_add_field>
    4eac:	ldr	r0, [pc, #1736]	; 557c <coda_grib_reopen+0x3c6c>
    4eb0:	bl	0 <coda_type_record_field_new>
    4eb4:	ldr	r3, [sl, r4]
    4eb8:	ldr	r1, [r3, #24]
    4ebc:	mov	r5, r0
    4ec0:	bl	0 <coda_type_record_field_set_type>
    4ec4:	ldr	r3, [sl, r4]
    4ec8:	mov	r1, r5
    4ecc:	ldr	r0, [r3, #272]	; 0x110
    4ed0:	bl	0 <coda_type_record_add_field>
    4ed4:	ldr	r0, [pc, #1700]	; 5580 <coda_grib_reopen+0x3c70>
    4ed8:	bl	0 <coda_type_record_field_new>
    4edc:	ldr	r3, [sl, r4]
    4ee0:	ldr	r1, [r3, #28]
    4ee4:	mov	r5, r0
    4ee8:	bl	0 <coda_type_record_field_set_type>
    4eec:	ldr	r3, [sl, r4]
    4ef0:	mov	r1, r5
    4ef4:	ldr	r0, [r3, #272]	; 0x110
    4ef8:	bl	0 <coda_type_record_add_field>
    4efc:	ldr	r0, [pc, #1664]	; 5584 <coda_grib_reopen+0x3c74>
    4f00:	bl	0 <coda_type_record_field_new>
    4f04:	ldr	r3, [sl, r4]
    4f08:	ldr	r1, [r3, #32]
    4f0c:	mov	r5, r0
    4f10:	bl	0 <coda_type_record_field_set_type>
    4f14:	ldr	r3, [sl, r4]
    4f18:	mov	r1, r5
    4f1c:	ldr	r0, [r3, #272]	; 0x110
    4f20:	bl	0 <coda_type_record_add_field>
    4f24:	ldr	r0, [pc, #1628]	; 5588 <coda_grib_reopen+0x3c78>
    4f28:	bl	0 <coda_type_record_field_new>
    4f2c:	ldr	r3, [sl, r4]
    4f30:	ldr	r1, [r3, #36]	; 0x24
    4f34:	mov	r5, r0
    4f38:	bl	0 <coda_type_record_field_set_type>
    4f3c:	ldr	r3, [sl, r4]
    4f40:	mov	r1, r5
    4f44:	ldr	r0, [r3, #272]	; 0x110
    4f48:	bl	0 <coda_type_record_add_field>
    4f4c:	ldr	r0, [pc, #1592]	; 558c <coda_grib_reopen+0x3c7c>
    4f50:	bl	0 <coda_type_record_field_new>
    4f54:	ldr	r3, [sl, r4]
    4f58:	ldr	r1, [r3, #40]	; 0x28
    4f5c:	mov	r5, r0
    4f60:	bl	0 <coda_type_record_field_set_type>
    4f64:	ldr	r3, [sl, r4]
    4f68:	mov	r1, r5
    4f6c:	ldr	r0, [r3, #272]	; 0x110
    4f70:	bl	0 <coda_type_record_add_field>
    4f74:	ldr	r0, [pc, #1556]	; 5590 <coda_grib_reopen+0x3c80>
    4f78:	bl	0 <coda_type_record_field_new>
    4f7c:	ldr	r3, [sl, r4]
    4f80:	ldr	r1, [r3, #48]	; 0x30
    4f84:	mov	r5, r0
    4f88:	bl	0 <coda_type_record_field_set_type>
    4f8c:	ldr	r3, [sl, r4]
    4f90:	mov	r1, r5
    4f94:	ldr	r0, [r3, #272]	; 0x110
    4f98:	bl	0 <coda_type_record_add_field>
    4f9c:	ldr	r0, [pc, #1520]	; 5594 <coda_grib_reopen+0x3c84>
    4fa0:	bl	0 <coda_type_record_field_new>
    4fa4:	ldr	r3, [sl, r4]
    4fa8:	ldr	r1, [r3, #52]	; 0x34
    4fac:	mov	r5, r0
    4fb0:	bl	0 <coda_type_record_field_set_type>
    4fb4:	ldr	r3, [sl, r4]
    4fb8:	mov	r1, r5
    4fbc:	ldr	r0, [r3, #272]	; 0x110
    4fc0:	bl	0 <coda_type_record_add_field>
    4fc4:	ldr	r0, [pc, #1484]	; 5598 <coda_grib_reopen+0x3c88>
    4fc8:	bl	0 <coda_type_record_field_new>
    4fcc:	ldr	r3, [sl, r4]
    4fd0:	ldr	r1, [r3, #56]	; 0x38
    4fd4:	mov	r5, r0
    4fd8:	bl	0 <coda_type_record_field_set_type>
    4fdc:	ldr	r3, [sl, r4]
    4fe0:	mov	r1, r5
    4fe4:	ldr	r0, [r3, #272]	; 0x110
    4fe8:	bl	0 <coda_type_record_add_field>
    4fec:	ldr	r0, [pc, #1448]	; 559c <coda_grib_reopen+0x3c8c>
    4ff0:	bl	0 <coda_type_record_field_new>
    4ff4:	ldr	r3, [sl, r4]
    4ff8:	ldr	r1, [r3, #60]	; 0x3c
    4ffc:	mov	r5, r0
    5000:	bl	0 <coda_type_record_field_set_type>
    5004:	ldr	r3, [sl, r4]
    5008:	mov	r1, r5
    500c:	ldr	r0, [r3, #272]	; 0x110
    5010:	bl	0 <coda_type_record_add_field>
    5014:	ldr	r0, [pc, #1412]	; 55a0 <coda_grib_reopen+0x3c90>
    5018:	bl	0 <coda_type_record_field_new>
    501c:	ldr	r3, [sl, r4]
    5020:	ldr	r1, [r3, #68]	; 0x44
    5024:	mov	r5, r0
    5028:	bl	0 <coda_type_record_field_set_type>
    502c:	ldr	r3, [sl, r4]
    5030:	mov	r1, r5
    5034:	ldr	r0, [r3, #272]	; 0x110
    5038:	bl	0 <coda_type_record_add_field>
    503c:	ldr	r0, [pc, #1376]	; 55a4 <coda_grib_reopen+0x3c94>
    5040:	bl	0 <coda_type_record_field_new>
    5044:	ldr	r3, [sl, r4]
    5048:	ldr	r1, [r3, #72]	; 0x48
    504c:	mov	r5, r0
    5050:	bl	0 <coda_type_record_field_set_type>
    5054:	ldr	r3, [sl, r4]
    5058:	mov	r1, r5
    505c:	ldr	r0, [r3, #272]	; 0x110
    5060:	bl	0 <coda_type_record_add_field>
    5064:	ldr	r0, [pc, #1340]	; 55a8 <coda_grib_reopen+0x3c98>
    5068:	bl	0 <coda_type_record_field_new>
    506c:	ldr	r3, [sl, r4]
    5070:	ldr	r1, [r3, #76]	; 0x4c
    5074:	mov	r5, r0
    5078:	bl	0 <coda_type_record_field_set_type>
    507c:	ldr	r3, [sl, r4]
    5080:	mov	r1, r5
    5084:	ldr	r0, [r3, #272]	; 0x110
    5088:	bl	0 <coda_type_record_add_field>
    508c:	ldr	r0, [pc, #1304]	; 55ac <coda_grib_reopen+0x3c9c>
    5090:	bl	0 <coda_type_record_field_new>
    5094:	ldr	r3, [sl, r4]
    5098:	ldr	r1, [r3, #80]	; 0x50
    509c:	mov	r5, r0
    50a0:	bl	0 <coda_type_record_field_set_type>
    50a4:	ldr	r3, [sl, r4]
    50a8:	mov	r1, r5
    50ac:	ldr	r0, [r3, #272]	; 0x110
    50b0:	bl	0 <coda_type_record_add_field>
    50b4:	ldr	r0, [pc, #1268]	; 55b0 <coda_grib_reopen+0x3ca0>
    50b8:	bl	0 <coda_type_record_field_new>
    50bc:	ldr	r3, [sl, r4]
    50c0:	ldr	r1, [r3, #84]	; 0x54
    50c4:	mov	r5, r0
    50c8:	bl	0 <coda_type_record_field_set_type>
    50cc:	ldr	r3, [sl, r4]
    50d0:	mov	r1, r5
    50d4:	ldr	r0, [r3, #272]	; 0x110
    50d8:	bl	0 <coda_type_record_add_field>
    50dc:	ldr	r0, [pc, #1232]	; 55b4 <coda_grib_reopen+0x3ca4>
    50e0:	bl	0 <coda_type_record_field_new>
    50e4:	ldr	r3, [sl, r4]
    50e8:	ldr	r1, [r3, #88]	; 0x58
    50ec:	mov	r5, r0
    50f0:	bl	0 <coda_type_record_field_set_type>
    50f4:	ldr	r3, [sl, r4]
    50f8:	mov	r1, r5
    50fc:	ldr	r0, [r3, #272]	; 0x110
    5100:	bl	0 <coda_type_record_add_field>
    5104:	ldr	r0, [pc, #1196]	; 55b8 <coda_grib_reopen+0x3ca8>
    5108:	bl	0 <coda_type_record_field_new>
    510c:	ldr	r3, [sl, r4]
    5110:	ldr	r1, [r3, #92]	; 0x5c
    5114:	mov	r5, r0
    5118:	bl	0 <coda_type_record_field_set_type>
    511c:	ldr	r3, [sl, r4]
    5120:	mov	r1, r5
    5124:	ldr	r0, [r3, #272]	; 0x110
    5128:	bl	0 <coda_type_record_add_field>
    512c:	ldr	r0, [pc, #1160]	; 55bc <coda_grib_reopen+0x3cac>
    5130:	bl	0 <coda_type_record_field_new>
    5134:	ldr	r3, [sl, r4]
    5138:	ldr	r1, [r3, #96]	; 0x60
    513c:	mov	r5, r0
    5140:	bl	0 <coda_type_record_field_set_type>
    5144:	ldr	r3, [sl, r4]
    5148:	mov	r1, r5
    514c:	ldr	r0, [r3, #272]	; 0x110
    5150:	bl	0 <coda_type_record_add_field>
    5154:	ldr	r0, [pc, #1124]	; 55c0 <coda_grib_reopen+0x3cb0>
    5158:	bl	0 <coda_type_record_field_new>
    515c:	ldr	r3, [sl, r4]
    5160:	ldr	r1, [r3, #100]	; 0x64
    5164:	mov	r5, r0
    5168:	bl	0 <coda_type_record_field_set_type>
    516c:	mov	r0, r5
    5170:	bl	0 <coda_type_record_field_set_hidden>
    5174:	ldr	r3, [sl, r4]
    5178:	mov	r1, r5
    517c:	ldr	r0, [r3, #272]	; 0x110
    5180:	bl	0 <coda_type_record_add_field>
    5184:	ldr	r0, [pc, #1080]	; 55c4 <coda_grib_reopen+0x3cb4>
    5188:	bl	0 <coda_type_record_field_new>
    518c:	ldr	r3, [sl, r4]
    5190:	ldr	r1, [r3, #128]	; 0x80
    5194:	mov	r5, r0
    5198:	bl	0 <coda_type_record_field_set_type>
    519c:	mov	r0, r5
    51a0:	bl	0 <coda_type_record_field_set_optional>
    51a4:	ldr	r3, [sl, r4]
    51a8:	mov	r1, r5
    51ac:	ldr	r0, [r3, #272]	; 0x110
    51b0:	bl	0 <coda_type_record_add_field>
    51b4:	ldr	r0, [pc, #1036]	; 55c8 <coda_grib_reopen+0x3cb8>
    51b8:	bl	0 <coda_type_record_field_new>
    51bc:	ldr	r3, [sl, r4]
    51c0:	ldr	r1, [r3, #264]	; 0x108
    51c4:	mov	r5, r0
    51c8:	bl	0 <coda_type_record_field_set_type>
    51cc:	mov	r0, r5
    51d0:	bl	0 <coda_type_record_field_set_optional>
    51d4:	ldr	r3, [sl, r4]
    51d8:	mov	r1, r5
    51dc:	ldr	r0, [r3, #272]	; 0x110
    51e0:	bl	0 <coda_type_record_add_field>
    51e4:	ldr	r0, [pc, #992]	; 55cc <coda_grib_reopen+0x3cbc>
    51e8:	bl	0 <coda_type_record_field_new>
    51ec:	ldr	r3, [sl, r4]
    51f0:	ldr	r1, [r3, #268]	; 0x10c
    51f4:	mov	r5, r0
    51f8:	bl	0 <coda_type_record_field_set_type>
    51fc:	ldr	r3, [sl, r4]
    5200:	mov	r1, r5
    5204:	ldr	r0, [r3, #272]	; 0x110
    5208:	bl	0 <coda_type_record_add_field>
    520c:	mov	r1, #2
    5210:	mov	r0, #7
    5214:	ldr	r5, [sl, r4]
    5218:	bl	0 <coda_type_number_new>
    521c:	ldr	r3, [sl, r4]
    5220:	mov	r1, #1
    5224:	str	r0, [r5, #276]	; 0x114
    5228:	ldr	r0, [r3, #276]	; 0x114
    522c:	bl	0 <coda_type_number_set_endianness>
    5230:	ldr	r3, [sl, r4]
    5234:	mov	r1, #4
    5238:	ldr	r0, [r3, #276]	; 0x114
    523c:	bl	0 <coda_type_set_read_type>
    5240:	ldr	r1, [sl, r4]
    5244:	mov	r2, #32
    5248:	mov	r3, #0
    524c:	ldr	r0, [r1, #276]	; 0x114
    5250:	bl	0 <coda_type_set_bit_size>
    5254:	mov	r1, #2
    5258:	mov	r0, #7
    525c:	ldr	r5, [sl, r4]
    5260:	bl	0 <coda_type_number_new>
    5264:	ldr	r3, [sl, r4]
    5268:	mov	r1, #1
    526c:	str	r0, [r5, #280]	; 0x118
    5270:	ldr	r0, [r3, #280]	; 0x118
    5274:	bl	0 <coda_type_number_set_endianness>
    5278:	ldr	r3, [sl, r4]
    527c:	mov	r1, #5
    5280:	ldr	r0, [r3, #280]	; 0x118
    5284:	bl	0 <coda_type_set_read_type>
    5288:	ldr	r1, [sl, r4]
    528c:	mov	r2, #32
    5290:	mov	r3, #0
    5294:	ldr	r0, [r1, #280]	; 0x118
    5298:	bl	0 <coda_type_set_bit_size>
    529c:	mov	r1, #2
    52a0:	mov	r0, #7
    52a4:	ldr	r5, [sl, r4]
    52a8:	bl	0 <coda_type_number_new>
    52ac:	ldr	r3, [sl, r4]
    52b0:	mov	r1, #1
    52b4:	str	r0, [r5, #284]	; 0x11c
    52b8:	ldr	r0, [r3, #284]	; 0x11c
    52bc:	bl	0 <coda_type_number_set_endianness>
    52c0:	ldr	r3, [sl, r4]
    52c4:	mov	r1, #1
    52c8:	ldr	r0, [r3, #284]	; 0x11c
    52cc:	bl	0 <coda_type_set_read_type>
    52d0:	ldr	r1, [sl, r4]
    52d4:	mov	r2, #8
    52d8:	mov	r3, #0
    52dc:	ldr	r0, [r1, #284]	; 0x11c
    52e0:	bl	0 <coda_type_set_bit_size>
    52e4:	ldr	r3, [sl, r4]
    52e8:	ldr	r1, [pc, #736]	; 55d0 <coda_grib_reopen+0x3cc0>
    52ec:	ldr	r0, [r3, #284]	; 0x11c
    52f0:	bl	0 <coda_type_set_description>
    52f4:	mov	r1, #2
    52f8:	mov	r0, #7
    52fc:	ldr	r5, [sl, r4]
    5300:	bl	0 <coda_type_number_new>
    5304:	ldr	r3, [sl, r4]
    5308:	mov	r1, #1
    530c:	str	r0, [r5, #288]	; 0x120
    5310:	ldr	r0, [r3, #288]	; 0x120
    5314:	bl	0 <coda_type_number_set_endianness>
    5318:	ldr	r3, [sl, r4]
    531c:	mov	r1, #3
    5320:	ldr	r0, [r3, #288]	; 0x120
    5324:	bl	0 <coda_type_set_read_type>
    5328:	ldr	r1, [sl, r4]
    532c:	mov	r2, #16
    5330:	mov	r3, #0
    5334:	ldr	r0, [r1, #288]	; 0x120
    5338:	bl	0 <coda_type_set_bit_size>
    533c:	ldr	r3, [sl, r4]
    5340:	ldr	r1, [pc, #652]	; 55d4 <coda_grib_reopen+0x3cc4>
    5344:	ldr	r0, [r3, #288]	; 0x120
    5348:	bl	0 <coda_type_set_description>
    534c:	mov	r1, #2
    5350:	mov	r0, #7
    5354:	ldr	r5, [sl, r4]
    5358:	bl	0 <coda_type_number_new>
    535c:	ldr	r3, [sl, r4]
    5360:	mov	r1, #1
    5364:	str	r0, [r5, #292]	; 0x124
    5368:	ldr	r0, [r3, #292]	; 0x124
    536c:	bl	0 <coda_type_number_set_endianness>
    5370:	ldr	r3, [sl, r4]
    5374:	mov	r1, #3
    5378:	ldr	r0, [r3, #292]	; 0x124
    537c:	bl	0 <coda_type_set_read_type>
    5380:	ldr	r1, [sl, r4]
    5384:	mov	r2, #16
    5388:	mov	r3, #0
    538c:	ldr	r0, [r1, #292]	; 0x124
    5390:	bl	0 <coda_type_set_bit_size>
    5394:	ldr	r3, [sl, r4]
    5398:	ldr	r1, [pc, #568]	; 55d8 <coda_grib_reopen+0x3cc8>
    539c:	ldr	r0, [r3, #292]	; 0x124
    53a0:	bl	0 <coda_type_set_description>
    53a4:	mov	r1, #2
    53a8:	mov	r0, #7
    53ac:	ldr	r5, [sl, r4]
    53b0:	bl	0 <coda_type_number_new>
    53b4:	ldr	r3, [sl, r4]
    53b8:	mov	r1, #1
    53bc:	str	r0, [r5, #296]	; 0x128
    53c0:	ldr	r0, [r3, #296]	; 0x128
    53c4:	bl	0 <coda_type_number_set_endianness>
    53c8:	ldr	r3, [sl, r4]
    53cc:	mov	r1, #1
    53d0:	ldr	r0, [r3, #296]	; 0x128
    53d4:	bl	0 <coda_type_set_read_type>
    53d8:	ldr	r1, [sl, r4]
    53dc:	mov	r2, #8
    53e0:	mov	r3, #0
    53e4:	ldr	r0, [r1, #296]	; 0x128
    53e8:	bl	0 <coda_type_set_bit_size>
    53ec:	ldr	r3, [sl, r4]
    53f0:	ldr	r1, [pc, #484]	; 55dc <coda_grib_reopen+0x3ccc>
    53f4:	ldr	r0, [r3, #296]	; 0x128
    53f8:	bl	0 <coda_type_set_description>
    53fc:	mov	r1, #2
    5400:	mov	r0, #7
    5404:	ldr	r5, [sl, r4]
    5408:	bl	0 <coda_type_number_new>
    540c:	ldr	r3, [sl, r4]
    5410:	mov	r1, #1
    5414:	str	r0, [r5, #300]	; 0x12c
    5418:	ldr	r0, [r3, #300]	; 0x12c
    541c:	bl	0 <coda_type_number_set_endianness>
    5420:	ldr	r3, [sl, r4]
    5424:	mov	r1, #1
    5428:	ldr	r0, [r3, #300]	; 0x12c
    542c:	bl	0 <coda_type_set_read_type>
    5430:	ldr	r1, [sl, r4]
    5434:	mov	r2, #8
    5438:	mov	r3, #0
    543c:	ldr	r0, [r1, #300]	; 0x12c
    5440:	bl	0 <coda_type_set_bit_size>
    5444:	ldr	r3, [sl, r4]
    5448:	ldr	r1, [pc, #400]	; 55e0 <coda_grib_reopen+0x3cd0>
    544c:	ldr	r0, [r3, #300]	; 0x12c
    5450:	bl	0 <coda_type_set_description>
    5454:	mov	r1, #2
    5458:	mov	r0, #7
    545c:	ldr	r5, [sl, r4]
    5460:	bl	0 <coda_type_number_new>
    5464:	ldr	r3, [sl, r4]
    5468:	mov	r1, #1
    546c:	str	r0, [r5, #304]	; 0x130
    5470:	ldr	r0, [r3, #304]	; 0x130
    5474:	bl	0 <coda_type_number_set_endianness>
    5478:	ldr	r3, [sl, r4]
    547c:	mov	r1, #1
    5480:	ldr	r0, [r3, #304]	; 0x130
    5484:	bl	0 <coda_type_set_read_type>
    5488:	ldr	r1, [sl, r4]
    548c:	mov	r2, #8
    5490:	mov	r3, #0
    5494:	ldr	r0, [r1, #304]	; 0x130
    5498:	bl	0 <coda_type_set_bit_size>
    549c:	ldr	r3, [sl, r4]
    54a0:	ldr	r1, [pc, #316]	; 55e4 <coda_grib_reopen+0x3cd4>
    54a4:	ldr	r0, [r3, #304]	; 0x130
    54a8:	bl	0 <coda_type_set_description>
    54ac:	mov	r1, #2
    54b0:	mov	r0, #7
    54b4:	ldr	r5, [sl, r4]
    54b8:	bl	0 <coda_type_number_new>
    54bc:	ldr	r3, [sl, r4]
    54c0:	mov	r1, #1
    54c4:	str	r0, [r5, #308]	; 0x134
    54c8:	ldr	r0, [r3, #308]	; 0x134
    54cc:	bl	0 <coda_type_number_set_endianness>
    54d0:	ldr	r3, [sl, r4]
    54d4:	mov	r1, #1
    54d8:	ldr	r0, [r3, #308]	; 0x134
    54dc:	bl	0 <coda_type_set_read_type>
    54e0:	ldr	r1, [sl, r4]
    54e4:	mov	r2, #8
    54e8:	mov	r3, #0
    54ec:	ldr	r0, [r1, #308]	; 0x134
    54f0:	bl	0 <coda_type_set_bit_size>
    54f4:	ldr	r3, [sl, r4]
    54f8:	b	5688 <coda_grib_reopen+0x3d78>
    54fc:	.word	0x00000dd0
    5500:	.word	0x00000df0
    5504:	.word	0x00000e4c
    5508:	.word	0x00000eac
    550c:	.word	0x00001008
    5510:	.word	0x000010ac
    5514:	.word	0x000010cc
    5518:	.word	0x00001100
    551c:	.word	0x00001120
    5520:	.word	0x00000308
    5524:	.word	0x0000032c
    5528:	.word	0x00000390
    552c:	.word	0x00000394
    5530:	.word	0x00000398
    5534:	.word	0x000003b4
    5538:	.word	0x000003d0
    553c:	.word	0x000003ec
    5540:	.word	0x00000404
    5544:	.word	0x00000420
    5548:	.word	0x00000438
    554c:	.word	0x00000434
    5550:	.word	0x0000044c
    5554:	.word	0x0000045c
    5558:	.word	0x0000050c
    555c:	.word	0x00000744
    5560:	.word	0x00000754
    5564:	.word	0x00000768
    5568:	.word	0x00000778
    556c:	.word	0x00001198
    5570:	.word	0x00000128
    5574:	.word	0x00000138
    5578:	.word	0x00000140
    557c:	.word	0x0000015c
    5580:	.word	0x0000016c
    5584:	.word	0x00000184
    5588:	.word	0x0000019c
    558c:	.word	0x000001a4
    5590:	.word	0x000001b4
    5594:	.word	0x000001bc
    5598:	.word	0x000001c0
    559c:	.word	0x000001c8
    55a0:	.word	0x000001d0
    55a4:	.word	0x000001e0
    55a8:	.word	0x000001e4
    55ac:	.word	0x000001e8
    55b0:	.word	0x000001fc
    55b4:	.word	0x00000214
    55b8:	.word	0x00000240
    55bc:	.word	0x00000260
    55c0:	.word	0x0000026c
    55c4:	.word	0x00000300
    55c8:	.word	0x0000057c
    55cc:	.word	0x00000780
    55d0:	.word	0x00000858
    55d4:	.word	0x000011a8
    55d8:	.word	0x00000944
    55dc:	.word	0x0000094c
    55e0:	.word	0x0000095c
    55e4:	.word	0x0000096c
    55e8:	.word	0x00000978
    55ec:	.word	0x00000988
    55f0:	.word	0x000011d8
    55f4:	.word	0x00000b24
    55f8:	.word	0x00000b40
    55fc:	.word	0x00000b5c
    5600:	.word	0x00000b80
    5604:	.word	0x00000ba4
    5608:	.word	0x00000bc4
    560c:	.word	0x00000c00
    5610:	.word	0x00000c2c
    5614:	.word	0x00000c50
    5618:	.word	0x00000c80
    561c:	.word	0x00000c9c
    5620:	.word	0x00000cc4
    5624:	.word	0x00000cf0
    5628:	.word	0x00000d60
    562c:	.word	0x00000dd0
    5630:	.word	0x00000df0
    5634:	.word	0x00000e4c
    5638:	.word	0x00000eac
    563c:	.word	0x00000f20
    5640:	.word	0x00000f90
    5644:	.word	0x00000ff4
    5648:	.word	0x00001030
    564c:	.word	0x00001078
    5650:	.word	0x00001094
    5654:	.word	0x0000123c
    5658:	.word	0x00001278
    565c:	.word	0x0000128c
    5660:	.word	0x000012a0
    5664:	.word	0x000012bc
    5668:	.word	0x000012e8
    566c:	.word	0x0000131c
    5670:	.word	0x00001358
    5674:	.word	0x00001394
    5678:	.word	0x000013b4
    567c:	.word	0x000013f4
    5680:	.word	0x00001410
    5684:	.word	0x00001424
    5688:	ldr	r1, [pc, #-168]	; 55e8 <coda_grib_reopen+0x3cd8>
    568c:	ldr	r0, [r3, #308]	; 0x134
    5690:	bl	0 <coda_type_set_description>
    5694:	mov	r1, #2
    5698:	mov	r0, #7
    569c:	ldr	r5, [sl, r4]
    56a0:	bl	0 <coda_type_number_new>
    56a4:	ldr	r3, [sl, r4]
    56a8:	mov	r1, #1
    56ac:	str	r0, [r5, #312]	; 0x138
    56b0:	ldr	r0, [r3, #312]	; 0x138
    56b4:	bl	0 <coda_type_number_set_endianness>
    56b8:	ldr	r3, [sl, r4]
    56bc:	mov	r1, #1
    56c0:	ldr	r0, [r3, #312]	; 0x138
    56c4:	bl	0 <coda_type_set_read_type>
    56c8:	ldr	r1, [sl, r4]
    56cc:	mov	r2, #8
    56d0:	mov	r3, #0
    56d4:	ldr	r0, [r1, #312]	; 0x138
    56d8:	bl	0 <coda_type_set_bit_size>
    56dc:	ldr	r3, [sl, r4]
    56e0:	ldr	r1, [pc, #-252]	; 55ec <coda_grib_reopen+0x3cdc>
    56e4:	ldr	r0, [r3, #312]	; 0x138
    56e8:	bl	0 <coda_type_set_description>
    56ec:	mov	r1, #2
    56f0:	mov	r0, #7
    56f4:	ldr	r5, [sl, r4]
    56f8:	bl	0 <coda_type_number_new>
    56fc:	ldr	r3, [sl, r4]
    5700:	mov	r1, #1
    5704:	str	r0, [r5, #316]	; 0x13c
    5708:	ldr	r0, [r3, #316]	; 0x13c
    570c:	bl	0 <coda_type_number_set_endianness>
    5710:	ldr	r3, [sl, r4]
    5714:	mov	r1, #3
    5718:	ldr	r0, [r3, #316]	; 0x13c
    571c:	bl	0 <coda_type_set_read_type>
    5720:	ldr	r1, [sl, r4]
    5724:	mov	r2, #16
    5728:	mov	r3, #0
    572c:	ldr	r0, [r1, #316]	; 0x13c
    5730:	bl	0 <coda_type_set_bit_size>
    5734:	ldr	r3, [sl, r4]
    5738:	ldr	r1, [pc, #-336]	; 55f0 <coda_grib_reopen+0x3ce0>
    573c:	ldr	r0, [r3, #316]	; 0x13c
    5740:	bl	0 <coda_type_set_description>
    5744:	mov	r1, #2
    5748:	mov	r0, #7
    574c:	ldr	r5, [sl, r4]
    5750:	bl	0 <coda_type_number_new>
    5754:	ldr	r3, [sl, r4]
    5758:	mov	r1, #1
    575c:	str	r0, [r5, #320]	; 0x140
    5760:	ldr	r0, [r3, #320]	; 0x140
    5764:	bl	0 <coda_type_number_set_endianness>
    5768:	ldr	r3, [sl, r4]
    576c:	mov	r1, #2
    5770:	ldr	r0, [r3, #320]	; 0x140
    5774:	bl	0 <coda_type_set_read_type>
    5778:	ldr	r1, [sl, r4]
    577c:	mov	r2, #16
    5780:	mov	r3, #0
    5784:	ldr	r0, [r1, #320]	; 0x140
    5788:	bl	0 <coda_type_set_bit_size>
    578c:	ldr	r3, [sl, r4]
    5790:	ldr	r1, [pc, #-420]	; 55f4 <coda_grib_reopen+0x3ce4>
    5794:	ldr	r0, [r3, #320]	; 0x140
    5798:	bl	0 <coda_type_set_description>
    579c:	mov	r1, #2
    57a0:	mov	r0, #7
    57a4:	ldr	r5, [sl, r4]
    57a8:	bl	0 <coda_type_number_new>
    57ac:	ldr	r3, [sl, r4]
    57b0:	mov	r1, #1
    57b4:	str	r0, [r5, #324]	; 0x144
    57b8:	ldr	r0, [r3, #324]	; 0x144
    57bc:	bl	0 <coda_type_number_set_endianness>
    57c0:	ldr	r3, [sl, r4]
    57c4:	mov	r1, #1
    57c8:	ldr	r0, [r3, #324]	; 0x144
    57cc:	bl	0 <coda_type_set_read_type>
    57d0:	ldr	r1, [sl, r4]
    57d4:	mov	r2, #8
    57d8:	mov	r3, #0
    57dc:	ldr	r0, [r1, #324]	; 0x144
    57e0:	bl	0 <coda_type_set_bit_size>
    57e4:	ldr	r3, [sl, r4]
    57e8:	ldr	r1, [pc, #-504]	; 55f8 <coda_grib_reopen+0x3ce8>
    57ec:	ldr	r0, [r3, #324]	; 0x144
    57f0:	bl	0 <coda_type_set_description>
    57f4:	mov	r1, #2
    57f8:	mov	r0, #7
    57fc:	ldr	r5, [sl, r4]
    5800:	bl	0 <coda_type_number_new>
    5804:	ldr	r3, [sl, r4]
    5808:	mov	r1, #1
    580c:	str	r0, [r5, #328]	; 0x148
    5810:	ldr	r0, [r3, #328]	; 0x148
    5814:	bl	0 <coda_type_number_set_endianness>
    5818:	ldr	r3, [sl, r4]
    581c:	mov	r1, #1
    5820:	ldr	r0, [r3, #328]	; 0x148
    5824:	bl	0 <coda_type_set_read_type>
    5828:	ldr	r1, [sl, r4]
    582c:	mov	r2, #8
    5830:	mov	r3, #0
    5834:	ldr	r0, [r1, #328]	; 0x148
    5838:	bl	0 <coda_type_set_bit_size>
    583c:	ldr	r3, [sl, r4]
    5840:	ldr	r1, [pc, #-588]	; 55fc <coda_grib_reopen+0x3cec>
    5844:	ldr	r0, [r3, #328]	; 0x148
    5848:	bl	0 <coda_type_set_description>
    584c:	mov	r1, #2
    5850:	mov	r0, #7
    5854:	ldr	r5, [sl, r4]
    5858:	bl	0 <coda_type_number_new>
    585c:	ldr	r3, [sl, r4]
    5860:	mov	r1, #1
    5864:	str	r0, [r5, #332]	; 0x14c
    5868:	ldr	r0, [r3, #332]	; 0x14c
    586c:	bl	0 <coda_type_number_set_endianness>
    5870:	ldr	r3, [sl, r4]
    5874:	mov	r1, #1
    5878:	ldr	r0, [r3, #332]	; 0x14c
    587c:	bl	0 <coda_type_set_read_type>
    5880:	ldr	r1, [sl, r4]
    5884:	mov	r2, #8
    5888:	mov	r3, #0
    588c:	ldr	r0, [r1, #332]	; 0x14c
    5890:	bl	0 <coda_type_set_bit_size>
    5894:	ldr	r3, [sl, r4]
    5898:	ldr	r1, [pc, #-672]	; 5600 <coda_grib_reopen+0x3cf0>
    589c:	ldr	r0, [r3, #332]	; 0x14c
    58a0:	bl	0 <coda_type_set_description>
    58a4:	mov	r1, #2
    58a8:	mov	r0, #7
    58ac:	ldr	r5, [sl, r4]
    58b0:	bl	0 <coda_type_number_new>
    58b4:	ldr	r3, [sl, r4]
    58b8:	mov	r1, #1
    58bc:	str	r0, [r5, #336]	; 0x150
    58c0:	ldr	r0, [r3, #336]	; 0x150
    58c4:	bl	0 <coda_type_number_set_endianness>
    58c8:	ldr	r3, [sl, r4]
    58cc:	mov	r1, #1
    58d0:	ldr	r0, [r3, #336]	; 0x150
    58d4:	bl	0 <coda_type_set_read_type>
    58d8:	ldr	r1, [sl, r4]
    58dc:	mov	r2, #8
    58e0:	mov	r3, #0
    58e4:	ldr	r0, [r1, #336]	; 0x150
    58e8:	bl	0 <coda_type_set_bit_size>
    58ec:	ldr	r3, [sl, r4]
    58f0:	ldr	r1, [pc, #-756]	; 5604 <coda_grib_reopen+0x3cf4>
    58f4:	ldr	r0, [r3, #336]	; 0x150
    58f8:	bl	0 <coda_type_set_description>
    58fc:	mov	r1, #2
    5900:	mov	r0, #7
    5904:	ldr	r5, [sl, r4]
    5908:	bl	0 <coda_type_number_new>
    590c:	ldr	r3, [sl, r4]
    5910:	mov	r1, #1
    5914:	str	r0, [r5, #340]	; 0x154
    5918:	ldr	r0, [r3, #340]	; 0x154
    591c:	bl	0 <coda_type_number_set_endianness>
    5920:	ldr	r3, [sl, r4]
    5924:	mov	r1, #1
    5928:	ldr	r0, [r3, #340]	; 0x154
    592c:	bl	0 <coda_type_set_read_type>
    5930:	ldr	r1, [sl, r4]
    5934:	mov	r2, #8
    5938:	mov	r3, #0
    593c:	ldr	r0, [r1, #340]	; 0x154
    5940:	bl	0 <coda_type_set_bit_size>
    5944:	ldr	r3, [sl, r4]
    5948:	ldr	r1, [pc, #-840]	; 5608 <coda_grib_reopen+0x3cf8>
    594c:	ldr	r0, [r3, #340]	; 0x154
    5950:	bl	0 <coda_type_set_description>
    5954:	mov	r1, #2
    5958:	mov	r0, #7
    595c:	ldr	r5, [sl, r4]
    5960:	bl	0 <coda_type_number_new>
    5964:	ldr	r3, [sl, r4]
    5968:	mov	r1, #1
    596c:	str	r0, [r5, #344]	; 0x158
    5970:	ldr	r0, [r3, #344]	; 0x158
    5974:	bl	0 <coda_type_number_set_endianness>
    5978:	ldr	r3, [sl, r4]
    597c:	mov	r1, #1
    5980:	ldr	r0, [r3, #344]	; 0x158
    5984:	bl	0 <coda_type_set_read_type>
    5988:	ldr	r1, [sl, r4]
    598c:	mov	r2, #8
    5990:	mov	r3, #0
    5994:	ldr	r0, [r1, #344]	; 0x158
    5998:	bl	0 <coda_type_set_bit_size>
    599c:	ldr	r3, [sl, r4]
    59a0:	ldr	r1, [pc, #-924]	; 560c <coda_grib_reopen+0x3cfc>
    59a4:	ldr	r0, [r3, #344]	; 0x158
    59a8:	bl	0 <coda_type_set_description>
    59ac:	mov	r0, #7
    59b0:	ldr	r5, [sl, r4]
    59b4:	bl	0 <coda_type_raw_new>
    59b8:	ldr	r3, [sl, r4]
    59bc:	ldr	r1, [pc, #-948]	; 5610 <coda_grib_reopen+0x3d00>
    59c0:	str	r0, [r5, #348]	; 0x15c
    59c4:	ldr	r0, [r3, #348]	; 0x15c
    59c8:	bl	0 <coda_type_set_description>
    59cc:	mov	r1, #2
    59d0:	mov	r0, #7
    59d4:	ldr	r5, [sl, r4]
    59d8:	bl	0 <coda_type_number_new>
    59dc:	ldr	r3, [sl, r4]
    59e0:	mov	r1, #1
    59e4:	str	r0, [r5, #352]	; 0x160
    59e8:	ldr	r0, [r3, #352]	; 0x160
    59ec:	bl	0 <coda_type_number_set_endianness>
    59f0:	ldr	r3, [sl, r4]
    59f4:	mov	r1, #1
    59f8:	ldr	r0, [r3, #352]	; 0x160
    59fc:	bl	0 <coda_type_set_read_type>
    5a00:	ldr	r1, [sl, r4]
    5a04:	mov	r2, #8
    5a08:	mov	r3, #0
    5a0c:	ldr	r0, [r1, #352]	; 0x160
    5a10:	bl	0 <coda_type_set_bit_size>
    5a14:	ldr	r3, [sl, r4]
    5a18:	ldr	r1, [pc, #-1036]	; 5614 <coda_grib_reopen+0x3d04>
    5a1c:	ldr	r0, [r3, #352]	; 0x160
    5a20:	bl	0 <coda_type_set_description>
    5a24:	mov	r1, #2
    5a28:	mov	r0, #7
    5a2c:	ldr	r5, [sl, r4]
    5a30:	bl	0 <coda_type_number_new>
    5a34:	ldr	r3, [sl, r4]
    5a38:	mov	r1, #1
    5a3c:	str	r0, [r5, #356]	; 0x164
    5a40:	ldr	r0, [r3, #356]	; 0x164
    5a44:	bl	0 <coda_type_number_set_endianness>
    5a48:	ldr	r3, [sl, r4]
    5a4c:	mov	r1, #1
    5a50:	ldr	r0, [r3, #356]	; 0x164
    5a54:	bl	0 <coda_type_set_read_type>
    5a58:	ldr	r1, [sl, r4]
    5a5c:	mov	r2, #8
    5a60:	mov	r3, #0
    5a64:	ldr	r0, [r1, #356]	; 0x164
    5a68:	bl	0 <coda_type_set_bit_size>
    5a6c:	ldr	r3, [sl, r4]
    5a70:	ldr	r1, [pc, #-1120]	; 5618 <coda_grib_reopen+0x3d08>
    5a74:	ldr	r0, [r3, #356]	; 0x164
    5a78:	bl	0 <coda_type_set_description>
    5a7c:	mov	r1, #2
    5a80:	mov	r0, #7
    5a84:	ldr	r5, [sl, r4]
    5a88:	bl	0 <coda_type_number_new>
    5a8c:	ldr	r3, [sl, r4]
    5a90:	mov	r1, #1
    5a94:	str	r0, [r5, #360]	; 0x168
    5a98:	ldr	r0, [r3, #360]	; 0x168
    5a9c:	bl	0 <coda_type_number_set_endianness>
    5aa0:	ldr	r3, [sl, r4]
    5aa4:	mov	r1, #1
    5aa8:	ldr	r0, [r3, #360]	; 0x168
    5aac:	bl	0 <coda_type_set_read_type>
    5ab0:	ldr	r1, [sl, r4]
    5ab4:	mov	r2, #8
    5ab8:	mov	r3, #0
    5abc:	ldr	r0, [r1, #360]	; 0x168
    5ac0:	bl	0 <coda_type_set_bit_size>
    5ac4:	mov	r1, #2
    5ac8:	mov	r0, #7
    5acc:	ldr	r5, [sl, r4]
    5ad0:	bl	0 <coda_type_number_new>
    5ad4:	ldr	r3, [sl, r4]
    5ad8:	mov	r1, #1
    5adc:	str	r0, [r5, #364]	; 0x16c
    5ae0:	ldr	r0, [r3, #364]	; 0x16c
    5ae4:	bl	0 <coda_type_number_set_endianness>
    5ae8:	ldr	r3, [sl, r4]
    5aec:	mov	r1, #1
    5af0:	ldr	r0, [r3, #364]	; 0x16c
    5af4:	bl	0 <coda_type_set_read_type>
    5af8:	ldr	r1, [sl, r4]
    5afc:	mov	r2, #8
    5b00:	mov	r3, #0
    5b04:	ldr	r0, [r1, #364]	; 0x16c
    5b08:	bl	0 <coda_type_set_bit_size>
    5b0c:	mov	r1, #2
    5b10:	mov	r0, #7
    5b14:	ldr	r5, [sl, r4]
    5b18:	bl	0 <coda_type_number_new>
    5b1c:	ldr	r3, [sl, r4]
    5b20:	mov	r1, #1
    5b24:	str	r0, [r5, #368]	; 0x170
    5b28:	ldr	r0, [r3, #368]	; 0x170
    5b2c:	bl	0 <coda_type_number_set_endianness>
    5b30:	ldr	r3, [sl, r4]
    5b34:	mov	r1, #5
    5b38:	ldr	r0, [r3, #368]	; 0x170
    5b3c:	bl	0 <coda_type_set_read_type>
    5b40:	ldr	r1, [sl, r4]
    5b44:	mov	r2, #32
    5b48:	mov	r3, #0
    5b4c:	ldr	r0, [r1, #368]	; 0x170
    5b50:	bl	0 <coda_type_set_bit_size>
    5b54:	mov	r1, #2
    5b58:	mov	r0, #7
    5b5c:	ldr	r5, [sl, r4]
    5b60:	bl	0 <coda_type_number_new>
    5b64:	ldr	r3, [sl, r4]
    5b68:	mov	r1, #1
    5b6c:	str	r0, [r5, #372]	; 0x174
    5b70:	ldr	r0, [r3, #372]	; 0x174
    5b74:	bl	0 <coda_type_number_set_endianness>
    5b78:	ldr	r3, [sl, r4]
    5b7c:	mov	r1, #1
    5b80:	ldr	r0, [r3, #372]	; 0x174
    5b84:	bl	0 <coda_type_set_read_type>
    5b88:	ldr	r1, [sl, r4]
    5b8c:	mov	r2, #8
    5b90:	mov	r3, #0
    5b94:	ldr	r0, [r1, #372]	; 0x174
    5b98:	bl	0 <coda_type_set_bit_size>
    5b9c:	mov	r1, #2
    5ba0:	mov	r0, #7
    5ba4:	ldr	r5, [sl, r4]
    5ba8:	bl	0 <coda_type_number_new>
    5bac:	ldr	r3, [sl, r4]
    5bb0:	mov	r1, #1
    5bb4:	str	r0, [r5, #376]	; 0x178
    5bb8:	ldr	r0, [r3, #376]	; 0x178
    5bbc:	bl	0 <coda_type_number_set_endianness>
    5bc0:	ldr	r3, [sl, r4]
    5bc4:	mov	r1, #5
    5bc8:	ldr	r0, [r3, #376]	; 0x178
    5bcc:	bl	0 <coda_type_set_read_type>
    5bd0:	ldr	r1, [sl, r4]
    5bd4:	mov	r2, #32
    5bd8:	mov	r3, #0
    5bdc:	ldr	r0, [r1, #376]	; 0x178
    5be0:	bl	0 <coda_type_set_bit_size>
    5be4:	mov	r1, #2
    5be8:	mov	r0, #7
    5bec:	ldr	r5, [sl, r4]
    5bf0:	bl	0 <coda_type_number_new>
    5bf4:	ldr	r3, [sl, r4]
    5bf8:	mov	r1, #1
    5bfc:	str	r0, [r5, #380]	; 0x17c
    5c00:	ldr	r0, [r3, #380]	; 0x17c
    5c04:	bl	0 <coda_type_number_set_endianness>
    5c08:	ldr	r3, [sl, r4]
    5c0c:	mov	r1, #1
    5c10:	ldr	r0, [r3, #380]	; 0x17c
    5c14:	bl	0 <coda_type_set_read_type>
    5c18:	ldr	r1, [sl, r4]
    5c1c:	mov	r2, #8
    5c20:	mov	r3, #0
    5c24:	ldr	r0, [r1, #380]	; 0x17c
    5c28:	bl	0 <coda_type_set_bit_size>
    5c2c:	mov	r1, #2
    5c30:	mov	r0, #7
    5c34:	ldr	r5, [sl, r4]
    5c38:	bl	0 <coda_type_number_new>
    5c3c:	ldr	r3, [sl, r4]
    5c40:	mov	r1, #1
    5c44:	str	r0, [r5, #384]	; 0x180
    5c48:	ldr	r0, [r3, #384]	; 0x180
    5c4c:	bl	0 <coda_type_number_set_endianness>
    5c50:	ldr	r3, [sl, r4]
    5c54:	mov	r1, #5
    5c58:	ldr	r0, [r3, #384]	; 0x180
    5c5c:	bl	0 <coda_type_set_read_type>
    5c60:	ldr	r1, [sl, r4]
    5c64:	mov	r2, #32
    5c68:	mov	r3, #0
    5c6c:	ldr	r0, [r1, #384]	; 0x180
    5c70:	bl	0 <coda_type_set_bit_size>
    5c74:	mov	r1, #2
    5c78:	mov	r0, #7
    5c7c:	ldr	r5, [sl, r4]
    5c80:	bl	0 <coda_type_number_new>
    5c84:	ldr	r3, [sl, r4]
    5c88:	mov	r1, #1
    5c8c:	str	r0, [r5, #388]	; 0x184
    5c90:	ldr	r0, [r3, #388]	; 0x184
    5c94:	bl	0 <coda_type_number_set_endianness>
    5c98:	ldr	r3, [sl, r4]
    5c9c:	mov	r1, #5
    5ca0:	ldr	r0, [r3, #388]	; 0x184
    5ca4:	bl	0 <coda_type_set_read_type>
    5ca8:	ldr	r1, [sl, r4]
    5cac:	mov	r2, #32
    5cb0:	mov	r3, #0
    5cb4:	ldr	r0, [r1, #388]	; 0x184
    5cb8:	bl	0 <coda_type_set_bit_size>
    5cbc:	ldr	r3, [sl, r4]
    5cc0:	ldr	r1, [pc, #-1708]	; 561c <coda_grib_reopen+0x3d0c>
    5cc4:	ldr	r0, [r3, #388]	; 0x184
    5cc8:	bl	0 <coda_type_set_description>
    5ccc:	mov	r1, #2
    5cd0:	mov	r0, #7
    5cd4:	ldr	r5, [sl, r4]
    5cd8:	bl	0 <coda_type_number_new>
    5cdc:	ldr	r3, [sl, r4]
    5ce0:	mov	r1, #1
    5ce4:	str	r0, [r5, #392]	; 0x188
    5ce8:	ldr	r0, [r3, #392]	; 0x188
    5cec:	bl	0 <coda_type_number_set_endianness>
    5cf0:	ldr	r3, [sl, r4]
    5cf4:	mov	r1, #5
    5cf8:	ldr	r0, [r3, #392]	; 0x188
    5cfc:	bl	0 <coda_type_set_read_type>
    5d00:	ldr	r1, [sl, r4]
    5d04:	mov	r2, #32
    5d08:	mov	r3, #0
    5d0c:	ldr	r0, [r1, #392]	; 0x188
    5d10:	bl	0 <coda_type_set_bit_size>
    5d14:	ldr	r3, [sl, r4]
    5d18:	ldr	r1, [pc, #-1792]	; 5620 <coda_grib_reopen+0x3d10>
    5d1c:	ldr	r0, [r3, #392]	; 0x188
    5d20:	bl	0 <coda_type_set_description>
    5d24:	mov	r1, #2
    5d28:	mov	r0, #7
    5d2c:	ldr	r5, [sl, r4]
    5d30:	bl	0 <coda_type_number_new>
    5d34:	ldr	r3, [sl, r4]
    5d38:	mov	r1, #1
    5d3c:	str	r0, [r5, #396]	; 0x18c
    5d40:	ldr	r0, [r3, #396]	; 0x18c
    5d44:	bl	0 <coda_type_number_set_endianness>
    5d48:	ldr	r3, [sl, r4]
    5d4c:	mov	r1, #5
    5d50:	ldr	r0, [r3, #396]	; 0x18c
    5d54:	bl	0 <coda_type_set_read_type>
    5d58:	ldr	r1, [sl, r4]
    5d5c:	mov	r2, #32
    5d60:	mov	r3, #0
    5d64:	ldr	r0, [r1, #396]	; 0x18c
    5d68:	bl	0 <coda_type_set_bit_size>
    5d6c:	mov	r1, #2
    5d70:	mov	r0, #7
    5d74:	ldr	r5, [sl, r4]
    5d78:	bl	0 <coda_type_number_new>
    5d7c:	ldr	r3, [sl, r4]
    5d80:	mov	r1, #1
    5d84:	str	r0, [r5, #400]	; 0x190
    5d88:	ldr	r0, [r3, #400]	; 0x190
    5d8c:	bl	0 <coda_type_number_set_endianness>
    5d90:	ldr	r3, [sl, r4]
    5d94:	mov	r1, #5
    5d98:	ldr	r0, [r3, #400]	; 0x190
    5d9c:	bl	0 <coda_type_set_read_type>
    5da0:	ldr	r1, [sl, r4]
    5da4:	mov	r2, #32
    5da8:	mov	r3, #0
    5dac:	ldr	r0, [r1, #400]	; 0x190
    5db0:	bl	0 <coda_type_set_bit_size>
    5db4:	mov	r1, #2
    5db8:	mov	r0, #7
    5dbc:	ldr	r5, [sl, r4]
    5dc0:	bl	0 <coda_type_number_new>
    5dc4:	ldr	r3, [sl, r4]
    5dc8:	mov	r1, #1
    5dcc:	str	r0, [r5, #404]	; 0x194
    5dd0:	ldr	r0, [r3, #404]	; 0x194
    5dd4:	bl	0 <coda_type_number_set_endianness>
    5dd8:	ldr	r3, [sl, r4]
    5ddc:	mov	r1, #4
    5de0:	ldr	r0, [r3, #404]	; 0x194
    5de4:	bl	0 <coda_type_set_read_type>
    5de8:	ldr	r1, [sl, r4]
    5dec:	mov	r2, #32
    5df0:	mov	r3, #0
    5df4:	ldr	r0, [r1, #404]	; 0x194
    5df8:	bl	0 <coda_type_set_bit_size>
    5dfc:	ldr	r3, [sl, r4]
    5e00:	ldr	r1, [pc, #-2020]	; 5624 <coda_grib_reopen+0x3d14>
    5e04:	ldr	r0, [r3, #404]	; 0x194
    5e08:	bl	0 <coda_type_set_description>
    5e0c:	mov	r1, #2
    5e10:	mov	r0, #7
    5e14:	ldr	r5, [sl, r4]
    5e18:	bl	0 <coda_type_number_new>
    5e1c:	ldr	r3, [sl, r4]
    5e20:	mov	r1, #1
    5e24:	str	r0, [r5, #408]	; 0x198
    5e28:	ldr	r0, [r3, #408]	; 0x198
    5e2c:	bl	0 <coda_type_number_set_endianness>
    5e30:	ldr	r3, [sl, r4]
    5e34:	mov	r1, #4
    5e38:	ldr	r0, [r3, #408]	; 0x198
    5e3c:	bl	0 <coda_type_set_read_type>
    5e40:	ldr	r1, [sl, r4]
    5e44:	mov	r2, #32
    5e48:	mov	r3, #0
    5e4c:	ldr	r0, [r1, #408]	; 0x198
    5e50:	bl	0 <coda_type_set_bit_size>
    5e54:	ldr	r3, [sl, r4]
    5e58:	ldr	r1, [pc, #-2104]	; 5628 <coda_grib_reopen+0x3d18>
    5e5c:	ldr	r0, [r3, #408]	; 0x198
    5e60:	bl	0 <coda_type_set_description>
    5e64:	mov	r1, #2
    5e68:	mov	r0, #7
    5e6c:	ldr	r5, [sl, r4]
    5e70:	bl	0 <coda_type_number_new>
    5e74:	ldr	r3, [sl, r4]
    5e78:	mov	r1, #1
    5e7c:	str	r0, [r5, #412]	; 0x19c
    5e80:	ldr	r0, [r3, #412]	; 0x19c
    5e84:	bl	0 <coda_type_number_set_endianness>
    5e88:	ldr	r3, [sl, r4]
    5e8c:	mov	r1, #1
    5e90:	ldr	r0, [r3, #412]	; 0x19c
    5e94:	bl	0 <coda_type_set_read_type>
    5e98:	ldr	r1, [sl, r4]
    5e9c:	mov	r2, #8
    5ea0:	mov	r3, #0
    5ea4:	ldr	r0, [r1, #412]	; 0x19c
    5ea8:	bl	0 <coda_type_set_bit_size>
    5eac:	ldr	r3, [sl, r4]
    5eb0:	ldr	r1, [pc, #-2188]	; 562c <coda_grib_reopen+0x3d1c>
    5eb4:	ldr	r0, [r3, #412]	; 0x19c
    5eb8:	bl	0 <coda_type_set_description>
    5ebc:	mov	r1, #2
    5ec0:	mov	r0, #7
    5ec4:	ldr	r5, [sl, r4]
    5ec8:	bl	0 <coda_type_number_new>
    5ecc:	ldr	r3, [sl, r4]
    5ed0:	mov	r1, #1
    5ed4:	str	r0, [r5, #416]	; 0x1a0
    5ed8:	ldr	r0, [r3, #416]	; 0x1a0
    5edc:	bl	0 <coda_type_number_set_endianness>
    5ee0:	ldr	r3, [sl, r4]
    5ee4:	mov	r1, #4
    5ee8:	ldr	r0, [r3, #416]	; 0x1a0
    5eec:	bl	0 <coda_type_set_read_type>
    5ef0:	ldr	r1, [sl, r4]
    5ef4:	mov	r2, #32
    5ef8:	mov	r3, #0
    5efc:	ldr	r0, [r1, #416]	; 0x1a0
    5f00:	bl	0 <coda_type_set_bit_size>
    5f04:	ldr	r3, [sl, r4]
    5f08:	ldr	r1, [pc, #-2272]	; 5630 <coda_grib_reopen+0x3d20>
    5f0c:	ldr	r0, [r3, #416]	; 0x1a0
    5f10:	bl	0 <coda_type_set_description>
    5f14:	mov	r1, #2
    5f18:	mov	r0, #7
    5f1c:	ldr	r5, [sl, r4]
    5f20:	bl	0 <coda_type_number_new>
    5f24:	ldr	r3, [sl, r4]
    5f28:	mov	r1, #1
    5f2c:	str	r0, [r5, #420]	; 0x1a4
    5f30:	ldr	r0, [r3, #420]	; 0x1a4
    5f34:	bl	0 <coda_type_number_set_endianness>
    5f38:	ldr	r3, [sl, r4]
    5f3c:	mov	r1, #4
    5f40:	ldr	r0, [r3, #420]	; 0x1a4
    5f44:	bl	0 <coda_type_set_read_type>
    5f48:	ldr	r1, [sl, r4]
    5f4c:	mov	r2, #32
    5f50:	mov	r3, #0
    5f54:	ldr	r0, [r1, #420]	; 0x1a4
    5f58:	bl	0 <coda_type_set_bit_size>
    5f5c:	ldr	r3, [sl, r4]
    5f60:	ldr	r1, [pc, #-2356]	; 5634 <coda_grib_reopen+0x3d24>
    5f64:	ldr	r0, [r3, #420]	; 0x1a4
    5f68:	bl	0 <coda_type_set_description>
    5f6c:	mov	r1, #2
    5f70:	mov	r0, #7
    5f74:	ldr	r5, [sl, r4]
    5f78:	bl	0 <coda_type_number_new>
    5f7c:	ldr	r3, [sl, r4]
    5f80:	mov	r1, #1
    5f84:	str	r0, [r5, #424]	; 0x1a8
    5f88:	ldr	r0, [r3, #424]	; 0x1a8
    5f8c:	bl	0 <coda_type_number_set_endianness>
    5f90:	ldr	r3, [sl, r4]
    5f94:	mov	r1, #5
    5f98:	ldr	r0, [r3, #424]	; 0x1a8
    5f9c:	bl	0 <coda_type_set_read_type>
    5fa0:	ldr	r1, [sl, r4]
    5fa4:	mov	r2, #32
    5fa8:	mov	r3, #0
    5fac:	ldr	r0, [r1, #424]	; 0x1a8
    5fb0:	bl	0 <coda_type_set_bit_size>
    5fb4:	ldr	r3, [sl, r4]
    5fb8:	ldr	r1, [pc, #-2440]	; 5638 <coda_grib_reopen+0x3d28>
    5fbc:	ldr	r0, [r3, #424]	; 0x1a8
    5fc0:	bl	0 <coda_type_set_description>
    5fc4:	mov	r1, #2
    5fc8:	mov	r0, #7
    5fcc:	ldr	r5, [sl, r4]
    5fd0:	bl	0 <coda_type_number_new>
    5fd4:	ldr	r3, [sl, r4]
    5fd8:	mov	r1, #1
    5fdc:	str	r0, [r5, #428]	; 0x1ac
    5fe0:	ldr	r0, [r3, #428]	; 0x1ac
    5fe4:	bl	0 <coda_type_number_set_endianness>
    5fe8:	ldr	r3, [sl, r4]
    5fec:	mov	r1, #5
    5ff0:	ldr	r0, [r3, #428]	; 0x1ac
    5ff4:	bl	0 <coda_type_set_read_type>
    5ff8:	ldr	r1, [sl, r4]
    5ffc:	mov	r2, #32
    6000:	mov	r3, #0
    6004:	ldr	r0, [r1, #428]	; 0x1ac
    6008:	bl	0 <coda_type_set_bit_size>
    600c:	ldr	r3, [sl, r4]
    6010:	ldr	r1, [pc, #-2524]	; 563c <coda_grib_reopen+0x3d2c>
    6014:	ldr	r0, [r3, #428]	; 0x1ac
    6018:	bl	0 <coda_type_set_description>
    601c:	mov	r1, #2
    6020:	mov	r0, #7
    6024:	ldr	r5, [sl, r4]
    6028:	bl	0 <coda_type_number_new>
    602c:	ldr	r3, [sl, r4]
    6030:	mov	r1, #1
    6034:	str	r0, [r5, #432]	; 0x1b0
    6038:	ldr	r0, [r3, #432]	; 0x1b0
    603c:	bl	0 <coda_type_number_set_endianness>
    6040:	ldr	r3, [sl, r4]
    6044:	mov	r1, #5
    6048:	ldr	r0, [r3, #432]	; 0x1b0
    604c:	bl	0 <coda_type_set_read_type>
    6050:	ldr	r1, [sl, r4]
    6054:	mov	r2, #32
    6058:	mov	r3, #0
    605c:	ldr	r0, [r1, #432]	; 0x1b0
    6060:	bl	0 <coda_type_set_bit_size>
    6064:	ldr	r3, [sl, r4]
    6068:	ldr	r1, [pc, #-2608]	; 5640 <coda_grib_reopen+0x3d30>
    606c:	ldr	r0, [r3, #432]	; 0x1b0
    6070:	bl	0 <coda_type_set_description>
    6074:	mov	r1, #2
    6078:	mov	r0, #7
    607c:	ldr	r5, [sl, r4]
    6080:	bl	0 <coda_type_number_new>
    6084:	ldr	r3, [sl, r4]
    6088:	mov	r1, #1
    608c:	str	r0, [r5, #436]	; 0x1b4
    6090:	ldr	r0, [r3, #436]	; 0x1b4
    6094:	bl	0 <coda_type_number_set_endianness>
    6098:	ldr	r3, [sl, r4]
    609c:	mov	r1, #1
    60a0:	ldr	r0, [r3, #436]	; 0x1b4
    60a4:	bl	0 <coda_type_set_read_type>
    60a8:	ldr	r1, [sl, r4]
    60ac:	mov	r2, #8
    60b0:	mov	r3, #0
    60b4:	ldr	r0, [r1, #436]	; 0x1b4
    60b8:	bl	0 <coda_type_set_bit_size>
    60bc:	ldr	r3, [sl, r4]
    60c0:	ldr	r1, [pc, #-2692]	; 5644 <coda_grib_reopen+0x3d34>
    60c4:	ldr	r0, [r3, #436]	; 0x1b4
    60c8:	bl	0 <coda_type_set_description>
    60cc:	mov	r1, #2
    60d0:	mov	r0, #7
    60d4:	ldr	r5, [sl, r4]
    60d8:	bl	0 <coda_type_number_new>
    60dc:	ldr	r3, [sl, r4]
    60e0:	mov	r1, #1
    60e4:	str	r0, [r5, #440]	; 0x1b8
    60e8:	ldr	r0, [r3, #440]	; 0x1b8
    60ec:	bl	0 <coda_type_number_set_endianness>
    60f0:	ldr	r3, [sl, r4]
    60f4:	mov	r1, #5
    60f8:	ldr	r0, [r3, #440]	; 0x1b8
    60fc:	bl	0 <coda_type_set_read_type>
    6100:	ldr	r1, [sl, r4]
    6104:	mov	r2, #32
    6108:	mov	r3, #0
    610c:	ldr	r0, [r1, #440]	; 0x1b8
    6110:	bl	0 <coda_type_set_bit_size>
    6114:	mov	r0, #7
    6118:	ldr	r5, [sl, r4]
    611c:	bl	0 <coda_type_array_new>
    6120:	ldr	r3, [sl, r4]
    6124:	ldr	r1, [pc, #-2788]	; 5648 <coda_grib_reopen+0x3d38>
    6128:	str	r0, [r5, #444]	; 0x1bc
    612c:	ldr	r0, [r3, #444]	; 0x1bc
    6130:	bl	0 <coda_type_set_description>
    6134:	ldr	r3, [sl, r4]
    6138:	ldr	r1, [r3, #440]	; 0x1b8
    613c:	ldr	r0, [r3, #444]	; 0x1bc
    6140:	bl	0 <coda_type_array_set_base_type>
    6144:	ldr	r3, [sl, r4]
    6148:	mov	r1, #0
    614c:	ldr	r0, [r3, #444]	; 0x1bc
    6150:	bl	0 <coda_type_array_add_variable_dimension>
    6154:	mov	r1, #2
    6158:	mov	r0, #7
    615c:	ldr	r5, [sl, r4]
    6160:	bl	0 <coda_type_number_new>
    6164:	ldr	r3, [sl, r4]
    6168:	mov	r1, #1
    616c:	str	r0, [r5, #448]	; 0x1c0
    6170:	ldr	r0, [r3, #448]	; 0x1c0
    6174:	bl	0 <coda_type_number_set_endianness>
    6178:	ldr	r3, [sl, r4]
    617c:	mov	r1, #1
    6180:	ldr	r0, [r3, #448]	; 0x1c0
    6184:	bl	0 <coda_type_set_read_type>
    6188:	ldr	r1, [sl, r4]
    618c:	mov	r2, #8
    6190:	mov	r3, #0
    6194:	ldr	r0, [r1, #448]	; 0x1c0
    6198:	bl	0 <coda_type_set_bit_size>
    619c:	ldr	r3, [sl, r4]
    61a0:	ldr	r1, [pc, #-2908]	; 564c <coda_grib_reopen+0x3d3c>
    61a4:	ldr	r0, [r3, #448]	; 0x1c0
    61a8:	bl	0 <coda_type_set_description>
    61ac:	mov	r1, #2
    61b0:	mov	r0, #7
    61b4:	ldr	r5, [sl, r4]
    61b8:	bl	0 <coda_type_number_new>
    61bc:	ldr	r3, [sl, r4]
    61c0:	mov	r1, #1
    61c4:	str	r0, [r5, #452]	; 0x1c4
    61c8:	ldr	r0, [r3, #452]	; 0x1c4
    61cc:	bl	0 <coda_type_number_set_endianness>
    61d0:	ldr	r3, [sl, r4]
    61d4:	mov	r1, #5
    61d8:	ldr	r0, [r3, #452]	; 0x1c4
    61dc:	bl	0 <coda_type_set_read_type>
    61e0:	ldr	r1, [sl, r4]
    61e4:	mov	r2, #32
    61e8:	mov	r3, #0
    61ec:	ldr	r0, [r1, #452]	; 0x1c4
    61f0:	bl	0 <coda_type_set_bit_size>
    61f4:	ldr	r3, [sl, r4]
    61f8:	ldr	r1, [pc, #-2992]	; 5650 <coda_grib_reopen+0x3d40>
    61fc:	ldr	r0, [r3, #452]	; 0x1c4
    6200:	bl	0 <coda_type_set_description>
    6204:	mov	r1, #2
    6208:	mov	r0, #7
    620c:	ldr	r5, [sl, r4]
    6210:	bl	0 <coda_type_number_new>
    6214:	ldr	r3, [sl, r4]
    6218:	mov	r1, #1
    621c:	str	r0, [r5, #456]	; 0x1c8
    6220:	ldr	r0, [r3, #456]	; 0x1c8
    6224:	bl	0 <coda_type_number_set_endianness>
    6228:	ldr	r3, [sl, r4]
    622c:	mov	r1, #1
    6230:	ldr	r0, [r3, #456]	; 0x1c8
    6234:	bl	0 <coda_type_set_read_type>
    6238:	ldr	r1, [sl, r4]
    623c:	mov	r2, #8
    6240:	mov	r3, #0
    6244:	ldr	r0, [r1, #456]	; 0x1c8
    6248:	bl	0 <coda_type_set_bit_size>
    624c:	ldr	r3, [sl, r4]
    6250:	ldr	r1, [pc, #-3076]	; 5654 <coda_grib_reopen+0x3d44>
    6254:	ldr	r0, [r3, #456]	; 0x1c8
    6258:	bl	0 <coda_type_set_description>
    625c:	mov	r1, #2
    6260:	mov	r0, #7
    6264:	ldr	r5, [sl, r4]
    6268:	bl	0 <coda_type_number_new>
    626c:	ldr	r3, [sl, r4]
    6270:	mov	r1, #1
    6274:	str	r0, [r5, #460]	; 0x1cc
    6278:	ldr	r0, [r3, #460]	; 0x1cc
    627c:	bl	0 <coda_type_number_set_endianness>
    6280:	ldr	r3, [sl, r4]
    6284:	mov	r1, #1
    6288:	ldr	r0, [r3, #460]	; 0x1cc
    628c:	bl	0 <coda_type_set_read_type>
    6290:	ldr	r1, [sl, r4]
    6294:	mov	r2, #8
    6298:	mov	r3, #0
    629c:	ldr	r0, [r1, #460]	; 0x1cc
    62a0:	bl	0 <coda_type_set_bit_size>
    62a4:	ldr	r3, [sl, r4]
    62a8:	ldr	r1, [pc, #-3160]	; 5658 <coda_grib_reopen+0x3d48>
    62ac:	ldr	r0, [r3, #460]	; 0x1cc
    62b0:	bl	0 <coda_type_set_description>
    62b4:	mov	r1, #2
    62b8:	mov	r0, #7
    62bc:	ldr	r5, [sl, r4]
    62c0:	bl	0 <coda_type_number_new>
    62c4:	ldr	r3, [sl, r4]
    62c8:	mov	r1, #1
    62cc:	str	r0, [r5, #464]	; 0x1d0
    62d0:	ldr	r0, [r3, #464]	; 0x1d0
    62d4:	bl	0 <coda_type_number_set_endianness>
    62d8:	ldr	r3, [sl, r4]
    62dc:	mov	r1, #1
    62e0:	ldr	r0, [r3, #464]	; 0x1d0
    62e4:	bl	0 <coda_type_set_read_type>
    62e8:	ldr	r1, [sl, r4]
    62ec:	mov	r2, #8
    62f0:	mov	r3, #0
    62f4:	ldr	r0, [r1, #464]	; 0x1d0
    62f8:	bl	0 <coda_type_set_bit_size>
    62fc:	ldr	r3, [sl, r4]
    6300:	ldr	r1, [pc, #-3244]	; 565c <coda_grib_reopen+0x3d4c>
    6304:	ldr	r0, [r3, #464]	; 0x1d0
    6308:	bl	0 <coda_type_set_description>
    630c:	mov	r1, #2
    6310:	mov	r0, #7
    6314:	ldr	r5, [sl, r4]
    6318:	bl	0 <coda_type_number_new>
    631c:	ldr	r3, [sl, r4]
    6320:	mov	r1, #1
    6324:	str	r0, [r5, #468]	; 0x1d4
    6328:	ldr	r0, [r3, #468]	; 0x1d4
    632c:	bl	0 <coda_type_number_set_endianness>
    6330:	ldr	r3, [sl, r4]
    6334:	mov	r1, #1
    6338:	ldr	r0, [r3, #468]	; 0x1d4
    633c:	bl	0 <coda_type_set_read_type>
    6340:	ldr	r1, [sl, r4]
    6344:	mov	r2, #8
    6348:	mov	r3, #0
    634c:	ldr	r0, [r1, #468]	; 0x1d4
    6350:	bl	0 <coda_type_set_bit_size>
    6354:	ldr	r3, [sl, r4]
    6358:	ldr	r1, [pc, #-3328]	; 5660 <coda_grib_reopen+0x3d50>
    635c:	ldr	r0, [r3, #468]	; 0x1d4
    6360:	bl	0 <coda_type_set_description>
    6364:	mov	r1, #2
    6368:	mov	r0, #7
    636c:	ldr	r5, [sl, r4]
    6370:	bl	0 <coda_type_number_new>
    6374:	ldr	r3, [sl, r4]
    6378:	mov	r1, #1
    637c:	str	r0, [r5, #472]	; 0x1d8
    6380:	ldr	r0, [r3, #472]	; 0x1d8
    6384:	bl	0 <coda_type_number_set_endianness>
    6388:	ldr	r3, [sl, r4]
    638c:	mov	r1, #1
    6390:	ldr	r0, [r3, #472]	; 0x1d8
    6394:	bl	0 <coda_type_set_read_type>
    6398:	ldr	r1, [sl, r4]
    639c:	mov	r2, #8
    63a0:	mov	r3, #0
    63a4:	ldr	r0, [r1, #472]	; 0x1d8
    63a8:	bl	0 <coda_type_set_bit_size>
    63ac:	ldr	r3, [sl, r4]
    63b0:	ldr	r1, [pc, #-3412]	; 5664 <coda_grib_reopen+0x3d54>
    63b4:	ldr	r0, [r3, #472]	; 0x1d8
    63b8:	bl	0 <coda_type_set_description>
    63bc:	mov	r1, #2
    63c0:	mov	r0, #7
    63c4:	ldr	r5, [sl, r4]
    63c8:	bl	0 <coda_type_number_new>
    63cc:	ldr	r3, [sl, r4]
    63d0:	mov	r1, #1
    63d4:	str	r0, [r5, #476]	; 0x1dc
    63d8:	ldr	r0, [r3, #476]	; 0x1dc
    63dc:	bl	0 <coda_type_number_set_endianness>
    63e0:	ldr	r3, [sl, r4]
    63e4:	mov	r1, #1
    63e8:	ldr	r0, [r3, #476]	; 0x1dc
    63ec:	bl	0 <coda_type_set_read_type>
    63f0:	ldr	r1, [sl, r4]
    63f4:	mov	r2, #8
    63f8:	mov	r3, #0
    63fc:	ldr	r0, [r1, #476]	; 0x1dc
    6400:	bl	0 <coda_type_set_bit_size>
    6404:	ldr	r3, [sl, r4]
    6408:	ldr	r1, [pc, #-3496]	; 5668 <coda_grib_reopen+0x3d58>
    640c:	ldr	r0, [r3, #476]	; 0x1dc
    6410:	bl	0 <coda_type_set_description>
    6414:	mov	r1, #2
    6418:	mov	r0, #7
    641c:	ldr	r5, [sl, r4]
    6420:	bl	0 <coda_type_number_new>
    6424:	ldr	r3, [sl, r4]
    6428:	mov	r1, #1
    642c:	str	r0, [r5, #480]	; 0x1e0
    6430:	ldr	r0, [r3, #480]	; 0x1e0
    6434:	bl	0 <coda_type_number_set_endianness>
    6438:	ldr	r3, [sl, r4]
    643c:	mov	r1, #3
    6440:	ldr	r0, [r3, #480]	; 0x1e0
    6444:	bl	0 <coda_type_set_read_type>
    6448:	ldr	r1, [sl, r4]
    644c:	mov	r2, #16
    6450:	mov	r3, #0
    6454:	ldr	r0, [r1, #480]	; 0x1e0
    6458:	bl	0 <coda_type_set_bit_size>
    645c:	ldr	r3, [sl, r4]
    6460:	ldr	r1, [pc, #-3580]	; 566c <coda_grib_reopen+0x3d5c>
    6464:	ldr	r0, [r3, #480]	; 0x1e0
    6468:	bl	0 <coda_type_set_description>
    646c:	mov	r1, #2
    6470:	mov	r0, #7
    6474:	ldr	r5, [sl, r4]
    6478:	bl	0 <coda_type_number_new>
    647c:	ldr	r3, [sl, r4]
    6480:	mov	r1, #1
    6484:	str	r0, [r5, #484]	; 0x1e4
    6488:	ldr	r0, [r3, #484]	; 0x1e4
    648c:	bl	0 <coda_type_number_set_endianness>
    6490:	ldr	r3, [sl, r4]
    6494:	mov	r1, #1
    6498:	ldr	r0, [r3, #484]	; 0x1e4
    649c:	bl	0 <coda_type_set_read_type>
    64a0:	ldr	r1, [sl, r4]
    64a4:	mov	r2, #8
    64a8:	mov	r3, #0
    64ac:	ldr	r0, [r1, #484]	; 0x1e4
    64b0:	bl	0 <coda_type_set_bit_size>
    64b4:	ldr	r3, [sl, r4]
    64b8:	ldr	r1, [pc, #-3664]	; 5670 <coda_grib_reopen+0x3d60>
    64bc:	ldr	r0, [r3, #484]	; 0x1e4
    64c0:	bl	0 <coda_type_set_description>
    64c4:	mov	r1, #2
    64c8:	mov	r0, #7
    64cc:	ldr	r5, [sl, r4]
    64d0:	bl	0 <coda_type_number_new>
    64d4:	ldr	r3, [sl, r4]
    64d8:	mov	r1, #1
    64dc:	str	r0, [r5, #488]	; 0x1e8
    64e0:	ldr	r0, [r3, #488]	; 0x1e8
    64e4:	bl	0 <coda_type_number_set_endianness>
    64e8:	ldr	r3, [sl, r4]
    64ec:	mov	r1, #1
    64f0:	ldr	r0, [r3, #488]	; 0x1e8
    64f4:	bl	0 <coda_type_set_read_type>
    64f8:	ldr	r1, [sl, r4]
    64fc:	mov	r2, #8
    6500:	mov	r3, #0
    6504:	ldr	r0, [r1, #488]	; 0x1e8
    6508:	bl	0 <coda_type_set_bit_size>
    650c:	ldr	r3, [sl, r4]
    6510:	ldr	r1, [pc, #-3748]	; 5674 <coda_grib_reopen+0x3d64>
    6514:	ldr	r0, [r3, #488]	; 0x1e8
    6518:	bl	0 <coda_type_set_description>
    651c:	mov	r1, #2
    6520:	mov	r0, #7
    6524:	ldr	r5, [sl, r4]
    6528:	bl	0 <coda_type_number_new>
    652c:	ldr	r3, [sl, r4]
    6530:	mov	r1, #1
    6534:	str	r0, [r5, #492]	; 0x1ec
    6538:	ldr	r0, [r3, #492]	; 0x1ec
    653c:	bl	0 <coda_type_number_set_endianness>
    6540:	ldr	r3, [sl, r4]
    6544:	mov	r1, #5
    6548:	ldr	r0, [r3, #492]	; 0x1ec
    654c:	bl	0 <coda_type_set_read_type>
    6550:	ldr	r1, [sl, r4]
    6554:	mov	r2, #32
    6558:	mov	r3, #0
    655c:	ldr	r0, [r1, #492]	; 0x1ec
    6560:	bl	0 <coda_type_set_bit_size>
    6564:	ldr	r3, [sl, r4]
    6568:	ldr	r1, [pc, #-3832]	; 5678 <coda_grib_reopen+0x3d68>
    656c:	ldr	r0, [r3, #492]	; 0x1ec
    6570:	bl	0 <coda_type_set_description>
    6574:	mov	r1, #2
    6578:	mov	r0, #7
    657c:	ldr	r5, [sl, r4]
    6580:	bl	0 <coda_type_number_new>
    6584:	ldr	r3, [sl, r4]
    6588:	mov	r1, #1
    658c:	str	r0, [r5, #496]	; 0x1f0
    6590:	ldr	r0, [r3, #496]	; 0x1f0
    6594:	bl	0 <coda_type_number_set_endianness>
    6598:	ldr	r3, [sl, r4]
    659c:	mov	r1, #1
    65a0:	ldr	r0, [r3, #496]	; 0x1f0
    65a4:	bl	0 <coda_type_set_read_type>
    65a8:	ldr	r1, [sl, r4]
    65ac:	mov	r2, #8
    65b0:	mov	r3, #0
    65b4:	ldr	r0, [r1, #496]	; 0x1f0
    65b8:	bl	0 <coda_type_set_bit_size>
    65bc:	ldr	r3, [sl, r4]
    65c0:	ldr	r1, [pc, #-3916]	; 567c <coda_grib_reopen+0x3d6c>
    65c4:	ldr	r0, [r3, #496]	; 0x1f0
    65c8:	bl	0 <coda_type_set_description>
    65cc:	mov	r1, #3
    65d0:	mov	r0, #7
    65d4:	ldr	r5, [sl, r4]
    65d8:	bl	0 <coda_type_number_new>
    65dc:	ldr	r3, [sl, r4]
    65e0:	mov	r1, #1
    65e4:	str	r0, [r5, #500]	; 0x1f4
    65e8:	ldr	r0, [r3, #500]	; 0x1f4
    65ec:	bl	0 <coda_type_number_set_endianness>
    65f0:	ldr	r3, [sl, r4]
    65f4:	mov	r1, #9
    65f8:	ldr	r0, [r3, #500]	; 0x1f4
    65fc:	bl	0 <coda_type_set_read_type>
    6600:	ldr	r1, [sl, r4]
    6604:	mov	r2, #64	; 0x40
    6608:	mov	r3, #0
    660c:	ldr	r0, [r1, #500]	; 0x1f4
    6610:	bl	0 <coda_type_set_bit_size>
    6614:	ldr	r3, [sl, r4]
    6618:	ldr	r1, [pc, #-4000]	; 5680 <coda_grib_reopen+0x3d70>
    661c:	ldr	r0, [r3, #500]	; 0x1f4
    6620:	bl	0 <coda_type_set_description>
    6624:	mov	r1, #2
    6628:	mov	r0, #7
    662c:	ldr	r5, [sl, r4]
    6630:	bl	0 <coda_type_number_new>
    6634:	ldr	r3, [sl, r4]
    6638:	mov	r1, #1
    663c:	str	r0, [r5, #504]	; 0x1f8
    6640:	ldr	r0, [r3, #504]	; 0x1f8
    6644:	bl	0 <coda_type_number_set_endianness>
    6648:	ldr	r3, [sl, r4]
    664c:	mov	r1, #1
    6650:	ldr	r0, [r3, #504]	; 0x1f8
    6654:	bl	0 <coda_type_set_read_type>
    6658:	ldr	r1, [sl, r4]
    665c:	mov	r2, #8
    6660:	mov	r3, #0
    6664:	ldr	r0, [r1, #504]	; 0x1f8
    6668:	bl	0 <coda_type_set_bit_size>
    666c:	ldr	r3, [sl, r4]
    6670:	ldr	r1, [pc, #-4084]	; 5684 <coda_grib_reopen+0x3d74>
    6674:	ldr	r0, [r3, #504]	; 0x1f8
    6678:	bl	0 <coda_type_set_description>
    667c:	mov	r1, #3
    6680:	mov	r0, #7
    6684:	ldr	r5, [sl, r4]
    6688:	bl	0 <coda_type_number_new>
    668c:	ldr	r3, [sl, r4]
    6690:	mov	r1, #1
    6694:	str	r0, [r5, #508]	; 0x1fc
    6698:	ldr	r0, [r3, #508]	; 0x1fc
    669c:	bl	0 <coda_type_number_set_endianness>
    66a0:	ldr	r3, [sl, r4]
    66a4:	mov	r1, #9
    66a8:	ldr	r0, [r3, #508]	; 0x1fc
    66ac:	bl	0 <coda_type_set_read_type>
    66b0:	ldr	r1, [sl, r4]
    66b4:	mov	r2, #64	; 0x40
    66b8:	mov	r3, #0
    66bc:	ldr	r0, [r1, #508]	; 0x1fc
    66c0:	bl	0 <coda_type_set_bit_size>
    66c4:	ldr	r3, [sl, r4]
    66c8:	ldr	r1, [pc, #4028]	; 768c <coda_grib_reopen+0x5d7c>
    66cc:	ldr	r0, [r3, #508]	; 0x1fc
    66d0:	bl	0 <coda_type_set_description>
    66d4:	mov	r1, #3
    66d8:	mov	r0, #7
    66dc:	ldr	r5, [sl, r4]
    66e0:	bl	0 <coda_type_number_new>
    66e4:	ldr	r3, [sl, r4]
    66e8:	mov	r1, #1
    66ec:	str	r0, [r5, #512]	; 0x200
    66f0:	ldr	r0, [r3, #512]	; 0x200
    66f4:	bl	0 <coda_type_number_set_endianness>
    66f8:	ldr	r3, [sl, r4]
    66fc:	mov	r1, #8
    6700:	ldr	r0, [r3, #512]	; 0x200
    6704:	bl	0 <coda_type_set_read_type>
    6708:	ldr	r1, [sl, r4]
    670c:	mov	r2, #32
    6710:	mov	r3, #0
    6714:	ldr	r0, [r1, #512]	; 0x200
    6718:	bl	0 <coda_type_set_bit_size>
    671c:	mov	r0, #7
    6720:	ldr	r5, [sl, r4]
    6724:	bl	0 <coda_type_array_new>
    6728:	ldr	r3, [sl, r4]
    672c:	ldr	r1, [pc, #3932]	; 7690 <coda_grib_reopen+0x5d80>
    6730:	str	r0, [r5, #516]	; 0x204
    6734:	ldr	r0, [r3, #516]	; 0x204
    6738:	bl	0 <coda_type_set_description>
    673c:	ldr	r3, [sl, r4]
    6740:	ldr	r1, [r3, #512]	; 0x200
    6744:	ldr	r0, [r3, #516]	; 0x204
    6748:	bl	0 <coda_type_array_set_base_type>
    674c:	ldr	r3, [sl, r4]
    6750:	mov	r1, #0
    6754:	ldr	r0, [r3, #516]	; 0x204
    6758:	bl	0 <coda_type_array_add_variable_dimension>
    675c:	mov	r1, #2
    6760:	mov	r0, #7
    6764:	ldr	r5, [sl, r4]
    6768:	bl	0 <coda_type_number_new>
    676c:	ldr	r3, [sl, r4]
    6770:	mov	r1, #1
    6774:	str	r0, [r5, #520]	; 0x208
    6778:	ldr	r0, [r3, #520]	; 0x208
    677c:	bl	0 <coda_type_number_set_endianness>
    6780:	ldr	r3, [sl, r4]
    6784:	mov	r1, #3
    6788:	ldr	r0, [r3, #520]	; 0x208
    678c:	bl	0 <coda_type_set_read_type>
    6790:	ldr	r1, [sl, r4]
    6794:	mov	r2, #16
    6798:	mov	r3, #0
    679c:	ldr	r0, [r1, #520]	; 0x208
    67a0:	bl	0 <coda_type_set_bit_size>
    67a4:	ldr	r3, [sl, r4]
    67a8:	ldr	r1, [pc, #3812]	; 7694 <coda_grib_reopen+0x5d84>
    67ac:	ldr	r0, [r3, #520]	; 0x208
    67b0:	bl	0 <coda_type_set_description>
    67b4:	mov	r1, #2
    67b8:	mov	r0, #7
    67bc:	ldr	r5, [sl, r4]
    67c0:	bl	0 <coda_type_number_new>
    67c4:	ldr	r3, [sl, r4]
    67c8:	mov	r1, #1
    67cc:	str	r0, [r5, #524]	; 0x20c
    67d0:	ldr	r0, [r3, #524]	; 0x20c
    67d4:	bl	0 <coda_type_number_set_endianness>
    67d8:	ldr	r3, [sl, r4]
    67dc:	mov	r1, #1
    67e0:	ldr	r0, [r3, #524]	; 0x20c
    67e4:	bl	0 <coda_type_set_read_type>
    67e8:	ldr	r1, [sl, r4]
    67ec:	mov	r2, #8
    67f0:	mov	r3, #0
    67f4:	ldr	r0, [r1, #524]	; 0x20c
    67f8:	bl	0 <coda_type_set_bit_size>
    67fc:	ldr	r3, [sl, r4]
    6800:	ldr	r1, [pc, #3728]	; 7698 <coda_grib_reopen+0x5d88>
    6804:	ldr	r0, [r3, #524]	; 0x20c
    6808:	bl	0 <coda_type_set_description>
    680c:	mov	r1, #2
    6810:	mov	r0, #7
    6814:	ldr	r5, [sl, r4]
    6818:	bl	0 <coda_type_number_new>
    681c:	ldr	r3, [sl, r4]
    6820:	mov	r1, #1
    6824:	str	r0, [r5, #528]	; 0x210
    6828:	ldr	r0, [r3, #528]	; 0x210
    682c:	bl	0 <coda_type_number_set_endianness>
    6830:	ldr	r3, [sl, r4]
    6834:	mov	r1, #2
    6838:	ldr	r0, [r3, #528]	; 0x210
    683c:	bl	0 <coda_type_set_read_type>
    6840:	ldr	r1, [sl, r4]
    6844:	mov	r2, #16
    6848:	mov	r3, #0
    684c:	ldr	r0, [r1, #528]	; 0x210
    6850:	bl	0 <coda_type_set_bit_size>
    6854:	ldr	r3, [sl, r4]
    6858:	ldr	r1, [pc, #3644]	; 769c <coda_grib_reopen+0x5d8c>
    685c:	ldr	r0, [r3, #528]	; 0x210
    6860:	bl	0 <coda_type_set_description>
    6864:	mov	r1, #3
    6868:	mov	r0, #7
    686c:	ldr	r5, [sl, r4]
    6870:	bl	0 <coda_type_number_new>
    6874:	ldr	r3, [sl, r4]
    6878:	mov	r1, #1
    687c:	str	r0, [r5, #532]	; 0x214
    6880:	ldr	r0, [r3, #532]	; 0x214
    6884:	bl	0 <coda_type_number_set_endianness>
    6888:	ldr	r3, [sl, r4]
    688c:	mov	r1, #8
    6890:	ldr	r0, [r3, #532]	; 0x214
    6894:	bl	0 <coda_type_set_read_type>
    6898:	ldr	r1, [sl, r4]
    689c:	mov	r2, #32
    68a0:	mov	r3, #0
    68a4:	ldr	r0, [r1, #532]	; 0x214
    68a8:	bl	0 <coda_type_set_bit_size>
    68ac:	ldr	r3, [sl, r4]
    68b0:	ldr	r1, [pc, #3560]	; 76a0 <coda_grib_reopen+0x5d90>
    68b4:	ldr	r0, [r3, #532]	; 0x214
    68b8:	bl	0 <coda_type_set_description>
    68bc:	mov	r0, #7
    68c0:	ldr	r5, [sl, r4]
    68c4:	bl	0 <coda_type_array_new>
    68c8:	mov	r1, #3
    68cc:	str	r0, [r5, #536]	; 0x218
    68d0:	mov	r0, #7
    68d4:	bl	0 <coda_type_number_new>
    68d8:	mov	r1, #1
    68dc:	mov	r5, r0
    68e0:	bl	0 <coda_type_number_set_endianness>
    68e4:	mov	r1, #8
    68e8:	mov	r0, r5
    68ec:	bl	0 <coda_type_set_read_type>
    68f0:	mov	r2, #32
    68f4:	mov	r0, r5
    68f8:	mov	r3, #0
    68fc:	bl	0 <coda_type_set_bit_size>
    6900:	ldr	r3, [sl, r4]
    6904:	mov	r1, r5
    6908:	ldr	r0, [r3, #536]	; 0x218
    690c:	bl	0 <coda_type_array_set_base_type>
    6910:	mov	r0, r5
    6914:	bl	0 <coda_type_release>
    6918:	ldr	r3, [sl, r4]
    691c:	mov	r1, #0
    6920:	ldr	r0, [r3, #536]	; 0x218
    6924:	bl	0 <coda_type_array_add_variable_dimension>
    6928:	mov	r0, #7
    692c:	ldr	r5, [sl, r4]
    6930:	bl	0 <coda_type_record_new>
    6934:	str	r0, [r5, #540]	; 0x21c
    6938:	ldr	r0, [pc, #3428]	; 76a4 <coda_grib_reopen+0x5d94>
    693c:	bl	0 <coda_type_record_field_new>
    6940:	ldr	r3, [sl, r4]
    6944:	ldr	r1, [r3, #276]	; 0x114
    6948:	mov	r5, r0
    694c:	bl	0 <coda_type_record_field_set_type>
    6950:	ldr	r3, [sl, r4]
    6954:	mov	r1, r5
    6958:	ldr	r0, [r3, #540]	; 0x21c
    695c:	bl	0 <coda_type_record_add_field>
    6960:	ldr	r0, [pc, #3392]	; 76a8 <coda_grib_reopen+0x5d98>
    6964:	bl	0 <coda_type_record_field_new>
    6968:	ldr	r3, [sl, r4]
    696c:	ldr	r1, [r3, #448]	; 0x1c0
    6970:	mov	r5, r0
    6974:	bl	0 <coda_type_record_field_set_type>
    6978:	ldr	r3, [sl, r4]
    697c:	mov	r1, r5
    6980:	ldr	r0, [r3, #540]	; 0x21c
    6984:	bl	0 <coda_type_record_add_field>
    6988:	ldr	r0, [pc, #3356]	; 76ac <coda_grib_reopen+0x5d9c>
    698c:	bl	0 <coda_type_record_field_new>
    6990:	ldr	r3, [sl, r4]
    6994:	ldr	r1, [r3, #452]	; 0x1c4
    6998:	mov	r5, r0
    699c:	bl	0 <coda_type_record_field_set_type>
    69a0:	ldr	r3, [sl, r4]
    69a4:	mov	r1, r5
    69a8:	ldr	r0, [r3, #540]	; 0x21c
    69ac:	bl	0 <coda_type_record_add_field>
    69b0:	ldr	r0, [pc, #3320]	; 76b0 <coda_grib_reopen+0x5da0>
    69b4:	bl	0 <coda_type_record_field_new>
    69b8:	ldr	r3, [sl, r4]
    69bc:	ldr	r1, [r3, #456]	; 0x1c8
    69c0:	mov	r5, r0
    69c4:	bl	0 <coda_type_record_field_set_type>
    69c8:	ldr	r3, [sl, r4]
    69cc:	mov	r1, r5
    69d0:	ldr	r0, [r3, #540]	; 0x21c
    69d4:	bl	0 <coda_type_record_add_field>
    69d8:	ldr	r0, [pc, #3284]	; 76b4 <coda_grib_reopen+0x5da4>
    69dc:	bl	0 <coda_type_record_field_new>
    69e0:	ldr	r3, [sl, r4]
    69e4:	ldr	r1, [r3, #520]	; 0x208
    69e8:	mov	r5, r0
    69ec:	bl	0 <coda_type_record_field_set_type>
    69f0:	ldr	r3, [sl, r4]
    69f4:	mov	r1, r5
    69f8:	ldr	r0, [r3, #540]	; 0x21c
    69fc:	bl	0 <coda_type_record_add_field>
    6a00:	ldr	r0, [pc, #3248]	; 76b8 <coda_grib_reopen+0x5da8>
    6a04:	bl	0 <coda_type_record_field_new>
    6a08:	ldr	r3, [sl, r4]
    6a0c:	ldr	r1, [r3, #360]	; 0x168
    6a10:	mov	r5, r0
    6a14:	bl	0 <coda_type_record_field_set_type>
    6a18:	ldr	r3, [sl, r4]
    6a1c:	mov	r1, r5
    6a20:	ldr	r0, [r3, #540]	; 0x21c
    6a24:	bl	0 <coda_type_record_add_field>
    6a28:	ldr	r0, [pc, #3212]	; 76bc <coda_grib_reopen+0x5dac>
    6a2c:	bl	0 <coda_type_record_field_new>
    6a30:	ldr	r3, [sl, r4]
    6a34:	ldr	r1, [r3, #364]	; 0x16c
    6a38:	mov	r5, r0
    6a3c:	bl	0 <coda_type_record_field_set_type>
    6a40:	ldr	r3, [sl, r4]
    6a44:	mov	r1, r5
    6a48:	ldr	r0, [r3, #540]	; 0x21c
    6a4c:	bl	0 <coda_type_record_add_field>
    6a50:	ldr	r0, [pc, #3176]	; 76c0 <coda_grib_reopen+0x5db0>
    6a54:	bl	0 <coda_type_record_field_new>
    6a58:	ldr	r3, [sl, r4]
    6a5c:	ldr	r1, [r3, #368]	; 0x170
    6a60:	mov	r5, r0
    6a64:	bl	0 <coda_type_record_field_set_type>
    6a68:	ldr	r3, [sl, r4]
    6a6c:	mov	r1, r5
    6a70:	ldr	r0, [r3, #540]	; 0x21c
    6a74:	bl	0 <coda_type_record_add_field>
    6a78:	ldr	r0, [pc, #3140]	; 76c4 <coda_grib_reopen+0x5db4>
    6a7c:	bl	0 <coda_type_record_field_new>
    6a80:	ldr	r3, [sl, r4]
    6a84:	ldr	r1, [r3, #372]	; 0x174
    6a88:	mov	r5, r0
    6a8c:	bl	0 <coda_type_record_field_set_type>
    6a90:	ldr	r3, [sl, r4]
    6a94:	mov	r1, r5
    6a98:	ldr	r0, [r3, #540]	; 0x21c
    6a9c:	bl	0 <coda_type_record_add_field>
    6aa0:	ldr	r0, [pc, #3104]	; 76c8 <coda_grib_reopen+0x5db8>
    6aa4:	bl	0 <coda_type_record_field_new>
    6aa8:	ldr	r3, [sl, r4]
    6aac:	ldr	r1, [r3, #376]	; 0x178
    6ab0:	mov	r5, r0
    6ab4:	bl	0 <coda_type_record_field_set_type>
    6ab8:	ldr	r3, [sl, r4]
    6abc:	mov	r1, r5
    6ac0:	ldr	r0, [r3, #540]	; 0x21c
    6ac4:	bl	0 <coda_type_record_add_field>
    6ac8:	ldr	r0, [pc, #3068]	; 76cc <coda_grib_reopen+0x5dbc>
    6acc:	bl	0 <coda_type_record_field_new>
    6ad0:	ldr	r3, [sl, r4]
    6ad4:	ldr	r1, [r3, #380]	; 0x17c
    6ad8:	mov	r5, r0
    6adc:	bl	0 <coda_type_record_field_set_type>
    6ae0:	ldr	r3, [sl, r4]
    6ae4:	mov	r1, r5
    6ae8:	ldr	r0, [r3, #540]	; 0x21c
    6aec:	bl	0 <coda_type_record_add_field>
    6af0:	ldr	r0, [pc, #3032]	; 76d0 <coda_grib_reopen+0x5dc0>
    6af4:	bl	0 <coda_type_record_field_new>
    6af8:	ldr	r3, [sl, r4]
    6afc:	ldr	r1, [r3, #384]	; 0x180
    6b00:	mov	r5, r0
    6b04:	bl	0 <coda_type_record_field_set_type>
    6b08:	ldr	r3, [sl, r4]
    6b0c:	mov	r1, r5
    6b10:	ldr	r0, [r3, #540]	; 0x21c
    6b14:	bl	0 <coda_type_record_add_field>
    6b18:	ldr	r0, [pc, #2996]	; 76d4 <coda_grib_reopen+0x5dc4>
    6b1c:	bl	0 <coda_type_record_field_new>
    6b20:	ldr	r3, [sl, r4]
    6b24:	ldr	r1, [r3, #388]	; 0x184
    6b28:	mov	r5, r0
    6b2c:	bl	0 <coda_type_record_field_set_type>
    6b30:	ldr	r3, [sl, r4]
    6b34:	mov	r1, r5
    6b38:	ldr	r0, [r3, #540]	; 0x21c
    6b3c:	bl	0 <coda_type_record_add_field>
    6b40:	ldr	r0, [pc, #2960]	; 76d8 <coda_grib_reopen+0x5dc8>
    6b44:	bl	0 <coda_type_record_field_new>
    6b48:	ldr	r3, [sl, r4]
    6b4c:	ldr	r1, [r3, #392]	; 0x188
    6b50:	mov	r5, r0
    6b54:	bl	0 <coda_type_record_field_set_type>
    6b58:	ldr	r3, [sl, r4]
    6b5c:	mov	r1, r5
    6b60:	ldr	r0, [r3, #540]	; 0x21c
    6b64:	bl	0 <coda_type_record_add_field>
    6b68:	ldr	r0, [pc, #2924]	; 76dc <coda_grib_reopen+0x5dcc>
    6b6c:	bl	0 <coda_type_record_field_new>
    6b70:	ldr	r3, [sl, r4]
    6b74:	ldr	r1, [r3, #396]	; 0x18c
    6b78:	mov	r5, r0
    6b7c:	bl	0 <coda_type_record_field_set_type>
    6b80:	ldr	r3, [sl, r4]
    6b84:	mov	r1, r5
    6b88:	ldr	r0, [r3, #540]	; 0x21c
    6b8c:	bl	0 <coda_type_record_add_field>
    6b90:	ldr	r0, [pc, #2888]	; 76e0 <coda_grib_reopen+0x5dd0>
    6b94:	bl	0 <coda_type_record_field_new>
    6b98:	ldr	r3, [sl, r4]
    6b9c:	ldr	r1, [r3, #400]	; 0x190
    6ba0:	mov	r5, r0
    6ba4:	bl	0 <coda_type_record_field_set_type>
    6ba8:	ldr	r3, [sl, r4]
    6bac:	mov	r1, r5
    6bb0:	ldr	r0, [r3, #540]	; 0x21c
    6bb4:	bl	0 <coda_type_record_add_field>
    6bb8:	ldr	r0, [pc, #2852]	; 76e4 <coda_grib_reopen+0x5dd4>
    6bbc:	bl	0 <coda_type_record_field_new>
    6bc0:	ldr	r3, [sl, r4]
    6bc4:	ldr	r1, [r3, #404]	; 0x194
    6bc8:	mov	r5, r0
    6bcc:	bl	0 <coda_type_record_field_set_type>
    6bd0:	ldr	r3, [sl, r4]
    6bd4:	mov	r1, r5
    6bd8:	ldr	r0, [r3, #540]	; 0x21c
    6bdc:	bl	0 <coda_type_record_add_field>
    6be0:	ldr	r0, [pc, #2816]	; 76e8 <coda_grib_reopen+0x5dd8>
    6be4:	bl	0 <coda_type_record_field_new>
    6be8:	ldr	r3, [sl, r4]
    6bec:	ldr	r1, [r3, #408]	; 0x198
    6bf0:	mov	r5, r0
    6bf4:	bl	0 <coda_type_record_field_set_type>
    6bf8:	ldr	r3, [sl, r4]
    6bfc:	mov	r1, r5
    6c00:	ldr	r0, [r3, #540]	; 0x21c
    6c04:	bl	0 <coda_type_record_add_field>
    6c08:	ldr	r0, [pc, #2780]	; 76ec <coda_grib_reopen+0x5ddc>
    6c0c:	bl	0 <coda_type_record_field_new>
    6c10:	ldr	r3, [sl, r4]
    6c14:	ldr	r1, [r3, #412]	; 0x19c
    6c18:	mov	r5, r0
    6c1c:	bl	0 <coda_type_record_field_set_type>
    6c20:	ldr	r3, [sl, r4]
    6c24:	mov	r1, r5
    6c28:	ldr	r0, [r3, #540]	; 0x21c
    6c2c:	bl	0 <coda_type_record_add_field>
    6c30:	ldr	r0, [pc, #2744]	; 76f0 <coda_grib_reopen+0x5de0>
    6c34:	bl	0 <coda_type_record_field_new>
    6c38:	ldr	r3, [sl, r4]
    6c3c:	ldr	r1, [r3, #416]	; 0x1a0
    6c40:	mov	r5, r0
    6c44:	bl	0 <coda_type_record_field_set_type>
    6c48:	ldr	r3, [sl, r4]
    6c4c:	mov	r1, r5
    6c50:	ldr	r0, [r3, #540]	; 0x21c
    6c54:	bl	0 <coda_type_record_add_field>
    6c58:	ldr	r0, [pc, #2708]	; 76f4 <coda_grib_reopen+0x5de4>
    6c5c:	bl	0 <coda_type_record_field_new>
    6c60:	ldr	r3, [sl, r4]
    6c64:	ldr	r1, [r3, #420]	; 0x1a4
    6c68:	mov	r5, r0
    6c6c:	bl	0 <coda_type_record_field_set_type>
    6c70:	ldr	r3, [sl, r4]
    6c74:	mov	r1, r5
    6c78:	ldr	r0, [r3, #540]	; 0x21c
    6c7c:	bl	0 <coda_type_record_add_field>
    6c80:	ldr	r0, [pc, #2672]	; 76f8 <coda_grib_reopen+0x5de8>
    6c84:	bl	0 <coda_type_record_field_new>
    6c88:	ldr	r3, [sl, r4]
    6c8c:	ldr	r1, [r3, #424]	; 0x1a8
    6c90:	mov	r5, r0
    6c94:	bl	0 <coda_type_record_field_set_type>
    6c98:	ldr	r3, [sl, r4]
    6c9c:	mov	r1, r5
    6ca0:	ldr	r0, [r3, #540]	; 0x21c
    6ca4:	bl	0 <coda_type_record_add_field>
    6ca8:	ldr	r0, [pc, #2636]	; 76fc <coda_grib_reopen+0x5dec>
    6cac:	bl	0 <coda_type_record_field_new>
    6cb0:	ldr	r3, [sl, r4]
    6cb4:	ldr	r1, [r3, #428]	; 0x1ac
    6cb8:	mov	r5, r0
    6cbc:	bl	0 <coda_type_record_field_set_type>
    6cc0:	mov	r0, r5
    6cc4:	bl	0 <coda_type_record_field_set_optional>
    6cc8:	ldr	r3, [sl, r4]
    6ccc:	mov	r1, r5
    6cd0:	ldr	r0, [r3, #540]	; 0x21c
    6cd4:	bl	0 <coda_type_record_add_field>
    6cd8:	ldr	r0, [pc, #2592]	; 7700 <coda_grib_reopen+0x5df0>
    6cdc:	bl	0 <coda_type_record_field_new>
    6ce0:	ldr	r3, [sl, r4]
    6ce4:	ldr	r1, [r3, #432]	; 0x1b0
    6ce8:	mov	r5, r0
    6cec:	bl	0 <coda_type_record_field_set_type>
    6cf0:	mov	r0, r5
    6cf4:	bl	0 <coda_type_record_field_set_optional>
    6cf8:	ldr	r3, [sl, r4]
    6cfc:	mov	r1, r5
    6d00:	ldr	r0, [r3, #540]	; 0x21c
    6d04:	bl	0 <coda_type_record_add_field>
    6d08:	ldr	r0, [pc, #2548]	; 7704 <coda_grib_reopen+0x5df4>
    6d0c:	bl	0 <coda_type_record_field_new>
    6d10:	ldr	r3, [sl, r4]
    6d14:	ldr	r1, [r3, #436]	; 0x1b4
    6d18:	mov	r5, r0
    6d1c:	bl	0 <coda_type_record_field_set_type>
    6d20:	ldr	r3, [sl, r4]
    6d24:	mov	r1, r5
    6d28:	ldr	r0, [r3, #540]	; 0x21c
    6d2c:	bl	0 <coda_type_record_add_field>
    6d30:	ldr	r0, [pc, #2512]	; 7708 <coda_grib_reopen+0x5df8>
    6d34:	bl	0 <coda_type_record_field_new>
    6d38:	ldr	r3, [sl, r4]
    6d3c:	ldr	r1, [r3, #444]	; 0x1bc
    6d40:	mov	r5, r0
    6d44:	bl	0 <coda_type_record_field_set_type>
    6d48:	mov	r0, r5
    6d4c:	bl	0 <coda_type_record_field_set_optional>
    6d50:	ldr	r3, [sl, r4]
    6d54:	mov	r1, r5
    6d58:	ldr	r0, [r3, #540]	; 0x21c
    6d5c:	bl	0 <coda_type_record_add_field>
    6d60:	mov	r0, #7
    6d64:	ldr	r5, [sl, r4]
    6d68:	bl	0 <coda_type_record_new>
    6d6c:	str	r0, [r5, #544]	; 0x220
    6d70:	ldr	r0, [pc, #2452]	; 770c <coda_grib_reopen+0x5dfc>
    6d74:	bl	0 <coda_type_record_field_new>
    6d78:	ldr	r3, [sl, r4]
    6d7c:	ldr	r1, [r3, #280]	; 0x118
    6d80:	mov	r5, r0
    6d84:	bl	0 <coda_type_record_field_set_type>
    6d88:	ldr	r3, [sl, r4]
    6d8c:	mov	r1, r5
    6d90:	ldr	r0, [r3, #544]	; 0x220
    6d94:	bl	0 <coda_type_record_add_field>
    6d98:	ldr	r0, [pc, #2416]	; 7710 <coda_grib_reopen+0x5e00>
    6d9c:	bl	0 <coda_type_record_field_new>
    6da0:	ldr	r3, [sl, r4]
    6da4:	ldr	r1, [r3, #460]	; 0x1cc
    6da8:	mov	r5, r0
    6dac:	bl	0 <coda_type_record_field_set_type>
    6db0:	ldr	r3, [sl, r4]
    6db4:	mov	r1, r5
    6db8:	ldr	r0, [r3, #544]	; 0x220
    6dbc:	bl	0 <coda_type_record_add_field>
    6dc0:	ldr	r0, [pc, #2380]	; 7714 <coda_grib_reopen+0x5e04>
    6dc4:	bl	0 <coda_type_record_field_new>
    6dc8:	ldr	r3, [sl, r4]
    6dcc:	ldr	r1, [r3, #464]	; 0x1d0
    6dd0:	mov	r5, r0
    6dd4:	bl	0 <coda_type_record_field_set_type>
    6dd8:	ldr	r3, [sl, r4]
    6ddc:	mov	r1, r5
    6de0:	ldr	r0, [r3, #544]	; 0x220
    6de4:	bl	0 <coda_type_record_add_field>
    6de8:	ldr	r0, [pc, #2344]	; 7718 <coda_grib_reopen+0x5e08>
    6dec:	bl	0 <coda_type_record_field_new>
    6df0:	ldr	r3, [sl, r4]
    6df4:	ldr	r1, [r3, #468]	; 0x1d4
    6df8:	mov	r5, r0
    6dfc:	bl	0 <coda_type_record_field_set_type>
    6e00:	ldr	r3, [sl, r4]
    6e04:	mov	r1, r5
    6e08:	ldr	r0, [r3, #544]	; 0x220
    6e0c:	bl	0 <coda_type_record_add_field>
    6e10:	ldr	r0, [pc, #2308]	; 771c <coda_grib_reopen+0x5e0c>
    6e14:	bl	0 <coda_type_record_field_new>
    6e18:	ldr	r3, [sl, r4]
    6e1c:	ldr	r1, [r3, #472]	; 0x1d8
    6e20:	mov	r5, r0
    6e24:	bl	0 <coda_type_record_field_set_type>
    6e28:	ldr	r3, [sl, r4]
    6e2c:	mov	r1, r5
    6e30:	ldr	r0, [r3, #544]	; 0x220
    6e34:	bl	0 <coda_type_record_add_field>
    6e38:	ldr	r0, [pc, #2272]	; 7720 <coda_grib_reopen+0x5e10>
    6e3c:	bl	0 <coda_type_record_field_new>
    6e40:	ldr	r3, [sl, r4]
    6e44:	ldr	r1, [r3, #476]	; 0x1dc
    6e48:	mov	r5, r0
    6e4c:	bl	0 <coda_type_record_field_set_type>
    6e50:	ldr	r3, [sl, r4]
    6e54:	mov	r1, r5
    6e58:	ldr	r0, [r3, #544]	; 0x220
    6e5c:	bl	0 <coda_type_record_add_field>
    6e60:	ldr	r0, [pc, #2236]	; 7724 <coda_grib_reopen+0x5e14>
    6e64:	bl	0 <coda_type_record_field_new>
    6e68:	ldr	r3, [sl, r4]
    6e6c:	ldr	r1, [r3, #480]	; 0x1e0
    6e70:	mov	r5, r0
    6e74:	bl	0 <coda_type_record_field_set_type>
    6e78:	ldr	r3, [sl, r4]
    6e7c:	mov	r1, r5
    6e80:	ldr	r0, [r3, #544]	; 0x220
    6e84:	bl	0 <coda_type_record_add_field>
    6e88:	ldr	r0, [pc, #2200]	; 7728 <coda_grib_reopen+0x5e18>
    6e8c:	bl	0 <coda_type_record_field_new>
    6e90:	ldr	r3, [sl, r4]
    6e94:	ldr	r1, [r3, #484]	; 0x1e4
    6e98:	mov	r5, r0
    6e9c:	bl	0 <coda_type_record_field_set_type>
    6ea0:	ldr	r3, [sl, r4]
    6ea4:	mov	r1, r5
    6ea8:	ldr	r0, [r3, #544]	; 0x220
    6eac:	bl	0 <coda_type_record_add_field>
    6eb0:	ldr	r0, [pc, #2164]	; 772c <coda_grib_reopen+0x5e1c>
    6eb4:	bl	0 <coda_type_record_field_new>
    6eb8:	ldr	r3, [sl, r4]
    6ebc:	ldr	r1, [r3, #488]	; 0x1e8
    6ec0:	mov	r5, r0
    6ec4:	bl	0 <coda_type_record_field_set_type>
    6ec8:	ldr	r3, [sl, r4]
    6ecc:	mov	r1, r5
    6ed0:	ldr	r0, [r3, #544]	; 0x220
    6ed4:	bl	0 <coda_type_record_add_field>
    6ed8:	ldr	r0, [pc, #2128]	; 7730 <coda_grib_reopen+0x5e20>
    6edc:	bl	0 <coda_type_record_field_new>
    6ee0:	ldr	r3, [sl, r4]
    6ee4:	ldr	r1, [r3, #492]	; 0x1ec
    6ee8:	mov	r5, r0
    6eec:	bl	0 <coda_type_record_field_set_type>
    6ef0:	ldr	r3, [sl, r4]
    6ef4:	mov	r1, r5
    6ef8:	ldr	r0, [r3, #544]	; 0x220
    6efc:	bl	0 <coda_type_record_add_field>
    6f00:	ldr	r0, [pc, #2092]	; 7734 <coda_grib_reopen+0x5e24>
    6f04:	bl	0 <coda_type_record_field_new>
    6f08:	ldr	r3, [sl, r4]
    6f0c:	ldr	r1, [r3, #496]	; 0x1f0
    6f10:	mov	r5, r0
    6f14:	bl	0 <coda_type_record_field_set_type>
    6f18:	ldr	r3, [sl, r4]
    6f1c:	mov	r1, r5
    6f20:	ldr	r0, [r3, #544]	; 0x220
    6f24:	bl	0 <coda_type_record_add_field>
    6f28:	ldr	r0, [pc, #2056]	; 7738 <coda_grib_reopen+0x5e28>
    6f2c:	bl	0 <coda_type_record_field_new>
    6f30:	ldr	r3, [sl, r4]
    6f34:	ldr	r1, [r3, #500]	; 0x1f4
    6f38:	mov	r5, r0
    6f3c:	bl	0 <coda_type_record_field_set_type>
    6f40:	ldr	r3, [sl, r4]
    6f44:	mov	r1, r5
    6f48:	ldr	r0, [r3, #544]	; 0x220
    6f4c:	bl	0 <coda_type_record_add_field>
    6f50:	ldr	r0, [pc, #2020]	; 773c <coda_grib_reopen+0x5e2c>
    6f54:	bl	0 <coda_type_record_field_new>
    6f58:	ldr	r3, [sl, r4]
    6f5c:	ldr	r1, [r3, #504]	; 0x1f8
    6f60:	mov	r5, r0
    6f64:	bl	0 <coda_type_record_field_set_type>
    6f68:	ldr	r3, [sl, r4]
    6f6c:	mov	r1, r5
    6f70:	ldr	r0, [r3, #544]	; 0x220
    6f74:	bl	0 <coda_type_record_add_field>
    6f78:	ldr	r0, [pc, #1984]	; 7740 <coda_grib_reopen+0x5e30>
    6f7c:	bl	0 <coda_type_record_field_new>
    6f80:	ldr	r3, [sl, r4]
    6f84:	ldr	r1, [r3, #508]	; 0x1fc
    6f88:	mov	r5, r0
    6f8c:	bl	0 <coda_type_record_field_set_type>
    6f90:	ldr	r3, [sl, r4]
    6f94:	mov	r1, r5
    6f98:	ldr	r0, [r3, #544]	; 0x220
    6f9c:	bl	0 <coda_type_record_add_field>
    6fa0:	ldr	r0, [pc, #1948]	; 7744 <coda_grib_reopen+0x5e34>
    6fa4:	bl	0 <coda_type_record_field_new>
    6fa8:	ldr	r3, [sl, r4]
    6fac:	ldr	r1, [r3, #516]	; 0x204
    6fb0:	mov	r5, r0
    6fb4:	bl	0 <coda_type_record_field_set_type>
    6fb8:	mov	r0, r5
    6fbc:	bl	0 <coda_type_record_field_set_optional>
    6fc0:	ldr	r3, [sl, r4]
    6fc4:	mov	r1, r5
    6fc8:	ldr	r0, [r3, #544]	; 0x220
    6fcc:	bl	0 <coda_type_record_add_field>
    6fd0:	ldr	r0, [pc, #1904]	; 7748 <coda_grib_reopen+0x5e38>
    6fd4:	bl	0 <coda_type_record_field_new>
    6fd8:	ldr	r3, [sl, r4]
    6fdc:	ldr	r1, [r3, #524]	; 0x20c
    6fe0:	mov	r5, r0
    6fe4:	bl	0 <coda_type_record_field_set_type>
    6fe8:	mov	r0, r5
    6fec:	bl	0 <coda_type_record_field_set_hidden>
    6ff0:	ldr	r3, [sl, r4]
    6ff4:	mov	r1, r5
    6ff8:	ldr	r0, [r3, #544]	; 0x220
    6ffc:	bl	0 <coda_type_record_add_field>
    7000:	ldr	r0, [pc, #1860]	; 774c <coda_grib_reopen+0x5e3c>
    7004:	bl	0 <coda_type_record_field_new>
    7008:	ldr	r3, [sl, r4]
    700c:	ldr	r1, [r3, #320]	; 0x140
    7010:	mov	r5, r0
    7014:	bl	0 <coda_type_record_field_set_type>
    7018:	mov	r0, r5
    701c:	bl	0 <coda_type_record_field_set_hidden>
    7020:	ldr	r3, [sl, r4]
    7024:	mov	r1, r5
    7028:	ldr	r0, [r3, #544]	; 0x220
    702c:	bl	0 <coda_type_record_add_field>
    7030:	ldr	r0, [pc, #1816]	; 7750 <coda_grib_reopen+0x5e40>
    7034:	bl	0 <coda_type_record_field_new>
    7038:	ldr	r3, [sl, r4]
    703c:	ldr	r1, [r3, #528]	; 0x210
    7040:	mov	r5, r0
    7044:	bl	0 <coda_type_record_field_set_type>
    7048:	mov	r0, r5
    704c:	bl	0 <coda_type_record_field_set_hidden>
    7050:	ldr	r3, [sl, r4]
    7054:	mov	r1, r5
    7058:	ldr	r0, [r3, #544]	; 0x220
    705c:	bl	0 <coda_type_record_add_field>
    7060:	ldr	r0, [pc, #1772]	; 7754 <coda_grib_reopen+0x5e44>
    7064:	bl	0 <coda_type_record_field_new>
    7068:	ldr	r3, [sl, r4]
    706c:	ldr	r1, [r3, #532]	; 0x214
    7070:	mov	r5, r0
    7074:	bl	0 <coda_type_record_field_set_type>
    7078:	mov	r0, r5
    707c:	bl	0 <coda_type_record_field_set_hidden>
    7080:	ldr	r3, [sl, r4]
    7084:	mov	r1, r5
    7088:	ldr	r0, [r3, #544]	; 0x220
    708c:	bl	0 <coda_type_record_add_field>
    7090:	ldr	r0, [pc, #1728]	; 7758 <coda_grib_reopen+0x5e48>
    7094:	bl	0 <coda_type_record_field_new>
    7098:	ldr	r3, [sl, r4]
    709c:	ldr	r1, [r3, #536]	; 0x218
    70a0:	mov	r5, r0
    70a4:	bl	0 <coda_type_record_field_set_type>
    70a8:	ldr	r3, [sl, r4]
    70ac:	mov	r1, r5
    70b0:	ldr	r0, [r3, #544]	; 0x220
    70b4:	bl	0 <coda_type_record_add_field>
    70b8:	mov	r0, #7
    70bc:	ldr	r5, [sl, r4]
    70c0:	bl	0 <coda_type_array_new>
    70c4:	ldr	r3, [sl, r4]
    70c8:	str	r0, [r5, #548]	; 0x224
    70cc:	ldr	r1, [r3, #348]	; 0x15c
    70d0:	ldr	r0, [r3, #548]	; 0x224
    70d4:	bl	0 <coda_type_array_set_base_type>
    70d8:	ldr	r3, [sl, r4]
    70dc:	mov	r1, #0
    70e0:	ldr	r0, [r3, #548]	; 0x224
    70e4:	bl	0 <coda_type_array_add_variable_dimension>
    70e8:	mov	r0, #7
    70ec:	ldr	r5, [sl, r4]
    70f0:	bl	0 <coda_type_array_new>
    70f4:	ldr	r3, [sl, r4]
    70f8:	str	r0, [r5, #552]	; 0x228
    70fc:	ldr	r1, [r3, #540]	; 0x21c
    7100:	ldr	r0, [r3, #552]	; 0x228
    7104:	bl	0 <coda_type_array_set_base_type>
    7108:	ldr	r3, [sl, r4]
    710c:	mov	r1, #0
    7110:	ldr	r0, [r3, #552]	; 0x228
    7114:	bl	0 <coda_type_array_add_variable_dimension>
    7118:	mov	r0, #7
    711c:	ldr	r5, [sl, r4]
    7120:	bl	0 <coda_type_array_new>
    7124:	ldr	r3, [sl, r4]
    7128:	str	r0, [r5, #556]	; 0x22c
    712c:	ldr	r1, [r3, #544]	; 0x220
    7130:	ldr	r0, [r3, #556]	; 0x22c
    7134:	bl	0 <coda_type_array_set_base_type>
    7138:	ldr	r3, [sl, r4]
    713c:	mov	r1, #0
    7140:	ldr	r0, [r3, #556]	; 0x22c
    7144:	bl	0 <coda_type_array_add_variable_dimension>
    7148:	mov	r0, #7
    714c:	ldr	r5, [sl, r4]
    7150:	bl	0 <coda_type_record_new>
    7154:	str	r0, [r5, #560]	; 0x230
    7158:	ldr	r0, [pc, #1532]	; 775c <coda_grib_reopen+0x5e4c>
    715c:	bl	0 <coda_type_record_field_new>
    7160:	ldr	r3, [sl, r4]
    7164:	ldr	r1, [r3, #284]	; 0x11c
    7168:	mov	r5, r0
    716c:	bl	0 <coda_type_record_field_set_type>
    7170:	ldr	r3, [sl, r4]
    7174:	mov	r1, r5
    7178:	ldr	r0, [r3, #560]	; 0x230
    717c:	bl	0 <coda_type_record_add_field>
    7180:	ldr	r0, [pc, #1496]	; 7760 <coda_grib_reopen+0x5e50>
    7184:	bl	0 <coda_type_record_field_new>
    7188:	ldr	r3, [sl, r4]
    718c:	ldr	r1, [r3, #324]	; 0x144
    7190:	mov	r5, r0
    7194:	bl	0 <coda_type_record_field_set_type>
    7198:	ldr	r3, [sl, r4]
    719c:	mov	r1, r5
    71a0:	ldr	r0, [r3, #560]	; 0x230
    71a4:	bl	0 <coda_type_record_add_field>
    71a8:	ldr	r0, [pc, #1460]	; 7764 <coda_grib_reopen+0x5e54>
    71ac:	bl	0 <coda_type_record_field_new>
    71b0:	ldr	r3, [sl, r4]
    71b4:	ldr	r1, [r3, #288]	; 0x120
    71b8:	mov	r5, r0
    71bc:	bl	0 <coda_type_record_field_set_type>
    71c0:	ldr	r3, [sl, r4]
    71c4:	mov	r1, r5
    71c8:	ldr	r0, [r3, #560]	; 0x230
    71cc:	bl	0 <coda_type_record_add_field>
    71d0:	ldr	r0, [pc, #1424]	; 7768 <coda_grib_reopen+0x5e58>
    71d4:	bl	0 <coda_type_record_field_new>
    71d8:	ldr	r3, [sl, r4]
    71dc:	ldr	r1, [r3, #316]	; 0x13c
    71e0:	mov	r5, r0
    71e4:	bl	0 <coda_type_record_field_set_type>
    71e8:	ldr	r3, [sl, r4]
    71ec:	mov	r1, r5
    71f0:	ldr	r0, [r3, #560]	; 0x230
    71f4:	bl	0 <coda_type_record_add_field>
    71f8:	ldr	r0, [pc, #1388]	; 776c <coda_grib_reopen+0x5e5c>
    71fc:	bl	0 <coda_type_record_field_new>
    7200:	ldr	r3, [sl, r4]
    7204:	ldr	r1, [r3, #328]	; 0x148
    7208:	mov	r5, r0
    720c:	bl	0 <coda_type_record_field_set_type>
    7210:	ldr	r3, [sl, r4]
    7214:	mov	r1, r5
    7218:	ldr	r0, [r3, #560]	; 0x230
    721c:	bl	0 <coda_type_record_add_field>
    7220:	ldr	r0, [pc, #1352]	; 7770 <coda_grib_reopen+0x5e60>
    7224:	bl	0 <coda_type_record_field_new>
    7228:	ldr	r3, [sl, r4]
    722c:	ldr	r1, [r3, #332]	; 0x14c
    7230:	mov	r5, r0
    7234:	bl	0 <coda_type_record_field_set_type>
    7238:	ldr	r3, [sl, r4]
    723c:	mov	r1, r5
    7240:	ldr	r0, [r3, #560]	; 0x230
    7244:	bl	0 <coda_type_record_add_field>
    7248:	ldr	r0, [pc, #1316]	; 7774 <coda_grib_reopen+0x5e64>
    724c:	bl	0 <coda_type_record_field_new>
    7250:	ldr	r3, [sl, r4]
    7254:	ldr	r1, [r3, #336]	; 0x150
    7258:	mov	r5, r0
    725c:	bl	0 <coda_type_record_field_set_type>
    7260:	ldr	r3, [sl, r4]
    7264:	mov	r1, r5
    7268:	ldr	r0, [r3, #560]	; 0x230
    726c:	bl	0 <coda_type_record_add_field>
    7270:	ldr	r0, [pc, #1280]	; 7778 <coda_grib_reopen+0x5e68>
    7274:	bl	0 <coda_type_record_field_new>
    7278:	ldr	r3, [sl, r4]
    727c:	ldr	r1, [r3, #292]	; 0x124
    7280:	mov	r5, r0
    7284:	bl	0 <coda_type_record_field_set_type>
    7288:	ldr	r3, [sl, r4]
    728c:	mov	r1, r5
    7290:	ldr	r0, [r3, #560]	; 0x230
    7294:	bl	0 <coda_type_record_add_field>
    7298:	ldr	r0, [pc, #1244]	; 777c <coda_grib_reopen+0x5e6c>
    729c:	bl	0 <coda_type_record_field_new>
    72a0:	ldr	r3, [sl, r4]
    72a4:	ldr	r1, [r3, #296]	; 0x128
    72a8:	mov	r5, r0
    72ac:	bl	0 <coda_type_record_field_set_type>
    72b0:	ldr	r3, [sl, r4]
    72b4:	mov	r1, r5
    72b8:	ldr	r0, [r3, #560]	; 0x230
    72bc:	bl	0 <coda_type_record_add_field>
    72c0:	ldr	r0, [pc, #1208]	; 7780 <coda_grib_reopen+0x5e70>
    72c4:	bl	0 <coda_type_record_field_new>
    72c8:	ldr	r3, [sl, r4]
    72cc:	ldr	r1, [r3, #300]	; 0x12c
    72d0:	mov	r5, r0
    72d4:	bl	0 <coda_type_record_field_set_type>
    72d8:	ldr	r3, [sl, r4]
    72dc:	mov	r1, r5
    72e0:	ldr	r0, [r3, #560]	; 0x230
    72e4:	bl	0 <coda_type_record_add_field>
    72e8:	ldr	r0, [pc, #1172]	; 7784 <coda_grib_reopen+0x5e74>
    72ec:	bl	0 <coda_type_record_field_new>
    72f0:	ldr	r3, [sl, r4]
    72f4:	ldr	r1, [r3, #304]	; 0x130
    72f8:	mov	r5, r0
    72fc:	bl	0 <coda_type_record_field_set_type>
    7300:	ldr	r3, [sl, r4]
    7304:	mov	r1, r5
    7308:	ldr	r0, [r3, #560]	; 0x230
    730c:	bl	0 <coda_type_record_add_field>
    7310:	ldr	r0, [pc, #1136]	; 7788 <coda_grib_reopen+0x5e78>
    7314:	bl	0 <coda_type_record_field_new>
    7318:	ldr	r3, [sl, r4]
    731c:	ldr	r1, [r3, #308]	; 0x134
    7320:	mov	r5, r0
    7324:	bl	0 <coda_type_record_field_set_type>
    7328:	ldr	r3, [sl, r4]
    732c:	mov	r1, r5
    7330:	ldr	r0, [r3, #560]	; 0x230
    7334:	bl	0 <coda_type_record_add_field>
    7338:	ldr	r0, [pc, #1100]	; 778c <coda_grib_reopen+0x5e7c>
    733c:	bl	0 <coda_type_record_field_new>
    7340:	ldr	r3, [sl, r4]
    7344:	ldr	r1, [r3, #312]	; 0x138
    7348:	mov	r5, r0
    734c:	bl	0 <coda_type_record_field_set_type>
    7350:	ldr	r3, [sl, r4]
    7354:	mov	r1, r5
    7358:	ldr	r0, [r3, #560]	; 0x230
    735c:	bl	0 <coda_type_record_add_field>
    7360:	ldr	r0, [pc, #1064]	; 7790 <coda_grib_reopen+0x5e80>
    7364:	bl	0 <coda_type_record_field_new>
    7368:	ldr	r3, [sl, r4]
    736c:	ldr	r1, [r3, #340]	; 0x154
    7370:	mov	r5, r0
    7374:	bl	0 <coda_type_record_field_set_type>
    7378:	ldr	r3, [sl, r4]
    737c:	mov	r1, r5
    7380:	ldr	r0, [r3, #560]	; 0x230
    7384:	bl	0 <coda_type_record_add_field>
    7388:	ldr	r0, [pc, #1028]	; 7794 <coda_grib_reopen+0x5e84>
    738c:	bl	0 <coda_type_record_field_new>
    7390:	ldr	r3, [sl, r4]
    7394:	ldr	r1, [r3, #344]	; 0x158
    7398:	mov	r5, r0
    739c:	bl	0 <coda_type_record_field_set_type>
    73a0:	ldr	r3, [sl, r4]
    73a4:	mov	r1, r5
    73a8:	ldr	r0, [r3, #560]	; 0x230
    73ac:	bl	0 <coda_type_record_add_field>
    73b0:	ldr	r0, [pc, #992]	; 7798 <coda_grib_reopen+0x5e88>
    73b4:	bl	0 <coda_type_record_field_new>
    73b8:	ldr	r3, [sl, r4]
    73bc:	ldr	r1, [r3, #548]	; 0x224
    73c0:	mov	r5, r0
    73c4:	bl	0 <coda_type_record_field_set_type>
    73c8:	ldr	r3, [sl, r4]
    73cc:	mov	r1, r5
    73d0:	ldr	r0, [r3, #560]	; 0x230
    73d4:	bl	0 <coda_type_record_add_field>
    73d8:	ldr	r0, [pc, #956]	; 779c <coda_grib_reopen+0x5e8c>
    73dc:	bl	0 <coda_type_record_field_new>
    73e0:	ldr	r3, [sl, r4]
    73e4:	ldr	r1, [r3, #552]	; 0x228
    73e8:	mov	r5, r0
    73ec:	bl	0 <coda_type_record_field_set_type>
    73f0:	ldr	r3, [sl, r4]
    73f4:	mov	r1, r5
    73f8:	ldr	r0, [r3, #560]	; 0x230
    73fc:	bl	0 <coda_type_record_add_field>
    7400:	ldr	r0, [pc, #920]	; 77a0 <coda_grib_reopen+0x5e90>
    7404:	bl	0 <coda_type_record_field_new>
    7408:	ldr	r3, [sl, r4]
    740c:	ldr	r1, [r3, #556]	; 0x22c
    7410:	mov	r5, r0
    7414:	bl	0 <coda_type_record_field_set_type>
    7418:	ldr	r3, [sl, r4]
    741c:	mov	r1, r5
    7420:	ldr	r0, [r3, #560]	; 0x230
    7424:	bl	0 <coda_type_record_add_field>
    7428:	mov	r0, #7
    742c:	ldr	r5, [sl, r4]
    7430:	bl	0 <coda_type_union_new>
    7434:	str	r0, [r5, #564]	; 0x234
    7438:	ldr	r0, [pc, #868]	; 77a4 <coda_grib_reopen+0x5e94>
    743c:	bl	0 <coda_type_record_field_new>
    7440:	ldr	r3, [sl, r4]
    7444:	ldr	r1, [r3, #272]	; 0x110
    7448:	mov	r5, r0
    744c:	bl	0 <coda_type_record_field_set_type>
    7450:	mov	r0, r5
    7454:	bl	0 <coda_type_record_field_set_optional>
    7458:	ldr	r3, [sl, r4]
    745c:	mov	r1, r5
    7460:	ldr	r0, [r3, #564]	; 0x234
    7464:	bl	0 <coda_type_record_add_field>
    7468:	ldr	r0, [pc, #824]	; 77a8 <coda_grib_reopen+0x5e98>
    746c:	bl	0 <coda_type_record_field_new>
    7470:	ldr	r3, [sl, r4]
    7474:	ldr	r1, [r3, #560]	; 0x230
    7478:	mov	r5, r0
    747c:	bl	0 <coda_type_record_field_set_type>
    7480:	mov	r0, r5
    7484:	bl	0 <coda_type_record_field_set_optional>
    7488:	ldr	r3, [sl, r4]
    748c:	mov	r1, r5
    7490:	ldr	r0, [r3, #564]	; 0x234
    7494:	bl	0 <coda_type_record_add_field>
    7498:	mov	r0, #7
    749c:	ldr	r5, [sl, r4]
    74a0:	bl	0 <coda_type_array_new>
    74a4:	ldr	r3, [sl, r4]
    74a8:	str	r0, [r5, #568]	; 0x238
    74ac:	ldr	r1, [r3, #564]	; 0x234
    74b0:	ldr	r0, [r3, #568]	; 0x238
    74b4:	bl	0 <coda_type_array_set_base_type>
    74b8:	ldr	r3, [sl, r4]
    74bc:	mov	r1, #0
    74c0:	ldr	r0, [r3, #568]	; 0x238
    74c4:	bl	0 <coda_type_array_add_variable_dimension>
    74c8:	b	1934 <coda_grib_reopen+0x24>
    74cc:	ldrd	r8, [sp, #24]
    74d0:	add	r2, sp, #196	; 0xc4
    74d4:	mov	r0, r8
    74d8:	mov	r1, r9
    74dc:	bl	0 <coda_str64>
    74e0:	ldrb	r2, [sp, #252]	; 0xfc
    74e4:	add	r3, sp, #196	; 0xc4
    74e8:	ldr	r1, [pc, #700]	; 77ac <coda_grib_reopen+0x5e9c>
    74ec:	sub	r2, r2, #48	; 0x30
    74f0:	ldr	r0, [pc, #780]	; 7804 <coda_grib_reopen+0x5ef4>
    74f4:	bl	0 <coda_set_error>
    74f8:	b	2cf4 <coda_grib_reopen+0x13e4>
    74fc:	cmp	r4, #7
    7500:	ldrd	r6, [sp, #168]	; 0xa8
    7504:	beq	2d9c <coda_grib_reopen+0x148c>
    7508:	ldrd	r0, [sp, #24]
    750c:	add	r2, sp, #196	; 0xc4
    7510:	bl	0 <coda_str64>
    7514:	add	r2, sp, #196	; 0xc4
    7518:	ldr	r1, [pc, #656]	; 77b0 <coda_grib_reopen+0x5ea0>
    751c:	ldr	r0, [pc, #736]	; 7804 <coda_grib_reopen+0x5ef4>
    7520:	bl	0 <coda_set_error>
    7524:	b	2cf4 <coda_grib_reopen+0x13e4>
    7528:	bl	0 <coda_NaN>
    752c:	vmov.f64	d8, d0
    7530:	b	2fc8 <coda_grib_reopen+0x16b8>
    7534:	bl	0 <coda_NaN>
    7538:	vmov.f64	d9, d0
    753c:	b	2f68 <coda_grib_reopen+0x1658>
    7540:	bl	0 <__errno_location>
    7544:	ldr	r0, [r0]
    7548:	bl	0 <strerror>
    754c:	ldr	r1, [pc, #608]	; 77b4 <coda_grib_reopen+0x5ea4>
    7550:	mov	r2, r0
    7554:	mvn	r0, #21
    7558:	bl	0 <coda_set_error>
    755c:	mov	r0, fp
    7560:	bl	18b8 <coda_grib_close>
    7564:	mvn	r0, #0
    7568:	b	2d08 <coda_grib_reopen+0x13f8>
    756c:	mov	r2, r8
    7570:	mov	r3, r6
    7574:	ldr	r1, [pc, #572]	; 77b8 <coda_grib_reopen+0x5ea8>
    7578:	ldr	r0, [pc, #644]	; 7804 <coda_grib_reopen+0x5ef4>
    757c:	bl	0 <coda_set_error>
    7580:	mov	r0, r4
    7584:	bl	0 <coda_dynamic_type_delete>
    7588:	b	2cf4 <coda_grib_reopen+0x13e4>
    758c:	mov	r3, #227	; 0xe3
    7590:	str	r3, [sp]
    7594:	ldr	r3, [pc, #584]	; 77e4 <coda_grib_reopen+0x5ed4>
    7598:	mov	r2, #572	; 0x23c
    759c:	ldr	r1, [pc, #572]	; 77e0 <coda_grib_reopen+0x5ed0>
    75a0:	mvn	r0, #0
    75a4:	bl	0 <coda_set_error>
    75a8:	ldr	r3, [sp, #44]	; 0x2c
    75ac:	ldr	r0, [r3]
    75b0:	bl	0 <coda_close>
    75b4:	mvn	r0, #0
    75b8:	b	2d08 <coda_grib_reopen+0x13f8>
    75bc:	beq	2fc8 <coda_grib_reopen+0x16b8>
    75c0:	ldr	r7, [sp, #32]
    75c4:	sub	r3, r3, #1
    75c8:	vdiv.f64	d8, d8, d10
    75cc:	uxtb	r3, r3
    75d0:	cmp	r3, #0
    75d4:	sxtb	r3, r3
    75d8:	bne	75c4 <coda_grib_reopen+0x5cb4>
    75dc:	b	2fc4 <coda_grib_reopen+0x16b4>
    75e0:	ldrd	r0, [sp, #48]	; 0x30
    75e4:	mvn	r3, #0
    75e8:	mvn	r2, #0
    75ec:	cmp	r1, r3
    75f0:	cmpeq	r0, r2
    75f4:	beq	798c <coda_grib_reopen+0x607c>
    75f8:	ldrd	r2, [sp, #24]
    75fc:	adds	r2, r2, #2
    7600:	adc	r3, r3, #0
    7604:	strd	r2, [sp, #16]
    7608:	mov	r3, #1
    760c:	str	r3, [sp, #84]	; 0x54
    7610:	b	339c <coda_grib_reopen+0x1a8c>
    7614:	beq	2f68 <coda_grib_reopen+0x1658>
    7618:	ldr	r7, [sp, #32]
    761c:	sub	r3, r3, #1
    7620:	vdiv.f64	d9, d9, d10
    7624:	uxtb	r3, r3
    7628:	cmp	r3, #0
    762c:	sxtb	r3, r3
    7630:	bne	761c <coda_grib_reopen+0x5d0c>
    7634:	b	2f64 <coda_grib_reopen+0x1654>
    7638:	ldr	r0, [sp, #76]	; 0x4c
    763c:	bl	0 <coda_dynamic_type_delete>
    7640:	mov	r0, fp
    7644:	bl	18b8 <coda_grib_close>
    7648:	mvn	r0, #0
    764c:	b	2d08 <coda_grib_reopen+0x13f8>
    7650:	ldr	r3, [sp, #40]	; 0x28
    7654:	mov	r2, r9
    7658:	ldr	r1, [pc, #348]	; 77bc <coda_grib_reopen+0x5eac>
    765c:	mvn	r0, #199	; 0xc7
    7660:	bl	0 <coda_set_error>
    7664:	mov	r0, fp
    7668:	bl	18b8 <coda_grib_close>
    766c:	mvn	r0, #0
    7670:	b	2d08 <coda_grib_reopen+0x13f8>
    7674:	mov	r3, r4
    7678:	mvn	r2, #45	; 0x2d
    767c:	ldr	r1, [pc, #360]	; 77ec <coda_grib_reopen+0x5edc>
    7680:	ldr	r0, [pc, #380]	; 7804 <coda_grib_reopen+0x5ef4>
    7684:	bl	0 <coda_set_error>
    7688:	b	2cf4 <coda_grib_reopen+0x13e4>
    768c:	.word	0x00001444
    7690:	.word	0x00001008
    7694:	.word	0x000010ac
    7698:	.word	0x000010cc
    769c:	.word	0x00001100
    76a0:	.word	0x00001120
    76a4:	.word	0x0000145c
    76a8:	.word	0x00001470
    76ac:	.word	0x00001488
    76b0:	.word	0x0000149c
    76b4:	.word	0x000014bc
    76b8:	.word	0x000014dc
    76bc:	.word	0x000014ec
    76c0:	.word	0x00001510
    76c4:	.word	0x00001534
    76c8:	.word	0x00001550
    76cc:	.word	0x0000156c
    76d0:	.word	0x00001588
    76d4:	.word	0x00000390
    76d8:	.word	0x00000394
    76dc:	.word	0x000015a4
    76e0:	.word	0x000015cc
    76e4:	.word	0x00000398
    76e8:	.word	0x000003b4
    76ec:	.word	0x000003d0
    76f0:	.word	0x000003ec
    76f4:	.word	0x00000404
    76f8:	.word	0x00000420
    76fc:	.word	0x00000438
    7700:	.word	0x00000434
    7704:	.word	0x0000044c
    7708:	.word	0x0000050c
    770c:	.word	0x000015e8
    7710:	.word	0x000015f8
    7714:	.word	0x0000160c
    7718:	.word	0x0000161c
    771c:	.word	0x00001634
    7720:	.word	0x00000140
    7724:	.word	0x00001648
    7728:	.word	0x00001660
    772c:	.word	0x00001678
    7730:	.word	0x00001694
    7734:	.word	0x000016a4
    7738:	.word	0x000016bc
    773c:	.word	0x000016d0
    7740:	.word	0x000016ec
    7744:	.word	0x0000045c
    7748:	.word	0x00000744
    774c:	.word	0x0000026c
    7750:	.word	0x00000754
    7754:	.word	0x00000768
    7758:	.word	0x00000778
    775c:	.word	0x00001198
    7760:	.word	0x00001700
    7764:	.word	0x00000138
    7768:	.word	0x00000260
    776c:	.word	0x0000170c
    7770:	.word	0x00001720
    7774:	.word	0x00001734
    7778:	.word	0x00001750
    777c:	.word	0x000001b4
    7780:	.word	0x000001bc
    7784:	.word	0x000001c0
    7788:	.word	0x000001c8
    778c:	.word	0x00001758
    7790:	.word	0x00001760
    7794:	.word	0x00001780
    7798:	.word	0x00000300
    779c:	.word	0x0000057c
    77a0:	.word	0x00000780
    77a4:	.word	0x00001794
    77a8:	.word	0x0000179c
    77ac:	.word	0x00001894
    77b0:	.word	0x00001a7c
    77b4:	.word	0x00000108
    77b8:	.word	0x00001960
    77bc:	.word	0x0000185c
    77c0:	.word	0x00001a50
    77c4:	.word	0x000019d8
    77c8:	.word	0x000019bc
    77cc:	.word	0x0000198c
    77d0:	.word	0x00000bdf
    77d4:	.word	0x000017a4
    77d8:	.word	0x00000bcb
    77dc:	.word	0x00000b7c
    77e0:	.word	0x000002c8
    77e4:	.word	0x00000280
    77e8:	.word	0x0000091c
    77ec:	.word	0x000018d8
    77f0:	.word	0x0000000c
    77f4:	.word	0x000017e0
    77f8:	.word	0x000000b8
    77fc:	.word	0x00001a2c
    7800:	.word	0x00001a08
    7804:	.word	0xfffffed4
    7808:	ldrd	r0, [sp, #16]
    780c:	add	r2, sp, #196	; 0xc4
    7810:	bl	0 <coda_str64>
    7814:	ldrb	r2, [sp, #248]	; 0xf8
    7818:	add	r3, sp, #196	; 0xc4
    781c:	ldr	r1, [pc, #-100]	; 77c0 <coda_grib_reopen+0x5eb0>
    7820:	sub	r2, r2, #48	; 0x30
    7824:	ldr	r0, [pc, #-40]	; 7804 <coda_grib_reopen+0x5ef4>
    7828:	bl	0 <coda_set_error>
    782c:	b	2cf4 <coda_grib_reopen+0x13e4>
    7830:	mov	r3, r4
    7834:	mvn	r2, #40	; 0x28
    7838:	ldr	r1, [pc, #-84]	; 77ec <coda_grib_reopen+0x5edc>
    783c:	ldr	r0, [pc, #-64]	; 7804 <coda_grib_reopen+0x5ef4>
    7840:	bl	0 <coda_set_error>
    7844:	b	2cf4 <coda_grib_reopen+0x13e4>
    7848:	mov	r3, r4
    784c:	mvn	r2, #44	; 0x2c
    7850:	ldr	r1, [pc, #-108]	; 77ec <coda_grib_reopen+0x5edc>
    7854:	ldr	r0, [pc, #-88]	; 7804 <coda_grib_reopen+0x5ef4>
    7858:	bl	0 <coda_set_error>
    785c:	b	2cf4 <coda_grib_reopen+0x13e4>
    7860:	mov	r2, r1
    7864:	b	7570 <coda_grib_reopen+0x5c60>
    7868:	mov	r3, r4
    786c:	mvn	r2, #43	; 0x2b
    7870:	ldr	r1, [pc, #-140]	; 77ec <coda_grib_reopen+0x5edc>
    7874:	ldr	r0, [pc, #-120]	; 7804 <coda_grib_reopen+0x5ef4>
    7878:	bl	0 <coda_set_error>
    787c:	b	2cf4 <coda_grib_reopen+0x13e4>
    7880:	mov	r3, r4
    7884:	mvn	r2, #42	; 0x2a
    7888:	ldr	r1, [pc, #-164]	; 77ec <coda_grib_reopen+0x5edc>
    788c:	ldr	r0, [pc, #-144]	; 7804 <coda_grib_reopen+0x5ef4>
    7890:	bl	0 <coda_set_error>
    7894:	b	2cf4 <coda_grib_reopen+0x13e4>
    7898:	mov	r2, r1
    789c:	ldr	r0, [pc, #-160]	; 7804 <coda_grib_reopen+0x5ef4>
    78a0:	ldr	r1, [pc, #-228]	; 77c4 <coda_grib_reopen+0x5eb4>
    78a4:	bl	0 <coda_set_error>
    78a8:	b	2cf4 <coda_grib_reopen+0x13e4>
    78ac:	mov	r2, ip
    78b0:	ldr	r1, [pc, #-240]	; 77c8 <coda_grib_reopen+0x5eb8>
    78b4:	ldr	r0, [pc, #-184]	; 7804 <coda_grib_reopen+0x5ef4>
    78b8:	bl	0 <coda_set_error>
    78bc:	b	2cf4 <coda_grib_reopen+0x13e4>
    78c0:	mov	r0, r4
    78c4:	bl	0 <free>
    78c8:	b	2cf4 <coda_grib_reopen+0x13e4>
    78cc:	mov	r2, r1
    78d0:	ldr	r0, [pc, #-212]	; 7804 <coda_grib_reopen+0x5ef4>
    78d4:	ldr	r1, [pc, #-272]	; 77cc <coda_grib_reopen+0x5ebc>
    78d8:	bl	0 <coda_set_error>
    78dc:	b	2cf4 <coda_grib_reopen+0x13e4>
    78e0:	ldr	r3, [pc, #-280]	; 77d0 <coda_grib_reopen+0x5ec0>
    78e4:	ldr	r2, [pc, #-264]	; 77e4 <coda_grib_reopen+0x5ed4>
    78e8:	ldr	r1, [pc, #-284]	; 77d4 <coda_grib_reopen+0x5ec4>
    78ec:	mvn	r0, #0
    78f0:	bl	0 <coda_set_error>
    78f4:	mov	r0, fp
    78f8:	bl	18b8 <coda_grib_close>
    78fc:	mvn	r0, #0
    7900:	b	2d08 <coda_grib_reopen+0x13f8>
    7904:	ldr	r2, [pc, #-308]	; 77d8 <coda_grib_reopen+0x5ec8>
    7908:	ldr	r3, [pc, #-300]	; 77e4 <coda_grib_reopen+0x5ed4>
    790c:	str	r2, [sp]
    7910:	mov	r2, #56	; 0x38
    7914:	b	759c <coda_grib_reopen+0x5c8c>
    7918:	ldr	r3, [pc, #-324]	; 77dc <coda_grib_reopen+0x5ecc>
    791c:	ldr	r2, [sp, #136]	; 0x88
    7920:	str	r3, [sp]
    7924:	ldr	r1, [pc, #-332]	; 77e0 <coda_grib_reopen+0x5ed0>
    7928:	ldr	r3, [pc, #-332]	; 77e4 <coda_grib_reopen+0x5ed4>
    792c:	mvn	r0, #0
    7930:	bl	0 <coda_set_error>
    7934:	b	2cf4 <coda_grib_reopen+0x13e4>
    7938:	ldr	r3, [pc, #-344]	; 77e8 <coda_grib_reopen+0x5ed8>
    793c:	mov	r2, r4
    7940:	b	7920 <coda_grib_reopen+0x6010>
    7944:	mov	r0, r8
    7948:	bl	0 <free>
    794c:	b	2cf4 <coda_grib_reopen+0x13e4>
    7950:	mov	r3, r4
    7954:	mvn	r2, #41	; 0x29
    7958:	ldr	r1, [pc, #-372]	; 77ec <coda_grib_reopen+0x5edc>
    795c:	ldr	r0, [pc, #-352]	; 7804 <coda_grib_reopen+0x5ef4>
    7960:	bl	0 <coda_set_error>
    7964:	b	2cf4 <coda_grib_reopen+0x13e4>
    7968:	ldr	r3, [pc, #-384]	; 77f0 <coda_grib_reopen+0x5ee0>
    796c:	mov	r2, #62	; 0x3e
    7970:	ldr	r1, [pc, #-388]	; 77f4 <coda_grib_reopen+0x5ee4>
    7974:	ldr	r0, [pc, #-388]	; 77f8 <coda_grib_reopen+0x5ee8>
    7978:	bl	0 <__assert_fail>
    797c:	ldr	r1, [pc, #-392]	; 77fc <coda_grib_reopen+0x5eec>
    7980:	ldr	r0, [pc, #-388]	; 7804 <coda_grib_reopen+0x5ef4>
    7984:	bl	0 <coda_set_error>
    7988:	b	2cf4 <coda_grib_reopen+0x13e4>
    798c:	ldr	r1, [pc, #-404]	; 7800 <coda_grib_reopen+0x5ef0>
    7990:	ldr	r0, [pc, #-404]	; 7804 <coda_grib_reopen+0x5ef4>
    7994:	bl	0 <coda_set_error>
    7998:	b	2cf4 <coda_grib_reopen+0x13e4>
