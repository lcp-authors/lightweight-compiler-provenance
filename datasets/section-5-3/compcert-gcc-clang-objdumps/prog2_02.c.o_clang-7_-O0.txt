
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #152	; 0x98
   c:	movw	r0, #0
  10:	str	r0, [fp, #-4]
  14:	movw	r0, #12
  18:	bl	0 <malloc>
  1c:	str	r0, [fp, #-8]
  20:	movw	r0, #0
  24:	str	r0, [sp, #60]	; 0x3c
  28:	ldr	r0, [sp, #60]	; 0x3c
  2c:	cmp	r0, #3
  30:	bge	58 <main+0x58>
  34:	ldr	r0, [fp, #-8]
  38:	ldr	r1, [sp, #60]	; 0x3c
  3c:	add	r0, r0, r1, lsl #2
  40:	movw	r1, #0
  44:	str	r1, [r0]
  48:	ldr	r0, [sp, #60]	; 0x3c
  4c:	add	r0, r0, #1
  50:	str	r0, [sp, #60]	; 0x3c
  54:	b	28 <main+0x28>
  58:	b	5c <main+0x5c>
  5c:	movw	r0, #0
  60:	str	r0, [sp, #60]	; 0x3c
  64:	ldr	r0, [sp, #60]	; 0x3c
  68:	cmp	r0, #3
  6c:	bge	ec <main+0xec>
  70:	ldr	r0, [sp, #60]	; 0x3c
  74:	add	r1, r0, #1
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	bl	0 <printf>
  84:	ldr	r1, [fp, #-8]
  88:	ldr	lr, [sp, #60]	; 0x3c
  8c:	add	r1, r1, lr, lsl #2
  90:	ldr	r1, [r1]
  94:	movw	lr, #0
  98:	cmp	r1, lr
  9c:	str	r0, [sp, #52]	; 0x34
  a0:	bne	b8 <main+0xb8>
  a4:	movw	r0, #0
  a8:	movt	r0, #0
  ac:	bl	0 <printf>
  b0:	str	r0, [sp, #48]	; 0x30
  b4:	b	d8 <main+0xd8>
  b8:	ldr	r0, [fp, #-8]
  bc:	ldr	r1, [sp, #60]	; 0x3c
  c0:	add	r0, r0, r1, lsl #2
  c4:	ldr	r1, [r0]
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <printf>
  d4:	str	r0, [sp, #44]	; 0x2c
  d8:	b	dc <main+0xdc>
  dc:	ldr	r0, [sp, #60]	; 0x3c
  e0:	add	r0, r0, #1
  e4:	str	r0, [sp, #60]	; 0x3c
  e8:	b	64 <main+0x64>
  ec:	b	f0 <main+0xf0>
  f0:	movw	r0, #0
  f4:	movt	r0, #0
  f8:	movw	r1, #3
  fc:	bl	0 <printf>
 100:	movw	r1, #0
 104:	movt	r1, #0
 108:	str	r0, [sp, #40]	; 0x28
 10c:	mov	r0, r1
 110:	add	r1, sp, #56	; 0x38
 114:	bl	0 <__isoc99_scanf>
 118:	str	r0, [sp, #36]	; 0x24
 11c:	bl	0 <getchar>
 120:	str	r0, [sp, #32]
 124:	ldr	r0, [sp, #56]	; 0x38
 128:	cmp	r0, #0
 12c:	movw	r0, #1
 130:	str	r0, [sp, #28]
 134:	blt	14c <main+0x14c>
 138:	ldr	r0, [sp, #56]	; 0x38
 13c:	cmp	r0, #3
 140:	movw	r0, #0
 144:	movgt	r0, #1
 148:	str	r0, [sp, #28]
 14c:	ldr	r0, [sp, #28]
 150:	tst	r0, #1
 154:	bne	f0 <main+0xf0>
 158:	ldr	r0, [sp, #56]	; 0x38
 15c:	cmp	r0, #0
 160:	bne	168 <main+0x168>
 164:	b	220 <main+0x220>
 168:	add	r1, sp, #64	; 0x40
 16c:	movw	r0, #0
 170:	movt	r0, #0
 174:	str	r1, [sp, #24]
 178:	bl	0 <printf>
 17c:	movw	r1, #0
 180:	movt	r1, #0
 184:	ldr	r2, [r1]
 188:	add	r1, sp, #64	; 0x40
 18c:	mov	lr, #80	; 0x50
 190:	str	r0, [sp, #20]
 194:	mov	r0, r1
 198:	str	r1, [sp, #16]
 19c:	mov	r1, lr
 1a0:	bl	0 <fgets>
 1a4:	ldr	r1, [sp, #16]
 1a8:	str	r0, [sp, #12]
 1ac:	mov	r0, r1
 1b0:	bl	0 <strlen>
 1b4:	ldr	r1, [sp, #16]
 1b8:	add	r0, r1, r0
 1bc:	mov	r2, #0
 1c0:	strb	r2, [r0, #-1]
 1c4:	ldr	r0, [fp, #-8]
 1c8:	ldr	r2, [sp, #56]	; 0x38
 1cc:	add	r0, r0, r2, lsl #2
 1d0:	ldr	r0, [r0, #-4]
 1d4:	str	r0, [sp, #8]
 1d8:	mov	r0, r1
 1dc:	bl	0 <strlen>
 1e0:	add	r1, r0, #1
 1e4:	ldr	r0, [sp, #8]
 1e8:	bl	0 <realloc>
 1ec:	ldr	r1, [fp, #-8]
 1f0:	ldr	r2, [sp, #56]	; 0x38
 1f4:	add	r1, r1, r2, lsl #2
 1f8:	str	r0, [r1, #-4]
 1fc:	ldr	r0, [fp, #-8]
 200:	ldr	r1, [sp, #56]	; 0x38
 204:	sub	r1, r1, #1
 208:	add	r0, r0, r1, lsl #2
 20c:	ldr	r0, [r0]
 210:	ldr	r1, [sp, #24]
 214:	bl	0 <strcpy>
 218:	str	r0, [sp, #4]
 21c:	b	5c <main+0x5c>
 220:	movw	r0, #0
 224:	str	r0, [sp, #60]	; 0x3c
 228:	ldr	r0, [sp, #60]	; 0x3c
 22c:	cmp	r0, #3
 230:	bge	258 <main+0x258>
 234:	ldr	r0, [fp, #-8]
 238:	ldr	r1, [sp, #60]	; 0x3c
 23c:	add	r0, r0, r1, lsl #2
 240:	ldr	r0, [r0]
 244:	bl	0 <free>
 248:	ldr	r0, [sp, #60]	; 0x3c
 24c:	add	r0, r0, #1
 250:	str	r0, [sp, #60]	; 0x3c
 254:	b	228 <main+0x228>
 258:	ldr	r0, [fp, #-8]
 25c:	bl	0 <free>
 260:	movw	r0, #0
 264:	mov	sp, fp
 268:	pop	{fp, pc}
