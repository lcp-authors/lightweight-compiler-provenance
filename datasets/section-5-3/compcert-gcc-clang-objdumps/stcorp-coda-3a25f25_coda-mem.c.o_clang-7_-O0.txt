
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-mem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_mem_empty_record>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #32
   c:	str	r0, [fp, #-4]
  10:	ldr	r0, [fp, #-4]
  14:	cmp	r0, #11
  18:	bcs	20 <coda_mem_empty_record+0x20>
  1c:	b	40 <coda_mem_empty_record+0x40>
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	movw	r1, #0
  2c:	movt	r1, #0
  30:	movw	r2, #49	; 0x31
  34:	movw	r3, #0
  38:	movt	r3, #0
  3c:	bl	0 <__assert_fail>
  40:	ldr	r0, [fp, #-4]
  44:	ldr	r1, [pc, #212]	; 120 <coda_mem_empty_record+0x120>
  48:	str	r0, [fp, #-8]
  4c:	str	r1, [fp, #-12]
  50:	bl	0 <__aeabi_read_tp>
  54:	ldr	r1, [fp, #-12]
  58:	add	r0, r0, r1
  5c:	ldr	r1, [fp, #-8]
  60:	add	r0, r0, r1, lsl #2
  64:	ldr	r0, [r0]
  68:	movw	r1, #0
  6c:	cmp	r0, r1
  70:	bne	f0 <coda_mem_empty_record+0xf0>
  74:	ldr	r0, [fp, #-4]
  78:	bl	0 <coda_type_empty_record>
  7c:	mov	r1, #0
  80:	bl	0 <coda_mem_record_new>
  84:	ldr	r1, [fp, #-4]
  88:	ldr	lr, [pc, #144]	; 120 <coda_mem_empty_record+0x120>
  8c:	str	r0, [sp, #16]
  90:	str	r1, [sp, #12]
  94:	str	lr, [sp, #8]
  98:	bl	0 <__aeabi_read_tp>
  9c:	ldr	r1, [sp, #8]
  a0:	add	r0, r0, r1
  a4:	ldr	r1, [sp, #16]
  a8:	ldr	ip, [sp, #12]
  ac:	str	r1, [r0, ip, lsl #2]
  b0:	ldr	ip, [fp, #-4]
  b4:	add	r0, r0, ip, lsl #2
  b8:	ldr	r0, [r0]
  bc:	movw	ip, #0
  c0:	cmp	r0, ip
  c4:	beq	cc <coda_mem_empty_record+0xcc>
  c8:	b	ec <coda_mem_empty_record+0xec>
  cc:	movw	r0, #0
  d0:	movt	r0, #0
  d4:	movw	r1, #0
  d8:	movt	r1, #0
  dc:	movw	r2, #53	; 0x35
  e0:	movw	r3, #0
  e4:	movt	r3, #0
  e8:	bl	0 <__assert_fail>
  ec:	b	f0 <coda_mem_empty_record+0xf0>
  f0:	ldr	r0, [fp, #-4]
  f4:	ldr	r1, [pc, #36]	; 120 <coda_mem_empty_record+0x120>
  f8:	str	r0, [sp, #4]
  fc:	str	r1, [sp]
 100:	bl	0 <__aeabi_read_tp>
 104:	ldr	r1, [sp]
 108:	add	r0, r0, r1
 10c:	ldr	r1, [sp, #4]
 110:	add	r0, r0, r1, lsl #2
 114:	ldr	r0, [r0]
 118:	mov	sp, fp
 11c:	pop	{fp, pc}
 120:	.word	0x00000000

00000124 <coda_no_data_singleton>:
 124:	push	{fp, lr}
 128:	mov	fp, sp
 12c:	sub	sp, sp, #32
 130:	str	r0, [fp, #-4]
 134:	ldr	r0, [fp, #-4]
 138:	cmp	r0, #11
 13c:	bcs	144 <coda_no_data_singleton+0x20>
 140:	b	164 <coda_no_data_singleton+0x40>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	movw	r1, #0
 150:	movt	r1, #0
 154:	movw	r2, #61	; 0x3d
 158:	movw	r3, #0
 15c:	movt	r3, #0
 160:	bl	0 <__assert_fail>
 164:	ldr	r0, [fp, #-4]
 168:	ldr	r1, [pc, #204]	; 23c <coda_no_data_singleton+0x118>
 16c:	str	r0, [fp, #-8]
 170:	str	r1, [fp, #-12]
 174:	bl	0 <__aeabi_read_tp>
 178:	ldr	r1, [fp, #-12]
 17c:	add	r0, r0, r1
 180:	ldr	r1, [fp, #-8]
 184:	add	r0, r0, r1, lsl #2
 188:	ldr	r0, [r0]
 18c:	movw	r1, #0
 190:	cmp	r0, r1
 194:	bne	20c <coda_no_data_singleton+0xe8>
 198:	ldr	r0, [fp, #-4]
 19c:	bl	0 <coda_mem_no_data_new>
 1a0:	ldr	lr, [fp, #-4]
 1a4:	ldr	r1, [pc, #144]	; 23c <coda_no_data_singleton+0x118>
 1a8:	str	r0, [sp, #16]
 1ac:	str	lr, [sp, #12]
 1b0:	str	r1, [sp, #8]
 1b4:	bl	0 <__aeabi_read_tp>
 1b8:	ldr	r1, [sp, #8]
 1bc:	add	r0, r0, r1
 1c0:	ldr	r1, [sp, #16]
 1c4:	ldr	ip, [sp, #12]
 1c8:	str	r1, [r0, ip, lsl #2]
 1cc:	ldr	ip, [fp, #-4]
 1d0:	add	r0, r0, ip, lsl #2
 1d4:	ldr	r0, [r0]
 1d8:	movw	ip, #0
 1dc:	cmp	r0, ip
 1e0:	beq	1e8 <coda_no_data_singleton+0xc4>
 1e4:	b	208 <coda_no_data_singleton+0xe4>
 1e8:	movw	r0, #0
 1ec:	movt	r0, #0
 1f0:	movw	r1, #0
 1f4:	movt	r1, #0
 1f8:	movw	r2, #65	; 0x41
 1fc:	movw	r3, #0
 200:	movt	r3, #0
 204:	bl	0 <__assert_fail>
 208:	b	20c <coda_no_data_singleton+0xe8>
 20c:	ldr	r0, [fp, #-4]
 210:	ldr	r1, [pc, #36]	; 23c <coda_no_data_singleton+0x118>
 214:	str	r0, [sp, #4]
 218:	str	r1, [sp]
 21c:	bl	0 <__aeabi_read_tp>
 220:	ldr	r1, [sp]
 224:	add	r0, r0, r1
 228:	ldr	r1, [sp, #4]
 22c:	add	r0, r0, r1, lsl #2
 230:	ldr	r0, [r0]
 234:	mov	sp, fp
 238:	pop	{fp, pc}
 23c:	.word	0x00000000

00000240 <coda_mem_done>:
 240:	push	{fp, lr}
 244:	mov	fp, sp
 248:	sub	sp, sp, #56	; 0x38
 24c:	movw	r0, #0
 250:	str	r0, [fp, #-4]
 254:	ldr	r0, [fp, #-4]
 258:	cmp	r0, #11
 25c:	bge	2fc <coda_mem_done+0xbc>
 260:	ldr	r0, [fp, #-4]
 264:	ldr	r1, [pc, #332]	; 3b8 <coda_mem_done+0x178>
 268:	str	r0, [fp, #-8]
 26c:	str	r1, [fp, #-12]
 270:	bl	0 <__aeabi_read_tp>
 274:	ldr	r1, [fp, #-12]
 278:	add	r0, r0, r1
 27c:	ldr	r1, [fp, #-8]
 280:	add	r0, r0, r1, lsl #2
 284:	ldr	r0, [r0]
 288:	movw	r1, #0
 28c:	cmp	r0, r1
 290:	beq	2c0 <coda_mem_done+0x80>
 294:	ldr	r0, [fp, #-4]
 298:	ldr	r1, [pc, #280]	; 3b8 <coda_mem_done+0x178>
 29c:	str	r0, [fp, #-16]
 2a0:	str	r1, [fp, #-20]	; 0xffffffec
 2a4:	bl	0 <__aeabi_read_tp>
 2a8:	ldr	r1, [fp, #-20]	; 0xffffffec
 2ac:	add	r0, r0, r1
 2b0:	ldr	r1, [fp, #-16]
 2b4:	add	r0, r0, r1, lsl #2
 2b8:	ldr	r0, [r0]
 2bc:	bl	0 <coda_mem_type_delete>
 2c0:	ldr	r0, [fp, #-4]
 2c4:	ldr	r1, [pc, #236]	; 3b8 <coda_mem_done+0x178>
 2c8:	str	r0, [fp, #-24]	; 0xffffffe8
 2cc:	str	r1, [sp, #28]
 2d0:	bl	0 <__aeabi_read_tp>
 2d4:	ldr	r1, [sp, #28]
 2d8:	add	r0, r0, r1
 2dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
 2e0:	add	r0, r0, r1, lsl #2
 2e4:	movw	r1, #0
 2e8:	str	r1, [r0]
 2ec:	ldr	r0, [fp, #-4]
 2f0:	add	r0, r0, #1
 2f4:	str	r0, [fp, #-4]
 2f8:	b	254 <coda_mem_done+0x14>
 2fc:	movw	r0, #0
 300:	str	r0, [fp, #-4]
 304:	ldr	r0, [fp, #-4]
 308:	cmp	r0, #11
 30c:	bge	3ac <coda_mem_done+0x16c>
 310:	ldr	r0, [fp, #-4]
 314:	ldr	r1, [pc, #152]	; 3b4 <coda_mem_done+0x174>
 318:	str	r0, [sp, #24]
 31c:	str	r1, [sp, #20]
 320:	bl	0 <__aeabi_read_tp>
 324:	ldr	r1, [sp, #20]
 328:	add	r0, r0, r1
 32c:	ldr	r1, [sp, #24]
 330:	add	r0, r0, r1, lsl #2
 334:	ldr	r0, [r0]
 338:	movw	r1, #0
 33c:	cmp	r0, r1
 340:	beq	370 <coda_mem_done+0x130>
 344:	ldr	r0, [fp, #-4]
 348:	ldr	r1, [pc, #100]	; 3b4 <coda_mem_done+0x174>
 34c:	str	r0, [sp, #16]
 350:	str	r1, [sp, #12]
 354:	bl	0 <__aeabi_read_tp>
 358:	ldr	r1, [sp, #12]
 35c:	add	r0, r0, r1
 360:	ldr	r1, [sp, #16]
 364:	add	r0, r0, r1, lsl #2
 368:	ldr	r0, [r0]
 36c:	bl	0 <coda_mem_type_delete>
 370:	ldr	r0, [fp, #-4]
 374:	ldr	r1, [pc, #56]	; 3b4 <coda_mem_done+0x174>
 378:	str	r0, [sp, #8]
 37c:	str	r1, [sp, #4]
 380:	bl	0 <__aeabi_read_tp>
 384:	ldr	r1, [sp, #4]
 388:	add	r0, r0, r1
 38c:	ldr	r1, [sp, #8]
 390:	add	r0, r0, r1, lsl #2
 394:	movw	r1, #0
 398:	str	r1, [r0]
 39c:	ldr	r0, [fp, #-4]
 3a0:	add	r0, r0, #1
 3a4:	str	r0, [fp, #-4]
 3a8:	b	304 <coda_mem_done+0xc4>
 3ac:	mov	sp, fp
 3b0:	pop	{fp, pc}
	...
