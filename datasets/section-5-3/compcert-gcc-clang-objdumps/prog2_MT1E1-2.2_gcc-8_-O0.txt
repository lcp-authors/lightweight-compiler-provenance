
../compcert-repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000106fc <.init>:
   106fc:	push	{r3, lr}
   10700:	bl	10800 <_start@@Base+0x3c>
   10704:	pop	{r3, pc}

Disassembly of section .plt:

00010708 <strcmp@plt-0x14>:
   10708:	push	{lr}		; (str lr, [sp, #-4]!)
   1070c:	ldr	lr, [pc, #4]	; 10718 <strcmp@plt-0x4>
   10710:	add	lr, pc, lr
   10714:	ldr	pc, [lr, #8]!
   10718:	andeq	r0, r1, r8, ror #17

0001071c <strcmp@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2280]!	; 0x8e8

00010728 <__isoc99_fscanf@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2272]!	; 0x8e0

00010734 <fopen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010740 <free@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001074c <realloc@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2248]!	; 0x8c8

00010758 <fwrite@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2240]!	; 0x8c0

00010764 <strcpy@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2232]!	; 0x8b8

00010770 <malloc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2216]!	; 0x8a8

00010788 <__gmon_start__@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2208]!	; 0x8a0

00010794 <strlen@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2200]!	; 0x898

000107a0 <fprintf@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2192]!	; 0x890

000107ac <fclose@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2184]!	; 0x888

000107b8 <abort@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2176]!	; 0x880

Disassembly of section .text:

000107c4 <_start@@Base>:
   107c4:	mov	fp, #0
   107c8:	mov	lr, #0
   107cc:	pop	{r1}		; (ldr r1, [sp], #4)
   107d0:	mov	r2, sp
   107d4:	push	{r2}		; (str r2, [sp, #-4]!)
   107d8:	push	{r0}		; (str r0, [sp, #-4]!)
   107dc:	ldr	ip, [pc, #16]	; 107f4 <_start@@Base+0x30>
   107e0:	push	{ip}		; (str ip, [sp, #-4]!)
   107e4:	ldr	r0, [pc, #12]	; 107f8 <_start@@Base+0x34>
   107e8:	ldr	r3, [pc, #12]	; 107fc <_start@@Base+0x38>
   107ec:	bl	1077c <__libc_start_main@plt>
   107f0:	bl	107b8 <abort@plt>
   107f4:	andeq	r0, r1, r4, lsr #27
   107f8:	andeq	r0, r1, r0, lsr #24
   107fc:	andeq	r0, r1, r4, asr #26
   10800:	ldr	r3, [pc, #20]	; 1081c <_start@@Base+0x58>
   10804:	ldr	r2, [pc, #20]	; 10820 <_start@@Base+0x5c>
   10808:	add	r3, pc, r3
   1080c:	ldr	r2, [r3, r2]
   10810:	cmp	r2, #0
   10814:	bxeq	lr
   10818:	b	10788 <__gmon_start__@plt>
   1081c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10820:	andeq	r0, r0, r4, asr #32
   10824:	ldr	r0, [pc, #24]	; 10844 <_start@@Base+0x80>
   10828:	ldr	r3, [pc, #24]	; 10848 <_start@@Base+0x84>
   1082c:	cmp	r3, r0
   10830:	bxeq	lr
   10834:	ldr	r3, [pc, #16]	; 1084c <_start@@Base+0x88>
   10838:	cmp	r3, #0
   1083c:	bxeq	lr
   10840:	bx	r3
   10844:	andeq	r1, r2, r0, asr r0
   10848:	andeq	r1, r2, r0, asr r0
   1084c:	andeq	r0, r0, r0
   10850:	ldr	r0, [pc, #36]	; 1087c <_start@@Base+0xb8>
   10854:	ldr	r1, [pc, #36]	; 10880 <_start@@Base+0xbc>
   10858:	sub	r1, r1, r0
   1085c:	asr	r1, r1, #2
   10860:	add	r1, r1, r1, lsr #31
   10864:	asrs	r1, r1, #1
   10868:	bxeq	lr
   1086c:	ldr	r3, [pc, #16]	; 10884 <_start@@Base+0xc0>
   10870:	cmp	r3, #0
   10874:	bxeq	lr
   10878:	bx	r3
   1087c:	andeq	r1, r2, r0, asr r0
   10880:	andeq	r1, r2, r0, asr r0
   10884:	andeq	r0, r0, r0
   10888:	push	{r4, lr}
   1088c:	ldr	r4, [pc, #24]	; 108ac <_start@@Base+0xe8>
   10890:	ldrb	r3, [r4]
   10894:	cmp	r3, #0
   10898:	popne	{r4, pc}
   1089c:	bl	10824 <_start@@Base+0x60>
   108a0:	mov	r3, #1
   108a4:	strb	r3, [r4]
   108a8:	pop	{r4, pc}
   108ac:	andeq	r1, r2, r4, asr r0
   108b0:	b	10850 <_start@@Base+0x8c>

000108b4 <conta_vitorias@@Base>:
   108b4:	str	fp, [sp, #-8]!
   108b8:	str	lr, [sp, #4]
   108bc:	add	fp, sp, #4
   108c0:	sub	sp, sp, #64	; 0x40
   108c4:	str	r0, [fp, #-64]	; 0xffffffc0
   108c8:	str	r1, [fp, #-68]	; 0xffffffbc
   108cc:	mov	r0, #20
   108d0:	bl	10770 <malloc@plt>
   108d4:	mov	r3, r0
   108d8:	str	r3, [fp, #-8]
   108dc:	ldr	r3, [fp, #-8]
   108e0:	cmp	r3, #0
   108e4:	bne	108f0 <conta_vitorias@@Base+0x3c>
   108e8:	mov	r3, #0
   108ec:	b	10c0c <conta_vitorias@@Base+0x358>
   108f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   108f4:	mov	r2, #0
   108f8:	str	r2, [r3]
   108fc:	b	10a8c <conta_vitorias@@Base+0x1d8>
   10900:	sub	r3, fp, #36	; 0x24
   10904:	mov	r0, r3
   10908:	bl	10794 <strlen@plt>
   1090c:	mov	r3, r0
   10910:	sub	r2, fp, #4
   10914:	add	r3, r2, r3
   10918:	mov	r2, #0
   1091c:	strb	r2, [r3, #-32]	; 0xffffffe0
   10920:	mov	r3, #0
   10924:	str	r3, [fp, #-20]	; 0xffffffec
   10928:	mov	r3, #0
   1092c:	str	r3, [fp, #-12]
   10930:	b	109b8 <conta_vitorias@@Base+0x104>
   10934:	ldr	r2, [fp, #-12]
   10938:	mov	r3, r2
   1093c:	lsl	r3, r3, #2
   10940:	add	r3, r3, r2
   10944:	lsl	r3, r3, #2
   10948:	mov	r2, r3
   1094c:	ldr	r3, [fp, #-8]
   10950:	add	r3, r3, r2
   10954:	mov	r2, r3
   10958:	sub	r3, fp, #36	; 0x24
   1095c:	mov	r1, r2
   10960:	mov	r0, r3
   10964:	bl	1071c <strcmp@plt>
   10968:	mov	r3, r0
   1096c:	cmp	r3, #0
   10970:	bne	109ac <conta_vitorias@@Base+0xf8>
   10974:	ldr	r2, [fp, #-12]
   10978:	mov	r3, r2
   1097c:	lsl	r3, r3, #2
   10980:	add	r3, r3, r2
   10984:	lsl	r3, r3, #2
   10988:	mov	r2, r3
   1098c:	ldr	r3, [fp, #-8]
   10990:	add	r3, r3, r2
   10994:	ldr	r2, [r3, #16]
   10998:	add	r2, r2, #1
   1099c:	str	r2, [r3, #16]
   109a0:	mov	r3, #1
   109a4:	str	r3, [fp, #-20]	; 0xffffffec
   109a8:	b	109cc <conta_vitorias@@Base+0x118>
   109ac:	ldr	r3, [fp, #-12]
   109b0:	add	r3, r3, #1
   109b4:	str	r3, [fp, #-12]
   109b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   109bc:	ldr	r3, [r3]
   109c0:	ldr	r2, [fp, #-12]
   109c4:	cmp	r2, r3
   109c8:	blt	10934 <conta_vitorias@@Base+0x80>
   109cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   109d0:	cmp	r3, #0
   109d4:	bne	10a8c <conta_vitorias@@Base+0x1d8>
   109d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   109dc:	ldr	r3, [r3]
   109e0:	add	r3, r3, #1
   109e4:	mov	r2, r3
   109e8:	mov	r3, r2
   109ec:	lsl	r3, r3, #2
   109f0:	add	r3, r3, r2
   109f4:	lsl	r3, r3, #2
   109f8:	mov	r1, r3
   109fc:	ldr	r0, [fp, #-8]
   10a00:	bl	1074c <realloc@plt>
   10a04:	str	r0, [fp, #-8]
   10a08:	ldr	r3, [fp, #-8]
   10a0c:	cmp	r3, #0
   10a10:	bne	10a1c <conta_vitorias@@Base+0x168>
   10a14:	mov	r3, #0
   10a18:	b	10c0c <conta_vitorias@@Base+0x358>
   10a1c:	ldr	r2, [fp, #-12]
   10a20:	mov	r3, r2
   10a24:	lsl	r3, r3, #2
   10a28:	add	r3, r3, r2
   10a2c:	lsl	r3, r3, #2
   10a30:	mov	r2, r3
   10a34:	ldr	r3, [fp, #-8]
   10a38:	add	r3, r3, r2
   10a3c:	mov	r2, r3
   10a40:	sub	r3, fp, #36	; 0x24
   10a44:	mov	r1, r3
   10a48:	mov	r0, r2
   10a4c:	bl	10764 <strcpy@plt>
   10a50:	ldr	r2, [fp, #-12]
   10a54:	mov	r3, r2
   10a58:	lsl	r3, r3, #2
   10a5c:	add	r3, r3, r2
   10a60:	lsl	r3, r3, #2
   10a64:	mov	r2, r3
   10a68:	ldr	r3, [fp, #-8]
   10a6c:	add	r3, r3, r2
   10a70:	mov	r2, #1
   10a74:	str	r2, [r3, #16]
   10a78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10a7c:	ldr	r3, [r3]
   10a80:	add	r2, r3, #1
   10a84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10a88:	str	r2, [r3]
   10a8c:	sub	r3, fp, #36	; 0x24
   10a90:	mov	r2, r3
   10a94:	movw	r1, #3508	; 0xdb4
   10a98:	movt	r1, #1
   10a9c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10aa0:	bl	10728 <__isoc99_fscanf@plt>
   10aa4:	mov	r3, r0
   10aa8:	cmp	r3, #1
   10aac:	beq	10900 <conta_vitorias@@Base+0x4c>
   10ab0:	mov	r3, #1
   10ab4:	str	r3, [fp, #-12]
   10ab8:	b	10bf4 <conta_vitorias@@Base+0x340>
   10abc:	ldr	r2, [fp, #-12]
   10ac0:	mov	r3, r2
   10ac4:	lsl	r3, r3, #2
   10ac8:	add	r3, r3, r2
   10acc:	lsl	r3, r3, #2
   10ad0:	mov	r2, r3
   10ad4:	ldr	r3, [fp, #-8]
   10ad8:	add	r2, r3, r2
   10adc:	sub	r3, fp, #56	; 0x38
   10ae0:	ldrd	r0, [r2]
   10ae4:	strd	r0, [r3]
   10ae8:	ldrd	r0, [r2, #8]
   10aec:	strd	r0, [r3, #8]
   10af0:	ldr	r2, [r2, #16]
   10af4:	str	r2, [r3, #16]
   10af8:	ldr	r3, [fp, #-12]
   10afc:	str	r3, [fp, #-16]
   10b00:	b	10b6c <conta_vitorias@@Base+0x2b8>
   10b04:	ldr	r2, [fp, #-16]
   10b08:	mov	r3, r2
   10b0c:	lsl	r3, r3, #2
   10b10:	add	r3, r3, r2
   10b14:	lsl	r3, r3, #2
   10b18:	sub	r3, r3, #20
   10b1c:	ldr	r2, [fp, #-8]
   10b20:	add	r1, r2, r3
   10b24:	ldr	r2, [fp, #-16]
   10b28:	mov	r3, r2
   10b2c:	lsl	r3, r3, #2
   10b30:	add	r3, r3, r2
   10b34:	lsl	r3, r3, #2
   10b38:	mov	r2, r3
   10b3c:	ldr	r3, [fp, #-8]
   10b40:	add	r3, r3, r2
   10b44:	mov	r2, r1
   10b48:	ldrd	r0, [r2]
   10b4c:	strd	r0, [r3]
   10b50:	ldrd	r0, [r2, #8]
   10b54:	strd	r0, [r3, #8]
   10b58:	ldr	r2, [r2, #16]
   10b5c:	str	r2, [r3, #16]
   10b60:	ldr	r3, [fp, #-16]
   10b64:	sub	r3, r3, #1
   10b68:	str	r3, [fp, #-16]
   10b6c:	ldr	r3, [fp, #-16]
   10b70:	cmp	r3, #0
   10b74:	ble	10ba8 <conta_vitorias@@Base+0x2f4>
   10b78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10b7c:	ldr	r2, [fp, #-16]
   10b80:	mov	r3, r2
   10b84:	lsl	r3, r3, #2
   10b88:	add	r3, r3, r2
   10b8c:	lsl	r3, r3, #2
   10b90:	sub	r3, r3, #20
   10b94:	ldr	r2, [fp, #-8]
   10b98:	add	r3, r2, r3
   10b9c:	ldr	r3, [r3, #16]
   10ba0:	cmp	r1, r3
   10ba4:	bgt	10b04 <conta_vitorias@@Base+0x250>
   10ba8:	ldr	r2, [fp, #-16]
   10bac:	mov	r3, r2
   10bb0:	lsl	r3, r3, #2
   10bb4:	add	r3, r3, r2
   10bb8:	lsl	r3, r3, #2
   10bbc:	mov	r2, r3
   10bc0:	ldr	r3, [fp, #-8]
   10bc4:	add	r3, r3, r2
   10bc8:	mov	r2, r3
   10bcc:	sub	r3, fp, #56	; 0x38
   10bd0:	ldrd	r0, [r3]
   10bd4:	strd	r0, [r2]
   10bd8:	ldrd	r0, [r3, #8]
   10bdc:	strd	r0, [r2, #8]
   10be0:	ldr	r3, [r3, #16]
   10be4:	str	r3, [r2, #16]
   10be8:	ldr	r3, [fp, #-12]
   10bec:	add	r3, r3, #1
   10bf0:	str	r3, [fp, #-12]
   10bf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10bf8:	ldr	r3, [r3]
   10bfc:	ldr	r2, [fp, #-12]
   10c00:	cmp	r2, r3
   10c04:	blt	10abc <conta_vitorias@@Base+0x208>
   10c08:	ldr	r3, [fp, #-8]
   10c0c:	mov	r0, r3
   10c10:	sub	sp, fp, #4
   10c14:	ldr	fp, [sp]
   10c18:	add	sp, sp, #4
   10c1c:	pop	{pc}		; (ldr pc, [sp], #4)

00010c20 <main@@Base>:
   10c20:	str	fp, [sp, #-8]!
   10c24:	str	lr, [sp, #4]
   10c28:	add	fp, sp, #4
   10c2c:	sub	sp, sp, #16
   10c30:	movw	r1, #3512	; 0xdb8
   10c34:	movt	r1, #1
   10c38:	movw	r0, #3516	; 0xdbc
   10c3c:	movt	r0, #1
   10c40:	bl	10734 <fopen@plt>
   10c44:	str	r0, [fp, #-12]
   10c48:	mov	r3, #0
   10c4c:	str	r3, [fp, #-20]	; 0xffffffec
   10c50:	sub	r3, fp, #20
   10c54:	mov	r1, r3
   10c58:	ldr	r0, [fp, #-12]
   10c5c:	bl	108b4 <conta_vitorias@@Base>
   10c60:	str	r0, [fp, #-16]
   10c64:	movw	r3, #4176	; 0x1050
   10c68:	movt	r3, #2
   10c6c:	ldr	r3, [r3]
   10c70:	mov	r2, #12
   10c74:	mov	r1, #1
   10c78:	movw	r0, #3524	; 0xdc4
   10c7c:	movt	r0, #1
   10c80:	bl	10758 <fwrite@plt>
   10c84:	ldr	r3, [fp, #-16]
   10c88:	cmp	r3, #0
   10c8c:	beq	10d1c <main@@Base+0xfc>
   10c90:	mov	r3, #0
   10c94:	str	r3, [fp, #-8]
   10c98:	b	10d0c <main@@Base+0xec>
   10c9c:	movw	r3, #4176	; 0x1050
   10ca0:	movt	r3, #2
   10ca4:	ldr	r0, [r3]
   10ca8:	ldr	r2, [fp, #-8]
   10cac:	mov	r3, r2
   10cb0:	lsl	r3, r3, #2
   10cb4:	add	r3, r3, r2
   10cb8:	lsl	r3, r3, #2
   10cbc:	mov	r2, r3
   10cc0:	ldr	r3, [fp, #-16]
   10cc4:	add	r3, r3, r2
   10cc8:	mov	r1, r3
   10ccc:	ldr	r2, [fp, #-8]
   10cd0:	mov	r3, r2
   10cd4:	lsl	r3, r3, #2
   10cd8:	add	r3, r3, r2
   10cdc:	lsl	r3, r3, #2
   10ce0:	mov	r2, r3
   10ce4:	ldr	r3, [fp, #-16]
   10ce8:	add	r3, r3, r2
   10cec:	ldr	r3, [r3, #16]
   10cf0:	mov	r2, r1
   10cf4:	movw	r1, #3540	; 0xdd4
   10cf8:	movt	r1, #1
   10cfc:	bl	107a0 <fprintf@plt>
   10d00:	ldr	r3, [fp, #-8]
   10d04:	add	r3, r3, #1
   10d08:	str	r3, [fp, #-8]
   10d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d10:	ldr	r2, [fp, #-8]
   10d14:	cmp	r2, r3
   10d18:	blt	10c9c <main@@Base+0x7c>
   10d1c:	ldr	r0, [fp, #-16]
   10d20:	bl	10740 <free@plt>
   10d24:	ldr	r0, [fp, #-12]
   10d28:	bl	107ac <fclose@plt>
   10d2c:	mov	r3, #0
   10d30:	mov	r0, r3
   10d34:	sub	sp, fp, #4
   10d38:	ldr	fp, [sp]
   10d3c:	add	sp, sp, #4
   10d40:	pop	{pc}		; (ldr pc, [sp], #4)

00010d44 <__libc_csu_init@@Base>:
   10d44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d48:	mov	r7, r0
   10d4c:	ldr	r6, [pc, #72]	; 10d9c <__libc_csu_init@@Base+0x58>
   10d50:	ldr	r5, [pc, #72]	; 10da0 <__libc_csu_init@@Base+0x5c>
   10d54:	add	r6, pc, r6
   10d58:	add	r5, pc, r5
   10d5c:	sub	r6, r6, r5
   10d60:	mov	r8, r1
   10d64:	mov	r9, r2
   10d68:	bl	106fc <strcmp@plt-0x20>
   10d6c:	asrs	r6, r6, #2
   10d70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d74:	mov	r4, #0
   10d78:	add	r4, r4, #1
   10d7c:	ldr	r3, [r5], #4
   10d80:	mov	r2, r9
   10d84:	mov	r1, r8
   10d88:	mov	r0, r7
   10d8c:	blx	r3
   10d90:	cmp	r6, r4
   10d94:	bne	10d78 <__libc_csu_init@@Base+0x34>
   10d98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d9c:			; <UNDEFINED> instruction: 0x000101b8
   10da0:			; <UNDEFINED> instruction: 0x000101b0

00010da4 <__libc_csu_fini@@Base>:
   10da4:	bx	lr

Disassembly of section .fini:

00010da8 <.fini>:
   10da8:	push	{r3, lr}
   10dac:	pop	{r3, pc}
