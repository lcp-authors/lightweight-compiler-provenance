
../compcert-repos/stcorp-coda-3a25f25/codacheck:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	10e24 <_start@@Base+0x3c>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <coda_set_option_perform_boundary_checks@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <coda_set_option_perform_boundary_checks@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	r2, r1, ip, ror #6

00010c98 <coda_set_option_perform_boundary_checks@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <strcmp@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <printf@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <coda_set_error@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <coda_open@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <fflush@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <coda_set_option_use_mmap@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <coda_cursor_print_path@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <coda_set_definition_path_conditional@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <getchar@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <coda_set_definition_path@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <coda_recognize_file@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <coda_type_get_format_name@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <coda_done@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <coda_product_check@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <__libc_start_main@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <__gmon_start__@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <exit@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d70 <fprintf@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #732]!	; 0x2dc

00010d7c <coda_init@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #724]!	; 0x2d4

00010d88 <ungetc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #716]!	; 0x2cc

00010d94 <coda_set_option_perform_conversions@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00010da0 <coda_close@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dac <coda_errno_to_string@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #692]!	; 0x2b4

00010db8 <coda_get_libcoda_version@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc4 <coda_get_errno@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd0 <abort@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #668]!	; 0x29c

00010ddc <__assert_fail@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #660]!	; 0x294

Disassembly of section .text:

00010de8 <_start@@Base>:
   10de8:	mov	fp, #0
   10dec:	mov	lr, #0
   10df0:	pop	{r1}		; (ldr r1, [sp], #4)
   10df4:	mov	r2, sp
   10df8:	push	{r2}		; (str r2, [sp, #-4]!)
   10dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   10e00:	ldr	ip, [pc, #16]	; 10e18 <_start@@Base+0x30>
   10e04:	push	{ip}		; (str ip, [sp, #-4]!)
   10e08:	ldr	r0, [pc, #12]	; 10e1c <_start@@Base+0x34>
   10e0c:	ldr	r3, [pc, #12]	; 10e20 <_start@@Base+0x38>
   10e10:	bl	10d4c <__libc_start_main@plt>
   10e14:	bl	10dd0 <abort@plt>
   10e18:	andeq	r1, r1, r8, asr fp
   10e1c:	ldrdeq	r0, [r1], -r8
   10e20:	strdeq	r1, [r1], -r8
   10e24:	ldr	r3, [pc, #20]	; 10e40 <_start@@Base+0x58>
   10e28:	ldr	r2, [pc, #20]	; 10e44 <_start@@Base+0x5c>
   10e2c:	add	r3, pc, r3
   10e30:	ldr	r2, [r3, r2]
   10e34:	cmp	r2, #0
   10e38:	bxeq	lr
   10e3c:	b	10d58 <__gmon_start__@plt>
   10e40:	andeq	r2, r1, ip, asr #3
   10e44:	andeq	r0, r0, ip, ror r0
   10e48:	ldr	r0, [pc, #24]	; 10e68 <_start@@Base+0x80>
   10e4c:	ldr	r3, [pc, #24]	; 10e6c <_start@@Base+0x84>
   10e50:	cmp	r3, r0
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0x88>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r3, r2, r8, lsl #1
   10e6c:	andeq	r3, r2, r8, lsl #1
   10e70:	andeq	r0, r0, r0
   10e74:	ldr	r0, [pc, #36]	; 10ea0 <_start@@Base+0xb8>
   10e78:	ldr	r1, [pc, #36]	; 10ea4 <_start@@Base+0xbc>
   10e7c:	sub	r1, r1, r0
   10e80:	asr	r1, r1, #2
   10e84:	add	r1, r1, r1, lsr #31
   10e88:	asrs	r1, r1, #1
   10e8c:	bxeq	lr
   10e90:	ldr	r3, [pc, #16]	; 10ea8 <_start@@Base+0xc0>
   10e94:	cmp	r3, #0
   10e98:	bxeq	lr
   10e9c:	bx	r3
   10ea0:	andeq	r3, r2, r8, lsl #1
   10ea4:	andeq	r3, r2, r8, lsl #1
   10ea8:	andeq	r0, r0, r0
   10eac:	push	{r4, lr}
   10eb0:	ldr	r4, [pc, #24]	; 10ed0 <_start@@Base+0xe8>
   10eb4:	ldrb	r3, [r4]
   10eb8:	cmp	r3, #0
   10ebc:	popne	{r4, pc}
   10ec0:	bl	10e48 <_start@@Base+0x60>
   10ec4:	mov	r3, #1
   10ec8:	strb	r3, [r4]
   10ecc:	pop	{r4, pc}
   10ed0:	muleq	r2, r4, r0
   10ed4:	b	10e74 <_start@@Base+0x8c>

00010ed8 <main@@Base>:
   10ed8:	push	{r4, r5, fp, lr}
   10edc:	add	fp, sp, #8
   10ee0:	sub	sp, sp, #56	; 0x38
   10ee4:	sub	sp, sp, #1024	; 0x400
   10ee8:	movw	r2, #0
   10eec:	str	r2, [fp, #-12]
   10ef0:	str	r0, [fp, #-16]
   10ef4:	str	r1, [fp, #-20]	; 0xffffffec
   10ef8:	str	r2, [fp, #-24]	; 0xffffffe8
   10efc:	movw	r0, #12448	; 0x30a0
   10f00:	movt	r0, #2
   10f04:	str	r2, [r0]
   10f08:	movw	r0, #12452	; 0x30a4
   10f0c:	movt	r0, #2
   10f10:	str	r2, [r0]
   10f14:	movw	r0, #1
   10f18:	str	r0, [fp, #-28]	; 0xffffffe4
   10f1c:	movw	r0, #12440	; 0x3098
   10f20:	movt	r0, #2
   10f24:	str	r2, [r0]
   10f28:	ldr	r0, [fp, #-16]
   10f2c:	cmp	r0, #1
   10f30:	beq	10f6c <main@@Base+0x94>
   10f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f38:	ldr	r0, [r0, #4]
   10f3c:	movw	r1, #7016	; 0x1b68
   10f40:	movt	r1, #1
   10f44:	bl	10ca4 <strcmp@plt>
   10f48:	cmp	r0, #0
   10f4c:	beq	10f6c <main@@Base+0x94>
   10f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f54:	ldr	r0, [r0, #4]
   10f58:	movw	r1, #7019	; 0x1b6b
   10f5c:	movt	r1, #1
   10f60:	bl	10ca4 <strcmp@plt>
   10f64:	cmp	r0, #0
   10f68:	bne	10f78 <main@@Base+0xa0>
   10f6c:	bl	11780 <main@@Base+0x8a8>
   10f70:	movw	r0, #0
   10f74:	bl	10d64 <exit@plt>
   10f78:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f7c:	ldr	r0, [r0, #4]
   10f80:	movw	r1, #7026	; 0x1b72
   10f84:	movt	r1, #1
   10f88:	bl	10ca4 <strcmp@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	10fb0 <main@@Base+0xd8>
   10f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f98:	ldr	r0, [r0, #4]
   10f9c:	movw	r1, #7029	; 0x1b75
   10fa0:	movt	r1, #1
   10fa4:	bl	10ca4 <strcmp@plt>
   10fa8:	cmp	r0, #0
   10fac:	bne	10fbc <main@@Base+0xe4>
   10fb0:	bl	11a20 <main@@Base+0xb48>
   10fb4:	movw	r0, #0
   10fb8:	bl	10d64 <exit@plt>
   10fbc:	movw	r0, #1
   10fc0:	str	r0, [fp, #-32]	; 0xffffffe0
   10fc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10fc8:	add	r0, r0, #1
   10fcc:	ldr	r1, [fp, #-16]
   10fd0:	cmp	r0, r1
   10fd4:	bge	11024 <main@@Base+0x14c>
   10fd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10fe0:	add	r0, r0, r1, lsl #2
   10fe4:	ldr	r0, [r0]
   10fe8:	movw	r1, #7039	; 0x1b7f
   10fec:	movt	r1, #1
   10ff0:	bl	10ca4 <strcmp@plt>
   10ff4:	cmp	r0, #0
   10ff8:	bne	11024 <main@@Base+0x14c>
   10ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11000:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11004:	add	r1, r1, #1
   11008:	add	r0, r0, r1, lsl #2
   1100c:	ldr	r0, [r0]
   11010:	bl	10d10 <coda_set_definition_path@plt>
   11014:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11018:	add	r1, r1, #2
   1101c:	str	r1, [fp, #-32]	; 0xffffffe0
   11020:	b	11098 <main@@Base+0x1c0>
   11024:	movw	r0, #7042	; 0x1b82
   11028:	movt	r0, #1
   1102c:	str	r0, [fp, #-36]	; 0xffffffdc
   11030:	ldr	r0, [fp, #-20]	; 0xffffffec
   11034:	ldr	r0, [r0]
   11038:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1103c:	movw	r1, #0
   11040:	bl	10cf8 <coda_set_definition_path_conditional@plt>
   11044:	cmp	r0, #0
   11048:	beq	11094 <main@@Base+0x1bc>
   1104c:	movw	r0, #12424	; 0x3088
   11050:	movt	r0, #2
   11054:	ldr	r0, [r0]
   11058:	str	r0, [sp, #36]	; 0x24
   1105c:	bl	10dc4 <coda_get_errno@plt>
   11060:	ldr	r0, [r0]
   11064:	bl	10dac <coda_errno_to_string@plt>
   11068:	ldr	r1, [sp, #36]	; 0x24
   1106c:	str	r0, [sp, #32]
   11070:	mov	r0, r1
   11074:	movw	r1, #8877	; 0x22ad
   11078:	movt	r1, #1
   1107c:	ldr	r2, [sp, #32]
   11080:	bl	10d70 <fprintf@plt>
   11084:	movw	r1, #1
   11088:	str	r0, [sp, #28]
   1108c:	mov	r0, r1
   11090:	bl	10d64 <exit@plt>
   11094:	b	11098 <main@@Base+0x1c0>
   11098:	b	1109c <main@@Base+0x1c4>
   1109c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   110a0:	ldr	r1, [fp, #-16]
   110a4:	cmp	r0, r1
   110a8:	bge	11298 <main@@Base+0x3c0>
   110ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   110b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110b4:	add	r0, r0, r1, lsl #2
   110b8:	ldr	r0, [r0]
   110bc:	movw	r1, #7068	; 0x1b9c
   110c0:	movt	r1, #1
   110c4:	bl	10ca4 <strcmp@plt>
   110c8:	cmp	r0, #0
   110cc:	beq	110f4 <main@@Base+0x21c>
   110d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   110d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   110d8:	add	r0, r0, r1, lsl #2
   110dc:	ldr	r0, [r0]
   110e0:	movw	r1, #7071	; 0x1b9f
   110e4:	movt	r1, #1
   110e8:	bl	10ca4 <strcmp@plt>
   110ec:	cmp	r0, #0
   110f0:	bne	11108 <main@@Base+0x230>
   110f4:	movw	r0, #12448	; 0x30a0
   110f8:	movt	r0, #2
   110fc:	movw	r1, #1
   11100:	str	r1, [r0]
   11104:	b	11288 <main@@Base+0x3b0>
   11108:	ldr	r0, [fp, #-20]	; 0xffffffec
   1110c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11110:	add	r0, r0, r1, lsl #2
   11114:	ldr	r0, [r0]
   11118:	movw	r1, #7081	; 0x1ba9
   1111c:	movt	r1, #1
   11120:	bl	10ca4 <strcmp@plt>
   11124:	cmp	r0, #0
   11128:	beq	11150 <main@@Base+0x278>
   1112c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11130:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11134:	add	r0, r0, r1, lsl #2
   11138:	ldr	r0, [r0]
   1113c:	movw	r1, #7084	; 0x1bac
   11140:	movt	r1, #1
   11144:	bl	10ca4 <strcmp@plt>
   11148:	cmp	r0, #0
   1114c:	bne	11164 <main@@Base+0x28c>
   11150:	movw	r0, #12452	; 0x30a4
   11154:	movt	r0, #2
   11158:	movw	r1, #1
   1115c:	str	r1, [r0]
   11160:	b	11284 <main@@Base+0x3ac>
   11164:	ldr	r0, [fp, #-20]	; 0xffffffec
   11168:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1116c:	add	r0, r0, r1, lsl #2
   11170:	ldr	r0, [r0]
   11174:	movw	r1, #7092	; 0x1bb4
   11178:	movt	r1, #1
   1117c:	bl	10ca4 <strcmp@plt>
   11180:	cmp	r0, #0
   11184:	beq	111ac <main@@Base+0x2d4>
   11188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1118c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11190:	add	r0, r0, r1, lsl #2
   11194:	ldr	r0, [r0]
   11198:	movw	r1, #7095	; 0x1bb7
   1119c:	movt	r1, #1
   111a0:	bl	10ca4 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	bne	111c0 <main@@Base+0x2e8>
   111ac:	movw	r0, #12440	; 0x3098
   111b0:	movt	r0, #2
   111b4:	movw	r1, #1
   111b8:	str	r1, [r0]
   111bc:	b	11280 <main@@Base+0x3a8>
   111c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   111c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111c8:	add	r0, r0, r1, lsl #2
   111cc:	ldr	r0, [r0]
   111d0:	movw	r1, #7108	; 0x1bc4
   111d4:	movt	r1, #1
   111d8:	bl	10ca4 <strcmp@plt>
   111dc:	cmp	r0, #0
   111e0:	bne	111f0 <main@@Base+0x318>
   111e4:	movw	r0, #0
   111e8:	str	r0, [fp, #-28]	; 0xffffffe4
   111ec:	b	1127c <main@@Base+0x3a4>
   111f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   111f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   111f8:	add	r0, r0, r1, lsl #2
   111fc:	ldr	r0, [r0]
   11200:	movw	r1, #7118	; 0x1bce
   11204:	movt	r1, #1
   11208:	bl	10ca4 <strcmp@plt>
   1120c:	cmp	r0, #0
   11210:	bne	11234 <main@@Base+0x35c>
   11214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11218:	ldr	r1, [fp, #-16]
   1121c:	sub	r1, r1, #1
   11220:	cmp	r0, r1
   11224:	bne	11234 <main@@Base+0x35c>
   11228:	movw	r0, #1
   1122c:	str	r0, [fp, #-24]	; 0xffffffe8
   11230:	b	11298 <main@@Base+0x3c0>
   11234:	ldr	r0, [fp, #-20]	; 0xffffffec
   11238:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1123c:	add	r0, r0, r1, lsl #2
   11240:	ldr	r0, [r0]
   11244:	ldrb	r0, [r0]
   11248:	cmp	r0, #45	; 0x2d
   1124c:	beq	11254 <main@@Base+0x37c>
   11250:	b	11298 <main@@Base+0x3c0>
   11254:	movw	r0, #12424	; 0x3088
   11258:	movt	r0, #2
   1125c:	ldr	r0, [r0]
   11260:	movw	r1, #7120	; 0x1bd0
   11264:	movt	r1, #1
   11268:	bl	10d70 <fprintf@plt>
   1126c:	str	r0, [sp, #24]
   11270:	bl	11780 <main@@Base+0x8a8>
   11274:	movw	r0, #1
   11278:	bl	10d64 <exit@plt>
   1127c:	b	11280 <main@@Base+0x3a8>
   11280:	b	11284 <main@@Base+0x3ac>
   11284:	b	11288 <main@@Base+0x3b0>
   11288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1128c:	add	r0, r0, #1
   11290:	str	r0, [fp, #-32]	; 0xffffffe0
   11294:	b	1109c <main@@Base+0x1c4>
   11298:	bl	10d7c <coda_init@plt>
   1129c:	cmp	r0, #0
   112a0:	beq	112ec <main@@Base+0x414>
   112a4:	movw	r0, #12424	; 0x3088
   112a8:	movt	r0, #2
   112ac:	ldr	r0, [r0]
   112b0:	str	r0, [sp, #20]
   112b4:	bl	10dc4 <coda_get_errno@plt>
   112b8:	ldr	r0, [r0]
   112bc:	bl	10dac <coda_errno_to_string@plt>
   112c0:	ldr	r1, [sp, #20]
   112c4:	str	r0, [sp, #16]
   112c8:	mov	r0, r1
   112cc:	movw	r1, #8877	; 0x22ad
   112d0:	movt	r1, #1
   112d4:	ldr	r2, [sp, #16]
   112d8:	bl	10d70 <fprintf@plt>
   112dc:	movw	r1, #1
   112e0:	str	r0, [sp, #12]
   112e4:	mov	r0, r1
   112e8:	bl	10d64 <exit@plt>
   112ec:	movw	r0, #0
   112f0:	bl	10c98 <coda_set_option_perform_boundary_checks@plt>
   112f4:	movw	r1, #0
   112f8:	str	r0, [sp, #8]
   112fc:	mov	r0, r1
   11300:	bl	10d94 <coda_set_option_perform_conversions@plt>
   11304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11308:	str	r0, [sp, #4]
   1130c:	mov	r0, r1
   11310:	bl	10ce0 <coda_set_option_use_mmap@plt>
   11314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11318:	cmp	r1, #0
   1131c:	beq	1142c <main@@Base+0x554>
   11320:	b	11324 <main@@Base+0x44c>
   11324:	movw	r0, #0
   11328:	str	r0, [sp, #44]	; 0x2c
   1132c:	bl	10d04 <getchar@plt>
   11330:	strb	r0, [sp, #51]	; 0x33
   11334:	ldrb	r0, [sp, #51]	; 0x33
   11338:	cmp	r0, #13
   1133c:	bne	1136c <main@@Base+0x494>
   11340:	bl	10d04 <getchar@plt>
   11344:	strb	r0, [sp, #43]	; 0x2b
   11348:	ldrb	r0, [sp, #43]	; 0x2b
   1134c:	cmp	r0, #10
   11350:	beq	11368 <main@@Base+0x490>
   11354:	ldrb	r0, [sp, #43]	; 0x2b
   11358:	movw	r1, #12432	; 0x3090
   1135c:	movt	r1, #2
   11360:	ldr	r1, [r1]
   11364:	bl	10d88 <ungetc@plt>
   11368:	b	1136c <main@@Base+0x494>
   1136c:	ldrb	r0, [sp, #51]	; 0x33
   11370:	cmn	r0, #1
   11374:	beq	11390 <main@@Base+0x4b8>
   11378:	ldrb	r0, [sp, #51]	; 0x33
   1137c:	cmp	r0, #10
   11380:	beq	11390 <main@@Base+0x4b8>
   11384:	ldrb	r0, [sp, #51]	; 0x33
   11388:	cmp	r0, #13
   1138c:	bne	113a8 <main@@Base+0x4d0>
   11390:	ldr	r0, [sp, #44]	; 0x2c
   11394:	add	r1, sp, #52	; 0x34
   11398:	add	r0, r1, r0
   1139c:	movw	r1, #0
   113a0:	strb	r1, [r0]
   113a4:	b	113fc <main@@Base+0x524>
   113a8:	ldrb	r0, [sp, #51]	; 0x33
   113ac:	ldr	r1, [sp, #44]	; 0x2c
   113b0:	add	r2, sp, #52	; 0x34
   113b4:	add	r1, r2, r1
   113b8:	strb	r0, [r1]
   113bc:	ldr	r0, [sp, #44]	; 0x2c
   113c0:	add	r0, r0, #1
   113c4:	str	r0, [sp, #44]	; 0x2c
   113c8:	ldr	r0, [sp, #44]	; 0x2c
   113cc:	cmp	r0, #1000	; 0x3e8
   113d0:	bge	113d8 <main@@Base+0x500>
   113d4:	b	113f8 <main@@Base+0x520>
   113d8:	movw	r0, #7146	; 0x1bea
   113dc:	movt	r0, #1
   113e0:	movw	r1, #7155	; 0x1bf3
   113e4:	movt	r1, #1
   113e8:	movw	r2, #316	; 0x13c
   113ec:	movw	r3, #7235	; 0x1c43
   113f0:	movt	r3, #1
   113f4:	bl	10ddc <__assert_fail@plt>
   113f8:	b	1132c <main@@Base+0x454>
   113fc:	ldr	r0, [sp, #44]	; 0x2c
   11400:	cmp	r0, #0
   11404:	ble	11418 <main@@Base+0x540>
   11408:	add	r0, sp, #52	; 0x34
   1140c:	bl	1149c <main@@Base+0x5c4>
   11410:	movw	r0, #0
   11414:	bl	10cd4 <fflush@plt>
   11418:	b	1141c <main@@Base+0x544>
   1141c:	ldrb	r0, [sp, #51]	; 0x33
   11420:	cmn	r0, #1
   11424:	bne	11324 <main@@Base+0x44c>
   11428:	b	11470 <main@@Base+0x598>
   1142c:	b	11430 <main@@Base+0x558>
   11430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11434:	ldr	r1, [fp, #-16]
   11438:	cmp	r0, r1
   1143c:	bge	1146c <main@@Base+0x594>
   11440:	ldr	r0, [fp, #-20]	; 0xffffffec
   11444:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11448:	add	r0, r0, r1, lsl #2
   1144c:	ldr	r0, [r0]
   11450:	bl	1149c <main@@Base+0x5c4>
   11454:	movw	r0, #0
   11458:	bl	10cd4 <fflush@plt>
   1145c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11460:	add	r1, r1, #1
   11464:	str	r1, [fp, #-32]	; 0xffffffe0
   11468:	b	11430 <main@@Base+0x558>
   1146c:	b	11470 <main@@Base+0x598>
   11470:	bl	10d34 <coda_done@plt>
   11474:	movw	r0, #12444	; 0x309c
   11478:	movt	r0, #2
   1147c:	ldr	r0, [r0]
   11480:	cmp	r0, #0
   11484:	beq	11490 <main@@Base+0x5b8>
   11488:	movw	r0, #1
   1148c:	bl	10d64 <exit@plt>
   11490:	movw	r0, #0
   11494:	sub	sp, fp, #8
   11498:	pop	{r4, r5, fp, pc}
   1149c:	push	{fp, lr}
   114a0:	mov	fp, sp
   114a4:	sub	sp, sp, #88	; 0x58
   114a8:	str	r0, [fp, #-4]
   114ac:	ldr	r1, [fp, #-4]
   114b0:	movw	r0, #8884	; 0x22b4
   114b4:	movt	r0, #1
   114b8:	bl	10cb0 <printf@plt>
   114bc:	ldr	r1, [fp, #-4]
   114c0:	str	r0, [sp, #44]	; 0x2c
   114c4:	mov	r0, r1
   114c8:	sub	r1, fp, #24
   114cc:	sub	r2, fp, #12
   114d0:	sub	r3, fp, #28
   114d4:	sub	ip, fp, #32
   114d8:	str	ip, [sp]
   114dc:	sub	ip, fp, #36	; 0x24
   114e0:	str	ip, [sp, #4]
   114e4:	bl	10d1c <coda_recognize_file@plt>
   114e8:	cmp	r0, #0
   114ec:	beq	11538 <main@@Base+0x660>
   114f0:	bl	10dc4 <coda_get_errno@plt>
   114f4:	ldr	r0, [r0]
   114f8:	bl	10dac <coda_errno_to_string@plt>
   114fc:	movw	r1, #8785	; 0x2251
   11500:	movt	r1, #1
   11504:	str	r0, [sp, #40]	; 0x28
   11508:	mov	r0, r1
   1150c:	ldr	r1, [sp, #40]	; 0x28
   11510:	bl	10cb0 <printf@plt>
   11514:	movw	r1, #0
   11518:	str	r0, [sp, #36]	; 0x24
   1151c:	mov	r0, r1
   11520:	bl	10cbc <coda_set_error@plt>
   11524:	movw	r0, #12444	; 0x309c
   11528:	movt	r0, #2
   1152c:	movw	r1, #1
   11530:	str	r1, [r0]
   11534:	b	11778 <main@@Base+0x8a0>
   11538:	movw	r0, #12440	; 0x3098
   1153c:	movt	r0, #2
   11540:	ldr	r0, [r0]
   11544:	cmp	r0, #0
   11548:	beq	1158c <main@@Base+0x6b4>
   1154c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11550:	movw	r1, #0
   11554:	cmp	r0, r1
   11558:	beq	1156c <main@@Base+0x694>
   1155c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11560:	movw	r1, #0
   11564:	cmp	r0, r1
   11568:	bne	1158c <main@@Base+0x6b4>
   1156c:	movw	r0, #8799	; 0x225f
   11570:	movt	r0, #1
   11574:	bl	10cb0 <printf@plt>
   11578:	movw	r1, #12444	; 0x309c
   1157c:	movt	r1, #2
   11580:	movw	r2, #1
   11584:	str	r2, [r1]
   11588:	b	11778 <main@@Base+0x8a0>
   1158c:	movw	r0, #12448	; 0x30a0
   11590:	movt	r0, #2
   11594:	ldr	r0, [r0]
   11598:	cmp	r0, #0
   1159c:	beq	11604 <main@@Base+0x72c>
   115a0:	ldr	r0, [fp, #-12]
   115a4:	bl	10d28 <coda_type_get_format_name@plt>
   115a8:	movw	r1, #8843	; 0x228b
   115ac:	movt	r1, #1
   115b0:	str	r0, [sp, #32]
   115b4:	mov	r0, r1
   115b8:	ldr	r1, [sp, #32]
   115bc:	bl	10cb0 <printf@plt>
   115c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   115c4:	movw	r2, #0
   115c8:	cmp	r1, r2
   115cc:	beq	115f8 <main@@Base+0x720>
   115d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   115d4:	movw	r1, #0
   115d8:	cmp	r0, r1
   115dc:	beq	115f8 <main@@Base+0x720>
   115e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   115e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   115e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   115ec:	movw	r0, #8864	; 0x22a0
   115f0:	movt	r0, #1
   115f4:	bl	10cb0 <printf@plt>
   115f8:	movw	r0, #8841	; 0x2289
   115fc:	movt	r0, #1
   11600:	bl	10cb0 <printf@plt>
   11604:	ldr	r0, [fp, #-4]
   11608:	sub	r1, fp, #8
   1160c:	bl	10cc8 <coda_open@plt>
   11610:	str	r0, [fp, #-40]	; 0xffffffd8
   11614:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11618:	cmp	r0, #0
   1161c:	beq	11658 <main@@Base+0x780>
   11620:	bl	10dc4 <coda_get_errno@plt>
   11624:	ldr	r0, [r0]
   11628:	cmn	r0, #21
   1162c:	bne	11658 <main@@Base+0x780>
   11630:	movw	r0, #0
   11634:	bl	10ce0 <coda_set_option_use_mmap@plt>
   11638:	ldr	r1, [fp, #-4]
   1163c:	str	r0, [sp, #28]
   11640:	mov	r0, r1
   11644:	sub	r1, fp, #8
   11648:	bl	10cc8 <coda_open@plt>
   1164c:	str	r0, [fp, #-40]	; 0xffffffd8
   11650:	movw	r0, #1
   11654:	bl	10ce0 <coda_set_option_use_mmap@plt>
   11658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1165c:	cmp	r0, #0
   11660:	beq	1169c <main@@Base+0x7c4>
   11664:	bl	10dc4 <coda_get_errno@plt>
   11668:	ldr	r0, [r0]
   1166c:	bl	10dac <coda_errno_to_string@plt>
   11670:	movw	r1, #8785	; 0x2251
   11674:	movt	r1, #1
   11678:	str	r0, [sp, #24]
   1167c:	mov	r0, r1
   11680:	ldr	r1, [sp, #24]
   11684:	bl	10cb0 <printf@plt>
   11688:	movw	r1, #12444	; 0x309c
   1168c:	movt	r1, #2
   11690:	movw	r2, #1
   11694:	str	r2, [r1]
   11698:	b	11778 <main@@Base+0x8a0>
   1169c:	ldr	r0, [fp, #-8]
   116a0:	movw	r1, #12452	; 0x30a4
   116a4:	movt	r1, #2
   116a8:	ldr	r1, [r1]
   116ac:	cmp	r1, #0
   116b0:	movw	r1, #0
   116b4:	movne	r1, #1
   116b8:	mvn	r2, #0
   116bc:	eor	r1, r1, r2
   116c0:	and	r1, r1, #1
   116c4:	movw	r2, #6776	; 0x1a78
   116c8:	movt	r2, #1
   116cc:	movw	r3, #0
   116d0:	bl	10d40 <coda_product_check@plt>
   116d4:	cmp	r0, #0
   116d8:	beq	11724 <main@@Base+0x84c>
   116dc:	bl	10dc4 <coda_get_errno@plt>
   116e0:	ldr	r0, [r0]
   116e4:	bl	10dac <coda_errno_to_string@plt>
   116e8:	movw	r1, #8785	; 0x2251
   116ec:	movt	r1, #1
   116f0:	str	r0, [sp, #20]
   116f4:	mov	r0, r1
   116f8:	ldr	r1, [sp, #20]
   116fc:	bl	10cb0 <printf@plt>
   11700:	movw	r1, #12444	; 0x309c
   11704:	movt	r1, #2
   11708:	movw	r2, #1
   1170c:	str	r2, [r1]
   11710:	ldr	r1, [fp, #-8]
   11714:	str	r0, [sp, #16]
   11718:	mov	r0, r1
   1171c:	bl	10da0 <coda_close@plt>
   11720:	b	11778 <main@@Base+0x8a0>
   11724:	ldr	r0, [fp, #-8]
   11728:	bl	10da0 <coda_close@plt>
   1172c:	cmp	r0, #0
   11730:	beq	1176c <main@@Base+0x894>
   11734:	bl	10dc4 <coda_get_errno@plt>
   11738:	ldr	r0, [r0]
   1173c:	bl	10dac <coda_errno_to_string@plt>
   11740:	movw	r1, #8875	; 0x22ab
   11744:	movt	r1, #1
   11748:	str	r0, [sp, #12]
   1174c:	mov	r0, r1
   11750:	ldr	r1, [sp, #12]
   11754:	bl	10cb0 <printf@plt>
   11758:	movw	r1, #12444	; 0x309c
   1175c:	movt	r1, #2
   11760:	movw	r2, #1
   11764:	str	r2, [r1]
   11768:	b	11778 <main@@Base+0x8a0>
   1176c:	movw	r0, #8841	; 0x2289
   11770:	movt	r0, #1
   11774:	bl	10cb0 <printf@plt>
   11778:	mov	sp, fp
   1177c:	pop	{fp, pc}
   11780:	push	{fp, lr}
   11784:	mov	fp, sp
   11788:	sub	sp, sp, #128	; 0x80
   1178c:	movw	r0, #7258	; 0x1c5a
   11790:	movt	r0, #1
   11794:	bl	10cb0 <printf@plt>
   11798:	movw	r1, #7266	; 0x1c62
   1179c:	movt	r1, #1
   117a0:	str	r0, [fp, #-4]
   117a4:	mov	r0, r1
   117a8:	bl	10cb0 <printf@plt>
   117ac:	movw	r1, #7321	; 0x1c99
   117b0:	movt	r1, #1
   117b4:	str	r0, [fp, #-8]
   117b8:	mov	r0, r1
   117bc:	bl	10cb0 <printf@plt>
   117c0:	movw	r1, #7394	; 0x1ce2
   117c4:	movt	r1, #1
   117c8:	str	r0, [fp, #-12]
   117cc:	mov	r0, r1
   117d0:	bl	10cb0 <printf@plt>
   117d4:	movw	r1, #7412	; 0x1cf4
   117d8:	movt	r1, #1
   117dc:	str	r0, [fp, #-16]
   117e0:	mov	r0, r1
   117e4:	bl	10cb0 <printf@plt>
   117e8:	movw	r1, #7442	; 0x1d12
   117ec:	movt	r1, #1
   117f0:	str	r0, [fp, #-20]	; 0xffffffec
   117f4:	mov	r0, r1
   117f8:	bl	10cb0 <printf@plt>
   117fc:	movw	r1, #7520	; 0x1d60
   11800:	movt	r1, #1
   11804:	str	r0, [fp, #-24]	; 0xffffffe8
   11808:	mov	r0, r1
   1180c:	bl	10cb0 <printf@plt>
   11810:	movw	r1, #7590	; 0x1da6
   11814:	movt	r1, #1
   11818:	str	r0, [fp, #-28]	; 0xffffffe4
   1181c:	mov	r0, r1
   11820:	bl	10cb0 <printf@plt>
   11824:	movw	r1, #7667	; 0x1df3
   11828:	movt	r1, #1
   1182c:	str	r0, [fp, #-32]	; 0xffffffe0
   11830:	mov	r0, r1
   11834:	bl	10cb0 <printf@plt>
   11838:	movw	r1, #7692	; 0x1e0c
   1183c:	movt	r1, #1
   11840:	str	r0, [fp, #-36]	; 0xffffffdc
   11844:	mov	r0, r1
   11848:	bl	10cb0 <printf@plt>
   1184c:	movw	r1, #7755	; 0x1e4b
   11850:	movt	r1, #1
   11854:	str	r0, [fp, #-40]	; 0xffffffd8
   11858:	mov	r0, r1
   1185c:	bl	10cb0 <printf@plt>
   11860:	movw	r1, #7811	; 0x1e83
   11864:	movt	r1, #1
   11868:	str	r0, [fp, #-44]	; 0xffffffd4
   1186c:	mov	r0, r1
   11870:	bl	10cb0 <printf@plt>
   11874:	movw	r1, #7838	; 0x1e9e
   11878:	movt	r1, #1
   1187c:	str	r0, [fp, #-48]	; 0xffffffd0
   11880:	mov	r0, r1
   11884:	bl	10cb0 <printf@plt>
   11888:	movw	r1, #7908	; 0x1ee4
   1188c:	movt	r1, #1
   11890:	str	r0, [fp, #-52]	; 0xffffffcc
   11894:	mov	r0, r1
   11898:	bl	10cb0 <printf@plt>
   1189c:	movw	r1, #7931	; 0x1efb
   118a0:	movt	r1, #1
   118a4:	str	r0, [fp, #-56]	; 0xffffffc8
   118a8:	mov	r0, r1
   118ac:	bl	10cb0 <printf@plt>
   118b0:	movw	r1, #8841	; 0x2289
   118b4:	movt	r1, #1
   118b8:	str	r0, [fp, #-60]	; 0xffffffc4
   118bc:	mov	r0, r1
   118c0:	bl	10cb0 <printf@plt>
   118c4:	movw	r1, #7995	; 0x1f3b
   118c8:	movt	r1, #1
   118cc:	str	r0, [sp, #64]	; 0x40
   118d0:	mov	r0, r1
   118d4:	bl	10cb0 <printf@plt>
   118d8:	movw	r1, #8074	; 0x1f8a
   118dc:	movt	r1, #1
   118e0:	str	r0, [sp, #60]	; 0x3c
   118e4:	mov	r0, r1
   118e8:	bl	10cb0 <printf@plt>
   118ec:	movw	r1, #8841	; 0x2289
   118f0:	movt	r1, #1
   118f4:	str	r0, [sp, #56]	; 0x38
   118f8:	mov	r0, r1
   118fc:	bl	10cb0 <printf@plt>
   11900:	movw	r1, #8103	; 0x1fa7
   11904:	movt	r1, #1
   11908:	str	r0, [sp, #52]	; 0x34
   1190c:	mov	r0, r1
   11910:	bl	10cb0 <printf@plt>
   11914:	movw	r1, #8129	; 0x1fc1
   11918:	movt	r1, #1
   1191c:	str	r0, [sp, #48]	; 0x30
   11920:	mov	r0, r1
   11924:	bl	10cb0 <printf@plt>
   11928:	movw	r1, #8841	; 0x2289
   1192c:	movt	r1, #1
   11930:	str	r0, [sp, #44]	; 0x2c
   11934:	mov	r0, r1
   11938:	bl	10cb0 <printf@plt>
   1193c:	movw	r1, #8160	; 0x1fe0
   11940:	movt	r1, #1
   11944:	str	r0, [sp, #40]	; 0x28
   11948:	mov	r0, r1
   1194c:	bl	10cb0 <printf@plt>
   11950:	movw	r1, #8189	; 0x1ffd
   11954:	movt	r1, #1
   11958:	str	r0, [sp, #36]	; 0x24
   1195c:	mov	r0, r1
   11960:	bl	10cb0 <printf@plt>
   11964:	movw	r1, #8841	; 0x2289
   11968:	movt	r1, #1
   1196c:	str	r0, [sp, #32]
   11970:	mov	r0, r1
   11974:	bl	10cb0 <printf@plt>
   11978:	movw	r1, #8240	; 0x2030
   1197c:	movt	r1, #1
   11980:	str	r0, [sp, #28]
   11984:	mov	r0, r1
   11988:	bl	10cb0 <printf@plt>
   1198c:	movw	r1, #8319	; 0x207f
   11990:	movt	r1, #1
   11994:	str	r0, [sp, #24]
   11998:	mov	r0, r1
   1199c:	bl	10cb0 <printf@plt>
   119a0:	movw	r1, #8393	; 0x20c9
   119a4:	movt	r1, #1
   119a8:	str	r0, [sp, #20]
   119ac:	mov	r0, r1
   119b0:	bl	10cb0 <printf@plt>
   119b4:	movw	r1, #8437	; 0x20f5
   119b8:	movt	r1, #1
   119bc:	str	r0, [sp, #16]
   119c0:	mov	r0, r1
   119c4:	bl	10cb0 <printf@plt>
   119c8:	movw	r1, #8514	; 0x2142
   119cc:	movt	r1, #1
   119d0:	str	r0, [sp, #12]
   119d4:	mov	r0, r1
   119d8:	bl	10cb0 <printf@plt>
   119dc:	movw	r1, #8585	; 0x2189
   119e0:	movt	r1, #1
   119e4:	str	r0, [sp, #8]
   119e8:	mov	r0, r1
   119ec:	bl	10cb0 <printf@plt>
   119f0:	movw	r1, #8649	; 0x21c9
   119f4:	movt	r1, #1
   119f8:	str	r0, [sp, #4]
   119fc:	mov	r0, r1
   11a00:	bl	10cb0 <printf@plt>
   11a04:	movw	r1, #8841	; 0x2289
   11a08:	movt	r1, #1
   11a0c:	str	r0, [sp]
   11a10:	mov	r0, r1
   11a14:	bl	10cb0 <printf@plt>
   11a18:	mov	sp, fp
   11a1c:	pop	{fp, pc}
   11a20:	push	{fp, lr}
   11a24:	mov	fp, sp
   11a28:	sub	sp, sp, #16
   11a2c:	bl	10db8 <coda_get_libcoda_version@plt>
   11a30:	movw	r1, #8714	; 0x220a
   11a34:	movt	r1, #1
   11a38:	str	r0, [fp, #-4]
   11a3c:	mov	r0, r1
   11a40:	ldr	r1, [fp, #-4]
   11a44:	bl	10cb0 <printf@plt>
   11a48:	movw	r1, #8736	; 0x2220
   11a4c:	movt	r1, #1
   11a50:	str	r0, [sp, #8]
   11a54:	mov	r0, r1
   11a58:	bl	10cb0 <printf@plt>
   11a5c:	movw	r1, #8841	; 0x2289
   11a60:	movt	r1, #1
   11a64:	str	r0, [sp, #4]
   11a68:	mov	r0, r1
   11a6c:	bl	10cb0 <printf@plt>
   11a70:	mov	sp, fp
   11a74:	pop	{fp, pc}
   11a78:	push	{fp, lr}
   11a7c:	mov	fp, sp
   11a80:	sub	sp, sp, #16
   11a84:	str	r0, [fp, #-4]
   11a88:	str	r1, [sp, #8]
   11a8c:	str	r2, [sp, #4]
   11a90:	ldr	r1, [sp, #8]
   11a94:	movw	r0, #8888	; 0x22b8
   11a98:	movt	r0, #1
   11a9c:	bl	10cb0 <printf@plt>
   11aa0:	ldr	r1, [fp, #-4]
   11aa4:	movw	r2, #0
   11aa8:	cmp	r1, r2
   11aac:	beq	11ad4 <main@@Base+0xbfc>
   11ab0:	movw	r0, #8900	; 0x22c4
   11ab4:	movt	r0, #1
   11ab8:	bl	10cb0 <printf@plt>
   11abc:	ldr	r1, [fp, #-4]
   11ac0:	str	r0, [sp]
   11ac4:	mov	r0, r1
   11ac8:	movw	r1, #3248	; 0xcb0
   11acc:	movt	r1, #1
   11ad0:	bl	10cec <coda_cursor_print_path@plt>
   11ad4:	movw	r0, #8841	; 0x2289
   11ad8:	movt	r0, #1
   11adc:	bl	10cb0 <printf@plt>
   11ae0:	movw	r1, #12444	; 0x309c
   11ae4:	movt	r1, #2
   11ae8:	movw	r2, #1
   11aec:	str	r2, [r1]
   11af0:	mov	sp, fp
   11af4:	pop	{fp, pc}

00011af8 <__libc_csu_init@@Base>:
   11af8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11afc:	mov	r7, r0
   11b00:	ldr	r6, [pc, #72]	; 11b50 <__libc_csu_init@@Base+0x58>
   11b04:	ldr	r5, [pc, #72]	; 11b54 <__libc_csu_init@@Base+0x5c>
   11b08:	add	r6, pc, r6
   11b0c:	add	r5, pc, r5
   11b10:	sub	r6, r6, r5
   11b14:	mov	r8, r1
   11b18:	mov	r9, r2
   11b1c:	bl	10c78 <coda_set_option_perform_boundary_checks@plt-0x20>
   11b20:	asrs	r6, r6, #2
   11b24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b28:	mov	r4, #0
   11b2c:	add	r4, r4, #1
   11b30:	ldr	r3, [r5], #4
   11b34:	mov	r2, r9
   11b38:	mov	r1, r8
   11b3c:	mov	r0, r7
   11b40:	blx	r3
   11b44:	cmp	r6, r4
   11b48:	bne	11b2c <__libc_csu_init@@Base+0x34>
   11b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b50:	andeq	r1, r1, r4, ror #7
   11b54:	ldrdeq	r1, [r1], -ip

00011b58 <__libc_csu_fini@@Base>:
   11b58:	bx	lr

Disassembly of section .fini:

00011b5c <.fini>:
   11b5c:	push	{r3, lr}
   11b60:	pop	{r3, pc}
