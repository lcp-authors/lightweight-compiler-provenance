
../repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_attributes>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #40	; 0x28
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	mov	r4, r0
  1c:	add	r0, sp, #24
  20:	mov	r2, r0
  24:	mov	r0, r1
  28:	mov	r1, r2
  2c:	bl	0 <coda_type_get_attributes>
  30:	ldr	r0, [sp, #24]
  34:	add	r1, sp, #28
  38:	bl	0 <coda_type_get_num_record_fields>
  3c:	mov	r5, #0
  40:	ldr	r2, [sp, #28]
  44:	cmp	r5, r2
  48:	bge	12c <print_attributes+0x12c>
  4c:	ldr	r0, [sp, #24]
  50:	add	r2, sp, #16
  54:	mov	r1, r5
  58:	bl	0 <coda_type_get_record_field_real_name>
  5c:	ldr	r0, [sp, #24]
  60:	add	r2, sp, #20
  64:	mov	r1, r5
  68:	bl	0 <coda_type_get_record_field_available_status>
  6c:	ldr	r0, [sp, #24]
  70:	add	r2, sp, #36	; 0x24
  74:	mov	r1, r5
  78:	bl	0 <coda_type_get_record_field_type>
  7c:	ldr	r0, [sp, #36]	; 0x24
  80:	add	r1, sp, #32
  84:	bl	0 <coda_type_get_class>
  88:	ldr	r1, [pc, #184]	; 148 <print_attributes+0x148>
  8c:	ldr	r2, [sp, #16]
  90:	mov	r0, r4
  94:	bl	0 <fprintf>
  98:	ldr	r2, [sp, #20]
  9c:	cmp	r2, #1
  a0:	bne	b0 <print_attributes+0xb0>
  a4:	ldr	r1, [pc, #172]	; 158 <print_attributes+0x158>
  a8:	mov	r0, r4
  ac:	bl	0 <fprintf>
  b0:	ldr	r0, [sp, #32]
  b4:	cmp	r0, #2
  b8:	beq	10c <print_attributes+0x10c>
  bc:	cmp	r0, #3
  c0:	beq	fc <print_attributes+0xfc>
  c4:	cmp	r0, #4
  c8:	bne	dc <print_attributes+0xdc>
  cc:	ldr	r1, [pc, #128]	; 154 <print_attributes+0x154>
  d0:	mov	r0, r4
  d4:	bl	0 <fprintf>
  d8:	b	118 <print_attributes+0x118>
  dc:	ldr	r0, [pc, #124]	; 160 <print_attributes+0x160>
  e0:	ldr	r1, [pc, #116]	; 15c <print_attributes+0x15c>
  e4:	mov	r2, #82	; 0x52
  e8:	ldr	r3, [pc, #84]	; 144 <print_attributes+0x144>
  ec:	bl	0 <__assert_fail>
  f0:	mov	r0, #1
  f4:	bl	0 <exit>
  f8:	b	118 <print_attributes+0x118>
  fc:	ldr	r1, [pc, #72]	; 14c <print_attributes+0x14c>
 100:	mov	r0, r4
 104:	bl	0 <fprintf>
 108:	b	118 <print_attributes+0x118>
 10c:	ldr	r1, [pc, #60]	; 150 <print_attributes+0x150>
 110:	mov	r0, r4
 114:	bl	0 <fprintf>
 118:	ldr	r1, [pc, #32]	; 140 <print_attributes+0x140>
 11c:	mov	r0, r4
 120:	bl	0 <fprintf>
 124:	add	r5, r5, #1
 128:	b	40 <print_attributes+0x40>
 12c:	ldr	r4, [sp, #8]
 130:	ldr	r5, [sp, #12]
 134:	ldr	lr, [sp, #4]
 138:	add	sp, sp, #40	; 0x28
 13c:	bx	lr
 140:	.word	0x00000000
 144:	.word	0x00000391
 148:	.word	0x00000368
 14c:	.word	0x00000380
 150:	.word	0x0000001f
 154:	.word	0x000000b4
 158:	.word	0x0000007c
 15c:	.word	0x00000225
 160:	.word	0x0000030f

00000164 <print_xml_element>:
 164:	mov	ip, sp
 168:	sub	sp, sp, #56	; 0x38
 16c:	str	ip, [sp]
 170:	str	lr, [sp, #4]
 174:	str	r4, [sp, #8]
 178:	str	r5, [sp, #12]
 17c:	str	r6, [sp, #16]
 180:	str	r7, [sp, #20]
 184:	mov	r4, r1
 188:	mov	r5, r0
 18c:	add	r1, sp, #36	; 0x24
 190:	mov	r0, r4
 194:	bl	0 <coda_type_get_class>
 198:	ldr	r3, [sp, #36]	; 0x24
 19c:	cmp	r3, #0
 1a0:	beq	1b8 <print_xml_element+0x54>
 1a4:	ldr	r0, [pc, #720]	; 47c <print_xml_element+0x318>
 1a8:	ldr	r1, [pc, #720]	; 480 <print_xml_element+0x31c>
 1ac:	mov	r2, #96	; 0x60
 1b0:	ldr	r3, [pc, #692]	; 46c <print_xml_element+0x308>
 1b4:	bl	0 <__assert_fail>
 1b8:	ldr	r1, [pc, #660]	; 454 <print_xml_element+0x2f0>
 1bc:	mov	r0, r5
 1c0:	bl	0 <fprintf>
 1c4:	add	r1, sp, #40	; 0x28
 1c8:	mov	r0, r4
 1cc:	bl	0 <coda_type_get_num_record_fields>
 1d0:	mov	r7, #0
 1d4:	ldr	r1, [sp, #40]	; 0x28
 1d8:	cmp	r7, r1
 1dc:	bge	408 <print_xml_element+0x2a4>
 1e0:	add	r2, sp, #28
 1e4:	mov	r1, r7
 1e8:	mov	r0, r4
 1ec:	bl	0 <coda_type_get_record_field_real_name>
 1f0:	add	r2, sp, #48	; 0x30
 1f4:	mov	r1, r7
 1f8:	mov	r0, r4
 1fc:	bl	0 <coda_type_get_record_field_type>
 200:	ldr	r0, [sp, #48]	; 0x30
 204:	add	r1, sp, #44	; 0x2c
 208:	bl	0 <coda_type_get_class>
 20c:	ldr	r0, [sp, #48]	; 0x30
 210:	add	r1, sp, #32
 214:	bl	0 <coda_type_get_format>
 218:	ldr	r1, [pc, #600]	; 478 <print_xml_element+0x314>
 21c:	ldr	r2, [sp, #28]
 220:	mov	r0, r5
 224:	bl	0 <fprintf>
 228:	ldr	r0, [sp, #44]	; 0x2c
 22c:	cmp	r0, #1
 230:	bne	248 <print_xml_element+0xe4>
 234:	ldr	r1, [sp, #32]
 238:	cmp	r1, #2
 23c:	moveq	r1, #1
 240:	movne	r1, #0
 244:	b	24c <print_xml_element+0xe8>
 248:	mov	r1, #0
 24c:	cmp	r1, #0
 250:	beq	284 <print_xml_element+0x120>
 254:	ldr	r1, [pc, #492]	; 448 <print_xml_element+0x2e4>
 258:	mov	r0, r5
 25c:	bl	0 <fprintf>
 260:	ldr	r0, [sp, #48]	; 0x30
 264:	add	r1, sp, #48	; 0x30
 268:	bl	0 <coda_type_get_array_base_type>
 26c:	ldr	r0, [sp, #48]	; 0x30
 270:	add	r1, sp, #44	; 0x2c
 274:	bl	0 <coda_type_get_class>
 278:	ldr	r0, [sp, #48]	; 0x30
 27c:	add	r1, sp, #32
 280:	bl	0 <coda_type_get_format>
 284:	ldr	r1, [sp, #44]	; 0x2c
 288:	cmp	r1, #6
 28c:	bne	2b4 <print_xml_element+0x150>
 290:	ldr	r0, [sp, #48]	; 0x30
 294:	add	r1, sp, #48	; 0x30
 298:	bl	0 <coda_type_get_special_base_type>
 29c:	ldr	r0, [sp, #48]	; 0x30
 2a0:	add	r1, sp, #44	; 0x2c
 2a4:	bl	0 <coda_type_get_class>
 2a8:	ldr	r0, [sp, #48]	; 0x30
 2ac:	add	r1, sp, #32
 2b0:	bl	0 <coda_type_get_format>
 2b4:	ldr	r3, [sp, #44]	; 0x2c
 2b8:	cmp	r3, #0
 2bc:	beq	3dc <print_xml_element+0x278>
 2c0:	ldr	ip, [sp, #44]	; 0x2c
 2c4:	cmp	ip, #3
 2c8:	bcs	30c <print_xml_element+0x1a8>
 2cc:	cmp	ip, #1
 2d0:	beq	2e4 <print_xml_element+0x180>
 2d4:	cmp	ip, #2
 2d8:	bne	324 <print_xml_element+0x1c0>
 2dc:	ldr	r6, [pc, #424]	; 48c <print_xml_element+0x328>
 2e0:	b	348 <print_xml_element+0x1e4>
 2e4:	ldr	r3, [sp, #32]
 2e8:	cmp	r3, #2
 2ec:	bne	304 <print_xml_element+0x1a0>
 2f0:	ldr	r0, [pc, #380]	; 474 <print_xml_element+0x310>
 2f4:	ldr	r1, [pc, #388]	; 480 <print_xml_element+0x31c>
 2f8:	mov	r2, #138	; 0x8a
 2fc:	ldr	r3, [pc, #360]	; 46c <print_xml_element+0x308>
 300:	bl	0 <__assert_fail>
 304:	ldr	r6, [pc, #396]	; 498 <print_xml_element+0x334>
 308:	b	348 <print_xml_element+0x1e4>
 30c:	cmp	ip, #3
 310:	beq	344 <print_xml_element+0x1e0>
 314:	cmp	ip, #4
 318:	bne	324 <print_xml_element+0x1c0>
 31c:	ldr	r6, [pc, #372]	; 498 <print_xml_element+0x334>
 320:	b	348 <print_xml_element+0x1e4>
 324:	ldr	r0, [pc, #348]	; 488 <print_xml_element+0x324>
 328:	ldr	r1, [pc, #336]	; 480 <print_xml_element+0x31c>
 32c:	mov	r2, #151	; 0x97
 330:	ldr	r3, [pc, #308]	; 46c <print_xml_element+0x308>
 334:	bl	0 <__assert_fail>
 338:	mov	r0, #1
 33c:	bl	0 <exit>
 340:	b	348 <print_xml_element+0x1e4>
 344:	ldr	r6, [pc, #260]	; 450 <print_xml_element+0x2ec>
 348:	ldr	r0, [sp, #48]	; 0x30
 34c:	add	r1, sp, #24
 350:	bl	0 <coda_type_has_attributes>
 354:	ldr	r0, [sp, #24]
 358:	cmp	r0, #0
 35c:	beq	3c8 <print_xml_element+0x264>
 360:	ldr	r1, [pc, #264]	; 470 <print_xml_element+0x30c>
 364:	mov	r0, r5
 368:	bl	0 <fprintf>
 36c:	ldr	r1, [pc, #284]	; 490 <print_xml_element+0x32c>
 370:	mov	r0, r5
 374:	bl	0 <fprintf>
 378:	ldr	r1, [pc, #260]	; 484 <print_xml_element+0x320>
 37c:	mov	r0, r5
 380:	bl	0 <fprintf>
 384:	ldr	r1, [pc, #264]	; 494 <print_xml_element+0x330>
 388:	mov	r2, r6
 38c:	mov	r0, r5
 390:	bl	0 <fprintf>
 394:	ldr	r1, [sp, #48]	; 0x30
 398:	mov	r0, r5
 39c:	bl	0 <print_attributes>
 3a0:	ldr	r1, [pc, #188]	; 464 <print_xml_element+0x300>
 3a4:	mov	r0, r5
 3a8:	bl	0 <fprintf>
 3ac:	ldr	r1, [pc, #172]	; 460 <print_xml_element+0x2fc>
 3b0:	mov	r0, r5
 3b4:	bl	0 <fprintf>
 3b8:	ldr	r1, [pc, #140]	; 44c <print_xml_element+0x2e8>
 3bc:	mov	r0, r5
 3c0:	bl	0 <fprintf>
 3c4:	b	3f4 <print_xml_element+0x290>
 3c8:	ldr	r1, [pc, #152]	; 468 <print_xml_element+0x304>
 3cc:	mov	r2, r6
 3d0:	mov	r0, r5
 3d4:	bl	0 <fprintf>
 3d8:	b	3f4 <print_xml_element+0x290>
 3dc:	ldr	r1, [pc, #140]	; 470 <print_xml_element+0x30c>
 3e0:	mov	r0, r5
 3e4:	bl	0 <fprintf>
 3e8:	ldr	r1, [sp, #48]	; 0x30
 3ec:	mov	r0, r5
 3f0:	bl	164 <print_xml_element>
 3f4:	ldr	r1, [pc, #96]	; 45c <print_xml_element+0x2f8>
 3f8:	mov	r0, r5
 3fc:	bl	0 <fprintf>
 400:	add	r7, r7, #1
 404:	b	1d4 <print_xml_element+0x70>
 408:	ldr	r1, [pc, #72]	; 458 <print_xml_element+0x2f4>
 40c:	mov	r0, r5
 410:	bl	0 <fprintf>
 414:	mov	r1, r4
 418:	mov	r0, r5
 41c:	bl	0 <print_attributes>
 420:	ldr	r1, [pc, #36]	; 44c <print_xml_element+0x2e8>
 424:	mov	r0, r5
 428:	bl	0 <fprintf>
 42c:	ldr	r4, [sp, #8]
 430:	ldr	r5, [sp, #12]
 434:	ldr	r6, [sp, #16]
 438:	ldr	r7, [sp, #20]
 43c:	ldr	lr, [sp, #4]
 440:	add	sp, sp, #56	; 0x38
 444:	bx	lr
 448:	.word	0x000001df
 44c:	.word	0x00000204
 450:	.word	0x0000021f
 454:	.word	0x0000034a
 458:	.word	0x0000033b
 45c:	.word	0x0000028a
 460:	.word	0x0000014a
 464:	.word	0x000000ff
 468:	.word	0x000002a7
 46c:	.word	0x000003a2
 470:	.word	0x00000216
 474:	.word	0x000002f5
 478:	.word	0x000001c9
 47c:	.word	0x0000005c
 480:	.word	0x00000225
 484:	.word	0x00000190
 488:	.word	0x0000030f
 48c:	.word	0x0000010f
 490:	.word	0x00000311
 494:	.word	0x00000003
 498:	.word	0x00000218

0000049c <generate_xmlschema>:
 49c:	mov	ip, sp
 4a0:	sub	sp, sp, #32
 4a4:	str	ip, [sp]
 4a8:	str	lr, [sp, #4]
 4ac:	str	r4, [sp, #8]
 4b0:	str	r5, [sp, #12]
 4b4:	str	r6, [sp, #16]
 4b8:	str	r7, [sp, #20]
 4bc:	str	r8, [sp, #24]
 4c0:	mov	r7, r3
 4c4:	mov	r8, r2
 4c8:	mov	r5, r0
 4cc:	mov	r0, r1
 4d0:	ldr	r3, [pc, #584]	; 720 <generate_xmlschema+0x284>
 4d4:	ldr	r4, [r3]
 4d8:	bl	0 <coda_data_dictionary_get_product_class>
 4dc:	mov	r6, r0
 4e0:	cmp	r6, #0
 4e4:	bne	518 <generate_xmlschema+0x7c>
 4e8:	ldr	r0, [pc, #548]	; 714 <generate_xmlschema+0x278>
 4ec:	ldr	r0, [r0]
 4f0:	bl	0 <coda_errno_to_string>
 4f4:	ldr	r1, [pc, #556]	; 728 <generate_xmlschema+0x28c>
 4f8:	ldr	r2, [r1]
 4fc:	ldr	r1, [pc, #532]	; 718 <generate_xmlschema+0x27c>
 500:	mov	r3, r0
 504:	mov	r0, r2
 508:	mov	r2, r3
 50c:	bl	0 <fprintf>
 510:	mov	r0, #1
 514:	bl	0 <exit>
 518:	mov	r1, r8
 51c:	mov	r0, r6
 520:	bl	0 <coda_product_class_get_product_type>
 524:	mov	r6, r0
 528:	cmp	r6, #0
 52c:	bne	558 <generate_xmlschema+0xbc>
 530:	ldr	r1, [pc, #476]	; 714 <generate_xmlschema+0x278>
 534:	ldr	r0, [r1]
 538:	bl	0 <coda_errno_to_string>
 53c:	mov	r2, r0
 540:	ldr	r1, [pc, #480]	; 728 <generate_xmlschema+0x28c>
 544:	ldr	r0, [r1]
 548:	ldr	r1, [pc, #456]	; 718 <generate_xmlschema+0x27c>
 54c:	bl	0 <fprintf>
 550:	mov	r0, #1
 554:	bl	0 <exit>
 558:	mov	r1, r7
 55c:	mov	r0, r6
 560:	bl	0 <coda_product_type_get_product_definition_by_version>
 564:	mov	r6, r0
 568:	cmp	r6, #0
 56c:	bne	5a0 <generate_xmlschema+0x104>
 570:	ldr	r3, [pc, #412]	; 714 <generate_xmlschema+0x278>
 574:	ldr	r0, [r3]
 578:	bl	0 <coda_errno_to_string>
 57c:	ldr	r3, [pc, #420]	; 728 <generate_xmlschema+0x28c>
 580:	ldr	r2, [r3]
 584:	ldr	r1, [pc, #396]	; 718 <generate_xmlschema+0x27c>
 588:	mov	r3, r0
 58c:	mov	r0, r2
 590:	mov	r2, r3
 594:	bl	0 <fprintf>
 598:	mov	r0, #1
 59c:	bl	0 <exit>
 5a0:	ldr	r3, [r6]
 5a4:	cmp	r3, #2
 5a8:	beq	5c4 <generate_xmlschema+0x128>
 5ac:	ldr	r1, [pc, #372]	; 728 <generate_xmlschema+0x28c>
 5b0:	ldr	r0, [r1]
 5b4:	ldr	r1, [pc, #336]	; 70c <generate_xmlschema+0x270>
 5b8:	bl	0 <fprintf>
 5bc:	mov	r0, #1
 5c0:	bl	0 <exit>
 5c4:	ldr	ip, [r6, #28]
 5c8:	cmp	ip, #0
 5cc:	bne	5e8 <generate_xmlschema+0x14c>
 5d0:	ldr	ip, [pc, #336]	; 728 <generate_xmlschema+0x28c>
 5d4:	ldr	r0, [ip]
 5d8:	ldr	r1, [pc, #336]	; 730 <generate_xmlschema+0x294>
 5dc:	bl	0 <fprintf>
 5e0:	mov	r0, #1
 5e4:	bl	0 <exit>
 5e8:	cmp	r5, #0
 5ec:	beq	624 <generate_xmlschema+0x188>
 5f0:	ldr	r1, [pc, #264]	; 700 <generate_xmlschema+0x264>
 5f4:	mov	r0, r5
 5f8:	bl	0 <fopen>
 5fc:	mov	r4, r0
 600:	cmp	r4, #0
 604:	bne	624 <generate_xmlschema+0x188>
 608:	ldr	r1, [pc, #280]	; 728 <generate_xmlschema+0x28c>
 60c:	ldr	r0, [r1]
 610:	ldr	r1, [pc, #240]	; 708 <generate_xmlschema+0x26c>
 614:	mov	r2, r5
 618:	bl	0 <fprintf>
 61c:	mov	r0, #1
 620:	bl	0 <exit>
 624:	ldr	r0, [r6, #28]
 628:	ldr	ip, [r0, #8]
 62c:	cmp	ip, #0
 630:	beq	648 <generate_xmlschema+0x1ac>
 634:	ldr	r0, [pc, #248]	; 734 <generate_xmlschema+0x298>
 638:	ldr	r1, [pc, #228]	; 724 <generate_xmlschema+0x288>
 63c:	mov	r2, #229	; 0xe5
 640:	ldr	r3, [pc, #176]	; 6f8 <generate_xmlschema+0x25c>
 644:	bl	0 <__assert_fail>
 648:	ldr	r6, [r6, #28]
 64c:	ldr	ip, [r6, #48]	; 0x30
 650:	cmp	ip, #1
 654:	beq	66c <generate_xmlschema+0x1d0>
 658:	ldr	r0, [pc, #188]	; 71c <generate_xmlschema+0x280>
 65c:	ldr	r1, [pc, #192]	; 724 <generate_xmlschema+0x288>
 660:	mov	r2, #231	; 0xe7
 664:	ldr	r3, [pc, #140]	; 6f8 <generate_xmlschema+0x25c>
 668:	bl	0 <__assert_fail>
 66c:	ldr	r1, [pc, #136]	; 6fc <generate_xmlschema+0x260>
 670:	mov	r0, r4
 674:	bl	0 <fprintf>
 678:	ldr	r1, [pc, #184]	; 738 <generate_xmlschema+0x29c>
 67c:	mov	r0, r4
 680:	bl	0 <fprintf>
 684:	ldr	r1, [pc, #132]	; 710 <generate_xmlschema+0x274>
 688:	ldr	r2, [r6, #52]	; 0x34
 68c:	ldr	r2, [r2]
 690:	ldr	r2, [r2, #4]
 694:	mov	r0, r4
 698:	bl	0 <fprintf>
 69c:	ldr	r1, [r6, #52]	; 0x34
 6a0:	ldr	r0, [r1]
 6a4:	ldr	r1, [r0, #8]
 6a8:	mov	r0, r4
 6ac:	bl	164 <print_xml_element>
 6b0:	ldr	r1, [pc, #116]	; 72c <generate_xmlschema+0x290>
 6b4:	mov	r0, r4
 6b8:	bl	0 <fprintf>
 6bc:	ldr	r1, [pc, #64]	; 704 <generate_xmlschema+0x268>
 6c0:	mov	r0, r4
 6c4:	bl	0 <fprintf>
 6c8:	cmp	r5, #0
 6cc:	beq	6d8 <generate_xmlschema+0x23c>
 6d0:	mov	r0, r4
 6d4:	bl	0 <fclose>
 6d8:	ldr	r4, [sp, #8]
 6dc:	ldr	r5, [sp, #12]
 6e0:	ldr	r6, [sp, #16]
 6e4:	ldr	r7, [sp, #20]
 6e8:	ldr	r8, [sp, #24]
 6ec:	ldr	lr, [sp, #4]
 6f0:	add	sp, sp, #32
 6f4:	bx	lr
 6f8:	.word	0x000003b4
 6fc:	.word	0x0000008c
 700:	.word	0x00000339
 704:	.word	0x0000013c
 708:	.word	0x00000032
 70c:	.word	0x00000117
 710:	.word	0x00000322
 714:	.word	0x00000000
 718:	.word	0x000001a3
 71c:	.word	0x000001ae
 720:	.word	0x00000000
 724:	.word	0x00000225
 728:	.word	0x00000000
 72c:	.word	0x00000298
 730:	.word	0x0000015e
 734:	.word	0x000002b6
 738:	.word	0x000000c6
