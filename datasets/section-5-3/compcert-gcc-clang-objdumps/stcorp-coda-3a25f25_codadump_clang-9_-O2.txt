
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012604 <.init>:
   12604:	push	{r3, lr}
   12608:	bl	12b10 <_start@@Base+0x3c>
   1260c:	pop	{r3, pc}

Disassembly of section .plt:

00012610 <coda_cursor_get_byte_size@plt-0x14>:
   12610:	push	{lr}		; (str lr, [sp, #-4]!)
   12614:	ldr	lr, [pc, #4]	; 12620 <coda_cursor_get_byte_size@plt-0x4>
   12618:	add	lr, pc, lr
   1261c:	ldr	pc, [lr, #8]!
   12620:	andeq	r9, r1, r0, ror #19

00012624 <coda_cursor_get_byte_size@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #102400	; 0x19000
   1262c:	ldr	pc, [ip, #2528]!	; 0x9e0

00012630 <coda_type_get_special_type_name@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #102400	; 0x19000
   12638:	ldr	pc, [ip, #2520]!	; 0x9d8

0001263c <coda_set_option_use_fast_size_expressions@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #102400	; 0x19000
   12644:	ldr	pc, [ip, #2512]!	; 0x9d0

00012648 <raise@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #102400	; 0x19000
   12650:	ldr	pc, [ip, #2504]!	; 0x9c8

00012654 <coda_get_option_bypass_special_types@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #102400	; 0x19000
   1265c:	ldr	pc, [ip, #2496]!	; 0x9c0

00012660 <coda_set_option_perform_boundary_checks@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #102400	; 0x19000
   12668:	ldr	pc, [ip, #2488]!	; 0x9b8

0001266c <strcmp@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #102400	; 0x19000
   12674:	ldr	pc, [ip, #2480]!	; 0x9b0

00012678 <strtol@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #102400	; 0x19000
   12680:	ldr	pc, [ip, #2472]!	; 0x9a8

00012684 <coda_type_get_record_field_hidden_status@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #102400	; 0x19000
   1268c:	ldr	pc, [ip, #2464]!	; 0x9a0

00012690 <printf@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #102400	; 0x19000
   12698:	ldr	pc, [ip, #2456]!	; 0x998

0001269c <coda_cursor_get_record_field_available_status@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #102400	; 0x19000
   126a4:	ldr	pc, [ip, #2448]!	; 0x990

000126a8 <fopen@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #102400	; 0x19000
   126b0:	ldr	pc, [ip, #2440]!	; 0x988

000126b4 <coda_set_error@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #102400	; 0x19000
   126bc:	ldr	pc, [ip, #2432]!	; 0x980

000126c0 <coda_open@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #102400	; 0x19000
   126c8:	ldr	pc, [ip, #2424]!	; 0x978

000126cc <fflush@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #102400	; 0x19000
   126d4:	ldr	pc, [ip, #2416]!	; 0x970

000126d8 <coda_time_double_to_string@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #102400	; 0x19000
   126e0:	ldr	pc, [ip, #2408]!	; 0x968

000126e4 <coda_cursor_get_num_elements@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #102400	; 0x19000
   126ec:	ldr	pc, [ip, #2400]!	; 0x960

000126f0 <coda_str64u@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #102400	; 0x19000
   126f8:	ldr	pc, [ip, #2392]!	; 0x958

000126fc <free@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #102400	; 0x19000
   12704:	ldr	pc, [ip, #2384]!	; 0x950

00012708 <coda_set_option_use_mmap@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #102400	; 0x19000
   12710:	ldr	pc, [ip, #2376]!	; 0x948

00012714 <coda_set_definition_path_conditional@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #102400	; 0x19000
   1271c:	ldr	pc, [ip, #2368]!	; 0x940

00012720 <coda_cursor_read_uint32@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #102400	; 0x19000
   12728:	ldr	pc, [ip, #2360]!	; 0x938

0001272c <coda_set_option_bypass_special_types@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #102400	; 0x19000
   12734:	ldr	pc, [ip, #2352]!	; 0x930

00012738 <coda_type_get_record_field_type@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #102400	; 0x19000
   12740:	ldr	pc, [ip, #2344]!	; 0x928

00012744 <coda_cursor_get_type@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #102400	; 0x19000
   1274c:	ldr	pc, [ip, #2336]!	; 0x920

00012750 <memcpy@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #102400	; 0x19000
   12758:	ldr	pc, [ip, #2328]!	; 0x918

0001275c <coda_isInf@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #102400	; 0x19000
   12764:	ldr	pc, [ip, #2320]!	; 0x910

00012768 <coda_type_get_bit_size@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #102400	; 0x19000
   12770:	ldr	pc, [ip, #2312]!	; 0x908

00012774 <coda_type_get_record_field_available_status@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #102400	; 0x19000
   1277c:	ldr	pc, [ip, #2304]!	; 0x900

00012780 <coda_cursor_has_attributes@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #102400	; 0x19000
   12788:	ldr	pc, [ip, #2296]!	; 0x8f8

0001278c <coda_cursor_get_type_class@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #102400	; 0x19000
   12794:	ldr	pc, [ip, #2288]!	; 0x8f0

00012798 <coda_set_definition_path@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #102400	; 0x19000
   127a0:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a4 <coda_get_product_format@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #102400	; 0x19000
   127ac:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b0 <coda_type_get_unit@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #102400	; 0x19000
   127b8:	ldr	pc, [ip, #2264]!	; 0x8d8

000127bc <coda_type_get_description@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #102400	; 0x19000
   127c4:	ldr	pc, [ip, #2256]!	; 0x8d0

000127c8 <coda_cursor_get_special_type@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #102400	; 0x19000
   127d0:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d4 <coda_cursor_goto_first_array_element@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #102400	; 0x19000
   127dc:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e0 <fwrite@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #102400	; 0x19000
   127e8:	ldr	pc, [ip, #2232]!	; 0x8b8

000127ec <coda_cursor_set_product@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #102400	; 0x19000
   127f4:	ldr	pc, [ip, #2224]!	; 0x8b0

000127f8 <coda_cursor_goto_first_record_field@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #102400	; 0x19000
   12800:	ldr	pc, [ip, #2216]!	; 0x8a8

00012804 <coda_cursor_goto_record_field_by_index@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #102400	; 0x19000
   1280c:	ldr	pc, [ip, #2208]!	; 0x8a0

00012810 <coda_done@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #102400	; 0x19000
   12818:	ldr	pc, [ip, #2200]!	; 0x898

0001281c <puts@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #102400	; 0x19000
   12824:	ldr	pc, [ip, #2192]!	; 0x890

00012828 <coda_cursor_get_read_type@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #102400	; 0x19000
   12830:	ldr	pc, [ip, #2184]!	; 0x888

00012834 <malloc@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #102400	; 0x19000
   1283c:	ldr	pc, [ip, #2176]!	; 0x880

00012840 <__libc_start_main@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #102400	; 0x19000
   12848:	ldr	pc, [ip, #2168]!	; 0x878

0001284c <__gmon_start__@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #102400	; 0x19000
   12854:	ldr	pc, [ip, #2160]!	; 0x870

00012858 <coda_cursor_read_string@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #102400	; 0x19000
   12860:	ldr	pc, [ip, #2152]!	; 0x868

00012864 <coda_cursor_goto_parent@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #102400	; 0x19000
   1286c:	ldr	pc, [ip, #2144]!	; 0x860

00012870 <coda_type_get_num_record_fields@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #102400	; 0x19000
   12878:	ldr	pc, [ip, #2136]!	; 0x858

0001287c <exit@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #102400	; 0x19000
   12884:	ldr	pc, [ip, #2128]!	; 0x850

00012888 <coda_type_get_read_type@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #102400	; 0x19000
   12890:	ldr	pc, [ip, #2120]!	; 0x848

00012894 <coda_cursor_get_string_length@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #102400	; 0x19000
   1289c:	ldr	pc, [ip, #2112]!	; 0x840

000128a0 <coda_cursor_read_uint64@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #102400	; 0x19000
   128a8:	ldr	pc, [ip, #2104]!	; 0x838

000128ac <coda_cursor_read_double@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #102400	; 0x19000
   128b4:	ldr	pc, [ip, #2096]!	; 0x830

000128b8 <coda_isNaN@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #102400	; 0x19000
   128c0:	ldr	pc, [ip, #2088]!	; 0x828

000128c4 <fprintf@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #102400	; 0x19000
   128cc:	ldr	pc, [ip, #2080]!	; 0x820

000128d0 <coda_cursor_goto_next_array_element@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #102400	; 0x19000
   128d8:	ldr	pc, [ip, #2072]!	; 0x818

000128dc <coda_open_as@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #102400	; 0x19000
   128e4:	ldr	pc, [ip, #2064]!	; 0x810

000128e8 <coda_init@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #102400	; 0x19000
   128f0:	ldr	pc, [ip, #2056]!	; 0x808

000128f4 <coda_set_option_perform_conversions@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #102400	; 0x19000
   128fc:	ldr	pc, [ip, #2048]!	; 0x800

00012900 <coda_cursor_goto_attributes@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #102400	; 0x19000
   12908:	ldr	pc, [ip, #2040]!	; 0x7f8

0001290c <coda_cursor_read_char@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #102400	; 0x19000
   12914:	ldr	pc, [ip, #2032]!	; 0x7f0

00012918 <memset@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #102400	; 0x19000
   12920:	ldr	pc, [ip, #2024]!	; 0x7e8

00012924 <putchar@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #102400	; 0x19000
   1292c:	ldr	pc, [ip, #2016]!	; 0x7e0

00012930 <strncpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #102400	; 0x19000
   12938:	ldr	pc, [ip, #2008]!	; 0x7d8

0001293c <coda_type_get_special_type@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #102400	; 0x19000
   12944:	ldr	pc, [ip, #2000]!	; 0x7d0

00012948 <coda_type_get_record_union_status@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #102400	; 0x19000
   12950:	ldr	pc, [ip, #1992]!	; 0x7c8

00012954 <coda_cursor_read_complex_double_split@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #102400	; 0x19000
   1295c:	ldr	pc, [ip, #1984]!	; 0x7c0

00012960 <coda_type_get_array_base_type@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #102400	; 0x19000
   12968:	ldr	pc, [ip, #1976]!	; 0x7b8

0001296c <fclose@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #102400	; 0x19000
   12974:	ldr	pc, [ip, #1968]!	; 0x7b0

00012978 <coda_type_get_string_length@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #102400	; 0x19000
   12980:	ldr	pc, [ip, #1960]!	; 0x7a8

00012984 <coda_type_get_native_type_name@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #102400	; 0x19000
   1298c:	ldr	pc, [ip, #1952]!	; 0x7a0

00012990 <coda_cursor_get_array_dim@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #102400	; 0x19000
   12998:	ldr	pc, [ip, #1944]!	; 0x798

0001299c <coda_cursor_has_ascii_content@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #102400	; 0x19000
   129a4:	ldr	pc, [ip, #1936]!	; 0x790

000129a8 <coda_close@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #102400	; 0x19000
   129b0:	ldr	pc, [ip, #1928]!	; 0x788

000129b4 <coda_cursor_read_int64@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #102400	; 0x19000
   129bc:	ldr	pc, [ip, #1920]!	; 0x780

000129c0 <vfprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #102400	; 0x19000
   129c8:	ldr	pc, [ip, #1912]!	; 0x778

000129cc <coda_cursor_goto@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #102400	; 0x19000
   129d4:	ldr	pc, [ip, #1904]!	; 0x770

000129d8 <coda_type_get_record_field_index_from_name@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #102400	; 0x19000
   129e0:	ldr	pc, [ip, #1896]!	; 0x768

000129e4 <coda_cursor_read_complex_double_pair@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #102400	; 0x19000
   129ec:	ldr	pc, [ip, #1888]!	; 0x760

000129f0 <coda_cursor_goto_next_record_field@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #102400	; 0x19000
   129f8:	ldr	pc, [ip, #1880]!	; 0x758

000129fc <fputc@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #102400	; 0x19000
   12a04:	ldr	pc, [ip, #1872]!	; 0x750

00012a08 <coda_type_get_array_dim@plt>:
   12a08:	add	ip, pc, #0, 12
   12a0c:	add	ip, ip, #102400	; 0x19000
   12a10:	ldr	pc, [ip, #1864]!	; 0x748

00012a14 <coda_cursor_get_bit_size@plt>:
   12a14:	add	ip, pc, #0, 12
   12a18:	add	ip, ip, #102400	; 0x19000
   12a1c:	ldr	pc, [ip, #1856]!	; 0x740

00012a20 <coda_errno_to_string@plt>:
   12a20:	add	ip, pc, #0, 12
   12a24:	add	ip, ip, #102400	; 0x19000
   12a28:	ldr	pc, [ip, #1848]!	; 0x738

00012a2c <coda_cursor_use_base_type_of_special_type@plt>:
   12a2c:	add	ip, pc, #0, 12
   12a30:	add	ip, ip, #102400	; 0x19000
   12a34:	ldr	pc, [ip, #1840]!	; 0x730

00012a38 <coda_cursor_get_available_union_field_index@plt>:
   12a38:	add	ip, pc, #0, 12
   12a3c:	add	ip, ip, #102400	; 0x19000
   12a40:	ldr	pc, [ip, #1832]!	; 0x728

00012a44 <coda_cursor_read_int32@plt>:
   12a44:	add	ip, pc, #0, 12
   12a48:	add	ip, ip, #102400	; 0x19000
   12a4c:	ldr	pc, [ip, #1824]!	; 0x720

00012a50 <coda_cursor_get_file_bit_offset@plt>:
   12a50:	add	ip, pc, #0, 12
   12a54:	add	ip, ip, #102400	; 0x19000
   12a58:	ldr	pc, [ip, #1816]!	; 0x718

00012a5c <coda_get_libcoda_version@plt>:
   12a5c:	add	ip, pc, #0, 12
   12a60:	add	ip, ip, #102400	; 0x19000
   12a64:	ldr	pc, [ip, #1808]!	; 0x710

00012a68 <coda_get_errno@plt>:
   12a68:	add	ip, pc, #0, 12
   12a6c:	add	ip, ip, #102400	; 0x19000
   12a70:	ldr	pc, [ip, #1800]!	; 0x708

00012a74 <coda_type_get_special_base_type@plt>:
   12a74:	add	ip, pc, #0, 12
   12a78:	add	ip, ip, #102400	; 0x19000
   12a7c:	ldr	pc, [ip, #1792]!	; 0x700

00012a80 <coda_type_get_record_field_name@plt>:
   12a80:	add	ip, pc, #0, 12
   12a84:	add	ip, ip, #102400	; 0x19000
   12a88:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a8c <fputs@plt>:
   12a8c:	add	ip, pc, #0, 12
   12a90:	add	ip, ip, #102400	; 0x19000
   12a94:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a98 <abort@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #102400	; 0x19000
   12aa0:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa4 <coda_cursor_read_bits@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #102400	; 0x19000
   12aac:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab0 <coda_str64@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #102400	; 0x19000
   12ab8:	ldr	pc, [ip, #1752]!	; 0x6d8

00012abc <__assert_fail@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #102400	; 0x19000
   12ac4:	ldr	pc, [ip, #1744]!	; 0x6d0

00012ac8 <coda_type_get_class@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #102400	; 0x19000
   12ad0:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

00012ad4 <_start@@Base>:
   12ad4:	mov	fp, #0
   12ad8:	mov	lr, #0
   12adc:	pop	{r1}		; (ldr r1, [sp], #4)
   12ae0:	mov	r2, sp
   12ae4:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae8:	push	{r0}		; (str r0, [sp, #-4]!)
   12aec:	ldr	ip, [pc, #16]	; 12b04 <_start@@Base+0x30>
   12af0:	push	{ip}		; (str ip, [sp, #-4]!)
   12af4:	ldr	r0, [pc, #12]	; 12b08 <_start@@Base+0x34>
   12af8:	ldr	r3, [pc, #12]	; 12b0c <_start@@Base+0x38>
   12afc:	bl	12840 <__libc_start_main@plt>
   12b00:	bl	12a98 <abort@plt>
   12b04:	andeq	r9, r1, r4, lsl sp
   12b08:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12b0c:			; <UNDEFINED> instruction: 0x00019cb4
   12b10:	ldr	r3, [pc, #20]	; 12b2c <_start@@Base+0x58>
   12b14:	ldr	r2, [pc, #20]	; 12b30 <_start@@Base+0x5c>
   12b18:	add	r3, pc, r3
   12b1c:	ldr	r2, [r3, r2]
   12b20:	cmp	r2, #0
   12b24:	bxeq	lr
   12b28:	b	1284c <__gmon_start__@plt>
   12b2c:	andeq	r9, r1, r0, ror #9
   12b30:	muleq	r0, ip, r1
   12b34:	ldr	r0, [pc, #24]	; 12b54 <_start@@Base+0x80>
   12b38:	ldr	r3, [pc, #24]	; 12b58 <_start@@Base+0x84>
   12b3c:	cmp	r3, r0
   12b40:	bxeq	lr
   12b44:	ldr	r3, [pc, #16]	; 12b5c <_start@@Base+0x88>
   12b48:	cmp	r3, #0
   12b4c:	bxeq	lr
   12b50:	bx	r3
   12b54:			; <UNDEFINED> instruction: 0x0002c1b0
   12b58:			; <UNDEFINED> instruction: 0x0002c1b0
   12b5c:	andeq	r0, r0, r0
   12b60:	ldr	r0, [pc, #36]	; 12b8c <_start@@Base+0xb8>
   12b64:	ldr	r1, [pc, #36]	; 12b90 <_start@@Base+0xbc>
   12b68:	sub	r1, r1, r0
   12b6c:	asr	r1, r1, #2
   12b70:	add	r1, r1, r1, lsr #31
   12b74:	asrs	r1, r1, #1
   12b78:	bxeq	lr
   12b7c:	ldr	r3, [pc, #16]	; 12b94 <_start@@Base+0xc0>
   12b80:	cmp	r3, #0
   12b84:	bxeq	lr
   12b88:	bx	r3
   12b8c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b90:			; <UNDEFINED> instruction: 0x0002c1b0
   12b94:	andeq	r0, r0, r0
   12b98:	push	{r4, lr}
   12b9c:	ldr	r4, [pc, #24]	; 12bbc <_start@@Base+0xe8>
   12ba0:	ldrb	r3, [r4]
   12ba4:	cmp	r3, #0
   12ba8:	popne	{r4, pc}
   12bac:	bl	12b34 <_start@@Base+0x60>
   12bb0:	mov	r3, #1
   12bb4:	strb	r3, [r4]
   12bb8:	pop	{r4, pc}
   12bbc:			; <UNDEFINED> instruction: 0x0002c1b8
   12bc0:	b	12b60 <_start@@Base+0x8c>

00012bc4 <export_data_element_to_ascii@@Base>:
   12bc4:	push	{r4, sl, fp, lr}
   12bc8:	add	fp, sp, #8
   12bcc:	movw	r0, #49596	; 0xc1bc
   12bd0:	movw	r4, #53392	; 0xd090
   12bd4:	movt	r0, #2
   12bd8:	movt	r4, #2
   12bdc:	ldrb	r1, [r0]
   12be0:	cmp	r1, #0
   12be4:	beq	12bf8 <export_data_element_to_ascii@@Base+0x34>
   12be8:	ldr	r1, [r4]
   12bec:	mov	r0, #10
   12bf0:	bl	129fc <fputc@plt>
   12bf4:	b	12c00 <export_data_element_to_ascii@@Base+0x3c>
   12bf8:	mov	r1, #1
   12bfc:	strb	r1, [r0]
   12c00:	movw	r0, #53792	; 0xd220
   12c04:	movt	r0, #2
   12c08:	ldr	r0, [r0]
   12c0c:	cmp	r0, #0
   12c10:	beq	12c30 <export_data_element_to_ascii@@Base+0x6c>
   12c14:	ldr	r0, [r4]
   12c18:	mov	r1, #2
   12c1c:	mov	r2, #0
   12c20:	bl	169d0 <print_full_field_name@@Base>
   12c24:	ldr	r1, [r4]
   12c28:	mov	r0, #10
   12c2c:	bl	129fc <fputc@plt>
   12c30:	movw	r0, #53424	; 0xd0b0
   12c34:	movt	r0, #2
   12c38:	ldr	r1, [r0]
   12c3c:	cmp	r1, #1
   12c40:	blt	12c58 <export_data_element_to_ascii@@Base+0x94>
   12c44:	add	r0, r0, r1, lsl #3
   12c48:	ldr	r1, [r0, #296]	; 0x128
   12c4c:	ldr	r0, [r0, #300]	; 0x12c
   12c50:	orrs	r0, r1, r0
   12c54:	popeq	{r4, sl, fp, pc}
   12c58:	ldr	r0, [r4]
   12c5c:	mov	r1, #0
   12c60:	mov	r2, #0
   12c64:	mov	r3, #0
   12c68:	pop	{r4, sl, fp, lr}
   12c6c:	b	12c70 <export_data_element_to_ascii@@Base+0xac>
   12c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c74:	add	fp, sp, #28
   12c78:	sub	sp, sp, #116	; 0x74
   12c7c:	movw	r9, #49640	; 0xc1e8
   12c80:	mov	r8, r0
   12c84:	mov	r6, r1
   12c88:	str	r3, [sp, #52]	; 0x34
   12c8c:	str	r2, [sp, #40]	; 0x28
   12c90:	movt	r9, #2
   12c94:	add	r5, r9, r1, lsl #2
   12c98:	sub	r1, fp, #52	; 0x34
   12c9c:	ldr	r0, [r5, #8]!
   12ca0:	bl	12ac8 <coda_type_get_class@plt>
   12ca4:	cmp	r0, #0
   12ca8:	beq	12cb0 <export_data_element_to_ascii@@Base+0xec>
   12cac:	bl	18294 <handle_coda_error@@Base>
   12cb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cb4:	cmp	r0, #0
   12cb8:	beq	12d9c <export_data_element_to_ascii@@Base+0x1d8>
   12cbc:	cmp	r0, #1
   12cc0:	bne	12e08 <export_data_element_to_ascii@@Base+0x244>
   12cc4:	ldr	r2, [sp, #40]	; 0x28
   12cc8:	add	r0, r2, r2, lsl #2
   12ccc:	cmp	r2, #0
   12cd0:	add	sl, r9, r0, lsl #4
   12cd4:	moveq	r0, #0
   12cd8:	ldr	r1, [sl, #800]	; 0x320
   12cdc:	streq	r0, [r9, #844]	; 0x34c
   12ce0:	mov	r2, sl
   12ce4:	ldr	r0, [r2, #804]!	; 0x324
   12ce8:	str	r2, [sp, #24]
   12cec:	movw	r2, #53424	; 0xd0b0
   12cf0:	movt	r2, #2
   12cf4:	ldr	r7, [r2, #104]	; 0x68
   12cf8:	add	r3, r0, r1
   12cfc:	str	r3, [sp, #32]
   12d00:	cmp	r7, r3
   12d04:	str	r7, [sp, #28]
   12d08:	blt	12d30 <export_data_element_to_ascii@@Base+0x16c>
   12d0c:	ldr	r3, [r9, #3360]	; 0xd20
   12d10:	ldr	r7, [sp, #40]	; 0x28
   12d14:	sub	r3, r3, #1
   12d18:	cmp	r3, r7
   12d1c:	ble	12d30 <export_data_element_to_ascii@@Base+0x16c>
   12d20:	ldr	r3, [sl, #840]	; 0x348
   12d24:	ldr	r7, [sl, #844]	; 0x34c
   12d28:	mul	r3, r3, r7
   12d2c:	str	r3, [sl, #924]	; 0x39c
   12d30:	cmp	r0, #1
   12d34:	str	r6, [sp, #16]
   12d38:	blt	12fc4 <export_data_element_to_ascii@@Base+0x400>
   12d3c:	add	r1, r2, r1, lsl #2
   12d40:	add	r2, sl, #848	; 0x350
   12d44:	add	r3, sl, #844	; 0x34c
   12d48:	mov	r9, #1
   12d4c:	mov	ip, #0
   12d50:	add	r4, sp, #56	; 0x38
   12d54:	mov	r6, #0
   12d58:	b	12d7c <export_data_element_to_ascii@@Base+0x1b8>
   12d5c:	add	r5, r5, #4
   12d60:	ldr	r7, [r5]
   12d64:	str	ip, [r2, r6]
   12d68:	subs	r0, r0, #1
   12d6c:	mul	r9, r7, r9
   12d70:	str	r7, [r4, r6]
   12d74:	add	r6, r6, #4
   12d78:	beq	12fb4 <export_data_element_to_ascii@@Base+0x3f0>
   12d7c:	add	r5, r1, r6
   12d80:	ldr	r7, [r5, #72]	; 0x48
   12d84:	cmp	r7, #0
   12d88:	beq	12d5c <export_data_element_to_ascii@@Base+0x198>
   12d8c:	ldr	r7, [r5, #108]	; 0x6c
   12d90:	ldr	r5, [r3]
   12d94:	add	r5, r7, r5, lsl #2
   12d98:	b	12d60 <export_data_element_to_ascii@@Base+0x19c>
   12d9c:	ldr	r0, [sp, #52]	; 0x34
   12da0:	add	r5, r9, #144	; 0x90
   12da4:	add	r2, sp, #56	; 0x38
   12da8:	add	r7, r9, r0, lsl #2
   12dac:	mov	r0, r5
   12db0:	ldr	r1, [r7, #3492]!	; 0xda4
   12db4:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   12db8:	cmp	r0, #0
   12dbc:	beq	12dc4 <export_data_element_to_ascii@@Base+0x200>
   12dc0:	bl	18294 <handle_coda_error@@Base>
   12dc4:	ldr	r0, [sp, #56]	; 0x38
   12dc8:	cmp	r0, #0
   12dcc:	beq	12fbc <export_data_element_to_ascii@@Base+0x3f8>
   12dd0:	ldr	r1, [r7]
   12dd4:	mov	r0, r5
   12dd8:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   12ddc:	cmp	r0, #0
   12de0:	beq	12de8 <export_data_element_to_ascii@@Base+0x224>
   12de4:	bl	18294 <handle_coda_error@@Base>
   12de8:	ldr	r0, [sp, #52]	; 0x34
   12dec:	ldr	r2, [sp, #40]	; 0x28
   12df0:	add	r1, r6, #1
   12df4:	add	r3, r0, #1
   12df8:	mov	r0, r8
   12dfc:	bl	12c70 <export_data_element_to_ascii@@Base+0xac>
   12e00:	mov	r0, r5
   12e04:	b	13104 <export_data_element_to_ascii@@Base+0x540>
   12e08:	movw	r0, #53408	; 0xd0a0
   12e0c:	str	r5, [sp, #48]	; 0x30
   12e10:	movt	r0, #2
   12e14:	ldr	r0, [r0]
   12e18:	cmp	r0, #0
   12e1c:	beq	12ef8 <export_data_element_to_ascii@@Base+0x334>
   12e20:	ldr	r0, [r9, #136]	; 0x88
   12e24:	cmp	r0, #1
   12e28:	blt	12ef8 <export_data_element_to_ascii@@Base+0x334>
   12e2c:	movw	r5, #53396	; 0xd094
   12e30:	movw	r6, #40484	; 0x9e24
   12e34:	mov	r0, #0
   12e38:	mov	r7, #0
   12e3c:	add	r4, sp, #56	; 0x38
   12e40:	movt	r5, #2
   12e44:	movt	r6, #1
   12e48:	str	r0, [sp, #52]	; 0x34
   12e4c:	b	12e80 <export_data_element_to_ascii@@Base+0x2bc>
   12e50:	ldr	r0, [sp, #52]	; 0x34
   12e54:	movw	r4, #49640	; 0xc1e8
   12e58:	mov	r8, sl
   12e5c:	movt	r4, #2
   12e60:	mov	r9, r4
   12e64:	add	r4, sp, #56	; 0x38
   12e68:	add	r0, r0, #1
   12e6c:	str	r0, [sp, #52]	; 0x34
   12e70:	ldr	r0, [r9, #136]	; 0x88
   12e74:	add	r7, r7, #1
   12e78:	cmp	r7, r0
   12e7c:	bge	12ef8 <export_data_element_to_ascii@@Base+0x334>
   12e80:	add	r0, r9, r7, lsl #2
   12e84:	mov	r1, r4
   12e88:	ldr	r0, [r0, #8]
   12e8c:	bl	12ac8 <coda_type_get_class@plt>
   12e90:	cmp	r0, #0
   12e94:	beq	12e9c <export_data_element_to_ascii@@Base+0x2d8>
   12e98:	bl	18294 <handle_coda_error@@Base>
   12e9c:	ldr	r0, [sp, #56]	; 0x38
   12ea0:	cmp	r0, #1
   12ea4:	bne	12e70 <export_data_element_to_ascii@@Base+0x2ac>
   12ea8:	ldr	r0, [sp, #52]	; 0x34
   12eac:	mov	sl, r8
   12eb0:	add	r0, r0, r0, lsl #2
   12eb4:	add	r0, r9, r0, lsl #4
   12eb8:	mov	r4, r0
   12ebc:	ldr	r1, [r4, #804]!	; 0x324
   12ec0:	cmp	r1, #1
   12ec4:	blt	12e50 <export_data_element_to_ascii@@Base+0x28c>
   12ec8:	add	r8, r0, #848	; 0x350
   12ecc:	mov	r9, #0
   12ed0:	ldr	r2, [r8, r9, lsl #2]
   12ed4:	ldr	r3, [r5]
   12ed8:	mov	r0, sl
   12edc:	mov	r1, r6
   12ee0:	bl	128c4 <fprintf@plt>
   12ee4:	ldr	r0, [r4]
   12ee8:	add	r9, r9, #1
   12eec:	cmp	r9, r0
   12ef0:	blt	12ed0 <export_data_element_to_ascii@@Base+0x30c>
   12ef4:	b	12e50 <export_data_element_to_ascii@@Base+0x28c>
   12ef8:	ldr	r5, [sp, #48]	; 0x30
   12efc:	sub	r1, fp, #32
   12f00:	ldr	r0, [r5]
   12f04:	bl	12ac8 <coda_type_get_class@plt>
   12f08:	cmp	r0, #0
   12f0c:	beq	12f14 <export_data_element_to_ascii@@Base+0x350>
   12f10:	bl	18294 <handle_coda_error@@Base>
   12f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f18:	sub	r1, r0, #2
   12f1c:	cmp	r1, #4
   12f20:	bcs	13110 <export_data_element_to_ascii@@Base+0x54c>
   12f24:	ldr	r0, [r5]
   12f28:	sub	r1, fp, #36	; 0x24
   12f2c:	bl	12888 <coda_type_get_read_type@plt>
   12f30:	cmp	r0, #0
   12f34:	beq	12f3c <export_data_element_to_ascii@@Base+0x378>
   12f38:	bl	18294 <handle_coda_error@@Base>
   12f3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f40:	add	r0, r0, #1
   12f44:	cmp	r0, #13
   12f48:	bhi	13618 <export_data_element_to_ascii@@Base+0xa54>
   12f4c:	add	r1, pc, #0
   12f50:	ldr	pc, [r1, r0, lsl #2]
   12f54:	andeq	r3, r1, r8, asr r6
   12f58:	andeq	r2, r1, ip, lsl #31
   12f5c:	strdeq	r3, [r1], -r8
   12f60:	andeq	r2, r1, ip, lsl #31
   12f64:	strdeq	r3, [r1], -r8
   12f68:	andeq	r2, r1, ip, lsl #31
   12f6c:	strdeq	r3, [r1], -r8
   12f70:			; <UNDEFINED> instruction: 0x000132b0
   12f74:	andeq	r3, r1, r0, ror #10
   12f78:	andeq	r3, r1, r8, lsr #4
   12f7c:	andeq	r3, r1, r8, lsr #4
   12f80:	muleq	r1, ip, r5
   12f84:	andeq	r3, r1, r0, ror #5
   12f88:	muleq	r1, r0, r3
   12f8c:	add	r0, r9, #144	; 0x90
   12f90:	add	r1, sp, #56	; 0x38
   12f94:	bl	12a44 <coda_cursor_read_int32@plt>
   12f98:	cmp	r0, #0
   12f9c:	beq	12fa4 <export_data_element_to_ascii@@Base+0x3e0>
   12fa0:	bl	18294 <handle_coda_error@@Base>
   12fa4:	ldr	r2, [sp, #56]	; 0x38
   12fa8:	movw	r1, #42084	; 0xa464
   12fac:	movt	r1, #1
   12fb0:	b	1321c <export_data_element_to_ascii@@Base+0x658>
   12fb4:	cmp	r9, #0
   12fb8:	bne	12fc8 <export_data_element_to_ascii@@Base+0x404>
   12fbc:	sub	sp, fp, #28
   12fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fc4:	mov	r9, #1
   12fc8:	movw	r0, #49640	; 0xc1e8
   12fcc:	movt	r0, #2
   12fd0:	add	r0, r0, #144	; 0x90
   12fd4:	str	r0, [sp, #36]	; 0x24
   12fd8:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   12fdc:	cmp	r0, #0
   12fe0:	beq	12fe8 <export_data_element_to_ascii@@Base+0x424>
   12fe4:	bl	18294 <handle_coda_error@@Base>
   12fe8:	cmp	r9, #1
   12fec:	blt	13100 <export_data_element_to_ascii@@Base+0x53c>
   12ff0:	add	r0, sl, #924	; 0x39c
   12ff4:	mov	r4, r8
   12ff8:	add	r8, sl, #844	; 0x34c
   12ffc:	mov	r7, #0
   13000:	mov	r5, #0
   13004:	str	r0, [sp, #20]
   13008:	add	r0, sp, #56	; 0x38
   1300c:	sub	sl, r0, #4
   13010:	sub	r0, r9, #1
   13014:	str	r0, [sp, #48]	; 0x30
   13018:	ldr	r0, [sp, #40]	; 0x28
   1301c:	add	r0, r0, #1
   13020:	str	r0, [sp, #44]	; 0x2c
   13024:	ldr	r0, [sp, #16]
   13028:	add	r6, r0, #1
   1302c:	b	1303c <export_data_element_to_ascii@@Base+0x478>
   13030:	add	r5, r5, #1
   13034:	cmp	r5, r9
   13038:	beq	13100 <export_data_element_to_ascii@@Base+0x53c>
   1303c:	ldr	r2, [sp, #44]	; 0x2c
   13040:	ldr	r3, [sp, #52]	; 0x34
   13044:	mov	r0, r4
   13048:	mov	r1, r6
   1304c:	bl	12c70 <export_data_element_to_ascii@@Base+0xac>
   13050:	ldr	r0, [sp, #48]	; 0x30
   13054:	cmp	r5, r0
   13058:	bge	13030 <export_data_element_to_ascii@@Base+0x46c>
   1305c:	ldr	r0, [sp, #36]	; 0x24
   13060:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   13064:	cmp	r0, #0
   13068:	beq	13070 <export_data_element_to_ascii@@Base+0x4ac>
   1306c:	bl	18294 <handle_coda_error@@Base>
   13070:	ldr	r0, [sp, #32]
   13074:	ldr	r1, [sp, #28]
   13078:	cmp	r1, r0
   1307c:	blt	130ac <export_data_element_to_ascii@@Base+0x4e8>
   13080:	movw	r0, #49640	; 0xc1e8
   13084:	ldr	r1, [sp, #40]	; 0x28
   13088:	movt	r0, #2
   1308c:	ldr	r0, [r0, #3360]	; 0xd20
   13090:	sub	r0, r0, #1
   13094:	cmp	r0, r1
   13098:	ble	130ac <export_data_element_to_ascii@@Base+0x4e8>
   1309c:	ldr	r1, [sp, #20]
   130a0:	ldr	r0, [r1]
   130a4:	add	r0, r0, #1
   130a8:	str	r0, [r1]
   130ac:	movw	r0, #53408	; 0xd0a0
   130b0:	movt	r0, #2
   130b4:	ldr	r0, [r0]
   130b8:	cmp	r0, #0
   130bc:	beq	13030 <export_data_element_to_ascii@@Base+0x46c>
   130c0:	ldr	r0, [sp, #24]
   130c4:	ldr	r0, [r0]
   130c8:	cmp	r0, #1
   130cc:	blt	13030 <export_data_element_to_ascii@@Base+0x46c>
   130d0:	ldr	r1, [r8, r0, lsl #2]
   130d4:	ldr	r2, [sl, r0, lsl #2]
   130d8:	add	r1, r1, #1
   130dc:	cmp	r1, r2
   130e0:	str	r1, [r8, r0, lsl #2]
   130e4:	bne	13030 <export_data_element_to_ascii@@Base+0x46c>
   130e8:	sub	r1, r0, #1
   130ec:	str	r7, [r8, r0, lsl #2]
   130f0:	cmp	r1, #0
   130f4:	mov	r0, r1
   130f8:	bgt	130d0 <export_data_element_to_ascii@@Base+0x50c>
   130fc:	b	13030 <export_data_element_to_ascii@@Base+0x46c>
   13100:	ldr	r0, [sp, #36]	; 0x24
   13104:	bl	12864 <coda_cursor_goto_parent@plt>
   13108:	sub	sp, fp, #28
   1310c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13110:	cmp	r0, #6
   13114:	beq	13134 <export_data_element_to_ascii@@Base+0x570>
   13118:	cmp	r0, #2
   1311c:	bcs	13618 <export_data_element_to_ascii@@Base+0xa54>
   13120:	movw	r0, #40795	; 0x9f5b
   13124:	movw	r1, #40286	; 0x9d5e
   13128:	movw	r3, #40415	; 0x9ddf
   1312c:	mov	r2, #368	; 0x170
   13130:	b	13668 <export_data_element_to_ascii@@Base+0xaa4>
   13134:	ldr	r0, [r5]
   13138:	sub	r1, fp, #36	; 0x24
   1313c:	bl	1293c <coda_type_get_special_type@plt>
   13140:	cmp	r0, #0
   13144:	beq	1314c <export_data_element_to_ascii@@Base+0x588>
   13148:	bl	18294 <handle_coda_error@@Base>
   1314c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13150:	sub	r1, r0, #1
   13154:	cmp	r1, #2
   13158:	bcs	13264 <export_data_element_to_ascii@@Base+0x6a0>
   1315c:	add	r0, r9, #144	; 0x90
   13160:	sub	r1, fp, #48	; 0x30
   13164:	bl	128ac <coda_cursor_read_double@plt>
   13168:	cmp	r0, #0
   1316c:	beq	13174 <export_data_element_to_ascii@@Base+0x5b0>
   13170:	bl	18294 <handle_coda_error@@Base>
   13174:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13178:	cmp	r0, #2
   1317c:	bne	135d8 <export_data_element_to_ascii@@Base+0xa14>
   13180:	movw	r0, #49628	; 0xc1dc
   13184:	movt	r0, #2
   13188:	ldr	r0, [r0]
   1318c:	cmp	r0, #0
   13190:	beq	135d8 <export_data_element_to_ascii@@Base+0xa14>
   13194:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13198:	bl	128b8 <coda_isNaN@plt>
   1319c:	cmp	r0, #0
   131a0:	bne	131b4 <export_data_element_to_ascii@@Base+0x5f0>
   131a4:	vldr	d0, [fp, #-48]	; 0xffffffd0
   131a8:	bl	1275c <coda_isInf@plt>
   131ac:	cmp	r0, #0
   131b0:	beq	13634 <export_data_element_to_ascii@@Base+0xa70>
   131b4:	movw	r1, #40496	; 0x9e30
   131b8:	mov	r0, #11
   131bc:	movt	r1, #1
   131c0:	vld1.64	{d16-d17}, [r1], r0
   131c4:	vld1.8	{d18-d19}, [r1]
   131c8:	add	r1, sp, #56	; 0x38
   131cc:	vst1.64	{d16-d17}, [r1], r0
   131d0:	vst1.8	{d18-d19}, [r1]
   131d4:	movw	r0, #53796	; 0xd224
   131d8:	movt	r0, #2
   131dc:	ldr	r0, [r0]
   131e0:	cmp	r0, #0
   131e4:	beq	1362c <export_data_element_to_ascii@@Base+0xa68>
   131e8:	movw	r1, #42328	; 0xa558
   131ec:	add	r2, sp, #56	; 0x38
   131f0:	movt	r1, #1
   131f4:	b	1321c <export_data_element_to_ascii@@Base+0x658>
   131f8:	add	r0, r9, #144	; 0x90
   131fc:	add	r1, sp, #56	; 0x38
   13200:	bl	12720 <coda_cursor_read_uint32@plt>
   13204:	cmp	r0, #0
   13208:	beq	13210 <export_data_element_to_ascii@@Base+0x64c>
   1320c:	bl	18294 <handle_coda_error@@Base>
   13210:	ldr	r2, [sp, #56]	; 0x38
   13214:	movw	r1, #40400	; 0x9dd0
   13218:	movt	r1, #1
   1321c:	mov	r0, r8
   13220:	bl	128c4 <fprintf@plt>
   13224:	b	13618 <export_data_element_to_ascii@@Base+0xa54>
   13228:	add	r0, r9, #144	; 0x90
   1322c:	add	r1, sp, #56	; 0x38
   13230:	bl	128ac <coda_cursor_read_double@plt>
   13234:	cmp	r0, #0
   13238:	beq	13240 <export_data_element_to_ascii@@Base+0x67c>
   1323c:	bl	18294 <handle_coda_error@@Base>
   13240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13244:	vldr	d16, [sp, #56]	; 0x38
   13248:	movw	r2, #40404	; 0x9dd4
   1324c:	movw	r1, #40409	; 0x9dd9
   13250:	movt	r2, #1
   13254:	movt	r1, #1
   13258:	cmp	r0, #8
   1325c:	moveq	r1, r2
   13260:	b	135e4 <export_data_element_to_ascii@@Base+0xa20>
   13264:	cmp	r0, #3
   13268:	bne	13618 <export_data_element_to_ascii@@Base+0xa54>
   1326c:	add	r0, r9, #144	; 0x90
   13270:	add	r1, sp, #56	; 0x38
   13274:	bl	129e4 <coda_cursor_read_complex_double_pair@plt>
   13278:	cmp	r0, #0
   1327c:	beq	13284 <export_data_element_to_ascii@@Base+0x6c0>
   13280:	bl	18294 <handle_coda_error@@Base>
   13284:	movw	r0, #53396	; 0xd094
   13288:	vldr	d16, [sp, #56]	; 0x38
   1328c:	vldr	d17, [sp, #64]	; 0x40
   13290:	movw	r1, #40477	; 0x9e1d
   13294:	movt	r0, #2
   13298:	movt	r1, #1
   1329c:	ldr	r0, [r0]
   132a0:	vstr	d17, [sp, #8]
   132a4:	vmov	r2, r3, d16
   132a8:	str	r0, [sp]
   132ac:	b	135e8 <export_data_element_to_ascii@@Base+0xa24>
   132b0:	add	r0, r9, #144	; 0x90
   132b4:	sub	r1, fp, #48	; 0x30
   132b8:	bl	129b4 <coda_cursor_read_int64@plt>
   132bc:	cmp	r0, #0
   132c0:	beq	132c8 <export_data_element_to_ascii@@Base+0x704>
   132c4:	bl	18294 <handle_coda_error@@Base>
   132c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   132cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132d0:	add	r5, sp, #56	; 0x38
   132d4:	mov	r2, r5
   132d8:	bl	12ab0 <coda_str64@plt>
   132dc:	b	1358c <export_data_element_to_ascii@@Base+0x9c8>
   132e0:	add	r6, r9, #144	; 0x90
   132e4:	add	r1, sp, #56	; 0x38
   132e8:	mov	r0, r6
   132ec:	bl	12894 <coda_cursor_get_string_length@plt>
   132f0:	cmp	r0, #0
   132f4:	beq	132fc <export_data_element_to_ascii@@Base+0x738>
   132f8:	bl	18294 <handle_coda_error@@Base>
   132fc:	ldr	r0, [sp, #56]	; 0x38
   13300:	add	r7, r0, #1
   13304:	mov	r0, r7
   13308:	bl	12834 <malloc@plt>
   1330c:	mov	r5, r0
   13310:	cmp	r0, #0
   13314:	bne	13348 <export_data_element_to_ascii@@Base+0x784>
   13318:	movw	r1, #40233	; 0x9d29
   1331c:	movw	r3, #40286	; 0x9d5e
   13320:	mov	r0, #126	; 0x7e
   13324:	mov	r2, r7
   13328:	movt	r1, #1
   1332c:	movt	r3, #1
   13330:	str	r0, [sp]
   13334:	mvn	r0, #0
   13338:	bl	126b4 <coda_set_error@plt>
   1333c:	bl	18294 <handle_coda_error@@Base>
   13340:	ldr	r0, [sp, #56]	; 0x38
   13344:	add	r7, r0, #1
   13348:	mov	r0, r6
   1334c:	mov	r1, r5
   13350:	mov	r2, r7
   13354:	bl	12858 <coda_cursor_read_string@plt>
   13358:	cmp	r0, #0
   1335c:	beq	13364 <export_data_element_to_ascii@@Base+0x7a0>
   13360:	bl	18294 <handle_coda_error@@Base>
   13364:	movw	r0, #53796	; 0xd224
   13368:	movt	r0, #2
   1336c:	ldr	r0, [r0]
   13370:	cmp	r0, #0
   13374:	beq	135f4 <export_data_element_to_ascii@@Base+0xa30>
   13378:	movw	r1, #42328	; 0xa558
   1337c:	mov	r0, r8
   13380:	mov	r2, r5
   13384:	movt	r1, #1
   13388:	bl	128c4 <fprintf@plt>
   1338c:	b	13600 <export_data_element_to_ascii@@Base+0xa3c>
   13390:	add	r0, r9, #144	; 0x90
   13394:	add	r1, sp, #56	; 0x38
   13398:	str	r8, [sp, #52]	; 0x34
   1339c:	str	r0, [sp, #48]	; 0x30
   133a0:	bl	12a14 <coda_cursor_get_bit_size@plt>
   133a4:	cmp	r0, #0
   133a8:	beq	133b0 <export_data_element_to_ascii@@Base+0x7ec>
   133ac:	bl	18294 <handle_coda_error@@Base>
   133b0:	ldr	sl, [sp, #56]	; 0x38
   133b4:	ldr	r7, [sp, #60]	; 0x3c
   133b8:	lsr	r0, sl, #3
   133bc:	asr	r4, r7, #3
   133c0:	orr	r0, r0, r7, lsl #29
   133c4:	adds	r5, r0, #1
   133c8:	adc	r9, r4, #0
   133cc:	ands	r8, sl, #7
   133d0:	moveq	r5, r0
   133d4:	mov	r0, r5
   133d8:	bl	12834 <malloc@plt>
   133dc:	cmp	r8, #0
   133e0:	mov	r6, r0
   133e4:	moveq	r9, r4
   133e8:	cmp	r0, #0
   133ec:	bne	13420 <export_data_element_to_ascii@@Base+0x85c>
   133f0:	movw	r1, #40233	; 0x9d29
   133f4:	movw	r3, #40286	; 0x9d5e
   133f8:	mov	r0, #163	; 0xa3
   133fc:	mov	r2, r5
   13400:	movt	r1, #1
   13404:	movt	r3, #1
   13408:	str	r0, [sp]
   1340c:	mvn	r0, #0
   13410:	bl	126b4 <coda_set_error@plt>
   13414:	bl	18294 <handle_coda_error@@Base>
   13418:	ldr	sl, [sp, #56]	; 0x38
   1341c:	ldr	r7, [sp, #60]	; 0x3c
   13420:	ldr	r0, [sp, #48]	; 0x30
   13424:	mov	r1, r6
   13428:	mov	r2, #0
   1342c:	mov	r3, #0
   13430:	str	sl, [sp]
   13434:	str	r7, [sp, #4]
   13438:	bl	12aa4 <coda_cursor_read_bits@plt>
   1343c:	ldr	r8, [sp, #52]	; 0x34
   13440:	cmp	r0, #0
   13444:	beq	1344c <export_data_element_to_ascii@@Base+0x888>
   13448:	bl	18294 <handle_coda_error@@Base>
   1344c:	subs	r0, r5, #1
   13450:	sbcs	r0, r9, #0
   13454:	blt	13554 <export_data_element_to_ascii@@Base+0x990>
   13458:	movw	r7, #40385	; 0x9dc1
   1345c:	movw	r4, #40388	; 0x9dc4
   13460:	mov	sl, #0
   13464:	movt	r7, #1
   13468:	movt	r4, #1
   1346c:	b	13498 <export_data_element_to_ascii@@Base+0x8d4>
   13470:	movw	r0, #40382	; 0x9dbe
   13474:	movt	r0, #1
   13478:	mov	r1, #2
   1347c:	mov	r2, #1
   13480:	mov	r3, r8
   13484:	bl	127e0 <fwrite@plt>
   13488:	add	sl, sl, #1
   1348c:	subs	r0, sl, r5
   13490:	rscs	r0, r9, #0
   13494:	bge	13554 <export_data_element_to_ascii@@Base+0x990>
   13498:	ldrb	r2, [r6, sl]
   1349c:	sub	r0, r2, #7
   134a0:	cmp	r0, #6
   134a4:	bhi	134d8 <export_data_element_to_ascii@@Base+0x914>
   134a8:	add	r1, pc, #0
   134ac:	ldr	pc, [r1, r0, lsl #2]
   134b0:	andeq	r3, r1, ip, asr #9
   134b4:	strdeq	r3, [r1], -r8
   134b8:	andeq	r3, r1, ip, ror #9
   134bc:	andeq	r3, r1, r4, lsl #10
   134c0:	andeq	r3, r1, r0, ror r4
   134c4:	andeq	r3, r1, r0, lsl r5
   134c8:	andeq	r3, r1, r8, lsl r5
   134cc:	movw	r0, #40370	; 0x9db2
   134d0:	movt	r0, #1
   134d4:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   134d8:	cmp	r2, #92	; 0x5c
   134dc:	bne	13520 <export_data_element_to_ascii@@Base+0x95c>
   134e0:	movw	r0, #40391	; 0x9dc7
   134e4:	movt	r0, #1
   134e8:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   134ec:	movw	r0, #40376	; 0x9db8
   134f0:	movt	r0, #1
   134f4:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   134f8:	movw	r0, #40373	; 0x9db5
   134fc:	movt	r0, #1
   13500:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   13504:	movw	r0, #40379	; 0x9dbb
   13508:	movt	r0, #1
   1350c:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   13510:	mov	r0, r7
   13514:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   13518:	mov	r0, r4
   1351c:	b	13478 <export_data_element_to_ascii@@Base+0x8b4>
   13520:	sub	r0, r2, #32
   13524:	uxtb	r0, r0
   13528:	cmp	r0, #94	; 0x5e
   1352c:	bhi	13540 <export_data_element_to_ascii@@Base+0x97c>
   13530:	mov	r0, r2
   13534:	mov	r1, r8
   13538:	bl	129fc <fputc@plt>
   1353c:	b	13488 <export_data_element_to_ascii@@Base+0x8c4>
   13540:	movw	r1, #40394	; 0x9dca
   13544:	mov	r0, r8
   13548:	movt	r1, #1
   1354c:	bl	128c4 <fprintf@plt>
   13550:	b	13488 <export_data_element_to_ascii@@Base+0x8c4>
   13554:	mov	r0, r6
   13558:	bl	126fc <free@plt>
   1355c:	b	13618 <export_data_element_to_ascii@@Base+0xa54>
   13560:	add	r0, r9, #144	; 0x90
   13564:	sub	r1, fp, #48	; 0x30
   13568:	bl	128a0 <coda_cursor_read_uint64@plt>
   1356c:	cmp	r0, #0
   13570:	beq	13578 <export_data_element_to_ascii@@Base+0x9b4>
   13574:	bl	18294 <handle_coda_error@@Base>
   13578:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1357c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13580:	add	r5, sp, #56	; 0x38
   13584:	mov	r2, r5
   13588:	bl	126f0 <coda_str64u@plt>
   1358c:	mov	r0, r5
   13590:	mov	r1, r8
   13594:	bl	12a8c <fputs@plt>
   13598:	b	13618 <export_data_element_to_ascii@@Base+0xa54>
   1359c:	add	r0, r9, #144	; 0x90
   135a0:	add	r1, sp, #56	; 0x38
   135a4:	bl	1290c <coda_cursor_read_char@plt>
   135a8:	cmp	r0, #0
   135ac:	beq	135b4 <export_data_element_to_ascii@@Base+0x9f0>
   135b0:	bl	18294 <handle_coda_error@@Base>
   135b4:	movw	r0, #53796	; 0xd224
   135b8:	ldrb	r2, [sp, #56]	; 0x38
   135bc:	movt	r0, #2
   135c0:	ldr	r0, [r0]
   135c4:	cmp	r0, #0
   135c8:	beq	1360c <export_data_element_to_ascii@@Base+0xa48>
   135cc:	movw	r1, #40228	; 0x9d24
   135d0:	movt	r1, #1
   135d4:	b	1321c <export_data_element_to_ascii@@Base+0x658>
   135d8:	vldr	d16, [fp, #-48]	; 0xffffffd0
   135dc:	movw	r1, #40409	; 0x9dd9
   135e0:	movt	r1, #1
   135e4:	vmov	r2, r3, d16
   135e8:	mov	r0, r8
   135ec:	bl	128c4 <fprintf@plt>
   135f0:	b	13618 <export_data_element_to_ascii@@Base+0xa54>
   135f4:	mov	r0, r5
   135f8:	mov	r1, r8
   135fc:	bl	12a8c <fputs@plt>
   13600:	mov	r0, r5
   13604:	bl	126fc <free@plt>
   13608:	b	13618 <export_data_element_to_ascii@@Base+0xa54>
   1360c:	mov	r0, r2
   13610:	mov	r1, r8
   13614:	bl	129fc <fputc@plt>
   13618:	mov	r0, #10
   1361c:	mov	r1, r8
   13620:	bl	129fc <fputc@plt>
   13624:	sub	sp, fp, #28
   13628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1362c:	add	r0, sp, #56	; 0x38
   13630:	b	13590 <export_data_element_to_ascii@@Base+0x9cc>
   13634:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13638:	movw	r0, #40450	; 0x9e02
   1363c:	add	r1, sp, #56	; 0x38
   13640:	movt	r0, #1
   13644:	bl	126d8 <coda_time_double_to_string@plt>
   13648:	cmp	r0, #0
   1364c:	beq	131d4 <export_data_element_to_ascii@@Base+0x610>
   13650:	bl	18294 <handle_coda_error@@Base>
   13654:	b	131d4 <export_data_element_to_ascii@@Base+0x610>
   13658:	movw	r0, #40795	; 0x9f5b
   1365c:	movw	r1, #40286	; 0x9d5e
   13660:	movw	r3, #40415	; 0x9ddf
   13664:	movw	r2, #294	; 0x126
   13668:	movt	r0, #1
   1366c:	movt	r1, #1
   13670:	movt	r3, #1
   13674:	bl	12abc <__assert_fail@plt>

00013678 <print_debug_data@@Base>:
   13678:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1367c:	add	fp, sp, #24
   13680:	sub	sp, sp, #536	; 0x218
   13684:	movw	r7, #49640	; 0xc1e8
   13688:	mov	r6, r0
   1368c:	mov	r5, r1
   13690:	mov	r4, r2
   13694:	sub	r1, fp, #28
   13698:	movt	r7, #2
   1369c:	cmp	r6, #0
   136a0:	ldr	r0, [r7]
   136a4:	beq	136c8 <print_debug_data@@Base+0x50>
   136a8:	str	r1, [sp]
   136ac:	mov	r1, r6
   136b0:	mov	r2, r5
   136b4:	mov	r3, r4
   136b8:	bl	128dc <coda_open_as@plt>
   136bc:	cmp	r0, #0
   136c0:	bne	136d4 <print_debug_data@@Base+0x5c>
   136c4:	b	13730 <print_debug_data@@Base+0xb8>
   136c8:	bl	126c0 <coda_open@plt>
   136cc:	cmp	r0, #0
   136d0:	beq	13730 <print_debug_data@@Base+0xb8>
   136d4:	bl	12a68 <coda_get_errno@plt>
   136d8:	ldr	r0, [r0]
   136dc:	cmn	r0, #21
   136e0:	bne	1372c <print_debug_data@@Base+0xb4>
   136e4:	mov	r0, #0
   136e8:	bl	12708 <coda_set_option_use_mmap@plt>
   136ec:	ldr	r0, [r7]
   136f0:	sub	r1, fp, #28
   136f4:	cmp	r6, #0
   136f8:	beq	13714 <print_debug_data@@Base+0x9c>
   136fc:	str	r1, [sp]
   13700:	mov	r1, r6
   13704:	mov	r2, r5
   13708:	mov	r3, r4
   1370c:	bl	128dc <coda_open_as@plt>
   13710:	b	13718 <print_debug_data@@Base+0xa0>
   13714:	bl	126c0 <coda_open@plt>
   13718:	mov	r4, r0
   1371c:	mov	r0, #1
   13720:	bl	12708 <coda_set_option_use_mmap@plt>
   13724:	cmp	r4, #0
   13728:	beq	13730 <print_debug_data@@Base+0xb8>
   1372c:	bl	18294 <handle_coda_error@@Base>
   13730:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13734:	add	r1, sp, #4
   13738:	bl	127a4 <coda_get_product_format@plt>
   1373c:	cmp	r0, #0
   13740:	beq	13748 <print_debug_data@@Base+0xd0>
   13744:	bl	18294 <handle_coda_error@@Base>
   13748:	ldr	r0, [sp, #4]
   1374c:	mov	r1, #0
   13750:	cmp	r0, #3
   13754:	movw	r0, #49576	; 0xc1a8
   13758:	movt	r0, #2
   1375c:	movwcc	r1, #1
   13760:	str	r1, [r0]
   13764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13768:	add	r0, sp, #8
   1376c:	bl	127ec <coda_cursor_set_product@plt>
   13770:	cmp	r0, #0
   13774:	beq	1377c <print_debug_data@@Base+0x104>
   13778:	bl	18294 <handle_coda_error@@Base>
   1377c:	movw	r0, #53416	; 0xd0a8
   13780:	movt	r0, #2
   13784:	ldr	r1, [r0]
   13788:	cmp	r1, #0
   1378c:	beq	137a4 <print_debug_data@@Base+0x12c>
   13790:	add	r0, sp, #8
   13794:	bl	129cc <coda_cursor_goto@plt>
   13798:	cmp	r0, #0
   1379c:	beq	137a4 <print_debug_data@@Base+0x12c>
   137a0:	bl	18294 <handle_coda_error@@Base>
   137a4:	mov	r0, #0
   137a8:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   137ac:	add	r0, sp, #8
   137b0:	mov	r1, #0
   137b4:	bl	137c8 <print_debug_data@@Base+0x150>
   137b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137bc:	bl	129a8 <coda_close@plt>
   137c0:	sub	sp, fp, #24
   137c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137cc:	add	fp, sp, #28
   137d0:	sub	sp, sp, #644	; 0x284
   137d4:	str	r1, [sp, #24]
   137d8:	sub	r1, fp, #40	; 0x28
   137dc:	mov	r4, r0
   137e0:	bl	12780 <coda_cursor_has_attributes@plt>
   137e4:	cmp	r0, #0
   137e8:	beq	137f0 <print_debug_data@@Base+0x178>
   137ec:	bl	18294 <handle_coda_error@@Base>
   137f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137f4:	str	r4, [sp, #28]
   137f8:	cmp	r0, #0
   137fc:	beq	1385c <print_debug_data@@Base+0x1e4>
   13800:	mov	r0, r4
   13804:	bl	12900 <coda_cursor_goto_attributes@plt>
   13808:	cmp	r0, #0
   1380c:	beq	13814 <print_debug_data@@Base+0x19c>
   13810:	bl	18294 <handle_coda_error@@Base>
   13814:	movw	r0, #40528	; 0x9e50
   13818:	movt	r0, #1
   1381c:	bl	14494 <print_debug_data@@Base+0xe1c>
   13820:	movw	r4, #49600	; 0xc1c0
   13824:	ldr	r5, [sp, #28]
   13828:	ldr	r1, [sp, #24]
   1382c:	movt	r4, #2
   13830:	ldr	r0, [r4]
   13834:	add	r0, r0, #1
   13838:	str	r0, [r4]
   1383c:	mov	r0, r5
   13840:	bl	137c8 <print_debug_data@@Base+0x150>
   13844:	ldr	r0, [r4]
   13848:	sub	r0, r0, #1
   1384c:	str	r0, [r4]
   13850:	mov	r0, r5
   13854:	mov	r4, r5
   13858:	bl	12864 <coda_cursor_goto_parent@plt>
   1385c:	sub	r1, fp, #36	; 0x24
   13860:	mov	r0, r4
   13864:	bl	1278c <coda_cursor_get_type_class@plt>
   13868:	cmp	r0, #0
   1386c:	beq	13874 <print_debug_data@@Base+0x1fc>
   13870:	bl	18294 <handle_coda_error@@Base>
   13874:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13878:	cmp	r0, #6
   1387c:	bhi	1443c <print_debug_data@@Base+0xdc4>
   13880:	add	r1, pc, #0
   13884:	ldr	pc, [r1, r0, lsl #2]
   13888:	andeq	r3, r1, ip, lsl #20
   1388c:	muleq	r1, r4, fp
   13890:	andeq	r3, r1, r4, lsr #17
   13894:	andeq	r3, r1, r4, lsr #17
   13898:	andeq	r3, r1, r4, lsr #17
   1389c:	andeq	r3, r1, r4, lsr #17
   138a0:	andeq	r3, r1, r4, lsl ip
   138a4:	sub	r1, fp, #96	; 0x60
   138a8:	mov	r0, r4
   138ac:	bl	1299c <coda_cursor_has_ascii_content@plt>
   138b0:	cmp	r0, #0
   138b4:	beq	138bc <print_debug_data@@Base+0x244>
   138b8:	bl	18294 <handle_coda_error@@Base>
   138bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138c0:	cmp	r0, #0
   138c4:	beq	13978 <print_debug_data@@Base+0x300>
   138c8:	add	r1, sp, #32
   138cc:	mov	r0, r4
   138d0:	bl	12894 <coda_cursor_get_string_length@plt>
   138d4:	cmp	r0, #0
   138d8:	beq	138e0 <print_debug_data@@Base+0x268>
   138dc:	bl	18294 <handle_coda_error@@Base>
   138e0:	ldr	r0, [sp, #32]
   138e4:	add	r6, r0, #1
   138e8:	mov	r0, r6
   138ec:	bl	12834 <malloc@plt>
   138f0:	mov	r5, r0
   138f4:	cmp	r0, #0
   138f8:	bne	1392c <print_debug_data@@Base+0x2b4>
   138fc:	movw	r1, #40233	; 0x9d29
   13900:	movw	r3, #40555	; 0x9e6b
   13904:	movw	r0, #410	; 0x19a
   13908:	mov	r2, r6
   1390c:	movt	r1, #1
   13910:	movt	r3, #1
   13914:	str	r0, [sp]
   13918:	mvn	r0, #0
   1391c:	bl	126b4 <coda_set_error@plt>
   13920:	bl	18294 <handle_coda_error@@Base>
   13924:	ldr	r0, [sp, #32]
   13928:	add	r6, r0, #1
   1392c:	mov	r0, r4
   13930:	mov	r1, r5
   13934:	mov	r2, r6
   13938:	bl	12858 <coda_cursor_read_string@plt>
   1393c:	cmp	r0, #0
   13940:	beq	13948 <print_debug_data@@Base+0x2d0>
   13944:	bl	18294 <handle_coda_error@@Base>
   13948:	movw	r0, #42064	; 0xa450
   1394c:	movt	r0, #1
   13950:	bl	14494 <print_debug_data@@Base+0xe1c>
   13954:	ldr	r1, [sp, #32]
   13958:	mov	r0, r5
   1395c:	bl	1458c <print_debug_data@@Base+0xf14>
   13960:	ldr	r1, [sp, #32]
   13964:	movw	r0, #40639	; 0x9ebf
   13968:	movt	r0, #1
   1396c:	bl	14544 <print_debug_data@@Base+0xecc>
   13970:	mov	r0, r5
   13974:	bl	126fc <free@plt>
   13978:	sub	r1, fp, #120	; 0x78
   1397c:	mov	r0, r4
   13980:	bl	12828 <coda_cursor_get_read_type@plt>
   13984:	cmp	r0, #0
   13988:	beq	13990 <print_debug_data@@Base+0x318>
   1398c:	bl	18294 <handle_coda_error@@Base>
   13990:	ldr	r0, [fp, #-120]	; 0xffffff88
   13994:	add	r0, r0, #1
   13998:	cmp	r0, #13
   1399c:	bhi	1443c <print_debug_data@@Base+0xdc4>
   139a0:	add	r1, pc, #0
   139a4:	ldr	pc, [r1, r0, lsl #2]
   139a8:	andeq	r3, r1, r0, ror #19
   139ac:	muleq	r1, ip, ip
   139b0:	andeq	r3, r1, r4, ror ip
   139b4:	muleq	r1, ip, ip
   139b8:	andeq	r3, r1, r4, ror ip
   139bc:	muleq	r1, ip, ip
   139c0:	andeq	r3, r1, r4, ror ip
   139c4:	andeq	r3, r1, ip, asr sp
   139c8:	andeq	r3, r1, ip, lsl #27
   139cc:	andeq	r3, r1, r4, asr #25
   139d0:	andeq	r3, r1, r4, asr #25
   139d4:	andeq	r3, r1, r0, ror #19
   139d8:	andeq	r3, r1, r0, ror #19
   139dc:	ldrdeq	r3, [r1], -r0
   139e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139e4:	cmp	r0, #0
   139e8:	bne	1443c <print_debug_data@@Base+0xdc4>
   139ec:	movw	r0, #40680	; 0x9ee8
   139f0:	movw	r1, #40555	; 0x9e6b
   139f4:	movw	r3, #40698	; 0x9efa
   139f8:	mov	r2, #548	; 0x224
   139fc:	movt	r0, #1
   13a00:	movt	r1, #1
   13a04:	movt	r3, #1
   13a08:	bl	12abc <__assert_fail@plt>
   13a0c:	sub	r1, fp, #120	; 0x78
   13a10:	mov	r0, r4
   13a14:	bl	126e4 <coda_cursor_get_num_elements@plt>
   13a18:	cmp	r0, #0
   13a1c:	beq	13a24 <print_debug_data@@Base+0x3ac>
   13a20:	bl	18294 <handle_coda_error@@Base>
   13a24:	ldr	r0, [fp, #-120]	; 0xffffff88
   13a28:	cmp	r0, #1
   13a2c:	blt	1443c <print_debug_data@@Base+0xdc4>
   13a30:	sub	r1, fp, #96	; 0x60
   13a34:	mov	r0, r4
   13a38:	bl	12744 <coda_cursor_get_type@plt>
   13a3c:	cmp	r0, #0
   13a40:	beq	13a48 <print_debug_data@@Base+0x3d0>
   13a44:	bl	18294 <handle_coda_error@@Base>
   13a48:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a4c:	sub	r1, fp, #44	; 0x2c
   13a50:	bl	12948 <coda_type_get_record_union_status@plt>
   13a54:	cmp	r0, #0
   13a58:	beq	13a60 <print_debug_data@@Base+0x3e8>
   13a5c:	bl	18294 <handle_coda_error@@Base>
   13a60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a64:	cmp	r0, #0
   13a68:	beq	13eec <print_debug_data@@Base+0x874>
   13a6c:	sub	r1, fp, #48	; 0x30
   13a70:	mov	r0, r4
   13a74:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   13a78:	cmp	r0, #0
   13a7c:	beq	13a84 <print_debug_data@@Base+0x40c>
   13a80:	bl	18294 <handle_coda_error@@Base>
   13a84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a88:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a8c:	sub	r2, fp, #52	; 0x34
   13a90:	bl	12a80 <coda_type_get_record_field_name@plt>
   13a94:	cmp	r0, #0
   13a98:	beq	13aa0 <print_debug_data@@Base+0x428>
   13a9c:	bl	18294 <handle_coda_error@@Base>
   13aa0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13aa4:	mov	r0, r4
   13aa8:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   13aac:	cmp	r0, #0
   13ab0:	beq	13ab8 <print_debug_data@@Base+0x440>
   13ab4:	bl	18294 <handle_coda_error@@Base>
   13ab8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13abc:	movw	r0, #42322	; 0xa552
   13ac0:	movt	r0, #1
   13ac4:	bl	14494 <print_debug_data@@Base+0xe1c>
   13ac8:	movw	r0, #49576	; 0xc1a8
   13acc:	movt	r0, #2
   13ad0:	ldr	r0, [r0]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13b40 <print_debug_data@@Base+0x4c8>
   13adc:	sub	r1, fp, #88	; 0x58
   13ae0:	mov	r0, r4
   13ae4:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   13ae8:	cmp	r0, #0
   13aec:	beq	13af4 <print_debug_data@@Base+0x47c>
   13af0:	bl	18294 <handle_coda_error@@Base>
   13af4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13af8:	cmp	r1, #0
   13afc:	bmi	13b40 <print_debug_data@@Base+0x4c8>
   13b00:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b04:	add	r5, sp, #32
   13b08:	mov	r2, r5
   13b0c:	lsr	r0, r0, #3
   13b10:	orr	r0, r0, r1, lsl #29
   13b14:	lsr	r1, r1, #3
   13b18:	bl	12ab0 <coda_str64@plt>
   13b1c:	movw	r0, #40542	; 0x9e5e
   13b20:	mov	r1, r5
   13b24:	movt	r0, #1
   13b28:	bl	14544 <print_debug_data@@Base+0xecc>
   13b2c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b30:	ands	r1, r0, #7
   13b34:	movwne	r0, #40546	; 0x9e62
   13b38:	movtne	r0, #1
   13b3c:	blne	14544 <print_debug_data@@Base+0xecc>
   13b40:	movw	r0, #42716	; 0xa6dc
   13b44:	movt	r0, #1
   13b48:	bl	14544 <print_debug_data@@Base+0xecc>
   13b4c:	movw	r4, #49600	; 0xc1c0
   13b50:	movt	r4, #2
   13b54:	ldr	r0, [r4]
   13b58:	add	r0, r0, #1
   13b5c:	str	r0, [r4]
   13b60:	movw	r0, #49580	; 0xc1ac
   13b64:	movt	r0, #2
   13b68:	ldr	r0, [r0]
   13b6c:	cmp	r0, #0
   13b70:	bmi	14140 <print_debug_data@@Base+0xac8>
   13b74:	ldr	r1, [sp, #24]
   13b78:	cmp	r0, r1
   13b7c:	bgt	14140 <print_debug_data@@Base+0xac8>
   13b80:	movw	r0, #40550	; 0x9e66
   13b84:	movt	r0, #1
   13b88:	bl	14494 <print_debug_data@@Base+0xe1c>
   13b8c:	ldr	r5, [sp, #28]
   13b90:	b	14154 <print_debug_data@@Base+0xadc>
   13b94:	add	r7, sp, #32
   13b98:	sub	r1, fp, #44	; 0x2c
   13b9c:	mov	r0, r4
   13ba0:	mov	r2, r7
   13ba4:	bl	12990 <coda_cursor_get_array_dim@plt>
   13ba8:	cmp	r0, #0
   13bac:	beq	13bb4 <print_debug_data@@Base+0x53c>
   13bb0:	bl	18294 <handle_coda_error@@Base>
   13bb4:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13bb8:	cmp	r4, #0
   13bbc:	bmi	1443c <print_debug_data@@Base+0xdc4>
   13bc0:	beq	14080 <print_debug_data@@Base+0xa08>
   13bc4:	lsl	r2, r4, #2
   13bc8:	sub	r0, fp, #88	; 0x58
   13bcc:	mov	r1, #0
   13bd0:	mov	r8, #0
   13bd4:	bl	12918 <memset@plt>
   13bd8:	mov	r5, #1
   13bdc:	cmp	r4, #4
   13be0:	bcc	141f0 <print_debug_data@@Base+0xb78>
   13be4:	bic	r8, r4, #3
   13be8:	mov	r0, #1
   13bec:	vmov.i32	q8, #1	; 0x00000001
   13bf0:	sub	r2, r8, #4
   13bf4:	add	r1, r0, r2, lsr #2
   13bf8:	cmp	r2, #12
   13bfc:	and	ip, r1, #3
   13c00:	bcs	14168 <print_debug_data@@Base+0xaf0>
   13c04:	mov	r1, #0
   13c08:	cmp	ip, #0
   13c0c:	bne	141bc <print_debug_data@@Base+0xb44>
   13c10:	b	141d8 <print_debug_data@@Base+0xb60>
   13c14:	sub	r1, fp, #120	; 0x78
   13c18:	mov	r0, r4
   13c1c:	bl	127c8 <coda_cursor_get_special_type@plt>
   13c20:	cmp	r0, #0
   13c24:	beq	13c2c <print_debug_data@@Base+0x5b4>
   13c28:	bl	18294 <handle_coda_error@@Base>
   13c2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c30:	cmp	r0, #0
   13c34:	beq	13d0c <print_debug_data@@Base+0x694>
   13c38:	add	r5, sp, #32
   13c3c:	mov	r1, r4
   13c40:	mov	r2, #520	; 0x208
   13c44:	mov	r0, r5
   13c48:	bl	12750 <memcpy@plt>
   13c4c:	mov	r0, r5
   13c50:	bl	12a2c <coda_cursor_use_base_type_of_special_type@plt>
   13c54:	cmp	r0, #0
   13c58:	beq	13c60 <print_debug_data@@Base+0x5e8>
   13c5c:	bl	18294 <handle_coda_error@@Base>
   13c60:	ldr	r1, [sp, #24]
   13c64:	add	r0, sp, #32
   13c68:	bl	137c8 <print_debug_data@@Base+0x150>
   13c6c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c70:	b	13d10 <print_debug_data@@Base+0x698>
   13c74:	add	r1, sp, #32
   13c78:	mov	r0, r4
   13c7c:	bl	12720 <coda_cursor_read_uint32@plt>
   13c80:	cmp	r0, #0
   13c84:	beq	13c8c <print_debug_data@@Base+0x614>
   13c88:	bl	18294 <handle_coda_error@@Base>
   13c8c:	ldr	r1, [sp, #32]
   13c90:	movw	r0, #40669	; 0x9edd
   13c94:	movt	r0, #1
   13c98:	b	13dc4 <print_debug_data@@Base+0x74c>
   13c9c:	add	r1, sp, #32
   13ca0:	mov	r0, r4
   13ca4:	bl	12a44 <coda_cursor_read_int32@plt>
   13ca8:	cmp	r0, #0
   13cac:	beq	13cb4 <print_debug_data@@Base+0x63c>
   13cb0:	bl	18294 <handle_coda_error@@Base>
   13cb4:	ldr	r1, [sp, #32]
   13cb8:	movw	r0, #40664	; 0x9ed8
   13cbc:	movt	r0, #1
   13cc0:	b	13dc4 <print_debug_data@@Base+0x74c>
   13cc4:	add	r1, sp, #32
   13cc8:	mov	r0, r4
   13ccc:	bl	128ac <coda_cursor_read_double@plt>
   13cd0:	cmp	r0, #0
   13cd4:	beq	13cdc <print_debug_data@@Base+0x664>
   13cd8:	bl	18294 <handle_coda_error@@Base>
   13cdc:	ldr	r1, [fp, #-120]	; 0xffffff88
   13ce0:	vldr	d16, [sp, #32]
   13ce4:	movw	r2, #40674	; 0x9ee2
   13ce8:	movw	r0, #40740	; 0x9f24
   13cec:	movt	r2, #1
   13cf0:	movt	r0, #1
   13cf4:	cmp	r1, #8
   13cf8:	moveq	r0, r2
   13cfc:	vmov	r2, r3, d16
   13d00:	bl	14494 <print_debug_data@@Base+0xe1c>
   13d04:	sub	sp, fp, #28
   13d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d0c:	mov	r0, #0
   13d10:	bl	12630 <coda_type_get_special_type_name@plt>
   13d14:	mov	r1, r0
   13d18:	movw	r0, #40734	; 0x9f1e
   13d1c:	movt	r0, #1
   13d20:	bl	14494 <print_debug_data@@Base+0xe1c>
   13d24:	ldr	r0, [fp, #-120]	; 0xffffff88
   13d28:	cmp	r0, #3
   13d2c:	bhi	1443c <print_debug_data@@Base+0xdc4>
   13d30:	add	r1, pc, #0
   13d34:	ldr	pc, [r1, r0, lsl #2]
   13d38:	andeq	r3, r1, r8, asr #26
   13d3c:	andeq	r4, r1, r0, lsl r1
   13d40:	muleq	r1, r0, r0
   13d44:	ldrdeq	r4, [r1], -r8
   13d48:	movw	r0, #42716	; 0xa6dc
   13d4c:	movt	r0, #1
   13d50:	bl	14544 <print_debug_data@@Base+0xecc>
   13d54:	sub	sp, fp, #28
   13d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d5c:	sub	r1, fp, #88	; 0x58
   13d60:	mov	r0, r4
   13d64:	bl	129b4 <coda_cursor_read_int64@plt>
   13d68:	cmp	r0, #0
   13d6c:	beq	13d74 <print_debug_data@@Base+0x6fc>
   13d70:	bl	18294 <handle_coda_error@@Base>
   13d74:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d78:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d7c:	add	r4, sp, #32
   13d80:	mov	r2, r4
   13d84:	bl	12ab0 <coda_str64@plt>
   13d88:	b	13db8 <print_debug_data@@Base+0x740>
   13d8c:	sub	r1, fp, #88	; 0x58
   13d90:	mov	r0, r4
   13d94:	bl	128a0 <coda_cursor_read_uint64@plt>
   13d98:	cmp	r0, #0
   13d9c:	beq	13da4 <print_debug_data@@Base+0x72c>
   13da0:	bl	18294 <handle_coda_error@@Base>
   13da4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13da8:	ldr	r1, [fp, #-84]	; 0xffffffac
   13dac:	add	r4, sp, #32
   13db0:	mov	r2, r4
   13db4:	bl	126f0 <coda_str64u@plt>
   13db8:	movw	r0, #42459	; 0xa5db
   13dbc:	mov	r1, r4
   13dc0:	movt	r0, #1
   13dc4:	bl	14494 <print_debug_data@@Base+0xe1c>
   13dc8:	sub	sp, fp, #28
   13dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dd0:	sub	r1, fp, #88	; 0x58
   13dd4:	mov	r0, r4
   13dd8:	bl	12a14 <coda_cursor_get_bit_size@plt>
   13ddc:	cmp	r0, #0
   13de0:	beq	13de8 <print_debug_data@@Base+0x770>
   13de4:	bl	18294 <handle_coda_error@@Base>
   13de8:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13dec:	ldr	r7, [fp, #-84]	; 0xffffffac
   13df0:	lsr	r0, r4, #3
   13df4:	tst	r4, #7
   13df8:	orr	r6, r0, r7, lsl #29
   13dfc:	addne	r6, r6, #1
   13e00:	mov	r0, r6
   13e04:	bl	12834 <malloc@plt>
   13e08:	mov	r5, r0
   13e0c:	cmp	r0, #0
   13e10:	bne	13e44 <print_debug_data@@Base+0x7cc>
   13e14:	movw	r1, #40233	; 0x9d29
   13e18:	movw	r3, #40555	; 0x9e6b
   13e1c:	movw	r0, #447	; 0x1bf
   13e20:	mov	r2, r6
   13e24:	movt	r1, #1
   13e28:	movt	r3, #1
   13e2c:	str	r0, [sp]
   13e30:	mvn	r0, #0
   13e34:	bl	126b4 <coda_set_error@plt>
   13e38:	bl	18294 <handle_coda_error@@Base>
   13e3c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13e40:	ldr	r7, [fp, #-84]	; 0xffffffac
   13e44:	ldr	r0, [sp, #28]
   13e48:	mov	r1, r5
   13e4c:	mov	r2, #0
   13e50:	mov	r3, #0
   13e54:	stm	sp, {r4, r7}
   13e58:	bl	12aa4 <coda_cursor_read_bits@plt>
   13e5c:	cmp	r0, #0
   13e60:	beq	13e68 <print_debug_data@@Base+0x7f0>
   13e64:	bl	18294 <handle_coda_error@@Base>
   13e68:	movw	r0, #42064	; 0xa450
   13e6c:	movt	r0, #1
   13e70:	bl	14494 <print_debug_data@@Base+0xe1c>
   13e74:	mov	r0, r5
   13e78:	mov	r1, r6
   13e7c:	bl	1458c <print_debug_data@@Base+0xf14>
   13e80:	movw	r0, #40655	; 0x9ecf
   13e84:	movt	r0, #1
   13e88:	bl	14544 <print_debug_data@@Base+0xecc>
   13e8c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e90:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e94:	add	r4, sp, #32
   13e98:	mov	r2, r4
   13e9c:	lsr	r0, r0, #3
   13ea0:	orr	r0, r0, r1, lsl #29
   13ea4:	asr	r1, r1, #3
   13ea8:	bl	12ab0 <coda_str64@plt>
   13eac:	movw	r0, #42262	; 0xa516
   13eb0:	mov	r1, r4
   13eb4:	movt	r0, #1
   13eb8:	bl	14544 <print_debug_data@@Base+0xecc>
   13ebc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ec0:	ands	r1, r0, #7
   13ec4:	movwne	r0, #40546	; 0x9e62
   13ec8:	movtne	r0, #1
   13ecc:	blne	14544 <print_debug_data@@Base+0xecc>
   13ed0:	movw	r0, #40652	; 0x9ecc
   13ed4:	movt	r0, #1
   13ed8:	bl	14544 <print_debug_data@@Base+0xecc>
   13edc:	mov	r0, r5
   13ee0:	bl	126fc <free@plt>
   13ee4:	sub	sp, fp, #28
   13ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eec:	mov	r0, r4
   13ef0:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   13ef4:	cmp	r0, #0
   13ef8:	beq	13f00 <print_debug_data@@Base+0x888>
   13efc:	bl	18294 <handle_coda_error@@Base>
   13f00:	ldr	r0, [fp, #-120]	; 0xffffff88
   13f04:	mov	r1, #0
   13f08:	str	r1, [fp, #-48]	; 0xffffffd0
   13f0c:	cmp	r0, #1
   13f10:	blt	14088 <print_debug_data@@Base+0xa10>
   13f14:	ldr	r0, [sp, #24]
   13f18:	movw	r6, #42322	; 0xa552
   13f1c:	movw	r7, #49576	; 0xc1a8
   13f20:	movw	r5, #42716	; 0xa6dc
   13f24:	movw	r9, #49600	; 0xc1c0
   13f28:	movw	r8, #49580	; 0xc1ac
   13f2c:	mvn	r4, #0
   13f30:	movt	r6, #1
   13f34:	movt	r7, #2
   13f38:	movt	r5, #1
   13f3c:	movt	r9, #2
   13f40:	movt	r8, #2
   13f44:	add	r0, r0, #1
   13f48:	str	r0, [sp, #20]
   13f4c:	b	13f68 <print_debug_data@@Base+0x8f0>
   13f50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f54:	add	r1, r0, #1
   13f58:	ldr	r0, [fp, #-120]	; 0xffffff88
   13f5c:	str	r1, [fp, #-48]	; 0xffffffd0
   13f60:	cmp	r1, r0
   13f64:	bge	14088 <print_debug_data@@Base+0xa10>
   13f68:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13f6c:	sub	r2, fp, #52	; 0x34
   13f70:	bl	12a80 <coda_type_get_record_field_name@plt>
   13f74:	cmp	r0, #0
   13f78:	beq	13f80 <print_debug_data@@Base+0x908>
   13f7c:	bl	18294 <handle_coda_error@@Base>
   13f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f84:	mov	r0, r6
   13f88:	bl	14494 <print_debug_data@@Base+0xe1c>
   13f8c:	ldr	r0, [r7]
   13f90:	cmp	r0, #0
   13f94:	beq	14000 <print_debug_data@@Base+0x988>
   13f98:	ldr	r0, [sp, #28]
   13f9c:	sub	r1, fp, #88	; 0x58
   13fa0:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   13fa4:	cmp	r0, #0
   13fa8:	beq	13fb0 <print_debug_data@@Base+0x938>
   13fac:	bl	18294 <handle_coda_error@@Base>
   13fb0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13fb4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13fb8:	subs	r2, r4, r0
   13fbc:	sbcs	r2, r4, r1
   13fc0:	bge	14000 <print_debug_data@@Base+0x988>
   13fc4:	lsr	r0, r0, #3
   13fc8:	add	sl, sp, #32
   13fcc:	orr	r0, r0, r1, lsl #29
   13fd0:	lsr	r1, r1, #3
   13fd4:	mov	r2, sl
   13fd8:	bl	12ab0 <coda_str64@plt>
   13fdc:	movw	r0, #40542	; 0x9e5e
   13fe0:	mov	r1, sl
   13fe4:	movt	r0, #1
   13fe8:	bl	14544 <print_debug_data@@Base+0xecc>
   13fec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ff0:	ands	r1, r0, #7
   13ff4:	movwne	r0, #40546	; 0x9e62
   13ff8:	movtne	r0, #1
   13ffc:	blne	14544 <print_debug_data@@Base+0xecc>
   14000:	mov	r0, r5
   14004:	bl	14544 <print_debug_data@@Base+0xecc>
   14008:	ldr	r0, [r9]
   1400c:	add	r0, r0, #1
   14010:	str	r0, [r9]
   14014:	ldr	r0, [r8]
   14018:	cmp	r0, #0
   1401c:	bmi	1403c <print_debug_data@@Base+0x9c4>
   14020:	ldr	r1, [sp, #24]
   14024:	cmp	r0, r1
   14028:	bgt	1403c <print_debug_data@@Base+0x9c4>
   1402c:	movw	r0, #40550	; 0x9e66
   14030:	movt	r0, #1
   14034:	bl	14494 <print_debug_data@@Base+0xe1c>
   14038:	b	14048 <print_debug_data@@Base+0x9d0>
   1403c:	ldr	r0, [sp, #28]
   14040:	ldr	r1, [sp, #20]
   14044:	bl	137c8 <print_debug_data@@Base+0x150>
   14048:	ldr	r0, [r9]
   1404c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14050:	sub	r0, r0, #1
   14054:	str	r0, [r9]
   14058:	ldr	r0, [fp, #-120]	; 0xffffff88
   1405c:	sub	r0, r0, #1
   14060:	cmp	r1, r0
   14064:	bge	13f50 <print_debug_data@@Base+0x8d8>
   14068:	ldr	r0, [sp, #28]
   1406c:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   14070:	cmp	r0, #0
   14074:	beq	13f50 <print_debug_data@@Base+0x8d8>
   14078:	bl	18294 <handle_coda_error@@Base>
   1407c:	b	13f50 <print_debug_data@@Base+0x8d8>
   14080:	mov	r5, #1
   14084:	b	14214 <print_debug_data@@Base+0xb9c>
   14088:	ldr	r0, [sp, #28]
   1408c:	b	14448 <print_debug_data@@Base+0xdd0>
   14090:	sub	r1, fp, #88	; 0x58
   14094:	mov	r0, r4
   14098:	bl	128ac <coda_cursor_read_double@plt>
   1409c:	cmp	r0, #0
   140a0:	beq	140a8 <print_debug_data@@Base+0xa30>
   140a4:	bl	18294 <handle_coda_error@@Base>
   140a8:	vldr	d0, [fp, #-88]	; 0xffffffa8
   140ac:	bl	128b8 <coda_isNaN@plt>
   140b0:	cmp	r0, #0
   140b4:	bne	140c8 <print_debug_data@@Base+0xa50>
   140b8:	vldr	d0, [fp, #-88]	; 0xffffffa8
   140bc:	bl	1275c <coda_isInf@plt>
   140c0:	cmp	r0, #0
   140c4:	beq	14454 <print_debug_data@@Base+0xddc>
   140c8:	vldr	d16, [fp, #-88]	; 0xffffffa8
   140cc:	movw	r0, #40739	; 0x9f23
   140d0:	movt	r0, #1
   140d4:	b	14134 <print_debug_data@@Base+0xabc>
   140d8:	add	r1, sp, #32
   140dc:	sub	r2, fp, #88	; 0x58
   140e0:	mov	r0, r4
   140e4:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   140e8:	cmp	r0, #0
   140ec:	beq	140f4 <print_debug_data@@Base+0xa7c>
   140f0:	bl	18294 <handle_coda_error@@Base>
   140f4:	vldr	d16, [sp, #32]
   140f8:	vldr	d17, [fp, #-88]	; 0xffffffa8
   140fc:	movw	r0, #40774	; 0x9f46
   14100:	movt	r0, #1
   14104:	vmov	r2, r3, d16
   14108:	vstr	d17, [sp]
   1410c:	b	14138 <print_debug_data@@Base+0xac0>
   14110:	add	r1, sp, #32
   14114:	mov	r0, r4
   14118:	bl	128ac <coda_cursor_read_double@plt>
   1411c:	cmp	r0, #0
   14120:	beq	14128 <print_debug_data@@Base+0xab0>
   14124:	bl	18294 <handle_coda_error@@Base>
   14128:	vldr	d16, [sp, #32]
   1412c:	movw	r0, #40740	; 0x9f24
   14130:	movt	r0, #1
   14134:	vmov	r2, r3, d16
   14138:	bl	14544 <print_debug_data@@Base+0xecc>
   1413c:	b	1443c <print_debug_data@@Base+0xdc4>
   14140:	ldr	r0, [sp, #24]
   14144:	ldr	r5, [sp, #28]
   14148:	add	r1, r0, #1
   1414c:	mov	r0, r5
   14150:	bl	137c8 <print_debug_data@@Base+0x150>
   14154:	ldr	r0, [r4]
   14158:	sub	r0, r0, #1
   1415c:	str	r0, [r4]
   14160:	mov	r0, r5
   14164:	b	14448 <print_debug_data@@Base+0xdd0>
   14168:	sub	r2, r1, ip
   1416c:	mov	r1, #0
   14170:	mov	r3, #64	; 0x40
   14174:	mov	r5, r7
   14178:	vld1.32	{d18-d19}, [r5], r3
   1417c:	add	r6, r7, #16
   14180:	add	r0, r7, #32
   14184:	subs	r2, r2, #4
   14188:	add	r1, r1, #16
   1418c:	vld1.32	{d20-d21}, [r6]
   14190:	vmul.i32	q8, q9, q8
   14194:	vld1.32	{d18-d19}, [r0]
   14198:	add	r0, r7, #48	; 0x30
   1419c:	mov	r7, r5
   141a0:	vmul.i32	q8, q10, q8
   141a4:	vld1.32	{d20-d21}, [r0]
   141a8:	vmul.i32	q8, q9, q8
   141ac:	vmul.i32	q8, q10, q8
   141b0:	bne	14178 <print_debug_data@@Base+0xb00>
   141b4:	cmp	ip, #0
   141b8:	beq	141d8 <print_debug_data@@Base+0xb60>
   141bc:	add	r0, sp, #32
   141c0:	add	r1, r0, r1, lsl #2
   141c4:	rsb	r0, ip, #0
   141c8:	vld1.32	{d18-d19}, [r1]!
   141cc:	adds	r0, r0, #1
   141d0:	vmul.i32	q8, q9, q8
   141d4:	bcc	141c8 <print_debug_data@@Base+0xb50>
   141d8:	vext.8	q9, q8, q8, #8
   141dc:	cmp	r4, r8
   141e0:	vmul.i32	q0, q8, q9
   141e4:	vmul.i32	q8, q0, d0[1]
   141e8:	vmov.32	r5, d16[0]
   141ec:	beq	1420c <print_debug_data@@Base+0xb94>
   141f0:	add	r0, sp, #32
   141f4:	sub	r1, r4, r8
   141f8:	add	r0, r0, r8, lsl #2
   141fc:	ldr	r2, [r0], #4
   14200:	subs	r1, r1, #1
   14204:	mul	r5, r2, r5
   14208:	bne	141fc <print_debug_data@@Base+0xb84>
   1420c:	cmp	r5, #1
   14210:	blt	1443c <print_debug_data@@Base+0xdc4>
   14214:	ldr	r0, [sp, #28]
   14218:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   1421c:	cmp	r0, #0
   14220:	beq	14228 <print_debug_data@@Base+0xbb0>
   14224:	bl	18294 <handle_coda_error@@Base>
   14228:	add	r0, sp, #32
   1422c:	movw	r7, #40978	; 0xa012
   14230:	str	r5, [sp, #20]
   14234:	sub	sl, fp, #88	; 0x58
   14238:	mov	r9, #0
   1423c:	sub	r8, r0, #4
   14240:	sub	r0, r5, #1
   14244:	movw	r5, #40547	; 0x9e63
   14248:	movt	r7, #1
   1424c:	sub	r6, sl, #4
   14250:	str	r0, [sp, #16]
   14254:	ldr	r0, [sp, #24]
   14258:	movt	r5, #1
   1425c:	add	r0, r0, #1
   14260:	str	r0, [sp, #12]
   14264:	b	14278 <print_debug_data@@Base+0xc00>
   14268:	ldr	r0, [sp, #20]
   1426c:	add	r9, r9, #1
   14270:	cmp	r9, r0
   14274:	beq	14444 <print_debug_data@@Base+0xdcc>
   14278:	movw	r0, #40990	; 0xa01e
   1427c:	movt	r0, #1
   14280:	bl	14494 <print_debug_data@@Base+0xe1c>
   14284:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14288:	cmp	r0, #1
   1428c:	blt	142d0 <print_debug_data@@Base+0xc58>
   14290:	mov	r4, #0
   14294:	b	142a4 <print_debug_data@@Base+0xc2c>
   14298:	add	r4, r4, #1
   1429c:	cmp	r4, r0
   142a0:	bge	142d0 <print_debug_data@@Base+0xc58>
   142a4:	ldr	r1, [sl, r4, lsl #2]
   142a8:	mov	r0, r5
   142ac:	bl	14544 <print_debug_data@@Base+0xecc>
   142b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b4:	sub	r1, r0, #1
   142b8:	cmp	r4, r1
   142bc:	bge	14298 <print_debug_data@@Base+0xc20>
   142c0:	mov	r0, r7
   142c4:	bl	14544 <print_debug_data@@Base+0xecc>
   142c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142cc:	b	14298 <print_debug_data@@Base+0xc20>
   142d0:	movw	r0, #43994	; 0xabda
   142d4:	movt	r0, #1
   142d8:	bl	14544 <print_debug_data@@Base+0xecc>
   142dc:	movw	r0, #49576	; 0xc1a8
   142e0:	ldr	r4, [sp, #28]
   142e4:	movt	r0, #2
   142e8:	ldr	r0, [r0]
   142ec:	cmp	r0, #0
   142f0:	beq	14364 <print_debug_data@@Base+0xcec>
   142f4:	mov	r0, r4
   142f8:	sub	r1, fp, #96	; 0x60
   142fc:	bl	12a50 <coda_cursor_get_file_bit_offset@plt>
   14300:	cmp	r0, #0
   14304:	beq	1430c <print_debug_data@@Base+0xc94>
   14308:	bl	18294 <handle_coda_error@@Base>
   1430c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14310:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14314:	mvn	r3, #0
   14318:	subs	r2, r3, r0
   1431c:	sbcs	r2, r3, r1
   14320:	bge	14364 <print_debug_data@@Base+0xcec>
   14324:	lsr	r0, r0, #3
   14328:	sub	r4, fp, #120	; 0x78
   1432c:	orr	r0, r0, r1, lsl #29
   14330:	lsr	r1, r1, #3
   14334:	mov	r2, r4
   14338:	bl	12ab0 <coda_str64@plt>
   1433c:	movw	r0, #40542	; 0x9e5e
   14340:	mov	r1, r4
   14344:	movt	r0, #1
   14348:	bl	14544 <print_debug_data@@Base+0xecc>
   1434c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14350:	ands	r1, r0, #7
   14354:	movwne	r0, #40546	; 0x9e62
   14358:	movtne	r0, #1
   1435c:	blne	14544 <print_debug_data@@Base+0xecc>
   14360:	ldr	r4, [sp, #28]
   14364:	movw	r0, #42716	; 0xa6dc
   14368:	movt	r0, #1
   1436c:	bl	14544 <print_debug_data@@Base+0xecc>
   14370:	movw	r0, #49600	; 0xc1c0
   14374:	movt	r0, #2
   14378:	mov	r1, r0
   1437c:	ldr	r0, [r0]
   14380:	add	r0, r0, #1
   14384:	str	r0, [r1]
   14388:	movw	r0, #49580	; 0xc1ac
   1438c:	movt	r0, #2
   14390:	ldr	r0, [r0]
   14394:	cmp	r0, #0
   14398:	bmi	143b8 <print_debug_data@@Base+0xd40>
   1439c:	ldr	r1, [sp, #24]
   143a0:	cmp	r0, r1
   143a4:	bgt	143b8 <print_debug_data@@Base+0xd40>
   143a8:	movw	r0, #40550	; 0x9e66
   143ac:	movt	r0, #1
   143b0:	bl	14494 <print_debug_data@@Base+0xe1c>
   143b4:	b	143c4 <print_debug_data@@Base+0xd4c>
   143b8:	ldr	r1, [sp, #12]
   143bc:	mov	r0, r4
   143c0:	bl	137c8 <print_debug_data@@Base+0x150>
   143c4:	movw	r0, #49600	; 0xc1c0
   143c8:	mov	r3, #0
   143cc:	movt	r0, #2
   143d0:	mov	r1, r0
   143d4:	ldr	r0, [r0]
   143d8:	sub	r0, r0, #1
   143dc:	str	r0, [r1]
   143e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143e4:	cmp	r0, #1
   143e8:	blt	14418 <print_debug_data@@Base+0xda0>
   143ec:	ldr	r1, [r6, r0, lsl #2]
   143f0:	ldr	r2, [r8, r0, lsl #2]
   143f4:	add	r1, r1, #1
   143f8:	cmp	r1, r2
   143fc:	str	r1, [r6, r0, lsl #2]
   14400:	bne	14418 <print_debug_data@@Base+0xda0>
   14404:	sub	r1, r0, #1
   14408:	str	r3, [r6, r0, lsl #2]
   1440c:	cmp	r1, #0
   14410:	mov	r0, r1
   14414:	bgt	143ec <print_debug_data@@Base+0xd74>
   14418:	ldr	r0, [sp, #16]
   1441c:	cmp	r9, r0
   14420:	bge	14268 <print_debug_data@@Base+0xbf0>
   14424:	mov	r0, r4
   14428:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   1442c:	cmp	r0, #0
   14430:	beq	14268 <print_debug_data@@Base+0xbf0>
   14434:	bl	18294 <handle_coda_error@@Base>
   14438:	b	14268 <print_debug_data@@Base+0xbf0>
   1443c:	sub	sp, fp, #28
   14440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14444:	mov	r0, r4
   14448:	bl	12864 <coda_cursor_goto_parent@plt>
   1444c:	sub	sp, fp, #28
   14450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14454:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14458:	movw	r0, #40450	; 0x9e02
   1445c:	add	r1, sp, #32
   14460:	movt	r0, #1
   14464:	bl	126d8 <coda_time_double_to_string@plt>
   14468:	cmp	r0, #0
   1446c:	beq	1447c <print_debug_data@@Base+0xe04>
   14470:	movw	r0, #40747	; 0x9f2b
   14474:	movt	r0, #1
   14478:	b	13d50 <print_debug_data@@Base+0x6d8>
   1447c:	movw	r0, #42458	; 0xa5da
   14480:	add	r1, sp, #32
   14484:	movt	r0, #1
   14488:	bl	14544 <print_debug_data@@Base+0xecc>
   1448c:	sub	sp, fp, #28
   14490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14494:	sub	sp, sp, #12
   14498:	push	{r4, r5, r6, r7, fp, lr}
   1449c:	add	fp, sp, #16
   144a0:	sub	sp, sp, #4
   144a4:	mov	r4, r0
   144a8:	add	r0, fp, #8
   144ac:	stm	r0, {r1, r2, r3}
   144b0:	movw	r0, #49600	; 0xc1c0
   144b4:	movt	r0, #2
   144b8:	ldr	r6, [r0]
   144bc:	cmp	r6, #0
   144c0:	bmi	14524 <print_debug_data@@Base+0xeac>
   144c4:	beq	144f8 <print_debug_data@@Base+0xe80>
   144c8:	movw	r7, #53392	; 0xd090
   144cc:	movw	r5, #40815	; 0x9f6f
   144d0:	movt	r7, #2
   144d4:	movt	r5, #1
   144d8:	ldr	r3, [r7]
   144dc:	mov	r0, r5
   144e0:	mov	r1, #2
   144e4:	mov	r2, #1
   144e8:	bl	127e0 <fwrite@plt>
   144ec:	sub	r6, r6, #1
   144f0:	cmp	r6, #0
   144f4:	bgt	144d8 <print_debug_data@@Base+0xe60>
   144f8:	movw	r0, #53392	; 0xd090
   144fc:	add	r2, fp, #8
   14500:	mov	r1, r4
   14504:	movt	r0, #2
   14508:	str	r2, [sp]
   1450c:	ldr	r0, [r0]
   14510:	bl	129c0 <vfprintf@plt>
   14514:	sub	sp, fp, #16
   14518:	pop	{r4, r5, r6, r7, fp, lr}
   1451c:	add	sp, sp, #12
   14520:	bx	lr
   14524:	movw	r0, #40785	; 0x9f51
   14528:	movw	r1, #40555	; 0x9e6b
   1452c:	movw	r3, #40797	; 0x9f5d
   14530:	mov	r2, #44	; 0x2c
   14534:	movt	r0, #1
   14538:	movt	r1, #1
   1453c:	movt	r3, #1
   14540:	bl	12abc <__assert_fail@plt>
   14544:	sub	sp, sp, #12
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	sub	sp, sp, #4
   14554:	mov	ip, r0
   14558:	add	r0, fp, #8
   1455c:	stm	r0, {r1, r2, r3}
   14560:	movw	r0, #53392	; 0xd090
   14564:	add	r2, fp, #8
   14568:	mov	r1, ip
   1456c:	movt	r0, #2
   14570:	str	r2, [sp]
   14574:	ldr	r0, [r0]
   14578:	bl	129c0 <vfprintf@plt>
   1457c:	mov	sp, fp
   14580:	pop	{fp, lr}
   14584:	add	sp, sp, #12
   14588:	bx	lr
   1458c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14590:	add	fp, sp, #28
   14594:	sub	sp, sp, #4
   14598:	cmp	r1, #1
   1459c:	blt	14694 <print_debug_data@@Base+0x101c>
   145a0:	movw	r8, #40376	; 0x9db8
   145a4:	movw	r9, #40379	; 0x9dbb
   145a8:	movw	sl, #40382	; 0x9dbe
   145ac:	movw	r7, #40385	; 0x9dc1
   145b0:	movw	r6, #40388	; 0x9dc4
   145b4:	mov	r4, r1
   145b8:	mov	r5, r0
   145bc:	movt	r8, #1
   145c0:	movt	r9, #1
   145c4:	movt	sl, #1
   145c8:	movt	r7, #1
   145cc:	movt	r6, #1
   145d0:	b	145ec <print_debug_data@@Base+0xf74>
   145d4:	movw	r0, #40391	; 0x9dc7
   145d8:	movt	r0, #1
   145dc:	bl	14544 <print_debug_data@@Base+0xecc>
   145e0:	add	r5, r5, #1
   145e4:	subs	r4, r4, #1
   145e8:	beq	14694 <print_debug_data@@Base+0x101c>
   145ec:	ldrb	r1, [r5]
   145f0:	sub	r0, r1, #7
   145f4:	cmp	r0, #6
   145f8:	bhi	1462c <print_debug_data@@Base+0xfb4>
   145fc:	add	r1, pc, #0
   14600:	ldr	pc, [r1, r0, lsl #2]
   14604:	andeq	r4, r1, r0, lsr #12
   14608:	andeq	r4, r1, r0, asr r6
   1460c:	andeq	r4, r1, ip, asr r6
   14610:	andeq	r4, r1, r4, ror #12
   14614:	andeq	r4, r1, ip, ror #12
   14618:	andeq	r4, r1, r4, ror r6
   1461c:	andeq	r4, r1, ip, ror r6
   14620:	movw	r0, #40370	; 0x9db2
   14624:	movt	r0, #1
   14628:	b	145dc <print_debug_data@@Base+0xf64>
   1462c:	cmp	r1, #92	; 0x5c
   14630:	beq	145d4 <print_debug_data@@Base+0xf5c>
   14634:	sub	r0, r1, #32
   14638:	uxtb	r0, r0
   1463c:	cmp	r0, #94	; 0x5e
   14640:	bhi	14684 <print_debug_data@@Base+0x100c>
   14644:	movw	r0, #40818	; 0x9f72
   14648:	movt	r0, #1
   1464c:	b	1468c <print_debug_data@@Base+0x1014>
   14650:	movw	r0, #40373	; 0x9db5
   14654:	movt	r0, #1
   14658:	b	145dc <print_debug_data@@Base+0xf64>
   1465c:	mov	r0, r8
   14660:	b	145dc <print_debug_data@@Base+0xf64>
   14664:	mov	r0, r9
   14668:	b	145dc <print_debug_data@@Base+0xf64>
   1466c:	mov	r0, sl
   14670:	b	145dc <print_debug_data@@Base+0xf64>
   14674:	mov	r0, r7
   14678:	b	145dc <print_debug_data@@Base+0xf64>
   1467c:	mov	r0, r6
   14680:	b	145dc <print_debug_data@@Base+0xf64>
   14684:	movw	r0, #40394	; 0x9dca
   14688:	movt	r0, #1
   1468c:	bl	14544 <print_debug_data@@Base+0xecc>
   14690:	b	145e0 <print_debug_data@@Base+0xf68>
   14694:	sub	sp, fp, #28
   14698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001469c <dim_info_init@@Base>:
   1469c:	movw	r0, #53424	; 0xd0b0
   146a0:	mvn	r1, #0
   146a4:	movt	r0, #2
   146a8:	str	r1, [r0, #104]	; 0x68
   146ac:	mov	r1, #0
   146b0:	str	r1, [r0, #68]	; 0x44
   146b4:	str	r1, [r0]
   146b8:	bx	lr

000146bc <dim_info_done@@Base>:
   146bc:	bx	lr

000146c0 <print_all_distinct_dims@@Base>:
   146c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146c4:	add	fp, sp, #28
   146c8:	sub	sp, sp, #4
   146cc:	movw	r9, #53424	; 0xd0b0
   146d0:	mov	sl, r0
   146d4:	movt	r9, #2
   146d8:	ldr	r0, [r9]
   146dc:	cmp	r0, sl
   146e0:	ble	14880 <print_all_distinct_dims@@Base+0x1c0>
   146e4:	add	r8, r9, sl, lsl #2
   146e8:	ldr	r0, [r8, #72]	; 0x48
   146ec:	cmp	r0, #0
   146f0:	beq	14878 <print_all_distinct_dims@@Base+0x1b8>
   146f4:	mov	r7, r8
   146f8:	mov	r5, #4
   146fc:	ldr	r0, [r7, #4]!
   14700:	add	r6, r5, r0, lsl #2
   14704:	mov	r0, r6
   14708:	bl	12834 <malloc@plt>
   1470c:	mov	r4, r0
   14710:	cmp	r0, #0
   14714:	bne	14748 <print_all_distinct_dims@@Base+0x88>
   14718:	movw	r1, #40233	; 0x9d29
   1471c:	movw	r3, #40848	; 0x9f90
   14720:	mov	r0, #61	; 0x3d
   14724:	mov	r2, r6
   14728:	movt	r1, #1
   1472c:	movt	r3, #1
   14730:	str	r0, [sp]
   14734:	mvn	r0, #0
   14738:	bl	126b4 <coda_set_error@plt>
   1473c:	bl	18294 <handle_coda_error@@Base>
   14740:	ldr	r0, [r7]
   14744:	add	r6, r5, r0, lsl #2
   14748:	mov	r0, r4
   1474c:	mov	r1, #0
   14750:	mov	r2, r6
   14754:	mov	r5, #0
   14758:	bl	12918 <memset@plt>
   1475c:	ldr	r0, [r8, #140]	; 0x8c
   14760:	add	r0, r9, r0, lsl #3
   14764:	ldrd	r0, [r0, #232]	; 0xe8
   14768:	subs	r2, r0, #1
   1476c:	sbcs	r2, r1, #0
   14770:	blt	1479c <print_all_distinct_dims@@Base+0xdc>
   14774:	ldr	r2, [r8, #108]	; 0x6c
   14778:	ldr	r3, [r2, r5, lsl #2]
   1477c:	add	r5, r5, #1
   14780:	cmp	r3, #0
   14784:	ldrpl	r6, [r4, r3, lsl #2]
   14788:	addpl	r6, r6, #1
   1478c:	strpl	r6, [r4, r3, lsl #2]
   14790:	subs	r3, r5, r0
   14794:	rscs	r3, r1, #0
   14798:	blt	14778 <print_all_distinct_dims@@Base+0xb8>
   1479c:	movw	r0, #40964	; 0xa004
   147a0:	add	r1, sl, #1
   147a4:	movt	r0, #1
   147a8:	bl	12690 <printf@plt>
   147ac:	ldr	r5, [r8, #36]!	; 0x24
   147b0:	ldr	r1, [r7]
   147b4:	cmp	r5, r1
   147b8:	bge	147f4 <print_all_distinct_dims@@Base+0x134>
   147bc:	movw	r6, #40976	; 0xa010
   147c0:	movt	r6, #1
   147c4:	b	147d4 <print_all_distinct_dims@@Base+0x114>
   147c8:	add	r5, r5, #1
   147cc:	cmp	r5, r1
   147d0:	bge	147f4 <print_all_distinct_dims@@Base+0x134>
   147d4:	ldr	r0, [r4, r5, lsl #2]
   147d8:	cmp	r0, #1
   147dc:	blt	147c8 <print_all_distinct_dims@@Base+0x108>
   147e0:	mov	r0, r6
   147e4:	mov	r1, r5
   147e8:	bl	12690 <printf@plt>
   147ec:	ldr	r1, [r7]
   147f0:	b	147c8 <print_all_distinct_dims@@Base+0x108>
   147f4:	movw	r0, #40980	; 0xa014
   147f8:	movt	r0, #1
   147fc:	bl	12690 <printf@plt>
   14800:	movw	r0, #40984	; 0xa018
   14804:	movt	r0, #1
   14808:	bl	12690 <printf@plt>
   1480c:	ldr	r0, [r7]
   14810:	ldr	r6, [r8]
   14814:	cmp	r6, r0
   14818:	bge	14850 <print_all_distinct_dims@@Base+0x190>
   1481c:	movw	r5, #40976	; 0xa010
   14820:	movt	r5, #1
   14824:	b	14834 <print_all_distinct_dims@@Base+0x174>
   14828:	add	r6, r6, #1
   1482c:	cmp	r6, r0
   14830:	bge	14850 <print_all_distinct_dims@@Base+0x190>
   14834:	ldr	r1, [r4, r6, lsl #2]
   14838:	cmp	r1, #1
   1483c:	blt	14828 <print_all_distinct_dims@@Base+0x168>
   14840:	mov	r0, r5
   14844:	bl	12690 <printf@plt>
   14848:	ldr	r0, [r7]
   1484c:	b	14828 <print_all_distinct_dims@@Base+0x168>
   14850:	ldr	r1, [r4, r0, lsl #2]
   14854:	movw	r0, #40980	; 0xa014
   14858:	movt	r0, #1
   1485c:	bl	12690 <printf@plt>
   14860:	mov	r0, #10
   14864:	bl	12924 <putchar@plt>
   14868:	mov	r0, r4
   1486c:	sub	sp, fp, #28
   14870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14874:	b	126fc <free@plt>
   14878:	sub	sp, fp, #28
   1487c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14880:	movw	r0, #40821	; 0x9f75
   14884:	movw	r1, #40848	; 0x9f90
   14888:	movw	r3, #40930	; 0x9fe2
   1488c:	mov	r2, #50	; 0x32
   14890:	movt	r0, #1
   14894:	movt	r1, #1
   14898:	movt	r3, #1
   1489c:	bl	12abc <__assert_fail@plt>

000148a0 <dim_enter_array@@Base>:
   148a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148a4:	add	fp, sp, #28
   148a8:	sub	sp, sp, #76	; 0x4c
   148ac:	movw	r4, #49640	; 0xc1e8
   148b0:	sub	r1, fp, #32
   148b4:	movt	r4, #2
   148b8:	ldr	r0, [r4, #136]	; 0x88
   148bc:	ldr	r5, [r4, #3360]	; 0xd20
   148c0:	add	r0, r4, r0, lsl #2
   148c4:	ldr	r0, [r0, #8]
   148c8:	bl	12ac8 <coda_type_get_class@plt>
   148cc:	cmp	r0, #0
   148d0:	beq	148d8 <dim_enter_array@@Base+0x38>
   148d4:	bl	18294 <handle_coda_error@@Base>
   148d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148dc:	sub	r0, r0, #1
   148e0:	cmp	r0, #5
   148e4:	bhi	1515c <dim_enter_array@@Base+0x8bc>
   148e8:	add	r1, r5, r5, lsl #2
   148ec:	add	r5, r4, r1, lsl #4
   148f0:	add	r1, pc, #0
   148f4:	ldr	pc, [r1, r0, lsl #2]
   148f8:	andeq	r4, r1, r0, lsl r9
   148fc:	andeq	r5, r1, ip, asr r1
   14900:	andeq	r5, r1, ip, asr r1
   14904:	muleq	r1, r4, r9
   14908:	andeq	r4, r1, r4, asr #19
   1490c:	andeq	r4, r1, r8, asr r9
   14910:	ldr	r0, [r4, #136]	; 0x88
   14914:	add	r1, sp, #36	; 0x24
   14918:	add	r2, sp, #40	; 0x28
   1491c:	add	r0, r4, r0, lsl #2
   14920:	ldr	r0, [r0, #8]
   14924:	bl	12a08 <coda_type_get_array_dim@plt>
   14928:	cmp	r0, #0
   1492c:	beq	14934 <dim_enter_array@@Base+0x94>
   14930:	bl	18294 <handle_coda_error@@Base>
   14934:	ldr	sl, [sp, #36]	; 0x24
   14938:	cmp	sl, #1
   1493c:	str	sl, [r5, #804]	; 0x324
   14940:	blt	14a18 <dim_enter_array@@Base+0x178>
   14944:	add	r0, r5, #808	; 0x328
   14948:	lsl	r2, sl, #2
   1494c:	add	r1, sp, #40	; 0x28
   14950:	bl	12750 <memcpy@plt>
   14954:	b	14a18 <dim_enter_array@@Base+0x178>
   14958:	ldr	r0, [r4, #136]	; 0x88
   1495c:	add	r1, sp, #40	; 0x28
   14960:	add	r0, r4, r0, lsl #2
   14964:	ldr	r0, [r0, #8]
   14968:	bl	1293c <coda_type_get_special_type@plt>
   1496c:	cmp	r0, #0
   14970:	beq	14978 <dim_enter_array@@Base+0xd8>
   14974:	bl	18294 <handle_coda_error@@Base>
   14978:	ldr	r0, [sp, #40]	; 0x28
   1497c:	cmp	r0, #3
   14980:	bne	15194 <dim_enter_array@@Base+0x8f4>
   14984:	mov	sl, #1
   14988:	mov	r0, #2
   1498c:	str	sl, [r5, #804]	; 0x324
   14990:	b	14a14 <dim_enter_array@@Base+0x174>
   14994:	ldr	r0, [r4, #136]	; 0x88
   14998:	add	r1, sp, #40	; 0x28
   1499c:	add	r0, r4, r0, lsl #2
   149a0:	ldr	r0, [r0, #8]
   149a4:	bl	12978 <coda_type_get_string_length@plt>
   149a8:	cmp	r0, #0
   149ac:	beq	149b4 <dim_enter_array@@Base+0x114>
   149b0:	bl	18294 <handle_coda_error@@Base>
   149b4:	ldr	r0, [sp, #40]	; 0x28
   149b8:	mov	sl, #1
   149bc:	str	sl, [r5, #804]	; 0x324
   149c0:	b	14a14 <dim_enter_array@@Base+0x174>
   149c4:	ldr	r0, [r4, #136]	; 0x88
   149c8:	add	r1, sp, #40	; 0x28
   149cc:	add	r0, r4, r0, lsl #2
   149d0:	ldr	r0, [r0, #8]
   149d4:	bl	12768 <coda_type_get_bit_size@plt>
   149d8:	cmp	r0, #0
   149dc:	beq	149e4 <dim_enter_array@@Base+0x144>
   149e0:	bl	18294 <handle_coda_error@@Base>
   149e4:	ldr	r0, [sp, #44]	; 0x2c
   149e8:	mov	sl, #1
   149ec:	str	sl, [r5, #804]	; 0x324
   149f0:	cmp	r0, #0
   149f4:	bmi	14a10 <dim_enter_array@@Base+0x170>
   149f8:	ldr	r1, [sp, #40]	; 0x28
   149fc:	lsr	r2, r1, #3
   14a00:	tst	r1, #7
   14a04:	orr	r0, r2, r0, lsl #29
   14a08:	addne	r0, r0, #1
   14a0c:	b	14a14 <dim_enter_array@@Base+0x174>
   14a10:	mvn	r0, #0
   14a14:	str	r0, [r5, #808]	; 0x328
   14a18:	movw	r1, #49636	; 0xc1e4
   14a1c:	add	r0, r5, #800	; 0x320
   14a20:	movt	r1, #2
   14a24:	ldr	r1, [r1]
   14a28:	cmp	r1, #0
   14a2c:	beq	14aa8 <dim_enter_array@@Base+0x208>
   14a30:	movw	r8, #53424	; 0xd0b0
   14a34:	str	r5, [sp, #16]
   14a38:	movt	r8, #2
   14a3c:	ldr	r1, [r8]
   14a40:	add	r3, sl, r1
   14a44:	str	r1, [r0]
   14a48:	cmp	r3, #9
   14a4c:	bge	15174 <dim_enter_array@@Base+0x8d4>
   14a50:	mov	r0, r1
   14a54:	cmp	r1, #0
   14a58:	str	r3, [r8]
   14a5c:	str	r1, [sp, #20]
   14a60:	ble	14ac4 <dim_enter_array@@Base+0x224>
   14a64:	add	r0, r8, r0, lsl #3
   14a68:	ldr	r2, [r0, #236]	; 0xec
   14a6c:	ldr	r1, [r0, #232]	; 0xe8
   14a70:	str	r2, [sp, #28]
   14a74:	ldr	r2, [r0, #296]	; 0x128
   14a78:	str	r1, [sp, #32]
   14a7c:	ldr	r1, [r0, #300]	; 0x12c
   14a80:	rsbs	r0, r2, #0
   14a84:	mov	r0, r1
   14a88:	str	r2, [sp, #8]
   14a8c:	str	r1, [sp, #12]
   14a90:	rscs	r0, r1, #0
   14a94:	bge	14c74 <dim_enter_array@@Base+0x3d4>
   14a98:	cmp	sl, #1
   14a9c:	blt	14d40 <dim_enter_array@@Base+0x4a0>
   14aa0:	ldr	r0, [sp, #20]
   14aa4:	b	14aec <dim_enter_array@@Base+0x24c>
   14aa8:	mvn	r1, #0
   14aac:	str	r1, [r0]
   14ab0:	mov	r0, #0
   14ab4:	str	r0, [r5, #840]	; 0x348
   14ab8:	str	r0, [r5, #844]	; 0x34c
   14abc:	sub	sp, fp, #28
   14ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ac4:	mov	r1, #0
   14ac8:	cmp	sl, #0
   14acc:	str	r1, [sp, #12]
   14ad0:	mov	r1, #1
   14ad4:	str	r1, [sp, #8]
   14ad8:	mov	r1, #1
   14adc:	str	r1, [sp, #32]
   14ae0:	mov	r1, #0
   14ae4:	str	r1, [sp, #28]
   14ae8:	ble	15134 <dim_enter_array@@Base+0x894>
   14aec:	ldr	r1, [sp, #16]
   14af0:	add	r7, r8, r0, lsl #2
   14af4:	mov	r0, #0
   14af8:	add	r2, r1, #804	; 0x324
   14afc:	add	r9, r1, #808	; 0x328
   14b00:	mov	r1, #0
   14b04:	str	r2, [sp, #24]
   14b08:	mov	r2, #0
   14b0c:	ldr	r3, [r9, r2, lsl #2]
   14b10:	add	r6, r7, r2, lsl #2
   14b14:	add	r2, r2, #1
   14b18:	str	r0, [r6, #72]	; 0x48
   14b1c:	cmn	r3, #1
   14b20:	str	r3, [r6, #4]
   14b24:	movweq	r1, #1
   14b28:	cmp	sl, r2
   14b2c:	bne	14b0c <dim_enter_array@@Base+0x26c>
   14b30:	cmp	r1, #0
   14b34:	beq	14d40 <dim_enter_array@@Base+0x4a0>
   14b38:	ldr	r0, [sp, #32]
   14b3c:	mov	sl, #0
   14b40:	mov	r6, #0
   14b44:	lsl	r4, r0, #2
   14b48:	b	14b68 <dim_enter_array@@Base+0x2c8>
   14b4c:	str	sl, [r5, #140]	; 0x8c
   14b50:	str	sl, [r5, #108]	; 0x6c
   14b54:	ldr	r0, [sp, #24]
   14b58:	add	r6, r6, #1
   14b5c:	ldr	r0, [r0]
   14b60:	cmp	r6, r0
   14b64:	bge	14be4 <dim_enter_array@@Base+0x344>
   14b68:	ldr	r0, [r9, r6, lsl #2]
   14b6c:	add	r5, r7, r6, lsl #2
   14b70:	cmn	r0, #1
   14b74:	bne	14b4c <dim_enter_array@@Base+0x2ac>
   14b78:	ldr	r0, [sp, #20]
   14b7c:	str	r0, [r5, #140]	; 0x8c
   14b80:	mov	r0, r4
   14b84:	bl	12834 <malloc@plt>
   14b88:	cmp	r0, #0
   14b8c:	str	r0, [r5, #108]	; 0x6c
   14b90:	bne	14bbc <dim_enter_array@@Base+0x31c>
   14b94:	movw	r1, #40233	; 0x9d29
   14b98:	movw	r3, #40848	; 0x9f90
   14b9c:	mov	r0, #456	; 0x1c8
   14ba0:	mov	r2, r4
   14ba4:	movt	r1, #1
   14ba8:	movt	r3, #1
   14bac:	str	r0, [sp]
   14bb0:	mvn	r0, #0
   14bb4:	bl	126b4 <coda_set_error@plt>
   14bb8:	bl	18294 <handle_coda_error@@Base>
   14bbc:	ldr	r0, [sp, #32]
   14bc0:	subs	r0, r0, #1
   14bc4:	ldr	r0, [sp, #28]
   14bc8:	sbcs	r0, r0, #0
   14bcc:	blt	14b54 <dim_enter_array@@Base+0x2b4>
   14bd0:	ldr	r0, [r5, #108]	; 0x6c
   14bd4:	mov	r1, #255	; 0xff
   14bd8:	mov	r2, r4
   14bdc:	bl	12918 <memset@plt>
   14be0:	b	14b54 <dim_enter_array@@Base+0x2b4>
   14be4:	ldr	r0, [sp, #16]
   14be8:	mov	r1, #0
   14bec:	mov	r2, #0
   14bf0:	str	r1, [r0, #844]	; 0x34c
   14bf4:	mov	r0, #0
   14bf8:	mov	r1, #0
   14bfc:	bl	151a8 <dim_enter_array@@Base+0x908>
   14c00:	ldr	r0, [sp, #24]
   14c04:	ldr	sl, [r0]
   14c08:	cmp	sl, #1
   14c0c:	blt	14d40 <dim_enter_array@@Base+0x4a0>
   14c10:	mov	r6, #0
   14c14:	mov	r4, #0
   14c18:	b	14c48 <dim_enter_array@@Base+0x3a8>
   14c1c:	mov	sl, #0
   14c20:	str	sl, [r5, #72]	; 0x48
   14c24:	ldr	r0, [r5, #108]	; 0x6c
   14c28:	bl	126fc <free@plt>
   14c2c:	ldr	r0, [sp, #24]
   14c30:	str	sl, [r5, #140]	; 0x8c
   14c34:	str	sl, [r5, #108]	; 0x6c
   14c38:	ldr	sl, [r0]
   14c3c:	add	r6, r6, #1
   14c40:	cmp	r6, sl
   14c44:	bge	14d44 <dim_enter_array@@Base+0x4a4>
   14c48:	ldr	r0, [r9, r6, lsl #2]
   14c4c:	cmn	r0, #1
   14c50:	bne	14c3c <dim_enter_array@@Base+0x39c>
   14c54:	add	r5, r7, r6, lsl #2
   14c58:	ldr	r0, [r5, #4]
   14c5c:	ldr	r1, [r5, #36]	; 0x24
   14c60:	cmp	r0, r1
   14c64:	beq	14c1c <dim_enter_array@@Base+0x37c>
   14c68:	mov	r4, #1
   14c6c:	str	r4, [r5, #72]	; 0x48
   14c70:	b	14c3c <dim_enter_array@@Base+0x39c>
   14c74:	cmp	sl, #1
   14c78:	blt	14d40 <dim_enter_array@@Base+0x4a0>
   14c7c:	mov	r0, #0
   14c80:	cmp	sl, #3
   14c84:	bls	14d18 <dim_enter_array@@Base+0x478>
   14c88:	bic	r0, sl, #3
   14c8c:	mov	r2, #1
   14c90:	subs	r1, r0, #4
   14c94:	add	r2, r2, r1, lsr #2
   14c98:	and	r1, r2, #1
   14c9c:	beq	1514c <dim_enter_array@@Base+0x8ac>
   14ca0:	sub	r3, r2, r1
   14ca4:	ldr	r2, [sp, #20]
   14ca8:	vmov.i32	q8, #0	; 0x00000000
   14cac:	mov	r5, #32
   14cb0:	add	r2, r8, r2, lsl #2
   14cb4:	add	r6, r2, #88	; 0x58
   14cb8:	mov	r2, #0
   14cbc:	sub	r4, r6, #16
   14cc0:	subs	r3, r3, #2
   14cc4:	add	r2, r2, #8
   14cc8:	vst1.32	{d16-d17}, [r4]
   14ccc:	sub	r4, r6, #84	; 0x54
   14cd0:	vst1.32	{d16-d17}, [r4]
   14cd4:	sub	r4, r6, #68	; 0x44
   14cd8:	vst1.32	{d16-d17}, [r4]
   14cdc:	vst1.32	{d16-d17}, [r6], r5
   14ce0:	bne	14cbc <dim_enter_array@@Base+0x41c>
   14ce4:	cmp	r1, #0
   14ce8:	beq	14d0c <dim_enter_array@@Base+0x46c>
   14cec:	ldr	r1, [sp, #20]
   14cf0:	vmov.i32	q8, #0	; 0x00000000
   14cf4:	add	r1, r2, r1
   14cf8:	add	r1, r8, r1, lsl #2
   14cfc:	add	r2, r1, #72	; 0x48
   14d00:	add	r1, r1, #4
   14d04:	vst1.32	{d16-d17}, [r2]
   14d08:	vst1.32	{d16-d17}, [r1]
   14d0c:	mov	r4, #0
   14d10:	cmp	sl, r0
   14d14:	beq	14d44 <dim_enter_array@@Base+0x4a4>
   14d18:	ldr	r1, [sp, #20]
   14d1c:	mov	r4, #0
   14d20:	add	r1, r8, r1, lsl #2
   14d24:	add	r2, r1, r0, lsl #2
   14d28:	add	r0, r0, #1
   14d2c:	cmp	sl, r0
   14d30:	str	r4, [r2, #72]	; 0x48
   14d34:	str	r4, [r2, #4]
   14d38:	bne	14d24 <dim_enter_array@@Base+0x484>
   14d3c:	b	14d44 <dim_enter_array@@Base+0x4a4>
   14d40:	mov	r4, #0
   14d44:	ldr	r3, [r8]
   14d48:	mvn	r0, #0
   14d4c:	cmp	r3, #1
   14d50:	str	r0, [r8, #104]	; 0x68
   14d54:	mov	r0, #0
   14d58:	str	r0, [r8, #68]	; 0x44
   14d5c:	blt	14d84 <dim_enter_array@@Base+0x4e4>
   14d60:	mov	r1, #1
   14d64:	add	r2, r8, r0, lsl #2
   14d68:	ldr	r2, [r2, #72]	; 0x48
   14d6c:	cmp	r2, #0
   14d70:	strne	r0, [r8, #104]	; 0x68
   14d74:	add	r0, r0, #1
   14d78:	strne	r1, [r8, #68]	; 0x44
   14d7c:	cmp	r0, r3
   14d80:	blt	14d64 <dim_enter_array@@Base+0x4c4>
   14d84:	ldr	r1, [sp, #16]
   14d88:	mov	r0, #1
   14d8c:	cmp	sl, #1
   14d90:	str	r3, [sp, #24]
   14d94:	str	r0, [r1, #840]!	; 0x348
   14d98:	str	r1, [sp, #16]
   14d9c:	blt	14e30 <dim_enter_array@@Base+0x590>
   14da0:	ldr	r2, [sp, #20]
   14da4:	mov	r3, #0
   14da8:	str	r4, [sp, #4]
   14dac:	add	r1, r8, r2, lsl #2
   14db0:	add	r2, r8, r2, lsl #3
   14db4:	add	ip, r2, #240	; 0xf0
   14db8:	add	lr, r1, #4
   14dbc:	mov	r2, ip
   14dc0:	b	14df0 <dim_enter_array@@Base+0x550>
   14dc4:	ldr	r4, [r2, #-8]
   14dc8:	ldr	r7, [r2, #-4]
   14dcc:	asr	r9, r5, #31
   14dd0:	umull	r6, r1, r4, r5
   14dd4:	mla	r1, r4, r9, r1
   14dd8:	mla	r7, r7, r5, r1
   14ddc:	strd	r6, [r2]
   14de0:	add	r3, r3, #1
   14de4:	add	r2, r2, #8
   14de8:	cmp	r3, sl
   14dec:	bge	14e24 <dim_enter_array@@Base+0x584>
   14df0:	ldr	r5, [lr, r3, lsl #2]
   14df4:	cmp	r3, #0
   14df8:	mul	r0, r0, r5
   14dfc:	bne	14dc4 <dim_enter_array@@Base+0x524>
   14e00:	ldr	r5, [lr]
   14e04:	ldr	r1, [sp, #32]
   14e08:	umull	r4, r6, r1, r5
   14e0c:	asr	r7, r5, #31
   14e10:	mla	r7, r1, r7, r6
   14e14:	ldr	r1, [sp, #28]
   14e18:	mla	r5, r1, r5, r7
   14e1c:	strd	r4, [ip]
   14e20:	b	14de0 <dim_enter_array@@Base+0x540>
   14e24:	ldr	r1, [sp, #16]
   14e28:	ldr	r4, [sp, #4]
   14e2c:	str	r0, [r1]
   14e30:	cmp	r4, #0
   14e34:	beq	14f14 <dim_enter_array@@Base+0x674>
   14e38:	cmp	sl, #1
   14e3c:	blt	14e58 <dim_enter_array@@Base+0x5b8>
   14e40:	ldr	r0, [sp, #20]
   14e44:	lsl	r2, sl, #3
   14e48:	mov	r1, #0
   14e4c:	add	r0, r8, r0, lsl #3
   14e50:	add	r0, r0, #304	; 0x130
   14e54:	bl	12918 <memset@plt>
   14e58:	ldr	r0, [sp, #32]
   14e5c:	subs	r0, r0, #1
   14e60:	ldr	r0, [sp, #28]
   14e64:	sbcs	r0, r0, #0
   14e68:	blt	15000 <dim_enter_array@@Base+0x760>
   14e6c:	ldr	r1, [sp, #20]
   14e70:	movw	r0, #65232	; 0xfed0
   14e74:	mov	r2, #0
   14e78:	movt	r0, #65535	; 0xffff
   14e7c:	sub	ip, r0, r1, lsl #3
   14e80:	lsl	lr, r1, #2
   14e84:	cmp	sl, #1
   14e88:	bge	14eac <dim_enter_array@@Base+0x60c>
   14e8c:	ldr	r0, [sp, #32]
   14e90:	add	r2, r2, #1
   14e94:	subs	r0, r2, r0
   14e98:	ldr	r0, [sp, #28]
   14e9c:	rscs	r0, r0, #0
   14ea0:	bge	15000 <dim_enter_array@@Base+0x760>
   14ea4:	cmp	sl, #1
   14ea8:	blt	14e8c <dim_enter_array@@Base+0x5ec>
   14eac:	mov	r3, #1
   14eb0:	mov	r0, ip
   14eb4:	mov	r1, lr
   14eb8:	mov	r4, sl
   14ebc:	b	14ef8 <dim_enter_array@@Base+0x658>
   14ec0:	add	r6, r6, #4
   14ec4:	ldr	r6, [r6]
   14ec8:	mov	r7, r8
   14ecc:	add	r1, r1, #4
   14ed0:	ldr	r5, [r7, -r0]!
   14ed4:	sub	r0, r0, #8
   14ed8:	mul	r3, r6, r3
   14edc:	adds	r5, r5, r3
   14ee0:	str	r5, [r7]
   14ee4:	ldr	r5, [r7, #4]
   14ee8:	adc	r5, r5, r3, asr #31
   14eec:	subs	r4, r4, #1
   14ef0:	str	r5, [r7, #4]
   14ef4:	beq	14e8c <dim_enter_array@@Base+0x5ec>
   14ef8:	add	r6, r8, r1
   14efc:	ldr	r7, [r6, #72]	; 0x48
   14f00:	cmp	r7, #0
   14f04:	beq	14ec0 <dim_enter_array@@Base+0x620>
   14f08:	ldr	r7, [r6, #108]	; 0x6c
   14f0c:	add	r6, r7, r2, lsl #2
   14f10:	b	14ec4 <dim_enter_array@@Base+0x624>
   14f14:	ldr	r0, [sp, #20]
   14f18:	ldr	r2, [sp, #8]
   14f1c:	cmp	sl, #2
   14f20:	add	lr, r8, r0, lsl #2
   14f24:	add	r5, r8, r0, lsl #3
   14f28:	ldr	r0, [lr, #4]
   14f2c:	umull	r1, r3, r2, r0
   14f30:	asr	r7, r0, #31
   14f34:	mla	r3, r2, r7, r3
   14f38:	ldr	r2, [sp, #12]
   14f3c:	str	r1, [r5, #304]	; 0x130
   14f40:	mla	r0, r2, r0, r3
   14f44:	str	r0, [r5, #308]	; 0x134
   14f48:	blt	15000 <dim_enter_array@@Base+0x760>
   14f4c:	ldr	r0, [r5, #304]	; 0x130
   14f50:	ldr	r1, [r5, #308]	; 0x134
   14f54:	sub	r4, sl, #1
   14f58:	mov	r6, #1
   14f5c:	cmp	sl, #2
   14f60:	and	r2, r4, #1
   14f64:	beq	14fcc <dim_enter_array@@Base+0x72c>
   14f68:	sub	r9, r4, r2
   14f6c:	add	r4, r5, #320	; 0x140
   14f70:	mov	r5, #0
   14f74:	str	r2, [sp, #32]
   14f78:	add	r7, lr, r5, lsl #2
   14f7c:	add	r5, r5, #2
   14f80:	cmp	r9, r5
   14f84:	ldr	r3, [r7, #8]
   14f88:	umull	r2, r6, r0, r3
   14f8c:	asr	ip, r3, #31
   14f90:	mla	r0, r0, ip, r6
   14f94:	mla	r1, r1, r3, r0
   14f98:	str	r2, [r4, #-8]
   14f9c:	str	r1, [r4, #-4]
   14fa0:	ldr	r3, [r7, #12]
   14fa4:	umull	r0, r7, r2, r3
   14fa8:	asr	r6, r3, #31
   14fac:	mla	r2, r2, r6, r7
   14fb0:	mla	r1, r1, r3, r2
   14fb4:	str	r0, [r4]
   14fb8:	str	r1, [r4, #4]
   14fbc:	add	r4, r4, #16
   14fc0:	bne	14f78 <dim_enter_array@@Base+0x6d8>
   14fc4:	ldr	r2, [sp, #32]
   14fc8:	add	r6, r5, #1
   14fcc:	cmp	r2, #0
   14fd0:	beq	15000 <dim_enter_array@@Base+0x760>
   14fd4:	ldr	r2, [sp, #20]
   14fd8:	add	r2, r6, r2
   14fdc:	add	r3, r8, r2, lsl #3
   14fe0:	add	r2, r8, r2, lsl #2
   14fe4:	ldr	r2, [r2, #4]
   14fe8:	umull	r7, r6, r0, r2
   14fec:	asr	r5, r2, #31
   14ff0:	mla	r0, r0, r5, r6
   14ff4:	mla	r0, r1, r2, r0
   14ff8:	str	r7, [r3, #304]	; 0x130
   14ffc:	str	r0, [r3, #308]	; 0x134
   15000:	ldr	r0, [sp, #20]
   15004:	add	r0, r0, sl
   15008:	add	r1, r8, r0, lsl #3
   1500c:	ldr	r0, [r1, #296]	; 0x128
   15010:	ldr	r2, [r1, #300]	; 0x12c
   15014:	subs	r0, r0, #1
   15018:	sbcs	r0, r2, #0
   1501c:	blt	1512c <dim_enter_array@@Base+0x88c>
   15020:	ldr	r0, [sp, #24]
   15024:	sub	r0, r0, #1
   15028:	add	r2, r8, r0, lsl #3
   1502c:	add	r0, r8, r0, lsl #2
   15030:	ldr	r0, [r0, #4]
   15034:	asr	r3, r0, #31
   15038:	str	r0, [r2, #176]	; 0xb0
   1503c:	subs	r0, sl, #2
   15040:	str	r3, [r2, #180]	; 0xb4
   15044:	bmi	1508c <dim_enter_array@@Base+0x7ec>
   15048:	ldr	r0, [sp, #20]
   1504c:	add	r1, r1, #160	; 0xa0
   15050:	add	r0, r8, r0, lsl #2
   15054:	sub	r0, r0, #4
   15058:	ldr	r2, [r0, sl, lsl #2]
   1505c:	ldrd	r4, [r1, #8]
   15060:	umull	r6, r3, r4, r2
   15064:	asr	r7, r2, #31
   15068:	mla	r3, r4, r7, r3
   1506c:	mla	r7, r5, r2, r3
   15070:	sub	r3, sl, #2
   15074:	sub	r2, sl, #1
   15078:	cmp	r3, #0
   1507c:	mov	sl, r2
   15080:	strd	r6, [r1]
   15084:	sub	r1, r1, #8
   15088:	bgt	15058 <dim_enter_array@@Base+0x7b8>
   1508c:	ldr	r2, [sp, #20]
   15090:	cmp	r2, #1
   15094:	blt	1512c <dim_enter_array@@Base+0x88c>
   15098:	add	r0, r8, r2, lsl #3
   1509c:	tst	r2, #1
   150a0:	mov	r1, r2
   150a4:	add	ip, r0, #176	; 0xb0
   150a8:	mov	r0, r2
   150ac:	beq	150d8 <dim_enter_array@@Base+0x838>
   150b0:	sub	r1, r0, #1
   150b4:	ldrd	r6, [ip]
   150b8:	add	r2, r8, r1, lsl #3
   150bc:	ldr	r4, [r2, #176]	; 0xb0
   150c0:	ldr	r9, [r2, #180]	; 0xb4
   150c4:	umull	r3, r5, r4, r6
   150c8:	mla	r7, r4, r7, r5
   150cc:	mla	r5, r9, r6, r7
   150d0:	str	r3, [r2, #176]	; 0xb0
   150d4:	str	r5, [r2, #180]	; 0xb4
   150d8:	cmp	r0, #1
   150dc:	beq	1512c <dim_enter_array@@Base+0x88c>
   150e0:	add	r2, r8, r1, lsl #3
   150e4:	add	r2, r2, #160	; 0xa0
   150e8:	ldrd	r4, [ip]
   150ec:	ldr	r6, [r2, #8]
   150f0:	ldr	r0, [r2, #12]
   150f4:	ldm	r2, {r3, lr}
   150f8:	sub	r1, r1, #2
   150fc:	cmp	r1, #0
   15100:	umull	r8, r7, r6, r4
   15104:	mla	r5, r6, r5, r7
   15108:	mla	r9, r0, r4, r5
   1510c:	strd	r8, [r2, #8]
   15110:	ldm	ip, {r0, r5}
   15114:	umull	r4, r6, r3, r0
   15118:	mla	r3, r3, r5, r6
   1511c:	mla	r5, lr, r0, r3
   15120:	strd	r4, [r2]
   15124:	sub	r2, r2, #16
   15128:	bgt	150e8 <dim_enter_array@@Base+0x848>
   1512c:	sub	sp, fp, #28
   15130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15134:	mov	r0, #1
   15138:	mov	r4, #0
   1513c:	str	r0, [sp, #32]
   15140:	mov	r0, #0
   15144:	str	r0, [sp, #28]
   15148:	b	14d48 <dim_enter_array@@Base+0x4a8>
   1514c:	mov	r2, #0
   15150:	cmp	r1, #0
   15154:	bne	14cec <dim_enter_array@@Base+0x44c>
   15158:	b	14d0c <dim_enter_array@@Base+0x46c>
   1515c:	movw	r0, #40795	; 0x9f5b
   15160:	movw	r1, #40848	; 0x9f90
   15164:	movw	r3, #40992	; 0xa020
   15168:	movw	r2, #386	; 0x182
   1516c:	movt	r0, #1
   15170:	b	15188 <dim_enter_array@@Base+0x8e8>
   15174:	movw	r0, #41015	; 0xa037
   15178:	movw	r1, #40848	; 0x9f90
   1517c:	movw	r3, #40992	; 0xa020
   15180:	movw	r2, #402	; 0x192
   15184:	movt	r0, #1
   15188:	movt	r1, #1
   1518c:	movt	r3, #1
   15190:	bl	12abc <__assert_fail@plt>
   15194:	movw	r0, #40795	; 0x9f5b
   15198:	movw	r1, #40848	; 0x9f90
   1519c:	movw	r3, #40992	; 0xa020
   151a0:	movw	r2, #349	; 0x15d
   151a4:	b	1516c <dim_enter_array@@Base+0x8cc>
   151a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151ac:	add	fp, sp, #28
   151b0:	sub	sp, sp, #44	; 0x2c
   151b4:	movw	r7, #49640	; 0xc1e8
   151b8:	mov	r8, r1
   151bc:	mov	r9, r0
   151c0:	sub	r1, fp, #32
   151c4:	str	r2, [sp]
   151c8:	movt	r7, #2
   151cc:	add	r5, r7, #144	; 0x90
   151d0:	mov	r0, r5
   151d4:	bl	1278c <coda_cursor_get_type_class@plt>
   151d8:	cmp	r0, #0
   151dc:	beq	151e4 <dim_enter_array@@Base+0x944>
   151e0:	bl	18294 <handle_coda_error@@Base>
   151e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151e8:	sub	r1, r0, #4
   151ec:	cmp	r1, #2
   151f0:	bcc	152d0 <dim_enter_array@@Base+0xa30>
   151f4:	cmp	r0, #0
   151f8:	beq	15310 <dim_enter_array@@Base+0xa70>
   151fc:	cmp	r0, #1
   15200:	bne	155a0 <dim_enter_array@@Base+0xd00>
   15204:	add	r0, r8, r8, lsl #2
   15208:	add	r4, r7, r0, lsl #4
   1520c:	ldr	r0, [r7, #3360]	; 0xd20
   15210:	ldr	r6, [r4, #800]	; 0x320
   15214:	cmp	r0, r8
   15218:	bne	15400 <dim_enter_array@@Base+0xb60>
   1521c:	add	r8, sp, #8
   15220:	add	r1, sp, #4
   15224:	mov	r0, r5
   15228:	mov	r2, r8
   1522c:	bl	12990 <coda_cursor_get_array_dim@plt>
   15230:	cmp	r0, #0
   15234:	beq	1523c <dim_enter_array@@Base+0x99c>
   15238:	bl	18294 <handle_coda_error@@Base>
   1523c:	mov	r0, r4
   15240:	ldr	r1, [sp, #4]
   15244:	ldr	r2, [r0, #804]!	; 0x324
   15248:	cmp	r1, r2
   1524c:	bne	155d0 <dim_enter_array@@Base+0xd30>
   15250:	cmp	r1, #1
   15254:	blt	1550c <dim_enter_array@@Base+0xc6c>
   15258:	movw	r1, #53424	; 0xd0b0
   1525c:	add	r2, r4, #808	; 0x328
   15260:	add	r3, r4, #844	; 0x34c
   15264:	mov	r7, #0
   15268:	movt	r1, #2
   1526c:	add	ip, r1, r6, lsl #2
   15270:	b	15298 <dim_enter_array@@Base+0x9f8>
   15274:	cmp	r5, r6
   15278:	strlt	r6, [r4, #4]
   1527c:	ldr	r1, [r4, #36]	; 0x24
   15280:	cmp	r1, r6
   15284:	strgt	r6, [r4, #36]	; 0x24
   15288:	ldr	r1, [r0]
   1528c:	add	r7, r7, #1
   15290:	cmp	r7, r1
   15294:	bge	1550c <dim_enter_array@@Base+0xc6c>
   15298:	ldr	r6, [r2, r7, lsl #2]
   1529c:	cmn	r6, #1
   152a0:	bne	15288 <dim_enter_array@@Base+0x9e8>
   152a4:	add	r4, ip, r7, lsl #2
   152a8:	ldr	r6, [r8, r7, lsl #2]
   152ac:	ldr	r1, [r3]
   152b0:	ldr	r5, [r4, #108]	; 0x6c
   152b4:	str	r6, [r5, r1, lsl #2]
   152b8:	ldr	r5, [r4, #4]
   152bc:	cmn	r5, #1
   152c0:	bne	15274 <dim_enter_array@@Base+0x9d4>
   152c4:	str	r6, [r4, #4]
   152c8:	str	r6, [r4, #36]	; 0x24
   152cc:	b	15288 <dim_enter_array@@Base+0x9e8>
   152d0:	ldr	r1, [r7, #3360]	; 0xd20
   152d4:	cmp	r1, r8
   152d8:	bne	155b8 <dim_enter_array@@Base+0xd18>
   152dc:	cmp	r0, #4
   152e0:	bne	15374 <dim_enter_array@@Base+0xad4>
   152e4:	add	r1, sp, #4
   152e8:	mov	r0, r5
   152ec:	bl	12894 <coda_cursor_get_string_length@plt>
   152f0:	cmp	r0, #0
   152f4:	beq	152fc <dim_enter_array@@Base+0xa5c>
   152f8:	bl	18294 <handle_coda_error@@Base>
   152fc:	ldr	r0, [sp, #4]
   15300:	str	r0, [sp, #8]
   15304:	asr	r0, r0, #31
   15308:	str	r0, [sp, #12]
   1530c:	b	1538c <dim_enter_array@@Base+0xaec>
   15310:	ldr	r0, [sp]
   15314:	add	r2, sp, #8
   15318:	add	r4, r7, r0, lsl #2
   1531c:	mov	r0, r5
   15320:	ldr	r1, [r4, #3492]!	; 0xda4
   15324:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   15328:	cmp	r0, #0
   1532c:	beq	15334 <dim_enter_array@@Base+0xa94>
   15330:	bl	18294 <handle_coda_error@@Base>
   15334:	ldr	r0, [sp, #8]
   15338:	cmp	r0, #0
   1533c:	beq	15484 <dim_enter_array@@Base+0xbe4>
   15340:	ldr	r1, [r4]
   15344:	mov	r0, r5
   15348:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   1534c:	cmp	r0, #0
   15350:	beq	15358 <dim_enter_array@@Base+0xab8>
   15354:	bl	18294 <handle_coda_error@@Base>
   15358:	ldr	r1, [sp]
   1535c:	add	r0, r9, #1
   15360:	add	r2, r1, #1
   15364:	mov	r1, r8
   15368:	bl	151a8 <dim_enter_array@@Base+0x908>
   1536c:	mov	r0, r5
   15370:	b	15594 <dim_enter_array@@Base+0xcf4>
   15374:	add	r1, sp, #8
   15378:	mov	r0, r5
   1537c:	bl	12624 <coda_cursor_get_byte_size@plt>
   15380:	cmp	r0, #0
   15384:	beq	1538c <dim_enter_array@@Base+0xaec>
   15388:	bl	18294 <handle_coda_error@@Base>
   1538c:	add	r0, r8, r8, lsl #2
   15390:	ldr	r2, [sp, #12]
   15394:	add	r0, r7, r0, lsl #4
   15398:	ldr	r1, [r0, #800]	; 0x320
   1539c:	ldr	r3, [r0, #844]	; 0x34c
   153a0:	movw	r0, #53424	; 0xd0b0
   153a4:	movt	r0, #2
   153a8:	add	r0, r0, r1, lsl #2
   153ac:	ldr	r1, [sp, #8]
   153b0:	ldr	r7, [r0, #108]	; 0x6c
   153b4:	str	r1, [r7, r3, lsl #2]
   153b8:	mov	r3, r0
   153bc:	ldr	r7, [r3, #4]!
   153c0:	cmn	r7, #1
   153c4:	beq	153ec <dim_enter_array@@Base+0xb4c>
   153c8:	subs	r6, r7, r1
   153cc:	rscs	r7, r2, r7, asr #31
   153d0:	strlt	r1, [r3]
   153d4:	ldr	r3, [r0, #36]!	; 0x24
   153d8:	subs	r7, r1, r3
   153dc:	sbcs	r2, r2, r3, asr #31
   153e0:	strlt	r1, [r0]
   153e4:	sub	sp, fp, #28
   153e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153ec:	add	r0, r0, #36	; 0x24
   153f0:	str	r1, [r3]
   153f4:	str	r1, [r0]
   153f8:	sub	sp, fp, #28
   153fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15400:	cmp	r8, #0
   15404:	moveq	r0, #0
   15408:	streq	r0, [r7, #844]	; 0x34c
   1540c:	ldr	r1, [r4, #840]	; 0x348
   15410:	ldr	r0, [r4, #844]	; 0x34c
   15414:	mul	r1, r1, r0
   15418:	str	r1, [r4, #924]!	; 0x39c
   1541c:	ldr	r1, [r4, #-120]	; 0xffffff88
   15420:	cmp	r1, #1
   15424:	blt	15514 <dim_enter_array@@Base+0xc74>
   15428:	movw	r2, #53424	; 0xd0b0
   1542c:	add	r1, r1, r6
   15430:	add	r3, r6, #27
   15434:	movt	r2, #2
   15438:	add	r2, r2, r6, lsl #2
   1543c:	mov	r6, #1
   15440:	add	r2, r2, #72	; 0x48
   15444:	b	1546c <dim_enter_array@@Base+0xbcc>
   15448:	sub	r7, r2, #68	; 0x44
   1544c:	ldr	r7, [r7]
   15450:	add	r2, r2, #4
   15454:	mul	r6, r7, r6
   15458:	add	r7, r3, #1
   1545c:	sub	r3, r3, #26
   15460:	cmp	r3, r1
   15464:	mov	r3, r7
   15468:	bge	15504 <dim_enter_array@@Base+0xc64>
   1546c:	ldr	r7, [r2]
   15470:	cmp	r7, #0
   15474:	beq	15448 <dim_enter_array@@Base+0xba8>
   15478:	ldr	r7, [r2, #36]	; 0x24
   1547c:	add	r7, r7, r0, lsl #2
   15480:	b	1544c <dim_enter_array@@Base+0xbac>
   15484:	ldr	r0, [r7, #3360]	; 0xd20
   15488:	add	r0, r0, r0, lsl #2
   1548c:	add	r3, r7, r0, lsl #4
   15490:	mov	r0, r3
   15494:	ldr	r5, [r0, #804]!	; 0x324
   15498:	cmp	r5, #1
   1549c:	blt	1550c <dim_enter_array@@Base+0xc6c>
   154a0:	ldr	r1, [r0, #-4]
   154a4:	movw	r2, #53424	; 0xd0b0
   154a8:	mov	r7, #0
   154ac:	mov	r6, #0
   154b0:	movt	r2, #2
   154b4:	add	ip, r2, r1, lsl #2
   154b8:	add	r2, r3, #808	; 0x328
   154bc:	add	r3, r3, #844	; 0x34c
   154c0:	b	154d0 <dim_enter_array@@Base+0xc30>
   154c4:	add	r6, r6, #1
   154c8:	cmp	r6, r5
   154cc:	bge	1550c <dim_enter_array@@Base+0xc6c>
   154d0:	ldr	r4, [r2, r6, lsl #2]
   154d4:	cmn	r4, #1
   154d8:	bne	154c4 <dim_enter_array@@Base+0xc24>
   154dc:	add	r5, ip, r6, lsl #2
   154e0:	ldr	r1, [r3]
   154e4:	ldr	r4, [r5, #108]	; 0x6c
   154e8:	str	r7, [r4, r1, lsl #2]
   154ec:	ldr	r1, [r5, #4]
   154f0:	cmn	r1, #1
   154f4:	streq	r7, [r5, #4]
   154f8:	str	r7, [r5, #36]	; 0x24
   154fc:	ldr	r5, [r0]
   15500:	b	154c4 <dim_enter_array@@Base+0xc24>
   15504:	cmp	r6, #1
   15508:	bge	15518 <dim_enter_array@@Base+0xc78>
   1550c:	sub	sp, fp, #28
   15510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15514:	mov	r6, #1
   15518:	mov	r0, r5
   1551c:	mov	r7, r9
   15520:	mov	sl, r5
   15524:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   15528:	cmp	r0, #0
   1552c:	beq	15534 <dim_enter_array@@Base+0xc94>
   15530:	bl	18294 <handle_coda_error@@Base>
   15534:	add	r5, r8, #1
   15538:	sub	r9, r6, #1
   1553c:	add	r7, r7, #1
   15540:	mov	r8, #0
   15544:	b	15560 <dim_enter_array@@Base+0xcc0>
   15548:	ldr	r0, [r4]
   1554c:	add	r0, r0, #1
   15550:	str	r0, [r4]
   15554:	add	r8, r8, #1
   15558:	cmp	r6, r8
   1555c:	beq	15590 <dim_enter_array@@Base+0xcf0>
   15560:	ldr	r2, [sp]
   15564:	mov	r0, r7
   15568:	mov	r1, r5
   1556c:	bl	151a8 <dim_enter_array@@Base+0x908>
   15570:	cmp	r8, r9
   15574:	bge	15554 <dim_enter_array@@Base+0xcb4>
   15578:	mov	r0, sl
   1557c:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   15580:	cmp	r0, #0
   15584:	beq	15548 <dim_enter_array@@Base+0xca8>
   15588:	bl	18294 <handle_coda_error@@Base>
   1558c:	b	15548 <dim_enter_array@@Base+0xca8>
   15590:	mov	r0, sl
   15594:	bl	12864 <coda_cursor_goto_parent@plt>
   15598:	sub	sp, fp, #28
   1559c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155a0:	movw	r0, #40795	; 0x9f5b
   155a4:	movw	r1, #40848	; 0x9f90
   155a8:	movw	r3, #41158	; 0xa0c6
   155ac:	movw	r2, #294	; 0x126
   155b0:	movt	r0, #1
   155b4:	b	155e4 <dim_enter_array@@Base+0xd44>
   155b8:	movw	r0, #41201	; 0xa0f1
   155bc:	movw	r1, #40848	; 0x9f90
   155c0:	movw	r3, #41158	; 0xa0c6
   155c4:	mov	r2, #252	; 0xfc
   155c8:	movt	r0, #1
   155cc:	b	155e4 <dim_enter_array@@Base+0xd44>
   155d0:	movw	r0, #41125	; 0xa0a5
   155d4:	movw	r1, #40848	; 0x9f90
   155d8:	movw	r3, #41158	; 0xa0c6
   155dc:	mov	r2, #125	; 0x7d
   155e0:	movt	r0, #1
   155e4:	movt	r1, #1
   155e8:	movt	r3, #1
   155ec:	bl	12abc <__assert_fail@plt>

000155f0 <dim_leave_array@@Base>:
   155f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155f4:	add	fp, sp, #24
   155f8:	movw	r0, #49640	; 0xc1e8
   155fc:	movt	r0, #2
   15600:	ldr	r1, [r0, #3360]	; 0xd20
   15604:	cmn	r1, #1
   15608:	ble	15700 <dim_leave_array@@Base+0x110>
   1560c:	add	r1, r1, r1, lsl #2
   15610:	movw	r8, #53424	; 0xd0b0
   15614:	movt	r8, #2
   15618:	add	r6, r0, r1, lsl #4
   1561c:	ldr	r1, [r8]
   15620:	ldr	r0, [r6, #804]!	; 0x324
   15624:	ldr	r4, [r6, #-4]
   15628:	sub	r1, r1, r0
   1562c:	cmp	r0, #1
   15630:	str	r1, [r8]
   15634:	blt	15674 <dim_leave_array@@Base+0x84>
   15638:	add	r7, r8, r4, lsl #2
   1563c:	mov	r5, #0
   15640:	b	15650 <dim_leave_array@@Base+0x60>
   15644:	add	r5, r5, #1
   15648:	cmp	r5, r0
   1564c:	bge	15670 <dim_leave_array@@Base+0x80>
   15650:	add	r1, r7, r5, lsl #2
   15654:	ldr	r2, [r1, #72]	; 0x48
   15658:	cmp	r2, #0
   1565c:	beq	15644 <dim_leave_array@@Base+0x54>
   15660:	ldr	r0, [r1, #108]	; 0x6c
   15664:	bl	126fc <free@plt>
   15668:	ldr	r0, [r6]
   1566c:	b	15644 <dim_leave_array@@Base+0x54>
   15670:	ldr	r1, [r8]
   15674:	mvn	r2, #0
   15678:	cmp	r1, #1
   1567c:	str	r2, [r8, #104]	; 0x68
   15680:	mov	r2, #0
   15684:	str	r2, [r8, #68]	; 0x44
   15688:	blt	156b0 <dim_leave_array@@Base+0xc0>
   1568c:	mov	r3, #1
   15690:	add	r7, r8, r2, lsl #2
   15694:	ldr	r7, [r7, #72]	; 0x48
   15698:	cmp	r7, #0
   1569c:	strne	r2, [r8, #104]	; 0x68
   156a0:	add	r2, r2, #1
   156a4:	strne	r3, [r8, #68]	; 0x44
   156a8:	cmp	r2, r1
   156ac:	blt	15690 <dim_leave_array@@Base+0xa0>
   156b0:	add	r0, r4, r0
   156b4:	add	r0, r8, r0, lsl #3
   156b8:	ldr	r1, [r0, #296]	; 0x128
   156bc:	ldr	r0, [r0, #300]	; 0x12c
   156c0:	subs	r1, r1, #1
   156c4:	sbcs	r0, r0, #0
   156c8:	cmpge	r4, #1
   156cc:	blt	156fc <dim_leave_array@@Base+0x10c>
   156d0:	add	r0, r8, r4, lsl #3
   156d4:	add	r5, r0, #168	; 0xa8
   156d8:	add	r6, r0, #176	; 0xb0
   156dc:	ldrd	r0, [r5]
   156e0:	ldrd	r2, [r6]
   156e4:	bl	19aa8 <main@@Base+0x17d0>
   156e8:	sub	r4, r4, #1
   156ec:	strd	r0, [r5]
   156f0:	sub	r5, r5, #8
   156f4:	cmp	r4, #0
   156f8:	bgt	156dc <dim_leave_array@@Base+0xec>
   156fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15700:	movw	r0, #41072	; 0xa070
   15704:	movw	r1, #40848	; 0x9f90
   15708:	movw	r3, #41102	; 0xa08e
   1570c:	movw	r2, #579	; 0x243
   15710:	movt	r0, #1
   15714:	movt	r1, #1
   15718:	movt	r3, #1
   1571c:	bl	12abc <__assert_fail@plt>

00015720 <dim_record_field_available@@Base>:
   15720:	mov	r0, #0
   15724:	mov	r1, #0
   15728:	mov	r2, #0
   1572c:	b	15730 <dim_record_field_available@@Base+0x10>
   15730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15734:	add	fp, sp, #28
   15738:	sub	sp, sp, #12
   1573c:	movw	r5, #49640	; 0xc1e8
   15740:	mov	r6, r1
   15744:	mov	r7, r0
   15748:	add	r1, sp, #8
   1574c:	mov	r9, r2
   15750:	movt	r5, #2
   15754:	add	r0, r5, #144	; 0x90
   15758:	str	r0, [sp]
   1575c:	bl	1278c <coda_cursor_get_type_class@plt>
   15760:	cmp	r0, #0
   15764:	beq	1576c <dim_record_field_available@@Base+0x4c>
   15768:	bl	18294 <handle_coda_error@@Base>
   1576c:	ldr	r0, [sp, #8]
   15770:	cmp	r0, #0
   15774:	beq	1581c <dim_record_field_available@@Base+0xfc>
   15778:	cmp	r0, #1
   1577c:	bne	1594c <dim_record_field_available@@Base+0x22c>
   15780:	ldr	r0, [r5, #3360]	; 0xd20
   15784:	cmp	r0, r6
   15788:	ble	15964 <dim_record_field_available@@Base+0x244>
   1578c:	add	r0, r6, r6, lsl #2
   15790:	cmp	r6, #0
   15794:	add	sl, r5, r0, lsl #4
   15798:	moveq	r0, #0
   1579c:	ldr	r3, [sl, #800]	; 0x320
   157a0:	streq	r0, [r5, #844]	; 0x34c
   157a4:	ldr	r1, [sl, #840]	; 0x348
   157a8:	ldr	r0, [sl, #844]	; 0x34c
   157ac:	mul	r1, r1, r0
   157b0:	str	r1, [sl, #924]!	; 0x39c
   157b4:	ldr	r1, [sl, #-120]	; 0xffffff88
   157b8:	cmp	r1, #1
   157bc:	blt	158a8 <dim_record_field_available@@Base+0x188>
   157c0:	movw	r2, #53424	; 0xd0b0
   157c4:	add	r1, r1, r3
   157c8:	mov	r5, #1
   157cc:	movt	r2, #2
   157d0:	add	r2, r2, r3, lsl #2
   157d4:	add	r3, r3, #27
   157d8:	add	r2, r2, #72	; 0x48
   157dc:	b	15804 <dim_record_field_available@@Base+0xe4>
   157e0:	sub	r4, r2, #68	; 0x44
   157e4:	ldr	r4, [r4]
   157e8:	add	r2, r2, #4
   157ec:	mul	r5, r4, r5
   157f0:	add	r4, r3, #1
   157f4:	sub	r3, r3, #26
   157f8:	cmp	r3, r1
   157fc:	mov	r3, r4
   15800:	bge	1589c <dim_record_field_available@@Base+0x17c>
   15804:	ldr	r4, [r2]
   15808:	cmp	r4, #0
   1580c:	beq	157e0 <dim_record_field_available@@Base+0xc0>
   15810:	ldr	r4, [r2, #36]	; 0x24
   15814:	add	r4, r4, r0, lsl #2
   15818:	b	157e4 <dim_record_field_available@@Base+0xc4>
   1581c:	add	r4, r5, r9, lsl #2
   15820:	ldr	r0, [sp]
   15824:	add	r2, sp, #4
   15828:	ldr	r1, [r4, #3492]!	; 0xda4
   1582c:	bl	1269c <coda_cursor_get_record_field_available_status@plt>
   15830:	cmp	r0, #0
   15834:	beq	1583c <dim_record_field_available@@Base+0x11c>
   15838:	bl	18294 <handle_coda_error@@Base>
   1583c:	ldr	r0, [sp, #4]
   15840:	cmp	r0, #0
   15844:	beq	15940 <dim_record_field_available@@Base+0x220>
   15848:	ldr	r0, [r5, #3748]	; 0xea4
   1584c:	sub	r0, r0, #1
   15850:	cmp	r0, r9
   15854:	beq	1592c <dim_record_field_available@@Base+0x20c>
   15858:	ldr	r1, [r4]
   1585c:	ldr	r0, [sp]
   15860:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   15864:	cmp	r0, #0
   15868:	beq	15870 <dim_record_field_available@@Base+0x150>
   1586c:	bl	18294 <handle_coda_error@@Base>
   15870:	add	r0, r7, #1
   15874:	add	r2, r9, #1
   15878:	mov	r1, r6
   1587c:	bl	15730 <dim_record_field_available@@Base+0x10>
   15880:	str	r0, [sp, #4]
   15884:	ldr	r0, [sp]
   15888:	bl	12864 <coda_cursor_goto_parent@plt>
   1588c:	ldr	r0, [sp, #4]
   15890:	cmp	r0, #0
   15894:	bne	1592c <dim_record_field_available@@Base+0x20c>
   15898:	b	15940 <dim_record_field_available@@Base+0x220>
   1589c:	cmp	r5, #1
   158a0:	bge	158ac <dim_record_field_available@@Base+0x18c>
   158a4:	b	15940 <dim_record_field_available@@Base+0x220>
   158a8:	mov	r5, #1
   158ac:	ldr	r0, [sp]
   158b0:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   158b4:	cmp	r0, #0
   158b8:	beq	158c0 <dim_record_field_available@@Base+0x1a0>
   158bc:	bl	18294 <handle_coda_error@@Base>
   158c0:	add	r6, r6, #1
   158c4:	sub	r4, r5, #1
   158c8:	add	r7, r7, #1
   158cc:	mov	r8, #0
   158d0:	b	158ec <dim_record_field_available@@Base+0x1cc>
   158d4:	ldr	r0, [sl]
   158d8:	add	r0, r0, #1
   158dc:	str	r0, [sl]
   158e0:	add	r8, r8, #1
   158e4:	cmp	r5, r8
   158e8:	beq	15938 <dim_record_field_available@@Base+0x218>
   158ec:	mov	r0, r7
   158f0:	mov	r1, r6
   158f4:	mov	r2, r9
   158f8:	bl	15730 <dim_record_field_available@@Base+0x10>
   158fc:	cmp	r0, #0
   15900:	bne	15924 <dim_record_field_available@@Base+0x204>
   15904:	cmp	r8, r4
   15908:	bge	158e0 <dim_record_field_available@@Base+0x1c0>
   1590c:	ldr	r0, [sp]
   15910:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   15914:	cmp	r0, #0
   15918:	beq	158d4 <dim_record_field_available@@Base+0x1b4>
   1591c:	bl	18294 <handle_coda_error@@Base>
   15920:	b	158d4 <dim_record_field_available@@Base+0x1b4>
   15924:	ldr	r0, [sp]
   15928:	bl	12864 <coda_cursor_goto_parent@plt>
   1592c:	mov	r0, #1
   15930:	sub	sp, fp, #28
   15934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15938:	ldr	r0, [sp]
   1593c:	bl	12864 <coda_cursor_goto_parent@plt>
   15940:	mov	r0, #0
   15944:	sub	sp, fp, #28
   15948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1594c:	movw	r0, #40795	; 0x9f5b
   15950:	movw	r1, #40848	; 0x9f90
   15954:	movw	r3, #41280	; 0xa140
   15958:	movw	r2, #729	; 0x2d9
   1595c:	movt	r0, #1
   15960:	b	15978 <dim_record_field_available@@Base+0x258>
   15964:	movw	r0, #41241	; 0xa119
   15968:	movw	r1, #40848	; 0x9f90
   1596c:	movw	r3, #41280	; 0xa140
   15970:	movw	r2, #638	; 0x27e
   15974:	movt	r0, #1
   15978:	movt	r1, #1
   1597c:	movt	r3, #1
   15980:	bl	12abc <__assert_fail@plt>

00015984 <codadump_filter_create@@Base>:
   15984:	push	{r4, r5, r6, r7, fp, lr}
   15988:	add	fp, sp, #16
   1598c:	sub	sp, sp, #16
   15990:	mov	r1, #0
   15994:	cmp	r0, #0
   15998:	str	r0, [sp, #8]
   1599c:	str	r1, [sp, #4]
   159a0:	str	r1, [sp, #12]
   159a4:	beq	15a04 <codadump_filter_create@@Base+0x80>
   159a8:	ldrb	r1, [r0]
   159ac:	cmp	r1, #0
   159b0:	beq	15a04 <codadump_filter_create@@Base+0x80>
   159b4:	add	r4, sp, #12
   159b8:	add	r5, sp, #8
   159bc:	add	r6, sp, #4
   159c0:	mov	r7, #0
   159c4:	mov	r1, r4
   159c8:	mov	r2, r5
   159cc:	bl	15b58 <codadump_filter_get_next_filter@@Base+0x34>
   159d0:	ldr	r1, [sp, #12]
   159d4:	cmp	r1, #0
   159d8:	beq	159fc <codadump_filter_create@@Base+0x78>
   159dc:	mov	r0, r6
   159e0:	bl	15db0 <codadump_filter_get_next_filter@@Base+0x28c>
   159e4:	ldr	r0, [sp, #8]
   159e8:	str	r7, [sp, #12]
   159ec:	ldrb	r1, [r0]
   159f0:	cmp	r1, #0
   159f4:	bne	159c4 <codadump_filter_create@@Base+0x40>
   159f8:	b	15a04 <codadump_filter_create@@Base+0x80>
   159fc:	add	r0, sp, #4
   15a00:	bl	15a10 <codadump_filter_remove@@Base>
   15a04:	ldr	r0, [sp, #4]
   15a08:	sub	sp, fp, #16
   15a0c:	pop	{r4, r5, r6, r7, fp, pc}

00015a10 <codadump_filter_remove@@Base>:
   15a10:	push	{r4, sl, fp, lr}
   15a14:	add	fp, sp, #8
   15a18:	cmp	r0, #0
   15a1c:	beq	15a9c <codadump_filter_remove@@Base+0x8c>
   15a20:	mov	r4, r0
   15a24:	ldr	r0, [r0]
   15a28:	cmp	r0, #0
   15a2c:	popeq	{r4, sl, fp, pc}
   15a30:	mov	r1, r0
   15a34:	ldr	r2, [r1, #8]!
   15a38:	cmp	r2, #0
   15a3c:	beq	15a4c <codadump_filter_remove@@Base+0x3c>
   15a40:	mov	r0, r1
   15a44:	bl	15a10 <codadump_filter_remove@@Base>
   15a48:	ldr	r0, [r4]
   15a4c:	mov	r1, r0
   15a50:	ldr	r2, [r1, #4]!
   15a54:	cmp	r2, #0
   15a58:	beq	15a68 <codadump_filter_remove@@Base+0x58>
   15a5c:	mov	r0, r1
   15a60:	bl	15a10 <codadump_filter_remove@@Base>
   15a64:	ldr	r0, [r4]
   15a68:	ldr	r1, [r0]
   15a6c:	cmp	r1, #0
   15a70:	beq	15a8c <codadump_filter_remove@@Base+0x7c>
   15a74:	mov	r0, r1
   15a78:	bl	126fc <free@plt>
   15a7c:	ldr	r0, [r4]
   15a80:	mov	r1, #0
   15a84:	str	r1, [r0]
   15a88:	ldr	r0, [r4]
   15a8c:	bl	126fc <free@plt>
   15a90:	mov	r0, #0
   15a94:	str	r0, [r4]
   15a98:	pop	{r4, sl, fp, pc}
   15a9c:	movw	r0, #41333	; 0xa175
   15aa0:	movw	r1, #41348	; 0xa184
   15aa4:	movw	r3, #41433	; 0xa1d9
   15aa8:	mov	r2, #192	; 0xc0
   15aac:	movt	r0, #1
   15ab0:	movt	r1, #1
   15ab4:	movt	r3, #1
   15ab8:	bl	12abc <__assert_fail@plt>

00015abc <codadump_filter_get_fieldname@@Base>:
   15abc:	push	{fp, lr}
   15ac0:	mov	fp, sp
   15ac4:	cmp	r0, #0
   15ac8:	ldrne	r0, [r0]
   15acc:	popne	{fp, pc}
   15ad0:	movw	r0, #41333	; 0xa175
   15ad4:	movw	r1, #41348	; 0xa184
   15ad8:	movw	r3, #41481	; 0xa209
   15adc:	mov	r2, #216	; 0xd8
   15ae0:	movt	r0, #1
   15ae4:	movt	r1, #1
   15ae8:	movt	r3, #1
   15aec:	bl	12abc <__assert_fail@plt>

00015af0 <codadump_filter_get_subfilter@@Base>:
   15af0:	push	{fp, lr}
   15af4:	mov	fp, sp
   15af8:	cmp	r0, #0
   15afc:	ldrne	r0, [r0, #4]
   15b00:	popne	{fp, pc}
   15b04:	movw	r0, #41333	; 0xa175
   15b08:	movw	r1, #41348	; 0xa184
   15b0c:	movw	r3, #41542	; 0xa246
   15b10:	mov	r2, #223	; 0xdf
   15b14:	movt	r0, #1
   15b18:	movt	r1, #1
   15b1c:	movt	r3, #1
   15b20:	bl	12abc <__assert_fail@plt>

00015b24 <codadump_filter_get_next_filter@@Base>:
   15b24:	push	{fp, lr}
   15b28:	mov	fp, sp
   15b2c:	cmp	r0, #0
   15b30:	ldrne	r0, [r0, #8]
   15b34:	popne	{fp, pc}
   15b38:	movw	r0, #41333	; 0xa175
   15b3c:	movw	r1, #41348	; 0xa184
   15b40:	movw	r3, #41608	; 0xa288
   15b44:	mov	r2, #230	; 0xe6
   15b48:	movt	r0, #1
   15b4c:	movt	r1, #1
   15b50:	movt	r3, #1
   15b54:	bl	12abc <__assert_fail@plt>
   15b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b5c:	add	fp, sp, #24
   15b60:	sub	sp, sp, #8
   15b64:	cmp	r0, #0
   15b68:	beq	15d60 <codadump_filter_get_next_filter@@Base+0x23c>
   15b6c:	mov	r9, r1
   15b70:	cmp	r1, #0
   15b74:	beq	15d78 <codadump_filter_get_next_filter@@Base+0x254>
   15b78:	mov	r8, r2
   15b7c:	cmp	r2, #0
   15b80:	beq	15d90 <codadump_filter_get_next_filter@@Base+0x26c>
   15b84:	movw	r4, #3
   15b88:	mov	r6, r0
   15b8c:	mov	r1, #1
   15b90:	movt	r4, #128	; 0x80
   15b94:	ldrb	r0, [r6]
   15b98:	sub	r2, r0, #9
   15b9c:	cmp	r2, #23
   15ba0:	bhi	15bb4 <codadump_filter_get_next_filter@@Base+0x90>
   15ba4:	tst	r4, r1, lsl r2
   15ba8:	beq	15bb4 <codadump_filter_get_next_filter@@Base+0x90>
   15bac:	add	r6, r6, #1
   15bb0:	b	15b94 <codadump_filter_get_next_filter@@Base+0x70>
   15bb4:	mov	r7, #0
   15bb8:	mvn	r1, #43	; 0x2b
   15bbc:	mov	r2, #1
   15bc0:	movw	r3, #32773	; 0x8005
   15bc4:	uxtab	r5, r1, r0
   15bc8:	cmp	r5, #15
   15bcc:	bhi	15bd8 <codadump_filter_get_next_filter@@Base+0xb4>
   15bd0:	tst	r3, r2, lsl r5
   15bd4:	bne	15bf4 <codadump_filter_get_next_filter@@Base+0xd0>
   15bd8:	uxtb	r0, r0
   15bdc:	cmp	r0, #0
   15be0:	beq	15bf4 <codadump_filter_get_next_filter@@Base+0xd0>
   15be4:	add	r0, r6, r7
   15be8:	add	r7, r7, #1
   15bec:	ldrb	r0, [r0, #1]
   15bf0:	b	15bc4 <codadump_filter_get_next_filter@@Base+0xa0>
   15bf4:	cmp	r7, #0
   15bf8:	beq	15d08 <codadump_filter_get_next_filter@@Base+0x1e4>
   15bfc:	mov	r0, #12
   15c00:	bl	12834 <malloc@plt>
   15c04:	cmp	r0, #0
   15c08:	str	r0, [r9]
   15c0c:	bne	15c38 <codadump_filter_get_next_filter@@Base+0x114>
   15c10:	movw	r1, #40233	; 0x9d29
   15c14:	movw	r3, #41348	; 0xa184
   15c18:	mov	r0, #69	; 0x45
   15c1c:	mov	r2, #12
   15c20:	movt	r1, #1
   15c24:	movt	r3, #1
   15c28:	str	r0, [sp]
   15c2c:	mvn	r0, #0
   15c30:	bl	126b4 <coda_set_error@plt>
   15c34:	bl	18294 <handle_coda_error@@Base>
   15c38:	add	r5, r7, #1
   15c3c:	mov	r0, r5
   15c40:	bl	12834 <malloc@plt>
   15c44:	ldr	r1, [r9]
   15c48:	str	r0, [r1]
   15c4c:	ldr	r0, [r9]
   15c50:	ldr	r0, [r0]
   15c54:	cmp	r0, #0
   15c58:	bne	15c8c <codadump_filter_get_next_filter@@Base+0x168>
   15c5c:	movw	r1, #41773	; 0xa32d
   15c60:	movw	r3, #41348	; 0xa184
   15c64:	mov	r0, #76	; 0x4c
   15c68:	mov	r2, r5
   15c6c:	movt	r1, #1
   15c70:	movt	r3, #1
   15c74:	str	r0, [sp]
   15c78:	mvn	r0, #0
   15c7c:	bl	126b4 <coda_set_error@plt>
   15c80:	bl	18294 <handle_coda_error@@Base>
   15c84:	ldr	r0, [r9]
   15c88:	ldr	r0, [r0]
   15c8c:	mov	r1, r6
   15c90:	mov	r2, r7
   15c94:	add	r5, r6, r7
   15c98:	bl	12930 <strncpy@plt>
   15c9c:	ldr	r0, [r9]
   15ca0:	mov	r1, #0
   15ca4:	str	r1, [r0, #4]
   15ca8:	ldr	r0, [r9]
   15cac:	str	r1, [r0, #8]
   15cb0:	mov	r1, #1
   15cb4:	ldr	r0, [r9]
   15cb8:	ldr	r0, [r0]
   15cbc:	add	r0, r0, r7
   15cc0:	ldrb	r2, [r0, #-1]
   15cc4:	sub	r2, r2, #9
   15cc8:	cmp	r2, #23
   15ccc:	bhi	15ce0 <codadump_filter_get_next_filter@@Base+0x1bc>
   15cd0:	tst	r4, r1, lsl r2
   15cd4:	beq	15ce0 <codadump_filter_get_next_filter@@Base+0x1bc>
   15cd8:	sub	r0, r0, #1
   15cdc:	b	15cc0 <codadump_filter_get_next_filter@@Base+0x19c>
   15ce0:	mov	r1, #0
   15ce4:	strb	r1, [r0]
   15ce8:	ldrb	r0, [r6, r7]
   15cec:	cmp	r0, #44	; 0x2c
   15cf0:	cmpne	r0, #59	; 0x3b
   15cf4:	bne	15d18 <codadump_filter_get_next_filter@@Base+0x1f4>
   15cf8:	add	r0, r5, #1
   15cfc:	str	r0, [r8]
   15d00:	sub	sp, fp, #24
   15d04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d08:	mov	r0, #0
   15d0c:	str	r0, [r9]
   15d10:	sub	sp, fp, #24
   15d14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d18:	cmp	r0, #46	; 0x2e
   15d1c:	bne	15d54 <codadump_filter_get_next_filter@@Base+0x230>
   15d20:	ldr	r1, [r9]
   15d24:	add	r0, r5, #1
   15d28:	mov	r2, r8
   15d2c:	add	r1, r1, #4
   15d30:	bl	15b58 <codadump_filter_get_next_filter@@Base+0x34>
   15d34:	ldr	r0, [r9]
   15d38:	ldr	r0, [r0, #4]
   15d3c:	cmp	r0, #0
   15d40:	bne	15d10 <codadump_filter_get_next_filter@@Base+0x1ec>
   15d44:	mov	r0, r9
   15d48:	sub	sp, fp, #24
   15d4c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d50:	b	15a10 <codadump_filter_remove@@Base>
   15d54:	str	r5, [r8]
   15d58:	sub	sp, fp, #24
   15d5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d60:	movw	r0, #41676	; 0xa2cc
   15d64:	movw	r1, #41348	; 0xa184
   15d68:	movw	r3, #41696	; 0xa2e0
   15d6c:	mov	r2, #44	; 0x2c
   15d70:	movt	r0, #1
   15d74:	b	15da4 <codadump_filter_get_next_filter@@Base+0x280>
   15d78:	movw	r0, #41333	; 0xa175
   15d7c:	movw	r1, #41348	; 0xa184
   15d80:	movw	r3, #41696	; 0xa2e0
   15d84:	mov	r2, #45	; 0x2d
   15d88:	movt	r0, #1
   15d8c:	b	15da4 <codadump_filter_get_next_filter@@Base+0x280>
   15d90:	movw	r0, #41760	; 0xa320
   15d94:	movw	r1, #41348	; 0xa184
   15d98:	movw	r3, #41696	; 0xa2e0
   15d9c:	mov	r2, #46	; 0x2e
   15da0:	movt	r0, #1
   15da4:	movt	r1, #1
   15da8:	movt	r3, #1
   15dac:	bl	12abc <__assert_fail@plt>
   15db0:	push	{r4, r5, fp, lr}
   15db4:	add	fp, sp, #8
   15db8:	sub	sp, sp, #8
   15dbc:	cmp	r0, #0
   15dc0:	str	r1, [sp, #4]
   15dc4:	beq	15e6c <codadump_filter_get_next_filter@@Base+0x348>
   15dc8:	mov	r4, r1
   15dcc:	cmp	r1, #0
   15dd0:	beq	15e50 <codadump_filter_get_next_filter@@Base+0x32c>
   15dd4:	ldr	r5, [r0]
   15dd8:	cmp	r5, #0
   15ddc:	beq	15e14 <codadump_filter_get_next_filter@@Base+0x2f0>
   15de0:	ldr	r1, [r4]
   15de4:	ldr	r0, [r5]
   15de8:	bl	1266c <strcmp@plt>
   15dec:	cmp	r0, #0
   15df0:	beq	15e20 <codadump_filter_get_next_filter@@Base+0x2fc>
   15df4:	ldr	r0, [r5, #8]!
   15df8:	cmp	r0, #0
   15dfc:	beq	15e4c <codadump_filter_get_next_filter@@Base+0x328>
   15e00:	mov	r0, r5
   15e04:	mov	r1, r4
   15e08:	sub	sp, fp, #8
   15e0c:	pop	{r4, r5, fp, lr}
   15e10:	b	15db0 <codadump_filter_get_next_filter@@Base+0x28c>
   15e14:	str	r4, [r0]
   15e18:	sub	sp, fp, #8
   15e1c:	pop	{r4, r5, fp, pc}
   15e20:	ldr	r0, [r5, #4]!
   15e24:	cmp	r0, #0
   15e28:	beq	15e5c <codadump_filter_get_next_filter@@Base+0x338>
   15e2c:	ldr	r1, [r4, #4]
   15e30:	mov	r0, r5
   15e34:	cmp	r1, #0
   15e38:	beq	15e58 <codadump_filter_get_next_filter@@Base+0x334>
   15e3c:	bl	15db0 <codadump_filter_get_next_filter@@Base+0x28c>
   15e40:	mov	r0, #0
   15e44:	str	r0, [r4, #4]
   15e48:	b	15e5c <codadump_filter_get_next_filter@@Base+0x338>
   15e4c:	str	r4, [r5]
   15e50:	sub	sp, fp, #8
   15e54:	pop	{r4, r5, fp, pc}
   15e58:	bl	15a10 <codadump_filter_remove@@Base>
   15e5c:	add	r0, sp, #4
   15e60:	bl	15a10 <codadump_filter_remove@@Base>
   15e64:	sub	sp, fp, #8
   15e68:	pop	{r4, r5, fp, pc}
   15e6c:	movw	r0, #41333	; 0xa175
   15e70:	movw	r1, #41348	; 0xa184
   15e74:	movw	r3, #41825	; 0xa361
   15e78:	mov	r2, #117	; 0x75
   15e7c:	movt	r0, #1
   15e80:	movt	r1, #1
   15e84:	movt	r3, #1
   15e88:	bl	12abc <__assert_fail@plt>

00015e8c <print_json_data@@Base>:
   15e8c:	push	{r4, sl, fp, lr}
   15e90:	add	fp, sp, #8
   15e94:	sub	sp, sp, #528	; 0x210
   15e98:	movw	r1, #49604	; 0xc1c4
   15e9c:	movw	r4, #49640	; 0xc1e8
   15ea0:	movt	r1, #2
   15ea4:	movt	r4, #2
   15ea8:	str	r0, [r1]
   15eac:	ldr	r0, [r4]
   15eb0:	sub	r1, fp, #12
   15eb4:	bl	126c0 <coda_open@plt>
   15eb8:	cmp	r0, #0
   15ebc:	beq	15efc <print_json_data@@Base+0x70>
   15ec0:	bl	12a68 <coda_get_errno@plt>
   15ec4:	ldr	r0, [r0]
   15ec8:	cmn	r0, #21
   15ecc:	bne	15ef8 <print_json_data@@Base+0x6c>
   15ed0:	mov	r0, #0
   15ed4:	bl	12708 <coda_set_option_use_mmap@plt>
   15ed8:	ldr	r0, [r4]
   15edc:	sub	r1, fp, #12
   15ee0:	bl	126c0 <coda_open@plt>
   15ee4:	mov	r4, r0
   15ee8:	mov	r0, #1
   15eec:	bl	12708 <coda_set_option_use_mmap@plt>
   15ef0:	cmp	r4, #0
   15ef4:	beq	15efc <print_json_data@@Base+0x70>
   15ef8:	bl	18294 <handle_coda_error@@Base>
   15efc:	ldr	r1, [fp, #-12]
   15f00:	mov	r0, sp
   15f04:	bl	127ec <coda_cursor_set_product@plt>
   15f08:	cmp	r0, #0
   15f0c:	beq	15f14 <print_json_data@@Base+0x88>
   15f10:	bl	18294 <handle_coda_error@@Base>
   15f14:	movw	r0, #53416	; 0xd0a8
   15f18:	movt	r0, #2
   15f1c:	ldr	r1, [r0]
   15f20:	cmp	r1, #0
   15f24:	beq	15f3c <print_json_data@@Base+0xb0>
   15f28:	mov	r0, sp
   15f2c:	bl	129cc <coda_cursor_goto@plt>
   15f30:	cmp	r0, #0
   15f34:	beq	15f3c <print_json_data@@Base+0xb0>
   15f38:	bl	18294 <handle_coda_error@@Base>
   15f3c:	mov	r0, #0
   15f40:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   15f44:	mov	r0, sp
   15f48:	bl	15f68 <print_json_data@@Base+0xdc>
   15f4c:	movw	r0, #42716	; 0xa6dc
   15f50:	movt	r0, #1
   15f54:	bl	16834 <print_json_data@@Base+0x9a8>
   15f58:	ldr	r0, [fp, #-12]
   15f5c:	bl	129a8 <coda_close@plt>
   15f60:	sub	sp, fp, #8
   15f64:	pop	{r4, sl, fp, pc}
   15f68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f6c:	add	fp, sp, #24
   15f70:	sub	sp, sp, #72	; 0x48
   15f74:	mov	r4, r0
   15f78:	mov	r0, #0
   15f7c:	str	r0, [fp, #-32]	; 0xffffffe0
   15f80:	movw	r0, #49604	; 0xc1c4
   15f84:	movt	r0, #2
   15f88:	ldr	r0, [r0]
   15f8c:	cmp	r0, #0
   15f90:	beq	15ff4 <print_json_data@@Base+0x168>
   15f94:	sub	r1, fp, #32
   15f98:	mov	r0, r4
   15f9c:	bl	12780 <coda_cursor_has_attributes@plt>
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fac <print_json_data@@Base+0x120>
   15fa8:	bl	18294 <handle_coda_error@@Base>
   15fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fb0:	cmp	r0, #0
   15fb4:	beq	15ff4 <print_json_data@@Base+0x168>
   15fb8:	movw	r0, #41880	; 0xa398
   15fbc:	movt	r0, #1
   15fc0:	bl	16834 <print_json_data@@Base+0x9a8>
   15fc4:	mov	r0, r4
   15fc8:	bl	12900 <coda_cursor_goto_attributes@plt>
   15fcc:	cmp	r0, #0
   15fd0:	beq	15fd8 <print_json_data@@Base+0x14c>
   15fd4:	bl	18294 <handle_coda_error@@Base>
   15fd8:	mov	r0, r4
   15fdc:	bl	15f68 <print_json_data@@Base+0xdc>
   15fe0:	mov	r0, r4
   15fe4:	bl	12864 <coda_cursor_goto_parent@plt>
   15fe8:	movw	r0, #41889	; 0xa3a1
   15fec:	movt	r0, #1
   15ff0:	bl	16834 <print_json_data@@Base+0x9a8>
   15ff4:	sub	r1, fp, #28
   15ff8:	mov	r0, r4
   15ffc:	bl	1278c <coda_cursor_get_type_class@plt>
   16000:	cmp	r0, #0
   16004:	beq	1600c <print_json_data@@Base+0x180>
   16008:	bl	18294 <handle_coda_error@@Base>
   1600c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16010:	cmp	r0, #6
   16014:	bhi	167dc <print_json_data@@Base+0x950>
   16018:	add	r1, pc, #0
   1601c:	ldr	pc, [r1, r0, lsl #2]
   16020:	ldrdeq	r6, [r1], -r0
   16024:	andeq	r6, r1, r4, lsr #3
   16028:	andeq	r6, r1, ip, lsr r0
   1602c:	andeq	r6, r1, ip, lsr r0
   16030:	andeq	r6, r1, ip, lsr r0
   16034:	andeq	r6, r1, ip, lsr r0
   16038:	strdeq	r6, [r1], -r4
   1603c:	sub	r1, fp, #36	; 0x24
   16040:	mov	r0, r4
   16044:	bl	12828 <coda_cursor_get_read_type@plt>
   16048:	cmp	r0, #0
   1604c:	beq	16054 <print_json_data@@Base+0x1c8>
   16050:	bl	18294 <handle_coda_error@@Base>
   16054:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16058:	add	r0, r0, #1
   1605c:	cmp	r0, #13
   16060:	bhi	167dc <print_json_data@@Base+0x950>
   16064:	add	r1, pc, #0
   16068:	ldr	pc, [r1, r0, lsl #2]
   1606c:	andeq	r6, r1, r0, lsr r2
   16070:	andeq	r6, r1, r4, lsr #1
   16074:	andeq	r6, r1, ip, lsr r2
   16078:	andeq	r6, r1, r4, lsr #1
   1607c:	andeq	r6, r1, ip, lsr r2
   16080:	andeq	r6, r1, r4, lsr #1
   16084:	andeq	r6, r1, ip, lsr r2
   16088:	andeq	r6, r1, r8, lsr #5
   1608c:	ldrdeq	r6, [r1], -r8
   16090:	andeq	r6, r1, r8, ror #4
   16094:	andeq	r6, r1, r8, ror #4
   16098:	andeq	r6, r1, r8, lsl r3
   1609c:	andeq	r6, r1, r4, asr r3
   160a0:	andeq	r6, r1, r8, lsl #8
   160a4:	add	r1, sp, #16
   160a8:	mov	r0, r4
   160ac:	bl	12a44 <coda_cursor_read_int32@plt>
   160b0:	cmp	r0, #0
   160b4:	beq	160bc <print_json_data@@Base+0x230>
   160b8:	bl	18294 <handle_coda_error@@Base>
   160bc:	ldr	r1, [sp, #16]
   160c0:	movw	r0, #42084	; 0xa464
   160c4:	movt	r0, #1
   160c8:	bl	16834 <print_json_data@@Base+0x9a8>
   160cc:	b	167dc <print_json_data@@Base+0x950>
   160d0:	movw	r0, #41898	; 0xa3aa
   160d4:	movt	r0, #1
   160d8:	bl	16834 <print_json_data@@Base+0x9a8>
   160dc:	add	r1, sp, #16
   160e0:	mov	r0, r4
   160e4:	bl	126e4 <coda_cursor_get_num_elements@plt>
   160e8:	cmp	r0, #0
   160ec:	beq	160f4 <print_json_data@@Base+0x268>
   160f0:	bl	18294 <handle_coda_error@@Base>
   160f4:	ldr	r0, [sp, #16]
   160f8:	cmp	r0, #1
   160fc:	blt	165cc <print_json_data@@Base+0x740>
   16100:	add	r1, sp, #8
   16104:	mov	r0, r4
   16108:	bl	12744 <coda_cursor_get_type@plt>
   1610c:	cmp	r0, #0
   16110:	beq	16118 <print_json_data@@Base+0x28c>
   16114:	bl	18294 <handle_coda_error@@Base>
   16118:	ldr	r0, [sp, #8]
   1611c:	sub	r1, fp, #36	; 0x24
   16120:	bl	12948 <coda_type_get_record_union_status@plt>
   16124:	cmp	r0, #0
   16128:	beq	16130 <print_json_data@@Base+0x2a4>
   1612c:	bl	18294 <handle_coda_error@@Base>
   16130:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16134:	cmp	r0, #0
   16138:	beq	164d4 <print_json_data@@Base+0x648>
   1613c:	sub	r1, fp, #40	; 0x28
   16140:	mov	r0, r4
   16144:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   16148:	cmp	r0, #0
   1614c:	beq	16154 <print_json_data@@Base+0x2c8>
   16150:	bl	18294 <handle_coda_error@@Base>
   16154:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16158:	ldr	r0, [sp, #8]
   1615c:	sub	r2, fp, #44	; 0x2c
   16160:	bl	12a80 <coda_type_get_record_field_name@plt>
   16164:	cmp	r0, #0
   16168:	beq	16170 <print_json_data@@Base+0x2e4>
   1616c:	bl	18294 <handle_coda_error@@Base>
   16170:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16174:	mov	r0, r4
   16178:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   1617c:	cmp	r0, #0
   16180:	beq	16188 <print_json_data@@Base+0x2fc>
   16184:	bl	18294 <handle_coda_error@@Base>
   16188:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1618c:	movw	r0, #41900	; 0xa3ac
   16190:	movt	r0, #1
   16194:	bl	16834 <print_json_data@@Base+0x9a8>
   16198:	mov	r0, r4
   1619c:	bl	15f68 <print_json_data@@Base+0xdc>
   161a0:	b	165c4 <print_json_data@@Base+0x738>
   161a4:	movw	r0, #42078	; 0xa45e
   161a8:	movt	r0, #1
   161ac:	bl	16834 <print_json_data@@Base+0x9a8>
   161b0:	add	r6, sp, #16
   161b4:	add	r1, sp, #8
   161b8:	mov	r0, r4
   161bc:	mov	r2, r6
   161c0:	bl	12990 <coda_cursor_get_array_dim@plt>
   161c4:	cmp	r0, #0
   161c8:	beq	161d0 <print_json_data@@Base+0x344>
   161cc:	bl	18294 <handle_coda_error@@Base>
   161d0:	ldr	r8, [sp, #8]
   161d4:	cmp	r8, #0
   161d8:	bmi	167d0 <print_json_data@@Base+0x944>
   161dc:	beq	165d8 <print_json_data@@Base+0x74c>
   161e0:	cmp	r8, #4
   161e4:	bcs	16688 <print_json_data@@Base+0x7fc>
   161e8:	mov	lr, #0
   161ec:	mov	r6, #1
   161f0:	b	16740 <print_json_data@@Base+0x8b4>
   161f4:	sub	r1, fp, #36	; 0x24
   161f8:	mov	r0, r4
   161fc:	bl	127c8 <coda_cursor_get_special_type@plt>
   16200:	cmp	r0, #0
   16204:	beq	1620c <print_json_data@@Base+0x380>
   16208:	bl	18294 <handle_coda_error@@Base>
   1620c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16210:	cmp	r0, #3
   16214:	bhi	167dc <print_json_data@@Base+0x950>
   16218:	add	r1, pc, #0
   1621c:	ldr	pc, [r1, r0, lsl #2]
   16220:	andeq	r6, r1, r0, lsr r2
   16224:	andeq	r6, r1, r0, ror #11
   16228:	andeq	r6, r1, r0, lsl #12
   1622c:	andeq	r6, r1, ip, asr #12
   16230:	movw	r0, #41991	; 0xa407
   16234:	movt	r0, #1
   16238:	b	167d8 <print_json_data@@Base+0x94c>
   1623c:	add	r1, sp, #16
   16240:	mov	r0, r4
   16244:	bl	12720 <coda_cursor_read_uint32@plt>
   16248:	cmp	r0, #0
   1624c:	beq	16254 <print_json_data@@Base+0x3c8>
   16250:	bl	18294 <handle_coda_error@@Base>
   16254:	ldr	r1, [sp, #16]
   16258:	movw	r0, #40400	; 0x9dd0
   1625c:	movt	r0, #1
   16260:	bl	16834 <print_json_data@@Base+0x9a8>
   16264:	b	167dc <print_json_data@@Base+0x950>
   16268:	add	r1, sp, #16
   1626c:	mov	r0, r4
   16270:	bl	128ac <coda_cursor_read_double@plt>
   16274:	cmp	r0, #0
   16278:	beq	16280 <print_json_data@@Base+0x3f4>
   1627c:	bl	18294 <handle_coda_error@@Base>
   16280:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16284:	vldr	d16, [sp, #16]
   16288:	movw	r2, #40404	; 0x9dd4
   1628c:	movw	r0, #40409	; 0x9dd9
   16290:	movt	r2, #1
   16294:	movt	r0, #1
   16298:	cmp	r1, #8
   1629c:	moveq	r0, r2
   162a0:	vmov	r2, r3, d16
   162a4:	b	16680 <print_json_data@@Base+0x7f4>
   162a8:	add	r1, sp, #8
   162ac:	mov	r0, r4
   162b0:	bl	129b4 <coda_cursor_read_int64@plt>
   162b4:	cmp	r0, #0
   162b8:	beq	162c0 <print_json_data@@Base+0x434>
   162bc:	bl	18294 <handle_coda_error@@Base>
   162c0:	ldr	r0, [sp, #8]
   162c4:	ldr	r1, [sp, #12]
   162c8:	add	r4, sp, #16
   162cc:	mov	r2, r4
   162d0:	bl	12ab0 <coda_str64@plt>
   162d4:	b	16304 <print_json_data@@Base+0x478>
   162d8:	add	r1, sp, #8
   162dc:	mov	r0, r4
   162e0:	bl	128a0 <coda_cursor_read_uint64@plt>
   162e4:	cmp	r0, #0
   162e8:	beq	162f0 <print_json_data@@Base+0x464>
   162ec:	bl	18294 <handle_coda_error@@Base>
   162f0:	ldr	r0, [sp, #8]
   162f4:	ldr	r1, [sp, #12]
   162f8:	add	r4, sp, #16
   162fc:	mov	r2, r4
   16300:	bl	126f0 <coda_str64u@plt>
   16304:	movw	r0, #42262	; 0xa516
   16308:	mov	r1, r4
   1630c:	movt	r0, #1
   16310:	bl	16834 <print_json_data@@Base+0x9a8>
   16314:	b	167dc <print_json_data@@Base+0x950>
   16318:	add	r1, sp, #16
   1631c:	mov	r0, r4
   16320:	bl	1290c <coda_cursor_read_char@plt>
   16324:	cmp	r0, #0
   16328:	beq	16330 <print_json_data@@Base+0x4a4>
   1632c:	bl	18294 <handle_coda_error@@Base>
   16330:	movw	r4, #42064	; 0xa450
   16334:	movt	r4, #1
   16338:	mov	r0, r4
   1633c:	bl	16834 <print_json_data@@Base+0x9a8>
   16340:	add	r0, sp, #16
   16344:	mov	r1, #1
   16348:	bl	1687c <print_json_data@@Base+0x9f0>
   1634c:	mov	r0, r4
   16350:	b	167d8 <print_json_data@@Base+0x94c>
   16354:	add	r1, sp, #16
   16358:	mov	r0, r4
   1635c:	bl	12894 <coda_cursor_get_string_length@plt>
   16360:	cmp	r0, #0
   16364:	beq	1636c <print_json_data@@Base+0x4e0>
   16368:	bl	18294 <handle_coda_error@@Base>
   1636c:	ldr	r0, [sp, #16]
   16370:	add	r6, r0, #1
   16374:	mov	r0, r6
   16378:	bl	12834 <malloc@plt>
   1637c:	mov	r5, r0
   16380:	cmp	r0, #0
   16384:	bne	163b8 <print_json_data@@Base+0x52c>
   16388:	movw	r1, #40233	; 0x9d29
   1638c:	movw	r3, #41908	; 0xa3b4
   16390:	movw	r0, #303	; 0x12f
   16394:	mov	r2, r6
   16398:	movt	r1, #1
   1639c:	movt	r3, #1
   163a0:	str	r0, [sp]
   163a4:	mvn	r0, #0
   163a8:	bl	126b4 <coda_set_error@plt>
   163ac:	bl	18294 <handle_coda_error@@Base>
   163b0:	ldr	r0, [sp, #16]
   163b4:	add	r6, r0, #1
   163b8:	mov	r0, r4
   163bc:	mov	r1, r5
   163c0:	mov	r2, r6
   163c4:	bl	12858 <coda_cursor_read_string@plt>
   163c8:	cmp	r0, #0
   163cc:	beq	163d4 <print_json_data@@Base+0x548>
   163d0:	bl	18294 <handle_coda_error@@Base>
   163d4:	movw	r4, #42064	; 0xa450
   163d8:	movt	r4, #1
   163dc:	mov	r0, r4
   163e0:	bl	16834 <print_json_data@@Base+0x9a8>
   163e4:	ldr	r1, [sp, #16]
   163e8:	mov	r0, r5
   163ec:	bl	1687c <print_json_data@@Base+0x9f0>
   163f0:	ldr	r1, [sp, #16]
   163f4:	mov	r0, r4
   163f8:	bl	16834 <print_json_data@@Base+0x9a8>
   163fc:	mov	r0, r5
   16400:	bl	126fc <free@plt>
   16404:	b	167dc <print_json_data@@Base+0x950>
   16408:	add	r1, sp, #16
   1640c:	mov	r0, r4
   16410:	bl	12a14 <coda_cursor_get_bit_size@plt>
   16414:	cmp	r0, #0
   16418:	beq	16420 <print_json_data@@Base+0x594>
   1641c:	bl	18294 <handle_coda_error@@Base>
   16420:	ldr	r7, [sp, #16]
   16424:	ldr	r6, [sp, #20]
   16428:	lsr	r0, r7, #3
   1642c:	tst	r7, #7
   16430:	orr	r5, r0, r6, lsl #29
   16434:	addne	r5, r5, #1
   16438:	mov	r0, r5
   1643c:	bl	12834 <malloc@plt>
   16440:	mov	r8, r0
   16444:	cmp	r0, #0
   16448:	bne	1647c <print_json_data@@Base+0x5f0>
   1644c:	movw	r1, #40233	; 0x9d29
   16450:	movw	r3, #41908	; 0xa3b4
   16454:	movw	r0, #334	; 0x14e
   16458:	mov	r2, r5
   1645c:	movt	r1, #1
   16460:	movt	r3, #1
   16464:	str	r0, [sp]
   16468:	mvn	r0, #0
   1646c:	bl	126b4 <coda_set_error@plt>
   16470:	bl	18294 <handle_coda_error@@Base>
   16474:	ldr	r7, [sp, #16]
   16478:	ldr	r6, [sp, #20]
   1647c:	mov	r0, r4
   16480:	mov	r1, r8
   16484:	mov	r2, #0
   16488:	mov	r3, #0
   1648c:	str	r7, [sp]
   16490:	str	r6, [sp, #4]
   16494:	bl	12aa4 <coda_cursor_read_bits@plt>
   16498:	cmp	r0, #0
   1649c:	beq	164a4 <print_json_data@@Base+0x618>
   164a0:	bl	18294 <handle_coda_error@@Base>
   164a4:	movw	r4, #42064	; 0xa450
   164a8:	movt	r4, #1
   164ac:	mov	r0, r4
   164b0:	bl	16834 <print_json_data@@Base+0x9a8>
   164b4:	mov	r0, r8
   164b8:	mov	r1, r5
   164bc:	bl	1687c <print_json_data@@Base+0x9f0>
   164c0:	mov	r0, r4
   164c4:	bl	16834 <print_json_data@@Base+0x9a8>
   164c8:	mov	r0, r8
   164cc:	bl	126fc <free@plt>
   164d0:	b	167dc <print_json_data@@Base+0x950>
   164d4:	mov	r0, r4
   164d8:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   164dc:	cmp	r0, #0
   164e0:	beq	164e8 <print_json_data@@Base+0x65c>
   164e4:	bl	18294 <handle_coda_error@@Base>
   164e8:	ldr	r0, [sp, #16]
   164ec:	mov	r1, #0
   164f0:	str	r1, [fp, #-40]	; 0xffffffd8
   164f4:	cmp	r0, #1
   164f8:	blt	165c4 <print_json_data@@Base+0x738>
   164fc:	movw	r8, #40978	; 0xa012
   16500:	movw	r6, #41900	; 0xa3ac
   16504:	mov	r7, #1
   16508:	add	r5, sp, #48	; 0x30
   1650c:	sub	r9, fp, #44	; 0x2c
   16510:	movt	r8, #1
   16514:	movt	r6, #1
   16518:	b	16534 <print_json_data@@Base+0x6a8>
   1651c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16520:	add	r1, r0, #1
   16524:	ldr	r0, [sp, #16]
   16528:	str	r1, [fp, #-40]	; 0xffffffd8
   1652c:	cmp	r1, r0
   16530:	bge	165c4 <print_json_data@@Base+0x738>
   16534:	ldr	r0, [sp, #8]
   16538:	mov	r2, r5
   1653c:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   16540:	cmp	r0, #0
   16544:	beq	1654c <print_json_data@@Base+0x6c0>
   16548:	bl	18294 <handle_coda_error@@Base>
   1654c:	ldr	r0, [sp, #48]	; 0x30
   16550:	cmp	r0, #0
   16554:	bne	16598 <print_json_data@@Base+0x70c>
   16558:	cmp	r7, #0
   1655c:	moveq	r0, r8
   16560:	bleq	16834 <print_json_data@@Base+0x9a8>
   16564:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16568:	ldr	r0, [sp, #8]
   1656c:	mov	r2, r9
   16570:	bl	12a80 <coda_type_get_record_field_name@plt>
   16574:	cmp	r0, #0
   16578:	beq	16580 <print_json_data@@Base+0x6f4>
   1657c:	bl	18294 <handle_coda_error@@Base>
   16580:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16584:	mov	r0, r6
   16588:	bl	16834 <print_json_data@@Base+0x9a8>
   1658c:	mov	r0, r4
   16590:	bl	15f68 <print_json_data@@Base+0xdc>
   16594:	mov	r7, #0
   16598:	ldr	r0, [sp, #16]
   1659c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   165a0:	sub	r0, r0, #1
   165a4:	cmp	r1, r0
   165a8:	bge	1651c <print_json_data@@Base+0x690>
   165ac:	mov	r0, r4
   165b0:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   165b4:	cmp	r0, #0
   165b8:	beq	1651c <print_json_data@@Base+0x690>
   165bc:	bl	18294 <handle_coda_error@@Base>
   165c0:	b	1651c <print_json_data@@Base+0x690>
   165c4:	mov	r0, r4
   165c8:	bl	12864 <coda_cursor_goto_parent@plt>
   165cc:	movw	r0, #41906	; 0xa3b2
   165d0:	movt	r0, #1
   165d4:	b	167d8 <print_json_data@@Base+0x94c>
   165d8:	mov	r6, #1
   165dc:	b	16764 <print_json_data@@Base+0x8d8>
   165e0:	add	r1, sp, #16
   165e4:	mov	r0, r4
   165e8:	bl	128ac <coda_cursor_read_double@plt>
   165ec:	cmp	r0, #0
   165f0:	beq	165f8 <print_json_data@@Base+0x76c>
   165f4:	bl	18294 <handle_coda_error@@Base>
   165f8:	vldr	d16, [sp, #16]
   165fc:	b	1663c <print_json_data@@Base+0x7b0>
   16600:	add	r1, sp, #8
   16604:	mov	r0, r4
   16608:	bl	128ac <coda_cursor_read_double@plt>
   1660c:	cmp	r0, #0
   16610:	beq	16618 <print_json_data@@Base+0x78c>
   16614:	bl	18294 <handle_coda_error@@Base>
   16618:	vldr	d0, [sp, #8]
   1661c:	bl	128b8 <coda_isNaN@plt>
   16620:	cmp	r0, #0
   16624:	bne	16638 <print_json_data@@Base+0x7ac>
   16628:	vldr	d0, [sp, #8]
   1662c:	bl	1275c <coda_isInf@plt>
   16630:	cmp	r0, #0
   16634:	beq	167f8 <print_json_data@@Base+0x96c>
   16638:	vldr	d16, [sp, #8]
   1663c:	movw	r0, #40409	; 0x9dd9
   16640:	vmov	r2, r3, d16
   16644:	movt	r0, #1
   16648:	b	16680 <print_json_data@@Base+0x7f4>
   1664c:	add	r1, sp, #16
   16650:	add	r2, sp, #8
   16654:	mov	r0, r4
   16658:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   1665c:	cmp	r0, #0
   16660:	beq	16668 <print_json_data@@Base+0x7dc>
   16664:	bl	18294 <handle_coda_error@@Base>
   16668:	vldr	d16, [sp, #16]
   1666c:	vldr	d17, [sp, #8]
   16670:	movw	r0, #42052	; 0xa444
   16674:	movt	r0, #1
   16678:	vmov	r2, r3, d16
   1667c:	vstr	d17, [sp]
   16680:	bl	16834 <print_json_data@@Base+0x9a8>
   16684:	b	167dc <print_json_data@@Base+0x950>
   16688:	bic	lr, r8, #3
   1668c:	mov	r2, #1
   16690:	vmov.i32	q8, #1	; 0x00000001
   16694:	sub	r3, lr, #4
   16698:	add	r2, r2, r3, lsr #2
   1669c:	cmp	r3, #12
   166a0:	and	ip, r2, #3
   166a4:	bcs	166b8 <print_json_data@@Base+0x82c>
   166a8:	mov	r3, #0
   166ac:	cmp	ip, #0
   166b0:	bne	1670c <print_json_data@@Base+0x880>
   166b4:	b	16728 <print_json_data@@Base+0x89c>
   166b8:	sub	r7, r2, ip
   166bc:	mov	r3, #0
   166c0:	mov	r2, #64	; 0x40
   166c4:	mov	r5, r6
   166c8:	vld1.32	{d18-d19}, [r5], r2
   166cc:	add	r0, r6, #16
   166d0:	add	r1, r6, #32
   166d4:	subs	r7, r7, #4
   166d8:	add	r3, r3, #16
   166dc:	vld1.32	{d20-d21}, [r0]
   166e0:	add	r0, r6, #48	; 0x30
   166e4:	mov	r6, r5
   166e8:	vmul.i32	q8, q9, q8
   166ec:	vld1.32	{d18-d19}, [r1]
   166f0:	vmul.i32	q8, q10, q8
   166f4:	vld1.32	{d20-d21}, [r0]
   166f8:	vmul.i32	q8, q9, q8
   166fc:	vmul.i32	q8, q10, q8
   16700:	bne	166c8 <print_json_data@@Base+0x83c>
   16704:	cmp	ip, #0
   16708:	beq	16728 <print_json_data@@Base+0x89c>
   1670c:	add	r0, sp, #16
   16710:	add	r2, r0, r3, lsl #2
   16714:	rsb	r3, ip, #0
   16718:	vld1.32	{d18-d19}, [r2]!
   1671c:	adds	r3, r3, #1
   16720:	vmul.i32	q8, q9, q8
   16724:	bcc	16718 <print_json_data@@Base+0x88c>
   16728:	vext.8	q9, q8, q8, #8
   1672c:	cmp	r8, lr
   16730:	vmul.i32	q0, q8, q9
   16734:	vmul.i32	q8, q0, d0[1]
   16738:	vmov.32	r6, d16[0]
   1673c:	beq	1675c <print_json_data@@Base+0x8d0>
   16740:	add	r0, sp, #16
   16744:	add	r2, r0, lr, lsl #2
   16748:	sub	r0, r8, lr
   1674c:	ldr	r1, [r2], #4
   16750:	subs	r0, r0, #1
   16754:	mul	r6, r1, r6
   16758:	bne	1674c <print_json_data@@Base+0x8c0>
   1675c:	cmp	r6, #1
   16760:	blt	167d0 <print_json_data@@Base+0x944>
   16764:	mov	r0, r4
   16768:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   1676c:	cmp	r0, #0
   16770:	beq	16778 <print_json_data@@Base+0x8ec>
   16774:	bl	18294 <handle_coda_error@@Base>
   16778:	movw	r8, #40978	; 0xa012
   1677c:	sub	r7, r6, #1
   16780:	mov	r5, #0
   16784:	movt	r8, #1
   16788:	b	16798 <print_json_data@@Base+0x90c>
   1678c:	add	r5, r5, #1
   16790:	cmp	r6, r5
   16794:	beq	167c8 <print_json_data@@Base+0x93c>
   16798:	mov	r0, r4
   1679c:	bl	15f68 <print_json_data@@Base+0xdc>
   167a0:	cmp	r5, r7
   167a4:	bge	1678c <print_json_data@@Base+0x900>
   167a8:	mov	r0, r8
   167ac:	bl	16834 <print_json_data@@Base+0x9a8>
   167b0:	mov	r0, r4
   167b4:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   167b8:	cmp	r0, #0
   167bc:	beq	1678c <print_json_data@@Base+0x900>
   167c0:	bl	18294 <handle_coda_error@@Base>
   167c4:	b	1678c <print_json_data@@Base+0x900>
   167c8:	mov	r0, r4
   167cc:	bl	12864 <coda_cursor_goto_parent@plt>
   167d0:	movw	r0, #42325	; 0xa555
   167d4:	movt	r0, #1
   167d8:	bl	16834 <print_json_data@@Base+0x9a8>
   167dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167e0:	cmp	r0, #0
   167e4:	movwne	r0, #41906	; 0xa3b2
   167e8:	movtne	r0, #1
   167ec:	blne	16834 <print_json_data@@Base+0x9a8>
   167f0:	sub	sp, fp, #24
   167f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   167f8:	vldr	d0, [sp, #8]
   167fc:	movw	r0, #41996	; 0xa40c
   16800:	add	r1, sp, #16
   16804:	movt	r0, #1
   16808:	bl	126d8 <coda_time_double_to_string@plt>
   1680c:	cmp	r0, #0
   16810:	beq	16820 <print_json_data@@Base+0x994>
   16814:	movw	r0, #42025	; 0xa429
   16818:	movt	r0, #1
   1681c:	b	167d8 <print_json_data@@Base+0x94c>
   16820:	movw	r0, #42328	; 0xa558
   16824:	add	r1, sp, #16
   16828:	movt	r0, #1
   1682c:	bl	16834 <print_json_data@@Base+0x9a8>
   16830:	b	167dc <print_json_data@@Base+0x950>
   16834:	sub	sp, sp, #12
   16838:	push	{fp, lr}
   1683c:	mov	fp, sp
   16840:	sub	sp, sp, #4
   16844:	mov	ip, r0
   16848:	add	r0, fp, #8
   1684c:	stm	r0, {r1, r2, r3}
   16850:	movw	r0, #53392	; 0xd090
   16854:	add	r2, fp, #8
   16858:	mov	r1, ip
   1685c:	movt	r0, #2
   16860:	str	r2, [sp]
   16864:	ldr	r0, [r0]
   16868:	bl	129c0 <vfprintf@plt>
   1686c:	mov	sp, fp
   16870:	pop	{fp, lr}
   16874:	add	sp, sp, #12
   16878:	bx	lr
   1687c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16880:	add	fp, sp, #28
   16884:	sub	sp, sp, #4
   16888:	cmp	r1, #1
   1688c:	blt	169c8 <print_json_data@@Base+0xb3c>
   16890:	movw	r6, #40376	; 0x9db8
   16894:	movw	r8, #40379	; 0x9dbb
   16898:	movw	r9, #40385	; 0x9dc1
   1689c:	movw	sl, #40388	; 0x9dc4
   168a0:	movw	r7, #42063	; 0xa44f
   168a4:	mov	r4, r1
   168a8:	mov	r5, r0
   168ac:	movt	r6, #1
   168b0:	movt	r8, #1
   168b4:	movt	r9, #1
   168b8:	movt	sl, #1
   168bc:	movt	r7, #1
   168c0:	b	168d8 <print_json_data@@Base+0xa4c>
   168c4:	mov	r0, r7
   168c8:	bl	16834 <print_json_data@@Base+0x9a8>
   168cc:	add	r5, r5, #1
   168d0:	subs	r4, r4, #1
   168d4:	beq	169c8 <print_json_data@@Base+0xb3c>
   168d8:	ldrb	r1, [r5]
   168dc:	sub	r0, r1, #8
   168e0:	cmp	r0, #26
   168e4:	bhi	16968 <print_json_data@@Base+0xadc>
   168e8:	add	r2, pc, #0
   168ec:	ldr	pc, [r2, r0, lsl #2]
   168f0:	andeq	r6, r1, ip, asr r9
   168f4:	muleq	r1, r8, r9
   168f8:	andeq	r6, r1, r0, lsr #19
   168fc:	andeq	r6, r1, ip, ror r9
   16900:	andeq	r6, r1, r8, lsr #19
   16904:			; <UNDEFINED> instruction: 0x000169b0
   16908:	andeq	r6, r1, ip, ror r9
   1690c:	andeq	r6, r1, ip, ror r9
   16910:	andeq	r6, r1, ip, ror r9
   16914:	andeq	r6, r1, ip, ror r9
   16918:	andeq	r6, r1, ip, ror r9
   1691c:	andeq	r6, r1, ip, ror r9
   16920:	andeq	r6, r1, ip, ror r9
   16924:	andeq	r6, r1, ip, ror r9
   16928:	andeq	r6, r1, ip, ror r9
   1692c:	andeq	r6, r1, ip, ror r9
   16930:	andeq	r6, r1, ip, ror r9
   16934:	andeq	r6, r1, ip, ror r9
   16938:	andeq	r6, r1, ip, ror r9
   1693c:	andeq	r6, r1, ip, ror r9
   16940:	andeq	r6, r1, ip, ror r9
   16944:	andeq	r6, r1, ip, ror r9
   16948:	andeq	r6, r1, ip, ror r9
   1694c:	andeq	r6, r1, ip, ror r9
   16950:	andeq	r6, r1, ip, ror r9
   16954:	andeq	r6, r1, ip, ror r9
   16958:	andeq	r6, r1, r4, asr #17
   1695c:	movw	r0, #40373	; 0x9db5
   16960:	movt	r0, #1
   16964:	b	168c8 <print_json_data@@Base+0xa3c>
   16968:	cmp	r1, #92	; 0x5c
   1696c:	bne	1697c <print_json_data@@Base+0xaf0>
   16970:	movw	r0, #40391	; 0x9dc7
   16974:	movt	r0, #1
   16978:	b	168c8 <print_json_data@@Base+0xa3c>
   1697c:	sub	r0, r1, #32
   16980:	uxtb	r0, r0
   16984:	cmp	r0, #94	; 0x5e
   16988:	bhi	169b8 <print_json_data@@Base+0xb2c>
   1698c:	movw	r0, #40818	; 0x9f72
   16990:	movt	r0, #1
   16994:	b	169c0 <print_json_data@@Base+0xb34>
   16998:	mov	r0, r6
   1699c:	b	168c8 <print_json_data@@Base+0xa3c>
   169a0:	mov	r0, r8
   169a4:	b	168c8 <print_json_data@@Base+0xa3c>
   169a8:	mov	r0, r9
   169ac:	b	168c8 <print_json_data@@Base+0xa3c>
   169b0:	mov	r0, sl
   169b4:	b	168c8 <print_json_data@@Base+0xa3c>
   169b8:	movw	r0, #42066	; 0xa452
   169bc:	movt	r0, #1
   169c0:	bl	16834 <print_json_data@@Base+0x9a8>
   169c4:	b	168cc <print_json_data@@Base+0xa40>
   169c8:	sub	sp, fp, #28
   169cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000169d0 <print_full_field_name@@Base>:
   169d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169d4:	add	fp, sp, #28
   169d8:	sub	sp, sp, #12
   169dc:	mov	sl, r2
   169e0:	mov	r4, r0
   169e4:	cmp	r1, #1
   169e8:	bne	16ad0 <print_full_field_name@@Base+0x100>
   169ec:	movw	r5, #49640	; 0xc1e8
   169f0:	mov	r6, #0
   169f4:	str	sl, [sp]
   169f8:	movt	r5, #2
   169fc:	ldr	r0, [r5, #136]	; 0x88
   16a00:	cmp	r0, #1
   16a04:	blt	16b2c <print_full_field_name@@Base+0x15c>
   16a08:	movw	r9, #42073	; 0xa459
   16a0c:	add	sl, sp, #8
   16a10:	mov	r7, #0
   16a14:	mov	r8, #0
   16a18:	movt	r9, #1
   16a1c:	b	16a34 <print_full_field_name@@Base+0x64>
   16a20:	add	r6, r6, #1
   16a24:	ldr	r0, [r5, #136]	; 0x88
   16a28:	add	r8, r8, #1
   16a2c:	cmp	r8, r0
   16a30:	bge	16b2c <print_full_field_name@@Base+0x15c>
   16a34:	add	r0, r5, r8, lsl #2
   16a38:	mov	r1, sl
   16a3c:	ldr	r0, [r0, #8]
   16a40:	bl	12ac8 <coda_type_get_class@plt>
   16a44:	cmp	r0, #0
   16a48:	beq	16a50 <print_full_field_name@@Base+0x80>
   16a4c:	bl	18294 <handle_coda_error@@Base>
   16a50:	ldr	r0, [sp, #8]
   16a54:	cmp	r0, #1
   16a58:	beq	16a80 <print_full_field_name@@Base+0xb0>
   16a5c:	cmp	r0, #0
   16a60:	bne	16a24 <print_full_field_name@@Base+0x54>
   16a64:	add	r0, r5, r7, lsl #2
   16a68:	mov	r1, r9
   16a6c:	ldr	r2, [r0, #3620]	; 0xe24
   16a70:	mov	r0, r4
   16a74:	bl	128c4 <fprintf@plt>
   16a78:	add	r7, r7, #1
   16a7c:	b	16a24 <print_full_field_name@@Base+0x54>
   16a80:	cmp	r8, #0
   16a84:	bne	16a94 <print_full_field_name@@Base+0xc4>
   16a88:	mov	r0, #47	; 0x2f
   16a8c:	mov	r1, r4
   16a90:	bl	129fc <fputc@plt>
   16a94:	add	r0, r6, r6, lsl #2
   16a98:	add	r0, r5, r0, lsl #4
   16a9c:	ldr	r0, [r0, #804]	; 0x324
   16aa0:	cmp	r0, #1
   16aa4:	blt	16a20 <print_full_field_name@@Base+0x50>
   16aa8:	mov	r0, #91	; 0x5b
   16aac:	mov	r1, r4
   16ab0:	bl	129fc <fputc@plt>
   16ab4:	mov	r0, r4
   16ab8:	mov	r1, r6
   16abc:	bl	16c94 <print_full_field_name@@Base+0x2c4>
   16ac0:	mov	r0, #93	; 0x5d
   16ac4:	mov	r1, r4
   16ac8:	bl	129fc <fputc@plt>
   16acc:	b	16a20 <print_full_field_name@@Base+0x50>
   16ad0:	movw	r7, #49640	; 0xc1e8
   16ad4:	mov	r5, r1
   16ad8:	movt	r7, #2
   16adc:	ldr	r0, [r7, #3748]	; 0xea4
   16ae0:	cmp	r0, #1
   16ae4:	blt	16b60 <print_full_field_name@@Base+0x190>
   16ae8:	mov	r6, #0
   16aec:	cmp	r6, #0
   16af0:	bne	16b1c <print_full_field_name@@Base+0x14c>
   16af4:	add	r0, r7, r6, lsl #2
   16af8:	mov	r1, r4
   16afc:	ldr	r0, [r0, #3620]	; 0xe24
   16b00:	bl	12a8c <fputs@plt>
   16b04:	ldr	r0, [r7, #3748]	; 0xea4
   16b08:	add	r6, r6, #1
   16b0c:	cmp	r6, r0
   16b10:	bge	16b60 <print_full_field_name@@Base+0x190>
   16b14:	cmp	r6, #0
   16b18:	beq	16af4 <print_full_field_name@@Base+0x124>
   16b1c:	mov	r0, #46	; 0x2e
   16b20:	mov	r1, r4
   16b24:	bl	129fc <fputc@plt>
   16b28:	b	16af4 <print_full_field_name@@Base+0x124>
   16b2c:	ldr	r0, [sp]
   16b30:	cmp	r0, #0
   16b34:	beq	16c8c <print_full_field_name@@Base+0x2bc>
   16b38:	ldr	r0, [r5, #3360]	; 0xd20
   16b3c:	cmp	r6, r0
   16b40:	bge	16c8c <print_full_field_name@@Base+0x2bc>
   16b44:	mov	r0, #91	; 0x5b
   16b48:	mov	r1, r4
   16b4c:	bl	129fc <fputc@plt>
   16b50:	mov	r0, r4
   16b54:	mov	r1, r6
   16b58:	bl	16c94 <print_full_field_name@@Base+0x2c4>
   16b5c:	b	16c80 <print_full_field_name@@Base+0x2b0>
   16b60:	cmp	r5, #2
   16b64:	bne	16c8c <print_full_field_name@@Base+0x2bc>
   16b68:	ldr	r0, [r7, #136]	; 0x88
   16b6c:	mov	r6, #0
   16b70:	cmp	r0, #1
   16b74:	blt	16c18 <print_full_field_name@@Base+0x248>
   16b78:	movw	r9, #42077	; 0xa45d
   16b7c:	add	r8, sp, #4
   16b80:	mov	r5, #0
   16b84:	movt	r9, #1
   16b88:	b	16bc0 <print_full_field_name@@Base+0x1f0>
   16b8c:	mov	r0, r9
   16b90:	mov	r1, #2
   16b94:	mov	r2, #1
   16b98:	mov	r3, r4
   16b9c:	bl	127e0 <fwrite@plt>
   16ba0:	mov	r0, r4
   16ba4:	mov	r1, r6
   16ba8:	bl	16c94 <print_full_field_name@@Base+0x2c4>
   16bac:	add	r6, r6, #1
   16bb0:	ldr	r0, [r7, #136]	; 0x88
   16bb4:	add	r5, r5, #1
   16bb8:	cmp	r5, r0
   16bbc:	bge	16c18 <print_full_field_name@@Base+0x248>
   16bc0:	add	r0, r7, r5, lsl #2
   16bc4:	mov	r1, r8
   16bc8:	ldr	r0, [r0, #8]
   16bcc:	bl	12ac8 <coda_type_get_class@plt>
   16bd0:	cmp	r0, #0
   16bd4:	beq	16bdc <print_full_field_name@@Base+0x20c>
   16bd8:	bl	18294 <handle_coda_error@@Base>
   16bdc:	ldr	r0, [sp, #4]
   16be0:	cmp	r0, #1
   16be4:	bne	16bb0 <print_full_field_name@@Base+0x1e0>
   16be8:	add	r0, r6, r6, lsl #2
   16bec:	add	r0, r7, r0, lsl #4
   16bf0:	ldr	r1, [r0, #804]	; 0x324
   16bf4:	cmp	r1, #1
   16bf8:	blt	16bb0 <print_full_field_name@@Base+0x1e0>
   16bfc:	ldr	r0, [r0, #800]	; 0x320
   16c00:	cmp	r0, #0
   16c04:	beq	16b8c <print_full_field_name@@Base+0x1bc>
   16c08:	mov	r0, #44	; 0x2c
   16c0c:	mov	r1, r4
   16c10:	bl	129fc <fputc@plt>
   16c14:	b	16ba0 <print_full_field_name@@Base+0x1d0>
   16c18:	cmp	sl, #0
   16c1c:	beq	16c78 <print_full_field_name@@Base+0x2a8>
   16c20:	ldr	r0, [r7, #3360]	; 0xd20
   16c24:	cmp	r6, r0
   16c28:	bge	16c78 <print_full_field_name@@Base+0x2a8>
   16c2c:	add	r0, r6, r6, lsl #2
   16c30:	add	r0, r7, r0, lsl #4
   16c34:	ldr	r0, [r0, #800]	; 0x320
   16c38:	cmp	r0, #0
   16c3c:	beq	16c50 <print_full_field_name@@Base+0x280>
   16c40:	mov	r0, #44	; 0x2c
   16c44:	mov	r1, r4
   16c48:	bl	129fc <fputc@plt>
   16c4c:	b	16c68 <print_full_field_name@@Base+0x298>
   16c50:	movw	r0, #42077	; 0xa45d
   16c54:	mov	r1, #2
   16c58:	mov	r2, #1
   16c5c:	mov	r3, r4
   16c60:	movt	r0, #1
   16c64:	bl	127e0 <fwrite@plt>
   16c68:	mov	r0, r4
   16c6c:	mov	r1, r6
   16c70:	bl	16c94 <print_full_field_name@@Base+0x2c4>
   16c74:	add	r6, r6, #1
   16c78:	cmp	r6, #1
   16c7c:	blt	16c8c <print_full_field_name@@Base+0x2bc>
   16c80:	mov	r0, #93	; 0x5d
   16c84:	mov	r1, r4
   16c88:	bl	129fc <fputc@plt>
   16c8c:	sub	sp, fp, #28
   16c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c98:	add	fp, sp, #28
   16c9c:	sub	sp, sp, #4
   16ca0:	mov	r4, r0
   16ca4:	add	r0, r1, r1, lsl #2
   16ca8:	movw	r1, #49640	; 0xc1e8
   16cac:	movt	r1, #2
   16cb0:	add	r0, r1, r0, lsl #4
   16cb4:	mov	r7, r0
   16cb8:	ldr	r1, [r7, #804]!	; 0x324
   16cbc:	cmp	r1, #1
   16cc0:	blt	16d80 <print_full_field_name@@Base+0x3b0>
   16cc4:	movw	r8, #49636	; 0xc1e4
   16cc8:	movw	r9, #53424	; 0xd0b0
   16ccc:	add	sl, r0, #808	; 0x328
   16cd0:	add	r5, r0, #800	; 0x320
   16cd4:	mov	r6, #0
   16cd8:	movt	r8, #2
   16cdc:	movt	r9, #2
   16ce0:	cmp	r6, #0
   16ce4:	bne	16d18 <print_full_field_name@@Base+0x348>
   16ce8:	b	16d24 <print_full_field_name@@Base+0x354>
   16cec:	ldr	r2, [r0, #4]
   16cf0:	movw	r1, #42084	; 0xa464
   16cf4:	mov	r0, r4
   16cf8:	movt	r1, #1
   16cfc:	bl	128c4 <fprintf@plt>
   16d00:	ldr	r0, [r7]
   16d04:	add	r6, r6, #1
   16d08:	cmp	r6, r0
   16d0c:	bge	16d80 <print_full_field_name@@Base+0x3b0>
   16d10:	cmp	r6, #0
   16d14:	beq	16d24 <print_full_field_name@@Base+0x354>
   16d18:	mov	r0, #44	; 0x2c
   16d1c:	mov	r1, r4
   16d20:	bl	129fc <fputc@plt>
   16d24:	ldr	r0, [r8]
   16d28:	cmp	r0, #0
   16d2c:	beq	16d64 <print_full_field_name@@Base+0x394>
   16d30:	ldr	r0, [r5]
   16d34:	add	r0, r6, r0
   16d38:	add	r0, r9, r0, lsl #2
   16d3c:	ldr	r1, [r0, #72]	; 0x48
   16d40:	cmp	r1, #0
   16d44:	beq	16cec <print_full_field_name@@Base+0x31c>
   16d48:	ldr	r3, [r0, #4]
   16d4c:	ldr	r2, [r0, #36]	; 0x24
   16d50:	movw	r1, #42080	; 0xa460
   16d54:	mov	r0, r4
   16d58:	movt	r1, #1
   16d5c:	bl	128c4 <fprintf@plt>
   16d60:	b	16d00 <print_full_field_name@@Base+0x330>
   16d64:	ldr	r2, [sl, r6, lsl #2]
   16d68:	cmn	r2, #1
   16d6c:	bne	16cf0 <print_full_field_name@@Base+0x320>
   16d70:	mov	r0, #63	; 0x3f
   16d74:	mov	r1, r4
   16d78:	bl	129fc <fputc@plt>
   16d7c:	b	16d00 <print_full_field_name@@Base+0x330>
   16d80:	sub	sp, fp, #28
   16d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016d88 <traverse_info_init@@Base>:
   16d88:	movw	r0, #49640	; 0xc1e8
   16d8c:	mov	r1, #0
   16d90:	movt	r0, #2
   16d94:	str	r1, [r0, #3748]	; 0xea4
   16d98:	str	r1, [r0, #3360]	; 0xd20
   16d9c:	str	r1, [r0, #136]	; 0x88
   16da0:	str	r1, [r0, #4]
   16da4:	bx	lr

00016da8 <traverse_info_done@@Base>:
   16da8:	push	{r4, sl, fp, lr}
   16dac:	add	fp, sp, #8
   16db0:	movw	r4, #49640	; 0xc1e8
   16db4:	movt	r4, #2
   16db8:	ldr	r0, [r4, #4]
   16dbc:	cmp	r0, #0
   16dc0:	beq	16dc8 <traverse_info_done@@Base+0x20>
   16dc4:	bl	129a8 <coda_close@plt>
   16dc8:	ldr	r0, [r4, #664]	; 0x298
   16dcc:	cmp	r0, #0
   16dd0:	popeq	{r4, sl, fp, pc}
   16dd4:	add	r0, r4, #664	; 0x298
   16dd8:	pop	{r4, sl, fp, lr}
   16ddc:	b	15a10 <codadump_filter_remove@@Base>

00016de0 <traverse_product@@Base>:
   16de0:	push	{r4, r5, fp, lr}
   16de4:	add	fp, sp, #8
   16de8:	movw	r5, #49640	; 0xc1e8
   16dec:	movt	r5, #2
   16df0:	mov	r1, r5
   16df4:	ldr	r0, [r1], #4
   16df8:	bl	126c0 <coda_open@plt>
   16dfc:	cmp	r0, #0
   16e00:	beq	16e40 <traverse_product@@Base+0x60>
   16e04:	bl	12a68 <coda_get_errno@plt>
   16e08:	ldr	r0, [r0]
   16e0c:	cmn	r0, #21
   16e10:	bne	16e3c <traverse_product@@Base+0x5c>
   16e14:	mov	r0, #0
   16e18:	bl	12708 <coda_set_option_use_mmap@plt>
   16e1c:	mov	r1, r5
   16e20:	ldr	r0, [r1], #4
   16e24:	bl	126c0 <coda_open@plt>
   16e28:	mov	r4, r0
   16e2c:	mov	r0, #1
   16e30:	bl	12708 <coda_set_option_use_mmap@plt>
   16e34:	cmp	r4, #0
   16e38:	beq	16e40 <traverse_product@@Base+0x60>
   16e3c:	bl	18294 <handle_coda_error@@Base>
   16e40:	ldr	r1, [r5, #4]
   16e44:	add	r4, r5, #144	; 0x90
   16e48:	mov	r0, r4
   16e4c:	bl	127ec <coda_cursor_set_product@plt>
   16e50:	cmp	r0, #0
   16e54:	beq	16e5c <traverse_product@@Base+0x7c>
   16e58:	bl	18294 <handle_coda_error@@Base>
   16e5c:	ldr	r0, [r5, #136]	; 0x88
   16e60:	add	r0, r5, r0, lsl #2
   16e64:	add	r1, r0, #8
   16e68:	mov	r0, r4
   16e6c:	bl	12744 <coda_cursor_get_type@plt>
   16e70:	cmp	r0, #0
   16e74:	beq	16e7c <traverse_product@@Base+0x9c>
   16e78:	bl	18294 <handle_coda_error@@Base>
   16e7c:	bl	16e94 <traverse_product@@Base+0xb4>
   16e80:	ldr	r0, [r5, #4]
   16e84:	bl	129a8 <coda_close@plt>
   16e88:	mov	r0, #0
   16e8c:	str	r0, [r5, #4]
   16e90:	pop	{r4, r5, fp, pc}
   16e94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e98:	add	fp, sp, #24
   16e9c:	sub	sp, sp, #16
   16ea0:	movw	r6, #49640	; 0xc1e8
   16ea4:	add	r1, sp, #12
   16ea8:	movt	r6, #2
   16eac:	ldr	r0, [r6, #136]	; 0x88
   16eb0:	add	r0, r6, r0, lsl #2
   16eb4:	ldr	r0, [r0, #8]
   16eb8:	bl	12ac8 <coda_type_get_class@plt>
   16ebc:	cmp	r0, #0
   16ec0:	beq	16ec8 <traverse_product@@Base+0xe8>
   16ec4:	bl	18294 <handle_coda_error@@Base>
   16ec8:	ldr	r0, [sp, #12]
   16ecc:	cmp	r0, #6
   16ed0:	bhi	1711c <traverse_product@@Base+0x33c>
   16ed4:	add	r1, pc, #0
   16ed8:	ldr	pc, [r1, r0, lsl #2]
   16edc:	andeq	r6, r1, r4, asr pc
   16ee0:	andeq	r7, r1, r0, asr r0
   16ee4:	strdeq	r6, [r1], -r8
   16ee8:	strdeq	r6, [r1], -r8
   16eec:	strdeq	r6, [r1], -r8
   16ef0:	strdeq	r6, [r1], -r8
   16ef4:	andeq	r7, r1, r8, lsr #1
   16ef8:	ldr	r0, [r6, #136]	; 0x88
   16efc:	add	r1, sp, #8
   16f00:	add	r0, r6, r0, lsl #2
   16f04:	ldr	r0, [r0, #8]
   16f08:	bl	12888 <coda_type_get_read_type@plt>
   16f0c:	cmp	r0, #0
   16f10:	beq	16f18 <traverse_product@@Base+0x138>
   16f14:	bl	18294 <handle_coda_error@@Base>
   16f18:	ldr	r0, [sp, #8]
   16f1c:	sub	r0, r0, #11
   16f20:	cmp	r0, #1
   16f24:	bhi	17118 <traverse_product@@Base+0x338>
   16f28:	bl	148a0 <dim_enter_array@@Base>
   16f2c:	ldr	r0, [r6, #3360]	; 0xd20
   16f30:	add	r0, r0, #1
   16f34:	str	r0, [r6, #3360]	; 0xd20
   16f38:	bl	172e0 <traverse_product@@Base+0x500>
   16f3c:	ldr	r0, [r6, #3360]	; 0xd20
   16f40:	sub	r0, r0, #1
   16f44:	str	r0, [r6, #3360]	; 0xd20
   16f48:	bl	155f0 <dim_leave_array@@Base>
   16f4c:	sub	sp, fp, #24
   16f50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f54:	ldr	r0, [r6, #136]	; 0x88
   16f58:	cmp	r0, #30
   16f5c:	bgt	1711c <traverse_product@@Base+0x33c>
   16f60:	ldr	r1, [r6, #3748]	; 0xea4
   16f64:	add	r0, r6, r0, lsl #2
   16f68:	add	r1, r1, #1
   16f6c:	str	r1, [r6, #3748]	; 0xea4
   16f70:	add	r1, sp, #8
   16f74:	ldr	r0, [r0, #8]
   16f78:	bl	12870 <coda_type_get_num_record_fields@plt>
   16f7c:	cmp	r0, #0
   16f80:	beq	16f88 <traverse_product@@Base+0x1a8>
   16f84:	bl	18294 <handle_coda_error@@Base>
   16f88:	ldr	r0, [r6, #136]	; 0x88
   16f8c:	add	r0, r0, #1
   16f90:	str	r0, [r6, #136]	; 0x88
   16f94:	ldr	r0, [r6, #796]	; 0x31c
   16f98:	add	r0, r6, r0, lsl #2
   16f9c:	ldr	r8, [r0, #664]	; 0x298
   16fa0:	cmp	r8, #0
   16fa4:	beq	1712c <traverse_product@@Base+0x34c>
   16fa8:	add	r4, sp, #4
   16fac:	add	r7, r6, #664	; 0x298
   16fb0:	mov	r0, r8
   16fb4:	b	17008 <traverse_product@@Base+0x228>
   16fb8:	ldr	r0, [r6, #796]	; 0x31c
   16fbc:	ldr	r0, [r7, r0, lsl #2]
   16fc0:	bl	15af0 <codadump_filter_get_subfilter@@Base>
   16fc4:	ldr	r1, [r6, #796]	; 0x31c
   16fc8:	add	r1, r1, #1
   16fcc:	str	r0, [r7, r1, lsl #2]
   16fd0:	ldr	r0, [sp, #4]
   16fd4:	str	r1, [r6, #796]	; 0x31c
   16fd8:	mov	r1, #1
   16fdc:	bl	171c4 <traverse_product@@Base+0x3e4>
   16fe0:	ldr	r0, [r6, #796]	; 0x31c
   16fe4:	sub	r0, r0, #1
   16fe8:	str	r0, [r6, #796]	; 0x31c
   16fec:	ldr	r0, [r7, r0, lsl #2]
   16ff0:	bl	15b24 <codadump_filter_get_next_filter@@Base>
   16ff4:	ldr	r2, [r6, #796]	; 0x31c
   16ff8:	mov	r1, r7
   16ffc:	cmp	r0, #0
   17000:	str	r0, [r1, r2, lsl #2]!
   17004:	beq	17124 <traverse_product@@Base+0x344>
   17008:	bl	15abc <codadump_filter_get_fieldname@@Base>
   1700c:	cmp	r0, #0
   17010:	beq	17180 <traverse_product@@Base+0x3a0>
   17014:	mov	r5, r0
   17018:	ldr	r0, [r6, #136]	; 0x88
   1701c:	mov	r2, r4
   17020:	mov	r1, r5
   17024:	add	r0, r6, r0, lsl #2
   17028:	ldr	r0, [r0, #4]
   1702c:	bl	129d8 <coda_type_get_record_field_index_from_name@plt>
   17030:	cmp	r0, #0
   17034:	beq	16fb8 <traverse_product@@Base+0x1d8>
   17038:	bl	12a68 <coda_get_errno@plt>
   1703c:	ldr	r0, [r0]
   17040:	cmn	r0, #102	; 0x66
   17044:	beq	171a0 <traverse_product@@Base+0x3c0>
   17048:	bl	18294 <handle_coda_error@@Base>
   1704c:	b	16fb8 <traverse_product@@Base+0x1d8>
   17050:	ldr	r0, [r6, #136]	; 0x88
   17054:	cmp	r0, #30
   17058:	bgt	1711c <traverse_product@@Base+0x33c>
   1705c:	bl	148a0 <dim_enter_array@@Base>
   17060:	ldr	r0, [r6, #3360]	; 0xd20
   17064:	add	r2, r6, #8
   17068:	add	r0, r0, #1
   1706c:	str	r0, [r6, #3360]	; 0xd20
   17070:	ldr	r0, [r6, #136]	; 0x88
   17074:	add	r1, r0, #1
   17078:	str	r1, [r6, #136]	; 0x88
   1707c:	add	r1, r2, r1, lsl #2
   17080:	ldr	r0, [r2, r0, lsl #2]
   17084:	bl	12960 <coda_type_get_array_base_type@plt>
   17088:	cmp	r0, #0
   1708c:	beq	17094 <traverse_product@@Base+0x2b4>
   17090:	bl	18294 <handle_coda_error@@Base>
   17094:	bl	16e94 <traverse_product@@Base+0xb4>
   17098:	ldr	r0, [r6, #136]	; 0x88
   1709c:	sub	r0, r0, #1
   170a0:	str	r0, [r6, #136]	; 0x88
   170a4:	b	16f3c <traverse_product@@Base+0x15c>
   170a8:	bl	12654 <coda_get_option_bypass_special_types@plt>
   170ac:	mov	r2, r0
   170b0:	ldr	r0, [r6, #136]	; 0x88
   170b4:	cmp	r2, #0
   170b8:	add	r1, r6, r0, lsl #2
   170bc:	ldr	r0, [r1, #8]!
   170c0:	beq	170e0 <traverse_product@@Base+0x300>
   170c4:	bl	12a74 <coda_type_get_special_base_type@plt>
   170c8:	cmp	r0, #0
   170cc:	beq	170d4 <traverse_product@@Base+0x2f4>
   170d0:	bl	18294 <handle_coda_error@@Base>
   170d4:	bl	16e94 <traverse_product@@Base+0xb4>
   170d8:	sub	sp, fp, #24
   170dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   170e0:	add	r1, sp, #8
   170e4:	bl	1293c <coda_type_get_special_type@plt>
   170e8:	cmp	r0, #0
   170ec:	beq	170f4 <traverse_product@@Base+0x314>
   170f0:	bl	18294 <handle_coda_error@@Base>
   170f4:	ldr	r0, [sp, #8]
   170f8:	sub	r1, r0, #1
   170fc:	cmp	r1, #2
   17100:	bcc	17118 <traverse_product@@Base+0x338>
   17104:	cmp	r0, #0
   17108:	beq	1711c <traverse_product@@Base+0x33c>
   1710c:	cmp	r0, #3
   17110:	beq	16f28 <traverse_product@@Base+0x148>
   17114:	b	1711c <traverse_product@@Base+0x33c>
   17118:	bl	172e0 <traverse_product@@Base+0x500>
   1711c:	sub	sp, fp, #24
   17120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17124:	str	r8, [r1]
   17128:	b	17160 <traverse_product@@Base+0x380>
   1712c:	ldr	r1, [sp, #8]
   17130:	mov	r0, #0
   17134:	str	r0, [sp, #4]
   17138:	cmp	r1, #1
   1713c:	blt	17160 <traverse_product@@Base+0x380>
   17140:	mov	r1, #0
   17144:	bl	171c4 <traverse_product@@Base+0x3e4>
   17148:	ldr	r0, [sp, #4]
   1714c:	ldr	r1, [sp, #8]
   17150:	add	r0, r0, #1
   17154:	cmp	r0, r1
   17158:	str	r0, [sp, #4]
   1715c:	blt	17140 <traverse_product@@Base+0x360>
   17160:	ldr	r0, [r6, #136]	; 0x88
   17164:	sub	r0, r0, #1
   17168:	str	r0, [r6, #136]	; 0x88
   1716c:	ldr	r0, [r6, #3748]	; 0xea4
   17170:	sub	r0, r0, #1
   17174:	str	r0, [r6, #3748]	; 0xea4
   17178:	sub	sp, fp, #24
   1717c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17180:	movw	r0, #42088	; 0xa468
   17184:	movw	r1, #42101	; 0xa475
   17188:	movw	r3, #42188	; 0xa4cc
   1718c:	movw	r2, #393	; 0x189
   17190:	movt	r0, #1
   17194:	movt	r1, #1
   17198:	movt	r3, #1
   1719c:	bl	12abc <__assert_fail@plt>
   171a0:	movw	r0, #49584	; 0xc1b0
   171a4:	movw	r1, #42209	; 0xa4e1
   171a8:	mov	r2, r5
   171ac:	movt	r0, #2
   171b0:	movt	r1, #1
   171b4:	ldr	r0, [r0]
   171b8:	bl	128c4 <fprintf@plt>
   171bc:	mov	r0, #1
   171c0:	bl	1287c <exit@plt>
   171c4:	push	{r4, r5, r6, sl, fp, lr}
   171c8:	add	fp, sp, #16
   171cc:	sub	sp, sp, #8
   171d0:	movw	r6, #49640	; 0xc1e8
   171d4:	mov	r4, r0
   171d8:	mov	r5, r1
   171dc:	add	r2, sp, #4
   171e0:	movt	r6, #2
   171e4:	mov	r1, r4
   171e8:	ldr	r0, [r6, #3748]	; 0xea4
   171ec:	add	r0, r6, r0, lsl #2
   171f0:	str	r4, [r0, #3488]	; 0xda0
   171f4:	ldr	r0, [r6, #136]	; 0x88
   171f8:	add	r0, r6, r0, lsl #2
   171fc:	ldr	r0, [r0, #4]
   17200:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   17204:	cmp	r0, #0
   17208:	beq	17210 <traverse_product@@Base+0x430>
   1720c:	bl	18294 <handle_coda_error@@Base>
   17210:	cmp	r5, #0
   17214:	bne	17224 <traverse_product@@Base+0x444>
   17218:	ldr	r0, [sp, #4]
   1721c:	cmp	r0, #0
   17220:	bne	172d8 <traverse_product@@Base+0x4f8>
   17224:	movw	r0, #49636	; 0xc1e4
   17228:	movt	r0, #2
   1722c:	ldr	r0, [r0]
   17230:	cmp	r0, #0
   17234:	beq	17284 <traverse_product@@Base+0x4a4>
   17238:	ldr	r0, [r6, #136]	; 0x88
   1723c:	mov	r2, sp
   17240:	mov	r1, r4
   17244:	add	r0, r6, r0, lsl #2
   17248:	ldr	r0, [r0, #4]
   1724c:	bl	12774 <coda_type_get_record_field_available_status@plt>
   17250:	cmp	r0, #0
   17254:	beq	1725c <traverse_product@@Base+0x47c>
   17258:	bl	18294 <handle_coda_error@@Base>
   1725c:	ldr	r0, [sp]
   17260:	cmn	r0, #1
   17264:	bne	17278 <traverse_product@@Base+0x498>
   17268:	bl	15720 <dim_record_field_available@@Base>
   1726c:	cmp	r0, #0
   17270:	beq	172d8 <traverse_product@@Base+0x4f8>
   17274:	ldr	r0, [sp]
   17278:	ldr	r1, [r6, #136]	; 0x88
   1727c:	add	r1, r6, r1, lsl #2
   17280:	str	r0, [r1, #3360]	; 0xd20
   17284:	ldr	r0, [r6, #136]	; 0x88
   17288:	ldr	r1, [r6, #3748]	; 0xea4
   1728c:	add	r0, r6, r0, lsl #2
   17290:	add	r1, r6, r1, lsl #2
   17294:	ldr	r0, [r0, #4]
   17298:	add	r2, r1, #3616	; 0xe20
   1729c:	mov	r1, r4
   172a0:	bl	12a80 <coda_type_get_record_field_name@plt>
   172a4:	cmp	r0, #0
   172a8:	beq	172b0 <traverse_product@@Base+0x4d0>
   172ac:	bl	18294 <handle_coda_error@@Base>
   172b0:	ldr	r0, [r6, #136]	; 0x88
   172b4:	add	r1, r6, r0, lsl #2
   172b8:	ldr	r0, [r1, #4]
   172bc:	add	r2, r1, #8
   172c0:	mov	r1, r4
   172c4:	bl	12738 <coda_type_get_record_field_type@plt>
   172c8:	cmp	r0, #0
   172cc:	beq	172d4 <traverse_product@@Base+0x4f4>
   172d0:	bl	18294 <handle_coda_error@@Base>
   172d4:	bl	16e94 <traverse_product@@Base+0xb4>
   172d8:	sub	sp, fp, #16
   172dc:	pop	{r4, r5, r6, sl, fp, pc}
   172e0:	push	{r4, r5, fp, lr}
   172e4:	add	fp, sp, #8
   172e8:	sub	sp, sp, #8
   172ec:	movw	r0, #53412	; 0xd0a4
   172f0:	movt	r0, #2
   172f4:	ldr	r0, [r0]
   172f8:	cmp	r0, #1
   172fc:	beq	173a4 <traverse_product@@Base+0x5c4>
   17300:	cmp	r0, #0
   17304:	bne	1751c <traverse_product@@Base+0x73c>
   17308:	movw	r5, #49588	; 0xc1b4
   1730c:	mov	r1, #1
   17310:	mov	r2, #0
   17314:	movt	r5, #2
   17318:	ldr	r0, [r5]
   1731c:	bl	169d0 <print_full_field_name@@Base>
   17320:	movw	r0, #53400	; 0xd098
   17324:	movw	r4, #49640	; 0xc1e8
   17328:	movt	r0, #2
   1732c:	movt	r4, #2
   17330:	ldr	r0, [r0]
   17334:	cmp	r0, #0
   17338:	beq	17420 <traverse_product@@Base+0x640>
   1733c:	ldr	r0, [r4, #136]	; 0x88
   17340:	add	r1, sp, #4
   17344:	add	r0, r4, r0, lsl #2
   17348:	ldr	r0, [r0, #8]
   1734c:	bl	12ac8 <coda_type_get_class@plt>
   17350:	cmp	r0, #0
   17354:	beq	1735c <traverse_product@@Base+0x57c>
   17358:	bl	18294 <handle_coda_error@@Base>
   1735c:	ldr	r0, [sp, #4]
   17360:	cmp	r0, #6
   17364:	bne	173b0 <traverse_product@@Base+0x5d0>
   17368:	ldr	r0, [r4, #136]	; 0x88
   1736c:	mov	r1, sp
   17370:	add	r0, r4, r0, lsl #2
   17374:	ldr	r0, [r0, #8]
   17378:	bl	1293c <coda_type_get_special_type@plt>
   1737c:	cmp	r0, #0
   17380:	beq	17388 <traverse_product@@Base+0x5a8>
   17384:	bl	18294 <handle_coda_error@@Base>
   17388:	ldr	r0, [sp]
   1738c:	bl	12630 <coda_type_get_special_type_name@plt>
   17390:	mov	r1, r0
   17394:	movw	r0, #42261	; 0xa515
   17398:	movt	r0, #1
   1739c:	bl	12690 <printf@plt>
   173a0:	b	17420 <traverse_product@@Base+0x640>
   173a4:	sub	sp, fp, #8
   173a8:	pop	{r4, r5, fp, lr}
   173ac:	b	12bc4 <export_data_element_to_ascii@@Base>
   173b0:	ldr	r0, [r4, #136]	; 0x88
   173b4:	mov	r1, sp
   173b8:	add	r0, r4, r0, lsl #2
   173bc:	ldr	r0, [r0, #8]
   173c0:	bl	12888 <coda_type_get_read_type@plt>
   173c4:	cmp	r0, #0
   173c8:	beq	173d0 <traverse_product@@Base+0x5f0>
   173cc:	bl	18294 <handle_coda_error@@Base>
   173d0:	ldr	r0, [sp]
   173d4:	bl	12984 <coda_type_get_native_type_name@plt>
   173d8:	mov	r1, r0
   173dc:	movw	r0, #42261	; 0xa515
   173e0:	movt	r0, #1
   173e4:	bl	12690 <printf@plt>
   173e8:	ldr	r0, [sp]
   173ec:	sub	r0, r0, #11
   173f0:	cmp	r0, #1
   173f4:	bhi	17420 <traverse_product@@Base+0x640>
   173f8:	mov	r0, #40	; 0x28
   173fc:	bl	12924 <putchar@plt>
   17400:	ldr	r1, [r4, #3360]	; 0xd20
   17404:	cmp	r1, #0
   17408:	ble	17524 <traverse_product@@Base+0x744>
   1740c:	ldr	r0, [r5]
   17410:	sub	r1, r1, #1
   17414:	bl	16c94 <print_full_field_name@@Base+0x2c4>
   17418:	mov	r0, #41	; 0x29
   1741c:	bl	12924 <putchar@plt>
   17420:	movw	r0, #49632	; 0xc1e0
   17424:	movt	r0, #2
   17428:	ldr	r0, [r0]
   1742c:	cmp	r0, #0
   17430:	beq	17478 <traverse_product@@Base+0x698>
   17434:	ldr	r0, [r4, #136]	; 0x88
   17438:	add	r1, sp, #4
   1743c:	add	r0, r4, r0, lsl #2
   17440:	ldr	r0, [r0, #8]
   17444:	bl	127b0 <coda_type_get_unit@plt>
   17448:	cmp	r0, #0
   1744c:	beq	17454 <traverse_product@@Base+0x674>
   17450:	bl	18294 <handle_coda_error@@Base>
   17454:	ldr	r1, [sp, #4]
   17458:	cmp	r1, #0
   1745c:	beq	17478 <traverse_product@@Base+0x698>
   17460:	ldrb	r0, [r1]
   17464:	cmp	r0, #0
   17468:	beq	17478 <traverse_product@@Base+0x698>
   1746c:	movw	r0, #42321	; 0xa551
   17470:	movt	r0, #1
   17474:	bl	12690 <printf@plt>
   17478:	movw	r0, #53404	; 0xd09c
   1747c:	movt	r0, #2
   17480:	ldr	r0, [r0]
   17484:	cmp	r0, #0
   17488:	beq	174d0 <traverse_product@@Base+0x6f0>
   1748c:	ldr	r0, [r4, #136]	; 0x88
   17490:	add	r1, sp, #4
   17494:	add	r0, r4, r0, lsl #2
   17498:	ldr	r0, [r0, #8]
   1749c:	bl	127bc <coda_type_get_description@plt>
   174a0:	cmp	r0, #0
   174a4:	beq	174ac <traverse_product@@Base+0x6cc>
   174a8:	bl	18294 <handle_coda_error@@Base>
   174ac:	ldr	r1, [sp, #4]
   174b0:	cmp	r1, #0
   174b4:	beq	174d0 <traverse_product@@Base+0x6f0>
   174b8:	ldrb	r0, [r1]
   174bc:	cmp	r0, #0
   174c0:	beq	174d0 <traverse_product@@Base+0x6f0>
   174c4:	movw	r0, #42327	; 0xa557
   174c8:	movt	r0, #1
   174cc:	bl	12690 <printf@plt>
   174d0:	mov	r0, #10
   174d4:	bl	12924 <putchar@plt>
   174d8:	movw	r0, #49620	; 0xc1d4
   174dc:	movt	r0, #2
   174e0:	ldr	r0, [r0]
   174e4:	cmp	r0, #0
   174e8:	beq	1751c <traverse_product@@Base+0x73c>
   174ec:	movw	r5, #53424	; 0xd0b0
   174f0:	movt	r5, #2
   174f4:	ldr	r0, [r5]
   174f8:	cmp	r0, #1
   174fc:	blt	1751c <traverse_product@@Base+0x73c>
   17500:	mov	r4, #0
   17504:	mov	r0, r4
   17508:	bl	146c0 <print_all_distinct_dims@@Base>
   1750c:	ldr	r0, [r5]
   17510:	add	r4, r4, #1
   17514:	cmp	r4, r0
   17518:	blt	17504 <traverse_product@@Base+0x724>
   1751c:	sub	sp, fp, #8
   17520:	pop	{r4, r5, fp, pc}
   17524:	movw	r0, #42265	; 0xa519
   17528:	movw	r1, #42101	; 0xa475
   1752c:	movw	r3, #42294	; 0xa536
   17530:	mov	r2, #238	; 0xee
   17534:	movt	r0, #1
   17538:	movt	r1, #1
   1753c:	movt	r3, #1
   17540:	bl	12abc <__assert_fail@plt>

00017544 <print_yaml_data@@Base>:
   17544:	push	{r4, sl, fp, lr}
   17548:	add	fp, sp, #8
   1754c:	sub	sp, sp, #528	; 0x210
   17550:	movw	r1, #49608	; 0xc1c8
   17554:	movw	r4, #49640	; 0xc1e8
   17558:	movt	r1, #2
   1755c:	movt	r4, #2
   17560:	str	r0, [r1]
   17564:	ldr	r0, [r4]
   17568:	sub	r1, fp, #12
   1756c:	bl	126c0 <coda_open@plt>
   17570:	cmp	r0, #0
   17574:	beq	175b4 <print_yaml_data@@Base+0x70>
   17578:	bl	12a68 <coda_get_errno@plt>
   1757c:	ldr	r0, [r0]
   17580:	cmn	r0, #21
   17584:	bne	175b0 <print_yaml_data@@Base+0x6c>
   17588:	mov	r0, #0
   1758c:	bl	12708 <coda_set_option_use_mmap@plt>
   17590:	ldr	r0, [r4]
   17594:	sub	r1, fp, #12
   17598:	bl	126c0 <coda_open@plt>
   1759c:	mov	r4, r0
   175a0:	mov	r0, #1
   175a4:	bl	12708 <coda_set_option_use_mmap@plt>
   175a8:	cmp	r4, #0
   175ac:	beq	175b4 <print_yaml_data@@Base+0x70>
   175b0:	bl	18294 <handle_coda_error@@Base>
   175b4:	ldr	r1, [fp, #-12]
   175b8:	mov	r0, sp
   175bc:	bl	127ec <coda_cursor_set_product@plt>
   175c0:	cmp	r0, #0
   175c4:	beq	175cc <print_yaml_data@@Base+0x88>
   175c8:	bl	18294 <handle_coda_error@@Base>
   175cc:	movw	r0, #53416	; 0xd0a8
   175d0:	movt	r0, #2
   175d4:	ldr	r1, [r0]
   175d8:	cmp	r1, #0
   175dc:	beq	175f4 <print_yaml_data@@Base+0xb0>
   175e0:	mov	r0, sp
   175e4:	bl	129cc <coda_cursor_goto@plt>
   175e8:	cmp	r0, #0
   175ec:	beq	175f4 <print_yaml_data@@Base+0xb0>
   175f0:	bl	18294 <handle_coda_error@@Base>
   175f4:	mov	r0, #0
   175f8:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   175fc:	mov	r0, sp
   17600:	mov	r1, #0
   17604:	bl	17618 <print_yaml_data@@Base+0xd4>
   17608:	ldr	r0, [fp, #-12]
   1760c:	bl	129a8 <coda_close@plt>
   17610:	sub	sp, fp, #8
   17614:	pop	{r4, sl, fp, pc}
   17618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1761c:	add	fp, sp, #28
   17620:	sub	sp, sp, #76	; 0x4c
   17624:	mov	r9, r0
   17628:	mov	r0, #0
   1762c:	movw	sl, #49612	; 0xc1cc
   17630:	mov	r5, r1
   17634:	str	r0, [fp, #-36]	; 0xffffffdc
   17638:	movw	r0, #49608	; 0xc1c8
   1763c:	movt	sl, #2
   17640:	movt	r0, #2
   17644:	ldr	r0, [r0]
   17648:	cmp	r0, #0
   1764c:	beq	1772c <print_yaml_data@@Base+0x1e8>
   17650:	sub	r1, fp, #36	; 0x24
   17654:	mov	r0, r9
   17658:	bl	12780 <coda_cursor_has_attributes@plt>
   1765c:	cmp	r0, #0
   17660:	beq	17668 <print_yaml_data@@Base+0x124>
   17664:	bl	18294 <handle_coda_error@@Base>
   17668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1766c:	cmp	r0, #0
   17670:	beq	1772c <print_yaml_data@@Base+0x1e8>
   17674:	cmp	r5, #0
   17678:	beq	176c8 <print_yaml_data@@Base+0x184>
   1767c:	movw	r0, #42716	; 0xa6dc
   17680:	movt	r0, #1
   17684:	bl	18048 <print_yaml_data@@Base+0xb04>
   17688:	ldr	r4, [sl]
   1768c:	cmp	r4, #0
   17690:	bmi	18028 <print_yaml_data@@Base+0xae4>
   17694:	beq	176c8 <print_yaml_data@@Base+0x184>
   17698:	movw	r7, #53392	; 0xd090
   1769c:	movw	r6, #40815	; 0x9f6f
   176a0:	movt	r7, #2
   176a4:	movt	r6, #1
   176a8:	ldr	r3, [r7]
   176ac:	mov	r0, r6
   176b0:	mov	r1, #2
   176b4:	mov	r2, #1
   176b8:	bl	127e0 <fwrite@plt>
   176bc:	sub	r4, r4, #1
   176c0:	cmp	r4, #0
   176c4:	bgt	176a8 <print_yaml_data@@Base+0x164>
   176c8:	movw	r0, #42333	; 0xa55d
   176cc:	movt	r0, #1
   176d0:	bl	18048 <print_yaml_data@@Base+0xb04>
   176d4:	mov	r0, r9
   176d8:	bl	12900 <coda_cursor_goto_attributes@plt>
   176dc:	cmp	r0, #0
   176e0:	beq	176e8 <print_yaml_data@@Base+0x1a4>
   176e4:	bl	18294 <handle_coda_error@@Base>
   176e8:	ldr	r0, [sl]
   176ec:	mov	r1, #1
   176f0:	add	r0, r0, #1
   176f4:	str	r0, [sl]
   176f8:	mov	r0, r9
   176fc:	bl	17618 <print_yaml_data@@Base+0xd4>
   17700:	ldr	r0, [sl]
   17704:	sub	r0, r0, #1
   17708:	str	r0, [sl]
   1770c:	mov	r0, r9
   17710:	bl	12864 <coda_cursor_goto_parent@plt>
   17714:	movw	r0, #42340	; 0xa564
   17718:	movt	r0, #1
   1771c:	bl	18090 <print_yaml_data@@Base+0xb4c>
   17720:	ldr	r0, [sl]
   17724:	add	r0, r0, #1
   17728:	str	r0, [sl]
   1772c:	sub	r1, fp, #32
   17730:	mov	r0, r9
   17734:	bl	1278c <coda_cursor_get_type_class@plt>
   17738:	cmp	r0, #0
   1773c:	beq	17744 <print_yaml_data@@Base+0x200>
   17740:	bl	18294 <handle_coda_error@@Base>
   17744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17748:	cmp	r0, #6
   1774c:	bhi	17fd8 <print_yaml_data@@Base+0xa94>
   17750:	add	r1, pc, #0
   17754:	ldr	pc, [r1, r0, lsl #2]
   17758:	andeq	r7, r1, r8, lsl #16
   1775c:	andeq	r7, r1, r4, asr #18
   17760:	andeq	r7, r1, r4, ror r7
   17764:	andeq	r7, r1, r4, ror r7
   17768:	andeq	r7, r1, r4, ror r7
   1776c:	andeq	r7, r1, r4, ror r7
   17770:	andeq	r7, r1, r8, lsl #19
   17774:	sub	r1, fp, #40	; 0x28
   17778:	mov	r0, r9
   1777c:	bl	12828 <coda_cursor_get_read_type@plt>
   17780:	cmp	r0, #0
   17784:	beq	1778c <print_yaml_data@@Base+0x248>
   17788:	bl	18294 <handle_coda_error@@Base>
   1778c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17790:	add	r0, r0, #1
   17794:	cmp	r0, #13
   17798:	bhi	17fd8 <print_yaml_data@@Base+0xa94>
   1779c:	add	r1, pc, #0
   177a0:	ldr	pc, [r1, r0, lsl #2]
   177a4:	andeq	r7, r1, r4, asr #19
   177a8:	ldrdeq	r7, [r1], -ip
   177ac:	ldrdeq	r7, [r1], -r0
   177b0:	ldrdeq	r7, [r1], -ip
   177b4:	ldrdeq	r7, [r1], -r0
   177b8:	ldrdeq	r7, [r1], -ip
   177bc:	ldrdeq	r7, [r1], -r0
   177c0:	andeq	r7, r1, r0, lsr fp
   177c4:	andeq	r7, r1, r0, ror #22
   177c8:	strdeq	r7, [r1], -ip
   177cc:	strdeq	r7, [r1], -ip
   177d0:	andeq	r7, r1, r8, asr #20
   177d4:	andeq	r7, r1, r4, lsl #21
   177d8:	andeq	r7, r1, r0, lsr #23
   177dc:	add	r1, sp, #16
   177e0:	mov	r0, r9
   177e4:	bl	12a44 <coda_cursor_read_int32@plt>
   177e8:	cmp	r0, #0
   177ec:	beq	177f4 <print_yaml_data@@Base+0x2b0>
   177f0:	bl	18294 <handle_coda_error@@Base>
   177f4:	ldr	r1, [sp, #16]
   177f8:	movw	r0, #40664	; 0x9ed8
   177fc:	movt	r0, #1
   17800:	bl	18048 <print_yaml_data@@Base+0xb04>
   17804:	b	17fd8 <print_yaml_data@@Base+0xa94>
   17808:	add	r1, sp, #16
   1780c:	mov	r0, r9
   17810:	bl	126e4 <coda_cursor_get_num_elements@plt>
   17814:	cmp	r0, #0
   17818:	beq	17820 <print_yaml_data@@Base+0x2dc>
   1781c:	bl	18294 <handle_coda_error@@Base>
   17820:	ldr	r0, [sp, #16]
   17824:	cmp	r0, #1
   17828:	blt	17a3c <print_yaml_data@@Base+0x4f8>
   1782c:	cmp	r5, #0
   17830:	movwne	r0, #42716	; 0xa6dc
   17834:	movtne	r0, #1
   17838:	blne	18048 <print_yaml_data@@Base+0xb04>
   1783c:	add	r1, sp, #8
   17840:	mov	r0, r9
   17844:	bl	12744 <coda_cursor_get_type@plt>
   17848:	cmp	r0, #0
   1784c:	beq	17854 <print_yaml_data@@Base+0x310>
   17850:	bl	18294 <handle_coda_error@@Base>
   17854:	ldr	r0, [sp, #8]
   17858:	sub	r1, fp, #40	; 0x28
   1785c:	bl	12948 <coda_type_get_record_union_status@plt>
   17860:	cmp	r0, #0
   17864:	beq	1786c <print_yaml_data@@Base+0x328>
   17868:	bl	18294 <handle_coda_error@@Base>
   1786c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17870:	cmp	r0, #0
   17874:	beq	17c68 <print_yaml_data@@Base+0x724>
   17878:	sub	r1, fp, #44	; 0x2c
   1787c:	mov	r0, r9
   17880:	bl	12a38 <coda_cursor_get_available_union_field_index@plt>
   17884:	cmp	r0, #0
   17888:	beq	17890 <print_yaml_data@@Base+0x34c>
   1788c:	bl	18294 <handle_coda_error@@Base>
   17890:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17894:	ldr	r0, [sp, #8]
   17898:	sub	r2, fp, #48	; 0x30
   1789c:	bl	12a80 <coda_type_get_record_field_name@plt>
   178a0:	cmp	r0, #0
   178a4:	beq	178ac <print_yaml_data@@Base+0x368>
   178a8:	bl	18294 <handle_coda_error@@Base>
   178ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   178b0:	mov	r0, r9
   178b4:	bl	12804 <coda_cursor_goto_record_field_by_index@plt>
   178b8:	cmp	r0, #0
   178bc:	beq	178c4 <print_yaml_data@@Base+0x380>
   178c0:	bl	18294 <handle_coda_error@@Base>
   178c4:	cmp	r5, #0
   178c8:	beq	1790c <print_yaml_data@@Base+0x3c8>
   178cc:	ldr	r4, [sl]
   178d0:	cmp	r4, #0
   178d4:	bmi	18028 <print_yaml_data@@Base+0xae4>
   178d8:	beq	1790c <print_yaml_data@@Base+0x3c8>
   178dc:	movw	r6, #53392	; 0xd090
   178e0:	movw	r5, #40815	; 0x9f6f
   178e4:	movt	r6, #2
   178e8:	movt	r5, #1
   178ec:	ldr	r3, [r6]
   178f0:	mov	r0, r5
   178f4:	mov	r1, #2
   178f8:	mov	r2, #1
   178fc:	bl	127e0 <fwrite@plt>
   17900:	sub	r4, r4, #1
   17904:	cmp	r4, #0
   17908:	bgt	178ec <print_yaml_data@@Base+0x3a8>
   1790c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17910:	movw	r0, #42347	; 0xa56b
   17914:	movt	r0, #1
   17918:	bl	18048 <print_yaml_data@@Base+0xb04>
   1791c:	ldr	r0, [sl]
   17920:	mov	r1, #1
   17924:	add	r0, r0, #1
   17928:	str	r0, [sl]
   1792c:	mov	r0, r9
   17930:	bl	17618 <print_yaml_data@@Base+0xd4>
   17934:	ldr	r0, [sl]
   17938:	sub	r0, r0, #1
   1793c:	str	r0, [sl]
   17940:	b	17fc0 <print_yaml_data@@Base+0xa7c>
   17944:	add	r4, sp, #16
   17948:	add	r1, sp, #8
   1794c:	mov	r0, r9
   17950:	mov	r2, r4
   17954:	bl	12990 <coda_cursor_get_array_dim@plt>
   17958:	cmp	r0, #0
   1795c:	beq	17964 <print_yaml_data@@Base+0x420>
   17960:	bl	18294 <handle_coda_error@@Base>
   17964:	ldr	r0, [sp, #8]
   17968:	cmp	r0, #0
   1796c:	bmi	17fcc <print_yaml_data@@Base+0xa88>
   17970:	beq	17da8 <print_yaml_data@@Base+0x864>
   17974:	cmp	r0, #4
   17978:	bcs	17e58 <print_yaml_data@@Base+0x914>
   1797c:	mov	lr, #0
   17980:	mov	r6, #1
   17984:	b	17f10 <print_yaml_data@@Base+0x9cc>
   17988:	sub	r1, fp, #40	; 0x28
   1798c:	mov	r0, r9
   17990:	bl	127c8 <coda_cursor_get_special_type@plt>
   17994:	cmp	r0, #0
   17998:	beq	179a0 <print_yaml_data@@Base+0x45c>
   1799c:	bl	18294 <handle_coda_error@@Base>
   179a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179a4:	cmp	r0, #3
   179a8:	bhi	17fd8 <print_yaml_data@@Base+0xa94>
   179ac:	add	r1, pc, #0
   179b0:	ldr	pc, [r1, r0, lsl #2]
   179b4:	andeq	r7, r1, r4, asr #19
   179b8:	andeq	r7, r1, r8, lsr #28
   179bc:			; <UNDEFINED> instruction: 0x00017db0
   179c0:	strdeq	r7, [r1], -r0
   179c4:	movw	r0, #42446	; 0xa5ce
   179c8:	movt	r0, #1
   179cc:	b	17fd4 <print_yaml_data@@Base+0xa90>
   179d0:	add	r1, sp, #16
   179d4:	mov	r0, r9
   179d8:	bl	12720 <coda_cursor_read_uint32@plt>
   179dc:	cmp	r0, #0
   179e0:	beq	179e8 <print_yaml_data@@Base+0x4a4>
   179e4:	bl	18294 <handle_coda_error@@Base>
   179e8:	ldr	r1, [sp, #16]
   179ec:	movw	r0, #40669	; 0x9edd
   179f0:	movt	r0, #1
   179f4:	bl	18048 <print_yaml_data@@Base+0xb04>
   179f8:	b	17fd8 <print_yaml_data@@Base+0xa94>
   179fc:	add	r1, sp, #16
   17a00:	mov	r0, r9
   17a04:	bl	128ac <coda_cursor_read_double@plt>
   17a08:	cmp	r0, #0
   17a0c:	beq	17a14 <print_yaml_data@@Base+0x4d0>
   17a10:	bl	18294 <handle_coda_error@@Base>
   17a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17a18:	vldr	d16, [sp, #16]
   17a1c:	movw	r2, #40674	; 0x9ee2
   17a20:	movw	r0, #40740	; 0x9f24
   17a24:	movt	r2, #1
   17a28:	movt	r0, #1
   17a2c:	cmp	r1, #8
   17a30:	moveq	r0, r2
   17a34:	vmov	r2, r3, d16
   17a38:	b	17e50 <print_yaml_data@@Base+0x90c>
   17a3c:	movw	r0, #42352	; 0xa570
   17a40:	movt	r0, #1
   17a44:	b	17fd4 <print_yaml_data@@Base+0xa90>
   17a48:	add	r1, sp, #16
   17a4c:	mov	r0, r9
   17a50:	bl	1290c <coda_cursor_read_char@plt>
   17a54:	cmp	r0, #0
   17a58:	beq	17a60 <print_yaml_data@@Base+0x51c>
   17a5c:	bl	18294 <handle_coda_error@@Base>
   17a60:	movw	r0, #42064	; 0xa450
   17a64:	movt	r0, #1
   17a68:	bl	18048 <print_yaml_data@@Base+0xb04>
   17a6c:	add	r0, sp, #16
   17a70:	mov	r1, #1
   17a74:	bl	18140 <print_yaml_data@@Base+0xbfc>
   17a78:	movw	r0, #42715	; 0xa6db
   17a7c:	movt	r0, #1
   17a80:	b	17fd4 <print_yaml_data@@Base+0xa90>
   17a84:	add	r1, sp, #16
   17a88:	mov	r0, r9
   17a8c:	bl	12894 <coda_cursor_get_string_length@plt>
   17a90:	cmp	r0, #0
   17a94:	beq	17a9c <print_yaml_data@@Base+0x558>
   17a98:	bl	18294 <handle_coda_error@@Base>
   17a9c:	ldr	r0, [sp, #16]
   17aa0:	add	r6, r0, #1
   17aa4:	mov	r0, r6
   17aa8:	bl	12834 <malloc@plt>
   17aac:	mov	r5, r0
   17ab0:	cmp	r0, #0
   17ab4:	bne	17ae8 <print_yaml_data@@Base+0x5a4>
   17ab8:	movw	r1, #40233	; 0x9d29
   17abc:	movw	r3, #42363	; 0xa57b
   17ac0:	movw	r0, #361	; 0x169
   17ac4:	mov	r2, r6
   17ac8:	movt	r1, #1
   17acc:	movt	r3, #1
   17ad0:	str	r0, [sp]
   17ad4:	mvn	r0, #0
   17ad8:	bl	126b4 <coda_set_error@plt>
   17adc:	bl	18294 <handle_coda_error@@Base>
   17ae0:	ldr	r0, [sp, #16]
   17ae4:	add	r6, r0, #1
   17ae8:	mov	r0, r9
   17aec:	mov	r1, r5
   17af0:	mov	r2, r6
   17af4:	bl	12858 <coda_cursor_read_string@plt>
   17af8:	cmp	r0, #0
   17afc:	beq	17b04 <print_yaml_data@@Base+0x5c0>
   17b00:	bl	18294 <handle_coda_error@@Base>
   17b04:	movw	r0, #42064	; 0xa450
   17b08:	movt	r0, #1
   17b0c:	bl	18048 <print_yaml_data@@Base+0xb04>
   17b10:	ldr	r1, [sp, #16]
   17b14:	mov	r0, r5
   17b18:	bl	18140 <print_yaml_data@@Base+0xbfc>
   17b1c:	ldr	r1, [sp, #16]
   17b20:	movw	r0, #42715	; 0xa6db
   17b24:	movt	r0, #1
   17b28:	bl	18048 <print_yaml_data@@Base+0xb04>
   17b2c:	b	17c5c <print_yaml_data@@Base+0x718>
   17b30:	add	r1, sp, #8
   17b34:	mov	r0, r9
   17b38:	bl	129b4 <coda_cursor_read_int64@plt>
   17b3c:	cmp	r0, #0
   17b40:	beq	17b48 <print_yaml_data@@Base+0x604>
   17b44:	bl	18294 <handle_coda_error@@Base>
   17b48:	ldr	r0, [sp, #8]
   17b4c:	ldr	r1, [sp, #12]
   17b50:	add	r4, sp, #16
   17b54:	mov	r2, r4
   17b58:	bl	12ab0 <coda_str64@plt>
   17b5c:	b	17b8c <print_yaml_data@@Base+0x648>
   17b60:	add	r1, sp, #8
   17b64:	mov	r0, r9
   17b68:	bl	128a0 <coda_cursor_read_uint64@plt>
   17b6c:	cmp	r0, #0
   17b70:	beq	17b78 <print_yaml_data@@Base+0x634>
   17b74:	bl	18294 <handle_coda_error@@Base>
   17b78:	ldr	r0, [sp, #8]
   17b7c:	ldr	r1, [sp, #12]
   17b80:	add	r4, sp, #16
   17b84:	mov	r2, r4
   17b88:	bl	126f0 <coda_str64u@plt>
   17b8c:	movw	r0, #42459	; 0xa5db
   17b90:	mov	r1, r4
   17b94:	movt	r0, #1
   17b98:	bl	18048 <print_yaml_data@@Base+0xb04>
   17b9c:	b	17fd8 <print_yaml_data@@Base+0xa94>
   17ba0:	add	r1, sp, #16
   17ba4:	mov	r0, r9
   17ba8:	bl	12a14 <coda_cursor_get_bit_size@plt>
   17bac:	cmp	r0, #0
   17bb0:	beq	17bb8 <print_yaml_data@@Base+0x674>
   17bb4:	bl	18294 <handle_coda_error@@Base>
   17bb8:	ldr	r4, [sp, #16]
   17bbc:	ldr	r7, [sp, #20]
   17bc0:	lsr	r0, r4, #3
   17bc4:	tst	r4, #7
   17bc8:	orr	r6, r0, r7, lsl #29
   17bcc:	addne	r6, r6, #1
   17bd0:	mov	r0, r6
   17bd4:	bl	12834 <malloc@plt>
   17bd8:	mov	r5, r0
   17bdc:	cmp	r0, #0
   17be0:	bne	17c14 <print_yaml_data@@Base+0x6d0>
   17be4:	movw	r1, #40233	; 0x9d29
   17be8:	movw	r3, #42363	; 0xa57b
   17bec:	mov	r0, #392	; 0x188
   17bf0:	mov	r2, r6
   17bf4:	movt	r1, #1
   17bf8:	movt	r3, #1
   17bfc:	str	r0, [sp]
   17c00:	mvn	r0, #0
   17c04:	bl	126b4 <coda_set_error@plt>
   17c08:	bl	18294 <handle_coda_error@@Base>
   17c0c:	ldr	r4, [sp, #16]
   17c10:	ldr	r7, [sp, #20]
   17c14:	mov	r0, r9
   17c18:	mov	r1, r5
   17c1c:	mov	r2, #0
   17c20:	mov	r3, #0
   17c24:	stm	sp, {r4, r7}
   17c28:	bl	12aa4 <coda_cursor_read_bits@plt>
   17c2c:	cmp	r0, #0
   17c30:	beq	17c38 <print_yaml_data@@Base+0x6f4>
   17c34:	bl	18294 <handle_coda_error@@Base>
   17c38:	movw	r0, #42064	; 0xa450
   17c3c:	movt	r0, #1
   17c40:	bl	18048 <print_yaml_data@@Base+0xb04>
   17c44:	mov	r0, r5
   17c48:	mov	r1, r6
   17c4c:	bl	18140 <print_yaml_data@@Base+0xbfc>
   17c50:	movw	r0, #42715	; 0xa6db
   17c54:	movt	r0, #1
   17c58:	bl	18048 <print_yaml_data@@Base+0xb04>
   17c5c:	mov	r0, r5
   17c60:	bl	126fc <free@plt>
   17c64:	b	17fd8 <print_yaml_data@@Base+0xa94>
   17c68:	mov	r0, r9
   17c6c:	bl	127f8 <coda_cursor_goto_first_record_field@plt>
   17c70:	cmp	r0, #0
   17c74:	beq	17c7c <print_yaml_data@@Base+0x738>
   17c78:	bl	18294 <handle_coda_error@@Base>
   17c7c:	ldr	r0, [sp, #16]
   17c80:	mov	r1, #0
   17c84:	str	r1, [fp, #-44]	; 0xffffffd4
   17c88:	cmp	r0, #1
   17c8c:	blt	17fc0 <print_yaml_data@@Base+0xa7c>
   17c90:	movw	r8, #53392	; 0xd090
   17c94:	movw	r7, #40815	; 0x9f6f
   17c98:	mov	r4, #1
   17c9c:	add	r6, sp, #52	; 0x34
   17ca0:	movt	r8, #2
   17ca4:	movt	r7, #1
   17ca8:	b	17cc4 <print_yaml_data@@Base+0x780>
   17cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17cb0:	add	r1, r0, #1
   17cb4:	ldr	r0, [sp, #16]
   17cb8:	str	r1, [fp, #-44]	; 0xffffffd4
   17cbc:	cmp	r1, r0
   17cc0:	bge	17fc0 <print_yaml_data@@Base+0xa7c>
   17cc4:	ldr	r0, [sp, #8]
   17cc8:	mov	r2, r6
   17ccc:	bl	12684 <coda_type_get_record_field_hidden_status@plt>
   17cd0:	cmp	r0, #0
   17cd4:	beq	17cdc <print_yaml_data@@Base+0x798>
   17cd8:	bl	18294 <handle_coda_error@@Base>
   17cdc:	ldr	r0, [sp, #52]	; 0x34
   17ce0:	cmp	r0, #0
   17ce4:	bne	17d7c <print_yaml_data@@Base+0x838>
   17ce8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17cec:	ldr	r0, [sp, #8]
   17cf0:	sub	r2, fp, #48	; 0x30
   17cf4:	bl	12a80 <coda_type_get_record_field_name@plt>
   17cf8:	cmp	r0, #0
   17cfc:	beq	17d04 <print_yaml_data@@Base+0x7c0>
   17d00:	bl	18294 <handle_coda_error@@Base>
   17d04:	cmp	r5, #0
   17d08:	bne	17d14 <print_yaml_data@@Base+0x7d0>
   17d0c:	cmp	r4, #0
   17d10:	bne	17d44 <print_yaml_data@@Base+0x800>
   17d14:	ldr	r4, [sl]
   17d18:	cmp	r4, #0
   17d1c:	bmi	18028 <print_yaml_data@@Base+0xae4>
   17d20:	beq	17d44 <print_yaml_data@@Base+0x800>
   17d24:	ldr	r3, [r8]
   17d28:	mov	r0, r7
   17d2c:	mov	r1, #2
   17d30:	mov	r2, #1
   17d34:	bl	127e0 <fwrite@plt>
   17d38:	sub	r4, r4, #1
   17d3c:	cmp	r4, #0
   17d40:	bgt	17d24 <print_yaml_data@@Base+0x7e0>
   17d44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17d48:	movw	r0, #42347	; 0xa56b
   17d4c:	movt	r0, #1
   17d50:	bl	18048 <print_yaml_data@@Base+0xb04>
   17d54:	ldr	r0, [sl]
   17d58:	mov	r1, #1
   17d5c:	add	r0, r0, #1
   17d60:	str	r0, [sl]
   17d64:	mov	r0, r9
   17d68:	bl	17618 <print_yaml_data@@Base+0xd4>
   17d6c:	ldr	r0, [sl]
   17d70:	mov	r4, #0
   17d74:	sub	r0, r0, #1
   17d78:	str	r0, [sl]
   17d7c:	ldr	r0, [sp, #16]
   17d80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d84:	sub	r0, r0, #1
   17d88:	cmp	r1, r0
   17d8c:	bge	17cac <print_yaml_data@@Base+0x768>
   17d90:	mov	r0, r9
   17d94:	bl	129f0 <coda_cursor_goto_next_record_field@plt>
   17d98:	cmp	r0, #0
   17d9c:	beq	17cac <print_yaml_data@@Base+0x768>
   17da0:	bl	18294 <handle_coda_error@@Base>
   17da4:	b	17cac <print_yaml_data@@Base+0x768>
   17da8:	mov	r6, #1
   17dac:	b	17f34 <print_yaml_data@@Base+0x9f0>
   17db0:	add	r1, sp, #8
   17db4:	mov	r0, r9
   17db8:	bl	128ac <coda_cursor_read_double@plt>
   17dbc:	cmp	r0, #0
   17dc0:	beq	17dc8 <print_yaml_data@@Base+0x884>
   17dc4:	bl	18294 <handle_coda_error@@Base>
   17dc8:	vldr	d0, [sp, #8]
   17dcc:	bl	128b8 <coda_isNaN@plt>
   17dd0:	cmp	r0, #0
   17dd4:	bne	17de8 <print_yaml_data@@Base+0x8a4>
   17dd8:	vldr	d0, [sp, #8]
   17ddc:	bl	1275c <coda_isInf@plt>
   17de0:	cmp	r0, #0
   17de4:	beq	17ff4 <print_yaml_data@@Base+0xab0>
   17de8:	vldr	d16, [sp, #8]
   17dec:	b	17e44 <print_yaml_data@@Base+0x900>
   17df0:	add	r1, sp, #16
   17df4:	add	r2, sp, #8
   17df8:	mov	r0, r9
   17dfc:	bl	12954 <coda_cursor_read_complex_double_split@plt>
   17e00:	cmp	r0, #0
   17e04:	beq	17e0c <print_yaml_data@@Base+0x8c8>
   17e08:	bl	18294 <handle_coda_error@@Base>
   17e0c:	vldr	d16, [sp, #16]
   17e10:	vldr	d17, [sp, #8]
   17e14:	movw	r0, #40775	; 0x9f47
   17e18:	movt	r0, #1
   17e1c:	vmov	r2, r3, d16
   17e20:	vstr	d17, [sp]
   17e24:	b	17e50 <print_yaml_data@@Base+0x90c>
   17e28:	add	r1, sp, #16
   17e2c:	mov	r0, r9
   17e30:	bl	128ac <coda_cursor_read_double@plt>
   17e34:	cmp	r0, #0
   17e38:	beq	17e40 <print_yaml_data@@Base+0x8fc>
   17e3c:	bl	18294 <handle_coda_error@@Base>
   17e40:	vldr	d16, [sp, #16]
   17e44:	movw	r0, #40740	; 0x9f24
   17e48:	vmov	r2, r3, d16
   17e4c:	movt	r0, #1
   17e50:	bl	18048 <print_yaml_data@@Base+0xb04>
   17e54:	b	17fd8 <print_yaml_data@@Base+0xa94>
   17e58:	bic	lr, r0, #3
   17e5c:	mov	r2, #1
   17e60:	vmov.i32	q8, #1	; 0x00000001
   17e64:	sub	r7, lr, #4
   17e68:	add	r3, r2, r7, lsr #2
   17e6c:	cmp	r7, #12
   17e70:	and	ip, r3, #3
   17e74:	bcs	17e88 <print_yaml_data@@Base+0x944>
   17e78:	mov	r3, #0
   17e7c:	cmp	ip, #0
   17e80:	bne	17edc <print_yaml_data@@Base+0x998>
   17e84:	b	17ef8 <print_yaml_data@@Base+0x9b4>
   17e88:	sub	r7, r3, ip
   17e8c:	mov	r3, #0
   17e90:	mov	r6, #64	; 0x40
   17e94:	mov	r5, r4
   17e98:	vld1.32	{d18-d19}, [r5], r6
   17e9c:	add	r1, r4, #16
   17ea0:	add	r2, r4, #32
   17ea4:	subs	r7, r7, #4
   17ea8:	add	r3, r3, #16
   17eac:	vld1.32	{d20-d21}, [r1]
   17eb0:	add	r1, r4, #48	; 0x30
   17eb4:	mov	r4, r5
   17eb8:	vmul.i32	q8, q9, q8
   17ebc:	vld1.32	{d18-d19}, [r2]
   17ec0:	vmul.i32	q8, q10, q8
   17ec4:	vld1.32	{d20-d21}, [r1]
   17ec8:	vmul.i32	q8, q9, q8
   17ecc:	vmul.i32	q8, q10, q8
   17ed0:	bne	17e98 <print_yaml_data@@Base+0x954>
   17ed4:	cmp	ip, #0
   17ed8:	beq	17ef8 <print_yaml_data@@Base+0x9b4>
   17edc:	add	r1, sp, #16
   17ee0:	rsb	r2, ip, #0
   17ee4:	add	r3, r1, r3, lsl #2
   17ee8:	vld1.32	{d18-d19}, [r3]!
   17eec:	adds	r2, r2, #1
   17ef0:	vmul.i32	q8, q9, q8
   17ef4:	bcc	17ee8 <print_yaml_data@@Base+0x9a4>
   17ef8:	vext.8	q9, q8, q8, #8
   17efc:	cmp	r0, lr
   17f00:	vmul.i32	q0, q8, q9
   17f04:	vmul.i32	q8, q0, d0[1]
   17f08:	vmov.32	r6, d16[0]
   17f0c:	beq	17f2c <print_yaml_data@@Base+0x9e8>
   17f10:	add	r1, sp, #16
   17f14:	sub	r0, r0, lr
   17f18:	add	r2, r1, lr, lsl #2
   17f1c:	ldr	r1, [r2], #4
   17f20:	subs	r0, r0, #1
   17f24:	mul	r6, r1, r6
   17f28:	bne	17f1c <print_yaml_data@@Base+0x9d8>
   17f2c:	cmp	r6, #1
   17f30:	blt	17fcc <print_yaml_data@@Base+0xa88>
   17f34:	movw	r0, #42716	; 0xa6dc
   17f38:	movt	r0, #1
   17f3c:	bl	18048 <print_yaml_data@@Base+0xb04>
   17f40:	mov	r0, r9
   17f44:	bl	127d4 <coda_cursor_goto_first_array_element@plt>
   17f48:	cmp	r0, #0
   17f4c:	beq	17f54 <print_yaml_data@@Base+0xa10>
   17f50:	bl	18294 <handle_coda_error@@Base>
   17f54:	movw	r5, #42356	; 0xa574
   17f58:	sub	r7, r6, #1
   17f5c:	mov	r4, #0
   17f60:	movt	r5, #1
   17f64:	b	17f74 <print_yaml_data@@Base+0xa30>
   17f68:	add	r4, r4, #1
   17f6c:	cmp	r6, r4
   17f70:	beq	17fc0 <print_yaml_data@@Base+0xa7c>
   17f74:	mov	r0, r5
   17f78:	bl	18090 <print_yaml_data@@Base+0xb4c>
   17f7c:	ldr	r0, [sl]
   17f80:	mov	r1, #0
   17f84:	add	r0, r0, #1
   17f88:	str	r0, [sl]
   17f8c:	mov	r0, r9
   17f90:	bl	17618 <print_yaml_data@@Base+0xd4>
   17f94:	ldr	r0, [sl]
   17f98:	cmp	r4, r7
   17f9c:	sub	r0, r0, #1
   17fa0:	str	r0, [sl]
   17fa4:	bge	17f68 <print_yaml_data@@Base+0xa24>
   17fa8:	mov	r0, r9
   17fac:	bl	128d0 <coda_cursor_goto_next_array_element@plt>
   17fb0:	cmp	r0, #0
   17fb4:	beq	17f68 <print_yaml_data@@Base+0xa24>
   17fb8:	bl	18294 <handle_coda_error@@Base>
   17fbc:	b	17f68 <print_yaml_data@@Base+0xa24>
   17fc0:	mov	r0, r9
   17fc4:	bl	12864 <coda_cursor_goto_parent@plt>
   17fc8:	b	17fd8 <print_yaml_data@@Base+0xa94>
   17fcc:	movw	r0, #42359	; 0xa577
   17fd0:	movt	r0, #1
   17fd4:	bl	18048 <print_yaml_data@@Base+0xb04>
   17fd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17fdc:	cmp	r0, #0
   17fe0:	ldrne	r0, [sl]
   17fe4:	subne	r0, r0, #1
   17fe8:	strne	r0, [sl]
   17fec:	sub	sp, fp, #28
   17ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ff4:	vldr	d0, [sp, #8]
   17ff8:	movw	r0, #41996	; 0xa40c
   17ffc:	add	r1, sp, #16
   18000:	movt	r0, #1
   18004:	bl	126d8 <coda_time_double_to_string@plt>
   18008:	cmp	r0, #0
   1800c:	beq	1801c <print_yaml_data@@Base+0xad8>
   18010:	movw	r0, #42025	; 0xa429
   18014:	movt	r0, #1
   18018:	b	17fd4 <print_yaml_data@@Base+0xa90>
   1801c:	movw	r0, #42459	; 0xa5db
   18020:	add	r1, sp, #16
   18024:	b	17b94 <print_yaml_data@@Base+0x650>
   18028:	movw	r0, #40785	; 0x9f51
   1802c:	movw	r1, #42363	; 0xa57b
   18030:	movw	r3, #40797	; 0x9f5d
   18034:	mov	r2, #44	; 0x2c
   18038:	movt	r0, #1
   1803c:	movt	r1, #1
   18040:	movt	r3, #1
   18044:	bl	12abc <__assert_fail@plt>
   18048:	sub	sp, sp, #12
   1804c:	push	{fp, lr}
   18050:	mov	fp, sp
   18054:	sub	sp, sp, #4
   18058:	mov	ip, r0
   1805c:	add	r0, fp, #8
   18060:	stm	r0, {r1, r2, r3}
   18064:	movw	r0, #53392	; 0xd090
   18068:	add	r2, fp, #8
   1806c:	mov	r1, ip
   18070:	movt	r0, #2
   18074:	str	r2, [sp]
   18078:	ldr	r0, [r0]
   1807c:	bl	129c0 <vfprintf@plt>
   18080:	mov	sp, fp
   18084:	pop	{fp, lr}
   18088:	add	sp, sp, #12
   1808c:	bx	lr
   18090:	sub	sp, sp, #12
   18094:	push	{r4, r5, r6, r7, fp, lr}
   18098:	add	fp, sp, #16
   1809c:	sub	sp, sp, #4
   180a0:	mov	r4, r0
   180a4:	add	r0, fp, #8
   180a8:	stm	r0, {r1, r2, r3}
   180ac:	movw	r0, #49612	; 0xc1cc
   180b0:	movt	r0, #2
   180b4:	ldr	r6, [r0]
   180b8:	cmp	r6, #0
   180bc:	bmi	18120 <print_yaml_data@@Base+0xbdc>
   180c0:	beq	180f4 <print_yaml_data@@Base+0xbb0>
   180c4:	movw	r7, #53392	; 0xd090
   180c8:	movw	r5, #40815	; 0x9f6f
   180cc:	movt	r7, #2
   180d0:	movt	r5, #1
   180d4:	ldr	r3, [r7]
   180d8:	mov	r0, r5
   180dc:	mov	r1, #2
   180e0:	mov	r2, #1
   180e4:	bl	127e0 <fwrite@plt>
   180e8:	sub	r6, r6, #1
   180ec:	cmp	r6, #0
   180f0:	bgt	180d4 <print_yaml_data@@Base+0xb90>
   180f4:	movw	r0, #53392	; 0xd090
   180f8:	add	r2, fp, #8
   180fc:	mov	r1, r4
   18100:	movt	r0, #2
   18104:	str	r2, [sp]
   18108:	ldr	r0, [r0]
   1810c:	bl	129c0 <vfprintf@plt>
   18110:	sub	sp, fp, #16
   18114:	pop	{r4, r5, r6, r7, fp, lr}
   18118:	add	sp, sp, #12
   1811c:	bx	lr
   18120:	movw	r0, #40785	; 0x9f51
   18124:	movw	r1, #42363	; 0xa57b
   18128:	movw	r3, #40797	; 0x9f5d
   1812c:	mov	r2, #44	; 0x2c
   18130:	movt	r0, #1
   18134:	movt	r1, #1
   18138:	movt	r3, #1
   1813c:	bl	12abc <__assert_fail@plt>
   18140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18144:	add	fp, sp, #28
   18148:	sub	sp, sp, #4
   1814c:	cmp	r1, #1
   18150:	blt	1828c <print_yaml_data@@Base+0xd48>
   18154:	movw	r6, #40376	; 0x9db8
   18158:	movw	r8, #40379	; 0x9dbb
   1815c:	movw	r9, #40385	; 0x9dc1
   18160:	movw	sl, #40388	; 0x9dc4
   18164:	movw	r7, #42063	; 0xa44f
   18168:	mov	r4, r1
   1816c:	mov	r5, r0
   18170:	movt	r6, #1
   18174:	movt	r8, #1
   18178:	movt	r9, #1
   1817c:	movt	sl, #1
   18180:	movt	r7, #1
   18184:	b	1819c <print_yaml_data@@Base+0xc58>
   18188:	mov	r0, r7
   1818c:	bl	18048 <print_yaml_data@@Base+0xb04>
   18190:	add	r5, r5, #1
   18194:	subs	r4, r4, #1
   18198:	beq	1828c <print_yaml_data@@Base+0xd48>
   1819c:	ldrb	r1, [r5]
   181a0:	sub	r0, r1, #8
   181a4:	cmp	r0, #26
   181a8:	bhi	1822c <print_yaml_data@@Base+0xce8>
   181ac:	add	r2, pc, #0
   181b0:	ldr	pc, [r2, r0, lsl #2]
   181b4:	andeq	r8, r1, r0, lsr #4
   181b8:	andeq	r8, r1, ip, asr r2
   181bc:	andeq	r8, r1, r4, ror #4
   181c0:	andeq	r8, r1, r0, asr #4
   181c4:	andeq	r8, r1, ip, ror #4
   181c8:	andeq	r8, r1, r4, ror r2
   181cc:	andeq	r8, r1, r0, asr #4
   181d0:	andeq	r8, r1, r0, asr #4
   181d4:	andeq	r8, r1, r0, asr #4
   181d8:	andeq	r8, r1, r0, asr #4
   181dc:	andeq	r8, r1, r0, asr #4
   181e0:	andeq	r8, r1, r0, asr #4
   181e4:	andeq	r8, r1, r0, asr #4
   181e8:	andeq	r8, r1, r0, asr #4
   181ec:	andeq	r8, r1, r0, asr #4
   181f0:	andeq	r8, r1, r0, asr #4
   181f4:	andeq	r8, r1, r0, asr #4
   181f8:	andeq	r8, r1, r0, asr #4
   181fc:	andeq	r8, r1, r0, asr #4
   18200:	andeq	r8, r1, r0, asr #4
   18204:	andeq	r8, r1, r0, asr #4
   18208:	andeq	r8, r1, r0, asr #4
   1820c:	andeq	r8, r1, r0, asr #4
   18210:	andeq	r8, r1, r0, asr #4
   18214:	andeq	r8, r1, r0, asr #4
   18218:	andeq	r8, r1, r0, asr #4
   1821c:	andeq	r8, r1, r8, lsl #3
   18220:	movw	r0, #40373	; 0x9db5
   18224:	movt	r0, #1
   18228:	b	1818c <print_yaml_data@@Base+0xc48>
   1822c:	cmp	r1, #92	; 0x5c
   18230:	bne	18240 <print_yaml_data@@Base+0xcfc>
   18234:	movw	r0, #40391	; 0x9dc7
   18238:	movt	r0, #1
   1823c:	b	1818c <print_yaml_data@@Base+0xc48>
   18240:	sub	r0, r1, #32
   18244:	uxtb	r0, r0
   18248:	cmp	r0, #94	; 0x5e
   1824c:	bhi	1827c <print_yaml_data@@Base+0xd38>
   18250:	movw	r0, #40818	; 0x9f72
   18254:	movt	r0, #1
   18258:	b	18284 <print_yaml_data@@Base+0xd40>
   1825c:	mov	r0, r6
   18260:	b	1818c <print_yaml_data@@Base+0xc48>
   18264:	mov	r0, r8
   18268:	b	1818c <print_yaml_data@@Base+0xc48>
   1826c:	mov	r0, r9
   18270:	b	1818c <print_yaml_data@@Base+0xc48>
   18274:	mov	r0, sl
   18278:	b	1818c <print_yaml_data@@Base+0xc48>
   1827c:	movw	r0, #42066	; 0xa452
   18280:	movt	r0, #1
   18284:	bl	18048 <print_yaml_data@@Base+0xb04>
   18288:	b	18190 <print_yaml_data@@Base+0xc4c>
   1828c:	sub	sp, fp, #28
   18290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018294 <handle_coda_error@@Base>:
   18294:	push	{fp, lr}
   18298:	mov	fp, sp
   1829c:	movw	r5, #49584	; 0xc1b0
   182a0:	movt	r5, #2
   182a4:	ldr	r4, [r5]
   182a8:	bl	12a68 <coda_get_errno@plt>
   182ac:	ldr	r0, [r0]
   182b0:	bl	12a20 <coda_errno_to_string@plt>
   182b4:	movw	r1, #42452	; 0xa5d4
   182b8:	mov	r2, r0
   182bc:	mov	r0, r4
   182c0:	movt	r1, #1
   182c4:	bl	128c4 <fprintf@plt>
   182c8:	ldr	r0, [r5]
   182cc:	bl	126cc <fflush@plt>
   182d0:	mov	r0, #1
   182d4:	bl	1287c <exit@plt>

000182d8 <main@@Base>:
   182d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182dc:	add	fp, sp, #28
   182e0:	sub	sp, sp, #20
   182e4:	cmp	r0, #1
   182e8:	beq	19474 <main@@Base+0x119c>
   182ec:	ldr	r6, [r1, #4]
   182f0:	mov	r9, r1
   182f4:	movw	r1, #42463	; 0xa5df
   182f8:	mov	sl, r0
   182fc:	movt	r1, #1
   18300:	mov	r0, r6
   18304:	bl	1266c <strcmp@plt>
   18308:	cmp	r0, #0
   1830c:	beq	19474 <main@@Base+0x119c>
   18310:	movw	r1, #46060	; 0xb3ec
   18314:	mov	r0, r6
   18318:	movt	r1, #1
   1831c:	bl	1266c <strcmp@plt>
   18320:	cmp	r0, #0
   18324:	beq	19474 <main@@Base+0x119c>
   18328:	movw	r1, #42466	; 0xa5e2
   1832c:	mov	r0, r6
   18330:	movt	r1, #1
   18334:	bl	1266c <strcmp@plt>
   18338:	cmp	r0, #0
   1833c:	beq	19480 <main@@Base+0x11a8>
   18340:	movw	r1, #46114	; 0xb422
   18344:	mov	r0, r6
   18348:	movt	r1, #1
   1834c:	bl	1266c <strcmp@plt>
   18350:	cmp	r0, #0
   18354:	beq	19480 <main@@Base+0x11a8>
   18358:	cmp	sl, #3
   1835c:	blt	18378 <main@@Base+0xa0>
   18360:	movw	r1, #42469	; 0xa5e5
   18364:	mov	r0, r6
   18368:	movt	r1, #1
   1836c:	bl	1266c <strcmp@plt>
   18370:	cmp	r0, #0
   18374:	beq	18e48 <main@@Base+0xb70>
   18378:	ldr	r0, [r9]
   1837c:	movw	r2, #42472	; 0xa5e8
   18380:	mov	r1, #0
   18384:	movt	r2, #1
   18388:	bl	12714 <coda_set_definition_path_conditional@plt>
   1838c:	mov	r7, #1
   18390:	cmp	r0, #0
   18394:	bne	1948c <main@@Base+0x11b4>
   18398:	ldr	r6, [r9, r7, lsl #2]
   1839c:	movw	r1, #42498	; 0xa602
   183a0:	movt	r1, #1
   183a4:	mov	r0, r6
   183a8:	bl	1266c <strcmp@plt>
   183ac:	cmp	r0, #0
   183b0:	beq	186c8 <main@@Base+0x3f0>
   183b4:	movw	r1, #42503	; 0xa607
   183b8:	mov	r0, r6
   183bc:	movt	r1, #1
   183c0:	bl	1266c <strcmp@plt>
   183c4:	cmp	r0, #0
   183c8:	beq	18a0c <main@@Base+0x734>
   183cc:	movw	r1, #42509	; 0xa60d
   183d0:	mov	r0, r6
   183d4:	movt	r1, #1
   183d8:	bl	1266c <strcmp@plt>
   183dc:	cmp	r0, #0
   183e0:	beq	18ee8 <main@@Base+0xc10>
   183e4:	movw	r1, #42514	; 0xa612
   183e8:	mov	r0, r6
   183ec:	movt	r1, #1
   183f0:	bl	1266c <strcmp@plt>
   183f4:	cmp	r0, #0
   183f8:	beq	19188 <main@@Base+0xeb0>
   183fc:	movw	r1, #45149	; 0xb05d
   18400:	mov	r0, r6
   18404:	movt	r1, #1
   18408:	bl	1266c <strcmp@plt>
   1840c:	cmp	r0, #0
   18410:	bne	193c4 <main@@Base+0x10ec>
   18414:	movw	r0, #49640	; 0xc1e8
   18418:	mov	r6, #0
   1841c:	mov	r1, #5
   18420:	movt	r0, #2
   18424:	str	r6, [r0]
   18428:	movw	r0, #53412	; 0xd0a4
   1842c:	movt	r0, #2
   18430:	str	r1, [r0]
   18434:	movw	r0, #49624	; 0xc1d8
   18438:	movw	r1, #53392	; 0xd090
   1843c:	movt	r0, #2
   18440:	movt	r1, #2
   18444:	str	r6, [r0]
   18448:	movw	r0, #53416	; 0xd0a8
   1844c:	movt	r0, #2
   18450:	str	r6, [r0]
   18454:	movw	r0, #49588	; 0xc1b4
   18458:	movt	r0, #2
   1845c:	ldr	r0, [r0]
   18460:	str	r0, [r1]
   18464:	add	r0, r7, #1
   18468:	sub	r4, sl, r0
   1846c:	cmp	r4, #1
   18470:	blt	193c4 <main@@Base+0x10ec>
   18474:	add	r7, r9, r0, lsl #2
   18478:	sub	r0, r4, #1
   1847c:	movw	r9, #42569	; 0xa649
   18480:	movw	r8, #45314	; 0xb102
   18484:	str	r0, [sp, #12]
   18488:	mov	r0, #1
   1848c:	movt	r9, #1
   18490:	movt	r8, #1
   18494:	str	r0, [sp, #16]
   18498:	mov	r0, #0
   1849c:	str	r0, [sp, #8]
   184a0:	mov	r0, #0
   184a4:	str	r0, [sp, #4]
   184a8:	mov	r0, #0
   184ac:	str	r0, [sp]
   184b0:	b	184cc <main@@Base+0x1f4>
   184b4:	mov	r0, #0
   184b8:	mov	r5, r6
   184bc:	str	r0, [sp, #16]
   184c0:	add	r6, r5, #1
   184c4:	cmp	r6, r4
   184c8:	bge	18e58 <main@@Base+0xb80>
   184cc:	ldr	sl, [r7, r6, lsl #2]
   184d0:	mov	r1, r9
   184d4:	mov	r0, sl
   184d8:	bl	1266c <strcmp@plt>
   184dc:	cmp	r0, #0
   184e0:	beq	184b4 <main@@Base+0x1dc>
   184e4:	mov	r0, sl
   184e8:	mov	r1, r8
   184ec:	bl	1266c <strcmp@plt>
   184f0:	cmp	r0, #0
   184f4:	beq	184b4 <main@@Base+0x1dc>
   184f8:	movw	r1, #42637	; 0xa68d
   184fc:	mov	r0, sl
   18500:	movt	r1, #1
   18504:	bl	1266c <strcmp@plt>
   18508:	cmp	r0, #0
   1850c:	beq	18528 <main@@Base+0x250>
   18510:	movw	r1, #42640	; 0xa690
   18514:	mov	r0, sl
   18518:	movt	r1, #1
   1851c:	bl	1266c <strcmp@plt>
   18520:	cmp	r0, #0
   18524:	bne	18544 <main@@Base+0x26c>
   18528:	add	r5, r6, #1
   1852c:	cmp	r5, r4
   18530:	bge	18544 <main@@Base+0x26c>
   18534:	ldr	r0, [r7, r5, lsl #2]
   18538:	ldrb	r1, [r0]
   1853c:	cmp	r1, #45	; 0x2d
   18540:	bne	18668 <main@@Base+0x390>
   18544:	movw	r1, #42721	; 0xa6e1
   18548:	mov	r0, sl
   1854c:	movt	r1, #1
   18550:	bl	1266c <strcmp@plt>
   18554:	cmp	r0, #0
   18558:	beq	18574 <main@@Base+0x29c>
   1855c:	movw	r1, #42724	; 0xa6e4
   18560:	mov	r0, sl
   18564:	movt	r1, #1
   18568:	bl	1266c <strcmp@plt>
   1856c:	cmp	r0, #0
   18570:	bne	18590 <main@@Base+0x2b8>
   18574:	add	r5, r6, #1
   18578:	cmp	r5, r4
   1857c:	bge	18590 <main@@Base+0x2b8>
   18580:	ldr	r0, [r7, r5, lsl #2]
   18584:	ldrb	r1, [r0]
   18588:	cmp	r1, #45	; 0x2d
   1858c:	bne	18678 <main@@Base+0x3a0>
   18590:	movw	r1, #42731	; 0xa6eb
   18594:	mov	r0, sl
   18598:	movt	r1, #1
   1859c:	bl	1266c <strcmp@plt>
   185a0:	cmp	r0, #0
   185a4:	bne	185c4 <main@@Base+0x2ec>
   185a8:	add	r5, r6, #1
   185ac:	cmp	r5, r4
   185b0:	bge	185c4 <main@@Base+0x2ec>
   185b4:	ldr	r0, [r7, r5, lsl #2]
   185b8:	ldrb	r1, [r0]
   185bc:	cmp	r1, #45	; 0x2d
   185c0:	bne	18688 <main@@Base+0x3b0>
   185c4:	movw	r1, #42743	; 0xa6f7
   185c8:	mov	r9, r7
   185cc:	ldr	r7, [sp, #12]
   185d0:	mov	r0, sl
   185d4:	mov	r8, r4
   185d8:	movt	r1, #1
   185dc:	bl	1266c <strcmp@plt>
   185e0:	cmp	r0, #0
   185e4:	bne	18628 <main@@Base+0x350>
   185e8:	add	r5, r6, #3
   185ec:	cmp	r5, r8
   185f0:	bge	18628 <main@@Base+0x350>
   185f4:	add	r0, r9, r6, lsl #2
   185f8:	ldr	r4, [r0, #4]
   185fc:	ldrb	r1, [r4]
   18600:	cmp	r1, #45	; 0x2d
   18604:	beq	18628 <main@@Base+0x350>
   18608:	ldr	r2, [r0, #8]
   1860c:	ldrb	r0, [r2]
   18610:	cmp	r0, #45	; 0x2d
   18614:	beq	18628 <main@@Base+0x350>
   18618:	ldr	r0, [r9, r5, lsl #2]
   1861c:	ldrb	r1, [r0]
   18620:	cmp	r1, #45	; 0x2d
   18624:	bne	186a4 <main@@Base+0x3cc>
   18628:	cmp	r6, r7
   1862c:	bne	193c4 <main@@Base+0x10ec>
   18630:	ldrb	r0, [sl]
   18634:	cmp	r0, #45	; 0x2d
   18638:	beq	193c4 <main@@Base+0x10ec>
   1863c:	movw	r0, #49640	; 0xc1e8
   18640:	mov	r5, r7
   18644:	movt	r0, #2
   18648:	str	sl, [r0]
   1864c:	mov	r7, r9
   18650:	movw	r9, #42569	; 0xa649
   18654:	mov	r4, r8
   18658:	movw	r8, #45314	; 0xb102
   1865c:	movt	r9, #1
   18660:	movt	r8, #1
   18664:	b	184c0 <main@@Base+0x1e8>
   18668:	movw	r1, #49624	; 0xc1d8
   1866c:	movt	r1, #2
   18670:	str	r0, [r1]
   18674:	b	184c0 <main@@Base+0x1e8>
   18678:	movw	r1, #53416	; 0xd0a8
   1867c:	movt	r1, #2
   18680:	str	r0, [r1]
   18684:	b	184c0 <main@@Base+0x1e8>
   18688:	mov	r1, #0
   1868c:	mov	r2, #10
   18690:	bl	12678 <strtol@plt>
   18694:	movw	r1, #49580	; 0xc1ac
   18698:	movt	r1, #2
   1869c:	str	r0, [r1]
   186a0:	b	184c0 <main@@Base+0x1e8>
   186a4:	mov	r6, r2
   186a8:	mov	r1, #0
   186ac:	mov	r2, #10
   186b0:	bl	12678 <strtol@plt>
   186b4:	str	r0, [sp, #8]
   186b8:	str	r4, [sp]
   186bc:	mov	r0, r6
   186c0:	str	r6, [sp, #4]
   186c4:	b	1864c <main@@Base+0x374>
   186c8:	movw	r0, #49640	; 0xc1e8
   186cc:	mov	r8, #0
   186d0:	mov	r5, #1
   186d4:	movw	r6, #49636	; 0xc1e4
   186d8:	movt	r0, #2
   186dc:	movt	r6, #2
   186e0:	str	r8, [r0, #664]	; 0x298
   186e4:	str	r8, [r0]
   186e8:	movw	r0, #53412	; 0xd0a4
   186ec:	str	r8, [r6]
   186f0:	movt	r0, #2
   186f4:	str	r8, [r0]
   186f8:	movw	r0, #49616	; 0xc1d0
   186fc:	movt	r0, #2
   18700:	str	r5, [r0]
   18704:	movw	r0, #49620	; 0xc1d4
   18708:	movt	r0, #2
   1870c:	str	r8, [r0]
   18710:	movw	r0, #53400	; 0xd098
   18714:	movt	r0, #2
   18718:	str	r8, [r0]
   1871c:	movw	r0, #49632	; 0xc1e0
   18720:	movt	r0, #2
   18724:	str	r8, [r0]
   18728:	movw	r0, #53404	; 0xd09c
   1872c:	movt	r0, #2
   18730:	str	r8, [r0]
   18734:	add	r0, r7, #1
   18738:	sub	r7, sl, r0
   1873c:	cmp	r7, #1
   18740:	blt	193c4 <main@@Base+0x10ec>
   18744:	movw	r4, #42566	; 0xa646
   18748:	add	r9, r9, r0, lsl #2
   1874c:	sub	r0, r7, #1
   18750:	str	r0, [sp, #8]
   18754:	movt	r4, #1
   18758:	mov	r0, #1
   1875c:	str	r0, [sp, #16]
   18760:	mov	r0, #1
   18764:	str	r0, [sp, #12]
   18768:	b	1877c <main@@Base+0x4a4>
   1876c:	str	r5, [r6]
   18770:	add	r8, r8, #1
   18774:	cmp	r8, r7
   18778:	bge	189b4 <main@@Base+0x6dc>
   1877c:	ldr	sl, [r9, r8, lsl #2]
   18780:	mov	r1, r4
   18784:	mov	r0, sl
   18788:	bl	1266c <strcmp@plt>
   1878c:	cmp	r0, #0
   18790:	beq	1876c <main@@Base+0x494>
   18794:	movw	r1, #42890	; 0xa78a
   18798:	mov	r0, sl
   1879c:	movt	r1, #1
   187a0:	bl	1266c <strcmp@plt>
   187a4:	cmp	r0, #0
   187a8:	beq	1876c <main@@Base+0x494>
   187ac:	movw	r1, #42569	; 0xa649
   187b0:	mov	r0, sl
   187b4:	movt	r1, #1
   187b8:	bl	1266c <strcmp@plt>
   187bc:	cmp	r0, #0
   187c0:	beq	18910 <main@@Base+0x638>
   187c4:	movw	r1, #44710	; 0xaea6
   187c8:	mov	r0, sl
   187cc:	movt	r1, #1
   187d0:	bl	1266c <strcmp@plt>
   187d4:	cmp	r0, #0
   187d8:	beq	18910 <main@@Base+0x638>
   187dc:	movw	r1, #42572	; 0xa64c
   187e0:	mov	r0, sl
   187e4:	mov	r4, r6
   187e8:	movt	r1, #1
   187ec:	bl	1266c <strcmp@plt>
   187f0:	cmp	r0, #0
   187f4:	beq	18810 <main@@Base+0x538>
   187f8:	movw	r1, #42575	; 0xa64f
   187fc:	mov	r0, sl
   18800:	movt	r1, #1
   18804:	bl	1266c <strcmp@plt>
   18808:	cmp	r0, #0
   1880c:	bne	1882c <main@@Base+0x554>
   18810:	add	r6, r8, #1
   18814:	cmp	r6, r7
   18818:	bge	1882c <main@@Base+0x554>
   1881c:	ldr	r0, [r9, r6, lsl #2]
   18820:	ldrb	r1, [r0]
   18824:	cmp	r1, #45	; 0x2d
   18828:	bne	18954 <main@@Base+0x67c>
   1882c:	movw	r1, #42625	; 0xa681
   18830:	mov	r0, sl
   18834:	movt	r1, #1
   18838:	bl	1266c <strcmp@plt>
   1883c:	cmp	r0, #0
   18840:	beq	1891c <main@@Base+0x644>
   18844:	movw	r1, #42972	; 0xa7dc
   18848:	mov	r0, sl
   1884c:	movt	r1, #1
   18850:	bl	1266c <strcmp@plt>
   18854:	cmp	r0, #0
   18858:	beq	1891c <main@@Base+0x644>
   1885c:	movw	r1, #42628	; 0xa684
   18860:	mov	r0, sl
   18864:	movt	r1, #1
   18868:	bl	1266c <strcmp@plt>
   1886c:	cmp	r0, #0
   18870:	mov	r6, r4
   18874:	beq	18938 <main@@Base+0x660>
   18878:	movw	r1, #43036	; 0xa81c
   1887c:	mov	r0, sl
   18880:	movt	r1, #1
   18884:	bl	1266c <strcmp@plt>
   18888:	cmp	r0, #0
   1888c:	beq	18938 <main@@Base+0x660>
   18890:	movw	r1, #43097	; 0xa859
   18894:	mov	r0, sl
   18898:	movt	r1, #1
   1889c:	bl	1266c <strcmp@plt>
   188a0:	movw	r4, #42566	; 0xa646
   188a4:	cmp	r0, #0
   188a8:	mov	r5, #1
   188ac:	movt	r4, #1
   188b0:	beq	18984 <main@@Base+0x6ac>
   188b4:	movw	r1, #43172	; 0xa8a4
   188b8:	mov	r0, sl
   188bc:	movt	r1, #1
   188c0:	bl	1266c <strcmp@plt>
   188c4:	cmp	r0, #0
   188c8:	beq	18994 <main@@Base+0x6bc>
   188cc:	movw	r1, #44802	; 0xaf02
   188d0:	mov	r0, sl
   188d4:	movt	r1, #1
   188d8:	bl	1266c <strcmp@plt>
   188dc:	cmp	r0, #0
   188e0:	beq	189a8 <main@@Base+0x6d0>
   188e4:	ldr	r0, [sp, #8]
   188e8:	cmp	r8, r0
   188ec:	bne	193c4 <main@@Base+0x10ec>
   188f0:	ldrb	r0, [sl]
   188f4:	cmp	r0, #45	; 0x2d
   188f8:	beq	193c4 <main@@Base+0x10ec>
   188fc:	ldr	r8, [sp, #8]
   18900:	movw	r0, #49640	; 0xc1e8
   18904:	movt	r0, #2
   18908:	str	sl, [r0]
   1890c:	b	18770 <main@@Base+0x498>
   18910:	mov	r0, #0
   18914:	str	r0, [sp, #16]
   18918:	b	18770 <main@@Base+0x498>
   1891c:	movw	r1, #53400	; 0xd098
   18920:	mov	r0, #1
   18924:	mov	r6, r4
   18928:	mov	r5, #1
   1892c:	movt	r1, #2
   18930:	str	r0, [r1]
   18934:	b	18948 <main@@Base+0x670>
   18938:	movw	r0, #49632	; 0xc1e0
   1893c:	mov	r5, #1
   18940:	movt	r0, #2
   18944:	str	r5, [r0]
   18948:	movw	r4, #42566	; 0xa646
   1894c:	movt	r4, #1
   18950:	b	18770 <main@@Base+0x498>
   18954:	bl	15984 <codadump_filter_create@@Base>
   18958:	movw	r1, #49640	; 0xc1e8
   1895c:	mov	r8, r6
   18960:	mov	r6, r4
   18964:	movw	r4, #42566	; 0xa646
   18968:	cmp	r0, #0
   1896c:	mov	r5, #1
   18970:	movt	r1, #2
   18974:	movt	r4, #1
   18978:	str	r0, [r1, #664]	; 0x298
   1897c:	bne	18770 <main@@Base+0x498>
   18980:	b	194c0 <main@@Base+0x11e8>
   18984:	movw	r0, #53404	; 0xd09c
   18988:	movt	r0, #2
   1898c:	str	r5, [r0]
   18990:	b	18770 <main@@Base+0x498>
   18994:	movw	r0, #49620	; 0xc1d4
   18998:	str	r5, [r6]
   1899c:	movt	r0, #2
   189a0:	str	r5, [r0]
   189a4:	b	18770 <main@@Base+0x498>
   189a8:	mov	r0, #0
   189ac:	str	r0, [sp, #12]
   189b0:	b	18770 <main@@Base+0x498>
   189b4:	movw	r0, #49640	; 0xc1e8
   189b8:	movt	r0, #2
   189bc:	ldr	r0, [r0]
   189c0:	cmp	r0, #0
   189c4:	ldrbne	r0, [r0]
   189c8:	cmpne	r0, #0
   189cc:	beq	193c4 <main@@Base+0x10ec>
   189d0:	bl	128e8 <coda_init@plt>
   189d4:	cmp	r0, #0
   189d8:	bne	1948c <main@@Base+0x11b4>
   189dc:	ldr	r0, [sp, #12]
   189e0:	clz	r0, r0
   189e4:	lsr	r0, r0, #5
   189e8:	bl	1272c <coda_set_option_bypass_special_types@plt>
   189ec:	mov	r0, #0
   189f0:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   189f4:	ldr	r0, [sp, #16]
   189f8:	bl	128f4 <coda_set_option_perform_conversions@plt>
   189fc:	bl	16d88 <traverse_info_init@@Base>
   18a00:	bl	1469c <dim_info_init@@Base>
   18a04:	bl	16de0 <traverse_product@@Base>
   18a08:	b	18e3c <main@@Base+0xb64>
   18a0c:	movw	r0, #49640	; 0xc1e8
   18a10:	mov	r6, #0
   18a14:	mov	r1, #1
   18a18:	movw	r2, #53396	; 0xd094
   18a1c:	movt	r0, #2
   18a20:	movt	r2, #2
   18a24:	str	r6, [r0, #664]	; 0x298
   18a28:	str	r6, [r0]
   18a2c:	movw	r0, #53412	; 0xd0a4
   18a30:	movt	r0, #2
   18a34:	str	r1, [r0]
   18a38:	movw	r0, #49624	; 0xc1d8
   18a3c:	movt	r0, #2
   18a40:	str	r6, [r0]
   18a44:	movw	r0, #40816	; 0x9f70
   18a48:	movt	r0, #1
   18a4c:	str	r0, [r2]
   18a50:	movw	r0, #49616	; 0xc1d0
   18a54:	movt	r0, #2
   18a58:	str	r1, [r0]
   18a5c:	movw	r0, #49636	; 0xc1e4
   18a60:	movt	r0, #2
   18a64:	str	r1, [r0]
   18a68:	movw	r0, #53408	; 0xd0a0
   18a6c:	movw	r1, #53392	; 0xd090
   18a70:	movt	r0, #2
   18a74:	movt	r1, #2
   18a78:	str	r6, [r0]
   18a7c:	movw	r0, #53792	; 0xd220
   18a80:	movt	r0, #2
   18a84:	str	r6, [r0]
   18a88:	movw	r0, #53796	; 0xd224
   18a8c:	movt	r0, #2
   18a90:	str	r6, [r0]
   18a94:	movw	r0, #49628	; 0xc1dc
   18a98:	movt	r0, #2
   18a9c:	str	r6, [r0]
   18aa0:	movw	r0, #49588	; 0xc1b4
   18aa4:	movt	r0, #2
   18aa8:	ldr	r0, [r0]
   18aac:	str	r0, [r1]
   18ab0:	add	r0, r7, #1
   18ab4:	sub	r8, sl, r0
   18ab8:	cmp	r8, #1
   18abc:	blt	193c4 <main@@Base+0x10ec>
   18ac0:	movw	r5, #42569	; 0xa649
   18ac4:	add	sl, r9, r0, lsl #2
   18ac8:	sub	r0, r8, #1
   18acc:	mov	r4, #1
   18ad0:	movt	r5, #1
   18ad4:	str	r0, [sp, #12]
   18ad8:	mov	r0, #1
   18adc:	str	r0, [sp, #16]
   18ae0:	ldr	r9, [sl, r6, lsl #2]
   18ae4:	mov	r1, r5
   18ae8:	mov	r0, r9
   18aec:	bl	1266c <strcmp@plt>
   18af0:	cmp	r0, #0
   18af4:	beq	18cf8 <main@@Base+0xa20>
   18af8:	movw	r1, #44710	; 0xaea6
   18afc:	mov	r0, r9
   18b00:	movt	r1, #1
   18b04:	bl	1266c <strcmp@plt>
   18b08:	cmp	r0, #0
   18b0c:	beq	18cf8 <main@@Base+0xa20>
   18b10:	movw	r1, #42572	; 0xa64c
   18b14:	mov	r0, r9
   18b18:	movt	r1, #1
   18b1c:	bl	1266c <strcmp@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18b40 <main@@Base+0x868>
   18b28:	movw	r1, #42575	; 0xa64f
   18b2c:	mov	r0, r9
   18b30:	movt	r1, #1
   18b34:	bl	1266c <strcmp@plt>
   18b38:	cmp	r0, #0
   18b3c:	bne	18b5c <main@@Base+0x884>
   18b40:	add	r7, r6, #1
   18b44:	cmp	r7, r8
   18b48:	bge	18b5c <main@@Base+0x884>
   18b4c:	ldr	r0, [sl, r7, lsl #2]
   18b50:	ldrb	r1, [r0]
   18b54:	cmp	r1, #45	; 0x2d
   18b58:	bne	18d20 <main@@Base+0xa48>
   18b5c:	movw	r1, #42631	; 0xa687
   18b60:	mov	r0, r9
   18b64:	movt	r1, #1
   18b68:	bl	1266c <strcmp@plt>
   18b6c:	cmp	r0, #0
   18b70:	beq	18d00 <main@@Base+0xa28>
   18b74:	movw	r1, #43585	; 0xaa41
   18b78:	mov	r0, r9
   18b7c:	movt	r1, #1
   18b80:	bl	1266c <strcmp@plt>
   18b84:	cmp	r0, #0
   18b88:	beq	18d00 <main@@Base+0xa28>
   18b8c:	movw	r1, #42634	; 0xa68a
   18b90:	mov	r0, r9
   18b94:	movt	r1, #1
   18b98:	bl	1266c <strcmp@plt>
   18b9c:	cmp	r0, #0
   18ba0:	beq	18d10 <main@@Base+0xa38>
   18ba4:	movw	r1, #43674	; 0xaa9a
   18ba8:	mov	r0, r9
   18bac:	movt	r1, #1
   18bb0:	bl	1266c <strcmp@plt>
   18bb4:	cmp	r0, #0
   18bb8:	beq	18d10 <main@@Base+0xa38>
   18bbc:	movw	r1, #42637	; 0xa68d
   18bc0:	mov	r0, r9
   18bc4:	movt	r1, #1
   18bc8:	bl	1266c <strcmp@plt>
   18bcc:	cmp	r0, #0
   18bd0:	beq	18bec <main@@Base+0x914>
   18bd4:	movw	r1, #42640	; 0xa690
   18bd8:	mov	r0, r9
   18bdc:	movt	r1, #1
   18be0:	bl	1266c <strcmp@plt>
   18be4:	cmp	r0, #0
   18be8:	bne	18c08 <main@@Base+0x930>
   18bec:	add	r7, r6, #1
   18bf0:	cmp	r7, r8
   18bf4:	bge	18c08 <main@@Base+0x930>
   18bf8:	ldr	r0, [sl, r7, lsl #2]
   18bfc:	ldrb	r1, [r0]
   18c00:	cmp	r1, #45	; 0x2d
   18c04:	bne	18d70 <main@@Base+0xa98>
   18c08:	movw	r1, #42649	; 0xa699
   18c0c:	mov	r0, r9
   18c10:	movt	r1, #1
   18c14:	bl	1266c <strcmp@plt>
   18c18:	cmp	r0, #0
   18c1c:	beq	18d3c <main@@Base+0xa64>
   18c20:	movw	r1, #43773	; 0xaafd
   18c24:	mov	r0, r9
   18c28:	movt	r1, #1
   18c2c:	bl	1266c <strcmp@plt>
   18c30:	cmp	r0, #0
   18c34:	beq	18d3c <main@@Base+0xa64>
   18c38:	movw	r1, #42652	; 0xa69c
   18c3c:	mov	r0, r9
   18c40:	movt	r1, #1
   18c44:	bl	1266c <strcmp@plt>
   18c48:	cmp	r0, #0
   18c4c:	beq	18c68 <main@@Base+0x990>
   18c50:	movw	r1, #42655	; 0xa69f
   18c54:	mov	r0, r9
   18c58:	movt	r1, #1
   18c5c:	bl	1266c <strcmp@plt>
   18c60:	cmp	r0, #0
   18c64:	bne	18c84 <main@@Base+0x9ac>
   18c68:	add	r7, r6, #1
   18c6c:	cmp	r7, r8
   18c70:	bge	18c84 <main@@Base+0x9ac>
   18c74:	ldr	r0, [sl, r7, lsl #2]
   18c78:	ldrb	r1, [r0]
   18c7c:	cmp	r1, #45	; 0x2d
   18c80:	bne	18d80 <main@@Base+0xaa8>
   18c84:	movw	r1, #42625	; 0xa681
   18c88:	mov	r0, r9
   18c8c:	movt	r1, #1
   18c90:	bl	1266c <strcmp@plt>
   18c94:	cmp	r0, #0
   18c98:	beq	18d4c <main@@Base+0xa74>
   18c9c:	movw	r1, #44012	; 0xabec
   18ca0:	mov	r0, r9
   18ca4:	movt	r1, #1
   18ca8:	bl	1266c <strcmp@plt>
   18cac:	cmp	r0, #0
   18cb0:	beq	18d4c <main@@Base+0xa74>
   18cb4:	movw	r1, #44802	; 0xaf02
   18cb8:	mov	r0, r9
   18cbc:	movt	r1, #1
   18cc0:	bl	1266c <strcmp@plt>
   18cc4:	cmp	r0, #0
   18cc8:	beq	18d90 <main@@Base+0xab8>
   18ccc:	ldr	r0, [sp, #12]
   18cd0:	cmp	r6, r0
   18cd4:	bne	193c4 <main@@Base+0x10ec>
   18cd8:	ldrb	r0, [r9]
   18cdc:	cmp	r0, #45	; 0x2d
   18ce0:	beq	193c4 <main@@Base+0x10ec>
   18ce4:	ldr	r7, [sp, #12]
   18ce8:	movw	r0, #49640	; 0xc1e8
   18cec:	movt	r0, #2
   18cf0:	str	r9, [r0]
   18cf4:	b	18d60 <main@@Base+0xa88>
   18cf8:	mov	r4, #0
   18cfc:	b	18d5c <main@@Base+0xa84>
   18d00:	movw	r1, #53408	; 0xd0a0
   18d04:	mov	r0, #1
   18d08:	movt	r1, #2
   18d0c:	b	18d58 <main@@Base+0xa80>
   18d10:	movw	r1, #53792	; 0xd220
   18d14:	mov	r0, #1
   18d18:	movt	r1, #2
   18d1c:	b	18d58 <main@@Base+0xa80>
   18d20:	bl	15984 <codadump_filter_create@@Base>
   18d24:	movw	r1, #49640	; 0xc1e8
   18d28:	cmp	r0, #0
   18d2c:	movt	r1, #2
   18d30:	str	r0, [r1, #664]	; 0x298
   18d34:	bne	18d60 <main@@Base+0xa88>
   18d38:	b	194c0 <main@@Base+0x11e8>
   18d3c:	movw	r1, #53796	; 0xd224
   18d40:	mov	r0, #1
   18d44:	movt	r1, #2
   18d48:	b	18d58 <main@@Base+0xa80>
   18d4c:	movw	r1, #49628	; 0xc1dc
   18d50:	mov	r0, #1
   18d54:	movt	r1, #2
   18d58:	str	r0, [r1]
   18d5c:	mov	r7, r6
   18d60:	add	r6, r7, #1
   18d64:	cmp	r6, r8
   18d68:	blt	18ae0 <main@@Base+0x808>
   18d6c:	b	18da0 <main@@Base+0xac8>
   18d70:	movw	r1, #49624	; 0xc1d8
   18d74:	movt	r1, #2
   18d78:	str	r0, [r1]
   18d7c:	b	18d60 <main@@Base+0xa88>
   18d80:	movw	r1, #53396	; 0xd094
   18d84:	movt	r1, #2
   18d88:	str	r0, [r1]
   18d8c:	b	18d60 <main@@Base+0xa88>
   18d90:	mov	r0, #0
   18d94:	mov	r7, r6
   18d98:	str	r0, [sp, #16]
   18d9c:	b	18d60 <main@@Base+0xa88>
   18da0:	movw	r0, #49640	; 0xc1e8
   18da4:	movt	r0, #2
   18da8:	ldr	r0, [r0]
   18dac:	cmp	r0, #0
   18db0:	ldrbne	r0, [r0]
   18db4:	cmpne	r0, #0
   18db8:	beq	193c4 <main@@Base+0x10ec>
   18dbc:	bl	128e8 <coda_init@plt>
   18dc0:	cmp	r0, #0
   18dc4:	bne	1948c <main@@Base+0x11b4>
   18dc8:	ldr	r0, [sp, #16]
   18dcc:	clz	r0, r0
   18dd0:	lsr	r0, r0, #5
   18dd4:	bl	1272c <coda_set_option_bypass_special_types@plt>
   18dd8:	mov	r0, #0
   18ddc:	bl	12660 <coda_set_option_perform_boundary_checks@plt>
   18de0:	mov	r0, r4
   18de4:	bl	128f4 <coda_set_option_perform_conversions@plt>
   18de8:	bl	16d88 <traverse_info_init@@Base>
   18dec:	bl	1469c <dim_info_init@@Base>
   18df0:	movw	r4, #49624	; 0xc1d8
   18df4:	movw	r5, #53392	; 0xd090
   18df8:	movt	r4, #2
   18dfc:	movt	r5, #2
   18e00:	ldr	r0, [r4]
   18e04:	cmp	r0, #0
   18e08:	beq	18e24 <main@@Base+0xb4c>
   18e0c:	movw	r1, #42674	; 0xa6b2
   18e10:	movt	r1, #1
   18e14:	bl	126a8 <fopen@plt>
   18e18:	cmp	r0, #0
   18e1c:	str	r0, [r5]
   18e20:	beq	194dc <main@@Base+0x1204>
   18e24:	bl	16de0 <traverse_product@@Base>
   18e28:	ldr	r0, [r4]
   18e2c:	cmp	r0, #0
   18e30:	beq	18e3c <main@@Base+0xb64>
   18e34:	ldr	r0, [r5]
   18e38:	bl	1296c <fclose@plt>
   18e3c:	bl	146bc <dim_info_done@@Base>
   18e40:	bl	16da8 <traverse_info_done@@Base>
   18e44:	b	19464 <main@@Base+0x118c>
   18e48:	ldr	r0, [r9, #8]
   18e4c:	bl	12798 <coda_set_definition_path@plt>
   18e50:	mov	r7, #3
   18e54:	b	18398 <main@@Base+0xc0>
   18e58:	movw	r0, #49640	; 0xc1e8
   18e5c:	movt	r0, #2
   18e60:	ldr	r0, [r0]
   18e64:	cmp	r0, #0
   18e68:	ldrbne	r0, [r0]
   18e6c:	cmpne	r0, #0
   18e70:	beq	193c4 <main@@Base+0x10ec>
   18e74:	bl	128e8 <coda_init@plt>
   18e78:	cmp	r0, #0
   18e7c:	bne	1948c <main@@Base+0x11b4>
   18e80:	mov	r0, #0
   18e84:	bl	128f4 <coda_set_option_perform_conversions@plt>
   18e88:	ldr	r0, [sp, #16]
   18e8c:	bl	1263c <coda_set_option_use_fast_size_expressions@plt>
   18e90:	movw	r0, #49624	; 0xc1d8
   18e94:	movw	r4, #53392	; 0xd090
   18e98:	movt	r0, #2
   18e9c:	movt	r4, #2
   18ea0:	ldr	r0, [r0]
   18ea4:	cmp	r0, #0
   18ea8:	beq	18ec4 <main@@Base+0xbec>
   18eac:	movw	r1, #42674	; 0xa6b2
   18eb0:	movt	r1, #1
   18eb4:	bl	126a8 <fopen@plt>
   18eb8:	cmp	r0, #0
   18ebc:	str	r0, [r4]
   18ec0:	beq	194ec <main@@Base+0x1214>
   18ec4:	ldm	sp, {r0, r1, r2}
   18ec8:	bl	13678 <print_debug_data@@Base>
   18ecc:	movw	r0, #49624	; 0xc1d8
   18ed0:	movt	r0, #2
   18ed4:	ldr	r0, [r0]
   18ed8:	cmp	r0, #0
   18edc:	beq	19464 <main@@Base+0x118c>
   18ee0:	ldr	r0, [r4]
   18ee4:	b	19460 <main@@Base+0x1188>
   18ee8:	movw	r0, #49640	; 0xc1e8
   18eec:	mov	r2, #0
   18ef0:	mov	r1, #3
   18ef4:	movt	r0, #2
   18ef8:	str	r2, [r0]
   18efc:	movw	r0, #53412	; 0xd0a4
   18f00:	movt	r0, #2
   18f04:	str	r1, [r0]
   18f08:	movw	r0, #49624	; 0xc1d8
   18f0c:	movw	r1, #53392	; 0xd090
   18f10:	movt	r0, #2
   18f14:	movt	r1, #2
   18f18:	str	r2, [r0]
   18f1c:	movw	r0, #53416	; 0xd0a8
   18f20:	movt	r0, #2
   18f24:	str	r2, [r0]
   18f28:	movw	r0, #49588	; 0xc1b4
   18f2c:	movt	r0, #2
   18f30:	ldr	r0, [r0]
   18f34:	str	r0, [r1]
   18f38:	add	r0, r7, #1
   18f3c:	sub	r8, sl, r0
   18f40:	cmp	r8, #1
   18f44:	blt	193c4 <main@@Base+0x10ec>
   18f48:	movw	r6, #42718	; 0xa6de
   18f4c:	movw	r7, #44503	; 0xadd7
   18f50:	add	r9, r9, r0, lsl #2
   18f54:	sub	r0, r8, #1
   18f58:	mov	r1, #0
   18f5c:	mov	r5, #0
   18f60:	mov	r4, #0
   18f64:	str	r0, [sp, #12]
   18f68:	mov	r0, #1
   18f6c:	movt	r6, #1
   18f70:	movt	r7, #1
   18f74:	str	r1, [sp, #8]
   18f78:	str	r0, [sp, #16]
   18f7c:	mov	r0, #1
   18f80:	str	r0, [sp, #4]
   18f84:	b	18f9c <main@@Base+0xcc4>
   18f88:	mov	r4, #1
   18f8c:	mov	r0, r5
   18f90:	add	r5, r0, #1
   18f94:	cmp	r5, r8
   18f98:	bge	19110 <main@@Base+0xe38>
   18f9c:	ldr	sl, [r9, r5, lsl #2]
   18fa0:	mov	r1, r6
   18fa4:	mov	r0, sl
   18fa8:	bl	1266c <strcmp@plt>
   18fac:	cmp	r0, #0
   18fb0:	beq	18f88 <main@@Base+0xcb0>
   18fb4:	mov	r0, sl
   18fb8:	mov	r1, r7
   18fbc:	bl	1266c <strcmp@plt>
   18fc0:	cmp	r0, #0
   18fc4:	beq	18f88 <main@@Base+0xcb0>
   18fc8:	movw	r1, #42569	; 0xa649
   18fcc:	mov	r0, sl
   18fd0:	movt	r1, #1
   18fd4:	bl	1266c <strcmp@plt>
   18fd8:	cmp	r0, #0
   18fdc:	beq	190d8 <main@@Base+0xe00>
   18fe0:	movw	r1, #44710	; 0xaea6
   18fe4:	mov	r0, sl
   18fe8:	movt	r1, #1
   18fec:	bl	1266c <strcmp@plt>
   18ff0:	cmp	r0, #0
   18ff4:	beq	190d8 <main@@Base+0xe00>
   18ff8:	movw	r1, #42637	; 0xa68d
   18ffc:	mov	r0, sl
   19000:	movt	r1, #1
   19004:	bl	1266c <strcmp@plt>
   19008:	cmp	r0, #0
   1900c:	beq	19028 <main@@Base+0xd50>
   19010:	movw	r1, #42640	; 0xa690
   19014:	mov	r0, sl
   19018:	movt	r1, #1
   1901c:	bl	1266c <strcmp@plt>
   19020:	cmp	r0, #0
   19024:	bne	19044 <main@@Base+0xd6c>
   19028:	add	r0, r5, #1
   1902c:	cmp	r0, r8
   19030:	bge	19044 <main@@Base+0xd6c>
   19034:	ldr	r1, [r9, r0, lsl #2]
   19038:	ldrb	r2, [r1]
   1903c:	cmp	r2, #45	; 0x2d
   19040:	bne	190f0 <main@@Base+0xe18>
   19044:	movw	r1, #42721	; 0xa6e1
   19048:	mov	r0, sl
   1904c:	movt	r1, #1
   19050:	bl	1266c <strcmp@plt>
   19054:	cmp	r0, #0
   19058:	beq	19074 <main@@Base+0xd9c>
   1905c:	movw	r1, #42724	; 0xa6e4
   19060:	mov	r0, sl
   19064:	movt	r1, #1
   19068:	bl	1266c <strcmp@plt>
   1906c:	cmp	r0, #0
   19070:	bne	19090 <main@@Base+0xdb8>
   19074:	add	r0, r5, #1
   19078:	cmp	r0, r8
   1907c:	bge	19090 <main@@Base+0xdb8>
   19080:	ldr	r1, [r9, r0, lsl #2]
   19084:	ldrb	r2, [r1]
   19088:	cmp	r2, #45	; 0x2d
   1908c:	bne	19100 <main@@Base+0xe28>
   19090:	movw	r1, #44802	; 0xaf02
   19094:	mov	r0, sl
   19098:	movt	r1, #1
   1909c:	bl	1266c <strcmp@plt>
   190a0:	cmp	r0, #0
   190a4:	beq	190e4 <main@@Base+0xe0c>
   190a8:	ldr	r0, [sp, #12]
   190ac:	cmp	r5, r0
   190b0:	bne	193c4 <main@@Base+0x10ec>
   190b4:	ldrb	r0, [sl]
   190b8:	cmp	r0, #45	; 0x2d
   190bc:	beq	193c4 <main@@Base+0x10ec>
   190c0:	movw	r0, #49640	; 0xc1e8
   190c4:	str	sl, [sp, #8]
   190c8:	movt	r0, #2
   190cc:	str	sl, [r0]
   190d0:	ldr	r0, [sp, #12]
   190d4:	b	18f90 <main@@Base+0xcb8>
   190d8:	mov	r0, #0
   190dc:	str	r0, [sp, #16]
   190e0:	b	18f8c <main@@Base+0xcb4>
   190e4:	mov	r0, #0
   190e8:	str	r0, [sp, #4]
   190ec:	b	18f8c <main@@Base+0xcb4>
   190f0:	movw	r2, #49624	; 0xc1d8
   190f4:	movt	r2, #2
   190f8:	str	r1, [r2]
   190fc:	b	18f90 <main@@Base+0xcb8>
   19100:	movw	r2, #53416	; 0xd0a8
   19104:	movt	r2, #2
   19108:	str	r1, [r2]
   1910c:	b	18f90 <main@@Base+0xcb8>
   19110:	ldr	r0, [sp, #8]
   19114:	cmp	r0, #0
   19118:	ldrbne	r0, [r0]
   1911c:	cmpne	r0, #0
   19120:	beq	193c4 <main@@Base+0x10ec>
   19124:	bl	128e8 <coda_init@plt>
   19128:	cmp	r0, #0
   1912c:	bne	1948c <main@@Base+0x11b4>
   19130:	ldr	r0, [sp, #4]
   19134:	clz	r0, r0
   19138:	lsr	r0, r0, #5
   1913c:	bl	1272c <coda_set_option_bypass_special_types@plt>
   19140:	ldr	r0, [sp, #16]
   19144:	bl	128f4 <coda_set_option_perform_conversions@plt>
   19148:	movw	r5, #49624	; 0xc1d8
   1914c:	movw	r6, #53392	; 0xd090
   19150:	movt	r5, #2
   19154:	movt	r6, #2
   19158:	ldr	r0, [r5]
   1915c:	cmp	r0, #0
   19160:	beq	1917c <main@@Base+0xea4>
   19164:	movw	r1, #42674	; 0xa6b2
   19168:	movt	r1, #1
   1916c:	bl	126a8 <fopen@plt>
   19170:	cmp	r0, #0
   19174:	str	r0, [r6]
   19178:	beq	194e4 <main@@Base+0x120c>
   1917c:	mov	r0, r4
   19180:	bl	15e8c <print_json_data@@Base>
   19184:	b	19450 <main@@Base+0x1178>
   19188:	movw	r0, #49640	; 0xc1e8
   1918c:	mov	r2, #0
   19190:	mov	r1, #4
   19194:	movt	r0, #2
   19198:	str	r2, [r0]
   1919c:	movw	r0, #53412	; 0xd0a4
   191a0:	movt	r0, #2
   191a4:	str	r1, [r0]
   191a8:	movw	r0, #49624	; 0xc1d8
   191ac:	movw	r1, #53392	; 0xd090
   191b0:	movt	r0, #2
   191b4:	movt	r1, #2
   191b8:	str	r2, [r0]
   191bc:	movw	r0, #53416	; 0xd0a8
   191c0:	movt	r0, #2
   191c4:	str	r2, [r0]
   191c8:	movw	r0, #49588	; 0xc1b4
   191cc:	movt	r0, #2
   191d0:	ldr	r0, [r0]
   191d4:	str	r0, [r1]
   191d8:	add	r0, r7, #1
   191dc:	sub	r8, sl, r0
   191e0:	cmp	r8, #1
   191e4:	blt	193c4 <main@@Base+0x10ec>
   191e8:	movw	r6, #42718	; 0xa6de
   191ec:	movw	r7, #44503	; 0xadd7
   191f0:	add	r9, r9, r0, lsl #2
   191f4:	sub	r0, r8, #1
   191f8:	mov	r1, #0
   191fc:	mov	r5, #0
   19200:	mov	r4, #0
   19204:	str	r0, [sp, #12]
   19208:	mov	r0, #1
   1920c:	movt	r6, #1
   19210:	movt	r7, #1
   19214:	str	r1, [sp, #8]
   19218:	str	r0, [sp, #16]
   1921c:	mov	r0, #1
   19220:	str	r0, [sp, #4]
   19224:	b	1923c <main@@Base+0xf64>
   19228:	mov	r4, #1
   1922c:	mov	r0, r5
   19230:	add	r5, r0, #1
   19234:	cmp	r5, r8
   19238:	bge	193b0 <main@@Base+0x10d8>
   1923c:	ldr	sl, [r9, r5, lsl #2]
   19240:	mov	r1, r6
   19244:	mov	r0, sl
   19248:	bl	1266c <strcmp@plt>
   1924c:	cmp	r0, #0
   19250:	beq	19228 <main@@Base+0xf50>
   19254:	mov	r0, sl
   19258:	mov	r1, r7
   1925c:	bl	1266c <strcmp@plt>
   19260:	cmp	r0, #0
   19264:	beq	19228 <main@@Base+0xf50>
   19268:	movw	r1, #42569	; 0xa649
   1926c:	mov	r0, sl
   19270:	movt	r1, #1
   19274:	bl	1266c <strcmp@plt>
   19278:	cmp	r0, #0
   1927c:	beq	19378 <main@@Base+0x10a0>
   19280:	movw	r1, #44710	; 0xaea6
   19284:	mov	r0, sl
   19288:	movt	r1, #1
   1928c:	bl	1266c <strcmp@plt>
   19290:	cmp	r0, #0
   19294:	beq	19378 <main@@Base+0x10a0>
   19298:	movw	r1, #42637	; 0xa68d
   1929c:	mov	r0, sl
   192a0:	movt	r1, #1
   192a4:	bl	1266c <strcmp@plt>
   192a8:	cmp	r0, #0
   192ac:	beq	192c8 <main@@Base+0xff0>
   192b0:	movw	r1, #42640	; 0xa690
   192b4:	mov	r0, sl
   192b8:	movt	r1, #1
   192bc:	bl	1266c <strcmp@plt>
   192c0:	cmp	r0, #0
   192c4:	bne	192e4 <main@@Base+0x100c>
   192c8:	add	r0, r5, #1
   192cc:	cmp	r0, r8
   192d0:	bge	192e4 <main@@Base+0x100c>
   192d4:	ldr	r1, [r9, r0, lsl #2]
   192d8:	ldrb	r2, [r1]
   192dc:	cmp	r2, #45	; 0x2d
   192e0:	bne	19390 <main@@Base+0x10b8>
   192e4:	movw	r1, #42721	; 0xa6e1
   192e8:	mov	r0, sl
   192ec:	movt	r1, #1
   192f0:	bl	1266c <strcmp@plt>
   192f4:	cmp	r0, #0
   192f8:	beq	19314 <main@@Base+0x103c>
   192fc:	movw	r1, #42724	; 0xa6e4
   19300:	mov	r0, sl
   19304:	movt	r1, #1
   19308:	bl	1266c <strcmp@plt>
   1930c:	cmp	r0, #0
   19310:	bne	19330 <main@@Base+0x1058>
   19314:	add	r0, r5, #1
   19318:	cmp	r0, r8
   1931c:	bge	19330 <main@@Base+0x1058>
   19320:	ldr	r1, [r9, r0, lsl #2]
   19324:	ldrb	r2, [r1]
   19328:	cmp	r2, #45	; 0x2d
   1932c:	bne	193a0 <main@@Base+0x10c8>
   19330:	movw	r1, #44802	; 0xaf02
   19334:	mov	r0, sl
   19338:	movt	r1, #1
   1933c:	bl	1266c <strcmp@plt>
   19340:	cmp	r0, #0
   19344:	beq	19384 <main@@Base+0x10ac>
   19348:	ldr	r0, [sp, #12]
   1934c:	cmp	r5, r0
   19350:	bne	193c4 <main@@Base+0x10ec>
   19354:	ldrb	r0, [sl]
   19358:	cmp	r0, #45	; 0x2d
   1935c:	beq	193c4 <main@@Base+0x10ec>
   19360:	movw	r0, #49640	; 0xc1e8
   19364:	str	sl, [sp, #8]
   19368:	movt	r0, #2
   1936c:	str	sl, [r0]
   19370:	ldr	r0, [sp, #12]
   19374:	b	19230 <main@@Base+0xf58>
   19378:	mov	r0, #0
   1937c:	str	r0, [sp, #16]
   19380:	b	1922c <main@@Base+0xf54>
   19384:	mov	r0, #0
   19388:	str	r0, [sp, #4]
   1938c:	b	1922c <main@@Base+0xf54>
   19390:	movw	r2, #49624	; 0xc1d8
   19394:	movt	r2, #2
   19398:	str	r1, [r2]
   1939c:	b	19230 <main@@Base+0xf58>
   193a0:	movw	r2, #53416	; 0xd0a8
   193a4:	movt	r2, #2
   193a8:	str	r1, [r2]
   193ac:	b	19230 <main@@Base+0xf58>
   193b0:	ldr	r0, [sp, #8]
   193b4:	cmp	r0, #0
   193b8:	ldrbne	r0, [r0]
   193bc:	cmpne	r0, #0
   193c0:	bne	193f0 <main@@Base+0x1118>
   193c4:	movw	r0, #49584	; 0xc1b0
   193c8:	mov	r1, #25
   193cc:	movt	r0, #2
   193d0:	ldr	r3, [r0]
   193d4:	movw	r0, #42519	; 0xa617
   193d8:	movt	r0, #1
   193dc:	mov	r2, #1
   193e0:	bl	127e0 <fwrite@plt>
   193e4:	bl	19510 <main@@Base+0x1238>
   193e8:	mov	r0, #1
   193ec:	bl	1287c <exit@plt>
   193f0:	bl	128e8 <coda_init@plt>
   193f4:	cmp	r0, #0
   193f8:	bne	1948c <main@@Base+0x11b4>
   193fc:	ldr	r0, [sp, #4]
   19400:	clz	r0, r0
   19404:	lsr	r0, r0, #5
   19408:	bl	1272c <coda_set_option_bypass_special_types@plt>
   1940c:	ldr	r0, [sp, #16]
   19410:	bl	128f4 <coda_set_option_perform_conversions@plt>
   19414:	movw	r5, #49624	; 0xc1d8
   19418:	movw	r6, #53392	; 0xd090
   1941c:	movt	r5, #2
   19420:	movt	r6, #2
   19424:	ldr	r0, [r5]
   19428:	cmp	r0, #0
   1942c:	beq	19448 <main@@Base+0x1170>
   19430:	movw	r1, #42674	; 0xa6b2
   19434:	movt	r1, #1
   19438:	bl	126a8 <fopen@plt>
   1943c:	cmp	r0, #0
   19440:	str	r0, [r6]
   19444:	beq	194e4 <main@@Base+0x120c>
   19448:	mov	r0, r4
   1944c:	bl	17544 <print_yaml_data@@Base>
   19450:	ldr	r0, [r5]
   19454:	cmp	r0, #0
   19458:	beq	19464 <main@@Base+0x118c>
   1945c:	ldr	r0, [r6]
   19460:	bl	1296c <fclose@plt>
   19464:	bl	12810 <coda_done@plt>
   19468:	mov	r0, #0
   1946c:	sub	sp, fp, #28
   19470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19474:	bl	19510 <main@@Base+0x1238>
   19478:	mov	r0, #0
   1947c:	bl	1287c <exit@plt>
   19480:	bl	19a74 <main@@Base+0x179c>
   19484:	mov	r0, #0
   19488:	bl	1287c <exit@plt>
   1948c:	movw	r0, #49584	; 0xc1b0
   19490:	movt	r0, #2
   19494:	ldr	r4, [r0]
   19498:	bl	12a68 <coda_get_errno@plt>
   1949c:	ldr	r0, [r0]
   194a0:	bl	12a20 <coda_errno_to_string@plt>
   194a4:	movw	r1, #42452	; 0xa5d4
   194a8:	mov	r2, r0
   194ac:	mov	r0, r4
   194b0:	movt	r1, #1
   194b4:	bl	128c4 <fprintf@plt>
   194b8:	mov	r0, #1
   194bc:	bl	1287c <exit@plt>
   194c0:	movw	r0, #49584	; 0xc1b0
   194c4:	mov	r1, #40	; 0x28
   194c8:	movt	r0, #2
   194cc:	ldr	r3, [r0]
   194d0:	movw	r0, #42584	; 0xa658
   194d4:	movt	r0, #1
   194d8:	b	193dc <main@@Base+0x1104>
   194dc:	ldr	r2, [r4]
   194e0:	b	194f8 <main@@Base+0x1220>
   194e4:	ldr	r2, [r5]
   194e8:	b	194f8 <main@@Base+0x1220>
   194ec:	movw	r0, #49624	; 0xc1d8
   194f0:	movt	r0, #2
   194f4:	ldr	r2, [r0]
   194f8:	movw	r0, #49584	; 0xc1b0
   194fc:	movw	r1, #42676	; 0xa6b4
   19500:	movt	r0, #2
   19504:	movt	r1, #1
   19508:	ldr	r0, [r0]
   1950c:	b	194b4 <main@@Base+0x11dc>
   19510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19514:	add	fp, sp, #28
   19518:	sub	sp, sp, #4
   1951c:	movw	r0, #42753	; 0xa701
   19520:	movt	r0, #1
   19524:	bl	1281c <puts@plt>
   19528:	movw	r0, #42760	; 0xa708
   1952c:	movt	r0, #1
   19530:	bl	1281c <puts@plt>
   19534:	movw	r0, #42830	; 0xa74e
   19538:	movt	r0, #1
   1953c:	bl	1281c <puts@plt>
   19540:	movw	r8, #43428	; 0xa9a4
   19544:	movt	r8, #1
   19548:	mov	r0, r8
   1954c:	bl	1281c <puts@plt>
   19550:	movw	r0, #42874	; 0xa77a
   19554:	movt	r0, #1
   19558:	bl	1281c <puts@plt>
   1955c:	movw	r0, #42901	; 0xa795
   19560:	movt	r0, #1
   19564:	bl	1281c <puts@plt>
   19568:	movw	r5, #44694	; 0xae96
   1956c:	movt	r5, #1
   19570:	mov	r0, r5
   19574:	bl	1281c <puts@plt>
   19578:	movw	r6, #44732	; 0xaebc
   1957c:	movt	r6, #1
   19580:	mov	r0, r6
   19584:	bl	1281c <puts@plt>
   19588:	movw	r7, #43450	; 0xa9ba
   1958c:	movt	r7, #1
   19590:	mov	r0, r7
   19594:	bl	1281c <puts@plt>
   19598:	movw	r4, #43497	; 0xa9e9
   1959c:	movt	r4, #1
   195a0:	mov	r0, r4
   195a4:	bl	1281c <puts@plt>
   195a8:	movw	r0, #42956	; 0xa7cc
   195ac:	movt	r0, #1
   195b0:	bl	1281c <puts@plt>
   195b4:	movw	r0, #42979	; 0xa7e3
   195b8:	movt	r0, #1
   195bc:	bl	1281c <puts@plt>
   195c0:	movw	r0, #43020	; 0xa80c
   195c4:	movt	r0, #1
   195c8:	bl	1281c <puts@plt>
   195cc:	movw	r0, #43043	; 0xa823
   195d0:	movt	r0, #1
   195d4:	bl	1281c <puts@plt>
   195d8:	movw	r0, #43085	; 0xa84d
   195dc:	movt	r0, #1
   195e0:	bl	1281c <puts@plt>
   195e4:	movw	r0, #43111	; 0xa867
   195e8:	movt	r0, #1
   195ec:	bl	1281c <puts@plt>
   195f0:	movw	r0, #43160	; 0xa898
   195f4:	movt	r0, #1
   195f8:	bl	1281c <puts@plt>
   195fc:	movw	r0, #43185	; 0xa8b1
   19600:	movt	r0, #1
   19604:	bl	1281c <puts@plt>
   19608:	movw	r0, #43255	; 0xa8f7
   1960c:	movt	r0, #1
   19610:	bl	1281c <puts@plt>
   19614:	movw	sl, #44790	; 0xaef6
   19618:	movt	sl, #1
   1961c:	mov	r0, sl
   19620:	bl	1281c <puts@plt>
   19624:	movw	r0, #44821	; 0xaf15
   19628:	movt	r0, #1
   1962c:	bl	1281c <puts@plt>
   19630:	movw	r0, #44901	; 0xaf65
   19634:	movt	r0, #1
   19638:	bl	1281c <puts@plt>
   1963c:	movw	r0, #44979	; 0xafb3
   19640:	movt	r0, #1
   19644:	bl	1281c <puts@plt>
   19648:	mov	r0, #10
   1964c:	bl	12924 <putchar@plt>
   19650:	movw	r0, #43296	; 0xa920
   19654:	movt	r0, #1
   19658:	bl	1281c <puts@plt>
   1965c:	movw	r0, #43368	; 0xa968
   19660:	movt	r0, #1
   19664:	bl	1281c <puts@plt>
   19668:	mov	r0, r8
   1966c:	bl	1281c <puts@plt>
   19670:	mov	r0, r5
   19674:	bl	1281c <puts@plt>
   19678:	mov	r0, r6
   1967c:	bl	1281c <puts@plt>
   19680:	mov	r0, r7
   19684:	bl	1281c <puts@plt>
   19688:	mov	r0, r4
   1968c:	bl	1281c <puts@plt>
   19690:	movw	r0, #43569	; 0xaa31
   19694:	movt	r0, #1
   19698:	bl	1281c <puts@plt>
   1969c:	movw	r0, #43593	; 0xaa49
   196a0:	movt	r0, #1
   196a4:	bl	1281c <puts@plt>
   196a8:	movw	r0, #43658	; 0xaa8a
   196ac:	movt	r0, #1
   196b0:	bl	1281c <puts@plt>
   196b4:	movw	r0, #43682	; 0xaaa2
   196b8:	movt	r0, #1
   196bc:	bl	1281c <puts@plt>
   196c0:	movw	r6, #45399	; 0xb157
   196c4:	movt	r6, #1
   196c8:	mov	r0, r6
   196cc:	bl	1281c <puts@plt>
   196d0:	movw	r0, #45435	; 0xb17b
   196d4:	movt	r0, #1
   196d8:	bl	1281c <puts@plt>
   196dc:	movw	r0, #43757	; 0xaaed
   196e0:	movt	r0, #1
   196e4:	bl	1281c <puts@plt>
   196e8:	movw	r0, #43789	; 0xab0d
   196ec:	movt	r0, #1
   196f0:	bl	1281c <puts@plt>
   196f4:	movw	r0, #43864	; 0xab58
   196f8:	movt	r0, #1
   196fc:	bl	1281c <puts@plt>
   19700:	movw	r0, #43920	; 0xab90
   19704:	movt	r0, #1
   19708:	bl	1281c <puts@plt>
   1970c:	movw	r0, #43996	; 0xabdc
   19710:	movt	r0, #1
   19714:	bl	1281c <puts@plt>
   19718:	movw	r0, #44029	; 0xabfd
   1971c:	movt	r0, #1
   19720:	bl	1281c <puts@plt>
   19724:	mov	r0, sl
   19728:	bl	1281c <puts@plt>
   1972c:	movw	r0, #44821	; 0xaf15
   19730:	movt	r0, #1
   19734:	mov	r9, r0
   19738:	bl	1281c <puts@plt>
   1973c:	movw	r0, #44901	; 0xaf65
   19740:	movt	r0, #1
   19744:	mov	r8, r0
   19748:	bl	1281c <puts@plt>
   1974c:	movw	r0, #44979	; 0xafb3
   19750:	movt	r0, #1
   19754:	mov	r7, r0
   19758:	bl	1281c <puts@plt>
   1975c:	mov	r0, #10
   19760:	bl	12924 <putchar@plt>
   19764:	movw	r0, #44108	; 0xac4c
   19768:	movt	r0, #1
   1976c:	bl	1281c <puts@plt>
   19770:	movw	r0, #44178	; 0xac92
   19774:	movt	r0, #1
   19778:	bl	1281c <puts@plt>
   1977c:	movw	r0, #44238	; 0xacce
   19780:	movt	r0, #1
   19784:	bl	1281c <puts@plt>
   19788:	movw	r4, #44487	; 0xadc7
   1978c:	movt	r4, #1
   19790:	mov	r0, r4
   19794:	bl	1281c <puts@plt>
   19798:	movw	r5, #44516	; 0xade4
   1979c:	movt	r5, #1
   197a0:	mov	r0, r5
   197a4:	bl	1281c <puts@plt>
   197a8:	movw	r0, #44260	; 0xace4
   197ac:	movt	r0, #1
   197b0:	bl	1281c <puts@plt>
   197b4:	movw	r0, #44694	; 0xae96
   197b8:	movt	r0, #1
   197bc:	bl	1281c <puts@plt>
   197c0:	movw	r0, #44732	; 0xaebc
   197c4:	movt	r0, #1
   197c8:	bl	1281c <puts@plt>
   197cc:	mov	r0, r6
   197d0:	bl	1281c <puts@plt>
   197d4:	movw	r0, #45435	; 0xb17b
   197d8:	movt	r0, #1
   197dc:	bl	1281c <puts@plt>
   197e0:	movw	r0, #45486	; 0xb1ae
   197e4:	movt	r0, #1
   197e8:	bl	1281c <puts@plt>
   197ec:	movw	r0, #45516	; 0xb1cc
   197f0:	movt	r0, #1
   197f4:	bl	1281c <puts@plt>
   197f8:	movw	r6, #45588	; 0xb214
   197fc:	movt	r6, #1
   19800:	mov	r0, r6
   19804:	bl	1281c <puts@plt>
   19808:	mov	r0, sl
   1980c:	bl	1281c <puts@plt>
   19810:	mov	r0, r9
   19814:	bl	1281c <puts@plt>
   19818:	mov	r0, r8
   1981c:	bl	1281c <puts@plt>
   19820:	mov	r0, r7
   19824:	bl	1281c <puts@plt>
   19828:	mov	r0, #10
   1982c:	bl	12924 <putchar@plt>
   19830:	movw	r0, #44335	; 0xad2f
   19834:	movt	r0, #1
   19838:	bl	1281c <puts@plt>
   1983c:	movw	r0, #44405	; 0xad75
   19840:	movt	r0, #1
   19844:	bl	1281c <puts@plt>
   19848:	movw	r0, #44465	; 0xadb1
   1984c:	movt	r0, #1
   19850:	bl	1281c <puts@plt>
   19854:	mov	r0, r4
   19858:	bl	1281c <puts@plt>
   1985c:	mov	r0, r5
   19860:	bl	1281c <puts@plt>
   19864:	movw	r0, #44587	; 0xae2b
   19868:	movt	r0, #1
   1986c:	bl	1281c <puts@plt>
   19870:	movw	r0, #44663	; 0xae77
   19874:	movt	r0, #1
   19878:	bl	1281c <puts@plt>
   1987c:	movw	r0, #44694	; 0xae96
   19880:	movt	r0, #1
   19884:	bl	1281c <puts@plt>
   19888:	movw	r0, #44732	; 0xaebc
   1988c:	movt	r0, #1
   19890:	bl	1281c <puts@plt>
   19894:	movw	r0, #45399	; 0xb157
   19898:	movt	r0, #1
   1989c:	bl	1281c <puts@plt>
   198a0:	movw	r0, #45435	; 0xb17b
   198a4:	movt	r0, #1
   198a8:	bl	1281c <puts@plt>
   198ac:	movw	r0, #45486	; 0xb1ae
   198b0:	movt	r0, #1
   198b4:	bl	1281c <puts@plt>
   198b8:	movw	r0, #45516	; 0xb1cc
   198bc:	movt	r0, #1
   198c0:	bl	1281c <puts@plt>
   198c4:	mov	r0, r6
   198c8:	bl	1281c <puts@plt>
   198cc:	mov	r0, sl
   198d0:	bl	1281c <puts@plt>
   198d4:	mov	r0, r9
   198d8:	bl	1281c <puts@plt>
   198dc:	mov	r0, r8
   198e0:	bl	1281c <puts@plt>
   198e4:	mov	r0, r7
   198e8:	bl	1281c <puts@plt>
   198ec:	mov	r0, #10
   198f0:	bl	12924 <putchar@plt>
   198f4:	movw	r0, #45009	; 0xafd1
   198f8:	movt	r0, #1
   198fc:	bl	1281c <puts@plt>
   19900:	movw	r0, #45081	; 0xb019
   19904:	movt	r0, #1
   19908:	bl	1281c <puts@plt>
   1990c:	movw	r0, #45155	; 0xb063
   19910:	movt	r0, #1
   19914:	bl	1281c <puts@plt>
   19918:	movw	r0, #45229	; 0xb0ad
   1991c:	movt	r0, #1
   19920:	bl	1281c <puts@plt>
   19924:	movw	r0, #45275	; 0xb0db
   19928:	movt	r0, #1
   1992c:	bl	1281c <puts@plt>
   19930:	movw	r0, #45298	; 0xb0f2
   19934:	movt	r0, #1
   19938:	bl	1281c <puts@plt>
   1993c:	movw	r0, #45346	; 0xb122
   19940:	movt	r0, #1
   19944:	bl	1281c <puts@plt>
   19948:	movw	r0, #45399	; 0xb157
   1994c:	movt	r0, #1
   19950:	bl	1281c <puts@plt>
   19954:	movw	r0, #45435	; 0xb17b
   19958:	movt	r0, #1
   1995c:	bl	1281c <puts@plt>
   19960:	movw	r0, #45486	; 0xb1ae
   19964:	movt	r0, #1
   19968:	bl	1281c <puts@plt>
   1996c:	movw	r0, #45516	; 0xb1cc
   19970:	movt	r0, #1
   19974:	bl	1281c <puts@plt>
   19978:	mov	r0, r6
   1997c:	bl	1281c <puts@plt>
   19980:	movw	r0, #45665	; 0xb261
   19984:	movt	r0, #1
   19988:	bl	1281c <puts@plt>
   1998c:	movw	r0, #45697	; 0xb281
   19990:	movt	r0, #1
   19994:	bl	1281c <puts@plt>
   19998:	movw	r0, #45775	; 0xb2cf
   1999c:	movt	r0, #1
   199a0:	bl	1281c <puts@plt>
   199a4:	movw	r0, #45850	; 0xb31a
   199a8:	movt	r0, #1
   199ac:	bl	1281c <puts@plt>
   199b0:	movw	r0, #45913	; 0xb359
   199b4:	movt	r0, #1
   199b8:	bl	1281c <puts@plt>
   199bc:	movw	r0, #45990	; 0xb3a6
   199c0:	movt	r0, #1
   199c4:	bl	1281c <puts@plt>
   199c8:	mov	r0, #10
   199cc:	bl	12924 <putchar@plt>
   199d0:	movw	r0, #46043	; 0xb3db
   199d4:	movt	r0, #1
   199d8:	bl	1281c <puts@plt>
   199dc:	movw	r0, #46067	; 0xb3f3
   199e0:	movt	r0, #1
   199e4:	bl	1281c <puts@plt>
   199e8:	mov	r0, #10
   199ec:	bl	12924 <putchar@plt>
   199f0:	movw	r0, #46097	; 0xb411
   199f4:	movt	r0, #1
   199f8:	bl	1281c <puts@plt>
   199fc:	movw	r0, #46124	; 0xb42c
   19a00:	movt	r0, #1
   19a04:	bl	1281c <puts@plt>
   19a08:	mov	r0, #10
   19a0c:	bl	12924 <putchar@plt>
   19a10:	movw	r0, #46174	; 0xb45e
   19a14:	movt	r0, #1
   19a18:	bl	1281c <puts@plt>
   19a1c:	movw	r0, #46252	; 0xb4ac
   19a20:	movt	r0, #1
   19a24:	bl	1281c <puts@plt>
   19a28:	movw	r0, #46325	; 0xb4f5
   19a2c:	movt	r0, #1
   19a30:	bl	1281c <puts@plt>
   19a34:	movw	r0, #46368	; 0xb520
   19a38:	movt	r0, #1
   19a3c:	bl	1281c <puts@plt>
   19a40:	movw	r0, #46444	; 0xb56c
   19a44:	movt	r0, #1
   19a48:	bl	1281c <puts@plt>
   19a4c:	movw	r0, #46514	; 0xb5b2
   19a50:	movt	r0, #1
   19a54:	bl	1281c <puts@plt>
   19a58:	movw	r0, #46577	; 0xb5f1
   19a5c:	movt	r0, #1
   19a60:	bl	1281c <puts@plt>
   19a64:	mov	r0, #10
   19a68:	sub	sp, fp, #28
   19a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a70:	b	12924 <putchar@plt>
   19a74:	push	{fp, lr}
   19a78:	mov	fp, sp
   19a7c:	bl	12a5c <coda_get_libcoda_version@plt>
   19a80:	mov	r1, r0
   19a84:	movw	r0, #42545	; 0xa631
   19a88:	movt	r0, #1
   19a8c:	bl	12690 <printf@plt>
   19a90:	movw	r0, #46641	; 0xb631
   19a94:	movt	r0, #1
   19a98:	bl	1281c <puts@plt>
   19a9c:	mov	r0, #10
   19aa0:	pop	{fp, lr}
   19aa4:	b	12924 <putchar@plt>
   19aa8:	cmp	r3, #0
   19aac:	cmpeq	r2, #0
   19ab0:	bne	19ad4 <main@@Base+0x17fc>
   19ab4:	cmp	r1, #0
   19ab8:	movlt	r1, #-2147483648	; 0x80000000
   19abc:	movlt	r0, #0
   19ac0:	blt	19ad0 <main@@Base+0x17f8>
   19ac4:	cmpeq	r0, #0
   19ac8:	mvnne	r1, #-2147483648	; 0x80000000
   19acc:	mvnne	r0, #0
   19ad0:	b	19b7c <main@@Base+0x18a4>
   19ad4:	sub	sp, sp, #8
   19ad8:	push	{sp, lr}
   19adc:	cmp	r1, #0
   19ae0:	blt	19b00 <main@@Base+0x1828>
   19ae4:	cmp	r3, #0
   19ae8:	blt	19b34 <main@@Base+0x185c>
   19aec:	bl	19b8c <main@@Base+0x18b4>
   19af0:	ldr	lr, [sp, #4]
   19af4:	add	sp, sp, #8
   19af8:	pop	{r2, r3}
   19afc:	bx	lr
   19b00:	rsbs	r0, r0, #0
   19b04:	sbc	r1, r1, r1, lsl #1
   19b08:	cmp	r3, #0
   19b0c:	blt	19b58 <main@@Base+0x1880>
   19b10:	bl	19b8c <main@@Base+0x18b4>
   19b14:	ldr	lr, [sp, #4]
   19b18:	add	sp, sp, #8
   19b1c:	pop	{r2, r3}
   19b20:	rsbs	r0, r0, #0
   19b24:	sbc	r1, r1, r1, lsl #1
   19b28:	rsbs	r2, r2, #0
   19b2c:	sbc	r3, r3, r3, lsl #1
   19b30:	bx	lr
   19b34:	rsbs	r2, r2, #0
   19b38:	sbc	r3, r3, r3, lsl #1
   19b3c:	bl	19b8c <main@@Base+0x18b4>
   19b40:	ldr	lr, [sp, #4]
   19b44:	add	sp, sp, #8
   19b48:	pop	{r2, r3}
   19b4c:	rsbs	r0, r0, #0
   19b50:	sbc	r1, r1, r1, lsl #1
   19b54:	bx	lr
   19b58:	rsbs	r2, r2, #0
   19b5c:	sbc	r3, r3, r3, lsl #1
   19b60:	bl	19b8c <main@@Base+0x18b4>
   19b64:	ldr	lr, [sp, #4]
   19b68:	add	sp, sp, #8
   19b6c:	pop	{r2, r3}
   19b70:	rsbs	r2, r2, #0
   19b74:	sbc	r3, r3, r3, lsl #1
   19b78:	bx	lr
   19b7c:	push	{r1, lr}
   19b80:	mov	r0, #8
   19b84:	bl	12648 <raise@plt>
   19b88:	pop	{r1, pc}
   19b8c:	cmp	r1, r3
   19b90:	cmpeq	r0, r2
   19b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b98:	mov	r4, r0
   19b9c:	movcc	r0, #0
   19ba0:	mov	r5, r1
   19ba4:	ldr	lr, [sp, #36]	; 0x24
   19ba8:	movcc	r1, r0
   19bac:	bcc	19ca8 <main@@Base+0x19d0>
   19bb0:	cmp	r3, #0
   19bb4:	clzeq	ip, r2
   19bb8:	clzne	ip, r3
   19bbc:	addeq	ip, ip, #32
   19bc0:	cmp	r5, #0
   19bc4:	clzeq	r1, r4
   19bc8:	addeq	r1, r1, #32
   19bcc:	clzne	r1, r5
   19bd0:	sub	ip, ip, r1
   19bd4:	sub	sl, ip, #32
   19bd8:	lsl	r9, r3, ip
   19bdc:	rsb	fp, ip, #32
   19be0:	orr	r9, r9, r2, lsl sl
   19be4:	orr	r9, r9, r2, lsr fp
   19be8:	lsl	r8, r2, ip
   19bec:	cmp	r5, r9
   19bf0:	cmpeq	r4, r8
   19bf4:	movcc	r0, #0
   19bf8:	movcc	r1, r0
   19bfc:	bcc	19c18 <main@@Base+0x1940>
   19c00:	mov	r0, #1
   19c04:	subs	r4, r4, r8
   19c08:	lsl	r1, r0, sl
   19c0c:	orr	r1, r1, r0, lsr fp
   19c10:	lsl	r0, r0, ip
   19c14:	sbc	r5, r5, r9
   19c18:	cmp	ip, #0
   19c1c:	beq	19ca8 <main@@Base+0x19d0>
   19c20:	lsr	r6, r8, #1
   19c24:	orr	r6, r6, r9, lsl #31
   19c28:	lsr	r7, r9, #1
   19c2c:	mov	r2, ip
   19c30:	b	19c54 <main@@Base+0x197c>
   19c34:	subs	r3, r4, r6
   19c38:	sbc	r8, r5, r7
   19c3c:	adds	r3, r3, r3
   19c40:	adc	r8, r8, r8
   19c44:	adds	r4, r3, #1
   19c48:	adc	r5, r8, #0
   19c4c:	subs	r2, r2, #1
   19c50:	beq	19c70 <main@@Base+0x1998>
   19c54:	cmp	r5, r7
   19c58:	cmpeq	r4, r6
   19c5c:	bcs	19c34 <main@@Base+0x195c>
   19c60:	adds	r4, r4, r4
   19c64:	adc	r5, r5, r5
   19c68:	subs	r2, r2, #1
   19c6c:	bne	19c54 <main@@Base+0x197c>
   19c70:	lsr	r3, r4, ip
   19c74:	orr	r3, r3, r5, lsl fp
   19c78:	lsr	r2, r5, ip
   19c7c:	orr	r3, r3, r5, lsr sl
   19c80:	adds	r0, r0, r4
   19c84:	mov	r4, r3
   19c88:	lsl	r3, r2, ip
   19c8c:	orr	r3, r3, r4, lsl sl
   19c90:	lsl	ip, r4, ip
   19c94:	orr	r3, r3, r4, lsr fp
   19c98:	adc	r1, r1, r5
   19c9c:	subs	r0, r0, ip
   19ca0:	mov	r5, r2
   19ca4:	sbc	r1, r1, r3
   19ca8:	cmp	lr, #0
   19cac:	strdne	r4, [lr]
   19cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019cb4 <__libc_csu_init@@Base>:
   19cb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19cb8:	mov	r7, r0
   19cbc:	ldr	r6, [pc, #72]	; 19d0c <__libc_csu_init@@Base+0x58>
   19cc0:	ldr	r5, [pc, #72]	; 19d10 <__libc_csu_init@@Base+0x5c>
   19cc4:	add	r6, pc, r6
   19cc8:	add	r5, pc, r5
   19ccc:	sub	r6, r6, r5
   19cd0:	mov	r8, r1
   19cd4:	mov	r9, r2
   19cd8:	bl	12604 <coda_cursor_get_byte_size@plt-0x20>
   19cdc:	asrs	r6, r6, #2
   19ce0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ce4:	mov	r4, #0
   19ce8:	add	r4, r4, #1
   19cec:	ldr	r3, [r5], #4
   19cf0:	mov	r2, r9
   19cf4:	mov	r1, r8
   19cf8:	mov	r0, r7
   19cfc:	blx	r3
   19d00:	cmp	r6, r4
   19d04:	bne	19ce8 <__libc_csu_init@@Base+0x34>
   19d08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d0c:	andeq	r2, r1, r8, lsr #4
   19d10:	andeq	r2, r1, r0, lsr #4

00019d14 <__libc_csu_fini@@Base>:
   19d14:	bx	lr

Disassembly of section .fini:

00019d18 <.fini>:
   19d18:	push	{r3, lr}
   19d1c:	pop	{r3, pc}
