
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_c_json_parser>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #24
       c:	str	r0, [fp, #-4]
      10:	ldr	r0, [fp, #-4]
      14:	bl	5c <gen_json_parser_pretext>
      18:	ldr	lr, [fp, #-4]
      1c:	str	r0, [fp, #-8]
      20:	mov	r0, lr
      24:	bl	128 <gen_json_parser_prototypes>
      28:	ldr	lr, [fp, #-4]
      2c:	str	r0, [sp, #12]
      30:	mov	r0, lr
      34:	bl	6dc <gen_json_parsers>
      38:	ldr	lr, [fp, #-4]
      3c:	str	r0, [sp, #8]
      40:	mov	r0, lr
      44:	bl	840 <gen_json_parser_footer>
      48:	movw	lr, #0
      4c:	str	r0, [sp, #4]
      50:	mov	r0, lr
      54:	mov	sp, fp
      58:	pop	{fp, pc}

0000005c <gen_json_parser_pretext>:
      5c:	push	{fp, lr}
      60:	mov	fp, sp
      64:	sub	sp, sp, #8
      68:	str	r0, [sp, #4]
      6c:	ldr	r0, [sp, #4]
      70:	ldr	r1, [sp, #4]
      74:	ldr	r1, [r1, #208]	; 0xd0
      78:	ldr	r2, [r1, #164]	; 0xa4
      7c:	movw	r1, #0
      80:	movt	r1, #0
      84:	bl	888 <println>
      88:	ldr	r0, [sp, #4]
      8c:	ldr	r1, [sp, #4]
      90:	ldr	r1, [r1, #208]	; 0xd0
      94:	ldr	r2, [r1, #164]	; 0xa4
      98:	movw	r1, #0
      9c:	movt	r1, #0
      a0:	bl	888 <println>
      a4:	ldr	r0, [sp, #4]
      a8:	movw	r1, #0
      ac:	movt	r1, #0
      b0:	bl	888 <println>
      b4:	ldr	r0, [sp, #4]
      b8:	movw	r1, #0
      bc:	movt	r1, #0
      c0:	bl	888 <println>
      c4:	ldr	r0, [sp, #4]
      c8:	movw	r1, #0
      cc:	movt	r1, #0
      d0:	bl	888 <println>
      d4:	ldr	r0, [sp, #4]
      d8:	movw	r1, #0
      dc:	movt	r1, #0
      e0:	bl	888 <println>
      e4:	ldr	r0, [sp, #4]
      e8:	movw	r1, #0
      ec:	movt	r1, #0
      f0:	movw	r2, #0
      f4:	movt	r2, #0
      f8:	bl	0 <__flatcc_fb_gen_c_includes>
      fc:	ldr	r0, [sp, #4]
     100:	bl	9c4 <gen_prologue>
     104:	ldr	r1, [sp, #4]
     108:	str	r0, [sp]
     10c:	mov	r0, r1
     110:	movw	r1, #0
     114:	movt	r1, #0
     118:	bl	888 <println>
     11c:	movw	r0, #0
     120:	mov	sp, fp
     124:	pop	{fp, pc}

00000128 <gen_json_parser_prototypes>:
     128:	push	{r4, r5, fp, lr}
     12c:	add	fp, sp, #8
     130:	sub	sp, sp, #240	; 0xf0
     134:	str	r0, [fp, #-12]
     138:	ldr	r0, [fp, #-12]
     13c:	ldr	r0, [r0, #208]	; 0xd0
     140:	ldr	r0, [r0, #52]	; 0x34
     144:	str	r0, [sp, #8]
     148:	add	r0, sp, #12
     14c:	movw	r1, #0
     150:	and	r1, r1, #255	; 0xff
     154:	movw	r2, #220	; 0xdc
     158:	bl	0 <memset>
     15c:	ldr	r0, [sp, #8]
     160:	movw	r1, #0
     164:	cmp	r0, r1
     168:	beq	304 <gen_json_parser_prototypes+0x1dc>
     16c:	ldr	r0, [sp, #8]
     170:	ldrh	r0, [r0, #8]
     174:	cmp	r0, #1
     178:	bhi	2fc <gen_json_parser_prototypes+0x1d4>
     17c:	b	180 <gen_json_parser_prototypes+0x58>
     180:	ldr	r0, [fp, #-12]
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	bl	888 <println>
     190:	ldr	r0, [fp, #-12]
     194:	movw	r1, #0
     198:	movt	r1, #0
     19c:	bl	888 <println>
     1a0:	ldr	r0, [fp, #-12]
     1a4:	movw	r1, #0
     1a8:	movt	r1, #0
     1ac:	bl	888 <println>
     1b0:	ldr	r0, [fp, #-12]
     1b4:	movw	r1, #0
     1b8:	movt	r1, #0
     1bc:	bl	888 <println>
     1c0:	ldr	r0, [fp, #-12]
     1c4:	movw	r1, #0
     1c8:	movt	r1, #0
     1cc:	bl	888 <println>
     1d0:	ldr	r0, [fp, #-12]
     1d4:	movw	r1, #0
     1d8:	movt	r1, #0
     1dc:	bl	888 <println>
     1e0:	ldr	r0, [fp, #-12]
     1e4:	movw	r1, #0
     1e8:	movt	r1, #0
     1ec:	bl	888 <println>
     1f0:	ldr	r0, [fp, #-12]
     1f4:	movw	r1, #0
     1f8:	movt	r1, #0
     1fc:	bl	888 <println>
     200:	ldr	r0, [fp, #-12]
     204:	movw	r1, #0
     208:	movt	r1, #0
     20c:	bl	888 <println>
     210:	ldr	r0, [fp, #-12]
     214:	ldr	r1, [fp, #-12]
     218:	ldr	r1, [r1, #208]	; 0xd0
     21c:	ldr	r2, [r1, #160]	; 0xa0
     220:	movw	r1, #0
     224:	movt	r1, #0
     228:	bl	888 <println>
     22c:	ldr	r0, [fp, #-12]
     230:	ldr	r1, [r0, #220]	; 0xdc
     234:	add	r1, r1, #1
     238:	str	r1, [r0, #220]	; 0xdc
     23c:	ldr	r0, [fp, #-12]
     240:	ldr	r1, [r0, #220]	; 0xdc
     244:	add	r1, r1, #1
     248:	str	r1, [r0, #220]	; 0xdc
     24c:	ldr	r0, [fp, #-12]
     250:	movw	r1, #0
     254:	movt	r1, #0
     258:	bl	888 <println>
     25c:	ldr	r0, [fp, #-12]
     260:	ldr	r0, [r0, #220]	; 0xdc
     264:	cmp	r0, #0
     268:	beq	270 <gen_json_parser_prototypes+0x148>
     26c:	b	290 <gen_json_parser_prototypes+0x168>
     270:	movw	r0, #0
     274:	movt	r0, #0
     278:	movw	r1, #0
     27c:	movt	r1, #0
     280:	movw	r2, #1716	; 0x6b4
     284:	movw	r3, #0
     288:	movt	r3, #0
     28c:	bl	0 <__assert_fail>
     290:	ldr	r0, [fp, #-12]
     294:	ldr	r1, [r0, #220]	; 0xdc
     298:	mvn	r2, #0
     29c:	add	r1, r1, r2
     2a0:	str	r1, [r0, #220]	; 0xdc
     2a4:	ldr	r0, [fp, #-12]
     2a8:	ldr	r0, [r0, #220]	; 0xdc
     2ac:	cmp	r0, #0
     2b0:	beq	2b8 <gen_json_parser_prototypes+0x190>
     2b4:	b	2d8 <gen_json_parser_prototypes+0x1b0>
     2b8:	movw	r0, #0
     2bc:	movt	r0, #0
     2c0:	movw	r1, #0
     2c4:	movt	r1, #0
     2c8:	movw	r2, #1716	; 0x6b4
     2cc:	movw	r3, #0
     2d0:	movt	r3, #0
     2d4:	bl	0 <__assert_fail>
     2d8:	ldr	r0, [fp, #-12]
     2dc:	ldr	r1, [r0, #220]	; 0xdc
     2e0:	mvn	r2, #0
     2e4:	add	r1, r1, r2
     2e8:	str	r1, [r0, #220]	; 0xdc
     2ec:	ldr	r0, [fp, #-12]
     2f0:	movw	r1, #0
     2f4:	movt	r1, #0
     2f8:	bl	888 <println>
     2fc:	b	300 <gen_json_parser_prototypes+0x1d8>
     300:	b	304 <gen_json_parser_prototypes+0x1dc>
     304:	ldr	r0, [fp, #-12]
     308:	ldr	r0, [r0, #208]	; 0xd0
     30c:	ldr	r0, [r0, #40]	; 0x28
     310:	str	r0, [fp, #-16]
     314:	ldr	r0, [fp, #-16]
     318:	movw	r1, #0
     31c:	cmp	r0, r1
     320:	beq	5bc <gen_json_parser_prototypes+0x494>
     324:	ldr	r0, [fp, #-16]
     328:	ldrh	r0, [r0, #8]
     32c:	cmp	r0, #4
     330:	str	r0, [sp, #4]
     334:	bhi	5a8 <gen_json_parser_prototypes+0x480>
     338:	add	r0, pc, #8
     33c:	ldr	r1, [sp, #4]
     340:	ldr	r0, [r0, r1, lsl #2]
     344:	mov	pc, r0
     348:	.word	0x000004a0
     34c:	.word	0x00000468
     350:	.word	0x000005a8
     354:	.word	0x000004c4
     358:	.word	0x0000035c
     35c:	ldr	r0, [fp, #-16]
     360:	add	r1, sp, #12
     364:	bl	a0c <fb_compound_name>
     368:	add	r2, sp, #12
     36c:	ldr	r0, [fp, #-12]
     370:	movw	r1, #0
     374:	movt	r1, #0
     378:	bl	888 <println>
     37c:	add	r2, sp, #12
     380:	ldr	r0, [fp, #-12]
     384:	movw	r1, #0
     388:	movt	r1, #0
     38c:	bl	888 <println>
     390:	add	r2, sp, #12
     394:	ldr	r0, [fp, #-12]
     398:	movw	r1, #0
     39c:	movt	r1, #0
     3a0:	bl	888 <println>
     3a4:	ldr	r0, [fp, #-12]
     3a8:	ldr	r1, [r0, #220]	; 0xdc
     3ac:	add	r1, r1, #1
     3b0:	str	r1, [r0, #220]	; 0xdc
     3b4:	ldr	r0, [fp, #-12]
     3b8:	ldr	r1, [r0, #220]	; 0xdc
     3bc:	add	r1, r1, #1
     3c0:	str	r1, [r0, #220]	; 0xdc
     3c4:	ldr	r0, [fp, #-12]
     3c8:	movw	r1, #0
     3cc:	movt	r1, #0
     3d0:	bl	888 <println>
     3d4:	ldr	r0, [fp, #-12]
     3d8:	ldr	r0, [r0, #220]	; 0xdc
     3dc:	cmp	r0, #0
     3e0:	beq	3e8 <gen_json_parser_prototypes+0x2c0>
     3e4:	b	408 <gen_json_parser_prototypes+0x2e0>
     3e8:	movw	r0, #0
     3ec:	movt	r0, #0
     3f0:	movw	r1, #0
     3f4:	movt	r1, #0
     3f8:	movw	r2, #1731	; 0x6c3
     3fc:	movw	r3, #0
     400:	movt	r3, #0
     404:	bl	0 <__assert_fail>
     408:	ldr	r0, [fp, #-12]
     40c:	ldr	r1, [r0, #220]	; 0xdc
     410:	mvn	r2, #0
     414:	add	r1, r1, r2
     418:	str	r1, [r0, #220]	; 0xdc
     41c:	ldr	r0, [fp, #-12]
     420:	ldr	r0, [r0, #220]	; 0xdc
     424:	cmp	r0, #0
     428:	beq	430 <gen_json_parser_prototypes+0x308>
     42c:	b	450 <gen_json_parser_prototypes+0x328>
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	movw	r1, #0
     43c:	movt	r1, #0
     440:	movw	r2, #1731	; 0x6c3
     444:	movw	r3, #0
     448:	movt	r3, #0
     44c:	bl	0 <__assert_fail>
     450:	ldr	r0, [fp, #-12]
     454:	ldr	r1, [r0, #220]	; 0xdc
     458:	mvn	r2, #0
     45c:	add	r1, r1, r2
     460:	str	r1, [r0, #220]	; 0xdc
     464:	b	5a8 <gen_json_parser_prototypes+0x480>
     468:	ldr	r0, [fp, #-16]
     46c:	add	r1, sp, #12
     470:	bl	a0c <fb_compound_name>
     474:	add	r2, sp, #12
     478:	ldr	r0, [fp, #-12]
     47c:	movw	r1, #0
     480:	movt	r1, #0
     484:	bl	888 <println>
     488:	add	r2, sp, #12
     48c:	ldr	r0, [fp, #-12]
     490:	movw	r1, #0
     494:	movt	r1, #0
     498:	bl	888 <println>
     49c:	b	5a8 <gen_json_parser_prototypes+0x480>
     4a0:	ldr	r0, [fp, #-16]
     4a4:	add	r1, sp, #12
     4a8:	bl	a0c <fb_compound_name>
     4ac:	add	r2, sp, #12
     4b0:	ldr	r0, [fp, #-12]
     4b4:	movw	r1, #0
     4b8:	movt	r1, #0
     4bc:	bl	888 <println>
     4c0:	b	5a8 <gen_json_parser_prototypes+0x480>
     4c4:	ldr	r0, [fp, #-16]
     4c8:	add	r1, sp, #12
     4cc:	bl	a0c <fb_compound_name>
     4d0:	add	r2, sp, #12
     4d4:	ldr	r0, [fp, #-12]
     4d8:	movw	r1, #0
     4dc:	movt	r1, #0
     4e0:	bl	888 <println>
     4e4:	add	r2, sp, #12
     4e8:	ldr	r0, [fp, #-12]
     4ec:	ldr	r1, [r0, #220]	; 0xdc
     4f0:	add	r1, r1, #1
     4f4:	str	r1, [r0, #220]	; 0xdc
     4f8:	ldr	r0, [fp, #-12]
     4fc:	ldr	r1, [r0, #220]	; 0xdc
     500:	add	r1, r1, #1
     504:	str	r1, [r0, #220]	; 0xdc
     508:	ldr	r0, [fp, #-12]
     50c:	movw	r1, #0
     510:	movt	r1, #0
     514:	bl	888 <println>
     518:	ldr	r0, [fp, #-12]
     51c:	ldr	r0, [r0, #220]	; 0xdc
     520:	cmp	r0, #0
     524:	beq	52c <gen_json_parser_prototypes+0x404>
     528:	b	54c <gen_json_parser_prototypes+0x424>
     52c:	movw	r0, #0
     530:	movt	r0, #0
     534:	movw	r1, #0
     538:	movt	r1, #0
     53c:	movw	r2, #1747	; 0x6d3
     540:	movw	r3, #0
     544:	movt	r3, #0
     548:	bl	0 <__assert_fail>
     54c:	ldr	r0, [fp, #-12]
     550:	ldr	r1, [r0, #220]	; 0xdc
     554:	mvn	r2, #0
     558:	add	r1, r1, r2
     55c:	str	r1, [r0, #220]	; 0xdc
     560:	ldr	r0, [fp, #-12]
     564:	ldr	r0, [r0, #220]	; 0xdc
     568:	cmp	r0, #0
     56c:	beq	574 <gen_json_parser_prototypes+0x44c>
     570:	b	594 <gen_json_parser_prototypes+0x46c>
     574:	movw	r0, #0
     578:	movt	r0, #0
     57c:	movw	r1, #0
     580:	movt	r1, #0
     584:	movw	r2, #1747	; 0x6d3
     588:	movw	r3, #0
     58c:	movt	r3, #0
     590:	bl	0 <__assert_fail>
     594:	ldr	r0, [fp, #-12]
     598:	ldr	r1, [r0, #220]	; 0xdc
     59c:	mvn	r2, #0
     5a0:	add	r1, r1, r2
     5a4:	str	r1, [r0, #220]	; 0xdc
     5a8:	b	5ac <gen_json_parser_prototypes+0x484>
     5ac:	ldr	r0, [fp, #-16]
     5b0:	ldr	r0, [r0]
     5b4:	str	r0, [fp, #-16]
     5b8:	b	314 <gen_json_parser_prototypes+0x1ec>
     5bc:	ldr	r0, [fp, #-12]
     5c0:	ldr	r0, [r0, #208]	; 0xd0
     5c4:	ldr	r0, [r0, #60]	; 0x3c
     5c8:	ldr	r1, [fp, #-12]
     5cc:	movw	r2, #0
     5d0:	movt	r2, #0
     5d4:	str	r1, [sp]
     5d8:	mov	r1, r2
     5dc:	ldr	r2, [sp]
     5e0:	bl	0 <fb_scope_table_visit>
     5e4:	ldr	r0, [fp, #-12]
     5e8:	ldr	r1, [fp, #-12]
     5ec:	ldr	r1, [r1, #208]	; 0xd0
     5f0:	ldr	r2, [r1, #160]	; 0xa0
     5f4:	movw	r1, #0
     5f8:	movt	r1, #0
     5fc:	bl	888 <println>
     600:	ldr	r0, [fp, #-12]
     604:	ldr	r1, [r0, #220]	; 0xdc
     608:	add	r1, r1, #1
     60c:	str	r1, [r0, #220]	; 0xdc
     610:	ldr	r0, [fp, #-12]
     614:	ldr	r1, [r0, #220]	; 0xdc
     618:	add	r1, r1, #1
     61c:	str	r1, [r0, #220]	; 0xdc
     620:	ldr	r0, [fp, #-12]
     624:	movw	r1, #0
     628:	movt	r1, #0
     62c:	bl	888 <println>
     630:	ldr	r0, [fp, #-12]
     634:	ldr	r0, [r0, #220]	; 0xdc
     638:	cmp	r0, #0
     63c:	beq	644 <gen_json_parser_prototypes+0x51c>
     640:	b	664 <gen_json_parser_prototypes+0x53c>
     644:	movw	r0, #0
     648:	movt	r0, #0
     64c:	movw	r1, #0
     650:	movt	r1, #0
     654:	movw	r2, #1755	; 0x6db
     658:	movw	r3, #0
     65c:	movt	r3, #0
     660:	bl	0 <__assert_fail>
     664:	ldr	r0, [fp, #-12]
     668:	ldr	r1, [r0, #220]	; 0xdc
     66c:	mvn	r2, #0
     670:	add	r1, r1, r2
     674:	str	r1, [r0, #220]	; 0xdc
     678:	ldr	r0, [fp, #-12]
     67c:	ldr	r0, [r0, #220]	; 0xdc
     680:	cmp	r0, #0
     684:	beq	68c <gen_json_parser_prototypes+0x564>
     688:	b	6ac <gen_json_parser_prototypes+0x584>
     68c:	movw	r0, #0
     690:	movt	r0, #0
     694:	movw	r1, #0
     698:	movt	r1, #0
     69c:	movw	r2, #1755	; 0x6db
     6a0:	movw	r3, #0
     6a4:	movt	r3, #0
     6a8:	bl	0 <__assert_fail>
     6ac:	ldr	r0, [fp, #-12]
     6b0:	ldr	r1, [r0, #220]	; 0xdc
     6b4:	mvn	r2, #0
     6b8:	add	r1, r1, r2
     6bc:	str	r1, [r0, #220]	; 0xdc
     6c0:	ldr	r0, [fp, #-12]
     6c4:	movw	r1, #0
     6c8:	movt	r1, #0
     6cc:	bl	888 <println>
     6d0:	movw	r0, #0
     6d4:	sub	sp, fp, #8
     6d8:	pop	{r4, r5, fp, pc}

000006dc <gen_json_parsers>:
     6dc:	push	{fp, lr}
     6e0:	mov	fp, sp
     6e4:	sub	sp, sp, #56	; 0x38
     6e8:	str	r0, [fp, #-4]
     6ec:	ldr	r0, [fp, #-4]
     6f0:	ldr	r0, [r0, #208]	; 0xd0
     6f4:	ldr	r0, [r0, #40]	; 0x28
     6f8:	str	r0, [fp, #-8]
     6fc:	ldr	r0, [fp, #-8]
     700:	movw	r1, #0
     704:	cmp	r0, r1
     708:	beq	7ec <gen_json_parsers+0x110>
     70c:	ldr	r0, [fp, #-8]
     710:	ldrh	r0, [r0, #8]
     714:	cmp	r0, #4
     718:	str	r0, [fp, #-12]
     71c:	bhi	7d8 <gen_json_parsers+0xfc>
     720:	add	r0, pc, #8
     724:	ldr	r1, [fp, #-12]
     728:	ldr	r0, [r0, r1, lsl #2]
     72c:	mov	pc, r0
     730:	.word	0x000007b4
     734:	.word	0x00000788
     738:	.word	0x000007d8
     73c:	.word	0x000007c8
     740:	.word	0x00000744
     744:	ldr	r0, [fp, #-4]
     748:	ldr	r1, [fp, #-8]
     74c:	bl	aa8 <gen_union_parser>
     750:	ldr	r1, [fp, #-4]
     754:	ldr	lr, [fp, #-8]
     758:	str	r0, [fp, #-16]
     75c:	mov	r0, r1
     760:	mov	r1, lr
     764:	bl	1154 <gen_union_accept_type>
     768:	ldr	r1, [fp, #-4]
     76c:	ldr	lr, [fp, #-8]
     770:	str	r0, [fp, #-20]	; 0xffffffec
     774:	mov	r0, r1
     778:	mov	r1, lr
     77c:	bl	137c <gen_enum_parser>
     780:	str	r0, [fp, #-24]	; 0xffffffe8
     784:	b	7d8 <gen_json_parsers+0xfc>
     788:	ldr	r0, [fp, #-4]
     78c:	ldr	r1, [fp, #-8]
     790:	bl	174c <gen_struct_parser_inline>
     794:	ldr	r1, [fp, #-4]
     798:	ldr	lr, [fp, #-8]
     79c:	str	r0, [sp, #28]
     7a0:	mov	r0, r1
     7a4:	mov	r1, lr
     7a8:	bl	1b08 <gen_struct_parser>
     7ac:	str	r0, [sp, #24]
     7b0:	b	7d8 <gen_json_parsers+0xfc>
     7b4:	ldr	r0, [fp, #-4]
     7b8:	ldr	r1, [fp, #-8]
     7bc:	bl	1dac <gen_table_parser>
     7c0:	str	r0, [sp, #20]
     7c4:	b	7d8 <gen_json_parsers+0xfc>
     7c8:	ldr	r0, [fp, #-4]
     7cc:	ldr	r1, [fp, #-8]
     7d0:	bl	137c <gen_enum_parser>
     7d4:	str	r0, [sp, #16]
     7d8:	b	7dc <gen_json_parsers+0x100>
     7dc:	ldr	r0, [fp, #-8]
     7e0:	ldr	r0, [r0]
     7e4:	str	r0, [fp, #-8]
     7e8:	b	6fc <gen_json_parsers+0x20>
     7ec:	ldr	r0, [fp, #-4]
     7f0:	ldr	r0, [r0, #208]	; 0xd0
     7f4:	ldr	r0, [r0, #60]	; 0x3c
     7f8:	ldr	r1, [fp, #-4]
     7fc:	movw	r2, #0
     800:	movt	r2, #0
     804:	str	r1, [sp, #12]
     808:	mov	r1, r2
     80c:	ldr	r2, [sp, #12]
     810:	bl	0 <fb_scope_table_visit>
     814:	ldr	r0, [fp, #-4]
     818:	bl	2898 <gen_global_scope_parser>
     81c:	ldr	r1, [fp, #-4]
     820:	str	r0, [sp, #8]
     824:	mov	r0, r1
     828:	bl	2c38 <gen_root_parser>
     82c:	movw	r1, #0
     830:	str	r0, [sp, #4]
     834:	mov	r0, r1
     838:	mov	sp, fp
     83c:	pop	{fp, pc}

00000840 <gen_json_parser_footer>:
     840:	push	{fp, lr}
     844:	mov	fp, sp
     848:	sub	sp, sp, #8
     84c:	str	r0, [sp, #4]
     850:	ldr	r0, [sp, #4]
     854:	bl	6d34 <gen_epilogue>
     858:	ldr	lr, [sp, #4]
     85c:	ldr	r1, [sp, #4]
     860:	ldr	r1, [r1, #208]	; 0xd0
     864:	ldr	r2, [r1, #164]	; 0xa4
     868:	str	r0, [sp]
     86c:	mov	r0, lr
     870:	movw	r1, #0
     874:	movt	r1, #0
     878:	bl	888 <println>
     87c:	movw	r0, #0
     880:	mov	sp, fp
     884:	pop	{fp, pc}

00000888 <println>:
     888:	sub	sp, sp, #8
     88c:	push	{fp, lr}
     890:	mov	fp, sp
     894:	sub	sp, sp, #40	; 0x28
     898:	str	r3, [fp, #12]
     89c:	str	r2, [fp, #8]
     8a0:	str	r0, [fp, #-4]
     8a4:	str	r1, [fp, #-8]
     8a8:	ldr	r0, [fp, #-4]
     8ac:	ldr	r0, [r0, #220]	; 0xdc
     8b0:	ldr	r1, [fp, #-4]
     8b4:	ldr	r1, [r1, #212]	; 0xd4
     8b8:	ldr	r1, [r1, #176]	; 0xb0
     8bc:	mul	r0, r0, r1
     8c0:	str	r0, [fp, #-12]
     8c4:	movw	r0, #0
     8c8:	movt	r0, #0
     8cc:	ldrb	r0, [r0]
     8d0:	cmp	r0, #0
     8d4:	bne	8f0 <println+0x68>
     8d8:	movw	r0, #0
     8dc:	movt	r0, #0
     8e0:	movw	r1, #32
     8e4:	and	r1, r1, #255	; 0xff
     8e8:	movw	r2, #64	; 0x40
     8ec:	bl	0 <memset>
     8f0:	ldr	r0, [fp, #-8]
     8f4:	ldrsb	r0, [r0]
     8f8:	cmp	r0, #0
     8fc:	beq	99c <println+0x114>
     900:	b	904 <println+0x7c>
     904:	ldr	r0, [fp, #-12]
     908:	cmp	r0, #64	; 0x40
     90c:	ble	944 <println+0xbc>
     910:	ldr	r0, [fp, #-4]
     914:	ldr	r0, [r0, #204]	; 0xcc
     918:	movw	r1, #0
     91c:	movt	r1, #0
     920:	movw	r2, #64	; 0x40
     924:	movw	r3, #0
     928:	movt	r3, #0
     92c:	bl	0 <fprintf>
     930:	ldr	r1, [fp, #-12]
     934:	sub	r1, r1, #64	; 0x40
     938:	str	r1, [fp, #-12]
     93c:	str	r0, [sp, #20]
     940:	b	904 <println+0x7c>
     944:	ldr	r0, [fp, #-4]
     948:	ldr	r0, [r0, #204]	; 0xcc
     94c:	ldr	r2, [fp, #-12]
     950:	movw	r1, #0
     954:	movt	r1, #0
     958:	movw	r3, #0
     95c:	movt	r3, #0
     960:	bl	0 <fprintf>
     964:	add	r1, fp, #8
     968:	str	r1, [fp, #-16]
     96c:	ldr	r1, [fp, #-4]
     970:	ldr	r1, [r1, #204]	; 0xcc
     974:	ldr	r2, [fp, #-8]
     978:	ldr	r3, [fp, #-16]
     97c:	str	r0, [sp, #16]
     980:	mov	r0, r1
     984:	mov	r1, r2
     988:	mov	r2, r3
     98c:	bl	0 <vfprintf>
     990:	sub	r1, fp, #16
     994:	str	r0, [sp, #12]
     998:	str	r1, [sp, #8]
     99c:	ldr	r0, [fp, #-4]
     9a0:	ldr	r0, [r0, #204]	; 0xcc
     9a4:	movw	r1, #0
     9a8:	movt	r1, #0
     9ac:	bl	0 <fprintf>
     9b0:	str	r0, [sp, #4]
     9b4:	mov	sp, fp
     9b8:	pop	{fp, lr}
     9bc:	add	sp, sp, #8
     9c0:	bx	lr

000009c4 <gen_prologue>:
     9c4:	push	{fp, lr}
     9c8:	mov	fp, sp
     9cc:	sub	sp, sp, #8
     9d0:	str	r0, [sp, #4]
     9d4:	ldr	r0, [sp, #4]
     9d8:	ldr	r0, [r0, #212]	; 0xd4
     9dc:	ldr	r0, [r0, #140]	; 0x8c
     9e0:	cmp	r0, #0
     9e4:	beq	a00 <gen_prologue+0x3c>
     9e8:	ldr	r0, [sp, #4]
     9ec:	ldr	r0, [r0, #204]	; 0xcc
     9f0:	movw	r1, #0
     9f4:	movt	r1, #0
     9f8:	bl	0 <fprintf>
     9fc:	str	r0, [sp]
     a00:	movw	r0, #0
     a04:	mov	sp, fp
     a08:	pop	{fp, pc}

00000a0c <fb_compound_name>:
     a0c:	push	{fp, lr}
     a10:	mov	fp, sp
     a14:	sub	sp, sp, #8
     a18:	str	r0, [sp, #4]
     a1c:	str	r1, [sp]
     a20:	ldr	r0, [sp, #4]
     a24:	ldr	r0, [r0, #12]
     a28:	ldr	r1, [sp, #4]
     a2c:	ldr	r2, [sp]
     a30:	bl	0 <__flatcc_fb_scoped_symbol_name>
     a34:	mov	sp, fp
     a38:	pop	{fp, pc}

00000a3c <gen_local_scope_prototype>:
     a3c:	push	{fp, lr}
     a40:	mov	fp, sp
     a44:	sub	sp, sp, #224	; 0xe0
     a48:	add	r2, sp, #8
     a4c:	str	r0, [fp, #-4]
     a50:	str	r1, [fp, #-8]
     a54:	ldr	r0, [fp, #-4]
     a58:	str	r0, [fp, #-12]
     a5c:	ldr	r0, [fp, #-8]
     a60:	mov	r1, r2
     a64:	bl	0 <__flatcc_fb_copy_scope>
     a68:	add	r3, sp, #8
     a6c:	ldr	r1, [fp, #-12]
     a70:	ldr	r2, [fp, #-12]
     a74:	ldr	r2, [r2, #208]	; 0xd0
     a78:	ldr	r2, [r2, #160]	; 0xa0
     a7c:	str	r0, [sp, #4]
     a80:	mov	r0, r1
     a84:	movw	r1, #0
     a88:	movt	r1, #0
     a8c:	bl	888 <println>
     a90:	ldr	r0, [fp, #-12]
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	bl	888 <println>
     aa0:	mov	sp, fp
     aa4:	pop	{fp, pc}

00000aa8 <gen_union_parser>:
     aa8:	push	{r4, r5, fp, lr}
     aac:	add	fp, sp, #8
     ab0:	sub	sp, sp, #504	; 0x1f8
     ab4:	str	r0, [fp, #-12]
     ab8:	str	r1, [fp, #-16]
     abc:	sub	r0, fp, #236	; 0xec
     ac0:	mov	r1, r0
     ac4:	str	r0, [sp, #36]	; 0x24
     ac8:	mov	r0, r1
     acc:	movw	r1, #0
     ad0:	and	r2, r1, #255	; 0xff
     ad4:	str	r1, [sp, #32]
     ad8:	mov	r1, r2
     adc:	movw	r2, #220	; 0xdc
     ae0:	str	r2, [sp, #28]
     ae4:	bl	0 <memset>
     ae8:	add	r0, sp, #56	; 0x38
     aec:	ldr	r1, [sp, #32]
     af0:	and	r1, r1, #255	; 0xff
     af4:	ldr	r2, [sp, #28]
     af8:	bl	0 <memset>
     afc:	ldr	r0, [fp, #-16]
     b00:	ldr	r1, [sp, #36]	; 0x24
     b04:	bl	a0c <fb_compound_name>
     b08:	sub	r2, fp, #236	; 0xec
     b0c:	ldr	r0, [fp, #-12]
     b10:	movw	r1, #0
     b14:	movt	r1, #0
     b18:	bl	888 <println>
     b1c:	ldr	r0, [fp, #-12]
     b20:	movw	r1, #0
     b24:	movt	r1, #0
     b28:	bl	888 <println>
     b2c:	ldr	r0, [fp, #-12]
     b30:	ldr	r1, [r0, #220]	; 0xdc
     b34:	add	r1, r1, #1
     b38:	str	r1, [r0, #220]	; 0xdc
     b3c:	ldr	r0, [fp, #-12]
     b40:	movw	r1, #0
     b44:	movt	r1, #0
     b48:	bl	888 <println>
     b4c:	ldr	r0, [fp, #-12]
     b50:	movw	r1, #0
     b54:	movt	r1, #0
     b58:	bl	888 <println>
     b5c:	ldr	r0, [fp, #-12]
     b60:	movw	r1, #0
     b64:	movt	r1, #0
     b68:	bl	888 <println>
     b6c:	ldr	r0, [fp, #-12]
     b70:	movw	r1, #0
     b74:	movt	r1, #0
     b78:	bl	888 <println>
     b7c:	ldr	r0, [fp, #-12]
     b80:	ldr	r1, [r0, #220]	; 0xdc
     b84:	add	r1, r1, #1
     b88:	str	r1, [r0, #220]	; 0xdc
     b8c:	ldr	r0, [fp, #-12]
     b90:	movw	r1, #0
     b94:	movt	r1, #0
     b98:	bl	888 <println>
     b9c:	ldr	r0, [fp, #-12]
     ba0:	ldr	r0, [r0, #220]	; 0xdc
     ba4:	cmp	r0, #0
     ba8:	beq	bb0 <gen_union_parser+0x108>
     bac:	b	bd0 <gen_union_parser+0x128>
     bb0:	movw	r0, #0
     bb4:	movt	r0, #0
     bb8:	movw	r1, #0
     bbc:	movt	r1, #0
     bc0:	movw	r2, #1503	; 0x5df
     bc4:	movw	r3, #0
     bc8:	movt	r3, #0
     bcc:	bl	0 <__assert_fail>
     bd0:	ldr	r0, [fp, #-12]
     bd4:	ldr	r1, [r0, #220]	; 0xdc
     bd8:	mvn	r2, #0
     bdc:	add	r1, r1, r2
     be0:	str	r1, [r0, #220]	; 0xdc
     be4:	ldr	r0, [fp, #-16]
     be8:	ldr	r0, [r0, #20]
     bec:	str	r0, [sp, #52]	; 0x34
     bf0:	ldr	r0, [sp, #52]	; 0x34
     bf4:	movw	r1, #0
     bf8:	cmp	r0, r1
     bfc:	beq	ec0 <gen_union_parser+0x418>
     c00:	ldr	r0, [sp, #52]	; 0x34
     c04:	str	r0, [sp, #48]	; 0x30
     c08:	ldr	r0, [sp, #52]	; 0x34
     c0c:	add	r1, sp, #44	; 0x2c
     c10:	add	r2, sp, #40	; 0x28
     c14:	bl	2cf0 <symbol_name>
     c18:	ldr	r0, [sp, #48]	; 0x30
     c1c:	ldrh	r0, [r0, #24]
     c20:	cmp	r0, #0
     c24:	str	r0, [sp, #24]
     c28:	beq	c50 <gen_union_parser+0x1a8>
     c2c:	b	c30 <gen_union_parser+0x188>
     c30:	ldr	r0, [sp, #24]
     c34:	cmp	r0, #10
     c38:	beq	dac <gen_union_parser+0x304>
     c3c:	b	c40 <gen_union_parser+0x198>
     c40:	ldr	r0, [sp, #24]
     c44:	cmp	r0, #14
     c48:	beq	c54 <gen_union_parser+0x1ac>
     c4c:	b	e58 <gen_union_parser+0x3b0>
     c50:	b	eb0 <gen_union_parser+0x408>
     c54:	ldr	r0, [sp, #48]	; 0x30
     c58:	ldr	r0, [r0, #16]
     c5c:	add	r1, sp, #56	; 0x38
     c60:	bl	a0c <fb_compound_name>
     c64:	ldr	r0, [fp, #-12]
     c68:	ldr	r1, [sp, #48]	; 0x30
     c6c:	ldr	r2, [r1, #48]	; 0x30
     c70:	ldr	r3, [sp, #44]	; 0x2c
     c74:	ldr	r1, [sp, #40]	; 0x28
     c78:	mov	lr, sp
     c7c:	str	r1, [lr]
     c80:	movw	r1, #0
     c84:	movt	r1, #0
     c88:	bl	888 <println>
     c8c:	ldr	r0, [fp, #-12]
     c90:	ldr	r1, [r0, #220]	; 0xdc
     c94:	add	r1, r1, #1
     c98:	str	r1, [r0, #220]	; 0xdc
     c9c:	ldr	r0, [sp, #48]	; 0x30
     ca0:	ldr	r0, [r0, #16]
     ca4:	ldrh	r0, [r0, #8]
     ca8:	cmp	r0, #0
     cac:	str	r0, [sp, #20]
     cb0:	beq	cc8 <gen_union_parser+0x220>
     cb4:	b	cb8 <gen_union_parser+0x210>
     cb8:	ldr	r0, [sp, #20]
     cbc:	cmp	r0, #1
     cc0:	beq	ce0 <gen_union_parser+0x238>
     cc4:	b	cf8 <gen_union_parser+0x250>
     cc8:	add	r2, sp, #56	; 0x38
     ccc:	ldr	r0, [fp, #-12]
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	bl	888 <println>
     cdc:	b	d50 <gen_union_parser+0x2a8>
     ce0:	add	r2, sp, #56	; 0x38
     ce4:	ldr	r0, [fp, #-12]
     ce8:	movw	r1, #0
     cec:	movt	r1, #0
     cf0:	bl	888 <println>
     cf4:	b	d50 <gen_union_parser+0x2a8>
     cf8:	movw	r0, #0
     cfc:	movt	r0, #0
     d00:	ldr	r0, [r0]
     d04:	movw	r1, #0
     d08:	movt	r1, #0
     d0c:	movw	r2, #0
     d10:	movt	r2, #0
     d14:	movw	r3, #1522	; 0x5f2
     d18:	movw	ip, #0
     d1c:	movt	ip, #0
     d20:	str	ip, [sp]
     d24:	bl	0 <fprintf>
     d28:	movw	r1, #0
     d2c:	movt	r1, #0
     d30:	str	r0, [sp, #16]
     d34:	mov	r0, r1
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	movw	r2, #1522	; 0x5f2
     d44:	movw	r3, #0
     d48:	movt	r3, #0
     d4c:	bl	0 <__assert_fail>
     d50:	ldr	r0, [fp, #-12]
     d54:	movw	r1, #0
     d58:	movt	r1, #0
     d5c:	bl	888 <println>
     d60:	ldr	r0, [fp, #-12]
     d64:	ldr	r0, [r0, #220]	; 0xdc
     d68:	cmp	r0, #0
     d6c:	beq	d74 <gen_union_parser+0x2cc>
     d70:	b	d94 <gen_union_parser+0x2ec>
     d74:	movw	r0, #0
     d78:	movt	r0, #0
     d7c:	movw	r1, #0
     d80:	movt	r1, #0
     d84:	movw	r2, #1526	; 0x5f6
     d88:	movw	r3, #0
     d8c:	movt	r3, #0
     d90:	bl	0 <__assert_fail>
     d94:	ldr	r0, [fp, #-12]
     d98:	ldr	r1, [r0, #220]	; 0xdc
     d9c:	mvn	r2, #0
     da0:	add	r1, r1, r2
     da4:	str	r1, [r0, #220]	; 0xdc
     da8:	b	eb0 <gen_union_parser+0x408>
     dac:	ldr	r0, [fp, #-12]
     db0:	ldr	r1, [sp, #48]	; 0x30
     db4:	ldr	r2, [r1, #48]	; 0x30
     db8:	ldr	r3, [sp, #44]	; 0x2c
     dbc:	ldr	r1, [sp, #40]	; 0x28
     dc0:	movw	ip, #0
     dc4:	movt	ip, #0
     dc8:	str	r1, [sp, #12]
     dcc:	mov	r1, ip
     dd0:	ldr	ip, [sp, #12]
     dd4:	str	ip, [sp]
     dd8:	bl	888 <println>
     ddc:	ldr	r0, [fp, #-12]
     de0:	ldr	r1, [r0, #220]	; 0xdc
     de4:	add	r1, r1, #1
     de8:	str	r1, [r0, #220]	; 0xdc
     dec:	ldr	r0, [fp, #-12]
     df0:	movw	r1, #0
     df4:	movt	r1, #0
     df8:	bl	888 <println>
     dfc:	ldr	r0, [fp, #-12]
     e00:	movw	r1, #0
     e04:	movt	r1, #0
     e08:	bl	888 <println>
     e0c:	ldr	r0, [fp, #-12]
     e10:	ldr	r0, [r0, #220]	; 0xdc
     e14:	cmp	r0, #0
     e18:	beq	e20 <gen_union_parser+0x378>
     e1c:	b	e40 <gen_union_parser+0x398>
     e20:	movw	r0, #0
     e24:	movt	r0, #0
     e28:	movw	r1, #0
     e2c:	movt	r1, #0
     e30:	movw	r2, #1532	; 0x5fc
     e34:	movw	r3, #0
     e38:	movt	r3, #0
     e3c:	bl	0 <__assert_fail>
     e40:	ldr	r0, [fp, #-12]
     e44:	ldr	r1, [r0, #220]	; 0xdc
     e48:	mvn	r2, #0
     e4c:	add	r1, r1, r2
     e50:	str	r1, [r0, #220]	; 0xdc
     e54:	b	eb0 <gen_union_parser+0x408>
     e58:	movw	r0, #0
     e5c:	movt	r0, #0
     e60:	ldr	r0, [r0]
     e64:	movw	r1, #0
     e68:	movt	r1, #0
     e6c:	movw	r2, #0
     e70:	movt	r2, #0
     e74:	movw	r3, #1535	; 0x5ff
     e78:	movw	ip, #0
     e7c:	movt	ip, #0
     e80:	str	ip, [sp]
     e84:	bl	0 <fprintf>
     e88:	movw	r1, #0
     e8c:	movt	r1, #0
     e90:	str	r0, [sp, #8]
     e94:	mov	r0, r1
     e98:	movw	r1, #0
     e9c:	movt	r1, #0
     ea0:	movw	r2, #1535	; 0x5ff
     ea4:	movw	r3, #0
     ea8:	movt	r3, #0
     eac:	bl	0 <__assert_fail>
     eb0:	ldr	r0, [sp, #52]	; 0x34
     eb4:	ldr	r0, [r0]
     eb8:	str	r0, [sp, #52]	; 0x34
     ebc:	b	bf0 <gen_union_parser+0x148>
     ec0:	ldr	r0, [fp, #-12]
     ec4:	movw	r1, #0
     ec8:	movt	r1, #0
     ecc:	bl	888 <println>
     ed0:	ldr	r0, [fp, #-12]
     ed4:	ldr	r1, [r0, #220]	; 0xdc
     ed8:	add	r1, r1, #1
     edc:	str	r1, [r0, #220]	; 0xdc
     ee0:	ldr	r0, [fp, #-12]
     ee4:	movw	r1, #0
     ee8:	movt	r1, #0
     eec:	bl	888 <println>
     ef0:	ldr	r0, [fp, #-12]
     ef4:	ldr	r1, [r0, #220]	; 0xdc
     ef8:	add	r1, r1, #1
     efc:	str	r1, [r0, #220]	; 0xdc
     f00:	ldr	r0, [fp, #-12]
     f04:	movw	r1, #0
     f08:	movt	r1, #0
     f0c:	bl	888 <println>
     f10:	ldr	r0, [fp, #-12]
     f14:	ldr	r0, [r0, #220]	; 0xdc
     f18:	cmp	r0, #0
     f1c:	beq	f24 <gen_union_parser+0x47c>
     f20:	b	f44 <gen_union_parser+0x49c>
     f24:	movw	r0, #0
     f28:	movt	r0, #0
     f2c:	movw	r1, #0
     f30:	movt	r1, #0
     f34:	movw	r2, #1543	; 0x607
     f38:	movw	r3, #0
     f3c:	movt	r3, #0
     f40:	bl	0 <__assert_fail>
     f44:	ldr	r0, [fp, #-12]
     f48:	ldr	r1, [r0, #220]	; 0xdc
     f4c:	mvn	r2, #0
     f50:	add	r1, r1, r2
     f54:	str	r1, [r0, #220]	; 0xdc
     f58:	ldr	r0, [fp, #-12]
     f5c:	movw	r1, #0
     f60:	movt	r1, #0
     f64:	bl	888 <println>
     f68:	ldr	r0, [fp, #-12]
     f6c:	ldr	r1, [r0, #220]	; 0xdc
     f70:	add	r1, r1, #1
     f74:	str	r1, [r0, #220]	; 0xdc
     f78:	ldr	r0, [fp, #-12]
     f7c:	movw	r1, #0
     f80:	movt	r1, #0
     f84:	bl	888 <println>
     f88:	ldr	r0, [fp, #-12]
     f8c:	ldr	r0, [r0, #220]	; 0xdc
     f90:	cmp	r0, #0
     f94:	beq	f9c <gen_union_parser+0x4f4>
     f98:	b	fbc <gen_union_parser+0x514>
     f9c:	movw	r0, #0
     fa0:	movt	r0, #0
     fa4:	movw	r1, #0
     fa8:	movt	r1, #0
     fac:	movw	r2, #1545	; 0x609
     fb0:	movw	r3, #0
     fb4:	movt	r3, #0
     fb8:	bl	0 <__assert_fail>
     fbc:	ldr	r0, [fp, #-12]
     fc0:	ldr	r1, [r0, #220]	; 0xdc
     fc4:	mvn	r2, #0
     fc8:	add	r1, r1, r2
     fcc:	str	r1, [r0, #220]	; 0xdc
     fd0:	ldr	r0, [fp, #-12]
     fd4:	movw	r1, #0
     fd8:	movt	r1, #0
     fdc:	bl	888 <println>
     fe0:	ldr	r0, [fp, #-12]
     fe4:	ldr	r0, [r0, #220]	; 0xdc
     fe8:	cmp	r0, #0
     fec:	beq	ff4 <gen_union_parser+0x54c>
     ff0:	b	1014 <gen_union_parser+0x56c>
     ff4:	movw	r0, #0
     ff8:	movt	r0, #0
     ffc:	movw	r1, #0
    1000:	movt	r1, #0
    1004:	movw	r2, #1546	; 0x60a
    1008:	movw	r3, #0
    100c:	movt	r3, #0
    1010:	bl	0 <__assert_fail>
    1014:	ldr	r0, [fp, #-12]
    1018:	ldr	r1, [r0, #220]	; 0xdc
    101c:	mvn	r2, #0
    1020:	add	r1, r1, r2
    1024:	str	r1, [r0, #220]	; 0xdc
    1028:	ldr	r0, [fp, #-12]
    102c:	movw	r1, #0
    1030:	movt	r1, #0
    1034:	bl	888 <println>
    1038:	ldr	r0, [fp, #-12]
    103c:	movw	r1, #0
    1040:	movt	r1, #0
    1044:	bl	888 <println>
    1048:	ldr	r0, [fp, #-12]
    104c:	movw	r1, #0
    1050:	movt	r1, #0
    1054:	bl	888 <println>
    1058:	ldr	r0, [fp, #-12]
    105c:	ldr	r1, [r0, #220]	; 0xdc
    1060:	add	r1, r1, #1
    1064:	str	r1, [r0, #220]	; 0xdc
    1068:	ldr	r0, [fp, #-12]
    106c:	movw	r1, #0
    1070:	movt	r1, #0
    1074:	bl	888 <println>
    1078:	ldr	r0, [fp, #-12]
    107c:	ldr	r0, [r0, #220]	; 0xdc
    1080:	cmp	r0, #0
    1084:	beq	108c <gen_union_parser+0x5e4>
    1088:	b	10ac <gen_union_parser+0x604>
    108c:	movw	r0, #0
    1090:	movt	r0, #0
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	movw	r2, #1550	; 0x60e
    10a0:	movw	r3, #0
    10a4:	movt	r3, #0
    10a8:	bl	0 <__assert_fail>
    10ac:	ldr	r0, [fp, #-12]
    10b0:	ldr	r1, [r0, #220]	; 0xdc
    10b4:	mvn	r2, #0
    10b8:	add	r1, r1, r2
    10bc:	str	r1, [r0, #220]	; 0xdc
    10c0:	ldr	r0, [fp, #-12]
    10c4:	movw	r1, #0
    10c8:	movt	r1, #0
    10cc:	bl	888 <println>
    10d0:	ldr	r0, [fp, #-12]
    10d4:	movw	r1, #0
    10d8:	movt	r1, #0
    10dc:	bl	888 <println>
    10e0:	ldr	r0, [fp, #-12]
    10e4:	ldr	r0, [r0, #220]	; 0xdc
    10e8:	cmp	r0, #0
    10ec:	beq	10f4 <gen_union_parser+0x64c>
    10f0:	b	1114 <gen_union_parser+0x66c>
    10f4:	movw	r0, #0
    10f8:	movt	r0, #0
    10fc:	movw	r1, #0
    1100:	movt	r1, #0
    1104:	movw	r2, #1552	; 0x610
    1108:	movw	r3, #0
    110c:	movt	r3, #0
    1110:	bl	0 <__assert_fail>
    1114:	ldr	r0, [fp, #-12]
    1118:	ldr	r1, [r0, #220]	; 0xdc
    111c:	mvn	r2, #0
    1120:	add	r1, r1, r2
    1124:	str	r1, [r0, #220]	; 0xdc
    1128:	ldr	r0, [fp, #-12]
    112c:	movw	r1, #0
    1130:	movt	r1, #0
    1134:	bl	888 <println>
    1138:	ldr	r0, [fp, #-12]
    113c:	movw	r1, #0
    1140:	movt	r1, #0
    1144:	bl	888 <println>
    1148:	movw	r0, #0
    114c:	sub	sp, fp, #8
    1150:	pop	{r4, r5, fp, pc}

00001154 <gen_union_accept_type>:
    1154:	push	{r4, r5, fp, lr}
    1158:	add	fp, sp, #8
    115c:	sub	sp, sp, #488	; 0x1e8
    1160:	str	r0, [fp, #-12]
    1164:	str	r1, [fp, #-16]
    1168:	sub	r0, fp, #236	; 0xec
    116c:	mov	r1, r0
    1170:	str	r0, [sp, #20]
    1174:	mov	r0, r1
    1178:	movw	r1, #0
    117c:	and	r2, r1, #255	; 0xff
    1180:	str	r1, [sp, #16]
    1184:	mov	r1, r2
    1188:	movw	r2, #220	; 0xdc
    118c:	str	r2, [sp, #12]
    1190:	bl	0 <memset>
    1194:	add	r0, sp, #40	; 0x28
    1198:	ldr	r1, [sp, #16]
    119c:	and	r1, r1, #255	; 0xff
    11a0:	ldr	r2, [sp, #12]
    11a4:	bl	0 <memset>
    11a8:	ldr	r0, [fp, #-16]
    11ac:	ldr	r1, [sp, #20]
    11b0:	bl	a0c <fb_compound_name>
    11b4:	sub	r2, fp, #236	; 0xec
    11b8:	ldr	r0, [fp, #-12]
    11bc:	movw	r1, #0
    11c0:	movt	r1, #0
    11c4:	bl	888 <println>
    11c8:	ldr	r0, [fp, #-12]
    11cc:	movw	r1, #0
    11d0:	movt	r1, #0
    11d4:	bl	888 <println>
    11d8:	ldr	r0, [fp, #-12]
    11dc:	ldr	r1, [r0, #220]	; 0xdc
    11e0:	add	r1, r1, #1
    11e4:	str	r1, [r0, #220]	; 0xdc
    11e8:	ldr	r0, [fp, #-12]
    11ec:	movw	r1, #0
    11f0:	movt	r1, #0
    11f4:	bl	888 <println>
    11f8:	ldr	r0, [fp, #-16]
    11fc:	ldr	r0, [r0, #20]
    1200:	str	r0, [sp, #36]	; 0x24
    1204:	ldr	r0, [sp, #36]	; 0x24
    1208:	movw	r1, #0
    120c:	cmp	r0, r1
    1210:	beq	1290 <gen_union_accept_type+0x13c>
    1214:	ldr	r0, [sp, #36]	; 0x24
    1218:	str	r0, [sp, #32]
    121c:	ldr	r0, [sp, #36]	; 0x24
    1220:	add	r1, sp, #28
    1224:	add	r2, sp, #24
    1228:	bl	2cf0 <symbol_name>
    122c:	ldr	r0, [sp, #32]
    1230:	ldrh	r0, [r0, #24]
    1234:	cmp	r0, #0
    1238:	bne	1250 <gen_union_accept_type+0xfc>
    123c:	ldr	r0, [fp, #-12]
    1240:	movw	r1, #0
    1244:	movt	r1, #0
    1248:	bl	888 <println>
    124c:	b	1280 <gen_union_accept_type+0x12c>
    1250:	ldr	r0, [fp, #-12]
    1254:	ldr	r1, [sp, #32]
    1258:	ldr	r2, [r1, #48]	; 0x30
    125c:	ldr	r3, [sp, #28]
    1260:	ldr	r1, [sp, #24]
    1264:	movw	ip, #0
    1268:	movt	ip, #0
    126c:	str	r1, [sp, #8]
    1270:	mov	r1, ip
    1274:	ldr	ip, [sp, #8]
    1278:	str	ip, [sp]
    127c:	bl	888 <println>
    1280:	ldr	r0, [sp, #36]	; 0x24
    1284:	ldr	r0, [r0]
    1288:	str	r0, [sp, #36]	; 0x24
    128c:	b	1204 <gen_union_accept_type+0xb0>
    1290:	ldr	r0, [fp, #-12]
    1294:	movw	r1, #0
    1298:	movt	r1, #0
    129c:	bl	888 <println>
    12a0:	ldr	r0, [fp, #-12]
    12a4:	ldr	r1, [r0, #220]	; 0xdc
    12a8:	add	r1, r1, #1
    12ac:	str	r1, [r0, #220]	; 0xdc
    12b0:	ldr	r0, [fp, #-12]
    12b4:	ldr	r0, [r0, #220]	; 0xdc
    12b8:	cmp	r0, #0
    12bc:	beq	12c4 <gen_union_accept_type+0x170>
    12c0:	b	12e4 <gen_union_accept_type+0x190>
    12c4:	movw	r0, #0
    12c8:	movt	r0, #0
    12cc:	movw	r1, #0
    12d0:	movt	r1, #0
    12d4:	movw	r2, #1582	; 0x62e
    12d8:	movw	r3, #0
    12dc:	movt	r3, #0
    12e0:	bl	0 <__assert_fail>
    12e4:	ldr	r0, [fp, #-12]
    12e8:	ldr	r1, [r0, #220]	; 0xdc
    12ec:	mvn	r2, #0
    12f0:	add	r1, r1, r2
    12f4:	str	r1, [r0, #220]	; 0xdc
    12f8:	ldr	r0, [fp, #-12]
    12fc:	movw	r1, #0
    1300:	movt	r1, #0
    1304:	bl	888 <println>
    1308:	ldr	r0, [fp, #-12]
    130c:	ldr	r0, [r0, #220]	; 0xdc
    1310:	cmp	r0, #0
    1314:	beq	131c <gen_union_accept_type+0x1c8>
    1318:	b	133c <gen_union_accept_type+0x1e8>
    131c:	movw	r0, #0
    1320:	movt	r0, #0
    1324:	movw	r1, #0
    1328:	movt	r1, #0
    132c:	movw	r2, #1583	; 0x62f
    1330:	movw	r3, #0
    1334:	movt	r3, #0
    1338:	bl	0 <__assert_fail>
    133c:	ldr	r0, [fp, #-12]
    1340:	ldr	r1, [r0, #220]	; 0xdc
    1344:	mvn	r2, #0
    1348:	add	r1, r1, r2
    134c:	str	r1, [r0, #220]	; 0xdc
    1350:	ldr	r0, [fp, #-12]
    1354:	movw	r1, #0
    1358:	movt	r1, #0
    135c:	bl	888 <println>
    1360:	ldr	r0, [fp, #-12]
    1364:	movw	r1, #0
    1368:	movt	r1, #0
    136c:	bl	888 <println>
    1370:	movw	r0, #0
    1374:	sub	sp, fp, #8
    1378:	pop	{r4, r5, fp, pc}

0000137c <gen_enum_parser>:
    137c:	push	{r4, r5, fp, lr}
    1380:	add	fp, sp, #8
    1384:	sub	sp, sp, #272	; 0x110
    1388:	str	r0, [fp, #-12]
    138c:	str	r1, [fp, #-16]
    1390:	movw	r0, #0
    1394:	str	r0, [sp, #40]	; 0x28
    1398:	add	r0, sp, #12
    139c:	movw	r1, #0
    13a0:	and	r1, r1, #255	; 0xff
    13a4:	movw	r2, #28
    13a8:	bl	0 <memset>
    13ac:	ldr	r0, [fp, #-16]
    13b0:	ldrh	r0, [r0, #8]
    13b4:	cmp	r0, #3
    13b8:	beq	13cc <gen_enum_parser+0x50>
    13bc:	ldr	r0, [fp, #-16]
    13c0:	ldrh	r0, [r0, #8]
    13c4:	cmp	r0, #4
    13c8:	bne	13d0 <gen_enum_parser+0x54>
    13cc:	b	13f0 <gen_enum_parser+0x74>
    13d0:	movw	r0, #0
    13d4:	movt	r0, #0
    13d8:	movw	r1, #0
    13dc:	movt	r1, #0
    13e0:	movw	r2, #1246	; 0x4de
    13e4:	movw	r3, #0
    13e8:	movt	r3, #0
    13ec:	bl	0 <__assert_fail>
    13f0:	ldr	r0, [fp, #-16]
    13f4:	add	r1, sp, #40	; 0x28
    13f8:	bl	2d5c <build_compound_dict>
    13fc:	str	r0, [sp, #12]
    1400:	movw	r1, #0
    1404:	cmp	r0, r1
    1408:	bne	1470 <gen_enum_parser+0xf4>
    140c:	ldr	r0, [sp, #40]	; 0x28
    1410:	cmp	r0, #0
    1414:	ble	1470 <gen_enum_parser+0xf4>
    1418:	movw	r0, #0
    141c:	movt	r0, #0
    1420:	ldr	r0, [r0]
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	movw	r2, #0
    1430:	movt	r2, #0
    1434:	movw	r3, #1249	; 0x4e1
    1438:	movw	ip, #0
    143c:	movt	ip, #0
    1440:	str	ip, [sp]
    1444:	bl	0 <fprintf>
    1448:	movw	r1, #0
    144c:	movt	r1, #0
    1450:	str	r0, [sp, #8]
    1454:	mov	r0, r1
    1458:	movw	r1, #0
    145c:	movt	r1, #0
    1460:	movw	r2, #1249	; 0x4e1
    1464:	movw	r3, #0
    1468:	movt	r3, #0
    146c:	bl	0 <__assert_fail>
    1470:	ldr	r0, [fp, #-16]
    1474:	str	r0, [sp, #24]
    1478:	movw	r0, #2
    147c:	str	r0, [sp, #28]
    1480:	movw	r0, #0
    1484:	movt	r0, #0
    1488:	str	r0, [sp, #16]
    148c:	movw	r0, #0
    1490:	movt	r0, #0
    1494:	str	r0, [sp, #20]
    1498:	add	r0, sp, #44	; 0x2c
    149c:	mov	r1, r0
    14a0:	str	r0, [sp, #4]
    14a4:	mov	r0, r1
    14a8:	movw	r1, #0
    14ac:	and	r1, r1, #255	; 0xff
    14b0:	movw	r2, #220	; 0xdc
    14b4:	bl	0 <memset>
    14b8:	ldr	r0, [fp, #-16]
    14bc:	ldr	r1, [sp, #4]
    14c0:	bl	a0c <fb_compound_name>
    14c4:	add	r2, sp, #44	; 0x2c
    14c8:	ldr	r0, [fp, #-12]
    14cc:	movw	r1, #0
    14d0:	movt	r1, #0
    14d4:	bl	888 <println>
    14d8:	ldr	r0, [fp, #-12]
    14dc:	ldr	r1, [r0, #220]	; 0xdc
    14e0:	add	r1, r1, #1
    14e4:	str	r1, [r0, #220]	; 0xdc
    14e8:	ldr	r0, [fp, #-12]
    14ec:	ldr	r1, [r0, #220]	; 0xdc
    14f0:	add	r1, r1, #1
    14f4:	str	r1, [r0, #220]	; 0xdc
    14f8:	ldr	r0, [fp, #-12]
    14fc:	movw	r1, #0
    1500:	movt	r1, #0
    1504:	bl	888 <println>
    1508:	ldr	r0, [fp, #-12]
    150c:	ldr	r0, [r0, #220]	; 0xdc
    1510:	cmp	r0, #0
    1514:	beq	151c <gen_enum_parser+0x1a0>
    1518:	b	153c <gen_enum_parser+0x1c0>
    151c:	movw	r0, #0
    1520:	movt	r0, #0
    1524:	movw	r1, #0
    1528:	movt	r1, #0
    152c:	movw	r2, #1263	; 0x4ef
    1530:	movw	r3, #0
    1534:	movt	r3, #0
    1538:	bl	0 <__assert_fail>
    153c:	ldr	r0, [fp, #-12]
    1540:	ldr	r1, [r0, #220]	; 0xdc
    1544:	mvn	r2, #0
    1548:	add	r1, r1, r2
    154c:	str	r1, [r0, #220]	; 0xdc
    1550:	ldr	r0, [fp, #-12]
    1554:	ldr	r0, [r0, #220]	; 0xdc
    1558:	cmp	r0, #0
    155c:	beq	1564 <gen_enum_parser+0x1e8>
    1560:	b	1584 <gen_enum_parser+0x208>
    1564:	movw	r0, #0
    1568:	movt	r0, #0
    156c:	movw	r1, #0
    1570:	movt	r1, #0
    1574:	movw	r2, #1263	; 0x4ef
    1578:	movw	r3, #0
    157c:	movt	r3, #0
    1580:	bl	0 <__assert_fail>
    1584:	ldr	r0, [fp, #-12]
    1588:	ldr	r1, [r0, #220]	; 0xdc
    158c:	mvn	r2, #0
    1590:	add	r1, r1, r2
    1594:	str	r1, [r0, #220]	; 0xdc
    1598:	ldr	r0, [fp, #-12]
    159c:	movw	r1, #0
    15a0:	movt	r1, #0
    15a4:	bl	888 <println>
    15a8:	ldr	r0, [fp, #-12]
    15ac:	ldr	r1, [r0, #220]	; 0xdc
    15b0:	add	r1, r1, #1
    15b4:	str	r1, [r0, #220]	; 0xdc
    15b8:	ldr	r0, [sp, #40]	; 0x28
    15bc:	cmp	r0, #0
    15c0:	bne	1650 <gen_enum_parser+0x2d4>
    15c4:	ldr	r0, [fp, #-12]
    15c8:	movw	r1, #0
    15cc:	movt	r1, #0
    15d0:	bl	888 <println>
    15d4:	ldr	r0, [fp, #-12]
    15d8:	movw	r1, #0
    15dc:	movt	r1, #0
    15e0:	bl	888 <println>
    15e4:	ldr	r0, [fp, #-12]
    15e8:	movw	r1, #0
    15ec:	movt	r1, #0
    15f0:	bl	888 <println>
    15f4:	ldr	r0, [fp, #-12]
    15f8:	ldr	r0, [r0, #220]	; 0xdc
    15fc:	cmp	r0, #0
    1600:	beq	1608 <gen_enum_parser+0x28c>
    1604:	b	1628 <gen_enum_parser+0x2ac>
    1608:	movw	r0, #0
    160c:	movt	r0, #0
    1610:	movw	r1, #0
    1614:	movt	r1, #0
    1618:	movw	r2, #1269	; 0x4f5
    161c:	movw	r3, #0
    1620:	movt	r3, #0
    1624:	bl	0 <__assert_fail>
    1628:	ldr	r0, [fp, #-12]
    162c:	ldr	r1, [r0, #220]	; 0xdc
    1630:	mvn	r2, #0
    1634:	add	r1, r1, r2
    1638:	str	r1, [r0, #220]	; 0xdc
    163c:	ldr	r0, [fp, #-12]
    1640:	movw	r1, #0
    1644:	movt	r1, #0
    1648:	bl	888 <println>
    164c:	b	1728 <gen_enum_parser+0x3ac>
    1650:	ldr	r0, [fp, #-12]
    1654:	movw	r1, #0
    1658:	movt	r1, #0
    165c:	bl	888 <println>
    1660:	ldr	r0, [fp, #-12]
    1664:	movw	r1, #0
    1668:	movt	r1, #0
    166c:	bl	888 <println>
    1670:	ldr	r0, [fp, #-12]
    1674:	movw	r1, #0
    1678:	movt	r1, #0
    167c:	bl	888 <println>
    1680:	ldr	r0, [fp, #-12]
    1684:	movw	r1, #0
    1688:	movt	r1, #0
    168c:	bl	888 <println>
    1690:	ldr	r0, [fp, #-12]
    1694:	movw	r1, #0
    1698:	movt	r1, #0
    169c:	bl	888 <println>
    16a0:	ldr	r0, [fp, #-12]
    16a4:	ldr	r1, [sp, #40]	; 0x28
    16a8:	sub	r3, r1, #1
    16ac:	add	r1, sp, #12
    16b0:	movw	lr, #0
    16b4:	mov	r2, lr
    16b8:	str	lr, [sp]
    16bc:	bl	3128 <gen_trie>
    16c0:	ldr	r0, [fp, #-12]
    16c4:	movw	r1, #0
    16c8:	movt	r1, #0
    16cc:	bl	888 <println>
    16d0:	ldr	r0, [fp, #-12]
    16d4:	ldr	r0, [r0, #220]	; 0xdc
    16d8:	cmp	r0, #0
    16dc:	beq	16e4 <gen_enum_parser+0x368>
    16e0:	b	1704 <gen_enum_parser+0x388>
    16e4:	movw	r0, #0
    16e8:	movt	r0, #0
    16ec:	movw	r1, #0
    16f0:	movt	r1, #0
    16f4:	movw	r2, #1278	; 0x4fe
    16f8:	movw	r3, #0
    16fc:	movt	r3, #0
    1700:	bl	0 <__assert_fail>
    1704:	ldr	r0, [fp, #-12]
    1708:	ldr	r1, [r0, #220]	; 0xdc
    170c:	mvn	r2, #0
    1710:	add	r1, r1, r2
    1714:	str	r1, [r0, #220]	; 0xdc
    1718:	ldr	r0, [fp, #-12]
    171c:	movw	r1, #0
    1720:	movt	r1, #0
    1724:	bl	888 <println>
    1728:	ldr	r0, [fp, #-12]
    172c:	movw	r1, #0
    1730:	movt	r1, #0
    1734:	bl	888 <println>
    1738:	ldr	r0, [sp, #12]
    173c:	bl	38d8 <clear_dict>
    1740:	movw	r0, #0
    1744:	sub	sp, fp, #8
    1748:	pop	{r4, r5, fp, pc}

0000174c <gen_struct_parser_inline>:
    174c:	push	{r4, r5, fp, lr}
    1750:	add	fp, sp, #8
    1754:	sub	sp, sp, #272	; 0x110
    1758:	str	r0, [fp, #-12]
    175c:	str	r1, [fp, #-16]
    1760:	add	r0, sp, #12
    1764:	movw	r1, #0
    1768:	and	r1, r1, #255	; 0xff
    176c:	movw	r2, #28
    1770:	bl	0 <memset>
    1774:	ldr	r0, [fp, #-16]
    1778:	ldrh	r0, [r0, #8]
    177c:	cmp	r0, #1
    1780:	bne	1788 <gen_struct_parser_inline+0x3c>
    1784:	b	17a8 <gen_struct_parser_inline+0x5c>
    1788:	movw	r0, #0
    178c:	movt	r0, #0
    1790:	movw	r1, #0
    1794:	movt	r1, #0
    1798:	movw	r2, #1301	; 0x515
    179c:	movw	r3, #0
    17a0:	movt	r3, #0
    17a4:	bl	0 <__assert_fail>
    17a8:	ldr	r0, [fp, #-16]
    17ac:	add	r1, sp, #40	; 0x28
    17b0:	bl	2d5c <build_compound_dict>
    17b4:	str	r0, [sp, #12]
    17b8:	movw	r1, #0
    17bc:	cmp	r0, r1
    17c0:	bne	1828 <gen_struct_parser_inline+0xdc>
    17c4:	ldr	r0, [sp, #40]	; 0x28
    17c8:	cmp	r0, #0
    17cc:	ble	1828 <gen_struct_parser_inline+0xdc>
    17d0:	movw	r0, #0
    17d4:	movt	r0, #0
    17d8:	ldr	r0, [r0]
    17dc:	movw	r1, #0
    17e0:	movt	r1, #0
    17e4:	movw	r2, #0
    17e8:	movt	r2, #0
    17ec:	movw	r3, #1303	; 0x517
    17f0:	movw	ip, #0
    17f4:	movt	ip, #0
    17f8:	str	ip, [sp]
    17fc:	bl	0 <fprintf>
    1800:	movw	r1, #0
    1804:	movt	r1, #0
    1808:	str	r0, [sp, #8]
    180c:	mov	r0, r1
    1810:	movw	r1, #0
    1814:	movt	r1, #0
    1818:	movw	r2, #1303	; 0x517
    181c:	movw	r3, #0
    1820:	movt	r3, #0
    1824:	bl	0 <__assert_fail>
    1828:	ldr	r0, [fp, #-16]
    182c:	str	r0, [sp, #24]
    1830:	movw	r0, #1
    1834:	str	r0, [sp, #28]
    1838:	movw	r0, #0
    183c:	movt	r0, #0
    1840:	str	r0, [sp, #16]
    1844:	movw	r0, #0
    1848:	movt	r0, #0
    184c:	str	r0, [sp, #20]
    1850:	add	r0, sp, #44	; 0x2c
    1854:	mov	r1, r0
    1858:	str	r0, [sp, #4]
    185c:	mov	r0, r1
    1860:	movw	r1, #0
    1864:	and	r1, r1, #255	; 0xff
    1868:	movw	r2, #220	; 0xdc
    186c:	bl	0 <memset>
    1870:	ldr	r0, [fp, #-16]
    1874:	ldr	r1, [sp, #4]
    1878:	bl	a0c <fb_compound_name>
    187c:	add	r2, sp, #44	; 0x2c
    1880:	ldr	r0, [fp, #-12]
    1884:	movw	r1, #0
    1888:	movt	r1, #0
    188c:	bl	888 <println>
    1890:	ldr	r0, [fp, #-12]
    1894:	movw	r1, #0
    1898:	movt	r1, #0
    189c:	bl	888 <println>
    18a0:	ldr	r0, [fp, #-12]
    18a4:	ldr	r1, [r0, #220]	; 0xdc
    18a8:	add	r1, r1, #1
    18ac:	str	r1, [r0, #220]	; 0xdc
    18b0:	ldr	r0, [fp, #-12]
    18b4:	movw	r1, #0
    18b8:	movt	r1, #0
    18bc:	bl	888 <println>
    18c0:	ldr	r0, [sp, #40]	; 0x28
    18c4:	cmp	r0, #0
    18c8:	ble	190c <gen_struct_parser_inline+0x1c0>
    18cc:	ldr	r0, [fp, #-12]
    18d0:	movw	r1, #0
    18d4:	movt	r1, #0
    18d8:	bl	888 <println>
    18dc:	ldr	r0, [fp, #-12]
    18e0:	movw	r1, #0
    18e4:	movt	r1, #0
    18e8:	bl	888 <println>
    18ec:	ldr	r0, [fp, #-12]
    18f0:	movw	r1, #0
    18f4:	movt	r1, #0
    18f8:	bl	888 <println>
    18fc:	ldr	r0, [fp, #-12]
    1900:	movw	r1, #0
    1904:	movt	r1, #0
    1908:	bl	888 <println>
    190c:	ldr	r0, [fp, #-12]
    1910:	movw	r1, #0
    1914:	movt	r1, #0
    1918:	bl	888 <println>
    191c:	ldr	r0, [fp, #-12]
    1920:	movw	r1, #0
    1924:	movt	r1, #0
    1928:	bl	888 <println>
    192c:	ldr	r0, [fp, #-12]
    1930:	movw	r1, #0
    1934:	movt	r1, #0
    1938:	bl	888 <println>
    193c:	ldr	r0, [fp, #-12]
    1940:	ldr	r1, [r0, #220]	; 0xdc
    1944:	add	r1, r1, #1
    1948:	str	r1, [r0, #220]	; 0xdc
    194c:	ldr	r0, [sp, #40]	; 0x28
    1950:	cmp	r0, #0
    1954:	bne	197c <gen_struct_parser_inline+0x230>
    1958:	ldr	r0, [fp, #-12]
    195c:	movw	r1, #0
    1960:	movt	r1, #0
    1964:	bl	888 <println>
    1968:	ldr	r0, [fp, #-12]
    196c:	movw	r1, #0
    1970:	movt	r1, #0
    1974:	bl	888 <println>
    1978:	b	19bc <gen_struct_parser_inline+0x270>
    197c:	ldr	r0, [fp, #-12]
    1980:	movw	r1, #0
    1984:	movt	r1, #0
    1988:	bl	888 <println>
    198c:	ldr	r0, [fp, #-12]
    1990:	movw	r1, #0
    1994:	movt	r1, #0
    1998:	bl	888 <println>
    199c:	ldr	r0, [fp, #-12]
    19a0:	ldr	r1, [sp, #40]	; 0x28
    19a4:	sub	r3, r1, #1
    19a8:	add	r1, sp, #12
    19ac:	movw	lr, #0
    19b0:	mov	r2, lr
    19b4:	str	lr, [sp]
    19b8:	bl	3128 <gen_trie>
    19bc:	ldr	r0, [fp, #-12]
    19c0:	movw	r1, #0
    19c4:	movt	r1, #0
    19c8:	bl	888 <println>
    19cc:	ldr	r0, [fp, #-12]
    19d0:	ldr	r0, [r0, #220]	; 0xdc
    19d4:	cmp	r0, #0
    19d8:	beq	19e0 <gen_struct_parser_inline+0x294>
    19dc:	b	1a00 <gen_struct_parser_inline+0x2b4>
    19e0:	movw	r0, #0
    19e4:	movt	r0, #0
    19e8:	movw	r1, #0
    19ec:	movt	r1, #0
    19f0:	movw	r2, #1334	; 0x536
    19f4:	movw	r3, #0
    19f8:	movt	r3, #0
    19fc:	bl	0 <__assert_fail>
    1a00:	ldr	r0, [fp, #-12]
    1a04:	ldr	r1, [r0, #220]	; 0xdc
    1a08:	mvn	r2, #0
    1a0c:	add	r1, r1, r2
    1a10:	str	r1, [r0, #220]	; 0xdc
    1a14:	ldr	r0, [fp, #-12]
    1a18:	movw	r1, #0
    1a1c:	movt	r1, #0
    1a20:	bl	888 <println>
    1a24:	ldr	r0, [fp, #-12]
    1a28:	movw	r1, #0
    1a2c:	movt	r1, #0
    1a30:	bl	888 <println>
    1a34:	ldr	r0, [sp, #40]	; 0x28
    1a38:	cmp	r0, #0
    1a3c:	ble	1a8c <gen_struct_parser_inline+0x340>
    1a40:	ldr	r0, [fp, #-12]
    1a44:	ldr	r0, [r0, #220]	; 0xdc
    1a48:	ldr	r1, [fp, #-12]
    1a4c:	str	r0, [r1, #228]	; 0xe4
    1a50:	ldr	r0, [fp, #-12]
    1a54:	movw	r1, #0
    1a58:	str	r1, [r0, #220]	; 0xdc
    1a5c:	ldr	r0, [fp, #-12]
    1a60:	movw	r1, #0
    1a64:	movt	r1, #0
    1a68:	bl	888 <println>
    1a6c:	ldr	r0, [fp, #-12]
    1a70:	ldr	r0, [r0, #228]	; 0xe4
    1a74:	ldr	r1, [fp, #-12]
    1a78:	str	r0, [r1, #220]	; 0xdc
    1a7c:	ldr	r0, [fp, #-12]
    1a80:	movw	r1, #0
    1a84:	movt	r1, #0
    1a88:	bl	888 <println>
    1a8c:	ldr	r0, [fp, #-12]
    1a90:	ldr	r0, [r0, #220]	; 0xdc
    1a94:	cmp	r0, #0
    1a98:	beq	1aa0 <gen_struct_parser_inline+0x354>
    1a9c:	b	1ac0 <gen_struct_parser_inline+0x374>
    1aa0:	movw	r0, #0
    1aa4:	movt	r0, #0
    1aa8:	movw	r1, #0
    1aac:	movt	r1, #0
    1ab0:	movw	r2, #1343	; 0x53f
    1ab4:	movw	r3, #0
    1ab8:	movt	r3, #0
    1abc:	bl	0 <__assert_fail>
    1ac0:	ldr	r0, [fp, #-12]
    1ac4:	ldr	r1, [r0, #220]	; 0xdc
    1ac8:	mvn	r2, #0
    1acc:	add	r1, r1, r2
    1ad0:	str	r1, [r0, #220]	; 0xdc
    1ad4:	ldr	r0, [fp, #-12]
    1ad8:	movw	r1, #0
    1adc:	movt	r1, #0
    1ae0:	bl	888 <println>
    1ae4:	ldr	r0, [fp, #-12]
    1ae8:	movw	r1, #0
    1aec:	movt	r1, #0
    1af0:	bl	888 <println>
    1af4:	ldr	r0, [sp, #12]
    1af8:	bl	38d8 <clear_dict>
    1afc:	movw	r0, #0
    1b00:	sub	sp, fp, #8
    1b04:	pop	{r4, r5, fp, pc}

00001b08 <gen_struct_parser>:
    1b08:	push	{r4, r5, fp, lr}
    1b0c:	add	fp, sp, #8
    1b10:	sub	sp, sp, #240	; 0xf0
    1b14:	str	r0, [fp, #-12]
    1b18:	str	r1, [fp, #-16]
    1b1c:	ldr	r0, [fp, #-16]
    1b20:	ldrh	r0, [r0, #8]
    1b24:	cmp	r0, #1
    1b28:	bne	1b30 <gen_struct_parser+0x28>
    1b2c:	b	1b50 <gen_struct_parser+0x48>
    1b30:	movw	r0, #0
    1b34:	movt	r0, #0
    1b38:	movw	r1, #0
    1b3c:	movt	r1, #0
    1b40:	movw	r2, #1353	; 0x549
    1b44:	movw	r3, #0
    1b48:	movt	r3, #0
    1b4c:	bl	0 <__assert_fail>
    1b50:	add	r0, sp, #12
    1b54:	mov	r1, #0
    1b58:	mov	r2, #220	; 0xdc
    1b5c:	str	r0, [sp, #8]
    1b60:	bl	0 <memset>
    1b64:	ldr	r1, [fp, #-16]
    1b68:	str	r0, [sp, #4]
    1b6c:	mov	r0, r1
    1b70:	ldr	r1, [sp, #8]
    1b74:	bl	a0c <fb_compound_name>
    1b78:	ldr	r0, [fp, #-12]
    1b7c:	movw	r1, #0
    1b80:	movt	r1, #0
    1b84:	ldr	r2, [sp, #8]
    1b88:	bl	888 <println>
    1b8c:	ldr	r0, [fp, #-12]
    1b90:	movw	r1, #0
    1b94:	movt	r1, #0
    1b98:	bl	888 <println>
    1b9c:	ldr	r0, [fp, #-12]
    1ba0:	ldr	r1, [r0, #220]	; 0xdc
    1ba4:	add	r1, r1, #1
    1ba8:	str	r1, [r0, #220]	; 0xdc
    1bac:	ldr	r0, [fp, #-12]
    1bb0:	movw	r1, #0
    1bb4:	movt	r1, #0
    1bb8:	bl	888 <println>
    1bbc:	ldr	r0, [fp, #-12]
    1bc0:	movw	r1, #0
    1bc4:	movt	r1, #0
    1bc8:	bl	888 <println>
    1bcc:	ldr	r0, [fp, #-12]
    1bd0:	movw	r1, #0
    1bd4:	movt	r1, #0
    1bd8:	bl	888 <println>
    1bdc:	ldr	r0, [fp, #-12]
    1be0:	ldr	r1, [fp, #-16]
    1be4:	ldr	r2, [r1, #112]	; 0x70
    1be8:	ldr	r3, [r1, #116]	; 0x74
    1bec:	ldr	r1, [fp, #-16]
    1bf0:	ldrh	r1, [r1, #104]	; 0x68
    1bf4:	mov	lr, sp
    1bf8:	str	r1, [lr]
    1bfc:	movw	r1, #0
    1c00:	movt	r1, #0
    1c04:	bl	888 <println>
    1c08:	add	r2, sp, #12
    1c0c:	ldr	r0, [fp, #-12]
    1c10:	movw	r1, #0
    1c14:	movt	r1, #0
    1c18:	bl	888 <println>
    1c1c:	ldr	r0, [fp, #-12]
    1c20:	movw	r1, #0
    1c24:	movt	r1, #0
    1c28:	bl	888 <println>
    1c2c:	ldr	r0, [fp, #-12]
    1c30:	movw	r1, #0
    1c34:	movt	r1, #0
    1c38:	bl	888 <println>
    1c3c:	ldr	r0, [fp, #-12]
    1c40:	ldr	r0, [r0, #220]	; 0xdc
    1c44:	ldr	r1, [fp, #-12]
    1c48:	str	r0, [r1, #228]	; 0xe4
    1c4c:	ldr	r0, [fp, #-12]
    1c50:	movw	r1, #0
    1c54:	str	r1, [r0, #220]	; 0xdc
    1c58:	ldr	r0, [fp, #-12]
    1c5c:	movw	r1, #0
    1c60:	movt	r1, #0
    1c64:	bl	888 <println>
    1c68:	ldr	r0, [fp, #-12]
    1c6c:	ldr	r0, [r0, #228]	; 0xe4
    1c70:	ldr	r1, [fp, #-12]
    1c74:	str	r0, [r1, #220]	; 0xdc
    1c78:	ldr	r0, [fp, #-12]
    1c7c:	movw	r1, #0
    1c80:	movt	r1, #0
    1c84:	bl	888 <println>
    1c88:	ldr	r0, [fp, #-12]
    1c8c:	ldr	r0, [r0, #220]	; 0xdc
    1c90:	cmp	r0, #0
    1c94:	beq	1c9c <gen_struct_parser+0x194>
    1c98:	b	1cbc <gen_struct_parser+0x1b4>
    1c9c:	movw	r0, #0
    1ca0:	movt	r0, #0
    1ca4:	movw	r1, #0
    1ca8:	movt	r1, #0
    1cac:	movw	r2, #1370	; 0x55a
    1cb0:	movw	r3, #0
    1cb4:	movt	r3, #0
    1cb8:	bl	0 <__assert_fail>
    1cbc:	ldr	r0, [fp, #-12]
    1cc0:	ldr	r1, [r0, #220]	; 0xdc
    1cc4:	mvn	r2, #0
    1cc8:	add	r1, r1, r2
    1ccc:	str	r1, [r0, #220]	; 0xdc
    1cd0:	ldr	r0, [fp, #-12]
    1cd4:	movw	r1, #0
    1cd8:	movt	r1, #0
    1cdc:	bl	888 <println>
    1ce0:	ldr	r0, [fp, #-12]
    1ce4:	movw	r1, #0
    1ce8:	movt	r1, #0
    1cec:	bl	888 <println>
    1cf0:	add	r2, sp, #12
    1cf4:	ldr	r0, [fp, #-12]
    1cf8:	movw	r1, #0
    1cfc:	movt	r1, #0
    1d00:	bl	888 <println>
    1d04:	ldr	r0, [fp, #-12]
    1d08:	movw	r1, #0
    1d0c:	movt	r1, #0
    1d10:	bl	888 <println>
    1d14:	add	r2, sp, #12
    1d18:	ldr	r0, [fp, #-12]
    1d1c:	ldr	r1, [r0, #220]	; 0xdc
    1d20:	add	r1, r1, #1
    1d24:	str	r1, [r0, #220]	; 0xdc
    1d28:	ldr	r0, [fp, #-12]
    1d2c:	movw	r1, #0
    1d30:	movt	r1, #0
    1d34:	bl	888 <println>
    1d38:	ldr	r0, [fp, #-12]
    1d3c:	ldr	r0, [r0, #220]	; 0xdc
    1d40:	cmp	r0, #0
    1d44:	beq	1d4c <gen_struct_parser+0x244>
    1d48:	b	1d6c <gen_struct_parser+0x264>
    1d4c:	movw	r0, #0
    1d50:	movt	r0, #0
    1d54:	movw	r1, #0
    1d58:	movt	r1, #0
    1d5c:	movw	r2, #1376	; 0x560
    1d60:	movw	r3, #0
    1d64:	movt	r3, #0
    1d68:	bl	0 <__assert_fail>
    1d6c:	ldr	r0, [fp, #-12]
    1d70:	ldr	r1, [r0, #220]	; 0xdc
    1d74:	mvn	r2, #0
    1d78:	add	r1, r1, r2
    1d7c:	str	r1, [r0, #220]	; 0xdc
    1d80:	ldr	r0, [fp, #-12]
    1d84:	movw	r1, #0
    1d88:	movt	r1, #0
    1d8c:	bl	888 <println>
    1d90:	ldr	r0, [fp, #-12]
    1d94:	movw	r1, #0
    1d98:	movt	r1, #0
    1d9c:	bl	888 <println>
    1da0:	movw	r0, #0
    1da4:	sub	sp, fp, #8
    1da8:	pop	{r4, r5, fp, pc}

00001dac <gen_table_parser>:
    1dac:	push	{r4, r5, fp, lr}
    1db0:	add	fp, sp, #8
    1db4:	sub	sp, sp, #296	; 0x128
    1db8:	str	r0, [fp, #-12]
    1dbc:	str	r1, [fp, #-16]
    1dc0:	add	r0, sp, #16
    1dc4:	movw	r1, #0
    1dc8:	and	r1, r1, #255	; 0xff
    1dcc:	movw	r2, #28
    1dd0:	bl	0 <memset>
    1dd4:	ldr	r0, [fp, #-16]
    1dd8:	ldrh	r0, [r0, #8]
    1ddc:	cmp	r0, #0
    1de0:	bne	1de8 <gen_table_parser+0x3c>
    1de4:	b	1e08 <gen_table_parser+0x5c>
    1de8:	movw	r0, #0
    1dec:	movt	r0, #0
    1df0:	movw	r1, #0
    1df4:	movt	r1, #0
    1df8:	movw	r2, #1390	; 0x56e
    1dfc:	movw	r3, #0
    1e00:	movt	r3, #0
    1e04:	bl	0 <__assert_fail>
    1e08:	ldr	r0, [fp, #-16]
    1e0c:	add	r1, sp, #52	; 0x34
    1e10:	bl	2d5c <build_compound_dict>
    1e14:	str	r0, [sp, #16]
    1e18:	movw	r1, #0
    1e1c:	cmp	r0, r1
    1e20:	bne	1e88 <gen_table_parser+0xdc>
    1e24:	ldr	r0, [sp, #52]	; 0x34
    1e28:	cmp	r0, #0
    1e2c:	ble	1e88 <gen_table_parser+0xdc>
    1e30:	movw	r0, #0
    1e34:	movt	r0, #0
    1e38:	ldr	r0, [r0]
    1e3c:	movw	r1, #0
    1e40:	movt	r1, #0
    1e44:	movw	r2, #0
    1e48:	movt	r2, #0
    1e4c:	movw	r3, #1392	; 0x570
    1e50:	movw	ip, #0
    1e54:	movt	ip, #0
    1e58:	str	ip, [sp]
    1e5c:	bl	0 <fprintf>
    1e60:	movw	r1, #0
    1e64:	movt	r1, #0
    1e68:	str	r0, [sp, #12]
    1e6c:	mov	r0, r1
    1e70:	movw	r1, #0
    1e74:	movt	r1, #0
    1e78:	movw	r2, #1392	; 0x570
    1e7c:	movw	r3, #0
    1e80:	movt	r3, #0
    1e84:	bl	0 <__assert_fail>
    1e88:	ldr	r0, [fp, #-16]
    1e8c:	str	r0, [sp, #28]
    1e90:	movw	r0, #0
    1e94:	str	r0, [sp, #32]
    1e98:	movw	r1, #0
    1e9c:	movt	r1, #0
    1ea0:	str	r1, [sp, #20]
    1ea4:	movw	r1, #0
    1ea8:	movt	r1, #0
    1eac:	str	r1, [sp, #24]
    1eb0:	str	r0, [sp, #36]	; 0x24
    1eb4:	str	r0, [sp, #56]	; 0x38
    1eb8:	ldr	r0, [sp, #56]	; 0x38
    1ebc:	ldr	r1, [sp, #52]	; 0x34
    1ec0:	cmp	r0, r1
    1ec4:	bge	1f10 <gen_table_parser+0x164>
    1ec8:	ldr	r0, [sp, #16]
    1ecc:	ldr	r1, [sp, #56]	; 0x38
    1ed0:	add	r0, r0, r1, lsl #4
    1ed4:	ldr	r0, [r0, #12]
    1ed8:	cmp	r0, #0
    1edc:	movw	r0, #0
    1ee0:	movne	r0, #1
    1ee4:	mvn	r1, #0
    1ee8:	eor	r0, r0, r1
    1eec:	eor	r0, r0, r1
    1ef0:	and	r0, r0, #1
    1ef4:	ldr	r1, [sp, #36]	; 0x24
    1ef8:	add	r0, r1, r0
    1efc:	str	r0, [sp, #36]	; 0x24
    1f00:	ldr	r0, [sp, #56]	; 0x38
    1f04:	add	r0, r0, #1
    1f08:	str	r0, [sp, #56]	; 0x38
    1f0c:	b	1eb8 <gen_table_parser+0x10c>
    1f10:	add	r0, sp, #68	; 0x44
    1f14:	mov	r1, r0
    1f18:	str	r0, [sp, #8]
    1f1c:	mov	r0, r1
    1f20:	movw	r1, #0
    1f24:	and	r1, r1, #255	; 0xff
    1f28:	movw	r2, #220	; 0xdc
    1f2c:	bl	0 <memset>
    1f30:	ldr	r0, [fp, #-16]
    1f34:	ldr	r1, [sp, #8]
    1f38:	bl	a0c <fb_compound_name>
    1f3c:	add	r2, sp, #68	; 0x44
    1f40:	ldr	r0, [fp, #-12]
    1f44:	movw	r1, #0
    1f48:	movt	r1, #0
    1f4c:	bl	888 <println>
    1f50:	ldr	r0, [fp, #-12]
    1f54:	movw	r1, #0
    1f58:	movt	r1, #0
    1f5c:	bl	888 <println>
    1f60:	ldr	r0, [fp, #-12]
    1f64:	ldr	r1, [r0, #220]	; 0xdc
    1f68:	add	r1, r1, #1
    1f6c:	str	r1, [r0, #220]	; 0xdc
    1f70:	ldr	r0, [fp, #-12]
    1f74:	movw	r1, #0
    1f78:	movt	r1, #0
    1f7c:	bl	888 <println>
    1f80:	ldr	r0, [sp, #52]	; 0x34
    1f84:	cmp	r0, #0
    1f88:	ble	1fcc <gen_table_parser+0x220>
    1f8c:	ldr	r0, [fp, #-12]
    1f90:	movw	r1, #0
    1f94:	movt	r1, #0
    1f98:	bl	888 <println>
    1f9c:	ldr	r0, [fp, #-12]
    1fa0:	movw	r1, #0
    1fa4:	movt	r1, #0
    1fa8:	bl	888 <println>
    1fac:	ldr	r0, [fp, #-12]
    1fb0:	movw	r1, #0
    1fb4:	movt	r1, #0
    1fb8:	bl	888 <println>
    1fbc:	ldr	r0, [fp, #-12]
    1fc0:	movw	r1, #0
    1fc4:	movt	r1, #0
    1fc8:	bl	888 <println>
    1fcc:	ldr	r0, [sp, #36]	; 0x24
    1fd0:	cmp	r0, #0
    1fd4:	beq	1fe8 <gen_table_parser+0x23c>
    1fd8:	ldr	r0, [fp, #-12]
    1fdc:	movw	r1, #0
    1fe0:	movt	r1, #0
    1fe4:	bl	888 <println>
    1fe8:	ldr	r0, [fp, #-12]
    1fec:	movw	r1, #0
    1ff0:	movt	r1, #0
    1ff4:	bl	888 <println>
    1ff8:	ldr	r0, [fp, #-12]
    1ffc:	movw	r1, #0
    2000:	movt	r1, #0
    2004:	bl	888 <println>
    2008:	ldr	r0, [fp, #-12]
    200c:	ldr	r1, [fp, #-16]
    2010:	ldr	r2, [r1, #96]	; 0x60
    2014:	ldr	r3, [r1, #100]	; 0x64
    2018:	movw	r1, #0
    201c:	movt	r1, #0
    2020:	bl	888 <println>
    2024:	ldr	r0, [sp, #36]	; 0x24
    2028:	cmp	r0, #0
    202c:	beq	2054 <gen_table_parser+0x2a8>
    2030:	ldr	r0, [fp, #-12]
    2034:	ldr	r1, [sp, #36]	; 0x24
    2038:	asr	r3, r1, #31
    203c:	movw	r2, #0
    2040:	movt	r2, #0
    2044:	str	r1, [sp, #4]
    2048:	mov	r1, r2
    204c:	ldr	r2, [sp, #4]
    2050:	bl	888 <println>
    2054:	ldr	r0, [fp, #-12]
    2058:	movw	r1, #0
    205c:	movt	r1, #0
    2060:	bl	888 <println>
    2064:	ldr	r0, [fp, #-12]
    2068:	movw	r1, #0
    206c:	movt	r1, #0
    2070:	bl	888 <println>
    2074:	ldr	r0, [fp, #-12]
    2078:	ldr	r1, [r0, #220]	; 0xdc
    207c:	add	r1, r1, #1
    2080:	str	r1, [r0, #220]	; 0xdc
    2084:	ldr	r0, [fp, #-12]
    2088:	movw	r1, #0
    208c:	movt	r1, #0
    2090:	bl	888 <println>
    2094:	ldr	r0, [sp, #52]	; 0x34
    2098:	cmp	r0, #0
    209c:	ble	20d4 <gen_table_parser+0x328>
    20a0:	ldr	r0, [fp, #-12]
    20a4:	movw	r1, #0
    20a8:	movt	r1, #0
    20ac:	bl	888 <println>
    20b0:	ldr	r0, [fp, #-12]
    20b4:	ldr	r1, [sp, #52]	; 0x34
    20b8:	sub	r3, r1, #1
    20bc:	add	r1, sp, #16
    20c0:	movw	lr, #0
    20c4:	mov	r2, lr
    20c8:	str	lr, [sp]
    20cc:	bl	3128 <gen_trie>
    20d0:	b	20f4 <gen_table_parser+0x348>
    20d4:	ldr	r0, [fp, #-12]
    20d8:	movw	r1, #0
    20dc:	movt	r1, #0
    20e0:	bl	888 <println>
    20e4:	ldr	r0, [fp, #-12]
    20e8:	movw	r1, #0
    20ec:	movt	r1, #0
    20f0:	bl	888 <println>
    20f4:	ldr	r0, [fp, #-12]
    20f8:	movw	r1, #0
    20fc:	movt	r1, #0
    2100:	bl	888 <println>
    2104:	ldr	r0, [fp, #-12]
    2108:	ldr	r0, [r0, #220]	; 0xdc
    210c:	cmp	r0, #0
    2110:	beq	2118 <gen_table_parser+0x36c>
    2114:	b	2138 <gen_table_parser+0x38c>
    2118:	movw	r0, #0
    211c:	movt	r0, #0
    2120:	movw	r1, #0
    2124:	movt	r1, #0
    2128:	movw	r2, #1438	; 0x59e
    212c:	movw	r3, #0
    2130:	movt	r3, #0
    2134:	bl	0 <__assert_fail>
    2138:	ldr	r0, [fp, #-12]
    213c:	ldr	r1, [r0, #220]	; 0xdc
    2140:	mvn	r2, #0
    2144:	add	r1, r1, r2
    2148:	str	r1, [r0, #220]	; 0xdc
    214c:	ldr	r0, [fp, #-12]
    2150:	movw	r1, #0
    2154:	movt	r1, #0
    2158:	bl	888 <println>
    215c:	ldr	r0, [fp, #-12]
    2160:	movw	r1, #0
    2164:	movt	r1, #0
    2168:	bl	888 <println>
    216c:	movw	r0, #1
    2170:	str	r0, [sp, #60]	; 0x3c
    2174:	movw	r0, #0
    2178:	str	r0, [sp, #56]	; 0x38
    217c:	ldr	r0, [sp, #56]	; 0x38
    2180:	ldr	r1, [sp, #52]	; 0x34
    2184:	cmp	r0, r1
    2188:	bge	226c <gen_table_parser+0x4c0>
    218c:	ldr	r0, [sp, #16]
    2190:	ldr	r1, [sp, #56]	; 0x38
    2194:	add	r0, r0, r1, lsl #4
    2198:	ldr	r0, [r0, #8]
    219c:	str	r0, [sp, #64]	; 0x40
    21a0:	ldr	r0, [sp, #64]	; 0x40
    21a4:	ldrh	r0, [r0, #72]	; 0x48
    21a8:	and	r0, r0, #4
    21ac:	cmp	r0, #0
    21b0:	beq	21b8 <gen_table_parser+0x40c>
    21b4:	b	225c <gen_table_parser+0x4b0>
    21b8:	ldr	r0, [sp, #64]	; 0x40
    21bc:	bl	3908 <is_union_member>
    21c0:	str	r0, [sp, #48]	; 0x30
    21c4:	ldr	r0, [sp, #64]	; 0x40
    21c8:	ldrh	r0, [r0, #72]	; 0x48
    21cc:	and	r0, r0, #256	; 0x100
    21d0:	str	r0, [sp, #44]	; 0x2c
    21d4:	ldr	r0, [sp, #44]	; 0x2c
    21d8:	cmp	r0, #0
    21dc:	beq	2258 <gen_table_parser+0x4ac>
    21e0:	ldr	r0, [sp, #60]	; 0x3c
    21e4:	cmp	r0, #0
    21e8:	beq	2228 <gen_table_parser+0x47c>
    21ec:	ldr	r0, [fp, #-12]
    21f0:	ldr	r1, [sp, #64]	; 0x40
    21f4:	ldr	r2, [r1, #96]	; 0x60
    21f8:	ldr	r1, [r1, #100]	; 0x64
    21fc:	ldr	r3, [sp, #48]	; 0x30
    2200:	subs	r2, r2, r3
    2204:	sbc	r3, r1, r3, asr #31
    2208:	movw	r1, #0
    220c:	movt	r1, #0
    2210:	bl	888 <println>
    2214:	ldr	r0, [fp, #-12]
    2218:	ldr	r1, [r0, #220]	; 0xdc
    221c:	add	r1, r1, #1
    2220:	str	r1, [r0, #220]	; 0xdc
    2224:	b	2250 <gen_table_parser+0x4a4>
    2228:	ldr	r0, [fp, #-12]
    222c:	ldr	r1, [sp, #64]	; 0x40
    2230:	ldr	r2, [r1, #96]	; 0x60
    2234:	ldr	r1, [r1, #100]	; 0x64
    2238:	ldr	r3, [sp, #48]	; 0x30
    223c:	subs	r2, r2, r3
    2240:	sbc	r3, r1, r3, asr #31
    2244:	movw	r1, #0
    2248:	movt	r1, #0
    224c:	bl	888 <println>
    2250:	movw	r0, #0
    2254:	str	r0, [sp, #60]	; 0x3c
    2258:	b	225c <gen_table_parser+0x4b0>
    225c:	ldr	r0, [sp, #56]	; 0x38
    2260:	add	r0, r0, #1
    2264:	str	r0, [sp, #56]	; 0x38
    2268:	b	217c <gen_table_parser+0x3d0>
    226c:	ldr	r0, [sp, #60]	; 0x3c
    2270:	cmp	r0, #0
    2274:	bne	2358 <gen_table_parser+0x5ac>
    2278:	ldr	r0, [fp, #-12]
    227c:	ldr	r0, [r0, #220]	; 0xdc
    2280:	cmp	r0, #0
    2284:	beq	228c <gen_table_parser+0x4e0>
    2288:	b	22ac <gen_table_parser+0x500>
    228c:	movw	r0, #0
    2290:	movt	r0, #0
    2294:	movw	r1, #0
    2298:	movt	r1, #0
    229c:	movw	r2, #1458	; 0x5b2
    22a0:	movw	r3, #0
    22a4:	movt	r3, #0
    22a8:	bl	0 <__assert_fail>
    22ac:	ldr	r0, [fp, #-12]
    22b0:	ldr	r1, [r0, #220]	; 0xdc
    22b4:	mvn	r2, #0
    22b8:	add	r1, r1, r2
    22bc:	str	r1, [r0, #220]	; 0xdc
    22c0:	ldr	r0, [fp, #-12]
    22c4:	movw	r1, #0
    22c8:	movt	r1, #0
    22cc:	bl	888 <println>
    22d0:	ldr	r0, [fp, #-12]
    22d4:	ldr	r1, [r0, #220]	; 0xdc
    22d8:	add	r1, r1, #1
    22dc:	str	r1, [r0, #220]	; 0xdc
    22e0:	ldr	r0, [fp, #-12]
    22e4:	movw	r1, #0
    22e8:	movt	r1, #0
    22ec:	bl	888 <println>
    22f0:	ldr	r0, [fp, #-12]
    22f4:	movw	r1, #0
    22f8:	movt	r1, #0
    22fc:	bl	888 <println>
    2300:	ldr	r0, [fp, #-12]
    2304:	ldr	r0, [r0, #220]	; 0xdc
    2308:	cmp	r0, #0
    230c:	beq	2314 <gen_table_parser+0x568>
    2310:	b	2334 <gen_table_parser+0x588>
    2314:	movw	r0, #0
    2318:	movt	r0, #0
    231c:	movw	r1, #0
    2320:	movt	r1, #0
    2324:	movw	r2, #1461	; 0x5b5
    2328:	movw	r3, #0
    232c:	movt	r3, #0
    2330:	bl	0 <__assert_fail>
    2334:	ldr	r0, [fp, #-12]
    2338:	ldr	r1, [r0, #220]	; 0xdc
    233c:	mvn	r2, #0
    2340:	add	r1, r1, r2
    2344:	str	r1, [r0, #220]	; 0xdc
    2348:	ldr	r0, [fp, #-12]
    234c:	movw	r1, #0
    2350:	movt	r1, #0
    2354:	bl	888 <println>
    2358:	ldr	r0, [sp, #36]	; 0x24
    235c:	cmp	r0, #0
    2360:	beq	2374 <gen_table_parser+0x5c8>
    2364:	ldr	r0, [fp, #-12]
    2368:	movw	r1, #0
    236c:	movt	r1, #0
    2370:	bl	888 <println>
    2374:	ldr	r0, [fp, #-12]
    2378:	movw	r1, #0
    237c:	movt	r1, #0
    2380:	bl	888 <println>
    2384:	ldr	r0, [fp, #-12]
    2388:	movw	r1, #0
    238c:	movt	r1, #0
    2390:	bl	888 <println>
    2394:	ldr	r0, [fp, #-12]
    2398:	ldr	r0, [r0, #220]	; 0xdc
    239c:	ldr	r1, [fp, #-12]
    23a0:	str	r0, [r1, #228]	; 0xe4
    23a4:	ldr	r0, [fp, #-12]
    23a8:	movw	r1, #0
    23ac:	str	r1, [r0, #220]	; 0xdc
    23b0:	ldr	r0, [fp, #-12]
    23b4:	movw	r1, #0
    23b8:	movt	r1, #0
    23bc:	bl	888 <println>
    23c0:	ldr	r0, [fp, #-12]
    23c4:	ldr	r0, [r0, #228]	; 0xe4
    23c8:	ldr	r1, [fp, #-12]
    23cc:	str	r0, [r1, #220]	; 0xdc
    23d0:	ldr	r0, [fp, #-12]
    23d4:	movw	r1, #0
    23d8:	movt	r1, #0
    23dc:	bl	888 <println>
    23e0:	ldr	r0, [fp, #-12]
    23e4:	ldr	r0, [r0, #220]	; 0xdc
    23e8:	cmp	r0, #0
    23ec:	beq	23f4 <gen_table_parser+0x648>
    23f0:	b	2414 <gen_table_parser+0x668>
    23f4:	movw	r0, #0
    23f8:	movt	r0, #0
    23fc:	movw	r1, #0
    2400:	movt	r1, #0
    2404:	movw	r2, #1473	; 0x5c1
    2408:	movw	r3, #0
    240c:	movt	r3, #0
    2410:	bl	0 <__assert_fail>
    2414:	ldr	r0, [fp, #-12]
    2418:	ldr	r1, [r0, #220]	; 0xdc
    241c:	mvn	r2, #0
    2420:	add	r1, r1, r2
    2424:	str	r1, [r0, #220]	; 0xdc
    2428:	ldr	r0, [fp, #-12]
    242c:	movw	r1, #0
    2430:	movt	r1, #0
    2434:	bl	888 <println>
    2438:	ldr	r0, [fp, #-12]
    243c:	movw	r1, #0
    2440:	movt	r1, #0
    2444:	bl	888 <println>
    2448:	add	r2, sp, #68	; 0x44
    244c:	ldr	r0, [fp, #-12]
    2450:	movw	r1, #0
    2454:	movt	r1, #0
    2458:	bl	888 <println>
    245c:	ldr	r0, [fp, #-12]
    2460:	movw	r1, #0
    2464:	movt	r1, #0
    2468:	bl	888 <println>
    246c:	add	r2, sp, #68	; 0x44
    2470:	ldr	r0, [fp, #-12]
    2474:	ldr	r1, [r0, #220]	; 0xdc
    2478:	add	r1, r1, #1
    247c:	str	r1, [r0, #220]	; 0xdc
    2480:	ldr	r0, [fp, #-12]
    2484:	movw	r1, #0
    2488:	movt	r1, #0
    248c:	bl	888 <println>
    2490:	ldr	r0, [fp, #-12]
    2494:	ldr	r0, [r0, #220]	; 0xdc
    2498:	cmp	r0, #0
    249c:	beq	24a4 <gen_table_parser+0x6f8>
    24a0:	b	24c4 <gen_table_parser+0x718>
    24a4:	movw	r0, #0
    24a8:	movt	r0, #0
    24ac:	movw	r1, #0
    24b0:	movt	r1, #0
    24b4:	movw	r2, #1479	; 0x5c7
    24b8:	movw	r3, #0
    24bc:	movt	r3, #0
    24c0:	bl	0 <__assert_fail>
    24c4:	ldr	r0, [fp, #-12]
    24c8:	ldr	r1, [r0, #220]	; 0xdc
    24cc:	mvn	r2, #0
    24d0:	add	r1, r1, r2
    24d4:	str	r1, [r0, #220]	; 0xdc
    24d8:	ldr	r0, [fp, #-12]
    24dc:	movw	r1, #0
    24e0:	movt	r1, #0
    24e4:	bl	888 <println>
    24e8:	ldr	r0, [fp, #-12]
    24ec:	movw	r1, #0
    24f0:	movt	r1, #0
    24f4:	bl	888 <println>
    24f8:	ldr	r0, [sp, #16]
    24fc:	bl	38d8 <clear_dict>
    2500:	movw	r0, #0
    2504:	sub	sp, fp, #8
    2508:	pop	{r4, r5, fp, pc}

0000250c <gen_local_scope_parser>:
    250c:	push	{r4, r5, fp, lr}
    2510:	add	fp, sp, #8
    2514:	sub	sp, sp, #264	; 0x108
    2518:	add	r2, sp, #16
    251c:	str	r0, [fp, #-12]
    2520:	str	r1, [fp, #-16]
    2524:	ldr	r0, [fp, #-12]
    2528:	str	r0, [fp, #-20]	; 0xffffffec
    252c:	movw	r0, #0
    2530:	str	r0, [fp, #-24]	; 0xffffffe8
    2534:	sub	r0, fp, #52	; 0x34
    2538:	movw	r1, #0
    253c:	and	r1, r1, #255	; 0xff
    2540:	movw	r3, #28
    2544:	str	r2, [sp, #12]
    2548:	mov	r2, r3
    254c:	bl	0 <memset>
    2550:	ldr	r0, [fp, #-16]
    2554:	ldr	r1, [sp, #12]
    2558:	bl	0 <__flatcc_fb_copy_scope>
    255c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2560:	ldr	r1, [r1, #208]	; 0xd0
    2564:	ldr	r2, [fp, #-16]
    2568:	str	r0, [sp, #8]
    256c:	mov	r0, r1
    2570:	mov	r1, r2
    2574:	sub	r2, fp, #24
    2578:	bl	5a7c <build_local_scope_dict>
    257c:	str	r0, [fp, #-52]	; 0xffffffcc
    2580:	movw	r1, #0
    2584:	cmp	r0, r1
    2588:	bne	25f0 <gen_local_scope_parser+0xe4>
    258c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2590:	cmp	r0, #0
    2594:	ble	25f0 <gen_local_scope_parser+0xe4>
    2598:	movw	r0, #0
    259c:	movt	r0, #0
    25a0:	ldr	r0, [r0]
    25a4:	movw	r1, #0
    25a8:	movt	r1, #0
    25ac:	movw	r2, #0
    25b0:	movt	r2, #0
    25b4:	movw	r3, #1140	; 0x474
    25b8:	movw	ip, #0
    25bc:	movt	ip, #0
    25c0:	str	ip, [sp]
    25c4:	bl	0 <fprintf>
    25c8:	movw	r1, #0
    25cc:	movt	r1, #0
    25d0:	str	r0, [sp, #4]
    25d4:	mov	r0, r1
    25d8:	movw	r1, #0
    25dc:	movt	r1, #0
    25e0:	movw	r2, #1140	; 0x474
    25e4:	movw	r3, #0
    25e8:	movt	r3, #0
    25ec:	bl	0 <__assert_fail>
    25f0:	add	r3, sp, #16
    25f4:	movw	r0, #0
    25f8:	str	r0, [fp, #-40]	; 0xffffffd8
    25fc:	movw	r0, #3
    2600:	str	r0, [fp, #-36]	; 0xffffffdc
    2604:	movw	r0, #0
    2608:	movt	r0, #0
    260c:	str	r0, [fp, #-48]	; 0xffffffd0
    2610:	movw	r0, #0
    2614:	movt	r0, #0
    2618:	str	r0, [fp, #-44]	; 0xffffffd4
    261c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2620:	ldr	r1, [fp, #-20]	; 0xffffffec
    2624:	ldr	r1, [r1, #208]	; 0xd0
    2628:	ldr	r2, [r1, #160]	; 0xa0
    262c:	movw	r1, #0
    2630:	movt	r1, #0
    2634:	bl	888 <println>
    2638:	ldr	r0, [fp, #-20]	; 0xffffffec
    263c:	ldr	r1, [r0, #220]	; 0xdc
    2640:	add	r1, r1, #1
    2644:	str	r1, [r0, #220]	; 0xdc
    2648:	ldr	r0, [fp, #-20]	; 0xffffffec
    264c:	ldr	r1, [r0, #220]	; 0xdc
    2650:	add	r1, r1, #1
    2654:	str	r1, [r0, #220]	; 0xdc
    2658:	ldr	r0, [fp, #-20]	; 0xffffffec
    265c:	movw	r1, #0
    2660:	movt	r1, #0
    2664:	bl	888 <println>
    2668:	ldr	r0, [fp, #-20]	; 0xffffffec
    266c:	ldr	r0, [r0, #220]	; 0xdc
    2670:	cmp	r0, #0
    2674:	beq	267c <gen_local_scope_parser+0x170>
    2678:	b	269c <gen_local_scope_parser+0x190>
    267c:	movw	r0, #0
    2680:	movt	r0, #0
    2684:	movw	r1, #0
    2688:	movt	r1, #0
    268c:	movw	r2, #1152	; 0x480
    2690:	movw	r3, #0
    2694:	movt	r3, #0
    2698:	bl	0 <__assert_fail>
    269c:	ldr	r0, [fp, #-20]	; 0xffffffec
    26a0:	ldr	r1, [r0, #220]	; 0xdc
    26a4:	mvn	r2, #0
    26a8:	add	r1, r1, r2
    26ac:	str	r1, [r0, #220]	; 0xdc
    26b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    26b4:	ldr	r0, [r0, #220]	; 0xdc
    26b8:	cmp	r0, #0
    26bc:	beq	26c4 <gen_local_scope_parser+0x1b8>
    26c0:	b	26e4 <gen_local_scope_parser+0x1d8>
    26c4:	movw	r0, #0
    26c8:	movt	r0, #0
    26cc:	movw	r1, #0
    26d0:	movt	r1, #0
    26d4:	movw	r2, #1152	; 0x480
    26d8:	movw	r3, #0
    26dc:	movt	r3, #0
    26e0:	bl	0 <__assert_fail>
    26e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    26e8:	ldr	r1, [r0, #220]	; 0xdc
    26ec:	mvn	r2, #0
    26f0:	add	r1, r1, r2
    26f4:	str	r1, [r0, #220]	; 0xdc
    26f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    26fc:	movw	r1, #0
    2700:	movt	r1, #0
    2704:	bl	888 <println>
    2708:	ldr	r0, [fp, #-20]	; 0xffffffec
    270c:	ldr	r1, [r0, #220]	; 0xdc
    2710:	add	r1, r1, #1
    2714:	str	r1, [r0, #220]	; 0xdc
    2718:	ldr	r0, [fp, #-24]	; 0xffffffe8
    271c:	cmp	r0, #0
    2720:	bne	27a0 <gen_local_scope_parser+0x294>
    2724:	ldr	r0, [fp, #-20]	; 0xffffffec
    2728:	movw	r1, #0
    272c:	movt	r1, #0
    2730:	bl	888 <println>
    2734:	ldr	r0, [fp, #-20]	; 0xffffffec
    2738:	movw	r1, #0
    273c:	movt	r1, #0
    2740:	bl	888 <println>
    2744:	ldr	r0, [fp, #-20]	; 0xffffffec
    2748:	ldr	r0, [r0, #220]	; 0xdc
    274c:	cmp	r0, #0
    2750:	beq	2758 <gen_local_scope_parser+0x24c>
    2754:	b	2778 <gen_local_scope_parser+0x26c>
    2758:	movw	r0, #0
    275c:	movt	r0, #0
    2760:	movw	r1, #0
    2764:	movt	r1, #0
    2768:	movw	r2, #1157	; 0x485
    276c:	movw	r3, #0
    2770:	movt	r3, #0
    2774:	bl	0 <__assert_fail>
    2778:	ldr	r0, [fp, #-20]	; 0xffffffec
    277c:	ldr	r1, [r0, #220]	; 0xdc
    2780:	mvn	r2, #0
    2784:	add	r1, r1, r2
    2788:	str	r1, [r0, #220]	; 0xdc
    278c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2790:	movw	r1, #0
    2794:	movt	r1, #0
    2798:	bl	888 <println>
    279c:	b	2878 <gen_local_scope_parser+0x36c>
    27a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27a4:	movw	r1, #0
    27a8:	movt	r1, #0
    27ac:	bl	888 <println>
    27b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27b4:	movw	r1, #0
    27b8:	movt	r1, #0
    27bc:	bl	888 <println>
    27c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27c4:	movw	r1, #0
    27c8:	movt	r1, #0
    27cc:	bl	888 <println>
    27d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27d4:	movw	r1, #0
    27d8:	movt	r1, #0
    27dc:	bl	888 <println>
    27e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27e4:	movw	r1, #0
    27e8:	movt	r1, #0
    27ec:	bl	888 <println>
    27f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    27f8:	sub	r3, r1, #1
    27fc:	sub	r1, fp, #52	; 0x34
    2800:	movw	lr, #0
    2804:	mov	r2, lr
    2808:	str	lr, [sp]
    280c:	bl	3128 <gen_trie>
    2810:	ldr	r0, [fp, #-20]	; 0xffffffec
    2814:	movw	r1, #0
    2818:	movt	r1, #0
    281c:	bl	888 <println>
    2820:	ldr	r0, [fp, #-20]	; 0xffffffec
    2824:	ldr	r0, [r0, #220]	; 0xdc
    2828:	cmp	r0, #0
    282c:	beq	2834 <gen_local_scope_parser+0x328>
    2830:	b	2854 <gen_local_scope_parser+0x348>
    2834:	movw	r0, #0
    2838:	movt	r0, #0
    283c:	movw	r1, #0
    2840:	movt	r1, #0
    2844:	movw	r2, #1166	; 0x48e
    2848:	movw	r3, #0
    284c:	movt	r3, #0
    2850:	bl	0 <__assert_fail>
    2854:	ldr	r0, [fp, #-20]	; 0xffffffec
    2858:	ldr	r1, [r0, #220]	; 0xdc
    285c:	mvn	r2, #0
    2860:	add	r1, r1, r2
    2864:	str	r1, [r0, #220]	; 0xdc
    2868:	ldr	r0, [fp, #-20]	; 0xffffffec
    286c:	movw	r1, #0
    2870:	movt	r1, #0
    2874:	bl	888 <println>
    2878:	ldr	r0, [fp, #-20]	; 0xffffffec
    287c:	movw	r1, #0
    2880:	movt	r1, #0
    2884:	bl	888 <println>
    2888:	ldr	r0, [fp, #-52]	; 0xffffffcc
    288c:	bl	38d8 <clear_dict>
    2890:	sub	sp, fp, #8
    2894:	pop	{r4, r5, fp, pc}

00002898 <gen_global_scope_parser>:
    2898:	push	{fp, lr}
    289c:	mov	fp, sp
    28a0:	sub	sp, sp, #96	; 0x60
    28a4:	str	r0, [fp, #-8]
    28a8:	movw	r0, #0
    28ac:	str	r0, [fp, #-12]
    28b0:	sub	r0, fp, #40	; 0x28
    28b4:	movw	r1, #0
    28b8:	and	r1, r1, #255	; 0xff
    28bc:	movw	r2, #28
    28c0:	bl	0 <memset>
    28c4:	ldr	r0, [fp, #-8]
    28c8:	ldr	r1, [r0, #208]	; 0xd0
    28cc:	ldr	r0, [fp, #-8]
    28d0:	ldr	r0, [r0, #208]	; 0xd0
    28d4:	ldr	r3, [r0, #60]	; 0x3c
    28d8:	add	r0, sp, #12
    28dc:	movw	r2, #1
    28e0:	bl	5ecc <build_catalog>
    28e4:	cmp	r0, #0
    28e8:	beq	28f8 <gen_global_scope_parser+0x60>
    28ec:	mvn	r0, #0
    28f0:	str	r0, [fp, #-4]
    28f4:	b	2c2c <gen_global_scope_parser+0x394>
    28f8:	add	r0, sp, #12
    28fc:	sub	r1, fp, #12
    2900:	bl	6084 <build_global_scope_dict>
    2904:	str	r0, [fp, #-40]	; 0xffffffd8
    2908:	movw	r1, #0
    290c:	cmp	r0, r1
    2910:	bne	2980 <gen_global_scope_parser+0xe8>
    2914:	ldr	r0, [fp, #-12]
    2918:	cmp	r0, #0
    291c:	ble	2980 <gen_global_scope_parser+0xe8>
    2920:	add	r0, sp, #12
    2924:	bl	61d4 <clear_catalog>
    2928:	movw	r0, #0
    292c:	movt	r0, #0
    2930:	ldr	r0, [r0]
    2934:	movw	r1, #0
    2938:	movt	r1, #0
    293c:	movw	r2, #0
    2940:	movt	r2, #0
    2944:	movw	r3, #1194	; 0x4aa
    2948:	movw	lr, #0
    294c:	movt	lr, #0
    2950:	str	lr, [sp]
    2954:	bl	0 <fprintf>
    2958:	movw	r1, #0
    295c:	movt	r1, #0
    2960:	str	r0, [sp, #8]
    2964:	mov	r0, r1
    2968:	movw	r1, #0
    296c:	movt	r1, #0
    2970:	movw	r2, #1194	; 0x4aa
    2974:	movw	r3, #0
    2978:	movt	r3, #0
    297c:	bl	0 <__assert_fail>
    2980:	movw	r0, #0
    2984:	str	r0, [fp, #-28]	; 0xffffffe4
    2988:	movw	r0, #4
    298c:	str	r0, [fp, #-24]	; 0xffffffe8
    2990:	movw	r0, #0
    2994:	movt	r0, #0
    2998:	str	r0, [fp, #-36]	; 0xffffffdc
    299c:	movw	r0, #0
    29a0:	movt	r0, #0
    29a4:	str	r0, [fp, #-32]	; 0xffffffe0
    29a8:	ldr	r0, [fp, #-8]
    29ac:	ldr	r1, [fp, #-8]
    29b0:	ldr	r1, [r1, #208]	; 0xd0
    29b4:	ldr	r2, [r1, #160]	; 0xa0
    29b8:	movw	r1, #0
    29bc:	movt	r1, #0
    29c0:	bl	888 <println>
    29c4:	ldr	r0, [fp, #-8]
    29c8:	ldr	r1, [r0, #220]	; 0xdc
    29cc:	add	r1, r1, #1
    29d0:	str	r1, [r0, #220]	; 0xdc
    29d4:	ldr	r0, [fp, #-8]
    29d8:	ldr	r1, [r0, #220]	; 0xdc
    29dc:	add	r1, r1, #1
    29e0:	str	r1, [r0, #220]	; 0xdc
    29e4:	ldr	r0, [fp, #-8]
    29e8:	movw	r1, #0
    29ec:	movt	r1, #0
    29f0:	bl	888 <println>
    29f4:	ldr	r0, [fp, #-8]
    29f8:	ldr	r0, [r0, #220]	; 0xdc
    29fc:	cmp	r0, #0
    2a00:	beq	2a08 <gen_global_scope_parser+0x170>
    2a04:	b	2a28 <gen_global_scope_parser+0x190>
    2a08:	movw	r0, #0
    2a0c:	movt	r0, #0
    2a10:	movw	r1, #0
    2a14:	movt	r1, #0
    2a18:	movw	r2, #1205	; 0x4b5
    2a1c:	movw	r3, #0
    2a20:	movt	r3, #0
    2a24:	bl	0 <__assert_fail>
    2a28:	ldr	r0, [fp, #-8]
    2a2c:	ldr	r1, [r0, #220]	; 0xdc
    2a30:	mvn	r2, #0
    2a34:	add	r1, r1, r2
    2a38:	str	r1, [r0, #220]	; 0xdc
    2a3c:	ldr	r0, [fp, #-8]
    2a40:	ldr	r0, [r0, #220]	; 0xdc
    2a44:	cmp	r0, #0
    2a48:	beq	2a50 <gen_global_scope_parser+0x1b8>
    2a4c:	b	2a70 <gen_global_scope_parser+0x1d8>
    2a50:	movw	r0, #0
    2a54:	movt	r0, #0
    2a58:	movw	r1, #0
    2a5c:	movt	r1, #0
    2a60:	movw	r2, #1205	; 0x4b5
    2a64:	movw	r3, #0
    2a68:	movt	r3, #0
    2a6c:	bl	0 <__assert_fail>
    2a70:	ldr	r0, [fp, #-8]
    2a74:	ldr	r1, [r0, #220]	; 0xdc
    2a78:	mvn	r2, #0
    2a7c:	add	r1, r1, r2
    2a80:	str	r1, [r0, #220]	; 0xdc
    2a84:	ldr	r0, [fp, #-8]
    2a88:	movw	r1, #0
    2a8c:	movt	r1, #0
    2a90:	bl	888 <println>
    2a94:	ldr	r0, [fp, #-8]
    2a98:	ldr	r1, [r0, #220]	; 0xdc
    2a9c:	add	r1, r1, #1
    2aa0:	str	r1, [r0, #220]	; 0xdc
    2aa4:	ldr	r0, [fp, #-12]
    2aa8:	cmp	r0, #0
    2aac:	bne	2b2c <gen_global_scope_parser+0x294>
    2ab0:	ldr	r0, [fp, #-8]
    2ab4:	movw	r1, #0
    2ab8:	movt	r1, #0
    2abc:	bl	888 <println>
    2ac0:	ldr	r0, [fp, #-8]
    2ac4:	movw	r1, #0
    2ac8:	movt	r1, #0
    2acc:	bl	888 <println>
    2ad0:	ldr	r0, [fp, #-8]
    2ad4:	ldr	r0, [r0, #220]	; 0xdc
    2ad8:	cmp	r0, #0
    2adc:	beq	2ae4 <gen_global_scope_parser+0x24c>
    2ae0:	b	2b04 <gen_global_scope_parser+0x26c>
    2ae4:	movw	r0, #0
    2ae8:	movt	r0, #0
    2aec:	movw	r1, #0
    2af0:	movt	r1, #0
    2af4:	movw	r2, #1210	; 0x4ba
    2af8:	movw	r3, #0
    2afc:	movt	r3, #0
    2b00:	bl	0 <__assert_fail>
    2b04:	ldr	r0, [fp, #-8]
    2b08:	ldr	r1, [r0, #220]	; 0xdc
    2b0c:	mvn	r2, #0
    2b10:	add	r1, r1, r2
    2b14:	str	r1, [r0, #220]	; 0xdc
    2b18:	ldr	r0, [fp, #-8]
    2b1c:	movw	r1, #0
    2b20:	movt	r1, #0
    2b24:	bl	888 <println>
    2b28:	b	2c04 <gen_global_scope_parser+0x36c>
    2b2c:	ldr	r0, [fp, #-8]
    2b30:	movw	r1, #0
    2b34:	movt	r1, #0
    2b38:	bl	888 <println>
    2b3c:	ldr	r0, [fp, #-8]
    2b40:	movw	r1, #0
    2b44:	movt	r1, #0
    2b48:	bl	888 <println>
    2b4c:	ldr	r0, [fp, #-8]
    2b50:	movw	r1, #0
    2b54:	movt	r1, #0
    2b58:	bl	888 <println>
    2b5c:	ldr	r0, [fp, #-8]
    2b60:	movw	r1, #0
    2b64:	movt	r1, #0
    2b68:	bl	888 <println>
    2b6c:	ldr	r0, [fp, #-8]
    2b70:	movw	r1, #0
    2b74:	movt	r1, #0
    2b78:	bl	888 <println>
    2b7c:	ldr	r0, [fp, #-8]
    2b80:	ldr	r1, [fp, #-12]
    2b84:	sub	r3, r1, #1
    2b88:	sub	r1, fp, #40	; 0x28
    2b8c:	movw	lr, #0
    2b90:	mov	r2, lr
    2b94:	str	lr, [sp]
    2b98:	bl	3128 <gen_trie>
    2b9c:	ldr	r0, [fp, #-8]
    2ba0:	movw	r1, #0
    2ba4:	movt	r1, #0
    2ba8:	bl	888 <println>
    2bac:	ldr	r0, [fp, #-8]
    2bb0:	ldr	r0, [r0, #220]	; 0xdc
    2bb4:	cmp	r0, #0
    2bb8:	beq	2bc0 <gen_global_scope_parser+0x328>
    2bbc:	b	2be0 <gen_global_scope_parser+0x348>
    2bc0:	movw	r0, #0
    2bc4:	movt	r0, #0
    2bc8:	movw	r1, #0
    2bcc:	movt	r1, #0
    2bd0:	movw	r2, #1219	; 0x4c3
    2bd4:	movw	r3, #0
    2bd8:	movt	r3, #0
    2bdc:	bl	0 <__assert_fail>
    2be0:	ldr	r0, [fp, #-8]
    2be4:	ldr	r1, [r0, #220]	; 0xdc
    2be8:	mvn	r2, #0
    2bec:	add	r1, r1, r2
    2bf0:	str	r1, [r0, #220]	; 0xdc
    2bf4:	ldr	r0, [fp, #-8]
    2bf8:	movw	r1, #0
    2bfc:	movt	r1, #0
    2c00:	bl	888 <println>
    2c04:	ldr	r0, [fp, #-8]
    2c08:	movw	r1, #0
    2c0c:	movt	r1, #0
    2c10:	bl	888 <println>
    2c14:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c18:	bl	38d8 <clear_dict>
    2c1c:	add	r0, sp, #12
    2c20:	bl	61d4 <clear_catalog>
    2c24:	movw	r0, #0
    2c28:	str	r0, [fp, #-4]
    2c2c:	ldr	r0, [fp, #-4]
    2c30:	mov	sp, fp
    2c34:	pop	{fp, pc}

00002c38 <gen_root_parser>:
    2c38:	push	{fp, lr}
    2c3c:	mov	fp, sp
    2c40:	sub	sp, sp, #16
    2c44:	str	r0, [sp, #8]
    2c48:	ldr	r0, [sp, #8]
    2c4c:	ldr	r0, [r0, #208]	; 0xd0
    2c50:	ldr	r0, [r0, #52]	; 0x34
    2c54:	str	r0, [sp, #4]
    2c58:	ldr	r0, [sp, #4]
    2c5c:	movw	r1, #0
    2c60:	cmp	r0, r1
    2c64:	bne	2c74 <gen_root_parser+0x3c>
    2c68:	movw	r0, #0
    2c6c:	str	r0, [fp, #-4]
    2c70:	b	2ce4 <gen_root_parser+0xac>
    2c74:	ldr	r0, [sp, #4]
    2c78:	movw	r1, #0
    2c7c:	cmp	r0, r1
    2c80:	beq	2cdc <gen_root_parser+0xa4>
    2c84:	ldr	r0, [sp, #4]
    2c88:	ldrh	r0, [r0, #8]
    2c8c:	cmp	r0, #0
    2c90:	str	r0, [sp]
    2c94:	beq	2cac <gen_root_parser+0x74>
    2c98:	b	2c9c <gen_root_parser+0x64>
    2c9c:	ldr	r0, [sp]
    2ca0:	cmp	r0, #1
    2ca4:	beq	2cc0 <gen_root_parser+0x88>
    2ca8:	b	2cd4 <gen_root_parser+0x9c>
    2cac:	ldr	r0, [sp, #8]
    2cb0:	ldr	r1, [sp, #4]
    2cb4:	bl	66fc <gen_root_table_parser>
    2cb8:	str	r0, [fp, #-4]
    2cbc:	b	2ce4 <gen_root_parser+0xac>
    2cc0:	ldr	r0, [sp, #8]
    2cc4:	ldr	r1, [sp, #4]
    2cc8:	bl	6a18 <gen_root_struct_parser>
    2ccc:	str	r0, [fp, #-4]
    2cd0:	b	2ce4 <gen_root_parser+0xac>
    2cd4:	b	2cd8 <gen_root_parser+0xa0>
    2cd8:	b	2cdc <gen_root_parser+0xa4>
    2cdc:	movw	r0, #0
    2ce0:	str	r0, [fp, #-4]
    2ce4:	ldr	r0, [fp, #-4]
    2ce8:	mov	sp, fp
    2cec:	pop	{fp, pc}

00002cf0 <symbol_name>:
    2cf0:	push	{fp, lr}
    2cf4:	mov	fp, sp
    2cf8:	sub	sp, sp, #16
    2cfc:	str	r0, [fp, #-4]
    2d00:	str	r1, [sp, #8]
    2d04:	str	r2, [sp, #4]
    2d08:	ldr	r0, [fp, #-4]
    2d0c:	ldr	r0, [r0, #4]
    2d10:	ldr	r1, [sp, #8]
    2d14:	ldr	r2, [sp, #4]
    2d18:	bl	2d24 <token_name>
    2d1c:	mov	sp, fp
    2d20:	pop	{fp, pc}

00002d24 <token_name>:
    2d24:	sub	sp, sp, #12
    2d28:	str	r0, [sp, #8]
    2d2c:	str	r1, [sp, #4]
    2d30:	str	r2, [sp]
    2d34:	ldr	r0, [sp, #8]
    2d38:	ldr	r0, [r0, #4]
    2d3c:	ldr	r1, [sp, #4]
    2d40:	str	r0, [r1]
    2d44:	ldr	r0, [sp, #8]
    2d48:	ldr	r0, [r0]
    2d4c:	ldr	r1, [sp]
    2d50:	str	r0, [r1]
    2d54:	add	sp, sp, #12
    2d58:	bx	lr

00002d5c <build_compound_dict>:
    2d5c:	push	{fp, lr}
    2d60:	mov	fp, sp
    2d64:	sub	sp, sp, #56	; 0x38
    2d68:	str	r0, [fp, #-8]
    2d6c:	str	r1, [fp, #-12]
    2d70:	movw	r0, #0
    2d74:	str	r0, [sp, #20]
    2d78:	str	r0, [sp, #16]
    2d7c:	str	r0, [sp, #8]
    2d80:	str	r0, [fp, #-24]	; 0xffffffe8
    2d84:	ldr	r0, [fp, #-8]
    2d88:	ldr	r0, [r0, #20]
    2d8c:	str	r0, [fp, #-16]
    2d90:	ldr	r0, [fp, #-16]
    2d94:	movw	r1, #0
    2d98:	cmp	r0, r1
    2d9c:	beq	2e1c <build_compound_dict+0xc0>
    2da0:	ldr	r0, [fp, #-16]
    2da4:	str	r0, [fp, #-20]	; 0xffffffec
    2da8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2dac:	ldrh	r0, [r0, #72]	; 0x48
    2db0:	and	r0, r0, #4
    2db4:	cmp	r0, #0
    2db8:	beq	2dc0 <build_compound_dict+0x64>
    2dbc:	b	2e0c <build_compound_dict+0xb0>
    2dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
    2dc4:	bl	3908 <is_union_member>
    2dc8:	str	r0, [sp, #12]
    2dcc:	ldr	r0, [sp, #12]
    2dd0:	cmp	r0, #0
    2dd4:	beq	2e00 <build_compound_dict+0xa4>
    2dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ddc:	add	r0, r0, #1
    2de0:	str	r0, [fp, #-24]	; 0xffffffe8
    2de4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2de8:	ldr	r0, [r0, #4]
    2dec:	ldr	r0, [r0, #4]
    2df0:	add	r0, r0, #6
    2df4:	ldr	r1, [sp, #16]
    2df8:	add	r0, r1, r0
    2dfc:	str	r0, [sp, #16]
    2e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e04:	add	r0, r0, #1
    2e08:	str	r0, [fp, #-24]	; 0xffffffe8
    2e0c:	ldr	r0, [fp, #-16]
    2e10:	ldr	r0, [r0]
    2e14:	str	r0, [fp, #-16]
    2e18:	b	2d90 <build_compound_dict+0x34>
    2e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e20:	ldr	r1, [fp, #-12]
    2e24:	str	r0, [r1]
    2e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e2c:	cmp	r0, #0
    2e30:	bne	2e40 <build_compound_dict+0xe4>
    2e34:	movw	r0, #0
    2e38:	str	r0, [fp, #-4]
    2e3c:	b	3018 <build_compound_dict+0x2bc>
    2e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e44:	lsl	r0, r0, #4
    2e48:	ldr	r1, [sp, #16]
    2e4c:	add	r0, r0, r1
    2e50:	bl	0 <malloc>
    2e54:	str	r0, [sp, #28]
    2e58:	ldr	r0, [sp, #28]
    2e5c:	movw	r1, #0
    2e60:	cmp	r0, r1
    2e64:	bne	2e74 <build_compound_dict+0x118>
    2e68:	movw	r0, #0
    2e6c:	str	r0, [fp, #-4]
    2e70:	b	3018 <build_compound_dict+0x2bc>
    2e74:	ldr	r0, [sp, #28]
    2e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2e7c:	lsl	r1, r1, #4
    2e80:	add	r0, r0, r1
    2e84:	str	r0, [sp, #20]
    2e88:	ldr	r0, [sp, #28]
    2e8c:	str	r0, [sp, #24]
    2e90:	ldr	r0, [fp, #-8]
    2e94:	ldr	r0, [r0, #20]
    2e98:	str	r0, [fp, #-16]
    2e9c:	ldr	r0, [fp, #-16]
    2ea0:	movw	r1, #0
    2ea4:	cmp	r0, r1
    2ea8:	beq	2ff8 <build_compound_dict+0x29c>
    2eac:	ldr	r0, [fp, #-16]
    2eb0:	str	r0, [fp, #-20]	; 0xffffffec
    2eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2eb8:	ldrh	r0, [r0, #72]	; 0x48
    2ebc:	and	r0, r0, #4
    2ec0:	cmp	r0, #0
    2ec4:	beq	2ecc <build_compound_dict+0x170>
    2ec8:	b	2fe8 <build_compound_dict+0x28c>
    2ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ed0:	ldr	r0, [r0, #4]
    2ed4:	ldr	r0, [r0]
    2ed8:	ldr	r1, [sp, #24]
    2edc:	str	r0, [r1]
    2ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ee4:	ldr	r0, [r0, #4]
    2ee8:	ldr	r0, [r0, #4]
    2eec:	ldr	r1, [sp, #24]
    2ef0:	str	r0, [r1, #4]
    2ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ef8:	ldr	r1, [sp, #24]
    2efc:	str	r0, [r1, #8]
    2f00:	ldr	r0, [sp, #24]
    2f04:	movw	r1, #0
    2f08:	str	r1, [r0, #12]
    2f0c:	ldr	r0, [sp, #24]
    2f10:	add	r0, r0, #16
    2f14:	str	r0, [sp, #24]
    2f18:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f1c:	bl	3908 <is_union_member>
    2f20:	str	r0, [sp, #12]
    2f24:	ldr	r0, [sp, #12]
    2f28:	cmp	r0, #0
    2f2c:	beq	2fe4 <build_compound_dict+0x288>
    2f30:	ldr	r0, [sp, #8]
    2f34:	add	r1, r0, #1
    2f38:	str	r1, [sp, #8]
    2f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f40:	str	r0, [r1, #112]	; 0x70
    2f44:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f48:	ldr	r0, [r0, #4]
    2f4c:	ldr	r0, [r0, #4]
    2f50:	add	r0, r0, #5
    2f54:	ldr	r1, [sp, #24]
    2f58:	str	r0, [r1, #4]
    2f5c:	ldr	r0, [sp, #20]
    2f60:	ldr	r1, [sp, #24]
    2f64:	str	r0, [r1]
    2f68:	ldr	r0, [sp, #20]
    2f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f70:	ldr	r1, [r1, #4]
    2f74:	ldr	r1, [r1]
    2f78:	ldr	r2, [fp, #-20]	; 0xffffffec
    2f7c:	ldr	r2, [r2, #4]
    2f80:	ldr	r2, [r2, #4]
    2f84:	bl	0 <memcpy>
    2f88:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f8c:	ldr	r0, [r0, #4]
    2f90:	ldr	r0, [r0, #4]
    2f94:	ldr	r1, [sp, #20]
    2f98:	add	r0, r1, r0
    2f9c:	str	r0, [sp, #20]
    2fa0:	ldr	r0, [sp, #20]
    2fa4:	movw	r1, #0
    2fa8:	movt	r1, #0
    2fac:	bl	0 <strcpy>
    2fb0:	ldr	r1, [sp, #20]
    2fb4:	add	r1, r1, #6
    2fb8:	str	r1, [sp, #20]
    2fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fc0:	ldr	r2, [sp, #24]
    2fc4:	str	r1, [r2, #8]
    2fc8:	ldr	r1, [sp, #24]
    2fcc:	movw	r2, #1
    2fd0:	str	r2, [r1, #12]
    2fd4:	ldr	r1, [sp, #24]
    2fd8:	add	r1, r1, #16
    2fdc:	str	r1, [sp, #24]
    2fe0:	str	r0, [sp, #4]
    2fe4:	b	2fe8 <build_compound_dict+0x28c>
    2fe8:	ldr	r0, [fp, #-16]
    2fec:	ldr	r0, [r0]
    2ff0:	str	r0, [fp, #-16]
    2ff4:	b	2e9c <build_compound_dict+0x140>
    2ff8:	ldr	r0, [sp, #28]
    2ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3000:	movw	r2, #16
    3004:	movw	r3, #0
    3008:	movt	r3, #0
    300c:	bl	0 <qsort>
    3010:	ldr	r0, [sp, #28]
    3014:	str	r0, [fp, #-4]
    3018:	ldr	r0, [fp, #-4]
    301c:	mov	sp, fp
    3020:	pop	{fp, pc}

00003024 <gen_enum_match>:
    3024:	push	{fp, lr}
    3028:	mov	fp, sp
    302c:	sub	sp, sp, #24
    3030:	ldr	ip, [fp, #8]
    3034:	str	r0, [fp, #-4]
    3038:	str	r1, [fp, #-8]
    303c:	str	r2, [sp, #12]
    3040:	str	r3, [sp, #8]
    3044:	ldr	r0, [fp, #-4]
    3048:	ldr	r2, [fp, #8]
    304c:	movw	r1, #0
    3050:	movt	r1, #0
    3054:	str	ip, [sp, #4]
    3058:	bl	888 <println>
    305c:	ldr	r0, [fp, #-4]
    3060:	movw	r1, #0
    3064:	movt	r1, #0
    3068:	bl	888 <println>
    306c:	ldr	r0, [fp, #-4]
    3070:	ldr	r1, [r0, #220]	; 0xdc
    3074:	add	r1, r1, #1
    3078:	str	r1, [r0, #220]	; 0xdc
    307c:	ldr	r0, [fp, #-4]
    3080:	ldr	r1, [fp, #-8]
    3084:	ldr	r2, [sp, #12]
    3088:	ldr	r3, [sp, #8]
    308c:	bl	3a1c <gen_enum_match_handler>
    3090:	ldr	r0, [fp, #-4]
    3094:	ldr	r0, [r0, #220]	; 0xdc
    3098:	cmp	r0, #0
    309c:	beq	30a4 <gen_enum_match+0x80>
    30a0:	b	30c4 <gen_enum_match+0xa0>
    30a4:	movw	r0, #0
    30a8:	movt	r0, #0
    30ac:	movw	r1, #0
    30b0:	movt	r1, #0
    30b4:	movw	r2, #719	; 0x2cf
    30b8:	movw	r3, #0
    30bc:	movt	r3, #0
    30c0:	bl	0 <__assert_fail>
    30c4:	ldr	r0, [fp, #-4]
    30c8:	ldr	r1, [r0, #220]	; 0xdc
    30cc:	mvn	r2, #0
    30d0:	add	r1, r1, r2
    30d4:	str	r1, [r0, #220]	; 0xdc
    30d8:	ldr	r0, [fp, #-4]
    30dc:	movw	r1, #0
    30e0:	movt	r1, #0
    30e4:	bl	888 <println>
    30e8:	ldr	r0, [fp, #-4]
    30ec:	ldr	r1, [r0, #220]	; 0xdc
    30f0:	add	r1, r1, #1
    30f4:	str	r1, [r0, #220]	; 0xdc
    30f8:	mov	sp, fp
    30fc:	pop	{fp, pc}

00003100 <gen_enum_unmatched>:
    3100:	push	{fp, lr}
    3104:	mov	fp, sp
    3108:	sub	sp, sp, #8
    310c:	str	r0, [sp, #4]
    3110:	ldr	r0, [sp, #4]
    3114:	movw	r1, #0
    3118:	movt	r1, #0
    311c:	bl	888 <println>
    3120:	mov	sp, fp
    3124:	pop	{fp, pc}

00003128 <gen_trie>:
    3128:	push	{r4, sl, fp, lr}
    312c:	add	fp, sp, #8
    3130:	sub	sp, sp, #112	; 0x70
    3134:	ldr	ip, [fp, #8]
    3138:	str	r0, [fp, #-12]
    313c:	str	r1, [fp, #-16]
    3140:	str	r2, [fp, #-20]	; 0xffffffec
    3144:	str	r3, [fp, #-24]	; 0xffffffe8
    3148:	mov	r0, #0
    314c:	str	r0, [fp, #-36]	; 0xffffffdc
    3150:	str	r0, [fp, #-40]	; 0xffffffd8
    3154:	str	r0, [fp, #-44]	; 0xffffffd4
    3158:	str	r0, [fp, #-48]	; 0xffffffd0
    315c:	movw	r1, #0
    3160:	movt	r1, #0
    3164:	str	r1, [fp, #-52]	; 0xffffffcc
    3168:	str	r0, [fp, #-56]	; 0xffffffc8
    316c:	str	r0, [sp, #60]	; 0x3c
    3170:	str	r0, [sp, #56]	; 0x38
    3174:	str	r0, [sp, #48]	; 0x30
    3178:	ldr	r0, [fp, #-16]
    317c:	ldr	r0, [r0]
    3180:	ldr	r1, [fp, #-20]	; 0xffffffec
    3184:	add	r0, r0, r1, lsl #4
    3188:	ldr	r1, [fp, #8]
    318c:	str	ip, [sp, #44]	; 0x2c
    3190:	bl	3b44 <get_dict_suffix_len>
    3194:	cmp	r0, #0
    3198:	bne	3208 <gen_trie+0xe0>
    319c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    31a4:	cmp	r0, r1
    31a8:	beq	31e0 <gen_trie+0xb8>
    31ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    31b4:	add	r1, r1, #1
    31b8:	cmp	r0, r1
    31bc:	bne	3208 <gen_trie+0xe0>
    31c0:	ldr	r0, [fp, #-16]
    31c4:	ldr	r0, [r0]
    31c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31cc:	add	r0, r0, r1, lsl #4
    31d0:	ldr	r1, [fp, #8]
    31d4:	bl	3b44 <get_dict_suffix_len>
    31d8:	cmp	r0, #0
    31dc:	bne	3208 <gen_trie+0xe0>
    31e0:	ldr	r0, [fp, #-12]
    31e4:	ldr	r1, [fp, #-16]
    31e8:	ldr	r2, [fp, #-20]	; 0xffffffec
    31ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    31f0:	ldr	ip, [fp, #8]
    31f4:	str	ip, [sp]
    31f8:	movw	ip, #0
    31fc:	str	ip, [sp, #4]
    3200:	bl	3b9c <gen_prefix_trie>
    3204:	b	38d0 <gen_trie+0x7a8>
    3208:	ldr	r0, [fp, #-16]
    320c:	ldr	r0, [r0]
    3210:	ldr	r1, [fp, #-20]	; 0xffffffec
    3214:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3218:	ldr	r3, [fp, #8]
    321c:	bl	4098 <split_dict_left>
    3220:	str	r0, [fp, #-28]	; 0xffffffe4
    3224:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3228:	ldr	r1, [fp, #-20]	; 0xffffffec
    322c:	cmp	r0, r1
    3230:	ble	33c0 <gen_trie+0x298>
    3234:	ldr	r0, [fp, #-16]
    3238:	ldr	r0, [r0]
    323c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3240:	add	r0, r0, r1, lsl #4
    3244:	ldr	r1, [fp, #8]
    3248:	mov	r2, sp
    324c:	sub	r3, fp, #56	; 0x38
    3250:	str	r3, [r2, #4]
    3254:	sub	r3, fp, #52	; 0x34
    3258:	str	r3, [r2]
    325c:	sub	r2, fp, #40	; 0x28
    3260:	sub	r3, fp, #48	; 0x30
    3264:	bl	41e8 <get_dict_tag>
    3268:	ldr	r1, [fp, #-12]
    326c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3270:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3274:	ldr	lr, [fp, #-56]	; 0xffffffc8
    3278:	ldr	ip, [fp, #-52]	; 0xffffffcc
    327c:	mov	r4, sp
    3280:	str	ip, [r4, #4]
    3284:	str	lr, [r4]
    3288:	movw	ip, #0
    328c:	movt	ip, #0
    3290:	str	r0, [sp, #40]	; 0x28
    3294:	mov	r0, r1
    3298:	mov	r1, ip
    329c:	bl	888 <println>
    32a0:	ldr	r0, [fp, #-12]
    32a4:	ldr	r1, [r0, #220]	; 0xdc
    32a8:	add	r1, r1, #1
    32ac:	str	r1, [r0, #220]	; 0xdc
    32b0:	ldr	r0, [fp, #-12]
    32b4:	ldr	r1, [fp, #-16]
    32b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    32bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    32c0:	sub	r3, r3, #1
    32c4:	ldr	ip, [fp, #8]
    32c8:	str	ip, [sp]
    32cc:	bl	3128 <gen_trie>
    32d0:	ldr	r0, [fp, #-12]
    32d4:	ldr	r0, [r0, #220]	; 0xdc
    32d8:	cmp	r0, #0
    32dc:	beq	32e4 <gen_trie+0x1bc>
    32e0:	b	3304 <gen_trie+0x1dc>
    32e4:	movw	r0, #0
    32e8:	movt	r0, #0
    32ec:	movw	r1, #0
    32f0:	movt	r1, #0
    32f4:	movw	r2, #973	; 0x3cd
    32f8:	movw	r3, #0
    32fc:	movt	r3, #0
    3300:	bl	0 <__assert_fail>
    3304:	ldr	r0, [fp, #-12]
    3308:	ldr	r1, [r0, #220]	; 0xdc
    330c:	mvn	r2, #0
    3310:	add	r1, r1, r2
    3314:	str	r1, [r0, #220]	; 0xdc
    3318:	ldr	r0, [fp, #-12]
    331c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3320:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3324:	movw	r1, #0
    3328:	movt	r1, #0
    332c:	bl	888 <println>
    3330:	ldr	r0, [fp, #-12]
    3334:	ldr	r1, [r0, #220]	; 0xdc
    3338:	add	r1, r1, #1
    333c:	str	r1, [r0, #220]	; 0xdc
    3340:	ldr	r0, [fp, #-12]
    3344:	ldr	r1, [fp, #-16]
    3348:	ldr	r2, [fp, #-28]	; 0xffffffe4
    334c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3350:	ldr	lr, [fp, #8]
    3354:	str	lr, [sp]
    3358:	bl	3128 <gen_trie>
    335c:	ldr	r0, [fp, #-12]
    3360:	ldr	r0, [r0, #220]	; 0xdc
    3364:	cmp	r0, #0
    3368:	beq	3370 <gen_trie+0x248>
    336c:	b	3390 <gen_trie+0x268>
    3370:	movw	r0, #0
    3374:	movt	r0, #0
    3378:	movw	r1, #0
    337c:	movt	r1, #0
    3380:	movw	r2, #975	; 0x3cf
    3384:	movw	r3, #0
    3388:	movt	r3, #0
    338c:	bl	0 <__assert_fail>
    3390:	ldr	r0, [fp, #-12]
    3394:	ldr	r1, [r0, #220]	; 0xdc
    3398:	mvn	r2, #0
    339c:	add	r1, r1, r2
    33a0:	str	r1, [r0, #220]	; 0xdc
    33a4:	ldr	r0, [fp, #-12]
    33a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33b0:	movw	r1, #0
    33b4:	movt	r1, #0
    33b8:	bl	888 <println>
    33bc:	b	38d0 <gen_trie+0x7a8>
    33c0:	ldr	r0, [fp, #-16]
    33c4:	ldr	r0, [r0]
    33c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    33cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33d0:	ldr	r3, [fp, #8]
    33d4:	bl	439c <split_dict_right>
    33d8:	str	r0, [fp, #-28]	; 0xffffffe4
    33dc:	ldr	r0, [fp, #-16]
    33e0:	ldr	r0, [r0]
    33e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    33ec:	sub	r2, r2, #1
    33f0:	ldr	r3, [fp, #8]
    33f4:	bl	44f0 <split_dict_descend>
    33f8:	str	r0, [fp, #-32]	; 0xffffffe0
    33fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3400:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3404:	cmp	r0, r1
    3408:	movw	r0, #0
    340c:	movlt	r0, #1
    3410:	and	r0, r0, #1
    3414:	str	r0, [sp, #52]	; 0x34
    3418:	ldr	r0, [sp, #52]	; 0x34
    341c:	cmp	r0, #0
    3420:	beq	36b4 <gen_trie+0x58c>
    3424:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3428:	ldr	r1, [fp, #-20]	; 0xffffffec
    342c:	cmp	r0, r1
    3430:	movw	r0, #0
    3434:	str	r0, [sp, #36]	; 0x24
    3438:	ble	3468 <gen_trie+0x340>
    343c:	ldr	r0, [fp, #-16]
    3440:	ldr	r0, [r0]
    3444:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3448:	sub	r1, r1, #1
    344c:	add	r0, r0, r1, lsl #4
    3450:	ldr	r1, [fp, #8]
    3454:	bl	455c <get_dict_tag_len>
    3458:	cmp	r0, #8
    345c:	movw	r0, #0
    3460:	moveq	r0, #1
    3464:	str	r0, [sp, #36]	; 0x24
    3468:	ldr	r0, [sp, #36]	; 0x24
    346c:	and	r0, r0, #1
    3470:	str	r0, [sp, #60]	; 0x3c
    3474:	ldr	r0, [fp, #-16]
    3478:	ldr	r0, [r0]
    347c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3480:	add	r0, r0, r1, lsl #4
    3484:	ldr	r1, [fp, #8]
    3488:	mov	r2, sp
    348c:	sub	r3, fp, #56	; 0x38
    3490:	str	r3, [r2, #4]
    3494:	sub	r3, fp, #52	; 0x34
    3498:	str	r3, [r2]
    349c:	sub	r2, fp, #40	; 0x28
    34a0:	sub	r3, fp, #48	; 0x30
    34a4:	bl	41e8 <get_dict_tag>
    34a8:	ldr	r1, [fp, #-12]
    34ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    34b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    34b4:	ldr	lr, [fp, #-56]	; 0xffffffc8
    34b8:	ldr	ip, [fp, #-52]	; 0xffffffcc
    34bc:	mov	r4, sp
    34c0:	str	ip, [r4, #4]
    34c4:	str	lr, [r4]
    34c8:	movw	ip, #0
    34cc:	movt	ip, #0
    34d0:	str	r0, [sp, #32]
    34d4:	mov	r0, r1
    34d8:	mov	r1, ip
    34dc:	bl	888 <println>
    34e0:	ldr	r0, [fp, #-12]
    34e4:	ldr	r1, [r0, #220]	; 0xdc
    34e8:	add	r1, r1, #1
    34ec:	str	r1, [r0, #220]	; 0xdc
    34f0:	ldr	r0, [sp, #60]	; 0x3c
    34f4:	cmp	r0, #0
    34f8:	beq	3584 <gen_trie+0x45c>
    34fc:	ldr	r0, [fp, #-12]
    3500:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3504:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3508:	movw	r1, #0
    350c:	movt	r1, #0
    3510:	bl	888 <println>
    3514:	ldr	r0, [fp, #-16]
    3518:	ldr	r1, [r0]
    351c:	ldr	r2, [r0, #4]
    3520:	ldr	r0, [r0, #12]
    3524:	ldr	r3, [fp, #-12]
    3528:	ldr	lr, [fp, #-32]	; 0xffffffe0
    352c:	sub	lr, lr, #1
    3530:	add	r1, r1, lr, lsl #4
    3534:	ldr	lr, [r1, #8]
    3538:	ldr	r1, [r1, #12]
    353c:	str	r0, [sp, #28]
    3540:	mov	r0, r3
    3544:	ldr	r3, [sp, #28]
    3548:	str	r1, [sp, #24]
    354c:	mov	r1, r3
    3550:	str	r2, [sp, #20]
    3554:	mov	r2, lr
    3558:	ldr	r3, [sp, #24]
    355c:	movw	lr, #8
    3560:	str	lr, [sp]
    3564:	ldr	lr, [sp, #20]
    3568:	blx	lr
    356c:	ldr	r0, [fp, #-12]
    3570:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3574:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3578:	movw	r1, #0
    357c:	movt	r1, #0
    3580:	bl	888 <println>
    3584:	ldr	r0, [fp, #-12]
    3588:	movw	r1, #0
    358c:	movt	r1, #0
    3590:	bl	888 <println>
    3594:	ldr	r0, [fp, #-12]
    3598:	movw	r1, #0
    359c:	movt	r1, #0
    35a0:	bl	888 <println>
    35a4:	ldr	r0, [fp, #-12]
    35a8:	ldr	r1, [fp, #-16]
    35ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    35b0:	ldr	lr, [fp, #-28]	; 0xffffffe4
    35b4:	sub	r3, lr, #1
    35b8:	ldr	lr, [fp, #8]
    35bc:	add	lr, lr, #8
    35c0:	str	lr, [sp]
    35c4:	bl	3128 <gen_trie>
    35c8:	ldr	r0, [sp, #60]	; 0x3c
    35cc:	cmp	r0, #0
    35d0:	beq	3644 <gen_trie+0x51c>
    35d4:	ldr	r0, [fp, #-12]
    35d8:	ldr	r0, [r0, #220]	; 0xdc
    35dc:	cmp	r0, #0
    35e0:	beq	35e8 <gen_trie+0x4c0>
    35e4:	b	3608 <gen_trie+0x4e0>
    35e8:	movw	r0, #0
    35ec:	movt	r0, #0
    35f0:	movw	r1, #0
    35f4:	movt	r1, #0
    35f8:	movw	r2, #1040	; 0x410
    35fc:	movw	r3, #0
    3600:	movt	r3, #0
    3604:	bl	0 <__assert_fail>
    3608:	ldr	r0, [fp, #-12]
    360c:	ldr	r1, [r0, #220]	; 0xdc
    3610:	mvn	r2, #0
    3614:	add	r1, r1, r2
    3618:	str	r1, [r0, #220]	; 0xdc
    361c:	ldr	r0, [fp, #-12]
    3620:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3624:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3628:	movw	r1, #0
    362c:	movt	r1, #0
    3630:	bl	888 <println>
    3634:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3638:	mvn	r1, #0
    363c:	add	r0, r0, r1
    3640:	str	r0, [fp, #-32]	; 0xffffffe0
    3644:	ldr	r0, [fp, #-12]
    3648:	ldr	r0, [r0, #220]	; 0xdc
    364c:	cmp	r0, #0
    3650:	beq	3658 <gen_trie+0x530>
    3654:	b	3678 <gen_trie+0x550>
    3658:	movw	r0, #0
    365c:	movt	r0, #0
    3660:	movw	r1, #0
    3664:	movt	r1, #0
    3668:	movw	r2, #1044	; 0x414
    366c:	movw	r3, #0
    3670:	movt	r3, #0
    3674:	bl	0 <__assert_fail>
    3678:	ldr	r0, [fp, #-12]
    367c:	ldr	r1, [r0, #220]	; 0xdc
    3680:	mvn	r2, #0
    3684:	add	r1, r1, r2
    3688:	str	r1, [r0, #220]	; 0xdc
    368c:	ldr	r0, [fp, #-12]
    3690:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3694:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3698:	movw	r1, #0
    369c:	movt	r1, #0
    36a0:	bl	888 <println>
    36a4:	ldr	r0, [fp, #-12]
    36a8:	ldr	r1, [r0, #220]	; 0xdc
    36ac:	add	r1, r1, #1
    36b0:	str	r1, [r0, #220]	; 0xdc
    36b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    36b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    36bc:	cmp	r0, r1
    36c0:	movw	r0, #0
    36c4:	str	r0, [sp, #16]
    36c8:	bge	36e4 <gen_trie+0x5bc>
    36cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    36d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    36d4:	cmp	r0, r1
    36d8:	movw	r0, #0
    36dc:	movle	r0, #1
    36e0:	str	r0, [sp, #16]
    36e4:	ldr	r0, [sp, #16]
    36e8:	and	r0, r0, #1
    36ec:	str	r0, [sp, #56]	; 0x38
    36f0:	ldr	r0, [sp, #56]	; 0x38
    36f4:	cmp	r0, #0
    36f8:	beq	3710 <gen_trie+0x5e8>
    36fc:	ldr	r0, [fp, #-16]
    3700:	ldr	r1, [r0, #24]
    3704:	add	r1, r1, #1
    3708:	str	r1, [r0, #24]
    370c:	str	r1, [sp, #48]	; 0x30
    3710:	ldr	r0, [fp, #-20]	; 0xffffffec
    3714:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3718:	cmp	r0, r1
    371c:	bge	3748 <gen_trie+0x620>
    3720:	ldr	r0, [fp, #-12]
    3724:	ldr	r1, [fp, #-16]
    3728:	ldr	r2, [fp, #-20]	; 0xffffffec
    372c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3730:	sub	r3, r3, #1
    3734:	ldr	ip, [fp, #8]
    3738:	ldr	lr, [sp, #48]	; 0x30
    373c:	str	ip, [sp]
    3740:	str	lr, [sp, #4]
    3744:	bl	3b9c <gen_prefix_trie>
    3748:	ldr	r0, [sp, #56]	; 0x38
    374c:	cmp	r0, #0
    3750:	beq	37a8 <gen_trie+0x680>
    3754:	ldr	r0, [fp, #-12]
    3758:	ldr	r2, [sp, #48]	; 0x30
    375c:	movw	r1, #0
    3760:	movt	r1, #0
    3764:	bl	888 <println>
    3768:	ldr	r0, [fp, #-12]
    376c:	ldr	r0, [r0, #220]	; 0xdc
    3770:	ldr	r1, [fp, #-12]
    3774:	str	r0, [r1, #228]	; 0xe4
    3778:	ldr	r0, [fp, #-12]
    377c:	movw	r1, #0
    3780:	str	r1, [r0, #220]	; 0xdc
    3784:	ldr	r0, [fp, #-12]
    3788:	ldr	r2, [sp, #48]	; 0x30
    378c:	movw	r1, #0
    3790:	movt	r1, #0
    3794:	bl	888 <println>
    3798:	ldr	r0, [fp, #-12]
    379c:	ldr	r0, [r0, #228]	; 0xe4
    37a0:	ldr	r1, [fp, #-12]
    37a4:	str	r0, [r1, #220]	; 0xdc
    37a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    37b0:	cmp	r0, r1
    37b4:	bgt	37d8 <gen_trie+0x6b0>
    37b8:	ldr	r0, [fp, #-12]
    37bc:	ldr	r1, [fp, #-16]
    37c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    37c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37c8:	ldr	ip, [fp, #8]
    37cc:	str	ip, [sp]
    37d0:	bl	3128 <gen_trie>
    37d4:	b	3808 <gen_trie+0x6e0>
    37d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    37dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    37e0:	cmp	r0, r1
    37e4:	blt	3804 <gen_trie+0x6dc>
    37e8:	ldr	r0, [fp, #-16]
    37ec:	ldr	r0, [r0, #8]
    37f0:	ldr	r1, [fp, #-12]
    37f4:	str	r0, [sp, #12]
    37f8:	mov	r0, r1
    37fc:	ldr	r1, [sp, #12]
    3800:	blx	r1
    3804:	b	3808 <gen_trie+0x6e0>
    3808:	ldr	r0, [sp, #56]	; 0x38
    380c:	cmp	r0, #0
    3810:	beq	3864 <gen_trie+0x73c>
    3814:	ldr	r0, [fp, #-12]
    3818:	ldr	r0, [r0, #220]	; 0xdc
    381c:	ldr	r1, [fp, #-12]
    3820:	str	r0, [r1, #228]	; 0xe4
    3824:	ldr	r0, [fp, #-12]
    3828:	movw	r1, #0
    382c:	str	r1, [r0, #220]	; 0xdc
    3830:	ldr	r0, [fp, #-12]
    3834:	ldr	r2, [sp, #48]	; 0x30
    3838:	movw	r1, #0
    383c:	movt	r1, #0
    3840:	bl	888 <println>
    3844:	ldr	r0, [fp, #-12]
    3848:	ldr	r0, [r0, #228]	; 0xe4
    384c:	ldr	r1, [fp, #-12]
    3850:	str	r0, [r1, #220]	; 0xdc
    3854:	ldr	r0, [fp, #-12]
    3858:	movw	r1, #0
    385c:	movt	r1, #0
    3860:	bl	888 <println>
    3864:	ldr	r0, [sp, #52]	; 0x34
    3868:	cmp	r0, #0
    386c:	beq	38d0 <gen_trie+0x7a8>
    3870:	ldr	r0, [fp, #-12]
    3874:	ldr	r0, [r0, #220]	; 0xdc
    3878:	cmp	r0, #0
    387c:	beq	3884 <gen_trie+0x75c>
    3880:	b	38a4 <gen_trie+0x77c>
    3884:	movw	r0, #0
    3888:	movt	r0, #0
    388c:	movw	r1, #0
    3890:	movt	r1, #0
    3894:	movw	r2, #1072	; 0x430
    3898:	movw	r3, #0
    389c:	movt	r3, #0
    38a0:	bl	0 <__assert_fail>
    38a4:	ldr	r0, [fp, #-12]
    38a8:	ldr	r1, [r0, #220]	; 0xdc
    38ac:	mvn	r2, #0
    38b0:	add	r1, r1, r2
    38b4:	str	r1, [r0, #220]	; 0xdc
    38b8:	ldr	r0, [fp, #-12]
    38bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    38c4:	movw	r1, #0
    38c8:	movt	r1, #0
    38cc:	bl	888 <println>
    38d0:	sub	sp, fp, #8
    38d4:	pop	{r4, sl, fp, pc}

000038d8 <clear_dict>:
    38d8:	push	{fp, lr}
    38dc:	mov	fp, sp
    38e0:	sub	sp, sp, #8
    38e4:	str	r0, [sp, #4]
    38e8:	ldr	r0, [sp, #4]
    38ec:	movw	r1, #0
    38f0:	cmp	r0, r1
    38f4:	beq	3900 <clear_dict+0x28>
    38f8:	ldr	r0, [sp, #4]
    38fc:	bl	0 <free>
    3900:	mov	sp, fp
    3904:	pop	{fp, pc}

00003908 <is_union_member>:
    3908:	sub	sp, sp, #8
    390c:	str	r0, [sp, #4]
    3910:	ldr	r0, [sp, #4]
    3914:	ldrh	r0, [r0, #24]
    3918:	cmp	r0, #14
    391c:	beq	3938 <is_union_member+0x30>
    3920:	ldr	r0, [sp, #4]
    3924:	ldrh	r0, [r0, #24]
    3928:	cmp	r0, #15
    392c:	movw	r0, #0
    3930:	str	r0, [sp]
    3934:	bne	3954 <is_union_member+0x4c>
    3938:	ldr	r0, [sp, #4]
    393c:	ldr	r0, [r0, #16]
    3940:	ldrh	r0, [r0, #8]
    3944:	cmp	r0, #4
    3948:	movw	r0, #0
    394c:	moveq	r0, #1
    3950:	str	r0, [sp]
    3954:	ldr	r0, [sp]
    3958:	and	r0, r0, #1
    395c:	add	sp, sp, #8
    3960:	bx	lr

00003964 <dict_cmp>:
    3964:	push	{fp, lr}
    3968:	mov	fp, sp
    396c:	sub	sp, sp, #32
    3970:	str	r0, [fp, #-4]
    3974:	str	r1, [fp, #-8]
    3978:	ldr	r0, [fp, #-4]
    397c:	str	r0, [fp, #-12]
    3980:	ldr	r0, [fp, #-8]
    3984:	str	r0, [sp, #16]
    3988:	ldr	r0, [fp, #-12]
    398c:	ldr	r0, [r0, #4]
    3990:	ldr	r1, [sp, #16]
    3994:	ldr	r1, [r1, #4]
    3998:	cmp	r0, r1
    399c:	ble	39b0 <dict_cmp+0x4c>
    39a0:	ldr	r0, [sp, #16]
    39a4:	ldr	r0, [r0, #4]
    39a8:	str	r0, [sp, #4]
    39ac:	b	39bc <dict_cmp+0x58>
    39b0:	ldr	r0, [fp, #-12]
    39b4:	ldr	r0, [r0, #4]
    39b8:	str	r0, [sp, #4]
    39bc:	ldr	r0, [sp, #4]
    39c0:	str	r0, [sp, #8]
    39c4:	ldr	r0, [fp, #-12]
    39c8:	ldr	r0, [r0]
    39cc:	ldr	r1, [sp, #16]
    39d0:	ldr	r1, [r1]
    39d4:	ldr	r2, [sp, #8]
    39d8:	bl	0 <memcmp>
    39dc:	str	r0, [sp, #12]
    39e0:	ldr	r0, [sp, #12]
    39e4:	cmp	r0, #0
    39e8:	beq	39f8 <dict_cmp+0x94>
    39ec:	ldr	r0, [sp, #12]
    39f0:	str	r0, [sp]
    39f4:	b	3a10 <dict_cmp+0xac>
    39f8:	ldr	r0, [fp, #-12]
    39fc:	ldr	r0, [r0, #4]
    3a00:	ldr	r1, [sp, #16]
    3a04:	ldr	r1, [r1, #4]
    3a08:	sub	r0, r0, r1
    3a0c:	str	r0, [sp]
    3a10:	ldr	r0, [sp]
    3a14:	mov	sp, fp
    3a18:	pop	{fp, pc}

00003a1c <gen_enum_match_handler>:
    3a1c:	push	{fp, lr}
    3a20:	mov	fp, sp
    3a24:	sub	sp, sp, #32
    3a28:	str	r0, [fp, #-4]
    3a2c:	str	r1, [fp, #-8]
    3a30:	str	r2, [fp, #-12]
    3a34:	str	r3, [sp, #16]
    3a38:	ldr	r0, [fp, #-12]
    3a3c:	str	r0, [sp, #12]
    3a40:	ldr	r0, [fp, #-8]
    3a44:	ldr	r0, [r0, #40]	; 0x28
    3a48:	sub	r1, r0, #1
    3a4c:	cmp	r1, #5
    3a50:	str	r0, [sp, #8]
    3a54:	bcc	3a70 <gen_enum_match_handler+0x54>
    3a58:	b	3a5c <gen_enum_match_handler+0x40>
    3a5c:	ldr	r0, [sp, #8]
    3a60:	sub	r1, r0, #6
    3a64:	cmp	r1, #4
    3a68:	bcc	3a90 <gen_enum_match_handler+0x74>
    3a6c:	b	3ae4 <gen_enum_match_handler+0xc8>
    3a70:	ldr	r0, [fp, #-4]
    3a74:	ldr	r1, [sp, #12]
    3a78:	ldr	r2, [r1, #48]	; 0x30
    3a7c:	ldr	r3, [r1, #52]	; 0x34
    3a80:	movw	r1, #0
    3a84:	movt	r1, #0
    3a88:	bl	888 <println>
    3a8c:	b	3b3c <gen_enum_match_handler+0x120>
    3a90:	ldr	r0, [sp, #12]
    3a94:	ldr	r0, [r0, #52]	; 0x34
    3a98:	cmn	r0, #1
    3a9c:	bgt	3ac4 <gen_enum_match_handler+0xa8>
    3aa0:	b	3aa4 <gen_enum_match_handler+0x88>
    3aa4:	ldr	r0, [fp, #-4]
    3aa8:	ldr	r1, [sp, #12]
    3aac:	ldr	r2, [r1, #48]	; 0x30
    3ab0:	ldr	r3, [r1, #52]	; 0x34
    3ab4:	movw	r1, #0
    3ab8:	movt	r1, #0
    3abc:	bl	888 <println>
    3ac0:	b	3ae0 <gen_enum_match_handler+0xc4>
    3ac4:	ldr	r0, [fp, #-4]
    3ac8:	ldr	r1, [sp, #12]
    3acc:	ldr	r2, [r1, #48]	; 0x30
    3ad0:	ldr	r3, [r1, #52]	; 0x34
    3ad4:	movw	r1, #0
    3ad8:	movt	r1, #0
    3adc:	bl	888 <println>
    3ae0:	b	3b3c <gen_enum_match_handler+0x120>
    3ae4:	movw	r0, #0
    3ae8:	movt	r0, #0
    3aec:	ldr	r0, [r0]
    3af0:	movw	r1, #0
    3af4:	movt	r1, #0
    3af8:	movw	r2, #0
    3afc:	movt	r2, #0
    3b00:	movw	r3, #710	; 0x2c6
    3b04:	movw	ip, #0
    3b08:	movt	ip, #0
    3b0c:	str	ip, [sp]
    3b10:	bl	0 <fprintf>
    3b14:	movw	r1, #0
    3b18:	movt	r1, #0
    3b1c:	str	r0, [sp, #4]
    3b20:	mov	r0, r1
    3b24:	movw	r1, #0
    3b28:	movt	r1, #0
    3b2c:	movw	r2, #710	; 0x2c6
    3b30:	movw	r3, #0
    3b34:	movt	r3, #0
    3b38:	bl	0 <__assert_fail>
    3b3c:	mov	sp, fp
    3b40:	pop	{fp, pc}

00003b44 <get_dict_suffix_len>:
    3b44:	sub	sp, sp, #16
    3b48:	str	r0, [sp, #8]
    3b4c:	str	r1, [sp, #4]
    3b50:	ldr	r0, [sp, #8]
    3b54:	ldr	r0, [r0, #4]
    3b58:	str	r0, [sp]
    3b5c:	ldr	r0, [sp, #4]
    3b60:	add	r0, r0, #8
    3b64:	ldr	r1, [sp]
    3b68:	cmp	r0, r1
    3b6c:	ble	3b7c <get_dict_suffix_len+0x38>
    3b70:	movw	r0, #0
    3b74:	str	r0, [sp, #12]
    3b78:	b	3b90 <get_dict_suffix_len+0x4c>
    3b7c:	ldr	r0, [sp]
    3b80:	ldr	r1, [sp, #4]
    3b84:	sub	r0, r0, r1
    3b88:	sub	r0, r0, #8
    3b8c:	str	r0, [sp, #12]
    3b90:	ldr	r0, [sp, #12]
    3b94:	add	sp, sp, #16
    3b98:	bx	lr

00003b9c <gen_prefix_trie>:
    3b9c:	push	{r4, r5, fp, lr}
    3ba0:	add	fp, sp, #8
    3ba4:	sub	sp, sp, #112	; 0x70
    3ba8:	ldr	ip, [fp, #12]
    3bac:	ldr	lr, [fp, #8]
    3bb0:	str	r0, [fp, #-12]
    3bb4:	str	r1, [fp, #-16]
    3bb8:	str	r2, [fp, #-20]	; 0xffffffec
    3bbc:	str	r3, [fp, #-24]	; 0xffffffe8
    3bc0:	mov	r0, #0
    3bc4:	str	r0, [fp, #-36]	; 0xffffffdc
    3bc8:	str	r0, [fp, #-40]	; 0xffffffd8
    3bcc:	str	r0, [fp, #-44]	; 0xffffffd4
    3bd0:	str	r0, [fp, #-48]	; 0xffffffd0
    3bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
    3bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3bdc:	sub	r1, r1, r0
    3be0:	add	r1, r1, #1
    3be4:	add	r1, r1, r1, lsr #31
    3be8:	add	r0, r0, r1, asr #1
    3bec:	str	r0, [fp, #-28]	; 0xffffffe4
    3bf0:	ldr	r0, [fp, #-16]
    3bf4:	ldr	r0, [r0]
    3bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3bfc:	add	r0, r0, r1, lsl #4
    3c00:	ldr	r1, [fp, #8]
    3c04:	sub	r2, fp, #40	; 0x28
    3c08:	sub	r3, fp, #48	; 0x30
    3c0c:	sub	r4, fp, #52	; 0x34
    3c10:	str	r4, [sp]
    3c14:	sub	r4, fp, #56	; 0x38
    3c18:	str	r4, [sp, #4]
    3c1c:	str	lr, [sp, #60]	; 0x3c
    3c20:	str	ip, [sp, #56]	; 0x38
    3c24:	bl	41e8 <get_dict_tag>
    3c28:	str	r0, [fp, #-32]	; 0xffffffe0
    3c2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3c30:	cmp	r0, #8
    3c34:	bne	3c78 <gen_prefix_trie+0xdc>
    3c38:	ldr	r0, [fp, #-12]
    3c3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    3c40:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3c44:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3c48:	ldr	ip, [fp, #-52]	; 0xffffffcc
    3c4c:	mov	lr, sp
    3c50:	str	ip, [lr, #4]
    3c54:	str	r1, [lr]
    3c58:	movw	r1, #0
    3c5c:	movt	r1, #0
    3c60:	bl	888 <println>
    3c64:	ldr	r0, [fp, #-12]
    3c68:	ldr	r1, [r0, #220]	; 0xdc
    3c6c:	add	r1, r1, #1
    3c70:	str	r1, [r0, #220]	; 0xdc
    3c74:	b	3cc4 <gen_prefix_trie+0x128>
    3c78:	ldr	r0, [fp, #-12]
    3c7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3c80:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3c84:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3c88:	ldr	ip, [fp, #-36]	; 0xffffffdc
    3c8c:	ldr	lr, [fp, #-56]	; 0xffffffc8
    3c90:	ldr	r4, [fp, #-52]	; 0xffffffcc
    3c94:	mov	r5, sp
    3c98:	str	r4, [r5, #12]
    3c9c:	str	lr, [r5, #8]
    3ca0:	str	ip, [r5, #4]
    3ca4:	str	r1, [r5]
    3ca8:	movw	r1, #0
    3cac:	movt	r1, #0
    3cb0:	bl	888 <println>
    3cb4:	ldr	r0, [fp, #-12]
    3cb8:	ldr	r1, [r0, #220]	; 0xdc
    3cbc:	add	r1, r1, #1
    3cc0:	str	r1, [r0, #220]	; 0xdc
    3cc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ccc:	cmp	r0, r1
    3cd0:	bne	3e74 <gen_prefix_trie+0x2d8>
    3cd4:	ldr	r0, [fp, #-16]
    3cd8:	ldr	r1, [r0]
    3cdc:	ldr	r2, [r0, #4]
    3ce0:	ldr	r0, [r0, #12]
    3ce4:	ldr	r3, [fp, #-12]
    3ce8:	ldr	ip, [fp, #-28]	; 0xffffffe4
    3cec:	add	r1, r1, ip, lsl #4
    3cf0:	ldr	ip, [r1, #8]
    3cf4:	ldr	r1, [r1, #12]
    3cf8:	ldr	lr, [fp, #-32]	; 0xffffffe0
    3cfc:	str	r0, [sp, #52]	; 0x34
    3d00:	mov	r0, r3
    3d04:	ldr	r3, [sp, #52]	; 0x34
    3d08:	str	r1, [sp, #48]	; 0x30
    3d0c:	mov	r1, r3
    3d10:	str	r2, [sp, #44]	; 0x2c
    3d14:	mov	r2, ip
    3d18:	ldr	r3, [sp, #48]	; 0x30
    3d1c:	str	lr, [sp]
    3d20:	ldr	ip, [sp, #44]	; 0x2c
    3d24:	blx	ip
    3d28:	ldr	r0, [fp, #12]
    3d2c:	cmp	r0, #0
    3d30:	ble	3d4c <gen_prefix_trie+0x1b0>
    3d34:	ldr	r0, [fp, #-12]
    3d38:	ldr	r2, [fp, #12]
    3d3c:	movw	r1, #0
    3d40:	movt	r1, #0
    3d44:	bl	888 <println>
    3d48:	b	3d68 <gen_prefix_trie+0x1cc>
    3d4c:	ldr	r0, [fp, #-16]
    3d50:	ldr	r0, [r0, #8]
    3d54:	ldr	r1, [fp, #-12]
    3d58:	str	r0, [sp, #40]	; 0x28
    3d5c:	mov	r0, r1
    3d60:	ldr	r1, [sp, #40]	; 0x28
    3d64:	blx	r1
    3d68:	ldr	r0, [fp, #-12]
    3d6c:	ldr	r0, [r0, #220]	; 0xdc
    3d70:	cmp	r0, #0
    3d74:	beq	3d7c <gen_prefix_trie+0x1e0>
    3d78:	b	3d9c <gen_prefix_trie+0x200>
    3d7c:	movw	r0, #0
    3d80:	movt	r0, #0
    3d84:	movw	r1, #0
    3d88:	movt	r1, #0
    3d8c:	movw	r2, #888	; 0x378
    3d90:	movw	r3, #0
    3d94:	movt	r3, #0
    3d98:	bl	0 <__assert_fail>
    3d9c:	ldr	r0, [fp, #-12]
    3da0:	ldr	r1, [r0, #220]	; 0xdc
    3da4:	mvn	r2, #0
    3da8:	add	r1, r1, r2
    3dac:	str	r1, [r0, #220]	; 0xdc
    3db0:	ldr	r0, [fp, #-12]
    3db4:	movw	r1, #0
    3db8:	movt	r1, #0
    3dbc:	bl	888 <println>
    3dc0:	ldr	r0, [fp, #-12]
    3dc4:	ldr	r0, [r0, #220]	; 0xdc
    3dc8:	cmp	r0, #0
    3dcc:	beq	3dd4 <gen_prefix_trie+0x238>
    3dd0:	b	3df4 <gen_prefix_trie+0x258>
    3dd4:	movw	r0, #0
    3dd8:	movt	r0, #0
    3ddc:	movw	r1, #0
    3de0:	movt	r1, #0
    3de4:	movw	r2, #889	; 0x379
    3de8:	movw	r3, #0
    3dec:	movt	r3, #0
    3df0:	bl	0 <__assert_fail>
    3df4:	ldr	r0, [fp, #-12]
    3df8:	ldr	r1, [r0, #220]	; 0xdc
    3dfc:	mvn	r2, #0
    3e00:	add	r1, r1, r2
    3e04:	str	r1, [r0, #220]	; 0xdc
    3e08:	ldr	r0, [fp, #-12]
    3e0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3e10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3e14:	movw	r1, #0
    3e18:	movt	r1, #0
    3e1c:	bl	888 <println>
    3e20:	ldr	r0, [fp, #-12]
    3e24:	ldr	r1, [r0, #220]	; 0xdc
    3e28:	add	r1, r1, #1
    3e2c:	str	r1, [r0, #220]	; 0xdc
    3e30:	ldr	r0, [fp, #12]
    3e34:	cmp	r0, #0
    3e38:	ble	3e54 <gen_prefix_trie+0x2b8>
    3e3c:	ldr	r0, [fp, #-12]
    3e40:	ldr	r2, [fp, #12]
    3e44:	movw	r1, #0
    3e48:	movt	r1, #0
    3e4c:	bl	888 <println>
    3e50:	b	3e70 <gen_prefix_trie+0x2d4>
    3e54:	ldr	r0, [fp, #-16]
    3e58:	ldr	r0, [r0, #8]
    3e5c:	ldr	r1, [fp, #-12]
    3e60:	str	r0, [sp, #36]	; 0x24
    3e64:	mov	r0, r1
    3e68:	ldr	r1, [sp, #36]	; 0x24
    3e6c:	blx	r1
    3e70:	b	4030 <gen_prefix_trie+0x494>
    3e74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3e7c:	cmp	r0, r1
    3e80:	bne	3f74 <gen_prefix_trie+0x3d8>
    3e84:	ldr	r0, [fp, #-16]
    3e88:	ldr	r1, [r0]
    3e8c:	ldr	r2, [r0, #4]
    3e90:	ldr	r0, [r0, #12]
    3e94:	ldr	r3, [fp, #-12]
    3e98:	ldr	ip, [fp, #-28]	; 0xffffffe4
    3e9c:	add	r1, r1, ip, lsl #4
    3ea0:	ldr	ip, [r1, #8]
    3ea4:	ldr	r1, [r1, #12]
    3ea8:	ldr	lr, [fp, #-32]	; 0xffffffe0
    3eac:	str	r0, [sp, #32]
    3eb0:	mov	r0, r3
    3eb4:	ldr	r3, [sp, #32]
    3eb8:	str	r1, [sp, #28]
    3ebc:	mov	r1, r3
    3ec0:	str	r2, [sp, #24]
    3ec4:	mov	r2, ip
    3ec8:	ldr	r3, [sp, #28]
    3ecc:	str	lr, [sp]
    3ed0:	ldr	ip, [sp, #24]
    3ed4:	blx	ip
    3ed8:	ldr	r0, [fp, #12]
    3edc:	cmp	r0, #0
    3ee0:	ble	3efc <gen_prefix_trie+0x360>
    3ee4:	ldr	r0, [fp, #-12]
    3ee8:	ldr	r2, [fp, #12]
    3eec:	movw	r1, #0
    3ef0:	movt	r1, #0
    3ef4:	bl	888 <println>
    3ef8:	b	3f18 <gen_prefix_trie+0x37c>
    3efc:	ldr	r0, [fp, #-16]
    3f00:	ldr	r0, [r0, #8]
    3f04:	ldr	r1, [fp, #-12]
    3f08:	str	r0, [sp, #20]
    3f0c:	mov	r0, r1
    3f10:	ldr	r1, [sp, #20]
    3f14:	blx	r1
    3f18:	ldr	r0, [fp, #-12]
    3f1c:	ldr	r0, [r0, #220]	; 0xdc
    3f20:	cmp	r0, #0
    3f24:	beq	3f2c <gen_prefix_trie+0x390>
    3f28:	b	3f4c <gen_prefix_trie+0x3b0>
    3f2c:	movw	r0, #0
    3f30:	movt	r0, #0
    3f34:	movw	r1, #0
    3f38:	movt	r1, #0
    3f3c:	movw	r2, #903	; 0x387
    3f40:	movw	r3, #0
    3f44:	movt	r3, #0
    3f48:	bl	0 <__assert_fail>
    3f4c:	ldr	r0, [fp, #-12]
    3f50:	ldr	r1, [r0, #220]	; 0xdc
    3f54:	mvn	r2, #0
    3f58:	add	r1, r1, r2
    3f5c:	str	r1, [r0, #220]	; 0xdc
    3f60:	ldr	r0, [fp, #-12]
    3f64:	movw	r1, #0
    3f68:	movt	r1, #0
    3f6c:	bl	888 <println>
    3f70:	b	3f98 <gen_prefix_trie+0x3fc>
    3f74:	ldr	r0, [fp, #-12]
    3f78:	ldr	r1, [fp, #-16]
    3f7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3f84:	ldr	ip, [fp, #8]
    3f88:	ldr	lr, [fp, #12]
    3f8c:	str	ip, [sp]
    3f90:	str	lr, [sp, #4]
    3f94:	bl	3b9c <gen_prefix_trie>
    3f98:	ldr	r0, [fp, #-12]
    3f9c:	ldr	r0, [r0, #220]	; 0xdc
    3fa0:	cmp	r0, #0
    3fa4:	beq	3fac <gen_prefix_trie+0x410>
    3fa8:	b	3fcc <gen_prefix_trie+0x430>
    3fac:	movw	r0, #0
    3fb0:	movt	r0, #0
    3fb4:	movw	r1, #0
    3fb8:	movt	r1, #0
    3fbc:	movw	r2, #907	; 0x38b
    3fc0:	movw	r3, #0
    3fc4:	movt	r3, #0
    3fc8:	bl	0 <__assert_fail>
    3fcc:	ldr	r0, [fp, #-12]
    3fd0:	ldr	r1, [r0, #220]	; 0xdc
    3fd4:	mvn	r2, #0
    3fd8:	add	r1, r1, r2
    3fdc:	str	r1, [r0, #220]	; 0xdc
    3fe0:	ldr	r0, [fp, #-12]
    3fe4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3fe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3fec:	movw	r1, #0
    3ff0:	movt	r1, #0
    3ff4:	bl	888 <println>
    3ff8:	ldr	r0, [fp, #-12]
    3ffc:	ldr	r1, [r0, #220]	; 0xdc
    4000:	add	r1, r1, #1
    4004:	str	r1, [r0, #220]	; 0xdc
    4008:	ldr	r0, [fp, #-12]
    400c:	ldr	r1, [fp, #-16]
    4010:	ldr	r2, [fp, #-20]	; 0xffffffec
    4014:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4018:	sub	r3, r3, #1
    401c:	ldr	lr, [fp, #8]
    4020:	ldr	ip, [fp, #12]
    4024:	str	lr, [sp]
    4028:	str	ip, [sp, #4]
    402c:	bl	3b9c <gen_prefix_trie>
    4030:	ldr	r0, [fp, #-12]
    4034:	ldr	r0, [r0, #220]	; 0xdc
    4038:	cmp	r0, #0
    403c:	beq	4044 <gen_prefix_trie+0x4a8>
    4040:	b	4064 <gen_prefix_trie+0x4c8>
    4044:	movw	r0, #0
    4048:	movt	r0, #0
    404c:	movw	r1, #0
    4050:	movt	r1, #0
    4054:	movw	r2, #910	; 0x38e
    4058:	movw	r3, #0
    405c:	movt	r3, #0
    4060:	bl	0 <__assert_fail>
    4064:	ldr	r0, [fp, #-12]
    4068:	ldr	r1, [r0, #220]	; 0xdc
    406c:	mvn	r2, #0
    4070:	add	r1, r1, r2
    4074:	str	r1, [r0, #220]	; 0xdc
    4078:	ldr	r0, [fp, #-12]
    407c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    4080:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4084:	movw	r1, #0
    4088:	movt	r1, #0
    408c:	bl	888 <println>
    4090:	sub	sp, fp, #8
    4094:	pop	{r4, r5, fp, pc}

00004098 <split_dict_left>:
    4098:	push	{fp, lr}
    409c:	mov	fp, sp
    40a0:	sub	sp, sp, #80	; 0x50
    40a4:	str	r0, [fp, #-8]
    40a8:	str	r1, [fp, #-12]
    40ac:	str	r2, [fp, #-16]
    40b0:	str	r3, [fp, #-20]	; 0xffffffec
    40b4:	ldr	r0, [fp, #-12]
    40b8:	ldr	r1, [fp, #-16]
    40bc:	sub	r1, r1, r0
    40c0:	add	r1, r1, r1, lsr #31
    40c4:	add	r0, r0, r1, asr #1
    40c8:	str	r0, [fp, #-24]	; 0xffffffe8
    40cc:	mov	r0, #0
    40d0:	str	r0, [fp, #-28]	; 0xffffffe4
    40d4:	str	r0, [fp, #-32]	; 0xffffffe0
    40d8:	str	r0, [sp, #44]	; 0x2c
    40dc:	str	r0, [sp, #40]	; 0x28
    40e0:	str	r0, [sp, #36]	; 0x24
    40e4:	str	r0, [sp, #32]
    40e8:	str	r0, [sp, #28]
    40ec:	str	r0, [sp, #24]
    40f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    40f4:	ldr	r1, [fp, #-12]
    40f8:	cmp	r0, r1
    40fc:	ble	41d4 <split_dict_left+0x13c>
    4100:	ldr	r0, [fp, #-8]
    4104:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4108:	add	r0, r0, r1, lsl #4
    410c:	sub	r0, r0, #16
    4110:	ldr	r1, [fp, #-20]	; 0xffffffec
    4114:	mov	r2, sp
    4118:	mov	r3, #0
    411c:	str	r3, [r2, #4]
    4120:	str	r3, [r2]
    4124:	sub	r2, fp, #32
    4128:	add	ip, sp, #32
    412c:	str	r3, [sp, #20]
    4130:	mov	r3, ip
    4134:	bl	41e8 <get_dict_tag>
    4138:	ldr	r1, [fp, #-8]
    413c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4140:	add	r1, r1, r2, lsl #4
    4144:	ldr	r2, [fp, #-20]	; 0xffffffec
    4148:	mov	r3, sp
    414c:	ldr	ip, [sp, #20]
    4150:	str	ip, [r3, #4]
    4154:	str	ip, [r3]
    4158:	add	r3, sp, #40	; 0x28
    415c:	add	lr, sp, #24
    4160:	str	r0, [sp, #16]
    4164:	mov	r0, r1
    4168:	mov	r1, r2
    416c:	mov	r2, r3
    4170:	mov	r3, lr
    4174:	bl	41e8 <get_dict_tag>
    4178:	ldr	r1, [fp, #-32]	; 0xffffffe0
    417c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4180:	ldr	r3, [sp, #40]	; 0x28
    4184:	ldr	ip, [sp, #44]	; 0x2c
    4188:	eor	r1, r1, r3
    418c:	eor	r2, r2, ip
    4190:	ldr	r3, [sp, #32]
    4194:	ldr	ip, [sp, #36]	; 0x24
    4198:	and	r2, r2, ip
    419c:	and	r1, r1, r3
    41a0:	orr	r1, r1, r2
    41a4:	cmp	r1, #0
    41a8:	str	r0, [sp, #12]
    41ac:	beq	41c0 <split_dict_left+0x128>
    41b0:	b	41b4 <split_dict_left+0x11c>
    41b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    41b8:	str	r0, [fp, #-4]
    41bc:	b	41dc <split_dict_left+0x144>
    41c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    41c4:	mvn	r1, #0
    41c8:	add	r0, r0, r1
    41cc:	str	r0, [fp, #-24]	; 0xffffffe8
    41d0:	b	40f0 <split_dict_left+0x58>
    41d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    41d8:	str	r0, [fp, #-4]
    41dc:	ldr	r0, [fp, #-4]
    41e0:	mov	sp, fp
    41e4:	pop	{fp, pc}

000041e8 <get_dict_tag>:
    41e8:	push	{fp, lr}
    41ec:	mov	fp, sp
    41f0:	sub	sp, sp, #48	; 0x30
    41f4:	ldr	ip, [fp, #12]
    41f8:	ldr	lr, [fp, #8]
    41fc:	str	r0, [fp, #-4]
    4200:	str	r1, [fp, #-8]
    4204:	str	r2, [fp, #-12]
    4208:	str	r3, [fp, #-16]
    420c:	mov	r0, #0
    4210:	str	r0, [sp, #24]
    4214:	str	r0, [sp, #20]
    4218:	str	r0, [sp, #12]
    421c:	str	r0, [sp, #8]
    4220:	ldr	r0, [fp, #-8]
    4224:	ldr	r1, [fp, #-4]
    4228:	ldr	r1, [r1, #4]
    422c:	cmp	r0, r1
    4230:	str	lr, [sp, #4]
    4234:	str	ip, [sp]
    4238:	ble	4240 <get_dict_tag+0x58>
    423c:	b	4358 <get_dict_tag+0x170>
    4240:	ldr	r0, [fp, #-4]
    4244:	ldr	r0, [r0]
    4248:	ldr	r1, [fp, #-8]
    424c:	add	r0, r0, r1
    4250:	str	r0, [sp, #20]
    4254:	ldr	r0, [fp, #-4]
    4258:	ldr	r0, [r0, #4]
    425c:	ldr	r1, [fp, #-8]
    4260:	sub	r0, r0, r1
    4264:	str	r0, [sp, #24]
    4268:	ldr	r0, [sp, #24]
    426c:	cmp	r0, #8
    4270:	ble	427c <get_dict_tag+0x94>
    4274:	movw	r0, #8
    4278:	str	r0, [sp, #24]
    427c:	ldr	r0, [sp, #24]
    4280:	str	r0, [fp, #-20]	; 0xffffffec
    4284:	ldr	r0, [fp, #-20]	; 0xffffffec
    4288:	mvn	r1, #0
    428c:	add	r1, r0, r1
    4290:	str	r1, [fp, #-20]	; 0xffffffec
    4294:	cmp	r0, #0
    4298:	beq	42f0 <get_dict_tag+0x108>
    429c:	ldr	r0, [sp, #20]
    42a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    42a4:	ldrb	r0, [r0, r1]
    42a8:	mov	r2, #56	; 0x38
    42ac:	sub	r2, r2, r1, lsl #3
    42b0:	lsl	r3, r0, r2
    42b4:	mov	ip, #24
    42b8:	sub	r1, ip, r1, lsl #3
    42bc:	cmp	r1, #0
    42c0:	movwge	r3, #0
    42c4:	rsb	r2, r2, #32
    42c8:	lsr	r2, r0, r2
    42cc:	cmp	r1, #0
    42d0:	lslge	r2, r0, r1
    42d4:	ldr	r0, [sp, #8]
    42d8:	ldr	r1, [sp, #12]
    42dc:	orr	r1, r1, r2
    42e0:	orr	r0, r0, r3
    42e4:	str	r0, [sp, #8]
    42e8:	str	r1, [sp, #12]
    42ec:	b	4284 <get_dict_tag+0x9c>
    42f0:	ldr	r0, [sp, #8]
    42f4:	ldr	r1, [sp, #12]
    42f8:	ldr	r2, [fp, #-12]
    42fc:	str	r1, [r2, #4]
    4300:	str	r0, [r2]
    4304:	ldr	r0, [sp, #24]
    4308:	rsb	r0, r0, #8
    430c:	lsl	r1, r0, #3
    4310:	mvn	r2, #31
    4314:	add	r2, r2, r0, lsl #3
    4318:	mov	r3, #32
    431c:	sub	r0, r3, r0, lsl #3
    4320:	mov	r3, #1
    4324:	lsr	r0, r3, r0
    4328:	cmp	r2, #0
    432c:	lslge	r0, r3, r2
    4330:	lsl	r1, r3, r1
    4334:	cmp	r2, #0
    4338:	movwge	r1, #0
    433c:	subs	r1, r1, #1
    4340:	sbc	r0, r0, #0
    4344:	mvn	r0, r0
    4348:	mvn	r1, r1
    434c:	ldr	r2, [fp, #-16]
    4350:	str	r1, [r2]
    4354:	str	r0, [r2, #4]
    4358:	ldr	r0, [fp, #8]
    435c:	movw	r1, #0
    4360:	cmp	r0, r1
    4364:	beq	4374 <get_dict_tag+0x18c>
    4368:	ldr	r0, [sp, #20]
    436c:	ldr	r1, [fp, #8]
    4370:	str	r0, [r1]
    4374:	ldr	r0, [fp, #12]
    4378:	movw	r1, #0
    437c:	cmp	r0, r1
    4380:	beq	4390 <get_dict_tag+0x1a8>
    4384:	ldr	r0, [sp, #24]
    4388:	ldr	r1, [fp, #12]
    438c:	str	r0, [r1]
    4390:	ldr	r0, [sp, #24]
    4394:	mov	sp, fp
    4398:	pop	{fp, pc}

0000439c <split_dict_right>:
    439c:	push	{fp, lr}
    43a0:	mov	fp, sp
    43a4:	sub	sp, sp, #80	; 0x50
    43a8:	str	r0, [fp, #-8]
    43ac:	str	r1, [fp, #-12]
    43b0:	str	r2, [fp, #-16]
    43b4:	str	r3, [fp, #-20]	; 0xffffffec
    43b8:	ldr	r0, [fp, #-12]
    43bc:	ldr	r1, [fp, #-16]
    43c0:	sub	r1, r1, r0
    43c4:	add	r1, r1, r1, lsr #31
    43c8:	add	r0, r0, r1, asr #1
    43cc:	str	r0, [fp, #-24]	; 0xffffffe8
    43d0:	mov	r0, #0
    43d4:	str	r0, [fp, #-28]	; 0xffffffe4
    43d8:	str	r0, [fp, #-32]	; 0xffffffe0
    43dc:	str	r0, [sp, #44]	; 0x2c
    43e0:	str	r0, [sp, #40]	; 0x28
    43e4:	str	r0, [sp, #36]	; 0x24
    43e8:	str	r0, [sp, #32]
    43ec:	str	r0, [sp, #28]
    43f0:	str	r0, [sp, #24]
    43f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    43f8:	ldr	r1, [fp, #-16]
    43fc:	cmp	r0, r1
    4400:	bge	44d8 <split_dict_right+0x13c>
    4404:	ldr	r0, [fp, #-8]
    4408:	ldr	r1, [fp, #-24]	; 0xffffffe8
    440c:	add	r0, r0, r1, lsl #4
    4410:	ldr	r1, [fp, #-20]	; 0xffffffec
    4414:	mov	r2, sp
    4418:	mov	r3, #0
    441c:	str	r3, [r2, #4]
    4420:	str	r3, [r2]
    4424:	sub	r2, fp, #32
    4428:	add	ip, sp, #32
    442c:	str	r3, [sp, #20]
    4430:	mov	r3, ip
    4434:	bl	41e8 <get_dict_tag>
    4438:	ldr	r1, [fp, #-8]
    443c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4440:	add	r1, r1, r2, lsl #4
    4444:	add	r1, r1, #16
    4448:	ldr	r2, [fp, #-20]	; 0xffffffec
    444c:	mov	r3, sp
    4450:	ldr	ip, [sp, #20]
    4454:	str	ip, [r3, #4]
    4458:	str	ip, [r3]
    445c:	add	r3, sp, #40	; 0x28
    4460:	add	lr, sp, #24
    4464:	str	r0, [sp, #16]
    4468:	mov	r0, r1
    446c:	mov	r1, r2
    4470:	mov	r2, r3
    4474:	mov	r3, lr
    4478:	bl	41e8 <get_dict_tag>
    447c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    4480:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4484:	ldr	r3, [sp, #40]	; 0x28
    4488:	ldr	ip, [sp, #44]	; 0x2c
    448c:	eor	r1, r1, r3
    4490:	eor	r2, r2, ip
    4494:	ldr	r3, [sp, #32]
    4498:	ldr	ip, [sp, #36]	; 0x24
    449c:	and	r2, r2, ip
    44a0:	and	r1, r1, r3
    44a4:	orr	r1, r1, r2
    44a8:	cmp	r1, #0
    44ac:	str	r0, [sp, #12]
    44b0:	beq	44c8 <split_dict_right+0x12c>
    44b4:	b	44b8 <split_dict_right+0x11c>
    44b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44bc:	add	r0, r0, #1
    44c0:	str	r0, [fp, #-4]
    44c4:	b	44e4 <split_dict_right+0x148>
    44c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44cc:	add	r0, r0, #1
    44d0:	str	r0, [fp, #-24]	; 0xffffffe8
    44d4:	b	43f4 <split_dict_right+0x58>
    44d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    44dc:	add	r0, r0, #1
    44e0:	str	r0, [fp, #-4]
    44e4:	ldr	r0, [fp, #-4]
    44e8:	mov	sp, fp
    44ec:	pop	{fp, pc}

000044f0 <split_dict_descend>:
    44f0:	push	{fp, lr}
    44f4:	mov	fp, sp
    44f8:	sub	sp, sp, #16
    44fc:	str	r0, [fp, #-4]
    4500:	str	r1, [sp, #8]
    4504:	str	r2, [sp, #4]
    4508:	str	r3, [sp]
    450c:	ldr	r0, [sp, #8]
    4510:	ldr	r1, [sp, #4]
    4514:	cmp	r0, r1
    4518:	bgt	4550 <split_dict_descend+0x60>
    451c:	ldr	r0, [fp, #-4]
    4520:	ldr	r1, [sp, #8]
    4524:	add	r0, r0, r1, lsl #4
    4528:	ldr	r1, [sp]
    452c:	bl	3b44 <get_dict_suffix_len>
    4530:	movw	r1, #0
    4534:	cmp	r1, r0
    4538:	bge	4540 <split_dict_descend+0x50>
    453c:	b	4550 <split_dict_descend+0x60>
    4540:	ldr	r0, [sp, #8]
    4544:	add	r0, r0, #1
    4548:	str	r0, [sp, #8]
    454c:	b	450c <split_dict_descend+0x1c>
    4550:	ldr	r0, [sp, #8]
    4554:	mov	sp, fp
    4558:	pop	{fp, pc}

0000455c <get_dict_tag_len>:
    455c:	sub	sp, sp, #16
    4560:	str	r0, [sp, #8]
    4564:	str	r1, [sp, #4]
    4568:	ldr	r0, [sp, #8]
    456c:	ldr	r0, [r0, #4]
    4570:	str	r0, [sp]
    4574:	ldr	r0, [sp, #4]
    4578:	add	r0, r0, #8
    457c:	ldr	r1, [sp]
    4580:	cmp	r0, r1
    4584:	blt	459c <get_dict_tag_len+0x40>
    4588:	ldr	r0, [sp]
    458c:	ldr	r1, [sp, #4]
    4590:	sub	r0, r0, r1
    4594:	str	r0, [sp, #12]
    4598:	b	45a4 <get_dict_tag_len+0x48>
    459c:	movw	r0, #0
    45a0:	str	r0, [sp, #12]
    45a4:	ldr	r0, [sp, #12]
    45a8:	add	sp, sp, #16
    45ac:	bx	lr

000045b0 <gen_field_match>:
    45b0:	push	{fp, lr}
    45b4:	mov	fp, sp
    45b8:	sub	sp, sp, #24
    45bc:	ldr	ip, [fp, #8]
    45c0:	str	r0, [fp, #-4]
    45c4:	str	r1, [fp, #-8]
    45c8:	str	r2, [sp, #12]
    45cc:	str	r3, [sp, #8]
    45d0:	ldr	r0, [fp, #-4]
    45d4:	ldr	r2, [fp, #8]
    45d8:	movw	r1, #0
    45dc:	movt	r1, #0
    45e0:	str	ip, [sp, #4]
    45e4:	bl	888 <println>
    45e8:	ldr	r0, [fp, #-4]
    45ec:	movw	r1, #0
    45f0:	movt	r1, #0
    45f4:	bl	888 <println>
    45f8:	ldr	r0, [fp, #-4]
    45fc:	ldr	r1, [r0, #220]	; 0xdc
    4600:	add	r1, r1, #1
    4604:	str	r1, [r0, #220]	; 0xdc
    4608:	ldr	r0, [fp, #-4]
    460c:	ldr	r1, [fp, #-8]
    4610:	ldr	r2, [sp, #12]
    4614:	ldr	r3, [sp, #8]
    4618:	bl	46b8 <gen_field_match_handler>
    461c:	ldr	r1, [fp, #-4]
    4620:	ldr	r1, [r1, #220]	; 0xdc
    4624:	cmp	r1, #0
    4628:	str	r0, [sp]
    462c:	beq	4634 <gen_field_match+0x84>
    4630:	b	4654 <gen_field_match+0xa4>
    4634:	movw	r0, #0
    4638:	movt	r0, #0
    463c:	movw	r1, #0
    4640:	movt	r1, #0
    4644:	movw	r2, #675	; 0x2a3
    4648:	movw	r3, #0
    464c:	movt	r3, #0
    4650:	bl	0 <__assert_fail>
    4654:	ldr	r0, [fp, #-4]
    4658:	ldr	r1, [r0, #220]	; 0xdc
    465c:	mvn	r2, #0
    4660:	add	r1, r1, r2
    4664:	str	r1, [r0, #220]	; 0xdc
    4668:	ldr	r0, [fp, #-4]
    466c:	movw	r1, #0
    4670:	movt	r1, #0
    4674:	bl	888 <println>
    4678:	ldr	r0, [fp, #-4]
    467c:	ldr	r1, [r0, #220]	; 0xdc
    4680:	add	r1, r1, #1
    4684:	str	r1, [r0, #220]	; 0xdc
    4688:	mov	sp, fp
    468c:	pop	{fp, pc}

00004690 <gen_field_unmatched>:
    4690:	push	{fp, lr}
    4694:	mov	fp, sp
    4698:	sub	sp, sp, #8
    469c:	str	r0, [sp, #4]
    46a0:	ldr	r0, [sp, #4]
    46a4:	movw	r1, #0
    46a8:	movt	r1, #0
    46ac:	bl	888 <println>
    46b0:	mov	sp, fp
    46b4:	pop	{fp, pc}

000046b8 <gen_field_match_handler>:
    46b8:	push	{r4, sl, fp, lr}
    46bc:	add	fp, sp, #8
    46c0:	sub	sp, sp, #632	; 0x278
    46c4:	str	r0, [fp, #-12]
    46c8:	str	r1, [fp, #-16]
    46cc:	str	r2, [fp, #-20]	; 0xffffffec
    46d0:	str	r3, [fp, #-24]	; 0xffffffe8
    46d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    46d8:	str	r0, [fp, #-28]	; 0xffffffe4
    46dc:	mov	r0, #0
    46e0:	str	r0, [sp, #180]	; 0xb4
    46e4:	str	r0, [sp, #176]	; 0xb0
    46e8:	str	r0, [sp, #172]	; 0xac
    46ec:	str	r0, [sp, #168]	; 0xa8
    46f0:	str	r0, [sp, #164]	; 0xa4
    46f4:	str	r0, [sp, #160]	; 0xa0
    46f8:	str	r0, [sp, #156]	; 0x9c
    46fc:	str	r0, [sp, #152]	; 0x98
    4700:	str	r0, [sp, #148]	; 0x94
    4704:	str	r0, [sp, #144]	; 0x90
    4708:	str	r0, [sp, #140]	; 0x8c
    470c:	str	r0, [sp, #136]	; 0x88
    4710:	str	r0, [sp, #132]	; 0x84
    4714:	str	r0, [sp, #128]	; 0x80
    4718:	movw	r1, #0
    471c:	movt	r1, #0
    4720:	str	r1, [sp, #124]	; 0x7c
    4724:	str	r1, [sp, #120]	; 0x78
    4728:	sub	r1, fp, #248	; 0xf8
    472c:	mov	r2, #220	; 0xdc
    4730:	str	r0, [sp, #116]	; 0x74
    4734:	mov	r0, r1
    4738:	ldr	r1, [sp, #116]	; 0x74
    473c:	bl	0 <memset>
    4740:	ldr	r1, [fp, #-16]
    4744:	ldr	r1, [r1, #12]
    4748:	add	r2, sp, #188	; 0xbc
    474c:	str	r0, [sp, #112]	; 0x70
    4750:	mov	r0, r1
    4754:	mov	r1, r2
    4758:	bl	0 <__flatcc_fb_copy_scope>
    475c:	ldr	r1, [fp, #-16]
    4760:	ldrh	r1, [r1, #8]
    4764:	sub	r1, r1, #1
    4768:	clz	r1, r1
    476c:	lsr	r1, r1, #5
    4770:	str	r1, [sp, #184]	; 0xb8
    4774:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4778:	ldrh	r1, [r1, #24]
    477c:	cmp	r1, #7
    4780:	str	r0, [sp, #108]	; 0x6c
    4784:	str	r1, [sp, #104]	; 0x68
    4788:	beq	47b0 <gen_field_match_handler+0xf8>
    478c:	b	4790 <gen_field_match_handler+0xd8>
    4790:	ldr	r0, [sp, #104]	; 0x68
    4794:	cmp	r0, #9
    4798:	beq	47b0 <gen_field_match_handler+0xf8>
    479c:	b	47a0 <gen_field_match_handler+0xe8>
    47a0:	ldr	r0, [sp, #104]	; 0x68
    47a4:	cmp	r0, #15
    47a8:	bne	47b8 <gen_field_match_handler+0x100>
    47ac:	b	47b0 <gen_field_match_handler+0xf8>
    47b0:	movw	r0, #1
    47b4:	str	r0, [sp, #172]	; 0xac
    47b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    47bc:	ldrh	r0, [r0, #24]
    47c0:	sub	r0, r0, #7
    47c4:	cmp	r0, #8
    47c8:	str	r0, [sp, #100]	; 0x64
    47cc:	bhi	4940 <gen_field_match_handler+0x288>
    47d0:	add	r0, pc, #8
    47d4:	ldr	r1, [sp, #100]	; 0x64
    47d8:	ldr	r0, [r0, r1, lsl #2]
    47dc:	mov	pc, r0
    47e0:	.word	0x000048ec
    47e4:	.word	0x0000492c
    47e8:	.word	0x000048e0
    47ec:	.word	0x000048e0
    47f0:	.word	0x00004940
    47f4:	.word	0x00004940
    47f8:	.word	0x00004940
    47fc:	.word	0x00004804
    4800:	.word	0x00004804
    4804:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4808:	ldr	r0, [r0, #16]
    480c:	sub	r1, fp, #248	; 0xf8
    4810:	bl	a0c <fb_compound_name>
    4814:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4818:	ldr	r0, [r0, #16]
    481c:	ldrh	r0, [r0, #8]
    4820:	cmp	r0, #3
    4824:	movw	r0, #0
    4828:	moveq	r0, #1
    482c:	and	r0, r0, #1
    4830:	str	r0, [sp, #176]	; 0xb0
    4834:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4838:	ldr	r0, [r0, #16]
    483c:	ldrh	r0, [r0, #8]
    4840:	cmp	r0, #1
    4844:	movw	r0, #0
    4848:	moveq	r0, #1
    484c:	and	r0, r0, #1
    4850:	str	r0, [sp, #156]	; 0x9c
    4854:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4858:	ldr	r0, [r0, #16]
    485c:	ldrh	r0, [r0, #8]
    4860:	cmp	r0, #0
    4864:	movw	r0, #0
    4868:	moveq	r0, #1
    486c:	and	r0, r0, #1
    4870:	str	r0, [sp, #160]	; 0xa0
    4874:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4878:	ldr	r0, [r0, #16]
    487c:	ldrh	r0, [r0, #8]
    4880:	cmp	r0, #4
    4884:	movw	r0, #0
    4888:	str	r0, [sp, #96]	; 0x60
    488c:	bne	48ac <gen_field_match_handler+0x1f4>
    4890:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4894:	cmp	r0, #0
    4898:	movw	r0, #0
    489c:	movne	r0, #1
    48a0:	mvn	r1, #0
    48a4:	eor	r0, r0, r1
    48a8:	str	r0, [sp, #96]	; 0x60
    48ac:	ldr	r0, [sp, #96]	; 0x60
    48b0:	and	r0, r0, #1
    48b4:	str	r0, [sp, #152]	; 0x98
    48b8:	ldr	r0, [sp, #176]	; 0xb0
    48bc:	cmp	r0, #0
    48c0:	beq	48dc <gen_field_match_handler+0x224>
    48c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    48c8:	ldr	r0, [r0, #16]
    48cc:	ldr	r0, [r0, #40]	; 0x28
    48d0:	str	r0, [sp, #128]	; 0x80
    48d4:	movw	r0, #1
    48d8:	str	r0, [sp, #164]	; 0xa4
    48dc:	b	4940 <gen_field_match_handler+0x288>
    48e0:	movw	r0, #1
    48e4:	str	r0, [sp, #180]	; 0xb4
    48e8:	b	4940 <gen_field_match_handler+0x288>
    48ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    48f0:	ldr	r0, [r0, #104]	; 0x68
    48f4:	movw	r1, #0
    48f8:	cmp	r0, r1
    48fc:	movw	r0, #0
    4900:	movne	r0, #1
    4904:	and	r0, r0, #1
    4908:	str	r0, [sp, #132]	; 0x84
    490c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4910:	ldrh	r0, [r0, #72]	; 0x48
    4914:	and	r0, r0, #1024	; 0x400
    4918:	str	r0, [sp, #140]	; 0x8c
    491c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4920:	ldrh	r0, [r0, #72]	; 0x48
    4924:	and	r0, r0, #2048	; 0x800
    4928:	str	r0, [sp, #136]	; 0x88
    492c:	movw	r0, #1
    4930:	str	r0, [sp, #164]	; 0xa4
    4934:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4938:	ldr	r0, [r0, #16]
    493c:	str	r0, [sp, #128]	; 0x80
    4940:	ldr	r0, [sp, #140]	; 0x8c
    4944:	cmp	r0, #0
    4948:	bne	4958 <gen_field_match_handler+0x2a0>
    494c:	ldr	r0, [sp, #136]	; 0x88
    4950:	cmp	r0, #0
    4954:	beq	49d8 <gen_field_match_handler+0x320>
    4958:	ldr	r0, [sp, #128]	; 0x80
    495c:	cmp	r0, #4
    4960:	bne	4970 <gen_field_match_handler+0x2b8>
    4964:	ldr	r0, [sp, #172]	; 0xac
    4968:	cmp	r0, #0
    496c:	bne	49c8 <gen_field_match_handler+0x310>
    4970:	movw	r0, #0
    4974:	movt	r0, #0
    4978:	ldr	r0, [r0]
    497c:	movw	r1, #0
    4980:	movt	r1, #0
    4984:	movw	r2, #0
    4988:	movt	r2, #0
    498c:	movw	r3, #466	; 0x1d2
    4990:	movw	ip, #0
    4994:	movt	ip, #0
    4998:	str	ip, [sp]
    499c:	bl	0 <fprintf>
    49a0:	movw	r1, #0
    49a4:	movt	r1, #0
    49a8:	str	r0, [sp, #92]	; 0x5c
    49ac:	mov	r0, r1
    49b0:	movw	r1, #0
    49b4:	movt	r1, #0
    49b8:	movw	r2, #466	; 0x1d2
    49bc:	movw	r3, #0
    49c0:	movt	r3, #0
    49c4:	bl	0 <__assert_fail>
    49c8:	movw	r0, #0
    49cc:	str	r0, [sp, #132]	; 0x84
    49d0:	str	r0, [sp, #172]	; 0xac
    49d4:	str	r0, [sp, #164]	; 0xa4
    49d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    49dc:	cmp	r0, #0
    49e0:	beq	49ec <gen_field_match_handler+0x334>
    49e4:	movw	r0, #0
    49e8:	str	r0, [sp, #164]	; 0xa4
    49ec:	ldr	r0, [sp, #172]	; 0xac
    49f0:	cmp	r0, #0
    49f4:	beq	4a14 <gen_field_match_handler+0x35c>
    49f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    49fc:	cmp	r0, #0
    4a00:	beq	4a14 <gen_field_match_handler+0x35c>
    4a04:	movw	r0, #1
    4a08:	str	r0, [sp, #144]	; 0x90
    4a0c:	movw	r0, #0
    4a10:	str	r0, [sp, #172]	; 0xac
    4a14:	ldr	r0, [sp, #172]	; 0xac
    4a18:	cmp	r0, #0
    4a1c:	beq	4a3c <gen_field_match_handler+0x384>
    4a20:	ldr	r0, [sp, #152]	; 0x98
    4a24:	cmp	r0, #0
    4a28:	beq	4a3c <gen_field_match_handler+0x384>
    4a2c:	movw	r0, #1
    4a30:	str	r0, [sp, #148]	; 0x94
    4a34:	movw	r0, #0
    4a38:	str	r0, [sp, #172]	; 0xac
    4a3c:	ldr	r0, [sp, #132]	; 0x84
    4a40:	cmp	r0, #1
    4a44:	bne	4a68 <gen_field_match_handler+0x3b0>
    4a48:	ldr	r0, [fp, #-12]
    4a4c:	movw	r1, #0
    4a50:	movt	r1, #0
    4a54:	bl	888 <println>
    4a58:	ldr	r0, [fp, #-12]
    4a5c:	ldr	r1, [r0, #220]	; 0xdc
    4a60:	add	r1, r1, #1
    4a64:	str	r1, [r0, #220]	; 0xdc
    4a68:	b	4a6c <gen_field_match_handler+0x3b4>
    4a6c:	ldr	r0, [sp, #132]	; 0x84
    4a70:	cmp	r0, #2
    4a74:	bne	4b34 <gen_field_match_handler+0x47c>
    4a78:	ldr	r0, [fp, #-12]
    4a7c:	ldr	r0, [r0, #220]	; 0xdc
    4a80:	cmp	r0, #0
    4a84:	beq	4a8c <gen_field_match_handler+0x3d4>
    4a88:	b	4aac <gen_field_match_handler+0x3f4>
    4a8c:	movw	r0, #0
    4a90:	movt	r0, #0
    4a94:	movw	r1, #0
    4a98:	movt	r1, #0
    4a9c:	movw	r2, #490	; 0x1ea
    4aa0:	movw	r3, #0
    4aa4:	movt	r3, #0
    4aa8:	bl	0 <__assert_fail>
    4aac:	ldr	r0, [fp, #-12]
    4ab0:	ldr	r1, [r0, #220]	; 0xdc
    4ab4:	mvn	r2, #0
    4ab8:	add	r1, r1, r2
    4abc:	str	r1, [r0, #220]	; 0xdc
    4ac0:	ldr	r0, [fp, #-12]
    4ac4:	movw	r1, #0
    4ac8:	movt	r1, #0
    4acc:	bl	888 <println>
    4ad0:	ldr	r0, [fp, #-12]
    4ad4:	ldr	r1, [r0, #220]	; 0xdc
    4ad8:	add	r1, r1, #1
    4adc:	str	r1, [r0, #220]	; 0xdc
    4ae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4ae4:	ldr	r0, [r0, #104]	; 0x68
    4ae8:	sub	r1, fp, #248	; 0xf8
    4aec:	bl	a0c <fb_compound_name>
    4af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4af4:	ldr	r0, [r0, #104]	; 0x68
    4af8:	ldrh	r0, [r0, #8]
    4afc:	cmp	r0, #0
    4b00:	bne	4b10 <gen_field_match_handler+0x458>
    4b04:	movw	r0, #1
    4b08:	str	r0, [sp, #160]	; 0xa0
    4b0c:	b	4b18 <gen_field_match_handler+0x460>
    4b10:	movw	r0, #1
    4b14:	str	r0, [sp, #156]	; 0x9c
    4b18:	movw	r0, #0
    4b1c:	str	r0, [sp, #172]	; 0xac
    4b20:	str	r0, [sp, #164]	; 0xa4
    4b24:	ldr	r0, [fp, #-12]
    4b28:	movw	r1, #0
    4b2c:	movt	r1, #0
    4b30:	bl	888 <println>
    4b34:	ldr	r0, [sp, #164]	; 0xa4
    4b38:	cmp	r0, #0
    4b3c:	movw	r0, #0
    4b40:	str	r0, [sp, #88]	; 0x58
    4b44:	bne	4b78 <gen_field_match_handler+0x4c0>
    4b48:	ldr	r0, [sp, #156]	; 0x9c
    4b4c:	cmp	r0, #0
    4b50:	movw	r0, #0
    4b54:	str	r0, [sp, #88]	; 0x58
    4b58:	bne	4b78 <gen_field_match_handler+0x4c0>
    4b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    4b60:	cmp	r0, #0
    4b64:	movw	r0, #0
    4b68:	movne	r0, #1
    4b6c:	mvn	r1, #0
    4b70:	eor	r0, r0, r1
    4b74:	str	r0, [sp, #88]	; 0x58
    4b78:	ldr	r0, [sp, #88]	; 0x58
    4b7c:	and	r0, r0, #1
    4b80:	str	r0, [sp, #168]	; 0xa8
    4b84:	ldr	r0, [sp, #164]	; 0xa4
    4b88:	cmp	r0, #0
    4b8c:	beq	4bcc <gen_field_match_handler+0x514>
    4b90:	ldr	r0, [sp, #128]	; 0x80
    4b94:	bl	5794 <scalar_type_prefix>
    4b98:	str	r0, [sp, #124]	; 0x7c
    4b9c:	ldr	r0, [sp, #128]	; 0x80
    4ba0:	cmp	r0, #5
    4ba4:	bne	4bb8 <gen_field_match_handler+0x500>
    4ba8:	movw	r0, #0
    4bac:	movt	r0, #0
    4bb0:	str	r0, [sp, #84]	; 0x54
    4bb4:	b	4bc4 <gen_field_match_handler+0x50c>
    4bb8:	ldr	r0, [sp, #128]	; 0x80
    4bbc:	bl	5908 <scalar_type_name>
    4bc0:	str	r0, [sp, #84]	; 0x54
    4bc4:	ldr	r0, [sp, #84]	; 0x54
    4bc8:	str	r0, [sp, #120]	; 0x78
    4bcc:	ldr	r0, [sp, #172]	; 0xac
    4bd0:	cmp	r0, #0
    4bd4:	beq	4ce0 <gen_field_match_handler+0x628>
    4bd8:	ldr	r0, [sp, #168]	; 0xa8
    4bdc:	cmp	r0, #0
    4be0:	beq	4bf8 <gen_field_match_handler+0x540>
    4be4:	ldr	r0, [fp, #-12]
    4be8:	movw	r1, #0
    4bec:	movt	r1, #0
    4bf0:	bl	888 <println>
    4bf4:	b	4cb0 <gen_field_match_handler+0x5f8>
    4bf8:	ldr	r0, [fp, #-12]
    4bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4c00:	ldr	r2, [r1, #88]	; 0x58
    4c04:	ldr	r3, [r1, #92]	; 0x5c
    4c08:	ldrsh	r1, [r1, #74]	; 0x4a
    4c0c:	orr	ip, r2, r3
    4c10:	cmp	ip, #0
    4c14:	str	r0, [sp, #80]	; 0x50
    4c18:	str	r3, [sp, #76]	; 0x4c
    4c1c:	str	r2, [sp, #72]	; 0x48
    4c20:	str	r1, [sp, #68]	; 0x44
    4c24:	bne	4c40 <gen_field_match_handler+0x588>
    4c28:	b	4c2c <gen_field_match_handler+0x574>
    4c2c:	mov	r0, #0
    4c30:	mov	r1, #1
    4c34:	str	r1, [sp, #64]	; 0x40
    4c38:	str	r0, [sp, #60]	; 0x3c
    4c3c:	b	4c58 <gen_field_match_handler+0x5a0>
    4c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4c44:	ldr	r1, [r0, #88]	; 0x58
    4c48:	ldr	r0, [r0, #92]	; 0x5c
    4c4c:	str	r1, [sp, #64]	; 0x40
    4c50:	str	r0, [sp, #60]	; 0x3c
    4c54:	b	4c58 <gen_field_match_handler+0x5a0>
    4c58:	ldr	r0, [sp, #60]	; 0x3c
    4c5c:	ldr	r1, [sp, #64]	; 0x40
    4c60:	mvn	r2, #0
    4c64:	mov	r3, #0
    4c68:	str	r0, [sp, #56]	; 0x38
    4c6c:	mov	r0, r2
    4c70:	str	r1, [sp, #52]	; 0x34
    4c74:	mov	r1, r3
    4c78:	ldr	r2, [sp, #52]	; 0x34
    4c7c:	ldr	r3, [sp, #56]	; 0x38
    4c80:	bl	0 <__aeabi_uldivmod>
    4c84:	mov	r2, sp
    4c88:	str	r1, [r2, #12]
    4c8c:	str	r0, [r2, #8]
    4c90:	ldr	r0, [sp, #68]	; 0x44
    4c94:	str	r0, [r2]
    4c98:	movw	r1, #0
    4c9c:	movt	r1, #0
    4ca0:	ldr	r0, [sp, #80]	; 0x50
    4ca4:	ldr	r2, [sp, #72]	; 0x48
    4ca8:	ldr	r3, [sp, #76]	; 0x4c
    4cac:	bl	888 <println>
    4cb0:	ldr	r0, [fp, #-12]
    4cb4:	movw	r1, #0
    4cb8:	movt	r1, #0
    4cbc:	bl	888 <println>
    4cc0:	ldr	r0, [fp, #-12]
    4cc4:	movw	r1, #0
    4cc8:	movt	r1, #0
    4ccc:	bl	888 <println>
    4cd0:	ldr	r0, [fp, #-12]
    4cd4:	ldr	r1, [r0, #220]	; 0xdc
    4cd8:	add	r1, r1, #1
    4cdc:	str	r1, [r0, #220]	; 0xdc
    4ce0:	ldr	r0, [sp, #164]	; 0xa4
    4ce4:	cmp	r0, #0
    4ce8:	beq	4e5c <gen_field_match_handler+0x7a4>
    4cec:	ldr	r0, [fp, #-12]
    4cf0:	ldr	r2, [sp, #120]	; 0x78
    4cf4:	movw	r1, #0
    4cf8:	movt	r1, #0
    4cfc:	bl	888 <println>
    4d00:	ldr	r0, [fp, #-12]
    4d04:	movw	r1, #0
    4d08:	movt	r1, #0
    4d0c:	bl	888 <println>
    4d10:	ldr	r0, [fp, #-12]
    4d14:	ldr	r1, [r0, #220]	; 0xdc
    4d18:	add	r1, r1, #1
    4d1c:	str	r1, [r0, #220]	; 0xdc
    4d20:	ldr	r0, [fp, #-12]
    4d24:	ldr	r1, [r0, #220]	; 0xdc
    4d28:	add	r1, r1, #1
    4d2c:	str	r1, [r0, #220]	; 0xdc
    4d30:	ldr	r0, [sp, #176]	; 0xb0
    4d34:	cmp	r0, #0
    4d38:	beq	4d90 <gen_field_match_handler+0x6d8>
    4d3c:	sub	r2, fp, #248	; 0xf8
    4d40:	ldr	r0, [fp, #-12]
    4d44:	movw	r1, #0
    4d48:	movt	r1, #0
    4d4c:	bl	888 <println>
    4d50:	add	r3, sp, #188	; 0xbc
    4d54:	ldr	r0, [fp, #-12]
    4d58:	ldr	r1, [fp, #-12]
    4d5c:	ldr	r1, [r1, #208]	; 0xd0
    4d60:	ldr	r2, [r1, #160]	; 0xa0
    4d64:	movw	r1, #0
    4d68:	movt	r1, #0
    4d6c:	bl	888 <println>
    4d70:	ldr	r0, [fp, #-12]
    4d74:	ldr	r1, [fp, #-12]
    4d78:	ldr	r1, [r1, #208]	; 0xd0
    4d7c:	ldr	r2, [r1, #160]	; 0xa0
    4d80:	movw	r1, #0
    4d84:	movt	r1, #0
    4d88:	bl	888 <println>
    4d8c:	b	4dcc <gen_field_match_handler+0x714>
    4d90:	add	r3, sp, #188	; 0xbc
    4d94:	ldr	r0, [fp, #-12]
    4d98:	ldr	r1, [fp, #-12]
    4d9c:	ldr	r1, [r1, #208]	; 0xd0
    4da0:	ldr	r2, [r1, #160]	; 0xa0
    4da4:	movw	r1, #0
    4da8:	movt	r1, #0
    4dac:	bl	888 <println>
    4db0:	ldr	r0, [fp, #-12]
    4db4:	ldr	r1, [fp, #-12]
    4db8:	ldr	r1, [r1, #208]	; 0xd0
    4dbc:	ldr	r2, [r1, #160]	; 0xa0
    4dc0:	movw	r1, #0
    4dc4:	movt	r1, #0
    4dc8:	bl	888 <println>
    4dcc:	ldr	r0, [fp, #-12]
    4dd0:	ldr	r0, [r0, #220]	; 0xdc
    4dd4:	cmp	r0, #0
    4dd8:	beq	4de0 <gen_field_match_handler+0x728>
    4ddc:	b	4e00 <gen_field_match_handler+0x748>
    4de0:	movw	r0, #0
    4de4:	movt	r0, #0
    4de8:	movw	r1, #0
    4dec:	movt	r1, #0
    4df0:	movw	r2, #539	; 0x21b
    4df4:	movw	r3, #0
    4df8:	movt	r3, #0
    4dfc:	bl	0 <__assert_fail>
    4e00:	ldr	r0, [fp, #-12]
    4e04:	ldr	r1, [r0, #220]	; 0xdc
    4e08:	mvn	r2, #0
    4e0c:	add	r1, r1, r2
    4e10:	str	r1, [r0, #220]	; 0xdc
    4e14:	ldr	r0, [fp, #-12]
    4e18:	ldr	r0, [r0, #220]	; 0xdc
    4e1c:	cmp	r0, #0
    4e20:	beq	4e28 <gen_field_match_handler+0x770>
    4e24:	b	4e48 <gen_field_match_handler+0x790>
    4e28:	movw	r0, #0
    4e2c:	movt	r0, #0
    4e30:	movw	r1, #0
    4e34:	movt	r1, #0
    4e38:	movw	r2, #539	; 0x21b
    4e3c:	movw	r3, #0
    4e40:	movt	r3, #0
    4e44:	bl	0 <__assert_fail>
    4e48:	ldr	r0, [fp, #-12]
    4e4c:	ldr	r1, [r0, #220]	; 0xdc
    4e50:	mvn	r2, #0
    4e54:	add	r1, r1, r2
    4e58:	str	r1, [r0, #220]	; 0xdc
    4e5c:	ldr	r0, [sp, #172]	; 0xac
    4e60:	cmp	r0, #0
    4e64:	beq	4e84 <gen_field_match_handler+0x7cc>
    4e68:	ldr	r0, [sp, #168]	; 0xa8
    4e6c:	cmp	r0, #0
    4e70:	bne	4e84 <gen_field_match_handler+0x7cc>
    4e74:	ldr	r0, [fp, #-12]
    4e78:	movw	r1, #0
    4e7c:	movt	r1, #0
    4e80:	bl	888 <println>
    4e84:	ldr	r0, [sp, #184]	; 0xb8
    4e88:	cmp	r0, #0
    4e8c:	beq	4eb0 <gen_field_match_handler+0x7f8>
    4e90:	ldr	r0, [fp, #-12]
    4e94:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4e98:	ldr	r2, [r1, #80]	; 0x50
    4e9c:	ldr	r3, [r1, #84]	; 0x54
    4ea0:	movw	r1, #0
    4ea4:	movt	r1, #0
    4ea8:	bl	888 <println>
    4eac:	b	4f18 <gen_field_match_handler+0x860>
    4eb0:	ldr	r0, [sp, #156]	; 0x9c
    4eb4:	cmp	r0, #0
    4eb8:	beq	4f14 <gen_field_match_handler+0x85c>
    4ebc:	ldr	r0, [sp, #172]	; 0xac
    4ec0:	cmp	r0, #0
    4ec4:	bne	4f14 <gen_field_match_handler+0x85c>
    4ec8:	ldr	r0, [fp, #-12]
    4ecc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4ed0:	ldr	r2, [r1, #88]	; 0x58
    4ed4:	ldr	r3, [r1, #92]	; 0x5c
    4ed8:	ldr	ip, [r1, #96]	; 0x60
    4edc:	ldr	r1, [r1, #100]	; 0x64
    4ee0:	ldr	lr, [fp, #-28]	; 0xffffffe4
    4ee4:	ldrh	lr, [lr, #74]	; 0x4a
    4ee8:	mov	r4, sp
    4eec:	str	lr, [r4, #8]
    4ef0:	str	r3, [r4, #4]
    4ef4:	str	r2, [r4]
    4ef8:	movw	r2, #0
    4efc:	movt	r2, #0
    4f00:	str	r1, [sp, #48]	; 0x30
    4f04:	mov	r1, r2
    4f08:	mov	r2, ip
    4f0c:	ldr	r3, [sp, #48]	; 0x30
    4f10:	bl	888 <println>
    4f14:	b	4f18 <gen_field_match_handler+0x860>
    4f18:	ldr	r0, [sp, #164]	; 0xa4
    4f1c:	cmp	r0, #0
    4f20:	beq	5200 <gen_field_match_handler+0xb48>
    4f24:	ldr	r0, [fp, #-12]
    4f28:	ldr	r2, [sp, #124]	; 0x7c
    4f2c:	movw	r1, #0
    4f30:	movt	r1, #0
    4f34:	bl	888 <println>
    4f38:	ldr	r0, [fp, #-12]
    4f3c:	movw	r1, #0
    4f40:	movt	r1, #0
    4f44:	bl	888 <println>
    4f48:	ldr	r0, [fp, #-12]
    4f4c:	ldr	r1, [r0, #220]	; 0xdc
    4f50:	add	r1, r1, #1
    4f54:	str	r1, [r0, #220]	; 0xdc
    4f58:	ldr	r0, [fp, #-12]
    4f5c:	ldr	r2, [sp, #124]	; 0x7c
    4f60:	movw	r1, #0
    4f64:	movt	r1, #0
    4f68:	bl	888 <println>
    4f6c:	ldr	r0, [fp, #-12]
    4f70:	movw	r1, #0
    4f74:	movt	r1, #0
    4f78:	bl	888 <println>
    4f7c:	ldr	r0, [fp, #-12]
    4f80:	ldr	r0, [r0, #220]	; 0xdc
    4f84:	cmp	r0, #0
    4f88:	beq	4f90 <gen_field_match_handler+0x8d8>
    4f8c:	b	4fb0 <gen_field_match_handler+0x8f8>
    4f90:	movw	r0, #0
    4f94:	movt	r0, #0
    4f98:	movw	r1, #0
    4f9c:	movt	r1, #0
    4fa0:	movw	r2, #559	; 0x22f
    4fa4:	movw	r3, #0
    4fa8:	movt	r3, #0
    4fac:	bl	0 <__assert_fail>
    4fb0:	ldr	r0, [fp, #-12]
    4fb4:	ldr	r1, [r0, #220]	; 0xdc
    4fb8:	mvn	r2, #0
    4fbc:	add	r1, r1, r2
    4fc0:	str	r1, [r0, #220]	; 0xdc
    4fc4:	ldr	r0, [fp, #-12]
    4fc8:	movw	r1, #0
    4fcc:	movt	r1, #0
    4fd0:	bl	888 <println>
    4fd4:	ldr	r0, [sp, #184]	; 0xb8
    4fd8:	cmp	r0, #0
    4fdc:	bne	5174 <gen_field_match_handler+0xabc>
    4fe0:	ldr	r0, [sp, #172]	; 0xac
    4fe4:	cmp	r0, #0
    4fe8:	bne	5174 <gen_field_match_handler+0xabc>
    4fec:	ldr	r0, [sp, #140]	; 0x8c
    4ff0:	cmp	r0, #0
    4ff4:	bne	5174 <gen_field_match_handler+0xabc>
    4ff8:	ldr	r0, [sp, #136]	; 0x88
    4ffc:	cmp	r0, #0
    5000:	bne	5174 <gen_field_match_handler+0xabc>
    5004:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5008:	ldrh	r0, [r0, #56]	; 0x38
    500c:	cmp	r0, #3
    5010:	str	r0, [sp, #44]	; 0x2c
    5014:	beq	50a0 <gen_field_match_handler+0x9e8>
    5018:	b	501c <gen_field_match_handler+0x964>
    501c:	ldr	r0, [sp, #44]	; 0x2c
    5020:	cmp	r0, #4
    5024:	beq	5070 <gen_field_match_handler+0x9b8>
    5028:	b	502c <gen_field_match_handler+0x974>
    502c:	ldr	r0, [sp, #44]	; 0x2c
    5030:	sub	r1, r0, #5
    5034:	cmp	r1, #1
    5038:	bhi	50d0 <gen_field_match_handler+0xa18>
    503c:	b	5040 <gen_field_match_handler+0x988>
    5040:	ldr	r0, [fp, #-12]
    5044:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5048:	ldr	r2, [r1, #48]	; 0x30
    504c:	ldr	r3, [r1, #52]	; 0x34
    5050:	movw	r1, #0
    5054:	movt	r1, #0
    5058:	bl	888 <println>
    505c:	ldr	r0, [fp, #-12]
    5060:	ldr	r1, [r0, #220]	; 0xdc
    5064:	add	r1, r1, #1
    5068:	str	r1, [r0, #220]	; 0xdc
    506c:	b	5128 <gen_field_match_handler+0xa70>
    5070:	ldr	r0, [fp, #-12]
    5074:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5078:	ldr	r2, [r1, #48]	; 0x30
    507c:	ldr	r3, [r1, #52]	; 0x34
    5080:	movw	r1, #0
    5084:	movt	r1, #0
    5088:	bl	888 <println>
    508c:	ldr	r0, [fp, #-12]
    5090:	ldr	r1, [r0, #220]	; 0xdc
    5094:	add	r1, r1, #1
    5098:	str	r1, [r0, #220]	; 0xdc
    509c:	b	5128 <gen_field_match_handler+0xa70>
    50a0:	ldr	r0, [fp, #-12]
    50a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    50a8:	vldr	d16, [r1, #48]	; 0x30
    50ac:	movw	r1, #0
    50b0:	movt	r1, #0
    50b4:	vmov	r2, r3, d16
    50b8:	bl	888 <println>
    50bc:	ldr	r0, [fp, #-12]
    50c0:	ldr	r1, [r0, #220]	; 0xdc
    50c4:	add	r1, r1, #1
    50c8:	str	r1, [r0, #220]	; 0xdc
    50cc:	b	5128 <gen_field_match_handler+0xa70>
    50d0:	movw	r0, #0
    50d4:	movt	r0, #0
    50d8:	ldr	r0, [r0]
    50dc:	movw	r1, #0
    50e0:	movt	r1, #0
    50e4:	movw	r2, #0
    50e8:	movt	r2, #0
    50ec:	movw	r3, #590	; 0x24e
    50f0:	movw	ip, #0
    50f4:	movt	ip, #0
    50f8:	str	ip, [sp]
    50fc:	bl	0 <fprintf>
    5100:	movw	r1, #0
    5104:	movt	r1, #0
    5108:	str	r0, [sp, #40]	; 0x28
    510c:	mov	r0, r1
    5110:	movw	r1, #0
    5114:	movt	r1, #0
    5118:	movw	r2, #590	; 0x24e
    511c:	movw	r3, #0
    5120:	movt	r3, #0
    5124:	bl	0 <__assert_fail>
    5128:	ldr	r0, [fp, #-12]
    512c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5130:	ldr	r2, [r1, #88]	; 0x58
    5134:	ldr	r3, [r1, #92]	; 0x5c
    5138:	ldr	ip, [r1, #96]	; 0x60
    513c:	ldr	r1, [r1, #100]	; 0x64
    5140:	ldr	lr, [fp, #-28]	; 0xffffffe4
    5144:	ldrsh	lr, [lr, #74]	; 0x4a
    5148:	mov	r4, sp
    514c:	str	lr, [r4, #8]
    5150:	str	r3, [r4, #4]
    5154:	str	r2, [r4]
    5158:	movw	r2, #0
    515c:	movt	r2, #0
    5160:	str	r1, [sp, #36]	; 0x24
    5164:	mov	r1, r2
    5168:	mov	r2, ip
    516c:	ldr	r3, [sp, #36]	; 0x24
    5170:	bl	888 <println>
    5174:	ldr	r0, [fp, #-12]
    5178:	ldr	r2, [fp, #-12]
    517c:	ldr	r3, [sp, #124]	; 0x7c
    5180:	movw	r1, #0
    5184:	movt	r1, #0
    5188:	bl	888 <println>
    518c:	ldr	r0, [sp, #184]	; 0xb8
    5190:	cmp	r0, #0
    5194:	bne	51fc <gen_field_match_handler+0xb44>
    5198:	ldr	r0, [sp, #172]	; 0xac
    519c:	cmp	r0, #0
    51a0:	bne	51fc <gen_field_match_handler+0xb44>
    51a4:	ldr	r0, [fp, #-12]
    51a8:	ldr	r0, [r0, #220]	; 0xdc
    51ac:	cmp	r0, #0
    51b0:	beq	51b8 <gen_field_match_handler+0xb00>
    51b4:	b	51d8 <gen_field_match_handler+0xb20>
    51b8:	movw	r0, #0
    51bc:	movt	r0, #0
    51c0:	movw	r1, #0
    51c4:	movt	r1, #0
    51c8:	movw	r2, #602	; 0x25a
    51cc:	movw	r3, #0
    51d0:	movt	r3, #0
    51d4:	bl	0 <__assert_fail>
    51d8:	ldr	r0, [fp, #-12]
    51dc:	ldr	r1, [r0, #220]	; 0xdc
    51e0:	mvn	r2, #0
    51e4:	add	r1, r1, r2
    51e8:	str	r1, [r0, #220]	; 0xdc
    51ec:	ldr	r0, [fp, #-12]
    51f0:	movw	r1, #0
    51f4:	movt	r1, #0
    51f8:	bl	888 <println>
    51fc:	b	55a4 <gen_field_match_handler+0xeec>
    5200:	ldr	r0, [sp, #156]	; 0x9c
    5204:	cmp	r0, #0
    5208:	beq	5224 <gen_field_match_handler+0xb6c>
    520c:	sub	r2, fp, #248	; 0xf8
    5210:	ldr	r0, [fp, #-12]
    5214:	movw	r1, #0
    5218:	movt	r1, #0
    521c:	bl	888 <println>
    5220:	b	55a0 <gen_field_match_handler+0xee8>
    5224:	ldr	r0, [sp, #180]	; 0xb4
    5228:	cmp	r0, #0
    522c:	beq	5244 <gen_field_match_handler+0xb8c>
    5230:	ldr	r0, [fp, #-12]
    5234:	movw	r1, #0
    5238:	movt	r1, #0
    523c:	bl	888 <println>
    5240:	b	559c <gen_field_match_handler+0xee4>
    5244:	ldr	r0, [sp, #140]	; 0x8c
    5248:	cmp	r0, #0
    524c:	bne	525c <gen_field_match_handler+0xba4>
    5250:	ldr	r0, [sp, #136]	; 0x88
    5254:	cmp	r0, #0
    5258:	beq	528c <gen_field_match_handler+0xbd4>
    525c:	ldr	r0, [fp, #-12]
    5260:	ldr	r1, [sp, #140]	; 0x8c
    5264:	cmp	r1, #0
    5268:	movw	r1, #0
    526c:	movne	r1, #1
    5270:	mvn	r2, #0
    5274:	eor	r1, r1, r2
    5278:	and	r2, r1, #1
    527c:	movw	r1, #0
    5280:	movt	r1, #0
    5284:	bl	888 <println>
    5288:	b	5598 <gen_field_match_handler+0xee0>
    528c:	ldr	r0, [sp, #160]	; 0xa0
    5290:	cmp	r0, #0
    5294:	beq	52b0 <gen_field_match_handler+0xbf8>
    5298:	sub	r2, fp, #248	; 0xf8
    529c:	ldr	r0, [fp, #-12]
    52a0:	movw	r1, #0
    52a4:	movt	r1, #0
    52a8:	bl	888 <println>
    52ac:	b	5594 <gen_field_match_handler+0xedc>
    52b0:	ldr	r0, [sp, #152]	; 0x98
    52b4:	cmp	r0, #0
    52b8:	beq	5360 <gen_field_match_handler+0xca8>
    52bc:	ldr	r0, [sp, #148]	; 0x94
    52c0:	cmp	r0, #0
    52c4:	beq	5314 <gen_field_match_handler+0xc5c>
    52c8:	sub	r0, fp, #248	; 0xf8
    52cc:	ldr	r1, [fp, #-12]
    52d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    52d4:	ldr	r3, [r2, #96]	; 0x60
    52d8:	ldr	ip, [r2, #100]	; 0x64
    52dc:	ldr	r2, [r2, #112]	; 0x70
    52e0:	mov	lr, #0
    52e4:	mov	r4, sp
    52e8:	str	r0, [r4, #8]
    52ec:	str	ip, [r4, #4]
    52f0:	str	r3, [r4]
    52f4:	movw	r0, #0
    52f8:	movt	r0, #0
    52fc:	str	r0, [sp, #32]
    5300:	mov	r0, r1
    5304:	ldr	r1, [sp, #32]
    5308:	mov	r3, lr
    530c:	bl	888 <println>
    5310:	b	535c <gen_field_match_handler+0xca4>
    5314:	sub	r0, fp, #248	; 0xf8
    5318:	ldr	r1, [fp, #-12]
    531c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5320:	ldr	r3, [r2, #96]	; 0x60
    5324:	ldr	ip, [r2, #100]	; 0x64
    5328:	ldr	r2, [r2, #112]	; 0x70
    532c:	mov	lr, #0
    5330:	mov	r4, sp
    5334:	str	r0, [r4, #8]
    5338:	str	ip, [r4, #4]
    533c:	str	r3, [r4]
    5340:	movw	r0, #0
    5344:	movt	r0, #0
    5348:	str	r0, [sp, #28]
    534c:	mov	r0, r1
    5350:	ldr	r1, [sp, #28]
    5354:	mov	r3, lr
    5358:	bl	888 <println>
    535c:	b	5590 <gen_field_match_handler+0xed8>
    5360:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5364:	cmp	r0, #0
    5368:	beq	5524 <gen_field_match_handler+0xe6c>
    536c:	ldr	r0, [fp, #-12]
    5370:	movw	r1, #0
    5374:	movt	r1, #0
    5378:	bl	888 <println>
    537c:	sub	r2, fp, #248	; 0xf8
    5380:	ldr	r0, [fp, #-12]
    5384:	ldr	r1, [r0, #220]	; 0xdc
    5388:	add	r1, r1, #1
    538c:	str	r1, [r0, #220]	; 0xdc
    5390:	ldr	r0, [fp, #-12]
    5394:	ldr	r1, [r0, #220]	; 0xdc
    5398:	add	r1, r1, #1
    539c:	str	r1, [r0, #220]	; 0xdc
    53a0:	ldr	r0, [fp, #-12]
    53a4:	movw	r1, #0
    53a8:	movt	r1, #0
    53ac:	bl	888 <println>
    53b0:	add	r3, sp, #188	; 0xbc
    53b4:	ldr	r0, [fp, #-12]
    53b8:	ldr	r1, [fp, #-12]
    53bc:	ldr	r1, [r1, #208]	; 0xd0
    53c0:	ldr	r2, [r1, #160]	; 0xa0
    53c4:	movw	r1, #0
    53c8:	movt	r1, #0
    53cc:	bl	888 <println>
    53d0:	ldr	r0, [fp, #-12]
    53d4:	ldr	r1, [fp, #-12]
    53d8:	ldr	r1, [r1, #208]	; 0xd0
    53dc:	ldr	r2, [r1, #160]	; 0xa0
    53e0:	movw	r1, #0
    53e4:	movt	r1, #0
    53e8:	bl	888 <println>
    53ec:	ldr	r0, [fp, #-12]
    53f0:	ldr	r0, [r0, #220]	; 0xdc
    53f4:	cmp	r0, #0
    53f8:	beq	5400 <gen_field_match_handler+0xd48>
    53fc:	b	5420 <gen_field_match_handler+0xd68>
    5400:	movw	r0, #0
    5404:	movt	r0, #0
    5408:	movw	r1, #0
    540c:	movt	r1, #0
    5410:	movw	r2, #627	; 0x273
    5414:	movw	r3, #0
    5418:	movt	r3, #0
    541c:	bl	0 <__assert_fail>
    5420:	ldr	r0, [fp, #-12]
    5424:	ldr	r1, [r0, #220]	; 0xdc
    5428:	mvn	r2, #0
    542c:	add	r1, r1, r2
    5430:	str	r1, [r0, #220]	; 0xdc
    5434:	ldr	r0, [fp, #-12]
    5438:	ldr	r0, [r0, #220]	; 0xdc
    543c:	cmp	r0, #0
    5440:	beq	5448 <gen_field_match_handler+0xd90>
    5444:	b	5468 <gen_field_match_handler+0xdb0>
    5448:	movw	r0, #0
    544c:	movt	r0, #0
    5450:	movw	r1, #0
    5454:	movt	r1, #0
    5458:	movw	r2, #627	; 0x273
    545c:	movw	r3, #0
    5460:	movt	r3, #0
    5464:	bl	0 <__assert_fail>
    5468:	ldr	r0, [fp, #-12]
    546c:	ldr	r1, [r0, #220]	; 0xdc
    5470:	mvn	r2, #0
    5474:	add	r1, r1, r2
    5478:	str	r1, [r0, #220]	; 0xdc
    547c:	ldr	r0, [sp, #144]	; 0x90
    5480:	cmp	r0, #0
    5484:	beq	54d8 <gen_field_match_handler+0xe20>
    5488:	sub	r0, fp, #248	; 0xf8
    548c:	ldr	r1, [fp, #-12]
    5490:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5494:	ldr	r3, [r2, #96]	; 0x60
    5498:	ldr	ip, [r2, #100]	; 0x64
    549c:	ldr	r2, [r2, #112]	; 0x70
    54a0:	mov	lr, #0
    54a4:	mov	r4, sp
    54a8:	str	r0, [r4, #12]
    54ac:	str	r0, [r4, #8]
    54b0:	str	ip, [r4, #4]
    54b4:	str	r3, [r4]
    54b8:	movw	r0, #0
    54bc:	movt	r0, #0
    54c0:	str	r0, [sp, #24]
    54c4:	mov	r0, r1
    54c8:	ldr	r1, [sp, #24]
    54cc:	mov	r3, lr
    54d0:	bl	888 <println>
    54d4:	b	5520 <gen_field_match_handler+0xe68>
    54d8:	sub	r0, fp, #248	; 0xf8
    54dc:	ldr	r1, [fp, #-12]
    54e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    54e4:	ldr	r3, [r2, #96]	; 0x60
    54e8:	ldr	ip, [r2, #100]	; 0x64
    54ec:	ldr	r2, [r2, #112]	; 0x70
    54f0:	mov	lr, #0
    54f4:	mov	r4, sp
    54f8:	str	r0, [r4, #8]
    54fc:	str	ip, [r4, #4]
    5500:	str	r3, [r4]
    5504:	movw	r0, #0
    5508:	movt	r0, #0
    550c:	str	r0, [sp, #20]
    5510:	mov	r0, r1
    5514:	ldr	r1, [sp, #20]
    5518:	mov	r3, lr
    551c:	bl	888 <println>
    5520:	b	558c <gen_field_match_handler+0xed4>
    5524:	ldr	r0, [sp, #172]	; 0xac
    5528:	cmp	r0, #0
    552c:	bne	5588 <gen_field_match_handler+0xed0>
    5530:	movw	r0, #0
    5534:	movt	r0, #0
    5538:	ldr	r0, [r0]
    553c:	movw	r1, #0
    5540:	movt	r1, #0
    5544:	movw	r2, #0
    5548:	movt	r2, #0
    554c:	movw	r3, #636	; 0x27c
    5550:	movw	ip, #0
    5554:	movt	ip, #0
    5558:	str	ip, [sp]
    555c:	bl	0 <fprintf>
    5560:	movw	r1, #0
    5564:	movt	r1, #0
    5568:	str	r0, [sp, #16]
    556c:	mov	r0, r1
    5570:	movw	r1, #0
    5574:	movt	r1, #0
    5578:	movw	r2, #636	; 0x27c
    557c:	movw	r3, #0
    5580:	movt	r3, #0
    5584:	bl	0 <__assert_fail>
    5588:	b	558c <gen_field_match_handler+0xed4>
    558c:	b	5590 <gen_field_match_handler+0xed8>
    5590:	b	5594 <gen_field_match_handler+0xedc>
    5594:	b	5598 <gen_field_match_handler+0xee0>
    5598:	b	559c <gen_field_match_handler+0xee4>
    559c:	b	55a0 <gen_field_match_handler+0xee8>
    55a0:	b	55a4 <gen_field_match_handler+0xeec>
    55a4:	ldr	r0, [sp, #172]	; 0xac
    55a8:	cmp	r0, #0
    55ac:	beq	5678 <gen_field_match_handler+0xfc0>
    55b0:	ldr	r0, [sp, #168]	; 0xa8
    55b4:	cmp	r0, #0
    55b8:	beq	55dc <gen_field_match_handler+0xf24>
    55bc:	ldr	r0, [fp, #-12]
    55c0:	movw	r1, #0
    55c4:	movt	r1, #0
    55c8:	bl	888 <println>
    55cc:	ldr	r0, [fp, #-12]
    55d0:	movw	r1, #0
    55d4:	movt	r1, #0
    55d8:	bl	888 <println>
    55dc:	ldr	r0, [fp, #-12]
    55e0:	movw	r1, #0
    55e4:	movt	r1, #0
    55e8:	bl	888 <println>
    55ec:	ldr	r0, [fp, #-12]
    55f0:	ldr	r0, [r0, #220]	; 0xdc
    55f4:	cmp	r0, #0
    55f8:	beq	5600 <gen_field_match_handler+0xf48>
    55fc:	b	5620 <gen_field_match_handler+0xf68>
    5600:	movw	r0, #0
    5604:	movt	r0, #0
    5608:	movw	r1, #0
    560c:	movt	r1, #0
    5610:	movw	r2, #647	; 0x287
    5614:	movw	r3, #0
    5618:	movt	r3, #0
    561c:	bl	0 <__assert_fail>
    5620:	ldr	r0, [fp, #-12]
    5624:	ldr	r1, [r0, #220]	; 0xdc
    5628:	mvn	r2, #0
    562c:	add	r1, r1, r2
    5630:	str	r1, [r0, #220]	; 0xdc
    5634:	ldr	r0, [fp, #-12]
    5638:	movw	r1, #0
    563c:	movt	r1, #0
    5640:	bl	888 <println>
    5644:	ldr	r0, [sp, #168]	; 0xa8
    5648:	cmp	r0, #0
    564c:	beq	5664 <gen_field_match_handler+0xfac>
    5650:	ldr	r0, [fp, #-12]
    5654:	movw	r1, #0
    5658:	movt	r1, #0
    565c:	bl	888 <println>
    5660:	b	5674 <gen_field_match_handler+0xfbc>
    5664:	ldr	r0, [fp, #-12]
    5668:	movw	r1, #0
    566c:	movt	r1, #0
    5670:	bl	888 <println>
    5674:	b	5678 <gen_field_match_handler+0xfc0>
    5678:	ldr	r0, [sp, #132]	; 0x84
    567c:	cmp	r0, #1
    5680:	bne	5690 <gen_field_match_handler+0xfd8>
    5684:	movw	r0, #2
    5688:	str	r0, [sp, #132]	; 0x84
    568c:	b	4a6c <gen_field_match_handler+0x3b4>
    5690:	ldr	r0, [sp, #132]	; 0x84
    5694:	cmp	r0, #2
    5698:	bne	5714 <gen_field_match_handler+0x105c>
    569c:	ldr	r0, [fp, #-12]
    56a0:	movw	r1, #0
    56a4:	movt	r1, #0
    56a8:	bl	888 <println>
    56ac:	ldr	r0, [fp, #-12]
    56b0:	movw	r1, #0
    56b4:	movt	r1, #0
    56b8:	bl	888 <println>
    56bc:	ldr	r0, [fp, #-12]
    56c0:	ldr	r0, [r0, #220]	; 0xdc
    56c4:	cmp	r0, #0
    56c8:	beq	56d0 <gen_field_match_handler+0x1018>
    56cc:	b	56f0 <gen_field_match_handler+0x1038>
    56d0:	movw	r0, #0
    56d4:	movt	r0, #0
    56d8:	movw	r1, #0
    56dc:	movt	r1, #0
    56e0:	movw	r2, #661	; 0x295
    56e4:	movw	r3, #0
    56e8:	movt	r3, #0
    56ec:	bl	0 <__assert_fail>
    56f0:	ldr	r0, [fp, #-12]
    56f4:	ldr	r1, [r0, #220]	; 0xdc
    56f8:	mvn	r2, #0
    56fc:	add	r1, r1, r2
    5700:	str	r1, [r0, #220]	; 0xdc
    5704:	ldr	r0, [fp, #-12]
    5708:	movw	r1, #0
    570c:	movt	r1, #0
    5710:	bl	888 <println>
    5714:	ldr	r0, [sp, #132]	; 0x84
    5718:	cmp	r0, #0
    571c:	bne	575c <gen_field_match_handler+0x10a4>
    5720:	ldr	r0, [sp, #172]	; 0xac
    5724:	cmp	r0, #0
    5728:	bne	575c <gen_field_match_handler+0x10a4>
    572c:	ldr	r0, [sp, #160]	; 0xa0
    5730:	cmp	r0, #0
    5734:	bne	575c <gen_field_match_handler+0x10a4>
    5738:	ldr	r0, [sp, #180]	; 0xb4
    573c:	cmp	r0, #0
    5740:	bne	575c <gen_field_match_handler+0x10a4>
    5744:	ldr	r0, [sp, #140]	; 0x8c
    5748:	cmp	r0, #0
    574c:	bne	575c <gen_field_match_handler+0x10a4>
    5750:	ldr	r0, [sp, #136]	; 0x88
    5754:	cmp	r0, #0
    5758:	beq	5788 <gen_field_match_handler+0x10d0>
    575c:	ldr	r0, [fp, #-12]
    5760:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5764:	ldr	r2, [r1, #96]	; 0x60
    5768:	ldr	r3, [r1, #100]	; 0x64
    576c:	movw	r1, #0
    5770:	movt	r1, #0
    5774:	bl	888 <println>
    5778:	ldr	r0, [fp, #-12]
    577c:	movw	r1, #0
    5780:	movt	r1, #0
    5784:	bl	888 <println>
    5788:	movw	r0, #0
    578c:	sub	sp, fp, #8
    5790:	pop	{r4, sl, fp, pc}

00005794 <scalar_type_prefix>:
    5794:	push	{fp, lr}
    5798:	mov	fp, sp
    579c:	sub	sp, sp, #24
    57a0:	str	r0, [fp, #-4]
    57a4:	ldr	r0, [fp, #-4]
    57a8:	sub	r0, r0, #1
    57ac:	cmp	r0, #10
    57b0:	str	r0, [sp, #12]
    57b4:	bhi	58a4 <scalar_type_prefix+0x110>
    57b8:	add	r0, pc, #8
    57bc:	ldr	r1, [sp, #12]
    57c0:	ldr	r0, [r0, r1, lsl #2]
    57c4:	mov	pc, r0
    57c8:	.word	0x000057f4
    57cc:	.word	0x00005804
    57d0:	.word	0x00005814
    57d4:	.word	0x00005824
    57d8:	.word	0x00005834
    57dc:	.word	0x00005844
    57e0:	.word	0x00005854
    57e4:	.word	0x00005864
    57e8:	.word	0x00005874
    57ec:	.word	0x00005894
    57f0:	.word	0x00005884
    57f4:	movw	r0, #0
    57f8:	movt	r0, #0
    57fc:	str	r0, [fp, #-8]
    5800:	b	58fc <scalar_type_prefix+0x168>
    5804:	movw	r0, #0
    5808:	movt	r0, #0
    580c:	str	r0, [fp, #-8]
    5810:	b	58fc <scalar_type_prefix+0x168>
    5814:	movw	r0, #0
    5818:	movt	r0, #0
    581c:	str	r0, [fp, #-8]
    5820:	b	58fc <scalar_type_prefix+0x168>
    5824:	movw	r0, #0
    5828:	movt	r0, #0
    582c:	str	r0, [fp, #-8]
    5830:	b	58fc <scalar_type_prefix+0x168>
    5834:	movw	r0, #0
    5838:	movt	r0, #0
    583c:	str	r0, [fp, #-8]
    5840:	b	58fc <scalar_type_prefix+0x168>
    5844:	movw	r0, #0
    5848:	movt	r0, #0
    584c:	str	r0, [fp, #-8]
    5850:	b	58fc <scalar_type_prefix+0x168>
    5854:	movw	r0, #0
    5858:	movt	r0, #0
    585c:	str	r0, [fp, #-8]
    5860:	b	58fc <scalar_type_prefix+0x168>
    5864:	movw	r0, #0
    5868:	movt	r0, #0
    586c:	str	r0, [fp, #-8]
    5870:	b	58fc <scalar_type_prefix+0x168>
    5874:	movw	r0, #0
    5878:	movt	r0, #0
    587c:	str	r0, [fp, #-8]
    5880:	b	58fc <scalar_type_prefix+0x168>
    5884:	movw	r0, #0
    5888:	movt	r0, #0
    588c:	str	r0, [fp, #-8]
    5890:	b	58fc <scalar_type_prefix+0x168>
    5894:	movw	r0, #0
    5898:	movt	r0, #0
    589c:	str	r0, [fp, #-8]
    58a0:	b	58fc <scalar_type_prefix+0x168>
    58a4:	movw	r0, #0
    58a8:	movt	r0, #0
    58ac:	ldr	r0, [r0]
    58b0:	movw	r1, #0
    58b4:	movt	r1, #0
    58b8:	movw	r2, #0
    58bc:	movt	r2, #0
    58c0:	movw	r3, #96	; 0x60
    58c4:	movw	ip, #0
    58c8:	movt	ip, #0
    58cc:	str	ip, [sp]
    58d0:	bl	0 <fprintf>
    58d4:	movw	r1, #0
    58d8:	movt	r1, #0
    58dc:	str	r0, [sp, #8]
    58e0:	mov	r0, r1
    58e4:	movw	r1, #0
    58e8:	movt	r1, #0
    58ec:	movw	r2, #96	; 0x60
    58f0:	movw	r3, #0
    58f4:	movt	r3, #0
    58f8:	bl	0 <__assert_fail>
    58fc:	ldr	r0, [fp, #-8]
    5900:	mov	sp, fp
    5904:	pop	{fp, pc}

00005908 <scalar_type_name>:
    5908:	push	{fp, lr}
    590c:	mov	fp, sp
    5910:	sub	sp, sp, #24
    5914:	str	r0, [fp, #-4]
    5918:	ldr	r0, [fp, #-4]
    591c:	sub	r0, r0, #1
    5920:	cmp	r0, #10
    5924:	str	r0, [sp, #12]
    5928:	bhi	5a18 <scalar_type_name+0x110>
    592c:	add	r0, pc, #8
    5930:	ldr	r1, [sp, #12]
    5934:	ldr	r0, [r0, r1, lsl #2]
    5938:	mov	pc, r0
    593c:	.word	0x00005968
    5940:	.word	0x00005978
    5944:	.word	0x00005988
    5948:	.word	0x00005998
    594c:	.word	0x000059a8
    5950:	.word	0x000059b8
    5954:	.word	0x000059c8
    5958:	.word	0x000059d8
    595c:	.word	0x000059e8
    5960:	.word	0x00005a08
    5964:	.word	0x000059f8
    5968:	movw	r0, #0
    596c:	movt	r0, #0
    5970:	str	r0, [fp, #-8]
    5974:	b	5a70 <scalar_type_name+0x168>
    5978:	movw	r0, #0
    597c:	movt	r0, #0
    5980:	str	r0, [fp, #-8]
    5984:	b	5a70 <scalar_type_name+0x168>
    5988:	movw	r0, #0
    598c:	movt	r0, #0
    5990:	str	r0, [fp, #-8]
    5994:	b	5a70 <scalar_type_name+0x168>
    5998:	movw	r0, #0
    599c:	movt	r0, #0
    59a0:	str	r0, [fp, #-8]
    59a4:	b	5a70 <scalar_type_name+0x168>
    59a8:	movw	r0, #0
    59ac:	movt	r0, #0
    59b0:	str	r0, [fp, #-8]
    59b4:	b	5a70 <scalar_type_name+0x168>
    59b8:	movw	r0, #0
    59bc:	movt	r0, #0
    59c0:	str	r0, [fp, #-8]
    59c4:	b	5a70 <scalar_type_name+0x168>
    59c8:	movw	r0, #0
    59cc:	movt	r0, #0
    59d0:	str	r0, [fp, #-8]
    59d4:	b	5a70 <scalar_type_name+0x168>
    59d8:	movw	r0, #0
    59dc:	movt	r0, #0
    59e0:	str	r0, [fp, #-8]
    59e4:	b	5a70 <scalar_type_name+0x168>
    59e8:	movw	r0, #0
    59ec:	movt	r0, #0
    59f0:	str	r0, [fp, #-8]
    59f4:	b	5a70 <scalar_type_name+0x168>
    59f8:	movw	r0, #0
    59fc:	movt	r0, #0
    5a00:	str	r0, [fp, #-8]
    5a04:	b	5a70 <scalar_type_name+0x168>
    5a08:	movw	r0, #0
    5a0c:	movt	r0, #0
    5a10:	str	r0, [fp, #-8]
    5a14:	b	5a70 <scalar_type_name+0x168>
    5a18:	movw	r0, #0
    5a1c:	movt	r0, #0
    5a20:	ldr	r0, [r0]
    5a24:	movw	r1, #0
    5a28:	movt	r1, #0
    5a2c:	movw	r2, #0
    5a30:	movt	r2, #0
    5a34:	movw	r3, #141	; 0x8d
    5a38:	movw	ip, #0
    5a3c:	movt	ip, #0
    5a40:	str	ip, [sp]
    5a44:	bl	0 <fprintf>
    5a48:	movw	r1, #0
    5a4c:	movt	r1, #0
    5a50:	str	r0, [sp, #8]
    5a54:	mov	r0, r1
    5a58:	movw	r1, #0
    5a5c:	movt	r1, #0
    5a60:	movw	r2, #141	; 0x8d
    5a64:	movw	r3, #0
    5a68:	movt	r3, #0
    5a6c:	bl	0 <__assert_fail>
    5a70:	ldr	r0, [fp, #-8]
    5a74:	mov	sp, fp
    5a78:	pop	{fp, pc}

00005a7c <build_local_scope_dict>:
    5a7c:	push	{fp, lr}
    5a80:	mov	fp, sp
    5a84:	sub	sp, sp, #48	; 0x30
    5a88:	str	r0, [fp, #-8]
    5a8c:	str	r1, [fp, #-12]
    5a90:	str	r2, [fp, #-16]
    5a94:	add	r0, sp, #16
    5a98:	mov	r1, r0
    5a9c:	str	r0, [sp, #12]
    5aa0:	mov	r0, r1
    5aa4:	movw	r1, #0
    5aa8:	and	r1, r1, #255	; 0xff
    5aac:	movw	r2, #12
    5ab0:	bl	0 <memset>
    5ab4:	ldr	r0, [fp, #-8]
    5ab8:	str	r0, [sp, #20]
    5abc:	ldr	r0, [fp, #-12]
    5ac0:	add	r0, r0, #4
    5ac4:	ldr	r1, [sp, #12]
    5ac8:	movw	r2, #0
    5acc:	movt	r2, #0
    5ad0:	str	r1, [sp, #8]
    5ad4:	mov	r1, r2
    5ad8:	ldr	r2, [sp, #8]
    5adc:	bl	0 <fb_symbol_table_visit>
    5ae0:	ldr	r0, [sp, #16]
    5ae4:	ldr	r1, [fp, #-16]
    5ae8:	str	r0, [r1]
    5aec:	ldr	r0, [sp, #16]
    5af0:	cmp	r0, #0
    5af4:	bne	5b04 <build_local_scope_dict+0x88>
    5af8:	movw	r0, #0
    5afc:	str	r0, [fp, #-4]
    5b00:	b	5b7c <build_local_scope_dict+0x100>
    5b04:	ldr	r0, [sp, #16]
    5b08:	lsl	r0, r0, #4
    5b0c:	bl	0 <malloc>
    5b10:	str	r0, [fp, #-20]	; 0xffffffec
    5b14:	ldr	r0, [fp, #-20]	; 0xffffffec
    5b18:	movw	lr, #0
    5b1c:	cmp	r0, lr
    5b20:	bne	5b30 <build_local_scope_dict+0xb4>
    5b24:	movw	r0, #0
    5b28:	str	r0, [fp, #-4]
    5b2c:	b	5b7c <build_local_scope_dict+0x100>
    5b30:	ldr	r0, [fp, #-20]	; 0xffffffec
    5b34:	str	r0, [sp, #24]
    5b38:	ldr	r0, [fp, #-12]
    5b3c:	add	r0, r0, #4
    5b40:	add	r1, sp, #16
    5b44:	movw	r2, #0
    5b48:	movt	r2, #0
    5b4c:	str	r1, [sp, #4]
    5b50:	mov	r1, r2
    5b54:	ldr	r2, [sp, #4]
    5b58:	bl	0 <fb_symbol_table_visit>
    5b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    5b60:	ldr	r1, [sp, #16]
    5b64:	movw	r2, #16
    5b68:	movw	r3, #0
    5b6c:	movt	r3, #0
    5b70:	bl	0 <qsort>
    5b74:	ldr	r0, [fp, #-20]	; 0xffffffec
    5b78:	str	r0, [fp, #-4]
    5b7c:	ldr	r0, [fp, #-4]
    5b80:	mov	sp, fp
    5b84:	pop	{fp, pc}

00005b88 <gen_scope_match>:
    5b88:	push	{fp, lr}
    5b8c:	mov	fp, sp
    5b90:	sub	sp, sp, #24
    5b94:	ldr	ip, [fp, #8]
    5b98:	str	r0, [fp, #-4]
    5b9c:	str	r1, [fp, #-8]
    5ba0:	str	r2, [sp, #12]
    5ba4:	str	r3, [sp, #8]
    5ba8:	ldr	r0, [fp, #-4]
    5bac:	ldr	r2, [fp, #8]
    5bb0:	movw	r1, #0
    5bb4:	movt	r1, #0
    5bb8:	str	ip, [sp, #4]
    5bbc:	bl	888 <println>
    5bc0:	ldr	r0, [fp, #-4]
    5bc4:	movw	r1, #0
    5bc8:	movt	r1, #0
    5bcc:	bl	888 <println>
    5bd0:	ldr	r0, [fp, #-4]
    5bd4:	ldr	r1, [r0, #220]	; 0xdc
    5bd8:	add	r1, r1, #1
    5bdc:	str	r1, [r0, #220]	; 0xdc
    5be0:	ldr	r0, [fp, #-4]
    5be4:	ldr	r1, [fp, #-8]
    5be8:	ldr	r2, [sp, #12]
    5bec:	ldr	r3, [sp, #8]
    5bf0:	bl	5e1c <gen_scope_match_handler>
    5bf4:	ldr	r0, [fp, #-4]
    5bf8:	ldr	r0, [r0, #220]	; 0xdc
    5bfc:	cmp	r0, #0
    5c00:	beq	5c08 <gen_scope_match+0x80>
    5c04:	b	5c28 <gen_scope_match+0xa0>
    5c08:	movw	r0, #0
    5c0c:	movt	r0, #0
    5c10:	movw	r1, #0
    5c14:	movt	r1, #0
    5c18:	movw	r2, #742	; 0x2e6
    5c1c:	movw	r3, #0
    5c20:	movt	r3, #0
    5c24:	bl	0 <__assert_fail>
    5c28:	ldr	r0, [fp, #-4]
    5c2c:	ldr	r1, [r0, #220]	; 0xdc
    5c30:	mvn	r2, #0
    5c34:	add	r1, r1, r2
    5c38:	str	r1, [r0, #220]	; 0xdc
    5c3c:	ldr	r0, [fp, #-4]
    5c40:	movw	r1, #0
    5c44:	movt	r1, #0
    5c48:	bl	888 <println>
    5c4c:	ldr	r0, [fp, #-4]
    5c50:	ldr	r1, [r0, #220]	; 0xdc
    5c54:	add	r1, r1, #1
    5c58:	str	r1, [r0, #220]	; 0xdc
    5c5c:	mov	sp, fp
    5c60:	pop	{fp, pc}

00005c64 <gen_scope_unmatched>:
    5c64:	push	{fp, lr}
    5c68:	mov	fp, sp
    5c6c:	sub	sp, sp, #8
    5c70:	str	r0, [sp, #4]
    5c74:	ldr	r0, [sp, #4]
    5c78:	movw	r1, #0
    5c7c:	movt	r1, #0
    5c80:	bl	888 <println>
    5c84:	mov	sp, fp
    5c88:	pop	{fp, pc}

00005c8c <count_visible_enum_symbol>:
    5c8c:	push	{fp, lr}
    5c90:	mov	fp, sp
    5c94:	sub	sp, sp, #16
    5c98:	str	r0, [fp, #-4]
    5c9c:	str	r1, [sp, #8]
    5ca0:	ldr	r0, [fp, #-4]
    5ca4:	str	r0, [sp, #4]
    5ca8:	ldr	r0, [sp, #4]
    5cac:	ldr	r0, [r0, #4]
    5cb0:	ldr	r1, [sp, #8]
    5cb4:	bl	5d6c <get_enum_if_visible>
    5cb8:	movw	r1, #0
    5cbc:	cmp	r0, r1
    5cc0:	beq	5cd4 <count_visible_enum_symbol+0x48>
    5cc4:	ldr	r0, [sp, #4]
    5cc8:	ldr	r1, [r0]
    5ccc:	add	r1, r1, #1
    5cd0:	str	r1, [r0]
    5cd4:	mov	sp, fp
    5cd8:	pop	{fp, pc}

00005cdc <install_visible_enum_symbol>:
    5cdc:	push	{fp, lr}
    5ce0:	mov	fp, sp
    5ce4:	sub	sp, sp, #16
    5ce8:	str	r0, [fp, #-4]
    5cec:	str	r1, [sp, #8]
    5cf0:	ldr	r0, [fp, #-4]
    5cf4:	str	r0, [sp, #4]
    5cf8:	ldr	r0, [sp, #4]
    5cfc:	ldr	r0, [r0, #4]
    5d00:	ldr	r1, [sp, #8]
    5d04:	bl	5d6c <get_enum_if_visible>
    5d08:	movw	r1, #0
    5d0c:	cmp	r0, r1
    5d10:	beq	5d64 <install_visible_enum_symbol+0x88>
    5d14:	ldr	r0, [sp, #8]
    5d18:	ldr	r0, [r0, #4]
    5d1c:	ldr	r0, [r0]
    5d20:	ldr	r1, [sp, #4]
    5d24:	ldr	r1, [r1, #8]
    5d28:	str	r0, [r1]
    5d2c:	ldr	r0, [sp, #8]
    5d30:	ldr	r0, [r0, #4]
    5d34:	ldr	r0, [r0, #4]
    5d38:	ldr	r1, [sp, #4]
    5d3c:	ldr	r1, [r1, #8]
    5d40:	str	r0, [r1, #4]
    5d44:	ldr	r0, [sp, #8]
    5d48:	ldr	r1, [sp, #4]
    5d4c:	ldr	r1, [r1, #8]
    5d50:	str	r0, [r1, #8]
    5d54:	ldr	r0, [sp, #4]
    5d58:	ldr	r1, [r0, #8]
    5d5c:	add	r1, r1, #16
    5d60:	str	r1, [r0, #8]
    5d64:	mov	sp, fp
    5d68:	pop	{fp, pc}

00005d6c <get_enum_if_visible>:
    5d6c:	push	{fp, lr}
    5d70:	mov	fp, sp
    5d74:	sub	sp, sp, #16
    5d78:	str	r0, [fp, #-4]
    5d7c:	str	r1, [sp, #8]
    5d80:	mov	r0, #0
    5d84:	str	r0, [sp, #4]
    5d88:	ldr	r0, [sp, #8]
    5d8c:	ldrh	r0, [r0, #8]
    5d90:	sub	r0, r0, #3
    5d94:	cmp	r0, #1
    5d98:	bhi	5dd0 <get_enum_if_visible+0x64>
    5d9c:	b	5da0 <get_enum_if_visible+0x34>
    5da0:	ldr	r0, [sp, #8]
    5da4:	str	r0, [sp, #4]
    5da8:	ldr	r0, [fp, #-4]
    5dac:	add	r0, r0, #172	; 0xac
    5db0:	ldr	r1, [sp, #4]
    5db4:	ldr	r1, [r1, #16]
    5db8:	bl	5de0 <ptr_set_exists>
    5dbc:	cmp	r0, #0
    5dc0:	bne	5dcc <get_enum_if_visible+0x60>
    5dc4:	movw	r0, #0
    5dc8:	str	r0, [sp, #4]
    5dcc:	b	5dd4 <get_enum_if_visible+0x68>
    5dd0:	b	5dd4 <get_enum_if_visible+0x68>
    5dd4:	ldr	r0, [sp, #4]
    5dd8:	mov	sp, fp
    5ddc:	pop	{fp, pc}

00005de0 <ptr_set_exists>:
    5de0:	push	{fp, lr}
    5de4:	mov	fp, sp
    5de8:	sub	sp, sp, #8
    5dec:	str	r0, [sp, #4]
    5df0:	str	r1, [sp]
    5df4:	ldr	r0, [sp, #4]
    5df8:	ldr	r1, [sp]
    5dfc:	bl	0 <ptr_set_find_item>
    5e00:	movw	r1, #0
    5e04:	cmp	r0, r1
    5e08:	movw	r0, #0
    5e0c:	movne	r0, #1
    5e10:	and	r0, r0, #1
    5e14:	mov	sp, fp
    5e18:	pop	{fp, pc}

00005e1c <gen_scope_match_handler>:
    5e1c:	push	{r4, r5, fp, lr}
    5e20:	add	fp, sp, #8
    5e24:	sub	sp, sp, #248	; 0xf8
    5e28:	str	r0, [fp, #-12]
    5e2c:	str	r1, [fp, #-16]
    5e30:	str	r2, [fp, #-20]	; 0xffffffec
    5e34:	str	r3, [fp, #-24]	; 0xffffffe8
    5e38:	ldr	r0, [fp, #-20]	; 0xffffffec
    5e3c:	str	r0, [fp, #-28]	; 0xffffffe4
    5e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5e44:	ldrh	r0, [r0, #8]
    5e48:	cmp	r0, #3
    5e4c:	beq	5e60 <gen_scope_match_handler+0x44>
    5e50:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5e54:	ldrh	r0, [r0, #8]
    5e58:	cmp	r0, #4
    5e5c:	bne	5e64 <gen_scope_match_handler+0x48>
    5e60:	b	5e84 <gen_scope_match_handler+0x68>
    5e64:	movw	r0, #0
    5e68:	movt	r0, #0
    5e6c:	movw	r1, #0
    5e70:	movt	r1, #0
    5e74:	movw	r2, #729	; 0x2d9
    5e78:	movw	r3, #0
    5e7c:	movt	r3, #0
    5e80:	bl	0 <__assert_fail>
    5e84:	add	r0, sp, #8
    5e88:	mov	r1, r0
    5e8c:	str	r0, [sp, #4]
    5e90:	mov	r0, r1
    5e94:	movw	r1, #0
    5e98:	and	r1, r1, #255	; 0xff
    5e9c:	movw	r2, #220	; 0xdc
    5ea0:	bl	0 <memset>
    5ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    5ea8:	ldr	r1, [sp, #4]
    5eac:	bl	a0c <fb_compound_name>
    5eb0:	add	r2, sp, #8
    5eb4:	ldr	r0, [fp, #-12]
    5eb8:	movw	r1, #0
    5ebc:	movt	r1, #0
    5ec0:	bl	888 <println>
    5ec4:	sub	sp, fp, #8
    5ec8:	pop	{r4, r5, fp, pc}

00005ecc <build_catalog>:
    5ecc:	push	{fp, lr}
    5ed0:	mov	fp, sp
    5ed4:	sub	sp, sp, #32
    5ed8:	str	r0, [fp, #-8]
    5edc:	str	r1, [fp, #-12]
    5ee0:	str	r2, [sp, #16]
    5ee4:	str	r3, [sp, #12]
    5ee8:	ldr	r0, [fp, #-8]
    5eec:	movw	r1, #0
    5ef0:	and	r1, r1, #255	; 0xff
    5ef4:	movw	r2, #44	; 0x2c
    5ef8:	bl	0 <memset>
    5efc:	ldr	r0, [sp, #16]
    5f00:	ldr	r1, [fp, #-8]
    5f04:	str	r0, [r1]
    5f08:	ldr	r0, [fp, #-12]
    5f0c:	ldr	r1, [fp, #-8]
    5f10:	str	r0, [r1, #40]	; 0x28
    5f14:	ldr	r0, [sp, #12]
    5f18:	ldr	r1, [fp, #-8]
    5f1c:	movw	r2, #0
    5f20:	movt	r2, #0
    5f24:	str	r1, [sp, #8]
    5f28:	mov	r1, r2
    5f2c:	ldr	r2, [sp, #8]
    5f30:	bl	0 <fb_scope_table_visit>
    5f34:	ldr	r0, [fp, #-8]
    5f38:	ldr	r0, [r0, #4]
    5f3c:	movw	r1, #8
    5f40:	bl	0 <calloc>
    5f44:	ldr	r1, [fp, #-8]
    5f48:	str	r0, [r1, #16]
    5f4c:	ldr	r0, [fp, #-8]
    5f50:	ldr	r0, [r0, #8]
    5f54:	movw	r1, #8
    5f58:	bl	0 <calloc>
    5f5c:	ldr	r1, [fp, #-8]
    5f60:	str	r0, [r1, #20]
    5f64:	ldr	r0, [fp, #-8]
    5f68:	ldr	r0, [r0, #12]
    5f6c:	bl	0 <malloc>
    5f70:	ldr	r1, [fp, #-8]
    5f74:	str	r0, [r1, #24]
    5f78:	ldr	r0, [fp, #-8]
    5f7c:	ldr	r0, [r0, #16]
    5f80:	ldr	r1, [fp, #-8]
    5f84:	str	r0, [r1, #28]
    5f88:	ldr	r0, [fp, #-8]
    5f8c:	ldr	r0, [r0, #20]
    5f90:	ldr	r1, [fp, #-8]
    5f94:	str	r0, [r1, #32]
    5f98:	ldr	r0, [fp, #-8]
    5f9c:	ldr	r0, [r0, #24]
    5fa0:	ldr	r1, [fp, #-8]
    5fa4:	str	r0, [r1, #36]	; 0x24
    5fa8:	ldr	r0, [fp, #-8]
    5fac:	ldr	r0, [r0, #16]
    5fb0:	movw	r1, #0
    5fb4:	cmp	r0, r1
    5fb8:	bne	5fcc <build_catalog+0x100>
    5fbc:	ldr	r0, [fp, #-8]
    5fc0:	ldr	r0, [r0, #4]
    5fc4:	cmp	r0, #0
    5fc8:	bgt	6014 <build_catalog+0x148>
    5fcc:	ldr	r0, [fp, #-8]
    5fd0:	ldr	r0, [r0, #20]
    5fd4:	movw	r1, #0
    5fd8:	cmp	r0, r1
    5fdc:	bne	5ff0 <build_catalog+0x124>
    5fe0:	ldr	r0, [fp, #-8]
    5fe4:	ldr	r0, [r0, #8]
    5fe8:	cmp	r0, #0
    5fec:	bgt	6014 <build_catalog+0x148>
    5ff0:	ldr	r0, [fp, #-8]
    5ff4:	ldr	r0, [r0, #24]
    5ff8:	movw	r1, #0
    5ffc:	cmp	r0, r1
    6000:	bne	6028 <build_catalog+0x15c>
    6004:	ldr	r0, [fp, #-8]
    6008:	ldr	r0, [r0, #12]
    600c:	cmp	r0, #0
    6010:	bls	6028 <build_catalog+0x15c>
    6014:	ldr	r0, [fp, #-8]
    6018:	bl	61d4 <clear_catalog>
    601c:	mvn	r0, #0
    6020:	str	r0, [fp, #-4]
    6024:	b	6078 <build_catalog+0x1ac>
    6028:	ldr	r0, [sp, #12]
    602c:	ldr	r1, [fp, #-8]
    6030:	movw	r2, #0
    6034:	movt	r2, #0
    6038:	str	r1, [sp, #4]
    603c:	mov	r1, r2
    6040:	ldr	r2, [sp, #4]
    6044:	bl	0 <fb_scope_table_visit>
    6048:	ldr	r0, [fp, #-8]
    604c:	ldr	r0, [r0, #16]
    6050:	ldr	r1, [fp, #-8]
    6054:	ldr	r1, [r1, #4]
    6058:	bl	62c8 <sort_entries>
    605c:	ldr	r0, [fp, #-8]
    6060:	ldr	r0, [r0, #20]
    6064:	ldr	r1, [fp, #-8]
    6068:	ldr	r1, [r1, #8]
    606c:	bl	62c8 <sort_entries>
    6070:	movw	r0, #0
    6074:	str	r0, [fp, #-4]
    6078:	ldr	r0, [fp, #-4]
    607c:	mov	sp, fp
    6080:	pop	{fp, pc}

00006084 <build_global_scope_dict>:
    6084:	push	{fp, lr}
    6088:	mov	fp, sp
    608c:	sub	sp, sp, #24
    6090:	str	r0, [fp, #-8]
    6094:	str	r1, [sp, #12]
    6098:	ldr	r0, [fp, #-8]
    609c:	ldr	r0, [r0, #8]
    60a0:	str	r0, [sp, #4]
    60a4:	ldr	r0, [sp, #4]
    60a8:	ldr	r1, [sp, #12]
    60ac:	str	r0, [r1]
    60b0:	ldr	r0, [sp, #4]
    60b4:	cmp	r0, #0
    60b8:	bne	60c8 <build_global_scope_dict+0x44>
    60bc:	movw	r0, #0
    60c0:	str	r0, [fp, #-4]
    60c4:	b	61c8 <build_global_scope_dict+0x144>
    60c8:	ldr	r0, [sp, #4]
    60cc:	lsl	r0, r0, #4
    60d0:	bl	0 <malloc>
    60d4:	str	r0, [sp]
    60d8:	ldr	r0, [sp]
    60dc:	movw	lr, #0
    60e0:	cmp	r0, lr
    60e4:	bne	60f4 <build_global_scope_dict+0x70>
    60e8:	movw	r0, #0
    60ec:	str	r0, [fp, #-4]
    60f0:	b	61c8 <build_global_scope_dict+0x144>
    60f4:	movw	r0, #0
    60f8:	str	r0, [sp, #8]
    60fc:	ldr	r0, [sp, #8]
    6100:	ldr	r1, [fp, #-8]
    6104:	ldr	r1, [r1, #8]
    6108:	cmp	r0, r1
    610c:	bge	6194 <build_global_scope_dict+0x110>
    6110:	ldr	r0, [fp, #-8]
    6114:	ldr	r0, [r0, #20]
    6118:	ldr	r1, [sp, #8]
    611c:	add	r0, r0, r1, lsl #3
    6120:	ldr	r0, [r0, #4]
    6124:	ldr	r2, [sp]
    6128:	str	r0, [r2, r1, lsl #4]
    612c:	ldr	r0, [fp, #-8]
    6130:	ldr	r0, [r0, #20]
    6134:	ldr	r1, [sp, #8]
    6138:	add	r0, r0, r1, lsl #3
    613c:	ldr	r0, [r0, #4]
    6140:	bl	0 <strlen>
    6144:	ldr	r1, [sp]
    6148:	ldr	r2, [sp, #8]
    614c:	add	r1, r1, r2, lsl #4
    6150:	str	r0, [r1, #4]
    6154:	ldr	r0, [fp, #-8]
    6158:	ldr	r0, [r0, #20]
    615c:	ldr	r1, [sp, #8]
    6160:	ldr	r0, [r0, r1, lsl #3]
    6164:	ldr	r2, [sp]
    6168:	add	r1, r2, r1, lsl #4
    616c:	str	r0, [r1, #8]
    6170:	ldr	r0, [sp]
    6174:	ldr	r1, [sp, #8]
    6178:	add	r0, r0, r1, lsl #4
    617c:	movw	r1, #0
    6180:	str	r1, [r0, #12]
    6184:	ldr	r0, [sp, #8]
    6188:	add	r0, r0, #1
    618c:	str	r0, [sp, #8]
    6190:	b	60fc <build_global_scope_dict+0x78>
    6194:	ldr	r0, [sp]
    6198:	ldr	r1, [fp, #-8]
    619c:	ldr	r1, [r1, #8]
    61a0:	movw	r2, #16
    61a4:	movw	r3, #0
    61a8:	movt	r3, #0
    61ac:	bl	0 <qsort>
    61b0:	ldr	r0, [fp, #-8]
    61b4:	ldr	r0, [r0, #8]
    61b8:	ldr	r1, [sp, #12]
    61bc:	str	r0, [r1]
    61c0:	ldr	r0, [sp]
    61c4:	str	r0, [fp, #-4]
    61c8:	ldr	r0, [fp, #-4]
    61cc:	mov	sp, fp
    61d0:	pop	{fp, pc}

000061d4 <clear_catalog>:
    61d4:	push	{fp, lr}
    61d8:	mov	fp, sp
    61dc:	sub	sp, sp, #8
    61e0:	str	r0, [sp, #4]
    61e4:	ldr	r0, [sp, #4]
    61e8:	ldr	r0, [r0, #16]
    61ec:	movw	r1, #0
    61f0:	cmp	r0, r1
    61f4:	beq	6204 <clear_catalog+0x30>
    61f8:	ldr	r0, [sp, #4]
    61fc:	ldr	r0, [r0, #16]
    6200:	bl	0 <free>
    6204:	ldr	r0, [sp, #4]
    6208:	ldr	r0, [r0, #20]
    620c:	movw	r1, #0
    6210:	cmp	r0, r1
    6214:	beq	6224 <clear_catalog+0x50>
    6218:	ldr	r0, [sp, #4]
    621c:	ldr	r0, [r0, #20]
    6220:	bl	0 <free>
    6224:	ldr	r0, [sp, #4]
    6228:	ldr	r0, [r0, #24]
    622c:	movw	r1, #0
    6230:	cmp	r0, r1
    6234:	beq	6244 <clear_catalog+0x70>
    6238:	ldr	r0, [sp, #4]
    623c:	ldr	r0, [r0, #24]
    6240:	bl	0 <free>
    6244:	ldr	r0, [sp, #4]
    6248:	movw	r1, #0
    624c:	and	r1, r1, #255	; 0xff
    6250:	movw	r2, #44	; 0x2c
    6254:	bl	0 <memset>
    6258:	mov	sp, fp
    625c:	pop	{fp, pc}

00006260 <count_symbols>:
    6260:	push	{fp, lr}
    6264:	mov	fp, sp
    6268:	sub	sp, sp, #8
    626c:	str	r0, [sp, #4]
    6270:	str	r1, [sp]
    6274:	ldr	r0, [sp]
    6278:	add	r0, r0, #4
    627c:	ldr	r2, [sp, #4]
    6280:	movw	r1, #0
    6284:	movt	r1, #0
    6288:	bl	0 <fb_symbol_table_visit>
    628c:	mov	sp, fp
    6290:	pop	{fp, pc}

00006294 <install_symbols>:
    6294:	push	{fp, lr}
    6298:	mov	fp, sp
    629c:	sub	sp, sp, #8
    62a0:	str	r0, [sp, #4]
    62a4:	str	r1, [sp]
    62a8:	ldr	r0, [sp]
    62ac:	add	r0, r0, #4
    62b0:	ldr	r2, [sp, #4]
    62b4:	movw	r1, #0
    62b8:	movt	r1, #0
    62bc:	bl	0 <fb_symbol_table_visit>
    62c0:	mov	sp, fp
    62c4:	pop	{fp, pc}

000062c8 <sort_entries>:
    62c8:	push	{fp, lr}
    62cc:	mov	fp, sp
    62d0:	sub	sp, sp, #16
    62d4:	str	r0, [fp, #-4]
    62d8:	str	r1, [sp, #8]
    62dc:	ldr	r0, [fp, #-4]
    62e0:	ldr	r1, [sp, #8]
    62e4:	movw	r2, #8
    62e8:	movw	r3, #0
    62ec:	movt	r3, #0
    62f0:	bl	0 <qsort>
    62f4:	movw	r0, #0
    62f8:	str	r0, [sp, #4]
    62fc:	ldr	r0, [sp, #4]
    6300:	ldr	r1, [sp, #8]
    6304:	cmp	r0, r1
    6308:	bge	6334 <sort_entries+0x6c>
    630c:	ldr	r0, [sp, #4]
    6310:	mov	r1, r0
    6314:	ldr	r2, [fp, #-4]
    6318:	add	r0, r2, r0, lsl #3
    631c:	ldr	r0, [r0]
    6320:	str	r1, [r0, #124]	; 0x7c
    6324:	ldr	r0, [sp, #4]
    6328:	add	r0, r0, #1
    632c:	str	r0, [sp, #4]
    6330:	b	62fc <sort_entries+0x34>
    6334:	mov	sp, fp
    6338:	pop	{fp, pc}

0000633c <count_symbol>:
    633c:	push	{fp, lr}
    6340:	mov	fp, sp
    6344:	sub	sp, sp, #32
    6348:	str	r0, [fp, #-4]
    634c:	str	r1, [fp, #-8]
    6350:	ldr	r0, [fp, #-4]
    6354:	str	r0, [fp, #-12]
    6358:	movw	r0, #0
    635c:	str	r0, [sp, #12]
    6360:	ldr	r0, [fp, #-12]
    6364:	ldr	r0, [r0, #40]	; 0x28
    6368:	ldr	r1, [fp, #-8]
    636c:	bl	6474 <get_compound_if_visible>
    6370:	str	r0, [sp, #8]
    6374:	movw	r1, #0
    6378:	cmp	r0, r1
    637c:	bne	6384 <count_symbol+0x48>
    6380:	b	646c <count_symbol+0x130>
    6384:	ldr	r0, [fp, #-12]
    6388:	ldr	r0, [r0]
    638c:	cmp	r0, #0
    6390:	beq	63e4 <count_symbol+0xa8>
    6394:	ldr	r0, [sp, #8]
    6398:	ldr	r0, [r0, #12]
    639c:	ldr	r0, [r0]
    63a0:	str	r0, [sp, #16]
    63a4:	ldr	r0, [sp, #16]
    63a8:	movw	r1, #0
    63ac:	cmp	r0, r1
    63b0:	beq	63e0 <count_symbol+0xa4>
    63b4:	ldr	r0, [sp, #16]
    63b8:	ldr	r0, [r0, #4]
    63bc:	ldr	r0, [r0, #4]
    63c0:	add	r0, r0, #1
    63c4:	ldr	r1, [sp, #12]
    63c8:	add	r0, r1, r0
    63cc:	str	r0, [sp, #12]
    63d0:	ldr	r0, [sp, #16]
    63d4:	ldr	r0, [r0]
    63d8:	str	r0, [sp, #16]
    63dc:	b	63a4 <count_symbol+0x68>
    63e0:	b	63e4 <count_symbol+0xa8>
    63e4:	ldr	r0, [fp, #-8]
    63e8:	ldr	r0, [r0, #4]
    63ec:	ldr	r0, [r0, #4]
    63f0:	ldr	r1, [sp, #12]
    63f4:	add	r0, r1, r0
    63f8:	add	r0, r0, #1
    63fc:	str	r0, [sp, #12]
    6400:	ldr	r0, [sp, #12]
    6404:	ldr	r1, [fp, #-12]
    6408:	ldr	r2, [r1, #12]
    640c:	add	r0, r2, r0
    6410:	str	r0, [r1, #12]
    6414:	ldr	r0, [fp, #-8]
    6418:	ldrh	r0, [r0, #8]
    641c:	cmp	r0, #2
    6420:	str	r0, [sp, #4]
    6424:	bcc	6440 <count_symbol+0x104>
    6428:	b	642c <count_symbol+0xf0>
    642c:	ldr	r0, [sp, #4]
    6430:	sub	r1, r0, #3
    6434:	cmp	r1, #2
    6438:	bcc	6454 <count_symbol+0x118>
    643c:	b	6468 <count_symbol+0x12c>
    6440:	ldr	r0, [fp, #-12]
    6444:	ldr	r1, [r0, #4]
    6448:	add	r1, r1, #1
    644c:	str	r1, [r0, #4]
    6450:	b	646c <count_symbol+0x130>
    6454:	ldr	r0, [fp, #-12]
    6458:	ldr	r1, [r0, #8]
    645c:	add	r1, r1, #1
    6460:	str	r1, [r0, #8]
    6464:	b	646c <count_symbol+0x130>
    6468:	b	646c <count_symbol+0x130>
    646c:	mov	sp, fp
    6470:	pop	{fp, pc}

00006474 <get_compound_if_visible>:
    6474:	push	{fp, lr}
    6478:	mov	fp, sp
    647c:	sub	sp, sp, #16
    6480:	str	r0, [fp, #-4]
    6484:	str	r1, [sp, #8]
    6488:	mov	r0, #0
    648c:	str	r0, [sp, #4]
    6490:	ldr	r0, [sp, #8]
    6494:	ldrh	r0, [r0, #8]
    6498:	cmp	r0, #4
    649c:	bhi	64d4 <get_compound_if_visible+0x60>
    64a0:	b	64a4 <get_compound_if_visible+0x30>
    64a4:	ldr	r0, [sp, #8]
    64a8:	str	r0, [sp, #4]
    64ac:	ldr	r0, [fp, #-4]
    64b0:	add	r0, r0, #172	; 0xac
    64b4:	ldr	r1, [sp, #4]
    64b8:	ldr	r1, [r1, #16]
    64bc:	bl	5de0 <ptr_set_exists>
    64c0:	cmp	r0, #0
    64c4:	bne	64d0 <get_compound_if_visible+0x5c>
    64c8:	movw	r0, #0
    64cc:	str	r0, [sp, #4]
    64d0:	b	64d8 <get_compound_if_visible+0x64>
    64d4:	b	64d8 <get_compound_if_visible+0x64>
    64d8:	ldr	r0, [sp, #4]
    64dc:	mov	sp, fp
    64e0:	pop	{fp, pc}

000064e4 <install_symbol>:
    64e4:	push	{fp, lr}
    64e8:	mov	fp, sp
    64ec:	sub	sp, sp, #40	; 0x28
    64f0:	str	r0, [fp, #-4]
    64f4:	str	r1, [fp, #-8]
    64f8:	ldr	r0, [fp, #-4]
    64fc:	str	r0, [fp, #-12]
    6500:	movw	r0, #0
    6504:	str	r0, [sp, #20]
    6508:	ldr	r0, [fp, #-12]
    650c:	ldr	r0, [r0, #40]	; 0x28
    6510:	ldr	r1, [fp, #-8]
    6514:	bl	6474 <get_compound_if_visible>
    6518:	str	r0, [sp, #8]
    651c:	movw	r1, #0
    6520:	cmp	r0, r1
    6524:	bne	652c <install_symbol+0x48>
    6528:	b	66c4 <install_symbol+0x1e0>
    652c:	ldr	r0, [fp, #-12]
    6530:	ldr	r0, [r0, #36]	; 0x24
    6534:	str	r0, [sp, #16]
    6538:	ldr	r0, [sp, #16]
    653c:	str	r0, [sp, #12]
    6540:	ldr	r0, [fp, #-12]
    6544:	ldr	r0, [r0]
    6548:	cmp	r0, #0
    654c:	beq	65d0 <install_symbol+0xec>
    6550:	ldr	r0, [sp, #8]
    6554:	ldr	r0, [r0, #12]
    6558:	ldr	r0, [r0]
    655c:	str	r0, [fp, #-16]
    6560:	ldr	r0, [fp, #-16]
    6564:	movw	r1, #0
    6568:	cmp	r0, r1
    656c:	beq	65cc <install_symbol+0xe8>
    6570:	ldr	r0, [fp, #-16]
    6574:	ldr	r0, [r0, #4]
    6578:	ldr	r0, [r0, #4]
    657c:	str	r0, [sp, #20]
    6580:	ldr	r0, [sp, #16]
    6584:	ldr	r1, [fp, #-16]
    6588:	ldr	r1, [r1, #4]
    658c:	ldr	r1, [r1]
    6590:	ldr	r2, [sp, #20]
    6594:	bl	0 <memcpy>
    6598:	ldr	r0, [sp, #20]
    659c:	ldr	r1, [sp, #16]
    65a0:	add	r0, r1, r0
    65a4:	str	r0, [sp, #16]
    65a8:	ldr	r0, [sp, #16]
    65ac:	add	r1, r0, #1
    65b0:	str	r1, [sp, #16]
    65b4:	movw	r1, #46	; 0x2e
    65b8:	strb	r1, [r0]
    65bc:	ldr	r0, [fp, #-16]
    65c0:	ldr	r0, [r0]
    65c4:	str	r0, [fp, #-16]
    65c8:	b	6560 <install_symbol+0x7c>
    65cc:	b	65d0 <install_symbol+0xec>
    65d0:	ldr	r0, [fp, #-8]
    65d4:	ldr	r0, [r0, #4]
    65d8:	ldr	r0, [r0, #4]
    65dc:	str	r0, [sp, #20]
    65e0:	ldr	r0, [sp, #16]
    65e4:	ldr	r1, [fp, #-8]
    65e8:	ldr	r1, [r1, #4]
    65ec:	ldr	r1, [r1]
    65f0:	ldr	r2, [sp, #20]
    65f4:	bl	0 <memcpy>
    65f8:	ldr	r1, [sp, #20]
    65fc:	ldr	r2, [sp, #16]
    6600:	add	r1, r2, r1
    6604:	str	r1, [sp, #16]
    6608:	ldr	r1, [sp, #16]
    660c:	add	r2, r1, #1
    6610:	str	r2, [sp, #16]
    6614:	mov	r2, #0
    6618:	strb	r2, [r1]
    661c:	ldr	r1, [sp, #16]
    6620:	ldr	r2, [fp, #-12]
    6624:	str	r1, [r2, #36]	; 0x24
    6628:	ldr	r1, [fp, #-8]
    662c:	ldrh	r1, [r1, #8]
    6630:	cmp	r1, #2
    6634:	str	r0, [sp, #4]
    6638:	str	r1, [sp]
    663c:	bcc	6658 <install_symbol+0x174>
    6640:	b	6644 <install_symbol+0x160>
    6644:	ldr	r0, [sp]
    6648:	sub	r1, r0, #3
    664c:	cmp	r1, #2
    6650:	bcc	668c <install_symbol+0x1a8>
    6654:	b	66c0 <install_symbol+0x1dc>
    6658:	ldr	r0, [fp, #-8]
    665c:	ldr	r1, [fp, #-12]
    6660:	ldr	r1, [r1, #28]
    6664:	str	r0, [r1]
    6668:	ldr	r0, [sp, #12]
    666c:	ldr	r1, [fp, #-12]
    6670:	ldr	r1, [r1, #28]
    6674:	str	r0, [r1, #4]
    6678:	ldr	r0, [fp, #-12]
    667c:	ldr	r1, [r0, #28]
    6680:	add	r1, r1, #8
    6684:	str	r1, [r0, #28]
    6688:	b	66c4 <install_symbol+0x1e0>
    668c:	ldr	r0, [fp, #-8]
    6690:	ldr	r1, [fp, #-12]
    6694:	ldr	r1, [r1, #32]
    6698:	str	r0, [r1]
    669c:	ldr	r0, [sp, #12]
    66a0:	ldr	r1, [fp, #-12]
    66a4:	ldr	r1, [r1, #32]
    66a8:	str	r0, [r1, #4]
    66ac:	ldr	r0, [fp, #-12]
    66b0:	ldr	r1, [r0, #32]
    66b4:	add	r1, r1, #8
    66b8:	str	r1, [r0, #32]
    66bc:	b	66c4 <install_symbol+0x1e0>
    66c0:	b	66c4 <install_symbol+0x1e0>
    66c4:	mov	sp, fp
    66c8:	pop	{fp, pc}

000066cc <compare_entries>:
    66cc:	push	{fp, lr}
    66d0:	mov	fp, sp
    66d4:	sub	sp, sp, #8
    66d8:	str	r0, [sp, #4]
    66dc:	str	r1, [sp]
    66e0:	ldr	r0, [sp, #4]
    66e4:	ldr	r0, [r0, #4]
    66e8:	ldr	r1, [sp]
    66ec:	ldr	r1, [r1, #4]
    66f0:	bl	0 <strcmp>
    66f4:	mov	sp, fp
    66f8:	pop	{fp, pc}

000066fc <gen_root_table_parser>:
    66fc:	push	{fp, lr}
    6700:	mov	fp, sp
    6704:	sub	sp, sp, #232	; 0xe8
    6708:	str	r0, [fp, #-4]
    670c:	str	r1, [fp, #-8]
    6710:	add	r0, sp, #4
    6714:	mov	r1, r0
    6718:	str	r0, [sp]
    671c:	mov	r0, r1
    6720:	movw	r1, #0
    6724:	and	r1, r1, #255	; 0xff
    6728:	movw	r2, #220	; 0xdc
    672c:	bl	0 <memset>
    6730:	ldr	r0, [fp, #-8]
    6734:	ldr	r1, [sp]
    6738:	bl	a0c <fb_compound_name>
    673c:	ldr	r0, [fp, #-4]
    6740:	ldr	r1, [fp, #-4]
    6744:	ldr	r1, [r1, #208]	; 0xd0
    6748:	ldr	r2, [r1, #160]	; 0xa0
    674c:	movw	r1, #0
    6750:	movt	r1, #0
    6754:	bl	888 <println>
    6758:	ldr	r0, [fp, #-4]
    675c:	ldr	r1, [r0, #220]	; 0xdc
    6760:	add	r1, r1, #1
    6764:	str	r1, [r0, #220]	; 0xdc
    6768:	ldr	r0, [fp, #-4]
    676c:	ldr	r1, [r0, #220]	; 0xdc
    6770:	add	r1, r1, #1
    6774:	str	r1, [r0, #220]	; 0xdc
    6778:	ldr	r0, [fp, #-4]
    677c:	movw	r1, #0
    6780:	movt	r1, #0
    6784:	bl	888 <println>
    6788:	ldr	r0, [fp, #-4]
    678c:	ldr	r0, [r0, #220]	; 0xdc
    6790:	cmp	r0, #0
    6794:	beq	679c <gen_root_table_parser+0xa0>
    6798:	b	67bc <gen_root_table_parser+0xc0>
    679c:	movw	r0, #0
    67a0:	movt	r0, #0
    67a4:	movw	r1, #0
    67a8:	movt	r1, #0
    67ac:	movw	r2, #1610	; 0x64a
    67b0:	movw	r3, #0
    67b4:	movt	r3, #0
    67b8:	bl	0 <__assert_fail>
    67bc:	ldr	r0, [fp, #-4]
    67c0:	ldr	r1, [r0, #220]	; 0xdc
    67c4:	mvn	r2, #0
    67c8:	add	r1, r1, r2
    67cc:	str	r1, [r0, #220]	; 0xdc
    67d0:	ldr	r0, [fp, #-4]
    67d4:	ldr	r0, [r0, #220]	; 0xdc
    67d8:	cmp	r0, #0
    67dc:	beq	67e4 <gen_root_table_parser+0xe8>
    67e0:	b	6804 <gen_root_table_parser+0x108>
    67e4:	movw	r0, #0
    67e8:	movt	r0, #0
    67ec:	movw	r1, #0
    67f0:	movt	r1, #0
    67f4:	movw	r2, #1610	; 0x64a
    67f8:	movw	r3, #0
    67fc:	movt	r3, #0
    6800:	bl	0 <__assert_fail>
    6804:	ldr	r0, [fp, #-4]
    6808:	ldr	r1, [r0, #220]	; 0xdc
    680c:	mvn	r2, #0
    6810:	add	r1, r1, r2
    6814:	str	r1, [r0, #220]	; 0xdc
    6818:	ldr	r0, [fp, #-4]
    681c:	movw	r1, #0
    6820:	movt	r1, #0
    6824:	bl	888 <println>
    6828:	ldr	r0, [fp, #-4]
    682c:	ldr	r1, [r0, #220]	; 0xdc
    6830:	add	r1, r1, #1
    6834:	str	r1, [r0, #220]	; 0xdc
    6838:	ldr	r0, [fp, #-4]
    683c:	movw	r1, #0
    6840:	movt	r1, #0
    6844:	bl	888 <println>
    6848:	ldr	r0, [fp, #-4]
    684c:	movw	r1, #0
    6850:	movt	r1, #0
    6854:	bl	888 <println>
    6858:	ldr	r0, [fp, #-4]
    685c:	movw	r1, #0
    6860:	movt	r1, #0
    6864:	bl	888 <println>
    6868:	ldr	r0, [fp, #-4]
    686c:	movw	r1, #0
    6870:	movt	r1, #0
    6874:	bl	888 <println>
    6878:	ldr	r0, [fp, #-4]
    687c:	movw	r1, #0
    6880:	movt	r1, #0
    6884:	bl	888 <println>
    6888:	ldr	r0, [fp, #-4]
    688c:	ldr	r0, [r0, #208]	; 0xd0
    6890:	ldrh	r0, [r0, #16]
    6894:	cmp	r0, #2
    6898:	bne	68c8 <gen_root_table_parser+0x1cc>
    689c:	ldr	r0, [fp, #-4]
    68a0:	ldr	r1, [fp, #-4]
    68a4:	ldr	r1, [r1, #208]	; 0xd0
    68a8:	ldr	r2, [r1, #12]
    68ac:	ldr	r1, [fp, #-4]
    68b0:	ldr	r1, [r1, #208]	; 0xd0
    68b4:	ldr	r3, [r1, #8]
    68b8:	movw	r1, #0
    68bc:	movt	r1, #0
    68c0:	bl	888 <println>
    68c4:	b	68d8 <gen_root_table_parser+0x1dc>
    68c8:	ldr	r0, [fp, #-4]
    68cc:	movw	r1, #0
    68d0:	movt	r1, #0
    68d4:	bl	888 <println>
    68d8:	add	r2, sp, #4
    68dc:	ldr	r0, [fp, #-4]
    68e0:	movw	r1, #0
    68e4:	movt	r1, #0
    68e8:	bl	888 <println>
    68ec:	ldr	r0, [fp, #-4]
    68f0:	movw	r1, #0
    68f4:	movt	r1, #0
    68f8:	bl	888 <println>
    68fc:	ldr	r0, [fp, #-4]
    6900:	ldr	r1, [r0, #220]	; 0xdc
    6904:	add	r1, r1, #1
    6908:	str	r1, [r0, #220]	; 0xdc
    690c:	ldr	r0, [fp, #-4]
    6910:	movw	r1, #0
    6914:	movt	r1, #0
    6918:	bl	888 <println>
    691c:	ldr	r0, [fp, #-4]
    6920:	ldr	r0, [r0, #220]	; 0xdc
    6924:	cmp	r0, #0
    6928:	beq	6930 <gen_root_table_parser+0x234>
    692c:	b	6950 <gen_root_table_parser+0x254>
    6930:	movw	r0, #0
    6934:	movt	r0, #0
    6938:	movw	r1, #0
    693c:	movt	r1, #0
    6940:	movw	r2, #1626	; 0x65a
    6944:	movw	r3, #0
    6948:	movt	r3, #0
    694c:	bl	0 <__assert_fail>
    6950:	ldr	r0, [fp, #-4]
    6954:	ldr	r1, [r0, #220]	; 0xdc
    6958:	mvn	r2, #0
    695c:	add	r1, r1, r2
    6960:	str	r1, [r0, #220]	; 0xdc
    6964:	ldr	r0, [fp, #-4]
    6968:	movw	r1, #0
    696c:	movt	r1, #0
    6970:	bl	888 <println>
    6974:	ldr	r0, [fp, #-4]
    6978:	movw	r1, #0
    697c:	movt	r1, #0
    6980:	bl	888 <println>
    6984:	ldr	r0, [fp, #-4]
    6988:	movw	r1, #0
    698c:	movt	r1, #0
    6990:	bl	888 <println>
    6994:	ldr	r0, [fp, #-4]
    6998:	movw	r1, #0
    699c:	movt	r1, #0
    69a0:	bl	888 <println>
    69a4:	ldr	r0, [fp, #-4]
    69a8:	ldr	r0, [r0, #220]	; 0xdc
    69ac:	cmp	r0, #0
    69b0:	beq	69b8 <gen_root_table_parser+0x2bc>
    69b4:	b	69d8 <gen_root_table_parser+0x2dc>
    69b8:	movw	r0, #0
    69bc:	movt	r0, #0
    69c0:	movw	r1, #0
    69c4:	movt	r1, #0
    69c8:	movw	r2, #1630	; 0x65e
    69cc:	movw	r3, #0
    69d0:	movt	r3, #0
    69d4:	bl	0 <__assert_fail>
    69d8:	ldr	r0, [fp, #-4]
    69dc:	ldr	r1, [r0, #220]	; 0xdc
    69e0:	mvn	r2, #0
    69e4:	add	r1, r1, r2
    69e8:	str	r1, [r0, #220]	; 0xdc
    69ec:	ldr	r0, [fp, #-4]
    69f0:	movw	r1, #0
    69f4:	movt	r1, #0
    69f8:	bl	888 <println>
    69fc:	ldr	r0, [fp, #-4]
    6a00:	movw	r1, #0
    6a04:	movt	r1, #0
    6a08:	bl	888 <println>
    6a0c:	movw	r0, #0
    6a10:	mov	sp, fp
    6a14:	pop	{fp, pc}

00006a18 <gen_root_struct_parser>:
    6a18:	push	{fp, lr}
    6a1c:	mov	fp, sp
    6a20:	sub	sp, sp, #232	; 0xe8
    6a24:	str	r0, [fp, #-4]
    6a28:	str	r1, [fp, #-8]
    6a2c:	add	r0, sp, #4
    6a30:	mov	r1, r0
    6a34:	str	r0, [sp]
    6a38:	mov	r0, r1
    6a3c:	movw	r1, #0
    6a40:	and	r1, r1, #255	; 0xff
    6a44:	movw	r2, #220	; 0xdc
    6a48:	bl	0 <memset>
    6a4c:	ldr	r0, [fp, #-8]
    6a50:	ldr	r1, [sp]
    6a54:	bl	a0c <fb_compound_name>
    6a58:	ldr	r0, [fp, #-4]
    6a5c:	ldr	r1, [fp, #-4]
    6a60:	ldr	r1, [r1, #208]	; 0xd0
    6a64:	ldr	r2, [r1, #160]	; 0xa0
    6a68:	movw	r1, #0
    6a6c:	movt	r1, #0
    6a70:	bl	888 <println>
    6a74:	ldr	r0, [fp, #-4]
    6a78:	ldr	r1, [r0, #220]	; 0xdc
    6a7c:	add	r1, r1, #1
    6a80:	str	r1, [r0, #220]	; 0xdc
    6a84:	ldr	r0, [fp, #-4]
    6a88:	ldr	r1, [r0, #220]	; 0xdc
    6a8c:	add	r1, r1, #1
    6a90:	str	r1, [r0, #220]	; 0xdc
    6a94:	ldr	r0, [fp, #-4]
    6a98:	movw	r1, #0
    6a9c:	movt	r1, #0
    6aa0:	bl	888 <println>
    6aa4:	ldr	r0, [fp, #-4]
    6aa8:	ldr	r0, [r0, #220]	; 0xdc
    6aac:	cmp	r0, #0
    6ab0:	beq	6ab8 <gen_root_struct_parser+0xa0>
    6ab4:	b	6ad8 <gen_root_struct_parser+0xc0>
    6ab8:	movw	r0, #0
    6abc:	movt	r0, #0
    6ac0:	movw	r1, #0
    6ac4:	movt	r1, #0
    6ac8:	movw	r2, #1645	; 0x66d
    6acc:	movw	r3, #0
    6ad0:	movt	r3, #0
    6ad4:	bl	0 <__assert_fail>
    6ad8:	ldr	r0, [fp, #-4]
    6adc:	ldr	r1, [r0, #220]	; 0xdc
    6ae0:	mvn	r2, #0
    6ae4:	add	r1, r1, r2
    6ae8:	str	r1, [r0, #220]	; 0xdc
    6aec:	ldr	r0, [fp, #-4]
    6af0:	ldr	r0, [r0, #220]	; 0xdc
    6af4:	cmp	r0, #0
    6af8:	beq	6b00 <gen_root_struct_parser+0xe8>
    6afc:	b	6b20 <gen_root_struct_parser+0x108>
    6b00:	movw	r0, #0
    6b04:	movt	r0, #0
    6b08:	movw	r1, #0
    6b0c:	movt	r1, #0
    6b10:	movw	r2, #1645	; 0x66d
    6b14:	movw	r3, #0
    6b18:	movt	r3, #0
    6b1c:	bl	0 <__assert_fail>
    6b20:	ldr	r0, [fp, #-4]
    6b24:	ldr	r1, [r0, #220]	; 0xdc
    6b28:	mvn	r2, #0
    6b2c:	add	r1, r1, r2
    6b30:	str	r1, [r0, #220]	; 0xdc
    6b34:	ldr	r0, [fp, #-4]
    6b38:	movw	r1, #0
    6b3c:	movt	r1, #0
    6b40:	bl	888 <println>
    6b44:	ldr	r0, [fp, #-4]
    6b48:	ldr	r1, [r0, #220]	; 0xdc
    6b4c:	add	r1, r1, #1
    6b50:	str	r1, [r0, #220]	; 0xdc
    6b54:	ldr	r0, [fp, #-4]
    6b58:	movw	r1, #0
    6b5c:	movt	r1, #0
    6b60:	bl	888 <println>
    6b64:	ldr	r0, [fp, #-4]
    6b68:	movw	r1, #0
    6b6c:	movt	r1, #0
    6b70:	bl	888 <println>
    6b74:	ldr	r0, [fp, #-4]
    6b78:	movw	r1, #0
    6b7c:	movt	r1, #0
    6b80:	bl	888 <println>
    6b84:	ldr	r0, [fp, #-4]
    6b88:	movw	r1, #0
    6b8c:	movt	r1, #0
    6b90:	bl	888 <println>
    6b94:	ldr	r0, [fp, #-4]
    6b98:	movw	r1, #0
    6b9c:	movt	r1, #0
    6ba0:	bl	888 <println>
    6ba4:	ldr	r0, [fp, #-4]
    6ba8:	ldr	r0, [r0, #208]	; 0xd0
    6bac:	ldrh	r0, [r0, #16]
    6bb0:	cmp	r0, #2
    6bb4:	bne	6be4 <gen_root_struct_parser+0x1cc>
    6bb8:	ldr	r0, [fp, #-4]
    6bbc:	ldr	r1, [fp, #-4]
    6bc0:	ldr	r1, [r1, #208]	; 0xd0
    6bc4:	ldr	r2, [r1, #12]
    6bc8:	ldr	r1, [fp, #-4]
    6bcc:	ldr	r1, [r1, #208]	; 0xd0
    6bd0:	ldr	r3, [r1, #8]
    6bd4:	movw	r1, #0
    6bd8:	movt	r1, #0
    6bdc:	bl	888 <println>
    6be0:	b	6bf4 <gen_root_struct_parser+0x1dc>
    6be4:	ldr	r0, [fp, #-4]
    6be8:	movw	r1, #0
    6bec:	movt	r1, #0
    6bf0:	bl	888 <println>
    6bf4:	add	r2, sp, #4
    6bf8:	ldr	r0, [fp, #-4]
    6bfc:	movw	r1, #0
    6c00:	movt	r1, #0
    6c04:	bl	888 <println>
    6c08:	ldr	r0, [fp, #-4]
    6c0c:	movw	r1, #0
    6c10:	movt	r1, #0
    6c14:	bl	888 <println>
    6c18:	ldr	r0, [fp, #-4]
    6c1c:	ldr	r1, [r0, #220]	; 0xdc
    6c20:	add	r1, r1, #1
    6c24:	str	r1, [r0, #220]	; 0xdc
    6c28:	ldr	r0, [fp, #-4]
    6c2c:	movw	r1, #0
    6c30:	movt	r1, #0
    6c34:	bl	888 <println>
    6c38:	ldr	r0, [fp, #-4]
    6c3c:	ldr	r0, [r0, #220]	; 0xdc
    6c40:	cmp	r0, #0
    6c44:	beq	6c4c <gen_root_struct_parser+0x234>
    6c48:	b	6c6c <gen_root_struct_parser+0x254>
    6c4c:	movw	r0, #0
    6c50:	movt	r0, #0
    6c54:	movw	r1, #0
    6c58:	movt	r1, #0
    6c5c:	movw	r2, #1661	; 0x67d
    6c60:	movw	r3, #0
    6c64:	movt	r3, #0
    6c68:	bl	0 <__assert_fail>
    6c6c:	ldr	r0, [fp, #-4]
    6c70:	ldr	r1, [r0, #220]	; 0xdc
    6c74:	mvn	r2, #0
    6c78:	add	r1, r1, r2
    6c7c:	str	r1, [r0, #220]	; 0xdc
    6c80:	ldr	r0, [fp, #-4]
    6c84:	movw	r1, #0
    6c88:	movt	r1, #0
    6c8c:	bl	888 <println>
    6c90:	ldr	r0, [fp, #-4]
    6c94:	movw	r1, #0
    6c98:	movt	r1, #0
    6c9c:	bl	888 <println>
    6ca0:	ldr	r0, [fp, #-4]
    6ca4:	movw	r1, #0
    6ca8:	movt	r1, #0
    6cac:	bl	888 <println>
    6cb0:	ldr	r0, [fp, #-4]
    6cb4:	movw	r1, #0
    6cb8:	movt	r1, #0
    6cbc:	bl	888 <println>
    6cc0:	ldr	r0, [fp, #-4]
    6cc4:	ldr	r0, [r0, #220]	; 0xdc
    6cc8:	cmp	r0, #0
    6ccc:	beq	6cd4 <gen_root_struct_parser+0x2bc>
    6cd0:	b	6cf4 <gen_root_struct_parser+0x2dc>
    6cd4:	movw	r0, #0
    6cd8:	movt	r0, #0
    6cdc:	movw	r1, #0
    6ce0:	movt	r1, #0
    6ce4:	movw	r2, #1665	; 0x681
    6ce8:	movw	r3, #0
    6cec:	movt	r3, #0
    6cf0:	bl	0 <__assert_fail>
    6cf4:	ldr	r0, [fp, #-4]
    6cf8:	ldr	r1, [r0, #220]	; 0xdc
    6cfc:	mvn	r2, #0
    6d00:	add	r1, r1, r2
    6d04:	str	r1, [r0, #220]	; 0xdc
    6d08:	ldr	r0, [fp, #-4]
    6d0c:	movw	r1, #0
    6d10:	movt	r1, #0
    6d14:	bl	888 <println>
    6d18:	ldr	r0, [fp, #-4]
    6d1c:	movw	r1, #0
    6d20:	movt	r1, #0
    6d24:	bl	888 <println>
    6d28:	movw	r0, #0
    6d2c:	mov	sp, fp
    6d30:	pop	{fp, pc}

00006d34 <gen_epilogue>:
    6d34:	push	{fp, lr}
    6d38:	mov	fp, sp
    6d3c:	sub	sp, sp, #8
    6d40:	str	r0, [sp, #4]
    6d44:	ldr	r0, [sp, #4]
    6d48:	ldr	r0, [r0, #212]	; 0xd4
    6d4c:	ldr	r0, [r0, #140]	; 0x8c
    6d50:	cmp	r0, #0
    6d54:	beq	6d70 <gen_epilogue+0x3c>
    6d58:	ldr	r0, [sp, #4]
    6d5c:	ldr	r0, [r0, #204]	; 0xcc
    6d60:	movw	r1, #0
    6d64:	movt	r1, #0
    6d68:	bl	0 <fprintf>
    6d6c:	str	r0, [sp]
    6d70:	movw	r0, #0
    6d74:	mov	sp, fp
    6d78:	pop	{fp, pc}
