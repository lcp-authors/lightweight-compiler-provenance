
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/bst.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bst_nova>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	mov	r0, #4
  10:	bl	0 <malloc>
  14:	mov	r3, r0
  18:	str	r3, [fp, #-8]
  1c:	ldr	r3, [fp, #-8]
  20:	cmp	r3, #0
  24:	bne	30 <bst_nova+0x30>
  28:	mov	r3, #0
  2c:	b	40 <bst_nova+0x40>
  30:	ldr	r3, [fp, #-8]
  34:	mov	r2, #0
  38:	str	r2, [r3]
  3c:	ldr	r3, [fp, #-8]
  40:	mov	r0, r3
  44:	sub	sp, fp, #4
  48:	pop	{fp, pc}

0000004c <bst_apaga>:
  4c:	push	{fp, lr}
  50:	add	fp, sp, #4
  54:	sub	sp, sp, #8
  58:	str	r0, [fp, #-8]
  5c:	b	8c <bst_apaga+0x40>
  60:	ldr	r3, [fp, #-8]
  64:	ldr	r2, [r3]
  68:	ldr	r3, [fp, #-8]
  6c:	ldr	r3, [r3]
  70:	ldr	r3, [r3]
  74:	mov	r1, r3
  78:	mov	r0, r2
  7c:	bl	540 <bst_remove_impl>
  80:	mov	r2, r0
  84:	ldr	r3, [fp, #-8]
  88:	str	r2, [r3]
  8c:	ldr	r3, [fp, #-8]
  90:	ldr	r3, [r3]
  94:	cmp	r3, #0
  98:	bne	60 <bst_apaga+0x14>
  9c:	ldr	r0, [fp, #-8]
  a0:	bl	0 <free>
  a4:	nop			; (mov r0, r0)
  a8:	sub	sp, fp, #4
  ac:	pop	{fp, pc}

000000b0 <bst_pesquisa>:
  b0:	push	{fp, lr}
  b4:	add	fp, sp, #4
  b8:	sub	sp, sp, #8
  bc:	str	r0, [fp, #-8]
  c0:	str	r1, [fp, #-12]
  c4:	ldr	r3, [fp, #-8]
  c8:	cmp	r3, #0
  cc:	beq	dc <bst_pesquisa+0x2c>
  d0:	ldr	r3, [fp, #-12]
  d4:	cmp	r3, #0
  d8:	bne	e4 <bst_pesquisa+0x34>
  dc:	mov	r3, #0
  e0:	b	fc <bst_pesquisa+0x4c>
  e4:	ldr	r3, [fp, #-8]
  e8:	ldr	r3, [r3]
  ec:	ldr	r1, [fp, #-12]
  f0:	mov	r0, r3
  f4:	bl	3cc <bst_pesquisa_impl>
  f8:	mov	r3, r0
  fc:	mov	r0, r3
 100:	sub	sp, fp, #4
 104:	pop	{fp, pc}

00000108 <bst_insere>:
 108:	push	{fp, lr}
 10c:	add	fp, sp, #4
 110:	sub	sp, sp, #8
 114:	str	r0, [fp, #-8]
 118:	str	r1, [fp, #-12]
 11c:	ldr	r3, [fp, #-8]
 120:	cmp	r3, #0
 124:	beq	134 <bst_insere+0x2c>
 128:	ldr	r3, [fp, #-12]
 12c:	cmp	r3, #0
 130:	bne	13c <bst_insere+0x34>
 134:	mvn	r3, #0
 138:	b	160 <bst_insere+0x58>
 13c:	ldr	r3, [fp, #-8]
 140:	ldr	r3, [r3]
 144:	ldr	r1, [fp, #-12]
 148:	mov	r0, r3
 14c:	bl	47c <bst_insere_impl>
 150:	mov	r2, r0
 154:	ldr	r3, [fp, #-8]
 158:	str	r2, [r3]
 15c:	mov	r3, #0
 160:	mov	r0, r3
 164:	sub	sp, fp, #4
 168:	pop	{fp, pc}

0000016c <bst_remove>:
 16c:	push	{fp, lr}
 170:	add	fp, sp, #4
 174:	sub	sp, sp, #8
 178:	str	r0, [fp, #-8]
 17c:	str	r1, [fp, #-12]
 180:	ldr	r3, [fp, #-8]
 184:	cmp	r3, #0
 188:	beq	198 <bst_remove+0x2c>
 18c:	ldr	r3, [fp, #-12]
 190:	cmp	r3, #0
 194:	bne	1a0 <bst_remove+0x34>
 198:	mvn	r3, #0
 19c:	b	1c4 <bst_remove+0x58>
 1a0:	ldr	r3, [fp, #-8]
 1a4:	ldr	r3, [r3]
 1a8:	ldr	r1, [fp, #-12]
 1ac:	mov	r0, r3
 1b0:	bl	540 <bst_remove_impl>
 1b4:	mov	r2, r0
 1b8:	ldr	r3, [fp, #-8]
 1bc:	str	r2, [r3]
 1c0:	mov	r3, #0
 1c4:	mov	r0, r3
 1c8:	sub	sp, fp, #4
 1cc:	pop	{fp, pc}

000001d0 <bst_min>:
 1d0:	push	{fp, lr}
 1d4:	add	fp, sp, #4
 1d8:	sub	sp, sp, #8
 1dc:	str	r0, [fp, #-8]
 1e0:	ldr	r3, [fp, #-8]
 1e4:	cmp	r3, #0
 1e8:	bne	1f4 <bst_min+0x24>
 1ec:	mov	r3, #0
 1f0:	b	20c <bst_min+0x3c>
 1f4:	ldr	r3, [fp, #-8]
 1f8:	ldr	r3, [r3]
 1fc:	mov	r0, r3
 200:	bl	334 <bst_no_valormin>
 204:	mov	r3, r0
 208:	ldr	r3, [r3]
 20c:	mov	r0, r3
 210:	sub	sp, fp, #4
 214:	pop	{fp, pc}

00000218 <bst_max>:
 218:	push	{fp, lr}
 21c:	add	fp, sp, #4
 220:	sub	sp, sp, #8
 224:	str	r0, [fp, #-8]
 228:	ldr	r3, [fp, #-8]
 22c:	cmp	r3, #0
 230:	bne	23c <bst_max+0x24>
 234:	mov	r3, #0
 238:	b	254 <bst_max+0x3c>
 23c:	ldr	r3, [fp, #-8]
 240:	ldr	r3, [r3]
 244:	mov	r0, r3
 248:	bl	380 <bst_no_valormax>
 24c:	mov	r3, r0
 250:	ldr	r3, [r3]
 254:	mov	r0, r3
 258:	sub	sp, fp, #4
 25c:	pop	{fp, pc}

00000260 <bst_imprime>:
 260:	push	{fp, lr}
 264:	add	fp, sp, #4
 268:	sub	sp, sp, #8
 26c:	str	r0, [fp, #-8]
 270:	ldr	r3, [fp, #-8]
 274:	cmp	r3, #0
 278:	beq	2a0 <bst_imprime+0x40>
 27c:	ldr	r0, [pc, #40]	; 2ac <bst_imprime+0x4c>
 280:	bl	0 <printf>
 284:	ldr	r3, [fp, #-8]
 288:	ldr	r3, [r3]
 28c:	mov	r0, r3
 290:	bl	85c <bst_preordem_impl>
 294:	mov	r0, #10
 298:	bl	0 <putchar>
 29c:	b	2a4 <bst_imprime+0x44>
 2a0:	nop			; (mov r0, r0)
 2a4:	sub	sp, fp, #4
 2a8:	pop	{fp, pc}
 2ac:	.word	0x00000000

000002b0 <bst_novo_no>:
 2b0:	push	{fp, lr}
 2b4:	add	fp, sp, #4
 2b8:	sub	sp, sp, #16
 2bc:	str	r0, [fp, #-16]
 2c0:	mov	r0, #12
 2c4:	bl	0 <malloc>
 2c8:	mov	r3, r0
 2cc:	str	r3, [fp, #-8]
 2d0:	ldr	r0, [fp, #-16]
 2d4:	bl	0 <strlen>
 2d8:	mov	r3, r0
 2dc:	add	r3, r3, #1
 2e0:	mov	r0, r3
 2e4:	bl	0 <malloc>
 2e8:	mov	r3, r0
 2ec:	mov	r2, r3
 2f0:	ldr	r3, [fp, #-8]
 2f4:	str	r2, [r3]
 2f8:	ldr	r3, [fp, #-8]
 2fc:	ldr	r3, [r3]
 300:	ldr	r1, [fp, #-16]
 304:	mov	r0, r3
 308:	bl	0 <strcpy>
 30c:	ldr	r3, [fp, #-8]
 310:	mov	r2, #0
 314:	str	r2, [r3, #4]
 318:	ldr	r3, [fp, #-8]
 31c:	mov	r2, #0
 320:	str	r2, [r3, #8]
 324:	ldr	r3, [fp, #-8]
 328:	mov	r0, r3
 32c:	sub	sp, fp, #4
 330:	pop	{fp, pc}

00000334 <bst_no_valormin>:
 334:	push	{fp}		; (str fp, [sp, #-4]!)
 338:	add	fp, sp, #0
 33c:	sub	sp, sp, #20
 340:	str	r0, [fp, #-16]
 344:	ldr	r3, [fp, #-16]
 348:	str	r3, [fp, #-8]
 34c:	b	35c <bst_no_valormin+0x28>
 350:	ldr	r3, [fp, #-8]
 354:	ldr	r3, [r3, #4]
 358:	str	r3, [fp, #-8]
 35c:	ldr	r3, [fp, #-8]
 360:	ldr	r3, [r3, #4]
 364:	cmp	r3, #0
 368:	bne	350 <bst_no_valormin+0x1c>
 36c:	ldr	r3, [fp, #-8]
 370:	mov	r0, r3
 374:	add	sp, fp, #0
 378:	pop	{fp}		; (ldr fp, [sp], #4)
 37c:	bx	lr

00000380 <bst_no_valormax>:
 380:	push	{fp}		; (str fp, [sp, #-4]!)
 384:	add	fp, sp, #0
 388:	sub	sp, sp, #20
 38c:	str	r0, [fp, #-16]
 390:	ldr	r3, [fp, #-16]
 394:	str	r3, [fp, #-8]
 398:	b	3a8 <bst_no_valormax+0x28>
 39c:	ldr	r3, [fp, #-8]
 3a0:	ldr	r3, [r3, #8]
 3a4:	str	r3, [fp, #-8]
 3a8:	ldr	r3, [fp, #-8]
 3ac:	ldr	r3, [r3, #8]
 3b0:	cmp	r3, #0
 3b4:	bne	39c <bst_no_valormax+0x1c>
 3b8:	ldr	r3, [fp, #-8]
 3bc:	mov	r0, r3
 3c0:	add	sp, fp, #0
 3c4:	pop	{fp}		; (ldr fp, [sp], #4)
 3c8:	bx	lr

000003cc <bst_pesquisa_impl>:
 3cc:	push	{fp, lr}
 3d0:	add	fp, sp, #4
 3d4:	sub	sp, sp, #8
 3d8:	str	r0, [fp, #-8]
 3dc:	str	r1, [fp, #-12]
 3e0:	ldr	r3, [fp, #-8]
 3e4:	cmp	r3, #0
 3e8:	bne	3f4 <bst_pesquisa_impl+0x28>
 3ec:	mov	r3, #0
 3f0:	b	470 <bst_pesquisa_impl+0xa4>
 3f4:	ldr	r3, [fp, #-8]
 3f8:	ldr	r3, [r3]
 3fc:	mov	r1, r3
 400:	ldr	r0, [fp, #-12]
 404:	bl	0 <strcmp>
 408:	mov	r3, r0
 40c:	cmp	r3, #0
 410:	bge	430 <bst_pesquisa_impl+0x64>
 414:	ldr	r3, [fp, #-8]
 418:	ldr	r3, [r3, #4]
 41c:	ldr	r1, [fp, #-12]
 420:	mov	r0, r3
 424:	bl	3cc <bst_pesquisa_impl>
 428:	mov	r3, r0
 42c:	b	470 <bst_pesquisa_impl+0xa4>
 430:	ldr	r3, [fp, #-8]
 434:	ldr	r3, [r3]
 438:	mov	r1, r3
 43c:	ldr	r0, [fp, #-12]
 440:	bl	0 <strcmp>
 444:	mov	r3, r0
 448:	cmp	r3, #0
 44c:	ble	46c <bst_pesquisa_impl+0xa0>
 450:	ldr	r3, [fp, #-8]
 454:	ldr	r3, [r3, #8]
 458:	ldr	r1, [fp, #-12]
 45c:	mov	r0, r3
 460:	bl	3cc <bst_pesquisa_impl>
 464:	mov	r3, r0
 468:	b	470 <bst_pesquisa_impl+0xa4>
 46c:	ldr	r3, [fp, #-8]
 470:	mov	r0, r3
 474:	sub	sp, fp, #4
 478:	pop	{fp, pc}

0000047c <bst_insere_impl>:
 47c:	push	{fp, lr}
 480:	add	fp, sp, #4
 484:	sub	sp, sp, #8
 488:	str	r0, [fp, #-8]
 48c:	str	r1, [fp, #-12]
 490:	ldr	r3, [fp, #-8]
 494:	cmp	r3, #0
 498:	bne	4ac <bst_insere_impl+0x30>
 49c:	ldr	r0, [fp, #-12]
 4a0:	bl	2b0 <bst_novo_no>
 4a4:	mov	r3, r0
 4a8:	b	534 <bst_insere_impl+0xb8>
 4ac:	ldr	r3, [fp, #-8]
 4b0:	ldr	r3, [r3]
 4b4:	mov	r1, r3
 4b8:	ldr	r0, [fp, #-12]
 4bc:	bl	0 <strcmp>
 4c0:	mov	r3, r0
 4c4:	cmp	r3, #0
 4c8:	bge	4f0 <bst_insere_impl+0x74>
 4cc:	ldr	r3, [fp, #-8]
 4d0:	ldr	r3, [r3, #4]
 4d4:	ldr	r1, [fp, #-12]
 4d8:	mov	r0, r3
 4dc:	bl	47c <bst_insere_impl>
 4e0:	mov	r2, r0
 4e4:	ldr	r3, [fp, #-8]
 4e8:	str	r2, [r3, #4]
 4ec:	b	530 <bst_insere_impl+0xb4>
 4f0:	ldr	r3, [fp, #-8]
 4f4:	ldr	r3, [r3]
 4f8:	mov	r1, r3
 4fc:	ldr	r0, [fp, #-12]
 500:	bl	0 <strcmp>
 504:	mov	r3, r0
 508:	cmp	r3, #0
 50c:	ble	530 <bst_insere_impl+0xb4>
 510:	ldr	r3, [fp, #-8]
 514:	ldr	r3, [r3, #8]
 518:	ldr	r1, [fp, #-12]
 51c:	mov	r0, r3
 520:	bl	47c <bst_insere_impl>
 524:	mov	r2, r0
 528:	ldr	r3, [fp, #-8]
 52c:	str	r2, [r3, #8]
 530:	ldr	r3, [fp, #-8]
 534:	mov	r0, r3
 538:	sub	sp, fp, #4
 53c:	pop	{fp, pc}

00000540 <bst_remove_impl>:
 540:	push	{r4, fp, lr}
 544:	add	fp, sp, #8
 548:	sub	sp, sp, #20
 54c:	str	r0, [fp, #-24]	; 0xffffffe8
 550:	str	r1, [fp, #-28]	; 0xffffffe4
 554:	ldr	r3, [fp, #-24]	; 0xffffffe8
 558:	cmp	r3, #0
 55c:	bne	568 <bst_remove_impl+0x28>
 560:	ldr	r3, [fp, #-24]	; 0xffffffe8
 564:	b	77c <bst_remove_impl+0x23c>
 568:	ldr	r3, [fp, #-24]	; 0xffffffe8
 56c:	ldr	r3, [r3]
 570:	mov	r1, r3
 574:	ldr	r0, [fp, #-28]	; 0xffffffe4
 578:	bl	0 <strcmp>
 57c:	mov	r3, r0
 580:	cmp	r3, #0
 584:	bge	5ac <bst_remove_impl+0x6c>
 588:	ldr	r3, [fp, #-24]	; 0xffffffe8
 58c:	ldr	r3, [r3, #4]
 590:	ldr	r1, [fp, #-28]	; 0xffffffe4
 594:	mov	r0, r3
 598:	bl	540 <bst_remove_impl>
 59c:	mov	r2, r0
 5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5a4:	str	r2, [r3, #4]
 5a8:	b	778 <bst_remove_impl+0x238>
 5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5b0:	ldr	r3, [r3]
 5b4:	mov	r1, r3
 5b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 5bc:	bl	0 <strcmp>
 5c0:	mov	r3, r0
 5c4:	cmp	r3, #0
 5c8:	ble	5f0 <bst_remove_impl+0xb0>
 5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5d0:	ldr	r3, [r3, #8]
 5d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 5d8:	mov	r0, r3
 5dc:	bl	540 <bst_remove_impl>
 5e0:	mov	r2, r0
 5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5e8:	str	r2, [r3, #8]
 5ec:	b	778 <bst_remove_impl+0x238>
 5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5f4:	ldr	r3, [r3, #4]
 5f8:	cmp	r3, #0
 5fc:	beq	610 <bst_remove_impl+0xd0>
 600:	ldr	r3, [fp, #-24]	; 0xffffffe8
 604:	ldr	r3, [r3, #8]
 608:	cmp	r3, #0
 60c:	bne	6e8 <bst_remove_impl+0x1a8>
 610:	ldr	r3, [fp, #-24]	; 0xffffffe8
 614:	ldr	r3, [r3, #4]
 618:	cmp	r3, #0
 61c:	beq	62c <bst_remove_impl+0xec>
 620:	ldr	r3, [fp, #-24]	; 0xffffffe8
 624:	ldr	r3, [r3, #4]
 628:	b	634 <bst_remove_impl+0xf4>
 62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 630:	ldr	r3, [r3, #8]
 634:	str	r3, [fp, #-16]
 638:	ldr	r3, [fp, #-16]
 63c:	cmp	r3, #0
 640:	bne	658 <bst_remove_impl+0x118>
 644:	ldr	r3, [fp, #-24]	; 0xffffffe8
 648:	str	r3, [fp, #-16]
 64c:	mov	r3, #0
 650:	str	r3, [fp, #-24]	; 0xffffffe8
 654:	b	6cc <bst_remove_impl+0x18c>
 658:	ldr	r3, [fp, #-24]	; 0xffffffe8
 65c:	ldr	r4, [r3]
 660:	ldr	r3, [fp, #-16]
 664:	ldr	r3, [r3]
 668:	mov	r0, r3
 66c:	bl	0 <strlen>
 670:	mov	r3, r0
 674:	add	r3, r3, #1
 678:	mov	r1, r3
 67c:	mov	r0, r4
 680:	bl	0 <realloc>
 684:	mov	r2, r0
 688:	ldr	r3, [fp, #-24]	; 0xffffffe8
 68c:	str	r2, [r3]
 690:	ldr	r3, [fp, #-24]	; 0xffffffe8
 694:	ldr	r2, [r3]
 698:	ldr	r3, [fp, #-16]
 69c:	ldr	r3, [r3]
 6a0:	mov	r1, r3
 6a4:	mov	r0, r2
 6a8:	bl	0 <strcpy>
 6ac:	ldr	r3, [fp, #-16]
 6b0:	ldr	r2, [r3, #4]
 6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6b8:	str	r2, [r3, #4]
 6bc:	ldr	r3, [fp, #-16]
 6c0:	ldr	r2, [r3, #8]
 6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6c8:	str	r2, [r3, #8]
 6cc:	ldr	r3, [fp, #-16]
 6d0:	ldr	r3, [r3]
 6d4:	mov	r0, r3
 6d8:	bl	0 <free>
 6dc:	ldr	r0, [fp, #-16]
 6e0:	bl	0 <free>
 6e4:	b	778 <bst_remove_impl+0x238>
 6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6ec:	ldr	r3, [r3, #8]
 6f0:	mov	r0, r3
 6f4:	bl	334 <bst_no_valormin>
 6f8:	str	r0, [fp, #-20]	; 0xffffffec
 6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 700:	ldr	r4, [r3]
 704:	ldr	r3, [fp, #-20]	; 0xffffffec
 708:	ldr	r3, [r3]
 70c:	mov	r0, r3
 710:	bl	0 <strlen>
 714:	mov	r3, r0
 718:	add	r3, r3, #1
 71c:	mov	r1, r3
 720:	mov	r0, r4
 724:	bl	0 <realloc>
 728:	mov	r2, r0
 72c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 730:	str	r2, [r3]
 734:	ldr	r3, [fp, #-24]	; 0xffffffe8
 738:	ldr	r2, [r3]
 73c:	ldr	r3, [fp, #-20]	; 0xffffffec
 740:	ldr	r3, [r3]
 744:	mov	r1, r3
 748:	mov	r0, r2
 74c:	bl	0 <strcpy>
 750:	ldr	r3, [fp, #-24]	; 0xffffffe8
 754:	ldr	r2, [r3, #8]
 758:	ldr	r3, [fp, #-20]	; 0xffffffec
 75c:	ldr	r3, [r3]
 760:	mov	r1, r3
 764:	mov	r0, r2
 768:	bl	540 <bst_remove_impl>
 76c:	mov	r2, r0
 770:	ldr	r3, [fp, #-24]	; 0xffffffe8
 774:	str	r2, [r3, #8]
 778:	ldr	r3, [fp, #-24]	; 0xffffffe8
 77c:	mov	r0, r3
 780:	sub	sp, fp, #8
 784:	pop	{r4, fp, pc}

00000788 <bst_altura>:
 788:	push	{fp, lr}
 78c:	add	fp, sp, #4
 790:	sub	sp, sp, #16
 794:	str	r0, [fp, #-16]
 798:	mov	r3, #0
 79c:	str	r3, [fp, #-8]
 7a0:	mov	r3, #0
 7a4:	str	r3, [fp, #-12]
 7a8:	ldr	r3, [fp, #-16]
 7ac:	cmp	r3, #0
 7b0:	bne	7bc <bst_altura+0x34>
 7b4:	mvn	r3, #0
 7b8:	b	850 <bst_altura+0xc8>
 7bc:	ldr	r3, [fp, #-16]
 7c0:	ldr	r3, [r3, #8]
 7c4:	cmp	r3, #0
 7c8:	bne	7e4 <bst_altura+0x5c>
 7cc:	ldr	r3, [fp, #-16]
 7d0:	ldr	r3, [r3, #4]
 7d4:	cmp	r3, #0
 7d8:	bne	7e4 <bst_altura+0x5c>
 7dc:	mov	r3, #0
 7e0:	b	850 <bst_altura+0xc8>
 7e4:	ldr	r3, [fp, #-16]
 7e8:	ldr	r3, [r3, #4]
 7ec:	mov	r0, r3
 7f0:	bl	788 <bst_altura>
 7f4:	str	r0, [fp, #-8]
 7f8:	ldr	r3, [fp, #-16]
 7fc:	ldr	r3, [r3, #8]
 800:	mov	r0, r3
 804:	bl	788 <bst_altura>
 808:	str	r0, [fp, #-12]
 80c:	ldr	r2, [fp, #-8]
 810:	ldr	r3, [fp, #-12]
 814:	cmp	r2, r3
 818:	ble	838 <bst_altura+0xb0>
 81c:	ldr	r3, [fp, #-16]
 820:	ldr	r3, [r3, #4]
 824:	mov	r0, r3
 828:	bl	788 <bst_altura>
 82c:	mov	r3, r0
 830:	add	r3, r3, #1
 834:	b	850 <bst_altura+0xc8>
 838:	ldr	r3, [fp, #-16]
 83c:	ldr	r3, [r3, #8]
 840:	mov	r0, r3
 844:	bl	788 <bst_altura>
 848:	mov	r3, r0
 84c:	add	r3, r3, #1
 850:	mov	r0, r3
 854:	sub	sp, fp, #4
 858:	pop	{fp, pc}

0000085c <bst_preordem_impl>:
 85c:	push	{fp, lr}
 860:	add	fp, sp, #4
 864:	sub	sp, sp, #8
 868:	str	r0, [fp, #-8]
 86c:	ldr	r3, [fp, #-8]
 870:	cmp	r3, #0
 874:	beq	8b4 <bst_preordem_impl+0x58>
 878:	ldr	r3, [fp, #-8]
 87c:	ldr	r3, [r3]
 880:	mov	r1, r3
 884:	ldr	r0, [pc, #52]	; 8c0 <bst_preordem_impl+0x64>
 888:	bl	0 <printf>
 88c:	ldr	r3, [fp, #-8]
 890:	ldr	r3, [r3, #4]
 894:	mov	r0, r3
 898:	bl	85c <bst_preordem_impl>
 89c:	ldr	r3, [fp, #-8]
 8a0:	ldr	r3, [r3, #8]
 8a4:	mov	r0, r3
 8a8:	bl	85c <bst_preordem_impl>
 8ac:	nop			; (mov r0, r0)
 8b0:	b	8b8 <bst_preordem_impl+0x5c>
 8b4:	nop			; (mov r0, r0)
 8b8:	sub	sp, fp, #4
 8bc:	pop	{fp, pc}
 8c0:	.word	0x0000000c
