
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <mapping_delete>:
       0:	push	{r4, lr}
       4:	subs	r4, r0, #0
       8:	popeq	{r4, pc}
       c:	ldr	r0, [r4, #4]
      10:	cmp	r0, #0
      14:	beq	1c <mapping_delete+0x1c>
      18:	bl	0 <free>
      1c:	mov	r0, r4
      20:	pop	{r4, lr}
      24:	b	0 <free>

00000028 <mapping_type_add_mapping.isra.1>:
      28:	push	{r4, r5, r6, r7, r8, r9, lr}
      2c:	subs	r6, r2, #0
      30:	sub	sp, sp, #12
      34:	beq	144 <mapping_type_add_mapping.isra.1+0x11c>
      38:	cmp	r1, #0
      3c:	mov	r4, r1
      40:	beq	160 <mapping_type_add_mapping.isra.1+0x138>
      44:	ldr	r3, [r1]
      48:	mov	r7, r0
      4c:	cmp	r3, #0
      50:	beq	100 <mapping_type_add_mapping.isra.1+0xd8>
      54:	ldr	r1, [r3, #8]
      58:	tst	r1, #15
      5c:	beq	d8 <mapping_type_add_mapping.isra.1+0xb0>
      60:	ldr	r0, [r3, #12]
      64:	ldrd	r4, [r7]
      68:	add	r2, r1, #1
      6c:	str	r6, [r0, r1, lsl #2]
      70:	cmp	r4, #0
      74:	sbcs	r1, r5, #0
      78:	str	r2, [r3, #8]
      7c:	blt	cc <mapping_type_add_mapping.isra.1+0xa4>
      80:	ldrd	r4, [r3]
      84:	mov	r0, #0
      88:	cmp	r4, #0
      8c:	sbcs	r3, r5, #0
      90:	blt	c4 <mapping_type_add_mapping.isra.1+0x9c>
      94:	ldr	r2, [r6]
      98:	lsr	r0, r4, #3
      9c:	asr	r1, r5, #3
      a0:	asr	r3, r2, #31
      a4:	orr	r0, r0, r5, lsl #29
      a8:	cmp	r3, r1
      ac:	cmpeq	r2, r0
      b0:	beq	cc <mapping_type_add_mapping.isra.1+0xa4>
      b4:	mvn	r2, #0
      b8:	mvn	r3, #0
      bc:	mov	r0, #0
      c0:	strd	r2, [r7]
      c4:	add	sp, sp, #12
      c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
      cc:	mov	r0, #0
      d0:	add	sp, sp, #12
      d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
      d8:	add	r1, r1, #16
      dc:	ldr	r0, [r3, #12]
      e0:	lsl	r1, r1, #2
      e4:	bl	0 <realloc>
      e8:	cmp	r0, #0
      ec:	beq	17c <mapping_type_add_mapping.isra.1+0x154>
      f0:	ldr	r3, [r4]
      f4:	ldr	r1, [r3, #8]
      f8:	str	r0, [r3, #12]
      fc:	b	64 <mapping_type_add_mapping.isra.1+0x3c>
     100:	mov	r0, #16
     104:	bl	0 <malloc>
     108:	cmp	r0, #0
     10c:	str	r0, [r4]
     110:	beq	1ac <mapping_type_add_mapping.isra.1+0x184>
     114:	ldrd	r8, [r7]
     118:	mov	r1, #64	; 0x40
     11c:	cmp	r8, #0
     120:	sbcs	r3, r9, #0
     124:	mvnlt	r8, #0
     128:	mvnlt	r9, #0
     12c:	mov	r3, #0
     130:	strd	r8, [r0]
     134:	str	r3, [r0, #8]
     138:	str	r3, [r0, #12]
     13c:	mov	r0, r3
     140:	b	e4 <mapping_type_add_mapping.isra.1+0xbc>
     144:	mvn	r0, #99	; 0x63
     148:	mov	r3, #348	; 0x15c
     14c:	ldr	r2, [pc, #124]	; 1d0 <mapping_type_add_mapping.isra.1+0x1a8>
     150:	ldr	r1, [pc, #124]	; 1d4 <mapping_type_add_mapping.isra.1+0x1ac>
     154:	bl	0 <coda_set_error>
     158:	mvn	r0, #0
     15c:	b	c4 <mapping_type_add_mapping.isra.1+0x9c>
     160:	mvn	r0, #99	; 0x63
     164:	ldr	r3, [pc, #108]	; 1d8 <mapping_type_add_mapping.isra.1+0x1b0>
     168:	ldr	r2, [pc, #96]	; 1d0 <mapping_type_add_mapping.isra.1+0x1a8>
     16c:	ldr	r1, [pc, #104]	; 1dc <mapping_type_add_mapping.isra.1+0x1b4>
     170:	bl	0 <coda_set_error>
     174:	mvn	r0, #0
     178:	b	c4 <mapping_type_add_mapping.isra.1+0x9c>
     17c:	ldr	r2, [r4]
     180:	mov	r0, #380	; 0x17c
     184:	ldr	r3, [pc, #68]	; 1d0 <mapping_type_add_mapping.isra.1+0x1a8>
     188:	ldr	r2, [r2, #8]
     18c:	ldr	r1, [pc, #76]	; 1e0 <mapping_type_add_mapping.isra.1+0x1b8>
     190:	add	r2, r2, #16
     194:	str	r0, [sp]
     198:	lsl	r2, r2, #2
     19c:	mvn	r0, #0
     1a0:	bl	0 <coda_set_error>
     1a4:	mvn	r0, #0
     1a8:	b	c4 <mapping_type_add_mapping.isra.1+0x9c>
     1ac:	ldr	r2, [pc, #48]	; 1e4 <mapping_type_add_mapping.isra.1+0x1bc>
     1b0:	mvn	r0, #0
     1b4:	str	r2, [sp]
     1b8:	ldr	r3, [pc, #16]	; 1d0 <mapping_type_add_mapping.isra.1+0x1a8>
     1bc:	mov	r2, #16
     1c0:	ldr	r1, [pc, #24]	; 1e0 <mapping_type_add_mapping.isra.1+0x1b8>
     1c4:	bl	0 <coda_set_error>
     1c8:	mvn	r0, #0
     1cc:	b	c4 <mapping_type_add_mapping.isra.1+0x9c>
     1d0:	.word	0x00000000
     1d4:	.word	0x00000048
     1d8:	.word	0x00000161
     1dc:	.word	0x00000060
     1e0:	.word	0x00000078
     1e4:	.word	0x0000016b

000001e8 <coda_conversion_new>:
     1e8:	vcmp.f64	d1, #0.0
     1ec:	push	{r4, lr}
     1f0:	vpush	{d8-d11}
     1f4:	vmrs	APSR_nzcv, fpscr
     1f8:	sub	sp, sp, #8
     1fc:	beq	248 <coda_conversion_new+0x60>
     200:	mov	r0, #40	; 0x28
     204:	vmov.f64	d8, d1
     208:	vmov.f64	d11, d0
     20c:	vmov.f64	d10, d2
     210:	vmov.f64	d9, d3
     214:	bl	0 <malloc>
     218:	subs	r4, r0, #0
     21c:	beq	268 <coda_conversion_new+0x80>
     220:	vstr	d11, [r4]
     224:	vstr	d8, [r4, #8]
     228:	vstr	d10, [r4, #16]
     22c:	vstr	d9, [r4, #24]
     230:	mov	r3, #0
     234:	str	r3, [r4, #32]
     238:	mov	r0, r4
     23c:	add	sp, sp, #8
     240:	vpop	{d8-d11}
     244:	pop	{r4, pc}
     248:	ldr	r1, [pc, #56]	; 288 <coda_conversion_new+0xa0>
     24c:	ldr	r0, [pc, #56]	; 28c <coda_conversion_new+0xa4>
     250:	bl	0 <coda_set_error>
     254:	mov	r4, #0
     258:	mov	r0, r4
     25c:	add	sp, sp, #8
     260:	vpop	{d8-d11}
     264:	pop	{r4, pc}
     268:	mov	r3, #171	; 0xab
     26c:	str	r3, [sp]
     270:	mov	r2, #40	; 0x28
     274:	ldr	r3, [pc, #20]	; 290 <coda_conversion_new+0xa8>
     278:	ldr	r1, [pc, #20]	; 294 <coda_conversion_new+0xac>
     27c:	mvn	r0, #0
     280:	bl	0 <coda_set_error>
     284:	b	238 <coda_conversion_new+0x50>
     288:	.word	0x000000b0
     28c:	.word	0xfffffe70
     290:	.word	0x00000000
     294:	.word	0x00000078

00000298 <coda_conversion_set_unit>:
     298:	ldr	r3, [r0, #32]
     29c:	push	{r4, lr}
     2a0:	cmp	r3, #0
     2a4:	bne	2d0 <coda_conversion_set_unit+0x38>
     2a8:	cmp	r1, #0
     2ac:	mov	r4, r0
     2b0:	beq	2c4 <coda_conversion_set_unit+0x2c>
     2b4:	mov	r0, r1
     2b8:	bl	0 <strdup>
     2bc:	subs	r3, r0, #0
     2c0:	beq	2e4 <coda_conversion_set_unit+0x4c>
     2c4:	mov	r0, #0
     2c8:	str	r3, [r4, #32]
     2cc:	pop	{r4, pc}
     2d0:	ldr	r1, [pc, #40]	; 300 <coda_conversion_set_unit+0x68>
     2d4:	ldr	r0, [pc, #40]	; 304 <coda_conversion_set_unit+0x6c>
     2d8:	bl	0 <coda_set_error>
     2dc:	mvn	r0, #0
     2e0:	pop	{r4, pc}
     2e4:	mov	r3, #198	; 0xc6
     2e8:	ldr	r2, [pc, #24]	; 308 <coda_conversion_set_unit+0x70>
     2ec:	ldr	r1, [pc, #24]	; 30c <coda_conversion_set_unit+0x74>
     2f0:	mvn	r0, #0
     2f4:	bl	0 <coda_set_error>
     2f8:	mvn	r0, #0
     2fc:	pop	{r4, pc}
     300:	.word	0x000000d8
     304:	.word	0xfffffe70
     308:	.word	0x00000000
     30c:	.word	0x000000f8

00000310 <coda_conversion_delete>:
     310:	push	{r4, lr}
     314:	subs	r4, r0, #0
     318:	popeq	{r4, pc}
     31c:	ldr	r0, [r4, #32]
     320:	cmp	r0, #0
     324:	beq	32c <coda_conversion_delete+0x1c>
     328:	bl	0 <free>
     32c:	mov	r0, r4
     330:	pop	{r4, lr}
     334:	b	0 <free>

00000338 <coda_ascii_integer_mapping_new>:
     338:	push	{r4, r5, r6, r8, r9, lr}
     33c:	subs	r6, r0, #0
     340:	sub	sp, sp, #8
     344:	beq	3dc <coda_ascii_integer_mapping_new+0xa4>
     348:	mov	r8, r2
     34c:	mov	r9, r3
     350:	bl	0 <strlen>
     354:	cmp	r0, #64	; 0x40
     358:	mov	r5, r0
     35c:	bhi	3a4 <coda_ascii_integer_mapping_new+0x6c>
     360:	mov	r0, #16
     364:	bl	0 <malloc>
     368:	subs	r4, r0, #0
     36c:	beq	3bc <coda_ascii_integer_mapping_new+0x84>
     370:	mov	r3, #0
     374:	mov	r0, r6
     378:	strd	r8, [r4, #8]
     37c:	str	r3, [r4]
     380:	bl	0 <strdup>
     384:	cmp	r0, #0
     388:	mov	r6, r0
     38c:	str	r0, [r4, #4]
     390:	strne	r5, [r4]
     394:	beq	3f8 <coda_ascii_integer_mapping_new+0xc0>
     398:	mov	r0, r4
     39c:	add	sp, sp, #8
     3a0:	pop	{r4, r5, r6, r8, r9, pc}
     3a4:	mov	r2, r0
     3a8:	ldr	r1, [pc, #108]	; 41c <coda_ascii_integer_mapping_new+0xe4>
     3ac:	ldr	r0, [pc, #108]	; 420 <coda_ascii_integer_mapping_new+0xe8>
     3b0:	bl	0 <coda_set_error>
     3b4:	mov	r4, #0
     3b8:	b	398 <coda_ascii_integer_mapping_new+0x60>
     3bc:	ldr	r2, [pc, #96]	; 424 <coda_ascii_integer_mapping_new+0xec>
     3c0:	ldr	r3, [pc, #96]	; 428 <coda_ascii_integer_mapping_new+0xf0>
     3c4:	str	r2, [sp]
     3c8:	ldr	r1, [pc, #92]	; 42c <coda_ascii_integer_mapping_new+0xf4>
     3cc:	mov	r2, #16
     3d0:	mvn	r0, #0
     3d4:	bl	0 <coda_set_error>
     3d8:	b	398 <coda_ascii_integer_mapping_new+0x60>
     3dc:	ldr	r3, [pc, #76]	; 430 <coda_ascii_integer_mapping_new+0xf8>
     3e0:	ldr	r2, [pc, #64]	; 428 <coda_ascii_integer_mapping_new+0xf0>
     3e4:	ldr	r1, [pc, #72]	; 434 <coda_ascii_integer_mapping_new+0xfc>
     3e8:	mvn	r0, #99	; 0x63
     3ec:	mov	r4, r6
     3f0:	bl	0 <coda_set_error>
     3f4:	b	398 <coda_ascii_integer_mapping_new+0x60>
     3f8:	ldr	r3, [pc, #56]	; 438 <coda_ascii_integer_mapping_new+0x100>
     3fc:	ldr	r2, [pc, #36]	; 428 <coda_ascii_integer_mapping_new+0xf0>
     400:	ldr	r1, [pc, #52]	; 43c <coda_ascii_integer_mapping_new+0x104>
     404:	mvn	r0, #0
     408:	bl	0 <coda_set_error>
     40c:	mov	r0, r4
     410:	bl	0 <free>
     414:	mov	r4, r6
     418:	b	398 <coda_ascii_integer_mapping_new+0x60>
     41c:	.word	0x00000148
     420:	.word	0xfffffe70
     424:	.word	0x00000113
     428:	.word	0x00000000
     42c:	.word	0x00000078
     430:	.word	0x00000105
     434:	.word	0x0000012c
     438:	.word	0x0000011e
     43c:	.word	0x000000f8

00000440 <coda_ascii_integer_mapping_delete>:
     440:	b	0 <mapping_delete>

00000444 <coda_ascii_float_mapping_new>:
     444:	push	{r4, r5, r6, lr}
     448:	vpush	{d8}
     44c:	subs	r6, r0, #0
     450:	sub	sp, sp, #8
     454:	beq	4ec <coda_ascii_float_mapping_new+0xa8>
     458:	vmov.f64	d8, d0
     45c:	bl	0 <strlen>
     460:	cmp	r0, #64	; 0x40
     464:	mov	r5, r0
     468:	bhi	4b4 <coda_ascii_float_mapping_new+0x70>
     46c:	mov	r0, #16
     470:	bl	0 <malloc>
     474:	subs	r4, r0, #0
     478:	beq	4cc <coda_ascii_float_mapping_new+0x88>
     47c:	mov	r3, #0
     480:	mov	r0, r6
     484:	vstr	d8, [r4, #8]
     488:	str	r3, [r4]
     48c:	bl	0 <strdup>
     490:	cmp	r0, #0
     494:	mov	r6, r0
     498:	str	r0, [r4, #4]
     49c:	strne	r5, [r4]
     4a0:	beq	508 <coda_ascii_float_mapping_new+0xc4>
     4a4:	mov	r0, r4
     4a8:	add	sp, sp, #8
     4ac:	vpop	{d8}
     4b0:	pop	{r4, r5, r6, pc}
     4b4:	mov	r2, r0
     4b8:	ldr	r1, [pc, #108]	; 52c <coda_ascii_float_mapping_new+0xe8>
     4bc:	ldr	r0, [pc, #108]	; 530 <coda_ascii_float_mapping_new+0xec>
     4c0:	bl	0 <coda_set_error>
     4c4:	mov	r4, #0
     4c8:	b	4a4 <coda_ascii_float_mapping_new+0x60>
     4cc:	ldr	r2, [pc, #96]	; 534 <coda_ascii_float_mapping_new+0xf0>
     4d0:	ldr	r3, [pc, #96]	; 538 <coda_ascii_float_mapping_new+0xf4>
     4d4:	str	r2, [sp]
     4d8:	ldr	r1, [pc, #92]	; 53c <coda_ascii_float_mapping_new+0xf8>
     4dc:	mov	r2, #16
     4e0:	mvn	r0, #0
     4e4:	bl	0 <coda_set_error>
     4e8:	b	4a4 <coda_ascii_float_mapping_new+0x60>
     4ec:	ldr	r3, [pc, #76]	; 540 <coda_ascii_float_mapping_new+0xfc>
     4f0:	ldr	r2, [pc, #64]	; 538 <coda_ascii_float_mapping_new+0xf4>
     4f4:	ldr	r1, [pc, #72]	; 544 <coda_ascii_float_mapping_new+0x100>
     4f8:	mvn	r0, #99	; 0x63
     4fc:	mov	r4, r6
     500:	bl	0 <coda_set_error>
     504:	b	4a4 <coda_ascii_float_mapping_new+0x60>
     508:	ldr	r3, [pc, #56]	; 548 <coda_ascii_float_mapping_new+0x104>
     50c:	ldr	r2, [pc, #36]	; 538 <coda_ascii_float_mapping_new+0xf4>
     510:	ldr	r1, [pc, #52]	; 54c <coda_ascii_float_mapping_new+0x108>
     514:	mvn	r0, #0
     518:	bl	0 <coda_set_error>
     51c:	mov	r0, r4
     520:	bl	0 <free>
     524:	mov	r4, r6
     528:	b	4a4 <coda_ascii_float_mapping_new+0x60>
     52c:	.word	0x0000017c
     530:	.word	0xfffffe70
     534:	.word	0x0000013f
     538:	.word	0x00000000
     53c:	.word	0x00000078
     540:	.word	0x00000132
     544:	.word	0x0000012c
     548:	.word	0x0000014a
     54c:	.word	0x000000f8

00000550 <coda_ascii_float_mapping_delete>:
     550:	b	0 <mapping_delete>

00000554 <coda_type_record_field_delete>:
     554:	push	{r4, lr}
     558:	subs	r4, r0, #0
     55c:	popeq	{r4, pc}
     560:	ldr	r0, [r4]
     564:	cmp	r0, #0
     568:	beq	570 <coda_type_record_field_delete+0x1c>
     56c:	bl	0 <free>
     570:	ldr	r0, [r4, #4]
     574:	cmp	r0, #0
     578:	beq	580 <coda_type_record_field_delete+0x2c>
     57c:	bl	0 <free>
     580:	ldr	r0, [r4, #8]
     584:	cmp	r0, #0
     588:	beq	5a0 <coda_type_record_field_delete+0x4c>
     58c:	ldr	r3, [r0, #4]
     590:	cmp	r3, #0
     594:	ble	5cc <coda_type_record_field_delete+0x78>
     598:	sub	r3, r3, #1
     59c:	str	r3, [r0, #4]
     5a0:	ldr	r0, [r4, #20]
     5a4:	cmp	r0, #0
     5a8:	beq	5b0 <coda_type_record_field_delete+0x5c>
     5ac:	bl	0 <coda_expression_delete>
     5b0:	ldr	r0, [r4, #32]
     5b4:	cmp	r0, #0
     5b8:	beq	5c0 <coda_type_record_field_delete+0x6c>
     5bc:	bl	0 <coda_expression_delete>
     5c0:	mov	r0, r4
     5c4:	pop	{r4, lr}
     5c8:	b	0 <free>
     5cc:	bl	6a8 <coda_type_release.part.2>
     5d0:	b	5a0 <coda_type_record_field_delete+0x4c>

000005d4 <record_delete>:
     5d4:	push	{r4, r5, r6, lr}
     5d8:	subs	r5, r0, #0
     5dc:	popeq	{r4, r5, r6, pc}
     5e0:	ldr	r0, [r5, #16]
     5e4:	cmp	r0, #0
     5e8:	beq	5f0 <record_delete+0x1c>
     5ec:	bl	0 <free>
     5f0:	ldr	r0, [r5, #20]
     5f4:	cmp	r0, #0
     5f8:	beq	600 <record_delete+0x2c>
     5fc:	bl	0 <free>
     600:	ldr	r0, [r5, #32]
     604:	cmp	r0, #0
     608:	beq	610 <record_delete+0x3c>
     60c:	bl	0 <coda_expression_delete>
     610:	ldr	r0, [r5, #36]	; 0x24
     614:	cmp	r0, #0
     618:	beq	630 <record_delete+0x5c>
     61c:	ldr	r3, [r0, #4]
     620:	cmp	r3, #0
     624:	ble	6a0 <record_delete+0xcc>
     628:	sub	r3, r3, #1
     62c:	str	r3, [r0, #4]
     630:	ldr	r0, [r5, #40]	; 0x28
     634:	cmp	r0, #0
     638:	beq	640 <record_delete+0x6c>
     63c:	bl	0 <coda_hashtable_delete>
     640:	ldr	r0, [r5, #44]	; 0x2c
     644:	cmp	r0, #0
     648:	beq	650 <record_delete+0x7c>
     64c:	bl	0 <coda_hashtable_delete>
     650:	ldr	r3, [r5, #48]	; 0x30
     654:	cmp	r3, #0
     658:	ble	684 <record_delete+0xb0>
     65c:	mov	r4, #0
     660:	ldr	r3, [r5, #52]	; 0x34
     664:	ldr	r0, [r3, r4, lsl #2]
     668:	bl	554 <coda_type_record_field_delete>
     66c:	ldr	r3, [r5, #48]	; 0x30
     670:	add	r4, r4, #1
     674:	cmp	r3, r4
     678:	bgt	660 <record_delete+0x8c>
     67c:	ldr	r0, [r5, #52]	; 0x34
     680:	bl	0 <free>
     684:	ldr	r0, [r5, #68]	; 0x44
     688:	cmp	r0, #0
     68c:	beq	694 <record_delete+0xc0>
     690:	bl	0 <coda_expression_delete>
     694:	mov	r0, r5
     698:	pop	{r4, r5, r6, lr}
     69c:	b	0 <free>
     6a0:	bl	6a8 <coda_type_release.part.2>
     6a4:	b	630 <record_delete+0x5c>

000006a8 <coda_type_release.part.2>:
     6a8:	ldr	r3, [r0, #8]
     6ac:	push	{r4, r5, r6, lr}
     6b0:	mov	r4, r0
     6b4:	cmp	r3, #6
     6b8:	ldrls	pc, [pc, r3, lsl #2]
     6bc:	b	8e0 <coda_type_release.part.2+0x238>
     6c0:	.word	0x000006e4
     6c4:	.word	0x000006f4
     6c8:	.word	0x000007a4
     6cc:	.word	0x000007a4
     6d0:	.word	0x00000874
     6d4:	.word	0x000006ec
     6d8:	.word	0x000006dc
     6dc:	pop	{r4, r5, r6, lr}
     6e0:	b	984 <special_delete>
     6e4:	pop	{r4, r5, r6, lr}
     6e8:	b	5d4 <record_delete>
     6ec:	pop	{r4, r5, r6, lr}
     6f0:	b	904 <raw_delete>
     6f4:	ldr	r0, [r0, #16]
     6f8:	cmp	r0, #0
     6fc:	beq	704 <coda_type_release.part.2+0x5c>
     700:	bl	0 <free>
     704:	ldr	r0, [r4, #20]
     708:	cmp	r0, #0
     70c:	beq	714 <coda_type_release.part.2+0x6c>
     710:	bl	0 <free>
     714:	ldr	r0, [r4, #32]
     718:	cmp	r0, #0
     71c:	beq	724 <coda_type_release.part.2+0x7c>
     720:	bl	0 <coda_expression_delete>
     724:	ldr	r0, [r4, #36]	; 0x24
     728:	cmp	r0, #0
     72c:	beq	744 <coda_type_release.part.2+0x9c>
     730:	ldr	r3, [r0, #4]
     734:	cmp	r3, #0
     738:	ble	8e4 <coda_type_release.part.2+0x23c>
     73c:	sub	r3, r3, #1
     740:	str	r3, [r0, #4]
     744:	ldr	r0, [r4, #40]	; 0x28
     748:	cmp	r0, #0
     74c:	beq	764 <coda_type_release.part.2+0xbc>
     750:	ldr	r3, [r0, #4]
     754:	cmp	r3, #0
     758:	ble	8fc <coda_type_release.part.2+0x254>
     75c:	sub	r3, r3, #1
     760:	str	r3, [r0, #4]
     764:	ldr	r2, [r4, #48]	; 0x30
     768:	cmp	r2, #0
     76c:	addgt	r6, r4, #80	; 0x50
     770:	movgt	r5, #0
     774:	ble	8d4 <coda_type_release.part.2+0x22c>
     778:	ldr	r3, [r6, #4]!
     77c:	add	r5, r5, #1
     780:	subs	r0, r3, #0
     784:	beq	790 <coda_type_release.part.2+0xe8>
     788:	bl	0 <coda_expression_delete>
     78c:	ldr	r2, [r4, #48]	; 0x30
     790:	cmp	r5, r2
     794:	blt	778 <coda_type_release.part.2+0xd0>
     798:	mov	r0, r4
     79c:	pop	{r4, r5, r6, lr}
     7a0:	b	0 <free>
     7a4:	ldr	r0, [r0, #16]
     7a8:	cmp	r0, #0
     7ac:	beq	7b4 <coda_type_release.part.2+0x10c>
     7b0:	bl	0 <free>
     7b4:	ldr	r0, [r4, #20]
     7b8:	cmp	r0, #0
     7bc:	beq	7c4 <coda_type_release.part.2+0x11c>
     7c0:	bl	0 <free>
     7c4:	ldr	r0, [r4, #32]
     7c8:	cmp	r0, #0
     7cc:	beq	7d4 <coda_type_release.part.2+0x12c>
     7d0:	bl	0 <coda_expression_delete>
     7d4:	ldr	r0, [r4, #36]	; 0x24
     7d8:	cmp	r0, #0
     7dc:	beq	7f4 <coda_type_release.part.2+0x14c>
     7e0:	ldr	r3, [r0, #4]
     7e4:	cmp	r3, #0
     7e8:	ble	8f4 <coda_type_release.part.2+0x24c>
     7ec:	sub	r3, r3, #1
     7f0:	str	r3, [r0, #4]
     7f4:	ldr	r0, [r4, #40]	; 0x28
     7f8:	cmp	r0, #0
     7fc:	beq	804 <coda_type_release.part.2+0x15c>
     800:	bl	0 <free>
     804:	ldr	r0, [r4, #48]	; 0x30
     808:	cmp	r0, #0
     80c:	beq	814 <coda_type_release.part.2+0x16c>
     810:	bl	310 <coda_conversion_delete>
     814:	ldr	r6, [r4, #52]	; 0x34
     818:	cmp	r6, #0
     81c:	beq	8d4 <coda_type_release.part.2+0x22c>
     820:	ldr	r2, [r6, #12]
     824:	cmp	r2, #0
     828:	beq	868 <coda_type_release.part.2+0x1c0>
     82c:	ldr	r1, [r6, #8]
     830:	cmp	r1, #0
     834:	ble	860 <coda_type_release.part.2+0x1b8>
     838:	mov	r5, #0
     83c:	ldr	r3, [r2, r5, lsl #2]
     840:	add	r5, r5, #1
     844:	subs	r0, r3, #0
     848:	beq	858 <coda_type_release.part.2+0x1b0>
     84c:	bl	0 <mapping_delete>
     850:	ldr	r2, [r6, #12]
     854:	ldr	r1, [r6, #8]
     858:	cmp	r5, r1
     85c:	blt	83c <coda_type_release.part.2+0x194>
     860:	mov	r0, r2
     864:	bl	0 <free>
     868:	mov	r0, r6
     86c:	bl	0 <free>
     870:	b	8d4 <coda_type_release.part.2+0x22c>
     874:	ldr	r0, [r0, #16]
     878:	cmp	r0, #0
     87c:	beq	884 <coda_type_release.part.2+0x1dc>
     880:	bl	0 <free>
     884:	ldr	r0, [r4, #20]
     888:	cmp	r0, #0
     88c:	beq	894 <coda_type_release.part.2+0x1ec>
     890:	bl	0 <free>
     894:	ldr	r0, [r4, #32]
     898:	cmp	r0, #0
     89c:	beq	8a4 <coda_type_release.part.2+0x1fc>
     8a0:	bl	0 <coda_expression_delete>
     8a4:	ldr	r0, [r4, #36]	; 0x24
     8a8:	cmp	r0, #0
     8ac:	beq	8c4 <coda_type_release.part.2+0x21c>
     8b0:	ldr	r3, [r0, #4]
     8b4:	cmp	r3, #0
     8b8:	ble	8ec <coda_type_release.part.2+0x244>
     8bc:	sub	r3, r3, #1
     8c0:	str	r3, [r0, #4]
     8c4:	ldr	r0, [r4, #40]	; 0x28
     8c8:	cmp	r0, #0
     8cc:	beq	8d4 <coda_type_release.part.2+0x22c>
     8d0:	bl	0 <free>
     8d4:	mov	r0, r4
     8d8:	pop	{r4, r5, r6, lr}
     8dc:	b	0 <free>
     8e0:	pop	{r4, r5, r6, pc}
     8e4:	bl	6a8 <coda_type_release.part.2>
     8e8:	b	744 <coda_type_release.part.2+0x9c>
     8ec:	bl	6a8 <coda_type_release.part.2>
     8f0:	b	8c4 <coda_type_release.part.2+0x21c>
     8f4:	bl	6a8 <coda_type_release.part.2>
     8f8:	b	7f4 <coda_type_release.part.2+0x14c>
     8fc:	bl	6a8 <coda_type_release.part.2>
     900:	b	764 <coda_type_release.part.2+0xbc>

00000904 <raw_delete>:
     904:	push	{r4, lr}
     908:	subs	r4, r0, #0
     90c:	popeq	{r4, pc}
     910:	ldr	r0, [r4, #16]
     914:	cmp	r0, #0
     918:	beq	920 <raw_delete+0x1c>
     91c:	bl	0 <free>
     920:	ldr	r0, [r4, #20]
     924:	cmp	r0, #0
     928:	beq	930 <raw_delete+0x2c>
     92c:	bl	0 <free>
     930:	ldr	r0, [r4, #32]
     934:	cmp	r0, #0
     938:	beq	940 <raw_delete+0x3c>
     93c:	bl	0 <coda_expression_delete>
     940:	ldr	r0, [r4, #36]	; 0x24
     944:	cmp	r0, #0
     948:	beq	960 <raw_delete+0x5c>
     94c:	ldr	r3, [r0, #4]
     950:	cmp	r3, #0
     954:	ble	97c <raw_delete+0x78>
     958:	sub	r3, r3, #1
     95c:	str	r3, [r0, #4]
     960:	ldr	r0, [r4, #44]	; 0x2c
     964:	cmp	r0, #0
     968:	beq	970 <raw_delete+0x6c>
     96c:	bl	0 <free>
     970:	mov	r0, r4
     974:	pop	{r4, lr}
     978:	b	0 <free>
     97c:	bl	6a8 <coda_type_release.part.2>
     980:	b	960 <raw_delete+0x5c>

00000984 <special_delete>:
     984:	push	{r4, lr}
     988:	subs	r4, r0, #0
     98c:	popeq	{r4, pc}
     990:	ldr	r0, [r4, #16]
     994:	cmp	r0, #0
     998:	beq	9a0 <special_delete+0x1c>
     99c:	bl	0 <free>
     9a0:	ldr	r0, [r4, #20]
     9a4:	cmp	r0, #0
     9a8:	beq	9b0 <special_delete+0x2c>
     9ac:	bl	0 <free>
     9b0:	ldr	r0, [r4, #32]
     9b4:	cmp	r0, #0
     9b8:	beq	9c0 <special_delete+0x3c>
     9bc:	bl	0 <coda_expression_delete>
     9c0:	ldr	r0, [r4, #36]	; 0x24
     9c4:	cmp	r0, #0
     9c8:	beq	9e0 <special_delete+0x5c>
     9cc:	ldr	r3, [r0, #4]
     9d0:	cmp	r3, #0
     9d4:	ble	a2c <special_delete+0xa8>
     9d8:	sub	r3, r3, #1
     9dc:	str	r3, [r0, #4]
     9e0:	ldr	r0, [r4, #44]	; 0x2c
     9e4:	cmp	r0, #0
     9e8:	beq	a00 <special_delete+0x7c>
     9ec:	ldr	r3, [r0, #4]
     9f0:	cmp	r3, #0
     9f4:	ble	a34 <special_delete+0xb0>
     9f8:	sub	r3, r3, #1
     9fc:	str	r3, [r0, #4]
     a00:	ldr	r0, [r4, #48]	; 0x30
     a04:	cmp	r0, #0
     a08:	beq	a10 <special_delete+0x8c>
     a0c:	bl	0 <free>
     a10:	ldr	r0, [r4, #52]	; 0x34
     a14:	cmp	r0, #0
     a18:	beq	a20 <special_delete+0x9c>
     a1c:	bl	0 <coda_expression_delete>
     a20:	mov	r0, r4
     a24:	pop	{r4, lr}
     a28:	b	0 <free>
     a2c:	bl	6a8 <coda_type_release.part.2>
     a30:	b	9e0 <special_delete+0x5c>
     a34:	bl	6a8 <coda_type_release.part.2>
     a38:	b	a00 <special_delete+0x7c>

00000a3c <coda_type_release>:
     a3c:	subs	r2, r0, #0
     a40:	bxeq	lr
     a44:	ldr	r3, [r2, #4]
     a48:	cmp	r3, #0
     a4c:	ble	a5c <coda_type_release+0x20>
     a50:	sub	r3, r3, #1
     a54:	str	r3, [r2, #4]
     a58:	bx	lr
     a5c:	b	6a8 <coda_type_release.part.2>

00000a60 <coda_type_set_read_type>:
     a60:	cmp	r0, #0
     a64:	push	{r4, lr}
     a68:	beq	b40 <coda_type_set_read_type+0xe0>
     a6c:	ldr	r3, [r0, #8]
     a70:	cmp	r3, #6
     a74:	ldrls	pc, [pc, r3, lsl #2]
     a78:	b	b00 <coda_type_set_read_type+0xa0>
     a7c:	.word	0x00000ab0
     a80:	.word	0x00000ab0
     a84:	.word	0x00000acc
     a88:	.word	0x00000af0
     a8c:	.word	0x00000a98
     a90:	.word	0x00000ab0
     a94:	.word	0x00000ab0
     a98:	sub	r2, r1, #10
     a9c:	cmp	r2, #1
     aa0:	bhi	ad4 <coda_type_set_read_type+0x74>
     aa4:	str	r1, [r0, #12]
     aa8:	mov	r0, #0
     aac:	pop	{r4, pc}
     ab0:	ldr	r2, [pc, #164]	; b5c <coda_type_set_read_type+0xfc>
     ab4:	ldr	r1, [pc, #164]	; b60 <coda_type_set_read_type+0x100>
     ab8:	ldr	r0, [pc, #164]	; b64 <coda_type_set_read_type+0x104>
     abc:	ldr	r2, [r2, r3, lsl #2]
     ac0:	bl	0 <coda_set_error>
     ac4:	mvn	r0, #0
     ac8:	pop	{r4, pc}
     acc:	cmp	r1, #7
     ad0:	bls	aa4 <coda_type_set_read_type+0x44>
     ad4:	add	r1, r1, #1
     ad8:	cmp	r1, #13
     adc:	bls	b30 <coda_type_set_read_type+0xd0>
     ae0:	ldr	r2, [pc, #128]	; b68 <coda_type_set_read_type+0x108>
     ae4:	ldr	r1, [pc, #112]	; b5c <coda_type_set_read_type+0xfc>
     ae8:	ldr	r3, [r1, r3, lsl #2]
     aec:	b	b1c <coda_type_set_read_type+0xbc>
     af0:	sub	r2, r1, #8
     af4:	cmp	r2, #1
     af8:	bls	aa4 <coda_type_set_read_type+0x44>
     afc:	b	ad4 <coda_type_set_read_type+0x74>
     b00:	add	r1, r1, #1
     b04:	cmp	r1, #13
     b08:	bls	b30 <coda_type_set_read_type+0xd0>
     b0c:	ldr	r2, [pc, #84]	; b68 <coda_type_set_read_type+0x108>
     b10:	cmp	r3, #6
     b14:	bls	ae4 <coda_type_set_read_type+0x84>
     b18:	ldr	r3, [pc, #72]	; b68 <coda_type_set_read_type+0x108>
     b1c:	ldr	r1, [pc, #72]	; b6c <coda_type_set_read_type+0x10c>
     b20:	ldr	r0, [pc, #60]	; b64 <coda_type_set_read_type+0x104>
     b24:	bl	0 <coda_set_error>
     b28:	mvn	r0, #0
     b2c:	pop	{r4, pc}
     b30:	ldr	r2, [pc, #36]	; b5c <coda_type_set_read_type+0xfc>
     b34:	add	r1, r2, r1, lsl #2
     b38:	ldr	r2, [r1, #28]
     b3c:	b	b10 <coda_type_set_read_type+0xb0>
     b40:	ldr	r3, [pc, #40]	; b70 <coda_type_set_read_type+0x110>
     b44:	ldr	r2, [pc, #40]	; b74 <coda_type_set_read_type+0x114>
     b48:	ldr	r1, [pc, #40]	; b78 <coda_type_set_read_type+0x118>
     b4c:	mvn	r0, #99	; 0x63
     b50:	bl	0 <coda_set_error>
     b54:	mvn	r0, #0
     b58:	pop	{r4, pc}
     b5c:	.word	0x00000000
     b60:	.word	0x000001d4
     b64:	.word	0xfffffe70
     b68:	.word	0x000001ac
     b6c:	.word	0x00000204
     b70:	.word	0x000002c6
     b74:	.word	0x00000000
     b78:	.word	0x000001b4

00000b7c <coda_type_set_name>:
     b7c:	push	{r4, r5, r6, lr}
     b80:	subs	r6, r0, #0
     b84:	beq	bf8 <coda_type_set_name+0x7c>
     b88:	cmp	r1, #0
     b8c:	mov	r5, r1
     b90:	beq	c14 <coda_type_set_name+0x98>
     b94:	ldr	r4, [r6, #16]
     b98:	cmp	r4, #0
     b9c:	bne	bcc <coda_type_set_name+0x50>
     ba0:	mov	r0, r1
     ba4:	bl	0 <coda_is_identifier>
     ba8:	cmp	r0, #0
     bac:	beq	be0 <coda_type_set_name+0x64>
     bb0:	mov	r0, r5
     bb4:	bl	0 <strdup>
     bb8:	subs	r3, r0, #0
     bbc:	beq	c30 <coda_type_set_name+0xb4>
     bc0:	mov	r0, r4
     bc4:	str	r3, [r6, #16]
     bc8:	pop	{r4, r5, r6, pc}
     bcc:	ldr	r1, [pc, #120]	; c4c <coda_type_set_name+0xd0>
     bd0:	ldr	r0, [pc, #120]	; c50 <coda_type_set_name+0xd4>
     bd4:	bl	0 <coda_set_error>
     bd8:	mvn	r0, #0
     bdc:	pop	{r4, r5, r6, pc}
     be0:	mov	r2, r5
     be4:	ldr	r1, [pc, #104]	; c54 <coda_type_set_name+0xd8>
     be8:	sub	r0, r0, #400	; 0x190
     bec:	bl	0 <coda_set_error>
     bf0:	mvn	r0, #0
     bf4:	pop	{r4, r5, r6, pc}
     bf8:	ldr	r3, [pc, #88]	; c58 <coda_type_set_name+0xdc>
     bfc:	ldr	r2, [pc, #88]	; c5c <coda_type_set_name+0xe0>
     c00:	ldr	r1, [pc, #88]	; c60 <coda_type_set_name+0xe4>
     c04:	mvn	r0, #99	; 0x63
     c08:	bl	0 <coda_set_error>
     c0c:	mvn	r0, #0
     c10:	pop	{r4, r5, r6, pc}
     c14:	mov	r3, #764	; 0x2fc
     c18:	ldr	r2, [pc, #60]	; c5c <coda_type_set_name+0xe0>
     c1c:	ldr	r1, [pc, #64]	; c64 <coda_type_set_name+0xe8>
     c20:	mvn	r0, #99	; 0x63
     c24:	bl	0 <coda_set_error>
     c28:	mvn	r0, #0
     c2c:	pop	{r4, r5, r6, pc}
     c30:	ldr	r3, [pc, #48]	; c68 <coda_type_set_name+0xec>
     c34:	ldr	r2, [pc, #32]	; c5c <coda_type_set_name+0xe0>
     c38:	ldr	r1, [pc, #44]	; c6c <coda_type_set_name+0xf0>
     c3c:	mvn	r0, #0
     c40:	bl	0 <coda_set_error>
     c44:	mvn	r0, #0
     c48:	pop	{r4, r5, r6, pc}
     c4c:	.word	0x00000248
     c50:	.word	0xfffffe70
     c54:	.word	0x00000260
     c58:	.word	0x000002f7
     c5c:	.word	0x00000000
     c60:	.word	0x000001b4
     c64:	.word	0x00000228
     c68:	.word	0x0000030d
     c6c:	.word	0x000000f8

00000c70 <coda_type_set_description>:
     c70:	push	{r4, r5, r6, lr}
     c74:	subs	r5, r0, #0
     c78:	beq	cc0 <coda_type_set_description+0x50>
     c7c:	cmp	r1, #0
     c80:	beq	cdc <coda_type_set_description+0x6c>
     c84:	ldr	r4, [r5, #20]
     c88:	cmp	r4, #0
     c8c:	bne	cac <coda_type_set_description+0x3c>
     c90:	mov	r0, r1
     c94:	bl	0 <strdup>
     c98:	subs	r3, r0, #0
     c9c:	beq	cf8 <coda_type_set_description+0x88>
     ca0:	mov	r0, r4
     ca4:	str	r3, [r5, #20]
     ca8:	pop	{r4, r5, r6, pc}
     cac:	ldr	r1, [pc, #96]	; d14 <coda_type_set_description+0xa4>
     cb0:	ldr	r0, [pc, #96]	; d18 <coda_type_set_description+0xa8>
     cb4:	bl	0 <coda_set_error>
     cb8:	mvn	r0, #0
     cbc:	pop	{r4, r5, r6, pc}
     cc0:	ldr	r3, [pc, #84]	; d1c <coda_type_set_description+0xac>
     cc4:	ldr	r2, [pc, #84]	; d20 <coda_type_set_description+0xb0>
     cc8:	ldr	r1, [pc, #84]	; d24 <coda_type_set_description+0xb4>
     ccc:	mvn	r0, #99	; 0x63
     cd0:	bl	0 <coda_set_error>
     cd4:	mvn	r0, #0
     cd8:	pop	{r4, r5, r6, pc}
     cdc:	mov	r3, #800	; 0x320
     ce0:	ldr	r2, [pc, #56]	; d20 <coda_type_set_description+0xb0>
     ce4:	ldr	r1, [pc, #60]	; d28 <coda_type_set_description+0xb8>
     ce8:	mvn	r0, #99	; 0x63
     cec:	bl	0 <coda_set_error>
     cf0:	mvn	r0, #0
     cf4:	pop	{r4, r5, r6, pc}
     cf8:	ldr	r3, [pc, #44]	; d2c <coda_type_set_description+0xbc>
     cfc:	ldr	r2, [pc, #28]	; d20 <coda_type_set_description+0xb0>
     d00:	ldr	r1, [pc, #40]	; d30 <coda_type_set_description+0xc0>
     d04:	mvn	r0, #0
     d08:	bl	0 <coda_set_error>
     d0c:	mvn	r0, #0
     d10:	pop	{r4, r5, r6, pc}
     d14:	.word	0x000002ac
     d18:	.word	0xfffffe70
     d1c:	.word	0x0000031b
     d20:	.word	0x00000000
     d24:	.word	0x000001b4
     d28:	.word	0x00000284
     d2c:	.word	0x0000032e
     d30:	.word	0x000000f8

00000d34 <coda_type_set_bit_size>:
     d34:	subs	r1, r0, #0
     d38:	push	{r4, r5, r6, r7, lr}
     d3c:	sub	sp, sp, #28
     d40:	beq	ee0 <coda_type_set_bit_size+0x1ac>
     d44:	mov	r4, r2
     d48:	mov	r5, r3
     d4c:	ldrd	r2, [r1, #24]
     d50:	cmp	r2, #0
     d54:	sbcs	r3, r3, #0
     d58:	bge	e90 <coda_type_set_bit_size+0x15c>
     d5c:	ldr	r3, [r1, #32]
     d60:	cmp	r3, #0
     d64:	bne	e54 <coda_type_set_bit_size+0x120>
     d68:	cmp	r4, #0
     d6c:	sbcs	r3, r5, #0
     d70:	blt	eb8 <coda_type_set_bit_size+0x184>
     d74:	ldr	r3, [r1]
     d78:	cmp	r3, #0
     d7c:	bne	d90 <coda_type_set_bit_size+0x5c>
     d80:	and	r2, r4, #7
     d84:	mov	r3, #0
     d88:	orrs	r3, r2, r3
     d8c:	bne	e68 <coda_type_set_bit_size+0x134>
     d90:	ldr	r3, [r1, #8]
     d94:	sub	r3, r3, #2
     d98:	cmp	r3, #1
     d9c:	bhi	e2c <coda_type_set_bit_size+0xf8>
     da0:	ldr	r0, [r1, #52]	; 0x34
     da4:	cmp	r0, #0
     da8:	beq	e2c <coda_type_set_bit_size+0xf8>
     dac:	ldrd	r2, [r0]
     db0:	cmp	r2, #0
     db4:	sbcs	r3, r3, #0
     db8:	bge	ea4 <coda_type_set_bit_size+0x170>
     dbc:	ldr	ip, [r0, #8]
     dc0:	strd	r4, [r0]
     dc4:	cmp	ip, #0
     dc8:	strd	r4, [r1, #24]
     dcc:	ble	e20 <coda_type_set_bit_size+0xec>
     dd0:	ldr	r3, [r0, #12]
     dd4:	lsr	r6, r4, #3
     dd8:	orr	r6, r6, r5, lsl #29
     ddc:	ldr	r2, [r3]
     de0:	asr	r7, r5, #3
     de4:	ldr	lr, [r2]
     de8:	asr	r5, lr, #31
     dec:	cmp	r5, r7
     df0:	cmpeq	lr, r6
     df4:	moveq	r2, r3
     df8:	moveq	r3, #0
     dfc:	beq	e14 <coda_type_set_bit_size+0xe0>
     e00:	b	e3c <coda_type_set_bit_size+0x108>
     e04:	ldr	r0, [r2, #4]!
     e08:	ldr	r0, [r0]
     e0c:	cmp	r0, lr
     e10:	bne	e3c <coda_type_set_bit_size+0x108>
     e14:	add	r3, r3, #1
     e18:	cmp	r3, ip
     e1c:	bne	e04 <coda_type_set_bit_size+0xd0>
     e20:	mov	r0, #0
     e24:	add	sp, sp, #28
     e28:	pop	{r4, r5, r6, r7, pc}
     e2c:	mov	r0, #0
     e30:	strd	r4, [r1, #24]
     e34:	add	sp, sp, #28
     e38:	pop	{r4, r5, r6, r7, pc}
     e3c:	mvn	r2, #0
     e40:	mvn	r3, #0
     e44:	mov	r0, #0
     e48:	strd	r2, [r1, #24]
     e4c:	add	sp, sp, #28
     e50:	pop	{r4, r5, r6, r7, pc}
     e54:	ldr	r0, [pc, #160]	; efc <coda_type_set_bit_size+0x1c8>
     e58:	ldr	r1, [pc, #160]	; f00 <coda_type_set_bit_size+0x1cc>
     e5c:	bl	0 <coda_set_error>
     e60:	mvn	r0, #0
     e64:	b	e34 <coda_type_set_bit_size+0x100>
     e68:	mov	r0, r4
     e6c:	mov	r1, r5
     e70:	mov	r2, sp
     e74:	bl	0 <coda_str64>
     e78:	ldr	r0, [pc, #124]	; efc <coda_type_set_bit_size+0x1c8>
     e7c:	mov	r2, sp
     e80:	ldr	r1, [pc, #124]	; f04 <coda_type_set_bit_size+0x1d0>
     e84:	bl	0 <coda_set_error>
     e88:	mvn	r0, #0
     e8c:	b	e34 <coda_type_set_bit_size+0x100>
     e90:	ldr	r0, [pc, #100]	; efc <coda_type_set_bit_size+0x1c8>
     e94:	ldr	r1, [pc, #108]	; f08 <coda_type_set_bit_size+0x1d4>
     e98:	bl	0 <coda_set_error>
     e9c:	mvn	r0, #0
     ea0:	b	e34 <coda_type_set_bit_size+0x100>
     ea4:	ldr	r0, [pc, #80]	; efc <coda_type_set_bit_size+0x1c8>
     ea8:	ldr	r1, [pc, #92]	; f0c <coda_type_set_bit_size+0x1d8>
     eac:	bl	0 <coda_set_error>
     eb0:	mvn	r0, #0
     eb4:	b	e34 <coda_type_set_bit_size+0x100>
     eb8:	mov	r0, r4
     ebc:	mov	r1, r5
     ec0:	mov	r2, sp
     ec4:	bl	0 <coda_str64>
     ec8:	ldr	r0, [pc, #44]	; efc <coda_type_set_bit_size+0x1c8>
     ecc:	mov	r2, sp
     ed0:	ldr	r1, [pc, #56]	; f10 <coda_type_set_bit_size+0x1dc>
     ed4:	bl	0 <coda_set_error>
     ed8:	mvn	r0, #0
     edc:	b	e34 <coda_type_set_bit_size+0x100>
     ee0:	mvn	r0, #99	; 0x63
     ee4:	ldr	r3, [pc, #40]	; f14 <coda_type_set_bit_size+0x1e0>
     ee8:	ldr	r2, [pc, #40]	; f18 <coda_type_set_bit_size+0x1e4>
     eec:	ldr	r1, [pc, #40]	; f1c <coda_type_set_bit_size+0x1e8>
     ef0:	bl	0 <coda_set_error>
     ef4:	mvn	r0, #0
     ef8:	b	e34 <coda_type_set_bit_size+0x100>
     efc:	.word	0xfffffe70
     f00:	.word	0x000002e8
     f04:	.word	0x0000032c
     f08:	.word	0x000002cc
     f0c:	.word	0x00000370
     f10:	.word	0x00000310
     f14:	.word	0x0000033b
     f18:	.word	0x00000000
     f1c:	.word	0x000001b4

00000f20 <coda_type_set_byte_size>:
     f20:	lsl	r3, r3, #3
     f24:	orr	r3, r3, r2, lsr #29
     f28:	lsl	r2, r2, #3
     f2c:	b	d34 <coda_type_set_bit_size>

00000f30 <coda_type_set_bit_size_expression>:
     f30:	subs	r3, r0, #0
     f34:	push	{r4, r5, r6, lr}
     f38:	beq	fb8 <coda_type_set_bit_size_expression+0x88>
     f3c:	cmp	r1, #0
     f40:	beq	fd4 <coda_type_set_bit_size_expression+0xa4>
     f44:	ldr	r2, [r3, #32]
     f48:	cmp	r2, #0
     f4c:	bne	fa4 <coda_type_set_bit_size_expression+0x74>
     f50:	ldr	r2, [r3, #8]
     f54:	ldrd	r4, [r3, #24]
     f58:	cmp	r2, #1
     f5c:	bls	f84 <coda_type_set_bit_size_expression+0x54>
     f60:	cmp	r4, #0
     f64:	sbcs	r2, r5, #0
     f68:	bge	f90 <coda_type_set_bit_size_expression+0x60>
     f6c:	mvn	r4, #0
     f70:	mvn	r5, #0
     f74:	mov	r0, #0
     f78:	str	r1, [r3, #32]
     f7c:	strd	r4, [r3, #24]
     f80:	pop	{r4, r5, r6, pc}
     f84:	cmp	r4, #1
     f88:	sbcs	r2, r5, #0
     f8c:	blt	f6c <coda_type_set_bit_size_expression+0x3c>
     f90:	ldr	r1, [pc, #88]	; ff0 <coda_type_set_bit_size_expression+0xc0>
     f94:	ldr	r0, [pc, #88]	; ff4 <coda_type_set_bit_size_expression+0xc4>
     f98:	bl	0 <coda_set_error>
     f9c:	mvn	r0, #0
     fa0:	pop	{r4, r5, r6, pc}
     fa4:	ldr	r1, [pc, #76]	; ff8 <coda_type_set_bit_size_expression+0xc8>
     fa8:	ldr	r0, [pc, #68]	; ff4 <coda_type_set_bit_size_expression+0xc4>
     fac:	bl	0 <coda_set_error>
     fb0:	mvn	r0, #0
     fb4:	pop	{r4, r5, r6, pc}
     fb8:	mov	r3, #892	; 0x37c
     fbc:	ldr	r2, [pc, #56]	; ffc <coda_type_set_bit_size_expression+0xcc>
     fc0:	ldr	r1, [pc, #56]	; 1000 <coda_type_set_bit_size_expression+0xd0>
     fc4:	mvn	r0, #99	; 0x63
     fc8:	bl	0 <coda_set_error>
     fcc:	mvn	r0, #0
     fd0:	pop	{r4, r5, r6, pc}
     fd4:	ldr	r3, [pc, #40]	; 1004 <coda_type_set_bit_size_expression+0xd4>
     fd8:	ldr	r2, [pc, #28]	; ffc <coda_type_set_bit_size_expression+0xcc>
     fdc:	ldr	r1, [pc, #36]	; 1008 <coda_type_set_bit_size_expression+0xd8>
     fe0:	mvn	r0, #99	; 0x63
     fe4:	bl	0 <coda_set_error>
     fe8:	mvn	r0, #0
     fec:	pop	{r4, r5, r6, pc}
     ff0:	.word	0x000002cc
     ff4:	.word	0xfffffe70
     ff8:	.word	0x000002e8
     ffc:	.word	0x00000000
    1000:	.word	0x000001b4
    1004:	.word	0x00000381
    1008:	.word	0x00000390

0000100c <coda_type_set_byte_size_expression>:
    100c:	subs	r3, r0, #0
    1010:	push	{r4, r5, r6, lr}
    1014:	beq	1094 <coda_type_set_byte_size_expression+0x88>
    1018:	cmp	r1, #0
    101c:	beq	10b0 <coda_type_set_byte_size_expression+0xa4>
    1020:	ldr	r2, [r3, #32]
    1024:	cmp	r2, #0
    1028:	bne	1080 <coda_type_set_byte_size_expression+0x74>
    102c:	ldr	r2, [r3, #8]
    1030:	ldrd	r4, [r3, #24]
    1034:	cmp	r2, #1
    1038:	bls	1060 <coda_type_set_byte_size_expression+0x54>
    103c:	cmp	r4, #0
    1040:	sbcs	r2, r5, #0
    1044:	bge	106c <coda_type_set_byte_size_expression+0x60>
    1048:	mvn	r4, #7
    104c:	mvn	r5, #0
    1050:	mov	r0, #0
    1054:	str	r1, [r3, #32]
    1058:	strd	r4, [r3, #24]
    105c:	pop	{r4, r5, r6, pc}
    1060:	cmp	r4, #1
    1064:	sbcs	r2, r5, #0
    1068:	blt	1048 <coda_type_set_byte_size_expression+0x3c>
    106c:	ldr	r1, [pc, #88]	; 10cc <coda_type_set_byte_size_expression+0xc0>
    1070:	ldr	r0, [pc, #88]	; 10d0 <coda_type_set_byte_size_expression+0xc4>
    1074:	bl	0 <coda_set_error>
    1078:	mvn	r0, #0
    107c:	pop	{r4, r5, r6, pc}
    1080:	ldr	r1, [pc, #76]	; 10d4 <coda_type_set_byte_size_expression+0xc8>
    1084:	ldr	r0, [pc, #68]	; 10d0 <coda_type_set_byte_size_expression+0xc4>
    1088:	bl	0 <coda_set_error>
    108c:	mvn	r0, #0
    1090:	pop	{r4, r5, r6, pc}
    1094:	ldr	r3, [pc, #60]	; 10d8 <coda_type_set_byte_size_expression+0xcc>
    1098:	ldr	r2, [pc, #60]	; 10dc <coda_type_set_byte_size_expression+0xd0>
    109c:	ldr	r1, [pc, #60]	; 10e0 <coda_type_set_byte_size_expression+0xd4>
    10a0:	mvn	r0, #99	; 0x63
    10a4:	bl	0 <coda_set_error>
    10a8:	mvn	r0, #0
    10ac:	pop	{r4, r5, r6, pc}
    10b0:	mov	r3, #936	; 0x3a8
    10b4:	ldr	r2, [pc, #32]	; 10dc <coda_type_set_byte_size_expression+0xd0>
    10b8:	ldr	r1, [pc, #36]	; 10e4 <coda_type_set_byte_size_expression+0xd8>
    10bc:	mvn	r0, #99	; 0x63
    10c0:	bl	0 <coda_set_error>
    10c4:	mvn	r0, #0
    10c8:	pop	{r4, r5, r6, pc}
    10cc:	.word	0x00000408
    10d0:	.word	0xfffffe70
    10d4:	.word	0x000003e0
    10d8:	.word	0x000003a3
    10dc:	.word	0x00000000
    10e0:	.word	0x000001b4
    10e4:	.word	0x000003b8

000010e8 <coda_type_set_attributes>:
    10e8:	subs	r2, r0, #0
    10ec:	push	{r4, lr}
    10f0:	beq	1138 <coda_type_set_attributes+0x50>
    10f4:	cmp	r1, #0
    10f8:	beq	1154 <coda_type_set_attributes+0x6c>
    10fc:	ldr	r0, [r2, #36]	; 0x24
    1100:	cmp	r0, #0
    1104:	bne	111c <coda_type_set_attributes+0x34>
    1108:	ldr	r3, [r1, #4]
    110c:	str	r1, [r2, #36]	; 0x24
    1110:	add	r3, r3, #1
    1114:	str	r3, [r1, #4]
    1118:	pop	{r4, pc}
    111c:	ldr	r3, [pc, #76]	; 1170 <coda_type_set_attributes+0x88>
    1120:	ldr	r2, [pc, #76]	; 1174 <coda_type_set_attributes+0x8c>
    1124:	ldr	r1, [pc, #76]	; 1178 <coda_type_set_attributes+0x90>
    1128:	mvn	r0, #99	; 0x63
    112c:	bl	0 <coda_set_error>
    1130:	mvn	r0, #0
    1134:	pop	{r4, pc}
    1138:	ldr	r3, [pc, #60]	; 117c <coda_type_set_attributes+0x94>
    113c:	ldr	r2, [pc, #48]	; 1174 <coda_type_set_attributes+0x8c>
    1140:	ldr	r1, [pc, #56]	; 1180 <coda_type_set_attributes+0x98>
    1144:	mvn	r0, #99	; 0x63
    1148:	bl	0 <coda_set_error>
    114c:	mvn	r0, #0
    1150:	pop	{r4, pc}
    1154:	ldr	r3, [pc, #40]	; 1184 <coda_type_set_attributes+0x9c>
    1158:	ldr	r2, [pc, #20]	; 1174 <coda_type_set_attributes+0x8c>
    115c:	ldr	r1, [pc, #36]	; 1188 <coda_type_set_attributes+0xa0>
    1160:	mvn	r0, #99	; 0x63
    1164:	bl	0 <coda_set_error>
    1168:	mvn	r0, #0
    116c:	pop	{r4, pc}
    1170:	.word	0x000003eb
    1174:	.word	0x00000000
    1178:	.word	0x0000044c
    117c:	.word	0x000003e1
    1180:	.word	0x000001b4
    1184:	.word	0x000003e6
    1188:	.word	0x00000428

0000118c <coda_type_record_field_new>:
    118c:	push	{r4, r5, r6, r7, lr}
    1190:	subs	r5, r0, #0
    1194:	sub	sp, sp, #12
    1198:	beq	1218 <coda_type_record_field_new+0x8c>
    119c:	bl	0 <coda_is_identifier>
    11a0:	subs	r4, r0, #0
    11a4:	beq	1204 <coda_type_record_field_new+0x78>
    11a8:	mov	r0, #40	; 0x28
    11ac:	bl	0 <malloc>
    11b0:	subs	r4, r0, #0
    11b4:	beq	1234 <coda_type_record_field_new+0xa8>
    11b8:	mvn	r6, #0
    11bc:	mvn	r7, #0
    11c0:	mov	r3, #0
    11c4:	mov	r0, r5
    11c8:	strd	r6, [r4, #24]
    11cc:	str	r3, [r4, #4]
    11d0:	str	r3, [r4, #8]
    11d4:	str	r3, [r4, #12]
    11d8:	strb	r3, [r4, #16]
    11dc:	str	r3, [r4, #20]
    11e0:	str	r3, [r4, #32]
    11e4:	bl	0 <strdup>
    11e8:	cmp	r0, #0
    11ec:	mov	r5, r0
    11f0:	str	r0, [r4]
    11f4:	beq	1254 <coda_type_record_field_new+0xc8>
    11f8:	mov	r0, r4
    11fc:	add	sp, sp, #12
    1200:	pop	{r4, r5, r6, r7, pc}
    1204:	mov	r2, r5
    1208:	ldr	r1, [pc, #104]	; 1278 <coda_type_record_field_new+0xec>
    120c:	sub	r0, r0, #400	; 0x190
    1210:	bl	0 <coda_set_error>
    1214:	b	11f8 <coda_type_record_field_new+0x6c>
    1218:	ldr	r3, [pc, #92]	; 127c <coda_type_record_field_new+0xf0>
    121c:	ldr	r2, [pc, #92]	; 1280 <coda_type_record_field_new+0xf4>
    1220:	ldr	r1, [pc, #92]	; 1284 <coda_type_record_field_new+0xf8>
    1224:	mvn	r0, #99	; 0x63
    1228:	mov	r4, r5
    122c:	bl	0 <coda_set_error>
    1230:	b	11f8 <coda_type_record_field_new+0x6c>
    1234:	ldr	r2, [pc, #76]	; 1288 <coda_type_record_field_new+0xfc>
    1238:	ldr	r3, [pc, #64]	; 1280 <coda_type_record_field_new+0xf4>
    123c:	str	r2, [sp]
    1240:	ldr	r1, [pc, #68]	; 128c <coda_type_record_field_new+0x100>
    1244:	mov	r2, #40	; 0x28
    1248:	mvn	r0, #0
    124c:	bl	0 <coda_set_error>
    1250:	b	11f8 <coda_type_record_field_new+0x6c>
    1254:	ldr	r3, [pc, #52]	; 1290 <coda_type_record_field_new+0x104>
    1258:	ldr	r2, [pc, #32]	; 1280 <coda_type_record_field_new+0xf4>
    125c:	ldr	r1, [pc, #48]	; 1294 <coda_type_record_field_new+0x108>
    1260:	mvn	r0, #0
    1264:	bl	0 <coda_set_error>
    1268:	mov	r0, r4
    126c:	bl	554 <coda_type_record_field_delete>
    1270:	mov	r4, r5
    1274:	b	11f8 <coda_type_record_field_new+0x6c>
    1278:	.word	0x00000470
    127c:	.word	0x000003f9
    1280:	.word	0x00000000
    1284:	.word	0x00000228
    1288:	.word	0x00000407
    128c:	.word	0x00000078
    1290:	.word	0x00000417
    1294:	.word	0x000000f8

00001298 <coda_type_record_field_set_real_name>:
    1298:	push	{r4, r5, r6, lr}
    129c:	subs	r5, r0, #0
    12a0:	beq	12e8 <coda_type_record_field_set_real_name+0x50>
    12a4:	cmp	r1, #0
    12a8:	beq	1304 <coda_type_record_field_set_real_name+0x6c>
    12ac:	ldr	r4, [r5, #4]
    12b0:	cmp	r4, #0
    12b4:	bne	12d4 <coda_type_record_field_set_real_name+0x3c>
    12b8:	mov	r0, r1
    12bc:	bl	0 <strdup>
    12c0:	cmp	r0, #0
    12c4:	str	r0, [r5, #4]
    12c8:	beq	1320 <coda_type_record_field_set_real_name+0x88>
    12cc:	mov	r0, r4
    12d0:	pop	{r4, r5, r6, pc}
    12d4:	ldr	r1, [pc, #96]	; 133c <coda_type_record_field_set_real_name+0xa4>
    12d8:	ldr	r0, [pc, #96]	; 1340 <coda_type_record_field_set_real_name+0xa8>
    12dc:	bl	0 <coda_set_error>
    12e0:	mvn	r0, #0
    12e4:	pop	{r4, r5, r6, pc}
    12e8:	ldr	r3, [pc, #84]	; 1344 <coda_type_record_field_set_real_name+0xac>
    12ec:	ldr	r2, [pc, #84]	; 1348 <coda_type_record_field_set_real_name+0xb0>
    12f0:	ldr	r1, [pc, #84]	; 134c <coda_type_record_field_set_real_name+0xb4>
    12f4:	mvn	r0, #99	; 0x63
    12f8:	bl	0 <coda_set_error>
    12fc:	mvn	r0, #0
    1300:	pop	{r4, r5, r6, pc}
    1304:	ldr	r3, [pc, #68]	; 1350 <coda_type_record_field_set_real_name+0xb8>
    1308:	ldr	r2, [pc, #56]	; 1348 <coda_type_record_field_set_real_name+0xb0>
    130c:	ldr	r1, [pc, #64]	; 1354 <coda_type_record_field_set_real_name+0xbc>
    1310:	mvn	r0, #99	; 0x63
    1314:	bl	0 <coda_set_error>
    1318:	mvn	r0, #0
    131c:	pop	{r4, r5, r6, pc}
    1320:	ldr	r3, [pc, #48]	; 1358 <coda_type_record_field_set_real_name+0xc0>
    1324:	ldr	r2, [pc, #28]	; 1348 <coda_type_record_field_set_real_name+0xb0>
    1328:	ldr	r1, [pc, #44]	; 135c <coda_type_record_field_set_real_name+0xc4>
    132c:	mvn	r0, #0
    1330:	bl	0 <coda_set_error>
    1334:	mvn	r0, #0
    1338:	pop	{r4, r5, r6, pc}
    133c:	.word	0x000004f4
    1340:	.word	0xfffffe70
    1344:	.word	0x00000423
    1348:	.word	0x00000000
    134c:	.word	0x000004b0
    1350:	.word	0x00000428
    1354:	.word	0x000004d0
    1358:	.word	0x00000434
    135c:	.word	0x000000f8

00001360 <coda_type_record_field_set_type>:
    1360:	subs	r2, r0, #0
    1364:	push	{r4, lr}
    1368:	beq	13a8 <coda_type_record_field_set_type+0x48>
    136c:	cmp	r1, #0
    1370:	beq	13c4 <coda_type_record_field_set_type+0x64>
    1374:	ldr	r0, [r2, #8]
    1378:	cmp	r0, #0
    137c:	bne	1394 <coda_type_record_field_set_type+0x34>
    1380:	ldr	r3, [r1, #4]
    1384:	str	r1, [r2, #8]
    1388:	add	r3, r3, #1
    138c:	str	r3, [r1, #4]
    1390:	pop	{r4, pc}
    1394:	ldr	r1, [pc, #68]	; 13e0 <coda_type_record_field_set_type+0x80>
    1398:	ldr	r0, [pc, #68]	; 13e4 <coda_type_record_field_set_type+0x84>
    139c:	bl	0 <coda_set_error>
    13a0:	mvn	r0, #0
    13a4:	pop	{r4, pc}
    13a8:	ldr	r3, [pc, #56]	; 13e8 <coda_type_record_field_set_type+0x88>
    13ac:	ldr	r2, [pc, #56]	; 13ec <coda_type_record_field_set_type+0x8c>
    13b0:	ldr	r1, [pc, #56]	; 13f0 <coda_type_record_field_set_type+0x90>
    13b4:	mvn	r0, #99	; 0x63
    13b8:	bl	0 <coda_set_error>
    13bc:	mvn	r0, #0
    13c0:	pop	{r4, pc}
    13c4:	ldr	r3, [pc, #40]	; 13f4 <coda_type_record_field_set_type+0x94>
    13c8:	ldr	r2, [pc, #28]	; 13ec <coda_type_record_field_set_type+0x8c>
    13cc:	ldr	r1, [pc, #36]	; 13f8 <coda_type_record_field_set_type+0x98>
    13d0:	mvn	r0, #99	; 0x63
    13d4:	bl	0 <coda_set_error>
    13d8:	mvn	r0, #0
    13dc:	pop	{r4, pc}
    13e0:	.word	0x00000514
    13e4:	.word	0xfffffe70
    13e8:	.word	0x0000043f
    13ec:	.word	0x00000000
    13f0:	.word	0x000004b0
    13f4:	.word	0x00000444
    13f8:	.word	0x000001b4

000013fc <coda_type_record_field_set_hidden>:
    13fc:	subs	r3, r0, #0
    1400:	beq	1414 <coda_type_record_field_set_hidden+0x18>
    1404:	mov	r2, #1
    1408:	mov	r0, #0
    140c:	str	r2, [r3, #12]
    1410:	bx	lr
    1414:	push	{r4, lr}
    1418:	mvn	r0, #99	; 0x63
    141c:	ldr	r3, [pc, #16]	; 1434 <coda_type_record_field_set_hidden+0x38>
    1420:	ldr	r2, [pc, #16]	; 1438 <coda_type_record_field_set_hidden+0x3c>
    1424:	ldr	r1, [pc, #16]	; 143c <coda_type_record_field_set_hidden+0x40>
    1428:	bl	0 <coda_set_error>
    142c:	mvn	r0, #0
    1430:	pop	{r4, pc}
    1434:	.word	0x00000455
    1438:	.word	0x00000000
    143c:	.word	0x000004b0

00001440 <coda_type_record_field_set_optional>:
    1440:	subs	r3, r0, #0
    1444:	beq	1458 <coda_type_record_field_set_optional+0x18>
    1448:	mov	r2, #1
    144c:	mov	r0, #0
    1450:	strb	r2, [r3, #16]
    1454:	bx	lr
    1458:	push	{r4, lr}
    145c:	mov	r3, #1120	; 0x460
    1460:	ldr	r2, [pc, #16]	; 1478 <coda_type_record_field_set_optional+0x38>
    1464:	ldr	r1, [pc, #16]	; 147c <coda_type_record_field_set_optional+0x3c>
    1468:	mvn	r0, #99	; 0x63
    146c:	bl	0 <coda_set_error>
    1470:	mvn	r0, #0
    1474:	pop	{r4, pc}
    1478:	.word	0x00000000
    147c:	.word	0x000004b0

00001480 <coda_type_record_field_set_available_expression>:
    1480:	subs	r3, r0, #0
    1484:	push	{r4, lr}
    1488:	beq	14c4 <coda_type_record_field_set_available_expression+0x44>
    148c:	cmp	r1, #0
    1490:	beq	14e0 <coda_type_record_field_set_available_expression+0x60>
    1494:	ldr	r0, [r3, #20]
    1498:	cmp	r0, #0
    149c:	bne	14b0 <coda_type_record_field_set_available_expression+0x30>
    14a0:	mov	r2, #1
    14a4:	str	r1, [r3, #20]
    14a8:	strb	r2, [r3, #16]
    14ac:	pop	{r4, pc}
    14b0:	ldr	r1, [pc, #68]	; 14fc <coda_type_record_field_set_available_expression+0x7c>
    14b4:	ldr	r0, [pc, #68]	; 1500 <coda_type_record_field_set_available_expression+0x80>
    14b8:	bl	0 <coda_set_error>
    14bc:	mvn	r0, #0
    14c0:	pop	{r4, pc}
    14c4:	ldr	r3, [pc, #56]	; 1504 <coda_type_record_field_set_available_expression+0x84>
    14c8:	ldr	r2, [pc, #56]	; 1508 <coda_type_record_field_set_available_expression+0x88>
    14cc:	ldr	r1, [pc, #56]	; 150c <coda_type_record_field_set_available_expression+0x8c>
    14d0:	mvn	r0, #99	; 0x63
    14d4:	bl	0 <coda_set_error>
    14d8:	mvn	r0, #0
    14dc:	pop	{r4, pc}
    14e0:	mov	r3, #1136	; 0x470
    14e4:	ldr	r2, [pc, #28]	; 1508 <coda_type_record_field_set_available_expression+0x88>
    14e8:	ldr	r1, [pc, #32]	; 1510 <coda_type_record_field_set_available_expression+0x90>
    14ec:	mvn	r0, #99	; 0x63
    14f0:	bl	0 <coda_set_error>
    14f4:	mvn	r0, #0
    14f8:	pop	{r4, pc}
    14fc:	.word	0x00000558
    1500:	.word	0xfffffe70
    1504:	.word	0x0000046b
    1508:	.word	0x00000000
    150c:	.word	0x000004b0
    1510:	.word	0x00000530

00001514 <coda_type_record_field_set_bit_offset_expression>:
    1514:	subs	r3, r0, #0
    1518:	push	{r4, lr}
    151c:	beq	1588 <coda_type_record_field_set_bit_offset_expression+0x74>
    1520:	cmp	r1, #0
    1524:	beq	15a4 <coda_type_record_field_set_bit_offset_expression+0x90>
    1528:	ldr	r0, [r3, #32]
    152c:	cmp	r0, #0
    1530:	bne	1574 <coda_type_record_field_set_bit_offset_expression+0x60>
    1534:	ldr	r2, [r3, #8]
    1538:	ldr	r2, [r2]
    153c:	cmp	r2, #1
    1540:	bhi	154c <coda_type_record_field_set_bit_offset_expression+0x38>
    1544:	str	r1, [r3, #32]
    1548:	pop	{r4, pc}
    154c:	cmp	r2, #9
    1550:	ldr	r1, [pc, #104]	; 15c0 <coda_type_record_field_set_bit_offset_expression+0xac>
    1554:	ldrls	r3, [pc, #104]	; 15c4 <coda_type_record_field_set_bit_offset_expression+0xb0>
    1558:	ldrhi	r2, [pc, #104]	; 15c8 <coda_type_record_field_set_bit_offset_expression+0xb4>
    155c:	addls	r2, r3, r2, lsl #2
    1560:	ldr	r0, [pc, #100]	; 15cc <coda_type_record_field_set_bit_offset_expression+0xb8>
    1564:	ldrls	r2, [r2, #84]	; 0x54
    1568:	bl	0 <coda_set_error>
    156c:	mvn	r0, #0
    1570:	pop	{r4, pc}
    1574:	ldr	r1, [pc, #84]	; 15d0 <coda_type_record_field_set_bit_offset_expression+0xbc>
    1578:	ldr	r0, [pc, #76]	; 15cc <coda_type_record_field_set_bit_offset_expression+0xb8>
    157c:	bl	0 <coda_set_error>
    1580:	mvn	r0, #0
    1584:	pop	{r4, pc}
    1588:	ldr	r3, [pc, #68]	; 15d4 <coda_type_record_field_set_bit_offset_expression+0xc0>
    158c:	ldr	r2, [pc, #68]	; 15d8 <coda_type_record_field_set_bit_offset_expression+0xc4>
    1590:	ldr	r1, [pc, #68]	; 15dc <coda_type_record_field_set_bit_offset_expression+0xc8>
    1594:	mvn	r0, #99	; 0x63
    1598:	bl	0 <coda_set_error>
    159c:	mvn	r0, #0
    15a0:	pop	{r4, pc}
    15a4:	ldr	r3, [pc, #52]	; 15e0 <coda_type_record_field_set_bit_offset_expression+0xcc>
    15a8:	ldr	r2, [pc, #40]	; 15d8 <coda_type_record_field_set_bit_offset_expression+0xc4>
    15ac:	ldr	r1, [pc, #48]	; 15e4 <coda_type_record_field_set_bit_offset_expression+0xd0>
    15b0:	mvn	r0, #99	; 0x63
    15b4:	bl	0 <coda_set_error>
    15b8:	mvn	r0, #0
    15bc:	pop	{r4, pc}
    15c0:	.word	0x000005dc
    15c4:	.word	0x00000000
    15c8:	.word	0x000001ac
    15cc:	.word	0xfffffe70
    15d0:	.word	0x000005b0
    15d4:	.word	0x00000481
    15d8:	.word	0x00000000
    15dc:	.word	0x000004b0
    15e0:	.word	0x00000486
    15e4:	.word	0x00000584

000015e8 <coda_type_record_field_validate>:
    15e8:	cmp	r0, #0
    15ec:	push	{r4, lr}
    15f0:	beq	1608 <coda_type_record_field_validate+0x20>
    15f4:	ldr	r3, [r0, #8]
    15f8:	cmp	r3, #0
    15fc:	beq	1624 <coda_type_record_field_validate+0x3c>
    1600:	mov	r0, #0
    1604:	pop	{r4, pc}
    1608:	ldr	r3, [pc, #40]	; 1638 <coda_type_record_field_validate+0x50>
    160c:	ldr	r2, [pc, #40]	; 163c <coda_type_record_field_validate+0x54>
    1610:	ldr	r1, [pc, #40]	; 1640 <coda_type_record_field_validate+0x58>
    1614:	mvn	r0, #99	; 0x63
    1618:	bl	0 <coda_set_error>
    161c:	mvn	r0, #0
    1620:	pop	{r4, pc}
    1624:	ldr	r1, [pc, #24]	; 1644 <coda_type_record_field_validate+0x5c>
    1628:	ldr	r0, [pc, #24]	; 1648 <coda_type_record_field_validate+0x60>
    162c:	bl	0 <coda_set_error>
    1630:	mvn	r0, #0
    1634:	pop	{r4, pc}
    1638:	.word	0x0000049c
    163c:	.word	0x00000000
    1640:	.word	0x000004b0
    1644:	.word	0x00000620
    1648:	.word	0xfffffe70

0000164c <coda_type_record_field_get_type>:
    164c:	ldr	r3, [r0, #8]
    1650:	mov	r0, #0
    1654:	str	r3, [r1]
    1658:	bx	lr

0000165c <coda_type_record_new>:
    165c:	push	{r4, r5, lr}
    1660:	mov	r5, r0
    1664:	sub	sp, sp, #12
    1668:	mov	r0, #72	; 0x48
    166c:	bl	0 <malloc>
    1670:	subs	r4, r0, #0
    1674:	beq	1750 <coda_type_record_new+0xf4>
    1678:	mvn	r0, #0
    167c:	mvn	r1, #0
    1680:	mov	r3, #0
    1684:	mvn	r2, #0
    1688:	cmp	r5, #1
    168c:	str	r5, [r4]
    1690:	strd	r0, [r4, #24]
    1694:	str	r3, [r4, #4]
    1698:	str	r3, [r4, #8]
    169c:	str	r3, [r4, #16]
    16a0:	str	r3, [r4, #20]
    16a4:	str	r3, [r4, #32]
    16a8:	str	r3, [r4, #36]	; 0x24
    16ac:	str	r3, [r4, #40]	; 0x28
    16b0:	str	r3, [r4, #44]	; 0x2c
    16b4:	str	r3, [r4, #48]	; 0x30
    16b8:	str	r3, [r4, #52]	; 0x34
    16bc:	str	r3, [r4, #56]	; 0x38
    16c0:	str	r3, [r4, #60]	; 0x3c
    16c4:	str	r3, [r4, #64]	; 0x40
    16c8:	str	r3, [r4, #68]	; 0x44
    16cc:	str	r2, [r4, #12]
    16d0:	bls	1714 <coda_type_record_new+0xb8>
    16d4:	mov	r0, #0
    16d8:	bl	0 <coda_hashtable_new>
    16dc:	cmp	r0, #0
    16e0:	mov	r5, r0
    16e4:	str	r0, [r4, #40]	; 0x28
    16e8:	ldreq	r3, [pc, #128]	; 1770 <coda_type_record_new+0x114>
    16ec:	beq	1730 <coda_type_record_new+0xd4>
    16f0:	mov	r0, #1
    16f4:	bl	0 <coda_hashtable_new>
    16f8:	cmp	r0, #0
    16fc:	mov	r5, r0
    1700:	str	r0, [r4, #44]	; 0x2c
    1704:	beq	172c <coda_type_record_new+0xd0>
    1708:	mov	r0, r4
    170c:	add	sp, sp, #12
    1710:	pop	{r4, r5, pc}
    1714:	mov	r0, #0
    1718:	mov	r1, #0
    171c:	mov	r3, #12
    1720:	strd	r0, [r4, #24]
    1724:	str	r3, [r4, #12]
    1728:	b	16d4 <coda_type_record_new+0x78>
    172c:	ldr	r3, [pc, #64]	; 1774 <coda_type_record_new+0x118>
    1730:	ldr	r2, [pc, #64]	; 1778 <coda_type_record_new+0x11c>
    1734:	ldr	r1, [pc, #64]	; 177c <coda_type_record_new+0x120>
    1738:	mvn	r0, #0
    173c:	bl	0 <coda_set_error>
    1740:	mov	r0, r4
    1744:	bl	5d4 <record_delete>
    1748:	mov	r4, r5
    174c:	b	1708 <coda_type_record_new+0xac>
    1750:	ldr	r2, [pc, #40]	; 1780 <coda_type_record_new+0x124>
    1754:	ldr	r3, [pc, #28]	; 1778 <coda_type_record_new+0x11c>
    1758:	str	r2, [sp]
    175c:	ldr	r1, [pc, #32]	; 1784 <coda_type_record_new+0x128>
    1760:	mov	r2, #72	; 0x48
    1764:	mvn	r0, #0
    1768:	bl	0 <coda_set_error>
    176c:	b	1708 <coda_type_record_new+0xac>
    1770:	.word	0x000004d4
    1774:	.word	0x000004dd
    1778:	.word	0x00000000
    177c:	.word	0x00000644
    1780:	.word	0x000004b5
    1784:	.word	0x00000078

00001788 <coda_type_union_new>:
    1788:	push	{r4, lr}
    178c:	bl	165c <coda_type_record_new>
    1790:	cmp	r0, #0
    1794:	movne	r3, #1
    1798:	strne	r3, [r0, #64]	; 0x40
    179c:	pop	{r4, pc}

000017a0 <coda_type_empty_record>:
    17a0:	cmp	r0, #10
    17a4:	push	{r4, r5, r6, lr}
    17a8:	bhi	17f0 <coda_type_empty_record+0x50>
    17ac:	ldr	r4, [pc, #80]	; 1804 <coda_type_empty_record+0x64>
    17b0:	mov	r5, r0
    17b4:	bl	0 <__aeabi_read_tp>
    17b8:	add	r4, r4, r0
    17bc:	ldr	r0, [r4, r5, lsl #2]
    17c0:	cmp	r0, #0
    17c4:	popne	{r4, r5, r6, pc}
    17c8:	mov	r0, r5
    17cc:	bl	165c <coda_type_record_new>
    17d0:	cmp	r0, #0
    17d4:	str	r0, [r4, r5, lsl #2]
    17d8:	popne	{r4, r5, r6, pc}
    17dc:	ldr	r3, [pc, #36]	; 1808 <coda_type_empty_record+0x68>
    17e0:	ldr	r2, [pc, #36]	; 180c <coda_type_empty_record+0x6c>
    17e4:	ldr	r1, [pc, #36]	; 1810 <coda_type_empty_record+0x70>
    17e8:	ldr	r0, [pc, #36]	; 1814 <coda_type_empty_record+0x74>
    17ec:	bl	0 <__assert_fail>
    17f0:	ldr	r3, [pc, #16]	; 1808 <coda_type_empty_record+0x68>
    17f4:	ldr	r2, [pc, #28]	; 1818 <coda_type_empty_record+0x78>
    17f8:	ldr	r1, [pc, #16]	; 1810 <coda_type_empty_record+0x70>
    17fc:	ldr	r0, [pc, #24]	; 181c <coda_type_empty_record+0x7c>
    1800:	bl	0 <__assert_fail>
    1804:	.word	0x00000000
    1808:	.word	0x0000007c
    180c:	.word	0x000004f8
    1810:	.word	0x00000000
    1814:	.word	0x000006a0
    1818:	.word	0x000004f4
    181c:	.word	0x00000678

00001820 <coda_type_record_insert_field>:
    1820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1824:	subs	r4, r0, #0
    1828:	sub	sp, sp, #20
    182c:	beq	1bb8 <coda_type_record_insert_field+0x398>
    1830:	cmp	r2, #0
    1834:	mov	r5, r2
    1838:	beq	1b9c <coda_type_record_insert_field+0x37c>
    183c:	ldr	r3, [r2, #8]
    1840:	cmp	r3, #0
    1844:	beq	1bd4 <coda_type_record_insert_field+0x3b4>
    1848:	ldr	r2, [r4, #64]	; 0x40
    184c:	mov	r8, r1
    1850:	cmp	r2, #0
    1854:	bne	1914 <coda_type_record_insert_field+0xf4>
    1858:	ldr	r2, [r3]
    185c:	ldr	r3, [r4]
    1860:	cmp	r3, r2
    1864:	beq	187c <coda_type_record_insert_field+0x5c>
    1868:	cmp	r2, #0
    186c:	bne	1abc <coda_type_record_insert_field+0x29c>
    1870:	sub	r1, r3, #1
    1874:	cmp	r1, #1
    1878:	bhi	1ac8 <coda_type_record_insert_field+0x2a8>
    187c:	ldr	r1, [r4, #48]	; 0x30
    1880:	tst	r1, #15
    1884:	beq	1934 <coda_type_record_insert_field+0x114>
    1888:	ldr	r2, [r5]
    188c:	mov	r1, r8
    1890:	ldr	r0, [r4, #40]	; 0x28
    1894:	bl	0 <coda_hashtable_insert_name>
    1898:	subs	r6, r0, #0
    189c:	bne	1b24 <coda_type_record_insert_field+0x304>
    18a0:	ldr	r7, [r5, #4]
    18a4:	ldr	r0, [r4, #44]	; 0x2c
    18a8:	cmp	r7, #0
    18ac:	ldreq	r7, [r5]
    18b0:	mov	r1, r7
    18b4:	bl	0 <coda_hashtable_get_index_from_name>
    18b8:	cmp	r0, #0
    18bc:	blt	1aa8 <coda_type_record_insert_field+0x288>
    18c0:	ldr	r2, [r4, #48]	; 0x30
    18c4:	ldr	ip, [r4, #52]	; 0x34
    18c8:	cmp	r8, r2
    18cc:	lsl	r3, r8, #2
    18d0:	bge	18ec <coda_type_record_insert_field+0xcc>
    18d4:	add	r1, ip, r2, lsl #2
    18d8:	add	lr, ip, r3
    18dc:	ldr	r0, [r1, #-4]
    18e0:	str	r0, [r1], #-4
    18e4:	cmp	lr, r1
    18e8:	bne	18dc <coda_type_record_insert_field+0xbc>
    18ec:	ldr	r1, [r4]
    18f0:	add	lr, r2, #1
    18f4:	cmp	r1, #1
    18f8:	str	lr, [r4, #48]	; 0x30
    18fc:	add	r3, ip, r3
    1900:	str	r5, [ip, r8, lsl #2]
    1904:	bls	197c <coda_type_record_insert_field+0x15c>
    1908:	mov	r0, r6
    190c:	add	sp, sp, #20
    1910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1914:	ldrb	r2, [r5, #16]
    1918:	cmp	r2, #0
    191c:	bne	1858 <coda_type_record_insert_field+0x38>
    1920:	ldr	r1, [pc, #712]	; 1bf0 <coda_type_record_insert_field+0x3d0>
    1924:	ldr	r0, [pc, #712]	; 1bf4 <coda_type_record_insert_field+0x3d4>
    1928:	bl	0 <coda_set_error>
    192c:	mvn	r6, #0
    1930:	b	1908 <coda_type_record_insert_field+0xe8>
    1934:	add	r1, r1, #16
    1938:	ldr	r0, [r4, #52]	; 0x34
    193c:	lsl	r1, r1, #2
    1940:	bl	0 <realloc>
    1944:	cmp	r0, #0
    1948:	strne	r0, [r4, #52]	; 0x34
    194c:	bne	1888 <coda_type_record_insert_field+0x68>
    1950:	ldr	r2, [r4, #48]	; 0x30
    1954:	ldr	r3, [pc, #668]	; 1bf8 <coda_type_record_insert_field+0x3d8>
    1958:	add	r2, r2, #16
    195c:	str	r3, [sp]
    1960:	lsl	r2, r2, #2
    1964:	ldr	r3, [pc, #656]	; 1bfc <coda_type_record_insert_field+0x3dc>
    1968:	ldr	r1, [pc, #656]	; 1c00 <coda_type_record_insert_field+0x3e0>
    196c:	mvn	r0, #0
    1970:	bl	0 <coda_set_error>
    1974:	mvn	r6, #0
    1978:	b	1908 <coda_type_record_insert_field+0xe8>
    197c:	ldr	r7, [r4, #64]	; 0x40
    1980:	cmp	r7, #0
    1984:	beq	19d8 <coda_type_record_insert_field+0x1b8>
    1988:	ldr	r3, [r5, #32]
    198c:	cmp	r3, #0
    1990:	bne	1b3c <coda_type_record_insert_field+0x31c>
    1994:	mov	r2, #0
    1998:	mov	r3, #0
    199c:	cmp	lr, #1
    19a0:	strd	r2, [r5, #24]
    19a4:	beq	1afc <coda_type_record_insert_field+0x2dc>
    19a8:	ldr	r1, [r5, #8]
    19ac:	ldrd	r2, [r4, #24]
    19b0:	ldrd	r0, [r1, #24]
    19b4:	cmp	r3, r1
    19b8:	cmpeq	r2, r0
    19bc:	beq	1908 <coda_type_record_insert_field+0xe8>
    19c0:	mvn	r2, #0
    19c4:	mvn	r3, #0
    19c8:	mov	r0, r6
    19cc:	strd	r2, [r4, #24]
    19d0:	add	sp, sp, #20
    19d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19d8:	ldr	r1, [r5, #32]
    19dc:	cmp	r1, #0
    19e0:	beq	1b0c <coda_type_record_insert_field+0x2ec>
    19e4:	add	r8, r8, #1
    19e8:	cmp	lr, r8
    19ec:	addgt	r2, ip, r2, lsl #2
    19f0:	bgt	1a00 <coda_type_record_insert_field+0x1e0>
    19f4:	b	1a5c <coda_type_record_insert_field+0x23c>
    19f8:	cmp	r2, r3
    19fc:	beq	1a5c <coda_type_record_insert_field+0x23c>
    1a00:	ldr	r8, [r3, #4]!
    1a04:	ldr	r1, [r8, #32]
    1a08:	cmp	r1, #0
    1a0c:	bne	19f8 <coda_type_record_insert_field+0x1d8>
    1a10:	ldr	r9, [r3, #-4]
    1a14:	ldrd	r0, [r9, #24]
    1a18:	cmp	r0, #0
    1a1c:	sbcs	sl, r1, #0
    1a20:	strd	r0, [sp, #8]
    1a24:	blt	19f8 <coda_type_record_insert_field+0x1d8>
    1a28:	ldr	sl, [r9, #8]
    1a2c:	ldrd	sl, [sl, #24]
    1a30:	cmp	sl, #0
    1a34:	sbcs	r1, fp, #0
    1a38:	blt	19f8 <coda_type_record_insert_field+0x1d8>
    1a3c:	ldrb	r9, [r9, #16]
    1a40:	cmp	r9, #0
    1a44:	bne	19f8 <coda_type_record_insert_field+0x1d8>
    1a48:	ldrd	r0, [sp, #8]
    1a4c:	adds	r0, r0, sl
    1a50:	adc	r1, r1, fp
    1a54:	strd	r0, [r8, #24]
    1a58:	b	19f8 <coda_type_record_insert_field+0x1d8>
    1a5c:	ldrd	r2, [r4, #24]
    1a60:	cmp	r2, #0
    1a64:	sbcs	r1, r3, #0
    1a68:	blt	1908 <coda_type_record_insert_field+0xe8>
    1a6c:	ldr	r1, [r5, #8]
    1a70:	ldrd	r0, [r1, #24]
    1a74:	cmp	r0, #0
    1a78:	sbcs	r5, r1, #0
    1a7c:	blt	19c0 <coda_type_record_insert_field+0x1a0>
    1a80:	sub	lr, lr, #-1073741823	; 0xc0000001
    1a84:	ldr	ip, [ip, lr, lsl #2]
    1a88:	ldrb	ip, [ip, #16]
    1a8c:	cmp	ip, #0
    1a90:	bne	19c0 <coda_type_record_insert_field+0x1a0>
    1a94:	adds	r2, r2, r0
    1a98:	adc	r3, r3, r1
    1a9c:	mov	r6, r7
    1aa0:	strd	r2, [r4, #24]
    1aa4:	b	1908 <coda_type_record_insert_field+0xe8>
    1aa8:	mov	r2, r7
    1aac:	mov	r1, r8
    1ab0:	ldr	r0, [r4, #44]	; 0x2c
    1ab4:	bl	0 <coda_hashtable_insert_name>
    1ab8:	b	18c0 <coda_type_record_insert_field+0xa0>
    1abc:	cmp	r2, #9
    1ac0:	ldrhi	r2, [pc, #316]	; 1c04 <coda_type_record_insert_field+0x3e4>
    1ac4:	bhi	1ad4 <coda_type_record_insert_field+0x2b4>
    1ac8:	ldr	r1, [pc, #312]	; 1c08 <coda_type_record_insert_field+0x3e8>
    1acc:	add	r2, r1, r2, lsl #2
    1ad0:	ldr	r2, [r2, #84]	; 0x54
    1ad4:	cmp	r3, #9
    1ad8:	ldr	r0, [pc, #276]	; 1bf4 <coda_type_record_insert_field+0x3d4>
    1adc:	ldrls	r1, [pc, #292]	; 1c08 <coda_type_record_insert_field+0x3e8>
    1ae0:	ldrhi	r3, [pc, #284]	; 1c04 <coda_type_record_insert_field+0x3e4>
    1ae4:	addls	r3, r1, r3, lsl #2
    1ae8:	ldr	r1, [pc, #284]	; 1c0c <coda_type_record_insert_field+0x3ec>
    1aec:	ldrls	r3, [r3, #84]	; 0x54
    1af0:	bl	0 <coda_set_error>
    1af4:	mvn	r6, #0
    1af8:	b	1908 <coda_type_record_insert_field+0xe8>
    1afc:	ldr	r3, [r5, #8]
    1b00:	ldrd	r2, [r3, #24]
    1b04:	strd	r2, [r4, #24]
    1b08:	b	1908 <coda_type_record_insert_field+0xe8>
    1b0c:	cmp	r8, #0
    1b10:	bne	1b50 <coda_type_record_insert_field+0x330>
    1b14:	mov	r0, #0
    1b18:	mov	r1, #0
    1b1c:	strd	r0, [r5, #24]
    1b20:	b	19e4 <coda_type_record_insert_field+0x1c4>
    1b24:	ldr	r2, [r5]
    1b28:	ldr	r1, [pc, #224]	; 1c10 <coda_type_record_insert_field+0x3f0>
    1b2c:	ldr	r0, [pc, #192]	; 1bf4 <coda_type_record_insert_field+0x3d4>
    1b30:	bl	0 <coda_set_error>
    1b34:	mvn	r6, #0
    1b38:	b	1908 <coda_type_record_insert_field+0xe8>
    1b3c:	ldr	r1, [pc, #208]	; 1c14 <coda_type_record_insert_field+0x3f4>
    1b40:	ldr	r0, [pc, #172]	; 1bf4 <coda_type_record_insert_field+0x3d4>
    1b44:	bl	0 <coda_set_error>
    1b48:	mvn	r6, #0
    1b4c:	b	1908 <coda_type_record_insert_field+0xe8>
    1b50:	ldr	r9, [r3, #-4]
    1b54:	ldrd	r0, [r9, #24]
    1b58:	cmp	r0, #0
    1b5c:	sbcs	sl, r1, #0
    1b60:	strd	r0, [sp, #8]
    1b64:	blt	19e4 <coda_type_record_insert_field+0x1c4>
    1b68:	ldr	sl, [r9, #8]
    1b6c:	ldrd	sl, [sl, #24]
    1b70:	cmp	sl, #0
    1b74:	sbcs	r1, fp, #0
    1b78:	blt	19e4 <coda_type_record_insert_field+0x1c4>
    1b7c:	ldrb	r9, [r9, #16]
    1b80:	cmp	r9, #0
    1b84:	bne	19e4 <coda_type_record_insert_field+0x1c4>
    1b88:	ldrd	r0, [sp, #8]
    1b8c:	adds	r0, r0, sl
    1b90:	adc	r1, r1, fp
    1b94:	strd	r0, [r5, #24]
    1b98:	b	19e4 <coda_type_record_insert_field+0x1c4>
    1b9c:	ldr	r3, [pc, #116]	; 1c18 <coda_type_record_insert_field+0x3f8>
    1ba0:	ldr	r2, [pc, #84]	; 1bfc <coda_type_record_insert_field+0x3dc>
    1ba4:	ldr	r1, [pc, #112]	; 1c1c <coda_type_record_insert_field+0x3fc>
    1ba8:	mvn	r0, #99	; 0x63
    1bac:	bl	0 <coda_set_error>
    1bb0:	mvn	r6, #0
    1bb4:	b	1908 <coda_type_record_insert_field+0xe8>
    1bb8:	ldr	r3, [pc, #96]	; 1c20 <coda_type_record_insert_field+0x400>
    1bbc:	ldr	r2, [pc, #56]	; 1bfc <coda_type_record_insert_field+0x3dc>
    1bc0:	ldr	r1, [pc, #92]	; 1c24 <coda_type_record_insert_field+0x404>
    1bc4:	mvn	r0, #99	; 0x63
    1bc8:	bl	0 <coda_set_error>
    1bcc:	mvn	r6, #0
    1bd0:	b	1908 <coda_type_record_insert_field+0xe8>
    1bd4:	ldr	r3, [pc, #76]	; 1c28 <coda_type_record_insert_field+0x408>
    1bd8:	ldr	r2, [pc, #28]	; 1bfc <coda_type_record_insert_field+0x3dc>
    1bdc:	ldr	r1, [pc, #72]	; 1c2c <coda_type_record_insert_field+0x40c>
    1be0:	mvn	r0, #99	; 0x63
    1be4:	bl	0 <coda_set_error>
    1be8:	mvn	r6, #0
    1bec:	b	1908 <coda_type_record_insert_field+0xe8>
    1bf0:	.word	0x000006f0
    1bf4:	.word	0xfffffe70
    1bf8:	.word	0x0000052e
    1bfc:	.word	0x00000000
    1c00:	.word	0x00000078
    1c04:	.word	0x000001ac
    1c08:	.word	0x00000000
    1c0c:	.word	0x0000071c
    1c10:	.word	0x00000758
    1c14:	.word	0x0000078c
    1c18:	.word	0x0000050a
    1c1c:	.word	0x000004b0
    1c20:	.word	0x00000505
    1c24:	.word	0x000001b4
    1c28:	.word	0x0000050f
    1c2c:	.word	0x000006c8

00001c30 <coda_type_record_add_field>:
    1c30:	subs	r3, r0, #0
    1c34:	beq	1c44 <coda_type_record_add_field+0x14>
    1c38:	mov	r2, r1
    1c3c:	ldr	r1, [r3, #48]	; 0x30
    1c40:	b	1820 <coda_type_record_insert_field>
    1c44:	push	{r4, lr}
    1c48:	mov	r3, #1424	; 0x590
    1c4c:	ldr	r2, [pc, #16]	; 1c64 <coda_type_record_add_field+0x34>
    1c50:	ldr	r1, [pc, #16]	; 1c68 <coda_type_record_add_field+0x38>
    1c54:	mvn	r0, #99	; 0x63
    1c58:	bl	0 <coda_set_error>
    1c5c:	mvn	r0, #0
    1c60:	pop	{r4, pc}
    1c64:	.word	0x00000000
    1c68:	.word	0x000001b4

00001c6c <coda_type_add_attribute>:
    1c6c:	push	{r4, lr}
    1c70:	subs	r4, r0, #0
    1c74:	sub	sp, sp, #8
    1c78:	beq	1ce0 <coda_type_add_attribute+0x74>
    1c7c:	cmp	r1, #0
    1c80:	beq	1cc4 <coda_type_add_attribute+0x58>
    1c84:	ldr	r0, [r4, #36]	; 0x24
    1c88:	cmp	r0, #0
    1c8c:	beq	1c9c <coda_type_add_attribute+0x30>
    1c90:	add	sp, sp, #8
    1c94:	pop	{r4, lr}
    1c98:	b	1c30 <coda_type_record_add_field>
    1c9c:	ldr	r0, [r4]
    1ca0:	str	r1, [sp, #4]
    1ca4:	bl	165c <coda_type_record_new>
    1ca8:	ldr	r1, [sp, #4]
    1cac:	cmp	r0, #0
    1cb0:	str	r0, [r4, #36]	; 0x24
    1cb4:	bne	1c90 <coda_type_add_attribute+0x24>
    1cb8:	mvn	r0, #0
    1cbc:	add	sp, sp, #8
    1cc0:	pop	{r4, pc}
    1cc4:	mvn	r0, #99	; 0x63
    1cc8:	ldr	r3, [pc, #44]	; 1cfc <coda_type_add_attribute+0x90>
    1ccc:	ldr	r2, [pc, #44]	; 1d00 <coda_type_add_attribute+0x94>
    1cd0:	ldr	r1, [pc, #44]	; 1d04 <coda_type_add_attribute+0x98>
    1cd4:	bl	0 <coda_set_error>
    1cd8:	mvn	r0, #0
    1cdc:	b	1cbc <coda_type_add_attribute+0x50>
    1ce0:	mvn	r0, #99	; 0x63
    1ce4:	ldr	r3, [pc, #28]	; 1d08 <coda_type_add_attribute+0x9c>
    1ce8:	ldr	r2, [pc, #16]	; 1d00 <coda_type_add_attribute+0x94>
    1cec:	ldr	r1, [pc, #24]	; 1d0c <coda_type_add_attribute+0xa0>
    1cf0:	bl	0 <coda_set_error>
    1cf4:	mvn	r0, #0
    1cf8:	b	1cbc <coda_type_add_attribute+0x50>
    1cfc:	.word	0x000003cf
    1d00:	.word	0x00000000
    1d04:	.word	0x000007c0
    1d08:	.word	0x000003ca
    1d0c:	.word	0x000001b4

00001d10 <coda_type_union_set_field_expression>:
    1d10:	cmp	r0, #0
    1d14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d18:	beq	1dec <coda_type_union_set_field_expression+0xdc>
    1d1c:	cmp	r1, #0
    1d20:	beq	1e14 <coda_type_union_set_field_expression+0x104>
    1d24:	ldr	r3, [r0, #64]	; 0x40
    1d28:	cmp	r3, #0
    1d2c:	beq	1dd8 <coda_type_union_set_field_expression+0xc8>
    1d30:	ldr	r3, [r0, #68]	; 0x44
    1d34:	cmp	r3, #0
    1d38:	bne	1dc4 <coda_type_union_set_field_expression+0xb4>
    1d3c:	ldr	ip, [r0, #48]	; 0x30
    1d40:	str	r1, [r0, #68]	; 0x44
    1d44:	cmp	ip, #0
    1d48:	ble	1da4 <coda_type_union_set_field_expression+0x94>
    1d4c:	ldr	r2, [r0, #52]	; 0x34
    1d50:	mov	r6, #0
    1d54:	sub	r2, r2, #4
    1d58:	mov	r7, #0
    1d5c:	mvn	r8, #0
    1d60:	mvn	r9, #0
    1d64:	ldr	r1, [r2, #4]!
    1d68:	ldr	lr, [r1, #32]
    1d6c:	cmp	lr, #0
    1d70:	bne	1dac <coda_type_union_set_field_expression+0x9c>
    1d74:	cmp	r3, #0
    1d78:	strd	r6, [r1, #24]
    1d7c:	ldr	r1, [r1, #8]
    1d80:	beq	1e08 <coda_type_union_set_field_expression+0xf8>
    1d84:	ldrd	r4, [r0, #24]
    1d88:	ldrd	sl, [r1, #24]
    1d8c:	cmp	r5, fp
    1d90:	cmpeq	r4, sl
    1d94:	strdne	r8, [r0, #24]
    1d98:	add	r3, r3, #1
    1d9c:	cmp	ip, r3
    1da0:	bne	1d64 <coda_type_union_set_field_expression+0x54>
    1da4:	mov	r0, #0
    1da8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dac:	ldr	r2, [r1]
    1db0:	ldr	r0, [pc, #120]	; 1e30 <coda_type_union_set_field_expression+0x120>
    1db4:	ldr	r1, [pc, #120]	; 1e34 <coda_type_union_set_field_expression+0x124>
    1db8:	bl	0 <coda_set_error>
    1dbc:	mvn	r0, #0
    1dc0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dc4:	ldr	r1, [pc, #108]	; 1e38 <coda_type_union_set_field_expression+0x128>
    1dc8:	ldr	r0, [pc, #96]	; 1e30 <coda_type_union_set_field_expression+0x120>
    1dcc:	bl	0 <coda_set_error>
    1dd0:	mvn	r0, #0
    1dd4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dd8:	ldr	r1, [pc, #92]	; 1e3c <coda_type_union_set_field_expression+0x12c>
    1ddc:	ldr	r0, [pc, #76]	; 1e30 <coda_type_union_set_field_expression+0x120>
    1de0:	bl	0 <coda_set_error>
    1de4:	mvn	r0, #0
    1de8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dec:	ldr	r3, [pc, #76]	; 1e40 <coda_type_union_set_field_expression+0x130>
    1df0:	ldr	r2, [pc, #76]	; 1e44 <coda_type_union_set_field_expression+0x134>
    1df4:	ldr	r1, [pc, #76]	; 1e48 <coda_type_union_set_field_expression+0x138>
    1df8:	mvn	r0, #99	; 0x63
    1dfc:	bl	0 <coda_set_error>
    1e00:	mvn	r0, #0
    1e04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e08:	ldrd	r4, [r1, #24]
    1e0c:	strd	r4, [r0, #24]
    1e10:	b	1d98 <coda_type_union_set_field_expression+0x88>
    1e14:	ldr	r3, [pc, #48]	; 1e4c <coda_type_union_set_field_expression+0x13c>
    1e18:	ldr	r2, [pc, #36]	; 1e44 <coda_type_union_set_field_expression+0x134>
    1e1c:	ldr	r1, [pc, #44]	; 1e50 <coda_type_union_set_field_expression+0x140>
    1e20:	mvn	r0, #99	; 0x63
    1e24:	bl	0 <coda_set_error>
    1e28:	mvn	r0, #0
    1e2c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e30:	.word	0xfffffe70
    1e34:	.word	0x00000858
    1e38:	.word	0x00000824
    1e3c:	.word	0x00000808
    1e40:	.word	0x000005d2
    1e44:	.word	0x00000000
    1e48:	.word	0x000001b4
    1e4c:	.word	0x000005d7
    1e50:	.word	0x000007e4

00001e54 <coda_type_record_validate>:
    1e54:	subs	r3, r0, #0
    1e58:	push	{r4, lr}
    1e5c:	beq	1ec0 <coda_type_record_validate+0x6c>
    1e60:	ldr	r0, [r3, #64]	; 0x40
    1e64:	cmp	r0, #0
    1e68:	popeq	{r4, pc}
    1e6c:	ldr	r2, [r3, #48]	; 0x30
    1e70:	cmp	r2, #0
    1e74:	beq	1eac <coda_type_record_validate+0x58>
    1e78:	ldr	r2, [r3]
    1e7c:	cmp	r2, #1
    1e80:	bls	1e8c <coda_type_record_validate+0x38>
    1e84:	mov	r0, #0
    1e88:	pop	{r4, pc}
    1e8c:	ldr	r3, [r3, #68]	; 0x44
    1e90:	cmp	r3, #0
    1e94:	bne	1e84 <coda_type_record_validate+0x30>
    1e98:	ldr	r1, [pc, #60]	; 1edc <coda_type_record_validate+0x88>
    1e9c:	ldr	r0, [pc, #60]	; 1ee0 <coda_type_record_validate+0x8c>
    1ea0:	bl	0 <coda_set_error>
    1ea4:	mvn	r0, #0
    1ea8:	pop	{r4, pc}
    1eac:	ldr	r1, [pc, #48]	; 1ee4 <coda_type_record_validate+0x90>
    1eb0:	ldr	r0, [pc, #40]	; 1ee0 <coda_type_record_validate+0x8c>
    1eb4:	bl	0 <coda_set_error>
    1eb8:	mvn	r0, #0
    1ebc:	pop	{r4, pc}
    1ec0:	ldr	r3, [pc, #32]	; 1ee8 <coda_type_record_validate+0x94>
    1ec4:	ldr	r2, [pc, #32]	; 1eec <coda_type_record_validate+0x98>
    1ec8:	ldr	r1, [pc, #32]	; 1ef0 <coda_type_record_validate+0x9c>
    1ecc:	mvn	r0, #99	; 0x63
    1ed0:	bl	0 <coda_set_error>
    1ed4:	mvn	r0, #0
    1ed8:	pop	{r4, pc}
    1edc:	.word	0x000008c0
    1ee0:	.word	0xfffffe70
    1ee4:	.word	0x00000890
    1ee8:	.word	0x00000606
    1eec:	.word	0x00000000
    1ef0:	.word	0x000001b4

00001ef4 <coda_type_record_get_unique_field_name>:
    1ef4:	push	{r4, lr}
    1ef8:	mov	r4, r0
    1efc:	mov	r0, r1
    1f00:	ldr	r3, [r4]
    1f04:	cmp	r3, #2
    1f08:	beq	1f18 <coda_type_record_get_unique_field_name+0x24>
    1f0c:	ldr	r1, [r4, #40]	; 0x28
    1f10:	pop	{r4, lr}
    1f14:	b	0 <coda_identifier_from_name>
    1f18:	bl	0 <coda_element_name_from_xml_name>
    1f1c:	ldr	r1, [r4, #40]	; 0x28
    1f20:	pop	{r4, lr}
    1f24:	b	0 <coda_identifier_from_name>

00001f28 <coda_type_record_create_field>:
    1f28:	push	{r4, r5, r6, r7, r8, lr}
    1f2c:	subs	r8, r0, #0
    1f30:	beq	2000 <coda_type_record_create_field+0xd8>
    1f34:	cmp	r1, #0
    1f38:	mov	r4, r1
    1f3c:	beq	201c <coda_type_record_create_field+0xf4>
    1f40:	cmp	r2, #0
    1f44:	mov	r6, r2
    1f48:	beq	1fe4 <coda_type_record_create_field+0xbc>
    1f4c:	bl	1ef4 <coda_type_record_get_unique_field_name>
    1f50:	subs	r7, r0, #0
    1f54:	beq	1fdc <coda_type_record_create_field+0xb4>
    1f58:	bl	118c <coda_type_record_field_new>
    1f5c:	subs	r5, r0, #0
    1f60:	beq	1fd4 <coda_type_record_create_field+0xac>
    1f64:	mov	r1, r4
    1f68:	mov	r0, r7
    1f6c:	bl	0 <strcmp>
    1f70:	cmp	r0, #0
    1f74:	bne	1fb8 <coda_type_record_create_field+0x90>
    1f78:	mov	r0, r7
    1f7c:	bl	0 <free>
    1f80:	mov	r1, r6
    1f84:	mov	r0, r5
    1f88:	bl	1360 <coda_type_record_field_set_type>
    1f8c:	cmp	r0, #0
    1f90:	bne	1fa8 <coda_type_record_create_field+0x80>
    1f94:	mov	r0, r8
    1f98:	mov	r1, r5
    1f9c:	bl	1c30 <coda_type_record_add_field>
    1fa0:	cmp	r0, #0
    1fa4:	popeq	{r4, r5, r6, r7, r8, pc}
    1fa8:	mov	r0, r5
    1fac:	bl	554 <coda_type_record_field_delete>
    1fb0:	mvn	r0, #0
    1fb4:	pop	{r4, r5, r6, r7, r8, pc}
    1fb8:	mov	r1, r4
    1fbc:	mov	r0, r5
    1fc0:	bl	1298 <coda_type_record_field_set_real_name>
    1fc4:	cmp	r0, #0
    1fc8:	beq	1f78 <coda_type_record_create_field+0x50>
    1fcc:	mov	r0, r5
    1fd0:	bl	554 <coda_type_record_field_delete>
    1fd4:	mov	r0, r7
    1fd8:	bl	0 <free>
    1fdc:	mvn	r0, #0
    1fe0:	pop	{r4, r5, r6, r7, r8, pc}
    1fe4:	ldr	r3, [pc, #76]	; 2038 <coda_type_record_create_field+0x110>
    1fe8:	ldr	r2, [pc, #76]	; 203c <coda_type_record_create_field+0x114>
    1fec:	ldr	r1, [pc, #76]	; 2040 <coda_type_record_create_field+0x118>
    1ff0:	mvn	r0, #99	; 0x63
    1ff4:	bl	0 <coda_set_error>
    1ff8:	mvn	r0, #0
    1ffc:	pop	{r4, r5, r6, r7, r8, pc}
    2000:	ldr	r3, [pc, #60]	; 2044 <coda_type_record_create_field+0x11c>
    2004:	ldr	r2, [pc, #48]	; 203c <coda_type_record_create_field+0x114>
    2008:	ldr	r1, [pc, #56]	; 2048 <coda_type_record_create_field+0x120>
    200c:	mvn	r0, #99	; 0x63
    2010:	bl	0 <coda_set_error>
    2014:	mvn	r0, #0
    2018:	pop	{r4, r5, r6, r7, r8, pc}
    201c:	ldr	r3, [pc, #40]	; 204c <coda_type_record_create_field+0x124>
    2020:	ldr	r2, [pc, #20]	; 203c <coda_type_record_create_field+0x114>
    2024:	ldr	r1, [pc, #36]	; 2050 <coda_type_record_create_field+0x128>
    2028:	mvn	r0, #99	; 0x63
    202c:	bl	0 <coda_set_error>
    2030:	mvn	r0, #0
    2034:	pop	{r4, r5, r6, r7, r8, pc}
    2038:	.word	0x000005a7
    203c:	.word	0x00000000
    2040:	.word	0x000008e0
    2044:	.word	0x0000059d
    2048:	.word	0x000001b4
    204c:	.word	0x000005a2
    2050:	.word	0x000004d0

00002054 <coda_type_array_new>:
    2054:	push	{r4, r5, lr}
    2058:	mov	r5, r0
    205c:	sub	sp, sp, #12
    2060:	mov	r0, #120	; 0x78
    2064:	bl	0 <malloc>
    2068:	subs	r4, r0, #0
    206c:	beq	20cc <coda_type_array_new+0x78>
    2070:	mov	r3, #1
    2074:	mov	r2, #0
    2078:	cmp	r5, #1
    207c:	stmib	r4, {r2, r3}
    2080:	mvn	r0, #0
    2084:	movls	r3, #12
    2088:	mvnhi	r3, #0
    208c:	mvn	r1, #0
    2090:	str	r3, [r4, #12]
    2094:	mov	r2, #1
    2098:	mov	r3, #0
    209c:	str	r5, [r4]
    20a0:	strd	r0, [r4, #24]
    20a4:	str	r3, [r4, #16]
    20a8:	str	r3, [r4, #20]
    20ac:	str	r3, [r4, #32]
    20b0:	str	r3, [r4, #36]	; 0x24
    20b4:	str	r3, [r4, #40]	; 0x28
    20b8:	str	r3, [r4, #48]	; 0x30
    20bc:	str	r2, [r4, #44]	; 0x2c
    20c0:	mov	r0, r4
    20c4:	add	sp, sp, #12
    20c8:	pop	{r4, r5, pc}
    20cc:	ldr	r2, [pc, #24]	; 20ec <coda_type_array_new+0x98>
    20d0:	ldr	r3, [pc, #24]	; 20f0 <coda_type_array_new+0x9c>
    20d4:	str	r2, [sp]
    20d8:	ldr	r1, [pc, #20]	; 20f4 <coda_type_array_new+0xa0>
    20dc:	mov	r2, #120	; 0x78
    20e0:	mvn	r0, #0
    20e4:	bl	0 <coda_set_error>
    20e8:	b	20c0 <coda_type_array_new+0x6c>
    20ec:	.word	0x0000062d
    20f0:	.word	0x00000000
    20f4:	.word	0x00000078

000020f8 <coda_type_array_set_base_type>:
    20f8:	subs	r3, r0, #0
    20fc:	push	{r4, r5, r6, r7, r8, lr}
    2100:	beq	2228 <coda_type_array_set_base_type+0x130>
    2104:	ldr	r2, [r3, #40]	; 0x28
    2108:	cmp	r2, #0
    210c:	bne	21c0 <coda_type_array_set_base_type+0xc8>
    2110:	ldr	r0, [r3]
    2114:	ldr	r2, [r1]
    2118:	cmp	r0, r2
    211c:	beq	2194 <coda_type_array_set_base_type+0x9c>
    2120:	cmp	r2, #0
    2124:	bne	21e8 <coda_type_array_set_base_type+0xf0>
    2128:	sub	ip, r0, #1
    212c:	cmp	ip, #1
    2130:	bhi	21f4 <coda_type_array_set_base_type+0xfc>
    2134:	cmp	r0, #2
    2138:	beq	21a8 <coda_type_array_set_base_type+0xb0>
    213c:	ldr	r2, [r1, #4]
    2140:	cmp	r0, #1
    2144:	add	r2, r2, #1
    2148:	str	r1, [r3, #40]	; 0x28
    214c:	str	r2, [r1, #4]
    2150:	bhi	21b8 <coda_type_array_set_base_type+0xc0>
    2154:	ldr	r4, [r3, #44]	; 0x2c
    2158:	cmp	r4, #0
    215c:	blt	21b8 <coda_type_array_set_base_type+0xc0>
    2160:	ldrd	r0, [r1, #24]
    2164:	cmp	r0, #0
    2168:	sbcs	r2, r1, #0
    216c:	blt	21b8 <coda_type_array_set_base_type+0xc0>
    2170:	mul	r2, r4, r1
    2174:	asr	r7, r4, #31
    2178:	mov	r6, r4
    217c:	umull	r4, r5, r4, r0
    2180:	mla	r2, r0, r7, r2
    2184:	mov	r0, #0
    2188:	add	r5, r2, r5
    218c:	strd	r4, [r3, #24]
    2190:	pop	{r4, r5, r6, r7, r8, pc}
    2194:	cmp	r0, #2
    2198:	bne	213c <coda_type_array_set_base_type+0x44>
    219c:	ldr	r2, [r1, #8]
    21a0:	cmp	r2, #1
    21a4:	beq	21d4 <coda_type_array_set_base_type+0xdc>
    21a8:	ldr	r2, [r1, #4]
    21ac:	str	r1, [r3, #40]	; 0x28
    21b0:	add	r3, r2, #1
    21b4:	str	r3, [r1, #4]
    21b8:	mov	r0, #0
    21bc:	pop	{r4, r5, r6, r7, r8, pc}
    21c0:	ldr	r1, [pc, #124]	; 2244 <coda_type_array_set_base_type+0x14c>
    21c4:	ldr	r0, [pc, #124]	; 2248 <coda_type_array_set_base_type+0x150>
    21c8:	bl	0 <coda_set_error>
    21cc:	mvn	r0, #0
    21d0:	pop	{r4, r5, r6, r7, r8, pc}
    21d4:	ldr	r1, [pc, #112]	; 224c <coda_type_array_set_base_type+0x154>
    21d8:	ldr	r0, [pc, #104]	; 2248 <coda_type_array_set_base_type+0x150>
    21dc:	bl	0 <coda_set_error>
    21e0:	mvn	r0, #0
    21e4:	pop	{r4, r5, r6, r7, r8, pc}
    21e8:	cmp	r2, #9
    21ec:	ldrhi	r2, [pc, #92]	; 2250 <coda_type_array_set_base_type+0x158>
    21f0:	bhi	2200 <coda_type_array_set_base_type+0x108>
    21f4:	ldr	r3, [pc, #88]	; 2254 <coda_type_array_set_base_type+0x15c>
    21f8:	add	r2, r3, r2, lsl #2
    21fc:	ldr	r2, [r2, #84]	; 0x54
    2200:	cmp	r0, #9
    2204:	ldr	r1, [pc, #76]	; 2258 <coda_type_array_set_base_type+0x160>
    2208:	ldrls	r3, [pc, #68]	; 2254 <coda_type_array_set_base_type+0x15c>
    220c:	ldrhi	r3, [pc, #60]	; 2250 <coda_type_array_set_base_type+0x158>
    2210:	addls	r0, r3, r0, lsl #2
    2214:	ldrls	r3, [r0, #84]	; 0x54
    2218:	ldr	r0, [pc, #40]	; 2248 <coda_type_array_set_base_type+0x150>
    221c:	bl	0 <coda_set_error>
    2220:	mvn	r0, #0
    2224:	pop	{r4, r5, r6, r7, r8, pc}
    2228:	ldr	r3, [pc, #44]	; 225c <coda_type_array_set_base_type+0x164>
    222c:	ldr	r2, [pc, #44]	; 2260 <coda_type_array_set_base_type+0x168>
    2230:	ldr	r1, [pc, #44]	; 2264 <coda_type_array_set_base_type+0x16c>
    2234:	mvn	r0, #99	; 0x63
    2238:	bl	0 <coda_set_error>
    223c:	mvn	r0, #0
    2240:	pop	{r4, r5, r6, r7, r8, pc}
    2244:	.word	0x00000904
    2248:	.word	0xfffffe70
    224c:	.word	0x00000960
    2250:	.word	0x000001ac
    2254:	.word	0x00000000
    2258:	.word	0x00000924
    225c:	.word	0x0000064b
    2260:	.word	0x00000000
    2264:	.word	0x000001b4

00002268 <coda_type_array_add_fixed_dimension>:
    2268:	subs	r3, r0, #0
    226c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2270:	beq	233c <coda_type_array_add_fixed_dimension+0xd4>
    2274:	cmp	r1, #0
    2278:	blt	2324 <coda_type_array_add_fixed_dimension+0xbc>
    227c:	ldr	r2, [r3, #48]	; 0x30
    2280:	cmp	r2, #8
    2284:	beq	2310 <coda_type_array_add_fixed_dimension+0xa8>
    2288:	add	r0, r3, r2, lsl #2
    228c:	mov	ip, #0
    2290:	str	r1, [r0, #52]	; 0x34
    2294:	str	ip, [r0, #84]	; 0x54
    2298:	ldr	r0, [r3, #44]	; 0x2c
    229c:	add	r2, r2, #1
    22a0:	cmn	r0, #1
    22a4:	str	r2, [r3, #48]	; 0x30
    22a8:	beq	22c4 <coda_type_array_add_fixed_dimension+0x5c>
    22ac:	cmp	r2, #1
    22b0:	ldr	r2, [r3]
    22b4:	mulne	r1, r0, r1
    22b8:	cmp	r2, #1
    22bc:	str	r1, [r3, #44]	; 0x2c
    22c0:	bls	22cc <coda_type_array_add_fixed_dimension+0x64>
    22c4:	mov	r0, #0
    22c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    22cc:	ldr	r2, [r3, #40]	; 0x28
    22d0:	cmp	r2, #0
    22d4:	beq	22c4 <coda_type_array_add_fixed_dimension+0x5c>
    22d8:	ldrd	r6, [r2, #24]
    22dc:	cmp	r6, #0
    22e0:	sbcs	r2, r7, #0
    22e4:	blt	22c4 <coda_type_array_add_fixed_dimension+0x5c>
    22e8:	ldr	r4, [r3, #44]	; 0x2c
    22ec:	mov	r0, #0
    22f0:	mov	r8, r4
    22f4:	mul	r2, r4, r7
    22f8:	asr	r9, r4, #31
    22fc:	umull	r4, r5, r4, r6
    2300:	mla	r2, r6, r9, r2
    2304:	add	r5, r2, r5
    2308:	strd	r4, [r3, #24]
    230c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2310:	ldr	r1, [pc, #64]	; 2358 <coda_type_array_add_fixed_dimension+0xf0>
    2314:	ldr	r0, [pc, #64]	; 235c <coda_type_array_add_fixed_dimension+0xf4>
    2318:	bl	0 <coda_set_error>
    231c:	mvn	r0, #0
    2320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2324:	mov	r2, r1
    2328:	ldr	r0, [pc, #44]	; 235c <coda_type_array_add_fixed_dimension+0xf4>
    232c:	ldr	r1, [pc, #44]	; 2360 <coda_type_array_add_fixed_dimension+0xf8>
    2330:	bl	0 <coda_set_error>
    2334:	mvn	r0, #0
    2338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    233c:	ldr	r3, [pc, #32]	; 2364 <coda_type_array_add_fixed_dimension+0xfc>
    2340:	ldr	r2, [pc, #32]	; 2368 <coda_type_array_add_fixed_dimension+0x100>
    2344:	ldr	r1, [pc, #32]	; 236c <coda_type_array_add_fixed_dimension+0x104>
    2348:	mvn	r0, #99	; 0x63
    234c:	bl	0 <coda_set_error>
    2350:	mvn	r0, #0
    2354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2358:	.word	0x000009bc
    235c:	.word	0xfffffe70
    2360:	.word	0x00000990
    2364:	.word	0x0000067a
    2368:	.word	0x00000000
    236c:	.word	0x000001b4

00002370 <coda_type_array_add_variable_dimension>:
    2370:	subs	r3, r0, #0
    2374:	push	{r4, r5, r6, lr}
    2378:	beq	241c <coda_type_array_add_variable_dimension+0xac>
    237c:	ldr	r2, [r3, #48]	; 0x30
    2380:	cmp	r2, #8
    2384:	beq	2408 <coda_type_array_add_variable_dimension+0x98>
    2388:	ldr	r0, [r3]
    238c:	cmp	r0, #1
    2390:	bls	23b8 <coda_type_array_add_variable_dimension+0x48>
    2394:	add	r0, r3, r2, lsl #2
    2398:	mvn	ip, #0
    239c:	add	r2, r2, #1
    23a0:	str	r1, [r0, #84]	; 0x54
    23a4:	str	ip, [r0, #52]	; 0x34
    23a8:	mov	r0, #0
    23ac:	str	r2, [r3, #48]	; 0x30
    23b0:	str	ip, [r3, #44]	; 0x2c
    23b4:	pop	{r4, r5, r6, pc}
    23b8:	cmp	r1, #0
    23bc:	beq	2438 <coda_type_array_add_variable_dimension+0xc8>
    23c0:	add	r0, r3, r2, lsl #2
    23c4:	mvn	ip, #0
    23c8:	str	r1, [r0, #84]	; 0x54
    23cc:	str	ip, [r0, #52]	; 0x34
    23d0:	ldrd	r0, [r3, #24]
    23d4:	add	r2, r2, #1
    23d8:	str	r2, [r3, #48]	; 0x30
    23dc:	cmp	r0, #0
    23e0:	sbcs	r2, r1, #0
    23e4:	str	ip, [r3, #44]	; 0x2c
    23e8:	blt	2400 <coda_type_array_add_variable_dimension+0x90>
    23ec:	mvn	r4, #0
    23f0:	mvn	r5, #0
    23f4:	mov	r0, #0
    23f8:	strd	r4, [r3, #24]
    23fc:	pop	{r4, r5, r6, pc}
    2400:	mov	r0, #0
    2404:	pop	{r4, r5, r6, pc}
    2408:	ldr	r1, [pc, #72]	; 2458 <coda_type_array_add_variable_dimension+0xe8>
    240c:	ldr	r0, [pc, #72]	; 245c <coda_type_array_add_variable_dimension+0xec>
    2410:	bl	0 <coda_set_error>
    2414:	mvn	r0, #0
    2418:	pop	{r4, r5, r6, pc}
    241c:	ldr	r3, [pc, #60]	; 2460 <coda_type_array_add_variable_dimension+0xf0>
    2420:	ldr	r2, [pc, #60]	; 2464 <coda_type_array_add_variable_dimension+0xf4>
    2424:	ldr	r1, [pc, #60]	; 2468 <coda_type_array_add_variable_dimension+0xf8>
    2428:	mvn	r0, #99	; 0x63
    242c:	bl	0 <coda_set_error>
    2430:	mvn	r0, #0
    2434:	pop	{r4, r5, r6, pc}
    2438:	ldr	r3, [pc, #44]	; 246c <coda_type_array_add_variable_dimension+0xfc>
    243c:	ldr	r1, [pc, #44]	; 2470 <coda_type_array_add_variable_dimension+0x100>
    2440:	add	r3, r3, r0, lsl #2
    2444:	ldr	r0, [pc, #16]	; 245c <coda_type_array_add_variable_dimension+0xec>
    2448:	ldr	r2, [r3, #84]	; 0x54
    244c:	bl	0 <coda_set_error>
    2450:	mvn	r0, #0
    2454:	pop	{r4, r5, r6, pc}
    2458:	.word	0x000009f8
    245c:	.word	0xfffffe70
    2460:	.word	0x000006a9
    2464:	.word	0x00000000
    2468:	.word	0x000001b4
    246c:	.word	0x00000000
    2470:	.word	0x00000a38

00002474 <coda_type_array_validate>:
    2474:	cmp	r0, #0
    2478:	push	{r4, lr}
    247c:	beq	24a8 <coda_type_array_validate+0x34>
    2480:	ldr	r3, [r0, #48]	; 0x30
    2484:	cmp	r3, #0
    2488:	beq	2494 <coda_type_array_validate+0x20>
    248c:	mov	r0, #0
    2490:	pop	{r4, pc}
    2494:	ldr	r1, [pc, #40]	; 24c4 <coda_type_array_validate+0x50>
    2498:	ldr	r0, [pc, #40]	; 24c8 <coda_type_array_validate+0x54>
    249c:	bl	0 <coda_set_error>
    24a0:	mvn	r0, #0
    24a4:	pop	{r4, pc}
    24a8:	ldr	r3, [pc, #28]	; 24cc <coda_type_array_validate+0x58>
    24ac:	ldr	r2, [pc, #28]	; 24d0 <coda_type_array_validate+0x5c>
    24b0:	ldr	r1, [pc, #28]	; 24d4 <coda_type_array_validate+0x60>
    24b4:	mvn	r0, #99	; 0x63
    24b8:	bl	0 <coda_set_error>
    24bc:	mvn	r0, #0
    24c0:	pop	{r4, pc}
    24c4:	.word	0x00000a78
    24c8:	.word	0xfffffe70
    24cc:	.word	0x000006ce
    24d0:	.word	0x00000000
    24d4:	.word	0x000001b4

000024d8 <coda_type_number_new>:
    24d8:	sub	r3, r1, #2
    24dc:	cmp	r3, #1
    24e0:	push	{r4, r5, r6, lr}
    24e4:	mov	r5, r1
    24e8:	sub	sp, sp, #8
    24ec:	bhi	255c <coda_type_number_new+0x84>
    24f0:	mov	r6, r0
    24f4:	mov	r0, #56	; 0x38
    24f8:	bl	0 <malloc>
    24fc:	subs	r4, r0, #0
    2500:	beq	2588 <coda_type_number_new+0xb0>
    2504:	cmp	r5, #2
    2508:	mvn	r0, #0
    250c:	mvn	r1, #0
    2510:	mov	r3, #0
    2514:	moveq	r2, #6
    2518:	movne	r2, #9
    251c:	str	r6, [r4]
    2520:	str	r5, [r4, #8]
    2524:	str	r2, [r4, #12]
    2528:	strd	r0, [r4, #24]
    252c:	str	r3, [r4, #4]
    2530:	str	r3, [r4, #16]
    2534:	str	r3, [r4, #20]
    2538:	str	r3, [r4, #32]
    253c:	str	r3, [r4, #36]	; 0x24
    2540:	str	r3, [r4, #40]	; 0x28
    2544:	str	r3, [r4, #44]	; 0x2c
    2548:	str	r3, [r4, #48]	; 0x30
    254c:	str	r3, [r4, #52]	; 0x34
    2550:	mov	r0, r4
    2554:	add	sp, sp, #8
    2558:	pop	{r4, r5, r6, pc}
    255c:	cmp	r1, #6
    2560:	ldr	r0, [pc, #64]	; 25a8 <coda_type_number_new+0xd0>
    2564:	ldrls	r3, [pc, #64]	; 25ac <coda_type_number_new+0xd4>
    2568:	ldrhi	r2, [pc, #64]	; 25b0 <coda_type_number_new+0xd8>
    256c:	mov	r4, #0
    2570:	ldrls	r2, [r3, r1, lsl #2]
    2574:	ldr	r1, [pc, #56]	; 25b4 <coda_type_number_new+0xdc>
    2578:	bl	0 <coda_set_error>
    257c:	mov	r0, r4
    2580:	add	sp, sp, #8
    2584:	pop	{r4, r5, r6, pc}
    2588:	ldr	r2, [pc, #40]	; 25b8 <coda_type_number_new+0xe0>
    258c:	ldr	r3, [pc, #40]	; 25bc <coda_type_number_new+0xe4>
    2590:	str	r2, [sp]
    2594:	ldr	r1, [pc, #36]	; 25c0 <coda_type_number_new+0xe8>
    2598:	mov	r2, #56	; 0x38
    259c:	mvn	r0, #0
    25a0:	bl	0 <coda_set_error>
    25a4:	b	2550 <coda_type_number_new+0x78>
    25a8:	.word	0xfffffe70
    25ac:	.word	0x00000000
    25b0:	.word	0x000001ac
    25b4:	.word	0x00000aa8
    25b8:	.word	0x000006e9
    25bc:	.word	0x00000000
    25c0:	.word	0x00000078

000025c4 <coda_type_number_set_unit>:
    25c4:	cmp	r1, #0
    25c8:	push	{r4, r5, r6, lr}
    25cc:	beq	2610 <coda_type_number_set_unit+0x4c>
    25d0:	ldr	r4, [r0, #40]	; 0x28
    25d4:	mov	r5, r0
    25d8:	cmp	r4, #0
    25dc:	bne	25fc <coda_type_number_set_unit+0x38>
    25e0:	mov	r0, r1
    25e4:	bl	0 <strdup>
    25e8:	cmp	r0, #0
    25ec:	str	r0, [r5, #40]	; 0x28
    25f0:	beq	262c <coda_type_number_set_unit+0x68>
    25f4:	mov	r0, r4
    25f8:	pop	{r4, r5, r6, pc}
    25fc:	ldr	r1, [pc, #68]	; 2648 <coda_type_number_set_unit+0x84>
    2600:	ldr	r0, [pc, #68]	; 264c <coda_type_number_set_unit+0x88>
    2604:	bl	0 <coda_set_error>
    2608:	mvn	r0, #0
    260c:	pop	{r4, r5, r6, pc}
    2610:	ldr	r3, [pc, #56]	; 2650 <coda_type_number_set_unit+0x8c>
    2614:	ldr	r2, [pc, #56]	; 2654 <coda_type_number_set_unit+0x90>
    2618:	ldr	r1, [pc, #56]	; 2658 <coda_type_number_set_unit+0x94>
    261c:	mvn	r0, #99	; 0x63
    2620:	bl	0 <coda_set_error>
    2624:	mvn	r0, #0
    2628:	pop	{r4, r5, r6, pc}
    262c:	ldr	r3, [pc, #40]	; 265c <coda_type_number_set_unit+0x98>
    2630:	ldr	r2, [pc, #28]	; 2654 <coda_type_number_set_unit+0x90>
    2634:	ldr	r1, [pc, #36]	; 2660 <coda_type_number_set_unit+0x9c>
    2638:	mvn	r0, #0
    263c:	bl	0 <coda_set_error>
    2640:	mvn	r0, #0
    2644:	pop	{r4, r5, r6, pc}
    2648:	.word	0x00000af0
    264c:	.word	0xfffffe70
    2650:	.word	0x00000701
    2654:	.word	0x00000000
    2658:	.word	0x00000ad0
    265c:	.word	0x0000070d
    2660:	.word	0x000000f8

00002664 <coda_type_number_set_endianness>:
    2664:	subs	r3, r0, #0
    2668:	beq	2678 <coda_type_number_set_endianness+0x14>
    266c:	mov	r0, #0
    2670:	str	r1, [r3, #44]	; 0x2c
    2674:	bx	lr
    2678:	push	{r4, lr}
    267c:	mvn	r0, #99	; 0x63
    2680:	ldr	r3, [pc, #16]	; 2698 <coda_type_number_set_endianness+0x34>
    2684:	ldr	r2, [pc, #16]	; 269c <coda_type_number_set_endianness+0x38>
    2688:	ldr	r1, [pc, #16]	; 26a0 <coda_type_number_set_endianness+0x3c>
    268c:	bl	0 <coda_set_error>
    2690:	mvn	r0, #0
    2694:	pop	{r4, pc}
    2698:	.word	0x00000718
    269c:	.word	0x00000000
    26a0:	.word	0x000001b4

000026a4 <coda_type_number_set_conversion>:
    26a4:	subs	r3, r0, #0
    26a8:	push	{r4, lr}
    26ac:	beq	26d8 <coda_type_number_set_conversion+0x34>
    26b0:	ldr	r0, [r3, #48]	; 0x30
    26b4:	cmp	r0, #0
    26b8:	bne	26c4 <coda_type_number_set_conversion+0x20>
    26bc:	str	r1, [r3, #48]	; 0x30
    26c0:	pop	{r4, pc}
    26c4:	ldr	r1, [pc, #40]	; 26f4 <coda_type_number_set_conversion+0x50>
    26c8:	ldr	r0, [pc, #40]	; 26f8 <coda_type_number_set_conversion+0x54>
    26cc:	bl	0 <coda_set_error>
    26d0:	mvn	r0, #0
    26d4:	pop	{r4, pc}
    26d8:	ldr	r3, [pc, #28]	; 26fc <coda_type_number_set_conversion+0x58>
    26dc:	ldr	r2, [pc, #28]	; 2700 <coda_type_number_set_conversion+0x5c>
    26e0:	ldr	r1, [pc, #28]	; 2704 <coda_type_number_set_conversion+0x60>
    26e4:	mvn	r0, #99	; 0x63
    26e8:	bl	0 <coda_set_error>
    26ec:	mvn	r0, #0
    26f0:	pop	{r4, pc}
    26f4:	.word	0x00000b08
    26f8:	.word	0xfffffe70
    26fc:	.word	0x00000723
    2700:	.word	0x00000000
    2704:	.word	0x000001b4

00002708 <coda_type_number_add_ascii_float_mapping>:
    2708:	cmp	r0, #0
    270c:	push	{r4, lr}
    2710:	beq	2750 <coda_type_number_add_ascii_float_mapping+0x48>
    2714:	cmp	r1, #0
    2718:	beq	276c <coda_type_number_add_ascii_float_mapping+0x64>
    271c:	ldr	r3, [r0, #8]
    2720:	cmp	r3, #3
    2724:	bne	273c <coda_type_number_add_ascii_float_mapping+0x34>
    2728:	mov	r2, r1
    272c:	pop	{r4, lr}
    2730:	add	r1, r0, #52	; 0x34
    2734:	add	r0, r0, #24
    2738:	b	28 <mapping_type_add_mapping.isra.1>
    273c:	ldr	r1, [pc, #68]	; 2788 <coda_type_number_add_ascii_float_mapping+0x80>
    2740:	ldr	r0, [pc, #68]	; 278c <coda_type_number_add_ascii_float_mapping+0x84>
    2744:	bl	0 <coda_set_error>
    2748:	mvn	r0, #0
    274c:	pop	{r4, pc}
    2750:	ldr	r3, [pc, #56]	; 2790 <coda_type_number_add_ascii_float_mapping+0x88>
    2754:	ldr	r2, [pc, #56]	; 2794 <coda_type_number_add_ascii_float_mapping+0x8c>
    2758:	ldr	r1, [pc, #56]	; 2798 <coda_type_number_add_ascii_float_mapping+0x90>
    275c:	mvn	r0, #99	; 0x63
    2760:	bl	0 <coda_set_error>
    2764:	mvn	r0, #0
    2768:	pop	{r4, pc}
    276c:	ldr	r3, [pc, #40]	; 279c <coda_type_number_add_ascii_float_mapping+0x94>
    2770:	ldr	r2, [pc, #28]	; 2794 <coda_type_number_add_ascii_float_mapping+0x8c>
    2774:	ldr	r1, [pc, #36]	; 27a0 <coda_type_number_add_ascii_float_mapping+0x98>
    2778:	mvn	r0, #99	; 0x63
    277c:	bl	0 <coda_set_error>
    2780:	mvn	r0, #0
    2784:	pop	{r4, pc}
    2788:	.word	0x00000b4c
    278c:	.word	0xfffffe70
    2790:	.word	0x00000733
    2794:	.word	0x00000000
    2798:	.word	0x000001b4
    279c:	.word	0x00000738
    27a0:	.word	0x00000b28

000027a4 <coda_type_number_add_ascii_integer_mapping>:
    27a4:	cmp	r0, #0
    27a8:	push	{r4, lr}
    27ac:	beq	27ec <coda_type_number_add_ascii_integer_mapping+0x48>
    27b0:	cmp	r1, #0
    27b4:	beq	2808 <coda_type_number_add_ascii_integer_mapping+0x64>
    27b8:	ldr	r3, [r0, #8]
    27bc:	cmp	r3, #2
    27c0:	bne	27d8 <coda_type_number_add_ascii_integer_mapping+0x34>
    27c4:	mov	r2, r1
    27c8:	pop	{r4, lr}
    27cc:	add	r1, r0, #52	; 0x34
    27d0:	add	r0, r0, #24
    27d4:	b	28 <mapping_type_add_mapping.isra.1>
    27d8:	ldr	r1, [pc, #68]	; 2824 <coda_type_number_add_ascii_integer_mapping+0x80>
    27dc:	ldr	r0, [pc, #68]	; 2828 <coda_type_number_add_ascii_integer_mapping+0x84>
    27e0:	bl	0 <coda_set_error>
    27e4:	mvn	r0, #0
    27e8:	pop	{r4, pc}
    27ec:	ldr	r3, [pc, #56]	; 282c <coda_type_number_add_ascii_integer_mapping+0x88>
    27f0:	ldr	r2, [pc, #56]	; 2830 <coda_type_number_add_ascii_integer_mapping+0x8c>
    27f4:	ldr	r1, [pc, #56]	; 2834 <coda_type_number_add_ascii_integer_mapping+0x90>
    27f8:	mvn	r0, #99	; 0x63
    27fc:	bl	0 <coda_set_error>
    2800:	mvn	r0, #0
    2804:	pop	{r4, pc}
    2808:	ldr	r3, [pc, #40]	; 2838 <coda_type_number_add_ascii_integer_mapping+0x94>
    280c:	ldr	r2, [pc, #28]	; 2830 <coda_type_number_add_ascii_integer_mapping+0x8c>
    2810:	ldr	r1, [pc, #36]	; 283c <coda_type_number_add_ascii_integer_mapping+0x98>
    2814:	mvn	r0, #99	; 0x63
    2818:	bl	0 <coda_set_error>
    281c:	mvn	r0, #0
    2820:	pop	{r4, pc}
    2824:	.word	0x00000b84
    2828:	.word	0xfffffe70
    282c:	.word	0x00000747
    2830:	.word	0x00000000
    2834:	.word	0x000001b4
    2838:	.word	0x0000074c
    283c:	.word	0x00000b28

00002840 <coda_type_number_validate>:
    2840:	cmp	r0, #0
    2844:	push	{r4, lr}
    2848:	beq	29e4 <coda_type_number_validate+0x1a4>
    284c:	ldr	r3, [r0]
    2850:	cmp	r3, #1
    2854:	beq	2860 <coda_type_number_validate+0x20>
    2858:	mov	r0, #0
    285c:	pop	{r4, pc}
    2860:	ldrd	r2, [r0, #24]
    2864:	cmp	r2, #0
    2868:	sbcs	r1, r3, #0
    286c:	blt	28a8 <coda_type_number_validate+0x68>
    2870:	ldr	r1, [r0, #12]
    2874:	cmp	r1, #9
    2878:	ldrls	pc, [pc, r1, lsl #2]
    287c:	b	29d0 <coda_type_number_validate+0x190>
    2880:	.word	0x000028ec
    2884:	.word	0x000028ec
    2888:	.word	0x00002928
    288c:	.word	0x00002928
    2890:	.word	0x000029a4
    2894:	.word	0x000029a4
    2898:	.word	0x00002954
    289c:	.word	0x00002954
    28a0:	.word	0x00002980
    28a4:	.word	0x000028c8
    28a8:	ldr	r3, [r0, #32]
    28ac:	cmp	r3, #0
    28b0:	bne	2858 <coda_type_number_validate+0x18>
    28b4:	ldr	r1, [pc, #356]	; 2a20 <coda_type_number_validate+0x1e0>
    28b8:	ldr	r0, [pc, #356]	; 2a24 <coda_type_number_validate+0x1e4>
    28bc:	bl	0 <coda_set_error>
    28c0:	mvn	r0, #0
    28c4:	pop	{r4, pc}
    28c8:	cmp	r3, #0
    28cc:	cmpeq	r2, #64	; 0x40
    28d0:	beq	2858 <coda_type_number_validate+0x18>
    28d4:	ldr	r3, [pc, #332]	; 2a28 <coda_type_number_validate+0x1e8>
    28d8:	ldr	r1, [pc, #332]	; 2a2c <coda_type_number_validate+0x1ec>
    28dc:	ldr	r0, [pc, #320]	; 2a24 <coda_type_number_validate+0x1e4>
    28e0:	bl	0 <coda_set_error>
    28e4:	mvn	r0, #0
    28e8:	pop	{r4, pc}
    28ec:	cmp	r2, #9
    28f0:	sbcs	ip, r3, #0
    28f4:	bge	2a00 <coda_type_number_validate+0x1c0>
    28f8:	ldr	r1, [r0, #44]	; 0x2c
    28fc:	cmp	r1, #1
    2900:	bne	2858 <coda_type_number_validate+0x18>
    2904:	and	r0, r2, #7
    2908:	mov	r1, #0
    290c:	orrs	r1, r0, r1
    2910:	beq	2858 <coda_type_number_validate+0x18>
    2914:	ldr	r1, [pc, #276]	; 2a30 <coda_type_number_validate+0x1f0>
    2918:	ldr	r0, [pc, #260]	; 2a24 <coda_type_number_validate+0x1e4>
    291c:	bl	0 <coda_set_error>
    2920:	mvn	r0, #0
    2924:	pop	{r4, pc}
    2928:	cmp	r2, #17
    292c:	sbcs	ip, r3, #0
    2930:	blt	28f8 <coda_type_number_validate+0xb8>
    2934:	ldr	r3, [pc, #248]	; 2a34 <coda_type_number_validate+0x1f4>
    2938:	ldr	r0, [pc, #228]	; 2a24 <coda_type_number_validate+0x1e4>
    293c:	add	r3, r3, r1, lsl #2
    2940:	ldr	r1, [pc, #240]	; 2a38 <coda_type_number_validate+0x1f8>
    2944:	ldr	r3, [r3, #32]
    2948:	bl	0 <coda_set_error>
    294c:	mvn	r0, #0
    2950:	pop	{r4, pc}
    2954:	cmp	r2, #65	; 0x41
    2958:	sbcs	ip, r3, #0
    295c:	blt	28f8 <coda_type_number_validate+0xb8>
    2960:	ldr	r3, [pc, #204]	; 2a34 <coda_type_number_validate+0x1f4>
    2964:	ldr	r0, [pc, #184]	; 2a24 <coda_type_number_validate+0x1e4>
    2968:	add	r3, r3, r1, lsl #2
    296c:	ldr	r1, [pc, #200]	; 2a3c <coda_type_number_validate+0x1fc>
    2970:	ldr	r3, [r3, #32]
    2974:	bl	0 <coda_set_error>
    2978:	mvn	r0, #0
    297c:	pop	{r4, pc}
    2980:	cmp	r3, #0
    2984:	cmpeq	r2, #32
    2988:	beq	2858 <coda_type_number_validate+0x18>
    298c:	ldr	r3, [pc, #172]	; 2a40 <coda_type_number_validate+0x200>
    2990:	ldr	r1, [pc, #172]	; 2a44 <coda_type_number_validate+0x204>
    2994:	ldr	r0, [pc, #136]	; 2a24 <coda_type_number_validate+0x1e4>
    2998:	bl	0 <coda_set_error>
    299c:	mvn	r0, #0
    29a0:	pop	{r4, pc}
    29a4:	cmp	r2, #33	; 0x21
    29a8:	sbcs	ip, r3, #0
    29ac:	blt	28f8 <coda_type_number_validate+0xb8>
    29b0:	ldr	r3, [pc, #124]	; 2a34 <coda_type_number_validate+0x1f4>
    29b4:	ldr	r0, [pc, #104]	; 2a24 <coda_type_number_validate+0x1e4>
    29b8:	add	r3, r3, r1, lsl #2
    29bc:	ldr	r1, [pc, #132]	; 2a48 <coda_type_number_validate+0x208>
    29c0:	ldr	r3, [r3, #32]
    29c4:	bl	0 <coda_set_error>
    29c8:	mvn	r0, #0
    29cc:	pop	{r4, pc}
    29d0:	ldr	r3, [pc, #116]	; 2a4c <coda_type_number_validate+0x20c>
    29d4:	ldr	r2, [pc, #116]	; 2a50 <coda_type_number_validate+0x210>
    29d8:	ldr	r1, [pc, #116]	; 2a54 <coda_type_number_validate+0x214>
    29dc:	ldr	r0, [pc, #116]	; 2a58 <coda_type_number_validate+0x218>
    29e0:	bl	0 <__assert_fail>
    29e4:	ldr	r3, [pc, #112]	; 2a5c <coda_type_number_validate+0x21c>
    29e8:	ldr	r2, [pc, #100]	; 2a54 <coda_type_number_validate+0x214>
    29ec:	ldr	r1, [pc, #108]	; 2a60 <coda_type_number_validate+0x220>
    29f0:	mvn	r0, #99	; 0x63
    29f4:	bl	0 <coda_set_error>
    29f8:	mvn	r0, #0
    29fc:	pop	{r4, pc}
    2a00:	ldr	r3, [pc, #44]	; 2a34 <coda_type_number_validate+0x1f4>
    2a04:	ldr	r0, [pc, #24]	; 2a24 <coda_type_number_validate+0x1e4>
    2a08:	add	r3, r3, r1, lsl #2
    2a0c:	ldr	r1, [pc, #80]	; 2a64 <coda_type_number_validate+0x224>
    2a10:	ldr	r3, [r3, #32]
    2a14:	bl	0 <coda_set_error>
    2a18:	mvn	r0, #0
    2a1c:	pop	{r4, pc}
    2a20:	.word	0x00000de8
    2a24:	.word	0xfffffe70
    2a28:	.word	0x00000d80
    2a2c:	.word	0x00000d88
    2a30:	.word	0x00000e28
    2a34:	.word	0x00000000
    2a38:	.word	0x00000c14
    2a3c:	.word	0x00000cc4
    2a40:	.word	0x00000d1c
    2a44:	.word	0x00000d24
    2a48:	.word	0x00000c6c
    2a4c:	.word	0x00000094
    2a50:	.word	0x0000079f
    2a54:	.word	0x00000000
    2a58:	.word	0x00000de4
    2a5c:	.word	0x0000075b
    2a60:	.word	0x000001b4
    2a64:	.word	0x00000bbc

00002a68 <coda_type_text_new>:
    2a68:	push	{r4, r5, r6, r7, lr}
    2a6c:	mov	r5, r0
    2a70:	sub	sp, sp, #12
    2a74:	mov	r0, #48	; 0x30
    2a78:	bl	0 <malloc>
    2a7c:	subs	r4, r0, #0
    2a80:	beq	2ad0 <coda_type_text_new+0x68>
    2a84:	mvn	r6, #0
    2a88:	mvn	r7, #0
    2a8c:	mov	r3, #0
    2a90:	mov	r1, #4
    2a94:	mov	r2, #11
    2a98:	str	r5, [r4]
    2a9c:	strd	r6, [r4, #24]
    2aa0:	str	r3, [r4, #4]
    2aa4:	str	r3, [r4, #16]
    2aa8:	str	r3, [r4, #20]
    2aac:	str	r3, [r4, #32]
    2ab0:	str	r3, [r4, #36]	; 0x24
    2ab4:	str	r3, [r4, #40]	; 0x28
    2ab8:	str	r3, [r4, #44]	; 0x2c
    2abc:	str	r1, [r4, #8]
    2ac0:	str	r2, [r4, #12]
    2ac4:	mov	r0, r4
    2ac8:	add	sp, sp, #12
    2acc:	pop	{r4, r5, r6, r7, pc}
    2ad0:	ldr	r2, [pc, #24]	; 2af0 <coda_type_text_new+0x88>
    2ad4:	ldr	r3, [pc, #24]	; 2af4 <coda_type_text_new+0x8c>
    2ad8:	str	r2, [sp]
    2adc:	ldr	r1, [pc, #20]	; 2af8 <coda_type_text_new+0x90>
    2ae0:	mov	r2, #48	; 0x30
    2ae4:	mvn	r0, #0
    2ae8:	bl	0 <coda_set_error>
    2aec:	b	2ac4 <coda_type_text_new+0x5c>
    2af0:	.word	0x000007bc
    2af4:	.word	0x00000000
    2af8:	.word	0x00000078

00002afc <coda_type_text_set_fixed_value>:
    2afc:	push	{r4, r5, r6, lr}
    2b00:	subs	r5, r0, #0
    2b04:	beq	2b4c <coda_type_text_set_fixed_value+0x50>
    2b08:	cmp	r1, #0
    2b0c:	beq	2b68 <coda_type_text_set_fixed_value+0x6c>
    2b10:	ldr	r4, [r5, #40]	; 0x28
    2b14:	cmp	r4, #0
    2b18:	bne	2b38 <coda_type_text_set_fixed_value+0x3c>
    2b1c:	mov	r0, r1
    2b20:	bl	0 <strdup>
    2b24:	cmp	r0, #0
    2b28:	str	r0, [r5, #40]	; 0x28
    2b2c:	beq	2b84 <coda_type_text_set_fixed_value+0x88>
    2b30:	mov	r0, r4
    2b34:	pop	{r4, r5, r6, pc}
    2b38:	ldr	r1, [pc, #96]	; 2ba0 <coda_type_text_set_fixed_value+0xa4>
    2b3c:	ldr	r0, [pc, #96]	; 2ba4 <coda_type_text_set_fixed_value+0xa8>
    2b40:	bl	0 <coda_set_error>
    2b44:	mvn	r0, #0
    2b48:	pop	{r4, r5, r6, pc}
    2b4c:	ldr	r3, [pc, #84]	; 2ba8 <coda_type_text_set_fixed_value+0xac>
    2b50:	ldr	r2, [pc, #84]	; 2bac <coda_type_text_set_fixed_value+0xb0>
    2b54:	ldr	r1, [pc, #84]	; 2bb0 <coda_type_text_set_fixed_value+0xb4>
    2b58:	mvn	r0, #99	; 0x63
    2b5c:	bl	0 <coda_set_error>
    2b60:	mvn	r0, #0
    2b64:	pop	{r4, r5, r6, pc}
    2b68:	ldr	r3, [pc, #68]	; 2bb4 <coda_type_text_set_fixed_value+0xb8>
    2b6c:	ldr	r2, [pc, #56]	; 2bac <coda_type_text_set_fixed_value+0xb0>
    2b70:	ldr	r1, [pc, #64]	; 2bb8 <coda_type_text_set_fixed_value+0xbc>
    2b74:	mvn	r0, #99	; 0x63
    2b78:	bl	0 <coda_set_error>
    2b7c:	mvn	r0, #0
    2b80:	pop	{r4, r5, r6, pc}
    2b84:	ldr	r3, [pc, #48]	; 2bbc <coda_type_text_set_fixed_value+0xc0>
    2b88:	ldr	r2, [pc, #28]	; 2bac <coda_type_text_set_fixed_value+0xb0>
    2b8c:	ldr	r1, [pc, #44]	; 2bc0 <coda_type_text_set_fixed_value+0xc4>
    2b90:	mvn	r0, #0
    2b94:	bl	0 <coda_set_error>
    2b98:	mvn	r0, #0
    2b9c:	pop	{r4, r5, r6, pc}
    2ba0:	.word	0x00000ea0
    2ba4:	.word	0xfffffe70
    2ba8:	.word	0x000007d2
    2bac:	.word	0x00000000
    2bb0:	.word	0x000001b4
    2bb4:	.word	0x000007d7
    2bb8:	.word	0x00000e78
    2bbc:	.word	0x000007e3
    2bc0:	.word	0x000000f8

00002bc4 <coda_type_text_set_special_text_type>:
    2bc4:	subs	r3, r0, #0
    2bc8:	push	{r4, lr}
    2bcc:	beq	2c2c <coda_type_text_set_special_text_type+0x68>
    2bd0:	ldr	r2, [r3]
    2bd4:	cmp	r2, #0
    2bd8:	bne	2bf0 <coda_type_text_set_special_text_type+0x2c>
    2bdc:	ldr	r0, [r3, #44]	; 0x2c
    2be0:	cmp	r0, #0
    2be4:	bne	2c18 <coda_type_text_set_special_text_type+0x54>
    2be8:	str	r1, [r3, #44]	; 0x2c
    2bec:	pop	{r4, pc}
    2bf0:	cmp	r2, #9
    2bf4:	ldr	r1, [pc, #76]	; 2c48 <coda_type_text_set_special_text_type+0x84>
    2bf8:	ldrls	r3, [pc, #76]	; 2c4c <coda_type_text_set_special_text_type+0x88>
    2bfc:	ldrhi	r2, [pc, #76]	; 2c50 <coda_type_text_set_special_text_type+0x8c>
    2c00:	addls	r2, r3, r2, lsl #2
    2c04:	ldr	r0, [pc, #72]	; 2c54 <coda_type_text_set_special_text_type+0x90>
    2c08:	ldrls	r2, [r2, #84]	; 0x54
    2c0c:	bl	0 <coda_set_error>
    2c10:	mvn	r0, #0
    2c14:	pop	{r4, pc}
    2c18:	ldr	r1, [pc, #56]	; 2c58 <coda_type_text_set_special_text_type+0x94>
    2c1c:	ldr	r0, [pc, #48]	; 2c54 <coda_type_text_set_special_text_type+0x90>
    2c20:	bl	0 <coda_set_error>
    2c24:	mvn	r0, #0
    2c28:	pop	{r4, pc}
    2c2c:	ldr	r3, [pc, #40]	; 2c5c <coda_type_text_set_special_text_type+0x98>
    2c30:	ldr	r2, [pc, #40]	; 2c60 <coda_type_text_set_special_text_type+0x9c>
    2c34:	ldr	r1, [pc, #40]	; 2c64 <coda_type_text_set_special_text_type+0xa0>
    2c38:	mvn	r0, #99	; 0x63
    2c3c:	bl	0 <coda_set_error>
    2c40:	mvn	r0, #0
    2c44:	pop	{r4, pc}
    2c48:	.word	0x00000ec4
    2c4c:	.word	0x00000000
    2c50:	.word	0x000001ac
    2c54:	.word	0xfffffe70
    2c58:	.word	0x00000ef8
    2c5c:	.word	0x000007ee
    2c60:	.word	0x00000000
    2c64:	.word	0x000001b4

00002c68 <coda_type_text_validate>:
    2c68:	push	{r4, r6, r7, lr}
    2c6c:	subs	r4, r0, #0
    2c70:	sub	sp, sp, #24
    2c74:	beq	2db4 <coda_type_text_validate+0x14c>
    2c78:	ldr	r3, [r4]
    2c7c:	cmp	r3, #1
    2c80:	bls	2cf8 <coda_type_text_validate+0x90>
    2c84:	ldr	r3, [r4, #12]
    2c88:	cmp	r3, #10
    2c8c:	beq	2cd8 <coda_type_text_validate+0x70>
    2c90:	ldr	r0, [r4, #40]	; 0x28
    2c94:	cmp	r0, #0
    2c98:	beq	2cd0 <coda_type_text_validate+0x68>
    2c9c:	ldrd	r2, [r4, #24]
    2ca0:	cmp	r2, #0
    2ca4:	sbcs	r1, r3, #0
    2ca8:	blt	2da0 <coda_type_text_validate+0x138>
    2cac:	lsr	r6, r2, #3
    2cb0:	orr	r6, r6, r3, lsl #29
    2cb4:	asr	r7, r3, #3
    2cb8:	bl	0 <strlen>
    2cbc:	mov	r1, #0
    2cc0:	cmp	r7, r1
    2cc4:	cmpeq	r6, r0
    2cc8:	moveq	r0, #0
    2ccc:	bne	2d58 <coda_type_text_validate+0xf0>
    2cd0:	add	sp, sp, #24
    2cd4:	pop	{r4, r6, r7, pc}
    2cd8:	ldrd	r2, [r4, #24]
    2cdc:	cmp	r3, #0
    2ce0:	cmpeq	r2, #8
    2ce4:	bne	2d8c <coda_type_text_validate+0x124>
    2ce8:	ldr	r0, [r4, #40]	; 0x28
    2cec:	cmp	r0, #0
    2cf0:	bne	2cac <coda_type_text_validate+0x44>
    2cf4:	b	2cd0 <coda_type_text_validate+0x68>
    2cf8:	ldr	r3, [r4, #32]
    2cfc:	cmp	r3, #0
    2d00:	ldrd	r2, [r4, #24]
    2d04:	beq	2d38 <coda_type_text_validate+0xd0>
    2d08:	cmp	r2, #0
    2d0c:	sbcs	r1, r3, #0
    2d10:	blt	2c84 <coda_type_text_validate+0x1c>
    2d14:	and	r0, r2, #7
    2d18:	mov	r1, #0
    2d1c:	orrs	r1, r0, r1
    2d20:	beq	2c84 <coda_type_text_validate+0x1c>
    2d24:	ldr	r0, [pc, #164]	; 2dd0 <coda_type_text_validate+0x168>
    2d28:	ldr	r1, [pc, #164]	; 2dd4 <coda_type_text_validate+0x16c>
    2d2c:	bl	0 <coda_set_error>
    2d30:	mvn	r0, #0
    2d34:	b	2cd0 <coda_type_text_validate+0x68>
    2d38:	cmp	r2, #0
    2d3c:	sbcs	r1, r3, #0
    2d40:	bge	2d14 <coda_type_text_validate+0xac>
    2d44:	ldr	r0, [pc, #132]	; 2dd0 <coda_type_text_validate+0x168>
    2d48:	ldr	r1, [pc, #136]	; 2dd8 <coda_type_text_validate+0x170>
    2d4c:	bl	0 <coda_set_error>
    2d50:	mvn	r0, #0
    2d54:	b	2cd0 <coda_type_text_validate+0x68>
    2d58:	mov	r1, r7
    2d5c:	mov	r2, sp
    2d60:	mov	r0, r6
    2d64:	bl	0 <coda_str64>
    2d68:	ldr	r0, [r4, #40]	; 0x28
    2d6c:	bl	0 <strlen>
    2d70:	mov	r3, sp
    2d74:	ldr	r1, [pc, #96]	; 2ddc <coda_type_text_validate+0x174>
    2d78:	mov	r2, r0
    2d7c:	ldr	r0, [pc, #76]	; 2dd0 <coda_type_text_validate+0x168>
    2d80:	bl	0 <coda_set_error>
    2d84:	mvn	r0, #0
    2d88:	b	2cd0 <coda_type_text_validate+0x68>
    2d8c:	ldr	r0, [pc, #60]	; 2dd0 <coda_type_text_validate+0x168>
    2d90:	ldr	r1, [pc, #72]	; 2de0 <coda_type_text_validate+0x178>
    2d94:	bl	0 <coda_set_error>
    2d98:	mvn	r0, #0
    2d9c:	b	2cd0 <coda_type_text_validate+0x68>
    2da0:	ldr	r0, [pc, #40]	; 2dd0 <coda_type_text_validate+0x168>
    2da4:	ldr	r1, [pc, #56]	; 2de4 <coda_type_text_validate+0x17c>
    2da8:	bl	0 <coda_set_error>
    2dac:	mvn	r0, #0
    2db0:	b	2cd0 <coda_type_text_validate+0x68>
    2db4:	mvn	r0, #99	; 0x63
    2db8:	ldr	r3, [pc, #40]	; 2de8 <coda_type_text_validate+0x180>
    2dbc:	ldr	r2, [pc, #40]	; 2dec <coda_type_text_validate+0x184>
    2dc0:	ldr	r1, [pc, #40]	; 2df0 <coda_type_text_validate+0x188>
    2dc4:	bl	0 <coda_set_error>
    2dc8:	mvn	r0, #0
    2dcc:	b	2cd0 <coda_type_text_validate+0x68>
    2dd0:	.word	0xfffffe70
    2dd4:	.word	0x00000f60
    2dd8:	.word	0x00000f28
    2ddc:	.word	0x0000101c
    2de0:	.word	0x00000f98
    2de4:	.word	0x00000fd8
    2de8:	.word	0x00000804
    2dec:	.word	0x00000000
    2df0:	.word	0x000001b4

00002df4 <coda_type_raw_new>:
    2df4:	push	{r4, r5, r6, r7, lr}
    2df8:	mov	r5, r0
    2dfc:	sub	sp, sp, #12
    2e00:	mov	r0, #48	; 0x30
    2e04:	bl	0 <malloc>
    2e08:	subs	r4, r0, #0
    2e0c:	beq	2e60 <coda_type_raw_new+0x6c>
    2e10:	mvn	r6, #0
    2e14:	mvn	r7, #0
    2e18:	mov	r3, #0
    2e1c:	mov	r0, #5
    2e20:	mov	r1, #12
    2e24:	mvn	r2, #0
    2e28:	str	r5, [r4]
    2e2c:	strd	r6, [r4, #24]
    2e30:	str	r3, [r4, #4]
    2e34:	str	r3, [r4, #16]
    2e38:	str	r3, [r4, #20]
    2e3c:	str	r3, [r4, #32]
    2e40:	str	r3, [r4, #36]	; 0x24
    2e44:	str	r3, [r4, #44]	; 0x2c
    2e48:	str	r0, [r4, #8]
    2e4c:	str	r1, [r4, #12]
    2e50:	str	r2, [r4, #40]	; 0x28
    2e54:	mov	r0, r4
    2e58:	add	sp, sp, #12
    2e5c:	pop	{r4, r5, r6, r7, pc}
    2e60:	ldr	r2, [pc, #24]	; 2e80 <coda_type_raw_new+0x8c>
    2e64:	ldr	r3, [pc, #24]	; 2e84 <coda_type_raw_new+0x90>
    2e68:	str	r2, [sp]
    2e6c:	ldr	r1, [pc, #20]	; 2e88 <coda_type_raw_new+0x94>
    2e70:	mov	r2, #48	; 0x30
    2e74:	mvn	r0, #0
    2e78:	bl	0 <coda_set_error>
    2e7c:	b	2e54 <coda_type_raw_new+0x60>
    2e80:	.word	0x0000083a
    2e84:	.word	0x00000000
    2e88:	.word	0x00000078

00002e8c <coda_type_raw_set_fixed_value>:
    2e8c:	push	{r4, r5, r6, r7, r8, lr}
    2e90:	subs	r4, r0, #0
    2e94:	beq	2f60 <coda_type_raw_set_fixed_value+0xd4>
    2e98:	cmp	r1, #0
    2e9c:	movle	r3, #0
    2ea0:	movgt	r3, #1
    2ea4:	cmp	r2, #0
    2ea8:	movne	r3, #0
    2eac:	cmp	r3, #0
    2eb0:	mov	r5, r1
    2eb4:	mov	r7, r2
    2eb8:	bne	2f28 <coda_type_raw_set_fixed_value+0x9c>
    2ebc:	ldr	r6, [r4, #44]	; 0x2c
    2ec0:	cmp	r6, #0
    2ec4:	bne	2f14 <coda_type_raw_set_fixed_value+0x88>
    2ec8:	ldr	r3, [r4, #40]	; 0x28
    2ecc:	cmp	r3, #0
    2ed0:	bge	2f14 <coda_type_raw_set_fixed_value+0x88>
    2ed4:	cmp	r1, #0
    2ed8:	ble	2f08 <coda_type_raw_set_fixed_value+0x7c>
    2edc:	mov	r0, r1
    2ee0:	bl	0 <malloc>
    2ee4:	cmp	r0, #0
    2ee8:	str	r0, [r4, #44]	; 0x2c
    2eec:	beq	2f44 <coda_type_raw_set_fixed_value+0xb8>
    2ef0:	mov	r1, r7
    2ef4:	mov	r2, r5
    2ef8:	bl	0 <memcpy>
    2efc:	str	r5, [r4, #40]	; 0x28
    2f00:	mov	r0, r6
    2f04:	pop	{r4, r5, r6, r7, r8, pc}
    2f08:	mov	r0, r6
    2f0c:	str	r6, [r4, #40]	; 0x28
    2f10:	pop	{r4, r5, r6, r7, r8, pc}
    2f14:	ldr	r1, [pc, #96]	; 2f7c <coda_type_raw_set_fixed_value+0xf0>
    2f18:	ldr	r0, [pc, #96]	; 2f80 <coda_type_raw_set_fixed_value+0xf4>
    2f1c:	bl	0 <coda_set_error>
    2f20:	mvn	r0, #0
    2f24:	pop	{r4, r5, r6, r7, r8, pc}
    2f28:	ldr	r3, [pc, #84]	; 2f84 <coda_type_raw_set_fixed_value+0xf8>
    2f2c:	ldr	r2, [pc, #84]	; 2f88 <coda_type_raw_set_fixed_value+0xfc>
    2f30:	ldr	r1, [pc, #84]	; 2f8c <coda_type_raw_set_fixed_value+0x100>
    2f34:	mvn	r0, #99	; 0x63
    2f38:	bl	0 <coda_set_error>
    2f3c:	mvn	r0, #0
    2f40:	pop	{r4, r5, r6, r7, r8, pc}
    2f44:	ldr	r3, [pc, #68]	; 2f90 <coda_type_raw_set_fixed_value+0x104>
    2f48:	ldr	r2, [pc, #56]	; 2f88 <coda_type_raw_set_fixed_value+0xfc>
    2f4c:	ldr	r1, [pc, #64]	; 2f94 <coda_type_raw_set_fixed_value+0x108>
    2f50:	mvn	r0, #0
    2f54:	bl	0 <coda_set_error>
    2f58:	mvn	r0, #0
    2f5c:	pop	{r4, r5, r6, r7, r8, pc}
    2f60:	mov	r3, #2128	; 0x850
    2f64:	ldr	r2, [pc, #28]	; 2f88 <coda_type_raw_set_fixed_value+0xfc>
    2f68:	ldr	r1, [pc, #40]	; 2f98 <coda_type_raw_set_fixed_value+0x10c>
    2f6c:	mvn	r0, #99	; 0x63
    2f70:	bl	0 <coda_set_error>
    2f74:	mvn	r0, #0
    2f78:	pop	{r4, r5, r6, r7, r8, pc}
    2f7c:	.word	0x00000ea0
    2f80:	.word	0xfffffe70
    2f84:	.word	0x00000855
    2f88:	.word	0x00000000
    2f8c:	.word	0x00000e78
    2f90:	.word	0x00000863
    2f94:	.word	0x000000f8
    2f98:	.word	0x000001b4

00002f9c <coda_type_raw_validate>:
    2f9c:	push	{r4, r6, r7, lr}
    2fa0:	subs	r4, r0, #0
    2fa4:	sub	sp, sp, #24
    2fa8:	beq	3080 <coda_type_raw_validate+0xe4>
    2fac:	ldr	r3, [r4]
    2fb0:	cmp	r3, #1
    2fb4:	bls	301c <coda_type_raw_validate+0x80>
    2fb8:	ldr	r0, [r4, #44]	; 0x2c
    2fbc:	cmp	r0, #0
    2fc0:	beq	3014 <coda_type_raw_validate+0x78>
    2fc4:	ldrd	r2, [r4, #24]
    2fc8:	cmp	r2, #0
    2fcc:	sbcs	r1, r3, #0
    2fd0:	blt	306c <coda_type_raw_validate+0xd0>
    2fd4:	and	r6, r2, #7
    2fd8:	mov	r7, #0
    2fdc:	orrs	ip, r6, r7
    2fe0:	lsr	r0, r2, #3
    2fe4:	ldr	r2, [r4, #40]	; 0x28
    2fe8:	orr	r0, r0, r3, lsl #29
    2fec:	asr	r1, r3, #3
    2ff0:	movne	r3, #1
    2ff4:	moveq	r3, #0
    2ff8:	adds	r0, r0, r3
    2ffc:	adc	r1, r1, #0
    3000:	asr	r3, r2, #31
    3004:	cmp	r1, r3
    3008:	cmpeq	r0, r2
    300c:	moveq	r0, #0
    3010:	bne	3048 <coda_type_raw_validate+0xac>
    3014:	add	sp, sp, #24
    3018:	pop	{r4, r6, r7, pc}
    301c:	ldr	r3, [r4, #32]
    3020:	cmp	r3, #0
    3024:	bne	2fb8 <coda_type_raw_validate+0x1c>
    3028:	ldrd	r2, [r4, #24]
    302c:	cmp	r2, #0
    3030:	sbcs	r1, r3, #0
    3034:	blt	309c <coda_type_raw_validate+0x100>
    3038:	ldr	r0, [r4, #44]	; 0x2c
    303c:	cmp	r0, #0
    3040:	bne	2fd4 <coda_type_raw_validate+0x38>
    3044:	b	3014 <coda_type_raw_validate+0x78>
    3048:	mov	r2, sp
    304c:	bl	0 <coda_str64>
    3050:	ldr	r0, [pc, #88]	; 30b0 <coda_type_raw_validate+0x114>
    3054:	mov	r3, sp
    3058:	ldr	r2, [r4, #40]	; 0x28
    305c:	ldr	r1, [pc, #80]	; 30b4 <coda_type_raw_validate+0x118>
    3060:	bl	0 <coda_set_error>
    3064:	mvn	r0, #0
    3068:	b	3014 <coda_type_raw_validate+0x78>
    306c:	ldr	r0, [pc, #60]	; 30b0 <coda_type_raw_validate+0x114>
    3070:	ldr	r1, [pc, #64]	; 30b8 <coda_type_raw_validate+0x11c>
    3074:	bl	0 <coda_set_error>
    3078:	mvn	r0, #0
    307c:	b	3014 <coda_type_raw_validate+0x78>
    3080:	mvn	r0, #99	; 0x63
    3084:	ldr	r3, [pc, #48]	; 30bc <coda_type_raw_validate+0x120>
    3088:	ldr	r2, [pc, #48]	; 30c0 <coda_type_raw_validate+0x124>
    308c:	ldr	r1, [pc, #48]	; 30c4 <coda_type_raw_validate+0x128>
    3090:	bl	0 <coda_set_error>
    3094:	mvn	r0, #0
    3098:	b	3014 <coda_type_raw_validate+0x78>
    309c:	ldr	r0, [pc, #12]	; 30b0 <coda_type_raw_validate+0x114>
    30a0:	ldr	r1, [pc, #32]	; 30c8 <coda_type_raw_validate+0x12c>
    30a4:	bl	0 <coda_set_error>
    30a8:	mvn	r0, #0
    30ac:	b	3014 <coda_type_raw_validate+0x78>
    30b0:	.word	0xfffffe70
    30b4:	.word	0x000010e4
    30b8:	.word	0x000010a0
    30bc:	.word	0x00000875
    30c0:	.word	0x00000000
    30c4:	.word	0x000001b4
    30c8:	.word	0x00001068

000030cc <coda_type_raw_file_singleton>:
    30cc:	push	{r4, r5, r6, lr}
    30d0:	bl	0 <__aeabi_read_tp>
    30d4:	ldr	r5, [pc, #136]	; 3164 <coda_type_raw_file_singleton+0x98>
    30d8:	sub	sp, sp, #8
    30dc:	add	r0, r5, r0
    30e0:	ldr	r4, [r0, #44]	; 0x2c
    30e4:	cmp	r4, #0
    30e8:	beq	30f8 <coda_type_raw_file_singleton+0x2c>
    30ec:	mov	r0, r4
    30f0:	add	sp, sp, #8
    30f4:	pop	{r4, r5, r6, pc}
    30f8:	mov	r0, #1
    30fc:	bl	2df4 <coda_type_raw_new>
    3100:	subs	r6, r0, #0
    3104:	beq	30ec <coda_type_raw_file_singleton+0x20>
    3108:	add	r1, sp, #4
    310c:	ldr	r0, [pc, #84]	; 3168 <coda_type_raw_file_singleton+0x9c>
    3110:	bl	0 <coda_expression_from_string>
    3114:	cmp	r0, #0
    3118:	bne	3144 <coda_type_raw_file_singleton+0x78>
    311c:	ldr	r1, [sp, #4]
    3120:	mov	r0, r6
    3124:	bl	100c <coda_type_set_byte_size_expression>
    3128:	cmp	r0, #0
    312c:	bne	3150 <coda_type_raw_file_singleton+0x84>
    3130:	bl	0 <__aeabi_read_tp>
    3134:	add	r0, r5, r0
    3138:	mov	r4, r6
    313c:	str	r6, [r0, #44]	; 0x2c
    3140:	b	30ec <coda_type_raw_file_singleton+0x20>
    3144:	mov	r0, r6
    3148:	bl	904 <raw_delete>
    314c:	b	311c <coda_type_raw_file_singleton+0x50>
    3150:	ldr	r0, [sp, #4]
    3154:	bl	0 <coda_expression_delete>
    3158:	mov	r0, r6
    315c:	bl	904 <raw_delete>
    3160:	b	30ec <coda_type_raw_file_singleton+0x20>
    3164:	.word	0x00000000
    3168:	.word	0x00001134

0000316c <coda_type_no_data_singleton>:
    316c:	cmp	r0, #10
    3170:	push	{r4, r5, r6, r7, r8, r9, lr}
    3174:	sub	sp, sp, #12
    3178:	bhi	3258 <coda_type_no_data_singleton+0xec>
    317c:	ldr	r4, [pc, #232]	; 326c <coda_type_no_data_singleton+0x100>
    3180:	mov	r6, r0
    3184:	bl	0 <__aeabi_read_tp>
    3188:	add	r4, r4, r0
    318c:	add	r4, r4, r6, lsl #2
    3190:	ldr	r5, [r4, #48]	; 0x30
    3194:	cmp	r5, #0
    3198:	beq	31a8 <coda_type_no_data_singleton+0x3c>
    319c:	mov	r0, r5
    31a0:	add	sp, sp, #12
    31a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    31a8:	mov	r0, #56	; 0x38
    31ac:	bl	0 <malloc>
    31b0:	subs	r7, r0, #0
    31b4:	beq	3238 <coda_type_no_data_singleton+0xcc>
    31b8:	mov	r8, #0
    31bc:	mov	r9, #0
    31c0:	mov	r2, #6
    31c4:	mvn	r3, #0
    31c8:	str	r6, [r7]
    31cc:	str	r5, [r7, #4]
    31d0:	str	r5, [r7, #16]
    31d4:	str	r5, [r7, #20]
    31d8:	str	r5, [r7, #32]
    31dc:	str	r5, [r7, #36]	; 0x24
    31e0:	str	r5, [r7, #40]	; 0x28
    31e4:	str	r5, [r7, #44]	; 0x2c
    31e8:	str	r5, [r7, #48]	; 0x30
    31ec:	str	r5, [r7, #52]	; 0x34
    31f0:	mov	r0, r6
    31f4:	strd	r8, [r7, #24]
    31f8:	str	r2, [r7, #8]
    31fc:	str	r3, [r7, #12]
    3200:	bl	2df4 <coda_type_raw_new>
    3204:	cmp	r0, #0
    3208:	str	r0, [r7, #44]	; 0x2c
    320c:	beq	322c <coda_type_no_data_singleton+0xc0>
    3210:	mov	r2, r8
    3214:	mov	r3, r9
    3218:	bl	d34 <coda_type_set_bit_size>
    321c:	cmp	r0, #0
    3220:	moveq	r5, r7
    3224:	streq	r7, [r4, #48]	; 0x30
    3228:	beq	319c <coda_type_no_data_singleton+0x30>
    322c:	mov	r0, r7
    3230:	bl	984 <special_delete>
    3234:	b	319c <coda_type_no_data_singleton+0x30>
    3238:	ldr	r2, [pc, #48]	; 3270 <coda_type_no_data_singleton+0x104>
    323c:	ldr	r3, [pc, #48]	; 3274 <coda_type_no_data_singleton+0x108>
    3240:	str	r2, [sp]
    3244:	ldr	r1, [pc, #44]	; 3278 <coda_type_no_data_singleton+0x10c>
    3248:	mov	r2, #56	; 0x38
    324c:	mvn	r0, #0
    3250:	bl	0 <coda_set_error>
    3254:	b	319c <coda_type_no_data_singleton+0x30>
    3258:	ldr	r3, [pc, #28]	; 327c <coda_type_no_data_singleton+0x110>
    325c:	ldr	r2, [pc, #28]	; 3280 <coda_type_no_data_singleton+0x114>
    3260:	ldr	r1, [pc, #12]	; 3274 <coda_type_no_data_singleton+0x108>
    3264:	ldr	r0, [pc, #24]	; 3284 <coda_type_no_data_singleton+0x118>
    3268:	bl	0 <__assert_fail>
    326c:	.word	0x00000000
    3270:	.word	0x000008c5
    3274:	.word	0x00000000
    3278:	.word	0x00000078
    327c:	.word	0x000000b0
    3280:	.word	0x000008bb
    3284:	.word	0x00001140

00003288 <coda_type_vsf_integer_new>:
    3288:	push	{r4, r5, r6, r7, lr}
    328c:	mov	r5, r0
    3290:	sub	sp, sp, #12
    3294:	mov	r0, #56	; 0x38
    3298:	bl	0 <malloc>
    329c:	subs	r4, r0, #0
    32a0:	beq	3310 <coda_type_vsf_integer_new+0x88>
    32a4:	mvn	r6, #0
    32a8:	mvn	r7, #0
    32ac:	mov	r3, #0
    32b0:	mov	r1, #9
    32b4:	mov	ip, #6
    32b8:	mov	r2, #1
    32bc:	str	r1, [r4, #12]
    32c0:	str	r5, [r4]
    32c4:	mov	r0, r5
    32c8:	strd	r6, [r4, #24]
    32cc:	str	r3, [r4, #4]
    32d0:	str	r3, [r4, #16]
    32d4:	str	r3, [r4, #20]
    32d8:	str	r3, [r4, #32]
    32dc:	str	r3, [r4, #36]	; 0x24
    32e0:	str	r3, [r4, #44]	; 0x2c
    32e4:	str	r3, [r4, #48]	; 0x30
    32e8:	str	r3, [r4, #52]	; 0x34
    32ec:	str	ip, [r4, #8]
    32f0:	str	r2, [r4, #40]	; 0x28
    32f4:	bl	165c <coda_type_record_new>
    32f8:	ldr	r1, [pc, #48]	; 3330 <coda_type_vsf_integer_new+0xa8>
    32fc:	str	r0, [r4, #44]	; 0x2c
    3300:	bl	c70 <coda_type_set_description>
    3304:	mov	r0, r4
    3308:	add	sp, sp, #12
    330c:	pop	{r4, r5, r6, r7, pc}
    3310:	mov	r3, #2288	; 0x8f0
    3314:	str	r3, [sp]
    3318:	mov	r2, #56	; 0x38
    331c:	ldr	r3, [pc, #16]	; 3334 <coda_type_vsf_integer_new+0xac>
    3320:	ldr	r1, [pc, #16]	; 3338 <coda_type_vsf_integer_new+0xb0>
    3324:	mvn	r0, #0
    3328:	bl	0 <coda_set_error>
    332c:	b	3304 <coda_type_vsf_integer_new+0x7c>
    3330:	.word	0x00001160
    3334:	.word	0x00000000
    3338:	.word	0x00000078

0000333c <coda_type_vsf_integer_set_type>:
    333c:	ldr	r3, [r0]
    3340:	ldr	r2, [r1]
    3344:	push	{r4, r5, r6, lr}
    3348:	cmp	r3, r2
    334c:	bne	33ac <coda_type_vsf_integer_set_type+0x70>
    3350:	ldr	r3, [r0, #44]	; 0x2c
    3354:	mov	r4, r0
    3358:	ldr	r3, [r3, #48]	; 0x30
    335c:	cmp	r3, #1
    3360:	bne	33e8 <coda_type_vsf_integer_set_type+0xac>
    3364:	ldr	r0, [pc, #168]	; 3414 <coda_type_vsf_integer_set_type+0xd8>
    3368:	mov	r5, r1
    336c:	bl	118c <coda_type_record_field_new>
    3370:	subs	r6, r0, #0
    3374:	beq	340c <coda_type_vsf_integer_set_type+0xd0>
    3378:	mov	r1, r5
    337c:	bl	1360 <coda_type_record_field_set_type>
    3380:	cmp	r0, #0
    3384:	bne	33fc <coda_type_vsf_integer_set_type+0xc0>
    3388:	mov	r1, r6
    338c:	ldr	r0, [r4, #44]	; 0x2c
    3390:	bl	1c30 <coda_type_record_add_field>
    3394:	cmp	r0, #0
    3398:	bne	33fc <coda_type_vsf_integer_set_type+0xc0>
    339c:	ldr	r3, [r4, #44]	; 0x2c
    33a0:	ldrd	r2, [r3, #24]
    33a4:	strd	r2, [r4, #24]
    33a8:	pop	{r4, r5, r6, pc}
    33ac:	cmp	r2, #9
    33b0:	ldr	r0, [pc, #96]	; 3418 <coda_type_vsf_integer_set_type+0xdc>
    33b4:	ldrls	r1, [pc, #96]	; 341c <coda_type_vsf_integer_set_type+0xe0>
    33b8:	ldrhi	r2, [pc, #96]	; 3420 <coda_type_vsf_integer_set_type+0xe4>
    33bc:	addls	r2, r1, r2, lsl #2
    33c0:	ldrls	r2, [r2, #84]	; 0x54
    33c4:	cmp	r3, #9
    33c8:	ldrls	r1, [pc, #76]	; 341c <coda_type_vsf_integer_set_type+0xe0>
    33cc:	ldrhi	r3, [pc, #76]	; 3420 <coda_type_vsf_integer_set_type+0xe4>
    33d0:	addls	r3, r1, r3, lsl #2
    33d4:	ldr	r1, [pc, #72]	; 3424 <coda_type_vsf_integer_set_type+0xe8>
    33d8:	ldrls	r3, [r3, #84]	; 0x54
    33dc:	bl	0 <coda_set_error>
    33e0:	mvn	r0, #0
    33e4:	pop	{r4, r5, r6, pc}
    33e8:	ldr	r1, [pc, #56]	; 3428 <coda_type_vsf_integer_set_type+0xec>
    33ec:	ldr	r0, [pc, #36]	; 3418 <coda_type_vsf_integer_set_type+0xdc>
    33f0:	bl	0 <coda_set_error>
    33f4:	mvn	r0, #0
    33f8:	pop	{r4, r5, r6, pc}
    33fc:	mov	r0, r6
    3400:	bl	554 <coda_type_record_field_delete>
    3404:	mvn	r0, #0
    3408:	pop	{r4, r5, r6, pc}
    340c:	mvn	r0, #0
    3410:	pop	{r4, r5, r6, pc}
    3414:	.word	0x00001200
    3418:	.word	0xfffffe70
    341c:	.word	0x00000000
    3420:	.word	0x000001ac
    3424:	.word	0x00001180
    3428:	.word	0x000011c8

0000342c <coda_type_vsf_integer_set_unit>:
    342c:	cmp	r1, #0
    3430:	push	{r4, r5, r6, lr}
    3434:	beq	3478 <coda_type_vsf_integer_set_unit+0x4c>
    3438:	ldr	r4, [r0, #48]	; 0x30
    343c:	mov	r5, r0
    3440:	cmp	r4, #0
    3444:	bne	3464 <coda_type_vsf_integer_set_unit+0x38>
    3448:	mov	r0, r1
    344c:	bl	0 <strdup>
    3450:	cmp	r0, #0
    3454:	str	r0, [r5, #48]	; 0x30
    3458:	beq	3494 <coda_type_vsf_integer_set_unit+0x68>
    345c:	mov	r0, r4
    3460:	pop	{r4, r5, r6, pc}
    3464:	ldr	r1, [pc, #68]	; 34b0 <coda_type_vsf_integer_set_unit+0x84>
    3468:	ldr	r0, [pc, #68]	; 34b4 <coda_type_vsf_integer_set_unit+0x88>
    346c:	bl	0 <coda_set_error>
    3470:	mvn	r0, #0
    3474:	pop	{r4, r5, r6, pc}
    3478:	ldr	r3, [pc, #56]	; 34b8 <coda_type_vsf_integer_set_unit+0x8c>
    347c:	ldr	r2, [pc, #56]	; 34bc <coda_type_vsf_integer_set_unit+0x90>
    3480:	ldr	r1, [pc, #56]	; 34c0 <coda_type_vsf_integer_set_unit+0x94>
    3484:	mvn	r0, #99	; 0x63
    3488:	bl	0 <coda_set_error>
    348c:	mvn	r0, #0
    3490:	pop	{r4, r5, r6, pc}
    3494:	ldr	r3, [pc, #40]	; 34c4 <coda_type_vsf_integer_set_unit+0x98>
    3498:	ldr	r2, [pc, #28]	; 34bc <coda_type_vsf_integer_set_unit+0x90>
    349c:	ldr	r1, [pc, #36]	; 34c8 <coda_type_vsf_integer_set_unit+0x9c>
    34a0:	mvn	r0, #0
    34a4:	bl	0 <coda_set_error>
    34a8:	mvn	r0, #0
    34ac:	pop	{r4, r5, r6, pc}
    34b0:	.word	0x00000af0
    34b4:	.word	0xfffffe70
    34b8:	.word	0x0000096c
    34bc:	.word	0x00000000
    34c0:	.word	0x00000ad0
    34c4:	.word	0x00000978
    34c8:	.word	0x000000f8

000034cc <coda_type_vsf_integer_validate>:
    34cc:	ldr	r3, [r0, #44]	; 0x2c
    34d0:	ldr	r3, [r3, #48]	; 0x30
    34d4:	cmp	r3, #2
    34d8:	bne	34e4 <coda_type_vsf_integer_validate+0x18>
    34dc:	mov	r0, #0
    34e0:	bx	lr
    34e4:	push	{r4, lr}
    34e8:	ldr	r1, [pc, #12]	; 34fc <coda_type_vsf_integer_validate+0x30>
    34ec:	ldr	r0, [pc, #12]	; 3500 <coda_type_vsf_integer_validate+0x34>
    34f0:	bl	0 <coda_set_error>
    34f4:	mvn	r0, #0
    34f8:	pop	{r4, pc}
    34fc:	.word	0x00001208
    3500:	.word	0xfffffe70

00003504 <coda_type_time_new>:
    3504:	push	{r4, r5, r6, lr}
    3508:	subs	r5, r1, #0
    350c:	sub	sp, sp, #8
    3510:	beq	3594 <coda_type_time_new+0x90>
    3514:	mov	r6, r0
    3518:	mov	r0, #56	; 0x38
    351c:	bl	0 <malloc>
    3520:	subs	r4, r0, #0
    3524:	beq	35b0 <coda_type_time_new+0xac>
    3528:	mvn	r0, #0
    352c:	mvn	r1, #0
    3530:	mov	r3, #0
    3534:	mov	lr, #6
    3538:	mov	ip, #9
    353c:	mov	r2, #2
    3540:	str	r5, [r4, #52]	; 0x34
    3544:	strd	r0, [r4, #24]
    3548:	str	r6, [r4]
    354c:	str	r3, [r4, #4]
    3550:	str	r3, [r4, #16]
    3554:	str	r3, [r4, #20]
    3558:	str	r3, [r4, #32]
    355c:	str	r3, [r4, #36]	; 0x24
    3560:	str	r3, [r4, #44]	; 0x2c
    3564:	str	lr, [r4, #8]
    3568:	str	ip, [r4, #12]
    356c:	str	r2, [r4, #40]	; 0x28
    3570:	ldr	r0, [pc, #124]	; 35f4 <coda_type_time_new+0xf0>
    3574:	bl	0 <strdup>
    3578:	cmp	r0, #0
    357c:	mov	r5, r0
    3580:	str	r0, [r4, #48]	; 0x30
    3584:	beq	35d0 <coda_type_time_new+0xcc>
    3588:	mov	r0, r4
    358c:	add	sp, sp, #8
    3590:	pop	{r4, r5, r6, pc}
    3594:	ldr	r3, [pc, #92]	; 35f8 <coda_type_time_new+0xf4>
    3598:	ldr	r2, [pc, #92]	; 35fc <coda_type_time_new+0xf8>
    359c:	ldr	r1, [pc, #92]	; 3600 <coda_type_time_new+0xfc>
    35a0:	mvn	r0, #99	; 0x63
    35a4:	mov	r4, r5
    35a8:	bl	0 <coda_set_error>
    35ac:	b	3588 <coda_type_time_new+0x84>
    35b0:	ldr	r2, [pc, #76]	; 3604 <coda_type_time_new+0x100>
    35b4:	ldr	r3, [pc, #64]	; 35fc <coda_type_time_new+0xf8>
    35b8:	str	r2, [sp]
    35bc:	ldr	r1, [pc, #68]	; 3608 <coda_type_time_new+0x104>
    35c0:	mov	r2, #56	; 0x38
    35c4:	mvn	r0, #0
    35c8:	bl	0 <coda_set_error>
    35cc:	b	3588 <coda_type_time_new+0x84>
    35d0:	ldr	r3, [pc, #52]	; 360c <coda_type_time_new+0x108>
    35d4:	ldr	r2, [pc, #32]	; 35fc <coda_type_time_new+0xf8>
    35d8:	ldr	r1, [pc, #48]	; 3610 <coda_type_time_new+0x10c>
    35dc:	mvn	r0, #0
    35e0:	bl	0 <coda_set_error>
    35e4:	mov	r0, r4
    35e8:	bl	984 <special_delete>
    35ec:	mov	r4, r5
    35f0:	b	3588 <coda_type_time_new+0x84>
    35f4:	.word	0x00001268
    35f8:	.word	0x0000098f
    35fc:	.word	0x00000000
    3600:	.word	0x00001244
    3604:	.word	0x00000997
    3608:	.word	0x00000078
    360c:	.word	0x000009ac
    3610:	.word	0x000000f8

00003614 <coda_type_time_add_ascii_float_mapping>:
    3614:	push	{r4, r5, r6, r7, r8, lr}
    3618:	subs	r6, r0, #0
    361c:	sub	sp, sp, #72	; 0x48
    3620:	beq	3838 <coda_type_time_add_ascii_float_mapping+0x224>
    3624:	cmp	r1, #0
    3628:	mov	r5, r1
    362c:	beq	381c <coda_type_time_add_ascii_float_mapping+0x208>
    3630:	ldr	r3, [r6, #40]	; 0x28
    3634:	cmp	r3, #2
    3638:	bne	37f4 <coda_type_time_add_ascii_float_mapping+0x1e0>
    363c:	ldr	r3, [r6, #44]	; 0x2c
    3640:	cmp	r3, #0
    3644:	beq	3854 <coda_type_time_add_ascii_float_mapping+0x240>
    3648:	ldr	r3, [r3, #8]
    364c:	cmp	r3, #4
    3650:	bne	37cc <coda_type_time_add_ascii_float_mapping+0x1b8>
    3654:	ldr	r2, [r1]
    3658:	add	r0, sp, #8
    365c:	ldr	r1, [pc, #516]	; 3868 <coda_type_time_add_ascii_float_mapping+0x254>
    3660:	bl	0 <sprintf>
    3664:	add	r0, sp, #8
    3668:	bl	0 <strdup>
    366c:	mov	r4, #0
    3670:	str	r4, [sp, #4]
    3674:	str	r4, [sp]
    3678:	mov	r3, r4
    367c:	mov	r2, r4
    3680:	mov	r1, r0
    3684:	mov	r0, #20
    3688:	bl	0 <coda_expression_new>
    368c:	ldr	r7, [r5]
    3690:	cmp	r7, r4
    3694:	mov	r8, r0
    3698:	beq	378c <coda_type_time_add_ascii_float_mapping+0x178>
    369c:	mov	r3, r4
    36a0:	mov	r2, r4
    36a4:	mov	r1, r4
    36a8:	str	r4, [sp, #4]
    36ac:	str	r4, [sp]
    36b0:	mov	r0, #36	; 0x24
    36b4:	bl	0 <coda_expression_new>
    36b8:	mov	r3, r8
    36bc:	mov	r1, r4
    36c0:	str	r4, [sp, #4]
    36c4:	str	r4, [sp]
    36c8:	mov	r2, r0
    36cc:	mov	r0, #75	; 0x4b
    36d0:	bl	0 <coda_expression_new>
    36d4:	mov	r7, r0
    36d8:	ldr	r0, [r5, #4]
    36dc:	bl	0 <strdup>
    36e0:	str	r4, [sp, #4]
    36e4:	str	r4, [sp]
    36e8:	mov	r3, r4
    36ec:	mov	r2, r4
    36f0:	mov	r1, r0
    36f4:	mov	r0, #22
    36f8:	bl	0 <coda_expression_new>
    36fc:	mov	r8, r0
    3700:	mov	r4, #0
    3704:	mov	r2, r7
    3708:	mov	r3, r8
    370c:	mov	r1, r4
    3710:	str	r4, [sp, #4]
    3714:	str	r4, [sp]
    3718:	mov	r0, #25
    371c:	bl	0 <coda_expression_new>
    3720:	vldr	d0, [r5, #8]
    3724:	mov	r7, r0
    3728:	add	r0, sp, #8
    372c:	bl	0 <coda_strfl>
    3730:	add	r0, sp, #8
    3734:	bl	0 <strdup>
    3738:	mov	r3, r4
    373c:	mov	r2, r4
    3740:	str	r4, [sp, #4]
    3744:	str	r4, [sp]
    3748:	mov	r1, r0
    374c:	mov	r0, #19
    3750:	bl	0 <coda_expression_new>
    3754:	str	r4, [sp, #4]
    3758:	ldr	r3, [r6, #52]	; 0x34
    375c:	mov	r2, r7
    3760:	str	r3, [sp]
    3764:	mov	r1, r4
    3768:	mov	r3, r0
    376c:	mov	r0, #42	; 0x2a
    3770:	bl	0 <coda_expression_new>
    3774:	str	r0, [r6, #52]	; 0x34
    3778:	mov	r0, r5
    377c:	bl	0 <mapping_delete>
    3780:	mov	r0, r4
    3784:	add	sp, sp, #72	; 0x48
    3788:	pop	{r4, r5, r6, r7, r8, pc}
    378c:	mov	r3, r7
    3790:	mov	r2, r7
    3794:	mov	r1, r7
    3798:	str	r7, [sp, #4]
    379c:	str	r7, [sp]
    37a0:	mov	r0, #36	; 0x24
    37a4:	bl	0 <coda_expression_new>
    37a8:	str	r7, [sp, #4]
    37ac:	str	r7, [sp]
    37b0:	mov	r3, r7
    37b4:	mov	r1, r7
    37b8:	mov	r2, r0
    37bc:	mov	r0, #50	; 0x32
    37c0:	bl	0 <coda_expression_new>
    37c4:	mov	r7, r0
    37c8:	b	3700 <coda_type_time_add_ascii_float_mapping+0xec>
    37cc:	cmp	r3, #6
    37d0:	ldr	r1, [pc, #148]	; 386c <coda_type_time_add_ascii_float_mapping+0x258>
    37d4:	ldrls	r2, [pc, #148]	; 3870 <coda_type_time_add_ascii_float_mapping+0x25c>
    37d8:	ldrhi	r2, [pc, #148]	; 3874 <coda_type_time_add_ascii_float_mapping+0x260>
    37dc:	ldr	r0, [pc, #148]	; 3878 <coda_type_time_add_ascii_float_mapping+0x264>
    37e0:	ldrls	r2, [r2, r3, lsl #2]
    37e4:	bl	0 <coda_set_error>
    37e8:	mvn	r0, #0
    37ec:	add	sp, sp, #72	; 0x48
    37f0:	pop	{r4, r5, r6, r7, r8, pc}
    37f4:	cmp	r3, #3
    37f8:	ldr	r0, [pc, #120]	; 3878 <coda_type_time_add_ascii_float_mapping+0x264>
    37fc:	ldrls	r2, [pc, #108]	; 3870 <coda_type_time_add_ascii_float_mapping+0x25c>
    3800:	ldrhi	r2, [pc, #108]	; 3874 <coda_type_time_add_ascii_float_mapping+0x260>
    3804:	addls	r3, r2, r3, lsl #2
    3808:	ldr	r1, [pc, #108]	; 387c <coda_type_time_add_ascii_float_mapping+0x268>
    380c:	ldrls	r2, [r3, #204]	; 0xcc
    3810:	bl	0 <coda_set_error>
    3814:	mvn	r0, #0
    3818:	b	3784 <coda_type_time_add_ascii_float_mapping+0x170>
    381c:	mvn	r0, #99	; 0x63
    3820:	ldr	r3, [pc, #88]	; 3880 <coda_type_time_add_ascii_float_mapping+0x26c>
    3824:	ldr	r2, [pc, #88]	; 3884 <coda_type_time_add_ascii_float_mapping+0x270>
    3828:	ldr	r1, [pc, #88]	; 3888 <coda_type_time_add_ascii_float_mapping+0x274>
    382c:	bl	0 <coda_set_error>
    3830:	mvn	r0, #0
    3834:	b	3784 <coda_type_time_add_ascii_float_mapping+0x170>
    3838:	mvn	r0, #99	; 0x63
    383c:	ldr	r3, [pc, #72]	; 388c <coda_type_time_add_ascii_float_mapping+0x278>
    3840:	ldr	r2, [pc, #60]	; 3884 <coda_type_time_add_ascii_float_mapping+0x270>
    3844:	ldr	r1, [pc, #68]	; 3890 <coda_type_time_add_ascii_float_mapping+0x27c>
    3848:	bl	0 <coda_set_error>
    384c:	mvn	r0, #0
    3850:	b	3784 <coda_type_time_add_ascii_float_mapping+0x170>
    3854:	ldr	r0, [pc, #28]	; 3878 <coda_type_time_add_ascii_float_mapping+0x264>
    3858:	ldr	r1, [pc, #52]	; 3894 <coda_type_time_add_ascii_float_mapping+0x280>
    385c:	bl	0 <coda_set_error>
    3860:	mvn	r0, #0
    3864:	b	3784 <coda_type_time_add_ascii_float_mapping+0x170>
    3868:	.word	0x00001330
    386c:	.word	0x000012e4
    3870:	.word	0x00000000
    3874:	.word	0x000001ac
    3878:	.word	0xfffffe70
    387c:	.word	0x0000127c
    3880:	.word	0x000009c2
    3884:	.word	0x00000000
    3888:	.word	0x00000b28
    388c:	.word	0x000009bd
    3890:	.word	0x000001b4
    3894:	.word	0x000012bc

00003898 <coda_type_time_set_base_type>:
    3898:	subs	r3, r0, #0
    389c:	push	{r4, r5, r6, lr}
    38a0:	beq	391c <coda_type_time_set_base_type+0x84>
    38a4:	cmp	r1, #0
    38a8:	beq	3938 <coda_type_time_set_base_type+0xa0>
    38ac:	ldr	r2, [r3, #40]	; 0x28
    38b0:	cmp	r2, #2
    38b4:	bne	38e0 <coda_type_time_set_base_type+0x48>
    38b8:	ldr	r0, [r3, #44]	; 0x2c
    38bc:	cmp	r0, #0
    38c0:	bne	3908 <coda_type_time_set_base_type+0x70>
    38c4:	ldr	r2, [r1, #4]
    38c8:	ldrd	r4, [r1, #24]
    38cc:	add	r2, r2, #1
    38d0:	str	r1, [r3, #44]	; 0x2c
    38d4:	str	r2, [r1, #4]
    38d8:	strd	r4, [r3, #24]
    38dc:	pop	{r4, r5, r6, pc}
    38e0:	cmp	r2, #3
    38e4:	ldr	r1, [pc, #104]	; 3954 <coda_type_time_set_base_type+0xbc>
    38e8:	ldrls	r3, [pc, #104]	; 3958 <coda_type_time_set_base_type+0xc0>
    38ec:	ldrhi	r2, [pc, #104]	; 395c <coda_type_time_set_base_type+0xc4>
    38f0:	addls	r2, r3, r2, lsl #2
    38f4:	ldr	r0, [pc, #100]	; 3960 <coda_type_time_set_base_type+0xc8>
    38f8:	ldrls	r2, [r2, #204]	; 0xcc
    38fc:	bl	0 <coda_set_error>
    3900:	mvn	r0, #0
    3904:	pop	{r4, r5, r6, pc}
    3908:	ldr	r1, [pc, #84]	; 3964 <coda_type_time_set_base_type+0xcc>
    390c:	ldr	r0, [pc, #76]	; 3960 <coda_type_time_set_base_type+0xc8>
    3910:	bl	0 <coda_set_error>
    3914:	mvn	r0, #0
    3918:	pop	{r4, r5, r6, pc}
    391c:	ldr	r3, [pc, #68]	; 3968 <coda_type_time_set_base_type+0xd0>
    3920:	ldr	r2, [pc, #68]	; 396c <coda_type_time_set_base_type+0xd4>
    3924:	ldr	r1, [pc, #68]	; 3970 <coda_type_time_set_base_type+0xd8>
    3928:	mvn	r0, #99	; 0x63
    392c:	bl	0 <coda_set_error>
    3930:	mvn	r0, #0
    3934:	pop	{r4, r5, r6, pc}
    3938:	ldr	r3, [pc, #52]	; 3974 <coda_type_time_set_base_type+0xdc>
    393c:	ldr	r2, [pc, #40]	; 396c <coda_type_time_set_base_type+0xd4>
    3940:	ldr	r1, [pc, #48]	; 3978 <coda_type_time_set_base_type+0xe0>
    3944:	mvn	r0, #99	; 0x63
    3948:	bl	0 <coda_set_error>
    394c:	mvn	r0, #0
    3950:	pop	{r4, r5, r6, pc}
    3954:	.word	0x00001358
    3958:	.word	0x00000000
    395c:	.word	0x000001ac
    3960:	.word	0xfffffe70
    3964:	.word	0x00001384
    3968:	.word	0x000009f4
    396c:	.word	0x00000000
    3970:	.word	0x000001b4
    3974:	.word	0x000009f9
    3978:	.word	0x00001334

0000397c <coda_type_time_validate>:
    397c:	ldr	r3, [r0, #44]	; 0x2c
    3980:	cmp	r3, #0
    3984:	beq	3990 <coda_type_time_validate+0x14>
    3988:	mov	r0, #0
    398c:	bx	lr
    3990:	push	{r4, lr}
    3994:	ldr	r1, [pc, #12]	; 39a8 <coda_type_time_validate+0x2c>
    3998:	ldr	r0, [pc, #12]	; 39ac <coda_type_time_validate+0x30>
    399c:	bl	0 <coda_set_error>
    39a0:	mvn	r0, #0
    39a4:	pop	{r4, pc}
    39a8:	.word	0x000013ac
    39ac:	.word	0xfffffe70

000039b0 <coda_type_complex_new>:
    39b0:	push	{r4, r5, r6, r7, lr}
    39b4:	mov	r5, r0
    39b8:	sub	sp, sp, #12
    39bc:	mov	r0, #56	; 0x38
    39c0:	bl	0 <malloc>
    39c4:	subs	r4, r0, #0
    39c8:	beq	3a24 <coda_type_complex_new+0x74>
    39cc:	mvn	r6, #0
    39d0:	mvn	r7, #0
    39d4:	mov	r3, #0
    39d8:	mov	r0, #6
    39dc:	mvn	r1, #0
    39e0:	mov	r2, #3
    39e4:	str	r5, [r4]
    39e8:	strd	r6, [r4, #24]
    39ec:	str	r3, [r4, #4]
    39f0:	str	r3, [r4, #16]
    39f4:	str	r3, [r4, #20]
    39f8:	str	r3, [r4, #32]
    39fc:	str	r3, [r4, #36]	; 0x24
    3a00:	str	r3, [r4, #44]	; 0x2c
    3a04:	str	r3, [r4, #48]	; 0x30
    3a08:	str	r3, [r4, #52]	; 0x34
    3a0c:	str	r0, [r4, #8]
    3a10:	str	r1, [r4, #12]
    3a14:	str	r2, [r4, #40]	; 0x28
    3a18:	mov	r0, r4
    3a1c:	add	sp, sp, #12
    3a20:	pop	{r4, r5, r6, r7, pc}
    3a24:	ldr	r2, [pc, #24]	; 3a44 <coda_type_complex_new+0x94>
    3a28:	ldr	r3, [pc, #24]	; 3a48 <coda_type_complex_new+0x98>
    3a2c:	str	r2, [sp]
    3a30:	ldr	r1, [pc, #20]	; 3a4c <coda_type_complex_new+0x9c>
    3a34:	mov	r2, #56	; 0x38
    3a38:	mvn	r0, #0
    3a3c:	bl	0 <coda_set_error>
    3a40:	b	3a18 <coda_type_complex_new+0x68>
    3a44:	.word	0x00000a23
    3a48:	.word	0x00000000
    3a4c:	.word	0x00000078

00003a50 <coda_type_complex_set_type>:
    3a50:	push	{r4, r5, r6, r7, r8, lr}
    3a54:	ldr	r5, [r0, #44]	; 0x2c
    3a58:	cmp	r5, #0
    3a5c:	bne	3b48 <coda_type_complex_set_type+0xf8>
    3a60:	ldr	r3, [r1, #8]
    3a64:	mov	r4, r0
    3a68:	sub	r3, r3, #2
    3a6c:	cmp	r3, #1
    3a70:	mov	r6, r1
    3a74:	bhi	3b20 <coda_type_complex_set_type+0xd0>
    3a78:	ldr	r0, [r0]
    3a7c:	ldr	r3, [r1]
    3a80:	cmp	r0, r3
    3a84:	bne	3ae4 <coda_type_complex_set_type+0x94>
    3a88:	bl	165c <coda_type_record_new>
    3a8c:	str	r0, [r4, #44]	; 0x2c
    3a90:	ldr	r0, [pc, #196]	; 3b5c <coda_type_complex_set_type+0x10c>
    3a94:	bl	118c <coda_type_record_field_new>
    3a98:	mov	r1, r6
    3a9c:	mov	r7, r0
    3aa0:	bl	1360 <coda_type_record_field_set_type>
    3aa4:	mov	r1, r7
    3aa8:	ldr	r0, [r4, #44]	; 0x2c
    3aac:	bl	1c30 <coda_type_record_add_field>
    3ab0:	ldr	r0, [pc, #168]	; 3b60 <coda_type_complex_set_type+0x110>
    3ab4:	bl	118c <coda_type_record_field_new>
    3ab8:	mov	r1, r6
    3abc:	mov	r7, r0
    3ac0:	bl	1360 <coda_type_record_field_set_type>
    3ac4:	mov	r1, r7
    3ac8:	ldr	r0, [r4, #44]	; 0x2c
    3acc:	bl	1c30 <coda_type_record_add_field>
    3ad0:	ldr	r3, [r4, #44]	; 0x2c
    3ad4:	mov	r0, r5
    3ad8:	ldrd	r2, [r3, #24]
    3adc:	strd	r2, [r4, #24]
    3ae0:	pop	{r4, r5, r6, r7, r8, pc}
    3ae4:	cmp	r3, #9
    3ae8:	ldr	r1, [pc, #116]	; 3b64 <coda_type_complex_set_type+0x114>
    3aec:	ldrls	r2, [pc, #116]	; 3b68 <coda_type_complex_set_type+0x118>
    3af0:	ldrhi	r2, [pc, #116]	; 3b6c <coda_type_complex_set_type+0x11c>
    3af4:	addls	r3, r2, r3, lsl #2
    3af8:	ldrls	r2, [r3, #84]	; 0x54
    3afc:	cmp	r0, #9
    3b00:	ldrls	r3, [pc, #96]	; 3b68 <coda_type_complex_set_type+0x118>
    3b04:	ldrhi	r3, [pc, #96]	; 3b6c <coda_type_complex_set_type+0x11c>
    3b08:	addls	r0, r3, r0, lsl #2
    3b0c:	ldrls	r3, [r0, #84]	; 0x54
    3b10:	ldr	r0, [pc, #88]	; 3b70 <coda_type_complex_set_type+0x120>
    3b14:	bl	0 <coda_set_error>
    3b18:	mvn	r0, #0
    3b1c:	pop	{r4, r5, r6, r7, r8, pc}
    3b20:	ldr	r3, [r0, #8]
    3b24:	ldr	r1, [pc, #72]	; 3b74 <coda_type_complex_set_type+0x124>
    3b28:	cmp	r3, #6
    3b2c:	ldr	r0, [pc, #60]	; 3b70 <coda_type_complex_set_type+0x120>
    3b30:	ldrls	r2, [pc, #48]	; 3b68 <coda_type_complex_set_type+0x118>
    3b34:	ldrhi	r2, [pc, #48]	; 3b6c <coda_type_complex_set_type+0x11c>
    3b38:	ldrls	r2, [r2, r3, lsl #2]
    3b3c:	bl	0 <coda_set_error>
    3b40:	mvn	r0, #0
    3b44:	pop	{r4, r5, r6, r7, r8, pc}
    3b48:	ldr	r1, [pc, #40]	; 3b78 <coda_type_complex_set_type+0x128>
    3b4c:	ldr	r0, [pc, #28]	; 3b70 <coda_type_complex_set_type+0x120>
    3b50:	bl	0 <coda_set_error>
    3b54:	mvn	r0, #0
    3b58:	pop	{r4, r5, r6, r7, r8, pc}
    3b5c:	.word	0x0000147c
    3b60:	.word	0x00001484
    3b64:	.word	0x00001434
    3b68:	.word	0x00000000
    3b6c:	.word	0x000001ac
    3b70:	.word	0xfffffe70
    3b74:	.word	0x000013f8
    3b78:	.word	0x000013cc

00003b7c <coda_type_complex_validate>:
    3b7c:	ldr	r3, [r0, #44]	; 0x2c
    3b80:	cmp	r3, #0
    3b84:	beq	3b90 <coda_type_complex_validate+0x14>
    3b88:	mov	r0, #0
    3b8c:	bx	lr
    3b90:	push	{r4, lr}
    3b94:	ldr	r1, [pc, #12]	; 3ba8 <coda_type_complex_validate+0x2c>
    3b98:	ldr	r0, [pc, #12]	; 3bac <coda_type_complex_validate+0x30>
    3b9c:	bl	0 <coda_set_error>
    3ba0:	mvn	r0, #0
    3ba4:	pop	{r4, pc}
    3ba8:	.word	0x00001490
    3bac:	.word	0xfffffe70

00003bb0 <coda_type_done>:
    3bb0:	push	{r4, r5, r6, r7, r8, lr}
    3bb4:	bl	0 <__aeabi_read_tp>
    3bb8:	ldr	r5, [pc, #164]	; 3c64 <coda_type_done+0xb4>
    3bbc:	mov	r7, #0
    3bc0:	add	r0, r5, r0
    3bc4:	sub	r4, r0, #4
    3bc8:	add	r6, r0, #40	; 0x28
    3bcc:	b	3bdc <coda_type_done+0x2c>
    3bd0:	str	r7, [r4, #4]!
    3bd4:	cmp	r4, r6
    3bd8:	beq	3c0c <coda_type_done+0x5c>
    3bdc:	ldr	r0, [r4, #4]
    3be0:	cmp	r0, #0
    3be4:	beq	3bd0 <coda_type_done+0x20>
    3be8:	ldr	r3, [r0, #4]
    3bec:	cmp	r3, #0
    3bf0:	sub	r3, r3, #1
    3bf4:	strgt	r3, [r0, #4]
    3bf8:	bgt	3bd0 <coda_type_done+0x20>
    3bfc:	bl	6a8 <coda_type_release.part.2>
    3c00:	str	r7, [r4, #4]!
    3c04:	cmp	r4, r6
    3c08:	bne	3bdc <coda_type_done+0x2c>
    3c0c:	bl	0 <__aeabi_read_tp>
    3c10:	add	r5, r5, r0
    3c14:	add	r4, r5, #44	; 0x2c
    3c18:	mov	r6, #0
    3c1c:	add	r5, r5, #88	; 0x58
    3c20:	b	3c30 <coda_type_done+0x80>
    3c24:	str	r6, [r4, #4]!
    3c28:	cmp	r5, r4
    3c2c:	beq	3c60 <coda_type_done+0xb0>
    3c30:	ldr	r0, [r4, #4]
    3c34:	cmp	r0, #0
    3c38:	beq	3c24 <coda_type_done+0x74>
    3c3c:	ldr	r3, [r0, #4]
    3c40:	cmp	r3, #0
    3c44:	sub	r3, r3, #1
    3c48:	strgt	r3, [r0, #4]
    3c4c:	bgt	3c24 <coda_type_done+0x74>
    3c50:	bl	6a8 <coda_type_release.part.2>
    3c54:	str	r6, [r4, #4]!
    3c58:	cmp	r5, r4
    3c5c:	bne	3c30 <coda_type_done+0x80>
    3c60:	pop	{r4, r5, r6, r7, r8, pc}
    3c64:	.word	0x00000000

00003c68 <coda_type_get_format_name>:
    3c68:	cmp	r0, #9
    3c6c:	ldrls	r3, [pc, #12]	; 3c80 <coda_type_get_format_name+0x18>
    3c70:	addls	r0, r3, r0, lsl #2
    3c74:	ldrls	r0, [r0, #84]	; 0x54
    3c78:	ldrhi	r0, [pc, #4]	; 3c84 <coda_type_get_format_name+0x1c>
    3c7c:	bx	lr
    3c80:	.word	0x00000000
    3c84:	.word	0x000001ac

00003c88 <coda_type_get_class_name>:
    3c88:	cmp	r0, #6
    3c8c:	ldrls	r3, [pc, #8]	; 3c9c <coda_type_get_class_name+0x14>
    3c90:	ldrls	r0, [r3, r0, lsl #2]
    3c94:	ldrhi	r0, [pc, #4]	; 3ca0 <coda_type_get_class_name+0x18>
    3c98:	bx	lr
    3c9c:	.word	0x00000000
    3ca0:	.word	0x000001ac

00003ca4 <coda_type_get_native_type_name>:
    3ca4:	add	r0, r0, #1
    3ca8:	cmp	r0, #13
    3cac:	ldrls	r3, [pc, #12]	; 3cc0 <coda_type_get_native_type_name+0x1c>
    3cb0:	addls	r0, r3, r0, lsl #2
    3cb4:	ldrls	r0, [r0, #28]
    3cb8:	ldrhi	r0, [pc, #4]	; 3cc4 <coda_type_get_native_type_name+0x20>
    3cbc:	bx	lr
    3cc0:	.word	0x00000000
    3cc4:	.word	0x000001ac

00003cc8 <coda_type_get_special_type_name>:
    3cc8:	cmp	r0, #3
    3ccc:	ldrls	r3, [pc, #12]	; 3ce0 <coda_type_get_special_type_name+0x18>
    3cd0:	addls	r0, r3, r0, lsl #2
    3cd4:	ldrls	r0, [r0, #204]	; 0xcc
    3cd8:	ldrhi	r0, [pc, #4]	; 3ce4 <coda_type_get_special_type_name+0x1c>
    3cdc:	bx	lr
    3ce0:	.word	0x00000000
    3ce4:	.word	0x000001ac

00003ce8 <coda_type_has_attributes>:
    3ce8:	cmp	r0, #0
    3cec:	push	{r4, lr}
    3cf0:	beq	3d14 <coda_type_has_attributes+0x2c>
    3cf4:	cmp	r1, #0
    3cf8:	beq	3d30 <coda_type_has_attributes+0x48>
    3cfc:	ldr	r3, [r0, #36]	; 0x24
    3d00:	mov	r0, #0
    3d04:	subs	r3, r3, r0
    3d08:	movne	r3, #1
    3d0c:	str	r3, [r1]
    3d10:	pop	{r4, pc}
    3d14:	ldr	r3, [pc, #48]	; 3d4c <coda_type_has_attributes+0x64>
    3d18:	ldr	r2, [pc, #48]	; 3d50 <coda_type_has_attributes+0x68>
    3d1c:	ldr	r1, [pc, #48]	; 3d54 <coda_type_has_attributes+0x6c>
    3d20:	mvn	r0, #99	; 0x63
    3d24:	bl	0 <coda_set_error>
    3d28:	mvn	r0, #0
    3d2c:	pop	{r4, pc}
    3d30:	ldr	r3, [pc, #32]	; 3d58 <coda_type_has_attributes+0x70>
    3d34:	ldr	r2, [pc, #20]	; 3d50 <coda_type_has_attributes+0x68>
    3d38:	ldr	r1, [pc, #28]	; 3d5c <coda_type_has_attributes+0x74>
    3d3c:	mvn	r0, #99	; 0x63
    3d40:	bl	0 <coda_set_error>
    3d44:	mvn	r0, #0
    3d48:	pop	{r4, pc}
    3d4c:	.word	0x00000b0d
    3d50:	.word	0x00000000
    3d54:	.word	0x000001b4
    3d58:	.word	0x00000b12
    3d5c:	.word	0x000014b8

00003d60 <coda_type_get_format>:
    3d60:	cmp	r0, #0
    3d64:	push	{r4, lr}
    3d68:	beq	3d84 <coda_type_get_format+0x24>
    3d6c:	cmp	r1, #0
    3d70:	beq	3da0 <coda_type_get_format+0x40>
    3d74:	ldr	r3, [r0]
    3d78:	mov	r0, #0
    3d7c:	str	r3, [r1]
    3d80:	pop	{r4, pc}
    3d84:	ldr	r3, [pc, #48]	; 3dbc <coda_type_get_format+0x5c>
    3d88:	ldr	r2, [pc, #48]	; 3dc0 <coda_type_get_format+0x60>
    3d8c:	ldr	r1, [pc, #48]	; 3dc4 <coda_type_get_format+0x64>
    3d90:	mvn	r0, #99	; 0x63
    3d94:	bl	0 <coda_set_error>
    3d98:	mvn	r0, #0
    3d9c:	pop	{r4, pc}
    3da0:	ldr	r3, [pc, #32]	; 3dc8 <coda_type_get_format+0x68>
    3da4:	ldr	r2, [pc, #20]	; 3dc0 <coda_type_get_format+0x60>
    3da8:	ldr	r1, [pc, #28]	; 3dcc <coda_type_get_format+0x6c>
    3dac:	mvn	r0, #99	; 0x63
    3db0:	bl	0 <coda_set_error>
    3db4:	mvn	r0, #0
    3db8:	pop	{r4, pc}
    3dbc:	.word	0x00000b25
    3dc0:	.word	0x00000000
    3dc4:	.word	0x000001b4
    3dc8:	.word	0x00000b2a
    3dcc:	.word	0x000014e0

00003dd0 <coda_type_get_class>:
    3dd0:	cmp	r0, #0
    3dd4:	push	{r4, lr}
    3dd8:	beq	3df4 <coda_type_get_class+0x24>
    3ddc:	cmp	r1, #0
    3de0:	beq	3e10 <coda_type_get_class+0x40>
    3de4:	ldr	r3, [r0, #8]
    3de8:	mov	r0, #0
    3dec:	str	r3, [r1]
    3df0:	pop	{r4, pc}
    3df4:	ldr	r3, [pc, #48]	; 3e2c <coda_type_get_class+0x5c>
    3df8:	ldr	r2, [pc, #48]	; 3e30 <coda_type_get_class+0x60>
    3dfc:	ldr	r1, [pc, #48]	; 3e34 <coda_type_get_class+0x64>
    3e00:	mvn	r0, #99	; 0x63
    3e04:	bl	0 <coda_set_error>
    3e08:	mvn	r0, #0
    3e0c:	pop	{r4, pc}
    3e10:	ldr	r3, [pc, #32]	; 3e38 <coda_type_get_class+0x68>
    3e14:	ldr	r2, [pc, #20]	; 3e30 <coda_type_get_class+0x60>
    3e18:	ldr	r1, [pc, #28]	; 3e3c <coda_type_get_class+0x6c>
    3e1c:	mvn	r0, #99	; 0x63
    3e20:	bl	0 <coda_set_error>
    3e24:	mvn	r0, #0
    3e28:	pop	{r4, pc}
    3e2c:	.word	0x00000b3d
    3e30:	.word	0x00000000
    3e34:	.word	0x000001b4
    3e38:	.word	0x00000b42
    3e3c:	.word	0x00001500

00003e40 <coda_type_get_read_type>:
    3e40:	subs	r2, r0, #0
    3e44:	push	{r4, lr}
    3e48:	beq	3ea8 <coda_type_get_read_type+0x68>
    3e4c:	cmp	r1, #0
    3e50:	beq	3ec4 <coda_type_get_read_type+0x84>
    3e54:	ldr	r3, [r2, #8]
    3e58:	sub	r3, r3, #2
    3e5c:	cmp	r3, #1
    3e60:	bls	3e74 <coda_type_get_read_type+0x34>
    3e64:	ldr	r3, [r2, #12]
    3e68:	mov	r0, #0
    3e6c:	str	r3, [r1]
    3e70:	pop	{r4, pc}
    3e74:	ldr	r3, [pc, #100]	; 3ee0 <coda_type_get_read_type+0xa0>
    3e78:	bl	0 <__aeabi_read_tp>
    3e7c:	ldr	r3, [pc, r3]
    3e80:	ldr	r3, [r0, r3]
    3e84:	cmp	r3, #0
    3e88:	beq	3e64 <coda_type_get_read_type+0x24>
    3e8c:	ldr	r3, [r2, #48]	; 0x30
    3e90:	cmp	r3, #0
    3e94:	beq	3e64 <coda_type_get_read_type+0x24>
    3e98:	mov	r3, #9
    3e9c:	str	r3, [r1]
    3ea0:	mov	r0, #0
    3ea4:	pop	{r4, pc}
    3ea8:	ldr	r3, [pc, #52]	; 3ee4 <coda_type_get_read_type+0xa4>
    3eac:	ldr	r2, [pc, #52]	; 3ee8 <coda_type_get_read_type+0xa8>
    3eb0:	ldr	r1, [pc, #52]	; 3eec <coda_type_get_read_type+0xac>
    3eb4:	mvn	r0, #99	; 0x63
    3eb8:	bl	0 <coda_set_error>
    3ebc:	mvn	r0, #0
    3ec0:	pop	{r4, pc}
    3ec4:	ldr	r3, [pc, #36]	; 3ef0 <coda_type_get_read_type+0xb0>
    3ec8:	ldr	r2, [pc, #24]	; 3ee8 <coda_type_get_read_type+0xa8>
    3ecc:	ldr	r1, [pc, #32]	; 3ef4 <coda_type_get_read_type+0xb4>
    3ed0:	mvn	r0, #99	; 0x63
    3ed4:	bl	0 <coda_set_error>
    3ed8:	mvn	r0, #0
    3edc:	pop	{r4, pc}
    3ee0:	.word	0x0000005c
    3ee4:	.word	0x00000b5c
    3ee8:	.word	0x00000000
    3eec:	.word	0x000001b4
    3ef0:	.word	0x00000b61
    3ef4:	.word	0x00001524

00003ef8 <coda_type_vsf_integer_set_scale_factor>:
    3ef8:	ldr	r3, [r0]
    3efc:	ldr	r2, [r1]
    3f00:	push	{r4, r5, r6, lr}
    3f04:	cmp	r3, r2
    3f08:	sub	sp, sp, #8
    3f0c:	bne	3f90 <coda_type_vsf_integer_set_scale_factor+0x98>
    3f10:	ldr	r3, [r0, #44]	; 0x2c
    3f14:	mov	r4, r0
    3f18:	ldr	r3, [r3, #48]	; 0x30
    3f1c:	cmp	r3, #0
    3f20:	bne	4008 <coda_type_vsf_integer_set_scale_factor+0x110>
    3f24:	mov	r5, r1
    3f28:	mov	r0, r5
    3f2c:	add	r1, sp, #4
    3f30:	bl	3e40 <coda_type_get_read_type>
    3f34:	cmp	r0, #0
    3f38:	bne	3fd4 <coda_type_vsf_integer_set_scale_factor+0xdc>
    3f3c:	ldr	r3, [sp, #4]
    3f40:	cmp	r3, #4
    3f44:	bhi	3fdc <coda_type_vsf_integer_set_scale_factor+0xe4>
    3f48:	ldr	r0, [pc, #204]	; 401c <coda_type_vsf_integer_set_scale_factor+0x124>
    3f4c:	bl	118c <coda_type_record_field_new>
    3f50:	subs	r6, r0, #0
    3f54:	beq	3fd4 <coda_type_vsf_integer_set_scale_factor+0xdc>
    3f58:	mov	r1, r5
    3f5c:	bl	1360 <coda_type_record_field_set_type>
    3f60:	cmp	r0, #0
    3f64:	bne	3fcc <coda_type_vsf_integer_set_scale_factor+0xd4>
    3f68:	mov	r1, r6
    3f6c:	ldr	r0, [r4, #44]	; 0x2c
    3f70:	bl	1c30 <coda_type_record_add_field>
    3f74:	cmp	r0, #0
    3f78:	bne	3fcc <coda_type_vsf_integer_set_scale_factor+0xd4>
    3f7c:	ldr	r3, [r4, #44]	; 0x2c
    3f80:	ldrd	r2, [r3, #24]
    3f84:	strd	r2, [r4, #24]
    3f88:	add	sp, sp, #8
    3f8c:	pop	{r4, r5, r6, pc}
    3f90:	cmp	r2, #9
    3f94:	ldr	r0, [pc, #132]	; 4020 <coda_type_vsf_integer_set_scale_factor+0x128>
    3f98:	ldrls	r1, [pc, #132]	; 4024 <coda_type_vsf_integer_set_scale_factor+0x12c>
    3f9c:	ldrhi	r2, [pc, #132]	; 4028 <coda_type_vsf_integer_set_scale_factor+0x130>
    3fa0:	addls	r2, r1, r2, lsl #2
    3fa4:	ldrls	r2, [r2, #84]	; 0x54
    3fa8:	cmp	r3, #9
    3fac:	ldrls	r1, [pc, #112]	; 4024 <coda_type_vsf_integer_set_scale_factor+0x12c>
    3fb0:	ldrhi	r3, [pc, #112]	; 4028 <coda_type_vsf_integer_set_scale_factor+0x130>
    3fb4:	addls	r3, r1, r3, lsl #2
    3fb8:	ldr	r1, [pc, #108]	; 402c <coda_type_vsf_integer_set_scale_factor+0x134>
    3fbc:	ldrls	r3, [r3, #84]	; 0x54
    3fc0:	bl	0 <coda_set_error>
    3fc4:	mvn	r0, #0
    3fc8:	b	3f88 <coda_type_vsf_integer_set_scale_factor+0x90>
    3fcc:	mov	r0, r6
    3fd0:	bl	554 <coda_type_record_field_delete>
    3fd4:	mvn	r0, #0
    3fd8:	b	3f88 <coda_type_vsf_integer_set_scale_factor+0x90>
    3fdc:	add	r3, r3, #1
    3fe0:	cmp	r3, #13
    3fe4:	ldr	r0, [pc, #52]	; 4020 <coda_type_vsf_integer_set_scale_factor+0x128>
    3fe8:	ldrls	r2, [pc, #52]	; 4024 <coda_type_vsf_integer_set_scale_factor+0x12c>
    3fec:	ldrhi	r2, [pc, #52]	; 4028 <coda_type_vsf_integer_set_scale_factor+0x130>
    3ff0:	addls	r3, r2, r3, lsl #2
    3ff4:	ldr	r1, [pc, #52]	; 4030 <coda_type_vsf_integer_set_scale_factor+0x138>
    3ff8:	ldrls	r2, [r3, #28]
    3ffc:	bl	0 <coda_set_error>
    4000:	mvn	r0, #0
    4004:	b	3f88 <coda_type_vsf_integer_set_scale_factor+0x90>
    4008:	ldr	r0, [pc, #16]	; 4020 <coda_type_vsf_integer_set_scale_factor+0x128>
    400c:	ldr	r1, [pc, #32]	; 4034 <coda_type_vsf_integer_set_scale_factor+0x13c>
    4010:	bl	0 <coda_set_error>
    4014:	mvn	r0, #0
    4018:	b	3f88 <coda_type_vsf_integer_set_scale_factor+0x90>
    401c:	.word	0x00001604
    4020:	.word	0xfffffe70
    4024:	.word	0x00000000
    4028:	.word	0x000001ac
    402c:	.word	0x00001548
    4030:	.word	0x000015d0
    4034:	.word	0x00001594

00004038 <coda_type_get_string_length>:
    4038:	cmp	r0, #0
    403c:	push	{r4, lr}
    4040:	beq	40a4 <coda_type_get_string_length+0x6c>
    4044:	ldr	r3, [r0, #8]
    4048:	cmp	r3, #4
    404c:	bne	4080 <coda_type_get_string_length+0x48>
    4050:	cmp	r1, #0
    4054:	mov	r2, r1
    4058:	beq	40c0 <coda_type_get_string_length+0x88>
    405c:	ldrd	r0, [r0, #24]
    4060:	cmp	r0, #0
    4064:	sbcs	r3, r1, #0
    4068:	lsrge	r3, r0, #3
    406c:	orrge	r3, r3, r1, lsl #29
    4070:	mvnlt	r3, #0
    4074:	mov	r0, #0
    4078:	str	r3, [r2]
    407c:	pop	{r4, pc}
    4080:	cmp	r3, #6
    4084:	ldr	r1, [pc, #80]	; 40dc <coda_type_get_string_length+0xa4>
    4088:	ldrls	r2, [pc, #80]	; 40e0 <coda_type_get_string_length+0xa8>
    408c:	ldrhi	r2, [pc, #80]	; 40e4 <coda_type_get_string_length+0xac>
    4090:	mvn	r0, #104	; 0x68
    4094:	ldrls	r2, [r2, r3, lsl #2]
    4098:	bl	0 <coda_set_error>
    409c:	mvn	r0, #0
    40a0:	pop	{r4, pc}
    40a4:	ldr	r3, [pc, #60]	; 40e8 <coda_type_get_string_length+0xb0>
    40a8:	ldr	r2, [pc, #60]	; 40ec <coda_type_get_string_length+0xb4>
    40ac:	ldr	r1, [pc, #60]	; 40f0 <coda_type_get_string_length+0xb8>
    40b0:	mvn	r0, #99	; 0x63
    40b4:	bl	0 <coda_set_error>
    40b8:	mvn	r0, #0
    40bc:	pop	{r4, pc}
    40c0:	ldr	r3, [pc, #44]	; 40f4 <coda_type_get_string_length+0xbc>
    40c4:	ldr	r2, [pc, #32]	; 40ec <coda_type_get_string_length+0xb4>
    40c8:	ldr	r1, [pc, #40]	; 40f8 <coda_type_get_string_length+0xc0>
    40cc:	mvn	r0, #99	; 0x63
    40d0:	bl	0 <coda_set_error>
    40d4:	mvn	r0, #0
    40d8:	pop	{r4, pc}
    40dc:	.word	0x00001614
    40e0:	.word	0x00000000
    40e4:	.word	0x000001ac
    40e8:	.word	0x00000b7e
    40ec:	.word	0x00000000
    40f0:	.word	0x000001b4
    40f4:	.word	0x00000b89
    40f8:	.word	0x00001648

000040fc <coda_type_get_bit_size>:
    40fc:	cmp	r0, #0
    4100:	push	{r4, lr}
    4104:	beq	4130 <coda_type_get_bit_size+0x34>
    4108:	cmp	r1, #0
    410c:	beq	414c <coda_type_get_bit_size+0x50>
    4110:	ldrd	r2, [r0, #24]
    4114:	cmp	r2, #0
    4118:	sbcs	r0, r3, #0
    411c:	mvnlt	r2, #0
    4120:	mvnlt	r3, #0
    4124:	mov	r0, #0
    4128:	strd	r2, [r1]
    412c:	pop	{r4, pc}
    4130:	ldr	r3, [pc, #48]	; 4168 <coda_type_get_bit_size+0x6c>
    4134:	ldr	r2, [pc, #48]	; 416c <coda_type_get_bit_size+0x70>
    4138:	ldr	r1, [pc, #48]	; 4170 <coda_type_get_bit_size+0x74>
    413c:	mvn	r0, #99	; 0x63
    4140:	bl	0 <coda_set_error>
    4144:	mvn	r0, #0
    4148:	pop	{r4, pc}
    414c:	ldr	r3, [pc, #32]	; 4174 <coda_type_get_bit_size+0x78>
    4150:	ldr	r2, [pc, #20]	; 416c <coda_type_get_bit_size+0x70>
    4154:	ldr	r1, [pc, #28]	; 4178 <coda_type_get_bit_size+0x7c>
    4158:	mvn	r0, #99	; 0x63
    415c:	bl	0 <coda_set_error>
    4160:	mvn	r0, #0
    4164:	pop	{r4, pc}
    4168:	.word	0x00000ba4
    416c:	.word	0x00000000
    4170:	.word	0x000001b4
    4174:	.word	0x00000ba9
    4178:	.word	0x00001668

0000417c <coda_type_get_name>:
    417c:	cmp	r0, #0
    4180:	push	{r4, lr}
    4184:	beq	41a0 <coda_type_get_name+0x24>
    4188:	cmp	r1, #0
    418c:	beq	41bc <coda_type_get_name+0x40>
    4190:	ldr	r3, [r0, #16]
    4194:	mov	r0, #0
    4198:	str	r3, [r1]
    419c:	pop	{r4, pc}
    41a0:	ldr	r3, [pc, #48]	; 41d8 <coda_type_get_name+0x5c>
    41a4:	ldr	r2, [pc, #48]	; 41dc <coda_type_get_name+0x60>
    41a8:	ldr	r1, [pc, #48]	; 41e0 <coda_type_get_name+0x64>
    41ac:	mvn	r0, #99	; 0x63
    41b0:	bl	0 <coda_set_error>
    41b4:	mvn	r0, #0
    41b8:	pop	{r4, pc}
    41bc:	ldr	r3, [pc, #32]	; 41e4 <coda_type_get_name+0x68>
    41c0:	ldr	r2, [pc, #20]	; 41dc <coda_type_get_name+0x60>
    41c4:	ldr	r1, [pc, #28]	; 41e8 <coda_type_get_name+0x6c>
    41c8:	mvn	r0, #99	; 0x63
    41cc:	bl	0 <coda_set_error>
    41d0:	mvn	r0, #0
    41d4:	pop	{r4, pc}
    41d8:	.word	0x00000bc4
    41dc:	.word	0x00000000
    41e0:	.word	0x000001b4
    41e4:	.word	0x00000bc9
    41e8:	.word	0x00000228

000041ec <coda_type_get_description>:
    41ec:	cmp	r0, #0
    41f0:	push	{r4, lr}
    41f4:	beq	4210 <coda_type_get_description+0x24>
    41f8:	cmp	r1, #0
    41fc:	beq	422c <coda_type_get_description+0x40>
    4200:	ldr	r3, [r0, #20]
    4204:	mov	r0, #0
    4208:	str	r3, [r1]
    420c:	pop	{r4, pc}
    4210:	ldr	r3, [pc, #48]	; 4248 <coda_type_get_description+0x5c>
    4214:	ldr	r2, [pc, #48]	; 424c <coda_type_get_description+0x60>
    4218:	ldr	r1, [pc, #48]	; 4250 <coda_type_get_description+0x64>
    421c:	mvn	r0, #99	; 0x63
    4220:	bl	0 <coda_set_error>
    4224:	mvn	r0, #0
    4228:	pop	{r4, pc}
    422c:	ldr	r3, [pc, #32]	; 4254 <coda_type_get_description+0x68>
    4230:	ldr	r2, [pc, #20]	; 424c <coda_type_get_description+0x60>
    4234:	ldr	r1, [pc, #28]	; 4258 <coda_type_get_description+0x6c>
    4238:	mvn	r0, #99	; 0x63
    423c:	bl	0 <coda_set_error>
    4240:	mvn	r0, #0
    4244:	pop	{r4, pc}
    4248:	.word	0x00000bde
    424c:	.word	0x00000000
    4250:	.word	0x000001b4
    4254:	.word	0x00000be3
    4258:	.word	0x00000284

0000425c <coda_type_get_fixed_value>:
    425c:	cmp	r0, #0
    4260:	push	{r4, lr}
    4264:	beq	4300 <coda_type_get_fixed_value+0xa4>
    4268:	cmp	r1, #0
    426c:	beq	42e4 <coda_type_get_fixed_value+0x88>
    4270:	ldr	r3, [r0, #8]
    4274:	mov	r4, r2
    4278:	cmp	r3, #4
    427c:	beq	42bc <coda_type_get_fixed_value+0x60>
    4280:	cmp	r3, #5
    4284:	bne	42ac <coda_type_get_fixed_value+0x50>
    4288:	ldr	r3, [r0, #44]	; 0x2c
    428c:	cmp	r2, #0
    4290:	str	r3, [r1]
    4294:	beq	42dc <coda_type_get_fixed_value+0x80>
    4298:	cmp	r3, #0
    429c:	ldrne	r3, [r0, #40]	; 0x28
    42a0:	mov	r0, #0
    42a4:	str	r3, [r2]
    42a8:	pop	{r4, pc}
    42ac:	mov	r3, #0
    42b0:	mov	r0, r3
    42b4:	str	r3, [r1]
    42b8:	pop	{r4, pc}
    42bc:	ldr	r0, [r0, #40]	; 0x28
    42c0:	cmp	r2, #0
    42c4:	str	r0, [r1]
    42c8:	beq	42dc <coda_type_get_fixed_value+0x80>
    42cc:	cmp	r0, #0
    42d0:	beq	42d8 <coda_type_get_fixed_value+0x7c>
    42d4:	bl	0 <strlen>
    42d8:	str	r0, [r4]
    42dc:	mov	r0, #0
    42e0:	pop	{r4, pc}
    42e4:	ldr	r3, [pc, #48]	; 431c <coda_type_get_fixed_value+0xc0>
    42e8:	ldr	r2, [pc, #48]	; 4320 <coda_type_get_fixed_value+0xc4>
    42ec:	ldr	r1, [pc, #48]	; 4324 <coda_type_get_fixed_value+0xc8>
    42f0:	mvn	r0, #99	; 0x63
    42f4:	bl	0 <coda_set_error>
    42f8:	mvn	r0, #0
    42fc:	pop	{r4, pc}
    4300:	ldr	r3, [pc, #32]	; 4328 <coda_type_get_fixed_value+0xcc>
    4304:	ldr	r2, [pc, #20]	; 4320 <coda_type_get_fixed_value+0xc4>
    4308:	ldr	r1, [pc, #28]	; 432c <coda_type_get_fixed_value+0xd0>
    430c:	mvn	r0, #99	; 0x63
    4310:	bl	0 <coda_set_error>
    4314:	mvn	r0, #0
    4318:	pop	{r4, pc}
    431c:	.word	0x00000c42
    4320:	.word	0x00000000
    4324:	.word	0x00000e78
    4328:	.word	0x00000c3d
    432c:	.word	0x000001b4

00004330 <coda_type_get_attributes>:
    4330:	cmp	r0, #0
    4334:	push	{r4, lr}
    4338:	sub	sp, sp, #8
    433c:	beq	43a0 <coda_type_get_attributes+0x70>
    4340:	cmp	r1, #0
    4344:	beq	4384 <coda_type_get_attributes+0x54>
    4348:	ldr	r4, [r0, #36]	; 0x24
    434c:	cmp	r4, #0
    4350:	movne	r3, #0
    4354:	strne	r4, [r1]
    4358:	beq	4368 <coda_type_get_attributes+0x38>
    435c:	mov	r0, r3
    4360:	add	sp, sp, #8
    4364:	pop	{r4, pc}
    4368:	ldr	r0, [r0]
    436c:	str	r1, [sp, #4]
    4370:	bl	17a0 <coda_type_empty_record>
    4374:	ldr	r1, [sp, #4]
    4378:	mov	r3, r4
    437c:	str	r0, [r1]
    4380:	b	435c <coda_type_get_attributes+0x2c>
    4384:	ldr	r3, [pc, #48]	; 43bc <coda_type_get_attributes+0x8c>
    4388:	ldr	r2, [pc, #48]	; 43c0 <coda_type_get_attributes+0x90>
    438c:	ldr	r1, [pc, #48]	; 43c4 <coda_type_get_attributes+0x94>
    4390:	mvn	r0, #99	; 0x63
    4394:	bl	0 <coda_set_error>
    4398:	mvn	r3, #0
    439c:	b	435c <coda_type_get_attributes+0x2c>
    43a0:	ldr	r3, [pc, #32]	; 43c8 <coda_type_get_attributes+0x98>
    43a4:	ldr	r2, [pc, #20]	; 43c0 <coda_type_get_attributes+0x90>
    43a8:	ldr	r1, [pc, #28]	; 43cc <coda_type_get_attributes+0x9c>
    43ac:	mvn	r0, #99	; 0x63
    43b0:	bl	0 <coda_set_error>
    43b4:	mvn	r3, #0
    43b8:	b	435c <coda_type_get_attributes+0x2c>
    43bc:	.word	0x00000c6f
    43c0:	.word	0x00000000
    43c4:	.word	0x00000428
    43c8:	.word	0x00000c6a
    43cc:	.word	0x000001b4

000043d0 <coda_type_get_num_record_fields>:
    43d0:	subs	r3, r0, #0
    43d4:	push	{r4, lr}
    43d8:	beq	4420 <coda_type_get_num_record_fields+0x50>
    43dc:	ldr	r0, [r3, #8]
    43e0:	cmp	r0, #0
    43e4:	bne	43fc <coda_type_get_num_record_fields+0x2c>
    43e8:	cmp	r1, #0
    43ec:	beq	443c <coda_type_get_num_record_fields+0x6c>
    43f0:	ldr	r3, [r3, #48]	; 0x30
    43f4:	str	r3, [r1]
    43f8:	pop	{r4, pc}
    43fc:	cmp	r0, #6
    4400:	ldr	r1, [pc, #80]	; 4458 <coda_type_get_num_record_fields+0x88>
    4404:	ldrls	r3, [pc, #80]	; 445c <coda_type_get_num_record_fields+0x8c>
    4408:	ldrhi	r2, [pc, #80]	; 4460 <coda_type_get_num_record_fields+0x90>
    440c:	ldrls	r2, [r3, r0, lsl #2]
    4410:	mvn	r0, #104	; 0x68
    4414:	bl	0 <coda_set_error>
    4418:	mvn	r0, #0
    441c:	pop	{r4, pc}
    4420:	ldr	r3, [pc, #60]	; 4464 <coda_type_get_num_record_fields+0x94>
    4424:	ldr	r2, [pc, #60]	; 4468 <coda_type_get_num_record_fields+0x98>
    4428:	ldr	r1, [pc, #60]	; 446c <coda_type_get_num_record_fields+0x9c>
    442c:	mvn	r0, #99	; 0x63
    4430:	bl	0 <coda_set_error>
    4434:	mvn	r0, #0
    4438:	pop	{r4, pc}
    443c:	ldr	r3, [pc, #44]	; 4470 <coda_type_get_num_record_fields+0xa0>
    4440:	ldr	r2, [pc, #32]	; 4468 <coda_type_get_num_record_fields+0x98>
    4444:	ldr	r1, [pc, #40]	; 4474 <coda_type_get_num_record_fields+0xa4>
    4448:	mvn	r0, #99	; 0x63
    444c:	bl	0 <coda_set_error>
    4450:	mvn	r0, #0
    4454:	pop	{r4, pc}
    4458:	.word	0x0000168c
    445c:	.word	0x00000000
    4460:	.word	0x000001ac
    4464:	.word	0x00000c89
    4468:	.word	0x00000000
    446c:	.word	0x000001b4
    4470:	.word	0x00000c94
    4474:	.word	0x000016c4

00004478 <coda_type_get_record_field_index_from_name>:
    4478:	cmp	r0, #0
    447c:	push	{r4, r5, r6, lr}
    4480:	beq	451c <coda_type_get_record_field_index_from_name+0xa4>
    4484:	ldr	r4, [r0, #8]
    4488:	cmp	r4, #0
    448c:	bne	44c4 <coda_type_get_record_field_index_from_name+0x4c>
    4490:	cmp	r1, #0
    4494:	mov	r6, r1
    4498:	beq	4538 <coda_type_get_record_field_index_from_name+0xc0>
    449c:	cmp	r2, #0
    44a0:	mov	r5, r2
    44a4:	beq	44e8 <coda_type_get_record_field_index_from_name+0x70>
    44a8:	ldr	r0, [r0, #40]	; 0x28
    44ac:	bl	0 <coda_hashtable_get_index_from_name>
    44b0:	subs	r3, r0, #0
    44b4:	blt	4504 <coda_type_get_record_field_index_from_name+0x8c>
    44b8:	mov	r0, r4
    44bc:	str	r3, [r5]
    44c0:	pop	{r4, r5, r6, pc}
    44c4:	cmp	r4, #6
    44c8:	ldr	r1, [pc, #132]	; 4554 <coda_type_get_record_field_index_from_name+0xdc>
    44cc:	ldrls	r3, [pc, #132]	; 4558 <coda_type_get_record_field_index_from_name+0xe0>
    44d0:	ldrhi	r2, [pc, #132]	; 455c <coda_type_get_record_field_index_from_name+0xe4>
    44d4:	mvn	r0, #104	; 0x68
    44d8:	ldrls	r2, [r3, r4, lsl #2]
    44dc:	bl	0 <coda_set_error>
    44e0:	mvn	r0, #0
    44e4:	pop	{r4, r5, r6, pc}
    44e8:	ldr	r3, [pc, #112]	; 4560 <coda_type_get_record_field_index_from_name+0xe8>
    44ec:	ldr	r2, [pc, #112]	; 4564 <coda_type_get_record_field_index_from_name+0xec>
    44f0:	ldr	r1, [pc, #112]	; 4568 <coda_type_get_record_field_index_from_name+0xf0>
    44f4:	mvn	r0, #99	; 0x63
    44f8:	bl	0 <coda_set_error>
    44fc:	mvn	r0, #0
    4500:	pop	{r4, r5, r6, pc}
    4504:	mov	r2, r6
    4508:	ldr	r1, [pc, #92]	; 456c <coda_type_get_record_field_index_from_name+0xf4>
    450c:	mvn	r0, #101	; 0x65
    4510:	bl	0 <coda_set_error>
    4514:	mvn	r0, #0
    4518:	pop	{r4, r5, r6, pc}
    451c:	ldr	r3, [pc, #76]	; 4570 <coda_type_get_record_field_index_from_name+0xf8>
    4520:	ldr	r2, [pc, #60]	; 4564 <coda_type_get_record_field_index_from_name+0xec>
    4524:	ldr	r1, [pc, #72]	; 4574 <coda_type_get_record_field_index_from_name+0xfc>
    4528:	mvn	r0, #99	; 0x63
    452c:	bl	0 <coda_set_error>
    4530:	mvn	r0, #0
    4534:	pop	{r4, r5, r6, pc}
    4538:	ldr	r3, [pc, #56]	; 4578 <coda_type_get_record_field_index_from_name+0x100>
    453c:	ldr	r2, [pc, #32]	; 4564 <coda_type_get_record_field_index_from_name+0xec>
    4540:	ldr	r1, [pc, #52]	; 457c <coda_type_get_record_field_index_from_name+0x104>
    4544:	mvn	r0, #99	; 0x63
    4548:	bl	0 <coda_set_error>
    454c:	mvn	r0, #0
    4550:	pop	{r4, r5, r6, pc}
    4554:	.word	0x0000168c
    4558:	.word	0x00000000
    455c:	.word	0x000001ac
    4560:	.word	0x00000cbc
    4564:	.word	0x00000000
    4568:	.word	0x000016e8
    456c:	.word	0x00001708
    4570:	.word	0x00000cac
    4574:	.word	0x000001b4
    4578:	.word	0x00000cb7
    457c:	.word	0x00000228

00004580 <coda_type_get_record_field_index_from_name_n>:
    4580:	cmp	r0, #0
    4584:	push	{r4, r5, r6, r7, r8, lr}
    4588:	beq	462c <coda_type_get_record_field_index_from_name_n+0xac>
    458c:	ldr	r4, [r0, #8]
    4590:	cmp	r4, #0
    4594:	bne	45d0 <coda_type_get_record_field_index_from_name_n+0x50>
    4598:	cmp	r1, #0
    459c:	mov	r6, r1
    45a0:	beq	4648 <coda_type_get_record_field_index_from_name_n+0xc8>
    45a4:	cmp	r3, #0
    45a8:	mov	r5, r3
    45ac:	beq	45f4 <coda_type_get_record_field_index_from_name_n+0x74>
    45b0:	ldr	r0, [r0, #40]	; 0x28
    45b4:	mov	r7, r2
    45b8:	bl	0 <coda_hashtable_get_index_from_name_n>
    45bc:	subs	r3, r0, #0
    45c0:	blt	4610 <coda_type_get_record_field_index_from_name_n+0x90>
    45c4:	mov	r0, r4
    45c8:	str	r3, [r5]
    45cc:	pop	{r4, r5, r6, r7, r8, pc}
    45d0:	cmp	r4, #6
    45d4:	ldr	r1, [pc, #136]	; 4664 <coda_type_get_record_field_index_from_name_n+0xe4>
    45d8:	ldrls	r3, [pc, #136]	; 4668 <coda_type_get_record_field_index_from_name_n+0xe8>
    45dc:	ldrhi	r2, [pc, #136]	; 466c <coda_type_get_record_field_index_from_name_n+0xec>
    45e0:	mvn	r0, #104	; 0x68
    45e4:	ldrls	r2, [r3, r4, lsl #2]
    45e8:	bl	0 <coda_set_error>
    45ec:	mvn	r0, #0
    45f0:	pop	{r4, r5, r6, r7, r8, pc}
    45f4:	ldr	r3, [pc, #116]	; 4670 <coda_type_get_record_field_index_from_name_n+0xf0>
    45f8:	ldr	r2, [pc, #116]	; 4674 <coda_type_get_record_field_index_from_name_n+0xf4>
    45fc:	ldr	r1, [pc, #116]	; 4678 <coda_type_get_record_field_index_from_name_n+0xf8>
    4600:	mvn	r0, #99	; 0x63
    4604:	bl	0 <coda_set_error>
    4608:	mvn	r0, #0
    460c:	pop	{r4, r5, r6, r7, r8, pc}
    4610:	mov	r3, r6
    4614:	mov	r2, r7
    4618:	ldr	r1, [pc, #92]	; 467c <coda_type_get_record_field_index_from_name_n+0xfc>
    461c:	mvn	r0, #101	; 0x65
    4620:	bl	0 <coda_set_error>
    4624:	mvn	r0, #0
    4628:	pop	{r4, r5, r6, r7, r8, pc}
    462c:	ldr	r3, [pc, #76]	; 4680 <coda_type_get_record_field_index_from_name_n+0x100>
    4630:	ldr	r2, [pc, #60]	; 4674 <coda_type_get_record_field_index_from_name_n+0xf4>
    4634:	ldr	r1, [pc, #72]	; 4684 <coda_type_get_record_field_index_from_name_n+0x104>
    4638:	mvn	r0, #99	; 0x63
    463c:	bl	0 <coda_set_error>
    4640:	mvn	r0, #0
    4644:	pop	{r4, r5, r6, r7, r8, pc}
    4648:	ldr	r3, [pc, #56]	; 4688 <coda_type_get_record_field_index_from_name_n+0x108>
    464c:	ldr	r2, [pc, #32]	; 4674 <coda_type_get_record_field_index_from_name_n+0xf4>
    4650:	ldr	r1, [pc, #52]	; 468c <coda_type_get_record_field_index_from_name_n+0x10c>
    4654:	mvn	r0, #99	; 0x63
    4658:	bl	0 <coda_set_error>
    465c:	mvn	r0, #0
    4660:	pop	{r4, r5, r6, r7, r8, pc}
    4664:	.word	0x0000168c
    4668:	.word	0x00000000
    466c:	.word	0x000001ac
    4670:	.word	0x00000ceb
    4674:	.word	0x00000000
    4678:	.word	0x000016e8
    467c:	.word	0x00001734
    4680:	.word	0x00000cdb
    4684:	.word	0x000001b4
    4688:	.word	0x00000ce6
    468c:	.word	0x00000228

00004690 <coda_type_get_record_field_index_from_real_name>:
    4690:	cmp	r0, #0
    4694:	push	{r4, r5, r6, lr}
    4698:	beq	4734 <coda_type_get_record_field_index_from_real_name+0xa4>
    469c:	ldr	r4, [r0, #8]
    46a0:	cmp	r4, #0
    46a4:	bne	46dc <coda_type_get_record_field_index_from_real_name+0x4c>
    46a8:	cmp	r1, #0
    46ac:	mov	r6, r1
    46b0:	beq	4750 <coda_type_get_record_field_index_from_real_name+0xc0>
    46b4:	cmp	r2, #0
    46b8:	mov	r5, r2
    46bc:	beq	4700 <coda_type_get_record_field_index_from_real_name+0x70>
    46c0:	ldr	r0, [r0, #44]	; 0x2c
    46c4:	bl	0 <coda_hashtable_get_index_from_name>
    46c8:	subs	r3, r0, #0
    46cc:	blt	471c <coda_type_get_record_field_index_from_real_name+0x8c>
    46d0:	mov	r0, r4
    46d4:	str	r3, [r5]
    46d8:	pop	{r4, r5, r6, pc}
    46dc:	cmp	r4, #6
    46e0:	ldr	r1, [pc, #132]	; 476c <coda_type_get_record_field_index_from_real_name+0xdc>
    46e4:	ldrls	r3, [pc, #132]	; 4770 <coda_type_get_record_field_index_from_real_name+0xe0>
    46e8:	ldrhi	r2, [pc, #132]	; 4774 <coda_type_get_record_field_index_from_real_name+0xe4>
    46ec:	mvn	r0, #104	; 0x68
    46f0:	ldrls	r2, [r3, r4, lsl #2]
    46f4:	bl	0 <coda_set_error>
    46f8:	mvn	r0, #0
    46fc:	pop	{r4, r5, r6, pc}
    4700:	ldr	r3, [pc, #112]	; 4778 <coda_type_get_record_field_index_from_real_name+0xe8>
    4704:	ldr	r2, [pc, #112]	; 477c <coda_type_get_record_field_index_from_real_name+0xec>
    4708:	ldr	r1, [pc, #112]	; 4780 <coda_type_get_record_field_index_from_real_name+0xf0>
    470c:	mvn	r0, #99	; 0x63
    4710:	bl	0 <coda_set_error>
    4714:	mvn	r0, #0
    4718:	pop	{r4, r5, r6, pc}
    471c:	mov	r2, r6
    4720:	ldr	r1, [pc, #92]	; 4784 <coda_type_get_record_field_index_from_real_name+0xf4>
    4724:	mvn	r0, #101	; 0x65
    4728:	bl	0 <coda_set_error>
    472c:	mvn	r0, #0
    4730:	pop	{r4, r5, r6, pc}
    4734:	ldr	r3, [pc, #76]	; 4788 <coda_type_get_record_field_index_from_real_name+0xf8>
    4738:	ldr	r2, [pc, #60]	; 477c <coda_type_get_record_field_index_from_real_name+0xec>
    473c:	ldr	r1, [pc, #72]	; 478c <coda_type_get_record_field_index_from_real_name+0xfc>
    4740:	mvn	r0, #99	; 0x63
    4744:	bl	0 <coda_set_error>
    4748:	mvn	r0, #0
    474c:	pop	{r4, r5, r6, pc}
    4750:	ldr	r3, [pc, #56]	; 4790 <coda_type_get_record_field_index_from_real_name+0x100>
    4754:	ldr	r2, [pc, #32]	; 477c <coda_type_get_record_field_index_from_real_name+0xec>
    4758:	ldr	r1, [pc, #52]	; 4794 <coda_type_get_record_field_index_from_real_name+0x104>
    475c:	mvn	r0, #99	; 0x63
    4760:	bl	0 <coda_set_error>
    4764:	mvn	r0, #0
    4768:	pop	{r4, r5, r6, pc}
    476c:	.word	0x0000168c
    4770:	.word	0x00000000
    4774:	.word	0x000001ac
    4778:	.word	0x00000d1a
    477c:	.word	0x00000000
    4780:	.word	0x000016e8
    4784:	.word	0x00001764
    4788:	.word	0x00000d0a
    478c:	.word	0x000001b4
    4790:	.word	0x00000d15
    4794:	.word	0x000004d0

00004798 <coda_type_get_record_field_type>:
    4798:	subs	ip, r0, #0
    479c:	push	{lr}		; (str lr, [sp, #-4]!)
    47a0:	sub	sp, sp, #12
    47a4:	beq	4830 <coda_type_get_record_field_type+0x98>
    47a8:	ldr	r0, [ip, #8]
    47ac:	cmp	r0, #0
    47b0:	bne	480c <coda_type_get_record_field_type+0x74>
    47b4:	cmp	r2, #0
    47b8:	beq	484c <coda_type_get_record_field_type+0xb4>
    47bc:	cmp	r1, #0
    47c0:	ldr	r3, [ip, #48]	; 0x30
    47c4:	blt	47e8 <coda_type_get_record_field_type+0x50>
    47c8:	cmp	r1, r3
    47cc:	bge	47e8 <coda_type_get_record_field_type+0x50>
    47d0:	ldr	r3, [ip, #52]	; 0x34
    47d4:	ldr	r3, [r3, r1, lsl #2]
    47d8:	ldr	r3, [r3, #8]
    47dc:	str	r3, [r2]
    47e0:	add	sp, sp, #12
    47e4:	pop	{pc}		; (ldr pc, [sp], #4)
    47e8:	ldr	ip, [pc, #120]	; 4868 <coda_type_get_record_field_type+0xd0>
    47ec:	ldr	r0, [pc, #120]	; 486c <coda_type_get_record_field_type+0xd4>
    47f0:	mov	r2, r1
    47f4:	ldr	r1, [pc, #116]	; 4870 <coda_type_get_record_field_type+0xd8>
    47f8:	stm	sp, {r0, ip}
    47fc:	mvn	r0, #100	; 0x64
    4800:	bl	0 <coda_set_error>
    4804:	mvn	r0, #0
    4808:	b	47e0 <coda_type_get_record_field_type+0x48>
    480c:	cmp	r0, #6
    4810:	ldr	r1, [pc, #92]	; 4874 <coda_type_get_record_field_type+0xdc>
    4814:	ldrls	r3, [pc, #92]	; 4878 <coda_type_get_record_field_type+0xe0>
    4818:	ldrhi	r2, [pc, #92]	; 487c <coda_type_get_record_field_type+0xe4>
    481c:	ldrls	r2, [r3, r0, lsl #2]
    4820:	mvn	r0, #104	; 0x68
    4824:	bl	0 <coda_set_error>
    4828:	mvn	r0, #0
    482c:	b	47e0 <coda_type_get_record_field_type+0x48>
    4830:	mvn	r0, #99	; 0x63
    4834:	ldr	r3, [pc, #68]	; 4880 <coda_type_get_record_field_type+0xe8>
    4838:	ldr	r2, [pc, #44]	; 486c <coda_type_get_record_field_type+0xd4>
    483c:	ldr	r1, [pc, #64]	; 4884 <coda_type_get_record_field_type+0xec>
    4840:	bl	0 <coda_set_error>
    4844:	mvn	r0, #0
    4848:	b	47e0 <coda_type_get_record_field_type+0x48>
    484c:	mvn	r0, #99	; 0x63
    4850:	mov	r3, #3392	; 0xd40
    4854:	ldr	r2, [pc, #16]	; 486c <coda_type_get_record_field_type+0xd4>
    4858:	ldr	r1, [pc, #40]	; 4888 <coda_type_get_record_field_type+0xf0>
    485c:	bl	0 <coda_set_error>
    4860:	mvn	r0, #0
    4864:	b	47e0 <coda_type_get_record_field_type+0x48>
    4868:	.word	0x00000d47
    486c:	.word	0x00000000
    4870:	.word	0x00001798
    4874:	.word	0x0000168c
    4878:	.word	0x00000000
    487c:	.word	0x000001ac
    4880:	.word	0x00000d35
    4884:	.word	0x000001b4
    4888:	.word	0x000008e0

0000488c <coda_type_get_record_field_name>:
    488c:	subs	ip, r0, #0
    4890:	push	{lr}		; (str lr, [sp, #-4]!)
    4894:	sub	sp, sp, #12
    4898:	beq	4924 <coda_type_get_record_field_name+0x98>
    489c:	ldr	r0, [ip, #8]
    48a0:	cmp	r0, #0
    48a4:	bne	4900 <coda_type_get_record_field_name+0x74>
    48a8:	cmp	r2, #0
    48ac:	beq	4940 <coda_type_get_record_field_name+0xb4>
    48b0:	cmp	r1, #0
    48b4:	ldr	r3, [ip, #48]	; 0x30
    48b8:	blt	48dc <coda_type_get_record_field_name+0x50>
    48bc:	cmp	r1, r3
    48c0:	bge	48dc <coda_type_get_record_field_name+0x50>
    48c4:	ldr	r3, [ip, #52]	; 0x34
    48c8:	ldr	r3, [r3, r1, lsl #2]
    48cc:	ldr	r3, [r3]
    48d0:	str	r3, [r2]
    48d4:	add	sp, sp, #12
    48d8:	pop	{pc}		; (ldr pc, [sp], #4)
    48dc:	ldr	ip, [pc, #120]	; 495c <coda_type_get_record_field_name+0xd0>
    48e0:	ldr	r0, [pc, #120]	; 4960 <coda_type_get_record_field_name+0xd4>
    48e4:	mov	r2, r1
    48e8:	ldr	r1, [pc, #116]	; 4964 <coda_type_get_record_field_name+0xd8>
    48ec:	stm	sp, {r0, ip}
    48f0:	mvn	r0, #100	; 0x64
    48f4:	bl	0 <coda_set_error>
    48f8:	mvn	r0, #0
    48fc:	b	48d4 <coda_type_get_record_field_name+0x48>
    4900:	cmp	r0, #6
    4904:	ldr	r1, [pc, #92]	; 4968 <coda_type_get_record_field_name+0xdc>
    4908:	ldrls	r3, [pc, #92]	; 496c <coda_type_get_record_field_name+0xe0>
    490c:	ldrhi	r2, [pc, #92]	; 4970 <coda_type_get_record_field_name+0xe4>
    4910:	ldrls	r2, [r3, r0, lsl #2]
    4914:	mvn	r0, #104	; 0x68
    4918:	bl	0 <coda_set_error>
    491c:	mvn	r0, #0
    4920:	b	48d4 <coda_type_get_record_field_name+0x48>
    4924:	mvn	r0, #99	; 0x63
    4928:	ldr	r3, [pc, #68]	; 4974 <coda_type_get_record_field_name+0xe8>
    492c:	ldr	r2, [pc, #44]	; 4960 <coda_type_get_record_field_name+0xd4>
    4930:	ldr	r1, [pc, #64]	; 4978 <coda_type_get_record_field_name+0xec>
    4934:	bl	0 <coda_set_error>
    4938:	mvn	r0, #0
    493c:	b	48d4 <coda_type_get_record_field_name+0x48>
    4940:	mvn	r0, #99	; 0x63
    4944:	ldr	r3, [pc, #48]	; 497c <coda_type_get_record_field_name+0xf0>
    4948:	ldr	r2, [pc, #16]	; 4960 <coda_type_get_record_field_name+0xd4>
    494c:	ldr	r1, [pc, #44]	; 4980 <coda_type_get_record_field_name+0xf4>
    4950:	bl	0 <coda_set_error>
    4954:	mvn	r0, #0
    4958:	b	48d4 <coda_type_get_record_field_name+0x48>
    495c:	.word	0x00000d6e
    4960:	.word	0x00000000
    4964:	.word	0x00001798
    4968:	.word	0x0000168c
    496c:	.word	0x00000000
    4970:	.word	0x000001ac
    4974:	.word	0x00000d5c
    4978:	.word	0x000001b4
    497c:	.word	0x00000d67
    4980:	.word	0x00000228

00004984 <coda_type_get_record_field_real_name>:
    4984:	subs	ip, r0, #0
    4988:	push	{r4, lr}
    498c:	sub	sp, sp, #16
    4990:	beq	4a68 <coda_type_get_record_field_real_name+0xe4>
    4994:	ldr	r4, [ip, #8]
    4998:	cmp	r4, #0
    499c:	bne	4a44 <coda_type_get_record_field_real_name+0xc0>
    49a0:	cmp	r2, #0
    49a4:	beq	4a84 <coda_type_get_record_field_real_name+0x100>
    49a8:	cmp	r1, #0
    49ac:	ldr	r3, [ip, #48]	; 0x30
    49b0:	blt	4a20 <coda_type_get_record_field_real_name+0x9c>
    49b4:	cmp	r1, r3
    49b8:	bge	4a20 <coda_type_get_record_field_real_name+0x9c>
    49bc:	ldr	r3, [ip, #52]	; 0x34
    49c0:	ldr	r3, [r3, r1, lsl #2]
    49c4:	ldr	r0, [r3, #4]
    49c8:	cmp	r0, #0
    49cc:	beq	49ec <coda_type_get_record_field_real_name+0x68>
    49d0:	ldr	r3, [ip]
    49d4:	cmp	r3, #2
    49d8:	strne	r0, [r2]
    49dc:	beq	4a04 <coda_type_get_record_field_real_name+0x80>
    49e0:	mov	r0, r4
    49e4:	add	sp, sp, #16
    49e8:	pop	{r4, pc}
    49ec:	ldr	r3, [r3]
    49f0:	mov	r4, r0
    49f4:	mov	r0, r4
    49f8:	str	r3, [r2]
    49fc:	add	sp, sp, #16
    4a00:	pop	{r4, pc}
    4a04:	str	r2, [sp, #12]
    4a08:	bl	0 <coda_element_name_from_xml_name>
    4a0c:	ldr	r2, [sp, #12]
    4a10:	str	r0, [r2]
    4a14:	mov	r0, r4
    4a18:	add	sp, sp, #16
    4a1c:	pop	{r4, pc}
    4a20:	ldr	ip, [pc, #120]	; 4aa0 <coda_type_get_record_field_real_name+0x11c>
    4a24:	ldr	r0, [pc, #120]	; 4aa4 <coda_type_get_record_field_real_name+0x120>
    4a28:	mov	r2, r1
    4a2c:	ldr	r1, [pc, #116]	; 4aa8 <coda_type_get_record_field_real_name+0x124>
    4a30:	stm	sp, {r0, ip}
    4a34:	mvn	r0, #100	; 0x64
    4a38:	bl	0 <coda_set_error>
    4a3c:	mvn	r4, #0
    4a40:	b	49e0 <coda_type_get_record_field_real_name+0x5c>
    4a44:	cmp	r4, #6
    4a48:	ldr	r1, [pc, #92]	; 4aac <coda_type_get_record_field_real_name+0x128>
    4a4c:	ldrls	r3, [pc, #92]	; 4ab0 <coda_type_get_record_field_real_name+0x12c>
    4a50:	ldrhi	r2, [pc, #92]	; 4ab4 <coda_type_get_record_field_real_name+0x130>
    4a54:	mvn	r0, #104	; 0x68
    4a58:	ldrls	r2, [r3, r4, lsl #2]
    4a5c:	bl	0 <coda_set_error>
    4a60:	mvn	r4, #0
    4a64:	b	49e0 <coda_type_get_record_field_real_name+0x5c>
    4a68:	ldr	r3, [pc, #72]	; 4ab8 <coda_type_get_record_field_real_name+0x134>
    4a6c:	ldr	r2, [pc, #48]	; 4aa4 <coda_type_get_record_field_real_name+0x120>
    4a70:	ldr	r1, [pc, #68]	; 4abc <coda_type_get_record_field_real_name+0x138>
    4a74:	mvn	r0, #99	; 0x63
    4a78:	bl	0 <coda_set_error>
    4a7c:	mvn	r4, #0
    4a80:	b	49e0 <coda_type_get_record_field_real_name+0x5c>
    4a84:	ldr	r3, [pc, #52]	; 4ac0 <coda_type_get_record_field_real_name+0x13c>
    4a88:	ldr	r2, [pc, #20]	; 4aa4 <coda_type_get_record_field_real_name+0x120>
    4a8c:	ldr	r1, [pc, #48]	; 4ac4 <coda_type_get_record_field_real_name+0x140>
    4a90:	mvn	r0, #99	; 0x63
    4a94:	bl	0 <coda_set_error>
    4a98:	mvn	r4, #0
    4a9c:	b	49e0 <coda_type_get_record_field_real_name+0x5c>
    4aa0:	.word	0x00000d9e
    4aa4:	.word	0x00000000
    4aa8:	.word	0x00001798
    4aac:	.word	0x0000168c
    4ab0:	.word	0x00000000
    4ab4:	.word	0x000001ac
    4ab8:	.word	0x00000d8c
    4abc:	.word	0x000001b4
    4ac0:	.word	0x00000d97
    4ac4:	.word	0x00000228

00004ac8 <coda_type_get_record_field_hidden_status>:
    4ac8:	subs	ip, r0, #0
    4acc:	push	{lr}		; (str lr, [sp, #-4]!)
    4ad0:	sub	sp, sp, #12
    4ad4:	beq	4b60 <coda_type_get_record_field_hidden_status+0x98>
    4ad8:	ldr	r0, [ip, #8]
    4adc:	cmp	r0, #0
    4ae0:	bne	4b3c <coda_type_get_record_field_hidden_status+0x74>
    4ae4:	cmp	r2, #0
    4ae8:	beq	4b7c <coda_type_get_record_field_hidden_status+0xb4>
    4aec:	cmp	r1, #0
    4af0:	ldr	r3, [ip, #48]	; 0x30
    4af4:	blt	4b18 <coda_type_get_record_field_hidden_status+0x50>
    4af8:	cmp	r1, r3
    4afc:	bge	4b18 <coda_type_get_record_field_hidden_status+0x50>
    4b00:	ldr	r3, [ip, #52]	; 0x34
    4b04:	ldr	r3, [r3, r1, lsl #2]
    4b08:	ldr	r3, [r3, #12]
    4b0c:	str	r3, [r2]
    4b10:	add	sp, sp, #12
    4b14:	pop	{pc}		; (ldr pc, [sp], #4)
    4b18:	ldr	ip, [pc, #120]	; 4b98 <coda_type_get_record_field_hidden_status+0xd0>
    4b1c:	ldr	r0, [pc, #120]	; 4b9c <coda_type_get_record_field_hidden_status+0xd4>
    4b20:	mov	r2, r1
    4b24:	ldr	r1, [pc, #116]	; 4ba0 <coda_type_get_record_field_hidden_status+0xd8>
    4b28:	stm	sp, {r0, ip}
    4b2c:	mvn	r0, #100	; 0x64
    4b30:	bl	0 <coda_set_error>
    4b34:	mvn	r0, #0
    4b38:	b	4b10 <coda_type_get_record_field_hidden_status+0x48>
    4b3c:	cmp	r0, #6
    4b40:	ldr	r1, [pc, #92]	; 4ba4 <coda_type_get_record_field_hidden_status+0xdc>
    4b44:	ldrls	r3, [pc, #92]	; 4ba8 <coda_type_get_record_field_hidden_status+0xe0>
    4b48:	ldrhi	r2, [pc, #92]	; 4bac <coda_type_get_record_field_hidden_status+0xe4>
    4b4c:	ldrls	r2, [r3, r0, lsl #2]
    4b50:	mvn	r0, #104	; 0x68
    4b54:	bl	0 <coda_set_error>
    4b58:	mvn	r0, #0
    4b5c:	b	4b10 <coda_type_get_record_field_hidden_status+0x48>
    4b60:	mvn	r0, #99	; 0x63
    4b64:	ldr	r3, [pc, #68]	; 4bb0 <coda_type_get_record_field_hidden_status+0xe8>
    4b68:	ldr	r2, [pc, #44]	; 4b9c <coda_type_get_record_field_hidden_status+0xd4>
    4b6c:	ldr	r1, [pc, #64]	; 4bb4 <coda_type_get_record_field_hidden_status+0xec>
    4b70:	bl	0 <coda_set_error>
    4b74:	mvn	r0, #0
    4b78:	b	4b10 <coda_type_get_record_field_hidden_status+0x48>
    4b7c:	mvn	r0, #99	; 0x63
    4b80:	ldr	r3, [pc, #48]	; 4bb8 <coda_type_get_record_field_hidden_status+0xf0>
    4b84:	ldr	r2, [pc, #16]	; 4b9c <coda_type_get_record_field_hidden_status+0xd4>
    4b88:	ldr	r1, [pc, #44]	; 4bbc <coda_type_get_record_field_hidden_status+0xf4>
    4b8c:	bl	0 <coda_set_error>
    4b90:	mvn	r0, #0
    4b94:	b	4b10 <coda_type_get_record_field_hidden_status+0x48>
    4b98:	.word	0x00000dd6
    4b9c:	.word	0x00000000
    4ba0:	.word	0x00001798
    4ba4:	.word	0x0000168c
    4ba8:	.word	0x00000000
    4bac:	.word	0x000001ac
    4bb0:	.word	0x00000dc4
    4bb4:	.word	0x000001b4
    4bb8:	.word	0x00000dcf
    4bbc:	.word	0x000017d0

00004bc0 <coda_type_get_record_field_available_status>:
    4bc0:	subs	ip, r0, #0
    4bc4:	push	{lr}		; (str lr, [sp, #-4]!)
    4bc8:	sub	sp, sp, #12
    4bcc:	beq	4c64 <coda_type_get_record_field_available_status+0xa4>
    4bd0:	ldr	r0, [ip, #8]
    4bd4:	cmp	r0, #0
    4bd8:	bne	4c40 <coda_type_get_record_field_available_status+0x80>
    4bdc:	cmp	r2, #0
    4be0:	beq	4c80 <coda_type_get_record_field_available_status+0xc0>
    4be4:	cmp	r1, #0
    4be8:	ldr	r3, [ip, #48]	; 0x30
    4bec:	blt	4c1c <coda_type_get_record_field_available_status+0x5c>
    4bf0:	cmp	r1, r3
    4bf4:	bge	4c1c <coda_type_get_record_field_available_status+0x5c>
    4bf8:	ldr	r3, [ip, #52]	; 0x34
    4bfc:	ldr	r3, [r3, r1, lsl #2]
    4c00:	ldrb	r3, [r3, #16]
    4c04:	cmp	r3, #0
    4c08:	moveq	r3, #1
    4c0c:	mvnne	r3, #0
    4c10:	str	r3, [r2]
    4c14:	add	sp, sp, #12
    4c18:	pop	{pc}		; (ldr pc, [sp], #4)
    4c1c:	ldr	ip, [pc, #120]	; 4c9c <coda_type_get_record_field_available_status+0xdc>
    4c20:	ldr	r0, [pc, #120]	; 4ca0 <coda_type_get_record_field_available_status+0xe0>
    4c24:	mov	r2, r1
    4c28:	ldr	r1, [pc, #116]	; 4ca4 <coda_type_get_record_field_available_status+0xe4>
    4c2c:	stm	sp, {r0, ip}
    4c30:	mvn	r0, #100	; 0x64
    4c34:	bl	0 <coda_set_error>
    4c38:	mvn	r0, #0
    4c3c:	b	4c14 <coda_type_get_record_field_available_status+0x54>
    4c40:	cmp	r0, #6
    4c44:	ldr	r1, [pc, #92]	; 4ca8 <coda_type_get_record_field_available_status+0xe8>
    4c48:	ldrls	r3, [pc, #92]	; 4cac <coda_type_get_record_field_available_status+0xec>
    4c4c:	ldrhi	r2, [pc, #92]	; 4cb0 <coda_type_get_record_field_available_status+0xf0>
    4c50:	ldrls	r2, [r3, r0, lsl #2]
    4c54:	mvn	r0, #104	; 0x68
    4c58:	bl	0 <coda_set_error>
    4c5c:	mvn	r0, #0
    4c60:	b	4c14 <coda_type_get_record_field_available_status+0x54>
    4c64:	mvn	r0, #99	; 0x63
    4c68:	mov	r3, #3568	; 0xdf0
    4c6c:	ldr	r2, [pc, #44]	; 4ca0 <coda_type_get_record_field_available_status+0xe0>
    4c70:	ldr	r1, [pc, #60]	; 4cb4 <coda_type_get_record_field_available_status+0xf4>
    4c74:	bl	0 <coda_set_error>
    4c78:	mvn	r0, #0
    4c7c:	b	4c14 <coda_type_get_record_field_available_status+0x54>
    4c80:	mvn	r0, #99	; 0x63
    4c84:	ldr	r3, [pc, #44]	; 4cb8 <coda_type_get_record_field_available_status+0xf8>
    4c88:	ldr	r2, [pc, #16]	; 4ca0 <coda_type_get_record_field_available_status+0xe0>
    4c8c:	ldr	r1, [pc, #40]	; 4cbc <coda_type_get_record_field_available_status+0xfc>
    4c90:	bl	0 <coda_set_error>
    4c94:	mvn	r0, #0
    4c98:	b	4c14 <coda_type_get_record_field_available_status+0x54>
    4c9c:	.word	0x00000e02
    4ca0:	.word	0x00000000
    4ca4:	.word	0x00001798
    4ca8:	.word	0x0000168c
    4cac:	.word	0x00000000
    4cb0:	.word	0x000001ac
    4cb4:	.word	0x000001b4
    4cb8:	.word	0x00000dfb
    4cbc:	.word	0x000017f0

00004cc0 <coda_type_get_record_union_status>:
    4cc0:	subs	r3, r0, #0
    4cc4:	push	{r4, lr}
    4cc8:	beq	4d10 <coda_type_get_record_union_status+0x50>
    4ccc:	ldr	r0, [r3, #8]
    4cd0:	cmp	r0, #0
    4cd4:	bne	4cec <coda_type_get_record_union_status+0x2c>
    4cd8:	cmp	r1, #0
    4cdc:	beq	4d2c <coda_type_get_record_union_status+0x6c>
    4ce0:	ldr	r3, [r3, #64]	; 0x40
    4ce4:	str	r3, [r1]
    4ce8:	pop	{r4, pc}
    4cec:	cmp	r0, #6
    4cf0:	ldr	r1, [pc, #80]	; 4d48 <coda_type_get_record_union_status+0x88>
    4cf4:	ldrls	r3, [pc, #80]	; 4d4c <coda_type_get_record_union_status+0x8c>
    4cf8:	ldrhi	r2, [pc, #80]	; 4d50 <coda_type_get_record_union_status+0x90>
    4cfc:	ldrls	r2, [r3, r0, lsl #2]
    4d00:	mvn	r0, #104	; 0x68
    4d04:	bl	0 <coda_set_error>
    4d08:	mvn	r0, #0
    4d0c:	pop	{r4, pc}
    4d10:	ldr	r3, [pc, #60]	; 4d54 <coda_type_get_record_union_status+0x94>
    4d14:	ldr	r2, [pc, #60]	; 4d58 <coda_type_get_record_union_status+0x98>
    4d18:	ldr	r1, [pc, #60]	; 4d5c <coda_type_get_record_union_status+0x9c>
    4d1c:	mvn	r0, #99	; 0x63
    4d20:	bl	0 <coda_set_error>
    4d24:	mvn	r0, #0
    4d28:	pop	{r4, pc}
    4d2c:	ldr	r3, [pc, #44]	; 4d60 <coda_type_get_record_union_status+0xa0>
    4d30:	ldr	r2, [pc, #32]	; 4d58 <coda_type_get_record_union_status+0x98>
    4d34:	ldr	r1, [pc, #40]	; 4d64 <coda_type_get_record_union_status+0xa4>
    4d38:	mvn	r0, #99	; 0x63
    4d3c:	bl	0 <coda_set_error>
    4d40:	mvn	r0, #0
    4d44:	pop	{r4, pc}
    4d48:	.word	0x0000168c
    4d4c:	.word	0x00000000
    4d50:	.word	0x000001ac
    4d54:	.word	0x00000e17
    4d58:	.word	0x00000000
    4d5c:	.word	0x000001b4
    4d60:	.word	0x00000e22
    4d64:	.word	0x00001814

00004d68 <coda_type_get_array_num_dims>:
    4d68:	cmp	r0, #0
    4d6c:	push	{r4, lr}
    4d70:	beq	4dbc <coda_type_get_array_num_dims+0x54>
    4d74:	ldr	r3, [r0, #8]
    4d78:	cmp	r3, #1
    4d7c:	bne	4d98 <coda_type_get_array_num_dims+0x30>
    4d80:	cmp	r1, #0
    4d84:	beq	4dd8 <coda_type_get_array_num_dims+0x70>
    4d88:	ldr	r3, [r0, #48]	; 0x30
    4d8c:	mov	r0, #0
    4d90:	str	r3, [r1]
    4d94:	pop	{r4, pc}
    4d98:	cmp	r3, #6
    4d9c:	ldr	r1, [pc, #80]	; 4df4 <coda_type_get_array_num_dims+0x8c>
    4da0:	ldrls	r2, [pc, #80]	; 4df8 <coda_type_get_array_num_dims+0x90>
    4da4:	ldrhi	r2, [pc, #80]	; 4dfc <coda_type_get_array_num_dims+0x94>
    4da8:	mvn	r0, #104	; 0x68
    4dac:	ldrls	r2, [r2, r3, lsl #2]
    4db0:	bl	0 <coda_set_error>
    4db4:	mvn	r0, #0
    4db8:	pop	{r4, pc}
    4dbc:	ldr	r3, [pc, #60]	; 4e00 <coda_type_get_array_num_dims+0x98>
    4dc0:	ldr	r2, [pc, #60]	; 4e04 <coda_type_get_array_num_dims+0x9c>
    4dc4:	ldr	r1, [pc, #60]	; 4e08 <coda_type_get_array_num_dims+0xa0>
    4dc8:	mvn	r0, #99	; 0x63
    4dcc:	bl	0 <coda_set_error>
    4dd0:	mvn	r0, #0
    4dd4:	pop	{r4, pc}
    4dd8:	ldr	r3, [pc, #44]	; 4e0c <coda_type_get_array_num_dims+0xa4>
    4ddc:	ldr	r2, [pc, #32]	; 4e04 <coda_type_get_array_num_dims+0x9c>
    4de0:	ldr	r1, [pc, #40]	; 4e10 <coda_type_get_array_num_dims+0xa8>
    4de4:	mvn	r0, #99	; 0x63
    4de8:	bl	0 <coda_set_error>
    4dec:	mvn	r0, #0
    4df0:	pop	{r4, pc}
    4df4:	.word	0x00001838
    4df8:	.word	0x00000000
    4dfc:	.word	0x000001ac
    4e00:	.word	0x00000e36
    4e04:	.word	0x00000000
    4e08:	.word	0x000001b4
    4e0c:	.word	0x00000e41
    4e10:	.word	0x00001870

00004e14 <coda_type_get_array_dim>:
    4e14:	cmp	r0, #0
    4e18:	push	{r4, lr}
    4e1c:	beq	4e94 <coda_type_get_array_dim+0x80>
    4e20:	ldr	r3, [r0, #8]
    4e24:	cmp	r3, #1
    4e28:	bne	4e70 <coda_type_get_array_dim+0x5c>
    4e2c:	cmp	r1, #0
    4e30:	beq	4ecc <coda_type_get_array_dim+0xb8>
    4e34:	cmp	r2, #0
    4e38:	beq	4eb0 <coda_type_get_array_dim+0x9c>
    4e3c:	ldr	r3, [r0, #48]	; 0x30
    4e40:	str	r3, [r1]
    4e44:	ldr	r1, [r0, #48]	; 0x30
    4e48:	cmp	r1, #0
    4e4c:	addgt	r1, r2, r1, lsl #2
    4e50:	addgt	r0, r0, #52	; 0x34
    4e54:	ble	4e68 <coda_type_get_array_dim+0x54>
    4e58:	ldr	r3, [r0], #4
    4e5c:	str	r3, [r2], #4
    4e60:	cmp	r2, r1
    4e64:	bne	4e58 <coda_type_get_array_dim+0x44>
    4e68:	mov	r0, #0
    4e6c:	pop	{r4, pc}
    4e70:	cmp	r3, #6
    4e74:	ldr	r1, [pc, #108]	; 4ee8 <coda_type_get_array_dim+0xd4>
    4e78:	ldrls	r2, [pc, #108]	; 4eec <coda_type_get_array_dim+0xd8>
    4e7c:	ldrhi	r2, [pc, #108]	; 4ef0 <coda_type_get_array_dim+0xdc>
    4e80:	mvn	r0, #104	; 0x68
    4e84:	ldrls	r2, [r2, r3, lsl #2]
    4e88:	bl	0 <coda_set_error>
    4e8c:	mvn	r0, #0
    4e90:	pop	{r4, pc}
    4e94:	mov	r3, #3680	; 0xe60
    4e98:	ldr	r2, [pc, #84]	; 4ef4 <coda_type_get_array_dim+0xe0>
    4e9c:	ldr	r1, [pc, #84]	; 4ef8 <coda_type_get_array_dim+0xe4>
    4ea0:	mvn	r0, #99	; 0x63
    4ea4:	bl	0 <coda_set_error>
    4ea8:	mvn	r0, #0
    4eac:	pop	{r4, pc}
    4eb0:	mov	r3, #3696	; 0xe70
    4eb4:	ldr	r2, [pc, #56]	; 4ef4 <coda_type_get_array_dim+0xe0>
    4eb8:	ldr	r1, [pc, #60]	; 4efc <coda_type_get_array_dim+0xe8>
    4ebc:	mvn	r0, #99	; 0x63
    4ec0:	bl	0 <coda_set_error>
    4ec4:	mvn	r0, #0
    4ec8:	pop	{r4, pc}
    4ecc:	ldr	r3, [pc, #44]	; 4f00 <coda_type_get_array_dim+0xec>
    4ed0:	ldr	r2, [pc, #28]	; 4ef4 <coda_type_get_array_dim+0xe0>
    4ed4:	ldr	r1, [pc, #40]	; 4f04 <coda_type_get_array_dim+0xf0>
    4ed8:	mvn	r0, #99	; 0x63
    4edc:	bl	0 <coda_set_error>
    4ee0:	mvn	r0, #0
    4ee4:	pop	{r4, pc}
    4ee8:	.word	0x00001838
    4eec:	.word	0x00000000
    4ef0:	.word	0x000001ac
    4ef4:	.word	0x00000000
    4ef8:	.word	0x000001b4
    4efc:	.word	0x00001894
    4f00:	.word	0x00000e6b
    4f04:	.word	0x00001870

00004f08 <coda_type_get_array_base_type>:
    4f08:	cmp	r0, #0
    4f0c:	push	{r4, lr}
    4f10:	beq	4f5c <coda_type_get_array_base_type+0x54>
    4f14:	ldr	r3, [r0, #8]
    4f18:	cmp	r3, #1
    4f1c:	bne	4f38 <coda_type_get_array_base_type+0x30>
    4f20:	cmp	r1, #0
    4f24:	beq	4f78 <coda_type_get_array_base_type+0x70>
    4f28:	ldr	r3, [r0, #40]	; 0x28
    4f2c:	mov	r0, #0
    4f30:	str	r3, [r1]
    4f34:	pop	{r4, pc}
    4f38:	cmp	r3, #6
    4f3c:	ldr	r1, [pc, #80]	; 4f94 <coda_type_get_array_base_type+0x8c>
    4f40:	ldrls	r2, [pc, #80]	; 4f98 <coda_type_get_array_base_type+0x90>
    4f44:	ldrhi	r2, [pc, #80]	; 4f9c <coda_type_get_array_base_type+0x94>
    4f48:	mvn	r0, #104	; 0x68
    4f4c:	ldrls	r2, [r2, r3, lsl #2]
    4f50:	bl	0 <coda_set_error>
    4f54:	mvn	r0, #0
    4f58:	pop	{r4, pc}
    4f5c:	ldr	r3, [pc, #60]	; 4fa0 <coda_type_get_array_base_type+0x98>
    4f60:	ldr	r2, [pc, #60]	; 4fa4 <coda_type_get_array_base_type+0x9c>
    4f64:	ldr	r1, [pc, #60]	; 4fa8 <coda_type_get_array_base_type+0xa0>
    4f68:	mvn	r0, #99	; 0x63
    4f6c:	bl	0 <coda_set_error>
    4f70:	mvn	r0, #0
    4f74:	pop	{r4, pc}
    4f78:	ldr	r3, [pc, #44]	; 4fac <coda_type_get_array_base_type+0xa4>
    4f7c:	ldr	r2, [pc, #32]	; 4fa4 <coda_type_get_array_base_type+0x9c>
    4f80:	ldr	r1, [pc, #40]	; 4fb0 <coda_type_get_array_base_type+0xa8>
    4f84:	mvn	r0, #99	; 0x63
    4f88:	bl	0 <coda_set_error>
    4f8c:	mvn	r0, #0
    4f90:	pop	{r4, pc}
    4f94:	.word	0x00001838
    4f98:	.word	0x00000000
    4f9c:	.word	0x000001ac
    4fa0:	.word	0x00000e88
    4fa4:	.word	0x00000000
    4fa8:	.word	0x000001b4
    4fac:	.word	0x00000e93
    4fb0:	.word	0x00001334

00004fb4 <coda_type_get_unit>:
    4fb4:	subs	r2, r0, #0
    4fb8:	push	{r4, lr}
    4fbc:	sub	sp, sp, #8
    4fc0:	beq	5098 <coda_type_get_unit+0xe4>
    4fc4:	cmp	r1, #0
    4fc8:	mov	r4, r1
    4fcc:	beq	50b4 <coda_type_get_unit+0x100>
    4fd0:	ldr	r3, [r2, #8]
    4fd4:	sub	r3, r3, #1
    4fd8:	cmp	r3, #5
    4fdc:	ldrls	pc, [pc, r3, lsl #2]
    4fe0:	b	5070 <coda_type_get_unit+0xbc>
    4fe4:	.word	0x00005048
    4fe8:	.word	0x00005010
    4fec:	.word	0x00005010
    4ff0:	.word	0x00005070
    4ff4:	.word	0x00005070
    4ff8:	.word	0x00004ffc
    4ffc:	ldr	r3, [r2, #48]	; 0x30
    5000:	mov	r0, #0
    5004:	str	r3, [r1]
    5008:	add	sp, sp, #8
    500c:	pop	{r4, pc}
    5010:	ldr	r3, [pc, #184]	; 50d0 <coda_type_get_unit+0x11c>
    5014:	bl	0 <__aeabi_read_tp>
    5018:	ldr	r3, [pc, r3]
    501c:	ldr	r3, [r0, r3]
    5020:	cmp	r3, #0
    5024:	beq	5084 <coda_type_get_unit+0xd0>
    5028:	ldr	r3, [r2, #48]	; 0x30
    502c:	cmp	r3, #0
    5030:	beq	5084 <coda_type_get_unit+0xd0>
    5034:	ldr	r3, [r3, #32]
    5038:	mov	r0, #0
    503c:	str	r3, [r1]
    5040:	add	sp, sp, #8
    5044:	pop	{r4, pc}
    5048:	mov	r0, r2
    504c:	add	r1, sp, #4
    5050:	bl	4f08 <coda_type_get_array_base_type>
    5054:	cmp	r0, #0
    5058:	mvnne	r0, #0
    505c:	bne	5008 <coda_type_get_unit+0x54>
    5060:	mov	r1, r4
    5064:	ldr	r0, [sp, #4]
    5068:	bl	4fb4 <coda_type_get_unit>
    506c:	b	5008 <coda_type_get_unit+0x54>
    5070:	mov	r3, #0
    5074:	mov	r0, r3
    5078:	str	r3, [r1]
    507c:	add	sp, sp, #8
    5080:	pop	{r4, pc}
    5084:	ldr	r3, [r2, #40]	; 0x28
    5088:	mov	r0, #0
    508c:	str	r3, [r4]
    5090:	add	sp, sp, #8
    5094:	pop	{r4, pc}
    5098:	mvn	r0, #99	; 0x63
    509c:	ldr	r3, [pc, #48]	; 50d4 <coda_type_get_unit+0x120>
    50a0:	ldr	r2, [pc, #48]	; 50d8 <coda_type_get_unit+0x124>
    50a4:	ldr	r1, [pc, #48]	; 50dc <coda_type_get_unit+0x128>
    50a8:	bl	0 <coda_set_error>
    50ac:	mvn	r0, #0
    50b0:	b	5008 <coda_type_get_unit+0x54>
    50b4:	mvn	r0, #99	; 0x63
    50b8:	ldr	r3, [pc, #32]	; 50e0 <coda_type_get_unit+0x12c>
    50bc:	ldr	r2, [pc, #20]	; 50d8 <coda_type_get_unit+0x124>
    50c0:	ldr	r1, [pc, #28]	; 50e4 <coda_type_get_unit+0x130>
    50c4:	bl	0 <coda_set_error>
    50c8:	mvn	r0, #0
    50cc:	b	5008 <coda_type_get_unit+0x54>
    50d0:	.word	0x000000b0
    50d4:	.word	0x00000bfc
    50d8:	.word	0x00000000
    50dc:	.word	0x000001b4
    50e0:	.word	0x00000c02
    50e4:	.word	0x00000ad0

000050e8 <coda_type_get_special_type>:
    50e8:	cmp	r0, #0
    50ec:	push	{r4, lr}
    50f0:	beq	5138 <coda_type_get_special_type+0x50>
    50f4:	ldr	r3, [r0, #8]
    50f8:	cmp	r3, #6
    50fc:	bne	5118 <coda_type_get_special_type+0x30>
    5100:	cmp	r1, #0
    5104:	beq	5154 <coda_type_get_special_type+0x6c>
    5108:	ldr	r3, [r0, #40]	; 0x28
    510c:	mov	r0, #0
    5110:	str	r3, [r1]
    5114:	pop	{r4, pc}
    5118:	ldrls	r2, [pc, #80]	; 5170 <coda_type_get_special_type+0x88>
    511c:	ldrhi	r2, [pc, #80]	; 5174 <coda_type_get_special_type+0x8c>
    5120:	ldr	r1, [pc, #80]	; 5178 <coda_type_get_special_type+0x90>
    5124:	ldrls	r2, [r2, r3, lsl #2]
    5128:	mvn	r0, #104	; 0x68
    512c:	bl	0 <coda_set_error>
    5130:	mvn	r0, #0
    5134:	pop	{r4, pc}
    5138:	ldr	r3, [pc, #60]	; 517c <coda_type_get_special_type+0x94>
    513c:	ldr	r2, [pc, #60]	; 5180 <coda_type_get_special_type+0x98>
    5140:	ldr	r1, [pc, #60]	; 5184 <coda_type_get_special_type+0x9c>
    5144:	mvn	r0, #99	; 0x63
    5148:	bl	0 <coda_set_error>
    514c:	mvn	r0, #0
    5150:	pop	{r4, pc}
    5154:	ldr	r3, [pc, #44]	; 5188 <coda_type_get_special_type+0xa0>
    5158:	ldr	r2, [pc, #32]	; 5180 <coda_type_get_special_type+0x98>
    515c:	ldr	r1, [pc, #40]	; 518c <coda_type_get_special_type+0xa4>
    5160:	mvn	r0, #99	; 0x63
    5164:	bl	0 <coda_set_error>
    5168:	mvn	r0, #0
    516c:	pop	{r4, pc}
    5170:	.word	0x00000000
    5174:	.word	0x000001ac
    5178:	.word	0x000018b4
    517c:	.word	0x00000ea8
    5180:	.word	0x00000000
    5184:	.word	0x000001b4
    5188:	.word	0x00000eb3
    518c:	.word	0x000018f0

00005190 <coda_type_get_special_base_type>:
    5190:	cmp	r0, #0
    5194:	push	{r4, lr}
    5198:	beq	51e0 <coda_type_get_special_base_type+0x50>
    519c:	ldr	r3, [r0, #8]
    51a0:	cmp	r3, #6
    51a4:	bne	51c0 <coda_type_get_special_base_type+0x30>
    51a8:	cmp	r1, #0
    51ac:	beq	51fc <coda_type_get_special_base_type+0x6c>
    51b0:	ldr	r3, [r0, #44]	; 0x2c
    51b4:	mov	r0, #0
    51b8:	str	r3, [r1]
    51bc:	pop	{r4, pc}
    51c0:	ldrls	r2, [pc, #80]	; 5218 <coda_type_get_special_base_type+0x88>
    51c4:	ldrhi	r2, [pc, #80]	; 521c <coda_type_get_special_base_type+0x8c>
    51c8:	ldr	r1, [pc, #80]	; 5220 <coda_type_get_special_base_type+0x90>
    51cc:	ldrls	r2, [r2, r3, lsl #2]
    51d0:	mvn	r0, #104	; 0x68
    51d4:	bl	0 <coda_set_error>
    51d8:	mvn	r0, #0
    51dc:	pop	{r4, pc}
    51e0:	ldr	r3, [pc, #60]	; 5224 <coda_type_get_special_base_type+0x94>
    51e4:	ldr	r2, [pc, #60]	; 5228 <coda_type_get_special_base_type+0x98>
    51e8:	ldr	r1, [pc, #60]	; 522c <coda_type_get_special_base_type+0x9c>
    51ec:	mvn	r0, #99	; 0x63
    51f0:	bl	0 <coda_set_error>
    51f4:	mvn	r0, #0
    51f8:	pop	{r4, pc}
    51fc:	ldr	r3, [pc, #44]	; 5230 <coda_type_get_special_base_type+0xa0>
    5200:	ldr	r2, [pc, #32]	; 5228 <coda_type_get_special_base_type+0x98>
    5204:	ldr	r1, [pc, #40]	; 5234 <coda_type_get_special_base_type+0xa4>
    5208:	mvn	r0, #99	; 0x63
    520c:	bl	0 <coda_set_error>
    5210:	mvn	r0, #0
    5214:	pop	{r4, pc}
    5218:	.word	0x00000000
    521c:	.word	0x000001ac
    5220:	.word	0x000018b4
    5224:	.word	0x00000ec7
    5228:	.word	0x00000000
    522c:	.word	0x000001b4
    5230:	.word	0x00000ed2
    5234:	.word	0x00001334
