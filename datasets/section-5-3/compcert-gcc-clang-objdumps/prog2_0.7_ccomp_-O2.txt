
../repos/prog2/0.7:     file format elf32-littlearm


Disassembly of section .init:

0001030c <.init>:
   1030c:	push	{r3, lr}
   10310:	bl	10398 <abort@plt+0x3c>
   10314:	pop	{r3, pc}

Disassembly of section .plt:

00010318 <printf@plt-0x14>:
   10318:	push	{lr}		; (str lr, [sp, #-4]!)
   1031c:	ldr	lr, [pc, #4]	; 10328 <printf@plt-0x4>
   10320:	add	lr, pc, lr
   10324:	ldr	pc, [lr, #8]!
   10328:	ldrdeq	r0, [r1], -r8

0001032c <printf@plt>:
   1032c:	add	ip, pc, #0, 12
   10330:	add	ip, ip, #16, 20	; 0x10000
   10334:	ldr	pc, [ip, #3288]!	; 0xcd8

00010338 <__libc_start_main@plt>:
   10338:	add	ip, pc, #0, 12
   1033c:	add	ip, ip, #16, 20	; 0x10000
   10340:	ldr	pc, [ip, #3280]!	; 0xcd0

00010344 <scanf@plt>:
   10344:	add	ip, pc, #0, 12
   10348:	add	ip, ip, #16, 20	; 0x10000
   1034c:	ldr	pc, [ip, #3272]!	; 0xcc8

00010350 <__gmon_start__@plt>:
   10350:	add	ip, pc, #0, 12
   10354:	add	ip, ip, #16, 20	; 0x10000
   10358:	ldr	pc, [ip, #3264]!	; 0xcc0

0001035c <abort@plt>:
   1035c:	add	ip, pc, #0, 12
   10360:	add	ip, ip, #16, 20	; 0x10000
   10364:	ldr	pc, [ip, #3256]!	; 0xcb8

Disassembly of section .text:

00010368 <.text>:
   10368:	bleq	4c4ac <abort@plt+0x3c150>
   1036c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10370:	strbtmi	fp, [sl], -r2, lsl #24
   10374:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10378:			; <UNDEFINED> instruction: 0xc010f8df
   1037c:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10380:	blmi	122394 <abort@plt+0x112038>
   10384:	svc	0x00d8f7ff
   10388:	svc	0x00e8f7ff
   1038c:	andeq	r0, r1, r9, ror r7
   10390:	andeq	r0, r1, r8, asr r5
   10394:	andeq	r0, r1, r9, lsr r7
   10398:	ldr	r3, [pc, #20]	; 103b4 <abort@plt+0x58>
   1039c:	ldr	r2, [pc, #20]	; 103b8 <abort@plt+0x5c>
   103a0:	add	r3, pc, r3
   103a4:	ldr	r2, [r3, r2]
   103a8:	cmp	r2, #0
   103ac:	bxeq	lr
   103b0:	b	10350 <__gmon_start__@plt>
   103b4:	andeq	r0, r1, r8, asr ip
   103b8:	andeq	r0, r0, r0, lsr #32
   103bc:	eoreq	pc, ip, r1, asr #4
   103c0:	andeq	pc, r2, r0, asr #5
   103c4:	msreq	CPSR_fs, #268435460	; 0x10000004
   103c8:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   103cc:	andle	r4, r5, r3, lsl #5
   103d0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   103d4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   103d8:	ldrmi	fp, [r8, -r3, lsl #2]
   103dc:	svclt	0x00004770
   103e0:	eoreq	pc, ip, r1, asr #4
   103e4:	andeq	pc, r2, r0, asr #5
   103e8:	msreq	R12_fiq, r1
   103ec:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   103f0:	svceq	0x00d91a0b
   103f4:			; <UNDEFINED> instruction: 0x01a3eb01
   103f8:	andle	r1, r5, r9, asr #32
   103fc:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10400:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10404:	ldrmi	fp, [r8, -r3, lsl #2]
   10408:	svclt	0x00004770
   1040c:	vqrshl.s8	d27, d0, d1
   10410:	vaddhn.i16	d16, q0, q14
   10414:	stmdavc	r3!, {r1, sl}
   10418:			; <UNDEFINED> instruction: 0xf7ffb91b
   1041c:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10420:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10424:	svclt	0x0000e7dc
   10428:	mov	ip, sp
   1042c:	sub	sp, sp, #8
   10430:	str	ip, [sp]
   10434:	str	lr, [sp, #4]
   10438:	vldr	s4, [pc, #112]	; 104b0 <abort@plt+0x154>
   1043c:	mov	r3, #0
   10440:	cmp	r3, r1
   10444:	bge	10498 <abort@plt+0x13c>
   10448:	add	r2, r0, r3, lsl #2
   1044c:	vldr	s6, [r2]
   10450:	vcvt.f64.f32	d0, s6
   10454:	vldr	d4, [pc, #88]	; 104b4 <abort@plt+0x158>
   10458:	vcmp.f64	d0, d4
   1045c:	vmrs	APSR_nzcv, fpscr
   10460:	blt	10484 <abort@plt+0x128>
   10464:	vmov.f64	d1, #35	; 0x41180000  9.5
   10468:	vcmp.f64	d0, d1
   1046c:	vmrs	APSR_nzcv, fpscr
   10470:	bpl	10484 <abort@plt+0x128>
   10474:	vcvt.f64.f32	d0, s4
   10478:	vadd.f64	d6, d0, d1
   1047c:	vcvt.f32.f64	s4, d6
   10480:	b	10490 <abort@plt+0x134>
   10484:	add	r2, r0, r3, lsl #2
   10488:	vldr	s10, [r2]
   1048c:	vadd.f32	s4, s4, s10
   10490:	add	r3, r3, #1
   10494:	b	10440 <abort@plt+0xe4>
   10498:	vmov	s14, r1
   1049c:	vcvt.f32.s32	s14, s14
   104a0:	vdiv.f32	s0, s4, s14
   104a4:	ldr	lr, [sp, #4]
   104a8:	add	sp, sp, #8
   104ac:	bx	lr
   104b0:	andeq	r0, r0, r0
   104b4:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   104b8:	mlami	r2, r9, r9, r9
   104bc:	mov	ip, sp
   104c0:	sub	sp, sp, #24
   104c4:	str	ip, [sp]
   104c8:	str	lr, [sp, #4]
   104cc:	str	r4, [sp, #8]
   104d0:	str	r5, [sp, #12]
   104d4:	mov	r5, r0
   104d8:	mov	r4, #0
   104dc:	ldr	r0, [pc, #96]	; 10544 <abort@plt+0x1e8>
   104e0:	add	r1, sp, #16
   104e4:	add	r2, sp, #20
   104e8:	bl	10344 <scanf@plt>
   104ec:	cmp	r0, #2
   104f0:	bne	1052c <abort@plt+0x1d0>
   104f4:	add	r1, r5, r4, lsl #2
   104f8:	vldr	s0, [sp, #16]
   104fc:	vcvt.f64.f32	d1, s0
   10500:	vldr	d6, [pc, #72]	; 10550 <abort@plt+0x1f4>
   10504:	vmul.f64	d4, d1, d6
   10508:	vldr	s4, [sp, #20]
   1050c:	vcvt.f64.f32	d5, s4
   10510:	vldr	d7, [pc, #48]	; 10548 <abort@plt+0x1ec>
   10514:	vmul.f64	d1, d5, d7
   10518:	vadd.f64	d2, d4, d1
   1051c:	vcvt.f32.f64	s0, d2
   10520:	vstr	s0, [r1]
   10524:	add	r4, r4, #1
   10528:	b	104dc <abort@plt+0x180>
   1052c:	mov	r0, r4
   10530:	ldr	r4, [sp, #8]
   10534:	ldr	r5, [sp, #12]
   10538:	ldr	lr, [sp, #4]
   1053c:	add	sp, sp, #24
   10540:	bx	lr
   10544:	andeq	r0, r1, sp, lsr r8
   10548:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1054c:	svccc	0x00d99999
   10550:	teqcc	r3, #-872415232	; 0xcc000000
   10554:	svccc	0x00e33333
   10558:	mov	ip, sp
   1055c:	sub	sp, sp, #408	; 0x198
   10560:	str	ip, [sp]
   10564:	str	lr, [sp, #4]
   10568:	vldr	s0, [pc, #452]	; 10734 <abort@plt+0x3d8>
   1056c:	vstr	s0, [sp, #8]
   10570:	vstr	s0, [sp, #12]
   10574:	vstr	s0, [sp, #16]
   10578:	vstr	s0, [sp, #20]
   1057c:	vstr	s0, [sp, #24]
   10580:	vstr	s0, [sp, #28]
   10584:	vstr	s0, [sp, #32]
   10588:	vstr	s0, [sp, #36]	; 0x24
   1058c:	vstr	s0, [sp, #40]	; 0x28
   10590:	vstr	s0, [sp, #44]	; 0x2c
   10594:	vstr	s0, [sp, #48]	; 0x30
   10598:	vstr	s0, [sp, #52]	; 0x34
   1059c:	vstr	s0, [sp, #56]	; 0x38
   105a0:	vstr	s0, [sp, #60]	; 0x3c
   105a4:	vstr	s0, [sp, #64]	; 0x40
   105a8:	vstr	s0, [sp, #68]	; 0x44
   105ac:	vstr	s0, [sp, #72]	; 0x48
   105b0:	vstr	s0, [sp, #76]	; 0x4c
   105b4:	vstr	s0, [sp, #80]	; 0x50
   105b8:	vstr	s0, [sp, #84]	; 0x54
   105bc:	vstr	s0, [sp, #88]	; 0x58
   105c0:	vstr	s0, [sp, #92]	; 0x5c
   105c4:	vstr	s0, [sp, #96]	; 0x60
   105c8:	vstr	s0, [sp, #100]	; 0x64
   105cc:	vstr	s0, [sp, #104]	; 0x68
   105d0:	vstr	s0, [sp, #108]	; 0x6c
   105d4:	vstr	s0, [sp, #112]	; 0x70
   105d8:	vstr	s0, [sp, #116]	; 0x74
   105dc:	vstr	s0, [sp, #120]	; 0x78
   105e0:	vstr	s0, [sp, #124]	; 0x7c
   105e4:	vstr	s0, [sp, #128]	; 0x80
   105e8:	vstr	s0, [sp, #132]	; 0x84
   105ec:	vstr	s0, [sp, #136]	; 0x88
   105f0:	vstr	s0, [sp, #140]	; 0x8c
   105f4:	vstr	s0, [sp, #144]	; 0x90
   105f8:	vstr	s0, [sp, #148]	; 0x94
   105fc:	vstr	s0, [sp, #152]	; 0x98
   10600:	vstr	s0, [sp, #156]	; 0x9c
   10604:	vstr	s0, [sp, #160]	; 0xa0
   10608:	vstr	s0, [sp, #164]	; 0xa4
   1060c:	vstr	s0, [sp, #168]	; 0xa8
   10610:	vstr	s0, [sp, #172]	; 0xac
   10614:	vstr	s0, [sp, #176]	; 0xb0
   10618:	vstr	s0, [sp, #180]	; 0xb4
   1061c:	vstr	s0, [sp, #184]	; 0xb8
   10620:	vstr	s0, [sp, #188]	; 0xbc
   10624:	vstr	s0, [sp, #192]	; 0xc0
   10628:	vstr	s0, [sp, #196]	; 0xc4
   1062c:	vstr	s0, [sp, #200]	; 0xc8
   10630:	vstr	s0, [sp, #204]	; 0xcc
   10634:	vstr	s0, [sp, #208]	; 0xd0
   10638:	vstr	s0, [sp, #212]	; 0xd4
   1063c:	vstr	s0, [sp, #216]	; 0xd8
   10640:	vstr	s0, [sp, #220]	; 0xdc
   10644:	vstr	s0, [sp, #224]	; 0xe0
   10648:	vstr	s0, [sp, #228]	; 0xe4
   1064c:	vstr	s0, [sp, #232]	; 0xe8
   10650:	vstr	s0, [sp, #236]	; 0xec
   10654:	vstr	s0, [sp, #240]	; 0xf0
   10658:	vstr	s0, [sp, #244]	; 0xf4
   1065c:	vstr	s0, [sp, #248]	; 0xf8
   10660:	vstr	s0, [sp, #252]	; 0xfc
   10664:	vstr	s0, [sp, #256]	; 0x100
   10668:	vstr	s0, [sp, #260]	; 0x104
   1066c:	vstr	s0, [sp, #264]	; 0x108
   10670:	vstr	s0, [sp, #268]	; 0x10c
   10674:	vstr	s0, [sp, #272]	; 0x110
   10678:	vstr	s0, [sp, #276]	; 0x114
   1067c:	vstr	s0, [sp, #280]	; 0x118
   10680:	vstr	s0, [sp, #284]	; 0x11c
   10684:	vstr	s0, [sp, #288]	; 0x120
   10688:	vstr	s0, [sp, #292]	; 0x124
   1068c:	vstr	s0, [sp, #296]	; 0x128
   10690:	vstr	s0, [sp, #300]	; 0x12c
   10694:	vstr	s0, [sp, #304]	; 0x130
   10698:	vstr	s0, [sp, #308]	; 0x134
   1069c:	vstr	s0, [sp, #312]	; 0x138
   106a0:	vstr	s0, [sp, #316]	; 0x13c
   106a4:	vstr	s0, [sp, #320]	; 0x140
   106a8:	vstr	s0, [sp, #324]	; 0x144
   106ac:	vstr	s0, [sp, #328]	; 0x148
   106b0:	vstr	s0, [sp, #332]	; 0x14c
   106b4:	vstr	s0, [sp, #336]	; 0x150
   106b8:	vstr	s0, [sp, #340]	; 0x154
   106bc:	vstr	s0, [sp, #344]	; 0x158
   106c0:	vstr	s0, [sp, #348]	; 0x15c
   106c4:	vstr	s0, [sp, #352]	; 0x160
   106c8:	vstr	s0, [sp, #356]	; 0x164
   106cc:	vstr	s0, [sp, #360]	; 0x168
   106d0:	vstr	s0, [sp, #364]	; 0x16c
   106d4:	vstr	s0, [sp, #368]	; 0x170
   106d8:	vstr	s0, [sp, #372]	; 0x174
   106dc:	vstr	s0, [sp, #376]	; 0x178
   106e0:	vstr	s0, [sp, #380]	; 0x17c
   106e4:	vstr	s0, [sp, #384]	; 0x180
   106e8:	vstr	s0, [sp, #388]	; 0x184
   106ec:	vstr	s0, [sp, #392]	; 0x188
   106f0:	vstr	s0, [sp, #396]	; 0x18c
   106f4:	vstr	s0, [sp, #400]	; 0x190
   106f8:	vstr	s0, [sp, #404]	; 0x194
   106fc:	add	r0, sp, #8
   10700:	bl	104bc <abort@plt+0x160>
   10704:	mov	r1, r0
   10708:	add	r0, sp, #8
   1070c:	bl	10428 <abort@plt+0xcc>
   10710:	ldr	r0, [pc, #24]	; 10730 <abort@plt+0x3d4>
   10714:	vcvt.f64.f32	d2, s0
   10718:	vmov	r2, r3, d2
   1071c:	bl	1032c <printf@plt>
   10720:	mov	r0, #0
   10724:	ldr	lr, [sp, #4]
   10728:	add	sp, sp, #408	; 0x198
   1072c:	bx	lr
   10730:	andeq	r0, r1, r8, lsl r8
   10734:	andeq	r0, r0, r0
   10738:	mvnsmi	lr, #737280	; 0xb4000
   1073c:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10740:	strmi	r4, [r8], ip, lsl #26
   10744:			; <UNDEFINED> instruction: 0x4691447e
   10748:			; <UNDEFINED> instruction: 0xf7ff447d
   1074c:	blne	1dcbed4 <abort@plt+0x1dbbb78>
   10750:	strhle	r1, [sl], -r6
   10754:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10758:	svccc	0x0004f855
   1075c:	strbmi	r4, [r1], -sl, asr #12
   10760:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10764:	adcmi	r4, r6, #152, 14	; 0x2600000
   10768:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   1076c:	svclt	0x000083f8
   10770:	andeq	r0, r1, ip, asr #15
   10774:	andeq	r0, r1, r4, asr #15
   10778:	svclt	0x00004770

Disassembly of section .fini:

0001077c <.fini>:
   1077c:	push	{r3, lr}
   10780:	pop	{r3, pc}
