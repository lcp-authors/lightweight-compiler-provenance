
../compcert-repos/prog2/CMakeFiles/9.dir/Aula09_Filas_de_Prioridade_e_Heaps/priorityqueue.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fp_insere>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #32
   c:	str	r0, [fp, #-24]	; 0xffffffe8
  10:	str	r1, [fp, #-28]	; 0xffffffe4
  14:	str	r2, [fp, #-32]	; 0xffffffe0
  18:	ldr	r3, [fp, #-24]	; 0xffffffe8
  1c:	cmp	r3, #0
  20:	bne	2c <fp_insere+0x2c>
  24:	mvn	r3, #0
  28:	b	154 <fp_insere+0x154>
  2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
  30:	ldr	r2, [r3]
  34:	ldr	r3, [fp, #-24]	; 0xffffffe8
  38:	ldr	r3, [r3, #4]
  3c:	cmp	r2, r3
  40:	bne	4c <fp_insere+0x4c>
  44:	mov	r3, #0
  48:	b	154 <fp_insere+0x154>
  4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
  50:	ldr	r0, [fp, #-32]	; 0xffffffe0
  54:	bl	0 <elemento_cria>
  58:	str	r0, [fp, #-16]
  5c:	mov	r3, #0
  60:	str	r3, [fp, #-8]
  64:	b	a4 <fp_insere+0xa4>
  68:	ldr	r3, [fp, #-24]	; 0xffffffe8
  6c:	ldr	r2, [r3, #8]
  70:	ldr	r3, [fp, #-8]
  74:	lsl	r3, r3, #2
  78:	add	r3, r2, r3
  7c:	ldr	r3, [r3]
  80:	ldr	r1, [fp, #-16]
  84:	mov	r0, r3
  88:	bl	0 <maior_que>
  8c:	mov	r3, r0
  90:	cmp	r3, #0
  94:	beq	bc <fp_insere+0xbc>
  98:	ldr	r3, [fp, #-8]
  9c:	add	r3, r3, #1
  a0:	str	r3, [fp, #-8]
  a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
  a8:	ldr	r2, [r3]
  ac:	ldr	r3, [fp, #-8]
  b0:	cmp	r2, r3
  b4:	bgt	68 <fp_insere+0x68>
  b8:	b	c0 <fp_insere+0xc0>
  bc:	nop			; (mov r0, r0)
  c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  c4:	ldr	r3, [r3]
  c8:	str	r3, [fp, #-12]
  cc:	b	110 <fp_insere+0x110>
  d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  d4:	ldr	r2, [r3, #8]
  d8:	ldr	r3, [fp, #-12]
  dc:	add	r3, r3, #1
  e0:	lsl	r3, r3, #2
  e4:	add	r3, r2, r3
  e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
  ec:	ldr	r1, [r2, #8]
  f0:	ldr	r2, [fp, #-12]
  f4:	lsl	r2, r2, #2
  f8:	add	r2, r1, r2
  fc:	ldr	r2, [r2]
 100:	str	r2, [r3]
 104:	ldr	r3, [fp, #-12]
 108:	sub	r3, r3, #1
 10c:	str	r3, [fp, #-12]
 110:	ldr	r2, [fp, #-12]
 114:	ldr	r3, [fp, #-8]
 118:	cmp	r2, r3
 11c:	bge	d0 <fp_insere+0xd0>
 120:	ldr	r3, [fp, #-24]	; 0xffffffe8
 124:	ldr	r2, [r3, #8]
 128:	ldr	r3, [fp, #-8]
 12c:	lsl	r3, r3, #2
 130:	add	r3, r2, r3
 134:	ldr	r2, [fp, #-16]
 138:	str	r2, [r3]
 13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 140:	ldr	r3, [r3]
 144:	add	r2, r3, #1
 148:	ldr	r3, [fp, #-24]	; 0xffffffe8
 14c:	str	r2, [r3]
 150:	mov	r3, #1
 154:	mov	r0, r3
 158:	sub	sp, fp, #4
 15c:	pop	{fp, pc}

00000160 <fp_remove>:
 160:	push	{fp}		; (str fp, [sp, #-4]!)
 164:	add	fp, sp, #0
 168:	sub	sp, sp, #20
 16c:	str	r0, [fp, #-16]
 170:	ldr	r3, [fp, #-16]
 174:	cmp	r3, #0
 178:	beq	18c <fp_remove+0x2c>
 17c:	ldr	r3, [fp, #-16]
 180:	ldr	r3, [r3]
 184:	cmp	r3, #0
 188:	bne	194 <fp_remove+0x34>
 18c:	mov	r3, #0
 190:	b	220 <fp_remove+0xc0>
 194:	ldr	r3, [fp, #-16]
 198:	ldr	r3, [r3, #8]
 19c:	ldr	r3, [r3]
 1a0:	str	r3, [fp, #-12]
 1a4:	mov	r3, #0
 1a8:	str	r3, [fp, #-8]
 1ac:	b	1f0 <fp_remove+0x90>
 1b0:	ldr	r3, [fp, #-16]
 1b4:	ldr	r2, [r3, #8]
 1b8:	ldr	r3, [fp, #-8]
 1bc:	lsl	r3, r3, #2
 1c0:	add	r3, r2, r3
 1c4:	ldr	r2, [fp, #-16]
 1c8:	ldr	r1, [r2, #8]
 1cc:	ldr	r2, [fp, #-8]
 1d0:	add	r2, r2, #1
 1d4:	lsl	r2, r2, #2
 1d8:	add	r2, r1, r2
 1dc:	ldr	r2, [r2]
 1e0:	str	r2, [r3]
 1e4:	ldr	r3, [fp, #-8]
 1e8:	add	r3, r3, #1
 1ec:	str	r3, [fp, #-8]
 1f0:	ldr	r3, [fp, #-16]
 1f4:	ldr	r2, [r3]
 1f8:	ldr	r3, [fp, #-8]
 1fc:	cmp	r2, r3
 200:	bgt	1b0 <fp_remove+0x50>
 204:	ldr	r3, [fp, #-16]
 208:	ldr	r3, [r3]
 20c:	sub	r2, r3, #1
 210:	ldr	r3, [fp, #-16]
 214:	str	r2, [r3]
 218:	ldr	r3, [fp, #-12]
 21c:	ldr	r3, [r3, #4]
 220:	mov	r0, r3
 224:	add	sp, fp, #0
 228:	pop	{fp}		; (ldr fp, [sp], #4)
 22c:	bx	lr

00000230 <fp_carrega>:
 230:	push	{fp, lr}
 234:	add	fp, sp, #4
 238:	sub	sp, sp, #272	; 0x110
 23c:	str	r0, [fp, #-272]	; 0xfffffef0
 240:	str	r1, [fp, #-276]	; 0xfffffeec
 244:	ldr	r1, [pc, #164]	; 2f0 <fp_carrega+0xc0>
 248:	ldr	r0, [fp, #-276]	; 0xfffffeec
 24c:	bl	0 <fopen>
 250:	str	r0, [fp, #-8]
 254:	ldr	r3, [fp, #-8]
 258:	cmp	r3, #0
 25c:	bne	2cc <fp_carrega+0x9c>
 260:	ldr	r0, [pc, #140]	; 2f4 <fp_carrega+0xc4>
 264:	bl	0 <puts>
 268:	b	2e8 <fp_carrega+0xb8>
 26c:	sub	r3, fp, #268	; 0x10c
 270:	mov	r2, r3
 274:	ldr	r1, [pc, #124]	; 2f8 <fp_carrega+0xc8>
 278:	ldr	r0, [fp, #-8]
 27c:	bl	0 <__isoc99_fscanf>
 280:	sub	r3, fp, #264	; 0x108
 284:	ldr	r2, [fp, #-8]
 288:	mov	r1, #256	; 0x100
 28c:	mov	r0, r3
 290:	bl	0 <fgets>
 294:	sub	r3, fp, #264	; 0x108
 298:	mov	r0, r3
 29c:	bl	0 <strlen>
 2a0:	mov	r3, r0
 2a4:	sub	r3, r3, #1
 2a8:	sub	r2, fp, #4
 2ac:	add	r3, r2, r3
 2b0:	mov	r2, #0
 2b4:	strb	r2, [r3, #-260]	; 0xfffffefc
 2b8:	ldr	r2, [fp, #-268]	; 0xfffffef4
 2bc:	sub	r3, fp, #264	; 0x108
 2c0:	mov	r1, r3
 2c4:	ldr	r0, [fp, #-272]	; 0xfffffef0
 2c8:	bl	0 <fp_insere>
 2cc:	ldr	r0, [fp, #-8]
 2d0:	bl	0 <feof>
 2d4:	mov	r3, r0
 2d8:	cmp	r3, #0
 2dc:	beq	26c <fp_carrega+0x3c>
 2e0:	ldr	r0, [fp, #-8]
 2e4:	bl	0 <fclose>
 2e8:	sub	sp, fp, #4
 2ec:	pop	{fp, pc}
 2f0:	.word	0x00000000
 2f4:	.word	0x00000004
 2f8:	.word	0x00000028

000002fc <heap_insere>:
 2fc:	push	{fp, lr}
 300:	add	fp, sp, #4
 304:	sub	sp, sp, #32
 308:	str	r0, [fp, #-24]	; 0xffffffe8
 30c:	str	r1, [fp, #-28]	; 0xffffffe4
 310:	str	r2, [fp, #-32]	; 0xffffffe0
 314:	str	r3, [fp, #-36]	; 0xffffffdc
 318:	ldr	r3, [fp, #-24]	; 0xffffffe8
 31c:	ldr	r2, [r3]
 320:	ldr	r3, [fp, #-24]	; 0xffffffe8
 324:	ldr	r3, [r3, #4]
 328:	cmp	r2, r3
 32c:	bne	338 <heap_insere+0x3c>
 330:	mov	r3, #0
 334:	b	434 <heap_insere+0x138>
 338:	ldr	r1, [fp, #-32]	; 0xffffffe0
 33c:	ldr	r0, [fp, #-36]	; 0xffffffdc
 340:	bl	0 <elemento_cria>
 344:	str	r0, [fp, #-16]
 348:	mov	r3, #0
 34c:	str	r3, [fp, #-8]
 350:	b	360 <heap_insere+0x64>
 354:	ldr	r3, [fp, #-8]
 358:	add	r3, r3, #1
 35c:	str	r3, [fp, #-8]
 360:	ldr	r3, [fp, #-24]	; 0xffffffe8
 364:	ldr	r2, [r3]
 368:	ldr	r3, [fp, #-8]
 36c:	cmp	r2, r3
 370:	ble	3a8 <heap_insere+0xac>
 374:	ldr	r3, [fp, #-24]	; 0xffffffe8
 378:	ldr	r2, [r3, #8]
 37c:	ldr	r3, [fp, #-8]
 380:	lsl	r3, r3, #2
 384:	add	r3, r2, r3
 388:	ldr	r2, [r3]
 38c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 390:	ldr	r1, [fp, #-16]
 394:	mov	r0, r2
 398:	blx	r3
 39c:	mov	r3, r0
 3a0:	cmp	r3, #1
 3a4:	bne	354 <heap_insere+0x58>
 3a8:	ldr	r3, [fp, #-8]
 3ac:	str	r3, [fp, #-12]
 3b0:	b	3f4 <heap_insere+0xf8>
 3b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3b8:	ldr	r2, [r3, #8]
 3bc:	ldr	r3, [fp, #-12]
 3c0:	add	r3, r3, #1
 3c4:	lsl	r3, r3, #2
 3c8:	add	r3, r2, r3
 3cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 3d0:	ldr	r1, [r2, #8]
 3d4:	ldr	r2, [fp, #-12]
 3d8:	lsl	r2, r2, #2
 3dc:	add	r2, r1, r2
 3e0:	ldr	r2, [r2]
 3e4:	str	r2, [r3]
 3e8:	ldr	r3, [fp, #-12]
 3ec:	sub	r3, r3, #1
 3f0:	str	r3, [fp, #-12]
 3f4:	ldr	r3, [fp, #-12]
 3f8:	cmp	r3, #0
 3fc:	bgt	3b4 <heap_insere+0xb8>
 400:	ldr	r3, [fp, #-24]	; 0xffffffe8
 404:	ldr	r2, [r3, #8]
 408:	ldr	r3, [fp, #-8]
 40c:	lsl	r3, r3, #2
 410:	add	r3, r2, r3
 414:	ldr	r2, [fp, #-16]
 418:	str	r2, [r3]
 41c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 420:	ldr	r3, [r3]
 424:	add	r2, r3, #1
 428:	ldr	r3, [fp, #-24]	; 0xffffffe8
 42c:	str	r2, [r3]
 430:	ldr	r3, [fp, #-8]
 434:	mov	r0, r3
 438:	sub	sp, fp, #4
 43c:	pop	{fp, pc}

00000440 <heap_remove>:
 440:	push	{fp}		; (str fp, [sp, #-4]!)
 444:	add	fp, sp, #0
 448:	sub	sp, sp, #12
 44c:	str	r0, [fp, #-8]
 450:	str	r1, [fp, #-12]
 454:	mov	r3, #0
 458:	mov	r0, r3
 45c:	add	sp, fp, #0
 460:	pop	{fp}		; (ldr fp, [sp], #4)
 464:	bx	lr

00000468 <heap_carrega>:
 468:	push	{fp, lr}
 46c:	add	fp, sp, #4
 470:	sub	sp, sp, #280	; 0x118
 474:	str	r0, [fp, #-272]	; 0xfffffef0
 478:	str	r1, [fp, #-276]	; 0xfffffeec
 47c:	str	r2, [fp, #-280]	; 0xfffffee8
 480:	ldr	r1, [pc, #164]	; 52c <heap_carrega+0xc4>
 484:	ldr	r0, [fp, #-280]	; 0xfffffee8
 488:	bl	0 <fopen>
 48c:	str	r0, [fp, #-8]
 490:	ldr	r3, [fp, #-8]
 494:	cmp	r3, #0
 498:	bne	508 <heap_carrega+0xa0>
 49c:	ldr	r0, [pc, #140]	; 530 <heap_carrega+0xc8>
 4a0:	bl	0 <puts>
 4a4:	b	524 <heap_carrega+0xbc>
 4a8:	sub	r3, fp, #268	; 0x10c
 4ac:	mov	r2, r3
 4b0:	ldr	r1, [pc, #124]	; 534 <heap_carrega+0xcc>
 4b4:	ldr	r0, [fp, #-8]
 4b8:	bl	0 <__isoc99_fscanf>
 4bc:	sub	r3, fp, #264	; 0x108
 4c0:	ldr	r2, [fp, #-8]
 4c4:	mov	r1, #256	; 0x100
 4c8:	mov	r0, r3
 4cc:	bl	0 <fgets>
 4d0:	sub	r3, fp, #264	; 0x108
 4d4:	mov	r0, r3
 4d8:	bl	0 <strlen>
 4dc:	mov	r3, r0
 4e0:	sub	r3, r3, #1
 4e4:	sub	r2, fp, #4
 4e8:	add	r3, r2, r3
 4ec:	mov	r2, #0
 4f0:	strb	r2, [r3, #-260]	; 0xfffffefc
 4f4:	ldr	r3, [fp, #-268]	; 0xfffffef4
 4f8:	sub	r2, fp, #264	; 0x108
 4fc:	ldr	r1, [fp, #-276]	; 0xfffffeec
 500:	ldr	r0, [fp, #-272]	; 0xfffffef0
 504:	bl	2fc <heap_insere>
 508:	ldr	r0, [fp, #-8]
 50c:	bl	0 <feof>
 510:	mov	r3, r0
 514:	cmp	r3, #0
 518:	beq	4a8 <heap_carrega+0x40>
 51c:	ldr	r0, [fp, #-8]
 520:	bl	0 <fclose>
 524:	sub	sp, fp, #4
 528:	pop	{fp, pc}
 52c:	.word	0x00000000
 530:	.word	0x00000004
 534:	.word	0x00000028

00000538 <main>:
 538:	push	{fp, lr}
 53c:	add	fp, sp, #4
 540:	sub	sp, sp, #200	; 0xc8
 544:	str	r0, [fp, #-200]	; 0xffffff38
 548:	str	r1, [fp, #-204]	; 0xffffff34
 54c:	mov	r0, #42	; 0x2a
 550:	bl	0 <vetor_cria>
 554:	str	r0, [fp, #-12]
 558:	ldr	r0, [pc, #840]	; 8a8 <main+0x370>
 55c:	bl	0 <puts>
 560:	ldr	r1, [pc, #836]	; 8ac <main+0x374>
 564:	ldr	r0, [fp, #-12]
 568:	bl	230 <fp_carrega>
 56c:	ldr	r3, [pc, #828]	; 8b0 <main+0x378>
 570:	ldr	r3, [r3]
 574:	mov	r1, r3
 578:	ldr	r0, [pc, #820]	; 8b4 <main+0x37c>
 57c:	bl	0 <printf>
 580:	ldr	r0, [fp, #-12]
 584:	bl	0 <vetor_imprime>
 588:	ldr	r3, [fp, #-12]
 58c:	ldr	r3, [r3]
 590:	cmp	r3, #42	; 0x2a
 594:	beq	5a8 <main+0x70>
 598:	ldr	r0, [pc, #792]	; 8b8 <main+0x380>
 59c:	bl	0 <puts>
 5a0:	mov	r3, #1
 5a4:	b	89c <main+0x364>
 5a8:	ldr	r0, [fp, #-12]
 5ac:	bl	160 <fp_remove>
 5b0:	mov	r3, r0
 5b4:	mov	r1, r3
 5b8:	ldr	r0, [pc, #764]	; 8bc <main+0x384>
 5bc:	bl	0 <strcmp>
 5c0:	mov	r3, r0
 5c4:	cmp	r3, #0
 5c8:	beq	5dc <main+0xa4>
 5cc:	ldr	r0, [pc, #748]	; 8c0 <main+0x388>
 5d0:	bl	0 <puts>
 5d4:	mov	r3, #1
 5d8:	b	89c <main+0x364>
 5dc:	ldr	r3, [pc, #716]	; 8b0 <main+0x378>
 5e0:	mov	r2, #0
 5e4:	str	r2, [r3]
 5e8:	ldr	r0, [fp, #-12]
 5ec:	bl	160 <fp_remove>
 5f0:	ldr	r3, [pc, #696]	; 8b0 <main+0x378>
 5f4:	ldr	r3, [r3]
 5f8:	mov	r1, r3
 5fc:	ldr	r0, [pc, #704]	; 8c4 <main+0x38c>
 600:	bl	0 <printf>
 604:	ldr	r3, [pc, #676]	; 8b0 <main+0x378>
 608:	mov	r2, #0
 60c:	str	r2, [r3]
 610:	mov	r2, #99	; 0x63
 614:	ldr	r1, [pc, #684]	; 8c8 <main+0x390>
 618:	ldr	r0, [fp, #-12]
 61c:	bl	0 <fp_insere>
 620:	ldr	r3, [pc, #648]	; 8b0 <main+0x378>
 624:	ldr	r3, [r3]
 628:	mov	r1, r3
 62c:	ldr	r0, [pc, #664]	; 8cc <main+0x394>
 630:	bl	0 <printf>
 634:	ldr	r0, [fp, #-12]
 638:	bl	160 <fp_remove>
 63c:	ldr	r3, [pc, #620]	; 8b0 <main+0x378>
 640:	mov	r2, #0
 644:	str	r2, [r3]
 648:	mov	r2, #0
 64c:	ldr	r1, [pc, #628]	; 8c8 <main+0x390>
 650:	ldr	r0, [fp, #-12]
 654:	bl	0 <fp_insere>
 658:	ldr	r3, [pc, #592]	; 8b0 <main+0x378>
 65c:	ldr	r3, [r3]
 660:	mov	r1, r3
 664:	ldr	r0, [pc, #612]	; 8d0 <main+0x398>
 668:	bl	0 <printf>
 66c:	ldr	r0, [fp, #-12]
 670:	bl	160 <fp_remove>
 674:	ldr	r3, [pc, #564]	; 8b0 <main+0x378>
 678:	mov	r2, #0
 67c:	str	r2, [r3]
 680:	mov	r2, #42	; 0x2a
 684:	ldr	r1, [pc, #572]	; 8c8 <main+0x390>
 688:	ldr	r0, [fp, #-12]
 68c:	bl	0 <fp_insere>
 690:	ldr	r3, [pc, #536]	; 8b0 <main+0x378>
 694:	ldr	r3, [r3]
 698:	mov	r1, r3
 69c:	ldr	r0, [pc, #560]	; 8d4 <main+0x39c>
 6a0:	bl	0 <printf>
 6a4:	ldr	r0, [pc, #556]	; 8d8 <main+0x3a0>
 6a8:	bl	0 <puts>
 6ac:	mov	r0, #42	; 0x2a
 6b0:	bl	0 <vetor_criaHeap>
 6b4:	str	r0, [fp, #-16]
 6b8:	ldr	r3, [pc, #540]	; 8dc <main+0x3a4>
 6bc:	str	r3, [fp, #-20]	; 0xffffffec
 6c0:	ldr	r2, [pc, #484]	; 8ac <main+0x374>
 6c4:	ldr	r1, [fp, #-20]	; 0xffffffec
 6c8:	ldr	r0, [fp, #-16]
 6cc:	bl	468 <heap_carrega>
 6d0:	ldr	r3, [pc, #472]	; 8b0 <main+0x378>
 6d4:	ldr	r3, [r3]
 6d8:	mov	r1, r3
 6dc:	ldr	r0, [pc, #508]	; 8e0 <main+0x3a8>
 6e0:	bl	0 <printf>
 6e4:	ldr	r0, [fp, #-16]
 6e8:	bl	0 <vetor_imprimeHeap>
 6ec:	ldr	r3, [fp, #-16]
 6f0:	ldr	r3, [r3]
 6f4:	cmp	r3, #42	; 0x2a
 6f8:	beq	70c <main+0x1d4>
 6fc:	ldr	r0, [pc, #480]	; 8e4 <main+0x3ac>
 700:	bl	0 <puts>
 704:	mov	r3, #1
 708:	b	89c <main+0x364>
 70c:	ldr	r1, [fp, #-20]	; 0xffffffec
 710:	ldr	r0, [fp, #-16]
 714:	bl	440 <heap_remove>
 718:	mov	r3, r0
 71c:	mov	r1, r3
 720:	ldr	r0, [pc, #404]	; 8bc <main+0x384>
 724:	bl	0 <strcmp>
 728:	mov	r3, r0
 72c:	cmp	r3, #0
 730:	beq	744 <main+0x20c>
 734:	ldr	r0, [pc, #388]	; 8c0 <main+0x388>
 738:	bl	0 <puts>
 73c:	mov	r3, #1
 740:	b	89c <main+0x364>
 744:	ldr	r3, [pc, #356]	; 8b0 <main+0x378>
 748:	mov	r2, #0
 74c:	str	r2, [r3]
 750:	ldr	r1, [fp, #-20]	; 0xffffffec
 754:	ldr	r0, [fp, #-16]
 758:	bl	440 <heap_remove>
 75c:	ldr	r3, [pc, #332]	; 8b0 <main+0x378>
 760:	ldr	r3, [r3]
 764:	mov	r1, r3
 768:	ldr	r0, [pc, #376]	; 8e8 <main+0x3b0>
 76c:	bl	0 <printf>
 770:	ldr	r3, [pc, #312]	; 8b0 <main+0x378>
 774:	mov	r2, #0
 778:	str	r2, [r3]
 77c:	mov	r3, #99	; 0x63
 780:	ldr	r2, [pc, #320]	; 8c8 <main+0x390>
 784:	ldr	r1, [fp, #-20]	; 0xffffffec
 788:	ldr	r0, [fp, #-16]
 78c:	bl	2fc <heap_insere>
 790:	ldr	r3, [pc, #280]	; 8b0 <main+0x378>
 794:	ldr	r3, [r3]
 798:	mov	r1, r3
 79c:	ldr	r0, [pc, #328]	; 8ec <main+0x3b4>
 7a0:	bl	0 <printf>
 7a4:	ldr	r1, [fp, #-20]	; 0xffffffec
 7a8:	ldr	r0, [fp, #-16]
 7ac:	bl	440 <heap_remove>
 7b0:	ldr	r3, [pc, #248]	; 8b0 <main+0x378>
 7b4:	mov	r2, #0
 7b8:	str	r2, [r3]
 7bc:	mov	r3, #0
 7c0:	ldr	r2, [pc, #256]	; 8c8 <main+0x390>
 7c4:	ldr	r1, [fp, #-20]	; 0xffffffec
 7c8:	ldr	r0, [fp, #-16]
 7cc:	bl	2fc <heap_insere>
 7d0:	ldr	r3, [pc, #216]	; 8b0 <main+0x378>
 7d4:	ldr	r3, [r3]
 7d8:	mov	r1, r3
 7dc:	ldr	r0, [pc, #268]	; 8f0 <main+0x3b8>
 7e0:	bl	0 <printf>
 7e4:	ldr	r1, [fp, #-20]	; 0xffffffec
 7e8:	ldr	r0, [fp, #-16]
 7ec:	bl	440 <heap_remove>
 7f0:	ldr	r3, [pc, #184]	; 8b0 <main+0x378>
 7f4:	mov	r2, #0
 7f8:	str	r2, [r3]
 7fc:	mov	r3, #42	; 0x2a
 800:	ldr	r2, [pc, #192]	; 8c8 <main+0x390>
 804:	ldr	r1, [fp, #-20]	; 0xffffffec
 808:	ldr	r0, [fp, #-16]
 80c:	bl	2fc <heap_insere>
 810:	ldr	r3, [pc, #152]	; 8b0 <main+0x378>
 814:	ldr	r3, [r3]
 818:	mov	r1, r3
 81c:	ldr	r0, [pc, #176]	; 8d4 <main+0x39c>
 820:	bl	0 <printf>
 824:	mov	r0, #42	; 0x2a
 828:	bl	0 <vetor_criaHeap>
 82c:	str	r0, [fp, #-16]
 830:	ldr	r3, [pc, #188]	; 8f4 <main+0x3bc>
 834:	str	r3, [fp, #-24]	; 0xffffffe8
 838:	ldr	r2, [pc, #108]	; 8ac <main+0x374>
 83c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 840:	ldr	r0, [fp, #-16]
 844:	bl	468 <heap_carrega>
 848:	ldr	r3, [pc, #96]	; 8b0 <main+0x378>
 84c:	ldr	r3, [r3]
 850:	mov	r1, r3
 854:	ldr	r0, [pc, #132]	; 8e0 <main+0x3a8>
 858:	bl	0 <printf>
 85c:	mov	r3, #0
 860:	str	r3, [fp, #-8]
 864:	b	88c <main+0x354>
 868:	ldr	r1, [fp, #-24]	; 0xffffffe8
 86c:	ldr	r0, [fp, #-16]
 870:	bl	440 <heap_remove>
 874:	mov	r3, r0
 878:	mov	r0, r3
 87c:	bl	0 <puts>
 880:	ldr	r3, [fp, #-8]
 884:	add	r3, r3, #1
 888:	str	r3, [fp, #-8]
 88c:	ldr	r3, [fp, #-8]
 890:	cmp	r3, #41	; 0x29
 894:	ble	868 <main+0x330>
 898:	mov	r3, #0
 89c:	mov	r0, r3
 8a0:	sub	sp, fp, #4
 8a4:	pop	{fp, pc}
 8a8:	.word	0x0000002c
 8ac:	.word	0x00000064
 8b0:	.word	0x00000000
 8b4:	.word	0x00000070
 8b8:	.word	0x000000a8
 8bc:	.word	0x000000d0
 8c0:	.word	0x000000e4
 8c4:	.word	0x00000128
 8c8:	.word	0x0000015c
 8cc:	.word	0x0000016c
 8d0:	.word	0x000001b4
 8d4:	.word	0x000001fc
 8d8:	.word	0x00000244
 8dc:	.word	0x00000000
 8e0:	.word	0x0000027c
 8e4:	.word	0x000002b4
 8e8:	.word	0x000002dc
 8ec:	.word	0x00000310
 8f0:	.word	0x00000358
 8f4:	.word	0x00000000
