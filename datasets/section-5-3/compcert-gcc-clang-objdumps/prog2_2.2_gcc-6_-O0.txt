
../compcert-repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	107cc <_start@@Base+0x3c>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <printf@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <printf@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r0, r1, r0, lsl r9

000106f4 <printf@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #16, 20	; 0x10000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <free@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #16, 20	; 0x10000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <fgets@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #16, 20	; 0x10000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <getchar@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <realloc@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <strcpy@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <puts@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <malloc@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

0001076c <strlen@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2240]!	; 0x8c0

00010778 <__isoc99_scanf@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2232]!	; 0x8b8

00010784 <abort@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2224]!	; 0x8b0

Disassembly of section .text:

00010790 <_start@@Base>:
   10790:	mov	fp, #0
   10794:	mov	lr, #0
   10798:	pop	{r1}		; (ldr r1, [sp], #4)
   1079c:	mov	r2, sp
   107a0:	push	{r2}		; (str r2, [sp, #-4]!)
   107a4:	push	{r0}		; (str r0, [sp, #-4]!)
   107a8:	ldr	ip, [pc, #16]	; 107c0 <_start@@Base+0x30>
   107ac:	push	{ip}		; (str ip, [sp, #-4]!)
   107b0:	ldr	r0, [pc, #12]	; 107c4 <_start@@Base+0x34>
   107b4:	ldr	r3, [pc, #12]	; 107c8 <_start@@Base+0x38>
   107b8:	bl	10754 <__libc_start_main@plt>
   107bc:	bl	10784 <abort@plt>
   107c0:	andeq	r0, r1, r8, ror #22
   107c4:			; <UNDEFINED> instruction: 0x000108b8
   107c8:	andeq	r0, r1, r8, lsl #22
   107cc:	ldr	r3, [pc, #20]	; 107e8 <_start@@Base+0x58>
   107d0:	ldr	r2, [pc, #20]	; 107ec <_start@@Base+0x5c>
   107d4:	add	r3, pc, r3
   107d8:	ldr	r2, [r3, r2]
   107dc:	cmp	r2, #0
   107e0:	bxeq	lr
   107e4:	b	10760 <__gmon_start__@plt>
   107e8:	andeq	r0, r1, r4, lsr #16
   107ec:	andeq	r0, r0, r0, asr #32
   107f0:	ldr	r3, [pc, #28]	; 10814 <_start@@Base+0x84>
   107f4:	ldr	r0, [pc, #28]	; 10818 <_start@@Base+0x88>
   107f8:	sub	r3, r3, r0
   107fc:	cmp	r3, #6
   10800:	bxls	lr
   10804:	ldr	r3, [pc, #16]	; 1081c <_start@@Base+0x8c>
   10808:	cmp	r3, #0
   1080c:	bxeq	lr
   10810:	bx	r3
   10814:	andeq	r1, r2, pc, asr #32
   10818:	andeq	r1, r2, ip, asr #32
   1081c:	andeq	r0, r0, r0
   10820:	ldr	r1, [pc, #36]	; 1084c <_start@@Base+0xbc>
   10824:	ldr	r0, [pc, #36]	; 10850 <_start@@Base+0xc0>
   10828:	sub	r1, r1, r0
   1082c:	asr	r1, r1, #2
   10830:	add	r1, r1, r1, lsr #31
   10834:	asrs	r1, r1, #1
   10838:	bxeq	lr
   1083c:	ldr	r3, [pc, #16]	; 10854 <_start@@Base+0xc4>
   10840:	cmp	r3, #0
   10844:	bxeq	lr
   10848:	bx	r3
   1084c:	andeq	r1, r2, ip, asr #32
   10850:	andeq	r1, r2, ip, asr #32
   10854:	andeq	r0, r0, r0
   10858:	push	{r4, lr}
   1085c:	ldr	r4, [pc, #24]	; 1087c <_start@@Base+0xec>
   10860:	ldrb	r3, [r4]
   10864:	cmp	r3, #0
   10868:	popne	{r4, pc}
   1086c:	bl	107f0 <_start@@Base+0x60>
   10870:	mov	r3, #1
   10874:	strb	r3, [r4]
   10878:	pop	{r4, pc}
   1087c:	andeq	r1, r2, r4, asr r0
   10880:	ldr	r0, [pc, #40]	; 108b0 <_start@@Base+0x120>
   10884:	ldr	r3, [r0]
   10888:	cmp	r3, #0
   1088c:	bne	10894 <_start@@Base+0x104>
   10890:	b	10820 <_start@@Base+0x90>
   10894:	ldr	r3, [pc, #24]	; 108b4 <_start@@Base+0x124>
   10898:	cmp	r3, #0
   1089c:	beq	10890 <_start@@Base+0x100>
   108a0:	push	{r4, lr}
   108a4:	blx	r3
   108a8:	pop	{r4, lr}
   108ac:	b	10820 <_start@@Base+0x90>
   108b0:	andeq	r0, r2, r4, lsl pc
   108b4:	andeq	r0, r0, r0

000108b8 <main@@Base>:
   108b8:	push	{r4, r5, fp, lr}
   108bc:	add	fp, sp, #12
   108c0:	sub	sp, sp, #96	; 0x60
   108c4:	mov	r0, #12
   108c8:	bl	10748 <malloc@plt>
   108cc:	mov	r3, r0
   108d0:	str	r3, [fp, #-20]	; 0xffffffec
   108d4:	mov	r3, #0
   108d8:	str	r3, [fp, #-16]
   108dc:	b	10904 <main@@Base+0x4c>
   108e0:	ldr	r3, [fp, #-16]
   108e4:	lsl	r3, r3, #2
   108e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   108ec:	add	r3, r2, r3
   108f0:	mov	r2, #0
   108f4:	str	r2, [r3]
   108f8:	ldr	r3, [fp, #-16]
   108fc:	add	r3, r3, #1
   10900:	str	r3, [fp, #-16]
   10904:	ldr	r3, [fp, #-16]
   10908:	cmp	r3, #2
   1090c:	ble	108e0 <main@@Base+0x28>
   10910:	mov	r3, #0
   10914:	str	r3, [fp, #-16]
   10918:	b	10980 <main@@Base+0xc8>
   1091c:	ldr	r3, [fp, #-16]
   10920:	add	r3, r3, #1
   10924:	mov	r1, r3
   10928:	ldr	r0, [pc, #448]	; 10af0 <main@@Base+0x238>
   1092c:	bl	106f4 <printf@plt>
   10930:	ldr	r3, [fp, #-16]
   10934:	lsl	r3, r3, #2
   10938:	ldr	r2, [fp, #-20]	; 0xffffffec
   1093c:	add	r3, r2, r3
   10940:	ldr	r3, [r3]
   10944:	cmp	r3, #0
   10948:	bne	10958 <main@@Base+0xa0>
   1094c:	ldr	r0, [pc, #416]	; 10af4 <main@@Base+0x23c>
   10950:	bl	1073c <puts@plt>
   10954:	b	10974 <main@@Base+0xbc>
   10958:	ldr	r3, [fp, #-16]
   1095c:	lsl	r3, r3, #2
   10960:	ldr	r2, [fp, #-20]	; 0xffffffec
   10964:	add	r3, r2, r3
   10968:	ldr	r3, [r3]
   1096c:	mov	r0, r3
   10970:	bl	1073c <puts@plt>
   10974:	ldr	r3, [fp, #-16]
   10978:	add	r3, r3, #1
   1097c:	str	r3, [fp, #-16]
   10980:	ldr	r3, [fp, #-16]
   10984:	cmp	r3, #2
   10988:	ble	1091c <main@@Base+0x64>
   1098c:	mov	r1, #3
   10990:	ldr	r0, [pc, #352]	; 10af8 <main@@Base+0x240>
   10994:	bl	106f4 <printf@plt>
   10998:	sub	r3, fp, #104	; 0x68
   1099c:	mov	r1, r3
   109a0:	ldr	r0, [pc, #340]	; 10afc <main@@Base+0x244>
   109a4:	bl	10778 <__isoc99_scanf@plt>
   109a8:	bl	10718 <getchar@plt>
   109ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   109b0:	cmp	r3, #0
   109b4:	blt	1098c <main@@Base+0xd4>
   109b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   109bc:	cmp	r3, #3
   109c0:	bgt	1098c <main@@Base+0xd4>
   109c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   109c8:	cmp	r3, #0
   109cc:	beq	10a94 <main@@Base+0x1dc>
   109d0:	ldr	r0, [pc, #296]	; 10b00 <main@@Base+0x248>
   109d4:	bl	106f4 <printf@plt>
   109d8:	ldr	r3, [pc, #292]	; 10b04 <main@@Base+0x24c>
   109dc:	ldr	r2, [r3]
   109e0:	sub	r3, fp, #100	; 0x64
   109e4:	mov	r1, #80	; 0x50
   109e8:	mov	r0, r3
   109ec:	bl	1070c <fgets@plt>
   109f0:	sub	r3, fp, #100	; 0x64
   109f4:	mov	r0, r3
   109f8:	bl	1076c <strlen@plt>
   109fc:	mov	r3, r0
   10a00:	sub	r3, r3, #1
   10a04:	sub	r2, fp, #12
   10a08:	add	r3, r2, r3
   10a0c:	mov	r2, #0
   10a10:	strb	r2, [r3, #-88]	; 0xffffffa8
   10a14:	ldr	r3, [fp, #-104]	; 0xffffff98
   10a18:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a1c:	lsl	r3, r3, #2
   10a20:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a24:	add	r4, r2, r3
   10a28:	ldr	r3, [fp, #-104]	; 0xffffff98
   10a2c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a30:	lsl	r3, r3, #2
   10a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a38:	add	r3, r2, r3
   10a3c:	ldr	r5, [r3]
   10a40:	sub	r3, fp, #100	; 0x64
   10a44:	mov	r0, r3
   10a48:	bl	1076c <strlen@plt>
   10a4c:	mov	r3, r0
   10a50:	add	r3, r3, #1
   10a54:	mov	r1, r3
   10a58:	mov	r0, r5
   10a5c:	bl	10724 <realloc@plt>
   10a60:	mov	r3, r0
   10a64:	str	r3, [r4]
   10a68:	ldr	r3, [fp, #-104]	; 0xffffff98
   10a6c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a70:	lsl	r3, r3, #2
   10a74:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a78:	add	r3, r2, r3
   10a7c:	ldr	r3, [r3]
   10a80:	sub	r2, fp, #100	; 0x64
   10a84:	mov	r1, r2
   10a88:	mov	r0, r3
   10a8c:	bl	10730 <strcpy@plt>
   10a90:	b	10910 <main@@Base+0x58>
   10a94:	nop			; (mov r0, r0)
   10a98:	mov	r3, #0
   10a9c:	str	r3, [fp, #-16]
   10aa0:	b	10acc <main@@Base+0x214>
   10aa4:	ldr	r3, [fp, #-16]
   10aa8:	lsl	r3, r3, #2
   10aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   10ab0:	add	r3, r2, r3
   10ab4:	ldr	r3, [r3]
   10ab8:	mov	r0, r3
   10abc:	bl	10700 <free@plt>
   10ac0:	ldr	r3, [fp, #-16]
   10ac4:	add	r3, r3, #1
   10ac8:	str	r3, [fp, #-16]
   10acc:	ldr	r3, [fp, #-16]
   10ad0:	cmp	r3, #2
   10ad4:	ble	10aa4 <main@@Base+0x1ec>
   10ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10adc:	bl	10700 <free@plt>
   10ae0:	mov	r3, #0
   10ae4:	mov	r0, r3
   10ae8:	sub	sp, fp, #12
   10aec:	pop	{r4, r5, fp, pc}
   10af0:	andeq	r0, r1, r8, ror fp
   10af4:	andeq	r0, r1, r0, lsl #23
   10af8:	andeq	r0, r1, r8, lsl #23
   10afc:	andeq	r0, r1, ip, lsr #23
   10b00:			; <UNDEFINED> instruction: 0x00010bb0
   10b04:	andeq	r1, r2, r0, asr r0

00010b08 <__libc_csu_init@@Base>:
   10b08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b0c:	mov	r7, r0
   10b10:	ldr	r6, [pc, #72]	; 10b60 <__libc_csu_init@@Base+0x58>
   10b14:	ldr	r5, [pc, #72]	; 10b64 <__libc_csu_init@@Base+0x5c>
   10b18:	add	r6, pc, r6
   10b1c:	add	r5, pc, r5
   10b20:	sub	r6, r6, r5
   10b24:	mov	r8, r1
   10b28:	mov	r9, r2
   10b2c:	bl	106d4 <printf@plt-0x20>
   10b30:	asrs	r6, r6, #2
   10b34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b38:	mov	r4, #0
   10b3c:	add	r4, r4, #1
   10b40:	ldr	r3, [r5], #4
   10b44:	mov	r2, r9
   10b48:	mov	r1, r8
   10b4c:	mov	r0, r7
   10b50:	blx	r3
   10b54:	cmp	r6, r4
   10b58:	bne	10b3c <__libc_csu_init@@Base+0x34>
   10b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10b64:	andeq	r0, r1, r8, ror #7

00010b68 <__libc_csu_fini@@Base>:
   10b68:	bx	lr

Disassembly of section .fini:

00010b6c <.fini>:
   10b6c:	push	{r3, lr}
   10b70:	pop	{r3, pc}
