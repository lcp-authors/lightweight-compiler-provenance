
../compcert-repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	10dec <_start@@Base+0x3c>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <calloc@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <calloc@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r1, r1, r8, lsr r3

00010ccc <calloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <strcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <strtol@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <printf@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <fopen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <free@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fgets@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <realloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <strcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <puts@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <malloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #69632	; 0x11000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <__libc_start_main@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #69632	; 0x11000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <__gmon_start__@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #69632	; 0x11000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <feof@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #69632	; 0x11000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #69632	; 0x11000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <strchr@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #69632	; 0x11000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <fclose@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #69632	; 0x11000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <fgets_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #69632	; 0x11000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <abort@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #69632	; 0x11000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010db0 <_start@@Base>:
   10db0:	mov	fp, #0
   10db4:	mov	lr, #0
   10db8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dbc:	mov	r2, sp
   10dc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dc8:	ldr	ip, [pc, #16]	; 10de0 <_start@@Base+0x30>
   10dcc:	push	{ip}		; (str ip, [sp, #-4]!)
   10dd0:	ldr	r0, [pc, #12]	; 10de4 <_start@@Base+0x34>
   10dd4:	ldr	r3, [pc, #12]	; 10de8 <_start@@Base+0x38>
   10dd8:	bl	10d50 <__libc_start_main@plt>
   10ddc:	bl	10da4 <abort@plt>
   10de0:	andeq	r1, r1, r8, ror #26
   10de4:	andeq	r1, r1, r4, lsr #3
   10de8:	andeq	r1, r1, r8, lsl #26
   10dec:	ldr	r3, [pc, #20]	; 10e08 <_start@@Base+0x58>
   10df0:	ldr	r2, [pc, #20]	; 10e0c <_start@@Base+0x5c>
   10df4:	add	r3, pc, r3
   10df8:	ldr	r2, [r3, r2]
   10dfc:	cmp	r2, #0
   10e00:	bxeq	lr
   10e04:	b	10d5c <__gmon_start__@plt>
   10e08:	andeq	r1, r1, r4, lsl #4
   10e0c:	andeq	r0, r0, r8, asr r0
   10e10:	ldr	r0, [pc, #24]	; 10e30 <_start@@Base+0x80>
   10e14:	ldr	r3, [pc, #24]	; 10e34 <_start@@Base+0x84>
   10e18:	cmp	r3, r0
   10e1c:	bxeq	lr
   10e20:	ldr	r3, [pc, #16]	; 10e38 <_start@@Base+0x88>
   10e24:	cmp	r3, #0
   10e28:	bxeq	lr
   10e2c:	bx	r3
   10e30:	andeq	r2, r2, r4, rrx
   10e34:	andeq	r2, r2, r4, rrx
   10e38:	andeq	r0, r0, r0
   10e3c:	ldr	r0, [pc, #36]	; 10e68 <_start@@Base+0xb8>
   10e40:	ldr	r1, [pc, #36]	; 10e6c <_start@@Base+0xbc>
   10e44:	sub	r1, r1, r0
   10e48:	asr	r1, r1, #2
   10e4c:	add	r1, r1, r1, lsr #31
   10e50:	asrs	r1, r1, #1
   10e54:	bxeq	lr
   10e58:	ldr	r3, [pc, #16]	; 10e70 <_start@@Base+0xc0>
   10e5c:	cmp	r3, #0
   10e60:	bxeq	lr
   10e64:	bx	r3
   10e68:	andeq	r2, r2, r4, rrx
   10e6c:	andeq	r2, r2, r4, rrx
   10e70:	andeq	r0, r0, r0
   10e74:	push	{r4, lr}
   10e78:	ldr	r4, [pc, #24]	; 10e98 <_start@@Base+0xe8>
   10e7c:	ldrb	r3, [r4]
   10e80:	cmp	r3, #0
   10e84:	popne	{r4, pc}
   10e88:	bl	10e10 <_start@@Base+0x60>
   10e8c:	mov	r3, #1
   10e90:	strb	r3, [r4]
   10e94:	pop	{r4, pc}
   10e98:	andeq	r2, r2, r4, rrx
   10e9c:	b	10e3c <_start@@Base+0x8c>

00010ea0 <retira_duplicados@@Base>:
   10ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ea4:	add	fp, sp, #24
   10ea8:	mov	r4, r0
   10eac:	bl	11560 <vetor_tamanho@@Base>
   10eb0:	cmp	r0, #2
   10eb4:	blt	10f4c <retira_duplicados@@Base+0xac>
   10eb8:	mov	r8, #0
   10ebc:	b	10ed4 <retira_duplicados@@Base+0x34>
   10ec0:	mov	r0, r4
   10ec4:	bl	11560 <vetor_tamanho@@Base>
   10ec8:	sub	r0, r0, #1
   10ecc:	cmp	r8, r0
   10ed0:	bge	10f4c <retira_duplicados@@Base+0xac>
   10ed4:	mov	r0, r4
   10ed8:	mov	r5, r8
   10edc:	add	r8, r8, #1
   10ee0:	bl	11560 <vetor_tamanho@@Base>
   10ee4:	cmp	r8, r0
   10ee8:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10eec:	mov	r6, r8
   10ef0:	b	10f08 <retira_duplicados@@Base+0x68>
   10ef4:	mov	r0, r4
   10ef8:	add	r6, r6, #1
   10efc:	bl	11560 <vetor_tamanho@@Base>
   10f00:	cmp	r6, r0
   10f04:	bge	10ec0 <retira_duplicados@@Base+0x20>
   10f08:	mov	r0, r4
   10f0c:	mov	r1, r5
   10f10:	bl	11570 <vetor_elemento@@Base>
   10f14:	mov	r7, r0
   10f18:	mov	r0, r4
   10f1c:	mov	r1, r6
   10f20:	bl	11570 <vetor_elemento@@Base>
   10f24:	mov	r1, r0
   10f28:	mov	r0, r7
   10f2c:	bl	10cd8 <strcmp@plt>
   10f30:	cmp	r0, #0
   10f34:	bne	10ef4 <retira_duplicados@@Base+0x54>
   10f38:	mov	r0, r4
   10f3c:	mov	r1, r6
   10f40:	bl	116c0 <vetor_remove@@Base>
   10f44:	sub	r6, r6, #1
   10f48:	b	10ef4 <retira_duplicados@@Base+0x54>
   10f4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f50 <interseta@@Base>:
   10f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f54:	add	fp, sp, #28
   10f58:	sub	sp, sp, #4
   10f5c:	mov	r4, r1
   10f60:	mov	sl, r0
   10f64:	bl	11450 <vetor_novo@@Base>
   10f68:	ldr	r7, [sl]
   10f6c:	mov	r8, r0
   10f70:	cmp	r7, #0
   10f74:	bne	10f84 <interseta@@Base+0x34>
   10f78:	ldr	r0, [sl, #8]
   10f7c:	cmp	r0, #1
   10f80:	blt	11000 <interseta@@Base+0xb0>
   10f84:	mov	r9, #0
   10f88:	mov	r0, #1
   10f8c:	ldr	r1, [r7]
   10f90:	mov	r5, r0
   10f94:	mov	r0, r4
   10f98:	mov	r2, #0
   10f9c:	bl	11b2c <lista_pesquisa@@Base>
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fe4 <interseta@@Base+0x94>
   10fa8:	ldr	r6, [r7]
   10fac:	mov	r0, r4
   10fb0:	mov	r2, #0
   10fb4:	mov	r1, r6
   10fb8:	bl	11b2c <lista_pesquisa@@Base>
   10fbc:	ldr	r1, [r0]
   10fc0:	mov	r0, r6
   10fc4:	bl	10cd8 <strcmp@plt>
   10fc8:	cmp	r0, #0
   10fcc:	bne	10fe4 <interseta@@Base+0x94>
   10fd0:	ldr	r1, [r7]
   10fd4:	mov	r0, r8
   10fd8:	mov	r2, r9
   10fdc:	bl	115a0 <vetor_insere@@Base>
   10fe0:	add	r9, r9, #1
   10fe4:	ldr	r7, [r7, #4]
   10fe8:	ldr	r1, [sl, #8]
   10fec:	add	r0, r5, #1
   10ff0:	cmp	r7, #0
   10ff4:	bne	10f8c <interseta@@Base+0x3c>
   10ff8:	cmp	r5, r1
   10ffc:	blt	10f8c <interseta@@Base+0x3c>
   11000:	mov	r0, r8
   11004:	sub	sp, fp, #28
   11008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001100c <anteriores@@Base>:
   1100c:	push	{r4, r5, r6, r7, fp, lr}
   11010:	add	fp, sp, #16
   11014:	mov	r4, r1
   11018:	mov	r6, r0
   1101c:	bl	11450 <vetor_novo@@Base>
   11020:	ldr	r7, [r6]
   11024:	mov	r5, r0
   11028:	cmp	r7, #0
   1102c:	bne	11040 <anteriores@@Base+0x34>
   11030:	b	1107c <anteriores@@Base+0x70>
   11034:	ldr	r7, [r7, #4]
   11038:	cmp	r7, #0
   1103c:	beq	1107c <anteriores@@Base+0x70>
   11040:	ldr	r6, [r7]
   11044:	mov	r0, r6
   11048:	bl	10d74 <strlen@plt>
   1104c:	add	r0, r6, r0
   11050:	mov	r1, #0
   11054:	mov	r2, #10
   11058:	sub	r0, r0, #5
   1105c:	bl	10ce4 <strtol@plt>
   11060:	cmp	r0, r4
   11064:	bge	11034 <anteriores@@Base+0x28>
   11068:	ldr	r2, [r5]
   1106c:	mov	r0, r5
   11070:	mov	r1, r6
   11074:	bl	115a0 <vetor_insere@@Base>
   11078:	b	11034 <anteriores@@Base+0x28>
   1107c:	mov	r0, r5
   11080:	pop	{r4, r5, r6, r7, fp, pc}

00011084 <lerAtores@@Base>:
   11084:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11088:	add	fp, sp, #24
   1108c:	sub	sp, sp, #256	; 0x100
   11090:	cmp	r0, #0
   11094:	beq	11104 <lerAtores@@Base+0x80>
   11098:	mov	r5, r0
   1109c:	bl	11450 <vetor_novo@@Base>
   110a0:	mov	r4, r0
   110a4:	mov	r0, r5
   110a8:	bl	10d68 <feof@plt>
   110ac:	cmp	r0, #0
   110b0:	bne	11108 <lerAtores@@Base+0x84>
   110b4:	mov	r6, sp
   110b8:	mov	r7, #0
   110bc:	mov	r0, r6
   110c0:	mov	r1, #255	; 0xff
   110c4:	mov	r2, r5
   110c8:	bl	10d14 <fgets@plt>
   110cc:	mov	r0, r6
   110d0:	mov	r1, #10
   110d4:	bl	10d80 <strchr@plt>
   110d8:	cmp	r0, #0
   110dc:	mov	r1, r6
   110e0:	strbne	r7, [r0]
   110e4:	mov	r0, r4
   110e8:	ldr	r2, [r4]
   110ec:	bl	115a0 <vetor_insere@@Base>
   110f0:	mov	r0, r5
   110f4:	bl	10d68 <feof@plt>
   110f8:	cmp	r0, #0
   110fc:	beq	110bc <lerAtores@@Base+0x38>
   11100:	b	11108 <lerAtores@@Base+0x84>
   11104:	mov	r4, #0
   11108:	mov	r0, r4
   1110c:	sub	sp, fp, #24
   11110:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011114 <lerFilmes@@Base>:
   11114:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11118:	add	fp, sp, #24
   1111c:	sub	sp, sp, #256	; 0x100
   11120:	cmp	r0, #0
   11124:	beq	11194 <lerFilmes@@Base+0x80>
   11128:	mov	r5, r0
   1112c:	bl	1191c <lista_nova@@Base>
   11130:	mov	r4, r0
   11134:	mov	r0, r5
   11138:	bl	10d68 <feof@plt>
   1113c:	cmp	r0, #0
   11140:	bne	11198 <lerFilmes@@Base+0x84>
   11144:	mov	r6, sp
   11148:	mov	r7, #0
   1114c:	mov	r0, r6
   11150:	mov	r1, #255	; 0xff
   11154:	mov	r2, r5
   11158:	bl	10d14 <fgets@plt>
   1115c:	mov	r0, r6
   11160:	mov	r1, #10
   11164:	bl	10d80 <strchr@plt>
   11168:	cmp	r0, #0
   1116c:	mov	r1, r6
   11170:	mov	r2, #0
   11174:	strbne	r7, [r0]
   11178:	mov	r0, r4
   1117c:	bl	119c0 <lista_insere@@Base>
   11180:	mov	r0, r5
   11184:	bl	10d68 <feof@plt>
   11188:	cmp	r0, #0
   1118c:	beq	1114c <lerFilmes@@Base+0x38>
   11190:	b	11198 <lerFilmes@@Base+0x84>
   11194:	mov	r4, #0
   11198:	mov	r0, r4
   1119c:	sub	sp, fp, #24
   111a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000111a4 <main@@Base>:
   111a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a8:	add	fp, sp, #28
   111ac:	sub	sp, sp, #276	; 0x114
   111b0:	movw	r4, #7556	; 0x1d84
   111b4:	movw	r0, #7544	; 0x1d78
   111b8:	movt	r4, #1
   111bc:	movt	r0, #1
   111c0:	mov	r1, r4
   111c4:	bl	10cfc <fopen@plt>
   111c8:	mov	sl, r0
   111cc:	movw	r0, #7558	; 0x1d86
   111d0:	mov	r1, r4
   111d4:	movt	r0, #1
   111d8:	bl	10cfc <fopen@plt>
   111dc:	mov	r5, r0
   111e0:	movw	r0, #7569	; 0x1d91
   111e4:	mov	r1, r4
   111e8:	movt	r0, #1
   111ec:	bl	10cfc <fopen@plt>
   111f0:	mov	r6, r0
   111f4:	mov	r0, sl
   111f8:	bl	11084 <lerAtores@@Base>
   111fc:	mov	r7, r0
   11200:	mov	r9, #0
   11204:	cmp	r5, #0
   11208:	mov	r4, #0
   1120c:	str	r0, [sp, #12]
   11210:	beq	1122c <main@@Base+0x88>
   11214:	bl	1191c <lista_nova@@Base>
   11218:	mov	r4, r0
   1121c:	mov	r0, r5
   11220:	bl	10d68 <feof@plt>
   11224:	cmp	r0, #0
   11228:	beq	112a0 <main@@Base+0xfc>
   1122c:	cmp	r6, #0
   11230:	beq	112f8 <main@@Base+0x154>
   11234:	bl	1191c <lista_nova@@Base>
   11238:	mov	r9, r0
   1123c:	mov	r0, r6
   11240:	bl	10d68 <feof@plt>
   11244:	cmp	r0, #0
   11248:	bne	112f8 <main@@Base+0x154>
   1124c:	add	r7, sp, #16
   11250:	mov	r8, #0
   11254:	mov	r0, r7
   11258:	mov	r1, #255	; 0xff
   1125c:	mov	r2, r6
   11260:	bl	10d98 <fgets_unlocked@plt>
   11264:	mov	r0, r7
   11268:	mov	r1, #10
   1126c:	bl	10d80 <strchr@plt>
   11270:	cmp	r0, #0
   11274:	mov	r1, r7
   11278:	mov	r2, #0
   1127c:	strbne	r8, [r0]
   11280:	mov	r0, r9
   11284:	bl	119c0 <lista_insere@@Base>
   11288:	mov	r0, r6
   1128c:	bl	10d68 <feof@plt>
   11290:	cmp	r0, #0
   11294:	beq	11254 <main@@Base+0xb0>
   11298:	ldr	r7, [sp, #12]
   1129c:	b	112f8 <main@@Base+0x154>
   112a0:	add	r7, sp, #16
   112a4:	mov	r8, #0
   112a8:	mov	r0, r7
   112ac:	mov	r1, #255	; 0xff
   112b0:	mov	r2, r5
   112b4:	bl	10d98 <fgets_unlocked@plt>
   112b8:	mov	r0, r7
   112bc:	mov	r1, #10
   112c0:	bl	10d80 <strchr@plt>
   112c4:	cmp	r0, #0
   112c8:	mov	r1, r7
   112cc:	mov	r2, #0
   112d0:	strbne	r8, [r0]
   112d4:	mov	r0, r4
   112d8:	bl	119c0 <lista_insere@@Base>
   112dc:	mov	r0, r5
   112e0:	bl	10d68 <feof@plt>
   112e4:	cmp	r0, #0
   112e8:	beq	112a8 <main@@Base+0x104>
   112ec:	ldr	r7, [sp, #12]
   112f0:	cmp	r6, #0
   112f4:	bne	11234 <main@@Base+0x90>
   112f8:	mov	r0, r7
   112fc:	bl	11560 <vetor_tamanho@@Base>
   11300:	mov	r1, r0
   11304:	movw	r0, #7581	; 0x1d9d
   11308:	movt	r0, #1
   1130c:	bl	10cf0 <printf@plt>
   11310:	mov	r0, r7
   11314:	bl	10ea0 <retira_duplicados@@Base>
   11318:	mov	r0, r7
   1131c:	bl	11560 <vetor_tamanho@@Base>
   11320:	mov	r1, r0
   11324:	movw	r0, #7600	; 0x1db0
   11328:	movt	r0, #1
   1132c:	bl	10cf0 <printf@plt>
   11330:	mov	r0, r4
   11334:	mov	r1, r9
   11338:	bl	10f50 <interseta@@Base>
   1133c:	cmp	r0, #0
   11340:	str	sl, [sp, #4]
   11344:	str	r0, [sp, #8]
   11348:	beq	11364 <main@@Base+0x1c0>
   1134c:	bl	11560 <vetor_tamanho@@Base>
   11350:	mov	r1, r0
   11354:	movw	r0, #7628	; 0x1dcc
   11358:	movt	r0, #1
   1135c:	bl	10cf0 <printf@plt>
   11360:	b	11370 <main@@Base+0x1cc>
   11364:	movw	r0, #7692	; 0x1e0c
   11368:	movt	r0, #1
   1136c:	bl	10d38 <puts@plt>
   11370:	bl	11450 <vetor_novo@@Base>
   11374:	ldr	sl, [r4]
   11378:	mov	r8, r0
   1137c:	cmp	sl, #0
   11380:	bne	11394 <main@@Base+0x1f0>
   11384:	b	113d0 <main@@Base+0x22c>
   11388:	ldr	sl, [sl, #4]
   1138c:	cmp	sl, #0
   11390:	beq	113d0 <main@@Base+0x22c>
   11394:	ldr	r7, [sl]
   11398:	mov	r0, r7
   1139c:	bl	10d74 <strlen@plt>
   113a0:	add	r0, r7, r0
   113a4:	mov	r1, #0
   113a8:	mov	r2, #10
   113ac:	sub	r0, r0, #5
   113b0:	bl	10ce4 <strtol@plt>
   113b4:	cmp	r0, #2000	; 0x7d0
   113b8:	bge	11388 <main@@Base+0x1e4>
   113bc:	ldr	r2, [r8]
   113c0:	mov	r0, r8
   113c4:	mov	r1, r7
   113c8:	bl	115a0 <vetor_insere@@Base>
   113cc:	b	11388 <main@@Base+0x1e4>
   113d0:	cmp	r8, #0
   113d4:	beq	113f4 <main@@Base+0x250>
   113d8:	mov	r0, r8
   113dc:	bl	11560 <vetor_tamanho@@Base>
   113e0:	mov	r1, r0
   113e4:	movw	r0, #7659	; 0x1deb
   113e8:	movt	r0, #1
   113ec:	bl	10cf0 <printf@plt>
   113f0:	b	11400 <main@@Base+0x25c>
   113f4:	movw	r0, #7715	; 0x1e23
   113f8:	movt	r0, #1
   113fc:	bl	10d38 <puts@plt>
   11400:	ldr	r0, [sp, #12]
   11404:	ldr	r7, [sp, #4]
   11408:	bl	1147c <vetor_apaga@@Base>
   1140c:	ldr	r0, [sp, #8]
   11410:	bl	1147c <vetor_apaga@@Base>
   11414:	mov	r0, r8
   11418:	bl	1147c <vetor_apaga@@Base>
   1141c:	mov	r0, r4
   11420:	bl	11948 <lista_apaga@@Base>
   11424:	mov	r0, r9
   11428:	bl	11948 <lista_apaga@@Base>
   1142c:	mov	r0, r7
   11430:	bl	10d8c <fclose@plt>
   11434:	mov	r0, r5
   11438:	bl	10d8c <fclose@plt>
   1143c:	mov	r0, r6
   11440:	bl	10d8c <fclose@plt>
   11444:	mov	r0, #0
   11448:	sub	sp, fp, #28
   1144c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011450 <vetor_novo@@Base>:
   11450:	push	{fp, lr}
   11454:	mov	fp, sp
   11458:	mov	r0, #12
   1145c:	bl	10d44 <malloc@plt>
   11460:	cmp	r0, #0
   11464:	moveq	r0, #0
   11468:	movne	r1, #0
   1146c:	strne	r1, [r0]
   11470:	strne	r1, [r0, #4]
   11474:	strne	r1, [r0, #8]
   11478:	pop	{fp, pc}

0001147c <vetor_apaga@@Base>:
   1147c:	cmp	r0, #0
   11480:	bxeq	lr
   11484:	push	{r4, r5, fp, lr}
   11488:	add	fp, sp, #8
   1148c:	ldr	r1, [r0]
   11490:	mov	r4, r0
   11494:	ldr	r0, [r0, #8]
   11498:	cmp	r1, #1
   1149c:	blt	114c0 <vetor_apaga@@Base+0x44>
   114a0:	mov	r5, #0
   114a4:	ldr	r0, [r0, r5, lsl #2]
   114a8:	bl	10d08 <free@plt>
   114ac:	ldr	r1, [r4]
   114b0:	ldr	r0, [r4, #8]
   114b4:	add	r5, r5, #1
   114b8:	cmp	r5, r1
   114bc:	blt	114a4 <vetor_apaga@@Base+0x28>
   114c0:	bl	10d08 <free@plt>
   114c4:	mov	r0, r4
   114c8:	pop	{r4, r5, fp, lr}
   114cc:	b	10d08 <free@plt>

000114d0 <vetor_atribui@@Base>:
   114d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114d4:	add	fp, sp, #24
   114d8:	mvn	r5, #0
   114dc:	cmp	r0, #0
   114e0:	beq	11558 <vetor_atribui@@Base+0x88>
   114e4:	mov	r4, r1
   114e8:	cmp	r1, #0
   114ec:	bmi	11558 <vetor_atribui@@Base+0x88>
   114f0:	mov	r7, r0
   114f4:	ldr	r0, [r0]
   114f8:	cmp	r0, r4
   114fc:	ble	11558 <vetor_atribui@@Base+0x88>
   11500:	mov	r0, r2
   11504:	mov	r8, r2
   11508:	bl	10d74 <strlen@plt>
   1150c:	mov	r9, r0
   11510:	ldr	r0, [r7, #8]
   11514:	ldr	r6, [r0, r4, lsl #2]
   11518:	mov	r0, r6
   1151c:	bl	10d74 <strlen@plt>
   11520:	cmp	r9, r0
   11524:	bls	11548 <vetor_atribui@@Base+0x78>
   11528:	add	r1, r9, #1
   1152c:	mov	r0, r6
   11530:	bl	10d20 <realloc@plt>
   11534:	mov	r6, r0
   11538:	ldr	r0, [r7, #8]
   1153c:	cmp	r6, #0
   11540:	str	r6, [r0, r4, lsl #2]
   11544:	beq	11558 <vetor_atribui@@Base+0x88>
   11548:	mov	r0, r6
   1154c:	mov	r1, r8
   11550:	bl	10d2c <strcpy@plt>
   11554:	mov	r5, r4
   11558:	mov	r0, r5
   1155c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011560 <vetor_tamanho@@Base>:
   11560:	cmp	r0, #0
   11564:	ldrne	r0, [r0]
   11568:	mvneq	r0, #0
   1156c:	bx	lr

00011570 <vetor_elemento@@Base>:
   11570:	mov	r2, r0
   11574:	mov	r0, #0
   11578:	cmp	r2, #0
   1157c:	beq	1159c <vetor_elemento@@Base+0x2c>
   11580:	cmp	r1, #0
   11584:	bmi	1159c <vetor_elemento@@Base+0x2c>
   11588:	ldr	r3, [r2]
   1158c:	cmp	r3, r1
   11590:	bxle	lr
   11594:	ldr	r0, [r2, #8]
   11598:	ldr	r0, [r0, r1, lsl #2]
   1159c:	bx	lr

000115a0 <vetor_insere@@Base>:
   115a0:	push	{r4, r5, r6, r7, fp, lr}
   115a4:	add	fp, sp, #16
   115a8:	mvn	r4, #0
   115ac:	cmp	r0, #0
   115b0:	beq	116b8 <vetor_insere@@Base+0x118>
   115b4:	mov	r5, r2
   115b8:	cmp	r2, #0
   115bc:	bmi	116b8 <vetor_insere@@Base+0x118>
   115c0:	mov	r6, r0
   115c4:	ldr	r0, [r0]
   115c8:	cmp	r0, r5
   115cc:	blt	116b8 <vetor_insere@@Base+0x118>
   115d0:	mov	r7, r1
   115d4:	ldr	r1, [r6, #4]
   115d8:	cmp	r0, r1
   115dc:	bne	1160c <vetor_insere@@Base+0x6c>
   115e0:	cmp	r0, #0
   115e4:	lsl	r1, r0, #1
   115e8:	movweq	r1, #1
   115ec:	str	r1, [r6, #4]
   115f0:	lsl	r1, r1, #2
   115f4:	ldr	r0, [r6, #8]
   115f8:	bl	10d20 <realloc@plt>
   115fc:	cmp	r0, #0
   11600:	str	r0, [r6, #8]
   11604:	beq	116b8 <vetor_insere@@Base+0x118>
   11608:	ldr	r0, [r6]
   1160c:	cmp	r0, r5
   11610:	ble	1167c <vetor_insere@@Base+0xdc>
   11614:	sub	r1, r0, r5
   11618:	tst	r1, #1
   1161c:	mov	r1, r0
   11620:	beq	11634 <vetor_insere@@Base+0x94>
   11624:	ldr	r2, [r6, #8]
   11628:	sub	r1, r0, #1
   1162c:	ldr	r3, [r2, r1, lsl #2]
   11630:	str	r3, [r2, r0, lsl #2]
   11634:	add	r2, r5, #1
   11638:	cmp	r0, r2
   1163c:	beq	1167c <vetor_insere@@Base+0xdc>
   11640:	lsl	r0, r1, #2
   11644:	sub	r1, r1, #1
   11648:	ldr	r2, [r6, #8]
   1164c:	ldr	r3, [r2, r1, lsl #2]
   11650:	str	r3, [r2, r0]
   11654:	ldr	r2, [r6, #8]
   11658:	add	r3, r2, r0
   1165c:	sub	r0, r0, #8
   11660:	ldr	r3, [r3, #-8]
   11664:	str	r3, [r2, r1, lsl #2]
   11668:	sub	r2, r1, #2
   1166c:	sub	r1, r1, #1
   11670:	cmp	r1, r5
   11674:	mov	r1, r2
   11678:	bgt	11648 <vetor_insere@@Base+0xa8>
   1167c:	mov	r0, r7
   11680:	bl	10d74 <strlen@plt>
   11684:	add	r0, r0, #1
   11688:	mov	r1, #1
   1168c:	bl	10ccc <calloc@plt>
   11690:	ldr	r1, [r6, #8]
   11694:	cmp	r0, #0
   11698:	str	r0, [r1, r5, lsl #2]
   1169c:	beq	116b8 <vetor_insere@@Base+0x118>
   116a0:	mov	r1, r7
   116a4:	bl	10d2c <strcpy@plt>
   116a8:	ldr	r0, [r6]
   116ac:	mov	r4, r5
   116b0:	add	r0, r0, #1
   116b4:	str	r0, [r6]
   116b8:	mov	r0, r4
   116bc:	pop	{r4, r5, r6, r7, fp, pc}

000116c0 <vetor_remove@@Base>:
   116c0:	push	{r4, r5, fp, lr}
   116c4:	add	fp, sp, #8
   116c8:	mov	r4, r0
   116cc:	mvn	r0, #0
   116d0:	cmp	r4, #0
   116d4:	beq	11788 <vetor_remove@@Base+0xc8>
   116d8:	mov	r5, r1
   116dc:	cmp	r1, #0
   116e0:	bmi	11788 <vetor_remove@@Base+0xc8>
   116e4:	ldr	r1, [r4]
   116e8:	cmp	r1, r5
   116ec:	pople	{r4, r5, fp, pc}
   116f0:	ldr	r0, [r4, #8]
   116f4:	ldr	r0, [r0, r5, lsl #2]
   116f8:	bl	10d08 <free@plt>
   116fc:	ldr	r0, [r4]
   11700:	add	r1, r5, #1
   11704:	cmp	r1, r0
   11708:	bge	1177c <vetor_remove@@Base+0xbc>
   1170c:	mvn	r2, r5
   11710:	sub	ip, r0, #2
   11714:	add	r2, r0, r2
   11718:	tst	r2, #1
   1171c:	bne	11734 <vetor_remove@@Base+0x74>
   11720:	mov	r2, r1
   11724:	mov	r1, r5
   11728:	cmp	ip, r5
   1172c:	bne	1174c <vetor_remove@@Base+0x8c>
   11730:	b	1177c <vetor_remove@@Base+0xbc>
   11734:	ldr	r2, [r4, #8]
   11738:	ldr	r3, [r2, r1, lsl #2]
   1173c:	str	r3, [r2, r5, lsl #2]
   11740:	add	r2, r5, #2
   11744:	cmp	ip, r5
   11748:	beq	1177c <vetor_remove@@Base+0xbc>
   1174c:	ldr	r3, [r4, #8]
   11750:	ldr	r5, [r3, r2, lsl #2]
   11754:	str	r5, [r3, r1, lsl #2]
   11758:	ldr	r1, [r4, #8]
   1175c:	add	r3, r1, r2, lsl #2
   11760:	ldr	r3, [r3, #4]
   11764:	str	r3, [r1, r2, lsl #2]
   11768:	add	r3, r2, #2
   1176c:	add	r1, r2, #1
   11770:	cmp	r3, r0
   11774:	mov	r2, r3
   11778:	blt	1174c <vetor_remove@@Base+0x8c>
   1177c:	sub	r0, r0, #1
   11780:	str	r0, [r4]
   11784:	mov	r0, #0
   11788:	pop	{r4, r5, fp, pc}

0001178c <vetor_pesquisa@@Base>:
   1178c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11790:	add	fp, sp, #24
   11794:	mvn	r8, #0
   11798:	cmp	r0, #0
   1179c:	beq	117d8 <vetor_pesquisa@@Base+0x4c>
   117a0:	ldr	r6, [r0]
   117a4:	cmp	r6, #1
   117a8:	blt	117d8 <vetor_pesquisa@@Base+0x4c>
   117ac:	ldr	r4, [r0, #8]
   117b0:	mov	r5, r1
   117b4:	mov	r7, #0
   117b8:	ldr	r0, [r4, r7, lsl #2]
   117bc:	mov	r1, r5
   117c0:	bl	10cd8 <strcmp@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	117e0 <vetor_pesquisa@@Base+0x54>
   117cc:	add	r7, r7, #1
   117d0:	cmp	r7, r6
   117d4:	blt	117b8 <vetor_pesquisa@@Base+0x2c>
   117d8:	mov	r0, r8
   117dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117e0:	mov	r0, r7
   117e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000117e8 <vetor_ordena@@Base>:
   117e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117ec:	add	fp, sp, #28
   117f0:	sub	sp, sp, #4
   117f4:	cmp	r0, #0
   117f8:	beq	11894 <vetor_ordena@@Base+0xac>
   117fc:	ldr	r1, [r0]
   11800:	mov	sl, r0
   11804:	mov	r0, #0
   11808:	cmp	r1, #2
   1180c:	str	r1, [sp]
   11810:	blt	118a4 <vetor_ordena@@Base+0xbc>
   11814:	ldr	r5, [sl, #8]
   11818:	mov	r8, #1
   1181c:	b	11838 <vetor_ordena@@Base+0x50>
   11820:	mov	r4, r8
   11824:	ldr	r0, [sp]
   11828:	add	r8, r8, #1
   1182c:	str	r6, [r5, r4, lsl #2]
   11830:	cmp	r8, r0
   11834:	bge	118a0 <vetor_ordena@@Base+0xb8>
   11838:	sub	r9, r8, #1
   1183c:	ldr	r6, [r5, r8, lsl #2]
   11840:	ldr	r7, [r5, r9, lsl #2]
   11844:	mov	r0, r6
   11848:	mov	r1, r7
   1184c:	bl	10cd8 <strcmp@plt>
   11850:	cmn	r0, #1
   11854:	bgt	11820 <vetor_ordena@@Base+0x38>
   11858:	add	r0, r5, r9, lsl #2
   1185c:	mov	r4, r9
   11860:	cmp	r9, #1
   11864:	str	r7, [r0, #4]
   11868:	ldr	r5, [sl, #8]
   1186c:	blt	11824 <vetor_ordena@@Base+0x3c>
   11870:	add	r0, r5, r4, lsl #2
   11874:	ldr	r7, [r0, #-4]
   11878:	mov	r0, r6
   1187c:	mov	r1, r7
   11880:	bl	10cd8 <strcmp@plt>
   11884:	sub	r9, r4, #1
   11888:	cmp	r0, #0
   1188c:	bmi	11858 <vetor_ordena@@Base+0x70>
   11890:	b	11824 <vetor_ordena@@Base+0x3c>
   11894:	mvn	r0, #0
   11898:	sub	sp, fp, #28
   1189c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118a0:	mov	r0, #0
   118a4:	sub	sp, fp, #28
   118a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000118ac <novo_str@@Base>:
   118ac:	push	{r4, r5, r6, sl, fp, lr}
   118b0:	add	fp, sp, #16
   118b4:	mov	r6, r0
   118b8:	mov	r0, #12
   118bc:	bl	10d44 <malloc@plt>
   118c0:	mov	r5, #0
   118c4:	cmp	r0, #0
   118c8:	beq	11904 <novo_str@@Base+0x58>
   118cc:	mov	r4, r0
   118d0:	mov	r0, r6
   118d4:	bl	10d74 <strlen@plt>
   118d8:	add	r0, r0, #1
   118dc:	bl	10d44 <malloc@plt>
   118e0:	cmp	r0, #0
   118e4:	str	r0, [r4]
   118e8:	beq	1190c <novo_str@@Base+0x60>
   118ec:	mov	r1, r6
   118f0:	bl	10d2c <strcpy@plt>
   118f4:	mov	r0, #0
   118f8:	mov	r5, r4
   118fc:	str	r0, [r4, #4]
   11900:	str	r0, [r4, #8]
   11904:	mov	r0, r5
   11908:	pop	{r4, r5, r6, sl, fp, pc}
   1190c:	mov	r0, r4
   11910:	bl	10d08 <free@plt>
   11914:	mov	r0, r5
   11918:	pop	{r4, r5, r6, sl, fp, pc}

0001191c <lista_nova@@Base>:
   1191c:	push	{fp, lr}
   11920:	mov	fp, sp
   11924:	mov	r0, #12
   11928:	bl	10d44 <malloc@plt>
   1192c:	cmp	r0, #0
   11930:	moveq	r0, #0
   11934:	movne	r1, #0
   11938:	strne	r1, [r0]
   1193c:	strne	r1, [r0, #4]
   11940:	strne	r1, [r0, #8]
   11944:	pop	{fp, pc}

00011948 <lista_apaga@@Base>:
   11948:	cmp	r0, #0
   1194c:	bxeq	lr
   11950:	push	{r4, r5, fp, lr}
   11954:	add	fp, sp, #8
   11958:	mov	r4, r0
   1195c:	ldr	r5, [r4]
   11960:	cmp	r5, #0
   11964:	beq	11984 <lista_apaga@@Base+0x3c>
   11968:	ldr	r0, [r5, #4]
   1196c:	str	r0, [r4]
   11970:	ldr	r0, [r5]
   11974:	bl	10d08 <free@plt>
   11978:	mov	r0, r5
   1197c:	bl	10d08 <free@plt>
   11980:	b	1195c <lista_apaga@@Base+0x14>
   11984:	mov	r0, r4
   11988:	pop	{r4, r5, fp, lr}
   1198c:	b	10d08 <free@plt>

00011990 <lista_tamanho@@Base>:
   11990:	cmp	r0, #0
   11994:	ldrne	r0, [r0, #8]
   11998:	mvneq	r0, #0
   1199c:	bx	lr

000119a0 <lista_inicio@@Base>:
   119a0:	cmp	r0, #0
   119a4:	ldrne	r0, [r0]
   119a8:	moveq	r0, #0
   119ac:	bx	lr

000119b0 <lista_fim@@Base>:
   119b0:	cmp	r0, #0
   119b4:	ldrne	r0, [r0, #4]
   119b8:	moveq	r0, #0
   119bc:	bx	lr

000119c0 <lista_insere@@Base>:
   119c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   119c4:	add	fp, sp, #24
   119c8:	cmp	r0, #0
   119cc:	mov	r7, #0
   119d0:	movne	r6, r1
   119d4:	cmpne	r1, #0
   119d8:	bne	119e4 <lista_insere@@Base+0x24>
   119dc:	mov	r0, r7
   119e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119e4:	mov	r5, r0
   119e8:	mov	r0, #12
   119ec:	mov	r8, r2
   119f0:	bl	10d44 <malloc@plt>
   119f4:	cmp	r0, #0
   119f8:	beq	119dc <lista_insere@@Base+0x1c>
   119fc:	mov	r4, r0
   11a00:	mov	r0, r6
   11a04:	bl	10d74 <strlen@plt>
   11a08:	add	r0, r0, #1
   11a0c:	bl	10d44 <malloc@plt>
   11a10:	cmp	r0, #0
   11a14:	str	r0, [r4]
   11a18:	beq	11a68 <lista_insere@@Base+0xa8>
   11a1c:	mov	r1, r6
   11a20:	bl	10d2c <strcpy@plt>
   11a24:	mov	r0, #0
   11a28:	cmp	r8, #0
   11a2c:	str	r0, [r4, #4]
   11a30:	str	r0, [r4, #8]
   11a34:	ldr	r1, [r5, #8]
   11a38:	ldr	r0, [r5]
   11a3c:	add	r1, r1, #1
   11a40:	str	r1, [r5, #8]
   11a44:	beq	11a78 <lista_insere@@Base+0xb8>
   11a48:	cmp	r0, r8
   11a4c:	beq	11a90 <lista_insere@@Base+0xd0>
   11a50:	ldr	r0, [r8, #8]
   11a54:	str	r8, [r4, #4]
   11a58:	str	r0, [r4, #8]
   11a5c:	str	r4, [r0, #4]
   11a60:	str	r4, [r8, #8]
   11a64:	b	11aa8 <lista_insere@@Base+0xe8>
   11a68:	mov	r0, r4
   11a6c:	bl	10d08 <free@plt>
   11a70:	mov	r0, r7
   11a74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a78:	cmp	r0, #0
   11a7c:	beq	11aa0 <lista_insere@@Base+0xe0>
   11a80:	ldr	r0, [r5, #4]
   11a84:	str	r0, [r4, #8]
   11a88:	str	r4, [r0, #4]
   11a8c:	b	11aa4 <lista_insere@@Base+0xe4>
   11a90:	str	r8, [r4, #4]
   11a94:	str	r4, [r8, #8]
   11a98:	str	r4, [r5]
   11a9c:	b	11aa8 <lista_insere@@Base+0xe8>
   11aa0:	str	r4, [r5]
   11aa4:	str	r4, [r5, #4]
   11aa8:	mov	r7, r4
   11aac:	mov	r0, r7
   11ab0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011ab4 <lista_remove@@Base>:
   11ab4:	push	{r4, r5, fp, lr}
   11ab8:	add	fp, sp, #8
   11abc:	cmp	r0, #0
   11ac0:	mov	r4, #0
   11ac4:	movne	r5, r1
   11ac8:	cmpne	r1, #0
   11acc:	bne	11ad8 <lista_remove@@Base+0x24>
   11ad0:	mov	r0, r4
   11ad4:	pop	{r4, r5, fp, pc}
   11ad8:	ldr	r1, [r0, #8]
   11adc:	sub	r1, r1, #1
   11ae0:	str	r1, [r0, #8]
   11ae4:	ldr	r1, [r5, #8]
   11ae8:	ldr	r4, [r5, #4]
   11aec:	cmp	r1, #0
   11af0:	beq	11b00 <lista_remove@@Base+0x4c>
   11af4:	str	r4, [r1, #4]
   11af8:	ldr	r4, [r5, #4]
   11afc:	b	11b04 <lista_remove@@Base+0x50>
   11b00:	str	r4, [r0]
   11b04:	cmp	r4, #0
   11b08:	add	r2, r4, #8
   11b0c:	addeq	r2, r0, #4
   11b10:	str	r1, [r2]
   11b14:	ldr	r0, [r5]
   11b18:	bl	10d08 <free@plt>
   11b1c:	mov	r0, r5
   11b20:	bl	10d08 <free@plt>
   11b24:	mov	r0, r4
   11b28:	pop	{r4, r5, fp, pc}

00011b2c <lista_pesquisa@@Base>:
   11b2c:	push	{r4, r5, r6, sl, fp, lr}
   11b30:	add	fp, sp, #16
   11b34:	cmp	r0, #0
   11b38:	mov	r4, #0
   11b3c:	movne	r5, r1
   11b40:	cmpne	r1, #0
   11b44:	bne	11b50 <lista_pesquisa@@Base+0x24>
   11b48:	mov	r0, r4
   11b4c:	pop	{r4, r5, r6, sl, fp, pc}
   11b50:	cmp	r2, #1
   11b54:	bhi	11b48 <lista_pesquisa@@Base+0x1c>
   11b58:	cmp	r2, #0
   11b5c:	beq	11b90 <lista_pesquisa@@Base+0x64>
   11b60:	ldr	r6, [r0, #4]
   11b64:	cmp	r6, #0
   11b68:	beq	11b48 <lista_pesquisa@@Base+0x1c>
   11b6c:	ldr	r0, [r6]
   11b70:	mov	r1, r5
   11b74:	bl	10cd8 <strcmp@plt>
   11b78:	cmp	r0, #0
   11b7c:	beq	11bc0 <lista_pesquisa@@Base+0x94>
   11b80:	ldr	r6, [r6, #8]
   11b84:	cmp	r6, #0
   11b88:	bne	11b6c <lista_pesquisa@@Base+0x40>
   11b8c:	b	11b48 <lista_pesquisa@@Base+0x1c>
   11b90:	ldr	r6, [r0]
   11b94:	cmp	r6, #0
   11b98:	beq	11b48 <lista_pesquisa@@Base+0x1c>
   11b9c:	ldr	r0, [r6]
   11ba0:	mov	r1, r5
   11ba4:	bl	10cd8 <strcmp@plt>
   11ba8:	cmp	r0, #0
   11bac:	beq	11bc0 <lista_pesquisa@@Base+0x94>
   11bb0:	ldr	r6, [r6, #4]
   11bb4:	cmp	r6, #0
   11bb8:	bne	11b9c <lista_pesquisa@@Base+0x70>
   11bbc:	b	11b48 <lista_pesquisa@@Base+0x1c>
   11bc0:	mov	r4, r6
   11bc4:	mov	r0, r4
   11bc8:	pop	{r4, r5, r6, sl, fp, pc}

00011bcc <lista_ordena@@Base>:
   11bcc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11bd0:	add	fp, sp, #24
   11bd4:	cmp	r0, #0
   11bd8:	beq	11c58 <lista_ordena@@Base+0x8c>
   11bdc:	ldr	r0, [r0]
   11be0:	mov	r8, #0
   11be4:	mov	r5, r0
   11be8:	ldr	r4, [r5, #4]!
   11bec:	cmp	r4, #0
   11bf0:	bne	11c08 <lista_ordena@@Base+0x3c>
   11bf4:	b	11c5c <lista_ordena@@Base+0x90>
   11bf8:	mov	r5, r0
   11bfc:	ldr	r4, [r5, #4]!
   11c00:	cmp	r4, #0
   11c04:	beq	11c5c <lista_ordena@@Base+0x90>
   11c08:	mov	r9, r0
   11c0c:	mov	r7, r0
   11c10:	mov	r6, r4
   11c14:	ldr	r1, [r7]
   11c18:	ldr	r0, [r6]
   11c1c:	bl	10cd8 <strcmp@plt>
   11c20:	cmp	r0, #0
   11c24:	movmi	r7, r6
   11c28:	ldr	r6, [r6, #4]
   11c2c:	cmp	r6, #0
   11c30:	bne	11c14 <lista_ordena@@Base+0x48>
   11c34:	cmp	r7, r9
   11c38:	mov	r0, r4
   11c3c:	beq	11bf8 <lista_ordena@@Base+0x2c>
   11c40:	ldr	r0, [r9]
   11c44:	ldr	r1, [r7]
   11c48:	str	r1, [r9]
   11c4c:	str	r0, [r7]
   11c50:	ldr	r0, [r5]
   11c54:	b	11bf8 <lista_ordena@@Base+0x2c>
   11c58:	mvn	r8, #0
   11c5c:	mov	r0, r8
   11c60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011c64 <lista_inverte@@Base>:
   11c64:	push	{fp, lr}
   11c68:	mov	fp, sp
   11c6c:	cmp	r0, #0
   11c70:	beq	11ccc <lista_inverte@@Base+0x68>
   11c74:	ldr	r2, [r0, #8]
   11c78:	mov	r1, #0
   11c7c:	cmp	r2, #2
   11c80:	blt	11d00 <lista_inverte@@Base+0x9c>
   11c84:	sub	r1, r2, #2
   11c88:	cmp	r1, #0
   11c8c:	ble	11cd8 <lista_inverte@@Base+0x74>
   11c90:	ldr	ip, [r0]
   11c94:	ldr	r3, [ip, #4]
   11c98:	mov	r2, r3
   11c9c:	ldr	r3, [r3, #4]
   11ca0:	subs	r1, r1, #1
   11ca4:	ldr	lr, [r2, #8]
   11ca8:	str	r3, [lr, #4]
   11cac:	ldr	r3, [r2, #4]
   11cb0:	str	lr, [r3, #8]
   11cb4:	str	ip, [r2, #4]
   11cb8:	str	r2, [ip, #8]
   11cbc:	mov	ip, r2
   11cc0:	bne	11c98 <lista_inverte@@Base+0x34>
   11cc4:	str	r2, [r0]
   11cc8:	b	11cdc <lista_inverte@@Base+0x78>
   11ccc:	mvn	r1, #0
   11cd0:	mov	r0, r1
   11cd4:	pop	{fp, pc}
   11cd8:	ldr	r2, [r0]
   11cdc:	ldr	r3, [r0, #4]
   11ce0:	mov	r1, #0
   11ce4:	ldr	ip, [r3, #8]
   11ce8:	str	ip, [r0, #4]
   11cec:	str	r1, [ip, #4]
   11cf0:	str	r2, [r3, #4]
   11cf4:	str	r1, [r3, #8]
   11cf8:	str	r3, [r2, #8]
   11cfc:	str	r3, [r0]
   11d00:	mov	r0, r1
   11d04:	pop	{fp, pc}

00011d08 <__libc_csu_init@@Base>:
   11d08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d0c:	mov	r7, r0
   11d10:	ldr	r6, [pc, #72]	; 11d60 <__libc_csu_init@@Base+0x58>
   11d14:	ldr	r5, [pc, #72]	; 11d64 <__libc_csu_init@@Base+0x5c>
   11d18:	add	r6, pc, r6
   11d1c:	add	r5, pc, r5
   11d20:	sub	r6, r6, r5
   11d24:	mov	r8, r1
   11d28:	mov	r9, r2
   11d2c:	bl	10cac <calloc@plt-0x20>
   11d30:	asrs	r6, r6, #2
   11d34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d38:	mov	r4, #0
   11d3c:	add	r4, r4, #1
   11d40:	ldr	r3, [r5], #4
   11d44:	mov	r2, r9
   11d48:	mov	r1, r8
   11d4c:	mov	r0, r7
   11d50:	blx	r3
   11d54:	cmp	r6, r4
   11d58:	bne	11d3c <__libc_csu_init@@Base+0x34>
   11d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d60:	andeq	r0, r1, ip, ror #3
   11d64:	andeq	r0, r1, r4, ror #3

00011d68 <__libc_csu_fini@@Base>:
   11d68:	bx	lr

Disassembly of section .fini:

00011d6c <.fini>:
   11d6c:	push	{r3, lr}
   11d70:	pop	{r3, pc}
