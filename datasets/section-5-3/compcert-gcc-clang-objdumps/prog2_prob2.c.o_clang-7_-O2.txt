
../compcert-repos/prog2/CMakeFiles/MT1E1-1.2.dir/Extras/Miniteste1-Exemplo1/2/prob2.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <analisarFicheiro>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #60	; 0x3c
   c:	mov	r6, r0
  10:	mov	r0, #104	; 0x68
  14:	str	r1, [sp, #4]
  18:	bl	0 <malloc>
  1c:	movw	r1, #0
  20:	mov	r7, r0
  24:	add	r2, sp, #10
  28:	mov	r0, r6
  2c:	movt	r1, #0
  30:	bl	0 <__isoc99_fscanf>
  34:	mov	r8, #0
  38:	cmn	r0, #1
  3c:	beq	e8 <analisarFicheiro+0xe8>
  40:	movw	r9, #0
  44:	add	r4, sp, #10
  48:	movt	r9, #0
  4c:	cmp	r8, #0
  50:	blt	d0 <analisarFicheiro+0xd0>
  54:	mov	sl, #0
  58:	mov	r5, r7
  5c:	mov	r0, r4
  60:	mov	r1, r5
  64:	bl	0 <strcmp>
  68:	cmp	r0, #0
  6c:	beq	90 <analisarFicheiro+0x90>
  70:	cmp	r8, sl
  74:	beq	9c <analisarFicheiro+0x9c>
  78:	add	r0, sl, #1
  7c:	cmp	sl, r8
  80:	add	r5, r5, #104	; 0x68
  84:	mov	sl, r0
  88:	blt	5c <analisarFicheiro+0x5c>
  8c:	b	d0 <analisarFicheiro+0xd0>
  90:	ldr	r0, [r5, #100]	; 0x64
  94:	add	r0, r0, #1
  98:	b	cc <analisarFicheiro+0xcc>
  9c:	mov	r5, #104	; 0x68
  a0:	mul	r0, r8, r5
  a4:	add	r1, r0, #104	; 0x68
  a8:	mov	r0, r7
  ac:	bl	0 <realloc>
  b0:	mla	r5, r8, r5, r0
  b4:	mov	r7, r0
  b8:	mov	r1, r4
  bc:	mov	r0, r5
  c0:	bl	0 <strcpy>
  c4:	mov	r0, #1
  c8:	add	r8, r8, #1
  cc:	str	r0, [r5, #100]	; 0x64
  d0:	mov	r0, r6
  d4:	mov	r1, r9
  d8:	mov	r2, r4
  dc:	bl	0 <__isoc99_fscanf>
  e0:	cmn	r0, #1
  e4:	bne	4c <analisarFicheiro+0x4c>
  e8:	ldr	r0, [sp, #4]
  ec:	str	r8, [r0]
  f0:	mov	r0, r7
  f4:	sub	sp, fp, #28
  f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000000fc <gerarRelatorio>:
  fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 100:	add	fp, sp, #24
 104:	sub	sp, sp, #8
 108:	mov	r6, r0
 10c:	movw	r0, #0
 110:	mov	r4, r2
 114:	mov	r5, r1
 118:	mov	r1, #53	; 0x35
 11c:	mov	r2, #1
 120:	movt	r0, #0
 124:	mov	r3, r6
 128:	bl	0 <fwrite>
 12c:	cmp	r4, #1
 130:	blt	16c <gerarRelatorio+0x70>
 134:	movw	r8, #0
 138:	mov	r7, #0
 13c:	movt	r8, #0
 140:	ldr	r0, [r5, #100]	; 0x64
 144:	add	r7, r7, #1
 148:	mov	r1, r8
 14c:	mov	r3, r5
 150:	mov	r2, r7
 154:	str	r0, [sp]
 158:	mov	r0, r6
 15c:	bl	0 <fprintf>
 160:	add	r5, r5, #104	; 0x68
 164:	cmp	r4, r7
 168:	bne	140 <gerarRelatorio+0x44>
 16c:	sub	sp, fp, #24
 170:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000174 <main>:
 174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 178:	add	fp, sp, #28
 17c:	sub	sp, sp, #108	; 0x6c
 180:	movw	r0, #0
 184:	movt	r0, #0
 188:	bl	0 <printf>
 18c:	movw	r4, #0
 190:	add	r5, sp, #58	; 0x3a
 194:	movt	r4, #0
 198:	mov	r1, r5
 19c:	mov	r0, r4
 1a0:	bl	0 <__isoc99_scanf>
 1a4:	movw	r0, #0
 1a8:	movt	r0, #0
 1ac:	bl	0 <printf>
 1b0:	add	r1, sp, #8
 1b4:	mov	r0, r4
 1b8:	bl	0 <__isoc99_scanf>
 1bc:	movw	r1, #0
 1c0:	mov	r0, r5
 1c4:	movt	r1, #0
 1c8:	bl	0 <fopen>
 1cc:	mov	r6, #1
 1d0:	cmp	r0, #0
 1d4:	beq	284 <main+0x110>
 1d8:	movw	r1, #0
 1dc:	mov	r9, r0
 1e0:	add	r0, sp, #8
 1e4:	movt	r1, #0
 1e8:	bl	0 <fopen>
 1ec:	cmp	r0, #0
 1f0:	beq	284 <main+0x110>
 1f4:	mov	r5, r0
 1f8:	add	r1, sp, #4
 1fc:	mov	r0, r9
 200:	bl	0 <analisarFicheiro>
 204:	ldr	r6, [sp, #4]
 208:	mov	r8, r0
 20c:	movw	r0, #0
 210:	mov	r1, #53	; 0x35
 214:	mov	r2, #1
 218:	mov	r3, r5
 21c:	movt	r0, #0
 220:	bl	0 <fwrite_unlocked>
 224:	cmp	r6, #1
 228:	blt	268 <main+0xf4>
 22c:	movw	sl, #0
 230:	mov	r7, #0
 234:	mov	r4, r8
 238:	movt	sl, #0
 23c:	ldr	r0, [r4, #100]	; 0x64
 240:	add	r7, r7, #1
 244:	mov	r1, sl
 248:	mov	r3, r4
 24c:	mov	r2, r7
 250:	str	r0, [sp]
 254:	mov	r0, r5
 258:	bl	0 <fprintf>
 25c:	add	r4, r4, #104	; 0x68
 260:	cmp	r6, r7
 264:	bne	23c <main+0xc8>
 268:	mov	r0, r9
 26c:	bl	0 <fclose>
 270:	mov	r0, r5
 274:	bl	0 <fclose>
 278:	mov	r0, r8
 27c:	bl	0 <free>
 280:	mov	r6, #0
 284:	mov	r0, r6
 288:	sub	sp, fp, #28
 28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
