
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	ldr	r3, [pc, #64]	; 54 <print_version+0x54>
      10:	ldr	r3, [pc, r3]
      14:	mrc	15, 0, r2, cr13, cr0, {3}
      18:	ldr	r3, [r2, r3]
      1c:	mov	r1, r3
      20:	movw	r0, #0
      24:	movt	r0, #0
      28:	bl	0 <printf>
      2c:	movw	r0, #0
      30:	movt	r0, #0
      34:	bl	0 <puts>
      38:	mov	r0, #10
      3c:	bl	0 <putchar>
      40:	nop	{0}
      44:	sub	sp, fp, #4
      48:	ldr	fp, [sp]
      4c:	add	sp, sp, #4
      50:	pop	{pc}		; (ldr pc, [sp], #4)
      54:	.word	0x0000003c

00000058 <print_help>:
      58:	str	fp, [sp, #-8]!
      5c:	str	lr, [sp, #4]
      60:	add	fp, sp, #4
      64:	movw	r0, #0
      68:	movt	r0, #0
      6c:	bl	0 <puts>
      70:	movw	r0, #0
      74:	movt	r0, #0
      78:	bl	0 <puts>
      7c:	movw	r0, #0
      80:	movt	r0, #0
      84:	bl	0 <puts>
      88:	mov	r0, #10
      8c:	bl	0 <putchar>
      90:	movw	r0, #0
      94:	movt	r0, #0
      98:	bl	0 <puts>
      9c:	movw	r0, #0
      a0:	movt	r0, #0
      a4:	bl	0 <puts>
      a8:	mov	r0, #10
      ac:	bl	0 <putchar>
      b0:	movw	r0, #0
      b4:	movt	r0, #0
      b8:	bl	0 <puts>
      bc:	movw	r0, #0
      c0:	movt	r0, #0
      c4:	bl	0 <puts>
      c8:	movw	r0, #0
      cc:	movt	r0, #0
      d0:	bl	0 <puts>
      d4:	movw	r0, #0
      d8:	movt	r0, #0
      dc:	bl	0 <puts>
      e0:	movw	r0, #0
      e4:	movt	r0, #0
      e8:	bl	0 <puts>
      ec:	movw	r0, #0
      f0:	movt	r0, #0
      f4:	bl	0 <puts>
      f8:	movw	r0, #0
      fc:	movt	r0, #0
     100:	bl	0 <puts>
     104:	movw	r0, #0
     108:	movt	r0, #0
     10c:	bl	0 <puts>
     110:	movw	r0, #0
     114:	movt	r0, #0
     118:	bl	0 <puts>
     11c:	movw	r0, #0
     120:	movt	r0, #0
     124:	bl	0 <puts>
     128:	movw	r0, #0
     12c:	movt	r0, #0
     130:	bl	0 <puts>
     134:	movw	r0, #0
     138:	movt	r0, #0
     13c:	bl	0 <puts>
     140:	movw	r0, #0
     144:	movt	r0, #0
     148:	bl	0 <puts>
     14c:	movw	r0, #0
     150:	movt	r0, #0
     154:	bl	0 <puts>
     158:	movw	r0, #0
     15c:	movt	r0, #0
     160:	bl	0 <puts>
     164:	movw	r0, #0
     168:	movt	r0, #0
     16c:	bl	0 <puts>
     170:	movw	r0, #0
     174:	movt	r0, #0
     178:	bl	0 <puts>
     17c:	movw	r0, #0
     180:	movt	r0, #0
     184:	bl	0 <puts>
     188:	movw	r0, #0
     18c:	movt	r0, #0
     190:	bl	0 <puts>
     194:	movw	r0, #0
     198:	movt	r0, #0
     19c:	bl	0 <puts>
     1a0:	movw	r0, #0
     1a4:	movt	r0, #0
     1a8:	bl	0 <puts>
     1ac:	movw	r0, #0
     1b0:	movt	r0, #0
     1b4:	bl	0 <puts>
     1b8:	movw	r0, #0
     1bc:	movt	r0, #0
     1c0:	bl	0 <puts>
     1c4:	movw	r0, #0
     1c8:	movt	r0, #0
     1cc:	bl	0 <puts>
     1d0:	movw	r0, #0
     1d4:	movt	r0, #0
     1d8:	bl	0 <puts>
     1dc:	movw	r0, #0
     1e0:	movt	r0, #0
     1e4:	bl	0 <puts>
     1e8:	movw	r0, #0
     1ec:	movt	r0, #0
     1f0:	bl	0 <puts>
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	bl	0 <puts>
     200:	movw	r0, #0
     204:	movt	r0, #0
     208:	bl	0 <puts>
     20c:	mov	r0, #10
     210:	bl	0 <putchar>
     214:	movw	r0, #0
     218:	movt	r0, #0
     21c:	bl	0 <puts>
     220:	movw	r0, #0
     224:	movt	r0, #0
     228:	bl	0 <puts>
     22c:	movw	r0, #0
     230:	movt	r0, #0
     234:	bl	0 <puts>
     238:	movw	r0, #0
     23c:	movt	r0, #0
     240:	bl	0 <puts>
     244:	movw	r0, #0
     248:	movt	r0, #0
     24c:	bl	0 <puts>
     250:	movw	r0, #0
     254:	movt	r0, #0
     258:	bl	0 <puts>
     25c:	movw	r0, #0
     260:	movt	r0, #0
     264:	bl	0 <puts>
     268:	movw	r0, #0
     26c:	movt	r0, #0
     270:	bl	0 <puts>
     274:	mov	r0, #10
     278:	bl	0 <putchar>
     27c:	movw	r0, #0
     280:	movt	r0, #0
     284:	bl	0 <puts>
     288:	movw	r0, #0
     28c:	movt	r0, #0
     290:	bl	0 <puts>
     294:	movw	r0, #0
     298:	movt	r0, #0
     29c:	bl	0 <puts>
     2a0:	movw	r0, #0
     2a4:	movt	r0, #0
     2a8:	bl	0 <puts>
     2ac:	movw	r0, #0
     2b0:	movt	r0, #0
     2b4:	bl	0 <puts>
     2b8:	movw	r0, #0
     2bc:	movt	r0, #0
     2c0:	bl	0 <puts>
     2c4:	movw	r0, #0
     2c8:	movt	r0, #0
     2cc:	bl	0 <puts>
     2d0:	mov	r0, #10
     2d4:	bl	0 <putchar>
     2d8:	movw	r0, #0
     2dc:	movt	r0, #0
     2e0:	bl	0 <puts>
     2e4:	movw	r0, #0
     2e8:	movt	r0, #0
     2ec:	bl	0 <puts>
     2f0:	movw	r0, #0
     2f4:	movt	r0, #0
     2f8:	bl	0 <puts>
     2fc:	movw	r0, #0
     300:	movt	r0, #0
     304:	bl	0 <puts>
     308:	mov	r0, #10
     30c:	bl	0 <putchar>
     310:	movw	r0, #0
     314:	movt	r0, #0
     318:	bl	0 <puts>
     31c:	movw	r0, #0
     320:	movt	r0, #0
     324:	bl	0 <puts>
     328:	mov	r0, #10
     32c:	bl	0 <putchar>
     330:	movw	r0, #0
     334:	movt	r0, #0
     338:	bl	0 <puts>
     33c:	movw	r0, #0
     340:	movt	r0, #0
     344:	bl	0 <puts>
     348:	mov	r0, #10
     34c:	bl	0 <putchar>
     350:	movw	r0, #0
     354:	movt	r0, #0
     358:	bl	0 <puts>
     35c:	movw	r0, #0
     360:	movt	r0, #0
     364:	bl	0 <puts>
     368:	movw	r0, #0
     36c:	movt	r0, #0
     370:	bl	0 <puts>
     374:	movw	r0, #0
     378:	movt	r0, #0
     37c:	bl	0 <puts>
     380:	movw	r0, #0
     384:	movt	r0, #0
     388:	bl	0 <puts>
     38c:	movw	r0, #0
     390:	movt	r0, #0
     394:	bl	0 <puts>
     398:	movw	r0, #0
     39c:	movt	r0, #0
     3a0:	bl	0 <puts>
     3a4:	mov	r0, #10
     3a8:	bl	0 <putchar>
     3ac:	nop	{0}
     3b0:	sub	sp, fp, #4
     3b4:	ldr	fp, [sp]
     3b8:	add	sp, sp, #4
     3bc:	pop	{pc}		; (ldr pc, [sp], #4)

000003c0 <main>:
     3c0:	str	r4, [sp, #-12]!
     3c4:	str	fp, [sp, #4]
     3c8:	str	lr, [sp, #8]
     3cc:	add	fp, sp, #8
     3d0:	sub	sp, sp, #60	; 0x3c
     3d4:	str	r0, [fp, #-64]	; 0xffffffc0
     3d8:	str	r1, [fp, #-68]	; 0xffffffbc
     3dc:	mov	r3, #1
     3e0:	str	r3, [fp, #-16]
     3e4:	movw	r3, #0
     3e8:	movt	r3, #0
     3ec:	movw	r2, #0
     3f0:	movt	r2, #0
     3f4:	str	r2, [r3]
     3f8:	movw	r3, #0
     3fc:	movt	r3, #0
     400:	mov	r2, #0
     404:	str	r2, [r3]
     408:	movw	r3, #0
     40c:	movt	r3, #0
     410:	mov	r2, #0
     414:	str	r2, [r3]
     418:	movw	r3, #0
     41c:	movt	r3, #0
     420:	mov	r2, #0
     424:	str	r2, [r3]
     428:	movw	r3, #0
     42c:	movt	r3, #0
     430:	mov	r2, #0
     434:	str	r2, [r3]
     438:	movw	r3, #0
     43c:	movt	r3, #0
     440:	mov	r2, #0
     444:	str	r2, [r3]
     448:	movw	r3, #0
     44c:	movt	r3, #0
     450:	mov	r2, #0
     454:	str	r2, [r3]
     458:	movw	r3, #0
     45c:	movt	r3, #0
     460:	mov	r2, #0
     464:	str	r2, [r3]
     468:	movw	r3, #0
     46c:	movt	r3, #0
     470:	mov	r2, #0
     474:	str	r2, [r3]
     478:	movw	r3, #0
     47c:	movt	r3, #0
     480:	mov	r2, #0
     484:	str	r2, [r3]
     488:	movw	r3, #0
     48c:	movt	r3, #0
     490:	mov	r2, #1
     494:	str	r2, [r3]
     498:	ldr	r3, [fp, #-64]	; 0xffffffc0
     49c:	cmp	r3, #1
     4a0:	ble	57c <main+0x1bc>
     4a4:	ldr	r3, [fp, #-16]
     4a8:	lsl	r3, r3, #2
     4ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
     4b0:	add	r3, r2, r3
     4b4:	ldr	r3, [r3]
     4b8:	movw	r1, #0
     4bc:	movt	r1, #0
     4c0:	mov	r0, r3
     4c4:	bl	0 <strcmp>
     4c8:	mov	r3, r0
     4cc:	cmp	r3, #0
     4d0:	beq	504 <main+0x144>
     4d4:	ldr	r3, [fp, #-16]
     4d8:	lsl	r3, r3, #2
     4dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     4e0:	add	r3, r2, r3
     4e4:	ldr	r3, [r3]
     4e8:	movw	r1, #0
     4ec:	movt	r1, #0
     4f0:	mov	r0, r3
     4f4:	bl	0 <strcmp>
     4f8:	mov	r3, r0
     4fc:	cmp	r3, #0
     500:	bne	510 <main+0x150>
     504:	bl	58 <print_help>
     508:	mov	r0, #0
     50c:	bl	0 <exit>
     510:	ldr	r3, [fp, #-16]
     514:	lsl	r3, r3, #2
     518:	ldr	r2, [fp, #-68]	; 0xffffffbc
     51c:	add	r3, r2, r3
     520:	ldr	r3, [r3]
     524:	movw	r1, #0
     528:	movt	r1, #0
     52c:	mov	r0, r3
     530:	bl	0 <strcmp>
     534:	mov	r3, r0
     538:	cmp	r3, #0
     53c:	beq	570 <main+0x1b0>
     540:	ldr	r3, [fp, #-16]
     544:	lsl	r3, r3, #2
     548:	ldr	r2, [fp, #-68]	; 0xffffffbc
     54c:	add	r3, r2, r3
     550:	ldr	r3, [r3]
     554:	movw	r1, #0
     558:	movt	r1, #0
     55c:	mov	r0, r3
     560:	bl	0 <strcmp>
     564:	mov	r3, r0
     568:	cmp	r3, #0
     56c:	bne	57c <main+0x1bc>
     570:	bl	0 <print_version>
     574:	mov	r0, #0
     578:	bl	0 <exit>
     57c:	ldr	r3, [fp, #-16]
     580:	add	r3, r3, #1
     584:	ldr	r2, [fp, #-64]	; 0xffffffc0
     588:	cmp	r2, r3
     58c:	ble	5f0 <main+0x230>
     590:	ldr	r3, [fp, #-16]
     594:	lsl	r3, r3, #2
     598:	ldr	r2, [fp, #-68]	; 0xffffffbc
     59c:	add	r3, r2, r3
     5a0:	ldr	r3, [r3]
     5a4:	movw	r1, #0
     5a8:	movt	r1, #0
     5ac:	mov	r0, r3
     5b0:	bl	0 <strcmp>
     5b4:	mov	r3, r0
     5b8:	cmp	r3, #0
     5bc:	bne	5f0 <main+0x230>
     5c0:	ldr	r3, [fp, #-16]
     5c4:	add	r3, r3, #1
     5c8:	lsl	r3, r3, #2
     5cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     5d0:	add	r3, r2, r3
     5d4:	ldr	r3, [r3]
     5d8:	mov	r0, r3
     5dc:	bl	0 <coda_set_definition_path>
     5e0:	ldr	r3, [fp, #-16]
     5e4:	add	r3, r3, #2
     5e8:	str	r3, [fp, #-16]
     5ec:	b	664 <main+0x2a4>
     5f0:	movw	r3, #0
     5f4:	movt	r3, #0
     5f8:	str	r3, [fp, #-36]	; 0xffffffdc
     5fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     600:	ldr	r3, [r3]
     604:	ldr	r2, [fp, #-36]	; 0xffffffdc
     608:	mov	r1, #0
     60c:	mov	r0, r3
     610:	bl	0 <coda_set_definition_path_conditional>
     614:	mov	r3, r0
     618:	cmp	r3, #0
     61c:	beq	664 <main+0x2a4>
     620:	movw	r3, #0
     624:	movt	r3, #0
     628:	ldr	r4, [r3]
     62c:	ldr	r3, [pc, #3300]	; 1318 <main+0xf58>
     630:	ldr	r3, [pc, r3]
     634:	mrc	15, 0, r2, cr13, cr0, {3}
     638:	ldr	r3, [r2, r3]
     63c:	mov	r0, r3
     640:	bl	0 <coda_errno_to_string>
     644:	mov	r3, r0
     648:	mov	r2, r3
     64c:	movw	r1, #0
     650:	movt	r1, #0
     654:	mov	r0, r4
     658:	bl	0 <fprintf>
     65c:	mov	r0, #1
     660:	bl	0 <exit>
     664:	ldr	r3, [pc, #3248]	; 131c <main+0xf5c>
     668:	ldr	r3, [pc, r3]
     66c:	mrc	15, 0, r2, cr13, cr0, {3}
     670:	mov	r1, #1
     674:	str	r1, [r2, r3]
     678:	bl	0 <coda_init>
     67c:	mov	r3, r0
     680:	cmp	r3, #0
     684:	beq	6cc <main+0x30c>
     688:	movw	r3, #0
     68c:	movt	r3, #0
     690:	ldr	r4, [r3]
     694:	ldr	r3, [pc, #3204]	; 1320 <main+0xf60>
     698:	ldr	r3, [pc, r3]
     69c:	mrc	15, 0, r2, cr13, cr0, {3}
     6a0:	ldr	r3, [r2, r3]
     6a4:	mov	r0, r3
     6a8:	bl	0 <coda_errno_to_string>
     6ac:	mov	r3, r0
     6b0:	mov	r2, r3
     6b4:	movw	r1, #0
     6b8:	movt	r1, #0
     6bc:	mov	r0, r4
     6c0:	bl	0 <fprintf>
     6c4:	mov	r0, #1
     6c8:	bl	0 <exit>
     6cc:	ldr	r2, [fp, #-16]
     6d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     6d4:	cmp	r2, r3
     6d8:	bne	6e8 <main+0x328>
     6dc:	bl	0 <coda_done>
     6e0:	mov	r0, #0
     6e4:	bl	0 <exit>
     6e8:	mov	r0, #0
     6ec:	bl	0 <coda_set_option_perform_conversions>
     6f0:	ldr	r3, [fp, #-16]
     6f4:	lsl	r3, r3, #2
     6f8:	ldr	r2, [fp, #-68]	; 0xffffffbc
     6fc:	add	r3, r2, r3
     700:	ldr	r3, [r3]
     704:	movw	r1, #0
     708:	movt	r1, #0
     70c:	mov	r0, r3
     710:	bl	0 <strcmp>
     714:	mov	r3, r0
     718:	cmp	r3, #0
     71c:	bne	78c <main+0x3cc>
     720:	ldr	r3, [fp, #-16]
     724:	add	r3, r3, #1
     728:	str	r3, [fp, #-16]
     72c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     730:	sub	r3, r3, #1
     734:	ldr	r2, [fp, #-16]
     738:	cmp	r2, r3
     73c:	beq	76c <main+0x3ac>
     740:	movw	r3, #0
     744:	movt	r3, #0
     748:	ldr	r3, [r3]
     74c:	mov	r2, #25
     750:	mov	r1, #1
     754:	movw	r0, #0
     758:	movt	r0, #0
     75c:	bl	0 <fwrite>
     760:	bl	58 <print_help>
     764:	mov	r0, #1
     768:	bl	0 <exit>
     76c:	ldr	r3, [fp, #-16]
     770:	lsl	r3, r3, #2
     774:	ldr	r2, [fp, #-68]	; 0xffffffbc
     778:	add	r3, r2, r3
     77c:	ldr	r3, [r3]
     780:	mov	r0, r3
     784:	bl	0 <generate_html>
     788:	b	12f8 <main+0xf38>
     78c:	ldr	r3, [fp, #-16]
     790:	lsl	r3, r3, #2
     794:	ldr	r2, [fp, #-68]	; 0xffffffbc
     798:	add	r3, r2, r3
     79c:	ldr	r3, [r3]
     7a0:	movw	r1, #0
     7a4:	movt	r1, #0
     7a8:	mov	r0, r3
     7ac:	bl	0 <strcmp>
     7b0:	mov	r3, r0
     7b4:	cmp	r3, #0
     7b8:	bne	d78 <main+0x9b8>
     7bc:	mov	r3, #0
     7c0:	str	r3, [fp, #-20]	; 0xffffffec
     7c4:	mov	r3, #0
     7c8:	str	r3, [fp, #-24]	; 0xffffffe8
     7cc:	mvn	r3, #0
     7d0:	str	r3, [fp, #-48]	; 0xffffffd0
     7d4:	ldr	r3, [fp, #-16]
     7d8:	add	r3, r3, #1
     7dc:	str	r3, [fp, #-16]
     7e0:	b	c28 <main+0x868>
     7e4:	ldr	r3, [fp, #-16]
     7e8:	lsl	r3, r3, #2
     7ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
     7f0:	add	r3, r2, r3
     7f4:	ldr	r3, [r3]
     7f8:	movw	r1, #0
     7fc:	movt	r1, #0
     800:	mov	r0, r3
     804:	bl	0 <strcmp>
     808:	mov	r3, r0
     80c:	cmp	r3, #0
     810:	beq	844 <main+0x484>
     814:	ldr	r3, [fp, #-16]
     818:	lsl	r3, r3, #2
     81c:	ldr	r2, [fp, #-68]	; 0xffffffbc
     820:	add	r3, r2, r3
     824:	ldr	r3, [r3]
     828:	movw	r1, #0
     82c:	movt	r1, #0
     830:	mov	r0, r3
     834:	bl	0 <strcmp>
     838:	mov	r3, r0
     83c:	cmp	r3, #0
     840:	bne	858 <main+0x498>
     844:	movw	r3, #0
     848:	movt	r3, #0
     84c:	mov	r2, #1
     850:	str	r2, [r3]
     854:	b	c1c <main+0x85c>
     858:	ldr	r3, [fp, #-16]
     85c:	lsl	r3, r3, #2
     860:	ldr	r2, [fp, #-68]	; 0xffffffbc
     864:	add	r3, r2, r3
     868:	ldr	r3, [r3]
     86c:	movw	r1, #0
     870:	movt	r1, #0
     874:	mov	r0, r3
     878:	bl	0 <strcmp>
     87c:	mov	r3, r0
     880:	cmp	r3, #0
     884:	beq	8b8 <main+0x4f8>
     888:	ldr	r3, [fp, #-16]
     88c:	lsl	r3, r3, #2
     890:	ldr	r2, [fp, #-68]	; 0xffffffbc
     894:	add	r3, r2, r3
     898:	ldr	r3, [r3]
     89c:	movw	r1, #0
     8a0:	movt	r1, #0
     8a4:	mov	r0, r3
     8a8:	bl	0 <strcmp>
     8ac:	mov	r3, r0
     8b0:	cmp	r3, #0
     8b4:	bne	8cc <main+0x50c>
     8b8:	movw	r3, #0
     8bc:	movt	r3, #0
     8c0:	mov	r2, #1
     8c4:	str	r2, [r3]
     8c8:	b	c1c <main+0x85c>
     8cc:	ldr	r3, [fp, #-16]
     8d0:	lsl	r3, r3, #2
     8d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
     8d8:	add	r3, r2, r3
     8dc:	ldr	r3, [r3]
     8e0:	movw	r1, #0
     8e4:	movt	r1, #0
     8e8:	mov	r0, r3
     8ec:	bl	0 <strcmp>
     8f0:	mov	r3, r0
     8f4:	cmp	r3, #0
     8f8:	beq	92c <main+0x56c>
     8fc:	ldr	r3, [fp, #-16]
     900:	lsl	r3, r3, #2
     904:	ldr	r2, [fp, #-68]	; 0xffffffbc
     908:	add	r3, r2, r3
     90c:	ldr	r3, [r3]
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	mov	r0, r3
     91c:	bl	0 <strcmp>
     920:	mov	r3, r0
     924:	cmp	r3, #0
     928:	bne	940 <main+0x580>
     92c:	movw	r3, #0
     930:	movt	r3, #0
     934:	mov	r2, #1
     938:	str	r2, [r3]
     93c:	b	c1c <main+0x85c>
     940:	ldr	r3, [fp, #-16]
     944:	lsl	r3, r3, #2
     948:	ldr	r2, [fp, #-68]	; 0xffffffbc
     94c:	add	r3, r2, r3
     950:	ldr	r3, [r3]
     954:	movw	r1, #0
     958:	movt	r1, #0
     95c:	mov	r0, r3
     960:	bl	0 <strcmp>
     964:	mov	r3, r0
     968:	cmp	r3, #0
     96c:	beq	9a0 <main+0x5e0>
     970:	ldr	r3, [fp, #-16]
     974:	lsl	r3, r3, #2
     978:	ldr	r2, [fp, #-68]	; 0xffffffbc
     97c:	add	r3, r2, r3
     980:	ldr	r3, [r3]
     984:	movw	r1, #0
     988:	movt	r1, #0
     98c:	mov	r0, r3
     990:	bl	0 <strcmp>
     994:	mov	r3, r0
     998:	cmp	r3, #0
     99c:	bne	9b4 <main+0x5f4>
     9a0:	movw	r3, #0
     9a4:	movt	r3, #0
     9a8:	mov	r2, #1
     9ac:	str	r2, [r3]
     9b0:	b	c1c <main+0x85c>
     9b4:	ldr	r3, [fp, #-16]
     9b8:	lsl	r3, r3, #2
     9bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     9c0:	add	r3, r2, r3
     9c4:	ldr	r3, [r3]
     9c8:	movw	r1, #0
     9cc:	movt	r1, #0
     9d0:	mov	r0, r3
     9d4:	bl	0 <strcmp>
     9d8:	mov	r3, r0
     9dc:	cmp	r3, #0
     9e0:	bne	9f8 <main+0x638>
     9e4:	movw	r3, #0
     9e8:	movt	r3, #0
     9ec:	mov	r2, #1
     9f0:	str	r2, [r3]
     9f4:	b	c1c <main+0x85c>
     9f8:	ldr	r3, [fp, #-16]
     9fc:	lsl	r3, r3, #2
     a00:	ldr	r2, [fp, #-68]	; 0xffffffbc
     a04:	add	r3, r2, r3
     a08:	ldr	r3, [r3]
     a0c:	movw	r1, #0
     a10:	movt	r1, #0
     a14:	mov	r0, r3
     a18:	bl	0 <strcmp>
     a1c:	mov	r3, r0
     a20:	cmp	r3, #0
     a24:	bne	a3c <main+0x67c>
     a28:	movw	r3, #0
     a2c:	movt	r3, #0
     a30:	mov	r2, #1
     a34:	str	r2, [r3]
     a38:	b	c1c <main+0x85c>
     a3c:	ldr	r3, [fp, #-16]
     a40:	lsl	r3, r3, #2
     a44:	ldr	r2, [fp, #-68]	; 0xffffffbc
     a48:	add	r3, r2, r3
     a4c:	ldr	r3, [r3]
     a50:	movw	r1, #0
     a54:	movt	r1, #0
     a58:	mov	r0, r3
     a5c:	bl	0 <strcmp>
     a60:	mov	r3, r0
     a64:	cmp	r3, #0
     a68:	bne	a80 <main+0x6c0>
     a6c:	movw	r3, #0
     a70:	movt	r3, #0
     a74:	mov	r2, #1
     a78:	str	r2, [r3]
     a7c:	b	c1c <main+0x85c>
     a80:	ldr	r3, [fp, #-16]
     a84:	lsl	r3, r3, #2
     a88:	ldr	r2, [fp, #-68]	; 0xffffffbc
     a8c:	add	r3, r2, r3
     a90:	ldr	r3, [r3]
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	mov	r0, r3
     aa0:	bl	0 <strcmp>
     aa4:	mov	r3, r0
     aa8:	cmp	r3, #0
     aac:	bne	ac4 <main+0x704>
     ab0:	movw	r3, #0
     ab4:	movt	r3, #0
     ab8:	mov	r2, #1
     abc:	str	r2, [r3]
     ac0:	b	c1c <main+0x85c>
     ac4:	ldr	r3, [fp, #-16]
     ac8:	lsl	r3, r3, #2
     acc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     ad0:	add	r3, r2, r3
     ad4:	ldr	r3, [r3]
     ad8:	movw	r1, #0
     adc:	movt	r1, #0
     ae0:	mov	r0, r3
     ae4:	bl	0 <strcmp>
     ae8:	mov	r3, r0
     aec:	cmp	r3, #0
     af0:	bne	b08 <main+0x748>
     af4:	movw	r3, #0
     af8:	movt	r3, #0
     afc:	mov	r2, #0
     b00:	str	r2, [r3]
     b04:	b	c1c <main+0x85c>
     b08:	ldr	r3, [fp, #-16]
     b0c:	lsl	r3, r3, #2
     b10:	ldr	r2, [fp, #-68]	; 0xffffffbc
     b14:	add	r3, r2, r3
     b18:	ldr	r3, [r3]
     b1c:	movw	r1, #0
     b20:	movt	r1, #0
     b24:	mov	r0, r3
     b28:	bl	0 <strcmp>
     b2c:	mov	r3, r0
     b30:	cmp	r3, #0
     b34:	beq	b68 <main+0x7a8>
     b38:	ldr	r3, [fp, #-16]
     b3c:	lsl	r3, r3, #2
     b40:	ldr	r2, [fp, #-68]	; 0xffffffbc
     b44:	add	r3, r2, r3
     b48:	ldr	r3, [r3]
     b4c:	movw	r1, #0
     b50:	movt	r1, #0
     b54:	mov	r0, r3
     b58:	bl	0 <strcmp>
     b5c:	mov	r3, r0
     b60:	cmp	r3, #0
     b64:	bne	bd0 <main+0x810>
     b68:	ldr	r3, [fp, #-16]
     b6c:	add	r3, r3, #1
     b70:	ldr	r2, [fp, #-64]	; 0xffffffc0
     b74:	cmp	r2, r3
     b78:	ble	bd0 <main+0x810>
     b7c:	ldr	r3, [fp, #-16]
     b80:	add	r3, r3, #1
     b84:	lsl	r3, r3, #2
     b88:	ldr	r2, [fp, #-68]	; 0xffffffbc
     b8c:	add	r3, r2, r3
     b90:	ldr	r3, [r3]
     b94:	ldrb	r3, [r3]
     b98:	cmp	r3, #45	; 0x2d
     b9c:	beq	bd0 <main+0x810>
     ba0:	ldr	r3, [fp, #-16]
     ba4:	add	r3, r3, #1
     ba8:	str	r3, [fp, #-16]
     bac:	ldr	r3, [fp, #-16]
     bb0:	lsl	r3, r3, #2
     bb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
     bb8:	add	r3, r2, r3
     bbc:	ldr	r2, [r3]
     bc0:	movw	r3, #0
     bc4:	movt	r3, #0
     bc8:	str	r2, [r3]
     bcc:	b	c1c <main+0x85c>
     bd0:	ldr	r3, [fp, #-16]
     bd4:	lsl	r3, r3, #2
     bd8:	ldr	r2, [fp, #-68]	; 0xffffffbc
     bdc:	add	r3, r2, r3
     be0:	ldr	r3, [r3]
     be4:	ldrb	r3, [r3]
     be8:	cmp	r3, #45	; 0x2d
     bec:	bne	c3c <main+0x87c>
     bf0:	movw	r3, #0
     bf4:	movt	r3, #0
     bf8:	ldr	r3, [r3]
     bfc:	mov	r2, #25
     c00:	mov	r1, #1
     c04:	movw	r0, #0
     c08:	movt	r0, #0
     c0c:	bl	0 <fwrite>
     c10:	bl	58 <print_help>
     c14:	mov	r0, #1
     c18:	bl	0 <exit>
     c1c:	ldr	r3, [fp, #-16]
     c20:	add	r3, r3, #1
     c24:	str	r3, [fp, #-16]
     c28:	ldr	r2, [fp, #-16]
     c2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     c30:	cmp	r2, r3
     c34:	blt	7e4 <main+0x424>
     c38:	b	c40 <main+0x880>
     c3c:	nop	{0}
     c40:	ldr	r2, [fp, #-16]
     c44:	ldr	r3, [fp, #-64]	; 0xffffffc0
     c48:	cmp	r2, r3
     c4c:	bge	d60 <main+0x9a0>
     c50:	ldr	r3, [fp, #-16]
     c54:	lsl	r3, r3, #2
     c58:	ldr	r2, [fp, #-68]	; 0xffffffbc
     c5c:	add	r3, r2, r3
     c60:	ldr	r3, [r3]
     c64:	str	r3, [fp, #-20]	; 0xffffffec
     c68:	ldr	r3, [fp, #-16]
     c6c:	add	r3, r3, #1
     c70:	str	r3, [fp, #-16]
     c74:	ldr	r2, [fp, #-16]
     c78:	ldr	r3, [fp, #-64]	; 0xffffffc0
     c7c:	cmp	r2, r3
     c80:	bge	d60 <main+0x9a0>
     c84:	ldr	r3, [fp, #-16]
     c88:	lsl	r3, r3, #2
     c8c:	ldr	r2, [fp, #-68]	; 0xffffffbc
     c90:	add	r3, r2, r3
     c94:	ldr	r3, [r3]
     c98:	str	r3, [fp, #-24]	; 0xffffffe8
     c9c:	ldr	r3, [fp, #-16]
     ca0:	add	r3, r3, #1
     ca4:	str	r3, [fp, #-16]
     ca8:	ldr	r2, [fp, #-16]
     cac:	ldr	r3, [fp, #-64]	; 0xffffffc0
     cb0:	cmp	r2, r3
     cb4:	bge	d60 <main+0x9a0>
     cb8:	ldr	r3, [fp, #-16]
     cbc:	lsl	r3, r3, #2
     cc0:	ldr	r2, [fp, #-68]	; 0xffffffbc
     cc4:	add	r3, r2, r3
     cc8:	ldr	r3, [r3]
     ccc:	sub	r2, fp, #48	; 0x30
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	mov	r0, r3
     cdc:	bl	0 <__isoc99_sscanf>
     ce0:	mov	r3, r0
     ce4:	cmp	r3, #1
     ce8:	beq	d18 <main+0x958>
     cec:	movw	r3, #0
     cf0:	movt	r3, #0
     cf4:	ldr	r3, [r3]
     cf8:	mov	r2, #40	; 0x28
     cfc:	mov	r1, #1
     d00:	movw	r0, #0
     d04:	movt	r0, #0
     d08:	bl	0 <fwrite>
     d0c:	bl	58 <print_help>
     d10:	mov	r0, #1
     d14:	bl	0 <exit>
     d18:	ldr	r3, [fp, #-16]
     d1c:	add	r3, r3, #1
     d20:	str	r3, [fp, #-16]
     d24:	ldr	r2, [fp, #-16]
     d28:	ldr	r3, [fp, #-64]	; 0xffffffc0
     d2c:	cmp	r2, r3
     d30:	bge	d60 <main+0x9a0>
     d34:	movw	r3, #0
     d38:	movt	r3, #0
     d3c:	ldr	r3, [r3]
     d40:	mov	r2, #25
     d44:	mov	r1, #1
     d48:	movw	r0, #0
     d4c:	movt	r0, #0
     d50:	bl	0 <fwrite>
     d54:	bl	58 <print_help>
     d58:	mov	r0, #1
     d5c:	bl	0 <exit>
     d60:	ldr	r3, [fp, #-48]	; 0xffffffd0
     d64:	mov	r2, r3
     d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
     d70:	bl	0 <generate_list>
     d74:	b	12f8 <main+0xf38>
     d78:	ldr	r3, [fp, #-16]
     d7c:	lsl	r3, r3, #2
     d80:	ldr	r2, [fp, #-68]	; 0xffffffbc
     d84:	add	r3, r2, r3
     d88:	ldr	r3, [r3]
     d8c:	movw	r1, #0
     d90:	movt	r1, #0
     d94:	mov	r0, r3
     d98:	bl	0 <strcmp>
     d9c:	mov	r3, r0
     da0:	cmp	r3, #0
     da4:	bne	1008 <main+0xc48>
     da8:	mov	r3, #0
     dac:	str	r3, [fp, #-28]	; 0xffffffe4
     db0:	mov	r3, #0
     db4:	str	r3, [fp, #-40]	; 0xffffffd8
     db8:	mov	r3, #0
     dbc:	str	r3, [fp, #-44]	; 0xffffffd4
     dc0:	mvn	r3, #0
     dc4:	str	r3, [fp, #-52]	; 0xffffffcc
     dc8:	ldr	r3, [fp, #-16]
     dcc:	add	r3, r3, #1
     dd0:	str	r3, [fp, #-16]
     dd4:	b	ef0 <main+0xb30>
     dd8:	ldr	r3, [fp, #-16]
     ddc:	lsl	r3, r3, #2
     de0:	ldr	r2, [fp, #-68]	; 0xffffffbc
     de4:	add	r3, r2, r3
     de8:	ldr	r3, [r3]
     dec:	movw	r1, #0
     df0:	movt	r1, #0
     df4:	mov	r0, r3
     df8:	bl	0 <strcmp>
     dfc:	mov	r3, r0
     e00:	cmp	r3, #0
     e04:	beq	e38 <main+0xa78>
     e08:	ldr	r3, [fp, #-16]
     e0c:	lsl	r3, r3, #2
     e10:	ldr	r2, [fp, #-68]	; 0xffffffbc
     e14:	add	r3, r2, r3
     e18:	ldr	r3, [r3]
     e1c:	movw	r1, #0
     e20:	movt	r1, #0
     e24:	mov	r0, r3
     e28:	bl	0 <strcmp>
     e2c:	mov	r3, r0
     e30:	cmp	r3, #0
     e34:	bne	ea4 <main+0xae4>
     e38:	ldr	r3, [fp, #-16]
     e3c:	add	r3, r3, #1
     e40:	ldr	r2, [fp, #-64]	; 0xffffffc0
     e44:	cmp	r2, r3
     e48:	ble	ea4 <main+0xae4>
     e4c:	ldr	r3, [fp, #-16]
     e50:	add	r3, r3, #1
     e54:	lsl	r3, r3, #2
     e58:	ldr	r2, [fp, #-68]	; 0xffffffbc
     e5c:	add	r3, r2, r3
     e60:	ldr	r3, [r3]
     e64:	ldrb	r3, [r3]
     e68:	cmp	r3, #45	; 0x2d
     e6c:	beq	ea4 <main+0xae4>
     e70:	ldr	r3, [fp, #-16]
     e74:	add	r3, r3, #1
     e78:	str	r3, [fp, #-16]
     e7c:	ldr	r3, [fp, #-16]
     e80:	lsl	r3, r3, #2
     e84:	ldr	r2, [fp, #-68]	; 0xffffffbc
     e88:	add	r3, r2, r3
     e8c:	ldr	r3, [r3]
     e90:	str	r3, [fp, #-28]	; 0xffffffe4
     e94:	ldr	r3, [fp, #-16]
     e98:	add	r3, r3, #1
     e9c:	str	r3, [fp, #-16]
     ea0:	b	ef0 <main+0xb30>
     ea4:	ldr	r3, [fp, #-16]
     ea8:	lsl	r3, r3, #2
     eac:	ldr	r2, [fp, #-68]	; 0xffffffbc
     eb0:	add	r3, r2, r3
     eb4:	ldr	r3, [r3]
     eb8:	ldrb	r3, [r3]
     ebc:	cmp	r3, #45	; 0x2d
     ec0:	bne	f04 <main+0xb44>
     ec4:	movw	r3, #0
     ec8:	movt	r3, #0
     ecc:	ldr	r3, [r3]
     ed0:	mov	r2, #25
     ed4:	mov	r1, #1
     ed8:	movw	r0, #0
     edc:	movt	r0, #0
     ee0:	bl	0 <fwrite>
     ee4:	bl	58 <print_help>
     ee8:	mov	r0, #1
     eec:	bl	0 <exit>
     ef0:	ldr	r2, [fp, #-16]
     ef4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     ef8:	cmp	r2, r3
     efc:	blt	dd8 <main+0xa18>
     f00:	b	f08 <main+0xb48>
     f04:	nop	{0}
     f08:	ldr	r3, [fp, #-64]	; 0xffffffc0
     f0c:	sub	r3, r3, #3
     f10:	ldr	r2, [fp, #-16]
     f14:	cmp	r2, r3
     f18:	beq	f48 <main+0xb88>
     f1c:	movw	r3, #0
     f20:	movt	r3, #0
     f24:	ldr	r3, [r3]
     f28:	mov	r2, #25
     f2c:	mov	r1, #1
     f30:	movw	r0, #0
     f34:	movt	r0, #0
     f38:	bl	0 <fwrite>
     f3c:	bl	58 <print_help>
     f40:	mov	r0, #1
     f44:	bl	0 <exit>
     f48:	ldr	r3, [fp, #-16]
     f4c:	lsl	r3, r3, #2
     f50:	ldr	r2, [fp, #-68]	; 0xffffffbc
     f54:	add	r3, r2, r3
     f58:	ldr	r3, [r3]
     f5c:	str	r3, [fp, #-40]	; 0xffffffd8
     f60:	ldr	r3, [fp, #-16]
     f64:	add	r3, r3, #1
     f68:	str	r3, [fp, #-16]
     f6c:	ldr	r3, [fp, #-16]
     f70:	lsl	r3, r3, #2
     f74:	ldr	r2, [fp, #-68]	; 0xffffffbc
     f78:	add	r3, r2, r3
     f7c:	ldr	r3, [r3]
     f80:	str	r3, [fp, #-44]	; 0xffffffd4
     f84:	ldr	r3, [fp, #-16]
     f88:	add	r3, r3, #1
     f8c:	str	r3, [fp, #-16]
     f90:	ldr	r3, [fp, #-16]
     f94:	lsl	r3, r3, #2
     f98:	ldr	r2, [fp, #-68]	; 0xffffffbc
     f9c:	add	r3, r2, r3
     fa0:	ldr	r3, [r3]
     fa4:	sub	r2, fp, #52	; 0x34
     fa8:	movw	r1, #0
     fac:	movt	r1, #0
     fb0:	mov	r0, r3
     fb4:	bl	0 <__isoc99_sscanf>
     fb8:	mov	r3, r0
     fbc:	cmp	r3, #1
     fc0:	beq	ff0 <main+0xc30>
     fc4:	movw	r3, #0
     fc8:	movt	r3, #0
     fcc:	ldr	r3, [r3]
     fd0:	mov	r2, #40	; 0x28
     fd4:	mov	r1, #1
     fd8:	movw	r0, #0
     fdc:	movt	r0, #0
     fe0:	bl	0 <fwrite>
     fe4:	bl	58 <print_help>
     fe8:	mov	r0, #1
     fec:	bl	0 <exit>
     ff0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ff4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ff8:	ldr	r1, [fp, #-40]	; 0xffffffd8
     ffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1000:	bl	0 <generate_xmlschema>
    1004:	b	12f8 <main+0xf38>
    1008:	ldr	r3, [fp, #-16]
    100c:	lsl	r3, r3, #2
    1010:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1014:	add	r3, r2, r3
    1018:	ldr	r3, [r3]
    101c:	movw	r1, #0
    1020:	movt	r1, #0
    1024:	mov	r0, r3
    1028:	bl	0 <strcmp>
    102c:	mov	r3, r0
    1030:	cmp	r3, #0
    1034:	bne	10f0 <main+0xd30>
    1038:	ldr	r3, [fp, #-16]
    103c:	add	r3, r3, #1
    1040:	str	r3, [fp, #-16]
    1044:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1048:	sub	r3, r3, #1
    104c:	ldr	r2, [fp, #-16]
    1050:	cmp	r2, r3
    1054:	beq	1084 <main+0xcc4>
    1058:	movw	r3, #0
    105c:	movt	r3, #0
    1060:	ldr	r3, [r3]
    1064:	mov	r2, #25
    1068:	mov	r1, #1
    106c:	movw	r0, #0
    1070:	movt	r0, #0
    1074:	bl	0 <fwrite>
    1078:	bl	58 <print_help>
    107c:	mov	r0, #1
    1080:	bl	0 <exit>
    1084:	ldr	r3, [fp, #-16]
    1088:	lsl	r3, r3, #2
    108c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1090:	add	r3, r2, r3
    1094:	ldr	r3, [r3]
    1098:	sub	r2, fp, #56	; 0x38
    109c:	mov	r1, r2
    10a0:	mov	r0, r3
    10a4:	bl	0 <coda_format_from_string>
    10a8:	mov	r3, r0
    10ac:	cmp	r3, #0
    10b0:	beq	10e0 <main+0xd20>
    10b4:	movw	r3, #0
    10b8:	movt	r3, #0
    10bc:	ldr	r3, [r3]
    10c0:	mov	r2, #25
    10c4:	mov	r1, #1
    10c8:	movw	r0, #0
    10cc:	movt	r0, #0
    10d0:	bl	0 <fwrite>
    10d4:	bl	58 <print_help>
    10d8:	mov	r0, #1
    10dc:	bl	0 <exit>
    10e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10e4:	mov	r0, r3
    10e8:	bl	0 <generate_detection_tree>
    10ec:	b	12f8 <main+0xf38>
    10f0:	ldr	r3, [fp, #-16]
    10f4:	lsl	r3, r3, #2
    10f8:	ldr	r2, [fp, #-68]	; 0xffffffbc
    10fc:	add	r3, r2, r3
    1100:	ldr	r3, [r3]
    1104:	movw	r1, #0
    1108:	movt	r1, #0
    110c:	mov	r0, r3
    1110:	bl	0 <strcmp>
    1114:	mov	r3, r0
    1118:	cmp	r3, #0
    111c:	bne	12cc <main+0xf0c>
    1120:	mov	r3, #0
    1124:	str	r3, [fp, #-32]	; 0xffffffe0
    1128:	ldr	r3, [fp, #-16]
    112c:	add	r3, r3, #1
    1130:	str	r3, [fp, #-16]
    1134:	b	1250 <main+0xe90>
    1138:	ldr	r3, [fp, #-16]
    113c:	lsl	r3, r3, #2
    1140:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1144:	add	r3, r2, r3
    1148:	ldr	r3, [r3]
    114c:	movw	r1, #0
    1150:	movt	r1, #0
    1154:	mov	r0, r3
    1158:	bl	0 <strcmp>
    115c:	mov	r3, r0
    1160:	cmp	r3, #0
    1164:	beq	1198 <main+0xdd8>
    1168:	ldr	r3, [fp, #-16]
    116c:	lsl	r3, r3, #2
    1170:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1174:	add	r3, r2, r3
    1178:	ldr	r3, [r3]
    117c:	movw	r1, #0
    1180:	movt	r1, #0
    1184:	mov	r0, r3
    1188:	bl	0 <strcmp>
    118c:	mov	r3, r0
    1190:	cmp	r3, #0
    1194:	bne	1204 <main+0xe44>
    1198:	ldr	r3, [fp, #-16]
    119c:	add	r3, r3, #1
    11a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    11a4:	cmp	r2, r3
    11a8:	ble	1204 <main+0xe44>
    11ac:	ldr	r3, [fp, #-16]
    11b0:	add	r3, r3, #1
    11b4:	lsl	r3, r3, #2
    11b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
    11bc:	add	r3, r2, r3
    11c0:	ldr	r3, [r3]
    11c4:	ldrb	r3, [r3]
    11c8:	cmp	r3, #45	; 0x2d
    11cc:	beq	1204 <main+0xe44>
    11d0:	ldr	r3, [fp, #-16]
    11d4:	add	r3, r3, #1
    11d8:	str	r3, [fp, #-16]
    11dc:	ldr	r3, [fp, #-16]
    11e0:	lsl	r3, r3, #2
    11e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    11e8:	add	r3, r2, r3
    11ec:	ldr	r3, [r3]
    11f0:	str	r3, [fp, #-32]	; 0xffffffe0
    11f4:	ldr	r3, [fp, #-16]
    11f8:	add	r3, r3, #1
    11fc:	str	r3, [fp, #-16]
    1200:	b	1250 <main+0xe90>
    1204:	ldr	r3, [fp, #-16]
    1208:	lsl	r3, r3, #2
    120c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    1210:	add	r3, r2, r3
    1214:	ldr	r3, [r3]
    1218:	ldrb	r3, [r3]
    121c:	cmp	r3, #45	; 0x2d
    1220:	bne	1264 <main+0xea4>
    1224:	movw	r3, #0
    1228:	movt	r3, #0
    122c:	ldr	r3, [r3]
    1230:	mov	r2, #25
    1234:	mov	r1, #1
    1238:	movw	r0, #0
    123c:	movt	r0, #0
    1240:	bl	0 <fwrite>
    1244:	bl	58 <print_help>
    1248:	mov	r0, #1
    124c:	bl	0 <exit>
    1250:	ldr	r2, [fp, #-16]
    1254:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1258:	cmp	r2, r3
    125c:	blt	1138 <main+0xd78>
    1260:	b	1268 <main+0xea8>
    1264:	nop	{0}
    1268:	ldr	r3, [fp, #-64]	; 0xffffffc0
    126c:	sub	r3, r3, #1
    1270:	ldr	r2, [fp, #-16]
    1274:	cmp	r2, r3
    1278:	beq	12a8 <main+0xee8>
    127c:	movw	r3, #0
    1280:	movt	r3, #0
    1284:	ldr	r3, [r3]
    1288:	mov	r2, #25
    128c:	mov	r1, #1
    1290:	movw	r0, #0
    1294:	movt	r0, #0
    1298:	bl	0 <fwrite>
    129c:	bl	58 <print_help>
    12a0:	mov	r0, #1
    12a4:	bl	0 <exit>
    12a8:	ldr	r3, [fp, #-16]
    12ac:	lsl	r3, r3, #2
    12b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    12b4:	add	r3, r2, r3
    12b8:	ldr	r3, [r3]
    12bc:	mov	r1, r3
    12c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    12c4:	bl	0 <generate_definition>
    12c8:	b	12f8 <main+0xf38>
    12cc:	movw	r3, #0
    12d0:	movt	r3, #0
    12d4:	ldr	r3, [r3]
    12d8:	mov	r2, #25
    12dc:	mov	r1, #1
    12e0:	movw	r0, #0
    12e4:	movt	r0, #0
    12e8:	bl	0 <fwrite>
    12ec:	bl	58 <print_help>
    12f0:	mov	r0, #1
    12f4:	bl	0 <exit>
    12f8:	bl	0 <coda_done>
    12fc:	mov	r3, #0
    1300:	mov	r0, r3
    1304:	sub	sp, fp, #8
    1308:	ldr	r4, [sp]
    130c:	ldr	fp, [sp, #4]
    1310:	add	sp, sp, #8
    1314:	pop	{pc}		; (ldr pc, [sp], #4)
    1318:	.word	0x00000ce0
    131c:	.word	0x00000cac
    1320:	.word	0x00000c80
