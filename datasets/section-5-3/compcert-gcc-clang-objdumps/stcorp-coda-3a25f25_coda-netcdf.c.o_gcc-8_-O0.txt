
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	strd	r4, [sp, #-24]!	; 0xffffffe8
       4:	strd	r6, [sp, #8]
       8:	str	fp, [sp, #16]
       c:	str	lr, [sp, #20]
      10:	add	fp, sp, #20
      14:	sub	sp, sp, #96	; 0x60
      18:	str	r0, [fp, #-96]	; 0xffffffa0
      1c:	strd	r2, [fp, #-108]	; 0xffffff94
      20:	ldr	r3, [fp, #-96]	; 0xffffffa0
      24:	ldr	r3, [r3, #48]	; 0x30
      28:	cmp	r3, #0
      2c:	beq	110 <read_bytes+0x110>
      30:	ldrd	r0, [fp, #-108]	; 0xffffff94
      34:	ldrd	r2, [fp, #4]
      38:	adds	r6, r0, r2
      3c:	adc	r7, r1, r3
      40:	ldr	r3, [fp, #-96]	; 0xffffffa0
      44:	ldrd	r2, [r3, #40]	; 0x28
      48:	cmp	r7, r3
      4c:	cmpeq	r6, r2
      50:	bls	ec <read_bytes+0xec>
      54:	ldr	r3, [fp, #-96]	; 0xffffffa0
      58:	ldr	r3, [r3, #16]
      5c:	cmp	r3, #0
      60:	beq	74 <read_bytes+0x74>
      64:	ldr	r3, [fp, #-96]	; 0xffffffa0
      68:	ldr	r3, [r3, #16]
      6c:	cmp	r3, #1
      70:	bne	8c <read_bytes+0x8c>
      74:	movw	r1, #0
      78:	movt	r1, #0
      7c:	mvn	r0, #300	; 0x12c
      80:	bl	0 <coda_set_error>
      84:	mvn	r3, #0
      88:	b	1e8 <read_bytes+0x1e8>
      8c:	sub	r3, fp, #44	; 0x2c
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #4]
      98:	bl	0 <coda_str64>
      9c:	sub	r3, fp, #68	; 0x44
      a0:	mov	r2, r3
      a4:	ldrd	r0, [fp, #-108]	; 0xffffff94
      a8:	bl	0 <coda_str64>
      ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
      b0:	ldrd	r0, [r3, #40]	; 0x28
      b4:	sub	r3, fp, #92	; 0x5c
      b8:	mov	r2, r3
      bc:	bl	0 <coda_str64>
      c0:	sub	r1, fp, #68	; 0x44
      c4:	sub	r2, fp, #44	; 0x2c
      c8:	sub	r3, fp, #92	; 0x5c
      cc:	str	r3, [sp]
      d0:	mov	r3, r1
      d4:	movw	r1, #0
      d8:	movt	r1, #0
      dc:	mvn	r0, #300	; 0x12c
      e0:	bl	0 <coda_set_error>
      e4:	mvn	r3, #0
      e8:	b	1e8 <read_bytes+0x1e8>
      ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
      f0:	ldr	r2, [r3, #48]	; 0x30
      f4:	ldr	r3, [fp, #-108]	; 0xffffff94
      f8:	add	r3, r2, r3
      fc:	ldr	r2, [fp, #4]
     100:	mov	r1, r3
     104:	ldr	r0, [fp, #12]
     108:	bl	0 <memcpy>
     10c:	b	1e4 <read_bytes+0x1e4>
     110:	ldr	r3, [fp, #-96]	; 0xffffffa0
     114:	ldr	r3, [r3, #16]
     118:	cmp	r3, #0
     11c:	beq	150 <read_bytes+0x150>
     120:	ldr	r3, [fp, #-96]	; 0xffffffa0
     124:	ldr	r3, [r3, #16]
     128:	cmp	r3, #1
     12c:	beq	150 <read_bytes+0x150>
     130:	movw	r3, #0
     134:	movt	r3, #0
     138:	mov	r2, #83	; 0x53
     13c:	movw	r1, #0
     140:	movt	r1, #0
     144:	movw	r0, #0
     148:	movt	r0, #0
     14c:	bl	0 <__assert_fail>
     150:	ldrd	r0, [fp, #-108]	; 0xffffff94
     154:	ldrd	r2, [fp, #4]
     158:	adds	r4, r0, r2
     15c:	adc	r5, r1, r3
     160:	ldr	r3, [fp, #-96]	; 0xffffffa0
     164:	ldrd	r2, [r3, #8]
     168:	cmp	r5, r3
     16c:	cmpeq	r4, r2
     170:	bls	18c <read_bytes+0x18c>
     174:	movw	r1, #0
     178:	movt	r1, #0
     17c:	mvn	r0, #300	; 0x12c
     180:	bl	0 <coda_set_error>
     184:	mvn	r3, #0
     188:	b	1e8 <read_bytes+0x1e8>
     18c:	ldr	r3, [fp, #-96]	; 0xffffffa0
     190:	ldr	r0, [r3, #56]	; 0x38
     194:	ldr	r2, [fp, #4]
     198:	ldr	r3, [fp, #-108]	; 0xffffff94
     19c:	ldr	r1, [fp, #12]
     1a0:	bl	0 <pread>
     1a4:	mov	r3, r0
     1a8:	cmp	r3, #0
     1ac:	bge	1e4 <read_bytes+0x1e4>
     1b0:	bl	0 <__errno_location>
     1b4:	mov	r3, r0
     1b8:	ldr	r3, [r3]
     1bc:	mov	r0, r3
     1c0:	bl	0 <strerror>
     1c4:	mov	r3, r0
     1c8:	mov	r2, r3
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	mvn	r0, #21
     1d8:	bl	0 <coda_set_error>
     1dc:	mvn	r3, #0
     1e0:	b	1e8 <read_bytes+0x1e8>
     1e4:	mov	r3, #0
     1e8:	mov	r0, r3
     1ec:	sub	sp, fp, #20
     1f0:	ldrd	r4, [sp]
     1f4:	ldrd	r6, [sp, #8]
     1f8:	ldr	fp, [sp, #16]
     1fc:	add	sp, sp, #20
     200:	pop	{pc}		; (ldr pc, [sp], #4)

00000204 <swap2>:
     204:	push	{fp}		; (str fp, [sp, #-4]!)
     208:	add	fp, sp, #0
     20c:	sub	sp, sp, #20
     210:	str	r0, [fp, #-16]
     214:	ldr	r3, [fp, #-16]
     218:	str	r3, [fp, #-8]
     21c:	ldr	r3, [fp, #-8]
     220:	ldrb	r2, [r3]
     224:	ldr	r3, [fp, #-8]
     228:	add	r3, r3, #1
     22c:	ldrb	r3, [r3]
     230:	eor	r3, r3, r2
     234:	uxtb	r2, r3
     238:	ldr	r3, [fp, #-8]
     23c:	strb	r2, [r3]
     240:	ldr	r3, [fp, #-8]
     244:	ldrb	r1, [r3]
     248:	ldr	r3, [fp, #-8]
     24c:	add	r3, r3, #1
     250:	ldrb	r2, [r3]
     254:	ldr	r3, [fp, #-8]
     258:	add	r3, r3, #1
     25c:	eor	r2, r2, r1
     260:	uxtb	r2, r2
     264:	strb	r2, [r3]
     268:	ldr	r3, [fp, #-8]
     26c:	ldrb	r2, [r3]
     270:	ldr	r3, [fp, #-8]
     274:	add	r3, r3, #1
     278:	ldrb	r3, [r3]
     27c:	eor	r3, r3, r2
     280:	uxtb	r2, r3
     284:	ldr	r3, [fp, #-8]
     288:	strb	r2, [r3]
     28c:	nop	{0}
     290:	add	sp, fp, #0
     294:	pop	{fp}		; (ldr fp, [sp], #4)
     298:	bx	lr

0000029c <swap4>:
     29c:	push	{fp}		; (str fp, [sp, #-4]!)
     2a0:	add	fp, sp, #0
     2a4:	sub	sp, sp, #20
     2a8:	str	r0, [fp, #-16]
     2ac:	ldr	r3, [fp, #-16]
     2b0:	str	r3, [fp, #-8]
     2b4:	ldr	r3, [fp, #-8]
     2b8:	ldrb	r2, [r3]
     2bc:	ldr	r3, [fp, #-8]
     2c0:	add	r3, r3, #3
     2c4:	ldrb	r3, [r3]
     2c8:	eor	r3, r3, r2
     2cc:	uxtb	r2, r3
     2d0:	ldr	r3, [fp, #-8]
     2d4:	strb	r2, [r3]
     2d8:	ldr	r3, [fp, #-8]
     2dc:	ldrb	r1, [r3]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	add	r3, r3, #3
     2e8:	ldrb	r2, [r3]
     2ec:	ldr	r3, [fp, #-8]
     2f0:	add	r3, r3, #3
     2f4:	eor	r2, r2, r1
     2f8:	uxtb	r2, r2
     2fc:	strb	r2, [r3]
     300:	ldr	r3, [fp, #-8]
     304:	ldrb	r2, [r3]
     308:	ldr	r3, [fp, #-8]
     30c:	add	r3, r3, #3
     310:	ldrb	r3, [r3]
     314:	eor	r3, r3, r2
     318:	uxtb	r2, r3
     31c:	ldr	r3, [fp, #-8]
     320:	strb	r2, [r3]
     324:	ldr	r3, [fp, #-8]
     328:	add	r3, r3, #1
     32c:	ldrb	r1, [r3]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #2
     338:	ldrb	r2, [r3]
     33c:	ldr	r3, [fp, #-8]
     340:	add	r3, r3, #1
     344:	eor	r2, r2, r1
     348:	uxtb	r2, r2
     34c:	strb	r2, [r3]
     350:	ldr	r3, [fp, #-8]
     354:	add	r3, r3, #1
     358:	ldrb	r1, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #2
     364:	ldrb	r2, [r3]
     368:	ldr	r3, [fp, #-8]
     36c:	add	r3, r3, #2
     370:	eor	r2, r2, r1
     374:	uxtb	r2, r2
     378:	strb	r2, [r3]
     37c:	ldr	r3, [fp, #-8]
     380:	add	r3, r3, #1
     384:	ldrb	r1, [r3]
     388:	ldr	r3, [fp, #-8]
     38c:	add	r3, r3, #2
     390:	ldrb	r2, [r3]
     394:	ldr	r3, [fp, #-8]
     398:	add	r3, r3, #1
     39c:	eor	r2, r2, r1
     3a0:	uxtb	r2, r2
     3a4:	strb	r2, [r3]
     3a8:	nop	{0}
     3ac:	add	sp, fp, #0
     3b0:	pop	{fp}		; (ldr fp, [sp], #4)
     3b4:	bx	lr

000003b8 <swap8>:
     3b8:	push	{fp}		; (str fp, [sp, #-4]!)
     3bc:	add	fp, sp, #0
     3c0:	sub	sp, sp, #20
     3c4:	str	r0, [fp, #-16]
     3c8:	ldr	r3, [fp, #-16]
     3cc:	str	r3, [fp, #-8]
     3d0:	ldr	r3, [fp, #-8]
     3d4:	ldrb	r2, [r3]
     3d8:	ldr	r3, [fp, #-8]
     3dc:	add	r3, r3, #7
     3e0:	ldrb	r3, [r3]
     3e4:	eor	r3, r3, r2
     3e8:	uxtb	r2, r3
     3ec:	ldr	r3, [fp, #-8]
     3f0:	strb	r2, [r3]
     3f4:	ldr	r3, [fp, #-8]
     3f8:	ldrb	r1, [r3]
     3fc:	ldr	r3, [fp, #-8]
     400:	add	r3, r3, #7
     404:	ldrb	r2, [r3]
     408:	ldr	r3, [fp, #-8]
     40c:	add	r3, r3, #7
     410:	eor	r2, r2, r1
     414:	uxtb	r2, r2
     418:	strb	r2, [r3]
     41c:	ldr	r3, [fp, #-8]
     420:	ldrb	r2, [r3]
     424:	ldr	r3, [fp, #-8]
     428:	add	r3, r3, #7
     42c:	ldrb	r3, [r3]
     430:	eor	r3, r3, r2
     434:	uxtb	r2, r3
     438:	ldr	r3, [fp, #-8]
     43c:	strb	r2, [r3]
     440:	ldr	r3, [fp, #-8]
     444:	add	r3, r3, #1
     448:	ldrb	r1, [r3]
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #6
     454:	ldrb	r2, [r3]
     458:	ldr	r3, [fp, #-8]
     45c:	add	r3, r3, #1
     460:	eor	r2, r2, r1
     464:	uxtb	r2, r2
     468:	strb	r2, [r3]
     46c:	ldr	r3, [fp, #-8]
     470:	add	r3, r3, #1
     474:	ldrb	r1, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #6
     480:	ldrb	r2, [r3]
     484:	ldr	r3, [fp, #-8]
     488:	add	r3, r3, #6
     48c:	eor	r2, r2, r1
     490:	uxtb	r2, r2
     494:	strb	r2, [r3]
     498:	ldr	r3, [fp, #-8]
     49c:	add	r3, r3, #1
     4a0:	ldrb	r1, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #6
     4ac:	ldrb	r2, [r3]
     4b0:	ldr	r3, [fp, #-8]
     4b4:	add	r3, r3, #1
     4b8:	eor	r2, r2, r1
     4bc:	uxtb	r2, r2
     4c0:	strb	r2, [r3]
     4c4:	ldr	r3, [fp, #-8]
     4c8:	add	r3, r3, #2
     4cc:	ldrb	r1, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #5
     4d8:	ldrb	r2, [r3]
     4dc:	ldr	r3, [fp, #-8]
     4e0:	add	r3, r3, #2
     4e4:	eor	r2, r2, r1
     4e8:	uxtb	r2, r2
     4ec:	strb	r2, [r3]
     4f0:	ldr	r3, [fp, #-8]
     4f4:	add	r3, r3, #2
     4f8:	ldrb	r1, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #5
     504:	ldrb	r2, [r3]
     508:	ldr	r3, [fp, #-8]
     50c:	add	r3, r3, #5
     510:	eor	r2, r2, r1
     514:	uxtb	r2, r2
     518:	strb	r2, [r3]
     51c:	ldr	r3, [fp, #-8]
     520:	add	r3, r3, #2
     524:	ldrb	r1, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #5
     530:	ldrb	r2, [r3]
     534:	ldr	r3, [fp, #-8]
     538:	add	r3, r3, #2
     53c:	eor	r2, r2, r1
     540:	uxtb	r2, r2
     544:	strb	r2, [r3]
     548:	ldr	r3, [fp, #-8]
     54c:	add	r3, r3, #3
     550:	ldrb	r1, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #4
     55c:	ldrb	r2, [r3]
     560:	ldr	r3, [fp, #-8]
     564:	add	r3, r3, #3
     568:	eor	r2, r2, r1
     56c:	uxtb	r2, r2
     570:	strb	r2, [r3]
     574:	ldr	r3, [fp, #-8]
     578:	add	r3, r3, #3
     57c:	ldrb	r1, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #4
     588:	ldrb	r2, [r3]
     58c:	ldr	r3, [fp, #-8]
     590:	add	r3, r3, #4
     594:	eor	r2, r2, r1
     598:	uxtb	r2, r2
     59c:	strb	r2, [r3]
     5a0:	ldr	r3, [fp, #-8]
     5a4:	add	r3, r3, #3
     5a8:	ldrb	r1, [r3]
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r3, #4
     5b4:	ldrb	r2, [r3]
     5b8:	ldr	r3, [fp, #-8]
     5bc:	add	r3, r3, #3
     5c0:	eor	r2, r2, r1
     5c4:	uxtb	r2, r2
     5c8:	strb	r2, [r3]
     5cc:	nop	{0}
     5d0:	add	sp, fp, #0
     5d4:	pop	{fp}		; (ldr fp, [sp], #4)
     5d8:	bx	lr

000005dc <read_length_value>:
     5dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
     5e0:	strd	r6, [sp, #8]
     5e4:	str	fp, [sp, #16]
     5e8:	str	lr, [sp, #20]
     5ec:	add	fp, sp, #20
     5f0:	sub	sp, sp, #40	; 0x28
     5f4:	str	r0, [fp, #-32]	; 0xffffffe0
     5f8:	str	r1, [fp, #-36]	; 0xffffffdc
     5fc:	str	r2, [fp, #-40]	; 0xffffffd8
     600:	ldr	r3, [fp, #-32]	; 0xffffffe0
     604:	ldr	r3, [r3, #56]	; 0x38
     608:	cmp	r3, #5
     60c:	beq	694 <read_length_value+0xb8>
     610:	ldr	r3, [fp, #-32]	; 0xffffffe0
     614:	ldr	ip, [r3, #52]	; 0x34
     618:	ldr	r3, [fp, #-36]	; 0xffffffdc
     61c:	ldrd	r0, [r3]
     620:	sub	r3, fp, #24
     624:	str	r3, [sp, #8]
     628:	mov	r2, #4
     62c:	mov	r3, #0
     630:	strd	r2, [sp]
     634:	mov	r2, r0
     638:	mov	r3, r1
     63c:	mov	r0, ip
     640:	bl	0 <read_bytes>
     644:	mov	r3, r0
     648:	cmp	r3, #0
     64c:	bge	658 <read_length_value+0x7c>
     650:	mvn	r3, #0
     654:	b	700 <read_length_value+0x124>
     658:	sub	r3, fp, #24
     65c:	mov	r0, r3
     660:	bl	29c <swap4>
     664:	ldr	r3, [fp, #-24]	; 0xffffffe8
     668:	mov	r2, r3
     66c:	asr	r3, r2, #31
     670:	ldr	r1, [fp, #-40]	; 0xffffffd8
     674:	strd	r2, [r1]
     678:	ldr	r3, [fp, #-36]	; 0xffffffdc
     67c:	ldrd	r2, [r3]
     680:	adds	r6, r2, #4
     684:	adc	r7, r3, #0
     688:	ldr	r3, [fp, #-36]	; 0xffffffdc
     68c:	strd	r6, [r3]
     690:	b	6fc <read_length_value+0x120>
     694:	ldr	r3, [fp, #-32]	; 0xffffffe0
     698:	ldr	ip, [r3, #52]	; 0x34
     69c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     6a0:	ldrd	r0, [r3]
     6a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     6a8:	str	r3, [sp, #8]
     6ac:	mov	r2, #8
     6b0:	mov	r3, #0
     6b4:	strd	r2, [sp]
     6b8:	mov	r2, r0
     6bc:	mov	r3, r1
     6c0:	mov	r0, ip
     6c4:	bl	0 <read_bytes>
     6c8:	mov	r3, r0
     6cc:	cmp	r3, #0
     6d0:	bge	6dc <read_length_value+0x100>
     6d4:	mvn	r3, #0
     6d8:	b	700 <read_length_value+0x124>
     6dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     6e0:	bl	3b8 <swap8>
     6e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     6e8:	ldrd	r2, [r3]
     6ec:	adds	r4, r2, #8
     6f0:	adc	r5, r3, #0
     6f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     6f8:	strd	r4, [r3]
     6fc:	mov	r3, #0
     700:	mov	r0, r3
     704:	sub	sp, fp, #20
     708:	ldrd	r4, [sp]
     70c:	ldrd	r6, [sp, #8]
     710:	ldr	fp, [sp, #16]
     714:	add	sp, sp, #20
     718:	pop	{pc}		; (ldr pc, [sp], #4)

0000071c <read_dim_array>:
     71c:	strd	r4, [sp, #-32]!	; 0xffffffe0
     720:	strd	r6, [sp, #8]
     724:	strd	r8, [sp, #16]
     728:	str	fp, [sp, #24]
     72c:	str	lr, [sp, #28]
     730:	add	fp, sp, #28
     734:	sub	sp, sp, #72	; 0x48
     738:	str	r0, [fp, #-48]	; 0xffffffd0
     73c:	str	r1, [fp, #-52]	; 0xffffffcc
     740:	strd	r2, [fp, #-60]	; 0xffffffc4
     744:	ldr	r3, [fp, #-48]	; 0xffffffd0
     748:	ldr	ip, [r3, #52]	; 0x34
     74c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     750:	ldrd	r0, [r3]
     754:	sub	r3, fp, #36	; 0x24
     758:	str	r3, [sp, #8]
     75c:	mov	r2, #4
     760:	mov	r3, #0
     764:	strd	r2, [sp]
     768:	mov	r2, r0
     76c:	mov	r3, r1
     770:	mov	r0, ip
     774:	bl	0 <read_bytes>
     778:	mov	r3, r0
     77c:	cmp	r3, #0
     780:	bge	78c <read_dim_array+0x70>
     784:	mvn	r3, #0
     788:	b	a58 <read_dim_array+0x33c>
     78c:	sub	r3, fp, #36	; 0x24
     790:	mov	r0, r3
     794:	bl	29c <swap4>
     798:	ldr	r3, [fp, #-52]	; 0xffffffcc
     79c:	ldrd	r2, [r3]
     7a0:	adds	r4, r2, #4
     7a4:	adc	r5, r3, #0
     7a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     7ac:	strd	r4, [r3]
     7b0:	ldr	r2, [fp, #4]
     7b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     7b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     7bc:	bl	5dc <read_length_value>
     7c0:	mov	r3, r0
     7c4:	cmp	r3, #0
     7c8:	beq	7d4 <read_dim_array+0xb8>
     7cc:	mvn	r3, #0
     7d0:	b	a58 <read_dim_array+0x33c>
     7d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     7d8:	cmp	r3, #0
     7dc:	bne	814 <read_dim_array+0xf8>
     7e0:	ldr	r3, [fp, #4]
     7e4:	ldrd	r2, [r3]
     7e8:	orrs	r3, r2, r3
     7ec:	beq	80c <read_dim_array+0xf0>
     7f0:	movw	r1, #0
     7f4:	movt	r1, #0
     7f8:	movw	r0, #65236	; 0xfed4
     7fc:	movt	r0, #65535	; 0xffff
     800:	bl	0 <coda_set_error>
     804:	mvn	r3, #0
     808:	b	a58 <read_dim_array+0x33c>
     80c:	mov	r3, #0
     810:	b	a58 <read_dim_array+0x33c>
     814:	ldr	r3, [fp, #-36]	; 0xffffffdc
     818:	cmp	r3, #10
     81c:	beq	83c <read_dim_array+0x120>
     820:	movw	r1, #0
     824:	movt	r1, #0
     828:	movw	r0, #65236	; 0xfed4
     82c:	movt	r0, #65535	; 0xffff
     830:	bl	0 <coda_set_error>
     834:	mvn	r3, #0
     838:	b	a58 <read_dim_array+0x33c>
     83c:	ldr	r3, [fp, #4]
     840:	ldrd	r2, [r3]
     844:	mov	r3, r2
     848:	lsl	r3, r3, #3
     84c:	mov	r0, r3
     850:	bl	0 <malloc>
     854:	mov	r3, r0
     858:	mov	r2, r3
     85c:	ldr	r3, [fp, #8]
     860:	str	r2, [r3]
     864:	ldr	r3, [fp, #8]
     868:	ldr	r3, [r3]
     86c:	cmp	r3, #0
     870:	bne	8bc <read_dim_array+0x1a0>
     874:	ldr	r3, [fp, #4]
     878:	ldrd	r0, [r3]
     87c:	mov	r2, #0
     880:	mov	r3, #0
     884:	lsl	r3, r1, #3
     888:	orr	r3, r3, r0, lsr #29
     88c:	lsl	r2, r0, #3
     890:	mov	r1, #124	; 0x7c
     894:	str	r1, [sp, #4]
     898:	movw	r1, #0
     89c:	movt	r1, #0
     8a0:	str	r1, [sp]
     8a4:	movw	r1, #0
     8a8:	movt	r1, #0
     8ac:	mvn	r0, #0
     8b0:	bl	0 <coda_set_error>
     8b4:	mvn	r3, #0
     8b8:	b	a58 <read_dim_array+0x33c>
     8bc:	mov	r3, #0
     8c0:	str	r3, [fp, #-32]	; 0xffffffe0
     8c4:	b	a34 <read_dim_array+0x318>
     8c8:	sub	r3, fp, #44	; 0x2c
     8cc:	mov	r2, r3
     8d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     8d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8d8:	bl	5dc <read_length_value>
     8dc:	mov	r3, r0
     8e0:	cmp	r3, #0
     8e4:	beq	900 <read_dim_array+0x1e4>
     8e8:	ldr	r3, [fp, #8]
     8ec:	ldr	r3, [r3]
     8f0:	mov	r0, r3
     8f4:	bl	0 <free>
     8f8:	mvn	r3, #0
     8fc:	b	a58 <read_dim_array+0x33c>
     900:	ldr	r3, [fp, #-52]	; 0xffffffcc
     904:	ldrd	r0, [r3]
     908:	ldrd	r2, [fp, #-44]	; 0xffffffd4
     90c:	adds	ip, r0, r2
     910:	str	ip, [fp, #-68]	; 0xffffffbc
     914:	adc	r3, r1, r3
     918:	str	r3, [fp, #-64]	; 0xffffffc0
     91c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     920:	ldrd	r0, [fp, #-68]	; 0xffffffbc
     924:	strd	r0, [r3]
     928:	ldrd	r2, [fp, #-44]	; 0xffffffd4
     92c:	mov	r0, #3
     930:	mov	r1, #0
     934:	and	ip, r2, r0
     938:	str	ip, [fp, #-76]	; 0xffffffb4
     93c:	and	r3, r3, r1
     940:	str	r3, [fp, #-72]	; 0xffffffb8
     944:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     948:	orrs	r3, r2, r3
     94c:	beq	998 <read_dim_array+0x27c>
     950:	ldr	r3, [fp, #-52]	; 0xffffffcc
     954:	ldrd	r4, [r3]
     958:	ldrd	r0, [fp, #-44]	; 0xffffffd4
     95c:	mov	r2, #3
     960:	mov	r3, #0
     964:	and	r6, r0, r2
     968:	and	r7, r1, r3
     96c:	mov	r2, #4
     970:	mov	r3, #0
     974:	subs	r8, r2, r6
     978:	sbc	r9, r3, r7
     97c:	adds	r3, r4, r8
     980:	str	r3, [fp, #-84]	; 0xffffffac
     984:	adc	r3, r5, r9
     988:	str	r3, [fp, #-80]	; 0xffffffb0
     98c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     990:	ldrd	r0, [fp, #-84]	; 0xffffffac
     994:	strd	r0, [r3]
     998:	ldr	r3, [fp, #8]
     99c:	ldr	r2, [r3]
     9a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9a4:	lsl	r3, r3, #3
     9a8:	add	r3, r2, r3
     9ac:	mov	r2, r3
     9b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     9b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     9b8:	bl	5dc <read_length_value>
     9bc:	mov	r3, r0
     9c0:	cmp	r3, #0
     9c4:	beq	9e0 <read_dim_array+0x2c4>
     9c8:	ldr	r3, [fp, #8]
     9cc:	ldr	r3, [r3]
     9d0:	mov	r0, r3
     9d4:	bl	0 <free>
     9d8:	mvn	r3, #0
     9dc:	b	a58 <read_dim_array+0x33c>
     9e0:	ldr	r3, [fp, #8]
     9e4:	ldr	r2, [r3]
     9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     9ec:	lsl	r3, r3, #3
     9f0:	add	r3, r2, r3
     9f4:	ldrd	r2, [r3]
     9f8:	orrs	r3, r2, r3
     9fc:	bne	a28 <read_dim_array+0x30c>
     a00:	ldr	r3, [fp, #8]
     a04:	ldr	r2, [r3]
     a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a0c:	lsl	r3, r3, #3
     a10:	add	r1, r2, r3
     a14:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     a18:	strd	r2, [r1]
     a1c:	ldr	r3, [fp, #12]
     a20:	ldr	r2, [fp, #-32]	; 0xffffffe0
     a24:	str	r2, [r3]
     a28:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a2c:	add	r3, r3, #1
     a30:	str	r3, [fp, #-32]	; 0xffffffe0
     a34:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a38:	mov	r0, r3
     a3c:	asr	r1, r0, #31
     a40:	ldr	r3, [fp, #4]
     a44:	ldrd	r2, [r3]
     a48:	cmp	r0, r2
     a4c:	sbcs	r3, r1, r3
     a50:	blt	8c8 <read_dim_array+0x1ac>
     a54:	mov	r3, #0
     a58:	mov	r0, r3
     a5c:	sub	sp, fp, #28
     a60:	ldrd	r4, [sp]
     a64:	ldrd	r6, [sp, #8]
     a68:	ldrd	r8, [sp, #16]
     a6c:	ldr	fp, [sp, #24]
     a70:	add	sp, sp, #28
     a74:	pop	{pc}		; (ldr pc, [sp], #4)

00000a78 <read_att_array>:
     a78:	strd	r4, [sp, #-32]!	; 0xffffffe0
     a7c:	strd	r6, [sp, #8]
     a80:	strd	r8, [sp, #16]
     a84:	str	fp, [sp, #24]
     a88:	str	lr, [sp, #28]
     a8c:	add	fp, sp, #28
     a90:	sub	sp, sp, #176	; 0xb0
     a94:	str	r0, [fp, #-128]	; 0xffffff80
     a98:	str	r1, [fp, #-132]	; 0xffffff7c
     a9c:	str	r2, [fp, #-136]	; 0xffffff78
     aa0:	str	r3, [fp, #-140]	; 0xffffff74
     aa4:	ldr	r3, [fp, #-128]	; 0xffffff80
     aa8:	ldr	ip, [r3, #52]	; 0x34
     aac:	ldr	r3, [fp, #-132]	; 0xffffff7c
     ab0:	ldrd	r0, [r3]
     ab4:	sub	r3, fp, #56	; 0x38
     ab8:	str	r3, [sp, #8]
     abc:	mov	r2, #4
     ac0:	mov	r3, #0
     ac4:	strd	r2, [sp]
     ac8:	mov	r2, r0
     acc:	mov	r3, r1
     ad0:	mov	r0, ip
     ad4:	bl	0 <read_bytes>
     ad8:	mov	r3, r0
     adc:	cmp	r3, #0
     ae0:	bge	aec <read_att_array+0x74>
     ae4:	mvn	r3, #0
     ae8:	b	158c <read_att_array+0xb14>
     aec:	sub	r3, fp, #56	; 0x38
     af0:	mov	r0, r3
     af4:	bl	29c <swap4>
     af8:	ldr	r3, [fp, #-132]	; 0xffffff7c
     afc:	ldrd	r2, [r3]
     b00:	adds	r4, r2, #4
     b04:	adc	r5, r3, #0
     b08:	ldr	r3, [fp, #-132]	; 0xffffff7c
     b0c:	strd	r4, [r3]
     b10:	sub	r3, fp, #68	; 0x44
     b14:	mov	r2, r3
     b18:	ldr	r1, [fp, #-132]	; 0xffffff7c
     b1c:	ldr	r0, [fp, #-128]	; 0xffffff80
     b20:	bl	5dc <read_length_value>
     b24:	mov	r3, r0
     b28:	cmp	r3, #0
     b2c:	beq	b38 <read_att_array+0xc0>
     b30:	mvn	r3, #0
     b34:	b	158c <read_att_array+0xb14>
     b38:	ldr	r3, [fp, #-56]	; 0xffffffc8
     b3c:	cmp	r3, #0
     b40:	bne	b80 <read_att_array+0x108>
     b44:	ldr	r3, [fp, #-136]	; 0xffffff78
     b48:	mov	r2, #0
     b4c:	str	r2, [r3]
     b50:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     b54:	orrs	r3, r2, r3
     b58:	beq	b78 <read_att_array+0x100>
     b5c:	movw	r1, #0
     b60:	movt	r1, #0
     b64:	movw	r0, #65236	; 0xfed4
     b68:	movt	r0, #65535	; 0xffff
     b6c:	bl	0 <coda_set_error>
     b70:	mvn	r3, #0
     b74:	b	158c <read_att_array+0xb14>
     b78:	mov	r3, #0
     b7c:	b	158c <read_att_array+0xb14>
     b80:	ldr	r3, [fp, #-56]	; 0xffffffc8
     b84:	cmp	r3, #12
     b88:	beq	ba8 <read_att_array+0x130>
     b8c:	movw	r1, #0
     b90:	movt	r1, #0
     b94:	movw	r0, #65236	; 0xfed4
     b98:	movt	r0, #65535	; 0xffff
     b9c:	bl	0 <coda_set_error>
     ba0:	mvn	r3, #0
     ba4:	b	158c <read_att_array+0xb14>
     ba8:	mov	r0, #6
     bac:	bl	0 <coda_type_record_new>
     bb0:	str	r0, [fp, #-44]	; 0xffffffd4
     bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bb8:	cmp	r3, #0
     bbc:	bne	bc8 <read_att_array+0x150>
     bc0:	mvn	r3, #0
     bc4:	b	158c <read_att_array+0xb14>
     bc8:	mov	r1, #0
     bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     bd0:	bl	0 <coda_mem_record_new>
     bd4:	mov	r2, r0
     bd8:	ldr	r3, [fp, #-136]	; 0xffffff78
     bdc:	str	r2, [r3]
     be0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     be4:	bl	0 <coda_type_release>
     be8:	ldr	r3, [fp, #-136]	; 0xffffff78
     bec:	ldr	r3, [r3]
     bf0:	cmp	r3, #0
     bf4:	bne	c00 <read_att_array+0x188>
     bf8:	mvn	r3, #0
     bfc:	b	158c <read_att_array+0xb14>
     c00:	mov	r3, #0
     c04:	str	r3, [fp, #-32]	; 0xffffffe0
     c08:	b	156c <read_att_array+0xaf4>
     c0c:	sub	r3, fp, #76	; 0x4c
     c10:	mov	r2, r3
     c14:	ldr	r1, [fp, #-132]	; 0xffffff7c
     c18:	ldr	r0, [fp, #-128]	; 0xffffff80
     c1c:	bl	5dc <read_length_value>
     c20:	mov	r3, r0
     c24:	cmp	r3, #0
     c28:	beq	c34 <read_att_array+0x1bc>
     c2c:	mvn	r3, #0
     c30:	b	158c <read_att_array+0xb14>
     c34:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     c38:	mov	r3, r2
     c3c:	add	r3, r3, #1
     c40:	mov	r0, r3
     c44:	bl	0 <malloc>
     c48:	mov	r3, r0
     c4c:	str	r3, [fp, #-48]	; 0xffffffd0
     c50:	ldr	r3, [fp, #-48]	; 0xffffffd0
     c54:	cmp	r3, #0
     c58:	bne	ca4 <read_att_array+0x22c>
     c5c:	ldr	r3, [fp, #-136]	; 0xffffff78
     c60:	ldr	r3, [r3]
     c64:	mov	r0, r3
     c68:	bl	0 <coda_dynamic_type_delete>
     c6c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     c70:	mov	r3, r2
     c74:	add	r3, r3, #1
     c78:	mov	r2, r3
     c7c:	mov	r3, #230	; 0xe6
     c80:	str	r3, [sp]
     c84:	movw	r3, #0
     c88:	movt	r3, #0
     c8c:	movw	r1, #0
     c90:	movt	r1, #0
     c94:	mvn	r0, #0
     c98:	bl	0 <coda_set_error>
     c9c:	mvn	r3, #0
     ca0:	b	158c <read_att_array+0xb14>
     ca4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     ca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     cac:	add	r2, r3, r2
     cb0:	mov	r3, #0
     cb4:	strb	r3, [r2]
     cb8:	ldr	r3, [fp, #-128]	; 0xffffff80
     cbc:	ldr	ip, [r3, #52]	; 0x34
     cc0:	ldr	r3, [fp, #-132]	; 0xffffff7c
     cc4:	ldrd	r4, [r3]
     cc8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     ccc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     cd0:	str	r3, [sp, #8]
     cd4:	strd	r0, [sp]
     cd8:	mov	r2, r4
     cdc:	mov	r3, r5
     ce0:	mov	r0, ip
     ce4:	bl	0 <read_bytes>
     ce8:	mov	r3, r0
     cec:	cmp	r3, #0
     cf0:	bge	d14 <read_att_array+0x29c>
     cf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     cf8:	bl	0 <free>
     cfc:	ldr	r3, [fp, #-136]	; 0xffffff78
     d00:	ldr	r3, [r3]
     d04:	mov	r0, r3
     d08:	bl	0 <coda_dynamic_type_delete>
     d0c:	mvn	r3, #0
     d10:	b	158c <read_att_array+0xb14>
     d14:	ldr	r3, [fp, #-132]	; 0xffffff7c
     d18:	ldrd	r0, [r3]
     d1c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     d20:	adds	ip, r0, r2
     d24:	str	ip, [fp, #-148]	; 0xffffff6c
     d28:	adc	r3, r1, r3
     d2c:	str	r3, [fp, #-144]	; 0xffffff70
     d30:	ldr	r3, [fp, #-132]	; 0xffffff7c
     d34:	ldrd	r0, [fp, #-148]	; 0xffffff6c
     d38:	strd	r0, [r3]
     d3c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     d40:	mov	r2, #3
     d44:	mov	r3, #0
     d48:	and	ip, r0, r2
     d4c:	str	ip, [fp, #-156]	; 0xffffff64
     d50:	and	r3, r1, r3
     d54:	str	r3, [fp, #-152]	; 0xffffff68
     d58:	ldrd	r2, [fp, #-156]	; 0xffffff64
     d5c:	orrs	r3, r2, r3
     d60:	beq	dac <read_att_array+0x334>
     d64:	ldr	r3, [fp, #-132]	; 0xffffff7c
     d68:	ldrd	r4, [r3]
     d6c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
     d70:	mov	r2, #3
     d74:	mov	r3, #0
     d78:	and	r8, r0, r2
     d7c:	and	r9, r1, r3
     d80:	mov	r2, #4
     d84:	mov	r3, #0
     d88:	subs	r6, r2, r8
     d8c:	sbc	r7, r3, r9
     d90:	adds	r3, r4, r6
     d94:	str	r3, [fp, #-164]	; 0xffffff5c
     d98:	adc	r3, r5, r7
     d9c:	str	r3, [fp, #-160]	; 0xffffff60
     da0:	ldr	r3, [fp, #-132]	; 0xffffff7c
     da4:	ldrd	r0, [fp, #-164]	; 0xffffff5c
     da8:	strd	r0, [r3]
     dac:	ldr	r3, [fp, #-128]	; 0xffffff80
     db0:	ldr	ip, [r3, #52]	; 0x34
     db4:	ldr	r3, [fp, #-132]	; 0xffffff7c
     db8:	ldrd	r0, [r3]
     dbc:	sub	r3, fp, #80	; 0x50
     dc0:	str	r3, [sp, #8]
     dc4:	mov	r2, #4
     dc8:	mov	r3, #0
     dcc:	strd	r2, [sp]
     dd0:	mov	r2, r0
     dd4:	mov	r3, r1
     dd8:	mov	r0, ip
     ddc:	bl	0 <read_bytes>
     de0:	mov	r3, r0
     de4:	cmp	r3, #0
     de8:	bge	e0c <read_att_array+0x394>
     dec:	ldr	r0, [fp, #-48]	; 0xffffffd0
     df0:	bl	0 <free>
     df4:	ldr	r3, [fp, #-136]	; 0xffffff78
     df8:	ldr	r3, [r3]
     dfc:	mov	r0, r3
     e00:	bl	0 <coda_dynamic_type_delete>
     e04:	mvn	r3, #0
     e08:	b	158c <read_att_array+0xb14>
     e0c:	sub	r3, fp, #80	; 0x50
     e10:	mov	r0, r3
     e14:	bl	29c <swap4>
     e18:	ldr	r3, [fp, #-132]	; 0xffffff7c
     e1c:	ldrd	r2, [r3]
     e20:	adds	r1, r2, #4
     e24:	str	r1, [fp, #-172]	; 0xffffff54
     e28:	adc	r3, r3, #0
     e2c:	str	r3, [fp, #-168]	; 0xffffff58
     e30:	ldr	r3, [fp, #-132]	; 0xffffff7c
     e34:	ldrd	r0, [fp, #-172]	; 0xffffff54
     e38:	strd	r0, [r3]
     e3c:	sub	r3, fp, #92	; 0x5c
     e40:	mov	r2, r3
     e44:	ldr	r1, [fp, #-132]	; 0xffffff7c
     e48:	ldr	r0, [fp, #-128]	; 0xffffff80
     e4c:	bl	5dc <read_length_value>
     e50:	mov	r3, r0
     e54:	cmp	r3, #0
     e58:	beq	e64 <read_att_array+0x3ec>
     e5c:	mvn	r3, #0
     e60:	b	158c <read_att_array+0xb14>
     e64:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     e68:	mov	r3, r2
     e6c:	str	r3, [fp, #-40]	; 0xffffffd8
     e70:	ldr	r3, [fp, #-80]	; 0xffffffb0
     e74:	sub	r3, r3, #1
     e78:	cmp	r3, #5
     e7c:	ldrls	pc, [pc, r3, lsl #2]
     e80:	b	ecc <read_att_array+0x454>
     e84:	.word	0x00000f08
     e88:	.word	0x00000f08
     e8c:	.word	0x00000e9c
     e90:	.word	0x00000eac
     e94:	.word	0x00000eac
     e98:	.word	0x00000ebc
     e9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ea0:	lsl	r3, r3, #1
     ea4:	str	r3, [fp, #-40]	; 0xffffffd8
     ea8:	b	f0c <read_att_array+0x494>
     eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
     eb0:	lsl	r3, r3, #2
     eb4:	str	r3, [fp, #-40]	; 0xffffffd8
     eb8:	b	f0c <read_att_array+0x494>
     ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ec0:	lsl	r3, r3, #3
     ec4:	str	r3, [fp, #-40]	; 0xffffffd8
     ec8:	b	f0c <read_att_array+0x494>
     ecc:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ed0:	bl	0 <free>
     ed4:	ldr	r3, [fp, #-136]	; 0xffffff78
     ed8:	ldr	r3, [r3]
     edc:	mov	r0, r3
     ee0:	bl	0 <coda_dynamic_type_delete>
     ee4:	ldr	r3, [fp, #-80]	; 0xffffffb0
     ee8:	mov	r2, r3
     eec:	movw	r1, #0
     ef0:	movt	r1, #0
     ef4:	movw	r0, #65236	; 0xfed4
     ef8:	movt	r0, #65535	; 0xffff
     efc:	bl	0 <coda_set_error>
     f00:	mvn	r3, #0
     f04:	b	158c <read_att_array+0xb14>
     f08:	nop	{0}
     f0c:	ldr	r3, [fp, #-140]	; 0xffffff74
     f10:	cmp	r3, #0
     f14:	beq	1334 <read_att_array+0x8bc>
     f18:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     f1c:	cmp	r3, #0
     f20:	cmpeq	r2, #1
     f24:	bne	10b4 <read_att_array+0x63c>
     f28:	movw	r1, #0
     f2c:	movt	r1, #0
     f30:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f34:	bl	0 <strcmp>
     f38:	mov	r3, r0
     f3c:	cmp	r3, #0
     f40:	beq	f60 <read_att_array+0x4e8>
     f44:	movw	r1, #0
     f48:	movt	r1, #0
     f4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f50:	bl	0 <strcmp>
     f54:	mov	r3, r0
     f58:	cmp	r3, #0
     f5c:	bne	10b4 <read_att_array+0x63c>
     f60:	ldr	r3, [fp, #-80]	; 0xffffffb0
     f64:	cmp	r3, #5
     f68:	bne	1010 <read_att_array+0x598>
     f6c:	ldr	r3, [fp, #-128]	; 0xffffff80
     f70:	ldr	ip, [r3, #52]	; 0x34
     f74:	ldr	r3, [fp, #-132]	; 0xffffff7c
     f78:	ldrd	r0, [r3]
     f7c:	sub	r3, fp, #96	; 0x60
     f80:	str	r3, [sp, #8]
     f84:	mov	r2, #4
     f88:	mov	r3, #0
     f8c:	strd	r2, [sp]
     f90:	mov	r2, r0
     f94:	mov	r3, r1
     f98:	mov	r0, ip
     f9c:	bl	0 <read_bytes>
     fa0:	mov	r3, r0
     fa4:	cmp	r3, #0
     fa8:	bge	fcc <read_att_array+0x554>
     fac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     fb0:	bl	0 <free>
     fb4:	ldr	r3, [fp, #-136]	; 0xffffff78
     fb8:	ldr	r3, [r3]
     fbc:	mov	r0, r3
     fc0:	bl	0 <coda_dynamic_type_delete>
     fc4:	mvn	r3, #0
     fc8:	b	158c <read_att_array+0xb14>
     fcc:	sub	r3, fp, #96	; 0x60
     fd0:	mov	r0, r3
     fd4:	bl	29c <swap4>
     fd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fdc:	ldrb	r3, [r3]
     fe0:	cmp	r3, #115	; 0x73
     fe4:	bne	ffc <read_att_array+0x584>
     fe8:	vldr	s15, [fp, #-96]	; 0xffffffa0
     fec:	vcvt.f64.f32	d7, s15
     ff0:	ldr	r3, [fp, #-140]	; 0xffffff74
     ff4:	vstr	d7, [r3]
     ff8:	b	10b4 <read_att_array+0x63c>
     ffc:	vldr	s15, [fp, #-96]	; 0xffffffa0
    1000:	vcvt.f64.f32	d7, s15
    1004:	ldr	r3, [fp, #-140]	; 0xffffff74
    1008:	vstr	d7, [r3, #16]
    100c:	b	10b4 <read_att_array+0x63c>
    1010:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1014:	cmp	r3, #6
    1018:	bne	10b4 <read_att_array+0x63c>
    101c:	ldr	r3, [fp, #-128]	; 0xffffff80
    1020:	ldr	ip, [r3, #52]	; 0x34
    1024:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1028:	ldrd	r0, [r3]
    102c:	sub	r3, fp, #108	; 0x6c
    1030:	str	r3, [sp, #8]
    1034:	mov	r2, #8
    1038:	mov	r3, #0
    103c:	strd	r2, [sp]
    1040:	mov	r2, r0
    1044:	mov	r3, r1
    1048:	mov	r0, ip
    104c:	bl	0 <read_bytes>
    1050:	mov	r3, r0
    1054:	cmp	r3, #0
    1058:	bge	107c <read_att_array+0x604>
    105c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1060:	bl	0 <free>
    1064:	ldr	r3, [fp, #-136]	; 0xffffff78
    1068:	ldr	r3, [r3]
    106c:	mov	r0, r3
    1070:	bl	0 <coda_dynamic_type_delete>
    1074:	mvn	r3, #0
    1078:	b	158c <read_att_array+0xb14>
    107c:	sub	r3, fp, #108	; 0x6c
    1080:	mov	r0, r3
    1084:	bl	3b8 <swap8>
    1088:	ldr	r3, [fp, #-48]	; 0xffffffd0
    108c:	ldrb	r3, [r3]
    1090:	cmp	r3, #115	; 0x73
    1094:	bne	10a8 <read_att_array+0x630>
    1098:	ldrd	r0, [fp, #-108]	; 0xffffff94
    109c:	ldr	r3, [fp, #-140]	; 0xffffff74
    10a0:	strd	r0, [r3]
    10a4:	b	10b4 <read_att_array+0x63c>
    10a8:	ldrd	r0, [fp, #-108]	; 0xffffff94
    10ac:	ldr	r3, [fp, #-140]	; 0xffffff74
    10b0:	strd	r0, [r3, #16]
    10b4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    10b8:	cmp	r3, #0
    10bc:	cmpeq	r2, #1
    10c0:	bne	1334 <read_att_array+0x8bc>
    10c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    10c8:	cmp	r3, #2
    10cc:	beq	1334 <read_att_array+0x8bc>
    10d0:	movw	r1, #0
    10d4:	movt	r1, #0
    10d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10dc:	bl	0 <strcmp>
    10e0:	mov	r3, r0
    10e4:	cmp	r3, #0
    10e8:	beq	1124 <read_att_array+0x6ac>
    10ec:	movw	r1, #0
    10f0:	movt	r1, #0
    10f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10f8:	bl	0 <strcmp>
    10fc:	mov	r3, r0
    1100:	cmp	r3, #0
    1104:	bne	1334 <read_att_array+0x8bc>
    1108:	ldr	r3, [fp, #-140]	; 0xffffff74
    110c:	vldr	d7, [r3, #24]
    1110:	vmov.f64	d0, d7
    1114:	bl	0 <coda_isNaN>
    1118:	mov	r3, r0
    111c:	cmp	r3, #0
    1120:	beq	1334 <read_att_array+0x8bc>
    1124:	ldr	r3, [fp, #-128]	; 0xffffff80
    1128:	ldr	ip, [r3, #52]	; 0x34
    112c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1130:	ldrd	r4, [r3]
    1134:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1138:	mov	r0, r3
    113c:	asr	r1, r0, #31
    1140:	sub	r3, fp, #116	; 0x74
    1144:	str	r3, [sp, #8]
    1148:	strd	r0, [sp]
    114c:	mov	r2, r4
    1150:	mov	r3, r5
    1154:	mov	r0, ip
    1158:	bl	0 <read_bytes>
    115c:	mov	r3, r0
    1160:	cmp	r3, #0
    1164:	bge	1188 <read_att_array+0x710>
    1168:	ldr	r0, [fp, #-48]	; 0xffffffd0
    116c:	bl	0 <free>
    1170:	ldr	r3, [fp, #-136]	; 0xffffff78
    1174:	ldr	r3, [r3]
    1178:	mov	r0, r3
    117c:	bl	0 <coda_dynamic_type_delete>
    1180:	mvn	r3, #0
    1184:	b	158c <read_att_array+0xb14>
    1188:	ldr	r3, [fp, #-80]	; 0xffffffb0
    118c:	sub	r3, r3, #1
    1190:	cmp	r3, #10
    1194:	ldrls	pc, [pc, r3, lsl #2]
    1198:	b	1314 <read_att_array+0x89c>
    119c:	.word	0x000011c8
    11a0:	.word	0x00001314
    11a4:	.word	0x000011e0
    11a8:	.word	0x00001204
    11ac:	.word	0x00001228
    11b0:	.word	0x00001248
    11b4:	.word	0x00001264
    11b8:	.word	0x0000127c
    11bc:	.word	0x000012a0
    11c0:	.word	0x000012c4
    11c4:	.word	0x000012ec
    11c8:	ldrsb	r3, [fp, #-116]	; 0xffffff8c
    11cc:	vmov	s15, r3
    11d0:	vcvt.f64.s32	d7, s15
    11d4:	ldr	r3, [fp, #-140]	; 0xffffff74
    11d8:	vstr	d7, [r3, #24]
    11dc:	b	1334 <read_att_array+0x8bc>
    11e0:	sub	r3, fp, #116	; 0x74
    11e4:	mov	r0, r3
    11e8:	bl	204 <swap2>
    11ec:	ldrsh	r3, [fp, #-116]	; 0xffffff8c
    11f0:	vmov	s15, r3
    11f4:	vcvt.f64.s32	d7, s15
    11f8:	ldr	r3, [fp, #-140]	; 0xffffff74
    11fc:	vstr	d7, [r3, #24]
    1200:	b	1334 <read_att_array+0x8bc>
    1204:	sub	r3, fp, #116	; 0x74
    1208:	mov	r0, r3
    120c:	bl	29c <swap4>
    1210:	ldr	r3, [fp, #-116]	; 0xffffff8c
    1214:	vmov	s15, r3
    1218:	vcvt.f64.s32	d7, s15
    121c:	ldr	r3, [fp, #-140]	; 0xffffff74
    1220:	vstr	d7, [r3, #24]
    1224:	b	1334 <read_att_array+0x8bc>
    1228:	sub	r3, fp, #116	; 0x74
    122c:	mov	r0, r3
    1230:	bl	29c <swap4>
    1234:	vldr	s15, [fp, #-116]	; 0xffffff8c
    1238:	vcvt.f64.f32	d7, s15
    123c:	ldr	r3, [fp, #-140]	; 0xffffff74
    1240:	vstr	d7, [r3, #24]
    1244:	b	1334 <read_att_array+0x8bc>
    1248:	sub	r3, fp, #116	; 0x74
    124c:	mov	r0, r3
    1250:	bl	3b8 <swap8>
    1254:	ldrd	r0, [fp, #-116]	; 0xffffff8c
    1258:	ldr	r3, [fp, #-140]	; 0xffffff74
    125c:	strd	r0, [r3, #24]
    1260:	b	1334 <read_att_array+0x8bc>
    1264:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    1268:	vmov	s15, r3
    126c:	vcvt.f64.u32	d7, s15
    1270:	ldr	r3, [fp, #-140]	; 0xffffff74
    1274:	vstr	d7, [r3, #24]
    1278:	b	1334 <read_att_array+0x8bc>
    127c:	sub	r3, fp, #116	; 0x74
    1280:	mov	r0, r3
    1284:	bl	204 <swap2>
    1288:	ldrh	r3, [fp, #-116]	; 0xffffff8c
    128c:	vmov	s15, r3
    1290:	vcvt.f64.u32	d7, s15
    1294:	ldr	r3, [fp, #-140]	; 0xffffff74
    1298:	vstr	d7, [r3, #24]
    129c:	b	1334 <read_att_array+0x8bc>
    12a0:	sub	r3, fp, #116	; 0x74
    12a4:	mov	r0, r3
    12a8:	bl	29c <swap4>
    12ac:	ldr	r3, [fp, #-116]	; 0xffffff8c
    12b0:	vmov	s15, r3
    12b4:	vcvt.f64.u32	d7, s15
    12b8:	ldr	r3, [fp, #-140]	; 0xffffff74
    12bc:	vstr	d7, [r3, #24]
    12c0:	b	1334 <read_att_array+0x8bc>
    12c4:	sub	r3, fp, #116	; 0x74
    12c8:	mov	r0, r3
    12cc:	bl	3b8 <swap8>
    12d0:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    12d4:	mov	r0, r2
    12d8:	mov	r1, r3
    12dc:	bl	0 <__aeabi_l2d>
    12e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    12e4:	strd	r0, [r3, #24]
    12e8:	b	1334 <read_att_array+0x8bc>
    12ec:	sub	r3, fp, #116	; 0x74
    12f0:	mov	r0, r3
    12f4:	bl	3b8 <swap8>
    12f8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    12fc:	mov	r0, r2
    1300:	mov	r1, r3
    1304:	bl	0 <__aeabi_ul2d>
    1308:	ldr	r3, [fp, #-140]	; 0xffffff74
    130c:	strd	r0, [r3, #24]
    1310:	b	1334 <read_att_array+0x8bc>
    1314:	movw	r3, #0
    1318:	movt	r3, #0
    131c:	movw	r2, #417	; 0x1a1
    1320:	movw	r1, #0
    1324:	movt	r1, #0
    1328:	movw	r0, #0
    132c:	movt	r0, #0
    1330:	bl	0 <__assert_fail>
    1334:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1338:	cmp	r3, #2
    133c:	bne	1374 <read_att_array+0x8fc>
    1340:	ldr	ip, [fp, #-80]	; 0xffffffb0
    1344:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1348:	ldrd	r0, [r3]
    134c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    1350:	strd	r2, [sp, #8]
    1354:	mov	r3, #0
    1358:	str	r3, [sp]
    135c:	mov	r2, r0
    1360:	mov	r3, r1
    1364:	mov	r0, ip
    1368:	bl	0 <coda_netcdf_basic_type_new>
    136c:	str	r0, [fp, #-36]	; 0xffffffdc
    1370:	b	13a8 <read_att_array+0x930>
    1374:	ldr	ip, [fp, #-80]	; 0xffffffb0
    1378:	ldr	r3, [fp, #-132]	; 0xffffff7c
    137c:	ldrd	r0, [r3]
    1380:	mov	r2, #1
    1384:	mov	r3, #0
    1388:	strd	r2, [sp, #8]
    138c:	mov	r3, #0
    1390:	str	r3, [sp]
    1394:	mov	r2, r0
    1398:	mov	r3, r1
    139c:	mov	r0, ip
    13a0:	bl	0 <coda_netcdf_basic_type_new>
    13a4:	str	r0, [fp, #-36]	; 0xffffffdc
    13a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13ac:	cmp	r3, #0
    13b0:	bne	13d4 <read_att_array+0x95c>
    13b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    13b8:	bl	0 <free>
    13bc:	ldr	r3, [fp, #-136]	; 0xffffff78
    13c0:	ldr	r3, [r3]
    13c4:	mov	r0, r3
    13c8:	bl	0 <coda_dynamic_type_delete>
    13cc:	mvn	r3, #0
    13d0:	b	158c <read_att_array+0xb14>
    13d4:	ldr	r3, [fp, #-132]	; 0xffffff7c
    13d8:	ldrd	r0, [r3]
    13dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    13e0:	mov	r2, r3
    13e4:	asr	r3, r2, #31
    13e8:	adds	ip, r0, r2
    13ec:	str	ip, [fp, #-180]	; 0xffffff4c
    13f0:	adc	r3, r1, r3
    13f4:	str	r3, [fp, #-176]	; 0xffffff50
    13f8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    13fc:	ldrd	r0, [fp, #-180]	; 0xffffff4c
    1400:	strd	r0, [r3]
    1404:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1408:	and	r3, r3, #3
    140c:	cmp	r3, #0
    1410:	beq	144c <read_att_array+0x9d4>
    1414:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1418:	ldrd	r0, [r3]
    141c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1420:	and	r3, r3, #3
    1424:	rsb	r3, r3, #4
    1428:	mov	r2, r3
    142c:	asr	r3, r2, #31
    1430:	adds	ip, r0, r2
    1434:	str	ip, [fp, #-188]	; 0xffffff44
    1438:	adc	r3, r1, r3
    143c:	str	r3, [fp, #-184]	; 0xffffff48
    1440:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1444:	ldrd	r0, [fp, #-188]	; 0xffffff44
    1448:	strd	r0, [r3]
    144c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1450:	cmp	r3, #2
    1454:	beq	1468 <read_att_array+0x9f0>
    1458:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    145c:	cmp	r3, #0
    1460:	cmpeq	r2, #1
    1464:	bne	14b4 <read_att_array+0xa3c>
    1468:	ldr	r3, [fp, #-136]	; 0xffffff78
    146c:	ldr	r0, [r3]
    1470:	mov	r3, #1
    1474:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1478:	ldr	r1, [fp, #-48]	; 0xffffffd0
    147c:	bl	0 <coda_mem_record_add_field>
    1480:	mov	r3, r0
    1484:	cmp	r3, #0
    1488:	beq	1558 <read_att_array+0xae0>
    148c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1490:	bl	0 <coda_dynamic_type_delete>
    1494:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1498:	bl	0 <free>
    149c:	ldr	r3, [fp, #-136]	; 0xffffff78
    14a0:	ldr	r3, [r3]
    14a4:	mov	r0, r3
    14a8:	bl	0 <coda_dynamic_type_delete>
    14ac:	mvn	r3, #0
    14b0:	b	158c <read_att_array+0xb14>
    14b4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    14b8:	mov	r3, r2
    14bc:	str	r3, [fp, #-120]	; 0xffffff88
    14c0:	sub	r3, fp, #120	; 0x78
    14c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    14c8:	mov	r1, r3
    14cc:	mov	r0, #1
    14d0:	bl	0 <coda_netcdf_array_new>
    14d4:	str	r0, [fp, #-52]	; 0xffffffcc
    14d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14dc:	cmp	r3, #0
    14e0:	bne	150c <read_att_array+0xa94>
    14e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    14e8:	bl	0 <coda_dynamic_type_delete>
    14ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14f0:	bl	0 <free>
    14f4:	ldr	r3, [fp, #-136]	; 0xffffff78
    14f8:	ldr	r3, [r3]
    14fc:	mov	r0, r3
    1500:	bl	0 <coda_dynamic_type_delete>
    1504:	mvn	r3, #0
    1508:	b	158c <read_att_array+0xb14>
    150c:	ldr	r3, [fp, #-136]	; 0xffffff78
    1510:	ldr	r0, [r3]
    1514:	mov	r3, #1
    1518:	ldr	r2, [fp, #-52]	; 0xffffffcc
    151c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1520:	bl	0 <coda_mem_record_add_field>
    1524:	mov	r3, r0
    1528:	cmp	r3, #0
    152c:	beq	1558 <read_att_array+0xae0>
    1530:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1534:	bl	0 <coda_dynamic_type_delete>
    1538:	ldr	r0, [fp, #-48]	; 0xffffffd0
    153c:	bl	0 <free>
    1540:	ldr	r3, [fp, #-136]	; 0xffffff78
    1544:	ldr	r3, [r3]
    1548:	mov	r0, r3
    154c:	bl	0 <coda_dynamic_type_delete>
    1550:	mvn	r3, #0
    1554:	b	158c <read_att_array+0xb14>
    1558:	ldr	r0, [fp, #-48]	; 0xffffffd0
    155c:	bl	0 <free>
    1560:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1564:	add	r3, r3, #1
    1568:	str	r3, [fp, #-32]	; 0xffffffe0
    156c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1570:	mov	r0, r3
    1574:	asr	r1, r0, #31
    1578:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    157c:	cmp	r0, r2
    1580:	sbcs	r3, r1, r3
    1584:	blt	c0c <read_att_array+0x194>
    1588:	mov	r3, #0
    158c:	mov	r0, r3
    1590:	sub	sp, fp, #28
    1594:	ldrd	r4, [sp]
    1598:	ldrd	r6, [sp, #8]
    159c:	ldrd	r8, [sp, #16]
    15a0:	ldr	fp, [sp, #24]
    15a4:	add	sp, sp, #28
    15a8:	pop	{pc}		; (ldr pc, [sp], #4)

000015ac <read_var_array>:
    15ac:	strd	r4, [sp, #-32]!	; 0xffffffe0
    15b0:	strd	r6, [sp, #8]
    15b4:	strd	r8, [sp, #16]
    15b8:	str	fp, [sp, #24]
    15bc:	str	lr, [sp, #28]
    15c0:	add	fp, sp, #28
    15c4:	sub	sp, sp, #240	; 0xf0
    15c8:	str	r0, [fp, #-184]	; 0xffffff48
    15cc:	str	r1, [fp, #-188]	; 0xffffff44
    15d0:	strd	r2, [fp, #-196]	; 0xffffff3c
    15d4:	ldr	r3, [fp, #-184]	; 0xffffff48
    15d8:	ldr	ip, [r3, #52]	; 0x34
    15dc:	ldr	r3, [fp, #-188]	; 0xffffff44
    15e0:	ldrd	r0, [r3]
    15e4:	sub	r3, fp, #72	; 0x48
    15e8:	str	r3, [sp, #8]
    15ec:	mov	r2, #4
    15f0:	mov	r3, #0
    15f4:	strd	r2, [sp]
    15f8:	mov	r2, r0
    15fc:	mov	r3, r1
    1600:	mov	r0, ip
    1604:	bl	0 <read_bytes>
    1608:	mov	r3, r0
    160c:	cmp	r3, #0
    1610:	bge	1648 <read_var_array+0x9c>
    1614:	bl	0 <__errno_location>
    1618:	mov	r3, r0
    161c:	ldr	r3, [r3]
    1620:	mov	r0, r3
    1624:	bl	0 <strerror>
    1628:	mov	r3, r0
    162c:	mov	r2, r3
    1630:	movw	r1, #0
    1634:	movt	r1, #0
    1638:	mvn	r0, #21
    163c:	bl	0 <coda_set_error>
    1640:	mvn	r3, #0
    1644:	b	20d4 <read_var_array+0xb28>
    1648:	sub	r3, fp, #72	; 0x48
    164c:	mov	r0, r3
    1650:	bl	29c <swap4>
    1654:	ldr	r3, [fp, #-188]	; 0xffffff44
    1658:	ldrd	r2, [r3]
    165c:	adds	r4, r2, #4
    1660:	adc	r5, r3, #0
    1664:	ldr	r3, [fp, #-188]	; 0xffffff44
    1668:	strd	r4, [r3]
    166c:	sub	r3, fp, #84	; 0x54
    1670:	mov	r2, r3
    1674:	ldr	r1, [fp, #-188]	; 0xffffff44
    1678:	ldr	r0, [fp, #-184]	; 0xffffff48
    167c:	bl	5dc <read_length_value>
    1680:	mov	r3, r0
    1684:	cmp	r3, #0
    1688:	beq	1694 <read_var_array+0xe8>
    168c:	mvn	r3, #0
    1690:	b	20d4 <read_var_array+0xb28>
    1694:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1698:	cmp	r3, #0
    169c:	bne	16d0 <read_var_array+0x124>
    16a0:	ldrd	r2, [fp, #-84]	; 0xffffffac
    16a4:	orrs	r3, r2, r3
    16a8:	beq	16c8 <read_var_array+0x11c>
    16ac:	movw	r1, #0
    16b0:	movt	r1, #0
    16b4:	movw	r0, #65236	; 0xfed4
    16b8:	movt	r0, #65535	; 0xffff
    16bc:	bl	0 <coda_set_error>
    16c0:	mvn	r3, #0
    16c4:	b	20d4 <read_var_array+0xb28>
    16c8:	mov	r3, #0
    16cc:	b	20d4 <read_var_array+0xb28>
    16d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    16d4:	cmp	r3, #11
    16d8:	beq	16f8 <read_var_array+0x14c>
    16dc:	movw	r1, #0
    16e0:	movt	r1, #0
    16e4:	movw	r0, #65236	; 0xfed4
    16e8:	movt	r0, #65535	; 0xffff
    16ec:	bl	0 <coda_set_error>
    16f0:	mvn	r3, #0
    16f4:	b	20d4 <read_var_array+0xb28>
    16f8:	mov	r3, #0
    16fc:	str	r3, [fp, #-32]	; 0xffffffe0
    1700:	b	20b4 <read_var_array+0xb08>
    1704:	mov	r3, #0
    1708:	str	r3, [fp, #-88]	; 0xffffffa8
    170c:	mov	r3, #0
    1710:	str	r3, [fp, #-44]	; 0xffffffd4
    1714:	mov	r3, #0
    1718:	str	r3, [fp, #-48]	; 0xffffffd0
    171c:	mov	r3, #0
    1720:	str	r3, [fp, #-52]	; 0xffffffcc
    1724:	sub	r3, fp, #108	; 0x6c
    1728:	mov	r2, r3
    172c:	ldr	r1, [fp, #-188]	; 0xffffff44
    1730:	ldr	r0, [fp, #-184]	; 0xffffff48
    1734:	bl	5dc <read_length_value>
    1738:	mov	r3, r0
    173c:	cmp	r3, #0
    1740:	beq	174c <read_var_array+0x1a0>
    1744:	mvn	r3, #0
    1748:	b	20d4 <read_var_array+0xb28>
    174c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1750:	mov	r3, r2
    1754:	add	r3, r3, #1
    1758:	mov	r0, r3
    175c:	bl	0 <malloc>
    1760:	mov	r3, r0
    1764:	str	r3, [fp, #-64]	; 0xffffffc0
    1768:	ldr	r3, [fp, #-64]	; 0xffffffc0
    176c:	cmp	r3, #0
    1770:	bne	17ac <read_var_array+0x200>
    1774:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1778:	mov	r3, r2
    177c:	add	r3, r3, #1
    1780:	mov	r2, r3
    1784:	movw	r3, #546	; 0x222
    1788:	str	r3, [sp]
    178c:	movw	r3, #0
    1790:	movt	r3, #0
    1794:	movw	r1, #0
    1798:	movt	r1, #0
    179c:	mvn	r0, #0
    17a0:	bl	0 <coda_set_error>
    17a4:	mvn	r3, #0
    17a8:	b	20d4 <read_var_array+0xb28>
    17ac:	ldrd	r2, [fp, #-108]	; 0xffffff94
    17b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    17b4:	add	r2, r3, r2
    17b8:	mov	r3, #0
    17bc:	strb	r3, [r2]
    17c0:	ldr	r3, [fp, #-184]	; 0xffffff48
    17c4:	ldr	ip, [r3, #52]	; 0x34
    17c8:	ldr	r3, [fp, #-188]	; 0xffffff44
    17cc:	ldrd	r4, [r3]
    17d0:	ldrd	r0, [fp, #-108]	; 0xffffff94
    17d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    17d8:	str	r3, [sp, #8]
    17dc:	strd	r0, [sp]
    17e0:	mov	r2, r4
    17e4:	mov	r3, r5
    17e8:	mov	r0, ip
    17ec:	bl	0 <read_bytes>
    17f0:	mov	r3, r0
    17f4:	cmp	r3, #0
    17f8:	bge	180c <read_var_array+0x260>
    17fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1800:	bl	0 <free>
    1804:	mvn	r3, #0
    1808:	b	20d4 <read_var_array+0xb28>
    180c:	ldr	r3, [fp, #-188]	; 0xffffff44
    1810:	ldrd	r0, [r3]
    1814:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1818:	adds	ip, r0, r2
    181c:	str	ip, [fp, #-204]	; 0xffffff34
    1820:	adc	r3, r1, r3
    1824:	str	r3, [fp, #-200]	; 0xffffff38
    1828:	ldr	r3, [fp, #-188]	; 0xffffff44
    182c:	ldrd	r0, [fp, #-204]	; 0xffffff34
    1830:	strd	r0, [r3]
    1834:	ldrd	r0, [fp, #-108]	; 0xffffff94
    1838:	mov	r2, #3
    183c:	mov	r3, #0
    1840:	and	ip, r0, r2
    1844:	str	ip, [fp, #-212]	; 0xffffff2c
    1848:	and	r3, r1, r3
    184c:	str	r3, [fp, #-208]	; 0xffffff30
    1850:	ldrd	r2, [fp, #-212]	; 0xffffff2c
    1854:	orrs	r3, r2, r3
    1858:	beq	18a4 <read_var_array+0x2f8>
    185c:	ldr	r3, [fp, #-188]	; 0xffffff44
    1860:	ldrd	r4, [r3]
    1864:	ldrd	r0, [fp, #-108]	; 0xffffff94
    1868:	mov	r2, #3
    186c:	mov	r3, #0
    1870:	and	r8, r0, r2
    1874:	and	r9, r1, r3
    1878:	mov	r2, #4
    187c:	mov	r3, #0
    1880:	subs	r6, r2, r8
    1884:	sbc	r7, r3, r9
    1888:	adds	r3, r4, r6
    188c:	str	r3, [fp, #-220]	; 0xffffff24
    1890:	adc	r3, r5, r7
    1894:	str	r3, [fp, #-216]	; 0xffffff28
    1898:	ldr	r3, [fp, #-188]	; 0xffffff44
    189c:	ldrd	r0, [fp, #-220]	; 0xffffff24
    18a0:	strd	r0, [r3]
    18a4:	sub	r3, fp, #124	; 0x7c
    18a8:	mov	r2, r3
    18ac:	ldr	r1, [fp, #-188]	; 0xffffff44
    18b0:	ldr	r0, [fp, #-184]	; 0xffffff48
    18b4:	bl	5dc <read_length_value>
    18b8:	mov	r3, r0
    18bc:	cmp	r3, #0
    18c0:	beq	18cc <read_var_array+0x320>
    18c4:	mvn	r3, #0
    18c8:	b	20d4 <read_var_array+0xb28>
    18cc:	mov	r3, #0
    18d0:	str	r3, [fp, #-56]	; 0xffffffc8
    18d4:	mov	r3, #0
    18d8:	str	r3, [fp, #-60]	; 0xffffffc4
    18dc:	b	1a60 <read_var_array+0x4b4>
    18e0:	sub	r3, fp, #140	; 0x8c
    18e4:	mov	r2, r3
    18e8:	ldr	r1, [fp, #-188]	; 0xffffff44
    18ec:	ldr	r0, [fp, #-184]	; 0xffffff48
    18f0:	bl	5dc <read_length_value>
    18f4:	mov	r3, r0
    18f8:	cmp	r3, #0
    18fc:	beq	1908 <read_var_array+0x35c>
    1900:	mvn	r3, #0
    1904:	b	20d4 <read_var_array+0xb28>
    1908:	ldrd	r2, [fp, #-140]	; 0xffffff74
    190c:	cmp	r2, #0
    1910:	sbcs	r3, r3, #0
    1914:	blt	192c <read_var_array+0x380>
    1918:	ldrd	r0, [fp, #-140]	; 0xffffff74
    191c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    1920:	cmp	r0, r2
    1924:	sbcs	r3, r1, r3
    1928:	blt	1954 <read_var_array+0x3a8>
    192c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1930:	bl	0 <free>
    1934:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1938:	movw	r1, #0
    193c:	movt	r1, #0
    1940:	movw	r0, #65236	; 0xfed4
    1944:	movt	r0, #65535	; 0xffff
    1948:	bl	0 <coda_set_error>
    194c:	mvn	r3, #0
    1950:	b	20d4 <read_var_array+0xb28>
    1954:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1958:	mov	r0, r3
    195c:	asr	r1, r0, #31
    1960:	ldrd	r2, [fp, #-124]	; 0xffffff84
    1964:	subs	ip, r2, #1
    1968:	str	ip, [fp, #-228]	; 0xffffff1c
    196c:	sbc	r3, r3, #0
    1970:	str	r3, [fp, #-224]	; 0xffffff20
    1974:	ldrd	r2, [fp, #-228]	; 0xffffff1c
    1978:	cmp	r1, r3
    197c:	cmpeq	r0, r2
    1980:	bne	19b0 <read_var_array+0x404>
    1984:	ldrd	r2, [fp, #-140]	; 0xffffff74
    1988:	mov	r3, r2
    198c:	lsl	r2, r3, #3
    1990:	ldr	r3, [fp, #4]
    1994:	add	r3, r3, r2
    1998:	ldrd	r2, [r3]
    199c:	mov	r3, r2
    19a0:	str	r3, [fp, #-44]	; 0xffffffd4
    19a4:	mov	r3, #1
    19a8:	str	r3, [fp, #-48]	; 0xffffffd0
    19ac:	b	1a20 <read_var_array+0x474>
    19b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19b4:	cmp	r3, #7
    19b8:	bgt	19f8 <read_var_array+0x44c>
    19bc:	ldrd	r2, [fp, #-140]	; 0xffffff74
    19c0:	mov	r3, r2
    19c4:	lsl	r2, r3, #3
    19c8:	ldr	r3, [fp, #4]
    19cc:	add	r3, r3, r2
    19d0:	ldrd	r2, [r3]
    19d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19d8:	lsl	r3, r3, #2
    19dc:	sub	r1, fp, #28
    19e0:	add	r3, r1, r3
    19e4:	str	r2, [r3, #-148]	; 0xffffff6c
    19e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    19ec:	add	r3, r3, #1
    19f0:	str	r3, [fp, #-56]	; 0xffffffc8
    19f4:	b	1a20 <read_var_array+0x474>
    19f8:	ldr	r1, [fp, #-148]	; 0xffffff6c
    19fc:	ldrd	r2, [fp, #-140]	; 0xffffff74
    1a00:	mov	r3, r2
    1a04:	lsl	r2, r3, #3
    1a08:	ldr	r3, [fp, #4]
    1a0c:	add	r3, r3, r2
    1a10:	ldrd	r2, [r3]
    1a14:	mov	r3, r2
    1a18:	mul	r3, r3, r1
    1a1c:	str	r3, [fp, #-148]	; 0xffffff6c
    1a20:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a24:	cmp	r3, #0
    1a28:	bne	1a54 <read_var_array+0x4a8>
    1a2c:	ldr	r3, [fp, #8]
    1a30:	mov	r0, r3
    1a34:	asr	r1, r0, #31
    1a38:	ldrd	r2, [fp, #-140]	; 0xffffff74
    1a3c:	cmp	r1, r3
    1a40:	cmpeq	r0, r2
    1a44:	moveq	r3, #1
    1a48:	movne	r3, #0
    1a4c:	uxtb	r3, r3
    1a50:	str	r3, [fp, #-52]	; 0xffffffcc
    1a54:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a58:	add	r3, r3, #1
    1a5c:	str	r3, [fp, #-60]	; 0xffffffc4
    1a60:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a64:	mov	r0, r3
    1a68:	asr	r1, r0, #31
    1a6c:	ldrd	r2, [fp, #-124]	; 0xffffff84
    1a70:	cmp	r0, r2
    1a74:	sbcs	r3, r1, r3
    1a78:	blt	18e0 <read_var_array+0x334>
    1a7c:	bl	0 <coda_NaN>
    1a80:	vmov.f64	d7, d0
    1a84:	vmov.f64	d3, d7
    1a88:	vldr	d2, [pc, #1000]	; 1e78 <read_var_array+0x8cc>
    1a8c:	vldr	d1, [pc, #1004]	; 1e80 <read_var_array+0x8d4>
    1a90:	vldr	d0, [pc, #1000]	; 1e80 <read_var_array+0x8d4>
    1a94:	bl	0 <coda_conversion_new>
    1a98:	str	r0, [fp, #-40]	; 0xffffffd8
    1a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1aa0:	cmp	r3, #0
    1aa4:	bne	1ab8 <read_var_array+0x50c>
    1aa8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1aac:	bl	0 <free>
    1ab0:	mvn	r3, #0
    1ab4:	b	20d4 <read_var_array+0xb28>
    1ab8:	sub	r2, fp, #88	; 0x58
    1abc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1ac0:	ldr	r1, [fp, #-188]	; 0xffffff44
    1ac4:	ldr	r0, [fp, #-184]	; 0xffffff48
    1ac8:	bl	a78 <read_att_array>
    1acc:	mov	r3, r0
    1ad0:	cmp	r3, #0
    1ad4:	beq	1af0 <read_var_array+0x544>
    1ad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1adc:	bl	0 <coda_conversion_delete>
    1ae0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1ae4:	bl	0 <free>
    1ae8:	mvn	r3, #0
    1aec:	b	20d4 <read_var_array+0xb28>
    1af0:	ldr	r3, [fp, #-184]	; 0xffffff48
    1af4:	ldr	ip, [r3, #52]	; 0x34
    1af8:	ldr	r3, [fp, #-188]	; 0xffffff44
    1afc:	ldrd	r0, [r3]
    1b00:	sub	r3, fp, #112	; 0x70
    1b04:	str	r3, [sp, #8]
    1b08:	mov	r2, #4
    1b0c:	mov	r3, #0
    1b10:	strd	r2, [sp]
    1b14:	mov	r2, r0
    1b18:	mov	r3, r1
    1b1c:	mov	r0, ip
    1b20:	bl	0 <read_bytes>
    1b24:	mov	r3, r0
    1b28:	cmp	r3, #0
    1b2c:	bge	1b54 <read_var_array+0x5a8>
    1b30:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1b34:	mov	r0, r3
    1b38:	bl	0 <coda_dynamic_type_delete>
    1b3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1b40:	bl	0 <coda_conversion_delete>
    1b44:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1b48:	bl	0 <free>
    1b4c:	mvn	r3, #0
    1b50:	b	20d4 <read_var_array+0xb28>
    1b54:	sub	r3, fp, #112	; 0x70
    1b58:	mov	r0, r3
    1b5c:	bl	29c <swap4>
    1b60:	ldr	r3, [fp, #-188]	; 0xffffff44
    1b64:	ldrd	r2, [r3]
    1b68:	adds	r1, r2, #4
    1b6c:	str	r1, [fp, #-236]	; 0xffffff14
    1b70:	adc	r3, r3, #0
    1b74:	str	r3, [fp, #-232]	; 0xffffff18
    1b78:	ldr	r3, [fp, #-188]	; 0xffffff44
    1b7c:	ldrd	r0, [fp, #-236]	; 0xffffff14
    1b80:	strd	r0, [r3]
    1b84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1b88:	vldr	d7, [r3]
    1b8c:	vldr	d6, [pc, #748]	; 1e80 <read_var_array+0x8d4>
    1b90:	vcmp.f64	d7, d6
    1b94:	vmrs	APSR_nzcv, fpscr
    1b98:	bne	1bf4 <read_var_array+0x648>
    1b9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1ba0:	vldr	d7, [r3, #16]
    1ba4:	vcmp.f64	d7, #0.0
    1ba8:	vmrs	APSR_nzcv, fpscr
    1bac:	bne	1bf4 <read_var_array+0x648>
    1bb0:	ldr	r3, [fp, #-112]	; 0xffffff90
    1bb4:	cmp	r3, #5
    1bb8:	beq	1bc8 <read_var_array+0x61c>
    1bbc:	ldr	r3, [fp, #-112]	; 0xffffff90
    1bc0:	cmp	r3, #6
    1bc4:	bne	1be4 <read_var_array+0x638>
    1bc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1bcc:	vldr	d7, [r3, #24]
    1bd0:	vmov.f64	d0, d7
    1bd4:	bl	0 <coda_isNaN>
    1bd8:	mov	r3, r0
    1bdc:	cmp	r3, #0
    1be0:	beq	1bf4 <read_var_array+0x648>
    1be4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1be8:	bl	0 <coda_conversion_delete>
    1bec:	mov	r3, #0
    1bf0:	str	r3, [fp, #-40]	; 0xffffffd8
    1bf4:	sub	r3, fp, #132	; 0x84
    1bf8:	mov	r2, r3
    1bfc:	ldr	r1, [fp, #-188]	; 0xffffff44
    1c00:	ldr	r0, [fp, #-184]	; 0xffffff48
    1c04:	bl	5dc <read_length_value>
    1c08:	mov	r3, r0
    1c0c:	cmp	r3, #0
    1c10:	beq	1c38 <read_var_array+0x68c>
    1c14:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1c18:	mov	r0, r3
    1c1c:	bl	0 <coda_dynamic_type_delete>
    1c20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1c24:	bl	0 <coda_conversion_delete>
    1c28:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1c2c:	bl	0 <free>
    1c30:	mvn	r3, #0
    1c34:	b	20d4 <read_var_array+0xb28>
    1c38:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1c3c:	cmp	r3, #0
    1c40:	beq	1c60 <read_var_array+0x6b4>
    1c44:	ldr	r3, [fp, #-184]	; 0xffffff48
    1c48:	ldr	r1, [r3, #60]	; 0x3c
    1c4c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    1c50:	mov	r3, r2
    1c54:	add	r2, r1, r3
    1c58:	ldr	r3, [fp, #-184]	; 0xffffff48
    1c5c:	str	r2, [r3, #60]	; 0x3c
    1c60:	ldr	r3, [fp, #-184]	; 0xffffff48
    1c64:	ldr	r3, [r3, #56]	; 0x38
    1c68:	cmp	r3, #1
    1c6c:	bne	1d18 <read_var_array+0x76c>
    1c70:	ldr	r3, [fp, #-184]	; 0xffffff48
    1c74:	ldr	ip, [r3, #52]	; 0x34
    1c78:	ldr	r3, [fp, #-188]	; 0xffffff44
    1c7c:	ldrd	r0, [r3]
    1c80:	sub	r3, fp, #144	; 0x90
    1c84:	str	r3, [sp, #8]
    1c88:	mov	r2, #4
    1c8c:	mov	r3, #0
    1c90:	strd	r2, [sp]
    1c94:	mov	r2, r0
    1c98:	mov	r3, r1
    1c9c:	mov	r0, ip
    1ca0:	bl	0 <read_bytes>
    1ca4:	mov	r3, r0
    1ca8:	cmp	r3, #0
    1cac:	bge	1cd4 <read_var_array+0x728>
    1cb0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1cb4:	mov	r0, r3
    1cb8:	bl	0 <coda_dynamic_type_delete>
    1cbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1cc0:	bl	0 <coda_conversion_delete>
    1cc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1cc8:	bl	0 <free>
    1ccc:	mvn	r3, #0
    1cd0:	b	20d4 <read_var_array+0xb28>
    1cd4:	sub	r3, fp, #144	; 0x90
    1cd8:	mov	r0, r3
    1cdc:	bl	29c <swap4>
    1ce0:	ldr	r3, [fp, #-144]	; 0xffffff70
    1ce4:	mov	r2, r3
    1ce8:	asr	r3, r2, #31
    1cec:	strd	r2, [fp, #-100]	; 0xffffff9c
    1cf0:	ldr	r3, [fp, #-188]	; 0xffffff44
    1cf4:	ldrd	r2, [r3]
    1cf8:	adds	r1, r2, #4
    1cfc:	str	r1, [fp, #-244]	; 0xffffff0c
    1d00:	adc	r3, r3, #0
    1d04:	str	r3, [fp, #-240]	; 0xffffff10
    1d08:	ldr	r3, [fp, #-188]	; 0xffffff44
    1d0c:	ldrd	r0, [fp, #-244]	; 0xffffff0c
    1d10:	strd	r0, [r3]
    1d14:	b	1dac <read_var_array+0x800>
    1d18:	ldr	r3, [fp, #-184]	; 0xffffff48
    1d1c:	ldr	ip, [r3, #52]	; 0x34
    1d20:	ldr	r3, [fp, #-188]	; 0xffffff44
    1d24:	ldrd	r0, [r3]
    1d28:	sub	r3, fp, #100	; 0x64
    1d2c:	str	r3, [sp, #8]
    1d30:	mov	r2, #8
    1d34:	mov	r3, #0
    1d38:	strd	r2, [sp]
    1d3c:	mov	r2, r0
    1d40:	mov	r3, r1
    1d44:	mov	r0, ip
    1d48:	bl	0 <read_bytes>
    1d4c:	mov	r3, r0
    1d50:	cmp	r3, #0
    1d54:	bge	1d7c <read_var_array+0x7d0>
    1d58:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1d5c:	mov	r0, r3
    1d60:	bl	0 <coda_dynamic_type_delete>
    1d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1d68:	bl	0 <coda_conversion_delete>
    1d6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1d70:	bl	0 <free>
    1d74:	mvn	r3, #0
    1d78:	b	20d4 <read_var_array+0xb28>
    1d7c:	sub	r3, fp, #100	; 0x64
    1d80:	mov	r0, r3
    1d84:	bl	3b8 <swap8>
    1d88:	ldr	r3, [fp, #-188]	; 0xffffff44
    1d8c:	ldrd	r2, [r3]
    1d90:	adds	r1, r2, #8
    1d94:	str	r1, [fp, #-252]	; 0xffffff04
    1d98:	adc	r3, r3, #0
    1d9c:	str	r3, [fp, #-248]	; 0xffffff08
    1da0:	ldr	r3, [fp, #-188]	; 0xffffff44
    1da4:	ldrd	r0, [fp, #-252]	; 0xffffff04
    1da8:	strd	r0, [r3]
    1dac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1db0:	cmp	r3, #0
    1db4:	beq	1e9c <read_var_array+0x8f0>
    1db8:	ldr	r3, [fp, #-112]	; 0xffffff90
    1dbc:	cmp	r3, #2
    1dc0:	bne	1e14 <read_var_array+0x868>
    1dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1dc8:	cmp	r3, #0
    1dcc:	bne	1ddc <read_var_array+0x830>
    1dd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1dd4:	cmp	r3, #0
    1dd8:	bne	1e14 <read_var_array+0x868>
    1ddc:	ldr	ip, [fp, #-112]	; 0xffffff90
    1de0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    1de4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1de8:	mov	r2, r3
    1dec:	asr	r3, r2, #31
    1df0:	strd	r2, [sp, #8]
    1df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1df8:	str	r3, [sp]
    1dfc:	mov	r2, r0
    1e00:	mov	r3, r1
    1e04:	mov	r0, ip
    1e08:	bl	0 <coda_netcdf_basic_type_new>
    1e0c:	str	r0, [fp, #-36]	; 0xffffffdc
    1e10:	b	1ecc <read_var_array+0x920>
    1e14:	ldr	ip, [fp, #-112]	; 0xffffff90
    1e18:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    1e1c:	mov	r2, #1
    1e20:	mov	r3, #0
    1e24:	strd	r2, [sp, #8]
    1e28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e2c:	str	r3, [sp]
    1e30:	mov	r2, r0
    1e34:	mov	r3, r1
    1e38:	mov	r0, ip
    1e3c:	bl	0 <coda_netcdf_basic_type_new>
    1e40:	str	r0, [fp, #-36]	; 0xffffffdc
    1e44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e48:	cmp	r3, #7
    1e4c:	bgt	1e88 <read_var_array+0x8dc>
    1e50:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e54:	lsl	r2, r3, #2
    1e58:	sub	r3, fp, #28
    1e5c:	add	r2, r3, r2
    1e60:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1e64:	str	r3, [r2, #-148]	; 0xffffff6c
    1e68:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1e6c:	add	r3, r3, #1
    1e70:	str	r3, [fp, #-56]	; 0xffffffc8
    1e74:	b	1ecc <read_var_array+0x920>
	...
    1e84:	.word	0x3ff00000
    1e88:	ldr	r2, [fp, #-148]	; 0xffffff6c
    1e8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1e90:	mul	r3, r3, r2
    1e94:	str	r3, [fp, #-148]	; 0xffffff6c
    1e98:	b	1ecc <read_var_array+0x920>
    1e9c:	ldr	ip, [fp, #-112]	; 0xffffff90
    1ea0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    1ea4:	mov	r2, #1
    1ea8:	mov	r3, #0
    1eac:	strd	r2, [sp, #8]
    1eb0:	mov	r3, #0
    1eb4:	str	r3, [sp]
    1eb8:	mov	r2, r0
    1ebc:	mov	r3, r1
    1ec0:	mov	r0, ip
    1ec4:	bl	0 <coda_netcdf_basic_type_new>
    1ec8:	str	r0, [fp, #-36]	; 0xffffffdc
    1ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ed0:	cmp	r3, #0
    1ed4:	bne	1efc <read_var_array+0x950>
    1ed8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1edc:	mov	r0, r3
    1ee0:	bl	0 <coda_dynamic_type_delete>
    1ee4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1ee8:	bl	0 <coda_conversion_delete>
    1eec:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1ef0:	bl	0 <free>
    1ef4:	mvn	r3, #0
    1ef8:	b	20d4 <read_var_array+0xb28>
    1efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1f00:	cmp	r3, #0
    1f04:	beq	1f44 <read_var_array+0x998>
    1f08:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1f0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f10:	bl	0 <coda_netcdf_basic_type_set_conversion>
    1f14:	mov	r3, r0
    1f18:	cmp	r3, #0
    1f1c:	beq	1f44 <read_var_array+0x998>
    1f20:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1f24:	mov	r0, r3
    1f28:	bl	0 <coda_dynamic_type_delete>
    1f2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1f30:	bl	0 <coda_conversion_delete>
    1f34:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1f38:	bl	0 <free>
    1f3c:	mvn	r3, #0
    1f40:	b	20d4 <read_var_array+0xb28>
    1f44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1f48:	cmp	r3, #0
    1f4c:	bne	1fd4 <read_var_array+0xa28>
    1f50:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1f54:	cmp	r3, #0
    1f58:	beq	1f9c <read_var_array+0x9f0>
    1f5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1f60:	mov	r1, r3
    1f64:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f68:	bl	0 <coda_netcdf_basic_type_set_attributes>
    1f6c:	mov	r3, r0
    1f70:	cmp	r3, #0
    1f74:	beq	1f9c <read_var_array+0x9f0>
    1f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f7c:	bl	0 <coda_dynamic_type_delete>
    1f80:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1f84:	mov	r0, r3
    1f88:	bl	0 <coda_dynamic_type_delete>
    1f8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1f90:	bl	0 <free>
    1f94:	mvn	r3, #0
    1f98:	b	20d4 <read_var_array+0xb28>
    1f9c:	mov	r3, #1
    1fa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1fa4:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1fa8:	ldr	r0, [fp, #12]
    1fac:	bl	0 <coda_mem_record_add_field>
    1fb0:	mov	r3, r0
    1fb4:	cmp	r3, #0
    1fb8:	beq	20a0 <read_var_array+0xaf4>
    1fbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1fc0:	bl	0 <coda_dynamic_type_delete>
    1fc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    1fc8:	bl	0 <free>
    1fcc:	mvn	r3, #0
    1fd0:	b	20d4 <read_var_array+0xb28>
    1fd4:	sub	r3, fp, #176	; 0xb0
    1fd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1fdc:	mov	r1, r3
    1fe0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1fe4:	bl	0 <coda_netcdf_array_new>
    1fe8:	str	r0, [fp, #-68]	; 0xffffffbc
    1fec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ff0:	cmp	r3, #0
    1ff4:	bne	201c <read_var_array+0xa70>
    1ff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ffc:	bl	0 <coda_dynamic_type_delete>
    2000:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2004:	mov	r0, r3
    2008:	bl	0 <coda_dynamic_type_delete>
    200c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2010:	bl	0 <free>
    2014:	mvn	r3, #0
    2018:	b	20d4 <read_var_array+0xb28>
    201c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2020:	cmp	r3, #0
    2024:	beq	2068 <read_var_array+0xabc>
    2028:	ldr	r3, [fp, #-88]	; 0xffffffa8
    202c:	mov	r1, r3
    2030:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2034:	bl	0 <coda_netcdf_array_set_attributes>
    2038:	mov	r3, r0
    203c:	cmp	r3, #0
    2040:	beq	2068 <read_var_array+0xabc>
    2044:	ldr	r0, [fp, #-68]	; 0xffffffbc
    2048:	bl	0 <coda_dynamic_type_delete>
    204c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2050:	mov	r0, r3
    2054:	bl	0 <coda_dynamic_type_delete>
    2058:	ldr	r0, [fp, #-64]	; 0xffffffc0
    205c:	bl	0 <free>
    2060:	mvn	r3, #0
    2064:	b	20d4 <read_var_array+0xb28>
    2068:	mov	r3, #1
    206c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    2070:	ldr	r1, [fp, #-64]	; 0xffffffc0
    2074:	ldr	r0, [fp, #12]
    2078:	bl	0 <coda_mem_record_add_field>
    207c:	mov	r3, r0
    2080:	cmp	r3, #0
    2084:	beq	20a0 <read_var_array+0xaf4>
    2088:	ldr	r0, [fp, #-68]	; 0xffffffbc
    208c:	bl	0 <coda_dynamic_type_delete>
    2090:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2094:	bl	0 <free>
    2098:	mvn	r3, #0
    209c:	b	20d4 <read_var_array+0xb28>
    20a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    20a4:	bl	0 <free>
    20a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20ac:	add	r3, r3, #1
    20b0:	str	r3, [fp, #-32]	; 0xffffffe0
    20b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20b8:	mov	r0, r3
    20bc:	asr	r1, r0, #31
    20c0:	ldrd	r2, [fp, #-84]	; 0xffffffac
    20c4:	cmp	r0, r2
    20c8:	sbcs	r3, r1, r3
    20cc:	blt	1704 <read_var_array+0x158>
    20d0:	mov	r3, #0
    20d4:	mov	r0, r3
    20d8:	sub	sp, fp, #28
    20dc:	ldrd	r4, [sp]
    20e0:	ldrd	r6, [sp, #8]
    20e4:	ldrd	r8, [sp, #16]
    20e8:	ldr	fp, [sp, #24]
    20ec:	add	sp, sp, #28
    20f0:	pop	{pc}		; (ldr pc, [sp], #4)

000020f4 <coda_netcdf_reopen>:
    20f4:	strd	r4, [sp, #-16]!
    20f8:	str	fp, [sp, #8]
    20fc:	str	lr, [sp, #12]
    2100:	add	fp, sp, #12
    2104:	sub	sp, sp, #88	; 0x58
    2108:	str	r0, [fp, #-80]	; 0xffffffb0
    210c:	mov	r3, #0
    2110:	str	r3, [fp, #-56]	; 0xffffffc8
    2114:	mov	r2, #0
    2118:	mov	r3, #0
    211c:	strd	r2, [fp, #-68]	; 0xffffffbc
    2120:	mvn	r3, #0
    2124:	str	r3, [fp, #-72]	; 0xffffffb8
    2128:	mov	r0, #64	; 0x40
    212c:	bl	0 <malloc>
    2130:	mov	r3, r0
    2134:	str	r3, [fp, #-16]
    2138:	ldr	r3, [fp, #-16]
    213c:	cmp	r3, #0
    2140:	bne	2180 <coda_netcdf_reopen+0x8c>
    2144:	movw	r3, #801	; 0x321
    2148:	str	r3, [sp]
    214c:	movw	r3, #0
    2150:	movt	r3, #0
    2154:	mov	r2, #64	; 0x40
    2158:	movw	r1, #0
    215c:	movt	r1, #0
    2160:	mvn	r0, #0
    2164:	bl	0 <coda_set_error>
    2168:	ldr	r3, [fp, #-80]	; 0xffffffb0
    216c:	ldr	r3, [r3]
    2170:	mov	r0, r3
    2174:	bl	0 <coda_close>
    2178:	mvn	r3, #0
    217c:	b	25e8 <coda_netcdf_reopen+0x4f4>
    2180:	ldr	r3, [fp, #-16]
    2184:	mov	r2, #0
    2188:	str	r2, [r3]
    218c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    2190:	ldr	r3, [r3]
    2194:	ldrd	r2, [r3, #8]
    2198:	ldr	r1, [fp, #-16]
    219c:	strd	r2, [r1, #8]
    21a0:	ldr	r3, [fp, #-16]
    21a4:	mov	r2, #6
    21a8:	str	r2, [r3, #16]
    21ac:	ldr	r3, [fp, #-16]
    21b0:	mov	r2, #0
    21b4:	str	r2, [r3, #20]
    21b8:	ldr	r3, [fp, #-16]
    21bc:	mov	r2, #0
    21c0:	str	r2, [r3, #24]
    21c4:	ldr	r3, [fp, #-16]
    21c8:	mov	r2, #0
    21cc:	str	r2, [r3, #28]
    21d0:	ldr	r3, [fp, #-16]
    21d4:	mov	r2, #0
    21d8:	str	r2, [r3, #32]
    21dc:	ldr	r1, [fp, #-16]
    21e0:	mov	r2, #0
    21e4:	mov	r3, #0
    21e8:	strd	r2, [r1, #40]	; 0x28
    21ec:	ldr	r3, [fp, #-16]
    21f0:	mov	r2, #0
    21f4:	str	r2, [r3, #48]	; 0x30
    21f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    21fc:	ldr	r2, [r3]
    2200:	ldr	r3, [fp, #-16]
    2204:	str	r2, [r3, #52]	; 0x34
    2208:	ldr	r3, [fp, #-16]
    220c:	mov	r2, #1
    2210:	str	r2, [r3, #56]	; 0x38
    2214:	ldr	r3, [fp, #-16]
    2218:	mov	r2, #0
    221c:	str	r2, [r3, #60]	; 0x3c
    2220:	ldr	r3, [fp, #-80]	; 0xffffffb0
    2224:	ldr	r3, [r3]
    2228:	ldr	r3, [r3]
    222c:	mov	r0, r3
    2230:	bl	0 <strdup>
    2234:	mov	r3, r0
    2238:	mov	r2, r3
    223c:	ldr	r3, [fp, #-16]
    2240:	str	r2, [r3]
    2244:	ldr	r3, [fp, #-16]
    2248:	ldr	r3, [r3]
    224c:	cmp	r3, #0
    2250:	bne	2280 <coda_netcdf_reopen+0x18c>
    2254:	movw	r3, #823	; 0x337
    2258:	movw	r2, #0
    225c:	movt	r2, #0
    2260:	movw	r1, #0
    2264:	movt	r1, #0
    2268:	mvn	r0, #0
    226c:	bl	0 <coda_set_error>
    2270:	ldr	r0, [fp, #-16]
    2274:	bl	2600 <coda_netcdf_close>
    2278:	mvn	r3, #0
    227c:	b	25e8 <coda_netcdf_reopen+0x4f4>
    2280:	mov	r0, #6
    2284:	bl	0 <coda_type_record_new>
    2288:	str	r0, [fp, #-20]	; 0xffffffec
    228c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2290:	cmp	r3, #0
    2294:	bne	22a8 <coda_netcdf_reopen+0x1b4>
    2298:	ldr	r0, [fp, #-16]
    229c:	bl	2600 <coda_netcdf_close>
    22a0:	mvn	r3, #0
    22a4:	b	25e8 <coda_netcdf_reopen+0x4f4>
    22a8:	mov	r1, #0
    22ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    22b0:	bl	0 <coda_mem_record_new>
    22b4:	str	r0, [fp, #-24]	; 0xffffffe8
    22b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    22bc:	bl	0 <coda_type_release>
    22c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    22c4:	cmp	r3, #0
    22c8:	bne	22dc <coda_netcdf_reopen+0x1e8>
    22cc:	ldr	r0, [fp, #-16]
    22d0:	bl	2600 <coda_netcdf_close>
    22d4:	mvn	r3, #0
    22d8:	b	25e8 <coda_netcdf_reopen+0x4f4>
    22dc:	ldr	r3, [fp, #-16]
    22e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    22e4:	str	r2, [r3, #20]
    22e8:	ldr	r3, [fp, #-16]
    22ec:	ldr	ip, [r3, #52]	; 0x34
    22f0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    22f4:	sub	r3, fp, #32
    22f8:	str	r3, [sp, #8]
    22fc:	mov	r2, #4
    2300:	mov	r3, #0
    2304:	strd	r2, [sp]
    2308:	mov	r2, r0
    230c:	mov	r3, r1
    2310:	mov	r0, ip
    2314:	bl	0 <read_bytes>
    2318:	mov	r3, r0
    231c:	cmp	r3, #0
    2320:	bge	2360 <coda_netcdf_reopen+0x26c>
    2324:	bl	0 <__errno_location>
    2328:	mov	r3, r0
    232c:	ldr	r3, [r3]
    2330:	mov	r0, r3
    2334:	bl	0 <strerror>
    2338:	mov	r3, r0
    233c:	mov	r2, r3
    2340:	movw	r1, #0
    2344:	movt	r1, #0
    2348:	mvn	r0, #21
    234c:	bl	0 <coda_set_error>
    2350:	ldr	r0, [fp, #-16]
    2354:	bl	2600 <coda_netcdf_close>
    2358:	mvn	r3, #0
    235c:	b	25e8 <coda_netcdf_reopen+0x4f4>
    2360:	ldrb	r3, [fp, #-32]	; 0xffffffe0
    2364:	cmp	r3, #67	; 0x43
    2368:	bne	2384 <coda_netcdf_reopen+0x290>
    236c:	ldrb	r3, [fp, #-31]	; 0xffffffe1
    2370:	cmp	r3, #68	; 0x44
    2374:	bne	2384 <coda_netcdf_reopen+0x290>
    2378:	ldrb	r3, [fp, #-30]	; 0xffffffe2
    237c:	cmp	r3, #70	; 0x46
    2380:	beq	23a4 <coda_netcdf_reopen+0x2b0>
    2384:	movw	r3, #0
    2388:	movt	r3, #0
    238c:	movw	r2, #851	; 0x353
    2390:	movw	r1, #0
    2394:	movt	r1, #0
    2398:	movw	r0, #0
    239c:	movt	r0, #0
    23a0:	bl	0 <__assert_fail>
    23a4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
    23a8:	mov	r2, r3
    23ac:	ldr	r3, [fp, #-16]
    23b0:	str	r2, [r3, #56]	; 0x38
    23b4:	ldr	r3, [fp, #-16]
    23b8:	ldr	r3, [r3, #56]	; 0x38
    23bc:	cmp	r3, #1
    23c0:	beq	2410 <coda_netcdf_reopen+0x31c>
    23c4:	ldr	r3, [fp, #-16]
    23c8:	ldr	r3, [r3, #56]	; 0x38
    23cc:	cmp	r3, #2
    23d0:	beq	2410 <coda_netcdf_reopen+0x31c>
    23d4:	ldr	r3, [fp, #-16]
    23d8:	ldr	r3, [r3, #56]	; 0x38
    23dc:	cmp	r3, #5
    23e0:	beq	2410 <coda_netcdf_reopen+0x31c>
    23e4:	ldr	r3, [fp, #-16]
    23e8:	ldr	r3, [r3, #56]	; 0x38
    23ec:	mov	r2, r3
    23f0:	movw	r1, #0
    23f4:	movt	r1, #0
    23f8:	mvn	r0, #199	; 0xc7
    23fc:	bl	0 <coda_set_error>
    2400:	ldr	r0, [fp, #-16]
    2404:	bl	2600 <coda_netcdf_close>
    2408:	mvn	r3, #0
    240c:	b	25e8 <coda_netcdf_reopen+0x4f4>
    2410:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    2414:	adds	r4, r2, #4
    2418:	adc	r5, r3, #0
    241c:	strd	r4, [fp, #-68]	; 0xffffffbc
    2420:	sub	r2, fp, #44	; 0x2c
    2424:	sub	r3, fp, #68	; 0x44
    2428:	mov	r1, r3
    242c:	ldr	r0, [fp, #-16]
    2430:	bl	5dc <read_length_value>
    2434:	mov	r3, r0
    2438:	cmp	r3, #0
    243c:	beq	247c <coda_netcdf_reopen+0x388>
    2440:	bl	0 <__errno_location>
    2444:	mov	r3, r0
    2448:	ldr	r3, [r3]
    244c:	mov	r0, r3
    2450:	bl	0 <strerror>
    2454:	mov	r3, r0
    2458:	mov	r2, r3
    245c:	movw	r1, #0
    2460:	movt	r1, #0
    2464:	mvn	r0, #21
    2468:	bl	0 <coda_set_error>
    246c:	ldr	r0, [fp, #-16]
    2470:	bl	2600 <coda_netcdf_close>
    2474:	mvn	r3, #0
    2478:	b	25e8 <coda_netcdf_reopen+0x4f4>
    247c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2480:	sub	r0, fp, #68	; 0x44
    2484:	sub	r1, fp, #72	; 0x48
    2488:	str	r1, [sp, #8]
    248c:	sub	r1, fp, #56	; 0x38
    2490:	str	r1, [sp, #4]
    2494:	sub	r1, fp, #52	; 0x34
    2498:	str	r1, [sp]
    249c:	mov	r1, r0
    24a0:	ldr	r0, [fp, #-16]
    24a4:	bl	71c <read_dim_array>
    24a8:	mov	r3, r0
    24ac:	cmp	r3, #0
    24b0:	beq	24c4 <coda_netcdf_reopen+0x3d0>
    24b4:	ldr	r0, [fp, #-16]
    24b8:	bl	2600 <coda_netcdf_close>
    24bc:	mvn	r3, #0
    24c0:	b	25e8 <coda_netcdf_reopen+0x4f4>
    24c4:	sub	r2, fp, #28
    24c8:	sub	r1, fp, #68	; 0x44
    24cc:	mov	r3, #0
    24d0:	ldr	r0, [fp, #-16]
    24d4:	bl	a78 <read_att_array>
    24d8:	mov	r3, r0
    24dc:	cmp	r3, #0
    24e0:	beq	250c <coda_netcdf_reopen+0x418>
    24e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    24e8:	cmp	r3, #0
    24ec:	beq	24fc <coda_netcdf_reopen+0x408>
    24f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    24f4:	mov	r0, r3
    24f8:	bl	0 <free>
    24fc:	ldr	r0, [fp, #-16]
    2500:	bl	2600 <coda_netcdf_close>
    2504:	mvn	r3, #0
    2508:	b	25e8 <coda_netcdf_reopen+0x4f4>
    250c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2510:	cmp	r3, #0
    2514:	beq	2560 <coda_netcdf_reopen+0x46c>
    2518:	ldr	r3, [fp, #-28]	; 0xffffffe4
    251c:	mov	r2, #1
    2520:	mov	r1, r3
    2524:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2528:	bl	0 <coda_mem_type_set_attributes>
    252c:	mov	r3, r0
    2530:	cmp	r3, #0
    2534:	beq	2560 <coda_netcdf_reopen+0x46c>
    2538:	ldr	r3, [fp, #-56]	; 0xffffffc8
    253c:	cmp	r3, #0
    2540:	beq	2550 <coda_netcdf_reopen+0x45c>
    2544:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2548:	mov	r0, r3
    254c:	bl	0 <free>
    2550:	ldr	r0, [fp, #-16]
    2554:	bl	2600 <coda_netcdf_close>
    2558:	mvn	r3, #0
    255c:	b	25e8 <coda_netcdf_reopen+0x4f4>
    2560:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2564:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2568:	ldr	r0, [fp, #-72]	; 0xffffffb8
    256c:	sub	lr, fp, #68	; 0x44
    2570:	ldr	ip, [fp, #-24]	; 0xffffffe8
    2574:	str	ip, [sp, #8]
    2578:	str	r0, [sp, #4]
    257c:	str	r1, [sp]
    2580:	mov	r1, lr
    2584:	ldr	r0, [fp, #-16]
    2588:	bl	15ac <read_var_array>
    258c:	mov	r3, r0
    2590:	cmp	r3, #0
    2594:	beq	25c0 <coda_netcdf_reopen+0x4cc>
    2598:	ldr	r3, [fp, #-56]	; 0xffffffc8
    259c:	cmp	r3, #0
    25a0:	beq	25b0 <coda_netcdf_reopen+0x4bc>
    25a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    25a8:	mov	r0, r3
    25ac:	bl	0 <free>
    25b0:	ldr	r0, [fp, #-16]
    25b4:	bl	2600 <coda_netcdf_close>
    25b8:	mvn	r3, #0
    25bc:	b	25e8 <coda_netcdf_reopen+0x4f4>
    25c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    25c4:	cmp	r3, #0
    25c8:	beq	25d8 <coda_netcdf_reopen+0x4e4>
    25cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    25d0:	mov	r0, r3
    25d4:	bl	0 <free>
    25d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    25dc:	ldr	r2, [fp, #-16]
    25e0:	str	r2, [r3]
    25e4:	mov	r3, #0
    25e8:	mov	r0, r3
    25ec:	sub	sp, fp, #12
    25f0:	ldrd	r4, [sp]
    25f4:	ldr	fp, [sp, #8]
    25f8:	add	sp, sp, #12
    25fc:	pop	{pc}		; (ldr pc, [sp], #4)

00002600 <coda_netcdf_close>:
    2600:	str	fp, [sp, #-8]!
    2604:	str	lr, [sp, #4]
    2608:	add	fp, sp, #4
    260c:	sub	sp, sp, #16
    2610:	str	r0, [fp, #-16]
    2614:	ldr	r3, [fp, #-16]
    2618:	str	r3, [fp, #-8]
    261c:	ldr	r3, [fp, #-8]
    2620:	ldr	r3, [r3]
    2624:	cmp	r3, #0
    2628:	beq	263c <coda_netcdf_close+0x3c>
    262c:	ldr	r3, [fp, #-8]
    2630:	ldr	r3, [r3]
    2634:	mov	r0, r3
    2638:	bl	0 <free>
    263c:	ldr	r3, [fp, #-8]
    2640:	ldr	r3, [r3, #20]
    2644:	cmp	r3, #0
    2648:	beq	265c <coda_netcdf_close+0x5c>
    264c:	ldr	r3, [fp, #-8]
    2650:	ldr	r3, [r3, #20]
    2654:	mov	r0, r3
    2658:	bl	0 <coda_dynamic_type_delete>
    265c:	ldr	r3, [fp, #-8]
    2660:	ldr	r3, [r3, #48]	; 0x30
    2664:	cmp	r3, #0
    2668:	beq	267c <coda_netcdf_close+0x7c>
    266c:	ldr	r3, [fp, #-8]
    2670:	ldr	r3, [r3, #48]	; 0x30
    2674:	mov	r0, r3
    2678:	bl	0 <free>
    267c:	ldr	r3, [fp, #-8]
    2680:	ldr	r3, [r3, #52]	; 0x34
    2684:	cmp	r3, #0
    2688:	beq	269c <coda_netcdf_close+0x9c>
    268c:	ldr	r3, [fp, #-8]
    2690:	ldr	r3, [r3, #52]	; 0x34
    2694:	mov	r0, r3
    2698:	bl	0 <coda_bin_close>
    269c:	ldr	r0, [fp, #-8]
    26a0:	bl	0 <free>
    26a4:	mov	r3, #0
    26a8:	mov	r0, r3
    26ac:	sub	sp, fp, #4
    26b0:	ldr	fp, [sp]
    26b4:	add	sp, sp, #4
    26b8:	pop	{pc}		; (ldr pc, [sp], #4)
