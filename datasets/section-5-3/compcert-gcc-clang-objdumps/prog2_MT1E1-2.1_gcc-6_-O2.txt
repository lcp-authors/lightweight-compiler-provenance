
../compcert-repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b30 <.init>:
   10b30:	push	{r3, lr}
   10b34:	bl	10ee4 <_start@@Base+0x3c>
   10b38:	pop	{r3, pc}

Disassembly of section .plt:

00010b3c <calloc@plt-0x14>:
   10b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b40:	ldr	lr, [pc, #4]	; 10b4c <calloc@plt-0x4>
   10b44:	add	lr, pc, lr
   10b48:	ldr	pc, [lr, #8]!
   10b4c:			; <UNDEFINED> instruction: 0x000114b4

00010b50 <calloc@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b5c <strcmp@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b68 <free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b74 <memcpy@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1180]!	; 0x49c

00010b80 <realloc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1172]!	; 0x494

00010b8c <fwrite@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1164]!	; 0x48c

00010b98 <strcpy@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1156]!	; 0x484

00010ba4 <puts@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb0 <malloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1140]!	; 0x474

00010bbc <__libc_start_main@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bc8 <__gmon_start__@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1124]!	; 0x464

00010bd4 <strlen@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1116]!	; 0x45c

00010be0 <fprintf@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1108]!	; 0x454

00010bec <sprintf@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1100]!	; 0x44c

00010bf8 <abort@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010c04 <main@@Base>:
   10c04:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c08:	bl	111d0 <vetor_novo@@Base>
   10c0c:	ldr	r8, [pc, #608]	; 10e74 <main@@Base+0x270>
   10c10:	mov	r4, #0
   10c14:	mov	r6, r0
   10c18:	mov	r2, r4
   10c1c:	ldr	r1, [r8, r4, lsl #2]
   10c20:	mov	r0, r6
   10c24:	add	r4, r4, #1
   10c28:	bl	11318 <vetor_insere@@Base>
   10c2c:	cmp	r4, #4
   10c30:	bne	10c18 <main@@Base+0x14>
   10c34:	bl	115c4 <lista_nova@@Base>
   10c38:	add	r5, r8, #12
   10c3c:	add	r7, r8, #220	; 0xdc
   10c40:	mov	r4, r0
   10c44:	ldr	r1, [r5, #4]!
   10c48:	mov	r0, r4
   10c4c:	bl	11110 <insere_carta@@Base>
   10c50:	cmp	r5, r7
   10c54:	bne	10c44 <main@@Base+0x40>
   10c58:	bl	115c4 <lista_nova@@Base>
   10c5c:	ldr	r5, [pc, #532]	; 10e78 <main@@Base+0x274>
   10c60:	mov	r9, #0
   10c64:	add	sl, r5, #52	; 0x34
   10c68:	mov	r7, r0
   10c6c:	ldr	r1, [r5, #4]!
   10c70:	mov	r2, r9
   10c74:	mov	r0, r7
   10c78:	bl	11650 <lista_insere@@Base>
   10c7c:	cmp	r5, sl
   10c80:	bne	10c6c <main@@Base+0x68>
   10c84:	ldr	r9, [pc, #496]	; 10e7c <main@@Base+0x278>
   10c88:	mov	r1, r7
   10c8c:	mov	r0, r4
   10c90:	ldr	r5, [r9]
   10c94:	bl	10fd0 <tira_carta@@Base>
   10c98:	ldr	r1, [pc, #480]	; 10e80 <main@@Base+0x27c>
   10c9c:	ldr	fp, [pc, #480]	; 10e84 <main@@Base+0x280>
   10ca0:	mov	sl, #44	; 0x2c
   10ca4:	mov	r2, r0
   10ca8:	mov	r0, r5
   10cac:	bl	10be0 <fprintf@plt>
   10cb0:	mov	r1, r7
   10cb4:	mov	r0, r4
   10cb8:	ldr	r5, [r9]
   10cbc:	bl	10fd0 <tira_carta@@Base>
   10cc0:	ldr	r1, [pc, #448]	; 10e88 <main@@Base+0x284>
   10cc4:	mov	r2, r0
   10cc8:	mov	r0, r5
   10ccc:	bl	10be0 <fprintf@plt>
   10cd0:	mov	r1, r7
   10cd4:	mov	r0, r4
   10cd8:	ldr	r5, [r9]
   10cdc:	bl	10fd0 <tira_carta@@Base>
   10ce0:	ldr	r1, [pc, #420]	; 10e8c <main@@Base+0x288>
   10ce4:	mov	r2, r0
   10ce8:	mov	r0, r5
   10cec:	bl	10be0 <fprintf@plt>
   10cf0:	ldr	r1, [r8, #212]	; 0xd4
   10cf4:	mov	r0, r4
   10cf8:	bl	11110 <insere_carta@@Base>
   10cfc:	ldr	r1, [r8, #216]	; 0xd8
   10d00:	mov	r0, r4
   10d04:	bl	11110 <insere_carta@@Base>
   10d08:	ldr	r1, [r8, #220]	; 0xdc
   10d0c:	mov	r0, r4
   10d10:	bl	11110 <insere_carta@@Base>
   10d14:	bl	111d0 <vetor_novo@@Base>
   10d18:	mov	r5, #0
   10d1c:	mov	r8, r0
   10d20:	mov	r2, r7
   10d24:	mov	r1, r4
   10d28:	mov	r0, r6
   10d2c:	bl	11020 <faz_jogada@@Base>
   10d30:	mov	r2, r5
   10d34:	add	r5, r5, #1
   10d38:	subs	r1, r0, #0
   10d3c:	mov	r0, r8
   10d40:	beq	10d48 <main@@Base+0x144>
   10d44:	bl	11318 <vetor_insere@@Base>
   10d48:	mov	r0, r6
   10d4c:	bl	112d4 <vetor_tamanho@@Base>
   10d50:	mov	r2, sl
   10d54:	mov	r1, #1
   10d58:	cmp	r0, #4
   10d5c:	mov	r0, fp
   10d60:	beq	10d6c <main@@Base+0x168>
   10d64:	ldr	r3, [r9]
   10d68:	bl	10b8c <fwrite@plt>
   10d6c:	cmp	r5, #13
   10d70:	bne	10d20 <main@@Base+0x11c>
   10d74:	ldr	r0, [pc, #276]	; 10e90 <main@@Base+0x28c>
   10d78:	bl	10ba4 <puts@plt>
   10d7c:	ldr	r3, [r8]
   10d80:	cmp	r3, #0
   10d84:	ble	10dd8 <main@@Base+0x1d4>
   10d88:	ldr	fp, [pc, #260]	; 10e94 <main@@Base+0x290>
   10d8c:	mov	r1, #0
   10d90:	mov	r0, r8
   10d94:	add	r5, r1, #1
   10d98:	ldr	sl, [r9]
   10d9c:	bl	112e4 <vetor_elemento@@Base>
   10da0:	mov	r1, fp
   10da4:	mov	r2, r5
   10da8:	mov	r3, r0
   10dac:	mov	r0, sl
   10db0:	bl	10be0 <fprintf@plt>
   10db4:	ldr	r3, [r8]
   10db8:	mov	r1, r5
   10dbc:	cmp	r3, r5
   10dc0:	movgt	r3, #1
   10dc4:	movle	r3, #0
   10dc8:	cmp	r5, #2
   10dcc:	movgt	r3, #0
   10dd0:	cmp	r3, #0
   10dd4:	bne	10d90 <main@@Base+0x18c>
   10dd8:	mov	r0, r8
   10ddc:	bl	111f4 <vetor_apaga@@Base>
   10de0:	bl	111d0 <vetor_novo@@Base>
   10de4:	ldr	sl, [pc, #172]	; 10e98 <main@@Base+0x294>
   10de8:	mov	r8, #0
   10dec:	mov	r5, r0
   10df0:	mov	r2, r8
   10df4:	ldr	r1, [sl, #4]!
   10df8:	add	r8, r8, #1
   10dfc:	mov	r0, r5
   10e00:	bl	11318 <vetor_insere@@Base>
   10e04:	cmp	r8, #13
   10e08:	bne	10df0 <main@@Base+0x1ec>
   10e0c:	ldr	r0, [pc, #136]	; 10e9c <main@@Base+0x298>
   10e10:	bl	10ba4 <puts@plt>
   10e14:	ldr	r8, [pc, #88]	; 10e74 <main@@Base+0x270>
   10e18:	ldr	sl, [r8], #4
   10e1c:	mov	r0, r5
   10e20:	mov	r1, sl
   10e24:	bl	110c4 <numero_vitorias@@Base>
   10e28:	ldr	fp, [r9]
   10e2c:	mov	r2, sl
   10e30:	ldr	r1, [pc, #104]	; 10ea0 <main@@Base+0x29c>
   10e34:	mov	r3, r0
   10e38:	mov	r0, fp
   10e3c:	bl	10be0 <fprintf@plt>
   10e40:	ldr	r3, [pc, #92]	; 10ea4 <main@@Base+0x2a0>
   10e44:	cmp	r3, r8
   10e48:	bne	10e18 <main@@Base+0x214>
   10e4c:	mov	r0, r6
   10e50:	bl	111f4 <vetor_apaga@@Base>
   10e54:	mov	r0, r4
   10e58:	bl	115e8 <lista_apaga@@Base>
   10e5c:	mov	r0, r7
   10e60:	bl	115e8 <lista_apaga@@Base>
   10e64:	mov	r0, r5
   10e68:	bl	111f4 <vetor_apaga@@Base>
   10e6c:	mov	r0, #0
   10e70:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e74:	andeq	r2, r2, r4, asr r0
   10e78:	andeq	r2, r2, r0, lsr r1
   10e7c:	andeq	r2, r2, r0, lsr #3
   10e80:	muleq	r1, r8, r9
   10e84:	strdeq	r1, [r1], -r4
   10e88:			; <UNDEFINED> instruction: 0x000119b8
   10e8c:	ldrdeq	r1, [r1], -r4
   10e90:	andeq	r1, r1, r4, lsr #20
   10e94:	andeq	r1, r1, ip, asr #20
   10e98:	andeq	r2, r2, r4, ror #2
   10e9c:	andeq	r1, r1, r0, lsr #20
   10ea0:	andeq	r1, r1, ip, asr sl
   10ea4:	andeq	r2, r2, r4, rrx

00010ea8 <_start@@Base>:
   10ea8:	mov	fp, #0
   10eac:	mov	lr, #0
   10eb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10eb4:	mov	r2, sp
   10eb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ebc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ec0:	ldr	ip, [pc, #16]	; 10ed8 <_start@@Base+0x30>
   10ec4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ec8:	ldr	r0, [pc, #12]	; 10edc <_start@@Base+0x34>
   10ecc:	ldr	r3, [pc, #12]	; 10ee0 <_start@@Base+0x38>
   10ed0:	bl	10bbc <__libc_start_main@plt>
   10ed4:	bl	10bf8 <abort@plt>
   10ed8:	andeq	r1, r1, r0, lsl #19
   10edc:	andeq	r0, r1, r4, lsl #24
   10ee0:	andeq	r1, r1, r0, lsr #18
   10ee4:	ldr	r3, [pc, #20]	; 10f00 <_start@@Base+0x58>
   10ee8:	ldr	r2, [pc, #20]	; 10f04 <_start@@Base+0x5c>
   10eec:	add	r3, pc, r3
   10ef0:	ldr	r2, [r3, r2]
   10ef4:	cmp	r2, #0
   10ef8:	bxeq	lr
   10efc:	b	10bc8 <__gmon_start__@plt>
   10f00:	andeq	r1, r1, ip, lsl #2
   10f04:	andeq	r0, r0, r8, asr #32
   10f08:	ldr	r3, [pc, #28]	; 10f2c <_start@@Base+0x84>
   10f0c:	ldr	r0, [pc, #28]	; 10f30 <_start@@Base+0x88>
   10f10:	sub	r3, r3, r0
   10f14:	cmp	r3, #6
   10f18:	bxls	lr
   10f1c:	ldr	r3, [pc, #16]	; 10f34 <_start@@Base+0x8c>
   10f20:	cmp	r3, #0
   10f24:	bxeq	lr
   10f28:	bx	r3
   10f2c:	muleq	r2, pc, r1	; <UNPREDICTABLE>
   10f30:	muleq	r2, ip, r1
   10f34:	andeq	r0, r0, r0
   10f38:	ldr	r1, [pc, #36]	; 10f64 <_start@@Base+0xbc>
   10f3c:	ldr	r0, [pc, #36]	; 10f68 <_start@@Base+0xc0>
   10f40:	sub	r1, r1, r0
   10f44:	asr	r1, r1, #2
   10f48:	add	r1, r1, r1, lsr #31
   10f4c:	asrs	r1, r1, #1
   10f50:	bxeq	lr
   10f54:	ldr	r3, [pc, #16]	; 10f6c <_start@@Base+0xc4>
   10f58:	cmp	r3, #0
   10f5c:	bxeq	lr
   10f60:	bx	r3
   10f64:	muleq	r2, ip, r1
   10f68:	muleq	r2, ip, r1
   10f6c:	andeq	r0, r0, r0
   10f70:	push	{r4, lr}
   10f74:	ldr	r4, [pc, #24]	; 10f94 <_start@@Base+0xec>
   10f78:	ldrb	r3, [r4]
   10f7c:	cmp	r3, #0
   10f80:	popne	{r4, pc}
   10f84:	bl	10f08 <_start@@Base+0x60>
   10f88:	mov	r3, #1
   10f8c:	strb	r3, [r4]
   10f90:	pop	{r4, pc}
   10f94:	andeq	r2, r2, r4, lsr #3
   10f98:	ldr	r0, [pc, #40]	; 10fc8 <_start@@Base+0x120>
   10f9c:	ldr	r3, [r0]
   10fa0:	cmp	r3, #0
   10fa4:	bne	10fac <_start@@Base+0x104>
   10fa8:	b	10f38 <_start@@Base+0x90>
   10fac:	ldr	r3, [pc, #24]	; 10fcc <_start@@Base+0x124>
   10fb0:	cmp	r3, #0
   10fb4:	beq	10fa8 <_start@@Base+0x100>
   10fb8:	push	{r4, lr}
   10fbc:	blx	r3
   10fc0:	pop	{r4, lr}
   10fc4:	b	10f38 <_start@@Base+0x90>
   10fc8:	andeq	r1, r2, r4, lsl pc
   10fcc:	andeq	r0, r0, r0

00010fd0 <tira_carta@@Base>:
   10fd0:	push	{r4, r5, r6, r7, r8, lr}
   10fd4:	mov	r7, r0
   10fd8:	ldr	r3, [r1]
   10fdc:	ldr	r8, [r0]
   10fe0:	mov	r5, #0
   10fe4:	ldr	r0, [r3]
   10fe8:	ldr	r6, [r8]
   10fec:	ldr	r4, [r3, #4]
   10ff0:	b	10ffc <tira_carta@@Base+0x2c>
   10ff4:	ldm	r4, {r0, r4}
   10ff8:	add	r5, r5, #1
   10ffc:	mov	r1, r6
   11000:	bl	10b5c <strcmp@plt>
   11004:	cmp	r0, #0
   11008:	bne	10ff4 <tira_carta@@Base+0x24>
   1100c:	mov	r1, r8
   11010:	mov	r0, r7
   11014:	bl	116ec <lista_remove@@Base>
   11018:	mov	r0, r5
   1101c:	pop	{r4, r5, r6, r7, r8, pc}

00011020 <faz_jogada@@Base>:
   11020:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11024:	mov	r5, r0
   11028:	ldr	r4, [r0]
   1102c:	mov	r9, r1
   11030:	mov	sl, r2
   11034:	lsl	r0, r4, #2
   11038:	bl	10bb0 <malloc@plt>
   1103c:	cmp	r4, #0
   11040:	movgt	r4, #0
   11044:	subgt	r7, r0, #4
   11048:	mov	r6, r0
   1104c:	movgt	r8, r7
   11050:	ble	110bc <faz_jogada@@Base+0x9c>
   11054:	mov	r1, sl
   11058:	mov	r0, r9
   1105c:	bl	10fd0 <tira_carta@@Base>
   11060:	ldr	r1, [r5]
   11064:	add	r4, r4, #1
   11068:	cmp	r1, r4
   1106c:	str	r0, [r8, #4]!
   11070:	bgt	11054 <faz_jogada@@Base+0x34>
   11074:	cmp	r1, #0
   11078:	ble	110bc <faz_jogada@@Base+0x9c>
   1107c:	mvn	ip, #0
   11080:	mov	r2, ip
   11084:	mov	r3, #0
   11088:	ldr	r0, [r7, #4]!
   1108c:	cmp	r0, r2
   11090:	movgt	ip, r3
   11094:	add	r3, r3, #1
   11098:	movgt	r2, r0
   1109c:	cmp	r1, r3
   110a0:	bne	11088 <faz_jogada@@Base+0x68>
   110a4:	lsl	r4, ip, #2
   110a8:	mov	r0, r6
   110ac:	bl	10b68 <free@plt>
   110b0:	ldr	r3, [r5, #8]
   110b4:	ldr	r0, [r3, r4]
   110b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   110bc:	mvn	r4, #3
   110c0:	b	110a8 <faz_jogada@@Base+0x88>

000110c4 <numero_vitorias@@Base>:
   110c4:	push	{r4, r5, r6, r7, r8, lr}
   110c8:	ldr	r5, [r0]
   110cc:	cmp	r5, #0
   110d0:	ble	11108 <numero_vitorias@@Base+0x44>
   110d4:	ldr	r4, [r0, #8]
   110d8:	mov	r6, r1
   110dc:	mov	r7, #0
   110e0:	add	r5, r4, r5, lsl #2
   110e4:	ldr	r1, [r4], #4
   110e8:	mov	r0, r6
   110ec:	bl	10b5c <strcmp@plt>
   110f0:	cmp	r0, #0
   110f4:	addeq	r7, r7, #1
   110f8:	cmp	r4, r5
   110fc:	bne	110e4 <numero_vitorias@@Base+0x20>
   11100:	mov	r0, r7
   11104:	pop	{r4, r5, r6, r7, r8, pc}
   11108:	mov	r7, #0
   1110c:	b	11100 <numero_vitorias@@Base+0x3c>

00011110 <insere_carta@@Base>:
   11110:	cmp	r1, #7
   11114:	push	{r4, r5, lr}
   11118:	mov	r4, r0
   1111c:	sub	sp, sp, #12
   11120:	ble	11194 <insere_carta@@Base+0x84>
   11124:	cmp	r1, #8
   11128:	beq	111ac <insere_carta@@Base+0x9c>
   1112c:	cmp	r1, #9
   11130:	addeq	r5, sp, #8
   11134:	moveq	r3, #74	; 0x4a
   11138:	strheq	r3, [r5, #-4]!
   1113c:	beq	1117c <insere_carta@@Base+0x6c>
   11140:	cmp	r1, #10
   11144:	addeq	r5, sp, #8
   11148:	moveq	r3, #81	; 0x51
   1114c:	strheq	r3, [r5, #-4]!
   11150:	beq	1117c <insere_carta@@Base+0x6c>
   11154:	cmp	r1, #11
   11158:	addeq	r5, sp, #8
   1115c:	moveq	r3, #75	; 0x4b
   11160:	strheq	r3, [r5, #-4]!
   11164:	beq	1117c <insere_carta@@Base+0x6c>
   11168:	cmp	r1, #12
   1116c:	addeq	r5, sp, #8
   11170:	addne	r5, sp, #4
   11174:	moveq	r3, #65	; 0x41
   11178:	strheq	r3, [r5, #-4]!
   1117c:	mov	r1, r5
   11180:	ldr	r2, [r4]
   11184:	mov	r0, r4
   11188:	bl	11650 <lista_insere@@Base>
   1118c:	add	sp, sp, #12
   11190:	pop	{r4, r5, pc}
   11194:	add	r5, sp, #4
   11198:	add	r2, r1, #50	; 0x32
   1119c:	mov	r0, r5
   111a0:	ldr	r1, [pc, #32]	; 111c8 <insere_carta@@Base+0xb8>
   111a4:	bl	10bec <sprintf@plt>
   111a8:	b	1117c <insere_carta@@Base+0x6c>
   111ac:	ldr	r3, [pc, #24]	; 111cc <insere_carta@@Base+0xbc>
   111b0:	add	r5, sp, #4
   111b4:	ldr	r3, [r3]
   111b8:	strh	r3, [sp, #4]
   111bc:	lsr	r3, r3, #16
   111c0:	strb	r3, [sp, #6]
   111c4:	b	1117c <insere_carta@@Base+0x6c>
   111c8:	muleq	r1, r0, r9
   111cc:	muleq	r1, r4, r9

000111d0 <vetor_novo@@Base>:
   111d0:	push	{r4, lr}
   111d4:	mov	r0, #12
   111d8:	bl	10bb0 <malloc@plt>
   111dc:	cmp	r0, #0
   111e0:	movne	r3, #0
   111e4:	strne	r3, [r0]
   111e8:	strne	r3, [r0, #4]
   111ec:	strne	r3, [r0, #8]
   111f0:	pop	{r4, pc}

000111f4 <vetor_apaga@@Base>:
   111f4:	push	{r4, r5, r6, lr}
   111f8:	subs	r5, r0, #0
   111fc:	popeq	{r4, r5, r6, pc}
   11200:	ldr	r3, [r5]
   11204:	cmp	r3, #0
   11208:	movgt	r4, #0
   1120c:	ble	1122c <vetor_apaga@@Base+0x38>
   11210:	ldr	r3, [r5, #8]
   11214:	ldr	r0, [r3, r4, lsl #2]
   11218:	bl	10b68 <free@plt>
   1121c:	ldr	r3, [r5]
   11220:	add	r4, r4, #1
   11224:	cmp	r3, r4
   11228:	bgt	11210 <vetor_apaga@@Base+0x1c>
   1122c:	ldr	r0, [r5, #8]
   11230:	bl	10b68 <free@plt>
   11234:	mov	r0, r5
   11238:	pop	{r4, r5, r6, lr}
   1123c:	b	10b68 <free@plt>

00011240 <vetor_atribui@@Base>:
   11240:	clz	r3, r0
   11244:	lsr	r3, r3, #5
   11248:	orrs	r3, r3, r1, lsr #31
   1124c:	bne	112cc <vetor_atribui@@Base+0x8c>
   11250:	ldr	r3, [r0]
   11254:	cmp	r1, r3
   11258:	bge	112cc <vetor_atribui@@Base+0x8c>
   1125c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11260:	mov	r5, r0
   11264:	mov	r0, r2
   11268:	mov	r4, r1
   1126c:	mov	r6, r2
   11270:	bl	10bd4 <strlen@plt>
   11274:	ldr	r8, [r5, #8]
   11278:	ldr	r7, [r8, r4, lsl #2]
   1127c:	mov	r9, r0
   11280:	mov	r0, r7
   11284:	bl	10bd4 <strlen@plt>
   11288:	cmp	r9, r0
   1128c:	bls	112b0 <vetor_atribui@@Base+0x70>
   11290:	mov	r0, r7
   11294:	add	r1, r9, #1
   11298:	bl	10b80 <realloc@plt>
   1129c:	ldr	r3, [r5, #8]
   112a0:	str	r0, [r8, r4, lsl #2]
   112a4:	ldr	r7, [r3, r4, lsl #2]
   112a8:	cmp	r7, #0
   112ac:	beq	112c4 <vetor_atribui@@Base+0x84>
   112b0:	mov	r1, r6
   112b4:	mov	r0, r7
   112b8:	bl	10b98 <strcpy@plt>
   112bc:	mov	r0, r4
   112c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112c4:	mvn	r0, #0
   112c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112cc:	mvn	r0, #0
   112d0:	bx	lr

000112d4 <vetor_tamanho@@Base>:
   112d4:	cmp	r0, #0
   112d8:	ldrne	r0, [r0]
   112dc:	mvneq	r0, #0
   112e0:	bx	lr

000112e4 <vetor_elemento@@Base>:
   112e4:	lsr	r3, r1, #31
   112e8:	cmp	r0, #0
   112ec:	orreq	r3, r3, #1
   112f0:	cmp	r3, #0
   112f4:	bne	11310 <vetor_elemento@@Base+0x2c>
   112f8:	ldr	r2, [r0]
   112fc:	cmp	r1, r2
   11300:	bge	11310 <vetor_elemento@@Base+0x2c>
   11304:	ldr	r3, [r0, #8]
   11308:	ldr	r0, [r3, r1, lsl #2]
   1130c:	bx	lr
   11310:	mov	r0, #0
   11314:	bx	lr

00011318 <vetor_insere@@Base>:
   11318:	clz	r3, r0
   1131c:	lsr	r3, r3, #5
   11320:	orrs	r3, r3, r2, lsr #31
   11324:	bne	113ec <vetor_insere@@Base+0xd4>
   11328:	push	{r4, r5, r6, r7, r8, lr}
   1132c:	ldr	r7, [r0]
   11330:	cmp	r2, r7
   11334:	bgt	113e4 <vetor_insere@@Base+0xcc>
   11338:	ldr	r3, [r0, #4]
   1133c:	mov	r6, r0
   11340:	cmp	r7, r3
   11344:	mov	r8, r1
   11348:	mov	r4, r2
   1134c:	beq	113ac <vetor_insere@@Base+0x94>
   11350:	ldr	r5, [r0, #8]
   11354:	cmp	r4, r7
   11358:	addlt	r3, r5, r7, lsl #2
   1135c:	addlt	r2, r5, r4, lsl #2
   11360:	bge	11374 <vetor_insere@@Base+0x5c>
   11364:	ldr	ip, [r3, #-4]
   11368:	str	ip, [r3], #-4
   1136c:	cmp	r2, r3
   11370:	bne	11364 <vetor_insere@@Base+0x4c>
   11374:	mov	r0, r8
   11378:	bl	10bd4 <strlen@plt>
   1137c:	mov	r1, #1
   11380:	add	r0, r0, r1
   11384:	bl	10b50 <calloc@plt>
   11388:	cmp	r0, #0
   1138c:	str	r0, [r5, r4, lsl #2]
   11390:	beq	113e4 <vetor_insere@@Base+0xcc>
   11394:	mov	r1, r8
   11398:	bl	10b98 <strcpy@plt>
   1139c:	add	r3, r7, #1
   113a0:	mov	r0, r4
   113a4:	str	r3, [r6]
   113a8:	pop	{r4, r5, r6, r7, r8, pc}
   113ac:	cmp	r7, #0
   113b0:	moveq	r3, #1
   113b4:	lslne	r3, r7, #1
   113b8:	streq	r3, [r0, #4]
   113bc:	strne	r3, [r0, #4]
   113c0:	moveq	r1, #4
   113c4:	lslne	r1, r7, #3
   113c8:	ldr	r0, [r0, #8]
   113cc:	bl	10b80 <realloc@plt>
   113d0:	cmp	r0, #0
   113d4:	str	r0, [r6, #8]
   113d8:	ldrne	r7, [r6]
   113dc:	movne	r5, r0
   113e0:	bne	11354 <vetor_insere@@Base+0x3c>
   113e4:	mvn	r0, #0
   113e8:	pop	{r4, r5, r6, r7, r8, pc}
   113ec:	mvn	r0, #0
   113f0:	bx	lr

000113f4 <vetor_remove@@Base>:
   113f4:	clz	r3, r0
   113f8:	lsr	r3, r3, #5
   113fc:	orrs	r3, r3, r1, lsr #31
   11400:	bne	1146c <vetor_remove@@Base+0x78>
   11404:	ldr	r3, [r0]
   11408:	cmp	r1, r3
   1140c:	bge	1146c <vetor_remove@@Base+0x78>
   11410:	ldr	r3, [r0, #8]
   11414:	push	{r4, r5, r6, lr}
   11418:	mov	r6, r0
   1141c:	ldr	r0, [r3, r1, lsl #2]
   11420:	mov	r5, r1
   11424:	lsl	r4, r1, #2
   11428:	bl	10b68 <free@plt>
   1142c:	ldr	r0, [r6]
   11430:	add	r1, r5, #1
   11434:	cmp	r1, r0
   11438:	bge	1145c <vetor_remove@@Base+0x68>
   1143c:	ldr	r2, [r6, #8]
   11440:	sub	r1, r0, #-1073741823	; 0xc0000001
   11444:	add	r3, r2, r4
   11448:	add	r1, r2, r1, lsl #2
   1144c:	ldr	r2, [r3, #4]
   11450:	str	r2, [r3], #4
   11454:	cmp	r3, r1
   11458:	bne	1144c <vetor_remove@@Base+0x58>
   1145c:	sub	r0, r0, #1
   11460:	str	r0, [r6]
   11464:	mov	r0, #0
   11468:	pop	{r4, r5, r6, pc}
   1146c:	mvn	r0, #0
   11470:	bx	lr

00011474 <vetor_pesquisa@@Base>:
   11474:	cmp	r0, #0
   11478:	push	{r4, r5, r6, r7, r8, lr}
   1147c:	beq	114c8 <vetor_pesquisa@@Base+0x54>
   11480:	ldr	r7, [r0]
   11484:	cmp	r7, #0
   11488:	ble	114c8 <vetor_pesquisa@@Base+0x54>
   1148c:	ldr	r5, [r0, #8]
   11490:	mov	r6, r1
   11494:	mov	r4, #0
   11498:	sub	r5, r5, #4
   1149c:	b	114ac <vetor_pesquisa@@Base+0x38>
   114a0:	add	r4, r4, #1
   114a4:	cmp	r4, r7
   114a8:	beq	114c8 <vetor_pesquisa@@Base+0x54>
   114ac:	mov	r1, r6
   114b0:	ldr	r0, [r5, #4]!
   114b4:	bl	10b5c <strcmp@plt>
   114b8:	cmp	r0, #0
   114bc:	bne	114a0 <vetor_pesquisa@@Base+0x2c>
   114c0:	mov	r0, r4
   114c4:	pop	{r4, r5, r6, r7, r8, pc}
   114c8:	mvn	r4, #0
   114cc:	mov	r0, r4
   114d0:	pop	{r4, r5, r6, r7, r8, pc}

000114d4 <vetor_ordena@@Base>:
   114d4:	cmp	r0, #0
   114d8:	beq	11550 <vetor_ordena@@Base+0x7c>
   114dc:	ldr	r3, [r0]
   114e0:	cmp	r3, #1
   114e4:	ble	11548 <vetor_ordena@@Base+0x74>
   114e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   114f0:	ldr	sl, [r0, #8]
   114f4:	mov	r8, #1
   114f8:	mov	r7, sl
   114fc:	add	r9, sl, r3, lsl #2
   11500:	ldr	r6, [r7, #4]!
   11504:	mov	r5, r8
   11508:	mov	r4, r7
   1150c:	ldr	r1, [r4, #-4]
   11510:	mov	r0, r6
   11514:	bl	10b5c <strcmp@plt>
   11518:	cmp	r0, #0
   1151c:	bge	11530 <vetor_ordena@@Base+0x5c>
   11520:	ldr	r3, [r4, #-4]!
   11524:	subs	r5, r5, #1
   11528:	str	r3, [r4, #4]
   1152c:	bne	1150c <vetor_ordena@@Base+0x38>
   11530:	cmp	r9, r7
   11534:	str	r6, [sl, r5, lsl #2]
   11538:	add	r8, r8, #1
   1153c:	bne	11500 <vetor_ordena@@Base+0x2c>
   11540:	mov	r0, #0
   11544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11548:	mov	r0, #0
   1154c:	bx	lr
   11550:	mvn	r0, #0
   11554:	bx	lr

00011558 <novo_str@@Base>:
   11558:	push	{r4, r5, r6, r7, r8, lr}
   1155c:	mov	r5, r0
   11560:	mov	r0, #12
   11564:	bl	10bb0 <malloc@plt>
   11568:	subs	r4, r0, #0
   1156c:	beq	115ac <novo_str@@Base+0x54>
   11570:	mov	r0, r5
   11574:	bl	10bd4 <strlen@plt>
   11578:	add	r7, r0, #1
   1157c:	mov	r0, r7
   11580:	bl	10bb0 <malloc@plt>
   11584:	cmp	r0, #0
   11588:	mov	r6, r0
   1158c:	str	r0, [r4]
   11590:	beq	115b4 <novo_str@@Base+0x5c>
   11594:	mov	r2, r7
   11598:	mov	r1, r5
   1159c:	bl	10b74 <memcpy@plt>
   115a0:	mov	r3, #0
   115a4:	str	r3, [r4, #4]
   115a8:	str	r3, [r4, #8]
   115ac:	mov	r0, r4
   115b0:	pop	{r4, r5, r6, r7, r8, pc}
   115b4:	mov	r0, r4
   115b8:	bl	10b68 <free@plt>
   115bc:	mov	r4, r6
   115c0:	b	115ac <novo_str@@Base+0x54>

000115c4 <lista_nova@@Base>:
   115c4:	push	{r4, lr}
   115c8:	mov	r0, #12
   115cc:	bl	10bb0 <malloc@plt>
   115d0:	cmp	r0, #0
   115d4:	movne	r3, #0
   115d8:	strne	r3, [r0]
   115dc:	strne	r3, [r0, #4]
   115e0:	strne	r3, [r0, #8]
   115e4:	pop	{r4, pc}

000115e8 <lista_apaga@@Base>:
   115e8:	push	{r4, r5, r6, lr}
   115ec:	subs	r5, r0, #0
   115f0:	bne	1160c <lista_apaga@@Base+0x24>
   115f4:	b	11624 <lista_apaga@@Base+0x3c>
   115f8:	ldm	r4, {r0, r3}
   115fc:	str	r3, [r5]
   11600:	bl	10b68 <free@plt>
   11604:	mov	r0, r4
   11608:	bl	10b68 <free@plt>
   1160c:	ldr	r4, [r5]
   11610:	cmp	r4, #0
   11614:	bne	115f8 <lista_apaga@@Base+0x10>
   11618:	mov	r0, r5
   1161c:	pop	{r4, r5, r6, lr}
   11620:	b	10b68 <free@plt>
   11624:	pop	{r4, r5, r6, pc}

00011628 <lista_tamanho@@Base>:
   11628:	cmp	r0, #0
   1162c:	ldrne	r0, [r0, #8]
   11630:	mvneq	r0, #0
   11634:	bx	lr

00011638 <lista_inicio@@Base>:
   11638:	cmp	r0, #0
   1163c:	ldrne	r0, [r0]
   11640:	bx	lr

00011644 <lista_fim@@Base>:
   11644:	cmp	r0, #0
   11648:	ldrne	r0, [r0, #4]
   1164c:	bx	lr

00011650 <lista_insere@@Base>:
   11650:	cmp	r1, #0
   11654:	cmpne	r0, #0
   11658:	beq	116e4 <lista_insere@@Base+0x94>
   1165c:	push	{r4, r5, r6, lr}
   11660:	mov	r5, r0
   11664:	mov	r0, r1
   11668:	mov	r4, r2
   1166c:	bl	11558 <novo_str@@Base>
   11670:	cmp	r0, #0
   11674:	beq	116bc <lista_insere@@Base+0x6c>
   11678:	ldr	r3, [r5, #8]
   1167c:	cmp	r4, #0
   11680:	add	r3, r3, #1
   11684:	str	r3, [r5, #8]
   11688:	ldr	r3, [r5]
   1168c:	beq	116c4 <lista_insere@@Base+0x74>
   11690:	cmp	r4, r3
   11694:	streq	r4, [r0, #4]
   11698:	ldrne	r3, [r4, #8]
   1169c:	streq	r0, [r4, #8]
   116a0:	strne	r3, [r0, #8]
   116a4:	ldrne	r3, [r4, #8]
   116a8:	strne	r4, [r0, #4]
   116ac:	streq	r0, [r5]
   116b0:	strne	r0, [r3, #4]
   116b4:	strne	r0, [r4, #8]
   116b8:	pop	{r4, r5, r6, pc}
   116bc:	mov	r0, #0
   116c0:	pop	{r4, r5, r6, pc}
   116c4:	cmp	r3, #0
   116c8:	streq	r0, [r5, #4]
   116cc:	ldrne	r3, [r5, #4]
   116d0:	streq	r0, [r5]
   116d4:	strne	r3, [r0, #8]
   116d8:	strne	r0, [r3, #4]
   116dc:	strne	r0, [r5, #4]
   116e0:	pop	{r4, r5, r6, pc}
   116e4:	mov	r0, #0
   116e8:	bx	lr

000116ec <lista_remove@@Base>:
   116ec:	cmp	r1, #0
   116f0:	cmpne	r0, #0
   116f4:	push	{r4, r5, r6, lr}
   116f8:	beq	1174c <lista_remove@@Base+0x60>
   116fc:	ldr	r2, [r1, #8]
   11700:	ldr	r3, [r0, #8]
   11704:	cmp	r2, #0
   11708:	sub	r3, r3, #1
   1170c:	str	r3, [r0, #8]
   11710:	ldrne	r3, [r1, #4]
   11714:	ldreq	r5, [r1, #4]
   11718:	strne	r3, [r2, #4]
   1171c:	ldrne	r5, [r1, #4]
   11720:	streq	r5, [r0]
   11724:	cmp	r5, #0
   11728:	streq	r2, [r0, #4]
   1172c:	mov	r4, r1
   11730:	ldr	r0, [r1]
   11734:	strne	r2, [r5, #8]
   11738:	bl	10b68 <free@plt>
   1173c:	mov	r0, r4
   11740:	bl	10b68 <free@plt>
   11744:	mov	r0, r5
   11748:	pop	{r4, r5, r6, pc}
   1174c:	mov	r5, #0
   11750:	mov	r0, r5
   11754:	pop	{r4, r5, r6, pc}

00011758 <lista_pesquisa@@Base>:
   11758:	cmp	r1, #0
   1175c:	cmpne	r0, #0
   11760:	push	{r4, r5, r6, lr}
   11764:	moveq	r4, #1
   11768:	movne	r4, #0
   1176c:	beq	117f4 <lista_pesquisa@@Base+0x9c>
   11770:	cmp	r2, #1
   11774:	bhi	117b4 <lista_pesquisa@@Base+0x5c>
   11778:	cmp	r2, #0
   1177c:	mov	r5, r1
   11780:	bne	117bc <lista_pesquisa@@Base+0x64>
   11784:	ldr	r4, [r0]
   11788:	cmp	r4, #0
   1178c:	bne	117a0 <lista_pesquisa@@Base+0x48>
   11790:	b	117b4 <lista_pesquisa@@Base+0x5c>
   11794:	ldr	r4, [r4, #4]
   11798:	cmp	r4, #0
   1179c:	beq	117b4 <lista_pesquisa@@Base+0x5c>
   117a0:	mov	r1, r5
   117a4:	ldr	r0, [r4]
   117a8:	bl	10b5c <strcmp@plt>
   117ac:	cmp	r0, #0
   117b0:	bne	11794 <lista_pesquisa@@Base+0x3c>
   117b4:	mov	r0, r4
   117b8:	pop	{r4, r5, r6, pc}
   117bc:	ldr	r4, [r0, #4]
   117c0:	cmp	r4, #0
   117c4:	bne	117d8 <lista_pesquisa@@Base+0x80>
   117c8:	b	117b4 <lista_pesquisa@@Base+0x5c>
   117cc:	ldr	r4, [r4, #8]
   117d0:	cmp	r4, #0
   117d4:	beq	117b4 <lista_pesquisa@@Base+0x5c>
   117d8:	mov	r1, r5
   117dc:	ldr	r0, [r4]
   117e0:	bl	10b5c <strcmp@plt>
   117e4:	cmp	r0, #0
   117e8:	bne	117cc <lista_pesquisa@@Base+0x74>
   117ec:	mov	r0, r4
   117f0:	pop	{r4, r5, r6, pc}
   117f4:	mov	r4, #0
   117f8:	mov	r0, r4
   117fc:	pop	{r4, r5, r6, pc}

00011800 <lista_ordena@@Base>:
   11800:	cmp	r0, #0
   11804:	beq	11870 <lista_ordena@@Base+0x70>
   11808:	push	{r4, r5, r6, r7, r8, lr}
   1180c:	ldr	r6, [r0]
   11810:	ldr	r7, [r6, #4]
   11814:	cmp	r7, #0
   11818:	beq	11868 <lista_ordena@@Base+0x68>
   1181c:	mov	r5, r6
   11820:	mov	r4, r7
   11824:	ldr	r1, [r5]
   11828:	ldr	r0, [r4]
   1182c:	bl	10b5c <strcmp@plt>
   11830:	cmp	r0, #0
   11834:	movlt	r5, r4
   11838:	ldr	r4, [r4, #4]
   1183c:	cmp	r4, #0
   11840:	bne	11824 <lista_ordena@@Base+0x24>
   11844:	cmp	r6, r5
   11848:	ldrne	r2, [r5]
   1184c:	ldrne	r3, [r6]
   11850:	strne	r2, [r6]
   11854:	mov	r6, r7
   11858:	strne	r3, [r5]
   1185c:	ldr	r7, [r6, #4]
   11860:	cmp	r7, #0
   11864:	bne	1181c <lista_ordena@@Base+0x1c>
   11868:	mov	r0, r7
   1186c:	pop	{r4, r5, r6, r7, r8, pc}
   11870:	mvn	r0, #0
   11874:	bx	lr

00011878 <lista_inverte@@Base>:
   11878:	push	{r4, r5, lr}
   1187c:	subs	r5, r0, #0
   11880:	beq	11918 <lista_inverte@@Base+0xa0>
   11884:	ldr	r4, [r5, #8]
   11888:	cmp	r4, #1
   1188c:	ble	11908 <lista_inverte@@Base+0x90>
   11890:	ldr	r2, [r5]
   11894:	cmp	r4, #2
   11898:	ldr	r3, [r2, #4]
   1189c:	beq	11910 <lista_inverte@@Base+0x98>
   118a0:	sub	r4, r4, #2
   118a4:	mov	r1, #0
   118a8:	b	118b0 <lista_inverte@@Base+0x38>
   118ac:	mov	r3, lr
   118b0:	ldr	ip, [r3, #8]
   118b4:	ldr	lr, [r3, #4]
   118b8:	add	r1, r1, #1
   118bc:	str	lr, [ip, #4]
   118c0:	ldr	lr, [r3, #4]
   118c4:	cmp	r1, r4
   118c8:	str	ip, [lr, #8]
   118cc:	str	r2, [r3, #4]
   118d0:	str	r3, [r2, #8]
   118d4:	mov	r2, r3
   118d8:	bne	118ac <lista_inverte@@Base+0x34>
   118dc:	ldr	r2, [r5, #4]
   118e0:	mov	r1, #0
   118e4:	mov	r0, r1
   118e8:	ldr	ip, [r2, #8]
   118ec:	str	ip, [r5, #4]
   118f0:	str	r1, [ip, #4]
   118f4:	str	r1, [r2, #8]
   118f8:	str	r3, [r2, #4]
   118fc:	str	r2, [r3, #8]
   11900:	str	r2, [r5]
   11904:	pop	{r4, r5, pc}
   11908:	mov	r0, #0
   1190c:	pop	{r4, r5, pc}
   11910:	mov	r3, r2
   11914:	b	118dc <lista_inverte@@Base+0x64>
   11918:	mvn	r0, #0
   1191c:	pop	{r4, r5, pc}

00011920 <__libc_csu_init@@Base>:
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11924:	mov	r7, r0
   11928:	ldr	r6, [pc, #72]	; 11978 <__libc_csu_init@@Base+0x58>
   1192c:	ldr	r5, [pc, #72]	; 1197c <__libc_csu_init@@Base+0x5c>
   11930:	add	r6, pc, r6
   11934:	add	r5, pc, r5
   11938:	sub	r6, r6, r5
   1193c:	mov	r8, r1
   11940:	mov	r9, r2
   11944:	bl	10b30 <calloc@plt-0x20>
   11948:	asrs	r6, r6, #2
   1194c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11950:	mov	r4, #0
   11954:	add	r4, r4, #1
   11958:	ldr	r3, [r5], #4
   1195c:	mov	r2, r9
   11960:	mov	r1, r8
   11964:	mov	r0, r7
   11968:	blx	r3
   1196c:	cmp	r6, r4
   11970:	bne	11954 <__libc_csu_init@@Base+0x34>
   11974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11978:	ldrdeq	r0, [r1], -r8
   1197c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00011980 <__libc_csu_fini@@Base>:
   11980:	bx	lr

Disassembly of section .fini:

00011984 <.fini>:
   11984:	push	{r3, lr}
   11988:	pop	{r3, pc}
