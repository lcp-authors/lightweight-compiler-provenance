
../compcert-repos/prog2/CMakeFiles/2.3.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/03.2_.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <imprime>:
   0:	str	r4, [sp, #-12]!
   4:	str	fp, [sp, #4]
   8:	str	lr, [sp, #8]
   c:	add	fp, sp, #8
  10:	sub	sp, sp, #20
  14:	str	r0, [fp, #-24]	; 0xffffffe8
  18:	mov	r3, #0
  1c:	str	r3, [fp, #-16]
  20:	b	5c <imprime+0x5c>
  24:	ldr	r3, [fp, #-16]
  28:	add	r4, r3, #1
  2c:	ldr	r1, [fp, #-16]
  30:	ldr	r0, [fp, #-24]	; 0xffffffe8
  34:	bl	0 <vetor_elemento>
  38:	mov	r3, r0
  3c:	mov	r2, r3
  40:	mov	r1, r4
  44:	movw	r0, #0
  48:	movt	r0, #0
  4c:	bl	0 <printf>
  50:	ldr	r3, [fp, #-16]
  54:	add	r3, r3, #1
  58:	str	r3, [fp, #-16]
  5c:	ldr	r3, [fp, #-16]
  60:	cmp	r3, #4
  64:	ble	24 <imprime+0x24>
  68:	nop	{0}
  6c:	sub	sp, fp, #8
  70:	ldr	r4, [sp]
  74:	ldr	fp, [sp, #4]
  78:	add	sp, sp, #8
  7c:	pop	{pc}		; (ldr pc, [sp], #4)

00000080 <main>:
  80:	str	fp, [sp, #-8]!
  84:	str	lr, [sp, #4]
  88:	add	fp, sp, #4
  8c:	sub	sp, sp, #112	; 0x70
  90:	bl	0 <vetor_novo>
  94:	str	r0, [fp, #-12]
  98:	mov	r3, #0
  9c:	str	r3, [fp, #-8]
  a0:	b	11c <main+0x9c>
  a4:	ldr	r3, [fp, #-8]
  a8:	add	r3, r3, #1
  ac:	mov	r1, r3
  b0:	movw	r0, #0
  b4:	movt	r0, #0
  b8:	bl	0 <printf>
  bc:	movw	r3, #0
  c0:	movt	r3, #0
  c4:	ldr	r2, [r3]
  c8:	sub	r3, fp, #112	; 0x70
  cc:	mov	r1, #100	; 0x64
  d0:	mov	r0, r3
  d4:	bl	0 <fgets>
  d8:	sub	r3, fp, #112	; 0x70
  dc:	mov	r0, r3
  e0:	bl	0 <strlen>
  e4:	mov	r3, r0
  e8:	sub	r3, r3, #1
  ec:	sub	r2, fp, #4
  f0:	add	r3, r2, r3
  f4:	mov	r2, #0
  f8:	strb	r2, [r3, #-108]	; 0xffffff94
  fc:	sub	r3, fp, #112	; 0x70
 100:	ldr	r2, [fp, #-8]
 104:	mov	r1, r3
 108:	ldr	r0, [fp, #-12]
 10c:	bl	0 <vetor_insere>
 110:	ldr	r3, [fp, #-8]
 114:	add	r3, r3, #1
 118:	str	r3, [fp, #-8]
 11c:	ldr	r3, [fp, #-8]
 120:	cmp	r3, #4
 124:	ble	a4 <main+0x24>
 128:	ldr	r0, [fp, #-12]
 12c:	bl	0 <imprime>
 130:	movw	r0, #0
 134:	movt	r0, #0
 138:	bl	0 <printf>
 13c:	sub	r3, fp, #112	; 0x70
 140:	mov	r1, r3
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	bl	0 <__isoc99_scanf>
 150:	sub	r3, fp, #112	; 0x70
 154:	mov	r1, r3
 158:	ldr	r0, [fp, #-12]
 15c:	bl	0 <vetor_pesquisa>
 160:	mov	r3, r0
 164:	mov	r1, r3
 168:	ldr	r0, [fp, #-12]
 16c:	bl	0 <vetor_remove>
 170:	mov	r3, r0
 174:	cmp	r3, #0
 178:	beq	18c <main+0x10c>
 17c:	movw	r0, #0
 180:	movt	r0, #0
 184:	bl	0 <puts>
 188:	b	194 <main+0x114>
 18c:	ldr	r0, [fp, #-12]
 190:	bl	0 <imprime>
 194:	ldr	r0, [fp, #-12]
 198:	bl	0 <vetor_ordena>
 19c:	mov	r3, r0
 1a0:	cmp	r3, #0
 1a4:	beq	1b4 <main+0x134>
 1a8:	movw	r0, #0
 1ac:	movt	r0, #0
 1b0:	bl	0 <printf>
 1b4:	movw	r0, #0
 1b8:	movt	r0, #0
 1bc:	bl	0 <puts>
 1c0:	ldr	r0, [fp, #-12]
 1c4:	bl	0 <imprime>
 1c8:	ldr	r0, [fp, #-12]
 1cc:	bl	0 <vetor_apaga>
 1d0:	mov	r3, #0
 1d4:	mov	r0, r3
 1d8:	sub	sp, fp, #4
 1dc:	ldr	fp, [sp]
 1e0:	add	sp, sp, #4
 1e4:	pop	{pc}		; (ldr pc, [sp], #4)
