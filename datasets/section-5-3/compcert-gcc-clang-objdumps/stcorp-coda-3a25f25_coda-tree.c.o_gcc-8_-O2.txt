
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_item_for_cursor>:
   0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4:	subs	r4, r0, #0
   8:	mov	r5, r3
   c:	strd	r6, [sp, #8]
  10:	str	r8, [sp, #16]
  14:	str	lr, [sp, #20]
  18:	beq	f8 <get_item_for_cursor+0xf8>
  1c:	ldr	r3, [r2, #4]
  20:	mov	r7, r1
  24:	mov	r6, r2
  28:	sub	r3, r3, #1
  2c:	cmp	r3, r1
  30:	ble	ec <get_item_for_cursor+0xec>
  34:	ldr	r8, [r4, #16]
  38:	cmp	r8, #0
  3c:	ble	b8 <get_item_for_cursor+0xb8>
  40:	add	r1, r1, #1
  44:	ldr	lr, [r4, #20]
  48:	sub	r8, r8, #1
  4c:	add	r3, r2, r1, lsl #4
  50:	mov	r0, #0
  54:	ldr	ip, [r3, #12]
  58:	cmp	r8, r0
  5c:	beq	ac <get_item_for_cursor+0xac>
  60:	add	r3, r8, r0
  64:	add	r3, r3, r3, lsr #31
  68:	asr	r3, r3, #1
  6c:	ldr	r2, [lr, r3, lsl #2]
  70:	cmp	ip, r2
  74:	bgt	120 <get_item_for_cursor+0x120>
  78:	add	r2, r0, r3
  7c:	cmp	r0, r3
  80:	add	r2, r2, r2, lsr #31
  84:	beq	ac <get_item_for_cursor+0xac>
  88:	asr	r2, r2, #1
  8c:	ldr	r8, [lr, r2, lsl #2]
  90:	cmp	r8, ip
  94:	blt	118 <get_item_for_cursor+0x118>
  98:	mov	r3, r2
  9c:	add	r2, r0, r3
  a0:	cmp	r0, r3
  a4:	add	r2, r2, r2, lsr #31
  a8:	bne	88 <get_item_for_cursor+0x88>
  ac:	ldr	r3, [lr, r0, lsl #2]
  b0:	cmp	r3, ip
  b4:	beq	140 <get_item_for_cursor+0x140>
  b8:	ldr	r0, [r4, #12]
  bc:	cmp	r0, #0
  c0:	beq	f8 <get_item_for_cursor+0xf8>
  c4:	mov	r2, r6
  c8:	add	r1, r7, #1
  cc:	mov	r3, r5
  d0:	bl	0 <get_item_for_cursor>
  d4:	cmp	r0, #0
  d8:	bne	168 <get_item_for_cursor+0x168>
  dc:	cmp	r5, #0
  e0:	beq	f8 <get_item_for_cursor+0xf8>
  e4:	mov	r0, #0
  e8:	b	104 <get_item_for_cursor+0x104>
  ec:	ldr	r3, [r4, #4]
  f0:	cmp	r3, #0
  f4:	bgt	128 <get_item_for_cursor+0x128>
  f8:	mov	r3, #0
  fc:	mov	r0, r3
 100:	str	r3, [r5]
 104:	ldrd	r4, [sp]
 108:	ldrd	r6, [sp, #8]
 10c:	ldr	r8, [sp, #16]
 110:	add	sp, sp, #20
 114:	pop	{pc}		; (ldr pc, [sp], #4)
 118:	mov	r8, r3
 11c:	mov	r3, r2
 120:	add	r0, r3, #1
 124:	b	58 <get_item_for_cursor+0x58>
 128:	ldr	r2, [r4, #8]
 12c:	sub	r3, r3, #-1073741823	; 0xc0000001
 130:	mov	r0, #0
 134:	ldr	r3, [r2, r3, lsl #2]
 138:	str	r3, [r5]
 13c:	b	104 <get_item_for_cursor+0x104>
 140:	ldr	ip, [r4, #24]
 144:	mov	r3, r5
 148:	mov	r2, r6
 14c:	ldr	r0, [ip, r0, lsl #2]
 150:	bl	0 <get_item_for_cursor>
 154:	cmp	r0, #0
 158:	bne	168 <get_item_for_cursor+0x168>
 15c:	cmp	r5, #0
 160:	bne	e4 <get_item_for_cursor+0xe4>
 164:	b	b8 <get_item_for_cursor+0xb8>
 168:	mvn	r0, #0
 16c:	b	104 <get_item_for_cursor+0x104>

00000170 <coda_tree_node_new>:
 170:	strd	r4, [sp, #-12]!
 174:	mov	r5, r0
 178:	mov	r0, #28
 17c:	str	lr, [sp, #8]
 180:	sub	sp, sp, #12
 184:	bl	0 <malloc>
 188:	subs	r4, r0, #0
 18c:	beq	1c4 <coda_tree_node_new+0x54>
 190:	mov	r3, #0
 194:	str	r5, [r4]
 198:	str	r3, [r4, #4]
 19c:	str	r3, [r4, #8]
 1a0:	str	r3, [r4, #12]
 1a4:	str	r3, [r4, #16]
 1a8:	str	r3, [r4, #20]
 1ac:	str	r3, [r4, #24]
 1b0:	mov	r0, r4
 1b4:	add	sp, sp, #12
 1b8:	ldrd	r4, [sp]
 1bc:	add	sp, sp, #8
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)
 1c4:	mov	r0, #53	; 0x35
 1c8:	movw	r3, #0
 1cc:	movt	r3, #0
 1d0:	movw	r1, #0
 1d4:	movt	r1, #0
 1d8:	mov	r2, #28
 1dc:	str	r0, [sp]
 1e0:	mvn	r0, #0
 1e4:	bl	0 <coda_set_error>
 1e8:	b	1b0 <coda_tree_node_new+0x40>

000001ec <tree_node_get_node_for_index.constprop.3>:
 1ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
 1f0:	mov	r4, r1
 1f4:	mov	r5, r2
 1f8:	strd	r6, [sp, #8]
 1fc:	mov	r6, r0
 200:	str	lr, [sp, #20]
 204:	ldr	lr, [r0, #16]
 208:	str	r8, [sp, #16]
 20c:	sub	sp, sp, #16
 210:	ldr	r0, [r0, #20]
 214:	cmp	lr, #0
 218:	subgt	ip, lr, #1
 21c:	movgt	r1, #0
 220:	ble	288 <tree_node_get_node_for_index.constprop.3+0x9c>
 224:	cmp	r1, ip
 228:	beq	27c <tree_node_get_node_for_index.constprop.3+0x90>
 22c:	add	r3, r1, ip
 230:	add	r3, r3, r3, lsr #31
 234:	asr	r3, r3, #1
 238:	ldr	r2, [r0, r3, lsl #2]
 23c:	cmp	r4, r2
 240:	bgt	388 <tree_node_get_node_for_index.constprop.3+0x19c>
 244:	add	r2, r1, r3
 248:	cmp	r1, r3
 24c:	add	r2, r2, r2, lsr #31
 250:	beq	278 <tree_node_get_node_for_index.constprop.3+0x8c>
 254:	asr	r2, r2, #1
 258:	ldr	ip, [r0, r2, lsl #2]
 25c:	cmp	ip, r4
 260:	blt	380 <tree_node_get_node_for_index.constprop.3+0x194>
 264:	mov	r3, r2
 268:	add	r2, r1, r3
 26c:	cmp	r1, r3
 270:	add	r2, r2, r2, lsr #31
 274:	bne	254 <tree_node_get_node_for_index.constprop.3+0x68>
 278:	mov	ip, r1
 27c:	ldr	r3, [r0, ip, lsl #2]
 280:	cmp	r4, r3
 284:	beq	390 <tree_node_get_node_for_index.constprop.3+0x1a4>
 288:	add	r1, lr, #1
 28c:	ldr	r7, [r6]
 290:	lsl	r1, r1, #2
 294:	bl	0 <realloc>
 298:	cmp	r0, #0
 29c:	beq	414 <tree_node_get_node_for_index.constprop.3+0x228>
 2a0:	ldr	r1, [r6, #16]
 2a4:	str	r0, [r6, #20]
 2a8:	ldr	r0, [r6, #24]
 2ac:	add	r1, r1, #1
 2b0:	lsl	r1, r1, #2
 2b4:	bl	0 <realloc>
 2b8:	cmp	r0, #0
 2bc:	beq	444 <tree_node_get_node_for_index.constprop.3+0x258>
 2c0:	cmn	r4, #1
 2c4:	str	r0, [r6, #24]
 2c8:	mov	r0, r7
 2cc:	beq	3b8 <tree_node_get_node_for_index.constprop.3+0x1cc>
 2d0:	add	r1, sp, #12
 2d4:	add	r8, sp, #8
 2d8:	bl	0 <coda_type_get_class>
 2dc:	ldr	r3, [sp, #12]
 2e0:	cmp	r3, #6
 2e4:	beq	3e8 <tree_node_get_node_for_index.constprop.3+0x1fc>
 2e8:	cmp	r3, #1
 2ec:	beq	3d0 <tree_node_get_node_for_index.constprop.3+0x1e4>
 2f0:	mov	r2, r8
 2f4:	mov	r0, r7
 2f8:	mov	r1, r4
 2fc:	bl	0 <coda_type_get_record_field_type>
 300:	cmp	r0, #0
 304:	bne	3c8 <tree_node_get_node_for_index.constprop.3+0x1dc>
 308:	ldr	r0, [sp, #8]
 30c:	bl	170 <coda_tree_node_new>
 310:	subs	ip, r0, #0
 314:	beq	3c8 <tree_node_get_node_for_index.constprop.3+0x1dc>
 318:	ldr	r7, [r6, #16]
 31c:	ldr	r8, [r6, #20]
 320:	str	ip, [r5]
 324:	ldr	r5, [r6, #24]
 328:	cmp	r7, #0
 32c:	ble	368 <tree_node_get_node_for_index.constprop.3+0x17c>
 330:	add	r0, r5, r7, lsl #2
 334:	sub	r2, r8, #4
 338:	mov	r3, r5
 33c:	ldr	r1, [r2, #4]!
 340:	cmp	r1, r4
 344:	ble	35c <tree_node_get_node_for_index.constprop.3+0x170>
 348:	ldr	lr, [r3]
 34c:	str	r4, [r2]
 350:	mov	r4, r1
 354:	str	ip, [r3]
 358:	mov	ip, lr
 35c:	add	r3, r3, #4
 360:	cmp	r0, r3
 364:	bne	33c <tree_node_get_node_for_index.constprop.3+0x150>
 368:	add	r3, r7, #1
 36c:	mov	r0, #0
 370:	str	r4, [r8, r7, lsl #2]
 374:	str	ip, [r5, r7, lsl #2]
 378:	str	r3, [r6, #16]
 37c:	b	3a0 <tree_node_get_node_for_index.constprop.3+0x1b4>
 380:	mov	ip, r3
 384:	mov	r3, r2
 388:	add	r1, r3, #1
 38c:	b	224 <tree_node_get_node_for_index.constprop.3+0x38>
 390:	ldr	r3, [r6, #24]
 394:	mov	r0, #0
 398:	ldr	r3, [r3, ip, lsl #2]
 39c:	str	r3, [r5]
 3a0:	add	sp, sp, #16
 3a4:	ldrd	r4, [sp]
 3a8:	ldrd	r6, [sp, #8]
 3ac:	ldr	r8, [sp, #16]
 3b0:	add	sp, sp, #20
 3b4:	pop	{pc}		; (ldr pc, [sp], #4)
 3b8:	add	r1, sp, #8
 3bc:	bl	0 <coda_type_get_attributes>
 3c0:	cmp	r0, #0
 3c4:	beq	308 <tree_node_get_node_for_index.constprop.3+0x11c>
 3c8:	mvn	r0, #0
 3cc:	b	3a0 <tree_node_get_node_for_index.constprop.3+0x1b4>
 3d0:	mov	r1, r8
 3d4:	mov	r0, r7
 3d8:	bl	0 <coda_type_get_array_base_type>
 3dc:	cmp	r0, #0
 3e0:	beq	308 <tree_node_get_node_for_index.constprop.3+0x11c>
 3e4:	b	3c8 <tree_node_get_node_for_index.constprop.3+0x1dc>
 3e8:	mov	r0, r7
 3ec:	mov	r1, r8
 3f0:	bl	0 <coda_type_get_special_base_type>
 3f4:	cmp	r0, #0
 3f8:	bne	3c8 <tree_node_get_node_for_index.constprop.3+0x1dc>
 3fc:	ldr	r7, [sp, #8]
 400:	add	r1, sp, #12
 404:	mov	r0, r7
 408:	bl	0 <coda_type_get_class>
 40c:	ldr	r3, [sp, #12]
 410:	b	2e8 <tree_node_get_node_for_index.constprop.3+0xfc>
 414:	ldr	r2, [r6, #16]
 418:	mov	ip, #204	; 0xcc
 41c:	add	r2, r2, #1
 420:	movw	r3, #0
 424:	movt	r3, #0
 428:	movw	r1, #0
 42c:	movt	r1, #0
 430:	mvn	r0, #0
 434:	lsl	r2, r2, #2
 438:	str	ip, [sp]
 43c:	bl	0 <coda_set_error>
 440:	b	3c8 <tree_node_get_node_for_index.constprop.3+0x1dc>
 444:	mov	ip, #212	; 0xd4
 448:	ldr	r2, [r6, #16]
 44c:	b	41c <tree_node_get_node_for_index.constprop.3+0x230>

00000450 <coda_tree_node_delete>:
 450:	strd	r4, [sp, #-16]!
 454:	mov	r5, r0
 458:	ldr	r0, [r0, #12]
 45c:	str	r6, [sp, #8]
 460:	mov	r6, r1
 464:	str	lr, [sp, #12]
 468:	cmp	r0, #0
 46c:	beq	474 <coda_tree_node_delete+0x24>
 470:	bl	450 <coda_tree_node_delete>
 474:	ldr	r0, [r5, #20]
 478:	cmp	r0, #0
 47c:	beq	484 <coda_tree_node_delete+0x34>
 480:	bl	0 <free>
 484:	ldr	r2, [r5, #24]
 488:	cmp	r2, #0
 48c:	beq	4d0 <coda_tree_node_delete+0x80>
 490:	ldr	ip, [r5, #16]
 494:	cmp	ip, #0
 498:	ble	4c8 <coda_tree_node_delete+0x78>
 49c:	mov	r4, #0
 4a0:	ldr	r3, [r2, r4, lsl #2]
 4a4:	mov	r1, r6
 4a8:	add	r4, r4, #1
 4ac:	subs	r0, r3, #0
 4b0:	beq	4c0 <coda_tree_node_delete+0x70>
 4b4:	bl	450 <coda_tree_node_delete>
 4b8:	ldr	ip, [r5, #16]
 4bc:	ldr	r2, [r5, #24]
 4c0:	cmp	ip, r4
 4c4:	bgt	4a0 <coda_tree_node_delete+0x50>
 4c8:	mov	r0, r2
 4cc:	bl	0 <free>
 4d0:	ldr	r2, [r5, #8]
 4d4:	cmp	r2, #0
 4d8:	beq	51c <coda_tree_node_delete+0xcc>
 4dc:	cmp	r6, #0
 4e0:	beq	514 <coda_tree_node_delete+0xc4>
 4e4:	ldr	r1, [r5, #4]
 4e8:	cmp	r1, #0
 4ec:	ble	514 <coda_tree_node_delete+0xc4>
 4f0:	mov	r4, #0
 4f4:	ldr	r3, [r2, r4, lsl #2]
 4f8:	add	r4, r4, #1
 4fc:	subs	r0, r3, #0
 500:	beq	50c <coda_tree_node_delete+0xbc>
 504:	blx	r6
 508:	ldmib	r5, {r1, r2}
 50c:	cmp	r1, r4
 510:	bgt	4f4 <coda_tree_node_delete+0xa4>
 514:	mov	r0, r2
 518:	bl	0 <free>
 51c:	mov	r0, r5
 520:	ldrd	r4, [sp]
 524:	ldr	r6, [sp, #8]
 528:	ldr	lr, [sp, #12]
 52c:	add	sp, sp, #16
 530:	b	0 <free>

00000534 <coda_tree_node_add_item_for_path>:
 534:	strd	r4, [sp, #-36]!	; 0xffffffdc
 538:	strd	r6, [sp, #8]
 53c:	mov	r7, r1
 540:	strd	r8, [sp, #16]
 544:	strd	sl, [sp, #24]
 548:	str	lr, [sp, #32]
 54c:	sub	sp, sp, #44	; 0x2c
 550:	strd	r2, [sp, #12]
 554:	ldrb	r2, [r1]
 558:	str	r0, [sp, #20]
 55c:	cmp	r2, #47	; 0x2f
 560:	movne	r4, #0
 564:	bne	588 <coda_tree_node_add_item_for_path+0x54>
 568:	ldrb	r3, [r1, #1]
 56c:	cmp	r3, #91	; 0x5b
 570:	cmpne	r3, #47	; 0x2f
 574:	moveq	r4, #1
 578:	movne	r4, #0
 57c:	tst	r3, #191	; 0xbf
 580:	moveq	r4, #1
 584:	ldrb	r2, [r1, r4]
 588:	cmp	r2, #0
 58c:	movw	sl, #0
 590:	movt	sl, #0
 594:	movw	r9, #0
 598:	movt	r9, #0
 59c:	movw	fp, #0
 5a0:	movt	fp, #0
 5a4:	ldr	r0, [sp, #20]
 5a8:	beq	68c <coda_tree_node_add_item_for_path+0x158>
 5ac:	cmp	r2, #64	; 0x40
 5b0:	beq	6f0 <coda_tree_node_add_item_for_path+0x1bc>
 5b4:	add	r1, sp, #28
 5b8:	ldr	r0, [r0]
 5bc:	bl	0 <coda_type_get_class>
 5c0:	ldr	r3, [sp, #28]
 5c4:	cmp	r3, #6
 5c8:	beq	7f4 <coda_tree_node_add_item_for_path+0x2c0>
 5cc:	ldrb	r3, [r7, r4]
 5d0:	cmp	r3, #91	; 0x5b
 5d4:	beq	710 <coda_tree_node_add_item_for_path+0x1dc>
 5d8:	cmp	r3, #47	; 0x2f
 5dc:	bne	8f4 <coda_tree_node_add_item_for_path+0x3c0>
 5e0:	ldr	r0, [sp, #28]
 5e4:	cmp	r0, #0
 5e8:	bne	7d4 <coda_tree_node_add_item_for_path+0x2a0>
 5ec:	add	r5, r4, #1
 5f0:	ldrb	r3, [r7, r5]
 5f4:	add	r1, r7, r5
 5f8:	cmp	r3, #91	; 0x5b
 5fc:	cmpne	r3, #47	; 0x2f
 600:	movne	r2, #1
 604:	moveq	r2, #0
 608:	tst	r3, #191	; 0xbf
 60c:	moveq	r2, #0
 610:	cmp	r2, #0
 614:	beq	884 <coda_tree_node_add_item_for_path+0x350>
 618:	mov	ip, r1
 61c:	rsb	lr, r7, #1
 620:	add	r4, lr, ip
 624:	ldrb	r2, [ip, #1]!
 628:	cmp	r2, #47	; 0x2f
 62c:	cmpne	r2, #91	; 0x5b
 630:	movne	r3, #1
 634:	moveq	r3, #0
 638:	tst	r2, #191	; 0xbf
 63c:	moveq	r3, #0
 640:	cmp	r3, #0
 644:	bne	620 <coda_tree_node_add_item_for_path+0xec>
 648:	sub	r2, r4, r5
 64c:	ldr	r0, [sp, #20]
 650:	add	r3, sp, #32
 654:	ldr	r0, [r0]
 658:	bl	0 <coda_type_get_record_field_index_from_name_n>
 65c:	cmp	r0, #0
 660:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 664:	add	r2, sp, #20
 668:	ldr	r0, [sp, #20]
 66c:	ldr	r1, [sp, #32]
 670:	bl	1ec <tree_node_get_node_for_index.constprop.3>
 674:	cmp	r0, #0
 678:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 67c:	ldr	r0, [sp, #20]
 680:	ldrb	r2, [r7, r4]
 684:	cmp	r2, #0
 688:	bne	5ac <coda_tree_node_add_item_for_path+0x78>
 68c:	add	r1, sp, #28
 690:	ldr	r0, [r0]
 694:	bl	0 <coda_type_get_class>
 698:	ldr	r3, [sp, #16]
 69c:	cmp	r3, #0
 6a0:	beq	6b0 <coda_tree_node_add_item_for_path+0x17c>
 6a4:	ldr	r3, [sp, #28]
 6a8:	cmp	r3, #1
 6ac:	bls	954 <coda_tree_node_add_item_for_path+0x420>
 6b0:	ldr	r4, [sp, #20]
 6b4:	ldr	r1, [r4, #4]
 6b8:	ldr	r0, [r4, #8]
 6bc:	add	r1, r1, #1
 6c0:	lsl	r1, r1, #2
 6c4:	bl	0 <realloc>
 6c8:	subs	r3, r0, #0
 6cc:	ldr	r2, [r4, #4]
 6d0:	beq	83c <coda_tree_node_add_item_for_path+0x308>
 6d4:	ldr	ip, [sp, #12]
 6d8:	add	r1, r2, #1
 6dc:	mov	r0, #0
 6e0:	str	r3, [r4, #8]
 6e4:	str	ip, [r3, r2, lsl #2]
 6e8:	str	r1, [r4, #4]
 6ec:	b	868 <coda_tree_node_add_item_for_path+0x334>
 6f0:	add	r2, sp, #20
 6f4:	mvn	r1, #0
 6f8:	bl	1ec <tree_node_get_node_for_index.constprop.3>
 6fc:	cmp	r0, #0
 700:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 704:	add	r4, r4, #1
 708:	ldr	r0, [sp, #20]
 70c:	b	680 <coda_tree_node_add_item_for_path+0x14c>
 710:	ldr	r0, [sp, #28]
 714:	cmp	r0, #1
 718:	beq	738 <coda_tree_node_add_item_for_path+0x204>
 71c:	bl	0 <coda_type_get_class_name>
 720:	mov	r3, r7
 724:	mov	r2, r4
 728:	str	r0, [sp]
 72c:	mov	r1, fp
 730:	mvn	r0, #99	; 0x63
 734:	bl	0 <coda_set_error>
 738:	add	r6, r4, #1
 73c:	ldrb	r3, [r7, r6]
 740:	mov	r5, r6
 744:	add	r8, r7, r6
 748:	cmp	r3, #93	; 0x5d
 74c:	cmpne	r3, #0
 750:	beq	81c <coda_tree_node_add_item_for_path+0x2e8>
 754:	mov	r2, r8
 758:	b	760 <coda_tree_node_add_item_for_path+0x22c>
 75c:	mov	r6, r5
 760:	ldrb	r3, [r2, #1]!
 764:	add	r5, r6, #1
 768:	cmp	r3, #0
 76c:	cmpne	r3, #93	; 0x5d
 770:	bne	75c <coda_tree_node_add_item_for_path+0x228>
 774:	cmp	r3, #0
 778:	beq	8dc <coda_tree_node_add_item_for_path+0x3a8>
 77c:	cmp	r4, r6
 780:	beq	824 <coda_tree_node_add_item_for_path+0x2f0>
 784:	add	r3, sp, #36	; 0x24
 788:	add	r2, sp, #32
 78c:	mov	r1, r9
 790:	mov	r0, r8
 794:	bl	0 <__isoc99_sscanf>
 798:	cmp	r0, #1
 79c:	sub	r4, r6, r4
 7a0:	bne	90c <coda_tree_node_add_item_for_path+0x3d8>
 7a4:	ldr	r3, [sp, #36]	; 0x24
 7a8:	cmp	r3, r4
 7ac:	bne	90c <coda_tree_node_add_item_for_path+0x3d8>
 7b0:	add	r2, sp, #20
 7b4:	ldr	r0, [sp, #20]
 7b8:	ldr	r1, [sp, #32]
 7bc:	bl	1ec <tree_node_get_node_for_index.constprop.3>
 7c0:	cmp	r0, #0
 7c4:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 7c8:	ldr	r0, [sp, #20]
 7cc:	add	r4, r5, #1
 7d0:	b	680 <coda_tree_node_add_item_for_path+0x14c>
 7d4:	bl	0 <coda_type_get_class_name>
 7d8:	mov	r3, r7
 7dc:	mov	r2, r4
 7e0:	str	r0, [sp]
 7e4:	mov	r1, sl
 7e8:	mvn	r0, #99	; 0x63
 7ec:	bl	0 <coda_set_error>
 7f0:	b	5ec <coda_tree_node_add_item_for_path+0xb8>
 7f4:	ldr	r3, [sp, #20]
 7f8:	add	r1, sp, #36	; 0x24
 7fc:	ldr	r0, [r3]
 800:	bl	0 <coda_type_get_special_base_type>
 804:	cmp	r0, #0
 808:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 80c:	add	r1, sp, #28
 810:	ldr	r0, [sp, #36]	; 0x24
 814:	bl	0 <coda_type_get_class>
 818:	b	5cc <coda_tree_node_add_item_for_path+0x98>
 81c:	cmp	r3, #0
 820:	beq	8dc <coda_tree_node_add_item_for_path+0x3a8>
 824:	ldr	r4, [sp, #20]
 828:	ldr	r0, [r4, #12]
 82c:	cmp	r0, #0
 830:	beq	88c <coda_tree_node_add_item_for_path+0x358>
 834:	str	r0, [sp, #20]
 838:	b	7cc <coda_tree_node_add_item_for_path+0x298>
 83c:	mov	ip, #119	; 0x77
 840:	add	r2, r2, #1
 844:	movw	r3, #0
 848:	movt	r3, #0
 84c:	lsl	r2, r2, #2
 850:	movw	r1, #0
 854:	movt	r1, #0
 858:	str	ip, [sp]
 85c:	mvn	r0, #0
 860:	bl	0 <coda_set_error>
 864:	mvn	r0, #0
 868:	add	sp, sp, #44	; 0x2c
 86c:	ldrd	r4, [sp]
 870:	ldrd	r6, [sp, #8]
 874:	ldrd	r8, [sp, #16]
 878:	ldrd	sl, [sp, #24]
 87c:	add	sp, sp, #32
 880:	pop	{pc}		; (ldr pc, [sp], #4)
 884:	mov	r4, r5
 888:	b	64c <coda_tree_node_add_item_for_path+0x118>
 88c:	ldr	r6, [r4]
 890:	add	r1, sp, #32
 894:	mov	r0, r6
 898:	bl	0 <coda_type_get_class>
 89c:	ldr	r3, [sp, #32]
 8a0:	cmp	r3, #6
 8a4:	beq	928 <coda_tree_node_add_item_for_path+0x3f4>
 8a8:	cmp	r3, #1
 8ac:	bne	970 <coda_tree_node_add_item_for_path+0x43c>
 8b0:	mov	r0, r6
 8b4:	add	r1, sp, #36	; 0x24
 8b8:	bl	0 <coda_type_get_array_base_type>
 8bc:	cmp	r0, #0
 8c0:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 8c4:	ldr	r0, [sp, #36]	; 0x24
 8c8:	bl	170 <coda_tree_node_new>
 8cc:	cmp	r0, #0
 8d0:	str	r0, [r4, #12]
 8d4:	bne	834 <coda_tree_node_add_item_for_path+0x300>
 8d8:	b	864 <coda_tree_node_add_item_for_path+0x330>
 8dc:	mov	r2, r7
 8e0:	movw	r1, #0
 8e4:	movt	r1, #0
 8e8:	mvn	r0, #99	; 0x63
 8ec:	bl	0 <coda_set_error>
 8f0:	b	864 <coda_tree_node_add_item_for_path+0x330>
 8f4:	mov	r2, r7
 8f8:	movw	r1, #0
 8fc:	movt	r1, #0
 900:	mvn	r0, #99	; 0x63
 904:	bl	0 <coda_set_error>
 908:	b	864 <coda_tree_node_add_item_for_path+0x330>
 90c:	mov	r3, r8
 910:	mov	r2, r4
 914:	movw	r1, #0
 918:	movt	r1, #0
 91c:	mvn	r0, #99	; 0x63
 920:	bl	0 <coda_set_error>
 924:	b	864 <coda_tree_node_add_item_for_path+0x330>
 928:	mov	r0, r6
 92c:	add	r1, sp, #36	; 0x24
 930:	bl	0 <coda_type_get_special_base_type>
 934:	cmp	r0, #0
 938:	bne	864 <coda_tree_node_add_item_for_path+0x330>
 93c:	ldr	r6, [sp, #36]	; 0x24
 940:	add	r1, sp, #32
 944:	mov	r0, r6
 948:	bl	0 <coda_type_get_class>
 94c:	ldr	r3, [sp, #32]
 950:	b	8a8 <coda_tree_node_add_item_for_path+0x374>
 954:	mvn	r0, #99	; 0x63
 958:	mov	r2, r7
 95c:	movw	r1, #0
 960:	movt	r1, #0
 964:	bl	0 <coda_set_error>
 968:	mvn	r0, #0
 96c:	b	868 <coda_tree_node_add_item_for_path+0x334>
 970:	movw	r3, #0
 974:	movt	r3, #0
 978:	movw	r1, #0
 97c:	movt	r1, #0
 980:	movw	r0, #0
 984:	movt	r0, #0
 988:	mov	r2, #149	; 0x95
 98c:	bl	0 <__assert_fail>

00000990 <coda_tree_node_get_item_for_cursor>:
 990:	mov	r3, r2
 994:	mov	r2, r1
 998:	mov	r1, #0
 99c:	b	0 <get_item_for_cursor>
