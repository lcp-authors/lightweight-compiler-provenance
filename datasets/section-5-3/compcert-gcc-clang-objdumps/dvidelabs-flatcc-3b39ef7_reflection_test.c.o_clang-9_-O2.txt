
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/CMakeFiles/reflection_test.dir/reflection_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_schema>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #4
   c:	movw	r1, #0
  10:	movt	r1, #0
  14:	bl	0 <fopen>
  18:	cmp	r0, #0
  1c:	beq	258 <test_schema+0x258>
  20:	mov	r1, #0
  24:	mov	r2, #2
  28:	mov	r5, r0
  2c:	bl	0 <fseek>
  30:	mov	r0, r5
  34:	bl	0 <ftell>
  38:	mov	r6, r0
  3c:	movw	r0, #10000	; 0x2710
  40:	cmp	r6, r0
  44:	bhi	250 <test_schema+0x250>
  48:	mov	r0, r5
  4c:	bl	0 <rewind>
  50:	cmp	r6, #0
  54:	mov	r0, r6
  58:	movweq	r0, #1
  5c:	bl	0 <malloc>
  60:	cmp	r0, #0
  64:	beq	250 <test_schema+0x250>
  68:	mov	r8, r0
  6c:	mov	r1, #0
  70:	mov	r4, r1
  74:	add	r0, r8, r1
  78:	sub	r2, r6, r1
  7c:	mov	r1, #1
  80:	mov	r3, r5
  84:	bl	0 <fread_unlocked>
  88:	add	r1, r0, r4
  8c:	cmp	r0, #0
  90:	bne	70 <test_schema+0x70>
  94:	mov	r0, r5
  98:	bl	0 <fclose>
  9c:	cmp	r6, r4
  a0:	bne	274 <test_schema+0x274>
  a4:	ldr	r0, [r8, #4]
  a8:	movw	r1, #17986	; 0x4642
  ac:	movt	r1, #21314	; 0x5342
  b0:	cmp	r0, r1
  b4:	bne	604 <test_schema+0x604>
  b8:	ldr	r1, [r8]
  bc:	mov	r0, r8
  c0:	ldr	r2, [r0, r1]!
  c4:	mov	r1, r0
  c8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
  cc:	cmp	r2, #5
  d0:	bls	5f8 <test_schema+0x5f8>
  d4:	ldrh	r1, [r1, #4]
  d8:	cmp	r1, #0
  dc:	beq	5f8 <test_schema+0x5f8>
  e0:	ldr	r1, [r0, r1]!
  e4:	ldr	r1, [r0, r1]!
  e8:	cmp	r1, #0
  ec:	beq	234 <test_schema+0x234>
  f0:	movw	r6, #0
  f4:	add	sl, r0, #4
  f8:	mov	r5, #0
  fc:	movt	r6, #0
 100:	mov	r7, sl
 104:	ldr	r0, [r7]
 108:	ldr	r1, [r7, r0]
 10c:	sub	r1, r0, r1
 110:	add	r1, r7, r1
 114:	ldrh	r2, [r1]
 118:	cmp	r2, #6
 11c:	bcc	5b8 <test_schema+0x5b8>
 120:	ldrh	r1, [r1, #4]
 124:	cmp	r1, #0
 128:	beq	5b8 <test_schema+0x5b8>
 12c:	add	r2, r0, r1
 130:	ldr	r2, [r7, r2]
 134:	add	r0, r2, r0
 138:	add	r0, r0, r1
 13c:	mov	r1, r5
 140:	add	r0, r7, r0
 144:	add	r2, r0, #4
 148:	mov	r0, r6
 14c:	bl	0 <printf>
 150:	ldr	r4, [sl, #-4]
 154:	add	r5, r5, #1
 158:	add	r7, r7, #4
 15c:	cmp	r5, r4
 160:	bcc	104 <test_schema+0x104>
 164:	cmp	r4, #0
 168:	beq	234 <test_schema+0x234>
 16c:	mov	r6, #0
 170:	subs	r5, r4, #1
 174:	beq	1ec <test_schema+0x1ec>
 178:	movw	r9, #0
 17c:	movt	r9, #0
 180:	sub	r0, r5, r6
 184:	add	r7, r6, r0, lsr #1
 188:	cmp	r4, r7
 18c:	bls	5d8 <test_schema+0x5d8>
 190:	mov	r0, sl
 194:	ldr	r1, [r0, r7, lsl #2]!
 198:	ldr	r2, [r0, r1]!
 19c:	mov	r1, r0
 1a0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
 1a4:	cmp	r2, #6
 1a8:	bcc	5b8 <test_schema+0x5b8>
 1ac:	ldrh	r1, [r1, #4]
 1b0:	cmp	r1, #0
 1b4:	beq	5b8 <test_schema+0x5b8>
 1b8:	ldr	r1, [r0, r1]!
 1bc:	add	r0, r0, r1
 1c0:	mov	r1, r9
 1c4:	add	r0, r0, #4
 1c8:	bl	0 <strcmp>
 1cc:	cmp	r0, #0
 1d0:	movpl	r5, r7
 1d4:	addmi	r6, r7, #1
 1d8:	cmp	r5, r6
 1dc:	bhi	180 <test_schema+0x180>
 1e0:	bne	234 <test_schema+0x234>
 1e4:	cmp	r4, r6
 1e8:	bls	5d8 <test_schema+0x5d8>
 1ec:	ldr	r0, [sl, r6, lsl #2]!
 1f0:	ldr	r0, [sl, r0]!
 1f4:	mov	r5, sl
 1f8:	ldrh	r7, [r5, -r0]!
 1fc:	cmp	r7, #6
 200:	bcc	5b8 <test_schema+0x5b8>
 204:	ldrh	r0, [r5, #4]
 208:	cmp	r0, #0
 20c:	beq	5b8 <test_schema+0x5b8>
 210:	mov	r1, sl
 214:	ldr	r0, [r1, r0]!
 218:	add	r0, r1, r0
 21c:	movw	r1, #0
 220:	movt	r1, #0
 224:	add	r0, r0, #4
 228:	bl	0 <strcmp>
 22c:	cmp	r0, #0
 230:	beq	280 <test_schema+0x280>
 234:	movw	r0, #0
 238:	movt	r0, #0
 23c:	bl	0 <puts>
 240:	mvn	r5, #0
 244:	mov	r0, r8
 248:	bl	0 <free>
 24c:	b	268 <test_schema+0x268>
 250:	mov	r0, r5
 254:	bl	0 <fclose>
 258:	movw	r0, #0
 25c:	movt	r0, #0
 260:	bl	0 <puts>
 264:	mvn	r5, #0
 268:	mov	r0, r5
 26c:	sub	sp, fp, #28
 270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 274:	mov	r0, r8
 278:	bl	0 <free>
 27c:	b	258 <test_schema+0x258>
 280:	cmp	r4, r6
 284:	bls	5d8 <test_schema+0x5d8>
 288:	cmp	r7, #8
 28c:	bcc	624 <test_schema+0x624>
 290:	ldrh	r0, [r5, #6]
 294:	cmp	r0, #0
 298:	beq	624 <test_schema+0x624>
 29c:	ldr	r0, [sl, r0]!
 2a0:	movw	r1, #0
 2a4:	movt	r1, #0
 2a8:	add	r0, sl, r0
 2ac:	add	r5, r0, #4
 2b0:	mov	r0, r5
 2b4:	bl	6c4 <reflection_Field_vec_find>
 2b8:	cmn	r0, #1
 2bc:	beq	540 <test_schema+0x540>
 2c0:	ldr	r1, [r5, #-4]
 2c4:	cmp	r1, r0
 2c8:	bls	664 <test_schema+0x664>
 2cc:	mov	r4, r5
 2d0:	ldr	r0, [r4, r0, lsl #2]!
 2d4:	ldr	r1, [r4, r0]!
 2d8:	mov	r0, r4
 2dc:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
 2e0:	cmp	r1, #14
 2e4:	bcc	4c4 <test_schema+0x4c4>
 2e8:	ldrh	r1, [r0, #12]
 2ec:	cmp	r1, #0
 2f0:	beq	4c4 <test_schema+0x4c4>
 2f4:	mov	r2, r4
 2f8:	ldr	r1, [r2, r1]!
 2fc:	ldr	r2, [r2, #4]
 300:	eor	r1, r1, #150	; 0x96
 304:	orrs	r1, r1, r2
 308:	bne	4c4 <test_schema+0x4c4>
 30c:	ldrh	r0, [r0, #6]
 310:	cmp	r0, #0
 314:	beq	684 <test_schema+0x684>
 318:	ldr	r0, [r4, r0]!
 31c:	adds	r0, r4, r0
 320:	beq	6a4 <test_schema+0x6a4>
 324:	ldr	r2, [r0]
 328:	mov	r1, r0
 32c:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
 330:	cmp	r2, #6
 334:	bcc	564 <test_schema+0x564>
 338:	ldrh	r1, [r1, #4]
 33c:	cmp	r1, #0
 340:	beq	564 <test_schema+0x564>
 344:	ldrb	r0, [r0, r1]
 348:	cmp	r0, #5
 34c:	bne	564 <test_schema+0x564>
 350:	movw	r1, #0
 354:	mov	r0, r5
 358:	movt	r1, #0
 35c:	bl	6c4 <reflection_Field_vec_find>
 360:	cmn	r0, #1
 364:	beq	57c <test_schema+0x57c>
 368:	ldr	r1, [r5, #-4]
 36c:	cmp	r1, r0
 370:	bls	664 <test_schema+0x664>
 374:	mov	r1, r5
 378:	ldr	r0, [r1, r0, lsl #2]!
 37c:	ldr	r2, [r1, r0]!
 380:	mov	r0, r1
 384:	ldrh	r2, [r0, -r2]!	; <UNPREDICTABLE>
 388:	cmp	r2, #8
 38c:	bcc	684 <test_schema+0x684>
 390:	ldrh	r0, [r0, #6]
 394:	cmp	r0, #0
 398:	beq	684 <test_schema+0x684>
 39c:	ldr	r0, [r1, r0]!
 3a0:	adds	r0, r1, r0
 3a4:	beq	6a4 <test_schema+0x6a4>
 3a8:	ldr	r2, [r0]
 3ac:	mov	r1, r0
 3b0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
 3b4:	cmp	r2, #6
 3b8:	bcc	570 <test_schema+0x570>
 3bc:	ldrh	r3, [r1, #4]
 3c0:	cmp	r3, #0
 3c4:	beq	570 <test_schema+0x570>
 3c8:	ldrb	r3, [r0, r3]
 3cc:	cmp	r3, #15
 3d0:	bne	570 <test_schema+0x570>
 3d4:	mvn	r3, #0
 3d8:	cmp	r2, #10
 3dc:	bcc	3ec <test_schema+0x3ec>
 3e0:	ldrh	r1, [r1, #8]
 3e4:	cmp	r1, #0
 3e8:	ldrne	r3, [r0, r1]
 3ec:	cmp	r3, r6
 3f0:	bne	588 <test_schema+0x588>
 3f4:	movw	r1, #0
 3f8:	mov	r0, r5
 3fc:	movt	r1, #0
 400:	bl	6c4 <reflection_Field_vec_find>
 404:	cmn	r0, #1
 408:	beq	5a0 <test_schema+0x5a0>
 40c:	ldr	r1, [r5, #-4]
 410:	cmp	r1, r0
 414:	bls	664 <test_schema+0x664>
 418:	ldr	r0, [r5, r0, lsl #2]!
 41c:	ldr	r1, [r5, r0]!
 420:	mov	r0, r5
 424:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
 428:	cmp	r1, #8
 42c:	bcc	684 <test_schema+0x684>
 430:	ldrh	r0, [r0, #6]
 434:	cmp	r0, #0
 438:	beq	684 <test_schema+0x684>
 43c:	ldr	r0, [r5, r0]!
 440:	adds	r0, r5, r0
 444:	beq	6a4 <test_schema+0x6a4>
 448:	ldr	r2, [r0]
 44c:	mov	r1, r0
 450:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
 454:	cmp	r2, #6
 458:	bcc	594 <test_schema+0x594>
 45c:	ldrh	r3, [r1, #4]
 460:	cmp	r3, #0
 464:	beq	594 <test_schema+0x594>
 468:	ldrb	r3, [r0, r3]
 46c:	cmp	r3, #14
 470:	bne	594 <test_schema+0x594>
 474:	cmp	r2, #8
 478:	bcc	5ac <test_schema+0x5ac>
 47c:	ldrh	r3, [r1, #6]
 480:	cmp	r3, #0
 484:	beq	5ac <test_schema+0x5ac>
 488:	ldrb	r3, [r0, r3]
 48c:	cmp	r3, #15
 490:	bne	5ac <test_schema+0x5ac>
 494:	mvn	r3, #0
 498:	cmp	r2, #10
 49c:	bcc	4ac <test_schema+0x4ac>
 4a0:	ldrh	r1, [r1, #8]
 4a4:	cmp	r1, #0
 4a8:	ldrne	r3, [r0, r1]
 4ac:	mov	r5, #0
 4b0:	cmp	r3, r6
 4b4:	beq	244 <test_schema+0x244>
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	b	23c <test_schema+0x23c>
 4c4:	movw	r0, #0
 4c8:	movt	r0, #0
 4cc:	bl	0 <puts>
 4d0:	ldr	r1, [r4]
 4d4:	mov	r0, r4
 4d8:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
 4dc:	cmp	r1, #6
 4e0:	bcc	644 <test_schema+0x644>
 4e4:	ldrh	r0, [r0, #4]
 4e8:	cmp	r0, #0
 4ec:	beq	644 <test_schema+0x644>
 4f0:	mov	r1, r4
 4f4:	ldr	r0, [r1, r0]!
 4f8:	add	r0, r1, r0
 4fc:	add	r1, r0, #4
 500:	movw	r0, #0
 504:	movt	r0, #0
 508:	bl	0 <printf>
 50c:	ldr	r1, [r4]
 510:	mov	r0, r4
 514:	mov	r2, #0
 518:	mov	r3, #0
 51c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
 520:	cmp	r1, #14
 524:	bcc	554 <test_schema+0x554>
 528:	ldrh	r0, [r0, #12]
 52c:	cmp	r0, #0
 530:	beq	54c <test_schema+0x54c>
 534:	ldr	r2, [r4, r0]!
 538:	ldr	r3, [r4, #4]
 53c:	b	554 <test_schema+0x554>
 540:	movw	r0, #0
 544:	movt	r0, #0
 548:	b	23c <test_schema+0x23c>
 54c:	mov	r2, #0
 550:	mov	r3, #0
 554:	movw	r0, #0
 558:	movt	r0, #0
 55c:	bl	0 <printf>
 560:	b	240 <test_schema+0x240>
 564:	movw	r0, #0
 568:	movt	r0, #0
 56c:	b	23c <test_schema+0x23c>
 570:	movw	r0, #0
 574:	movt	r0, #0
 578:	b	23c <test_schema+0x23c>
 57c:	movw	r0, #0
 580:	movt	r0, #0
 584:	b	23c <test_schema+0x23c>
 588:	movw	r0, #0
 58c:	movt	r0, #0
 590:	b	23c <test_schema+0x23c>
 594:	movw	r0, #0
 598:	movt	r0, #0
 59c:	b	23c <test_schema+0x23c>
 5a0:	movw	r0, #0
 5a4:	movt	r0, #0
 5a8:	b	23c <test_schema+0x23c>
 5ac:	movw	r0, #0
 5b0:	movt	r0, #0
 5b4:	b	23c <test_schema+0x23c>
 5b8:	movw	r0, #0
 5bc:	movw	r1, #0
 5c0:	movw	r3, #0
 5c4:	mov	r2, #218	; 0xda
 5c8:	movt	r0, #0
 5cc:	movt	r1, #0
 5d0:	movt	r3, #0
 5d4:	bl	0 <__assert_fail>
 5d8:	movw	r0, #0
 5dc:	movw	r1, #0
 5e0:	movw	r3, #0
 5e4:	mov	r2, #215	; 0xd7
 5e8:	movt	r0, #0
 5ec:	movt	r1, #0
 5f0:	movt	r3, #0
 5f4:	bl	0 <__assert_fail>
 5f8:	movw	r0, #0
 5fc:	movt	r0, #0
 600:	b	60c <test_schema+0x60c>
 604:	movw	r0, #0
 608:	movt	r0, #0
 60c:	movw	r1, #0
 610:	movw	r3, #0
 614:	mov	r2, #237	; 0xed
 618:	movt	r1, #0
 61c:	movt	r3, #0
 620:	bl	0 <__assert_fail>
 624:	movw	r0, #0
 628:	movw	r1, #0
 62c:	movw	r3, #0
 630:	mov	r2, #224	; 0xe0
 634:	movt	r0, #0
 638:	movt	r1, #0
 63c:	movt	r3, #0
 640:	bl	0 <__assert_fail>
 644:	movw	r0, #0
 648:	movw	r1, #0
 64c:	movw	r3, #0
 650:	mov	r2, #195	; 0xc3
 654:	movt	r0, #0
 658:	movt	r1, #0
 65c:	movt	r3, #0
 660:	bl	0 <__assert_fail>
 664:	movw	r0, #0
 668:	movw	r1, #0
 66c:	movw	r3, #0
 670:	mov	r2, #192	; 0xc0
 674:	movt	r0, #0
 678:	movt	r1, #0
 67c:	movt	r3, #0
 680:	bl	0 <__assert_fail>
 684:	movw	r0, #0
 688:	movw	r1, #0
 68c:	movw	r3, #0
 690:	mov	r2, #201	; 0xc9
 694:	movt	r0, #0
 698:	movt	r1, #0
 69c:	movt	r3, #0
 6a0:	bl	0 <__assert_fail>
 6a4:	movw	r0, #0
 6a8:	movw	r1, #0
 6ac:	movw	r3, #0
 6b0:	mov	r2, #147	; 0x93
 6b4:	movt	r0, #0
 6b8:	movt	r1, #0
 6bc:	movt	r3, #0
 6c0:	bl	0 <__assert_fail>

000006c4 <reflection_Field_vec_find>:
 6c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 6c8:	add	fp, sp, #24
 6cc:	mvn	r4, #0
 6d0:	cmp	r0, #0
 6d4:	beq	7a4 <reflection_Field_vec_find+0xe0>
 6d8:	ldr	r7, [r0, #-4]
 6dc:	mov	r9, r0
 6e0:	cmp	r7, #0
 6e4:	beq	7a4 <reflection_Field_vec_find+0xe0>
 6e8:	mov	r8, r1
 6ec:	mov	r4, #0
 6f0:	subs	r5, r7, #1
 6f4:	beq	764 <reflection_Field_vec_find+0xa0>
 6f8:	sub	r0, r5, r4
 6fc:	add	r6, r4, r0, lsr #1
 700:	cmp	r7, r6
 704:	bls	7d8 <reflection_Field_vec_find+0x114>
 708:	mov	r0, r9
 70c:	ldr	r1, [r0, r6, lsl #2]!
 710:	ldr	r2, [r0, r1]!
 714:	mov	r1, r0
 718:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
 71c:	cmp	r2, #6
 720:	bcc	7b8 <reflection_Field_vec_find+0xf4>
 724:	ldrh	r1, [r1, #4]
 728:	cmp	r1, #0
 72c:	beq	7b8 <reflection_Field_vec_find+0xf4>
 730:	ldr	r1, [r0, r1]!
 734:	add	r0, r0, r1
 738:	mov	r1, r8
 73c:	add	r0, r0, #4
 740:	bl	0 <strcmp>
 744:	cmp	r0, #0
 748:	movpl	r5, r6
 74c:	addmi	r4, r6, #1
 750:	cmp	r5, r4
 754:	bhi	6f8 <reflection_Field_vec_find+0x34>
 758:	bne	7ac <reflection_Field_vec_find+0xe8>
 75c:	cmp	r7, r4
 760:	bls	7d8 <reflection_Field_vec_find+0x114>
 764:	ldr	r0, [r9, r4, lsl #2]!
 768:	ldr	r1, [r9, r0]!
 76c:	mov	r0, r9
 770:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
 774:	cmp	r1, #6
 778:	bcc	7b8 <reflection_Field_vec_find+0xf4>
 77c:	ldrh	r0, [r0, #4]
 780:	cmp	r0, #0
 784:	beq	7b8 <reflection_Field_vec_find+0xf4>
 788:	ldr	r0, [r9, r0]!
 78c:	mov	r1, r8
 790:	add	r0, r9, r0
 794:	add	r0, r0, #4
 798:	bl	0 <strcmp>
 79c:	cmp	r0, #0
 7a0:	mvnne	r4, #0
 7a4:	mov	r0, r4
 7a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 7ac:	mvn	r4, #0
 7b0:	mov	r0, r4
 7b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 7b8:	movw	r0, #0
 7bc:	movw	r1, #0
 7c0:	movw	r3, #0
 7c4:	mov	r2, #195	; 0xc3
 7c8:	movt	r0, #0
 7cc:	movt	r1, #0
 7d0:	movt	r3, #0
 7d4:	bl	0 <__assert_fail>
 7d8:	movw	r0, #0
 7dc:	movw	r1, #0
 7e0:	movw	r3, #0
 7e4:	mov	r2, #192	; 0xc0
 7e8:	movt	r0, #0
 7ec:	movt	r1, #0
 7f0:	movt	r3, #0
 7f4:	bl	0 <__assert_fail>

000007f8 <main>:
 7f8:	push	{fp, lr}
 7fc:	mov	fp, sp
 800:	sub	r2, r0, #1
 804:	cmp	r2, #2
 808:	bcs	840 <main+0x48>
 80c:	cmp	r0, #2
 810:	bne	82c <main+0x34>
 814:	ldr	r0, [r1, #4]
 818:	movw	r1, #0
 81c:	movt	r1, #0
 820:	str	r0, [r1]
 824:	pop	{fp, lr}
 828:	b	0 <test_schema>
 82c:	movw	r0, #0
 830:	movt	r0, #0
 834:	ldr	r0, [r0]
 838:	pop	{fp, lr}
 83c:	b	0 <test_schema>
 840:	movw	r0, #0
 844:	mov	r1, #64	; 0x40
 848:	mov	r2, #1
 84c:	movt	r0, #0
 850:	ldr	r3, [r0]
 854:	movw	r0, #0
 858:	movt	r0, #0
 85c:	bl	0 <fwrite>
 860:	mov	r0, #1
 864:	bl	0 <exit>
