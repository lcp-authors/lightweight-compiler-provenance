
../compcert-repos/prog2/CMakeFiles/6.Challenge.dir/Aula06_Challenge/challenge.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	movw	r0, #0
  10:	add	r1, sp, #4
  14:	movt	r0, #0
  18:	bl	0 <__isoc99_scanf>
  1c:	ldr	r9, [sp, #4]
  20:	cmp	r9, #0
  24:	beq	1a4 <main+0x1a4>
  28:	movw	r5, #0
  2c:	vmov.i32	q4, #1	; 0x00000001
  30:	vmov.i32	q5, #5	; 0x00000005
  34:	vmov.i32	q6, #8	; 0x00000008
  38:	mov	r8, #32
  3c:	movt	r5, #0
  40:	b	a0 <main+0xa0>
  44:	movw	r0, #0
  48:	movt	r0, #0
  4c:	bl	0 <printf>
  50:	mov	sl, #0
  54:	movw	r4, #0
  58:	ldr	r1, [r7, sl, lsl #2]
  5c:	movt	r4, #0
  60:	mov	r0, r4
  64:	bl	0 <printf>
  68:	movw	r0, #0
  6c:	movt	r0, #0
  70:	bl	0 <printf>
  74:	orr	r0, sl, #1
  78:	ldr	r1, [r7, r0, lsl #2]
  7c:	movw	r0, #0
  80:	movt	r0, #0
  84:	bl	0 <printf>
  88:	mov	r0, r4
  8c:	add	r1, sp, #4
  90:	bl	0 <__isoc99_scanf>
  94:	ldr	r9, [sp, #4]
  98:	cmp	r9, #0
  9c:	beq	1a4 <main+0x1a4>
  a0:	lsl	r0, r9, #3
  a4:	bl	0 <malloc>
  a8:	mov	r7, r0
  ac:	cmp	r9, #1
  b0:	blt	44 <main+0x44>
  b4:	mov	r0, #0
  b8:	cmp	r9, #3
  bc:	bls	130 <main+0x130>
  c0:	bic	r0, r9, #3
  c4:	mov	r2, #1
  c8:	add	r3, pc, #224	; 0xe0
  cc:	subs	r1, r0, #4
  d0:	add	r2, r2, r1, lsr #2
  d4:	and	r1, r2, #1
  d8:	beq	190 <main+0x190>
  dc:	add	r4, pc, #204	; 0xcc
  e0:	sub	r3, r2, r1
  e4:	mov	r2, #0
  e8:	vld1.64	{d16-d17}, [r4 :128]
  ec:	mov	r4, r7
  f0:	vadd.i32	q9, q8, q4
  f4:	vadd.i32	q10, q8, q5
  f8:	vadd.i32	q8, q8, q6
  fc:	add	r6, r4, #16
 100:	subs	r3, r3, #2
 104:	add	r2, r2, #8
 108:	vst1.32	{d18-d19}, [r4], r8
 10c:	vst1.32	{d20-d21}, [r6]
 110:	bne	f0 <main+0xf0>
 114:	cmp	r1, #0
 118:	beq	128 <main+0x128>
 11c:	vadd.i32	q8, q8, q4
 120:	add	r1, r7, r2, lsl #2
 124:	vst1.32	{d16-d17}, [r1]
 128:	cmp	r9, r0
 12c:	beq	144 <main+0x144>
 130:	add	r1, r0, #1
 134:	str	r1, [r7, r0, lsl #2]
 138:	cmp	r9, r1
 13c:	mov	r0, r1
 140:	bne	130 <main+0x130>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	bl	0 <printf>
 150:	mov	sl, #0
 154:	cmp	r9, #3
 158:	blt	54 <main+0x54>
 15c:	add	r4, r7, r9, lsl #2
 160:	mov	sl, #0
 164:	mov	r6, r7
 168:	mov	r0, r5
 16c:	ldr	r1, [r6, sl, lsl #2]!
 170:	bl	0 <printf>
 174:	ldr	r0, [r6, #4]
 178:	sub	r9, r9, #1
 17c:	cmp	r9, #2
 180:	str	r0, [r4, sl, lsl #1]
 184:	add	sl, sl, #2
 188:	bgt	164 <main+0x164>
 18c:	b	54 <main+0x54>
 190:	vld1.64	{d16-d17}, [r3 :128]
 194:	mov	r2, #0
 198:	cmp	r1, #0
 19c:	bne	11c <main+0x11c>
 1a0:	b	128 <main+0x128>
 1a4:	mov	r0, #0
 1a8:	bl	0 <exit>
 1ac:	nop	{0}
 1b0:	.word	0x00000000
 1b4:	.word	0x00000001
 1b8:	.word	0x00000002
 1bc:	.word	0x00000003
