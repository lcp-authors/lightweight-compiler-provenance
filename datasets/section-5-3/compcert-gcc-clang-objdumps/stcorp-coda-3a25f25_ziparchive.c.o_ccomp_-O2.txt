
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/ziparchive.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <default_error_handler>:
   0:	mov	ip, sp
   4:	push	{r0, r1, r2, r3}
   8:	sub	sp, sp, #24
   c:	str	ip, [sp]
  10:	str	lr, [sp, #4]
  14:	str	r4, [sp, #8]
  18:	mov	r4, r0
  1c:	ldr	r0, [pc, #72]	; 6c <default_error_handler+0x6c>
  20:	ldr	r0, [r0]
  24:	ldr	r1, [pc, #68]	; 70 <default_error_handler+0x70>
  28:	bl	0 <fprintf>
  2c:	add	r2, sp, #16
  30:	add	lr, sp, #28
  34:	str	lr, [r2]
  38:	ldr	r1, [pc, #44]	; 6c <default_error_handler+0x6c>
  3c:	ldr	r0, [r1]
  40:	ldr	r2, [sp, #16]
  44:	mov	r1, r4
  48:	bl	0 <vfprintf>
  4c:	ldr	r0, [pc, #24]	; 6c <default_error_handler+0x6c>
  50:	ldr	r0, [r0]
  54:	ldr	r1, [pc, #24]	; 74 <default_error_handler+0x74>
  58:	bl	0 <fprintf>
  5c:	ldr	r4, [sp, #8]
  60:	ldr	lr, [sp, #4]
  64:	add	sp, sp, #40	; 0x28
  68:	bx	lr
  6c:	.word	0x00000000
  70:	.word	0x000003c7
  74:	.word	0x00000444

00000078 <coda_za_open>:
  78:	mov	ip, sp
  7c:	sub	sp, sp, #176	; 0xb0
  80:	str	ip, [sp]
  84:	str	lr, [sp, #4]
  88:	str	r4, [sp, #8]
  8c:	str	r5, [sp, #12]
  90:	str	r6, [sp, #16]
  94:	str	r7, [sp, #20]
  98:	str	r8, [sp, #24]
  9c:	mov	r4, r1
  a0:	mov	r5, r0
  a4:	add	r1, sp, #40	; 0x28
  a8:	mov	r0, r5
  ac:	bl	0 <stat>
  b0:	cmp	r0, #0
  b4:	beq	100 <coda_za_open+0x88>
  b8:	bl	0 <__errno_location>
  bc:	ldr	r1, [r0]
  c0:	cmp	r1, #2
  c4:	beq	ec <coda_za_open+0x74>
  c8:	bl	0 <__errno_location>
  cc:	ldr	r0, [r0]
  d0:	bl	0 <strerror>
  d4:	ldr	r1, [pc, #1376]	; 63c <coda_za_open+0x5c4>
  d8:	mov	r2, r0
  dc:	mov	r0, r1
  e0:	mov	r1, r5
  e4:	blx	r4
  e8:	b	f8 <coda_za_open+0x80>
  ec:	ldr	r0, [pc, #1388]	; 660 <coda_za_open+0x5e8>
  f0:	mov	r1, r5
  f4:	blx	r4
  f8:	mov	r0, #0
  fc:	b	618 <coda_za_open+0x5a0>
 100:	ldr	r2, [sp, #56]	; 0x38
 104:	and	r0, r2, #32768	; 0x8000
 108:	cmp	r0, #0
 10c:	bne	124 <coda_za_open+0xac>
 110:	ldr	r0, [pc, #1340]	; 654 <coda_za_open+0x5dc>
 114:	mov	r1, r5
 118:	blx	r4
 11c:	mov	r0, #0
 120:	b	618 <coda_za_open+0x5a0>
 124:	ldr	r1, [sp, #84]	; 0x54
 128:	cmp	r1, #22
 12c:	bge	144 <coda_za_open+0xcc>
 130:	ldr	r0, [pc, #1296]	; 648 <coda_za_open+0x5d0>
 134:	mov	r1, r5
 138:	blx	r4
 13c:	mov	r0, #0
 140:	b	618 <coda_za_open+0x5a0>
 144:	mov	r0, #24
 148:	bl	0 <malloc>
 14c:	mov	r6, r0
 150:	cmp	r6, #0
 154:	bne	174 <coda_za_open+0xfc>
 158:	cmp	r4, #0
 15c:	beq	16c <coda_za_open+0xf4>
 160:	ldr	r0, [pc, #1264]	; 658 <coda_za_open+0x5e0>
 164:	mov	r1, #24
 168:	blx	r4
 16c:	mov	r0, #0
 170:	b	618 <coda_za_open+0x5a0>
 174:	mov	r0, r5
 178:	bl	0 <strdup>
 17c:	str	r0, [r6, #8]
 180:	cmp	r0, #0
 184:	bne	1a8 <coda_za_open+0x130>
 188:	mov	r0, r6
 18c:	bl	0 <free>
 190:	cmp	r4, #0
 194:	beq	1a0 <coda_za_open+0x128>
 198:	ldr	r0, [pc, #1200]	; 650 <coda_za_open+0x5d8>
 19c:	blx	r4
 1a0:	mov	r0, #0
 1a4:	b	618 <coda_za_open+0x5a0>
 1a8:	mov	r2, #0
 1ac:	str	r2, [r6, #4]
 1b0:	mov	r2, #0
 1b4:	str	r2, [r6, #12]
 1b8:	mov	r3, #0
 1bc:	str	r3, [r6, #16]
 1c0:	cmp	r4, #0
 1c4:	bne	1d4 <coda_za_open+0x15c>
 1c8:	ldr	r3, [pc, #1140]	; 644 <coda_za_open+0x5cc>
 1cc:	str	r3, [r6, #20]
 1d0:	b	1d8 <coda_za_open+0x160>
 1d4:	str	r4, [r6, #20]
 1d8:	mov	r1, #0
 1dc:	mov	r0, r5
 1e0:	bl	0 <open>
 1e4:	str	r0, [r6]
 1e8:	cmp	r0, #0
 1ec:	bge	22c <coda_za_open+0x1b4>
 1f0:	bl	0 <__errno_location>
 1f4:	ldr	r0, [r0]
 1f8:	bl	0 <strerror>
 1fc:	ldr	ip, [r6, #20]
 200:	ldr	r1, [pc, #1116]	; 664 <coda_za_open+0x5ec>
 204:	mov	r2, r0
 208:	mov	r0, r1
 20c:	mov	r1, r5
 210:	blx	ip
 214:	ldr	r0, [r6, #8]
 218:	bl	0 <free>
 21c:	mov	r0, r6
 220:	bl	0 <free>
 224:	mov	r0, #0
 228:	b	618 <coda_za_open+0x5a0>
 22c:	add	r1, sp, #32
 230:	mov	r2, #2
 234:	bl	0 <read>
 238:	cmp	r0, #0
 23c:	bge	264 <coda_za_open+0x1ec>
 240:	bl	0 <__errno_location>
 244:	ldr	r0, [r0]
 248:	bl	0 <strerror>
 24c:	ldr	ip, [r6, #20]
 250:	blx	ip
 254:	mov	r0, r6
 258:	bl	ca0 <coda_za_close>
 25c:	mov	r0, #0
 260:	b	618 <coda_za_open+0x5a0>
 264:	ldrb	r1, [sp, #32]
 268:	cmp	r1, #80	; 0x50
 26c:	beq	298 <coda_za_open+0x220>
 270:	ldrb	r0, [sp, #33]	; 0x21
 274:	cmp	r0, #75	; 0x4b
 278:	beq	298 <coda_za_open+0x220>
 27c:	ldr	r0, [pc, #964]	; 648 <coda_za_open+0x5d0>
 280:	mov	r1, r5
 284:	blx	r4
 288:	mov	r0, r6
 28c:	bl	ca0 <coda_za_close>
 290:	mov	r0, #0
 294:	b	618 <coda_za_open+0x5a0>
 298:	mov	r0, #1
 29c:	bl	0 <coda_hashtable_new>
 2a0:	str	r0, [r6, #16]
 2a4:	ldr	r0, [r6]
 2a8:	mvn	r1, #21
 2ac:	mov	r2, #2
 2b0:	bl	0 <lseek>
 2b4:	cmp	r0, #0
 2b8:	bge	2d8 <coda_za_open+0x260>
 2bc:	bl	0 <__errno_location>
 2c0:	ldr	r0, [r0]
 2c4:	bl	0 <strerror>
 2c8:	ldr	ip, [r6, #20]
 2cc:	blx	ip
 2d0:	mvn	ip, #0
 2d4:	b	5fc <coda_za_open+0x584>
 2d8:	ldr	r0, [r6]
 2dc:	add	r1, sp, #128	; 0x80
 2e0:	mov	r2, #22
 2e4:	bl	0 <read>
 2e8:	cmp	r0, #0
 2ec:	bge	30c <coda_za_open+0x294>
 2f0:	bl	0 <__errno_location>
 2f4:	ldr	r0, [r0]
 2f8:	bl	0 <strerror>
 2fc:	ldr	ip, [r6, #20]
 300:	blx	ip
 304:	mvn	ip, #0
 308:	b	5fc <coda_za_open+0x584>
 30c:	ldr	ip, [sp, #128]	; 0x80
 310:	movw	lr, #19280	; 0x4b50
 314:	movt	lr, #1541	; 0x605
 318:	cmp	ip, lr
 31c:	beq	338 <coda_za_open+0x2c0>
 320:	ldr	ip, [r6, #20]
 324:	ldr	r0, [pc, #780]	; 638 <coda_za_open+0x5c0>
 328:	ldr	r1, [r6, #8]
 32c:	blx	ip
 330:	mvn	ip, #0
 334:	b	5fc <coda_za_open+0x584>
 338:	ldrh	r0, [sp, #136]	; 0x88
 33c:	bic	r5, r0, #16711680	; 0xff0000
 340:	bic	r5, r5, #-16777216	; 0xff000000
 344:	ldr	r4, [sp, #144]	; 0x90
 348:	str	r5, [r6, #4]
 34c:	mov	r1, #44	; 0x2c
 350:	mul	r0, r5, r1
 354:	bl	0 <malloc>
 358:	str	r0, [r6, #12]
 35c:	cmp	r0, #0
 360:	bne	380 <coda_za_open+0x308>
 364:	ldr	ip, [r6, #20]
 368:	ldr	r0, [pc, #744]	; 658 <coda_za_open+0x5e0>
 36c:	mov	r1, #44	; 0x2c
 370:	mul	r1, r5, r1
 374:	blx	ip
 378:	mvn	ip, #0
 37c:	b	5fc <coda_za_open+0x584>
 380:	mov	ip, #0
 384:	cmp	ip, r5
 388:	bge	3b8 <coda_za_open+0x340>
 38c:	mov	r0, #44	; 0x2c
 390:	ldr	r1, [r6, #12]
 394:	mla	r2, r0, ip, r1
 398:	mov	r0, #0
 39c:	str	r0, [r2, #36]	; 0x24
 3a0:	mov	r0, #44	; 0x2c
 3a4:	ldr	r1, [r6, #12]
 3a8:	mla	r0, r0, ip, r1
 3ac:	str	r6, [r0, #40]	; 0x28
 3b0:	add	ip, ip, #1
 3b4:	b	384 <coda_za_open+0x30c>
 3b8:	ldr	r0, [r6]
 3bc:	mov	r2, #0
 3c0:	mov	r1, r4
 3c4:	bl	0 <lseek>
 3c8:	cmp	r0, #0
 3cc:	bge	3ec <coda_za_open+0x374>
 3d0:	bl	0 <__errno_location>
 3d4:	ldr	r0, [r0]
 3d8:	bl	0 <strerror>
 3dc:	ldr	ip, [r6, #20]
 3e0:	blx	ip
 3e4:	mvn	ip, #0
 3e8:	b	5fc <coda_za_open+0x584>
 3ec:	mov	r4, #0
 3f0:	cmp	r4, r5
 3f4:	bge	5f8 <coda_za_open+0x580>
 3f8:	mov	ip, #44	; 0x2c
 3fc:	ldr	r1, [r6, #12]
 400:	mla	r7, ip, r4, r1
 404:	ldr	r0, [r6]
 408:	add	r1, sp, #128	; 0x80
 40c:	mov	r2, #46	; 0x2e
 410:	bl	0 <read>
 414:	cmp	r0, #0
 418:	bge	438 <coda_za_open+0x3c0>
 41c:	bl	0 <__errno_location>
 420:	ldr	r0, [r0]
 424:	bl	0 <strerror>
 428:	ldr	ip, [r6, #20]
 42c:	blx	ip
 430:	mvn	ip, #0
 434:	b	5fc <coda_za_open+0x584>
 438:	ldr	r3, [sp, #128]	; 0x80
 43c:	movw	lr, #19280	; 0x4b50
 440:	movt	lr, #513	; 0x201
 444:	cmp	r3, lr
 448:	beq	464 <coda_za_open+0x3ec>
 44c:	ldr	ip, [r6, #20]
 450:	ldr	r0, [pc, #500]	; 64c <coda_za_open+0x5d4>
 454:	ldr	r1, [r6, #8]
 458:	blx	ip
 45c:	mvn	ip, #0
 460:	b	5fc <coda_za_open+0x584>
 464:	ldrh	r0, [sp, #138]	; 0x8a
 468:	bic	r0, r0, #16711680	; 0xff0000
 46c:	bic	r0, r0, #-16777216	; 0xff000000
 470:	strh	r0, [r7, #4]
 474:	cmp	r0, #0
 478:	beq	49c <coda_za_open+0x424>
 47c:	cmp	r0, #8
 480:	beq	49c <coda_za_open+0x424>
 484:	ldr	r4, [r6, #20]
 488:	ldr	r0, [pc, #472]	; 668 <coda_za_open+0x5f0>
 48c:	ldr	r1, [r6, #8]
 490:	blx	r4
 494:	mvn	ip, #0
 498:	b	5fc <coda_za_open+0x584>
 49c:	ldrh	r3, [sp, #140]	; 0x8c
 4a0:	strh	r3, [r7, #6]
 4a4:	ldrh	r2, [sp, #142]	; 0x8e
 4a8:	strh	r2, [r7, #8]
 4ac:	ldr	ip, [sp, #144]	; 0x90
 4b0:	str	ip, [r7, #16]
 4b4:	ldr	r2, [sp, #148]	; 0x94
 4b8:	str	r2, [r7, #20]
 4bc:	ldr	r2, [sp, #152]	; 0x98
 4c0:	str	r2, [r7, #24]
 4c4:	ldrh	r2, [sp, #156]	; 0x9c
 4c8:	strh	r2, [r7, #28]
 4cc:	ldrh	r1, [sp, #158]	; 0x9e
 4d0:	strh	r1, [r7, #30]
 4d4:	ldrh	ip, [sp, #160]	; 0xa0
 4d8:	bic	r8, ip, #16711680	; 0xff0000
 4dc:	bic	r8, r8, #-16777216	; 0xff000000
 4e0:	ldrh	r1, [sp, #164]	; 0xa4
 4e4:	and	r3, r1, #1
 4e8:	str	r3, [r7, #32]
 4ec:	add	r0, r7, #12
 4f0:	add	r1, sp, #166	; 0xa6
 4f4:	mov	r2, #4
 4f8:	bl	0 <memcpy>
 4fc:	add	r1, sp, #170	; 0xaa
 500:	mov	r2, #4
 504:	mov	r0, r7
 508:	bl	0 <memcpy>
 50c:	ldrh	r1, [r7, #28]
 510:	add	r0, r1, #1
 514:	bl	0 <malloc>
 518:	str	r0, [r7, #36]	; 0x24
 51c:	cmp	r0, #0
 520:	bne	540 <coda_za_open+0x4c8>
 524:	ldr	ip, [r6, #20]
 528:	ldr	r0, [pc, #272]	; 640 <coda_za_open+0x5c8>
 52c:	ldrh	r3, [r7, #28]
 530:	add	r1, r3, #1
 534:	blx	ip
 538:	mvn	ip, #0
 53c:	b	5fc <coda_za_open+0x584>
 540:	ldr	r3, [r6]
 544:	mov	r1, r0
 548:	ldrh	r2, [r7, #28]
 54c:	mov	r0, r3
 550:	bl	0 <read>
 554:	cmp	r0, #0
 558:	bge	578 <coda_za_open+0x500>
 55c:	bl	0 <__errno_location>
 560:	ldr	r0, [r0]
 564:	bl	0 <strerror>
 568:	ldr	ip, [r6, #20]
 56c:	blx	ip
 570:	mvn	ip, #0
 574:	b	5fc <coda_za_open+0x584>
 578:	ldr	r0, [r7, #36]	; 0x24
 57c:	ldrh	r3, [r7, #28]
 580:	mov	ip, #0
 584:	strb	ip, [r0, r3]
 588:	ldr	r0, [r6, #16]
 58c:	ldr	r1, [r7, #36]	; 0x24
 590:	bl	0 <coda_hashtable_add_name>
 594:	cmp	r0, #0
 598:	beq	5b8 <coda_za_open+0x540>
 59c:	ldr	ip, [r6, #20]
 5a0:	ldr	r0, [pc, #180]	; 65c <coda_za_open+0x5e4>
 5a4:	ldr	r1, [r6, #8]
 5a8:	ldr	r2, [r7, #36]	; 0x24
 5ac:	blx	ip
 5b0:	mvn	ip, #0
 5b4:	b	5fc <coda_za_open+0x584>
 5b8:	ldr	r0, [r6]
 5bc:	ldrh	r3, [r7, #30]
 5c0:	add	r1, r3, r8
 5c4:	mov	r2, #1
 5c8:	bl	0 <lseek>
 5cc:	cmp	r0, #0
 5d0:	bge	5f0 <coda_za_open+0x578>
 5d4:	bl	0 <__errno_location>
 5d8:	ldr	r0, [r0]
 5dc:	bl	0 <strerror>
 5e0:	ldr	ip, [r6, #20]
 5e4:	blx	ip
 5e8:	mvn	ip, #0
 5ec:	b	5fc <coda_za_open+0x584>
 5f0:	add	r4, r4, #1
 5f4:	b	3f0 <coda_za_open+0x378>
 5f8:	mov	ip, #0
 5fc:	cmp	ip, #0
 600:	beq	614 <coda_za_open+0x59c>
 604:	mov	r0, r6
 608:	bl	ca0 <coda_za_close>
 60c:	mov	r0, #0
 610:	b	618 <coda_za_open+0x5a0>
 614:	mov	r0, r6
 618:	ldr	r4, [sp, #8]
 61c:	ldr	r5, [sp, #12]
 620:	ldr	r6, [sp, #16]
 624:	ldr	r7, [sp, #20]
 628:	ldr	r8, [sp, #24]
 62c:	ldr	lr, [sp, #4]
 630:	add	sp, sp, #176	; 0xb0
 634:	bx	lr
 638:	.word	0x0000023c
 63c:	.word	0x000000d8
 640:	.word	0x000004e6
 644:	.word	0x00000000
 648:	.word	0x000000ef
 64c:	.word	0x000002c4
 650:	.word	0x000000bd
 654:	.word	0x000001c9
 658:	.word	0x000003cf
 65c:	.word	0x00000591
 660:	.word	0x000001a7
 664:	.word	0x0000045f
 668:	.word	0x000001f0

0000066c <coda_za_get_num_entries>:
 66c:	mov	ip, sp
 670:	sub	sp, sp, #8
 674:	str	ip, [sp]
 678:	str	lr, [sp, #4]
 67c:	ldr	r0, [r0, #4]
 680:	ldr	lr, [sp, #4]
 684:	add	sp, sp, #8
 688:	bx	lr

0000068c <coda_za_get_filename>:
 68c:	mov	ip, sp
 690:	sub	sp, sp, #8
 694:	str	ip, [sp]
 698:	str	lr, [sp, #4]
 69c:	ldr	r0, [r0, #8]
 6a0:	ldr	lr, [sp, #4]
 6a4:	add	sp, sp, #8
 6a8:	bx	lr

000006ac <coda_za_get_entry_by_index>:
 6ac:	mov	ip, sp
 6b0:	sub	sp, sp, #8
 6b4:	str	ip, [sp]
 6b8:	str	lr, [sp, #4]
 6bc:	cmp	r1, #0
 6c0:	blt	6e0 <coda_za_get_entry_by_index+0x34>
 6c4:	ldr	r2, [r0, #4]
 6c8:	cmp	r1, r2
 6cc:	bge	6e0 <coda_za_get_entry_by_index+0x34>
 6d0:	mov	r3, #44	; 0x2c
 6d4:	ldr	r2, [r0, #12]
 6d8:	mla	r0, r3, r1, r2
 6dc:	b	6e4 <coda_za_get_entry_by_index+0x38>
 6e0:	mov	r0, #0
 6e4:	ldr	lr, [sp, #4]
 6e8:	add	sp, sp, #8
 6ec:	bx	lr

000006f0 <coda_za_get_entry_by_name>:
 6f0:	mov	ip, sp
 6f4:	sub	sp, sp, #16
 6f8:	str	ip, [sp]
 6fc:	str	lr, [sp, #4]
 700:	str	r4, [sp, #8]
 704:	mov	r4, r0
 708:	ldr	r0, [r4, #16]
 70c:	bl	0 <coda_hashtable_get_index_from_name>
 710:	cmp	r0, #0
 714:	bge	720 <coda_za_get_entry_by_name+0x30>
 718:	mov	r0, #0
 71c:	b	72c <coda_za_get_entry_by_name+0x3c>
 720:	mov	r1, #44	; 0x2c
 724:	ldr	r2, [r4, #12]
 728:	mla	r0, r1, r0, r2
 72c:	ldr	r4, [sp, #8]
 730:	ldr	lr, [sp, #4]
 734:	add	sp, sp, #16
 738:	bx	lr

0000073c <coda_za_get_entry_size>:
 73c:	mov	ip, sp
 740:	sub	sp, sp, #8
 744:	str	ip, [sp]
 748:	str	lr, [sp, #4]
 74c:	ldr	r0, [r0, #24]
 750:	ldr	lr, [sp, #4]
 754:	add	sp, sp, #8
 758:	bx	lr

0000075c <coda_za_get_entry_name>:
 75c:	mov	ip, sp
 760:	sub	sp, sp, #8
 764:	str	ip, [sp]
 768:	str	lr, [sp, #4]
 76c:	ldr	r0, [r0, #36]	; 0x24
 770:	ldr	lr, [sp, #4]
 774:	add	sp, sp, #8
 778:	bx	lr

0000077c <coda_za_read_entry>:
 77c:	mov	ip, sp
 780:	sub	sp, sp, #128	; 0x80
 784:	str	ip, [sp]
 788:	str	lr, [sp, #4]
 78c:	str	r4, [sp, #8]
 790:	str	r5, [sp, #12]
 794:	str	r6, [sp, #16]
 798:	mov	r6, r1
 79c:	mov	r5, r0
 7a0:	ldr	r3, [r5, #40]	; 0x28
 7a4:	ldr	r0, [r3]
 7a8:	ldr	r1, [r5]
 7ac:	mov	r2, #0
 7b0:	bl	0 <lseek>
 7b4:	cmp	r0, #0
 7b8:	bge	7dc <coda_za_read_entry+0x60>
 7bc:	bl	0 <__errno_location>
 7c0:	ldr	r0, [r0]
 7c4:	bl	0 <strerror>
 7c8:	ldr	r1, [r5, #40]	; 0x28
 7cc:	ldr	ip, [r1, #20]
 7d0:	blx	ip
 7d4:	mvn	r0, #0
 7d8:	b	c3c <coda_za_read_entry+0x4c0>
 7dc:	ldr	r2, [r5, #40]	; 0x28
 7e0:	ldr	r0, [r2]
 7e4:	add	r1, sp, #40	; 0x28
 7e8:	mov	r2, #30
 7ec:	bl	0 <read>
 7f0:	cmp	r0, #0
 7f4:	bge	818 <coda_za_read_entry+0x9c>
 7f8:	bl	0 <__errno_location>
 7fc:	ldr	r0, [r0]
 800:	bl	0 <strerror>
 804:	ldr	r3, [r5, #40]	; 0x28
 808:	ldr	ip, [r3, #20]
 80c:	blx	ip
 810:	mvn	r0, #0
 814:	b	c3c <coda_za_read_entry+0x4c0>
 818:	ldr	r1, [sp, #40]	; 0x28
 81c:	movw	lr, #19280	; 0x4b50
 820:	movt	lr, #1027	; 0x403
 824:	cmp	r1, lr
 828:	beq	844 <coda_za_read_entry+0xc8>
 82c:	ldr	r0, [r5, #40]	; 0x28
 830:	ldr	ip, [r0, #20]
 834:	ldr	r0, [pc, #1108]	; c90 <coda_za_read_entry+0x514>
 838:	blx	ip
 83c:	mvn	r0, #0
 840:	b	c3c <coda_za_read_entry+0x4c0>
 844:	ldrh	r0, [sp, #48]	; 0x30
 848:	bic	r3, r0, #16711680	; 0xff0000
 84c:	bic	r3, r3, #-16777216	; 0xff000000
 850:	ldrh	r0, [r5, #4]
 854:	cmp	r3, r0
 858:	beq	874 <coda_za_read_entry+0xf8>
 85c:	ldr	r0, [r5, #40]	; 0x28
 860:	ldr	ip, [r0, #20]
 864:	ldr	r0, [pc, #1012]	; c60 <coda_za_read_entry+0x4e4>
 868:	blx	ip
 86c:	mvn	r0, #0
 870:	b	c3c <coda_za_read_entry+0x4c0>
 874:	ldrh	r1, [sp, #50]	; 0x32
 878:	bic	ip, r1, #16711680	; 0xff0000
 87c:	bic	ip, ip, #-16777216	; 0xff000000
 880:	ldrh	r0, [r5, #6]
 884:	cmp	ip, r0
 888:	beq	8a4 <coda_za_read_entry+0x128>
 88c:	ldr	r0, [r5, #40]	; 0x28
 890:	ldr	ip, [r0, #20]
 894:	ldr	r0, [pc, #976]	; c6c <coda_za_read_entry+0x4f0>
 898:	blx	ip
 89c:	mvn	r0, #0
 8a0:	b	c3c <coda_za_read_entry+0x4c0>
 8a4:	ldrh	r0, [sp, #52]	; 0x34
 8a8:	bic	ip, r0, #16711680	; 0xff0000
 8ac:	bic	ip, ip, #-16777216	; 0xff000000
 8b0:	ldrh	r2, [r5, #8]
 8b4:	cmp	ip, r2
 8b8:	beq	8d4 <coda_za_read_entry+0x158>
 8bc:	ldr	r0, [r5, #40]	; 0x28
 8c0:	ldr	ip, [r0, #20]
 8c4:	ldr	r0, [pc, #968]	; c94 <coda_za_read_entry+0x518>
 8c8:	blx	ip
 8cc:	mvn	r0, #0
 8d0:	b	c3c <coda_za_read_entry+0x4c0>
 8d4:	add	r0, sp, #24
 8d8:	add	r1, sp, #54	; 0x36
 8dc:	mov	r2, #4
 8e0:	bl	0 <memcpy>
 8e4:	ldr	r0, [sp, #24]
 8e8:	ldr	r3, [r5, #16]
 8ec:	cmp	r0, r3
 8f0:	beq	90c <coda_za_read_entry+0x190>
 8f4:	ldr	r0, [r5, #40]	; 0x28
 8f8:	ldr	ip, [r0, #20]
 8fc:	ldr	r0, [pc, #892]	; c80 <coda_za_read_entry+0x504>
 900:	blx	ip
 904:	mvn	r0, #0
 908:	b	c3c <coda_za_read_entry+0x4c0>
 90c:	add	r0, sp, #28
 910:	add	r1, sp, #58	; 0x3a
 914:	mov	r2, #4
 918:	bl	0 <memcpy>
 91c:	ldr	r2, [sp, #28]
 920:	ldr	r1, [r5, #20]
 924:	cmp	r2, r1
 928:	beq	944 <coda_za_read_entry+0x1c8>
 92c:	ldr	r0, [r5, #40]	; 0x28
 930:	ldr	ip, [r0, #20]
 934:	ldr	r0, [pc, #792]	; c54 <coda_za_read_entry+0x4d8>
 938:	blx	ip
 93c:	mvn	r0, #0
 940:	b	c3c <coda_za_read_entry+0x4c0>
 944:	add	r0, sp, #32
 948:	add	r1, sp, #62	; 0x3e
 94c:	mov	r2, #4
 950:	bl	0 <memcpy>
 954:	ldr	r0, [sp, #32]
 958:	ldr	r2, [r5, #24]
 95c:	cmp	r0, r2
 960:	beq	97c <coda_za_read_entry+0x200>
 964:	ldr	r0, [r5, #40]	; 0x28
 968:	ldr	ip, [r0, #20]
 96c:	ldr	r0, [pc, #804]	; c98 <coda_za_read_entry+0x51c>
 970:	blx	ip
 974:	mvn	r0, #0
 978:	b	c3c <coda_za_read_entry+0x4c0>
 97c:	ldrh	r3, [sp, #66]	; 0x42
 980:	bic	ip, r3, #16711680	; 0xff0000
 984:	bic	ip, ip, #-16777216	; 0xff000000
 988:	ldrh	r0, [r5, #28]
 98c:	cmp	ip, r0
 990:	beq	9ac <coda_za_read_entry+0x230>
 994:	ldr	r0, [r5, #40]	; 0x28
 998:	ldr	ip, [r0, #20]
 99c:	ldr	r0, [pc, #724]	; c78 <coda_za_read_entry+0x4fc>
 9a0:	blx	ip
 9a4:	mvn	r0, #0
 9a8:	b	c3c <coda_za_read_entry+0x4c0>
 9ac:	ldrh	r1, [sp, #68]	; 0x44
 9b0:	bic	r1, r1, #16711680	; 0xff0000
 9b4:	bic	r1, r1, #-16777216	; 0xff000000
 9b8:	ldr	r2, [r5, #40]	; 0x28
 9bc:	ldr	r0, [r2]
 9c0:	add	r1, ip, r1
 9c4:	mov	r2, #1
 9c8:	bl	0 <lseek>
 9cc:	cmp	r0, #0
 9d0:	bge	9f4 <coda_za_read_entry+0x278>
 9d4:	bl	0 <__errno_location>
 9d8:	ldr	r0, [r0]
 9dc:	bl	0 <strerror>
 9e0:	ldr	ip, [r5, #40]	; 0x28
 9e4:	ldr	ip, [ip, #20]
 9e8:	blx	ip
 9ec:	mvn	r0, #0
 9f0:	b	c3c <coda_za_read_entry+0x4c0>
 9f4:	ldrh	r0, [r5, #4]
 9f8:	cmp	r0, #0
 9fc:	beq	bfc <coda_za_read_entry+0x480>
 a00:	ldr	r0, [r5, #20]
 a04:	bl	0 <malloc>
 a08:	mov	r4, r0
 a0c:	cmp	r4, #0
 a10:	bne	a30 <coda_za_read_entry+0x2b4>
 a14:	ldr	r2, [r5, #40]	; 0x28
 a18:	ldr	ip, [r2, #20]
 a1c:	ldr	r0, [pc, #600]	; c7c <coda_za_read_entry+0x500>
 a20:	ldr	r1, [r5, #20]
 a24:	blx	ip
 a28:	mvn	r0, #0
 a2c:	b	c3c <coda_za_read_entry+0x4c0>
 a30:	ldr	r3, [r5, #40]	; 0x28
 a34:	ldr	r0, [r3]
 a38:	ldr	r2, [r5, #20]
 a3c:	mov	r1, r4
 a40:	bl	0 <read>
 a44:	cmp	r0, #0
 a48:	bge	a74 <coda_za_read_entry+0x2f8>
 a4c:	bl	0 <__errno_location>
 a50:	ldr	r0, [r0]
 a54:	bl	0 <strerror>
 a58:	ldr	r1, [r5, #40]	; 0x28
 a5c:	ldr	ip, [r1, #20]
 a60:	blx	ip
 a64:	mov	r0, r4
 a68:	bl	0 <free>
 a6c:	mvn	r0, #0
 a70:	b	c3c <coda_za_read_entry+0x4c0>
 a74:	mov	r3, #0
 a78:	str	r3, [sp, #72]	; 0x48
 a7c:	mov	ip, #0
 a80:	str	ip, [sp, #76]	; 0x4c
 a84:	mov	r1, #0
 a88:	str	r1, [sp, #104]	; 0x68
 a8c:	mov	r1, #0
 a90:	str	r1, [sp, #108]	; 0x6c
 a94:	mov	r0, #0
 a98:	str	r0, [sp, #112]	; 0x70
 a9c:	mov	r2, #0
 aa0:	str	r2, [sp, #96]	; 0x60
 aa4:	add	r0, sp, #72	; 0x48
 aa8:	mvn	r1, #14
 aac:	ldr	r2, [pc, #472]	; c8c <coda_za_read_entry+0x510>
 ab0:	mov	r3, #56	; 0x38
 ab4:	bl	0 <coda_inflateInit2_>
 ab8:	cmp	r0, #0
 abc:	beq	b00 <coda_za_read_entry+0x384>
 ac0:	ldr	r1, [sp, #96]	; 0x60
 ac4:	cmp	r1, #0
 ac8:	beq	ae0 <coda_za_read_entry+0x364>
 acc:	ldr	r2, [r5, #40]	; 0x28
 ad0:	ldr	ip, [r2, #20]
 ad4:	ldr	r0, [pc, #428]	; c88 <coda_za_read_entry+0x50c>
 ad8:	blx	ip
 adc:	b	af0 <coda_za_read_entry+0x374>
 ae0:	ldr	ip, [r5, #40]	; 0x28
 ae4:	ldr	ip, [ip, #20]
 ae8:	ldr	r0, [pc, #372]	; c64 <coda_za_read_entry+0x4e8>
 aec:	blx	ip
 af0:	mov	r0, r4
 af4:	bl	0 <free>
 af8:	mvn	r0, #0
 afc:	b	c3c <coda_za_read_entry+0x4c0>
 b00:	str	r4, [sp, #72]	; 0x48
 b04:	ldr	r1, [r5, #20]
 b08:	str	r1, [sp, #76]	; 0x4c
 b0c:	str	r6, [sp, #84]	; 0x54
 b10:	ldr	r1, [r5, #24]
 b14:	str	r1, [sp, #88]	; 0x58
 b18:	add	r0, sp, #72	; 0x48
 b1c:	mov	r1, #4
 b20:	bl	0 <coda_inflate>
 b24:	mov	r6, r0
 b28:	cmn	r6, #2
 b2c:	bne	b44 <coda_za_read_entry+0x3c8>
 b30:	ldr	r0, [pc, #316]	; c74 <coda_za_read_entry+0x4f8>
 b34:	ldr	r1, [pc, #352]	; c9c <coda_za_read_entry+0x520>
 b38:	movw	r2, #633	; 0x279
 b3c:	ldr	r3, [pc, #276]	; c58 <coda_za_read_entry+0x4dc>
 b40:	bl	0 <__assert_fail>
 b44:	cmp	r6, #2
 b48:	beq	bd4 <coda_za_read_entry+0x458>
 b4c:	cmn	r6, #4
 b50:	beq	bac <coda_za_read_entry+0x430>
 b54:	cmn	r6, #3
 b58:	beq	bd4 <coda_za_read_entry+0x458>
 b5c:	mov	r0, r4
 b60:	bl	0 <free>
 b64:	add	r0, sp, #72	; 0x48
 b68:	bl	0 <coda_inflateEnd>
 b6c:	cmp	r0, #0
 b70:	beq	c38 <coda_za_read_entry+0x4bc>
 b74:	ldr	r1, [sp, #96]	; 0x60
 b78:	cmp	r1, #0
 b7c:	beq	b94 <coda_za_read_entry+0x418>
 b80:	ldr	r3, [r5, #40]	; 0x28
 b84:	ldr	ip, [r3, #20]
 b88:	ldr	r0, [pc, #224]	; c70 <coda_za_read_entry+0x4f4>
 b8c:	blx	ip
 b90:	b	ba4 <coda_za_read_entry+0x428>
 b94:	ldr	r0, [r5, #40]	; 0x28
 b98:	ldr	ip, [r0, #20]
 b9c:	ldr	r0, [pc, #196]	; c68 <coda_za_read_entry+0x4ec>
 ba0:	blx	ip
 ba4:	mvn	r0, #0
 ba8:	b	c3c <coda_za_read_entry+0x4c0>
 bac:	ldr	r0, [r5, #40]	; 0x28
 bb0:	ldr	ip, [r0, #20]
 bb4:	ldr	r0, [pc, #160]	; c5c <coda_za_read_entry+0x4e0>
 bb8:	blx	ip
 bbc:	add	r0, sp, #72	; 0x48
 bc0:	bl	0 <coda_inflateEnd>
 bc4:	mov	r0, r4
 bc8:	bl	0 <free>
 bcc:	mvn	r0, #0
 bd0:	b	c3c <coda_za_read_entry+0x4c0>
 bd4:	ldr	ip, [r5, #40]	; 0x28
 bd8:	ldr	ip, [ip, #20]
 bdc:	ldr	r0, [pc, #160]	; c84 <coda_za_read_entry+0x508>
 be0:	blx	ip
 be4:	add	r0, sp, #72	; 0x48
 be8:	bl	0 <coda_inflateEnd>
 bec:	mov	r0, r4
 bf0:	bl	0 <free>
 bf4:	mvn	r0, #0
 bf8:	b	c3c <coda_za_read_entry+0x4c0>
 bfc:	ldr	r2, [r5, #40]	; 0x28
 c00:	ldr	r0, [r2]
 c04:	ldr	r2, [r5, #24]
 c08:	mov	r1, r6
 c0c:	bl	0 <read>
 c10:	cmp	r0, #0
 c14:	bge	c38 <coda_za_read_entry+0x4bc>
 c18:	bl	0 <__errno_location>
 c1c:	ldr	r0, [r0]
 c20:	bl	0 <strerror>
 c24:	ldr	r2, [r5, #40]	; 0x28
 c28:	ldr	ip, [r2, #20]
 c2c:	blx	ip
 c30:	mvn	r0, #0
 c34:	b	c3c <coda_za_read_entry+0x4c0>
 c38:	mov	r0, #0
 c3c:	ldr	r4, [sp, #8]
 c40:	ldr	r5, [sp, #12]
 c44:	ldr	r6, [sp, #16]
 c48:	ldr	lr, [sp, #4]
 c4c:	add	sp, sp, #128	; 0x80
 c50:	bx	lr
 c54:	.word	0x0000014b
 c58:	.word	0x000005cc
 c5c:	.word	0x0000047e
 c60:	.word	0x000003ec
 c64:	.word	0x000003a1
 c68:	.word	0x00000229
 c6c:	.word	0x00000003
 c70:	.word	0x000001b9
 c74:	.word	0x00000446
 c78:	.word	0x00000061
 c7c:	.word	0x000003cf
 c80:	.word	0x00000351
 c84:	.word	0x00000560
 c88:	.word	0x00000000
 c8c:	.word	0x00000223
 c90:	.word	0x00000112
 c94:	.word	0x000002f3
 c98:	.word	0x00000502
 c9c:	.word	0x0000048c

00000ca0 <coda_za_close>:
 ca0:	mov	ip, sp
 ca4:	sub	sp, sp, #16
 ca8:	str	ip, [sp]
 cac:	str	lr, [sp, #4]
 cb0:	str	r4, [sp, #8]
 cb4:	str	r5, [sp, #12]
 cb8:	mov	r4, r0
 cbc:	ldr	r0, [r4]
 cc0:	bl	0 <close>
 cc4:	ldr	r2, [r4, #12]
 cc8:	cmp	r2, #0
 ccc:	beq	d0c <coda_za_close+0x6c>
 cd0:	mov	r5, #0
 cd4:	ldr	r3, [r4, #4]
 cd8:	cmp	r5, r3
 cdc:	bge	d04 <coda_za_close+0x64>
 ce0:	mov	ip, #44	; 0x2c
 ce4:	ldr	r1, [r4, #12]
 ce8:	mla	r0, ip, r5, r1
 cec:	ldr	r0, [r0, #36]	; 0x24
 cf0:	cmp	r0, #0
 cf4:	beq	cfc <coda_za_close+0x5c>
 cf8:	bl	0 <free>
 cfc:	add	r5, r5, #1
 d00:	b	cd4 <coda_za_close+0x34>
 d04:	ldr	r0, [r4, #12]
 d08:	bl	0 <free>
 d0c:	ldr	r0, [r4, #8]
 d10:	cmp	r0, #0
 d14:	beq	d1c <coda_za_close+0x7c>
 d18:	bl	0 <free>
 d1c:	ldr	r0, [r4, #16]
 d20:	cmp	r0, #0
 d24:	beq	d2c <coda_za_close+0x8c>
 d28:	bl	0 <coda_hashtable_delete>
 d2c:	mov	r0, r4
 d30:	ldr	r4, [sp, #8]
 d34:	ldr	r5, [sp, #12]
 d38:	ldr	lr, [sp, #4]
 d3c:	add	sp, sp, #16
 d40:	b	0 <free>
