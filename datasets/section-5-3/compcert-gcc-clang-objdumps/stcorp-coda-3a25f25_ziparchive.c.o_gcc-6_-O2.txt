
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/ziparchive.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <default_error_handler>:
   0:	push	{r0, r1, r2, r3}
   4:	mov	r2, #7
   8:	push	{r4, lr}
   c:	mov	r1, #1
  10:	ldr	r4, [pc, #64]	; 58 <default_error_handler+0x58>
  14:	sub	sp, sp, #8
  18:	ldr	r0, [pc, #60]	; 5c <default_error_handler+0x5c>
  1c:	ldr	r3, [r4]
  20:	bl	0 <fwrite>
  24:	add	r3, sp, #20
  28:	ldr	r1, [sp, #16]
  2c:	mov	r2, r3
  30:	ldr	r0, [r4]
  34:	str	r3, [sp, #4]
  38:	bl	0 <vfprintf>
  3c:	ldr	r1, [r4]
  40:	mov	r0, #10
  44:	bl	0 <fputc>
  48:	add	sp, sp, #8
  4c:	pop	{r4, lr}
  50:	add	sp, sp, #16
  54:	bx	lr
	...

00000060 <coda_za_get_num_entries>:
  60:	ldr	r0, [r0, #4]
  64:	bx	lr

00000068 <coda_za_get_filename>:
  68:	ldr	r0, [r0, #8]
  6c:	bx	lr

00000070 <coda_za_get_entry_by_index>:
  70:	cmp	r1, #0
  74:	blt	94 <coda_za_get_entry_by_index+0x24>
  78:	ldr	r3, [r0, #4]
  7c:	cmp	r1, r3
  80:	bge	94 <coda_za_get_entry_by_index+0x24>
  84:	ldr	r0, [r0, #12]
  88:	mov	r3, #44	; 0x2c
  8c:	mla	r0, r3, r1, r0
  90:	bx	lr
  94:	mov	r0, #0
  98:	bx	lr

0000009c <coda_za_get_entry_by_name>:
  9c:	push	{r4, lr}
  a0:	mov	r4, r0
  a4:	ldr	r0, [r0, #16]
  a8:	bl	0 <coda_hashtable_get_index_from_name>
  ac:	cmp	r0, #0
  b0:	movge	r2, #44	; 0x2c
  b4:	ldrge	r3, [r4, #12]
  b8:	mlage	r0, r2, r0, r3
  bc:	movlt	r0, #0
  c0:	pop	{r4, pc}

000000c4 <coda_za_get_entry_size>:
  c4:	ldr	r0, [r0, #24]
  c8:	bx	lr

000000cc <coda_za_get_entry_name>:
  cc:	ldr	r0, [r0, #36]	; 0x24
  d0:	bx	lr

000000d4 <coda_za_read_entry>:
  d4:	ldr	r3, [r0, #40]	; 0x28
  d8:	push	{r4, r5, r6, r7, lr}
  dc:	mov	r2, #0
  e0:	mov	r4, r0
  e4:	sub	sp, sp, #92	; 0x5c
  e8:	mov	r6, r1
  ec:	ldr	r1, [r0]
  f0:	ldr	r0, [r3]
  f4:	bl	0 <lseek>
  f8:	ldr	r3, [r4, #40]	; 0x28
  fc:	cmp	r0, #0
 100:	blt	3f0 <coda_za_read_entry+0x31c>
 104:	mov	r2, #30
 108:	mov	r1, sp
 10c:	ldr	r0, [r3]
 110:	bl	0 <read>
 114:	cmp	r0, #0
 118:	blt	3ec <coda_za_read_entry+0x318>
 11c:	ldr	r3, [pc, #848]	; 474 <coda_za_read_entry+0x3a0>
 120:	ldr	r2, [sp]
 124:	cmp	r2, r3
 128:	bne	324 <coda_za_read_entry+0x250>
 12c:	ldrh	r2, [sp, #8]
 130:	ldrh	r3, [r4, #4]
 134:	cmp	r2, r3
 138:	bne	33c <coda_za_read_entry+0x268>
 13c:	ldrh	r2, [sp, #10]
 140:	ldrh	r3, [r4, #6]
 144:	cmp	r2, r3
 148:	bne	354 <coda_za_read_entry+0x280>
 14c:	ldrh	r2, [sp, #12]
 150:	ldrh	r3, [r4, #8]
 154:	cmp	r2, r3
 158:	bne	36c <coda_za_read_entry+0x298>
 15c:	ldr	r2, [sp, #14]
 160:	ldr	r3, [r4, #16]
 164:	cmp	r2, r3
 168:	bne	384 <coda_za_read_entry+0x2b0>
 16c:	ldr	r2, [sp, #18]
 170:	ldr	r3, [r4, #20]
 174:	cmp	r2, r3
 178:	bne	39c <coda_za_read_entry+0x2c8>
 17c:	ldr	r2, [sp, #22]
 180:	ldr	r3, [r4, #24]
 184:	cmp	r2, r3
 188:	bne	3b4 <coda_za_read_entry+0x2e0>
 18c:	ldrh	r3, [sp, #26]
 190:	ldrh	r2, [r4, #28]
 194:	cmp	r2, r3
 198:	bne	30c <coda_za_read_entry+0x238>
 19c:	ldrh	r1, [sp, #28]
 1a0:	ldr	r0, [r4, #40]	; 0x28
 1a4:	mov	r2, #1
 1a8:	add	r1, r1, r3
 1ac:	ldr	r0, [r0]
 1b0:	bl	0 <lseek>
 1b4:	cmp	r0, #0
 1b8:	blt	3ec <coda_za_read_entry+0x318>
 1bc:	ldrh	r5, [r4, #4]
 1c0:	cmp	r5, #0
 1c4:	beq	2ac <coda_za_read_entry+0x1d8>
 1c8:	ldr	r7, [r4, #20]
 1cc:	mov	r0, r7
 1d0:	bl	0 <malloc>
 1d4:	ldr	r3, [r4, #40]	; 0x28
 1d8:	subs	r5, r0, #0
 1dc:	beq	43c <coda_za_read_entry+0x368>
 1e0:	mov	r2, r7
 1e4:	mov	r1, r5
 1e8:	ldr	r0, [r3]
 1ec:	bl	0 <read>
 1f0:	cmp	r0, #0
 1f4:	blt	408 <coda_za_read_entry+0x334>
 1f8:	mov	ip, #0
 1fc:	add	r0, sp, #32
 200:	mov	r3, #56	; 0x38
 204:	ldr	r2, [pc, #620]	; 478 <coda_za_read_entry+0x3a4>
 208:	mvn	r1, #14
 20c:	str	ip, [sp, #32]
 210:	str	ip, [sp, #36]	; 0x24
 214:	str	ip, [sp, #64]	; 0x40
 218:	str	ip, [sp, #68]	; 0x44
 21c:	str	ip, [sp, #72]	; 0x48
 220:	str	ip, [sp, #56]	; 0x38
 224:	bl	0 <coda_inflateInit2_>
 228:	cmp	r0, #0
 22c:	bne	3cc <coda_za_read_entry+0x2f8>
 230:	ldr	r2, [r4, #20]
 234:	ldr	r3, [r4, #24]
 238:	mov	r1, #4
 23c:	add	r0, sp, #32
 240:	str	r5, [sp, #32]
 244:	str	r6, [sp, #44]	; 0x2c
 248:	str	r2, [sp, #36]	; 0x24
 24c:	str	r3, [sp, #48]	; 0x30
 250:	bl	0 <coda_inflate>
 254:	cmn	r0, #2
 258:	beq	460 <coda_za_read_entry+0x38c>
 25c:	cmn	r0, #3
 260:	beq	2d4 <coda_za_read_entry+0x200>
 264:	cmp	r0, #2
 268:	beq	2d4 <coda_za_read_entry+0x200>
 26c:	cmn	r0, #4
 270:	beq	300 <coda_za_read_entry+0x22c>
 274:	mov	r0, r5
 278:	bl	0 <free>
 27c:	add	r0, sp, #32
 280:	bl	0 <coda_inflateEnd>
 284:	cmp	r0, #0
 288:	beq	2cc <coda_za_read_entry+0x1f8>
 28c:	ldr	r1, [sp, #56]	; 0x38
 290:	ldr	r3, [r4, #40]	; 0x28
 294:	cmp	r1, #0
 298:	beq	450 <coda_za_read_entry+0x37c>
 29c:	ldr	r0, [pc, #472]	; 47c <coda_za_read_entry+0x3a8>
 2a0:	ldr	r3, [r3, #20]
 2a4:	blx	r3
 2a8:	b	2f4 <coda_za_read_entry+0x220>
 2ac:	ldr	r3, [r4, #40]	; 0x28
 2b0:	mov	r1, r6
 2b4:	ldr	r2, [r4, #24]
 2b8:	ldr	r0, [r3]
 2bc:	bl	0 <read>
 2c0:	cmp	r0, #0
 2c4:	movge	r0, r5
 2c8:	blt	3ec <coda_za_read_entry+0x318>
 2cc:	add	sp, sp, #92	; 0x5c
 2d0:	pop	{r4, r5, r6, r7, pc}
 2d4:	ldr	r3, [r4, #40]	; 0x28
 2d8:	ldr	r0, [pc, #416]	; 480 <coda_za_read_entry+0x3ac>
 2dc:	ldr	r3, [r3, #20]
 2e0:	blx	r3
 2e4:	add	r0, sp, #32
 2e8:	bl	0 <coda_inflateEnd>
 2ec:	mov	r0, r5
 2f0:	bl	0 <free>
 2f4:	mvn	r0, #0
 2f8:	add	sp, sp, #92	; 0x5c
 2fc:	pop	{r4, r5, r6, r7, pc}
 300:	ldr	r3, [r4, #40]	; 0x28
 304:	ldr	r0, [pc, #376]	; 484 <coda_za_read_entry+0x3b0>
 308:	b	2dc <coda_za_read_entry+0x208>
 30c:	ldr	r3, [r4, #40]	; 0x28
 310:	ldr	r0, [pc, #368]	; 488 <coda_za_read_entry+0x3b4>
 314:	ldr	r3, [r3, #20]
 318:	blx	r3
 31c:	mvn	r0, #0
 320:	b	2cc <coda_za_read_entry+0x1f8>
 324:	ldr	r3, [r4, #40]	; 0x28
 328:	ldr	r0, [pc, #348]	; 48c <coda_za_read_entry+0x3b8>
 32c:	ldr	r3, [r3, #20]
 330:	blx	r3
 334:	mvn	r0, #0
 338:	b	2cc <coda_za_read_entry+0x1f8>
 33c:	ldr	r3, [r4, #40]	; 0x28
 340:	ldr	r0, [pc, #328]	; 490 <coda_za_read_entry+0x3bc>
 344:	ldr	r3, [r3, #20]
 348:	blx	r3
 34c:	mvn	r0, #0
 350:	b	2cc <coda_za_read_entry+0x1f8>
 354:	ldr	r3, [r4, #40]	; 0x28
 358:	ldr	r0, [pc, #308]	; 494 <coda_za_read_entry+0x3c0>
 35c:	ldr	r3, [r3, #20]
 360:	blx	r3
 364:	mvn	r0, #0
 368:	b	2cc <coda_za_read_entry+0x1f8>
 36c:	ldr	r3, [r4, #40]	; 0x28
 370:	ldr	r0, [pc, #288]	; 498 <coda_za_read_entry+0x3c4>
 374:	ldr	r3, [r3, #20]
 378:	blx	r3
 37c:	mvn	r0, #0
 380:	b	2cc <coda_za_read_entry+0x1f8>
 384:	ldr	r3, [r4, #40]	; 0x28
 388:	ldr	r0, [pc, #268]	; 49c <coda_za_read_entry+0x3c8>
 38c:	ldr	r3, [r3, #20]
 390:	blx	r3
 394:	mvn	r0, #0
 398:	b	2cc <coda_za_read_entry+0x1f8>
 39c:	ldr	r3, [r4, #40]	; 0x28
 3a0:	ldr	r0, [pc, #248]	; 4a0 <coda_za_read_entry+0x3cc>
 3a4:	ldr	r3, [r3, #20]
 3a8:	blx	r3
 3ac:	mvn	r0, #0
 3b0:	b	2cc <coda_za_read_entry+0x1f8>
 3b4:	ldr	r3, [r4, #40]	; 0x28
 3b8:	ldr	r0, [pc, #228]	; 4a4 <coda_za_read_entry+0x3d0>
 3bc:	ldr	r3, [r3, #20]
 3c0:	blx	r3
 3c4:	mvn	r0, #0
 3c8:	b	2cc <coda_za_read_entry+0x1f8>
 3cc:	ldr	r1, [sp, #56]	; 0x38
 3d0:	ldr	r3, [r4, #40]	; 0x28
 3d4:	cmp	r1, #0
 3d8:	beq	42c <coda_za_read_entry+0x358>
 3dc:	ldr	r0, [pc, #196]	; 4a8 <coda_za_read_entry+0x3d4>
 3e0:	ldr	r3, [r3, #20]
 3e4:	blx	r3
 3e8:	b	2ec <coda_za_read_entry+0x218>
 3ec:	ldr	r3, [r4, #40]	; 0x28
 3f0:	ldr	r4, [r3, #20]
 3f4:	bl	0 <__errno_location>
 3f8:	ldr	r0, [r0]
 3fc:	bl	0 <strerror>
 400:	blx	r4
 404:	b	2f4 <coda_za_read_entry+0x220>
 408:	ldr	r3, [r4, #40]	; 0x28
 40c:	ldr	r4, [r3, #20]
 410:	bl	0 <__errno_location>
 414:	ldr	r0, [r0]
 418:	bl	0 <strerror>
 41c:	blx	r4
 420:	mov	r0, r5
 424:	bl	0 <free>
 428:	b	2f4 <coda_za_read_entry+0x220>
 42c:	ldr	r0, [pc, #120]	; 4ac <coda_za_read_entry+0x3d8>
 430:	ldr	r3, [r3, #20]
 434:	blx	r3
 438:	b	2ec <coda_za_read_entry+0x218>
 43c:	mov	r1, r7
 440:	ldr	r0, [pc, #104]	; 4b0 <coda_za_read_entry+0x3dc>
 444:	ldr	r3, [r3, #20]
 448:	blx	r3
 44c:	b	2f4 <coda_za_read_entry+0x220>
 450:	ldr	r0, [pc, #92]	; 4b4 <coda_za_read_entry+0x3e0>
 454:	ldr	r3, [r3, #20]
 458:	blx	r3
 45c:	b	2f4 <coda_za_read_entry+0x220>
 460:	ldr	r3, [pc, #80]	; 4b8 <coda_za_read_entry+0x3e4>
 464:	ldr	r2, [pc, #80]	; 4bc <coda_za_read_entry+0x3e8>
 468:	ldr	r1, [pc, #80]	; 4c0 <coda_za_read_entry+0x3ec>
 46c:	ldr	r0, [pc, #80]	; 4c4 <coda_za_read_entry+0x3f0>
 470:	bl	0 <__assert_fail>
 474:	.word	0x04034b50
 478:	.word	0x000002e4
 47c:	.word	0x000003c4
 480:	.word	0x00000380
 484:	.word	0x000003b4
 488:	.word	0x00000268
 48c:	.word	0x00000008
 490:	.word	0x00000044
 494:	.word	0x0000009c
 498:	.word	0x000000fc
 49c:	.word	0x0000015c
 4a0:	.word	0x000001ac
 4a4:	.word	0x00000208
 4a8:	.word	0x000002ec
 4ac:	.word	0x000002f0
 4b0:	.word	0x000002c4
 4b4:	.word	0x000003d4
 4b8:	.word	0x00000000
 4bc:	.word	0x00000279
 4c0:	.word	0x00000318
 4c4:	.word	0x00000364

000004c8 <coda_za_close>:
 4c8:	push	{r4, r5, r6, lr}
 4cc:	mov	r6, r0
 4d0:	ldr	r0, [r0]
 4d4:	bl	0 <close>
 4d8:	ldr	r2, [r6, #12]
 4dc:	cmp	r2, #0
 4e0:	beq	52c <coda_za_close+0x64>
 4e4:	ldr	r1, [r6, #4]
 4e8:	cmp	r1, #0
 4ec:	ble	524 <coda_za_close+0x5c>
 4f0:	mov	r4, #0
 4f4:	mov	r5, r4
 4f8:	add	r3, r2, r4
 4fc:	add	r5, r5, #1
 500:	ldr	r3, [r3, #36]	; 0x24
 504:	add	r4, r4, #44	; 0x2c
 508:	subs	r0, r3, #0
 50c:	beq	51c <coda_za_close+0x54>
 510:	bl	0 <free>
 514:	ldr	r2, [r6, #12]
 518:	ldr	r1, [r6, #4]
 51c:	cmp	r1, r5
 520:	bgt	4f8 <coda_za_close+0x30>
 524:	mov	r0, r2
 528:	bl	0 <free>
 52c:	ldr	r0, [r6, #8]
 530:	cmp	r0, #0
 534:	beq	53c <coda_za_close+0x74>
 538:	bl	0 <free>
 53c:	ldr	r0, [r6, #16]
 540:	cmp	r0, #0
 544:	beq	54c <coda_za_close+0x84>
 548:	bl	0 <coda_hashtable_delete>
 54c:	mov	r0, r6
 550:	pop	{r4, r5, r6, lr}
 554:	b	0 <free>

00000558 <coda_za_open>:
 558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 55c:	sub	sp, sp, #156	; 0x9c
 560:	mov	r4, r0
 564:	mov	r6, r1
 568:	add	r2, sp, #64	; 0x40
 56c:	mov	r1, r0
 570:	mov	r0, #3
 574:	bl	0 <__xstat>
 578:	subs	r7, r0, #0
 57c:	beq	5b4 <coda_za_open+0x5c>
 580:	bl	0 <__errno_location>
 584:	ldr	r0, [r0]
 588:	cmp	r0, #2
 58c:	beq	860 <coda_za_open+0x308>
 590:	bl	0 <strerror>
 594:	mov	r1, r4
 598:	mov	r5, #0
 59c:	mov	r2, r0
 5a0:	ldr	r0, [pc, #1088]	; 9e8 <coda_za_open+0x490>
 5a4:	blx	r6
 5a8:	mov	r0, r5
 5ac:	add	sp, sp, #156	; 0x9c
 5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 5b4:	ldr	r5, [sp, #80]	; 0x50
 5b8:	ands	r5, r5, #32768	; 0x8000
 5bc:	beq	894 <coda_za_open+0x33c>
 5c0:	ldr	r3, [sp, #108]	; 0x6c
 5c4:	cmp	r3, #21
 5c8:	ble	8c0 <coda_za_open+0x368>
 5cc:	mov	r0, #24
 5d0:	bl	0 <malloc>
 5d4:	subs	r5, r0, #0
 5d8:	beq	87c <coda_za_open+0x324>
 5dc:	mov	r0, r4
 5e0:	bl	0 <strdup>
 5e4:	cmp	r0, #0
 5e8:	mov	r8, r0
 5ec:	str	r0, [r5, #8]
 5f0:	beq	958 <coda_za_open+0x400>
 5f4:	cmp	r6, #0
 5f8:	strne	r6, [r5, #20]
 5fc:	ldreq	r3, [pc, #1000]	; 9ec <coda_za_open+0x494>
 600:	str	r7, [r5, #4]
 604:	streq	r3, [r5, #20]
 608:	str	r7, [r5, #12]
 60c:	str	r7, [r5, #16]
 610:	mov	r1, #0
 614:	mov	r0, r4
 618:	bl	0 <open>
 61c:	cmp	r0, #0
 620:	str	r0, [r5]
 624:	blt	978 <coda_za_open+0x420>
 628:	mov	r2, #2
 62c:	add	r1, sp, #12
 630:	bl	0 <read>
 634:	cmp	r0, #0
 638:	blt	9b0 <coda_za_open+0x458>
 63c:	ldrb	r3, [sp, #12]
 640:	cmp	r3, #80	; 0x50
 644:	beq	654 <coda_za_open+0xfc>
 648:	ldrb	r3, [sp, #13]
 64c:	cmp	r3, #75	; 0x4b
 650:	bne	928 <coda_za_open+0x3d0>
 654:	mov	r0, #1
 658:	bl	0 <coda_hashtable_new>
 65c:	mov	r2, #2
 660:	mvn	r1, #21
 664:	str	r0, [r5, #16]
 668:	ldr	r0, [r5]
 66c:	bl	0 <lseek>
 670:	cmp	r0, #0
 674:	blt	834 <coda_za_open+0x2dc>
 678:	add	r1, sp, #16
 67c:	mov	r2, #22
 680:	ldr	r0, [r5]
 684:	bl	0 <read>
 688:	cmp	r0, #0
 68c:	blt	834 <coda_za_open+0x2dc>
 690:	ldr	r3, [pc, #856]	; 9f0 <coda_za_open+0x498>
 694:	ldr	r2, [sp, #16]
 698:	cmp	r2, r3
 69c:	bne	944 <coda_za_open+0x3ec>
 6a0:	ldrh	r3, [sp, #24]
 6a4:	ldr	r6, [sp, #32]
 6a8:	mov	r8, r3
 6ac:	str	r3, [sp, #4]
 6b0:	mov	r3, #44	; 0x2c
 6b4:	str	r8, [r5, #4]
 6b8:	mul	r4, r3, r8
 6bc:	mov	r0, r4
 6c0:	bl	0 <malloc>
 6c4:	cmp	r0, #0
 6c8:	str	r0, [r5, #12]
 6cc:	beq	9d4 <coda_za_open+0x47c>
 6d0:	cmp	r8, #0
 6d4:	mov	r2, r8
 6d8:	addne	r3, r0, r4
 6dc:	movne	r2, #0
 6e0:	beq	8a4 <coda_za_open+0x34c>
 6e4:	str	r2, [r0, #36]	; 0x24
 6e8:	str	r5, [r0, #40]	; 0x28
 6ec:	add	r0, r0, #44	; 0x2c
 6f0:	cmp	r0, r3
 6f4:	bne	6e4 <coda_za_open+0x18c>
 6f8:	mov	r1, r6
 6fc:	mov	r2, #0
 700:	ldr	r0, [r5]
 704:	bl	0 <lseek>
 708:	cmp	r0, #0
 70c:	blt	834 <coda_za_open+0x2dc>
 710:	mov	r8, #0
 714:	b	80c <coda_za_open+0x2b4>
 718:	ldr	r3, [sp, #16]
 71c:	ldr	r2, [pc, #720]	; 9f4 <coda_za_open+0x49c>
 720:	cmp	r3, r2
 724:	bne	8d4 <coda_za_open+0x37c>
 728:	ldrh	r3, [sp, #26]
 72c:	bic	r6, r3, #8
 730:	strh	r3, [r4, #4]
 734:	uxth	r6, r6
 738:	cmp	r6, #0
 73c:	bne	8e8 <coda_za_open+0x390>
 740:	ldrh	r3, [sp, #28]
 744:	strh	r3, [r4, #6]
 748:	ldrh	r3, [sp, #30]
 74c:	strh	r3, [r4, #8]
 750:	ldr	r3, [sp, #32]
 754:	str	r3, [r4, #16]
 758:	ldr	r3, [sp, #36]	; 0x24
 75c:	str	r3, [r4, #20]
 760:	ldr	r3, [sp, #40]	; 0x28
 764:	str	r3, [r4, #24]
 768:	ldrh	sl, [sp, #44]	; 0x2c
 76c:	strh	sl, [r4, #28]
 770:	ldrh	r3, [sp, #46]	; 0x2e
 774:	add	fp, sl, #1
 778:	mov	r0, fp
 77c:	strh	r3, [r4, #30]
 780:	ldrh	r3, [sp, #52]	; 0x34
 784:	ldrh	r9, [sp, #48]	; 0x30
 788:	and	r3, r3, #1
 78c:	str	r3, [r4, #32]
 790:	ldr	r3, [sp, #54]	; 0x36
 794:	str	r3, [r4, #12]
 798:	ldr	r3, [sp, #58]	; 0x3a
 79c:	str	r3, [r4]
 7a0:	bl	0 <malloc>
 7a4:	mov	r2, sl
 7a8:	subs	r1, r0, #0
 7ac:	str	r0, [r4, #36]	; 0x24
 7b0:	beq	8fc <coda_za_open+0x3a4>
 7b4:	ldr	r0, [r5]
 7b8:	bl	0 <read>
 7bc:	cmp	r0, #0
 7c0:	blt	834 <coda_za_open+0x2dc>
 7c4:	ldrh	r3, [r4, #28]
 7c8:	ldr	r2, [r4, #36]	; 0x24
 7cc:	strb	r6, [r2, r3]
 7d0:	ldr	r1, [r4, #36]	; 0x24
 7d4:	ldr	r0, [r5, #16]
 7d8:	bl	0 <coda_hashtable_add_name>
 7dc:	mov	r2, #1
 7e0:	cmp	r0, #0
 7e4:	bne	910 <coda_za_open+0x3b8>
 7e8:	ldrh	r1, [r4, #30]
 7ec:	ldr	r0, [r5]
 7f0:	add	r1, r1, r9
 7f4:	bl	0 <lseek>
 7f8:	cmp	r0, #0
 7fc:	blt	834 <coda_za_open+0x2dc>
 800:	ldr	r3, [sp, #4]
 804:	cmp	r3, r7
 808:	beq	5a8 <coda_za_open+0x50>
 80c:	mov	r2, #46	; 0x2e
 810:	add	r1, sp, #16
 814:	ldr	r0, [r5]
 818:	ldr	r4, [r5, #12]
 81c:	bl	0 <read>
 820:	add	r4, r4, r8
 824:	add	r7, r7, #1
 828:	add	r8, r8, #44	; 0x2c
 82c:	cmp	r0, #0
 830:	bge	718 <coda_za_open+0x1c0>
 834:	bl	0 <__errno_location>
 838:	ldr	r4, [r5, #20]
 83c:	ldr	r0, [r0]
 840:	bl	0 <strerror>
 844:	blx	r4
 848:	mov	r0, r5
 84c:	bl	4c8 <coda_za_close>
 850:	mov	r5, #0
 854:	mov	r0, r5
 858:	add	sp, sp, #156	; 0x9c
 85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 860:	mov	r1, r4
 864:	ldr	r0, [pc, #396]	; 9f8 <coda_za_open+0x4a0>
 868:	blx	r6
 86c:	mov	r5, #0
 870:	mov	r0, r5
 874:	add	sp, sp, #156	; 0x9c
 878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 87c:	cmp	r6, #0
 880:	beq	850 <coda_za_open+0x2f8>
 884:	mov	r1, #24
 888:	ldr	r0, [pc, #364]	; 9fc <coda_za_open+0x4a4>
 88c:	blx	r6
 890:	b	5a8 <coda_za_open+0x50>
 894:	mov	r1, r4
 898:	ldr	r0, [pc, #352]	; a00 <coda_za_open+0x4a8>
 89c:	blx	r6
 8a0:	b	5a8 <coda_za_open+0x50>
 8a4:	ldr	r2, [sp, #4]
 8a8:	mov	r1, r6
 8ac:	ldr	r0, [r5]
 8b0:	bl	0 <lseek>
 8b4:	cmp	r0, #0
 8b8:	blt	834 <coda_za_open+0x2dc>
 8bc:	b	5a8 <coda_za_open+0x50>
 8c0:	mov	r1, r4
 8c4:	ldr	r0, [pc, #312]	; a04 <coda_za_open+0x4ac>
 8c8:	mov	r5, r7
 8cc:	blx	r6
 8d0:	b	5a8 <coda_za_open+0x50>
 8d4:	ldr	r3, [r5, #20]
 8d8:	ldr	r1, [r5, #8]
 8dc:	ldr	r0, [pc, #292]	; a08 <coda_za_open+0x4b0>
 8e0:	blx	r3
 8e4:	b	848 <coda_za_open+0x2f0>
 8e8:	ldr	r3, [r5, #20]
 8ec:	ldr	r1, [r5, #8]
 8f0:	ldr	r0, [pc, #276]	; a0c <coda_za_open+0x4b4>
 8f4:	blx	r3
 8f8:	b	848 <coda_za_open+0x2f0>
 8fc:	mov	r1, fp
 900:	ldr	r3, [r5, #20]
 904:	ldr	r0, [pc, #260]	; a10 <coda_za_open+0x4b8>
 908:	blx	r3
 90c:	b	848 <coda_za_open+0x2f0>
 910:	ldr	r2, [r4, #36]	; 0x24
 914:	ldr	r3, [r5, #20]
 918:	ldr	r1, [r5, #8]
 91c:	ldr	r0, [pc, #240]	; a14 <coda_za_open+0x4bc>
 920:	blx	r3
 924:	b	848 <coda_za_open+0x2f0>
 928:	mov	r1, r4
 92c:	ldr	r0, [pc, #208]	; a04 <coda_za_open+0x4ac>
 930:	blx	r6
 934:	mov	r0, r5
 938:	bl	4c8 <coda_za_close>
 93c:	mov	r5, #0
 940:	b	5a8 <coda_za_open+0x50>
 944:	ldr	r3, [r5, #20]
 948:	ldr	r1, [r5, #8]
 94c:	ldr	r0, [pc, #196]	; a18 <coda_za_open+0x4c0>
 950:	blx	r3
 954:	b	848 <coda_za_open+0x2f0>
 958:	mov	r0, r5
 95c:	bl	0 <free>
 960:	cmp	r6, #0
 964:	beq	850 <coda_za_open+0x2f8>
 968:	ldr	r0, [pc, #172]	; a1c <coda_za_open+0x4c4>
 96c:	mov	r5, r8
 970:	blx	r6
 974:	b	5a8 <coda_za_open+0x50>
 978:	bl	0 <__errno_location>
 97c:	ldr	r6, [r5, #20]
 980:	ldr	r0, [r0]
 984:	bl	0 <strerror>
 988:	mov	r1, r4
 98c:	mov	r2, r0
 990:	ldr	r0, [pc, #136]	; a20 <coda_za_open+0x4c8>
 994:	blx	r6
 998:	ldr	r0, [r5, #8]
 99c:	bl	0 <free>
 9a0:	mov	r0, r5
 9a4:	bl	0 <free>
 9a8:	mov	r5, #0
 9ac:	b	5a8 <coda_za_open+0x50>
 9b0:	bl	0 <__errno_location>
 9b4:	ldr	r4, [r5, #20]
 9b8:	ldr	r0, [r0]
 9bc:	bl	0 <strerror>
 9c0:	blx	r4
 9c4:	mov	r0, r5
 9c8:	bl	4c8 <coda_za_close>
 9cc:	mov	r5, #0
 9d0:	b	5a8 <coda_za_open+0x50>
 9d4:	mov	r1, r4
 9d8:	ldr	r3, [r5, #20]
 9dc:	ldr	r0, [pc, #24]	; 9fc <coda_za_open+0x4a4>
 9e0:	blx	r3
 9e4:	b	848 <coda_za_open+0x2f0>
 9e8:	.word	0x000003fc
 9ec:	.word	0x00000000
 9f0:	.word	0x06054b50
 9f4:	.word	0x02014b50
 9f8:	.word	0x000003e8
 9fc:	.word	0x000002c4
 a00:	.word	0x00000414
 a04:	.word	0x0000043c
 a08:	.word	0x00000524
 a0c:	.word	0x00000554
 a10:	.word	0x00000588
 a14:	.word	0x000005a4
 a18:	.word	0x0000049c
 a1c:	.word	0x00000460
 a20:	.word	0x0000047c
