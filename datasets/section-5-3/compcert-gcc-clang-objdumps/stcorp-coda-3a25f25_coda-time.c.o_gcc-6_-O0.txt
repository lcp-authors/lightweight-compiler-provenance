
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-time.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_month_to_integer>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-16]
      10:	ldr	r3, [fp, #-16]
      14:	ldrb	r3, [r3]
      18:	strb	r3, [fp, #-8]
      1c:	ldr	r3, [fp, #-16]
      20:	ldrb	r3, [r3, #1]
      24:	strb	r3, [fp, #-7]
      28:	ldr	r3, [fp, #-16]
      2c:	ldrb	r3, [r3, #2]
      30:	strb	r3, [fp, #-6]
      34:	mov	r3, #0
      38:	strb	r3, [fp, #-5]
      3c:	sub	r3, fp, #8
      40:	mov	r2, #3
      44:	ldr	r1, [pc, #500]	; 240 <coda_month_to_integer+0x240>
      48:	mov	r0, r3
      4c:	bl	0 <strncasecmp>
      50:	mov	r3, r0
      54:	cmp	r3, #0
      58:	bne	64 <coda_month_to_integer+0x64>
      5c:	mov	r3, #1
      60:	b	234 <coda_month_to_integer+0x234>
      64:	sub	r3, fp, #8
      68:	mov	r2, #3
      6c:	ldr	r1, [pc, #464]	; 244 <coda_month_to_integer+0x244>
      70:	mov	r0, r3
      74:	bl	0 <strncasecmp>
      78:	mov	r3, r0
      7c:	cmp	r3, #0
      80:	bne	8c <coda_month_to_integer+0x8c>
      84:	mov	r3, #2
      88:	b	234 <coda_month_to_integer+0x234>
      8c:	sub	r3, fp, #8
      90:	mov	r2, #3
      94:	ldr	r1, [pc, #428]	; 248 <coda_month_to_integer+0x248>
      98:	mov	r0, r3
      9c:	bl	0 <strncasecmp>
      a0:	mov	r3, r0
      a4:	cmp	r3, #0
      a8:	bne	b4 <coda_month_to_integer+0xb4>
      ac:	mov	r3, #3
      b0:	b	234 <coda_month_to_integer+0x234>
      b4:	sub	r3, fp, #8
      b8:	mov	r2, #3
      bc:	ldr	r1, [pc, #392]	; 24c <coda_month_to_integer+0x24c>
      c0:	mov	r0, r3
      c4:	bl	0 <strncasecmp>
      c8:	mov	r3, r0
      cc:	cmp	r3, #0
      d0:	bne	dc <coda_month_to_integer+0xdc>
      d4:	mov	r3, #4
      d8:	b	234 <coda_month_to_integer+0x234>
      dc:	sub	r3, fp, #8
      e0:	mov	r2, #3
      e4:	ldr	r1, [pc, #356]	; 250 <coda_month_to_integer+0x250>
      e8:	mov	r0, r3
      ec:	bl	0 <strncasecmp>
      f0:	mov	r3, r0
      f4:	cmp	r3, #0
      f8:	bne	104 <coda_month_to_integer+0x104>
      fc:	mov	r3, #5
     100:	b	234 <coda_month_to_integer+0x234>
     104:	sub	r3, fp, #8
     108:	mov	r2, #3
     10c:	ldr	r1, [pc, #320]	; 254 <coda_month_to_integer+0x254>
     110:	mov	r0, r3
     114:	bl	0 <strncasecmp>
     118:	mov	r3, r0
     11c:	cmp	r3, #0
     120:	bne	12c <coda_month_to_integer+0x12c>
     124:	mov	r3, #6
     128:	b	234 <coda_month_to_integer+0x234>
     12c:	sub	r3, fp, #8
     130:	mov	r2, #3
     134:	ldr	r1, [pc, #284]	; 258 <coda_month_to_integer+0x258>
     138:	mov	r0, r3
     13c:	bl	0 <strncasecmp>
     140:	mov	r3, r0
     144:	cmp	r3, #0
     148:	bne	154 <coda_month_to_integer+0x154>
     14c:	mov	r3, #7
     150:	b	234 <coda_month_to_integer+0x234>
     154:	sub	r3, fp, #8
     158:	mov	r2, #3
     15c:	ldr	r1, [pc, #248]	; 25c <coda_month_to_integer+0x25c>
     160:	mov	r0, r3
     164:	bl	0 <strncasecmp>
     168:	mov	r3, r0
     16c:	cmp	r3, #0
     170:	bne	17c <coda_month_to_integer+0x17c>
     174:	mov	r3, #8
     178:	b	234 <coda_month_to_integer+0x234>
     17c:	sub	r3, fp, #8
     180:	mov	r2, #3
     184:	ldr	r1, [pc, #212]	; 260 <coda_month_to_integer+0x260>
     188:	mov	r0, r3
     18c:	bl	0 <strncasecmp>
     190:	mov	r3, r0
     194:	cmp	r3, #0
     198:	bne	1a4 <coda_month_to_integer+0x1a4>
     19c:	mov	r3, #9
     1a0:	b	234 <coda_month_to_integer+0x234>
     1a4:	sub	r3, fp, #8
     1a8:	mov	r2, #3
     1ac:	ldr	r1, [pc, #176]	; 264 <coda_month_to_integer+0x264>
     1b0:	mov	r0, r3
     1b4:	bl	0 <strncasecmp>
     1b8:	mov	r3, r0
     1bc:	cmp	r3, #0
     1c0:	bne	1cc <coda_month_to_integer+0x1cc>
     1c4:	mov	r3, #10
     1c8:	b	234 <coda_month_to_integer+0x234>
     1cc:	sub	r3, fp, #8
     1d0:	mov	r2, #3
     1d4:	ldr	r1, [pc, #140]	; 268 <coda_month_to_integer+0x268>
     1d8:	mov	r0, r3
     1dc:	bl	0 <strncasecmp>
     1e0:	mov	r3, r0
     1e4:	cmp	r3, #0
     1e8:	bne	1f4 <coda_month_to_integer+0x1f4>
     1ec:	mov	r3, #11
     1f0:	b	234 <coda_month_to_integer+0x234>
     1f4:	sub	r3, fp, #8
     1f8:	mov	r2, #3
     1fc:	ldr	r1, [pc, #104]	; 26c <coda_month_to_integer+0x26c>
     200:	mov	r0, r3
     204:	bl	0 <strncasecmp>
     208:	mov	r3, r0
     20c:	cmp	r3, #0
     210:	bne	21c <coda_month_to_integer+0x21c>
     214:	mov	r3, #12
     218:	b	234 <coda_month_to_integer+0x234>
     21c:	sub	r3, fp, #8
     220:	mov	r2, r3
     224:	ldr	r1, [pc, #68]	; 270 <coda_month_to_integer+0x270>
     228:	mvn	r0, #99	; 0x63
     22c:	bl	0 <coda_set_error>
     230:	mvn	r3, #0
     234:	mov	r0, r3
     238:	sub	sp, fp, #4
     23c:	pop	{fp, pc}
     240:	.word	0x00000000
     244:	.word	0x00000004
     248:	.word	0x00000008
     24c:	.word	0x0000000c
     250:	.word	0x00000010
     254:	.word	0x00000014
     258:	.word	0x00000018
     25c:	.word	0x0000001c
     260:	.word	0x00000020
     264:	.word	0x00000024
     268:	.word	0x00000028
     26c:	.word	0x0000002c
     270:	.word	0x00000030

00000274 <parse_integer>:
     274:	push	{fp}		; (str fp, [sp, #-4]!)
     278:	add	fp, sp, #0
     27c:	sub	sp, sp, #20
     280:	str	r0, [fp, #-8]
     284:	str	r1, [fp, #-12]
     288:	str	r2, [fp, #-16]
     28c:	str	r3, [fp, #-20]	; 0xffffffec
     290:	ldr	r3, [fp, #-16]
     294:	cmp	r3, #0
     298:	beq	2d4 <parse_integer+0x60>
     29c:	b	2b8 <parse_integer+0x44>
     2a0:	ldr	r3, [fp, #-8]
     2a4:	add	r3, r3, #1
     2a8:	str	r3, [fp, #-8]
     2ac:	ldr	r3, [fp, #-12]
     2b0:	sub	r3, r3, #1
     2b4:	str	r3, [fp, #-12]
     2b8:	ldr	r3, [fp, #-12]
     2bc:	cmp	r3, #1
     2c0:	ble	2d4 <parse_integer+0x60>
     2c4:	ldr	r3, [fp, #-8]
     2c8:	ldrb	r3, [r3]
     2cc:	cmp	r3, #32
     2d0:	beq	2a0 <parse_integer+0x2c>
     2d4:	ldr	r3, [fp, #-20]	; 0xffffffec
     2d8:	mov	r2, #0
     2dc:	str	r2, [r3]
     2e0:	b	358 <parse_integer+0xe4>
     2e4:	ldr	r3, [fp, #-8]
     2e8:	ldrb	r3, [r3]
     2ec:	cmp	r3, #47	; 0x2f
     2f0:	bls	304 <parse_integer+0x90>
     2f4:	ldr	r3, [fp, #-8]
     2f8:	ldrb	r3, [r3]
     2fc:	cmp	r3, #57	; 0x39
     300:	bls	30c <parse_integer+0x98>
     304:	mvn	r3, #0
     308:	b	368 <parse_integer+0xf4>
     30c:	ldr	r3, [fp, #-20]	; 0xffffffec
     310:	ldr	r2, [r3]
     314:	mov	r3, r2
     318:	lsl	r3, r3, #2
     31c:	add	r3, r3, r2
     320:	lsl	r3, r3, #1
     324:	mov	r2, r3
     328:	ldr	r3, [fp, #-8]
     32c:	ldrb	r3, [r3]
     330:	sub	r3, r3, #48	; 0x30
     334:	add	r2, r2, r3
     338:	ldr	r3, [fp, #-20]	; 0xffffffec
     33c:	str	r2, [r3]
     340:	ldr	r3, [fp, #-8]
     344:	add	r3, r3, #1
     348:	str	r3, [fp, #-8]
     34c:	ldr	r3, [fp, #-12]
     350:	sub	r3, r3, #1
     354:	str	r3, [fp, #-12]
     358:	ldr	r3, [fp, #-12]
     35c:	cmp	r3, #0
     360:	bgt	2e4 <parse_integer+0x70>
     364:	mov	r3, #0
     368:	mov	r0, r3
     36c:	add	sp, fp, #0
     370:	pop	{fp}		; (ldr fp, [sp], #4)
     374:	bx	lr

00000378 <y>:
     378:	push	{fp}		; (str fp, [sp, #-4]!)
     37c:	add	fp, sp, #0
     380:	sub	sp, sp, #12
     384:	str	r0, [fp, #-8]
     388:	ldr	r3, [fp, #-8]
     38c:	lsr	r3, r3, #31
     390:	uxtb	r3, r3
     394:	mov	r2, r3
     398:	ldr	r3, [fp, #-8]
     39c:	add	r3, r2, r3
     3a0:	mov	r0, r3
     3a4:	add	sp, fp, #0
     3a8:	pop	{fp}		; (ldr fp, [sp], #4)
     3ac:	bx	lr

000003b0 <int_div>:
     3b0:	push	{r4, fp, lr}
     3b4:	add	fp, sp, #8
     3b8:	sub	sp, sp, #12
     3bc:	str	r0, [fp, #-16]
     3c0:	str	r1, [fp, #-20]	; 0xffffffec
     3c4:	ldr	r1, [fp, #-20]	; 0xffffffec
     3c8:	ldr	r0, [fp, #-16]
     3cc:	bl	0 <__aeabi_idiv>
     3d0:	mov	r3, r0
     3d4:	mov	r4, r3
     3d8:	ldr	r3, [fp, #-16]
     3dc:	ldr	r1, [fp, #-20]	; 0xffffffec
     3e0:	mov	r0, r3
     3e4:	bl	0 <__aeabi_idivmod>
     3e8:	mov	r3, r1
     3ec:	lsr	r3, r3, #31
     3f0:	uxtb	r3, r3
     3f4:	sub	r3, r4, r3
     3f8:	mov	r0, r3
     3fc:	sub	sp, fp, #8
     400:	pop	{r4, fp, pc}

00000404 <int_mod>:
     404:	push	{r4, fp, lr}
     408:	add	fp, sp, #8
     40c:	sub	sp, sp, #12
     410:	str	r0, [fp, #-16]
     414:	str	r1, [fp, #-20]	; 0xffffffec
     418:	ldr	r3, [fp, #-16]
     41c:	ldr	r1, [fp, #-20]	; 0xffffffec
     420:	mov	r0, r3
     424:	bl	0 <__aeabi_idivmod>
     428:	mov	r3, r1
     42c:	mov	r4, r3
     430:	ldr	r3, [fp, #-16]
     434:	ldr	r1, [fp, #-20]	; 0xffffffec
     438:	mov	r0, r3
     43c:	bl	0 <__aeabi_idivmod>
     440:	mov	r3, r1
     444:	lsr	r3, r3, #31
     448:	uxtb	r3, r3
     44c:	mov	r2, r3
     450:	ldr	r3, [fp, #-20]	; 0xffffffec
     454:	mul	r3, r3, r2
     458:	add	r3, r4, r3
     45c:	mov	r0, r3
     460:	sub	sp, fp, #8
     464:	pop	{r4, fp, pc}

00000468 <dmy_to_mjd2000_julian>:
     468:	push	{r4, fp, lr}
     46c:	add	fp, sp, #8
     470:	sub	sp, sp, #84	; 0x54
     474:	str	r0, [fp, #-72]	; 0xffffffb8
     478:	str	r1, [fp, #-76]	; 0xffffffb4
     47c:	str	r2, [fp, #-80]	; 0xffffffb0
     480:	str	r3, [fp, #-84]	; 0xffffffac
     484:	ldr	r3, [pc, #424]	; 634 <dmy_to_mjd2000_julian+0x1cc>
     488:	sub	ip, fp, #64	; 0x40
     48c:	mov	lr, r3
     490:	ldm	lr!, {r0, r1, r2, r3}
     494:	stmia	ip!, {r0, r1, r2, r3}
     498:	ldm	lr!, {r0, r1, r2, r3}
     49c:	stmia	ip!, {r0, r1, r2, r3}
     4a0:	ldm	lr!, {r0, r1, r2, r3}
     4a4:	stmia	ip!, {r0, r1, r2, r3}
     4a8:	ldr	r3, [lr]
     4ac:	str	r3, [ip]
     4b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
     4b4:	cmp	r3, #0
     4b8:	beq	550 <dmy_to_mjd2000_julian+0xe8>
     4bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
     4c0:	cmp	r3, #0
     4c4:	ble	550 <dmy_to_mjd2000_julian+0xe8>
     4c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
     4cc:	cmp	r3, #12
     4d0:	bgt	550 <dmy_to_mjd2000_julian+0xe8>
     4d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     4d8:	cmp	r3, #0
     4dc:	ble	550 <dmy_to_mjd2000_julian+0xe8>
     4e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
     4e4:	lsl	r3, r3, #2
     4e8:	sub	r2, fp, #12
     4ec:	add	r3, r2, r3
     4f0:	ldr	r2, [r3, #-52]	; 0xffffffcc
     4f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
     4f8:	sub	r3, r3, #1
     4fc:	lsl	r3, r3, #2
     500:	sub	r1, fp, #12
     504:	add	r3, r1, r3
     508:	ldr	r3, [r3, #-52]	; 0xffffffcc
     50c:	sub	r4, r2, r3
     510:	ldr	r3, [fp, #-76]	; 0xffffffb4
     514:	cmp	r3, #2
     518:	bne	53c <dmy_to_mjd2000_julian+0xd4>
     51c:	ldr	r0, [fp, #-80]	; 0xffffffb0
     520:	bl	378 <y>
     524:	mov	r3, r0
     528:	and	r3, r3, #3
     52c:	cmp	r3, #0
     530:	bne	53c <dmy_to_mjd2000_julian+0xd4>
     534:	mov	r3, #1
     538:	b	540 <dmy_to_mjd2000_julian+0xd8>
     53c:	mov	r3, #0
     540:	add	r2, r4, r3
     544:	ldr	r3, [fp, #-72]	; 0xffffffb8
     548:	cmp	r2, r3
     54c:	bge	574 <dmy_to_mjd2000_julian+0x10c>
     550:	ldr	r3, [fp, #-80]	; 0xffffffb0
     554:	str	r3, [sp]
     558:	ldr	r3, [fp, #-76]	; 0xffffffb4
     55c:	ldr	r2, [fp, #-72]	; 0xffffffb8
     560:	ldr	r1, [pc, #208]	; 638 <dmy_to_mjd2000_julian+0x1d0>
     564:	mvn	r0, #103	; 0x67
     568:	bl	0 <coda_set_error>
     56c:	mvn	r3, #0
     570:	b	628 <dmy_to_mjd2000_julian+0x1c0>
     574:	ldr	r0, [fp, #-80]	; 0xffffffb0
     578:	bl	378 <y>
     57c:	mov	r2, r0
     580:	mov	r3, r2
     584:	lsl	r3, r3, #3
     588:	add	r3, r3, r2
     58c:	lsl	r3, r3, #3
     590:	add	r3, r3, r2
     594:	lsl	r2, r3, #2
     598:	add	r2, r3, r2
     59c:	ldr	r3, [fp, #-72]	; 0xffffffb8
     5a0:	add	r4, r2, r3
     5a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
     5a8:	bl	378 <y>
     5ac:	mov	r3, r0
     5b0:	mov	r1, #4
     5b4:	mov	r0, r3
     5b8:	bl	3b0 <int_div>
     5bc:	mov	r3, r0
     5c0:	add	r2, r4, r3
     5c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
     5c8:	sub	r3, r3, #1
     5cc:	lsl	r3, r3, #2
     5d0:	sub	r1, fp, #12
     5d4:	add	r3, r1, r3
     5d8:	ldr	r3, [r3, #-52]	; 0xffffffcc
     5dc:	add	r4, r2, r3
     5e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
     5e4:	cmp	r3, #2
     5e8:	bgt	60c <dmy_to_mjd2000_julian+0x1a4>
     5ec:	ldr	r0, [fp, #-80]	; 0xffffffb0
     5f0:	bl	378 <y>
     5f4:	mov	r3, r0
     5f8:	and	r3, r3, #3
     5fc:	cmp	r3, #0
     600:	bne	60c <dmy_to_mjd2000_julian+0x1a4>
     604:	mov	r3, #1
     608:	b	610 <dmy_to_mjd2000_julian+0x1a8>
     60c:	mov	r3, #0
     610:	sub	r2, r4, r3
     614:	ldr	r3, [pc, #32]	; 63c <dmy_to_mjd2000_julian+0x1d4>
     618:	add	r3, r2, r3
     61c:	ldr	r2, [fp, #-84]	; 0xffffffac
     620:	str	r3, [r2]
     624:	mov	r3, #0
     628:	mov	r0, r3
     62c:	sub	sp, fp, #8
     630:	pop	{r4, fp, pc}
     634:	.word	0x00000078
     638:	.word	0x0000004c
     63c:	.word	0x001a42e2

00000640 <dmy_to_mjd2000_gregorian>:
     640:	push	{r4, r5, fp, lr}
     644:	add	fp, sp, #12
     648:	sub	sp, sp, #80	; 0x50
     64c:	str	r0, [fp, #-72]	; 0xffffffb8
     650:	str	r1, [fp, #-76]	; 0xffffffb4
     654:	str	r2, [fp, #-80]	; 0xffffffb0
     658:	str	r3, [fp, #-84]	; 0xffffffac
     65c:	ldr	r3, [pc, #780]	; 970 <dmy_to_mjd2000_gregorian+0x330>
     660:	sub	ip, fp, #64	; 0x40
     664:	mov	lr, r3
     668:	ldm	lr!, {r0, r1, r2, r3}
     66c:	stmia	ip!, {r0, r1, r2, r3}
     670:	ldm	lr!, {r0, r1, r2, r3}
     674:	stmia	ip!, {r0, r1, r2, r3}
     678:	ldm	lr!, {r0, r1, r2, r3}
     67c:	stmia	ip!, {r0, r1, r2, r3}
     680:	ldr	r3, [lr]
     684:	str	r3, [ip]
     688:	ldr	r3, [fp, #-80]	; 0xffffffb0
     68c:	cmp	r3, #0
     690:	beq	7b8 <dmy_to_mjd2000_gregorian+0x178>
     694:	ldr	r3, [fp, #-76]	; 0xffffffb4
     698:	cmp	r3, #0
     69c:	ble	7b8 <dmy_to_mjd2000_gregorian+0x178>
     6a0:	ldr	r3, [fp, #-76]	; 0xffffffb4
     6a4:	cmp	r3, #12
     6a8:	bgt	7b8 <dmy_to_mjd2000_gregorian+0x178>
     6ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
     6b0:	cmp	r3, #0
     6b4:	ble	7b8 <dmy_to_mjd2000_gregorian+0x178>
     6b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
     6bc:	lsl	r3, r3, #2
     6c0:	sub	r2, fp, #12
     6c4:	add	r3, r2, r3
     6c8:	ldr	r2, [r3, #-52]	; 0xffffffcc
     6cc:	ldr	r3, [fp, #-76]	; 0xffffffb4
     6d0:	sub	r3, r3, #1
     6d4:	lsl	r3, r3, #2
     6d8:	sub	r1, fp, #12
     6dc:	add	r3, r1, r3
     6e0:	ldr	r3, [r3, #-52]	; 0xffffffcc
     6e4:	sub	r4, r2, r3
     6e8:	ldr	r3, [fp, #-76]	; 0xffffffb4
     6ec:	cmp	r3, #2
     6f0:	bne	7a4 <dmy_to_mjd2000_gregorian+0x164>
     6f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
     6f8:	bl	378 <y>
     6fc:	mov	r3, r0
     700:	and	r3, r3, #3
     704:	cmp	r3, #0
     708:	moveq	r3, #1
     70c:	movne	r3, #0
     710:	uxtb	r3, r3
     714:	mov	r5, r3
     718:	ldr	r0, [fp, #-80]	; 0xffffffb0
     71c:	bl	378 <y>
     720:	mov	r2, r0
     724:	ldr	r3, [pc, #584]	; 974 <dmy_to_mjd2000_gregorian+0x334>
     728:	smull	r1, r3, r3, r2
     72c:	asr	r1, r3, #5
     730:	asr	r3, r2, #31
     734:	sub	r3, r1, r3
     738:	mov	r1, #100	; 0x64
     73c:	mul	r3, r1, r3
     740:	sub	r3, r2, r3
     744:	cmp	r3, #0
     748:	moveq	r3, #1
     74c:	movne	r3, #0
     750:	uxtb	r3, r3
     754:	eor	r5, r5, r3
     758:	ldr	r0, [fp, #-80]	; 0xffffffb0
     75c:	bl	378 <y>
     760:	mov	r2, r0
     764:	ldr	r3, [pc, #520]	; 974 <dmy_to_mjd2000_gregorian+0x334>
     768:	smull	r1, r3, r3, r2
     76c:	asr	r1, r3, #7
     770:	asr	r3, r2, #31
     774:	sub	r3, r1, r3
     778:	mov	r1, #400	; 0x190
     77c:	mul	r3, r1, r3
     780:	sub	r3, r2, r3
     784:	cmp	r3, #0
     788:	moveq	r3, #1
     78c:	movne	r3, #0
     790:	uxtb	r3, r3
     794:	cmp	r5, r3
     798:	beq	7a4 <dmy_to_mjd2000_gregorian+0x164>
     79c:	mov	r3, #1
     7a0:	b	7a8 <dmy_to_mjd2000_gregorian+0x168>
     7a4:	mov	r3, #0
     7a8:	add	r2, r4, r3
     7ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
     7b0:	cmp	r2, r3
     7b4:	bge	7dc <dmy_to_mjd2000_gregorian+0x19c>
     7b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
     7bc:	str	r3, [sp]
     7c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
     7c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
     7c8:	ldr	r1, [pc, #424]	; 978 <dmy_to_mjd2000_gregorian+0x338>
     7cc:	mvn	r0, #103	; 0x67
     7d0:	bl	0 <coda_set_error>
     7d4:	mvn	r3, #0
     7d8:	b	964 <dmy_to_mjd2000_gregorian+0x324>
     7dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
     7e0:	sub	r3, r3, #1
     7e4:	lsl	r3, r3, #2
     7e8:	sub	r2, fp, #12
     7ec:	add	r3, r2, r3
     7f0:	ldr	r2, [r3, #-52]	; 0xffffffcc
     7f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     7f8:	add	r4, r2, r3
     7fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
     800:	bl	378 <y>
     804:	mov	r2, r0
     808:	mov	r3, r2
     80c:	lsl	r3, r3, #3
     810:	add	r3, r3, r2
     814:	lsl	r3, r3, #3
     818:	add	r3, r3, r2
     81c:	lsl	r2, r3, #2
     820:	add	r3, r3, r2
     824:	add	r4, r4, r3
     828:	ldr	r0, [fp, #-80]	; 0xffffffb0
     82c:	bl	378 <y>
     830:	mov	r3, r0
     834:	mov	r1, #4
     838:	mov	r0, r3
     83c:	bl	3b0 <int_div>
     840:	mov	r3, r0
     844:	add	r4, r4, r3
     848:	ldr	r0, [fp, #-80]	; 0xffffffb0
     84c:	bl	378 <y>
     850:	mov	r3, r0
     854:	mov	r1, #100	; 0x64
     858:	mov	r0, r3
     85c:	bl	3b0 <int_div>
     860:	mov	r3, r0
     864:	sub	r4, r4, r3
     868:	ldr	r0, [fp, #-80]	; 0xffffffb0
     86c:	bl	378 <y>
     870:	mov	r3, r0
     874:	mov	r1, #400	; 0x190
     878:	mov	r0, r3
     87c:	bl	3b0 <int_div>
     880:	mov	r3, r0
     884:	add	r4, r4, r3
     888:	ldr	r3, [fp, #-76]	; 0xffffffb4
     88c:	cmp	r3, #2
     890:	bgt	948 <dmy_to_mjd2000_gregorian+0x308>
     894:	ldr	r0, [fp, #-80]	; 0xffffffb0
     898:	bl	378 <y>
     89c:	mov	r3, r0
     8a0:	and	r3, r3, #3
     8a4:	cmp	r3, #0
     8a8:	moveq	r3, #1
     8ac:	movne	r3, #0
     8b0:	uxtb	r3, r3
     8b4:	mov	r5, r3
     8b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     8bc:	bl	378 <y>
     8c0:	mov	r2, r0
     8c4:	ldr	r3, [pc, #168]	; 974 <dmy_to_mjd2000_gregorian+0x334>
     8c8:	smull	r1, r3, r3, r2
     8cc:	asr	r1, r3, #5
     8d0:	asr	r3, r2, #31
     8d4:	sub	r3, r1, r3
     8d8:	mov	r1, #100	; 0x64
     8dc:	mul	r3, r1, r3
     8e0:	sub	r3, r2, r3
     8e4:	cmp	r3, #0
     8e8:	moveq	r3, #1
     8ec:	movne	r3, #0
     8f0:	uxtb	r3, r3
     8f4:	sub	r5, r5, r3
     8f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     8fc:	bl	378 <y>
     900:	mov	r2, r0
     904:	ldr	r3, [pc, #104]	; 974 <dmy_to_mjd2000_gregorian+0x334>
     908:	smull	r1, r3, r3, r2
     90c:	asr	r1, r3, #7
     910:	asr	r3, r2, #31
     914:	sub	r3, r1, r3
     918:	mov	r1, #400	; 0x190
     91c:	mul	r3, r1, r3
     920:	sub	r3, r2, r3
     924:	cmp	r3, #0
     928:	moveq	r3, #1
     92c:	movne	r3, #0
     930:	uxtb	r3, r3
     934:	add	r3, r5, r3
     938:	cmp	r3, #0
     93c:	beq	948 <dmy_to_mjd2000_gregorian+0x308>
     940:	mov	r3, #1
     944:	b	94c <dmy_to_mjd2000_gregorian+0x30c>
     948:	mov	r3, #0
     94c:	sub	r2, r4, r3
     950:	ldr	r3, [pc, #36]	; 97c <dmy_to_mjd2000_gregorian+0x33c>
     954:	add	r3, r2, r3
     958:	ldr	r2, [fp, #-84]	; 0xffffffac
     95c:	str	r3, [r2]
     960:	mov	r3, #0
     964:	mov	r0, r3
     968:	sub	sp, fp, #12
     96c:	pop	{r4, r5, fp, pc}
     970:	.word	0x00000078
     974:	.word	0x51eb851f
     978:	.word	0x0000004c
     97c:	.word	0xfff72821

00000980 <dmy_to_mjd2000>:
     980:	push	{fp, lr}
     984:	add	fp, sp, #4
     988:	sub	sp, sp, #48	; 0x30
     98c:	str	r0, [fp, #-32]	; 0xffffffe0
     990:	str	r1, [fp, #-36]	; 0xffffffdc
     994:	str	r2, [fp, #-40]	; 0xffffffd8
     998:	str	r3, [fp, #-44]	; 0xffffffd4
     99c:	mov	r3, #2
     9a0:	str	r3, [fp, #-8]
     9a4:	mov	r3, #9
     9a8:	str	r3, [fp, #-12]
     9ac:	ldr	r3, [pc, #256]	; ab4 <dmy_to_mjd2000+0x134>
     9b0:	str	r3, [fp, #-16]
     9b4:	sub	r3, fp, #24
     9b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
     9bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
     9c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     9c4:	bl	468 <dmy_to_mjd2000_julian>
     9c8:	mov	r3, r0
     9cc:	cmp	r3, #0
     9d0:	bne	9f4 <dmy_to_mjd2000+0x74>
     9d4:	sub	r3, fp, #20
     9d8:	ldr	r2, [fp, #-16]
     9dc:	ldr	r1, [fp, #-12]
     9e0:	ldr	r0, [fp, #-8]
     9e4:	bl	468 <dmy_to_mjd2000_julian>
     9e8:	mov	r3, r0
     9ec:	cmp	r3, #0
     9f0:	beq	9fc <dmy_to_mjd2000+0x7c>
     9f4:	mvn	r3, #0
     9f8:	b	aa8 <dmy_to_mjd2000+0x128>
     9fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a00:	ldr	r3, [fp, #-20]	; 0xffffffec
     a04:	cmp	r2, r3
     a08:	bgt	a24 <dmy_to_mjd2000+0xa4>
     a0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a10:	ldr	r3, [pc, #160]	; ab8 <dmy_to_mjd2000+0x138>
     a14:	add	r3, r2, r3
     a18:	ldr	r2, [fp, #-44]	; 0xffffffd4
     a1c:	str	r3, [r2]
     a20:	b	aa4 <dmy_to_mjd2000+0x124>
     a24:	sub	r3, fp, #24
     a28:	ldr	r2, [fp, #-40]	; 0xffffffd8
     a2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     a30:	ldr	r0, [fp, #-32]	; 0xffffffe0
     a34:	bl	640 <dmy_to_mjd2000_gregorian>
     a38:	mov	r3, r0
     a3c:	cmp	r3, #0
     a40:	beq	a4c <dmy_to_mjd2000+0xcc>
     a44:	mvn	r3, #0
     a48:	b	aa8 <dmy_to_mjd2000+0x128>
     a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a50:	ldr	r2, [pc, #100]	; abc <dmy_to_mjd2000+0x13c>
     a54:	add	r2, r3, r2
     a58:	ldr	r1, [fp, #-20]	; 0xffffffec
     a5c:	ldr	r3, [pc, #84]	; ab8 <dmy_to_mjd2000+0x138>
     a60:	add	r3, r1, r3
     a64:	cmp	r2, r3
     a68:	bgt	a90 <dmy_to_mjd2000+0x110>
     a6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a70:	str	r3, [sp]
     a74:	ldr	r3, [fp, #-36]	; 0xffffffdc
     a78:	ldr	r2, [fp, #-32]	; 0xffffffe0
     a7c:	ldr	r1, [pc, #60]	; ac0 <dmy_to_mjd2000+0x140>
     a80:	mvn	r0, #103	; 0x67
     a84:	bl	0 <coda_set_error>
     a88:	mvn	r3, #0
     a8c:	b	aa8 <dmy_to_mjd2000+0x128>
     a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a94:	ldr	r3, [pc, #32]	; abc <dmy_to_mjd2000+0x13c>
     a98:	add	r3, r2, r3
     a9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     aa0:	str	r3, [r2]
     aa4:	mov	r3, #0
     aa8:	mov	r0, r3
     aac:	sub	sp, fp, #4
     ab0:	pop	{fp, pc}
     ab4:	.word	0x000006d8
     ab8:	.word	0xffda97a7
     abc:	.word	0xfffdb26a
     ac0:	.word	0x0000004c

00000ac4 <getday_leapyear>:
     ac4:	push	{fp, lr}
     ac8:	add	fp, sp, #4
     acc:	sub	sp, sp, #72	; 0x48
     ad0:	str	r0, [fp, #-64]	; 0xffffffc0
     ad4:	str	r1, [fp, #-68]	; 0xffffffbc
     ad8:	str	r2, [fp, #-72]	; 0xffffffb8
     adc:	ldr	r3, [pc, #248]	; bdc <getday_leapyear+0x118>
     ae0:	sub	ip, fp, #60	; 0x3c
     ae4:	mov	lr, r3
     ae8:	ldm	lr!, {r0, r1, r2, r3}
     aec:	stmia	ip!, {r0, r1, r2, r3}
     af0:	ldm	lr!, {r0, r1, r2, r3}
     af4:	stmia	ip!, {r0, r1, r2, r3}
     af8:	ldm	lr!, {r0, r1, r2, r3}
     afc:	stmia	ip!, {r0, r1, r2, r3}
     b00:	ldr	r3, [lr]
     b04:	str	r3, [ip]
     b08:	ldr	r3, [fp, #-64]	; 0xffffffc0
     b0c:	cmp	r3, #0
     b10:	bge	b28 <getday_leapyear+0x64>
     b14:	ldr	r3, [pc, #196]	; be0 <getday_leapyear+0x11c>
     b18:	ldr	r2, [pc, #196]	; be4 <getday_leapyear+0x120>
     b1c:	ldr	r1, [pc, #196]	; be8 <getday_leapyear+0x124>
     b20:	ldr	r0, [pc, #196]	; bec <getday_leapyear+0x128>
     b24:	bl	0 <__assert_fail>
     b28:	ldr	r3, [fp, #-64]	; 0xffffffc0
     b2c:	ldr	r2, [pc, #188]	; bf0 <getday_leapyear+0x12c>
     b30:	cmp	r3, r2
     b34:	ble	b4c <getday_leapyear+0x88>
     b38:	ldr	r3, [pc, #160]	; be0 <getday_leapyear+0x11c>
     b3c:	ldr	r2, [pc, #176]	; bf4 <getday_leapyear+0x130>
     b40:	ldr	r1, [pc, #160]	; be8 <getday_leapyear+0x124>
     b44:	ldr	r0, [pc, #172]	; bf8 <getday_leapyear+0x134>
     b48:	bl	0 <__assert_fail>
     b4c:	mov	r3, #1
     b50:	str	r3, [fp, #-8]
     b54:	b	b84 <getday_leapyear+0xc0>
     b58:	ldr	r3, [fp, #-8]
     b5c:	lsl	r3, r3, #2
     b60:	sub	r2, fp, #4
     b64:	add	r3, r2, r3
     b68:	ldr	r2, [r3, #-56]	; 0xffffffc8
     b6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     b70:	cmp	r2, r3
     b74:	bgt	b94 <getday_leapyear+0xd0>
     b78:	ldr	r3, [fp, #-8]
     b7c:	add	r3, r3, #1
     b80:	str	r3, [fp, #-8]
     b84:	ldr	r3, [fp, #-8]
     b88:	cmp	r3, #12
     b8c:	ble	b58 <getday_leapyear+0x94>
     b90:	b	b98 <getday_leapyear+0xd4>
     b94:	nop			; (mov r0, r0)
     b98:	ldr	r3, [fp, #-72]	; 0xffffffb8
     b9c:	ldr	r2, [fp, #-8]
     ba0:	str	r2, [r3]
     ba4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     ba8:	add	r2, r3, #1
     bac:	ldr	r3, [fp, #-8]
     bb0:	sub	r3, r3, #1
     bb4:	lsl	r3, r3, #2
     bb8:	sub	r1, fp, #4
     bbc:	add	r3, r1, r3
     bc0:	ldr	r3, [r3, #-56]	; 0xffffffc8
     bc4:	sub	r2, r2, r3
     bc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     bcc:	str	r2, [r3]
     bd0:	nop			; (mov r0, r0)
     bd4:	sub	sp, fp, #4
     bd8:	pop	{fp, pc}
     bdc:	.word	0x0000010c
     be0:	.word	0x00000988
     be4:	.word	0x00000166
     be8:	.word	0x000000ac
     bec:	.word	0x000000f4
     bf0:	.word	0x0000016d
     bf4:	.word	0x00000167
     bf8:	.word	0x00000100

00000bfc <getday_nonleapyear>:
     bfc:	push	{fp, lr}
     c00:	add	fp, sp, #4
     c04:	sub	sp, sp, #72	; 0x48
     c08:	str	r0, [fp, #-64]	; 0xffffffc0
     c0c:	str	r1, [fp, #-68]	; 0xffffffbc
     c10:	str	r2, [fp, #-72]	; 0xffffffb8
     c14:	ldr	r3, [pc, #244]	; d10 <getday_nonleapyear+0x114>
     c18:	sub	ip, fp, #60	; 0x3c
     c1c:	mov	lr, r3
     c20:	ldm	lr!, {r0, r1, r2, r3}
     c24:	stmia	ip!, {r0, r1, r2, r3}
     c28:	ldm	lr!, {r0, r1, r2, r3}
     c2c:	stmia	ip!, {r0, r1, r2, r3}
     c30:	ldm	lr!, {r0, r1, r2, r3}
     c34:	stmia	ip!, {r0, r1, r2, r3}
     c38:	ldr	r3, [lr]
     c3c:	str	r3, [ip]
     c40:	ldr	r3, [fp, #-64]	; 0xffffffc0
     c44:	cmp	r3, #0
     c48:	bge	c60 <getday_nonleapyear+0x64>
     c4c:	ldr	r3, [pc, #192]	; d14 <getday_nonleapyear+0x118>
     c50:	ldr	r2, [pc, #192]	; d18 <getday_nonleapyear+0x11c>
     c54:	ldr	r1, [pc, #192]	; d1c <getday_nonleapyear+0x120>
     c58:	ldr	r0, [pc, #192]	; d20 <getday_nonleapyear+0x124>
     c5c:	bl	0 <__assert_fail>
     c60:	ldr	r3, [fp, #-64]	; 0xffffffc0
     c64:	cmp	r3, #364	; 0x16c
     c68:	ble	c80 <getday_nonleapyear+0x84>
     c6c:	ldr	r3, [pc, #160]	; d14 <getday_nonleapyear+0x118>
     c70:	ldr	r2, [pc, #172]	; d24 <getday_nonleapyear+0x128>
     c74:	ldr	r1, [pc, #160]	; d1c <getday_nonleapyear+0x120>
     c78:	ldr	r0, [pc, #168]	; d28 <getday_nonleapyear+0x12c>
     c7c:	bl	0 <__assert_fail>
     c80:	mov	r3, #1
     c84:	str	r3, [fp, #-8]
     c88:	b	cb8 <getday_nonleapyear+0xbc>
     c8c:	ldr	r3, [fp, #-8]
     c90:	lsl	r3, r3, #2
     c94:	sub	r2, fp, #4
     c98:	add	r3, r2, r3
     c9c:	ldr	r2, [r3, #-56]	; 0xffffffc8
     ca0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     ca4:	cmp	r2, r3
     ca8:	bgt	cc8 <getday_nonleapyear+0xcc>
     cac:	ldr	r3, [fp, #-8]
     cb0:	add	r3, r3, #1
     cb4:	str	r3, [fp, #-8]
     cb8:	ldr	r3, [fp, #-8]
     cbc:	cmp	r3, #12
     cc0:	ble	c8c <getday_nonleapyear+0x90>
     cc4:	b	ccc <getday_nonleapyear+0xd0>
     cc8:	nop			; (mov r0, r0)
     ccc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     cd0:	ldr	r2, [fp, #-8]
     cd4:	str	r2, [r3]
     cd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     cdc:	add	r2, r3, #1
     ce0:	ldr	r3, [fp, #-8]
     ce4:	sub	r3, r3, #1
     ce8:	lsl	r3, r3, #2
     cec:	sub	r1, fp, #4
     cf0:	add	r3, r1, r3
     cf4:	ldr	r3, [r3, #-56]	; 0xffffffc8
     cf8:	sub	r2, r2, r3
     cfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     d00:	str	r2, [r3]
     d04:	nop			; (mov r0, r0)
     d08:	sub	sp, fp, #4
     d0c:	pop	{fp, pc}
     d10:	.word	0x00000078
     d14:	.word	0x00000998
     d18:	.word	0x00000179
     d1c:	.word	0x000000ac
     d20:	.word	0x000000f4
     d24:	.word	0x0000017a
     d28:	.word	0x00000140

00000d2c <mjd2000_to_dmy_julian>:
     d2c:	push	{fp, lr}
     d30:	add	fp, sp, #4
     d34:	sub	sp, sp, #24
     d38:	str	r0, [fp, #-16]
     d3c:	str	r1, [fp, #-20]	; 0xffffffec
     d40:	str	r2, [fp, #-24]	; 0xffffffe8
     d44:	str	r3, [fp, #-28]	; 0xffffffe4
     d48:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d4c:	mov	r2, #2000	; 0x7d0
     d50:	str	r2, [r3]
     d54:	ldr	r3, [fp, #-16]
     d58:	sub	r3, r3, #13
     d5c:	str	r3, [fp, #-8]
     d60:	ldr	r1, [pc, #236]	; e54 <mjd2000_to_dmy_julian+0x128>
     d64:	ldr	r0, [fp, #-8]
     d68:	bl	3b0 <int_div>
     d6c:	mov	r3, r0
     d70:	lsl	r3, r3, #2
     d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d78:	ldr	r2, [r2]
     d7c:	add	r2, r2, r3
     d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d84:	str	r2, [r3]
     d88:	ldr	r1, [pc, #196]	; e54 <mjd2000_to_dmy_julian+0x128>
     d8c:	ldr	r0, [fp, #-8]
     d90:	bl	404 <int_mod>
     d94:	str	r0, [fp, #-8]
     d98:	ldr	r3, [fp, #-8]
     d9c:	ldr	r2, [pc, #180]	; e58 <mjd2000_to_dmy_julian+0x12c>
     da0:	cmp	r3, r2
     da4:	bgt	dbc <mjd2000_to_dmy_julian+0x90>
     da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     dac:	ldr	r1, [fp, #-20]	; 0xffffffec
     db0:	ldr	r0, [fp, #-8]
     db4:	bl	ac4 <getday_leapyear>
     db8:	b	e24 <mjd2000_to_dmy_julian+0xf8>
     dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dc0:	ldr	r3, [r3]
     dc4:	add	r2, r3, #1
     dc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dcc:	str	r2, [r3]
     dd0:	ldr	r3, [fp, #-8]
     dd4:	sub	r3, r3, #364	; 0x16c
     dd8:	sub	r3, r3, #2
     ddc:	str	r3, [fp, #-8]
     de0:	ldr	r1, [pc, #112]	; e58 <mjd2000_to_dmy_julian+0x12c>
     de4:	ldr	r0, [fp, #-8]
     de8:	bl	3b0 <int_div>
     dec:	mov	r2, r0
     df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     df4:	ldr	r3, [r3]
     df8:	add	r2, r3, r2
     dfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e00:	str	r2, [r3]
     e04:	ldr	r1, [pc, #76]	; e58 <mjd2000_to_dmy_julian+0x12c>
     e08:	ldr	r0, [fp, #-8]
     e0c:	bl	404 <int_mod>
     e10:	str	r0, [fp, #-8]
     e14:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e18:	ldr	r1, [fp, #-20]	; 0xffffffec
     e1c:	ldr	r0, [fp, #-8]
     e20:	bl	bfc <getday_nonleapyear>
     e24:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e28:	ldr	r3, [r3]
     e2c:	cmp	r3, #0
     e30:	bgt	e48 <mjd2000_to_dmy_julian+0x11c>
     e34:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e38:	ldr	r3, [r3]
     e3c:	sub	r2, r3, #1
     e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e44:	str	r2, [r3]
     e48:	nop			; (mov r0, r0)
     e4c:	sub	sp, fp, #4
     e50:	pop	{fp, pc}
     e54:	.word	0x000005b5
     e58:	.word	0x0000016d

00000e5c <mjd2000_to_dmy_gregorian>:
     e5c:	push	{fp, lr}
     e60:	add	fp, sp, #4
     e64:	sub	sp, sp, #24
     e68:	str	r0, [fp, #-16]
     e6c:	str	r1, [fp, #-20]	; 0xffffffec
     e70:	str	r2, [fp, #-24]	; 0xffffffe8
     e74:	str	r3, [fp, #-28]	; 0xffffffe4
     e78:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e7c:	mov	r2, #2000	; 0x7d0
     e80:	str	r2, [r3]
     e84:	ldr	r3, [fp, #-16]
     e88:	str	r3, [fp, #-8]
     e8c:	ldr	r1, [pc, #732]	; 1170 <mjd2000_to_dmy_gregorian+0x314>
     e90:	ldr	r0, [fp, #-8]
     e94:	bl	3b0 <int_div>
     e98:	mov	r2, r0
     e9c:	mov	r3, #400	; 0x190
     ea0:	mul	r3, r3, r2
     ea4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     ea8:	ldr	r2, [r2]
     eac:	add	r2, r2, r3
     eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     eb4:	str	r2, [r3]
     eb8:	ldr	r1, [pc, #688]	; 1170 <mjd2000_to_dmy_gregorian+0x314>
     ebc:	ldr	r0, [fp, #-8]
     ec0:	bl	404 <int_mod>
     ec4:	str	r0, [fp, #-8]
     ec8:	ldr	r3, [fp, #-8]
     ecc:	ldr	r2, [pc, #672]	; 1174 <mjd2000_to_dmy_gregorian+0x318>
     ed0:	cmp	r3, r2
     ed4:	bgt	fa0 <mjd2000_to_dmy_gregorian+0x144>
     ed8:	ldr	r1, [pc, #664]	; 1178 <mjd2000_to_dmy_gregorian+0x31c>
     edc:	ldr	r0, [fp, #-8]
     ee0:	bl	3b0 <int_div>
     ee4:	mov	r3, r0
     ee8:	lsl	r3, r3, #2
     eec:	ldr	r2, [fp, #-28]	; 0xffffffe4
     ef0:	ldr	r2, [r2]
     ef4:	add	r2, r2, r3
     ef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     efc:	str	r2, [r3]
     f00:	ldr	r1, [pc, #624]	; 1178 <mjd2000_to_dmy_gregorian+0x31c>
     f04:	ldr	r0, [fp, #-8]
     f08:	bl	404 <int_mod>
     f0c:	str	r0, [fp, #-8]
     f10:	ldr	r3, [fp, #-8]
     f14:	ldr	r2, [pc, #608]	; 117c <mjd2000_to_dmy_gregorian+0x320>
     f18:	cmp	r3, r2
     f1c:	bgt	f34 <mjd2000_to_dmy_gregorian+0xd8>
     f20:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f24:	ldr	r1, [fp, #-20]	; 0xffffffec
     f28:	ldr	r0, [fp, #-8]
     f2c:	bl	ac4 <getday_leapyear>
     f30:	b	1140 <mjd2000_to_dmy_gregorian+0x2e4>
     f34:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f38:	ldr	r3, [r3]
     f3c:	add	r2, r3, #1
     f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f44:	str	r2, [r3]
     f48:	ldr	r3, [fp, #-8]
     f4c:	sub	r3, r3, #364	; 0x16c
     f50:	sub	r3, r3, #2
     f54:	str	r3, [fp, #-8]
     f58:	ldr	r1, [pc, #540]	; 117c <mjd2000_to_dmy_gregorian+0x320>
     f5c:	ldr	r0, [fp, #-8]
     f60:	bl	3b0 <int_div>
     f64:	mov	r2, r0
     f68:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f6c:	ldr	r3, [r3]
     f70:	add	r2, r3, r2
     f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f78:	str	r2, [r3]
     f7c:	ldr	r1, [pc, #504]	; 117c <mjd2000_to_dmy_gregorian+0x320>
     f80:	ldr	r0, [fp, #-8]
     f84:	bl	404 <int_mod>
     f88:	str	r0, [fp, #-8]
     f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f90:	ldr	r1, [fp, #-20]	; 0xffffffec
     f94:	ldr	r0, [fp, #-8]
     f98:	bl	bfc <getday_nonleapyear>
     f9c:	b	1140 <mjd2000_to_dmy_gregorian+0x2e4>
     fa0:	ldr	r3, [fp, #-8]
     fa4:	sub	r3, r3, #36352	; 0x8e00
     fa8:	sub	r3, r3, #173	; 0xad
     fac:	str	r3, [fp, #-8]
     fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb4:	ldr	r3, [r3]
     fb8:	add	r2, r3, #100	; 0x64
     fbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fc0:	str	r2, [r3]
     fc4:	ldr	r1, [pc, #424]	; 1174 <mjd2000_to_dmy_gregorian+0x318>
     fc8:	ldr	r0, [fp, #-8]
     fcc:	bl	3b0 <int_div>
     fd0:	mov	r2, r0
     fd4:	mov	r3, #100	; 0x64
     fd8:	mul	r3, r3, r2
     fdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     fe0:	ldr	r2, [r2]
     fe4:	add	r2, r2, r3
     fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fec:	str	r2, [r3]
     ff0:	ldr	r1, [pc, #380]	; 1174 <mjd2000_to_dmy_gregorian+0x318>
     ff4:	ldr	r0, [fp, #-8]
     ff8:	bl	404 <int_mod>
     ffc:	str	r0, [fp, #-8]
    1000:	ldr	r3, [fp, #-8]
    1004:	ldr	r2, [pc, #372]	; 1180 <mjd2000_to_dmy_gregorian+0x324>
    1008:	cmp	r3, r2
    100c:	bgt	1058 <mjd2000_to_dmy_gregorian+0x1fc>
    1010:	ldr	r1, [pc, #356]	; 117c <mjd2000_to_dmy_gregorian+0x320>
    1014:	ldr	r0, [fp, #-8]
    1018:	bl	3b0 <int_div>
    101c:	mov	r2, r0
    1020:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1024:	ldr	r3, [r3]
    1028:	add	r2, r3, r2
    102c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1030:	str	r2, [r3]
    1034:	ldr	r1, [pc, #320]	; 117c <mjd2000_to_dmy_gregorian+0x320>
    1038:	ldr	r0, [fp, #-8]
    103c:	bl	404 <int_mod>
    1040:	str	r0, [fp, #-8]
    1044:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1048:	ldr	r1, [fp, #-20]	; 0xffffffec
    104c:	ldr	r0, [fp, #-8]
    1050:	bl	bfc <getday_nonleapyear>
    1054:	b	1140 <mjd2000_to_dmy_gregorian+0x2e4>
    1058:	ldr	r3, [fp, #-8]
    105c:	sub	r3, r3, #1456	; 0x5b0
    1060:	sub	r3, r3, #4
    1064:	str	r3, [fp, #-8]
    1068:	ldr	r3, [fp, #-28]	; 0xffffffe4
    106c:	ldr	r3, [r3]
    1070:	add	r2, r3, #4
    1074:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1078:	str	r2, [r3]
    107c:	ldr	r1, [pc, #244]	; 1178 <mjd2000_to_dmy_gregorian+0x31c>
    1080:	ldr	r0, [fp, #-8]
    1084:	bl	3b0 <int_div>
    1088:	mov	r3, r0
    108c:	lsl	r3, r3, #2
    1090:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1094:	ldr	r2, [r2]
    1098:	add	r2, r2, r3
    109c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10a0:	str	r2, [r3]
    10a4:	ldr	r1, [pc, #204]	; 1178 <mjd2000_to_dmy_gregorian+0x31c>
    10a8:	ldr	r0, [fp, #-8]
    10ac:	bl	404 <int_mod>
    10b0:	str	r0, [fp, #-8]
    10b4:	ldr	r3, [fp, #-8]
    10b8:	ldr	r2, [pc, #188]	; 117c <mjd2000_to_dmy_gregorian+0x320>
    10bc:	cmp	r3, r2
    10c0:	bgt	10d8 <mjd2000_to_dmy_gregorian+0x27c>
    10c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    10cc:	ldr	r0, [fp, #-8]
    10d0:	bl	ac4 <getday_leapyear>
    10d4:	b	1140 <mjd2000_to_dmy_gregorian+0x2e4>
    10d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10dc:	ldr	r3, [r3]
    10e0:	add	r2, r3, #1
    10e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10e8:	str	r2, [r3]
    10ec:	ldr	r3, [fp, #-8]
    10f0:	sub	r3, r3, #364	; 0x16c
    10f4:	sub	r3, r3, #2
    10f8:	str	r3, [fp, #-8]
    10fc:	ldr	r1, [pc, #120]	; 117c <mjd2000_to_dmy_gregorian+0x320>
    1100:	ldr	r0, [fp, #-8]
    1104:	bl	3b0 <int_div>
    1108:	mov	r2, r0
    110c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1110:	ldr	r3, [r3]
    1114:	add	r2, r3, r2
    1118:	ldr	r3, [fp, #-28]	; 0xffffffe4
    111c:	str	r2, [r3]
    1120:	ldr	r1, [pc, #84]	; 117c <mjd2000_to_dmy_gregorian+0x320>
    1124:	ldr	r0, [fp, #-8]
    1128:	bl	404 <int_mod>
    112c:	str	r0, [fp, #-8]
    1130:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1134:	ldr	r1, [fp, #-20]	; 0xffffffec
    1138:	ldr	r0, [fp, #-8]
    113c:	bl	bfc <getday_nonleapyear>
    1140:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1144:	ldr	r3, [r3]
    1148:	cmp	r3, #0
    114c:	bgt	1164 <mjd2000_to_dmy_gregorian+0x308>
    1150:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1154:	ldr	r3, [r3]
    1158:	sub	r2, r3, #1
    115c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1160:	str	r2, [r3]
    1164:	nop			; (mov r0, r0)
    1168:	sub	sp, fp, #4
    116c:	pop	{fp, pc}
    1170:	.word	0x00023ab1
    1174:	.word	0x00008eac
    1178:	.word	0x000005b5
    117c:	.word	0x0000016d
    1180:	.word	0x000005b3

00001184 <mjd2000_to_dmy>:
    1184:	push	{fp, lr}
    1188:	add	fp, sp, #4
    118c:	sub	sp, sp, #32
    1190:	str	r0, [fp, #-24]	; 0xffffffe8
    1194:	str	r1, [fp, #-28]	; 0xffffffe4
    1198:	str	r2, [fp, #-32]	; 0xffffffe0
    119c:	str	r3, [fp, #-36]	; 0xffffffdc
    11a0:	mov	r3, #2
    11a4:	str	r3, [fp, #-8]
    11a8:	mov	r3, #9
    11ac:	str	r3, [fp, #-12]
    11b0:	ldr	r3, [pc, #116]	; 122c <mjd2000_to_dmy+0xa8>
    11b4:	str	r3, [fp, #-16]
    11b8:	sub	r3, fp, #20
    11bc:	ldr	r2, [fp, #-16]
    11c0:	ldr	r1, [fp, #-12]
    11c4:	ldr	r0, [fp, #-8]
    11c8:	bl	980 <dmy_to_mjd2000>
    11cc:	mov	r3, r0
    11d0:	cmp	r3, #0
    11d4:	beq	11e0 <mjd2000_to_dmy+0x5c>
    11d8:	mvn	r3, #0
    11dc:	b	1220 <mjd2000_to_dmy+0x9c>
    11e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    11e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    11e8:	cmp	r2, r3
    11ec:	bgt	1208 <mjd2000_to_dmy+0x84>
    11f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    11f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    11fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1200:	bl	d2c <mjd2000_to_dmy_julian>
    1204:	b	121c <mjd2000_to_dmy+0x98>
    1208:	ldr	r3, [fp, #-36]	; 0xffffffdc
    120c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1210:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1214:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1218:	bl	e5c <mjd2000_to_dmy_gregorian>
    121c:	mov	r3, #0
    1220:	mov	r0, r3
    1224:	sub	sp, fp, #4
    1228:	pop	{fp, pc}
    122c:	.word	0x000006d8

00001230 <hms_to_daytime>:
    1230:	push	{fp, lr}
    1234:	add	fp, sp, #4
    1238:	sub	sp, sp, #24
    123c:	str	r0, [fp, #-8]
    1240:	str	r1, [fp, #-12]
    1244:	str	r2, [fp, #-16]
    1248:	str	r3, [fp, #-20]	; 0xffffffec
    124c:	ldr	r3, [fp, #-8]
    1250:	cmp	r3, #0
    1254:	blt	12b0 <hms_to_daytime+0x80>
    1258:	ldr	r3, [fp, #-8]
    125c:	cmp	r3, #23
    1260:	bgt	12b0 <hms_to_daytime+0x80>
    1264:	ldr	r3, [fp, #-12]
    1268:	cmp	r3, #0
    126c:	blt	12b0 <hms_to_daytime+0x80>
    1270:	ldr	r3, [fp, #-12]
    1274:	cmp	r3, #59	; 0x3b
    1278:	bgt	12b0 <hms_to_daytime+0x80>
    127c:	ldr	r3, [fp, #-16]
    1280:	cmp	r3, #0
    1284:	blt	12b0 <hms_to_daytime+0x80>
    1288:	ldr	r3, [fp, #-16]
    128c:	cmp	r3, #60	; 0x3c
    1290:	bgt	12b0 <hms_to_daytime+0x80>
    1294:	ldr	r3, [fp, #-20]	; 0xffffffec
    1298:	cmp	r3, #0
    129c:	blt	12b0 <hms_to_daytime+0x80>
    12a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    12a4:	ldr	r2, [pc, #180]	; 1360 <hms_to_daytime+0x130>
    12a8:	cmp	r3, r2
    12ac:	ble	12dc <hms_to_daytime+0xac>
    12b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    12b4:	str	r3, [sp, #4]
    12b8:	ldr	r3, [fp, #-16]
    12bc:	str	r3, [sp]
    12c0:	ldr	r3, [fp, #-12]
    12c4:	ldr	r2, [fp, #-8]
    12c8:	ldr	r1, [pc, #148]	; 1364 <hms_to_daytime+0x134>
    12cc:	mvn	r0, #103	; 0x67
    12d0:	bl	0 <coda_set_error>
    12d4:	mvn	r3, #0
    12d8:	b	133c <hms_to_daytime+0x10c>
    12dc:	ldr	r3, [fp, #-8]
    12e0:	vmov	s15, r3
    12e4:	vcvt.f64.s32	d7, s15
    12e8:	vldr	d6, [pc, #88]	; 1348 <hms_to_daytime+0x118>
    12ec:	vmul.f64	d6, d7, d6
    12f0:	ldr	r3, [fp, #-12]
    12f4:	vmov	s15, r3
    12f8:	vcvt.f64.s32	d7, s15
    12fc:	vldr	d5, [pc, #76]	; 1350 <hms_to_daytime+0x120>
    1300:	vmul.f64	d7, d7, d5
    1304:	vadd.f64	d6, d6, d7
    1308:	ldr	r3, [fp, #-16]
    130c:	vmov	s15, r3
    1310:	vcvt.f64.s32	d7, s15
    1314:	vadd.f64	d6, d6, d7
    1318:	ldr	r3, [fp, #-20]	; 0xffffffec
    131c:	vmov	s15, r3
    1320:	vcvt.f64.s32	d5, s15
    1324:	vldr	d4, [pc, #44]	; 1358 <hms_to_daytime+0x128>
    1328:	vdiv.f64	d7, d5, d4
    132c:	vadd.f64	d7, d6, d7
    1330:	ldr	r3, [fp, #4]
    1334:	vstr	d7, [r3]
    1338:	mov	r3, #0
    133c:	mov	r0, r3
    1340:	sub	sp, fp, #4
    1344:	pop	{fp, pc}
    1348:	.word	0x00000000
    134c:	.word	0x40ac2000
    1350:	.word	0x00000000
    1354:	.word	0x404e0000
    1358:	.word	0x00000000
    135c:	.word	0x412e8480
    1360:	.word	0x000f423f
    1364:	.word	0x0000014c

00001368 <coda_dayofyear_to_month_day>:
    1368:	push	{fp, lr}
    136c:	add	fp, sp, #4
    1370:	sub	sp, sp, #24
    1374:	str	r0, [fp, #-16]
    1378:	str	r1, [fp, #-20]	; 0xffffffec
    137c:	str	r2, [fp, #-24]	; 0xffffffe8
    1380:	str	r3, [fp, #-28]	; 0xffffffe4
    1384:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1388:	cmp	r3, #0
    138c:	beq	139c <coda_dayofyear_to_month_day+0x34>
    1390:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1394:	cmp	r3, #0
    1398:	bne	13b8 <coda_dayofyear_to_month_day+0x50>
    139c:	ldr	r3, [pc, #188]	; 1460 <coda_dayofyear_to_month_day+0xf8>
    13a0:	ldr	r2, [pc, #188]	; 1464 <coda_dayofyear_to_month_day+0xfc>
    13a4:	ldr	r1, [pc, #188]	; 1468 <coda_dayofyear_to_month_day+0x100>
    13a8:	mvn	r0, #99	; 0x63
    13ac:	bl	0 <coda_set_error>
    13b0:	mvn	r3, #0
    13b4:	b	1454 <coda_dayofyear_to_month_day+0xec>
    13b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    13bc:	cmp	r3, #0
    13c0:	blt	13d4 <coda_dayofyear_to_month_day+0x6c>
    13c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    13c8:	ldr	r2, [pc, #156]	; 146c <coda_dayofyear_to_month_day+0x104>
    13cc:	cmp	r3, r2
    13d0:	ble	13ec <coda_dayofyear_to_month_day+0x84>
    13d4:	ldr	r2, [fp, #-20]	; 0xffffffec
    13d8:	ldr	r1, [pc, #144]	; 1470 <coda_dayofyear_to_month_day+0x108>
    13dc:	mvn	r0, #103	; 0x67
    13e0:	bl	0 <coda_set_error>
    13e4:	mvn	r3, #0
    13e8:	b	1454 <coda_dayofyear_to_month_day+0xec>
    13ec:	ldr	r2, [fp, #-16]
    13f0:	sub	r3, fp, #8
    13f4:	mov	r1, #1
    13f8:	mov	r0, #1
    13fc:	bl	980 <dmy_to_mjd2000>
    1400:	mov	r3, r0
    1404:	cmp	r3, #0
    1408:	beq	1414 <coda_dayofyear_to_month_day+0xac>
    140c:	mvn	r3, #0
    1410:	b	1454 <coda_dayofyear_to_month_day+0xec>
    1414:	ldr	r3, [fp, #-20]	; 0xffffffec
    1418:	sub	r2, r3, #1
    141c:	ldr	r3, [fp, #-8]
    1420:	add	r3, r2, r3
    1424:	str	r3, [fp, #-8]
    1428:	ldr	r0, [fp, #-8]
    142c:	sub	r3, fp, #16
    1430:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1434:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1438:	bl	1184 <mjd2000_to_dmy>
    143c:	mov	r3, r0
    1440:	cmp	r3, #0
    1444:	beq	1450 <coda_dayofyear_to_month_day+0xe8>
    1448:	mvn	r3, #0
    144c:	b	1454 <coda_dayofyear_to_month_day+0xec>
    1450:	mov	r3, #0
    1454:	mov	r0, r3
    1458:	sub	sp, fp, #4
    145c:	pop	{fp, pc}
    1460:	.word	0x00000225
    1464:	.word	0x000000ac
    1468:	.word	0x00000184
    146c:	.word	0x0000016e
    1470:	.word	0x000001ac

00001474 <seconds_to_hms>:
    1474:	push	{fp, lr}
    1478:	add	fp, sp, #4
    147c:	sub	sp, sp, #24
    1480:	str	r0, [fp, #-16]
    1484:	str	r1, [fp, #-20]	; 0xffffffec
    1488:	str	r2, [fp, #-24]	; 0xffffffe8
    148c:	str	r3, [fp, #-28]	; 0xffffffe4
    1490:	ldr	r3, [fp, #-16]
    1494:	str	r3, [fp, #-8]
    1498:	ldr	r3, [fp, #-8]
    149c:	cmp	r3, #0
    14a0:	blt	14b4 <seconds_to_hms+0x40>
    14a4:	ldr	r3, [fp, #-8]
    14a8:	ldr	r2, [pc, #224]	; 1590 <seconds_to_hms+0x11c>
    14ac:	cmp	r3, r2
    14b0:	ble	14cc <seconds_to_hms+0x58>
    14b4:	ldr	r2, [fp, #-8]
    14b8:	ldr	r1, [pc, #212]	; 1594 <seconds_to_hms+0x120>
    14bc:	mvn	r0, #103	; 0x67
    14c0:	bl	0 <coda_set_error>
    14c4:	mvn	r3, #0
    14c8:	b	1584 <seconds_to_hms+0x110>
    14cc:	ldr	r3, [fp, #-8]
    14d0:	ldr	r2, [pc, #192]	; 1598 <seconds_to_hms+0x124>
    14d4:	smull	r1, r2, r2, r3
    14d8:	add	r2, r2, r3
    14dc:	asr	r2, r2, #11
    14e0:	asr	r3, r3, #31
    14e4:	sub	r2, r2, r3
    14e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    14ec:	str	r2, [r3]
    14f0:	ldr	r3, [fp, #-8]
    14f4:	ldr	r2, [pc, #156]	; 1598 <seconds_to_hms+0x124>
    14f8:	smull	r1, r2, r2, r3
    14fc:	add	r2, r2, r3
    1500:	asr	r1, r2, #11
    1504:	asr	r2, r3, #31
    1508:	sub	r2, r1, r2
    150c:	mov	r1, #3600	; 0xe10
    1510:	mul	r2, r1, r2
    1514:	sub	r3, r3, r2
    1518:	str	r3, [fp, #-8]
    151c:	ldr	r3, [fp, #-8]
    1520:	ldr	r2, [pc, #116]	; 159c <seconds_to_hms+0x128>
    1524:	smull	r1, r2, r2, r3
    1528:	add	r2, r2, r3
    152c:	asr	r2, r2, #5
    1530:	asr	r3, r3, #31
    1534:	sub	r2, r2, r3
    1538:	ldr	r3, [fp, #-24]	; 0xffffffe8
    153c:	str	r2, [r3]
    1540:	ldr	r2, [fp, #-8]
    1544:	ldr	r3, [pc, #80]	; 159c <seconds_to_hms+0x128>
    1548:	smull	r1, r3, r3, r2
    154c:	add	r3, r3, r2
    1550:	asr	r1, r3, #5
    1554:	asr	r3, r2, #31
    1558:	sub	r1, r1, r3
    155c:	mov	r3, r1
    1560:	lsl	r3, r3, #4
    1564:	sub	r3, r3, r1
    1568:	lsl	r3, r3, #2
    156c:	sub	r3, r2, r3
    1570:	str	r3, [fp, #-8]
    1574:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1578:	ldr	r2, [fp, #-8]
    157c:	str	r2, [r3]
    1580:	mov	r3, #0
    1584:	mov	r0, r3
    1588:	sub	sp, fp, #4
    158c:	pop	{fp, pc}
    1590:	.word	0x0001517f
    1594:	.word	0x000001d0
    1598:	.word	0x91a2b3c5
    159c:	.word	0x88888889

000015a0 <register_leap_second>:
    15a0:	push	{fp, lr}
    15a4:	add	fp, sp, #4
    15a8:	sub	sp, sp, #32
    15ac:	vstr	d0, [fp, #-28]	; 0xffffffe4
    15b0:	bl	0 <__aeabi_read_tp>
    15b4:	mov	r2, r0
    15b8:	ldr	r3, [pc, #580]	; 1804 <register_leap_second+0x264>
    15bc:	ldr	r3, [r2, r3]
    15c0:	and	r3, r3, #15
    15c4:	cmp	r3, #0
    15c8:	bne	165c <register_leap_second+0xbc>
    15cc:	bl	0 <__aeabi_read_tp>
    15d0:	mov	r2, r0
    15d4:	ldr	r3, [pc, #556]	; 1808 <register_leap_second+0x268>
    15d8:	ldr	r2, [r2, r3]
    15dc:	bl	0 <__aeabi_read_tp>
    15e0:	mov	r1, r0
    15e4:	ldr	r3, [pc, #536]	; 1804 <register_leap_second+0x264>
    15e8:	ldr	r3, [r1, r3]
    15ec:	add	r3, r3, #16
    15f0:	lsl	r3, r3, #3
    15f4:	mov	r1, r3
    15f8:	mov	r0, r2
    15fc:	bl	0 <realloc>
    1600:	str	r0, [fp, #-12]
    1604:	ldr	r3, [fp, #-12]
    1608:	cmp	r3, #0
    160c:	bne	1648 <register_leap_second+0xa8>
    1610:	bl	0 <__aeabi_read_tp>
    1614:	mov	r2, r0
    1618:	ldr	r3, [pc, #484]	; 1804 <register_leap_second+0x264>
    161c:	ldr	r3, [r2, r3]
    1620:	add	r3, r3, #16
    1624:	lsl	r2, r3, #3
    1628:	ldr	r3, [pc, #476]	; 180c <register_leap_second+0x26c>
    162c:	str	r3, [sp]
    1630:	ldr	r3, [pc, #472]	; 1810 <register_leap_second+0x270>
    1634:	ldr	r1, [pc, #472]	; 1814 <register_leap_second+0x274>
    1638:	mvn	r0, #0
    163c:	bl	0 <coda_set_error>
    1640:	mvn	r3, #0
    1644:	b	17f8 <register_leap_second+0x258>
    1648:	bl	0 <__aeabi_read_tp>
    164c:	mov	r1, r0
    1650:	ldr	r2, [pc, #432]	; 1808 <register_leap_second+0x268>
    1654:	ldr	r3, [fp, #-12]
    1658:	str	r3, [r1, r2]
    165c:	bl	0 <__aeabi_read_tp>
    1660:	mov	r2, r0
    1664:	ldr	r3, [pc, #408]	; 1804 <register_leap_second+0x264>
    1668:	ldr	r3, [r2, r3]
    166c:	cmp	r3, #0
    1670:	ble	17a0 <register_leap_second+0x200>
    1674:	bl	0 <__aeabi_read_tp>
    1678:	mov	r2, r0
    167c:	ldr	r3, [pc, #388]	; 1808 <register_leap_second+0x268>
    1680:	ldr	r2, [r2, r3]
    1684:	bl	0 <__aeabi_read_tp>
    1688:	mov	r1, r0
    168c:	ldr	r3, [pc, #368]	; 1804 <register_leap_second+0x264>
    1690:	ldr	r3, [r1, r3]
    1694:	sub	r3, r3, #-536870911	; 0xe0000001
    1698:	lsl	r3, r3, #3
    169c:	add	r3, r2, r3
    16a0:	vldr	d6, [r3]
    16a4:	vldr	d7, [fp, #-28]	; 0xffffffe4
    16a8:	vcmpe.f64	d6, d7
    16ac:	vmrs	APSR_nzcv, fpscr
    16b0:	blt	17a0 <register_leap_second+0x200>
    16b4:	mov	r3, #0
    16b8:	str	r3, [fp, #-8]
    16bc:	b	1784 <register_leap_second+0x1e4>
    16c0:	bl	0 <__aeabi_read_tp>
    16c4:	mov	r2, r0
    16c8:	ldr	r3, [pc, #312]	; 1808 <register_leap_second+0x268>
    16cc:	ldr	r2, [r2, r3]
    16d0:	ldr	r3, [fp, #-8]
    16d4:	lsl	r3, r3, #3
    16d8:	add	r3, r2, r3
    16dc:	vldr	d6, [r3]
    16e0:	vldr	d7, [fp, #-28]	; 0xffffffe4
    16e4:	vcmpe.f64	d6, d7
    16e8:	vmrs	APSR_nzcv, fpscr
    16ec:	blt	1778 <register_leap_second+0x1d8>
    16f0:	bl	0 <__aeabi_read_tp>
    16f4:	mov	r2, r0
    16f8:	ldr	r3, [pc, #264]	; 1808 <register_leap_second+0x268>
    16fc:	ldr	r2, [r2, r3]
    1700:	ldr	r3, [fp, #-8]
    1704:	lsl	r3, r3, #3
    1708:	add	r3, r2, r3
    170c:	vldr	d6, [r3]
    1710:	vldr	d7, [fp, #-28]	; 0xffffffe4
    1714:	vcmp.f64	d6, d7
    1718:	vmrs	APSR_nzcv, fpscr
    171c:	bne	1728 <register_leap_second+0x188>
    1720:	mov	r3, #0
    1724:	b	17f8 <register_leap_second+0x258>
    1728:	bl	0 <__aeabi_read_tp>
    172c:	mov	r2, r0
    1730:	ldr	r3, [pc, #208]	; 1808 <register_leap_second+0x268>
    1734:	ldr	r2, [r2, r3]
    1738:	ldr	r3, [fp, #-8]
    173c:	lsl	r3, r3, #3
    1740:	add	r3, r2, r3
    1744:	ldrd	r2, [r3]
    1748:	strd	r2, [fp, #-20]	; 0xffffffec
    174c:	bl	0 <__aeabi_read_tp>
    1750:	mov	r2, r0
    1754:	ldr	r3, [pc, #172]	; 1808 <register_leap_second+0x268>
    1758:	ldr	r2, [r2, r3]
    175c:	ldr	r3, [fp, #-8]
    1760:	lsl	r3, r3, #3
    1764:	add	r1, r2, r3
    1768:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    176c:	strd	r2, [r1]
    1770:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1774:	strd	r2, [fp, #-28]	; 0xffffffe4
    1778:	ldr	r3, [fp, #-8]
    177c:	add	r3, r3, #1
    1780:	str	r3, [fp, #-8]
    1784:	bl	0 <__aeabi_read_tp>
    1788:	mov	r2, r0
    178c:	ldr	r3, [pc, #112]	; 1804 <register_leap_second+0x264>
    1790:	ldr	r3, [r2, r3]
    1794:	ldr	r2, [fp, #-8]
    1798:	cmp	r2, r3
    179c:	blt	16c0 <register_leap_second+0x120>
    17a0:	bl	0 <__aeabi_read_tp>
    17a4:	mov	r2, r0
    17a8:	ldr	r3, [pc, #88]	; 1808 <register_leap_second+0x268>
    17ac:	ldr	r2, [r2, r3]
    17b0:	bl	0 <__aeabi_read_tp>
    17b4:	mov	r1, r0
    17b8:	ldr	r3, [pc, #68]	; 1804 <register_leap_second+0x264>
    17bc:	ldr	r3, [r1, r3]
    17c0:	lsl	r3, r3, #3
    17c4:	add	r1, r2, r3
    17c8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    17cc:	strd	r2, [r1]
    17d0:	bl	0 <__aeabi_read_tp>
    17d4:	mov	r2, r0
    17d8:	ldr	r3, [pc, #36]	; 1804 <register_leap_second+0x264>
    17dc:	ldr	r3, [r2, r3]
    17e0:	add	r3, r3, #1
    17e4:	bl	0 <__aeabi_read_tp>
    17e8:	mov	r1, r0
    17ec:	ldr	r2, [pc, #16]	; 1804 <register_leap_second+0x264>
    17f0:	str	r3, [r1, r2]
    17f4:	mov	r3, #0
    17f8:	mov	r0, r3
    17fc:	sub	sp, fp, #4
    1800:	pop	{fp, pc}
	...
    180c:	.word	0x00000261
    1810:	.word	0x000000ac
    1814:	.word	0x00000208

00001818 <read_leap_second_table>:
    1818:	push	{fp, lr}
    181c:	add	fp, sp, #4
    1820:	sub	sp, sp, #200	; 0xc8
    1824:	str	r0, [fp, #-168]	; 0xffffff58
    1828:	mov	r3, #0
    182c:	str	r3, [fp, #-8]
    1830:	ldr	r1, [pc, #488]	; 1a20 <read_leap_second_table+0x208>
    1834:	ldr	r0, [fp, #-168]	; 0xffffff58
    1838:	bl	0 <fopen>
    183c:	str	r0, [fp, #-12]
    1840:	ldr	r3, [fp, #-12]
    1844:	cmp	r3, #0
    1848:	bne	1864 <read_leap_second_table+0x4c>
    184c:	ldr	r2, [fp, #-168]	; 0xffffff58
    1850:	ldr	r1, [pc, #460]	; 1a24 <read_leap_second_table+0x20c>
    1854:	mvn	r0, #20
    1858:	bl	0 <coda_set_error>
    185c:	mvn	r3, #0
    1860:	b	19fc <read_leap_second_table+0x1e4>
    1864:	mov	r3, #0
    1868:	str	r3, [fp, #-120]	; 0xffffff88
    186c:	sub	r3, fp, #120	; 0x78
    1870:	sub	r2, fp, #116	; 0x74
    1874:	ldr	r1, [pc, #428]	; 1a28 <read_leap_second_table+0x210>
    1878:	ldr	r0, [fp, #-12]
    187c:	bl	0 <__isoc99_fscanf>
    1880:	str	r0, [fp, #-16]
    1884:	ldr	r3, [fp, #-120]	; 0xffffff88
    1888:	cmp	r3, #0
    188c:	bgt	18a0 <read_leap_second_table+0x88>
    1890:	ldr	r0, [fp, #-12]
    1894:	bl	0 <fclose>
    1898:	mov	r3, #0
    189c:	b	19fc <read_leap_second_table+0x1e4>
    18a0:	ldr	r3, [fp, #-120]	; 0xffffff88
    18a4:	cmp	r3, #80	; 0x50
    18a8:	beq	18cc <read_leap_second_table+0xb4>
    18ac:	ldr	r0, [fp, #-12]
    18b0:	bl	0 <fclose>
    18b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    18b8:	ldr	r1, [pc, #364]	; 1a2c <read_leap_second_table+0x214>
    18bc:	mvn	r0, #21
    18c0:	bl	0 <coda_set_error>
    18c4:	mvn	r3, #0
    18c8:	b	19fc <read_leap_second_table+0x1e4>
    18cc:	ldr	r3, [fp, #-120]	; 0xffffff88
    18d0:	sub	r2, fp, #4
    18d4:	add	r3, r2, r3
    18d8:	mov	r2, #0
    18dc:	strb	r2, [r3, #-112]	; 0xffffff90
    18e0:	ldr	r1, [pc, #328]	; 1a30 <read_leap_second_table+0x218>
    18e4:	ldr	r0, [fp, #-12]
    18e8:	bl	0 <__isoc99_fscanf>
    18ec:	str	r0, [fp, #-16]
    18f0:	sub	r1, fp, #128	; 0x80
    18f4:	sub	r2, fp, #124	; 0x7c
    18f8:	sub	r0, fp, #116	; 0x74
    18fc:	sub	r3, fp, #120	; 0x78
    1900:	str	r3, [sp, #28]
    1904:	sub	r3, fp, #164	; 0xa4
    1908:	str	r3, [sp, #24]
    190c:	sub	r3, fp, #156	; 0x9c
    1910:	str	r3, [sp, #20]
    1914:	sub	r3, fp, #148	; 0x94
    1918:	str	r3, [sp, #16]
    191c:	sub	r3, fp, #140	; 0x8c
    1920:	str	r3, [sp, #12]
    1924:	sub	r3, fp, #132	; 0x84
    1928:	str	r3, [sp, #8]
    192c:	sub	r3, fp, #128	; 0x80
    1930:	add	r3, r3, #2
    1934:	str	r3, [sp, #4]
    1938:	sub	r3, fp, #128	; 0x80
    193c:	add	r3, r3, #1
    1940:	str	r3, [sp]
    1944:	mov	r3, r1
    1948:	ldr	r1, [pc, #228]	; 1a34 <read_leap_second_table+0x21c>
    194c:	bl	0 <__isoc99_sscanf>
    1950:	str	r0, [fp, #-16]
    1954:	ldr	r3, [fp, #-16]
    1958:	cmp	r3, #9
    195c:	beq	198c <read_leap_second_table+0x174>
    1960:	ldr	r3, [fp, #-120]	; 0xffffff88
    1964:	cmp	r3, #80	; 0x50
    1968:	beq	198c <read_leap_second_table+0x174>
    196c:	ldr	r0, [fp, #-12]
    1970:	bl	0 <fclose>
    1974:	ldr	r2, [fp, #-168]	; 0xffffff58
    1978:	ldr	r1, [pc, #172]	; 1a2c <read_leap_second_table+0x214>
    197c:	mvn	r0, #21
    1980:	bl	0 <coda_set_error>
    1984:	mvn	r3, #0
    1988:	b	19fc <read_leap_second_table+0x1e4>
    198c:	vldr	d7, [fp, #-140]	; 0xffffff74
    1990:	vldr	d6, [pc, #112]	; 1a08 <read_leap_second_table+0x1f0>
    1994:	vcmpe.f64	d7, d6
    1998:	vmrs	APSR_nzcv, fpscr
    199c:	ble	19f8 <read_leap_second_table+0x1e0>
    19a0:	vldr	d7, [fp, #-140]	; 0xffffff74
    19a4:	vldr	d6, [pc, #100]	; 1a10 <read_leap_second_table+0x1f8>
    19a8:	vsub.f64	d7, d7, d6
    19ac:	vldr	d6, [pc, #100]	; 1a18 <read_leap_second_table+0x200>
    19b0:	vmul.f64	d6, d7, d6
    19b4:	ldr	r3, [fp, #-8]
    19b8:	add	r3, r3, #10
    19bc:	vmov	s15, r3
    19c0:	vcvt.f64.s32	d7, s15
    19c4:	vadd.f64	d7, d6, d7
    19c8:	vmov.f64	d0, d7
    19cc:	bl	15a0 <register_leap_second>
    19d0:	mov	r3, r0
    19d4:	cmp	r3, #0
    19d8:	beq	19ec <read_leap_second_table+0x1d4>
    19dc:	ldr	r0, [fp, #-12]
    19e0:	bl	0 <fclose>
    19e4:	mvn	r3, #0
    19e8:	b	19fc <read_leap_second_table+0x1e4>
    19ec:	ldr	r3, [fp, #-8]
    19f0:	add	r3, r3, #1
    19f4:	str	r3, [fp, #-8]
    19f8:	b	1864 <read_leap_second_table+0x4c>
    19fc:	mov	r0, r3
    1a00:	sub	sp, fp, #4
    1a04:	pop	{fp, pc}
    1a08:	.word	0xc0000000
    1a0c:	.word	0x4142a032
    1a10:	.word	0x40000000
    1a14:	.word	0x4142b42c
    1a18:	.word	0x00000000
    1a1c:	.word	0x40f51800
    1a20:	.word	0x00000240
    1a24:	.word	0x00000244
    1a28:	.word	0x00000258
    1a2c:	.word	0x00000264
    1a30:	.word	0x00000288
    1a34:	.word	0x0000028c

00001a38 <coda_leap_second_table_done>:
    1a38:	push	{fp, lr}
    1a3c:	add	fp, sp, #4
    1a40:	bl	0 <__aeabi_read_tp>
    1a44:	mov	r2, r0
    1a48:	ldr	r3, [pc, #80]	; 1aa0 <coda_leap_second_table_done+0x68>
    1a4c:	ldr	r3, [r2, r3]
    1a50:	cmp	r3, #0
    1a54:	beq	1a84 <coda_leap_second_table_done+0x4c>
    1a58:	bl	0 <__aeabi_read_tp>
    1a5c:	mov	r2, r0
    1a60:	ldr	r3, [pc, #56]	; 1aa0 <coda_leap_second_table_done+0x68>
    1a64:	ldr	r3, [r2, r3]
    1a68:	mov	r0, r3
    1a6c:	bl	0 <free>
    1a70:	bl	0 <__aeabi_read_tp>
    1a74:	mov	r1, r0
    1a78:	ldr	r3, [pc, #32]	; 1aa0 <coda_leap_second_table_done+0x68>
    1a7c:	mov	r2, #0
    1a80:	str	r2, [r1, r3]
    1a84:	bl	0 <__aeabi_read_tp>
    1a88:	mov	r1, r0
    1a8c:	ldr	r3, [pc, #16]	; 1aa4 <coda_leap_second_table_done+0x6c>
    1a90:	mov	r2, #0
    1a94:	str	r2, [r1, r3]
    1a98:	nop			; (mov r0, r0)
    1a9c:	pop	{fp, pc}
	...

00001aa8 <coda_leap_second_table_init>:
    1aa8:	push	{fp, lr}
    1aac:	add	fp, sp, #4
    1ab0:	bl	1a38 <coda_leap_second_table_done>
    1ab4:	ldr	r0, [pc, #500]	; 1cb0 <coda_leap_second_table_init+0x208>
    1ab8:	bl	0 <getenv>
    1abc:	mov	r3, r0
    1ac0:	cmp	r3, #0
    1ac4:	beq	1af0 <coda_leap_second_table_init+0x48>
    1ac8:	ldr	r0, [pc, #480]	; 1cb0 <coda_leap_second_table_init+0x208>
    1acc:	bl	0 <getenv>
    1ad0:	mov	r3, r0
    1ad4:	mov	r0, r3
    1ad8:	bl	1818 <read_leap_second_table>
    1adc:	mov	r3, r0
    1ae0:	cmp	r3, #0
    1ae4:	beq	1bc8 <coda_leap_second_table_init+0x120>
    1ae8:	mvn	r3, #0
    1aec:	b	1bcc <coda_leap_second_table_init+0x124>
    1af0:	vldr	d0, [pc, #224]	; 1bd8 <coda_leap_second_table_init+0x130>
    1af4:	bl	15a0 <register_leap_second>
    1af8:	vldr	d0, [pc, #224]	; 1be0 <coda_leap_second_table_init+0x138>
    1afc:	bl	15a0 <register_leap_second>
    1b00:	vldr	d0, [pc, #224]	; 1be8 <coda_leap_second_table_init+0x140>
    1b04:	bl	15a0 <register_leap_second>
    1b08:	vldr	d0, [pc, #224]	; 1bf0 <coda_leap_second_table_init+0x148>
    1b0c:	bl	15a0 <register_leap_second>
    1b10:	vldr	d0, [pc, #224]	; 1bf8 <coda_leap_second_table_init+0x150>
    1b14:	bl	15a0 <register_leap_second>
    1b18:	vldr	d0, [pc, #224]	; 1c00 <coda_leap_second_table_init+0x158>
    1b1c:	bl	15a0 <register_leap_second>
    1b20:	vldr	d0, [pc, #224]	; 1c08 <coda_leap_second_table_init+0x160>
    1b24:	bl	15a0 <register_leap_second>
    1b28:	vldr	d0, [pc, #224]	; 1c10 <coda_leap_second_table_init+0x168>
    1b2c:	bl	15a0 <register_leap_second>
    1b30:	vldr	d0, [pc, #224]	; 1c18 <coda_leap_second_table_init+0x170>
    1b34:	bl	15a0 <register_leap_second>
    1b38:	vldr	d0, [pc, #224]	; 1c20 <coda_leap_second_table_init+0x178>
    1b3c:	bl	15a0 <register_leap_second>
    1b40:	vldr	d0, [pc, #224]	; 1c28 <coda_leap_second_table_init+0x180>
    1b44:	bl	15a0 <register_leap_second>
    1b48:	vldr	d0, [pc, #224]	; 1c30 <coda_leap_second_table_init+0x188>
    1b4c:	bl	15a0 <register_leap_second>
    1b50:	vldr	d0, [pc, #224]	; 1c38 <coda_leap_second_table_init+0x190>
    1b54:	bl	15a0 <register_leap_second>
    1b58:	vldr	d0, [pc, #224]	; 1c40 <coda_leap_second_table_init+0x198>
    1b5c:	bl	15a0 <register_leap_second>
    1b60:	vldr	d0, [pc, #224]	; 1c48 <coda_leap_second_table_init+0x1a0>
    1b64:	bl	15a0 <register_leap_second>
    1b68:	vldr	d0, [pc, #224]	; 1c50 <coda_leap_second_table_init+0x1a8>
    1b6c:	bl	15a0 <register_leap_second>
    1b70:	vldr	d0, [pc, #224]	; 1c58 <coda_leap_second_table_init+0x1b0>
    1b74:	bl	15a0 <register_leap_second>
    1b78:	vldr	d0, [pc, #224]	; 1c60 <coda_leap_second_table_init+0x1b8>
    1b7c:	bl	15a0 <register_leap_second>
    1b80:	vldr	d0, [pc, #224]	; 1c68 <coda_leap_second_table_init+0x1c0>
    1b84:	bl	15a0 <register_leap_second>
    1b88:	vldr	d0, [pc, #224]	; 1c70 <coda_leap_second_table_init+0x1c8>
    1b8c:	bl	15a0 <register_leap_second>
    1b90:	vldr	d0, [pc, #224]	; 1c78 <coda_leap_second_table_init+0x1d0>
    1b94:	bl	15a0 <register_leap_second>
    1b98:	vldr	d0, [pc, #224]	; 1c80 <coda_leap_second_table_init+0x1d8>
    1b9c:	bl	15a0 <register_leap_second>
    1ba0:	vldr	d0, [pc, #224]	; 1c88 <coda_leap_second_table_init+0x1e0>
    1ba4:	bl	15a0 <register_leap_second>
    1ba8:	vldr	d0, [pc, #224]	; 1c90 <coda_leap_second_table_init+0x1e8>
    1bac:	bl	15a0 <register_leap_second>
    1bb0:	vldr	d0, [pc, #224]	; 1c98 <coda_leap_second_table_init+0x1f0>
    1bb4:	bl	15a0 <register_leap_second>
    1bb8:	vldr	d0, [pc, #224]	; 1ca0 <coda_leap_second_table_init+0x1f8>
    1bbc:	bl	15a0 <register_leap_second>
    1bc0:	vldr	d0, [pc, #224]	; 1ca8 <coda_leap_second_table_init+0x200>
    1bc4:	bl	15a0 <register_leap_second>
    1bc8:	mov	r3, #0
    1bcc:	mov	r0, r3
    1bd0:	pop	{fp, pc}
    1bd4:	nop			; (mov r0, r0)
    1bd8:	.word	0xbb000000
    1bdc:	.word	0xc1c9dd75
    1be0:	.word	0xba800000
    1be4:	.word	0xc1c9642b
    1be8:	.word	0xfa000000
    1bec:	.word	0xc1c87391
    1bf0:	.word	0x39800000
    1bf4:	.word	0xc1c782f8
    1bf8:	.word	0x79000000
    1bfc:	.word	0xc1c6925e
    1c00:	.word	0xf8800000
    1c04:	.word	0xc1c5a11b
    1c08:	.word	0x38000000
    1c0c:	.word	0xc1c4b082
    1c10:	.word	0x77800000
    1c14:	.word	0xc1c3bfe8
    1c18:	.word	0xb7000000
    1c1c:	.word	0xc1c2cf4e
    1c20:	.word	0x76800000
    1c24:	.word	0xc1c166bc
    1c28:	.word	0xb6000000
    1c2c:	.word	0xc1c07622
    1c30:	.word	0xeb000000
    1c34:	.word	0xc1bf0b11
    1c38:	.word	0x6a000000
    1c3c:	.word	0xc1bb4759
    1c40:	.word	0x69000000
    1c44:	.word	0xc1b6925e
    1c48:	.word	0xe8000000
    1c4c:	.word	0xc1b2cea5
    1c50:	.word	0x67000000
    1c54:	.word	0xc1b0ed72
    1c58:	.word	0xcc000000
    1c5c:	.word	0xc1ac389b
    1c60:	.word	0xca000000
    1c64:	.word	0xc1a87634
    1c68:	.word	0xc8000000
    1c6c:	.word	0xc1a4b3cd
    1c70:	.word	0x8c000000
    1c74:	.word	0xc19e187d
    1c78:	.word	0x88000000
    1c7c:	.word	0xc192d3eb
    1c80:	.word	0x10000000
    1c84:	.word	0xc17e1336
    1c88:	.word	0x40000000
    1c8c:	.word	0x41a693b0
    1c90:	.word	0x21000000
    1c94:	.word	0x41b0eec4
    1c98:	.word	0xa2000000
    1c9c:	.word	0x41b7824f
    1ca0:	.word	0x23000000
    1ca4:	.word	0x41bd25ea
    1ca8:	.word	0x24000000
    1cac:	.word	0x41bffb03
    1cb0:	.word	0x000002d0

00001cb4 <coda_time_double_to_parts>:
    1cb4:	push	{fp, lr}
    1cb8:	add	fp, sp, #4
    1cbc:	sub	sp, sp, #72	; 0x48
    1cc0:	vstr	d0, [fp, #-60]	; 0xffffffc4
    1cc4:	str	r0, [fp, #-64]	; 0xffffffc0
    1cc8:	str	r1, [fp, #-68]	; 0xffffffbc
    1ccc:	str	r2, [fp, #-72]	; 0xffffffb8
    1cd0:	str	r3, [fp, #-76]	; 0xffffffb4
    1cd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1cd8:	cmp	r3, #0
    1cdc:	beq	1d28 <coda_time_double_to_parts+0x74>
    1ce0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ce4:	cmp	r3, #0
    1ce8:	beq	1d28 <coda_time_double_to_parts+0x74>
    1cec:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1cf0:	cmp	r3, #0
    1cf4:	beq	1d28 <coda_time_double_to_parts+0x74>
    1cf8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1cfc:	cmp	r3, #0
    1d00:	beq	1d28 <coda_time_double_to_parts+0x74>
    1d04:	ldr	r3, [fp, #4]
    1d08:	cmp	r3, #0
    1d0c:	beq	1d28 <coda_time_double_to_parts+0x74>
    1d10:	ldr	r3, [fp, #8]
    1d14:	cmp	r3, #0
    1d18:	beq	1d28 <coda_time_double_to_parts+0x74>
    1d1c:	ldr	r3, [fp, #12]
    1d20:	cmp	r3, #0
    1d24:	bne	1d44 <coda_time_double_to_parts+0x90>
    1d28:	ldr	r3, [pc, #456]	; 1ef8 <coda_time_double_to_parts+0x244>
    1d2c:	ldr	r2, [pc, #456]	; 1efc <coda_time_double_to_parts+0x248>
    1d30:	ldr	r1, [pc, #456]	; 1f00 <coda_time_double_to_parts+0x24c>
    1d34:	mvn	r0, #99	; 0x63
    1d38:	bl	0 <coda_set_error>
    1d3c:	mvn	r3, #0
    1d40:	b	1ed0 <coda_time_double_to_parts+0x21c>
    1d44:	vldr	d0, [fp, #-60]	; 0xffffffc4
    1d48:	bl	0 <coda_isNaN>
    1d4c:	mov	r3, r0
    1d50:	cmp	r3, #0
    1d54:	beq	1d6c <coda_time_double_to_parts+0xb8>
    1d58:	ldr	r1, [pc, #420]	; 1f04 <coda_time_double_to_parts+0x250>
    1d5c:	mvn	r0, #103	; 0x67
    1d60:	bl	0 <coda_set_error>
    1d64:	mvn	r3, #0
    1d68:	b	1ed0 <coda_time_double_to_parts+0x21c>
    1d6c:	vldr	d0, [fp, #-60]	; 0xffffffc4
    1d70:	bl	0 <coda_isInf>
    1d74:	mov	r3, r0
    1d78:	cmp	r3, #0
    1d7c:	beq	1d94 <coda_time_double_to_parts+0xe0>
    1d80:	ldr	r1, [pc, #384]	; 1f08 <coda_time_double_to_parts+0x254>
    1d84:	mvn	r0, #103	; 0x67
    1d88:	bl	0 <coda_set_error>
    1d8c:	mvn	r3, #0
    1d90:	b	1ed0 <coda_time_double_to_parts+0x21c>
    1d94:	vldr	d7, [fp, #-60]	; 0xffffffc4
    1d98:	vldr	d6, [pc, #320]	; 1ee0 <coda_time_double_to_parts+0x22c>
    1d9c:	vadd.f64	d7, d7, d6
    1da0:	vstr	d7, [fp, #-60]	; 0xffffffc4
    1da4:	vldr	d0, [fp, #-60]	; 0xffffffc4
    1da8:	bl	0 <floor>
    1dac:	vstr	d0, [fp, #-12]
    1db0:	vldr	d7, [fp, #-12]
    1db4:	vldr	d6, [pc, #300]	; 1ee8 <coda_time_double_to_parts+0x234>
    1db8:	vdiv.f64	d5, d7, d6
    1dbc:	vmov.f64	d0, d5
    1dc0:	bl	0 <floor>
    1dc4:	vmov.f64	d7, d0
    1dc8:	vcvt.s32.f64	s15, d7
    1dcc:	vmov	r3, s15
    1dd0:	str	r3, [fp, #-16]
    1dd4:	sub	r3, fp, #36	; 0x24
    1dd8:	sub	r2, fp, #32
    1ddc:	sub	r1, fp, #28
    1de0:	ldr	r0, [fp, #-16]
    1de4:	bl	1184 <mjd2000_to_dmy>
    1de8:	mov	r3, r0
    1dec:	cmp	r3, #0
    1df0:	beq	1dfc <coda_time_double_to_parts+0x148>
    1df4:	mvn	r3, #0
    1df8:	b	1ed0 <coda_time_double_to_parts+0x21c>
    1dfc:	ldr	r3, [fp, #-16]
    1e00:	vmov	s15, r3
    1e04:	vcvt.f64.s32	d7, s15
    1e08:	vldr	d6, [pc, #216]	; 1ee8 <coda_time_double_to_parts+0x234>
    1e0c:	vmul.f64	d7, d7, d6
    1e10:	vldr	d6, [fp, #-12]
    1e14:	vsub.f64	d7, d6, d7
    1e18:	vcvt.s32.f64	s15, d7
    1e1c:	vmov	r3, s15
    1e20:	str	r3, [fp, #-20]	; 0xffffffec
    1e24:	sub	r3, fp, #48	; 0x30
    1e28:	sub	r2, fp, #44	; 0x2c
    1e2c:	sub	r1, fp, #40	; 0x28
    1e30:	ldr	r0, [fp, #-20]	; 0xffffffec
    1e34:	bl	1474 <seconds_to_hms>
    1e38:	mov	r3, r0
    1e3c:	cmp	r3, #0
    1e40:	beq	1e4c <coda_time_double_to_parts+0x198>
    1e44:	mvn	r3, #0
    1e48:	b	1ed0 <coda_time_double_to_parts+0x21c>
    1e4c:	vldr	d6, [fp, #-60]	; 0xffffffc4
    1e50:	vldr	d7, [fp, #-12]
    1e54:	vsub.f64	d7, d6, d7
    1e58:	vldr	d6, [pc, #144]	; 1ef0 <coda_time_double_to_parts+0x23c>
    1e5c:	vmul.f64	d7, d7, d6
    1e60:	vmov.f64	d0, d7
    1e64:	bl	0 <floor>
    1e68:	vmov.f64	d7, d0
    1e6c:	vcvt.s32.f64	s15, d7
    1e70:	vmov	r3, s15
    1e74:	str	r3, [fp, #-24]	; 0xffffffe8
    1e78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1e7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1e80:	str	r2, [r3]
    1e84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1e88:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e8c:	str	r2, [r3]
    1e90:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1e94:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1e98:	str	r2, [r3]
    1e9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ea0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1ea4:	str	r2, [r3]
    1ea8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1eac:	ldr	r3, [fp, #4]
    1eb0:	str	r2, [r3]
    1eb4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1eb8:	ldr	r3, [fp, #8]
    1ebc:	str	r2, [r3]
    1ec0:	ldr	r3, [fp, #12]
    1ec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ec8:	str	r2, [r3]
    1ecc:	mov	r3, #0
    1ed0:	mov	r0, r3
    1ed4:	sub	sp, fp, #4
    1ed8:	pop	{fp, pc}
    1edc:	nop			; (mov r0, r0)
    1ee0:	.word	0xa0b5ed8d
    1ee4:	.word	0x3ea0c6f7
    1ee8:	.word	0x00000000
    1eec:	.word	0x40f51800
    1ef0:	.word	0x00000000
    1ef4:	.word	0x412e8480
    1ef8:	.word	0x00000313
    1efc:	.word	0x000000ac
    1f00:	.word	0x00000184
    1f04:	.word	0x000002e8
    1f08:	.word	0x00000304

00001f0c <coda_time_double_to_parts_utc>:
    1f0c:	push	{fp, lr}
    1f10:	add	fp, sp, #4
    1f14:	sub	sp, sp, #80	; 0x50
    1f18:	vstr	d0, [fp, #-68]	; 0xffffffbc
    1f1c:	str	r0, [fp, #-72]	; 0xffffffb8
    1f20:	str	r1, [fp, #-76]	; 0xffffffb4
    1f24:	str	r2, [fp, #-80]	; 0xffffffb0
    1f28:	str	r3, [fp, #-84]	; 0xffffffac
    1f2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1f30:	cmp	r3, #0
    1f34:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f38:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1f3c:	cmp	r3, #0
    1f40:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f44:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1f48:	cmp	r3, #0
    1f4c:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f50:	ldr	r3, [fp, #-84]	; 0xffffffac
    1f54:	cmp	r3, #0
    1f58:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f5c:	ldr	r3, [fp, #4]
    1f60:	cmp	r3, #0
    1f64:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f68:	ldr	r3, [fp, #8]
    1f6c:	cmp	r3, #0
    1f70:	beq	1f80 <coda_time_double_to_parts_utc+0x74>
    1f74:	ldr	r3, [fp, #12]
    1f78:	cmp	r3, #0
    1f7c:	bne	1f9c <coda_time_double_to_parts_utc+0x90>
    1f80:	ldr	r3, [pc, #784]	; 2298 <coda_time_double_to_parts_utc+0x38c>
    1f84:	ldr	r2, [pc, #784]	; 229c <coda_time_double_to_parts_utc+0x390>
    1f88:	ldr	r1, [pc, #784]	; 22a0 <coda_time_double_to_parts_utc+0x394>
    1f8c:	mvn	r0, #99	; 0x63
    1f90:	bl	0 <coda_set_error>
    1f94:	mvn	r3, #0
    1f98:	b	2268 <coda_time_double_to_parts_utc+0x35c>
    1f9c:	vldr	d0, [fp, #-68]	; 0xffffffbc
    1fa0:	bl	0 <coda_isNaN>
    1fa4:	mov	r3, r0
    1fa8:	cmp	r3, #0
    1fac:	beq	1fc4 <coda_time_double_to_parts_utc+0xb8>
    1fb0:	ldr	r1, [pc, #748]	; 22a4 <coda_time_double_to_parts_utc+0x398>
    1fb4:	mvn	r0, #103	; 0x67
    1fb8:	bl	0 <coda_set_error>
    1fbc:	mvn	r3, #0
    1fc0:	b	2268 <coda_time_double_to_parts_utc+0x35c>
    1fc4:	vldr	d0, [fp, #-68]	; 0xffffffbc
    1fc8:	bl	0 <coda_isInf>
    1fcc:	mov	r3, r0
    1fd0:	cmp	r3, #0
    1fd4:	beq	1fec <coda_time_double_to_parts_utc+0xe0>
    1fd8:	ldr	r1, [pc, #712]	; 22a8 <coda_time_double_to_parts_utc+0x39c>
    1fdc:	mvn	r0, #103	; 0x67
    1fe0:	bl	0 <coda_set_error>
    1fe4:	mvn	r3, #0
    1fe8:	b	2268 <coda_time_double_to_parts_utc+0x35c>
    1fec:	vldr	d7, [fp, #-68]	; 0xffffffbc
    1ff0:	vldr	d6, [pc, #640]	; 2278 <coda_time_double_to_parts_utc+0x36c>
    1ff4:	vadd.f64	d7, d7, d6
    1ff8:	vstr	d7, [fp, #-68]	; 0xffffffbc
    1ffc:	vldr	d0, [fp, #-68]	; 0xffffffbc
    2000:	bl	0 <floor>
    2004:	vstr	d0, [fp, #-20]	; 0xffffffec
    2008:	bl	0 <__aeabi_read_tp>
    200c:	mov	r2, r0
    2010:	ldr	r3, [pc, #660]	; 22ac <coda_time_double_to_parts_utc+0x3a0>
    2014:	ldr	r3, [r2, r3]
    2018:	cmp	r3, #0
    201c:	beq	2038 <coda_time_double_to_parts_utc+0x12c>
    2020:	bl	0 <__aeabi_read_tp>
    2024:	mov	r2, r0
    2028:	ldr	r3, [pc, #640]	; 22b0 <coda_time_double_to_parts_utc+0x3a4>
    202c:	ldr	r3, [r2, r3]
    2030:	cmp	r3, #0
    2034:	bgt	204c <coda_time_double_to_parts_utc+0x140>
    2038:	ldr	r3, [pc, #628]	; 22b4 <coda_time_double_to_parts_utc+0x3a8>
    203c:	ldr	r2, [pc, #628]	; 22b8 <coda_time_double_to_parts_utc+0x3ac>
    2040:	ldr	r1, [pc, #596]	; 229c <coda_time_double_to_parts_utc+0x390>
    2044:	ldr	r0, [pc, #624]	; 22bc <coda_time_double_to_parts_utc+0x3b0>
    2048:	bl	0 <__assert_fail>
    204c:	mov	r3, #0
    2050:	str	r3, [fp, #-8]
    2054:	b	2064 <coda_time_double_to_parts_utc+0x158>
    2058:	ldr	r3, [fp, #-8]
    205c:	add	r3, r3, #1
    2060:	str	r3, [fp, #-8]
    2064:	bl	0 <__aeabi_read_tp>
    2068:	mov	r2, r0
    206c:	ldr	r3, [pc, #572]	; 22b0 <coda_time_double_to_parts_utc+0x3a4>
    2070:	ldr	r3, [r2, r3]
    2074:	ldr	r2, [fp, #-8]
    2078:	cmp	r2, r3
    207c:	bge	20b0 <coda_time_double_to_parts_utc+0x1a4>
    2080:	bl	0 <__aeabi_read_tp>
    2084:	mov	r2, r0
    2088:	ldr	r3, [pc, #540]	; 22ac <coda_time_double_to_parts_utc+0x3a0>
    208c:	ldr	r2, [r2, r3]
    2090:	ldr	r3, [fp, #-8]
    2094:	lsl	r3, r3, #3
    2098:	add	r3, r2, r3
    209c:	vldr	d6, [r3]
    20a0:	vldr	d7, [fp, #-20]	; 0xffffffec
    20a4:	vcmpe.f64	d6, d7
    20a8:	vmrs	APSR_nzcv, fpscr
    20ac:	bmi	2058 <coda_time_double_to_parts_utc+0x14c>
    20b0:	bl	0 <__aeabi_read_tp>
    20b4:	mov	r2, r0
    20b8:	ldr	r3, [pc, #492]	; 22ac <coda_time_double_to_parts_utc+0x3a0>
    20bc:	ldr	r2, [r2, r3]
    20c0:	ldr	r3, [fp, #-8]
    20c4:	lsl	r3, r3, #3
    20c8:	add	r3, r2, r3
    20cc:	vldr	d7, [r3]
    20d0:	vldr	d6, [fp, #-20]	; 0xffffffec
    20d4:	vsub.f64	d7, d6, d7
    20d8:	vabs.f64	d7, d7
    20dc:	vldr	d6, [pc, #412]	; 2280 <coda_time_double_to_parts_utc+0x374>
    20e0:	vcmpe.f64	d7, d6
    20e4:	vmrs	APSR_nzcv, fpscr
    20e8:	movmi	r3, #1
    20ec:	movpl	r3, #0
    20f0:	uxtb	r3, r3
    20f4:	str	r3, [fp, #-24]	; 0xffffffe8
    20f8:	ldr	r3, [fp, #-8]
    20fc:	add	r2, r3, #10
    2100:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2104:	add	r3, r2, r3
    2108:	vmov	s15, r3
    210c:	vcvt.f64.s32	d7, s15
    2110:	vldr	d6, [fp, #-20]	; 0xffffffec
    2114:	vsub.f64	d7, d6, d7
    2118:	vstr	d7, [fp, #-20]	; 0xffffffec
    211c:	ldr	r3, [fp, #-8]
    2120:	add	r2, r3, #10
    2124:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2128:	add	r3, r2, r3
    212c:	vmov	s15, r3
    2130:	vcvt.f64.s32	d7, s15
    2134:	vldr	d6, [fp, #-68]	; 0xffffffbc
    2138:	vsub.f64	d7, d6, d7
    213c:	vstr	d7, [fp, #-68]	; 0xffffffbc
    2140:	vldr	d7, [fp, #-20]	; 0xffffffec
    2144:	vldr	d6, [pc, #316]	; 2288 <coda_time_double_to_parts_utc+0x37c>
    2148:	vdiv.f64	d5, d7, d6
    214c:	vmov.f64	d0, d5
    2150:	bl	0 <floor>
    2154:	vmov.f64	d7, d0
    2158:	vcvt.s32.f64	s15, d7
    215c:	vmov	r3, s15
    2160:	str	r3, [fp, #-28]	; 0xffffffe4
    2164:	sub	r3, fp, #48	; 0x30
    2168:	sub	r2, fp, #44	; 0x2c
    216c:	sub	r1, fp, #40	; 0x28
    2170:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2174:	bl	1184 <mjd2000_to_dmy>
    2178:	mov	r3, r0
    217c:	cmp	r3, #0
    2180:	beq	218c <coda_time_double_to_parts_utc+0x280>
    2184:	mvn	r3, #0
    2188:	b	2268 <coda_time_double_to_parts_utc+0x35c>
    218c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2190:	vmov	s15, r3
    2194:	vcvt.f64.s32	d7, s15
    2198:	vldr	d6, [pc, #232]	; 2288 <coda_time_double_to_parts_utc+0x37c>
    219c:	vmul.f64	d7, d7, d6
    21a0:	vldr	d6, [fp, #-20]	; 0xffffffec
    21a4:	vsub.f64	d7, d6, d7
    21a8:	vcvt.s32.f64	s15, d7
    21ac:	vmov	r3, s15
    21b0:	str	r3, [fp, #-32]	; 0xffffffe0
    21b4:	sub	r3, fp, #60	; 0x3c
    21b8:	sub	r2, fp, #56	; 0x38
    21bc:	sub	r1, fp, #52	; 0x34
    21c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    21c4:	bl	1474 <seconds_to_hms>
    21c8:	mov	r3, r0
    21cc:	cmp	r3, #0
    21d0:	beq	21dc <coda_time_double_to_parts_utc+0x2d0>
    21d4:	mvn	r3, #0
    21d8:	b	2268 <coda_time_double_to_parts_utc+0x35c>
    21dc:	vldr	d6, [fp, #-68]	; 0xffffffbc
    21e0:	vldr	d7, [fp, #-20]	; 0xffffffec
    21e4:	vsub.f64	d7, d6, d7
    21e8:	vldr	d6, [pc, #160]	; 2290 <coda_time_double_to_parts_utc+0x384>
    21ec:	vmul.f64	d7, d7, d6
    21f0:	vmov.f64	d0, d7
    21f4:	bl	0 <floor>
    21f8:	vmov.f64	d7, d0
    21fc:	vcvt.s32.f64	s15, d7
    2200:	vmov	r3, s15
    2204:	str	r3, [fp, #-36]	; 0xffffffdc
    2208:	ldr	r2, [fp, #-48]	; 0xffffffd0
    220c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2210:	str	r2, [r3]
    2214:	ldr	r2, [fp, #-44]	; 0xffffffd4
    2218:	ldr	r3, [fp, #-76]	; 0xffffffb4
    221c:	str	r2, [r3]
    2220:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2224:	ldr	r3, [fp, #-80]	; 0xffffffb0
    2228:	str	r2, [r3]
    222c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2230:	ldr	r3, [fp, #-84]	; 0xffffffac
    2234:	str	r2, [r3]
    2238:	ldr	r2, [fp, #-56]	; 0xffffffc8
    223c:	ldr	r3, [fp, #4]
    2240:	str	r2, [r3]
    2244:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2248:	ldr	r3, [fp, #-24]	; 0xffffffe8
    224c:	add	r2, r2, r3
    2250:	ldr	r3, [fp, #8]
    2254:	str	r2, [r3]
    2258:	ldr	r3, [fp, #12]
    225c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2260:	str	r2, [r3]
    2264:	mov	r3, #0
    2268:	mov	r0, r3
    226c:	sub	sp, fp, #4
    2270:	pop	{fp, pc}
    2274:	nop			; (mov r0, r0)
    2278:	.word	0xa0b5ed8d
    227c:	.word	0x3ea0c6f7
    2280:	.word	0x9999999a
    2284:	.word	0x3fb99999
    2288:	.word	0x00000000
    228c:	.word	0x40f51800
    2290:	.word	0x00000000
    2294:	.word	0x412e8480
    2298:	.word	0x0000036a
    229c:	.word	0x000000ac
    22a0:	.word	0x00000184
    22a4:	.word	0x000002e8
    22a8:	.word	0x00000304
	...
    22b4:	.word	0x000009ac
    22b8:	.word	0x0000037e
    22bc:	.word	0x00000324

000022c0 <coda_time_parts_to_double>:
    22c0:	push	{fp, lr}
    22c4:	add	fp, sp, #4
    22c8:	sub	sp, sp, #40	; 0x28
    22cc:	str	r0, [fp, #-24]	; 0xffffffe8
    22d0:	str	r1, [fp, #-28]	; 0xffffffe4
    22d4:	str	r2, [fp, #-32]	; 0xffffffe0
    22d8:	str	r3, [fp, #-36]	; 0xffffffdc
    22dc:	ldr	r3, [fp, #16]
    22e0:	cmp	r3, #0
    22e4:	bne	2304 <coda_time_parts_to_double+0x44>
    22e8:	ldr	r3, [pc, #168]	; 2398 <coda_time_parts_to_double+0xd8>
    22ec:	ldr	r2, [pc, #168]	; 239c <coda_time_parts_to_double+0xdc>
    22f0:	ldr	r1, [pc, #168]	; 23a0 <coda_time_parts_to_double+0xe0>
    22f4:	mvn	r0, #99	; 0x63
    22f8:	bl	0 <coda_set_error>
    22fc:	mvn	r3, #0
    2300:	b	2384 <coda_time_parts_to_double+0xc4>
    2304:	sub	r3, fp, #16
    2308:	ldr	r2, [fp, #-24]	; 0xffffffe8
    230c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2310:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2314:	bl	980 <dmy_to_mjd2000>
    2318:	mov	r3, r0
    231c:	cmp	r3, #0
    2320:	beq	232c <coda_time_parts_to_double+0x6c>
    2324:	mvn	r3, #0
    2328:	b	2384 <coda_time_parts_to_double+0xc4>
    232c:	sub	r3, fp, #12
    2330:	str	r3, [sp]
    2334:	ldr	r3, [fp, #12]
    2338:	ldr	r2, [fp, #8]
    233c:	ldr	r1, [fp, #4]
    2340:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2344:	bl	1230 <hms_to_daytime>
    2348:	mov	r3, r0
    234c:	cmp	r3, #0
    2350:	beq	235c <coda_time_parts_to_double+0x9c>
    2354:	mvn	r3, #0
    2358:	b	2384 <coda_time_parts_to_double+0xc4>
    235c:	ldr	r3, [fp, #-16]
    2360:	vmov	s15, r3
    2364:	vcvt.f64.s32	d7, s15
    2368:	vldr	d6, [pc, #32]	; 2390 <coda_time_parts_to_double+0xd0>
    236c:	vmul.f64	d6, d7, d6
    2370:	vldr	d7, [fp, #-12]
    2374:	vadd.f64	d7, d6, d7
    2378:	ldr	r3, [fp, #16]
    237c:	vstr	d7, [r3]
    2380:	mov	r3, #0
    2384:	mov	r0, r3
    2388:	sub	sp, fp, #4
    238c:	pop	{fp, pc}
    2390:	.word	0x00000000
    2394:	.word	0x40f51800
    2398:	.word	0x000003ba
    239c:	.word	0x000000ac
    23a0:	.word	0x00000358

000023a4 <coda_time_parts_to_double_utc>:
    23a4:	push	{fp, lr}
    23a8:	add	fp, sp, #4
    23ac:	sub	sp, sp, #56	; 0x38
    23b0:	str	r0, [fp, #-40]	; 0xffffffd8
    23b4:	str	r1, [fp, #-44]	; 0xffffffd4
    23b8:	str	r2, [fp, #-48]	; 0xffffffd0
    23bc:	str	r3, [fp, #-52]	; 0xffffffcc
    23c0:	ldr	r3, [fp, #16]
    23c4:	cmp	r3, #0
    23c8:	bne	23e8 <coda_time_parts_to_double_utc+0x44>
    23cc:	mov	r3, #1008	; 0x3f0
    23d0:	ldr	r2, [pc, #384]	; 2558 <coda_time_parts_to_double_utc+0x1b4>
    23d4:	ldr	r1, [pc, #384]	; 255c <coda_time_parts_to_double_utc+0x1b8>
    23d8:	mvn	r0, #99	; 0x63
    23dc:	bl	0 <coda_set_error>
    23e0:	mvn	r3, #0
    23e4:	b	2530 <coda_time_parts_to_double_utc+0x18c>
    23e8:	sub	r3, fp, #32
    23ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    23f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    23f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    23f8:	bl	980 <dmy_to_mjd2000>
    23fc:	mov	r3, r0
    2400:	cmp	r3, #0
    2404:	beq	2410 <coda_time_parts_to_double_utc+0x6c>
    2408:	mvn	r3, #0
    240c:	b	2530 <coda_time_parts_to_double_utc+0x18c>
    2410:	sub	r3, fp, #28
    2414:	str	r3, [sp]
    2418:	ldr	r3, [fp, #12]
    241c:	ldr	r2, [fp, #8]
    2420:	ldr	r1, [fp, #4]
    2424:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2428:	bl	1230 <hms_to_daytime>
    242c:	mov	r3, r0
    2430:	cmp	r3, #0
    2434:	beq	2440 <coda_time_parts_to_double_utc+0x9c>
    2438:	mvn	r3, #0
    243c:	b	2530 <coda_time_parts_to_double_utc+0x18c>
    2440:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2444:	vmov	s15, r3
    2448:	vcvt.f64.s32	d7, s15
    244c:	vldr	d6, [pc, #236]	; 2540 <coda_time_parts_to_double_utc+0x19c>
    2450:	vmul.f64	d7, d7, d6
    2454:	vldr	d6, [pc, #236]	; 2548 <coda_time_parts_to_double_utc+0x1a4>
    2458:	vadd.f64	d7, d7, d6
    245c:	vstr	d7, [fp, #-12]
    2460:	bl	0 <__aeabi_read_tp>
    2464:	mov	r2, r0
    2468:	ldr	r3, [pc, #240]	; 2560 <coda_time_parts_to_double_utc+0x1bc>
    246c:	ldr	r3, [r2, r3]
    2470:	cmp	r3, #0
    2474:	beq	2490 <coda_time_parts_to_double_utc+0xec>
    2478:	bl	0 <__aeabi_read_tp>
    247c:	mov	r2, r0
    2480:	ldr	r3, [pc, #220]	; 2564 <coda_time_parts_to_double_utc+0x1c0>
    2484:	ldr	r3, [r2, r3]
    2488:	cmp	r3, #0
    248c:	bgt	24a4 <coda_time_parts_to_double_utc+0x100>
    2490:	ldr	r3, [pc, #208]	; 2568 <coda_time_parts_to_double_utc+0x1c4>
    2494:	mov	r2, #1024	; 0x400
    2498:	ldr	r1, [pc, #184]	; 2558 <coda_time_parts_to_double_utc+0x1b4>
    249c:	ldr	r0, [pc, #200]	; 256c <coda_time_parts_to_double_utc+0x1c8>
    24a0:	bl	0 <__assert_fail>
    24a4:	mov	r3, #0
    24a8:	str	r3, [fp, #-16]
    24ac:	b	24cc <coda_time_parts_to_double_utc+0x128>
    24b0:	vldr	d7, [fp, #-12]
    24b4:	vldr	d6, [pc, #148]	; 2550 <coda_time_parts_to_double_utc+0x1ac>
    24b8:	vadd.f64	d7, d7, d6
    24bc:	vstr	d7, [fp, #-12]
    24c0:	ldr	r3, [fp, #-16]
    24c4:	add	r3, r3, #1
    24c8:	str	r3, [fp, #-16]
    24cc:	bl	0 <__aeabi_read_tp>
    24d0:	mov	r2, r0
    24d4:	ldr	r3, [pc, #136]	; 2564 <coda_time_parts_to_double_utc+0x1c0>
    24d8:	ldr	r3, [r2, r3]
    24dc:	ldr	r2, [fp, #-16]
    24e0:	cmp	r2, r3
    24e4:	bge	2518 <coda_time_parts_to_double_utc+0x174>
    24e8:	bl	0 <__aeabi_read_tp>
    24ec:	mov	r2, r0
    24f0:	ldr	r3, [pc, #104]	; 2560 <coda_time_parts_to_double_utc+0x1bc>
    24f4:	ldr	r2, [r2, r3]
    24f8:	ldr	r3, [fp, #-16]
    24fc:	lsl	r3, r3, #3
    2500:	add	r3, r2, r3
    2504:	vldr	d6, [r3]
    2508:	vldr	d7, [fp, #-12]
    250c:	vcmpe.f64	d6, d7
    2510:	vmrs	APSR_nzcv, fpscr
    2514:	bls	24b0 <coda_time_parts_to_double_utc+0x10c>
    2518:	vldr	d6, [fp, #-28]	; 0xffffffe4
    251c:	vldr	d7, [fp, #-12]
    2520:	vadd.f64	d7, d6, d7
    2524:	ldr	r3, [fp, #16]
    2528:	vstr	d7, [r3]
    252c:	mov	r3, #0
    2530:	mov	r0, r3
    2534:	sub	sp, fp, #4
    2538:	pop	{fp, pc}
    253c:	nop			; (mov r0, r0)
    2540:	.word	0x00000000
    2544:	.word	0x40f51800
    2548:	.word	0x00000000
    254c:	.word	0x40240000
    2550:	.word	0x00000000
    2554:	.word	0x3ff00000
    2558:	.word	0x000000ac
    255c:	.word	0x00000358
	...
    2568:	.word	0x000009cc
    256c:	.word	0x00000324

00002570 <coda_time_parts_to_string>:
    2570:	push	{fp, lr}
    2574:	add	fp, sp, #4
    2578:	sub	sp, sp, #96	; 0x60
    257c:	str	r0, [fp, #-88]	; 0xffffffa8
    2580:	str	r1, [fp, #-92]	; 0xffffffa4
    2584:	str	r2, [fp, #-96]	; 0xffffffa0
    2588:	str	r3, [fp, #-100]	; 0xffffff9c
    258c:	ldr	r3, [pc, #2128]	; 2de4 <coda_time_parts_to_string+0x874>
    2590:	sub	ip, fp, #76	; 0x4c
    2594:	mov	lr, r3
    2598:	ldm	lr!, {r0, r1, r2, r3}
    259c:	stmia	ip!, {r0, r1, r2, r3}
    25a0:	ldm	lr!, {r0, r1, r2, r3}
    25a4:	stmia	ip!, {r0, r1, r2, r3}
    25a8:	ldm	lr, {r0, r1, r2, r3}
    25ac:	stm	ip, {r0, r1, r2, r3}
    25b0:	mov	r3, #0
    25b4:	str	r3, [fp, #-8]
    25b8:	mov	r3, #0
    25bc:	str	r3, [fp, #-12]
    25c0:	mov	r3, #0
    25c4:	str	r3, [fp, #-16]
    25c8:	ldr	r3, [fp, #16]
    25cc:	cmp	r3, #0
    25d0:	bne	25f0 <coda_time_parts_to_string+0x80>
    25d4:	ldr	r3, [pc, #2060]	; 2de8 <coda_time_parts_to_string+0x878>
    25d8:	ldr	r2, [pc, #2060]	; 2dec <coda_time_parts_to_string+0x87c>
    25dc:	ldr	r1, [pc, #2060]	; 2df0 <coda_time_parts_to_string+0x880>
    25e0:	mvn	r0, #99	; 0x63
    25e4:	bl	0 <coda_set_error>
    25e8:	mvn	r3, #0
    25ec:	b	2dd8 <coda_time_parts_to_string+0x868>
    25f0:	ldr	r3, [fp, #20]
    25f4:	cmp	r3, #0
    25f8:	bne	2d74 <coda_time_parts_to_string+0x804>
    25fc:	ldr	r3, [pc, #2032]	; 2df4 <coda_time_parts_to_string+0x884>
    2600:	ldr	r2, [pc, #2020]	; 2dec <coda_time_parts_to_string+0x87c>
    2604:	ldr	r1, [pc, #2028]	; 2df8 <coda_time_parts_to_string+0x888>
    2608:	mvn	r0, #99	; 0x63
    260c:	bl	0 <coda_set_error>
    2610:	mvn	r3, #0
    2614:	b	2dd8 <coda_time_parts_to_string+0x868>
    2618:	ldr	r3, [fp, #-12]
    261c:	ldr	r2, [fp, #16]
    2620:	add	r3, r2, r3
    2624:	ldrb	r3, [r3]
    2628:	cmp	r3, #39	; 0x27
    262c:	bne	2670 <coda_time_parts_to_string+0x100>
    2630:	ldr	r3, [fp, #-12]
    2634:	add	r3, r3, #1
    2638:	str	r3, [fp, #-12]
    263c:	ldr	r3, [fp, #-12]
    2640:	ldr	r2, [fp, #16]
    2644:	add	r3, r2, r3
    2648:	ldrb	r3, [r3]
    264c:	cmp	r3, #39	; 0x27
    2650:	beq	2670 <coda_time_parts_to_string+0x100>
    2654:	ldr	r3, [fp, #-8]
    2658:	cmp	r3, #0
    265c:	moveq	r3, #1
    2660:	movne	r3, #0
    2664:	uxtb	r3, r3
    2668:	str	r3, [fp, #-8]
    266c:	b	2d74 <coda_time_parts_to_string+0x804>
    2670:	ldr	r3, [fp, #-8]
    2674:	cmp	r3, #0
    2678:	beq	26b8 <coda_time_parts_to_string+0x148>
    267c:	ldr	r3, [fp, #-16]
    2680:	ldr	r2, [fp, #20]
    2684:	add	r3, r2, r3
    2688:	ldr	r2, [fp, #-12]
    268c:	ldr	r1, [fp, #16]
    2690:	add	r2, r1, r2
    2694:	ldrb	r2, [r2]
    2698:	strb	r2, [r3]
    269c:	ldr	r3, [fp, #-12]
    26a0:	add	r3, r3, #1
    26a4:	str	r3, [fp, #-12]
    26a8:	ldr	r3, [fp, #-16]
    26ac:	add	r3, r3, #1
    26b0:	str	r3, [fp, #-16]
    26b4:	b	2d74 <coda_time_parts_to_string+0x804>
    26b8:	ldr	r3, [fp, #-12]
    26bc:	ldr	r2, [fp, #16]
    26c0:	add	r3, r2, r3
    26c4:	ldrb	r3, [r3]
    26c8:	cmp	r3, #121	; 0x79
    26cc:	bne	278c <coda_time_parts_to_string+0x21c>
    26d0:	ldr	r3, [fp, #-12]
    26d4:	add	r3, r3, #1
    26d8:	ldr	r2, [fp, #16]
    26dc:	add	r3, r2, r3
    26e0:	ldrb	r3, [r3]
    26e4:	cmp	r3, #121	; 0x79
    26e8:	bne	278c <coda_time_parts_to_string+0x21c>
    26ec:	ldr	r3, [fp, #-12]
    26f0:	add	r3, r3, #2
    26f4:	ldr	r2, [fp, #16]
    26f8:	add	r3, r2, r3
    26fc:	ldrb	r3, [r3]
    2700:	cmp	r3, #121	; 0x79
    2704:	bne	278c <coda_time_parts_to_string+0x21c>
    2708:	ldr	r3, [fp, #-12]
    270c:	add	r3, r3, #3
    2710:	ldr	r2, [fp, #16]
    2714:	add	r3, r2, r3
    2718:	ldrb	r3, [r3]
    271c:	cmp	r3, #121	; 0x79
    2720:	bne	278c <coda_time_parts_to_string+0x21c>
    2724:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2728:	cmp	r3, #0
    272c:	blt	2740 <coda_time_parts_to_string+0x1d0>
    2730:	ldr	r3, [fp, #-88]	; 0xffffffa8
    2734:	ldr	r2, [pc, #1728]	; 2dfc <coda_time_parts_to_string+0x88c>
    2738:	cmp	r3, r2
    273c:	ble	2754 <coda_time_parts_to_string+0x1e4>
    2740:	ldr	r1, [pc, #1720]	; 2e00 <coda_time_parts_to_string+0x890>
    2744:	mvn	r0, #103	; 0x67
    2748:	bl	0 <coda_set_error>
    274c:	mvn	r3, #0
    2750:	b	2dd8 <coda_time_parts_to_string+0x868>
    2754:	ldr	r3, [fp, #-16]
    2758:	ldr	r2, [fp, #20]
    275c:	add	r3, r2, r3
    2760:	ldr	r2, [fp, #-88]	; 0xffffffa8
    2764:	ldr	r1, [pc, #1688]	; 2e04 <coda_time_parts_to_string+0x894>
    2768:	mov	r0, r3
    276c:	bl	0 <sprintf>
    2770:	ldr	r3, [fp, #-12]
    2774:	add	r3, r3, #4
    2778:	str	r3, [fp, #-12]
    277c:	ldr	r3, [fp, #-16]
    2780:	add	r3, r3, #4
    2784:	str	r3, [fp, #-16]
    2788:	b	2d74 <coda_time_parts_to_string+0x804>
    278c:	ldr	r3, [fp, #-12]
    2790:	ldr	r2, [fp, #16]
    2794:	add	r3, r2, r3
    2798:	ldrb	r3, [r3]
    279c:	cmp	r3, #77	; 0x4d
    27a0:	bne	2888 <coda_time_parts_to_string+0x318>
    27a4:	ldr	r3, [fp, #-12]
    27a8:	add	r3, r3, #1
    27ac:	ldr	r2, [fp, #16]
    27b0:	add	r3, r2, r3
    27b4:	ldrb	r3, [r3]
    27b8:	cmp	r3, #77	; 0x4d
    27bc:	bne	2888 <coda_time_parts_to_string+0x318>
    27c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    27c4:	cmp	r3, #0
    27c8:	ble	27d8 <coda_time_parts_to_string+0x268>
    27cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
    27d0:	cmp	r3, #12
    27d4:	ble	27ec <coda_time_parts_to_string+0x27c>
    27d8:	ldr	r1, [pc, #1576]	; 2e08 <coda_time_parts_to_string+0x898>
    27dc:	mvn	r0, #103	; 0x67
    27e0:	bl	0 <coda_set_error>
    27e4:	mvn	r3, #0
    27e8:	b	2dd8 <coda_time_parts_to_string+0x868>
    27ec:	ldr	r3, [fp, #-12]
    27f0:	add	r3, r3, #2
    27f4:	ldr	r2, [fp, #16]
    27f8:	add	r3, r2, r3
    27fc:	ldrb	r3, [r3]
    2800:	cmp	r3, #77	; 0x4d
    2804:	bne	2850 <coda_time_parts_to_string+0x2e0>
    2808:	ldr	r3, [fp, #-16]
    280c:	ldr	r2, [fp, #20]
    2810:	add	r2, r2, r3
    2814:	ldr	r3, [fp, #-92]	; 0xffffffa4
    2818:	lsl	r3, r3, #2
    281c:	sub	r1, fp, #4
    2820:	add	r3, r1, r3
    2824:	ldr	r3, [r3, #-72]	; 0xffffffb8
    2828:	mov	r1, r3
    282c:	mov	r0, r2
    2830:	bl	0 <strcpy>
    2834:	ldr	r3, [fp, #-12]
    2838:	add	r3, r3, #3
    283c:	str	r3, [fp, #-12]
    2840:	ldr	r3, [fp, #-16]
    2844:	add	r3, r3, #3
    2848:	str	r3, [fp, #-16]
    284c:	b	2d74 <coda_time_parts_to_string+0x804>
    2850:	ldr	r3, [fp, #-16]
    2854:	ldr	r2, [fp, #20]
    2858:	add	r3, r2, r3
    285c:	ldr	r2, [fp, #-92]	; 0xffffffa4
    2860:	ldr	r1, [pc, #1444]	; 2e0c <coda_time_parts_to_string+0x89c>
    2864:	mov	r0, r3
    2868:	bl	0 <sprintf>
    286c:	ldr	r3, [fp, #-12]
    2870:	add	r3, r3, #2
    2874:	str	r3, [fp, #-12]
    2878:	ldr	r3, [fp, #-16]
    287c:	add	r3, r3, #2
    2880:	str	r3, [fp, #-16]
    2884:	b	2d74 <coda_time_parts_to_string+0x804>
    2888:	ldr	r3, [fp, #-12]
    288c:	ldr	r2, [fp, #16]
    2890:	add	r3, r2, r3
    2894:	ldrb	r3, [r3]
    2898:	cmp	r3, #100	; 0x64
    289c:	bne	2920 <coda_time_parts_to_string+0x3b0>
    28a0:	ldr	r3, [fp, #-12]
    28a4:	add	r3, r3, #1
    28a8:	ldr	r2, [fp, #16]
    28ac:	add	r3, r2, r3
    28b0:	ldrb	r3, [r3]
    28b4:	cmp	r3, #100	; 0x64
    28b8:	bne	2920 <coda_time_parts_to_string+0x3b0>
    28bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
    28c0:	cmp	r3, #0
    28c4:	ble	28d4 <coda_time_parts_to_string+0x364>
    28c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    28cc:	cmp	r3, #31
    28d0:	ble	28e8 <coda_time_parts_to_string+0x378>
    28d4:	ldr	r1, [pc, #1332]	; 2e10 <coda_time_parts_to_string+0x8a0>
    28d8:	mvn	r0, #103	; 0x67
    28dc:	bl	0 <coda_set_error>
    28e0:	mvn	r3, #0
    28e4:	b	2dd8 <coda_time_parts_to_string+0x868>
    28e8:	ldr	r3, [fp, #-16]
    28ec:	ldr	r2, [fp, #20]
    28f0:	add	r3, r2, r3
    28f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
    28f8:	ldr	r1, [pc, #1292]	; 2e0c <coda_time_parts_to_string+0x89c>
    28fc:	mov	r0, r3
    2900:	bl	0 <sprintf>
    2904:	ldr	r3, [fp, #-12]
    2908:	add	r3, r3, #2
    290c:	str	r3, [fp, #-12]
    2910:	ldr	r3, [fp, #-16]
    2914:	add	r3, r3, #2
    2918:	str	r3, [fp, #-16]
    291c:	b	2d74 <coda_time_parts_to_string+0x804>
    2920:	ldr	r3, [fp, #-12]
    2924:	ldr	r2, [fp, #16]
    2928:	add	r3, r2, r3
    292c:	ldrb	r3, [r3]
    2930:	cmp	r3, #68	; 0x44
    2934:	bne	2a04 <coda_time_parts_to_string+0x494>
    2938:	ldr	r3, [fp, #-12]
    293c:	add	r3, r3, #1
    2940:	ldr	r2, [fp, #16]
    2944:	add	r3, r2, r3
    2948:	ldrb	r3, [r3]
    294c:	cmp	r3, #68	; 0x44
    2950:	bne	2a04 <coda_time_parts_to_string+0x494>
    2954:	ldr	r3, [fp, #-12]
    2958:	add	r3, r3, #2
    295c:	ldr	r2, [fp, #16]
    2960:	add	r3, r2, r3
    2964:	ldrb	r3, [r3]
    2968:	cmp	r3, #68	; 0x44
    296c:	bne	2a04 <coda_time_parts_to_string+0x494>
    2970:	sub	r3, fp, #80	; 0x50
    2974:	ldr	r2, [fp, #-88]	; 0xffffffa8
    2978:	ldr	r1, [fp, #-92]	; 0xffffffa4
    297c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    2980:	bl	980 <dmy_to_mjd2000>
    2984:	mov	r3, r0
    2988:	cmp	r3, #0
    298c:	beq	2998 <coda_time_parts_to_string+0x428>
    2990:	mvn	r3, #0
    2994:	b	2dd8 <coda_time_parts_to_string+0x868>
    2998:	sub	r3, fp, #84	; 0x54
    299c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    29a0:	mov	r1, #1
    29a4:	mov	r0, #1
    29a8:	bl	980 <dmy_to_mjd2000>
    29ac:	mov	r3, r0
    29b0:	cmp	r3, #0
    29b4:	beq	29c0 <coda_time_parts_to_string+0x450>
    29b8:	mvn	r3, #0
    29bc:	b	2dd8 <coda_time_parts_to_string+0x868>
    29c0:	ldr	r3, [fp, #-16]
    29c4:	ldr	r2, [fp, #20]
    29c8:	add	r0, r2, r3
    29cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
    29d0:	ldr	r3, [fp, #-84]	; 0xffffffac
    29d4:	sub	r3, r2, r3
    29d8:	add	r3, r3, #1
    29dc:	mov	r2, r3
    29e0:	ldr	r1, [pc, #1068]	; 2e14 <coda_time_parts_to_string+0x8a4>
    29e4:	bl	0 <sprintf>
    29e8:	ldr	r3, [fp, #-12]
    29ec:	add	r3, r3, #3
    29f0:	str	r3, [fp, #-12]
    29f4:	ldr	r3, [fp, #-16]
    29f8:	add	r3, r3, #3
    29fc:	str	r3, [fp, #-16]
    2a00:	b	2d74 <coda_time_parts_to_string+0x804>
    2a04:	ldr	r3, [fp, #-12]
    2a08:	ldr	r2, [fp, #16]
    2a0c:	add	r3, r2, r3
    2a10:	ldrb	r3, [r3]
    2a14:	cmp	r3, #72	; 0x48
    2a18:	bne	2a9c <coda_time_parts_to_string+0x52c>
    2a1c:	ldr	r3, [fp, #-12]
    2a20:	add	r3, r3, #1
    2a24:	ldr	r2, [fp, #16]
    2a28:	add	r3, r2, r3
    2a2c:	ldrb	r3, [r3]
    2a30:	cmp	r3, #72	; 0x48
    2a34:	bne	2a9c <coda_time_parts_to_string+0x52c>
    2a38:	ldr	r3, [fp, #-100]	; 0xffffff9c
    2a3c:	cmp	r3, #0
    2a40:	blt	2a50 <coda_time_parts_to_string+0x4e0>
    2a44:	ldr	r3, [fp, #-100]	; 0xffffff9c
    2a48:	cmp	r3, #23
    2a4c:	ble	2a64 <coda_time_parts_to_string+0x4f4>
    2a50:	ldr	r1, [pc, #960]	; 2e18 <coda_time_parts_to_string+0x8a8>
    2a54:	mvn	r0, #103	; 0x67
    2a58:	bl	0 <coda_set_error>
    2a5c:	mvn	r3, #0
    2a60:	b	2dd8 <coda_time_parts_to_string+0x868>
    2a64:	ldr	r3, [fp, #-16]
    2a68:	ldr	r2, [fp, #20]
    2a6c:	add	r3, r2, r3
    2a70:	ldr	r2, [fp, #-100]	; 0xffffff9c
    2a74:	ldr	r1, [pc, #912]	; 2e0c <coda_time_parts_to_string+0x89c>
    2a78:	mov	r0, r3
    2a7c:	bl	0 <sprintf>
    2a80:	ldr	r3, [fp, #-12]
    2a84:	add	r3, r3, #2
    2a88:	str	r3, [fp, #-12]
    2a8c:	ldr	r3, [fp, #-16]
    2a90:	add	r3, r3, #2
    2a94:	str	r3, [fp, #-16]
    2a98:	b	2d74 <coda_time_parts_to_string+0x804>
    2a9c:	ldr	r3, [fp, #-12]
    2aa0:	ldr	r2, [fp, #16]
    2aa4:	add	r3, r2, r3
    2aa8:	ldrb	r3, [r3]
    2aac:	cmp	r3, #109	; 0x6d
    2ab0:	bne	2b34 <coda_time_parts_to_string+0x5c4>
    2ab4:	ldr	r3, [fp, #-12]
    2ab8:	add	r3, r3, #1
    2abc:	ldr	r2, [fp, #16]
    2ac0:	add	r3, r2, r3
    2ac4:	ldrb	r3, [r3]
    2ac8:	cmp	r3, #109	; 0x6d
    2acc:	bne	2b34 <coda_time_parts_to_string+0x5c4>
    2ad0:	ldr	r3, [fp, #4]
    2ad4:	cmp	r3, #0
    2ad8:	blt	2ae8 <coda_time_parts_to_string+0x578>
    2adc:	ldr	r3, [fp, #4]
    2ae0:	cmp	r3, #59	; 0x3b
    2ae4:	ble	2afc <coda_time_parts_to_string+0x58c>
    2ae8:	ldr	r1, [pc, #812]	; 2e1c <coda_time_parts_to_string+0x8ac>
    2aec:	mvn	r0, #103	; 0x67
    2af0:	bl	0 <coda_set_error>
    2af4:	mvn	r3, #0
    2af8:	b	2dd8 <coda_time_parts_to_string+0x868>
    2afc:	ldr	r3, [fp, #-16]
    2b00:	ldr	r2, [fp, #20]
    2b04:	add	r3, r2, r3
    2b08:	ldr	r2, [fp, #4]
    2b0c:	ldr	r1, [pc, #760]	; 2e0c <coda_time_parts_to_string+0x89c>
    2b10:	mov	r0, r3
    2b14:	bl	0 <sprintf>
    2b18:	ldr	r3, [fp, #-12]
    2b1c:	add	r3, r3, #2
    2b20:	str	r3, [fp, #-12]
    2b24:	ldr	r3, [fp, #-16]
    2b28:	add	r3, r3, #2
    2b2c:	str	r3, [fp, #-16]
    2b30:	b	2d74 <coda_time_parts_to_string+0x804>
    2b34:	ldr	r3, [fp, #-12]
    2b38:	ldr	r2, [fp, #16]
    2b3c:	add	r3, r2, r3
    2b40:	ldrb	r3, [r3]
    2b44:	cmp	r3, #115	; 0x73
    2b48:	bne	2bcc <coda_time_parts_to_string+0x65c>
    2b4c:	ldr	r3, [fp, #-12]
    2b50:	add	r3, r3, #1
    2b54:	ldr	r2, [fp, #16]
    2b58:	add	r3, r2, r3
    2b5c:	ldrb	r3, [r3]
    2b60:	cmp	r3, #115	; 0x73
    2b64:	bne	2bcc <coda_time_parts_to_string+0x65c>
    2b68:	ldr	r3, [fp, #8]
    2b6c:	cmp	r3, #0
    2b70:	blt	2b80 <coda_time_parts_to_string+0x610>
    2b74:	ldr	r3, [fp, #8]
    2b78:	cmp	r3, #60	; 0x3c
    2b7c:	ble	2b94 <coda_time_parts_to_string+0x624>
    2b80:	ldr	r1, [pc, #664]	; 2e20 <coda_time_parts_to_string+0x8b0>
    2b84:	mvn	r0, #103	; 0x67
    2b88:	bl	0 <coda_set_error>
    2b8c:	mvn	r3, #0
    2b90:	b	2dd8 <coda_time_parts_to_string+0x868>
    2b94:	ldr	r3, [fp, #-16]
    2b98:	ldr	r2, [fp, #20]
    2b9c:	add	r3, r2, r3
    2ba0:	ldr	r2, [fp, #8]
    2ba4:	ldr	r1, [pc, #608]	; 2e0c <coda_time_parts_to_string+0x89c>
    2ba8:	mov	r0, r3
    2bac:	bl	0 <sprintf>
    2bb0:	ldr	r3, [fp, #-12]
    2bb4:	add	r3, r3, #2
    2bb8:	str	r3, [fp, #-12]
    2bbc:	ldr	r3, [fp, #-16]
    2bc0:	add	r3, r3, #2
    2bc4:	str	r3, [fp, #-16]
    2bc8:	b	2d74 <coda_time_parts_to_string+0x804>
    2bcc:	ldr	r3, [fp, #-12]
    2bd0:	ldr	r2, [fp, #16]
    2bd4:	add	r3, r2, r3
    2bd8:	ldrb	r3, [r3]
    2bdc:	cmp	r3, #83	; 0x53
    2be0:	bne	2cc4 <coda_time_parts_to_string+0x754>
    2be4:	ldr	r3, [fp, #12]
    2be8:	str	r3, [fp, #-20]	; 0xffffffec
    2bec:	mov	r3, #0
    2bf0:	str	r3, [fp, #-24]	; 0xffffffe8
    2bf4:	ldr	r3, [fp, #12]
    2bf8:	cmp	r3, #0
    2bfc:	blt	2c10 <coda_time_parts_to_string+0x6a0>
    2c00:	ldr	r3, [fp, #12]
    2c04:	ldr	r2, [pc, #536]	; 2e24 <coda_time_parts_to_string+0x8b4>
    2c08:	cmp	r3, r2
    2c0c:	ble	2c3c <coda_time_parts_to_string+0x6cc>
    2c10:	ldr	r1, [pc, #528]	; 2e28 <coda_time_parts_to_string+0x8b8>
    2c14:	mvn	r0, #103	; 0x67
    2c18:	bl	0 <coda_set_error>
    2c1c:	mvn	r3, #0
    2c20:	b	2dd8 <coda_time_parts_to_string+0x868>
    2c24:	ldr	r3, [fp, #-12]
    2c28:	add	r3, r3, #1
    2c2c:	str	r3, [fp, #-12]
    2c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c34:	add	r3, r3, #1
    2c38:	str	r3, [fp, #-24]	; 0xffffffe8
    2c3c:	ldr	r3, [fp, #-12]
    2c40:	ldr	r2, [fp, #16]
    2c44:	add	r3, r2, r3
    2c48:	ldrb	r3, [r3]
    2c4c:	cmp	r3, #83	; 0x53
    2c50:	beq	2c24 <coda_time_parts_to_string+0x6b4>
    2c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c58:	str	r3, [fp, #-28]	; 0xffffffe4
    2c5c:	b	2c88 <coda_time_parts_to_string+0x718>
    2c60:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c64:	ldr	r2, [pc, #448]	; 2e2c <coda_time_parts_to_string+0x8bc>
    2c68:	smull	r1, r2, r2, r3
    2c6c:	asr	r2, r2, #2
    2c70:	asr	r3, r3, #31
    2c74:	sub	r3, r2, r3
    2c78:	str	r3, [fp, #-20]	; 0xffffffec
    2c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c80:	add	r3, r3, #1
    2c84:	str	r3, [fp, #-28]	; 0xffffffe4
    2c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c8c:	cmp	r3, #5
    2c90:	ble	2c60 <coda_time_parts_to_string+0x6f0>
    2c94:	ldr	r3, [fp, #-16]
    2c98:	ldr	r2, [fp, #20]
    2c9c:	add	r0, r2, r3
    2ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ca8:	ldr	r1, [pc, #384]	; 2e30 <coda_time_parts_to_string+0x8c0>
    2cac:	bl	0 <sprintf>
    2cb0:	ldr	r2, [fp, #-16]
    2cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2cb8:	add	r3, r2, r3
    2cbc:	str	r3, [fp, #-16]
    2cc0:	b	2d74 <coda_time_parts_to_string+0x804>
    2cc4:	ldr	r3, [fp, #-12]
    2cc8:	ldr	r2, [fp, #16]
    2ccc:	add	r3, r2, r3
    2cd0:	ldrb	r3, [r3]
    2cd4:	cmp	r3, #64	; 0x40
    2cd8:	bls	2cf4 <coda_time_parts_to_string+0x784>
    2cdc:	ldr	r3, [fp, #-12]
    2ce0:	ldr	r2, [fp, #16]
    2ce4:	add	r3, r2, r3
    2ce8:	ldrb	r3, [r3]
    2cec:	cmp	r3, #90	; 0x5a
    2cf0:	bls	2d24 <coda_time_parts_to_string+0x7b4>
    2cf4:	ldr	r3, [fp, #-12]
    2cf8:	ldr	r2, [fp, #16]
    2cfc:	add	r3, r2, r3
    2d00:	ldrb	r3, [r3]
    2d04:	cmp	r3, #96	; 0x60
    2d08:	bls	2d3c <coda_time_parts_to_string+0x7cc>
    2d0c:	ldr	r3, [fp, #-12]
    2d10:	ldr	r2, [fp, #16]
    2d14:	add	r3, r2, r3
    2d18:	ldrb	r3, [r3]
    2d1c:	cmp	r3, #122	; 0x7a
    2d20:	bhi	2d3c <coda_time_parts_to_string+0x7cc>
    2d24:	ldr	r2, [fp, #16]
    2d28:	ldr	r1, [pc, #260]	; 2e34 <coda_time_parts_to_string+0x8c4>
    2d2c:	mvn	r0, #102	; 0x66
    2d30:	bl	0 <coda_set_error>
    2d34:	mvn	r3, #0
    2d38:	b	2dd8 <coda_time_parts_to_string+0x868>
    2d3c:	ldr	r3, [fp, #-16]
    2d40:	ldr	r2, [fp, #20]
    2d44:	add	r3, r2, r3
    2d48:	ldr	r2, [fp, #-12]
    2d4c:	ldr	r1, [fp, #16]
    2d50:	add	r2, r1, r2
    2d54:	ldrb	r2, [r2]
    2d58:	strb	r2, [r3]
    2d5c:	ldr	r3, [fp, #-12]
    2d60:	add	r3, r3, #1
    2d64:	str	r3, [fp, #-12]
    2d68:	ldr	r3, [fp, #-16]
    2d6c:	add	r3, r3, #1
    2d70:	str	r3, [fp, #-16]
    2d74:	ldr	r3, [fp, #-12]
    2d78:	ldr	r2, [fp, #16]
    2d7c:	add	r3, r2, r3
    2d80:	ldrb	r3, [r3]
    2d84:	cmp	r3, #0
    2d88:	beq	2db0 <coda_time_parts_to_string+0x840>
    2d8c:	ldr	r3, [fp, #-8]
    2d90:	cmp	r3, #0
    2d94:	bne	2618 <coda_time_parts_to_string+0xa8>
    2d98:	ldr	r3, [fp, #-12]
    2d9c:	ldr	r2, [fp, #16]
    2da0:	add	r3, r2, r3
    2da4:	ldrb	r3, [r3]
    2da8:	cmp	r3, #124	; 0x7c
    2dac:	bne	2618 <coda_time_parts_to_string+0xa8>
    2db0:	ldr	r3, [fp, #-8]
    2db4:	cmp	r3, #0
    2db8:	beq	2dd4 <coda_time_parts_to_string+0x864>
    2dbc:	ldr	r2, [fp, #16]
    2dc0:	ldr	r1, [pc, #112]	; 2e38 <coda_time_parts_to_string+0x8c8>
    2dc4:	mvn	r0, #102	; 0x66
    2dc8:	bl	0 <coda_set_error>
    2dcc:	mvn	r3, #0
    2dd0:	b	2dd8 <coda_time_parts_to_string+0x868>
    2dd4:	mov	r3, #0
    2dd8:	mov	r0, r3
    2ddc:	sub	sp, fp, #4
    2de0:	pop	{fp, pc}
    2de4:	.word	0x000005d4
    2de8:	.word	0x0000042d
    2dec:	.word	0x000000ac
    2df0:	.word	0x0000037c
    2df4:	.word	0x00000432
    2df8:	.word	0x0000039c
    2dfc:	.word	0x0000270f
    2e00:	.word	0x000003bc
    2e04:	.word	0x00000400
    2e08:	.word	0x00000408
    2e0c:	.word	0x00000438
    2e10:	.word	0x00000440
    2e14:	.word	0x0000046c
    2e18:	.word	0x00000474
    2e1c:	.word	0x000004a0
    2e20:	.word	0x000004d0
    2e24:	.word	0x000f423f
    2e28:	.word	0x00000500
    2e2c:	.word	0x66666667
    2e30:	.word	0x00000538
    2e34:	.word	0x00000540
    2e38:	.word	0x00000578

00002e3c <string_to_parts>:
    2e3c:	push	{fp, lr}
    2e40:	add	fp, sp, #4
    2e44:	sub	sp, sp, #40	; 0x28
    2e48:	str	r0, [fp, #-32]	; 0xffffffe0
    2e4c:	str	r1, [fp, #-36]	; 0xffffffdc
    2e50:	str	r2, [fp, #-40]	; 0xffffffd8
    2e54:	str	r3, [fp, #-44]	; 0xffffffd4
    2e58:	mov	r3, #0
    2e5c:	str	r3, [fp, #-8]
    2e60:	mov	r3, #0
    2e64:	str	r3, [fp, #-12]
    2e68:	mov	r3, #0
    2e6c:	str	r3, [fp, #-16]
    2e70:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2e74:	mov	r2, #2000	; 0x7d0
    2e78:	str	r2, [r3]
    2e7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2e80:	mov	r2, #1
    2e84:	str	r2, [r3]
    2e88:	ldr	r3, [fp, #4]
    2e8c:	mov	r2, #1
    2e90:	str	r2, [r3]
    2e94:	ldr	r3, [fp, #8]
    2e98:	mov	r2, #0
    2e9c:	str	r2, [r3]
    2ea0:	ldr	r3, [fp, #12]
    2ea4:	mov	r2, #0
    2ea8:	str	r2, [r3]
    2eac:	ldr	r3, [fp, #16]
    2eb0:	mov	r2, #0
    2eb4:	str	r2, [r3]
    2eb8:	ldr	r3, [fp, #20]
    2ebc:	mov	r2, #0
    2ec0:	str	r2, [r3]
    2ec4:	b	38c0 <string_to_parts+0xa84>
    2ec8:	ldr	r3, [fp, #-8]
    2ecc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2ed0:	add	r3, r2, r3
    2ed4:	ldrb	r3, [r3]
    2ed8:	cmp	r3, #39	; 0x27
    2edc:	bne	2f20 <string_to_parts+0xe4>
    2ee0:	ldr	r3, [fp, #-8]
    2ee4:	add	r3, r3, #1
    2ee8:	str	r3, [fp, #-8]
    2eec:	ldr	r3, [fp, #-8]
    2ef0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2ef4:	add	r3, r2, r3
    2ef8:	ldrb	r3, [r3]
    2efc:	cmp	r3, #39	; 0x27
    2f00:	beq	2f20 <string_to_parts+0xe4>
    2f04:	ldr	r3, [fp, #-16]
    2f08:	cmp	r3, #0
    2f0c:	moveq	r3, #1
    2f10:	movne	r3, #0
    2f14:	uxtb	r3, r3
    2f18:	str	r3, [fp, #-16]
    2f1c:	b	38c0 <string_to_parts+0xa84>
    2f20:	ldr	r3, [fp, #-16]
    2f24:	cmp	r3, #0
    2f28:	beq	2f8c <string_to_parts+0x150>
    2f2c:	ldr	r3, [fp, #-8]
    2f30:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2f34:	add	r3, r2, r3
    2f38:	ldrb	r2, [r3]
    2f3c:	ldr	r3, [fp, #-12]
    2f40:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2f44:	add	r3, r1, r3
    2f48:	ldrb	r3, [r3]
    2f4c:	cmp	r2, r3
    2f50:	beq	2f70 <string_to_parts+0x134>
    2f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2f58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2f5c:	ldr	r1, [pc, #2560]	; 3964 <string_to_parts+0xb28>
    2f60:	mvn	r0, #103	; 0x67
    2f64:	bl	0 <coda_set_error>
    2f68:	mvn	r3, #0
    2f6c:	b	3958 <string_to_parts+0xb1c>
    2f70:	ldr	r3, [fp, #-8]
    2f74:	add	r3, r3, #1
    2f78:	str	r3, [fp, #-8]
    2f7c:	ldr	r3, [fp, #-12]
    2f80:	add	r3, r3, #1
    2f84:	str	r3, [fp, #-12]
    2f88:	b	38c0 <string_to_parts+0xa84>
    2f8c:	ldr	r3, [fp, #-8]
    2f90:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2f94:	add	r3, r2, r3
    2f98:	ldrb	r3, [r3]
    2f9c:	cmp	r3, #121	; 0x79
    2fa0:	bne	30a4 <string_to_parts+0x268>
    2fa4:	ldr	r3, [fp, #-8]
    2fa8:	add	r3, r3, #1
    2fac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2fb0:	add	r3, r2, r3
    2fb4:	ldrb	r3, [r3]
    2fb8:	cmp	r3, #121	; 0x79
    2fbc:	bne	30a4 <string_to_parts+0x268>
    2fc0:	ldr	r3, [fp, #-8]
    2fc4:	add	r3, r3, #2
    2fc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2fcc:	add	r3, r2, r3
    2fd0:	ldrb	r3, [r3]
    2fd4:	cmp	r3, #121	; 0x79
    2fd8:	bne	30a4 <string_to_parts+0x268>
    2fdc:	ldr	r3, [fp, #-8]
    2fe0:	add	r3, r3, #3
    2fe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2fe8:	add	r3, r2, r3
    2fec:	ldrb	r3, [r3]
    2ff0:	cmp	r3, #121	; 0x79
    2ff4:	bne	30a4 <string_to_parts+0x268>
    2ff8:	ldr	r3, [fp, #-8]
    2ffc:	add	r3, r3, #4
    3000:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3004:	add	r3, r2, r3
    3008:	ldrb	r3, [r3]
    300c:	cmp	r3, #42	; 0x2a
    3010:	moveq	r3, #1
    3014:	movne	r3, #0
    3018:	uxtb	r3, r3
    301c:	str	r3, [fp, #-24]	; 0xffffffe8
    3020:	ldr	r3, [fp, #-12]
    3024:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3028:	add	r0, r2, r3
    302c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3030:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3034:	mov	r1, #4
    3038:	bl	274 <parse_integer>
    303c:	mov	r3, r0
    3040:	cmp	r3, #0
    3044:	beq	3064 <string_to_parts+0x228>
    3048:	ldr	r3, [fp, #-32]	; 0xffffffe0
    304c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3050:	ldr	r1, [pc, #2320]	; 3968 <string_to_parts+0xb2c>
    3054:	mvn	r0, #103	; 0x67
    3058:	bl	0 <coda_set_error>
    305c:	mvn	r3, #0
    3060:	b	3958 <string_to_parts+0xb1c>
    3064:	ldr	r3, [fp, #-8]
    3068:	ldr	r2, [fp, #-32]	; 0xffffffe0
    306c:	add	r3, r2, r3
    3070:	ldrb	r3, [r3]
    3074:	cmp	r3, #42	; 0x2a
    3078:	bne	3084 <string_to_parts+0x248>
    307c:	mov	r3, #5
    3080:	b	3088 <string_to_parts+0x24c>
    3084:	mov	r3, #4
    3088:	ldr	r2, [fp, #-8]
    308c:	add	r3, r2, r3
    3090:	str	r3, [fp, #-8]
    3094:	ldr	r3, [fp, #-12]
    3098:	add	r3, r3, #4
    309c:	str	r3, [fp, #-12]
    30a0:	b	38c0 <string_to_parts+0xa84>
    30a4:	ldr	r3, [fp, #-8]
    30a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    30ac:	add	r3, r2, r3
    30b0:	ldrb	r3, [r3]
    30b4:	cmp	r3, #77	; 0x4d
    30b8:	bne	320c <string_to_parts+0x3d0>
    30bc:	ldr	r3, [fp, #-8]
    30c0:	add	r3, r3, #1
    30c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    30c8:	add	r3, r2, r3
    30cc:	ldrb	r3, [r3]
    30d0:	cmp	r3, #77	; 0x4d
    30d4:	bne	320c <string_to_parts+0x3d0>
    30d8:	ldr	r3, [fp, #-8]
    30dc:	add	r3, r3, #2
    30e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    30e4:	add	r3, r2, r3
    30e8:	ldrb	r3, [r3]
    30ec:	cmp	r3, #77	; 0x4d
    30f0:	bne	315c <string_to_parts+0x320>
    30f4:	ldr	r3, [fp, #-12]
    30f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    30fc:	add	r3, r2, r3
    3100:	mov	r0, r3
    3104:	bl	0 <coda_month_to_integer>
    3108:	mov	r2, r0
    310c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3110:	str	r2, [r3]
    3114:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3118:	ldr	r3, [r3]
    311c:	cmn	r3, #1
    3120:	bne	3140 <string_to_parts+0x304>
    3124:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3128:	ldr	r2, [fp, #-36]	; 0xffffffdc
    312c:	ldr	r1, [pc, #2104]	; 396c <string_to_parts+0xb30>
    3130:	mvn	r0, #103	; 0x67
    3134:	bl	0 <coda_set_error>
    3138:	mvn	r3, #0
    313c:	b	3958 <string_to_parts+0xb1c>
    3140:	ldr	r3, [fp, #-8]
    3144:	add	r3, r3, #3
    3148:	str	r3, [fp, #-8]
    314c:	ldr	r3, [fp, #-12]
    3150:	add	r3, r3, #3
    3154:	str	r3, [fp, #-12]
    3158:	b	38c0 <string_to_parts+0xa84>
    315c:	ldr	r3, [fp, #-8]
    3160:	add	r3, r3, #2
    3164:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3168:	add	r3, r2, r3
    316c:	ldrb	r3, [r3]
    3170:	cmp	r3, #42	; 0x2a
    3174:	moveq	r3, #1
    3178:	movne	r3, #0
    317c:	uxtb	r3, r3
    3180:	str	r3, [fp, #-24]	; 0xffffffe8
    3184:	ldr	r3, [fp, #-12]
    3188:	ldr	r2, [fp, #-36]	; 0xffffffdc
    318c:	add	r0, r2, r3
    3190:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3194:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3198:	mov	r1, #2
    319c:	bl	274 <parse_integer>
    31a0:	mov	r3, r0
    31a4:	cmp	r3, #0
    31a8:	beq	31c8 <string_to_parts+0x38c>
    31ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    31b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    31b4:	ldr	r1, [pc, #1968]	; 396c <string_to_parts+0xb30>
    31b8:	mvn	r0, #103	; 0x67
    31bc:	bl	0 <coda_set_error>
    31c0:	mvn	r3, #0
    31c4:	b	3958 <string_to_parts+0xb1c>
    31c8:	ldr	r3, [fp, #-8]
    31cc:	add	r3, r3, #2
    31d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    31d4:	add	r3, r2, r3
    31d8:	ldrb	r3, [r3]
    31dc:	cmp	r3, #42	; 0x2a
    31e0:	bne	31ec <string_to_parts+0x3b0>
    31e4:	mov	r3, #3
    31e8:	b	31f0 <string_to_parts+0x3b4>
    31ec:	mov	r3, #2
    31f0:	ldr	r2, [fp, #-8]
    31f4:	add	r3, r2, r3
    31f8:	str	r3, [fp, #-8]
    31fc:	ldr	r3, [fp, #-12]
    3200:	add	r3, r3, #2
    3204:	str	r3, [fp, #-12]
    3208:	b	38c0 <string_to_parts+0xa84>
    320c:	ldr	r3, [fp, #-8]
    3210:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3214:	add	r3, r2, r3
    3218:	ldrb	r3, [r3]
    321c:	cmp	r3, #100	; 0x64
    3220:	bne	32f0 <string_to_parts+0x4b4>
    3224:	ldr	r3, [fp, #-8]
    3228:	add	r3, r3, #1
    322c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3230:	add	r3, r2, r3
    3234:	ldrb	r3, [r3]
    3238:	cmp	r3, #100	; 0x64
    323c:	bne	32f0 <string_to_parts+0x4b4>
    3240:	ldr	r3, [fp, #-8]
    3244:	add	r3, r3, #2
    3248:	ldr	r2, [fp, #-32]	; 0xffffffe0
    324c:	add	r3, r2, r3
    3250:	ldrb	r3, [r3]
    3254:	cmp	r3, #42	; 0x2a
    3258:	moveq	r3, #1
    325c:	movne	r3, #0
    3260:	uxtb	r3, r3
    3264:	str	r3, [fp, #-24]	; 0xffffffe8
    3268:	ldr	r3, [fp, #-12]
    326c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3270:	add	r0, r2, r3
    3274:	ldr	r3, [fp, #4]
    3278:	ldr	r2, [fp, #-24]	; 0xffffffe8
    327c:	mov	r1, #2
    3280:	bl	274 <parse_integer>
    3284:	mov	r3, r0
    3288:	cmp	r3, #0
    328c:	beq	32ac <string_to_parts+0x470>
    3290:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3294:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3298:	ldr	r1, [pc, #1744]	; 3970 <string_to_parts+0xb34>
    329c:	mvn	r0, #103	; 0x67
    32a0:	bl	0 <coda_set_error>
    32a4:	mvn	r3, #0
    32a8:	b	3958 <string_to_parts+0xb1c>
    32ac:	ldr	r3, [fp, #-8]
    32b0:	add	r3, r3, #2
    32b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    32b8:	add	r3, r2, r3
    32bc:	ldrb	r3, [r3]
    32c0:	cmp	r3, #42	; 0x2a
    32c4:	bne	32d0 <string_to_parts+0x494>
    32c8:	mov	r3, #3
    32cc:	b	32d4 <string_to_parts+0x498>
    32d0:	mov	r3, #2
    32d4:	ldr	r2, [fp, #-8]
    32d8:	add	r3, r2, r3
    32dc:	str	r3, [fp, #-8]
    32e0:	ldr	r3, [fp, #-12]
    32e4:	add	r3, r3, #2
    32e8:	str	r3, [fp, #-12]
    32ec:	b	38c0 <string_to_parts+0xa84>
    32f0:	ldr	r3, [fp, #-8]
    32f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    32f8:	add	r3, r2, r3
    32fc:	ldrb	r3, [r3]
    3300:	cmp	r3, #68	; 0x44
    3304:	bne	3430 <string_to_parts+0x5f4>
    3308:	ldr	r3, [fp, #-8]
    330c:	add	r3, r3, #1
    3310:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3314:	add	r3, r2, r3
    3318:	ldrb	r3, [r3]
    331c:	cmp	r3, #68	; 0x44
    3320:	bne	3430 <string_to_parts+0x5f4>
    3324:	ldr	r3, [fp, #-8]
    3328:	add	r3, r3, #2
    332c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3330:	add	r3, r2, r3
    3334:	ldrb	r3, [r3]
    3338:	cmp	r3, #68	; 0x44
    333c:	bne	3430 <string_to_parts+0x5f4>
    3340:	ldr	r3, [fp, #-8]
    3344:	add	r3, r3, #3
    3348:	ldr	r2, [fp, #-32]	; 0xffffffe0
    334c:	add	r3, r2, r3
    3350:	ldrb	r3, [r3]
    3354:	cmp	r3, #42	; 0x2a
    3358:	moveq	r3, #1
    335c:	movne	r3, #0
    3360:	uxtb	r3, r3
    3364:	str	r3, [fp, #-24]	; 0xffffffe8
    3368:	ldr	r3, [fp, #-12]
    336c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3370:	add	r0, r2, r3
    3374:	sub	r3, fp, #28
    3378:	ldr	r2, [fp, #-24]	; 0xffffffe8
    337c:	mov	r1, #3
    3380:	bl	274 <parse_integer>
    3384:	mov	r3, r0
    3388:	cmp	r3, #0
    338c:	beq	33ac <string_to_parts+0x570>
    3390:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3394:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3398:	ldr	r1, [pc, #1488]	; 3970 <string_to_parts+0xb34>
    339c:	mvn	r0, #103	; 0x67
    33a0:	bl	0 <coda_set_error>
    33a4:	mvn	r3, #0
    33a8:	b	3958 <string_to_parts+0xb1c>
    33ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    33b0:	ldr	r0, [r3]
    33b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    33b8:	ldr	r3, [fp, #4]
    33bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    33c0:	bl	1368 <coda_dayofyear_to_month_day>
    33c4:	mov	r3, r0
    33c8:	cmp	r3, #0
    33cc:	beq	33ec <string_to_parts+0x5b0>
    33d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    33d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    33d8:	ldr	r1, [pc, #1428]	; 3974 <string_to_parts+0xb38>
    33dc:	mvn	r0, #103	; 0x67
    33e0:	bl	0 <coda_set_error>
    33e4:	mvn	r3, #0
    33e8:	b	3958 <string_to_parts+0xb1c>
    33ec:	ldr	r3, [fp, #-8]
    33f0:	add	r3, r3, #3
    33f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    33f8:	add	r3, r2, r3
    33fc:	ldrb	r3, [r3]
    3400:	cmp	r3, #42	; 0x2a
    3404:	bne	3410 <string_to_parts+0x5d4>
    3408:	mov	r3, #4
    340c:	b	3414 <string_to_parts+0x5d8>
    3410:	mov	r3, #3
    3414:	ldr	r2, [fp, #-8]
    3418:	add	r3, r2, r3
    341c:	str	r3, [fp, #-8]
    3420:	ldr	r3, [fp, #-12]
    3424:	add	r3, r3, #3
    3428:	str	r3, [fp, #-12]
    342c:	b	38c0 <string_to_parts+0xa84>
    3430:	ldr	r3, [fp, #-8]
    3434:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3438:	add	r3, r2, r3
    343c:	ldrb	r3, [r3]
    3440:	cmp	r3, #72	; 0x48
    3444:	bne	3514 <string_to_parts+0x6d8>
    3448:	ldr	r3, [fp, #-8]
    344c:	add	r3, r3, #1
    3450:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3454:	add	r3, r2, r3
    3458:	ldrb	r3, [r3]
    345c:	cmp	r3, #72	; 0x48
    3460:	bne	3514 <string_to_parts+0x6d8>
    3464:	ldr	r3, [fp, #-8]
    3468:	add	r3, r3, #2
    346c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3470:	add	r3, r2, r3
    3474:	ldrb	r3, [r3]
    3478:	cmp	r3, #42	; 0x2a
    347c:	moveq	r3, #1
    3480:	movne	r3, #0
    3484:	uxtb	r3, r3
    3488:	str	r3, [fp, #-24]	; 0xffffffe8
    348c:	ldr	r3, [fp, #-12]
    3490:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3494:	add	r0, r2, r3
    3498:	ldr	r3, [fp, #8]
    349c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    34a0:	mov	r1, #2
    34a4:	bl	274 <parse_integer>
    34a8:	mov	r3, r0
    34ac:	cmp	r3, #0
    34b0:	beq	34d0 <string_to_parts+0x694>
    34b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    34bc:	ldr	r1, [pc, #1204]	; 3978 <string_to_parts+0xb3c>
    34c0:	mvn	r0, #103	; 0x67
    34c4:	bl	0 <coda_set_error>
    34c8:	mvn	r3, #0
    34cc:	b	3958 <string_to_parts+0xb1c>
    34d0:	ldr	r3, [fp, #-8]
    34d4:	add	r3, r3, #2
    34d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    34dc:	add	r3, r2, r3
    34e0:	ldrb	r3, [r3]
    34e4:	cmp	r3, #42	; 0x2a
    34e8:	bne	34f4 <string_to_parts+0x6b8>
    34ec:	mov	r3, #3
    34f0:	b	34f8 <string_to_parts+0x6bc>
    34f4:	mov	r3, #2
    34f8:	ldr	r2, [fp, #-8]
    34fc:	add	r3, r2, r3
    3500:	str	r3, [fp, #-8]
    3504:	ldr	r3, [fp, #-12]
    3508:	add	r3, r3, #2
    350c:	str	r3, [fp, #-12]
    3510:	b	38c0 <string_to_parts+0xa84>
    3514:	ldr	r3, [fp, #-8]
    3518:	ldr	r2, [fp, #-32]	; 0xffffffe0
    351c:	add	r3, r2, r3
    3520:	ldrb	r3, [r3]
    3524:	cmp	r3, #109	; 0x6d
    3528:	bne	35f8 <string_to_parts+0x7bc>
    352c:	ldr	r3, [fp, #-8]
    3530:	add	r3, r3, #1
    3534:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3538:	add	r3, r2, r3
    353c:	ldrb	r3, [r3]
    3540:	cmp	r3, #109	; 0x6d
    3544:	bne	35f8 <string_to_parts+0x7bc>
    3548:	ldr	r3, [fp, #-8]
    354c:	add	r3, r3, #2
    3550:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3554:	add	r3, r2, r3
    3558:	ldrb	r3, [r3]
    355c:	cmp	r3, #42	; 0x2a
    3560:	moveq	r3, #1
    3564:	movne	r3, #0
    3568:	uxtb	r3, r3
    356c:	str	r3, [fp, #-24]	; 0xffffffe8
    3570:	ldr	r3, [fp, #-12]
    3574:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3578:	add	r0, r2, r3
    357c:	ldr	r3, [fp, #12]
    3580:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3584:	mov	r1, #2
    3588:	bl	274 <parse_integer>
    358c:	mov	r3, r0
    3590:	cmp	r3, #0
    3594:	beq	35b4 <string_to_parts+0x778>
    3598:	ldr	r3, [fp, #-32]	; 0xffffffe0
    359c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    35a0:	ldr	r1, [pc, #980]	; 397c <string_to_parts+0xb40>
    35a4:	mvn	r0, #103	; 0x67
    35a8:	bl	0 <coda_set_error>
    35ac:	mvn	r3, #0
    35b0:	b	3958 <string_to_parts+0xb1c>
    35b4:	ldr	r3, [fp, #-8]
    35b8:	add	r3, r3, #2
    35bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    35c0:	add	r3, r2, r3
    35c4:	ldrb	r3, [r3]
    35c8:	cmp	r3, #42	; 0x2a
    35cc:	bne	35d8 <string_to_parts+0x79c>
    35d0:	mov	r3, #3
    35d4:	b	35dc <string_to_parts+0x7a0>
    35d8:	mov	r3, #2
    35dc:	ldr	r2, [fp, #-8]
    35e0:	add	r3, r2, r3
    35e4:	str	r3, [fp, #-8]
    35e8:	ldr	r3, [fp, #-12]
    35ec:	add	r3, r3, #2
    35f0:	str	r3, [fp, #-12]
    35f4:	b	38c0 <string_to_parts+0xa84>
    35f8:	ldr	r3, [fp, #-8]
    35fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3600:	add	r3, r2, r3
    3604:	ldrb	r3, [r3]
    3608:	cmp	r3, #115	; 0x73
    360c:	bne	36dc <string_to_parts+0x8a0>
    3610:	ldr	r3, [fp, #-8]
    3614:	add	r3, r3, #1
    3618:	ldr	r2, [fp, #-32]	; 0xffffffe0
    361c:	add	r3, r2, r3
    3620:	ldrb	r3, [r3]
    3624:	cmp	r3, #115	; 0x73
    3628:	bne	36dc <string_to_parts+0x8a0>
    362c:	ldr	r3, [fp, #-8]
    3630:	add	r3, r3, #2
    3634:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3638:	add	r3, r2, r3
    363c:	ldrb	r3, [r3]
    3640:	cmp	r3, #42	; 0x2a
    3644:	moveq	r3, #1
    3648:	movne	r3, #0
    364c:	uxtb	r3, r3
    3650:	str	r3, [fp, #-24]	; 0xffffffe8
    3654:	ldr	r3, [fp, #-12]
    3658:	ldr	r2, [fp, #-36]	; 0xffffffdc
    365c:	add	r0, r2, r3
    3660:	ldr	r3, [fp, #16]
    3664:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3668:	mov	r1, #2
    366c:	bl	274 <parse_integer>
    3670:	mov	r3, r0
    3674:	cmp	r3, #0
    3678:	beq	3698 <string_to_parts+0x85c>
    367c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3680:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3684:	ldr	r1, [pc, #756]	; 3980 <string_to_parts+0xb44>
    3688:	mvn	r0, #103	; 0x67
    368c:	bl	0 <coda_set_error>
    3690:	mvn	r3, #0
    3694:	b	3958 <string_to_parts+0xb1c>
    3698:	ldr	r3, [fp, #-8]
    369c:	add	r3, r3, #2
    36a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    36a4:	add	r3, r2, r3
    36a8:	ldrb	r3, [r3]
    36ac:	cmp	r3, #42	; 0x2a
    36b0:	bne	36bc <string_to_parts+0x880>
    36b4:	mov	r3, #3
    36b8:	b	36c0 <string_to_parts+0x884>
    36bc:	mov	r3, #2
    36c0:	ldr	r2, [fp, #-8]
    36c4:	add	r3, r2, r3
    36c8:	str	r3, [fp, #-8]
    36cc:	ldr	r3, [fp, #-12]
    36d0:	add	r3, r3, #2
    36d4:	str	r3, [fp, #-12]
    36d8:	b	38c0 <string_to_parts+0xa84>
    36dc:	ldr	r3, [fp, #-8]
    36e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    36e4:	add	r3, r2, r3
    36e8:	ldrb	r3, [r3]
    36ec:	cmp	r3, #83	; 0x53
    36f0:	bne	37d4 <string_to_parts+0x998>
    36f4:	mov	r3, #0
    36f8:	str	r3, [fp, #-20]	; 0xffffffec
    36fc:	b	3718 <string_to_parts+0x8dc>
    3700:	ldr	r3, [fp, #-8]
    3704:	add	r3, r3, #1
    3708:	str	r3, [fp, #-8]
    370c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3710:	add	r3, r3, #1
    3714:	str	r3, [fp, #-20]	; 0xffffffec
    3718:	ldr	r3, [fp, #-8]
    371c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3720:	add	r3, r2, r3
    3724:	ldrb	r3, [r3]
    3728:	cmp	r3, #83	; 0x53
    372c:	beq	3700 <string_to_parts+0x8c4>
    3730:	ldr	r3, [fp, #-12]
    3734:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3738:	add	r0, r2, r3
    373c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3740:	cmp	r3, #6
    3744:	movlt	r1, r3
    3748:	movge	r1, #6
    374c:	ldr	r3, [fp, #20]
    3750:	mov	r2, #0
    3754:	bl	274 <parse_integer>
    3758:	mov	r3, r0
    375c:	cmp	r3, #0
    3760:	beq	3780 <string_to_parts+0x944>
    3764:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3768:	ldr	r2, [fp, #-36]	; 0xffffffdc
    376c:	ldr	r1, [pc, #528]	; 3984 <string_to_parts+0xb48>
    3770:	mvn	r0, #103	; 0x67
    3774:	bl	0 <coda_set_error>
    3778:	mvn	r3, #0
    377c:	b	3958 <string_to_parts+0xb1c>
    3780:	ldr	r2, [fp, #-12]
    3784:	ldr	r3, [fp, #-20]	; 0xffffffec
    3788:	add	r3, r2, r3
    378c:	str	r3, [fp, #-12]
    3790:	b	37c4 <string_to_parts+0x988>
    3794:	ldr	r3, [fp, #20]
    3798:	ldr	r2, [r3]
    379c:	mov	r3, r2
    37a0:	lsl	r3, r3, #2
    37a4:	add	r3, r3, r2
    37a8:	lsl	r3, r3, #1
    37ac:	mov	r2, r3
    37b0:	ldr	r3, [fp, #20]
    37b4:	str	r2, [r3]
    37b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    37bc:	add	r3, r3, #1
    37c0:	str	r3, [fp, #-20]	; 0xffffffec
    37c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    37c8:	cmp	r3, #5
    37cc:	ble	3794 <string_to_parts+0x958>
    37d0:	b	38c0 <string_to_parts+0xa84>
    37d4:	ldr	r3, [fp, #-8]
    37d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    37dc:	add	r3, r2, r3
    37e0:	ldrb	r3, [r3]
    37e4:	cmp	r3, #64	; 0x40
    37e8:	bls	3804 <string_to_parts+0x9c8>
    37ec:	ldr	r3, [fp, #-8]
    37f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    37f4:	add	r3, r2, r3
    37f8:	ldrb	r3, [r3]
    37fc:	cmp	r3, #90	; 0x5a
    3800:	bls	384c <string_to_parts+0xa10>
    3804:	ldr	r3, [fp, #-8]
    3808:	ldr	r2, [fp, #-32]	; 0xffffffe0
    380c:	add	r3, r2, r3
    3810:	ldrb	r3, [r3]
    3814:	cmp	r3, #96	; 0x60
    3818:	bls	3834 <string_to_parts+0x9f8>
    381c:	ldr	r3, [fp, #-8]
    3820:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3824:	add	r3, r2, r3
    3828:	ldrb	r3, [r3]
    382c:	cmp	r3, #122	; 0x7a
    3830:	bls	384c <string_to_parts+0xa10>
    3834:	ldr	r3, [fp, #-8]
    3838:	ldr	r2, [fp, #-32]	; 0xffffffe0
    383c:	add	r3, r2, r3
    3840:	ldrb	r3, [r3]
    3844:	cmp	r3, #42	; 0x2a
    3848:	bne	3864 <string_to_parts+0xa28>
    384c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3850:	ldr	r1, [pc, #304]	; 3988 <string_to_parts+0xb4c>
    3854:	mvn	r0, #102	; 0x66
    3858:	bl	0 <coda_set_error>
    385c:	mvn	r3, #0
    3860:	b	3958 <string_to_parts+0xb1c>
    3864:	ldr	r3, [fp, #-8]
    3868:	ldr	r2, [fp, #-32]	; 0xffffffe0
    386c:	add	r3, r2, r3
    3870:	ldrb	r2, [r3]
    3874:	ldr	r3, [fp, #-12]
    3878:	ldr	r1, [fp, #-36]	; 0xffffffdc
    387c:	add	r3, r1, r3
    3880:	ldrb	r3, [r3]
    3884:	cmp	r2, r3
    3888:	beq	38a8 <string_to_parts+0xa6c>
    388c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3890:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3894:	ldr	r1, [pc, #200]	; 3964 <string_to_parts+0xb28>
    3898:	mvn	r0, #103	; 0x67
    389c:	bl	0 <coda_set_error>
    38a0:	mvn	r3, #0
    38a4:	b	3958 <string_to_parts+0xb1c>
    38a8:	ldr	r3, [fp, #-8]
    38ac:	add	r3, r3, #1
    38b0:	str	r3, [fp, #-8]
    38b4:	ldr	r3, [fp, #-12]
    38b8:	add	r3, r3, #1
    38bc:	str	r3, [fp, #-12]
    38c0:	ldr	r3, [fp, #-8]
    38c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    38c8:	add	r3, r2, r3
    38cc:	ldrb	r3, [r3]
    38d0:	cmp	r3, #0
    38d4:	beq	38fc <string_to_parts+0xac0>
    38d8:	ldr	r3, [fp, #-16]
    38dc:	cmp	r3, #0
    38e0:	bne	2ec8 <string_to_parts+0x8c>
    38e4:	ldr	r3, [fp, #-8]
    38e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    38ec:	add	r3, r2, r3
    38f0:	ldrb	r3, [r3]
    38f4:	cmp	r3, #124	; 0x7c
    38f8:	bne	2ec8 <string_to_parts+0x8c>
    38fc:	ldr	r3, [fp, #-16]
    3900:	cmp	r3, #0
    3904:	beq	3920 <string_to_parts+0xae4>
    3908:	ldr	r2, [fp, #-32]	; 0xffffffe0
    390c:	ldr	r1, [pc, #120]	; 398c <string_to_parts+0xb50>
    3910:	mvn	r0, #102	; 0x66
    3914:	bl	0 <coda_set_error>
    3918:	mvn	r3, #0
    391c:	b	3958 <string_to_parts+0xb1c>
    3920:	ldr	r3, [fp, #-12]
    3924:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3928:	add	r3, r2, r3
    392c:	ldrb	r3, [r3]
    3930:	cmp	r3, #0
    3934:	beq	3954 <string_to_parts+0xb18>
    3938:	ldr	r3, [fp, #-32]	; 0xffffffe0
    393c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3940:	ldr	r1, [pc, #72]	; 3990 <string_to_parts+0xb54>
    3944:	mvn	r0, #103	; 0x67
    3948:	bl	0 <coda_set_error>
    394c:	mvn	r3, #0
    3950:	b	3958 <string_to_parts+0xb1c>
    3954:	mov	r3, #0
    3958:	mov	r0, r3
    395c:	sub	sp, fp, #4
    3960:	pop	{fp, pc}
    3964:	.word	0x00000604
    3968:	.word	0x0000064c
    396c:	.word	0x00000690
    3970:	.word	0x000006d4
    3974:	.word	0x00000714
    3978:	.word	0x00000754
    397c:	.word	0x00000798
    3980:	.word	0x000007dc
    3984:	.word	0x00000820
    3988:	.word	0x00000540
    398c:	.word	0x00000578
    3990:	.word	0x00000870

00003994 <coda_time_string_to_parts>:
    3994:	push	{fp, lr}
    3998:	add	fp, sp, #4
    399c:	sub	sp, sp, #56	; 0x38
    39a0:	str	r0, [fp, #-24]	; 0xffffffe8
    39a4:	str	r1, [fp, #-28]	; 0xffffffe4
    39a8:	str	r2, [fp, #-32]	; 0xffffffe0
    39ac:	str	r3, [fp, #-36]	; 0xffffffdc
    39b0:	mov	r3, #0
    39b4:	str	r3, [fp, #-8]
    39b8:	mov	r3, #0
    39bc:	str	r3, [fp, #-12]
    39c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39c4:	cmp	r3, #0
    39c8:	bne	39e8 <coda_time_string_to_parts+0x54>
    39cc:	ldr	r3, [pc, #688]	; 3c84 <coda_time_string_to_parts+0x2f0>
    39d0:	ldr	r2, [pc, #688]	; 3c88 <coda_time_string_to_parts+0x2f4>
    39d4:	ldr	r1, [pc, #688]	; 3c8c <coda_time_string_to_parts+0x2f8>
    39d8:	mvn	r0, #99	; 0x63
    39dc:	bl	0 <coda_set_error>
    39e0:	mvn	r3, #0
    39e4:	b	3c78 <coda_time_string_to_parts+0x2e4>
    39e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    39ec:	cmp	r3, #0
    39f0:	bne	3a10 <coda_time_string_to_parts+0x7c>
    39f4:	ldr	r3, [pc, #660]	; 3c90 <coda_time_string_to_parts+0x2fc>
    39f8:	ldr	r2, [pc, #648]	; 3c88 <coda_time_string_to_parts+0x2f4>
    39fc:	ldr	r1, [pc, #656]	; 3c94 <coda_time_string_to_parts+0x300>
    3a00:	mvn	r0, #99	; 0x63
    3a04:	bl	0 <coda_set_error>
    3a08:	mvn	r3, #0
    3a0c:	b	3c78 <coda_time_string_to_parts+0x2e4>
    3a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a14:	cmp	r3, #0
    3a18:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3a20:	cmp	r3, #0
    3a24:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a28:	ldr	r3, [fp, #4]
    3a2c:	cmp	r3, #0
    3a30:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a34:	ldr	r3, [fp, #8]
    3a38:	cmp	r3, #0
    3a3c:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a40:	ldr	r3, [fp, #12]
    3a44:	cmp	r3, #0
    3a48:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a4c:	ldr	r3, [fp, #16]
    3a50:	cmp	r3, #0
    3a54:	beq	3a64 <coda_time_string_to_parts+0xd0>
    3a58:	ldr	r3, [fp, #20]
    3a5c:	cmp	r3, #0
    3a60:	bne	3abc <coda_time_string_to_parts+0x128>
    3a64:	ldr	r3, [pc, #556]	; 3c98 <coda_time_string_to_parts+0x304>
    3a68:	ldr	r2, [pc, #536]	; 3c88 <coda_time_string_to_parts+0x2f4>
    3a6c:	ldr	r1, [pc, #552]	; 3c9c <coda_time_string_to_parts+0x308>
    3a70:	mvn	r0, #99	; 0x63
    3a74:	bl	0 <coda_set_error>
    3a78:	mvn	r3, #0
    3a7c:	b	3c78 <coda_time_string_to_parts+0x2e4>
    3a80:	ldr	r3, [fp, #-12]
    3a84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a88:	add	r3, r2, r3
    3a8c:	ldrb	r3, [r3]
    3a90:	cmp	r3, #39	; 0x27
    3a94:	bne	3ab0 <coda_time_string_to_parts+0x11c>
    3a98:	ldr	r3, [fp, #-8]
    3a9c:	cmp	r3, #0
    3aa0:	moveq	r3, #1
    3aa4:	movne	r3, #0
    3aa8:	uxtb	r3, r3
    3aac:	str	r3, [fp, #-8]
    3ab0:	ldr	r3, [fp, #-12]
    3ab4:	add	r3, r3, #1
    3ab8:	str	r3, [fp, #-12]
    3abc:	ldr	r3, [fp, #-12]
    3ac0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ac4:	add	r3, r2, r3
    3ac8:	ldrb	r3, [r3]
    3acc:	cmp	r3, #0
    3ad0:	beq	3af8 <coda_time_string_to_parts+0x164>
    3ad4:	ldr	r3, [fp, #-8]
    3ad8:	cmp	r3, #0
    3adc:	bne	3a80 <coda_time_string_to_parts+0xec>
    3ae0:	ldr	r3, [fp, #-12]
    3ae4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ae8:	add	r3, r2, r3
    3aec:	ldrb	r3, [r3]
    3af0:	cmp	r3, #124	; 0x7c
    3af4:	bne	3a80 <coda_time_string_to_parts+0xec>
    3af8:	ldr	r3, [fp, #-12]
    3afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b00:	add	r3, r2, r3
    3b04:	ldrb	r3, [r3]
    3b08:	cmp	r3, #124	; 0x7c
    3b0c:	bne	3c38 <coda_time_string_to_parts+0x2a4>
    3b10:	mov	r3, #0
    3b14:	str	r3, [fp, #-16]
    3b18:	ldr	r3, [fp, #-16]
    3b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b20:	add	r0, r2, r3
    3b24:	ldr	r3, [fp, #20]
    3b28:	str	r3, [sp, #16]
    3b2c:	ldr	r3, [fp, #16]
    3b30:	str	r3, [sp, #12]
    3b34:	ldr	r3, [fp, #12]
    3b38:	str	r3, [sp, #8]
    3b3c:	ldr	r3, [fp, #8]
    3b40:	str	r3, [sp, #4]
    3b44:	ldr	r3, [fp, #4]
    3b48:	str	r3, [sp]
    3b4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3b58:	bl	2e3c <string_to_parts>
    3b5c:	mov	r3, r0
    3b60:	cmp	r3, #0
    3b64:	bne	3b70 <coda_time_string_to_parts+0x1dc>
    3b68:	mov	r3, #0
    3b6c:	b	3c78 <coda_time_string_to_parts+0x2e4>
    3b70:	ldr	r3, [fp, #-12]
    3b74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b78:	add	r3, r2, r3
    3b7c:	ldrb	r3, [r3]
    3b80:	cmp	r3, #0
    3b84:	bne	3ba4 <coda_time_string_to_parts+0x210>
    3b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3b8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3b90:	ldr	r1, [pc, #264]	; 3ca0 <coda_time_string_to_parts+0x30c>
    3b94:	mvn	r0, #103	; 0x67
    3b98:	bl	0 <coda_set_error>
    3b9c:	mvn	r3, #0
    3ba0:	b	3c78 <coda_time_string_to_parts+0x2e4>
    3ba4:	ldr	r3, [fp, #-12]
    3ba8:	add	r3, r3, #1
    3bac:	str	r3, [fp, #-12]
    3bb0:	ldr	r3, [fp, #-12]
    3bb4:	str	r3, [fp, #-16]
    3bb8:	b	3bf8 <coda_time_string_to_parts+0x264>
    3bbc:	ldr	r3, [fp, #-12]
    3bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3bc4:	add	r3, r2, r3
    3bc8:	ldrb	r3, [r3]
    3bcc:	cmp	r3, #39	; 0x27
    3bd0:	bne	3bec <coda_time_string_to_parts+0x258>
    3bd4:	ldr	r3, [fp, #-8]
    3bd8:	cmp	r3, #0
    3bdc:	moveq	r3, #1
    3be0:	movne	r3, #0
    3be4:	uxtb	r3, r3
    3be8:	str	r3, [fp, #-8]
    3bec:	ldr	r3, [fp, #-12]
    3bf0:	add	r3, r3, #1
    3bf4:	str	r3, [fp, #-12]
    3bf8:	ldr	r3, [fp, #-12]
    3bfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c00:	add	r3, r2, r3
    3c04:	ldrb	r3, [r3]
    3c08:	cmp	r3, #0
    3c0c:	beq	3b18 <coda_time_string_to_parts+0x184>
    3c10:	ldr	r3, [fp, #-8]
    3c14:	cmp	r3, #0
    3c18:	bne	3bbc <coda_time_string_to_parts+0x228>
    3c1c:	ldr	r3, [fp, #-12]
    3c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c24:	add	r3, r2, r3
    3c28:	ldrb	r3, [r3]
    3c2c:	cmp	r3, #124	; 0x7c
    3c30:	bne	3bbc <coda_time_string_to_parts+0x228>
    3c34:	b	3b18 <coda_time_string_to_parts+0x184>
    3c38:	ldr	r3, [fp, #20]
    3c3c:	str	r3, [sp, #16]
    3c40:	ldr	r3, [fp, #16]
    3c44:	str	r3, [sp, #12]
    3c48:	ldr	r3, [fp, #12]
    3c4c:	str	r3, [sp, #8]
    3c50:	ldr	r3, [fp, #8]
    3c54:	str	r3, [sp, #4]
    3c58:	ldr	r3, [fp, #4]
    3c5c:	str	r3, [sp]
    3c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3c64:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3c70:	bl	2e3c <string_to_parts>
    3c74:	mov	r3, r0
    3c78:	mov	r0, r3
    3c7c:	sub	sp, fp, #4
    3c80:	pop	{fp, pc}
    3c84:	.word	0x000005bc
    3c88:	.word	0x000000ac
    3c8c:	.word	0x0000037c
    3c90:	.word	0x000005c1
    3c94:	.word	0x0000039c
    3c98:	.word	0x000005c7
    3c9c:	.word	0x00000184
    3ca0:	.word	0x000008b4

00003ca4 <coda_time_double_to_string>:
    3ca4:	push	{r4, r5, fp, lr}
    3ca8:	add	fp, sp, #12
    3cac:	sub	sp, sp, #72	; 0x48
    3cb0:	vstr	d0, [fp, #-52]	; 0xffffffcc
    3cb4:	str	r0, [fp, #-56]	; 0xffffffc8
    3cb8:	str	r1, [fp, #-60]	; 0xffffffc4
    3cbc:	sub	ip, fp, #28
    3cc0:	sub	r2, fp, #24
    3cc4:	sub	r1, fp, #20
    3cc8:	sub	r0, fp, #16
    3ccc:	sub	r3, fp, #40	; 0x28
    3cd0:	str	r3, [sp, #8]
    3cd4:	sub	r3, fp, #36	; 0x24
    3cd8:	str	r3, [sp, #4]
    3cdc:	sub	r3, fp, #32
    3ce0:	str	r3, [sp]
    3ce4:	mov	r3, ip
    3ce8:	vldr	d0, [fp, #-52]	; 0xffffffcc
    3cec:	bl	1cb4 <coda_time_double_to_parts>
    3cf0:	mov	r3, r0
    3cf4:	cmp	r3, #0
    3cf8:	beq	3d04 <coda_time_double_to_string+0x60>
    3cfc:	mvn	r3, #0
    3d00:	b	3d54 <coda_time_double_to_string+0xb0>
    3d04:	ldr	ip, [fp, #-16]
    3d08:	ldr	lr, [fp, #-20]	; 0xffffffec
    3d0c:	ldr	r4, [fp, #-24]	; 0xffffffe8
    3d10:	ldr	r5, [fp, #-28]	; 0xffffffe4
    3d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3d18:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3d1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3d20:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3d24:	str	r0, [sp, #16]
    3d28:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3d2c:	str	r0, [sp, #12]
    3d30:	str	r1, [sp, #8]
    3d34:	str	r2, [sp, #4]
    3d38:	str	r3, [sp]
    3d3c:	mov	r3, r5
    3d40:	mov	r2, r4
    3d44:	mov	r1, lr
    3d48:	mov	r0, ip
    3d4c:	bl	2570 <coda_time_parts_to_string>
    3d50:	mov	r3, r0
    3d54:	mov	r0, r3
    3d58:	sub	sp, fp, #12
    3d5c:	pop	{r4, r5, fp, pc}

00003d60 <coda_time_double_to_string_utc>:
    3d60:	push	{r4, r5, fp, lr}
    3d64:	add	fp, sp, #12
    3d68:	sub	sp, sp, #72	; 0x48
    3d6c:	vstr	d0, [fp, #-52]	; 0xffffffcc
    3d70:	str	r0, [fp, #-56]	; 0xffffffc8
    3d74:	str	r1, [fp, #-60]	; 0xffffffc4
    3d78:	sub	ip, fp, #28
    3d7c:	sub	r2, fp, #24
    3d80:	sub	r1, fp, #20
    3d84:	sub	r0, fp, #16
    3d88:	sub	r3, fp, #40	; 0x28
    3d8c:	str	r3, [sp, #8]
    3d90:	sub	r3, fp, #36	; 0x24
    3d94:	str	r3, [sp, #4]
    3d98:	sub	r3, fp, #32
    3d9c:	str	r3, [sp]
    3da0:	mov	r3, ip
    3da4:	vldr	d0, [fp, #-52]	; 0xffffffcc
    3da8:	bl	1f0c <coda_time_double_to_parts_utc>
    3dac:	mov	r3, r0
    3db0:	cmp	r3, #0
    3db4:	beq	3dc0 <coda_time_double_to_string_utc+0x60>
    3db8:	mvn	r3, #0
    3dbc:	b	3e10 <coda_time_double_to_string_utc+0xb0>
    3dc0:	ldr	ip, [fp, #-16]
    3dc4:	ldr	lr, [fp, #-20]	; 0xffffffec
    3dc8:	ldr	r4, [fp, #-24]	; 0xffffffe8
    3dcc:	ldr	r5, [fp, #-28]	; 0xffffffe4
    3dd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3dd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3dd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3ddc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3de0:	str	r0, [sp, #16]
    3de4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3de8:	str	r0, [sp, #12]
    3dec:	str	r1, [sp, #8]
    3df0:	str	r2, [sp, #4]
    3df4:	str	r3, [sp]
    3df8:	mov	r3, r5
    3dfc:	mov	r2, r4
    3e00:	mov	r1, lr
    3e04:	mov	r0, ip
    3e08:	bl	2570 <coda_time_parts_to_string>
    3e0c:	mov	r3, r0
    3e10:	mov	r0, r3
    3e14:	sub	sp, fp, #12
    3e18:	pop	{r4, r5, fp, pc}

00003e1c <coda_time_string_to_double>:
    3e1c:	push	{r4, r5, fp, lr}
    3e20:	add	fp, sp, #12
    3e24:	sub	sp, sp, #72	; 0x48
    3e28:	str	r0, [fp, #-48]	; 0xffffffd0
    3e2c:	str	r1, [fp, #-52]	; 0xffffffcc
    3e30:	str	r2, [fp, #-56]	; 0xffffffc8
    3e34:	sub	r1, fp, #20
    3e38:	sub	r2, fp, #16
    3e3c:	sub	r3, fp, #40	; 0x28
    3e40:	str	r3, [sp, #16]
    3e44:	sub	r3, fp, #36	; 0x24
    3e48:	str	r3, [sp, #12]
    3e4c:	sub	r3, fp, #32
    3e50:	str	r3, [sp, #8]
    3e54:	sub	r3, fp, #28
    3e58:	str	r3, [sp, #4]
    3e5c:	sub	r3, fp, #24
    3e60:	str	r3, [sp]
    3e64:	mov	r3, r1
    3e68:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3e6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3e70:	bl	3994 <coda_time_string_to_parts>
    3e74:	mov	r3, r0
    3e78:	cmp	r3, #0
    3e7c:	beq	3e88 <coda_time_string_to_double+0x6c>
    3e80:	mvn	r3, #0
    3e84:	b	3ed0 <coda_time_string_to_double+0xb4>
    3e88:	ldr	ip, [fp, #-16]
    3e8c:	ldr	lr, [fp, #-20]	; 0xffffffec
    3e90:	ldr	r4, [fp, #-24]	; 0xffffffe8
    3e94:	ldr	r5, [fp, #-28]	; 0xffffffe4
    3e98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3e9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3ea0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3ea4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3ea8:	str	r0, [sp, #12]
    3eac:	str	r1, [sp, #8]
    3eb0:	str	r2, [sp, #4]
    3eb4:	str	r3, [sp]
    3eb8:	mov	r3, r5
    3ebc:	mov	r2, r4
    3ec0:	mov	r1, lr
    3ec4:	mov	r0, ip
    3ec8:	bl	22c0 <coda_time_parts_to_double>
    3ecc:	mov	r3, r0
    3ed0:	mov	r0, r3
    3ed4:	sub	sp, fp, #12
    3ed8:	pop	{r4, r5, fp, pc}

00003edc <coda_time_string_to_double_utc>:
    3edc:	push	{r4, r5, fp, lr}
    3ee0:	add	fp, sp, #12
    3ee4:	sub	sp, sp, #72	; 0x48
    3ee8:	str	r0, [fp, #-48]	; 0xffffffd0
    3eec:	str	r1, [fp, #-52]	; 0xffffffcc
    3ef0:	str	r2, [fp, #-56]	; 0xffffffc8
    3ef4:	sub	r1, fp, #20
    3ef8:	sub	r2, fp, #16
    3efc:	sub	r3, fp, #40	; 0x28
    3f00:	str	r3, [sp, #16]
    3f04:	sub	r3, fp, #36	; 0x24
    3f08:	str	r3, [sp, #12]
    3f0c:	sub	r3, fp, #32
    3f10:	str	r3, [sp, #8]
    3f14:	sub	r3, fp, #28
    3f18:	str	r3, [sp, #4]
    3f1c:	sub	r3, fp, #24
    3f20:	str	r3, [sp]
    3f24:	mov	r3, r1
    3f28:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3f2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3f30:	bl	3994 <coda_time_string_to_parts>
    3f34:	mov	r3, r0
    3f38:	cmp	r3, #0
    3f3c:	beq	3f48 <coda_time_string_to_double_utc+0x6c>
    3f40:	mvn	r3, #0
    3f44:	b	3f90 <coda_time_string_to_double_utc+0xb4>
    3f48:	ldr	ip, [fp, #-16]
    3f4c:	ldr	lr, [fp, #-20]	; 0xffffffec
    3f50:	ldr	r4, [fp, #-24]	; 0xffffffe8
    3f54:	ldr	r5, [fp, #-28]	; 0xffffffe4
    3f58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3f5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3f60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3f64:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3f68:	str	r0, [sp, #12]
    3f6c:	str	r1, [sp, #8]
    3f70:	str	r2, [sp, #4]
    3f74:	str	r3, [sp]
    3f78:	mov	r3, r5
    3f7c:	mov	r2, r4
    3f80:	mov	r1, lr
    3f84:	mov	r0, ip
    3f88:	bl	23a4 <coda_time_parts_to_double_utc>
    3f8c:	mov	r3, r0
    3f90:	mov	r0, r3
    3f94:	sub	sp, fp, #12
    3f98:	pop	{r4, r5, fp, pc}

00003f9c <coda_datetime_to_double>:
    3f9c:	push	{fp, lr}
    3fa0:	add	fp, sp, #4
    3fa4:	sub	sp, sp, #32
    3fa8:	str	r0, [fp, #-8]
    3fac:	str	r1, [fp, #-12]
    3fb0:	str	r2, [fp, #-16]
    3fb4:	str	r3, [fp, #-20]	; 0xffffffec
    3fb8:	ldr	r3, [fp, #16]
    3fbc:	str	r3, [sp, #12]
    3fc0:	ldr	r3, [fp, #12]
    3fc4:	str	r3, [sp, #8]
    3fc8:	ldr	r3, [fp, #8]
    3fcc:	str	r3, [sp, #4]
    3fd0:	ldr	r3, [fp, #4]
    3fd4:	str	r3, [sp]
    3fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
    3fdc:	ldr	r2, [fp, #-16]
    3fe0:	ldr	r1, [fp, #-12]
    3fe4:	ldr	r0, [fp, #-8]
    3fe8:	bl	22c0 <coda_time_parts_to_double>
    3fec:	mov	r3, r0
    3ff0:	mov	r0, r3
    3ff4:	sub	sp, fp, #4
    3ff8:	pop	{fp, pc}

00003ffc <coda_double_to_datetime>:
    3ffc:	push	{fp, lr}
    4000:	add	fp, sp, #4
    4004:	sub	sp, sp, #40	; 0x28
    4008:	vstr	d0, [fp, #-12]
    400c:	str	r0, [fp, #-16]
    4010:	str	r1, [fp, #-20]	; 0xffffffec
    4014:	str	r2, [fp, #-24]	; 0xffffffe8
    4018:	str	r3, [fp, #-28]	; 0xffffffe4
    401c:	ldr	r3, [fp, #12]
    4020:	str	r3, [sp, #8]
    4024:	ldr	r3, [fp, #8]
    4028:	str	r3, [sp, #4]
    402c:	ldr	r3, [fp, #4]
    4030:	str	r3, [sp]
    4034:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4038:	ldr	r2, [fp, #-24]	; 0xffffffe8
    403c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4040:	ldr	r0, [fp, #-16]
    4044:	vldr	d0, [fp, #-12]
    4048:	bl	1cb4 <coda_time_double_to_parts>
    404c:	mov	r3, r0
    4050:	mov	r0, r3
    4054:	sub	sp, fp, #4
    4058:	pop	{fp, pc}

0000405c <coda_time_to_string>:
    405c:	push	{fp, lr}
    4060:	add	fp, sp, #4
    4064:	sub	sp, sp, #16
    4068:	vstr	d0, [fp, #-12]
    406c:	str	r0, [fp, #-16]
    4070:	ldr	r1, [fp, #-16]
    4074:	ldr	r0, [pc, #20]	; 4090 <coda_time_to_string+0x34>
    4078:	vldr	d0, [fp, #-12]
    407c:	bl	3ca4 <coda_time_double_to_string>
    4080:	mov	r3, r0
    4084:	mov	r0, r3
    4088:	sub	sp, fp, #4
    408c:	pop	{fp, pc}
    4090:	.word	0x000008f4

00004094 <coda_string_to_time>:
    4094:	push	{fp, lr}
    4098:	add	fp, sp, #4
    409c:	sub	sp, sp, #16
    40a0:	str	r0, [fp, #-16]
    40a4:	str	r1, [fp, #-20]	; 0xffffffec
    40a8:	ldr	r3, [pc, #32]	; 40d0 <coda_string_to_time+0x3c>
    40ac:	str	r3, [fp, #-8]
    40b0:	ldr	r2, [fp, #-20]	; 0xffffffec
    40b4:	ldr	r1, [fp, #-16]
    40b8:	ldr	r0, [fp, #-8]
    40bc:	bl	3e1c <coda_time_string_to_double>
    40c0:	mov	r3, r0
    40c4:	mov	r0, r3
    40c8:	sub	sp, fp, #4
    40cc:	pop	{fp, pc}
    40d0:	.word	0x00000910

000040d4 <coda_utcdatetime_to_double>:
    40d4:	push	{fp, lr}
    40d8:	add	fp, sp, #4
    40dc:	sub	sp, sp, #32
    40e0:	str	r0, [fp, #-8]
    40e4:	str	r1, [fp, #-12]
    40e8:	str	r2, [fp, #-16]
    40ec:	str	r3, [fp, #-20]	; 0xffffffec
    40f0:	ldr	r3, [fp, #16]
    40f4:	str	r3, [sp, #12]
    40f8:	ldr	r3, [fp, #12]
    40fc:	str	r3, [sp, #8]
    4100:	ldr	r3, [fp, #8]
    4104:	str	r3, [sp, #4]
    4108:	ldr	r3, [fp, #4]
    410c:	str	r3, [sp]
    4110:	ldr	r3, [fp, #-20]	; 0xffffffec
    4114:	ldr	r2, [fp, #-16]
    4118:	ldr	r1, [fp, #-12]
    411c:	ldr	r0, [fp, #-8]
    4120:	bl	23a4 <coda_time_parts_to_double_utc>
    4124:	mov	r3, r0
    4128:	mov	r0, r3
    412c:	sub	sp, fp, #4
    4130:	pop	{fp, pc}

00004134 <coda_double_to_utcdatetime>:
    4134:	push	{fp, lr}
    4138:	add	fp, sp, #4
    413c:	sub	sp, sp, #40	; 0x28
    4140:	vstr	d0, [fp, #-12]
    4144:	str	r0, [fp, #-16]
    4148:	str	r1, [fp, #-20]	; 0xffffffec
    414c:	str	r2, [fp, #-24]	; 0xffffffe8
    4150:	str	r3, [fp, #-28]	; 0xffffffe4
    4154:	ldr	r3, [fp, #12]
    4158:	str	r3, [sp, #8]
    415c:	ldr	r3, [fp, #8]
    4160:	str	r3, [sp, #4]
    4164:	ldr	r3, [fp, #4]
    4168:	str	r3, [sp]
    416c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4170:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4174:	ldr	r1, [fp, #-20]	; 0xffffffec
    4178:	ldr	r0, [fp, #-16]
    417c:	vldr	d0, [fp, #-12]
    4180:	bl	1f0c <coda_time_double_to_parts_utc>
    4184:	mov	r3, r0
    4188:	mov	r0, r3
    418c:	sub	sp, fp, #4
    4190:	pop	{fp, pc}

00004194 <coda_time_to_utcstring>:
    4194:	push	{fp, lr}
    4198:	add	fp, sp, #4
    419c:	sub	sp, sp, #16
    41a0:	vstr	d0, [fp, #-12]
    41a4:	str	r0, [fp, #-16]
    41a8:	ldr	r1, [fp, #-16]
    41ac:	ldr	r0, [pc, #20]	; 41c8 <coda_time_to_utcstring+0x34>
    41b0:	vldr	d0, [fp, #-12]
    41b4:	bl	3d60 <coda_time_double_to_string_utc>
    41b8:	mov	r3, r0
    41bc:	mov	r0, r3
    41c0:	sub	sp, fp, #4
    41c4:	pop	{fp, pc}
    41c8:	.word	0x000008f4

000041cc <coda_utcstring_to_time>:
    41cc:	push	{fp, lr}
    41d0:	add	fp, sp, #4
    41d4:	sub	sp, sp, #16
    41d8:	str	r0, [fp, #-16]
    41dc:	str	r1, [fp, #-20]	; 0xffffffec
    41e0:	ldr	r3, [pc, #32]	; 4208 <coda_utcstring_to_time+0x3c>
    41e4:	str	r3, [fp, #-8]
    41e8:	ldr	r2, [fp, #-20]	; 0xffffffec
    41ec:	ldr	r1, [fp, #-16]
    41f0:	ldr	r0, [fp, #-8]
    41f4:	bl	3edc <coda_time_string_to_double_utc>
    41f8:	mov	r3, r0
    41fc:	mov	r0, r3
    4200:	sub	sp, fp, #4
    4204:	pop	{fp, pc}
    4208:	.word	0x00000910
