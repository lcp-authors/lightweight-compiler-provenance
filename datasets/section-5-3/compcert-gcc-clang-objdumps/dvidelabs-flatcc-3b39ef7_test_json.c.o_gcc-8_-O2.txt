
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_symbol_part_ext>:
       0:	sub	r1, r1, r0
       4:	strd	r4, [sp, #-8]!
       8:	cmp	r1, #8
       c:	bhi	40 <flatcc_json_parser_symbol_part_ext+0x40>
      10:	sub	r1, r1, #1
      14:	cmp	r1, #7
      18:	ldrls	pc, [pc, r1, lsl #2]
      1c:	b	e8 <flatcc_json_parser_symbol_part_ext+0xe8>
      20:	.word	0x000000a0
      24:	.word	0x000000ac
      28:	.word	0x000000b8
      2c:	.word	0x000000c4
      30:	.word	0x000000d0
      34:	.word	0x000000dc
      38:	.word	0x00000094
      3c:	.word	0x00000040
      40:	ldrb	r2, [r0, #7]
      44:	mov	r3, #0
      48:	mov	r1, r3
      4c:	ldrb	r4, [r0, #6]
      50:	orr	r2, r2, r4, lsl #8
      54:	ldrb	r4, [r0, #5]
      58:	orr	r2, r2, r4, lsl #16
      5c:	ldrb	r4, [r0, #4]
      60:	orr	r2, r2, r4, lsl #24
      64:	ldrb	r4, [r0, #3]
      68:	orr	r1, r1, r4
      6c:	ldrb	r4, [r0, #2]
      70:	orr	r1, r1, r4, lsl #8
      74:	ldrb	r4, [r0, #1]
      78:	orr	r1, r1, r4, lsl #16
      7c:	ldrb	r4, [r0]
      80:	mov	r0, r2
      84:	orr	r1, r1, r4, lsl #24
      88:	ldrd	r4, [sp]
      8c:	add	sp, sp, #8
      90:	bx	lr
      94:	mov	r2, #0
      98:	mov	r3, #0
      9c:	b	48 <flatcc_json_parser_symbol_part_ext+0x48>
      a0:	mov	r2, #0
      a4:	mov	r1, r2
      a8:	b	7c <flatcc_json_parser_symbol_part_ext+0x7c>
      ac:	mov	r2, #0
      b0:	mov	r1, r2
      b4:	b	74 <flatcc_json_parser_symbol_part_ext+0x74>
      b8:	mov	r2, #0
      bc:	mov	r1, r2
      c0:	b	6c <flatcc_json_parser_symbol_part_ext+0x6c>
      c4:	mov	r2, #0
      c8:	mov	r1, r2
      cc:	b	64 <flatcc_json_parser_symbol_part_ext+0x64>
      d0:	mov	r2, #0
      d4:	mov	r1, r2
      d8:	b	5c <flatcc_json_parser_symbol_part_ext+0x5c>
      dc:	mov	r2, #0
      e0:	mov	r1, r2
      e4:	b	54 <flatcc_json_parser_symbol_part_ext+0x54>
      e8:	mov	r0, #0
      ec:	mov	r1, r0
      f0:	b	88 <flatcc_json_parser_symbol_part_ext+0x88>

000000f4 <MyGame_Example_Any_json_union_accept_type>:
      f4:	cmp	r0, #4
      f8:	movhi	r0, #0
      fc:	movls	r0, #1
     100:	bx	lr

00000104 <Fantasy_Character_json_union_accept_type>:
     104:	cmp	r0, #11
     108:	bhi	12c <Fantasy_Character_json_union_accept_type+0x28>
     10c:	cmp	r0, #8
     110:	bcs	13c <Fantasy_Character_json_union_accept_type+0x38>
     114:	cmp	r0, #0
     118:	beq	13c <Fantasy_Character_json_union_accept_type+0x38>
     11c:	sub	r0, r0, #2
     120:	clz	r0, r0
     124:	lsr	r0, r0, #5
     128:	bx	lr
     12c:	sub	r0, r0, #255	; 0xff
     130:	clz	r0, r0
     134:	lsr	r0, r0, #5
     138:	bx	lr
     13c:	mov	r0, #1
     140:	bx	lr

00000144 <MyGame_InParentNamespace_print_json_table>:
     144:	bx	lr

00000148 <MyGame_InParentNamespace_verify_table>:
     148:	mov	r0, #0
     14c:	bx	lr

00000150 <Fantasy_Attacker_verify_table>:
     150:	mov	r3, #4
     154:	mov	r1, #0
     158:	mov	r2, r3
     15c:	b	0 <flatcc_verify_field>

00000160 <MyGame_Example_TestJSONPrefix_print_json_table>:
     160:	movw	ip, #0
     164:	movt	ip, #0
     168:	strd	r4, [sp, #-16]!
     16c:	str	r6, [sp, #8]
     170:	mov	r2, #0
     174:	movw	r3, #0
     178:	movt	r3, #0
     17c:	str	lr, [sp, #12]
     180:	sub	sp, sp, #8
     184:	mov	lr, #21
     188:	mov	r4, r0
     18c:	mov	r5, r1
     190:	mov	r6, #22
     194:	str	lr, [sp]
     198:	str	ip, [sp, #4]
     19c:	bl	0 <flatcc_json_printer_table_field>
     1a0:	movw	r2, #0
     1a4:	movt	r2, #0
     1a8:	str	r6, [sp]
     1ac:	mov	r1, r5
     1b0:	mov	r0, r4
     1b4:	movw	r3, #0
     1b8:	movt	r3, #0
     1bc:	str	r2, [sp, #4]
     1c0:	mov	r2, #1
     1c4:	bl	0 <flatcc_json_printer_table_field>
     1c8:	movw	r2, #0
     1cc:	movt	r2, #0
     1d0:	str	r6, [sp]
     1d4:	mov	r1, r5
     1d8:	mov	r0, r4
     1dc:	movw	r3, #0
     1e0:	movt	r3, #0
     1e4:	str	r2, [sp, #4]
     1e8:	mov	r2, #2
     1ec:	bl	0 <flatcc_json_printer_table_field>
     1f0:	add	sp, sp, #8
     1f4:	ldrd	r4, [sp]
     1f8:	ldr	r6, [sp, #8]
     1fc:	add	sp, sp, #12
     200:	pop	{pc}		; (ldr pc, [sp], #4)

00000204 <Fantasy_Attacker_print_json_table>:
     204:	mov	ip, #0
     208:	push	{lr}		; (str lr, [sp, #-4]!)
     20c:	mov	lr, #19
     210:	sub	sp, sp, #12
     214:	mov	r2, ip
     218:	movw	r3, #0
     21c:	movt	r3, #0
     220:	str	lr, [sp]
     224:	str	ip, [sp, #4]
     228:	bl	0 <flatcc_json_printer_int32_field>
     22c:	add	sp, sp, #12
     230:	pop	{pc}		; (ldr pc, [sp], #4)

00000234 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
     234:	mov	r2, #15
     238:	strd	r4, [sp, #-20]!	; 0xffffffec
     23c:	movw	r3, #0
     240:	movt	r3, #0
     244:	strd	r6, [sp, #8]
     248:	mov	r6, #0
     24c:	mov	r7, #0
     250:	str	lr, [sp, #16]
     254:	sub	sp, sp, #20
     258:	mov	r4, r0
     25c:	mov	r5, r1
     260:	str	r2, [sp]
     264:	mov	r2, #0
     268:	strd	r6, [sp, #8]
     26c:	bl	0 <flatcc_json_printer_int64_field>
     270:	mov	ip, #0
     274:	mov	r2, #21
     278:	mov	r1, r5
     27c:	mov	r0, r4
     280:	movw	r3, #0
     284:	movt	r3, #0
     288:	stm	sp, {r2, ip}
     28c:	mov	r2, #1
     290:	bl	0 <flatcc_json_printer_uint32_field>
     294:	add	sp, sp, #20
     298:	ldrd	r4, [sp]
     29c:	ldrd	r6, [sp, #8]
     2a0:	add	sp, sp, #16
     2a4:	pop	{pc}		; (ldr pc, [sp], #4)

000002a8 <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
     2a8:	mov	r2, #15
     2ac:	strd	r4, [sp, #-20]!	; 0xffffffec
     2b0:	movw	r3, #0
     2b4:	movt	r3, #0
     2b8:	strd	r6, [sp, #8]
     2bc:	mov	r6, #0
     2c0:	mov	r7, #0
     2c4:	str	lr, [sp, #16]
     2c8:	sub	sp, sp, #20
     2cc:	mov	r4, r0
     2d0:	mov	r5, r1
     2d4:	str	r2, [sp]
     2d8:	mov	r2, #0
     2dc:	strd	r6, [sp, #8]
     2e0:	bl	0 <flatcc_json_printer_int64_field>
     2e4:	mov	ip, #0
     2e8:	mov	r2, #16
     2ec:	mov	r1, r5
     2f0:	mov	r0, r4
     2f4:	movw	r3, #0
     2f8:	movt	r3, #0
     2fc:	stm	sp, {r2, ip}
     300:	mov	r2, #1
     304:	bl	0 <flatcc_json_printer_uint32_field>
     308:	add	sp, sp, #20
     30c:	ldrd	r4, [sp]
     310:	ldrd	r6, [sp, #8]
     314:	add	sp, sp, #16
     318:	pop	{pc}		; (ldr pc, [sp], #4)

0000031c <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
     31c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     320:	movw	r3, #0
     324:	movt	r3, #0
     328:	strd	r6, [sp, #8]
     32c:	mov	r7, #4
     330:	mov	r4, r0
     334:	strd	r8, [sp, #16]
     338:	mov	r5, r1
     33c:	mov	r6, #8
     340:	strd	sl, [sp, #24]
     344:	mov	sl, #0
     348:	mov	fp, #9
     34c:	str	lr, [sp, #32]
     350:	sub	sp, sp, #20
     354:	mov	r2, sl
     358:	mov	r8, #0
     35c:	mov	r9, #0
     360:	str	r7, [sp]
     364:	bl	0 <flatcc_json_printer_string_field>
     368:	mov	r1, r5
     36c:	mov	r0, r4
     370:	str	fp, [sp]
     374:	mov	r2, #1
     378:	movw	r3, #0
     37c:	movt	r3, #0
     380:	str	sl, [sp, #4]
     384:	bl	0 <flatcc_json_printer_uint32_field>
     388:	mov	r1, r5
     38c:	mov	r0, r4
     390:	str	r7, [sp]
     394:	mov	r2, #2
     398:	movw	r3, #0
     39c:	movt	r3, #0
     3a0:	bl	0 <flatcc_json_printer_string_field>
     3a4:	mov	r1, r5
     3a8:	mov	r0, r4
     3ac:	str	r6, [sp]
     3b0:	mov	r2, #3
     3b4:	movw	r3, #0
     3b8:	movt	r3, #0
     3bc:	strd	r8, [sp, #8]
     3c0:	bl	0 <flatcc_json_printer_int64_field>
     3c4:	mov	r2, r7
     3c8:	mov	r1, r5
     3cc:	str	r7, [sp]
     3d0:	mov	r0, r4
     3d4:	movw	r3, #0
     3d8:	movt	r3, #0
     3dc:	bl	0 <flatcc_json_printer_string_field>
     3e0:	mov	r1, r5
     3e4:	mov	r0, r4
     3e8:	str	r6, [sp]
     3ec:	mov	r2, #5
     3f0:	movw	r3, #0
     3f4:	movt	r3, #0
     3f8:	strd	r8, [sp, #8]
     3fc:	bl	0 <flatcc_json_printer_int64_field>
     400:	mov	r1, r5
     404:	mov	r0, r4
     408:	str	fp, [sp]
     40c:	mov	r2, #6
     410:	movw	r3, #0
     414:	movt	r3, #0
     418:	str	sl, [sp, #4]
     41c:	bl	0 <flatcc_json_printer_uint32_field>
     420:	mov	r1, r5
     424:	mov	r0, r4
     428:	str	r6, [sp]
     42c:	mov	r2, #7
     430:	movw	r3, #0
     434:	movt	r3, #0
     438:	strd	r8, [sp, #8]
     43c:	bl	0 <flatcc_json_printer_int64_field>
     440:	mov	r2, r6
     444:	mov	r1, r5
     448:	str	fp, [sp]
     44c:	mov	r0, r4
     450:	movw	r3, #0
     454:	movt	r3, #0
     458:	str	sl, [sp, #4]
     45c:	bl	0 <flatcc_json_printer_uint32_field>
     460:	add	sp, sp, #20
     464:	ldrd	r4, [sp]
     468:	ldrd	r6, [sp, #8]
     46c:	ldrd	r8, [sp, #16]
     470:	ldrd	sl, [sp, #24]
     474:	add	sp, sp, #32
     478:	pop	{pc}		; (ldr pc, [sp], #4)

0000047c <MyGame_Example_Monster_print_json_table>:
     47c:	movw	ip, #0
     480:	movt	ip, #0
     484:	strd	r4, [sp, #-36]!	; 0xffffffdc
     488:	strd	r6, [sp, #8]
     48c:	mov	r2, #0
     490:	movw	r3, #0
     494:	movt	r3, #0
     498:	strd	r8, [sp, #16]
     49c:	mov	r8, #3
     4a0:	strd	sl, [sp, #24]
     4a4:	mov	r4, r0
     4a8:	mov	r5, r1
     4ac:	str	lr, [sp, #32]
     4b0:	sub	sp, sp, #28
     4b4:	mov	r7, #4
     4b8:	mov	fp, #9
     4bc:	mov	r6, #17
     4c0:	stm	sp, {r8, ip}
     4c4:	movw	sl, #0
     4c8:	movt	sl, #0
     4cc:	bl	0 <flatcc_json_printer_struct_field>
     4d0:	mov	ip, #150	; 0x96
     4d4:	mov	r1, r5
     4d8:	mov	r0, r4
     4dc:	mov	r2, #1
     4e0:	movw	r3, #0
     4e4:	movt	r3, #0
     4e8:	stm	sp, {r7, ip}
     4ec:	bl	0 <flatcc_json_printer_int16_field>
     4f0:	mov	lr, #100	; 0x64
     4f4:	mov	ip, #2
     4f8:	mov	r2, ip
     4fc:	mov	r1, r5
     500:	stm	sp, {ip, lr}
     504:	movw	ip, #0
     508:	movt	ip, #0
     50c:	mov	r0, r4
     510:	movw	r3, #0
     514:	movt	r3, #0
     518:	str	ip, [sp, #20]
     51c:	mov	r9, #0
     520:	bl	0 <flatcc_json_printer_int16_field>
     524:	mov	r2, r8
     528:	mov	r1, r5
     52c:	str	r7, [sp]
     530:	mov	r0, r4
     534:	movw	r3, #0
     538:	movt	r3, #0
     53c:	mov	r8, #16
     540:	bl	0 <flatcc_json_printer_string_field>
     544:	mov	r1, r5
     548:	mov	r0, r4
     54c:	str	fp, [sp]
     550:	mov	r2, #5
     554:	movw	r3, #0
     558:	movt	r3, #0
     55c:	bl	0 <flatcc_json_printer_uint8_vector_field>
     560:	mov	lr, #8
     564:	mov	r3, #5
     568:	movw	r2, #0
     56c:	movt	r2, #0
     570:	mov	r1, r5
     574:	mov	r0, r4
     578:	stm	sp, {r3, lr}
     57c:	movw	r3, #0
     580:	movt	r3, #0
     584:	str	r2, [sp, #8]
     588:	mov	r2, #6
     58c:	bl	0 <flatcc_json_printer_int8_enum_field>
     590:	movw	r0, #0
     594:	movt	r0, #0
     598:	str	r7, [sp]
     59c:	movw	r3, #0
     5a0:	movt	r3, #0
     5a4:	mov	r1, r5
     5a8:	mov	r2, #8
     5ac:	str	r3, [sp, #4]
     5b0:	movw	r3, #0
     5b4:	movt	r3, #0
     5b8:	str	r0, [sp, #8]
     5bc:	mov	r0, r4
     5c0:	bl	0 <flatcc_json_printer_union_field>
     5c4:	ldr	ip, [sp, #20]
     5c8:	mov	r3, #5
     5cc:	mov	r2, fp
     5d0:	mov	r1, r5
     5d4:	mov	r0, r4
     5d8:	stm	sp, {r3, r7, ip}
     5dc:	movw	r3, #0
     5e0:	movt	r3, #0
     5e4:	bl	0 <flatcc_json_printer_struct_vector_field>
     5e8:	mov	r1, r5
     5ec:	mov	r0, r4
     5f0:	str	r6, [sp]
     5f4:	mov	r2, #10
     5f8:	movw	r3, #0
     5fc:	movt	r3, #0
     600:	bl	0 <flatcc_json_printer_string_vector_field>
     604:	mov	r1, r5
     608:	mov	r0, r4
     60c:	stm	sp, {r6, sl}
     610:	mov	r2, #11
     614:	movw	r3, #0
     618:	movt	r3, #0
     61c:	bl	0 <flatcc_json_printer_table_vector_field>
     620:	mov	r3, #5
     624:	mov	r1, r5
     628:	mov	r0, r4
     62c:	mov	r2, #12
     630:	stm	sp, {r3, sl}
     634:	movw	r3, #0
     638:	movt	r3, #0
     63c:	bl	0 <flatcc_json_printer_table_field>
     640:	mov	r2, #20
     644:	mov	r1, r5
     648:	mov	r0, r4
     64c:	movw	r3, #0
     650:	movt	r3, #0
     654:	stm	sp, {r2, r9, sl}
     658:	mov	r2, #13
     65c:	mov	sl, #0
     660:	bl	0 <flatcc_json_printer_table_as_nested_root>
     664:	movw	r2, #0
     668:	movt	r2, #0
     66c:	str	fp, [sp]
     670:	mov	r1, r5
     674:	mov	r0, r4
     678:	movw	r3, #0
     67c:	movt	r3, #0
     680:	str	r2, [sp, #4]
     684:	mov	r2, #14
     688:	mov	fp, #0
     68c:	bl	0 <flatcc_json_printer_table_field>
     690:	mov	lr, #8
     694:	mov	r2, #1
     698:	mov	r1, r5
     69c:	mov	r0, r4
     6a0:	movw	r3, #0
     6a4:	movt	r3, #0
     6a8:	str	lr, [sp]
     6ac:	str	r2, [sp, #4]
     6b0:	mov	r2, #15
     6b4:	bl	0 <flatcc_json_printer_bool_field>
     6b8:	mov	r1, r5
     6bc:	mov	r0, r4
     6c0:	strd	r8, [sp]
     6c4:	mov	r2, r8
     6c8:	movw	r3, #0
     6cc:	movt	r3, #0
     6d0:	bl	0 <flatcc_json_printer_int32_field>
     6d4:	mov	r2, r6
     6d8:	mov	r1, r5
     6dc:	strd	r8, [sp]
     6e0:	mov	r0, r4
     6e4:	movw	r3, #0
     6e8:	movt	r3, #0
     6ec:	bl	0 <flatcc_json_printer_uint32_field>
     6f0:	mov	r1, r5
     6f4:	mov	r0, r4
     6f8:	str	r8, [sp]
     6fc:	mov	r2, #18
     700:	movw	r3, #0
     704:	movt	r3, #0
     708:	strd	sl, [sp, #8]
     70c:	bl	0 <flatcc_json_printer_int64_field>
     710:	mov	r1, r5
     714:	mov	r0, r4
     718:	str	r8, [sp]
     71c:	mov	r2, #19
     720:	movw	r3, #0
     724:	movt	r3, #0
     728:	strd	sl, [sp, #8]
     72c:	bl	0 <flatcc_json_printer_uint64_field>
     730:	mov	r1, r5
     734:	mov	r0, r4
     738:	stm	sp, {r6, r9}
     73c:	mov	r2, #20
     740:	movw	r3, #0
     744:	movt	r3, #0
     748:	bl	0 <flatcc_json_printer_int32_field>
     74c:	mov	r1, r5
     750:	mov	r0, r4
     754:	stm	sp, {r6, r9}
     758:	mov	r2, #21
     75c:	movw	r3, #0
     760:	movt	r3, #0
     764:	bl	0 <flatcc_json_printer_uint32_field>
     768:	mov	r1, r5
     76c:	mov	r0, r4
     770:	str	r6, [sp]
     774:	mov	r2, #22
     778:	movw	r3, #0
     77c:	movt	r3, #0
     780:	strd	sl, [sp, #8]
     784:	bl	0 <flatcc_json_printer_int64_field>
     788:	mov	r1, r5
     78c:	mov	r0, r4
     790:	str	r6, [sp]
     794:	mov	r2, #23
     798:	movw	r3, #0
     79c:	movt	r3, #0
     7a0:	strd	sl, [sp, #8]
     7a4:	bl	0 <flatcc_json_printer_uint64_field>
     7a8:	str	r8, [sp]
     7ac:	mov	r8, #5
     7b0:	mov	r1, r5
     7b4:	mov	r0, r4
     7b8:	mov	r2, #24
     7bc:	movw	r3, #0
     7c0:	movt	r3, #0
     7c4:	bl	0 <flatcc_json_printer_bool_vector_field>
     7c8:	mov	r1, r5
     7cc:	mov	r0, r4
     7d0:	vldr	s0, [pc, #412]	; 974 <MyGame_Example_Monster_print_json_table+0x4f8>
     7d4:	mov	r2, #25
     7d8:	movw	r3, #0
     7dc:	movt	r3, #0
     7e0:	str	r8, [sp]
     7e4:	bl	0 <flatcc_json_printer_float_field>
     7e8:	mov	r2, #6
     7ec:	mov	r1, r5
     7f0:	vldr	s0, [pc, #384]	; 978 <MyGame_Example_Monster_print_json_table+0x4fc>
     7f4:	mov	r9, r2
     7f8:	mov	r0, r4
     7fc:	movw	r3, #0
     800:	movt	r3, #0
     804:	str	r2, [sp]
     808:	mov	r2, #26
     80c:	bl	0 <flatcc_json_printer_float_field>
     810:	vldr	s0, [pc, #356]	; 97c <MyGame_Example_Monster_print_json_table+0x500>
     814:	mov	r1, r5
     818:	mov	r0, r4
     81c:	mov	r2, #27
     820:	movw	r3, #0
     824:	movt	r3, #0
     828:	str	r9, [sp]
     82c:	bl	0 <flatcc_json_printer_float_field>
     830:	mov	ip, #18
     834:	mov	r1, r5
     838:	mov	r0, r4
     83c:	mov	r2, #28
     840:	movw	r3, #0
     844:	movt	r3, #0
     848:	str	ip, [sp]
     84c:	bl	0 <flatcc_json_printer_string_vector_field>
     850:	mov	lr, #8
     854:	movw	ip, #0
     858:	movt	ip, #0
     85c:	mov	r1, r5
     860:	str	lr, [sp, #4]
     864:	mov	lr, #23
     868:	mov	r0, r4
     86c:	mov	r2, #29
     870:	movw	r3, #0
     874:	movt	r3, #0
     878:	str	lr, [sp]
     87c:	str	ip, [sp, #8]
     880:	bl	0 <flatcc_json_printer_struct_vector_field>
     884:	mov	r1, r5
     888:	mov	r0, r4
     88c:	str	r7, [sp]
     890:	mov	r2, #30
     894:	movw	r3, #0
     898:	movt	r3, #0
     89c:	bl	0 <flatcc_json_printer_uint8_vector_field>
     8a0:	ldr	ip, [sp, #20]
     8a4:	mov	r1, r5
     8a8:	mov	r0, r4
     8ac:	mov	r2, #31
     8b0:	movw	r3, #0
     8b4:	movt	r3, #0
     8b8:	str	r8, [sp]
     8bc:	stmib	sp, {r7, ip}
     8c0:	bl	0 <flatcc_json_printer_struct_vector_field>
     8c4:	mov	ip, #15
     8c8:	mov	r1, r5
     8cc:	mov	r0, r4
     8d0:	mov	r2, #32
     8d4:	movw	r3, #0
     8d8:	movt	r3, #0
     8dc:	str	ip, [sp]
     8e0:	bl	0 <flatcc_json_printer_int64_vector_field>
     8e4:	mov	r1, r5
     8e8:	mov	r0, r4
     8ec:	str	r6, [sp]
     8f0:	mov	r2, #33	; 0x21
     8f4:	movw	r3, #0
     8f8:	movt	r3, #0
     8fc:	bl	0 <flatcc_json_printer_double_vector_field>
     900:	mov	lr, #21
     904:	movw	ip, #0
     908:	movt	ip, #0
     90c:	mov	r1, r5
     910:	mov	r0, r4
     914:	mov	r2, #34	; 0x22
     918:	str	lr, [sp]
     91c:	movw	r3, #0
     920:	movt	r3, #0
     924:	str	ip, [sp, #4]
     928:	bl	0 <flatcc_json_printer_table_field>
     92c:	mov	lr, #10
     930:	movw	ip, #0
     934:	movt	ip, #0
     938:	mov	r1, r5
     93c:	mov	r0, r4
     940:	mov	r2, #35	; 0x23
     944:	str	lr, [sp]
     948:	movw	r3, #0
     94c:	movt	r3, #0
     950:	str	ip, [sp, #4]
     954:	bl	0 <flatcc_json_printer_table_field>
     958:	add	sp, sp, #28
     95c:	ldrd	r4, [sp]
     960:	ldrd	r6, [sp, #8]
     964:	ldrd	r8, [sp, #16]
     968:	ldrd	sl, [sp, #24]
     96c:	add	sp, sp, #32
     970:	pop	{pc}		; (ldr pc, [sp], #4)
     974:	.word	0x489965e0
     978:	.word	0x40400000
     97c:	.word	0x00000000

00000980 <MyGame_Example_TestBase64_print_json_table>:
     980:	mov	ip, #4
     984:	strd	r4, [sp, #-16]!
     988:	mov	r4, #0
     98c:	str	r6, [sp, #8]
     990:	mov	r2, r4
     994:	movw	r3, #0
     998:	movt	r3, #0
     99c:	str	lr, [sp, #12]
     9a0:	sub	sp, sp, #8
     9a4:	mov	r5, r0
     9a8:	mov	r6, r1
     9ac:	str	ip, [sp]
     9b0:	str	r4, [sp, #4]
     9b4:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     9b8:	mov	ip, #1
     9bc:	mov	r3, #7
     9c0:	mov	r1, r6
     9c4:	mov	r0, r5
     9c8:	mov	r2, ip
     9cc:	stm	sp, {r3, ip}
     9d0:	movw	r3, #0
     9d4:	movt	r3, #0
     9d8:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     9dc:	mov	ip, #6
     9e0:	mov	r1, r6
     9e4:	mov	r0, r5
     9e8:	mov	r2, #2
     9ec:	movw	r3, #0
     9f0:	movt	r3, #0
     9f4:	str	ip, [sp]
     9f8:	str	r4, [sp, #4]
     9fc:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     a00:	add	sp, sp, #8
     a04:	ldrd	r4, [sp]
     a08:	ldr	r6, [sp, #8]
     a0c:	add	sp, sp, #12
     a10:	pop	{pc}		; (ldr pc, [sp], #4)

00000a14 <MyGame_Example_Ability_print_json_struct>:
     a14:	movw	ip, #0
     a18:	movt	ip, #0
     a1c:	strd	r4, [sp, #-12]!
     a20:	str	lr, [sp, #8]
     a24:	sub	sp, sp, #12
     a28:	mov	lr, #2
     a2c:	mov	r3, #0
     a30:	mov	r4, r1
     a34:	mov	r2, r1
     a38:	mov	r1, r3
     a3c:	stm	sp, {ip, lr}
     a40:	mov	r5, r0
     a44:	bl	0 <flatcc_json_printer_uint32_struct_field>
     a48:	mov	ip, #8
     a4c:	movw	r1, #0
     a50:	movt	r1, #0
     a54:	mov	r2, r4
     a58:	mov	r0, r5
     a5c:	mov	r3, #4
     a60:	stm	sp, {r1, ip}
     a64:	mov	r1, #1
     a68:	bl	0 <flatcc_json_printer_uint32_struct_field>
     a6c:	add	sp, sp, #12
     a70:	ldrd	r4, [sp]
     a74:	add	sp, sp, #8
     a78:	pop	{pc}		; (ldr pc, [sp], #4)

00000a7c <MyGame_Example_Stat_print_json_table>:
     a7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
     a80:	mov	r2, #0
     a84:	movw	r3, #0
     a88:	movt	r3, #0
     a8c:	str	r6, [sp, #8]
     a90:	mov	r6, #2
     a94:	strd	r8, [sp, #12]
     a98:	mov	r4, r0
     a9c:	mov	r5, r1
     aa0:	str	lr, [sp, #20]
     aa4:	sub	sp, sp, #16
     aa8:	mov	r8, #0
     aac:	mov	r9, #0
     ab0:	str	r6, [sp]
     ab4:	bl	0 <flatcc_json_printer_string_field>
     ab8:	mov	r3, #3
     abc:	mov	r1, r5
     ac0:	mov	r0, r4
     ac4:	mov	r2, #1
     ac8:	str	r3, [sp]
     acc:	movw	r3, #0
     ad0:	movt	r3, #0
     ad4:	strd	r8, [sp, #8]
     ad8:	bl	0 <flatcc_json_printer_int64_field>
     adc:	mov	ip, #0
     ae0:	mov	lr, #5
     ae4:	mov	r2, r6
     ae8:	mov	r1, r5
     aec:	mov	r0, r4
     af0:	movw	r3, #0
     af4:	movt	r3, #0
     af8:	str	lr, [sp]
     afc:	str	ip, [sp, #4]
     b00:	bl	0 <flatcc_json_printer_uint16_field>
     b04:	add	sp, sp, #16
     b08:	ldrd	r4, [sp]
     b0c:	ldr	r6, [sp, #8]
     b10:	ldrd	r8, [sp, #12]
     b14:	add	sp, sp, #20
     b18:	pop	{pc}		; (ldr pc, [sp], #4)

00000b1c <MyGame_Example_Test_print_json_struct>:
     b1c:	movw	ip, #0
     b20:	movt	ip, #0
     b24:	strd	r4, [sp, #-16]!
     b28:	mov	r4, #1
     b2c:	str	r6, [sp, #8]
     b30:	mov	r3, #0
     b34:	str	lr, [sp, #12]
     b38:	sub	sp, sp, #8
     b3c:	mov	r5, r1
     b40:	mov	r2, r1
     b44:	mov	r1, r3
     b48:	str	ip, [sp]
     b4c:	mov	r6, r0
     b50:	str	r4, [sp, #4]
     b54:	bl	0 <flatcc_json_printer_int16_struct_field>
     b58:	movw	ip, #0
     b5c:	movt	ip, #0
     b60:	mov	r2, r5
     b64:	mov	r1, r4
     b68:	mov	r0, r6
     b6c:	mov	r3, #2
     b70:	str	ip, [sp]
     b74:	str	r4, [sp, #4]
     b78:	bl	0 <flatcc_json_printer_int8_struct_field>
     b7c:	add	sp, sp, #8
     b80:	ldrd	r4, [sp]
     b84:	ldr	r6, [sp, #8]
     b88:	add	sp, sp, #12
     b8c:	pop	{pc}		; (ldr pc, [sp], #4)

00000b90 <MyGame_Example_Any_print_json_union>:
     b90:	ldrb	r3, [r1, #8]
     b94:	sub	r3, r3, #1
     b98:	cmp	r3, #3
     b9c:	ldrls	pc, [pc, r3, lsl #2]
     ba0:	b	be4 <MyGame_Example_Any_print_json_union+0x54>
     ba4:	.word	0x00000bd8
     ba8:	.word	0x00000bcc
     bac:	.word	0x00000bc0
     bb0:	.word	0x00000bb4
     bb4:	movw	r2, #0
     bb8:	movt	r2, #0
     bbc:	b	0 <flatcc_json_printer_union_table>
     bc0:	movw	r2, #0
     bc4:	movt	r2, #0
     bc8:	b	0 <flatcc_json_printer_union_table>
     bcc:	movw	r2, #0
     bd0:	movt	r2, #0
     bd4:	b	0 <flatcc_json_printer_union_table>
     bd8:	movw	r2, #0
     bdc:	movt	r2, #0
     be0:	b	0 <flatcc_json_printer_union_table>
     be4:	bx	lr

00000be8 <MyGame_Example_Alt_print_json_table>:
     be8:	movw	ip, #0
     bec:	movt	ip, #0
     bf0:	strd	r4, [sp, #-12]!
     bf4:	str	lr, [sp, #8]
     bf8:	sub	sp, sp, #20
     bfc:	mov	lr, #6
     c00:	mov	r2, #0
     c04:	movw	r3, #0
     c08:	movt	r3, #0
     c0c:	str	lr, [sp]
     c10:	mov	r4, r0
     c14:	str	ip, [sp, #4]
     c18:	mov	r5, r1
     c1c:	bl	0 <flatcc_json_printer_table_field>
     c20:	mov	r2, #5
     c24:	movw	r3, #0
     c28:	movt	r3, #0
     c2c:	mov	r1, r5
     c30:	mov	r0, r4
     c34:	strd	r2, [sp]
     c38:	mov	r2, #1
     c3c:	movw	r3, #0
     c40:	movt	r3, #0
     c44:	bl	0 <flatcc_json_printer_table_field>
     c48:	mov	lr, #7
     c4c:	movw	r3, #0
     c50:	movt	r3, #0
     c54:	movw	ip, #0
     c58:	movt	ip, #0
     c5c:	mov	r1, r5
     c60:	str	lr, [sp]
     c64:	mov	r0, r4
     c68:	mov	r2, #3
     c6c:	str	ip, [sp, #4]
     c70:	str	r3, [sp, #8]
     c74:	movw	r3, #0
     c78:	movt	r3, #0
     c7c:	bl	0 <flatcc_json_printer_union_vector_field>
     c80:	add	sp, sp, #20
     c84:	ldrd	r4, [sp]
     c88:	add	sp, sp, #8
     c8c:	pop	{pc}		; (ldr pc, [sp], #4)

00000c90 <Fantasy_Movie_print_json_table>:
     c90:	mov	r2, #14
     c94:	strd	r4, [sp, #-28]!	; 0xffffffe4
     c98:	movw	r4, #0
     c9c:	movt	r4, #0
     ca0:	movw	r5, #0
     ca4:	movt	r5, #0
     ca8:	strd	r6, [sp, #8]
     cac:	movw	r3, #0
     cb0:	movt	r3, #0
     cb4:	strd	r8, [sp, #16]
     cb8:	mov	r8, #10
     cbc:	str	lr, [sp, #24]
     cc0:	sub	sp, sp, #20
     cc4:	mov	r6, r0
     cc8:	mov	r7, r1
     ccc:	mov	r9, #9
     cd0:	stm	sp, {r2, r5}
     cd4:	mov	r2, #1
     cd8:	str	r4, [sp, #8]
     cdc:	bl	0 <flatcc_json_printer_union_field>
     ce0:	mov	r1, r7
     ce4:	mov	r0, r6
     ce8:	str	r8, [sp]
     cec:	mov	r2, #3
     cf0:	movw	r3, #0
     cf4:	movt	r3, #0
     cf8:	str	r5, [sp, #4]
     cfc:	str	r4, [sp, #8]
     d00:	bl	0 <flatcc_json_printer_union_field>
     d04:	mov	r1, r7
     d08:	mov	r0, r6
     d0c:	str	r9, [sp]
     d10:	mov	r2, #5
     d14:	movw	r3, #0
     d18:	movt	r3, #0
     d1c:	str	r5, [sp, #4]
     d20:	str	r4, [sp, #8]
     d24:	bl	0 <flatcc_json_printer_union_field>
     d28:	mov	r2, #5
     d2c:	mov	r1, r7
     d30:	mov	r0, r6
     d34:	movw	r3, #0
     d38:	movt	r3, #0
     d3c:	stm	sp, {r2, r5}
     d40:	mov	r2, #7
     d44:	str	r4, [sp, #8]
     d48:	bl	0 <flatcc_json_printer_union_field>
     d4c:	mov	r2, r9
     d50:	mov	r1, r7
     d54:	str	r8, [sp]
     d58:	mov	r0, r6
     d5c:	movw	r3, #0
     d60:	movt	r3, #0
     d64:	str	r5, [sp, #4]
     d68:	str	r4, [sp, #8]
     d6c:	bl	0 <flatcc_json_printer_union_vector_field>
     d70:	add	sp, sp, #20
     d74:	ldrd	r4, [sp]
     d78:	ldrd	r6, [sp, #8]
     d7c:	ldrd	r8, [sp, #16]
     d80:	add	sp, sp, #24
     d84:	pop	{pc}		; (ldr pc, [sp], #4)

00000d88 <Fantasy_Character_print_json_union>:
     d88:	ldrb	r3, [r1, #8]
     d8c:	mov	r2, r1
     d90:	mov	ip, r0
     d94:	cmp	r3, #10
     d98:	bhi	dc0 <Fantasy_Character_print_json_union+0x38>
     d9c:	cmp	r3, #9
     da0:	bcs	de4 <Fantasy_Character_print_json_union+0x5c>
     da4:	cmp	r3, #2
     da8:	beq	df0 <Fantasy_Character_print_json_union+0x68>
     dac:	cmp	r3, #8
     db0:	bne	ddc <Fantasy_Character_print_json_union+0x54>
     db4:	movw	r2, #0
     db8:	movt	r2, #0
     dbc:	b	0 <flatcc_json_printer_union_struct>
     dc0:	cmp	r3, #11
     dc4:	beq	dd0 <Fantasy_Character_print_json_union+0x48>
     dc8:	cmp	r3, #255	; 0xff
     dcc:	bne	de0 <Fantasy_Character_print_json_union+0x58>
     dd0:	mov	r1, r2
     dd4:	mov	r0, ip
     dd8:	b	0 <flatcc_json_printer_union_string>
     ddc:	bx	lr
     de0:	bx	lr
     de4:	movw	r2, #0
     de8:	movt	r2, #0
     dec:	b	0 <flatcc_json_printer_union_struct>
     df0:	movw	r2, #0
     df4:	movt	r2, #0
     df8:	b	0 <flatcc_json_printer_union_table>

00000dfc <Fantasy_BookReader_print_json_struct>:
     dfc:	movw	ip, #0
     e00:	movt	ip, #0
     e04:	push	{lr}		; (str lr, [sp, #-4]!)
     e08:	mov	lr, #10
     e0c:	sub	sp, sp, #12
     e10:	mov	r3, #0
     e14:	mov	r2, r1
     e18:	mov	r1, r3
     e1c:	stm	sp, {ip, lr}
     e20:	bl	0 <flatcc_json_printer_int32_struct_field>
     e24:	add	sp, sp, #12
     e28:	pop	{pc}		; (ldr pc, [sp], #4)

00000e2c <Fantasy_Rapunzel_print_json_struct>:
     e2c:	movw	ip, #0
     e30:	movt	ip, #0
     e34:	push	{lr}		; (str lr, [sp, #-4]!)
     e38:	mov	lr, #11
     e3c:	sub	sp, sp, #12
     e40:	mov	r3, #0
     e44:	mov	r2, r1
     e48:	mov	r1, r3
     e4c:	stm	sp, {ip, lr}
     e50:	bl	0 <flatcc_json_printer_uint16_struct_field>
     e54:	add	sp, sp, #12
     e58:	pop	{pc}		; (ldr pc, [sp], #4)

00000e5c <Fantasy_Character_print_json_union_type>:
     e5c:	cmp	r1, #9
     e60:	mov	r3, r0
     e64:	beq	eb0 <Fantasy_Character_print_json_union_type+0x54>
     e68:	bls	e90 <Fantasy_Character_print_json_union_type+0x34>
     e6c:	cmp	r1, #11
     e70:	beq	ec0 <Fantasy_Character_print_json_union_type+0x64>
     e74:	bcc	ed0 <Fantasy_Character_print_json_union_type+0x74>
     e78:	cmp	r1, #255	; 0xff
     e7c:	bne	ee0 <Fantasy_Character_print_json_union_type+0x84>
     e80:	movw	r1, #0
     e84:	movt	r1, #0
     e88:	mov	r2, #6
     e8c:	b	0 <flatcc_json_printer_enum>
     e90:	cmp	r1, #2
     e94:	beq	ef4 <Fantasy_Character_print_json_union_type+0x98>
     e98:	cmp	r1, #8
     e9c:	bne	ee0 <Fantasy_Character_print_json_union_type+0x84>
     ea0:	mov	r2, r1
     ea4:	movw	r1, #0
     ea8:	movt	r1, #0
     eac:	b	0 <flatcc_json_printer_enum>
     eb0:	movw	r1, #0
     eb4:	movt	r1, #0
     eb8:	mov	r2, #5
     ebc:	b	0 <flatcc_json_printer_enum>
     ec0:	movw	r1, #0
     ec4:	movt	r1, #0
     ec8:	mov	r2, #5
     ecc:	b	0 <flatcc_json_printer_enum>
     ed0:	movw	r1, #0
     ed4:	movt	r1, #0
     ed8:	mov	r2, #7
     edc:	b	0 <flatcc_json_printer_enum>
     ee0:	movw	r1, #0
     ee4:	movt	r1, #0
     ee8:	mov	r0, r3
     eec:	mov	r2, #4
     ef0:	b	0 <flatcc_json_printer_enum>
     ef4:	movw	r1, #0
     ef8:	movt	r1, #0
     efc:	mov	r2, #5
     f00:	b	0 <flatcc_json_printer_enum>

00000f04 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
     f04:	mov	ip, #5
     f08:	strd	r4, [sp, #-20]!	; 0xffffffec
     f0c:	mov	r4, #2
     f10:	movw	r5, #0
     f14:	movt	r5, #0
     f18:	strd	r6, [sp, #8]
     f1c:	str	lr, [sp, #16]
     f20:	sub	sp, sp, #20
     f24:	mov	r2, #0
     f28:	movw	r3, #0
     f2c:	movt	r3, #0
     f30:	str	ip, [sp]
     f34:	mov	r6, r0
     f38:	mov	r7, r1
     f3c:	strd	r4, [sp, #4]
     f40:	bl	0 <flatcc_json_printer_int8_enum_field>
     f44:	mov	r2, #6
     f48:	mov	r1, r7
     f4c:	mov	r0, r6
     f50:	movw	r3, #0
     f54:	movt	r3, #0
     f58:	stm	sp, {r2, r4, r5}
     f5c:	mov	r2, #1
     f60:	bl	0 <flatcc_json_printer_int8_enum_field>
     f64:	mov	r2, r4
     f68:	mov	r1, r7
     f6c:	str	r4, [sp]
     f70:	mov	r0, r6
     f74:	movw	r3, #0
     f78:	movt	r3, #0
     f7c:	str	r4, [sp, #4]
     f80:	bl	0 <flatcc_json_printer_uint8_field>
     f84:	mov	ip, #3
     f88:	mov	r1, r7
     f8c:	mov	r0, r6
     f90:	mov	r2, ip
     f94:	movw	r3, #0
     f98:	movt	r3, #0
     f9c:	str	ip, [sp]
     fa0:	str	r4, [sp, #4]
     fa4:	bl	0 <flatcc_json_printer_uint8_field>
     fa8:	add	sp, sp, #20
     fac:	ldrd	r4, [sp]
     fb0:	ldrd	r6, [sp, #8]
     fb4:	add	sp, sp, #16
     fb8:	pop	{pc}		; (ldr pc, [sp], #4)

00000fbc <MyGame_Example_Color_print_json_enum>:
     fbc:	strd	r4, [sp, #-24]!	; 0xffffffe8
     fc0:	uxtb	r4, r1
     fc4:	tst	r4, #244	; 0xf4
     fc8:	strd	r6, [sp, #8]
     fcc:	movne	r5, #1
     fd0:	moveq	r5, #0
     fd4:	str	r8, [sp, #16]
     fd8:	cmp	r4, #0
     fdc:	str	lr, [sp, #20]
     fe0:	moveq	r5, #1
     fe4:	cmp	r5, #0
     fe8:	beq	1004 <MyGame_Example_Color_print_json_enum+0x48>
     fec:	ldrd	r4, [sp]
     ff0:	ldrd	r6, [sp, #8]
     ff4:	ldr	r8, [sp, #16]
     ff8:	ldr	lr, [sp, #20]
     ffc:	add	sp, sp, #24
    1000:	b	0 <flatcc_json_printer_int8>
    1004:	sub	r3, r4, #1
    1008:	mov	r6, r0
    100c:	tst	r3, r4
    1010:	movne	r7, #1
    1014:	moveq	r7, #0
    1018:	mov	r1, r7
    101c:	bl	0 <flatcc_json_printer_delimit_enum_flags>
    1020:	ands	r1, r4, #1
    1024:	bne	1058 <MyGame_Example_Color_print_json_enum+0x9c>
    1028:	tst	r4, #2
    102c:	bne	107c <MyGame_Example_Color_print_json_enum+0xc0>
    1030:	tst	r4, #8
    1034:	bne	10a0 <MyGame_Example_Color_print_json_enum+0xe4>
    1038:	mov	r1, r7
    103c:	mov	r0, r6
    1040:	ldrd	r4, [sp]
    1044:	ldrd	r6, [sp, #8]
    1048:	ldr	r8, [sp, #16]
    104c:	ldr	lr, [sp, #20]
    1050:	add	sp, sp, #24
    1054:	b	0 <flatcc_json_printer_delimit_enum_flags>
    1058:	mov	r1, r5
    105c:	movw	r2, #0
    1060:	movt	r2, #0
    1064:	mov	r3, #3
    1068:	mov	r0, r6
    106c:	bl	0 <flatcc_json_printer_enum_flag>
    1070:	tst	r4, #2
    1074:	mov	r1, #1
    1078:	beq	1030 <MyGame_Example_Color_print_json_enum+0x74>
    107c:	movw	r2, #0
    1080:	movt	r2, #0
    1084:	mov	r3, #5
    1088:	mov	r0, r6
    108c:	add	r5, r1, #1
    1090:	bl	0 <flatcc_json_printer_enum_flag>
    1094:	tst	r4, #8
    1098:	mov	r1, r5
    109c:	beq	1038 <MyGame_Example_Color_print_json_enum+0x7c>
    10a0:	movw	r2, #0
    10a4:	movt	r2, #0
    10a8:	mov	r3, #4
    10ac:	mov	r0, r6
    10b0:	bl	0 <flatcc_json_printer_enum_flag>
    10b4:	b	1038 <MyGame_Example_Color_print_json_enum+0x7c>

000010b8 <MyGame_Example_Vec3_print_json_struct>:
    10b8:	movw	ip, #0
    10bc:	movt	ip, #0
    10c0:	strd	r4, [sp, #-16]!
    10c4:	str	r6, [sp, #8]
    10c8:	mov	r6, #1
    10cc:	mov	r3, #0
    10d0:	str	lr, [sp, #12]
    10d4:	sub	sp, sp, #16
    10d8:	mov	r4, r1
    10dc:	mov	r2, r1
    10e0:	mov	r1, r3
    10e4:	str	ip, [sp]
    10e8:	mov	r5, r0
    10ec:	str	r6, [sp, #4]
    10f0:	bl	0 <flatcc_json_printer_float_struct_field>
    10f4:	movw	r3, #0
    10f8:	movt	r3, #0
    10fc:	mov	r2, r4
    1100:	mov	r1, r6
    1104:	mov	r0, r5
    1108:	stm	sp, {r3, r6}
    110c:	mov	r3, #4
    1110:	bl	0 <flatcc_json_printer_float_struct_field>
    1114:	movw	ip, #0
    1118:	movt	ip, #0
    111c:	mov	r2, r4
    1120:	mov	r0, r5
    1124:	mov	r3, #8
    1128:	mov	r1, #2
    112c:	str	ip, [sp]
    1130:	str	r6, [sp, #4]
    1134:	mov	r6, #5
    1138:	bl	0 <flatcc_json_printer_float_struct_field>
    113c:	movw	r1, #0
    1140:	movt	r1, #0
    1144:	mov	r2, r4
    1148:	mov	r0, r5
    114c:	mov	r3, #16
    1150:	stm	sp, {r1, r6}
    1154:	mov	r1, #3
    1158:	bl	0 <flatcc_json_printer_double_struct_field>
    115c:	movw	r3, #0
    1160:	movt	r3, #0
    1164:	movw	r1, #0
    1168:	movt	r1, #0
    116c:	mov	r2, r4
    1170:	mov	r0, r5
    1174:	stm	sp, {r1, r6}
    1178:	mov	r1, #4
    117c:	str	r3, [sp, #8]
    1180:	mov	r3, #24
    1184:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
    1188:	movw	r3, #0
    118c:	movt	r3, #0
    1190:	str	r6, [sp, #4]
    1194:	movw	ip, #0
    1198:	movt	ip, #0
    119c:	mov	r2, r4
    11a0:	mov	r1, r6
    11a4:	mov	r0, r5
    11a8:	str	ip, [sp]
    11ac:	str	r3, [sp, #8]
    11b0:	mov	r3, #26
    11b4:	bl	0 <flatcc_json_printer_embedded_struct_field>
    11b8:	add	sp, sp, #16
    11bc:	ldrd	r4, [sp]
    11c0:	ldr	r6, [sp, #8]
    11c4:	add	sp, sp, #12
    11c8:	pop	{pc}		; (ldr pc, [sp], #4)

000011cc <Fantasy_Character_parse_json_enum>:
    11cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
    11d0:	mov	r4, r1
    11d4:	mov	r1, r2
    11d8:	strd	r6, [sp, #8]
    11dc:	mov	r5, r2
    11e0:	strd	r8, [sp, #16]
    11e4:	mov	r8, r0
    11e8:	mov	r0, r4
    11ec:	str	sl, [sp, #24]
    11f0:	mov	r9, r3
    11f4:	str	lr, [sp, #28]
    11f8:	sub	sp, sp, #8
    11fc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1200:	add	r3, pc, #648	; 0x288
    1204:	ldrd	r2, [r3]
    1208:	cmp	r1, r3
    120c:	cmpeq	r0, r2
    1210:	bhi	12d4 <Fantasy_Character_parse_json_enum+0x108>
    1214:	add	r7, pc, #636	; 0x27c
    1218:	ldrd	r6, [r7]
    121c:	and	r2, r0, #-16777216	; 0xff000000
    1220:	mov	r3, r1
    1224:	cmp	r1, r7
    1228:	cmpeq	r0, r6
    122c:	bhi	1264 <Fantasy_Character_parse_json_enum+0x98>
    1230:	add	r1, pc, #616	; 0x268
    1234:	ldrd	r0, [r1]
    1238:	cmp	r3, r1
    123c:	cmpeq	r2, r0
    1240:	beq	140c <Fantasy_Character_parse_json_enum+0x240>
    1244:	mov	r0, r4
    1248:	add	sp, sp, #8
    124c:	ldrd	r4, [sp]
    1250:	ldrd	r6, [sp, #8]
    1254:	ldrd	r8, [sp, #16]
    1258:	ldr	sl, [sp, #24]
    125c:	add	sp, sp, #28
    1260:	pop	{pc}		; (ldr pc, [sp], #4)
    1264:	add	r7, pc, #572	; 0x23c
    1268:	ldrd	r6, [r7]
    126c:	cmp	r1, r7
    1270:	cmpeq	r2, r6
    1274:	beq	1438 <Fantasy_Character_parse_json_enum+0x26c>
    1278:	add	r7, pc, #560	; 0x230
    127c:	ldrd	r6, [r7]
    1280:	bic	r2, r0, #255	; 0xff
    1284:	cmp	r1, r7
    1288:	cmpeq	r2, r6
    128c:	bne	1244 <Fantasy_Character_parse_json_enum+0x78>
    1290:	ldr	r3, [sp, #44]	; 0x2c
    1294:	mov	r2, r5
    1298:	mov	r0, r8
    129c:	mov	r1, r4
    12a0:	str	r3, [sp]
    12a4:	mov	r3, #7
    12a8:	bl	0 <flatcc_json_parser_match_constant>
    12ac:	cmp	r4, r0
    12b0:	movne	r6, #10
    12b4:	beq	1244 <Fantasy_Character_parse_json_enum+0x78>
    12b8:	ldr	r2, [sp, #40]	; 0x28
    12bc:	mov	r7, #0
    12c0:	mov	r3, #0
    12c4:	mov	r4, r0
    12c8:	strd	r6, [r2]
    12cc:	str	r3, [r9]
    12d0:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    12d4:	add	r3, pc, #476	; 0x1dc
    12d8:	ldrd	r2, [r3]
    12dc:	cmp	r1, r3
    12e0:	cmpeq	r0, r2
    12e4:	bhi	1340 <Fantasy_Character_parse_json_enum+0x174>
    12e8:	add	r7, pc, #464	; 0x1d0
    12ec:	ldrd	r6, [r7]
    12f0:	mov	sl, #0
    12f4:	cmp	r1, r7
    12f8:	cmpeq	sl, r6
    12fc:	bne	1244 <Fantasy_Character_parse_json_enum+0x78>
    1300:	ldr	r3, [sp, #44]	; 0x2c
    1304:	mov	r2, r5
    1308:	mov	r0, r8
    130c:	mov	r1, r4
    1310:	str	r3, [sp]
    1314:	mov	r3, #4
    1318:	bl	0 <flatcc_json_parser_match_constant>
    131c:	cmp	r4, r0
    1320:	beq	1244 <Fantasy_Character_parse_json_enum+0x78>
    1324:	ldr	r1, [sp, #40]	; 0x28
    1328:	mov	r2, #0
    132c:	mov	r3, #0
    1330:	mov	r4, r0
    1334:	strd	r2, [r1]
    1338:	str	sl, [r9]
    133c:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    1340:	add	r3, pc, #384	; 0x180
    1344:	ldrd	r2, [r3]
    1348:	cmp	r1, r3
    134c:	cmpeq	r0, r2
    1350:	bls	13c8 <Fantasy_Character_parse_json_enum+0x1fc>
    1354:	add	r7, pc, #372	; 0x174
    1358:	ldrd	r6, [r7]
    135c:	lsr	r2, r0, #16
    1360:	lsl	r2, r2, #16
    1364:	cmp	r1, r7
    1368:	cmpeq	r2, r6
    136c:	beq	1464 <Fantasy_Character_parse_json_enum+0x298>
    1370:	add	r3, pc, #352	; 0x160
    1374:	ldrd	r2, [r3]
    1378:	cmp	r1, r3
    137c:	cmpeq	r0, r2
    1380:	bne	1244 <Fantasy_Character_parse_json_enum+0x78>
    1384:	ldr	r3, [sp, #44]	; 0x2c
    1388:	mov	r2, r5
    138c:	mov	r0, r8
    1390:	mov	r1, r4
    1394:	str	r3, [sp]
    1398:	mov	r3, #8
    139c:	bl	0 <flatcc_json_parser_match_constant>
    13a0:	cmp	r4, r0
    13a4:	beq	1244 <Fantasy_Character_parse_json_enum+0x78>
    13a8:	ldr	r2, [sp, #40]	; 0x28
    13ac:	mov	r4, r0
    13b0:	mov	r1, #0
    13b4:	mov	r0, #8
    13b8:	mov	r3, #0
    13bc:	strd	r0, [r2]
    13c0:	str	r3, [r9]
    13c4:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    13c8:	add	r7, pc, #272	; 0x110
    13cc:	ldrd	r6, [r7]
    13d0:	and	r2, r0, #-16777216	; 0xff000000
    13d4:	cmp	r1, r7
    13d8:	cmpeq	r2, r6
    13dc:	bne	1244 <Fantasy_Character_parse_json_enum+0x78>
    13e0:	ldr	r3, [sp, #44]	; 0x2c
    13e4:	mov	r2, r5
    13e8:	mov	r0, r8
    13ec:	mov	r1, r4
    13f0:	str	r3, [sp]
    13f4:	mov	r3, #5
    13f8:	bl	0 <flatcc_json_parser_match_constant>
    13fc:	cmp	r4, r0
    1400:	movne	r6, #11
    1404:	bne	12b8 <Fantasy_Character_parse_json_enum+0xec>
    1408:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    140c:	ldr	r3, [sp, #44]	; 0x2c
    1410:	mov	r2, r5
    1414:	mov	r0, r8
    1418:	mov	r1, r4
    141c:	str	r3, [sp]
    1420:	mov	r3, #5
    1424:	bl	0 <flatcc_json_parser_match_constant>
    1428:	cmp	r4, r0
    142c:	movne	r6, #9
    1430:	bne	12b8 <Fantasy_Character_parse_json_enum+0xec>
    1434:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    1438:	ldr	r3, [sp, #44]	; 0x2c
    143c:	mov	r2, r5
    1440:	mov	r0, r8
    1444:	mov	r1, r4
    1448:	str	r3, [sp]
    144c:	mov	r3, #5
    1450:	bl	0 <flatcc_json_parser_match_constant>
    1454:	cmp	r4, r0
    1458:	movne	r6, #2
    145c:	bne	12b8 <Fantasy_Character_parse_json_enum+0xec>
    1460:	b	1244 <Fantasy_Character_parse_json_enum+0x78>
    1464:	ldr	r3, [sp, #44]	; 0x2c
    1468:	mov	r2, r5
    146c:	mov	r0, r8
    1470:	mov	r1, r4
    1474:	str	r3, [sp]
    1478:	mov	r3, #6
    147c:	bl	0 <flatcc_json_parser_match_constant>
    1480:	cmp	r4, r0
    1484:	beq	1244 <Fantasy_Character_parse_json_enum+0x78>
    1488:	mov	r6, #255	; 0xff
    148c:	b	12b8 <Fantasy_Character_parse_json_enum+0xec>
    1490:	.word	0xffffffff
    1494:	.word	0x4e4f4e44
    1498:	.word	0x46616dff
    149c:	.word	0x426f6f6b
    14a0:	.word	0x65000000
    14a4:	.word	0x42656c6c
    14a8:	.word	0x6e000000
    14ac:	.word	0x4d754c61
    14b0:	.word	0x46616e00
    14b4:	.word	0x426f6f6b
    14b8:	.word	0x71ffffff
    14bc:	.word	0x4f746865
    14c0:	.word	0x00000000
    14c4:	.word	0x4e4f4e45
    14c8:	.word	0x6e7a656b
    14cc:	.word	0x52617075
    14d0:	.word	0x65640000
    14d4:	.word	0x556e7573
    14d8:	.word	0x6e7a656c
    14dc:	.word	0x52617075
    14e0:	.word	0x72000000
    14e4:	.word	0x4f746865

000014e8 <MyGame_Example_Any_parse_json_enum>:
    14e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    14ec:	mov	r4, r1
    14f0:	mov	r1, r2
    14f4:	strd	r6, [sp, #8]
    14f8:	mov	r5, r2
    14fc:	strd	r8, [sp, #16]
    1500:	mov	r8, r0
    1504:	mov	r0, r4
    1508:	strd	sl, [sp, #24]
    150c:	mov	r9, r3
    1510:	str	lr, [sp, #32]
    1514:	sub	sp, sp, #12
    1518:	bl	0 <flatcc_json_parser_symbol_part_ext>
    151c:	add	r3, pc, #524	; 0x20c
    1520:	ldrd	r2, [r3]
    1524:	cmp	r1, r3
    1528:	cmpeq	r0, r2
    152c:	bhi	156c <MyGame_Example_Any_parse_json_enum+0x84>
    1530:	add	r7, pc, #512	; 0x200
    1534:	ldrd	r6, [r7]
    1538:	bic	r3, r1, #255	; 0xff
    153c:	mov	sl, #0
    1540:	cmp	r3, r7
    1544:	cmpeq	sl, r6
    1548:	beq	1648 <MyGame_Example_Any_parse_json_enum+0x160>
    154c:	mov	r0, r4
    1550:	add	sp, sp, #12
    1554:	ldrd	r4, [sp]
    1558:	ldrd	r6, [sp, #8]
    155c:	ldrd	r8, [sp, #16]
    1560:	ldrd	sl, [sp, #24]
    1564:	add	sp, sp, #32
    1568:	pop	{pc}		; (ldr pc, [sp], #4)
    156c:	add	r3, pc, #460	; 0x1cc
    1570:	ldrd	r2, [r3]
    1574:	cmp	r1, r3
    1578:	cmpeq	r0, r2
    157c:	beq	1700 <MyGame_Example_Any_parse_json_enum+0x218>
    1580:	add	r7, pc, #448	; 0x1c0
    1584:	ldrd	r6, [r7]
    1588:	bic	r2, r0, #255	; 0xff
    158c:	cmp	r1, r7
    1590:	cmpeq	r2, r6
    1594:	beq	16c0 <MyGame_Example_Any_parse_json_enum+0x1d8>
    1598:	add	r7, pc, #432	; 0x1b0
    159c:	ldrd	r6, [r7]
    15a0:	mov	sl, #0
    15a4:	cmp	r1, r7
    15a8:	cmpeq	sl, r6
    15ac:	beq	1684 <MyGame_Example_Any_parse_json_enum+0x19c>
    15b0:	add	r3, pc, #416	; 0x1a0
    15b4:	ldrd	r2, [r3]
    15b8:	cmp	r1, r3
    15bc:	cmpeq	r0, r2
    15c0:	bne	154c <MyGame_Example_Any_parse_json_enum+0x64>
    15c4:	mov	r1, r5
    15c8:	add	r0, r4, #8
    15cc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    15d0:	add	r3, pc, #392	; 0x188
    15d4:	ldrd	r2, [r3]
    15d8:	cmp	r1, r3
    15dc:	cmpeq	r0, r2
    15e0:	bne	154c <MyGame_Example_Any_parse_json_enum+0x64>
    15e4:	add	r7, pc, #380	; 0x17c
    15e8:	ldrd	r6, [r7]
    15ec:	add	fp, r4, #16
    15f0:	mov	r1, r5
    15f4:	mov	r0, fp
    15f8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    15fc:	bic	r2, r0, #255	; 0xff
    1600:	cmp	r1, r7
    1604:	cmpeq	r2, r6
    1608:	bne	154c <MyGame_Example_Any_parse_json_enum+0x64>
    160c:	ldr	r3, [sp, #52]	; 0x34
    1610:	mov	r2, r5
    1614:	mov	r0, r8
    1618:	mov	r1, fp
    161c:	str	r3, [sp]
    1620:	mov	r3, #7
    1624:	bl	0 <flatcc_json_parser_match_constant>
    1628:	cmp	fp, r0
    162c:	beq	154c <MyGame_Example_Any_parse_json_enum+0x64>
    1630:	ldr	r1, [sp, #48]	; 0x30
    1634:	mov	r2, #2
    1638:	mov	r3, #0
    163c:	strd	r2, [r1]
    1640:	str	sl, [r9]
    1644:	b	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    1648:	ldr	r3, [sp, #52]	; 0x34
    164c:	mov	r2, r5
    1650:	mov	r0, r8
    1654:	mov	r1, r4
    1658:	str	r3, [sp]
    165c:	mov	r3, #3
    1660:	bl	0 <flatcc_json_parser_match_constant>
    1664:	cmp	r4, r0
    1668:	beq	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    166c:	ldr	r1, [sp, #48]	; 0x30
    1670:	mov	r2, #4
    1674:	mov	r3, #0
    1678:	strd	r2, [r1]
    167c:	str	sl, [r9]
    1680:	b	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    1684:	ldr	r3, [sp, #52]	; 0x34
    1688:	mov	r2, r5
    168c:	mov	r0, r8
    1690:	mov	r1, r4
    1694:	str	r3, [sp]
    1698:	mov	r3, #4
    169c:	bl	0 <flatcc_json_parser_match_constant>
    16a0:	cmp	r4, r0
    16a4:	beq	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    16a8:	ldr	r1, [sp, #48]	; 0x30
    16ac:	mov	r2, #0
    16b0:	mov	r3, #0
    16b4:	strd	r2, [r1]
    16b8:	str	sl, [r9]
    16bc:	b	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    16c0:	ldr	r3, [sp, #52]	; 0x34
    16c4:	mov	r2, r5
    16c8:	mov	r0, r8
    16cc:	mov	r1, r4
    16d0:	str	r3, [sp]
    16d4:	mov	r3, #7
    16d8:	bl	0 <flatcc_json_parser_match_constant>
    16dc:	cmp	r4, r0
    16e0:	beq	154c <MyGame_Example_Any_parse_json_enum+0x64>
    16e4:	mov	r4, #1
    16e8:	ldr	r2, [sp, #48]	; 0x30
    16ec:	mov	r5, #0
    16f0:	mov	r3, #0
    16f4:	strd	r4, [r2]
    16f8:	str	r3, [r9]
    16fc:	b	1550 <MyGame_Example_Any_parse_json_enum+0x68>
    1700:	ldr	r3, [sp, #52]	; 0x34
    1704:	mov	r1, r4
    1708:	mov	r2, r5
    170c:	mov	r0, r8
    1710:	str	r3, [sp]
    1714:	mov	r3, #8
    1718:	bl	0 <flatcc_json_parser_match_constant>
    171c:	cmp	r4, r0
    1720:	movne	r4, #3
    1724:	bne	16e8 <MyGame_Example_Any_parse_json_enum+0x200>
    1728:	b	154c <MyGame_Example_Any_parse_json_enum+0x64>
    172c:	nop	{0}
    1730:	.word	0x746571ff
    1734:	.word	0x4d6f6e73
    1738:	.word	0x00000000
    173c:	.word	0x416c7400
    1740:	.word	0x74657232
    1744:	.word	0x4d6f6e73
    1748:	.word	0x74657200
    174c:	.word	0x4d6f6e73
    1750:	.word	0x00000000
    1754:	.word	0x4e4f4e45
    1758:	.word	0x53696d70
    175c:	.word	0x54657374
    1760:	.word	0x626c6557
    1764:	.word	0x6c655461
    1768:	.word	0x6e756d00
    176c:	.word	0x69746845

00001770 <MyGame_Example_hex_enum_parse_json_enum>:
    1770:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1774:	mov	r4, r1
    1778:	mov	r5, r0
    177c:	mov	r1, r2
    1780:	mov	r0, r4
    1784:	strd	r6, [sp, #8]
    1788:	strd	r8, [sp, #16]
    178c:	strd	sl, [sp, #24]
    1790:	mov	sl, r2
    1794:	mov	fp, r3
    1798:	str	lr, [sp, #32]
    179c:	sub	sp, sp, #12
    17a0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    17a4:	add	r3, pc, #316	; 0x13c
    17a8:	ldrd	r2, [r3]
    17ac:	cmp	r1, r3
    17b0:	cmpeq	r0, r2
    17b4:	bhi	17f0 <MyGame_Example_hex_enum_parse_json_enum+0x80>
    17b8:	add	r7, pc, #304	; 0x130
    17bc:	ldrd	r6, [r7]
    17c0:	mov	r8, #0
    17c4:	cmp	r1, r7
    17c8:	cmpeq	r8, r6
    17cc:	beq	1864 <MyGame_Example_hex_enum_parse_json_enum+0xf4>
    17d0:	mov	r0, r4
    17d4:	add	sp, sp, #12
    17d8:	ldrd	r4, [sp]
    17dc:	ldrd	r6, [sp, #8]
    17e0:	ldrd	r8, [sp, #16]
    17e4:	ldrd	sl, [sp, #24]
    17e8:	add	sp, sp, #32
    17ec:	pop	{pc}		; (ldr pc, [sp], #4)
    17f0:	add	r9, pc, #256	; 0x100
    17f4:	ldrd	r8, [r9]
    17f8:	lsr	r6, r0, #16
    17fc:	lsl	r6, r6, #16
    1800:	cmp	r1, r9
    1804:	cmpeq	r6, r8
    1808:	beq	18a4 <MyGame_Example_hex_enum_parse_json_enum+0x134>
    180c:	add	r7, pc, #236	; 0xec
    1810:	ldrd	r6, [r7]
    1814:	mov	r8, #0
    1818:	cmp	r1, r7
    181c:	cmpeq	r8, r6
    1820:	bne	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    1824:	ldr	r3, [sp, #52]	; 0x34
    1828:	mov	r2, sl
    182c:	mov	r0, r5
    1830:	mov	r1, r4
    1834:	str	r3, [sp]
    1838:	mov	r3, #4
    183c:	bl	0 <flatcc_json_parser_match_constant>
    1840:	cmp	r4, r0
    1844:	beq	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    1848:	add	r3, pc, #184	; 0xb8
    184c:	ldrd	r2, [r3]
    1850:	mov	r4, r0
    1854:	ldr	r1, [sp, #48]	; 0x30
    1858:	strd	r2, [r1]
    185c:	str	r8, [fp]
    1860:	b	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    1864:	ldr	r3, [sp, #52]	; 0x34
    1868:	mov	r2, sl
    186c:	mov	r0, r5
    1870:	mov	r1, r4
    1874:	str	r3, [sp]
    1878:	mov	r3, #4
    187c:	bl	0 <flatcc_json_parser_match_constant>
    1880:	cmp	r4, r0
    1884:	beq	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    1888:	ldr	r1, [sp, #48]	; 0x30
    188c:	mov	r2, #3
    1890:	mov	r3, #0
    1894:	mov	r4, r0
    1898:	strd	r2, [r1]
    189c:	str	r8, [fp]
    18a0:	b	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    18a4:	ldr	r3, [sp, #52]	; 0x34
    18a8:	mov	r2, sl
    18ac:	mov	r0, r5
    18b0:	mov	r1, r4
    18b4:	str	r3, [sp]
    18b8:	mov	r3, #6
    18bc:	bl	0 <flatcc_json_parser_match_constant>
    18c0:	cmp	r4, r0
    18c4:	beq	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    18c8:	ldr	r2, [sp, #48]	; 0x30
    18cc:	mvn	r6, #1
    18d0:	mvn	r7, #0
    18d4:	mov	r3, #1
    18d8:	mov	r4, r0
    18dc:	strd	r6, [r2]
    18e0:	str	r3, [fp]
    18e4:	b	17d0 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    18e8:	.word	0xffffffff
    18ec:	.word	0x68657831
    18f0:	.word	0x00000000
    18f4:	.word	0x68657831
    18f8:	.word	0x65670000
    18fc:	.word	0x6865786e
    1900:	.word	0x00000000
    1904:	.word	0x68657832
    1908:	.word	0x7eafbeaf
    190c:	.word	0x00000000

00001910 <MyGame_Example_int_enum_parse_json_enum>:
    1910:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1914:	mov	r4, r1
    1918:	mov	r1, r2
    191c:	strd	r6, [sp, #8]
    1920:	mov	r5, r2
    1924:	strd	r8, [sp, #16]
    1928:	mov	r8, r0
    192c:	mov	r0, r4
    1930:	str	sl, [sp, #24]
    1934:	mov	r9, r3
    1938:	str	lr, [sp, #28]
    193c:	sub	sp, sp, #8
    1940:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1944:	add	r3, pc, #412	; 0x19c
    1948:	ldrd	r2, [r3]
    194c:	cmp	r1, r3
    1950:	cmpeq	r0, r2
    1954:	bhi	1990 <MyGame_Example_int_enum_parse_json_enum+0x80>
    1958:	add	r7, pc, #400	; 0x190
    195c:	ldrd	r6, [r7]
    1960:	mov	sl, #0
    1964:	cmp	r1, r7
    1968:	cmpeq	sl, r6
    196c:	beq	1a60 <MyGame_Example_int_enum_parse_json_enum+0x150>
    1970:	mov	r0, r4
    1974:	add	sp, sp, #8
    1978:	ldrd	r4, [sp]
    197c:	ldrd	r6, [sp, #8]
    1980:	ldrd	r8, [sp, #16]
    1984:	ldr	sl, [sp, #24]
    1988:	add	sp, sp, #28
    198c:	pop	{pc}		; (ldr pc, [sp], #4)
    1990:	add	r3, pc, #352	; 0x160
    1994:	ldrd	r2, [r3]
    1998:	cmp	r1, r3
    199c:	cmpeq	r0, r2
    19a0:	bhi	19e8 <MyGame_Example_int_enum_parse_json_enum+0xd8>
    19a4:	add	r7, pc, #340	; 0x154
    19a8:	ldrd	r6, [r7]
    19ac:	mov	sl, #0
    19b0:	cmp	r1, r7
    19b4:	cmpeq	sl, r6
    19b8:	bne	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    19bc:	ldr	r3, [sp, #44]	; 0x2c
    19c0:	mov	r2, r5
    19c4:	mov	r0, r8
    19c8:	mov	r1, r4
    19cc:	str	r3, [sp]
    19d0:	mov	r3, #4
    19d4:	bl	0 <flatcc_json_parser_match_constant>
    19d8:	cmp	r4, r0
    19dc:	beq	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    19e0:	mov	r2, #42	; 0x2a
    19e4:	b	1a88 <MyGame_Example_int_enum_parse_json_enum+0x178>
    19e8:	add	r7, pc, #280	; 0x118
    19ec:	ldrd	r6, [r7]
    19f0:	bic	r2, r0, #255	; 0xff
    19f4:	cmp	r1, r7
    19f8:	cmpeq	r2, r6
    19fc:	beq	1aa0 <MyGame_Example_int_enum_parse_json_enum+0x190>
    1a00:	add	r7, pc, #264	; 0x108
    1a04:	ldrd	r6, [r7]
    1a08:	lsr	r2, r0, #16
    1a0c:	lsl	r2, r2, #16
    1a10:	cmp	r1, r7
    1a14:	cmpeq	r2, r6
    1a18:	bne	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1a1c:	ldr	r3, [sp, #44]	; 0x2c
    1a20:	mov	r2, r5
    1a24:	mov	r0, r8
    1a28:	mov	r1, r4
    1a2c:	str	r3, [sp]
    1a30:	mov	r3, #6
    1a34:	bl	0 <flatcc_json_parser_match_constant>
    1a38:	cmp	r4, r0
    1a3c:	beq	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1a40:	ldr	r2, [sp, #40]	; 0x28
    1a44:	mov	r4, r0
    1a48:	mvn	r1, #0
    1a4c:	mvn	r0, #1
    1a50:	mov	r3, #1
    1a54:	strd	r0, [r2]
    1a58:	str	r3, [r9]
    1a5c:	b	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1a60:	ldr	r3, [sp, #44]	; 0x2c
    1a64:	mov	r2, r5
    1a68:	mov	r0, r8
    1a6c:	mov	r1, r4
    1a70:	str	r3, [sp]
    1a74:	mov	r3, #4
    1a78:	bl	0 <flatcc_json_parser_match_constant>
    1a7c:	cmp	r4, r0
    1a80:	movne	r2, #2
    1a84:	beq	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1a88:	ldr	r1, [sp, #40]	; 0x28
    1a8c:	mov	r3, #0
    1a90:	mov	r4, r0
    1a94:	strd	r2, [r1]
    1a98:	str	sl, [r9]
    1a9c:	b	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1aa0:	ldr	r3, [sp, #44]	; 0x2c
    1aa4:	mov	r2, r5
    1aa8:	mov	r0, r8
    1aac:	mov	r1, r4
    1ab0:	str	r3, [sp]
    1ab4:	mov	r3, #7
    1ab8:	bl	0 <flatcc_json_parser_match_constant>
    1abc:	cmp	r4, r0
    1ac0:	beq	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1ac4:	ldr	r2, [sp, #40]	; 0x28
    1ac8:	mvn	r6, #0
    1acc:	mvn	r7, #0
    1ad0:	mov	r3, #1
    1ad4:	mov	r4, r0
    1ad8:	strd	r6, [r2]
    1adc:	str	r3, [r9]
    1ae0:	b	1970 <MyGame_Example_int_enum_parse_json_enum+0x60>
    1ae4:	nop	{0}
    1ae8:	.word	0xffffffff
    1aec:	.word	0x696e7431
    1af0:	.word	0x00000000
    1af4:	.word	0x696e7431
    1af8:	.word	0x6566ffff
    1afc:	.word	0x696e746e
    1b00:	.word	0x00000000
    1b04:	.word	0x696e7432
    1b08:	.word	0x65673200
    1b0c:	.word	0x696e746e
    1b10:	.word	0x65670000
    1b14:	.word	0x696e746e

00001b18 <MyGame_Example_neg_enum_parse_json_enum>:
    1b18:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1b1c:	mov	r4, r1
    1b20:	mov	r5, r0
    1b24:	mov	r1, r2
    1b28:	mov	r0, r4
    1b2c:	strd	r6, [sp, #8]
    1b30:	strd	r8, [sp, #16]
    1b34:	mov	r6, #0
    1b38:	add	r9, pc, #312	; 0x138
    1b3c:	ldrd	r8, [r9]
    1b40:	strd	sl, [sp, #24]
    1b44:	mov	sl, r2
    1b48:	mov	fp, r3
    1b4c:	str	lr, [sp, #32]
    1b50:	sub	sp, sp, #12
    1b54:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1b58:	cmp	r1, r9
    1b5c:	cmpeq	r0, r8
    1b60:	bhi	1b98 <MyGame_Example_neg_enum_parse_json_enum+0x80>
    1b64:	add	r3, pc, #276	; 0x114
    1b68:	ldrd	r2, [r3]
    1b6c:	cmp	r1, r3
    1b70:	cmpeq	r6, r2
    1b74:	beq	1c04 <MyGame_Example_neg_enum_parse_json_enum+0xec>
    1b78:	mov	r0, r4
    1b7c:	add	sp, sp, #12
    1b80:	ldrd	r4, [sp]
    1b84:	ldrd	r6, [sp, #8]
    1b88:	ldrd	r8, [sp, #16]
    1b8c:	ldrd	sl, [sp, #24]
    1b90:	add	sp, sp, #32
    1b94:	pop	{pc}		; (ldr pc, [sp], #4)
    1b98:	add	r3, pc, #232	; 0xe8
    1b9c:	ldrd	r2, [r3]
    1ba0:	cmp	r1, r3
    1ba4:	cmpeq	r6, r2
    1ba8:	beq	1c48 <MyGame_Example_neg_enum_parse_json_enum+0x130>
    1bac:	add	r3, pc, #220	; 0xdc
    1bb0:	ldrd	r2, [r3]
    1bb4:	cmp	r1, r3
    1bb8:	cmpeq	r6, r2
    1bbc:	bne	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1bc0:	ldr	r3, [sp, #52]	; 0x34
    1bc4:	mov	r2, sl
    1bc8:	mov	r0, r5
    1bcc:	mov	r1, r4
    1bd0:	str	r3, [sp]
    1bd4:	mov	r3, #4
    1bd8:	bl	0 <flatcc_json_parser_match_constant>
    1bdc:	cmp	r4, r0
    1be0:	beq	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1be4:	ldr	r2, [sp, #48]	; 0x30
    1be8:	mov	r4, r0
    1bec:	mvn	r1, #0
    1bf0:	mvn	r0, #10
    1bf4:	mov	r3, #1
    1bf8:	strd	r0, [r2]
    1bfc:	str	r3, [fp]
    1c00:	b	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1c04:	ldr	r3, [sp, #52]	; 0x34
    1c08:	mov	r2, sl
    1c0c:	mov	r0, r5
    1c10:	mov	r1, r4
    1c14:	str	r3, [sp]
    1c18:	mov	r3, #4
    1c1c:	bl	0 <flatcc_json_parser_match_constant>
    1c20:	cmp	r4, r0
    1c24:	mvnne	r6, #11
    1c28:	beq	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1c2c:	ldr	r2, [sp, #48]	; 0x30
    1c30:	mvn	r7, #0
    1c34:	mov	r3, #1
    1c38:	mov	r4, r0
    1c3c:	strd	r6, [r2]
    1c40:	str	r3, [fp]
    1c44:	b	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1c48:	ldr	r3, [sp, #52]	; 0x34
    1c4c:	mov	r2, sl
    1c50:	mov	r0, r5
    1c54:	mov	r1, r4
    1c58:	str	r3, [sp]
    1c5c:	mov	r3, #4
    1c60:	bl	0 <flatcc_json_parser_match_constant>
    1c64:	cmp	r4, r0
    1c68:	beq	1b78 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    1c6c:	mvn	r6, #9
    1c70:	b	1c2c <MyGame_Example_neg_enum_parse_json_enum+0x114>
    1c74:	nop	{0}
    1c78:	.word	0xffffffff
    1c7c:	.word	0x6e656731
    1c80:	.word	0x00000000
    1c84:	.word	0x6e656731
    1c88:	.word	0x00000000
    1c8c:	.word	0x6e656733
    1c90:	.word	0x00000000
    1c94:	.word	0x6e656732

00001c98 <MyGame_Example_Color_parse_json_enum>:
    1c98:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1c9c:	mov	r4, r1
    1ca0:	mov	r1, r2
    1ca4:	strd	r6, [sp, #8]
    1ca8:	mov	r5, r2
    1cac:	strd	r8, [sp, #16]
    1cb0:	mov	r8, r0
    1cb4:	mov	r0, r4
    1cb8:	str	sl, [sp, #24]
    1cbc:	mov	r9, r3
    1cc0:	str	lr, [sp, #28]
    1cc4:	sub	sp, sp, #8
    1cc8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1ccc:	add	r3, pc, #292	; 0x124
    1cd0:	ldrd	r2, [r3]
    1cd4:	cmp	r1, r3
    1cd8:	cmpeq	r0, r2
    1cdc:	bhi	1d18 <MyGame_Example_Color_parse_json_enum+0x80>
    1ce0:	add	r7, pc, #280	; 0x118
    1ce4:	ldrd	r6, [r7]
    1ce8:	mov	sl, #0
    1cec:	cmp	r1, r7
    1cf0:	cmpeq	sl, r6
    1cf4:	beq	1d8c <MyGame_Example_Color_parse_json_enum+0xf4>
    1cf8:	mov	r0, r4
    1cfc:	add	sp, sp, #8
    1d00:	ldrd	r4, [sp]
    1d04:	ldrd	r6, [sp, #8]
    1d08:	ldrd	r8, [sp, #16]
    1d0c:	ldr	sl, [sp, #24]
    1d10:	add	sp, sp, #28
    1d14:	pop	{pc}		; (ldr pc, [sp], #4)
    1d18:	add	r7, pc, #232	; 0xe8
    1d1c:	ldrd	r6, [r7]
    1d20:	bic	r3, r1, #255	; 0xff
    1d24:	mov	sl, #0
    1d28:	cmp	r3, r7
    1d2c:	cmpeq	sl, r6
    1d30:	beq	1dcc <MyGame_Example_Color_parse_json_enum+0x134>
    1d34:	add	r7, pc, #212	; 0xd4
    1d38:	ldrd	r6, [r7]
    1d3c:	and	r2, r0, #-16777216	; 0xff000000
    1d40:	cmp	r1, r7
    1d44:	cmpeq	r2, r6
    1d48:	bne	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1d4c:	ldr	r3, [sp, #44]	; 0x2c
    1d50:	mov	r2, r5
    1d54:	mov	r0, r8
    1d58:	mov	r1, r4
    1d5c:	str	r3, [sp]
    1d60:	mov	r3, #5
    1d64:	bl	0 <flatcc_json_parser_match_constant>
    1d68:	cmp	r4, r0
    1d6c:	beq	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1d70:	ldr	r1, [sp, #40]	; 0x28
    1d74:	mov	r2, #2
    1d78:	mov	r3, #0
    1d7c:	mov	r4, r0
    1d80:	strd	r2, [r1]
    1d84:	str	sl, [r9]
    1d88:	b	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1d8c:	ldr	r3, [sp, #44]	; 0x2c
    1d90:	mov	r2, r5
    1d94:	mov	r0, r8
    1d98:	mov	r1, r4
    1d9c:	str	r3, [sp]
    1da0:	mov	r3, #4
    1da4:	bl	0 <flatcc_json_parser_match_constant>
    1da8:	cmp	r4, r0
    1dac:	movne	r2, #8
    1db0:	beq	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1db4:	ldr	r1, [sp, #40]	; 0x28
    1db8:	mov	r3, #0
    1dbc:	mov	r4, r0
    1dc0:	strd	r2, [r1]
    1dc4:	str	sl, [r9]
    1dc8:	b	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1dcc:	ldr	r3, [sp, #44]	; 0x2c
    1dd0:	mov	r2, r5
    1dd4:	mov	r0, r8
    1dd8:	mov	r1, r4
    1ddc:	str	r3, [sp]
    1de0:	mov	r3, #3
    1de4:	bl	0 <flatcc_json_parser_match_constant>
    1de8:	cmp	r4, r0
    1dec:	beq	1cf8 <MyGame_Example_Color_parse_json_enum+0x60>
    1df0:	mov	r2, #1
    1df4:	b	1db4 <MyGame_Example_Color_parse_json_enum+0x11c>
    1df8:	.word	0x6dffffff
    1dfc:	.word	0x47726565
    1e00:	.word	0x00000000
    1e04:	.word	0x426c7565
    1e08:	.word	0x00000000
    1e0c:	.word	0x52656400
    1e10:	.word	0x6e000000
    1e14:	.word	0x47726565

00001e18 <flatcc_json_parser_space>:
    1e18:	sub	r3, r2, r1
    1e1c:	cmp	r3, #1
    1e20:	ble	1e34 <flatcc_json_parser_space+0x1c>
    1e24:	ldrb	r3, [r1]
    1e28:	cmp	r3, #32
    1e2c:	bhi	1e38 <flatcc_json_parser_space+0x20>
    1e30:	beq	1e40 <flatcc_json_parser_space+0x28>
    1e34:	b	0 <flatcc_json_parser_space_ext>
    1e38:	mov	r0, r1
    1e3c:	bx	lr
    1e40:	ldrb	r3, [r1, #1]
    1e44:	cmp	r3, #32
    1e48:	bls	1e34 <flatcc_json_parser_space+0x1c>
    1e4c:	add	r0, r1, #1
    1e50:	bx	lr

00001e54 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
    1e54:	mov	r3, #8
    1e58:	mov	r1, #0
    1e5c:	str	r4, [sp, #-8]!
    1e60:	mov	r2, r3
    1e64:	mov	r4, r0
    1e68:	str	lr, [sp, #4]
    1e6c:	bl	0 <flatcc_verify_field>
    1e70:	cmp	r0, #0
    1e74:	beq	1e84 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x30>
    1e78:	ldr	r4, [sp]
    1e7c:	add	sp, sp, #4
    1e80:	pop	{pc}		; (ldr pc, [sp], #4)
    1e84:	mov	r3, #4
    1e88:	mov	r0, r4
    1e8c:	ldr	r4, [sp]
    1e90:	mov	r2, r3
    1e94:	mov	r1, #1
    1e98:	ldr	lr, [sp, #4]
    1e9c:	add	sp, sp, #8
    1ea0:	b	0 <flatcc_verify_field>

00001ea4 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
    1ea4:	mov	r3, #1
    1ea8:	mov	r1, #0
    1eac:	str	r4, [sp, #-8]!
    1eb0:	mov	r2, r3
    1eb4:	mov	r4, r0
    1eb8:	str	lr, [sp, #4]
    1ebc:	bl	0 <flatcc_verify_field>
    1ec0:	cmp	r0, #0
    1ec4:	beq	1ed4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x30>
    1ec8:	ldr	r4, [sp]
    1ecc:	add	sp, sp, #4
    1ed0:	pop	{pc}		; (ldr pc, [sp], #4)
    1ed4:	mov	r3, #1
    1ed8:	mov	r0, r4
    1edc:	mov	r2, r3
    1ee0:	mov	r1, r3
    1ee4:	bl	0 <flatcc_verify_field>
    1ee8:	cmp	r0, #0
    1eec:	bne	1ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x24>
    1ef0:	mov	r3, #1
    1ef4:	mov	r1, #2
    1ef8:	mov	r2, r3
    1efc:	mov	r0, r4
    1f00:	bl	0 <flatcc_verify_field>
    1f04:	cmp	r0, #0
    1f08:	bne	1ec8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x24>
    1f0c:	mov	r3, #1
    1f10:	mov	r0, r4
    1f14:	ldr	r4, [sp]
    1f18:	mov	r2, r3
    1f1c:	mov	r1, #3
    1f20:	ldr	lr, [sp, #4]
    1f24:	add	sp, sp, #8
    1f28:	b	0 <flatcc_verify_field>

00001f2c <MyGame_Example_Stat_verify_table>:
    1f2c:	mov	r2, #0
    1f30:	str	r4, [sp, #-8]!
    1f34:	mov	r4, r0
    1f38:	mov	r1, r2
    1f3c:	str	lr, [sp, #4]
    1f40:	bl	0 <flatcc_verify_string_field>
    1f44:	cmp	r0, #0
    1f48:	beq	1f58 <MyGame_Example_Stat_verify_table+0x2c>
    1f4c:	ldr	r4, [sp]
    1f50:	add	sp, sp, #4
    1f54:	pop	{pc}		; (ldr pc, [sp], #4)
    1f58:	mov	r3, #8
    1f5c:	mov	r1, #1
    1f60:	mov	r2, r3
    1f64:	mov	r0, r4
    1f68:	bl	0 <flatcc_verify_field>
    1f6c:	cmp	r0, #0
    1f70:	bne	1f4c <MyGame_Example_Stat_verify_table+0x20>
    1f74:	mov	r3, #2
    1f78:	mov	r0, r4
    1f7c:	ldr	r4, [sp]
    1f80:	mov	r2, r3
    1f84:	mov	r1, r3
    1f88:	ldr	lr, [sp, #4]
    1f8c:	add	sp, sp, #8
    1f90:	b	0 <flatcc_verify_field>

00001f94 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
    1f94:	mov	r2, #0
    1f98:	str	r4, [sp, #-8]!
    1f9c:	mov	r4, r0
    1fa0:	mov	r1, r2
    1fa4:	str	lr, [sp, #4]
    1fa8:	bl	0 <flatcc_verify_string_field>
    1fac:	cmp	r0, #0
    1fb0:	beq	1fc0 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x2c>
    1fb4:	ldr	r4, [sp]
    1fb8:	add	sp, sp, #4
    1fbc:	pop	{pc}		; (ldr pc, [sp], #4)
    1fc0:	mov	r3, #4
    1fc4:	mov	r1, #1
    1fc8:	mov	r2, r3
    1fcc:	mov	r0, r4
    1fd0:	bl	0 <flatcc_verify_field>
    1fd4:	cmp	r0, #0
    1fd8:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    1fdc:	mov	r2, r0
    1fe0:	mov	r1, #2
    1fe4:	mov	r0, r4
    1fe8:	bl	0 <flatcc_verify_string_field>
    1fec:	cmp	r0, #0
    1ff0:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    1ff4:	mov	r3, #8
    1ff8:	mov	r1, #3
    1ffc:	mov	r2, r3
    2000:	mov	r0, r4
    2004:	bl	0 <flatcc_verify_field>
    2008:	cmp	r0, #0
    200c:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    2010:	mov	r2, r0
    2014:	mov	r1, #4
    2018:	mov	r0, r4
    201c:	bl	0 <flatcc_verify_string_field>
    2020:	cmp	r0, #0
    2024:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    2028:	mov	r3, #8
    202c:	mov	r1, #5
    2030:	mov	r2, r3
    2034:	mov	r0, r4
    2038:	bl	0 <flatcc_verify_field>
    203c:	cmp	r0, #0
    2040:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    2044:	mov	r3, #4
    2048:	mov	r1, #6
    204c:	mov	r2, r3
    2050:	mov	r0, r4
    2054:	bl	0 <flatcc_verify_field>
    2058:	cmp	r0, #0
    205c:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    2060:	mov	r3, #8
    2064:	mov	r1, #7
    2068:	mov	r2, r3
    206c:	mov	r0, r4
    2070:	bl	0 <flatcc_verify_field>
    2074:	cmp	r0, #0
    2078:	bne	1fb4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x20>
    207c:	mov	r3, #4
    2080:	mov	r0, r4
    2084:	ldr	r4, [sp]
    2088:	mov	r2, r3
    208c:	mov	r1, #8
    2090:	ldr	lr, [sp, #4]
    2094:	add	sp, sp, #8
    2098:	b	0 <flatcc_verify_field>

0000209c <MyGame_Example_TestJSONPrefix_verify_table>:
    209c:	mov	r2, #0
    20a0:	movw	r3, #0
    20a4:	movt	r3, #0
    20a8:	mov	r1, r2
    20ac:	str	r4, [sp, #-8]!
    20b0:	mov	r4, r0
    20b4:	str	lr, [sp, #4]
    20b8:	bl	0 <flatcc_verify_table_field>
    20bc:	cmp	r0, #0
    20c0:	beq	20d0 <MyGame_Example_TestJSONPrefix_verify_table+0x34>
    20c4:	ldr	r4, [sp]
    20c8:	add	sp, sp, #4
    20cc:	pop	{pc}		; (ldr pc, [sp], #4)
    20d0:	mov	r2, r0
    20d4:	movw	r3, #0
    20d8:	movt	r3, #0
    20dc:	mov	r1, #1
    20e0:	mov	r0, r4
    20e4:	bl	0 <flatcc_verify_table_field>
    20e8:	cmp	r0, #0
    20ec:	bne	20c4 <MyGame_Example_TestJSONPrefix_verify_table+0x28>
    20f0:	mov	r2, r0
    20f4:	movw	r3, #0
    20f8:	movt	r3, #0
    20fc:	mov	r0, r4
    2100:	ldr	r4, [sp]
    2104:	mov	r1, #2
    2108:	ldr	lr, [sp, #4]
    210c:	add	sp, sp, #8
    2110:	b	0 <flatcc_verify_table_field>

00002114 <MyGame_Example_Monster_verify_table>:
    2114:	mov	r3, #16
    2118:	mov	r2, #32
    211c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2120:	mov	r1, #0
    2124:	strd	r6, [sp, #8]
    2128:	mov	r4, r0
    212c:	str	r8, [sp, #16]
    2130:	str	lr, [sp, #20]
    2134:	sub	sp, sp, #8
    2138:	bl	0 <flatcc_verify_field>
    213c:	cmp	r0, #0
    2140:	beq	215c <MyGame_Example_Monster_verify_table+0x48>
    2144:	add	sp, sp, #8
    2148:	ldrd	r4, [sp]
    214c:	ldrd	r6, [sp, #8]
    2150:	ldr	r8, [sp, #16]
    2154:	add	sp, sp, #20
    2158:	pop	{pc}		; (ldr pc, [sp], #4)
    215c:	mov	r3, #2
    2160:	mov	r0, r4
    2164:	mov	r2, r3
    2168:	mov	r1, r3
    216c:	bl	0 <flatcc_verify_field>
    2170:	cmp	r0, #0
    2174:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2178:	mov	r3, #2
    217c:	mov	r1, #1
    2180:	mov	r2, r3
    2184:	mov	r0, r4
    2188:	bl	0 <flatcc_verify_field>
    218c:	cmp	r0, #0
    2190:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2194:	mov	r2, #1
    2198:	mov	r1, #3
    219c:	mov	r0, r4
    21a0:	bl	0 <flatcc_verify_string_field>
    21a4:	cmp	r0, #0
    21a8:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    21ac:	mov	r3, #1
    21b0:	mov	r1, #6
    21b4:	mov	r2, r3
    21b8:	mov	r0, r4
    21bc:	bl	0 <flatcc_verify_field>
    21c0:	cmp	r0, #0
    21c4:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    21c8:	mov	r5, #1
    21cc:	mvn	r6, #0
    21d0:	mov	r2, r0
    21d4:	mov	r3, r5
    21d8:	mov	r1, #5
    21dc:	mov	r0, r4
    21e0:	stm	sp, {r5, r6}
    21e4:	bl	0 <flatcc_verify_vector_field>
    21e8:	cmp	r0, #0
    21ec:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    21f0:	mov	r2, r0
    21f4:	movw	r3, #0
    21f8:	movt	r3, #0
    21fc:	mov	r1, #11
    2200:	mov	r0, r4
    2204:	bl	0 <flatcc_verify_table_vector_field>
    2208:	cmp	r0, #0
    220c:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2210:	mov	r2, r0
    2214:	mov	r1, #10
    2218:	mov	r0, r4
    221c:	bl	0 <flatcc_verify_string_vector_field>
    2220:	cmp	r0, #0
    2224:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2228:	mov	r2, r0
    222c:	mov	r1, #28
    2230:	mov	r0, r4
    2234:	bl	0 <flatcc_verify_string_vector_field>
    2238:	cmp	r0, #0
    223c:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2240:	mov	r2, r0
    2244:	mov	r3, r5
    2248:	stm	sp, {r5, r6}
    224c:	mov	r1, #24
    2250:	mov	r0, r4
    2254:	bl	0 <flatcc_verify_vector_field>
    2258:	cmp	r0, #0
    225c:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2260:	mvn	ip, #-536870912	; 0xe0000000
    2264:	mov	r5, #4
    2268:	mov	r3, #8
    226c:	mov	r2, #0
    2270:	mov	r1, #29
    2274:	mov	r0, r4
    2278:	stm	sp, {r5, ip}
    227c:	bl	0 <flatcc_verify_vector_field>
    2280:	cmp	r0, #0
    2284:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2288:	movw	r6, #0
    228c:	movt	r6, #0
    2290:	mov	r2, r0
    2294:	mov	r3, r6
    2298:	mov	r1, #12
    229c:	mov	r0, r4
    22a0:	bl	0 <flatcc_verify_table_field>
    22a4:	cmp	r0, #0
    22a8:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    22ac:	mov	r2, r0
    22b0:	movw	r3, #0
    22b4:	movt	r3, #0
    22b8:	mov	r1, #8
    22bc:	mov	r0, r4
    22c0:	bl	0 <flatcc_verify_union_field>
    22c4:	cmp	r0, #0
    22c8:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    22cc:	mvn	r7, #-1073741824	; 0xc0000000
    22d0:	mov	r8, #2
    22d4:	mov	r2, r0
    22d8:	mov	r3, r5
    22dc:	mov	r1, #9
    22e0:	mov	r0, r4
    22e4:	str	r8, [sp]
    22e8:	str	r7, [sp, #4]
    22ec:	bl	0 <flatcc_verify_vector_field>
    22f0:	cmp	r0, #0
    22f4:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    22f8:	mov	r2, r0
    22fc:	mov	r3, r5
    2300:	str	r8, [sp]
    2304:	mov	r1, #31
    2308:	mov	r0, r4
    230c:	str	r7, [sp, #4]
    2310:	bl	0 <flatcc_verify_vector_field>
    2314:	cmp	r0, #0
    2318:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    231c:	mov	r7, #1
    2320:	mov	r3, r0
    2324:	mov	r2, r0
    2328:	mov	r1, #13
    232c:	mov	r0, r4
    2330:	str	r7, [sp]
    2334:	str	r6, [sp, #4]
    2338:	bl	0 <flatcc_verify_table_as_nested_root>
    233c:	cmp	r0, #0
    2340:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2344:	mov	r2, r0
    2348:	movw	r3, #0
    234c:	movt	r3, #0
    2350:	mov	r1, #14
    2354:	mov	r0, r4
    2358:	bl	0 <flatcc_verify_table_field>
    235c:	cmp	r0, #0
    2360:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2364:	mov	r3, r7
    2368:	mov	r2, r7
    236c:	mov	r1, #15
    2370:	mov	r0, r4
    2374:	bl	0 <flatcc_verify_field>
    2378:	cmp	r0, #0
    237c:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2380:	mov	r3, r5
    2384:	mov	r2, r5
    2388:	mov	r1, #16
    238c:	mov	r0, r4
    2390:	bl	0 <flatcc_verify_field>
    2394:	cmp	r0, #0
    2398:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    239c:	mov	r3, r5
    23a0:	mov	r2, r5
    23a4:	mov	r1, #17
    23a8:	mov	r0, r4
    23ac:	bl	0 <flatcc_verify_field>
    23b0:	cmp	r0, #0
    23b4:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    23b8:	mov	r3, #8
    23bc:	mov	r1, #18
    23c0:	mov	r2, r3
    23c4:	mov	r0, r4
    23c8:	bl	0 <flatcc_verify_field>
    23cc:	cmp	r0, #0
    23d0:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    23d4:	mov	r3, #8
    23d8:	mov	r1, #19
    23dc:	mov	r2, r3
    23e0:	mov	r0, r4
    23e4:	bl	0 <flatcc_verify_field>
    23e8:	cmp	r0, #0
    23ec:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    23f0:	mov	r3, r5
    23f4:	mov	r1, #20
    23f8:	mov	r2, r5
    23fc:	mov	r0, r4
    2400:	bl	0 <flatcc_verify_field>
    2404:	cmp	r0, #0
    2408:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    240c:	mov	r3, r5
    2410:	mov	r1, #21
    2414:	mov	r2, r5
    2418:	mov	r0, r4
    241c:	bl	0 <flatcc_verify_field>
    2420:	cmp	r0, #0
    2424:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2428:	mov	r3, #8
    242c:	mov	r1, #22
    2430:	mov	r2, r3
    2434:	mov	r0, r4
    2438:	bl	0 <flatcc_verify_field>
    243c:	cmp	r0, #0
    2440:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2444:	mov	r3, #8
    2448:	mov	r1, #23
    244c:	mov	r2, r3
    2450:	mov	r0, r4
    2454:	bl	0 <flatcc_verify_field>
    2458:	cmp	r0, #0
    245c:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2460:	mov	r3, r5
    2464:	mov	r1, #25
    2468:	mov	r2, r5
    246c:	mov	r0, r4
    2470:	bl	0 <flatcc_verify_field>
    2474:	cmp	r0, #0
    2478:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    247c:	mov	r3, r5
    2480:	mov	r1, #26
    2484:	mov	r2, r5
    2488:	mov	r0, r4
    248c:	bl	0 <flatcc_verify_field>
    2490:	cmp	r0, #0
    2494:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2498:	mov	r3, r5
    249c:	mov	r1, #27
    24a0:	mov	r2, r5
    24a4:	mov	r0, r4
    24a8:	bl	0 <flatcc_verify_field>
    24ac:	cmp	r0, #0
    24b0:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    24b4:	mvn	ip, #0
    24b8:	mov	r1, r7
    24bc:	mov	r2, r0
    24c0:	mov	r3, r7
    24c4:	mov	r0, r4
    24c8:	stm	sp, {r1, ip}
    24cc:	mov	r1, #30
    24d0:	bl	0 <flatcc_verify_vector_field>
    24d4:	cmp	r0, #0
    24d8:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    24dc:	mov	r5, #8
    24e0:	mvn	r6, #-536870912	; 0xe0000000
    24e4:	mov	r3, r5
    24e8:	mov	r2, #0
    24ec:	mov	r1, #32
    24f0:	mov	r0, r4
    24f4:	stm	sp, {r5, r6}
    24f8:	bl	0 <flatcc_verify_vector_field>
    24fc:	cmp	r0, #0
    2500:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2504:	mov	r2, r0
    2508:	mov	r3, r5
    250c:	stm	sp, {r5, r6}
    2510:	mov	r1, #33	; 0x21
    2514:	mov	r0, r4
    2518:	bl	0 <flatcc_verify_vector_field>
    251c:	cmp	r0, #0
    2520:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2524:	mov	r2, r0
    2528:	movw	r3, #0
    252c:	movt	r3, #0
    2530:	mov	r1, #34	; 0x22
    2534:	mov	r0, r4
    2538:	bl	0 <flatcc_verify_table_field>
    253c:	cmp	r0, #0
    2540:	bne	2144 <MyGame_Example_Monster_verify_table+0x30>
    2544:	mov	r2, r0
    2548:	movw	r3, #0
    254c:	movt	r3, #0
    2550:	mov	r0, r4
    2554:	mov	r1, #35	; 0x23
    2558:	add	sp, sp, #8
    255c:	ldrd	r4, [sp]
    2560:	ldrd	r6, [sp, #8]
    2564:	ldr	r8, [sp, #16]
    2568:	ldr	lr, [sp, #20]
    256c:	add	sp, sp, #24
    2570:	b	0 <flatcc_verify_table_field>

00002574 <MyGame_Example_TestBase64_verify_table>:
    2574:	strd	r4, [sp, #-16]!
    2578:	mov	r4, #1
    257c:	mvn	r5, #0
    2580:	str	r6, [sp, #8]
    2584:	mov	r2, #0
    2588:	mov	r3, r4
    258c:	str	lr, [sp, #12]
    2590:	sub	sp, sp, #8
    2594:	mov	r1, r2
    2598:	mov	r6, r0
    259c:	strd	r4, [sp]
    25a0:	bl	0 <flatcc_verify_vector_field>
    25a4:	subs	r2, r0, #0
    25a8:	beq	25c4 <MyGame_Example_TestBase64_verify_table+0x50>
    25ac:	mov	r0, r2
    25b0:	add	sp, sp, #8
    25b4:	ldrd	r4, [sp]
    25b8:	ldr	r6, [sp, #8]
    25bc:	add	sp, sp, #12
    25c0:	pop	{pc}		; (ldr pc, [sp], #4)
    25c4:	mov	r3, r4
    25c8:	mov	r1, r4
    25cc:	strd	r4, [sp]
    25d0:	mov	r0, r6
    25d4:	bl	0 <flatcc_verify_vector_field>
    25d8:	subs	r2, r0, #0
    25dc:	bne	25ac <MyGame_Example_TestBase64_verify_table+0x38>
    25e0:	movw	ip, #0
    25e4:	movt	ip, #0
    25e8:	mov	r3, r2
    25ec:	mov	r0, r6
    25f0:	mov	r1, #2
    25f4:	stm	sp, {r4, ip}
    25f8:	bl	0 <flatcc_verify_table_as_nested_root>
    25fc:	mov	r2, r0
    2600:	b	25ac <MyGame_Example_TestBase64_verify_table+0x38>

00002604 <MyGame_Example_Any_union_verifier>:
    2604:	ldrb	r3, [r0, #12]
    2608:	sub	r3, r3, #1
    260c:	cmp	r3, #3
    2610:	ldrls	pc, [pc, r3, lsl #2]
    2614:	b	2658 <MyGame_Example_Any_union_verifier+0x54>
    2618:	.word	0x0000264c
    261c:	.word	0x00002640
    2620:	.word	0x00002634
    2624:	.word	0x00002628
    2628:	movw	r1, #0
    262c:	movt	r1, #0
    2630:	b	0 <flatcc_verify_union_table>
    2634:	movw	r1, #0
    2638:	movt	r1, #0
    263c:	b	0 <flatcc_verify_union_table>
    2640:	movw	r1, #0
    2644:	movt	r1, #0
    2648:	b	0 <flatcc_verify_union_table>
    264c:	movw	r1, #0
    2650:	movt	r1, #0
    2654:	b	0 <flatcc_verify_union_table>
    2658:	mov	r0, #0
    265c:	bx	lr

00002660 <MyGame_Example_Alt_verify_table>:
    2660:	mov	r2, #0
    2664:	movw	r3, #0
    2668:	movt	r3, #0
    266c:	mov	r1, r2
    2670:	str	r4, [sp, #-8]!
    2674:	mov	r4, r0
    2678:	str	lr, [sp, #4]
    267c:	bl	0 <flatcc_verify_table_field>
    2680:	cmp	r0, #0
    2684:	beq	2694 <MyGame_Example_Alt_verify_table+0x34>
    2688:	ldr	r4, [sp]
    268c:	add	sp, sp, #4
    2690:	pop	{pc}		; (ldr pc, [sp], #4)
    2694:	mov	r2, r0
    2698:	movw	r3, #0
    269c:	movt	r3, #0
    26a0:	mov	r1, #1
    26a4:	mov	r0, r4
    26a8:	bl	0 <flatcc_verify_table_field>
    26ac:	cmp	r0, #0
    26b0:	bne	2688 <MyGame_Example_Alt_verify_table+0x28>
    26b4:	mov	r2, r0
    26b8:	movw	r3, #0
    26bc:	movt	r3, #0
    26c0:	mov	r0, r4
    26c4:	ldr	r4, [sp]
    26c8:	mov	r1, #3
    26cc:	ldr	lr, [sp, #4]
    26d0:	add	sp, sp, #8
    26d4:	b	0 <flatcc_verify_union_vector_field>

000026d8 <Fantasy_Movie_verify_table>:
    26d8:	movw	r3, #0
    26dc:	movt	r3, #0
    26e0:	str	r4, [sp, #-8]!
    26e4:	mov	r2, #0
    26e8:	mov	r1, #1
    26ec:	str	lr, [sp, #4]
    26f0:	mov	r4, r0
    26f4:	bl	0 <flatcc_verify_union_field>
    26f8:	cmp	r0, #0
    26fc:	beq	270c <Fantasy_Movie_verify_table+0x34>
    2700:	ldr	r4, [sp]
    2704:	add	sp, sp, #4
    2708:	pop	{pc}		; (ldr pc, [sp], #4)
    270c:	mov	r2, r0
    2710:	movw	r3, #0
    2714:	movt	r3, #0
    2718:	mov	r1, #3
    271c:	mov	r0, r4
    2720:	bl	0 <flatcc_verify_union_field>
    2724:	cmp	r0, #0
    2728:	bne	2700 <Fantasy_Movie_verify_table+0x28>
    272c:	mov	r2, r0
    2730:	movw	r3, #0
    2734:	movt	r3, #0
    2738:	mov	r1, #5
    273c:	mov	r0, r4
    2740:	bl	0 <flatcc_verify_union_field>
    2744:	cmp	r0, #0
    2748:	bne	2700 <Fantasy_Movie_verify_table+0x28>
    274c:	mov	r2, r0
    2750:	movw	r3, #0
    2754:	movt	r3, #0
    2758:	mov	r1, #7
    275c:	mov	r0, r4
    2760:	bl	0 <flatcc_verify_union_field>
    2764:	cmp	r0, #0
    2768:	bne	2700 <Fantasy_Movie_verify_table+0x28>
    276c:	mov	r2, r0
    2770:	movw	r3, #0
    2774:	movt	r3, #0
    2778:	mov	r0, r4
    277c:	ldr	r4, [sp]
    2780:	mov	r1, #9
    2784:	ldr	lr, [sp, #4]
    2788:	add	sp, sp, #8
    278c:	b	0 <flatcc_verify_union_vector_field>

00002790 <Fantasy_Character_union_verifier>:
    2790:	ldrb	r3, [r0, #12]
    2794:	mov	r2, r0
    2798:	cmp	r3, #10
    279c:	bhi	27c4 <Fantasy_Character_union_verifier+0x34>
    27a0:	cmp	r3, #9
    27a4:	bcs	27dc <Fantasy_Character_union_verifier+0x4c>
    27a8:	cmp	r3, #2
    27ac:	beq	27f0 <Fantasy_Character_union_verifier+0x60>
    27b0:	cmp	r3, #8
    27b4:	bne	27e8 <Fantasy_Character_union_verifier+0x58>
    27b8:	mov	r2, #2
    27bc:	mov	r1, r2
    27c0:	b	0 <flatcc_verify_union_struct>
    27c4:	cmp	r3, #11
    27c8:	beq	27d4 <Fantasy_Character_union_verifier+0x44>
    27cc:	cmp	r3, #255	; 0xff
    27d0:	bne	27e8 <Fantasy_Character_union_verifier+0x58>
    27d4:	mov	r0, r2
    27d8:	b	0 <flatcc_verify_union_string>
    27dc:	mov	r2, #4
    27e0:	mov	r1, r2
    27e4:	b	0 <flatcc_verify_union_struct>
    27e8:	mov	r0, #0
    27ec:	bx	lr
    27f0:	movw	r1, #0
    27f4:	movt	r1, #0
    27f8:	b	0 <flatcc_verify_union_table>

000027fc <MyGame_Example_Any_print_json_union_type>:
    27fc:	sub	r1, r1, #1
    2800:	cmp	r1, #3
    2804:	ldrls	pc, [pc, r1, lsl #2]
    2808:	b	285c <MyGame_Example_Any_print_json_union_type+0x60>
    280c:	.word	0x0000284c
    2810:	.word	0x0000283c
    2814:	.word	0x0000282c
    2818:	.word	0x0000281c
    281c:	movw	r1, #0
    2820:	movt	r1, #0
    2824:	mov	r2, #3
    2828:	b	0 <flatcc_json_printer_enum>
    282c:	movw	r1, #0
    2830:	movt	r1, #0
    2834:	mov	r2, #8
    2838:	b	0 <flatcc_json_printer_enum>
    283c:	movw	r1, #0
    2840:	movt	r1, #0
    2844:	mov	r2, #23
    2848:	b	0 <flatcc_json_printer_enum>
    284c:	movw	r1, #0
    2850:	movt	r1, #0
    2854:	mov	r2, #7
    2858:	b	0 <flatcc_json_printer_enum>
    285c:	movw	r1, #0
    2860:	movt	r1, #0
    2864:	mov	r2, #4
    2868:	b	0 <flatcc_json_printer_enum>

0000286c <flatcc_json_parser_int64>:
    286c:	strd	r4, [sp, #-20]!	; 0xffffffec
    2870:	mov	r4, #0
    2874:	mov	r5, #0
    2878:	strd	r6, [sp, #8]
    287c:	mov	r6, #0
    2880:	cmp	r1, r2
    2884:	str	lr, [sp, #16]
    2888:	sub	sp, sp, #28
    288c:	moveq	r0, r1
    2890:	strd	r4, [r3]
    2894:	str	r6, [sp, #12]
    2898:	strd	r4, [sp, #16]
    289c:	beq	28c8 <flatcc_json_parser_int64+0x5c>
    28a0:	add	ip, sp, #16
    28a4:	mov	r5, r3
    28a8:	add	r3, sp, #12
    28ac:	mov	r4, r1
    28b0:	str	ip, [sp]
    28b4:	mov	r7, r0
    28b8:	mov	r6, r2
    28bc:	bl	0 <flatcc_json_parser_integer>
    28c0:	cmp	r4, r0
    28c4:	bne	28dc <flatcc_json_parser_int64+0x70>
    28c8:	add	sp, sp, #28
    28cc:	ldrd	r4, [sp]
    28d0:	ldrd	r6, [sp, #8]
    28d4:	add	sp, sp, #16
    28d8:	pop	{pc}		; (ldr pc, [sp], #4)
    28dc:	ldr	r1, [sp, #12]
    28e0:	ldrd	r2, [sp, #16]
    28e4:	cmp	r1, #0
    28e8:	beq	2908 <flatcc_json_parser_int64+0x9c>
    28ec:	cmp	r3, #-2147483648	; 0x80000000
    28f0:	cmpeq	r2, #0
    28f4:	bhi	2930 <flatcc_json_parser_int64+0xc4>
    28f8:	rsbs	r2, r2, #0
    28fc:	rsc	r3, r3, #0
    2900:	strd	r2, [r5]
    2904:	b	28c8 <flatcc_json_parser_int64+0x5c>
    2908:	cmp	r2, #0
    290c:	sbcs	r1, r3, #0
    2910:	strdge	r2, [r5]
    2914:	bge	28c8 <flatcc_json_parser_int64+0x5c>
    2918:	mov	r1, r0
    291c:	mov	r2, r6
    2920:	mov	r0, r7
    2924:	mov	r3, #7
    2928:	bl	0 <flatcc_json_parser_set_error>
    292c:	b	28c8 <flatcc_json_parser_int64+0x5c>
    2930:	mov	r1, r0
    2934:	mov	r2, r6
    2938:	mov	r0, r7
    293c:	mov	r3, #8
    2940:	bl	0 <flatcc_json_parser_set_error>
    2944:	b	28c8 <flatcc_json_parser_int64+0x5c>

00002948 <MyGame_Example_Foo_parse_json_enum>:
    2948:	strd	r4, [sp, #-32]!	; 0xffffffe0
    294c:	mov	r4, r1
    2950:	mov	r1, r2
    2954:	strd	r6, [sp, #8]
    2958:	mov	r6, r0
    295c:	mov	r0, r4
    2960:	strd	r8, [sp, #16]
    2964:	mov	r5, r2
    2968:	mov	r7, r3
    296c:	str	sl, [sp, #24]
    2970:	str	lr, [sp, #28]
    2974:	sub	sp, sp, #8
    2978:	bl	0 <flatcc_json_parser_symbol_part_ext>
    297c:	add	r3, pc, #260	; 0x104
    2980:	ldrd	r2, [r3]
    2984:	cmp	r1, r3
    2988:	cmpeq	r0, r2
    298c:	beq	2a04 <MyGame_Example_Foo_parse_json_enum+0xbc>
    2990:	add	r9, pc, #248	; 0xf8
    2994:	ldrd	r8, [r9]
    2998:	mov	sl, #0
    299c:	cmp	r1, r9
    29a0:	cmpeq	sl, r8
    29a4:	beq	29c8 <MyGame_Example_Foo_parse_json_enum+0x80>
    29a8:	mov	r0, r4
    29ac:	add	sp, sp, #8
    29b0:	ldrd	r4, [sp]
    29b4:	ldrd	r6, [sp, #8]
    29b8:	ldrd	r8, [sp, #16]
    29bc:	ldr	sl, [sp, #24]
    29c0:	add	sp, sp, #28
    29c4:	pop	{pc}		; (ldr pc, [sp], #4)
    29c8:	ldr	r3, [sp, #44]	; 0x2c
    29cc:	mov	r2, r5
    29d0:	mov	r0, r6
    29d4:	mov	r1, r4
    29d8:	str	r3, [sp]
    29dc:	mov	r3, #4
    29e0:	bl	0 <flatcc_json_parser_match_constant>
    29e4:	cmp	r4, r0
    29e8:	beq	29ac <MyGame_Example_Foo_parse_json_enum+0x64>
    29ec:	ldr	r1, [sp, #40]	; 0x28
    29f0:	mov	r2, #0
    29f4:	mov	r3, #0
    29f8:	strd	r2, [r1]
    29fc:	str	sl, [r7]
    2a00:	b	29ac <MyGame_Example_Foo_parse_json_enum+0x64>
    2a04:	mov	r1, r5
    2a08:	add	r0, r4, #8
    2a0c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    2a10:	add	r3, pc, #128	; 0x80
    2a14:	ldrd	r2, [r3]
    2a18:	cmp	r1, r3
    2a1c:	cmpeq	r0, r2
    2a20:	bne	29a8 <MyGame_Example_Foo_parse_json_enum+0x60>
    2a24:	add	r8, r4, #16
    2a28:	mov	r1, r5
    2a2c:	mov	r0, r8
    2a30:	mov	r9, #0
    2a34:	bl	0 <flatcc_json_parser_symbol_part_ext>
    2a38:	and	r3, r1, #-16777216	; 0xff000000
    2a3c:	cmp	r3, #1694498816	; 0x65000000
    2a40:	cmpeq	r9, #0
    2a44:	bne	29a8 <MyGame_Example_Foo_parse_json_enum+0x60>
    2a48:	ldr	r3, [sp, #44]	; 0x2c
    2a4c:	mov	r2, r5
    2a50:	mov	r0, r6
    2a54:	mov	r1, r8
    2a58:	str	r3, [sp]
    2a5c:	mov	r3, #1
    2a60:	bl	0 <flatcc_json_parser_match_constant>
    2a64:	cmp	r8, r0
    2a68:	beq	29a8 <MyGame_Example_Foo_parse_json_enum+0x60>
    2a6c:	ldr	r1, [sp, #40]	; 0x28
    2a70:	mov	r2, #1
    2a74:	mov	r3, #0
    2a78:	strd	r2, [r1]
    2a7c:	str	r9, [r7]
    2a80:	b	29ac <MyGame_Example_Foo_parse_json_enum+0x64>
    2a84:	nop	{0}
    2a88:	.word	0x72656e74
    2a8c:	.word	0x496e5061
    2a90:	.word	0x00000000
    2a94:	.word	0x4e4f4e45
    2a98:	.word	0x73706163
    2a9c:	.word	0x4e616d65

00002aa0 <flatcc_json_parser_uint64.constprop.42>:
    2aa0:	strd	r4, [sp, #-20]!	; 0xffffffec
    2aa4:	mov	r4, #0
    2aa8:	mov	r5, #0
    2aac:	strd	r6, [sp, #8]
    2ab0:	mov	r6, #0
    2ab4:	cmp	r1, r2
    2ab8:	str	lr, [sp, #16]
    2abc:	sub	sp, sp, #28
    2ac0:	moveq	r0, r1
    2ac4:	strd	r4, [r3]
    2ac8:	str	r6, [sp, #12]
    2acc:	strd	r4, [sp, #16]
    2ad0:	beq	2b10 <flatcc_json_parser_uint64.constprop.42+0x70>
    2ad4:	add	ip, sp, #16
    2ad8:	mov	r5, r3
    2adc:	add	r3, sp, #12
    2ae0:	mov	r4, r1
    2ae4:	str	ip, [sp]
    2ae8:	mov	r7, r0
    2aec:	mov	r6, r2
    2af0:	bl	0 <flatcc_json_parser_integer>
    2af4:	cmp	r4, r0
    2af8:	beq	2b10 <flatcc_json_parser_uint64.constprop.42+0x70>
    2afc:	ldr	r3, [sp, #12]
    2b00:	cmp	r3, #0
    2b04:	bne	2b24 <flatcc_json_parser_uint64.constprop.42+0x84>
    2b08:	ldrd	r2, [sp, #16]
    2b0c:	strd	r2, [r5]
    2b10:	add	sp, sp, #28
    2b14:	ldrd	r4, [sp]
    2b18:	ldrd	r6, [sp, #8]
    2b1c:	add	sp, sp, #16
    2b20:	pop	{pc}		; (ldr pc, [sp], #4)
    2b24:	mov	r1, r0
    2b28:	mov	r2, r6
    2b2c:	mov	r0, r7
    2b30:	mov	r3, #8
    2b34:	bl	0 <flatcc_json_parser_set_error>
    2b38:	b	2b10 <flatcc_json_parser_uint64.constprop.42+0x70>

00002b3c <MyGame_Example2_Monster_verify_table>:
    2b3c:	mov	r0, #0
    2b40:	bx	lr

00002b44 <MyGame_Example2_Monster_print_json_table>:
    2b44:	bx	lr

00002b48 <flatcc_json_parser_uint32.constprop.41>:
    2b48:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2b4c:	cmp	r1, r2
    2b50:	strd	r6, [sp, #8]
    2b54:	mov	r6, #0
    2b58:	mov	r7, #0
    2b5c:	strd	r8, [sp, #16]
    2b60:	moveq	r0, r1
    2b64:	str	lr, [sp, #24]
    2b68:	sub	sp, sp, #28
    2b6c:	mov	lr, #0
    2b70:	str	lr, [r3]
    2b74:	str	lr, [sp, #12]
    2b78:	strd	r6, [sp, #16]
    2b7c:	beq	2ba8 <flatcc_json_parser_uint32.constprop.41+0x60>
    2b80:	add	ip, sp, #16
    2b84:	mov	r5, r3
    2b88:	add	r3, sp, #12
    2b8c:	mov	r4, r1
    2b90:	str	ip, [sp]
    2b94:	mov	r7, r0
    2b98:	mov	r6, r2
    2b9c:	bl	0 <flatcc_json_parser_integer>
    2ba0:	cmp	r4, r0
    2ba4:	bne	2bc0 <flatcc_json_parser_uint32.constprop.41+0x78>
    2ba8:	add	sp, sp, #28
    2bac:	ldrd	r4, [sp]
    2bb0:	ldrd	r6, [sp, #8]
    2bb4:	ldrd	r8, [sp, #16]
    2bb8:	add	sp, sp, #24
    2bbc:	pop	{pc}		; (ldr pc, [sp], #4)
    2bc0:	ldr	r3, [sp, #12]
    2bc4:	cmp	r3, #0
    2bc8:	bne	2c00 <flatcc_json_parser_uint32.constprop.41+0xb8>
    2bcc:	ldrd	r2, [sp, #16]
    2bd0:	mov	r9, #0
    2bd4:	mvn	r8, #0
    2bd8:	cmp	r3, r9
    2bdc:	cmpeq	r2, r8
    2be0:	strls	r2, [r5]
    2be4:	bls	2ba8 <flatcc_json_parser_uint32.constprop.41+0x60>
    2be8:	mov	r1, r0
    2bec:	mov	r2, r6
    2bf0:	mov	r0, r7
    2bf4:	mov	r3, #7
    2bf8:	bl	0 <flatcc_json_parser_set_error>
    2bfc:	b	2ba8 <flatcc_json_parser_uint32.constprop.41+0x60>
    2c00:	mov	r1, r0
    2c04:	mov	r2, r6
    2c08:	mov	r0, r7
    2c0c:	mov	r3, #8
    2c10:	bl	0 <flatcc_json_parser_set_error>
    2c14:	b	2ba8 <flatcc_json_parser_uint32.constprop.41+0x60>

00002c18 <flatcc_json_parser_uint8>:
    2c18:	strd	r4, [sp, #-20]!	; 0xffffffec
    2c1c:	cmp	r1, r2
    2c20:	strd	r6, [sp, #8]
    2c24:	mov	r6, #0
    2c28:	mov	r7, #0
    2c2c:	str	lr, [sp, #16]
    2c30:	sub	sp, sp, #28
    2c34:	mov	lr, #0
    2c38:	moveq	r0, r1
    2c3c:	strb	lr, [r3]
    2c40:	str	lr, [sp, #12]
    2c44:	strd	r6, [sp, #16]
    2c48:	beq	2c74 <flatcc_json_parser_uint8+0x5c>
    2c4c:	add	ip, sp, #16
    2c50:	mov	r5, r3
    2c54:	add	r3, sp, #12
    2c58:	mov	r4, r1
    2c5c:	str	ip, [sp]
    2c60:	mov	r7, r0
    2c64:	mov	r6, r2
    2c68:	bl	0 <flatcc_json_parser_integer>
    2c6c:	cmp	r4, r0
    2c70:	bne	2c88 <flatcc_json_parser_uint8+0x70>
    2c74:	add	sp, sp, #28
    2c78:	ldrd	r4, [sp]
    2c7c:	ldrd	r6, [sp, #8]
    2c80:	add	sp, sp, #16
    2c84:	pop	{pc}		; (ldr pc, [sp], #4)
    2c88:	ldr	r3, [sp, #12]
    2c8c:	cmp	r3, #0
    2c90:	bne	2cc0 <flatcc_json_parser_uint8+0xa8>
    2c94:	ldrd	r2, [sp, #16]
    2c98:	cmp	r3, #0
    2c9c:	cmpeq	r2, #255	; 0xff
    2ca0:	strbls	r2, [r5]
    2ca4:	bls	2c74 <flatcc_json_parser_uint8+0x5c>
    2ca8:	mov	r1, r0
    2cac:	mov	r2, r6
    2cb0:	mov	r0, r7
    2cb4:	mov	r3, #7
    2cb8:	bl	0 <flatcc_json_parser_set_error>
    2cbc:	b	2c74 <flatcc_json_parser_uint8+0x5c>
    2cc0:	mov	r1, r0
    2cc4:	mov	r2, r6
    2cc8:	mov	r0, r7
    2ccc:	mov	r3, #8
    2cd0:	bl	0 <flatcc_json_parser_set_error>
    2cd4:	b	2c74 <flatcc_json_parser_uint8+0x5c>

00002cd8 <flatcc_json_parser_int32.constprop.39>:
    2cd8:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2cdc:	cmp	r1, r2
    2ce0:	strd	r6, [sp, #8]
    2ce4:	mov	r6, #0
    2ce8:	mov	r7, #0
    2cec:	strd	r8, [sp, #16]
    2cf0:	moveq	r0, r1
    2cf4:	str	lr, [sp, #24]
    2cf8:	sub	sp, sp, #28
    2cfc:	mov	lr, #0
    2d00:	str	lr, [r3]
    2d04:	str	lr, [sp, #12]
    2d08:	strd	r6, [sp, #16]
    2d0c:	beq	2d38 <flatcc_json_parser_int32.constprop.39+0x60>
    2d10:	add	ip, sp, #16
    2d14:	mov	r5, r3
    2d18:	add	r3, sp, #12
    2d1c:	mov	r4, r1
    2d20:	str	ip, [sp]
    2d24:	mov	r7, r0
    2d28:	mov	r6, r2
    2d2c:	bl	0 <flatcc_json_parser_integer>
    2d30:	cmp	r4, r0
    2d34:	bne	2d50 <flatcc_json_parser_int32.constprop.39+0x78>
    2d38:	add	sp, sp, #28
    2d3c:	ldrd	r4, [sp]
    2d40:	ldrd	r6, [sp, #8]
    2d44:	ldrd	r8, [sp, #16]
    2d48:	add	sp, sp, #24
    2d4c:	pop	{pc}		; (ldr pc, [sp], #4)
    2d50:	ldr	r1, [sp, #12]
    2d54:	ldrd	r2, [sp, #16]
    2d58:	cmp	r1, #0
    2d5c:	beq	2d8c <flatcc_json_parser_int32.constprop.39+0xb4>
    2d60:	cmp	r3, #0
    2d64:	cmpeq	r2, #-2147483648	; 0x80000000
    2d68:	rsbls	r2, r2, #0
    2d6c:	strls	r2, [r5]
    2d70:	bls	2d38 <flatcc_json_parser_int32.constprop.39+0x60>
    2d74:	mov	r1, r0
    2d78:	mov	r2, r6
    2d7c:	mov	r0, r7
    2d80:	mov	r3, #8
    2d84:	bl	0 <flatcc_json_parser_set_error>
    2d88:	b	2d38 <flatcc_json_parser_int32.constprop.39+0x60>
    2d8c:	mov	r9, #0
    2d90:	mvn	r8, #-2147483648	; 0x80000000
    2d94:	cmp	r3, r9
    2d98:	cmpeq	r2, r8
    2d9c:	strls	r2, [r5]
    2da0:	bls	2d38 <flatcc_json_parser_int32.constprop.39+0x60>
    2da4:	mov	r1, r0
    2da8:	mov	r2, r6
    2dac:	mov	r0, r7
    2db0:	mov	r3, #7
    2db4:	bl	0 <flatcc_json_parser_set_error>
    2db8:	b	2d38 <flatcc_json_parser_int32.constprop.39+0x60>

00002dbc <flatcc_json_parser_int16.constprop.38>:
    2dbc:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2dc0:	cmp	r1, r2
    2dc4:	strd	r6, [sp, #8]
    2dc8:	mov	r6, #0
    2dcc:	mov	r7, #0
    2dd0:	strd	r8, [sp, #16]
    2dd4:	moveq	r0, r1
    2dd8:	str	lr, [sp, #24]
    2ddc:	sub	sp, sp, #28
    2de0:	mov	lr, #0
    2de4:	strh	lr, [r3]
    2de8:	str	lr, [sp, #12]
    2dec:	strd	r6, [sp, #16]
    2df0:	beq	2e1c <flatcc_json_parser_int16.constprop.38+0x60>
    2df4:	add	ip, sp, #16
    2df8:	mov	r5, r3
    2dfc:	add	r3, sp, #12
    2e00:	mov	r4, r1
    2e04:	str	ip, [sp]
    2e08:	mov	r7, r0
    2e0c:	mov	r6, r2
    2e10:	bl	0 <flatcc_json_parser_integer>
    2e14:	cmp	r4, r0
    2e18:	bne	2e34 <flatcc_json_parser_int16.constprop.38+0x78>
    2e1c:	add	sp, sp, #28
    2e20:	ldrd	r4, [sp]
    2e24:	ldrd	r6, [sp, #8]
    2e28:	ldrd	r8, [sp, #16]
    2e2c:	add	sp, sp, #24
    2e30:	pop	{pc}		; (ldr pc, [sp], #4)
    2e34:	ldr	r1, [sp, #12]
    2e38:	ldrd	r2, [sp, #16]
    2e3c:	cmp	r1, #0
    2e40:	beq	2e70 <flatcc_json_parser_int16.constprop.38+0xb4>
    2e44:	cmp	r3, #0
    2e48:	cmpeq	r2, #32768	; 0x8000
    2e4c:	rsbls	r2, r2, #0
    2e50:	strhls	r2, [r5]
    2e54:	bls	2e1c <flatcc_json_parser_int16.constprop.38+0x60>
    2e58:	mov	r1, r0
    2e5c:	mov	r2, r6
    2e60:	mov	r0, r7
    2e64:	mov	r3, #8
    2e68:	bl	0 <flatcc_json_parser_set_error>
    2e6c:	b	2e1c <flatcc_json_parser_int16.constprop.38+0x60>
    2e70:	mov	r9, #0
    2e74:	movw	r8, #32767	; 0x7fff
    2e78:	cmp	r3, r9
    2e7c:	cmpeq	r2, r8
    2e80:	strhls	r2, [r5]
    2e84:	bls	2e1c <flatcc_json_parser_int16.constprop.38+0x60>
    2e88:	mov	r1, r0
    2e8c:	mov	r2, r6
    2e90:	mov	r0, r7
    2e94:	mov	r3, #7
    2e98:	bl	0 <flatcc_json_parser_set_error>
    2e9c:	b	2e1c <flatcc_json_parser_int16.constprop.38+0x60>

00002ea0 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
    2ea0:	mov	r3, #8
    2ea4:	mov	r1, #0
    2ea8:	str	r4, [sp, #-8]!
    2eac:	mov	r2, r3
    2eb0:	mov	r4, r0
    2eb4:	str	lr, [sp, #4]
    2eb8:	bl	0 <flatcc_verify_field>
    2ebc:	cmp	r0, #0
    2ec0:	beq	2ed0 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x30>
    2ec4:	ldr	r4, [sp]
    2ec8:	add	sp, sp, #4
    2ecc:	pop	{pc}		; (ldr pc, [sp], #4)
    2ed0:	mov	r3, #4
    2ed4:	mov	r0, r4
    2ed8:	ldr	r4, [sp]
    2edc:	mov	r2, r3
    2ee0:	mov	r1, #1
    2ee4:	ldr	lr, [sp, #4]
    2ee8:	add	sp, sp, #8
    2eec:	b	0 <flatcc_verify_field>

00002ef0 <monster_test_local_MyGame_Example_json_parser_enum>:
    2ef0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2ef4:	mov	r4, r1
    2ef8:	mov	r5, r0
    2efc:	mov	r1, r2
    2f00:	mov	r0, r4
    2f04:	strd	r6, [sp, #8]
    2f08:	strd	r8, [sp, #16]
    2f0c:	strd	sl, [sp, #24]
    2f10:	mov	sl, r2
    2f14:	mov	fp, r3
    2f18:	str	lr, [sp, #32]
    2f1c:	sub	sp, sp, #20
    2f20:	bl	0 <flatcc_json_parser_symbol_part_ext>
    2f24:	add	r3, pc, #876	; 0x36c
    2f28:	ldrd	r2, [r3]
    2f2c:	ldr	r9, [sp, #56]	; 0x38
    2f30:	ldr	r8, [sp, #60]	; 0x3c
    2f34:	cmp	r1, r3
    2f38:	cmpeq	r0, r2
    2f3c:	bhi	301c <monster_test_local_MyGame_Example_json_parser_enum+0x12c>
    2f40:	add	r3, pc, #856	; 0x358
    2f44:	ldrd	r2, [r3]
    2f48:	mov	r6, #0
    2f4c:	bic	r7, r1, #255	; 0xff
    2f50:	cmp	r1, r3
    2f54:	cmpeq	r0, r2
    2f58:	bhi	2fa8 <monster_test_local_MyGame_Example_json_parser_enum+0xb8>
    2f5c:	add	r3, pc, #836	; 0x344
    2f60:	ldrd	r2, [r3]
    2f64:	cmp	r7, r3
    2f68:	cmpeq	r6, r2
    2f6c:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    2f70:	sub	r3, sl, r4
    2f74:	cmp	r3, #3
    2f78:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    2f7c:	ldrb	r3, [r4, #3]
    2f80:	cmp	r3, #46	; 0x2e
    2f84:	beq	31e4 <monster_test_local_MyGame_Example_json_parser_enum+0x2f4>
    2f88:	mov	r0, r4
    2f8c:	add	sp, sp, #20
    2f90:	ldrd	r4, [sp]
    2f94:	ldrd	r6, [sp, #8]
    2f98:	ldrd	r8, [sp, #16]
    2f9c:	ldrd	sl, [sp, #24]
    2fa0:	add	sp, sp, #32
    2fa4:	pop	{pc}		; (ldr pc, [sp], #4)
    2fa8:	add	r3, pc, #768	; 0x300
    2fac:	ldrd	r2, [r3]
    2fb0:	cmp	r7, r3
    2fb4:	cmpeq	r6, r2
    2fb8:	beq	319c <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
    2fbc:	add	r9, pc, #756	; 0x2f4
    2fc0:	ldrd	r8, [r9]
    2fc4:	and	r6, r0, #-16777216	; 0xff000000
    2fc8:	cmp	r1, r9
    2fcc:	cmpeq	r6, r8
    2fd0:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    2fd4:	sub	r3, sl, r4
    2fd8:	cmp	r3, #5
    2fdc:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    2fe0:	ldrb	r3, [r4, #5]
    2fe4:	cmp	r3, #46	; 0x2e
    2fe8:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    2fec:	mov	r3, fp
    2ff0:	mov	r2, sl
    2ff4:	add	r1, r4, #6
    2ff8:	mov	r0, r5
    2ffc:	add	sp, sp, #20
    3000:	ldrd	r4, [sp]
    3004:	ldrd	r6, [sp, #8]
    3008:	ldrd	r8, [sp, #16]
    300c:	ldrd	sl, [sp, #24]
    3010:	ldr	lr, [sp, #32]
    3014:	add	sp, sp, #36	; 0x24
    3018:	b	1c98 <MyGame_Example_Color_parse_json_enum>
    301c:	add	r3, pc, #668	; 0x29c
    3020:	ldrd	r2, [r3]
    3024:	cmp	r1, r3
    3028:	cmpeq	r0, r2
    302c:	bhi	308c <monster_test_local_MyGame_Example_json_parser_enum+0x19c>
    3030:	add	r3, pc, #656	; 0x290
    3034:	ldrd	r2, [r3]
    3038:	cmp	r1, r3
    303c:	cmpeq	r0, r2
    3040:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3044:	sub	r3, sl, r4
    3048:	cmp	r3, #8
    304c:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3050:	ldrb	r3, [r4, #8]
    3054:	cmp	r3, #46	; 0x2e
    3058:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    305c:	mov	r3, fp
    3060:	mov	r2, sl
    3064:	add	r1, r4, #9
    3068:	mov	r0, r5
    306c:	add	sp, sp, #20
    3070:	ldrd	r4, [sp]
    3074:	ldrd	r6, [sp, #8]
    3078:	ldrd	r8, [sp, #16]
    307c:	ldrd	sl, [sp, #24]
    3080:	ldr	lr, [sp, #32]
    3084:	add	sp, sp, #36	; 0x24
    3088:	b	1770 <MyGame_Example_hex_enum_parse_json_enum>
    308c:	add	r3, pc, #572	; 0x23c
    3090:	ldrd	r2, [r3]
    3094:	cmp	r1, r3
    3098:	cmpeq	r0, r2
    309c:	bhi	30fc <monster_test_local_MyGame_Example_json_parser_enum+0x20c>
    30a0:	add	r3, pc, #560	; 0x230
    30a4:	ldrd	r2, [r3]
    30a8:	cmp	r1, r3
    30ac:	cmpeq	r0, r2
    30b0:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    30b4:	sub	r3, sl, r4
    30b8:	cmp	r3, #8
    30bc:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    30c0:	ldrb	r3, [r4, #8]
    30c4:	cmp	r3, #46	; 0x2e
    30c8:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    30cc:	mov	r3, fp
    30d0:	mov	r2, sl
    30d4:	add	r1, r4, #9
    30d8:	mov	r0, r5
    30dc:	add	sp, sp, #20
    30e0:	ldrd	r4, [sp]
    30e4:	ldrd	r6, [sp, #8]
    30e8:	ldrd	r8, [sp, #16]
    30ec:	ldrd	sl, [sp, #24]
    30f0:	ldr	lr, [sp, #32]
    30f4:	add	sp, sp, #36	; 0x24
    30f8:	b	1910 <MyGame_Example_int_enum_parse_json_enum>
    30fc:	add	r3, pc, #476	; 0x1dc
    3100:	ldrd	r2, [r3]
    3104:	cmp	r1, r3
    3108:	cmpeq	r0, r2
    310c:	beq	3214 <monster_test_local_MyGame_Example_json_parser_enum+0x324>
    3110:	add	r3, pc, #464	; 0x1d0
    3114:	ldrd	r2, [r3]
    3118:	cmp	r1, r3
    311c:	cmpeq	r0, r2
    3120:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3124:	add	r6, r4, #8
    3128:	mov	r1, sl
    312c:	mov	r0, r6
    3130:	mov	r7, #0
    3134:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3138:	mov	r3, r1
    313c:	add	r1, pc, #428	; 0x1ac
    3140:	ldrd	r0, [r1]
    3144:	cmp	r3, r1
    3148:	cmpeq	r7, r0
    314c:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3150:	sub	r3, sl, r6
    3154:	cmp	r3, #4
    3158:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    315c:	ldrb	r3, [r4, #12]
    3160:	cmp	r3, #46	; 0x2e
    3164:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3168:	add	r3, r4, #13
    316c:	cmp	r6, r3
    3170:	str	r3, [sp, #12]
    3174:	beq	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3178:	mov	r0, r3
    317c:	mov	r1, sl
    3180:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3184:	and	r3, r1, #-16777216	; 0xff000000
    3188:	cmp	r3, #2013265920	; 0x78000000
    318c:	cmpeq	r7, #0
    3190:	beq	325c <monster_test_local_MyGame_Example_json_parser_enum+0x36c>
    3194:	ldr	r4, [sp, #12]
    3198:	b	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    319c:	sub	r3, sl, r4
    31a0:	cmp	r3, #3
    31a4:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    31a8:	ldrb	r3, [r4, #3]
    31ac:	cmp	r3, #46	; 0x2e
    31b0:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    31b4:	mov	r3, fp
    31b8:	mov	r2, sl
    31bc:	add	r1, r4, #4
    31c0:	mov	r0, r5
    31c4:	add	sp, sp, #20
    31c8:	ldrd	r4, [sp]
    31cc:	ldrd	r6, [sp, #8]
    31d0:	ldrd	r8, [sp, #16]
    31d4:	ldrd	sl, [sp, #24]
    31d8:	ldr	lr, [sp, #32]
    31dc:	add	sp, sp, #36	; 0x24
    31e0:	b	2948 <MyGame_Example_Foo_parse_json_enum>
    31e4:	mov	r3, fp
    31e8:	mov	r2, sl
    31ec:	add	r1, r4, #4
    31f0:	mov	r0, r5
    31f4:	add	sp, sp, #20
    31f8:	ldrd	r4, [sp]
    31fc:	ldrd	r6, [sp, #8]
    3200:	ldrd	r8, [sp, #16]
    3204:	ldrd	sl, [sp, #24]
    3208:	ldr	lr, [sp, #32]
    320c:	add	sp, sp, #36	; 0x24
    3210:	b	14e8 <MyGame_Example_Any_parse_json_enum>
    3214:	sub	r3, sl, r4
    3218:	cmp	r3, #8
    321c:	ble	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3220:	ldrb	r3, [r4, #8]
    3224:	cmp	r3, #46	; 0x2e
    3228:	bne	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    322c:	mov	r3, fp
    3230:	mov	r2, sl
    3234:	add	r1, r4, #9
    3238:	mov	r0, r5
    323c:	add	sp, sp, #20
    3240:	ldrd	r4, [sp]
    3244:	ldrd	r6, [sp, #8]
    3248:	ldrd	r8, [sp, #16]
    324c:	ldrd	sl, [sp, #24]
    3250:	ldr	lr, [sp, #32]
    3254:	add	sp, sp, #36	; 0x24
    3258:	b	1b18 <MyGame_Example_neg_enum_parse_json_enum>
    325c:	mov	r0, r5
    3260:	ldr	r5, [sp, #12]
    3264:	mov	r2, sl
    3268:	mov	r3, #1
    326c:	str	r8, [sp]
    3270:	mov	r1, r5
    3274:	bl	0 <flatcc_json_parser_match_constant>
    3278:	cmp	r5, r0
    327c:	mov	r4, r0
    3280:	beq	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3284:	mov	r0, #0
    3288:	mov	r1, #0
    328c:	strd	r0, [r9]
    3290:	str	r7, [fp]
    3294:	b	2f88 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    3298:	.word	0x656e756c
    329c:	.word	0x6865785f
    32a0:	.word	0x71ffffff
    32a4:	.word	0x436f6c6f
    32a8:	.word	0x00000000
    32ac:	.word	0x416e7900
    32b0:	.word	0x00000000
    32b4:	.word	0x466f6f00
    32b8:	.word	0x72000000
    32bc:	.word	0x436f6c6f
    32c0:	.word	0x656e756c
    32c4:	.word	0x696e745f
    32c8:	.word	0x656e756d
    32cc:	.word	0x6865785f
    32d0:	.word	0x656e756c
    32d4:	.word	0x6e65675f
    32d8:	.word	0x656e756d
    32dc:	.word	0x696e745f
    32e0:	.word	0x656e756d
    32e4:	.word	0x6e65675f
    32e8:	.word	0x6d707479
    32ec:	.word	0x6e6f7465
    32f0:	.word	0x00000000
    32f4:	.word	0x656e756d

000032f8 <monster_test_global_json_parser_enum>:
    32f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    32fc:	mov	r4, r1
    3300:	mov	r1, r2
    3304:	strd	r6, [sp, #8]
    3308:	mov	r5, r2
    330c:	strd	r8, [sp, #16]
    3310:	mov	r8, r0
    3314:	mov	r0, r4
    3318:	strd	sl, [sp, #24]
    331c:	mov	sl, r3
    3320:	str	lr, [sp, #32]
    3324:	sub	sp, sp, #20
    3328:	bl	0 <flatcc_json_parser_symbol_part_ext>
    332c:	add	r3, pc, #924	; 0x39c
    3330:	ldrd	r2, [r3]
    3334:	ldr	r7, [sp, #56]	; 0x38
    3338:	ldr	fp, [sp, #60]	; 0x3c
    333c:	cmp	r1, r3
    3340:	cmpeq	r0, r2
    3344:	bhi	33e8 <monster_test_global_json_parser_enum+0xf0>
    3348:	add	r3, pc, #904	; 0x388
    334c:	ldrd	r2, [r3]
    3350:	cmp	r1, r3
    3354:	cmpeq	r0, r2
    3358:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    335c:	mov	r1, r5
    3360:	add	r0, r4, #8
    3364:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3368:	add	r3, pc, #880	; 0x370
    336c:	ldrd	r2, [r3]
    3370:	cmp	r1, r3
    3374:	cmpeq	r0, r2
    3378:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    337c:	add	r6, r4, #16
    3380:	mov	r1, r5
    3384:	mov	r0, r6
    3388:	bl	0 <flatcc_json_parser_symbol_part_ext>
    338c:	and	r3, r1, #-16777216	; 0xff000000
    3390:	mov	r2, #0
    3394:	cmp	r3, #1912602624	; 0x72000000
    3398:	cmpeq	r2, #0
    339c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    33a0:	sub	r6, r5, r6
    33a4:	cmp	r6, #1
    33a8:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    33ac:	ldrb	r3, [r4, #17]
    33b0:	cmp	r3, #46	; 0x2e
    33b4:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    33b8:	mov	r3, sl
    33bc:	mov	r2, r5
    33c0:	add	r1, r4, #18
    33c4:	mov	r0, r8
    33c8:	add	sp, sp, #20
    33cc:	ldrd	r4, [sp]
    33d0:	ldrd	r6, [sp, #8]
    33d4:	ldrd	r8, [sp, #16]
    33d8:	ldrd	sl, [sp, #24]
    33dc:	ldr	lr, [sp, #32]
    33e0:	add	sp, sp, #36	; 0x24
    33e4:	b	11cc <Fantasy_Character_parse_json_enum>
    33e8:	add	r3, pc, #760	; 0x2f8
    33ec:	ldrd	r2, [r3]
    33f0:	cmp	r1, r3
    33f4:	cmpeq	r0, r2
    33f8:	beq	3548 <monster_test_global_json_parser_enum+0x250>
    33fc:	add	r3, pc, #748	; 0x2ec
    3400:	ldrd	r2, [r3]
    3404:	cmp	r1, r3
    3408:	cmpeq	r0, r2
    340c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3410:	mov	r1, r5
    3414:	add	r0, r4, #8
    3418:	bl	0 <flatcc_json_parser_symbol_part_ext>
    341c:	add	r3, pc, #724	; 0x2d4
    3420:	ldrd	r2, [r3]
    3424:	cmp	r1, r3
    3428:	cmpeq	r0, r2
    342c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3430:	mov	r1, r5
    3434:	add	r0, r4, #16
    3438:	bl	0 <flatcc_json_parser_symbol_part_ext>
    343c:	add	r3, pc, #700	; 0x2bc
    3440:	ldrd	r2, [r3]
    3444:	cmp	r1, r3
    3448:	cmpeq	r0, r2
    344c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3450:	mov	r1, r5
    3454:	add	r0, r4, #24
    3458:	bl	0 <flatcc_json_parser_symbol_part_ext>
    345c:	add	r3, pc, #676	; 0x2a4
    3460:	ldrd	r2, [r3]
    3464:	cmp	r1, r3
    3468:	cmpeq	r0, r2
    346c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3470:	add	r6, r4, #32
    3474:	mov	r1, r5
    3478:	mov	r0, r6
    347c:	mov	r9, #0
    3480:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3484:	and	r3, r1, #-16777216	; 0xff000000
    3488:	cmp	r3, #1694498816	; 0x65000000
    348c:	cmpeq	r9, #0
    3490:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3494:	sub	r6, r5, r6
    3498:	cmp	r6, #1
    349c:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    34a0:	ldrb	r3, [r4, #33]	; 0x21
    34a4:	cmp	r3, #46	; 0x2e
    34a8:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    34ac:	add	r6, r4, #34	; 0x22
    34b0:	mov	r1, r5
    34b4:	mov	r0, r6
    34b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    34bc:	bic	r3, r1, #255	; 0xff
    34c0:	strd	r0, [sp, #8]
    34c4:	add	r1, pc, #580	; 0x244
    34c8:	ldrd	r0, [r1]
    34cc:	cmp	r3, r1
    34d0:	cmpeq	r9, r0
    34d4:	beq	3a4c <monster_test_global_json_parser_enum+0x754>
    34d8:	add	r3, pc, #568	; 0x238
    34dc:	ldrd	r2, [r3]
    34e0:	ldrd	r0, [sp, #8]
    34e4:	cmp	r1, r3
    34e8:	cmpeq	r0, r2
    34ec:	bne	3524 <monster_test_global_json_parser_enum+0x22c>
    34f0:	add	r9, r4, #42	; 0x2a
    34f4:	mov	r1, r5
    34f8:	mov	r0, r9
    34fc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3500:	lsr	r3, r1, #16
    3504:	mov	r1, #0
    3508:	movt	r1, #24940	; 0x616c
    350c:	mov	r2, #0
    3510:	mov	r0, #0
    3514:	lsl	r3, r3, #16
    3518:	cmp	r3, r1
    351c:	cmpeq	r2, r0
    3520:	beq	3a84 <monster_test_global_json_parser_enum+0x78c>
    3524:	mov	r4, r6
    3528:	mov	r0, r4
    352c:	add	sp, sp, #20
    3530:	ldrd	r4, [sp]
    3534:	ldrd	r6, [sp, #8]
    3538:	ldrd	r8, [sp, #16]
    353c:	ldrd	sl, [sp, #24]
    3540:	add	sp, sp, #32
    3544:	pop	{pc}		; (ldr pc, [sp], #4)
    3548:	mov	r1, r5
    354c:	add	r0, r4, #8
    3550:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3554:	add	r3, pc, #452	; 0x1c4
    3558:	ldrd	r2, [r3]
    355c:	cmp	r1, r3
    3560:	cmpeq	r0, r2
    3564:	bhi	3620 <monster_test_global_json_parser_enum+0x328>
    3568:	add	r3, pc, #440	; 0x1b8
    356c:	ldrd	r2, [r3]
    3570:	cmp	r1, r3
    3574:	cmpeq	r0, r2
    3578:	bls	3808 <monster_test_global_json_parser_enum+0x510>
    357c:	add	r3, pc, #428	; 0x1ac
    3580:	ldrd	r2, [r3]
    3584:	cmp	r1, r3
    3588:	cmpeq	r0, r2
    358c:	beq	3924 <monster_test_global_json_parser_enum+0x62c>
    3590:	add	r3, pc, #416	; 0x1a0
    3594:	ldrd	r2, [r3]
    3598:	cmp	r1, r3
    359c:	cmpeq	r0, r2
    35a0:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    35a4:	add	r9, r4, #16
    35a8:	mov	r1, r5
    35ac:	mov	r0, r9
    35b0:	mov	r7, #0
    35b4:	movt	r7, #28527	; 0x6f6f
    35b8:	mov	r6, #0
    35bc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    35c0:	lsr	r3, r1, #16
    35c4:	mov	r2, #0
    35c8:	lsl	r3, r3, #16
    35cc:	cmp	r3, r7
    35d0:	cmpeq	r2, r6
    35d4:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    35d8:	sub	r9, r5, r9
    35dc:	cmp	r9, #2
    35e0:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    35e4:	ldrb	r3, [r4, #18]
    35e8:	cmp	r3, #46	; 0x2e
    35ec:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    35f0:	mov	r3, sl
    35f4:	mov	r2, r5
    35f8:	add	r1, r4, #19
    35fc:	mov	r0, r8
    3600:	add	sp, sp, #20
    3604:	ldrd	r4, [sp]
    3608:	ldrd	r6, [sp, #8]
    360c:	ldrd	r8, [sp, #16]
    3610:	ldrd	sl, [sp, #24]
    3614:	ldr	lr, [sp, #32]
    3618:	add	sp, sp, #36	; 0x24
    361c:	b	2948 <MyGame_Example_Foo_parse_json_enum>
    3620:	add	r3, pc, #280	; 0x118
    3624:	ldrd	r2, [r3]
    3628:	cmp	r1, r3
    362c:	cmpeq	r0, r2
    3630:	beq	3798 <monster_test_global_json_parser_enum+0x4a0>
    3634:	add	r3, pc, #268	; 0x10c
    3638:	ldrd	r2, [r3]
    363c:	cmp	r1, r3
    3640:	cmpeq	r0, r2
    3644:	bhi	3898 <monster_test_global_json_parser_enum+0x5a0>
    3648:	add	r3, pc, #256	; 0x100
    364c:	ldrd	r2, [r3]
    3650:	cmp	r1, r3
    3654:	cmpeq	r0, r2
    3658:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    365c:	add	r7, pc, #244	; 0xf4
    3660:	ldrd	r6, [r7]
    3664:	add	r9, r4, #16
    3668:	mov	r1, r5
    366c:	mov	r0, r9
    3670:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3674:	bic	r2, r0, #255	; 0xff
    3678:	cmp	r1, r7
    367c:	cmpeq	r2, r6
    3680:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3684:	sub	r9, r5, r9
    3688:	cmp	r9, #7
    368c:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    3690:	ldrb	r3, [r4, #23]
    3694:	cmp	r3, #46	; 0x2e
    3698:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    369c:	mov	r3, sl
    36a0:	mov	r2, r5
    36a4:	add	r1, r4, #24
    36a8:	mov	r0, r8
    36ac:	add	sp, sp, #20
    36b0:	ldrd	r4, [sp]
    36b4:	ldrd	r6, [sp, #8]
    36b8:	ldrd	r8, [sp, #16]
    36bc:	ldrd	sl, [sp, #24]
    36c0:	ldr	lr, [sp, #32]
    36c4:	add	sp, sp, #36	; 0x24
    36c8:	b	1910 <MyGame_Example_int_enum_parse_json_enum>
    36cc:	nop	{0}
    36d0:	.word	0x6d652e44
    36d4:	.word	0x4d794761
    36d8:	.word	0x6173792e
    36dc:	.word	0x46616e74
    36e0:	.word	0x61637465
    36e4:	.word	0x43686172
    36e8:	.word	0x6d652e45
    36ec:	.word	0x4d794761
    36f0:	.word	0x6d652e4f
    36f4:	.word	0x4d794761
    36f8:	.word	0x4e616d65
    36fc:	.word	0x74686572
    3700:	.word	0x652e4672
    3704:	.word	0x53706163
    3708:	.word	0x636c7564
    370c:	.word	0x6f6d496e
    3710:	.word	0x00000000
    3714:	.word	0x466f6f00
    3718:	.word	0x75646556
    371c:	.word	0x496e636c
    3720:	.word	0x6c652e67
    3724:	.word	0x78616d70
    3728:	.word	0x6c652e42
    372c:	.word	0x78616d70
    3730:	.word	0x6c652e43
    3734:	.word	0x78616d70
    3738:	.word	0x6c652e46
    373c:	.word	0x78616d70
    3740:	.word	0x6c652e68
    3744:	.word	0x78616d70
    3748:	.word	0x6c652e6d
    374c:	.word	0x78616d70
    3750:	.word	0x6c652e69
    3754:	.word	0x78616d70
    3758:	.word	0x6e756d00
    375c:	.word	0x6e745f65
    3760:	.word	0x6e756d00
    3764:	.word	0x65785f65
    3768:	.word	0x6c652e41
    376c:	.word	0x78616d70
    3770:	.word	0x6c652e6e
    3774:	.word	0x78616d70
    3778:	.word	0x6e756d00
    377c:	.word	0x65675f65
    3780:	.word	0x00000000
    3784:	.word	0x6f6c6f72
    3788:	.word	0x70747965
    378c:	.word	0x6f74656d
    3790:	.word	0x00000000
    3794:	.word	0x6e756d00
    3798:	sub	r7, pc, #64	; 0x40
    379c:	ldrd	r6, [r7]
    37a0:	add	r9, r4, #16
    37a4:	mov	r1, r5
    37a8:	mov	r0, r9
    37ac:	bl	0 <flatcc_json_parser_symbol_part_ext>
    37b0:	bic	r2, r0, #255	; 0xff
    37b4:	cmp	r1, r7
    37b8:	cmpeq	r2, r6
    37bc:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    37c0:	sub	r9, r5, r9
    37c4:	cmp	r9, #7
    37c8:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    37cc:	ldrb	r3, [r4, #23]
    37d0:	cmp	r3, #46	; 0x2e
    37d4:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    37d8:	mov	r3, sl
    37dc:	mov	r2, r5
    37e0:	add	r1, r4, #24
    37e4:	mov	r0, r8
    37e8:	add	sp, sp, #20
    37ec:	ldrd	r4, [sp]
    37f0:	ldrd	r6, [sp, #8]
    37f4:	ldrd	r8, [sp, #16]
    37f8:	ldrd	sl, [sp, #24]
    37fc:	ldr	lr, [sp, #32]
    3800:	add	sp, sp, #36	; 0x24
    3804:	b	1770 <MyGame_Example_hex_enum_parse_json_enum>
    3808:	sub	r3, pc, #168	; 0xa8
    380c:	ldrd	r2, [r3]
    3810:	cmp	r1, r3
    3814:	cmpeq	r0, r2
    3818:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    381c:	add	r9, r4, #16
    3820:	mov	r1, r5
    3824:	mov	r0, r9
    3828:	mov	r7, #0
    382c:	movt	r7, #28281	; 0x6e79
    3830:	mov	r6, #0
    3834:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3838:	lsr	r3, r1, #16
    383c:	mov	r2, #0
    3840:	lsl	r3, r3, #16
    3844:	cmp	r3, r7
    3848:	cmpeq	r2, r6
    384c:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3850:	sub	r9, r5, r9
    3854:	cmp	r9, #2
    3858:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    385c:	ldrb	r3, [r4, #18]
    3860:	cmp	r3, #46	; 0x2e
    3864:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3868:	mov	r3, sl
    386c:	mov	r2, r5
    3870:	add	r1, r4, #19
    3874:	mov	r0, r8
    3878:	add	sp, sp, #20
    387c:	ldrd	r4, [sp]
    3880:	ldrd	r6, [sp, #8]
    3884:	ldrd	r8, [sp, #16]
    3888:	ldrd	sl, [sp, #24]
    388c:	ldr	lr, [sp, #32]
    3890:	add	sp, sp, #36	; 0x24
    3894:	b	14e8 <MyGame_Example_Any_parse_json_enum>
    3898:	sub	r3, pc, #304	; 0x130
    389c:	ldrd	r2, [r3]
    38a0:	cmp	r1, r3
    38a4:	cmpeq	r0, r2
    38a8:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    38ac:	add	r9, r4, #16
    38b0:	mov	r1, r5
    38b4:	mov	r0, r9
    38b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    38bc:	bic	r2, r0, #255	; 0xff
    38c0:	mov	r3, r1
    38c4:	strd	r0, [sp, #8]
    38c8:	sub	r1, pc, #344	; 0x158
    38cc:	ldrd	r0, [r1]
    38d0:	cmp	r3, r1
    38d4:	cmpeq	r2, r0
    38d8:	bne	3994 <monster_test_global_json_parser_enum+0x69c>
    38dc:	sub	r9, r5, r9
    38e0:	cmp	r9, #7
    38e4:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    38e8:	ldrb	r3, [r4, #23]
    38ec:	cmp	r3, #46	; 0x2e
    38f0:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    38f4:	mov	r3, sl
    38f8:	mov	r2, r5
    38fc:	add	r1, r4, #24
    3900:	mov	r0, r8
    3904:	add	sp, sp, #20
    3908:	ldrd	r4, [sp]
    390c:	ldrd	r6, [sp, #8]
    3910:	ldrd	r8, [sp, #16]
    3914:	ldrd	sl, [sp, #24]
    3918:	ldr	lr, [sp, #32]
    391c:	add	sp, sp, #36	; 0x24
    3920:	b	1b18 <MyGame_Example_neg_enum_parse_json_enum>
    3924:	sub	r7, pc, #428	; 0x1ac
    3928:	ldrd	r6, [r7]
    392c:	add	r9, r4, #16
    3930:	mov	r1, r5
    3934:	mov	r0, r9
    3938:	bl	0 <flatcc_json_parser_symbol_part_ext>
    393c:	mov	r2, #0
    3940:	cmp	r1, r7
    3944:	cmpeq	r2, r6
    3948:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    394c:	sub	r9, r5, r9
    3950:	cmp	r9, #4
    3954:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    3958:	ldrb	r3, [r4, #20]
    395c:	cmp	r3, #46	; 0x2e
    3960:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    3964:	mov	r3, sl
    3968:	mov	r2, r5
    396c:	add	r1, r4, #21
    3970:	mov	r0, r8
    3974:	add	sp, sp, #20
    3978:	ldrd	r4, [sp]
    397c:	ldrd	r6, [sp, #8]
    3980:	ldrd	r8, [sp, #16]
    3984:	ldrd	sl, [sp, #24]
    3988:	ldr	lr, [sp, #32]
    398c:	add	sp, sp, #36	; 0x24
    3990:	b	1c98 <MyGame_Example_Color_parse_json_enum>
    3994:	sub	r3, pc, #532	; 0x214
    3998:	ldrd	r2, [r3]
    399c:	ldrd	r0, [sp, #8]
    39a0:	cmp	r1, r3
    39a4:	cmpeq	r0, r2
    39a8:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    39ac:	add	r9, r4, #24
    39b0:	mov	r1, r5
    39b4:	mov	r0, r9
    39b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    39bc:	bic	r3, r1, #255	; 0xff
    39c0:	sub	r1, pc, #568	; 0x238
    39c4:	ldrd	r0, [r1]
    39c8:	mov	r2, #0
    39cc:	cmp	r3, r1
    39d0:	cmpeq	r2, r0
    39d4:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    39d8:	sub	r9, r5, r9
    39dc:	cmp	r9, #3
    39e0:	ble	3528 <monster_test_global_json_parser_enum+0x230>
    39e4:	ldrb	r3, [r4, #27]
    39e8:	cmp	r3, #46	; 0x2e
    39ec:	bne	3528 <monster_test_global_json_parser_enum+0x230>
    39f0:	add	r6, r4, #28
    39f4:	mov	r1, r5
    39f8:	mov	r0, r6
    39fc:	mov	r9, #0
    3a00:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3a04:	and	r3, r1, #-16777216	; 0xff000000
    3a08:	cmp	r3, #2013265920	; 0x78000000
    3a0c:	cmpeq	r9, #0
    3a10:	bne	3524 <monster_test_global_json_parser_enum+0x22c>
    3a14:	mov	r2, r5
    3a18:	mov	r0, r8
    3a1c:	str	fp, [sp]
    3a20:	mov	r3, #1
    3a24:	mov	r1, r6
    3a28:	bl	0 <flatcc_json_parser_match_constant>
    3a2c:	cmp	r6, r0
    3a30:	mov	r4, r0
    3a34:	beq	3528 <monster_test_global_json_parser_enum+0x230>
    3a38:	mov	r2, #0
    3a3c:	mov	r3, #0
    3a40:	strd	r2, [r7]
    3a44:	str	r9, [sl]
    3a48:	b	3528 <monster_test_global_json_parser_enum+0x230>
    3a4c:	mov	r2, r5
    3a50:	mov	r0, r8
    3a54:	str	fp, [sp]
    3a58:	mov	r3, #3
    3a5c:	mov	r1, r6
    3a60:	bl	0 <flatcc_json_parser_match_constant>
    3a64:	cmp	r6, r0
    3a68:	mov	r4, r0
    3a6c:	beq	3528 <monster_test_global_json_parser_enum+0x230>
    3a70:	mov	r0, #17
    3a74:	mov	r1, #0
    3a78:	strd	r0, [r7]
    3a7c:	str	r9, [sl]
    3a80:	b	3528 <monster_test_global_json_parser_enum+0x230>
    3a84:	mov	r2, r5
    3a88:	mov	r0, r8
    3a8c:	str	fp, [sp]
    3a90:	mov	r3, #2
    3a94:	mov	r1, r9
    3a98:	bl	0 <flatcc_json_parser_match_constant>
    3a9c:	cmp	r9, r0
    3aa0:	mov	r4, r0
    3aa4:	beq	3524 <monster_test_global_json_parser_enum+0x22c>
    3aa8:	mov	r3, #0
    3aac:	mov	r2, #0
    3ab0:	strd	r2, [r7]
    3ab4:	mov	r3, #0
    3ab8:	str	r3, [sl]
    3abc:	b	3528 <monster_test_global_json_parser_enum+0x230>

00003ac0 <flatcc_json_parser_object_start>:
    3ac0:	cmp	r1, r2
    3ac4:	beq	3ad4 <flatcc_json_parser_object_start+0x14>
    3ac8:	ldrb	ip, [r1]
    3acc:	cmp	ip, #123	; 0x7b
    3ad0:	beq	3ae4 <flatcc_json_parser_object_start+0x24>
    3ad4:	mov	ip, #0
    3ad8:	str	ip, [r3]
    3adc:	mov	r3, #21
    3ae0:	b	0 <flatcc_json_parser_set_error>
    3ae4:	strd	r4, [sp, #-16]!
    3ae8:	mov	r5, r0
    3aec:	add	r0, r1, #1
    3af0:	str	r6, [sp, #8]
    3af4:	mov	r6, r3
    3af8:	sub	r3, r2, r0
    3afc:	cmp	r3, #1
    3b00:	mov	r4, r2
    3b04:	str	lr, [sp, #12]
    3b08:	ble	3b1c <flatcc_json_parser_object_start+0x5c>
    3b0c:	ldrb	r3, [r1, #1]
    3b10:	cmp	r3, #32
    3b14:	bhi	3b2c <flatcc_json_parser_object_start+0x6c>
    3b18:	beq	3b58 <flatcc_json_parser_object_start+0x98>
    3b1c:	mov	r1, r0
    3b20:	mov	r2, r4
    3b24:	mov	r0, r5
    3b28:	bl	0 <flatcc_json_parser_space_ext>
    3b2c:	cmp	r4, r0
    3b30:	beq	3b40 <flatcc_json_parser_object_start+0x80>
    3b34:	ldrb	r3, [r0]
    3b38:	cmp	r3, #125	; 0x7d
    3b3c:	beq	3b6c <flatcc_json_parser_object_start+0xac>
    3b40:	mov	r3, #1
    3b44:	ldrd	r4, [sp]
    3b48:	str	r3, [r6]
    3b4c:	ldr	r6, [sp, #8]
    3b50:	add	sp, sp, #12
    3b54:	pop	{pc}		; (ldr pc, [sp], #4)
    3b58:	ldrb	r3, [r1, #2]
    3b5c:	cmp	r3, #32
    3b60:	addhi	r0, r1, #2
    3b64:	bls	3b1c <flatcc_json_parser_object_start+0x5c>
    3b68:	b	3b2c <flatcc_json_parser_object_start+0x6c>
    3b6c:	mov	r3, #0
    3b70:	mov	r2, r4
    3b74:	ldr	lr, [sp, #12]
    3b78:	add	r1, r0, #1
    3b7c:	mov	r0, r5
    3b80:	ldrd	r4, [sp]
    3b84:	str	r3, [r6]
    3b88:	ldr	r6, [sp, #8]
    3b8c:	add	sp, sp, #16
    3b90:	b	1e18 <flatcc_json_parser_space>

00003b94 <flatcc_json_parser_array_start>:
    3b94:	cmp	r1, r2
    3b98:	beq	3ba8 <flatcc_json_parser_array_start+0x14>
    3b9c:	ldrb	ip, [r1]
    3ba0:	cmp	ip, #91	; 0x5b
    3ba4:	beq	3bb8 <flatcc_json_parser_array_start+0x24>
    3ba8:	mov	ip, #0
    3bac:	str	ip, [r3]
    3bb0:	mov	r3, #22
    3bb4:	b	0 <flatcc_json_parser_set_error>
    3bb8:	strd	r4, [sp, #-16]!
    3bbc:	mov	r5, r0
    3bc0:	add	r0, r1, #1
    3bc4:	str	r6, [sp, #8]
    3bc8:	mov	r6, r3
    3bcc:	sub	r3, r2, r0
    3bd0:	cmp	r3, #1
    3bd4:	mov	r4, r2
    3bd8:	str	lr, [sp, #12]
    3bdc:	ble	3bf0 <flatcc_json_parser_array_start+0x5c>
    3be0:	ldrb	r3, [r1, #1]
    3be4:	cmp	r3, #32
    3be8:	bhi	3c00 <flatcc_json_parser_array_start+0x6c>
    3bec:	beq	3c2c <flatcc_json_parser_array_start+0x98>
    3bf0:	mov	r1, r0
    3bf4:	mov	r2, r4
    3bf8:	mov	r0, r5
    3bfc:	bl	0 <flatcc_json_parser_space_ext>
    3c00:	cmp	r4, r0
    3c04:	beq	3c14 <flatcc_json_parser_array_start+0x80>
    3c08:	ldrb	r3, [r0]
    3c0c:	cmp	r3, #93	; 0x5d
    3c10:	beq	3c40 <flatcc_json_parser_array_start+0xac>
    3c14:	mov	r3, #1
    3c18:	ldrd	r4, [sp]
    3c1c:	str	r3, [r6]
    3c20:	ldr	r6, [sp, #8]
    3c24:	add	sp, sp, #12
    3c28:	pop	{pc}		; (ldr pc, [sp], #4)
    3c2c:	ldrb	r3, [r1, #2]
    3c30:	cmp	r3, #32
    3c34:	addhi	r0, r1, #2
    3c38:	bls	3bf0 <flatcc_json_parser_array_start+0x5c>
    3c3c:	b	3c00 <flatcc_json_parser_array_start+0x6c>
    3c40:	mov	r3, #0
    3c44:	mov	r2, r4
    3c48:	ldr	lr, [sp, #12]
    3c4c:	add	r1, r0, #1
    3c50:	mov	r0, r5
    3c54:	ldrd	r4, [sp]
    3c58:	str	r3, [r6]
    3c5c:	ldr	r6, [sp, #8]
    3c60:	add	sp, sp, #16
    3c64:	b	1e18 <flatcc_json_parser_space>

00003c68 <flatcc_json_parser_symbolic_float>:
    3c68:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3c6c:	cmp	r1, r2
    3c70:	mov	r5, r2
    3c74:	strd	r6, [sp, #8]
    3c78:	strd	r8, [sp, #16]
    3c7c:	mov	r8, r0
    3c80:	strd	sl, [sp, #24]
    3c84:	mov	fp, r3
    3c88:	str	lr, [sp, #32]
    3c8c:	sub	sp, sp, #36	; 0x24
    3c90:	mov	lr, #0
    3c94:	ldr	r3, [sp, #72]	; 0x48
    3c98:	str	lr, [r3]
    3c9c:	beq	3df4 <flatcc_json_parser_symbolic_float+0x18c>
    3ca0:	ldrb	r3, [r1]
    3ca4:	cmp	r3, #34	; 0x22
    3ca8:	moveq	r2, #0
    3cac:	addeq	r3, r1, #1
    3cb0:	streq	r2, [r0, #12]
    3cb4:	beq	3e08 <flatcc_json_parser_symbolic_float+0x1a0>
    3cb8:	cmp	r3, #46	; 0x2e
    3cbc:	movne	r2, #1
    3cc0:	movne	r3, r1
    3cc4:	strne	r2, [r0, #12]
    3cc8:	beq	3dd0 <flatcc_json_parser_symbolic_float+0x168>
    3ccc:	mov	r2, #0
    3cd0:	add	sl, sp, #20
    3cd4:	add	r9, sp, #24
    3cd8:	str	r2, [sp, #8]
    3cdc:	mov	r7, fp
    3ce0:	mov	r6, r3
    3ce4:	ldr	r4, [fp]
    3ce8:	mov	r1, r3
    3cec:	b	3d08 <flatcc_json_parser_symbolic_float+0xa0>
    3cf0:	cmp	r6, r0
    3cf4:	mov	r6, r0
    3cf8:	bne	3d4c <flatcc_json_parser_symbolic_float+0xe4>
    3cfc:	ldr	r4, [r7, #4]!
    3d00:	cmp	r4, #0
    3d04:	beq	3db8 <flatcc_json_parser_symbolic_float+0x150>
    3d08:	add	r3, sp, #16
    3d0c:	mov	r2, r5
    3d10:	stm	sp, {r9, sl}
    3d14:	mov	r0, r8
    3d18:	blx	r4
    3d1c:	cmp	r5, r0
    3d20:	mov	r1, r0
    3d24:	bne	3cf0 <flatcc_json_parser_symbolic_float+0x88>
    3d28:	mov	r3, r0
    3d2c:	mov	r0, r3
    3d30:	add	sp, sp, #36	; 0x24
    3d34:	ldrd	r4, [sp]
    3d38:	ldrd	r6, [sp, #8]
    3d3c:	ldrd	r8, [sp, #16]
    3d40:	ldrd	sl, [sp, #24]
    3d44:	add	sp, sp, #32
    3d48:	pop	{pc}		; (ldr pc, [sp], #4)
    3d4c:	ldr	r2, [sp, #8]
    3d50:	mov	r3, r0
    3d54:	cmp	r2, #0
    3d58:	beq	3d68 <flatcc_json_parser_symbolic_float+0x100>
    3d5c:	ldr	r2, [r8, #12]
    3d60:	cmp	r2, #0
    3d64:	bne	3e4c <flatcc_json_parser_symbolic_float+0x1e4>
    3d68:	ldrd	r0, [sp, #24]
    3d6c:	str	r3, [sp, #12]
    3d70:	bl	0 <__aeabi_ul2f>
    3d74:	vmov	s14, r0
    3d78:	ldr	r2, [sp, #16]
    3d7c:	ldr	r3, [sp, #12]
    3d80:	cmp	r2, #0
    3d84:	ldr	r2, [sp, #72]	; 0x48
    3d88:	vnegne.f32	s14, s14
    3d8c:	vldr	s15, [r2]
    3d90:	ldr	r2, [sp, #8]
    3d94:	vadd.f32	s15, s15, s14
    3d98:	add	r2, r2, #1
    3d9c:	str	r2, [sp, #8]
    3da0:	ldr	r2, [sp, #20]
    3da4:	cmp	r2, #0
    3da8:	ldr	r2, [sp, #72]	; 0x48
    3dac:	vstr	s15, [r2]
    3db0:	bne	3cdc <flatcc_json_parser_symbolic_float+0x74>
    3db4:	b	3d2c <flatcc_json_parser_symbolic_float+0xc4>
    3db8:	mov	r3, #23
    3dbc:	mov	r2, r5
    3dc0:	mov	r0, r8
    3dc4:	bl	0 <flatcc_json_parser_set_error>
    3dc8:	mov	r3, r0
    3dcc:	b	3d2c <flatcc_json_parser_symbolic_float+0xc4>
    3dd0:	mov	r3, #5
    3dd4:	bl	0 <flatcc_json_parser_set_error>
    3dd8:	ldr	r2, [r8, #12]
    3ddc:	mov	r3, r0
    3de0:	cmp	r2, #0
    3de4:	beq	3e08 <flatcc_json_parser_symbolic_float+0x1a0>
    3de8:	cmp	r5, r3
    3dec:	bne	3ccc <flatcc_json_parser_symbolic_float+0x64>
    3df0:	b	3d2c <flatcc_json_parser_symbolic_float+0xc4>
    3df4:	ldr	r3, [r0, #12]
    3df8:	cmp	r3, #0
    3dfc:	movne	r3, r1
    3e00:	bne	3d2c <flatcc_json_parser_symbolic_float+0xc4>
    3e04:	mov	r3, r5
    3e08:	sub	r2, r5, r3
    3e0c:	cmp	r2, #1
    3e10:	ble	3e34 <flatcc_json_parser_symbolic_float+0x1cc>
    3e14:	ldrb	r2, [r3]
    3e18:	cmp	r2, #32
    3e1c:	bhi	3de8 <flatcc_json_parser_symbolic_float+0x180>
    3e20:	bne	3e34 <flatcc_json_parser_symbolic_float+0x1cc>
    3e24:	ldrb	r2, [r3, #1]
    3e28:	cmp	r2, #32
    3e2c:	addhi	r3, r3, #1
    3e30:	bhi	3de8 <flatcc_json_parser_symbolic_float+0x180>
    3e34:	mov	r1, r3
    3e38:	mov	r2, r5
    3e3c:	mov	r0, r8
    3e40:	bl	0 <flatcc_json_parser_space_ext>
    3e44:	mov	r3, r0
    3e48:	b	3de8 <flatcc_json_parser_symbolic_float+0x180>
    3e4c:	mov	r1, r3
    3e50:	mov	r2, r5
    3e54:	mov	r3, #14
    3e58:	mov	r0, r8
    3e5c:	bl	0 <flatcc_json_parser_set_error>
    3e60:	mov	r3, r0
    3e64:	b	3d2c <flatcc_json_parser_symbolic_float+0xc4>

00003e68 <flatcc_json_parser_symbolic_double>:
    3e68:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3e6c:	cmp	r1, r2
    3e70:	mov	r5, r2
    3e74:	strd	r6, [sp, #8]
    3e78:	mov	r6, #0
    3e7c:	mov	r7, #0
    3e80:	strd	r8, [sp, #16]
    3e84:	mov	r8, r0
    3e88:	strd	sl, [sp, #24]
    3e8c:	mov	fp, r3
    3e90:	str	lr, [sp, #32]
    3e94:	sub	sp, sp, #36	; 0x24
    3e98:	ldr	r3, [sp, #72]	; 0x48
    3e9c:	strd	r6, [r3]
    3ea0:	beq	3ff8 <flatcc_json_parser_symbolic_double+0x190>
    3ea4:	ldrb	r3, [r1]
    3ea8:	cmp	r3, #34	; 0x22
    3eac:	moveq	r2, #0
    3eb0:	addeq	r3, r1, #1
    3eb4:	streq	r2, [r0, #12]
    3eb8:	beq	400c <flatcc_json_parser_symbolic_double+0x1a4>
    3ebc:	cmp	r3, #46	; 0x2e
    3ec0:	movne	r2, #1
    3ec4:	movne	r3, r1
    3ec8:	strne	r2, [r0, #12]
    3ecc:	beq	3fd4 <flatcc_json_parser_symbolic_double+0x16c>
    3ed0:	mov	r2, #0
    3ed4:	add	sl, sp, #20
    3ed8:	add	r9, sp, #24
    3edc:	str	r2, [sp, #8]
    3ee0:	mov	r7, fp
    3ee4:	mov	r6, r3
    3ee8:	ldr	r4, [fp]
    3eec:	mov	r1, r3
    3ef0:	b	3f0c <flatcc_json_parser_symbolic_double+0xa4>
    3ef4:	cmp	r6, r0
    3ef8:	mov	r6, r0
    3efc:	bne	3f50 <flatcc_json_parser_symbolic_double+0xe8>
    3f00:	ldr	r4, [r7, #4]!
    3f04:	cmp	r4, #0
    3f08:	beq	3fbc <flatcc_json_parser_symbolic_double+0x154>
    3f0c:	add	r3, sp, #16
    3f10:	mov	r2, r5
    3f14:	stm	sp, {r9, sl}
    3f18:	mov	r0, r8
    3f1c:	blx	r4
    3f20:	cmp	r5, r0
    3f24:	mov	r1, r0
    3f28:	bne	3ef4 <flatcc_json_parser_symbolic_double+0x8c>
    3f2c:	mov	r3, r0
    3f30:	mov	r0, r3
    3f34:	add	sp, sp, #36	; 0x24
    3f38:	ldrd	r4, [sp]
    3f3c:	ldrd	r6, [sp, #8]
    3f40:	ldrd	r8, [sp, #16]
    3f44:	ldrd	sl, [sp, #24]
    3f48:	add	sp, sp, #32
    3f4c:	pop	{pc}		; (ldr pc, [sp], #4)
    3f50:	ldr	r2, [sp, #8]
    3f54:	mov	r3, r0
    3f58:	cmp	r2, #0
    3f5c:	beq	3f6c <flatcc_json_parser_symbolic_double+0x104>
    3f60:	ldr	r2, [r8, #12]
    3f64:	cmp	r2, #0
    3f68:	bne	4050 <flatcc_json_parser_symbolic_double+0x1e8>
    3f6c:	ldrd	r0, [sp, #24]
    3f70:	str	r3, [sp, #12]
    3f74:	bl	0 <__aeabi_ul2d>
    3f78:	vmov	d6, r0, r1
    3f7c:	ldr	r2, [sp, #16]
    3f80:	ldr	r3, [sp, #12]
    3f84:	cmp	r2, #0
    3f88:	ldr	r2, [sp, #72]	; 0x48
    3f8c:	vnegne.f64	d6, d6
    3f90:	vldr	d7, [r2]
    3f94:	ldr	r2, [sp, #8]
    3f98:	vadd.f64	d7, d7, d6
    3f9c:	add	r2, r2, #1
    3fa0:	str	r2, [sp, #8]
    3fa4:	ldr	r2, [sp, #20]
    3fa8:	cmp	r2, #0
    3fac:	ldr	r2, [sp, #72]	; 0x48
    3fb0:	vstr	d7, [r2]
    3fb4:	bne	3ee0 <flatcc_json_parser_symbolic_double+0x78>
    3fb8:	b	3f30 <flatcc_json_parser_symbolic_double+0xc8>
    3fbc:	mov	r3, #23
    3fc0:	mov	r2, r5
    3fc4:	mov	r0, r8
    3fc8:	bl	0 <flatcc_json_parser_set_error>
    3fcc:	mov	r3, r0
    3fd0:	b	3f30 <flatcc_json_parser_symbolic_double+0xc8>
    3fd4:	mov	r3, #5
    3fd8:	bl	0 <flatcc_json_parser_set_error>
    3fdc:	ldr	r2, [r8, #12]
    3fe0:	mov	r3, r0
    3fe4:	cmp	r2, #0
    3fe8:	beq	400c <flatcc_json_parser_symbolic_double+0x1a4>
    3fec:	cmp	r5, r3
    3ff0:	bne	3ed0 <flatcc_json_parser_symbolic_double+0x68>
    3ff4:	b	3f30 <flatcc_json_parser_symbolic_double+0xc8>
    3ff8:	ldr	r3, [r0, #12]
    3ffc:	cmp	r3, #0
    4000:	movne	r3, r1
    4004:	bne	3f30 <flatcc_json_parser_symbolic_double+0xc8>
    4008:	mov	r3, r5
    400c:	sub	r2, r5, r3
    4010:	cmp	r2, #1
    4014:	ble	4038 <flatcc_json_parser_symbolic_double+0x1d0>
    4018:	ldrb	r2, [r3]
    401c:	cmp	r2, #32
    4020:	bhi	3fec <flatcc_json_parser_symbolic_double+0x184>
    4024:	bne	4038 <flatcc_json_parser_symbolic_double+0x1d0>
    4028:	ldrb	r2, [r3, #1]
    402c:	cmp	r2, #32
    4030:	addhi	r3, r3, #1
    4034:	bhi	3fec <flatcc_json_parser_symbolic_double+0x184>
    4038:	mov	r1, r3
    403c:	mov	r2, r5
    4040:	mov	r0, r8
    4044:	bl	0 <flatcc_json_parser_space_ext>
    4048:	mov	r3, r0
    404c:	b	3fec <flatcc_json_parser_symbolic_double+0x184>
    4050:	mov	r1, r3
    4054:	mov	r2, r5
    4058:	mov	r3, #14
    405c:	mov	r0, r8
    4060:	bl	0 <flatcc_json_parser_set_error>
    4064:	mov	r3, r0
    4068:	b	3f30 <flatcc_json_parser_symbolic_double+0xc8>

0000406c <flatcc_json_parser_symbolic_bool>:
    406c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4070:	mov	ip, #0
    4074:	cmp	r1, r2
    4078:	strd	r6, [sp, #8]
    407c:	mov	r4, r1
    4080:	mov	r6, r2
    4084:	strd	r8, [sp, #16]
    4088:	mov	r9, r0
    408c:	strd	sl, [sp, #24]
    4090:	str	lr, [sp, #32]
    4094:	sub	sp, sp, #44	; 0x2c
    4098:	str	r3, [sp, #20]
    409c:	ldr	r3, [sp, #80]	; 0x50
    40a0:	strb	ip, [r3]
    40a4:	beq	41fc <flatcc_json_parser_symbolic_bool+0x190>
    40a8:	ldrb	r3, [r1]
    40ac:	cmp	r3, #34	; 0x22
    40b0:	addeq	r4, r1, #1
    40b4:	streq	ip, [r0, #12]
    40b8:	beq	420c <flatcc_json_parser_symbolic_bool+0x1a0>
    40bc:	cmp	r3, #46	; 0x2e
    40c0:	movne	r3, #1
    40c4:	strne	r3, [r0, #12]
    40c8:	beq	41d8 <flatcc_json_parser_symbolic_bool+0x16c>
    40cc:	mov	r3, #0
    40d0:	add	fp, sp, #28
    40d4:	add	sl, sp, #32
    40d8:	str	r3, [sp, #12]
    40dc:	str	r3, [sp, #16]
    40e0:	ldr	r8, [sp, #20]
    40e4:	mov	r7, r4
    40e8:	mov	r1, r4
    40ec:	ldr	r5, [r8]
    40f0:	b	410c <flatcc_json_parser_symbolic_bool+0xa0>
    40f4:	cmp	r7, r0
    40f8:	mov	r7, r0
    40fc:	bne	4150 <flatcc_json_parser_symbolic_bool+0xe4>
    4100:	ldr	r5, [r8, #4]!
    4104:	cmp	r5, #0
    4108:	beq	41c0 <flatcc_json_parser_symbolic_bool+0x154>
    410c:	add	r3, sp, #24
    4110:	mov	r2, r6
    4114:	strd	sl, [sp]
    4118:	mov	r0, r9
    411c:	blx	r5
    4120:	cmp	r6, r0
    4124:	mov	r1, r0
    4128:	bne	40f4 <flatcc_json_parser_symbolic_bool+0x88>
    412c:	mov	r4, r0
    4130:	mov	r0, r4
    4134:	add	sp, sp, #44	; 0x2c
    4138:	ldrd	r4, [sp]
    413c:	ldrd	r6, [sp, #8]
    4140:	ldrd	r8, [sp, #16]
    4144:	ldrd	sl, [sp, #24]
    4148:	add	sp, sp, #32
    414c:	pop	{pc}		; (ldr pc, [sp], #4)
    4150:	ldr	r3, [sp, #12]
    4154:	mov	r4, r0
    4158:	cmp	r3, #0
    415c:	beq	416c <flatcc_json_parser_symbolic_bool+0x100>
    4160:	ldr	r3, [r9, #12]
    4164:	cmp	r3, #0
    4168:	bne	4274 <flatcc_json_parser_symbolic_bool+0x208>
    416c:	ldr	r3, [sp, #24]
    4170:	cmp	r3, #0
    4174:	bne	4250 <flatcc_json_parser_symbolic_bool+0x1e4>
    4178:	ldrd	r2, [sp, #32]
    417c:	orrs	r3, r2, r3
    4180:	movne	r3, #1
    4184:	moveq	r3, #0
    4188:	str	r3, [sp, #16]
    418c:	ldr	r2, [sp, #12]
    4190:	ldr	r1, [sp, #16]
    4194:	ldr	r3, [sp, #80]	; 0x50
    4198:	add	r2, r2, #1
    419c:	str	r2, [sp, #12]
    41a0:	ldr	r2, [sp, #28]
    41a4:	ldrb	r3, [r3]
    41a8:	cmp	r2, #0
    41ac:	ldr	r2, [sp, #80]	; 0x50
    41b0:	add	r3, r1, r3
    41b4:	strb	r3, [r2]
    41b8:	bne	40e0 <flatcc_json_parser_symbolic_bool+0x74>
    41bc:	b	4130 <flatcc_json_parser_symbolic_bool+0xc4>
    41c0:	mov	r2, r6
    41c4:	mov	r0, r9
    41c8:	mov	r3, #23
    41cc:	bl	0 <flatcc_json_parser_set_error>
    41d0:	mov	r4, r0
    41d4:	b	4130 <flatcc_json_parser_symbolic_bool+0xc4>
    41d8:	mov	r3, #5
    41dc:	bl	0 <flatcc_json_parser_set_error>
    41e0:	ldr	r3, [r9, #12]
    41e4:	mov	r4, r0
    41e8:	cmp	r3, #0
    41ec:	beq	420c <flatcc_json_parser_symbolic_bool+0x1a0>
    41f0:	cmp	r6, r4
    41f4:	bne	40cc <flatcc_json_parser_symbolic_bool+0x60>
    41f8:	b	4130 <flatcc_json_parser_symbolic_bool+0xc4>
    41fc:	ldr	r3, [r0, #12]
    4200:	cmp	r3, #0
    4204:	bne	4130 <flatcc_json_parser_symbolic_bool+0xc4>
    4208:	mov	r4, r6
    420c:	sub	r3, r6, r4
    4210:	cmp	r3, #1
    4214:	ble	4238 <flatcc_json_parser_symbolic_bool+0x1cc>
    4218:	ldrb	r3, [r4]
    421c:	cmp	r3, #32
    4220:	bhi	41f0 <flatcc_json_parser_symbolic_bool+0x184>
    4224:	bne	4238 <flatcc_json_parser_symbolic_bool+0x1cc>
    4228:	ldrb	r3, [r4, #1]
    422c:	cmp	r3, #32
    4230:	addhi	r4, r4, #1
    4234:	bhi	41f0 <flatcc_json_parser_symbolic_bool+0x184>
    4238:	mov	r1, r4
    423c:	mov	r2, r6
    4240:	mov	r0, r9
    4244:	bl	0 <flatcc_json_parser_space_ext>
    4248:	mov	r4, r0
    424c:	b	41f0 <flatcc_json_parser_symbolic_bool+0x184>
    4250:	mov	r3, #8
    4254:	mov	r2, r6
    4258:	mov	r1, r4
    425c:	mov	r0, r9
    4260:	bl	0 <flatcc_json_parser_set_error>
    4264:	cmp	r6, r0
    4268:	bne	418c <flatcc_json_parser_symbolic_bool+0x120>
    426c:	mov	r4, r6
    4270:	b	4130 <flatcc_json_parser_symbolic_bool+0xc4>
    4274:	mov	r1, r4
    4278:	mov	r2, r6
    427c:	mov	r0, r9
    4280:	mov	r3, #14
    4284:	bl	0 <flatcc_json_parser_set_error>
    4288:	mov	r4, r0
    428c:	b	4130 <flatcc_json_parser_symbolic_bool+0xc4>

00004290 <flatcc_json_parser_symbolic_uint64>:
    4290:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4294:	cmp	r1, r2
    4298:	mov	r4, r1
    429c:	strd	r6, [sp, #8]
    42a0:	mov	r6, r2
    42a4:	strd	r8, [sp, #16]
    42a8:	mov	r9, r0
    42ac:	strd	sl, [sp, #24]
    42b0:	mov	sl, #0
    42b4:	mov	fp, #0
    42b8:	str	lr, [sp, #32]
    42bc:	sub	sp, sp, #44	; 0x2c
    42c0:	str	r3, [sp, #20]
    42c4:	ldr	r3, [sp, #80]	; 0x50
    42c8:	strd	sl, [r3]
    42cc:	beq	443c <flatcc_json_parser_symbolic_uint64+0x1ac>
    42d0:	ldrb	r3, [r1]
    42d4:	cmp	r3, #34	; 0x22
    42d8:	moveq	r3, #0
    42dc:	addeq	r4, r1, #1
    42e0:	streq	r3, [r0, #12]
    42e4:	beq	444c <flatcc_json_parser_symbolic_uint64+0x1bc>
    42e8:	cmp	r3, #46	; 0x2e
    42ec:	movne	r3, #1
    42f0:	strne	r3, [r0, #12]
    42f4:	beq	4418 <flatcc_json_parser_symbolic_uint64+0x188>
    42f8:	mov	r3, #0
    42fc:	add	fp, sp, #28
    4300:	add	sl, sp, #32
    4304:	str	r3, [sp, #8]
    4308:	str	r3, [sp, #12]
    430c:	str	r3, [sp, #16]
    4310:	ldr	r8, [sp, #20]
    4314:	mov	r7, r4
    4318:	mov	r1, r4
    431c:	ldr	r5, [r8]
    4320:	b	433c <flatcc_json_parser_symbolic_uint64+0xac>
    4324:	cmp	r7, r0
    4328:	mov	r7, r0
    432c:	bne	4380 <flatcc_json_parser_symbolic_uint64+0xf0>
    4330:	ldr	r5, [r8, #4]!
    4334:	cmp	r5, #0
    4338:	beq	4400 <flatcc_json_parser_symbolic_uint64+0x170>
    433c:	add	r3, sp, #24
    4340:	mov	r2, r6
    4344:	strd	sl, [sp]
    4348:	mov	r0, r9
    434c:	blx	r5
    4350:	cmp	r6, r0
    4354:	mov	r1, r0
    4358:	bne	4324 <flatcc_json_parser_symbolic_uint64+0x94>
    435c:	mov	r4, r0
    4360:	mov	r0, r4
    4364:	add	sp, sp, #44	; 0x2c
    4368:	ldrd	r4, [sp]
    436c:	ldrd	r6, [sp, #8]
    4370:	ldrd	r8, [sp, #16]
    4374:	ldrd	sl, [sp, #24]
    4378:	add	sp, sp, #32
    437c:	pop	{pc}		; (ldr pc, [sp], #4)
    4380:	ldr	r3, [sp, #8]
    4384:	mov	r4, r0
    4388:	cmp	r3, #0
    438c:	beq	439c <flatcc_json_parser_symbolic_uint64+0x10c>
    4390:	ldr	r3, [r9, #12]
    4394:	cmp	r3, #0
    4398:	bne	44b4 <flatcc_json_parser_symbolic_uint64+0x224>
    439c:	ldr	r3, [sp, #24]
    43a0:	cmp	r3, #0
    43a4:	bne	4490 <flatcc_json_parser_symbolic_uint64+0x200>
    43a8:	ldr	r3, [sp, #32]
    43ac:	str	r3, [sp, #12]
    43b0:	ldr	r3, [sp, #36]	; 0x24
    43b4:	str	r3, [sp, #16]
    43b8:	ldr	r2, [sp, #8]
    43bc:	ldr	r0, [sp, #12]
    43c0:	ldr	r3, [sp, #80]	; 0x50
    43c4:	add	r2, r2, #1
    43c8:	ldr	r1, [sp, #28]
    43cc:	str	r2, [sp, #8]
    43d0:	ldr	r2, [sp, #80]	; 0x50
    43d4:	ldr	r3, [r3]
    43d8:	ldr	r2, [r2, #4]
    43dc:	adds	r3, r3, r0
    43e0:	ldr	r0, [sp, #16]
    43e4:	adc	r2, r2, r0
    43e8:	ldr	r0, [sp, #80]	; 0x50
    43ec:	cmp	r1, #0
    43f0:	str	r3, [r0]
    43f4:	str	r2, [r0, #4]
    43f8:	bne	4310 <flatcc_json_parser_symbolic_uint64+0x80>
    43fc:	b	4360 <flatcc_json_parser_symbolic_uint64+0xd0>
    4400:	mov	r2, r6
    4404:	mov	r0, r9
    4408:	mov	r3, #23
    440c:	bl	0 <flatcc_json_parser_set_error>
    4410:	mov	r4, r0
    4414:	b	4360 <flatcc_json_parser_symbolic_uint64+0xd0>
    4418:	mov	r3, #5
    441c:	bl	0 <flatcc_json_parser_set_error>
    4420:	ldr	r3, [r9, #12]
    4424:	mov	r4, r0
    4428:	cmp	r3, #0
    442c:	beq	444c <flatcc_json_parser_symbolic_uint64+0x1bc>
    4430:	cmp	r6, r4
    4434:	bne	42f8 <flatcc_json_parser_symbolic_uint64+0x68>
    4438:	b	4360 <flatcc_json_parser_symbolic_uint64+0xd0>
    443c:	ldr	r3, [r0, #12]
    4440:	cmp	r3, #0
    4444:	bne	4360 <flatcc_json_parser_symbolic_uint64+0xd0>
    4448:	mov	r4, r6
    444c:	sub	r3, r6, r4
    4450:	cmp	r3, #1
    4454:	ble	4478 <flatcc_json_parser_symbolic_uint64+0x1e8>
    4458:	ldrb	r3, [r4]
    445c:	cmp	r3, #32
    4460:	bhi	4430 <flatcc_json_parser_symbolic_uint64+0x1a0>
    4464:	bne	4478 <flatcc_json_parser_symbolic_uint64+0x1e8>
    4468:	ldrb	r3, [r4, #1]
    446c:	cmp	r3, #32
    4470:	addhi	r4, r4, #1
    4474:	bhi	4430 <flatcc_json_parser_symbolic_uint64+0x1a0>
    4478:	mov	r1, r4
    447c:	mov	r2, r6
    4480:	mov	r0, r9
    4484:	bl	0 <flatcc_json_parser_space_ext>
    4488:	mov	r4, r0
    448c:	b	4430 <flatcc_json_parser_symbolic_uint64+0x1a0>
    4490:	mov	r3, #8
    4494:	mov	r2, r6
    4498:	mov	r1, r4
    449c:	mov	r0, r9
    44a0:	bl	0 <flatcc_json_parser_set_error>
    44a4:	cmp	r6, r0
    44a8:	bne	43b8 <flatcc_json_parser_symbolic_uint64+0x128>
    44ac:	mov	r4, r6
    44b0:	b	4360 <flatcc_json_parser_symbolic_uint64+0xd0>
    44b4:	mov	r1, r4
    44b8:	mov	r2, r6
    44bc:	mov	r0, r9
    44c0:	mov	r3, #14
    44c4:	bl	0 <flatcc_json_parser_set_error>
    44c8:	mov	r4, r0
    44cc:	b	4360 <flatcc_json_parser_symbolic_uint64+0xd0>

000044d0 <flatcc_json_parser_symbolic_int32>:
    44d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    44d4:	mov	ip, #0
    44d8:	cmp	r1, r2
    44dc:	strd	r6, [sp, #8]
    44e0:	mov	r4, r1
    44e4:	mov	r6, r2
    44e8:	strd	r8, [sp, #16]
    44ec:	mov	r9, r0
    44f0:	strd	sl, [sp, #24]
    44f4:	str	lr, [sp, #32]
    44f8:	sub	sp, sp, #44	; 0x2c
    44fc:	str	r3, [sp, #20]
    4500:	ldr	r3, [sp, #80]	; 0x50
    4504:	str	ip, [r3]
    4508:	beq	46a0 <flatcc_json_parser_symbolic_int32+0x1d0>
    450c:	ldrb	r3, [r1]
    4510:	cmp	r3, #34	; 0x22
    4514:	addeq	r4, r1, #1
    4518:	streq	ip, [r0, #12]
    451c:	beq	46b0 <flatcc_json_parser_symbolic_int32+0x1e0>
    4520:	cmp	r3, #46	; 0x2e
    4524:	movne	r3, #1
    4528:	strne	r3, [r0, #12]
    452c:	beq	467c <flatcc_json_parser_symbolic_int32+0x1ac>
    4530:	mov	r3, #0
    4534:	add	fp, sp, #28
    4538:	add	sl, sp, #32
    453c:	str	r3, [sp, #12]
    4540:	str	r3, [sp, #16]
    4544:	ldr	r8, [sp, #20]
    4548:	mov	r7, r4
    454c:	mov	r1, r4
    4550:	ldr	r5, [r8]
    4554:	b	4570 <flatcc_json_parser_symbolic_int32+0xa0>
    4558:	cmp	r7, r0
    455c:	mov	r7, r0
    4560:	bne	45b4 <flatcc_json_parser_symbolic_int32+0xe4>
    4564:	ldr	r5, [r8, #4]!
    4568:	cmp	r5, #0
    456c:	beq	4628 <flatcc_json_parser_symbolic_int32+0x158>
    4570:	add	r3, sp, #24
    4574:	mov	r2, r6
    4578:	strd	sl, [sp]
    457c:	mov	r0, r9
    4580:	blx	r5
    4584:	cmp	r6, r0
    4588:	mov	r1, r0
    458c:	bne	4558 <flatcc_json_parser_symbolic_int32+0x88>
    4590:	mov	r4, r0
    4594:	mov	r0, r4
    4598:	add	sp, sp, #44	; 0x2c
    459c:	ldrd	r4, [sp]
    45a0:	ldrd	r6, [sp, #8]
    45a4:	ldrd	r8, [sp, #16]
    45a8:	ldrd	sl, [sp, #24]
    45ac:	add	sp, sp, #32
    45b0:	pop	{pc}		; (ldr pc, [sp], #4)
    45b4:	ldr	r3, [sp, #12]
    45b8:	mov	r4, r0
    45bc:	cmp	r3, #0
    45c0:	beq	45d0 <flatcc_json_parser_symbolic_int32+0x100>
    45c4:	ldr	r3, [r9, #12]
    45c8:	cmp	r3, #0
    45cc:	bne	470c <flatcc_json_parser_symbolic_int32+0x23c>
    45d0:	ldr	r1, [sp, #24]
    45d4:	ldrd	r2, [sp, #32]
    45d8:	cmp	r1, #0
    45dc:	beq	4640 <flatcc_json_parser_symbolic_int32+0x170>
    45e0:	cmp	r3, #0
    45e4:	cmpeq	r2, #-2147483648	; 0x80000000
    45e8:	rsbls	r3, r2, #0
    45ec:	strls	r3, [sp, #16]
    45f0:	bhi	46f4 <flatcc_json_parser_symbolic_int32+0x224>
    45f4:	ldr	r2, [sp, #12]
    45f8:	ldr	r1, [sp, #16]
    45fc:	ldr	r3, [sp, #80]	; 0x50
    4600:	add	r2, r2, #1
    4604:	str	r2, [sp, #12]
    4608:	ldr	r2, [sp, #28]
    460c:	ldr	r3, [r3]
    4610:	cmp	r2, #0
    4614:	ldr	r2, [sp, #80]	; 0x50
    4618:	add	r3, r3, r1
    461c:	str	r3, [r2]
    4620:	bne	4544 <flatcc_json_parser_symbolic_int32+0x74>
    4624:	b	4594 <flatcc_json_parser_symbolic_int32+0xc4>
    4628:	mov	r2, r6
    462c:	mov	r0, r9
    4630:	mov	r3, #23
    4634:	bl	0 <flatcc_json_parser_set_error>
    4638:	mov	r4, r0
    463c:	b	4594 <flatcc_json_parser_symbolic_int32+0xc4>
    4640:	mov	r1, #0
    4644:	mvn	r0, #-2147483648	; 0x80000000
    4648:	cmp	r3, r1
    464c:	cmpeq	r2, r0
    4650:	strls	r2, [sp, #16]
    4654:	bls	45f4 <flatcc_json_parser_symbolic_int32+0x124>
    4658:	mov	r3, #7
    465c:	mov	r2, r6
    4660:	mov	r1, r4
    4664:	mov	r0, r9
    4668:	bl	0 <flatcc_json_parser_set_error>
    466c:	cmp	r6, r0
    4670:	bne	45f4 <flatcc_json_parser_symbolic_int32+0x124>
    4674:	mov	r4, r6
    4678:	b	4594 <flatcc_json_parser_symbolic_int32+0xc4>
    467c:	mov	r3, #5
    4680:	bl	0 <flatcc_json_parser_set_error>
    4684:	ldr	r3, [r9, #12]
    4688:	mov	r4, r0
    468c:	cmp	r3, #0
    4690:	beq	46b0 <flatcc_json_parser_symbolic_int32+0x1e0>
    4694:	cmp	r6, r4
    4698:	bne	4530 <flatcc_json_parser_symbolic_int32+0x60>
    469c:	b	4594 <flatcc_json_parser_symbolic_int32+0xc4>
    46a0:	ldr	r3, [r0, #12]
    46a4:	cmp	r3, #0
    46a8:	bne	4594 <flatcc_json_parser_symbolic_int32+0xc4>
    46ac:	mov	r4, r6
    46b0:	sub	r3, r6, r4
    46b4:	cmp	r3, #1
    46b8:	ble	46dc <flatcc_json_parser_symbolic_int32+0x20c>
    46bc:	ldrb	r3, [r4]
    46c0:	cmp	r3, #32
    46c4:	bhi	4694 <flatcc_json_parser_symbolic_int32+0x1c4>
    46c8:	bne	46dc <flatcc_json_parser_symbolic_int32+0x20c>
    46cc:	ldrb	r3, [r4, #1]
    46d0:	cmp	r3, #32
    46d4:	addhi	r4, r4, #1
    46d8:	bhi	4694 <flatcc_json_parser_symbolic_int32+0x1c4>
    46dc:	mov	r1, r4
    46e0:	mov	r2, r6
    46e4:	mov	r0, r9
    46e8:	bl	0 <flatcc_json_parser_space_ext>
    46ec:	mov	r4, r0
    46f0:	b	4694 <flatcc_json_parser_symbolic_int32+0x1c4>
    46f4:	mov	r3, #8
    46f8:	mov	r2, r6
    46fc:	mov	r1, r4
    4700:	mov	r0, r9
    4704:	bl	0 <flatcc_json_parser_set_error>
    4708:	b	466c <flatcc_json_parser_symbolic_int32+0x19c>
    470c:	mov	r1, r4
    4710:	mov	r2, r6
    4714:	mov	r0, r9
    4718:	mov	r3, #14
    471c:	bl	0 <flatcc_json_parser_set_error>
    4720:	mov	r4, r0
    4724:	b	4594 <flatcc_json_parser_symbolic_int32+0xc4>

00004728 <flatcc_json_parser_symbolic_uint8>:
    4728:	strd	r4, [sp, #-36]!	; 0xffffffdc
    472c:	mov	ip, #0
    4730:	cmp	r1, r2
    4734:	strd	r6, [sp, #8]
    4738:	mov	r4, r1
    473c:	mov	r6, r2
    4740:	strd	r8, [sp, #16]
    4744:	mov	r9, r0
    4748:	strd	sl, [sp, #24]
    474c:	str	lr, [sp, #32]
    4750:	sub	sp, sp, #44	; 0x2c
    4754:	str	r3, [sp, #16]
    4758:	ldr	r3, [sp, #80]	; 0x50
    475c:	strb	ip, [r3]
    4760:	beq	48bc <flatcc_json_parser_symbolic_uint8+0x194>
    4764:	ldrb	r3, [r1]
    4768:	cmp	r3, #34	; 0x22
    476c:	addeq	r4, r1, #1
    4770:	streq	ip, [r0, #12]
    4774:	beq	48cc <flatcc_json_parser_symbolic_uint8+0x1a4>
    4778:	cmp	r3, #46	; 0x2e
    477c:	movne	r3, #1
    4780:	strne	r3, [r0, #12]
    4784:	beq	4898 <flatcc_json_parser_symbolic_uint8+0x170>
    4788:	mov	r3, #0
    478c:	add	fp, sp, #28
    4790:	add	sl, sp, #32
    4794:	str	r3, [sp, #12]
    4798:	str	r3, [sp, #20]
    479c:	ldr	r8, [sp, #16]
    47a0:	mov	r7, r4
    47a4:	mov	r1, r4
    47a8:	ldr	r5, [r8]
    47ac:	b	47c8 <flatcc_json_parser_symbolic_uint8+0xa0>
    47b0:	cmp	r7, r0
    47b4:	mov	r7, r0
    47b8:	bne	480c <flatcc_json_parser_symbolic_uint8+0xe4>
    47bc:	ldr	r5, [r8, #4]!
    47c0:	cmp	r5, #0
    47c4:	beq	4880 <flatcc_json_parser_symbolic_uint8+0x158>
    47c8:	add	r3, sp, #24
    47cc:	mov	r2, r6
    47d0:	strd	sl, [sp]
    47d4:	mov	r0, r9
    47d8:	blx	r5
    47dc:	cmp	r6, r0
    47e0:	mov	r1, r0
    47e4:	bne	47b0 <flatcc_json_parser_symbolic_uint8+0x88>
    47e8:	mov	r4, r0
    47ec:	mov	r0, r4
    47f0:	add	sp, sp, #44	; 0x2c
    47f4:	ldrd	r4, [sp]
    47f8:	ldrd	r6, [sp, #8]
    47fc:	ldrd	r8, [sp, #16]
    4800:	ldrd	sl, [sp, #24]
    4804:	add	sp, sp, #32
    4808:	pop	{pc}		; (ldr pc, [sp], #4)
    480c:	ldr	r3, [sp, #12]
    4810:	mov	r4, r0
    4814:	cmp	r3, #0
    4818:	beq	4828 <flatcc_json_parser_symbolic_uint8+0x100>
    481c:	ldr	r3, [r9, #12]
    4820:	cmp	r3, #0
    4824:	bne	494c <flatcc_json_parser_symbolic_uint8+0x224>
    4828:	ldr	r3, [sp, #24]
    482c:	cmp	r3, #0
    4830:	bne	4910 <flatcc_json_parser_symbolic_uint8+0x1e8>
    4834:	ldrd	r2, [sp, #32]
    4838:	cmp	r3, #0
    483c:	cmpeq	r2, #255	; 0xff
    4840:	uxtbls	r3, r2
    4844:	strls	r3, [sp, #20]
    4848:	bhi	4934 <flatcc_json_parser_symbolic_uint8+0x20c>
    484c:	ldr	r2, [sp, #12]
    4850:	ldr	r1, [sp, #20]
    4854:	ldr	r3, [sp, #80]	; 0x50
    4858:	add	r2, r2, #1
    485c:	str	r2, [sp, #12]
    4860:	ldr	r2, [sp, #28]
    4864:	ldrb	r3, [r3]
    4868:	cmp	r2, #0
    486c:	ldr	r2, [sp, #80]	; 0x50
    4870:	add	r3, r1, r3
    4874:	strb	r3, [r2]
    4878:	bne	479c <flatcc_json_parser_symbolic_uint8+0x74>
    487c:	b	47ec <flatcc_json_parser_symbolic_uint8+0xc4>
    4880:	mov	r2, r6
    4884:	mov	r0, r9
    4888:	mov	r3, #23
    488c:	bl	0 <flatcc_json_parser_set_error>
    4890:	mov	r4, r0
    4894:	b	47ec <flatcc_json_parser_symbolic_uint8+0xc4>
    4898:	mov	r3, #5
    489c:	bl	0 <flatcc_json_parser_set_error>
    48a0:	ldr	r3, [r9, #12]
    48a4:	mov	r4, r0
    48a8:	cmp	r3, #0
    48ac:	beq	48cc <flatcc_json_parser_symbolic_uint8+0x1a4>
    48b0:	cmp	r6, r4
    48b4:	bne	4788 <flatcc_json_parser_symbolic_uint8+0x60>
    48b8:	b	47ec <flatcc_json_parser_symbolic_uint8+0xc4>
    48bc:	ldr	r3, [r0, #12]
    48c0:	cmp	r3, #0
    48c4:	bne	47ec <flatcc_json_parser_symbolic_uint8+0xc4>
    48c8:	mov	r4, r6
    48cc:	sub	r3, r6, r4
    48d0:	cmp	r3, #1
    48d4:	ble	48f8 <flatcc_json_parser_symbolic_uint8+0x1d0>
    48d8:	ldrb	r3, [r4]
    48dc:	cmp	r3, #32
    48e0:	bhi	48b0 <flatcc_json_parser_symbolic_uint8+0x188>
    48e4:	bne	48f8 <flatcc_json_parser_symbolic_uint8+0x1d0>
    48e8:	ldrb	r3, [r4, #1]
    48ec:	cmp	r3, #32
    48f0:	addhi	r4, r4, #1
    48f4:	bhi	48b0 <flatcc_json_parser_symbolic_uint8+0x188>
    48f8:	mov	r1, r4
    48fc:	mov	r2, r6
    4900:	mov	r0, r9
    4904:	bl	0 <flatcc_json_parser_space_ext>
    4908:	mov	r4, r0
    490c:	b	48b0 <flatcc_json_parser_symbolic_uint8+0x188>
    4910:	mov	r3, #8
    4914:	mov	r2, r6
    4918:	mov	r1, r4
    491c:	mov	r0, r9
    4920:	bl	0 <flatcc_json_parser_set_error>
    4924:	cmp	r6, r0
    4928:	bne	484c <flatcc_json_parser_symbolic_uint8+0x124>
    492c:	mov	r4, r6
    4930:	b	47ec <flatcc_json_parser_symbolic_uint8+0xc4>
    4934:	mov	r3, #7
    4938:	mov	r2, r6
    493c:	mov	r1, r4
    4940:	mov	r0, r9
    4944:	bl	0 <flatcc_json_parser_set_error>
    4948:	b	4924 <flatcc_json_parser_symbolic_uint8+0x1fc>
    494c:	mov	r1, r4
    4950:	mov	r2, r6
    4954:	mov	r0, r9
    4958:	mov	r3, #14
    495c:	bl	0 <flatcc_json_parser_set_error>
    4960:	mov	r4, r0
    4964:	b	47ec <flatcc_json_parser_symbolic_uint8+0xc4>

00004968 <flatcc_json_parser_symbolic_uint16>:
    4968:	strd	r4, [sp, #-36]!	; 0xffffffdc
    496c:	mov	ip, #0
    4970:	cmp	r1, r2
    4974:	strd	r6, [sp, #8]
    4978:	mov	r4, r1
    497c:	mov	r6, r2
    4980:	strd	r8, [sp, #16]
    4984:	mov	r9, r0
    4988:	strd	sl, [sp, #24]
    498c:	str	lr, [sp, #32]
    4990:	sub	sp, sp, #44	; 0x2c
    4994:	str	r3, [sp, #16]
    4998:	ldr	r3, [sp, #80]	; 0x50
    499c:	strh	ip, [r3]
    49a0:	beq	4b04 <flatcc_json_parser_symbolic_uint16+0x19c>
    49a4:	ldrb	r3, [r1]
    49a8:	cmp	r3, #34	; 0x22
    49ac:	addeq	r4, r1, #1
    49b0:	streq	ip, [r0, #12]
    49b4:	beq	4b14 <flatcc_json_parser_symbolic_uint16+0x1ac>
    49b8:	cmp	r3, #46	; 0x2e
    49bc:	movne	r3, #1
    49c0:	strne	r3, [r0, #12]
    49c4:	beq	4ae0 <flatcc_json_parser_symbolic_uint16+0x178>
    49c8:	mov	r3, #0
    49cc:	add	fp, sp, #28
    49d0:	add	sl, sp, #32
    49d4:	str	r3, [sp, #12]
    49d8:	str	r3, [sp, #20]
    49dc:	ldr	r8, [sp, #16]
    49e0:	mov	r7, r4
    49e4:	mov	r1, r4
    49e8:	ldr	r5, [r8]
    49ec:	b	4a08 <flatcc_json_parser_symbolic_uint16+0xa0>
    49f0:	cmp	r7, r0
    49f4:	mov	r7, r0
    49f8:	bne	4a4c <flatcc_json_parser_symbolic_uint16+0xe4>
    49fc:	ldr	r5, [r8, #4]!
    4a00:	cmp	r5, #0
    4a04:	beq	4ac8 <flatcc_json_parser_symbolic_uint16+0x160>
    4a08:	add	r3, sp, #24
    4a0c:	mov	r2, r6
    4a10:	strd	sl, [sp]
    4a14:	mov	r0, r9
    4a18:	blx	r5
    4a1c:	cmp	r6, r0
    4a20:	mov	r1, r0
    4a24:	bne	49f0 <flatcc_json_parser_symbolic_uint16+0x88>
    4a28:	mov	r4, r0
    4a2c:	mov	r0, r4
    4a30:	add	sp, sp, #44	; 0x2c
    4a34:	ldrd	r4, [sp]
    4a38:	ldrd	r6, [sp, #8]
    4a3c:	ldrd	r8, [sp, #16]
    4a40:	ldrd	sl, [sp, #24]
    4a44:	add	sp, sp, #32
    4a48:	pop	{pc}		; (ldr pc, [sp], #4)
    4a4c:	ldr	r3, [sp, #12]
    4a50:	mov	r4, r0
    4a54:	cmp	r3, #0
    4a58:	beq	4a68 <flatcc_json_parser_symbolic_uint16+0x100>
    4a5c:	ldr	r3, [r9, #12]
    4a60:	cmp	r3, #0
    4a64:	bne	4b94 <flatcc_json_parser_symbolic_uint16+0x22c>
    4a68:	ldr	r3, [sp, #24]
    4a6c:	cmp	r3, #0
    4a70:	bne	4b58 <flatcc_json_parser_symbolic_uint16+0x1f0>
    4a74:	ldrd	r2, [sp, #32]
    4a78:	mov	r1, #0
    4a7c:	movw	r0, #65535	; 0xffff
    4a80:	cmp	r3, r1
    4a84:	cmpeq	r2, r0
    4a88:	uxthls	r3, r2
    4a8c:	strls	r3, [sp, #20]
    4a90:	bhi	4b7c <flatcc_json_parser_symbolic_uint16+0x214>
    4a94:	ldr	r2, [sp, #12]
    4a98:	ldr	r1, [sp, #20]
    4a9c:	ldr	r3, [sp, #80]	; 0x50
    4aa0:	add	r2, r2, #1
    4aa4:	str	r2, [sp, #12]
    4aa8:	ldr	r2, [sp, #28]
    4aac:	ldrh	r3, [r3]
    4ab0:	cmp	r2, #0
    4ab4:	ldr	r2, [sp, #80]	; 0x50
    4ab8:	add	r3, r1, r3
    4abc:	strh	r3, [r2]
    4ac0:	bne	49dc <flatcc_json_parser_symbolic_uint16+0x74>
    4ac4:	b	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>
    4ac8:	mov	r2, r6
    4acc:	mov	r0, r9
    4ad0:	mov	r3, #23
    4ad4:	bl	0 <flatcc_json_parser_set_error>
    4ad8:	mov	r4, r0
    4adc:	b	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>
    4ae0:	mov	r3, #5
    4ae4:	bl	0 <flatcc_json_parser_set_error>
    4ae8:	ldr	r3, [r9, #12]
    4aec:	mov	r4, r0
    4af0:	cmp	r3, #0
    4af4:	beq	4b14 <flatcc_json_parser_symbolic_uint16+0x1ac>
    4af8:	cmp	r6, r4
    4afc:	bne	49c8 <flatcc_json_parser_symbolic_uint16+0x60>
    4b00:	b	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>
    4b04:	ldr	r3, [r0, #12]
    4b08:	cmp	r3, #0
    4b0c:	bne	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>
    4b10:	mov	r4, r6
    4b14:	sub	r3, r6, r4
    4b18:	cmp	r3, #1
    4b1c:	ble	4b40 <flatcc_json_parser_symbolic_uint16+0x1d8>
    4b20:	ldrb	r3, [r4]
    4b24:	cmp	r3, #32
    4b28:	bhi	4af8 <flatcc_json_parser_symbolic_uint16+0x190>
    4b2c:	bne	4b40 <flatcc_json_parser_symbolic_uint16+0x1d8>
    4b30:	ldrb	r3, [r4, #1]
    4b34:	cmp	r3, #32
    4b38:	addhi	r4, r4, #1
    4b3c:	bhi	4af8 <flatcc_json_parser_symbolic_uint16+0x190>
    4b40:	mov	r1, r4
    4b44:	mov	r2, r6
    4b48:	mov	r0, r9
    4b4c:	bl	0 <flatcc_json_parser_space_ext>
    4b50:	mov	r4, r0
    4b54:	b	4af8 <flatcc_json_parser_symbolic_uint16+0x190>
    4b58:	mov	r3, #8
    4b5c:	mov	r2, r6
    4b60:	mov	r1, r4
    4b64:	mov	r0, r9
    4b68:	bl	0 <flatcc_json_parser_set_error>
    4b6c:	cmp	r6, r0
    4b70:	bne	4a94 <flatcc_json_parser_symbolic_uint16+0x12c>
    4b74:	mov	r4, r6
    4b78:	b	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>
    4b7c:	mov	r3, #7
    4b80:	mov	r2, r6
    4b84:	mov	r1, r4
    4b88:	mov	r0, r9
    4b8c:	bl	0 <flatcc_json_parser_set_error>
    4b90:	b	4b6c <flatcc_json_parser_symbolic_uint16+0x204>
    4b94:	mov	r1, r4
    4b98:	mov	r2, r6
    4b9c:	mov	r0, r9
    4ba0:	mov	r3, #14
    4ba4:	bl	0 <flatcc_json_parser_set_error>
    4ba8:	mov	r4, r0
    4bac:	b	4a2c <flatcc_json_parser_symbolic_uint16+0xc4>

00004bb0 <flatcc_json_parser_symbolic_int16>:
    4bb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4bb4:	mov	ip, #0
    4bb8:	cmp	r1, r2
    4bbc:	strd	r6, [sp, #8]
    4bc0:	mov	r4, r1
    4bc4:	mov	r6, r2
    4bc8:	strd	r8, [sp, #16]
    4bcc:	mov	r9, r0
    4bd0:	strd	sl, [sp, #24]
    4bd4:	str	lr, [sp, #32]
    4bd8:	sub	sp, sp, #44	; 0x2c
    4bdc:	str	r3, [sp, #16]
    4be0:	ldr	r3, [sp, #80]	; 0x50
    4be4:	strh	ip, [r3]
    4be8:	beq	4d8c <flatcc_json_parser_symbolic_int16+0x1dc>
    4bec:	ldrb	r3, [r1]
    4bf0:	cmp	r3, #34	; 0x22
    4bf4:	addeq	r4, r1, #1
    4bf8:	streq	ip, [r0, #12]
    4bfc:	beq	4d9c <flatcc_json_parser_symbolic_int16+0x1ec>
    4c00:	cmp	r3, #46	; 0x2e
    4c04:	movne	r3, #1
    4c08:	strne	r3, [r0, #12]
    4c0c:	beq	4d68 <flatcc_json_parser_symbolic_int16+0x1b8>
    4c10:	mov	r3, #0
    4c14:	add	fp, sp, #28
    4c18:	add	sl, sp, #32
    4c1c:	str	r3, [sp, #12]
    4c20:	str	r3, [sp, #20]
    4c24:	ldr	r8, [sp, #16]
    4c28:	mov	r7, r4
    4c2c:	mov	r1, r4
    4c30:	ldr	r5, [r8]
    4c34:	b	4c50 <flatcc_json_parser_symbolic_int16+0xa0>
    4c38:	cmp	r7, r0
    4c3c:	mov	r7, r0
    4c40:	bne	4c94 <flatcc_json_parser_symbolic_int16+0xe4>
    4c44:	ldr	r5, [r8, #4]!
    4c48:	cmp	r5, #0
    4c4c:	beq	4d0c <flatcc_json_parser_symbolic_int16+0x15c>
    4c50:	add	r3, sp, #24
    4c54:	mov	r2, r6
    4c58:	strd	sl, [sp]
    4c5c:	mov	r0, r9
    4c60:	blx	r5
    4c64:	cmp	r6, r0
    4c68:	mov	r1, r0
    4c6c:	bne	4c38 <flatcc_json_parser_symbolic_int16+0x88>
    4c70:	mov	r4, r0
    4c74:	mov	r0, r4
    4c78:	add	sp, sp, #44	; 0x2c
    4c7c:	ldrd	r4, [sp]
    4c80:	ldrd	r6, [sp, #8]
    4c84:	ldrd	r8, [sp, #16]
    4c88:	ldrd	sl, [sp, #24]
    4c8c:	add	sp, sp, #32
    4c90:	pop	{pc}		; (ldr pc, [sp], #4)
    4c94:	ldr	r3, [sp, #12]
    4c98:	mov	r4, r0
    4c9c:	cmp	r3, #0
    4ca0:	beq	4cb0 <flatcc_json_parser_symbolic_int16+0x100>
    4ca4:	ldr	r3, [r9, #12]
    4ca8:	cmp	r3, #0
    4cac:	bne	4e00 <flatcc_json_parser_symbolic_int16+0x250>
    4cb0:	ldr	r1, [sp, #24]
    4cb4:	ldrd	r2, [sp, #32]
    4cb8:	cmp	r1, #0
    4cbc:	beq	4d24 <flatcc_json_parser_symbolic_int16+0x174>
    4cc0:	cmp	r3, #0
    4cc4:	cmpeq	r2, #32768	; 0x8000
    4cc8:	bhi	4de0 <flatcc_json_parser_symbolic_int16+0x230>
    4ccc:	rsb	r2, r2, #0
    4cd0:	uxth	r2, r2
    4cd4:	sxth	r3, r2
    4cd8:	str	r3, [sp, #20]
    4cdc:	ldr	r3, [sp, #80]	; 0x50
    4ce0:	ldrh	r1, [r3]
    4ce4:	ldr	r3, [sp, #12]
    4ce8:	add	r2, r2, r1
    4cec:	add	r3, r3, #1
    4cf0:	str	r3, [sp, #12]
    4cf4:	ldr	r3, [sp, #28]
    4cf8:	cmp	r3, #0
    4cfc:	ldr	r3, [sp, #80]	; 0x50
    4d00:	strh	r2, [r3]
    4d04:	bne	4c24 <flatcc_json_parser_symbolic_int16+0x74>
    4d08:	b	4c74 <flatcc_json_parser_symbolic_int16+0xc4>
    4d0c:	mov	r2, r6
    4d10:	mov	r0, r9
    4d14:	mov	r3, #23
    4d18:	bl	0 <flatcc_json_parser_set_error>
    4d1c:	mov	r4, r0
    4d20:	b	4c74 <flatcc_json_parser_symbolic_int16+0xc4>
    4d24:	mov	r1, #0
    4d28:	movw	r0, #32767	; 0x7fff
    4d2c:	cmp	r3, r1
    4d30:	cmpeq	r2, r0
    4d34:	sxthls	r1, r2
    4d38:	uxthls	r2, r2
    4d3c:	strls	r1, [sp, #20]
    4d40:	bls	4cdc <flatcc_json_parser_symbolic_int16+0x12c>
    4d44:	mov	r3, #7
    4d48:	mov	r2, r6
    4d4c:	mov	r1, r4
    4d50:	mov	r0, r9
    4d54:	bl	0 <flatcc_json_parser_set_error>
    4d58:	cmp	r6, r0
    4d5c:	beq	4df8 <flatcc_json_parser_symbolic_int16+0x248>
    4d60:	ldrh	r2, [sp, #20]
    4d64:	b	4cdc <flatcc_json_parser_symbolic_int16+0x12c>
    4d68:	mov	r3, #5
    4d6c:	bl	0 <flatcc_json_parser_set_error>
    4d70:	ldr	r3, [r9, #12]
    4d74:	mov	r4, r0
    4d78:	cmp	r3, #0
    4d7c:	beq	4d9c <flatcc_json_parser_symbolic_int16+0x1ec>
    4d80:	cmp	r6, r4
    4d84:	bne	4c10 <flatcc_json_parser_symbolic_int16+0x60>
    4d88:	b	4c74 <flatcc_json_parser_symbolic_int16+0xc4>
    4d8c:	ldr	r3, [r0, #12]
    4d90:	cmp	r3, #0
    4d94:	bne	4c74 <flatcc_json_parser_symbolic_int16+0xc4>
    4d98:	mov	r4, r6
    4d9c:	sub	r3, r6, r4
    4da0:	cmp	r3, #1
    4da4:	ble	4dc8 <flatcc_json_parser_symbolic_int16+0x218>
    4da8:	ldrb	r3, [r4]
    4dac:	cmp	r3, #32
    4db0:	bhi	4d80 <flatcc_json_parser_symbolic_int16+0x1d0>
    4db4:	bne	4dc8 <flatcc_json_parser_symbolic_int16+0x218>
    4db8:	ldrb	r3, [r4, #1]
    4dbc:	cmp	r3, #32
    4dc0:	addhi	r4, r4, #1
    4dc4:	bhi	4d80 <flatcc_json_parser_symbolic_int16+0x1d0>
    4dc8:	mov	r1, r4
    4dcc:	mov	r2, r6
    4dd0:	mov	r0, r9
    4dd4:	bl	0 <flatcc_json_parser_space_ext>
    4dd8:	mov	r4, r0
    4ddc:	b	4d80 <flatcc_json_parser_symbolic_int16+0x1d0>
    4de0:	mov	r3, #8
    4de4:	mov	r2, r6
    4de8:	mov	r1, r4
    4dec:	mov	r0, r9
    4df0:	bl	0 <flatcc_json_parser_set_error>
    4df4:	b	4d58 <flatcc_json_parser_symbolic_int16+0x1a8>
    4df8:	mov	r4, r6
    4dfc:	b	4c74 <flatcc_json_parser_symbolic_int16+0xc4>
    4e00:	mov	r1, r4
    4e04:	mov	r2, r6
    4e08:	mov	r0, r9
    4e0c:	mov	r3, #14
    4e10:	bl	0 <flatcc_json_parser_set_error>
    4e14:	mov	r4, r0
    4e18:	b	4c74 <flatcc_json_parser_symbolic_int16+0xc4>

00004e1c <flatcc_json_parser_symbolic_uint32>:
    4e1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4e20:	mov	ip, #0
    4e24:	cmp	r1, r2
    4e28:	strd	r6, [sp, #8]
    4e2c:	mov	r4, r1
    4e30:	mov	r6, r2
    4e34:	strd	r8, [sp, #16]
    4e38:	mov	r9, r0
    4e3c:	strd	sl, [sp, #24]
    4e40:	str	lr, [sp, #32]
    4e44:	sub	sp, sp, #44	; 0x2c
    4e48:	str	r3, [sp, #16]
    4e4c:	ldr	r3, [sp, #80]	; 0x50
    4e50:	str	ip, [r3]
    4e54:	beq	4fb4 <flatcc_json_parser_symbolic_uint32+0x198>
    4e58:	ldrb	r3, [r1]
    4e5c:	cmp	r3, #34	; 0x22
    4e60:	addeq	r4, r1, #1
    4e64:	streq	ip, [r0, #12]
    4e68:	beq	4fc4 <flatcc_json_parser_symbolic_uint32+0x1a8>
    4e6c:	cmp	r3, #46	; 0x2e
    4e70:	movne	r3, #1
    4e74:	strne	r3, [r0, #12]
    4e78:	beq	4f90 <flatcc_json_parser_symbolic_uint32+0x174>
    4e7c:	mov	r3, #0
    4e80:	add	fp, sp, #28
    4e84:	add	sl, sp, #32
    4e88:	str	r3, [sp, #12]
    4e8c:	str	r3, [sp, #20]
    4e90:	ldr	r8, [sp, #16]
    4e94:	mov	r7, r4
    4e98:	mov	r1, r4
    4e9c:	ldr	r5, [r8]
    4ea0:	b	4ebc <flatcc_json_parser_symbolic_uint32+0xa0>
    4ea4:	cmp	r7, r0
    4ea8:	mov	r7, r0
    4eac:	bne	4f00 <flatcc_json_parser_symbolic_uint32+0xe4>
    4eb0:	ldr	r5, [r8, #4]!
    4eb4:	cmp	r5, #0
    4eb8:	beq	4f78 <flatcc_json_parser_symbolic_uint32+0x15c>
    4ebc:	add	r3, sp, #24
    4ec0:	mov	r2, r6
    4ec4:	strd	sl, [sp]
    4ec8:	mov	r0, r9
    4ecc:	blx	r5
    4ed0:	cmp	r6, r0
    4ed4:	mov	r1, r0
    4ed8:	bne	4ea4 <flatcc_json_parser_symbolic_uint32+0x88>
    4edc:	mov	r4, r0
    4ee0:	mov	r0, r4
    4ee4:	add	sp, sp, #44	; 0x2c
    4ee8:	ldrd	r4, [sp]
    4eec:	ldrd	r6, [sp, #8]
    4ef0:	ldrd	r8, [sp, #16]
    4ef4:	ldrd	sl, [sp, #24]
    4ef8:	add	sp, sp, #32
    4efc:	pop	{pc}		; (ldr pc, [sp], #4)
    4f00:	ldr	r3, [sp, #12]
    4f04:	mov	r4, r0
    4f08:	cmp	r3, #0
    4f0c:	beq	4f1c <flatcc_json_parser_symbolic_uint32+0x100>
    4f10:	ldr	r3, [r9, #12]
    4f14:	cmp	r3, #0
    4f18:	bne	5044 <flatcc_json_parser_symbolic_uint32+0x228>
    4f1c:	ldr	r3, [sp, #24]
    4f20:	cmp	r3, #0
    4f24:	bne	5008 <flatcc_json_parser_symbolic_uint32+0x1ec>
    4f28:	ldrd	r2, [sp, #32]
    4f2c:	mov	r1, #0
    4f30:	mvn	r0, #0
    4f34:	cmp	r3, r1
    4f38:	cmpeq	r2, r0
    4f3c:	strls	r2, [sp, #20]
    4f40:	bhi	502c <flatcc_json_parser_symbolic_uint32+0x210>
    4f44:	ldr	r2, [sp, #12]
    4f48:	ldr	r1, [sp, #20]
    4f4c:	ldr	r3, [sp, #80]	; 0x50
    4f50:	add	r2, r2, #1
    4f54:	str	r2, [sp, #12]
    4f58:	ldr	r2, [sp, #28]
    4f5c:	ldr	r3, [r3]
    4f60:	cmp	r2, #0
    4f64:	ldr	r2, [sp, #80]	; 0x50
    4f68:	add	r3, r3, r1
    4f6c:	str	r3, [r2]
    4f70:	bne	4e90 <flatcc_json_parser_symbolic_uint32+0x74>
    4f74:	b	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>
    4f78:	mov	r2, r6
    4f7c:	mov	r0, r9
    4f80:	mov	r3, #23
    4f84:	bl	0 <flatcc_json_parser_set_error>
    4f88:	mov	r4, r0
    4f8c:	b	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>
    4f90:	mov	r3, #5
    4f94:	bl	0 <flatcc_json_parser_set_error>
    4f98:	ldr	r3, [r9, #12]
    4f9c:	mov	r4, r0
    4fa0:	cmp	r3, #0
    4fa4:	beq	4fc4 <flatcc_json_parser_symbolic_uint32+0x1a8>
    4fa8:	cmp	r6, r4
    4fac:	bne	4e7c <flatcc_json_parser_symbolic_uint32+0x60>
    4fb0:	b	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>
    4fb4:	ldr	r3, [r0, #12]
    4fb8:	cmp	r3, #0
    4fbc:	bne	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>
    4fc0:	mov	r4, r6
    4fc4:	sub	r3, r6, r4
    4fc8:	cmp	r3, #1
    4fcc:	ble	4ff0 <flatcc_json_parser_symbolic_uint32+0x1d4>
    4fd0:	ldrb	r3, [r4]
    4fd4:	cmp	r3, #32
    4fd8:	bhi	4fa8 <flatcc_json_parser_symbolic_uint32+0x18c>
    4fdc:	bne	4ff0 <flatcc_json_parser_symbolic_uint32+0x1d4>
    4fe0:	ldrb	r3, [r4, #1]
    4fe4:	cmp	r3, #32
    4fe8:	addhi	r4, r4, #1
    4fec:	bhi	4fa8 <flatcc_json_parser_symbolic_uint32+0x18c>
    4ff0:	mov	r1, r4
    4ff4:	mov	r2, r6
    4ff8:	mov	r0, r9
    4ffc:	bl	0 <flatcc_json_parser_space_ext>
    5000:	mov	r4, r0
    5004:	b	4fa8 <flatcc_json_parser_symbolic_uint32+0x18c>
    5008:	mov	r3, #8
    500c:	mov	r2, r6
    5010:	mov	r1, r4
    5014:	mov	r0, r9
    5018:	bl	0 <flatcc_json_parser_set_error>
    501c:	cmp	r6, r0
    5020:	bne	4f44 <flatcc_json_parser_symbolic_uint32+0x128>
    5024:	mov	r4, r6
    5028:	b	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>
    502c:	mov	r3, #7
    5030:	mov	r2, r6
    5034:	mov	r1, r4
    5038:	mov	r0, r9
    503c:	bl	0 <flatcc_json_parser_set_error>
    5040:	b	501c <flatcc_json_parser_symbolic_uint32+0x200>
    5044:	mov	r1, r4
    5048:	mov	r2, r6
    504c:	mov	r0, r9
    5050:	mov	r3, #14
    5054:	bl	0 <flatcc_json_parser_set_error>
    5058:	mov	r4, r0
    505c:	b	4ee0 <flatcc_json_parser_symbolic_uint32+0xc4>

00005060 <flatcc_json_parser_symbolic_int8>:
    5060:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5064:	mov	ip, #0
    5068:	cmp	r1, r2
    506c:	strd	r6, [sp, #8]
    5070:	mov	r4, r1
    5074:	mov	r6, r2
    5078:	strd	r8, [sp, #16]
    507c:	mov	r9, r0
    5080:	strd	sl, [sp, #24]
    5084:	str	lr, [sp, #32]
    5088:	sub	sp, sp, #44	; 0x2c
    508c:	str	r3, [sp, #16]
    5090:	ldr	r3, [sp, #80]	; 0x50
    5094:	strb	ip, [r3]
    5098:	beq	5234 <flatcc_json_parser_symbolic_int8+0x1d4>
    509c:	ldrb	r3, [r1]
    50a0:	cmp	r3, #34	; 0x22
    50a4:	addeq	r4, r1, #1
    50a8:	streq	ip, [r0, #12]
    50ac:	beq	5244 <flatcc_json_parser_symbolic_int8+0x1e4>
    50b0:	cmp	r3, #46	; 0x2e
    50b4:	movne	r3, #1
    50b8:	strne	r3, [r0, #12]
    50bc:	beq	5210 <flatcc_json_parser_symbolic_int8+0x1b0>
    50c0:	mov	r3, #0
    50c4:	add	fp, sp, #28
    50c8:	add	sl, sp, #32
    50cc:	str	r3, [sp, #12]
    50d0:	str	r3, [sp, #20]
    50d4:	ldr	r8, [sp, #16]
    50d8:	mov	r7, r4
    50dc:	mov	r1, r4
    50e0:	ldr	r5, [r8]
    50e4:	b	5100 <flatcc_json_parser_symbolic_int8+0xa0>
    50e8:	cmp	r7, r0
    50ec:	mov	r7, r0
    50f0:	bne	5144 <flatcc_json_parser_symbolic_int8+0xe4>
    50f4:	ldr	r5, [r8, #4]!
    50f8:	cmp	r5, #0
    50fc:	beq	51bc <flatcc_json_parser_symbolic_int8+0x15c>
    5100:	add	r3, sp, #24
    5104:	mov	r2, r6
    5108:	strd	sl, [sp]
    510c:	mov	r0, r9
    5110:	blx	r5
    5114:	cmp	r6, r0
    5118:	mov	r1, r0
    511c:	bne	50e8 <flatcc_json_parser_symbolic_int8+0x88>
    5120:	mov	r4, r0
    5124:	mov	r0, r4
    5128:	add	sp, sp, #44	; 0x2c
    512c:	ldrd	r4, [sp]
    5130:	ldrd	r6, [sp, #8]
    5134:	ldrd	r8, [sp, #16]
    5138:	ldrd	sl, [sp, #24]
    513c:	add	sp, sp, #32
    5140:	pop	{pc}		; (ldr pc, [sp], #4)
    5144:	ldr	r3, [sp, #12]
    5148:	mov	r4, r0
    514c:	cmp	r3, #0
    5150:	beq	5160 <flatcc_json_parser_symbolic_int8+0x100>
    5154:	ldr	r3, [r9, #12]
    5158:	cmp	r3, #0
    515c:	bne	52a8 <flatcc_json_parser_symbolic_int8+0x248>
    5160:	ldr	r1, [sp, #24]
    5164:	ldrd	r2, [sp, #32]
    5168:	cmp	r1, #0
    516c:	beq	51d4 <flatcc_json_parser_symbolic_int8+0x174>
    5170:	cmp	r3, #0
    5174:	cmpeq	r2, #128	; 0x80
    5178:	bhi	5288 <flatcc_json_parser_symbolic_int8+0x228>
    517c:	rsb	r2, r2, #0
    5180:	uxtb	r2, r2
    5184:	sxtb	r3, r2
    5188:	str	r3, [sp, #20]
    518c:	ldr	r3, [sp, #80]	; 0x50
    5190:	ldrb	r1, [r3]
    5194:	ldr	r3, [sp, #12]
    5198:	add	r2, r2, r1
    519c:	add	r3, r3, #1
    51a0:	str	r3, [sp, #12]
    51a4:	ldr	r3, [sp, #28]
    51a8:	cmp	r3, #0
    51ac:	ldr	r3, [sp, #80]	; 0x50
    51b0:	strb	r2, [r3]
    51b4:	bne	50d4 <flatcc_json_parser_symbolic_int8+0x74>
    51b8:	b	5124 <flatcc_json_parser_symbolic_int8+0xc4>
    51bc:	mov	r2, r6
    51c0:	mov	r0, r9
    51c4:	mov	r3, #23
    51c8:	bl	0 <flatcc_json_parser_set_error>
    51cc:	mov	r4, r0
    51d0:	b	5124 <flatcc_json_parser_symbolic_int8+0xc4>
    51d4:	cmp	r3, #0
    51d8:	cmpeq	r2, #127	; 0x7f
    51dc:	sxtbls	r1, r2
    51e0:	uxtbls	r2, r2
    51e4:	strls	r1, [sp, #20]
    51e8:	bls	518c <flatcc_json_parser_symbolic_int8+0x12c>
    51ec:	mov	r3, #7
    51f0:	mov	r2, r6
    51f4:	mov	r1, r4
    51f8:	mov	r0, r9
    51fc:	bl	0 <flatcc_json_parser_set_error>
    5200:	cmp	r6, r0
    5204:	beq	52a0 <flatcc_json_parser_symbolic_int8+0x240>
    5208:	ldrb	r2, [sp, #20]
    520c:	b	518c <flatcc_json_parser_symbolic_int8+0x12c>
    5210:	mov	r3, #5
    5214:	bl	0 <flatcc_json_parser_set_error>
    5218:	ldr	r3, [r9, #12]
    521c:	mov	r4, r0
    5220:	cmp	r3, #0
    5224:	beq	5244 <flatcc_json_parser_symbolic_int8+0x1e4>
    5228:	cmp	r6, r4
    522c:	bne	50c0 <flatcc_json_parser_symbolic_int8+0x60>
    5230:	b	5124 <flatcc_json_parser_symbolic_int8+0xc4>
    5234:	ldr	r3, [r0, #12]
    5238:	cmp	r3, #0
    523c:	bne	5124 <flatcc_json_parser_symbolic_int8+0xc4>
    5240:	mov	r4, r6
    5244:	sub	r3, r6, r4
    5248:	cmp	r3, #1
    524c:	ble	5270 <flatcc_json_parser_symbolic_int8+0x210>
    5250:	ldrb	r3, [r4]
    5254:	cmp	r3, #32
    5258:	bhi	5228 <flatcc_json_parser_symbolic_int8+0x1c8>
    525c:	bne	5270 <flatcc_json_parser_symbolic_int8+0x210>
    5260:	ldrb	r3, [r4, #1]
    5264:	cmp	r3, #32
    5268:	addhi	r4, r4, #1
    526c:	bhi	5228 <flatcc_json_parser_symbolic_int8+0x1c8>
    5270:	mov	r1, r4
    5274:	mov	r2, r6
    5278:	mov	r0, r9
    527c:	bl	0 <flatcc_json_parser_space_ext>
    5280:	mov	r4, r0
    5284:	b	5228 <flatcc_json_parser_symbolic_int8+0x1c8>
    5288:	mov	r3, #8
    528c:	mov	r2, r6
    5290:	mov	r1, r4
    5294:	mov	r0, r9
    5298:	bl	0 <flatcc_json_parser_set_error>
    529c:	b	5200 <flatcc_json_parser_symbolic_int8+0x1a0>
    52a0:	mov	r4, r6
    52a4:	b	5124 <flatcc_json_parser_symbolic_int8+0xc4>
    52a8:	mov	r1, r4
    52ac:	mov	r2, r6
    52b0:	mov	r0, r9
    52b4:	mov	r3, #14
    52b8:	bl	0 <flatcc_json_parser_set_error>
    52bc:	mov	r4, r0
    52c0:	b	5124 <flatcc_json_parser_symbolic_int8+0xc4>

000052c4 <flatcc_json_parser_symbolic_int64>:
    52c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    52c8:	cmp	r1, r2
    52cc:	mov	r4, r1
    52d0:	strd	r6, [sp, #8]
    52d4:	mov	r6, r2
    52d8:	strd	r8, [sp, #16]
    52dc:	mov	r9, r0
    52e0:	strd	sl, [sp, #24]
    52e4:	mov	sl, #0
    52e8:	mov	fp, #0
    52ec:	str	lr, [sp, #32]
    52f0:	sub	sp, sp, #44	; 0x2c
    52f4:	str	r3, [sp, #20]
    52f8:	ldr	r3, [sp, #80]	; 0x50
    52fc:	strd	sl, [r3]
    5300:	beq	54ac <flatcc_json_parser_symbolic_int64+0x1e8>
    5304:	ldrb	r3, [r1]
    5308:	cmp	r3, #34	; 0x22
    530c:	moveq	r3, #0
    5310:	addeq	r4, r1, #1
    5314:	streq	r3, [r0, #12]
    5318:	beq	54bc <flatcc_json_parser_symbolic_int64+0x1f8>
    531c:	cmp	r3, #46	; 0x2e
    5320:	movne	r3, #1
    5324:	strne	r3, [r0, #12]
    5328:	beq	5488 <flatcc_json_parser_symbolic_int64+0x1c4>
    532c:	mov	r3, #0
    5330:	add	fp, sp, #28
    5334:	add	sl, sp, #32
    5338:	str	r3, [sp, #8]
    533c:	str	r3, [sp, #12]
    5340:	str	r3, [sp, #16]
    5344:	ldr	r8, [sp, #20]
    5348:	mov	r7, r4
    534c:	mov	r1, r4
    5350:	ldr	r5, [r8]
    5354:	b	5370 <flatcc_json_parser_symbolic_int64+0xac>
    5358:	cmp	r7, r0
    535c:	mov	r7, r0
    5360:	bne	53b4 <flatcc_json_parser_symbolic_int64+0xf0>
    5364:	ldr	r5, [r8, #4]!
    5368:	cmp	r5, #0
    536c:	beq	5440 <flatcc_json_parser_symbolic_int64+0x17c>
    5370:	add	r3, sp, #24
    5374:	mov	r2, r6
    5378:	strd	sl, [sp]
    537c:	mov	r0, r9
    5380:	blx	r5
    5384:	cmp	r6, r0
    5388:	mov	r1, r0
    538c:	bne	5358 <flatcc_json_parser_symbolic_int64+0x94>
    5390:	mov	r4, r0
    5394:	mov	r0, r4
    5398:	add	sp, sp, #44	; 0x2c
    539c:	ldrd	r4, [sp]
    53a0:	ldrd	r6, [sp, #8]
    53a4:	ldrd	r8, [sp, #16]
    53a8:	ldrd	sl, [sp, #24]
    53ac:	add	sp, sp, #32
    53b0:	pop	{pc}		; (ldr pc, [sp], #4)
    53b4:	ldr	r3, [sp, #8]
    53b8:	mov	r4, r0
    53bc:	cmp	r3, #0
    53c0:	beq	53d0 <flatcc_json_parser_symbolic_int64+0x10c>
    53c4:	ldr	r3, [r9, #12]
    53c8:	cmp	r3, #0
    53cc:	bne	5518 <flatcc_json_parser_symbolic_int64+0x254>
    53d0:	ldr	r1, [sp, #24]
    53d4:	ldrd	r2, [sp, #32]
    53d8:	cmp	r1, #0
    53dc:	beq	5458 <flatcc_json_parser_symbolic_int64+0x194>
    53e0:	cmp	r3, #-2147483648	; 0x80000000
    53e4:	cmpeq	r2, #0
    53e8:	bhi	5500 <flatcc_json_parser_symbolic_int64+0x23c>
    53ec:	rsbs	r2, r2, #0
    53f0:	rsc	r3, r3, #0
    53f4:	strd	r2, [sp, #12]
    53f8:	ldr	r2, [sp, #8]
    53fc:	ldr	r0, [sp, #12]
    5400:	ldr	r3, [sp, #80]	; 0x50
    5404:	add	r2, r2, #1
    5408:	ldr	r1, [sp, #28]
    540c:	str	r2, [sp, #8]
    5410:	ldr	r2, [sp, #80]	; 0x50
    5414:	ldr	r3, [r3]
    5418:	ldr	r2, [r2, #4]
    541c:	adds	r3, r3, r0
    5420:	ldr	r0, [sp, #16]
    5424:	adc	r2, r2, r0
    5428:	ldr	r0, [sp, #80]	; 0x50
    542c:	cmp	r1, #0
    5430:	str	r3, [r0]
    5434:	str	r2, [r0, #4]
    5438:	bne	5344 <flatcc_json_parser_symbolic_int64+0x80>
    543c:	b	5394 <flatcc_json_parser_symbolic_int64+0xd0>
    5440:	mov	r2, r6
    5444:	mov	r0, r9
    5448:	mov	r3, #23
    544c:	bl	0 <flatcc_json_parser_set_error>
    5450:	mov	r4, r0
    5454:	b	5394 <flatcc_json_parser_symbolic_int64+0xd0>
    5458:	cmp	r2, #0
    545c:	sbcs	r1, r3, #0
    5460:	bge	53f4 <flatcc_json_parser_symbolic_int64+0x130>
    5464:	mov	r3, #7
    5468:	mov	r2, r6
    546c:	mov	r1, r4
    5470:	mov	r0, r9
    5474:	bl	0 <flatcc_json_parser_set_error>
    5478:	cmp	r6, r0
    547c:	bne	53f8 <flatcc_json_parser_symbolic_int64+0x134>
    5480:	mov	r4, r6
    5484:	b	5394 <flatcc_json_parser_symbolic_int64+0xd0>
    5488:	mov	r3, #5
    548c:	bl	0 <flatcc_json_parser_set_error>
    5490:	ldr	r3, [r9, #12]
    5494:	mov	r4, r0
    5498:	cmp	r3, #0
    549c:	beq	54bc <flatcc_json_parser_symbolic_int64+0x1f8>
    54a0:	cmp	r6, r4
    54a4:	bne	532c <flatcc_json_parser_symbolic_int64+0x68>
    54a8:	b	5394 <flatcc_json_parser_symbolic_int64+0xd0>
    54ac:	ldr	r3, [r0, #12]
    54b0:	cmp	r3, #0
    54b4:	bne	5394 <flatcc_json_parser_symbolic_int64+0xd0>
    54b8:	mov	r4, r6
    54bc:	sub	r3, r6, r4
    54c0:	cmp	r3, #1
    54c4:	ble	54e8 <flatcc_json_parser_symbolic_int64+0x224>
    54c8:	ldrb	r3, [r4]
    54cc:	cmp	r3, #32
    54d0:	bhi	54a0 <flatcc_json_parser_symbolic_int64+0x1dc>
    54d4:	bne	54e8 <flatcc_json_parser_symbolic_int64+0x224>
    54d8:	ldrb	r3, [r4, #1]
    54dc:	cmp	r3, #32
    54e0:	addhi	r4, r4, #1
    54e4:	bhi	54a0 <flatcc_json_parser_symbolic_int64+0x1dc>
    54e8:	mov	r1, r4
    54ec:	mov	r2, r6
    54f0:	mov	r0, r9
    54f4:	bl	0 <flatcc_json_parser_space_ext>
    54f8:	mov	r4, r0
    54fc:	b	54a0 <flatcc_json_parser_symbolic_int64+0x1dc>
    5500:	mov	r3, #8
    5504:	mov	r2, r6
    5508:	mov	r1, r4
    550c:	mov	r0, r9
    5510:	bl	0 <flatcc_json_parser_set_error>
    5514:	b	5478 <flatcc_json_parser_symbolic_int64+0x1b4>
    5518:	mov	r1, r4
    551c:	mov	r2, r6
    5520:	mov	r0, r9
    5524:	mov	r3, #14
    5528:	bl	0 <flatcc_json_parser_set_error>
    552c:	mov	r4, r0
    5530:	b	5394 <flatcc_json_parser_symbolic_int64+0xd0>

00005534 <Fantasy_BookReader_parse_json_struct>:
    5534:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5538:	mov	r5, r0
    553c:	mov	r4, r2
    5540:	ldr	r0, [r0]
    5544:	mov	r2, #4
    5548:	strd	r6, [sp, #8]
    554c:	mov	r7, r3
    5550:	mov	r3, #0
    5554:	mov	r6, r1
    5558:	mov	r1, r2
    555c:	strd	r8, [sp, #16]
    5560:	strd	sl, [sp, #24]
    5564:	str	lr, [sp, #32]
    5568:	sub	sp, sp, #52	; 0x34
    556c:	str	r3, [r7]
    5570:	bl	0 <flatcc_builder_start_struct>
    5574:	subs	r3, r0, #0
    5578:	str	r3, [sp, #24]
    557c:	beq	55cc <Fantasy_BookReader_parse_json_struct+0x98>
    5580:	cmp	r6, r4
    5584:	beq	5594 <Fantasy_BookReader_parse_json_struct+0x60>
    5588:	ldrb	r3, [r6]
    558c:	cmp	r3, #123	; 0x7b
    5590:	beq	5604 <Fantasy_BookReader_parse_json_struct+0xd0>
    5594:	mov	r1, r6
    5598:	mov	r3, #21
    559c:	mov	r2, r4
    55a0:	mov	r0, r5
    55a4:	bl	0 <flatcc_json_parser_set_error>
    55a8:	mov	r8, r0
    55ac:	cmp	r4, r8
    55b0:	beq	5c40 <Fantasy_BookReader_parse_json_struct+0x70c>
    55b4:	ldr	r0, [r5]
    55b8:	bl	0 <flatcc_builder_end_struct>
    55bc:	cmp	r0, #0
    55c0:	str	r0, [r7]
    55c4:	moveq	r6, r8
    55c8:	bne	55e4 <Fantasy_BookReader_parse_json_struct+0xb0>
    55cc:	mov	r2, r4
    55d0:	mov	r1, r6
    55d4:	mov	r0, r5
    55d8:	mov	r3, #33	; 0x21
    55dc:	bl	0 <flatcc_json_parser_set_error>
    55e0:	mov	r8, r0
    55e4:	mov	r0, r8
    55e8:	add	sp, sp, #52	; 0x34
    55ec:	ldrd	r4, [sp]
    55f0:	ldrd	r6, [sp, #8]
    55f4:	ldrd	r8, [sp, #16]
    55f8:	ldrd	sl, [sp, #24]
    55fc:	add	sp, sp, #32
    5600:	pop	{pc}		; (ldr pc, [sp], #4)
    5604:	add	r1, r6, #1
    5608:	sub	r3, r4, r1
    560c:	cmp	r3, #1
    5610:	ble	5624 <Fantasy_BookReader_parse_json_struct+0xf0>
    5614:	ldrb	r3, [r6, #1]
    5618:	cmp	r3, #32
    561c:	bhi	5634 <Fantasy_BookReader_parse_json_struct+0x100>
    5620:	beq	5bf8 <Fantasy_BookReader_parse_json_struct+0x6c4>
    5624:	mov	r2, r4
    5628:	mov	r0, r5
    562c:	bl	0 <flatcc_json_parser_space_ext>
    5630:	mov	r1, r0
    5634:	cmp	r4, r1
    5638:	beq	5648 <Fantasy_BookReader_parse_json_struct+0x114>
    563c:	ldrb	r3, [r1]
    5640:	cmp	r3, #125	; 0x7d
    5644:	beq	5c28 <Fantasy_BookReader_parse_json_struct+0x6f4>
    5648:	mov	r3, #0
    564c:	movt	r3, #65535	; 0xffff
    5650:	str	r3, [sp, #28]
    5654:	cmp	r4, r1
    5658:	beq	5684 <Fantasy_BookReader_parse_json_struct+0x150>
    565c:	ldrb	r3, [r1]
    5660:	cmp	r3, #34	; 0x22
    5664:	moveq	r3, #0
    5668:	addeq	r1, r1, #1
    566c:	streq	r3, [r5, #12]
    5670:	beq	5684 <Fantasy_BookReader_parse_json_struct+0x150>
    5674:	cmp	r3, #46	; 0x2e
    5678:	movne	r3, #1
    567c:	strne	r3, [r5, #12]
    5680:	beq	5aac <Fantasy_BookReader_parse_json_struct+0x578>
    5684:	sub	r3, r4, r1
    5688:	cmp	r3, #8
    568c:	bhi	56c0 <Fantasy_BookReader_parse_json_struct+0x18c>
    5690:	sub	r3, r3, #1
    5694:	cmp	r3, #7
    5698:	ldrls	pc, [pc, r3, lsl #2]
    569c:	b	5a88 <Fantasy_BookReader_parse_json_struct+0x554>
    56a0:	.word	0x00005988
    56a4:	.word	0x0000597c
    56a8:	.word	0x00005970
    56ac:	.word	0x00005964
    56b0:	.word	0x00005958
    56b4:	.word	0x0000594c
    56b8:	.word	0x00005940
    56bc:	.word	0x000056c0
    56c0:	ldrb	sl, [r1, #7]
    56c4:	mov	fp, #0
    56c8:	mov	r3, fp
    56cc:	ldrb	r8, [r1, #6]
    56d0:	orr	r2, sl, r8, lsl #8
    56d4:	ldrb	r8, [r1, #5]
    56d8:	orr	r2, r2, r8, lsl #16
    56dc:	ldrb	r8, [r1, #4]
    56e0:	orr	r2, r2, r8, lsl #24
    56e4:	ldrb	sl, [r1, #3]
    56e8:	orr	r3, r3, sl
    56ec:	ldrb	sl, [r1, #2]
    56f0:	orr	sl, r3, sl, lsl #8
    56f4:	ldrb	r8, [r1, #1]
    56f8:	orr	sl, sl, r8, lsl #16
    56fc:	str	r2, [sp, #8]
    5700:	ldrb	r2, [r1]
    5704:	add	r9, pc, #964	; 0x3c4
    5708:	ldrd	r8, [r9]
    570c:	orr	r3, sl, r2, lsl #24
    5710:	str	r3, [sp, #12]
    5714:	ldrd	r2, [sp, #8]
    5718:	cmp	r3, r9
    571c:	cmpeq	r2, r8
    5720:	bne	5a88 <Fantasy_BookReader_parse_json_struct+0x554>
    5724:	add	r6, r1, #8
    5728:	sub	r3, r4, r6
    572c:	cmp	r3, #8
    5730:	bhi	5760 <Fantasy_BookReader_parse_json_struct+0x22c>
    5734:	sub	r2, r3, #2
    5738:	cmp	r2, #6
    573c:	ldrls	pc, [pc, r2, lsl #2]
    5740:	b	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    5744:	.word	0x0000599c
    5748:	.word	0x00005994
    574c:	.word	0x000059a4
    5750:	.word	0x00005938
    5754:	.word	0x00005938
    5758:	.word	0x00005760
    575c:	.word	0x00005760
    5760:	mov	r9, #0
    5764:	mov	sl, r9
    5768:	mov	r8, sl
    576c:	ldrb	sl, [r1, #11]
    5770:	orr	sl, r8, sl
    5774:	ldrb	r8, [r1, #10]
    5778:	orr	sl, sl, r8, lsl #8
    577c:	ldrb	r8, [r1, #9]
    5780:	mov	r2, #0
    5784:	mov	fp, #0
    5788:	movt	fp, #24932	; 0x6164
    578c:	str	r2, [sp, #16]
    5790:	ldr	r2, [sp, #28]
    5794:	orr	sl, sl, r8, lsl #16
    5798:	ldrb	r8, [r1, #8]
    579c:	orr	r8, sl, r8, lsl #24
    57a0:	mov	sl, #0
    57a4:	and	r2, r8, r2
    57a8:	str	r2, [sp, #20]
    57ac:	ldrd	r8, [sp, #16]
    57b0:	cmp	r9, fp
    57b4:	cmpeq	r8, sl
    57b8:	bne	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    57bc:	cmp	r3, #2
    57c0:	ble	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    57c4:	ldr	r2, [r5, #12]
    57c8:	ldrb	r3, [r1, #10]
    57cc:	cmp	r2, #0
    57d0:	beq	5a9c <Fantasy_BookReader_parse_json_struct+0x568>
    57d4:	cmp	r3, #58	; 0x3a
    57d8:	cmpne	r3, #32
    57dc:	movhi	r3, #1
    57e0:	movls	r3, #0
    57e4:	bhi	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    57e8:	add	r1, r1, #10
    57ec:	str	r3, [r5, #12]
    57f0:	sub	r3, r4, r1
    57f4:	cmp	r3, #1
    57f8:	ble	580c <Fantasy_BookReader_parse_json_struct+0x2d8>
    57fc:	ldrb	r3, [r1]
    5800:	cmp	r3, #32
    5804:	bhi	581c <Fantasy_BookReader_parse_json_struct+0x2e8>
    5808:	beq	5b98 <Fantasy_BookReader_parse_json_struct+0x664>
    580c:	mov	r2, r4
    5810:	mov	r0, r5
    5814:	bl	0 <flatcc_json_parser_space_ext>
    5818:	mov	r1, r0
    581c:	cmp	r4, r1
    5820:	beq	5830 <Fantasy_BookReader_parse_json_struct+0x2fc>
    5824:	ldrb	r3, [r1]
    5828:	cmp	r3, #58	; 0x3a
    582c:	beq	5bac <Fantasy_BookReader_parse_json_struct+0x678>
    5830:	mov	r3, #4
    5834:	mov	r2, r4
    5838:	mov	r0, r5
    583c:	bl	0 <flatcc_json_parser_set_error>
    5840:	mov	r8, r0
    5844:	cmp	r6, r8
    5848:	beq	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    584c:	mov	r3, #0
    5850:	mov	r0, #0
    5854:	mov	r1, #0
    5858:	cmp	r4, r8
    585c:	str	r3, [sp, #32]
    5860:	str	r3, [sp, #36]	; 0x24
    5864:	strd	r0, [sp, #40]	; 0x28
    5868:	beq	5ac4 <Fantasy_BookReader_parse_json_struct+0x590>
    586c:	add	r0, sp, #40	; 0x28
    5870:	add	r3, sp, #36	; 0x24
    5874:	mov	r2, r4
    5878:	mov	r1, r8
    587c:	str	r0, [sp]
    5880:	mov	r0, r5
    5884:	bl	0 <flatcc_json_parser_integer>
    5888:	cmp	r8, r0
    588c:	mov	r6, r0
    5890:	bne	5ad8 <Fantasy_BookReader_parse_json_struct+0x5a4>
    5894:	add	r0, sp, #32
    5898:	movw	r3, #0
    589c:	movt	r3, #0
    58a0:	mov	r2, r4
    58a4:	mov	r1, r6
    58a8:	str	r0, [sp]
    58ac:	mov	r0, r5
    58b0:	bl	44d0 <flatcc_json_parser_symbolic_int32>
    58b4:	cmp	r4, r0
    58b8:	cmpne	r0, r6
    58bc:	beq	5c0c <Fantasy_BookReader_parse_json_struct+0x6d8>
    58c0:	ldr	r2, [sp, #32]
    58c4:	mov	r6, r0
    58c8:	ldr	r3, [sp, #24]
    58cc:	str	r2, [r3]
    58d0:	sub	r3, r4, r6
    58d4:	cmp	r3, #1
    58d8:	ble	58ec <Fantasy_BookReader_parse_json_struct+0x3b8>
    58dc:	ldrb	r3, [r6]
    58e0:	cmp	r3, #32
    58e4:	bhi	5900 <Fantasy_BookReader_parse_json_struct+0x3cc>
    58e8:	beq	5a74 <Fantasy_BookReader_parse_json_struct+0x540>
    58ec:	mov	r1, r6
    58f0:	mov	r2, r4
    58f4:	mov	r0, r5
    58f8:	bl	0 <flatcc_json_parser_space_ext>
    58fc:	mov	r6, r0
    5900:	cmp	r4, r6
    5904:	beq	55cc <Fantasy_BookReader_parse_json_struct+0x98>
    5908:	ldrb	r3, [r6]
    590c:	cmp	r3, #44	; 0x2c
    5910:	beq	59e4 <Fantasy_BookReader_parse_json_struct+0x4b0>
    5914:	cmp	r3, #125	; 0x7d
    5918:	beq	59ac <Fantasy_BookReader_parse_json_struct+0x478>
    591c:	mov	r1, r6
    5920:	mov	r3, #10
    5924:	mov	r2, r4
    5928:	mov	r0, r5
    592c:	bl	0 <flatcc_json_parser_set_error>
    5930:	mov	r8, r0
    5934:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5938:	mov	sl, #0
    593c:	b	5768 <Fantasy_BookReader_parse_json_struct+0x234>
    5940:	mov	sl, #0
    5944:	mov	fp, #0
    5948:	b	56c8 <Fantasy_BookReader_parse_json_struct+0x194>
    594c:	mov	r2, #0
    5950:	mov	r3, r2
    5954:	b	56d4 <Fantasy_BookReader_parse_json_struct+0x1a0>
    5958:	mov	r2, #0
    595c:	mov	r3, r2
    5960:	b	56dc <Fantasy_BookReader_parse_json_struct+0x1a8>
    5964:	mov	r2, #0
    5968:	mov	r3, r2
    596c:	b	56e4 <Fantasy_BookReader_parse_json_struct+0x1b0>
    5970:	mov	r2, #0
    5974:	mov	r3, r2
    5978:	b	56ec <Fantasy_BookReader_parse_json_struct+0x1b8>
    597c:	mov	r2, #0
    5980:	mov	sl, r2
    5984:	b	56f4 <Fantasy_BookReader_parse_json_struct+0x1c0>
    5988:	mov	r2, #0
    598c:	mov	sl, r2
    5990:	b	56fc <Fantasy_BookReader_parse_json_struct+0x1c8>
    5994:	mov	sl, #0
    5998:	b	5774 <Fantasy_BookReader_parse_json_struct+0x240>
    599c:	mov	sl, #0
    59a0:	b	577c <Fantasy_BookReader_parse_json_struct+0x248>
    59a4:	mov	r8, #0
    59a8:	b	576c <Fantasy_BookReader_parse_json_struct+0x238>
    59ac:	add	r8, r6, #1
    59b0:	sub	r3, r4, r8
    59b4:	cmp	r3, #1
    59b8:	ble	59cc <Fantasy_BookReader_parse_json_struct+0x498>
    59bc:	ldrb	r3, [r6, #1]
    59c0:	cmp	r3, #32
    59c4:	bhi	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    59c8:	beq	5b20 <Fantasy_BookReader_parse_json_struct+0x5ec>
    59cc:	mov	r1, r8
    59d0:	mov	r2, r4
    59d4:	mov	r0, r5
    59d8:	bl	0 <flatcc_json_parser_space_ext>
    59dc:	mov	r8, r0
    59e0:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    59e4:	add	r1, r6, #1
    59e8:	sub	r3, r4, r1
    59ec:	cmp	r3, #1
    59f0:	ble	5a04 <Fantasy_BookReader_parse_json_struct+0x4d0>
    59f4:	ldrb	r3, [r6, #1]
    59f8:	cmp	r3, #32
    59fc:	bhi	5a14 <Fantasy_BookReader_parse_json_struct+0x4e0>
    5a00:	beq	5b34 <Fantasy_BookReader_parse_json_struct+0x600>
    5a04:	mov	r2, r4
    5a08:	mov	r0, r5
    5a0c:	bl	0 <flatcc_json_parser_space_ext>
    5a10:	mov	r1, r0
    5a14:	cmp	r4, r1
    5a18:	beq	5b4c <Fantasy_BookReader_parse_json_struct+0x618>
    5a1c:	ldrb	r3, [r1]
    5a20:	cmp	r3, #125	; 0x7d
    5a24:	bne	5654 <Fantasy_BookReader_parse_json_struct+0x120>
    5a28:	add	r8, r1, #1
    5a2c:	sub	r3, r4, r8
    5a30:	cmp	r3, #1
    5a34:	ble	59cc <Fantasy_BookReader_parse_json_struct+0x498>
    5a38:	ldrb	r3, [r1, #1]
    5a3c:	cmp	r3, #32
    5a40:	bhi	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5a44:	bne	59cc <Fantasy_BookReader_parse_json_struct+0x498>
    5a48:	ldrb	r3, [r1, #2]
    5a4c:	cmp	r3, #32
    5a50:	addhi	r8, r1, #2
    5a54:	bls	59cc <Fantasy_BookReader_parse_json_struct+0x498>
    5a58:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5a5c:	mov	r1, r6
    5a60:	mov	r2, r4
    5a64:	mov	r0, r5
    5a68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5a6c:	mov	r6, r0
    5a70:	b	58d0 <Fantasy_BookReader_parse_json_struct+0x39c>
    5a74:	ldrb	r3, [r6, #1]
    5a78:	cmp	r3, #32
    5a7c:	addhi	r6, r6, #1
    5a80:	bls	58ec <Fantasy_BookReader_parse_json_struct+0x3b8>
    5a84:	b	5900 <Fantasy_BookReader_parse_json_struct+0x3cc>
    5a88:	mov	r2, r4
    5a8c:	mov	r0, r5
    5a90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5a94:	mov	r6, r0
    5a98:	b	58d0 <Fantasy_BookReader_parse_json_struct+0x39c>
    5a9c:	cmp	r3, #34	; 0x22
    5aa0:	bne	5a5c <Fantasy_BookReader_parse_json_struct+0x528>
    5aa4:	add	r1, r1, #11
    5aa8:	b	57f0 <Fantasy_BookReader_parse_json_struct+0x2bc>
    5aac:	mov	r3, #5
    5ab0:	mov	r2, r4
    5ab4:	mov	r0, r5
    5ab8:	bl	0 <flatcc_json_parser_set_error>
    5abc:	mov	r1, r0
    5ac0:	b	5684 <Fantasy_BookReader_parse_json_struct+0x150>
    5ac4:	mov	r6, r4
    5ac8:	b	5894 <Fantasy_BookReader_parse_json_struct+0x360>
    5acc:	nop	{0}
    5ad0:	.word	0x735f7265
    5ad4:	.word	0x626f6f6b
    5ad8:	ldr	r1, [sp, #36]	; 0x24
    5adc:	ldrd	r2, [sp, #40]	; 0x28
    5ae0:	cmp	r1, #0
    5ae4:	beq	5b68 <Fantasy_BookReader_parse_json_struct+0x634>
    5ae8:	cmp	r3, #0
    5aec:	cmpeq	r2, #-2147483648	; 0x80000000
    5af0:	rsbls	r2, r2, #0
    5af4:	bls	58c8 <Fantasy_BookReader_parse_json_struct+0x394>
    5af8:	mov	r1, r0
    5afc:	mov	r3, #8
    5b00:	mov	r2, r4
    5b04:	mov	r0, r5
    5b08:	bl	0 <flatcc_json_parser_set_error>
    5b0c:	mov	r6, r0
    5b10:	cmp	r8, r6
    5b14:	ldrne	r2, [sp, #32]
    5b18:	bne	58c8 <Fantasy_BookReader_parse_json_struct+0x394>
    5b1c:	b	5894 <Fantasy_BookReader_parse_json_struct+0x360>
    5b20:	ldrb	r3, [r6, #2]
    5b24:	cmp	r3, #32
    5b28:	addhi	r8, r6, #2
    5b2c:	bls	59cc <Fantasy_BookReader_parse_json_struct+0x498>
    5b30:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5b34:	ldrb	r3, [r6, #2]
    5b38:	cmp	r3, #32
    5b3c:	addhi	r1, r6, #2
    5b40:	bls	5a04 <Fantasy_BookReader_parse_json_struct+0x4d0>
    5b44:	cmp	r4, r1
    5b48:	bne	5a1c <Fantasy_BookReader_parse_json_struct+0x4e8>
    5b4c:	mov	r3, #10
    5b50:	mov	r2, r4
    5b54:	mov	r1, r4
    5b58:	mov	r0, r5
    5b5c:	bl	0 <flatcc_json_parser_set_error>
    5b60:	mov	r8, r0
    5b64:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5b68:	mov	r1, #0
    5b6c:	mvn	r0, #-2147483648	; 0x80000000
    5b70:	cmp	r3, r1
    5b74:	cmpeq	r2, r0
    5b78:	bls	58c8 <Fantasy_BookReader_parse_json_struct+0x394>
    5b7c:	mov	r1, r6
    5b80:	mov	r3, #7
    5b84:	mov	r2, r4
    5b88:	mov	r0, r5
    5b8c:	bl	0 <flatcc_json_parser_set_error>
    5b90:	mov	r6, r0
    5b94:	b	5b10 <Fantasy_BookReader_parse_json_struct+0x5dc>
    5b98:	ldrb	r3, [r1, #1]
    5b9c:	cmp	r3, #32
    5ba0:	addhi	r1, r1, #1
    5ba4:	bls	580c <Fantasy_BookReader_parse_json_struct+0x2d8>
    5ba8:	b	581c <Fantasy_BookReader_parse_json_struct+0x2e8>
    5bac:	add	r8, r1, #1
    5bb0:	sub	r3, r4, r8
    5bb4:	cmp	r3, #1
    5bb8:	ble	5bcc <Fantasy_BookReader_parse_json_struct+0x698>
    5bbc:	ldrb	r3, [r1, #1]
    5bc0:	cmp	r3, #32
    5bc4:	bhi	5844 <Fantasy_BookReader_parse_json_struct+0x310>
    5bc8:	beq	5be4 <Fantasy_BookReader_parse_json_struct+0x6b0>
    5bcc:	mov	r1, r8
    5bd0:	mov	r2, r4
    5bd4:	mov	r0, r5
    5bd8:	bl	0 <flatcc_json_parser_space_ext>
    5bdc:	mov	r8, r0
    5be0:	b	5844 <Fantasy_BookReader_parse_json_struct+0x310>
    5be4:	ldrb	r3, [r1, #2]
    5be8:	cmp	r3, #32
    5bec:	addhi	r8, r1, #2
    5bf0:	bls	5bcc <Fantasy_BookReader_parse_json_struct+0x698>
    5bf4:	b	5844 <Fantasy_BookReader_parse_json_struct+0x310>
    5bf8:	ldrb	r3, [r6, #2]
    5bfc:	cmp	r3, #32
    5c00:	addhi	r1, r6, #2
    5c04:	bls	5624 <Fantasy_BookReader_parse_json_struct+0xf0>
    5c08:	b	5634 <Fantasy_BookReader_parse_json_struct+0x100>
    5c0c:	mov	r1, r0
    5c10:	mov	r3, #33	; 0x21
    5c14:	mov	r2, r4
    5c18:	mov	r0, r5
    5c1c:	bl	0 <flatcc_json_parser_set_error>
    5c20:	mov	r8, r0
    5c24:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5c28:	add	r1, r1, #1
    5c2c:	mov	r2, r4
    5c30:	mov	r0, r5
    5c34:	bl	1e18 <flatcc_json_parser_space>
    5c38:	mov	r8, r0
    5c3c:	b	55ac <Fantasy_BookReader_parse_json_struct+0x78>
    5c40:	mov	r6, r4
    5c44:	b	55cc <Fantasy_BookReader_parse_json_struct+0x98>

00005c48 <flatcc_json_parser_object_end>:
    5c48:	strd	r4, [sp, #-16]!
    5c4c:	mov	r4, r2
    5c50:	sub	r2, r2, r1
    5c54:	cmp	r2, #1
    5c58:	mov	r5, r0
    5c5c:	str	r6, [sp, #8]
    5c60:	mov	r6, r3
    5c64:	str	lr, [sp, #12]
    5c68:	ble	5c7c <flatcc_json_parser_object_end+0x34>
    5c6c:	ldrb	r3, [r1]
    5c70:	cmp	r3, #32
    5c74:	bhi	5c8c <flatcc_json_parser_object_end+0x44>
    5c78:	beq	5d7c <flatcc_json_parser_object_end+0x134>
    5c7c:	mov	r2, r4
    5c80:	mov	r0, r5
    5c84:	bl	0 <flatcc_json_parser_space_ext>
    5c88:	mov	r1, r0
    5c8c:	cmp	r4, r1
    5c90:	moveq	r3, #0
    5c94:	moveq	r0, r4
    5c98:	streq	r3, [r6]
    5c9c:	beq	5d6c <flatcc_json_parser_object_end+0x124>
    5ca0:	ldrb	r3, [r1]
    5ca4:	cmp	r3, #44	; 0x2c
    5ca8:	beq	5d20 <flatcc_json_parser_object_end+0xd8>
    5cac:	mov	r3, #0
    5cb0:	str	r3, [r6]
    5cb4:	ldrb	r3, [r1]
    5cb8:	cmp	r3, #125	; 0x7d
    5cbc:	beq	5ce0 <flatcc_json_parser_object_end+0x98>
    5cc0:	mov	r2, r4
    5cc4:	mov	r0, r5
    5cc8:	mov	r3, #10
    5ccc:	ldrd	r4, [sp]
    5cd0:	ldr	r6, [sp, #8]
    5cd4:	ldr	lr, [sp, #12]
    5cd8:	add	sp, sp, #16
    5cdc:	b	0 <flatcc_json_parser_set_error>
    5ce0:	add	r0, r1, #1
    5ce4:	sub	r3, r4, r0
    5ce8:	cmp	r3, #1
    5cec:	ble	5d00 <flatcc_json_parser_object_end+0xb8>
    5cf0:	ldrb	r3, [r1, #1]
    5cf4:	cmp	r3, #32
    5cf8:	bhi	5d6c <flatcc_json_parser_object_end+0x124>
    5cfc:	beq	5dc8 <flatcc_json_parser_object_end+0x180>
    5d00:	mov	r2, r4
    5d04:	mov	r1, r0
    5d08:	ldr	r6, [sp, #8]
    5d0c:	mov	r0, r5
    5d10:	ldrd	r4, [sp]
    5d14:	ldr	lr, [sp, #12]
    5d18:	add	sp, sp, #16
    5d1c:	b	0 <flatcc_json_parser_space_ext>
    5d20:	add	r0, r1, #1
    5d24:	sub	r3, r4, r0
    5d28:	cmp	r3, #1
    5d2c:	ble	5d40 <flatcc_json_parser_object_end+0xf8>
    5d30:	ldrb	r3, [r1, #1]
    5d34:	cmp	r3, #32
    5d38:	bhi	5d50 <flatcc_json_parser_object_end+0x108>
    5d3c:	beq	5ddc <flatcc_json_parser_object_end+0x194>
    5d40:	mov	r1, r0
    5d44:	mov	r2, r4
    5d48:	mov	r0, r5
    5d4c:	bl	0 <flatcc_json_parser_space_ext>
    5d50:	cmp	r4, r0
    5d54:	beq	5df0 <flatcc_json_parser_object_end+0x1a8>
    5d58:	ldrb	r3, [r0]
    5d5c:	cmp	r3, #125	; 0x7d
    5d60:	movne	r3, #1
    5d64:	strne	r3, [r6]
    5d68:	beq	5da0 <flatcc_json_parser_object_end+0x158>
    5d6c:	ldrd	r4, [sp]
    5d70:	ldr	r6, [sp, #8]
    5d74:	add	sp, sp, #12
    5d78:	pop	{pc}		; (ldr pc, [sp], #4)
    5d7c:	ldrb	r3, [r1, #1]
    5d80:	cmp	r3, #32
    5d84:	addhi	r1, r1, #1
    5d88:	bhi	5c8c <flatcc_json_parser_object_end+0x44>
    5d8c:	mov	r2, r4
    5d90:	mov	r0, r5
    5d94:	bl	0 <flatcc_json_parser_space_ext>
    5d98:	mov	r1, r0
    5d9c:	b	5c8c <flatcc_json_parser_object_end+0x44>
    5da0:	mov	r3, #0
    5da4:	mov	r2, r4
    5da8:	ldr	lr, [sp, #12]
    5dac:	add	r1, r0, #1
    5db0:	mov	r0, r5
    5db4:	ldrd	r4, [sp]
    5db8:	str	r3, [r6]
    5dbc:	ldr	r6, [sp, #8]
    5dc0:	add	sp, sp, #16
    5dc4:	b	1e18 <flatcc_json_parser_space>
    5dc8:	ldrb	r3, [r1, #2]
    5dcc:	cmp	r3, #32
    5dd0:	addhi	r0, r1, #2
    5dd4:	bls	5d00 <flatcc_json_parser_object_end+0xb8>
    5dd8:	b	5d6c <flatcc_json_parser_object_end+0x124>
    5ddc:	ldrb	r3, [r1, #2]
    5de0:	cmp	r3, #32
    5de4:	addhi	r0, r1, #2
    5de8:	bls	5d40 <flatcc_json_parser_object_end+0xf8>
    5dec:	b	5d50 <flatcc_json_parser_object_end+0x108>
    5df0:	mov	ip, #0
    5df4:	mov	r0, r5
    5df8:	mov	r3, #10
    5dfc:	mov	r2, r4
    5e00:	mov	r1, r4
    5e04:	str	ip, [r6]
    5e08:	b	5ccc <flatcc_json_parser_object_end+0x84>

00005e0c <flatcc_json_parser_array_end>:
    5e0c:	strd	r4, [sp, #-16]!
    5e10:	mov	r4, r2
    5e14:	sub	r2, r2, r1
    5e18:	cmp	r2, #1
    5e1c:	mov	r5, r0
    5e20:	str	r6, [sp, #8]
    5e24:	mov	r6, r3
    5e28:	str	lr, [sp, #12]
    5e2c:	ble	5e40 <flatcc_json_parser_array_end+0x34>
    5e30:	ldrb	r3, [r1]
    5e34:	cmp	r3, #32
    5e38:	bhi	5e50 <flatcc_json_parser_array_end+0x44>
    5e3c:	beq	5f40 <flatcc_json_parser_array_end+0x134>
    5e40:	mov	r2, r4
    5e44:	mov	r0, r5
    5e48:	bl	0 <flatcc_json_parser_space_ext>
    5e4c:	mov	r1, r0
    5e50:	cmp	r4, r1
    5e54:	moveq	r3, #0
    5e58:	moveq	r0, r4
    5e5c:	streq	r3, [r6]
    5e60:	beq	5f30 <flatcc_json_parser_array_end+0x124>
    5e64:	ldrb	r3, [r1]
    5e68:	cmp	r3, #44	; 0x2c
    5e6c:	beq	5ee4 <flatcc_json_parser_array_end+0xd8>
    5e70:	mov	r3, #0
    5e74:	str	r3, [r6]
    5e78:	ldrb	r3, [r1]
    5e7c:	cmp	r3, #93	; 0x5d
    5e80:	beq	5ea4 <flatcc_json_parser_array_end+0x98>
    5e84:	mov	r2, r4
    5e88:	mov	r0, r5
    5e8c:	mov	r3, #9
    5e90:	ldrd	r4, [sp]
    5e94:	ldr	r6, [sp, #8]
    5e98:	ldr	lr, [sp, #12]
    5e9c:	add	sp, sp, #16
    5ea0:	b	0 <flatcc_json_parser_set_error>
    5ea4:	add	r0, r1, #1
    5ea8:	sub	r3, r4, r0
    5eac:	cmp	r3, #1
    5eb0:	ble	5ec4 <flatcc_json_parser_array_end+0xb8>
    5eb4:	ldrb	r3, [r1, #1]
    5eb8:	cmp	r3, #32
    5ebc:	bhi	5f30 <flatcc_json_parser_array_end+0x124>
    5ec0:	beq	5f8c <flatcc_json_parser_array_end+0x180>
    5ec4:	mov	r2, r4
    5ec8:	mov	r1, r0
    5ecc:	ldr	r6, [sp, #8]
    5ed0:	mov	r0, r5
    5ed4:	ldrd	r4, [sp]
    5ed8:	ldr	lr, [sp, #12]
    5edc:	add	sp, sp, #16
    5ee0:	b	0 <flatcc_json_parser_space_ext>
    5ee4:	add	r0, r1, #1
    5ee8:	sub	r3, r4, r0
    5eec:	cmp	r3, #1
    5ef0:	ble	5f04 <flatcc_json_parser_array_end+0xf8>
    5ef4:	ldrb	r3, [r1, #1]
    5ef8:	cmp	r3, #32
    5efc:	bhi	5f14 <flatcc_json_parser_array_end+0x108>
    5f00:	beq	5fa0 <flatcc_json_parser_array_end+0x194>
    5f04:	mov	r1, r0
    5f08:	mov	r2, r4
    5f0c:	mov	r0, r5
    5f10:	bl	0 <flatcc_json_parser_space_ext>
    5f14:	cmp	r4, r0
    5f18:	beq	5fb4 <flatcc_json_parser_array_end+0x1a8>
    5f1c:	ldrb	r3, [r0]
    5f20:	cmp	r3, #93	; 0x5d
    5f24:	movne	r3, #1
    5f28:	strne	r3, [r6]
    5f2c:	beq	5f64 <flatcc_json_parser_array_end+0x158>
    5f30:	ldrd	r4, [sp]
    5f34:	ldr	r6, [sp, #8]
    5f38:	add	sp, sp, #12
    5f3c:	pop	{pc}		; (ldr pc, [sp], #4)
    5f40:	ldrb	r3, [r1, #1]
    5f44:	cmp	r3, #32
    5f48:	addhi	r1, r1, #1
    5f4c:	bhi	5e50 <flatcc_json_parser_array_end+0x44>
    5f50:	mov	r2, r4
    5f54:	mov	r0, r5
    5f58:	bl	0 <flatcc_json_parser_space_ext>
    5f5c:	mov	r1, r0
    5f60:	b	5e50 <flatcc_json_parser_array_end+0x44>
    5f64:	mov	r3, #0
    5f68:	mov	r2, r4
    5f6c:	ldr	lr, [sp, #12]
    5f70:	add	r1, r0, #1
    5f74:	mov	r0, r5
    5f78:	ldrd	r4, [sp]
    5f7c:	str	r3, [r6]
    5f80:	ldr	r6, [sp, #8]
    5f84:	add	sp, sp, #16
    5f88:	b	1e18 <flatcc_json_parser_space>
    5f8c:	ldrb	r3, [r1, #2]
    5f90:	cmp	r3, #32
    5f94:	addhi	r0, r1, #2
    5f98:	bls	5ec4 <flatcc_json_parser_array_end+0xb8>
    5f9c:	b	5f30 <flatcc_json_parser_array_end+0x124>
    5fa0:	ldrb	r3, [r1, #2]
    5fa4:	cmp	r3, #32
    5fa8:	addhi	r0, r1, #2
    5fac:	bls	5f04 <flatcc_json_parser_array_end+0xf8>
    5fb0:	b	5f14 <flatcc_json_parser_array_end+0x108>
    5fb4:	mov	ip, #0
    5fb8:	mov	r0, r5
    5fbc:	mov	r3, #9
    5fc0:	mov	r2, r4
    5fc4:	mov	r1, r4
    5fc8:	str	ip, [r6]
    5fcc:	b	5e90 <flatcc_json_parser_array_end+0x84>

00005fd0 <monster_test_local_Fantasy_json_parser_enum>:
    5fd0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5fd4:	mov	r4, r1
    5fd8:	mov	r5, r0
    5fdc:	strd	r6, [sp, #8]
    5fe0:	strd	r8, [sp, #16]
    5fe4:	strd	sl, [sp, #24]
    5fe8:	mov	sl, r2
    5fec:	mov	fp, r3
    5ff0:	str	lr, [sp, #32]
    5ff4:	sub	sp, sp, #12
    5ff8:	ldrd	r2, [sp, #48]	; 0x30
    5ffc:	strd	r2, [sp]
    6000:	sub	r2, sl, r1
    6004:	cmp	r2, #8
    6008:	bhi	603c <monster_test_local_Fantasy_json_parser_enum+0x6c>
    600c:	sub	r2, r2, #1
    6010:	cmp	r2, #7
    6014:	ldrls	pc, [pc, r2, lsl #2]
    6018:	b	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    601c:	.word	0x00006134
    6020:	.word	0x00006140
    6024:	.word	0x0000614c
    6028:	.word	0x00006158
    602c:	.word	0x00006164
    6030:	.word	0x00006170
    6034:	.word	0x0000617c
    6038:	.word	0x0000603c
    603c:	ldrb	r6, [r4, #7]
    6040:	mov	r7, #0
    6044:	mov	r3, r7
    6048:	ldrb	r0, [r4, #6]
    604c:	orr	r2, r6, r0, lsl #8
    6050:	ldrb	r0, [r4, #5]
    6054:	orr	r2, r2, r0, lsl #16
    6058:	ldrb	r0, [r4, #4]
    605c:	orr	r2, r2, r0, lsl #24
    6060:	ldrb	r8, [r4, #3]
    6064:	orr	r3, r3, r8
    6068:	ldrb	r6, [r4, #2]
    606c:	orr	r3, r3, r6, lsl #8
    6070:	ldrb	r6, [r4, #1]
    6074:	orr	r3, r3, r6, lsl #16
    6078:	ldrb	r8, [r4]
    607c:	add	r7, pc, #260	; 0x104
    6080:	ldrd	r6, [r7]
    6084:	orr	r1, r3, r8, lsl #24
    6088:	mov	r8, #0
    608c:	cmp	r1, r7
    6090:	cmpeq	r2, r6
    6094:	bne	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    6098:	add	r6, r4, #8
    609c:	mov	r1, sl
    60a0:	mov	r0, r6
    60a4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    60a8:	and	r3, r1, #-16777216	; 0xff000000
    60ac:	cmp	r3, #1912602624	; 0x72000000
    60b0:	cmpeq	r8, #0
    60b4:	bne	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    60b8:	sub	r3, sl, r6
    60bc:	cmp	r3, #1
    60c0:	ble	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    60c4:	ldrb	r3, [r4, #9]
    60c8:	cmp	r3, #46	; 0x2e
    60cc:	bne	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    60d0:	add	r1, r4, #10
    60d4:	cmp	r6, r1
    60d8:	beq	6114 <monster_test_local_Fantasy_json_parser_enum+0x144>
    60dc:	ldm	sp, {r0, ip}
    60e0:	mov	r3, fp
    60e4:	mov	r2, sl
    60e8:	str	r0, [sp, #48]	; 0x30
    60ec:	mov	r0, r5
    60f0:	str	ip, [sp, #52]	; 0x34
    60f4:	add	sp, sp, #12
    60f8:	ldrd	r4, [sp]
    60fc:	ldrd	r6, [sp, #8]
    6100:	ldrd	r8, [sp, #16]
    6104:	ldrd	sl, [sp, #24]
    6108:	ldr	lr, [sp, #32]
    610c:	add	sp, sp, #36	; 0x24
    6110:	b	11cc <Fantasy_Character_parse_json_enum>
    6114:	mov	r0, r4
    6118:	add	sp, sp, #12
    611c:	ldrd	r4, [sp]
    6120:	ldrd	r6, [sp, #8]
    6124:	ldrd	r8, [sp, #16]
    6128:	ldrd	sl, [sp, #24]
    612c:	add	sp, sp, #32
    6130:	pop	{pc}		; (ldr pc, [sp], #4)
    6134:	mov	r2, #0
    6138:	mov	r3, r2
    613c:	b	6078 <monster_test_local_Fantasy_json_parser_enum+0xa8>
    6140:	mov	r2, #0
    6144:	mov	r3, r2
    6148:	b	6070 <monster_test_local_Fantasy_json_parser_enum+0xa0>
    614c:	mov	r2, #0
    6150:	mov	r3, r2
    6154:	b	6068 <monster_test_local_Fantasy_json_parser_enum+0x98>
    6158:	mov	r2, #0
    615c:	mov	r3, r2
    6160:	b	6060 <monster_test_local_Fantasy_json_parser_enum+0x90>
    6164:	mov	r2, #0
    6168:	mov	r3, r2
    616c:	b	6058 <monster_test_local_Fantasy_json_parser_enum+0x88>
    6170:	mov	r2, #0
    6174:	mov	r3, r2
    6178:	b	6050 <monster_test_local_Fantasy_json_parser_enum+0x80>
    617c:	mov	r6, #0
    6180:	mov	r7, #0
    6184:	b	6044 <monster_test_local_Fantasy_json_parser_enum+0x74>
    6188:	.word	0x61637465
    618c:	.word	0x43686172

00006190 <MyGame_Example_Test_parse_json_struct_inline>:
    6190:	cmp	r1, r2
    6194:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6198:	strd	r6, [sp, #8]
    619c:	mov	r6, r2
    61a0:	mov	r7, r0
    61a4:	strd	r8, [sp, #16]
    61a8:	strd	sl, [sp, #24]
    61ac:	str	lr, [sp, #32]
    61b0:	sub	sp, sp, #28
    61b4:	beq	61c8 <MyGame_Example_Test_parse_json_struct_inline+0x38>
    61b8:	mov	fp, r3
    61bc:	ldrb	r3, [r1]
    61c0:	cmp	r3, #123	; 0x7b
    61c4:	beq	61fc <MyGame_Example_Test_parse_json_struct_inline+0x6c>
    61c8:	mov	r2, r6
    61cc:	mov	r0, r7
    61d0:	mov	r3, #21
    61d4:	bl	0 <flatcc_json_parser_set_error>
    61d8:	mov	r5, r0
    61dc:	mov	r0, r5
    61e0:	add	sp, sp, #28
    61e4:	ldrd	r4, [sp]
    61e8:	ldrd	r6, [sp, #8]
    61ec:	ldrd	r8, [sp, #16]
    61f0:	ldrd	sl, [sp, #24]
    61f4:	add	sp, sp, #32
    61f8:	pop	{pc}		; (ldr pc, [sp], #4)
    61fc:	add	r4, r1, #1
    6200:	sub	r3, r2, r4
    6204:	cmp	r3, #1
    6208:	ble	621c <MyGame_Example_Test_parse_json_struct_inline+0x8c>
    620c:	ldrb	r3, [r1, #1]
    6210:	cmp	r3, #32
    6214:	bhi	6230 <MyGame_Example_Test_parse_json_struct_inline+0xa0>
    6218:	beq	68f4 <MyGame_Example_Test_parse_json_struct_inline+0x764>
    621c:	mov	r1, r4
    6220:	mov	r2, r6
    6224:	mov	r0, r7
    6228:	bl	0 <flatcc_json_parser_space_ext>
    622c:	mov	r4, r0
    6230:	cmp	r6, r4
    6234:	beq	6244 <MyGame_Example_Test_parse_json_struct_inline+0xb4>
    6238:	ldrb	r3, [r4]
    623c:	cmp	r3, #125	; 0x7d
    6240:	beq	6908 <MyGame_Example_Test_parse_json_struct_inline+0x778>
    6244:	cmp	r6, r4
    6248:	beq	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    624c:	ldrb	r3, [r4]
    6250:	cmp	r3, #34	; 0x22
    6254:	moveq	r3, #0
    6258:	addeq	r4, r4, #1
    625c:	streq	r3, [r7, #12]
    6260:	beq	6274 <MyGame_Example_Test_parse_json_struct_inline+0xe4>
    6264:	cmp	r3, #46	; 0x2e
    6268:	movne	r3, #1
    626c:	strne	r3, [r7, #12]
    6270:	beq	66b0 <MyGame_Example_Test_parse_json_struct_inline+0x520>
    6274:	sub	r2, r6, r4
    6278:	cmp	r2, #8
    627c:	bls	6454 <MyGame_Example_Test_parse_json_struct_inline+0x2c4>
    6280:	mov	r1, #0
    6284:	mov	r3, r1
    6288:	ldrb	r0, [r4, #3]
    628c:	orr	r3, r3, r0
    6290:	ldrb	r0, [r4, #2]
    6294:	orr	r3, r3, r0, lsl #8
    6298:	ldrb	r0, [r4, #1]
    629c:	orr	r3, r3, r0, lsl #16
    62a0:	ldrb	r0, [r4]
    62a4:	mov	r8, #0
    62a8:	orr	r3, r3, r0, lsl #24
    62ac:	and	r9, r3, #-16777216	; 0xff000000
    62b0:	cmp	r9, #1644167168	; 0x62000000
    62b4:	cmpeq	r8, #0
    62b8:	beq	64a4 <MyGame_Example_Test_parse_json_struct_inline+0x314>
    62bc:	cmp	r9, #1627389952	; 0x61000000
    62c0:	cmpeq	r8, #0
    62c4:	bne	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    62c8:	cmp	r2, #1
    62cc:	ble	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    62d0:	ldr	r2, [r7, #12]
    62d4:	ldrb	r3, [r4, #1]
    62d8:	cmp	r2, #0
    62dc:	beq	6690 <MyGame_Example_Test_parse_json_struct_inline+0x500>
    62e0:	cmp	r3, #58	; 0x3a
    62e4:	cmpne	r3, #32
    62e8:	movhi	r3, #1
    62ec:	movls	r3, #0
    62f0:	bhi	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    62f4:	add	r1, r4, #1
    62f8:	str	r3, [r7, #12]
    62fc:	sub	r3, r6, r1
    6300:	cmp	r3, #1
    6304:	ble	6318 <MyGame_Example_Test_parse_json_struct_inline+0x188>
    6308:	ldrb	r3, [r1]
    630c:	cmp	r3, #32
    6310:	bhi	6328 <MyGame_Example_Test_parse_json_struct_inline+0x198>
    6314:	beq	6820 <MyGame_Example_Test_parse_json_struct_inline+0x690>
    6318:	mov	r2, r6
    631c:	mov	r0, r7
    6320:	bl	0 <flatcc_json_parser_space_ext>
    6324:	mov	r1, r0
    6328:	cmp	r6, r1
    632c:	beq	633c <MyGame_Example_Test_parse_json_struct_inline+0x1ac>
    6330:	ldrb	r3, [r1]
    6334:	cmp	r3, #58	; 0x3a
    6338:	beq	687c <MyGame_Example_Test_parse_json_struct_inline+0x6ec>
    633c:	mov	r3, #4
    6340:	mov	r2, r6
    6344:	mov	r0, r7
    6348:	bl	0 <flatcc_json_parser_set_error>
    634c:	mov	sl, r0
    6350:	cmp	sl, r4
    6354:	beq	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    6358:	mov	r3, #0
    635c:	mov	r0, #0
    6360:	mov	r1, #0
    6364:	cmp	r6, sl
    6368:	strh	r3, [sp, #10]
    636c:	str	r3, [sp, #12]
    6370:	strd	r0, [sp, #16]
    6374:	beq	66a8 <MyGame_Example_Test_parse_json_struct_inline+0x518>
    6378:	add	r0, sp, #16
    637c:	add	r3, sp, #12
    6380:	mov	r2, r6
    6384:	mov	r1, sl
    6388:	str	r0, [sp]
    638c:	mov	r0, r7
    6390:	bl	0 <flatcc_json_parser_integer>
    6394:	cmp	sl, r0
    6398:	mov	r5, r0
    639c:	bne	670c <MyGame_Example_Test_parse_json_struct_inline+0x57c>
    63a0:	add	ip, sp, #10
    63a4:	ldr	r3, [pc, #1396]	; 6920 <MyGame_Example_Test_parse_json_struct_inline+0x790>
    63a8:	mov	r2, r6
    63ac:	mov	r1, r5
    63b0:	mov	r0, r7
    63b4:	str	ip, [sp]
    63b8:	bl	4bb0 <flatcc_json_parser_symbolic_int16>
    63bc:	cmp	r6, r0
    63c0:	cmpne	r0, r5
    63c4:	beq	68d8 <MyGame_Example_Test_parse_json_struct_inline+0x748>
    63c8:	ldrsh	r2, [sp, #10]
    63cc:	mov	r5, r0
    63d0:	strh	r2, [fp]
    63d4:	sub	r3, r6, r5
    63d8:	cmp	r3, #1
    63dc:	ble	63f0 <MyGame_Example_Test_parse_json_struct_inline+0x260>
    63e0:	ldrb	r3, [r5]
    63e4:	cmp	r3, #32
    63e8:	bhi	6404 <MyGame_Example_Test_parse_json_struct_inline+0x274>
    63ec:	beq	65ec <MyGame_Example_Test_parse_json_struct_inline+0x45c>
    63f0:	mov	r1, r5
    63f4:	mov	r2, r6
    63f8:	mov	r0, r7
    63fc:	bl	0 <flatcc_json_parser_space_ext>
    6400:	mov	r5, r0
    6404:	cmp	r6, r5
    6408:	beq	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    640c:	ldrb	r3, [r5]
    6410:	cmp	r3, #44	; 0x2c
    6414:	beq	6600 <MyGame_Example_Test_parse_json_struct_inline+0x470>
    6418:	cmp	r3, #125	; 0x7d
    641c:	beq	65b4 <MyGame_Example_Test_parse_json_struct_inline+0x424>
    6420:	mov	r1, r5
    6424:	mov	r2, r6
    6428:	mov	r0, r7
    642c:	mov	r3, #10
    6430:	bl	0 <flatcc_json_parser_set_error>
    6434:	mov	r5, r0
    6438:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    643c:	mov	r1, r4
    6440:	mov	r2, r6
    6444:	mov	r0, r7
    6448:	bl	0 <flatcc_json_parser_unmatched_symbol>
    644c:	mov	r5, r0
    6450:	b	63d4 <MyGame_Example_Test_parse_json_struct_inline+0x244>
    6454:	sub	r3, r2, #1
    6458:	cmp	r3, #7
    645c:	ldrls	pc, [pc, r3, lsl #2]
    6460:	b	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    6464:	.word	0x0000649c
    6468:	.word	0x00006494
    646c:	.word	0x0000648c
    6470:	.word	0x00006484
    6474:	.word	0x00006484
    6478:	.word	0x00006484
    647c:	.word	0x00006280
    6480:	.word	0x00006280
    6484:	mov	r3, #0
    6488:	b	6288 <MyGame_Example_Test_parse_json_struct_inline+0xf8>
    648c:	mov	r3, #0
    6490:	b	6290 <MyGame_Example_Test_parse_json_struct_inline+0x100>
    6494:	mov	r3, #0
    6498:	b	6298 <MyGame_Example_Test_parse_json_struct_inline+0x108>
    649c:	mov	r3, #0
    64a0:	b	62a0 <MyGame_Example_Test_parse_json_struct_inline+0x110>
    64a4:	cmp	r2, #1
    64a8:	ble	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    64ac:	ldr	r2, [r7, #12]
    64b0:	ldrb	r3, [r4, #1]
    64b4:	cmp	r2, r8
    64b8:	beq	6680 <MyGame_Example_Test_parse_json_struct_inline+0x4f0>
    64bc:	cmp	r3, #58	; 0x3a
    64c0:	cmpne	r3, #32
    64c4:	movhi	r3, #1
    64c8:	movls	r3, #0
    64cc:	bhi	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    64d0:	add	r1, r4, #1
    64d4:	str	r3, [r7, #12]
    64d8:	sub	r3, r6, r1
    64dc:	cmp	r3, #1
    64e0:	ble	64f4 <MyGame_Example_Test_parse_json_struct_inline+0x364>
    64e4:	ldrb	r3, [r1]
    64e8:	cmp	r3, #32
    64ec:	bhi	6504 <MyGame_Example_Test_parse_json_struct_inline+0x374>
    64f0:	beq	680c <MyGame_Example_Test_parse_json_struct_inline+0x67c>
    64f4:	mov	r2, r6
    64f8:	mov	r0, r7
    64fc:	bl	0 <flatcc_json_parser_space_ext>
    6500:	mov	r1, r0
    6504:	cmp	r6, r1
    6508:	beq	6518 <MyGame_Example_Test_parse_json_struct_inline+0x388>
    650c:	ldrb	r3, [r1]
    6510:	cmp	r3, #58	; 0x3a
    6514:	beq	6834 <MyGame_Example_Test_parse_json_struct_inline+0x6a4>
    6518:	mov	r3, #4
    651c:	mov	r2, r6
    6520:	mov	r0, r7
    6524:	bl	0 <flatcc_json_parser_set_error>
    6528:	mov	sl, r0
    652c:	cmp	sl, r4
    6530:	beq	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    6534:	mov	r3, #0
    6538:	mov	r0, #0
    653c:	mov	r1, #0
    6540:	cmp	r6, sl
    6544:	strb	r3, [sp, #10]
    6548:	str	r3, [sp, #12]
    654c:	strd	r0, [sp, #16]
    6550:	beq	66a0 <MyGame_Example_Test_parse_json_struct_inline+0x510>
    6554:	add	r0, sp, #16
    6558:	add	r3, sp, #12
    655c:	mov	r2, r6
    6560:	mov	r1, sl
    6564:	str	r0, [sp]
    6568:	mov	r0, r7
    656c:	bl	0 <flatcc_json_parser_integer>
    6570:	cmp	sl, r0
    6574:	mov	r5, r0
    6578:	bne	66cc <MyGame_Example_Test_parse_json_struct_inline+0x53c>
    657c:	add	ip, sp, #10
    6580:	ldr	r3, [pc, #924]	; 6924 <MyGame_Example_Test_parse_json_struct_inline+0x794>
    6584:	mov	r2, r6
    6588:	mov	r1, r5
    658c:	mov	r0, r7
    6590:	str	ip, [sp]
    6594:	bl	5060 <flatcc_json_parser_symbolic_int8>
    6598:	cmp	r6, r0
    659c:	cmpne	r0, r5
    65a0:	beq	68d8 <MyGame_Example_Test_parse_json_struct_inline+0x748>
    65a4:	ldrsb	r2, [sp, #10]
    65a8:	mov	r5, r0
    65ac:	strb	r2, [fp, #2]
    65b0:	b	63d4 <MyGame_Example_Test_parse_json_struct_inline+0x244>
    65b4:	add	r1, r5, #1
    65b8:	sub	r3, r6, r1
    65bc:	cmp	r3, #1
    65c0:	ble	65d8 <MyGame_Example_Test_parse_json_struct_inline+0x448>
    65c4:	ldrb	r3, [r5, #1]
    65c8:	cmp	r3, #32
    65cc:	movhi	r5, r1
    65d0:	bhi	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    65d4:	beq	6758 <MyGame_Example_Test_parse_json_struct_inline+0x5c8>
    65d8:	mov	r2, r6
    65dc:	mov	r0, r7
    65e0:	bl	0 <flatcc_json_parser_space_ext>
    65e4:	mov	r5, r0
    65e8:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    65ec:	ldrb	r3, [r5, #1]
    65f0:	cmp	r3, #32
    65f4:	addhi	r5, r5, #1
    65f8:	bls	63f0 <MyGame_Example_Test_parse_json_struct_inline+0x260>
    65fc:	b	6404 <MyGame_Example_Test_parse_json_struct_inline+0x274>
    6600:	add	r4, r5, #1
    6604:	sub	r3, r6, r4
    6608:	cmp	r3, #1
    660c:	ble	6620 <MyGame_Example_Test_parse_json_struct_inline+0x490>
    6610:	ldrb	r3, [r5, #1]
    6614:	cmp	r3, #32
    6618:	bhi	6634 <MyGame_Example_Test_parse_json_struct_inline+0x4a4>
    661c:	beq	67d8 <MyGame_Example_Test_parse_json_struct_inline+0x648>
    6620:	mov	r1, r4
    6624:	mov	r2, r6
    6628:	mov	r0, r7
    662c:	bl	0 <flatcc_json_parser_space_ext>
    6630:	mov	r4, r0
    6634:	cmp	r6, r4
    6638:	beq	67f0 <MyGame_Example_Test_parse_json_struct_inline+0x660>
    663c:	ldrb	r3, [r4]
    6640:	cmp	r3, #125	; 0x7d
    6644:	bne	6244 <MyGame_Example_Test_parse_json_struct_inline+0xb4>
    6648:	add	r5, r4, #1
    664c:	sub	r3, r6, r5
    6650:	cmp	r3, #1
    6654:	ble	6668 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    6658:	ldrb	r3, [r4, #1]
    665c:	cmp	r3, #32
    6660:	bhi	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    6664:	beq	68c4 <MyGame_Example_Test_parse_json_struct_inline+0x734>
    6668:	mov	r1, r5
    666c:	mov	r2, r6
    6670:	mov	r0, r7
    6674:	bl	0 <flatcc_json_parser_space_ext>
    6678:	mov	r5, r0
    667c:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    6680:	cmp	r3, #34	; 0x22
    6684:	bne	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    6688:	add	r1, r4, #2
    668c:	b	64d8 <MyGame_Example_Test_parse_json_struct_inline+0x348>
    6690:	cmp	r3, #34	; 0x22
    6694:	bne	643c <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    6698:	add	r1, r4, #2
    669c:	b	62fc <MyGame_Example_Test_parse_json_struct_inline+0x16c>
    66a0:	mov	r5, r6
    66a4:	b	657c <MyGame_Example_Test_parse_json_struct_inline+0x3ec>
    66a8:	mov	r5, r6
    66ac:	b	63a0 <MyGame_Example_Test_parse_json_struct_inline+0x210>
    66b0:	mov	r1, r4
    66b4:	mov	r3, #5
    66b8:	mov	r2, r6
    66bc:	mov	r0, r7
    66c0:	bl	0 <flatcc_json_parser_set_error>
    66c4:	mov	r4, r0
    66c8:	b	6274 <MyGame_Example_Test_parse_json_struct_inline+0xe4>
    66cc:	ldr	r1, [sp, #12]
    66d0:	ldrd	r2, [sp, #16]
    66d4:	cmp	r1, #0
    66d8:	beq	676c <MyGame_Example_Test_parse_json_struct_inline+0x5dc>
    66dc:	cmp	r3, #0
    66e0:	cmpeq	r2, #128	; 0x80
    66e4:	rsbls	r2, r2, #0
    66e8:	sxtbls	r2, r2
    66ec:	bls	65ac <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    66f0:	mov	r1, r0
    66f4:	mov	r3, #8
    66f8:	mov	r2, r6
    66fc:	mov	r0, r7
    6700:	bl	0 <flatcc_json_parser_set_error>
    6704:	mov	r5, r0
    6708:	b	6794 <MyGame_Example_Test_parse_json_struct_inline+0x604>
    670c:	ldr	r1, [sp, #12]
    6710:	ldrd	r2, [sp, #16]
    6714:	cmp	r1, #0
    6718:	beq	67a4 <MyGame_Example_Test_parse_json_struct_inline+0x614>
    671c:	cmp	r3, #0
    6720:	cmpeq	r2, #32768	; 0x8000
    6724:	rsbls	r2, r2, #0
    6728:	sxthls	r2, r2
    672c:	bls	63d0 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    6730:	mov	r1, r0
    6734:	mov	r3, #8
    6738:	mov	r2, r6
    673c:	mov	r0, r7
    6740:	bl	0 <flatcc_json_parser_set_error>
    6744:	mov	r5, r0
    6748:	cmp	sl, r5
    674c:	ldrshne	r2, [sp, #10]
    6750:	bne	63d0 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    6754:	b	63a0 <MyGame_Example_Test_parse_json_struct_inline+0x210>
    6758:	ldrb	r3, [r5, #2]
    675c:	cmp	r3, #32
    6760:	addhi	r5, r5, #2
    6764:	bls	65d8 <MyGame_Example_Test_parse_json_struct_inline+0x448>
    6768:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    676c:	cmp	r3, #0
    6770:	cmpeq	r2, #127	; 0x7f
    6774:	sxtbls	r2, r2
    6778:	bls	65ac <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    677c:	mov	r1, r0
    6780:	mov	r3, #7
    6784:	mov	r2, r6
    6788:	mov	r0, r7
    678c:	bl	0 <flatcc_json_parser_set_error>
    6790:	mov	r5, r0
    6794:	cmp	sl, r5
    6798:	ldrsbne	r2, [sp, #10]
    679c:	bne	65ac <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    67a0:	b	657c <MyGame_Example_Test_parse_json_struct_inline+0x3ec>
    67a4:	mov	r1, #0
    67a8:	movw	r0, #32767	; 0x7fff
    67ac:	cmp	r3, r1
    67b0:	cmpeq	r2, r0
    67b4:	sxthls	r2, r2
    67b8:	bls	63d0 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    67bc:	mov	r1, r5
    67c0:	mov	r3, #7
    67c4:	mov	r2, r6
    67c8:	mov	r0, r7
    67cc:	bl	0 <flatcc_json_parser_set_error>
    67d0:	mov	r5, r0
    67d4:	b	6748 <MyGame_Example_Test_parse_json_struct_inline+0x5b8>
    67d8:	ldrb	r3, [r5, #2]
    67dc:	cmp	r3, #32
    67e0:	addhi	r4, r5, #2
    67e4:	bls	6620 <MyGame_Example_Test_parse_json_struct_inline+0x490>
    67e8:	cmp	r6, r4
    67ec:	bne	663c <MyGame_Example_Test_parse_json_struct_inline+0x4ac>
    67f0:	mov	r0, r7
    67f4:	mov	r3, #10
    67f8:	mov	r2, r6
    67fc:	mov	r1, r6
    6800:	bl	0 <flatcc_json_parser_set_error>
    6804:	mov	r5, r0
    6808:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    680c:	ldrb	r3, [r1, #1]
    6810:	cmp	r3, #32
    6814:	addhi	r1, r1, #1
    6818:	bls	64f4 <MyGame_Example_Test_parse_json_struct_inline+0x364>
    681c:	b	6504 <MyGame_Example_Test_parse_json_struct_inline+0x374>
    6820:	ldrb	r3, [r1, #1]
    6824:	cmp	r3, #32
    6828:	addhi	r1, r1, #1
    682c:	bls	6318 <MyGame_Example_Test_parse_json_struct_inline+0x188>
    6830:	b	6328 <MyGame_Example_Test_parse_json_struct_inline+0x198>
    6834:	add	sl, r1, #1
    6838:	sub	r3, r6, sl
    683c:	cmp	r3, #1
    6840:	ble	6864 <MyGame_Example_Test_parse_json_struct_inline+0x6d4>
    6844:	ldrb	r3, [r1, #1]
    6848:	cmp	r3, #32
    684c:	bhi	652c <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    6850:	bne	6864 <MyGame_Example_Test_parse_json_struct_inline+0x6d4>
    6854:	ldrb	r3, [r1, #2]
    6858:	cmp	r3, #32
    685c:	addhi	sl, r1, #2
    6860:	bhi	652c <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    6864:	mov	r1, sl
    6868:	mov	r2, r6
    686c:	mov	r0, r7
    6870:	bl	0 <flatcc_json_parser_space_ext>
    6874:	mov	sl, r0
    6878:	b	652c <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    687c:	add	sl, r1, #1
    6880:	sub	r3, r6, sl
    6884:	cmp	r3, #1
    6888:	ble	68ac <MyGame_Example_Test_parse_json_struct_inline+0x71c>
    688c:	ldrb	r3, [r1, #1]
    6890:	cmp	r3, #32
    6894:	bhi	6350 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    6898:	bne	68ac <MyGame_Example_Test_parse_json_struct_inline+0x71c>
    689c:	ldrb	r3, [r1, #2]
    68a0:	cmp	r3, #32
    68a4:	addhi	sl, r1, #2
    68a8:	bhi	6350 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    68ac:	mov	r1, sl
    68b0:	mov	r2, r6
    68b4:	mov	r0, r7
    68b8:	bl	0 <flatcc_json_parser_space_ext>
    68bc:	mov	sl, r0
    68c0:	b	6350 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    68c4:	ldrb	r3, [r4, #2]
    68c8:	cmp	r3, #32
    68cc:	addhi	r5, r4, #2
    68d0:	bls	6668 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    68d4:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    68d8:	mov	r1, r0
    68dc:	mov	r2, r6
    68e0:	mov	r0, r7
    68e4:	mov	r3, #33	; 0x21
    68e8:	bl	0 <flatcc_json_parser_set_error>
    68ec:	mov	r5, r0
    68f0:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    68f4:	ldrb	r3, [r1, #2]
    68f8:	cmp	r3, #32
    68fc:	addhi	r4, r1, #2
    6900:	bls	621c <MyGame_Example_Test_parse_json_struct_inline+0x8c>
    6904:	b	6230 <MyGame_Example_Test_parse_json_struct_inline+0xa0>
    6908:	mov	r2, r6
    690c:	add	r1, r4, #1
    6910:	mov	r0, r7
    6914:	bl	1e18 <flatcc_json_parser_space>
    6918:	mov	r5, r0
    691c:	b	61dc <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    6920:	.word	0x00000018
    6924:	.word	0x0000000c

00006928 <MyGame_Example2_Monster_parse_json_table>:
    6928:	strd	r4, [sp, #-28]!	; 0xffffffe4
    692c:	mov	r4, r1
    6930:	mov	r5, r2
    6934:	strd	r6, [sp, #8]
    6938:	mov	r6, r0
    693c:	strd	r8, [sp, #16]
    6940:	mov	r8, r3
    6944:	mov	r3, #0
    6948:	mov	r1, r3
    694c:	str	lr, [sp, #24]
    6950:	sub	sp, sp, #12
    6954:	ldr	r0, [r0]
    6958:	str	r3, [r8]
    695c:	bl	0 <flatcc_builder_start_table>
    6960:	cmp	r0, #0
    6964:	beq	6994 <MyGame_Example2_Monster_parse_json_table+0x6c>
    6968:	mov	r2, r5
    696c:	mov	r1, r4
    6970:	mov	r0, r6
    6974:	mov	r3, #33	; 0x21
    6978:	bl	0 <flatcc_json_parser_set_error>
    697c:	add	sp, sp, #12
    6980:	ldrd	r4, [sp]
    6984:	ldrd	r6, [sp, #8]
    6988:	ldrd	r8, [sp, #16]
    698c:	add	sp, sp, #24
    6990:	pop	{pc}		; (ldr pc, [sp], #4)
    6994:	cmp	r4, r5
    6998:	beq	69a8 <MyGame_Example2_Monster_parse_json_table+0x80>
    699c:	ldrb	r3, [r4]
    69a0:	cmp	r3, #123	; 0x7b
    69a4:	beq	6a7c <MyGame_Example2_Monster_parse_json_table+0x154>
    69a8:	mov	ip, #0
    69ac:	mov	r1, r4
    69b0:	mov	r3, #21
    69b4:	mov	r2, r5
    69b8:	mov	r0, r6
    69bc:	str	ip, [sp, #4]
    69c0:	bl	0 <flatcc_json_parser_set_error>
    69c4:	mov	r4, r0
    69c8:	ldr	r3, [sp, #4]
    69cc:	cmp	r3, #0
    69d0:	beq	6a38 <MyGame_Example2_Monster_parse_json_table+0x110>
    69d4:	mov	r7, #1
    69d8:	mov	r9, #0
    69dc:	cmp	r5, r4
    69e0:	beq	6a04 <MyGame_Example2_Monster_parse_json_table+0xdc>
    69e4:	ldrb	r3, [r4]
    69e8:	cmp	r3, #34	; 0x22
    69ec:	addeq	r4, r4, #1
    69f0:	streq	r9, [r6, #12]
    69f4:	beq	6a04 <MyGame_Example2_Monster_parse_json_table+0xdc>
    69f8:	cmp	r3, #46	; 0x2e
    69fc:	strne	r7, [r6, #12]
    6a00:	beq	6a60 <MyGame_Example2_Monster_parse_json_table+0x138>
    6a04:	mov	r1, r4
    6a08:	mov	r2, r5
    6a0c:	mov	r0, r6
    6a10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6a14:	mov	r1, r0
    6a18:	add	r3, sp, #4
    6a1c:	mov	r2, r5
    6a20:	mov	r0, r6
    6a24:	bl	5c48 <flatcc_json_parser_object_end>
    6a28:	ldr	r3, [sp, #4]
    6a2c:	mov	r4, r0
    6a30:	cmp	r3, #0
    6a34:	bne	69dc <MyGame_Example2_Monster_parse_json_table+0xb4>
    6a38:	ldr	r3, [r6, #24]
    6a3c:	cmp	r3, #0
    6a40:	bne	6968 <MyGame_Example2_Monster_parse_json_table+0x40>
    6a44:	ldr	r0, [r6]
    6a48:	bl	0 <flatcc_builder_end_table>
    6a4c:	cmp	r0, #0
    6a50:	str	r0, [r8]
    6a54:	movne	r0, r4
    6a58:	bne	697c <MyGame_Example2_Monster_parse_json_table+0x54>
    6a5c:	b	6968 <MyGame_Example2_Monster_parse_json_table+0x40>
    6a60:	mov	r1, r4
    6a64:	mov	r3, #5
    6a68:	mov	r2, r5
    6a6c:	mov	r0, r6
    6a70:	bl	0 <flatcc_json_parser_set_error>
    6a74:	mov	r4, r0
    6a78:	b	6a04 <MyGame_Example2_Monster_parse_json_table+0xdc>
    6a7c:	add	r1, r4, #1
    6a80:	sub	r3, r5, r1
    6a84:	cmp	r3, #1
    6a88:	ble	6aa0 <MyGame_Example2_Monster_parse_json_table+0x178>
    6a8c:	ldrb	r3, [r4, #1]
    6a90:	cmp	r3, #32
    6a94:	movhi	r4, r1
    6a98:	bhi	6ab0 <MyGame_Example2_Monster_parse_json_table+0x188>
    6a9c:	beq	6ad0 <MyGame_Example2_Monster_parse_json_table+0x1a8>
    6aa0:	mov	r2, r5
    6aa4:	mov	r0, r6
    6aa8:	bl	0 <flatcc_json_parser_space_ext>
    6aac:	mov	r4, r0
    6ab0:	cmp	r5, r4
    6ab4:	beq	6ac4 <MyGame_Example2_Monster_parse_json_table+0x19c>
    6ab8:	ldrb	r3, [r4]
    6abc:	cmp	r3, #125	; 0x7d
    6ac0:	beq	6ae4 <MyGame_Example2_Monster_parse_json_table+0x1bc>
    6ac4:	mov	r3, #1
    6ac8:	str	r3, [sp, #4]
    6acc:	b	69d4 <MyGame_Example2_Monster_parse_json_table+0xac>
    6ad0:	ldrb	r3, [r4, #2]
    6ad4:	cmp	r3, #32
    6ad8:	addhi	r4, r4, #2
    6adc:	bls	6aa0 <MyGame_Example2_Monster_parse_json_table+0x178>
    6ae0:	b	6ab0 <MyGame_Example2_Monster_parse_json_table+0x188>
    6ae4:	mov	r3, #0
    6ae8:	add	r1, r4, #1
    6aec:	mov	r2, r5
    6af0:	mov	r0, r6
    6af4:	str	r3, [sp, #4]
    6af8:	bl	1e18 <flatcc_json_parser_space>
    6afc:	mov	r4, r0
    6b00:	b	69c8 <MyGame_Example2_Monster_parse_json_table+0xa0>

00006b04 <flatcc_json_parser_match_symbol.part.34>:
    6b04:	strd	r4, [sp, #-16]!
    6b08:	add	ip, r1, r3
    6b0c:	ldr	r4, [r0, #12]
    6b10:	str	r6, [sp, #8]
    6b14:	str	lr, [sp, #12]
    6b18:	ldrb	lr, [r1, r3]
    6b1c:	cmp	r4, #0
    6b20:	beq	6bc0 <flatcc_json_parser_match_symbol.part.34+0xbc>
    6b24:	cmp	lr, #58	; 0x3a
    6b28:	cmpne	lr, #32
    6b2c:	movls	lr, #0
    6b30:	movhi	lr, #1
    6b34:	strls	lr, [r0, #12]
    6b38:	bhi	6bac <flatcc_json_parser_match_symbol.part.34+0xa8>
    6b3c:	sub	r3, r2, ip
    6b40:	mov	r5, r2
    6b44:	cmp	r3, #1
    6b48:	mov	r4, r0
    6b4c:	ble	6b60 <flatcc_json_parser_match_symbol.part.34+0x5c>
    6b50:	ldrb	r3, [ip]
    6b54:	cmp	r3, #32
    6b58:	bhi	6b74 <flatcc_json_parser_match_symbol.part.34+0x70>
    6b5c:	beq	6bd4 <flatcc_json_parser_match_symbol.part.34+0xd0>
    6b60:	mov	r1, ip
    6b64:	mov	r2, r5
    6b68:	mov	r0, r4
    6b6c:	bl	0 <flatcc_json_parser_space_ext>
    6b70:	mov	ip, r0
    6b74:	cmp	r5, ip
    6b78:	beq	6b88 <flatcc_json_parser_match_symbol.part.34+0x84>
    6b7c:	ldrb	r3, [ip]
    6b80:	cmp	r3, #58	; 0x3a
    6b84:	beq	6be8 <flatcc_json_parser_match_symbol.part.34+0xe4>
    6b88:	mov	r2, r5
    6b8c:	mov	r0, r4
    6b90:	ldrd	r4, [sp]
    6b94:	mov	r1, ip
    6b98:	mov	r3, #4
    6b9c:	ldr	r6, [sp, #8]
    6ba0:	ldr	lr, [sp, #12]
    6ba4:	add	sp, sp, #16
    6ba8:	b	0 <flatcc_json_parser_set_error>
    6bac:	mov	r0, r1
    6bb0:	ldrd	r4, [sp]
    6bb4:	ldr	r6, [sp, #8]
    6bb8:	add	sp, sp, #12
    6bbc:	pop	{pc}		; (ldr pc, [sp], #4)
    6bc0:	cmp	lr, #34	; 0x22
    6bc4:	bne	6bac <flatcc_json_parser_match_symbol.part.34+0xa8>
    6bc8:	add	r3, r3, #1
    6bcc:	add	ip, r1, r3
    6bd0:	b	6b3c <flatcc_json_parser_match_symbol.part.34+0x38>
    6bd4:	ldrb	r3, [ip, #1]
    6bd8:	cmp	r3, #32
    6bdc:	addhi	ip, ip, #1
    6be0:	bls	6b60 <flatcc_json_parser_match_symbol.part.34+0x5c>
    6be4:	b	6b74 <flatcc_json_parser_match_symbol.part.34+0x70>
    6be8:	add	r0, ip, #1
    6bec:	sub	r3, r5, r0
    6bf0:	cmp	r3, #1
    6bf4:	ble	6c08 <flatcc_json_parser_match_symbol.part.34+0x104>
    6bf8:	ldrb	r3, [ip, #1]
    6bfc:	cmp	r3, #32
    6c00:	bhi	6bb0 <flatcc_json_parser_match_symbol.part.34+0xac>
    6c04:	beq	6c28 <flatcc_json_parser_match_symbol.part.34+0x124>
    6c08:	mov	r2, r5
    6c0c:	mov	r1, r0
    6c10:	ldr	r6, [sp, #8]
    6c14:	mov	r0, r4
    6c18:	ldrd	r4, [sp]
    6c1c:	ldr	lr, [sp, #12]
    6c20:	add	sp, sp, #16
    6c24:	b	0 <flatcc_json_parser_space_ext>
    6c28:	ldrb	r3, [ip, #2]
    6c2c:	cmp	r3, #32
    6c30:	addhi	r0, ip, #2
    6c34:	bls	6c08 <flatcc_json_parser_match_symbol.part.34+0x104>
    6c38:	b	6bb0 <flatcc_json_parser_match_symbol.part.34+0xac>

00006c3c <Fantasy_Movie_parse_json_table>:
    6c3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    6c40:	mov	r4, r1
    6c44:	mov	r1, #10
    6c48:	strd	r6, [sp, #8]
    6c4c:	mov	r5, r2
    6c50:	strd	r8, [sp, #16]
    6c54:	mov	r9, r3
    6c58:	mov	r3, #0
    6c5c:	mov	r8, r0
    6c60:	strd	sl, [sp, #24]
    6c64:	str	lr, [sp, #32]
    6c68:	sub	sp, sp, #124	; 0x7c
    6c6c:	ldr	r0, [r0]
    6c70:	str	r3, [r9]
    6c74:	bl	0 <flatcc_builder_start_table>
    6c78:	cmp	r0, #0
    6c7c:	beq	6cb8 <Fantasy_Movie_parse_json_table+0x7c>
    6c80:	mov	r1, r4
    6c84:	mov	r2, r5
    6c88:	mov	r0, r8
    6c8c:	mov	r3, #33	; 0x21
    6c90:	bl	0 <flatcc_json_parser_set_error>
    6c94:	mov	r4, r0
    6c98:	mov	r0, r4
    6c9c:	add	sp, sp, #124	; 0x7c
    6ca0:	ldrd	r4, [sp]
    6ca4:	ldrd	r6, [sp, #8]
    6ca8:	ldrd	r8, [sp, #16]
    6cac:	ldrd	sl, [sp, #24]
    6cb0:	add	sp, sp, #32
    6cb4:	pop	{pc}		; (ldr pc, [sp], #4)
    6cb8:	add	r0, sp, #116	; 0x74
    6cbc:	mov	r3, #5
    6cc0:	mov	r2, r5
    6cc4:	mov	r1, r4
    6cc8:	str	r0, [sp]
    6ccc:	mov	r0, r8
    6cd0:	bl	0 <flatcc_json_parser_prepare_unions>
    6cd4:	cmp	r5, r0
    6cd8:	beq	6c80 <Fantasy_Movie_parse_json_table+0x44>
    6cdc:	mov	r1, r4
    6ce0:	add	r3, sp, #112	; 0x70
    6ce4:	mov	r2, r5
    6ce8:	mov	r0, r8
    6cec:	bl	3ac0 <flatcc_json_parser_object_start>
    6cf0:	ldr	r3, [sp, #112]	; 0x70
    6cf4:	mov	r4, r0
    6cf8:	cmp	r3, #0
    6cfc:	beq	7058 <Fantasy_Movie_parse_json_table+0x41c>
    6d00:	add	r7, pc, #912	; 0x390
    6d04:	ldrd	r6, [r7]
    6d08:	strd	sl, [sp, #24]
    6d0c:	str	r9, [sp, #92]	; 0x5c
    6d10:	b	6ddc <Fantasy_Movie_parse_json_table+0x1a0>
    6d14:	add	r3, pc, #900	; 0x384
    6d18:	ldrd	r2, [r3]
    6d1c:	cmp	r1, r3
    6d20:	cmpeq	r0, r2
    6d24:	beq	6f0c <Fantasy_Movie_parse_json_table+0x2d0>
    6d28:	add	r3, pc, #888	; 0x378
    6d2c:	ldrd	r2, [r3]
    6d30:	cmp	r1, r3
    6d34:	cmpeq	r0, r2
    6d38:	beq	70f4 <Fantasy_Movie_parse_json_table+0x4b8>
    6d3c:	and	ip, r0, #-16777216	; 0xff000000
    6d40:	add	r3, pc, #872	; 0x368
    6d44:	ldrd	r2, [r3]
    6d48:	str	ip, [sp, #24]
    6d4c:	str	r1, [sp, #28]
    6d50:	ldrd	r0, [sp, #24]
    6d54:	cmp	r1, r3
    6d58:	cmpeq	r0, r2
    6d5c:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6d60:	sub	r3, r5, r4
    6d64:	cmp	r3, #5
    6d68:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6d6c:	mov	r1, r4
    6d70:	mov	r3, #5
    6d74:	mov	r2, r5
    6d78:	mov	r0, r8
    6d7c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    6d80:	cmp	r0, r4
    6d84:	mov	r1, r0
    6d88:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6d8c:	ldr	ip, [sp, #116]	; 0x74
    6d90:	movw	r3, #0
    6d94:	movt	r3, #0
    6d98:	mov	lr, #7
    6d9c:	str	r3, [sp, #8]
    6da0:	mov	r3, #3
    6da4:	mov	r2, r5
    6da8:	mov	r0, r8
    6dac:	str	lr, [sp]
    6db0:	str	ip, [sp, #4]
    6db4:	bl	0 <flatcc_json_parser_union>
    6db8:	mov	r1, r0
    6dbc:	add	r3, sp, #112	; 0x70
    6dc0:	mov	r2, r5
    6dc4:	mov	r0, r8
    6dc8:	bl	5c48 <flatcc_json_parser_object_end>
    6dcc:	ldr	r3, [sp, #112]	; 0x70
    6dd0:	mov	r4, r0
    6dd4:	cmp	r3, #0
    6dd8:	beq	7054 <Fantasy_Movie_parse_json_table+0x418>
    6ddc:	cmp	r5, r4
    6de0:	beq	6e0c <Fantasy_Movie_parse_json_table+0x1d0>
    6de4:	ldrb	r3, [r4]
    6de8:	cmp	r3, #34	; 0x22
    6dec:	moveq	r3, #0
    6df0:	addeq	r4, r4, #1
    6df4:	streq	r3, [r8, #12]
    6df8:	beq	6e0c <Fantasy_Movie_parse_json_table+0x1d0>
    6dfc:	cmp	r3, #46	; 0x2e
    6e00:	movne	r3, #1
    6e04:	strne	r3, [r8, #12]
    6e08:	beq	7354 <Fantasy_Movie_parse_json_table+0x718>
    6e0c:	mov	r1, r5
    6e10:	mov	r0, r4
    6e14:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6e18:	cmp	r1, r7
    6e1c:	cmpeq	r0, r6
    6e20:	bls	6d14 <Fantasy_Movie_parse_json_table+0xd8>
    6e24:	add	r3, pc, #652	; 0x28c
    6e28:	ldrd	r2, [r3]
    6e2c:	cmp	r1, r3
    6e30:	cmpeq	r0, r2
    6e34:	bhi	6f84 <Fantasy_Movie_parse_json_table+0x348>
    6e38:	add	r3, pc, #640	; 0x280
    6e3c:	ldrd	r2, [r3]
    6e40:	cmp	r1, r3
    6e44:	cmpeq	r0, r2
    6e48:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6e4c:	add	r4, r4, #8
    6e50:	mov	r1, r5
    6e54:	mov	r0, r4
    6e58:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6e5c:	bic	r0, r0, #255	; 0xff
    6e60:	add	r3, pc, #608	; 0x260
    6e64:	ldrd	r2, [r3]
    6e68:	strd	r0, [sp, #72]	; 0x48
    6e6c:	ldrd	sl, [sp, #72]	; 0x48
    6e70:	cmp	fp, r3
    6e74:	cmpeq	sl, r2
    6e78:	beq	73bc <Fantasy_Movie_parse_json_table+0x780>
    6e7c:	lsr	r1, r1, #16
    6e80:	mov	r3, #0
    6e84:	mov	r2, #0
    6e88:	lsl	r1, r1, #16
    6e8c:	str	r3, [sp, #56]	; 0x38
    6e90:	mov	r3, #0
    6e94:	movt	r3, #29299	; 0x7273
    6e98:	str	r1, [sp, #60]	; 0x3c
    6e9c:	ldrd	r0, [sp, #56]	; 0x38
    6ea0:	cmp	r1, r3
    6ea4:	cmpeq	r0, r2
    6ea8:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6eac:	sub	r3, r5, r4
    6eb0:	cmp	r3, #2
    6eb4:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6eb8:	mov	r1, r4
    6ebc:	mov	r3, #2
    6ec0:	mov	r2, r5
    6ec4:	mov	r0, r8
    6ec8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    6ecc:	cmp	r4, r0
    6ed0:	mov	r1, r0
    6ed4:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6ed8:	ldr	ip, [sp, #116]	; 0x74
    6edc:	mov	lr, #9
    6ee0:	movw	r3, #0
    6ee4:	movt	r3, #0
    6ee8:	mov	r2, r5
    6eec:	mov	r0, r8
    6ef0:	str	lr, [sp]
    6ef4:	str	ip, [sp, #4]
    6ef8:	str	r3, [sp, #8]
    6efc:	mov	r3, #4
    6f00:	bl	0 <flatcc_json_parser_union_vector>
    6f04:	mov	r1, r0
    6f08:	b	6dbc <Fantasy_Movie_parse_json_table+0x180>
    6f0c:	add	r4, r4, #8
    6f10:	mov	r1, r5
    6f14:	mov	r0, r4
    6f18:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6f1c:	bic	r0, r0, #255	; 0xff
    6f20:	add	r3, pc, #424	; 0x1a8
    6f24:	ldrd	r2, [r3]
    6f28:	strd	r0, [sp, #48]	; 0x30
    6f2c:	ldrd	sl, [sp, #48]	; 0x30
    6f30:	cmp	fp, r3
    6f34:	cmpeq	sl, r2
    6f38:	beq	7370 <Fantasy_Movie_parse_json_table+0x734>
    6f3c:	lsr	r1, r1, #16
    6f40:	mov	r3, #0
    6f44:	mov	r2, #0
    6f48:	lsl	r1, r1, #16
    6f4c:	str	r3, [sp, #32]
    6f50:	mov	r3, #0
    6f54:	movt	r3, #29556	; 0x7374
    6f58:	str	r1, [sp, #36]	; 0x24
    6f5c:	ldrd	r0, [sp, #32]
    6f60:	cmp	r1, r3
    6f64:	cmpeq	r0, r2
    6f68:	beq	723c <Fantasy_Movie_parse_json_table+0x600>
    6f6c:	mov	r1, r4
    6f70:	mov	r2, r5
    6f74:	mov	r0, r8
    6f78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f7c:	mov	r1, r0
    6f80:	b	6dbc <Fantasy_Movie_parse_json_table+0x180>
    6f84:	add	r3, pc, #332	; 0x14c
    6f88:	ldrd	r2, [r3]
    6f8c:	cmp	r1, r3
    6f90:	cmpeq	r0, r2
    6f94:	beq	71a0 <Fantasy_Movie_parse_json_table+0x564>
    6f98:	add	r3, pc, #320	; 0x140
    6f9c:	ldrd	r2, [r3]
    6fa0:	cmp	r1, r3
    6fa4:	cmpeq	r0, r2
    6fa8:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    6fac:	add	r4, r4, #8
    6fb0:	mov	r1, r5
    6fb4:	mov	r0, r4
    6fb8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6fbc:	lsr	r3, r0, #16
    6fc0:	str	r3, [sp, #64]	; 0x40
    6fc4:	ldr	r0, [sp, #64]	; 0x40
    6fc8:	str	r1, [sp, #68]	; 0x44
    6fcc:	add	r3, pc, #276	; 0x114
    6fd0:	ldrd	r2, [r3]
    6fd4:	lsl	r0, r0, #16
    6fd8:	str	r0, [sp, #64]	; 0x40
    6fdc:	ldrd	sl, [sp, #64]	; 0x40
    6fe0:	cmp	fp, r3
    6fe4:	cmpeq	sl, r2
    6fe8:	beq	7308 <Fantasy_Movie_parse_json_table+0x6cc>
    6fec:	mov	r3, #0
    6ff0:	str	r3, [sp, #96]	; 0x60
    6ff4:	and	r3, r1, #-16777216	; 0xff000000
    6ff8:	str	r3, [sp, #100]	; 0x64
    6ffc:	ldrd	r2, [sp, #96]	; 0x60
    7000:	cmp	r3, #1795162112	; 0x6b000000
    7004:	cmpeq	r2, #0
    7008:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    700c:	sub	r3, r5, r4
    7010:	cmp	r3, #1
    7014:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7018:	mov	r1, r4
    701c:	mov	r3, #1
    7020:	mov	r2, r5
    7024:	mov	r0, r8
    7028:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    702c:	cmp	r4, r0
    7030:	mov	r1, r0
    7034:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7038:	movw	r3, #0
    703c:	movt	r3, #0
    7040:	ldr	ip, [sp, #116]	; 0x74
    7044:	mov	lr, #5
    7048:	str	r3, [sp, #8]
    704c:	mov	r3, #2
    7050:	b	6da4 <Fantasy_Movie_parse_json_table+0x168>
    7054:	ldr	r9, [sp, #92]	; 0x5c
    7058:	ldr	r3, [r8, #24]
    705c:	cmp	r3, #0
    7060:	bne	6c80 <Fantasy_Movie_parse_json_table+0x44>
    7064:	mov	r1, r4
    7068:	mov	r2, r5
    706c:	ldr	r3, [sp, #116]	; 0x74
    7070:	mov	r0, r8
    7074:	bl	0 <flatcc_json_parser_finalize_unions>
    7078:	mov	r4, r0
    707c:	ldr	r0, [r8]
    7080:	bl	0 <flatcc_builder_end_table>
    7084:	cmp	r0, #0
    7088:	str	r0, [r9]
    708c:	bne	6c98 <Fantasy_Movie_parse_json_table+0x5c>
    7090:	b	6c80 <Fantasy_Movie_parse_json_table+0x44>
    7094:	nop	{0}
    7098:	.word	0x61637464
    709c:	.word	0x63686172
    70a0:	.word	0x676f6e69
    70a4:	.word	0x616e7461
    70a8:	.word	0x6f5f7479
    70ac:	.word	0x63616d65
    70b0:	.word	0x6f000000
    70b4:	.word	0x63616d65
    70b8:	.word	0x5f636860
    70bc:	.word	0x6d61696e
    70c0:	.word	0x61637465
    70c4:	.word	0x63686172
    70c8:	.word	0x79706500
    70cc:	.word	0x72735f74
    70d0:	.word	0x79706500
    70d4:	.word	0x73745f74
    70d8:	.word	0x5f636861
    70dc:	.word	0x6d61696e
    70e0:	.word	0x5f6b6963
    70e4:	.word	0x73696465
    70e8:	.word	0x70650000
    70ec:	.word	0x6b5f7479
    70f0:	.word	0x00000034
    70f4:	mov	r3, #0
    70f8:	add	r4, r4, #8
    70fc:	mov	r1, r5
    7100:	mov	r0, r4
    7104:	str	r3, [sp, #40]	; 0x28
    7108:	bl	0 <flatcc_json_parser_symbol_part_ext>
    710c:	lsr	r3, r1, #16
    7110:	mov	r2, #0
    7114:	str	r3, [sp, #44]	; 0x2c
    7118:	mov	r3, #0
    711c:	movt	r3, #28773	; 0x7065
    7120:	ldr	r1, [sp, #44]	; 0x2c
    7124:	lsl	r1, r1, #16
    7128:	str	r1, [sp, #44]	; 0x2c
    712c:	ldrd	r0, [sp, #40]	; 0x28
    7130:	cmp	r1, r3
    7134:	cmpeq	r0, r2
    7138:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    713c:	sub	r3, r5, r4
    7140:	cmp	r3, #2
    7144:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7148:	mov	r1, r4
    714c:	mov	r3, #2
    7150:	mov	r2, r5
    7154:	mov	r0, r8
    7158:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    715c:	cmp	r4, r0
    7160:	mov	r1, r0
    7164:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7168:	ldr	lr, [pc, #-128]	; 70f0 <Fantasy_Movie_parse_json_table+0x4b4>
    716c:	mov	r3, #7
    7170:	movw	r2, #0
    7174:	movt	r2, #0
    7178:	ldr	ip, [sp, #116]	; 0x74
    717c:	str	r3, [sp]
    7180:	mov	r3, #3
    7184:	mov	r0, r8
    7188:	stmib	sp, {ip, lr}
    718c:	str	r2, [sp, #12]
    7190:	mov	r2, r5
    7194:	bl	0 <flatcc_json_parser_union_type>
    7198:	mov	r1, r0
    719c:	b	6dbc <Fantasy_Movie_parse_json_table+0x180>
    71a0:	add	r9, r4, #8
    71a4:	mov	r1, r5
    71a8:	mov	r0, r9
    71ac:	bl	0 <flatcc_json_parser_symbol_part_ext>
    71b0:	add	r3, pc, #648	; 0x288
    71b4:	ldrd	r2, [r3]
    71b8:	cmp	r1, r3
    71bc:	cmpeq	r0, r2
    71c0:	beq	7284 <Fantasy_Movie_parse_json_table+0x648>
    71c4:	lsr	r3, r0, #16
    71c8:	str	r3, [sp, #80]	; 0x50
    71cc:	ldr	ip, [sp, #80]	; 0x50
    71d0:	str	r1, [sp, #84]	; 0x54
    71d4:	add	r3, pc, #620	; 0x26c
    71d8:	ldrd	r2, [r3]
    71dc:	lsl	ip, ip, #16
    71e0:	str	ip, [sp, #80]	; 0x50
    71e4:	ldrd	r0, [sp, #80]	; 0x50
    71e8:	cmp	r1, r3
    71ec:	cmpeq	r0, r2
    71f0:	bne	7428 <Fantasy_Movie_parse_json_table+0x7ec>
    71f4:	sub	r3, r5, r9
    71f8:	cmp	r3, #6
    71fc:	ble	7428 <Fantasy_Movie_parse_json_table+0x7ec>
    7200:	mov	r1, r9
    7204:	mov	r3, #6
    7208:	mov	r2, r5
    720c:	mov	r0, r8
    7210:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    7214:	cmp	r9, r0
    7218:	mov	r1, r0
    721c:	beq	7428 <Fantasy_Movie_parse_json_table+0x7ec>
    7220:	movw	r3, #0
    7224:	movt	r3, #0
    7228:	ldr	ip, [sp, #116]	; 0x74
    722c:	mov	lr, #1
    7230:	str	r3, [sp, #8]
    7234:	mov	r3, #0
    7238:	b	6da4 <Fantasy_Movie_parse_json_table+0x168>
    723c:	sub	r3, r5, r4
    7240:	cmp	r3, #2
    7244:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7248:	mov	r1, r4
    724c:	mov	r3, #2
    7250:	mov	r2, r5
    7254:	mov	r0, r8
    7258:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    725c:	cmp	r0, r4
    7260:	mov	r1, r0
    7264:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7268:	movw	r3, #0
    726c:	movt	r3, #0
    7270:	ldr	ip, [sp, #116]	; 0x74
    7274:	mov	lr, #3
    7278:	str	r3, [sp, #8]
    727c:	mov	r3, #1
    7280:	b	6da4 <Fantasy_Movie_parse_json_table+0x168>
    7284:	add	r4, r4, #16
    7288:	mov	r1, r5
    728c:	mov	r0, r4
    7290:	mov	r9, #0
    7294:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7298:	bic	r1, r1, #255	; 0xff
    729c:	str	r9, [sp, #104]	; 0x68
    72a0:	add	r3, pc, #424	; 0x1a8
    72a4:	ldrd	r2, [r3]
    72a8:	str	r1, [sp, #108]	; 0x6c
    72ac:	ldrd	r0, [sp, #104]	; 0x68
    72b0:	cmp	r1, r3
    72b4:	cmpeq	r0, r2
    72b8:	bne	6f6c <Fantasy_Movie_parse_json_table+0x330>
    72bc:	sub	r3, r5, r4
    72c0:	cmp	r3, #3
    72c4:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    72c8:	mov	r1, r4
    72cc:	mov	r3, #3
    72d0:	mov	r2, r5
    72d4:	mov	r0, r8
    72d8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    72dc:	cmp	r4, r0
    72e0:	mov	r1, r0
    72e4:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    72e8:	mov	r4, #1
    72ec:	movw	r2, #0
    72f0:	movt	r2, #0
    72f4:	ldr	lr, [pc, #348]	; 7458 <Fantasy_Movie_parse_json_table+0x81c>
    72f8:	mov	r3, r9
    72fc:	str	r4, [sp]
    7300:	ldr	ip, [sp, #116]	; 0x74
    7304:	b	7184 <Fantasy_Movie_parse_json_table+0x548>
    7308:	sub	r3, r5, r4
    730c:	cmp	r3, #6
    7310:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7314:	mov	r1, r4
    7318:	mov	r3, #6
    731c:	mov	r2, r5
    7320:	mov	r0, r8
    7324:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    7328:	cmp	r4, r0
    732c:	mov	r1, r0
    7330:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    7334:	mov	r3, #5
    7338:	movw	r2, #0
    733c:	movt	r2, #0
    7340:	ldr	lr, [pc, #276]	; 745c <Fantasy_Movie_parse_json_table+0x820>
    7344:	str	r3, [sp]
    7348:	mov	r3, #2
    734c:	ldr	ip, [sp, #116]	; 0x74
    7350:	b	7184 <Fantasy_Movie_parse_json_table+0x548>
    7354:	mov	r1, r4
    7358:	mov	r3, #5
    735c:	mov	r2, r5
    7360:	mov	r0, r8
    7364:	bl	0 <flatcc_json_parser_set_error>
    7368:	mov	r4, r0
    736c:	b	6e0c <Fantasy_Movie_parse_json_table+0x1d0>
    7370:	sub	r3, r5, r4
    7374:	cmp	r3, #7
    7378:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    737c:	mov	r1, r4
    7380:	mov	r3, #7
    7384:	mov	r2, r5
    7388:	mov	r0, r8
    738c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    7390:	cmp	r4, r0
    7394:	mov	r1, r0
    7398:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    739c:	mov	r3, #3
    73a0:	movw	r2, #0
    73a4:	movt	r2, #0
    73a8:	ldr	lr, [pc, #176]	; 7460 <Fantasy_Movie_parse_json_table+0x824>
    73ac:	str	r3, [sp]
    73b0:	mov	r3, #1
    73b4:	ldr	ip, [sp, #116]	; 0x74
    73b8:	b	7184 <Fantasy_Movie_parse_json_table+0x548>
    73bc:	sub	r3, r5, r4
    73c0:	cmp	r3, #7
    73c4:	ble	6f6c <Fantasy_Movie_parse_json_table+0x330>
    73c8:	mov	r1, r4
    73cc:	mov	r3, #7
    73d0:	mov	r2, r5
    73d4:	mov	r0, r8
    73d8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    73dc:	cmp	r4, r0
    73e0:	mov	r1, r0
    73e4:	beq	6f6c <Fantasy_Movie_parse_json_table+0x330>
    73e8:	ldr	r2, [pc, #116]	; 7464 <Fantasy_Movie_parse_json_table+0x828>
    73ec:	movw	ip, #0
    73f0:	movt	ip, #0
    73f4:	movw	r3, #0
    73f8:	movt	r3, #0
    73fc:	ldr	lr, [sp, #116]	; 0x74
    7400:	mov	r4, #9
    7404:	mov	r0, r8
    7408:	stm	sp, {r4, lr}
    740c:	strd	r2, [sp, #8]
    7410:	mov	r3, #4
    7414:	mov	r2, r5
    7418:	str	ip, [sp, #16]
    741c:	bl	0 <flatcc_json_parser_union_type_vector>
    7420:	mov	r1, r0
    7424:	b	6dbc <Fantasy_Movie_parse_json_table+0x180>
    7428:	mov	r1, r9
    742c:	mov	r2, r5
    7430:	mov	r0, r8
    7434:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7438:	mov	r1, r0
    743c:	b	6dbc <Fantasy_Movie_parse_json_table+0x180>
    7440:	.word	0x65725f74
    7444:	.word	0x72616374
    7448:	.word	0x65720000
    744c:	.word	0x72616374
    7450:	.word	0x00000000
    7454:	.word	0x79706500
    7458:	.word	0x00000054
    745c:	.word	0x00000064
    7460:	.word	0x00000024
    7464:	.word	0x00000044

00007468 <MyGame_Example_Alt_parse_json_table>:
    7468:	strd	r4, [sp, #-36]!	; 0xffffffdc
    746c:	mov	r5, r0
    7470:	mov	ip, r3
    7474:	ldr	r0, [r0]
    7478:	mov	r4, r2
    747c:	strd	r6, [sp, #8]
    7480:	strd	r8, [sp, #16]
    7484:	strd	sl, [sp, #24]
    7488:	mov	fp, r1
    748c:	mov	r1, #4
    7490:	str	lr, [sp, #32]
    7494:	sub	sp, sp, #252	; 0xfc
    7498:	str	r3, [sp, #200]	; 0xc8
    749c:	mov	r3, #0
    74a0:	str	r3, [ip]
    74a4:	bl	0 <flatcc_builder_start_table>
    74a8:	cmp	r0, #0
    74ac:	beq	74e8 <MyGame_Example_Alt_parse_json_table+0x80>
    74b0:	mov	r1, fp
    74b4:	mov	r2, r4
    74b8:	mov	r0, r5
    74bc:	mov	r3, #33	; 0x21
    74c0:	bl	0 <flatcc_json_parser_set_error>
    74c4:	mov	fp, r0
    74c8:	mov	r0, fp
    74cc:	add	sp, sp, #252	; 0xfc
    74d0:	ldrd	r4, [sp]
    74d4:	ldrd	r6, [sp, #8]
    74d8:	ldrd	r8, [sp, #16]
    74dc:	ldrd	sl, [sp, #24]
    74e0:	add	sp, sp, #32
    74e4:	pop	{pc}		; (ldr pc, [sp], #4)
    74e8:	add	r0, sp, #216	; 0xd8
    74ec:	mov	r3, #1
    74f0:	mov	r2, r4
    74f4:	mov	r1, fp
    74f8:	str	r0, [sp]
    74fc:	mov	r0, r5
    7500:	bl	0 <flatcc_json_parser_prepare_unions>
    7504:	cmp	r4, r0
    7508:	beq	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    750c:	add	r3, sp, #208	; 0xd0
    7510:	mov	r1, fp
    7514:	mov	r2, r4
    7518:	mov	r0, r5
    751c:	bl	3ac0 <flatcc_json_parser_object_start>
    7520:	ldr	r3, [sp, #208]	; 0xd0
    7524:	mov	sl, r0
    7528:	cmp	r3, #0
    752c:	beq	76d4 <MyGame_Example_Alt_parse_json_table+0x26c>
    7530:	cmp	r4, sl
    7534:	beq	76dc <MyGame_Example_Alt_parse_json_table+0x274>
    7538:	ldrb	r3, [sl]
    753c:	cmp	r3, #34	; 0x22
    7540:	moveq	r3, #0
    7544:	addeq	sl, sl, #1
    7548:	streq	r3, [r5, #12]
    754c:	beq	7560 <MyGame_Example_Alt_parse_json_table+0xf8>
    7550:	cmp	r3, #46	; 0x2e
    7554:	movne	r3, #1
    7558:	strne	r3, [r5, #12]
    755c:	beq	8f10 <MyGame_Example_Alt_parse_json_table+0x1aa8>
    7560:	sub	ip, r4, sl
    7564:	cmp	ip, #8
    7568:	bls	76f8 <MyGame_Example_Alt_parse_json_table+0x290>
    756c:	ldrb	r2, [sl, #7]
    7570:	mov	r3, #0
    7574:	mov	lr, r3
    7578:	ldrb	r0, [sl, #6]
    757c:	orr	r2, r2, r0, lsl #8
    7580:	ldrb	r6, [sl, #5]
    7584:	orr	r2, r2, r6, lsl #16
    7588:	ldrb	r6, [sl, #4]
    758c:	orr	r2, r2, r6, lsl #24
    7590:	ldrb	r6, [sl, #3]
    7594:	orr	lr, lr, r6
    7598:	ldrb	r0, [sl]
    759c:	mov	r7, #0
    75a0:	str	r2, [sp, #40]	; 0x28
    75a4:	ldrb	r6, [sl, #1]
    75a8:	add	r3, pc, #952	; 0x3b8
    75ac:	ldrd	r2, [r3]
    75b0:	lsl	r0, r0, #24
    75b4:	orr	r6, r0, r6, lsl #16
    75b8:	ldrb	r0, [sl, #2]
    75bc:	orr	r1, lr, r0, lsl #8
    75c0:	orr	r1, r6, r1
    75c4:	str	r1, [sp, #44]	; 0x2c
    75c8:	ldrd	r0, [sp, #40]	; 0x28
    75cc:	cmp	r1, r3
    75d0:	cmpeq	r0, r2
    75d4:	beq	7784 <MyGame_Example_Alt_parse_json_table+0x31c>
    75d8:	ldrd	r0, [sp, #40]	; 0x28
    75dc:	add	r3, pc, #908	; 0x38c
    75e0:	ldrd	r2, [r3]
    75e4:	bic	lr, r0, #255	; 0xff
    75e8:	str	lr, [sp, #104]	; 0x68
    75ec:	str	r1, [sp, #108]	; 0x6c
    75f0:	ldrd	r0, [sp, #104]	; 0x68
    75f4:	cmp	r1, r3
    75f8:	cmpeq	r0, r2
    75fc:	bne	785c <MyGame_Example_Alt_parse_json_table+0x3f4>
    7600:	cmp	ip, #7
    7604:	ble	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    7608:	mov	r3, #7
    760c:	mov	r2, r4
    7610:	mov	r1, sl
    7614:	mov	r0, r5
    7618:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    761c:	cmp	r0, sl
    7620:	beq	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    7624:	ldr	ip, [sp, #216]	; 0xd8
    7628:	mov	lr, #3
    762c:	movw	r3, #0
    7630:	movt	r3, #0
    7634:	mov	r1, r0
    7638:	mov	r2, r4
    763c:	mov	r0, r5
    7640:	str	lr, [sp]
    7644:	str	ip, [sp, #4]
    7648:	str	r3, [sp, #8]
    764c:	mov	r3, #0
    7650:	bl	0 <flatcc_json_parser_union_vector>
    7654:	mov	fp, r0
    7658:	sub	r3, r4, fp
    765c:	cmp	r3, #1
    7660:	ble	7674 <MyGame_Example_Alt_parse_json_table+0x20c>
    7664:	ldrb	r3, [fp]
    7668:	cmp	r3, #32
    766c:	bhi	7688 <MyGame_Example_Alt_parse_json_table+0x220>
    7670:	beq	8c9c <MyGame_Example_Alt_parse_json_table+0x1834>
    7674:	mov	r1, fp
    7678:	mov	r2, r4
    767c:	mov	r0, r5
    7680:	bl	0 <flatcc_json_parser_space_ext>
    7684:	mov	fp, r0
    7688:	cmp	r4, fp
    768c:	beq	8c54 <MyGame_Example_Alt_parse_json_table+0x17ec>
    7690:	ldrb	r3, [fp]
    7694:	cmp	r3, #44	; 0x2c
    7698:	beq	8cb0 <MyGame_Example_Alt_parse_json_table+0x1848>
    769c:	mov	r3, #0
    76a0:	str	r3, [sp, #208]	; 0xd0
    76a4:	ldrb	r3, [fp]
    76a8:	cmp	r3, #125	; 0x7d
    76ac:	beq	7824 <MyGame_Example_Alt_parse_json_table+0x3bc>
    76b0:	mov	r3, #10
    76b4:	mov	r1, fp
    76b8:	mov	r2, r4
    76bc:	mov	r0, r5
    76c0:	bl	0 <flatcc_json_parser_set_error>
    76c4:	ldr	r3, [sp, #208]	; 0xd0
    76c8:	mov	sl, r0
    76cc:	cmp	r3, #0
    76d0:	bne	7530 <MyGame_Example_Alt_parse_json_table+0xc8>
    76d4:	mov	fp, sl
    76d8:	b	8c5c <MyGame_Example_Alt_parse_json_table+0x17f4>
    76dc:	mov	sl, r4
    76e0:	mov	r1, sl
    76e4:	mov	r2, r4
    76e8:	mov	r0, r5
    76ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    76f0:	mov	fp, r0
    76f4:	b	7658 <MyGame_Example_Alt_parse_json_table+0x1f0>
    76f8:	sub	r3, ip, #1
    76fc:	cmp	r3, #7
    7700:	ldrls	pc, [pc, r3, lsl #2]
    7704:	b	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    7708:	.word	0x000076e0
    770c:	.word	0x00007758
    7710:	.word	0x0000774c
    7714:	.word	0x00007740
    7718:	.word	0x00007734
    771c:	.word	0x00007728
    7720:	.word	0x00007778
    7724:	.word	0x0000756c
    7728:	mov	r2, #0
    772c:	mov	lr, r2
    7730:	b	7580 <MyGame_Example_Alt_parse_json_table+0x118>
    7734:	mov	r2, #0
    7738:	mov	lr, r2
    773c:	b	7588 <MyGame_Example_Alt_parse_json_table+0x120>
    7740:	mov	r2, #0
    7744:	mov	lr, r2
    7748:	b	7590 <MyGame_Example_Alt_parse_json_table+0x128>
    774c:	mov	r2, #0
    7750:	mov	lr, r2
    7754:	b	7598 <MyGame_Example_Alt_parse_json_table+0x130>
    7758:	ldrb	r2, [sl, #1]
    775c:	mov	r1, #0
    7760:	ldrb	r0, [sl]
    7764:	str	r1, [sp, #40]	; 0x28
    7768:	lsl	r2, r2, #16
    776c:	orr	r3, r2, r0, lsl #24
    7770:	str	r3, [sp, #44]	; 0x2c
    7774:	b	75d8 <MyGame_Example_Alt_parse_json_table+0x170>
    7778:	mov	r2, #0
    777c:	mov	r3, #0
    7780:	b	7574 <MyGame_Example_Alt_parse_json_table+0x10c>
    7784:	add	sl, sl, #8
    7788:	mov	r1, r4
    778c:	str	r7, [sp, #144]	; 0x90
    7790:	mov	r0, sl
    7794:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7798:	str	r1, [sp, #148]	; 0x94
    779c:	add	r3, pc, #468	; 0x1d4
    77a0:	ldrd	r2, [r3]
    77a4:	ldrd	r0, [sp, #144]	; 0x90
    77a8:	cmp	r1, r3
    77ac:	cmpeq	r0, r2
    77b0:	bne	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    77b4:	sub	r3, r4, sl
    77b8:	cmp	r3, #4
    77bc:	ble	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    77c0:	mov	r1, sl
    77c4:	mov	r3, #4
    77c8:	mov	r2, r4
    77cc:	mov	r0, r5
    77d0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    77d4:	cmp	sl, r0
    77d8:	mov	r1, r0
    77dc:	beq	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    77e0:	ldr	lr, [pc, #416]	; 7988 <MyGame_Example_Alt_parse_json_table+0x520>
    77e4:	movw	r0, #0
    77e8:	movt	r0, #0
    77ec:	movw	r2, #0
    77f0:	movt	r2, #0
    77f4:	ldr	ip, [sp, #216]	; 0xd8
    77f8:	mov	r3, r7
    77fc:	str	r0, [sp, #12]
    7800:	mov	r0, #3
    7804:	str	r2, [sp, #16]
    7808:	mov	r2, r4
    780c:	str	r0, [sp]
    7810:	mov	r0, r5
    7814:	stmib	sp, {ip, lr}
    7818:	bl	0 <flatcc_json_parser_union_type_vector>
    781c:	mov	fp, r0
    7820:	b	7658 <MyGame_Example_Alt_parse_json_table+0x1f0>
    7824:	add	r1, fp, #1
    7828:	sub	r3, r4, r1
    782c:	cmp	r3, #1
    7830:	ble	7844 <MyGame_Example_Alt_parse_json_table+0x3dc>
    7834:	ldrb	r3, [fp, #1]
    7838:	cmp	r3, #32
    783c:	bhi	95e4 <MyGame_Example_Alt_parse_json_table+0x217c>
    7840:	beq	966c <MyGame_Example_Alt_parse_json_table+0x2204>
    7844:	mov	r2, r4
    7848:	mov	r0, r5
    784c:	bl	0 <flatcc_json_parser_space_ext>
    7850:	mov	sl, r0
    7854:	ldr	r3, [sp, #208]	; 0xd0
    7858:	b	7528 <MyGame_Example_Alt_parse_json_table+0xc0>
    785c:	ldrd	r0, [sp, #40]	; 0x28
    7860:	lsr	r3, r0, #16
    7864:	str	r3, [sp, #136]	; 0x88
    7868:	ldr	lr, [sp, #136]	; 0x88
    786c:	str	r1, [sp, #140]	; 0x8c
    7870:	add	r3, pc, #264	; 0x108
    7874:	ldrd	r2, [r3]
    7878:	lsl	lr, lr, #16
    787c:	str	lr, [sp, #136]	; 0x88
    7880:	ldrd	r0, [sp, #136]	; 0x88
    7884:	cmp	r1, r3
    7888:	cmpeq	r0, r2
    788c:	bne	8d78 <MyGame_Example_Alt_parse_json_table+0x1910>
    7890:	cmp	ip, #6
    7894:	ble	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    7898:	mov	r3, #6
    789c:	mov	r2, r4
    78a0:	mov	r1, sl
    78a4:	mov	r0, r5
    78a8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    78ac:	cmp	r0, sl
    78b0:	mov	fp, r0
    78b4:	beq	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    78b8:	mov	r3, #0
    78bc:	mov	r1, #3
    78c0:	ldr	r0, [r5]
    78c4:	str	r3, [sp, #212]	; 0xd4
    78c8:	bl	0 <flatcc_builder_start_table>
    78cc:	cmp	r0, #0
    78d0:	bne	7c74 <MyGame_Example_Alt_parse_json_table+0x80c>
    78d4:	add	r3, sp, #220	; 0xdc
    78d8:	mov	r1, fp
    78dc:	mov	r2, r4
    78e0:	mov	r0, r5
    78e4:	bl	3ac0 <flatcc_json_parser_object_start>
    78e8:	ldr	r3, [sp, #220]	; 0xdc
    78ec:	cmp	r3, #0
    78f0:	beq	9a18 <MyGame_Example_Alt_parse_json_table+0x25b0>
    78f4:	mov	r7, r5
    78f8:	mov	r6, r4
    78fc:	cmp	r6, r0
    7900:	beq	792c <MyGame_Example_Alt_parse_json_table+0x4c4>
    7904:	ldrb	r3, [r0]
    7908:	cmp	r3, #34	; 0x22
    790c:	moveq	r3, #0
    7910:	addeq	r0, r0, #1
    7914:	streq	r3, [r7, #12]
    7918:	beq	792c <MyGame_Example_Alt_parse_json_table+0x4c4>
    791c:	cmp	r3, #46	; 0x2e
    7920:	movne	r3, #1
    7924:	strne	r3, [r7, #12]
    7928:	beq	8d1c <MyGame_Example_Alt_parse_json_table+0x18b4>
    792c:	sub	r3, r6, r0
    7930:	cmp	r3, #8
    7934:	bhi	798c <MyGame_Example_Alt_parse_json_table+0x524>
    7938:	sub	r3, r3, #1
    793c:	cmp	r3, #7
    7940:	ldrls	pc, [pc, r3, lsl #2]
    7944:	b	7d24 <MyGame_Example_Alt_parse_json_table+0x8bc>
    7948:	.word	0x00007a54
    794c:	.word	0x00007a48
    7950:	.word	0x00007a3c
    7954:	.word	0x00007a6c
    7958:	.word	0x00007a60
    795c:	.word	0x00007a78
    7960:	.word	0x00007a30
    7964:	.word	0x0000798c
    7968:	.word	0x616e795f
    796c:	.word	0x6d616e79
    7970:	.word	0x616e7900
    7974:	.word	0x6d616e79
    7978:	.word	0x00000000
    797c:	.word	0x74797065
    7980:	.word	0x69780000
    7984:	.word	0x70726566
    7988:	.word	0x00000074
    798c:	ldrb	r2, [r0, #7]
    7990:	mov	r3, #0
    7994:	mov	r1, r3
    7998:	ldrb	r4, [r0, #6]
    799c:	orr	r2, r2, r4, lsl #8
    79a0:	ldrb	r8, [r0, #5]
    79a4:	orr	r2, r2, r8, lsl #16
    79a8:	ldrb	r8, [r0, #4]
    79ac:	orr	r2, r2, r8, lsl #24
    79b0:	ldrb	r4, [r0, #3]
    79b4:	orr	r1, r1, r4
    79b8:	ldrb	r8, [r0, #2]
    79bc:	orr	r1, r1, r8, lsl #8
    79c0:	ldrb	r8, [r0, #1]
    79c4:	orr	r1, r1, r8, lsl #16
    79c8:	str	r2, [sp, #56]	; 0x38
    79cc:	ldrb	r2, [r0]
    79d0:	add	r5, pc, #992	; 0x3e0
    79d4:	ldrd	r4, [r5]
    79d8:	orr	r3, r1, r2, lsl #24
    79dc:	str	r3, [sp, #60]	; 0x3c
    79e0:	ldrd	r2, [sp, #56]	; 0x38
    79e4:	cmp	r3, r5
    79e8:	cmpeq	r2, r4
    79ec:	bne	7d24 <MyGame_Example_Alt_parse_json_table+0x8bc>
    79f0:	add	r1, r0, #8
    79f4:	sub	r3, r6, r1
    79f8:	cmp	r3, #8
    79fc:	bhi	7a84 <MyGame_Example_Alt_parse_json_table+0x61c>
    7a00:	sub	r3, r3, #1
    7a04:	cmp	r3, #7
    7a08:	ldrls	pc, [pc, r3, lsl #2]
    7a0c:	b	7d28 <MyGame_Example_Alt_parse_json_table+0x8c0>
    7a10:	.word	0x00007b38
    7a14:	.word	0x00007b2c
    7a18:	.word	0x00007b74
    7a1c:	.word	0x00007b68
    7a20:	.word	0x00007b5c
    7a24:	.word	0x00007b50
    7a28:	.word	0x00007b44
    7a2c:	.word	0x00007a84
    7a30:	mov	r2, #0
    7a34:	mov	r3, #0
    7a38:	b	7994 <MyGame_Example_Alt_parse_json_table+0x52c>
    7a3c:	mov	r2, #0
    7a40:	mov	r1, r2
    7a44:	b	79b8 <MyGame_Example_Alt_parse_json_table+0x550>
    7a48:	mov	r2, #0
    7a4c:	mov	r1, r2
    7a50:	b	79c0 <MyGame_Example_Alt_parse_json_table+0x558>
    7a54:	mov	r2, #0
    7a58:	mov	r1, r2
    7a5c:	b	79c8 <MyGame_Example_Alt_parse_json_table+0x560>
    7a60:	mov	r2, #0
    7a64:	mov	r1, r2
    7a68:	b	79a8 <MyGame_Example_Alt_parse_json_table+0x540>
    7a6c:	mov	r2, #0
    7a70:	mov	r1, r2
    7a74:	b	79b0 <MyGame_Example_Alt_parse_json_table+0x548>
    7a78:	mov	r2, #0
    7a7c:	mov	r1, r2
    7a80:	b	79a0 <MyGame_Example_Alt_parse_json_table+0x538>
    7a84:	ldrb	r2, [r0, #15]
    7a88:	mov	r3, #0
    7a8c:	mov	r8, r3
    7a90:	ldrb	r4, [r0, #14]
    7a94:	orr	r2, r2, r4, lsl #8
    7a98:	ldrb	sl, [r0, #13]
    7a9c:	orr	r2, r2, sl, lsl #16
    7aa0:	ldrb	sl, [r0, #12]
    7aa4:	mov	r3, r8
    7aa8:	orr	sl, r2, sl, lsl #24
    7aac:	ldrb	r8, [r0, #11]
    7ab0:	orr	r8, r3, r8
    7ab4:	ldrb	r2, [r0, #10]
    7ab8:	orr	r8, r8, r2, lsl #8
    7abc:	ldrb	r2, [r0, #9]
    7ac0:	orr	ip, r8, r2, lsl #16
    7ac4:	ldrb	r2, [r0, #8]
    7ac8:	str	sl, [sp, #80]	; 0x50
    7acc:	add	r5, pc, #748	; 0x2ec
    7ad0:	ldrd	r4, [r5]
    7ad4:	orr	r3, ip, r2, lsl #24
    7ad8:	str	r3, [sp, #84]	; 0x54
    7adc:	ldrd	r2, [sp, #80]	; 0x50
    7ae0:	cmp	r3, r5
    7ae4:	cmpeq	r2, r4
    7ae8:	bne	7d28 <MyGame_Example_Alt_parse_json_table+0x8c0>
    7aec:	add	r4, r0, #16
    7af0:	sub	r5, r6, r4
    7af4:	cmp	r5, #8
    7af8:	bhi	7b80 <MyGame_Example_Alt_parse_json_table+0x718>
    7afc:	sub	r3, r5, #1
    7b00:	cmp	r3, #7
    7b04:	ldrls	pc, [pc, r3, lsl #2]
    7b08:	b	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    7b0c:	.word	0x00007d00
    7b10:	.word	0x00007cc4
    7b14:	.word	0x00007cf4
    7b18:	.word	0x00007ce8
    7b1c:	.word	0x00007cdc
    7b20:	.word	0x00007cd0
    7b24:	.word	0x00007cb8
    7b28:	.word	0x00007b80
    7b2c:	mov	sl, #0
    7b30:	mov	r8, sl
    7b34:	b	7abc <MyGame_Example_Alt_parse_json_table+0x654>
    7b38:	mov	sl, #0
    7b3c:	mov	ip, sl
    7b40:	b	7ac4 <MyGame_Example_Alt_parse_json_table+0x65c>
    7b44:	mov	r2, #0
    7b48:	mov	r3, #0
    7b4c:	b	7a8c <MyGame_Example_Alt_parse_json_table+0x624>
    7b50:	mov	r2, #0
    7b54:	mov	r8, r2
    7b58:	b	7a98 <MyGame_Example_Alt_parse_json_table+0x630>
    7b5c:	mov	r2, #0
    7b60:	mov	r8, r2
    7b64:	b	7aa0 <MyGame_Example_Alt_parse_json_table+0x638>
    7b68:	mov	sl, #0
    7b6c:	mov	r3, sl
    7b70:	b	7aac <MyGame_Example_Alt_parse_json_table+0x644>
    7b74:	mov	sl, #0
    7b78:	mov	r8, sl
    7b7c:	b	7ab4 <MyGame_Example_Alt_parse_json_table+0x64c>
    7b80:	ldrb	r2, [r0, #23]
    7b84:	mov	r3, #0
    7b88:	mov	lr, r3
    7b8c:	ldrb	r8, [r0, #22]
    7b90:	orr	ip, r2, r8, lsl #8
    7b94:	ldrb	sl, [r0, #21]
    7b98:	orr	ip, ip, sl, lsl #16
    7b9c:	ldrb	sl, [r0, #20]
    7ba0:	orr	ip, ip, sl, lsl #24
    7ba4:	ldrb	r8, [r0, #19]
    7ba8:	orr	lr, lr, r8
    7bac:	ldrb	sl, [r0, #18]
    7bb0:	orr	lr, lr, sl, lsl #8
    7bb4:	lsr	r3, ip, #16
    7bb8:	ldrb	sl, [r0, #17]
    7bbc:	ldrb	r0, [r0, #16]
    7bc0:	str	r3, [sp, #96]	; 0x60
    7bc4:	ldr	r8, [sp, #96]	; 0x60
    7bc8:	orr	lr, lr, sl, lsl #16
    7bcc:	add	r3, pc, #500	; 0x1f4
    7bd0:	ldrd	r2, [r3]
    7bd4:	orr	r0, lr, r0, lsl #24
    7bd8:	lsl	r8, r8, #16
    7bdc:	str	r8, [sp, #96]	; 0x60
    7be0:	str	r0, [sp, #100]	; 0x64
    7be4:	ldrd	r8, [sp, #96]	; 0x60
    7be8:	cmp	r9, r3
    7bec:	cmpeq	r8, r2
    7bf0:	beq	8680 <MyGame_Example_Alt_parse_json_table+0x1218>
    7bf4:	and	r1, ip, #-16777216	; 0xff000000
    7bf8:	add	r3, pc, #464	; 0x1d0
    7bfc:	ldrd	r2, [r3]
    7c00:	str	r1, [sp, #160]	; 0xa0
    7c04:	str	r0, [sp, #164]	; 0xa4
    7c08:	ldrd	r0, [sp, #160]	; 0xa0
    7c0c:	cmp	r1, r3
    7c10:	cmpeq	r0, r2
    7c14:	bne	7eb0 <MyGame_Example_Alt_parse_json_table+0xa48>
    7c18:	cmp	r5, #5
    7c1c:	ble	7eb0 <MyGame_Example_Alt_parse_json_table+0xa48>
    7c20:	mov	r3, #5
    7c24:	mov	r2, r6
    7c28:	mov	r1, r4
    7c2c:	mov	r0, r7
    7c30:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    7c34:	cmp	r4, r0
    7c38:	mov	r8, r0
    7c3c:	beq	7eb0 <MyGame_Example_Alt_parse_json_table+0xa48>
    7c40:	mov	r1, #9
    7c44:	ldr	r0, [r7]
    7c48:	bl	0 <flatcc_builder_start_table>
    7c4c:	cmp	r0, #0
    7c50:	beq	8f58 <MyGame_Example_Alt_parse_json_table+0x1af0>
    7c54:	mov	r5, r7
    7c58:	mov	r4, r6
    7c5c:	mov	r1, r8
    7c60:	mov	r3, #33	; 0x21
    7c64:	mov	r2, r4
    7c68:	mov	r0, r5
    7c6c:	bl	0 <flatcc_json_parser_set_error>
    7c70:	mov	fp, r0
    7c74:	mov	r1, fp
    7c78:	mov	r3, #33	; 0x21
    7c7c:	mov	r2, r4
    7c80:	mov	r0, r5
    7c84:	bl	0 <flatcc_json_parser_set_error>
    7c88:	ldr	r3, [sp, #212]	; 0xd4
    7c8c:	mov	fp, r0
    7c90:	cmp	r3, #0
    7c94:	beq	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    7c98:	mov	r1, #0
    7c9c:	ldr	r0, [r5]
    7ca0:	bl	0 <flatcc_builder_table_add_offset>
    7ca4:	cmp	r0, #0
    7ca8:	beq	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    7cac:	ldr	r3, [sp, #212]	; 0xd4
    7cb0:	str	r3, [r0]
    7cb4:	b	7658 <MyGame_Example_Alt_parse_json_table+0x1f0>
    7cb8:	mov	r2, #0
    7cbc:	mov	r3, #0
    7cc0:	b	7b88 <MyGame_Example_Alt_parse_json_table+0x720>
    7cc4:	mov	ip, #0
    7cc8:	mov	lr, ip
    7ccc:	b	7bb4 <MyGame_Example_Alt_parse_json_table+0x74c>
    7cd0:	mov	ip, #0
    7cd4:	mov	lr, ip
    7cd8:	b	7b94 <MyGame_Example_Alt_parse_json_table+0x72c>
    7cdc:	mov	ip, #0
    7ce0:	mov	lr, ip
    7ce4:	b	7b9c <MyGame_Example_Alt_parse_json_table+0x734>
    7ce8:	mov	ip, #0
    7cec:	mov	lr, ip
    7cf0:	b	7ba4 <MyGame_Example_Alt_parse_json_table+0x73c>
    7cf4:	mov	ip, #0
    7cf8:	mov	lr, ip
    7cfc:	b	7bac <MyGame_Example_Alt_parse_json_table+0x744>
    7d00:	ldrb	r2, [r0, #16]
    7d04:	lsl	r3, r2, #24
    7d08:	str	r3, [sp, #100]	; 0x64
    7d0c:	mov	r3, #0
    7d10:	str	r3, [sp, #96]	; 0x60
    7d14:	ldrd	r2, [sp, #96]	; 0x60
    7d18:	mov	ip, r2
    7d1c:	mov	r0, r3
    7d20:	b	7bf4 <MyGame_Example_Alt_parse_json_table+0x78c>
    7d24:	mov	r1, r0
    7d28:	mov	r2, r6
    7d2c:	mov	r0, r7
    7d30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d34:	mov	fp, r0
    7d38:	sub	r3, r6, fp
    7d3c:	cmp	r3, #1
    7d40:	ble	7d54 <MyGame_Example_Alt_parse_json_table+0x8ec>
    7d44:	ldrb	r3, [fp]
    7d48:	cmp	r3, #32
    7d4c:	bhi	7d68 <MyGame_Example_Alt_parse_json_table+0x900>
    7d50:	beq	7e4c <MyGame_Example_Alt_parse_json_table+0x9e4>
    7d54:	mov	r1, fp
    7d58:	mov	r2, r6
    7d5c:	mov	r0, r7
    7d60:	bl	0 <flatcc_json_parser_space_ext>
    7d64:	mov	fp, r0
    7d68:	cmp	r6, fp
    7d6c:	beq	7e18 <MyGame_Example_Alt_parse_json_table+0x9b0>
    7d70:	ldrb	r3, [fp]
    7d74:	cmp	r3, #44	; 0x2c
    7d78:	beq	7e60 <MyGame_Example_Alt_parse_json_table+0x9f8>
    7d7c:	mov	r3, #0
    7d80:	mov	r5, r7
    7d84:	mov	r4, r6
    7d88:	str	r3, [sp, #220]	; 0xdc
    7d8c:	ldrb	r3, [fp]
    7d90:	cmp	r3, #125	; 0x7d
    7d94:	beq	7de4 <MyGame_Example_Alt_parse_json_table+0x97c>
    7d98:	mov	r3, #10
    7d9c:	mov	r1, fp
    7da0:	mov	r2, r6
    7da4:	mov	r0, r7
    7da8:	bl	0 <flatcc_json_parser_set_error>
    7dac:	ldr	r3, [sp, #220]	; 0xdc
    7db0:	b	78ec <MyGame_Example_Alt_parse_json_table+0x484>
    7db4:	nop	{0}
    7db8:	.word	0x6a736f6e
    7dbc:	.word	0x74657374
    7dc0:	.word	0x69787061
    7dc4:	.word	0x70726566
    7dc8:	.word	0x67320000
    7dcc:	.word	0x7273696e
    7dd0:	.word	0x67000000
    7dd4:	.word	0x7273696e
    7dd8:	.word	0x67330000
    7ddc:	.word	0x7273696e
    7de0:	.word	0x000000f0
    7de4:	add	r1, fp, #1
    7de8:	sub	r3, r6, r1
    7dec:	cmp	r3, #1
    7df0:	ble	7e04 <MyGame_Example_Alt_parse_json_table+0x99c>
    7df4:	ldrb	r3, [fp, #1]
    7df8:	cmp	r3, #32
    7dfc:	bhi	8d68 <MyGame_Example_Alt_parse_json_table+0x1900>
    7e00:	beq	8e24 <MyGame_Example_Alt_parse_json_table+0x19bc>
    7e04:	mov	r2, r4
    7e08:	mov	r0, r5
    7e0c:	bl	0 <flatcc_json_parser_space_ext>
    7e10:	ldr	r3, [sp, #220]	; 0xdc
    7e14:	b	78ec <MyGame_Example_Alt_parse_json_table+0x484>
    7e18:	mov	r3, #0
    7e1c:	mov	r5, r7
    7e20:	mov	r4, r6
    7e24:	str	r3, [sp, #220]	; 0xdc
    7e28:	ldr	r3, [r5, #24]
    7e2c:	cmp	r3, #0
    7e30:	bne	7c74 <MyGame_Example_Alt_parse_json_table+0x80c>
    7e34:	ldr	r0, [r5]
    7e38:	bl	0 <flatcc_builder_end_table>
    7e3c:	cmp	r0, #0
    7e40:	str	r0, [sp, #212]	; 0xd4
    7e44:	bne	7c98 <MyGame_Example_Alt_parse_json_table+0x830>
    7e48:	b	7c74 <MyGame_Example_Alt_parse_json_table+0x80c>
    7e4c:	ldrb	r3, [fp, #1]
    7e50:	cmp	r3, #32
    7e54:	addhi	fp, fp, #1
    7e58:	bls	7d54 <MyGame_Example_Alt_parse_json_table+0x8ec>
    7e5c:	b	7d68 <MyGame_Example_Alt_parse_json_table+0x900>
    7e60:	add	r0, fp, #1
    7e64:	sub	r3, r6, r0
    7e68:	cmp	r3, #1
    7e6c:	ble	7e80 <MyGame_Example_Alt_parse_json_table+0xa18>
    7e70:	ldrb	r3, [fp, #1]
    7e74:	cmp	r3, #32
    7e78:	bhi	7e90 <MyGame_Example_Alt_parse_json_table+0xa28>
    7e7c:	beq	95a0 <MyGame_Example_Alt_parse_json_table+0x2138>
    7e80:	mov	r1, r0
    7e84:	mov	r2, r6
    7e88:	mov	r0, r7
    7e8c:	bl	0 <flatcc_json_parser_space_ext>
    7e90:	cmp	r6, r0
    7e94:	beq	95b8 <MyGame_Example_Alt_parse_json_table+0x2150>
    7e98:	ldrb	r3, [r0]
    7e9c:	cmp	r3, #125	; 0x7d
    7ea0:	beq	96b8 <MyGame_Example_Alt_parse_json_table+0x2250>
    7ea4:	mov	r3, #1
    7ea8:	str	r3, [sp, #220]	; 0xdc
    7eac:	b	78fc <MyGame_Example_Alt_parse_json_table+0x494>
    7eb0:	sub	r3, pc, #224	; 0xe0
    7eb4:	ldrd	r2, [r3]
    7eb8:	ldrd	r0, [sp, #96]	; 0x60
    7ebc:	cmp	r1, r3
    7ec0:	cmpeq	r0, r2
    7ec4:	bne	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    7ec8:	cmp	r5, #6
    7ecc:	ble	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    7ed0:	mov	r3, #6
    7ed4:	mov	r2, r6
    7ed8:	mov	r1, r4
    7edc:	mov	r0, r7
    7ee0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    7ee4:	cmp	r4, r0
    7ee8:	mov	r5, r0
    7eec:	beq	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    7ef0:	mov	r1, #2
    7ef4:	ldr	r0, [r7]
    7ef8:	bl	0 <flatcc_builder_start_table>
    7efc:	cmp	r0, #0
    7f00:	bne	8d54 <MyGame_Example_Alt_parse_json_table+0x18ec>
    7f04:	add	r3, sp, #224	; 0xe0
    7f08:	mov	r1, r5
    7f0c:	mov	r2, r6
    7f10:	mov	r0, r7
    7f14:	bl	3ac0 <flatcc_json_parser_object_start>
    7f18:	ldr	r3, [sp, #224]	; 0xe0
    7f1c:	cmp	r3, #0
    7f20:	beq	9a10 <MyGame_Example_Alt_parse_json_table+0x25a8>
    7f24:	ldr	r5, [pc, #-332]	; 7de0 <MyGame_Example_Alt_parse_json_table+0x978>
    7f28:	mov	r1, r0
    7f2c:	cmp	r6, r1
    7f30:	beq	7f5c <MyGame_Example_Alt_parse_json_table+0xaf4>
    7f34:	ldrb	r3, [r1]
    7f38:	cmp	r3, #34	; 0x22
    7f3c:	moveq	r3, #0
    7f40:	addeq	r1, r1, #1
    7f44:	streq	r3, [r7, #12]
    7f48:	beq	7f5c <MyGame_Example_Alt_parse_json_table+0xaf4>
    7f4c:	cmp	r3, #46	; 0x2e
    7f50:	movne	r3, #1
    7f54:	strne	r3, [r7, #12]
    7f58:	beq	8d3c <MyGame_Example_Alt_parse_json_table+0x18d4>
    7f5c:	sub	r3, r6, r1
    7f60:	cmp	r3, #8
    7f64:	bhi	7f98 <MyGame_Example_Alt_parse_json_table+0xb30>
    7f68:	sub	r3, r3, #1
    7f6c:	cmp	r3, #7
    7f70:	ldrls	pc, [pc, r3, lsl #2]
    7f74:	b	82c8 <MyGame_Example_Alt_parse_json_table+0xe60>
    7f78:	.word	0x00008080
    7f7c:	.word	0x00008074
    7f80:	.word	0x00008068
    7f84:	.word	0x0000805c
    7f88:	.word	0x00008050
    7f8c:	.word	0x00008044
    7f90:	.word	0x00008038
    7f94:	.word	0x00007f98
    7f98:	ldrb	sl, [r1, #7]
    7f9c:	mov	fp, #0
    7fa0:	mov	r3, fp
    7fa4:	ldrb	r8, [r1, #6]
    7fa8:	orr	r2, sl, r8, lsl #8
    7fac:	ldrb	r8, [r1, #5]
    7fb0:	orr	r2, r2, r8, lsl #16
    7fb4:	ldrb	r8, [r1, #4]
    7fb8:	orr	r2, r2, r8, lsl #24
    7fbc:	ldrb	sl, [r1, #3]
    7fc0:	orr	r3, r3, sl
    7fc4:	ldrb	sl, [r1, #2]
    7fc8:	orr	r3, r3, sl, lsl #8
    7fcc:	ldrb	sl, [r1, #1]
    7fd0:	orr	sl, r3, sl, lsl #16
    7fd4:	str	r2, [sp, #72]	; 0x48
    7fd8:	ldrb	r2, [r1]
    7fdc:	add	r9, pc, #900	; 0x384
    7fe0:	ldrd	r8, [r9]
    7fe4:	orr	r3, sl, r2, lsl #24
    7fe8:	str	r3, [sp, #76]	; 0x4c
    7fec:	ldrd	r2, [sp, #72]	; 0x48
    7ff0:	cmp	r3, r9
    7ff4:	cmpeq	r2, r8
    7ff8:	bne	82c8 <MyGame_Example_Alt_parse_json_table+0xe60>
    7ffc:	add	r4, r1, #8
    8000:	sub	r0, r6, r4
    8004:	cmp	r0, #8
    8008:	bhi	808c <MyGame_Example_Alt_parse_json_table+0xc24>
    800c:	sub	r3, r0, #2
    8010:	cmp	r3, #6
    8014:	ldrls	pc, [pc, r3, lsl #2]
    8018:	b	8310 <MyGame_Example_Alt_parse_json_table+0xea8>
    801c:	.word	0x000082a8
    8020:	.word	0x00008284
    8024:	.word	0x00008278
    8028:	.word	0x0000829c
    802c:	.word	0x0000826c
    8030:	.word	0x00008290
    8034:	.word	0x0000808c
    8038:	mov	sl, #0
    803c:	mov	fp, #0
    8040:	b	7fa0 <MyGame_Example_Alt_parse_json_table+0xb38>
    8044:	mov	r2, #0
    8048:	mov	r3, r2
    804c:	b	7fac <MyGame_Example_Alt_parse_json_table+0xb44>
    8050:	mov	r2, #0
    8054:	mov	r3, r2
    8058:	b	7fb4 <MyGame_Example_Alt_parse_json_table+0xb4c>
    805c:	mov	r2, #0
    8060:	mov	r3, r2
    8064:	b	7fbc <MyGame_Example_Alt_parse_json_table+0xb54>
    8068:	mov	r2, #0
    806c:	mov	r3, r2
    8070:	b	7fc4 <MyGame_Example_Alt_parse_json_table+0xb5c>
    8074:	mov	r2, #0
    8078:	mov	r3, r2
    807c:	b	7fcc <MyGame_Example_Alt_parse_json_table+0xb64>
    8080:	mov	r2, #0
    8084:	mov	sl, r2
    8088:	b	7fd4 <MyGame_Example_Alt_parse_json_table+0xb6c>
    808c:	ldrb	r2, [r1, #15]
    8090:	mov	r3, #0
    8094:	mov	ip, r3
    8098:	ldrb	r8, [r1, #14]
    809c:	orr	r2, r2, r8, lsl #8
    80a0:	ldrb	sl, [r1, #13]
    80a4:	orr	r2, r2, sl, lsl #16
    80a8:	ldrb	sl, [r1, #12]
    80ac:	orr	r2, r2, sl, lsl #24
    80b0:	ldrb	sl, [r1, #11]
    80b4:	orr	ip, ip, sl
    80b8:	ldrb	sl, [r1, #8]
    80bc:	mov	r9, #0
    80c0:	str	r2, [sp, #48]	; 0x30
    80c4:	ldrb	r8, [r1, #10]
    80c8:	ldrb	r2, [r1, #9]
    80cc:	lsl	sl, sl, #24
    80d0:	orr	r8, ip, r8, lsl #8
    80d4:	orr	sl, sl, r2, lsl #16
    80d8:	orr	r3, sl, r8
    80dc:	add	fp, pc, #652	; 0x28c
    80e0:	ldrd	sl, [fp]
    80e4:	str	r3, [sp, #52]	; 0x34
    80e8:	ldrd	r2, [sp, #48]	; 0x30
    80ec:	cmp	r3, fp
    80f0:	cmpeq	r2, sl
    80f4:	beq	84dc <MyGame_Example_Alt_parse_json_table+0x1074>
    80f8:	ldrd	r2, [sp, #48]	; 0x30
    80fc:	add	r9, pc, #628	; 0x274
    8100:	ldrd	r8, [r9]
    8104:	bic	r1, r2, #255	; 0xff
    8108:	str	r1, [sp, #112]	; 0x70
    810c:	str	r3, [sp, #116]	; 0x74
    8110:	ldrd	r2, [sp, #112]	; 0x70
    8114:	cmp	r3, r9
    8118:	cmpeq	r2, r8
    811c:	bne	8310 <MyGame_Example_Alt_parse_json_table+0xea8>
    8120:	cmp	r0, #7
    8124:	ble	8310 <MyGame_Example_Alt_parse_json_table+0xea8>
    8128:	mov	r3, #7
    812c:	mov	r2, r6
    8130:	mov	r1, r4
    8134:	mov	r0, r7
    8138:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    813c:	cmp	r4, r0
    8140:	mov	r8, r0
    8144:	beq	8310 <MyGame_Example_Alt_parse_json_table+0xea8>
    8148:	mov	r1, #0
    814c:	mov	r3, #0
    8150:	cmp	r6, r0
    8154:	mov	r0, #0
    8158:	str	r3, [sp, #228]	; 0xe4
    815c:	strd	r0, [sp, #232]	; 0xe8
    8160:	strd	r0, [sp, #240]	; 0xf0
    8164:	beq	8e38 <MyGame_Example_Alt_parse_json_table+0x19d0>
    8168:	add	r0, sp, #240	; 0xf0
    816c:	add	r3, sp, #228	; 0xe4
    8170:	mov	r2, r6
    8174:	mov	r1, r8
    8178:	str	r0, [sp]
    817c:	mov	r0, r7
    8180:	bl	0 <flatcc_json_parser_integer>
    8184:	cmp	r8, r0
    8188:	mov	fp, r0
    818c:	bne	8f2c <MyGame_Example_Alt_parse_json_table+0x1ac4>
    8190:	add	r0, sp, #232	; 0xe8
    8194:	mov	r3, r5
    8198:	mov	r2, r6
    819c:	mov	r1, fp
    81a0:	str	r0, [sp]
    81a4:	mov	r0, r7
    81a8:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    81ac:	cmp	r6, r0
    81b0:	cmpne	r0, fp
    81b4:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    81b8:	ldrd	r2, [sp, #232]	; 0xe8
    81bc:	mov	fp, r0
    81c0:	orrs	r3, r2, r3
    81c4:	bne	81d4 <MyGame_Example_Alt_parse_json_table+0xd6c>
    81c8:	ldr	r3, [r7, #8]
    81cc:	tst	r3, #2
    81d0:	beq	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    81d4:	mov	r3, #8
    81d8:	mov	r1, #0
    81dc:	ldr	r0, [r7]
    81e0:	mov	r2, r3
    81e4:	bl	0 <flatcc_builder_table_add>
    81e8:	cmp	r0, #0
    81ec:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    81f0:	ldrd	r2, [sp, #232]	; 0xe8
    81f4:	strd	r2, [r0]
    81f8:	sub	r3, r6, fp
    81fc:	cmp	r3, #1
    8200:	ble	8214 <MyGame_Example_Alt_parse_json_table+0xdac>
    8204:	ldrb	r3, [fp]
    8208:	cmp	r3, #32
    820c:	bhi	8228 <MyGame_Example_Alt_parse_json_table+0xdc0>
    8210:	beq	85ec <MyGame_Example_Alt_parse_json_table+0x1184>
    8214:	mov	r1, fp
    8218:	mov	r2, r6
    821c:	mov	r0, r7
    8220:	bl	0 <flatcc_json_parser_space_ext>
    8224:	mov	fp, r0
    8228:	cmp	r6, fp
    822c:	beq	8328 <MyGame_Example_Alt_parse_json_table+0xec0>
    8230:	ldrb	r3, [fp]
    8234:	cmp	r3, #44	; 0x2c
    8238:	beq	8600 <MyGame_Example_Alt_parse_json_table+0x1198>
    823c:	mov	r3, #0
    8240:	str	r3, [sp, #224]	; 0xe0
    8244:	ldrb	r3, [fp]
    8248:	cmp	r3, #125	; 0x7d
    824c:	beq	82dc <MyGame_Example_Alt_parse_json_table+0xe74>
    8250:	mov	r3, #10
    8254:	mov	r1, fp
    8258:	mov	r2, r6
    825c:	mov	r0, r7
    8260:	bl	0 <flatcc_json_parser_set_error>
    8264:	ldr	r3, [sp, #224]	; 0xe0
    8268:	b	7f1c <MyGame_Example_Alt_parse_json_table+0xab4>
    826c:	mov	r2, #0
    8270:	mov	ip, r2
    8274:	b	80a0 <MyGame_Example_Alt_parse_json_table+0xc38>
    8278:	mov	r2, #0
    827c:	mov	ip, r2
    8280:	b	80b0 <MyGame_Example_Alt_parse_json_table+0xc48>
    8284:	mov	r2, #0
    8288:	mov	ip, r2
    828c:	b	80b8 <MyGame_Example_Alt_parse_json_table+0xc50>
    8290:	mov	r2, #0
    8294:	mov	r3, #0
    8298:	b	8094 <MyGame_Example_Alt_parse_json_table+0xc2c>
    829c:	mov	r2, #0
    82a0:	mov	ip, r2
    82a4:	b	80a8 <MyGame_Example_Alt_parse_json_table+0xc40>
    82a8:	ldrb	r2, [r1, #9]
    82ac:	mov	ip, #0
    82b0:	ldrb	r8, [r1, #8]
    82b4:	str	ip, [sp, #48]	; 0x30
    82b8:	lsl	r2, r2, #16
    82bc:	orr	r3, r2, r8, lsl #24
    82c0:	str	r3, [sp, #52]	; 0x34
    82c4:	b	80f8 <MyGame_Example_Alt_parse_json_table+0xc90>
    82c8:	mov	r2, r6
    82cc:	mov	r0, r7
    82d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    82d4:	mov	fp, r0
    82d8:	b	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    82dc:	add	r1, fp, #1
    82e0:	sub	r3, r6, r1
    82e4:	cmp	r3, #1
    82e8:	ble	82fc <MyGame_Example_Alt_parse_json_table+0xe94>
    82ec:	ldrb	r3, [fp, #1]
    82f0:	cmp	r3, #32
    82f4:	bhi	8d70 <MyGame_Example_Alt_parse_json_table+0x1908>
    82f8:	beq	8e40 <MyGame_Example_Alt_parse_json_table+0x19d8>
    82fc:	mov	r2, r6
    8300:	mov	r0, r7
    8304:	bl	0 <flatcc_json_parser_space_ext>
    8308:	ldr	r3, [sp, #224]	; 0xe0
    830c:	b	7f1c <MyGame_Example_Alt_parse_json_table+0xab4>
    8310:	mov	r1, r4
    8314:	mov	r2, r6
    8318:	mov	r0, r7
    831c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8320:	mov	fp, r0
    8324:	b	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    8328:	mov	r3, #0
    832c:	str	r3, [sp, #224]	; 0xe0
    8330:	ldr	r3, [r7, #24]
    8334:	cmp	r3, #0
    8338:	bne	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    833c:	ldr	r0, [r7]
    8340:	bl	0 <flatcc_builder_end_table>
    8344:	subs	r4, r0, #0
    8348:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    834c:	mov	r1, #2
    8350:	ldr	r0, [r7]
    8354:	bl	0 <flatcc_builder_table_add_offset>
    8358:	cmp	r0, #0
    835c:	beq	8aec <MyGame_Example_Alt_parse_json_table+0x1684>
    8360:	str	r4, [r0]
    8364:	b	7d38 <MyGame_Example_Alt_parse_json_table+0x8d0>
    8368:	.word	0x5f626262
    836c:	.word	0x61616161
    8370:	.word	0x6172745f
    8374:	.word	0x625f7374
    8378:	.word	0x65707300
    837c:	.word	0x625f7374
    8380:	.word	0x31323334
    8384:	.word	0x61616161
    8388:	.word	0x73000000
    838c:	.word	0x73746570
    8390:	.word	0x000000e4
    8394:	ldrb	r2, [fp, #7]
    8398:	mov	r3, #0
    839c:	mov	lr, r3
    83a0:	ldrb	r8, [fp, #6]
    83a4:	orr	r2, r2, r8, lsl #8
    83a8:	ldrb	r8, [fp, #5]
    83ac:	orr	r2, r2, r8, lsl #16
    83b0:	ldrb	r8, [fp, #4]
    83b4:	orr	r8, r2, r8, lsl #24
    83b8:	ldrb	r0, [fp, #3]
    83bc:	orr	lr, lr, r0
    83c0:	ldrb	r2, [fp]
    83c4:	str	r8, [sp, #24]
    83c8:	mov	r8, #0
    83cc:	ldrb	r0, [fp, #2]
    83d0:	lsl	r9, r2, #24
    83d4:	ldrb	r2, [fp, #1]
    83d8:	orr	r0, lr, r0, lsl #8
    83dc:	orr	r2, r9, r2, lsl #16
    83e0:	orr	r3, r2, r0
    83e4:	str	r3, [sp, #28]
    83e8:	ldrd	r2, [sp, #24]
    83ec:	cmp	r3, r5
    83f0:	cmpeq	r2, r4
    83f4:	bhi	9070 <MyGame_Example_Alt_parse_json_table+0x1c08>
    83f8:	sub	r1, pc, #128	; 0x80
    83fc:	ldrd	r0, [r1]
    8400:	cmp	r3, r1
    8404:	cmpeq	r2, r0
    8408:	beq	9150 <MyGame_Example_Alt_parse_json_table+0x1ce8>
    840c:	ldr	r1, [sp, #28]
    8410:	mov	r8, #0
    8414:	movw	r3, #24929	; 0x6161
    8418:	movt	r3, #24929	; 0x6161
    841c:	mov	r2, #0
    8420:	str	r8, [sp, #120]	; 0x78
    8424:	str	r1, [sp, #124]	; 0x7c
    8428:	ldrd	r0, [sp, #120]	; 0x78
    842c:	cmp	r1, r3
    8430:	cmpeq	r0, r2
    8434:	bne	9330 <MyGame_Example_Alt_parse_json_table+0x1ec8>
    8438:	cmp	ip, #4
    843c:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    8440:	mov	r1, fp
    8444:	mov	r3, #4
    8448:	mov	r2, r6
    844c:	mov	r0, r7
    8450:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    8454:	cmp	r0, fp
    8458:	mov	r1, r0
    845c:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    8460:	add	r3, sp, #232	; 0xe8
    8464:	mov	r2, r6
    8468:	mov	r0, r7
    846c:	bl	0 <flatcc_json_parser_build_string>
    8470:	ldr	r3, [sp, #232]	; 0xe8
    8474:	mov	fp, r0
    8478:	cmp	r3, #0
    847c:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8480:	mov	r1, r8
    8484:	ldr	r0, [r7]
    8488:	bl	0 <flatcc_builder_table_add_offset>
    848c:	cmp	r0, #0
    8490:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8494:	ldr	r3, [sp, #232]	; 0xe8
    8498:	str	r3, [r0]
    849c:	mov	r1, fp
    84a0:	add	r3, sp, #228	; 0xe4
    84a4:	mov	r2, r6
    84a8:	mov	r0, r7
    84ac:	bl	5c48 <flatcc_json_parser_object_end>
    84b0:	ldr	r3, [sp, #228]	; 0xe4
    84b4:	mov	fp, r0
    84b8:	cmp	r3, #0
    84bc:	bne	8f84 <MyGame_Example_Alt_parse_json_table+0x1b1c>
    84c0:	ldr	r1, [r7, #24]
    84c4:	cmp	r1, #0
    84c8:	beq	97fc <MyGame_Example_Alt_parse_json_table+0x2394>
    84cc:	mov	r5, r7
    84d0:	mov	r4, r6
    84d4:	mov	r1, fp
    84d8:	b	7c60 <MyGame_Example_Alt_parse_json_table+0x7f8>
    84dc:	add	r8, r1, #16
    84e0:	mov	r1, r6
    84e4:	mov	r0, r8
    84e8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    84ec:	and	r3, r0, #-16777216	; 0xff000000
    84f0:	str	r3, [sp, #152]	; 0x98
    84f4:	str	r1, [sp, #156]	; 0x9c
    84f8:	sub	r1, pc, #376	; 0x178
    84fc:	ldrd	r0, [r1]
    8500:	ldrd	r2, [sp, #152]	; 0x98
    8504:	cmp	r3, r1
    8508:	cmpeq	r2, r0
    850c:	bne	8650 <MyGame_Example_Alt_parse_json_table+0x11e8>
    8510:	sub	r3, r6, r8
    8514:	cmp	r3, #5
    8518:	ble	8650 <MyGame_Example_Alt_parse_json_table+0x11e8>
    851c:	mov	r3, #5
    8520:	mov	r2, r6
    8524:	mov	r1, r8
    8528:	mov	r0, r7
    852c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    8530:	cmp	r8, r0
    8534:	mov	r4, r0
    8538:	beq	8650 <MyGame_Example_Alt_parse_json_table+0x11e8>
    853c:	mov	r2, #0
    8540:	mov	r3, #0
    8544:	str	r9, [sp, #228]	; 0xe4
    8548:	cmp	r6, r0
    854c:	str	r9, [sp, #232]	; 0xe8
    8550:	strd	r2, [sp, #240]	; 0xf0
    8554:	beq	9664 <MyGame_Example_Alt_parse_json_table+0x21fc>
    8558:	add	r0, sp, #240	; 0xf0
    855c:	add	r3, sp, #232	; 0xe8
    8560:	mov	r2, r6
    8564:	mov	r1, r4
    8568:	str	r0, [sp]
    856c:	mov	r0, r7
    8570:	bl	0 <flatcc_json_parser_integer>
    8574:	cmp	r4, r0
    8578:	mov	r8, r0
    857c:	bne	9738 <MyGame_Example_Alt_parse_json_table+0x22d0>
    8580:	add	ip, sp, #228	; 0xe4
    8584:	ldr	r3, [pc, #-508]	; 8390 <MyGame_Example_Alt_parse_json_table+0xf28>
    8588:	mov	r2, r6
    858c:	mov	r1, r8
    8590:	mov	r0, r7
    8594:	str	ip, [sp]
    8598:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    859c:	cmp	r6, r0
    85a0:	cmpne	r0, r8
    85a4:	mov	fp, r0
    85a8:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    85ac:	ldr	r2, [sp, #228]	; 0xe4
    85b0:	cmp	r2, #0
    85b4:	bne	85c4 <MyGame_Example_Alt_parse_json_table+0x115c>
    85b8:	ldr	r3, [r7, #8]
    85bc:	tst	r3, #2
    85c0:	beq	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    85c4:	mov	r3, #4
    85c8:	mov	r1, #1
    85cc:	ldr	r0, [r7]
    85d0:	mov	r2, r3
    85d4:	bl	0 <flatcc_builder_table_add>
    85d8:	cmp	r0, #0
    85dc:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    85e0:	ldr	r3, [sp, #228]	; 0xe4
    85e4:	str	r3, [r0]
    85e8:	b	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    85ec:	ldrb	r3, [fp, #1]
    85f0:	cmp	r3, #32
    85f4:	addhi	fp, fp, #1
    85f8:	bls	8214 <MyGame_Example_Alt_parse_json_table+0xdac>
    85fc:	b	8228 <MyGame_Example_Alt_parse_json_table+0xdc0>
    8600:	add	r1, fp, #1
    8604:	sub	r3, r6, r1
    8608:	cmp	r3, #1
    860c:	ble	8620 <MyGame_Example_Alt_parse_json_table+0x11b8>
    8610:	ldrb	r3, [fp, #1]
    8614:	cmp	r3, #32
    8618:	bhi	8630 <MyGame_Example_Alt_parse_json_table+0x11c8>
    861c:	beq	95ec <MyGame_Example_Alt_parse_json_table+0x2184>
    8620:	mov	r2, r6
    8624:	mov	r0, r7
    8628:	bl	0 <flatcc_json_parser_space_ext>
    862c:	mov	r1, r0
    8630:	cmp	r6, r1
    8634:	beq	9604 <MyGame_Example_Alt_parse_json_table+0x219c>
    8638:	ldrb	r3, [r1]
    863c:	cmp	r3, #125	; 0x7d
    8640:	beq	96fc <MyGame_Example_Alt_parse_json_table+0x2294>
    8644:	mov	r3, #1
    8648:	str	r3, [sp, #224]	; 0xe0
    864c:	b	7f2c <MyGame_Example_Alt_parse_json_table+0xac4>
    8650:	mov	r1, r8
    8654:	mov	r2, r6
    8658:	mov	r0, r7
    865c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8660:	mov	fp, r0
    8664:	b	81f8 <MyGame_Example_Alt_parse_json_table+0xd90>
    8668:	mov	r1, r4
    866c:	mov	r2, r6
    8670:	mov	r0, r7
    8674:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8678:	mov	fp, r0
    867c:	b	7d38 <MyGame_Example_Alt_parse_json_table+0x8d0>
    8680:	cmp	r5, #6
    8684:	ble	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    8688:	mov	r3, #6
    868c:	mov	r2, r6
    8690:	mov	r1, r4
    8694:	mov	r0, r7
    8698:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    869c:	cmp	r4, r0
    86a0:	mov	r5, r0
    86a4:	beq	8668 <MyGame_Example_Alt_parse_json_table+0x1200>
    86a8:	mov	r1, #2
    86ac:	ldr	r0, [r7]
    86b0:	bl	0 <flatcc_builder_start_table>
    86b4:	cmp	r0, #0
    86b8:	bne	8d54 <MyGame_Example_Alt_parse_json_table+0x18ec>
    86bc:	add	r3, sp, #224	; 0xe0
    86c0:	mov	r1, r5
    86c4:	mov	r2, r6
    86c8:	mov	r0, r7
    86cc:	bl	3ac0 <flatcc_json_parser_object_start>
    86d0:	ldr	r3, [sp, #224]	; 0xe0
    86d4:	cmp	r3, #0
    86d8:	beq	9a08 <MyGame_Example_Alt_parse_json_table+0x25a0>
    86dc:	mov	r1, r0
    86e0:	cmp	r6, r1
    86e4:	beq	8710 <MyGame_Example_Alt_parse_json_table+0x12a8>
    86e8:	ldrb	r3, [r1]
    86ec:	cmp	r3, #34	; 0x22
    86f0:	moveq	r3, #0
    86f4:	addeq	r1, r1, #1
    86f8:	streq	r3, [r7, #12]
    86fc:	beq	8710 <MyGame_Example_Alt_parse_json_table+0x12a8>
    8700:	cmp	r3, #46	; 0x2e
    8704:	movne	r3, #1
    8708:	strne	r3, [r7, #12]
    870c:	beq	8d04 <MyGame_Example_Alt_parse_json_table+0x189c>
    8710:	sub	r3, r6, r1
    8714:	cmp	r3, #8
    8718:	bhi	874c <MyGame_Example_Alt_parse_json_table+0x12e4>
    871c:	sub	r3, r3, #1
    8720:	cmp	r3, #7
    8724:	ldrls	pc, [pc, r3, lsl #2]
    8728:	b	8a54 <MyGame_Example_Alt_parse_json_table+0x15ec>
    872c:	.word	0x00008824
    8730:	.word	0x00008818
    8734:	.word	0x0000880c
    8738:	.word	0x00008800
    873c:	.word	0x000087f4
    8740:	.word	0x00008830
    8744:	.word	0x000087e8
    8748:	.word	0x0000874c
    874c:	ldrb	r8, [r1, #7]
    8750:	mov	r9, #0
    8754:	mov	r3, r9
    8758:	ldrb	r4, [r1, #6]
    875c:	orr	r2, r8, r4, lsl #8
    8760:	ldrb	sl, [r1, #5]
    8764:	orr	r2, r2, sl, lsl #16
    8768:	ldrb	sl, [r1, #4]
    876c:	orr	r2, r2, sl, lsl #24
    8770:	ldrb	r8, [r1, #3]
    8774:	orr	r8, r3, r8
    8778:	ldrb	sl, [r1, #2]
    877c:	orr	r8, r8, sl, lsl #8
    8780:	ldrb	sl, [r1, #1]
    8784:	orr	r8, r8, sl, lsl #16
    8788:	str	r2, [sp, #64]	; 0x40
    878c:	ldrb	r2, [r1]
    8790:	add	r5, pc, #864	; 0x360
    8794:	ldrd	r4, [r5]
    8798:	orr	r3, r8, r2, lsl #24
    879c:	str	r3, [sp, #68]	; 0x44
    87a0:	ldrd	r2, [sp, #64]	; 0x40
    87a4:	cmp	r3, r5
    87a8:	cmpeq	r2, r4
    87ac:	bne	8a54 <MyGame_Example_Alt_parse_json_table+0x15ec>
    87b0:	add	r8, r1, #8
    87b4:	sub	r0, r6, r8
    87b8:	cmp	r0, #8
    87bc:	bhi	883c <MyGame_Example_Alt_parse_json_table+0x13d4>
    87c0:	sub	r3, r0, #3
    87c4:	cmp	r3, #5
    87c8:	ldrls	pc, [pc, r3, lsl #2]
    87cc:	b	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    87d0:	.word	0x00008a24
    87d4:	.word	0x00008a18
    87d8:	.word	0x00008a30
    87dc:	.word	0x00008a3c
    87e0:	.word	0x00008a48
    87e4:	.word	0x0000883c
    87e8:	mov	r8, #0
    87ec:	mov	r9, #0
    87f0:	b	8754 <MyGame_Example_Alt_parse_json_table+0x12ec>
    87f4:	mov	r2, #0
    87f8:	mov	r3, r2
    87fc:	b	8768 <MyGame_Example_Alt_parse_json_table+0x1300>
    8800:	mov	r2, #0
    8804:	mov	r3, r2
    8808:	b	8770 <MyGame_Example_Alt_parse_json_table+0x1308>
    880c:	mov	r2, #0
    8810:	mov	r8, r2
    8814:	b	8778 <MyGame_Example_Alt_parse_json_table+0x1310>
    8818:	mov	r2, #0
    881c:	mov	r8, r2
    8820:	b	8780 <MyGame_Example_Alt_parse_json_table+0x1318>
    8824:	mov	r2, #0
    8828:	mov	r8, r2
    882c:	b	8788 <MyGame_Example_Alt_parse_json_table+0x1320>
    8830:	mov	r2, #0
    8834:	mov	r3, r2
    8838:	b	8760 <MyGame_Example_Alt_parse_json_table+0x12f8>
    883c:	ldrb	r2, [r1, #15]
    8840:	mov	r3, #0
    8844:	mov	ip, r3
    8848:	ldrb	r4, [r1, #14]
    884c:	orr	r2, r2, r4, lsl #8
    8850:	ldrb	r4, [r1, #13]
    8854:	orr	r2, r2, r4, lsl #16
    8858:	ldrb	r4, [r1, #12]
    885c:	orr	r2, r2, r4, lsl #24
    8860:	ldrb	sl, [r1, #11]
    8864:	orr	ip, ip, sl
    8868:	ldrb	r4, [r1, #8]
    886c:	mov	r5, #0
    8870:	str	r2, [sp, #32]
    8874:	ldrb	sl, [r1, #10]
    8878:	ldrb	r2, [r1, #9]
    887c:	lsl	r4, r4, #24
    8880:	orr	sl, ip, sl, lsl #8
    8884:	orr	r4, r4, r2, lsl #16
    8888:	orr	r3, r4, sl
    888c:	add	fp, pc, #620	; 0x26c
    8890:	ldrd	sl, [fp]
    8894:	str	r3, [sp, #36]	; 0x24
    8898:	ldrd	r2, [sp, #32]
    889c:	bic	r1, r2, #255	; 0xff
    88a0:	str	r1, [sp, #88]	; 0x58
    88a4:	str	r3, [sp, #92]	; 0x5c
    88a8:	ldrd	r2, [sp, #88]	; 0x58
    88ac:	cmp	r3, fp
    88b0:	cmpeq	r2, sl
    88b4:	beq	8b18 <MyGame_Example_Alt_parse_json_table+0x16b0>
    88b8:	add	fp, pc, #584	; 0x248
    88bc:	ldrd	sl, [fp]
    88c0:	ldrd	r2, [sp, #32]
    88c4:	cmp	r3, fp
    88c8:	cmpeq	r2, sl
    88cc:	bne	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    88d0:	cmp	r0, #8
    88d4:	ble	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    88d8:	mov	r3, #8
    88dc:	mov	r2, r6
    88e0:	mov	r1, r8
    88e4:	mov	r0, r7
    88e8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    88ec:	cmp	r8, r0
    88f0:	mov	r4, r0
    88f4:	beq	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    88f8:	mov	r2, #0
    88fc:	mov	r3, #0
    8900:	str	r5, [sp, #228]	; 0xe4
    8904:	cmp	r6, r0
    8908:	str	r5, [sp, #232]	; 0xe8
    890c:	strd	r2, [sp, #240]	; 0xf0
    8910:	beq	8e08 <MyGame_Example_Alt_parse_json_table+0x19a0>
    8914:	add	r0, sp, #240	; 0xf0
    8918:	add	r3, sp, #232	; 0xe8
    891c:	mov	r2, r6
    8920:	mov	r1, r4
    8924:	str	r0, [sp]
    8928:	mov	r0, r7
    892c:	bl	0 <flatcc_json_parser_integer>
    8930:	cmp	r4, r0
    8934:	mov	r5, r0
    8938:	bne	8e80 <MyGame_Example_Alt_parse_json_table+0x1a18>
    893c:	add	ip, sp, #228	; 0xe4
    8940:	ldr	r3, [pc, #456]	; 8b10 <MyGame_Example_Alt_parse_json_table+0x16a8>
    8944:	mov	r2, r6
    8948:	mov	r1, r5
    894c:	mov	r0, r7
    8950:	str	ip, [sp]
    8954:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    8958:	cmp	r6, r0
    895c:	cmpne	r0, r5
    8960:	mov	fp, r0
    8964:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8968:	ldr	r2, [sp, #228]	; 0xe4
    896c:	cmp	r2, #0
    8970:	bne	8980 <MyGame_Example_Alt_parse_json_table+0x1518>
    8974:	ldr	r3, [r7, #8]
    8978:	tst	r3, #2
    897c:	beq	89a4 <MyGame_Example_Alt_parse_json_table+0x153c>
    8980:	mov	r3, #4
    8984:	mov	r1, #1
    8988:	ldr	r0, [r7]
    898c:	mov	r2, r3
    8990:	bl	0 <flatcc_builder_table_add>
    8994:	cmp	r0, #0
    8998:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    899c:	ldr	r3, [sp, #228]	; 0xe4
    89a0:	str	r3, [r0]
    89a4:	sub	r3, r6, fp
    89a8:	cmp	r3, #1
    89ac:	ble	89c0 <MyGame_Example_Alt_parse_json_table+0x1558>
    89b0:	ldrb	r3, [fp]
    89b4:	cmp	r3, #32
    89b8:	bhi	89d4 <MyGame_Example_Alt_parse_json_table+0x156c>
    89bc:	beq	8bf0 <MyGame_Example_Alt_parse_json_table+0x1788>
    89c0:	mov	r1, fp
    89c4:	mov	r2, r6
    89c8:	mov	r0, r7
    89cc:	bl	0 <flatcc_json_parser_space_ext>
    89d0:	mov	fp, r0
    89d4:	cmp	r6, fp
    89d8:	beq	8ab4 <MyGame_Example_Alt_parse_json_table+0x164c>
    89dc:	ldrb	r3, [fp]
    89e0:	cmp	r3, #44	; 0x2c
    89e4:	beq	8c04 <MyGame_Example_Alt_parse_json_table+0x179c>
    89e8:	mov	r3, #0
    89ec:	str	r3, [sp, #224]	; 0xe0
    89f0:	ldrb	r3, [fp]
    89f4:	cmp	r3, #125	; 0x7d
    89f8:	beq	8a80 <MyGame_Example_Alt_parse_json_table+0x1618>
    89fc:	mov	r3, #10
    8a00:	mov	r1, fp
    8a04:	mov	r2, r6
    8a08:	mov	r0, r7
    8a0c:	bl	0 <flatcc_json_parser_set_error>
    8a10:	ldr	r3, [sp, #224]	; 0xe0
    8a14:	b	86d4 <MyGame_Example_Alt_parse_json_table+0x126c>
    8a18:	mov	r2, #0
    8a1c:	mov	ip, r2
    8a20:	b	8860 <MyGame_Example_Alt_parse_json_table+0x13f8>
    8a24:	mov	r2, #0
    8a28:	mov	ip, r2
    8a2c:	b	8868 <MyGame_Example_Alt_parse_json_table+0x1400>
    8a30:	mov	r2, #0
    8a34:	mov	ip, r2
    8a38:	b	8858 <MyGame_Example_Alt_parse_json_table+0x13f0>
    8a3c:	mov	r2, #0
    8a40:	mov	ip, r2
    8a44:	b	8850 <MyGame_Example_Alt_parse_json_table+0x13e8>
    8a48:	mov	r2, #0
    8a4c:	mov	r3, #0
    8a50:	b	8844 <MyGame_Example_Alt_parse_json_table+0x13dc>
    8a54:	mov	r2, r6
    8a58:	mov	r0, r7
    8a5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8a60:	mov	fp, r0
    8a64:	b	89a4 <MyGame_Example_Alt_parse_json_table+0x153c>
    8a68:	mov	r1, r8
    8a6c:	mov	r2, r6
    8a70:	mov	r0, r7
    8a74:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8a78:	mov	fp, r0
    8a7c:	b	89a4 <MyGame_Example_Alt_parse_json_table+0x153c>
    8a80:	add	r1, fp, #1
    8a84:	sub	r3, r6, r1
    8a88:	cmp	r3, #1
    8a8c:	ble	8aa0 <MyGame_Example_Alt_parse_json_table+0x1638>
    8a90:	ldrb	r3, [fp, #1]
    8a94:	cmp	r3, #32
    8a98:	bhi	8d34 <MyGame_Example_Alt_parse_json_table+0x18cc>
    8a9c:	beq	8e10 <MyGame_Example_Alt_parse_json_table+0x19a8>
    8aa0:	mov	r2, r6
    8aa4:	mov	r0, r7
    8aa8:	bl	0 <flatcc_json_parser_space_ext>
    8aac:	ldr	r3, [sp, #224]	; 0xe0
    8ab0:	b	86d4 <MyGame_Example_Alt_parse_json_table+0x126c>
    8ab4:	mov	r3, #0
    8ab8:	str	r3, [sp, #224]	; 0xe0
    8abc:	ldr	r3, [r7, #24]
    8ac0:	cmp	r3, #0
    8ac4:	bne	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8ac8:	ldr	r0, [r7]
    8acc:	bl	0 <flatcc_builder_end_table>
    8ad0:	subs	r4, r0, #0
    8ad4:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8ad8:	mov	r1, #1
    8adc:	ldr	r0, [r7]
    8ae0:	bl	0 <flatcc_builder_table_add_offset>
    8ae4:	cmp	r0, #0
    8ae8:	bne	8360 <MyGame_Example_Alt_parse_json_table+0xef8>
    8aec:	mov	r5, r7
    8af0:	mov	r4, r6
    8af4:	b	7c74 <MyGame_Example_Alt_parse_json_table+0x80c>
    8af8:	.word	0x5f626262
    8afc:	.word	0x61616161
    8b00:	.word	0x65707300
    8b04:	.word	0x625f7374
    8b08:	.word	0x6172745f
    8b0c:	.word	0x625f7374
    8b10:	.word	0x00000090
    8b14:	.word	0x00000084
    8b18:	cmp	r0, #7
    8b1c:	ble	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    8b20:	mov	r3, #7
    8b24:	mov	r2, r6
    8b28:	mov	r1, r8
    8b2c:	mov	r0, r7
    8b30:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    8b34:	cmp	r8, r0
    8b38:	mov	r4, r0
    8b3c:	beq	8a68 <MyGame_Example_Alt_parse_json_table+0x1600>
    8b40:	mov	r2, #0
    8b44:	mov	r3, #0
    8b48:	str	r5, [sp, #228]	; 0xe4
    8b4c:	cmp	r6, r0
    8b50:	strd	r2, [sp, #232]	; 0xe8
    8b54:	strd	r2, [sp, #240]	; 0xf0
    8b58:	beq	8e00 <MyGame_Example_Alt_parse_json_table+0x1998>
    8b5c:	add	r0, sp, #240	; 0xf0
    8b60:	add	r3, sp, #228	; 0xe4
    8b64:	mov	r2, r6
    8b68:	mov	r1, r4
    8b6c:	str	r0, [sp]
    8b70:	mov	r0, r7
    8b74:	bl	0 <flatcc_json_parser_integer>
    8b78:	cmp	r4, r0
    8b7c:	mov	fp, r0
    8b80:	bne	8e54 <MyGame_Example_Alt_parse_json_table+0x19ec>
    8b84:	add	ip, sp, #232	; 0xe8
    8b88:	ldr	r3, [pc, #-124]	; 8b14 <MyGame_Example_Alt_parse_json_table+0x16ac>
    8b8c:	mov	r2, r6
    8b90:	mov	r1, fp
    8b94:	mov	r0, r7
    8b98:	str	ip, [sp]
    8b9c:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    8ba0:	cmp	r6, r0
    8ba4:	cmpne	r0, fp
    8ba8:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    8bac:	ldrd	r2, [sp, #232]	; 0xe8
    8bb0:	mov	fp, r0
    8bb4:	orrs	r3, r2, r3
    8bb8:	bne	8bc8 <MyGame_Example_Alt_parse_json_table+0x1760>
    8bbc:	ldr	r3, [r7, #8]
    8bc0:	tst	r3, #2
    8bc4:	beq	89a4 <MyGame_Example_Alt_parse_json_table+0x153c>
    8bc8:	mov	r3, #8
    8bcc:	mov	r1, #0
    8bd0:	ldr	r0, [r7]
    8bd4:	mov	r2, r3
    8bd8:	bl	0 <flatcc_builder_table_add>
    8bdc:	cmp	r0, #0
    8be0:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    8be4:	ldrd	r2, [sp, #232]	; 0xe8
    8be8:	strd	r2, [r0]
    8bec:	b	89a4 <MyGame_Example_Alt_parse_json_table+0x153c>
    8bf0:	ldrb	r3, [fp, #1]
    8bf4:	cmp	r3, #32
    8bf8:	addhi	fp, fp, #1
    8bfc:	bls	89c0 <MyGame_Example_Alt_parse_json_table+0x1558>
    8c00:	b	89d4 <MyGame_Example_Alt_parse_json_table+0x156c>
    8c04:	add	r1, fp, #1
    8c08:	sub	r3, r6, r1
    8c0c:	cmp	r3, #1
    8c10:	ble	8c24 <MyGame_Example_Alt_parse_json_table+0x17bc>
    8c14:	ldrb	r3, [fp, #1]
    8c18:	cmp	r3, #32
    8c1c:	bhi	8c34 <MyGame_Example_Alt_parse_json_table+0x17cc>
    8c20:	beq	8ed4 <MyGame_Example_Alt_parse_json_table+0x1a6c>
    8c24:	mov	r2, r6
    8c28:	mov	r0, r7
    8c2c:	bl	0 <flatcc_json_parser_space_ext>
    8c30:	mov	r1, r0
    8c34:	cmp	r6, r1
    8c38:	beq	8eec <MyGame_Example_Alt_parse_json_table+0x1a84>
    8c3c:	ldrb	r3, [r1]
    8c40:	cmp	r3, #125	; 0x7d
    8c44:	beq	9628 <MyGame_Example_Alt_parse_json_table+0x21c0>
    8c48:	mov	r3, #1
    8c4c:	str	r3, [sp, #224]	; 0xe0
    8c50:	b	86e0 <MyGame_Example_Alt_parse_json_table+0x1278>
    8c54:	mov	r3, #0
    8c58:	str	r3, [sp, #208]	; 0xd0
    8c5c:	ldr	r3, [r5, #24]
    8c60:	cmp	r3, #0
    8c64:	bne	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    8c68:	mov	r1, fp
    8c6c:	mov	r2, r4
    8c70:	ldr	r3, [sp, #216]	; 0xd8
    8c74:	mov	r0, r5
    8c78:	bl	0 <flatcc_json_parser_finalize_unions>
    8c7c:	mov	fp, r0
    8c80:	ldr	r0, [r5]
    8c84:	bl	0 <flatcc_builder_end_table>
    8c88:	ldr	r3, [sp, #200]	; 0xc8
    8c8c:	cmp	r0, #0
    8c90:	str	r0, [r3]
    8c94:	bne	74c8 <MyGame_Example_Alt_parse_json_table+0x60>
    8c98:	b	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    8c9c:	ldrb	r3, [fp, #1]
    8ca0:	cmp	r3, #32
    8ca4:	addhi	fp, fp, #1
    8ca8:	bls	7674 <MyGame_Example_Alt_parse_json_table+0x20c>
    8cac:	b	7688 <MyGame_Example_Alt_parse_json_table+0x220>
    8cb0:	add	sl, fp, #1
    8cb4:	sub	r3, r4, sl
    8cb8:	cmp	r3, #1
    8cbc:	ble	8cd0 <MyGame_Example_Alt_parse_json_table+0x1868>
    8cc0:	ldrb	r3, [fp, #1]
    8cc4:	cmp	r3, #32
    8cc8:	bhi	8ce4 <MyGame_Example_Alt_parse_json_table+0x187c>
    8ccc:	beq	97b8 <MyGame_Example_Alt_parse_json_table+0x2350>
    8cd0:	mov	r1, sl
    8cd4:	mov	r2, r4
    8cd8:	mov	r0, r5
    8cdc:	bl	0 <flatcc_json_parser_space_ext>
    8ce0:	mov	sl, r0
    8ce4:	cmp	r4, sl
    8ce8:	beq	98ac <MyGame_Example_Alt_parse_json_table+0x2444>
    8cec:	ldrb	r3, [sl]
    8cf0:	cmp	r3, #125	; 0x7d
    8cf4:	beq	9858 <MyGame_Example_Alt_parse_json_table+0x23f0>
    8cf8:	mov	r3, #1
    8cfc:	str	r3, [sp, #208]	; 0xd0
    8d00:	b	7530 <MyGame_Example_Alt_parse_json_table+0xc8>
    8d04:	mov	r3, #5
    8d08:	mov	r2, r6
    8d0c:	mov	r0, r7
    8d10:	bl	0 <flatcc_json_parser_set_error>
    8d14:	mov	r1, r0
    8d18:	b	8710 <MyGame_Example_Alt_parse_json_table+0x12a8>
    8d1c:	mov	r1, r0
    8d20:	mov	r3, #5
    8d24:	mov	r2, r6
    8d28:	mov	r0, r7
    8d2c:	bl	0 <flatcc_json_parser_set_error>
    8d30:	b	792c <MyGame_Example_Alt_parse_json_table+0x4c4>
    8d34:	mov	fp, r1
    8d38:	b	8abc <MyGame_Example_Alt_parse_json_table+0x1654>
    8d3c:	mov	r3, #5
    8d40:	mov	r2, r6
    8d44:	mov	r0, r7
    8d48:	bl	0 <flatcc_json_parser_set_error>
    8d4c:	mov	r1, r0
    8d50:	b	7f5c <MyGame_Example_Alt_parse_json_table+0xaf4>
    8d54:	mov	r4, r6
    8d58:	mov	r6, r5
    8d5c:	mov	r1, r6
    8d60:	mov	r5, r7
    8d64:	b	7c60 <MyGame_Example_Alt_parse_json_table+0x7f8>
    8d68:	mov	fp, r1
    8d6c:	b	7e28 <MyGame_Example_Alt_parse_json_table+0x9c0>
    8d70:	mov	fp, r1
    8d74:	b	8330 <MyGame_Example_Alt_parse_json_table+0xec8>
    8d78:	ldrd	r0, [sp, #40]	; 0x28
    8d7c:	add	r3, pc, #908	; 0x38c
    8d80:	ldrd	r2, [r3]
    8d84:	and	lr, r0, #-16777216	; 0xff000000
    8d88:	str	lr, [sp, #184]	; 0xb8
    8d8c:	str	r1, [sp, #188]	; 0xbc
    8d90:	ldrd	r0, [sp, #184]	; 0xb8
    8d94:	cmp	r1, r3
    8d98:	cmpeq	r0, r2
    8d9c:	bne	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    8da0:	cmp	ip, #5
    8da4:	ble	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    8da8:	mov	r1, sl
    8dac:	mov	r3, #5
    8db0:	mov	r2, r4
    8db4:	mov	r0, r5
    8db8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    8dbc:	cmp	r0, sl
    8dc0:	mov	r1, r0
    8dc4:	beq	76e0 <MyGame_Example_Alt_parse_json_table+0x278>
    8dc8:	add	r3, sp, #212	; 0xd4
    8dcc:	mov	r2, r4
    8dd0:	mov	r0, r5
    8dd4:	bl	6c3c <Fantasy_Movie_parse_json_table>
    8dd8:	ldr	r3, [sp, #212]	; 0xd4
    8ddc:	mov	fp, r0
    8de0:	cmp	r3, #0
    8de4:	beq	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    8de8:	mov	r1, #1
    8dec:	ldr	r0, [r5]
    8df0:	bl	0 <flatcc_builder_table_add_offset>
    8df4:	cmp	r0, #0
    8df8:	bne	7cac <MyGame_Example_Alt_parse_json_table+0x844>
    8dfc:	b	74b0 <MyGame_Example_Alt_parse_json_table+0x48>
    8e00:	mov	fp, r6
    8e04:	b	8b84 <MyGame_Example_Alt_parse_json_table+0x171c>
    8e08:	mov	r5, r6
    8e0c:	b	893c <MyGame_Example_Alt_parse_json_table+0x14d4>
    8e10:	ldrb	r3, [fp, #2]
    8e14:	cmp	r3, #32
    8e18:	bls	8aa0 <MyGame_Example_Alt_parse_json_table+0x1638>
    8e1c:	add	fp, fp, #2
    8e20:	b	8abc <MyGame_Example_Alt_parse_json_table+0x1654>
    8e24:	ldrb	r3, [fp, #2]
    8e28:	cmp	r3, #32
    8e2c:	bls	7e04 <MyGame_Example_Alt_parse_json_table+0x99c>
    8e30:	add	fp, fp, #2
    8e34:	b	7e28 <MyGame_Example_Alt_parse_json_table+0x9c0>
    8e38:	mov	fp, r6
    8e3c:	b	8190 <MyGame_Example_Alt_parse_json_table+0xd28>
    8e40:	ldrb	r3, [fp, #2]
    8e44:	cmp	r3, #32
    8e48:	bls	82fc <MyGame_Example_Alt_parse_json_table+0xe94>
    8e4c:	add	fp, fp, #2
    8e50:	b	8330 <MyGame_Example_Alt_parse_json_table+0xec8>
    8e54:	ldr	r1, [sp, #228]	; 0xe4
    8e58:	ldrd	r2, [sp, #240]	; 0xf0
    8e5c:	cmp	r1, r5
    8e60:	beq	9680 <MyGame_Example_Alt_parse_json_table+0x2218>
    8e64:	cmp	r3, #-2147483648	; 0x80000000
    8e68:	cmpeq	r2, #0
    8e6c:	bhi	9950 <MyGame_Example_Alt_parse_json_table+0x24e8>
    8e70:	rsbs	r2, r2, #0
    8e74:	rsc	r3, r3, #0
    8e78:	strd	r2, [sp, #232]	; 0xe8
    8e7c:	b	8bb4 <MyGame_Example_Alt_parse_json_table+0x174c>
    8e80:	ldr	r3, [sp, #232]	; 0xe8
    8e84:	cmp	r3, #0
    8e88:	bne	9904 <MyGame_Example_Alt_parse_json_table+0x249c>
    8e8c:	ldrd	r2, [sp, #240]	; 0xf0
    8e90:	mov	r1, #0
    8e94:	mvn	r0, #0
    8e98:	cmp	r3, r1
    8e9c:	cmpeq	r2, r0
    8ea0:	movls	fp, r5
    8ea4:	strls	r2, [sp, #228]	; 0xe4
    8ea8:	bls	896c <MyGame_Example_Alt_parse_json_table+0x1504>
    8eac:	mov	r1, r5
    8eb0:	mov	r3, #7
    8eb4:	mov	r2, r6
    8eb8:	mov	r0, r7
    8ebc:	bl	0 <flatcc_json_parser_set_error>
    8ec0:	mov	fp, r0
    8ec4:	cmp	r4, fp
    8ec8:	bne	8968 <MyGame_Example_Alt_parse_json_table+0x1500>
    8ecc:	mov	r5, r4
    8ed0:	b	893c <MyGame_Example_Alt_parse_json_table+0x14d4>
    8ed4:	ldrb	r3, [fp, #2]
    8ed8:	cmp	r3, #32
    8edc:	addhi	r1, fp, #2
    8ee0:	bls	8c24 <MyGame_Example_Alt_parse_json_table+0x17bc>
    8ee4:	cmp	r6, r1
    8ee8:	bne	8c3c <MyGame_Example_Alt_parse_json_table+0x17d4>
    8eec:	mov	ip, #0
    8ef0:	mov	r3, #10
    8ef4:	mov	r2, r6
    8ef8:	mov	r1, r6
    8efc:	mov	r0, r7
    8f00:	str	ip, [sp, #224]	; 0xe0
    8f04:	bl	0 <flatcc_json_parser_set_error>
    8f08:	ldr	r3, [sp, #224]	; 0xe0
    8f0c:	b	86d4 <MyGame_Example_Alt_parse_json_table+0x126c>
    8f10:	mov	r1, sl
    8f14:	mov	r3, #5
    8f18:	mov	r2, r4
    8f1c:	mov	r0, r5
    8f20:	bl	0 <flatcc_json_parser_set_error>
    8f24:	mov	sl, r0
    8f28:	b	7560 <MyGame_Example_Alt_parse_json_table+0xf8>
    8f2c:	ldr	r1, [sp, #228]	; 0xe4
    8f30:	ldrd	r2, [sp, #240]	; 0xf0
    8f34:	cmp	r1, #0
    8f38:	beq	978c <MyGame_Example_Alt_parse_json_table+0x2324>
    8f3c:	cmp	r3, #-2147483648	; 0x80000000
    8f40:	cmpeq	r2, #0
    8f44:	bhi	9988 <MyGame_Example_Alt_parse_json_table+0x2520>
    8f48:	rsbs	r2, r2, #0
    8f4c:	rsc	r3, r3, #0
    8f50:	strd	r2, [sp, #232]	; 0xe8
    8f54:	b	81c0 <MyGame_Example_Alt_parse_json_table+0xd58>
    8f58:	add	r3, sp, #228	; 0xe4
    8f5c:	mov	r1, r8
    8f60:	mov	r2, r6
    8f64:	mov	r0, r7
    8f68:	bl	3ac0 <flatcc_json_parser_object_start>
    8f6c:	ldr	r3, [sp, #228]	; 0xe4
    8f70:	mov	fp, r0
    8f74:	cmp	r3, #0
    8f78:	beq	84c0 <MyGame_Example_Alt_parse_json_table+0x1058>
    8f7c:	add	r5, pc, #404	; 0x194
    8f80:	ldrd	r4, [r5]
    8f84:	cmp	r6, fp
    8f88:	beq	8fb4 <MyGame_Example_Alt_parse_json_table+0x1b4c>
    8f8c:	ldrb	r3, [fp]
    8f90:	cmp	r3, #34	; 0x22
    8f94:	moveq	r3, #0
    8f98:	addeq	fp, fp, #1
    8f9c:	streq	r3, [r7, #12]
    8fa0:	beq	8fb4 <MyGame_Example_Alt_parse_json_table+0x1b4c>
    8fa4:	cmp	r3, #46	; 0x2e
    8fa8:	movne	r3, #1
    8fac:	strne	r3, [r7, #12]
    8fb0:	beq	94e0 <MyGame_Example_Alt_parse_json_table+0x2078>
    8fb4:	sub	ip, r6, fp
    8fb8:	cmp	ip, #8
    8fbc:	bhi	8394 <MyGame_Example_Alt_parse_json_table+0xf2c>
    8fc0:	sub	r3, ip, #1
    8fc4:	cmp	r3, #7
    8fc8:	ldrls	pc, [pc, r3, lsl #2]
    8fcc:	b	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    8fd0:	.word	0x00008ff0
    8fd4:	.word	0x00009044
    8fd8:	.word	0x00009008
    8fdc:	.word	0x0000902c
    8fe0:	.word	0x00009020
    8fe4:	.word	0x00009014
    8fe8:	.word	0x00009038
    8fec:	.word	0x00008394
    8ff0:	mov	r1, fp
    8ff4:	mov	r2, r6
    8ff8:	mov	r0, r7
    8ffc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9000:	mov	fp, r0
    9004:	b	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    9008:	mov	r8, #0
    900c:	mov	lr, r8
    9010:	b	83c0 <MyGame_Example_Alt_parse_json_table+0xf58>
    9014:	mov	r2, #0
    9018:	mov	lr, r2
    901c:	b	83a8 <MyGame_Example_Alt_parse_json_table+0xf40>
    9020:	mov	r2, #0
    9024:	mov	lr, r2
    9028:	b	83b0 <MyGame_Example_Alt_parse_json_table+0xf48>
    902c:	mov	r8, #0
    9030:	mov	lr, r8
    9034:	b	83b8 <MyGame_Example_Alt_parse_json_table+0xf50>
    9038:	mov	r2, #0
    903c:	mov	r3, #0
    9040:	b	839c <MyGame_Example_Alt_parse_json_table+0xf34>
    9044:	ldrb	r2, [fp, #1]
    9048:	mov	r1, #0
    904c:	ldrb	r0, [fp]
    9050:	str	r1, [sp, #24]
    9054:	lsl	r2, r2, #16
    9058:	orr	r3, r2, r0, lsl #24
    905c:	str	r3, [sp, #28]
    9060:	ldrd	r2, [sp, #24]
    9064:	cmp	r3, r5
    9068:	cmpeq	r2, r4
    906c:	bls	840c <MyGame_Example_Alt_parse_json_table+0xfa4>
    9070:	add	r1, pc, #168	; 0xa8
    9074:	ldrd	r0, [r1]
    9078:	ldrd	r2, [sp, #24]
    907c:	cmp	r3, r1
    9080:	cmpeq	r2, r0
    9084:	beq	920c <MyGame_Example_Alt_parse_json_table+0x1da4>
    9088:	mov	r1, #0
    908c:	mov	r0, #0
    9090:	str	r1, [sp, #128]	; 0x80
    9094:	movw	r1, #25443	; 0x6363
    9098:	movt	r1, #25443	; 0x6363
    909c:	str	r3, [sp, #132]	; 0x84
    90a0:	ldrd	r2, [sp, #128]	; 0x80
    90a4:	cmp	r3, r1
    90a8:	cmpeq	r2, r0
    90ac:	bne	92a0 <MyGame_Example_Alt_parse_json_table+0x1e38>
    90b0:	cmp	ip, #4
    90b4:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    90b8:	mov	r1, fp
    90bc:	mov	r3, #4
    90c0:	mov	r2, r6
    90c4:	mov	r0, r7
    90c8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    90cc:	cmp	r0, fp
    90d0:	mov	r1, r0
    90d4:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    90d8:	add	r3, sp, #232	; 0xe8
    90dc:	mov	r2, r6
    90e0:	mov	r0, r7
    90e4:	bl	0 <flatcc_json_parser_build_string>
    90e8:	ldr	r3, [sp, #232]	; 0xe8
    90ec:	mov	fp, r0
    90f0:	cmp	r3, #0
    90f4:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    90f8:	mov	r1, #4
    90fc:	ldr	r0, [r7]
    9100:	bl	0 <flatcc_builder_table_add_offset>
    9104:	cmp	r0, #0
    9108:	bne	8494 <MyGame_Example_Alt_parse_json_table+0x102c>
    910c:	b	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    9110:	.word	0x65000000
    9114:	.word	0x6d6f7669
    9118:	.word	0xffffffff
    911c:	.word	0x63636362
    9120:	.word	0x31323334
    9124:	.word	0x63636363
    9128:	.word	0x31323334
    912c:	.word	0x64646464
    9130:	.word	0x31323334
    9134:	.word	0x62626262
    9138:	.word	0x000000d8
    913c:	.word	0x000000c0
    9140:	.word	0x000000a8
    9144:	.word	0x000000cc
    9148:	.word	0x0000009c
    914c:	.word	0x000000b4
    9150:	add	fp, fp, #8
    9154:	mov	r1, r6
    9158:	str	r8, [sp, #168]	; 0xa8
    915c:	mov	r0, fp
    9160:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9164:	and	r3, r1, #-16777216	; 0xff000000
    9168:	str	r3, [sp, #172]	; 0xac
    916c:	ldrd	r2, [sp, #168]	; 0xa8
    9170:	cmp	r3, #889192448	; 0x35000000
    9174:	cmpeq	r2, #0
    9178:	bne	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    917c:	sub	r3, r6, fp
    9180:	cmp	r3, #1
    9184:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9188:	mov	r3, #1
    918c:	mov	r2, r6
    9190:	mov	r1, fp
    9194:	mov	r0, r7
    9198:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    919c:	cmp	fp, r0
    91a0:	mov	r9, r0
    91a4:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    91a8:	mov	r1, r0
    91ac:	mov	r2, r6
    91b0:	str	r8, [sp, #240]	; 0xf0
    91b4:	add	r3, sp, #240	; 0xf0
    91b8:	mov	r0, r7
    91bc:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    91c0:	cmp	r9, r0
    91c4:	mov	fp, r0
    91c8:	beq	9828 <MyGame_Example_Alt_parse_json_table+0x23c0>
    91cc:	ldr	r3, [sp, #240]	; 0xf0
    91d0:	cmp	r3, #0
    91d4:	bne	91e4 <MyGame_Example_Alt_parse_json_table+0x1d7c>
    91d8:	ldr	r3, [r7, #8]
    91dc:	tst	r3, #2
    91e0:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    91e4:	mov	r3, #4
    91e8:	mov	r1, #1
    91ec:	mov	r2, r3
    91f0:	ldr	r0, [r7]
    91f4:	bl	0 <flatcc_builder_table_add>
    91f8:	cmp	r0, #0
    91fc:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    9200:	ldr	r3, [sp, #240]	; 0xf0
    9204:	str	r3, [r0]
    9208:	b	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    920c:	cmp	ip, #8
    9210:	ble	93c4 <MyGame_Example_Alt_parse_json_table+0x1f5c>
    9214:	mov	r3, #8
    9218:	mov	r2, r6
    921c:	mov	r1, fp
    9220:	mov	r0, r7
    9224:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9228:	cmp	r0, fp
    922c:	mov	r8, r0
    9230:	beq	93c4 <MyGame_Example_Alt_parse_json_table+0x1f5c>
    9234:	mov	fp, #0
    9238:	mov	sl, #0
    923c:	mov	r1, r0
    9240:	add	r3, sp, #240	; 0xf0
    9244:	mov	r2, r6
    9248:	mov	r0, r7
    924c:	strd	sl, [sp, #240]	; 0xf0
    9250:	bl	286c <flatcc_json_parser_int64>
    9254:	cmp	r8, r0
    9258:	mov	fp, r0
    925c:	beq	97cc <MyGame_Example_Alt_parse_json_table+0x2364>
    9260:	ldrd	r2, [sp, #240]	; 0xf0
    9264:	orrs	r3, r2, r3
    9268:	bne	9278 <MyGame_Example_Alt_parse_json_table+0x1e10>
    926c:	ldr	r3, [r7, #8]
    9270:	tst	r3, #2
    9274:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    9278:	mov	r3, #8
    927c:	mov	r1, #5
    9280:	mov	r2, r3
    9284:	ldr	r0, [r7]
    9288:	bl	0 <flatcc_builder_table_add>
    928c:	cmp	r0, #0
    9290:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    9294:	ldrd	r2, [sp, #240]	; 0xf0
    9298:	strd	r2, [r0]
    929c:	b	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    92a0:	sub	r1, pc, #384	; 0x180
    92a4:	ldrd	r0, [r1]
    92a8:	ldrd	r2, [sp, #24]
    92ac:	cmp	r3, r1
    92b0:	cmpeq	r2, r0
    92b4:	bne	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    92b8:	cmp	ip, #8
    92bc:	ble	94fc <MyGame_Example_Alt_parse_json_table+0x2094>
    92c0:	mov	r3, #8
    92c4:	mov	r2, r6
    92c8:	mov	r1, fp
    92cc:	mov	r0, r7
    92d0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    92d4:	cmp	r0, fp
    92d8:	mov	r8, r0
    92dc:	beq	94fc <MyGame_Example_Alt_parse_json_table+0x2094>
    92e0:	mov	fp, #0
    92e4:	mov	sl, #0
    92e8:	mov	r1, r0
    92ec:	add	r3, sp, #240	; 0xf0
    92f0:	mov	r2, r6
    92f4:	mov	r0, r7
    92f8:	strd	sl, [sp, #240]	; 0xf0
    92fc:	bl	286c <flatcc_json_parser_int64>
    9300:	cmp	r8, r0
    9304:	mov	fp, r0
    9308:	beq	987c <MyGame_Example_Alt_parse_json_table+0x2414>
    930c:	ldrd	r2, [sp, #240]	; 0xf0
    9310:	orrs	r3, r2, r3
    9314:	bne	9324 <MyGame_Example_Alt_parse_json_table+0x1ebc>
    9318:	ldr	r3, [r7, #8]
    931c:	tst	r3, #2
    9320:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    9324:	mov	r3, #8
    9328:	mov	r1, #7
    932c:	b	9280 <MyGame_Example_Alt_parse_json_table+0x1e18>
    9330:	sub	r1, pc, #520	; 0x208
    9334:	ldrd	r0, [r1]
    9338:	ldrd	r2, [sp, #24]
    933c:	cmp	r3, r1
    9340:	cmpeq	r2, r0
    9344:	beq	9468 <MyGame_Example_Alt_parse_json_table+0x2000>
    9348:	ldrd	r0, [sp, #120]	; 0x78
    934c:	movw	r3, #25186	; 0x6262
    9350:	movt	r3, #25186	; 0x6262
    9354:	mov	r2, #0
    9358:	cmp	r1, r3
    935c:	cmpeq	r0, r2
    9360:	bne	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9364:	cmp	ip, #4
    9368:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    936c:	mov	r1, fp
    9370:	mov	r3, #4
    9374:	mov	r2, r6
    9378:	mov	r0, r7
    937c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9380:	cmp	r0, fp
    9384:	mov	r1, r0
    9388:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    938c:	add	r3, sp, #232	; 0xe8
    9390:	mov	r2, r6
    9394:	mov	r0, r7
    9398:	bl	0 <flatcc_json_parser_build_string>
    939c:	ldr	r3, [sp, #232]	; 0xe8
    93a0:	mov	fp, r0
    93a4:	cmp	r3, #0
    93a8:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    93ac:	mov	r1, #2
    93b0:	ldr	r0, [r7]
    93b4:	bl	0 <flatcc_builder_table_add_offset>
    93b8:	cmp	r0, #0
    93bc:	bne	8494 <MyGame_Example_Alt_parse_json_table+0x102c>
    93c0:	b	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    93c4:	add	fp, fp, #8
    93c8:	mov	r1, r6
    93cc:	mov	r0, fp
    93d0:	mov	r9, #0
    93d4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    93d8:	and	r3, r1, #-16777216	; 0xff000000
    93dc:	str	r9, [sp, #176]	; 0xb0
    93e0:	str	r3, [sp, #180]	; 0xb4
    93e4:	ldrd	r2, [sp, #176]	; 0xb0
    93e8:	cmp	r3, #889192448	; 0x35000000
    93ec:	cmpeq	r2, #0
    93f0:	bne	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    93f4:	sub	r3, r6, fp
    93f8:	cmp	r3, #1
    93fc:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9400:	mov	r3, #1
    9404:	mov	r2, r6
    9408:	mov	r1, fp
    940c:	mov	r0, r7
    9410:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9414:	cmp	fp, r0
    9418:	mov	r8, r0
    941c:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9420:	mov	r1, r0
    9424:	mov	r2, r6
    9428:	str	r9, [sp, #240]	; 0xf0
    942c:	add	r3, sp, #240	; 0xf0
    9430:	mov	r0, r7
    9434:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    9438:	cmp	r8, r0
    943c:	mov	fp, r0
    9440:	beq	9920 <MyGame_Example_Alt_parse_json_table+0x24b8>
    9444:	ldr	r3, [sp, #240]	; 0xf0
    9448:	cmp	r3, #0
    944c:	bne	945c <MyGame_Example_Alt_parse_json_table+0x1ff4>
    9450:	ldr	r3, [r7, #8]
    9454:	tst	r3, #2
    9458:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    945c:	mov	r3, #4
    9460:	mov	r1, #6
    9464:	b	91ec <MyGame_Example_Alt_parse_json_table+0x1d84>
    9468:	cmp	ip, #8
    946c:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9470:	mov	r3, #8
    9474:	mov	r2, r6
    9478:	mov	r1, fp
    947c:	mov	r0, r7
    9480:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9484:	cmp	r0, fp
    9488:	mov	r8, r0
    948c:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9490:	mov	fp, #0
    9494:	mov	sl, #0
    9498:	mov	r1, r0
    949c:	add	r3, sp, #240	; 0xf0
    94a0:	mov	r2, r6
    94a4:	mov	r0, r7
    94a8:	strd	sl, [sp, #240]	; 0xf0
    94ac:	bl	286c <flatcc_json_parser_int64>
    94b0:	cmp	r8, r0
    94b4:	mov	fp, r0
    94b8:	beq	98d4 <MyGame_Example_Alt_parse_json_table+0x246c>
    94bc:	ldrd	r2, [sp, #240]	; 0xf0
    94c0:	orrs	r3, r2, r3
    94c4:	bne	94d4 <MyGame_Example_Alt_parse_json_table+0x206c>
    94c8:	ldr	r3, [r7, #8]
    94cc:	tst	r3, #2
    94d0:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    94d4:	mov	r3, #8
    94d8:	mov	r1, #3
    94dc:	b	9280 <MyGame_Example_Alt_parse_json_table+0x1e18>
    94e0:	mov	r1, fp
    94e4:	mov	r3, #5
    94e8:	mov	r2, r6
    94ec:	mov	r0, r7
    94f0:	bl	0 <flatcc_json_parser_set_error>
    94f4:	mov	fp, r0
    94f8:	b	8fb4 <MyGame_Example_Alt_parse_json_table+0x1b4c>
    94fc:	add	fp, fp, #8
    9500:	mov	r1, r6
    9504:	mov	r0, fp
    9508:	mov	r9, #0
    950c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9510:	and	r3, r1, #-16777216	; 0xff000000
    9514:	str	r9, [sp, #192]	; 0xc0
    9518:	str	r3, [sp, #196]	; 0xc4
    951c:	ldrd	r2, [sp, #192]	; 0xc0
    9520:	cmp	r3, #889192448	; 0x35000000
    9524:	cmpeq	r2, #0
    9528:	bne	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    952c:	sub	r3, r6, fp
    9530:	cmp	r3, #1
    9534:	ble	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9538:	mov	r3, #1
    953c:	mov	r2, r6
    9540:	mov	r1, fp
    9544:	mov	r0, r7
    9548:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    954c:	cmp	fp, r0
    9550:	mov	r8, r0
    9554:	beq	8ff0 <MyGame_Example_Alt_parse_json_table+0x1b88>
    9558:	mov	r1, r0
    955c:	mov	r2, r6
    9560:	str	r9, [sp, #240]	; 0xf0
    9564:	add	r3, sp, #240	; 0xf0
    9568:	mov	r0, r7
    956c:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    9570:	cmp	r8, r0
    9574:	mov	fp, r0
    9578:	beq	99b0 <MyGame_Example_Alt_parse_json_table+0x2548>
    957c:	ldr	r3, [sp, #240]	; 0xf0
    9580:	cmp	r3, #0
    9584:	bne	9594 <MyGame_Example_Alt_parse_json_table+0x212c>
    9588:	ldr	r3, [r7, #8]
    958c:	tst	r3, #2
    9590:	beq	849c <MyGame_Example_Alt_parse_json_table+0x1034>
    9594:	mov	r3, #4
    9598:	mov	r1, #8
    959c:	b	91ec <MyGame_Example_Alt_parse_json_table+0x1d84>
    95a0:	ldrb	r3, [fp, #2]
    95a4:	cmp	r3, #32
    95a8:	addhi	r0, fp, #2
    95ac:	bls	7e80 <MyGame_Example_Alt_parse_json_table+0xa18>
    95b0:	cmp	r6, r0
    95b4:	bne	7e98 <MyGame_Example_Alt_parse_json_table+0xa30>
    95b8:	mov	ip, #0
    95bc:	mov	r3, #10
    95c0:	mov	r2, r6
    95c4:	mov	r1, r6
    95c8:	mov	r0, r7
    95cc:	mov	r5, r7
    95d0:	str	ip, [sp, #220]	; 0xdc
    95d4:	mov	r4, r6
    95d8:	bl	0 <flatcc_json_parser_set_error>
    95dc:	ldr	r3, [sp, #220]	; 0xdc
    95e0:	b	78ec <MyGame_Example_Alt_parse_json_table+0x484>
    95e4:	mov	fp, r1
    95e8:	b	8c5c <MyGame_Example_Alt_parse_json_table+0x17f4>
    95ec:	ldrb	r3, [fp, #2]
    95f0:	cmp	r3, #32
    95f4:	addhi	r1, fp, #2
    95f8:	bls	8620 <MyGame_Example_Alt_parse_json_table+0x11b8>
    95fc:	cmp	r6, r1
    9600:	bne	8638 <MyGame_Example_Alt_parse_json_table+0x11d0>
    9604:	mov	ip, #0
    9608:	mov	r3, #10
    960c:	mov	r2, r6
    9610:	mov	r1, r6
    9614:	mov	r0, r7
    9618:	str	ip, [sp, #224]	; 0xe0
    961c:	bl	0 <flatcc_json_parser_set_error>
    9620:	ldr	r3, [sp, #224]	; 0xe0
    9624:	b	7f1c <MyGame_Example_Alt_parse_json_table+0xab4>
    9628:	add	fp, r1, #1
    962c:	mov	r3, #0
    9630:	sub	r2, r6, fp
    9634:	cmp	r2, #1
    9638:	str	r3, [sp, #224]	; 0xe0
    963c:	ble	965c <MyGame_Example_Alt_parse_json_table+0x21f4>
    9640:	ldrb	r3, [r1, #1]
    9644:	cmp	r3, #32
    9648:	bhi	8abc <MyGame_Example_Alt_parse_json_table+0x1654>
    964c:	bne	965c <MyGame_Example_Alt_parse_json_table+0x21f4>
    9650:	ldrb	r3, [r1, #2]
    9654:	cmp	r3, #32
    9658:	bhi	99e0 <MyGame_Example_Alt_parse_json_table+0x2578>
    965c:	mov	r1, fp
    9660:	b	8aa0 <MyGame_Example_Alt_parse_json_table+0x1638>
    9664:	mov	r8, r6
    9668:	b	8580 <MyGame_Example_Alt_parse_json_table+0x1118>
    966c:	ldrb	r3, [fp, #2]
    9670:	cmp	r3, #32
    9674:	bls	7844 <MyGame_Example_Alt_parse_json_table+0x3dc>
    9678:	add	fp, fp, #2
    967c:	b	8c5c <MyGame_Example_Alt_parse_json_table+0x17f4>
    9680:	cmp	r2, #0
    9684:	sbcs	r1, r3, #0
    9688:	strdge	r2, [sp, #232]	; 0xe8
    968c:	bge	8bb4 <MyGame_Example_Alt_parse_json_table+0x174c>
    9690:	mov	r1, r0
    9694:	mov	r3, #7
    9698:	mov	r2, r6
    969c:	mov	r0, r7
    96a0:	bl	0 <flatcc_json_parser_set_error>
    96a4:	mov	fp, r0
    96a8:	cmp	r4, fp
    96ac:	beq	8b84 <MyGame_Example_Alt_parse_json_table+0x171c>
    96b0:	ldrd	r2, [sp, #232]	; 0xe8
    96b4:	b	8bb4 <MyGame_Example_Alt_parse_json_table+0x174c>
    96b8:	add	fp, r0, #1
    96bc:	mov	r3, #0
    96c0:	sub	r2, r6, fp
    96c4:	mov	r5, r7
    96c8:	cmp	r2, #1
    96cc:	mov	r4, r6
    96d0:	str	r3, [sp, #220]	; 0xdc
    96d4:	ble	96f4 <MyGame_Example_Alt_parse_json_table+0x228c>
    96d8:	ldrb	r3, [r0, #1]
    96dc:	cmp	r3, #32
    96e0:	bhi	7e28 <MyGame_Example_Alt_parse_json_table+0x9c0>
    96e4:	bne	96f4 <MyGame_Example_Alt_parse_json_table+0x228c>
    96e8:	ldrb	r3, [r0, #2]
    96ec:	cmp	r3, #32
    96f0:	bhi	99e8 <MyGame_Example_Alt_parse_json_table+0x2580>
    96f4:	mov	r1, fp
    96f8:	b	7e04 <MyGame_Example_Alt_parse_json_table+0x99c>
    96fc:	add	fp, r1, #1
    9700:	mov	r3, #0
    9704:	sub	r2, r6, fp
    9708:	cmp	r2, #1
    970c:	str	r3, [sp, #224]	; 0xe0
    9710:	ble	9730 <MyGame_Example_Alt_parse_json_table+0x22c8>
    9714:	ldrb	r3, [r1, #1]
    9718:	cmp	r3, #32
    971c:	bhi	8330 <MyGame_Example_Alt_parse_json_table+0xec8>
    9720:	bne	9730 <MyGame_Example_Alt_parse_json_table+0x22c8>
    9724:	ldrb	r3, [r1, #2]
    9728:	cmp	r3, #32
    972c:	bhi	99f0 <MyGame_Example_Alt_parse_json_table+0x2588>
    9730:	mov	r1, fp
    9734:	b	82fc <MyGame_Example_Alt_parse_json_table+0xe94>
    9738:	ldr	r3, [sp, #232]	; 0xe8
    973c:	cmp	r3, r9
    9740:	bne	996c <MyGame_Example_Alt_parse_json_table+0x2504>
    9744:	ldrd	r2, [sp, #240]	; 0xf0
    9748:	mov	r1, #0
    974c:	mvn	r0, #0
    9750:	cmp	r3, r1
    9754:	cmpeq	r2, r0
    9758:	movls	fp, r8
    975c:	strls	r2, [sp, #228]	; 0xe4
    9760:	bls	85b0 <MyGame_Example_Alt_parse_json_table+0x1148>
    9764:	mov	r1, r8
    9768:	mov	r3, #7
    976c:	mov	r2, r6
    9770:	mov	r0, r7
    9774:	bl	0 <flatcc_json_parser_set_error>
    9778:	mov	fp, r0
    977c:	cmp	r4, fp
    9780:	bne	85ac <MyGame_Example_Alt_parse_json_table+0x1144>
    9784:	mov	r8, r4
    9788:	b	8580 <MyGame_Example_Alt_parse_json_table+0x1118>
    978c:	cmp	r2, #0
    9790:	sbcs	r1, r3, #0
    9794:	strdge	r2, [sp, #232]	; 0xe8
    9798:	bge	81c0 <MyGame_Example_Alt_parse_json_table+0xd58>
    979c:	mov	r1, r0
    97a0:	mov	r3, #7
    97a4:	mov	r2, r6
    97a8:	mov	r0, r7
    97ac:	bl	0 <flatcc_json_parser_set_error>
    97b0:	mov	fp, r0
    97b4:	b	99a0 <MyGame_Example_Alt_parse_json_table+0x2538>
    97b8:	ldrb	r3, [fp, #2]
    97bc:	cmp	r3, #32
    97c0:	addhi	sl, fp, #2
    97c4:	bls	8cd0 <MyGame_Example_Alt_parse_json_table+0x1868>
    97c8:	b	8ce4 <MyGame_Example_Alt_parse_json_table+0x187c>
    97cc:	mov	r1, r0
    97d0:	add	r0, sp, #240	; 0xf0
    97d4:	ldr	r3, [pc, #-1680]	; 914c <MyGame_Example_Alt_parse_json_table+0x1ce4>
    97d8:	mov	r2, r6
    97dc:	str	r0, [sp]
    97e0:	mov	r0, r7
    97e4:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    97e8:	cmp	r6, r0
    97ec:	cmpne	fp, r0
    97f0:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    97f4:	mov	fp, r0
    97f8:	b	9260 <MyGame_Example_Alt_parse_json_table+0x1df8>
    97fc:	ldr	r0, [r7]
    9800:	str	r1, [sp, #204]	; 0xcc
    9804:	bl	0 <flatcc_builder_end_table>
    9808:	subs	r4, r0, #0
    980c:	ldr	r1, [sp, #204]	; 0xcc
    9810:	beq	84cc <MyGame_Example_Alt_parse_json_table+0x1064>
    9814:	ldr	r0, [r7]
    9818:	bl	0 <flatcc_builder_table_add_offset>
    981c:	cmp	r0, #0
    9820:	bne	8360 <MyGame_Example_Alt_parse_json_table+0xef8>
    9824:	b	8aec <MyGame_Example_Alt_parse_json_table+0x1684>
    9828:	mov	r1, r0
    982c:	add	r0, sp, #240	; 0xf0
    9830:	ldr	r3, [pc, #-1776]	; 9148 <MyGame_Example_Alt_parse_json_table+0x1ce0>
    9834:	mov	r2, r6
    9838:	str	r0, [sp]
    983c:	mov	r0, r7
    9840:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    9844:	cmp	r6, r0
    9848:	cmpne	fp, r0
    984c:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    9850:	mov	fp, r0
    9854:	b	91cc <MyGame_Example_Alt_parse_json_table+0x1d64>
    9858:	mov	r3, #0
    985c:	add	r1, sl, #1
    9860:	mov	r2, r4
    9864:	mov	r0, r5
    9868:	str	r3, [sp, #208]	; 0xd0
    986c:	bl	1e18 <flatcc_json_parser_space>
    9870:	mov	sl, r0
    9874:	ldr	r3, [sp, #208]	; 0xd0
    9878:	b	7528 <MyGame_Example_Alt_parse_json_table+0xc0>
    987c:	mov	r1, r0
    9880:	add	r0, sp, #240	; 0xf0
    9884:	ldr	r3, [pc, #-1864]	; 9144 <MyGame_Example_Alt_parse_json_table+0x1cdc>
    9888:	mov	r2, r6
    988c:	str	r0, [sp]
    9890:	mov	r0, r7
    9894:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    9898:	cmp	r6, r0
    989c:	cmpne	fp, r0
    98a0:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    98a4:	mov	fp, r0
    98a8:	b	930c <MyGame_Example_Alt_parse_json_table+0x1ea4>
    98ac:	mov	ip, #0
    98b0:	mov	r3, #10
    98b4:	mov	r2, r4
    98b8:	mov	r1, r4
    98bc:	mov	r0, r5
    98c0:	str	ip, [sp, #208]	; 0xd0
    98c4:	bl	0 <flatcc_json_parser_set_error>
    98c8:	mov	sl, r0
    98cc:	ldr	r3, [sp, #208]	; 0xd0
    98d0:	b	7528 <MyGame_Example_Alt_parse_json_table+0xc0>
    98d4:	mov	r1, r0
    98d8:	add	r0, sp, #240	; 0xf0
    98dc:	ldr	r3, [pc, #-1956]	; 9140 <MyGame_Example_Alt_parse_json_table+0x1cd8>
    98e0:	mov	r2, r6
    98e4:	str	r0, [sp]
    98e8:	mov	r0, r7
    98ec:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    98f0:	cmp	r6, r0
    98f4:	cmpne	fp, r0
    98f8:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    98fc:	mov	fp, r0
    9900:	b	94bc <MyGame_Example_Alt_parse_json_table+0x2054>
    9904:	mov	r1, r0
    9908:	mov	r3, #8
    990c:	mov	r2, r6
    9910:	mov	r0, r7
    9914:	bl	0 <flatcc_json_parser_set_error>
    9918:	mov	fp, r0
    991c:	b	8ec4 <MyGame_Example_Alt_parse_json_table+0x1a5c>
    9920:	mov	r1, r0
    9924:	add	r0, sp, #240	; 0xf0
    9928:	ldr	r3, [pc, #-2036]	; 913c <MyGame_Example_Alt_parse_json_table+0x1cd4>
    992c:	mov	r2, r6
    9930:	str	r0, [sp]
    9934:	mov	r0, r7
    9938:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    993c:	cmp	r6, r0
    9940:	cmpne	fp, r0
    9944:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    9948:	mov	fp, r0
    994c:	b	9444 <MyGame_Example_Alt_parse_json_table+0x1fdc>
    9950:	mov	r1, r0
    9954:	mov	r3, #8
    9958:	mov	r2, r6
    995c:	mov	r0, r7
    9960:	bl	0 <flatcc_json_parser_set_error>
    9964:	mov	fp, r0
    9968:	b	96a8 <MyGame_Example_Alt_parse_json_table+0x2240>
    996c:	mov	r1, r0
    9970:	mov	r3, #8
    9974:	mov	r2, r6
    9978:	mov	r0, r7
    997c:	bl	0 <flatcc_json_parser_set_error>
    9980:	mov	fp, r0
    9984:	b	977c <MyGame_Example_Alt_parse_json_table+0x2314>
    9988:	mov	r1, r0
    998c:	mov	r3, #8
    9990:	mov	r2, r6
    9994:	mov	r0, r7
    9998:	bl	0 <flatcc_json_parser_set_error>
    999c:	mov	fp, r0
    99a0:	cmp	r8, fp
    99a4:	beq	8190 <MyGame_Example_Alt_parse_json_table+0xd28>
    99a8:	ldrd	r2, [sp, #232]	; 0xe8
    99ac:	b	81c0 <MyGame_Example_Alt_parse_json_table+0xd58>
    99b0:	mov	r1, r0
    99b4:	add	r0, sp, #240	; 0xf0
    99b8:	ldr	r3, [pc, #-2184]	; 9138 <MyGame_Example_Alt_parse_json_table+0x1cd0>
    99bc:	mov	r2, r6
    99c0:	str	r0, [sp]
    99c4:	mov	r0, r7
    99c8:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    99cc:	cmp	r6, r0
    99d0:	cmpne	fp, r0
    99d4:	beq	99f8 <MyGame_Example_Alt_parse_json_table+0x2590>
    99d8:	mov	fp, r0
    99dc:	b	957c <MyGame_Example_Alt_parse_json_table+0x2114>
    99e0:	add	fp, r1, #2
    99e4:	b	8abc <MyGame_Example_Alt_parse_json_table+0x1654>
    99e8:	add	fp, r0, #2
    99ec:	b	7e28 <MyGame_Example_Alt_parse_json_table+0x9c0>
    99f0:	add	fp, r1, #2
    99f4:	b	8330 <MyGame_Example_Alt_parse_json_table+0xec8>
    99f8:	mov	r5, r7
    99fc:	mov	r4, r6
    9a00:	mov	fp, r0
    9a04:	b	84d4 <MyGame_Example_Alt_parse_json_table+0x106c>
    9a08:	mov	fp, r0
    9a0c:	b	8abc <MyGame_Example_Alt_parse_json_table+0x1654>
    9a10:	mov	fp, r0
    9a14:	b	8330 <MyGame_Example_Alt_parse_json_table+0xec8>
    9a18:	mov	fp, r0
    9a1c:	b	7e28 <MyGame_Example_Alt_parse_json_table+0x9c0>

00009a20 <Fantasy_Character_parse_json_union>:
    9a20:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9a24:	mov	ip, #0
    9a28:	cmp	r3, #9
    9a2c:	strd	r6, [sp, #8]
    9a30:	mov	r4, r1
    9a34:	mov	r5, r2
    9a38:	strd	r8, [sp, #16]
    9a3c:	mov	r6, r0
    9a40:	strd	sl, [sp, #24]
    9a44:	str	lr, [sp, #32]
    9a48:	sub	sp, sp, #36	; 0x24
    9a4c:	ldr	r7, [sp, #72]	; 0x48
    9a50:	str	ip, [r7]
    9a54:	beq	9b18 <Fantasy_Character_parse_json_union+0xf8>
    9a58:	bhi	9ab8 <Fantasy_Character_parse_json_union+0x98>
    9a5c:	cmp	r3, #2
    9a60:	beq	9d5c <Fantasy_Character_parse_json_union+0x33c>
    9a64:	cmp	r3, #8
    9a68:	beq	9b4c <Fantasy_Character_parse_json_union+0x12c>
    9a6c:	cmp	r3, ip
    9a70:	beq	9d28 <Fantasy_Character_parse_json_union+0x308>
    9a74:	ldr	r3, [r6, #8]
    9a78:	mov	r2, r5
    9a7c:	mov	r1, r4
    9a80:	mov	r0, r6
    9a84:	tst	r3, #1
    9a88:	bne	9b40 <Fantasy_Character_parse_json_union+0x120>
    9a8c:	mov	r3, #15
    9a90:	bl	0 <flatcc_json_parser_set_error>
    9a94:	mov	r4, r0
    9a98:	mov	r0, r4
    9a9c:	add	sp, sp, #36	; 0x24
    9aa0:	ldrd	r4, [sp]
    9aa4:	ldrd	r6, [sp, #8]
    9aa8:	ldrd	r8, [sp, #16]
    9aac:	ldrd	sl, [sp, #24]
    9ab0:	add	sp, sp, #32
    9ab4:	pop	{pc}		; (ldr pc, [sp], #4)
    9ab8:	cmp	r3, #11
    9abc:	beq	9acc <Fantasy_Character_parse_json_union+0xac>
    9ac0:	bcc	9b18 <Fantasy_Character_parse_json_union+0xf8>
    9ac4:	cmp	r3, #255	; 0xff
    9ac8:	bne	9a74 <Fantasy_Character_parse_json_union+0x54>
    9acc:	mov	r1, r4
    9ad0:	mov	r3, r7
    9ad4:	mov	r2, r5
    9ad8:	mov	r0, r6
    9adc:	bl	0 <flatcc_json_parser_build_string>
    9ae0:	mov	r4, r0
    9ae4:	ldr	r3, [r6, #24]
    9ae8:	cmp	r3, #0
    9aec:	bne	9a98 <Fantasy_Character_parse_json_union+0x78>
    9af0:	ldr	r3, [r7]
    9af4:	cmp	r3, #0
    9af8:	bne	9a98 <Fantasy_Character_parse_json_union+0x78>
    9afc:	mov	r1, r4
    9b00:	mov	r2, r5
    9b04:	mov	r0, r6
    9b08:	mov	r3, #33	; 0x21
    9b0c:	bl	0 <flatcc_json_parser_set_error>
    9b10:	mov	r4, r0
    9b14:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    9b18:	mov	r1, r4
    9b1c:	mov	r3, r7
    9b20:	mov	r2, r5
    9b24:	mov	r0, r6
    9b28:	bl	5534 <Fantasy_BookReader_parse_json_struct>
    9b2c:	ldr	r3, [r6, #24]
    9b30:	mov	r4, r0
    9b34:	cmp	r3, #0
    9b38:	beq	9af0 <Fantasy_Character_parse_json_union+0xd0>
    9b3c:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    9b40:	bl	0 <flatcc_json_parser_generic_json>
    9b44:	mov	r4, r0
    9b48:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    9b4c:	mov	r2, #2
    9b50:	ldr	r0, [r0]
    9b54:	mov	r1, r2
    9b58:	bl	0 <flatcc_builder_start_struct>
    9b5c:	subs	sl, r0, #0
    9b60:	beq	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9b64:	mov	r1, r4
    9b68:	add	r3, sp, #16
    9b6c:	mov	r2, r5
    9b70:	mov	r0, r6
    9b74:	bl	3ac0 <flatcc_json_parser_object_start>
    9b78:	ldr	r3, [sp, #16]
    9b7c:	mov	r4, r0
    9b80:	cmp	r3, #0
    9b84:	beq	9cd0 <Fantasy_Character_parse_json_union+0x2b0>
    9b88:	str	r7, [sp, #72]	; 0x48
    9b8c:	cmp	r5, r4
    9b90:	beq	9bbc <Fantasy_Character_parse_json_union+0x19c>
    9b94:	ldrb	r3, [r4]
    9b98:	cmp	r3, #34	; 0x22
    9b9c:	moveq	r3, #0
    9ba0:	addeq	r4, r4, #1
    9ba4:	streq	r3, [r6, #12]
    9ba8:	beq	9bbc <Fantasy_Character_parse_json_union+0x19c>
    9bac:	cmp	r3, #46	; 0x2e
    9bb0:	movne	r3, #1
    9bb4:	strne	r3, [r6, #12]
    9bb8:	beq	9fa0 <Fantasy_Character_parse_json_union+0x580>
    9bbc:	mov	r1, r5
    9bc0:	mov	r0, r4
    9bc4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9bc8:	add	r3, pc, #1008	; 0x3f0
    9bcc:	ldrd	r2, [r3]
    9bd0:	cmp	r1, r3
    9bd4:	cmpeq	r0, r2
    9bd8:	bne	9d14 <Fantasy_Character_parse_json_union+0x2f4>
    9bdc:	add	r4, r4, #8
    9be0:	mov	r1, r5
    9be4:	mov	r0, r4
    9be8:	mov	r7, #0
    9bec:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9bf0:	add	r3, pc, #976	; 0x3d0
    9bf4:	ldrd	r2, [r3]
    9bf8:	bic	r9, r1, #255	; 0xff
    9bfc:	cmp	r9, r3
    9c00:	cmpeq	r7, r2
    9c04:	bne	9d14 <Fantasy_Character_parse_json_union+0x2f4>
    9c08:	sub	r3, r5, r4
    9c0c:	cmp	r3, #3
    9c10:	ble	9d14 <Fantasy_Character_parse_json_union+0x2f4>
    9c14:	mov	r3, #3
    9c18:	mov	r2, r5
    9c1c:	mov	r1, r4
    9c20:	mov	r0, r6
    9c24:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9c28:	cmp	r4, r0
    9c2c:	mov	fp, r0
    9c30:	beq	9d14 <Fantasy_Character_parse_json_union+0x2f4>
    9c34:	mov	r2, #0
    9c38:	mov	r3, #0
    9c3c:	strh	r7, [sp, #12]
    9c40:	cmp	r5, r0
    9c44:	str	r7, [sp, #20]
    9c48:	strd	r2, [sp, #24]
    9c4c:	beq	9ff0 <Fantasy_Character_parse_json_union+0x5d0>
    9c50:	add	r0, sp, #24
    9c54:	add	r3, sp, #20
    9c58:	mov	r2, r5
    9c5c:	mov	r1, fp
    9c60:	str	r0, [sp]
    9c64:	mov	r0, r6
    9c68:	bl	0 <flatcc_json_parser_integer>
    9c6c:	cmp	fp, r0
    9c70:	mov	r4, r0
    9c74:	bne	9ff8 <Fantasy_Character_parse_json_union+0x5d8>
    9c78:	add	ip, sp, #12
    9c7c:	ldr	r3, [pc, #868]	; 9fe8 <Fantasy_Character_parse_json_union+0x5c8>
    9c80:	mov	r2, r5
    9c84:	mov	r1, r4
    9c88:	mov	r0, r6
    9c8c:	str	ip, [sp]
    9c90:	bl	4968 <flatcc_json_parser_symbolic_uint16>
    9c94:	cmp	r5, r0
    9c98:	cmpne	r0, r4
    9c9c:	beq	a048 <Fantasy_Character_parse_json_union+0x628>
    9ca0:	ldrh	r2, [sp, #12]
    9ca4:	strh	r2, [sl]
    9ca8:	mov	r1, r0
    9cac:	add	r3, sp, #16
    9cb0:	mov	r2, r5
    9cb4:	mov	r0, r6
    9cb8:	bl	5c48 <flatcc_json_parser_object_end>
    9cbc:	ldr	r3, [sp, #16]
    9cc0:	mov	r4, r0
    9cc4:	cmp	r3, #0
    9cc8:	bne	9b8c <Fantasy_Character_parse_json_union+0x16c>
    9ccc:	ldr	r7, [sp, #72]	; 0x48
    9cd0:	cmp	r5, r4
    9cd4:	beq	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9cd8:	ldr	r0, [r6]
    9cdc:	bl	0 <flatcc_builder_end_struct>
    9ce0:	cmp	r0, #0
    9ce4:	str	r0, [r7]
    9ce8:	bne	9a98 <Fantasy_Character_parse_json_union+0x78>
    9cec:	mov	r1, r4
    9cf0:	mov	r3, #33	; 0x21
    9cf4:	mov	r2, r5
    9cf8:	mov	r0, r6
    9cfc:	bl	0 <flatcc_json_parser_set_error>
    9d00:	ldr	r3, [r6, #24]
    9d04:	mov	r4, r0
    9d08:	cmp	r3, #0
    9d0c:	beq	9af0 <Fantasy_Character_parse_json_union+0xd0>
    9d10:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    9d14:	mov	r1, r4
    9d18:	mov	r2, r5
    9d1c:	mov	r0, r6
    9d20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9d24:	b	9ca8 <Fantasy_Character_parse_json_union+0x288>
    9d28:	sub	r3, r2, r1
    9d2c:	cmp	r3, #3
    9d30:	ble	9d40 <Fantasy_Character_parse_json_union+0x320>
    9d34:	ldrb	r3, [r1]
    9d38:	cmp	r3, #110	; 0x6e
    9d3c:	beq	a0c4 <Fantasy_Character_parse_json_union+0x6a4>
    9d40:	mov	r1, r4
    9d44:	mov	r2, r5
    9d48:	mov	r0, r6
    9d4c:	mov	r3, #26
    9d50:	bl	0 <flatcc_json_parser_set_error>
    9d54:	mov	r4, r0
    9d58:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    9d5c:	mov	r1, #1
    9d60:	ldr	r0, [r0]
    9d64:	bl	0 <flatcc_builder_start_table>
    9d68:	cmp	r0, #0
    9d6c:	bne	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9d70:	mov	r1, r4
    9d74:	add	r3, sp, #12
    9d78:	mov	r2, r5
    9d7c:	mov	r0, r6
    9d80:	bl	3ac0 <flatcc_json_parser_object_start>
    9d84:	ldr	r3, [sp, #12]
    9d88:	mov	r4, r0
    9d8c:	cmp	r3, #0
    9d90:	beq	9f48 <Fantasy_Character_parse_json_union+0x528>
    9d94:	cmp	r5, r4
    9d98:	beq	9dc4 <Fantasy_Character_parse_json_union+0x3a4>
    9d9c:	ldrb	r3, [r4]
    9da0:	cmp	r3, #34	; 0x22
    9da4:	moveq	r3, #0
    9da8:	addeq	r4, r4, #1
    9dac:	streq	r3, [r6, #12]
    9db0:	beq	9dc4 <Fantasy_Character_parse_json_union+0x3a4>
    9db4:	cmp	r3, #46	; 0x2e
    9db8:	movne	r3, #1
    9dbc:	strne	r3, [r6, #12]
    9dc0:	beq	9f84 <Fantasy_Character_parse_json_union+0x564>
    9dc4:	mov	r1, r5
    9dc8:	mov	r0, r4
    9dcc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9dd0:	add	r3, pc, #504	; 0x1f8
    9dd4:	ldrd	r2, [r3]
    9dd8:	cmp	r1, r3
    9ddc:	cmpeq	r0, r2
    9de0:	bne	9f10 <Fantasy_Character_parse_json_union+0x4f0>
    9de4:	add	r8, r4, #8
    9de8:	mov	r1, r5
    9dec:	mov	r0, r8
    9df0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9df4:	add	r3, pc, #476	; 0x1dc
    9df8:	ldrd	r2, [r3]
    9dfc:	cmp	r1, r3
    9e00:	cmpeq	r0, r2
    9e04:	bne	9f6c <Fantasy_Character_parse_json_union+0x54c>
    9e08:	add	r4, r4, #16
    9e0c:	mov	r1, r5
    9e10:	mov	r0, r4
    9e14:	mov	r8, #0
    9e18:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9e1c:	add	r3, pc, #444	; 0x1bc
    9e20:	ldrd	r2, [r3]
    9e24:	bic	fp, r1, #255	; 0xff
    9e28:	cmp	fp, r3
    9e2c:	cmpeq	r8, r2
    9e30:	bne	9f10 <Fantasy_Character_parse_json_union+0x4f0>
    9e34:	sub	r3, r5, r4
    9e38:	cmp	r3, #3
    9e3c:	ble	9f10 <Fantasy_Character_parse_json_union+0x4f0>
    9e40:	mov	r3, #3
    9e44:	mov	r2, r5
    9e48:	mov	r1, r4
    9e4c:	mov	r0, r6
    9e50:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    9e54:	cmp	r4, r0
    9e58:	mov	r9, r0
    9e5c:	beq	9f10 <Fantasy_Character_parse_json_union+0x4f0>
    9e60:	mov	r2, #0
    9e64:	mov	r3, #0
    9e68:	str	r8, [sp, #16]
    9e6c:	cmp	r5, r0
    9e70:	str	r8, [sp, #20]
    9e74:	strd	r2, [sp, #24]
    9e78:	beq	a070 <Fantasy_Character_parse_json_union+0x650>
    9e7c:	add	r0, sp, #24
    9e80:	add	r3, sp, #20
    9e84:	mov	r2, r5
    9e88:	mov	r1, r9
    9e8c:	str	r0, [sp]
    9e90:	mov	r0, r6
    9e94:	bl	0 <flatcc_json_parser_integer>
    9e98:	cmp	r9, r0
    9e9c:	mov	r4, r0
    9ea0:	bne	a078 <Fantasy_Character_parse_json_union+0x658>
    9ea4:	add	ip, sp, #16
    9ea8:	ldr	r3, [pc, #316]	; 9fec <Fantasy_Character_parse_json_union+0x5cc>
    9eac:	mov	r2, r5
    9eb0:	mov	r1, r4
    9eb4:	mov	r0, r6
    9eb8:	str	ip, [sp]
    9ebc:	bl	44d0 <flatcc_json_parser_symbolic_int32>
    9ec0:	cmp	r5, r0
    9ec4:	cmpne	r0, r4
    9ec8:	beq	a068 <Fantasy_Character_parse_json_union+0x648>
    9ecc:	ldr	r2, [sp, #16]
    9ed0:	mov	r4, r0
    9ed4:	cmp	r2, #0
    9ed8:	bne	9ee8 <Fantasy_Character_parse_json_union+0x4c8>
    9edc:	ldr	r3, [r6, #8]
    9ee0:	tst	r3, #2
    9ee4:	beq	9f24 <Fantasy_Character_parse_json_union+0x504>
    9ee8:	mov	r3, #4
    9eec:	mov	r1, #0
    9ef0:	ldr	r0, [r6]
    9ef4:	mov	r2, r3
    9ef8:	bl	0 <flatcc_builder_table_add>
    9efc:	cmp	r0, #0
    9f00:	beq	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9f04:	ldr	r3, [sp, #16]
    9f08:	str	r3, [r0]
    9f0c:	b	9f24 <Fantasy_Character_parse_json_union+0x504>
    9f10:	mov	r1, r4
    9f14:	mov	r2, r5
    9f18:	mov	r0, r6
    9f1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9f20:	mov	r4, r0
    9f24:	mov	r1, r4
    9f28:	add	r3, sp, #12
    9f2c:	mov	r2, r5
    9f30:	mov	r0, r6
    9f34:	bl	5c48 <flatcc_json_parser_object_end>
    9f38:	ldr	r3, [sp, #12]
    9f3c:	mov	r4, r0
    9f40:	cmp	r3, #0
    9f44:	bne	9d94 <Fantasy_Character_parse_json_union+0x374>
    9f48:	ldr	r3, [r6, #24]
    9f4c:	cmp	r3, #0
    9f50:	bne	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9f54:	ldr	r0, [r6]
    9f58:	bl	0 <flatcc_builder_end_table>
    9f5c:	cmp	r0, #0
    9f60:	str	r0, [r7]
    9f64:	bne	9ae4 <Fantasy_Character_parse_json_union+0xc4>
    9f68:	b	9cec <Fantasy_Character_parse_json_union+0x2cc>
    9f6c:	mov	r1, r8
    9f70:	mov	r2, r5
    9f74:	mov	r0, r6
    9f78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9f7c:	mov	r4, r0
    9f80:	b	9f24 <Fantasy_Character_parse_json_union+0x504>
    9f84:	mov	r1, r4
    9f88:	mov	r3, #5
    9f8c:	mov	r2, r5
    9f90:	mov	r0, r6
    9f94:	bl	0 <flatcc_json_parser_set_error>
    9f98:	mov	r4, r0
    9f9c:	b	9dc4 <Fantasy_Character_parse_json_union+0x3a4>
    9fa0:	mov	r1, r4
    9fa4:	mov	r3, #5
    9fa8:	mov	r2, r5
    9fac:	mov	r0, r6
    9fb0:	bl	0 <flatcc_json_parser_set_error>
    9fb4:	mov	r4, r0
    9fb8:	b	9bbc <Fantasy_Character_parse_json_union+0x19c>
    9fbc:	nop	{0}
    9fc0:	.word	0x5f6c656e
    9fc4:	.word	0x68616972
    9fc8:	.word	0x00000000
    9fcc:	.word	0x67746800
    9fd0:	.word	0x645f6174
    9fd4:	.word	0x73776f72
    9fd8:	.word	0x5f64616d
    9fdc:	.word	0x7461636b
    9fe0:	.word	0x00000000
    9fe4:	.word	0x61676500
    9fe8:	.word	0x00000108
    9fec:	.word	0x000000fc
    9ff0:	mov	r4, r5
    9ff4:	b	9c78 <Fantasy_Character_parse_json_union+0x258>
    9ff8:	ldr	r3, [sp, #20]
    9ffc:	cmp	r3, r7
    a000:	bne	a128 <Fantasy_Character_parse_json_union+0x708>
    a004:	ldrd	r2, [sp, #24]
    a008:	mov	r1, #0
    a00c:	movw	r0, #65535	; 0xffff
    a010:	cmp	r3, r1
    a014:	cmpeq	r2, r0
    a018:	uxthls	r2, r2
    a01c:	movls	r0, r4
    a020:	bls	9ca4 <Fantasy_Character_parse_json_union+0x284>
    a024:	mov	r1, r4
    a028:	mov	r3, #7
    a02c:	mov	r2, r5
    a030:	mov	r0, r6
    a034:	bl	0 <flatcc_json_parser_set_error>
    a038:	cmp	fp, r0
    a03c:	bne	9ca0 <Fantasy_Character_parse_json_union+0x280>
    a040:	mov	r4, fp
    a044:	b	9c78 <Fantasy_Character_parse_json_union+0x258>
    a048:	mov	r1, r0
    a04c:	mov	r3, #33	; 0x21
    a050:	ldr	r7, [sp, #72]	; 0x48
    a054:	mov	r2, r5
    a058:	mov	r0, r6
    a05c:	bl	0 <flatcc_json_parser_set_error>
    a060:	mov	r4, r0
    a064:	b	9cd0 <Fantasy_Character_parse_json_union+0x2b0>
    a068:	mov	r4, r0
    a06c:	b	9cec <Fantasy_Character_parse_json_union+0x2cc>
    a070:	mov	r4, r5
    a074:	b	9ea4 <Fantasy_Character_parse_json_union+0x484>
    a078:	ldr	r1, [sp, #20]
    a07c:	ldrd	r2, [sp, #24]
    a080:	cmp	r1, r8
    a084:	beq	a0f4 <Fantasy_Character_parse_json_union+0x6d4>
    a088:	cmp	r3, #0
    a08c:	cmpeq	r2, #-2147483648	; 0x80000000
    a090:	rsbls	r2, r2, #0
    a094:	strls	r2, [sp, #16]
    a098:	bls	9ed4 <Fantasy_Character_parse_json_union+0x4b4>
    a09c:	mov	r1, r0
    a0a0:	mov	r3, #8
    a0a4:	mov	r2, r5
    a0a8:	mov	r0, r6
    a0ac:	bl	0 <flatcc_json_parser_set_error>
    a0b0:	mov	r4, r0
    a0b4:	cmp	r9, r4
    a0b8:	beq	9ea4 <Fantasy_Character_parse_json_union+0x484>
    a0bc:	ldr	r2, [sp, #16]
    a0c0:	b	9ed4 <Fantasy_Character_parse_json_union+0x4b4>
    a0c4:	ldrb	r3, [r1, #1]
    a0c8:	add	r2, r1, #1
    a0cc:	cmp	r3, #117	; 0x75
    a0d0:	bne	9d40 <Fantasy_Character_parse_json_union+0x320>
    a0d4:	ldrb	r3, [r2, #1]!
    a0d8:	cmp	r3, #108	; 0x6c
    a0dc:	bne	9d40 <Fantasy_Character_parse_json_union+0x320>
    a0e0:	ldrb	r3, [r2, #1]
    a0e4:	cmp	r3, #108	; 0x6c
    a0e8:	addeq	r4, r1, #4
    a0ec:	bne	9d40 <Fantasy_Character_parse_json_union+0x320>
    a0f0:	b	9a98 <Fantasy_Character_parse_json_union+0x78>
    a0f4:	mov	r1, #0
    a0f8:	mvn	r0, #-2147483648	; 0x80000000
    a0fc:	cmp	r3, r1
    a100:	cmpeq	r2, r0
    a104:	strls	r2, [sp, #16]
    a108:	bls	9ed4 <Fantasy_Character_parse_json_union+0x4b4>
    a10c:	mov	r1, r4
    a110:	mov	r3, #7
    a114:	mov	r2, r5
    a118:	mov	r0, r6
    a11c:	bl	0 <flatcc_json_parser_set_error>
    a120:	mov	r4, r0
    a124:	b	a0b4 <Fantasy_Character_parse_json_union+0x694>
    a128:	mov	r1, r0
    a12c:	mov	r3, #8
    a130:	mov	r2, r5
    a134:	mov	r0, r6
    a138:	bl	0 <flatcc_json_parser_set_error>
    a13c:	b	a038 <Fantasy_Character_parse_json_union+0x618>

0000a140 <MyGame_Example_Monster_parse_json_table>:
    a140:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a144:	mov	ip, r3
    a148:	strd	r6, [sp, #8]
    a14c:	strd	r8, [sp, #16]
    a150:	mov	r9, r2
    a154:	strd	sl, [sp, #24]
    a158:	mov	fp, r0
    a15c:	mov	sl, r1
    a160:	str	lr, [sp, #32]
    a164:	mov	r1, #36	; 0x24
    a168:	vpush	{d8-d9}
    a16c:	sub	sp, sp, #356	; 0x164
    a170:	ldr	r0, [r0]
    a174:	str	r3, [sp, #68]	; 0x44
    a178:	mov	r3, #0
    a17c:	str	r3, [ip]
    a180:	bl	0 <flatcc_builder_start_table>
    a184:	cmp	r0, #0
    a188:	beq	a1c8 <MyGame_Example_Monster_parse_json_table+0x88>
    a18c:	mov	r2, r9
    a190:	mov	r1, sl
    a194:	mov	r0, fp
    a198:	mov	r3, #33	; 0x21
    a19c:	bl	0 <flatcc_json_parser_set_error>
    a1a0:	mov	r4, r0
    a1a4:	mov	r0, r4
    a1a8:	add	sp, sp, #356	; 0x164
    a1ac:	vpop	{d8-d9}
    a1b0:	ldrd	r4, [sp]
    a1b4:	ldrd	r6, [sp, #8]
    a1b8:	ldrd	r8, [sp, #16]
    a1bc:	ldrd	sl, [sp, #24]
    a1c0:	add	sp, sp, #32
    a1c4:	pop	{pc}		; (ldr pc, [sp], #4)
    a1c8:	add	r0, sp, #328	; 0x148
    a1cc:	mov	r3, #1
    a1d0:	mov	r2, r9
    a1d4:	mov	r1, sl
    a1d8:	str	r0, [sp]
    a1dc:	mov	r0, fp
    a1e0:	bl	0 <flatcc_json_parser_prepare_unions>
    a1e4:	cmp	r9, r0
    a1e8:	beq	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    a1ec:	mov	r1, sl
    a1f0:	add	r3, sp, #320	; 0x140
    a1f4:	mov	r2, r9
    a1f8:	mov	r0, fp
    a1fc:	bl	3ac0 <flatcc_json_parser_object_start>
    a200:	ldr	r3, [sp, #320]	; 0x140
    a204:	mov	sl, r0
    a208:	cmp	r3, #0
    a20c:	beq	aa64 <MyGame_Example_Monster_parse_json_table+0x924>
    a210:	mov	r8, r9
    a214:	mov	r9, fp
    a218:	cmp	sl, r8
    a21c:	beq	a248 <MyGame_Example_Monster_parse_json_table+0x108>
    a220:	ldrb	r3, [sl]
    a224:	cmp	r3, #34	; 0x22
    a228:	moveq	r3, #0
    a22c:	addeq	sl, sl, #1
    a230:	streq	r3, [r9, #12]
    a234:	beq	a248 <MyGame_Example_Monster_parse_json_table+0x108>
    a238:	cmp	r3, #46	; 0x2e
    a23c:	movne	r3, #1
    a240:	strne	r3, [r9, #12]
    a244:	beq	b0e8 <MyGame_Example_Monster_parse_json_table+0xfa8>
    a248:	mov	r1, r8
    a24c:	mov	r0, sl
    a250:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a254:	add	r3, pc, #820	; 0x334
    a258:	ldrd	r2, [r3]
    a25c:	mov	r4, r0
    a260:	mov	r5, r1
    a264:	strd	r4, [sp, #16]
    a268:	cmp	r1, r3
    a26c:	cmpeq	r0, r2
    a270:	bhi	a3c4 <MyGame_Example_Monster_parse_json_table+0x284>
    a274:	add	r3, pc, #796	; 0x31c
    a278:	ldrd	r2, [r3]
    a27c:	cmp	r1, r3
    a280:	cmpeq	r0, r2
    a284:	bhi	a4d0 <MyGame_Example_Monster_parse_json_table+0x390>
    a288:	add	r3, pc, #784	; 0x310
    a28c:	ldrd	r2, [r3]
    a290:	cmp	r1, r3
    a294:	cmpeq	r0, r2
    a298:	bhi	a82c <MyGame_Example_Monster_parse_json_table+0x6ec>
    a29c:	and	r1, r0, #-16777216	; 0xff000000
    a2a0:	add	r3, pc, #768	; 0x300
    a2a4:	ldrd	r2, [r3]
    a2a8:	str	r1, [sp, #40]	; 0x28
    a2ac:	str	r5, [sp, #44]	; 0x2c
    a2b0:	ldrd	r0, [sp, #40]	; 0x28
    a2b4:	cmp	r1, r3
    a2b8:	cmpeq	r0, r2
    a2bc:	beq	b468 <MyGame_Example_Monster_parse_json_table+0x1328>
    a2c0:	add	r3, pc, #744	; 0x2e8
    a2c4:	ldrd	r2, [r3]
    a2c8:	ldrd	r0, [sp, #40]	; 0x28
    a2cc:	cmp	r1, r3
    a2d0:	cmpeq	r0, r2
    a2d4:	bne	c4b4 <MyGame_Example_Monster_parse_json_table+0x2374>
    a2d8:	sub	r3, r8, sl
    a2dc:	cmp	r3, #5
    a2e0:	ble	c05c <MyGame_Example_Monster_parse_json_table+0x1f1c>
    a2e4:	mov	r3, #5
    a2e8:	mov	r2, r8
    a2ec:	mov	r1, sl
    a2f0:	mov	r0, r9
    a2f4:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a2f8:	cmp	r0, sl
    a2fc:	mov	r4, r0
    a300:	beq	c05c <MyGame_Example_Monster_parse_json_table+0x1f1c>
    a304:	mov	r3, #0
    a308:	mov	r0, #0
    a30c:	mov	r1, #0
    a310:	cmp	r8, r4
    a314:	strb	r3, [sp, #336]	; 0x150
    a318:	str	r3, [sp, #340]	; 0x154
    a31c:	add	r3, sp, #344	; 0x158
    a320:	strd	r0, [r3]
    a324:	beq	d620 <MyGame_Example_Monster_parse_json_table+0x34e0>
    a328:	mov	r0, r3
    a32c:	mov	r2, r8
    a330:	add	r3, sp, #340	; 0x154
    a334:	mov	r1, r4
    a338:	str	r0, [sp]
    a33c:	mov	r0, r9
    a340:	bl	0 <flatcc_json_parser_integer>
    a344:	cmp	r4, r0
    a348:	mov	sl, r0
    a34c:	bne	d660 <MyGame_Example_Monster_parse_json_table+0x3520>
    a350:	add	ip, sp, #336	; 0x150
    a354:	ldr	r3, [pc, #668]	; a5f8 <MyGame_Example_Monster_parse_json_table+0x4b8>
    a358:	mov	r2, r8
    a35c:	mov	r1, sl
    a360:	mov	r0, r9
    a364:	str	ip, [sp]
    a368:	bl	5060 <flatcc_json_parser_symbolic_int8>
    a36c:	cmp	r8, r0
    a370:	cmpne	r0, sl
    a374:	beq	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    a378:	add	r3, sp, #336	; 0x150
    a37c:	mov	sl, r0
    a380:	ldrsb	r2, [r3]
    a384:	cmp	r2, #8
    a388:	bne	a398 <MyGame_Example_Monster_parse_json_table+0x258>
    a38c:	ldr	r3, [r9, #8]
    a390:	tst	r3, #2
    a394:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a398:	mov	r3, #1
    a39c:	mov	r1, #6
    a3a0:	ldr	r0, [r9]
    a3a4:	mov	r2, r3
    a3a8:	bl	0 <flatcc_builder_table_add>
    a3ac:	cmp	r0, #0
    a3b0:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a3b4:	add	r3, sp, #336	; 0x150
    a3b8:	ldrsb	r3, [r3]
    a3bc:	strb	r3, [r0]
    a3c0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a3c4:	add	r3, pc, #492	; 0x1ec
    a3c8:	ldrd	r2, [r3]
    a3cc:	ldrd	r0, [sp, #16]
    a3d0:	cmp	r1, r3
    a3d4:	cmpeq	r0, r2
    a3d8:	bhi	a5fc <MyGame_Example_Monster_parse_json_table+0x4bc>
    a3dc:	add	r3, pc, #476	; 0x1dc
    a3e0:	ldrd	r2, [r3]
    a3e4:	cmp	r1, r3
    a3e8:	cmpeq	r0, r2
    a3ec:	beq	aabc <MyGame_Example_Monster_parse_json_table+0x97c>
    a3f0:	add	r3, pc, #464	; 0x1d0
    a3f4:	ldrd	r2, [r3]
    a3f8:	ldrd	r0, [sp, #16]
    a3fc:	cmp	r1, r3
    a400:	cmpeq	r0, r2
    a404:	bhi	ac60 <MyGame_Example_Monster_parse_json_table+0xb20>
    a408:	add	r3, pc, #448	; 0x1c0
    a40c:	ldrd	r2, [r3]
    a410:	cmp	r1, r3
    a414:	cmpeq	r0, r2
    a418:	beq	c638 <MyGame_Example_Monster_parse_json_table+0x24f8>
    a41c:	add	r3, pc, #436	; 0x1b4
    a420:	ldrd	r2, [r3]
    a424:	ldrd	r0, [sp, #16]
    a428:	cmp	r1, r3
    a42c:	cmpeq	r0, r2
    a430:	bne	b874 <MyGame_Example_Monster_parse_json_table+0x1734>
    a434:	sub	r3, r8, sl
    a438:	cmp	r3, #8
    a43c:	ble	d5f0 <MyGame_Example_Monster_parse_json_table+0x34b0>
    a440:	mov	r3, #8
    a444:	mov	r2, r8
    a448:	mov	r1, sl
    a44c:	mov	r0, r9
    a450:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a454:	cmp	r0, sl
    a458:	mov	r4, r0
    a45c:	beq	d5f0 <MyGame_Example_Monster_parse_json_table+0x34b0>
    a460:	mov	r2, #0
    a464:	sub	r3, r8, r0
    a468:	cmp	r3, #3
    a46c:	strb	r2, [sp, #336]	; 0x150
    a470:	ble	c10c <MyGame_Example_Monster_parse_json_table+0x1fcc>
    a474:	ldrb	r2, [r0]
    a478:	cmp	r2, #116	; 0x74
    a47c:	beq	db38 <MyGame_Example_Monster_parse_json_table+0x39f8>
    a480:	cmp	r3, #4
    a484:	beq	c10c <MyGame_Example_Monster_parse_json_table+0x1fcc>
    a488:	movw	r1, #0
    a48c:	movt	r1, #0
    a490:	mov	r2, #5
    a494:	mov	r0, r4
    a498:	bl	0 <memcmp>
    a49c:	cmp	r0, #0
    a4a0:	addeq	sl, r4, #5
    a4a4:	bne	c10c <MyGame_Example_Monster_parse_json_table+0x1fcc>
    a4a8:	mov	r3, #1
    a4ac:	mov	r1, #15
    a4b0:	ldr	r0, [r9]
    a4b4:	mov	r2, r3
    a4b8:	bl	0 <flatcc_builder_table_add>
    a4bc:	cmp	r0, #0
    a4c0:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a4c4:	ldrb	r3, [sp, #336]	; 0x150
    a4c8:	strb	r3, [r0]
    a4cc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a4d0:	add	r3, pc, #264	; 0x108
    a4d4:	ldrd	r2, [r3]
    a4d8:	ldrd	r4, [sp, #16]
    a4dc:	cmp	r5, r3
    a4e0:	cmpeq	r4, r2
    a4e4:	bhi	a9b4 <MyGame_Example_Monster_parse_json_table+0x874>
    a4e8:	add	r3, pc, #248	; 0xf8
    a4ec:	ldrd	r2, [r3]
    a4f0:	cmp	r5, r3
    a4f4:	cmpeq	r4, r2
    a4f8:	bhi	afb8 <MyGame_Example_Monster_parse_json_table+0xe78>
    a4fc:	mov	r1, #0
    a500:	add	r3, pc, #232	; 0xe8
    a504:	ldrd	r2, [r3]
    a508:	str	r1, [sp, #104]	; 0x68
    a50c:	str	r5, [sp, #108]	; 0x6c
    a510:	ldrd	r0, [sp, #104]	; 0x68
    a514:	cmp	r1, r3
    a518:	cmpeq	r0, r2
    a51c:	bne	b844 <MyGame_Example_Monster_parse_json_table+0x1704>
    a520:	sub	r3, r8, sl
    a524:	cmp	r3, #4
    a528:	ble	cc5c <MyGame_Example_Monster_parse_json_table+0x2b1c>
    a52c:	mov	r1, sl
    a530:	mov	r3, #4
    a534:	mov	r2, r8
    a538:	mov	r0, r9
    a53c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a540:	cmp	r0, sl
    a544:	mov	r1, r0
    a548:	beq	cc5c <MyGame_Example_Monster_parse_json_table+0x2b1c>
    a54c:	add	r3, sp, #324	; 0x144
    a550:	mov	r2, r8
    a554:	mov	r0, r9
    a558:	bl	0 <flatcc_json_parser_build_string>
    a55c:	ldr	r3, [sp, #324]	; 0x144
    a560:	mov	sl, r0
    a564:	cmp	r3, #0
    a568:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a56c:	mov	r1, #3
    a570:	ldr	r0, [r9]
    a574:	bl	0 <flatcc_builder_table_add_offset>
    a578:	cmp	r0, #0
    a57c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a580:	ldr	r3, [sp, #324]	; 0x144
    a584:	str	r3, [r0]
    a588:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a58c:	nop	{0}
    a590:	.word	0x61727260
    a594:	.word	0x74657374
    a598:	.word	0xffffffff
    a59c:	.word	0x6e616d64
    a5a0:	.word	0xffffffff
    a5a4:	.word	0x666c6577
    a5a8:	.word	0x79000000
    a5ac:	.word	0x656e656d
    a5b0:	.word	0x72000000
    a5b4:	.word	0x636f6c6f
    a5b8:	.word	0x6632ffff
    a5bc:	.word	0x74657374
    a5c0:	.word	0x61727261
    a5c4:	.word	0x74657374
    a5c8:	.word	0x656d7073
    a5cc:	.word	0x74657374
    a5d0:	.word	0x62617365
    a5d4:	.word	0x74657374
    a5d8:	.word	0x626f6f6c
    a5dc:	.word	0x74657374
    a5e0:	.word	0xffffffff
    a5e4:	.word	0x74657373
    a5e8:	.word	0x6e745f6d
    a5ec:	.word	0x70617265
    a5f0:	.word	0x00000000
    a5f4:	.word	0x6e616d65
    a5f8:	.word	0x00000114
    a5fc:	add	r3, pc, #876	; 0x36c
    a600:	ldrd	r2, [r3]
    a604:	ldrd	r4, [sp, #16]
    a608:	cmp	r5, r3
    a60c:	cmpeq	r4, r2
    a610:	bhi	a6dc <MyGame_Example_Monster_parse_json_table+0x59c>
    a614:	lsr	r3, r4, #16
    a618:	str	r3, [sp, #24]
    a61c:	ldr	r1, [sp, #24]
    a620:	str	r5, [sp, #28]
    a624:	add	r3, pc, #844	; 0x34c
    a628:	ldrd	r2, [r3]
    a62c:	lsl	r1, r1, #16
    a630:	str	r1, [sp, #24]
    a634:	ldrd	r0, [sp, #24]
    a638:	cmp	r1, r3
    a63c:	cmpeq	r0, r2
    a640:	bne	b228 <MyGame_Example_Monster_parse_json_table+0x10e8>
    a644:	sub	r3, r8, sl
    a648:	cmp	r3, #6
    a64c:	ble	c9bc <MyGame_Example_Monster_parse_json_table+0x287c>
    a650:	mov	r3, #6
    a654:	mov	r2, r8
    a658:	mov	r1, sl
    a65c:	mov	r0, r9
    a660:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a664:	cmp	r0, sl
    a668:	mov	r4, r0
    a66c:	beq	c9bc <MyGame_Example_Monster_parse_json_table+0x287c>
    a670:	mov	ip, #0
    a674:	mov	r1, r0
    a678:	mov	r2, r8
    a67c:	add	r3, sp, #344	; 0x158
    a680:	mov	r0, r9
    a684:	str	ip, [sp, #344]	; 0x158
    a688:	bl	0 <flatcc_json_parser_float>
    a68c:	cmp	r0, r4
    a690:	mov	sl, r0
    a694:	beq	cf24 <MyGame_Example_Monster_parse_json_table+0x2de4>
    a698:	vldr	s15, [sp, #344]	; 0x158
    a69c:	vcmp.f32	s15, #0.0
    a6a0:	vmrs	APSR_nzcv, fpscr
    a6a4:	bne	a6b4 <MyGame_Example_Monster_parse_json_table+0x574>
    a6a8:	ldr	r3, [r9, #8]
    a6ac:	tst	r3, #2
    a6b0:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a6b4:	mov	r3, #4
    a6b8:	mov	r1, #27
    a6bc:	ldr	r0, [r9]
    a6c0:	mov	r2, r3
    a6c4:	bl	0 <flatcc_builder_table_add>
    a6c8:	cmp	r0, #0
    a6cc:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a6d0:	ldr	r3, [sp, #344]	; 0x158
    a6d4:	str	r3, [r0]
    a6d8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a6dc:	add	r3, pc, #668	; 0x29c
    a6e0:	ldrd	r2, [r3]
    a6e4:	ldrd	r0, [sp, #16]
    a6e8:	cmp	r1, r3
    a6ec:	cmpeq	r0, r2
    a6f0:	beq	b240 <MyGame_Example_Monster_parse_json_table+0x1100>
    a6f4:	add	r3, pc, #652	; 0x28c
    a6f8:	ldrd	r2, [r3]
    a6fc:	ldrd	r0, [sp, #16]
    a700:	cmp	r1, r3
    a704:	cmpeq	r0, r2
    a708:	bhi	b51c <MyGame_Example_Monster_parse_json_table+0x13dc>
    a70c:	add	r3, pc, #636	; 0x27c
    a710:	ldrd	r2, [r3]
    a714:	cmp	r1, r3
    a718:	cmpeq	r0, r2
    a71c:	bne	beb8 <MyGame_Example_Monster_parse_json_table+0x1d78>
    a720:	add	r4, sl, #8
    a724:	mov	r1, r8
    a728:	mov	r0, r4
    a72c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a730:	add	r3, pc, #608	; 0x260
    a734:	ldrd	r2, [r3]
    a738:	cmp	r1, r3
    a73c:	cmpeq	r0, r2
    a740:	bne	cec4 <MyGame_Example_Monster_parse_json_table+0x2d84>
    a744:	mov	r3, #0
    a748:	add	r4, sl, #16
    a74c:	mov	r1, r8
    a750:	mov	r0, r4
    a754:	str	r3, [sp, #240]	; 0xf0
    a758:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a75c:	str	r1, [sp, #244]	; 0xf4
    a760:	add	r3, pc, #568	; 0x238
    a764:	ldrd	r2, [r3]
    a768:	ldrd	r0, [sp, #240]	; 0xf0
    a76c:	cmp	r1, r3
    a770:	cmpeq	r0, r2
    a774:	bne	cf9c <MyGame_Example_Monster_parse_json_table+0x2e5c>
    a778:	sub	r3, r8, r4
    a77c:	cmp	r3, #4
    a780:	ble	e220 <MyGame_Example_Monster_parse_json_table+0x40e0>
    a784:	mov	r3, #4
    a788:	mov	r2, r8
    a78c:	mov	r1, r4
    a790:	mov	r0, r9
    a794:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a798:	cmp	r4, r0
    a79c:	mov	sl, r0
    a7a0:	beq	e21c <MyGame_Example_Monster_parse_json_table+0x40dc>
    a7a4:	cmp	r8, r0
    a7a8:	ldr	r0, [r9]
    a7ac:	beq	a7bc <MyGame_Example_Monster_parse_json_table+0x67c>
    a7b0:	ldrb	r3, [sl]
    a7b4:	cmp	r3, #91	; 0x5b
    a7b8:	beq	e47c <MyGame_Example_Monster_parse_json_table+0x433c>
    a7bc:	mov	r3, #0
    a7c0:	mov	r2, r3
    a7c4:	mov	r1, r3
    a7c8:	bl	0 <flatcc_builder_start_buffer>
    a7cc:	cmp	r0, #0
    a7d0:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a7d4:	mov	r1, sl
    a7d8:	add	r3, sp, #324	; 0x144
    a7dc:	mov	r2, r8
    a7e0:	mov	r0, r9
    a7e4:	bl	a140 <MyGame_Example_Monster_parse_json_table>
    a7e8:	ldr	r1, [sp, #324]	; 0x144
    a7ec:	mov	sl, r0
    a7f0:	cmp	r1, #0
    a7f4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a7f8:	ldr	r0, [r9]
    a7fc:	bl	0 <flatcc_builder_end_buffer>
    a800:	str	r0, [sp, #324]	; 0x144
    a804:	cmp	r0, #0
    a808:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a80c:	mov	r1, #13
    a810:	ldr	r0, [r9]
    a814:	bl	0 <flatcc_builder_table_add_offset>
    a818:	cmp	r0, #0
    a81c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a820:	ldr	r3, [sp, #324]	; 0x144
    a824:	str	r3, [r0]
    a828:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a82c:	ldrd	r4, [sp, #16]
    a830:	movw	r3, #65535	; 0xffff
    a834:	movt	r3, #26735	; 0x686f
    a838:	mvn	r2, #0
    a83c:	cmp	r5, r3
    a840:	cmpeq	r4, r2
    a844:	bhi	b140 <MyGame_Example_Monster_parse_json_table+0x1000>
    a848:	mov	r1, #0
    a84c:	add	r3, pc, #340	; 0x154
    a850:	ldrd	r2, [r3]
    a854:	str	r1, [sp, #96]	; 0x60
    a858:	str	r5, [sp, #100]	; 0x64
    a85c:	ldrd	r0, [sp, #96]	; 0x60
    a860:	cmp	r1, r3
    a864:	cmpeq	r0, r2
    a868:	bne	b85c <MyGame_Example_Monster_parse_json_table+0x171c>
    a86c:	sub	r3, r8, sl
    a870:	cmp	r3, #4
    a874:	ble	cb40 <MyGame_Example_Monster_parse_json_table+0x2a00>
    a878:	mov	r3, #4
    a87c:	mov	r2, r8
    a880:	mov	r1, sl
    a884:	mov	r0, r9
    a888:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a88c:	cmp	r0, sl
    a890:	mov	r4, r0
    a894:	beq	cb40 <MyGame_Example_Monster_parse_json_table+0x2a00>
    a898:	mov	r2, #1
    a89c:	mvn	r3, #0
    a8a0:	ldr	r0, [r9]
    a8a4:	mov	r1, r2
    a8a8:	bl	0 <flatcc_builder_start_vector>
    a8ac:	subs	r5, r0, #0
    a8b0:	bne	e210 <MyGame_Example_Monster_parse_json_table+0x40d0>
    a8b4:	add	r3, sp, #320	; 0x140
    a8b8:	mov	r1, r4
    a8bc:	mov	r2, r8
    a8c0:	mov	r0, r9
    a8c4:	bl	3b94 <flatcc_json_parser_array_start>
    a8c8:	ldr	r3, [sp, #320]	; 0x140
    a8cc:	mov	sl, r0
    a8d0:	cmp	r3, #0
    a8d4:	beq	d8c8 <MyGame_Example_Monster_parse_json_table+0x3788>
    a8d8:	ldr	fp, [pc, #208]	; a9b0 <MyGame_Example_Monster_parse_json_table+0x870>
    a8dc:	b	a90c <MyGame_Example_Monster_parse_json_table+0x7cc>
    a8e0:	ldrb	ip, [sp, #344]	; 0x158
    a8e4:	mov	r1, r0
    a8e8:	add	r3, sp, #320	; 0x140
    a8ec:	mov	r2, r8
    a8f0:	mov	r0, r9
    a8f4:	strb	ip, [r4]
    a8f8:	bl	5e0c <flatcc_json_parser_array_end>
    a8fc:	ldr	r3, [sp, #320]	; 0x140
    a900:	mov	sl, r0
    a904:	cmp	r3, #0
    a908:	beq	d8c8 <MyGame_Example_Monster_parse_json_table+0x3788>
    a90c:	mov	r1, #1
    a910:	ldr	r0, [r9]
    a914:	strb	r5, [sp, #344]	; 0x158
    a918:	bl	0 <flatcc_builder_extend_vector>
    a91c:	subs	r4, r0, #0
    a920:	mov	r1, sl
    a924:	add	r3, sp, #344	; 0x158
    a928:	mov	r2, r8
    a92c:	mov	r0, r9
    a930:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    a934:	bl	2c18 <flatcc_json_parser_uint8>
    a938:	cmp	r0, sl
    a93c:	bne	a8e0 <MyGame_Example_Monster_parse_json_table+0x7a0>
    a940:	add	r1, sp, #344	; 0x158
    a944:	mov	r3, fp
    a948:	mov	r2, r8
    a94c:	mov	r0, r9
    a950:	str	r1, [sp]
    a954:	mov	r1, sl
    a958:	bl	4728 <flatcc_json_parser_symbolic_uint8>
    a95c:	cmp	r8, r0
    a960:	cmpne	r0, sl
    a964:	bne	a8e0 <MyGame_Example_Monster_parse_json_table+0x7a0>
    a968:	b	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    a96c:	nop	{0}
    a970:	.word	0x68617367
    a974:	.word	0x74657374
    a978:	.word	0x66330000
    a97c:	.word	0x74657374
    a980:	.word	0x68617368
    a984:	.word	0x74657374
    a988:	.word	0x6f725f6e
    a98c:	.word	0x76656374
    a990:	.word	0x6e657374
    a994:	.word	0x74657374
    a998:	.word	0x61746275
    a99c:	.word	0x6564666c
    a9a0:	.word	0x00000000
    a9a4:	.word	0x66666572
    a9a8:	.word	0x00000000
    a9ac:	.word	0x666c6578
    a9b0:	.word	0x00000124
    a9b4:	ldrd	r4, [sp, #16]
    a9b8:	sub	fp, r8, sl
    a9bc:	add	r3, pc, #892	; 0x37c
    a9c0:	ldrd	r2, [r3]
    a9c4:	and	r1, r4, #-16777216	; 0xff000000
    a9c8:	str	r1, [sp, #48]	; 0x30
    a9cc:	str	r5, [sp, #52]	; 0x34
    a9d0:	ldrd	r0, [sp, #48]	; 0x30
    a9d4:	cmp	r1, r3
    a9d8:	cmpeq	r0, r2
    a9dc:	beq	b30c <MyGame_Example_Monster_parse_json_table+0x11cc>
    a9e0:	cmp	fp, #4
    a9e4:	ble	c4cc <MyGame_Example_Monster_parse_json_table+0x238c>
    a9e8:	mov	r3, #4
    a9ec:	mov	r2, r8
    a9f0:	mov	r1, sl
    a9f4:	mov	r0, r9
    a9f8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    a9fc:	cmp	r0, sl
    aa00:	beq	c4cc <MyGame_Example_Monster_parse_json_table+0x238c>
    aa04:	ldr	ip, [sp, #328]	; 0x148
    aa08:	mov	lr, #8
    aa0c:	movw	r3, #0
    aa10:	movt	r3, #0
    aa14:	mov	r1, r0
    aa18:	mov	r2, r8
    aa1c:	mov	r0, r9
    aa20:	str	lr, [sp]
    aa24:	str	ip, [sp, #4]
    aa28:	str	r3, [sp, #8]
    aa2c:	mov	r3, #0
    aa30:	bl	0 <flatcc_json_parser_union>
    aa34:	mov	sl, r0
    aa38:	mov	r1, sl
    aa3c:	add	r3, sp, #320	; 0x140
    aa40:	mov	r2, r8
    aa44:	mov	r0, r9
    aa48:	bl	5c48 <flatcc_json_parser_object_end>
    aa4c:	ldr	r3, [sp, #320]	; 0x140
    aa50:	mov	sl, r0
    aa54:	cmp	r3, #0
    aa58:	bne	a218 <MyGame_Example_Monster_parse_json_table+0xd8>
    aa5c:	mov	fp, r9
    aa60:	mov	r9, r8
    aa64:	ldr	r3, [fp, #24]
    aa68:	cmp	r3, #0
    aa6c:	bne	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    aa70:	mov	r1, #3
    aa74:	ldr	r0, [fp]
    aa78:	bl	0 <flatcc_builder_check_required_field>
    aa7c:	cmp	r0, #0
    aa80:	mov	r1, sl
    aa84:	beq	daf0 <MyGame_Example_Monster_parse_json_table+0x39b0>
    aa88:	mov	r2, r9
    aa8c:	mov	r0, fp
    aa90:	ldr	r3, [sp, #328]	; 0x148
    aa94:	bl	0 <flatcc_json_parser_finalize_unions>
    aa98:	mov	r4, r0
    aa9c:	ldr	r0, [fp]
    aaa0:	bl	0 <flatcc_builder_end_table>
    aaa4:	ldr	r3, [sp, #68]	; 0x44
    aaa8:	cmp	r0, #0
    aaac:	str	r0, [r3]
    aab0:	bne	a1a4 <MyGame_Example_Monster_parse_json_table+0x64>
    aab4:	mov	sl, r4
    aab8:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    aabc:	add	r4, sl, #8
    aac0:	mov	r1, r8
    aac4:	mov	r0, r4
    aac8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aacc:	add	r3, pc, #628	; 0x274
    aad0:	ldrd	r2, [r3]
    aad4:	cmp	r1, r3
    aad8:	cmpeq	r0, r2
    aadc:	bhi	b3cc <MyGame_Example_Monster_parse_json_table+0x128c>
    aae0:	add	r3, pc, #616	; 0x268
    aae4:	ldrd	r2, [r3]
    aae8:	cmp	r1, r3
    aaec:	cmpeq	r0, r2
    aaf0:	bne	b88c <MyGame_Example_Monster_parse_json_table+0x174c>
    aaf4:	sub	r3, r8, r4
    aaf8:	cmp	r3, #8
    aafc:	ble	cb5c <MyGame_Example_Monster_parse_json_table+0x2a1c>
    ab00:	mov	r3, #8
    ab04:	mov	r2, r8
    ab08:	mov	r1, r4
    ab0c:	mov	r0, r9
    ab10:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    ab14:	cmp	r4, r0
    ab18:	mov	sl, r0
    ab1c:	beq	cb58 <MyGame_Example_Monster_parse_json_table+0x2a18>
    ab20:	mov	r2, #1
    ab24:	mvn	r3, #0
    ab28:	ldr	r0, [r9]
    ab2c:	mov	r1, r2
    ab30:	bl	0 <flatcc_builder_start_vector>
    ab34:	subs	r4, r0, #0
    ab38:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ab3c:	mov	r1, sl
    ab40:	add	r3, sp, #320	; 0x140
    ab44:	mov	r2, r8
    ab48:	mov	r0, r9
    ab4c:	bl	3b94 <flatcc_json_parser_array_start>
    ab50:	ldr	r3, [sp, #320]	; 0x140
    ab54:	mov	sl, r0
    ab58:	cmp	r3, #0
    ab5c:	beq	d98c <MyGame_Example_Monster_parse_json_table+0x384c>
    ab60:	movw	r3, #0
    ab64:	movt	r3, #0
    ab68:	strd	r6, [sp, #16]
    ab6c:	mov	fp, r4
    ab70:	mov	r7, r3
    ab74:	b	aba4 <MyGame_Example_Monster_parse_json_table+0xa64>
    ab78:	ldrb	ip, [sp, #340]	; 0x154
    ab7c:	add	r3, sp, #320	; 0x140
    ab80:	mov	r1, r4
    ab84:	mov	r2, r8
    ab88:	mov	r0, r9
    ab8c:	strb	ip, [r5]
    ab90:	bl	5e0c <flatcc_json_parser_array_end>
    ab94:	ldr	r3, [sp, #320]	; 0x140
    ab98:	mov	sl, r0
    ab9c:	cmp	r3, #0
    aba0:	beq	d988 <MyGame_Example_Monster_parse_json_table+0x3848>
    aba4:	mov	r1, #1
    aba8:	ldr	r0, [r9]
    abac:	strb	fp, [sp, #340]	; 0x154
    abb0:	bl	0 <flatcc_builder_extend_vector>
    abb4:	subs	r5, r0, #0
    abb8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    abbc:	sub	r3, r8, sl
    abc0:	cmp	r3, #3
    abc4:	ble	abfc <MyGame_Example_Monster_parse_json_table+0xabc>
    abc8:	ldrb	r2, [sl]
    abcc:	cmp	r2, #116	; 0x74
    abd0:	beq	d53c <MyGame_Example_Monster_parse_json_table+0x33fc>
    abd4:	cmp	r3, #4
    abd8:	beq	abfc <MyGame_Example_Monster_parse_json_table+0xabc>
    abdc:	mov	r2, #5
    abe0:	mov	r1, r7
    abe4:	mov	r0, sl
    abe8:	bl	0 <memcmp>
    abec:	cmp	r0, #0
    abf0:	addeq	r4, sl, #5
    abf4:	strbeq	r0, [sp, #340]	; 0x154
    abf8:	beq	ac24 <MyGame_Example_Monster_parse_json_table+0xae4>
    abfc:	add	r3, sp, #344	; 0x158
    ac00:	mov	r2, r8
    ac04:	mov	r1, sl
    ac08:	mov	r0, r9
    ac0c:	bl	2c18 <flatcc_json_parser_uint8>
    ac10:	ldrb	r3, [sp, #344]	; 0x158
    ac14:	mov	r4, r0
    ac18:	adds	r3, r3, #0
    ac1c:	movne	r3, #1
    ac20:	strb	r3, [sp, #340]	; 0x154
    ac24:	cmp	sl, r4
    ac28:	bne	ab78 <MyGame_Example_Monster_parse_json_table+0xa38>
    ac2c:	add	r0, sp, #340	; 0x154
    ac30:	ldr	r3, [pc, #304]	; ad68 <MyGame_Example_Monster_parse_json_table+0xc28>
    ac34:	mov	r2, r8
    ac38:	mov	r1, r4
    ac3c:	str	r0, [sp]
    ac40:	mov	r0, r9
    ac44:	bl	406c <flatcc_json_parser_symbolic_bool>
    ac48:	cmp	r8, r0
    ac4c:	cmpne	r0, r4
    ac50:	mov	sl, r0
    ac54:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ac58:	mov	r4, r0
    ac5c:	b	ab78 <MyGame_Example_Monster_parse_json_table+0xa38>
    ac60:	add	r3, pc, #240	; 0xf0
    ac64:	ldrd	r2, [r3]
    ac68:	ldrd	r0, [sp, #16]
    ac6c:	cmp	r1, r3
    ac70:	cmpeq	r0, r2
    ac74:	bhi	b698 <MyGame_Example_Monster_parse_json_table+0x1558>
    ac78:	add	r3, pc, #224	; 0xe0
    ac7c:	ldrd	r2, [r3]
    ac80:	cmp	r1, r3
    ac84:	cmpeq	r0, r2
    ac88:	bne	bee8 <MyGame_Example_Monster_parse_json_table+0x1da8>
    ac8c:	add	r4, sl, #8
    ac90:	mov	r1, r8
    ac94:	mov	r0, r4
    ac98:	mov	r5, #0
    ac9c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aca0:	and	r3, r1, #-16777216	; 0xff000000
    aca4:	str	r5, [sp, #192]	; 0xc0
    aca8:	str	r3, [sp, #196]	; 0xc4
    acac:	ldrd	r2, [sp, #192]	; 0xc0
    acb0:	cmp	r3, #2030043136	; 0x79000000
    acb4:	cmpeq	r2, #0
    acb8:	bne	ceac <MyGame_Example_Monster_parse_json_table+0x2d6c>
    acbc:	sub	r3, r8, r4
    acc0:	cmp	r3, #1
    acc4:	ble	d1f8 <MyGame_Example_Monster_parse_json_table+0x30b8>
    acc8:	mov	r3, #1
    accc:	mov	r2, r8
    acd0:	mov	r1, r4
    acd4:	mov	r0, r9
    acd8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    acdc:	cmp	r4, r0
    ace0:	mov	sl, r0
    ace4:	beq	d1f4 <MyGame_Example_Monster_parse_json_table+0x30b4>
    ace8:	mov	r1, #3
    acec:	ldr	r0, [r9]
    acf0:	str	r5, [sp, #324]	; 0x144
    acf4:	bl	0 <flatcc_builder_start_table>
    acf8:	cmp	r0, r5
    acfc:	bne	d884 <MyGame_Example_Monster_parse_json_table+0x3744>
    ad00:	mov	r1, sl
    ad04:	add	r3, sp, #332	; 0x14c
    ad08:	mov	r2, r8
    ad0c:	mov	r0, r9
    ad10:	bl	3ac0 <flatcc_json_parser_object_start>
    ad14:	ldr	r3, [sp, #332]	; 0x14c
    ad18:	mov	sl, r0
    ad1c:	cmp	r3, r5
    ad20:	beq	dd84 <MyGame_Example_Monster_parse_json_table+0x3c44>
    ad24:	mov	fp, r5
    ad28:	add	r3, sp, #272	; 0x110
    ad2c:	strd	r6, [sp, #16]
    ad30:	movt	fp, #65535	; 0xffff
    ad34:	ldrd	r4, [r3]
    ad38:	mov	r6, fp
    ad3c:	b	aeb0 <MyGame_Example_Monster_parse_json_table+0xd70>
    ad40:	.word	0x34000000
    ad44:	.word	0x74657374
    ad48:	.word	0x7472696d
    ad4c:	.word	0x796f6673
    ad50:	.word	0x6f6f6c73
    ad54:	.word	0x796f6662
    ad58:	.word	0x65ffffff
    ad5c:	.word	0x74657374
    ad60:	.word	0x656d7074
    ad64:	.word	0x74657374
    ad68:	.word	0x000001a4
    ad6c:	and	r3, r0, #-16777216	; 0xff000000
    ad70:	str	r3, [sp, #112]	; 0x70
    ad74:	str	r1, [sp, #116]	; 0x74
    ad78:	add	r1, pc, #904	; 0x388
    ad7c:	ldrd	r0, [r1]
    ad80:	ldrd	r2, [sp, #112]	; 0x70
    ad84:	cmp	r3, r1
    ad88:	cmpeq	r2, r0
    ad8c:	bne	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    ad90:	sub	r3, r8, sl
    ad94:	cmp	r3, #5
    ad98:	ble	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    ad9c:	mov	r3, #5
    ada0:	mov	r2, r8
    ada4:	mov	r1, sl
    ada8:	mov	r0, r9
    adac:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    adb0:	cmp	r0, sl
    adb4:	mov	fp, r0
    adb8:	beq	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    adbc:	add	r2, sp, #344	; 0x158
    adc0:	cmp	r8, r0
    adc4:	mov	r1, #0
    adc8:	mov	r0, #0
    adcc:	mov	r3, #0
    add0:	strd	r0, [r2]
    add4:	add	r2, sp, #316	; 0x13c
    add8:	add	r2, r2, #2
    addc:	str	r3, [sp, #340]	; 0x154
    ade0:	strh	r3, [r2]
    ade4:	beq	d868 <MyGame_Example_Monster_parse_json_table+0x3728>
    ade8:	add	r0, sp, #344	; 0x158
    adec:	add	r3, sp, #340	; 0x154
    adf0:	mov	r2, r8
    adf4:	mov	r1, fp
    adf8:	str	r0, [sp]
    adfc:	mov	r0, r9
    ae00:	bl	0 <flatcc_json_parser_integer>
    ae04:	cmp	fp, r0
    ae08:	mov	r7, r0
    ae0c:	bne	d8fc <MyGame_Example_Monster_parse_json_table+0x37bc>
    ae10:	add	ip, sp, #316	; 0x13c
    ae14:	ldr	r3, [pc, #800]	; b13c <MyGame_Example_Monster_parse_json_table+0xffc>
    ae18:	mov	r2, r8
    ae1c:	add	ip, ip, #2
    ae20:	mov	r1, r7
    ae24:	mov	r0, r9
    ae28:	str	ip, [sp]
    ae2c:	bl	4968 <flatcc_json_parser_symbolic_uint16>
    ae30:	cmp	r8, r0
    ae34:	cmpne	r0, r7
    ae38:	mov	sl, r0
    ae3c:	beq	e200 <MyGame_Example_Monster_parse_json_table+0x40c0>
    ae40:	add	r3, sp, #316	; 0x13c
    ae44:	add	r3, r3, #2
    ae48:	ldrh	r2, [r3]
    ae4c:	cmp	r2, #0
    ae50:	bne	ae60 <MyGame_Example_Monster_parse_json_table+0xd20>
    ae54:	ldr	r3, [r9, #8]
    ae58:	tst	r3, #2
    ae5c:	beq	ae8c <MyGame_Example_Monster_parse_json_table+0xd4c>
    ae60:	mov	r3, #2
    ae64:	ldr	r0, [r9]
    ae68:	mov	r2, r3
    ae6c:	mov	r1, r3
    ae70:	bl	0 <flatcc_builder_table_add>
    ae74:	cmp	r0, #0
    ae78:	beq	e200 <MyGame_Example_Monster_parse_json_table+0x40c0>
    ae7c:	add	r3, sp, #316	; 0x13c
    ae80:	add	r3, r3, #2
    ae84:	ldrh	r3, [r3]
    ae88:	strh	r3, [r0]
    ae8c:	mov	r1, sl
    ae90:	add	r3, sp, #332	; 0x14c
    ae94:	mov	r2, r8
    ae98:	mov	r0, r9
    ae9c:	bl	5c48 <flatcc_json_parser_object_end>
    aea0:	ldr	r3, [sp, #332]	; 0x14c
    aea4:	mov	sl, r0
    aea8:	cmp	r3, #0
    aeac:	beq	dd78 <MyGame_Example_Monster_parse_json_table+0x3c38>
    aeb0:	cmp	r8, sl
    aeb4:	beq	aee0 <MyGame_Example_Monster_parse_json_table+0xda0>
    aeb8:	ldrb	r3, [sl]
    aebc:	cmp	r3, #34	; 0x22
    aec0:	moveq	r3, #0
    aec4:	addeq	sl, sl, #1
    aec8:	streq	r3, [r9, #12]
    aecc:	beq	aee0 <MyGame_Example_Monster_parse_json_table+0xda0>
    aed0:	cmp	r3, #46	; 0x2e
    aed4:	movne	r3, #1
    aed8:	strne	r3, [r9, #12]
    aedc:	beq	d644 <MyGame_Example_Monster_parse_json_table+0x3504>
    aee0:	mov	r1, r8
    aee4:	mov	r0, sl
    aee8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aeec:	movw	r3, #65535	; 0xffff
    aef0:	movt	r3, #26979	; 0x6963
    aef4:	mvn	r2, #0
    aef8:	cmp	r1, r3
    aefc:	cmpeq	r0, r2
    af00:	bls	ad6c <MyGame_Example_Monster_parse_json_table+0xc2c>
    af04:	add	r3, pc, #516	; 0x204
    af08:	ldrd	r2, [r3]
    af0c:	bic	r5, r1, #255	; 0xff
    af10:	mov	fp, #0
    af14:	mov	r4, fp
    af18:	cmp	r5, r3
    af1c:	cmpeq	fp, r2
    af20:	beq	d49c <MyGame_Example_Monster_parse_json_table+0x335c>
    af24:	and	r3, r1, r6
    af28:	str	fp, [sp, #160]	; 0xa0
    af2c:	mov	r1, #0
    af30:	movt	r1, #26980	; 0x6964
    af34:	mov	r0, #0
    af38:	str	r3, [sp, #164]	; 0xa4
    af3c:	ldrd	r2, [sp, #160]	; 0xa0
    af40:	cmp	r3, r1
    af44:	cmpeq	r2, r0
    af48:	bne	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    af4c:	sub	r3, r8, sl
    af50:	cmp	r3, #2
    af54:	ble	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    af58:	mov	r1, sl
    af5c:	mov	r3, #2
    af60:	mov	r2, r8
    af64:	mov	r0, r9
    af68:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    af6c:	cmp	r0, sl
    af70:	mov	r1, r0
    af74:	beq	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    af78:	add	r3, sp, #336	; 0x150
    af7c:	mov	r2, r8
    af80:	mov	r0, r9
    af84:	bl	0 <flatcc_json_parser_build_string>
    af88:	ldr	r3, [sp, #336]	; 0x150
    af8c:	mov	sl, r0
    af90:	cmp	r3, #0
    af94:	beq	e200 <MyGame_Example_Monster_parse_json_table+0x40c0>
    af98:	mov	r1, fp
    af9c:	ldr	r0, [r9]
    afa0:	bl	0 <flatcc_builder_table_add_offset>
    afa4:	cmp	r0, #0
    afa8:	beq	e200 <MyGame_Example_Monster_parse_json_table+0x40c0>
    afac:	ldr	r3, [sp, #336]	; 0x150
    afb0:	str	r3, [r0]
    afb4:	b	ae8c <MyGame_Example_Monster_parse_json_table+0xd4c>
    afb8:	add	r3, pc, #344	; 0x158
    afbc:	ldrd	r2, [r3]
    afc0:	ldrd	r0, [sp, #16]
    afc4:	cmp	r1, r3
    afc8:	cmpeq	r0, r2
    afcc:	beq	c9d4 <MyGame_Example_Monster_parse_json_table+0x2894>
    afd0:	ldr	r1, [sp, #20]
    afd4:	mov	r4, #0
    afd8:	str	r4, [sp, #152]	; 0x98
    afdc:	add	r3, pc, #316	; 0x13c
    afe0:	ldrd	r2, [r3]
    afe4:	bic	r1, r1, #255	; 0xff
    afe8:	str	r1, [sp, #156]	; 0x9c
    afec:	ldrd	r0, [sp, #152]	; 0x98
    aff0:	cmp	r1, r3
    aff4:	cmpeq	r0, r2
    aff8:	bne	bea0 <MyGame_Example_Monster_parse_json_table+0x1d60>
    affc:	sub	r3, r8, sl
    b000:	cmp	r3, #3
    b004:	ble	d6cc <MyGame_Example_Monster_parse_json_table+0x358c>
    b008:	mov	r3, #3
    b00c:	mov	r2, r8
    b010:	mov	r1, sl
    b014:	mov	r0, r9
    b018:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b01c:	cmp	r0, sl
    b020:	mov	r5, r0
    b024:	beq	d6cc <MyGame_Example_Monster_parse_json_table+0x358c>
    b028:	mov	r3, #16
    b02c:	mov	r1, r4
    b030:	ldr	r0, [r9]
    b034:	mov	r2, #32
    b038:	bl	0 <flatcc_builder_table_add>
    b03c:	subs	r3, r0, #0
    b040:	str	r3, [sp, #16]
    b044:	beq	e46c <MyGame_Example_Monster_parse_json_table+0x432c>
    b048:	add	r3, sp, #336	; 0x150
    b04c:	mov	r1, r5
    b050:	vldr	s16, [pc, #224]	; b138 <MyGame_Example_Monster_parse_json_table+0xff8>
    b054:	mov	r2, r8
    b058:	mov	r0, r9
    b05c:	vldr	d9, [pc, #196]	; b128 <MyGame_Example_Monster_parse_json_table+0xfe8>
    b060:	bl	3ac0 <flatcc_json_parser_object_start>
    b064:	ldr	r3, [sp, #336]	; 0x150
    b068:	mov	fp, r0
    b06c:	cmp	r3, #0
    b070:	beq	e624 <MyGame_Example_Monster_parse_json_table+0x44e4>
    b074:	add	r5, pc, #180	; 0xb4
    b078:	ldrd	r4, [r5]
    b07c:	cmp	r8, fp
    b080:	beq	b0ac <MyGame_Example_Monster_parse_json_table+0xf6c>
    b084:	ldrb	r3, [fp]
    b088:	cmp	r3, #34	; 0x22
    b08c:	moveq	r3, #0
    b090:	addeq	fp, fp, #1
    b094:	streq	r3, [r9, #12]
    b098:	beq	b0ac <MyGame_Example_Monster_parse_json_table+0xf6c>
    b09c:	cmp	r3, #46	; 0x2e
    b0a0:	movne	r3, #1
    b0a4:	strne	r3, [r9, #12]
    b0a8:	beq	c498 <MyGame_Example_Monster_parse_json_table+0x2358>
    b0ac:	sub	ip, r8, fp
    b0b0:	cmp	ip, #8
    b0b4:	bhi	bbe4 <MyGame_Example_Monster_parse_json_table+0x1aa4>
    b0b8:	sub	r3, ip, #1
    b0bc:	cmp	r3, #7
    b0c0:	ldrls	pc, [pc, r3, lsl #2]
    b0c4:	b	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    b0c8:	.word	0x0000bda8
    b0cc:	.word	0x0000bd54
    b0d0:	.word	0x0000bd48
    b0d4:	.word	0x0000bd6c
    b0d8:	.word	0x0000bd60
    b0dc:	.word	0x0000bd3c
    b0e0:	.word	0x0000bd30
    b0e4:	.word	0x0000bbe4
    b0e8:	mov	r1, sl
    b0ec:	mov	r3, #5
    b0f0:	mov	r2, r8
    b0f4:	mov	r0, r9
    b0f8:	bl	0 <flatcc_json_parser_set_error>
    b0fc:	mov	sl, r0
    b100:	b	a248 <MyGame_Example_Monster_parse_json_table+0x108>
    b104:	nop	{0}
    b108:	.word	0x74000000
    b10c:	.word	0x636f756e
    b110:	.word	0x00000000
    b114:	.word	0x76616c00
    b118:	.word	0x6e745f6e
    b11c:	.word	0x70617265
    b120:	.word	0x00000000
    b124:	.word	0x706f7300
	...
    b130:	.word	0x32ffffff
    b134:	.word	0x74657374
    b138:	.word	0x00000000
    b13c:	.word	0x000001d4
    b140:	add	r3, pc, #912	; 0x390
    b144:	ldrd	r2, [r3]
    b148:	ldrd	r0, [sp, #16]
    b14c:	cmp	r1, r3
    b150:	cmpeq	r0, r2
    b154:	bhi	b768 <MyGame_Example_Monster_parse_json_table+0x1628>
    b158:	lsr	r3, r1, #16
    b15c:	mov	r4, #0
    b160:	mov	r2, #0
    b164:	str	r4, [sp, #128]	; 0x80
    b168:	str	r3, [sp, #132]	; 0x84
    b16c:	mov	r3, #0
    b170:	movt	r3, #26736	; 0x6870
    b174:	ldr	r1, [sp, #132]	; 0x84
    b178:	lsl	r1, r1, #16
    b17c:	str	r1, [sp, #132]	; 0x84
    b180:	ldrd	r0, [sp, #128]	; 0x80
    b184:	cmp	r1, r3
    b188:	cmpeq	r0, r2
    b18c:	bne	cb74 <MyGame_Example_Monster_parse_json_table+0x2a34>
    b190:	sub	r3, r8, sl
    b194:	cmp	r3, #2
    b198:	ble	d93c <MyGame_Example_Monster_parse_json_table+0x37fc>
    b19c:	mov	r3, #2
    b1a0:	mov	r2, r8
    b1a4:	mov	r1, sl
    b1a8:	mov	r0, r9
    b1ac:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b1b0:	cmp	r0, sl
    b1b4:	mov	r5, r0
    b1b8:	beq	d93c <MyGame_Example_Monster_parse_json_table+0x37fc>
    b1bc:	add	r3, sp, #344	; 0x158
    b1c0:	mov	r1, r0
    b1c4:	mov	r2, r8
    b1c8:	mov	r0, r9
    b1cc:	strh	r4, [r3]
    b1d0:	bl	2dbc <flatcc_json_parser_int16.constprop.38>
    b1d4:	cmp	r0, r5
    b1d8:	mov	sl, r0
    b1dc:	beq	d2c0 <MyGame_Example_Monster_parse_json_table+0x3180>
    b1e0:	add	r3, sp, #344	; 0x158
    b1e4:	ldrsh	r3, [r3]
    b1e8:	cmp	r3, #100	; 0x64
    b1ec:	bne	b1fc <MyGame_Example_Monster_parse_json_table+0x10bc>
    b1f0:	ldr	r3, [r9, #8]
    b1f4:	tst	r3, #2
    b1f8:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b1fc:	mov	r3, #2
    b200:	ldr	r0, [r9]
    b204:	mov	r2, r3
    b208:	mov	r1, r3
    b20c:	bl	0 <flatcc_builder_table_add>
    b210:	cmp	r0, #0
    b214:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b218:	add	r3, sp, #344	; 0x158
    b21c:	ldrsh	r3, [r3]
    b220:	strh	r3, [r0]
    b224:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b228:	mov	r1, sl
    b22c:	mov	r2, r8
    b230:	mov	r0, r9
    b234:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b238:	mov	sl, r0
    b23c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b240:	add	sl, sl, #8
    b244:	mov	r1, r8
    b248:	mov	r0, sl
    b24c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b250:	add	r3, pc, #648	; 0x288
    b254:	ldrd	r2, [r3]
    b258:	cmp	r1, r3
    b25c:	cmpeq	r0, r2
    b260:	bhi	bb14 <MyGame_Example_Monster_parse_json_table+0x19d4>
    b264:	add	r3, pc, #636	; 0x27c
    b268:	ldrd	r2, [r3]
    b26c:	cmp	r1, r3
    b270:	cmpeq	r0, r2
    b274:	bne	ce94 <MyGame_Example_Monster_parse_json_table+0x2d54>
    b278:	sub	r3, r8, sl
    b27c:	cmp	r3, #8
    b280:	ble	d12c <MyGame_Example_Monster_parse_json_table+0x2fec>
    b284:	mov	r3, #8
    b288:	mov	r2, r8
    b28c:	mov	r1, sl
    b290:	mov	r0, r9
    b294:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b298:	cmp	sl, r0
    b29c:	mov	r4, r0
    b2a0:	beq	d12c <MyGame_Example_Monster_parse_json_table+0x2fec>
    b2a4:	mov	ip, #0
    b2a8:	mov	r1, r0
    b2ac:	add	r3, sp, #344	; 0x158
    b2b0:	mov	r2, r8
    b2b4:	mov	r0, r9
    b2b8:	str	ip, [sp, #344]	; 0x158
    b2bc:	bl	2cd8 <flatcc_json_parser_int32.constprop.39>
    b2c0:	cmp	r0, r4
    b2c4:	mov	sl, r0
    b2c8:	beq	e198 <MyGame_Example_Monster_parse_json_table+0x4058>
    b2cc:	ldr	r3, [sp, #344]	; 0x158
    b2d0:	cmp	r3, #0
    b2d4:	bne	b2e4 <MyGame_Example_Monster_parse_json_table+0x11a4>
    b2d8:	ldr	r3, [r9, #8]
    b2dc:	tst	r3, #2
    b2e0:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b2e4:	mov	r3, #4
    b2e8:	mov	r1, #16
    b2ec:	ldr	r0, [r9]
    b2f0:	mov	r2, r3
    b2f4:	bl	0 <flatcc_builder_table_add>
    b2f8:	cmp	r0, #0
    b2fc:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    b300:	ldr	r3, [sp, #344]	; 0x158
    b304:	str	r3, [r0]
    b308:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b30c:	cmp	fp, #5
    b310:	ble	bf00 <MyGame_Example_Monster_parse_json_table+0x1dc0>
    b314:	mov	r3, #5
    b318:	mov	r2, r8
    b31c:	mov	r1, sl
    b320:	mov	r0, r9
    b324:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b328:	cmp	r0, sl
    b32c:	mov	r4, r0
    b330:	beq	bf00 <MyGame_Example_Monster_parse_json_table+0x1dc0>
    b334:	mvn	r3, #-1073741824	; 0xc0000000
    b338:	mov	r2, #2
    b33c:	ldr	r0, [r9]
    b340:	mov	r1, #4
    b344:	bl	0 <flatcc_builder_start_vector>
    b348:	cmp	r0, #0
    b34c:	bne	e210 <MyGame_Example_Monster_parse_json_table+0x40d0>
    b350:	add	r3, sp, #320	; 0x140
    b354:	mov	r1, r4
    b358:	mov	r2, r8
    b35c:	mov	r0, r9
    b360:	bl	3b94 <flatcc_json_parser_array_start>
    b364:	ldr	r3, [sp, #320]	; 0x140
    b368:	mov	sl, r0
    b36c:	cmp	r3, #0
    b370:	bne	b3a0 <MyGame_Example_Monster_parse_json_table+0x1260>
    b374:	b	d5bc <MyGame_Example_Monster_parse_json_table+0x347c>
    b378:	bl	6190 <MyGame_Example_Test_parse_json_struct_inline>
    b37c:	mov	r1, r0
    b380:	add	r3, sp, #320	; 0x140
    b384:	mov	r2, r8
    b388:	mov	r0, r9
    b38c:	bl	5e0c <flatcc_json_parser_array_end>
    b390:	ldr	r3, [sp, #320]	; 0x140
    b394:	mov	sl, r0
    b398:	cmp	r3, #0
    b39c:	beq	d5bc <MyGame_Example_Monster_parse_json_table+0x347c>
    b3a0:	mov	r1, #1
    b3a4:	ldr	r0, [r9]
    b3a8:	bl	0 <flatcc_builder_extend_vector>
    b3ac:	subs	r3, r0, #0
    b3b0:	mov	r1, sl
    b3b4:	mov	r2, r8
    b3b8:	mov	r0, r9
    b3bc:	bne	b378 <MyGame_Example_Monster_parse_json_table+0x1238>
    b3c0:	mov	fp, r9
    b3c4:	mov	r9, r8
    b3c8:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    b3cc:	add	r3, pc, #284	; 0x11c
    b3d0:	ldrd	r2, [r3]
    b3d4:	cmp	r1, r3
    b3d8:	cmpeq	r0, r2
    b3dc:	beq	bf30 <MyGame_Example_Monster_parse_json_table+0x1df0>
    b3e0:	add	r3, pc, #272	; 0x110
    b3e4:	ldrd	r2, [r3]
    b3e8:	cmp	r1, r3
    b3ec:	cmpeq	r0, r2
    b3f0:	bne	cbd4 <MyGame_Example_Monster_parse_json_table+0x2a94>
    b3f4:	mov	r3, #0
    b3f8:	add	r4, sl, #16
    b3fc:	mov	r1, r8
    b400:	mov	r0, r4
    b404:	str	r3, [sp, #208]	; 0xd0
    b408:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b40c:	and	r3, r1, #-16777216	; 0xff000000
    b410:	str	r3, [sp, #212]	; 0xd4
    b414:	ldrd	r2, [sp, #208]	; 0xd0
    b418:	cmp	r3, #1929379840	; 0x73000000
    b41c:	cmpeq	r2, #0
    b420:	bne	cf54 <MyGame_Example_Monster_parse_json_table+0x2e14>
    b424:	sub	r3, r8, r4
    b428:	cmp	r3, #1
    b42c:	ble	dda8 <MyGame_Example_Monster_parse_json_table+0x3c68>
    b430:	mov	r3, #1
    b434:	mov	r2, r8
    b438:	mov	r1, r4
    b43c:	mov	r0, r9
    b440:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b444:	cmp	r4, r0
    b448:	mov	sl, r0
    b44c:	bne	ddc8 <MyGame_Example_Monster_parse_json_table+0x3c88>
    b450:	mov	r1, sl
    b454:	mov	r2, r8
    b458:	mov	r0, r9
    b45c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b460:	mov	sl, r0
    b464:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b468:	sub	r3, r8, sl
    b46c:	cmp	r3, #5
    b470:	ble	bf18 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    b474:	mov	r1, sl
    b478:	mov	r3, #5
    b47c:	mov	r2, r8
    b480:	mov	r0, r9
    b484:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b488:	cmp	r0, sl
    b48c:	mov	r1, r0
    b490:	beq	bf18 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    b494:	add	r3, sp, #324	; 0x144
    b498:	mov	r2, r8
    b49c:	mov	r0, r9
    b4a0:	bl	a140 <MyGame_Example_Monster_parse_json_table>
    b4a4:	ldr	r3, [sp, #324]	; 0x144
    b4a8:	mov	sl, r0
    b4ac:	cmp	r3, #0
    b4b0:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b4b4:	mov	r1, #12
    b4b8:	ldr	r0, [r9]
    b4bc:	bl	0 <flatcc_builder_table_add_offset>
    b4c0:	cmp	r0, #0
    b4c4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b4c8:	ldr	r3, [sp, #324]	; 0x144
    b4cc:	str	r3, [r0]
    b4d0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b4d4:	nop	{0}
    b4d8:	.word	0x6e746f71
    b4dc:	.word	0x696e7665
    b4e0:	.word	0x666e7630
    b4e4:	.word	0x7336345f
    b4e8:	.word	0x666e7631
    b4ec:	.word	0x7333325f
    b4f0:	.word	0x7472696e
    b4f4:	.word	0x796f6673
    b4f8:	.word	0x61626c65
    b4fc:	.word	0x796f6674
    b500:	.word	0x6f725f6f
    b504:	.word	0x76656374
    b508:	.word	0x75626c65
    b50c:	.word	0x665f646f
    b510:	.word	0x6e677300
    b514:	.word	0x665f6c6f
    b518:	.word	0x00000288
    b51c:	sub	r3, pc, #36	; 0x24
    b520:	ldrd	r2, [r3]
    b524:	ldrd	r0, [sp, #16]
    b528:	cmp	r1, r3
    b52c:	cmpeq	r0, r2
    b530:	bne	bed0 <MyGame_Example_Monster_parse_json_table+0x1d90>
    b534:	add	r4, sl, #8
    b538:	mov	r1, r8
    b53c:	mov	r0, r4
    b540:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b544:	sub	r3, pc, #68	; 0x44
    b548:	ldrd	r2, [r3]
    b54c:	cmp	r1, r3
    b550:	cmpeq	r0, r2
    b554:	beq	d6e4 <MyGame_Example_Monster_parse_json_table+0x35a4>
    b558:	bic	ip, r0, #255	; 0xff
    b55c:	sub	r3, pc, #84	; 0x54
    b560:	ldrd	r2, [r3]
    b564:	str	ip, [sp, #216]	; 0xd8
    b568:	str	r1, [sp, #220]	; 0xdc
    b56c:	ldrd	r0, [sp, #216]	; 0xd8
    b570:	cmp	r1, r3
    b574:	cmpeq	r0, r2
    b578:	bne	cf6c <MyGame_Example_Monster_parse_json_table+0x2e2c>
    b57c:	sub	r3, r8, r4
    b580:	cmp	r3, #7
    b584:	ble	da48 <MyGame_Example_Monster_parse_json_table+0x3908>
    b588:	mov	r3, #7
    b58c:	mov	r2, r8
    b590:	mov	r1, r4
    b594:	mov	r0, r9
    b598:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b59c:	cmp	r4, r0
    b5a0:	mov	sl, r0
    b5a4:	beq	da44 <MyGame_Example_Monster_parse_json_table+0x3904>
    b5a8:	mov	r2, #8
    b5ac:	mvn	r3, #-536870912	; 0xe0000000
    b5b0:	ldr	r0, [r9]
    b5b4:	mov	r1, r2
    b5b8:	bl	0 <flatcc_builder_start_vector>
    b5bc:	cmp	r0, #0
    b5c0:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b5c4:	mov	r1, sl
    b5c8:	add	r3, sp, #320	; 0x140
    b5cc:	mov	r2, r8
    b5d0:	mov	r0, r9
    b5d4:	bl	3b94 <flatcc_json_parser_array_start>
    b5d8:	ldr	r3, [sp, #320]	; 0x140
    b5dc:	mov	sl, r0
    b5e0:	cmp	r3, #0
    b5e4:	beq	e0c4 <MyGame_Example_Monster_parse_json_table+0x3f84>
    b5e8:	ldr	r5, [pc, #-216]	; b518 <MyGame_Example_Monster_parse_json_table+0x13d8>
    b5ec:	b	b620 <MyGame_Example_Monster_parse_json_table+0x14e0>
    b5f0:	add	r3, sp, #344	; 0x158
    b5f4:	mov	r1, r0
    b5f8:	ldrd	sl, [r3]
    b5fc:	mov	r2, r8
    b600:	add	r3, sp, #320	; 0x140
    b604:	mov	r0, r9
    b608:	strd	sl, [r4]
    b60c:	bl	5e0c <flatcc_json_parser_array_end>
    b610:	ldr	r3, [sp, #320]	; 0x140
    b614:	mov	sl, r0
    b618:	cmp	r3, #0
    b61c:	beq	e0c4 <MyGame_Example_Monster_parse_json_table+0x3f84>
    b620:	mov	r2, #0
    b624:	mov	r3, #0
    b628:	ldr	r0, [r9]
    b62c:	add	ip, sp, #344	; 0x158
    b630:	mov	r1, #1
    b634:	strd	r2, [ip]
    b638:	bl	0 <flatcc_builder_extend_vector>
    b63c:	subs	r4, r0, #0
    b640:	mov	r1, sl
    b644:	add	r3, sp, #344	; 0x158
    b648:	mov	r2, r8
    b64c:	mov	r0, r9
    b650:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b654:	bl	286c <flatcc_json_parser_int64>
    b658:	cmp	r0, sl
    b65c:	bne	b5f0 <MyGame_Example_Monster_parse_json_table+0x14b0>
    b660:	add	r1, sp, #344	; 0x158
    b664:	mov	r3, r5
    b668:	mov	r2, r8
    b66c:	mov	r0, r9
    b670:	str	r1, [sp]
    b674:	mov	r1, sl
    b678:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    b67c:	cmp	r8, r0
    b680:	cmpne	r0, sl
    b684:	bne	b5f0 <MyGame_Example_Monster_parse_json_table+0x14b0>
    b688:	mov	fp, r9
    b68c:	mov	sl, r0
    b690:	mov	r9, r8
    b694:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    b698:	ldrd	r4, [sp, #16]
    b69c:	lsr	r3, r4, #16
    b6a0:	str	r3, [sp, #72]	; 0x48
    b6a4:	ldr	r1, [sp, #72]	; 0x48
    b6a8:	str	r5, [sp, #76]	; 0x4c
    b6ac:	add	r3, pc, #740	; 0x2e4
    b6b0:	ldrd	r2, [r3]
    b6b4:	lsl	r1, r1, #16
    b6b8:	str	r1, [sp, #72]	; 0x48
    b6bc:	sub	r1, r8, sl
    b6c0:	ldrd	r4, [sp, #72]	; 0x48
    b6c4:	cmp	r5, r3
    b6c8:	cmpeq	r4, r2
    b6cc:	beq	c074 <MyGame_Example_Monster_parse_json_table+0x1f34>
    b6d0:	cmp	r1, #5
    b6d4:	ble	d608 <MyGame_Example_Monster_parse_json_table+0x34c8>
    b6d8:	mov	r3, #5
    b6dc:	mov	r2, r8
    b6e0:	mov	r1, sl
    b6e4:	mov	r0, r9
    b6e8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b6ec:	cmp	r0, sl
    b6f0:	mov	r4, r0
    b6f4:	beq	d608 <MyGame_Example_Monster_parse_json_table+0x34c8>
    b6f8:	mov	ip, #0
    b6fc:	mov	r1, r0
    b700:	mov	r2, r8
    b704:	add	r3, sp, #344	; 0x158
    b708:	mov	r0, r9
    b70c:	str	ip, [sp, #344]	; 0x158
    b710:	bl	0 <flatcc_json_parser_float>
    b714:	cmp	r0, r4
    b718:	mov	sl, r0
    b71c:	beq	db08 <MyGame_Example_Monster_parse_json_table+0x39c8>
    b720:	vldr	s15, [pc, #664]	; b9c0 <MyGame_Example_Monster_parse_json_table+0x1880>
    b724:	vldr	s14, [sp, #344]	; 0x158
    b728:	vcmp.f32	s14, s15
    b72c:	vmrs	APSR_nzcv, fpscr
    b730:	bne	b740 <MyGame_Example_Monster_parse_json_table+0x1600>
    b734:	ldr	r3, [r9, #8]
    b738:	tst	r3, #2
    b73c:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b740:	mov	r3, #4
    b744:	mov	r1, #25
    b748:	ldr	r0, [r9]
    b74c:	mov	r2, r3
    b750:	bl	0 <flatcc_builder_table_add>
    b754:	cmp	r0, #0
    b758:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b75c:	ldr	r3, [sp, #344]	; 0x158
    b760:	str	r3, [r0]
    b764:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b768:	add	r3, pc, #560	; 0x230
    b76c:	ldrd	r2, [r3]
    b770:	ldrd	r0, [sp, #16]
    b774:	cmp	r1, r3
    b778:	cmpeq	r0, r2
    b77c:	beq	cd40 <MyGame_Example_Monster_parse_json_table+0x2c00>
    b780:	ldr	r1, [sp, #20]
    b784:	mov	r4, #0
    b788:	str	r4, [sp, #184]	; 0xb8
    b78c:	add	r3, pc, #532	; 0x214
    b790:	ldrd	r2, [r3]
    b794:	str	r1, [sp, #188]	; 0xbc
    b798:	ldrd	r0, [sp, #184]	; 0xb8
    b79c:	cmp	r1, r3
    b7a0:	cmpeq	r0, r2
    b7a4:	bne	d5a4 <MyGame_Example_Monster_parse_json_table+0x3464>
    b7a8:	sub	r3, r8, sl
    b7ac:	cmp	r3, #4
    b7b0:	ble	d210 <MyGame_Example_Monster_parse_json_table+0x30d0>
    b7b4:	mov	r3, #4
    b7b8:	mov	r2, r8
    b7bc:	mov	r1, sl
    b7c0:	mov	r0, r9
    b7c4:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b7c8:	cmp	r0, sl
    b7cc:	mov	r5, r0
    b7d0:	beq	d210 <MyGame_Example_Monster_parse_json_table+0x30d0>
    b7d4:	add	fp, sp, #344	; 0x158
    b7d8:	mov	r1, r0
    b7dc:	mov	r2, r8
    b7e0:	mov	r3, fp
    b7e4:	mov	r0, r9
    b7e8:	strh	r4, [fp]
    b7ec:	bl	2dbc <flatcc_json_parser_int16.constprop.38>
    b7f0:	cmp	r5, r0
    b7f4:	mov	sl, r0
    b7f8:	beq	e0f8 <MyGame_Example_Monster_parse_json_table+0x3fb8>
    b7fc:	add	r3, sp, #344	; 0x158
    b800:	ldrsh	r3, [r3]
    b804:	cmp	r3, #150	; 0x96
    b808:	bne	b818 <MyGame_Example_Monster_parse_json_table+0x16d8>
    b80c:	ldr	r3, [r9, #8]
    b810:	tst	r3, #2
    b814:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b818:	mov	r3, #2
    b81c:	mov	r1, #1
    b820:	ldr	r0, [r9]
    b824:	mov	r2, r3
    b828:	bl	0 <flatcc_builder_table_add>
    b82c:	cmp	r0, #0
    b830:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b834:	add	r3, sp, #344	; 0x158
    b838:	ldrsh	r3, [r3]
    b83c:	strh	r3, [r0]
    b840:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b844:	mov	r1, sl
    b848:	mov	r2, r8
    b84c:	mov	r0, r9
    b850:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b854:	mov	sl, r0
    b858:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b85c:	mov	r1, sl
    b860:	mov	r2, r8
    b864:	mov	r0, r9
    b868:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b86c:	mov	sl, r0
    b870:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b874:	mov	r1, sl
    b878:	mov	r2, r8
    b87c:	mov	r0, r9
    b880:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b884:	mov	sl, r0
    b888:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b88c:	add	r3, pc, #284	; 0x11c
    b890:	ldrd	r2, [r3]
    b894:	cmp	r1, r3
    b898:	cmpeq	r0, r2
    b89c:	bne	cb5c <MyGame_Example_Monster_parse_json_table+0x2a1c>
    b8a0:	add	r4, sl, #16
    b8a4:	mov	r1, r8
    b8a8:	mov	r0, r4
    b8ac:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b8b0:	bic	r0, r0, #255	; 0xff
    b8b4:	add	r3, pc, #252	; 0xfc
    b8b8:	ldrd	r2, [r3]
    b8bc:	strd	r0, [sp, #200]	; 0xc8
    b8c0:	ldrd	r0, [sp, #200]	; 0xc8
    b8c4:	cmp	r1, r3
    b8c8:	cmpeq	r0, r2
    b8cc:	bne	cf0c <MyGame_Example_Monster_parse_json_table+0x2dcc>
    b8d0:	sub	r3, r8, r4
    b8d4:	cmp	r3, #7
    b8d8:	ble	d970 <MyGame_Example_Monster_parse_json_table+0x3830>
    b8dc:	mov	r3, #7
    b8e0:	mov	r2, r8
    b8e4:	mov	r1, r4
    b8e8:	mov	r0, r9
    b8ec:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b8f0:	cmp	r4, r0
    b8f4:	mov	sl, r0
    b8f8:	beq	d96c <MyGame_Example_Monster_parse_json_table+0x382c>
    b8fc:	mvn	r3, #-536870912	; 0xe0000000
    b900:	mov	r2, #4
    b904:	ldr	r0, [r9]
    b908:	mov	r1, #8
    b90c:	bl	0 <flatcc_builder_start_vector>
    b910:	cmp	r0, #0
    b914:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    b918:	mov	r1, sl
    b91c:	add	r3, sp, #320	; 0x140
    b920:	mov	r2, r8
    b924:	mov	r0, r9
    b928:	bl	3b94 <flatcc_json_parser_array_start>
    b92c:	ldr	r3, [sp, #320]	; 0x140
    b930:	mov	sl, r0
    b934:	cmp	r3, #0
    b938:	beq	d400 <MyGame_Example_Monster_parse_json_table+0x32c0>
    b93c:	add	r3, sp, #288	; 0x120
    b940:	mov	r4, r0
    b944:	strd	r6, [sp, #120]	; 0x78
    b948:	ldrd	sl, [r3]
    b94c:	mov	r1, #1
    b950:	ldr	r0, [r9]
    b954:	bl	0 <flatcc_builder_extend_vector>
    b958:	subs	r3, r0, #0
    b95c:	str	r3, [sp, #16]
    b960:	beq	dec8 <MyGame_Example_Monster_parse_json_table+0x3d88>
    b964:	add	r7, sp, #340	; 0x154
    b968:	mov	r1, r4
    b96c:	mov	r3, r7
    b970:	mov	r2, r8
    b974:	mov	r0, r9
    b978:	bl	3ac0 <flatcc_json_parser_object_start>
    b97c:	ldr	r3, [sp, #340]	; 0x154
    b980:	mov	r4, r0
    b984:	cmp	r3, #0
    b988:	beq	d3cc <MyGame_Example_Monster_parse_json_table+0x328c>
    b98c:	mov	r5, #0
    b990:	b	ba58 <MyGame_Example_Monster_parse_json_table+0x1918>
    b994:	nop	{0}
    b998:	.word	0x66320000
    b99c:	.word	0x74657374
    b9a0:	.word	0x6e746f72
    b9a4:	.word	0x696e7665
    b9a8:	.word	0x00000000
    b9ac:	.word	0x6d616e61
    b9b0:	.word	0x6f727465
    b9b4:	.word	0x796f6673
    b9b8:	.word	0x75637400
    b9bc:	.word	0x64737472
    b9c0:	.word	0x489965e0
    b9c4:	add	r3, pc, #940	; 0x3ac
    b9c8:	ldrd	r2, [r3]
    b9cc:	cmp	r1, r3
    b9d0:	cmpeq	r0, r2
    b9d4:	bne	d2f0 <MyGame_Example_Monster_parse_json_table+0x31b0>
    b9d8:	sub	r3, r8, r4
    b9dc:	cmp	r3, #8
    b9e0:	ble	d2f0 <MyGame_Example_Monster_parse_json_table+0x31b0>
    b9e4:	mov	r3, #8
    b9e8:	mov	r2, r8
    b9ec:	mov	r1, r4
    b9f0:	mov	r0, r9
    b9f4:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    b9f8:	cmp	r0, r4
    b9fc:	mov	r6, r0
    ba00:	beq	d2f0 <MyGame_Example_Monster_parse_json_table+0x31b0>
    ba04:	mov	r1, r0
    ba08:	mov	r2, r8
    ba0c:	str	r5, [sp, #344]	; 0x158
    ba10:	add	r3, sp, #344	; 0x158
    ba14:	mov	r0, r9
    ba18:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    ba1c:	cmp	r6, r0
    ba20:	mov	r4, r0
    ba24:	beq	d384 <MyGame_Example_Monster_parse_json_table+0x3244>
    ba28:	ldr	r2, [sp, #16]
    ba2c:	ldr	r3, [sp, #344]	; 0x158
    ba30:	str	r3, [r2, #4]
    ba34:	mov	r1, r4
    ba38:	mov	r3, r7
    ba3c:	mov	r2, r8
    ba40:	mov	r0, r9
    ba44:	bl	5c48 <flatcc_json_parser_object_end>
    ba48:	ldr	r3, [sp, #340]	; 0x154
    ba4c:	mov	r4, r0
    ba50:	cmp	r3, #0
    ba54:	beq	d3cc <MyGame_Example_Monster_parse_json_table+0x328c>
    ba58:	cmp	r8, r4
    ba5c:	beq	ba84 <MyGame_Example_Monster_parse_json_table+0x1944>
    ba60:	ldrb	r3, [r4]
    ba64:	cmp	r3, #34	; 0x22
    ba68:	addeq	r4, r4, #1
    ba6c:	streq	r5, [r9, #12]
    ba70:	beq	ba84 <MyGame_Example_Monster_parse_json_table+0x1944>
    ba74:	cmp	r3, #46	; 0x2e
    ba78:	movne	r3, #1
    ba7c:	strne	r3, [r9, #12]
    ba80:	beq	d338 <MyGame_Example_Monster_parse_json_table+0x31f8>
    ba84:	mov	r1, r8
    ba88:	mov	r0, r4
    ba8c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ba90:	lsr	fp, r1, #16
    ba94:	mov	r3, #0
    ba98:	movt	r3, #26980	; 0x6964
    ba9c:	mov	r2, #0
    baa0:	mov	sl, r5
    baa4:	lsl	fp, fp, #16
    baa8:	cmp	fp, r3
    baac:	cmpeq	r5, r2
    bab0:	bne	b9c4 <MyGame_Example_Monster_parse_json_table+0x1884>
    bab4:	sub	r3, r8, r4
    bab8:	cmp	r3, #2
    babc:	ble	d2f0 <MyGame_Example_Monster_parse_json_table+0x31b0>
    bac0:	mov	r3, #2
    bac4:	mov	r2, r8
    bac8:	mov	r1, r4
    bacc:	mov	r0, r9
    bad0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    bad4:	cmp	r0, r4
    bad8:	mov	r6, r0
    badc:	beq	d2f0 <MyGame_Example_Monster_parse_json_table+0x31b0>
    bae0:	mov	r1, r0
    bae4:	mov	r2, r8
    bae8:	str	r5, [sp, #344]	; 0x158
    baec:	add	r3, sp, #344	; 0x158
    baf0:	mov	r0, r9
    baf4:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    baf8:	cmp	r6, r0
    bafc:	mov	r4, r0
    bb00:	beq	d354 <MyGame_Example_Monster_parse_json_table+0x3214>
    bb04:	ldr	r2, [sp, #16]
    bb08:	ldr	r3, [sp, #344]	; 0x158
    bb0c:	str	r3, [r2]
    bb10:	b	ba34 <MyGame_Example_Monster_parse_json_table+0x18f4>
    bb14:	add	r3, pc, #612	; 0x264
    bb18:	ldrd	r2, [r3]
    bb1c:	cmp	r1, r3
    bb20:	cmpeq	r0, r2
    bb24:	bhi	cc74 <MyGame_Example_Monster_parse_json_table+0x2b34>
    bb28:	add	r3, pc, #600	; 0x258
    bb2c:	ldrd	r2, [r3]
    bb30:	cmp	r1, r3
    bb34:	cmpeq	r0, r2
    bb38:	bne	cfcc <MyGame_Example_Monster_parse_json_table+0x2e8c>
    bb3c:	sub	r3, r8, sl
    bb40:	cmp	r3, #8
    bb44:	ble	dca0 <MyGame_Example_Monster_parse_json_table+0x3b60>
    bb48:	mov	r1, sl
    bb4c:	mov	r3, #8
    bb50:	mov	r2, r8
    bb54:	mov	r0, r9
    bb58:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    bb5c:	cmp	sl, r0
    bb60:	mov	r1, r0
    bb64:	beq	dca0 <MyGame_Example_Monster_parse_json_table+0x3b60>
    bb68:	add	fp, sp, #344	; 0x158
    bb6c:	mov	r4, #0
    bb70:	str	r1, [sp, #16]
    bb74:	mov	r5, #0
    bb78:	mov	r3, fp
    bb7c:	mov	r2, r8
    bb80:	mov	r0, r9
    bb84:	strd	r4, [fp]
    bb88:	bl	286c <flatcc_json_parser_int64>
    bb8c:	ldr	r1, [sp, #16]
    bb90:	mov	sl, r0
    bb94:	cmp	r0, r1
    bb98:	beq	e38c <MyGame_Example_Monster_parse_json_table+0x424c>
    bb9c:	add	r3, sp, #344	; 0x158
    bba0:	ldrd	r2, [r3]
    bba4:	orrs	r3, r2, r3
    bba8:	bne	bbb8 <MyGame_Example_Monster_parse_json_table+0x1a78>
    bbac:	ldr	r3, [r9, #8]
    bbb0:	tst	r3, #2
    bbb4:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bbb8:	mov	r3, #8
    bbbc:	mov	r1, #18
    bbc0:	ldr	r0, [r9]
    bbc4:	mov	r2, r3
    bbc8:	bl	0 <flatcc_builder_table_add>
    bbcc:	cmp	r0, #0
    bbd0:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    bbd4:	add	r3, sp, #344	; 0x158
    bbd8:	ldrd	r2, [r3]
    bbdc:	strd	r2, [r0]
    bbe0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bbe4:	ldrb	r2, [fp, #7]
    bbe8:	mov	r3, #0
    bbec:	mov	lr, r3
    bbf0:	ldrb	r0, [fp, #6]
    bbf4:	orr	r1, r2, r0, lsl #8
    bbf8:	ldrb	r2, [fp, #5]
    bbfc:	mov	r0, lr
    bc00:	orr	r1, r1, r2, lsl #16
    bc04:	ldrb	r2, [fp, #4]
    bc08:	mov	lr, r0
    bc0c:	orr	r2, r1, r2, lsl #24
    bc10:	ldrb	r0, [fp, #3]
    bc14:	orr	r3, lr, r0
    bc18:	ldrb	r0, [fp, #2]
    bc1c:	orr	r3, r3, r0, lsl #8
    bc20:	ldrb	r0, [fp, #1]
    bc24:	mov	r6, r2
    bc28:	ldrb	r2, [fp]
    bc2c:	orr	r0, r3, r0, lsl #16
    bc30:	orr	r7, r0, r2, lsl #24
    bc34:	cmp	r7, r5
    bc38:	cmpeq	r6, r4
    bc3c:	bls	c1bc <MyGame_Example_Monster_parse_json_table+0x207c>
    bc40:	mvn	r3, #-2013265920	; 0x88000000
    bc44:	mvn	r2, #0
    bc48:	cmp	r7, r3
    bc4c:	cmpeq	r6, r2
    bc50:	bhi	c2fc <MyGame_Example_Monster_parse_json_table+0x21bc>
    bc54:	and	r3, r6, #-16777216	; 0xff000000
    bc58:	add	r1, pc, #304	; 0x130
    bc5c:	ldrd	r0, [r1]
    bc60:	str	r3, [sp, #32]
    bc64:	str	r7, [sp, #36]	; 0x24
    bc68:	ldrd	r2, [sp, #32]
    bc6c:	cmp	r3, r1
    bc70:	cmpeq	r2, r0
    bc74:	bne	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    bc78:	cmp	ip, #5
    bc7c:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    bc80:	mov	r1, fp
    bc84:	mov	r3, #5
    bc88:	mov	r2, r8
    bc8c:	mov	r0, r9
    bc90:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    bc94:	cmp	r0, fp
    bc98:	mov	r1, r0
    bc9c:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    bca0:	ldr	r3, [sp, #16]
    bca4:	mov	r2, r8
    bca8:	mov	r0, r9
    bcac:	add	r3, r3, #26
    bcb0:	bl	6190 <MyGame_Example_Test_parse_json_struct_inline>
    bcb4:	mov	sl, r0
    bcb8:	sub	r3, r8, sl
    bcbc:	cmp	r3, #1
    bcc0:	ble	bcd4 <MyGame_Example_Monster_parse_json_table+0x1b94>
    bcc4:	ldrb	r3, [sl]
    bcc8:	cmp	r3, #32
    bccc:	bhi	bce8 <MyGame_Example_Monster_parse_json_table+0x1ba8>
    bcd0:	beq	c3a4 <MyGame_Example_Monster_parse_json_table+0x2264>
    bcd4:	mov	r1, sl
    bcd8:	mov	r2, r8
    bcdc:	mov	r0, r9
    bce0:	bl	0 <flatcc_json_parser_space_ext>
    bce4:	mov	sl, r0
    bce8:	cmp	r8, sl
    bcec:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bcf0:	ldrb	r3, [sl]
    bcf4:	cmp	r3, #44	; 0x2c
    bcf8:	beq	c3b8 <MyGame_Example_Monster_parse_json_table+0x2278>
    bcfc:	mov	r3, #0
    bd00:	str	r3, [sp, #336]	; 0x150
    bd04:	ldrb	r3, [sl]
    bd08:	cmp	r3, #125	; 0x7d
    bd0c:	beq	c36c <MyGame_Example_Monster_parse_json_table+0x222c>
    bd10:	mov	r3, #10
    bd14:	mov	r1, sl
    bd18:	mov	r2, r8
    bd1c:	mov	r0, r9
    bd20:	bl	0 <flatcc_json_parser_set_error>
    bd24:	mov	fp, r0
    bd28:	ldr	r3, [sp, #336]	; 0x150
    bd2c:	b	b06c <MyGame_Example_Monster_parse_json_table+0xf2c>
    bd30:	mov	r2, #0
    bd34:	mov	r3, #0
    bd38:	b	bbec <MyGame_Example_Monster_parse_json_table+0x1aac>
    bd3c:	mov	r1, #0
    bd40:	mov	lr, r1
    bd44:	b	bbf8 <MyGame_Example_Monster_parse_json_table+0x1ab8>
    bd48:	mov	r2, #0
    bd4c:	mov	r3, r2
    bd50:	b	bc18 <MyGame_Example_Monster_parse_json_table+0x1ad8>
    bd54:	mov	r2, #0
    bd58:	mov	r3, r2
    bd5c:	b	bc20 <MyGame_Example_Monster_parse_json_table+0x1ae0>
    bd60:	mov	r1, #0
    bd64:	mov	r0, r1
    bd68:	b	bc04 <MyGame_Example_Monster_parse_json_table+0x1ac4>
    bd6c:	mov	r2, #0
    bd70:	mov	lr, r2
    bd74:	b	bc10 <MyGame_Example_Monster_parse_json_table+0x1ad0>
    bd78:	.word	0x616e6365
    bd7c:	.word	0x64697374
    bd80:	.word	0x666e7630
    bd84:	.word	0x7533325f
    bd88:	.word	0x666e7631
    bd8c:	.word	0x7336345f
    bd90:	.word	0x33000000
    bd94:	.word	0x74657374
    bd98:	.word	0x31000000
    bd9c:	.word	0x74657374
    bda0:	.word	0x000001c8
    bda4:	.word	0x40400000
    bda8:	ldrb	r2, [fp]
    bdac:	mov	r6, #0
    bdb0:	lsl	r7, r2, #24
    bdb4:	cmp	r7, r5
    bdb8:	cmpeq	r6, r4
    bdbc:	bhi	bc40 <MyGame_Example_Monster_parse_json_table+0x1b00>
    bdc0:	sub	r3, pc, #48	; 0x30
    bdc4:	ldrd	r2, [r3]
    bdc8:	cmp	r7, r3
    bdcc:	cmpeq	r6, r2
    bdd0:	bne	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    bdd4:	cmp	ip, #5
    bdd8:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    bddc:	ldr	r2, [r9, #12]
    bde0:	ldrb	r3, [fp, #5]
    bde4:	cmp	r2, #0
    bde8:	beq	c5cc <MyGame_Example_Monster_parse_json_table+0x248c>
    bdec:	cmp	r3, #58	; 0x3a
    bdf0:	cmpne	r3, #32
    bdf4:	movhi	r3, #1
    bdf8:	movls	r3, #0
    bdfc:	bhi	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    be00:	add	r1, fp, #5
    be04:	str	r3, [r9, #12]
    be08:	sub	r3, r8, r1
    be0c:	cmp	r3, #1
    be10:	ble	be24 <MyGame_Example_Monster_parse_json_table+0x1ce4>
    be14:	ldrb	r3, [r1]
    be18:	cmp	r3, #32
    be1c:	bhi	be34 <MyGame_Example_Monster_parse_json_table+0x1cf4>
    be20:	beq	d820 <MyGame_Example_Monster_parse_json_table+0x36e0>
    be24:	mov	r2, r8
    be28:	mov	r0, r9
    be2c:	bl	0 <flatcc_json_parser_space_ext>
    be30:	mov	r1, r0
    be34:	cmp	r8, r1
    be38:	beq	be48 <MyGame_Example_Monster_parse_json_table+0x1d08>
    be3c:	ldrb	r3, [r1]
    be40:	cmp	r3, #58	; 0x3a
    be44:	beq	d9fc <MyGame_Example_Monster_parse_json_table+0x38bc>
    be48:	mov	r3, #4
    be4c:	mov	r2, r8
    be50:	mov	r0, r9
    be54:	bl	0 <flatcc_json_parser_set_error>
    be58:	mov	r3, r0
    be5c:	cmp	r3, fp
    be60:	mov	r1, r3
    be64:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    be68:	mov	r2, r8
    be6c:	add	r3, sp, #344	; 0x158
    be70:	vstr	d9, [sp, #344]	; 0x158
    be74:	mov	r0, r9
    be78:	mov	fp, r1
    be7c:	bl	0 <flatcc_json_parser_double>
    be80:	cmp	fp, r0
    be84:	mov	sl, r0
    be88:	beq	cb8c <MyGame_Example_Monster_parse_json_table+0x2a4c>
    be8c:	ldr	r1, [sp, #16]
    be90:	add	r3, sp, #344	; 0x158
    be94:	ldrd	r2, [r3]
    be98:	strd	r2, [r1, #16]
    be9c:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    bea0:	mov	r1, sl
    bea4:	mov	r2, r8
    bea8:	mov	r0, r9
    beac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    beb0:	mov	sl, r0
    beb4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    beb8:	mov	r1, sl
    bebc:	mov	r2, r8
    bec0:	mov	r0, r9
    bec4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bec8:	mov	sl, r0
    becc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bed0:	mov	r1, sl
    bed4:	mov	r2, r8
    bed8:	mov	r0, r9
    bedc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bee0:	mov	sl, r0
    bee4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bee8:	mov	r1, sl
    beec:	mov	r2, r8
    bef0:	mov	r0, r9
    bef4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bef8:	mov	sl, r0
    befc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf00:	mov	r1, sl
    bf04:	mov	r2, r8
    bf08:	mov	r0, r9
    bf0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf10:	mov	sl, r0
    bf14:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf18:	mov	r1, sl
    bf1c:	mov	r2, r8
    bf20:	mov	r0, r9
    bf24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf28:	mov	sl, r0
    bf2c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf30:	add	r4, sl, #16
    bf34:	mov	r1, r8
    bf38:	mov	r0, r4
    bf3c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    bf40:	lsr	ip, r1, #16
    bf44:	mov	r0, #0
    bf48:	mov	r3, #0
    bf4c:	movt	r3, #26418	; 0x6732
    bf50:	mov	r2, #0
    bf54:	lsl	ip, ip, #16
    bf58:	str	r0, [sp, #168]	; 0xa8
    bf5c:	str	ip, [sp, #172]	; 0xac
    bf60:	ldrd	sl, [sp, #168]	; 0xa8
    bf64:	cmp	fp, r3
    bf68:	cmpeq	sl, r2
    bf6c:	beq	cfe4 <MyGame_Example_Monster_parse_json_table+0x2ea4>
    bf70:	and	r3, r1, #-16777216	; 0xff000000
    bf74:	str	r0, [sp, #248]	; 0xf8
    bf78:	str	r3, [sp, #252]	; 0xfc
    bf7c:	ldrd	r2, [sp, #248]	; 0xf8
    bf80:	cmp	r3, #1728053248	; 0x67000000
    bf84:	cmpeq	r2, #0
    bf88:	bne	d954 <MyGame_Example_Monster_parse_json_table+0x3814>
    bf8c:	sub	r3, r8, r4
    bf90:	cmp	r3, #1
    bf94:	ble	dc3c <MyGame_Example_Monster_parse_json_table+0x3afc>
    bf98:	mov	r3, #1
    bf9c:	mov	r2, r8
    bfa0:	mov	r1, r4
    bfa4:	mov	r0, r9
    bfa8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    bfac:	cmp	r4, r0
    bfb0:	mov	sl, r0
    bfb4:	beq	dc38 <MyGame_Example_Monster_parse_json_table+0x3af8>
    bfb8:	ldr	r0, [r9]
    bfbc:	bl	0 <flatcc_builder_start_offset_vector>
    bfc0:	cmp	r0, #0
    bfc4:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    bfc8:	mov	r1, sl
    bfcc:	add	r3, sp, #320	; 0x140
    bfd0:	mov	r2, r8
    bfd4:	mov	r0, r9
    bfd8:	bl	3b94 <flatcc_json_parser_array_start>
    bfdc:	ldr	r3, [sp, #320]	; 0x140
    bfe0:	mov	sl, r0
    bfe4:	cmp	r3, #0
    bfe8:	beq	e2e8 <MyGame_Example_Monster_parse_json_table+0x41a8>
    bfec:	add	r4, sp, #324	; 0x144
    bff0:	b	c030 <MyGame_Example_Monster_parse_json_table+0x1ef0>
    bff4:	ldr	r0, [r9]
    bff8:	bl	0 <flatcc_builder_extend_offset_vector>
    bffc:	subs	ip, r0, #0
    c000:	add	r3, sp, #320	; 0x140
    c004:	mov	r2, r8
    c008:	mov	r1, sl
    c00c:	mov	r0, r9
    c010:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c014:	ldr	lr, [sp, #324]	; 0x144
    c018:	str	lr, [ip]
    c01c:	bl	5e0c <flatcc_json_parser_array_end>
    c020:	ldr	r3, [sp, #320]	; 0x140
    c024:	mov	sl, r0
    c028:	cmp	r3, #0
    c02c:	beq	e2e8 <MyGame_Example_Monster_parse_json_table+0x41a8>
    c030:	mov	r1, sl
    c034:	mov	r3, r4
    c038:	mov	r2, r8
    c03c:	mov	r0, r9
    c040:	bl	0 <flatcc_json_parser_build_string>
    c044:	ldr	r3, [sp, #324]	; 0x144
    c048:	mov	sl, r0
    c04c:	mov	r1, #1
    c050:	cmp	r3, #0
    c054:	bne	bff4 <MyGame_Example_Monster_parse_json_table+0x1eb4>
    c058:	b	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c05c:	mov	r1, sl
    c060:	mov	r2, r8
    c064:	mov	r0, r9
    c068:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c06c:	mov	sl, r0
    c070:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c074:	cmp	r1, #6
    c078:	ble	d0fc <MyGame_Example_Monster_parse_json_table+0x2fbc>
    c07c:	mov	r3, #6
    c080:	mov	r2, r8
    c084:	mov	r1, sl
    c088:	mov	r0, r9
    c08c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c090:	cmp	r0, sl
    c094:	mov	r4, r0
    c098:	beq	d0fc <MyGame_Example_Monster_parse_json_table+0x2fbc>
    c09c:	mov	ip, #0
    c0a0:	mov	r1, r0
    c0a4:	mov	r2, r8
    c0a8:	add	r3, sp, #344	; 0x158
    c0ac:	mov	r0, r9
    c0b0:	str	ip, [sp, #344]	; 0x158
    c0b4:	bl	0 <flatcc_json_parser_float>
    c0b8:	cmp	r0, r4
    c0bc:	mov	sl, r0
    c0c0:	beq	ded8 <MyGame_Example_Monster_parse_json_table+0x3d98>
    c0c4:	vldr	s15, [pc, #-808]	; bda4 <MyGame_Example_Monster_parse_json_table+0x1c64>
    c0c8:	vldr	s14, [sp, #344]	; 0x158
    c0cc:	vcmp.f32	s14, s15
    c0d0:	vmrs	APSR_nzcv, fpscr
    c0d4:	bne	c0e4 <MyGame_Example_Monster_parse_json_table+0x1fa4>
    c0d8:	ldr	r3, [r9, #8]
    c0dc:	tst	r3, #2
    c0e0:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c0e4:	mov	r3, #4
    c0e8:	mov	r1, #26
    c0ec:	ldr	r0, [r9]
    c0f0:	mov	r2, r3
    c0f4:	bl	0 <flatcc_builder_table_add>
    c0f8:	cmp	r0, #0
    c0fc:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    c100:	ldr	r3, [sp, #344]	; 0x158
    c104:	str	r3, [r0]
    c108:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c10c:	mov	r2, #0
    c110:	mov	r3, #0
    c114:	mov	fp, #0
    c118:	add	r1, sp, #344	; 0x158
    c11c:	cmp	r8, r4
    c120:	moveq	r5, r8
    c124:	strd	r2, [r1]
    c128:	str	fp, [sp, #340]	; 0x154
    c12c:	beq	c15c <MyGame_Example_Monster_parse_json_table+0x201c>
    c130:	add	r0, sp, #344	; 0x158
    c134:	add	r3, sp, #340	; 0x154
    c138:	mov	r2, r8
    c13c:	mov	r1, r4
    c140:	str	r0, [sp]
    c144:	mov	r0, r9
    c148:	bl	0 <flatcc_json_parser_integer>
    c14c:	cmp	r4, r0
    c150:	mov	r5, r0
    c154:	strbeq	fp, [sp, #336]	; 0x150
    c158:	bne	dbb8 <MyGame_Example_Monster_parse_json_table+0x3a78>
    c15c:	add	ip, sp, #336	; 0x150
    c160:	ldr	r3, [pc, #-968]	; bda0 <MyGame_Example_Monster_parse_json_table+0x1c60>
    c164:	mov	r2, r8
    c168:	mov	r1, r5
    c16c:	mov	r0, r9
    c170:	str	ip, [sp]
    c174:	bl	406c <flatcc_json_parser_symbolic_bool>
    c178:	cmp	r8, r0
    c17c:	cmpne	r0, r5
    c180:	mov	sl, r0
    c184:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c188:	ldrb	r3, [sp, #336]	; 0x150
    c18c:	cmp	r3, #1
    c190:	bne	a4a8 <MyGame_Example_Monster_parse_json_table+0x368>
    c194:	ldr	r3, [r9, #8]
    c198:	tst	r3, #2
    c19c:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c1a0:	b	a4a8 <MyGame_Example_Monster_parse_json_table+0x368>
    c1a4:	mov	r1, fp
    c1a8:	mov	r2, r8
    c1ac:	mov	r0, r9
    c1b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c1b4:	mov	sl, r0
    c1b8:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    c1bc:	and	r2, r6, #-16777216	; 0xff000000
    c1c0:	mov	r6, r2
    c1c4:	add	r3, pc, #1004	; 0x3ec
    c1c8:	ldrd	r2, [r3]
    c1cc:	cmp	r7, r3
    c1d0:	cmpeq	r6, r2
    c1d4:	bne	bdc0 <MyGame_Example_Monster_parse_json_table+0x1c80>
    c1d8:	cmp	ip, #5
    c1dc:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c1e0:	ldr	r2, [r9, #12]
    c1e4:	ldrb	r3, [fp, #5]
    c1e8:	cmp	r2, #0
    c1ec:	beq	c5a4 <MyGame_Example_Monster_parse_json_table+0x2464>
    c1f0:	cmp	r3, #58	; 0x3a
    c1f4:	cmpne	r3, #32
    c1f8:	movhi	r3, #1
    c1fc:	movls	r3, #0
    c200:	bhi	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c204:	add	r1, fp, #5
    c208:	str	r3, [r9, #12]
    c20c:	sub	r3, r8, r1
    c210:	cmp	r3, #1
    c214:	ble	c228 <MyGame_Example_Monster_parse_json_table+0x20e8>
    c218:	ldrb	r3, [r1]
    c21c:	cmp	r3, #32
    c220:	bhi	c238 <MyGame_Example_Monster_parse_json_table+0x20f8>
    c224:	beq	d6b8 <MyGame_Example_Monster_parse_json_table+0x3578>
    c228:	mov	r2, r8
    c22c:	mov	r0, r9
    c230:	bl	0 <flatcc_json_parser_space_ext>
    c234:	mov	r1, r0
    c238:	cmp	r8, r1
    c23c:	beq	c24c <MyGame_Example_Monster_parse_json_table+0x210c>
    c240:	ldrb	r3, [r1]
    c244:	cmp	r3, #58	; 0x3a
    c248:	beq	d9c0 <MyGame_Example_Monster_parse_json_table+0x3880>
    c24c:	mov	r3, #4
    c250:	mov	r2, r8
    c254:	mov	r0, r9
    c258:	bl	0 <flatcc_json_parser_set_error>
    c25c:	str	r0, [sp, #120]	; 0x78
    c260:	ldr	r2, [sp, #120]	; 0x78
    c264:	cmp	r2, fp
    c268:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c26c:	mov	r3, #0
    c270:	mov	r0, #0
    c274:	mov	r1, #0
    c278:	cmp	r8, r2
    c27c:	strb	r3, [sp, #332]	; 0x14c
    c280:	mov	fp, r2
    c284:	str	r3, [sp, #340]	; 0x154
    c288:	add	r3, sp, #344	; 0x158
    c28c:	strd	r0, [r3]
    c290:	beq	c90c <MyGame_Example_Monster_parse_json_table+0x27cc>
    c294:	mov	r0, r3
    c298:	mov	r2, r8
    c29c:	add	r3, sp, #340	; 0x154
    c2a0:	mov	r1, fp
    c2a4:	str	r0, [sp]
    c2a8:	mov	r0, r9
    c2ac:	bl	0 <flatcc_json_parser_integer>
    c2b0:	cmp	fp, r0
    c2b4:	mov	sl, r0
    c2b8:	bne	ca94 <MyGame_Example_Monster_parse_json_table+0x2954>
    c2bc:	add	ip, sp, #332	; 0x14c
    c2c0:	ldr	r3, [pc, #768]	; c5c8 <MyGame_Example_Monster_parse_json_table+0x2488>
    c2c4:	mov	r2, r8
    c2c8:	mov	r1, sl
    c2cc:	mov	r0, r9
    c2d0:	str	ip, [sp]
    c2d4:	bl	5060 <flatcc_json_parser_symbolic_int8>
    c2d8:	cmp	r8, r0
    c2dc:	cmpne	r0, sl
    c2e0:	beq	e1e4 <MyGame_Example_Monster_parse_json_table+0x40a4>
    c2e4:	add	r3, sp, #332	; 0x14c
    c2e8:	mov	sl, r0
    c2ec:	ldrsb	r2, [r3]
    c2f0:	ldr	r3, [sp, #16]
    c2f4:	strb	r2, [r3, #24]
    c2f8:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    c2fc:	mvn	r3, #-2030043136	; 0x87000000
    c300:	mvn	r2, #0
    c304:	cmp	r7, r3
    c308:	cmpeq	r6, r2
    c30c:	bhi	c40c <MyGame_Example_Monster_parse_json_table+0x22cc>
    c310:	cmp	ip, #1
    c314:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c318:	mov	r1, fp
    c31c:	mov	r3, #1
    c320:	mov	r2, r8
    c324:	mov	r0, r9
    c328:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c32c:	cmp	r0, fp
    c330:	mov	r1, r0
    c334:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c338:	mov	fp, r0
    c33c:	mov	r2, r8
    c340:	vstr	s16, [sp, #344]	; 0x158
    c344:	add	r3, sp, #344	; 0x158
    c348:	mov	r0, r9
    c34c:	bl	0 <flatcc_json_parser_float>
    c350:	cmp	fp, r0
    c354:	mov	sl, r0
    c358:	beq	d574 <MyGame_Example_Monster_parse_json_table+0x3434>
    c35c:	ldr	r2, [sp, #16]
    c360:	ldr	r3, [sp, #344]	; 0x158
    c364:	str	r3, [r2]
    c368:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    c36c:	add	r1, sl, #1
    c370:	sub	r3, r8, r1
    c374:	cmp	r3, #1
    c378:	ble	c38c <MyGame_Example_Monster_parse_json_table+0x224c>
    c37c:	ldrb	r3, [sl, #1]
    c380:	cmp	r3, #32
    c384:	bhi	c59c <MyGame_Example_Monster_parse_json_table+0x245c>
    c388:	beq	c8f8 <MyGame_Example_Monster_parse_json_table+0x27b8>
    c38c:	mov	r2, r8
    c390:	mov	r0, r9
    c394:	bl	0 <flatcc_json_parser_space_ext>
    c398:	mov	fp, r0
    c39c:	ldr	r3, [sp, #336]	; 0x150
    c3a0:	b	b06c <MyGame_Example_Monster_parse_json_table+0xf2c>
    c3a4:	ldrb	r3, [sl, #1]
    c3a8:	cmp	r3, #32
    c3ac:	addhi	sl, sl, #1
    c3b0:	bls	bcd4 <MyGame_Example_Monster_parse_json_table+0x1b94>
    c3b4:	b	bce8 <MyGame_Example_Monster_parse_json_table+0x1ba8>
    c3b8:	add	fp, sl, #1
    c3bc:	sub	r3, r8, fp
    c3c0:	cmp	r3, #1
    c3c4:	ble	c3d8 <MyGame_Example_Monster_parse_json_table+0x2298>
    c3c8:	ldrb	r3, [sl, #1]
    c3cc:	cmp	r3, #32
    c3d0:	bhi	c3ec <MyGame_Example_Monster_parse_json_table+0x22ac>
    c3d4:	beq	cae8 <MyGame_Example_Monster_parse_json_table+0x29a8>
    c3d8:	mov	r1, fp
    c3dc:	mov	r2, r8
    c3e0:	mov	r0, r9
    c3e4:	bl	0 <flatcc_json_parser_space_ext>
    c3e8:	mov	fp, r0
    c3ec:	cmp	r8, fp
    c3f0:	beq	cc34 <MyGame_Example_Monster_parse_json_table+0x2af4>
    c3f4:	ldrb	r3, [fp]
    c3f8:	cmp	r3, #125	; 0x7d
    c3fc:	beq	cc04 <MyGame_Example_Monster_parse_json_table+0x2ac4>
    c400:	mov	r3, #1
    c404:	str	r3, [sp, #336]	; 0x150
    c408:	b	b07c <MyGame_Example_Monster_parse_json_table+0xf3c>
    c40c:	mov	r3, #0
    c410:	str	r3, [sp, #56]	; 0x38
    c414:	and	r3, r7, #-16777216	; 0xff000000
    c418:	str	r3, [sp, #60]	; 0x3c
    c41c:	ldrd	r2, [sp, #56]	; 0x38
    c420:	cmp	r3, #2046820352	; 0x7a000000
    c424:	cmpeq	r2, #0
    c428:	beq	c5dc <MyGame_Example_Monster_parse_json_table+0x249c>
    c42c:	ldrd	r2, [sp, #56]	; 0x38
    c430:	cmp	r3, #2030043136	; 0x79000000
    c434:	cmpeq	r2, #0
    c438:	bne	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c43c:	cmp	ip, #1
    c440:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c444:	mov	r1, fp
    c448:	mov	r3, #1
    c44c:	mov	r2, r8
    c450:	mov	r0, r9
    c454:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c458:	cmp	r0, fp
    c45c:	mov	r1, r0
    c460:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c464:	mov	fp, r0
    c468:	mov	r2, r8
    c46c:	vstr	s16, [sp, #344]	; 0x158
    c470:	add	r3, sp, #344	; 0x158
    c474:	mov	r0, r9
    c478:	bl	0 <flatcc_json_parser_float>
    c47c:	cmp	fp, r0
    c480:	mov	sl, r0
    c484:	beq	dac0 <MyGame_Example_Monster_parse_json_table+0x3980>
    c488:	ldr	r2, [sp, #16]
    c48c:	ldr	r3, [sp, #344]	; 0x158
    c490:	str	r3, [r2, #4]
    c494:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    c498:	mov	r1, fp
    c49c:	mov	r3, #5
    c4a0:	mov	r2, r8
    c4a4:	mov	r0, r9
    c4a8:	bl	0 <flatcc_json_parser_set_error>
    c4ac:	mov	fp, r0
    c4b0:	b	b0ac <MyGame_Example_Monster_parse_json_table+0xf6c>
    c4b4:	mov	r1, sl
    c4b8:	mov	r2, r8
    c4bc:	mov	r0, r9
    c4c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c4c4:	mov	sl, r0
    c4c8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c4cc:	add	r3, pc, #236	; 0xec
    c4d0:	ldrd	r2, [r3]
    c4d4:	ldrd	r0, [sp, #48]	; 0x30
    c4d8:	cmp	r1, r3
    c4dc:	cmpeq	r0, r2
    c4e0:	bne	c914 <MyGame_Example_Monster_parse_json_table+0x27d4>
    c4e4:	cmp	fp, #5
    c4e8:	ble	bf00 <MyGame_Example_Monster_parse_json_table+0x1dc0>
    c4ec:	mov	r3, #5
    c4f0:	mov	r2, r8
    c4f4:	mov	r1, sl
    c4f8:	mov	r0, r9
    c4fc:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c500:	cmp	r0, sl
    c504:	mov	r4, r0
    c508:	beq	bf00 <MyGame_Example_Monster_parse_json_table+0x1dc0>
    c50c:	mvn	r3, #-1073741824	; 0xc0000000
    c510:	mov	r2, #2
    c514:	ldr	r0, [r9]
    c518:	mov	r1, #4
    c51c:	bl	0 <flatcc_builder_start_vector>
    c520:	cmp	r0, #0
    c524:	bne	e210 <MyGame_Example_Monster_parse_json_table+0x40d0>
    c528:	add	r3, sp, #320	; 0x140
    c52c:	mov	r1, r4
    c530:	mov	r2, r8
    c534:	mov	r0, r9
    c538:	bl	3b94 <flatcc_json_parser_array_start>
    c53c:	ldr	r3, [sp, #320]	; 0x140
    c540:	mov	sl, r0
    c544:	cmp	r3, #0
    c548:	bne	c578 <MyGame_Example_Monster_parse_json_table+0x2438>
    c54c:	b	d834 <MyGame_Example_Monster_parse_json_table+0x36f4>
    c550:	bl	6190 <MyGame_Example_Test_parse_json_struct_inline>
    c554:	mov	r1, r0
    c558:	add	r3, sp, #320	; 0x140
    c55c:	mov	r2, r8
    c560:	mov	r0, r9
    c564:	bl	5e0c <flatcc_json_parser_array_end>
    c568:	ldr	r3, [sp, #320]	; 0x140
    c56c:	mov	sl, r0
    c570:	cmp	r3, #0
    c574:	beq	d834 <MyGame_Example_Monster_parse_json_table+0x36f4>
    c578:	mov	r1, #1
    c57c:	ldr	r0, [r9]
    c580:	bl	0 <flatcc_builder_extend_vector>
    c584:	subs	r3, r0, #0
    c588:	mov	r1, sl
    c58c:	mov	r2, r8
    c590:	mov	r0, r9
    c594:	bne	c550 <MyGame_Example_Monster_parse_json_table+0x2410>
    c598:	b	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c59c:	mov	sl, r1
    c5a0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c5a4:	cmp	r3, #34	; 0x22
    c5a8:	bne	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c5ac:	add	r1, fp, #6
    c5b0:	b	c20c <MyGame_Example_Monster_parse_json_table+0x20cc>
    c5b4:	nop	{0}
    c5b8:	.word	0x32000000
    c5bc:	.word	0x74657374
    c5c0:	.word	0x35000000
    c5c4:	.word	0x74657374
    c5c8:	.word	0x00000154
    c5cc:	cmp	r3, #34	; 0x22
    c5d0:	bne	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c5d4:	add	r1, fp, #6
    c5d8:	b	be08 <MyGame_Example_Monster_parse_json_table+0x1cc8>
    c5dc:	cmp	ip, #1
    c5e0:	ble	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c5e4:	mov	r1, fp
    c5e8:	mov	r3, #1
    c5ec:	mov	r2, r8
    c5f0:	mov	r0, r9
    c5f4:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c5f8:	cmp	r0, fp
    c5fc:	mov	r1, r0
    c600:	beq	c1a4 <MyGame_Example_Monster_parse_json_table+0x2064>
    c604:	mov	fp, r0
    c608:	mov	r2, r8
    c60c:	vstr	s16, [sp, #344]	; 0x158
    c610:	add	r3, sp, #344	; 0x158
    c614:	mov	r0, r9
    c618:	bl	0 <flatcc_json_parser_float>
    c61c:	cmp	fp, r0
    c620:	mov	sl, r0
    c624:	beq	da60 <MyGame_Example_Monster_parse_json_table+0x3920>
    c628:	ldr	r2, [sp, #16]
    c62c:	ldr	r3, [sp, #344]	; 0x158
    c630:	str	r3, [r2, #8]
    c634:	b	bcb8 <MyGame_Example_Monster_parse_json_table+0x1b78>
    c638:	add	r4, sl, #8
    c63c:	mov	r1, r8
    c640:	mov	r0, r4
    c644:	mov	r5, #0
    c648:	bl	0 <flatcc_json_parser_symbol_part_ext>
    c64c:	lsr	r1, r1, #16
    c650:	str	r5, [sp, #136]	; 0x88
    c654:	mov	r3, #0
    c658:	movt	r3, #13876	; 0x3634
    c65c:	mov	r2, #0
    c660:	lsl	r1, r1, #16
    c664:	str	r1, [sp, #140]	; 0x8c
    c668:	ldrd	r0, [sp, #136]	; 0x88
    c66c:	cmp	r1, r3
    c670:	cmpeq	r0, r2
    c674:	bne	cbbc <MyGame_Example_Monster_parse_json_table+0x2a7c>
    c678:	sub	r3, r8, r4
    c67c:	cmp	r3, #2
    c680:	ble	d0e4 <MyGame_Example_Monster_parse_json_table+0x2fa4>
    c684:	mov	r3, #2
    c688:	mov	r2, r8
    c68c:	mov	r1, r4
    c690:	mov	r0, r9
    c694:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c698:	cmp	r4, r0
    c69c:	mov	sl, r0
    c6a0:	beq	d0e0 <MyGame_Example_Monster_parse_json_table+0x2fa0>
    c6a4:	mov	r1, #3
    c6a8:	ldr	r0, [r9]
    c6ac:	str	r5, [sp, #324]	; 0x144
    c6b0:	bl	0 <flatcc_builder_start_table>
    c6b4:	cmp	r0, r5
    c6b8:	bne	c8b4 <MyGame_Example_Monster_parse_json_table+0x2774>
    c6bc:	add	r5, sp, #340	; 0x154
    c6c0:	mov	r1, sl
    c6c4:	mov	r3, r5
    c6c8:	mov	r2, r8
    c6cc:	mov	r0, r9
    c6d0:	bl	3ac0 <flatcc_json_parser_object_start>
    c6d4:	ldr	r3, [sp, #340]	; 0x154
    c6d8:	mov	sl, r0
    c6dc:	cmp	r3, #0
    c6e0:	beq	dc14 <MyGame_Example_Monster_parse_json_table+0x3ad4>
    c6e4:	mov	r3, #0
    c6e8:	movt	r3, #65535	; 0xffff
    c6ec:	mov	fp, #1
    c6f0:	str	r3, [sp, #16]
    c6f4:	strd	r6, [sp, #120]	; 0x78
    c6f8:	b	c7b0 <MyGame_Example_Monster_parse_json_table+0x2670>
    c6fc:	mov	r4, #0
    c700:	str	r4, [sp, #80]	; 0x50
    c704:	str	r1, [sp, #84]	; 0x54
    c708:	add	r1, pc, #1008	; 0x3f0
    c70c:	ldrd	r0, [r1]
    c710:	ldrd	r2, [sp, #80]	; 0x50
    c714:	cmp	r3, r1
    c718:	cmpeq	r2, r0
    c71c:	bne	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c720:	sub	r3, r8, sl
    c724:	cmp	r3, #4
    c728:	ble	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c72c:	mov	r1, sl
    c730:	mov	r3, #4
    c734:	mov	r2, r8
    c738:	mov	r0, r9
    c73c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c740:	cmp	r0, sl
    c744:	mov	r1, r0
    c748:	beq	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c74c:	add	r3, sp, #344	; 0x158
    c750:	mov	r2, r8
    c754:	str	r4, [sp]
    c758:	mov	r0, r9
    c75c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    c760:	ldr	r3, [sp, #344]	; 0x158
    c764:	mov	sl, r0
    c768:	cmp	r3, r4
    c76c:	beq	c8b0 <MyGame_Example_Monster_parse_json_table+0x2770>
    c770:	mov	r1, r4
    c774:	ldr	r0, [r9]
    c778:	bl	0 <flatcc_builder_table_add_offset>
    c77c:	cmp	r0, #0
    c780:	beq	c8b0 <MyGame_Example_Monster_parse_json_table+0x2770>
    c784:	ldr	r3, [sp, #344]	; 0x158
    c788:	str	r3, [r0]
    c78c:	mov	r1, sl
    c790:	mov	r3, r5
    c794:	mov	r2, r8
    c798:	mov	r0, r9
    c79c:	bl	5c48 <flatcc_json_parser_object_end>
    c7a0:	ldr	r3, [sp, #340]	; 0x154
    c7a4:	mov	sl, r0
    c7a8:	cmp	r3, #0
    c7ac:	beq	dc10 <MyGame_Example_Monster_parse_json_table+0x3ad0>
    c7b0:	cmp	r8, sl
    c7b4:	beq	c7dc <MyGame_Example_Monster_parse_json_table+0x269c>
    c7b8:	ldrb	r3, [sl]
    c7bc:	cmp	r3, #34	; 0x22
    c7c0:	moveq	r3, #0
    c7c4:	addeq	sl, sl, #1
    c7c8:	streq	r3, [r9, #12]
    c7cc:	beq	c7dc <MyGame_Example_Monster_parse_json_table+0x269c>
    c7d0:	cmp	r3, #46	; 0x2e
    c7d4:	strne	fp, [r9, #12]
    c7d8:	beq	d628 <MyGame_Example_Monster_parse_json_table+0x34e8>
    c7dc:	mov	r1, r8
    c7e0:	mov	r0, sl
    c7e4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    c7e8:	add	r3, pc, #792	; 0x318
    c7ec:	ldrd	r2, [r3]
    c7f0:	cmp	r1, r3
    c7f4:	cmpeq	r0, r2
    c7f8:	bls	c6fc <MyGame_Example_Monster_parse_json_table+0x25bc>
    c7fc:	bic	r3, r0, #255	; 0xff
    c800:	add	r7, pc, #776	; 0x308
    c804:	ldrd	r6, [r7]
    c808:	str	r3, [sp, #88]	; 0x58
    c80c:	str	r1, [sp, #92]	; 0x5c
    c810:	ldrd	r2, [sp, #88]	; 0x58
    c814:	cmp	r3, r7
    c818:	cmpeq	r2, r6
    c81c:	beq	d434 <MyGame_Example_Monster_parse_json_table+0x32f4>
    c820:	ldr	r3, [sp, #16]
    c824:	str	r1, [sp, #148]	; 0x94
    c828:	and	r3, r0, r3
    c82c:	add	r1, pc, #740	; 0x2e4
    c830:	ldrd	r0, [r1]
    c834:	str	r3, [sp, #144]	; 0x90
    c838:	ldrd	r2, [sp, #144]	; 0x90
    c83c:	cmp	r3, r1
    c840:	cmpeq	r2, r0
    c844:	bne	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c848:	sub	r3, r8, sl
    c84c:	cmp	r3, #6
    c850:	ble	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c854:	mov	r1, sl
    c858:	mov	r3, #6
    c85c:	mov	r2, r8
    c860:	mov	r0, r9
    c864:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c868:	cmp	r0, sl
    c86c:	mov	r1, r0
    c870:	beq	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    c874:	mov	r0, #0
    c878:	add	r3, sp, #344	; 0x158
    c87c:	mov	r2, r8
    c880:	str	r0, [sp]
    c884:	mov	r0, r9
    c888:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    c88c:	ldr	r3, [sp, #344]	; 0x158
    c890:	mov	sl, r0
    c894:	cmp	r3, #0
    c898:	beq	c8b0 <MyGame_Example_Monster_parse_json_table+0x2770>
    c89c:	mov	r1, #2
    c8a0:	ldr	r0, [r9]
    c8a4:	bl	0 <flatcc_builder_table_add_offset>
    c8a8:	cmp	r0, #0
    c8ac:	bne	c784 <MyGame_Example_Monster_parse_json_table+0x2644>
    c8b0:	ldrd	r6, [sp, #120]	; 0x78
    c8b4:	mov	r1, sl
    c8b8:	mov	r3, #33	; 0x21
    c8bc:	mov	r2, r8
    c8c0:	mov	r0, r9
    c8c4:	bl	0 <flatcc_json_parser_set_error>
    c8c8:	ldr	r3, [sp, #324]	; 0x144
    c8cc:	mov	sl, r0
    c8d0:	cmp	r3, #0
    c8d4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c8d8:	mov	r1, #35	; 0x23
    c8dc:	ldr	r0, [r9]
    c8e0:	bl	0 <flatcc_builder_table_add_offset>
    c8e4:	cmp	r0, #0
    c8e8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    c8ec:	ldr	r3, [sp, #324]	; 0x144
    c8f0:	str	r3, [r0]
    c8f4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c8f8:	ldrb	r3, [sl, #2]
    c8fc:	cmp	r3, #32
    c900:	bls	c38c <MyGame_Example_Monster_parse_json_table+0x224c>
    c904:	add	sl, sl, #2
    c908:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c90c:	mov	sl, r8
    c910:	b	c2bc <MyGame_Example_Monster_parse_json_table+0x217c>
    c914:	add	r3, pc, #516	; 0x204
    c918:	ldrd	r2, [r3]
    c91c:	ldrd	r0, [sp, #16]
    c920:	cmp	r1, r3
    c924:	cmpeq	r0, r2
    c928:	bne	bf00 <MyGame_Example_Monster_parse_json_table+0x1dc0>
    c92c:	add	sl, sl, #8
    c930:	mov	r1, r8
    c934:	mov	r0, sl
    c938:	mov	r4, #0
    c93c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    c940:	and	r3, r1, #-16777216	; 0xff000000
    c944:	str	r4, [sp, #176]	; 0xb0
    c948:	str	r3, [sp, #180]	; 0xb4
    c94c:	ldrd	r2, [sp, #176]	; 0xb0
    c950:	cmp	r3, #1694498816	; 0x65000000
    c954:	cmpeq	r2, #0
    c958:	bne	cbec <MyGame_Example_Monster_parse_json_table+0x2aac>
    c95c:	sub	r3, r8, sl
    c960:	cmp	r3, #1
    c964:	ble	d114 <MyGame_Example_Monster_parse_json_table+0x2fd4>
    c968:	mov	r1, sl
    c96c:	mov	r3, #1
    c970:	mov	r2, r8
    c974:	mov	r0, r9
    c978:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    c97c:	cmp	sl, r0
    c980:	mov	r1, r0
    c984:	beq	d114 <MyGame_Example_Monster_parse_json_table+0x2fd4>
    c988:	ldr	lr, [pc, #424]	; cb38 <MyGame_Example_Monster_parse_json_table+0x29f8>
    c98c:	movw	r2, #0
    c990:	movt	r2, #0
    c994:	mov	r5, #8
    c998:	mov	r3, r4
    c99c:	ldr	ip, [sp, #328]	; 0x148
    c9a0:	mov	r0, r9
    c9a4:	stm	sp, {r5, ip, lr}
    c9a8:	str	r2, [sp, #12]
    c9ac:	mov	r2, r8
    c9b0:	bl	0 <flatcc_json_parser_union_type>
    c9b4:	mov	sl, r0
    c9b8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c9bc:	mov	r1, sl
    c9c0:	mov	r2, r8
    c9c4:	mov	r0, r9
    c9c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c9cc:	mov	sl, r0
    c9d0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c9d4:	add	r4, sl, #8
    c9d8:	mov	r1, r8
    c9dc:	mov	r0, r4
    c9e0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    c9e4:	add	r3, pc, #316	; 0x13c
    c9e8:	ldrd	r2, [r3]
    c9ec:	cmp	r1, r3
    c9f0:	cmpeq	r0, r2
    c9f4:	bne	ce7c <MyGame_Example_Monster_parse_json_table+0x2d3c>
    c9f8:	add	sl, sl, #16
    c9fc:	mov	r1, r8
    ca00:	mov	r0, sl
    ca04:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ca08:	and	r0, r0, #-16777216	; 0xff000000
    ca0c:	add	r3, pc, #284	; 0x11c
    ca10:	ldrd	r2, [r3]
    ca14:	strd	r0, [sp, #232]	; 0xe8
    ca18:	ldrd	r0, [sp, #232]	; 0xe8
    ca1c:	cmp	r1, r3
    ca20:	cmpeq	r0, r2
    ca24:	bne	cf84 <MyGame_Example_Monster_parse_json_table+0x2e44>
    ca28:	sub	r3, r8, sl
    ca2c:	cmp	r3, #5
    ca30:	ble	df08 <MyGame_Example_Monster_parse_json_table+0x3dc8>
    ca34:	mov	r1, sl
    ca38:	mov	r3, #5
    ca3c:	mov	r2, r8
    ca40:	mov	r0, r9
    ca44:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    ca48:	cmp	sl, r0
    ca4c:	mov	r1, r0
    ca50:	beq	df08 <MyGame_Example_Monster_parse_json_table+0x3dc8>
    ca54:	add	r3, sp, #324	; 0x144
    ca58:	mov	r2, r8
    ca5c:	mov	r0, r9
    ca60:	bl	6928 <MyGame_Example2_Monster_parse_json_table>
    ca64:	ldr	r3, [sp, #324]	; 0x144
    ca68:	mov	sl, r0
    ca6c:	cmp	r3, #0
    ca70:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ca74:	mov	r1, #34	; 0x22
    ca78:	ldr	r0, [r9]
    ca7c:	bl	0 <flatcc_builder_table_add_offset>
    ca80:	cmp	r0, #0
    ca84:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ca88:	ldr	r3, [sp, #324]	; 0x144
    ca8c:	str	r3, [r0]
    ca90:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ca94:	ldr	r1, [sp, #340]	; 0x154
    ca98:	add	r3, sp, #344	; 0x158
    ca9c:	ldrd	r2, [r3]
    caa0:	cmp	r1, #0
    caa4:	bne	cedc <MyGame_Example_Monster_parse_json_table+0x2d9c>
    caa8:	cmp	r3, #0
    caac:	cmpeq	r2, #127	; 0x7f
    cab0:	sxtbls	r2, r2
    cab4:	bls	c2f0 <MyGame_Example_Monster_parse_json_table+0x21b0>
    cab8:	mov	r1, r0
    cabc:	mov	r3, #7
    cac0:	mov	r2, r8
    cac4:	mov	r0, r9
    cac8:	bl	0 <flatcc_json_parser_set_error>
    cacc:	mov	sl, r0
    cad0:	ldr	r3, [sp, #120]	; 0x78
    cad4:	cmp	r3, sl
    cad8:	beq	c2bc <MyGame_Example_Monster_parse_json_table+0x217c>
    cadc:	add	r3, sp, #332	; 0x14c
    cae0:	ldrsb	r2, [r3]
    cae4:	b	c2f0 <MyGame_Example_Monster_parse_json_table+0x21b0>
    cae8:	ldrb	r3, [sl, #2]
    caec:	cmp	r3, #32
    caf0:	addhi	fp, sl, #2
    caf4:	bls	c3d8 <MyGame_Example_Monster_parse_json_table+0x2298>
    caf8:	b	c3ec <MyGame_Example_Monster_parse_json_table+0x22ac>
    cafc:	nop	{0}
    cb00:	.word	0x00000000
    cb04:	.word	0x64617461
    cb08:	.word	0x6563ffff
    cb0c:	.word	0x6e657374
    cb10:	.word	0x61746100
    cb14:	.word	0x75726c64
    cb18:	.word	0x65640000
    cb1c:	.word	0x6e657374
    cb20:	.word	0x5f747970
    cb24:	.word	0x74657374
    cb28:	.word	0x70616365
    cb2c:	.word	0x616d6573
    cb30:	.word	0x74000000
    cb34:	.word	0x5f746573
    cb38:	.word	0x00000194
    cb3c:	.word	0x00000164
    cb40:	mov	r1, sl
    cb44:	mov	r2, r8
    cb48:	mov	r0, r9
    cb4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb50:	mov	sl, r0
    cb54:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cb58:	mov	r4, r0
    cb5c:	mov	r1, r4
    cb60:	mov	r2, r8
    cb64:	mov	r0, r9
    cb68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb6c:	mov	sl, r0
    cb70:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cb74:	mov	r1, sl
    cb78:	mov	r2, r8
    cb7c:	mov	r0, r9
    cb80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb84:	mov	sl, r0
    cb88:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cb8c:	mov	r1, r0
    cb90:	add	r0, sp, #344	; 0x158
    cb94:	ldr	r3, [pc, #-96]	; cb3c <MyGame_Example_Monster_parse_json_table+0x29fc>
    cb98:	mov	r2, r8
    cb9c:	str	r0, [sp]
    cba0:	mov	r0, r9
    cba4:	bl	3e68 <flatcc_json_parser_symbolic_double>
    cba8:	cmp	r8, r0
    cbac:	cmpne	sl, r0
    cbb0:	beq	e1e4 <MyGame_Example_Monster_parse_json_table+0x40a4>
    cbb4:	mov	sl, r0
    cbb8:	b	be8c <MyGame_Example_Monster_parse_json_table+0x1d4c>
    cbbc:	mov	r1, r4
    cbc0:	mov	r2, r8
    cbc4:	mov	r0, r9
    cbc8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cbcc:	mov	sl, r0
    cbd0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cbd4:	mov	r1, r4
    cbd8:	mov	r2, r8
    cbdc:	mov	r0, r9
    cbe0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cbe4:	mov	sl, r0
    cbe8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cbec:	mov	r1, sl
    cbf0:	mov	r2, r8
    cbf4:	mov	r0, r9
    cbf8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cbfc:	mov	sl, r0
    cc00:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cc04:	add	sl, fp, #1
    cc08:	mov	r3, #0
    cc0c:	sub	r2, r8, sl
    cc10:	cmp	r2, #1
    cc14:	str	r3, [sp, #336]	; 0x150
    cc18:	ble	cc2c <MyGame_Example_Monster_parse_json_table+0x2aec>
    cc1c:	ldrb	r3, [fp, #1]
    cc20:	cmp	r3, #32
    cc24:	bhi	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cc28:	beq	deb4 <MyGame_Example_Monster_parse_json_table+0x3d74>
    cc2c:	mov	r1, sl
    cc30:	b	c38c <MyGame_Example_Monster_parse_json_table+0x224c>
    cc34:	mov	ip, #0
    cc38:	mov	r3, #10
    cc3c:	mov	r2, r8
    cc40:	mov	r1, r8
    cc44:	mov	r0, r9
    cc48:	str	ip, [sp, #336]	; 0x150
    cc4c:	bl	0 <flatcc_json_parser_set_error>
    cc50:	mov	fp, r0
    cc54:	ldr	r3, [sp, #336]	; 0x150
    cc58:	b	b06c <MyGame_Example_Monster_parse_json_table+0xf2c>
    cc5c:	mov	r1, sl
    cc60:	mov	r2, r8
    cc64:	mov	r0, r9
    cc68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc6c:	mov	sl, r0
    cc70:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cc74:	add	r3, pc, #980	; 0x3d4
    cc78:	ldrd	r2, [r3]
    cc7c:	cmp	r1, r3
    cc80:	cmpeq	r0, r2
    cc84:	beq	d228 <MyGame_Example_Monster_parse_json_table+0x30e8>
    cc88:	add	r3, pc, #968	; 0x3c8
    cc8c:	ldrd	r2, [r3]
    cc90:	cmp	r1, r3
    cc94:	cmpeq	r0, r2
    cc98:	bne	daa8 <MyGame_Example_Monster_parse_json_table+0x3968>
    cc9c:	sub	r3, r8, sl
    cca0:	cmp	r3, #8
    cca4:	ble	dfec <MyGame_Example_Monster_parse_json_table+0x3eac>
    cca8:	mov	r3, #8
    ccac:	mov	r2, r8
    ccb0:	mov	r1, sl
    ccb4:	mov	r0, r9
    ccb8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    ccbc:	cmp	sl, r0
    ccc0:	mov	r4, r0
    ccc4:	beq	dfe8 <MyGame_Example_Monster_parse_json_table+0x3ea8>
    ccc8:	mov	sl, #0
    cccc:	add	r5, sp, #344	; 0x158
    ccd0:	mov	fp, #0
    ccd4:	mov	r1, r0
    ccd8:	mov	r3, r5
    ccdc:	mov	r2, r8
    cce0:	mov	r0, r9
    cce4:	strd	sl, [r5]
    cce8:	bl	2aa0 <flatcc_json_parser_uint64.constprop.42>
    ccec:	cmp	r0, r4
    ccf0:	mov	sl, r0
    ccf4:	beq	e428 <MyGame_Example_Monster_parse_json_table+0x42e8>
    ccf8:	add	r3, sp, #344	; 0x158
    ccfc:	ldrd	r2, [r3]
    cd00:	orrs	r3, r2, r3
    cd04:	bne	cd14 <MyGame_Example_Monster_parse_json_table+0x2bd4>
    cd08:	ldr	r3, [r9, #8]
    cd0c:	tst	r3, #2
    cd10:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cd14:	mov	r3, #8
    cd18:	mov	r1, #19
    cd1c:	ldr	r0, [r9]
    cd20:	mov	r2, r3
    cd24:	bl	0 <flatcc_builder_table_add>
    cd28:	cmp	r0, #0
    cd2c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    cd30:	add	r3, sp, #344	; 0x158
    cd34:	ldrd	r2, [r3]
    cd38:	strd	r2, [r0]
    cd3c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cd40:	mov	r3, #0
    cd44:	add	r4, sl, #8
    cd48:	mov	r1, r8
    cd4c:	mov	r0, r4
    cd50:	str	r3, [sp, #224]	; 0xe0
    cd54:	bl	0 <flatcc_json_parser_symbol_part_ext>
    cd58:	and	r3, r1, #-16777216	; 0xff000000
    cd5c:	str	r3, [sp, #228]	; 0xe4
    cd60:	ldrd	r2, [sp, #224]	; 0xe0
    cd64:	cmp	r3, #2030043136	; 0x79000000
    cd68:	cmpeq	r2, #0
    cd6c:	bne	cfb4 <MyGame_Example_Monster_parse_json_table+0x2e74>
    cd70:	sub	r3, r8, r4
    cd74:	cmp	r3, #1
    cd78:	ble	dbf8 <MyGame_Example_Monster_parse_json_table+0x3ab8>
    cd7c:	mov	r3, #1
    cd80:	mov	r2, r8
    cd84:	mov	r1, r4
    cd88:	mov	r0, r9
    cd8c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    cd90:	cmp	r4, r0
    cd94:	mov	sl, r0
    cd98:	beq	dbf4 <MyGame_Example_Monster_parse_json_table+0x3ab4>
    cd9c:	mov	r2, #1
    cda0:	mvn	r3, #0
    cda4:	ldr	r0, [r9]
    cda8:	mov	r1, r2
    cdac:	bl	0 <flatcc_builder_start_vector>
    cdb0:	cmp	r0, #0
    cdb4:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    cdb8:	mov	r1, sl
    cdbc:	add	r3, sp, #320	; 0x140
    cdc0:	mov	r2, r8
    cdc4:	mov	r0, r9
    cdc8:	bl	3b94 <flatcc_json_parser_array_start>
    cdcc:	ldr	r3, [sp, #320]	; 0x140
    cdd0:	mov	sl, r0
    cdd4:	cmp	r3, #0
    cdd8:	beq	e13c <MyGame_Example_Monster_parse_json_table+0x3ffc>
    cddc:	mov	fp, #0
    cde0:	b	ce10 <MyGame_Example_Monster_parse_json_table+0x2cd0>
    cde4:	ldrb	ip, [sp, #344]	; 0x158
    cde8:	add	r3, sp, #320	; 0x140
    cdec:	mov	r1, r4
    cdf0:	mov	r2, r8
    cdf4:	mov	r0, r9
    cdf8:	strb	ip, [r5]
    cdfc:	bl	5e0c <flatcc_json_parser_array_end>
    ce00:	ldr	r3, [sp, #320]	; 0x140
    ce04:	mov	sl, r0
    ce08:	cmp	r3, #0
    ce0c:	beq	e13c <MyGame_Example_Monster_parse_json_table+0x3ffc>
    ce10:	mov	r1, #1
    ce14:	ldr	r0, [r9]
    ce18:	strb	fp, [sp, #344]	; 0x158
    ce1c:	bl	0 <flatcc_builder_extend_vector>
    ce20:	subs	r5, r0, #0
    ce24:	mov	r1, sl
    ce28:	add	r3, sp, #344	; 0x158
    ce2c:	mov	r2, r8
    ce30:	mov	r0, r9
    ce34:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ce38:	bl	2c18 <flatcc_json_parser_uint8>
    ce3c:	cmp	sl, r0
    ce40:	mov	r4, r0
    ce44:	bne	cde4 <MyGame_Example_Monster_parse_json_table+0x2ca4>
    ce48:	add	r1, sp, #344	; 0x158
    ce4c:	ldr	r3, [pc, #524]	; d060 <MyGame_Example_Monster_parse_json_table+0x2f20>
    ce50:	mov	r2, r8
    ce54:	mov	r0, r9
    ce58:	str	r1, [sp]
    ce5c:	mov	r1, r4
    ce60:	bl	4728 <flatcc_json_parser_symbolic_uint8>
    ce64:	cmp	r8, r0
    ce68:	cmpne	r4, r0
    ce6c:	mov	sl, r0
    ce70:	mov	r4, r0
    ce74:	bne	cde4 <MyGame_Example_Monster_parse_json_table+0x2ca4>
    ce78:	b	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ce7c:	mov	r1, r4
    ce80:	mov	r2, r8
    ce84:	mov	r0, r9
    ce88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ce8c:	mov	sl, r0
    ce90:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ce94:	mov	r1, sl
    ce98:	mov	r2, r8
    ce9c:	mov	r0, r9
    cea0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cea4:	mov	sl, r0
    cea8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ceac:	mov	r1, r4
    ceb0:	mov	r2, r8
    ceb4:	mov	r0, r9
    ceb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cebc:	mov	sl, r0
    cec0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cec4:	mov	r1, r4
    cec8:	mov	r2, r8
    cecc:	mov	r0, r9
    ced0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ced4:	mov	sl, r0
    ced8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cedc:	cmp	r3, #0
    cee0:	cmpeq	r2, #128	; 0x80
    cee4:	rsbls	r2, r2, #0
    cee8:	sxtbls	r2, r2
    ceec:	bls	c2f0 <MyGame_Example_Monster_parse_json_table+0x21b0>
    cef0:	mov	r1, r0
    cef4:	mov	r3, #8
    cef8:	mov	r2, r8
    cefc:	mov	r0, r9
    cf00:	bl	0 <flatcc_json_parser_set_error>
    cf04:	mov	sl, r0
    cf08:	b	cad0 <MyGame_Example_Monster_parse_json_table+0x2990>
    cf0c:	mov	r1, r4
    cf10:	mov	r2, r8
    cf14:	mov	r0, r9
    cf18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf1c:	mov	sl, r0
    cf20:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf24:	mov	r1, r0
    cf28:	add	r0, sp, #344	; 0x158
    cf2c:	ldr	r3, [pc, #304]	; d064 <MyGame_Example_Monster_parse_json_table+0x2f24>
    cf30:	mov	r2, r8
    cf34:	str	r0, [sp]
    cf38:	mov	r0, r9
    cf3c:	bl	3c68 <flatcc_json_parser_symbolic_float>
    cf40:	cmp	r8, r0
    cf44:	cmpne	sl, r0
    cf48:	beq	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    cf4c:	mov	sl, r0
    cf50:	b	a698 <MyGame_Example_Monster_parse_json_table+0x558>
    cf54:	mov	r1, r4
    cf58:	mov	r2, r8
    cf5c:	mov	r0, r9
    cf60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf64:	mov	sl, r0
    cf68:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf6c:	mov	r1, r4
    cf70:	mov	r2, r8
    cf74:	mov	r0, r9
    cf78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf7c:	mov	sl, r0
    cf80:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf84:	mov	r1, sl
    cf88:	mov	r2, r8
    cf8c:	mov	r0, r9
    cf90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf94:	mov	sl, r0
    cf98:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf9c:	mov	r1, r4
    cfa0:	mov	r2, r8
    cfa4:	mov	r0, r9
    cfa8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfac:	mov	sl, r0
    cfb0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cfb4:	mov	r1, r4
    cfb8:	mov	r2, r8
    cfbc:	mov	r0, r9
    cfc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfc4:	mov	sl, r0
    cfc8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cfcc:	mov	r1, sl
    cfd0:	mov	r2, r8
    cfd4:	mov	r0, r9
    cfd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfdc:	mov	sl, r0
    cfe0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cfe4:	sub	r3, r8, r4
    cfe8:	cmp	r3, #2
    cfec:	ble	dc58 <MyGame_Example_Monster_parse_json_table+0x3b18>
    cff0:	mov	r3, #2
    cff4:	mov	r2, r8
    cff8:	mov	r1, r4
    cffc:	mov	r0, r9
    d000:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d004:	cmp	r4, r0
    d008:	mov	sl, r0
    d00c:	beq	dc54 <MyGame_Example_Monster_parse_json_table+0x3b14>
    d010:	ldr	r0, [r9]
    d014:	bl	0 <flatcc_builder_start_offset_vector>
    d018:	cmp	r0, #0
    d01c:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d020:	mov	r1, sl
    d024:	add	r3, sp, #320	; 0x140
    d028:	mov	r2, r8
    d02c:	mov	r0, r9
    d030:	bl	3b94 <flatcc_json_parser_array_start>
    d034:	ldr	r3, [sp, #320]	; 0x140
    d038:	mov	sl, r0
    d03c:	cmp	r3, #0
    d040:	beq	e268 <MyGame_Example_Monster_parse_json_table+0x4128>
    d044:	add	r4, sp, #324	; 0x144
    d048:	b	d0b4 <MyGame_Example_Monster_parse_json_table+0x2f74>
    d04c:	nop	{0}
    d050:	.word	0x666e7631
    d054:	.word	0x7533325f
    d058:	.word	0x666e7631
    d05c:	.word	0x7536345f
    d060:	.word	0x0000013c
    d064:	.word	0x00000204
    d068:	.word	0x00000130
    d06c:	.word	0x000001b0
    d070:	.word	0x000001bc
    d074:	.word	0x00000170
    d078:	ldr	r0, [r9]
    d07c:	bl	0 <flatcc_builder_extend_offset_vector>
    d080:	subs	ip, r0, #0
    d084:	add	r3, sp, #320	; 0x140
    d088:	mov	r2, r8
    d08c:	mov	r1, sl
    d090:	mov	r0, r9
    d094:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d098:	ldr	lr, [sp, #324]	; 0x144
    d09c:	str	lr, [ip]
    d0a0:	bl	5e0c <flatcc_json_parser_array_end>
    d0a4:	ldr	r3, [sp, #320]	; 0x140
    d0a8:	mov	sl, r0
    d0ac:	cmp	r3, #0
    d0b0:	beq	e268 <MyGame_Example_Monster_parse_json_table+0x4128>
    d0b4:	mov	r1, sl
    d0b8:	mov	r3, r4
    d0bc:	mov	r2, r8
    d0c0:	mov	r0, r9
    d0c4:	bl	0 <flatcc_json_parser_build_string>
    d0c8:	ldr	r3, [sp, #324]	; 0x144
    d0cc:	mov	sl, r0
    d0d0:	mov	r1, #1
    d0d4:	cmp	r3, #0
    d0d8:	bne	d078 <MyGame_Example_Monster_parse_json_table+0x2f38>
    d0dc:	b	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d0e0:	mov	r4, r0
    d0e4:	mov	r1, r4
    d0e8:	mov	r2, r8
    d0ec:	mov	r0, r9
    d0f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d0f4:	mov	sl, r0
    d0f8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d0fc:	mov	r1, sl
    d100:	mov	r2, r8
    d104:	mov	r0, r9
    d108:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d10c:	mov	sl, r0
    d110:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d114:	mov	r1, sl
    d118:	mov	r2, r8
    d11c:	mov	r0, r9
    d120:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d124:	mov	sl, r0
    d128:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d12c:	add	sl, sl, #8
    d130:	mov	r1, r8
    d134:	mov	r0, sl
    d138:	mov	fp, #0
    d13c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d140:	and	r3, r1, #-16777216	; 0xff000000
    d144:	str	fp, [sp, #264]	; 0x108
    d148:	str	r3, [sp, #268]	; 0x10c
    d14c:	add	r3, sp, #264	; 0x108
    d150:	ldrd	r2, [r3]
    d154:	cmp	r3, #1627389952	; 0x61000000
    d158:	cmpeq	r2, #0
    d15c:	bne	ddb0 <MyGame_Example_Monster_parse_json_table+0x3c70>
    d160:	sub	r3, r8, sl
    d164:	cmp	r3, #1
    d168:	ble	e238 <MyGame_Example_Monster_parse_json_table+0x40f8>
    d16c:	mov	r3, #1
    d170:	mov	r2, r8
    d174:	mov	r1, sl
    d178:	mov	r0, r9
    d17c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d180:	cmp	sl, r0
    d184:	mov	r4, r0
    d188:	beq	e238 <MyGame_Example_Monster_parse_json_table+0x40f8>
    d18c:	add	r5, sp, #344	; 0x158
    d190:	mov	r1, r0
    d194:	str	fp, [sp, #344]	; 0x158
    d198:	mov	r2, r8
    d19c:	mov	r3, r5
    d1a0:	mov	r0, r9
    d1a4:	bl	2cd8 <flatcc_json_parser_int32.constprop.39>
    d1a8:	cmp	r0, r4
    d1ac:	mov	sl, r0
    d1b0:	beq	e3fc <MyGame_Example_Monster_parse_json_table+0x42bc>
    d1b4:	ldr	r3, [sp, #344]	; 0x158
    d1b8:	cmp	r3, #0
    d1bc:	bne	d1cc <MyGame_Example_Monster_parse_json_table+0x308c>
    d1c0:	ldr	r3, [r9, #8]
    d1c4:	tst	r3, #2
    d1c8:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d1cc:	mov	r3, #4
    d1d0:	mov	r1, #20
    d1d4:	ldr	r0, [r9]
    d1d8:	mov	r2, r3
    d1dc:	bl	0 <flatcc_builder_table_add>
    d1e0:	cmp	r0, #0
    d1e4:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    d1e8:	ldr	r3, [sp, #344]	; 0x158
    d1ec:	str	r3, [r0]
    d1f0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d1f4:	mov	r4, r0
    d1f8:	mov	r1, r4
    d1fc:	mov	r2, r8
    d200:	mov	r0, r9
    d204:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d208:	mov	sl, r0
    d20c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d210:	mov	r1, sl
    d214:	mov	r2, r8
    d218:	mov	r0, r9
    d21c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d220:	mov	sl, r0
    d224:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d228:	sub	r3, r8, sl
    d22c:	cmp	r3, #8
    d230:	ble	df20 <MyGame_Example_Monster_parse_json_table+0x3de0>
    d234:	mov	r3, #8
    d238:	mov	r2, r8
    d23c:	mov	r1, sl
    d240:	mov	r0, r9
    d244:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d248:	cmp	sl, r0
    d24c:	mov	r4, r0
    d250:	beq	df20 <MyGame_Example_Monster_parse_json_table+0x3de0>
    d254:	mov	ip, #0
    d258:	add	fp, sp, #344	; 0x158
    d25c:	mov	r1, r0
    d260:	mov	r3, fp
    d264:	mov	r2, r8
    d268:	mov	r0, r9
    d26c:	str	ip, [sp, #344]	; 0x158
    d270:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    d274:	cmp	r0, r4
    d278:	mov	sl, r0
    d27c:	beq	e3d0 <MyGame_Example_Monster_parse_json_table+0x4290>
    d280:	ldr	r3, [sp, #344]	; 0x158
    d284:	cmp	r3, #0
    d288:	bne	d298 <MyGame_Example_Monster_parse_json_table+0x3158>
    d28c:	ldr	r3, [r9, #8]
    d290:	tst	r3, #2
    d294:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d298:	mov	r3, #4
    d29c:	mov	r1, #17
    d2a0:	ldr	r0, [r9]
    d2a4:	mov	r2, r3
    d2a8:	bl	0 <flatcc_builder_table_add>
    d2ac:	cmp	r0, #0
    d2b0:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    d2b4:	ldr	r3, [sp, #344]	; 0x158
    d2b8:	str	r3, [r0]
    d2bc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d2c0:	mov	r1, r0
    d2c4:	add	r0, sp, #344	; 0x158
    d2c8:	ldr	r3, [pc, #-616]	; d068 <MyGame_Example_Monster_parse_json_table+0x2f28>
    d2cc:	mov	r2, r8
    d2d0:	str	r0, [sp]
    d2d4:	mov	r0, r9
    d2d8:	bl	4bb0 <flatcc_json_parser_symbolic_int16>
    d2dc:	cmp	r8, r0
    d2e0:	cmpne	sl, r0
    d2e4:	beq	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    d2e8:	mov	sl, r0
    d2ec:	b	b1e0 <MyGame_Example_Monster_parse_json_table+0x10a0>
    d2f0:	mov	r1, r4
    d2f4:	mov	r2, r8
    d2f8:	mov	r0, r9
    d2fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d300:	mov	r4, r0
    d304:	b	ba34 <MyGame_Example_Monster_parse_json_table+0x18f4>
    d308:	mov	r1, sl
    d30c:	mov	r2, r8
    d310:	mov	r0, r9
    d314:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d318:	mov	sl, r0
    d31c:	b	c78c <MyGame_Example_Monster_parse_json_table+0x264c>
    d320:	mov	r1, sl
    d324:	mov	r2, r8
    d328:	mov	r0, r9
    d32c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d330:	mov	sl, r0
    d334:	b	ae8c <MyGame_Example_Monster_parse_json_table+0xd4c>
    d338:	mov	r1, r4
    d33c:	mov	r3, #5
    d340:	mov	r2, r8
    d344:	mov	r0, r9
    d348:	bl	0 <flatcc_json_parser_set_error>
    d34c:	mov	r4, r0
    d350:	b	ba84 <MyGame_Example_Monster_parse_json_table+0x1944>
    d354:	mov	r1, r0
    d358:	add	r0, sp, #344	; 0x158
    d35c:	ldr	r3, [pc, #-760]	; d06c <MyGame_Example_Monster_parse_json_table+0x2f2c>
    d360:	mov	r2, r8
    d364:	str	r0, [sp]
    d368:	mov	r0, r9
    d36c:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    d370:	cmp	r8, r0
    d374:	cmpne	r4, r0
    d378:	beq	d3b4 <MyGame_Example_Monster_parse_json_table+0x3274>
    d37c:	mov	r4, r0
    d380:	b	bb04 <MyGame_Example_Monster_parse_json_table+0x19c4>
    d384:	mov	r1, r0
    d388:	add	r0, sp, #344	; 0x158
    d38c:	ldr	r3, [pc, #-804]	; d070 <MyGame_Example_Monster_parse_json_table+0x2f30>
    d390:	mov	r2, r8
    d394:	str	r0, [sp]
    d398:	mov	r0, r9
    d39c:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    d3a0:	cmp	r8, r0
    d3a4:	cmpne	r4, r0
    d3a8:	beq	d3b4 <MyGame_Example_Monster_parse_json_table+0x3274>
    d3ac:	mov	r4, r0
    d3b0:	b	ba28 <MyGame_Example_Monster_parse_json_table+0x18e8>
    d3b4:	mov	r1, r0
    d3b8:	mov	r3, #33	; 0x21
    d3bc:	mov	r2, r8
    d3c0:	mov	r0, r9
    d3c4:	bl	0 <flatcc_json_parser_set_error>
    d3c8:	mov	r4, r0
    d3cc:	mov	r1, r4
    d3d0:	add	r3, sp, #320	; 0x140
    d3d4:	mov	r2, r8
    d3d8:	mov	r0, r9
    d3dc:	bl	5e0c <flatcc_json_parser_array_end>
    d3e0:	ldr	r3, [sp, #320]	; 0x140
    d3e4:	mov	r4, r0
    d3e8:	cmp	r3, #0
    d3ec:	bne	b94c <MyGame_Example_Monster_parse_json_table+0x180c>
    d3f0:	ldrd	r6, [sp, #120]	; 0x78
    d3f4:	add	r3, sp, #288	; 0x120
    d3f8:	strd	sl, [r3]
    d3fc:	mov	sl, r0
    d400:	ldr	r0, [r9]
    d404:	bl	0 <flatcc_builder_end_vector>
    d408:	cmp	r0, #0
    d40c:	str	r0, [sp, #324]	; 0x144
    d410:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d414:	mov	r1, #29
    d418:	ldr	r0, [r9]
    d41c:	bl	0 <flatcc_builder_table_add_offset>
    d420:	cmp	r0, #0
    d424:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d428:	ldr	r3, [sp, #324]	; 0x144
    d42c:	str	r3, [r0]
    d430:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d434:	sub	r3, r8, sl
    d438:	cmp	r3, #7
    d43c:	ble	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    d440:	mov	r1, sl
    d444:	mov	r3, #7
    d448:	mov	r2, r8
    d44c:	mov	r0, r9
    d450:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d454:	cmp	r0, sl
    d458:	mov	r1, r0
    d45c:	beq	d308 <MyGame_Example_Monster_parse_json_table+0x31c8>
    d460:	add	r3, sp, #344	; 0x158
    d464:	mov	r2, r8
    d468:	str	fp, [sp]
    d46c:	mov	r0, r9
    d470:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    d474:	ldr	r3, [sp, #344]	; 0x158
    d478:	mov	sl, r0
    d47c:	cmp	r3, #0
    d480:	beq	c8b0 <MyGame_Example_Monster_parse_json_table+0x2770>
    d484:	mov	r1, #1
    d488:	ldr	r0, [r9]
    d48c:	bl	0 <flatcc_builder_table_add_offset>
    d490:	cmp	r0, #0
    d494:	bne	c784 <MyGame_Example_Monster_parse_json_table+0x2644>
    d498:	b	c8b0 <MyGame_Example_Monster_parse_json_table+0x2770>
    d49c:	sub	r3, r8, sl
    d4a0:	cmp	r3, #3
    d4a4:	ble	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    d4a8:	mov	r3, #3
    d4ac:	mov	r2, r8
    d4b0:	mov	r1, sl
    d4b4:	mov	r0, r9
    d4b8:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d4bc:	cmp	r0, sl
    d4c0:	mov	fp, r0
    d4c4:	beq	d320 <MyGame_Example_Monster_parse_json_table+0x31e0>
    d4c8:	mov	r0, #0
    d4cc:	mov	r1, #0
    d4d0:	add	r3, sp, #344	; 0x158
    d4d4:	mov	r2, r8
    d4d8:	strd	r0, [r3]
    d4dc:	mov	r1, fp
    d4e0:	mov	r0, r9
    d4e4:	bl	286c <flatcc_json_parser_int64>
    d4e8:	cmp	fp, r0
    d4ec:	mov	sl, r0
    d4f0:	beq	dc70 <MyGame_Example_Monster_parse_json_table+0x3b30>
    d4f4:	add	r3, sp, #344	; 0x158
    d4f8:	ldrd	r2, [r3]
    d4fc:	orrs	r3, r2, r3
    d500:	bne	d510 <MyGame_Example_Monster_parse_json_table+0x33d0>
    d504:	ldr	r3, [r9, #8]
    d508:	tst	r3, #2
    d50c:	beq	ae8c <MyGame_Example_Monster_parse_json_table+0xd4c>
    d510:	mov	r3, #8
    d514:	mov	r1, #1
    d518:	ldr	r0, [r9]
    d51c:	mov	r2, r3
    d520:	bl	0 <flatcc_builder_table_add>
    d524:	cmp	r0, #0
    d528:	beq	d870 <MyGame_Example_Monster_parse_json_table+0x3730>
    d52c:	add	r3, sp, #344	; 0x158
    d530:	ldrd	r2, [r3]
    d534:	strd	r2, [r0]
    d538:	b	ae8c <MyGame_Example_Monster_parse_json_table+0xd4c>
    d53c:	ldrb	r2, [sl, #1]
    d540:	add	r1, sl, #1
    d544:	cmp	r2, #114	; 0x72
    d548:	bne	abd4 <MyGame_Example_Monster_parse_json_table+0xa94>
    d54c:	ldrb	r2, [r1, #1]!
    d550:	cmp	r2, #117	; 0x75
    d554:	bne	abd4 <MyGame_Example_Monster_parse_json_table+0xa94>
    d558:	ldrb	r2, [r1, #1]
    d55c:	cmp	r2, #101	; 0x65
    d560:	moveq	r3, #1
    d564:	addeq	r4, sl, #4
    d568:	strbeq	r3, [sp, #340]	; 0x154
    d56c:	bne	abd4 <MyGame_Example_Monster_parse_json_table+0xa94>
    d570:	b	ac24 <MyGame_Example_Monster_parse_json_table+0xae4>
    d574:	mov	r1, r0
    d578:	add	r0, sp, #344	; 0x158
    d57c:	ldr	r3, [pc, #-1296]	; d074 <MyGame_Example_Monster_parse_json_table+0x2f34>
    d580:	mov	r2, r8
    d584:	str	r0, [sp]
    d588:	mov	r0, r9
    d58c:	bl	3c68 <flatcc_json_parser_symbolic_float>
    d590:	cmp	r8, r0
    d594:	cmpne	sl, r0
    d598:	beq	e1e4 <MyGame_Example_Monster_parse_json_table+0x40a4>
    d59c:	mov	sl, r0
    d5a0:	b	c35c <MyGame_Example_Monster_parse_json_table+0x221c>
    d5a4:	mov	r1, sl
    d5a8:	mov	r2, r8
    d5ac:	mov	r0, r9
    d5b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d5b4:	mov	sl, r0
    d5b8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d5bc:	ldr	r0, [r9]
    d5c0:	bl	0 <flatcc_builder_end_vector>
    d5c4:	cmp	r0, #0
    d5c8:	str	r0, [sp, #324]	; 0x144
    d5cc:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d5d0:	mov	r1, #9
    d5d4:	ldr	r0, [r9]
    d5d8:	bl	0 <flatcc_builder_table_add_offset>
    d5dc:	cmp	r0, #0
    d5e0:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d5e4:	ldr	r3, [sp, #324]	; 0x144
    d5e8:	str	r3, [r0]
    d5ec:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d5f0:	mov	r1, sl
    d5f4:	mov	r2, r8
    d5f8:	mov	r0, r9
    d5fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d600:	mov	sl, r0
    d604:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d608:	mov	r1, sl
    d60c:	mov	r2, r8
    d610:	mov	r0, r9
    d614:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d618:	mov	sl, r0
    d61c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d620:	mov	sl, r8
    d624:	b	a350 <MyGame_Example_Monster_parse_json_table+0x210>
    d628:	mov	r1, sl
    d62c:	mov	r3, #5
    d630:	mov	r2, r8
    d634:	mov	r0, r9
    d638:	bl	0 <flatcc_json_parser_set_error>
    d63c:	mov	sl, r0
    d640:	b	c7dc <MyGame_Example_Monster_parse_json_table+0x269c>
    d644:	mov	r1, sl
    d648:	mov	r3, #5
    d64c:	mov	r2, r8
    d650:	mov	r0, r9
    d654:	bl	0 <flatcc_json_parser_set_error>
    d658:	mov	sl, r0
    d65c:	b	aee0 <MyGame_Example_Monster_parse_json_table+0xda0>
    d660:	ldr	r1, [sp, #340]	; 0x154
    d664:	add	r3, sp, #344	; 0x158
    d668:	ldrd	r2, [r3]
    d66c:	cmp	r1, #0
    d670:	beq	da14 <MyGame_Example_Monster_parse_json_table+0x38d4>
    d674:	cmp	r3, #0
    d678:	cmpeq	r2, #128	; 0x80
    d67c:	rsbls	r2, r2, #0
    d680:	sxtbls	r2, r2
    d684:	strbls	r2, [sp, #336]	; 0x150
    d688:	bls	a384 <MyGame_Example_Monster_parse_json_table+0x244>
    d68c:	mov	r1, r0
    d690:	mov	r3, #8
    d694:	mov	r2, r8
    d698:	mov	r0, r9
    d69c:	bl	0 <flatcc_json_parser_set_error>
    d6a0:	mov	sl, r0
    d6a4:	cmp	r4, sl
    d6a8:	beq	a350 <MyGame_Example_Monster_parse_json_table+0x210>
    d6ac:	add	r3, sp, #336	; 0x150
    d6b0:	ldrsb	r2, [r3]
    d6b4:	b	a384 <MyGame_Example_Monster_parse_json_table+0x244>
    d6b8:	ldrb	r3, [r1, #1]
    d6bc:	cmp	r3, #32
    d6c0:	addhi	r1, r1, #1
    d6c4:	bls	c228 <MyGame_Example_Monster_parse_json_table+0x20e8>
    d6c8:	b	c238 <MyGame_Example_Monster_parse_json_table+0x20f8>
    d6cc:	mov	r1, sl
    d6d0:	mov	r2, r8
    d6d4:	mov	r0, r9
    d6d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d6dc:	mov	sl, r0
    d6e0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d6e4:	mov	r3, #0
    d6e8:	add	r4, sl, #16
    d6ec:	mov	r1, r8
    d6f0:	mov	r0, r4
    d6f4:	str	r3, [sp, #256]	; 0x100
    d6f8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d6fc:	and	r3, r1, #-16777216	; 0xff000000
    d700:	str	r3, [sp, #260]	; 0x104
    d704:	add	r3, sp, #256	; 0x100
    d708:	ldrd	r2, [r3]
    d70c:	cmp	r3, #1929379840	; 0x73000000
    d710:	cmpeq	r2, #0
    d714:	bne	da90 <MyGame_Example_Monster_parse_json_table+0x3950>
    d718:	sub	r3, r8, r4
    d71c:	cmp	r3, #1
    d720:	ble	de9c <MyGame_Example_Monster_parse_json_table+0x3d5c>
    d724:	mov	r3, #1
    d728:	mov	r2, r8
    d72c:	mov	r1, r4
    d730:	mov	r0, r9
    d734:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    d738:	cmp	r4, r0
    d73c:	mov	sl, r0
    d740:	beq	de98 <MyGame_Example_Monster_parse_json_table+0x3d58>
    d744:	mov	r2, #8
    d748:	mvn	r3, #-536870912	; 0xe0000000
    d74c:	ldr	r0, [r9]
    d750:	mov	r1, r2
    d754:	bl	0 <flatcc_builder_start_vector>
    d758:	cmp	r0, #0
    d75c:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d760:	mov	r1, sl
    d764:	add	r3, sp, #320	; 0x140
    d768:	mov	r2, r8
    d76c:	mov	r0, r9
    d770:	bl	3b94 <flatcc_json_parser_array_start>
    d774:	ldr	r3, [sp, #320]	; 0x140
    d778:	mov	sl, r0
    d77c:	cmp	r3, #0
    d780:	beq	e2b4 <MyGame_Example_Monster_parse_json_table+0x4174>
    d784:	vldr	d8, [pc, #996]	; db70 <MyGame_Example_Monster_parse_json_table+0x3a30>
    d788:	ldr	r5, [pc, #1000]	; db78 <MyGame_Example_Monster_parse_json_table+0x3a38>
    d78c:	b	d7c0 <MyGame_Example_Monster_parse_json_table+0x3680>
    d790:	add	fp, sp, #344	; 0x158
    d794:	ldrd	sl, [fp]
    d798:	mov	r1, r0
    d79c:	add	r3, sp, #320	; 0x140
    d7a0:	mov	r2, r8
    d7a4:	mov	r0, r9
    d7a8:	strd	sl, [r4]
    d7ac:	bl	5e0c <flatcc_json_parser_array_end>
    d7b0:	ldr	r3, [sp, #320]	; 0x140
    d7b4:	mov	sl, r0
    d7b8:	cmp	r3, #0
    d7bc:	beq	e2b4 <MyGame_Example_Monster_parse_json_table+0x4174>
    d7c0:	mov	r1, #1
    d7c4:	ldr	r0, [r9]
    d7c8:	vstr	d8, [sp, #344]	; 0x158
    d7cc:	bl	0 <flatcc_builder_extend_vector>
    d7d0:	subs	r4, r0, #0
    d7d4:	mov	r1, sl
    d7d8:	add	r3, sp, #344	; 0x158
    d7dc:	mov	r2, r8
    d7e0:	mov	r0, r9
    d7e4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d7e8:	bl	0 <flatcc_json_parser_double>
    d7ec:	cmp	r0, sl
    d7f0:	bne	d790 <MyGame_Example_Monster_parse_json_table+0x3650>
    d7f4:	add	r1, sp, #344	; 0x158
    d7f8:	mov	r3, r5
    d7fc:	mov	r2, r8
    d800:	mov	r0, r9
    d804:	str	r1, [sp]
    d808:	mov	r1, sl
    d80c:	bl	3e68 <flatcc_json_parser_symbolic_double>
    d810:	cmp	r8, r0
    d814:	cmpne	r0, sl
    d818:	bne	d790 <MyGame_Example_Monster_parse_json_table+0x3650>
    d81c:	b	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    d820:	ldrb	r3, [r1, #1]
    d824:	cmp	r3, #32
    d828:	addhi	r1, r1, #1
    d82c:	bls	be24 <MyGame_Example_Monster_parse_json_table+0x1ce4>
    d830:	b	be34 <MyGame_Example_Monster_parse_json_table+0x1cf4>
    d834:	ldr	r0, [r9]
    d838:	bl	0 <flatcc_builder_end_vector>
    d83c:	cmp	r0, #0
    d840:	str	r0, [sp, #324]	; 0x144
    d844:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d848:	mov	r1, #31
    d84c:	ldr	r0, [r9]
    d850:	bl	0 <flatcc_builder_table_add_offset>
    d854:	cmp	r0, #0
    d858:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d85c:	ldr	r3, [sp, #324]	; 0x144
    d860:	str	r3, [r0]
    d864:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d868:	mov	r7, r8
    d86c:	b	ae10 <MyGame_Example_Monster_parse_json_table+0xcd0>
    d870:	ldrd	r6, [sp, #16]
    d874:	add	r3, sp, #272	; 0x110
    d878:	mov	r0, sl
    d87c:	strd	r4, [r3]
    d880:	mov	sl, r0
    d884:	mov	r1, sl
    d888:	mov	r3, #33	; 0x21
    d88c:	mov	r2, r8
    d890:	mov	r0, r9
    d894:	bl	0 <flatcc_json_parser_set_error>
    d898:	ldr	r3, [sp, #324]	; 0x144
    d89c:	mov	sl, r0
    d8a0:	cmp	r3, #0
    d8a4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d8a8:	mov	r1, #14
    d8ac:	ldr	r0, [r9]
    d8b0:	bl	0 <flatcc_builder_table_add_offset>
    d8b4:	cmp	r0, #0
    d8b8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d8bc:	ldr	r3, [sp, #324]	; 0x144
    d8c0:	str	r3, [r0]
    d8c4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d8c8:	ldr	r0, [r9]
    d8cc:	bl	0 <flatcc_builder_end_vector>
    d8d0:	cmp	r0, #0
    d8d4:	str	r0, [sp, #324]	; 0x144
    d8d8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d8dc:	mov	r1, #30
    d8e0:	ldr	r0, [r9]
    d8e4:	bl	0 <flatcc_builder_table_add_offset>
    d8e8:	cmp	r0, #0
    d8ec:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d8f0:	ldr	r3, [sp, #324]	; 0x144
    d8f4:	str	r3, [r0]
    d8f8:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d8fc:	ldr	r3, [sp, #340]	; 0x154
    d900:	cmp	r3, #0
    d904:	bne	e170 <MyGame_Example_Monster_parse_json_table+0x4030>
    d908:	add	r3, sp, #344	; 0x158
    d90c:	mov	r1, #0
    d910:	ldrd	r2, [r3]
    d914:	movw	r0, #65535	; 0xffff
    d918:	cmp	r3, r1
    d91c:	cmpeq	r2, r0
    d920:	bhi	e1c8 <MyGame_Example_Monster_parse_json_table+0x4088>
    d924:	add	r3, sp, #316	; 0x13c
    d928:	uxth	r2, r2
    d92c:	add	r3, r3, #2
    d930:	mov	sl, r7
    d934:	strh	r2, [r3]
    d938:	b	ae4c <MyGame_Example_Monster_parse_json_table+0xd0c>
    d93c:	mov	r1, sl
    d940:	mov	r2, r8
    d944:	mov	r0, r9
    d948:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d94c:	mov	sl, r0
    d950:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d954:	mov	r1, r4
    d958:	mov	r2, r8
    d95c:	mov	r0, r9
    d960:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d964:	mov	sl, r0
    d968:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d96c:	mov	r4, r0
    d970:	mov	r1, r4
    d974:	mov	r2, r8
    d978:	mov	r0, r9
    d97c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d980:	mov	sl, r0
    d984:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d988:	ldrd	r6, [sp, #16]
    d98c:	ldr	r0, [r9]
    d990:	bl	0 <flatcc_builder_end_vector>
    d994:	cmp	r0, #0
    d998:	str	r0, [sp, #324]	; 0x144
    d99c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d9a0:	mov	r1, #24
    d9a4:	ldr	r0, [r9]
    d9a8:	bl	0 <flatcc_builder_table_add_offset>
    d9ac:	cmp	r0, #0
    d9b0:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    d9b4:	ldr	r3, [sp, #324]	; 0x144
    d9b8:	str	r3, [r0]
    d9bc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d9c0:	add	r3, r1, #1
    d9c4:	str	r3, [sp, #120]	; 0x78
    d9c8:	sub	r3, r8, r3
    d9cc:	cmp	r3, #1
    d9d0:	ble	d9e4 <MyGame_Example_Monster_parse_json_table+0x38a4>
    d9d4:	ldrb	r3, [r1, #1]
    d9d8:	cmp	r3, #32
    d9dc:	bhi	c260 <MyGame_Example_Monster_parse_json_table+0x2120>
    d9e0:	beq	e31c <MyGame_Example_Monster_parse_json_table+0x41dc>
    d9e4:	mov	r2, r8
    d9e8:	mov	r0, r9
    d9ec:	ldr	r1, [sp, #120]	; 0x78
    d9f0:	bl	0 <flatcc_json_parser_space_ext>
    d9f4:	str	r0, [sp, #120]	; 0x78
    d9f8:	b	c260 <MyGame_Example_Monster_parse_json_table+0x2120>
    d9fc:	add	r1, r1, #1
    da00:	mov	r2, r8
    da04:	mov	r0, r9
    da08:	bl	1e18 <flatcc_json_parser_space>
    da0c:	mov	r3, r0
    da10:	b	be5c <MyGame_Example_Monster_parse_json_table+0x1d1c>
    da14:	cmp	r3, #0
    da18:	cmpeq	r2, #127	; 0x7f
    da1c:	sxtbls	r2, r2
    da20:	strbls	r2, [sp, #336]	; 0x150
    da24:	bls	a384 <MyGame_Example_Monster_parse_json_table+0x244>
    da28:	mov	r1, r0
    da2c:	mov	r3, #7
    da30:	mov	r2, r8
    da34:	mov	r0, r9
    da38:	bl	0 <flatcc_json_parser_set_error>
    da3c:	mov	sl, r0
    da40:	b	d6a4 <MyGame_Example_Monster_parse_json_table+0x3564>
    da44:	mov	r4, r0
    da48:	mov	r1, r4
    da4c:	mov	r2, r8
    da50:	mov	r0, r9
    da54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    da58:	mov	sl, r0
    da5c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    da60:	mov	r1, r0
    da64:	add	r0, sp, #344	; 0x158
    da68:	ldr	r3, [pc, #268]	; db7c <MyGame_Example_Monster_parse_json_table+0x3a3c>
    da6c:	mov	r2, r8
    da70:	str	r0, [sp]
    da74:	mov	r0, r9
    da78:	bl	3c68 <flatcc_json_parser_symbolic_float>
    da7c:	cmp	r8, r0
    da80:	cmpne	sl, r0
    da84:	beq	e1e4 <MyGame_Example_Monster_parse_json_table+0x40a4>
    da88:	mov	sl, r0
    da8c:	b	c628 <MyGame_Example_Monster_parse_json_table+0x24e8>
    da90:	mov	r1, r4
    da94:	mov	r2, r8
    da98:	mov	r0, r9
    da9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    daa0:	mov	sl, r0
    daa4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    daa8:	mov	r1, sl
    daac:	mov	r2, r8
    dab0:	mov	r0, r9
    dab4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dab8:	mov	sl, r0
    dabc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dac0:	mov	r1, r0
    dac4:	add	r0, sp, #344	; 0x158
    dac8:	ldr	r3, [pc, #176]	; db80 <MyGame_Example_Monster_parse_json_table+0x3a40>
    dacc:	mov	r2, r8
    dad0:	str	r0, [sp]
    dad4:	mov	r0, r9
    dad8:	bl	3c68 <flatcc_json_parser_symbolic_float>
    dadc:	cmp	r8, r0
    dae0:	cmpne	sl, r0
    dae4:	beq	e1e4 <MyGame_Example_Monster_parse_json_table+0x40a4>
    dae8:	mov	sl, r0
    daec:	b	c488 <MyGame_Example_Monster_parse_json_table+0x2348>
    daf0:	mov	r3, #29
    daf4:	mov	r2, r9
    daf8:	mov	r0, fp
    dafc:	bl	0 <flatcc_json_parser_set_error>
    db00:	mov	sl, r0
    db04:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    db08:	mov	r1, r0
    db0c:	add	r0, sp, #344	; 0x158
    db10:	ldr	r3, [pc, #108]	; db84 <MyGame_Example_Monster_parse_json_table+0x3a44>
    db14:	mov	r2, r8
    db18:	str	r0, [sp]
    db1c:	mov	r0, r9
    db20:	bl	3c68 <flatcc_json_parser_symbolic_float>
    db24:	cmp	r8, r0
    db28:	cmpne	sl, r0
    db2c:	beq	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    db30:	mov	sl, r0
    db34:	b	b720 <MyGame_Example_Monster_parse_json_table+0x15e0>
    db38:	ldrb	r1, [r0, #1]
    db3c:	add	r2, r0, #1
    db40:	cmp	r1, #114	; 0x72
    db44:	bne	a480 <MyGame_Example_Monster_parse_json_table+0x340>
    db48:	ldrb	r1, [r2, #1]!
    db4c:	cmp	r1, #117	; 0x75
    db50:	bne	a480 <MyGame_Example_Monster_parse_json_table+0x340>
    db54:	ldrb	r2, [r2, #1]
    db58:	cmp	r2, #101	; 0x65
    db5c:	moveq	r3, #1
    db60:	addeq	sl, r0, #4
    db64:	strbeq	r3, [sp, #336]	; 0x150
    db68:	bne	a480 <MyGame_Example_Monster_parse_json_table+0x340>
    db6c:	b	c194 <MyGame_Example_Monster_parse_json_table+0x2054>
	...
    db78:	.word	0x0000027c
    db7c:	.word	0x0000017c
    db80:	.word	0x00000188
    db84:	.word	0x000001f8
    db88:	.word	0x000001e0
    db8c:	.word	0x000001ec
    db90:	.word	0x00000148
    db94:	.word	0x00000210
    db98:	.word	0x00000228
    db9c:	.word	0x00000240
    dba0:	.word	0x0000021c
    dba4:	.word	0x00000258
    dba8:	.word	0x00000270
    dbac:	.word	0x00000234
    dbb0:	.word	0x0000024c
    dbb4:	.word	0x00000264
    dbb8:	ldr	r3, [sp, #340]	; 0x154
    dbbc:	cmp	r3, #0
    dbc0:	str	r3, [sp, #16]
    dbc4:	bne	e334 <MyGame_Example_Monster_parse_json_table+0x41f4>
    dbc8:	add	r3, sp, #344	; 0x158
    dbcc:	ldrd	r2, [r3]
    dbd0:	cmp	r3, #0
    dbd4:	cmpeq	r2, #255	; 0xff
    dbd8:	bhi	e360 <MyGame_Example_Monster_parse_json_table+0x4220>
    dbdc:	uxtb	r3, r2
    dbe0:	mov	sl, r0
    dbe4:	adds	r3, r3, #0
    dbe8:	movne	r3, #1
    dbec:	strb	r3, [sp, #336]	; 0x150
    dbf0:	b	c18c <MyGame_Example_Monster_parse_json_table+0x204c>
    dbf4:	mov	r4, r0
    dbf8:	mov	r1, r4
    dbfc:	mov	r2, r8
    dc00:	mov	r0, r9
    dc04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dc08:	mov	sl, r0
    dc0c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dc10:	ldrd	r6, [sp, #120]	; 0x78
    dc14:	ldr	r3, [r9, #24]
    dc18:	cmp	r3, #0
    dc1c:	bne	c8b4 <MyGame_Example_Monster_parse_json_table+0x2774>
    dc20:	ldr	r0, [r9]
    dc24:	bl	0 <flatcc_builder_end_table>
    dc28:	cmp	r0, #0
    dc2c:	str	r0, [sp, #324]	; 0x144
    dc30:	bne	c8d8 <MyGame_Example_Monster_parse_json_table+0x2798>
    dc34:	b	c8b4 <MyGame_Example_Monster_parse_json_table+0x2774>
    dc38:	mov	r4, r0
    dc3c:	mov	r1, r4
    dc40:	mov	r2, r8
    dc44:	mov	r0, r9
    dc48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dc4c:	mov	sl, r0
    dc50:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dc54:	mov	r4, r0
    dc58:	mov	r1, r4
    dc5c:	mov	r2, r8
    dc60:	mov	r0, r9
    dc64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dc68:	mov	sl, r0
    dc6c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dc70:	mov	r1, r0
    dc74:	add	r0, sp, #344	; 0x158
    dc78:	ldr	r3, [pc, #-248]	; db88 <MyGame_Example_Monster_parse_json_table+0x3a48>
    dc7c:	mov	r2, r8
    dc80:	str	r0, [sp]
    dc84:	mov	r0, r9
    dc88:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    dc8c:	cmp	r8, r0
    dc90:	cmpne	sl, r0
    dc94:	beq	e614 <MyGame_Example_Monster_parse_json_table+0x44d4>
    dc98:	mov	sl, r0
    dc9c:	b	d4f4 <MyGame_Example_Monster_parse_json_table+0x33b4>
    dca0:	mov	r3, #0
    dca4:	add	sl, sl, #8
    dca8:	mov	r1, r8
    dcac:	mov	r0, sl
    dcb0:	str	r3, [sp, #280]	; 0x118
    dcb4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    dcb8:	and	r3, r1, #-16777216	; 0xff000000
    dcbc:	str	r3, [sp, #284]	; 0x11c
    dcc0:	add	r3, sp, #280	; 0x118
    dcc4:	ldrd	r2, [r3]
    dcc8:	cmp	r3, #1627389952	; 0x61000000
    dccc:	cmpeq	r2, #0
    dcd0:	bne	e124 <MyGame_Example_Monster_parse_json_table+0x3fe4>
    dcd4:	sub	r3, r8, sl
    dcd8:	cmp	r3, #1
    dcdc:	ble	e3b8 <MyGame_Example_Monster_parse_json_table+0x4278>
    dce0:	mov	r3, #1
    dce4:	mov	r2, r8
    dce8:	mov	r1, sl
    dcec:	mov	r0, r9
    dcf0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    dcf4:	cmp	sl, r0
    dcf8:	mov	r4, r0
    dcfc:	beq	e3b8 <MyGame_Example_Monster_parse_json_table+0x4278>
    dd00:	mov	sl, #0
    dd04:	add	r5, sp, #344	; 0x158
    dd08:	mov	fp, #0
    dd0c:	mov	r1, r0
    dd10:	mov	r3, r5
    dd14:	mov	r2, r8
    dd18:	mov	r0, r9
    dd1c:	strd	sl, [r5]
    dd20:	bl	286c <flatcc_json_parser_int64>
    dd24:	cmp	r0, r4
    dd28:	mov	sl, r0
    dd2c:	beq	e574 <MyGame_Example_Monster_parse_json_table+0x4434>
    dd30:	add	r3, sp, #344	; 0x158
    dd34:	ldrd	r2, [r3]
    dd38:	orrs	r3, r2, r3
    dd3c:	bne	dd4c <MyGame_Example_Monster_parse_json_table+0x3c0c>
    dd40:	ldr	r3, [r9, #8]
    dd44:	tst	r3, #2
    dd48:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dd4c:	mov	r3, #8
    dd50:	mov	r1, #22
    dd54:	ldr	r0, [r9]
    dd58:	mov	r2, r3
    dd5c:	bl	0 <flatcc_builder_table_add>
    dd60:	cmp	r0, #0
    dd64:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    dd68:	add	r3, sp, #344	; 0x158
    dd6c:	ldrd	r2, [r3]
    dd70:	strd	r2, [r0]
    dd74:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dd78:	ldrd	r6, [sp, #16]
    dd7c:	add	r3, sp, #272	; 0x110
    dd80:	strd	r4, [r3]
    dd84:	ldr	r3, [r9, #24]
    dd88:	cmp	r3, #0
    dd8c:	bne	d884 <MyGame_Example_Monster_parse_json_table+0x3744>
    dd90:	ldr	r0, [r9]
    dd94:	bl	0 <flatcc_builder_end_table>
    dd98:	cmp	r0, #0
    dd9c:	str	r0, [sp, #324]	; 0x144
    dda0:	bne	d8a8 <MyGame_Example_Monster_parse_json_table+0x3768>
    dda4:	b	d884 <MyGame_Example_Monster_parse_json_table+0x3744>
    dda8:	mov	sl, r4
    ddac:	b	b450 <MyGame_Example_Monster_parse_json_table+0x1310>
    ddb0:	mov	r1, sl
    ddb4:	mov	r2, r8
    ddb8:	mov	r0, r9
    ddbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddc0:	mov	sl, r0
    ddc4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ddc8:	ldr	r0, [r9]
    ddcc:	bl	0 <flatcc_builder_start_offset_vector>
    ddd0:	cmp	r0, #0
    ddd4:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    ddd8:	mov	r1, sl
    dddc:	add	r3, sp, #320	; 0x140
    dde0:	mov	r2, r8
    dde4:	mov	r0, r9
    dde8:	bl	3b94 <flatcc_json_parser_array_start>
    ddec:	ldr	r3, [sp, #320]	; 0x140
    ddf0:	mov	sl, r0
    ddf4:	cmp	r3, #0
    ddf8:	beq	de64 <MyGame_Example_Monster_parse_json_table+0x3d24>
    ddfc:	add	r4, sp, #324	; 0x144
    de00:	mov	r1, sl
    de04:	mov	r3, r4
    de08:	mov	r2, r8
    de0c:	mov	r0, r9
    de10:	bl	a140 <MyGame_Example_Monster_parse_json_table>
    de14:	ldr	r3, [sp, #324]	; 0x144
    de18:	mov	sl, r0
    de1c:	mov	r1, #1
    de20:	cmp	r3, #0
    de24:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    de28:	ldr	r0, [r9]
    de2c:	bl	0 <flatcc_builder_extend_offset_vector>
    de30:	subs	ip, r0, #0
    de34:	add	r3, sp, #320	; 0x140
    de38:	mov	r2, r8
    de3c:	mov	r1, sl
    de40:	mov	r0, r9
    de44:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    de48:	ldr	lr, [sp, #324]	; 0x144
    de4c:	str	lr, [ip]
    de50:	bl	5e0c <flatcc_json_parser_array_end>
    de54:	ldr	r3, [sp, #320]	; 0x140
    de58:	mov	sl, r0
    de5c:	cmp	r3, #0
    de60:	bne	de00 <MyGame_Example_Monster_parse_json_table+0x3cc0>
    de64:	ldr	r0, [r9]
    de68:	bl	0 <flatcc_builder_end_offset_vector>
    de6c:	cmp	r0, #0
    de70:	str	r0, [sp, #324]	; 0x144
    de74:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    de78:	mov	r1, #11
    de7c:	ldr	r0, [r9]
    de80:	bl	0 <flatcc_builder_table_add_offset>
    de84:	cmp	r0, #0
    de88:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    de8c:	ldr	r3, [sp, #324]	; 0x144
    de90:	str	r3, [r0]
    de94:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    de98:	mov	r4, r0
    de9c:	mov	r1, r4
    dea0:	mov	r2, r8
    dea4:	mov	r0, r9
    dea8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    deac:	mov	sl, r0
    deb0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    deb4:	ldrb	r3, [fp, #2]
    deb8:	cmp	r3, #32
    debc:	bls	cc2c <MyGame_Example_Monster_parse_json_table+0x2aec>
    dec0:	add	sl, fp, #2
    dec4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dec8:	mov	fp, r9
    decc:	mov	sl, r4
    ded0:	mov	r9, r8
    ded4:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    ded8:	mov	r1, r0
    dedc:	add	r0, sp, #344	; 0x158
    dee0:	ldr	r3, [pc, #-860]	; db8c <MyGame_Example_Monster_parse_json_table+0x3a4c>
    dee4:	mov	r2, r8
    dee8:	str	r0, [sp]
    deec:	mov	r0, r9
    def0:	bl	3c68 <flatcc_json_parser_symbolic_float>
    def4:	cmp	r8, r0
    def8:	cmpne	sl, r0
    defc:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    df00:	mov	sl, r0
    df04:	b	c0c4 <MyGame_Example_Monster_parse_json_table+0x1f84>
    df08:	mov	r1, sl
    df0c:	mov	r2, r8
    df10:	mov	r0, r9
    df14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df18:	mov	sl, r0
    df1c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    df20:	add	sl, sl, #8
    df24:	mov	r1, r8
    df28:	mov	r0, sl
    df2c:	mov	fp, #0
    df30:	bl	0 <flatcc_json_parser_symbol_part_ext>
    df34:	and	r3, r1, #-16777216	; 0xff000000
    df38:	str	fp, [sp, #296]	; 0x128
    df3c:	str	r3, [sp, #300]	; 0x12c
    df40:	add	r3, sp, #296	; 0x128
    df44:	ldrd	r2, [r3]
    df48:	cmp	r3, #1627389952	; 0x61000000
    df4c:	cmpeq	r2, #0
    df50:	bne	e250 <MyGame_Example_Monster_parse_json_table+0x4110>
    df54:	sub	r3, r8, sl
    df58:	cmp	r3, #1
    df5c:	ble	e55c <MyGame_Example_Monster_parse_json_table+0x441c>
    df60:	mov	r3, #1
    df64:	mov	r2, r8
    df68:	mov	r1, sl
    df6c:	mov	r0, r9
    df70:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    df74:	cmp	sl, r0
    df78:	mov	r4, r0
    df7c:	beq	e55c <MyGame_Example_Monster_parse_json_table+0x441c>
    df80:	add	r5, sp, #344	; 0x158
    df84:	mov	r1, r0
    df88:	str	fp, [sp, #344]	; 0x158
    df8c:	mov	r2, r8
    df90:	mov	r3, r5
    df94:	mov	r0, r9
    df98:	bl	2b48 <flatcc_json_parser_uint32.constprop.41>
    df9c:	cmp	r0, r4
    dfa0:	mov	sl, r0
    dfa4:	beq	e5b0 <MyGame_Example_Monster_parse_json_table+0x4470>
    dfa8:	ldr	r3, [sp, #344]	; 0x158
    dfac:	cmp	r3, #0
    dfb0:	bne	dfc0 <MyGame_Example_Monster_parse_json_table+0x3e80>
    dfb4:	ldr	r3, [r9, #8]
    dfb8:	tst	r3, #2
    dfbc:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dfc0:	mov	r3, #4
    dfc4:	mov	r1, #21
    dfc8:	ldr	r0, [r9]
    dfcc:	mov	r2, r3
    dfd0:	bl	0 <flatcc_builder_table_add>
    dfd4:	cmp	r0, #0
    dfd8:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    dfdc:	ldr	r3, [sp, #344]	; 0x158
    dfe0:	str	r3, [r0]
    dfe4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    dfe8:	mov	sl, r0
    dfec:	mov	r3, #0
    dff0:	add	sl, sl, #8
    dff4:	mov	r1, r8
    dff8:	mov	r0, sl
    dffc:	str	r3, [sp, #304]	; 0x130
    e000:	bl	0 <flatcc_json_parser_symbol_part_ext>
    e004:	and	r3, r1, #-16777216	; 0xff000000
    e008:	str	r3, [sp, #308]	; 0x134
    e00c:	add	r3, sp, #304	; 0x130
    e010:	ldrd	r2, [r3]
    e014:	cmp	r3, #1627389952	; 0x61000000
    e018:	cmpeq	r2, #0
    e01c:	bne	e29c <MyGame_Example_Monster_parse_json_table+0x415c>
    e020:	sub	r3, r8, sl
    e024:	cmp	r3, #1
    e028:	ble	e454 <MyGame_Example_Monster_parse_json_table+0x4314>
    e02c:	mov	r3, #1
    e030:	mov	r2, r8
    e034:	mov	r1, sl
    e038:	mov	r0, r9
    e03c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    e040:	cmp	sl, r0
    e044:	mov	r4, r0
    e048:	beq	e454 <MyGame_Example_Monster_parse_json_table+0x4314>
    e04c:	mov	sl, #0
    e050:	add	r5, sp, #344	; 0x158
    e054:	mov	fp, #0
    e058:	mov	r1, r0
    e05c:	mov	r3, r5
    e060:	mov	r2, r8
    e064:	mov	r0, r9
    e068:	strd	sl, [r5]
    e06c:	bl	2aa0 <flatcc_json_parser_uint64.constprop.42>
    e070:	cmp	r0, r4
    e074:	mov	sl, r0
    e078:	beq	e5dc <MyGame_Example_Monster_parse_json_table+0x449c>
    e07c:	add	r3, sp, #344	; 0x158
    e080:	ldrd	r2, [r3]
    e084:	orrs	r3, r2, r3
    e088:	bne	e098 <MyGame_Example_Monster_parse_json_table+0x3f58>
    e08c:	ldr	r3, [r9, #8]
    e090:	tst	r3, #2
    e094:	beq	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e098:	mov	r3, #8
    e09c:	mov	r1, #23
    e0a0:	ldr	r0, [r9]
    e0a4:	mov	r2, r3
    e0a8:	bl	0 <flatcc_builder_table_add>
    e0ac:	cmp	r0, #0
    e0b0:	beq	e54c <MyGame_Example_Monster_parse_json_table+0x440c>
    e0b4:	add	r3, sp, #344	; 0x158
    e0b8:	ldrd	r2, [r3]
    e0bc:	strd	r2, [r0]
    e0c0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e0c4:	ldr	r0, [r9]
    e0c8:	bl	0 <flatcc_builder_end_vector>
    e0cc:	cmp	r0, #0
    e0d0:	str	r0, [sp, #324]	; 0x144
    e0d4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e0d8:	mov	r1, #32
    e0dc:	ldr	r0, [r9]
    e0e0:	bl	0 <flatcc_builder_table_add_offset>
    e0e4:	cmp	r0, #0
    e0e8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e0ec:	ldr	r3, [sp, #324]	; 0x144
    e0f0:	str	r3, [r0]
    e0f4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e0f8:	mov	r1, r0
    e0fc:	ldr	r3, [pc, #-1396]	; db90 <MyGame_Example_Monster_parse_json_table+0x3a50>
    e100:	mov	r2, r8
    e104:	mov	r0, r9
    e108:	str	fp, [sp]
    e10c:	bl	4bb0 <flatcc_json_parser_symbolic_int16>
    e110:	cmp	r8, r0
    e114:	cmpne	sl, r0
    e118:	beq	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    e11c:	mov	sl, r0
    e120:	b	b7fc <MyGame_Example_Monster_parse_json_table+0x16bc>
    e124:	mov	r1, sl
    e128:	mov	r2, r8
    e12c:	mov	r0, r9
    e130:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e134:	mov	sl, r0
    e138:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e13c:	ldr	r0, [r9]
    e140:	bl	0 <flatcc_builder_end_vector>
    e144:	cmp	r0, #0
    e148:	str	r0, [sp, #324]	; 0x144
    e14c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e150:	mov	r1, #5
    e154:	ldr	r0, [r9]
    e158:	bl	0 <flatcc_builder_table_add_offset>
    e15c:	cmp	r0, #0
    e160:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e164:	ldr	r3, [sp, #324]	; 0x144
    e168:	str	r3, [r0]
    e16c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e170:	mov	r1, r0
    e174:	mov	r3, #8
    e178:	mov	r2, r8
    e17c:	mov	r0, r9
    e180:	bl	0 <flatcc_json_parser_set_error>
    e184:	mov	sl, r0
    e188:	cmp	fp, sl
    e18c:	bne	ae40 <MyGame_Example_Monster_parse_json_table+0xd00>
    e190:	mov	r7, fp
    e194:	b	ae10 <MyGame_Example_Monster_parse_json_table+0xcd0>
    e198:	mov	r1, r0
    e19c:	add	r0, sp, #344	; 0x158
    e1a0:	ldr	r3, [pc, #-1556]	; db94 <MyGame_Example_Monster_parse_json_table+0x3a54>
    e1a4:	mov	r2, r8
    e1a8:	str	r0, [sp]
    e1ac:	mov	r0, r9
    e1b0:	bl	44d0 <flatcc_json_parser_symbolic_int32>
    e1b4:	cmp	r8, r0
    e1b8:	cmpne	sl, r0
    e1bc:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e1c0:	mov	sl, r0
    e1c4:	b	b2cc <MyGame_Example_Monster_parse_json_table+0x118c>
    e1c8:	mov	r1, r7
    e1cc:	mov	r3, #7
    e1d0:	mov	r2, r8
    e1d4:	mov	r0, r9
    e1d8:	bl	0 <flatcc_json_parser_set_error>
    e1dc:	mov	sl, r0
    e1e0:	b	e188 <MyGame_Example_Monster_parse_json_table+0x4048>
    e1e4:	mov	r1, r0
    e1e8:	mov	r3, #33	; 0x21
    e1ec:	mov	r2, r8
    e1f0:	mov	r0, r9
    e1f4:	bl	0 <flatcc_json_parser_set_error>
    e1f8:	mov	sl, r0
    e1fc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e200:	add	r3, sp, #272	; 0x110
    e204:	ldrd	r6, [sp, #16]
    e208:	strd	r4, [r3]
    e20c:	b	d884 <MyGame_Example_Monster_parse_json_table+0x3744>
    e210:	mov	fp, r9
    e214:	mov	r9, r8
    e218:	b	aab4 <MyGame_Example_Monster_parse_json_table+0x974>
    e21c:	mov	r4, r0
    e220:	mov	r1, r4
    e224:	mov	r2, r8
    e228:	mov	r0, r9
    e22c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e230:	mov	sl, r0
    e234:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e238:	mov	r1, sl
    e23c:	mov	r2, r8
    e240:	mov	r0, r9
    e244:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e248:	mov	sl, r0
    e24c:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e250:	mov	r1, sl
    e254:	mov	r2, r8
    e258:	mov	r0, r9
    e25c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e260:	mov	sl, r0
    e264:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e268:	ldr	r0, [r9]
    e26c:	bl	0 <flatcc_builder_end_offset_vector>
    e270:	cmp	r0, #0
    e274:	str	r0, [sp, #324]	; 0x144
    e278:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e27c:	mov	r1, #28
    e280:	ldr	r0, [r9]
    e284:	bl	0 <flatcc_builder_table_add_offset>
    e288:	cmp	r0, #0
    e28c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e290:	ldr	r3, [sp, #324]	; 0x144
    e294:	str	r3, [r0]
    e298:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e29c:	mov	r1, sl
    e2a0:	mov	r2, r8
    e2a4:	mov	r0, r9
    e2a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e2ac:	mov	sl, r0
    e2b0:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e2b4:	ldr	r0, [r9]
    e2b8:	bl	0 <flatcc_builder_end_vector>
    e2bc:	cmp	r0, #0
    e2c0:	str	r0, [sp, #324]	; 0x144
    e2c4:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e2c8:	mov	r1, #33	; 0x21
    e2cc:	ldr	r0, [r9]
    e2d0:	bl	0 <flatcc_builder_table_add_offset>
    e2d4:	cmp	r0, #0
    e2d8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e2dc:	ldr	r3, [sp, #324]	; 0x144
    e2e0:	str	r3, [r0]
    e2e4:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e2e8:	ldr	r0, [r9]
    e2ec:	bl	0 <flatcc_builder_end_offset_vector>
    e2f0:	cmp	r0, #0
    e2f4:	str	r0, [sp, #324]	; 0x144
    e2f8:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e2fc:	mov	r1, #10
    e300:	ldr	r0, [r9]
    e304:	bl	0 <flatcc_builder_table_add_offset>
    e308:	cmp	r0, #0
    e30c:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e310:	ldr	r3, [sp, #324]	; 0x144
    e314:	str	r3, [r0]
    e318:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e31c:	ldrb	r3, [r1, #2]
    e320:	cmp	r3, #32
    e324:	addhi	r3, r1, #2
    e328:	strhi	r3, [sp, #120]	; 0x78
    e32c:	bls	d9e4 <MyGame_Example_Monster_parse_json_table+0x38a4>
    e330:	b	c260 <MyGame_Example_Monster_parse_json_table+0x2120>
    e334:	mov	r1, r0
    e338:	mov	r3, #8
    e33c:	mov	r2, r8
    e340:	mov	r0, r9
    e344:	bl	0 <flatcc_json_parser_set_error>
    e348:	cmp	r4, r0
    e34c:	mov	sl, r0
    e350:	strb	fp, [sp, #336]	; 0x150
    e354:	bne	a4a8 <MyGame_Example_Monster_parse_json_table+0x368>
    e358:	mov	r5, r4
    e35c:	b	c15c <MyGame_Example_Monster_parse_json_table+0x201c>
    e360:	mov	r1, r0
    e364:	mov	r3, #7
    e368:	mov	r2, r8
    e36c:	mov	r0, r9
    e370:	bl	0 <flatcc_json_parser_set_error>
    e374:	ldr	r3, [sp, #16]
    e378:	cmp	r4, r0
    e37c:	mov	sl, r0
    e380:	strb	r3, [sp, #336]	; 0x150
    e384:	bne	a4a8 <MyGame_Example_Monster_parse_json_table+0x368>
    e388:	b	e358 <MyGame_Example_Monster_parse_json_table+0x4218>
    e38c:	mov	r1, r0
    e390:	ldr	r3, [pc, #-2048]	; db98 <MyGame_Example_Monster_parse_json_table+0x3a58>
    e394:	mov	r2, r8
    e398:	mov	r0, r9
    e39c:	str	fp, [sp]
    e3a0:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    e3a4:	cmp	r8, r0
    e3a8:	cmpne	sl, r0
    e3ac:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e3b0:	mov	sl, r0
    e3b4:	b	bb9c <MyGame_Example_Monster_parse_json_table+0x1a5c>
    e3b8:	mov	r1, sl
    e3bc:	mov	r2, r8
    e3c0:	mov	r0, r9
    e3c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e3c8:	mov	sl, r0
    e3cc:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e3d0:	mov	r1, r0
    e3d4:	ldr	r3, [pc, #-2112]	; db9c <MyGame_Example_Monster_parse_json_table+0x3a5c>
    e3d8:	mov	r2, r8
    e3dc:	mov	r0, r9
    e3e0:	str	fp, [sp]
    e3e4:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    e3e8:	cmp	r8, r0
    e3ec:	cmpne	sl, r0
    e3f0:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e3f4:	mov	sl, r0
    e3f8:	b	d280 <MyGame_Example_Monster_parse_json_table+0x3140>
    e3fc:	mov	r1, r0
    e400:	ldr	r3, [pc, #-2152]	; dba0 <MyGame_Example_Monster_parse_json_table+0x3a60>
    e404:	mov	r2, r8
    e408:	mov	r0, r9
    e40c:	str	r5, [sp]
    e410:	bl	44d0 <flatcc_json_parser_symbolic_int32>
    e414:	cmp	r8, r0
    e418:	cmpne	sl, r0
    e41c:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e420:	mov	sl, r0
    e424:	b	d1b4 <MyGame_Example_Monster_parse_json_table+0x3074>
    e428:	ldr	r3, [pc, #-2188]	; dba4 <MyGame_Example_Monster_parse_json_table+0x3a64>
    e42c:	mov	r2, r8
    e430:	mov	r1, r4
    e434:	mov	r0, r9
    e438:	str	r5, [sp]
    e43c:	bl	4290 <flatcc_json_parser_symbolic_uint64>
    e440:	cmp	r8, r0
    e444:	cmpne	r4, r0
    e448:	mov	sl, r0
    e44c:	bne	ccf8 <MyGame_Example_Monster_parse_json_table+0x2bb8>
    e450:	b	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e454:	mov	r1, sl
    e458:	mov	r2, r8
    e45c:	mov	r0, r9
    e460:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e464:	mov	sl, r0
    e468:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e46c:	mov	fp, r9
    e470:	mov	sl, r5
    e474:	mov	r9, r8
    e478:	b	a18c <MyGame_Example_Monster_parse_json_table+0x4c>
    e47c:	mov	r2, #1
    e480:	mvn	r3, #0
    e484:	mov	r1, r2
    e488:	bl	0 <flatcc_builder_start_vector>
    e48c:	subs	r5, r0, #0
    e490:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e494:	mov	r1, sl
    e498:	add	r3, sp, #320	; 0x140
    e49c:	mov	r2, r8
    e4a0:	mov	r0, r9
    e4a4:	bl	3b94 <flatcc_json_parser_array_start>
    e4a8:	ldr	r3, [sp, #320]	; 0x140
    e4ac:	mov	sl, r0
    e4b0:	cmp	r3, #0
    e4b4:	beq	e5a0 <MyGame_Example_Monster_parse_json_table+0x4460>
    e4b8:	ldr	fp, [pc, #-2328]	; dba8 <MyGame_Example_Monster_parse_json_table+0x3a68>
    e4bc:	b	e4ec <MyGame_Example_Monster_parse_json_table+0x43ac>
    e4c0:	ldrb	ip, [sp, #344]	; 0x158
    e4c4:	mov	r1, r0
    e4c8:	add	r3, sp, #320	; 0x140
    e4cc:	mov	r2, r8
    e4d0:	mov	r0, r9
    e4d4:	strb	ip, [r4]
    e4d8:	bl	5e0c <flatcc_json_parser_array_end>
    e4dc:	ldr	r3, [sp, #320]	; 0x140
    e4e0:	mov	sl, r0
    e4e4:	cmp	r3, #0
    e4e8:	beq	e5a0 <MyGame_Example_Monster_parse_json_table+0x4460>
    e4ec:	mov	r1, #1
    e4f0:	ldr	r0, [r9]
    e4f4:	strb	r5, [sp, #344]	; 0x158
    e4f8:	bl	0 <flatcc_builder_extend_vector>
    e4fc:	subs	r4, r0, #0
    e500:	mov	r1, sl
    e504:	add	r3, sp, #344	; 0x158
    e508:	mov	r2, r8
    e50c:	mov	r0, r9
    e510:	beq	b3c0 <MyGame_Example_Monster_parse_json_table+0x1280>
    e514:	bl	2c18 <flatcc_json_parser_uint8>
    e518:	cmp	r0, sl
    e51c:	bne	e4c0 <MyGame_Example_Monster_parse_json_table+0x4380>
    e520:	add	r1, sp, #344	; 0x158
    e524:	mov	r3, fp
    e528:	mov	r2, r8
    e52c:	mov	r0, r9
    e530:	str	r1, [sp]
    e534:	mov	r1, sl
    e538:	bl	4728 <flatcc_json_parser_symbolic_uint8>
    e53c:	cmp	r8, r0
    e540:	cmpne	r0, sl
    e544:	bne	e4c0 <MyGame_Example_Monster_parse_json_table+0x4380>
    e548:	b	b688 <MyGame_Example_Monster_parse_json_table+0x1548>
    e54c:	mov	fp, r9
    e550:	mov	r0, sl
    e554:	mov	r9, r8
    e558:	b	db00 <MyGame_Example_Monster_parse_json_table+0x39c0>
    e55c:	mov	r1, sl
    e560:	mov	r2, r8
    e564:	mov	r0, r9
    e568:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e56c:	mov	sl, r0
    e570:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>
    e574:	mov	r1, r0
    e578:	ldr	r3, [pc, #-2516]	; dbac <MyGame_Example_Monster_parse_json_table+0x3a6c>
    e57c:	mov	r2, r8
    e580:	mov	r0, r9
    e584:	str	r5, [sp]
    e588:	bl	52c4 <flatcc_json_parser_symbolic_int64>
    e58c:	cmp	r8, r0
    e590:	cmpne	sl, r0
    e594:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e598:	mov	sl, r0
    e59c:	b	dd30 <MyGame_Example_Monster_parse_json_table+0x3bf0>
    e5a0:	ldr	r0, [r9]
    e5a4:	bl	0 <flatcc_builder_end_vector>
    e5a8:	str	r0, [sp, #324]	; 0x144
    e5ac:	b	a804 <MyGame_Example_Monster_parse_json_table+0x6c4>
    e5b0:	mov	r1, r0
    e5b4:	ldr	r3, [pc, #-2572]	; dbb0 <MyGame_Example_Monster_parse_json_table+0x3a70>
    e5b8:	mov	r2, r8
    e5bc:	mov	r0, r9
    e5c0:	str	r5, [sp]
    e5c4:	bl	4e1c <flatcc_json_parser_symbolic_uint32>
    e5c8:	cmp	r8, r0
    e5cc:	cmpne	sl, r0
    e5d0:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e5d4:	mov	sl, r0
    e5d8:	b	dfa8 <MyGame_Example_Monster_parse_json_table+0x3e68>
    e5dc:	mov	r1, r0
    e5e0:	ldr	r3, [pc, #-2612]	; dbb4 <MyGame_Example_Monster_parse_json_table+0x3a74>
    e5e4:	mov	r2, r8
    e5e8:	mov	r0, r9
    e5ec:	str	r5, [sp]
    e5f0:	bl	4290 <flatcc_json_parser_symbolic_uint64>
    e5f4:	cmp	r8, r0
    e5f8:	cmpne	sl, r0
    e5fc:	beq	e608 <MyGame_Example_Monster_parse_json_table+0x44c8>
    e600:	mov	sl, r0
    e604:	b	e07c <MyGame_Example_Monster_parse_json_table+0x3f3c>
    e608:	mov	fp, r9
    e60c:	mov	r9, r8
    e610:	b	db00 <MyGame_Example_Monster_parse_json_table+0x39c0>
    e614:	add	r3, sp, #272	; 0x110
    e618:	ldrd	r6, [sp, #16]
    e61c:	strd	r4, [r3]
    e620:	b	d880 <MyGame_Example_Monster_parse_json_table+0x3740>
    e624:	mov	sl, fp
    e628:	b	aa38 <MyGame_Example_Monster_parse_json_table+0x8f8>

0000e62c <MyGame_Example_Any_parse_json_union>:
    e62c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e630:	mov	ip, #0
    e634:	mov	r5, r0
    e638:	strd	r6, [sp, #8]
    e63c:	mov	r4, r1
    e640:	mov	r6, r2
    e644:	strd	r8, [sp, #16]
    e648:	strd	sl, [sp, #24]
    e64c:	str	lr, [sp, #32]
    e650:	sub	sp, sp, #68	; 0x44
    e654:	ldr	r7, [sp, #104]	; 0x68
    e658:	str	ip, [r7]
    e65c:	cmp	r3, #4
    e660:	ldrls	pc, [pc, r3, lsl #2]
    e664:	b	ef40 <MyGame_Example_Any_parse_json_union+0x914>
    e668:	.word	0x0000e6b8
    e66c:	.word	0x0000e6e8
    e670:	.word	0x0000e6f4
    e674:	.word	0x0000e7a8
    e678:	.word	0x0000e67c
    e67c:	mov	r3, r7
    e680:	bl	7468 <MyGame_Example_Alt_parse_json_table>
    e684:	ldr	r3, [r5, #24]
    e688:	cmp	r3, #0
    e68c:	bne	e69c <MyGame_Example_Any_parse_json_union+0x70>
    e690:	ldr	r3, [r7]
    e694:	cmp	r3, #0
    e698:	beq	ed9c <MyGame_Example_Any_parse_json_union+0x770>
    e69c:	add	sp, sp, #68	; 0x44
    e6a0:	ldrd	r4, [sp]
    e6a4:	ldrd	r6, [sp, #8]
    e6a8:	ldrd	r8, [sp, #16]
    e6ac:	ldrd	sl, [sp, #24]
    e6b0:	add	sp, sp, #32
    e6b4:	pop	{pc}		; (ldr pc, [sp], #4)
    e6b8:	sub	r3, r2, r1
    e6bc:	cmp	r3, #3
    e6c0:	ble	e6d0 <MyGame_Example_Any_parse_json_union+0xa4>
    e6c4:	ldrb	r3, [r1]
    e6c8:	cmp	r3, #110	; 0x6e
    e6cc:	beq	eecc <MyGame_Example_Any_parse_json_union+0x8a0>
    e6d0:	mov	r2, r6
    e6d4:	mov	r1, r4
    e6d8:	mov	r0, r5
    e6dc:	mov	r3, #26
    e6e0:	bl	0 <flatcc_json_parser_set_error>
    e6e4:	b	e69c <MyGame_Example_Any_parse_json_union+0x70>
    e6e8:	mov	r3, r7
    e6ec:	bl	a140 <MyGame_Example_Monster_parse_json_table>
    e6f0:	b	e684 <MyGame_Example_Any_parse_json_union+0x58>
    e6f4:	mov	r1, #4
    e6f8:	ldr	r0, [r0]
    e6fc:	bl	0 <flatcc_builder_start_table>
    e700:	cmp	r0, #0
    e704:	bne	e968 <MyGame_Example_Any_parse_json_union+0x33c>
    e708:	mov	r1, r4
    e70c:	add	r3, sp, #48	; 0x30
    e710:	mov	r2, r6
    e714:	mov	r0, r5
    e718:	bl	3ac0 <flatcc_json_parser_object_start>
    e71c:	ldr	r3, [sp, #48]	; 0x30
    e720:	mov	r4, r0
    e724:	cmp	r3, #0
    e728:	beq	e944 <MyGame_Example_Any_parse_json_union+0x318>
    e72c:	mov	r9, #0
    e730:	movt	r9, #65535	; 0xffff
    e734:	str	r9, [sp, #28]
    e738:	str	r7, [sp, #104]	; 0x68
    e73c:	cmp	r6, r4
    e740:	beq	e76c <MyGame_Example_Any_parse_json_union+0x140>
    e744:	ldrb	r3, [r4]
    e748:	cmp	r3, #34	; 0x22
    e74c:	moveq	r3, #0
    e750:	addeq	r4, r4, #1
    e754:	streq	r3, [r5, #12]
    e758:	beq	e76c <MyGame_Example_Any_parse_json_union+0x140>
    e75c:	cmp	r3, #46	; 0x2e
    e760:	movne	r3, #1
    e764:	strne	r3, [r5, #12]
    e768:	beq	ece8 <MyGame_Example_Any_parse_json_union+0x6bc>
    e76c:	sub	ip, r6, r4
    e770:	cmp	ip, #8
    e774:	bhi	e7b4 <MyGame_Example_Any_parse_json_union+0x188>
    e778:	sub	r3, ip, #1
    e77c:	cmp	r3, #7
    e780:	ldrls	pc, [pc, r3, lsl #2]
    e784:	b	eaac <MyGame_Example_Any_parse_json_union+0x480>
    e788:	.word	0x0000e9c8
    e78c:	.word	0x0000e98c
    e790:	.word	0x0000e9bc
    e794:	.word	0x0000e9b0
    e798:	.word	0x0000e9a4
    e79c:	.word	0x0000e998
    e7a0:	.word	0x0000e980
    e7a4:	.word	0x0000e7b4
    e7a8:	mov	r3, r7
    e7ac:	bl	6928 <MyGame_Example2_Monster_parse_json_table>
    e7b0:	b	e684 <MyGame_Example_Any_parse_json_union+0x58>
    e7b4:	ldrb	r8, [r4, #7]
    e7b8:	mov	r9, #0
    e7bc:	mov	r3, r9
    e7c0:	ldrb	r0, [r4, #6]
    e7c4:	orr	r2, r8, r0, lsl #8
    e7c8:	ldrb	r0, [r4, #5]
    e7cc:	mov	lr, r3
    e7d0:	orr	r1, r2, r0, lsl #16
    e7d4:	ldrb	r2, [r4, #4]
    e7d8:	orr	r2, r1, r2, lsl #24
    e7dc:	ldrb	r0, [r4, #3]
    e7e0:	orr	r3, lr, r0
    e7e4:	ldrb	r0, [r4, #2]
    e7e8:	orr	r3, r3, r0, lsl #8
    e7ec:	ldrb	r0, [r4, #1]
    e7f0:	mov	r8, #0
    e7f4:	ldr	lr, [sp, #28]
    e7f8:	orr	r3, r3, r0, lsl #16
    e7fc:	ldrb	r0, [r4]
    e800:	and	sl, r2, lr
    e804:	mov	lr, r2
    e808:	orr	r0, r3, r0, lsl #24
    e80c:	add	r3, pc, #948	; 0x3b4
    e810:	ldrd	r2, [r3]
    e814:	cmp	r0, r3
    e818:	cmpeq	sl, r2
    e81c:	beq	e9d8 <MyGame_Example_Any_parse_json_union+0x3ac>
    e820:	and	r3, lr, #-16777216	; 0xff000000
    e824:	add	r9, pc, #932	; 0x3a4
    e828:	ldrd	r8, [r9]
    e82c:	str	r3, [sp, #8]
    e830:	str	r0, [sp, #12]
    e834:	ldrd	r2, [sp, #8]
    e838:	cmp	r3, r9
    e83c:	cmpeq	r2, r8
    e840:	bne	eac4 <MyGame_Example_Any_parse_json_union+0x498>
    e844:	cmp	ip, #5
    e848:	ble	eaac <MyGame_Example_Any_parse_json_union+0x480>
    e84c:	mov	r3, #5
    e850:	mov	r2, r6
    e854:	mov	r1, r4
    e858:	mov	r0, r5
    e85c:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    e860:	cmp	r0, r4
    e864:	mov	r7, r0
    e868:	beq	eaac <MyGame_Example_Any_parse_json_union+0x480>
    e86c:	mov	r3, #0
    e870:	cmp	r6, r0
    e874:	mov	r1, #0
    e878:	mov	r0, #0
    e87c:	strb	r3, [sp, #47]	; 0x2f
    e880:	str	r3, [sp, #52]	; 0x34
    e884:	strd	r0, [sp, #56]	; 0x38
    e888:	beq	ece0 <MyGame_Example_Any_parse_json_union+0x6b4>
    e88c:	add	r0, sp, #56	; 0x38
    e890:	add	r3, sp, #52	; 0x34
    e894:	mov	r2, r6
    e898:	mov	r1, r7
    e89c:	str	r0, [sp]
    e8a0:	mov	r0, r5
    e8a4:	bl	0 <flatcc_json_parser_integer>
    e8a8:	cmp	r7, r0
    e8ac:	mov	r4, r0
    e8b0:	bne	ed48 <MyGame_Example_Any_parse_json_union+0x71c>
    e8b4:	add	ip, sp, #47	; 0x2f
    e8b8:	ldr	r3, [pc, #800]	; ebe0 <MyGame_Example_Any_parse_json_union+0x5b4>
    e8bc:	mov	r2, r6
    e8c0:	mov	r1, r4
    e8c4:	mov	r0, r5
    e8c8:	str	ip, [sp]
    e8cc:	bl	5060 <flatcc_json_parser_symbolic_int8>
    e8d0:	cmp	r6, r0
    e8d4:	cmpne	r0, r4
    e8d8:	beq	ef34 <MyGame_Example_Any_parse_json_union+0x908>
    e8dc:	ldrsb	r2, [sp, #47]	; 0x2f
    e8e0:	mov	r4, r0
    e8e4:	cmp	r2, #2
    e8e8:	bne	e8f8 <MyGame_Example_Any_parse_json_union+0x2cc>
    e8ec:	ldr	r3, [r5, #8]
    e8f0:	tst	r3, #2
    e8f4:	beq	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    e8f8:	mov	r3, #1
    e8fc:	mov	r1, #0
    e900:	ldr	r0, [r5]
    e904:	mov	r2, r3
    e908:	bl	0 <flatcc_builder_table_add>
    e90c:	cmp	r0, #0
    e910:	beq	eaa4 <MyGame_Example_Any_parse_json_union+0x478>
    e914:	ldrsb	r3, [sp, #47]	; 0x2f
    e918:	strb	r3, [r0]
    e91c:	mov	r1, r4
    e920:	add	r3, sp, #48	; 0x30
    e924:	mov	r2, r6
    e928:	mov	r0, r5
    e92c:	bl	5c48 <flatcc_json_parser_object_end>
    e930:	ldr	r3, [sp, #48]	; 0x30
    e934:	mov	r4, r0
    e938:	cmp	r3, #0
    e93c:	bne	e73c <MyGame_Example_Any_parse_json_union+0x110>
    e940:	ldr	r7, [sp, #104]	; 0x68
    e944:	ldr	r3, [r5, #24]
    e948:	cmp	r3, #0
    e94c:	bne	e968 <MyGame_Example_Any_parse_json_union+0x33c>
    e950:	ldr	r0, [r5]
    e954:	bl	0 <flatcc_builder_end_table>
    e958:	cmp	r0, #0
    e95c:	str	r0, [r7]
    e960:	movne	r0, r4
    e964:	bne	e684 <MyGame_Example_Any_parse_json_union+0x58>
    e968:	mov	r1, r4
    e96c:	mov	r3, #33	; 0x21
    e970:	mov	r2, r6
    e974:	mov	r0, r5
    e978:	bl	0 <flatcc_json_parser_set_error>
    e97c:	b	e684 <MyGame_Example_Any_parse_json_union+0x58>
    e980:	mov	r8, #0
    e984:	mov	r9, #0
    e988:	b	e7bc <MyGame_Example_Any_parse_json_union+0x190>
    e98c:	mov	r2, #0
    e990:	mov	r3, r2
    e994:	b	e7ec <MyGame_Example_Any_parse_json_union+0x1c0>
    e998:	mov	r2, #0
    e99c:	mov	r3, r2
    e9a0:	b	e7c8 <MyGame_Example_Any_parse_json_union+0x19c>
    e9a4:	mov	r1, #0
    e9a8:	mov	lr, r1
    e9ac:	b	e7d4 <MyGame_Example_Any_parse_json_union+0x1a8>
    e9b0:	mov	r2, #0
    e9b4:	mov	lr, r2
    e9b8:	b	e7dc <MyGame_Example_Any_parse_json_union+0x1b0>
    e9bc:	mov	r2, #0
    e9c0:	mov	r3, r2
    e9c4:	b	e7e4 <MyGame_Example_Any_parse_json_union+0x1b8>
    e9c8:	ldrb	r0, [r4]
    e9cc:	mov	lr, #0
    e9d0:	lsl	r0, r0, #24
    e9d4:	b	e820 <MyGame_Example_Any_parse_json_union+0x1f4>
    e9d8:	cmp	ip, #6
    e9dc:	ble	eaac <MyGame_Example_Any_parse_json_union+0x480>
    e9e0:	mov	r3, #6
    e9e4:	mov	r2, r6
    e9e8:	mov	r1, r4
    e9ec:	mov	r0, r5
    e9f0:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    e9f4:	cmp	r0, r4
    e9f8:	mov	r7, r0
    e9fc:	beq	eaac <MyGame_Example_Any_parse_json_union+0x480>
    ea00:	mov	r2, #0
    ea04:	mov	r3, #0
    ea08:	strb	r8, [sp, #47]	; 0x2f
    ea0c:	cmp	r6, r0
    ea10:	str	r8, [sp, #52]	; 0x34
    ea14:	strd	r2, [sp, #56]	; 0x38
    ea18:	beq	ecd8 <MyGame_Example_Any_parse_json_union+0x6ac>
    ea1c:	add	r0, sp, #56	; 0x38
    ea20:	add	r3, sp, #52	; 0x34
    ea24:	mov	r2, r6
    ea28:	mov	r1, r7
    ea2c:	str	r0, [sp]
    ea30:	mov	r0, r5
    ea34:	bl	0 <flatcc_json_parser_integer>
    ea38:	cmp	r7, r0
    ea3c:	mov	r4, r0
    ea40:	bne	ed04 <MyGame_Example_Any_parse_json_union+0x6d8>
    ea44:	add	ip, sp, #47	; 0x2f
    ea48:	ldr	r3, [pc, #404]	; ebe4 <MyGame_Example_Any_parse_json_union+0x5b8>
    ea4c:	mov	r2, r6
    ea50:	mov	r1, r4
    ea54:	mov	r0, r5
    ea58:	str	ip, [sp]
    ea5c:	bl	5060 <flatcc_json_parser_symbolic_int8>
    ea60:	cmp	r6, r0
    ea64:	cmpne	r0, r4
    ea68:	beq	ef34 <MyGame_Example_Any_parse_json_union+0x908>
    ea6c:	ldrsb	r2, [sp, #47]	; 0x2f
    ea70:	mov	r4, r0
    ea74:	cmp	r2, #2
    ea78:	bne	ea88 <MyGame_Example_Any_parse_json_union+0x45c>
    ea7c:	ldr	r3, [r5, #8]
    ea80:	tst	r3, #2
    ea84:	beq	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    ea88:	mov	r3, #1
    ea8c:	ldr	r0, [r5]
    ea90:	mov	r2, r3
    ea94:	mov	r1, r3
    ea98:	bl	0 <flatcc_builder_table_add>
    ea9c:	cmp	r0, #0
    eaa0:	bne	e914 <MyGame_Example_Any_parse_json_union+0x2e8>
    eaa4:	ldr	r7, [sp, #104]	; 0x68
    eaa8:	b	e968 <MyGame_Example_Any_parse_json_union+0x33c>
    eaac:	mov	r1, r4
    eab0:	mov	r2, r6
    eab4:	mov	r0, r5
    eab8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eabc:	mov	r4, r0
    eac0:	b	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    eac4:	bic	r3, r0, #255	; 0xff
    eac8:	mov	r7, #0
    eacc:	add	r9, pc, #260	; 0x104
    ead0:	ldrd	r8, [r9]
    ead4:	str	r7, [sp, #16]
    ead8:	str	r3, [sp, #20]
    eadc:	ldrd	r2, [sp, #16]
    eae0:	cmp	r3, r9
    eae4:	cmpeq	r2, r8
    eae8:	bne	ebf0 <MyGame_Example_Any_parse_json_union+0x5c4>
    eaec:	cmp	ip, #3
    eaf0:	ble	eaac <MyGame_Example_Any_parse_json_union+0x480>
    eaf4:	mov	r3, #3
    eaf8:	mov	r2, r6
    eafc:	mov	r1, r4
    eb00:	mov	r0, r5
    eb04:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    eb08:	cmp	r0, r4
    eb0c:	mov	r8, r0
    eb10:	beq	eaac <MyGame_Example_Any_parse_json_union+0x480>
    eb14:	mov	r2, #0
    eb18:	mov	r3, #0
    eb1c:	strb	r7, [sp, #47]	; 0x2f
    eb20:	cmp	r6, r0
    eb24:	str	r7, [sp, #52]	; 0x34
    eb28:	strd	r2, [sp, #56]	; 0x38
    eb2c:	beq	ed8c <MyGame_Example_Any_parse_json_union+0x760>
    eb30:	add	r0, sp, #56	; 0x38
    eb34:	add	r3, sp, #52	; 0x34
    eb38:	mov	r2, r6
    eb3c:	mov	r1, r8
    eb40:	str	r0, [sp]
    eb44:	mov	r0, r5
    eb48:	bl	0 <flatcc_json_parser_integer>
    eb4c:	cmp	r8, r0
    eb50:	mov	r7, r0
    eb54:	bne	edb4 <MyGame_Example_Any_parse_json_union+0x788>
    eb58:	add	ip, sp, #47	; 0x2f
    eb5c:	ldr	r3, [pc, #132]	; ebe8 <MyGame_Example_Any_parse_json_union+0x5bc>
    eb60:	mov	r2, r6
    eb64:	mov	r1, r7
    eb68:	mov	r0, r5
    eb6c:	str	ip, [sp]
    eb70:	bl	4728 <flatcc_json_parser_symbolic_uint8>
    eb74:	cmp	r6, r0
    eb78:	cmpne	r0, r7
    eb7c:	mov	r4, r0
    eb80:	beq	eaa4 <MyGame_Example_Any_parse_json_union+0x478>
    eb84:	ldrb	r2, [sp, #47]	; 0x2f
    eb88:	cmp	r2, #2
    eb8c:	bne	eb9c <MyGame_Example_Any_parse_json_union+0x570>
    eb90:	ldr	r3, [r5, #8]
    eb94:	tst	r3, #2
    eb98:	beq	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    eb9c:	mov	r3, #1
    eba0:	mov	r1, #3
    eba4:	mov	r2, r3
    eba8:	ldr	r0, [r5]
    ebac:	bl	0 <flatcc_builder_table_add>
    ebb0:	cmp	r0, #0
    ebb4:	beq	eaa4 <MyGame_Example_Any_parse_json_union+0x478>
    ebb8:	ldrb	r3, [sp, #47]	; 0x2f
    ebbc:	strb	r3, [r0]
    ebc0:	b	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    ebc4:	nop	{0}
    ebc8:	.word	0x72320000
    ebcc:	.word	0x636f6c6f
    ebd0:	.word	0x72000000
    ebd4:	.word	0x636f6c6f
    ebd8:	.word	0x00000000
    ebdc:	.word	0x75633200
    ebe0:	.word	0x000002a4
    ebe4:	.word	0x00000294
    ebe8:	.word	0x000002b4
    ebec:	.word	0x000002c0
    ebf0:	ldr	r3, [sp, #28]
    ebf4:	mov	r1, #0
    ebf8:	movt	r1, #30051	; 0x7563
    ebfc:	str	r7, [sp, #32]
    ec00:	and	r3, r0, r3
    ec04:	mov	r0, #0
    ec08:	str	r3, [sp, #36]	; 0x24
    ec0c:	ldrd	r2, [sp, #32]
    ec10:	cmp	r3, r1
    ec14:	cmpeq	r2, r0
    ec18:	bne	eaac <MyGame_Example_Any_parse_json_union+0x480>
    ec1c:	cmp	ip, #2
    ec20:	ble	eaac <MyGame_Example_Any_parse_json_union+0x480>
    ec24:	mov	r3, #2
    ec28:	mov	r2, r6
    ec2c:	mov	r1, r4
    ec30:	mov	r0, r5
    ec34:	bl	6b04 <flatcc_json_parser_match_symbol.part.34>
    ec38:	cmp	r0, r4
    ec3c:	mov	r8, r0
    ec40:	beq	eaac <MyGame_Example_Any_parse_json_union+0x480>
    ec44:	mov	r2, #0
    ec48:	mov	r3, #0
    ec4c:	strb	r7, [sp, #47]	; 0x2f
    ec50:	cmp	r6, r0
    ec54:	str	r7, [sp, #52]	; 0x34
    ec58:	strd	r2, [sp, #56]	; 0x38
    ec5c:	beq	ed94 <MyGame_Example_Any_parse_json_union+0x768>
    ec60:	add	r0, sp, #56	; 0x38
    ec64:	add	r3, sp, #52	; 0x34
    ec68:	mov	r2, r6
    ec6c:	mov	r1, r8
    ec70:	str	r0, [sp]
    ec74:	mov	r0, r5
    ec78:	bl	0 <flatcc_json_parser_integer>
    ec7c:	cmp	r8, r0
    ec80:	mov	r7, r0
    ec84:	bne	ee04 <MyGame_Example_Any_parse_json_union+0x7d8>
    ec88:	add	ip, sp, #47	; 0x2f
    ec8c:	ldr	r3, [pc, #-168]	; ebec <MyGame_Example_Any_parse_json_union+0x5c0>
    ec90:	mov	r2, r6
    ec94:	mov	r1, r7
    ec98:	mov	r0, r5
    ec9c:	str	ip, [sp]
    eca0:	bl	4728 <flatcc_json_parser_symbolic_uint8>
    eca4:	cmp	r6, r0
    eca8:	cmpne	r0, r7
    ecac:	mov	r4, r0
    ecb0:	beq	eaa4 <MyGame_Example_Any_parse_json_union+0x478>
    ecb4:	ldrb	r2, [sp, #47]	; 0x2f
    ecb8:	cmp	r2, #2
    ecbc:	bne	eccc <MyGame_Example_Any_parse_json_union+0x6a0>
    ecc0:	ldr	r3, [r5, #8]
    ecc4:	tst	r3, #2
    ecc8:	beq	e91c <MyGame_Example_Any_parse_json_union+0x2f0>
    eccc:	mov	r3, #1
    ecd0:	mov	r1, #2
    ecd4:	b	eba4 <MyGame_Example_Any_parse_json_union+0x578>
    ecd8:	mov	r4, r6
    ecdc:	b	ea44 <MyGame_Example_Any_parse_json_union+0x418>
    ece0:	mov	r4, r6
    ece4:	b	e8b4 <MyGame_Example_Any_parse_json_union+0x288>
    ece8:	mov	r1, r4
    ecec:	mov	r3, #5
    ecf0:	mov	r2, r6
    ecf4:	mov	r0, r5
    ecf8:	bl	0 <flatcc_json_parser_set_error>
    ecfc:	mov	r4, r0
    ed00:	b	e76c <MyGame_Example_Any_parse_json_union+0x140>
    ed04:	ldr	r1, [sp, #52]	; 0x34
    ed08:	ldrd	r2, [sp, #56]	; 0x38
    ed0c:	cmp	r1, #0
    ed10:	beq	ee54 <MyGame_Example_Any_parse_json_union+0x828>
    ed14:	cmp	r3, #0
    ed18:	cmpeq	r2, #128	; 0x80
    ed1c:	rsbls	r2, r2, #0
    ed20:	sxtbls	r2, r2
    ed24:	strbls	r2, [sp, #47]	; 0x2f
    ed28:	bls	ea74 <MyGame_Example_Any_parse_json_union+0x448>
    ed2c:	mov	r1, r0
    ed30:	mov	r3, #8
    ed34:	mov	r2, r6
    ed38:	mov	r0, r5
    ed3c:	bl	0 <flatcc_json_parser_set_error>
    ed40:	mov	r4, r0
    ed44:	b	ee80 <MyGame_Example_Any_parse_json_union+0x854>
    ed48:	ldr	r1, [sp, #52]	; 0x34
    ed4c:	ldrd	r2, [sp, #56]	; 0x38
    ed50:	cmp	r1, #0
    ed54:	beq	ee90 <MyGame_Example_Any_parse_json_union+0x864>
    ed58:	cmp	r3, #0
    ed5c:	cmpeq	r2, #128	; 0x80
    ed60:	rsbls	r2, r2, #0
    ed64:	sxtbls	r2, r2
    ed68:	strbls	r2, [sp, #47]	; 0x2f
    ed6c:	bls	e8e4 <MyGame_Example_Any_parse_json_union+0x2b8>
    ed70:	mov	r1, r0
    ed74:	mov	r3, #8
    ed78:	mov	r2, r6
    ed7c:	mov	r0, r5
    ed80:	bl	0 <flatcc_json_parser_set_error>
    ed84:	mov	r4, r0
    ed88:	b	eebc <MyGame_Example_Any_parse_json_union+0x890>
    ed8c:	mov	r7, r6
    ed90:	b	eb58 <MyGame_Example_Any_parse_json_union+0x52c>
    ed94:	mov	r7, r6
    ed98:	b	ec88 <MyGame_Example_Any_parse_json_union+0x65c>
    ed9c:	mov	r1, r0
    eda0:	mov	r2, r6
    eda4:	mov	r0, r5
    eda8:	mov	r3, #33	; 0x21
    edac:	bl	0 <flatcc_json_parser_set_error>
    edb0:	b	e69c <MyGame_Example_Any_parse_json_union+0x70>
    edb4:	ldr	r3, [sp, #52]	; 0x34
    edb8:	cmp	r3, #0
    edbc:	bne	eefc <MyGame_Example_Any_parse_json_union+0x8d0>
    edc0:	ldrd	r2, [sp, #56]	; 0x38
    edc4:	cmp	r3, #0
    edc8:	cmpeq	r2, #255	; 0xff
    edcc:	uxtbls	r2, r2
    edd0:	movls	r4, r0
    edd4:	strbls	r2, [sp, #47]	; 0x2f
    edd8:	bls	eb88 <MyGame_Example_Any_parse_json_union+0x55c>
    eddc:	mov	r1, r0
    ede0:	mov	r3, #7
    ede4:	mov	r2, r6
    ede8:	mov	r0, r5
    edec:	bl	0 <flatcc_json_parser_set_error>
    edf0:	mov	r4, r0
    edf4:	cmp	r8, r4
    edf8:	bne	eb84 <MyGame_Example_Any_parse_json_union+0x558>
    edfc:	mov	r7, r8
    ee00:	b	eb58 <MyGame_Example_Any_parse_json_union+0x52c>
    ee04:	ldr	r3, [sp, #52]	; 0x34
    ee08:	cmp	r3, #0
    ee0c:	bne	ef18 <MyGame_Example_Any_parse_json_union+0x8ec>
    ee10:	ldrd	r2, [sp, #56]	; 0x38
    ee14:	cmp	r3, #0
    ee18:	cmpeq	r2, #255	; 0xff
    ee1c:	uxtbls	r2, r2
    ee20:	movls	r4, r0
    ee24:	strbls	r2, [sp, #47]	; 0x2f
    ee28:	bls	ecb8 <MyGame_Example_Any_parse_json_union+0x68c>
    ee2c:	mov	r1, r0
    ee30:	mov	r3, #7
    ee34:	mov	r2, r6
    ee38:	mov	r0, r5
    ee3c:	bl	0 <flatcc_json_parser_set_error>
    ee40:	mov	r4, r0
    ee44:	cmp	r8, r4
    ee48:	bne	ecb4 <MyGame_Example_Any_parse_json_union+0x688>
    ee4c:	mov	r7, r8
    ee50:	b	ec88 <MyGame_Example_Any_parse_json_union+0x65c>
    ee54:	cmp	r3, #0
    ee58:	cmpeq	r2, #127	; 0x7f
    ee5c:	sxtbls	r2, r2
    ee60:	strbls	r2, [sp, #47]	; 0x2f
    ee64:	bls	ea74 <MyGame_Example_Any_parse_json_union+0x448>
    ee68:	mov	r1, r0
    ee6c:	mov	r3, #7
    ee70:	mov	r2, r6
    ee74:	mov	r0, r5
    ee78:	bl	0 <flatcc_json_parser_set_error>
    ee7c:	mov	r4, r0
    ee80:	cmp	r7, r4
    ee84:	beq	ea44 <MyGame_Example_Any_parse_json_union+0x418>
    ee88:	ldrsb	r2, [sp, #47]	; 0x2f
    ee8c:	b	ea74 <MyGame_Example_Any_parse_json_union+0x448>
    ee90:	cmp	r3, #0
    ee94:	cmpeq	r2, #127	; 0x7f
    ee98:	sxtbls	r2, r2
    ee9c:	strbls	r2, [sp, #47]	; 0x2f
    eea0:	bls	e8e4 <MyGame_Example_Any_parse_json_union+0x2b8>
    eea4:	mov	r1, r0
    eea8:	mov	r3, #7
    eeac:	mov	r2, r6
    eeb0:	mov	r0, r5
    eeb4:	bl	0 <flatcc_json_parser_set_error>
    eeb8:	mov	r4, r0
    eebc:	cmp	r7, r4
    eec0:	beq	e8b4 <MyGame_Example_Any_parse_json_union+0x288>
    eec4:	ldrsb	r2, [sp, #47]	; 0x2f
    eec8:	b	e8e4 <MyGame_Example_Any_parse_json_union+0x2b8>
    eecc:	ldrb	r3, [r1, #1]
    eed0:	add	r2, r1, #1
    eed4:	cmp	r3, #117	; 0x75
    eed8:	bne	e6d0 <MyGame_Example_Any_parse_json_union+0xa4>
    eedc:	ldrb	r3, [r2, #1]!
    eee0:	cmp	r3, #108	; 0x6c
    eee4:	bne	e6d0 <MyGame_Example_Any_parse_json_union+0xa4>
    eee8:	ldrb	r3, [r2, #1]
    eeec:	cmp	r3, #108	; 0x6c
    eef0:	addeq	r0, r1, #4
    eef4:	bne	e6d0 <MyGame_Example_Any_parse_json_union+0xa4>
    eef8:	b	e69c <MyGame_Example_Any_parse_json_union+0x70>
    eefc:	mov	r1, r0
    ef00:	mov	r3, #8
    ef04:	mov	r2, r6
    ef08:	mov	r0, r5
    ef0c:	bl	0 <flatcc_json_parser_set_error>
    ef10:	mov	r4, r0
    ef14:	b	edf4 <MyGame_Example_Any_parse_json_union+0x7c8>
    ef18:	mov	r1, r0
    ef1c:	mov	r3, #8
    ef20:	mov	r2, r6
    ef24:	mov	r0, r5
    ef28:	bl	0 <flatcc_json_parser_set_error>
    ef2c:	mov	r4, r0
    ef30:	b	ee44 <MyGame_Example_Any_parse_json_union+0x818>
    ef34:	mov	r4, r0
    ef38:	ldr	r7, [sp, #104]	; 0x68
    ef3c:	b	e968 <MyGame_Example_Any_parse_json_union+0x33c>
    ef40:	ldr	r3, [r0, #8]
    ef44:	tst	r3, #1
    ef48:	bne	ef58 <MyGame_Example_Any_parse_json_union+0x92c>
    ef4c:	mov	r3, #15
    ef50:	bl	0 <flatcc_json_parser_set_error>
    ef54:	b	e69c <MyGame_Example_Any_parse_json_union+0x70>
    ef58:	bl	0 <flatcc_json_parser_generic_json>
    ef5c:	b	e69c <MyGame_Example_Any_parse_json_union+0x70>

0000ef60 <test_json>:
    ef60:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ef64:	mov	r5, r0
    ef68:	strd	r6, [sp, #8]
    ef6c:	mov	r7, r3
    ef70:	mov	r6, r1
    ef74:	strd	r8, [sp, #16]
    ef78:	mov	r8, r2
    ef7c:	strd	sl, [sp, #24]
    ef80:	str	lr, [sp, #32]
    ef84:	sub	sp, sp, #380	; 0x17c
    ef88:	add	r0, sp, #144	; 0x90
    ef8c:	ldr	r9, [sp, #416]	; 0x1a0
    ef90:	ldr	r4, [sp, #420]	; 0x1a4
    ef94:	bl	0 <flatcc_builder_init>
    ef98:	mov	r1, #0
    ef9c:	add	r0, sp, #96	; 0x60
    efa0:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
    efa4:	ubfx	r3, r4, #3, #1
    efa8:	tst	r4, #16
    efac:	and	r0, r4, #1
    efb0:	ubfx	r1, r4, #1, #1
    efb4:	ubfx	r2, r4, #2, #1
    efb8:	strb	r0, [sp, #122]	; 0x7a
    efbc:	strb	r3, [sp, #125]	; 0x7d
    efc0:	movne	r3, #2
    efc4:	strb	r1, [sp, #123]	; 0x7b
    efc8:	strbne	r3, [sp, #121]	; 0x79
    efcc:	tst	r4, #32
    efd0:	strb	r2, [sp, #124]	; 0x7c
    efd4:	beq	efe8 <test_json+0x88>
    efd8:	mov	r2, #2
    efdc:	mov	r3, #1
    efe0:	strb	r2, [sp, #121]	; 0x79
    efe4:	strh	r3, [sp, #122]	; 0x7a
    efe8:	mov	r0, r6
    efec:	bl	0 <strlen>
    eff0:	ldr	lr, [r5]
    eff4:	mov	r3, r0
    eff8:	mov	r2, r6
    effc:	str	r9, [sp]
    f000:	add	r1, sp, #52	; 0x34
    f004:	add	r0, sp, #144	; 0x90
    f008:	ldr	ip, [r5, #4]
    f00c:	str	lr, [sp, #4]
    f010:	str	ip, [sp, #8]
    f014:	bl	0 <flatcc_json_parser_table_as_root>
    f018:	cmp	r0, r7
    f01c:	bne	f220 <test_json+0x2c0>
    f020:	cmp	r7, #0
    f024:	movne	r4, #0
    f028:	movne	r5, r4
    f02c:	beq	f068 <test_json+0x108>
    f030:	mov	r0, r4
    f034:	bl	0 <flatcc_builder_aligned_free>
    f038:	add	r0, sp, #144	; 0x90
    f03c:	bl	0 <flatcc_builder_clear>
    f040:	add	r0, sp, #96	; 0x60
    f044:	bl	0 <flatcc_json_printer_clear>
    f048:	mov	r0, r5
    f04c:	add	sp, sp, #380	; 0x17c
    f050:	ldrd	r4, [sp]
    f054:	ldrd	r6, [sp, #8]
    f058:	ldrd	r8, [sp, #16]
    f05c:	ldrd	sl, [sp, #24]
    f060:	add	sp, sp, #32
    f064:	pop	{pc}		; (ldr pc, [sp], #4)
    f068:	add	r1, sp, #24
    f06c:	add	r0, sp, #144	; 0x90
    f070:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    f074:	ldr	r2, [r5]
    f078:	mov	r4, r0
    f07c:	ldr	r3, [r5, #12]
    f080:	ldr	r1, [sp, #24]
    f084:	bl	0 <flatcc_verify_table_as_root>
    f088:	cmp	r0, #0
    f08c:	bne	f37c <test_json+0x41c>
    f090:	mov	r1, r4
    f094:	add	r0, sp, #96	; 0x60
    f098:	ldr	r3, [r5]
    f09c:	ldr	ip, [r5, #8]
    f0a0:	ldr	r2, [sp, #24]
    f0a4:	str	ip, [sp]
    f0a8:	bl	0 <flatcc_json_printer_table_as_root>
    f0ac:	add	r1, sp, #28
    f0b0:	add	r0, sp, #96	; 0x60
    f0b4:	bl	0 <flatcc_json_printer_get_buffer>
    f0b8:	subs	r6, r0, #0
    f0bc:	beq	f0d4 <test_json+0x174>
    f0c0:	mov	r1, r6
    f0c4:	mov	r0, r8
    f0c8:	bl	0 <strcmp>
    f0cc:	subs	r5, r0, #0
    f0d0:	beq	f030 <test_json+0xd0>
    f0d4:	movw	r5, #0
    f0d8:	movt	r5, #0
    f0dc:	ldr	r2, [sp, #424]	; 0x1a8
    f0e0:	movw	r1, #0
    f0e4:	movt	r1, #0
    f0e8:	ldr	r0, [r5]
    f0ec:	bl	0 <fprintf>
    f0f0:	mov	r2, r6
    f0f4:	movw	r1, #0
    f0f8:	movt	r1, #0
    f0fc:	ldr	r0, [r5]
    f100:	bl	0 <fprintf>
    f104:	mov	r2, #10
    f108:	mov	r1, #1
    f10c:	ldr	r3, [r5]
    f110:	movw	r0, #0
    f114:	movt	r0, #0
    f118:	bl	0 <fwrite>
    f11c:	movw	r1, #0
    f120:	movt	r1, #0
    f124:	ldr	r0, [r5]
    f128:	mov	r2, r8
    f12c:	bl	0 <fprintf>
    f130:	cmp	r4, #0
    f134:	beq	f2fc <test_json+0x39c>
    f138:	ldr	r7, [r5]
    f13c:	movw	r2, #0
    f140:	movt	r2, #0
    f144:	movw	r1, #0
    f148:	movt	r1, #0
    f14c:	ldr	r6, [sp, #24]
    f150:	mov	r0, r7
    f154:	bl	0 <fprintf>
    f158:	cmp	r6, #0
    f15c:	beq	f2e0 <test_json+0x380>
    f160:	add	r2, sp, #32
    f164:	mov	sl, #0
    f168:	movw	r3, #0
    f16c:	movt	r3, #0
    f170:	movw	fp, #0
    f174:	movt	fp, #0
    f178:	str	r2, [sp, #16]
    f17c:	movw	r9, #0
    f180:	movt	r9, #0
    f184:	str	r4, [sp, #20]
    f188:	sub	r8, r4, #1
    f18c:	mov	r4, sl
    f190:	mov	sl, r3
    f194:	b	f200 <test_json+0x2a0>
    f198:	cmp	r4, #0
    f19c:	mov	r1, sl
    f1a0:	ldr	r2, [sp, #16]
    f1a4:	mov	r0, r7
    f1a8:	beq	f1b0 <test_json+0x250>
    f1ac:	bl	0 <fprintf>
    f1b0:	mov	r2, r4
    f1b4:	mov	r1, fp
    f1b8:	mov	r0, r7
    f1bc:	bl	0 <fprintf>
    f1c0:	ldrb	r2, [r8, #1]!
    f1c4:	mov	r1, r9
    f1c8:	mov	r0, r7
    f1cc:	bl	0 <fprintf>
    f1d0:	add	r3, sp, #376	; 0x178
    f1d4:	mov	r1, #0
    f1d8:	add	r5, r3, r5
    f1dc:	add	r4, r4, #1
    f1e0:	ldrb	r2, [r8]
    f1e4:	strb	r1, [r5, #-343]	; 0xfffffea9
    f1e8:	sub	r1, r2, #32
    f1ec:	cmp	r1, #94	; 0x5e
    f1f0:	movhi	r2, #46	; 0x2e
    f1f4:	cmp	r6, r4
    f1f8:	strb	r2, [r5, #-344]	; 0xfffffea8
    f1fc:	beq	f344 <test_json+0x3e4>
    f200:	ands	r5, r4, #15
    f204:	beq	f198 <test_json+0x238>
    f208:	tst	r4, #7
    f20c:	bne	f1c0 <test_json+0x260>
    f210:	mov	r1, r7
    f214:	mov	r0, #32
    f218:	bl	0 <fputc>
    f21c:	b	f1c0 <test_json+0x260>
    f220:	movw	r5, #0
    f224:	movt	r5, #0
    f228:	cmp	r7, #0
    f22c:	ldr	r4, [r5]
    f230:	beq	f328 <test_json+0x3c8>
    f234:	cmp	r0, #0
    f238:	beq	f304 <test_json+0x3a4>
    f23c:	bl	0 <flatcc_json_parser_error_string>
    f240:	mov	r3, r0
    f244:	movw	r1, #0
    f248:	movt	r1, #0
    f24c:	mov	r0, r4
    f250:	ldr	r2, [sp, #424]	; 0x1a8
    f254:	bl	0 <fprintf>
    f258:	ldr	r4, [r5]
    f25c:	mov	r0, r7
    f260:	bl	0 <flatcc_json_parser_error_string>
    f264:	mov	r2, r0
    f268:	movw	r1, #0
    f26c:	movt	r1, #0
    f270:	mov	r0, r4
    f274:	bl	0 <fprintf>
    f278:	mov	r2, r6
    f27c:	movw	r1, #0
    f280:	movt	r1, #0
    f284:	ldr	r0, [r5]
    f288:	bl	0 <fprintf>
    f28c:	ldr	r3, [sp, #72]	; 0x48
    f290:	cmp	r3, #1
    f294:	movgt	r4, #0
    f298:	ble	f2bc <test_json+0x35c>
    f29c:	mov	r0, #32
    f2a0:	ldr	r1, [r5]
    f2a4:	add	r4, r4, #1
    f2a8:	bl	0 <fputc>
    f2ac:	ldr	r3, [sp, #72]	; 0x48
    f2b0:	sub	r3, r3, #1
    f2b4:	cmp	r3, r4
    f2b8:	bgt	f29c <test_json+0x33c>
    f2bc:	movw	r0, #0
    f2c0:	movt	r0, #0
    f2c4:	ldr	r3, [r5]
    f2c8:	mov	r2, #2
    f2cc:	mov	r1, #1
    f2d0:	mov	r4, #0
    f2d4:	mvn	r5, #0
    f2d8:	bl	0 <fwrite>
    f2dc:	b	f030 <test_json+0xd0>
    f2e0:	add	r3, sp, #32
    f2e4:	str	r3, [sp, #16]
    f2e8:	movw	r1, #0
    f2ec:	movt	r1, #0
    f2f0:	ldr	r2, [sp, #16]
    f2f4:	mov	r0, r7
    f2f8:	bl	0 <fprintf>
    f2fc:	mvn	r5, #0
    f300:	b	f030 <test_json+0xd0>
    f304:	mov	r0, r7
    f308:	bl	0 <flatcc_json_parser_error_string>
    f30c:	ldr	r2, [sp, #424]	; 0x1a8
    f310:	mov	r3, r0
    f314:	movw	r1, #0
    f318:	movt	r1, #0
    f31c:	mov	r0, r4
    f320:	bl	0 <fprintf>
    f324:	b	f278 <test_json+0x318>
    f328:	bl	0 <flatcc_json_parser_error_string>
    f32c:	mov	r3, r0
    f330:	movw	r1, #0
    f334:	movt	r1, #0
    f338:	mov	r0, r4
    f33c:	ldr	r2, [sp, #424]	; 0x1a8
    f340:	b	f320 <test_json+0x3c0>
    f344:	tst	r6, #15
    f348:	ldr	r4, [sp, #20]
    f34c:	beq	f2e8 <test_json+0x388>
    f350:	movw	r5, #0
    f354:	movt	r5, #0
    f358:	add	r6, r6, #1
    f35c:	mov	r3, r7
    f360:	mov	r2, #3
    f364:	mov	r1, #1
    f368:	mov	r0, r5
    f36c:	bl	0 <fwrite>
    f370:	tst	r6, #15
    f374:	bne	f358 <test_json+0x3f8>
    f378:	b	f2e8 <test_json+0x388>
    f37c:	movw	r5, #0
    f380:	movt	r5, #0
    f384:	ldr	r6, [r5]
    f388:	bl	0 <flatcc_verify_error_string>
    f38c:	movw	r2, #0
    f390:	movt	r2, #0
    f394:	str	r0, [sp]
    f398:	movw	r1, #0
    f39c:	movt	r1, #0
    f3a0:	ldr	r3, [sp, #424]	; 0x1a8
    f3a4:	mov	r0, r6
    f3a8:	bl	0 <fprintf>
    f3ac:	b	f130 <test_json+0x1d0>

0000f3b0 <edge_case_tests>:
    f3b0:	mov	ip, #155	; 0x9b
    f3b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f3b8:	mov	r5, #0
    f3bc:	strd	r6, [sp, #8]
    f3c0:	movw	r6, #0
    f3c4:	movt	r6, #0
    f3c8:	strd	r8, [sp, #16]
    f3cc:	mov	r3, r5
    f3d0:	mov	r0, r6
    f3d4:	strd	sl, [sp, #24]
    f3d8:	movw	r2, #0
    f3dc:	movt	r2, #0
    f3e0:	str	lr, [sp, #32]
    f3e4:	sub	sp, sp, #36	; 0x24
    f3e8:	movw	r1, #0
    f3ec:	movt	r1, #0
    f3f0:	mov	r8, #2
    f3f4:	str	r5, [sp]
    f3f8:	movw	fp, #0
    f3fc:	movt	fp, #0
    f400:	stmib	sp, {r5, ip}
    f404:	movw	r7, #0
    f408:	movt	r7, #0
    f40c:	bl	ef60 <test_json>
    f410:	mov	r4, r0
    f414:	mov	r0, #168	; 0xa8
    f418:	str	r8, [sp]
    f41c:	mov	r3, r5
    f420:	mov	r2, fp
    f424:	str	r5, [sp, #4]
    f428:	mov	r1, r7
    f42c:	str	r0, [sp, #8]
    f430:	mov	r0, r6
    f434:	bl	ef60 <test_json>
    f438:	mov	ip, #172	; 0xac
    f43c:	movw	r9, #0
    f440:	movt	r9, #0
    f444:	mov	r3, r5
    f448:	mov	r2, r9
    f44c:	orr	r4, r4, r0
    f450:	stm	sp, {r5, r8, ip}
    f454:	mov	r0, r6
    f458:	movw	r1, #0
    f45c:	movt	r1, #0
    f460:	movw	sl, #0
    f464:	movt	sl, #0
    f468:	str	r9, [sp, #20]
    f46c:	movw	r9, #0
    f470:	movt	r9, #0
    f474:	bl	ef60 <test_json>
    f478:	orr	r4, r4, r0
    f47c:	mov	ip, #176	; 0xb0
    f480:	str	r8, [sp]
    f484:	mov	r0, #4
    f488:	mov	r1, r7
    f48c:	mov	r3, r5
    f490:	mov	r2, sl
    f494:	stmib	sp, {r0, ip}
    f498:	mov	r0, r6
    f49c:	mov	r7, #1
    f4a0:	str	sl, [sp, #24]
    f4a4:	movw	sl, #0
    f4a8:	movt	sl, #0
    f4ac:	bl	ef60 <test_json>
    f4b0:	mov	ip, #8
    f4b4:	mov	r1, #180	; 0xb4
    f4b8:	mov	r3, r5
    f4bc:	orr	r4, r4, r0
    f4c0:	movw	r2, #0
    f4c4:	movt	r2, #0
    f4c8:	stm	sp, {r5, ip}
    f4cc:	mov	r0, r6
    f4d0:	str	r1, [sp, #8]
    f4d4:	movw	r1, #0
    f4d8:	movt	r1, #0
    f4dc:	bl	ef60 <test_json>
    f4e0:	mov	ip, #195	; 0xc3
    f4e4:	mov	r3, r5
    f4e8:	str	r8, [sp]
    f4ec:	mov	r2, fp
    f4f0:	orr	r4, r4, r0
    f4f4:	movw	r1, #0
    f4f8:	movt	r1, #0
    f4fc:	stmib	sp, {r5, ip}
    f500:	mov	r0, r6
    f504:	bl	ef60 <test_json>
    f508:	mov	ip, #199	; 0xc7
    f50c:	mov	r3, r5
    f510:	str	r7, [sp]
    f514:	mov	r2, r9
    f518:	mov	r1, sl
    f51c:	orr	r4, r4, r0
    f520:	mov	r0, r6
    f524:	stmib	sp, {r5, ip}
    f528:	bl	ef60 <test_json>
    f52c:	mov	ip, #203	; 0xcb
    f530:	movw	lr, #0
    f534:	movt	lr, #0
    f538:	mov	r1, sl
    f53c:	str	r7, [sp]
    f540:	mov	r2, lr
    f544:	mov	r3, r5
    f548:	stmib	sp, {r7, ip}
    f54c:	orr	r4, r4, r0
    f550:	mov	r0, r6
    f554:	str	lr, [sp, #28]
    f558:	bl	ef60 <test_json>
    f55c:	mov	ip, #209	; 0xd1
    f560:	mov	r3, r5
    f564:	str	r7, [sp]
    f568:	mov	r2, r9
    f56c:	orr	r4, r4, r0
    f570:	stmib	sp, {r5, ip}
    f574:	movw	ip, #0
    f578:	movt	ip, #0
    f57c:	mov	r0, r6
    f580:	movw	r1, #0
    f584:	movt	r1, #0
    f588:	str	ip, [sp, #16]
    f58c:	movw	sl, #0
    f590:	movt	sl, #0
    f594:	bl	ef60 <test_json>
    f598:	mov	ip, #217	; 0xd9
    f59c:	mov	r3, r5
    f5a0:	str	r8, [sp]
    f5a4:	mov	r2, fp
    f5a8:	orr	r4, r4, r0
    f5ac:	ldr	r1, [sp, #16]
    f5b0:	mov	r0, r6
    f5b4:	stmib	sp, {r5, ip}
    f5b8:	bl	ef60 <test_json>
    f5bc:	mov	ip, #221	; 0xdd
    f5c0:	mov	r3, r5
    f5c4:	ldr	r2, [sp, #20]
    f5c8:	orr	r4, r4, r0
    f5cc:	movw	r1, #0
    f5d0:	movt	r1, #0
    f5d4:	mov	r0, r6
    f5d8:	stm	sp, {r5, r8, ip}
    f5dc:	bl	ef60 <test_json>
    f5e0:	orr	r4, r4, r0
    f5e4:	mov	ip, #225	; 0xe1
    f5e8:	str	r8, [sp]
    f5ec:	mov	r0, #4
    f5f0:	mov	r3, r5
    f5f4:	ldr	r1, [sp, #16]
    f5f8:	stmib	sp, {r0, ip}
    f5fc:	mov	r0, r6
    f600:	ldr	r2, [sp, #24]
    f604:	bl	ef60 <test_json>
    f608:	mov	ip, #8
    f60c:	mov	r1, #229	; 0xe5
    f610:	mov	r3, r5
    f614:	orr	r4, r4, r0
    f618:	movw	r2, #0
    f61c:	movt	r2, #0
    f620:	stm	sp, {r5, ip}
    f624:	mov	r0, r6
    f628:	str	r1, [sp, #8]
    f62c:	movw	r1, #0
    f630:	movt	r1, #0
    f634:	bl	ef60 <test_json>
    f638:	mov	ip, #233	; 0xe9
    f63c:	mov	r2, fp
    f640:	str	r8, [sp]
    f644:	mov	r3, r5
    f648:	orr	r4, r4, r0
    f64c:	movw	r1, #0
    f650:	movt	r1, #0
    f654:	stmib	sp, {r5, ip}
    f658:	mov	r0, r6
    f65c:	bl	ef60 <test_json>
    f660:	mov	ip, #237	; 0xed
    f664:	mov	r3, r5
    f668:	str	r7, [sp]
    f66c:	mov	r2, r9
    f670:	mov	r1, sl
    f674:	orr	r4, r4, r0
    f678:	mov	r0, r6
    f67c:	stmib	sp, {r5, ip}
    f680:	bl	ef60 <test_json>
    f684:	mov	ip, #241	; 0xf1
    f688:	mov	r1, sl
    f68c:	str	r7, [sp]
    f690:	mov	r3, r5
    f694:	orr	r4, r4, r0
    f698:	ldr	r2, [sp, #28]
    f69c:	mov	r0, r6
    f6a0:	stmib	sp, {r7, ip}
    f6a4:	bl	ef60 <test_json>
    f6a8:	mov	ip, #247	; 0xf7
    f6ac:	orr	r4, r4, r0
    f6b0:	str	r7, [sp]
    f6b4:	mov	r3, r5
    f6b8:	mov	r2, r9
    f6bc:	mov	r0, r6
    f6c0:	movw	r1, #0
    f6c4:	movt	r1, #0
    f6c8:	stmib	sp, {r5, ip}
    f6cc:	bl	ef60 <test_json>
    f6d0:	orr	r0, r4, r0
    f6d4:	add	sp, sp, #36	; 0x24
    f6d8:	ldrd	r4, [sp]
    f6dc:	ldrd	r6, [sp, #8]
    f6e0:	ldrd	r8, [sp, #16]
    f6e4:	ldrd	sl, [sp, #24]
    f6e8:	add	sp, sp, #32
    f6ec:	pop	{pc}		; (ldr pc, [sp], #4)

0000f6f0 <error_case_tests>:
    f6f0:	movw	ip, #285	; 0x11d
    f6f4:	strd	r4, [sp, #-16]!
    f6f8:	mov	r4, #0
    f6fc:	str	r6, [sp, #8]
    f700:	movw	r6, #0
    f704:	movt	r6, #0
    f708:	str	lr, [sp, #12]
    f70c:	sub	sp, sp, #16
    f710:	mov	r2, r4
    f714:	mov	r3, #13
    f718:	mov	r0, r6
    f71c:	movw	r1, #0
    f720:	movt	r1, #0
    f724:	str	r4, [sp]
    f728:	stmib	sp, {r4, ip}
    f72c:	bl	ef60 <test_json>
    f730:	movw	r3, #287	; 0x11f
    f734:	mov	r2, r4
    f738:	str	r4, [sp]
    f73c:	mov	r5, r0
    f740:	movw	r1, #0
    f744:	movt	r1, #0
    f748:	mov	r0, r6
    f74c:	str	r4, [sp, #4]
    f750:	str	r3, [sp, #8]
    f754:	mov	r3, #13
    f758:	bl	ef60 <test_json>
    f75c:	movw	r3, #289	; 0x121
    f760:	mov	r2, r4
    f764:	str	r4, [sp]
    f768:	orr	r5, r5, r0
    f76c:	movw	r1, #0
    f770:	movt	r1, #0
    f774:	mov	r0, r6
    f778:	str	r4, [sp, #4]
    f77c:	str	r3, [sp, #8]
    f780:	mov	r3, #13
    f784:	bl	ef60 <test_json>
    f788:	movw	r3, #291	; 0x123
    f78c:	mov	r2, r4
    f790:	str	r4, [sp]
    f794:	orr	r5, r5, r0
    f798:	movw	r1, #0
    f79c:	movt	r1, #0
    f7a0:	mov	r0, r6
    f7a4:	str	r4, [sp, #4]
    f7a8:	str	r3, [sp, #8]
    f7ac:	mov	r3, #13
    f7b0:	bl	ef60 <test_json>
    f7b4:	movw	r3, #293	; 0x125
    f7b8:	mov	r2, r4
    f7bc:	str	r4, [sp]
    f7c0:	orr	r5, r5, r0
    f7c4:	movw	r1, #0
    f7c8:	movt	r1, #0
    f7cc:	mov	r0, r6
    f7d0:	str	r4, [sp, #4]
    f7d4:	str	r3, [sp, #8]
    f7d8:	mov	r3, #13
    f7dc:	bl	ef60 <test_json>
    f7e0:	mov	r3, #296	; 0x128
    f7e4:	mov	r2, r4
    f7e8:	str	r4, [sp]
    f7ec:	orr	r5, r5, r0
    f7f0:	movw	r1, #0
    f7f4:	movt	r1, #0
    f7f8:	mov	r0, r6
    f7fc:	str	r4, [sp, #4]
    f800:	str	r3, [sp, #8]
    f804:	mov	r3, #13
    f808:	bl	ef60 <test_json>
    f80c:	movw	r3, #299	; 0x12b
    f810:	mov	r2, r4
    f814:	str	r4, [sp]
    f818:	orr	r5, r5, r0
    f81c:	movw	r1, #0
    f820:	movt	r1, #0
    f824:	mov	r0, r6
    f828:	str	r4, [sp, #4]
    f82c:	str	r3, [sp, #8]
    f830:	mov	r3, #13
    f834:	bl	ef60 <test_json>
    f838:	movw	r3, #303	; 0x12f
    f83c:	mov	r2, r4
    f840:	str	r4, [sp]
    f844:	orr	r5, r5, r0
    f848:	movw	r1, #0
    f84c:	movt	r1, #0
    f850:	mov	r0, r6
    f854:	str	r4, [sp, #4]
    f858:	str	r3, [sp, #8]
    f85c:	mov	r3, #13
    f860:	bl	ef60 <test_json>
    f864:	movw	r3, #307	; 0x133
    f868:	mov	r2, r4
    f86c:	str	r4, [sp]
    f870:	orr	r5, r5, r0
    f874:	movw	r1, #0
    f878:	movt	r1, #0
    f87c:	mov	r0, r6
    f880:	str	r4, [sp, #4]
    f884:	str	r3, [sp, #8]
    f888:	mov	r3, #13
    f88c:	bl	ef60 <test_json>
    f890:	movw	r3, #322	; 0x142
    f894:	mov	r2, r4
    f898:	str	r4, [sp]
    f89c:	orr	r5, r5, r0
    f8a0:	movw	r1, #0
    f8a4:	movt	r1, #0
    f8a8:	mov	r0, r6
    f8ac:	str	r4, [sp, #4]
    f8b0:	str	r3, [sp, #8]
    f8b4:	mov	r3, #13
    f8b8:	bl	ef60 <test_json>
    f8bc:	mov	r3, #324	; 0x144
    f8c0:	mov	r2, r4
    f8c4:	str	r4, [sp]
    f8c8:	orr	r5, r5, r0
    f8cc:	movw	r1, #0
    f8d0:	movt	r1, #0
    f8d4:	mov	r0, r6
    f8d8:	str	r4, [sp, #4]
    f8dc:	str	r3, [sp, #8]
    f8e0:	mov	r3, #13
    f8e4:	bl	ef60 <test_json>
    f8e8:	movw	r3, #326	; 0x146
    f8ec:	mov	r2, r4
    f8f0:	str	r4, [sp]
    f8f4:	orr	r5, r5, r0
    f8f8:	movw	r1, #0
    f8fc:	movt	r1, #0
    f900:	mov	r0, r6
    f904:	str	r4, [sp, #4]
    f908:	str	r3, [sp, #8]
    f90c:	mov	r3, #13
    f910:	bl	ef60 <test_json>
    f914:	mov	r3, #328	; 0x148
    f918:	mov	r2, r4
    f91c:	str	r4, [sp]
    f920:	orr	r5, r5, r0
    f924:	movw	r1, #0
    f928:	movt	r1, #0
    f92c:	mov	r0, r6
    f930:	str	r4, [sp, #4]
    f934:	str	r3, [sp, #8]
    f938:	mov	r3, #13
    f93c:	bl	ef60 <test_json>
    f940:	movw	r3, #330	; 0x14a
    f944:	mov	r2, r4
    f948:	str	r4, [sp]
    f94c:	orr	r5, r5, r0
    f950:	movw	r1, #0
    f954:	movt	r1, #0
    f958:	mov	r0, r6
    f95c:	str	r4, [sp, #4]
    f960:	str	r3, [sp, #8]
    f964:	mov	r3, #13
    f968:	bl	ef60 <test_json>
    f96c:	movw	r3, #333	; 0x14d
    f970:	mov	r2, r4
    f974:	str	r4, [sp]
    f978:	orr	r5, r5, r0
    f97c:	movw	r1, #0
    f980:	movt	r1, #0
    f984:	mov	r0, r6
    f988:	str	r4, [sp, #4]
    f98c:	str	r3, [sp, #8]
    f990:	mov	r3, #13
    f994:	bl	ef60 <test_json>
    f998:	mov	r3, #336	; 0x150
    f99c:	mov	r2, r4
    f9a0:	str	r4, [sp]
    f9a4:	orr	r5, r5, r0
    f9a8:	movw	r1, #0
    f9ac:	movt	r1, #0
    f9b0:	mov	r0, r6
    f9b4:	str	r4, [sp, #4]
    f9b8:	str	r3, [sp, #8]
    f9bc:	mov	r3, #13
    f9c0:	bl	ef60 <test_json>
    f9c4:	mov	r3, #340	; 0x154
    f9c8:	mov	r2, r4
    f9cc:	str	r4, [sp]
    f9d0:	orr	r5, r5, r0
    f9d4:	movw	r1, #0
    f9d8:	movt	r1, #0
    f9dc:	mov	r0, r6
    f9e0:	str	r4, [sp, #4]
    f9e4:	str	r3, [sp, #8]
    f9e8:	mov	r3, #13
    f9ec:	bl	ef60 <test_json>
    f9f0:	mov	r3, #344	; 0x158
    f9f4:	orr	r5, r5, r0
    f9f8:	str	r4, [sp]
    f9fc:	mov	r2, r4
    fa00:	mov	r0, r6
    fa04:	str	r4, [sp, #4]
    fa08:	movw	r1, #0
    fa0c:	movt	r1, #0
    fa10:	str	r3, [sp, #8]
    fa14:	mov	r3, #13
    fa18:	bl	ef60 <test_json>
    fa1c:	orr	r0, r5, r0
    fa20:	add	sp, sp, #16
    fa24:	ldrd	r4, [sp]
    fa28:	ldr	r6, [sp, #8]
    fa2c:	add	sp, sp, #12
    fa30:	pop	{pc}		; (ldr pc, [sp], #4)

0000fa34 <base64_tests>:
    fa34:	movw	ip, #369	; 0x171
    fa38:	strd	r4, [sp, #-28]!	; 0xffffffe4
    fa3c:	mov	r4, #0
    fa40:	strd	r6, [sp, #8]
    fa44:	movw	r6, #0
    fa48:	movt	r6, #0
    fa4c:	strd	r8, [sp, #16]
    fa50:	mov	r3, r4
    fa54:	mov	r0, r6
    fa58:	str	lr, [sp, #24]
    fa5c:	sub	sp, sp, #20
    fa60:	movw	r2, #0
    fa64:	movt	r2, #0
    fa68:	movw	r1, #0
    fa6c:	movt	r1, #0
    fa70:	str	r4, [sp]
    fa74:	movw	r9, #0
    fa78:	movt	r9, #0
    fa7c:	stmib	sp, {r4, ip}
    fa80:	movw	r8, #0
    fa84:	movt	r8, #0
    fa88:	movw	r7, #0
    fa8c:	movt	r7, #0
    fa90:	bl	ef60 <test_json>
    fa94:	mov	r1, #372	; 0x174
    fa98:	mov	r3, r4
    fa9c:	str	r4, [sp]
    faa0:	mov	r5, r0
    faa4:	movw	r2, #0
    faa8:	movt	r2, #0
    faac:	mov	r0, r6
    fab0:	str	r4, [sp, #4]
    fab4:	str	r1, [sp, #8]
    fab8:	movw	r1, #0
    fabc:	movt	r1, #0
    fac0:	bl	ef60 <test_json>
    fac4:	mov	ip, #376	; 0x178
    fac8:	mov	r3, r4
    facc:	str	r4, [sp]
    fad0:	mov	r2, r9
    fad4:	orr	r5, r5, r0
    fad8:	movw	r1, #0
    fadc:	movt	r1, #0
    fae0:	stmib	sp, {r4, ip}
    fae4:	mov	r0, r6
    fae8:	bl	ef60 <test_json>
    faec:	movw	r1, #379	; 0x17b
    faf0:	mov	r3, r4
    faf4:	str	r4, [sp]
    faf8:	mov	r2, r8
    fafc:	orr	r5, r5, r0
    fb00:	str	r4, [sp, #4]
    fb04:	mov	r0, r6
    fb08:	str	r1, [sp, #8]
    fb0c:	movw	r1, #0
    fb10:	movt	r1, #0
    fb14:	bl	ef60 <test_json>
    fb18:	movw	r1, #382	; 0x17e
    fb1c:	mov	r2, r9
    fb20:	str	r4, [sp]
    fb24:	mov	r3, r4
    fb28:	orr	r5, r5, r0
    fb2c:	str	r4, [sp, #4]
    fb30:	mov	r0, r6
    fb34:	str	r1, [sp, #8]
    fb38:	movw	r1, #0
    fb3c:	movt	r1, #0
    fb40:	bl	ef60 <test_json>
    fb44:	movw	ip, #385	; 0x181
    fb48:	mov	r2, r8
    fb4c:	str	r4, [sp]
    fb50:	mov	r3, r4
    fb54:	orr	r5, r5, r0
    fb58:	movw	r1, #0
    fb5c:	movt	r1, #0
    fb60:	stmib	sp, {r4, ip}
    fb64:	mov	r0, r6
    fb68:	bl	ef60 <test_json>
    fb6c:	mov	r3, #388	; 0x184
    fb70:	mov	r2, r4
    fb74:	str	r4, [sp]
    fb78:	orr	r5, r5, r0
    fb7c:	movw	r1, #0
    fb80:	movt	r1, #0
    fb84:	mov	r0, r6
    fb88:	str	r4, [sp, #4]
    fb8c:	str	r3, [sp, #8]
    fb90:	mov	r3, #31
    fb94:	bl	ef60 <test_json>
    fb98:	movw	r3, #391	; 0x187
    fb9c:	mov	r2, r4
    fba0:	str	r4, [sp]
    fba4:	orr	r5, r5, r0
    fba8:	movw	r1, #0
    fbac:	movt	r1, #0
    fbb0:	mov	r0, r6
    fbb4:	str	r4, [sp, #4]
    fbb8:	str	r3, [sp, #8]
    fbbc:	mov	r3, #32
    fbc0:	bl	ef60 <test_json>
    fbc4:	movw	ip, #406	; 0x196
    fbc8:	mov	r3, r4
    fbcc:	str	r4, [sp]
    fbd0:	mov	r2, r7
    fbd4:	orr	r5, r5, r0
    fbd8:	movw	r1, #0
    fbdc:	movt	r1, #0
    fbe0:	stmib	sp, {r4, ip}
    fbe4:	mov	r0, r6
    fbe8:	bl	ef60 <test_json>
    fbec:	movw	ip, #419	; 0x1a3
    fbf0:	orr	r5, r5, r0
    fbf4:	str	r4, [sp]
    fbf8:	mov	r3, r4
    fbfc:	mov	r2, r7
    fc00:	mov	r0, r6
    fc04:	movw	r1, #0
    fc08:	movt	r1, #0
    fc0c:	stmib	sp, {r4, ip}
    fc10:	bl	ef60 <test_json>
    fc14:	orr	r0, r5, r0
    fc18:	add	sp, sp, #20
    fc1c:	ldrd	r4, [sp]
    fc20:	ldrd	r6, [sp, #8]
    fc24:	ldrd	r8, [sp, #16]
    fc28:	add	sp, sp, #24
    fc2c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fc30 <mixed_type_union_tests>:
    fc30:	strd	r4, [sp, #-20]!	; 0xffffffec
    fc34:	mov	ip, #432	; 0x1b0
    fc38:	mov	r4, #0
    fc3c:	strd	r6, [sp, #8]
    fc40:	mov	r3, r4
    fc44:	movw	r2, #0
    fc48:	movt	r2, #0
    fc4c:	ldr	r6, [pc, #332]	; fda0 <mixed_type_union_tests+0x170>
    fc50:	movw	r1, #0
    fc54:	movt	r1, #0
    fc58:	str	lr, [sp, #16]
    fc5c:	sub	sp, sp, #20
    fc60:	movw	r7, #0
    fc64:	movt	r7, #0
    fc68:	str	r4, [sp]
    fc6c:	stmib	sp, {r4, ip}
    fc70:	mov	r0, r6
    fc74:	bl	ef60 <test_json>
    fc78:	movw	r1, #437	; 0x1b5
    fc7c:	mov	r3, r4
    fc80:	str	r4, [sp]
    fc84:	mov	r2, r7
    fc88:	mov	r5, r0
    fc8c:	str	r4, [sp, #4]
    fc90:	mov	r0, r6
    fc94:	str	r1, [sp, #8]
    fc98:	movw	r1, #0
    fc9c:	movt	r1, #0
    fca0:	bl	ef60 <test_json>
    fca4:	movw	r1, #442	; 0x1ba
    fca8:	mov	r3, r4
    fcac:	str	r4, [sp]
    fcb0:	mov	r2, r7
    fcb4:	orr	r5, r5, r0
    fcb8:	str	r4, [sp, #4]
    fcbc:	mov	r0, r6
    fcc0:	str	r1, [sp, #8]
    fcc4:	movw	r1, #0
    fcc8:	movt	r1, #0
    fccc:	bl	ef60 <test_json>
    fcd0:	movw	r1, #449	; 0x1c1
    fcd4:	mov	r3, r4
    fcd8:	str	r4, [sp]
    fcdc:	orr	r5, r5, r0
    fce0:	movw	r2, #0
    fce4:	movt	r2, #0
    fce8:	mov	r0, r6
    fcec:	str	r4, [sp, #4]
    fcf0:	str	r1, [sp, #8]
    fcf4:	movw	r1, #0
    fcf8:	movt	r1, #0
    fcfc:	bl	ef60 <test_json>
    fd00:	movw	r1, #458	; 0x1ca
    fd04:	mov	r3, r4
    fd08:	str	r4, [sp]
    fd0c:	orr	r5, r5, r0
    fd10:	movw	r2, #0
    fd14:	movt	r2, #0
    fd18:	mov	r0, r6
    fd1c:	str	r4, [sp, #4]
    fd20:	str	r1, [sp, #8]
    fd24:	movw	r1, #0
    fd28:	movt	r1, #0
    fd2c:	bl	ef60 <test_json>
    fd30:	movw	r1, #469	; 0x1d5
    fd34:	mov	r3, r4
    fd38:	str	r4, [sp]
    fd3c:	orr	r5, r5, r0
    fd40:	movw	r2, #0
    fd44:	movt	r2, #0
    fd48:	mov	r0, r6
    fd4c:	str	r4, [sp, #4]
    fd50:	str	r1, [sp, #8]
    fd54:	movw	r1, #0
    fd58:	movt	r1, #0
    fd5c:	bl	ef60 <test_json>
    fd60:	movw	ip, #474	; 0x1da
    fd64:	orr	r5, r5, r0
    fd68:	str	r4, [sp]
    fd6c:	mov	r3, r4
    fd70:	mov	r2, r7
    fd74:	mov	r0, r6
    fd78:	movw	r1, #0
    fd7c:	movt	r1, #0
    fd80:	stmib	sp, {r4, ip}
    fd84:	bl	ef60 <test_json>
    fd88:	orr	r0, r5, r0
    fd8c:	add	sp, sp, #20
    fd90:	ldrd	r4, [sp]
    fd94:	ldrd	r6, [sp, #8]
    fd98:	add	sp, sp, #16
    fd9c:	pop	{pc}		; (ldr pc, [sp], #4)
    fda0:	.word	0x00000010

0000fda4 <union_vector_tests>:
    fda4:	strd	r4, [sp, #-20]!	; 0xffffffec
    fda8:	movw	r0, #485	; 0x1e5
    fdac:	mov	r4, #0
    fdb0:	strd	r6, [sp, #8]
    fdb4:	movw	r7, #0
    fdb8:	movt	r7, #0
    fdbc:	ldr	r6, [pc, #296]	; feec <union_vector_tests+0x148>
    fdc0:	mov	r3, r4
    fdc4:	mov	r2, r7
    fdc8:	str	lr, [sp, #16]
    fdcc:	sub	sp, sp, #20
    fdd0:	movw	r1, #0
    fdd4:	movt	r1, #0
    fdd8:	str	r4, [sp]
    fddc:	str	r4, [sp, #4]
    fde0:	str	r0, [sp, #8]
    fde4:	mov	r0, r6
    fde8:	bl	ef60 <test_json>
    fdec:	mov	r1, #488	; 0x1e8
    fdf0:	mov	r3, r4
    fdf4:	str	r4, [sp]
    fdf8:	mov	r5, r0
    fdfc:	movw	r2, #0
    fe00:	movt	r2, #0
    fe04:	mov	r0, r6
    fe08:	str	r4, [sp, #4]
    fe0c:	str	r1, [sp, #8]
    fe10:	movw	r1, #0
    fe14:	movt	r1, #0
    fe18:	bl	ef60 <test_json>
    fe1c:	movw	r1, #491	; 0x1eb
    fe20:	mov	r3, r4
    fe24:	str	r4, [sp]
    fe28:	orr	r5, r5, r0
    fe2c:	movw	r2, #0
    fe30:	movt	r2, #0
    fe34:	mov	r0, r6
    fe38:	str	r4, [sp, #4]
    fe3c:	str	r1, [sp, #8]
    fe40:	movw	r1, #0
    fe44:	movt	r1, #0
    fe48:	bl	ef60 <test_json>
    fe4c:	movw	r1, #494	; 0x1ee
    fe50:	mov	r3, r4
    fe54:	str	r4, [sp]
    fe58:	orr	r5, r5, r0
    fe5c:	movw	r2, #0
    fe60:	movt	r2, #0
    fe64:	mov	r0, r6
    fe68:	str	r4, [sp, #4]
    fe6c:	str	r1, [sp, #8]
    fe70:	movw	r1, #0
    fe74:	movt	r1, #0
    fe78:	bl	ef60 <test_json>
    fe7c:	movw	ip, #497	; 0x1f1
    fe80:	mov	r2, r7
    fe84:	str	r4, [sp]
    fe88:	mov	r3, r4
    fe8c:	orr	r5, r5, r0
    fe90:	movw	r1, #0
    fe94:	movt	r1, #0
    fe98:	stmib	sp, {r4, ip}
    fe9c:	mov	r0, r6
    fea0:	bl	ef60 <test_json>
    fea4:	mov	r1, #500	; 0x1f4
    fea8:	orr	r5, r5, r0
    feac:	str	r4, [sp]
    feb0:	mov	r3, r4
    feb4:	mov	r0, r6
    feb8:	str	r4, [sp, #4]
    febc:	movw	r2, #0
    fec0:	movt	r2, #0
    fec4:	str	r1, [sp, #8]
    fec8:	movw	r1, #0
    fecc:	movt	r1, #0
    fed0:	bl	ef60 <test_json>
    fed4:	orr	r0, r5, r0
    fed8:	add	sp, sp, #20
    fedc:	ldrd	r4, [sp]
    fee0:	ldrd	r6, [sp, #8]
    fee4:	add	sp, sp, #16
    fee8:	pop	{pc}		; (ldr pc, [sp], #4)
    feec:	.word	0x00000020

Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4:	mov	r4, #0
   8:	strd	r6, [sp, #8]
   c:	movw	r7, #0
  10:	movt	r7, #0
  14:	strd	r8, [sp, #16]
  18:	movw	r6, #0
  1c:	movt	r6, #0
  20:	strd	sl, [sp, #24]
  24:	movw	r8, #0
  28:	movt	r8, #0
  2c:	str	lr, [sp, #32]
  30:	sub	sp, sp, #52	; 0x34
  34:	movw	r9, #0
  38:	movt	r9, #0
  3c:	movw	fp, #0
  40:	movt	fp, #0
  44:	movw	sl, #0
  48:	movt	sl, #0
  4c:	bl	f3b0 <edge_case_tests>
  50:	mov	r5, r0
  54:	bl	f6f0 <error_case_tests>
  58:	movw	r3, #0
  5c:	movt	r3, #0
  60:	orr	r5, r5, r0
  64:	movw	r2, #0
  68:	movt	r2, #0
  6c:	movw	r1, #0
  70:	movt	r1, #0
  74:	movw	r0, #0
  78:	movt	r0, #0
  7c:	movw	ip, #0
  80:	movt	ip, #0
  84:	movw	lr, #0
  88:	movt	lr, #0
  8c:	str	r3, [sp, #20]
  90:	movw	r3, #0
  94:	movt	r3, #0
  98:	str	r3, [sp, #16]
  9c:	str	r2, [sp, #24]
  a0:	str	r1, [sp, #28]
  a4:	str	r0, [sp, #32]
  a8:	str	ip, [sp, #36]	; 0x24
  ac:	str	lr, [sp, #40]	; 0x28
  b0:	bl	fda4 <union_vector_tests>
  b4:	orr	r5, r5, r0
  b8:	bl	fa34 <base64_tests>
  bc:	orr	r5, r5, r0
  c0:	bl	fc30 <mixed_type_union_tests>
  c4:	movw	ip, #525	; 0x20d
  c8:	mov	r2, r7
  cc:	str	r4, [sp]
  d0:	mov	r3, r4
  d4:	orr	r5, r5, r0
  d8:	movw	r1, #0
  dc:	movt	r1, #0
  e0:	stmib	sp, {r4, ip}
  e4:	mov	r0, r6
  e8:	bl	ef60 <test_json>
  ec:	mov	ip, #528	; 0x210
  f0:	mov	r3, r4
  f4:	str	r4, [sp]
  f8:	mov	r2, r8
  fc:	orr	r5, r5, r0
 100:	movw	r1, #0
 104:	movt	r1, #0
 108:	stmib	sp, {r4, ip}
 10c:	mov	r0, r6
 110:	bl	ef60 <test_json>
 114:	movw	ip, #531	; 0x213
 118:	mov	r3, r4
 11c:	str	r4, [sp]
 120:	mov	r2, r9
 124:	orr	r5, r5, r0
 128:	movw	r1, #0
 12c:	movt	r1, #0
 130:	stmib	sp, {r4, ip}
 134:	mov	r0, r6
 138:	bl	ef60 <test_json>
 13c:	movw	ip, #534	; 0x216
 140:	mov	r3, r4
 144:	str	r4, [sp]
 148:	mov	r2, fp
 14c:	orr	r5, r5, r0
 150:	movw	r1, #0
 154:	movt	r1, #0
 158:	stmib	sp, {r4, ip}
 15c:	mov	r0, r6
 160:	bl	ef60 <test_json>
 164:	movw	ip, #537	; 0x219
 168:	mov	r3, r4
 16c:	str	r4, [sp]
 170:	mov	r2, fp
 174:	orr	r5, r5, r0
 178:	movw	r1, #0
 17c:	movt	r1, #0
 180:	stmib	sp, {r4, ip}
 184:	mov	r0, r6
 188:	bl	ef60 <test_json>
 18c:	mov	ip, #540	; 0x21c
 190:	mov	r3, r4
 194:	str	r4, [sp]
 198:	mov	r2, r8
 19c:	orr	r5, r5, r0
 1a0:	movw	r1, #0
 1a4:	movt	r1, #0
 1a8:	stmib	sp, {r4, ip}
 1ac:	mov	r0, r6
 1b0:	bl	ef60 <test_json>
 1b4:	movw	ip, #543	; 0x21f
 1b8:	mov	r3, r4
 1bc:	str	r4, [sp]
 1c0:	mov	r2, r9
 1c4:	orr	r5, r5, r0
 1c8:	movw	r1, #0
 1cc:	movt	r1, #0
 1d0:	stmib	sp, {r4, ip}
 1d4:	mov	r0, r6
 1d8:	bl	ef60 <test_json>
 1dc:	movw	ip, #547	; 0x223
 1e0:	mov	r3, r4
 1e4:	str	r4, [sp]
 1e8:	mov	r2, r7
 1ec:	orr	r5, r5, r0
 1f0:	movw	r1, #0
 1f4:	movt	r1, #0
 1f8:	stmib	sp, {r4, ip}
 1fc:	mov	r0, r6
 200:	bl	ef60 <test_json>
 204:	movw	ip, #551	; 0x227
 208:	mov	r3, r4
 20c:	str	r4, [sp]
 210:	mov	r2, r7
 214:	orr	r5, r5, r0
 218:	movw	r1, #0
 21c:	movt	r1, #0
 220:	stmib	sp, {r4, ip}
 224:	mov	r0, r6
 228:	bl	ef60 <test_json>
 22c:	movw	ip, #555	; 0x22b
 230:	mov	r3, r4
 234:	str	r4, [sp]
 238:	mov	r2, r7
 23c:	orr	r5, r5, r0
 240:	movw	r1, #0
 244:	movt	r1, #0
 248:	stmib	sp, {r4, ip}
 24c:	mov	r0, r6
 250:	bl	ef60 <test_json>
 254:	movw	ip, #558	; 0x22e
 258:	mov	r3, r4
 25c:	str	r4, [sp]
 260:	mov	r2, r8
 264:	orr	r5, r5, r0
 268:	movw	r1, #0
 26c:	movt	r1, #0
 270:	stmib	sp, {r4, ip}
 274:	mov	r0, r6
 278:	bl	ef60 <test_json>
 27c:	movw	ip, #561	; 0x231
 280:	mov	r3, r4
 284:	str	r4, [sp]
 288:	mov	r2, r9
 28c:	orr	r5, r5, r0
 290:	movw	r1, #0
 294:	movt	r1, #0
 298:	stmib	sp, {r4, ip}
 29c:	mov	r0, r6
 2a0:	bl	ef60 <test_json>
 2a4:	mov	ip, #564	; 0x234
 2a8:	mov	r3, r4
 2ac:	str	r4, [sp]
 2b0:	mov	r2, fp
 2b4:	orr	r5, r5, r0
 2b8:	movw	r1, #0
 2bc:	movt	r1, #0
 2c0:	stmib	sp, {r4, ip}
 2c4:	mov	r0, r6
 2c8:	bl	ef60 <test_json>
 2cc:	movw	ip, #567	; 0x237
 2d0:	mov	r3, r4
 2d4:	str	r4, [sp]
 2d8:	mov	r2, fp
 2dc:	orr	r5, r5, r0
 2e0:	movw	r1, #0
 2e4:	movt	r1, #0
 2e8:	stmib	sp, {r4, ip}
 2ec:	mov	r0, r6
 2f0:	bl	ef60 <test_json>
 2f4:	movw	ip, #570	; 0x23a
 2f8:	mov	r3, r4
 2fc:	str	r4, [sp]
 300:	mov	r2, r8
 304:	orr	r5, r5, r0
 308:	movw	r1, #0
 30c:	movt	r1, #0
 310:	stmib	sp, {r4, ip}
 314:	mov	r0, r6
 318:	bl	ef60 <test_json>
 31c:	movw	ip, #573	; 0x23d
 320:	mov	r3, r4
 324:	str	r4, [sp]
 328:	mov	r2, r9
 32c:	orr	r5, r5, r0
 330:	movw	r1, #0
 334:	movt	r1, #0
 338:	stmib	sp, {r4, ip}
 33c:	mov	r0, r6
 340:	bl	ef60 <test_json>
 344:	movw	ip, #577	; 0x241
 348:	mov	r3, r4
 34c:	str	r4, [sp]
 350:	mov	r2, r7
 354:	orr	r5, r5, r0
 358:	movw	r1, #0
 35c:	movt	r1, #0
 360:	stmib	sp, {r4, ip}
 364:	mov	r0, r6
 368:	bl	ef60 <test_json>
 36c:	movw	ip, #581	; 0x245
 370:	mov	r3, r4
 374:	str	r4, [sp]
 378:	mov	r2, r7
 37c:	orr	r5, r5, r0
 380:	movw	r1, #0
 384:	movt	r1, #0
 388:	stmib	sp, {r4, ip}
 38c:	mov	r0, r6
 390:	bl	ef60 <test_json>
 394:	movw	ip, #601	; 0x259
 398:	mov	r3, r4
 39c:	str	r4, [sp]
 3a0:	mov	r2, r8
 3a4:	orr	r5, r5, r0
 3a8:	movw	r1, #0
 3ac:	movt	r1, #0
 3b0:	stmib	sp, {r4, ip}
 3b4:	mov	r0, r6
 3b8:	bl	ef60 <test_json>
 3bc:	mov	ip, #604	; 0x25c
 3c0:	mov	r3, r4
 3c4:	str	r4, [sp]
 3c8:	mov	r2, r9
 3cc:	orr	r5, r5, r0
 3d0:	movw	r1, #0
 3d4:	movt	r1, #0
 3d8:	stmib	sp, {r4, ip}
 3dc:	mov	r0, r6
 3e0:	bl	ef60 <test_json>
 3e4:	movw	ip, #607	; 0x25f
 3e8:	mov	r3, r4
 3ec:	str	r4, [sp]
 3f0:	orr	r5, r5, r0
 3f4:	movw	r1, #0
 3f8:	movt	r1, #0
 3fc:	mov	r0, r6
 400:	stmib	sp, {r4, ip}
 404:	ldr	r2, [sp, #20]
 408:	bl	ef60 <test_json>
 40c:	movw	ip, #610	; 0x262
 410:	mov	r3, r4
 414:	str	r4, [sp]
 418:	mov	r2, fp
 41c:	orr	r5, r5, r0
 420:	movw	r1, #0
 424:	movt	r1, #0
 428:	stmib	sp, {r4, ip}
 42c:	mov	r0, r6
 430:	bl	ef60 <test_json>
 434:	movw	ip, #613	; 0x265
 438:	mov	r3, r4
 43c:	str	r4, [sp]
 440:	orr	r5, r5, r0
 444:	movw	r1, #0
 448:	movt	r1, #0
 44c:	mov	r0, r6
 450:	stmib	sp, {r4, ip}
 454:	ldr	r2, [sp, #24]
 458:	bl	ef60 <test_json>
 45c:	mov	ip, #616	; 0x268
 460:	mov	r3, r4
 464:	str	r4, [sp]
 468:	orr	r5, r5, r0
 46c:	movw	r1, #0
 470:	movt	r1, #0
 474:	mov	r0, r6
 478:	stmib	sp, {r4, ip}
 47c:	ldr	r2, [sp, #28]
 480:	bl	ef60 <test_json>
 484:	movw	ip, #619	; 0x26b
 488:	mov	r3, r4
 48c:	str	r4, [sp]
 490:	orr	r5, r5, r0
 494:	movw	r1, #0
 498:	movt	r1, #0
 49c:	mov	r0, r6
 4a0:	stmib	sp, {r4, ip}
 4a4:	ldr	r2, [sp, #32]
 4a8:	bl	ef60 <test_json>
 4ac:	movw	ip, #622	; 0x26e
 4b0:	mov	r3, r4
 4b4:	str	r4, [sp]
 4b8:	mov	r2, r8
 4bc:	orr	r5, r5, r0
 4c0:	movw	r1, #0
 4c4:	movt	r1, #0
 4c8:	stmib	sp, {r4, ip}
 4cc:	mov	r0, r6
 4d0:	bl	ef60 <test_json>
 4d4:	movw	ip, #625	; 0x271
 4d8:	mov	r3, r4
 4dc:	str	r4, [sp]
 4e0:	mov	r2, r8
 4e4:	orr	r5, r5, r0
 4e8:	movw	r1, #0
 4ec:	movt	r1, #0
 4f0:	stmib	sp, {r4, ip}
 4f4:	mov	r0, r6
 4f8:	bl	ef60 <test_json>
 4fc:	mov	ip, #628	; 0x274
 500:	mov	r3, r4
 504:	str	r4, [sp]
 508:	mov	r1, sl
 50c:	orr	r5, r5, r0
 510:	ldr	r2, [sp, #16]
 514:	mov	r0, r6
 518:	stmib	sp, {r4, ip}
 51c:	bl	ef60 <test_json>
 520:	movw	ip, #631	; 0x277
 524:	mov	r1, sl
 528:	str	r4, [sp]
 52c:	mov	r3, r4
 530:	orr	r5, r5, r0
 534:	ldr	r2, [sp, #16]
 538:	mov	r0, r6
 53c:	stmib	sp, {r4, ip}
 540:	movw	sl, #0
 544:	movt	sl, #0
 548:	bl	ef60 <test_json>
 54c:	movw	ip, #634	; 0x27a
 550:	mov	r3, r4
 554:	str	r4, [sp]
 558:	orr	r5, r5, r0
 55c:	movw	r1, #0
 560:	movt	r1, #0
 564:	stmib	sp, {r4, ip}
 568:	movw	ip, #0
 56c:	movt	ip, #0
 570:	mov	r0, r6
 574:	ldr	r2, [sp, #36]	; 0x24
 578:	str	ip, [sp, #44]	; 0x2c
 57c:	bl	ef60 <test_json>
 580:	movw	r1, #638	; 0x27e
 584:	mov	r3, r4
 588:	str	r4, [sp]
 58c:	orr	r5, r5, r0
 590:	mov	r0, r6
 594:	str	r4, [sp, #4]
 598:	str	r1, [sp, #8]
 59c:	movw	r1, #0
 5a0:	movt	r1, #0
 5a4:	ldr	r2, [sp, #40]	; 0x28
 5a8:	bl	ef60 <test_json>
 5ac:	movw	r1, #642	; 0x282
 5b0:	mov	r3, r4
 5b4:	str	r4, [sp]
 5b8:	mov	r2, sl
 5bc:	orr	r5, r5, r0
 5c0:	str	r4, [sp, #4]
 5c4:	mov	r0, r6
 5c8:	str	r1, [sp, #8]
 5cc:	movw	r1, #0
 5d0:	movt	r1, #0
 5d4:	bl	ef60 <test_json>
 5d8:	movw	r1, #646	; 0x286
 5dc:	mov	r3, r4
 5e0:	str	r4, [sp]
 5e4:	mov	r2, r7
 5e8:	orr	r5, r5, r0
 5ec:	str	r4, [sp, #4]
 5f0:	mov	r0, r6
 5f4:	str	r1, [sp, #8]
 5f8:	movw	r1, #0
 5fc:	movt	r1, #0
 600:	bl	ef60 <test_json>
 604:	movw	r1, #649	; 0x289
 608:	mov	r3, r4
 60c:	str	r4, [sp]
 610:	mov	r2, r7
 614:	orr	r5, r5, r0
 618:	str	r4, [sp, #4]
 61c:	mov	r0, r6
 620:	str	r1, [sp, #8]
 624:	movw	r1, #0
 628:	movt	r1, #0
 62c:	bl	ef60 <test_json>
 630:	movw	r1, #653	; 0x28d
 634:	mov	r3, r4
 638:	str	r4, [sp]
 63c:	mov	r2, r8
 640:	orr	r5, r5, r0
 644:	str	r4, [sp, #4]
 648:	mov	r0, r6
 64c:	str	r1, [sp, #8]
 650:	movw	r1, #0
 654:	movt	r1, #0
 658:	bl	ef60 <test_json>
 65c:	mov	r1, #656	; 0x290
 660:	mov	r2, r9
 664:	str	r4, [sp]
 668:	mov	r3, r4
 66c:	orr	r5, r5, r0
 670:	str	r4, [sp, #4]
 674:	mov	r0, r6
 678:	str	r1, [sp, #8]
 67c:	movw	r1, #0
 680:	movt	r1, #0
 684:	movw	r9, #0
 688:	movt	r9, #0
 68c:	bl	ef60 <test_json>
 690:	movw	r1, #659	; 0x293
 694:	mov	r3, r4
 698:	str	r4, [sp]
 69c:	orr	r5, r5, r0
 6a0:	mov	r0, r6
 6a4:	str	r4, [sp, #4]
 6a8:	str	r1, [sp, #8]
 6ac:	movw	r1, #0
 6b0:	movt	r1, #0
 6b4:	ldr	r2, [sp, #20]
 6b8:	bl	ef60 <test_json>
 6bc:	movw	ip, #662	; 0x296
 6c0:	mov	r2, fp
 6c4:	str	r4, [sp]
 6c8:	mov	r3, r4
 6cc:	orr	r5, r5, r0
 6d0:	movw	r1, #0
 6d4:	movt	r1, #0
 6d8:	stmib	sp, {r4, ip}
 6dc:	mov	r0, r6
 6e0:	bl	ef60 <test_json>
 6e4:	movw	ip, #665	; 0x299
 6e8:	mov	r3, r4
 6ec:	str	r4, [sp]
 6f0:	orr	r5, r5, r0
 6f4:	movw	r1, #0
 6f8:	movt	r1, #0
 6fc:	mov	r0, r6
 700:	stmib	sp, {r4, ip}
 704:	ldr	r2, [sp, #24]
 708:	bl	ef60 <test_json>
 70c:	mov	ip, #668	; 0x29c
 710:	mov	r3, r4
 714:	str	r4, [sp]
 718:	orr	r5, r5, r0
 71c:	movw	r1, #0
 720:	movt	r1, #0
 724:	mov	r0, r6
 728:	stmib	sp, {r4, ip}
 72c:	ldr	r2, [sp, #28]
 730:	bl	ef60 <test_json>
 734:	movw	ip, #671	; 0x29f
 738:	mov	r3, r4
 73c:	str	r4, [sp]
 740:	orr	r5, r5, r0
 744:	movw	r1, #0
 748:	movt	r1, #0
 74c:	mov	r0, r6
 750:	stmib	sp, {r4, ip}
 754:	ldr	r2, [sp, #32]
 758:	bl	ef60 <test_json>
 75c:	movw	ip, #674	; 0x2a2
 760:	mov	r3, r4
 764:	str	r4, [sp]
 768:	mov	r2, r8
 76c:	orr	r5, r5, r0
 770:	movw	r1, #0
 774:	movt	r1, #0
 778:	stmib	sp, {r4, ip}
 77c:	mov	r0, r6
 780:	bl	ef60 <test_json>
 784:	movw	ip, #677	; 0x2a5
 788:	mov	r2, r8
 78c:	str	r4, [sp]
 790:	mov	r3, r4
 794:	orr	r5, r5, r0
 798:	movw	r1, #0
 79c:	movt	r1, #0
 7a0:	stmib	sp, {r4, ip}
 7a4:	mov	r0, r6
 7a8:	bl	ef60 <test_json>
 7ac:	ldr	r8, [sp, #16]
 7b0:	mov	ip, #680	; 0x2a8
 7b4:	mov	r3, r4
 7b8:	orr	r5, r5, r0
 7bc:	mov	r0, r6
 7c0:	str	r4, [sp]
 7c4:	ldr	fp, [sp, #44]	; 0x2c
 7c8:	stmib	sp, {r4, ip}
 7cc:	mov	r2, r8
 7d0:	mov	r1, fp
 7d4:	bl	ef60 <test_json>
 7d8:	movw	ip, #683	; 0x2ab
 7dc:	mov	r2, r8
 7e0:	str	r4, [sp]
 7e4:	mov	r1, fp
 7e8:	mov	r3, r4
 7ec:	orr	r5, r5, r0
 7f0:	mov	r0, r6
 7f4:	stmib	sp, {r4, ip}
 7f8:	bl	ef60 <test_json>
 7fc:	movw	ip, #686	; 0x2ae
 800:	mov	r3, r4
 804:	str	r4, [sp]
 808:	orr	r5, r5, r0
 80c:	movw	r1, #0
 810:	movt	r1, #0
 814:	mov	r0, r6
 818:	stmib	sp, {r4, ip}
 81c:	ldr	r2, [sp, #36]	; 0x24
 820:	bl	ef60 <test_json>
 824:	movw	ip, #690	; 0x2b2
 828:	mov	r3, r4
 82c:	str	r4, [sp]
 830:	orr	r5, r5, r0
 834:	movw	r1, #0
 838:	movt	r1, #0
 83c:	mov	r0, r6
 840:	stmib	sp, {r4, ip}
 844:	ldr	r2, [sp, #40]	; 0x28
 848:	bl	ef60 <test_json>
 84c:	movw	ip, #694	; 0x2b6
 850:	mov	r2, sl
 854:	str	r4, [sp]
 858:	mov	r3, r4
 85c:	orr	r5, r5, r0
 860:	movw	r1, #0
 864:	movt	r1, #0
 868:	stmib	sp, {r4, ip}
 86c:	mov	r0, r6
 870:	bl	ef60 <test_json>
 874:	movw	ip, #698	; 0x2ba
 878:	mov	r3, r4
 87c:	str	r4, [sp]
 880:	mov	r2, r7
 884:	orr	r5, r5, r0
 888:	movw	r1, #0
 88c:	movt	r1, #0
 890:	stmib	sp, {r4, ip}
 894:	mov	r0, r6
 898:	bl	ef60 <test_json>
 89c:	movw	ip, #701	; 0x2bd
 8a0:	mov	r3, r4
 8a4:	str	r4, [sp]
 8a8:	mov	r2, r7
 8ac:	orr	r5, r5, r0
 8b0:	movw	r1, #0
 8b4:	movt	r1, #0
 8b8:	stmib	sp, {r4, ip}
 8bc:	mov	r0, r6
 8c0:	bl	ef60 <test_json>
 8c4:	mov	r1, #716	; 0x2cc
 8c8:	mov	r3, r4
 8cc:	str	r4, [sp]
 8d0:	orr	r5, r5, r0
 8d4:	movw	r2, #0
 8d8:	movt	r2, #0
 8dc:	mov	r0, r6
 8e0:	str	r4, [sp, #4]
 8e4:	str	r1, [sp, #8]
 8e8:	movw	r1, #0
 8ec:	movt	r1, #0
 8f0:	bl	ef60 <test_json>
 8f4:	movw	r1, #731	; 0x2db
 8f8:	mov	r3, r4
 8fc:	str	r4, [sp]
 900:	orr	r5, r5, r0
 904:	movw	r2, #0
 908:	movt	r2, #0
 90c:	mov	r0, r6
 910:	str	r4, [sp, #4]
 914:	str	r1, [sp, #8]
 918:	movw	r1, #0
 91c:	movt	r1, #0
 920:	bl	ef60 <test_json>
 924:	movw	r1, #734	; 0x2de
 928:	mov	r3, r4
 92c:	str	r4, [sp]
 930:	orr	r5, r5, r0
 934:	movw	r2, #0
 938:	movt	r2, #0
 93c:	mov	r0, r6
 940:	str	r4, [sp, #4]
 944:	str	r1, [sp, #8]
 948:	movw	r1, #0
 94c:	movt	r1, #0
 950:	bl	ef60 <test_json>
 954:	movw	ip, #738	; 0x2e2
 958:	mov	r3, r4
 95c:	str	r4, [sp]
 960:	mov	r2, r9
 964:	orr	r5, r5, r0
 968:	movw	r1, #0
 96c:	movt	r1, #0
 970:	stmib	sp, {r4, ip}
 974:	mov	r0, r6
 978:	bl	ef60 <test_json>
 97c:	movw	ip, #750	; 0x2ee
 980:	mov	r2, r9
 984:	str	r4, [sp]
 988:	mov	r3, r4
 98c:	orr	r5, r5, r0
 990:	movw	r1, #0
 994:	movt	r1, #0
 998:	stmib	sp, {r4, ip}
 99c:	mov	r0, r6
 9a0:	bl	ef60 <test_json>
 9a4:	movw	r1, #766	; 0x2fe
 9a8:	mov	r3, r4
 9ac:	str	r4, [sp]
 9b0:	orr	r5, r5, r0
 9b4:	movw	r2, #0
 9b8:	movt	r2, #0
 9bc:	mov	r0, r6
 9c0:	str	r4, [sp, #4]
 9c4:	str	r1, [sp, #8]
 9c8:	movw	r1, #0
 9cc:	movt	r1, #0
 9d0:	bl	ef60 <test_json>
 9d4:	movw	r1, #770	; 0x302
 9d8:	mov	r3, r4
 9dc:	str	r4, [sp]
 9e0:	orr	r5, r5, r0
 9e4:	movw	r2, #0
 9e8:	movt	r2, #0
 9ec:	mov	r0, r6
 9f0:	str	r4, [sp, #4]
 9f4:	str	r1, [sp, #8]
 9f8:	movw	r1, #0
 9fc:	movt	r1, #0
 a00:	bl	ef60 <test_json>
 a04:	mov	r1, #776	; 0x308
 a08:	mov	r3, r4
 a0c:	str	r4, [sp]
 a10:	orr	r5, r5, r0
 a14:	movw	r2, #0
 a18:	movt	r2, #0
 a1c:	mov	r0, r6
 a20:	str	r4, [sp, #4]
 a24:	str	r1, [sp, #8]
 a28:	movw	r1, #0
 a2c:	movt	r1, #0
 a30:	bl	ef60 <test_json>
 a34:	movw	ip, #781	; 0x30d
 a38:	mov	r2, r7
 a3c:	str	r4, [sp]
 a40:	mov	r3, r4
 a44:	orr	r5, r5, r0
 a48:	movw	r1, #0
 a4c:	movt	r1, #0
 a50:	stmib	sp, {r4, ip}
 a54:	mov	r0, r6
 a58:	bl	ef60 <test_json>
 a5c:	movw	r1, #786	; 0x312
 a60:	mov	r3, r4
 a64:	str	r4, [sp]
 a68:	orr	r5, r5, r0
 a6c:	movw	r2, #0
 a70:	movt	r2, #0
 a74:	mov	r0, r6
 a78:	str	r4, [sp, #4]
 a7c:	str	r1, [sp, #8]
 a80:	movw	r1, #0
 a84:	movt	r1, #0
 a88:	bl	ef60 <test_json>
 a8c:	movw	r1, #791	; 0x317
 a90:	mov	r3, r4
 a94:	str	r4, [sp]
 a98:	orr	r5, r5, r0
 a9c:	movw	r2, #0
 aa0:	movt	r2, #0
 aa4:	mov	r0, r6
 aa8:	str	r4, [sp, #4]
 aac:	str	r1, [sp, #8]
 ab0:	movw	r1, #0
 ab4:	movt	r1, #0
 ab8:	bl	ef60 <test_json>
 abc:	mov	r1, #796	; 0x31c
 ac0:	mov	r3, r4
 ac4:	str	r4, [sp]
 ac8:	orr	r5, r5, r0
 acc:	movw	r2, #0
 ad0:	movt	r2, #0
 ad4:	mov	r0, r6
 ad8:	str	r4, [sp, #4]
 adc:	str	r1, [sp, #8]
 ae0:	movw	r1, #0
 ae4:	movt	r1, #0
 ae8:	bl	ef60 <test_json>
 aec:	movw	r1, #801	; 0x321
 af0:	mov	r3, r4
 af4:	str	r4, [sp]
 af8:	orr	r5, r5, r0
 afc:	movw	r2, #0
 b00:	movt	r2, #0
 b04:	mov	r0, r6
 b08:	str	r4, [sp, #4]
 b0c:	str	r1, [sp, #8]
 b10:	movw	r1, #0
 b14:	movt	r1, #0
 b18:	bl	ef60 <test_json>
 b1c:	movw	r1, #806	; 0x326
 b20:	orr	r5, r5, r0
 b24:	str	r4, [sp]
 b28:	mov	r3, r4
 b2c:	mov	r0, r6
 b30:	str	r4, [sp, #4]
 b34:	movw	r2, #0
 b38:	movt	r2, #0
 b3c:	str	r1, [sp, #8]
 b40:	movw	r1, #0
 b44:	movt	r1, #0
 b48:	bl	ef60 <test_json>
 b4c:	orrs	r3, r5, r0
 b50:	mvnne	r0, #0
 b54:	moveq	r0, r4
 b58:	add	sp, sp, #52	; 0x34
 b5c:	ldrd	r4, [sp]
 b60:	ldrd	r6, [sp, #8]
 b64:	ldrd	r8, [sp, #16]
 b68:	ldrd	sl, [sp, #24]
 b6c:	add	sp, sp, #32
 b70:	pop	{pc}		; (ldr pc, [sp], #4)
