
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
   0:	sub	sp, sp, #8
   4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	add	fp, sp, #28
   c:	sub	sp, sp, #4
  10:	mov	r8, r0
  14:	mov	r0, #8
  18:	mov	sl, r1
  1c:	str	r2, [fp, #8]
  20:	str	r3, [fp, #12]
  24:	bl	0 <malloc>
  28:	mov	r9, r0
  2c:	add	r0, fp, #8
  30:	mov	r1, #8
  34:	str	r0, [sp]
  38:	mov	r0, r8
  3c:	bl	0 <calloc>
  40:	cmp	sl, #1
  44:	str	r0, [r9, #4]
  48:	blt	a8 <_g+0xa8>
  4c:	mov	r7, r0
  50:	mov	r4, #0
  54:	ldr	r0, [sp]
  58:	add	r1, r0, #4
  5c:	str	r1, [sp]
  60:	mov	r1, r0
  64:	ldr	r6, [r1], #8
  68:	str	r1, [sp]
  6c:	mov	r1, #8
  70:	ldr	r5, [r0, #4]
  74:	mov	r0, #1
  78:	bl	0 <calloc>
  7c:	add	r1, r7, r6, lsl #3
  80:	str	r5, [r0]
  84:	add	r4, r4, #2
  88:	cmp	r4, sl
  8c:	ldr	r2, [r1, #4]
  90:	str	r2, [r0, #4]
  94:	ldr	r2, [r7, r6, lsl #3]
  98:	add	r2, r2, #1
  9c:	str	r2, [r7, r6, lsl #3]
  a0:	str	r0, [r1, #4]
  a4:	blt	54 <_g+0x54>
  a8:	str	r8, [r9]
  ac:	mov	r0, r9
  b0:	sub	sp, fp, #28
  b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  b8:	add	sp, sp, #8
  bc:	bx	lr

000000c0 <_f>:
  c0:	push	{r4, r5, r6, sl, fp, lr}
  c4:	add	fp, sp, #16
  c8:	mov	r5, r0
  cc:	mov	r0, #0
  d0:	cmp	r5, #0
  d4:	beq	11c <_f+0x5c>
  d8:	mov	r4, r1
  dc:	ldr	r1, [r5]
  e0:	cmp	r1, #1
  e4:	blt	11c <_f+0x5c>
  e8:	mov	r6, #0
  ec:	mov	r0, r5
  f0:	mov	r1, r6
  f4:	bl	0 <vetor_elemento>
  f8:	cmp	r0, r4
  fc:	beq	118 <_f+0x58>
 100:	ldr	r0, [r5]
 104:	add	r6, r6, #1
 108:	cmp	r6, r0
 10c:	blt	ec <_f+0x2c>
 110:	mov	r0, #0
 114:	pop	{r4, r5, r6, sl, fp, pc}
 118:	mov	r0, #1
 11c:	pop	{r4, r5, r6, sl, fp, pc}

00000120 <teste_grafo_novo>:
 120:	push	{r4, r5, fp, lr}
 124:	add	fp, sp, #8
 128:	movw	r0, #0
 12c:	movt	r0, #0
 130:	bl	0 <printf>
 134:	mov	r0, #10
 138:	bl	0 <grafo_novo>
 13c:	cmp	r0, #0
 140:	beq	1bc <teste_grafo_novo+0x9c>
 144:	mov	r4, r0
 148:	ldr	r0, [r0]
 14c:	mov	r5, #0
 150:	cmp	r0, #10
 154:	beq	168 <teste_grafo_novo+0x48>
 158:	movw	r0, #0
 15c:	movt	r0, #0
 160:	bl	0 <printf>
 164:	mov	r5, #1
 168:	mov	r0, r4
 16c:	bl	0 <grafo_apaga>
 170:	mov	r0, #1
 174:	bl	0 <grafo_novo>
 178:	cmp	r0, #0
 17c:	beq	1dc <teste_grafo_novo+0xbc>
 180:	mov	r4, r0
 184:	ldr	r0, [r0]
 188:	cmp	r0, #1
 18c:	bne	1fc <teste_grafo_novo+0xdc>
 190:	mov	r0, r4
 194:	bl	0 <grafo_apaga>
 198:	mov	r4, #1
 19c:	cmp	r5, #0
 1a0:	bne	214 <teste_grafo_novo+0xf4>
 1a4:	movw	r0, #0
 1a8:	movt	r0, #0
 1ac:	bl	0 <puts>
 1b0:	mov	r4, #0
 1b4:	mov	r0, r4
 1b8:	pop	{r4, r5, fp, pc}
 1bc:	movw	r0, #0
 1c0:	movt	r0, #0
 1c4:	bl	0 <printf>
 1c8:	mov	r0, #10
 1cc:	bl	0 <putchar>
 1d0:	mov	r4, #1
 1d4:	mov	r0, r4
 1d8:	pop	{r4, r5, fp, pc}
 1dc:	movw	r0, #0
 1e0:	movt	r0, #0
 1e4:	bl	0 <printf>
 1e8:	mov	r0, #10
 1ec:	bl	0 <putchar>
 1f0:	add	r4, r5, #1
 1f4:	mov	r0, r4
 1f8:	pop	{r4, r5, fp, pc}
 1fc:	movw	r0, #0
 200:	movt	r0, #0
 204:	bl	0 <printf>
 208:	mov	r0, r4
 20c:	bl	0 <grafo_apaga>
 210:	add	r4, r5, #1
 214:	mov	r0, #10
 218:	bl	0 <putchar>
 21c:	mov	r0, r4
 220:	pop	{r4, r5, fp, pc}

00000224 <teste_grafo_aresta>:
 224:	push	{r4, r5, fp, lr}
 228:	add	fp, sp, #8
 22c:	sub	sp, sp, #80	; 0x50
 230:	mov	r0, #1
 234:	mov	r4, #0
 238:	mov	r2, #6
 23c:	mov	r3, #4
 240:	mov	r1, #3
 244:	add	ip, sp, #52	; 0x34
 248:	str	r1, [sp, #68]	; 0x44
 24c:	str	r2, [sp, #64]	; 0x40
 250:	str	r4, [sp, #72]	; 0x48
 254:	str	r0, [sp, #76]	; 0x4c
 258:	mov	r1, #7
 25c:	str	r3, [sp, #32]
 260:	str	r4, [sp, #36]	; 0x24
 264:	str	r3, [sp, #40]	; 0x28
 268:	str	r2, [sp, #44]	; 0x2c
 26c:	str	r0, [sp, #48]	; 0x30
 270:	stm	ip, {r0, r1, r2}
 274:	mov	r2, #2
 278:	mov	r0, #5
 27c:	stm	sp, {r1, r2, r4}
 280:	str	r2, [sp, #12]
 284:	str	r1, [sp, #16]
 288:	str	r3, [sp, #28]
 28c:	str	r0, [sp, #20]
 290:	str	r0, [sp, #24]
 294:	mov	r0, #8
 298:	mov	r1, #22
 29c:	mov	r2, #3
 2a0:	mov	r3, #2
 2a4:	bl	0 <_g>
 2a8:	mov	r5, r0
 2ac:	movw	r0, #0
 2b0:	movt	r0, #0
 2b4:	bl	0 <printf>
 2b8:	mov	r0, r5
 2bc:	mov	r1, #5
 2c0:	mov	r2, #4
 2c4:	bl	0 <grafo_aresta>
 2c8:	cmp	r0, #1
 2cc:	beq	2e0 <teste_grafo_aresta+0xbc>
 2d0:	movw	r0, #0
 2d4:	movt	r0, #0
 2d8:	bl	0 <printf>
 2dc:	mov	r4, #1
 2e0:	mov	r0, r5
 2e4:	mov	r1, #7
 2e8:	mov	r2, #6
 2ec:	bl	0 <grafo_aresta>
 2f0:	cmp	r0, #1
 2f4:	beq	308 <teste_grafo_aresta+0xe4>
 2f8:	movw	r0, #0
 2fc:	movt	r0, #0
 300:	bl	0 <printf>
 304:	add	r4, r4, #1
 308:	mov	r0, r5
 30c:	mov	r1, #7
 310:	mov	r2, #1
 314:	bl	0 <grafo_aresta>
 318:	cmp	r0, #0
 31c:	beq	330 <teste_grafo_aresta+0x10c>
 320:	movw	r0, #0
 324:	movt	r0, #0
 328:	bl	0 <printf>
 32c:	add	r4, r4, #1
 330:	mov	r0, #0
 334:	mov	r1, #2
 338:	mov	r2, #7
 33c:	bl	0 <grafo_aresta>
 340:	cmn	r0, #1
 344:	beq	364 <teste_grafo_aresta+0x140>
 348:	movw	r0, #0
 34c:	movt	r0, #0
 350:	bl	0 <printf>
 354:	mov	r0, r5
 358:	bl	0 <grafo_apaga>
 35c:	add	r4, r4, #1
 360:	b	374 <teste_grafo_aresta+0x150>
 364:	mov	r0, r5
 368:	bl	0 <grafo_apaga>
 36c:	cmp	r4, #0
 370:	beq	388 <teste_grafo_aresta+0x164>
 374:	mov	r0, #10
 378:	bl	0 <putchar>
 37c:	mov	r0, r4
 380:	sub	sp, fp, #8
 384:	pop	{r4, r5, fp, pc}
 388:	movw	r0, #0
 38c:	movt	r0, #0
 390:	bl	0 <puts>
 394:	mov	r4, #0
 398:	b	37c <teste_grafo_aresta+0x158>

0000039c <teste_grafo_adiciona>:
 39c:	push	{r4, r5, fp, lr}
 3a0:	add	fp, sp, #8
 3a4:	sub	sp, sp, #8
 3a8:	mov	r0, #2
 3ac:	mov	r1, #7
 3b0:	mov	r2, #3
 3b4:	mov	r3, #2
 3b8:	str	r1, [sp]
 3bc:	str	r0, [sp, #4]
 3c0:	mov	r0, #9
 3c4:	mov	r1, #4
 3c8:	bl	0 <_g>
 3cc:	mov	r5, r0
 3d0:	movw	r0, #0
 3d4:	movt	r0, #0
 3d8:	bl	0 <printf>
 3dc:	mov	r0, r5
 3e0:	mov	r1, #2
 3e4:	mov	r2, #7
 3e8:	bl	0 <grafo_adiciona>
 3ec:	mov	r4, #0
 3f0:	cmp	r0, #1
 3f4:	beq	408 <teste_grafo_adiciona+0x6c>
 3f8:	movw	r0, #0
 3fc:	movt	r0, #0
 400:	bl	0 <printf>
 404:	mov	r4, #1
 408:	ldr	r0, [r5, #4]
 40c:	ldr	r0, [r0, #20]
 410:	cmp	r0, #0
 414:	beq	424 <teste_grafo_adiciona+0x88>
 418:	ldr	r0, [r0]
 41c:	cmp	r0, #7
 420:	beq	434 <teste_grafo_adiciona+0x98>
 424:	movw	r0, #0
 428:	movt	r0, #0
 42c:	bl	0 <printf>
 430:	add	r4, r4, #1
 434:	mov	r0, r5
 438:	mov	r1, #3
 43c:	mov	r2, #8
 440:	bl	0 <grafo_adiciona>
 444:	cmp	r0, #1
 448:	beq	45c <teste_grafo_adiciona+0xc0>
 44c:	movw	r0, #0
 450:	movt	r0, #0
 454:	bl	0 <printf>
 458:	add	r4, r4, #1
 45c:	ldr	r0, [r5, #4]
 460:	ldr	r1, [r0, #28]
 464:	cmp	r1, #0
 468:	beq	484 <teste_grafo_adiciona+0xe8>
 46c:	ldr	r0, [r1, #4]
 470:	cmp	r0, #0
 474:	beq	484 <teste_grafo_adiciona+0xe8>
 478:	ldr	r2, [r0, #4]
 47c:	cmp	r2, #0
 480:	beq	53c <teste_grafo_adiciona+0x1a0>
 484:	movw	r0, #0
 488:	movt	r0, #0
 48c:	bl	0 <printf>
 490:	add	r4, r4, #1
 494:	mov	r0, r5
 498:	mov	r1, #2
 49c:	mov	r2, #7
 4a0:	bl	0 <grafo_adiciona>
 4a4:	cmp	r0, #0
 4a8:	beq	4bc <teste_grafo_adiciona+0x120>
 4ac:	movw	r0, #0
 4b0:	movt	r0, #0
 4b4:	bl	0 <printf>
 4b8:	add	r4, r4, #1
 4bc:	mov	r0, r5
 4c0:	mov	r1, #22
 4c4:	mov	r2, #7
 4c8:	bl	0 <grafo_adiciona>
 4cc:	cmn	r0, #1
 4d0:	beq	4e4 <teste_grafo_adiciona+0x148>
 4d4:	movw	r0, #0
 4d8:	movt	r0, #0
 4dc:	bl	0 <printf>
 4e0:	add	r4, r4, #1
 4e4:	mov	r0, #0
 4e8:	mov	r1, #2
 4ec:	mov	r2, #7
 4f0:	bl	0 <grafo_adiciona>
 4f4:	cmn	r0, #1
 4f8:	beq	518 <teste_grafo_adiciona+0x17c>
 4fc:	movw	r0, #0
 500:	movt	r0, #0
 504:	bl	0 <printf>
 508:	mov	r0, r5
 50c:	bl	0 <grafo_apaga>
 510:	add	r4, r4, #1
 514:	b	528 <teste_grafo_adiciona+0x18c>
 518:	mov	r0, r5
 51c:	bl	0 <grafo_apaga>
 520:	cmp	r4, #0
 524:	beq	560 <teste_grafo_adiciona+0x1c4>
 528:	mov	r0, #10
 52c:	bl	0 <putchar>
 530:	mov	r0, r4
 534:	sub	sp, fp, #8
 538:	pop	{r4, r5, fp, pc}
 53c:	ldr	r1, [r1]
 540:	cmp	r1, #8
 544:	beq	574 <teste_grafo_adiciona+0x1d8>
 548:	cmp	r1, #2
 54c:	bne	484 <teste_grafo_adiciona+0xe8>
 550:	ldr	r0, [r0]
 554:	cmp	r0, #8
 558:	bne	484 <teste_grafo_adiciona+0xe8>
 55c:	b	494 <teste_grafo_adiciona+0xf8>
 560:	movw	r0, #0
 564:	movt	r0, #0
 568:	bl	0 <puts>
 56c:	mov	r4, #0
 570:	b	530 <teste_grafo_adiciona+0x194>
 574:	ldr	r0, [r0]
 578:	cmp	r0, #2
 57c:	bne	484 <teste_grafo_adiciona+0xe8>
 580:	b	494 <teste_grafo_adiciona+0xf8>

00000584 <teste_grafo_remove>:
 584:	push	{r4, r5, fp, lr}
 588:	add	fp, sp, #8
 58c:	sub	sp, sp, #16
 590:	mov	r0, #1
 594:	mov	r1, #7
 598:	mov	r2, #2
 59c:	mov	r3, #2
 5a0:	stm	sp, {r1, r2}
 5a4:	str	r1, [sp, #8]
 5a8:	str	r0, [sp, #12]
 5ac:	mov	r0, #9
 5b0:	mov	r1, #6
 5b4:	mov	r2, #3
 5b8:	bl	0 <_g>
 5bc:	mov	r5, r0
 5c0:	movw	r0, #0
 5c4:	movt	r0, #0
 5c8:	bl	0 <printf>
 5cc:	mov	r0, r5
 5d0:	mov	r1, #7
 5d4:	mov	r2, #1
 5d8:	bl	0 <grafo_remove>
 5dc:	mov	r4, #0
 5e0:	cmp	r0, #1
 5e4:	beq	5f8 <teste_grafo_remove+0x74>
 5e8:	movw	r0, #0
 5ec:	movt	r0, #0
 5f0:	bl	0 <printf>
 5f4:	mov	r4, #1
 5f8:	ldr	r0, [r5, #4]
 5fc:	ldr	r0, [r0, #60]	; 0x3c
 600:	cmp	r0, #0
 604:	beq	620 <teste_grafo_remove+0x9c>
 608:	ldr	r1, [r0, #4]
 60c:	cmp	r1, #0
 610:	bne	620 <teste_grafo_remove+0x9c>
 614:	ldr	r0, [r0]
 618:	cmp	r0, #2
 61c:	beq	630 <teste_grafo_remove+0xac>
 620:	movw	r0, #0
 624:	movt	r0, #0
 628:	bl	0 <printf>
 62c:	add	r4, r4, #1
 630:	mov	r0, r5
 634:	mov	r1, #7
 638:	mov	r2, #2
 63c:	bl	0 <grafo_remove>
 640:	cmp	r0, #1
 644:	beq	658 <teste_grafo_remove+0xd4>
 648:	movw	r0, #0
 64c:	movt	r0, #0
 650:	bl	0 <printf>
 654:	add	r4, r4, #1
 658:	ldr	r0, [r5, #4]
 65c:	ldr	r0, [r0, #60]	; 0x3c
 660:	cmp	r0, #0
 664:	beq	678 <teste_grafo_remove+0xf4>
 668:	movw	r0, #0
 66c:	movt	r0, #0
 670:	bl	0 <printf>
 674:	add	r4, r4, #1
 678:	mov	r0, r5
 67c:	mov	r1, #4
 680:	mov	r2, #0
 684:	bl	0 <grafo_remove>
 688:	cmp	r0, #0
 68c:	beq	6a0 <teste_grafo_remove+0x11c>
 690:	movw	r0, #0
 694:	movt	r0, #0
 698:	bl	0 <printf>
 69c:	add	r4, r4, #1
 6a0:	mov	r0, r5
 6a4:	mov	r1, #7
 6a8:	mov	r2, #22
 6ac:	bl	0 <grafo_remove>
 6b0:	cmn	r0, #1
 6b4:	beq	6d4 <teste_grafo_remove+0x150>
 6b8:	movw	r0, #0
 6bc:	movt	r0, #0
 6c0:	bl	0 <printf>
 6c4:	mov	r0, r5
 6c8:	bl	0 <grafo_apaga>
 6cc:	add	r4, r4, #1
 6d0:	b	6e4 <teste_grafo_remove+0x160>
 6d4:	mov	r0, r5
 6d8:	bl	0 <grafo_apaga>
 6dc:	cmp	r4, #0
 6e0:	beq	6f8 <teste_grafo_remove+0x174>
 6e4:	mov	r0, #10
 6e8:	bl	0 <putchar>
 6ec:	mov	r0, r4
 6f0:	sub	sp, fp, #8
 6f4:	pop	{r4, r5, fp, pc}
 6f8:	movw	r0, #0
 6fc:	movt	r0, #0
 700:	bl	0 <puts>
 704:	mov	r4, #0
 708:	b	6ec <teste_grafo_remove+0x168>

0000070c <teste_v_sucessores>:
 70c:	push	{r4, r5, r6, r7, fp, lr}
 710:	add	fp, sp, #16
 714:	sub	sp, sp, #80	; 0x50
 718:	mov	r1, #6
 71c:	mov	r0, #3
 720:	mov	r6, #1
 724:	mov	r7, #0
 728:	mov	r2, #4
 72c:	mov	r3, #2
 730:	str	r0, [sp, #68]	; 0x44
 734:	mov	r0, #7
 738:	str	r1, [sp, #64]	; 0x40
 73c:	str	r1, [sp, #44]	; 0x2c
 740:	str	r1, [sp, #60]	; 0x3c
 744:	mov	r1, #5
 748:	str	r7, [sp, #72]	; 0x48
 74c:	str	r6, [sp, #76]	; 0x4c
 750:	str	r2, [sp, #32]
 754:	str	r7, [sp, #36]	; 0x24
 758:	str	r2, [sp, #40]	; 0x28
 75c:	str	r6, [sp, #48]	; 0x30
 760:	str	r6, [sp, #52]	; 0x34
 764:	str	r0, [sp, #56]	; 0x38
 768:	stm	sp, {r0, r3, r7}
 76c:	str	r3, [sp, #12]
 770:	str	r0, [sp, #16]
 774:	str	r2, [sp, #28]
 778:	str	r1, [sp, #20]
 77c:	str	r1, [sp, #24]
 780:	mov	r0, #8
 784:	mov	r1, #22
 788:	mov	r2, #3
 78c:	mov	r3, #2
 790:	bl	0 <_g>
 794:	mov	r4, r0
 798:	movw	r0, #0
 79c:	movt	r0, #0
 7a0:	bl	0 <printf>
 7a4:	mov	r0, r4
 7a8:	mov	r1, #7
 7ac:	bl	0 <v_sucessores>
 7b0:	cmp	r0, #0
 7b4:	beq	810 <teste_v_sucessores+0x104>
 7b8:	mov	r5, r0
 7bc:	ldr	r0, [r0]
 7c0:	cmp	r0, #3
 7c4:	beq	7e4 <teste_v_sucessores+0xd8>
 7c8:	movw	r0, #0
 7cc:	movt	r0, #0
 7d0:	bl	0 <printf>
 7d4:	ldr	r0, [r5]
 7d8:	mov	r7, #1
 7dc:	cmp	r0, #1
 7e0:	blt	884 <teste_v_sucessores+0x178>
 7e4:	mov	r6, #0
 7e8:	mov	r0, r5
 7ec:	mov	r1, r6
 7f0:	bl	0 <vetor_elemento>
 7f4:	ldr	r1, [r5]
 7f8:	cmp	r0, #2
 7fc:	beq	820 <teste_v_sucessores+0x114>
 800:	add	r6, r6, #1
 804:	cmp	r6, r1
 808:	blt	7e8 <teste_v_sucessores+0xdc>
 80c:	b	884 <teste_v_sucessores+0x178>
 810:	movw	r0, #0
 814:	movt	r0, #0
 818:	bl	0 <printf>
 81c:	b	910 <teste_v_sucessores+0x204>
 820:	cmp	r1, #1
 824:	blt	884 <teste_v_sucessores+0x178>
 828:	mov	r6, #0
 82c:	mov	r0, r5
 830:	mov	r1, r6
 834:	bl	0 <vetor_elemento>
 838:	ldr	r1, [r5]
 83c:	cmp	r0, #5
 840:	beq	854 <teste_v_sucessores+0x148>
 844:	add	r6, r6, #1
 848:	cmp	r6, r1
 84c:	blt	82c <teste_v_sucessores+0x120>
 850:	b	884 <teste_v_sucessores+0x178>
 854:	cmp	r1, #1
 858:	blt	884 <teste_v_sucessores+0x178>
 85c:	mov	r6, #0
 860:	mov	r0, r5
 864:	mov	r1, r6
 868:	bl	0 <vetor_elemento>
 86c:	cmp	r0, #6
 870:	beq	894 <teste_v_sucessores+0x188>
 874:	ldr	r0, [r5]
 878:	add	r6, r6, #1
 87c:	cmp	r6, r0
 880:	blt	860 <teste_v_sucessores+0x154>
 884:	movw	r0, #0
 888:	movt	r0, #0
 88c:	bl	0 <printf>
 890:	add	r7, r7, #1
 894:	mov	r0, r5
 898:	bl	0 <vetor_apaga>
 89c:	mov	r0, r4
 8a0:	mov	r1, #2
 8a4:	bl	0 <v_sucessores>
 8a8:	cmp	r0, #0
 8ac:	beq	8d4 <teste_v_sucessores+0x1c8>
 8b0:	mov	r5, r0
 8b4:	ldr	r0, [r0]
 8b8:	cmp	r0, #0
 8bc:	beq	8f4 <teste_v_sucessores+0x1e8>
 8c0:	movw	r0, #0
 8c4:	movt	r0, #0
 8c8:	bl	0 <printf>
 8cc:	add	r6, r7, #1
 8d0:	b	8f8 <teste_v_sucessores+0x1ec>
 8d4:	movw	r0, #0
 8d8:	movt	r0, #0
 8dc:	bl	0 <printf>
 8e0:	mov	r0, #1
 8e4:	cmp	r0, #0
 8e8:	beq	91c <teste_v_sucessores+0x210>
 8ec:	add	r6, r7, #1
 8f0:	b	910 <teste_v_sucessores+0x204>
 8f4:	mov	r6, r7
 8f8:	mov	r0, r5
 8fc:	bl	0 <vetor_apaga>
 900:	mov	r0, r4
 904:	bl	0 <grafo_apaga>
 908:	cmp	r6, #0
 90c:	beq	91c <teste_v_sucessores+0x210>
 910:	mov	r0, #10
 914:	bl	0 <putchar>
 918:	b	92c <teste_v_sucessores+0x220>
 91c:	movw	r0, #0
 920:	movt	r0, #0
 924:	bl	0 <puts>
 928:	mov	r6, #0
 92c:	mov	r0, r6
 930:	sub	sp, fp, #16
 934:	pop	{r4, r5, r6, r7, fp, pc}

00000938 <teste_v_antecessores>:
 938:	push	{r4, r5, r6, r7, fp, lr}
 93c:	add	fp, sp, #16
 940:	sub	sp, sp, #80	; 0x50
 944:	mov	r1, #6
 948:	mov	r0, #3
 94c:	mov	r6, #1
 950:	mov	r7, #0
 954:	mov	r2, #4
 958:	mov	r3, #2
 95c:	str	r0, [sp, #68]	; 0x44
 960:	mov	r0, #7
 964:	str	r1, [sp, #64]	; 0x40
 968:	str	r1, [sp, #44]	; 0x2c
 96c:	str	r1, [sp, #60]	; 0x3c
 970:	mov	r1, #5
 974:	str	r7, [sp, #72]	; 0x48
 978:	str	r6, [sp, #76]	; 0x4c
 97c:	str	r2, [sp, #32]
 980:	str	r7, [sp, #36]	; 0x24
 984:	str	r2, [sp, #40]	; 0x28
 988:	str	r6, [sp, #48]	; 0x30
 98c:	str	r6, [sp, #52]	; 0x34
 990:	str	r0, [sp, #56]	; 0x38
 994:	stm	sp, {r0, r3, r7}
 998:	str	r3, [sp, #12]
 99c:	str	r0, [sp, #16]
 9a0:	str	r2, [sp, #28]
 9a4:	str	r1, [sp, #20]
 9a8:	str	r1, [sp, #24]
 9ac:	mov	r0, #8
 9b0:	mov	r1, #22
 9b4:	mov	r2, #3
 9b8:	mov	r3, #2
 9bc:	bl	0 <_g>
 9c0:	mov	r4, r0
 9c4:	movw	r0, #0
 9c8:	movt	r0, #0
 9cc:	bl	0 <printf>
 9d0:	mov	r0, r4
 9d4:	mov	r1, #2
 9d8:	bl	0 <v_antecessores>
 9dc:	cmp	r0, #0
 9e0:	beq	a3c <teste_v_antecessores+0x104>
 9e4:	mov	r5, r0
 9e8:	ldr	r0, [r0]
 9ec:	cmp	r0, #3
 9f0:	beq	a10 <teste_v_antecessores+0xd8>
 9f4:	movw	r0, #0
 9f8:	movt	r0, #0
 9fc:	bl	0 <printf>
 a00:	ldr	r0, [r5]
 a04:	mov	r7, #1
 a08:	cmp	r0, #1
 a0c:	blt	ab0 <teste_v_antecessores+0x178>
 a10:	mov	r6, #0
 a14:	mov	r0, r5
 a18:	mov	r1, r6
 a1c:	bl	0 <vetor_elemento>
 a20:	ldr	r1, [r5]
 a24:	cmp	r0, #0
 a28:	beq	a4c <teste_v_antecessores+0x114>
 a2c:	add	r6, r6, #1
 a30:	cmp	r6, r1
 a34:	blt	a14 <teste_v_antecessores+0xdc>
 a38:	b	ab0 <teste_v_antecessores+0x178>
 a3c:	movw	r0, #0
 a40:	movt	r0, #0
 a44:	bl	0 <printf>
 a48:	b	b3c <teste_v_antecessores+0x204>
 a4c:	cmp	r1, #1
 a50:	blt	ab0 <teste_v_antecessores+0x178>
 a54:	mov	r6, #0
 a58:	mov	r0, r5
 a5c:	mov	r1, r6
 a60:	bl	0 <vetor_elemento>
 a64:	ldr	r1, [r5]
 a68:	cmp	r0, #3
 a6c:	beq	a80 <teste_v_antecessores+0x148>
 a70:	add	r6, r6, #1
 a74:	cmp	r6, r1
 a78:	blt	a58 <teste_v_antecessores+0x120>
 a7c:	b	ab0 <teste_v_antecessores+0x178>
 a80:	cmp	r1, #1
 a84:	blt	ab0 <teste_v_antecessores+0x178>
 a88:	mov	r6, #0
 a8c:	mov	r0, r5
 a90:	mov	r1, r6
 a94:	bl	0 <vetor_elemento>
 a98:	cmp	r0, #7
 a9c:	beq	ac0 <teste_v_antecessores+0x188>
 aa0:	ldr	r0, [r5]
 aa4:	add	r6, r6, #1
 aa8:	cmp	r6, r0
 aac:	blt	a8c <teste_v_antecessores+0x154>
 ab0:	movw	r0, #0
 ab4:	movt	r0, #0
 ab8:	bl	0 <printf>
 abc:	add	r7, r7, #1
 ac0:	mov	r0, r5
 ac4:	bl	0 <vetor_apaga>
 ac8:	mov	r0, r4
 acc:	mov	r1, #7
 ad0:	bl	0 <v_antecessores>
 ad4:	cmp	r0, #0
 ad8:	beq	b00 <teste_v_antecessores+0x1c8>
 adc:	mov	r5, r0
 ae0:	ldr	r0, [r0]
 ae4:	cmp	r0, #0
 ae8:	beq	b20 <teste_v_antecessores+0x1e8>
 aec:	movw	r0, #0
 af0:	movt	r0, #0
 af4:	bl	0 <printf>
 af8:	add	r6, r7, #1
 afc:	b	b24 <teste_v_antecessores+0x1ec>
 b00:	movw	r0, #0
 b04:	movt	r0, #0
 b08:	bl	0 <printf>
 b0c:	mov	r0, #1
 b10:	cmp	r0, #0
 b14:	beq	b48 <teste_v_antecessores+0x210>
 b18:	add	r6, r7, #1
 b1c:	b	b3c <teste_v_antecessores+0x204>
 b20:	mov	r6, r7
 b24:	mov	r0, r5
 b28:	bl	0 <vetor_apaga>
 b2c:	mov	r0, r4
 b30:	bl	0 <grafo_apaga>
 b34:	cmp	r6, #0
 b38:	beq	b48 <teste_v_antecessores+0x210>
 b3c:	mov	r0, #10
 b40:	bl	0 <putchar>
 b44:	b	b58 <teste_v_antecessores+0x220>
 b48:	movw	r0, #0
 b4c:	movt	r0, #0
 b50:	bl	0 <puts>
 b54:	mov	r6, #0
 b58:	mov	r0, r6
 b5c:	sub	sp, fp, #16
 b60:	pop	{r4, r5, r6, r7, fp, pc}

00000b64 <teste_v_grau>:
 b64:	push	{r4, r5, fp, lr}
 b68:	add	fp, sp, #8
 b6c:	sub	sp, sp, #80	; 0x50
 b70:	mov	r0, #1
 b74:	mov	r4, #0
 b78:	mov	r2, #6
 b7c:	mov	r3, #4
 b80:	mov	r1, #3
 b84:	add	ip, sp, #52	; 0x34
 b88:	str	r1, [sp, #68]	; 0x44
 b8c:	str	r2, [sp, #64]	; 0x40
 b90:	str	r4, [sp, #72]	; 0x48
 b94:	str	r0, [sp, #76]	; 0x4c
 b98:	mov	r1, #7
 b9c:	str	r3, [sp, #32]
 ba0:	str	r4, [sp, #36]	; 0x24
 ba4:	str	r3, [sp, #40]	; 0x28
 ba8:	str	r2, [sp, #44]	; 0x2c
 bac:	str	r0, [sp, #48]	; 0x30
 bb0:	stm	ip, {r0, r1, r2}
 bb4:	mov	r2, #2
 bb8:	mov	r0, #5
 bbc:	stm	sp, {r1, r2, r4}
 bc0:	str	r2, [sp, #12]
 bc4:	str	r1, [sp, #16]
 bc8:	str	r3, [sp, #28]
 bcc:	str	r0, [sp, #20]
 bd0:	str	r0, [sp, #24]
 bd4:	mov	r0, #8
 bd8:	mov	r1, #22
 bdc:	mov	r2, #3
 be0:	mov	r3, #2
 be4:	bl	0 <_g>
 be8:	mov	r5, r0
 bec:	movw	r0, #0
 bf0:	movt	r0, #0
 bf4:	bl	0 <printf>
 bf8:	mov	r0, r5
 bfc:	mvn	r1, #3
 c00:	bl	0 <v_grau>
 c04:	cmn	r0, #1
 c08:	beq	c1c <teste_v_grau+0xb8>
 c0c:	movw	r0, #0
 c10:	movt	r0, #0
 c14:	bl	0 <printf>
 c18:	mov	r4, #1
 c1c:	mov	r0, r5
 c20:	mov	r1, #7
 c24:	bl	0 <v_grau>
 c28:	cmp	r0, #3
 c2c:	beq	c40 <teste_v_grau+0xdc>
 c30:	movw	r0, #0
 c34:	movt	r0, #0
 c38:	bl	0 <printf>
 c3c:	add	r4, r4, #1
 c40:	mov	r0, r5
 c44:	mov	r1, #5
 c48:	bl	0 <v_grau>
 c4c:	cmp	r0, #2
 c50:	bne	c78 <teste_v_grau+0x114>
 c54:	mov	r0, r5
 c58:	bl	0 <grafo_apaga>
 c5c:	cmp	r4, #0
 c60:	bne	c90 <teste_v_grau+0x12c>
 c64:	movw	r0, #0
 c68:	movt	r0, #0
 c6c:	bl	0 <puts>
 c70:	mov	r4, #0
 c74:	b	c98 <teste_v_grau+0x134>
 c78:	movw	r0, #0
 c7c:	movt	r0, #0
 c80:	bl	0 <printf>
 c84:	mov	r0, r5
 c88:	bl	0 <grafo_apaga>
 c8c:	add	r4, r4, #1
 c90:	mov	r0, #10
 c94:	bl	0 <putchar>
 c98:	mov	r0, r4
 c9c:	sub	sp, fp, #8
 ca0:	pop	{r4, r5, fp, pc}

00000ca4 <teste_v_celebridade>:
 ca4:	push	{r4, r5, fp, lr}
 ca8:	add	fp, sp, #8
 cac:	sub	sp, sp, #112	; 0x70
 cb0:	mov	r1, #4
 cb4:	add	r0, sp, #96	; 0x60
 cb8:	mov	r2, #2
 cbc:	mov	ip, #5
 cc0:	mov	r3, #6
 cc4:	mov	r4, #1
 cc8:	mov	r5, #0
 ccc:	add	lr, sp, #40	; 0x28
 cd0:	stm	r0, {r1, r2, ip}
 cd4:	mov	r0, #3
 cd8:	str	r2, [sp, #108]	; 0x6c
 cdc:	str	r3, [sp, #64]	; 0x40
 ce0:	str	r5, [sp, #72]	; 0x48
 ce4:	str	r4, [sp, #76]	; 0x4c
 ce8:	str	r4, [sp, #80]	; 0x50
 cec:	str	r2, [sp, #84]	; 0x54
 cf0:	str	r3, [sp, #88]	; 0x58
 cf4:	str	r2, [sp, #92]	; 0x5c
 cf8:	str	r1, [sp, #32]
 cfc:	str	r5, [sp, #36]	; 0x24
 d00:	str	r0, [sp, #68]	; 0x44
 d04:	mov	r0, #7
 d08:	stm	lr, {r1, r3, r4}
 d0c:	str	r3, [sp, #60]	; 0x3c
 d10:	str	r4, [sp, #52]	; 0x34
 d14:	mov	r3, #2
 d18:	str	r0, [sp, #56]	; 0x38
 d1c:	stm	sp, {r0, r2, r5}
 d20:	str	r2, [sp, #12]
 d24:	str	r0, [sp, #16]
 d28:	str	r1, [sp, #28]
 d2c:	mov	r0, #8
 d30:	mov	r1, #30
 d34:	mov	r2, #3
 d38:	str	ip, [sp, #20]
 d3c:	str	ip, [sp, #24]
 d40:	bl	0 <_g>
 d44:	mov	r4, r0
 d48:	movw	r0, #0
 d4c:	movt	r0, #0
 d50:	bl	0 <printf>
 d54:	mov	r0, r4
 d58:	mov	r1, #7
 d5c:	bl	0 <v_celebridade>
 d60:	cmp	r0, #0
 d64:	beq	d78 <teste_v_celebridade+0xd4>
 d68:	movw	r0, #0
 d6c:	movt	r0, #0
 d70:	bl	0 <printf>
 d74:	mov	r5, #1
 d78:	mov	r0, r4
 d7c:	mov	r1, #2
 d80:	bl	0 <v_celebridade>
 d84:	cmp	r0, #1
 d88:	bne	db4 <teste_v_celebridade+0x110>
 d8c:	mov	r0, r4
 d90:	bl	0 <grafo_apaga>
 d94:	mov	r4, #1
 d98:	cmp	r5, #0
 d9c:	bne	dcc <teste_v_celebridade+0x128>
 da0:	movw	r0, #0
 da4:	movt	r0, #0
 da8:	bl	0 <puts>
 dac:	mov	r4, #0
 db0:	b	dd4 <teste_v_celebridade+0x130>
 db4:	movw	r0, #0
 db8:	movt	r0, #0
 dbc:	bl	0 <printf>
 dc0:	mov	r0, r4
 dc4:	bl	0 <grafo_apaga>
 dc8:	add	r4, r5, #1
 dcc:	mov	r0, #10
 dd0:	bl	0 <putchar>
 dd4:	mov	r0, r4
 dd8:	sub	sp, fp, #8
 ddc:	pop	{r4, r5, fp, pc}

00000de0 <main>:
 de0:	push	{r4, sl, fp, lr}
 de4:	add	fp, sp, #8
 de8:	movw	r0, #0
 dec:	mov	r1, #0
 df0:	mov	r2, #2
 df4:	mov	r3, #0
 df8:	movt	r0, #0
 dfc:	ldr	r0, [r0]
 e00:	bl	0 <setvbuf>
 e04:	movw	r0, #0
 e08:	mov	r1, #0
 e0c:	mov	r2, #2
 e10:	mov	r3, #0
 e14:	movt	r0, #0
 e18:	ldr	r0, [r0]
 e1c:	bl	0 <setvbuf>
 e20:	bl	120 <teste_grafo_novo>
 e24:	mov	r4, r0
 e28:	bl	224 <teste_grafo_aresta>
 e2c:	add	r4, r0, r4
 e30:	bl	39c <teste_grafo_adiciona>
 e34:	add	r4, r4, r0
 e38:	bl	584 <teste_grafo_remove>
 e3c:	add	r4, r4, r0
 e40:	bl	70c <teste_v_sucessores>
 e44:	add	r4, r4, r0
 e48:	bl	938 <teste_v_antecessores>
 e4c:	add	r4, r4, r0
 e50:	bl	b64 <teste_v_grau>
 e54:	add	r4, r4, r0
 e58:	bl	ca4 <teste_v_celebridade>
 e5c:	adds	r1, r4, r0
 e60:	beq	e78 <main+0x98>
 e64:	movw	r0, #0
 e68:	movt	r0, #0
 e6c:	bl	0 <printf>
 e70:	mov	r0, #0
 e74:	pop	{r4, sl, fp, pc}
 e78:	movw	r0, #0
 e7c:	movt	r0, #0
 e80:	bl	0 <puts>
 e84:	mov	r0, #0
 e88:	pop	{r4, sl, fp, pc}
