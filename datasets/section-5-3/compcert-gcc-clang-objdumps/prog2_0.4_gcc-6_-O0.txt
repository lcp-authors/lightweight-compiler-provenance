
../compcert-repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

000105e4 <.init>:
   105e4:	push	{r3, lr}
   105e8:	bl	10694 <_start@@Base+0x3c>
   105ec:	pop	{r3, pc}

Disassembly of section .plt:

000105f0 <printf@plt-0x14>:
   105f0:	push	{lr}		; (str lr, [sp, #-4]!)
   105f4:	ldr	lr, [pc, #4]	; 10600 <printf@plt-0x4>
   105f8:	add	lr, pc, lr
   105fc:	ldr	pc, [lr, #8]!
   10600:	andeq	r0, r1, r0, lsl #20

00010604 <printf@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2560]!	; 0xa00

00010610 <puts@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #16, 20	; 0x10000
   10618:	ldr	pc, [ip, #2552]!	; 0x9f8

0001061c <malloc@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #16, 20	; 0x10000
   10624:	ldr	pc, [ip, #2544]!	; 0x9f0

00010628 <__libc_start_main@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2536]!	; 0x9e8

00010634 <__gmon_start__@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010640 <__isoc99_scanf@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2520]!	; 0x9d8

0001064c <abort@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2512]!	; 0x9d0

Disassembly of section .text:

00010658 <_start@@Base>:
   10658:	mov	fp, #0
   1065c:	mov	lr, #0
   10660:	pop	{r1}		; (ldr r1, [sp], #4)
   10664:	mov	r2, sp
   10668:	push	{r2}		; (str r2, [sp, #-4]!)
   1066c:	push	{r0}		; (str r0, [sp, #-4]!)
   10670:	ldr	ip, [pc, #16]	; 10688 <_start@@Base+0x30>
   10674:	push	{ip}		; (str ip, [sp, #-4]!)
   10678:	ldr	r0, [pc, #12]	; 1068c <_start@@Base+0x34>
   1067c:	ldr	r3, [pc, #12]	; 10690 <_start@@Base+0x38>
   10680:	bl	10628 <__libc_start_main@plt>
   10684:	bl	1064c <abort@plt>
   10688:	strdeq	r0, [r1], -r4
   1068c:	andeq	r0, r1, ip, lsl r8
   10690:	muleq	r1, r4, r9
   10694:	ldr	r3, [pc, #20]	; 106b0 <_start@@Base+0x58>
   10698:	ldr	r2, [pc, #20]	; 106b4 <_start@@Base+0x5c>
   1069c:	add	r3, pc, r3
   106a0:	ldr	r2, [r3, r2]
   106a4:	cmp	r2, #0
   106a8:	bxeq	lr
   106ac:	b	10634 <__gmon_start__@plt>
   106b0:	andeq	r0, r1, ip, asr r9
   106b4:	andeq	r0, r0, r8, lsr #32
   106b8:	ldr	r3, [pc, #28]	; 106dc <_start@@Base+0x84>
   106bc:	ldr	r0, [pc, #28]	; 106e0 <_start@@Base+0x88>
   106c0:	sub	r3, r3, r0
   106c4:	cmp	r3, #6
   106c8:	bxls	lr
   106cc:	ldr	r3, [pc, #16]	; 106e4 <_start@@Base+0x8c>
   106d0:	cmp	r3, #0
   106d4:	bxeq	lr
   106d8:	bx	r3
   106dc:	andeq	r1, r2, r7, lsr r0
   106e0:	andeq	r1, r2, r4, lsr r0
   106e4:	andeq	r0, r0, r0
   106e8:	ldr	r1, [pc, #36]	; 10714 <_start@@Base+0xbc>
   106ec:	ldr	r0, [pc, #36]	; 10718 <_start@@Base+0xc0>
   106f0:	sub	r1, r1, r0
   106f4:	asr	r1, r1, #2
   106f8:	add	r1, r1, r1, lsr #31
   106fc:	asrs	r1, r1, #1
   10700:	bxeq	lr
   10704:	ldr	r3, [pc, #16]	; 1071c <_start@@Base+0xc4>
   10708:	cmp	r3, #0
   1070c:	bxeq	lr
   10710:	bx	r3
   10714:	andeq	r1, r2, r4, lsr r0
   10718:	andeq	r1, r2, r4, lsr r0
   1071c:	andeq	r0, r0, r0
   10720:	push	{r4, lr}
   10724:	ldr	r4, [pc, #24]	; 10744 <_start@@Base+0xec>
   10728:	ldrb	r3, [r4]
   1072c:	cmp	r3, #0
   10730:	popne	{r4, pc}
   10734:	bl	106b8 <_start@@Base+0x60>
   10738:	mov	r3, #1
   1073c:	strb	r3, [r4]
   10740:	pop	{r4, pc}
   10744:	andeq	r1, r2, r4, lsr r0
   10748:	ldr	r0, [pc, #40]	; 10778 <_start@@Base+0x120>
   1074c:	ldr	r3, [r0]
   10750:	cmp	r3, #0
   10754:	bne	1075c <_start@@Base+0x104>
   10758:	b	106e8 <_start@@Base+0x90>
   1075c:	ldr	r3, [pc, #24]	; 1077c <_start@@Base+0x124>
   10760:	cmp	r3, #0
   10764:	beq	10758 <_start@@Base+0x100>
   10768:	push	{r4, lr}
   1076c:	blx	r3
   10770:	pop	{r4, lr}
   10774:	b	106e8 <_start@@Base+0x90>
   10778:	andeq	r0, r2, r4, lsl pc
   1077c:	andeq	r0, r0, r0

00010780 <ordenado@@Base>:
   10780:	push	{fp}		; (str fp, [sp, #-4]!)
   10784:	add	fp, sp, #0
   10788:	sub	sp, sp, #20
   1078c:	str	r0, [fp, #-16]
   10790:	str	r1, [fp, #-20]	; 0xffffffec
   10794:	ldr	r3, [fp, #-16]
   10798:	ldr	r3, [r3]
   1079c:	str	r3, [fp, #-12]
   107a0:	mov	r3, #1
   107a4:	str	r3, [fp, #-8]
   107a8:	b	107f8 <ordenado@@Base+0x78>
   107ac:	ldr	r3, [fp, #-8]
   107b0:	lsl	r3, r3, #2
   107b4:	ldr	r2, [fp, #-16]
   107b8:	add	r3, r2, r3
   107bc:	ldr	r2, [r3]
   107c0:	ldr	r3, [fp, #-12]
   107c4:	cmp	r2, r3
   107c8:	bge	107d4 <ordenado@@Base+0x54>
   107cc:	mov	r3, #0
   107d0:	b	1080c <ordenado@@Base+0x8c>
   107d4:	ldr	r3, [fp, #-8]
   107d8:	lsl	r3, r3, #2
   107dc:	ldr	r2, [fp, #-16]
   107e0:	add	r3, r2, r3
   107e4:	ldr	r3, [r3]
   107e8:	str	r3, [fp, #-12]
   107ec:	ldr	r3, [fp, #-8]
   107f0:	add	r3, r3, #1
   107f4:	str	r3, [fp, #-8]
   107f8:	ldr	r2, [fp, #-8]
   107fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   10800:	cmp	r2, r3
   10804:	blt	107ac <ordenado@@Base+0x2c>
   10808:	mov	r3, #1
   1080c:	mov	r0, r3
   10810:	add	sp, fp, #0
   10814:	pop	{fp}		; (ldr fp, [sp], #4)
   10818:	bx	lr

0001081c <main@@Base>:
   1081c:	push	{fp, lr}
   10820:	add	fp, sp, #4
   10824:	sub	sp, sp, #16
   10828:	ldr	r0, [pc, #324]	; 10974 <main@@Base+0x158>
   1082c:	bl	10604 <printf@plt>
   10830:	sub	r3, fp, #16
   10834:	mov	r1, r3
   10838:	ldr	r0, [pc, #312]	; 10978 <main@@Base+0x15c>
   1083c:	bl	10640 <__isoc99_scanf@plt>
   10840:	ldr	r3, [fp, #-16]
   10844:	cmp	r3, #100	; 0x64
   10848:	ble	1085c <main@@Base+0x40>
   1084c:	ldr	r0, [pc, #296]	; 1097c <main@@Base+0x160>
   10850:	bl	10604 <printf@plt>
   10854:	mov	r3, #100	; 0x64
   10858:	str	r3, [fp, #-16]
   1085c:	ldr	r3, [fp, #-16]
   10860:	lsl	r3, r3, #2
   10864:	mov	r0, r3
   10868:	bl	1061c <malloc@plt>
   1086c:	mov	r3, r0
   10870:	str	r3, [fp, #-12]
   10874:	mov	r3, #0
   10878:	str	r3, [fp, #-8]
   1087c:	b	108bc <main@@Base+0xa0>
   10880:	ldr	r3, [fp, #-8]
   10884:	add	r3, r3, #1
   10888:	mov	r1, r3
   1088c:	ldr	r0, [pc, #236]	; 10980 <main@@Base+0x164>
   10890:	bl	10604 <printf@plt>
   10894:	ldr	r3, [fp, #-8]
   10898:	lsl	r3, r3, #2
   1089c:	ldr	r2, [fp, #-12]
   108a0:	add	r3, r2, r3
   108a4:	mov	r1, r3
   108a8:	ldr	r0, [pc, #200]	; 10978 <main@@Base+0x15c>
   108ac:	bl	10640 <__isoc99_scanf@plt>
   108b0:	ldr	r3, [fp, #-8]
   108b4:	add	r3, r3, #1
   108b8:	str	r3, [fp, #-8]
   108bc:	ldr	r3, [fp, #-16]
   108c0:	ldr	r2, [fp, #-8]
   108c4:	cmp	r2, r3
   108c8:	blt	10880 <main@@Base+0x64>
   108cc:	ldr	r3, [fp, #-16]
   108d0:	mov	r1, r3
   108d4:	ldr	r0, [fp, #-12]
   108d8:	bl	10780 <ordenado@@Base>
   108dc:	mov	r3, r0
   108e0:	cmp	r3, #0
   108e4:	beq	1095c <main@@Base+0x140>
   108e8:	ldr	r0, [pc, #148]	; 10984 <main@@Base+0x168>
   108ec:	bl	10604 <printf@plt>
   108f0:	ldr	r3, [fp, #-16]
   108f4:	sub	r3, r3, #1
   108f8:	str	r3, [fp, #-8]
   108fc:	b	1092c <main@@Base+0x110>
   10900:	ldr	r3, [fp, #-8]
   10904:	lsl	r3, r3, #2
   10908:	ldr	r2, [fp, #-12]
   1090c:	add	r3, r2, r3
   10910:	ldr	r3, [r3]
   10914:	mov	r1, r3
   10918:	ldr	r0, [pc, #104]	; 10988 <main@@Base+0x16c>
   1091c:	bl	10604 <printf@plt>
   10920:	ldr	r3, [fp, #-8]
   10924:	sub	r3, r3, #1
   10928:	str	r3, [fp, #-8]
   1092c:	ldr	r3, [fp, #-8]
   10930:	cmp	r3, #0
   10934:	bgt	10900 <main@@Base+0xe4>
   10938:	ldr	r3, [fp, #-8]
   1093c:	lsl	r3, r3, #2
   10940:	ldr	r2, [fp, #-12]
   10944:	add	r3, r2, r3
   10948:	ldr	r3, [r3]
   1094c:	mov	r1, r3
   10950:	ldr	r0, [pc, #52]	; 1098c <main@@Base+0x170>
   10954:	bl	10604 <printf@plt>
   10958:	b	10964 <main@@Base+0x148>
   1095c:	ldr	r0, [pc, #44]	; 10990 <main@@Base+0x174>
   10960:	bl	10610 <puts@plt>
   10964:	mov	r3, #0
   10968:	mov	r0, r3
   1096c:	sub	sp, fp, #4
   10970:	pop	{fp, pc}
   10974:	andeq	r0, r1, r4, lsl #20
   10978:	andeq	r0, r1, r8, lsr #20
   1097c:	andeq	r0, r1, ip, lsr #20
   10980:	andeq	r0, r1, ip, asr sl
   10984:	andeq	r0, r1, r4, ror sl
   10988:			; <UNDEFINED> instruction: 0x00010ab8
   1098c:			; <UNDEFINED> instruction: 0x00010abc
   10990:	andeq	r0, r1, r4, asr #21

00010994 <__libc_csu_init@@Base>:
   10994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10998:	mov	r7, r0
   1099c:	ldr	r6, [pc, #72]	; 109ec <__libc_csu_init@@Base+0x58>
   109a0:	ldr	r5, [pc, #72]	; 109f0 <__libc_csu_init@@Base+0x5c>
   109a4:	add	r6, pc, r6
   109a8:	add	r5, pc, r5
   109ac:	sub	r6, r6, r5
   109b0:	mov	r8, r1
   109b4:	mov	r9, r2
   109b8:	bl	105e4 <printf@plt-0x20>
   109bc:	asrs	r6, r6, #2
   109c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109c4:	mov	r4, #0
   109c8:	add	r4, r4, #1
   109cc:	ldr	r3, [r5], #4
   109d0:	mov	r2, r9
   109d4:	mov	r1, r8
   109d8:	mov	r0, r7
   109dc:	blx	r3
   109e0:	cmp	r6, r4
   109e4:	bne	109c8 <__libc_csu_init@@Base+0x34>
   109e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109ec:	andeq	r0, r1, r4, ror #10
   109f0:	andeq	r0, r1, ip, asr r5

000109f4 <__libc_csu_fini@@Base>:
   109f4:	bx	lr

Disassembly of section .fini:

000109f8 <.fini>:
   109f8:	push	{r3, lr}
   109fc:	pop	{r3, pc}
