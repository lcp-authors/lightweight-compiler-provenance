
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-filter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <codadump_filter_remove>:
   0:	str	r4, [sp, #-8]!
   4:	subs	r4, r0, #0
   8:	str	lr, [sp, #4]
   c:	beq	84 <codadump_filter_remove+0x84>
  10:	ldr	r0, [r4]
  14:	cmp	r0, #0
  18:	beq	78 <codadump_filter_remove+0x78>
  1c:	ldr	r3, [r0, #8]
  20:	cmp	r3, #0
  24:	beq	34 <codadump_filter_remove+0x34>
  28:	add	r0, r0, #8
  2c:	bl	0 <codadump_filter_remove>
  30:	ldr	r0, [r4]
  34:	ldr	r3, [r0, #4]
  38:	cmp	r3, #0
  3c:	beq	4c <codadump_filter_remove+0x4c>
  40:	add	r0, r0, #4
  44:	bl	0 <codadump_filter_remove>
  48:	ldr	r0, [r4]
  4c:	ldr	r3, [r0]
  50:	cmp	r3, #0
  54:	beq	6c <codadump_filter_remove+0x6c>
  58:	mov	r0, r3
  5c:	bl	0 <free>
  60:	ldr	r0, [r4]
  64:	mov	r3, #0
  68:	str	r3, [r0]
  6c:	bl	0 <free>
  70:	mov	r3, #0
  74:	str	r3, [r4]
  78:	ldr	r4, [sp]
  7c:	add	sp, sp, #4
  80:	pop	{pc}		; (ldr pc, [sp], #4)
  84:	movw	r3, #0
  88:	movt	r3, #0
  8c:	movw	r1, #0
  90:	movt	r1, #0
  94:	movw	r0, #0
  98:	movt	r0, #0
  9c:	mov	r2, #192	; 0xc0
  a0:	bl	0 <__assert_fail>

000000a4 <get_filter_item>:
  a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
  a8:	subs	r4, r0, #0
  ac:	strd	r6, [sp, #8]
  b0:	strd	r8, [sp, #16]
  b4:	strd	sl, [sp, #24]
  b8:	str	lr, [sp, #32]
  bc:	sub	sp, sp, #12
  c0:	beq	314 <get_filter_item+0x270>
  c4:	cmp	r1, #0
  c8:	mov	r6, r1
  cc:	beq	2f8 <get_filter_item+0x254>
  d0:	ldrb	r3, [r4]
  d4:	mov	r7, r2
  d8:	sub	r2, r3, #9
  dc:	cmp	r3, #32
  e0:	cmpne	r2, #1
  e4:	bhi	fc <get_filter_item+0x58>
  e8:	ldrb	r3, [r4, #1]!
  ec:	sub	r2, r3, #9
  f0:	cmp	r3, #32
  f4:	cmpne	r2, #1
  f8:	bls	e8 <get_filter_item+0x44>
  fc:	subs	r2, r3, #59	; 0x3b
 100:	and	r1, r3, #253	; 0xfd
 104:	movne	r2, #1
 108:	cmp	r3, #0
 10c:	movne	r3, r2
 110:	moveq	r3, #0
 114:	cmp	r1, #44	; 0x2c
 118:	moveq	r3, #0
 11c:	andne	r3, r3, #1
 120:	cmp	r3, #0
 124:	beq	22c <get_filter_item+0x188>
 128:	add	r1, r4, #1
 12c:	mov	r9, #0
 130:	b	138 <get_filter_item+0x94>
 134:	mov	r9, r5
 138:	ldrb	r3, [r1]
 13c:	mov	r8, r1
 140:	add	r5, r9, #1
 144:	add	r1, r1, #1
 148:	cmp	r3, #59	; 0x3b
 14c:	cmpne	r3, #0
 150:	and	r3, r3, #253	; 0xfd
 154:	movne	r2, #1
 158:	moveq	r2, #0
 15c:	cmp	r3, #44	; 0x2c
 160:	moveq	r3, #0
 164:	andne	r3, r2, #1
 168:	cmp	r3, #0
 16c:	bne	134 <get_filter_item+0x90>
 170:	mov	r0, #12
 174:	bl	0 <malloc>
 178:	cmp	r0, #0
 17c:	mov	fp, r0
 180:	str	r0, [r6]
 184:	beq	2c8 <get_filter_item+0x224>
 188:	add	sl, r9, #2
 18c:	mov	r0, sl
 190:	bl	0 <malloc>
 194:	cmp	r0, #0
 198:	str	r0, [fp]
 19c:	beq	24c <get_filter_item+0x1a8>
 1a0:	mov	r2, r5
 1a4:	mov	r1, r4
 1a8:	bl	0 <strncpy>
 1ac:	ldr	r2, [r6]
 1b0:	mov	r3, #0
 1b4:	str	r3, [r2, #4]
 1b8:	ldr	r2, [r6]
 1bc:	str	r3, [r2, #8]
 1c0:	ldr	r3, [r6]
 1c4:	ldr	ip, [r3]
 1c8:	ldrb	r3, [ip, r9]
 1cc:	sub	r2, r3, #9
 1d0:	cmp	r3, #32
 1d4:	cmpne	r2, #1
 1d8:	bhi	200 <get_filter_item+0x15c>
 1dc:	sub	r3, r9, #1
 1e0:	rsb	r0, ip, #1
 1e4:	add	r3, ip, r3
 1e8:	add	r5, r0, r3
 1ec:	ldrb	r2, [r3], #-1
 1f0:	sub	r1, r2, #9
 1f4:	cmp	r2, #32
 1f8:	cmpne	r1, #1
 1fc:	bls	1e8 <get_filter_item+0x144>
 200:	mov	r3, #0
 204:	strb	r3, [ip, r5]
 208:	ldrb	r3, [r8]
 20c:	cmp	r3, #46	; 0x2e
 210:	beq	280 <get_filter_item+0x1dc>
 214:	cmp	r3, #44	; 0x2c
 218:	cmpne	r3, #59	; 0x3b
 21c:	addeq	r4, r4, sl
 220:	strne	r8, [r7]
 224:	streq	r4, [r7]
 228:	b	230 <get_filter_item+0x18c>
 22c:	str	r3, [r6]
 230:	add	sp, sp, #12
 234:	ldrd	r4, [sp]
 238:	ldrd	r6, [sp, #8]
 23c:	ldrd	r8, [sp, #16]
 240:	ldrd	sl, [sp, #24]
 244:	add	sp, sp, #32
 248:	pop	{pc}		; (ldr pc, [sp], #4)
 24c:	mov	r0, #76	; 0x4c
 250:	mov	r2, sl
 254:	movw	r3, #0
 258:	movt	r3, #0
 25c:	movw	r1, #0
 260:	movt	r1, #0
 264:	str	r0, [sp]
 268:	mvn	r0, #0
 26c:	bl	0 <coda_set_error>
 270:	bl	0 <handle_coda_error>
 274:	ldr	r3, [r6]
 278:	ldr	r0, [r3]
 27c:	b	1a0 <get_filter_item+0xfc>
 280:	ldr	r1, [r6]
 284:	mov	r2, r7
 288:	add	r0, r4, sl
 28c:	add	r1, r1, #4
 290:	bl	a4 <get_filter_item>
 294:	ldr	r3, [r6]
 298:	ldr	r3, [r3, #4]
 29c:	cmp	r3, #0
 2a0:	bne	230 <get_filter_item+0x18c>
 2a4:	mov	r0, r6
 2a8:	add	sp, sp, #12
 2ac:	ldrd	r4, [sp]
 2b0:	ldrd	r6, [sp, #8]
 2b4:	ldrd	r8, [sp, #16]
 2b8:	ldrd	sl, [sp, #24]
 2bc:	ldr	lr, [sp, #32]
 2c0:	add	sp, sp, #36	; 0x24
 2c4:	b	0 <codadump_filter_remove>
 2c8:	mov	r0, #69	; 0x45
 2cc:	mov	r2, #12
 2d0:	movw	r3, #0
 2d4:	movt	r3, #0
 2d8:	movw	r1, #0
 2dc:	movt	r1, #0
 2e0:	str	r0, [sp]
 2e4:	mvn	r0, #0
 2e8:	bl	0 <coda_set_error>
 2ec:	bl	0 <handle_coda_error>
 2f0:	ldr	fp, [r6]
 2f4:	b	188 <get_filter_item+0xe4>
 2f8:	movw	r1, #0
 2fc:	movt	r1, #0
 300:	ldr	r3, [pc, #40]	; 330 <get_filter_item+0x28c>
 304:	movw	r0, #0
 308:	movt	r0, #0
 30c:	mov	r2, #45	; 0x2d
 310:	bl	0 <__assert_fail>
 314:	movw	r1, #0
 318:	movt	r1, #0
 31c:	ldr	r3, [pc, #12]	; 330 <get_filter_item+0x28c>
 320:	movw	r0, #0
 324:	movt	r0, #0
 328:	mov	r2, #44	; 0x2c
 32c:	bl	0 <__assert_fail>
 330:	.word	0x00000018

00000334 <add_filter>:
 334:	strd	r4, [sp, #-16]!
 338:	subs	r5, r1, #0
 33c:	str	r6, [sp, #8]
 340:	str	lr, [sp, #12]
 344:	sub	sp, sp, #8
 348:	str	r1, [sp, #4]
 34c:	beq	390 <add_filter+0x5c>
 350:	ldr	r4, [r0]
 354:	cmp	r4, #0
 358:	streq	r5, [r0]
 35c:	beq	390 <add_filter+0x5c>
 360:	ldr	r0, [r4]
 364:	ldr	r1, [r5]
 368:	bl	0 <strcmp>
 36c:	subs	r6, r0, #0
 370:	beq	3a4 <add_filter+0x70>
 374:	ldr	r3, [r4, #8]
 378:	cmp	r3, #0
 37c:	streq	r5, [r4, #8]
 380:	beq	390 <add_filter+0x5c>
 384:	mov	r1, r5
 388:	add	r0, r4, #8
 38c:	bl	334 <add_filter>
 390:	add	sp, sp, #8
 394:	ldrd	r4, [sp]
 398:	ldr	r6, [sp, #8]
 39c:	add	sp, sp, #12
 3a0:	pop	{pc}		; (ldr pc, [sp], #4)
 3a4:	ldr	r3, [r4, #4]
 3a8:	cmp	r3, #0
 3ac:	beq	3cc <add_filter+0x98>
 3b0:	ldr	r1, [r5, #4]
 3b4:	add	r0, r4, #4
 3b8:	cmp	r1, #0
 3bc:	beq	3d8 <add_filter+0xa4>
 3c0:	bl	334 <add_filter>
 3c4:	ldr	r3, [sp, #4]
 3c8:	str	r6, [r3, #4]
 3cc:	add	r0, sp, #4
 3d0:	bl	0 <codadump_filter_remove>
 3d4:	b	390 <add_filter+0x5c>
 3d8:	bl	0 <codadump_filter_remove>
 3dc:	b	3cc <add_filter+0x98>

000003e0 <codadump_filter_create>:
 3e0:	mov	r3, #0
 3e4:	str	r4, [sp, #-8]!
 3e8:	str	lr, [sp, #4]
 3ec:	sub	sp, sp, #16
 3f0:	cmp	r0, r3
 3f4:	str	r3, [sp, #4]
 3f8:	str	r3, [sp, #8]
 3fc:	str	r0, [sp, #12]
 400:	beq	454 <codadump_filter_create+0x74>
 404:	ldrb	r2, [r0]
 408:	cmp	r2, r3
 40c:	beq	478 <codadump_filter_create+0x98>
 410:	mov	r4, r3
 414:	b	430 <codadump_filter_create+0x50>
 418:	bl	334 <add_filter>
 41c:	ldr	r0, [sp, #12]
 420:	str	r4, [sp, #8]
 424:	ldrb	r3, [r0]
 428:	cmp	r3, #0
 42c:	beq	464 <codadump_filter_create+0x84>
 430:	add	r1, sp, #8
 434:	add	r2, sp, #12
 438:	bl	a4 <get_filter_item>
 43c:	ldr	r3, [sp, #8]
 440:	add	r0, sp, #4
 444:	subs	r1, r3, #0
 448:	bne	418 <codadump_filter_create+0x38>
 44c:	bl	0 <codadump_filter_remove>
 450:	ldr	r0, [sp, #4]
 454:	add	sp, sp, #16
 458:	ldr	r4, [sp]
 45c:	add	sp, sp, #4
 460:	pop	{pc}		; (ldr pc, [sp], #4)
 464:	ldr	r0, [sp, #4]
 468:	add	sp, sp, #16
 46c:	ldr	r4, [sp]
 470:	add	sp, sp, #4
 474:	pop	{pc}		; (ldr pc, [sp], #4)
 478:	mov	r0, r2
 47c:	b	454 <codadump_filter_create+0x74>

00000480 <codadump_filter_get_fieldname>:
 480:	cmp	r0, #0
 484:	beq	490 <codadump_filter_get_fieldname+0x10>
 488:	ldr	r0, [r0]
 48c:	bx	lr
 490:	movw	r1, #0
 494:	movt	r1, #0
 498:	ldr	r3, [pc, #20]	; 4b4 <codadump_filter_get_fieldname+0x34>
 49c:	movw	r0, #0
 4a0:	movt	r0, #0
 4a4:	str	r4, [sp, #-8]!
 4a8:	mov	r2, #216	; 0xd8
 4ac:	str	lr, [sp, #4]
 4b0:	bl	0 <__assert_fail>
 4b4:	.word	0x00000028

000004b8 <codadump_filter_get_subfilter>:
 4b8:	cmp	r0, #0
 4bc:	beq	4c8 <codadump_filter_get_subfilter+0x10>
 4c0:	ldr	r0, [r0, #4]
 4c4:	bx	lr
 4c8:	movw	r1, #0
 4cc:	movt	r1, #0
 4d0:	ldr	r3, [pc, #20]	; 4ec <codadump_filter_get_subfilter+0x34>
 4d4:	movw	r0, #0
 4d8:	movt	r0, #0
 4dc:	str	r4, [sp, #-8]!
 4e0:	mov	r2, #223	; 0xdf
 4e4:	str	lr, [sp, #4]
 4e8:	bl	0 <__assert_fail>
 4ec:	.word	0x00000048

000004f0 <codadump_filter_get_next_filter>:
 4f0:	cmp	r0, #0
 4f4:	beq	500 <codadump_filter_get_next_filter+0x10>
 4f8:	ldr	r0, [r0, #8]
 4fc:	bx	lr
 500:	movw	r1, #0
 504:	movt	r1, #0
 508:	ldr	r3, [pc, #20]	; 524 <codadump_filter_get_next_filter+0x34>
 50c:	movw	r0, #0
 510:	movt	r0, #0
 514:	str	r4, [sp, #-8]!
 518:	mov	r2, #230	; 0xe6
 51c:	str	lr, [sp, #4]
 520:	bl	0 <__assert_fail>
 524:	.word	0x00000068
