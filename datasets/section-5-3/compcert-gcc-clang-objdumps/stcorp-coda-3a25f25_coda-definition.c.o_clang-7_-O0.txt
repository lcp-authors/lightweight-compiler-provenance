
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_product_variable_delete>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #8
       c:	str	r0, [sp, #4]
      10:	ldr	r0, [sp, #4]
      14:	movw	r1, #0
      18:	cmp	r0, r1
      1c:	beq	24 <coda_product_variable_delete+0x24>
      20:	b	44 <coda_product_variable_delete+0x44>
      24:	movw	r0, #0
      28:	movt	r0, #0
      2c:	movw	r1, #0
      30:	movt	r1, #0
      34:	movw	r2, #49	; 0x31
      38:	movw	r3, #0
      3c:	movt	r3, #0
      40:	bl	0 <__assert_fail>
      44:	ldr	r0, [sp, #4]
      48:	ldr	r0, [r0]
      4c:	movw	r1, #0
      50:	cmp	r0, r1
      54:	beq	64 <coda_product_variable_delete+0x64>
      58:	ldr	r0, [sp, #4]
      5c:	ldr	r0, [r0]
      60:	bl	0 <free>
      64:	ldr	r0, [sp, #4]
      68:	ldr	r0, [r0, #4]
      6c:	movw	r1, #0
      70:	cmp	r0, r1
      74:	beq	84 <coda_product_variable_delete+0x84>
      78:	ldr	r0, [sp, #4]
      7c:	ldr	r0, [r0, #4]
      80:	bl	0 <coda_expression_delete>
      84:	ldr	r0, [sp, #4]
      88:	ldr	r0, [r0, #8]
      8c:	movw	r1, #0
      90:	cmp	r0, r1
      94:	beq	a4 <coda_product_variable_delete+0xa4>
      98:	ldr	r0, [sp, #4]
      9c:	ldr	r0, [r0, #8]
      a0:	bl	0 <coda_expression_delete>
      a4:	ldr	r0, [sp, #4]
      a8:	bl	0 <free>
      ac:	mov	sp, fp
      b0:	pop	{fp, pc}

000000b4 <coda_product_variable_new>:
      b4:	push	{fp, lr}
      b8:	mov	fp, sp
      bc:	sub	sp, sp, #16
      c0:	str	r0, [sp, #8]
      c4:	ldr	r0, [sp, #8]
      c8:	bl	0 <coda_is_identifier>
      cc:	cmp	r0, #0
      d0:	bne	f4 <coda_product_variable_new+0x40>
      d4:	ldr	r0, [pc, #232]	; 1c4 <coda_product_variable_new+0x110>
      d8:	ldr	r2, [sp, #8]
      dc:	movw	r1, #0
      e0:	movt	r1, #0
      e4:	bl	0 <coda_set_error>
      e8:	movw	r0, #0
      ec:	str	r0, [fp, #-4]
      f0:	b	1b8 <coda_product_variable_new+0x104>
      f4:	movw	r0, #12
      f8:	bl	0 <malloc>
      fc:	str	r0, [sp, #4]
     100:	ldr	r0, [sp, #4]
     104:	movw	lr, #0
     108:	cmp	r0, lr
     10c:	bne	140 <coda_product_variable_new+0x8c>
     110:	mvn	r0, #0
     114:	movw	r1, #0
     118:	movt	r1, #0
     11c:	movw	r2, #12
     120:	movw	r3, #0
     124:	movt	r3, #0
     128:	movw	ip, #82	; 0x52
     12c:	str	ip, [sp]
     130:	bl	0 <coda_set_error>
     134:	movw	r0, #0
     138:	str	r0, [fp, #-4]
     13c:	b	1b8 <coda_product_variable_new+0x104>
     140:	ldr	r0, [sp, #4]
     144:	movw	r1, #0
     148:	str	r1, [r0]
     14c:	ldr	r0, [sp, #4]
     150:	str	r1, [r0, #4]
     154:	ldr	r0, [sp, #4]
     158:	str	r1, [r0, #8]
     15c:	ldr	r0, [sp, #8]
     160:	bl	0 <strdup>
     164:	ldr	r1, [sp, #4]
     168:	str	r0, [r1]
     16c:	ldr	r0, [sp, #4]
     170:	ldr	r0, [r0]
     174:	movw	r1, #0
     178:	cmp	r0, r1
     17c:	bne	1b0 <coda_product_variable_new+0xfc>
     180:	mvn	r0, #0
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	movw	r2, #0
     190:	movt	r2, #0
     194:	movw	r3, #93	; 0x5d
     198:	bl	0 <coda_set_error>
     19c:	ldr	r0, [sp, #4]
     1a0:	bl	0 <coda_product_variable_delete>
     1a4:	movw	r0, #0
     1a8:	str	r0, [fp, #-4]
     1ac:	b	1b8 <coda_product_variable_new+0x104>
     1b0:	ldr	r0, [sp, #4]
     1b4:	str	r0, [fp, #-4]
     1b8:	ldr	r0, [fp, #-4]
     1bc:	mov	sp, fp
     1c0:	pop	{fp, pc}
     1c4:	.word	0xfffffe70

000001c8 <coda_product_variable_set_size_expression>:
     1c8:	push	{fp, lr}
     1cc:	mov	fp, sp
     1d0:	sub	sp, sp, #16
     1d4:	str	r0, [sp, #8]
     1d8:	str	r1, [sp, #4]
     1dc:	ldr	r0, [sp, #4]
     1e0:	movw	r1, #0
     1e4:	cmp	r0, r1
     1e8:	beq	1f0 <coda_product_variable_set_size_expression+0x28>
     1ec:	b	210 <coda_product_variable_set_size_expression+0x48>
     1f0:	movw	r0, #0
     1f4:	movt	r0, #0
     1f8:	movw	r1, #0
     1fc:	movt	r1, #0
     200:	movw	r2, #103	; 0x67
     204:	movw	r3, #0
     208:	movt	r3, #0
     20c:	bl	0 <__assert_fail>
     210:	ldr	r0, [sp, #8]
     214:	ldr	r0, [r0, #4]
     218:	movw	r1, #0
     21c:	cmp	r0, r1
     220:	beq	240 <coda_product_variable_set_size_expression+0x78>
     224:	ldr	r0, [pc, #52]	; 260 <coda_product_variable_set_size_expression+0x98>
     228:	movw	r1, #0
     22c:	movt	r1, #0
     230:	bl	0 <coda_set_error>
     234:	mvn	r0, #0
     238:	str	r0, [fp, #-4]
     23c:	b	254 <coda_product_variable_set_size_expression+0x8c>
     240:	ldr	r0, [sp, #4]
     244:	ldr	r1, [sp, #8]
     248:	str	r0, [r1, #4]
     24c:	movw	r0, #0
     250:	str	r0, [fp, #-4]
     254:	ldr	r0, [fp, #-4]
     258:	mov	sp, fp
     25c:	pop	{fp, pc}
     260:	.word	0xfffffe70

00000264 <coda_product_variable_set_init_expression>:
     264:	push	{fp, lr}
     268:	mov	fp, sp
     26c:	sub	sp, sp, #16
     270:	str	r0, [sp, #8]
     274:	str	r1, [sp, #4]
     278:	ldr	r0, [sp, #4]
     27c:	movw	r1, #0
     280:	cmp	r0, r1
     284:	beq	28c <coda_product_variable_set_init_expression+0x28>
     288:	b	2ac <coda_product_variable_set_init_expression+0x48>
     28c:	movw	r0, #0
     290:	movt	r0, #0
     294:	movw	r1, #0
     298:	movt	r1, #0
     29c:	movw	r2, #115	; 0x73
     2a0:	movw	r3, #0
     2a4:	movt	r3, #0
     2a8:	bl	0 <__assert_fail>
     2ac:	ldr	r0, [sp, #8]
     2b0:	ldr	r0, [r0, #8]
     2b4:	movw	r1, #0
     2b8:	cmp	r0, r1
     2bc:	beq	2dc <coda_product_variable_set_init_expression+0x78>
     2c0:	ldr	r0, [pc, #52]	; 2fc <coda_product_variable_set_init_expression+0x98>
     2c4:	movw	r1, #0
     2c8:	movt	r1, #0
     2cc:	bl	0 <coda_set_error>
     2d0:	mvn	r0, #0
     2d4:	str	r0, [fp, #-4]
     2d8:	b	2f0 <coda_product_variable_set_init_expression+0x8c>
     2dc:	ldr	r0, [sp, #4]
     2e0:	ldr	r1, [sp, #8]
     2e4:	str	r0, [r1, #8]
     2e8:	movw	r0, #0
     2ec:	str	r0, [fp, #-4]
     2f0:	ldr	r0, [fp, #-4]
     2f4:	mov	sp, fp
     2f8:	pop	{fp, pc}
     2fc:	.word	0xfffffe70

00000300 <coda_product_variable_validate>:
     300:	push	{fp, lr}
     304:	mov	fp, sp
     308:	sub	sp, sp, #8
     30c:	str	r0, [sp]
     310:	ldr	r0, [sp]
     314:	ldr	r0, [r0, #8]
     318:	movw	r1, #0
     31c:	cmp	r0, r1
     320:	bne	340 <coda_product_variable_validate+0x40>
     324:	ldr	r0, [pc, #40]	; 354 <coda_product_variable_validate+0x54>
     328:	movw	r1, #0
     32c:	movt	r1, #0
     330:	bl	0 <coda_set_error>
     334:	mvn	r0, #0
     338:	str	r0, [sp, #4]
     33c:	b	348 <coda_product_variable_validate+0x48>
     340:	movw	r0, #0
     344:	str	r0, [sp, #4]
     348:	ldr	r0, [sp, #4]
     34c:	mov	sp, fp
     350:	pop	{fp, pc}
     354:	.word	0xfffffe70

00000358 <coda_product_variable_get_size>:
     358:	push	{fp, lr}
     35c:	mov	fp, sp
     360:	sub	sp, sp, #32
     364:	str	r0, [fp, #-8]
     368:	str	r1, [fp, #-12]
     36c:	str	r2, [sp, #16]
     370:	ldr	r0, [fp, #-8]
     374:	movw	r1, #0
     378:	cmp	r0, r1
     37c:	beq	3a4 <coda_product_variable_get_size+0x4c>
     380:	ldr	r0, [fp, #-12]
     384:	movw	r1, #0
     388:	cmp	r0, r1
     38c:	beq	3a4 <coda_product_variable_get_size+0x4c>
     390:	ldr	r0, [sp, #16]
     394:	movw	r1, #0
     398:	cmp	r0, r1
     39c:	beq	3a4 <coda_product_variable_get_size+0x4c>
     3a0:	b	3c4 <coda_product_variable_get_size+0x6c>
     3a4:	movw	r0, #0
     3a8:	movt	r0, #0
     3ac:	movw	r1, #0
     3b0:	movt	r1, #0
     3b4:	movw	r2, #180	; 0xb4
     3b8:	movw	r3, #0
     3bc:	movt	r3, #0
     3c0:	bl	0 <__assert_fail>
     3c4:	ldr	r0, [fp, #-8]
     3c8:	ldr	r0, [r0, #32]
     3cc:	movw	r1, #0
     3d0:	cmp	r0, r1
     3d4:	beq	3dc <coda_product_variable_get_size+0x84>
     3d8:	b	3fc <coda_product_variable_get_size+0xa4>
     3dc:	movw	r0, #0
     3e0:	movt	r0, #0
     3e4:	movw	r1, #0
     3e8:	movt	r1, #0
     3ec:	movw	r2, #181	; 0xb5
     3f0:	movw	r3, #0
     3f4:	movt	r3, #0
     3f8:	bl	0 <__assert_fail>
     3fc:	ldr	r0, [fp, #-8]
     400:	ldr	r0, [r0, #24]
     404:	ldr	r0, [r0, #40]	; 0x28
     408:	ldr	r1, [fp, #-12]
     40c:	bl	0 <coda_hashtable_get_index_from_name>
     410:	str	r0, [sp, #12]
     414:	ldr	r0, [sp, #12]
     418:	cmn	r0, #1
     41c:	bne	46c <coda_product_variable_get_size+0x114>
     420:	ldr	r0, [pc, #184]	; 4e0 <coda_product_variable_get_size+0x188>
     424:	ldr	r1, [fp, #-8]
     428:	ldr	r1, [r1, #24]
     42c:	ldr	r1, [r1, #44]	; 0x2c
     430:	ldr	r2, [r1]
     434:	ldr	r1, [fp, #-8]
     438:	ldr	r1, [r1, #24]
     43c:	ldr	r3, [r1, #4]
     440:	ldr	r1, [fp, #-12]
     444:	movw	ip, #0
     448:	movt	ip, #0
     44c:	str	r1, [sp, #8]
     450:	mov	r1, ip
     454:	ldr	ip, [sp, #8]
     458:	str	ip, [sp]
     45c:	bl	0 <coda_set_error>
     460:	mvn	r0, #0
     464:	str	r0, [fp, #-4]
     468:	b	4d4 <coda_product_variable_get_size+0x17c>
     46c:	ldr	r0, [fp, #-8]
     470:	ldr	r0, [r0, #32]
     474:	ldr	r1, [sp, #12]
     478:	add	r0, r0, r1, lsl #2
     47c:	ldr	r0, [r0]
     480:	movw	r1, #0
     484:	cmp	r0, r1
     488:	bne	4b0 <coda_product_variable_get_size+0x158>
     48c:	ldr	r0, [fp, #-8]
     490:	ldr	r1, [sp, #12]
     494:	bl	4e4 <init_product_variable>
     498:	cmp	r0, #0
     49c:	beq	4ac <coda_product_variable_get_size+0x154>
     4a0:	mvn	r0, #0
     4a4:	str	r0, [fp, #-4]
     4a8:	b	4d4 <coda_product_variable_get_size+0x17c>
     4ac:	b	4b0 <coda_product_variable_get_size+0x158>
     4b0:	ldr	r0, [fp, #-8]
     4b4:	ldr	r0, [r0, #28]
     4b8:	ldr	r1, [sp, #12]
     4bc:	add	r0, r0, r1, lsl #2
     4c0:	ldr	r0, [r0]
     4c4:	ldr	r1, [sp, #16]
     4c8:	str	r0, [r1]
     4cc:	movw	r0, #0
     4d0:	str	r0, [fp, #-4]
     4d4:	ldr	r0, [fp, #-4]
     4d8:	mov	sp, fp
     4dc:	pop	{fp, pc}
     4e0:	.word	0xfffffe70

000004e4 <init_product_variable>:
     4e4:	push	{r4, r5, fp, lr}
     4e8:	add	fp, sp, #8
     4ec:	sub	sp, sp, #552	; 0x228
     4f0:	str	r0, [fp, #-16]
     4f4:	str	r1, [fp, #-20]	; 0xffffffec
     4f8:	mov	r0, #0
     4fc:	str	r0, [sp, #12]
     500:	mov	r0, #1
     504:	str	r0, [sp, #8]
     508:	ldr	r1, [fp, #-16]
     50c:	add	r0, sp, #16
     510:	bl	0 <coda_cursor_set_product>
     514:	cmp	r0, #0
     518:	beq	528 <init_product_variable+0x44>
     51c:	mvn	r0, #0
     520:	str	r0, [fp, #-12]
     524:	b	6cc <init_product_variable+0x1e8>
     528:	ldr	r0, [fp, #-16]
     52c:	ldr	r0, [r0, #24]
     530:	ldr	r0, [r0, #36]	; 0x24
     534:	ldr	r1, [fp, #-20]	; 0xffffffec
     538:	add	r0, r0, r1, lsl #2
     53c:	ldr	r0, [r0]
     540:	ldr	r0, [r0, #4]
     544:	movw	r1, #0
     548:	cmp	r0, r1
     54c:	beq	5b8 <init_product_variable+0xd4>
     550:	ldr	r0, [fp, #-16]
     554:	ldr	r0, [r0, #24]
     558:	ldr	r0, [r0, #36]	; 0x24
     55c:	ldr	r1, [fp, #-20]	; 0xffffffec
     560:	add	r0, r0, r1, lsl #2
     564:	ldr	r0, [r0]
     568:	ldr	r0, [r0, #4]
     56c:	add	r1, sp, #16
     570:	add	r2, sp, #8
     574:	bl	0 <coda_expression_eval_integer>
     578:	cmp	r0, #0
     57c:	beq	5b4 <init_product_variable+0xd0>
     580:	ldr	r0, [fp, #-16]
     584:	ldr	r0, [r0, #24]
     588:	ldr	r0, [r0, #36]	; 0x24
     58c:	ldr	r1, [fp, #-20]	; 0xffffffec
     590:	add	r0, r0, r1, lsl #2
     594:	ldr	r0, [r0]
     598:	ldr	r1, [r0]
     59c:	movw	r0, #0
     5a0:	movt	r0, #0
     5a4:	bl	0 <coda_add_error_message>
     5a8:	mvn	r0, #0
     5ac:	str	r0, [fp, #-12]
     5b0:	b	6cc <init_product_variable+0x1e8>
     5b4:	b	5b8 <init_product_variable+0xd4>
     5b8:	ldr	r0, [sp, #8]
     5bc:	ldr	r1, [fp, #-16]
     5c0:	ldr	r1, [r1, #28]
     5c4:	ldr	r2, [fp, #-20]	; 0xffffffec
     5c8:	str	r0, [r1, r2, lsl #2]
     5cc:	ldr	r0, [sp, #8]
     5d0:	lsl	r0, r0, #3
     5d4:	bl	0 <malloc>
     5d8:	ldr	r1, [fp, #-16]
     5dc:	ldr	r1, [r1, #32]
     5e0:	ldr	r2, [fp, #-20]	; 0xffffffec
     5e4:	str	r0, [r1, r2, lsl #2]
     5e8:	ldr	r0, [fp, #-16]
     5ec:	ldr	r0, [r0, #32]
     5f0:	ldr	r1, [fp, #-20]	; 0xffffffec
     5f4:	add	r0, r0, r1, lsl #2
     5f8:	ldr	r0, [r0]
     5fc:	movw	r1, #0
     600:	cmp	r0, r1
     604:	bne	63c <init_product_variable+0x158>
     608:	ldr	r0, [sp, #8]
     60c:	lsl	r2, r0, #3
     610:	mvn	r0, #0
     614:	movw	r1, #0
     618:	movt	r1, #0
     61c:	movw	r3, #0
     620:	movt	r3, #0
     624:	movw	ip, #162	; 0xa2
     628:	str	ip, [sp]
     62c:	bl	0 <coda_set_error>
     630:	mvn	r0, #0
     634:	str	r0, [fp, #-12]
     638:	b	6cc <init_product_variable+0x1e8>
     63c:	ldr	r0, [fp, #-16]
     640:	ldr	r0, [r0, #32]
     644:	ldr	r1, [fp, #-20]	; 0xffffffec
     648:	ldr	r0, [r0, r1, lsl #2]
     64c:	ldr	r1, [sp, #8]
     650:	lsl	r2, r1, #3
     654:	mov	r1, #0
     658:	bl	0 <memset>
     65c:	ldr	r1, [fp, #-16]
     660:	ldr	r1, [r1, #24]
     664:	ldr	r1, [r1, #36]	; 0x24
     668:	ldr	r2, [fp, #-20]	; 0xffffffec
     66c:	add	r1, r1, r2, lsl #2
     670:	ldr	r1, [r1]
     674:	ldr	r1, [r1, #8]
     678:	str	r0, [sp, #4]
     67c:	mov	r0, r1
     680:	add	r1, sp, #16
     684:	bl	0 <coda_expression_eval_void>
     688:	cmp	r0, #0
     68c:	beq	6c4 <init_product_variable+0x1e0>
     690:	ldr	r0, [fp, #-16]
     694:	ldr	r0, [r0, #24]
     698:	ldr	r0, [r0, #36]	; 0x24
     69c:	ldr	r1, [fp, #-20]	; 0xffffffec
     6a0:	add	r0, r0, r1, lsl #2
     6a4:	ldr	r0, [r0]
     6a8:	ldr	r1, [r0]
     6ac:	movw	r0, #0
     6b0:	movt	r0, #0
     6b4:	bl	0 <coda_add_error_message>
     6b8:	mvn	r0, #0
     6bc:	str	r0, [fp, #-12]
     6c0:	b	6cc <init_product_variable+0x1e8>
     6c4:	movw	r0, #0
     6c8:	str	r0, [fp, #-12]
     6cc:	ldr	r0, [fp, #-12]
     6d0:	sub	sp, fp, #8
     6d4:	pop	{r4, r5, fp, pc}

000006d8 <coda_product_variable_get_pointer>:
     6d8:	push	{fp, lr}
     6dc:	mov	fp, sp
     6e0:	sub	sp, sp, #32
     6e4:	str	r0, [fp, #-8]
     6e8:	str	r1, [fp, #-12]
     6ec:	str	r2, [sp, #16]
     6f0:	str	r3, [sp, #12]
     6f4:	ldr	r0, [fp, #-8]
     6f8:	movw	r1, #0
     6fc:	cmp	r0, r1
     700:	beq	728 <coda_product_variable_get_pointer+0x50>
     704:	ldr	r0, [fp, #-12]
     708:	movw	r1, #0
     70c:	cmp	r0, r1
     710:	beq	728 <coda_product_variable_get_pointer+0x50>
     714:	ldr	r0, [sp, #12]
     718:	movw	r1, #0
     71c:	cmp	r0, r1
     720:	beq	728 <coda_product_variable_get_pointer+0x50>
     724:	b	748 <coda_product_variable_get_pointer+0x70>
     728:	movw	r0, #0
     72c:	movt	r0, #0
     730:	movw	r1, #0
     734:	movt	r1, #0
     738:	movw	r2, #208	; 0xd0
     73c:	movw	r3, #0
     740:	movt	r3, #0
     744:	bl	0 <__assert_fail>
     748:	ldr	r0, [fp, #-8]
     74c:	ldr	r0, [r0, #24]
     750:	ldr	r0, [r0, #40]	; 0x28
     754:	ldr	r1, [fp, #-12]
     758:	bl	0 <coda_hashtable_get_index_from_name>
     75c:	str	r0, [sp, #8]
     760:	ldr	r0, [sp, #8]
     764:	cmn	r0, #1
     768:	bne	7b8 <coda_product_variable_get_pointer+0xe0>
     76c:	ldr	r0, [pc, #268]	; 880 <coda_product_variable_get_pointer+0x1a8>
     770:	ldr	r1, [fp, #-8]
     774:	ldr	r1, [r1, #24]
     778:	ldr	r1, [r1, #44]	; 0x2c
     77c:	ldr	r2, [r1]
     780:	ldr	r1, [fp, #-8]
     784:	ldr	r1, [r1, #24]
     788:	ldr	r3, [r1, #4]
     78c:	ldr	r1, [fp, #-12]
     790:	movw	ip, #0
     794:	movt	ip, #0
     798:	str	r1, [sp, #4]
     79c:	mov	r1, ip
     7a0:	ldr	ip, [sp, #4]
     7a4:	str	ip, [sp]
     7a8:	bl	0 <coda_set_error>
     7ac:	mvn	r0, #0
     7b0:	str	r0, [fp, #-4]
     7b4:	b	874 <coda_product_variable_get_pointer+0x19c>
     7b8:	ldr	r0, [fp, #-8]
     7bc:	ldr	r0, [r0, #32]
     7c0:	ldr	r1, [sp, #8]
     7c4:	add	r0, r0, r1, lsl #2
     7c8:	ldr	r0, [r0]
     7cc:	movw	r1, #0
     7d0:	cmp	r0, r1
     7d4:	bne	7fc <coda_product_variable_get_pointer+0x124>
     7d8:	ldr	r0, [fp, #-8]
     7dc:	ldr	r1, [sp, #8]
     7e0:	bl	4e4 <init_product_variable>
     7e4:	cmp	r0, #0
     7e8:	beq	7f8 <coda_product_variable_get_pointer+0x120>
     7ec:	mvn	r0, #0
     7f0:	str	r0, [fp, #-4]
     7f4:	b	874 <coda_product_variable_get_pointer+0x19c>
     7f8:	b	7fc <coda_product_variable_get_pointer+0x124>
     7fc:	ldr	r0, [sp, #16]
     800:	cmp	r0, #0
     804:	blt	828 <coda_product_variable_get_pointer+0x150>
     808:	ldr	r0, [sp, #16]
     80c:	ldr	r1, [fp, #-8]
     810:	ldr	r1, [r1, #28]
     814:	ldr	r2, [sp, #8]
     818:	add	r1, r1, r2, lsl #2
     81c:	ldr	r1, [r1]
     820:	cmp	r0, r1
     824:	blt	84c <coda_product_variable_get_pointer+0x174>
     828:	ldr	r0, [pc, #80]	; 880 <coda_product_variable_get_pointer+0x1a8>
     82c:	ldr	r2, [sp, #16]
     830:	ldr	r3, [fp, #-12]
     834:	movw	r1, #0
     838:	movt	r1, #0
     83c:	bl	0 <coda_set_error>
     840:	mvn	r0, #0
     844:	str	r0, [fp, #-4]
     848:	b	874 <coda_product_variable_get_pointer+0x19c>
     84c:	ldr	r0, [fp, #-8]
     850:	ldr	r0, [r0, #32]
     854:	ldr	r1, [sp, #8]
     858:	ldr	r0, [r0, r1, lsl #2]
     85c:	ldr	r1, [sp, #16]
     860:	add	r0, r0, r1, lsl #3
     864:	ldr	r1, [sp, #12]
     868:	str	r0, [r1]
     86c:	movw	r0, #0
     870:	str	r0, [fp, #-4]
     874:	ldr	r0, [fp, #-4]
     878:	mov	sp, fp
     87c:	pop	{fp, pc}
     880:	.word	0xfffffe70

00000884 <coda_product_definition_delete>:
     884:	push	{fp, lr}
     888:	mov	fp, sp
     88c:	sub	sp, sp, #8
     890:	str	r0, [sp, #4]
     894:	ldr	r0, [sp, #4]
     898:	ldr	r0, [r0, #20]
     89c:	movw	r1, #0
     8a0:	cmp	r0, r1
     8a4:	beq	8f8 <coda_product_definition_delete+0x74>
     8a8:	movw	r0, #0
     8ac:	str	r0, [sp]
     8b0:	ldr	r0, [sp]
     8b4:	ldr	r1, [sp, #4]
     8b8:	ldr	r1, [r1, #16]
     8bc:	cmp	r0, r1
     8c0:	bge	8ec <coda_product_definition_delete+0x68>
     8c4:	ldr	r0, [sp, #4]
     8c8:	ldr	r0, [r0, #20]
     8cc:	ldr	r1, [sp]
     8d0:	add	r0, r0, r1, lsl #2
     8d4:	ldr	r0, [r0]
     8d8:	bl	0 <coda_detection_rule_delete>
     8dc:	ldr	r0, [sp]
     8e0:	add	r0, r0, #1
     8e4:	str	r0, [sp]
     8e8:	b	8b0 <coda_product_definition_delete+0x2c>
     8ec:	ldr	r0, [sp, #4]
     8f0:	ldr	r0, [r0, #20]
     8f4:	bl	0 <free>
     8f8:	ldr	r0, [sp, #4]
     8fc:	ldr	r0, [r0, #8]
     900:	movw	r1, #0
     904:	cmp	r0, r1
     908:	beq	918 <coda_product_definition_delete+0x94>
     90c:	ldr	r0, [sp, #4]
     910:	ldr	r0, [r0, #8]
     914:	bl	0 <free>
     918:	ldr	r0, [sp, #4]
     91c:	ldr	r0, [r0, #12]
     920:	movw	r1, #0
     924:	cmp	r0, r1
     928:	beq	938 <coda_product_definition_delete+0xb4>
     92c:	ldr	r0, [sp, #4]
     930:	ldr	r0, [r0, #12]
     934:	bl	0 <free>
     938:	ldr	r0, [sp, #4]
     93c:	ldr	r0, [r0, #28]
     940:	movw	r1, #0
     944:	cmp	r0, r1
     948:	beq	958 <coda_product_definition_delete+0xd4>
     94c:	ldr	r0, [sp, #4]
     950:	ldr	r0, [r0, #28]
     954:	bl	0 <coda_type_release>
     958:	ldr	r0, [sp, #4]
     95c:	ldr	r0, [r0, #40]	; 0x28
     960:	movw	r1, #0
     964:	cmp	r0, r1
     968:	beq	978 <coda_product_definition_delete+0xf4>
     96c:	ldr	r0, [sp, #4]
     970:	ldr	r0, [r0, #40]	; 0x28
     974:	bl	0 <coda_hashtable_delete>
     978:	ldr	r0, [sp, #4]
     97c:	ldr	r0, [r0, #36]	; 0x24
     980:	movw	r1, #0
     984:	cmp	r0, r1
     988:	beq	9dc <coda_product_definition_delete+0x158>
     98c:	movw	r0, #0
     990:	str	r0, [sp]
     994:	ldr	r0, [sp]
     998:	ldr	r1, [sp, #4]
     99c:	ldr	r1, [r1, #32]
     9a0:	cmp	r0, r1
     9a4:	bge	9d0 <coda_product_definition_delete+0x14c>
     9a8:	ldr	r0, [sp, #4]
     9ac:	ldr	r0, [r0, #36]	; 0x24
     9b0:	ldr	r1, [sp]
     9b4:	add	r0, r0, r1, lsl #2
     9b8:	ldr	r0, [r0]
     9bc:	bl	0 <coda_product_variable_delete>
     9c0:	ldr	r0, [sp]
     9c4:	add	r0, r0, #1
     9c8:	str	r0, [sp]
     9cc:	b	994 <coda_product_definition_delete+0x110>
     9d0:	ldr	r0, [sp, #4]
     9d4:	ldr	r0, [r0, #36]	; 0x24
     9d8:	bl	0 <free>
     9dc:	ldr	r0, [sp, #4]
     9e0:	bl	0 <free>
     9e4:	mov	sp, fp
     9e8:	pop	{fp, pc}

000009ec <coda_product_definition_new>:
     9ec:	push	{fp, lr}
     9f0:	mov	fp, sp
     9f4:	sub	sp, sp, #24
     9f8:	str	r0, [fp, #-8]
     9fc:	str	r1, [sp, #12]
     a00:	str	r2, [sp, #8]
     a04:	ldr	r0, [fp, #-8]
     a08:	bl	0 <coda_is_identifier>
     a0c:	cmp	r0, #0
     a10:	bne	a34 <coda_product_definition_new+0x48>
     a14:	ldr	r0, [pc, #396]	; ba8 <coda_product_definition_new+0x1bc>
     a18:	ldr	r2, [fp, #-8]
     a1c:	movw	r1, #0
     a20:	movt	r1, #0
     a24:	bl	0 <coda_set_error>
     a28:	movw	r0, #0
     a2c:	str	r0, [fp, #-4]
     a30:	b	b9c <coda_product_definition_new+0x1b0>
     a34:	movw	r0, #48	; 0x30
     a38:	bl	0 <malloc>
     a3c:	str	r0, [sp, #4]
     a40:	ldr	r0, [sp, #4]
     a44:	movw	lr, #0
     a48:	cmp	r0, lr
     a4c:	bne	a80 <coda_product_definition_new+0x94>
     a50:	mvn	r0, #0
     a54:	movw	r1, #0
     a58:	movt	r1, #0
     a5c:	movw	r2, #48	; 0x30
     a60:	movw	r3, #0
     a64:	movt	r3, #0
     a68:	movw	ip, #291	; 0x123
     a6c:	str	ip, [sp]
     a70:	bl	0 <coda_set_error>
     a74:	movw	r0, #0
     a78:	str	r0, [fp, #-4]
     a7c:	b	b9c <coda_product_definition_new+0x1b0>
     a80:	ldr	r0, [sp, #12]
     a84:	ldr	r1, [sp, #4]
     a88:	str	r0, [r1]
     a8c:	ldr	r0, [sp, #8]
     a90:	ldr	r1, [sp, #4]
     a94:	str	r0, [r1, #4]
     a98:	ldr	r0, [sp, #4]
     a9c:	movw	r1, #0
     aa0:	str	r1, [r0, #8]
     aa4:	ldr	r0, [sp, #4]
     aa8:	str	r1, [r0, #12]
     aac:	ldr	r0, [sp, #4]
     ab0:	str	r1, [r0, #16]
     ab4:	ldr	r0, [sp, #4]
     ab8:	str	r1, [r0, #20]
     abc:	ldr	r0, [sp, #4]
     ac0:	str	r1, [r0, #24]
     ac4:	ldr	r0, [sp, #4]
     ac8:	str	r1, [r0, #28]
     acc:	ldr	r0, [sp, #4]
     ad0:	str	r1, [r0, #40]	; 0x28
     ad4:	ldr	r0, [sp, #4]
     ad8:	str	r1, [r0, #32]
     adc:	ldr	r0, [sp, #4]
     ae0:	str	r1, [r0, #36]	; 0x24
     ae4:	ldr	r0, [sp, #4]
     ae8:	str	r1, [r0, #44]	; 0x2c
     aec:	ldr	r0, [fp, #-8]
     af0:	bl	0 <strdup>
     af4:	ldr	r1, [sp, #4]
     af8:	str	r0, [r1, #8]
     afc:	ldr	r0, [sp, #4]
     b00:	ldr	r0, [r0, #8]
     b04:	movw	r1, #0
     b08:	cmp	r0, r1
     b0c:	bne	b40 <coda_product_definition_new+0x154>
     b10:	mvn	r0, #0
     b14:	movw	r1, #0
     b18:	movt	r1, #0
     b1c:	movw	r2, #0
     b20:	movt	r2, #0
     b24:	movw	r3, #311	; 0x137
     b28:	bl	0 <coda_set_error>
     b2c:	ldr	r0, [sp, #4]
     b30:	bl	884 <coda_product_definition_delete>
     b34:	movw	r0, #0
     b38:	str	r0, [fp, #-4]
     b3c:	b	b9c <coda_product_definition_new+0x1b0>
     b40:	movw	r0, #1
     b44:	bl	0 <coda_hashtable_new>
     b48:	ldr	lr, [sp, #4]
     b4c:	str	r0, [lr, #40]	; 0x28
     b50:	ldr	r0, [sp, #4]
     b54:	ldr	r0, [r0, #40]	; 0x28
     b58:	movw	lr, #0
     b5c:	cmp	r0, lr
     b60:	bne	b94 <coda_product_definition_new+0x1a8>
     b64:	mvn	r0, #0
     b68:	movw	r1, #0
     b6c:	movt	r1, #0
     b70:	movw	r2, #0
     b74:	movt	r2, #0
     b78:	movw	r3, #320	; 0x140
     b7c:	bl	0 <coda_set_error>
     b80:	ldr	r0, [sp, #4]
     b84:	bl	884 <coda_product_definition_delete>
     b88:	movw	r0, #0
     b8c:	str	r0, [fp, #-4]
     b90:	b	b9c <coda_product_definition_new+0x1b0>
     b94:	ldr	r0, [sp, #4]
     b98:	str	r0, [fp, #-4]
     b9c:	ldr	r0, [fp, #-4]
     ba0:	mov	sp, fp
     ba4:	pop	{fp, pc}
     ba8:	.word	0xfffffe70

00000bac <coda_product_definition_set_description>:
     bac:	push	{fp, lr}
     bb0:	mov	fp, sp
     bb4:	sub	sp, sp, #16
     bb8:	str	r0, [sp, #8]
     bbc:	str	r1, [sp, #4]
     bc0:	movw	r0, #0
     bc4:	str	r0, [sp]
     bc8:	ldr	r1, [sp, #8]
     bcc:	ldr	r1, [r1, #12]
     bd0:	cmp	r1, r0
     bd4:	beq	bf4 <coda_product_definition_set_description+0x48>
     bd8:	ldr	r0, [pc, #140]	; c6c <coda_product_definition_set_description+0xc0>
     bdc:	movw	r1, #0
     be0:	movt	r1, #0
     be4:	bl	0 <coda_set_error>
     be8:	mvn	r0, #0
     bec:	str	r0, [fp, #-4]
     bf0:	b	c60 <coda_product_definition_set_description+0xb4>
     bf4:	ldr	r0, [sp, #4]
     bf8:	movw	r1, #0
     bfc:	cmp	r0, r1
     c00:	beq	c4c <coda_product_definition_set_description+0xa0>
     c04:	ldr	r0, [sp, #4]
     c08:	bl	0 <strdup>
     c0c:	str	r0, [sp]
     c10:	ldr	r0, [sp]
     c14:	movw	lr, #0
     c18:	cmp	r0, lr
     c1c:	bne	c48 <coda_product_definition_set_description+0x9c>
     c20:	mvn	r0, #0
     c24:	movw	r1, #0
     c28:	movt	r1, #0
     c2c:	movw	r2, #0
     c30:	movt	r2, #0
     c34:	movw	r3, #343	; 0x157
     c38:	bl	0 <coda_set_error>
     c3c:	mvn	r0, #0
     c40:	str	r0, [fp, #-4]
     c44:	b	c60 <coda_product_definition_set_description+0xb4>
     c48:	b	c4c <coda_product_definition_set_description+0xa0>
     c4c:	ldr	r0, [sp]
     c50:	ldr	r1, [sp, #8]
     c54:	str	r0, [r1, #12]
     c58:	movw	r0, #0
     c5c:	str	r0, [fp, #-4]
     c60:	ldr	r0, [fp, #-4]
     c64:	mov	sp, fp
     c68:	pop	{fp, pc}
     c6c:	.word	0xfffffe70

00000c70 <coda_product_definition_set_root_type>:
     c70:	push	{fp, lr}
     c74:	mov	fp, sp
     c78:	sub	sp, sp, #16
     c7c:	str	r0, [sp, #8]
     c80:	str	r1, [sp, #4]
     c84:	ldr	r0, [sp, #4]
     c88:	movw	r1, #0
     c8c:	cmp	r0, r1
     c90:	beq	c98 <coda_product_definition_set_root_type+0x28>
     c94:	b	cb8 <coda_product_definition_set_root_type+0x48>
     c98:	movw	r0, #0
     c9c:	movt	r0, #0
     ca0:	movw	r1, #0
     ca4:	movt	r1, #0
     ca8:	movw	r2, #354	; 0x162
     cac:	movw	r3, #0
     cb0:	movt	r3, #0
     cb4:	bl	0 <__assert_fail>
     cb8:	ldr	r0, [sp, #8]
     cbc:	ldr	r0, [r0, #28]
     cc0:	movw	r1, #0
     cc4:	cmp	r0, r1
     cc8:	beq	ce8 <coda_product_definition_set_root_type+0x78>
     ccc:	ldr	r0, [pc, #68]	; d18 <coda_product_definition_set_root_type+0xa8>
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	bl	0 <coda_set_error>
     cdc:	mvn	r0, #0
     ce0:	str	r0, [fp, #-4]
     ce4:	b	d0c <coda_product_definition_set_root_type+0x9c>
     ce8:	ldr	r0, [sp, #4]
     cec:	ldr	r1, [sp, #8]
     cf0:	str	r0, [r1, #28]
     cf4:	ldr	r0, [sp, #4]
     cf8:	ldr	r1, [r0, #4]
     cfc:	add	r1, r1, #1
     d00:	str	r1, [r0, #4]
     d04:	movw	r0, #0
     d08:	str	r0, [fp, #-4]
     d0c:	ldr	r0, [fp, #-4]
     d10:	mov	sp, fp
     d14:	pop	{fp, pc}
     d18:	.word	0xfffffe70

00000d1c <coda_product_definition_add_detection_rule>:
     d1c:	push	{fp, lr}
     d20:	mov	fp, sp
     d24:	sub	sp, sp, #24
     d28:	str	r0, [fp, #-8]
     d2c:	str	r1, [sp, #12]
     d30:	ldr	r0, [sp, #12]
     d34:	ldr	r0, [r0]
     d38:	cmp	r0, #0
     d3c:	bne	d64 <coda_product_definition_add_detection_rule+0x48>
     d40:	ldr	r0, [pc, #248]	; e40 <coda_product_definition_add_detection_rule+0x124>
     d44:	ldr	r1, [fp, #-8]
     d48:	ldr	r2, [r1, #8]
     d4c:	movw	r1, #0
     d50:	movt	r1, #0
     d54:	bl	0 <coda_set_error>
     d58:	mvn	r0, #0
     d5c:	str	r0, [fp, #-4]
     d60:	b	e34 <coda_product_definition_add_detection_rule+0x118>
     d64:	ldr	r0, [fp, #-8]
     d68:	ldr	r1, [sp, #12]
     d6c:	str	r0, [r1, #8]
     d70:	ldr	r0, [sp, #12]
     d74:	bl	e44 <data_dictionary_add_detection_rule>
     d78:	cmp	r0, #0
     d7c:	beq	d8c <coda_product_definition_add_detection_rule+0x70>
     d80:	mvn	r0, #0
     d84:	str	r0, [fp, #-4]
     d88:	b	e34 <coda_product_definition_add_detection_rule+0x118>
     d8c:	ldr	r0, [fp, #-8]
     d90:	ldr	r1, [r0, #16]
     d94:	ldr	r0, [r0, #20]
     d98:	add	r1, r1, #1
     d9c:	lsl	r1, r1, #2
     da0:	bl	0 <realloc>
     da4:	str	r0, [sp, #8]
     da8:	ldr	r0, [sp, #8]
     dac:	movw	r1, #0
     db0:	cmp	r0, r1
     db4:	bne	df4 <coda_product_definition_add_detection_rule+0xd8>
     db8:	ldr	r0, [fp, #-8]
     dbc:	ldr	r0, [r0, #16]
     dc0:	add	r0, r0, #1
     dc4:	lsl	r2, r0, #2
     dc8:	mvn	r0, #0
     dcc:	movw	r1, #0
     dd0:	movt	r1, #0
     dd4:	movw	r3, #0
     dd8:	movt	r3, #0
     ddc:	movw	ip, #390	; 0x186
     de0:	str	ip, [sp]
     de4:	bl	0 <coda_set_error>
     de8:	mvn	r0, #0
     dec:	str	r0, [fp, #-4]
     df0:	b	e34 <coda_product_definition_add_detection_rule+0x118>
     df4:	ldr	r0, [sp, #8]
     df8:	ldr	r1, [fp, #-8]
     dfc:	str	r0, [r1, #20]
     e00:	ldr	r0, [fp, #-8]
     e04:	ldr	r1, [r0, #16]
     e08:	add	r1, r1, #1
     e0c:	str	r1, [r0, #16]
     e10:	ldr	r0, [sp, #12]
     e14:	ldr	r1, [fp, #-8]
     e18:	ldr	r2, [r1, #16]
     e1c:	ldr	r1, [r1, #20]
     e20:	sub	r2, r2, #1
     e24:	add	r1, r1, r2, lsl #2
     e28:	str	r0, [r1]
     e2c:	movw	r0, #0
     e30:	str	r0, [fp, #-4]
     e34:	ldr	r0, [fp, #-4]
     e38:	mov	sp, fp
     e3c:	pop	{fp, pc}
     e40:	.word	0xfffffe70

00000e44 <data_dictionary_add_detection_rule>:
     e44:	push	{fp, lr}
     e48:	mov	fp, sp
     e4c:	sub	sp, sp, #16
     e50:	str	r0, [fp, #-4]
     e54:	ldr	r0, [fp, #-4]
     e58:	ldr	r0, [r0, #8]
     e5c:	ldr	r0, [r0]
     e60:	str	r0, [sp, #8]
     e64:	ldr	r0, [sp, #8]
     e68:	cmp	r0, #0
     e6c:	bne	e78 <data_dictionary_add_detection_rule+0x34>
     e70:	movw	r0, #1
     e74:	str	r0, [sp, #8]
     e78:	ldr	r0, [pc, #40]	; ea8 <data_dictionary_add_detection_rule+0x64>
     e7c:	str	r0, [sp, #4]
     e80:	bl	0 <__aeabi_read_tp>
     e84:	ldr	ip, [sp, #4]
     e88:	ldr	r0, [r0, ip]
     e8c:	add	r0, r0, #12
     e90:	ldr	ip, [sp, #8]
     e94:	add	r0, r0, ip, lsl #2
     e98:	ldr	r1, [fp, #-4]
     e9c:	bl	0 <coda_detection_tree_add_rule>
     ea0:	mov	sp, fp
     ea4:	pop	{fp, pc}
     ea8:	.word	0x00000000

00000eac <coda_product_definition_add_product_variable>:
     eac:	push	{fp, lr}
     eb0:	mov	fp, sp
     eb4:	sub	sp, sp, #24
     eb8:	str	r0, [fp, #-8]
     ebc:	str	r1, [sp, #12]
     ec0:	ldr	r0, [fp, #-8]
     ec4:	ldr	r0, [r0, #40]	; 0x28
     ec8:	ldr	r1, [sp, #12]
     ecc:	ldr	r1, [r1]
     ed0:	bl	0 <coda_hashtable_add_name>
     ed4:	cmp	r0, #0
     ed8:	beq	f08 <coda_product_definition_add_product_variable+0x5c>
     edc:	ldr	r0, [pc, #248]	; fdc <coda_product_definition_add_product_variable+0x130>
     ee0:	ldr	r1, [sp, #12]
     ee4:	ldr	r2, [r1]
     ee8:	ldr	r1, [fp, #-8]
     eec:	ldr	r3, [r1, #8]
     ef0:	movw	r1, #0
     ef4:	movt	r1, #0
     ef8:	bl	0 <coda_set_error>
     efc:	mvn	r0, #0
     f00:	str	r0, [fp, #-4]
     f04:	b	fd0 <coda_product_definition_add_product_variable+0x124>
     f08:	ldr	r0, [fp, #-8]
     f0c:	ldr	r0, [r0, #32]
     f10:	asr	r1, r0, #31
     f14:	add	r1, r0, r1, lsr #28
     f18:	bic	r1, r1, #15
     f1c:	sub	r0, r0, r1
     f20:	cmp	r0, #0
     f24:	bne	f9c <coda_product_definition_add_product_variable+0xf0>
     f28:	ldr	r0, [fp, #-8]
     f2c:	ldr	r1, [r0, #32]
     f30:	ldr	r0, [r0, #36]	; 0x24
     f34:	add	r1, r1, #16
     f38:	lsl	r1, r1, #2
     f3c:	bl	0 <realloc>
     f40:	str	r0, [sp, #8]
     f44:	ldr	r0, [sp, #8]
     f48:	movw	r1, #0
     f4c:	cmp	r0, r1
     f50:	bne	f90 <coda_product_definition_add_product_variable+0xe4>
     f54:	ldr	r0, [fp, #-8]
     f58:	ldr	r0, [r0, #32]
     f5c:	add	r0, r0, #16
     f60:	lsl	r2, r0, #2
     f64:	mvn	r0, #0
     f68:	movw	r1, #0
     f6c:	movt	r1, #0
     f70:	movw	r3, #0
     f74:	movt	r3, #0
     f78:	movw	ip, #420	; 0x1a4
     f7c:	str	ip, [sp]
     f80:	bl	0 <coda_set_error>
     f84:	mvn	r0, #0
     f88:	str	r0, [fp, #-4]
     f8c:	b	fd0 <coda_product_definition_add_product_variable+0x124>
     f90:	ldr	r0, [sp, #8]
     f94:	ldr	r1, [fp, #-8]
     f98:	str	r0, [r1, #36]	; 0x24
     f9c:	ldr	r0, [fp, #-8]
     fa0:	ldr	r1, [r0, #32]
     fa4:	add	r1, r1, #1
     fa8:	str	r1, [r0, #32]
     fac:	ldr	r0, [sp, #12]
     fb0:	ldr	r1, [fp, #-8]
     fb4:	ldr	r2, [r1, #32]
     fb8:	ldr	r1, [r1, #36]	; 0x24
     fbc:	sub	r2, r2, #1
     fc0:	add	r1, r1, r2, lsl #2
     fc4:	str	r0, [r1]
     fc8:	movw	r0, #0
     fcc:	str	r0, [fp, #-4]
     fd0:	ldr	r0, [fp, #-4]
     fd4:	mov	sp, fp
     fd8:	pop	{fp, pc}
     fdc:	.word	0xfffffe70

00000fe0 <coda_product_definition_validate>:
     fe0:	push	{fp, lr}
     fe4:	mov	fp, sp
     fe8:	sub	sp, sp, #8
     fec:	str	r0, [sp]
     ff0:	ldr	r0, [sp]
     ff4:	ldr	r0, [r0]
     ff8:	cmp	r0, #0
     ffc:	beq	1010 <coda_product_definition_validate+0x30>
    1000:	ldr	r0, [sp]
    1004:	ldr	r0, [r0]
    1008:	cmp	r0, #1
    100c:	bne	1044 <coda_product_definition_validate+0x64>
    1010:	ldr	r0, [sp]
    1014:	ldr	r0, [r0, #28]
    1018:	movw	r1, #0
    101c:	cmp	r0, r1
    1020:	bne	1040 <coda_product_definition_validate+0x60>
    1024:	ldr	r0, [pc, #56]	; 1064 <coda_product_definition_validate+0x84>
    1028:	movw	r1, #0
    102c:	movt	r1, #0
    1030:	bl	0 <coda_set_error>
    1034:	mvn	r0, #0
    1038:	str	r0, [sp, #4]
    103c:	b	1058 <coda_product_definition_validate+0x78>
    1040:	b	1044 <coda_product_definition_validate+0x64>
    1044:	ldr	r0, [sp]
    1048:	movw	r1, #1
    104c:	str	r1, [r0, #24]
    1050:	movw	r0, #0
    1054:	str	r0, [sp, #4]
    1058:	ldr	r0, [sp, #4]
    105c:	mov	sp, fp
    1060:	pop	{fp, pc}
    1064:	.word	0xfffffe70

00001068 <coda_product_type_delete>:
    1068:	push	{fp, lr}
    106c:	mov	fp, sp
    1070:	sub	sp, sp, #8
    1074:	str	r0, [sp, #4]
    1078:	ldr	r0, [sp, #4]
    107c:	ldr	r0, [r0]
    1080:	movw	r1, #0
    1084:	cmp	r0, r1
    1088:	beq	1098 <coda_product_type_delete+0x30>
    108c:	ldr	r0, [sp, #4]
    1090:	ldr	r0, [r0]
    1094:	bl	0 <free>
    1098:	ldr	r0, [sp, #4]
    109c:	ldr	r0, [r0, #4]
    10a0:	movw	r1, #0
    10a4:	cmp	r0, r1
    10a8:	beq	10b8 <coda_product_type_delete+0x50>
    10ac:	ldr	r0, [sp, #4]
    10b0:	ldr	r0, [r0, #4]
    10b4:	bl	0 <free>
    10b8:	ldr	r0, [sp, #4]
    10bc:	ldr	r0, [r0, #16]
    10c0:	movw	r1, #0
    10c4:	cmp	r0, r1
    10c8:	beq	10d8 <coda_product_type_delete+0x70>
    10cc:	ldr	r0, [sp, #4]
    10d0:	ldr	r0, [r0, #16]
    10d4:	bl	0 <coda_hashtable_delete>
    10d8:	ldr	r0, [sp, #4]
    10dc:	ldr	r0, [r0, #12]
    10e0:	movw	r1, #0
    10e4:	cmp	r0, r1
    10e8:	beq	113c <coda_product_type_delete+0xd4>
    10ec:	movw	r0, #0
    10f0:	str	r0, [sp]
    10f4:	ldr	r0, [sp]
    10f8:	ldr	r1, [sp, #4]
    10fc:	ldr	r1, [r1, #8]
    1100:	cmp	r0, r1
    1104:	bge	1130 <coda_product_type_delete+0xc8>
    1108:	ldr	r0, [sp, #4]
    110c:	ldr	r0, [r0, #12]
    1110:	ldr	r1, [sp]
    1114:	add	r0, r0, r1, lsl #2
    1118:	ldr	r0, [r0]
    111c:	bl	884 <coda_product_definition_delete>
    1120:	ldr	r0, [sp]
    1124:	add	r0, r0, #1
    1128:	str	r0, [sp]
    112c:	b	10f4 <coda_product_type_delete+0x8c>
    1130:	ldr	r0, [sp, #4]
    1134:	ldr	r0, [r0, #12]
    1138:	bl	0 <free>
    113c:	ldr	r0, [sp, #4]
    1140:	bl	0 <free>
    1144:	mov	sp, fp
    1148:	pop	{fp, pc}

0000114c <coda_product_type_new>:
    114c:	push	{fp, lr}
    1150:	mov	fp, sp
    1154:	sub	sp, sp, #16
    1158:	str	r0, [sp, #8]
    115c:	movw	r0, #24
    1160:	bl	0 <malloc>
    1164:	str	r0, [sp, #4]
    1168:	ldr	r0, [sp, #4]
    116c:	movw	lr, #0
    1170:	cmp	r0, lr
    1174:	bne	11a8 <coda_product_type_new+0x5c>
    1178:	mvn	r0, #0
    117c:	movw	r1, #0
    1180:	movt	r1, #0
    1184:	movw	r2, #24
    1188:	movw	r3, #0
    118c:	movt	r3, #0
    1190:	movw	ip, #482	; 0x1e2
    1194:	str	ip, [sp]
    1198:	bl	0 <coda_set_error>
    119c:	movw	r0, #0
    11a0:	str	r0, [fp, #-4]
    11a4:	b	1284 <coda_product_type_new+0x138>
    11a8:	ldr	r0, [sp, #4]
    11ac:	movw	r1, #0
    11b0:	str	r1, [r0]
    11b4:	ldr	r0, [sp, #4]
    11b8:	str	r1, [r0, #4]
    11bc:	ldr	r0, [sp, #4]
    11c0:	str	r1, [r0, #8]
    11c4:	ldr	r0, [sp, #4]
    11c8:	str	r1, [r0, #16]
    11cc:	ldr	r0, [sp, #4]
    11d0:	str	r1, [r0, #12]
    11d4:	ldr	r0, [sp, #8]
    11d8:	bl	0 <strdup>
    11dc:	ldr	r1, [sp, #4]
    11e0:	str	r0, [r1]
    11e4:	ldr	r0, [sp, #4]
    11e8:	ldr	r0, [r0]
    11ec:	movw	r1, #0
    11f0:	cmp	r0, r1
    11f4:	bne	1228 <coda_product_type_new+0xdc>
    11f8:	mvn	r0, #0
    11fc:	movw	r1, #0
    1200:	movt	r1, #0
    1204:	movw	r2, #0
    1208:	movt	r2, #0
    120c:	movw	r3, #495	; 0x1ef
    1210:	bl	0 <coda_set_error>
    1214:	ldr	r0, [sp, #4]
    1218:	bl	1068 <coda_product_type_delete>
    121c:	movw	r0, #0
    1220:	str	r0, [fp, #-4]
    1224:	b	1284 <coda_product_type_new+0x138>
    1228:	movw	r0, #1
    122c:	bl	0 <coda_hashtable_new>
    1230:	ldr	lr, [sp, #4]
    1234:	str	r0, [lr, #16]
    1238:	ldr	r0, [sp, #4]
    123c:	ldr	r0, [r0, #16]
    1240:	movw	lr, #0
    1244:	cmp	r0, lr
    1248:	bne	127c <coda_product_type_new+0x130>
    124c:	mvn	r0, #0
    1250:	movw	r1, #0
    1254:	movt	r1, #0
    1258:	movw	r2, #0
    125c:	movt	r2, #0
    1260:	movw	r3, #504	; 0x1f8
    1264:	bl	0 <coda_set_error>
    1268:	ldr	r0, [sp, #4]
    126c:	bl	1068 <coda_product_type_delete>
    1270:	movw	r0, #0
    1274:	str	r0, [fp, #-4]
    1278:	b	1284 <coda_product_type_new+0x138>
    127c:	ldr	r0, [sp, #4]
    1280:	str	r0, [fp, #-4]
    1284:	ldr	r0, [fp, #-4]
    1288:	mov	sp, fp
    128c:	pop	{fp, pc}

00001290 <coda_product_type_set_description>:
    1290:	push	{fp, lr}
    1294:	mov	fp, sp
    1298:	sub	sp, sp, #16
    129c:	str	r0, [sp, #8]
    12a0:	str	r1, [sp, #4]
    12a4:	movw	r0, #0
    12a8:	str	r0, [sp]
    12ac:	ldr	r1, [sp, #8]
    12b0:	ldr	r1, [r1, #4]
    12b4:	cmp	r1, r0
    12b8:	beq	12d8 <coda_product_type_set_description+0x48>
    12bc:	ldr	r0, [pc, #140]	; 1350 <coda_product_type_set_description+0xc0>
    12c0:	movw	r1, #0
    12c4:	movt	r1, #0
    12c8:	bl	0 <coda_set_error>
    12cc:	mvn	r0, #0
    12d0:	str	r0, [fp, #-4]
    12d4:	b	1344 <coda_product_type_set_description+0xb4>
    12d8:	ldr	r0, [sp, #4]
    12dc:	movw	r1, #0
    12e0:	cmp	r0, r1
    12e4:	beq	1330 <coda_product_type_set_description+0xa0>
    12e8:	ldr	r0, [sp, #4]
    12ec:	bl	0 <strdup>
    12f0:	str	r0, [sp]
    12f4:	ldr	r0, [sp]
    12f8:	movw	lr, #0
    12fc:	cmp	r0, lr
    1300:	bne	132c <coda_product_type_set_description+0x9c>
    1304:	mvn	r0, #0
    1308:	movw	r1, #0
    130c:	movt	r1, #0
    1310:	movw	r2, #0
    1314:	movt	r2, #0
    1318:	movw	r3, #527	; 0x20f
    131c:	bl	0 <coda_set_error>
    1320:	mvn	r0, #0
    1324:	str	r0, [fp, #-4]
    1328:	b	1344 <coda_product_type_set_description+0xb4>
    132c:	b	1330 <coda_product_type_set_description+0xa0>
    1330:	ldr	r0, [sp]
    1334:	ldr	r1, [sp, #8]
    1338:	str	r0, [r1, #4]
    133c:	movw	r0, #0
    1340:	str	r0, [fp, #-4]
    1344:	ldr	r0, [fp, #-4]
    1348:	mov	sp, fp
    134c:	pop	{fp, pc}
    1350:	.word	0xfffffe70

00001354 <coda_product_type_add_product_definition>:
    1354:	push	{fp, lr}
    1358:	mov	fp, sp
    135c:	sub	sp, sp, #32
    1360:	str	r0, [fp, #-8]
    1364:	str	r1, [fp, #-12]
    1368:	ldr	r0, [fp, #-12]
    136c:	ldr	r0, [r0, #44]	; 0x2c
    1370:	movw	r1, #0
    1374:	cmp	r0, r1
    1378:	beq	13c4 <coda_product_type_add_product_definition+0x70>
    137c:	ldr	r0, [pc, #492]	; 1570 <coda_product_type_add_product_definition+0x21c>
    1380:	ldr	r1, [fp, #-12]
    1384:	ldr	r2, [r1, #8]
    1388:	ldr	r1, [fp, #-12]
    138c:	ldr	r1, [r1, #44]	; 0x2c
    1390:	ldr	r3, [r1]
    1394:	ldr	r1, [fp, #-8]
    1398:	ldr	r1, [r1]
    139c:	movw	ip, #0
    13a0:	movt	ip, #0
    13a4:	str	r1, [sp, #8]
    13a8:	mov	r1, ip
    13ac:	ldr	ip, [sp, #8]
    13b0:	str	ip, [sp]
    13b4:	bl	0 <coda_set_error>
    13b8:	mvn	r0, #0
    13bc:	str	r0, [fp, #-4]
    13c0:	b	1564 <coda_product_type_add_product_definition+0x210>
    13c4:	movw	r0, #0
    13c8:	str	r0, [sp, #16]
    13cc:	ldr	r0, [sp, #16]
    13d0:	ldr	r1, [fp, #-8]
    13d4:	ldr	r1, [r1, #8]
    13d8:	cmp	r0, r1
    13dc:	bge	1448 <coda_product_type_add_product_definition+0xf4>
    13e0:	ldr	r0, [fp, #-8]
    13e4:	ldr	r0, [r0, #12]
    13e8:	ldr	r1, [sp, #16]
    13ec:	add	r0, r0, r1, lsl #2
    13f0:	ldr	r0, [r0]
    13f4:	ldr	r0, [r0, #4]
    13f8:	ldr	r1, [fp, #-12]
    13fc:	ldr	r1, [r1, #4]
    1400:	cmp	r0, r1
    1404:	bne	1434 <coda_product_type_add_product_definition+0xe0>
    1408:	ldr	r0, [pc, #352]	; 1570 <coda_product_type_add_product_definition+0x21c>
    140c:	ldr	r1, [fp, #-12]
    1410:	ldr	r2, [r1, #4]
    1414:	ldr	r1, [fp, #-8]
    1418:	ldr	r3, [r1]
    141c:	movw	r1, #0
    1420:	movt	r1, #0
    1424:	bl	0 <coda_set_error>
    1428:	mvn	r0, #0
    142c:	str	r0, [fp, #-4]
    1430:	b	1564 <coda_product_type_add_product_definition+0x210>
    1434:	b	1438 <coda_product_type_add_product_definition+0xe4>
    1438:	ldr	r0, [sp, #16]
    143c:	add	r0, r0, #1
    1440:	str	r0, [sp, #16]
    1444:	b	13cc <coda_product_type_add_product_definition+0x78>
    1448:	ldr	r0, [fp, #-8]
    144c:	ldr	r0, [r0, #16]
    1450:	ldr	r1, [fp, #-12]
    1454:	ldr	r1, [r1, #8]
    1458:	bl	0 <coda_hashtable_add_name>
    145c:	cmp	r0, #0
    1460:	beq	1490 <coda_product_type_add_product_definition+0x13c>
    1464:	ldr	r0, [pc, #260]	; 1570 <coda_product_type_add_product_definition+0x21c>
    1468:	ldr	r1, [fp, #-12]
    146c:	ldr	r2, [r1, #8]
    1470:	ldr	r1, [fp, #-8]
    1474:	ldr	r3, [r1]
    1478:	movw	r1, #0
    147c:	movt	r1, #0
    1480:	bl	0 <coda_set_error>
    1484:	mvn	r0, #0
    1488:	str	r0, [fp, #-4]
    148c:	b	1564 <coda_product_type_add_product_definition+0x210>
    1490:	ldr	r0, [fp, #-8]
    1494:	ldr	r0, [r0, #8]
    1498:	asr	r1, r0, #31
    149c:	add	r1, r0, r1, lsr #28
    14a0:	bic	r1, r1, #15
    14a4:	sub	r0, r0, r1
    14a8:	cmp	r0, #0
    14ac:	bne	1524 <coda_product_type_add_product_definition+0x1d0>
    14b0:	ldr	r0, [fp, #-8]
    14b4:	ldr	r1, [r0, #8]
    14b8:	ldr	r0, [r0, #12]
    14bc:	add	r1, r1, #16
    14c0:	lsl	r1, r1, #2
    14c4:	bl	0 <realloc>
    14c8:	str	r0, [sp, #12]
    14cc:	ldr	r0, [sp, #12]
    14d0:	movw	r1, #0
    14d4:	cmp	r0, r1
    14d8:	bne	1518 <coda_product_type_add_product_definition+0x1c4>
    14dc:	ldr	r0, [fp, #-8]
    14e0:	ldr	r0, [r0, #8]
    14e4:	add	r0, r0, #16
    14e8:	lsl	r2, r0, #2
    14ec:	mvn	r0, #0
    14f0:	movw	r1, #0
    14f4:	movt	r1, #0
    14f8:	movw	r3, #0
    14fc:	movt	r3, #0
    1500:	movw	ip, #574	; 0x23e
    1504:	str	ip, [sp]
    1508:	bl	0 <coda_set_error>
    150c:	mvn	r0, #0
    1510:	str	r0, [fp, #-4]
    1514:	b	1564 <coda_product_type_add_product_definition+0x210>
    1518:	ldr	r0, [sp, #12]
    151c:	ldr	r1, [fp, #-8]
    1520:	str	r0, [r1, #12]
    1524:	ldr	r0, [fp, #-8]
    1528:	ldr	r1, [r0, #8]
    152c:	add	r1, r1, #1
    1530:	str	r1, [r0, #8]
    1534:	ldr	r0, [fp, #-12]
    1538:	ldr	r1, [fp, #-8]
    153c:	ldr	r2, [r1, #8]
    1540:	ldr	r1, [r1, #12]
    1544:	sub	r2, r2, #1
    1548:	add	r1, r1, r2, lsl #2
    154c:	str	r0, [r1]
    1550:	ldr	r0, [fp, #-8]
    1554:	ldr	r1, [fp, #-12]
    1558:	str	r0, [r1, #44]	; 0x2c
    155c:	movw	r0, #0
    1560:	str	r0, [fp, #-4]
    1564:	ldr	r0, [fp, #-4]
    1568:	mov	sp, fp
    156c:	pop	{fp, pc}
    1570:	.word	0xfffffe70

00001574 <coda_product_type_get_product_definition_by_version>:
    1574:	push	{fp, lr}
    1578:	mov	fp, sp
    157c:	sub	sp, sp, #16
    1580:	str	r0, [sp, #8]
    1584:	str	r1, [sp, #4]
    1588:	movw	r0, #0
    158c:	str	r0, [sp]
    1590:	ldr	r0, [sp]
    1594:	ldr	r1, [sp, #8]
    1598:	ldr	r1, [r1, #8]
    159c:	cmp	r0, r1
    15a0:	bge	15f8 <coda_product_type_get_product_definition_by_version+0x84>
    15a4:	ldr	r0, [sp, #8]
    15a8:	ldr	r0, [r0, #12]
    15ac:	ldr	r1, [sp]
    15b0:	add	r0, r0, r1, lsl #2
    15b4:	ldr	r0, [r0]
    15b8:	ldr	r0, [r0, #4]
    15bc:	ldr	r1, [sp, #4]
    15c0:	cmp	r0, r1
    15c4:	bne	15e4 <coda_product_type_get_product_definition_by_version+0x70>
    15c8:	ldr	r0, [sp, #8]
    15cc:	ldr	r0, [r0, #12]
    15d0:	ldr	r1, [sp]
    15d4:	add	r0, r0, r1, lsl #2
    15d8:	ldr	r0, [r0]
    15dc:	str	r0, [fp, #-4]
    15e0:	b	161c <coda_product_type_get_product_definition_by_version+0xa8>
    15e4:	b	15e8 <coda_product_type_get_product_definition_by_version+0x74>
    15e8:	ldr	r0, [sp]
    15ec:	add	r0, r0, #1
    15f0:	str	r0, [sp]
    15f4:	b	1590 <coda_product_type_get_product_definition_by_version+0x1c>
    15f8:	ldr	r0, [pc, #40]	; 1628 <coda_product_type_get_product_definition_by_version+0xb4>
    15fc:	ldr	r1, [sp, #8]
    1600:	ldr	r2, [r1]
    1604:	ldr	r3, [sp, #4]
    1608:	movw	r1, #0
    160c:	movt	r1, #0
    1610:	bl	0 <coda_set_error>
    1614:	movw	r0, #0
    1618:	str	r0, [fp, #-4]
    161c:	ldr	r0, [fp, #-4]
    1620:	mov	sp, fp
    1624:	pop	{fp, pc}
    1628:	.word	0xfffffe70

0000162c <coda_product_type_get_latest_product_definition>:
    162c:	push	{fp, lr}
    1630:	mov	fp, sp
    1634:	sub	sp, sp, #24
    1638:	str	r0, [fp, #-8]
    163c:	ldr	r0, [fp, #-8]
    1640:	ldr	r0, [r0, #8]
    1644:	cmp	r0, #0
    1648:	bne	1670 <coda_product_type_get_latest_product_definition+0x44>
    164c:	ldr	r0, [pc, #212]	; 1728 <coda_product_type_get_latest_product_definition+0xfc>
    1650:	ldr	r1, [fp, #-8]
    1654:	ldr	r2, [r1]
    1658:	movw	r1, #0
    165c:	movt	r1, #0
    1660:	bl	0 <coda_set_error>
    1664:	movw	r0, #0
    1668:	str	r0, [fp, #-4]
    166c:	b	171c <coda_product_type_get_latest_product_definition+0xf0>
    1670:	ldr	r0, [fp, #-8]
    1674:	ldr	r0, [r0, #12]
    1678:	ldr	r0, [r0]
    167c:	ldr	r0, [r0, #4]
    1680:	str	r0, [sp, #12]
    1684:	movw	r0, #0
    1688:	str	r0, [sp, #8]
    168c:	movw	r0, #1
    1690:	str	r0, [sp, #4]
    1694:	ldr	r0, [sp, #4]
    1698:	ldr	r1, [fp, #-8]
    169c:	ldr	r1, [r1, #8]
    16a0:	cmp	r0, r1
    16a4:	bge	1704 <coda_product_type_get_latest_product_definition+0xd8>
    16a8:	ldr	r0, [fp, #-8]
    16ac:	ldr	r0, [r0, #12]
    16b0:	ldr	r1, [sp, #4]
    16b4:	add	r0, r0, r1, lsl #2
    16b8:	ldr	r0, [r0]
    16bc:	ldr	r0, [r0, #4]
    16c0:	ldr	r1, [sp, #12]
    16c4:	cmp	r0, r1
    16c8:	ble	16f0 <coda_product_type_get_latest_product_definition+0xc4>
    16cc:	ldr	r0, [fp, #-8]
    16d0:	ldr	r0, [r0, #12]
    16d4:	ldr	r1, [sp, #4]
    16d8:	add	r0, r0, r1, lsl #2
    16dc:	ldr	r0, [r0]
    16e0:	ldr	r0, [r0, #4]
    16e4:	str	r0, [sp, #12]
    16e8:	ldr	r0, [sp, #4]
    16ec:	str	r0, [sp, #8]
    16f0:	b	16f4 <coda_product_type_get_latest_product_definition+0xc8>
    16f4:	ldr	r0, [sp, #4]
    16f8:	add	r0, r0, #1
    16fc:	str	r0, [sp, #4]
    1700:	b	1694 <coda_product_type_get_latest_product_definition+0x68>
    1704:	ldr	r0, [fp, #-8]
    1708:	ldr	r0, [r0, #12]
    170c:	ldr	r1, [sp, #8]
    1710:	add	r0, r0, r1, lsl #2
    1714:	ldr	r0, [r0]
    1718:	str	r0, [fp, #-4]
    171c:	ldr	r0, [fp, #-4]
    1720:	mov	sp, fp
    1724:	pop	{fp, pc}
    1728:	.word	0xfffffe70

0000172c <coda_product_class_delete>:
    172c:	push	{fp, lr}
    1730:	mov	fp, sp
    1734:	sub	sp, sp, #8
    1738:	str	r0, [sp, #4]
    173c:	ldr	r0, [sp, #4]
    1740:	ldr	r0, [r0]
    1744:	movw	r1, #0
    1748:	cmp	r0, r1
    174c:	beq	175c <coda_product_class_delete+0x30>
    1750:	ldr	r0, [sp, #4]
    1754:	ldr	r0, [r0]
    1758:	bl	0 <free>
    175c:	ldr	r0, [sp, #4]
    1760:	ldr	r0, [r0, #4]
    1764:	movw	r1, #0
    1768:	cmp	r0, r1
    176c:	beq	177c <coda_product_class_delete+0x50>
    1770:	ldr	r0, [sp, #4]
    1774:	ldr	r0, [r0, #4]
    1778:	bl	0 <free>
    177c:	ldr	r0, [sp, #4]
    1780:	ldr	r0, [r0, #8]
    1784:	movw	r1, #0
    1788:	cmp	r0, r1
    178c:	beq	179c <coda_product_class_delete+0x70>
    1790:	ldr	r0, [sp, #4]
    1794:	ldr	r0, [r0, #8]
    1798:	bl	0 <free>
    179c:	ldr	r0, [sp, #4]
    17a0:	ldr	r0, [r0, #24]
    17a4:	movw	r1, #0
    17a8:	cmp	r0, r1
    17ac:	beq	17bc <coda_product_class_delete+0x90>
    17b0:	ldr	r0, [sp, #4]
    17b4:	ldr	r0, [r0, #24]
    17b8:	bl	0 <coda_hashtable_delete>
    17bc:	ldr	r0, [sp, #4]
    17c0:	ldr	r0, [r0, #36]	; 0x24
    17c4:	movw	r1, #0
    17c8:	cmp	r0, r1
    17cc:	beq	17dc <coda_product_class_delete+0xb0>
    17d0:	ldr	r0, [sp, #4]
    17d4:	ldr	r0, [r0, #36]	; 0x24
    17d8:	bl	0 <coda_hashtable_delete>
    17dc:	ldr	r0, [sp, #4]
    17e0:	ldr	r0, [r0, #20]
    17e4:	movw	r1, #0
    17e8:	cmp	r0, r1
    17ec:	beq	1840 <coda_product_class_delete+0x114>
    17f0:	movw	r0, #0
    17f4:	str	r0, [sp]
    17f8:	ldr	r0, [sp]
    17fc:	ldr	r1, [sp, #4]
    1800:	ldr	r1, [r1, #16]
    1804:	cmp	r0, r1
    1808:	bge	1834 <coda_product_class_delete+0x108>
    180c:	ldr	r0, [sp, #4]
    1810:	ldr	r0, [r0, #20]
    1814:	ldr	r1, [sp]
    1818:	add	r0, r0, r1, lsl #2
    181c:	ldr	r0, [r0]
    1820:	bl	0 <coda_type_release>
    1824:	ldr	r0, [sp]
    1828:	add	r0, r0, #1
    182c:	str	r0, [sp]
    1830:	b	17f8 <coda_product_class_delete+0xcc>
    1834:	ldr	r0, [sp, #4]
    1838:	ldr	r0, [r0, #20]
    183c:	bl	0 <free>
    1840:	ldr	r0, [sp, #4]
    1844:	ldr	r0, [r0, #32]
    1848:	movw	r1, #0
    184c:	cmp	r0, r1
    1850:	beq	18a4 <coda_product_class_delete+0x178>
    1854:	movw	r0, #0
    1858:	str	r0, [sp]
    185c:	ldr	r0, [sp]
    1860:	ldr	r1, [sp, #4]
    1864:	ldr	r1, [r1, #28]
    1868:	cmp	r0, r1
    186c:	bge	1898 <coda_product_class_delete+0x16c>
    1870:	ldr	r0, [sp, #4]
    1874:	ldr	r0, [r0, #32]
    1878:	ldr	r1, [sp]
    187c:	add	r0, r0, r1, lsl #2
    1880:	ldr	r0, [r0]
    1884:	bl	1068 <coda_product_type_delete>
    1888:	ldr	r0, [sp]
    188c:	add	r0, r0, #1
    1890:	str	r0, [sp]
    1894:	b	185c <coda_product_class_delete+0x130>
    1898:	ldr	r0, [sp, #4]
    189c:	ldr	r0, [r0, #32]
    18a0:	bl	0 <free>
    18a4:	ldr	r0, [sp, #4]
    18a8:	bl	0 <free>
    18ac:	mov	sp, fp
    18b0:	pop	{fp, pc}

000018b4 <coda_product_class_new>:
    18b4:	push	{fp, lr}
    18b8:	mov	fp, sp
    18bc:	sub	sp, sp, #16
    18c0:	str	r0, [sp, #8]
    18c4:	ldr	r0, [sp, #8]
    18c8:	bl	0 <coda_is_identifier>
    18cc:	cmp	r0, #0
    18d0:	bne	18f4 <coda_product_class_new+0x40>
    18d4:	ldr	r0, [pc, #444]	; 1a98 <coda_product_class_new+0x1e4>
    18d8:	ldr	r2, [sp, #8]
    18dc:	movw	r1, #0
    18e0:	movt	r1, #0
    18e4:	bl	0 <coda_set_error>
    18e8:	movw	r0, #0
    18ec:	str	r0, [fp, #-4]
    18f0:	b	1a8c <coda_product_class_new+0x1d8>
    18f4:	movw	r0, #40	; 0x28
    18f8:	bl	0 <malloc>
    18fc:	str	r0, [sp, #4]
    1900:	ldr	r0, [sp, #4]
    1904:	movw	lr, #0
    1908:	cmp	r0, lr
    190c:	beq	1914 <coda_product_class_new+0x60>
    1910:	b	1934 <coda_product_class_new+0x80>
    1914:	movw	r0, #0
    1918:	movt	r0, #0
    191c:	movw	r1, #0
    1920:	movt	r1, #0
    1924:	movw	r2, #686	; 0x2ae
    1928:	movw	r3, #0
    192c:	movt	r3, #0
    1930:	bl	0 <__assert_fail>
    1934:	ldr	r0, [sp, #4]
    1938:	movw	r1, #0
    193c:	str	r1, [r0]
    1940:	ldr	r0, [sp, #4]
    1944:	str	r1, [r0, #4]
    1948:	ldr	r0, [sp, #4]
    194c:	str	r1, [r0, #8]
    1950:	ldr	r0, [sp, #4]
    1954:	str	r1, [r0, #12]
    1958:	ldr	r0, [sp, #4]
    195c:	str	r1, [r0, #16]
    1960:	ldr	r0, [sp, #4]
    1964:	str	r1, [r0, #20]
    1968:	ldr	r0, [sp, #4]
    196c:	str	r1, [r0, #24]
    1970:	ldr	r0, [sp, #4]
    1974:	str	r1, [r0, #28]
    1978:	ldr	r0, [sp, #4]
    197c:	str	r1, [r0, #32]
    1980:	ldr	r0, [sp, #4]
    1984:	str	r1, [r0, #36]	; 0x24
    1988:	ldr	r0, [sp, #8]
    198c:	bl	0 <strdup>
    1990:	ldr	r1, [sp, #4]
    1994:	str	r0, [r1]
    1998:	ldr	r0, [sp, #4]
    199c:	ldr	r0, [r0]
    19a0:	movw	r1, #0
    19a4:	cmp	r0, r1
    19a8:	bne	19dc <coda_product_class_new+0x128>
    19ac:	mvn	r0, #0
    19b0:	movw	r1, #0
    19b4:	movt	r1, #0
    19b8:	movw	r2, #0
    19bc:	movt	r2, #0
    19c0:	movw	r3, #702	; 0x2be
    19c4:	bl	0 <coda_set_error>
    19c8:	ldr	r0, [sp, #4]
    19cc:	bl	172c <coda_product_class_delete>
    19d0:	movw	r0, #0
    19d4:	str	r0, [fp, #-4]
    19d8:	b	1a8c <coda_product_class_new+0x1d8>
    19dc:	movw	r0, #1
    19e0:	bl	0 <coda_hashtable_new>
    19e4:	ldr	lr, [sp, #4]
    19e8:	str	r0, [lr, #24]
    19ec:	ldr	r0, [sp, #4]
    19f0:	ldr	r0, [r0, #24]
    19f4:	movw	lr, #0
    19f8:	cmp	r0, lr
    19fc:	bne	1a30 <coda_product_class_new+0x17c>
    1a00:	mvn	r0, #0
    1a04:	movw	r1, #0
    1a08:	movt	r1, #0
    1a0c:	movw	r2, #0
    1a10:	movt	r2, #0
    1a14:	movw	r3, #711	; 0x2c7
    1a18:	bl	0 <coda_set_error>
    1a1c:	ldr	r0, [sp, #4]
    1a20:	bl	172c <coda_product_class_delete>
    1a24:	movw	r0, #0
    1a28:	str	r0, [fp, #-4]
    1a2c:	b	1a8c <coda_product_class_new+0x1d8>
    1a30:	movw	r0, #1
    1a34:	bl	0 <coda_hashtable_new>
    1a38:	ldr	lr, [sp, #4]
    1a3c:	str	r0, [lr, #36]	; 0x24
    1a40:	ldr	r0, [sp, #4]
    1a44:	ldr	r0, [r0, #36]	; 0x24
    1a48:	movw	lr, #0
    1a4c:	cmp	r0, lr
    1a50:	bne	1a84 <coda_product_class_new+0x1d0>
    1a54:	mvn	r0, #0
    1a58:	movw	r1, #0
    1a5c:	movt	r1, #0
    1a60:	movw	r2, #0
    1a64:	movt	r2, #0
    1a68:	movw	r3, #720	; 0x2d0
    1a6c:	bl	0 <coda_set_error>
    1a70:	ldr	r0, [sp, #4]
    1a74:	bl	172c <coda_product_class_delete>
    1a78:	movw	r0, #0
    1a7c:	str	r0, [fp, #-4]
    1a80:	b	1a8c <coda_product_class_new+0x1d8>
    1a84:	ldr	r0, [sp, #4]
    1a88:	str	r0, [fp, #-4]
    1a8c:	ldr	r0, [fp, #-4]
    1a90:	mov	sp, fp
    1a94:	pop	{fp, pc}
    1a98:	.word	0xfffffe70

00001a9c <coda_product_class_set_description>:
    1a9c:	push	{fp, lr}
    1aa0:	mov	fp, sp
    1aa4:	sub	sp, sp, #16
    1aa8:	str	r0, [sp, #8]
    1aac:	str	r1, [sp, #4]
    1ab0:	movw	r0, #0
    1ab4:	str	r0, [sp]
    1ab8:	ldr	r1, [sp, #8]
    1abc:	ldr	r1, [r1, #4]
    1ac0:	cmp	r1, r0
    1ac4:	beq	1ae4 <coda_product_class_set_description+0x48>
    1ac8:	ldr	r0, [pc, #140]	; 1b5c <coda_product_class_set_description+0xc0>
    1acc:	movw	r1, #0
    1ad0:	movt	r1, #0
    1ad4:	bl	0 <coda_set_error>
    1ad8:	mvn	r0, #0
    1adc:	str	r0, [fp, #-4]
    1ae0:	b	1b50 <coda_product_class_set_description+0xb4>
    1ae4:	ldr	r0, [sp, #4]
    1ae8:	movw	r1, #0
    1aec:	cmp	r0, r1
    1af0:	beq	1b3c <coda_product_class_set_description+0xa0>
    1af4:	ldr	r0, [sp, #4]
    1af8:	bl	0 <strdup>
    1afc:	str	r0, [sp]
    1b00:	ldr	r0, [sp]
    1b04:	movw	lr, #0
    1b08:	cmp	r0, lr
    1b0c:	bne	1b38 <coda_product_class_set_description+0x9c>
    1b10:	mvn	r0, #0
    1b14:	movw	r1, #0
    1b18:	movt	r1, #0
    1b1c:	movw	r2, #0
    1b20:	movt	r2, #0
    1b24:	movw	r3, #743	; 0x2e7
    1b28:	bl	0 <coda_set_error>
    1b2c:	mvn	r0, #0
    1b30:	str	r0, [fp, #-4]
    1b34:	b	1b50 <coda_product_class_set_description+0xb4>
    1b38:	b	1b3c <coda_product_class_set_description+0xa0>
    1b3c:	ldr	r0, [sp]
    1b40:	ldr	r1, [sp, #8]
    1b44:	str	r0, [r1, #4]
    1b48:	movw	r0, #0
    1b4c:	str	r0, [fp, #-4]
    1b50:	ldr	r0, [fp, #-4]
    1b54:	mov	sp, fp
    1b58:	pop	{fp, pc}
    1b5c:	.word	0xfffffe70

00001b60 <coda_product_class_set_definition_file>:
    1b60:	push	{fp, lr}
    1b64:	mov	fp, sp
    1b68:	sub	sp, sp, #16
    1b6c:	str	r0, [sp, #8]
    1b70:	str	r1, [sp, #4]
    1b74:	movw	r0, #0
    1b78:	str	r0, [sp]
    1b7c:	ldr	r1, [sp, #8]
    1b80:	ldr	r1, [r1, #8]
    1b84:	cmp	r1, r0
    1b88:	beq	1ba8 <coda_product_class_set_definition_file+0x48>
    1b8c:	ldr	r0, [pc, #140]	; 1c20 <coda_product_class_set_definition_file+0xc0>
    1b90:	movw	r1, #0
    1b94:	movt	r1, #0
    1b98:	bl	0 <coda_set_error>
    1b9c:	mvn	r0, #0
    1ba0:	str	r0, [fp, #-4]
    1ba4:	b	1c14 <coda_product_class_set_definition_file+0xb4>
    1ba8:	ldr	r0, [sp, #4]
    1bac:	movw	r1, #0
    1bb0:	cmp	r0, r1
    1bb4:	beq	1c00 <coda_product_class_set_definition_file+0xa0>
    1bb8:	ldr	r0, [sp, #4]
    1bbc:	bl	0 <strdup>
    1bc0:	str	r0, [sp]
    1bc4:	ldr	r0, [sp]
    1bc8:	movw	lr, #0
    1bcc:	cmp	r0, lr
    1bd0:	bne	1bfc <coda_product_class_set_definition_file+0x9c>
    1bd4:	mvn	r0, #0
    1bd8:	movw	r1, #0
    1bdc:	movt	r1, #0
    1be0:	movw	r2, #0
    1be4:	movt	r2, #0
    1be8:	movw	r3, #767	; 0x2ff
    1bec:	bl	0 <coda_set_error>
    1bf0:	mvn	r0, #0
    1bf4:	str	r0, [fp, #-4]
    1bf8:	b	1c14 <coda_product_class_set_definition_file+0xb4>
    1bfc:	b	1c00 <coda_product_class_set_definition_file+0xa0>
    1c00:	ldr	r0, [sp]
    1c04:	ldr	r1, [sp, #8]
    1c08:	str	r0, [r1, #8]
    1c0c:	movw	r0, #0
    1c10:	str	r0, [fp, #-4]
    1c14:	ldr	r0, [fp, #-4]
    1c18:	mov	sp, fp
    1c1c:	pop	{fp, pc}
    1c20:	.word	0xfffffe70

00001c24 <coda_product_class_set_revision>:
    1c24:	sub	sp, sp, #8
    1c28:	str	r0, [sp, #4]
    1c2c:	str	r1, [sp]
    1c30:	ldr	r0, [sp]
    1c34:	ldr	r1, [sp, #4]
    1c38:	str	r0, [r1, #12]
    1c3c:	movw	r0, #0
    1c40:	add	sp, sp, #8
    1c44:	bx	lr

00001c48 <coda_product_class_add_product_type>:
    1c48:	push	{fp, lr}
    1c4c:	mov	fp, sp
    1c50:	sub	sp, sp, #24
    1c54:	str	r0, [fp, #-8]
    1c58:	str	r1, [sp, #12]
    1c5c:	ldr	r0, [fp, #-8]
    1c60:	ldr	r0, [r0, #36]	; 0x24
    1c64:	ldr	r1, [sp, #12]
    1c68:	ldr	r1, [r1]
    1c6c:	bl	0 <coda_hashtable_add_name>
    1c70:	cmp	r0, #0
    1c74:	beq	1ca4 <coda_product_class_add_product_type+0x5c>
    1c78:	ldr	r0, [pc, #260]	; 1d84 <coda_product_class_add_product_type+0x13c>
    1c7c:	ldr	r1, [sp, #12]
    1c80:	ldr	r2, [r1]
    1c84:	ldr	r1, [fp, #-8]
    1c88:	ldr	r3, [r1]
    1c8c:	movw	r1, #0
    1c90:	movt	r1, #0
    1c94:	bl	0 <coda_set_error>
    1c98:	mvn	r0, #0
    1c9c:	str	r0, [fp, #-4]
    1ca0:	b	1d78 <coda_product_class_add_product_type+0x130>
    1ca4:	ldr	r0, [fp, #-8]
    1ca8:	ldr	r0, [r0, #28]
    1cac:	asr	r1, r0, #31
    1cb0:	add	r1, r0, r1, lsr #28
    1cb4:	bic	r1, r1, #15
    1cb8:	sub	r0, r0, r1
    1cbc:	cmp	r0, #0
    1cc0:	bne	1d38 <coda_product_class_add_product_type+0xf0>
    1cc4:	ldr	r0, [fp, #-8]
    1cc8:	ldr	r1, [r0, #28]
    1ccc:	ldr	r0, [r0, #32]
    1cd0:	add	r1, r1, #16
    1cd4:	lsl	r1, r1, #2
    1cd8:	bl	0 <realloc>
    1cdc:	str	r0, [sp, #8]
    1ce0:	ldr	r0, [sp, #8]
    1ce4:	movw	r1, #0
    1ce8:	cmp	r0, r1
    1cec:	bne	1d2c <coda_product_class_add_product_type+0xe4>
    1cf0:	ldr	r0, [fp, #-8]
    1cf4:	ldr	r0, [r0, #28]
    1cf8:	add	r0, r0, #16
    1cfc:	lsl	r2, r0, #2
    1d00:	mvn	r0, #0
    1d04:	movw	r1, #0
    1d08:	movt	r1, #0
    1d0c:	movw	r3, #0
    1d10:	movt	r3, #0
    1d14:	movw	ip, #800	; 0x320
    1d18:	str	ip, [sp]
    1d1c:	bl	0 <coda_set_error>
    1d20:	mvn	r0, #0
    1d24:	str	r0, [fp, #-4]
    1d28:	b	1d78 <coda_product_class_add_product_type+0x130>
    1d2c:	ldr	r0, [sp, #8]
    1d30:	ldr	r1, [fp, #-8]
    1d34:	str	r0, [r1, #32]
    1d38:	ldr	r0, [fp, #-8]
    1d3c:	ldr	r1, [r0, #28]
    1d40:	add	r1, r1, #1
    1d44:	str	r1, [r0, #28]
    1d48:	ldr	r0, [sp, #12]
    1d4c:	ldr	r1, [fp, #-8]
    1d50:	ldr	r2, [r1, #28]
    1d54:	ldr	r1, [r1, #32]
    1d58:	sub	r2, r2, #1
    1d5c:	add	r1, r1, r2, lsl #2
    1d60:	str	r0, [r1]
    1d64:	ldr	r0, [fp, #-8]
    1d68:	ldr	r1, [sp, #12]
    1d6c:	str	r0, [r1, #20]
    1d70:	movw	r0, #0
    1d74:	str	r0, [fp, #-4]
    1d78:	ldr	r0, [fp, #-4]
    1d7c:	mov	sp, fp
    1d80:	pop	{fp, pc}
    1d84:	.word	0xfffffe70

00001d88 <coda_product_class_get_product_type>:
    1d88:	push	{fp, lr}
    1d8c:	mov	fp, sp
    1d90:	sub	sp, sp, #16
    1d94:	str	r0, [sp, #8]
    1d98:	str	r1, [sp, #4]
    1d9c:	ldr	r0, [sp, #8]
    1da0:	ldr	r0, [r0, #36]	; 0x24
    1da4:	ldr	r1, [sp, #4]
    1da8:	bl	0 <coda_hashtable_get_index_from_name>
    1dac:	str	r0, [sp]
    1db0:	ldr	r0, [sp]
    1db4:	cmn	r0, #1
    1db8:	bne	1de4 <coda_product_class_get_product_type+0x5c>
    1dbc:	ldr	r0, [pc, #68]	; 1e08 <coda_product_class_get_product_type+0x80>
    1dc0:	ldr	r1, [sp, #8]
    1dc4:	ldr	r2, [r1]
    1dc8:	ldr	r3, [sp, #4]
    1dcc:	movw	r1, #0
    1dd0:	movt	r1, #0
    1dd4:	bl	0 <coda_set_error>
    1dd8:	movw	r0, #0
    1ddc:	str	r0, [fp, #-4]
    1de0:	b	1dfc <coda_product_class_get_product_type+0x74>
    1de4:	ldr	r0, [sp, #8]
    1de8:	ldr	r0, [r0, #32]
    1dec:	ldr	r1, [sp]
    1df0:	add	r0, r0, r1, lsl #2
    1df4:	ldr	r0, [r0]
    1df8:	str	r0, [fp, #-4]
    1dfc:	ldr	r0, [fp, #-4]
    1e00:	mov	sp, fp
    1e04:	pop	{fp, pc}
    1e08:	.word	0xfffffe70

00001e0c <coda_product_class_has_product_type>:
    1e0c:	push	{fp, lr}
    1e10:	mov	fp, sp
    1e14:	sub	sp, sp, #8
    1e18:	str	r0, [sp, #4]
    1e1c:	str	r1, [sp]
    1e20:	ldr	r0, [sp, #4]
    1e24:	ldr	r0, [r0, #36]	; 0x24
    1e28:	ldr	r1, [sp]
    1e2c:	bl	0 <coda_hashtable_get_index_from_name>
    1e30:	cmn	r0, #1
    1e34:	movw	r0, #0
    1e38:	movne	r0, #1
    1e3c:	and	r0, r0, #1
    1e40:	mov	sp, fp
    1e44:	pop	{fp, pc}

00001e48 <coda_product_class_add_named_type>:
    1e48:	push	{fp, lr}
    1e4c:	mov	fp, sp
    1e50:	sub	sp, sp, #16
    1e54:	str	r0, [sp, #8]
    1e58:	str	r1, [sp, #4]
    1e5c:	ldr	r0, [sp, #8]
    1e60:	ldr	r0, [r0, #24]
    1e64:	ldr	r1, [sp, #4]
    1e68:	ldr	r1, [r1, #16]
    1e6c:	bl	0 <coda_hashtable_add_name>
    1e70:	cmp	r0, #0
    1e74:	beq	1ea4 <coda_product_class_add_named_type+0x5c>
    1e78:	ldr	r0, [pc, #240]	; 1f70 <coda_product_class_add_named_type+0x128>
    1e7c:	ldr	r1, [sp, #4]
    1e80:	ldr	r2, [r1, #16]
    1e84:	ldr	r1, [sp, #8]
    1e88:	ldr	r3, [r1]
    1e8c:	movw	r1, #0
    1e90:	movt	r1, #0
    1e94:	bl	0 <coda_set_error>
    1e98:	mvn	r0, #0
    1e9c:	str	r0, [fp, #-4]
    1ea0:	b	1f64 <coda_product_class_add_named_type+0x11c>
    1ea4:	ldr	r0, [sp, #8]
    1ea8:	ldr	r0, [r0, #16]
    1eac:	asr	r1, r0, #31
    1eb0:	add	r1, r0, r1, lsr #28
    1eb4:	bic	r1, r1, #15
    1eb8:	sub	r0, r0, r1
    1ebc:	cmp	r0, #0
    1ec0:	bne	1f20 <coda_product_class_add_named_type+0xd8>
    1ec4:	ldr	r0, [sp, #8]
    1ec8:	ldr	r1, [r0, #16]
    1ecc:	ldr	r0, [r0, #20]
    1ed0:	add	r1, r1, #16
    1ed4:	lsl	r1, r1, #2
    1ed8:	bl	0 <realloc>
    1edc:	str	r0, [sp]
    1ee0:	ldr	r0, [sp]
    1ee4:	movw	r1, #0
    1ee8:	cmp	r0, r1
    1eec:	beq	1ef4 <coda_product_class_add_named_type+0xac>
    1ef0:	b	1f14 <coda_product_class_add_named_type+0xcc>
    1ef4:	movw	r0, #0
    1ef8:	movt	r0, #0
    1efc:	movw	r1, #0
    1f00:	movt	r1, #0
    1f04:	movw	r2, #848	; 0x350
    1f08:	movw	r3, #0
    1f0c:	movt	r3, #0
    1f10:	bl	0 <__assert_fail>
    1f14:	ldr	r0, [sp]
    1f18:	ldr	r1, [sp, #8]
    1f1c:	str	r0, [r1, #20]
    1f20:	ldr	r0, [sp, #8]
    1f24:	ldr	r1, [r0, #16]
    1f28:	add	r1, r1, #1
    1f2c:	str	r1, [r0, #16]
    1f30:	ldr	r0, [sp, #4]
    1f34:	ldr	r1, [sp, #8]
    1f38:	ldr	r2, [r1, #16]
    1f3c:	ldr	r1, [r1, #20]
    1f40:	sub	r2, r2, #1
    1f44:	add	r1, r1, r2, lsl #2
    1f48:	str	r0, [r1]
    1f4c:	ldr	r0, [sp, #4]
    1f50:	ldr	r1, [r0, #4]
    1f54:	add	r1, r1, #1
    1f58:	str	r1, [r0, #4]
    1f5c:	movw	r0, #0
    1f60:	str	r0, [fp, #-4]
    1f64:	ldr	r0, [fp, #-4]
    1f68:	mov	sp, fp
    1f6c:	pop	{fp, pc}
    1f70:	.word	0xfffffe70

00001f74 <coda_product_class_get_named_type>:
    1f74:	push	{fp, lr}
    1f78:	mov	fp, sp
    1f7c:	sub	sp, sp, #16
    1f80:	str	r0, [sp, #8]
    1f84:	str	r1, [sp, #4]
    1f88:	ldr	r0, [sp, #8]
    1f8c:	ldr	r0, [r0, #24]
    1f90:	ldr	r1, [sp, #4]
    1f94:	bl	0 <coda_hashtable_get_index_from_name>
    1f98:	str	r0, [sp]
    1f9c:	ldr	r0, [sp]
    1fa0:	cmn	r0, #1
    1fa4:	bne	1fd0 <coda_product_class_get_named_type+0x5c>
    1fa8:	ldr	r0, [pc, #68]	; 1ff4 <coda_product_class_get_named_type+0x80>
    1fac:	ldr	r1, [sp, #8]
    1fb0:	ldr	r2, [r1]
    1fb4:	ldr	r3, [sp, #4]
    1fb8:	movw	r1, #0
    1fbc:	movt	r1, #0
    1fc0:	bl	0 <coda_set_error>
    1fc4:	movw	r0, #0
    1fc8:	str	r0, [fp, #-4]
    1fcc:	b	1fe8 <coda_product_class_get_named_type+0x74>
    1fd0:	ldr	r0, [sp, #8]
    1fd4:	ldr	r0, [r0, #20]
    1fd8:	ldr	r1, [sp]
    1fdc:	add	r0, r0, r1, lsl #2
    1fe0:	ldr	r0, [r0]
    1fe4:	str	r0, [fp, #-4]
    1fe8:	ldr	r0, [fp, #-4]
    1fec:	mov	sp, fp
    1ff0:	pop	{fp, pc}
    1ff4:	.word	0xfffffe70

00001ff8 <coda_product_class_has_named_type>:
    1ff8:	push	{fp, lr}
    1ffc:	mov	fp, sp
    2000:	sub	sp, sp, #8
    2004:	str	r0, [sp, #4]
    2008:	str	r1, [sp]
    200c:	ldr	r0, [sp, #4]
    2010:	ldr	r0, [r0, #24]
    2014:	ldr	r1, [sp]
    2018:	bl	0 <coda_hashtable_get_index_from_name>
    201c:	cmn	r0, #1
    2020:	movw	r0, #0
    2024:	movne	r0, #1
    2028:	and	r0, r0, #1
    202c:	mov	sp, fp
    2030:	pop	{fp, pc}

00002034 <coda_product_class_get_revision>:
    2034:	sub	sp, sp, #4
    2038:	str	r0, [sp]
    203c:	ldr	r0, [sp]
    2040:	ldr	r0, [r0, #12]
    2044:	add	sp, sp, #4
    2048:	bx	lr

0000204c <coda_data_dictionary_add_product_class>:
    204c:	push	{fp, lr}
    2050:	mov	fp, sp
    2054:	sub	sp, sp, #80	; 0x50
    2058:	str	r0, [fp, #-8]
    205c:	ldr	r0, [pc, #664]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    2060:	str	r0, [fp, #-24]	; 0xffffffe8
    2064:	bl	0 <__aeabi_read_tp>
    2068:	ldr	ip, [fp, #-24]	; 0xffffffe8
    206c:	ldr	r0, [r0, ip]
    2070:	movw	ip, #0
    2074:	cmp	r0, ip
    2078:	bne	2098 <coda_data_dictionary_add_product_class+0x4c>
    207c:	ldr	r0, [pc, #636]	; 2300 <coda_data_dictionary_add_product_class+0x2b4>
    2080:	movw	r1, #0
    2084:	movt	r1, #0
    2088:	bl	0 <coda_set_error>
    208c:	mvn	r0, #0
    2090:	str	r0, [fp, #-4]
    2094:	b	22f0 <coda_data_dictionary_add_product_class+0x2a4>
    2098:	ldr	r0, [pc, #604]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    209c:	str	r0, [fp, #-28]	; 0xffffffe4
    20a0:	bl	0 <__aeabi_read_tp>
    20a4:	ldr	ip, [fp, #-28]	; 0xffffffe4
    20a8:	ldr	r0, [r0, ip]
    20ac:	ldr	r0, [r0, #8]
    20b0:	ldr	ip, [fp, #-8]
    20b4:	ldr	r1, [ip]
    20b8:	bl	0 <coda_hashtable_add_name>
    20bc:	cmp	r0, #0
    20c0:	beq	20e8 <coda_data_dictionary_add_product_class+0x9c>
    20c4:	ldr	r0, [pc, #564]	; 2300 <coda_data_dictionary_add_product_class+0x2b4>
    20c8:	ldr	r1, [fp, #-8]
    20cc:	ldr	r2, [r1]
    20d0:	movw	r1, #0
    20d4:	movt	r1, #0
    20d8:	bl	0 <coda_set_error>
    20dc:	mvn	r0, #0
    20e0:	str	r0, [fp, #-4]
    20e4:	b	22f0 <coda_data_dictionary_add_product_class+0x2a4>
    20e8:	ldr	r0, [pc, #524]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    20ec:	str	r0, [fp, #-32]	; 0xffffffe0
    20f0:	bl	0 <__aeabi_read_tp>
    20f4:	ldr	ip, [fp, #-32]	; 0xffffffe0
    20f8:	ldr	r0, [r0, ip]
    20fc:	ldr	r0, [r0]
    2100:	asr	ip, r0, #31
    2104:	add	ip, r0, ip, lsr #28
    2108:	bic	ip, ip, #15
    210c:	sub	r0, r0, ip
    2110:	cmp	r0, #0
    2114:	bne	21c4 <coda_data_dictionary_add_product_class+0x178>
    2118:	ldr	r0, [pc, #476]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    211c:	str	r0, [fp, #-36]	; 0xffffffdc
    2120:	bl	0 <__aeabi_read_tp>
    2124:	ldr	ip, [fp, #-36]	; 0xffffffdc
    2128:	ldr	r0, [r0, ip]
    212c:	ldr	ip, [r0]
    2130:	ldr	r0, [r0, #4]
    2134:	add	ip, ip, #16
    2138:	lsl	r1, ip, #2
    213c:	bl	0 <realloc>
    2140:	str	r0, [fp, #-16]
    2144:	ldr	r0, [fp, #-16]
    2148:	movw	r1, #0
    214c:	cmp	r0, r1
    2150:	bne	21a0 <coda_data_dictionary_add_product_class+0x154>
    2154:	ldr	r0, [pc, #416]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    2158:	str	r0, [sp, #40]	; 0x28
    215c:	bl	0 <__aeabi_read_tp>
    2160:	ldr	ip, [sp, #40]	; 0x28
    2164:	ldr	r0, [r0, ip]
    2168:	ldr	r0, [r0]
    216c:	add	r0, r0, #16
    2170:	lsl	r2, r0, #2
    2174:	mvn	r0, #0
    2178:	movw	r1, #0
    217c:	movt	r1, #0
    2180:	movw	r3, #0
    2184:	movt	r3, #0
    2188:	movw	ip, #994	; 0x3e2
    218c:	str	ip, [sp]
    2190:	bl	0 <coda_set_error>
    2194:	mvn	r0, #0
    2198:	str	r0, [fp, #-4]
    219c:	b	22f0 <coda_data_dictionary_add_product_class+0x2a4>
    21a0:	ldr	r0, [fp, #-16]
    21a4:	ldr	r1, [pc, #336]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    21a8:	str	r0, [sp, #36]	; 0x24
    21ac:	str	r1, [sp, #32]
    21b0:	bl	0 <__aeabi_read_tp>
    21b4:	ldr	r1, [sp, #32]
    21b8:	ldr	r0, [r0, r1]
    21bc:	ldr	r1, [sp, #36]	; 0x24
    21c0:	str	r1, [r0, #4]
    21c4:	movw	r0, #0
    21c8:	str	r0, [fp, #-12]
    21cc:	ldr	r0, [fp, #-12]
    21d0:	ldr	r1, [pc, #292]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    21d4:	str	r0, [sp, #28]
    21d8:	str	r1, [sp, #24]
    21dc:	bl	0 <__aeabi_read_tp>
    21e0:	ldr	r1, [sp, #24]
    21e4:	ldr	r0, [r0, r1]
    21e8:	ldr	r0, [r0]
    21ec:	ldr	r1, [sp, #28]
    21f0:	cmp	r1, r0
    21f4:	bge	2294 <coda_data_dictionary_add_product_class+0x248>
    21f8:	ldr	r0, [fp, #-8]
    21fc:	ldr	r0, [r0]
    2200:	ldr	r1, [pc, #244]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    2204:	str	r0, [sp, #20]
    2208:	str	r1, [sp, #16]
    220c:	bl	0 <__aeabi_read_tp>
    2210:	ldr	r1, [sp, #16]
    2214:	ldr	r0, [r0, r1]
    2218:	ldr	r0, [r0, #4]
    221c:	ldr	r1, [fp, #-12]
    2220:	add	r0, r0, r1, lsl #2
    2224:	ldr	r0, [r0]
    2228:	ldr	r1, [r0]
    222c:	ldr	r0, [sp, #20]
    2230:	bl	0 <strcmp>
    2234:	cmp	r0, #0
    2238:	bge	2280 <coda_data_dictionary_add_product_class+0x234>
    223c:	ldr	r0, [fp, #-8]
    2240:	str	r0, [fp, #-20]	; 0xffffffec
    2244:	ldr	r0, [pc, #176]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    2248:	str	r0, [sp, #12]
    224c:	bl	0 <__aeabi_read_tp>
    2250:	ldr	ip, [sp, #12]
    2254:	ldr	lr, [r0, ip]
    2258:	ldr	lr, [lr, #4]
    225c:	ldr	r1, [fp, #-12]
    2260:	ldr	r1, [lr, r1, lsl #2]
    2264:	str	r1, [fp, #-8]
    2268:	ldr	r1, [fp, #-20]	; 0xffffffec
    226c:	ldr	r0, [r0, ip]
    2270:	ldr	r0, [r0, #4]
    2274:	ldr	lr, [fp, #-12]
    2278:	add	r0, r0, lr, lsl #2
    227c:	str	r1, [r0]
    2280:	b	2284 <coda_data_dictionary_add_product_class+0x238>
    2284:	ldr	r0, [fp, #-12]
    2288:	add	r0, r0, #1
    228c:	str	r0, [fp, #-12]
    2290:	b	21cc <coda_data_dictionary_add_product_class+0x180>
    2294:	ldr	r0, [pc, #96]	; 22fc <coda_data_dictionary_add_product_class+0x2b0>
    2298:	str	r0, [sp, #8]
    229c:	bl	0 <__aeabi_read_tp>
    22a0:	ldr	ip, [sp, #8]
    22a4:	ldr	lr, [r0, ip]
    22a8:	ldr	r1, [lr]
    22ac:	add	r1, r1, #1
    22b0:	str	r1, [lr]
    22b4:	ldr	r1, [fp, #-8]
    22b8:	ldr	r0, [r0, ip]
    22bc:	ldr	lr, [r0]
    22c0:	ldr	r0, [r0, #4]
    22c4:	sub	lr, lr, #1
    22c8:	add	r0, r0, lr, lsl #2
    22cc:	str	r1, [r0]
    22d0:	bl	2304 <data_dictionary_rebuild_product_class_hash_data>
    22d4:	cmp	r0, #0
    22d8:	beq	22e8 <coda_data_dictionary_add_product_class+0x29c>
    22dc:	mvn	r0, #0
    22e0:	str	r0, [fp, #-4]
    22e4:	b	22f0 <coda_data_dictionary_add_product_class+0x2a4>
    22e8:	movw	r0, #0
    22ec:	str	r0, [fp, #-4]
    22f0:	ldr	r0, [fp, #-4]
    22f4:	mov	sp, fp
    22f8:	pop	{fp, pc}
    22fc:	.word	0x00000000
    2300:	.word	0xfffffe70

00002304 <data_dictionary_rebuild_product_class_hash_data>:
    2304:	push	{fp, lr}
    2308:	mov	fp, sp
    230c:	sub	sp, sp, #32
    2310:	ldr	r0, [pc, #292]	; 243c <data_dictionary_rebuild_product_class_hash_data+0x138>
    2314:	str	r0, [fp, #-12]
    2318:	bl	0 <__aeabi_read_tp>
    231c:	ldr	ip, [fp, #-12]
    2320:	ldr	lr, [r0, ip]
    2324:	ldr	lr, [lr, #8]
    2328:	str	r0, [sp, #16]
    232c:	mov	r0, lr
    2330:	bl	0 <coda_hashtable_delete>
    2334:	mov	r0, #1
    2338:	bl	0 <coda_hashtable_new>
    233c:	ldr	ip, [sp, #16]
    2340:	ldr	lr, [fp, #-12]
    2344:	ldr	r1, [ip, lr]
    2348:	str	r0, [r1, #8]
    234c:	ldr	r0, [ip, lr]
    2350:	ldr	r0, [r0, #8]
    2354:	movw	r1, #0
    2358:	cmp	r0, r1
    235c:	bne	2388 <data_dictionary_rebuild_product_class_hash_data+0x84>
    2360:	mvn	r0, #0
    2364:	movw	r1, #0
    2368:	movt	r1, #0
    236c:	movw	r2, #0
    2370:	movt	r2, #0
    2374:	movw	r3, #952	; 0x3b8
    2378:	bl	0 <coda_set_error>
    237c:	mvn	r0, #0
    2380:	str	r0, [fp, #-4]
    2384:	b	2430 <data_dictionary_rebuild_product_class_hash_data+0x12c>
    2388:	movw	r0, #0
    238c:	str	r0, [fp, #-8]
    2390:	ldr	r0, [fp, #-8]
    2394:	ldr	r1, [pc, #160]	; 243c <data_dictionary_rebuild_product_class_hash_data+0x138>
    2398:	str	r0, [sp, #12]
    239c:	str	r1, [sp, #8]
    23a0:	bl	0 <__aeabi_read_tp>
    23a4:	ldr	r1, [sp, #8]
    23a8:	ldr	r0, [r0, r1]
    23ac:	ldr	r0, [r0]
    23b0:	ldr	r1, [sp, #12]
    23b4:	cmp	r1, r0
    23b8:	bge	2428 <data_dictionary_rebuild_product_class_hash_data+0x124>
    23bc:	ldr	r0, [pc, #120]	; 243c <data_dictionary_rebuild_product_class_hash_data+0x138>
    23c0:	str	r0, [sp, #4]
    23c4:	bl	0 <__aeabi_read_tp>
    23c8:	ldr	ip, [sp, #4]
    23cc:	ldr	r0, [r0, ip]
    23d0:	ldr	ip, [r0, #4]
    23d4:	ldr	r0, [r0, #8]
    23d8:	ldr	lr, [fp, #-8]
    23dc:	add	ip, ip, lr, lsl #2
    23e0:	ldr	ip, [ip]
    23e4:	ldr	r1, [ip]
    23e8:	bl	0 <coda_hashtable_add_name>
    23ec:	cmp	r0, #0
    23f0:	beq	2414 <data_dictionary_rebuild_product_class_hash_data+0x110>
    23f4:	movw	r0, #0
    23f8:	movt	r0, #0
    23fc:	movw	r1, #0
    2400:	movt	r1, #0
    2404:	movw	r2, #960	; 0x3c0
    2408:	movw	r3, #0
    240c:	movt	r3, #0
    2410:	bl	0 <__assert_fail>
    2414:	b	2418 <data_dictionary_rebuild_product_class_hash_data+0x114>
    2418:	ldr	r0, [fp, #-8]
    241c:	add	r0, r0, #1
    2420:	str	r0, [fp, #-8]
    2424:	b	2390 <data_dictionary_rebuild_product_class_hash_data+0x8c>
    2428:	movw	r0, #0
    242c:	str	r0, [fp, #-4]
    2430:	ldr	r0, [fp, #-4]
    2434:	mov	sp, fp
    2438:	pop	{fp, pc}
    243c:	.word	0x00000000

00002440 <coda_data_dictionary_get_product_class>:
    2440:	push	{fp, lr}
    2444:	mov	fp, sp
    2448:	sub	sp, sp, #24
    244c:	str	r0, [fp, #-8]
    2450:	ldr	r0, [pc, #184]	; 2510 <coda_data_dictionary_get_product_class+0xd0>
    2454:	str	r0, [sp, #8]
    2458:	bl	0 <__aeabi_read_tp>
    245c:	ldr	ip, [sp, #8]
    2460:	ldr	r0, [r0, ip]
    2464:	movw	ip, #0
    2468:	cmp	r0, ip
    246c:	bne	248c <coda_data_dictionary_get_product_class+0x4c>
    2470:	ldr	r0, [pc, #156]	; 2514 <coda_data_dictionary_get_product_class+0xd4>
    2474:	movw	r1, #0
    2478:	movt	r1, #0
    247c:	bl	0 <coda_set_error>
    2480:	movw	r0, #0
    2484:	str	r0, [fp, #-4]
    2488:	b	2504 <coda_data_dictionary_get_product_class+0xc4>
    248c:	ldr	r0, [pc, #124]	; 2510 <coda_data_dictionary_get_product_class+0xd0>
    2490:	str	r0, [sp, #4]
    2494:	bl	0 <__aeabi_read_tp>
    2498:	ldr	ip, [sp, #4]
    249c:	ldr	r0, [r0, ip]
    24a0:	ldr	r0, [r0, #8]
    24a4:	ldr	r1, [fp, #-8]
    24a8:	bl	0 <coda_hashtable_get_index_from_name>
    24ac:	str	r0, [sp, #12]
    24b0:	ldr	r0, [sp, #12]
    24b4:	cmn	r0, #1
    24b8:	bne	24dc <coda_data_dictionary_get_product_class+0x9c>
    24bc:	ldr	r0, [pc, #80]	; 2514 <coda_data_dictionary_get_product_class+0xd4>
    24c0:	ldr	r2, [fp, #-8]
    24c4:	movw	r1, #0
    24c8:	movt	r1, #0
    24cc:	bl	0 <coda_set_error>
    24d0:	movw	r0, #0
    24d4:	str	r0, [fp, #-4]
    24d8:	b	2504 <coda_data_dictionary_get_product_class+0xc4>
    24dc:	ldr	r0, [pc, #44]	; 2510 <coda_data_dictionary_get_product_class+0xd0>
    24e0:	str	r0, [sp]
    24e4:	bl	0 <__aeabi_read_tp>
    24e8:	ldr	ip, [sp]
    24ec:	ldr	r0, [r0, ip]
    24f0:	ldr	r0, [r0, #4]
    24f4:	ldr	ip, [sp, #12]
    24f8:	add	r0, r0, ip, lsl #2
    24fc:	ldr	r0, [r0]
    2500:	str	r0, [fp, #-4]
    2504:	ldr	r0, [fp, #-4]
    2508:	mov	sp, fp
    250c:	pop	{fp, pc}
    2510:	.word	0x00000000
    2514:	.word	0xfffffe70

00002518 <coda_data_dictionary_has_product_class>:
    2518:	push	{fp, lr}
    251c:	mov	fp, sp
    2520:	sub	sp, sp, #16
    2524:	str	r0, [sp, #8]
    2528:	ldr	r0, [pc, #100]	; 2594 <coda_data_dictionary_has_product_class+0x7c>
    252c:	str	r0, [sp, #4]
    2530:	bl	0 <__aeabi_read_tp>
    2534:	ldr	ip, [sp, #4]
    2538:	ldr	r0, [r0, ip]
    253c:	movw	ip, #0
    2540:	cmp	r0, ip
    2544:	bne	2554 <coda_data_dictionary_has_product_class+0x3c>
    2548:	movw	r0, #0
    254c:	str	r0, [fp, #-4]
    2550:	b	2588 <coda_data_dictionary_has_product_class+0x70>
    2554:	ldr	r0, [pc, #56]	; 2594 <coda_data_dictionary_has_product_class+0x7c>
    2558:	str	r0, [sp]
    255c:	bl	0 <__aeabi_read_tp>
    2560:	ldr	ip, [sp]
    2564:	ldr	r0, [r0, ip]
    2568:	ldr	r0, [r0, #8]
    256c:	ldr	r1, [sp, #8]
    2570:	bl	0 <coda_hashtable_get_index_from_name>
    2574:	cmn	r0, #1
    2578:	movw	r0, #0
    257c:	movne	r0, #1
    2580:	and	r0, r0, #1
    2584:	str	r0, [fp, #-4]
    2588:	ldr	r0, [fp, #-4]
    258c:	mov	sp, fp
    2590:	pop	{fp, pc}
    2594:	.word	0x00000000

00002598 <coda_data_dictionary_remove_product_class>:
    2598:	push	{fp, lr}
    259c:	mov	fp, sp
    25a0:	sub	sp, sp, #40	; 0x28
    25a4:	str	r0, [fp, #-8]
    25a8:	ldr	r0, [pc, #368]	; 2720 <coda_data_dictionary_remove_product_class+0x188>
    25ac:	str	r0, [sp, #20]
    25b0:	bl	0 <__aeabi_read_tp>
    25b4:	ldr	ip, [sp, #20]
    25b8:	ldr	r0, [r0, ip]
    25bc:	movw	ip, #0
    25c0:	cmp	r0, ip
    25c4:	bne	25e4 <coda_data_dictionary_remove_product_class+0x4c>
    25c8:	ldr	r0, [pc, #340]	; 2724 <coda_data_dictionary_remove_product_class+0x18c>
    25cc:	movw	r1, #0
    25d0:	movt	r1, #0
    25d4:	bl	0 <coda_set_error>
    25d8:	mvn	r0, #0
    25dc:	str	r0, [fp, #-4]
    25e0:	b	2714 <coda_data_dictionary_remove_product_class+0x17c>
    25e4:	ldr	r0, [pc, #308]	; 2720 <coda_data_dictionary_remove_product_class+0x188>
    25e8:	str	r0, [sp, #16]
    25ec:	bl	0 <__aeabi_read_tp>
    25f0:	ldr	ip, [sp, #16]
    25f4:	ldr	r0, [r0, ip]
    25f8:	ldr	r0, [r0, #8]
    25fc:	ldr	ip, [fp, #-8]
    2600:	ldr	r1, [ip]
    2604:	bl	0 <coda_hashtable_get_index_from_name>
    2608:	str	r0, [fp, #-12]
    260c:	ldr	r0, [fp, #-12]
    2610:	cmn	r0, #1
    2614:	bne	263c <coda_data_dictionary_remove_product_class+0xa4>
    2618:	ldr	r0, [pc, #260]	; 2724 <coda_data_dictionary_remove_product_class+0x18c>
    261c:	ldr	r1, [fp, #-8]
    2620:	ldr	r2, [r1]
    2624:	movw	r1, #0
    2628:	movt	r1, #0
    262c:	bl	0 <coda_set_error>
    2630:	mvn	r0, #0
    2634:	str	r0, [fp, #-4]
    2638:	b	2714 <coda_data_dictionary_remove_product_class+0x17c>
    263c:	ldr	r0, [fp, #-12]
    2640:	add	r0, r0, #1
    2644:	str	r0, [fp, #-16]
    2648:	ldr	r0, [fp, #-16]
    264c:	ldr	r1, [pc, #204]	; 2720 <coda_data_dictionary_remove_product_class+0x188>
    2650:	str	r0, [sp, #12]
    2654:	str	r1, [sp, #8]
    2658:	bl	0 <__aeabi_read_tp>
    265c:	ldr	r1, [sp, #8]
    2660:	ldr	r0, [r0, r1]
    2664:	ldr	r0, [r0]
    2668:	ldr	r1, [sp, #12]
    266c:	cmp	r1, r0
    2670:	bge	26b0 <coda_data_dictionary_remove_product_class+0x118>
    2674:	ldr	r0, [pc, #164]	; 2720 <coda_data_dictionary_remove_product_class+0x188>
    2678:	str	r0, [sp, #4]
    267c:	bl	0 <__aeabi_read_tp>
    2680:	ldr	ip, [sp, #4]
    2684:	ldr	r0, [r0, ip]
    2688:	ldr	r0, [r0, #4]
    268c:	ldr	ip, [fp, #-16]
    2690:	ldr	lr, [r0, ip, lsl #2]
    2694:	sub	ip, ip, #1
    2698:	add	r0, r0, ip, lsl #2
    269c:	str	lr, [r0]
    26a0:	ldr	r0, [fp, #-16]
    26a4:	add	r0, r0, #1
    26a8:	str	r0, [fp, #-16]
    26ac:	b	2648 <coda_data_dictionary_remove_product_class+0xb0>
    26b0:	ldr	r0, [pc, #104]	; 2720 <coda_data_dictionary_remove_product_class+0x188>
    26b4:	str	r0, [sp]
    26b8:	bl	0 <__aeabi_read_tp>
    26bc:	ldr	ip, [sp]
    26c0:	ldr	r0, [r0, ip]
    26c4:	ldr	ip, [r0]
    26c8:	mvn	lr, #0
    26cc:	add	ip, ip, lr
    26d0:	str	ip, [r0]
    26d4:	ldr	r0, [fp, #-8]
    26d8:	bl	172c <coda_product_class_delete>
    26dc:	bl	2304 <data_dictionary_rebuild_product_class_hash_data>
    26e0:	cmp	r0, #0
    26e4:	beq	26f4 <coda_data_dictionary_remove_product_class+0x15c>
    26e8:	mvn	r0, #0
    26ec:	str	r0, [fp, #-4]
    26f0:	b	2714 <coda_data_dictionary_remove_product_class+0x17c>
    26f4:	bl	2728 <data_dictionary_rebuild_detection_tree>
    26f8:	cmp	r0, #0
    26fc:	beq	270c <coda_data_dictionary_remove_product_class+0x174>
    2700:	mvn	r0, #0
    2704:	str	r0, [fp, #-4]
    2708:	b	2714 <coda_data_dictionary_remove_product_class+0x17c>
    270c:	movw	r0, #0
    2710:	str	r0, [fp, #-4]
    2714:	ldr	r0, [fp, #-4]
    2718:	mov	sp, fp
    271c:	pop	{fp, pc}
    2720:	.word	0x00000000
    2724:	.word	0xfffffe70

00002728 <data_dictionary_rebuild_detection_tree>:
    2728:	push	{fp, lr}
    272c:	mov	fp, sp
    2730:	sub	sp, sp, #56	; 0x38
    2734:	movw	r0, #0
    2738:	str	r0, [fp, #-8]
    273c:	ldr	r0, [fp, #-8]
    2740:	cmp	r0, #10
    2744:	bge	27d8 <data_dictionary_rebuild_detection_tree+0xb0>
    2748:	ldr	r0, [pc, #504]	; 2948 <data_dictionary_rebuild_detection_tree+0x220>
    274c:	str	r0, [sp, #20]
    2750:	bl	0 <__aeabi_read_tp>
    2754:	ldr	ip, [sp, #20]
    2758:	ldr	r0, [r0, ip]
    275c:	add	r0, r0, #12
    2760:	ldr	ip, [fp, #-8]
    2764:	add	r0, r0, ip, lsl #2
    2768:	ldr	r0, [r0]
    276c:	movw	ip, #0
    2770:	cmp	r0, ip
    2774:	beq	27c4 <data_dictionary_rebuild_detection_tree+0x9c>
    2778:	ldr	r0, [pc, #456]	; 2948 <data_dictionary_rebuild_detection_tree+0x220>
    277c:	str	r0, [sp, #16]
    2780:	bl	0 <__aeabi_read_tp>
    2784:	ldr	ip, [sp, #16]
    2788:	ldr	lr, [r0, ip]
    278c:	ldr	r1, [fp, #-8]
    2790:	add	r1, lr, r1, lsl #2
    2794:	ldr	r1, [r1, #12]
    2798:	str	r0, [sp, #12]
    279c:	mov	r0, r1
    27a0:	bl	0 <coda_detection_tree_delete>
    27a4:	ldr	r0, [sp, #12]
    27a8:	ldr	r1, [sp, #16]
    27ac:	ldr	ip, [r0, r1]
    27b0:	add	ip, ip, #12
    27b4:	ldr	lr, [fp, #-8]
    27b8:	add	ip, ip, lr, lsl #2
    27bc:	movw	lr, #0
    27c0:	str	lr, [ip]
    27c4:	b	27c8 <data_dictionary_rebuild_detection_tree+0xa0>
    27c8:	ldr	r0, [fp, #-8]
    27cc:	add	r0, r0, #1
    27d0:	str	r0, [fp, #-8]
    27d4:	b	273c <data_dictionary_rebuild_detection_tree+0x14>
    27d8:	movw	r0, #0
    27dc:	str	r0, [fp, #-8]
    27e0:	ldr	r0, [fp, #-8]
    27e4:	ldr	r1, [pc, #348]	; 2948 <data_dictionary_rebuild_detection_tree+0x220>
    27e8:	str	r0, [sp, #8]
    27ec:	str	r1, [sp, #4]
    27f0:	bl	0 <__aeabi_read_tp>
    27f4:	ldr	r1, [sp, #4]
    27f8:	ldr	r0, [r0, r1]
    27fc:	ldr	r0, [r0]
    2800:	ldr	r1, [sp, #8]
    2804:	cmp	r1, r0
    2808:	bge	2934 <data_dictionary_rebuild_detection_tree+0x20c>
    280c:	ldr	r0, [pc, #308]	; 2948 <data_dictionary_rebuild_detection_tree+0x220>
    2810:	str	r0, [sp]
    2814:	bl	0 <__aeabi_read_tp>
    2818:	ldr	ip, [sp]
    281c:	ldr	r0, [r0, ip]
    2820:	ldr	r0, [r0, #4]
    2824:	ldr	ip, [fp, #-8]
    2828:	add	r0, r0, ip, lsl #2
    282c:	ldr	r0, [r0]
    2830:	str	r0, [fp, #-24]	; 0xffffffe8
    2834:	movw	r0, #0
    2838:	str	r0, [fp, #-12]
    283c:	ldr	r0, [fp, #-12]
    2840:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2844:	ldr	r1, [r1, #28]
    2848:	cmp	r0, r1
    284c:	bge	2920 <data_dictionary_rebuild_detection_tree+0x1f8>
    2850:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2854:	ldr	r0, [r0, #32]
    2858:	ldr	r1, [fp, #-12]
    285c:	add	r0, r0, r1, lsl #2
    2860:	ldr	r0, [r0]
    2864:	str	r0, [sp, #28]
    2868:	movw	r0, #0
    286c:	str	r0, [fp, #-16]
    2870:	ldr	r0, [fp, #-16]
    2874:	ldr	r1, [sp, #28]
    2878:	ldr	r1, [r1, #8]
    287c:	cmp	r0, r1
    2880:	bge	290c <data_dictionary_rebuild_detection_tree+0x1e4>
    2884:	ldr	r0, [sp, #28]
    2888:	ldr	r0, [r0, #12]
    288c:	ldr	r1, [fp, #-16]
    2890:	add	r0, r0, r1, lsl #2
    2894:	ldr	r0, [r0]
    2898:	str	r0, [sp, #24]
    289c:	movw	r0, #0
    28a0:	str	r0, [fp, #-20]	; 0xffffffec
    28a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    28a8:	ldr	r1, [sp, #24]
    28ac:	ldr	r1, [r1, #16]
    28b0:	cmp	r0, r1
    28b4:	bge	28f8 <data_dictionary_rebuild_detection_tree+0x1d0>
    28b8:	ldr	r0, [sp, #24]
    28bc:	ldr	r0, [r0, #20]
    28c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    28c4:	add	r0, r0, r1, lsl #2
    28c8:	ldr	r0, [r0]
    28cc:	bl	e44 <data_dictionary_add_detection_rule>
    28d0:	cmp	r0, #0
    28d4:	beq	28e4 <data_dictionary_rebuild_detection_tree+0x1bc>
    28d8:	mvn	r0, #0
    28dc:	str	r0, [fp, #-4]
    28e0:	b	293c <data_dictionary_rebuild_detection_tree+0x214>
    28e4:	b	28e8 <data_dictionary_rebuild_detection_tree+0x1c0>
    28e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    28ec:	add	r0, r0, #1
    28f0:	str	r0, [fp, #-20]	; 0xffffffec
    28f4:	b	28a4 <data_dictionary_rebuild_detection_tree+0x17c>
    28f8:	b	28fc <data_dictionary_rebuild_detection_tree+0x1d4>
    28fc:	ldr	r0, [fp, #-16]
    2900:	add	r0, r0, #1
    2904:	str	r0, [fp, #-16]
    2908:	b	2870 <data_dictionary_rebuild_detection_tree+0x148>
    290c:	b	2910 <data_dictionary_rebuild_detection_tree+0x1e8>
    2910:	ldr	r0, [fp, #-12]
    2914:	add	r0, r0, #1
    2918:	str	r0, [fp, #-12]
    291c:	b	283c <data_dictionary_rebuild_detection_tree+0x114>
    2920:	b	2924 <data_dictionary_rebuild_detection_tree+0x1fc>
    2924:	ldr	r0, [fp, #-8]
    2928:	add	r0, r0, #1
    292c:	str	r0, [fp, #-8]
    2930:	b	27e0 <data_dictionary_rebuild_detection_tree+0xb8>
    2934:	movw	r0, #0
    2938:	str	r0, [fp, #-4]
    293c:	ldr	r0, [fp, #-4]
    2940:	mov	sp, fp
    2944:	pop	{fp, pc}
    2948:	.word	0x00000000

0000294c <coda_data_dictionary_get_definition>:
    294c:	push	{fp, lr}
    2950:	mov	fp, sp
    2954:	sub	sp, sp, #32
    2958:	str	r0, [fp, #-8]
    295c:	str	r1, [fp, #-12]
    2960:	str	r2, [sp, #16]
    2964:	str	r3, [sp, #12]
    2968:	movw	r0, #0
    296c:	str	r0, [sp]
    2970:	ldr	r0, [fp, #-8]
    2974:	bl	2440 <coda_data_dictionary_get_product_class>
    2978:	str	r0, [sp, #8]
    297c:	ldr	r0, [sp, #8]
    2980:	movw	r1, #0
    2984:	cmp	r0, r1
    2988:	bne	2998 <coda_data_dictionary_get_definition+0x4c>
    298c:	mvn	r0, #0
    2990:	str	r0, [fp, #-4]
    2994:	b	2a20 <coda_data_dictionary_get_definition+0xd4>
    2998:	ldr	r0, [sp, #8]
    299c:	ldr	r1, [fp, #-12]
    29a0:	bl	1d88 <coda_product_class_get_product_type>
    29a4:	str	r0, [sp, #4]
    29a8:	ldr	r0, [sp, #4]
    29ac:	movw	r1, #0
    29b0:	cmp	r0, r1
    29b4:	bne	29c4 <coda_data_dictionary_get_definition+0x78>
    29b8:	mvn	r0, #0
    29bc:	str	r0, [fp, #-4]
    29c0:	b	2a20 <coda_data_dictionary_get_definition+0xd4>
    29c4:	ldr	r0, [sp, #16]
    29c8:	cmp	r0, #0
    29cc:	bge	29e0 <coda_data_dictionary_get_definition+0x94>
    29d0:	ldr	r0, [sp, #4]
    29d4:	bl	162c <coda_product_type_get_latest_product_definition>
    29d8:	str	r0, [sp]
    29dc:	b	29f0 <coda_data_dictionary_get_definition+0xa4>
    29e0:	ldr	r0, [sp, #4]
    29e4:	ldr	r1, [sp, #16]
    29e8:	bl	1574 <coda_product_type_get_product_definition_by_version>
    29ec:	str	r0, [sp]
    29f0:	ldr	r0, [sp]
    29f4:	movw	r1, #0
    29f8:	cmp	r0, r1
    29fc:	bne	2a0c <coda_data_dictionary_get_definition+0xc0>
    2a00:	mvn	r0, #0
    2a04:	str	r0, [fp, #-4]
    2a08:	b	2a20 <coda_data_dictionary_get_definition+0xd4>
    2a0c:	ldr	r0, [sp]
    2a10:	ldr	r1, [sp, #12]
    2a14:	str	r0, [r1]
    2a18:	movw	r0, #0
    2a1c:	str	r0, [fp, #-4]
    2a20:	ldr	r0, [fp, #-4]
    2a24:	mov	sp, fp
    2a28:	pop	{fp, pc}

00002a2c <coda_data_dictionary_get_detection_tree>:
    2a2c:	push	{fp, lr}
    2a30:	mov	fp, sp
    2a34:	sub	sp, sp, #8
    2a38:	str	r0, [sp, #4]
    2a3c:	ldr	r0, [sp, #4]
    2a40:	cmp	r0, #0
    2a44:	bne	2a50 <coda_data_dictionary_get_detection_tree+0x24>
    2a48:	movw	r0, #1
    2a4c:	str	r0, [sp, #4]
    2a50:	ldr	r0, [pc, #36]	; 2a7c <coda_data_dictionary_get_detection_tree+0x50>
    2a54:	str	r0, [sp]
    2a58:	bl	0 <__aeabi_read_tp>
    2a5c:	ldr	ip, [sp]
    2a60:	ldr	r0, [r0, ip]
    2a64:	add	r0, r0, #12
    2a68:	ldr	ip, [sp, #4]
    2a6c:	add	r0, r0, ip, lsl #2
    2a70:	ldr	r0, [r0]
    2a74:	mov	sp, fp
    2a78:	pop	{fp, pc}
    2a7c:	.word	0x00000000

00002a80 <coda_data_dictionary_find_definition_for_product>:
    2a80:	push	{r4, r5, fp, lr}
    2a84:	add	fp, sp, #8
    2a88:	sub	sp, sp, #536	; 0x218
    2a8c:	str	r0, [fp, #-16]
    2a90:	str	r1, [fp, #-20]	; 0xffffffec
    2a94:	ldr	r1, [fp, #-16]
    2a98:	mov	r0, sp
    2a9c:	bl	0 <coda_cursor_set_product>
    2aa0:	cmp	r0, #0
    2aa4:	beq	2ab4 <coda_data_dictionary_find_definition_for_product+0x34>
    2aa8:	mvn	r0, #0
    2aac:	str	r0, [fp, #-12]
    2ab0:	b	2ad0 <coda_data_dictionary_find_definition_for_product+0x50>
    2ab4:	ldr	r0, [fp, #-16]
    2ab8:	ldr	r0, [r0, #16]
    2abc:	bl	2a2c <coda_data_dictionary_get_detection_tree>
    2ac0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ac4:	mov	r1, sp
    2ac8:	bl	0 <coda_evaluate_detection_node>
    2acc:	str	r0, [fp, #-12]
    2ad0:	ldr	r0, [fp, #-12]
    2ad4:	sub	sp, fp, #8
    2ad8:	pop	{r4, r5, fp, pc}

00002adc <coda_data_dictionary_init>:
    2adc:	push	{fp, lr}
    2ae0:	mov	fp, sp
    2ae4:	sub	sp, sp, #16
    2ae8:	ldr	r0, [pc, #140]	; 2b7c <coda_data_dictionary_init+0xa0>
    2aec:	str	r0, [sp, #8]
    2af0:	bl	0 <__aeabi_read_tp>
    2af4:	ldr	ip, [sp, #8]
    2af8:	ldr	r0, [r0, ip]
    2afc:	movw	ip, #0
    2b00:	cmp	r0, ip
    2b04:	bne	2b0c <coda_data_dictionary_init+0x30>
    2b08:	b	2b2c <coda_data_dictionary_init+0x50>
    2b0c:	movw	r0, #0
    2b10:	movt	r0, #0
    2b14:	movw	r1, #0
    2b18:	movt	r1, #0
    2b1c:	movw	r2, #1200	; 0x4b0
    2b20:	movw	r3, #0
    2b24:	movt	r3, #0
    2b28:	bl	0 <__assert_fail>
    2b2c:	bl	2b80 <coda_data_dictionary_new>
    2b30:	ldr	lr, [pc, #68]	; 2b7c <coda_data_dictionary_init+0xa0>
    2b34:	str	r0, [sp, #4]
    2b38:	str	lr, [sp]
    2b3c:	bl	0 <__aeabi_read_tp>
    2b40:	ldr	ip, [sp, #4]
    2b44:	ldr	lr, [sp]
    2b48:	str	ip, [r0, lr]
    2b4c:	ldr	r0, [r0, lr]
    2b50:	movw	r1, #0
    2b54:	cmp	r0, r1
    2b58:	bne	2b68 <coda_data_dictionary_init+0x8c>
    2b5c:	mvn	r0, #0
    2b60:	str	r0, [fp, #-4]
    2b64:	b	2b70 <coda_data_dictionary_init+0x94>
    2b68:	movw	r0, #0
    2b6c:	str	r0, [fp, #-4]
    2b70:	ldr	r0, [fp, #-4]
    2b74:	mov	sp, fp
    2b78:	pop	{fp, pc}
    2b7c:	.word	0x00000000

00002b80 <coda_data_dictionary_new>:
    2b80:	push	{fp, lr}
    2b84:	mov	fp, sp
    2b88:	sub	sp, sp, #16
    2b8c:	movw	r0, #52	; 0x34
    2b90:	bl	0 <malloc>
    2b94:	str	r0, [sp, #8]
    2b98:	ldr	r0, [sp, #8]
    2b9c:	movw	lr, #0
    2ba0:	cmp	r0, lr
    2ba4:	bne	2bd8 <coda_data_dictionary_new+0x58>
    2ba8:	mvn	r0, #0
    2bac:	movw	r1, #0
    2bb0:	movt	r1, #0
    2bb4:	movw	r2, #52	; 0x34
    2bb8:	movw	r3, #0
    2bbc:	movt	r3, #0
    2bc0:	movw	ip, #920	; 0x398
    2bc4:	str	ip, [sp]
    2bc8:	bl	0 <coda_set_error>
    2bcc:	movw	r0, #0
    2bd0:	str	r0, [fp, #-4]
    2bd4:	b	2c88 <coda_data_dictionary_new+0x108>
    2bd8:	ldr	r0, [sp, #8]
    2bdc:	movw	r1, #0
    2be0:	str	r1, [r0]
    2be4:	ldr	r0, [sp, #8]
    2be8:	str	r1, [r0, #4]
    2bec:	ldr	r0, [sp, #8]
    2bf0:	str	r1, [r0, #8]
    2bf4:	str	r1, [sp, #4]
    2bf8:	ldr	r0, [sp, #4]
    2bfc:	cmp	r0, #10
    2c00:	bge	2c2c <coda_data_dictionary_new+0xac>
    2c04:	ldr	r0, [sp, #8]
    2c08:	add	r0, r0, #12
    2c0c:	ldr	r1, [sp, #4]
    2c10:	add	r0, r0, r1, lsl #2
    2c14:	movw	r1, #0
    2c18:	str	r1, [r0]
    2c1c:	ldr	r0, [sp, #4]
    2c20:	add	r0, r0, #1
    2c24:	str	r0, [sp, #4]
    2c28:	b	2bf8 <coda_data_dictionary_new+0x78>
    2c2c:	movw	r0, #1
    2c30:	bl	0 <coda_hashtable_new>
    2c34:	ldr	lr, [sp, #8]
    2c38:	str	r0, [lr, #8]
    2c3c:	ldr	r0, [sp, #8]
    2c40:	ldr	r0, [r0, #8]
    2c44:	movw	lr, #0
    2c48:	cmp	r0, lr
    2c4c:	bne	2c80 <coda_data_dictionary_new+0x100>
    2c50:	mvn	r0, #0
    2c54:	movw	r1, #0
    2c58:	movt	r1, #0
    2c5c:	movw	r2, #0
    2c60:	movt	r2, #0
    2c64:	movw	r3, #935	; 0x3a7
    2c68:	bl	0 <coda_set_error>
    2c6c:	ldr	r0, [sp, #8]
    2c70:	bl	2d20 <delete_data_dictionary>
    2c74:	movw	r0, #0
    2c78:	str	r0, [fp, #-4]
    2c7c:	b	2c88 <coda_data_dictionary_new+0x108>
    2c80:	ldr	r0, [sp, #8]
    2c84:	str	r0, [fp, #-4]
    2c88:	ldr	r0, [fp, #-4]
    2c8c:	mov	sp, fp
    2c90:	pop	{fp, pc}

00002c94 <coda_data_dictionary_done>:
    2c94:	push	{fp, lr}
    2c98:	mov	fp, sp
    2c9c:	sub	sp, sp, #16
    2ca0:	ldr	r0, [pc, #116]	; 2d1c <coda_data_dictionary_done+0x88>
    2ca4:	str	r0, [fp, #-4]
    2ca8:	bl	0 <__aeabi_read_tp>
    2cac:	ldr	ip, [fp, #-4]
    2cb0:	ldr	r0, [r0, ip]
    2cb4:	movw	ip, #0
    2cb8:	cmp	r0, ip
    2cbc:	beq	2cc4 <coda_data_dictionary_done+0x30>
    2cc0:	b	2ce4 <coda_data_dictionary_done+0x50>
    2cc4:	movw	r0, #0
    2cc8:	movt	r0, #0
    2ccc:	movw	r1, #0
    2cd0:	movt	r1, #0
    2cd4:	movw	r2, #1213	; 0x4bd
    2cd8:	movw	r3, #0
    2cdc:	movt	r3, #0
    2ce0:	bl	0 <__assert_fail>
    2ce4:	ldr	r0, [pc, #48]	; 2d1c <coda_data_dictionary_done+0x88>
    2ce8:	str	r0, [sp, #8]
    2cec:	bl	0 <__aeabi_read_tp>
    2cf0:	ldr	ip, [sp, #8]
    2cf4:	ldr	lr, [r0, ip]
    2cf8:	str	r0, [sp, #4]
    2cfc:	mov	r0, lr
    2d00:	bl	2d20 <delete_data_dictionary>
    2d04:	mov	r0, #0
    2d08:	ldr	ip, [sp, #4]
    2d0c:	ldr	lr, [sp, #8]
    2d10:	str	r0, [ip, lr]
    2d14:	mov	sp, fp
    2d18:	pop	{fp, pc}
    2d1c:	.word	0x00000000

00002d20 <delete_data_dictionary>:
    2d20:	push	{fp, lr}
    2d24:	mov	fp, sp
    2d28:	sub	sp, sp, #8
    2d2c:	str	r0, [sp, #4]
    2d30:	ldr	r0, [sp, #4]
    2d34:	movw	r1, #0
    2d38:	cmp	r0, r1
    2d3c:	beq	2d44 <delete_data_dictionary+0x24>
    2d40:	b	2d64 <delete_data_dictionary+0x44>
    2d44:	movw	r0, #0
    2d48:	movt	r0, #0
    2d4c:	movw	r1, #0
    2d50:	movt	r1, #0
    2d54:	movw	r2, #887	; 0x377
    2d58:	movw	r3, #0
    2d5c:	movt	r3, #0
    2d60:	bl	0 <__assert_fail>
    2d64:	ldr	r0, [sp, #4]
    2d68:	ldr	r0, [r0, #8]
    2d6c:	movw	r1, #0
    2d70:	cmp	r0, r1
    2d74:	beq	2d84 <delete_data_dictionary+0x64>
    2d78:	ldr	r0, [sp, #4]
    2d7c:	ldr	r0, [r0, #8]
    2d80:	bl	0 <coda_hashtable_delete>
    2d84:	ldr	r0, [sp, #4]
    2d88:	ldr	r0, [r0, #4]
    2d8c:	movw	r1, #0
    2d90:	cmp	r0, r1
    2d94:	beq	2de8 <delete_data_dictionary+0xc8>
    2d98:	movw	r0, #0
    2d9c:	str	r0, [sp]
    2da0:	ldr	r0, [sp]
    2da4:	ldr	r1, [sp, #4]
    2da8:	ldr	r1, [r1]
    2dac:	cmp	r0, r1
    2db0:	bge	2ddc <delete_data_dictionary+0xbc>
    2db4:	ldr	r0, [sp, #4]
    2db8:	ldr	r0, [r0, #4]
    2dbc:	ldr	r1, [sp]
    2dc0:	add	r0, r0, r1, lsl #2
    2dc4:	ldr	r0, [r0]
    2dc8:	bl	172c <coda_product_class_delete>
    2dcc:	ldr	r0, [sp]
    2dd0:	add	r0, r0, #1
    2dd4:	str	r0, [sp]
    2dd8:	b	2da0 <delete_data_dictionary+0x80>
    2ddc:	ldr	r0, [sp, #4]
    2de0:	ldr	r0, [r0, #4]
    2de4:	bl	0 <free>
    2de8:	movw	r0, #0
    2dec:	str	r0, [sp]
    2df0:	ldr	r0, [sp]
    2df4:	cmp	r0, #10
    2df8:	bge	2e48 <delete_data_dictionary+0x128>
    2dfc:	ldr	r0, [sp, #4]
    2e00:	add	r0, r0, #12
    2e04:	ldr	r1, [sp]
    2e08:	add	r0, r0, r1, lsl #2
    2e0c:	ldr	r0, [r0]
    2e10:	movw	r1, #0
    2e14:	cmp	r0, r1
    2e18:	beq	2e34 <delete_data_dictionary+0x114>
    2e1c:	ldr	r0, [sp, #4]
    2e20:	add	r0, r0, #12
    2e24:	ldr	r1, [sp]
    2e28:	add	r0, r0, r1, lsl #2
    2e2c:	ldr	r0, [r0]
    2e30:	bl	0 <coda_detection_tree_delete>
    2e34:	b	2e38 <delete_data_dictionary+0x118>
    2e38:	ldr	r0, [sp]
    2e3c:	add	r0, r0, #1
    2e40:	str	r0, [sp]
    2e44:	b	2df0 <delete_data_dictionary+0xd0>
    2e48:	ldr	r0, [sp, #4]
    2e4c:	bl	0 <free>
    2e50:	mov	sp, fp
    2e54:	pop	{fp, pc}
