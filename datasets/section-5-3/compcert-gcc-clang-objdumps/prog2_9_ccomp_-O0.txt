
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000104cc <.init>:
   104cc:	push	{r3, lr}
   104d0:	bl	105dc <abort@plt+0x3c>
   104d4:	pop	{r3, pc}

Disassembly of section .plt:

000104d8 <calloc@plt-0x14>:
   104d8:	push	{lr}		; (str lr, [sp, #-4]!)
   104dc:	ldr	lr, [pc, #4]	; 104e8 <calloc@plt-0x4>
   104e0:	add	lr, pc, lr
   104e4:	ldr	pc, [lr, #8]!
   104e8:	andeq	r1, r1, r8, lsl fp

000104ec <calloc@plt>:
   104ec:	add	ip, pc, #0, 12
   104f0:	add	ip, ip, #69632	; 0x11000
   104f4:	ldr	pc, [ip, #2840]!	; 0xb18

000104f8 <strcmp@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #69632	; 0x11000
   10500:	ldr	pc, [ip, #2832]!	; 0xb10

00010504 <printf@plt>:
   10504:	add	ip, pc, #0, 12
   10508:	add	ip, ip, #69632	; 0x11000
   1050c:	ldr	pc, [ip, #2824]!	; 0xb08

00010510 <fopen@plt>:
   10510:	add	ip, pc, #0, 12
   10514:	add	ip, ip, #69632	; 0x11000
   10518:	ldr	pc, [ip, #2816]!	; 0xb00

0001051c <fflush@plt>:
   1051c:	add	ip, pc, #0, 12
   10520:	add	ip, ip, #69632	; 0x11000
   10524:	ldr	pc, [ip, #2808]!	; 0xaf8

00010528 <free@plt>:
   10528:	add	ip, pc, #0, 12
   1052c:	add	ip, ip, #69632	; 0x11000
   10530:	ldr	pc, [ip, #2800]!	; 0xaf0

00010534 <fgets@plt>:
   10534:	add	ip, pc, #0, 12
   10538:	add	ip, ip, #69632	; 0x11000
   1053c:	ldr	pc, [ip, #2792]!	; 0xae8

00010540 <strdup@plt>:
   10540:	add	ip, pc, #0, 12
   10544:	add	ip, ip, #69632	; 0x11000
   10548:	ldr	pc, [ip, #2784]!	; 0xae0

0001054c <malloc@plt>:
   1054c:	add	ip, pc, #0, 12
   10550:	add	ip, ip, #69632	; 0x11000
   10554:	ldr	pc, [ip, #2776]!	; 0xad8

00010558 <__libc_start_main@plt>:
   10558:	add	ip, pc, #0, 12
   1055c:	add	ip, ip, #69632	; 0x11000
   10560:	ldr	pc, [ip, #2768]!	; 0xad0

00010564 <__gmon_start__@plt>:
   10564:	add	ip, pc, #0, 12
   10568:	add	ip, ip, #69632	; 0x11000
   1056c:	ldr	pc, [ip, #2760]!	; 0xac8

00010570 <feof@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #69632	; 0x11000
   10578:	ldr	pc, [ip, #2752]!	; 0xac0

0001057c <strlen@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #69632	; 0x11000
   10584:	ldr	pc, [ip, #2744]!	; 0xab8

00010588 <fscanf@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #69632	; 0x11000
   10590:	ldr	pc, [ip, #2736]!	; 0xab0

00010594 <fclose@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #69632	; 0x11000
   1059c:	ldr	pc, [ip, #2728]!	; 0xaa8

000105a0 <abort@plt>:
   105a0:	add	ip, pc, #0, 12
   105a4:	add	ip, ip, #69632	; 0x11000
   105a8:	ldr	pc, [ip, #2720]!	; 0xaa0

Disassembly of section .text:

000105ac <.text>:
   105ac:	bleq	4c6f0 <stdout@@GLIBC_2.4+0x2a694>
   105b0:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   105b4:	strbtmi	fp, [sl], -r2, lsl #24
   105b8:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   105bc:			; <UNDEFINED> instruction: 0xc010f8df
   105c0:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   105c4:	blmi	1225d8 <stdout@@GLIBC_2.4+0x10057c>
   105c8:	svc	0x00c6f7ff
   105cc:	svc	0x00e8f7ff
   105d0:			; <UNDEFINED> instruction: 0x000112b1
   105d4:	andeq	r0, r1, r4, lsr #21
   105d8:	andeq	r1, r1, r1, ror r2
   105dc:	ldr	r3, [pc, #20]	; 105f8 <abort@plt+0x58>
   105e0:	ldr	r2, [pc, #20]	; 105fc <abort@plt+0x5c>
   105e4:	add	r3, pc, r3
   105e8:	ldr	r2, [r3, r2]
   105ec:	cmp	r2, #0
   105f0:	bxeq	lr
   105f4:	b	10564 <__gmon_start__@plt>
   105f8:	andeq	r1, r1, r4, lsl sl
   105fc:	andeq	r0, r0, ip, asr #32
   10600:	subseq	pc, ip, r2, asr #4
   10604:	andeq	pc, r2, r0, asr #5
   10608:	cmpeq	ip, #536870916	; 0x20000004	; <UNPREDICTABLE>
   1060c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10610:	andle	r4, r5, r3, lsl #5
   10614:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10618:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1061c:	ldrmi	fp, [r8, -r3, lsl #2]
   10620:	svclt	0x00004770
   10624:	subseq	pc, ip, r2, asr #4
   10628:	andeq	pc, r2, r0, asr #5
   1062c:	cmpeq	ip, r2, asr #4	; <UNPREDICTABLE>
   10630:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10634:	svceq	0x00d91a0b
   10638:			; <UNDEFINED> instruction: 0x01a3eb01
   1063c:	andle	r1, r5, r9, asr #32
   10640:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10644:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10648:	ldrmi	fp, [r8, -r3, lsl #2]
   1064c:	svclt	0x00004770
   10650:	vqrshl.s8	d27, d0, d2
   10654:	vmls.i<illegal width 8>	d16, d0, d0[4]
   10658:	stmdavc	r3!, {r1, sl}
   1065c:			; <UNDEFINED> instruction: 0xf7ffb91b
   10660:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10664:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10668:	svclt	0x0000e7dc
   1066c:	mov	ip, sp
   10670:	sub	sp, sp, #24
   10674:	str	ip, [sp]
   10678:	str	lr, [sp, #4]
   1067c:	str	r4, [sp, #8]
   10680:	str	r5, [sp, #12]
   10684:	str	r6, [sp, #16]
   10688:	str	r7, [sp, #20]
   1068c:	mov	r5, r0
   10690:	cmp	r5, #0
   10694:	bne	106a0 <abort@plt+0x100>
   10698:	mvn	r0, #0
   1069c:	b	10738 <abort@plt+0x198>
   106a0:	ldr	r0, [r5]
   106a4:	ldr	ip, [r5, #4]
   106a8:	cmp	r0, ip
   106ac:	bne	106b8 <abort@plt+0x118>
   106b0:	mov	r0, #0
   106b4:	b	10738 <abort@plt+0x198>
   106b8:	mov	r0, r2
   106bc:	bl	10f40 <abort@plt+0x9a0>
   106c0:	mov	r4, r0
   106c4:	mov	r6, #0
   106c8:	ldr	r2, [r5]
   106cc:	cmp	r6, r2
   106d0:	bge	106f4 <abort@plt+0x154>
   106d4:	ldr	r2, [r5, #8]
   106d8:	ldr	r0, [r2, r6, lsl #2]
   106dc:	mov	r1, r4
   106e0:	bl	10fac <abort@plt+0xa0c>
   106e4:	cmp	r0, #0
   106e8:	beq	106f4 <abort@plt+0x154>
   106ec:	add	r6, r6, #1
   106f0:	b	106c8 <abort@plt+0x128>
   106f4:	ldr	r7, [r5]
   106f8:	cmp	r7, r6
   106fc:	blt	10720 <abort@plt+0x180>
   10700:	ldr	r3, [r5, #8]
   10704:	lsl	r2, r7, #2
   10708:	add	r1, r3, r2
   1070c:	ldr	r0, [r5, #8]
   10710:	ldr	ip, [r0, r7, lsl #2]
   10714:	str	ip, [r1, #4]
   10718:	sub	r7, r7, #1
   1071c:	b	106f8 <abort@plt+0x158>
   10720:	ldr	r3, [r5, #8]
   10724:	str	r4, [r3, r6, lsl #2]
   10728:	ldr	r1, [r5]
   1072c:	add	ip, r1, #1
   10730:	str	ip, [r5]
   10734:	mov	r0, #1
   10738:	ldr	r4, [sp, #8]
   1073c:	ldr	r5, [sp, #12]
   10740:	ldr	r6, [sp, #16]
   10744:	ldr	r7, [sp, #20]
   10748:	ldr	lr, [sp, #4]
   1074c:	add	sp, sp, #24
   10750:	bx	lr
   10754:	mov	ip, sp
   10758:	sub	sp, sp, #16
   1075c:	str	ip, [sp]
   10760:	str	lr, [sp, #4]
   10764:	str	r4, [sp, #8]
   10768:	cmp	r0, #0
   1076c:	beq	10784 <abort@plt+0x1e4>
   10770:	ldr	r3, [r0]
   10774:	cmp	r3, #0
   10778:	moveq	r2, #1
   1077c:	movne	r2, #0
   10780:	b	10788 <abort@plt+0x1e8>
   10784:	mov	r2, #1
   10788:	cmp	r2, #0
   1078c:	beq	10798 <abort@plt+0x1f8>
   10790:	mov	r0, #0
   10794:	b	107e0 <abort@plt+0x240>
   10798:	ldr	r3, [r0, #8]
   1079c:	ldr	r3, [r3]
   107a0:	mov	ip, #0
   107a4:	ldr	r1, [r0]
   107a8:	cmp	ip, r1
   107ac:	bge	107d0 <abort@plt+0x230>
   107b0:	ldr	r1, [r0, #8]
   107b4:	ldr	r2, [r0, #8]
   107b8:	lsl	r4, ip, #2
   107bc:	add	r2, r2, r4
   107c0:	ldr	r2, [r2, #4]
   107c4:	str	r2, [r1, ip, lsl #2]
   107c8:	add	ip, ip, #1
   107cc:	b	107a4 <abort@plt+0x204>
   107d0:	ldr	r1, [r0]
   107d4:	sub	ip, r1, #1
   107d8:	str	ip, [r0]
   107dc:	ldr	r0, [r3, #4]
   107e0:	ldr	r4, [sp, #8]
   107e4:	ldr	lr, [sp, #4]
   107e8:	add	sp, sp, #16
   107ec:	bx	lr
   107f0:	mov	ip, sp
   107f4:	sub	sp, sp, #280	; 0x118
   107f8:	str	ip, [sp]
   107fc:	str	lr, [sp, #4]
   10800:	str	r4, [sp, #8]
   10804:	str	r5, [sp, #12]
   10808:	mov	r5, r0
   1080c:	mov	r0, r1
   10810:	ldr	r1, [pc, #156]	; 108b4 <abort@plt+0x314>
   10814:	bl	10510 <fopen@plt>
   10818:	mov	r4, r0
   1081c:	cmp	r4, #0
   10820:	bne	10830 <abort@plt+0x290>
   10824:	ldr	r0, [pc, #132]	; 108b0 <abort@plt+0x310>
   10828:	bl	10504 <printf@plt>
   1082c:	b	10898 <abort@plt+0x2f8>
   10830:	mov	r0, r4
   10834:	bl	10570 <feof@plt>
   10838:	cmp	r0, #0
   1083c:	bne	10890 <abort@plt+0x2f0>
   10840:	ldr	r1, [pc, #100]	; 108ac <abort@plt+0x30c>
   10844:	add	r2, sp, #16
   10848:	mov	r0, r4
   1084c:	bl	10588 <fscanf@plt>
   10850:	add	r0, sp, #24
   10854:	mov	r1, #256	; 0x100
   10858:	mov	r2, r4
   1085c:	bl	10534 <fgets@plt>
   10860:	add	r0, sp, #24
   10864:	bl	1057c <strlen@plt>
   10868:	add	r1, sp, #24
   1086c:	add	r0, r1, r0
   10870:	mov	r3, #0
   10874:	sub	lr, r0, #4096	; 0x1000
   10878:	strb	r3, [lr, #4095]	; 0xfff
   1087c:	add	r1, sp, #24
   10880:	ldr	r2, [sp, #16]
   10884:	mov	r0, r5
   10888:	bl	1066c <abort@plt+0xcc>
   1088c:	b	10830 <abort@plt+0x290>
   10890:	mov	r0, r4
   10894:	bl	10594 <fclose@plt>
   10898:	ldr	r4, [sp, #8]
   1089c:	ldr	r5, [sp, #12]
   108a0:	ldr	lr, [sp, #4]
   108a4:	add	sp, sp, #280	; 0x118
   108a8:	bx	lr
   108ac:			; <UNDEFINED> instruction: 0x000115b5
   108b0:			; <UNDEFINED> instruction: 0x000115b9
   108b4:	andeq	r1, r1, r0, asr r3
   108b8:	mov	ip, sp
   108bc:	sub	sp, sp, #24
   108c0:	str	ip, [sp]
   108c4:	str	lr, [sp, #4]
   108c8:	str	r4, [sp, #8]
   108cc:	str	r5, [sp, #12]
   108d0:	str	r6, [sp, #16]
   108d4:	str	r7, [sp, #20]
   108d8:	mov	r7, r1
   108dc:	mov	r6, r0
   108e0:	ldr	r1, [r6]
   108e4:	ldr	r0, [r6, #4]
   108e8:	cmp	r1, r0
   108ec:	bne	108f8 <abort@plt+0x358>
   108f0:	mov	r0, #0
   108f4:	b	10990 <abort@plt+0x3f0>
   108f8:	mov	r1, r2
   108fc:	mov	r0, r3
   10900:	bl	10f40 <abort@plt+0x9a0>
   10904:	mov	r4, r0
   10908:	mov	r5, #0
   1090c:	ldr	r1, [r6]
   10910:	cmp	r5, r1
   10914:	bge	10938 <abort@plt+0x398>
   10918:	ldr	r0, [r6, #8]
   1091c:	ldr	r0, [r0, r5, lsl #2]
   10920:	mov	r1, r4
   10924:	blx	r7
   10928:	cmp	r0, #1
   1092c:	movne	r3, #1
   10930:	moveq	r3, #0
   10934:	b	1093c <abort@plt+0x39c>
   10938:	mov	r3, #0
   1093c:	cmp	r3, #0
   10940:	beq	1094c <abort@plt+0x3ac>
   10944:	add	r5, r5, #1
   10948:	b	1090c <abort@plt+0x36c>
   1094c:	mov	r0, r5
   10950:	cmp	r0, #0
   10954:	ble	10978 <abort@plt+0x3d8>
   10958:	ldr	r1, [r6, #8]
   1095c:	lsl	r2, r0, #2
   10960:	add	r3, r1, r2
   10964:	ldr	ip, [r6, #8]
   10968:	ldr	ip, [ip, r0, lsl #2]
   1096c:	str	ip, [r3, #4]
   10970:	sub	r0, r0, #1
   10974:	b	10950 <abort@plt+0x3b0>
   10978:	ldr	ip, [r6, #8]
   1097c:	str	r4, [ip, r5, lsl #2]
   10980:	ldr	r1, [r6]
   10984:	add	r2, r1, #1
   10988:	str	r2, [r6]
   1098c:	mov	r0, r5
   10990:	ldr	r4, [sp, #8]
   10994:	ldr	r5, [sp, #12]
   10998:	ldr	r6, [sp, #16]
   1099c:	ldr	r7, [sp, #20]
   109a0:	ldr	lr, [sp, #4]
   109a4:	add	sp, sp, #24
   109a8:	bx	lr
   109ac:	mov	ip, sp
   109b0:	sub	sp, sp, #8
   109b4:	str	ip, [sp]
   109b8:	str	lr, [sp, #4]
   109bc:	mov	r0, #0
   109c0:	ldr	lr, [sp, #4]
   109c4:	add	sp, sp, #8
   109c8:	bx	lr
   109cc:	mov	ip, sp
   109d0:	sub	sp, sp, #288	; 0x120
   109d4:	str	ip, [sp]
   109d8:	str	lr, [sp, #4]
   109dc:	str	r4, [sp, #8]
   109e0:	str	r5, [sp, #12]
   109e4:	str	r6, [sp, #16]
   109e8:	mov	r6, r0
   109ec:	mov	r0, r2
   109f0:	mov	r5, r1
   109f4:	ldr	r1, [pc, #164]	; 10aa0 <abort@plt+0x500>
   109f8:	bl	10510 <fopen@plt>
   109fc:	mov	r4, r0
   10a00:	cmp	r4, #0
   10a04:	bne	10a14 <abort@plt+0x474>
   10a08:	ldr	r0, [pc, #140]	; 10a9c <abort@plt+0x4fc>
   10a0c:	bl	10504 <printf@plt>
   10a10:	b	10a80 <abort@plt+0x4e0>
   10a14:	mov	r0, r4
   10a18:	bl	10570 <feof@plt>
   10a1c:	cmp	r0, #0
   10a20:	bne	10a78 <abort@plt+0x4d8>
   10a24:	ldr	r1, [pc, #108]	; 10a98 <abort@plt+0x4f8>
   10a28:	add	r2, sp, #24
   10a2c:	mov	r0, r4
   10a30:	bl	10588 <fscanf@plt>
   10a34:	add	r0, sp, #32
   10a38:	mov	r1, #256	; 0x100
   10a3c:	mov	r2, r4
   10a40:	bl	10534 <fgets@plt>
   10a44:	add	r0, sp, #32
   10a48:	bl	1057c <strlen@plt>
   10a4c:	add	r1, sp, #32
   10a50:	add	r0, r1, r0
   10a54:	mov	r3, #0
   10a58:	sub	lr, r0, #4096	; 0x1000
   10a5c:	strb	r3, [lr, #4095]	; 0xfff
   10a60:	add	r2, sp, #32
   10a64:	ldr	r3, [sp, #24]
   10a68:	mov	r1, r5
   10a6c:	mov	r0, r6
   10a70:	bl	108b8 <abort@plt+0x318>
   10a74:	b	10a14 <abort@plt+0x474>
   10a78:	mov	r0, r4
   10a7c:	bl	10594 <fclose@plt>
   10a80:	ldr	r4, [sp, #8]
   10a84:	ldr	r5, [sp, #12]
   10a88:	ldr	r6, [sp, #16]
   10a8c:	ldr	lr, [sp, #4]
   10a90:	add	sp, sp, #288	; 0x120
   10a94:	bx	lr
   10a98:			; <UNDEFINED> instruction: 0x000115b5
   10a9c:			; <UNDEFINED> instruction: 0x000115b9
   10aa0:	andeq	r1, r1, r0, asr r3
   10aa4:	mov	ip, sp
   10aa8:	sub	sp, sp, #192	; 0xc0
   10aac:	str	ip, [sp]
   10ab0:	str	lr, [sp, #4]
   10ab4:	str	r4, [sp, #8]
   10ab8:	str	r5, [sp, #12]
   10abc:	str	r6, [sp, #16]
   10ac0:	mov	r0, #42	; 0x2a
   10ac4:	bl	10e30 <abort@plt+0x890>
   10ac8:	mov	r4, r0
   10acc:	ldr	r0, [pc, #816]	; 10e04 <abort@plt+0x864>
   10ad0:	bl	10504 <printf@plt>
   10ad4:	ldr	r1, [pc, #776]	; 10de4 <abort@plt+0x844>
   10ad8:	mov	r0, r4
   10adc:	bl	107f0 <abort@plt+0x250>
   10ae0:	ldr	r0, [pc, #756]	; 10ddc <abort@plt+0x83c>
   10ae4:	ldr	r1, [pc, #784]	; 10dfc <abort@plt+0x85c>
   10ae8:	ldr	r1, [r1]
   10aec:	bl	10504 <printf@plt>
   10af0:	mov	r0, r4
   10af4:	bl	11100 <abort@plt+0xb60>
   10af8:	ldr	r2, [r4]
   10afc:	cmp	r2, #42	; 0x2a
   10b00:	beq	10b14 <abort@plt+0x574>
   10b04:	ldr	r0, [pc, #772]	; 10e10 <abort@plt+0x870>
   10b08:	bl	10504 <printf@plt>
   10b0c:	mov	r0, #1
   10b10:	b	10dc4 <abort@plt+0x824>
   10b14:	mov	r0, r4
   10b18:	bl	10754 <abort@plt+0x1b4>
   10b1c:	mov	r1, r0
   10b20:	ldr	r0, [pc, #740]	; 10e0c <abort@plt+0x86c>
   10b24:	bl	104f8 <strcmp@plt>
   10b28:	cmp	r0, #0
   10b2c:	beq	10b40 <abort@plt+0x5a0>
   10b30:	ldr	r0, [pc, #688]	; 10de8 <abort@plt+0x848>
   10b34:	bl	10504 <printf@plt>
   10b38:	mov	r0, #1
   10b3c:	b	10dc4 <abort@plt+0x824>
   10b40:	ldr	r1, [pc, #692]	; 10dfc <abort@plt+0x85c>
   10b44:	mov	r2, #0
   10b48:	str	r2, [r1]
   10b4c:	mov	r0, r4
   10b50:	bl	10754 <abort@plt+0x1b4>
   10b54:	ldr	r0, [pc, #704]	; 10e1c <abort@plt+0x87c>
   10b58:	ldr	r3, [pc, #668]	; 10dfc <abort@plt+0x85c>
   10b5c:	ldr	r1, [r3]
   10b60:	bl	10504 <printf@plt>
   10b64:	ldr	r3, [pc, #656]	; 10dfc <abort@plt+0x85c>
   10b68:	mov	r0, #0
   10b6c:	str	r0, [r3]
   10b70:	ldr	r1, [pc, #684]	; 10e24 <abort@plt+0x884>
   10b74:	mov	r2, #99	; 0x63
   10b78:	mov	r0, r4
   10b7c:	bl	1066c <abort@plt+0xcc>
   10b80:	ldr	r0, [pc, #652]	; 10e14 <abort@plt+0x874>
   10b84:	ldr	r3, [pc, #624]	; 10dfc <abort@plt+0x85c>
   10b88:	ldr	r1, [r3]
   10b8c:	bl	10504 <printf@plt>
   10b90:	mov	r0, r4
   10b94:	bl	10754 <abort@plt+0x1b4>
   10b98:	ldr	r1, [pc, #604]	; 10dfc <abort@plt+0x85c>
   10b9c:	mov	r3, #0
   10ba0:	str	r3, [r1]
   10ba4:	ldr	r1, [pc, #632]	; 10e24 <abort@plt+0x884>
   10ba8:	mov	r2, #0
   10bac:	mov	r0, r4
   10bb0:	bl	1066c <abort@plt+0xcc>
   10bb4:	ldr	r0, [pc, #568]	; 10df4 <abort@plt+0x854>
   10bb8:	ldr	ip, [pc, #572]	; 10dfc <abort@plt+0x85c>
   10bbc:	ldr	r1, [ip]
   10bc0:	bl	10504 <printf@plt>
   10bc4:	mov	r0, r4
   10bc8:	bl	10754 <abort@plt+0x1b4>
   10bcc:	ldr	r0, [pc, #552]	; 10dfc <abort@plt+0x85c>
   10bd0:	mov	ip, #0
   10bd4:	str	ip, [r0]
   10bd8:	ldr	r1, [pc, #580]	; 10e24 <abort@plt+0x884>
   10bdc:	mov	r2, #42	; 0x2a
   10be0:	mov	r0, r4
   10be4:	bl	1066c <abort@plt+0xcc>
   10be8:	ldr	r0, [pc, #496]	; 10de0 <abort@plt+0x840>
   10bec:	ldr	r1, [pc, #520]	; 10dfc <abort@plt+0x85c>
   10bf0:	ldr	r1, [r1]
   10bf4:	bl	10504 <printf@plt>
   10bf8:	ldr	r0, [pc, #496]	; 10df0 <abort@plt+0x850>
   10bfc:	bl	10504 <printf@plt>
   10c00:	mov	r0, #42	; 0x2a
   10c04:	bl	10eb8 <abort@plt+0x918>
   10c08:	mov	r5, r0
   10c0c:	ldr	r4, [pc, #536]	; 10e2c <abort@plt+0x88c>
   10c10:	ldr	r2, [pc, #460]	; 10de4 <abort@plt+0x844>
   10c14:	mov	r1, r4
   10c18:	mov	r0, r5
   10c1c:	bl	109cc <abort@plt+0x42c>
   10c20:	ldr	r0, [pc, #464]	; 10df8 <abort@plt+0x858>
   10c24:	ldr	r2, [pc, #464]	; 10dfc <abort@plt+0x85c>
   10c28:	ldr	r1, [r2]
   10c2c:	bl	10504 <printf@plt>
   10c30:	mov	r0, r5
   10c34:	bl	111b8 <abort@plt+0xc18>
   10c38:	ldr	ip, [r5]
   10c3c:	cmp	ip, #42	; 0x2a
   10c40:	beq	10c54 <abort@plt+0x6b4>
   10c44:	ldr	r0, [pc, #436]	; 10e00 <abort@plt+0x860>
   10c48:	bl	10504 <printf@plt>
   10c4c:	mov	r0, #1
   10c50:	b	10dc4 <abort@plt+0x824>
   10c54:	mov	r1, r4
   10c58:	mov	r0, r5
   10c5c:	bl	109ac <abort@plt+0x40c>
   10c60:	ldr	r1, [pc, #420]	; 10e0c <abort@plt+0x86c>
   10c64:	mov	r3, r0
   10c68:	mov	r0, r1
   10c6c:	mov	r1, r3
   10c70:	bl	104f8 <strcmp@plt>
   10c74:	cmp	r0, #0
   10c78:	beq	10c8c <abort@plt+0x6ec>
   10c7c:	ldr	r0, [pc, #356]	; 10de8 <abort@plt+0x848>
   10c80:	bl	10504 <printf@plt>
   10c84:	mov	r0, #1
   10c88:	b	10dc4 <abort@plt+0x824>
   10c8c:	ldr	r2, [pc, #360]	; 10dfc <abort@plt+0x85c>
   10c90:	mov	r1, #0
   10c94:	str	r1, [r2]
   10c98:	mov	r1, r4
   10c9c:	mov	r0, r5
   10ca0:	bl	109ac <abort@plt+0x40c>
   10ca4:	ldr	r0, [pc, #348]	; 10e08 <abort@plt+0x868>
   10ca8:	ldr	ip, [pc, #332]	; 10dfc <abort@plt+0x85c>
   10cac:	ldr	r1, [ip]
   10cb0:	bl	10504 <printf@plt>
   10cb4:	ldr	ip, [pc, #320]	; 10dfc <abort@plt+0x85c>
   10cb8:	mov	r0, #0
   10cbc:	str	r0, [ip]
   10cc0:	ldr	r2, [pc, #348]	; 10e24 <abort@plt+0x884>
   10cc4:	mov	r3, #99	; 0x63
   10cc8:	mov	r1, r4
   10ccc:	mov	r0, r5
   10cd0:	bl	108b8 <abort@plt+0x318>
   10cd4:	ldr	r0, [pc, #316]	; 10e18 <abort@plt+0x878>
   10cd8:	ldr	r1, [pc, #284]	; 10dfc <abort@plt+0x85c>
   10cdc:	ldr	r1, [r1]
   10ce0:	bl	10504 <printf@plt>
   10ce4:	mov	r1, r4
   10ce8:	mov	r0, r5
   10cec:	bl	109ac <abort@plt+0x40c>
   10cf0:	ldr	ip, [pc, #260]	; 10dfc <abort@plt+0x85c>
   10cf4:	mov	r1, #0
   10cf8:	str	r1, [ip]
   10cfc:	ldr	r2, [pc, #288]	; 10e24 <abort@plt+0x884>
   10d00:	mov	r3, #0
   10d04:	mov	r1, r4
   10d08:	mov	r0, r5
   10d0c:	bl	108b8 <abort@plt+0x318>
   10d10:	ldr	r0, [pc, #212]	; 10dec <abort@plt+0x84c>
   10d14:	ldr	r2, [pc, #224]	; 10dfc <abort@plt+0x85c>
   10d18:	ldr	r1, [r2]
   10d1c:	bl	10504 <printf@plt>
   10d20:	mov	r1, r4
   10d24:	mov	r0, r5
   10d28:	bl	109ac <abort@plt+0x40c>
   10d2c:	ldr	r0, [pc, #200]	; 10dfc <abort@plt+0x85c>
   10d30:	mov	ip, #0
   10d34:	str	ip, [r0]
   10d38:	ldr	r2, [pc, #228]	; 10e24 <abort@plt+0x884>
   10d3c:	mov	r3, #42	; 0x2a
   10d40:	mov	r1, r4
   10d44:	mov	r0, r5
   10d48:	bl	108b8 <abort@plt+0x318>
   10d4c:	ldr	r0, [pc, #140]	; 10de0 <abort@plt+0x840>
   10d50:	ldr	r2, [pc, #164]	; 10dfc <abort@plt+0x85c>
   10d54:	ldr	r1, [r2]
   10d58:	bl	10504 <printf@plt>
   10d5c:	mov	r0, #42	; 0x2a
   10d60:	bl	10eb8 <abort@plt+0x918>
   10d64:	mov	r4, r0
   10d68:	ldr	r5, [pc, #184]	; 10e28 <abort@plt+0x888>
   10d6c:	ldr	r2, [pc, #112]	; 10de4 <abort@plt+0x844>
   10d70:	mov	r1, r5
   10d74:	mov	r0, r4
   10d78:	bl	109cc <abort@plt+0x42c>
   10d7c:	ldr	r0, [pc, #116]	; 10df8 <abort@plt+0x858>
   10d80:	ldr	r2, [pc, #116]	; 10dfc <abort@plt+0x85c>
   10d84:	ldr	r1, [r2]
   10d88:	bl	10504 <printf@plt>
   10d8c:	mov	r6, #0
   10d90:	cmp	r6, #42	; 0x2a
   10d94:	bge	10dc0 <abort@plt+0x820>
   10d98:	mov	r1, r5
   10d9c:	mov	r0, r4
   10da0:	bl	109ac <abort@plt+0x40c>
   10da4:	ldr	r1, [pc, #116]	; 10e20 <abort@plt+0x880>
   10da8:	mov	r2, r0
   10dac:	mov	r0, r1
   10db0:	mov	r1, r2
   10db4:	bl	10504 <printf@plt>
   10db8:	add	r6, r6, #1
   10dbc:	b	10d90 <abort@plt+0x7f0>
   10dc0:	mov	r0, #0
   10dc4:	ldr	r4, [sp, #8]
   10dc8:	ldr	r5, [sp, #12]
   10dcc:	ldr	r6, [sp, #16]
   10dd0:	ldr	lr, [sp, #4]
   10dd4:	add	sp, sp, #192	; 0xc0
   10dd8:	bx	lr
   10ddc:	andeq	r1, r1, r2, asr r3
   10de0:	andeq	r1, r1, r1, asr #8
   10de4:	ldrdeq	r1, [r1], -r9
   10de8:	strdeq	r1, [r1], -ip
   10dec:	andeq	r1, r1, r0, ror #10
   10df0:			; <UNDEFINED> instruction: 0x000113b1
   10df4:	andeq	r1, r1, lr, lsr #9
   10df8:	strdeq	r1, [r1], -r5
   10dfc:	andeq	r2, r2, r8, asr r0
   10e00:	andeq	r1, r1, r9, lsl #7
   10e04:	ldrdeq	r1, [r1], -fp
   10e08:	andeq	r1, r1, ip, lsr #10
   10e0c:	andeq	r1, r1, sl, ror #7
   10e10:	andeq	r1, r1, r7, lsl #9
   10e14:	andeq	r1, r1, fp, asr #12
   10e18:	muleq	r1, r2, r6
   10e1c:	andeq	r1, r1, r7, lsl r6
   10e20:	andeq	r1, r1, r3, lsl r6
   10e24:	andeq	r1, r1, r7, lsr #11
   10e28:	andeq	r1, r1, r4, asr r0
   10e2c:	andeq	r0, r1, ip, lsr #31
   10e30:	mov	ip, sp
   10e34:	sub	sp, sp, #16
   10e38:	str	ip, [sp]
   10e3c:	str	lr, [sp, #4]
   10e40:	str	r4, [sp, #8]
   10e44:	str	r5, [sp, #12]
   10e48:	mov	r5, r0
   10e4c:	mov	r0, #12
   10e50:	bl	1054c <malloc@plt>
   10e54:	mov	r4, r0
   10e58:	cmp	r4, #0
   10e5c:	bne	10e68 <abort@plt+0x8c8>
   10e60:	mov	r0, #0
   10e64:	b	10ea4 <abort@plt+0x904>
   10e68:	mov	r0, #0
   10e6c:	str	r0, [r4]
   10e70:	str	r5, [r4, #4]
   10e74:	mov	r1, #4
   10e78:	mov	r0, r5
   10e7c:	bl	104ec <calloc@plt>
   10e80:	str	r0, [r4, #8]
   10e84:	ldr	r2, [r4, #8]
   10e88:	cmp	r2, #0
   10e8c:	bne	10ea0 <abort@plt+0x900>
   10e90:	mov	r0, r4
   10e94:	bl	10528 <free@plt>
   10e98:	mov	r0, #0
   10e9c:	b	10ea4 <abort@plt+0x904>
   10ea0:	mov	r0, r4
   10ea4:	ldr	r4, [sp, #8]
   10ea8:	ldr	r5, [sp, #12]
   10eac:	ldr	lr, [sp, #4]
   10eb0:	add	sp, sp, #16
   10eb4:	bx	lr
   10eb8:	mov	ip, sp
   10ebc:	sub	sp, sp, #16
   10ec0:	str	ip, [sp]
   10ec4:	str	lr, [sp, #4]
   10ec8:	str	r4, [sp, #8]
   10ecc:	str	r5, [sp, #12]
   10ed0:	mov	r5, r0
   10ed4:	mov	r0, #12
   10ed8:	bl	1054c <malloc@plt>
   10edc:	mov	r4, r0
   10ee0:	cmp	r4, #0
   10ee4:	bne	10ef0 <abort@plt+0x950>
   10ee8:	mov	r0, #0
   10eec:	b	10f2c <abort@plt+0x98c>
   10ef0:	mov	r1, #0
   10ef4:	str	r1, [r4]
   10ef8:	str	r5, [r4, #4]
   10efc:	add	r0, r5, #1
   10f00:	mov	r1, #4
   10f04:	bl	104ec <calloc@plt>
   10f08:	str	r0, [r4, #8]
   10f0c:	ldr	r2, [r4, #8]
   10f10:	cmp	r2, #0
   10f14:	bne	10f28 <abort@plt+0x988>
   10f18:	mov	r0, r4
   10f1c:	bl	10528 <free@plt>
   10f20:	mov	r0, #0
   10f24:	b	10f2c <abort@plt+0x98c>
   10f28:	mov	r0, r4
   10f2c:	ldr	r4, [sp, #8]
   10f30:	ldr	r5, [sp, #12]
   10f34:	ldr	lr, [sp, #4]
   10f38:	add	sp, sp, #16
   10f3c:	bx	lr
   10f40:	mov	ip, sp
   10f44:	sub	sp, sp, #24
   10f48:	str	ip, [sp]
   10f4c:	str	lr, [sp, #4]
   10f50:	str	r4, [sp, #8]
   10f54:	str	r5, [sp, #12]
   10f58:	str	r6, [sp, #16]
   10f5c:	mov	r5, r1
   10f60:	mov	r6, r0
   10f64:	mov	r0, #8
   10f68:	bl	1054c <malloc@plt>
   10f6c:	mov	r4, r0
   10f70:	cmp	r4, #0
   10f74:	bne	10f80 <abort@plt+0x9e0>
   10f78:	mov	r0, #0
   10f7c:	b	10f94 <abort@plt+0x9f4>
   10f80:	mov	r0, r5
   10f84:	bl	10540 <strdup@plt>
   10f88:	str	r0, [r4, #4]
   10f8c:	str	r6, [r4]
   10f90:	mov	r0, r4
   10f94:	ldr	r4, [sp, #8]
   10f98:	ldr	r5, [sp, #12]
   10f9c:	ldr	r6, [sp, #16]
   10fa0:	ldr	lr, [sp, #4]
   10fa4:	add	sp, sp, #24
   10fa8:	bx	lr
   10fac:	mov	ip, sp
   10fb0:	sub	sp, sp, #16
   10fb4:	str	ip, [sp]
   10fb8:	str	lr, [sp, #4]
   10fbc:	str	r4, [sp, #8]
   10fc0:	str	r5, [sp, #12]
   10fc4:	mov	r4, r1
   10fc8:	mov	r5, r0
   10fcc:	cmp	r5, #0
   10fd0:	beq	10fe4 <abort@plt+0xa44>
   10fd4:	cmp	r4, #0
   10fd8:	moveq	r3, #1
   10fdc:	movne	r3, #0
   10fe0:	b	10fe8 <abort@plt+0xa48>
   10fe4:	mov	r3, #1
   10fe8:	cmp	r3, #0
   10fec:	beq	11000 <abort@plt+0xa60>
   10ff0:	ldr	r0, [pc, #84]	; 1104c <abort@plt+0xaac>
   10ff4:	bl	10504 <printf@plt>
   10ff8:	mov	r0, #0
   10ffc:	b	11034 <abort@plt+0xa94>
   11000:	ldr	r2, [pc, #64]	; 11048 <abort@plt+0xaa8>
   11004:	ldr	r0, [r2]
   11008:	bl	1051c <fflush@plt>
   1100c:	ldr	ip, [pc, #60]	; 11050 <abort@plt+0xab0>
   11010:	ldr	r0, [pc, #56]	; 11050 <abort@plt+0xab0>
   11014:	ldr	r3, [r0]
   11018:	add	r2, r3, #1
   1101c:	str	r2, [ip]
   11020:	ldr	r0, [r5]
   11024:	ldr	r1, [r4]
   11028:	cmp	r0, r1
   1102c:	movgt	r0, #1
   11030:	movle	r0, #0
   11034:	ldr	r4, [sp, #8]
   11038:	ldr	r5, [sp, #12]
   1103c:	ldr	lr, [sp, #4]
   11040:	add	sp, sp, #16
   11044:	bx	lr
   11048:	andeq	r2, r2, ip, asr r0
   1104c:	strdeq	r1, [r1], -r2
   11050:	andeq	r2, r2, r8, asr r0
   11054:	mov	ip, sp
   11058:	sub	sp, sp, #16
   1105c:	str	ip, [sp]
   11060:	str	lr, [sp, #4]
   11064:	str	r4, [sp, #8]
   11068:	str	r5, [sp, #12]
   1106c:	mov	r4, r1
   11070:	mov	r5, r0
   11074:	cmp	r5, #0
   11078:	beq	1108c <abort@plt+0xaec>
   1107c:	cmp	r4, #0
   11080:	moveq	r2, #1
   11084:	movne	r2, #0
   11088:	b	11090 <abort@plt+0xaf0>
   1108c:	mov	r2, #1
   11090:	cmp	r2, #0
   11094:	beq	110a8 <abort@plt+0xb08>
   11098:	ldr	r0, [pc, #88]	; 110f8 <abort@plt+0xb58>
   1109c:	bl	10504 <printf@plt>
   110a0:	mov	r0, #0
   110a4:	b	110e0 <abort@plt+0xb40>
   110a8:	ldr	r2, [pc, #68]	; 110f4 <abort@plt+0xb54>
   110ac:	ldr	r0, [r2]
   110b0:	bl	1051c <fflush@plt>
   110b4:	ldr	ip, [pc, #64]	; 110fc <abort@plt+0xb5c>
   110b8:	ldr	r0, [pc, #60]	; 110fc <abort@plt+0xb5c>
   110bc:	ldr	r1, [r0]
   110c0:	add	r3, r1, #1
   110c4:	str	r3, [ip]
   110c8:	ldr	r0, [r5, #4]
   110cc:	ldr	r1, [r4, #4]
   110d0:	bl	104f8 <strcmp@plt>
   110d4:	cmp	r0, #0
   110d8:	movlt	r0, #1
   110dc:	movge	r0, #0
   110e0:	ldr	r4, [sp, #8]
   110e4:	ldr	r5, [sp, #12]
   110e8:	ldr	lr, [sp, #4]
   110ec:	add	sp, sp, #16
   110f0:	bx	lr
   110f4:	andeq	r2, r2, ip, asr r0
   110f8:	strdeq	r1, [r1], -r2
   110fc:	andeq	r2, r2, r8, asr r0
   11100:	mov	ip, sp
   11104:	sub	sp, sp, #16
   11108:	str	ip, [sp]
   1110c:	str	lr, [sp, #4]
   11110:	str	r4, [sp, #8]
   11114:	str	r5, [sp, #12]
   11118:	mov	r4, r0
   1111c:	ldr	r3, [r4]
   11120:	cmp	r3, #0
   11124:	ble	1118c <abort@plt+0xbec>
   11128:	ldr	r0, [pc, #120]	; 111a8 <abort@plt+0xc08>
   1112c:	ldr	r2, [r4, #8]
   11130:	ldr	r1, [r2]
   11134:	ldr	r1, [r1, #4]
   11138:	ldr	r2, [r4, #8]
   1113c:	ldr	ip, [r2]
   11140:	ldr	r2, [ip]
   11144:	bl	10504 <printf@plt>
   11148:	mov	r5, #1
   1114c:	ldr	r2, [r4]
   11150:	cmp	r5, r2
   11154:	bge	11180 <abort@plt+0xbe0>
   11158:	ldr	r0, [pc, #76]	; 111ac <abort@plt+0xc0c>
   1115c:	ldr	r3, [r4, #8]
   11160:	ldr	r1, [r3, r5, lsl #2]
   11164:	ldr	r1, [r1, #4]
   11168:	ldr	r2, [r4, #8]
   1116c:	ldr	r2, [r2, r5, lsl #2]
   11170:	ldr	r2, [r2]
   11174:	bl	10504 <printf@plt>
   11178:	add	r5, r5, #1
   1117c:	b	1114c <abort@plt+0xbac>
   11180:	ldr	r0, [pc, #44]	; 111b4 <abort@plt+0xc14>
   11184:	bl	10504 <printf@plt>
   11188:	b	11194 <abort@plt+0xbf4>
   1118c:	ldr	r0, [pc, #28]	; 111b0 <abort@plt+0xc10>
   11190:	bl	10504 <printf@plt>
   11194:	ldr	r4, [sp, #8]
   11198:	ldr	r5, [sp, #12]
   1119c:	ldr	lr, [sp, #4]
   111a0:	add	sp, sp, #16
   111a4:	bx	lr
   111a8:	andeq	r1, r1, r8, lsl r7
   111ac:	andeq	r1, r1, r3, ror #13
   111b0:	andeq	r1, r1, r0, lsl #14
   111b4:	strdeq	r1, [r1], -lr
   111b8:	mov	ip, sp
   111bc:	sub	sp, sp, #16
   111c0:	str	ip, [sp]
   111c4:	str	lr, [sp, #4]
   111c8:	str	r4, [sp, #8]
   111cc:	str	r5, [sp, #12]
   111d0:	mov	r4, r0
   111d4:	ldr	r3, [r4]
   111d8:	cmp	r3, #0
   111dc:	ble	11244 <abort@plt+0xca4>
   111e0:	ldr	r0, [pc, #120]	; 11260 <abort@plt+0xcc0>
   111e4:	ldr	r2, [r4, #8]
   111e8:	ldr	r1, [r2, #4]
   111ec:	ldr	r1, [r1, #4]
   111f0:	ldr	r2, [r4, #8]
   111f4:	ldr	ip, [r2, #4]
   111f8:	ldr	r2, [ip]
   111fc:	bl	10504 <printf@plt>
   11200:	mov	r5, #2
   11204:	ldr	r2, [r4]
   11208:	cmp	r5, r2
   1120c:	bge	11238 <abort@plt+0xc98>
   11210:	ldr	r0, [pc, #76]	; 11264 <abort@plt+0xcc4>
   11214:	ldr	r3, [r4, #8]
   11218:	ldr	r1, [r3, r5, lsl #2]
   1121c:	ldr	r1, [r1, #4]
   11220:	ldr	r2, [r4, #8]
   11224:	ldr	r2, [r2, r5, lsl #2]
   11228:	ldr	r2, [r2]
   1122c:	bl	10504 <printf@plt>
   11230:	add	r5, r5, #1
   11234:	b	11204 <abort@plt+0xc64>
   11238:	ldr	r0, [pc, #44]	; 1126c <abort@plt+0xccc>
   1123c:	bl	10504 <printf@plt>
   11240:	b	1124c <abort@plt+0xcac>
   11244:	ldr	r0, [pc, #28]	; 11268 <abort@plt+0xcc8>
   11248:	bl	10504 <printf@plt>
   1124c:	ldr	r4, [sp, #8]
   11250:	ldr	r5, [sp, #12]
   11254:	ldr	lr, [sp, #4]
   11258:	add	sp, sp, #16
   1125c:	bx	lr
   11260:	andeq	r1, r1, r8, lsl r7
   11264:	andeq	r1, r1, r3, ror #13
   11268:	andeq	r1, r1, r0, lsl #14
   1126c:	strdeq	r1, [r1], -lr
   11270:	mvnsmi	lr, #737280	; 0xb4000
   11274:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   11278:	strmi	r4, [r8], ip, lsl #26
   1127c:			; <UNDEFINED> instruction: 0x4691447e
   11280:			; <UNDEFINED> instruction: 0xf7ff447d
   11284:	blne	1dcb71c <stdout@@GLIBC_2.4+0x1da96c0>
   11288:	strhle	r1, [sl], -r6
   1128c:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   11290:	svccc	0x0004f855
   11294:	strbmi	r4, [r1], -sl, asr #12
   11298:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   1129c:	adcmi	r4, r6, #152, 14	; 0x2600000
   112a0:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   112a4:	svclt	0x000083f8
   112a8:	muleq	r1, r4, ip
   112ac:	andeq	r0, r1, ip, lsl #25
   112b0:	svclt	0x00004770

Disassembly of section .fini:

000112b4 <.fini>:
   112b4:	push	{r3, lr}
   112b8:	pop	{r3, pc}
