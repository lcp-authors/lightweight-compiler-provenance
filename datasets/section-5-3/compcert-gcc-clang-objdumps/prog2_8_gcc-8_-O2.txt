
../compcert-repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a80 <.init>:
   10a80:	push	{r3, lr}
   10a84:	bl	10c10 <_start@@Base+0x3c>
   10a88:	pop	{r3, pc}

Disassembly of section .plt:

00010a8c <calloc@plt-0x14>:
   10a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a90:	ldr	lr, [pc, #4]	; 10a9c <calloc@plt-0x4>
   10a94:	add	lr, pc, lr
   10a98:	ldr	pc, [lr, #8]!
   10a9c:	andeq	r2, r1, r4, ror #10

00010aa0 <calloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1380]!	; 0x564

00010aac <printf@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ab8 <free@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1364]!	; 0x554

00010ac4 <realloc@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad0 <puts@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1348]!	; 0x544

00010adc <malloc@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ae8 <__libc_start_main@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1332]!	; 0x534

00010af4 <__gmon_start__@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1324]!	; 0x52c

00010b00 <setvbuf@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1316]!	; 0x524

00010b0c <putchar@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1308]!	; 0x51c

00010b18 <abort@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1300]!	; 0x514

Disassembly of section .text:

00010b24 <main@@Base>:
   10b24:	mov	r3, #0
   10b28:	movw	r1, #12364	; 0x304c
   10b2c:	movt	r1, #2
   10b30:	mov	r2, #2
   10b34:	str	r4, [sp, #-8]!
   10b38:	ldr	r0, [r1]
   10b3c:	mov	r1, r3
   10b40:	str	lr, [sp, #4]
   10b44:	bl	10b00 <setvbuf@plt>
   10b48:	mov	r3, #0
   10b4c:	movw	r1, #12360	; 0x3048
   10b50:	movt	r1, #2
   10b54:	mov	r2, #2
   10b58:	ldr	r0, [r1]
   10b5c:	mov	r1, r3
   10b60:	bl	10b00 <setvbuf@plt>
   10b64:	bl	10e28 <teste_grafo_novo@@Base>
   10b68:	mov	r4, r0
   10b6c:	bl	10f20 <teste_grafo_aresta@@Base>
   10b70:	add	r4, r4, r0
   10b74:	bl	110c8 <teste_grafo_adiciona@@Base>
   10b78:	add	r4, r4, r0
   10b7c:	bl	112e0 <teste_grafo_remove@@Base>
   10b80:	add	r4, r4, r0
   10b84:	bl	11494 <teste_v_sucessores@@Base>
   10b88:	add	r4, r4, r0
   10b8c:	bl	11678 <teste_v_antecessores@@Base>
   10b90:	add	r4, r4, r0
   10b94:	bl	11858 <teste_v_grau@@Base>
   10b98:	add	r4, r4, r0
   10b9c:	bl	119c4 <teste_v_celebridade@@Base>
   10ba0:	adds	r1, r4, r0
   10ba4:	bne	10bc4 <main@@Base+0xa0>
   10ba8:	movw	r0, #11096	; 0x2b58
   10bac:	movt	r0, #1
   10bb0:	bl	10ad0 <puts@plt>
   10bb4:	ldr	r4, [sp]
   10bb8:	add	sp, sp, #4
   10bbc:	mov	r0, #0
   10bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10bc4:	movw	r0, #11120	; 0x2b70
   10bc8:	movt	r0, #1
   10bcc:	bl	10aac <printf@plt>
   10bd0:	b	10bb4 <main@@Base+0x90>

00010bd4 <_start@@Base>:
   10bd4:	mov	fp, #0
   10bd8:	mov	lr, #0
   10bdc:	pop	{r1}		; (ldr r1, [sp], #4)
   10be0:	mov	r2, sp
   10be4:	push	{r2}		; (str r2, [sp, #-4]!)
   10be8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bec:	ldr	ip, [pc, #16]	; 10c04 <_start@@Base+0x30>
   10bf0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf4:	ldr	r0, [pc, #12]	; 10c08 <_start@@Base+0x34>
   10bf8:	ldr	r3, [pc, #12]	; 10c0c <_start@@Base+0x38>
   10bfc:	bl	10ae8 <__libc_start_main@plt>
   10c00:	bl	10b18 <abort@plt>
   10c04:	andeq	r2, r1, r4, ror r4
   10c08:	andeq	r0, r1, r4, lsr #22
   10c0c:	andeq	r2, r1, r4, lsl r4
   10c10:	ldr	r3, [pc, #20]	; 10c2c <_start@@Base+0x58>
   10c14:	ldr	r2, [pc, #20]	; 10c30 <_start@@Base+0x5c>
   10c18:	add	r3, pc, r3
   10c1c:	ldr	r2, [r3, r2]
   10c20:	cmp	r2, #0
   10c24:	bxeq	lr
   10c28:	b	10af4 <__gmon_start__@plt>
   10c2c:	andeq	r2, r1, r0, ror #7
   10c30:	andeq	r0, r0, r8, lsr r0
   10c34:	ldr	r0, [pc, #24]	; 10c54 <_start@@Base+0x80>
   10c38:	ldr	r3, [pc, #24]	; 10c58 <_start@@Base+0x84>
   10c3c:	cmp	r3, r0
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <_start@@Base+0x88>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	andeq	r3, r2, r4, asr #32
   10c58:	andeq	r3, r2, r4, asr #32
   10c5c:	andeq	r0, r0, r0
   10c60:	ldr	r0, [pc, #36]	; 10c8c <_start@@Base+0xb8>
   10c64:	ldr	r1, [pc, #36]	; 10c90 <_start@@Base+0xbc>
   10c68:	sub	r1, r1, r0
   10c6c:	asr	r1, r1, #2
   10c70:	add	r1, r1, r1, lsr #31
   10c74:	asrs	r1, r1, #1
   10c78:	bxeq	lr
   10c7c:	ldr	r3, [pc, #16]	; 10c94 <_start@@Base+0xc0>
   10c80:	cmp	r3, #0
   10c84:	bxeq	lr
   10c88:	bx	r3
   10c8c:	andeq	r3, r2, r4, asr #32
   10c90:	andeq	r3, r2, r4, asr #32
   10c94:	andeq	r0, r0, r0
   10c98:	push	{r4, lr}
   10c9c:	ldr	r4, [pc, #24]	; 10cbc <_start@@Base+0xe8>
   10ca0:	ldrb	r3, [r4]
   10ca4:	cmp	r3, #0
   10ca8:	popne	{r4, pc}
   10cac:	bl	10c34 <_start@@Base+0x60>
   10cb0:	mov	r3, #1
   10cb4:	strb	r3, [r4]
   10cb8:	pop	{r4, pc}
   10cbc:	andeq	r3, r2, r0, asr r0
   10cc0:	b	10c60 <_start@@Base+0x8c>
   10cc4:	ldr	r3, [r0]
   10cc8:	cmp	r3, #0
   10ccc:	ble	10d38 <_start@@Base+0x164>
   10cd0:	strd	r4, [sp, #-16]!
   10cd4:	mov	r5, r0
   10cd8:	mov	r4, #0
   10cdc:	str	r6, [sp, #8]
   10ce0:	mov	r6, r1
   10ce4:	str	lr, [sp, #12]
   10ce8:	b	10cf8 <_start@@Base+0x124>
   10cec:	ldr	r3, [r5]
   10cf0:	cmp	r4, r3
   10cf4:	bge	10d24 <_start@@Base+0x150>
   10cf8:	mov	r1, r4
   10cfc:	mov	r0, r5
   10d00:	bl	121c8 <vetor_elemento@@Base>
   10d04:	cmp	r0, r6
   10d08:	add	r4, r4, #1
   10d0c:	bne	10cec <_start@@Base+0x118>
   10d10:	ldrd	r4, [sp]
   10d14:	mov	r0, #1
   10d18:	ldr	r6, [sp, #8]
   10d1c:	add	sp, sp, #12
   10d20:	pop	{pc}		; (ldr pc, [sp], #4)
   10d24:	ldrd	r4, [sp]
   10d28:	mov	r0, #0
   10d2c:	ldr	r6, [sp, #8]
   10d30:	add	sp, sp, #12
   10d34:	pop	{pc}		; (ldr pc, [sp], #4)
   10d38:	mov	r0, #0
   10d3c:	bx	lr

00010d40 <_g@@Base>:
   10d40:	push	{r1, r2, r3}
   10d44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10d48:	strd	r6, [sp, #8]
   10d4c:	mov	r7, r0
   10d50:	mov	r0, #8
   10d54:	strd	r8, [sp, #16]
   10d58:	str	sl, [sp, #24]
   10d5c:	str	lr, [sp, #28]
   10d60:	sub	sp, sp, #12
   10d64:	ldr	r5, [sp, #44]	; 0x2c
   10d68:	bl	10adc <malloc@plt>
   10d6c:	add	r3, sp, #48	; 0x30
   10d70:	mov	r6, r0
   10d74:	mov	r1, #8
   10d78:	mov	r0, r7
   10d7c:	str	r3, [sp, #4]
   10d80:	bl	10aa0 <calloc@plt>
   10d84:	cmp	r5, #0
   10d88:	str	r0, [r6, #4]
   10d8c:	ble	10dec <_g@@Base+0xac>
   10d90:	sub	r5, r5, #1
   10d94:	mov	r8, r0
   10d98:	bic	r5, r5, #1
   10d9c:	mov	r9, #0
   10da0:	add	r5, r5, #2
   10da4:	ldr	r3, [sp, #4]
   10da8:	mov	r1, #8
   10dac:	mov	r0, #1
   10db0:	add	r9, r9, #2
   10db4:	ldr	sl, [r3, #4]
   10db8:	ldr	r4, [r3], #8
   10dbc:	str	r3, [sp, #4]
   10dc0:	bl	10aa0 <calloc@plt>
   10dc4:	add	r2, r8, r4, lsl #3
   10dc8:	ldr	r3, [r8, r4, lsl #3]
   10dcc:	cmp	r9, r5
   10dd0:	str	sl, [r0]
   10dd4:	ldr	r1, [r2, #4]
   10dd8:	str	r0, [r2, #4]
   10ddc:	add	r3, r3, #1
   10de0:	str	r3, [r8, r4, lsl #3]
   10de4:	str	r1, [r0, #4]
   10de8:	bne	10da4 <_g@@Base+0x64>
   10dec:	mov	r0, r6
   10df0:	str	r7, [r6]
   10df4:	add	sp, sp, #12
   10df8:	ldrd	r4, [sp]
   10dfc:	ldrd	r6, [sp, #8]
   10e00:	ldrd	r8, [sp, #16]
   10e04:	ldr	sl, [sp, #24]
   10e08:	ldr	lr, [sp, #28]
   10e0c:	add	sp, sp, #32
   10e10:	add	sp, sp, #12
   10e14:	bx	lr

00010e18 <_f@@Base>:
   10e18:	cmp	r0, #0
   10e1c:	beq	10e24 <_f@@Base+0xc>
   10e20:	b	10cc4 <_start@@Base+0xf0>
   10e24:	bx	lr

00010e28 <teste_grafo_novo@@Base>:
   10e28:	movw	r0, #9348	; 0x2484
   10e2c:	movt	r0, #1
   10e30:	strd	r4, [sp, #-16]!
   10e34:	str	r6, [sp, #8]
   10e38:	str	lr, [sp, #12]
   10e3c:	bl	10aac <printf@plt>
   10e40:	mov	r0, #10
   10e44:	bl	11c84 <grafo_novo@@Base>
   10e48:	subs	r5, r0, #0
   10e4c:	beq	10ee8 <teste_grafo_novo@@Base+0xc0>
   10e50:	ldr	r3, [r5]
   10e54:	cmp	r3, #10
   10e58:	moveq	r4, #0
   10e5c:	bne	10eb0 <teste_grafo_novo@@Base+0x88>
   10e60:	mov	r0, r5
   10e64:	bl	11cf0 <grafo_apaga@@Base>
   10e68:	mov	r0, #1
   10e6c:	bl	11c84 <grafo_novo@@Base>
   10e70:	subs	r5, r0, #0
   10e74:	beq	10f04 <teste_grafo_novo@@Base+0xdc>
   10e78:	ldr	r3, [r5]
   10e7c:	cmp	r3, #1
   10e80:	bne	10ec4 <teste_grafo_novo@@Base+0x9c>
   10e84:	bl	11cf0 <grafo_apaga@@Base>
   10e88:	cmp	r4, #0
   10e8c:	bne	10edc <teste_grafo_novo@@Base+0xb4>
   10e90:	movw	r0, #9460	; 0x24f4
   10e94:	movt	r0, #1
   10e98:	bl	10ad0 <puts@plt>
   10e9c:	mov	r0, r4
   10ea0:	ldrd	r4, [sp]
   10ea4:	ldr	r6, [sp, #8]
   10ea8:	add	sp, sp, #12
   10eac:	pop	{pc}		; (ldr pc, [sp], #4)
   10eb0:	movw	r0, #9388	; 0x24ac
   10eb4:	movt	r0, #1
   10eb8:	bl	10aac <printf@plt>
   10ebc:	mov	r4, #1
   10ec0:	b	10e60 <teste_grafo_novo@@Base+0x38>
   10ec4:	movw	r0, #9424	; 0x24d0
   10ec8:	movt	r0, #1
   10ecc:	bl	10aac <printf@plt>
   10ed0:	mov	r0, r5
   10ed4:	add	r4, r4, #1
   10ed8:	bl	11cf0 <grafo_apaga@@Base>
   10edc:	mov	r0, #10
   10ee0:	bl	10b0c <putchar@plt>
   10ee4:	b	10e9c <teste_grafo_novo@@Base+0x74>
   10ee8:	movw	r0, #9364	; 0x2494
   10eec:	movt	r0, #1
   10ef0:	bl	10aac <printf@plt>
   10ef4:	mov	r0, #10
   10ef8:	mov	r4, #1
   10efc:	bl	10b0c <putchar@plt>
   10f00:	b	10e9c <teste_grafo_novo@@Base+0x74>
   10f04:	movw	r0, #9364	; 0x2494
   10f08:	movt	r0, #1
   10f0c:	bl	10aac <printf@plt>
   10f10:	mov	r0, #10
   10f14:	add	r4, r4, #1
   10f18:	bl	10b0c <putchar@plt>
   10f1c:	b	10e9c <teste_grafo_novo@@Base+0x74>

00010f20 <teste_grafo_aresta@@Base>:
   10f20:	mov	r0, #7
   10f24:	mov	r2, #2
   10f28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f2c:	mov	r5, #4
   10f30:	mov	r4, #0
   10f34:	strd	r6, [sp, #8]
   10f38:	str	r8, [sp, #16]
   10f3c:	mov	r8, #5
   10f40:	mov	ip, #6
   10f44:	str	lr, [sp, #20]
   10f48:	sub	sp, sp, #80	; 0x50
   10f4c:	mov	lr, #3
   10f50:	mov	r7, #1
   10f54:	mov	r3, r2
   10f58:	mov	r1, #22
   10f5c:	stm	sp, {r0, r2, r4}
   10f60:	str	r2, [sp, #12]
   10f64:	mov	r2, lr
   10f68:	str	r0, [sp, #16]
   10f6c:	str	r8, [sp, #20]
   10f70:	str	r8, [sp, #24]
   10f74:	str	r5, [sp, #28]
   10f78:	str	r5, [sp, #32]
   10f7c:	strd	r4, [sp, #36]	; 0x24
   10f80:	str	r0, [sp, #56]	; 0x38
   10f84:	mov	r0, #8
   10f88:	str	ip, [sp, #44]	; 0x2c
   10f8c:	str	r7, [sp, #48]	; 0x30
   10f90:	str	r7, [sp, #52]	; 0x34
   10f94:	str	ip, [sp, #60]	; 0x3c
   10f98:	str	ip, [sp, #64]	; 0x40
   10f9c:	str	lr, [sp, #68]	; 0x44
   10fa0:	str	r4, [sp, #72]	; 0x48
   10fa4:	str	r7, [sp, #76]	; 0x4c
   10fa8:	bl	10d40 <_g@@Base>
   10fac:	mov	r6, r0
   10fb0:	movw	r0, #9464	; 0x24f8
   10fb4:	movt	r0, #1
   10fb8:	bl	10aac <printf@plt>
   10fbc:	mov	r2, r5
   10fc0:	mov	r1, r8
   10fc4:	mov	r0, r6
   10fc8:	bl	11d74 <grafo_aresta@@Base>
   10fcc:	cmp	r0, r7
   10fd0:	beq	10fe4 <teste_grafo_aresta@@Base+0xc4>
   10fd4:	movw	r0, #9484	; 0x250c
   10fd8:	movt	r0, #1
   10fdc:	mov	r4, r7
   10fe0:	bl	10aac <printf@plt>
   10fe4:	mov	r2, #6
   10fe8:	mov	r1, #7
   10fec:	mov	r0, r6
   10ff0:	bl	11d74 <grafo_aresta@@Base>
   10ff4:	cmp	r0, #1
   10ff8:	beq	1100c <teste_grafo_aresta@@Base+0xec>
   10ffc:	movw	r0, #9484	; 0x250c
   11000:	movt	r0, #1
   11004:	add	r4, r4, #1
   11008:	bl	10aac <printf@plt>
   1100c:	mov	r2, #1
   11010:	mov	r1, #7
   11014:	mov	r0, r6
   11018:	bl	11d74 <grafo_aresta@@Base>
   1101c:	cmp	r0, #0
   11020:	bne	11070 <teste_grafo_aresta@@Base+0x150>
   11024:	mov	r2, #7
   11028:	mov	r1, #2
   1102c:	bl	11d74 <grafo_aresta@@Base>
   11030:	cmn	r0, #1
   11034:	bne	11098 <teste_grafo_aresta@@Base+0x178>
   11038:	mov	r0, r6
   1103c:	bl	11cf0 <grafo_apaga@@Base>
   11040:	cmp	r4, #0
   11044:	bne	110b0 <teste_grafo_aresta@@Base+0x190>
   11048:	movw	r0, #9460	; 0x24f4
   1104c:	movt	r0, #1
   11050:	bl	10ad0 <puts@plt>
   11054:	mov	r0, r4
   11058:	add	sp, sp, #80	; 0x50
   1105c:	ldrd	r4, [sp]
   11060:	ldrd	r6, [sp, #8]
   11064:	ldr	r8, [sp, #16]
   11068:	add	sp, sp, #20
   1106c:	pop	{pc}		; (ldr pc, [sp], #4)
   11070:	movw	r0, #9540	; 0x2544
   11074:	movt	r0, #1
   11078:	bl	10aac <printf@plt>
   1107c:	mov	r2, #7
   11080:	mov	r1, #2
   11084:	mov	r0, #0
   11088:	add	r4, r4, #1
   1108c:	bl	11d74 <grafo_aresta@@Base>
   11090:	cmn	r0, #1
   11094:	beq	110bc <teste_grafo_aresta@@Base+0x19c>
   11098:	movw	r0, #9600	; 0x2580
   1109c:	movt	r0, #1
   110a0:	bl	10aac <printf@plt>
   110a4:	mov	r0, r6
   110a8:	add	r4, r4, #1
   110ac:	bl	11cf0 <grafo_apaga@@Base>
   110b0:	mov	r0, #10
   110b4:	bl	10b0c <putchar@plt>
   110b8:	b	11054 <teste_grafo_aresta@@Base+0x134>
   110bc:	mov	r0, r6
   110c0:	bl	11cf0 <grafo_apaga@@Base>
   110c4:	b	110b0 <teste_grafo_aresta@@Base+0x190>

000110c8 <teste_grafo_adiciona@@Base>:
   110c8:	strd	r4, [sp, #-16]!
   110cc:	mov	r4, #2
   110d0:	mov	r2, #3
   110d4:	str	r6, [sp, #8]
   110d8:	mov	r6, #7
   110dc:	mov	r3, r4
   110e0:	str	lr, [sp, #12]
   110e4:	sub	sp, sp, #8
   110e8:	mov	r1, #4
   110ec:	mov	r0, #9
   110f0:	str	r6, [sp]
   110f4:	str	r4, [sp, #4]
   110f8:	bl	10d40 <_g@@Base>
   110fc:	mov	r5, r0
   11100:	movw	r0, #9656	; 0x25b8
   11104:	movt	r0, #1
   11108:	bl	10aac <printf@plt>
   1110c:	mov	r1, r4
   11110:	mov	r2, r6
   11114:	mov	r0, r5
   11118:	bl	11ddc <grafo_adiciona@@Base>
   1111c:	cmp	r0, #1
   11120:	moveq	r4, #0
   11124:	beq	11138 <teste_grafo_adiciona@@Base+0x70>
   11128:	movw	r0, #9676	; 0x25cc
   1112c:	movt	r0, #1
   11130:	mov	r4, #1
   11134:	bl	10aac <printf@plt>
   11138:	ldr	r3, [r5, #4]
   1113c:	ldr	r3, [r3, #20]
   11140:	cmp	r3, #0
   11144:	beq	11154 <teste_grafo_adiciona@@Base+0x8c>
   11148:	ldr	r3, [r3]
   1114c:	cmp	r3, #7
   11150:	beq	11164 <teste_grafo_adiciona@@Base+0x9c>
   11154:	movw	r0, #9736	; 0x2608
   11158:	movt	r0, #1
   1115c:	add	r4, r4, #1
   11160:	bl	10aac <printf@plt>
   11164:	mov	r2, #8
   11168:	mov	r1, #3
   1116c:	mov	r0, r5
   11170:	bl	11ddc <grafo_adiciona@@Base>
   11174:	cmp	r0, #1
   11178:	beq	1118c <teste_grafo_adiciona@@Base+0xc4>
   1117c:	movw	r0, #9676	; 0x25cc
   11180:	movt	r0, #1
   11184:	add	r4, r4, #1
   11188:	bl	10aac <printf@plt>
   1118c:	ldr	r3, [r5, #4]
   11190:	ldr	r3, [r3, #28]
   11194:	cmp	r3, #0
   11198:	beq	111b4 <teste_grafo_adiciona@@Base+0xec>
   1119c:	ldr	r2, [r3, #4]
   111a0:	cmp	r2, #0
   111a4:	beq	111b4 <teste_grafo_adiciona@@Base+0xec>
   111a8:	ldr	r1, [r2, #4]
   111ac:	cmp	r1, #0
   111b0:	beq	112a0 <teste_grafo_adiciona@@Base+0x1d8>
   111b4:	movw	r0, #9784	; 0x2638
   111b8:	movt	r0, #1
   111bc:	add	r4, r4, #1
   111c0:	bl	10aac <printf@plt>
   111c4:	mov	r2, #7
   111c8:	mov	r1, #2
   111cc:	mov	r0, r5
   111d0:	bl	11ddc <grafo_adiciona@@Base>
   111d4:	cmp	r0, #0
   111d8:	bne	1128c <teste_grafo_adiciona@@Base+0x1c4>
   111dc:	mov	r2, #7
   111e0:	mov	r1, #22
   111e4:	mov	r0, r5
   111e8:	bl	11ddc <grafo_adiciona@@Base>
   111ec:	cmn	r0, #1
   111f0:	bne	11240 <teste_grafo_adiciona@@Base+0x178>
   111f4:	mov	r2, #7
   111f8:	mov	r1, #2
   111fc:	mov	r0, #0
   11200:	bl	11ddc <grafo_adiciona@@Base>
   11204:	cmn	r0, #1
   11208:	bne	11268 <teste_grafo_adiciona@@Base+0x1a0>
   1120c:	mov	r0, r5
   11210:	bl	11cf0 <grafo_apaga@@Base>
   11214:	cmp	r4, #0
   11218:	bne	11280 <teste_grafo_adiciona@@Base+0x1b8>
   1121c:	movw	r0, #9460	; 0x24f4
   11220:	movt	r0, #1
   11224:	bl	10ad0 <puts@plt>
   11228:	mov	r0, r4
   1122c:	add	sp, sp, #8
   11230:	ldrd	r4, [sp]
   11234:	ldr	r6, [sp, #8]
   11238:	add	sp, sp, #12
   1123c:	pop	{pc}		; (ldr pc, [sp], #4)
   11240:	movw	r0, #9900	; 0x26ac
   11244:	movt	r0, #1
   11248:	bl	10aac <printf@plt>
   1124c:	mov	r2, #7
   11250:	mov	r1, #2
   11254:	mov	r0, #0
   11258:	add	r4, r4, #1
   1125c:	bl	11ddc <grafo_adiciona@@Base>
   11260:	cmn	r0, #1
   11264:	beq	112d4 <teste_grafo_adiciona@@Base+0x20c>
   11268:	movw	r0, #9956	; 0x26e4
   1126c:	movt	r0, #1
   11270:	bl	10aac <printf@plt>
   11274:	mov	r0, r5
   11278:	add	r4, r4, #1
   1127c:	bl	11cf0 <grafo_apaga@@Base>
   11280:	mov	r0, #10
   11284:	bl	10b0c <putchar@plt>
   11288:	b	11228 <teste_grafo_adiciona@@Base+0x160>
   1128c:	movw	r0, #9844	; 0x2674
   11290:	movt	r0, #1
   11294:	add	r4, r4, #1
   11298:	bl	10aac <printf@plt>
   1129c:	b	111dc <teste_grafo_adiciona@@Base+0x114>
   112a0:	ldr	r3, [r3]
   112a4:	cmp	r3, #2
   112a8:	beq	112c4 <teste_grafo_adiciona@@Base+0x1fc>
   112ac:	cmp	r3, #8
   112b0:	bne	111b4 <teste_grafo_adiciona@@Base+0xec>
   112b4:	ldr	r3, [r2]
   112b8:	cmp	r3, #2
   112bc:	bne	111b4 <teste_grafo_adiciona@@Base+0xec>
   112c0:	b	111c4 <teste_grafo_adiciona@@Base+0xfc>
   112c4:	ldr	r3, [r2]
   112c8:	cmp	r3, #8
   112cc:	bne	111b4 <teste_grafo_adiciona@@Base+0xec>
   112d0:	b	111c4 <teste_grafo_adiciona@@Base+0xfc>
   112d4:	mov	r0, r5
   112d8:	bl	11cf0 <grafo_apaga@@Base>
   112dc:	b	11280 <teste_grafo_adiciona@@Base+0x1b8>

000112e0 <teste_grafo_remove@@Base>:
   112e0:	mov	r0, #2
   112e4:	strd	r4, [sp, #-16]!
   112e8:	mov	r4, #1
   112ec:	str	r6, [sp, #8]
   112f0:	mov	r6, #7
   112f4:	mov	r3, r0
   112f8:	str	lr, [sp, #12]
   112fc:	sub	sp, sp, #16
   11300:	mov	r2, #3
   11304:	mov	r1, #6
   11308:	str	r6, [sp]
   1130c:	stmib	sp, {r0, r6}
   11310:	mov	r0, #9
   11314:	str	r4, [sp, #12]
   11318:	bl	10d40 <_g@@Base>
   1131c:	mov	r5, r0
   11320:	movw	r0, #10012	; 0x271c
   11324:	movt	r0, #1
   11328:	bl	10aac <printf@plt>
   1132c:	mov	r2, r4
   11330:	mov	r1, r6
   11334:	mov	r0, r5
   11338:	bl	11ea4 <grafo_remove@@Base>
   1133c:	cmp	r0, r4
   11340:	moveq	r4, #0
   11344:	beq	11354 <teste_grafo_remove@@Base+0x74>
   11348:	movw	r0, #10032	; 0x2730
   1134c:	movt	r0, #1
   11350:	bl	10aac <printf@plt>
   11354:	ldr	r3, [r5, #4]
   11358:	ldr	r3, [r3, #60]	; 0x3c
   1135c:	cmp	r3, #0
   11360:	beq	11370 <teste_grafo_remove@@Base+0x90>
   11364:	ldr	r2, [r3, #4]
   11368:	cmp	r2, #0
   1136c:	beq	11478 <teste_grafo_remove@@Base+0x198>
   11370:	movw	r0, #10092	; 0x276c
   11374:	movt	r0, #1
   11378:	add	r4, r4, #1
   1137c:	bl	10aac <printf@plt>
   11380:	mov	r2, #2
   11384:	mov	r1, #7
   11388:	mov	r0, r5
   1138c:	bl	11ea4 <grafo_remove@@Base>
   11390:	cmp	r0, #1
   11394:	beq	113a8 <teste_grafo_remove@@Base+0xc8>
   11398:	movw	r0, #10032	; 0x2730
   1139c:	movt	r0, #1
   113a0:	add	r4, r4, #1
   113a4:	bl	10aac <printf@plt>
   113a8:	ldr	r3, [r5, #4]
   113ac:	ldr	r3, [r3, #60]	; 0x3c
   113b0:	cmp	r3, #0
   113b4:	beq	113c8 <teste_grafo_remove@@Base+0xe8>
   113b8:	movw	r0, #10092	; 0x276c
   113bc:	movt	r0, #1
   113c0:	add	r4, r4, #1
   113c4:	bl	10aac <printf@plt>
   113c8:	mov	r2, #0
   113cc:	mov	r1, #4
   113d0:	mov	r0, r5
   113d4:	bl	11ea4 <grafo_remove@@Base>
   113d8:	cmp	r0, #0
   113dc:	bne	1142c <teste_grafo_remove@@Base+0x14c>
   113e0:	mov	r2, #22
   113e4:	mov	r1, #7
   113e8:	mov	r0, r5
   113ec:	bl	11ea4 <grafo_remove@@Base>
   113f0:	cmn	r0, #1
   113f4:	bne	11454 <teste_grafo_remove@@Base+0x174>
   113f8:	mov	r0, r5
   113fc:	bl	11cf0 <grafo_apaga@@Base>
   11400:	cmp	r4, #0
   11404:	bne	1146c <teste_grafo_remove@@Base+0x18c>
   11408:	movw	r0, #9460	; 0x24f4
   1140c:	movt	r0, #1
   11410:	bl	10ad0 <puts@plt>
   11414:	mov	r0, r4
   11418:	add	sp, sp, #16
   1141c:	ldrd	r4, [sp]
   11420:	ldr	r6, [sp, #8]
   11424:	add	sp, sp, #12
   11428:	pop	{pc}		; (ldr pc, [sp], #4)
   1142c:	movw	r0, #10152	; 0x27a8
   11430:	movt	r0, #1
   11434:	bl	10aac <printf@plt>
   11438:	mov	r2, #22
   1143c:	mov	r1, #7
   11440:	mov	r0, r5
   11444:	add	r4, r4, #1
   11448:	bl	11ea4 <grafo_remove@@Base>
   1144c:	cmn	r0, #1
   11450:	beq	11488 <teste_grafo_remove@@Base+0x1a8>
   11454:	movw	r0, #10212	; 0x27e4
   11458:	movt	r0, #1
   1145c:	bl	10aac <printf@plt>
   11460:	mov	r0, r5
   11464:	add	r4, r4, #1
   11468:	bl	11cf0 <grafo_apaga@@Base>
   1146c:	mov	r0, #10
   11470:	bl	10b0c <putchar@plt>
   11474:	b	11414 <teste_grafo_remove@@Base+0x134>
   11478:	ldr	r3, [r3]
   1147c:	cmp	r3, #2
   11480:	bne	11370 <teste_grafo_remove@@Base+0x90>
   11484:	b	11380 <teste_grafo_remove@@Base+0xa0>
   11488:	mov	r0, r5
   1148c:	bl	11cf0 <grafo_apaga@@Base>
   11490:	b	1146c <teste_grafo_remove@@Base+0x18c>

00011494 <teste_v_sucessores@@Base>:
   11494:	mov	r0, #4
   11498:	mov	r2, #2
   1149c:	strd	r4, [sp, #-20]!	; 0xffffffec
   114a0:	mov	r1, #5
   114a4:	mov	r5, #7
   114a8:	strd	r6, [sp, #8]
   114ac:	mov	r4, #0
   114b0:	str	lr, [sp, #16]
   114b4:	sub	sp, sp, #84	; 0x54
   114b8:	mov	ip, #6
   114bc:	mov	lr, #3
   114c0:	mov	r6, #1
   114c4:	mov	r3, r2
   114c8:	str	r5, [sp]
   114cc:	stmib	sp, {r2, r4}
   114d0:	str	r2, [sp, #12]
   114d4:	mov	r2, lr
   114d8:	str	r5, [sp, #16]
   114dc:	str	r1, [sp, #20]
   114e0:	str	r1, [sp, #24]
   114e4:	mov	r1, #22
   114e8:	str	r0, [sp, #28]
   114ec:	str	r0, [sp, #32]
   114f0:	str	r4, [sp, #36]	; 0x24
   114f4:	str	r0, [sp, #40]	; 0x28
   114f8:	mov	r0, #8
   114fc:	str	ip, [sp, #44]	; 0x2c
   11500:	str	r6, [sp, #48]	; 0x30
   11504:	str	r6, [sp, #52]	; 0x34
   11508:	str	r5, [sp, #56]	; 0x38
   1150c:	str	ip, [sp, #60]	; 0x3c
   11510:	str	ip, [sp, #64]	; 0x40
   11514:	str	lr, [sp, #68]	; 0x44
   11518:	str	r4, [sp, #72]	; 0x48
   1151c:	str	r6, [sp, #76]	; 0x4c
   11520:	bl	10d40 <_g@@Base>
   11524:	mov	r7, r0
   11528:	movw	r0, #10268	; 0x281c
   1152c:	movt	r0, #1
   11530:	bl	10aac <printf@plt>
   11534:	mov	r1, r5
   11538:	mov	r0, r7
   1153c:	bl	11f68 <v_sucessores@@Base>
   11540:	subs	r5, r0, #0
   11544:	beq	11644 <teste_v_sucessores@@Base+0x1b0>
   11548:	ldr	r3, [r5]
   1154c:	cmp	r3, #3
   11550:	moveq	r6, r4
   11554:	bne	11608 <teste_v_sucessores@@Base+0x174>
   11558:	mov	r1, #2
   1155c:	mov	r0, r5
   11560:	bl	10cc4 <_start@@Base+0xf0>
   11564:	cmp	r0, #0
   11568:	bne	115dc <teste_v_sucessores@@Base+0x148>
   1156c:	movw	r0, #10380	; 0x288c
   11570:	movt	r0, #1
   11574:	add	r6, r6, #1
   11578:	bl	10aac <printf@plt>
   1157c:	mov	r0, r5
   11580:	bl	12148 <vetor_apaga@@Base>
   11584:	mov	r1, #2
   11588:	mov	r0, r7
   1158c:	bl	11f68 <v_sucessores@@Base>
   11590:	subs	r5, r0, #0
   11594:	beq	1165c <teste_v_sucessores@@Base+0x1c8>
   11598:	ldr	r3, [r5]
   1159c:	cmp	r3, #0
   115a0:	bne	11618 <teste_v_sucessores@@Base+0x184>
   115a4:	bl	12148 <vetor_apaga@@Base>
   115a8:	mov	r0, r7
   115ac:	bl	11cf0 <grafo_apaga@@Base>
   115b0:	cmp	r6, #0
   115b4:	bne	11638 <teste_v_sucessores@@Base+0x1a4>
   115b8:	movw	r0, #9460	; 0x24f4
   115bc:	movt	r0, #1
   115c0:	bl	10ad0 <puts@plt>
   115c4:	mov	r0, r6
   115c8:	add	sp, sp, #84	; 0x54
   115cc:	ldrd	r4, [sp]
   115d0:	ldrd	r6, [sp, #8]
   115d4:	add	sp, sp, #16
   115d8:	pop	{pc}		; (ldr pc, [sp], #4)
   115dc:	mov	r1, #5
   115e0:	mov	r0, r5
   115e4:	bl	10cc4 <_start@@Base+0xf0>
   115e8:	cmp	r0, #0
   115ec:	beq	1156c <teste_v_sucessores@@Base+0xd8>
   115f0:	mov	r1, #6
   115f4:	mov	r0, r5
   115f8:	bl	10cc4 <_start@@Base+0xf0>
   115fc:	cmp	r0, #0
   11600:	beq	1156c <teste_v_sucessores@@Base+0xd8>
   11604:	b	1157c <teste_v_sucessores@@Base+0xe8>
   11608:	movw	r0, #10336	; 0x2860
   1160c:	movt	r0, #1
   11610:	bl	10aac <printf@plt>
   11614:	b	11558 <teste_v_sucessores@@Base+0xc4>
   11618:	movw	r0, #10488	; 0x28f8
   1161c:	movt	r0, #1
   11620:	bl	10aac <printf@plt>
   11624:	mov	r0, r5
   11628:	add	r6, r6, #1
   1162c:	bl	12148 <vetor_apaga@@Base>
   11630:	mov	r0, r7
   11634:	bl	11cf0 <grafo_apaga@@Base>
   11638:	mov	r0, #10
   1163c:	bl	10b0c <putchar@plt>
   11640:	b	115c4 <teste_v_sucessores@@Base+0x130>
   11644:	movw	r0, #10288	; 0x2830
   11648:	movt	r0, #1
   1164c:	bl	10aac <printf@plt>
   11650:	mov	r0, #10
   11654:	bl	10b0c <putchar@plt>
   11658:	b	115c4 <teste_v_sucessores@@Base+0x130>
   1165c:	movw	r0, #10424	; 0x28b8
   11660:	movt	r0, #1
   11664:	bl	10aac <printf@plt>
   11668:	mov	r0, #10
   1166c:	add	r6, r6, #1
   11670:	bl	10b0c <putchar@plt>
   11674:	b	115c4 <teste_v_sucessores@@Base+0x130>

00011678 <teste_v_antecessores@@Base>:
   11678:	mov	r0, #7
   1167c:	mov	r1, #4
   11680:	strd	r4, [sp, #-20]!	; 0xffffffec
   11684:	mov	r2, #5
   11688:	mov	r5, #2
   1168c:	strd	r6, [sp, #8]
   11690:	mov	r4, #0
   11694:	str	lr, [sp, #16]
   11698:	sub	sp, sp, #84	; 0x54
   1169c:	mov	ip, #6
   116a0:	mov	lr, #3
   116a4:	mov	r6, #1
   116a8:	mov	r3, r5
   116ac:	stm	sp, {r0, r5}
   116b0:	strd	r4, [sp, #8]
   116b4:	str	r0, [sp, #16]
   116b8:	str	r2, [sp, #20]
   116bc:	str	r2, [sp, #24]
   116c0:	mov	r2, lr
   116c4:	str	r1, [sp, #28]
   116c8:	str	r1, [sp, #32]
   116cc:	str	r4, [sp, #36]	; 0x24
   116d0:	str	r1, [sp, #40]	; 0x28
   116d4:	mov	r1, #22
   116d8:	str	ip, [sp, #44]	; 0x2c
   116dc:	str	r0, [sp, #56]	; 0x38
   116e0:	mov	r0, #8
   116e4:	str	r6, [sp, #48]	; 0x30
   116e8:	str	r6, [sp, #52]	; 0x34
   116ec:	str	ip, [sp, #60]	; 0x3c
   116f0:	str	ip, [sp, #64]	; 0x40
   116f4:	str	lr, [sp, #68]	; 0x44
   116f8:	str	r4, [sp, #72]	; 0x48
   116fc:	str	r6, [sp, #76]	; 0x4c
   11700:	bl	10d40 <_g@@Base>
   11704:	mov	r7, r0
   11708:	movw	r0, #10536	; 0x2928
   1170c:	movt	r0, #1
   11710:	bl	10aac <printf@plt>
   11714:	mov	r1, r5
   11718:	mov	r0, r7
   1171c:	bl	11f8c <v_antecessores@@Base>
   11720:	subs	r5, r0, #0
   11724:	beq	11824 <teste_v_antecessores@@Base+0x1ac>
   11728:	ldr	r3, [r5]
   1172c:	cmp	r3, #3
   11730:	moveq	r6, r4
   11734:	bne	117e8 <teste_v_antecessores@@Base+0x170>
   11738:	mov	r1, #0
   1173c:	mov	r0, r5
   11740:	bl	10cc4 <_start@@Base+0xf0>
   11744:	cmp	r0, #0
   11748:	bne	117bc <teste_v_antecessores@@Base+0x144>
   1174c:	movw	r0, #10652	; 0x299c
   11750:	movt	r0, #1
   11754:	add	r6, r6, #1
   11758:	bl	10aac <printf@plt>
   1175c:	mov	r0, r5
   11760:	bl	12148 <vetor_apaga@@Base>
   11764:	mov	r1, #7
   11768:	mov	r0, r7
   1176c:	bl	11f8c <v_antecessores@@Base>
   11770:	subs	r5, r0, #0
   11774:	beq	1183c <teste_v_antecessores@@Base+0x1c4>
   11778:	ldr	r3, [r5]
   1177c:	cmp	r3, #0
   11780:	bne	117f8 <teste_v_antecessores@@Base+0x180>
   11784:	bl	12148 <vetor_apaga@@Base>
   11788:	mov	r0, r7
   1178c:	bl	11cf0 <grafo_apaga@@Base>
   11790:	cmp	r6, #0
   11794:	bne	11818 <teste_v_antecessores@@Base+0x1a0>
   11798:	movw	r0, #9460	; 0x24f4
   1179c:	movt	r0, #1
   117a0:	bl	10ad0 <puts@plt>
   117a4:	mov	r0, r6
   117a8:	add	sp, sp, #84	; 0x54
   117ac:	ldrd	r4, [sp]
   117b0:	ldrd	r6, [sp, #8]
   117b4:	add	sp, sp, #16
   117b8:	pop	{pc}		; (ldr pc, [sp], #4)
   117bc:	mov	r1, #3
   117c0:	mov	r0, r5
   117c4:	bl	10cc4 <_start@@Base+0xf0>
   117c8:	cmp	r0, #0
   117cc:	beq	1174c <teste_v_antecessores@@Base+0xd4>
   117d0:	mov	r1, #7
   117d4:	mov	r0, r5
   117d8:	bl	10cc4 <_start@@Base+0xf0>
   117dc:	cmp	r0, #0
   117e0:	beq	1174c <teste_v_antecessores@@Base+0xd4>
   117e4:	b	1175c <teste_v_antecessores@@Base+0xe4>
   117e8:	movw	r0, #10604	; 0x296c
   117ec:	movt	r0, #1
   117f0:	bl	10aac <printf@plt>
   117f4:	b	11738 <teste_v_antecessores@@Base+0xc0>
   117f8:	movw	r0, #10764	; 0x2a0c
   117fc:	movt	r0, #1
   11800:	bl	10aac <printf@plt>
   11804:	mov	r0, r5
   11808:	add	r6, r6, #1
   1180c:	bl	12148 <vetor_apaga@@Base>
   11810:	mov	r0, r7
   11814:	bl	11cf0 <grafo_apaga@@Base>
   11818:	mov	r0, #10
   1181c:	bl	10b0c <putchar@plt>
   11820:	b	117a4 <teste_v_antecessores@@Base+0x12c>
   11824:	movw	r0, #10556	; 0x293c
   11828:	movt	r0, #1
   1182c:	bl	10aac <printf@plt>
   11830:	mov	r0, #10
   11834:	bl	10b0c <putchar@plt>
   11838:	b	117a4 <teste_v_antecessores@@Base+0x12c>
   1183c:	movw	r0, #10700	; 0x29cc
   11840:	movt	r0, #1
   11844:	bl	10aac <printf@plt>
   11848:	mov	r0, #10
   1184c:	add	r6, r6, #1
   11850:	bl	10b0c <putchar@plt>
   11854:	b	117a4 <teste_v_antecessores@@Base+0x12c>

00011858 <teste_v_grau@@Base>:
   11858:	mov	r3, #2
   1185c:	mov	r0, #7
   11860:	strd	r4, [sp, #-16]!
   11864:	mov	r1, #4
   11868:	mov	r4, #0
   1186c:	str	r6, [sp, #8]
   11870:	mov	r2, #5
   11874:	str	lr, [sp, #12]
   11878:	sub	sp, sp, #80	; 0x50
   1187c:	mov	ip, #6
   11880:	mov	lr, #3
   11884:	mov	r6, #1
   11888:	stm	sp, {r0, r3, r4}
   1188c:	str	r3, [sp, #12]
   11890:	str	r0, [sp, #16]
   11894:	str	r2, [sp, #20]
   11898:	str	r2, [sp, #24]
   1189c:	mov	r2, lr
   118a0:	str	r1, [sp, #28]
   118a4:	str	r1, [sp, #32]
   118a8:	str	r4, [sp, #36]	; 0x24
   118ac:	str	r1, [sp, #40]	; 0x28
   118b0:	mov	r1, #22
   118b4:	str	r0, [sp, #56]	; 0x38
   118b8:	mov	r0, #8
   118bc:	str	ip, [sp, #44]	; 0x2c
   118c0:	str	r6, [sp, #48]	; 0x30
   118c4:	str	r6, [sp, #52]	; 0x34
   118c8:	str	ip, [sp, #60]	; 0x3c
   118cc:	str	ip, [sp, #64]	; 0x40
   118d0:	str	lr, [sp, #68]	; 0x44
   118d4:	str	r4, [sp, #72]	; 0x48
   118d8:	str	r6, [sp, #76]	; 0x4c
   118dc:	bl	10d40 <_g@@Base>
   118e0:	mov	r5, r0
   118e4:	movw	r0, #10812	; 0x2a3c
   118e8:	movt	r0, #1
   118ec:	bl	10aac <printf@plt>
   118f0:	mov	r0, r5
   118f4:	mvn	r1, #3
   118f8:	bl	11fb0 <v_grau@@Base>
   118fc:	cmn	r0, #1
   11900:	beq	11914 <teste_v_grau@@Base+0xbc>
   11904:	movw	r0, #10824	; 0x2a48
   11908:	movt	r0, #1
   1190c:	mov	r4, r6
   11910:	bl	10aac <printf@plt>
   11914:	mov	r1, #7
   11918:	mov	r0, r5
   1191c:	bl	11fb0 <v_grau@@Base>
   11920:	cmp	r0, #3
   11924:	bne	11970 <teste_v_grau@@Base+0x118>
   11928:	mov	r1, #5
   1192c:	mov	r0, r5
   11930:	bl	11fb0 <v_grau@@Base>
   11934:	cmp	r0, #2
   11938:	bne	11994 <teste_v_grau@@Base+0x13c>
   1193c:	mov	r0, r5
   11940:	bl	11cf0 <grafo_apaga@@Base>
   11944:	cmp	r4, #0
   11948:	bne	119ac <teste_v_grau@@Base+0x154>
   1194c:	movw	r0, #9460	; 0x24f4
   11950:	movt	r0, #1
   11954:	bl	10ad0 <puts@plt>
   11958:	mov	r0, r4
   1195c:	add	sp, sp, #80	; 0x50
   11960:	ldrd	r4, [sp]
   11964:	ldr	r6, [sp, #8]
   11968:	add	sp, sp, #12
   1196c:	pop	{pc}		; (ldr pc, [sp], #4)
   11970:	movw	r0, #10872	; 0x2a78
   11974:	movt	r0, #1
   11978:	bl	10aac <printf@plt>
   1197c:	mov	r1, #5
   11980:	mov	r0, r5
   11984:	bl	11fb0 <v_grau@@Base>
   11988:	cmp	r0, #2
   1198c:	add	r4, r4, #1
   11990:	beq	119b8 <teste_v_grau@@Base+0x160>
   11994:	movw	r0, #10920	; 0x2aa8
   11998:	movt	r0, #1
   1199c:	bl	10aac <printf@plt>
   119a0:	mov	r0, r5
   119a4:	add	r4, r4, #1
   119a8:	bl	11cf0 <grafo_apaga@@Base>
   119ac:	mov	r0, #10
   119b0:	bl	10b0c <putchar@plt>
   119b4:	b	11958 <teste_v_grau@@Base+0x100>
   119b8:	mov	r0, r5
   119bc:	bl	11cf0 <grafo_apaga@@Base>
   119c0:	b	119ac <teste_v_grau@@Base+0x154>

000119c4 <teste_v_celebridade@@Base>:
   119c4:	mov	r0, #6
   119c8:	mov	r1, #0
   119cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   119d0:	strd	r6, [sp, #8]
   119d4:	mov	r6, #7
   119d8:	mov	r4, #2
   119dc:	str	lr, [sp, #16]
   119e0:	sub	sp, sp, #116	; 0x74
   119e4:	mov	ip, #4
   119e8:	mov	lr, #5
   119ec:	mov	r5, #1
   119f0:	mov	r7, #3
   119f4:	mov	r3, r4
   119f8:	str	r6, [sp]
   119fc:	mov	r2, r7
   11a00:	str	r4, [sp, #4]
   11a04:	str	r1, [sp, #8]
   11a08:	str	r1, [sp, #36]	; 0x24
   11a0c:	str	r0, [sp, #44]	; 0x2c
   11a10:	str	r0, [sp, #60]	; 0x3c
   11a14:	str	r0, [sp, #64]	; 0x40
   11a18:	str	r1, [sp, #72]	; 0x48
   11a1c:	mov	r1, #30
   11a20:	str	r0, [sp, #88]	; 0x58
   11a24:	mov	r0, #8
   11a28:	str	r4, [sp, #12]
   11a2c:	str	r6, [sp, #16]
   11a30:	str	lr, [sp, #20]
   11a34:	str	lr, [sp, #24]
   11a38:	str	ip, [sp, #28]
   11a3c:	str	ip, [sp, #32]
   11a40:	str	ip, [sp, #40]	; 0x28
   11a44:	str	r5, [sp, #48]	; 0x30
   11a48:	str	r5, [sp, #52]	; 0x34
   11a4c:	str	r6, [sp, #56]	; 0x38
   11a50:	str	r7, [sp, #68]	; 0x44
   11a54:	str	r5, [sp, #76]	; 0x4c
   11a58:	str	r5, [sp, #80]	; 0x50
   11a5c:	str	r4, [sp, #84]	; 0x54
   11a60:	str	r4, [sp, #92]	; 0x5c
   11a64:	str	ip, [sp, #96]	; 0x60
   11a68:	str	r4, [sp, #100]	; 0x64
   11a6c:	str	lr, [sp, #104]	; 0x68
   11a70:	str	r4, [sp, #108]	; 0x6c
   11a74:	bl	10d40 <_g@@Base>
   11a78:	mov	r7, r0
   11a7c:	movw	r0, #10968	; 0x2ad8
   11a80:	movt	r0, #1
   11a84:	bl	10aac <printf@plt>
   11a88:	mov	r1, r6
   11a8c:	mov	r0, r7
   11a90:	bl	1205c <v_celebridade@@Base>
   11a94:	subs	r6, r0, #0
   11a98:	bne	11adc <teste_v_celebridade@@Base+0x118>
   11a9c:	mov	r1, r4
   11aa0:	mov	r0, r7
   11aa4:	bl	1205c <v_celebridade@@Base>
   11aa8:	cmp	r0, #1
   11aac:	bne	11b24 <teste_v_celebridade@@Base+0x160>
   11ab0:	mov	r0, r7
   11ab4:	bl	11cf0 <grafo_apaga@@Base>
   11ab8:	movw	r0, #9460	; 0x24f4
   11abc:	movt	r0, #1
   11ac0:	bl	10ad0 <puts@plt>
   11ac4:	mov	r0, r6
   11ac8:	add	sp, sp, #116	; 0x74
   11acc:	ldrd	r4, [sp]
   11ad0:	ldrd	r6, [sp, #8]
   11ad4:	add	sp, sp, #16
   11ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   11adc:	movw	r0, #10988	; 0x2aec
   11ae0:	movt	r0, #1
   11ae4:	bl	10aac <printf@plt>
   11ae8:	mov	r1, r4
   11aec:	mov	r0, r7
   11af0:	bl	1205c <v_celebridade@@Base>
   11af4:	cmp	r0, r5
   11af8:	mov	r6, r0
   11afc:	beq	11b10 <teste_v_celebridade@@Base+0x14c>
   11b00:	mov	r6, r4
   11b04:	movw	r0, #11044	; 0x2b24
   11b08:	movt	r0, #1
   11b0c:	bl	10aac <printf@plt>
   11b10:	mov	r0, r7
   11b14:	bl	11cf0 <grafo_apaga@@Base>
   11b18:	mov	r0, #10
   11b1c:	bl	10b0c <putchar@plt>
   11b20:	b	11ac4 <teste_v_celebridade@@Base+0x100>
   11b24:	mov	r6, r5
   11b28:	b	11b04 <teste_v_celebridade@@Base+0x140>
   11b2c:	strd	r4, [sp, #-16]!
   11b30:	mov	r5, r0
   11b34:	mov	r4, r1
   11b38:	str	r6, [sp, #8]
   11b3c:	str	lr, [sp, #12]
   11b40:	bl	12114 <vetor_novo@@Base>
   11b44:	ldr	r3, [r5, #4]
   11b48:	mov	r6, r0
   11b4c:	add	r3, r3, r4, lsl #3
   11b50:	ldr	r4, [r3, #4]
   11b54:	cmp	r4, #0
   11b58:	beq	11b80 <teste_v_celebridade@@Base+0x1bc>
   11b5c:	mov	r5, #0
   11b60:	mov	r2, r5
   11b64:	mov	r0, r6
   11b68:	ldr	r1, [r4]
   11b6c:	bl	121fc <vetor_insere@@Base>
   11b70:	ldr	r4, [r4, #4]
   11b74:	add	r5, r5, #1
   11b78:	cmp	r4, #0
   11b7c:	bne	11b60 <teste_v_celebridade@@Base+0x19c>
   11b80:	mov	r0, r6
   11b84:	ldrd	r4, [sp]
   11b88:	ldr	r6, [sp, #8]
   11b8c:	add	sp, sp, #12
   11b90:	pop	{pc}		; (ldr pc, [sp], #4)
   11b94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b98:	mov	r4, r1
   11b9c:	strd	r6, [sp, #8]
   11ba0:	mov	r6, r0
   11ba4:	str	r8, [sp, #16]
   11ba8:	str	lr, [sp, #20]
   11bac:	bl	12114 <vetor_novo@@Base>
   11bb0:	ldr	r1, [r6]
   11bb4:	mov	r7, r0
   11bb8:	cmp	r1, #0
   11bbc:	ble	11c10 <teste_v_celebridade@@Base+0x24c>
   11bc0:	mov	r8, #0
   11bc4:	mov	r5, r8
   11bc8:	ldr	r3, [r6, #4]
   11bcc:	add	r3, r3, r5, lsl #3
   11bd0:	ldr	r3, [r3, #4]
   11bd4:	cmp	r3, #0
   11bd8:	beq	11c04 <teste_v_celebridade@@Base+0x240>
   11bdc:	ldr	r2, [r3]
   11be0:	cmp	r4, r2
   11be4:	bne	11bf8 <teste_v_celebridade@@Base+0x234>
   11be8:	b	11c28 <teste_v_celebridade@@Base+0x264>
   11bec:	ldr	r2, [r3]
   11bf0:	cmp	r2, r4
   11bf4:	beq	11c28 <teste_v_celebridade@@Base+0x264>
   11bf8:	ldr	r3, [r3, #4]
   11bfc:	cmp	r3, #0
   11c00:	bne	11bec <teste_v_celebridade@@Base+0x228>
   11c04:	add	r5, r5, #1
   11c08:	cmp	r5, r1
   11c0c:	blt	11bc8 <teste_v_celebridade@@Base+0x204>
   11c10:	mov	r0, r7
   11c14:	ldrd	r4, [sp]
   11c18:	ldrd	r6, [sp, #8]
   11c1c:	ldr	r8, [sp, #16]
   11c20:	add	sp, sp, #20
   11c24:	pop	{pc}		; (ldr pc, [sp], #4)
   11c28:	mov	r1, r5
   11c2c:	mov	r2, r8
   11c30:	mov	r0, r7
   11c34:	add	r5, r5, #1
   11c38:	bl	121fc <vetor_insere@@Base>
   11c3c:	ldr	r1, [r6]
   11c40:	add	r8, r8, #1
   11c44:	cmp	r5, r1
   11c48:	blt	11bc8 <teste_v_celebridade@@Base+0x204>
   11c4c:	b	11c10 <teste_v_celebridade@@Base+0x24c>

00011c50 <cria_elem@@Base>:
   11c50:	str	r4, [sp, #-8]!
   11c54:	mov	r4, r0
   11c58:	mov	r0, #8
   11c5c:	str	lr, [sp, #4]
   11c60:	bl	10adc <malloc@plt>
   11c64:	cmp	r0, #0
   11c68:	beq	11c78 <cria_elem@@Base+0x28>
   11c6c:	mov	r3, #0
   11c70:	str	r4, [r0]
   11c74:	str	r3, [r0, #4]
   11c78:	ldr	r4, [sp]
   11c7c:	add	sp, sp, #4
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)

00011c84 <grafo_novo@@Base>:
   11c84:	strd	r4, [sp, #-16]!
   11c88:	subs	r5, r0, #0
   11c8c:	str	r6, [sp, #8]
   11c90:	movle	r6, #0
   11c94:	str	lr, [sp, #12]
   11c98:	ble	11cdc <grafo_novo@@Base+0x58>
   11c9c:	mov	r0, #8
   11ca0:	lsl	r4, r5, #3
   11ca4:	bl	10adc <malloc@plt>
   11ca8:	mov	r6, r0
   11cac:	mov	r0, r4
   11cb0:	str	r5, [r6]
   11cb4:	bl	10adc <malloc@plt>
   11cb8:	mov	r3, r0
   11cbc:	mov	r2, #0
   11cc0:	str	r0, [r6, #4]
   11cc4:	add	r1, r0, r4
   11cc8:	add	r3, r3, #8
   11ccc:	str	r2, [r3, #-8]
   11cd0:	str	r2, [r3, #-4]
   11cd4:	cmp	r3, r1
   11cd8:	bne	11cc8 <grafo_novo@@Base+0x44>
   11cdc:	mov	r0, r6
   11ce0:	ldrd	r4, [sp]
   11ce4:	ldr	r6, [sp, #8]
   11ce8:	add	sp, sp, #12
   11cec:	pop	{pc}		; (ldr pc, [sp], #4)

00011cf0 <grafo_apaga@@Base>:
   11cf0:	strd	r4, [sp, #-16]!
   11cf4:	str	r6, [sp, #8]
   11cf8:	subs	r6, r0, #0
   11cfc:	str	lr, [sp, #12]
   11d00:	beq	11d64 <grafo_apaga@@Base+0x74>
   11d04:	ldrd	r2, [r6]
   11d08:	cmp	r2, #0
   11d0c:	ble	11d44 <grafo_apaga@@Base+0x54>
   11d10:	mov	r5, #0
   11d14:	add	r1, r3, r5, lsl #3
   11d18:	ldr	r0, [r1, #4]
   11d1c:	cmp	r0, #0
   11d20:	beq	11d38 <grafo_apaga@@Base+0x48>
   11d24:	ldr	r4, [r0, #4]
   11d28:	bl	10ab8 <free@plt>
   11d2c:	subs	r0, r4, #0
   11d30:	bne	11d24 <grafo_apaga@@Base+0x34>
   11d34:	ldrd	r2, [r6]
   11d38:	add	r5, r5, #1
   11d3c:	cmp	r2, r5
   11d40:	bgt	11d14 <grafo_apaga@@Base+0x24>
   11d44:	mov	r0, r3
   11d48:	bl	10ab8 <free@plt>
   11d4c:	mov	r0, r6
   11d50:	ldrd	r4, [sp]
   11d54:	ldr	r6, [sp, #8]
   11d58:	ldr	lr, [sp, #12]
   11d5c:	add	sp, sp, #16
   11d60:	b	10ab8 <free@plt>
   11d64:	ldrd	r4, [sp]
   11d68:	ldr	r6, [sp, #8]
   11d6c:	add	sp, sp, #12
   11d70:	pop	{pc}		; (ldr pc, [sp], #4)

00011d74 <grafo_aresta@@Base>:
   11d74:	cmp	r0, #0
   11d78:	beq	11dc8 <grafo_aresta@@Base+0x54>
   11d7c:	ldr	r3, [r0]
   11d80:	cmp	r3, r1
   11d84:	blt	11dc8 <grafo_aresta@@Base+0x54>
   11d88:	cmp	r3, r2
   11d8c:	blt	11dd0 <grafo_aresta@@Base+0x5c>
   11d90:	ldr	r3, [r0, #4]
   11d94:	add	r1, r3, r1, lsl #3
   11d98:	ldr	r0, [r1, #4]
   11d9c:	cmp	r0, #0
   11da0:	bne	11db4 <grafo_aresta@@Base+0x40>
   11da4:	b	11dc4 <grafo_aresta@@Base+0x50>
   11da8:	ldr	r0, [r0, #4]
   11dac:	cmp	r0, #0
   11db0:	beq	11dd8 <grafo_aresta@@Base+0x64>
   11db4:	ldr	r3, [r0]
   11db8:	cmp	r2, r3
   11dbc:	bne	11da8 <grafo_aresta@@Base+0x34>
   11dc0:	mov	r0, #1
   11dc4:	bx	lr
   11dc8:	mvn	r0, #0
   11dcc:	bx	lr
   11dd0:	mov	r0, #0
   11dd4:	bx	lr
   11dd8:	bx	lr

00011ddc <grafo_adiciona@@Base>:
   11ddc:	cmp	r0, #0
   11de0:	beq	11df4 <grafo_adiciona@@Base+0x18>
   11de4:	ldr	r3, [r0]
   11de8:	cmp	r3, r2
   11dec:	cmpge	r3, r1
   11df0:	bge	11dfc <grafo_adiciona@@Base+0x20>
   11df4:	mvn	r0, #0
   11df8:	bx	lr
   11dfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e00:	strd	r6, [sp, #8]
   11e04:	ldr	r7, [r0, #4]
   11e08:	str	r8, [sp, #16]
   11e0c:	str	lr, [sp, #20]
   11e10:	add	r5, r7, r1, lsl #3
   11e14:	ldr	r6, [r5, #4]
   11e18:	cmp	r6, #0
   11e1c:	beq	11e4c <grafo_adiciona@@Base+0x70>
   11e20:	ldr	r1, [r6]
   11e24:	cmp	r1, r2
   11e28:	beq	11e90 <grafo_adiciona@@Base+0xb4>
   11e2c:	mov	r3, r6
   11e30:	b	11e40 <grafo_adiciona@@Base+0x64>
   11e34:	ldr	r1, [r3]
   11e38:	cmp	r2, r1
   11e3c:	beq	11e90 <grafo_adiciona@@Base+0xb4>
   11e40:	ldr	r3, [r3, #4]
   11e44:	cmp	r3, #0
   11e48:	bne	11e34 <grafo_adiciona@@Base+0x58>
   11e4c:	mov	r0, #8
   11e50:	mov	r4, r2
   11e54:	bl	10adc <malloc@plt>
   11e58:	subs	r3, r0, #0
   11e5c:	beq	11e98 <grafo_adiciona@@Base+0xbc>
   11e60:	ldr	r2, [r7]
   11e64:	mov	r0, #1
   11e68:	str	r4, [r3]
   11e6c:	str	r3, [r5, #4]
   11e70:	str	r6, [r3, #4]
   11e74:	add	r2, r2, r0
   11e78:	str	r2, [r7]
   11e7c:	ldrd	r4, [sp]
   11e80:	ldrd	r6, [sp, #8]
   11e84:	ldr	r8, [sp, #16]
   11e88:	add	sp, sp, #20
   11e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e90:	mov	r0, #0
   11e94:	b	11e7c <grafo_adiciona@@Base+0xa0>
   11e98:	str	r3, [r5, #4]
   11e9c:	str	r6, [r3, #4]
   11ea0:	udf	#0

00011ea4 <grafo_remove@@Base>:
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ec4 <grafo_remove@@Base+0x20>
   11eac:	ldr	ip, [r0]
   11eb0:	cmp	r1, r2
   11eb4:	movge	r3, r1
   11eb8:	movlt	r3, r2
   11ebc:	cmp	ip, r3
   11ec0:	bge	11ecc <grafo_remove@@Base+0x28>
   11ec4:	mvn	r0, #0
   11ec8:	bx	lr
   11ecc:	str	r4, [sp, #-8]!
   11ed0:	ldr	r4, [r0, #4]
   11ed4:	str	lr, [sp, #4]
   11ed8:	add	r1, r4, r1, lsl #3
   11edc:	ldr	lr, [r1, #4]
   11ee0:	cmp	lr, #0
   11ee4:	moveq	r0, lr
   11ee8:	beq	11f1c <grafo_remove@@Base+0x78>
   11eec:	ldm	lr, {r0, r3}
   11ef0:	cmp	r0, r2
   11ef4:	bne	11f10 <grafo_remove@@Base+0x6c>
   11ef8:	b	11f48 <grafo_remove@@Base+0xa4>
   11efc:	ldm	r3, {r1, ip}
   11f00:	cmp	r1, r2
   11f04:	beq	11f28 <grafo_remove@@Base+0x84>
   11f08:	mov	lr, r3
   11f0c:	mov	r3, ip
   11f10:	cmp	r3, #0
   11f14:	bne	11efc <grafo_remove@@Base+0x58>
   11f18:	mov	r0, r3
   11f1c:	ldr	r4, [sp]
   11f20:	add	sp, sp, #4
   11f24:	pop	{pc}		; (ldr pc, [sp], #4)
   11f28:	ldr	r2, [r4]
   11f2c:	mov	r0, r3
   11f30:	str	ip, [lr, #4]
   11f34:	sub	r3, r2, #1
   11f38:	str	r3, [r4]
   11f3c:	bl	10ab8 <free@plt>
   11f40:	mov	r0, #1
   11f44:	b	11f1c <grafo_remove@@Base+0x78>
   11f48:	ldr	r2, [r4]
   11f4c:	mov	r0, lr
   11f50:	str	r3, [r1, #4]
   11f54:	sub	r3, r2, #1
   11f58:	str	r3, [r4]
   11f5c:	bl	10ab8 <free@plt>
   11f60:	mov	r0, #1
   11f64:	b	11f1c <grafo_remove@@Base+0x78>

00011f68 <v_sucessores@@Base>:
   11f68:	subs	r2, r0, #0
   11f6c:	beq	11f80 <v_sucessores@@Base+0x18>
   11f70:	ldr	r2, [r2]
   11f74:	cmp	r1, #0
   11f78:	cmpge	r2, r1
   11f7c:	bgt	11f88 <v_sucessores@@Base+0x20>
   11f80:	mov	r0, #0
   11f84:	bx	lr
   11f88:	b	11b2c <teste_v_celebridade@@Base+0x168>

00011f8c <v_antecessores@@Base>:
   11f8c:	subs	r2, r0, #0
   11f90:	beq	11fa4 <v_antecessores@@Base+0x18>
   11f94:	ldr	r2, [r2]
   11f98:	cmp	r1, #0
   11f9c:	cmpge	r2, r1
   11fa0:	bgt	11fac <v_antecessores@@Base+0x20>
   11fa4:	mov	r0, #0
   11fa8:	bx	lr
   11fac:	b	11b94 <teste_v_celebridade@@Base+0x1d0>

00011fb0 <v_grau@@Base>:
   11fb0:	strd	r4, [sp, #-16]!
   11fb4:	subs	r5, r1, #0
   11fb8:	str	r6, [sp, #8]
   11fbc:	str	lr, [sp, #12]
   11fc0:	blt	1204c <v_grau@@Base+0x9c>
   11fc4:	cmp	r0, #0
   11fc8:	mov	r4, r0
   11fcc:	moveq	r6, r0
   11fd0:	beq	12004 <v_grau@@Base+0x54>
   11fd4:	ldr	r3, [r0]
   11fd8:	cmp	r5, r3
   11fdc:	bge	12040 <v_grau@@Base+0x90>
   11fe0:	bl	11b94 <teste_v_celebridade@@Base+0x1d0>
   11fe4:	ldr	r3, [r4]
   11fe8:	mov	r6, r0
   11fec:	cmp	r5, r3
   11ff0:	bge	12054 <v_grau@@Base+0xa4>
   11ff4:	mov	r0, r4
   11ff8:	mov	r1, r5
   11ffc:	bl	11b2c <teste_v_celebridade@@Base+0x168>
   12000:	mov	r4, r0
   12004:	mov	r0, r6
   12008:	bl	121b8 <vetor_tamanho@@Base>
   1200c:	mov	r5, r0
   12010:	mov	r0, r4
   12014:	bl	121b8 <vetor_tamanho@@Base>
   12018:	add	r5, r5, r0
   1201c:	mov	r0, r6
   12020:	bl	12148 <vetor_apaga@@Base>
   12024:	mov	r0, r4
   12028:	bl	12148 <vetor_apaga@@Base>
   1202c:	mov	r0, r5
   12030:	ldrd	r4, [sp]
   12034:	ldr	r6, [sp, #8]
   12038:	add	sp, sp, #12
   1203c:	pop	{pc}		; (ldr pc, [sp], #4)
   12040:	mov	r6, #0
   12044:	mov	r4, r6
   12048:	b	12004 <v_grau@@Base+0x54>
   1204c:	mvn	r5, #0
   12050:	b	1202c <v_grau@@Base+0x7c>
   12054:	mov	r4, #0
   12058:	b	12004 <v_grau@@Base+0x54>

0001205c <v_celebridade@@Base>:
   1205c:	subs	r3, r0, #0
   12060:	beq	1210c <v_celebridade@@Base+0xb0>
   12064:	ldr	r0, [r3, #4]
   12068:	ldr	ip, [r0, r1, lsl #3]
   1206c:	cmp	ip, #0
   12070:	bne	120fc <v_celebridade@@Base+0xa0>
   12074:	str	r4, [sp, #-8]!
   12078:	ldr	r4, [r3]
   1207c:	str	lr, [sp, #4]
   12080:	cmp	r4, #0
   12084:	ble	12104 <v_celebridade@@Base+0xa8>
   12088:	add	lr, r0, r4, lsl #3
   1208c:	ldr	r3, [r0, #4]
   12090:	cmp	r3, #0
   12094:	beq	120c0 <v_celebridade@@Base+0x64>
   12098:	ldr	r2, [r3]
   1209c:	cmp	r1, r2
   120a0:	bne	120b4 <v_celebridade@@Base+0x58>
   120a4:	b	120e8 <v_celebridade@@Base+0x8c>
   120a8:	ldr	r2, [r3]
   120ac:	cmp	r2, r1
   120b0:	beq	120e8 <v_celebridade@@Base+0x8c>
   120b4:	ldr	r3, [r3, #4]
   120b8:	cmp	r3, #0
   120bc:	bne	120a8 <v_celebridade@@Base+0x4c>
   120c0:	add	r0, r0, #8
   120c4:	cmp	lr, r0
   120c8:	bne	1208c <v_celebridade@@Base+0x30>
   120cc:	add	ip, ip, #1
   120d0:	sub	r0, r4, ip
   120d4:	ldr	r4, [sp]
   120d8:	add	sp, sp, #4
   120dc:	clz	r0, r0
   120e0:	lsr	r0, r0, #5
   120e4:	pop	{pc}		; (ldr pc, [sp], #4)
   120e8:	add	r0, r0, #8
   120ec:	add	ip, ip, #1
   120f0:	cmp	lr, r0
   120f4:	bne	1208c <v_celebridade@@Base+0x30>
   120f8:	b	120cc <v_celebridade@@Base+0x70>
   120fc:	mov	r0, #0
   12100:	bx	lr
   12104:	mov	ip, #1
   12108:	b	120d0 <v_celebridade@@Base+0x74>
   1210c:	mvn	r0, #0
   12110:	bx	lr

00012114 <vetor_novo@@Base>:
   12114:	mov	r0, #12
   12118:	str	r4, [sp, #-8]!
   1211c:	str	lr, [sp, #4]
   12120:	bl	10adc <malloc@plt>
   12124:	cmp	r0, #0
   12128:	beq	1213c <vetor_novo@@Base+0x28>
   1212c:	mov	r3, #0
   12130:	str	r3, [r0]
   12134:	str	r3, [r0, #4]
   12138:	str	r3, [r0, #8]
   1213c:	ldr	r4, [sp]
   12140:	add	sp, sp, #4
   12144:	pop	{pc}		; (ldr pc, [sp], #4)

00012148 <vetor_apaga@@Base>:
   12148:	str	r4, [sp, #-8]!
   1214c:	subs	r4, r0, #0
   12150:	str	lr, [sp, #4]
   12154:	beq	12174 <vetor_apaga@@Base+0x2c>
   12158:	ldr	r0, [r4, #8]
   1215c:	bl	10ab8 <free@plt>
   12160:	mov	r0, r4
   12164:	ldr	r4, [sp]
   12168:	ldr	lr, [sp, #4]
   1216c:	add	sp, sp, #8
   12170:	b	10ab8 <free@plt>
   12174:	ldr	r4, [sp]
   12178:	add	sp, sp, #4
   1217c:	pop	{pc}		; (ldr pc, [sp], #4)

00012180 <vetor_atribui@@Base>:
   12180:	cmp	r0, #0
   12184:	lsrne	r3, r1, #31
   12188:	moveq	r3, #1
   1218c:	cmp	r3, #0
   12190:	bne	121b0 <vetor_atribui@@Base+0x30>
   12194:	ldr	r3, [r0]
   12198:	cmp	r3, r1
   1219c:	ble	121b0 <vetor_atribui@@Base+0x30>
   121a0:	ldr	r3, [r0, #8]
   121a4:	mov	r0, r1
   121a8:	str	r2, [r3, r1, lsl #2]
   121ac:	bx	lr
   121b0:	mvn	r0, #0
   121b4:	bx	lr

000121b8 <vetor_tamanho@@Base>:
   121b8:	cmp	r0, #0
   121bc:	ldrne	r0, [r0]
   121c0:	mvneq	r0, #0
   121c4:	bx	lr

000121c8 <vetor_elemento@@Base>:
   121c8:	cmp	r0, #0
   121cc:	lsrne	r3, r1, #31
   121d0:	moveq	r3, #1
   121d4:	cmp	r3, #0
   121d8:	bne	121f4 <vetor_elemento@@Base+0x2c>
   121dc:	ldr	r3, [r0]
   121e0:	cmp	r3, r1
   121e4:	ble	121f4 <vetor_elemento@@Base+0x2c>
   121e8:	ldr	r3, [r0, #8]
   121ec:	ldr	r0, [r3, r1, lsl #2]
   121f0:	bx	lr
   121f4:	mov	r0, #-2147483648	; 0x80000000
   121f8:	bx	lr

000121fc <vetor_insere@@Base>:
   121fc:	cmn	r2, #1
   12200:	movge	r3, #0
   12204:	movlt	r3, #1
   12208:	cmp	r0, #0
   1220c:	moveq	r3, #1
   12210:	cmp	r3, #0
   12214:	bne	122cc <vetor_insere@@Base+0xd0>
   12218:	strd	r4, [sp, #-16]!
   1221c:	mov	r4, r2
   12220:	mov	r5, r0
   12224:	str	r6, [sp, #8]
   12228:	mov	r6, r1
   1222c:	ldr	r1, [r0]
   12230:	str	lr, [sp, #12]
   12234:	cmp	r1, r2
   12238:	blt	122c4 <vetor_insere@@Base+0xc8>
   1223c:	ldr	r3, [r0, #4]
   12240:	cmn	r2, #1
   12244:	moveq	r4, r1
   12248:	ldr	r0, [r0, #8]
   1224c:	cmp	r1, r3
   12250:	beq	12294 <vetor_insere@@Base+0x98>
   12254:	cmp	r4, r1
   12258:	addlt	r3, r0, r1, lsl #2
   1225c:	addlt	r2, r0, r4, lsl #2
   12260:	bge	12274 <vetor_insere@@Base+0x78>
   12264:	ldr	ip, [r3, #-4]
   12268:	str	ip, [r3], #-4
   1226c:	cmp	r2, r3
   12270:	bne	12264 <vetor_insere@@Base+0x68>
   12274:	add	r1, r1, #1
   12278:	str	r6, [r0, r4, lsl #2]
   1227c:	mov	r0, r4
   12280:	str	r1, [r5]
   12284:	ldrd	r4, [sp]
   12288:	ldr	r6, [sp, #8]
   1228c:	add	sp, sp, #12
   12290:	pop	{pc}		; (ldr pc, [sp], #4)
   12294:	cmp	r1, #0
   12298:	lslne	r3, r1, #1
   1229c:	moveq	r3, #1
   122a0:	moveq	r1, #4
   122a4:	lslne	r1, r1, #3
   122a8:	str	r3, [r5, #4]
   122ac:	bl	10ac4 <realloc@plt>
   122b0:	cmp	r0, #0
   122b4:	str	r0, [r5, #8]
   122b8:	beq	122c4 <vetor_insere@@Base+0xc8>
   122bc:	ldr	r1, [r5]
   122c0:	b	12254 <vetor_insere@@Base+0x58>
   122c4:	mvn	r0, #0
   122c8:	b	12284 <vetor_insere@@Base+0x88>
   122cc:	mvn	r0, #0
   122d0:	bx	lr

000122d4 <vetor_remove@@Base>:
   122d4:	cmp	r0, #0
   122d8:	lsrne	r3, r1, #31
   122dc:	moveq	r3, #1
   122e0:	cmp	r3, #0
   122e4:	bne	12334 <vetor_remove@@Base+0x60>
   122e8:	ldr	ip, [r0]
   122ec:	cmp	ip, r1
   122f0:	ble	12334 <vetor_remove@@Base+0x60>
   122f4:	add	r3, r1, #1
   122f8:	cmp	ip, r3
   122fc:	ble	12320 <vetor_remove@@Base+0x4c>
   12300:	ldr	r3, [r0, #8]
   12304:	sub	r2, r3, #4
   12308:	add	r1, r3, r1, lsl #2
   1230c:	add	r2, r2, ip, lsl #2
   12310:	ldr	r3, [r1, #4]
   12314:	str	r3, [r1], #4
   12318:	cmp	r1, r2
   1231c:	bne	12310 <vetor_remove@@Base+0x3c>
   12320:	sub	ip, ip, #1
   12324:	mov	r3, #0
   12328:	str	ip, [r0]
   1232c:	mov	r0, r3
   12330:	bx	lr
   12334:	mvn	r3, #0
   12338:	b	1232c <vetor_remove@@Base+0x58>

0001233c <vetor_pesquisa@@Base>:
   1233c:	cmp	r0, #0
   12340:	beq	12380 <vetor_pesquisa@@Base+0x44>
   12344:	ldr	ip, [r0]
   12348:	cmp	ip, #0
   1234c:	ble	12380 <vetor_pesquisa@@Base+0x44>
   12350:	ldr	r3, [r0, #8]
   12354:	mov	r0, #0
   12358:	ldr	r2, [r3]
   1235c:	cmp	r1, r2
   12360:	bne	12374 <vetor_pesquisa@@Base+0x38>
   12364:	b	12388 <vetor_pesquisa@@Base+0x4c>
   12368:	ldr	r2, [r3, #4]!
   1236c:	cmp	r2, r1
   12370:	beq	12388 <vetor_pesquisa@@Base+0x4c>
   12374:	add	r0, r0, #1
   12378:	cmp	ip, r0
   1237c:	bne	12368 <vetor_pesquisa@@Base+0x2c>
   12380:	mvn	r0, #0
   12384:	bx	lr
   12388:	bx	lr

0001238c <vetor_ordena@@Base>:
   1238c:	cmp	r0, #0
   12390:	beq	1240c <vetor_ordena@@Base+0x80>
   12394:	strd	r4, [sp, #-16]!
   12398:	ldr	r5, [r0]
   1239c:	str	r6, [sp, #8]
   123a0:	str	lr, [sp, #12]
   123a4:	cmp	r5, #1
   123a8:	ble	123f8 <vetor_ordena@@Base+0x6c>
   123ac:	ldr	r6, [r0, #8]
   123b0:	mov	lr, #1
   123b4:	mov	r4, r6
   123b8:	ldr	ip, [r4, #4]!
   123bc:	mov	r2, lr
   123c0:	mov	r3, r4
   123c4:	ldr	r1, [r3, #-4]
   123c8:	mov	r0, r3
   123cc:	cmp	r1, ip
   123d0:	ble	123e8 <vetor_ordena@@Base+0x5c>
   123d4:	subs	r2, r2, #1
   123d8:	str	r1, [r3]
   123dc:	sub	r3, r0, #4
   123e0:	bne	123c4 <vetor_ordena@@Base+0x38>
   123e4:	mov	r0, r6
   123e8:	add	lr, lr, #1
   123ec:	str	ip, [r0]
   123f0:	cmp	lr, r5
   123f4:	bne	123b8 <vetor_ordena@@Base+0x2c>
   123f8:	ldrd	r4, [sp]
   123fc:	mov	r0, #0
   12400:	ldr	r6, [sp, #8]
   12404:	add	sp, sp, #12
   12408:	pop	{pc}		; (ldr pc, [sp], #4)
   1240c:	mvn	r0, #0
   12410:	bx	lr

00012414 <__libc_csu_init@@Base>:
   12414:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12418:	mov	r7, r0
   1241c:	ldr	r6, [pc, #72]	; 1246c <__libc_csu_init@@Base+0x58>
   12420:	ldr	r5, [pc, #72]	; 12470 <__libc_csu_init@@Base+0x5c>
   12424:	add	r6, pc, r6
   12428:	add	r5, pc, r5
   1242c:	sub	r6, r6, r5
   12430:	mov	r8, r1
   12434:	mov	r9, r2
   12438:	bl	10a80 <calloc@plt-0x20>
   1243c:	asrs	r6, r6, #2
   12440:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12444:	mov	r4, #0
   12448:	add	r4, r4, #1
   1244c:	ldr	r3, [r5], #4
   12450:	mov	r2, r9
   12454:	mov	r1, r8
   12458:	mov	r0, r7
   1245c:	blx	r3
   12460:	cmp	r6, r4
   12464:	bne	12448 <__libc_csu_init@@Base+0x34>
   12468:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1246c:	andeq	r0, r1, r8, ror #21
   12470:	andeq	r0, r1, r0, ror #21

00012474 <__libc_csu_fini@@Base>:
   12474:	bx	lr

Disassembly of section .fini:

00012478 <.fini>:
   12478:	push	{r3, lr}
   1247c:	pop	{r3, pc}
