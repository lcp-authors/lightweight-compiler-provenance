
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-errno.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_errno>:
   0:	ldr	r3, [pc, #12]	; 14 <coda_get_errno+0x14>
   4:	push	{lr}		; (str lr, [sp, #-4]!)
   8:	bl	0 <__aeabi_read_tp>
   c:	add	r0, r3, r0
  10:	pop	{pc}		; (ldr pc, [sp], #4)
  14:	.word	0x00000000

00000018 <coda_set_error_message_vargs>:
  18:	push	{r4, lr}
  1c:	subs	r2, r0, #0
  20:	sub	sp, sp, #4096	; 0x1000
  24:	sub	sp, sp, #8
  28:	beq	68 <coda_set_error_message_vargs+0x50>
  2c:	mov	r3, r1
  30:	add	r0, sp, #4
  34:	mov	r1, #4096	; 0x1000
  38:	bl	0 <vsnprintf>
  3c:	ldr	r2, [pc, #64]	; 84 <coda_set_error_message_vargs+0x6c>
  40:	add	r4, sp, #8
  44:	mov	r3, #0
  48:	add	r1, sp, #4
  4c:	bl	0 <__aeabi_read_tp>
  50:	add	r0, r2, r0
  54:	strb	r3, [r4, #4092]	; 0xffc
  58:	bl	0 <strcpy>
  5c:	add	sp, sp, #4096	; 0x1000
  60:	add	sp, sp, #8
  64:	pop	{r4, pc}
  68:	ldr	r3, [pc, #24]	; 88 <coda_set_error_message_vargs+0x70>
  6c:	bl	0 <__aeabi_read_tp>
  70:	add	r0, r3, r0
  74:	strb	r2, [r0, #4]
  78:	add	sp, sp, #4096	; 0x1000
  7c:	add	sp, sp, #8
  80:	pop	{r4, pc}
  84:	.word	0x00000004
  88:	.word	0x00000000

0000008c <coda_set_error_message>:
  8c:	push	{r0, r1, r2, r3}
  90:	push	{lr}		; (str lr, [sp, #-4]!)
  94:	sub	sp, sp, #12
  98:	add	r3, sp, #20
  9c:	mov	r1, r3
  a0:	ldr	r0, [sp, #16]
  a4:	str	r3, [sp, #4]
  a8:	bl	18 <coda_set_error_message_vargs>
  ac:	add	sp, sp, #12
  b0:	pop	{lr}		; (ldr lr, [sp], #4)
  b4:	add	sp, sp, #16
  b8:	bx	lr

000000bc <coda_set_error>:
  bc:	push	{r1, r2, r3}
  c0:	ldr	r2, [pc, #52]	; fc <coda_set_error+0x40>
  c4:	push	{r4, lr}
  c8:	sub	sp, sp, #12
  cc:	add	r3, sp, #24
  d0:	mov	r4, r0
  d4:	mov	r1, r3
  d8:	bl	0 <__aeabi_read_tp>
  dc:	str	r4, [r2, r0]
  e0:	ldr	r0, [sp, #20]
  e4:	str	r3, [sp, #4]
  e8:	bl	18 <coda_set_error_message_vargs>
  ec:	add	sp, sp, #12
  f0:	pop	{r4, lr}
  f4:	add	sp, sp, #12
  f8:	bx	lr
  fc:	.word	0x00000000

00000100 <coda_errno_to_string>:
 100:	ldr	r1, [pc, #500]	; 2fc <coda_errno_to_string+0x1fc>
 104:	mov	r3, r0
 108:	push	{lr}		; (str lr, [sp, #-4]!)
 10c:	bl	0 <__aeabi_read_tp>
 110:	add	r2, r1, r0
 114:	ldr	r0, [r1, r0]
 118:	cmp	r0, r3
 11c:	beq	198 <coda_errno_to_string+0x98>
 120:	cmn	r3, #101	; 0x65
 124:	beq	2e4 <coda_errno_to_string+0x1e4>
 128:	bgt	158 <coda_errno_to_string+0x58>
 12c:	cmn	r3, #108	; 0x6c
 130:	beq	2d4 <coda_errno_to_string+0x1d4>
 134:	ble	1d0 <coda_errno_to_string+0xd0>
 138:	cmn	r3, #105	; 0x69
 13c:	beq	294 <coda_errno_to_string+0x194>
 140:	ble	200 <coda_errno_to_string+0x100>
 144:	cmn	r3, #103	; 0x67
 148:	beq	2cc <coda_errno_to_string+0x1cc>
 14c:	bgt	28c <coda_errno_to_string+0x18c>
 150:	ldr	r0, [pc, #424]	; 300 <coda_errno_to_string+0x200>
 154:	pop	{pc}		; (ldr pc, [sp], #4)
 158:	cmn	r3, #14
 15c:	beq	2dc <coda_errno_to_string+0x1dc>
 160:	ble	1ac <coda_errno_to_string+0xac>
 164:	cmn	r3, #11
 168:	beq	29c <coda_errno_to_string+0x19c>
 16c:	ble	244 <coda_errno_to_string+0x144>
 170:	cmn	r3, #1
 174:	beq	2c4 <coda_errno_to_string+0x1c4>
 178:	cmp	r3, #0
 17c:	beq	284 <coda_errno_to_string+0x184>
 180:	cmn	r3, #10
 184:	beq	2b4 <coda_errno_to_string+0x1b4>
 188:	cmp	r0, r3
 18c:	beq	2ec <coda_errno_to_string+0x1ec>
 190:	ldr	r0, [pc, #364]	; 304 <coda_errno_to_string+0x204>
 194:	pop	{pc}		; (ldr pc, [sp], #4)
 198:	ldrb	ip, [r2, #4]
 19c:	cmp	ip, #0
 1a0:	beq	120 <coda_errno_to_string+0x20>
 1a4:	add	r0, r2, #4
 1a8:	pop	{pc}		; (ldr pc, [sp], #4)
 1ac:	cmn	r3, #22
 1b0:	beq	2bc <coda_errno_to_string+0x1bc>
 1b4:	bgt	22c <coda_errno_to_string+0x12c>
 1b8:	cmn	r3, #100	; 0x64
 1bc:	beq	274 <coda_errno_to_string+0x174>
 1c0:	cmn	r3, #23
 1c4:	bne	188 <coda_errno_to_string+0x88>
 1c8:	ldr	r0, [pc, #312]	; 308 <coda_errno_to_string+0x208>
 1cc:	pop	{pc}		; (ldr pc, [sp], #4)
 1d0:	mvn	r2, #300	; 0x12c
 1d4:	cmp	r3, r2
 1d8:	beq	2ac <coda_errno_to_string+0x1ac>
 1dc:	cmn	r3, #300	; 0x12c
 1e0:	bge	218 <coda_errno_to_string+0x118>
 1e4:	mvn	r2, #400	; 0x190
 1e8:	cmp	r3, r2
 1ec:	beq	27c <coda_errno_to_string+0x17c>
 1f0:	cmn	r3, #400	; 0x190
 1f4:	bne	188 <coda_errno_to_string+0x88>
 1f8:	ldr	r0, [pc, #268]	; 30c <coda_errno_to_string+0x20c>
 1fc:	pop	{pc}		; (ldr pc, [sp], #4)
 200:	cmn	r3, #107	; 0x6b
 204:	beq	264 <coda_errno_to_string+0x164>
 208:	cmn	r3, #106	; 0x6a
 20c:	bne	188 <coda_errno_to_string+0x88>
 210:	ldr	r0, [pc, #248]	; 310 <coda_errno_to_string+0x210>
 214:	pop	{pc}		; (ldr pc, [sp], #4)
 218:	beq	25c <coda_errno_to_string+0x15c>
 21c:	cmn	r3, #200	; 0xc8
 220:	bne	188 <coda_errno_to_string+0x88>
 224:	ldr	r0, [pc, #232]	; 314 <coda_errno_to_string+0x214>
 228:	pop	{pc}		; (ldr pc, [sp], #4)
 22c:	cmn	r3, #21
 230:	beq	26c <coda_errno_to_string+0x16c>
 234:	cmn	r3, #20
 238:	bne	188 <coda_errno_to_string+0x88>
 23c:	ldr	r0, [pc, #212]	; 318 <coda_errno_to_string+0x218>
 240:	pop	{pc}		; (ldr pc, [sp], #4)
 244:	cmn	r3, #13
 248:	beq	2a4 <coda_errno_to_string+0x1a4>
 24c:	cmn	r3, #12
 250:	bne	188 <coda_errno_to_string+0x88>
 254:	ldr	r0, [pc, #192]	; 31c <coda_errno_to_string+0x21c>
 258:	pop	{pc}		; (ldr pc, [sp], #4)
 25c:	ldr	r0, [pc, #188]	; 320 <coda_errno_to_string+0x220>
 260:	pop	{pc}		; (ldr pc, [sp], #4)
 264:	ldr	r0, [pc, #184]	; 324 <coda_errno_to_string+0x224>
 268:	pop	{pc}		; (ldr pc, [sp], #4)
 26c:	ldr	r0, [pc, #180]	; 328 <coda_errno_to_string+0x228>
 270:	pop	{pc}		; (ldr pc, [sp], #4)
 274:	ldr	r0, [pc, #176]	; 32c <coda_errno_to_string+0x22c>
 278:	pop	{pc}		; (ldr pc, [sp], #4)
 27c:	ldr	r0, [pc, #172]	; 330 <coda_errno_to_string+0x230>
 280:	pop	{pc}		; (ldr pc, [sp], #4)
 284:	ldr	r0, [pc, #168]	; 334 <coda_errno_to_string+0x234>
 288:	pop	{pc}		; (ldr pc, [sp], #4)
 28c:	ldr	r0, [pc, #164]	; 338 <coda_errno_to_string+0x238>
 290:	pop	{pc}		; (ldr pc, [sp], #4)
 294:	ldr	r0, [pc, #160]	; 33c <coda_errno_to_string+0x23c>
 298:	pop	{pc}		; (ldr pc, [sp], #4)
 29c:	ldr	r0, [pc, #156]	; 340 <coda_errno_to_string+0x240>
 2a0:	pop	{pc}		; (ldr pc, [sp], #4)
 2a4:	ldr	r0, [pc, #152]	; 344 <coda_errno_to_string+0x244>
 2a8:	pop	{pc}		; (ldr pc, [sp], #4)
 2ac:	ldr	r0, [pc, #148]	; 348 <coda_errno_to_string+0x248>
 2b0:	pop	{pc}		; (ldr pc, [sp], #4)
 2b4:	ldr	r0, [pc, #144]	; 34c <coda_errno_to_string+0x24c>
 2b8:	pop	{pc}		; (ldr pc, [sp], #4)
 2bc:	ldr	r0, [pc, #140]	; 350 <coda_errno_to_string+0x250>
 2c0:	pop	{pc}		; (ldr pc, [sp], #4)
 2c4:	ldr	r0, [pc, #136]	; 354 <coda_errno_to_string+0x254>
 2c8:	pop	{pc}		; (ldr pc, [sp], #4)
 2cc:	ldr	r0, [pc, #132]	; 358 <coda_errno_to_string+0x258>
 2d0:	pop	{pc}		; (ldr pc, [sp], #4)
 2d4:	ldr	r0, [pc, #128]	; 35c <coda_errno_to_string+0x25c>
 2d8:	pop	{pc}		; (ldr pc, [sp], #4)
 2dc:	ldr	r0, [pc, #124]	; 360 <coda_errno_to_string+0x260>
 2e0:	pop	{pc}		; (ldr pc, [sp], #4)
 2e4:	ldr	r0, [pc, #120]	; 364 <coda_errno_to_string+0x264>
 2e8:	pop	{pc}		; (ldr pc, [sp], #4)
 2ec:	bl	0 <__aeabi_read_tp>
 2f0:	add	r0, r1, r0
 2f4:	add	r0, r0, #4
 2f8:	pop	{pc}		; (ldr pc, [sp], #4)
 2fc:	.word	0x00000000
 300:	.word	0x000001c8
 304:	.word	0x00000308
 308:	.word	0x00000148
 30c:	.word	0x000002b0
 310:	.word	0x000001f4
 314:	.word	0x00000250
 318:	.word	0x00000104
 31c:	.word	0x00000080
 320:	.word	0x0000026c
 324:	.word	0x0000021c
 328:	.word	0x00000114
 32c:	.word	0x00000168
 330:	.word	0x000002d4
 334:	.word	0x00000000
 338:	.word	0x00000194
 33c:	.word	0x000001e4
 340:	.word	0x00000030
 344:	.word	0x0000008c
 348:	.word	0x00000284
 34c:	.word	0x00000024
 350:	.word	0x00000128
 354:	.word	0x00000014
 358:	.word	0x000001ac
 35c:	.word	0x00000238
 360:	.word	0x000000dc
 364:	.word	0x0000017c

00000368 <coda_add_error_message_vargs>:
 368:	push	{r4, r5, r6, r7, r8, r9, lr}
 36c:	subs	r9, r0, #0
 370:	sub	sp, sp, #4096	; 0x1000
 374:	sub	sp, sp, #12
 378:	beq	40c <coda_add_error_message_vargs+0xa4>
 37c:	ldr	r5, [pc, #148]	; 418 <coda_add_error_message_vargs+0xb0>
 380:	bl	0 <__aeabi_read_tp>
 384:	mov	r4, r0
 388:	add	r0, r5, r0
 38c:	add	r0, r0, #4
 390:	mov	r7, r1
 394:	bl	0 <strlen>
 398:	cmp	r0, #4096	; 0x1000
 39c:	bge	40c <coda_add_error_message_vargs+0xa4>
 3a0:	cmp	r0, #0
 3a4:	addne	r6, sp, #8
 3a8:	addne	r8, sp, #4
 3ac:	bne	3d4 <coda_add_error_message_vargs+0x6c>
 3b0:	ldr	r0, [r5, r4]
 3b4:	bl	100 <coda_errno_to_string>
 3b8:	add	r8, sp, #4
 3bc:	add	r6, sp, #8
 3c0:	mov	r1, r0
 3c4:	mov	r0, r8
 3c8:	bl	0 <strcpy>
 3cc:	mov	r0, r8
 3d0:	bl	0 <strlen>
 3d4:	rsb	r4, r0, #4096	; 0x1000
 3d8:	mov	r1, r4
 3dc:	mov	r3, r7
 3e0:	mov	r2, r9
 3e4:	mov	r0, r8
 3e8:	bl	0 <vsnprintf>
 3ec:	add	r4, r6, r4
 3f0:	bl	0 <__aeabi_read_tp>
 3f4:	add	r0, r5, r0
 3f8:	mov	r3, #0
 3fc:	mov	r1, r8
 400:	add	r0, r0, #4
 404:	strb	r3, [r4, #-4]
 408:	bl	0 <strcat>
 40c:	add	sp, sp, #4096	; 0x1000
 410:	add	sp, sp, #12
 414:	pop	{r4, r5, r6, r7, r8, r9, pc}
 418:	.word	0x00000000

0000041c <coda_add_error_message>:
 41c:	push	{r0, r1, r2, r3}
 420:	push	{lr}		; (str lr, [sp, #-4]!)
 424:	sub	sp, sp, #12
 428:	add	r3, sp, #20
 42c:	mov	r1, r3
 430:	ldr	r0, [sp, #16]
 434:	str	r3, [sp, #4]
 438:	bl	368 <coda_add_error_message_vargs>
 43c:	add	sp, sp, #12
 440:	pop	{lr}		; (ldr lr, [sp], #4)
 444:	add	sp, sp, #16
 448:	bx	lr

0000044c <coda_cursor_add_to_error_message>:
 44c:	push	{r4, lr}
 450:	mov	r4, r0
 454:	ldr	r0, [pc, #16]	; 46c <coda_cursor_add_to_error_message+0x20>
 458:	bl	41c <coda_add_error_message>
 45c:	mov	r0, r4
 460:	ldr	r1, [pc, #8]	; 470 <coda_cursor_add_to_error_message+0x24>
 464:	pop	{r4, lr}
 468:	b	0 <coda_cursor_print_path>
 46c:	.word	0x0000030c
 470:	.word	0x00000000

00000474 <add_error_message>:
 474:	push	{r0, r1, r2, r3}
 478:	push	{lr}		; (str lr, [sp, #-4]!)
 47c:	sub	sp, sp, #12
 480:	add	r3, sp, #20
 484:	ldr	r0, [sp, #16]
 488:	mov	r1, r3
 48c:	str	r3, [sp, #4]
 490:	bl	368 <coda_add_error_message_vargs>
 494:	mov	r0, #0
 498:	add	sp, sp, #12
 49c:	pop	{lr}		; (ldr lr, [sp], #4)
 4a0:	add	sp, sp, #16
 4a4:	bx	lr
