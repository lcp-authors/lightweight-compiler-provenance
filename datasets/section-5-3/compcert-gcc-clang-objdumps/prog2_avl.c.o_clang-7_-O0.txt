
../compcert-repos/prog2/CMakeFiles/MT2E1-1.dir/Extras/Miniteste2-Exemplo1/prob1/avl.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avl_nova>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	movw	r0, #4
  10:	bl	0 <malloc>
  14:	str	r0, [sp]
  18:	ldr	r0, [sp]
  1c:	movw	lr, #0
  20:	cmp	r0, lr
  24:	bne	34 <avl_nova+0x34>
  28:	movw	r0, #0
  2c:	str	r0, [sp, #4]
  30:	b	48 <avl_nova+0x48>
  34:	ldr	r0, [sp]
  38:	movw	r1, #0
  3c:	str	r1, [r0]
  40:	ldr	r0, [sp]
  44:	str	r0, [sp, #4]
  48:	ldr	r0, [sp, #4]
  4c:	mov	sp, fp
  50:	pop	{fp, pc}

00000054 <avl_apaga>:
  54:	push	{fp, lr}
  58:	mov	fp, sp
  5c:	sub	sp, sp, #8
  60:	str	r0, [sp, #4]
  64:	ldr	r0, [sp, #4]
  68:	movw	r1, #0
  6c:	cmp	r0, r1
  70:	bne	78 <avl_apaga+0x24>
  74:	b	bc <avl_apaga+0x68>
  78:	b	7c <avl_apaga+0x28>
  7c:	ldr	r0, [sp, #4]
  80:	ldr	r0, [r0]
  84:	movw	r1, #0
  88:	cmp	r0, r1
  8c:	beq	b4 <avl_apaga+0x60>
  90:	ldr	r0, [sp, #4]
  94:	ldr	r0, [r0]
  98:	ldr	r1, [sp, #4]
  9c:	ldr	r1, [r1]
  a0:	ldr	r1, [r1]
  a4:	bl	c4 <avl_remove_impl>
  a8:	ldr	r1, [sp, #4]
  ac:	str	r0, [r1]
  b0:	b	7c <avl_apaga+0x28>
  b4:	ldr	r0, [sp, #4]
  b8:	bl	0 <free>
  bc:	mov	sp, fp
  c0:	pop	{fp, pc}

000000c4 <avl_remove_impl>:
  c4:	push	{fp, lr}
  c8:	mov	fp, sp
  cc:	sub	sp, sp, #72	; 0x48
  d0:	str	r0, [fp, #-8]
  d4:	str	r1, [fp, #-12]
  d8:	ldr	r0, [fp, #-8]
  dc:	movw	r1, #0
  e0:	cmp	r0, r1
  e4:	bne	f4 <avl_remove_impl+0x30>
  e8:	ldr	r0, [fp, #-8]
  ec:	str	r0, [fp, #-4]
  f0:	b	43c <avl_remove_impl+0x378>
  f4:	ldr	r0, [fp, #-12]
  f8:	ldr	r1, [fp, #-8]
  fc:	ldr	r1, [r1]
 100:	bl	0 <strcmp>
 104:	cmp	r0, #0
 108:	bge	128 <avl_remove_impl+0x64>
 10c:	ldr	r0, [fp, #-8]
 110:	ldr	r0, [r0, #4]
 114:	ldr	r1, [fp, #-12]
 118:	bl	c4 <avl_remove_impl>
 11c:	ldr	r1, [fp, #-8]
 120:	str	r0, [r1, #4]
 124:	b	320 <avl_remove_impl+0x25c>
 128:	ldr	r0, [fp, #-12]
 12c:	ldr	r1, [fp, #-8]
 130:	ldr	r1, [r1]
 134:	bl	0 <strcmp>
 138:	cmp	r0, #0
 13c:	ble	15c <avl_remove_impl+0x98>
 140:	ldr	r0, [fp, #-8]
 144:	ldr	r0, [r0, #8]
 148:	ldr	r1, [fp, #-12]
 14c:	bl	c4 <avl_remove_impl>
 150:	ldr	r1, [fp, #-8]
 154:	str	r0, [r1, #8]
 158:	b	31c <avl_remove_impl+0x258>
 15c:	ldr	r0, [fp, #-8]
 160:	ldr	r0, [r0, #4]
 164:	movw	r1, #0
 168:	cmp	r0, r1
 16c:	beq	184 <avl_remove_impl+0xc0>
 170:	ldr	r0, [fp, #-8]
 174:	ldr	r0, [r0, #8]
 178:	movw	r1, #0
 17c:	cmp	r0, r1
 180:	bne	288 <avl_remove_impl+0x1c4>
 184:	ldr	r0, [fp, #-8]
 188:	ldr	r0, [r0, #4]
 18c:	movw	r1, #0
 190:	cmp	r0, r1
 194:	beq	1a8 <avl_remove_impl+0xe4>
 198:	ldr	r0, [fp, #-8]
 19c:	ldr	r0, [r0, #4]
 1a0:	str	r0, [fp, #-28]	; 0xffffffe4
 1a4:	b	1b4 <avl_remove_impl+0xf0>
 1a8:	ldr	r0, [fp, #-8]
 1ac:	ldr	r0, [r0, #8]
 1b0:	str	r0, [fp, #-28]	; 0xffffffe4
 1b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
 1b8:	str	r0, [fp, #-16]
 1bc:	ldr	r0, [fp, #-16]
 1c0:	movw	r1, #0
 1c4:	cmp	r0, r1
 1c8:	bne	1e0 <avl_remove_impl+0x11c>
 1cc:	ldr	r0, [fp, #-8]
 1d0:	str	r0, [fp, #-16]
 1d4:	movw	r0, #0
 1d8:	str	r0, [fp, #-8]
 1dc:	b	270 <avl_remove_impl+0x1ac>
 1e0:	ldr	r0, [fp, #-8]
 1e4:	ldr	r0, [r0]
 1e8:	ldr	r1, [fp, #-16]
 1ec:	ldr	r1, [r1]
 1f0:	str	r0, [fp, #-32]	; 0xffffffe0
 1f4:	mov	r0, r1
 1f8:	bl	0 <strlen>
 1fc:	add	r0, r0, #1
 200:	mov	r1, r0
 204:	ldr	lr, [fp, #-32]	; 0xffffffe0
 208:	str	r0, [sp, #36]	; 0x24
 20c:	mov	r0, lr
 210:	ldr	r2, [sp, #36]	; 0x24
 214:	str	r1, [sp, #32]
 218:	mov	r1, r2
 21c:	bl	0 <realloc>
 220:	ldr	r1, [fp, #-8]
 224:	str	r0, [r1]
 228:	ldr	r0, [fp, #-8]
 22c:	ldr	r0, [r0]
 230:	ldr	r1, [fp, #-16]
 234:	ldr	r1, [r1]
 238:	bl	0 <strcpy>
 23c:	ldr	r1, [fp, #-16]
 240:	ldr	r1, [r1, #4]
 244:	ldr	r2, [fp, #-8]
 248:	str	r1, [r2, #4]
 24c:	ldr	r1, [fp, #-16]
 250:	ldr	r1, [r1, #8]
 254:	ldr	r2, [fp, #-8]
 258:	str	r1, [r2, #8]
 25c:	ldr	r1, [fp, #-16]
 260:	ldr	r1, [r1, #12]
 264:	ldr	r2, [fp, #-8]
 268:	str	r1, [r2, #12]
 26c:	str	r0, [sp, #28]
 270:	ldr	r0, [fp, #-16]
 274:	ldr	r0, [r0]
 278:	bl	0 <free>
 27c:	ldr	r0, [fp, #-16]
 280:	bl	0 <free>
 284:	b	318 <avl_remove_impl+0x254>
 288:	ldr	r0, [fp, #-8]
 28c:	ldr	r0, [r0, #8]
 290:	bl	828 <avl_no_valormin>
 294:	str	r0, [fp, #-20]	; 0xffffffec
 298:	ldr	r0, [fp, #-8]
 29c:	ldr	r0, [r0]
 2a0:	ldr	lr, [fp, #-20]	; 0xffffffec
 2a4:	ldr	lr, [lr]
 2a8:	str	r0, [sp, #24]
 2ac:	mov	r0, lr
 2b0:	bl	0 <strlen>
 2b4:	add	r0, r0, #1
 2b8:	mov	lr, r0
 2bc:	ldr	r1, [sp, #24]
 2c0:	str	r0, [sp, #20]
 2c4:	mov	r0, r1
 2c8:	ldr	r1, [sp, #20]
 2cc:	str	lr, [sp, #16]
 2d0:	bl	0 <realloc>
 2d4:	ldr	r1, [fp, #-8]
 2d8:	str	r0, [r1]
 2dc:	ldr	r0, [fp, #-8]
 2e0:	ldr	r0, [r0]
 2e4:	ldr	r1, [fp, #-20]	; 0xffffffec
 2e8:	ldr	r1, [r1]
 2ec:	bl	0 <strcpy>
 2f0:	ldr	r1, [fp, #-8]
 2f4:	ldr	r1, [r1, #8]
 2f8:	ldr	lr, [fp, #-20]	; 0xffffffec
 2fc:	ldr	lr, [lr]
 300:	str	r0, [sp, #12]
 304:	mov	r0, r1
 308:	mov	r1, lr
 30c:	bl	c4 <avl_remove_impl>
 310:	ldr	r1, [fp, #-8]
 314:	str	r0, [r1, #8]
 318:	b	31c <avl_remove_impl+0x258>
 31c:	b	320 <avl_remove_impl+0x25c>
 320:	ldr	r0, [fp, #-8]
 324:	movw	r1, #0
 328:	cmp	r0, r1
 32c:	bne	33c <avl_remove_impl+0x278>
 330:	ldr	r0, [fp, #-8]
 334:	str	r0, [fp, #-4]
 338:	b	43c <avl_remove_impl+0x378>
 33c:	ldr	r0, [fp, #-8]
 340:	ldr	r0, [r0, #4]
 344:	bl	99c <avl_altura>
 348:	ldr	lr, [fp, #-8]
 34c:	ldr	lr, [lr, #8]
 350:	str	r0, [sp, #8]
 354:	mov	r0, lr
 358:	bl	99c <avl_altura>
 35c:	ldr	lr, [sp, #8]
 360:	str	r0, [sp, #4]
 364:	mov	r0, lr
 368:	ldr	r1, [sp, #4]
 36c:	bl	9d8 <max>
 370:	add	r0, r0, #1
 374:	ldr	r1, [fp, #-8]
 378:	str	r0, [r1, #12]
 37c:	ldr	r0, [fp, #-8]
 380:	bl	c28 <calc_balanceamento>
 384:	str	r0, [fp, #-24]	; 0xffffffe8
 388:	ldr	r0, [fp, #-24]	; 0xffffffe8
 38c:	cmp	r0, #1
 390:	ble	3dc <avl_remove_impl+0x318>
 394:	ldr	r0, [fp, #-8]
 398:	ldr	r0, [r0, #8]
 39c:	bl	c28 <calc_balanceamento>
 3a0:	cmp	r0, #0
 3a4:	bge	3cc <avl_remove_impl+0x308>
 3a8:	ldr	r0, [fp, #-8]
 3ac:	ldr	r0, [r0, #8]
 3b0:	bl	a90 <roda_direita>
 3b4:	ldr	lr, [fp, #-8]
 3b8:	str	r0, [lr, #8]
 3bc:	ldr	r0, [fp, #-8]
 3c0:	bl	b5c <roda_esquerda>
 3c4:	str	r0, [fp, #-4]
 3c8:	b	43c <avl_remove_impl+0x378>
 3cc:	ldr	r0, [fp, #-8]
 3d0:	bl	b5c <roda_esquerda>
 3d4:	str	r0, [fp, #-4]
 3d8:	b	43c <avl_remove_impl+0x378>
 3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 3e0:	cmn	r0, #1
 3e4:	bge	430 <avl_remove_impl+0x36c>
 3e8:	ldr	r0, [fp, #-8]
 3ec:	ldr	r0, [r0, #4]
 3f0:	bl	c28 <calc_balanceamento>
 3f4:	cmp	r0, #0
 3f8:	ble	420 <avl_remove_impl+0x35c>
 3fc:	ldr	r0, [fp, #-8]
 400:	ldr	r0, [r0, #4]
 404:	bl	b5c <roda_esquerda>
 408:	ldr	lr, [fp, #-8]
 40c:	str	r0, [lr, #4]
 410:	ldr	r0, [fp, #-8]
 414:	bl	a90 <roda_direita>
 418:	str	r0, [fp, #-4]
 41c:	b	43c <avl_remove_impl+0x378>
 420:	ldr	r0, [fp, #-8]
 424:	bl	a90 <roda_direita>
 428:	str	r0, [fp, #-4]
 42c:	b	43c <avl_remove_impl+0x378>
 430:	b	434 <avl_remove_impl+0x370>
 434:	ldr	r0, [fp, #-8]
 438:	str	r0, [fp, #-4]
 43c:	ldr	r0, [fp, #-4]
 440:	mov	sp, fp
 444:	pop	{fp, pc}

00000448 <avl_pesquisa>:
 448:	push	{fp, lr}
 44c:	mov	fp, sp
 450:	sub	sp, sp, #16
 454:	str	r0, [sp, #8]
 458:	str	r1, [sp, #4]
 45c:	ldr	r0, [sp, #8]
 460:	movw	r1, #0
 464:	cmp	r0, r1
 468:	beq	47c <avl_pesquisa+0x34>
 46c:	ldr	r0, [sp, #4]
 470:	movw	r1, #0
 474:	cmp	r0, r1
 478:	bne	488 <avl_pesquisa+0x40>
 47c:	movw	r0, #0
 480:	str	r0, [fp, #-4]
 484:	b	49c <avl_pesquisa+0x54>
 488:	ldr	r0, [sp, #8]
 48c:	ldr	r0, [r0]
 490:	ldr	r1, [sp, #4]
 494:	bl	4a8 <avl_pesquisa_impl>
 498:	str	r0, [fp, #-4]
 49c:	ldr	r0, [fp, #-4]
 4a0:	mov	sp, fp
 4a4:	pop	{fp, pc}

000004a8 <avl_pesquisa_impl>:
 4a8:	push	{fp, lr}
 4ac:	mov	fp, sp
 4b0:	sub	sp, sp, #16
 4b4:	str	r0, [sp, #8]
 4b8:	str	r1, [sp, #4]
 4bc:	ldr	r0, [sp, #8]
 4c0:	movw	r1, #0
 4c4:	cmp	r0, r1
 4c8:	bne	4d8 <avl_pesquisa_impl+0x30>
 4cc:	movw	r0, #0
 4d0:	str	r0, [fp, #-4]
 4d4:	b	540 <avl_pesquisa_impl+0x98>
 4d8:	ldr	r0, [sp, #4]
 4dc:	ldr	r1, [sp, #8]
 4e0:	ldr	r1, [r1]
 4e4:	bl	0 <strcmp>
 4e8:	cmp	r0, #0
 4ec:	bge	508 <avl_pesquisa_impl+0x60>
 4f0:	ldr	r0, [sp, #8]
 4f4:	ldr	r0, [r0, #4]
 4f8:	ldr	r1, [sp, #4]
 4fc:	bl	4a8 <avl_pesquisa_impl>
 500:	str	r0, [fp, #-4]
 504:	b	540 <avl_pesquisa_impl+0x98>
 508:	ldr	r0, [sp, #4]
 50c:	ldr	r1, [sp, #8]
 510:	ldr	r1, [r1]
 514:	bl	0 <strcmp>
 518:	cmp	r0, #0
 51c:	ble	538 <avl_pesquisa_impl+0x90>
 520:	ldr	r0, [sp, #8]
 524:	ldr	r0, [r0, #8]
 528:	ldr	r1, [sp, #4]
 52c:	bl	4a8 <avl_pesquisa_impl>
 530:	str	r0, [fp, #-4]
 534:	b	540 <avl_pesquisa_impl+0x98>
 538:	ldr	r0, [sp, #8]
 53c:	str	r0, [fp, #-4]
 540:	ldr	r0, [fp, #-4]
 544:	mov	sp, fp
 548:	pop	{fp, pc}

0000054c <avl_insere>:
 54c:	push	{fp, lr}
 550:	mov	fp, sp
 554:	sub	sp, sp, #16
 558:	str	r0, [sp, #8]
 55c:	str	r1, [sp, #4]
 560:	ldr	r0, [sp, #8]
 564:	movw	r1, #0
 568:	cmp	r0, r1
 56c:	beq	580 <avl_insere+0x34>
 570:	ldr	r0, [sp, #4]
 574:	movw	r1, #0
 578:	cmp	r0, r1
 57c:	bne	58c <avl_insere+0x40>
 580:	mvn	r0, #0
 584:	str	r0, [fp, #-4]
 588:	b	5ac <avl_insere+0x60>
 58c:	ldr	r0, [sp, #8]
 590:	ldr	r0, [r0]
 594:	ldr	r1, [sp, #4]
 598:	bl	5b8 <avl_insere_impl>
 59c:	ldr	r1, [sp, #8]
 5a0:	str	r0, [r1]
 5a4:	movw	r0, #0
 5a8:	str	r0, [fp, #-4]
 5ac:	ldr	r0, [fp, #-4]
 5b0:	mov	sp, fp
 5b4:	pop	{fp, pc}

000005b8 <avl_insere_impl>:
 5b8:	push	{fp, lr}
 5bc:	mov	fp, sp
 5c0:	sub	sp, sp, #24
 5c4:	str	r0, [fp, #-8]
 5c8:	str	r1, [sp, #12]
 5cc:	ldr	r0, [fp, #-8]
 5d0:	movw	r1, #0
 5d4:	cmp	r0, r1
 5d8:	bne	5ec <avl_insere_impl+0x34>
 5dc:	ldr	r0, [sp, #12]
 5e0:	bl	a14 <avl_novo_no>
 5e4:	str	r0, [fp, #-4]
 5e8:	b	764 <avl_insere_impl+0x1ac>
 5ec:	ldr	r0, [sp, #12]
 5f0:	ldr	r1, [fp, #-8]
 5f4:	ldr	r1, [r1]
 5f8:	bl	0 <strcmp>
 5fc:	cmp	r0, #0
 600:	bge	620 <avl_insere_impl+0x68>
 604:	ldr	r0, [fp, #-8]
 608:	ldr	r0, [r0, #4]
 60c:	ldr	r1, [sp, #12]
 610:	bl	5b8 <avl_insere_impl>
 614:	ldr	r1, [fp, #-8]
 618:	str	r0, [r1, #4]
 61c:	b	664 <avl_insere_impl+0xac>
 620:	ldr	r0, [sp, #12]
 624:	ldr	r1, [fp, #-8]
 628:	ldr	r1, [r1]
 62c:	bl	0 <strcmp>
 630:	cmp	r0, #0
 634:	ble	654 <avl_insere_impl+0x9c>
 638:	ldr	r0, [fp, #-8]
 63c:	ldr	r0, [r0, #8]
 640:	ldr	r1, [sp, #12]
 644:	bl	5b8 <avl_insere_impl>
 648:	ldr	r1, [fp, #-8]
 64c:	str	r0, [r1, #8]
 650:	b	660 <avl_insere_impl+0xa8>
 654:	ldr	r0, [fp, #-8]
 658:	str	r0, [fp, #-4]
 65c:	b	764 <avl_insere_impl+0x1ac>
 660:	b	664 <avl_insere_impl+0xac>
 664:	ldr	r0, [fp, #-8]
 668:	ldr	r0, [r0, #4]
 66c:	bl	99c <avl_altura>
 670:	ldr	lr, [fp, #-8]
 674:	ldr	lr, [lr, #8]
 678:	str	r0, [sp, #4]
 67c:	mov	r0, lr
 680:	bl	99c <avl_altura>
 684:	ldr	lr, [sp, #4]
 688:	str	r0, [sp]
 68c:	mov	r0, lr
 690:	ldr	r1, [sp]
 694:	bl	9d8 <max>
 698:	add	r0, r0, #1
 69c:	ldr	r1, [fp, #-8]
 6a0:	str	r0, [r1, #12]
 6a4:	ldr	r0, [fp, #-8]
 6a8:	bl	c28 <calc_balanceamento>
 6ac:	str	r0, [sp, #8]
 6b0:	ldr	r0, [sp, #8]
 6b4:	cmp	r0, #1
 6b8:	ble	704 <avl_insere_impl+0x14c>
 6bc:	ldr	r0, [fp, #-8]
 6c0:	ldr	r0, [r0, #8]
 6c4:	bl	c28 <calc_balanceamento>
 6c8:	cmp	r0, #0
 6cc:	bge	6f4 <avl_insere_impl+0x13c>
 6d0:	ldr	r0, [fp, #-8]
 6d4:	ldr	r0, [r0, #8]
 6d8:	bl	a90 <roda_direita>
 6dc:	ldr	lr, [fp, #-8]
 6e0:	str	r0, [lr, #8]
 6e4:	ldr	r0, [fp, #-8]
 6e8:	bl	b5c <roda_esquerda>
 6ec:	str	r0, [fp, #-4]
 6f0:	b	764 <avl_insere_impl+0x1ac>
 6f4:	ldr	r0, [fp, #-8]
 6f8:	bl	b5c <roda_esquerda>
 6fc:	str	r0, [fp, #-4]
 700:	b	764 <avl_insere_impl+0x1ac>
 704:	ldr	r0, [sp, #8]
 708:	cmn	r0, #1
 70c:	bge	758 <avl_insere_impl+0x1a0>
 710:	ldr	r0, [fp, #-8]
 714:	ldr	r0, [r0, #4]
 718:	bl	c28 <calc_balanceamento>
 71c:	cmp	r0, #0
 720:	ble	748 <avl_insere_impl+0x190>
 724:	ldr	r0, [fp, #-8]
 728:	ldr	r0, [r0, #4]
 72c:	bl	b5c <roda_esquerda>
 730:	ldr	lr, [fp, #-8]
 734:	str	r0, [lr, #4]
 738:	ldr	r0, [fp, #-8]
 73c:	bl	a90 <roda_direita>
 740:	str	r0, [fp, #-4]
 744:	b	764 <avl_insere_impl+0x1ac>
 748:	ldr	r0, [fp, #-8]
 74c:	bl	a90 <roda_direita>
 750:	str	r0, [fp, #-4]
 754:	b	764 <avl_insere_impl+0x1ac>
 758:	b	75c <avl_insere_impl+0x1a4>
 75c:	ldr	r0, [fp, #-8]
 760:	str	r0, [fp, #-4]
 764:	ldr	r0, [fp, #-4]
 768:	mov	sp, fp
 76c:	pop	{fp, pc}

00000770 <avl_remove>:
 770:	push	{fp, lr}
 774:	mov	fp, sp
 778:	sub	sp, sp, #16
 77c:	str	r0, [sp, #8]
 780:	str	r1, [sp, #4]
 784:	ldr	r0, [sp, #8]
 788:	movw	r1, #0
 78c:	cmp	r0, r1
 790:	beq	7a4 <avl_remove+0x34>
 794:	ldr	r0, [sp, #4]
 798:	movw	r1, #0
 79c:	cmp	r0, r1
 7a0:	bne	7b0 <avl_remove+0x40>
 7a4:	mvn	r0, #0
 7a8:	str	r0, [fp, #-4]
 7ac:	b	7d0 <avl_remove+0x60>
 7b0:	ldr	r0, [sp, #8]
 7b4:	ldr	r0, [r0]
 7b8:	ldr	r1, [sp, #4]
 7bc:	bl	c4 <avl_remove_impl>
 7c0:	ldr	r1, [sp, #8]
 7c4:	str	r0, [r1]
 7c8:	movw	r0, #0
 7cc:	str	r0, [fp, #-4]
 7d0:	ldr	r0, [fp, #-4]
 7d4:	mov	sp, fp
 7d8:	pop	{fp, pc}

000007dc <avl_min>:
 7dc:	push	{fp, lr}
 7e0:	mov	fp, sp
 7e4:	sub	sp, sp, #8
 7e8:	str	r0, [sp]
 7ec:	ldr	r0, [sp]
 7f0:	movw	r1, #0
 7f4:	cmp	r0, r1
 7f8:	bne	808 <avl_min+0x2c>
 7fc:	movw	r0, #0
 800:	str	r0, [sp, #4]
 804:	b	81c <avl_min+0x40>
 808:	ldr	r0, [sp]
 80c:	ldr	r0, [r0]
 810:	bl	828 <avl_no_valormin>
 814:	ldr	r0, [r0]
 818:	str	r0, [sp, #4]
 81c:	ldr	r0, [sp, #4]
 820:	mov	sp, fp
 824:	pop	{fp, pc}

00000828 <avl_no_valormin>:
 828:	sub	sp, sp, #8
 82c:	str	r0, [sp, #4]
 830:	ldr	r0, [sp, #4]
 834:	str	r0, [sp]
 838:	ldr	r0, [sp]
 83c:	ldr	r0, [r0, #4]
 840:	movw	r1, #0
 844:	cmp	r0, r1
 848:	beq	85c <avl_no_valormin+0x34>
 84c:	ldr	r0, [sp]
 850:	ldr	r0, [r0, #4]
 854:	str	r0, [sp]
 858:	b	838 <avl_no_valormin+0x10>
 85c:	ldr	r0, [sp]
 860:	add	sp, sp, #8
 864:	bx	lr

00000868 <avl_max>:
 868:	push	{fp, lr}
 86c:	mov	fp, sp
 870:	sub	sp, sp, #8
 874:	str	r0, [sp]
 878:	ldr	r0, [sp]
 87c:	movw	r1, #0
 880:	cmp	r0, r1
 884:	bne	894 <avl_max+0x2c>
 888:	movw	r0, #0
 88c:	str	r0, [sp, #4]
 890:	b	8a8 <avl_max+0x40>
 894:	ldr	r0, [sp]
 898:	ldr	r0, [r0]
 89c:	bl	8b4 <avl_no_valormax>
 8a0:	ldr	r0, [r0]
 8a4:	str	r0, [sp, #4]
 8a8:	ldr	r0, [sp, #4]
 8ac:	mov	sp, fp
 8b0:	pop	{fp, pc}

000008b4 <avl_no_valormax>:
 8b4:	sub	sp, sp, #8
 8b8:	str	r0, [sp, #4]
 8bc:	ldr	r0, [sp, #4]
 8c0:	str	r0, [sp]
 8c4:	ldr	r0, [sp]
 8c8:	ldr	r0, [r0, #8]
 8cc:	movw	r1, #0
 8d0:	cmp	r0, r1
 8d4:	beq	8e8 <avl_no_valormax+0x34>
 8d8:	ldr	r0, [sp]
 8dc:	ldr	r0, [r0, #8]
 8e0:	str	r0, [sp]
 8e4:	b	8c4 <avl_no_valormax+0x10>
 8e8:	ldr	r0, [sp]
 8ec:	add	sp, sp, #8
 8f0:	bx	lr

000008f4 <avl_imprime>:
 8f4:	push	{fp, lr}
 8f8:	mov	fp, sp
 8fc:	sub	sp, sp, #8
 900:	str	r0, [sp, #4]
 904:	ldr	r0, [sp, #4]
 908:	movw	r1, #0
 90c:	cmp	r0, r1
 910:	bne	918 <avl_imprime+0x24>
 914:	b	934 <avl_imprime+0x40>
 918:	ldr	r0, [sp, #4]
 91c:	ldr	r0, [r0]
 920:	bl	93c <avl_preordem_impl>
 924:	movw	r0, #0
 928:	movt	r0, #0
 92c:	bl	0 <printf>
 930:	str	r0, [sp]
 934:	mov	sp, fp
 938:	pop	{fp, pc}

0000093c <avl_preordem_impl>:
 93c:	push	{fp, lr}
 940:	mov	fp, sp
 944:	sub	sp, sp, #8
 948:	str	r0, [sp, #4]
 94c:	ldr	r0, [sp, #4]
 950:	movw	r1, #0
 954:	cmp	r0, r1
 958:	bne	960 <avl_preordem_impl+0x24>
 95c:	b	994 <avl_preordem_impl+0x58>
 960:	ldr	r0, [sp, #4]
 964:	ldr	r1, [r0]
 968:	movw	r0, #0
 96c:	movt	r0, #0
 970:	bl	0 <printf>
 974:	ldr	r1, [sp, #4]
 978:	ldr	r1, [r1, #4]
 97c:	str	r0, [sp]
 980:	mov	r0, r1
 984:	bl	93c <avl_preordem_impl>
 988:	ldr	r0, [sp, #4]
 98c:	ldr	r0, [r0, #8]
 990:	bl	93c <avl_preordem_impl>
 994:	mov	sp, fp
 998:	pop	{fp, pc}

0000099c <avl_altura>:
 99c:	sub	sp, sp, #8
 9a0:	str	r0, [sp]
 9a4:	ldr	r0, [sp]
 9a8:	movw	r1, #0
 9ac:	cmp	r0, r1
 9b0:	bne	9c0 <avl_altura+0x24>
 9b4:	mvn	r0, #0
 9b8:	str	r0, [sp, #4]
 9bc:	b	9cc <avl_altura+0x30>
 9c0:	ldr	r0, [sp]
 9c4:	ldr	r0, [r0, #12]
 9c8:	str	r0, [sp, #4]
 9cc:	ldr	r0, [sp, #4]
 9d0:	add	sp, sp, #8
 9d4:	bx	lr

000009d8 <max>:
 9d8:	sub	sp, sp, #12
 9dc:	str	r0, [sp, #8]
 9e0:	str	r1, [sp, #4]
 9e4:	ldr	r0, [sp, #8]
 9e8:	ldr	r1, [sp, #4]
 9ec:	cmp	r0, r1
 9f0:	ble	a00 <max+0x28>
 9f4:	ldr	r0, [sp, #8]
 9f8:	str	r0, [sp]
 9fc:	b	a08 <max+0x30>
 a00:	ldr	r0, [sp, #4]
 a04:	str	r0, [sp]
 a08:	ldr	r0, [sp]
 a0c:	add	sp, sp, #12
 a10:	bx	lr

00000a14 <avl_novo_no>:
 a14:	push	{fp, lr}
 a18:	mov	fp, sp
 a1c:	sub	sp, sp, #16
 a20:	str	r0, [fp, #-4]
 a24:	mov	r0, #16
 a28:	bl	0 <malloc>
 a2c:	str	r0, [sp, #8]
 a30:	ldr	r0, [fp, #-4]
 a34:	bl	0 <strlen>
 a38:	add	r0, r0, #1
 a3c:	mov	lr, r0
 a40:	str	lr, [sp, #4]
 a44:	bl	0 <malloc>
 a48:	ldr	lr, [sp, #8]
 a4c:	str	r0, [lr]
 a50:	ldr	r0, [sp, #8]
 a54:	ldr	r0, [r0]
 a58:	ldr	r1, [fp, #-4]
 a5c:	bl	0 <strcpy>
 a60:	ldr	r1, [sp, #8]
 a64:	movw	lr, #0
 a68:	str	lr, [r1, #4]
 a6c:	ldr	r1, [sp, #8]
 a70:	str	lr, [r1, #8]
 a74:	ldr	r1, [sp, #8]
 a78:	str	lr, [r1, #12]
 a7c:	ldr	r1, [sp, #8]
 a80:	str	r0, [sp]
 a84:	mov	r0, r1
 a88:	mov	sp, fp
 a8c:	pop	{fp, pc}

00000a90 <roda_direita>:
 a90:	push	{fp, lr}
 a94:	mov	fp, sp
 a98:	sub	sp, sp, #32
 a9c:	str	r0, [fp, #-4]
 aa0:	ldr	r0, [fp, #-4]
 aa4:	ldr	r0, [r0, #4]
 aa8:	str	r0, [fp, #-8]
 aac:	ldr	r0, [fp, #-8]
 ab0:	ldr	r0, [r0, #8]
 ab4:	str	r0, [fp, #-12]
 ab8:	ldr	r0, [fp, #-4]
 abc:	ldr	r1, [fp, #-8]
 ac0:	str	r0, [r1, #8]
 ac4:	ldr	r0, [fp, #-12]
 ac8:	ldr	r1, [fp, #-4]
 acc:	str	r0, [r1, #4]
 ad0:	ldr	r0, [fp, #-4]
 ad4:	ldr	r0, [r0, #4]
 ad8:	bl	99c <avl_altura>
 adc:	ldr	r1, [fp, #-4]
 ae0:	ldr	r1, [r1, #8]
 ae4:	str	r0, [sp, #16]
 ae8:	mov	r0, r1
 aec:	bl	99c <avl_altura>
 af0:	ldr	r1, [sp, #16]
 af4:	str	r0, [sp, #12]
 af8:	mov	r0, r1
 afc:	ldr	r1, [sp, #12]
 b00:	bl	9d8 <max>
 b04:	add	r0, r0, #1
 b08:	ldr	r1, [fp, #-4]
 b0c:	str	r0, [r1, #12]
 b10:	ldr	r0, [fp, #-8]
 b14:	ldr	r0, [r0, #4]
 b18:	bl	99c <avl_altura>
 b1c:	ldr	r1, [fp, #-8]
 b20:	ldr	r1, [r1, #8]
 b24:	str	r0, [sp, #8]
 b28:	mov	r0, r1
 b2c:	bl	99c <avl_altura>
 b30:	ldr	r1, [sp, #8]
 b34:	str	r0, [sp, #4]
 b38:	mov	r0, r1
 b3c:	ldr	r1, [sp, #4]
 b40:	bl	9d8 <max>
 b44:	add	r0, r0, #1
 b48:	ldr	r1, [fp, #-8]
 b4c:	str	r0, [r1, #12]
 b50:	ldr	r0, [fp, #-8]
 b54:	mov	sp, fp
 b58:	pop	{fp, pc}

00000b5c <roda_esquerda>:
 b5c:	push	{fp, lr}
 b60:	mov	fp, sp
 b64:	sub	sp, sp, #32
 b68:	str	r0, [fp, #-4]
 b6c:	ldr	r0, [fp, #-4]
 b70:	ldr	r0, [r0, #8]
 b74:	str	r0, [fp, #-8]
 b78:	ldr	r0, [fp, #-8]
 b7c:	ldr	r0, [r0, #4]
 b80:	str	r0, [fp, #-12]
 b84:	ldr	r0, [fp, #-4]
 b88:	ldr	r1, [fp, #-8]
 b8c:	str	r0, [r1, #4]
 b90:	ldr	r0, [fp, #-12]
 b94:	ldr	r1, [fp, #-4]
 b98:	str	r0, [r1, #8]
 b9c:	ldr	r0, [fp, #-4]
 ba0:	ldr	r0, [r0, #4]
 ba4:	bl	99c <avl_altura>
 ba8:	ldr	r1, [fp, #-4]
 bac:	ldr	r1, [r1, #8]
 bb0:	str	r0, [sp, #16]
 bb4:	mov	r0, r1
 bb8:	bl	99c <avl_altura>
 bbc:	ldr	r1, [sp, #16]
 bc0:	str	r0, [sp, #12]
 bc4:	mov	r0, r1
 bc8:	ldr	r1, [sp, #12]
 bcc:	bl	9d8 <max>
 bd0:	add	r0, r0, #1
 bd4:	ldr	r1, [fp, #-4]
 bd8:	str	r0, [r1, #12]
 bdc:	ldr	r0, [fp, #-8]
 be0:	ldr	r0, [r0, #4]
 be4:	bl	99c <avl_altura>
 be8:	ldr	r1, [fp, #-8]
 bec:	ldr	r1, [r1, #8]
 bf0:	str	r0, [sp, #8]
 bf4:	mov	r0, r1
 bf8:	bl	99c <avl_altura>
 bfc:	ldr	r1, [sp, #8]
 c00:	str	r0, [sp, #4]
 c04:	mov	r0, r1
 c08:	ldr	r1, [sp, #4]
 c0c:	bl	9d8 <max>
 c10:	add	r0, r0, #1
 c14:	ldr	r1, [fp, #-8]
 c18:	str	r0, [r1, #12]
 c1c:	ldr	r0, [fp, #-8]
 c20:	mov	sp, fp
 c24:	pop	{fp, pc}

00000c28 <calc_balanceamento>:
 c28:	push	{fp, lr}
 c2c:	mov	fp, sp
 c30:	sub	sp, sp, #16
 c34:	str	r0, [sp, #8]
 c38:	ldr	r0, [sp, #8]
 c3c:	movw	r1, #0
 c40:	cmp	r0, r1
 c44:	bne	c54 <calc_balanceamento+0x2c>
 c48:	movw	r0, #0
 c4c:	str	r0, [fp, #-4]
 c50:	b	c80 <calc_balanceamento+0x58>
 c54:	ldr	r0, [sp, #8]
 c58:	ldr	r0, [r0, #8]
 c5c:	bl	99c <avl_altura>
 c60:	ldr	lr, [sp, #8]
 c64:	ldr	lr, [lr, #4]
 c68:	str	r0, [sp, #4]
 c6c:	mov	r0, lr
 c70:	bl	99c <avl_altura>
 c74:	ldr	lr, [sp, #4]
 c78:	sub	r0, lr, r0
 c7c:	str	r0, [fp, #-4]
 c80:	ldr	r0, [fp, #-4]
 c84:	mov	sp, fp
 c88:	pop	{fp, pc}
