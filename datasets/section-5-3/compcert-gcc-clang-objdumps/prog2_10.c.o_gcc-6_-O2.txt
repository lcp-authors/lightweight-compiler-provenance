
../compcert-repos/prog2/CMakeFiles/0.10.dir/Aula00_Conceitos_base/10.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <nova_tarefa>:
   0:	push	{lr}		; (str lr, [sp, #-4]!)
   4:	sub	sp, sp, #12
   8:	add	r3, r0, #64	; 0x40
   c:	mov	r1, r0
  10:	str	r3, [sp]
  14:	add	r2, r0, #30
  18:	add	r3, r0, #60	; 0x3c
  1c:	ldr	r0, [pc, #20]	; 38 <nova_tarefa+0x38>
  20:	bl	0 <__isoc99_scanf>
  24:	sub	r0, r0, #4
  28:	clz	r0, r0
  2c:	lsr	r0, r0, #5
  30:	add	sp, sp, #12
  34:	pop	{pc}		; (ldr pc, [sp], #4)
  38:	.word	0x00000000

0000003c <ler_tarefas>:
  3c:	push	{r4, r5, r6, lr}
  40:	mov	r4, r0
  44:	ldr	r6, [pc, #72]	; 94 <ler_tarefas+0x58>
  48:	sub	sp, sp, #8
  4c:	mov	r5, #0
  50:	add	r3, r4, #64	; 0x40
  54:	str	r3, [sp]
  58:	add	r2, r4, #30
  5c:	add	r3, r4, #60	; 0x3c
  60:	mov	r1, r4
  64:	mov	r0, r6
  68:	bl	0 <__isoc99_scanf>
  6c:	cmp	r0, #4
  70:	beq	80 <ler_tarefas+0x44>
  74:	mov	r0, r5
  78:	add	sp, sp, #8
  7c:	pop	{r4, r5, r6, pc}
  80:	cmp	r5, #100	; 0x64
  84:	add	r4, r4, #68	; 0x44
  88:	beq	74 <ler_tarefas+0x38>
  8c:	add	r5, r5, #1
  90:	b	50 <ler_tarefas+0x14>
  94:	.word	0x00000000

00000098 <lista_tarefas>:
  98:	push	{r4, r5, r6, r7, lr}
  9c:	subs	r6, r1, #0
  a0:	sub	sp, sp, #12
  a4:	ble	e0 <lista_tarefas+0x48>
  a8:	ldr	r7, [pc, #56]	; e8 <lista_tarefas+0x50>
  ac:	mov	r4, r0
  b0:	mov	r5, #0
  b4:	ldr	r2, [r4, #64]	; 0x40
  b8:	ldr	r3, [r4, #60]	; 0x3c
  bc:	mov	r1, r4
  c0:	str	r2, [sp]
  c4:	add	r5, r5, #1
  c8:	add	r2, r4, #30
  cc:	mov	r0, r7
  d0:	bl	0 <printf>
  d4:	cmp	r6, r5
  d8:	add	r4, r4, #68	; 0x44
  dc:	bne	b4 <lista_tarefas+0x1c>
  e0:	add	sp, sp, #12
  e4:	pop	{r4, r5, r6, r7, pc}
  e8:	.word	0x0000000c

000000ec <analisa_tarefas>:
  ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  f0:	subs	r9, r1, #0
  f4:	ble	15c <analisa_tarefas+0x70>
  f8:	add	r8, r9, r9, lsl #4
  fc:	mov	r3, #0
 100:	mov	r7, r2
 104:	mov	r4, r0
 108:	add	r8, r0, r8, lsl #2
 10c:	mov	r6, r3
 110:	mov	sl, #68	; 0x44
 114:	ldr	r5, [r4, #60]	; 0x3c
 118:	mov	r1, r4
 11c:	cmp	r5, r3
 120:	mov	r2, sl
 124:	mov	r0, r7
 128:	add	r4, r4, #68	; 0x44
 12c:	add	r6, r6, r5
 130:	ble	13c <analisa_tarefas+0x50>
 134:	bl	0 <memcpy>
 138:	mov	r3, r5
 13c:	cmp	r4, r8
 140:	bne	114 <analisa_tarefas+0x28>
 144:	vmov	s15, r6
 148:	vmov	s14, r9
 14c:	vcvt.f32.s32	s15, s15
 150:	vcvt.f32.s32	s0, s14
 154:	vdiv.f32	s0, s15, s0
 158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 15c:	vldr	s0, [pc, #4]	; 168 <analisa_tarefas+0x7c>
 160:	vmov.f32	s15, s0
 164:	b	154 <analisa_tarefas+0x68>
 168:	.word	0x00000000

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, lr}
   4:	sub	sp, sp, #6848	; 0x1ac0
   8:	sub	sp, sp, #32
   c:	add	r3, sp, #80	; 0x50
  10:	mov	r0, r3
  14:	str	r3, [sp]
  18:	bl	3c <main+0x3c>
  1c:	mov	r4, r0
  20:	mov	r1, r0
  24:	ldr	r0, [sp]
  28:	bl	98 <lista_tarefas>
  2c:	mov	r1, r4
  30:	ldr	r0, [pc, #68]	; 7c <main+0x7c>
  34:	bl	0 <printf>
  38:	add	r3, sp, #12
  3c:	mov	r1, r4
  40:	ldr	r0, [sp]
  44:	mov	r2, r3
  48:	str	r3, [sp, #4]
  4c:	bl	ec <analisa_tarefas>
  50:	ldr	r0, [pc, #40]	; 80 <main+0x80>
  54:	vcvt.f64.f32	d7, s0
  58:	vmov	r2, r3, d7
  5c:	bl	0 <printf>
  60:	ldr	r1, [sp, #4]
  64:	ldr	r0, [pc, #24]	; 84 <main+0x84>
  68:	bl	0 <printf>
  6c:	mov	r0, #0
  70:	add	sp, sp, #6848	; 0x1ac0
  74:	add	sp, sp, #32
  78:	pop	{r4, pc}
  7c:	.word	0x0000001c
  80:	.word	0x0000003c
  84:	.word	0x00000060
