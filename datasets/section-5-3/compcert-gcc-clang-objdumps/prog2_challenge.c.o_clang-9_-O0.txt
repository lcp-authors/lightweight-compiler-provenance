
../compcert-repos/prog2/CMakeFiles/6.Challenge.dir/Aula06_Challenge/challenge.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #40	; 0x28
   c:	movw	r0, #0
  10:	str	r0, [fp, #-4]
  14:	movw	r0, #0
  18:	movt	r0, #0
  1c:	sub	r1, fp, #8
  20:	bl	0 <__isoc99_scanf>
  24:	ldr	r1, [fp, #-8]
  28:	cmp	r1, #0
  2c:	bne	38 <main+0x38>
  30:	movw	r0, #0
  34:	bl	0 <exit>
  38:	ldr	r0, [fp, #-8]
  3c:	lsl	r1, r0, #1
  40:	lsl	r0, r0, #3
  44:	str	r1, [sp, #8]
  48:	bl	0 <malloc>
  4c:	str	r0, [sp, #16]
  50:	movw	r0, #0
  54:	str	r0, [fp, #-16]
  58:	ldr	r1, [fp, #-8]
  5c:	sub	r1, r1, #1
  60:	str	r1, [sp, #20]
  64:	str	r0, [fp, #-12]
  68:	ldr	r0, [fp, #-12]
  6c:	ldr	r1, [fp, #-8]
  70:	cmp	r0, r1
  74:	bge	9c <main+0x9c>
  78:	ldr	r0, [fp, #-12]
  7c:	add	r1, r0, #1
  80:	ldr	r2, [sp, #16]
  84:	add	r0, r2, r0, lsl #2
  88:	str	r1, [r0]
  8c:	ldr	r0, [fp, #-12]
  90:	add	r0, r0, #1
  94:	str	r0, [fp, #-12]
  98:	b	68 <main+0x68>
  9c:	ldr	r0, [fp, #-8]
  a0:	str	r0, [sp, #12]
  a4:	movw	r0, #0
  a8:	movt	r0, #0
  ac:	bl	0 <printf>
  b0:	ldr	r0, [sp, #12]
  b4:	cmp	r0, #2
  b8:	ble	124 <main+0x124>
  bc:	ldr	r0, [sp, #16]
  c0:	ldr	r1, [fp, #-16]
  c4:	ldr	r1, [r0, r1, lsl #2]
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <printf>
  d4:	ldr	r1, [fp, #-16]
  d8:	add	r1, r1, #1
  dc:	str	r1, [fp, #-16]
  e0:	ldr	r1, [sp, #20]
  e4:	add	r1, r1, #1
  e8:	str	r1, [sp, #20]
  ec:	ldr	r1, [sp, #16]
  f0:	ldr	r2, [fp, #-16]
  f4:	ldr	r2, [r1, r2, lsl #2]
  f8:	ldr	r3, [sp, #20]
  fc:	add	r1, r1, r3, lsl #2
 100:	str	r2, [r1]
 104:	ldr	r1, [fp, #-16]
 108:	add	r1, r1, #1
 10c:	str	r1, [fp, #-16]
 110:	ldr	r1, [sp, #12]
 114:	mvn	r2, #0
 118:	add	r1, r1, r2
 11c:	str	r1, [sp, #12]
 120:	b	b0 <main+0xb0>
 124:	ldr	r0, [sp, #16]
 128:	ldr	r1, [fp, #-16]
 12c:	add	r2, r1, #1
 130:	str	r2, [fp, #-16]
 134:	ldr	r1, [r0, r1, lsl #2]
 138:	movw	r0, #0
 13c:	movt	r0, #0
 140:	bl	0 <printf>
 144:	movw	r1, #0
 148:	movt	r1, #0
 14c:	str	r0, [sp, #4]
 150:	mov	r0, r1
 154:	bl	0 <printf>
 158:	ldr	r1, [sp, #16]
 15c:	ldr	r2, [fp, #-16]
 160:	add	r1, r1, r2, lsl #2
 164:	ldr	r1, [r1]
 168:	movw	r2, #0
 16c:	movt	r2, #0
 170:	str	r0, [sp]
 174:	mov	r0, r2
 178:	bl	0 <printf>
 17c:	b	14 <main+0x14>
