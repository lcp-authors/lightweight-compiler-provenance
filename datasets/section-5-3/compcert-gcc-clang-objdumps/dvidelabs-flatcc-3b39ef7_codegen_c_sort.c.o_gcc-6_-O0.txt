
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_sort.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <error_tok_2>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #24
   c:	str	r0, [fp, #-8]
  10:	str	r1, [fp, #-12]
  14:	str	r2, [fp, #-16]
  18:	str	r3, [fp, #-20]	; 0xffffffec
  1c:	mov	r3, #0
  20:	str	r3, [sp, #4]
  24:	mov	r3, #0
  28:	str	r3, [sp]
  2c:	ldr	r3, [fp, #-20]	; 0xffffffec
  30:	ldr	r2, [fp, #-16]
  34:	ldr	r1, [fp, #-12]
  38:	ldr	r0, [fp, #-8]
  3c:	bl	0 <__flatcc_error_report>
  40:	nop			; (mov r0, r0)
  44:	sub	sp, fp, #4
  48:	pop	{fp, pc}

0000004c <__flatcc_gen_sort>:
  4c:	push	{r4, r5, fp, lr}
  50:	add	fp, sp, #12
  54:	sub	sp, sp, #32
  58:	str	r0, [fp, #-16]
  5c:	ldr	r3, [fp, #-16]
  60:	ldr	r3, [r3, #204]	; 0xcc
  64:	ldr	r2, [fp, #-16]
  68:	ldr	r1, [pc, #392]	; 1f8 <__flatcc_gen_sort+0x1ac>
  6c:	mov	r0, r3
  70:	bl	0 <fprintf>
  74:	ldr	r3, [fp, #-16]
  78:	ldr	r0, [r3, #204]	; 0xcc
  7c:	ldr	r2, [fp, #-16]
  80:	ldr	r3, [fp, #-16]
  84:	ldr	r1, [pc, #368]	; 1fc <__flatcc_gen_sort+0x1b0>
  88:	bl	0 <fprintf>
  8c:	ldr	r3, [fp, #-16]
  90:	ldr	r0, [r3, #204]	; 0xcc
  94:	ldr	r2, [fp, #-16]
  98:	ldr	r1, [fp, #-16]
  9c:	ldr	r3, [fp, #-16]
  a0:	str	r3, [sp]
  a4:	mov	r3, r1
  a8:	ldr	r1, [pc, #336]	; 200 <__flatcc_gen_sort+0x1b4>
  ac:	bl	0 <fprintf>
  b0:	ldr	r3, [fp, #-16]
  b4:	ldr	r0, [r3, #204]	; 0xcc
  b8:	ldr	r1, [fp, #-16]
  bc:	ldr	ip, [fp, #-16]
  c0:	ldr	r3, [fp, #-16]
  c4:	ldr	r2, [fp, #-16]
  c8:	str	r2, [sp, #4]
  cc:	str	r3, [sp]
  d0:	mov	r3, ip
  d4:	mov	r2, r1
  d8:	ldr	r1, [pc, #292]	; 204 <__flatcc_gen_sort+0x1b8>
  dc:	bl	0 <fprintf>
  e0:	ldr	r3, [fp, #-16]
  e4:	ldr	r0, [r3, #204]	; 0xcc
  e8:	ldr	r2, [fp, #-16]
  ec:	ldr	r3, [fp, #-16]
  f0:	ldr	r1, [pc, #272]	; 208 <__flatcc_gen_sort+0x1bc>
  f4:	bl	0 <fprintf>
  f8:	ldr	r3, [fp, #-16]
  fc:	ldr	r0, [r3, #204]	; 0xcc
 100:	ldr	r1, [fp, #-16]
 104:	ldr	ip, [fp, #-16]
 108:	ldr	r3, [fp, #-16]
 10c:	ldr	r2, [fp, #-16]
 110:	str	r2, [sp, #4]
 114:	str	r3, [sp]
 118:	mov	r3, ip
 11c:	mov	r2, r1
 120:	ldr	r1, [pc, #228]	; 20c <__flatcc_gen_sort+0x1c0>
 124:	bl	0 <fprintf>
 128:	ldr	r3, [fp, #-16]
 12c:	ldr	ip, [r3, #204]	; 0xcc
 130:	ldr	lr, [fp, #-16]
 134:	ldr	r4, [fp, #-16]
 138:	ldr	r3, [fp, #-16]
 13c:	ldr	r2, [fp, #-16]
 140:	ldr	r1, [fp, #-16]
 144:	ldr	r0, [fp, #-16]
 148:	str	r0, [sp, #12]
 14c:	str	r1, [sp, #8]
 150:	str	r2, [sp, #4]
 154:	str	r3, [sp]
 158:	mov	r3, r4
 15c:	mov	r2, lr
 160:	ldr	r1, [pc, #168]	; 210 <__flatcc_gen_sort+0x1c4>
 164:	mov	r0, ip
 168:	bl	0 <fprintf>
 16c:	ldr	r3, [fp, #-16]
 170:	ldr	r0, [r3, #204]	; 0xcc
 174:	ldr	r1, [fp, #-16]
 178:	ldr	ip, [fp, #-16]
 17c:	ldr	r3, [fp, #-16]
 180:	ldr	r2, [fp, #-16]
 184:	str	r2, [sp, #4]
 188:	str	r3, [sp]
 18c:	mov	r3, ip
 190:	mov	r2, r1
 194:	ldr	r1, [pc, #120]	; 214 <__flatcc_gen_sort+0x1c8>
 198:	bl	0 <fprintf>
 19c:	ldr	r3, [fp, #-16]
 1a0:	ldr	lr, [r3, #204]	; 0xcc
 1a4:	ldr	r4, [fp, #-16]
 1a8:	ldr	r5, [fp, #-16]
 1ac:	ldr	r3, [fp, #-16]
 1b0:	ldr	r2, [fp, #-16]
 1b4:	ldr	r1, [fp, #-16]
 1b8:	ldr	r0, [fp, #-16]
 1bc:	ldr	ip, [fp, #-16]
 1c0:	str	ip, [sp, #16]
 1c4:	str	r0, [sp, #12]
 1c8:	str	r1, [sp, #8]
 1cc:	str	r2, [sp, #4]
 1d0:	str	r3, [sp]
 1d4:	mov	r3, r5
 1d8:	mov	r2, r4
 1dc:	ldr	r1, [pc, #52]	; 218 <__flatcc_gen_sort+0x1cc>
 1e0:	mov	r0, lr
 1e4:	bl	0 <fprintf>
 1e8:	mov	r3, #0
 1ec:	mov	r0, r3
 1f0:	sub	sp, fp, #12
 1f4:	pop	{r4, r5, fp, pc}
 1f8:	.word	0x00000000
 1fc:	.word	0x000003d0
 200:	.word	0x000004e0
 204:	.word	0x000005b4
 208:	.word	0x00000648
 20c:	.word	0x000007e0
 210:	.word	0x00000868
 214:	.word	0x000008f8
 218:	.word	0x0000095c
