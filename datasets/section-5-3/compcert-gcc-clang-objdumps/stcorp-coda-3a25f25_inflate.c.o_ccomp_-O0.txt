
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	cmp	r0, #0
      18:	beq	30 <coda_inflateResetKeep+0x30>
      1c:	ldr	r3, [r0, #28]
      20:	cmp	r3, #0
      24:	moveq	r1, #1
      28:	movne	r1, #0
      2c:	b	34 <coda_inflateResetKeep+0x34>
      30:	mov	r1, #1
      34:	cmp	r1, #0
      38:	beq	44 <coda_inflateResetKeep+0x44>
      3c:	mvn	r0, #1
      40:	b	dc <coda_inflateResetKeep+0xdc>
      44:	ldr	r4, [r0, #28]
      48:	mov	r1, #0
      4c:	str	r1, [r4, #28]
      50:	str	r1, [r0, #20]
      54:	str	r1, [r0, #8]
      58:	mov	ip, #0
      5c:	str	ip, [r0, #24]
      60:	ldr	r1, [r4, #8]
      64:	cmp	r1, #0
      68:	beq	78 <coda_inflateResetKeep+0x78>
      6c:	ldr	r2, [r4, #8]
      70:	and	r1, r2, #1
      74:	str	r1, [r0, #48]	; 0x30
      78:	mov	ip, #0
      7c:	str	ip, [r4]
      80:	mov	r2, #0
      84:	str	r2, [r4, #4]
      88:	mov	r1, #0
      8c:	str	r1, [r4, #12]
      90:	mov	r0, #32768	; 0x8000
      94:	str	r0, [r4, #20]
      98:	mov	r2, #0
      9c:	str	r2, [r4, #32]
      a0:	mov	r3, #0
      a4:	str	r3, [r4, #56]	; 0x38
      a8:	mov	ip, #0
      ac:	str	ip, [r4, #60]	; 0x3c
      b0:	add	r0, r4, #1328	; 0x530
      b4:	str	r0, [r4, #108]	; 0x6c
      b8:	str	r0, [r4, #80]	; 0x50
      bc:	str	r0, [r4, #76]	; 0x4c
      c0:	mov	r1, #1
      c4:	add	lr, r4, #4096	; 0x1000
      c8:	str	r1, [lr, #3008]	; 0xbc0
      cc:	mvn	r3, #0
      d0:	add	lr, r4, #4096	; 0x1000
      d4:	str	r3, [lr, #3012]	; 0xbc4
      d8:	mov	r0, #0
      dc:	ldr	r4, [sp, #8]
      e0:	ldr	lr, [sp, #4]
      e4:	add	sp, sp, #16
      e8:	bx	lr

000000ec <coda_inflateReset>:
      ec:	mov	ip, sp
      f0:	sub	sp, sp, #8
      f4:	str	ip, [sp]
      f8:	str	lr, [sp, #4]
      fc:	cmp	r0, #0
     100:	beq	118 <coda_inflateReset+0x2c>
     104:	ldr	ip, [r0, #28]
     108:	cmp	ip, #0
     10c:	moveq	r1, #1
     110:	movne	r1, #0
     114:	b	11c <coda_inflateReset+0x30>
     118:	mov	r1, #1
     11c:	cmp	r1, #0
     120:	beq	12c <coda_inflateReset+0x40>
     124:	mvn	r0, #1
     128:	b	14c <coda_inflateReset+0x60>
     12c:	ldr	r1, [r0, #28]
     130:	mov	r2, #0
     134:	str	r2, [r1, #40]	; 0x28
     138:	mov	r3, #0
     13c:	str	r3, [r1, #44]	; 0x2c
     140:	mov	r2, #0
     144:	str	r2, [r1, #48]	; 0x30
     148:	bl	0 <coda_inflateResetKeep>
     14c:	ldr	lr, [sp, #4]
     150:	add	sp, sp, #8
     154:	bx	lr

00000158 <coda_inflateReset2>:
     158:	mov	ip, sp
     15c:	sub	sp, sp, #24
     160:	str	ip, [sp]
     164:	str	lr, [sp, #4]
     168:	str	r4, [sp, #8]
     16c:	str	r5, [sp, #12]
     170:	str	r6, [sp, #16]
     174:	str	r7, [sp, #20]
     178:	mov	r4, r1
     17c:	mov	r5, r0
     180:	cmp	r5, #0
     184:	beq	19c <coda_inflateReset2+0x44>
     188:	ldr	r1, [r5, #28]
     18c:	cmp	r1, #0
     190:	moveq	r1, #1
     194:	movne	r1, #0
     198:	b	1a0 <coda_inflateReset2+0x48>
     19c:	mov	r1, #1
     1a0:	cmp	r1, #0
     1a4:	beq	1b0 <coda_inflateReset2+0x58>
     1a8:	mvn	r0, #1
     1ac:	b	278 <coda_inflateReset2+0x120>
     1b0:	ldr	r7, [r5, #28]
     1b4:	cmp	r4, #0
     1b8:	blt	1d4 <coda_inflateReset2+0x7c>
     1bc:	asr	ip, r4, #4
     1c0:	add	r6, ip, #1
     1c4:	cmp	r4, #48	; 0x30
     1c8:	bge	1dc <coda_inflateReset2+0x84>
     1cc:	and	r4, r4, #15
     1d0:	b	1dc <coda_inflateReset2+0x84>
     1d4:	mov	r6, #0
     1d8:	rsb	r4, r4, #0
     1dc:	cmp	r4, #0
     1e0:	beq	210 <coda_inflateReset2+0xb8>
     1e4:	cmp	r4, #8
     1e8:	blt	208 <coda_inflateReset2+0xb0>
     1ec:	cmp	r4, #15
     1f0:	movgt	r0, #1
     1f4:	movle	r0, #0
     1f8:	cmp	r0, #0
     1fc:	movne	r0, #1
     200:	moveq	r0, #0
     204:	b	214 <coda_inflateReset2+0xbc>
     208:	mov	r0, #1
     20c:	b	214 <coda_inflateReset2+0xbc>
     210:	mov	r0, #0
     214:	cmp	r0, #0
     218:	beq	224 <coda_inflateReset2+0xcc>
     21c:	mvn	r0, #1
     220:	b	278 <coda_inflateReset2+0x120>
     224:	ldr	r3, [r7, #52]	; 0x34
     228:	cmp	r3, #0
     22c:	beq	244 <coda_inflateReset2+0xec>
     230:	ldr	r2, [r7, #36]	; 0x24
     234:	cmp	r2, r4
     238:	movne	r3, #1
     23c:	moveq	r3, #0
     240:	b	248 <coda_inflateReset2+0xf0>
     244:	mov	r3, #0
     248:	cmp	r3, #0
     24c:	beq	268 <coda_inflateReset2+0x110>
     250:	ldr	ip, [r5, #36]	; 0x24
     254:	ldr	r0, [r5, #40]	; 0x28
     258:	ldr	r1, [r7, #52]	; 0x34
     25c:	blx	ip
     260:	mov	r2, #0
     264:	str	r2, [r7, #52]	; 0x34
     268:	str	r6, [r7, #8]
     26c:	str	r4, [r7, #36]	; 0x24
     270:	mov	r0, r5
     274:	bl	ec <coda_inflateReset>
     278:	ldr	r4, [sp, #8]
     27c:	ldr	r5, [sp, #12]
     280:	ldr	r6, [sp, #16]
     284:	ldr	r7, [sp, #20]
     288:	ldr	lr, [sp, #4]
     28c:	add	sp, sp, #24
     290:	bx	lr

00000294 <coda_inflateInit2_>:
     294:	mov	ip, sp
     298:	sub	sp, sp, #24
     29c:	str	ip, [sp]
     2a0:	str	lr, [sp, #4]
     2a4:	str	r4, [sp, #8]
     2a8:	str	r5, [sp, #12]
     2ac:	str	r6, [sp, #16]
     2b0:	mov	r5, r1
     2b4:	mov	r6, r0
     2b8:	cmp	r2, #0
     2bc:	beq	2dc <coda_inflateInit2_+0x48>
     2c0:	ldrb	r2, [r2]
     2c4:	ldr	r0, [pc, #264]	; 3d4 <coda_inflateInit2_+0x140>
     2c8:	ldrb	r0, [r0]
     2cc:	cmp	r2, r0
     2d0:	movne	r1, #1
     2d4:	moveq	r1, #0
     2d8:	b	2e0 <coda_inflateInit2_+0x4c>
     2dc:	mov	r1, #1
     2e0:	cmp	r1, #0
     2e4:	bne	2f8 <coda_inflateInit2_+0x64>
     2e8:	cmp	r3, #56	; 0x38
     2ec:	movne	ip, #1
     2f0:	moveq	ip, #0
     2f4:	b	2fc <coda_inflateInit2_+0x68>
     2f8:	mov	ip, #1
     2fc:	cmp	ip, #0
     300:	beq	30c <coda_inflateInit2_+0x78>
     304:	mvn	r0, #5
     308:	b	3bc <coda_inflateInit2_+0x128>
     30c:	cmp	r6, #0
     310:	bne	31c <coda_inflateInit2_+0x88>
     314:	mvn	r0, #1
     318:	b	3bc <coda_inflateInit2_+0x128>
     31c:	mov	r2, #0
     320:	str	r2, [r6, #24]
     324:	ldr	ip, [r6, #32]
     328:	cmp	ip, #0
     32c:	bne	340 <coda_inflateInit2_+0xac>
     330:	ldr	r1, [pc, #160]	; 3d8 <coda_inflateInit2_+0x144>
     334:	str	r1, [r6, #32]
     338:	mov	r3, #0
     33c:	str	r3, [r6, #40]	; 0x28
     340:	ldr	r3, [r6, #36]	; 0x24
     344:	cmp	r3, #0
     348:	bne	354 <coda_inflateInit2_+0xc0>
     34c:	ldr	r3, [pc, #136]	; 3dc <coda_inflateInit2_+0x148>
     350:	str	r3, [r6, #36]	; 0x24
     354:	ldr	ip, [r6, #32]
     358:	ldr	r0, [r6, #40]	; 0x28
     35c:	mov	r1, #1
     360:	movw	r2, #7116	; 0x1bcc
     364:	blx	ip
     368:	mov	r4, r0
     36c:	cmp	r4, #0
     370:	bne	37c <coda_inflateInit2_+0xe8>
     374:	mvn	r0, #3
     378:	b	3bc <coda_inflateInit2_+0x128>
     37c:	str	r4, [r6, #28]
     380:	mov	r1, #0
     384:	str	r1, [r4, #52]	; 0x34
     388:	mov	r1, r5
     38c:	mov	r0, r6
     390:	bl	158 <coda_inflateReset2>
     394:	mov	r5, r0
     398:	cmp	r5, #0
     39c:	beq	3b8 <coda_inflateInit2_+0x124>
     3a0:	ldr	ip, [r6, #36]	; 0x24
     3a4:	ldr	r0, [r6, #40]	; 0x28
     3a8:	mov	r1, r4
     3ac:	blx	ip
     3b0:	mov	r2, #0
     3b4:	str	r2, [r6, #28]
     3b8:	mov	r0, r5
     3bc:	ldr	r4, [sp, #8]
     3c0:	ldr	r5, [sp, #12]
     3c4:	ldr	r6, [sp, #16]
     3c8:	ldr	lr, [sp, #4]
     3cc:	add	sp, sp, #24
     3d0:	bx	lr
     3d4:	.word	0x0000002c
	...

000003e0 <coda_inflateInit_>:
     3e0:	mov	ip, sp
     3e4:	sub	sp, sp, #8
     3e8:	str	ip, [sp]
     3ec:	str	lr, [sp, #4]
     3f0:	mov	r3, r2
     3f4:	mov	r2, r1
     3f8:	mov	r1, #15
     3fc:	bl	294 <coda_inflateInit2_>
     400:	ldr	lr, [sp, #4]
     404:	add	sp, sp, #8
     408:	bx	lr

0000040c <coda_inflatePrime>:
     40c:	mov	ip, sp
     410:	sub	sp, sp, #16
     414:	str	ip, [sp]
     418:	str	lr, [sp, #4]
     41c:	str	r4, [sp, #8]
     420:	cmp	r0, #0
     424:	beq	43c <coda_inflatePrime+0x30>
     428:	ldr	r3, [r0, #28]
     42c:	cmp	r3, #0
     430:	moveq	ip, #1
     434:	movne	ip, #0
     438:	b	440 <coda_inflatePrime+0x34>
     43c:	mov	ip, #1
     440:	cmp	ip, #0
     444:	beq	450 <coda_inflatePrime+0x44>
     448:	mvn	r0, #1
     44c:	b	4dc <coda_inflatePrime+0xd0>
     450:	ldr	r4, [r0, #28]
     454:	cmp	r1, #0
     458:	bge	474 <coda_inflatePrime+0x68>
     45c:	mov	r3, #0
     460:	str	r3, [r4, #56]	; 0x38
     464:	mov	r0, #0
     468:	str	r0, [r4, #60]	; 0x3c
     46c:	mov	r0, #0
     470:	b	4dc <coda_inflatePrime+0xd0>
     474:	cmp	r1, #16
     478:	bgt	494 <coda_inflatePrime+0x88>
     47c:	ldr	r3, [r4, #60]	; 0x3c
     480:	add	r0, r3, r1
     484:	cmp	r0, #32
     488:	movhi	r3, #1
     48c:	movls	r3, #0
     490:	b	498 <coda_inflatePrime+0x8c>
     494:	mov	r3, #1
     498:	cmp	r3, #0
     49c:	beq	4a8 <coda_inflatePrime+0x9c>
     4a0:	mvn	r0, #1
     4a4:	b	4dc <coda_inflatePrime+0xd0>
     4a8:	mov	r3, #1
     4ac:	lsl	r3, r3, r1
     4b0:	sub	r3, r3, #1
     4b4:	and	r0, r2, r3
     4b8:	ldr	r2, [r4, #56]	; 0x38
     4bc:	ldr	r3, [r4, #60]	; 0x3c
     4c0:	lsl	ip, r0, r3
     4c4:	add	r2, r2, ip
     4c8:	str	r2, [r4, #56]	; 0x38
     4cc:	ldr	r2, [r4, #60]	; 0x3c
     4d0:	add	r1, r2, r1
     4d4:	str	r1, [r4, #60]	; 0x3c
     4d8:	mov	r0, #0
     4dc:	ldr	r4, [sp, #8]
     4e0:	ldr	lr, [sp, #4]
     4e4:	add	sp, sp, #16
     4e8:	bx	lr

000004ec <fixedtables>:
     4ec:	mov	ip, sp
     4f0:	sub	sp, sp, #8
     4f4:	str	ip, [sp]
     4f8:	str	lr, [sp, #4]
     4fc:	ldr	r2, [pc, #36]	; 528 <fixedtables+0x3c>
     500:	str	r2, [r0, #76]	; 0x4c
     504:	mov	r3, #9
     508:	str	r3, [r0, #84]	; 0x54
     50c:	ldr	r1, [pc, #24]	; 52c <fixedtables+0x40>
     510:	str	r1, [r0, #80]	; 0x50
     514:	mov	r1, #5
     518:	str	r1, [r0, #88]	; 0x58
     51c:	ldr	lr, [sp, #4]
     520:	add	sp, sp, #8
     524:	bx	lr
     528:	.word	0x000001d4
     52c:	.word	0x000009d4

00000530 <updatewindow>:
     530:	mov	ip, sp
     534:	sub	sp, sp, #24
     538:	str	ip, [sp]
     53c:	str	lr, [sp, #4]
     540:	str	r4, [sp, #8]
     544:	str	r5, [sp, #12]
     548:	str	r6, [sp, #16]
     54c:	str	r7, [sp, #20]
     550:	mov	r5, r2
     554:	mov	r6, r1
     558:	ldr	r7, [r0, #28]
     55c:	ldr	r2, [r7, #52]	; 0x34
     560:	cmp	r2, #0
     564:	bne	59c <updatewindow+0x6c>
     568:	ldr	ip, [r0, #32]
     56c:	ldr	r0, [r0, #40]	; 0x28
     570:	mov	r3, #1
     574:	ldr	r2, [r7, #36]	; 0x24
     578:	lsl	r1, r3, r2
     57c:	mov	r2, #1
     580:	blx	ip
     584:	str	r0, [r7, #52]	; 0x34
     588:	ldr	r3, [r7, #52]	; 0x34
     58c:	cmp	r3, #0
     590:	bne	59c <updatewindow+0x6c>
     594:	mov	r0, #1
     598:	b	69c <updatewindow+0x16c>
     59c:	ldr	r0, [r7, #40]	; 0x28
     5a0:	cmp	r0, #0
     5a4:	bne	5c8 <updatewindow+0x98>
     5a8:	mov	r0, #1
     5ac:	ldr	r1, [r7, #36]	; 0x24
     5b0:	lsl	r1, r0, r1
     5b4:	str	r1, [r7, #40]	; 0x28
     5b8:	mov	r1, #0
     5bc:	str	r1, [r7, #48]	; 0x30
     5c0:	mov	r0, #0
     5c4:	str	r0, [r7, #44]	; 0x2c
     5c8:	ldr	ip, [r7, #40]	; 0x28
     5cc:	cmp	r5, ip
     5d0:	bcs	674 <updatewindow+0x144>
     5d4:	ldr	ip, [r7, #40]	; 0x28
     5d8:	ldr	r0, [r7, #48]	; 0x30
     5dc:	sub	r4, ip, r0
     5e0:	cmp	r4, r5
     5e4:	bls	5ec <updatewindow+0xbc>
     5e8:	mov	r4, r5
     5ec:	ldr	ip, [r7, #52]	; 0x34
     5f0:	ldr	r2, [r7, #48]	; 0x30
     5f4:	add	r0, ip, r2
     5f8:	sub	r1, r6, r5
     5fc:	mov	r2, r4
     600:	bl	0 <memcpy>
     604:	sub	r5, r5, r4
     608:	cmp	r5, #0
     60c:	bne	654 <updatewindow+0x124>
     610:	ldr	r1, [r7, #48]	; 0x30
     614:	add	r3, r1, r4
     618:	str	r3, [r7, #48]	; 0x30
     61c:	ldr	r3, [r7, #48]	; 0x30
     620:	ldr	ip, [r7, #40]	; 0x28
     624:	cmp	r3, ip
     628:	bne	634 <updatewindow+0x104>
     62c:	mov	r2, #0
     630:	str	r2, [r7, #48]	; 0x30
     634:	ldr	r3, [r7, #44]	; 0x2c
     638:	ldr	ip, [r7, #40]	; 0x28
     63c:	cmp	r3, ip
     640:	bcs	698 <updatewindow+0x168>
     644:	ldr	r3, [r7, #44]	; 0x2c
     648:	add	r0, r3, r4
     64c:	str	r0, [r7, #44]	; 0x2c
     650:	b	698 <updatewindow+0x168>
     654:	ldr	r0, [r7, #52]	; 0x34
     658:	sub	r1, r6, r5
     65c:	mov	r2, r5
     660:	bl	0 <memcpy>
     664:	str	r5, [r7, #48]	; 0x30
     668:	ldr	r2, [r7, #40]	; 0x28
     66c:	str	r2, [r7, #44]	; 0x2c
     670:	b	698 <updatewindow+0x168>
     674:	ldr	r0, [r7, #52]	; 0x34
     678:	ldr	r1, [r7, #40]	; 0x28
     67c:	sub	r1, r6, r1
     680:	ldr	r2, [r7, #40]	; 0x28
     684:	bl	0 <memcpy>
     688:	mov	r2, #0
     68c:	str	r2, [r7, #48]	; 0x30
     690:	ldr	r3, [r7, #40]	; 0x28
     694:	str	r3, [r7, #44]	; 0x2c
     698:	mov	r0, #0
     69c:	ldr	r4, [sp, #8]
     6a0:	ldr	r5, [sp, #12]
     6a4:	ldr	r6, [sp, #16]
     6a8:	ldr	r7, [sp, #20]
     6ac:	ldr	lr, [sp, #4]
     6b0:	add	sp, sp, #24
     6b4:	bx	lr

000006b8 <coda_inflate>:
     6b8:	mov	ip, sp
     6bc:	sub	sp, sp, #88	; 0x58
     6c0:	str	ip, [sp, #8]
     6c4:	str	lr, [sp, #12]
     6c8:	str	r4, [sp, #40]	; 0x28
     6cc:	str	r5, [sp, #44]	; 0x2c
     6d0:	str	r6, [sp, #48]	; 0x30
     6d4:	str	r7, [sp, #52]	; 0x34
     6d8:	str	r8, [sp, #56]	; 0x38
     6dc:	str	r9, [sp, #60]	; 0x3c
     6e0:	str	sl, [sp, #64]	; 0x40
     6e4:	str	fp, [sp, #68]	; 0x44
     6e8:	str	r1, [sp, #32]
     6ec:	mov	r6, r0
     6f0:	cmp	r6, #0
     6f4:	beq	70c <coda_inflate+0x54>
     6f8:	ldr	r2, [r6, #28]
     6fc:	cmp	r2, #0
     700:	moveq	r0, #1
     704:	movne	r0, #0
     708:	b	710 <coda_inflate+0x58>
     70c:	mov	r0, #1
     710:	cmp	r0, #0
     714:	bne	72c <coda_inflate+0x74>
     718:	ldr	r0, [r6, #12]
     71c:	cmp	r0, #0
     720:	moveq	ip, #1
     724:	movne	ip, #0
     728:	b	730 <coda_inflate+0x78>
     72c:	mov	ip, #1
     730:	cmp	ip, #0
     734:	bne	76c <coda_inflate+0xb4>
     738:	ldr	r2, [r6]
     73c:	cmp	r2, #0
     740:	bne	764 <coda_inflate+0xac>
     744:	ldr	ip, [r6, #4]
     748:	cmp	ip, #0
     74c:	movne	r0, #1
     750:	moveq	r0, #0
     754:	cmp	r0, #0
     758:	movne	r0, #1
     75c:	moveq	r0, #0
     760:	b	770 <coda_inflate+0xb8>
     764:	mov	r0, #0
     768:	b	770 <coda_inflate+0xb8>
     76c:	mov	r0, #1
     770:	cmp	r0, #0
     774:	beq	780 <coda_inflate+0xc8>
     778:	mvn	r0, #1
     77c:	b	2484 <coda_inflate+0x1dcc>
     780:	ldr	r9, [r6, #28]
     784:	ldr	r3, [r9]
     788:	cmp	r3, #11
     78c:	bne	798 <coda_inflate+0xe0>
     790:	mov	r3, #12
     794:	str	r3, [r9]
     798:	ldr	r3, [r6, #12]
     79c:	str	r3, [sp, #24]
     7a0:	ldr	r5, [r6, #16]
     7a4:	ldr	fp, [r6]
     7a8:	ldr	sl, [r6, #4]
     7ac:	ldr	r8, [r9, #56]	; 0x38
     7b0:	ldr	r7, [r9, #60]	; 0x3c
     7b4:	str	sl, [sp, #36]	; 0x24
     7b8:	str	r5, [sp, #28]
     7bc:	mov	r0, #0
     7c0:	str	r0, [sp, #16]
     7c4:	ldr	ip, [r9]
     7c8:	cmp	ip, #32
     7cc:	bcs	2480 <coda_inflate+0x1dc8>
     7d0:	add	pc, pc, ip, lsl #2
     7d4:	nop	{0}
     7d8:	b	858 <coda_inflate+0x1a0>
     7dc:	b	a58 <coda_inflate+0x3a0>
     7e0:	b	b38 <coda_inflate+0x480>
     7e4:	b	bdc <coda_inflate+0x524>
     7e8:	b	c78 <coda_inflate+0x5c0>
     7ec:	b	d34 <coda_inflate+0x67c>
     7f0:	b	e2c <coda_inflate+0x774>
     7f4:	b	f5c <coda_inflate+0x8a4>
     7f8:	b	1084 <coda_inflate+0x9cc>
     7fc:	b	1144 <coda_inflate+0xa8c>
     800:	b	11b0 <coda_inflate+0xaf8>
     804:	b	1200 <coda_inflate+0xb48>
     808:	b	1228 <coda_inflate+0xb70>
     80c:	b	1310 <coda_inflate+0xc58>
     810:	b	13a8 <coda_inflate+0xcf0>
     814:	b	13b0 <coda_inflate+0xcf8>
     818:	b	1420 <coda_inflate+0xd68>
     81c:	b	14e4 <coda_inflate+0xe2c>
     820:	b	1608 <coda_inflate+0xf50>
     824:	b	19cc <coda_inflate+0x1314>
     828:	b	19d4 <coda_inflate+0x131c>
     82c:	b	1c58 <coda_inflate+0x15a0>
     830:	b	1cf4 <coda_inflate+0x163c>
     834:	b	1e84 <coda_inflate+0x17cc>
     838:	b	1f14 <coda_inflate+0x185c>
     83c:	b	2024 <coda_inflate+0x196c>
     840:	b	2054 <coda_inflate+0x199c>
     844:	b	215c <coda_inflate+0x1aa4>
     848:	b	21e8 <coda_inflate+0x1b30>
     84c:	b	21f4 <coda_inflate+0x1b3c>
     850:	b	2478 <coda_inflate+0x1dc0>
     854:	b	2480 <coda_inflate+0x1dc8>
     858:	ldr	r1, [r9, #8]
     85c:	cmp	r1, #0
     860:	bne	870 <coda_inflate+0x1b8>
     864:	mov	r3, #12
     868:	str	r3, [r9]
     86c:	b	7c4 <coda_inflate+0x10c>
     870:	cmp	r7, #16
     874:	bcs	8a0 <coda_inflate+0x1e8>
     878:	cmp	sl, #0
     87c:	beq	21fc <coda_inflate+0x1b44>
     880:	sub	sl, sl, #1
     884:	mov	r1, fp
     888:	add	fp, r1, #1
     88c:	ldrb	r3, [r1]
     890:	lsl	r1, r3, r7
     894:	add	r8, r8, r1
     898:	add	r7, r7, #8
     89c:	b	870 <coda_inflate+0x1b8>
     8a0:	ldr	r1, [r9, #8]
     8a4:	and	r1, r1, #2
     8a8:	cmp	r1, #0
     8ac:	bne	8b8 <coda_inflate+0x200>
     8b0:	mov	r2, #0
     8b4:	b	8c8 <coda_inflate+0x210>
     8b8:	movw	lr, #35615	; 0x8b1f
     8bc:	cmp	r8, lr
     8c0:	moveq	r2, #1
     8c4:	movne	r2, #0
     8c8:	cmp	r2, #0
     8cc:	beq	920 <coda_inflate+0x268>
     8d0:	mov	r0, #0
     8d4:	mov	r1, #0
     8d8:	mov	r2, #0
     8dc:	bl	0 <coda_crc32>
     8e0:	str	r0, [r9, #24]
     8e4:	and	r2, r8, #255	; 0xff
     8e8:	strb	r2, [sp, #72]	; 0x48
     8ec:	lsr	r1, r8, #8
     8f0:	and	ip, r1, #255	; 0xff
     8f4:	strb	ip, [sp, #73]	; 0x49
     8f8:	ldr	r0, [r9, #24]
     8fc:	add	r1, sp, #72	; 0x48
     900:	mov	r2, #2
     904:	bl	0 <coda_crc32>
     908:	str	r0, [r9, #24]
     90c:	mov	r8, #0
     910:	mov	r7, #0
     914:	mov	r1, #1
     918:	str	r1, [r9]
     91c:	b	7c4 <coda_inflate+0x10c>
     920:	mov	r2, #0
     924:	str	r2, [r9, #16]
     928:	ldr	r1, [r9, #32]
     92c:	cmp	r1, #0
     930:	beq	940 <coda_inflate+0x288>
     934:	ldr	ip, [r9, #32]
     938:	mvn	r0, #0
     93c:	str	r0, [ip, #48]	; 0x30
     940:	ldr	r2, [r9, #8]
     944:	and	r0, r2, #1
     948:	cmp	r0, #0
     94c:	beq	98c <coda_inflate+0x2d4>
     950:	lsr	r1, r8, #8
     954:	and	r3, r8, #255	; 0xff
     958:	add	r1, r1, r3, lsl #8
     95c:	str	r1, [sp, #20]
     960:	mov	r4, #31
     964:	ldr	r0, [sp, #20]
     968:	mov	r1, r4
     96c:	bl	0 <__aeabi_uidiv>
     970:	mul	ip, r0, r4
     974:	ldr	r0, [sp, #20]
     978:	sub	ip, r0, ip
     97c:	cmp	ip, #0
     980:	movne	r3, #1
     984:	moveq	r3, #0
     988:	b	990 <coda_inflate+0x2d8>
     98c:	mov	r3, #1
     990:	cmp	r3, #0
     994:	beq	9ac <coda_inflate+0x2f4>
     998:	ldr	r0, [pc, #3824]	; 1890 <coda_inflate+0x11d8>
     99c:	str	r0, [r6, #24]
     9a0:	mov	r3, #29
     9a4:	str	r3, [r9]
     9a8:	b	7c4 <coda_inflate+0x10c>
     9ac:	and	r0, r8, #15
     9b0:	cmp	r0, #8
     9b4:	beq	9cc <coda_inflate+0x314>
     9b8:	ldr	r2, [pc, #3824]	; 18b0 <coda_inflate+0x11f8>
     9bc:	str	r2, [r6, #24]
     9c0:	mov	ip, #29
     9c4:	str	ip, [r9]
     9c8:	b	7c4 <coda_inflate+0x10c>
     9cc:	lsr	r8, r8, #4
     9d0:	sub	r7, r7, #4
     9d4:	and	r3, r8, #15
     9d8:	add	r0, r3, #8
     9dc:	ldr	r1, [r9, #36]	; 0x24
     9e0:	cmp	r1, #0
     9e4:	beq	a08 <coda_inflate+0x350>
     9e8:	ldr	r2, [r9, #36]	; 0x24
     9ec:	cmp	r0, r2
     9f0:	bls	a0c <coda_inflate+0x354>
     9f4:	ldr	ip, [pc, #3760]	; 18ac <coda_inflate+0x11f4>
     9f8:	str	ip, [r6, #24]
     9fc:	mov	r2, #29
     a00:	str	r2, [r9]
     a04:	b	7c4 <coda_inflate+0x10c>
     a08:	str	r0, [r9, #36]	; 0x24
     a0c:	mov	r2, #1
     a10:	lsl	r0, r2, r0
     a14:	str	r0, [r9, #20]
     a18:	mov	r0, #0
     a1c:	mov	r1, #0
     a20:	mov	r2, #0
     a24:	bl	0 <coda_adler32>
     a28:	str	r0, [r9, #24]
     a2c:	str	r0, [r6, #48]	; 0x30
     a30:	and	ip, r8, #512	; 0x200
     a34:	cmp	ip, #0
     a38:	bne	a44 <coda_inflate+0x38c>
     a3c:	mov	r1, #11
     a40:	b	a48 <coda_inflate+0x390>
     a44:	mov	r1, #9
     a48:	str	r1, [r9]
     a4c:	mov	r8, #0
     a50:	mov	r7, #0
     a54:	b	7c4 <coda_inflate+0x10c>
     a58:	cmp	r7, #16
     a5c:	bcs	a88 <coda_inflate+0x3d0>
     a60:	cmp	sl, #0
     a64:	beq	21fc <coda_inflate+0x1b44>
     a68:	sub	sl, sl, #1
     a6c:	mov	ip, fp
     a70:	add	fp, ip, #1
     a74:	ldrb	r0, [ip]
     a78:	lsl	r1, r0, r7
     a7c:	add	r8, r8, r1
     a80:	add	r7, r7, #8
     a84:	b	a58 <coda_inflate+0x3a0>
     a88:	str	r8, [r9, #16]
     a8c:	ldr	ip, [r9, #16]
     a90:	and	r0, ip, #255	; 0xff
     a94:	cmp	r0, #8
     a98:	beq	ab0 <coda_inflate+0x3f8>
     a9c:	ldr	ip, [pc, #3596]	; 18b0 <coda_inflate+0x11f8>
     aa0:	str	ip, [r6, #24]
     aa4:	mov	ip, #29
     aa8:	str	ip, [r9]
     aac:	b	7c4 <coda_inflate+0x10c>
     ab0:	ldr	r2, [r9, #16]
     ab4:	and	r2, r2, #57344	; 0xe000
     ab8:	cmp	r2, #0
     abc:	beq	ad4 <coda_inflate+0x41c>
     ac0:	ldr	ip, [pc, #3532]	; 1894 <coda_inflate+0x11dc>
     ac4:	str	ip, [r6, #24]
     ac8:	mov	r1, #29
     acc:	str	r1, [r9]
     ad0:	b	7c4 <coda_inflate+0x10c>
     ad4:	ldr	r0, [r9, #32]
     ad8:	cmp	r0, #0
     adc:	beq	af0 <coda_inflate+0x438>
     ae0:	ldr	r1, [r9, #32]
     ae4:	lsr	r0, r8, #8
     ae8:	and	r2, r0, #1
     aec:	str	r2, [r1]
     af0:	ldr	r2, [r9, #16]
     af4:	and	r2, r2, #512	; 0x200
     af8:	cmp	r2, #0
     afc:	beq	b28 <coda_inflate+0x470>
     b00:	and	r0, r8, #255	; 0xff
     b04:	strb	r0, [sp, #72]	; 0x48
     b08:	lsr	r3, r8, #8
     b0c:	and	r2, r3, #255	; 0xff
     b10:	strb	r2, [sp, #73]	; 0x49
     b14:	ldr	r0, [r9, #24]
     b18:	add	r1, sp, #72	; 0x48
     b1c:	mov	r2, #2
     b20:	bl	0 <coda_crc32>
     b24:	str	r0, [r9, #24]
     b28:	mov	r8, #0
     b2c:	mov	r7, #0
     b30:	mov	r1, #2
     b34:	str	r1, [r9]
     b38:	cmp	r7, #32
     b3c:	bcs	b68 <coda_inflate+0x4b0>
     b40:	cmp	sl, #0
     b44:	beq	21fc <coda_inflate+0x1b44>
     b48:	sub	sl, sl, #1
     b4c:	mov	r2, fp
     b50:	add	fp, r2, #1
     b54:	ldrb	ip, [r2]
     b58:	lsl	ip, ip, r7
     b5c:	add	r8, r8, ip
     b60:	add	r7, r7, #8
     b64:	b	b38 <coda_inflate+0x480>
     b68:	ldr	r2, [r9, #32]
     b6c:	cmp	r2, #0
     b70:	beq	b7c <coda_inflate+0x4c4>
     b74:	ldr	r3, [r9, #32]
     b78:	str	r8, [r3, #4]
     b7c:	ldr	r2, [r9, #16]
     b80:	and	r3, r2, #512	; 0x200
     b84:	cmp	r3, #0
     b88:	beq	bcc <coda_inflate+0x514>
     b8c:	and	r1, r8, #255	; 0xff
     b90:	strb	r1, [sp, #72]	; 0x48
     b94:	lsr	r2, r8, #8
     b98:	and	r2, r2, #255	; 0xff
     b9c:	strb	r2, [sp, #73]	; 0x49
     ba0:	lsr	r3, r8, #16
     ba4:	and	r1, r3, #255	; 0xff
     ba8:	strb	r1, [sp, #74]	; 0x4a
     bac:	lsr	ip, r8, #24
     bb0:	and	r0, ip, #255	; 0xff
     bb4:	strb	r0, [sp, #75]	; 0x4b
     bb8:	ldr	r0, [r9, #24]
     bbc:	add	r1, sp, #72	; 0x48
     bc0:	mov	r2, #4
     bc4:	bl	0 <coda_crc32>
     bc8:	str	r0, [r9, #24]
     bcc:	mov	r8, #0
     bd0:	mov	r7, #0
     bd4:	mov	r3, #3
     bd8:	str	r3, [r9]
     bdc:	cmp	r7, #16
     be0:	bcs	c0c <coda_inflate+0x554>
     be4:	cmp	sl, #0
     be8:	beq	21fc <coda_inflate+0x1b44>
     bec:	sub	sl, sl, #1
     bf0:	mov	r2, fp
     bf4:	add	fp, r2, #1
     bf8:	ldrb	r0, [r2]
     bfc:	lsl	r2, r0, r7
     c00:	add	r8, r8, r2
     c04:	add	r7, r7, #8
     c08:	b	bdc <coda_inflate+0x524>
     c0c:	ldr	r2, [r9, #32]
     c10:	cmp	r2, #0
     c14:	beq	c30 <coda_inflate+0x578>
     c18:	ldr	r2, [r9, #32]
     c1c:	and	r1, r8, #255	; 0xff
     c20:	str	r1, [r2, #8]
     c24:	ldr	r3, [r9, #32]
     c28:	lsr	ip, r8, #8
     c2c:	str	ip, [r3, #12]
     c30:	ldr	r3, [r9, #16]
     c34:	and	r0, r3, #512	; 0x200
     c38:	cmp	r0, #0
     c3c:	beq	c68 <coda_inflate+0x5b0>
     c40:	and	ip, r8, #255	; 0xff
     c44:	strb	ip, [sp, #72]	; 0x48
     c48:	lsr	r1, r8, #8
     c4c:	and	r0, r1, #255	; 0xff
     c50:	strb	r0, [sp, #73]	; 0x49
     c54:	ldr	r0, [r9, #24]
     c58:	add	r1, sp, #72	; 0x48
     c5c:	mov	r2, #2
     c60:	bl	0 <coda_crc32>
     c64:	str	r0, [r9, #24]
     c68:	mov	r8, #0
     c6c:	mov	r7, #0
     c70:	mov	r3, #4
     c74:	str	r3, [r9]
     c78:	ldr	r3, [r9, #16]
     c7c:	and	r1, r3, #1024	; 0x400
     c80:	cmp	r1, #0
     c84:	beq	d14 <coda_inflate+0x65c>
     c88:	cmp	r7, #16
     c8c:	bcs	cb8 <coda_inflate+0x600>
     c90:	cmp	sl, #0
     c94:	beq	21fc <coda_inflate+0x1b44>
     c98:	sub	sl, sl, #1
     c9c:	mov	r0, fp
     ca0:	add	fp, r0, #1
     ca4:	ldrb	ip, [r0]
     ca8:	lsl	r3, ip, r7
     cac:	add	r8, r8, r3
     cb0:	add	r7, r7, #8
     cb4:	b	c88 <coda_inflate+0x5d0>
     cb8:	str	r8, [r9, #64]	; 0x40
     cbc:	ldr	r0, [r9, #32]
     cc0:	cmp	r0, #0
     cc4:	beq	cd0 <coda_inflate+0x618>
     cc8:	ldr	r2, [r9, #32]
     ccc:	str	r8, [r2, #20]
     cd0:	ldr	r3, [r9, #16]
     cd4:	and	r2, r3, #512	; 0x200
     cd8:	cmp	r2, #0
     cdc:	beq	d08 <coda_inflate+0x650>
     ce0:	and	r1, r8, #255	; 0xff
     ce4:	strb	r1, [sp, #72]	; 0x48
     ce8:	lsr	r2, r8, #8
     cec:	and	ip, r2, #255	; 0xff
     cf0:	strb	ip, [sp, #73]	; 0x49
     cf4:	ldr	r0, [r9, #24]
     cf8:	add	r1, sp, #72	; 0x48
     cfc:	mov	r2, #2
     d00:	bl	0 <coda_crc32>
     d04:	str	r0, [r9, #24]
     d08:	mov	r8, #0
     d0c:	mov	r7, #0
     d10:	b	d2c <coda_inflate+0x674>
     d14:	ldr	r1, [r9, #32]
     d18:	cmp	r1, #0
     d1c:	beq	d2c <coda_inflate+0x674>
     d20:	ldr	ip, [r9, #32]
     d24:	mov	r3, #0
     d28:	str	r3, [ip, #16]
     d2c:	mov	r3, #5
     d30:	str	r3, [r9]
     d34:	ldr	ip, [r9, #16]
     d38:	and	r3, ip, #1024	; 0x400
     d3c:	cmp	r3, #0
     d40:	beq	e1c <coda_inflate+0x764>
     d44:	ldr	r4, [r9, #64]	; 0x40
     d48:	cmp	r4, sl
     d4c:	bls	d54 <coda_inflate+0x69c>
     d50:	mov	r4, sl
     d54:	cmp	r4, #0
     d58:	beq	e10 <coda_inflate+0x758>
     d5c:	ldr	r3, [r9, #32]
     d60:	cmp	r3, #0
     d64:	beq	d80 <coda_inflate+0x6c8>
     d68:	ldr	r3, [r9, #32]
     d6c:	ldr	r2, [r3, #16]
     d70:	cmp	r2, #0
     d74:	movne	r0, #1
     d78:	moveq	r0, #0
     d7c:	b	d84 <coda_inflate+0x6cc>
     d80:	mov	r0, #0
     d84:	cmp	r0, #0
     d88:	beq	dd8 <coda_inflate+0x720>
     d8c:	ldr	r0, [r9, #32]
     d90:	ldr	r1, [r0, #20]
     d94:	ldr	ip, [r9, #64]	; 0x40
     d98:	sub	ip, r1, ip
     d9c:	add	r3, ip, r4
     da0:	ldr	r0, [r9, #32]
     da4:	ldr	r0, [r0, #24]
     da8:	cmp	r3, r0
     dac:	bls	dc0 <coda_inflate+0x708>
     db0:	ldr	r1, [r9, #32]
     db4:	ldr	r1, [r1, #24]
     db8:	sub	r2, r1, ip
     dbc:	b	dc4 <coda_inflate+0x70c>
     dc0:	mov	r2, r4
     dc4:	ldr	r1, [r9, #32]
     dc8:	ldr	r0, [r1, #16]
     dcc:	add	r0, r0, ip
     dd0:	mov	r1, fp
     dd4:	bl	0 <memcpy>
     dd8:	ldr	r3, [r9, #16]
     ddc:	and	r0, r3, #512	; 0x200
     de0:	cmp	r0, #0
     de4:	beq	dfc <coda_inflate+0x744>
     de8:	ldr	r0, [r9, #24]
     dec:	mov	r2, r4
     df0:	mov	r1, fp
     df4:	bl	0 <coda_crc32>
     df8:	str	r0, [r9, #24]
     dfc:	sub	sl, sl, r4
     e00:	add	fp, fp, r4
     e04:	ldr	r0, [r9, #64]	; 0x40
     e08:	sub	r3, r0, r4
     e0c:	str	r3, [r9, #64]	; 0x40
     e10:	ldr	r2, [r9, #64]	; 0x40
     e14:	cmp	r2, #0
     e18:	bne	21fc <coda_inflate+0x1b44>
     e1c:	mov	r0, #0
     e20:	str	r0, [r9, #64]	; 0x40
     e24:	mov	r2, #6
     e28:	str	r2, [r9]
     e2c:	ldr	r3, [r9, #16]
     e30:	and	r2, r3, #2048	; 0x800
     e34:	cmp	r2, #0
     e38:	beq	f34 <coda_inflate+0x87c>
     e3c:	cmp	sl, #0
     e40:	beq	21fc <coda_inflate+0x1b44>
     e44:	mov	r4, #0
     e48:	mov	r3, r4
     e4c:	add	r4, r3, #1
     e50:	ldrb	r0, [fp, r3]
     e54:	str	r0, [sp, #20]
     e58:	ldr	r1, [r9, #32]
     e5c:	cmp	r1, #0
     e60:	beq	e7c <coda_inflate+0x7c4>
     e64:	ldr	r1, [r9, #32]
     e68:	ldr	r2, [r1, #28]
     e6c:	cmp	r2, #0
     e70:	movne	r3, #1
     e74:	moveq	r3, #0
     e78:	b	e80 <coda_inflate+0x7c8>
     e7c:	mov	r3, #0
     e80:	cmp	r3, #0
     e84:	beq	ea4 <coda_inflate+0x7ec>
     e88:	ldr	r1, [r9, #64]	; 0x40
     e8c:	ldr	r3, [r9, #32]
     e90:	ldr	r2, [r3, #32]
     e94:	cmp	r1, r2
     e98:	movcc	ip, #1
     e9c:	movcs	ip, #0
     ea0:	b	ea8 <coda_inflate+0x7f0>
     ea4:	mov	ip, #0
     ea8:	cmp	ip, #0
     eac:	beq	ed0 <coda_inflate+0x818>
     eb0:	ldr	r3, [r9, #64]	; 0x40
     eb4:	add	r2, r3, #1
     eb8:	str	r2, [r9, #64]	; 0x40
     ebc:	ldr	r0, [r9, #32]
     ec0:	ldr	ip, [r0, #28]
     ec4:	ldr	r0, [sp, #20]
     ec8:	and	r2, r0, #255	; 0xff
     ecc:	strb	r2, [ip, r3]
     ed0:	ldr	r3, [sp, #20]
     ed4:	cmp	r3, #0
     ed8:	bne	ee4 <coda_inflate+0x82c>
     edc:	mov	ip, #0
     ee0:	b	ef0 <coda_inflate+0x838>
     ee4:	cmp	r4, sl
     ee8:	movcc	ip, #1
     eec:	movcs	ip, #0
     ef0:	cmp	ip, #0
     ef4:	bne	e48 <coda_inflate+0x790>
     ef8:	ldr	ip, [r9, #16]
     efc:	and	r0, ip, #512	; 0x200
     f00:	cmp	r0, #0
     f04:	beq	f1c <coda_inflate+0x864>
     f08:	ldr	r0, [r9, #24]
     f0c:	mov	r2, r4
     f10:	mov	r1, fp
     f14:	bl	0 <coda_crc32>
     f18:	str	r0, [r9, #24]
     f1c:	sub	sl, sl, r4
     f20:	add	fp, fp, r4
     f24:	ldr	r1, [sp, #20]
     f28:	cmp	r1, #0
     f2c:	bne	21fc <coda_inflate+0x1b44>
     f30:	b	f4c <coda_inflate+0x894>
     f34:	ldr	r2, [r9, #32]
     f38:	cmp	r2, #0
     f3c:	beq	f4c <coda_inflate+0x894>
     f40:	ldr	r0, [r9, #32]
     f44:	mov	r1, #0
     f48:	str	r1, [r0, #28]
     f4c:	mov	ip, #0
     f50:	str	ip, [r9, #64]	; 0x40
     f54:	mov	r3, #7
     f58:	str	r3, [r9]
     f5c:	ldr	ip, [r9, #16]
     f60:	and	r0, ip, #4096	; 0x1000
     f64:	cmp	r0, #0
     f68:	beq	1064 <coda_inflate+0x9ac>
     f6c:	cmp	sl, #0
     f70:	beq	21fc <coda_inflate+0x1b44>
     f74:	mov	r4, #0
     f78:	mov	r0, r4
     f7c:	add	r4, r0, #1
     f80:	ldrb	r1, [fp, r0]
     f84:	str	r1, [sp, #20]
     f88:	ldr	r0, [r9, #32]
     f8c:	cmp	r0, #0
     f90:	beq	fac <coda_inflate+0x8f4>
     f94:	ldr	r1, [r9, #32]
     f98:	ldr	r2, [r1, #36]	; 0x24
     f9c:	cmp	r2, #0
     fa0:	movne	r0, #1
     fa4:	moveq	r0, #0
     fa8:	b	fb0 <coda_inflate+0x8f8>
     fac:	mov	r0, #0
     fb0:	cmp	r0, #0
     fb4:	beq	fd4 <coda_inflate+0x91c>
     fb8:	ldr	r2, [r9, #64]	; 0x40
     fbc:	ldr	r1, [r9, #32]
     fc0:	ldr	r3, [r1, #40]	; 0x28
     fc4:	cmp	r2, r3
     fc8:	movcc	r2, #1
     fcc:	movcs	r2, #0
     fd0:	b	fd8 <coda_inflate+0x920>
     fd4:	mov	r2, #0
     fd8:	cmp	r2, #0
     fdc:	beq	1000 <coda_inflate+0x948>
     fe0:	ldr	r1, [r9, #64]	; 0x40
     fe4:	add	r2, r1, #1
     fe8:	str	r2, [r9, #64]	; 0x40
     fec:	ldr	r2, [r9, #32]
     ff0:	ldr	r2, [r2, #36]	; 0x24
     ff4:	ldr	r3, [sp, #20]
     ff8:	and	r3, r3, #255	; 0xff
     ffc:	strb	r3, [r2, r1]
    1000:	ldr	r2, [sp, #20]
    1004:	cmp	r2, #0
    1008:	bne	1014 <coda_inflate+0x95c>
    100c:	mov	r3, #0
    1010:	b	1020 <coda_inflate+0x968>
    1014:	cmp	r4, sl
    1018:	movcc	r3, #1
    101c:	movcs	r3, #0
    1020:	cmp	r3, #0
    1024:	bne	f78 <coda_inflate+0x8c0>
    1028:	ldr	r3, [r9, #16]
    102c:	and	ip, r3, #512	; 0x200
    1030:	cmp	ip, #0
    1034:	beq	104c <coda_inflate+0x994>
    1038:	ldr	r0, [r9, #24]
    103c:	mov	r2, r4
    1040:	mov	r1, fp
    1044:	bl	0 <coda_crc32>
    1048:	str	r0, [r9, #24]
    104c:	sub	sl, sl, r4
    1050:	add	fp, fp, r4
    1054:	ldr	r0, [sp, #20]
    1058:	cmp	r0, #0
    105c:	bne	21fc <coda_inflate+0x1b44>
    1060:	b	107c <coda_inflate+0x9c4>
    1064:	ldr	r3, [r9, #32]
    1068:	cmp	r3, #0
    106c:	beq	107c <coda_inflate+0x9c4>
    1070:	ldr	r1, [r9, #32]
    1074:	mov	ip, #0
    1078:	str	ip, [r1, #36]	; 0x24
    107c:	mov	r3, #8
    1080:	str	r3, [r9]
    1084:	ldr	r0, [r9, #16]
    1088:	and	r0, r0, #512	; 0x200
    108c:	cmp	r0, #0
    1090:	beq	10f4 <coda_inflate+0xa3c>
    1094:	cmp	r7, #16
    1098:	bcs	10c4 <coda_inflate+0xa0c>
    109c:	cmp	sl, #0
    10a0:	beq	21fc <coda_inflate+0x1b44>
    10a4:	sub	sl, sl, #1
    10a8:	mov	r1, fp
    10ac:	add	fp, r1, #1
    10b0:	ldrb	r0, [r1]
    10b4:	lsl	r1, r0, r7
    10b8:	add	r8, r8, r1
    10bc:	add	r7, r7, #8
    10c0:	b	1094 <coda_inflate+0x9dc>
    10c4:	ldr	r2, [r9, #24]
    10c8:	bic	r2, r2, #16711680	; 0xff0000
    10cc:	bic	r2, r2, #-16777216	; 0xff000000
    10d0:	cmp	r8, r2
    10d4:	beq	10ec <coda_inflate+0xa34>
    10d8:	ldr	r3, [pc, #1992]	; 18a8 <coda_inflate+0x11f0>
    10dc:	str	r3, [r6, #24]
    10e0:	mov	r2, #29
    10e4:	str	r2, [r9]
    10e8:	b	7c4 <coda_inflate+0x10c>
    10ec:	mov	r8, #0
    10f0:	mov	r7, #0
    10f4:	ldr	r1, [r9, #32]
    10f8:	cmp	r1, #0
    10fc:	beq	1120 <coda_inflate+0xa68>
    1100:	ldr	r1, [r9, #32]
    1104:	ldr	r0, [r9, #16]
    1108:	asr	r3, r0, #9
    110c:	and	r2, r3, #1
    1110:	str	r2, [r1, #44]	; 0x2c
    1114:	ldr	r3, [r9, #32]
    1118:	mov	ip, #1
    111c:	str	ip, [r3, #48]	; 0x30
    1120:	mov	r0, #0
    1124:	mov	r1, #0
    1128:	mov	r2, #0
    112c:	bl	0 <coda_crc32>
    1130:	str	r0, [r9, #24]
    1134:	str	r0, [r6, #48]	; 0x30
    1138:	mov	r1, #11
    113c:	str	r1, [r9]
    1140:	b	7c4 <coda_inflate+0x10c>
    1144:	cmp	r7, #32
    1148:	bcs	1174 <coda_inflate+0xabc>
    114c:	cmp	sl, #0
    1150:	beq	21fc <coda_inflate+0x1b44>
    1154:	sub	sl, sl, #1
    1158:	mov	ip, fp
    115c:	add	fp, ip, #1
    1160:	ldrb	r2, [ip]
    1164:	lsl	ip, r2, r7
    1168:	add	r8, r8, ip
    116c:	add	r7, r7, #8
    1170:	b	1144 <coda_inflate+0xa8c>
    1174:	lsr	r1, r8, #24
    1178:	and	r0, r1, #255	; 0xff
    117c:	lsr	r1, r8, #8
    1180:	and	r1, r1, #65280	; 0xff00
    1184:	add	r2, r0, r1
    1188:	and	r1, r8, #65280	; 0xff00
    118c:	add	r3, r2, r1, lsl #8
    1190:	and	r1, r8, #255	; 0xff
    1194:	add	ip, r3, r1, lsl #24
    1198:	str	ip, [r9, #24]
    119c:	str	ip, [r6, #48]	; 0x30
    11a0:	mov	r8, #0
    11a4:	mov	r7, #0
    11a8:	mov	r2, #10
    11ac:	str	r2, [r9]
    11b0:	ldr	ip, [r9, #12]
    11b4:	cmp	ip, #0
    11b8:	bne	11e0 <coda_inflate+0xb28>
    11bc:	ldr	ip, [sp, #24]
    11c0:	str	ip, [r6, #12]
    11c4:	str	r5, [r6, #16]
    11c8:	str	fp, [r6]
    11cc:	str	sl, [r6, #4]
    11d0:	str	r8, [r9, #56]	; 0x38
    11d4:	str	r7, [r9, #60]	; 0x3c
    11d8:	mov	r0, #2
    11dc:	b	2484 <coda_inflate+0x1dcc>
    11e0:	mov	r0, #0
    11e4:	mov	r1, #0
    11e8:	mov	r2, #0
    11ec:	bl	0 <coda_adler32>
    11f0:	str	r0, [r9, #24]
    11f4:	str	r0, [r6, #48]	; 0x30
    11f8:	mov	r0, #11
    11fc:	str	r0, [r9]
    1200:	ldr	r1, [sp, #32]
    1204:	cmp	r1, #5
    1208:	beq	121c <coda_inflate+0xb64>
    120c:	cmp	r1, #6
    1210:	moveq	r3, #1
    1214:	movne	r3, #0
    1218:	b	1220 <coda_inflate+0xb68>
    121c:	mov	r3, #1
    1220:	cmp	r3, #0
    1224:	bne	21fc <coda_inflate+0x1b44>
    1228:	ldr	r2, [r9, #4]
    122c:	cmp	r2, #0
    1230:	beq	1250 <coda_inflate+0xb98>
    1234:	and	ip, r7, #7
    1238:	lsr	r8, r8, ip
    123c:	and	r1, r7, #7
    1240:	sub	r7, r7, r1
    1244:	mov	r0, #26
    1248:	str	r0, [r9]
    124c:	b	7c4 <coda_inflate+0x10c>
    1250:	cmp	r7, #3
    1254:	bcs	1280 <coda_inflate+0xbc8>
    1258:	cmp	sl, #0
    125c:	beq	21fc <coda_inflate+0x1b44>
    1260:	sub	sl, sl, #1
    1264:	mov	r0, fp
    1268:	add	fp, r0, #1
    126c:	ldrb	r0, [r0]
    1270:	lsl	r0, r0, r7
    1274:	add	r8, r8, r0
    1278:	add	r7, r7, #8
    127c:	b	1250 <coda_inflate+0xb98>
    1280:	and	r2, r8, #1
    1284:	str	r2, [r9, #4]
    1288:	lsr	r4, r8, #1
    128c:	sub	r7, r7, #1
    1290:	and	r1, r4, #3
    1294:	cmp	r1, #2
    1298:	bcs	12d8 <coda_inflate+0xc20>
    129c:	cmp	r1, #0
    12a0:	bne	12b0 <coda_inflate+0xbf8>
    12a4:	mov	r3, #13
    12a8:	str	r3, [r9]
    12ac:	b	1304 <coda_inflate+0xc4c>
    12b0:	mov	r0, r9
    12b4:	bl	4ec <fixedtables>
    12b8:	mov	r1, #19
    12bc:	str	r1, [r9]
    12c0:	ldr	ip, [sp, #32]
    12c4:	cmp	ip, #6
    12c8:	bne	1304 <coda_inflate+0xc4c>
    12cc:	lsr	r8, r4, #2
    12d0:	sub	r7, r7, #2
    12d4:	b	21fc <coda_inflate+0x1b44>
    12d8:	cmp	r1, #2
    12dc:	beq	12fc <coda_inflate+0xc44>
    12e0:	cmp	r1, #3
    12e4:	bne	1304 <coda_inflate+0xc4c>
    12e8:	ldr	r1, [pc, #1456]	; 18a0 <coda_inflate+0x11e8>
    12ec:	str	r1, [r6, #24]
    12f0:	mov	r0, #29
    12f4:	str	r0, [r9]
    12f8:	b	1304 <coda_inflate+0xc4c>
    12fc:	mov	r2, #16
    1300:	str	r2, [r9]
    1304:	lsr	r8, r4, #2
    1308:	sub	r7, r7, #2
    130c:	b	7c4 <coda_inflate+0x10c>
    1310:	and	ip, r7, #7
    1314:	lsr	r8, r8, ip
    1318:	and	ip, r7, #7
    131c:	sub	r7, r7, ip
    1320:	cmp	r7, #32
    1324:	bcs	1350 <coda_inflate+0xc98>
    1328:	cmp	sl, #0
    132c:	beq	21fc <coda_inflate+0x1b44>
    1330:	sub	sl, sl, #1
    1334:	mov	r0, fp
    1338:	add	fp, r0, #1
    133c:	ldrb	r3, [r0]
    1340:	lsl	r0, r3, r7
    1344:	add	r8, r8, r0
    1348:	add	r7, r7, #8
    134c:	b	1320 <coda_inflate+0xc68>
    1350:	bic	ip, r8, #16711680	; 0xff0000
    1354:	bic	ip, ip, #-16777216	; 0xff000000
    1358:	lsr	r0, r8, #16
    135c:	eor	r0, r0, #255	; 0xff
    1360:	eor	r0, r0, #65280	; 0xff00
    1364:	cmp	ip, r0
    1368:	beq	1380 <coda_inflate+0xcc8>
    136c:	ldr	r3, [pc, #1304]	; 188c <coda_inflate+0x11d4>
    1370:	str	r3, [r6, #24]
    1374:	mov	r0, #29
    1378:	str	r0, [r9]
    137c:	b	7c4 <coda_inflate+0x10c>
    1380:	bic	ip, r8, #16711680	; 0xff0000
    1384:	bic	ip, ip, #-16777216	; 0xff000000
    1388:	str	ip, [r9, #64]	; 0x40
    138c:	mov	r8, #0
    1390:	mov	r7, #0
    1394:	mov	r3, #14
    1398:	str	r3, [r9]
    139c:	ldr	r3, [sp, #32]
    13a0:	cmp	r3, #6
    13a4:	beq	21fc <coda_inflate+0x1b44>
    13a8:	mov	r1, #15
    13ac:	str	r1, [r9]
    13b0:	ldr	r4, [r9, #64]	; 0x40
    13b4:	cmp	r4, #0
    13b8:	beq	1414 <coda_inflate+0xd5c>
    13bc:	cmp	r4, sl
    13c0:	bls	13c8 <coda_inflate+0xd10>
    13c4:	mov	r4, sl
    13c8:	cmp	r4, r5
    13cc:	bls	13d4 <coda_inflate+0xd1c>
    13d0:	mov	r4, r5
    13d4:	cmp	r4, #0
    13d8:	beq	21fc <coda_inflate+0x1b44>
    13dc:	mov	r2, r4
    13e0:	mov	r1, fp
    13e4:	ldr	r0, [sp, #24]
    13e8:	bl	0 <memcpy>
    13ec:	sub	sl, sl, r4
    13f0:	add	fp, fp, r4
    13f4:	sub	r5, r5, r4
    13f8:	ldr	ip, [sp, #24]
    13fc:	add	r3, ip, r4
    1400:	str	r3, [sp, #24]
    1404:	ldr	r0, [r9, #64]	; 0x40
    1408:	sub	r3, r0, r4
    140c:	str	r3, [r9, #64]	; 0x40
    1410:	b	7c4 <coda_inflate+0x10c>
    1414:	mov	r0, #11
    1418:	str	r0, [r9]
    141c:	b	7c4 <coda_inflate+0x10c>
    1420:	cmp	r7, #14
    1424:	bcs	1450 <coda_inflate+0xd98>
    1428:	cmp	sl, #0
    142c:	beq	21fc <coda_inflate+0x1b44>
    1430:	sub	sl, sl, #1
    1434:	mov	r1, fp
    1438:	add	fp, r1, #1
    143c:	ldrb	r0, [r1]
    1440:	lsl	r0, r0, r7
    1444:	add	r8, r8, r0
    1448:	add	r7, r7, #8
    144c:	b	1420 <coda_inflate+0xd68>
    1450:	and	r3, r8, #31
    1454:	add	ip, r3, #1
    1458:	add	ip, ip, #256	; 0x100
    145c:	str	ip, [r9, #96]	; 0x60
    1460:	lsr	r3, r8, #5
    1464:	sub	ip, r7, #5
    1468:	and	r1, r3, #31
    146c:	add	r2, r1, #1
    1470:	str	r2, [r9, #100]	; 0x64
    1474:	lsr	r0, r3, #5
    1478:	sub	r1, ip, #5
    147c:	and	ip, r0, #15
    1480:	add	r2, ip, #4
    1484:	str	r2, [r9, #92]	; 0x5c
    1488:	lsr	r8, r0, #4
    148c:	sub	r7, r1, #4
    1490:	ldr	r3, [r9, #96]	; 0x60
    1494:	movw	lr, #286	; 0x11e
    1498:	cmp	r3, lr
    149c:	bhi	14b4 <coda_inflate+0xdfc>
    14a0:	ldr	r3, [r9, #100]	; 0x64
    14a4:	cmp	r3, #30
    14a8:	movhi	r3, #1
    14ac:	movls	r3, #0
    14b0:	b	14b8 <coda_inflate+0xe00>
    14b4:	mov	r3, #1
    14b8:	cmp	r3, #0
    14bc:	beq	14d4 <coda_inflate+0xe1c>
    14c0:	ldr	r0, [pc, #980]	; 189c <coda_inflate+0x11e4>
    14c4:	str	r0, [r6, #24]
    14c8:	mov	r0, #29
    14cc:	str	r0, [r9]
    14d0:	b	7c4 <coda_inflate+0x10c>
    14d4:	mov	ip, #0
    14d8:	str	ip, [r9, #104]	; 0x68
    14dc:	mov	r2, #17
    14e0:	str	r2, [r9]
    14e4:	ldr	r1, [r9, #104]	; 0x68
    14e8:	ldr	r3, [r9, #92]	; 0x5c
    14ec:	cmp	r1, r3
    14f0:	bcs	1558 <coda_inflate+0xea0>
    14f4:	cmp	r7, #3
    14f8:	bcs	1524 <coda_inflate+0xe6c>
    14fc:	cmp	sl, #0
    1500:	beq	21fc <coda_inflate+0x1b44>
    1504:	sub	sl, sl, #1
    1508:	mov	r3, fp
    150c:	add	fp, r3, #1
    1510:	ldrb	r1, [r3]
    1514:	lsl	ip, r1, r7
    1518:	add	r8, r8, ip
    151c:	add	r7, r7, #8
    1520:	b	14f4 <coda_inflate+0xe3c>
    1524:	ldr	r1, [r9, #104]	; 0x68
    1528:	add	r2, r1, #1
    152c:	str	r2, [r9, #104]	; 0x68
    1530:	ldr	ip, [pc, #864]	; 1898 <coda_inflate+0x11e0>
    1534:	add	r1, ip, r1, lsl #1
    1538:	ldrh	r1, [r1]
    153c:	lsl	r0, r1, #1
    1540:	add	r2, r9, r0
    1544:	and	r3, r8, #7
    1548:	strh	r3, [r2, #112]	; 0x70
    154c:	lsr	r8, r8, #3
    1550:	sub	r7, r7, #3
    1554:	b	14e4 <coda_inflate+0xe2c>
    1558:	ldr	r2, [r9, #104]	; 0x68
    155c:	cmp	r2, #19
    1560:	bcs	1590 <coda_inflate+0xed8>
    1564:	ldr	r0, [r9, #104]	; 0x68
    1568:	add	r2, r0, #1
    156c:	str	r2, [r9, #104]	; 0x68
    1570:	ldr	r1, [pc, #800]	; 1898 <coda_inflate+0x11e0>
    1574:	add	r0, r1, r0, lsl #1
    1578:	ldrh	ip, [r0]
    157c:	lsl	r2, ip, #1
    1580:	add	r2, r9, r2
    1584:	mov	ip, #0
    1588:	strh	ip, [r2, #112]	; 0x70
    158c:	b	1558 <coda_inflate+0xea0>
    1590:	add	ip, r9, #1328	; 0x530
    1594:	str	ip, [r9, #108]	; 0x6c
    1598:	ldr	ip, [r9, #108]	; 0x6c
    159c:	str	ip, [r9, #76]	; 0x4c
    15a0:	mov	r0, #7
    15a4:	str	r0, [r9, #84]	; 0x54
    15a8:	mov	r0, #0
    15ac:	add	r1, r9, #112	; 0x70
    15b0:	mov	ip, #19
    15b4:	str	ip, [sp, #16]
    15b8:	add	r3, r9, #108	; 0x6c
    15bc:	add	r4, r9, #84	; 0x54
    15c0:	add	r2, r9, #752	; 0x2f0
    15c4:	str	r2, [sp, #4]
    15c8:	str	r4, [sp]
    15cc:	ldr	r2, [sp, #16]
    15d0:	bl	0 <coda_inflate_table>
    15d4:	str	r0, [sp, #16]
    15d8:	ldr	r3, [sp, #16]
    15dc:	cmp	r3, #0
    15e0:	beq	15f8 <coda_inflate+0xf40>
    15e4:	ldr	r3, [pc, #696]	; 18a4 <coda_inflate+0x11ec>
    15e8:	str	r3, [r6, #24]
    15ec:	mov	r0, #29
    15f0:	str	r0, [r9]
    15f4:	b	7c4 <coda_inflate+0x10c>
    15f8:	mov	r3, #0
    15fc:	str	r3, [r9, #104]	; 0x68
    1600:	mov	r0, #18
    1604:	str	r0, [r9]
    1608:	ldr	r0, [r9, #104]	; 0x68
    160c:	ldr	r3, [r9, #96]	; 0x60
    1610:	ldr	r1, [r9, #100]	; 0x64
    1614:	add	r3, r3, r1
    1618:	cmp	r0, r3
    161c:	bcs	18b4 <coda_inflate+0x11fc>
    1620:	ldr	r1, [r9, #76]	; 0x4c
    1624:	mov	r0, #1
    1628:	ldr	ip, [r9, #84]	; 0x54
    162c:	lsl	ip, r0, ip
    1630:	sub	r2, ip, #1
    1634:	and	r2, r8, r2
    1638:	add	r3, r1, r2, lsl #2
    163c:	ldrh	lr, [r3]
    1640:	strh	lr, [sp, #76]	; 0x4c
    1644:	ldrh	lr, [r3, #2]
    1648:	strh	lr, [sp, #78]	; 0x4e
    164c:	ldrb	r0, [sp, #77]	; 0x4d
    1650:	cmp	r0, r7
    1654:	bls	1680 <coda_inflate+0xfc8>
    1658:	cmp	sl, #0
    165c:	beq	21fc <coda_inflate+0x1b44>
    1660:	sub	sl, sl, #1
    1664:	mov	r0, fp
    1668:	add	fp, r0, #1
    166c:	ldrb	r3, [r0]
    1670:	lsl	ip, r3, r7
    1674:	add	r8, r8, ip
    1678:	add	r7, r7, #8
    167c:	b	1620 <coda_inflate+0xf68>
    1680:	ldrh	r1, [sp, #78]	; 0x4e
    1684:	cmp	r1, #16
    1688:	blt	1850 <coda_inflate+0x1198>
    168c:	ldrh	r0, [sp, #78]	; 0x4e
    1690:	cmp	r0, #16
    1694:	bne	1724 <coda_inflate+0x106c>
    1698:	ldrb	ip, [sp, #77]	; 0x4d
    169c:	add	r2, ip, #2
    16a0:	cmp	r7, r2
    16a4:	bcs	16d0 <coda_inflate+0x1018>
    16a8:	cmp	sl, #0
    16ac:	beq	21fc <coda_inflate+0x1b44>
    16b0:	sub	sl, sl, #1
    16b4:	mov	r3, fp
    16b8:	add	fp, r3, #1
    16bc:	ldrb	r2, [r3]
    16c0:	lsl	r2, r2, r7
    16c4:	add	r8, r8, r2
    16c8:	add	r7, r7, #8
    16cc:	b	1698 <coda_inflate+0xfe0>
    16d0:	ldrb	ip, [sp, #77]	; 0x4d
    16d4:	lsr	r8, r8, ip
    16d8:	ldrb	r0, [sp, #77]	; 0x4d
    16dc:	sub	r7, r7, r0
    16e0:	ldr	r2, [r9, #104]	; 0x68
    16e4:	cmp	r2, #0
    16e8:	bne	1700 <coda_inflate+0x1048>
    16ec:	ldr	r1, [pc, #404]	; 1888 <coda_inflate+0x11d0>
    16f0:	str	r1, [r6, #24]
    16f4:	mov	r3, #29
    16f8:	str	r3, [r9]
    16fc:	b	18b4 <coda_inflate+0x11fc>
    1700:	ldr	r3, [r9, #104]	; 0x68
    1704:	lsl	ip, r3, #1
    1708:	add	r1, r9, ip
    170c:	ldrh	r3, [r1, #110]	; 0x6e
    1710:	and	ip, r8, #3
    1714:	add	r1, ip, #3
    1718:	lsr	r8, r8, #2
    171c:	sub	r7, r7, #2
    1720:	b	17ec <coda_inflate+0x1134>
    1724:	ldrh	ip, [sp, #78]	; 0x4e
    1728:	cmp	ip, #17
    172c:	beq	1790 <coda_inflate+0x10d8>
    1730:	ldrb	r2, [sp, #77]	; 0x4d
    1734:	add	r1, r2, #7
    1738:	cmp	r7, r1
    173c:	bcs	1768 <coda_inflate+0x10b0>
    1740:	cmp	sl, #0
    1744:	beq	21fc <coda_inflate+0x1b44>
    1748:	sub	sl, sl, #1
    174c:	mov	r2, fp
    1750:	add	fp, r2, #1
    1754:	ldrb	ip, [r2]
    1758:	lsl	r3, ip, r7
    175c:	add	r8, r8, r3
    1760:	add	r7, r7, #8
    1764:	b	1730 <coda_inflate+0x1078>
    1768:	ldrb	r2, [sp, #77]	; 0x4d
    176c:	lsr	r0, r8, r2
    1770:	ldrb	r2, [sp, #77]	; 0x4d
    1774:	sub	r2, r7, r2
    1778:	mov	r3, #0
    177c:	and	r1, r0, #127	; 0x7f
    1780:	add	r1, r1, #11
    1784:	lsr	r8, r0, #7
    1788:	sub	r7, r2, #7
    178c:	b	17ec <coda_inflate+0x1134>
    1790:	ldrb	r1, [sp, #77]	; 0x4d
    1794:	add	r3, r1, #3
    1798:	cmp	r7, r3
    179c:	bcs	17c8 <coda_inflate+0x1110>
    17a0:	cmp	sl, #0
    17a4:	beq	21fc <coda_inflate+0x1b44>
    17a8:	sub	sl, sl, #1
    17ac:	mov	r2, fp
    17b0:	add	fp, r2, #1
    17b4:	ldrb	r0, [r2]
    17b8:	lsl	ip, r0, r7
    17bc:	add	r8, r8, ip
    17c0:	add	r7, r7, #8
    17c4:	b	1790 <coda_inflate+0x10d8>
    17c8:	ldrb	r0, [sp, #77]	; 0x4d
    17cc:	lsr	r2, r8, r0
    17d0:	ldrb	r3, [sp, #77]	; 0x4d
    17d4:	sub	ip, r7, r3
    17d8:	mov	r3, #0
    17dc:	and	r0, r2, #7
    17e0:	add	r1, r0, #3
    17e4:	lsr	r8, r2, #3
    17e8:	sub	r7, ip, #3
    17ec:	ldr	ip, [r9, #104]	; 0x68
    17f0:	add	r0, ip, r1
    17f4:	ldr	ip, [r9, #96]	; 0x60
    17f8:	ldr	r2, [r9, #100]	; 0x64
    17fc:	add	ip, ip, r2
    1800:	cmp	r0, ip
    1804:	bls	181c <coda_inflate+0x1164>
    1808:	ldr	ip, [pc, #120]	; 1888 <coda_inflate+0x11d0>
    180c:	str	ip, [r6, #24]
    1810:	mov	r2, #29
    1814:	str	r2, [r9]
    1818:	b	18b4 <coda_inflate+0x11fc>
    181c:	mov	ip, r1
    1820:	sub	r1, ip, #1
    1824:	cmp	ip, #0
    1828:	beq	1608 <coda_inflate+0xf50>
    182c:	ldr	ip, [r9, #104]	; 0x68
    1830:	add	r0, ip, #1
    1834:	str	r0, [r9, #104]	; 0x68
    1838:	lsl	r0, ip, #1
    183c:	add	r2, r9, r0
    1840:	bic	ip, r3, #16711680	; 0xff0000
    1844:	bic	ip, ip, #-16777216	; 0xff000000
    1848:	strh	ip, [r2, #112]	; 0x70
    184c:	b	181c <coda_inflate+0x1164>
    1850:	ldrb	r3, [sp, #77]	; 0x4d
    1854:	lsr	r8, r8, r3
    1858:	ldrb	r1, [sp, #77]	; 0x4d
    185c:	sub	r7, r7, r1
    1860:	ldr	r3, [r9, #104]	; 0x68
    1864:	add	r0, r3, #1
    1868:	str	r0, [r9, #104]	; 0x68
    186c:	lsl	r1, r3, #1
    1870:	add	r0, r9, r1
    1874:	ldrh	ip, [sp, #78]	; 0x4e
    1878:	bic	r1, ip, #16711680	; 0xff0000
    187c:	bic	r1, r1, #-16777216	; 0xff000000
    1880:	strh	r1, [r0, #112]	; 0x70
    1884:	b	1608 <coda_inflate+0xf50>
    1888:	.word	0x00000046
    188c:	.word	0x000000cb
    1890:	.word	0x00000125
    1894:	.word	0x000000e8
    1898:	.word	0x00000a54
    189c:	.word	0x00000101
    18a0:	.word	0x00000060
    18a4:	.word	0x000001ba
    18a8:	.word	0x00000032
    18ac:	.word	0x000001a6
    18b0:	.word	0x0000016d
    18b4:	ldr	r0, [r9]
    18b8:	cmp	r0, #29
    18bc:	beq	7c4 <coda_inflate+0x10c>
    18c0:	add	lr, r9, #512	; 0x200
    18c4:	ldrh	r0, [lr, #112]	; 0x70
    18c8:	cmp	r0, #0
    18cc:	bne	18e4 <coda_inflate+0x122c>
    18d0:	ldr	r2, [pc, #3044]	; 24bc <coda_inflate+0x1e04>
    18d4:	str	r2, [r6, #24]
    18d8:	mov	r3, #29
    18dc:	str	r3, [r9]
    18e0:	b	7c4 <coda_inflate+0x10c>
    18e4:	add	r3, r9, #1328	; 0x530
    18e8:	str	r3, [r9, #108]	; 0x6c
    18ec:	ldr	r0, [r9, #108]	; 0x6c
    18f0:	str	r0, [r9, #76]	; 0x4c
    18f4:	mov	r3, #9
    18f8:	str	r3, [r9, #84]	; 0x54
    18fc:	mov	r0, #1
    1900:	add	r1, r9, #112	; 0x70
    1904:	ldr	r2, [r9, #96]	; 0x60
    1908:	add	r3, r9, #108	; 0x6c
    190c:	add	r4, r9, #84	; 0x54
    1910:	add	ip, r9, #752	; 0x2f0
    1914:	str	ip, [sp, #16]
    1918:	ldr	ip, [sp, #16]
    191c:	str	ip, [sp, #4]
    1920:	str	r4, [sp]
    1924:	bl	0 <coda_inflate_table>
    1928:	str	r0, [sp, #16]
    192c:	ldr	r2, [sp, #16]
    1930:	cmp	r2, #0
    1934:	beq	194c <coda_inflate+0x1294>
    1938:	ldr	ip, [pc, #2944]	; 24c0 <coda_inflate+0x1e08>
    193c:	str	ip, [r6, #24]
    1940:	mov	r0, #29
    1944:	str	r0, [r9]
    1948:	b	7c4 <coda_inflate+0x10c>
    194c:	ldr	r1, [r9, #108]	; 0x6c
    1950:	str	r1, [r9, #80]	; 0x50
    1954:	mov	ip, #6
    1958:	str	ip, [r9, #88]	; 0x58
    195c:	mov	r0, #2
    1960:	ldr	r1, [r9, #96]	; 0x60
    1964:	lsl	r2, r1, #1
    1968:	add	r1, r9, r2
    196c:	add	r1, r1, #112	; 0x70
    1970:	ldr	r2, [r9, #100]	; 0x64
    1974:	str	r2, [sp, #16]
    1978:	add	r3, r9, #108	; 0x6c
    197c:	add	r2, r9, #88	; 0x58
    1980:	add	r4, r9, #752	; 0x2f0
    1984:	str	r4, [sp, #4]
    1988:	str	r2, [sp]
    198c:	ldr	r2, [sp, #16]
    1990:	bl	0 <coda_inflate_table>
    1994:	str	r0, [sp, #16]
    1998:	ldr	r2, [sp, #16]
    199c:	cmp	r2, #0
    19a0:	beq	19b8 <coda_inflate+0x1300>
    19a4:	ldr	r2, [pc, #2844]	; 24c8 <coda_inflate+0x1e10>
    19a8:	str	r2, [r6, #24]
    19ac:	mov	ip, #29
    19b0:	str	ip, [r9]
    19b4:	b	7c4 <coda_inflate+0x10c>
    19b8:	mov	r3, #19
    19bc:	str	r3, [r9]
    19c0:	ldr	r3, [sp, #32]
    19c4:	cmp	r3, #6
    19c8:	beq	21fc <coda_inflate+0x1b44>
    19cc:	mov	r0, #20
    19d0:	str	r0, [r9]
    19d4:	cmp	sl, #6
    19d8:	bcs	19e4 <coda_inflate+0x132c>
    19dc:	mov	r2, #0
    19e0:	b	19f4 <coda_inflate+0x133c>
    19e4:	movw	lr, #258	; 0x102
    19e8:	cmp	r5, lr
    19ec:	movcs	r2, #1
    19f0:	movcc	r2, #0
    19f4:	cmp	r2, #0
    19f8:	beq	1a5c <coda_inflate+0x13a4>
    19fc:	ldr	r2, [sp, #24]
    1a00:	str	r2, [r6, #12]
    1a04:	str	r5, [r6, #16]
    1a08:	str	fp, [r6]
    1a0c:	str	sl, [r6, #4]
    1a10:	str	r8, [r9, #56]	; 0x38
    1a14:	str	r7, [r9, #60]	; 0x3c
    1a18:	ldr	r1, [sp, #28]
    1a1c:	mov	r0, r6
    1a20:	bl	0 <coda_inflate_fast>
    1a24:	ldr	ip, [r6, #12]
    1a28:	str	ip, [sp, #24]
    1a2c:	ldr	r5, [r6, #16]
    1a30:	ldr	fp, [r6]
    1a34:	ldr	sl, [r6, #4]
    1a38:	ldr	r8, [r9, #56]	; 0x38
    1a3c:	ldr	r7, [r9, #60]	; 0x3c
    1a40:	ldr	ip, [r9]
    1a44:	cmp	ip, #11
    1a48:	bne	7c4 <coda_inflate+0x10c>
    1a4c:	mvn	r3, #0
    1a50:	add	lr, r9, #4096	; 0x1000
    1a54:	str	r3, [lr, #3012]	; 0xbc4
    1a58:	b	7c4 <coda_inflate+0x10c>
    1a5c:	mov	r2, #0
    1a60:	add	lr, r9, #4096	; 0x1000
    1a64:	str	r2, [lr, #3012]	; 0xbc4
    1a68:	ldr	r3, [r9, #76]	; 0x4c
    1a6c:	mov	ip, #1
    1a70:	ldr	r2, [r9, #84]	; 0x54
    1a74:	lsl	r1, ip, r2
    1a78:	sub	ip, r1, #1
    1a7c:	and	r2, r8, ip
    1a80:	add	ip, r3, r2, lsl #2
    1a84:	ldrh	lr, [ip]
    1a88:	strh	lr, [sp, #76]	; 0x4c
    1a8c:	ldrh	lr, [ip, #2]
    1a90:	strh	lr, [sp, #78]	; 0x4e
    1a94:	ldrb	ip, [sp, #77]	; 0x4d
    1a98:	cmp	ip, r7
    1a9c:	bls	1ac8 <coda_inflate+0x1410>
    1aa0:	cmp	sl, #0
    1aa4:	beq	21fc <coda_inflate+0x1b44>
    1aa8:	sub	sl, sl, #1
    1aac:	mov	r1, fp
    1ab0:	add	fp, r1, #1
    1ab4:	ldrb	r1, [r1]
    1ab8:	lsl	r0, r1, r7
    1abc:	add	r8, r8, r0
    1ac0:	add	r7, r7, #8
    1ac4:	b	1a68 <coda_inflate+0x13b0>
    1ac8:	ldrb	r1, [sp, #76]	; 0x4c
    1acc:	cmp	r1, #0
    1ad0:	beq	1aec <coda_inflate+0x1434>
    1ad4:	ldrb	r1, [sp, #76]	; 0x4c
    1ad8:	and	r1, r1, #240	; 0xf0
    1adc:	cmp	r1, #0
    1ae0:	moveq	ip, #1
    1ae4:	movne	ip, #0
    1ae8:	b	1af0 <coda_inflate+0x1438>
    1aec:	mov	ip, #0
    1af0:	cmp	ip, #0
    1af4:	beq	1bb0 <coda_inflate+0x14f8>
    1af8:	ldrh	lr, [sp, #76]	; 0x4c
    1afc:	strh	lr, [sp, #80]	; 0x50
    1b00:	ldrh	lr, [sp, #78]	; 0x4e
    1b04:	strh	lr, [sp, #82]	; 0x52
    1b08:	ldr	ip, [r9, #76]	; 0x4c
    1b0c:	ldrh	r0, [sp, #82]	; 0x52
    1b10:	mov	r2, #1
    1b14:	ldrb	r1, [sp, #81]	; 0x51
    1b18:	ldrb	r3, [sp, #80]	; 0x50
    1b1c:	add	r1, r1, r3
    1b20:	lsl	r1, r2, r1
    1b24:	sub	r2, r1, #1
    1b28:	and	r3, r8, r2
    1b2c:	ldrb	r1, [sp, #81]	; 0x51
    1b30:	lsr	r1, r3, r1
    1b34:	add	r0, r0, r1
    1b38:	add	r1, ip, r0, lsl #2
    1b3c:	ldrh	lr, [r1]
    1b40:	strh	lr, [sp, #76]	; 0x4c
    1b44:	ldrh	lr, [r1, #2]
    1b48:	strh	lr, [sp, #78]	; 0x4e
    1b4c:	ldrb	r0, [sp, #81]	; 0x51
    1b50:	ldrb	r2, [sp, #77]	; 0x4d
    1b54:	add	r2, r0, r2
    1b58:	cmp	r2, r7
    1b5c:	bls	1b88 <coda_inflate+0x14d0>
    1b60:	cmp	sl, #0
    1b64:	beq	21fc <coda_inflate+0x1b44>
    1b68:	sub	sl, sl, #1
    1b6c:	mov	r3, fp
    1b70:	add	fp, r3, #1
    1b74:	ldrb	r3, [r3]
    1b78:	lsl	r2, r3, r7
    1b7c:	add	r8, r8, r2
    1b80:	add	r7, r7, #8
    1b84:	b	1b08 <coda_inflate+0x1450>
    1b88:	ldrb	r2, [sp, #81]	; 0x51
    1b8c:	lsr	r8, r8, r2
    1b90:	ldrb	r1, [sp, #81]	; 0x51
    1b94:	sub	r7, r7, r1
    1b98:	add	lr, r9, #4096	; 0x1000
    1b9c:	ldr	r2, [lr, #3012]	; 0xbc4
    1ba0:	ldrb	r3, [sp, #81]	; 0x51
    1ba4:	add	r1, r2, r3
    1ba8:	add	lr, r9, #4096	; 0x1000
    1bac:	str	r1, [lr, #3012]	; 0xbc4
    1bb0:	ldrb	r0, [sp, #77]	; 0x4d
    1bb4:	lsr	r8, r8, r0
    1bb8:	ldrb	ip, [sp, #77]	; 0x4d
    1bbc:	sub	r7, r7, ip
    1bc0:	add	lr, r9, #4096	; 0x1000
    1bc4:	ldr	r0, [lr, #3012]	; 0xbc4
    1bc8:	ldrb	ip, [sp, #77]	; 0x4d
    1bcc:	add	r3, r0, ip
    1bd0:	add	lr, r9, #4096	; 0x1000
    1bd4:	str	r3, [lr, #3012]	; 0xbc4
    1bd8:	ldrh	r3, [sp, #78]	; 0x4e
    1bdc:	str	r3, [r9, #64]	; 0x40
    1be0:	ldrb	ip, [sp, #76]	; 0x4c
    1be4:	cmp	ip, #0
    1be8:	bne	1bf8 <coda_inflate+0x1540>
    1bec:	mov	ip, #25
    1bf0:	str	ip, [r9]
    1bf4:	b	7c4 <coda_inflate+0x10c>
    1bf8:	ldrb	r2, [sp, #76]	; 0x4c
    1bfc:	and	r3, r2, #32
    1c00:	cmp	r3, #0
    1c04:	beq	1c20 <coda_inflate+0x1568>
    1c08:	mvn	ip, #0
    1c0c:	add	lr, r9, #4096	; 0x1000
    1c10:	str	ip, [lr, #3012]	; 0xbc4
    1c14:	mov	r2, #11
    1c18:	str	r2, [r9]
    1c1c:	b	7c4 <coda_inflate+0x10c>
    1c20:	ldrb	ip, [sp, #76]	; 0x4c
    1c24:	and	r1, ip, #64	; 0x40
    1c28:	cmp	r1, #0
    1c2c:	beq	1c44 <coda_inflate+0x158c>
    1c30:	ldr	r2, [pc, #2172]	; 24b4 <coda_inflate+0x1dfc>
    1c34:	str	r2, [r6, #24]
    1c38:	mov	r3, #29
    1c3c:	str	r3, [r9]
    1c40:	b	7c4 <coda_inflate+0x10c>
    1c44:	ldrb	r1, [sp, #76]	; 0x4c
    1c48:	and	r3, r1, #15
    1c4c:	str	r3, [r9, #72]	; 0x48
    1c50:	mov	r3, #21
    1c54:	str	r3, [r9]
    1c58:	ldr	r0, [r9, #72]	; 0x48
    1c5c:	cmp	r0, #0
    1c60:	beq	1ce0 <coda_inflate+0x1628>
    1c64:	ldr	r1, [r9, #72]	; 0x48
    1c68:	cmp	r7, r1
    1c6c:	bcs	1c98 <coda_inflate+0x15e0>
    1c70:	cmp	sl, #0
    1c74:	beq	21fc <coda_inflate+0x1b44>
    1c78:	sub	sl, sl, #1
    1c7c:	mov	ip, fp
    1c80:	add	fp, ip, #1
    1c84:	ldrb	r0, [ip]
    1c88:	lsl	ip, r0, r7
    1c8c:	add	r8, r8, ip
    1c90:	add	r7, r7, #8
    1c94:	b	1c64 <coda_inflate+0x15ac>
    1c98:	ldr	r1, [r9, #64]	; 0x40
    1c9c:	mov	r0, #1
    1ca0:	ldr	r2, [r9, #72]	; 0x48
    1ca4:	lsl	r2, r0, r2
    1ca8:	sub	r2, r2, #1
    1cac:	and	r2, r8, r2
    1cb0:	add	ip, r1, r2
    1cb4:	str	ip, [r9, #64]	; 0x40
    1cb8:	ldr	r1, [r9, #72]	; 0x48
    1cbc:	lsr	r8, r8, r1
    1cc0:	ldr	r0, [r9, #72]	; 0x48
    1cc4:	sub	r7, r7, r0
    1cc8:	add	lr, r9, #4096	; 0x1000
    1ccc:	ldr	ip, [lr, #3012]	; 0xbc4
    1cd0:	ldr	r2, [r9, #72]	; 0x48
    1cd4:	add	r0, ip, r2
    1cd8:	add	lr, r9, #4096	; 0x1000
    1cdc:	str	r0, [lr, #3012]	; 0xbc4
    1ce0:	ldr	r1, [r9, #64]	; 0x40
    1ce4:	add	lr, r9, #4096	; 0x1000
    1ce8:	str	r1, [lr, #3016]	; 0xbc8
    1cec:	mov	r0, #22
    1cf0:	str	r0, [r9]
    1cf4:	ldr	r2, [r9, #80]	; 0x50
    1cf8:	mov	ip, #1
    1cfc:	ldr	r3, [r9, #88]	; 0x58
    1d00:	lsl	r0, ip, r3
    1d04:	sub	r1, r0, #1
    1d08:	and	r3, r8, r1
    1d0c:	add	r0, r2, r3, lsl #2
    1d10:	ldrh	lr, [r0]
    1d14:	strh	lr, [sp, #76]	; 0x4c
    1d18:	ldrh	lr, [r0, #2]
    1d1c:	strh	lr, [sp, #78]	; 0x4e
    1d20:	ldrb	ip, [sp, #77]	; 0x4d
    1d24:	cmp	ip, r7
    1d28:	bls	1d54 <coda_inflate+0x169c>
    1d2c:	cmp	sl, #0
    1d30:	beq	21fc <coda_inflate+0x1b44>
    1d34:	sub	sl, sl, #1
    1d38:	mov	r3, fp
    1d3c:	add	fp, r3, #1
    1d40:	ldrb	ip, [r3]
    1d44:	lsl	r0, ip, r7
    1d48:	add	r8, r8, r0
    1d4c:	add	r7, r7, #8
    1d50:	b	1cf4 <coda_inflate+0x163c>
    1d54:	ldrb	r0, [sp, #76]	; 0x4c
    1d58:	and	r1, r0, #240	; 0xf0
    1d5c:	cmp	r1, #0
    1d60:	bne	1e1c <coda_inflate+0x1764>
    1d64:	ldrh	lr, [sp, #76]	; 0x4c
    1d68:	strh	lr, [sp, #80]	; 0x50
    1d6c:	ldrh	lr, [sp, #78]	; 0x4e
    1d70:	strh	lr, [sp, #82]	; 0x52
    1d74:	ldr	r0, [r9, #80]	; 0x50
    1d78:	ldrh	r2, [sp, #82]	; 0x52
    1d7c:	mov	r1, #1
    1d80:	ldrb	ip, [sp, #81]	; 0x51
    1d84:	ldrb	r3, [sp, #80]	; 0x50
    1d88:	add	ip, ip, r3
    1d8c:	lsl	ip, r1, ip
    1d90:	sub	r3, ip, #1
    1d94:	and	ip, r8, r3
    1d98:	ldrb	r3, [sp, #81]	; 0x51
    1d9c:	lsr	ip, ip, r3
    1da0:	add	r3, r2, ip
    1da4:	add	r2, r0, r3, lsl #2
    1da8:	ldrh	lr, [r2]
    1dac:	strh	lr, [sp, #76]	; 0x4c
    1db0:	ldrh	lr, [r2, #2]
    1db4:	strh	lr, [sp, #78]	; 0x4e
    1db8:	ldrb	ip, [sp, #81]	; 0x51
    1dbc:	ldrb	r3, [sp, #77]	; 0x4d
    1dc0:	add	r3, ip, r3
    1dc4:	cmp	r3, r7
    1dc8:	bls	1df4 <coda_inflate+0x173c>
    1dcc:	cmp	sl, #0
    1dd0:	beq	21fc <coda_inflate+0x1b44>
    1dd4:	sub	sl, sl, #1
    1dd8:	mov	r0, fp
    1ddc:	add	fp, r0, #1
    1de0:	ldrb	ip, [r0]
    1de4:	lsl	r1, ip, r7
    1de8:	add	r8, r8, r1
    1dec:	add	r7, r7, #8
    1df0:	b	1d74 <coda_inflate+0x16bc>
    1df4:	ldrb	r3, [sp, #81]	; 0x51
    1df8:	lsr	r8, r8, r3
    1dfc:	ldrb	ip, [sp, #81]	; 0x51
    1e00:	sub	r7, r7, ip
    1e04:	add	lr, r9, #4096	; 0x1000
    1e08:	ldr	ip, [lr, #3012]	; 0xbc4
    1e0c:	ldrb	r1, [sp, #81]	; 0x51
    1e10:	add	ip, ip, r1
    1e14:	add	lr, r9, #4096	; 0x1000
    1e18:	str	ip, [lr, #3012]	; 0xbc4
    1e1c:	ldrb	r3, [sp, #77]	; 0x4d
    1e20:	lsr	r8, r8, r3
    1e24:	ldrb	r1, [sp, #77]	; 0x4d
    1e28:	sub	r7, r7, r1
    1e2c:	add	lr, r9, #4096	; 0x1000
    1e30:	ldr	r1, [lr, #3012]	; 0xbc4
    1e34:	ldrb	r2, [sp, #77]	; 0x4d
    1e38:	add	r3, r1, r2
    1e3c:	add	lr, r9, #4096	; 0x1000
    1e40:	str	r3, [lr, #3012]	; 0xbc4
    1e44:	ldrb	r0, [sp, #76]	; 0x4c
    1e48:	and	r0, r0, #64	; 0x40
    1e4c:	cmp	r0, #0
    1e50:	beq	1e68 <coda_inflate+0x17b0>
    1e54:	ldr	r0, [pc, #1628]	; 24b8 <coda_inflate+0x1e00>
    1e58:	str	r0, [r6, #24]
    1e5c:	mov	r0, #29
    1e60:	str	r0, [r9]
    1e64:	b	7c4 <coda_inflate+0x10c>
    1e68:	ldrh	r2, [sp, #78]	; 0x4e
    1e6c:	str	r2, [r9, #68]	; 0x44
    1e70:	ldrb	r3, [sp, #76]	; 0x4c
    1e74:	and	ip, r3, #15
    1e78:	str	ip, [r9, #72]	; 0x48
    1e7c:	mov	r0, #23
    1e80:	str	r0, [r9]
    1e84:	ldr	ip, [r9, #72]	; 0x48
    1e88:	cmp	ip, #0
    1e8c:	beq	1f0c <coda_inflate+0x1854>
    1e90:	ldr	r3, [r9, #72]	; 0x48
    1e94:	cmp	r7, r3
    1e98:	bcs	1ec4 <coda_inflate+0x180c>
    1e9c:	cmp	sl, #0
    1ea0:	beq	21fc <coda_inflate+0x1b44>
    1ea4:	sub	sl, sl, #1
    1ea8:	mov	r1, fp
    1eac:	add	fp, r1, #1
    1eb0:	ldrb	r0, [r1]
    1eb4:	lsl	r0, r0, r7
    1eb8:	add	r8, r8, r0
    1ebc:	add	r7, r7, #8
    1ec0:	b	1e90 <coda_inflate+0x17d8>
    1ec4:	ldr	r3, [r9, #68]	; 0x44
    1ec8:	mov	r0, #1
    1ecc:	ldr	r1, [r9, #72]	; 0x48
    1ed0:	lsl	r0, r0, r1
    1ed4:	sub	r2, r0, #1
    1ed8:	and	ip, r8, r2
    1edc:	add	r0, r3, ip
    1ee0:	str	r0, [r9, #68]	; 0x44
    1ee4:	ldr	r2, [r9, #72]	; 0x48
    1ee8:	lsr	r8, r8, r2
    1eec:	ldr	r2, [r9, #72]	; 0x48
    1ef0:	sub	r7, r7, r2
    1ef4:	add	lr, r9, #4096	; 0x1000
    1ef8:	ldr	r0, [lr, #3012]	; 0xbc4
    1efc:	ldr	ip, [r9, #72]	; 0x48
    1f00:	add	r2, r0, ip
    1f04:	add	lr, r9, #4096	; 0x1000
    1f08:	str	r2, [lr, #3012]	; 0xbc4
    1f0c:	mov	r1, #24
    1f10:	str	r1, [r9]
    1f14:	cmp	r5, #0
    1f18:	beq	21fc <coda_inflate+0x1b44>
    1f1c:	ldr	r1, [sp, #28]
    1f20:	sub	r1, r1, r5
    1f24:	ldr	r2, [r9, #68]	; 0x44
    1f28:	cmp	r2, r1
    1f2c:	bls	1fb4 <coda_inflate+0x18fc>
    1f30:	ldr	r2, [r9, #68]	; 0x44
    1f34:	sub	ip, r2, r1
    1f38:	ldr	r3, [r9, #44]	; 0x2c
    1f3c:	cmp	ip, r3
    1f40:	bls	1f68 <coda_inflate+0x18b0>
    1f44:	add	lr, r9, #4096	; 0x1000
    1f48:	ldr	r0, [lr, #3008]	; 0xbc0
    1f4c:	cmp	r0, #0
    1f50:	beq	1f68 <coda_inflate+0x18b0>
    1f54:	ldr	r1, [pc, #1384]	; 24c4 <coda_inflate+0x1e0c>
    1f58:	str	r1, [r6, #24]
    1f5c:	mov	r3, #29
    1f60:	str	r3, [r9]
    1f64:	b	7c4 <coda_inflate+0x10c>
    1f68:	ldr	r3, [r9, #48]	; 0x30
    1f6c:	cmp	ip, r3
    1f70:	bls	1f90 <coda_inflate+0x18d8>
    1f74:	ldr	r1, [r9, #48]	; 0x30
    1f78:	sub	ip, ip, r1
    1f7c:	ldr	r2, [r9, #52]	; 0x34
    1f80:	ldr	r3, [r9, #40]	; 0x28
    1f84:	sub	r0, r3, ip
    1f88:	add	r0, r2, r0
    1f8c:	b	1fa0 <coda_inflate+0x18e8>
    1f90:	ldr	r1, [r9, #52]	; 0x34
    1f94:	ldr	r2, [r9, #48]	; 0x30
    1f98:	sub	r0, r2, ip
    1f9c:	add	r0, r1, r0
    1fa0:	ldr	r1, [r9, #64]	; 0x40
    1fa4:	cmp	ip, r1
    1fa8:	bls	1fc4 <coda_inflate+0x190c>
    1fac:	ldr	ip, [r9, #64]	; 0x40
    1fb0:	b	1fc4 <coda_inflate+0x190c>
    1fb4:	ldr	ip, [r9, #68]	; 0x44
    1fb8:	ldr	r0, [sp, #24]
    1fbc:	sub	r0, r0, ip
    1fc0:	ldr	ip, [r9, #64]	; 0x40
    1fc4:	cmp	ip, r5
    1fc8:	bls	1fd0 <coda_inflate+0x1918>
    1fcc:	mov	ip, r5
    1fd0:	sub	r5, r5, ip
    1fd4:	ldr	r1, [r9, #64]	; 0x40
    1fd8:	sub	r1, r1, ip
    1fdc:	str	r1, [r9, #64]	; 0x40
    1fe0:	ldr	r1, [sp, #24]
    1fe4:	add	r2, r1, #1
    1fe8:	str	r2, [sp, #24]
    1fec:	mov	r2, r0
    1ff0:	add	r0, r2, #1
    1ff4:	ldrb	r2, [r2]
    1ff8:	and	r3, r2, #255	; 0xff
    1ffc:	strb	r3, [r1]
    2000:	sub	ip, ip, #1
    2004:	cmp	ip, #0
    2008:	bne	1fe0 <coda_inflate+0x1928>
    200c:	ldr	r1, [r9, #64]	; 0x40
    2010:	cmp	r1, #0
    2014:	bne	7c4 <coda_inflate+0x10c>
    2018:	mov	r3, #20
    201c:	str	r3, [r9]
    2020:	b	7c4 <coda_inflate+0x10c>
    2024:	cmp	r5, #0
    2028:	beq	21fc <coda_inflate+0x1b44>
    202c:	ldr	r0, [sp, #24]
    2030:	add	r3, r0, #1
    2034:	str	r3, [sp, #24]
    2038:	ldr	r1, [r9, #64]	; 0x40
    203c:	and	ip, r1, #255	; 0xff
    2040:	strb	ip, [r0]
    2044:	sub	r5, r5, #1
    2048:	mov	r3, #20
    204c:	str	r3, [r9]
    2050:	b	7c4 <coda_inflate+0x10c>
    2054:	ldr	ip, [r9, #8]
    2058:	cmp	ip, #0
    205c:	beq	2154 <coda_inflate+0x1a9c>
    2060:	cmp	r7, #32
    2064:	bcs	2090 <coda_inflate+0x19d8>
    2068:	cmp	sl, #0
    206c:	beq	21fc <coda_inflate+0x1b44>
    2070:	sub	sl, sl, #1
    2074:	mov	r3, fp
    2078:	add	fp, r3, #1
    207c:	ldrb	r3, [r3]
    2080:	lsl	ip, r3, r7
    2084:	add	r8, r8, ip
    2088:	add	r7, r7, #8
    208c:	b	2060 <coda_inflate+0x19a8>
    2090:	ldr	r0, [sp, #28]
    2094:	sub	r2, r0, r5
    2098:	ldr	r0, [r6, #20]
    209c:	add	r1, r0, r2
    20a0:	str	r1, [r6, #20]
    20a4:	ldr	r1, [r9, #28]
    20a8:	add	r0, r1, r2
    20ac:	str	r0, [r9, #28]
    20b0:	cmp	r2, #0
    20b4:	beq	20f0 <coda_inflate+0x1a38>
    20b8:	ldr	r0, [r9, #16]
    20bc:	cmp	r0, #0
    20c0:	bne	20d8 <coda_inflate+0x1a20>
    20c4:	ldr	r0, [r9, #24]
    20c8:	ldr	r1, [sp, #24]
    20cc:	sub	r1, r1, r2
    20d0:	bl	0 <coda_adler32>
    20d4:	b	20e8 <coda_inflate+0x1a30>
    20d8:	ldr	r0, [r9, #24]
    20dc:	ldr	r1, [sp, #24]
    20e0:	sub	r1, r1, r2
    20e4:	bl	0 <coda_crc32>
    20e8:	str	r0, [r9, #24]
    20ec:	str	r0, [r6, #48]	; 0x30
    20f0:	str	r5, [sp, #28]
    20f4:	ldr	r1, [r9, #16]
    20f8:	cmp	r1, #0
    20fc:	bne	2128 <coda_inflate+0x1a70>
    2100:	lsr	ip, r8, #24
    2104:	and	r2, ip, #255	; 0xff
    2108:	lsr	r1, r8, #8
    210c:	and	r3, r1, #65280	; 0xff00
    2110:	add	r3, r2, r3
    2114:	and	r2, r8, #65280	; 0xff00
    2118:	add	r1, r3, r2, lsl #8
    211c:	and	r2, r8, #255	; 0xff
    2120:	add	r1, r1, r2, lsl #24
    2124:	b	212c <coda_inflate+0x1a74>
    2128:	mov	r1, r8
    212c:	ldr	ip, [r9, #24]
    2130:	cmp	r1, ip
    2134:	beq	214c <coda_inflate+0x1a94>
    2138:	ldr	r3, [pc, #908]	; 24cc <coda_inflate+0x1e14>
    213c:	str	r3, [r6, #24]
    2140:	mov	r3, #29
    2144:	str	r3, [r9]
    2148:	b	7c4 <coda_inflate+0x10c>
    214c:	mov	r8, #0
    2150:	mov	r7, #0
    2154:	mov	r2, #27
    2158:	str	r2, [r9]
    215c:	ldr	ip, [r9, #8]
    2160:	cmp	ip, #0
    2164:	beq	217c <coda_inflate+0x1ac4>
    2168:	ldr	r0, [r9, #16]
    216c:	cmp	r0, #0
    2170:	movne	r2, #1
    2174:	moveq	r2, #0
    2178:	b	2180 <coda_inflate+0x1ac8>
    217c:	mov	r2, #0
    2180:	cmp	r2, #0
    2184:	beq	21e0 <coda_inflate+0x1b28>
    2188:	cmp	r7, #32
    218c:	bcs	21b8 <coda_inflate+0x1b00>
    2190:	cmp	sl, #0
    2194:	beq	21fc <coda_inflate+0x1b44>
    2198:	sub	sl, sl, #1
    219c:	mov	ip, fp
    21a0:	add	fp, ip, #1
    21a4:	ldrb	ip, [ip]
    21a8:	lsl	r3, ip, r7
    21ac:	add	r8, r8, r3
    21b0:	add	r7, r7, #8
    21b4:	b	2188 <coda_inflate+0x1ad0>
    21b8:	ldr	r1, [r9, #28]
    21bc:	cmp	r8, r1
    21c0:	beq	21d8 <coda_inflate+0x1b20>
    21c4:	ldr	r3, [pc, #740]	; 24b0 <coda_inflate+0x1df8>
    21c8:	str	r3, [r6, #24]
    21cc:	mov	r3, #29
    21d0:	str	r3, [r9]
    21d4:	b	7c4 <coda_inflate+0x10c>
    21d8:	mov	r8, #0
    21dc:	mov	r7, #0
    21e0:	mov	ip, #28
    21e4:	str	ip, [r9]
    21e8:	mov	r2, #1
    21ec:	str	r2, [sp, #16]
    21f0:	b	21fc <coda_inflate+0x1b44>
    21f4:	mvn	r0, #2
    21f8:	str	r0, [sp, #16]
    21fc:	ldr	r1, [sp, #24]
    2200:	str	r1, [r6, #12]
    2204:	str	r5, [r6, #16]
    2208:	str	fp, [r6]
    220c:	str	sl, [r6, #4]
    2210:	str	r8, [r9, #56]	; 0x38
    2214:	str	r7, [r9, #60]	; 0x3c
    2218:	ldr	r3, [r9, #40]	; 0x28
    221c:	cmp	r3, #0
    2220:	bne	22a8 <coda_inflate+0x1bf0>
    2224:	ldr	r1, [r6, #16]
    2228:	ldr	r2, [sp, #28]
    222c:	cmp	r2, r1
    2230:	beq	2248 <coda_inflate+0x1b90>
    2234:	ldr	r3, [r9]
    2238:	cmp	r3, #29
    223c:	movlt	r1, #1
    2240:	movge	r1, #0
    2244:	b	224c <coda_inflate+0x1b94>
    2248:	mov	r1, #0
    224c:	cmp	r1, #0
    2250:	beq	22a0 <coda_inflate+0x1be8>
    2254:	ldr	r3, [r9]
    2258:	cmp	r3, #26
    225c:	blt	228c <coda_inflate+0x1bd4>
    2260:	ldr	r0, [sp, #32]
    2264:	cmp	r0, #4
    2268:	movne	ip, #1
    226c:	moveq	ip, #0
    2270:	cmp	ip, #0
    2274:	movne	r3, #1
    2278:	moveq	r3, #0
    227c:	cmp	r3, #0
    2280:	movne	r1, #1
    2284:	moveq	r1, #0
    2288:	b	22ac <coda_inflate+0x1bf4>
    228c:	mov	r0, #1
    2290:	cmp	r0, #0
    2294:	movne	r1, #1
    2298:	moveq	r1, #0
    229c:	b	22ac <coda_inflate+0x1bf4>
    22a0:	mov	r1, #0
    22a4:	b	22ac <coda_inflate+0x1bf4>
    22a8:	mov	r1, #1
    22ac:	cmp	r1, #0
    22b0:	beq	22e4 <coda_inflate+0x1c2c>
    22b4:	ldr	r1, [r6, #12]
    22b8:	ldr	r2, [r6, #16]
    22bc:	ldr	ip, [sp, #28]
    22c0:	sub	r2, ip, r2
    22c4:	mov	r0, r6
    22c8:	bl	530 <updatewindow>
    22cc:	cmp	r0, #0
    22d0:	beq	22e4 <coda_inflate+0x1c2c>
    22d4:	mov	r3, #30
    22d8:	str	r3, [r9]
    22dc:	mvn	r0, #3
    22e0:	b	2484 <coda_inflate+0x1dcc>
    22e4:	ldr	r0, [r6, #4]
    22e8:	ldr	r2, [sp, #36]	; 0x24
    22ec:	sub	r4, r2, r0
    22f0:	ldr	r1, [r6, #16]
    22f4:	ldr	r3, [sp, #28]
    22f8:	sub	r5, r3, r1
    22fc:	ldr	r2, [r6, #8]
    2300:	add	r2, r2, r4
    2304:	str	r2, [r6, #8]
    2308:	ldr	r1, [r6, #20]
    230c:	add	ip, r1, r5
    2310:	str	ip, [r6, #20]
    2314:	ldr	r2, [r9, #28]
    2318:	add	ip, r2, r5
    231c:	str	ip, [r9, #28]
    2320:	ldr	r2, [r9, #8]
    2324:	cmp	r2, #0
    2328:	bne	2334 <coda_inflate+0x1c7c>
    232c:	mov	ip, #0
    2330:	b	2340 <coda_inflate+0x1c88>
    2334:	cmp	r5, #0
    2338:	movne	ip, #1
    233c:	moveq	ip, #0
    2340:	cmp	ip, #0
    2344:	beq	2388 <coda_inflate+0x1cd0>
    2348:	ldr	r2, [r9, #16]
    234c:	cmp	r2, #0
    2350:	bne	236c <coda_inflate+0x1cb4>
    2354:	ldr	r0, [r9, #24]
    2358:	ldr	r1, [r6, #12]
    235c:	sub	r1, r1, r5
    2360:	mov	r2, r5
    2364:	bl	0 <coda_adler32>
    2368:	b	2380 <coda_inflate+0x1cc8>
    236c:	ldr	r0, [r9, #24]
    2370:	ldr	r1, [r6, #12]
    2374:	sub	r1, r1, r5
    2378:	mov	r2, r5
    237c:	bl	0 <coda_crc32>
    2380:	str	r0, [r9, #24]
    2384:	str	r0, [r6, #48]	; 0x30
    2388:	ldr	r3, [r9, #4]
    238c:	cmp	r3, #0
    2390:	bne	239c <coda_inflate+0x1ce4>
    2394:	mov	ip, #0
    2398:	b	23a0 <coda_inflate+0x1ce8>
    239c:	mov	ip, #64	; 0x40
    23a0:	ldr	r3, [r9]
    23a4:	cmp	r3, #11
    23a8:	beq	23b4 <coda_inflate+0x1cfc>
    23ac:	mov	r3, #0
    23b0:	b	23b8 <coda_inflate+0x1d00>
    23b4:	mov	r3, #128	; 0x80
    23b8:	ldr	r0, [r9]
    23bc:	cmp	r0, #19
    23c0:	beq	23d8 <coda_inflate+0x1d20>
    23c4:	ldr	r1, [r9]
    23c8:	cmp	r1, #14
    23cc:	moveq	r2, #1
    23d0:	movne	r2, #0
    23d4:	b	23dc <coda_inflate+0x1d24>
    23d8:	mov	r2, #1
    23dc:	cmp	r2, #0
    23e0:	bne	23ec <coda_inflate+0x1d34>
    23e4:	mov	r0, #0
    23e8:	b	23f0 <coda_inflate+0x1d38>
    23ec:	mov	r0, #256	; 0x100
    23f0:	ldr	r2, [r9, #60]	; 0x3c
    23f4:	add	ip, r2, ip
    23f8:	add	ip, ip, r3
    23fc:	add	r1, ip, r0
    2400:	str	r1, [r6, #44]	; 0x2c
    2404:	cmp	r4, #0
    2408:	beq	2414 <coda_inflate+0x1d5c>
    240c:	mov	r2, #0
    2410:	b	2420 <coda_inflate+0x1d68>
    2414:	cmp	r5, #0
    2418:	moveq	r2, #1
    241c:	movne	r2, #0
    2420:	cmp	r2, #0
    2424:	bne	243c <coda_inflate+0x1d84>
    2428:	ldr	ip, [sp, #32]
    242c:	cmp	ip, #4
    2430:	moveq	r0, #1
    2434:	movne	r0, #0
    2438:	b	2440 <coda_inflate+0x1d88>
    243c:	mov	r0, #1
    2440:	cmp	r0, #0
    2444:	bne	2450 <coda_inflate+0x1d98>
    2448:	mov	r1, #0
    244c:	b	2460 <coda_inflate+0x1da8>
    2450:	ldr	r0, [sp, #16]
    2454:	cmp	r0, #0
    2458:	moveq	r1, #1
    245c:	movne	r1, #0
    2460:	cmp	r1, #0
    2464:	beq	2470 <coda_inflate+0x1db8>
    2468:	mvn	r2, #4
    246c:	str	r2, [sp, #16]
    2470:	ldr	r0, [sp, #16]
    2474:	b	2484 <coda_inflate+0x1dcc>
    2478:	mvn	r0, #3
    247c:	b	2484 <coda_inflate+0x1dcc>
    2480:	mvn	r0, #1
    2484:	ldr	r4, [sp, #40]	; 0x28
    2488:	ldr	r5, [sp, #44]	; 0x2c
    248c:	ldr	r6, [sp, #48]	; 0x30
    2490:	ldr	r7, [sp, #52]	; 0x34
    2494:	ldr	r8, [sp, #56]	; 0x38
    2498:	ldr	r9, [sp, #60]	; 0x3c
    249c:	ldr	sl, [sp, #64]	; 0x40
    24a0:	ldr	fp, [sp, #68]	; 0x44
    24a4:	ldr	lr, [sp, #12]
    24a8:	add	sp, sp, #88	; 0x58
    24ac:	bx	lr
    24b0:	.word	0x000000b4
    24b4:	.word	0x00000073
    24b8:	.word	0x00000000
    24bc:	.word	0x0000008f
    24c0:	.word	0x00000151
    24c4:	.word	0x00000188
    24c8:	.word	0x00000016
    24cc:	.word	0x0000013c

000024d0 <coda_inflateEnd>:
    24d0:	mov	ip, sp
    24d4:	sub	sp, sp, #16
    24d8:	str	ip, [sp]
    24dc:	str	lr, [sp, #4]
    24e0:	str	r4, [sp, #8]
    24e4:	mov	r4, r0
    24e8:	cmp	r4, #0
    24ec:	beq	2504 <coda_inflateEnd+0x34>
    24f0:	ldr	r2, [r4, #28]
    24f4:	cmp	r2, #0
    24f8:	moveq	r0, #1
    24fc:	movne	r0, #0
    2500:	b	2508 <coda_inflateEnd+0x38>
    2504:	mov	r0, #1
    2508:	cmp	r0, #0
    250c:	bne	2524 <coda_inflateEnd+0x54>
    2510:	ldr	ip, [r4, #36]	; 0x24
    2514:	cmp	ip, #0
    2518:	moveq	r1, #1
    251c:	movne	r1, #0
    2520:	b	2528 <coda_inflateEnd+0x58>
    2524:	mov	r1, #1
    2528:	cmp	r1, #0
    252c:	beq	2538 <coda_inflateEnd+0x68>
    2530:	mvn	r0, #1
    2534:	b	2574 <coda_inflateEnd+0xa4>
    2538:	ldr	r1, [r4, #28]
    253c:	ldr	r3, [r1, #52]	; 0x34
    2540:	cmp	r3, #0
    2544:	beq	2558 <coda_inflateEnd+0x88>
    2548:	ldr	ip, [r4, #36]	; 0x24
    254c:	ldr	r0, [r4, #40]	; 0x28
    2550:	ldr	r1, [r1, #52]	; 0x34
    2554:	blx	ip
    2558:	ldr	ip, [r4, #36]	; 0x24
    255c:	ldr	r0, [r4, #40]	; 0x28
    2560:	ldr	r1, [r4, #28]
    2564:	blx	ip
    2568:	mov	r0, #0
    256c:	str	r0, [r4, #28]
    2570:	mov	r0, #0
    2574:	ldr	r4, [sp, #8]
    2578:	ldr	lr, [sp, #4]
    257c:	add	sp, sp, #16
    2580:	bx	lr

00002584 <coda_inflateGetDictionary>:
    2584:	mov	ip, sp
    2588:	sub	sp, sp, #24
    258c:	str	ip, [sp]
    2590:	str	lr, [sp, #4]
    2594:	str	r4, [sp, #8]
    2598:	str	r5, [sp, #12]
    259c:	str	r6, [sp, #16]
    25a0:	mov	r4, r2
    25a4:	mov	r5, r1
    25a8:	cmp	r0, #0
    25ac:	beq	25c4 <coda_inflateGetDictionary+0x40>
    25b0:	ldr	r3, [r0, #28]
    25b4:	cmp	r3, #0
    25b8:	moveq	r2, #1
    25bc:	movne	r2, #0
    25c0:	b	25c8 <coda_inflateGetDictionary+0x44>
    25c4:	mov	r2, #1
    25c8:	cmp	r2, #0
    25cc:	beq	25d8 <coda_inflateGetDictionary+0x54>
    25d0:	mvn	r0, #1
    25d4:	b	2654 <coda_inflateGetDictionary+0xd0>
    25d8:	ldr	r6, [r0, #28]
    25dc:	ldr	ip, [r6, #44]	; 0x2c
    25e0:	cmp	ip, #0
    25e4:	bne	25f0 <coda_inflateGetDictionary+0x6c>
    25e8:	mov	r3, #0
    25ec:	b	25fc <coda_inflateGetDictionary+0x78>
    25f0:	cmp	r5, #0
    25f4:	movne	r3, #1
    25f8:	moveq	r3, #0
    25fc:	cmp	r3, #0
    2600:	beq	2640 <coda_inflateGetDictionary+0xbc>
    2604:	ldr	r0, [r6, #52]	; 0x34
    2608:	ldr	r1, [r6, #48]	; 0x30
    260c:	add	r1, r0, r1
    2610:	ldr	ip, [r6, #44]	; 0x2c
    2614:	ldr	r2, [r6, #48]	; 0x30
    2618:	sub	r2, ip, r2
    261c:	mov	r0, r5
    2620:	bl	0 <memcpy>
    2624:	ldr	r0, [r6, #44]	; 0x2c
    2628:	add	r2, r5, r0
    262c:	ldr	r3, [r6, #48]	; 0x30
    2630:	sub	r0, r2, r3
    2634:	ldr	r1, [r6, #52]	; 0x34
    2638:	ldr	r2, [r6, #48]	; 0x30
    263c:	bl	0 <memcpy>
    2640:	cmp	r4, #0
    2644:	beq	2650 <coda_inflateGetDictionary+0xcc>
    2648:	ldr	r2, [r6, #44]	; 0x2c
    264c:	str	r2, [r4]
    2650:	mov	r0, #0
    2654:	ldr	r4, [sp, #8]
    2658:	ldr	r5, [sp, #12]
    265c:	ldr	r6, [sp, #16]
    2660:	ldr	lr, [sp, #4]
    2664:	add	sp, sp, #24
    2668:	bx	lr

0000266c <coda_inflateSetDictionary>:
    266c:	mov	ip, sp
    2670:	sub	sp, sp, #24
    2674:	str	ip, [sp]
    2678:	str	lr, [sp, #4]
    267c:	str	r4, [sp, #8]
    2680:	str	r5, [sp, #12]
    2684:	str	r6, [sp, #16]
    2688:	str	r7, [sp, #20]
    268c:	mov	r4, r2
    2690:	mov	r5, r1
    2694:	mov	r6, r0
    2698:	cmp	r6, #0
    269c:	beq	26b4 <coda_inflateSetDictionary+0x48>
    26a0:	ldr	r0, [r6, #28]
    26a4:	cmp	r0, #0
    26a8:	moveq	r3, #1
    26ac:	movne	r3, #0
    26b0:	b	26b8 <coda_inflateSetDictionary+0x4c>
    26b4:	mov	r3, #1
    26b8:	cmp	r3, #0
    26bc:	beq	26c8 <coda_inflateSetDictionary+0x5c>
    26c0:	mvn	r0, #1
    26c4:	b	2770 <coda_inflateSetDictionary+0x104>
    26c8:	ldr	r7, [r6, #28]
    26cc:	ldr	r3, [r7, #8]
    26d0:	cmp	r3, #0
    26d4:	beq	26ec <coda_inflateSetDictionary+0x80>
    26d8:	ldr	ip, [r7]
    26dc:	cmp	ip, #10
    26e0:	movne	r2, #1
    26e4:	moveq	r2, #0
    26e8:	b	26f0 <coda_inflateSetDictionary+0x84>
    26ec:	mov	r2, #0
    26f0:	cmp	r2, #0
    26f4:	beq	2700 <coda_inflateSetDictionary+0x94>
    26f8:	mvn	r0, #1
    26fc:	b	2770 <coda_inflateSetDictionary+0x104>
    2700:	ldr	r1, [r7]
    2704:	cmp	r1, #10
    2708:	bne	273c <coda_inflateSetDictionary+0xd0>
    270c:	mov	r0, #0
    2710:	mov	r1, #0
    2714:	mov	r2, #0
    2718:	bl	0 <coda_adler32>
    271c:	mov	r2, r4
    2720:	mov	r1, r5
    2724:	bl	0 <coda_adler32>
    2728:	ldr	r2, [r7, #24]
    272c:	cmp	r0, r2
    2730:	beq	273c <coda_inflateSetDictionary+0xd0>
    2734:	mvn	r0, #2
    2738:	b	2770 <coda_inflateSetDictionary+0x104>
    273c:	add	r1, r5, r4
    2740:	mov	r2, r4
    2744:	mov	r0, r6
    2748:	bl	530 <updatewindow>
    274c:	cmp	r0, #0
    2750:	beq	2764 <coda_inflateSetDictionary+0xf8>
    2754:	mov	r1, #30
    2758:	str	r1, [r7]
    275c:	mvn	r0, #3
    2760:	b	2770 <coda_inflateSetDictionary+0x104>
    2764:	mov	r1, #1
    2768:	str	r1, [r7, #12]
    276c:	mov	r0, #0
    2770:	ldr	r4, [sp, #8]
    2774:	ldr	r5, [sp, #12]
    2778:	ldr	r6, [sp, #16]
    277c:	ldr	r7, [sp, #20]
    2780:	ldr	lr, [sp, #4]
    2784:	add	sp, sp, #24
    2788:	bx	lr

0000278c <coda_inflateGetHeader>:
    278c:	mov	ip, sp
    2790:	sub	sp, sp, #8
    2794:	str	ip, [sp]
    2798:	str	lr, [sp, #4]
    279c:	cmp	r0, #0
    27a0:	beq	27b8 <coda_inflateGetHeader+0x2c>
    27a4:	ldr	r2, [r0, #28]
    27a8:	cmp	r2, #0
    27ac:	moveq	r2, #1
    27b0:	movne	r2, #0
    27b4:	b	27bc <coda_inflateGetHeader+0x30>
    27b8:	mov	r2, #1
    27bc:	cmp	r2, #0
    27c0:	beq	27cc <coda_inflateGetHeader+0x40>
    27c4:	mvn	r0, #1
    27c8:	b	27f8 <coda_inflateGetHeader+0x6c>
    27cc:	ldr	r2, [r0, #28]
    27d0:	ldr	r0, [r2, #8]
    27d4:	and	r0, r0, #2
    27d8:	cmp	r0, #0
    27dc:	bne	27e8 <coda_inflateGetHeader+0x5c>
    27e0:	mvn	r0, #1
    27e4:	b	27f8 <coda_inflateGetHeader+0x6c>
    27e8:	str	r1, [r2, #32]
    27ec:	mov	r3, #0
    27f0:	str	r3, [r1, #48]	; 0x30
    27f4:	mov	r0, #0
    27f8:	ldr	lr, [sp, #4]
    27fc:	add	sp, sp, #8
    2800:	bx	lr

00002804 <syncsearch>:
    2804:	mov	ip, sp
    2808:	sub	sp, sp, #16
    280c:	str	ip, [sp]
    2810:	str	lr, [sp, #4]
    2814:	str	r4, [sp, #8]
    2818:	str	r5, [sp, #12]
    281c:	ldr	r5, [r0]
    2820:	mov	r3, #0
    2824:	cmp	r3, r2
    2828:	bcc	2834 <syncsearch+0x30>
    282c:	mov	ip, #0
    2830:	b	2840 <syncsearch+0x3c>
    2834:	cmp	r5, #4
    2838:	movcc	ip, #1
    283c:	movcs	ip, #0
    2840:	cmp	ip, #0
    2844:	beq	2890 <syncsearch+0x8c>
    2848:	cmp	r5, #2
    284c:	bcc	2858 <syncsearch+0x54>
    2850:	mov	r4, #255	; 0xff
    2854:	b	285c <syncsearch+0x58>
    2858:	mov	r4, #0
    285c:	ldrb	ip, [r1, r3]
    2860:	cmp	ip, r4
    2864:	beq	2884 <syncsearch+0x80>
    2868:	ldrb	ip, [r1, r3]
    286c:	cmp	ip, #0
    2870:	bne	287c <syncsearch+0x78>
    2874:	rsb	r5, r5, #4
    2878:	b	2888 <syncsearch+0x84>
    287c:	mov	r5, #0
    2880:	b	2888 <syncsearch+0x84>
    2884:	add	r5, r5, #1
    2888:	add	r3, r3, #1
    288c:	b	2824 <syncsearch+0x20>
    2890:	str	r5, [r0]
    2894:	mov	r0, r3
    2898:	ldr	r4, [sp, #8]
    289c:	ldr	r5, [sp, #12]
    28a0:	ldr	lr, [sp, #4]
    28a4:	add	sp, sp, #16
    28a8:	bx	lr

000028ac <coda_inflateSync>:
    28ac:	mov	ip, sp
    28b0:	sub	sp, sp, #32
    28b4:	str	ip, [sp]
    28b8:	str	lr, [sp, #4]
    28bc:	str	r4, [sp, #8]
    28c0:	str	r5, [sp, #12]
    28c4:	str	r6, [sp, #16]
    28c8:	str	r7, [sp, #20]
    28cc:	mov	r4, r0
    28d0:	cmp	r4, #0
    28d4:	beq	28ec <coda_inflateSync+0x40>
    28d8:	ldr	r3, [r4, #28]
    28dc:	cmp	r3, #0
    28e0:	moveq	r3, #1
    28e4:	movne	r3, #0
    28e8:	b	28f0 <coda_inflateSync+0x44>
    28ec:	mov	r3, #1
    28f0:	cmp	r3, #0
    28f4:	beq	2900 <coda_inflateSync+0x54>
    28f8:	mvn	r0, #1
    28fc:	b	2a38 <coda_inflateSync+0x18c>
    2900:	ldr	r5, [r4, #28]
    2904:	ldr	r3, [r4, #4]
    2908:	cmp	r3, #0
    290c:	bne	2924 <coda_inflateSync+0x78>
    2910:	ldr	r2, [r5, #60]	; 0x3c
    2914:	cmp	r2, #8
    2918:	movcc	r1, #1
    291c:	movcs	r1, #0
    2920:	b	2928 <coda_inflateSync+0x7c>
    2924:	mov	r1, #0
    2928:	cmp	r1, #0
    292c:	beq	2938 <coda_inflateSync+0x8c>
    2930:	mvn	r0, #4
    2934:	b	2a38 <coda_inflateSync+0x18c>
    2938:	ldr	r3, [r5]
    293c:	cmp	r3, #31
    2940:	beq	29cc <coda_inflateSync+0x120>
    2944:	mov	r3, #31
    2948:	str	r3, [r5]
    294c:	ldr	r0, [r5, #56]	; 0x38
    2950:	ldr	ip, [r5, #60]	; 0x3c
    2954:	and	r3, ip, #7
    2958:	lsl	r0, r0, r3
    295c:	str	r0, [r5, #56]	; 0x38
    2960:	ldr	r0, [r5, #60]	; 0x3c
    2964:	ldr	r1, [r5, #60]	; 0x3c
    2968:	and	r1, r1, #7
    296c:	sub	r0, r0, r1
    2970:	str	r0, [r5, #60]	; 0x3c
    2974:	mov	r2, #0
    2978:	ldr	r3, [r5, #60]	; 0x3c
    297c:	cmp	r3, #8
    2980:	bcc	29b8 <coda_inflateSync+0x10c>
    2984:	mov	r0, r2
    2988:	add	r2, r0, #1
    298c:	add	r3, sp, #24
    2990:	ldr	r1, [r5, #56]	; 0x38
    2994:	and	ip, r1, #255	; 0xff
    2998:	strb	ip, [r3, r0]
    299c:	ldr	r3, [r5, #56]	; 0x38
    29a0:	lsr	ip, r3, #8
    29a4:	str	ip, [r5, #56]	; 0x38
    29a8:	ldr	r3, [r5, #60]	; 0x3c
    29ac:	sub	r0, r3, #8
    29b0:	str	r0, [r5, #60]	; 0x3c
    29b4:	b	2978 <coda_inflateSync+0xcc>
    29b8:	mov	r1, #0
    29bc:	str	r1, [r5, #104]	; 0x68
    29c0:	add	r0, r5, #104	; 0x68
    29c4:	add	r1, sp, #24
    29c8:	bl	2804 <syncsearch>
    29cc:	add	r0, r5, #104	; 0x68
    29d0:	ldr	r1, [r4]
    29d4:	ldr	r2, [r4, #4]
    29d8:	bl	2804 <syncsearch>
    29dc:	ldr	r2, [r4, #4]
    29e0:	sub	ip, r2, r0
    29e4:	str	ip, [r4, #4]
    29e8:	ldr	ip, [r4]
    29ec:	add	r1, ip, r0
    29f0:	str	r1, [r4]
    29f4:	ldr	r2, [r4, #8]
    29f8:	add	ip, r2, r0
    29fc:	str	ip, [r4, #8]
    2a00:	ldr	ip, [r5, #104]	; 0x68
    2a04:	cmp	ip, #4
    2a08:	beq	2a14 <coda_inflateSync+0x168>
    2a0c:	mvn	r0, #2
    2a10:	b	2a38 <coda_inflateSync+0x18c>
    2a14:	ldr	r6, [r4, #8]
    2a18:	ldr	r7, [r4, #20]
    2a1c:	mov	r0, r4
    2a20:	bl	ec <coda_inflateReset>
    2a24:	str	r6, [r4, #8]
    2a28:	str	r7, [r4, #20]
    2a2c:	mov	r1, #11
    2a30:	str	r1, [r5]
    2a34:	mov	r0, #0
    2a38:	ldr	r4, [sp, #8]
    2a3c:	ldr	r5, [sp, #12]
    2a40:	ldr	r6, [sp, #16]
    2a44:	ldr	r7, [sp, #20]
    2a48:	ldr	lr, [sp, #4]
    2a4c:	add	sp, sp, #32
    2a50:	bx	lr

00002a54 <coda_inflateSyncPoint>:
    2a54:	mov	ip, sp
    2a58:	sub	sp, sp, #8
    2a5c:	str	ip, [sp]
    2a60:	str	lr, [sp, #4]
    2a64:	cmp	r0, #0
    2a68:	beq	2a80 <coda_inflateSyncPoint+0x2c>
    2a6c:	ldr	r1, [r0, #28]
    2a70:	cmp	r1, #0
    2a74:	moveq	r2, #1
    2a78:	movne	r2, #0
    2a7c:	b	2a84 <coda_inflateSyncPoint+0x30>
    2a80:	mov	r2, #1
    2a84:	cmp	r2, #0
    2a88:	beq	2a94 <coda_inflateSyncPoint+0x40>
    2a8c:	mvn	r0, #1
    2a90:	b	2abc <coda_inflateSyncPoint+0x68>
    2a94:	ldr	r1, [r0, #28]
    2a98:	ldr	r3, [r1]
    2a9c:	cmp	r3, #13
    2aa0:	bne	2ab8 <coda_inflateSyncPoint+0x64>
    2aa4:	ldr	r0, [r1, #60]	; 0x3c
    2aa8:	cmp	r0, #0
    2aac:	moveq	r0, #1
    2ab0:	movne	r0, #0
    2ab4:	b	2abc <coda_inflateSyncPoint+0x68>
    2ab8:	mov	r0, #0
    2abc:	ldr	lr, [sp, #4]
    2ac0:	add	sp, sp, #8
    2ac4:	bx	lr

00002ac8 <coda_inflateCopy>:
    2ac8:	mov	ip, sp
    2acc:	sub	sp, sp, #32
    2ad0:	str	ip, [sp]
    2ad4:	str	lr, [sp, #4]
    2ad8:	str	r4, [sp, #8]
    2adc:	str	r5, [sp, #12]
    2ae0:	str	r6, [sp, #16]
    2ae4:	str	r7, [sp, #20]
    2ae8:	str	r8, [sp, #24]
    2aec:	mov	r7, r1
    2af0:	mov	r8, r0
    2af4:	cmp	r8, #0
    2af8:	beq	2b0c <coda_inflateCopy+0x44>
    2afc:	cmp	r7, #0
    2b00:	moveq	r2, #1
    2b04:	movne	r2, #0
    2b08:	b	2b10 <coda_inflateCopy+0x48>
    2b0c:	mov	r2, #1
    2b10:	cmp	r2, #0
    2b14:	bne	2b2c <coda_inflateCopy+0x64>
    2b18:	ldr	r1, [r7, #28]
    2b1c:	cmp	r1, #0
    2b20:	moveq	r0, #1
    2b24:	movne	r0, #0
    2b28:	b	2b30 <coda_inflateCopy+0x68>
    2b2c:	mov	r0, #1
    2b30:	cmp	r0, #0
    2b34:	bne	2b4c <coda_inflateCopy+0x84>
    2b38:	ldr	r2, [r7, #32]
    2b3c:	cmp	r2, #0
    2b40:	moveq	r2, #1
    2b44:	movne	r2, #0
    2b48:	b	2b50 <coda_inflateCopy+0x88>
    2b4c:	mov	r2, #1
    2b50:	cmp	r2, #0
    2b54:	bne	2b6c <coda_inflateCopy+0xa4>
    2b58:	ldr	r1, [r7, #36]	; 0x24
    2b5c:	cmp	r1, #0
    2b60:	moveq	r0, #1
    2b64:	movne	r0, #0
    2b68:	b	2b70 <coda_inflateCopy+0xa8>
    2b6c:	mov	r0, #1
    2b70:	cmp	r0, #0
    2b74:	beq	2b80 <coda_inflateCopy+0xb8>
    2b78:	mvn	r0, #1
    2b7c:	b	2cf8 <coda_inflateCopy+0x230>
    2b80:	ldr	r6, [r7, #28]
    2b84:	ldr	ip, [r7, #32]
    2b88:	ldr	r0, [r7, #40]	; 0x28
    2b8c:	mov	r1, #1
    2b90:	movw	r2, #7116	; 0x1bcc
    2b94:	blx	ip
    2b98:	mov	r4, r0
    2b9c:	cmp	r4, #0
    2ba0:	bne	2bac <coda_inflateCopy+0xe4>
    2ba4:	mvn	r0, #3
    2ba8:	b	2cf8 <coda_inflateCopy+0x230>
    2bac:	mov	r5, #0
    2bb0:	ldr	r2, [r6, #52]	; 0x34
    2bb4:	cmp	r2, #0
    2bb8:	beq	2bfc <coda_inflateCopy+0x134>
    2bbc:	ldr	ip, [r7, #32]
    2bc0:	ldr	r0, [r7, #40]	; 0x28
    2bc4:	mov	r2, #1
    2bc8:	ldr	r3, [r6, #36]	; 0x24
    2bcc:	lsl	r1, r2, r3
    2bd0:	mov	r2, #1
    2bd4:	blx	ip
    2bd8:	mov	r5, r0
    2bdc:	cmp	r5, #0
    2be0:	bne	2bfc <coda_inflateCopy+0x134>
    2be4:	ldr	ip, [r7, #36]	; 0x24
    2be8:	ldr	r0, [r7, #40]	; 0x28
    2bec:	mov	r1, r4
    2bf0:	blx	ip
    2bf4:	mvn	r0, #3
    2bf8:	b	2cf8 <coda_inflateCopy+0x230>
    2bfc:	mov	r2, #56	; 0x38
    2c00:	mov	r1, r7
    2c04:	mov	r0, r8
    2c08:	bl	0 <memcpy>
    2c0c:	movw	r2, #7116	; 0x1bcc
    2c10:	mov	r1, r6
    2c14:	mov	r0, r4
    2c18:	bl	0 <memcpy>
    2c1c:	ldr	r2, [r6, #76]	; 0x4c
    2c20:	add	r1, r6, #1328	; 0x530
    2c24:	cmp	r2, r1
    2c28:	bcc	2c48 <coda_inflateCopy+0x180>
    2c2c:	ldr	ip, [r6, #76]	; 0x4c
    2c30:	add	r0, r6, #956	; 0x3bc
    2c34:	add	r0, r0, #6144	; 0x1800
    2c38:	cmp	ip, r0
    2c3c:	movls	r3, #1
    2c40:	movhi	r3, #0
    2c44:	b	2c4c <coda_inflateCopy+0x184>
    2c48:	mov	r3, #0
    2c4c:	cmp	r3, #0
    2c50:	beq	2ca4 <coda_inflateCopy+0x1dc>
    2c54:	ldr	r0, [r6, #76]	; 0x4c
    2c58:	sub	r0, r0, r6
    2c5c:	sub	r2, r0, #1328	; 0x530
    2c60:	asr	lr, r2, #31
    2c64:	add	lr, r2, lr, lsr #30
    2c68:	asr	r3, lr, #2
    2c6c:	lsl	ip, r3, #2
    2c70:	add	r0, r4, ip
    2c74:	add	r3, r0, #1328	; 0x530
    2c78:	str	r3, [r4, #76]	; 0x4c
    2c7c:	ldr	r3, [r6, #80]	; 0x50
    2c80:	sub	r1, r3, r6
    2c84:	sub	r3, r1, #1328	; 0x530
    2c88:	asr	lr, r3, #31
    2c8c:	add	lr, r3, lr, lsr #30
    2c90:	asr	r2, lr, #2
    2c94:	lsl	r0, r2, #2
    2c98:	add	r3, r4, r0
    2c9c:	add	ip, r3, #1328	; 0x530
    2ca0:	str	ip, [r4, #80]	; 0x50
    2ca4:	ldr	r1, [r6, #108]	; 0x6c
    2ca8:	sub	r0, r1, r6
    2cac:	sub	r1, r0, #1328	; 0x530
    2cb0:	asr	lr, r1, #31
    2cb4:	add	lr, r1, lr, lsr #30
    2cb8:	asr	r0, lr, #2
    2cbc:	lsl	r2, r0, #2
    2cc0:	add	r3, r4, r2
    2cc4:	add	r0, r3, #1328	; 0x530
    2cc8:	str	r0, [r4, #108]	; 0x6c
    2ccc:	cmp	r5, #0
    2cd0:	beq	2cec <coda_inflateCopy+0x224>
    2cd4:	mov	r1, #1
    2cd8:	ldr	r2, [r6, #36]	; 0x24
    2cdc:	lsl	r2, r1, r2
    2ce0:	ldr	r1, [r6, #52]	; 0x34
    2ce4:	mov	r0, r5
    2ce8:	bl	0 <memcpy>
    2cec:	str	r5, [r4, #52]	; 0x34
    2cf0:	str	r4, [r8, #28]
    2cf4:	mov	r0, #0
    2cf8:	ldr	r4, [sp, #8]
    2cfc:	ldr	r5, [sp, #12]
    2d00:	ldr	r6, [sp, #16]
    2d04:	ldr	r7, [sp, #20]
    2d08:	ldr	r8, [sp, #24]
    2d0c:	ldr	lr, [sp, #4]
    2d10:	add	sp, sp, #32
    2d14:	bx	lr

00002d18 <coda_inflateUndermine>:
    2d18:	mov	ip, sp
    2d1c:	sub	sp, sp, #8
    2d20:	str	ip, [sp]
    2d24:	str	lr, [sp, #4]
    2d28:	cmp	r0, #0
    2d2c:	beq	2d44 <coda_inflateUndermine+0x2c>
    2d30:	ldr	r2, [r0, #28]
    2d34:	cmp	r2, #0
    2d38:	moveq	r2, #1
    2d3c:	movne	r2, #0
    2d40:	b	2d48 <coda_inflateUndermine+0x30>
    2d44:	mov	r2, #1
    2d48:	cmp	r2, #0
    2d4c:	beq	2d58 <coda_inflateUndermine+0x40>
    2d50:	mvn	r0, #1
    2d54:	b	2d80 <coda_inflateUndermine+0x68>
    2d58:	ldr	ip, [r0, #28]
    2d5c:	cmp	r1, #0
    2d60:	moveq	r0, #1
    2d64:	movne	r0, #0
    2d68:	add	lr, ip, #4096	; 0x1000
    2d6c:	str	r0, [lr, #3008]	; 0xbc0
    2d70:	mov	r0, #1
    2d74:	add	lr, ip, #4096	; 0x1000
    2d78:	str	r0, [lr, #3008]	; 0xbc0
    2d7c:	mvn	r0, #2
    2d80:	ldr	lr, [sp, #4]
    2d84:	add	sp, sp, #8
    2d88:	bx	lr

00002d8c <coda_inflateMark>:
    2d8c:	mov	ip, sp
    2d90:	sub	sp, sp, #8
    2d94:	str	ip, [sp]
    2d98:	str	lr, [sp, #4]
    2d9c:	cmp	r0, #0
    2da0:	beq	2db8 <coda_inflateMark+0x2c>
    2da4:	ldr	r2, [r0, #28]
    2da8:	cmp	r2, #0
    2dac:	moveq	r3, #1
    2db0:	movne	r3, #0
    2db4:	b	2dbc <coda_inflateMark+0x30>
    2db8:	mov	r3, #1
    2dbc:	cmp	r3, #0
    2dc0:	beq	2dd0 <coda_inflateMark+0x44>
    2dc4:	movw	r0, #0
    2dc8:	movt	r0, #65535	; 0xffff
    2dcc:	b	2e18 <coda_inflateMark+0x8c>
    2dd0:	ldr	r2, [r0, #28]
    2dd4:	ldr	r1, [r2]
    2dd8:	cmp	r1, #15
    2ddc:	beq	2e08 <coda_inflateMark+0x7c>
    2de0:	ldr	r0, [r2]
    2de4:	cmp	r0, #24
    2de8:	bne	2e00 <coda_inflateMark+0x74>
    2dec:	add	lr, r2, #4096	; 0x1000
    2df0:	ldr	r3, [lr, #3016]	; 0xbc8
    2df4:	ldr	r1, [r2, #64]	; 0x40
    2df8:	sub	r0, r3, r1
    2dfc:	b	2e0c <coda_inflateMark+0x80>
    2e00:	mov	r0, #0
    2e04:	b	2e0c <coda_inflateMark+0x80>
    2e08:	ldr	r0, [r2, #64]	; 0x40
    2e0c:	add	lr, r2, #4096	; 0x1000
    2e10:	ldr	ip, [lr, #3012]	; 0xbc4
    2e14:	add	r0, r0, ip, lsl #16
    2e18:	ldr	lr, [sp, #4]
    2e1c:	add	sp, sp, #8
    2e20:	bx	lr
