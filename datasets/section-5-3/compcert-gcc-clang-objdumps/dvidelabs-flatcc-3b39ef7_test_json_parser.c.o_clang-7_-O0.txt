
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <verify_parse>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-4]
      10:	ldr	r0, [fp, #-4]
      14:	movw	r1, #0
      18:	movt	r1, #0
      1c:	bl	264 <MyGame_Example_Monster_as_root_with_identifier>
      20:	str	r0, [sp]
      24:	ldr	r0, [sp]
      28:	bl	2d4 <MyGame_Example_Monster_pos>
      2c:	str	r0, [sp, #4]
      30:	ldr	r0, [sp, #4]
      34:	movw	r1, #0
      38:	cmp	r0, r1
      3c:	bne	60 <verify_parse+0x60>
      40:	movw	r0, #0
      44:	movt	r0, #0
      48:	movw	r1, #0
      4c:	movt	r1, #0
      50:	movw	r2, #45	; 0x2d
      54:	movw	r3, #0
      58:	movt	r3, #0
      5c:	bl	0 <__assert_fail>
      60:	b	64 <verify_parse+0x64>
      64:	b	68 <verify_parse+0x68>
      68:	ldr	r0, [sp, #4]
      6c:	bl	3ac <MyGame_Example_Vec3_x>
      70:	vmov.f32	s2, #112	; 0x3f800000  1.0
      74:	vcmp.f32	s0, s2
      78:	vmrs	APSR_nzcv, fpscr
      7c:	beq	a0 <verify_parse+0xa0>
      80:	movw	r0, #0
      84:	movt	r0, #0
      88:	movw	r1, #0
      8c:	movt	r1, #0
      90:	movw	r2, #46	; 0x2e
      94:	movw	r3, #0
      98:	movt	r3, #0
      9c:	bl	0 <__assert_fail>
      a0:	b	a4 <verify_parse+0xa4>
      a4:	b	a8 <verify_parse+0xa8>
      a8:	ldr	r0, [sp, #4]
      ac:	bl	3f8 <MyGame_Example_Vec3_y>
      b0:	vmov.f32	s2, #0	; 0x40000000  2.0
      b4:	vcmp.f32	s0, s2
      b8:	vmrs	APSR_nzcv, fpscr
      bc:	beq	e0 <verify_parse+0xe0>
      c0:	movw	r0, #0
      c4:	movt	r0, #0
      c8:	movw	r1, #0
      cc:	movt	r1, #0
      d0:	movw	r2, #47	; 0x2f
      d4:	movw	r3, #0
      d8:	movt	r3, #0
      dc:	bl	0 <__assert_fail>
      e0:	b	e4 <verify_parse+0xe4>
      e4:	b	e8 <verify_parse+0xe8>
      e8:	ldr	r0, [sp, #4]
      ec:	bl	448 <MyGame_Example_Vec3_z>
      f0:	vmov.f32	s2, #8	; 0x40400000  3.0
      f4:	vcmp.f32	s0, s2
      f8:	vmrs	APSR_nzcv, fpscr
      fc:	beq	120 <verify_parse+0x120>
     100:	movw	r0, #0
     104:	movt	r0, #0
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	movw	r2, #48	; 0x30
     114:	movw	r3, #0
     118:	movt	r3, #0
     11c:	bl	0 <__assert_fail>
     120:	b	124 <verify_parse+0x124>
     124:	b	128 <verify_parse+0x128>
     128:	ldr	r0, [sp, #4]
     12c:	bl	498 <MyGame_Example_Vec3_test1>
     130:	vmov.f64	d16, #8	; 0x40400000  3.0
     134:	vcmp.f64	d0, d16
     138:	vmrs	APSR_nzcv, fpscr
     13c:	beq	160 <verify_parse+0x160>
     140:	movw	r0, #0
     144:	movt	r0, #0
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	movw	r2, #49	; 0x31
     154:	movw	r3, #0
     158:	movt	r3, #0
     15c:	bl	0 <__assert_fail>
     160:	b	164 <verify_parse+0x164>
     164:	b	168 <verify_parse+0x168>
     168:	ldr	r0, [sp, #4]
     16c:	bl	4f0 <MyGame_Example_Vec3_test2>
     170:	sxtb	r0, r0
     174:	cmp	r0, #2
     178:	beq	19c <verify_parse+0x19c>
     17c:	movw	r0, #0
     180:	movt	r0, #0
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	movw	r2, #50	; 0x32
     190:	movw	r3, #0
     194:	movt	r3, #0
     198:	bl	0 <__assert_fail>
     19c:	b	1a0 <verify_parse+0x1a0>
     1a0:	ldr	r0, [sp, #4]
     1a4:	bl	544 <MyGame_Example_Vec3_test3>
     1a8:	str	r0, [sp, #8]
     1ac:	ldr	r0, [sp, #8]
     1b0:	movw	r1, #0
     1b4:	cmp	r0, r1
     1b8:	bne	1dc <verify_parse+0x1dc>
     1bc:	movw	r0, #0
     1c0:	movt	r0, #0
     1c4:	movw	r1, #0
     1c8:	movt	r1, #0
     1cc:	movw	r2, #52	; 0x34
     1d0:	movw	r3, #0
     1d4:	movt	r3, #0
     1d8:	bl	0 <__assert_fail>
     1dc:	b	1e0 <verify_parse+0x1e0>
     1e0:	b	1e4 <verify_parse+0x1e4>
     1e4:	ldr	r0, [sp, #8]
     1e8:	bl	584 <MyGame_Example_Test_a>
     1ec:	sxth	r0, r0
     1f0:	cmp	r0, #5
     1f4:	beq	218 <verify_parse+0x218>
     1f8:	movw	r0, #0
     1fc:	movt	r0, #0
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	movw	r2, #53	; 0x35
     20c:	movw	r3, #0
     210:	movt	r3, #0
     214:	bl	0 <__assert_fail>
     218:	b	21c <verify_parse+0x21c>
     21c:	b	220 <verify_parse+0x220>
     220:	ldr	r0, [sp, #8]
     224:	bl	5d4 <MyGame_Example_Test_b>
     228:	sxtb	r0, r0
     22c:	cmp	r0, #6
     230:	beq	254 <verify_parse+0x254>
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	movw	r1, #0
     240:	movt	r1, #0
     244:	movw	r2, #54	; 0x36
     248:	movw	r3, #0
     24c:	movt	r3, #0
     250:	bl	0 <__assert_fail>
     254:	b	258 <verify_parse+0x258>
     258:	movw	r0, #0
     25c:	mov	sp, fp
     260:	pop	{fp, pc}

00000264 <MyGame_Example_Monster_as_root_with_identifier>:
     264:	push	{fp, lr}
     268:	mov	fp, sp
     26c:	sub	sp, sp, #16
     270:	str	r0, [fp, #-4]
     274:	str	r1, [sp, #8]
     278:	ldr	r0, [fp, #-4]
     27c:	movw	r1, #0
     280:	cmp	r0, r1
     284:	beq	29c <MyGame_Example_Monster_as_root_with_identifier+0x38>
     288:	ldr	r0, [fp, #-4]
     28c:	ldr	r1, [sp, #8]
     290:	bl	f64 <flatbuffers_has_identifier>
     294:	cmp	r0, #0
     298:	bne	2a8 <MyGame_Example_Monster_as_root_with_identifier+0x44>
     29c:	movw	r0, #0
     2a0:	str	r0, [sp, #4]
     2a4:	b	2c8 <MyGame_Example_Monster_as_root_with_identifier+0x64>
     2a8:	ldr	r0, [fp, #-4]
     2ac:	ldr	r1, [fp, #-4]
     2b0:	str	r0, [sp]
     2b4:	mov	r0, r1
     2b8:	bl	1010 <__flatbuffers_uoffset_read_from_pe>
     2bc:	ldr	r1, [sp]
     2c0:	add	r0, r1, r0
     2c4:	str	r0, [sp, #4]
     2c8:	ldr	r0, [sp, #4]
     2cc:	mov	sp, fp
     2d0:	pop	{fp, pc}

000002d4 <MyGame_Example_Monster_pos>:
     2d4:	push	{fp, lr}
     2d8:	mov	fp, sp
     2dc:	sub	sp, sp, #24
     2e0:	str	r0, [fp, #-8]
     2e4:	movw	r0, #0
     2e8:	strh	r0, [fp, #-10]
     2ec:	ldr	r0, [fp, #-8]
     2f0:	movw	r1, #0
     2f4:	cmp	r0, r1
     2f8:	beq	304 <MyGame_Example_Monster_pos+0x30>
     2fc:	b	300 <MyGame_Example_Monster_pos+0x2c>
     300:	b	324 <MyGame_Example_Monster_pos+0x50>
     304:	movw	r0, #0
     308:	movt	r0, #0
     30c:	movw	r1, #0
     310:	movt	r1, #0
     314:	movw	r2, #696	; 0x2b8
     318:	movw	r3, #0
     31c:	movt	r3, #0
     320:	bl	0 <__assert_fail>
     324:	mov	r0, #0
     328:	strh	r0, [sp, #12]
     32c:	ldr	r0, [fp, #-8]
     330:	str	r0, [sp, #4]
     334:	bl	1094 <__flatbuffers_soffset_read_from_pe>
     338:	ldr	lr, [sp, #4]
     33c:	sub	r0, lr, r0
     340:	str	r0, [sp, #8]
     344:	ldr	r0, [sp, #8]
     348:	bl	10b8 <__flatbuffers_voffset_read_from_pe>
     34c:	ldrh	lr, [sp, #12]
     350:	add	lr, lr, #3
     354:	lsl	lr, lr, #1
     358:	cmp	r0, lr
     35c:	bcc	378 <MyGame_Example_Monster_pos+0xa4>
     360:	ldr	r0, [sp, #8]
     364:	ldrh	r1, [sp, #12]
     368:	add	r0, r0, r1, lsl #1
     36c:	add	r0, r0, #4
     370:	bl	10b8 <__flatbuffers_voffset_read_from_pe>
     374:	strh	r0, [fp, #-10]
     378:	ldrsh	r0, [fp, #-10]
     37c:	cmp	r0, #0
     380:	beq	398 <MyGame_Example_Monster_pos+0xc4>
     384:	ldr	r0, [fp, #-8]
     388:	ldrh	r1, [fp, #-10]
     38c:	add	r0, r0, r1
     390:	str	r0, [fp, #-4]
     394:	b	3a0 <MyGame_Example_Monster_pos+0xcc>
     398:	movw	r0, #0
     39c:	str	r0, [fp, #-4]
     3a0:	ldr	r0, [fp, #-4]
     3a4:	mov	sp, fp
     3a8:	pop	{fp, pc}

000003ac <MyGame_Example_Vec3_x>:
     3ac:	push	{fp, lr}
     3b0:	mov	fp, sp
     3b4:	sub	sp, sp, #8
     3b8:	str	r0, [sp, #4]
     3bc:	ldr	r0, [sp, #4]
     3c0:	movw	r1, #0
     3c4:	cmp	r0, r1
     3c8:	beq	3dc <MyGame_Example_Vec3_x+0x30>
     3cc:	ldr	r0, [sp, #4]
     3d0:	bl	1108 <flatbuffers_float_read_from_pe>
     3d4:	vstr	s0, [sp]
     3d8:	b	3e8 <MyGame_Example_Vec3_x+0x3c>
     3dc:	vldr	s0, [pc, #16]	; 3f4 <MyGame_Example_Vec3_x+0x48>
     3e0:	vstr	s0, [sp]
     3e4:	b	3e8 <MyGame_Example_Vec3_x+0x3c>
     3e8:	vldr	s0, [sp]
     3ec:	mov	sp, fp
     3f0:	pop	{fp, pc}
     3f4:	.word	0x00000000

000003f8 <MyGame_Example_Vec3_y>:
     3f8:	push	{fp, lr}
     3fc:	mov	fp, sp
     400:	sub	sp, sp, #8
     404:	str	r0, [sp, #4]
     408:	ldr	r0, [sp, #4]
     40c:	movw	r1, #0
     410:	cmp	r0, r1
     414:	beq	42c <MyGame_Example_Vec3_y+0x34>
     418:	ldr	r0, [sp, #4]
     41c:	add	r0, r0, #4
     420:	bl	1108 <flatbuffers_float_read_from_pe>
     424:	vstr	s0, [sp]
     428:	b	438 <MyGame_Example_Vec3_y+0x40>
     42c:	vldr	s0, [pc, #16]	; 444 <MyGame_Example_Vec3_y+0x4c>
     430:	vstr	s0, [sp]
     434:	b	438 <MyGame_Example_Vec3_y+0x40>
     438:	vldr	s0, [sp]
     43c:	mov	sp, fp
     440:	pop	{fp, pc}
     444:	.word	0x00000000

00000448 <MyGame_Example_Vec3_z>:
     448:	push	{fp, lr}
     44c:	mov	fp, sp
     450:	sub	sp, sp, #8
     454:	str	r0, [sp, #4]
     458:	ldr	r0, [sp, #4]
     45c:	movw	r1, #0
     460:	cmp	r0, r1
     464:	beq	47c <MyGame_Example_Vec3_z+0x34>
     468:	ldr	r0, [sp, #4]
     46c:	add	r0, r0, #8
     470:	bl	1108 <flatbuffers_float_read_from_pe>
     474:	vstr	s0, [sp]
     478:	b	488 <MyGame_Example_Vec3_z+0x40>
     47c:	vldr	s0, [pc, #16]	; 494 <MyGame_Example_Vec3_z+0x4c>
     480:	vstr	s0, [sp]
     484:	b	488 <MyGame_Example_Vec3_z+0x40>
     488:	vldr	s0, [sp]
     48c:	mov	sp, fp
     490:	pop	{fp, pc}
     494:	.word	0x00000000

00000498 <MyGame_Example_Vec3_test1>:
     498:	push	{fp, lr}
     49c:	mov	fp, sp
     4a0:	sub	sp, sp, #16
     4a4:	str	r0, [fp, #-4]
     4a8:	ldr	r0, [fp, #-4]
     4ac:	movw	r1, #0
     4b0:	cmp	r0, r1
     4b4:	beq	4cc <MyGame_Example_Vec3_test1+0x34>
     4b8:	ldr	r0, [fp, #-4]
     4bc:	add	r0, r0, #16
     4c0:	bl	1150 <flatbuffers_double_read_from_pe>
     4c4:	vstr	d0, [sp]
     4c8:	b	4d8 <MyGame_Example_Vec3_test1+0x40>
     4cc:	vldr	d16, [pc, #20]	; 4e8 <MyGame_Example_Vec3_test1+0x50>
     4d0:	vstr	d16, [sp]
     4d4:	b	4d8 <MyGame_Example_Vec3_test1+0x40>
     4d8:	vldr	d16, [sp]
     4dc:	vmov.f64	d0, d16
     4e0:	mov	sp, fp
     4e4:	pop	{fp, pc}
	...

000004f0 <MyGame_Example_Vec3_test2>:
     4f0:	push	{fp, lr}
     4f4:	mov	fp, sp
     4f8:	sub	sp, sp, #8
     4fc:	str	r0, [sp, #4]
     500:	ldr	r0, [sp, #4]
     504:	movw	r1, #0
     508:	cmp	r0, r1
     50c:	beq	528 <MyGame_Example_Vec3_test2+0x38>
     510:	ldr	r0, [sp, #4]
     514:	add	r0, r0, #24
     518:	bl	1190 <MyGame_Example_Color_read_from_pe>
     51c:	sxtb	r0, r0
     520:	str	r0, [sp]
     524:	b	534 <MyGame_Example_Vec3_test2+0x44>
     528:	movw	r0, #0
     52c:	str	r0, [sp]
     530:	b	534 <MyGame_Example_Vec3_test2+0x44>
     534:	ldr	r0, [sp]
     538:	sxtb	r0, r0
     53c:	mov	sp, fp
     540:	pop	{fp, pc}

00000544 <MyGame_Example_Vec3_test3>:
     544:	sub	sp, sp, #8
     548:	str	r0, [sp, #4]
     54c:	ldr	r0, [sp, #4]
     550:	movw	r1, #0
     554:	cmp	r0, r1
     558:	beq	56c <MyGame_Example_Vec3_test3+0x28>
     55c:	ldr	r0, [sp, #4]
     560:	add	r0, r0, #26
     564:	str	r0, [sp]
     568:	b	578 <MyGame_Example_Vec3_test3+0x34>
     56c:	movw	r0, #0
     570:	str	r0, [sp]
     574:	b	578 <MyGame_Example_Vec3_test3+0x34>
     578:	ldr	r0, [sp]
     57c:	add	sp, sp, #8
     580:	bx	lr

00000584 <MyGame_Example_Test_a>:
     584:	push	{fp, lr}
     588:	mov	fp, sp
     58c:	sub	sp, sp, #8
     590:	str	r0, [sp, #4]
     594:	ldr	r0, [sp, #4]
     598:	movw	r1, #0
     59c:	cmp	r0, r1
     5a0:	beq	5b8 <MyGame_Example_Test_a+0x34>
     5a4:	ldr	r0, [sp, #4]
     5a8:	bl	11cc <flatbuffers_int16_read_from_pe>
     5ac:	sxth	r0, r0
     5b0:	str	r0, [sp]
     5b4:	b	5c4 <MyGame_Example_Test_a+0x40>
     5b8:	movw	r0, #0
     5bc:	str	r0, [sp]
     5c0:	b	5c4 <MyGame_Example_Test_a+0x40>
     5c4:	ldr	r0, [sp]
     5c8:	sxth	r0, r0
     5cc:	mov	sp, fp
     5d0:	pop	{fp, pc}

000005d4 <MyGame_Example_Test_b>:
     5d4:	push	{fp, lr}
     5d8:	mov	fp, sp
     5dc:	sub	sp, sp, #8
     5e0:	str	r0, [sp, #4]
     5e4:	ldr	r0, [sp, #4]
     5e8:	movw	r1, #0
     5ec:	cmp	r0, r1
     5f0:	beq	60c <MyGame_Example_Test_b+0x38>
     5f4:	ldr	r0, [sp, #4]
     5f8:	add	r0, r0, #2
     5fc:	bl	1208 <flatbuffers_int8_read_from_pe>
     600:	sxtb	r0, r0
     604:	str	r0, [sp]
     608:	b	618 <MyGame_Example_Test_b+0x44>
     60c:	movw	r0, #0
     610:	str	r0, [sp]
     614:	b	618 <MyGame_Example_Test_b+0x44>
     618:	ldr	r0, [sp]
     61c:	sxtb	r0, r0
     620:	mov	sp, fp
     624:	pop	{fp, pc}

00000628 <test_parse>:
     628:	push	{r4, r5, fp, lr}
     62c:	add	fp, sp, #8
     630:	sub	sp, sp, #368	; 0x170
     634:	movw	r0, #0
     638:	str	r0, [fp, #-20]	; 0xffffffec
     63c:	add	r1, sp, #72	; 0x48
     640:	str	r1, [sp, #68]	; 0x44
     644:	mvn	r1, #0
     648:	str	r1, [sp, #64]	; 0x40
     64c:	str	r0, [sp, #60]	; 0x3c
     650:	ldr	r0, [sp, #68]	; 0x44
     654:	bl	0 <flatcc_builder_init>
     658:	movw	r1, #0
     65c:	movt	r1, #0
     660:	ldr	r1, [r1]
     664:	str	r0, [sp, #56]	; 0x38
     668:	mov	r0, r1
     66c:	movw	r1, #10240	; 0x2800
     670:	sub	r2, fp, #24
     674:	bl	890 <readfile>
     678:	str	r0, [fp, #-16]
     67c:	ldr	r0, [fp, #-16]
     680:	movw	r1, #0
     684:	cmp	r0, r1
     688:	bne	6c0 <test_parse+0x98>
     68c:	movw	r0, #0
     690:	movt	r0, #0
     694:	ldr	r0, [r0]
     698:	movw	r1, #0
     69c:	movt	r1, #0
     6a0:	ldr	r2, [r1]
     6a4:	movw	r1, #0
     6a8:	movt	r1, #0
     6ac:	bl	0 <fprintf>
     6b0:	mvn	r1, #0
     6b4:	str	r1, [fp, #-12]
     6b8:	str	r0, [sp, #52]	; 0x34
     6bc:	b	884 <test_parse+0x25c>
     6c0:	ldr	r0, [sp, #68]	; 0x44
     6c4:	ldr	r2, [fp, #-16]
     6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6cc:	ldr	r1, [sp, #60]	; 0x3c
     6d0:	sub	ip, fp, #72	; 0x48
     6d4:	str	r1, [sp, #48]	; 0x30
     6d8:	mov	r1, ip
     6dc:	ldr	ip, [sp, #48]	; 0x30
     6e0:	str	ip, [sp]
     6e4:	bl	a7c <monster_test_parse_json>
     6e8:	cmp	r0, #0
     6ec:	beq	6f4 <test_parse+0xcc>
     6f0:	b	804 <test_parse+0x1dc>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	ldr	r0, [r0]
     700:	movw	r1, #0
     704:	movt	r1, #0
     708:	ldr	r2, [r1]
     70c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     710:	movw	r1, #0
     714:	movt	r1, #0
     718:	bl	0 <fprintf>
     71c:	ldr	r1, [sp, #68]	; 0x44
     720:	str	r0, [sp, #44]	; 0x2c
     724:	mov	r0, r1
     728:	sub	r1, fp, #28
     72c:	bl	0 <flatcc_builder_finalize_aligned_buffer>
     730:	str	r0, [fp, #-20]	; 0xffffffec
     734:	ldr	r1, [fp, #-20]	; 0xffffffec
     738:	ldr	r2, [fp, #-28]	; 0xffffffe4
     73c:	movw	r0, #0
     740:	movt	r0, #0
     744:	ldr	r3, [r0]
     748:	movw	r0, #0
     74c:	movt	r0, #0
     750:	bl	ba4 <hexdump>
     754:	movw	r0, #0
     758:	movt	r0, #0
     75c:	ldr	r0, [r0]
     760:	ldr	r2, [fp, #-24]	; 0xffffffe8
     764:	ldr	r3, [fp, #-28]	; 0xffffffe4
     768:	movw	r1, #0
     76c:	movt	r1, #0
     770:	bl	0 <fprintf>
     774:	ldr	r1, [fp, #-20]	; 0xffffffec
     778:	str	r0, [sp, #40]	; 0x28
     77c:	mov	r0, r1
     780:	bl	0 <verify_parse>
     784:	ldr	r1, [fp, #-20]	; 0xffffffec
     788:	ldr	r2, [fp, #-28]	; 0xffffffe4
     78c:	movw	r3, #0
     790:	movt	r3, #0
     794:	ldr	r3, [r3]
     798:	movw	lr, #0
     79c:	movt	lr, #0
     7a0:	str	r0, [sp, #36]	; 0x24
     7a4:	mov	r0, lr
     7a8:	bl	d98 <cdump>
     7ac:	ldr	r0, [sp, #68]	; 0x44
     7b0:	bl	0 <flatcc_builder_reset>
     7b4:	movw	r1, #0
     7b8:	str	r1, [sp, #64]	; 0x40
     7bc:	str	r0, [sp, #32]
     7c0:	ldr	r0, [fp, #-20]	; 0xffffffec
     7c4:	movw	r1, #0
     7c8:	cmp	r0, r1
     7cc:	beq	7d8 <test_parse+0x1b0>
     7d0:	ldr	r0, [fp, #-20]	; 0xffffffec
     7d4:	bl	0 <flatcc_builder_aligned_free>
     7d8:	ldr	r0, [fp, #-16]
     7dc:	movw	r1, #0
     7e0:	cmp	r0, r1
     7e4:	beq	7f0 <test_parse+0x1c8>
     7e8:	ldr	r0, [fp, #-16]
     7ec:	bl	0 <free>
     7f0:	ldr	r0, [sp, #68]	; 0x44
     7f4:	bl	0 <flatcc_builder_clear>
     7f8:	ldr	r0, [sp, #64]	; 0x40
     7fc:	str	r0, [fp, #-12]
     800:	b	884 <test_parse+0x25c>
     804:	movw	r0, #0
     808:	movt	r0, #0
     80c:	ldr	r0, [r0]
     810:	movw	r1, #0
     814:	movt	r1, #0
     818:	ldr	r2, [r1]
     81c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     820:	ldr	r1, [fp, #-36]	; 0xffffffdc
     824:	ldr	ip, [fp, #-68]	; 0xffffffbc
     828:	sub	r1, r1, ip
     82c:	add	r1, r1, #1
     830:	ldr	ip, [fp, #-48]	; 0xffffffd0
     834:	str	r0, [sp, #28]
     838:	mov	r0, ip
     83c:	str	r1, [sp, #24]
     840:	str	r2, [sp, #20]
     844:	str	r3, [sp, #16]
     848:	bl	0 <flatcc_json_parser_error_string>
     84c:	ldr	r1, [sp, #28]
     850:	str	r0, [sp, #12]
     854:	mov	r0, r1
     858:	movw	r1, #0
     85c:	movt	r1, #0
     860:	ldr	r2, [sp, #20]
     864:	ldr	r3, [sp, #16]
     868:	ldr	ip, [sp, #24]
     86c:	str	ip, [sp]
     870:	ldr	lr, [sp, #12]
     874:	str	lr, [sp, #4]
     878:	bl	0 <fprintf>
     87c:	str	r0, [sp, #8]
     880:	b	7c0 <test_parse+0x198>
     884:	ldr	r0, [fp, #-12]
     888:	sub	sp, fp, #8
     88c:	pop	{r4, r5, fp, pc}

00000890 <readfile>:
     890:	push	{fp, lr}
     894:	mov	fp, sp
     898:	sub	sp, sp, #64	; 0x40
     89c:	str	r0, [fp, #-8]
     8a0:	str	r1, [fp, #-12]
     8a4:	str	r2, [fp, #-16]
     8a8:	ldr	r0, [fp, #-16]
     8ac:	movw	r1, #0
     8b0:	cmp	r0, r1
     8b4:	beq	8c4 <readfile+0x34>
     8b8:	ldr	r0, [fp, #-16]
     8bc:	str	r0, [sp, #20]
     8c0:	b	8d0 <readfile+0x40>
     8c4:	add	r0, sp, #28
     8c8:	str	r0, [sp, #20]
     8cc:	b	8d0 <readfile+0x40>
     8d0:	ldr	r0, [sp, #20]
     8d4:	str	r0, [fp, #-16]
     8d8:	ldr	r0, [fp, #-8]
     8dc:	movw	r1, #0
     8e0:	movt	r1, #0
     8e4:	bl	0 <fopen>
     8e8:	str	r0, [fp, #-20]	; 0xffffffec
     8ec:	movw	r0, #0
     8f0:	str	r0, [fp, #-24]	; 0xffffffe8
     8f4:	str	r0, [sp, #24]
     8f8:	ldr	r1, [fp, #-20]	; 0xffffffec
     8fc:	cmp	r1, r0
     900:	bne	908 <readfile+0x78>
     904:	b	a28 <readfile+0x198>
     908:	ldr	r0, [fp, #-20]	; 0xffffffec
     90c:	movw	r1, #0
     910:	movw	r2, #2
     914:	bl	0 <fseek>
     918:	ldr	r1, [fp, #-20]	; 0xffffffec
     91c:	str	r0, [sp, #16]
     920:	mov	r0, r1
     924:	bl	0 <ftell>
     928:	str	r0, [fp, #-24]	; 0xffffffe8
     92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     930:	ldr	r1, [fp, #-16]
     934:	str	r0, [r1]
     938:	ldr	r0, [fp, #-12]
     93c:	cmp	r0, #0
     940:	bls	958 <readfile+0xc8>
     944:	ldr	r0, [fp, #-24]	; 0xffffffe8
     948:	ldr	r1, [fp, #-12]
     94c:	cmp	r0, r1
     950:	bls	958 <readfile+0xc8>
     954:	b	a28 <readfile+0x198>
     958:	ldr	r0, [fp, #-20]	; 0xffffffec
     95c:	bl	0 <rewind>
     960:	ldr	r0, [fp, #-24]	; 0xffffffe8
     964:	cmp	r0, #0
     968:	beq	978 <readfile+0xe8>
     96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     970:	str	r0, [sp, #12]
     974:	b	984 <readfile+0xf4>
     978:	movw	r0, #1
     97c:	str	r0, [sp, #12]
     980:	b	984 <readfile+0xf4>
     984:	ldr	r0, [sp, #12]
     988:	bl	0 <malloc>
     98c:	str	r0, [sp, #24]
     990:	ldr	r0, [sp, #24]
     994:	movw	lr, #0
     998:	cmp	r0, lr
     99c:	bne	9a4 <readfile+0x114>
     9a0:	b	a28 <readfile+0x198>
     9a4:	movw	r0, #0
     9a8:	str	r0, [fp, #-28]	; 0xffffffe4
     9ac:	ldr	r0, [sp, #24]
     9b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9b4:	add	r0, r0, r1
     9b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     9c0:	sub	r2, r1, r2
     9c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c8:	movw	r1, #1
     9cc:	bl	0 <fread>
     9d0:	str	r0, [sp, #32]
     9d4:	cmp	r0, #0
     9d8:	beq	9f0 <readfile+0x160>
     9dc:	ldr	r0, [sp, #32]
     9e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9e4:	add	r0, r1, r0
     9e8:	str	r0, [fp, #-28]	; 0xffffffe4
     9ec:	b	9ac <readfile+0x11c>
     9f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     9f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     9f8:	cmp	r0, r1
     9fc:	beq	a04 <readfile+0x174>
     a00:	b	a28 <readfile+0x198>
     a04:	ldr	r0, [fp, #-20]	; 0xffffffec
     a08:	bl	0 <fclose>
     a0c:	ldr	lr, [fp, #-24]	; 0xffffffe8
     a10:	ldr	r1, [fp, #-16]
     a14:	str	lr, [r1]
     a18:	ldr	r1, [sp, #24]
     a1c:	str	r1, [fp, #-4]
     a20:	str	r0, [sp, #8]
     a24:	b	a70 <readfile+0x1e0>
     a28:	ldr	r0, [fp, #-20]	; 0xffffffec
     a2c:	movw	r1, #0
     a30:	cmp	r0, r1
     a34:	beq	a44 <readfile+0x1b4>
     a38:	ldr	r0, [fp, #-20]	; 0xffffffec
     a3c:	bl	0 <fclose>
     a40:	str	r0, [sp, #4]
     a44:	ldr	r0, [sp, #24]
     a48:	movw	r1, #0
     a4c:	cmp	r0, r1
     a50:	beq	a5c <readfile+0x1cc>
     a54:	ldr	r0, [sp, #24]
     a58:	bl	0 <free>
     a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a60:	ldr	r1, [fp, #-16]
     a64:	str	r0, [r1]
     a68:	movw	r0, #0
     a6c:	str	r0, [fp, #-4]
     a70:	ldr	r0, [fp, #-4]
     a74:	mov	sp, fp
     a78:	pop	{fp, pc}

00000a7c <monster_test_parse_json>:
     a7c:	push	{fp, lr}
     a80:	mov	fp, sp
     a84:	sub	sp, sp, #88	; 0x58
     a88:	ldr	ip, [fp, #8]
     a8c:	str	r0, [fp, #-8]
     a90:	str	r1, [fp, #-12]
     a94:	str	r2, [fp, #-16]
     a98:	str	r3, [fp, #-20]	; 0xffffffec
     a9c:	ldr	r0, [fp, #-12]
     aa0:	movw	r1, #0
     aa4:	cmp	r0, r1
     aa8:	str	ip, [sp, #16]
     aac:	beq	abc <monster_test_parse_json+0x40>
     ab0:	ldr	r0, [fp, #-12]
     ab4:	str	r0, [sp, #12]
     ab8:	b	ac8 <monster_test_parse_json+0x4c>
     abc:	add	r0, sp, #24
     ac0:	str	r0, [sp, #12]
     ac4:	b	ac8 <monster_test_parse_json+0x4c>
     ac8:	ldr	r0, [sp, #12]
     acc:	str	r0, [fp, #-12]
     ad0:	ldr	r0, [fp, #-12]
     ad4:	ldr	r1, [fp, #-8]
     ad8:	ldr	r2, [fp, #-16]
     adc:	ldr	r3, [fp, #-16]
     ae0:	ldr	ip, [fp, #-20]	; 0xffffffec
     ae4:	add	r3, r3, ip
     ae8:	ldr	ip, [fp, #8]
     aec:	str	ip, [sp]
     af0:	bl	1244 <flatcc_json_parser_init>
     af4:	ldr	r0, [fp, #-8]
     af8:	movw	r1, #0
     afc:	movt	r1, #0
     b00:	movw	r2, #0
     b04:	uxth	r2, r2
     b08:	movw	r3, #0
     b0c:	bl	0 <flatcc_builder_start_buffer>
     b10:	cmp	r0, #0
     b14:	beq	b24 <monster_test_parse_json+0xa8>
     b18:	mvn	r0, #0
     b1c:	str	r0, [fp, #-4]
     b20:	b	b98 <monster_test_parse_json+0x11c>
     b24:	ldr	r0, [fp, #-12]
     b28:	ldr	r1, [fp, #-16]
     b2c:	ldr	r2, [fp, #-16]
     b30:	ldr	r3, [fp, #-20]	; 0xffffffec
     b34:	add	r2, r2, r3
     b38:	add	r3, sp, #20
     b3c:	bl	12d8 <MyGame_Example_Monster_parse_json_table>
     b40:	ldr	r1, [fp, #-12]
     b44:	ldr	r1, [r1, #24]
     b48:	cmp	r1, #0
     b4c:	str	r0, [sp, #8]
     b50:	beq	b64 <monster_test_parse_json+0xe8>
     b54:	ldr	r0, [fp, #-12]
     b58:	ldr	r0, [r0, #24]
     b5c:	str	r0, [fp, #-4]
     b60:	b	b98 <monster_test_parse_json+0x11c>
     b64:	ldr	r0, [fp, #-8]
     b68:	ldr	r1, [sp, #20]
     b6c:	bl	0 <flatcc_builder_end_buffer>
     b70:	cmp	r0, #0
     b74:	bne	b84 <monster_test_parse_json+0x108>
     b78:	mvn	r0, #0
     b7c:	str	r0, [fp, #-4]
     b80:	b	b98 <monster_test_parse_json+0x11c>
     b84:	ldr	r0, [fp, #-16]
     b88:	ldr	r1, [fp, #-12]
     b8c:	str	r0, [r1, #40]	; 0x28
     b90:	movw	r0, #0
     b94:	str	r0, [fp, #-4]
     b98:	ldr	r0, [fp, #-4]
     b9c:	mov	sp, fp
     ba0:	pop	{fp, pc}

00000ba4 <hexdump>:
     ba4:	push	{fp, lr}
     ba8:	mov	fp, sp
     bac:	sub	sp, sp, #72	; 0x48
     bb0:	str	r0, [fp, #-4]
     bb4:	str	r1, [fp, #-8]
     bb8:	str	r2, [fp, #-12]
     bbc:	str	r3, [fp, #-16]
     bc0:	ldr	r0, [fp, #-8]
     bc4:	str	r0, [sp, #28]
     bc8:	ldr	r0, [fp, #-4]
     bcc:	movw	r1, #0
     bd0:	cmp	r0, r1
     bd4:	beq	bf0 <hexdump+0x4c>
     bd8:	ldr	r0, [fp, #-16]
     bdc:	ldr	r2, [fp, #-4]
     be0:	movw	r1, #0
     be4:	movt	r1, #0
     be8:	bl	0 <fprintf>
     bec:	str	r0, [sp, #24]
     bf0:	movw	r0, #0
     bf4:	str	r0, [fp, #-20]	; 0xffffffec
     bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
     bfc:	ldr	r1, [fp, #-12]
     c00:	cmp	r0, r1
     c04:	bcs	d40 <hexdump+0x19c>
     c08:	ldr	r0, [fp, #-20]	; 0xffffffec
     c0c:	and	r0, r0, #15
     c10:	cmp	r0, #0
     c14:	bne	c58 <hexdump+0xb4>
     c18:	ldr	r0, [fp, #-20]	; 0xffffffec
     c1c:	cmp	r0, #0
     c20:	beq	c3c <hexdump+0x98>
     c24:	add	r2, sp, #35	; 0x23
     c28:	ldr	r0, [fp, #-16]
     c2c:	movw	r1, #0
     c30:	movt	r1, #0
     c34:	bl	0 <fprintf>
     c38:	str	r0, [sp, #20]
     c3c:	ldr	r0, [fp, #-16]
     c40:	ldr	r2, [fp, #-20]	; 0xffffffec
     c44:	movw	r1, #0
     c48:	movt	r1, #0
     c4c:	bl	0 <fprintf>
     c50:	str	r0, [sp, #16]
     c54:	b	c80 <hexdump+0xdc>
     c58:	ldr	r0, [fp, #-20]	; 0xffffffec
     c5c:	and	r0, r0, #7
     c60:	cmp	r0, #0
     c64:	bne	c7c <hexdump+0xd8>
     c68:	ldr	r0, [fp, #-16]
     c6c:	movw	r1, #0
     c70:	movt	r1, #0
     c74:	bl	0 <fprintf>
     c78:	str	r0, [sp, #12]
     c7c:	b	c80 <hexdump+0xdc>
     c80:	ldr	r0, [fp, #-16]
     c84:	ldr	r1, [sp, #28]
     c88:	ldr	r2, [fp, #-20]	; 0xffffffec
     c8c:	add	r1, r1, r2
     c90:	ldrb	r2, [r1]
     c94:	movw	r1, #0
     c98:	movt	r1, #0
     c9c:	bl	0 <fprintf>
     ca0:	ldr	r1, [sp, #28]
     ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
     ca8:	add	r1, r1, r2
     cac:	ldrb	r1, [r1]
     cb0:	cmp	r1, #32
     cb4:	str	r0, [sp, #8]
     cb8:	blt	cd4 <hexdump+0x130>
     cbc:	ldr	r0, [sp, #28]
     cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
     cc4:	add	r0, r0, r1
     cc8:	ldrb	r0, [r0]
     ccc:	cmp	r0, #126	; 0x7e
     cd0:	ble	cf0 <hexdump+0x14c>
     cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
     cd8:	and	r0, r0, #15
     cdc:	add	r1, sp, #35	; 0x23
     ce0:	add	r0, r1, r0
     ce4:	movw	r1, #46	; 0x2e
     ce8:	strb	r1, [r0]
     cec:	b	d14 <hexdump+0x170>
     cf0:	ldr	r0, [sp, #28]
     cf4:	ldr	r1, [fp, #-20]	; 0xffffffec
     cf8:	add	r0, r0, r1
     cfc:	ldrb	r0, [r0]
     d00:	ldr	r1, [fp, #-20]	; 0xffffffec
     d04:	and	r1, r1, #15
     d08:	add	r2, sp, #35	; 0x23
     d0c:	add	r1, r2, r1
     d10:	strb	r0, [r1]
     d14:	ldr	r0, [fp, #-20]	; 0xffffffec
     d18:	and	r0, r0, #15
     d1c:	add	r0, r0, #1
     d20:	add	r1, sp, #35	; 0x23
     d24:	add	r0, r1, r0
     d28:	movw	r1, #0
     d2c:	strb	r1, [r0]
     d30:	ldr	r0, [fp, #-20]	; 0xffffffec
     d34:	add	r0, r0, #1
     d38:	str	r0, [fp, #-20]	; 0xffffffec
     d3c:	b	bf8 <hexdump+0x54>
     d40:	b	d44 <hexdump+0x1a0>
     d44:	ldr	r0, [fp, #-20]	; 0xffffffec
     d48:	and	r0, r0, #15
     d4c:	cmp	r0, #0
     d50:	beq	d78 <hexdump+0x1d4>
     d54:	ldr	r0, [fp, #-16]
     d58:	movw	r1, #0
     d5c:	movt	r1, #0
     d60:	bl	0 <fprintf>
     d64:	ldr	r1, [fp, #-20]	; 0xffffffec
     d68:	add	r1, r1, #1
     d6c:	str	r1, [fp, #-20]	; 0xffffffec
     d70:	str	r0, [sp, #4]
     d74:	b	d44 <hexdump+0x1a0>
     d78:	add	r2, sp, #35	; 0x23
     d7c:	ldr	r0, [fp, #-16]
     d80:	movw	r1, #0
     d84:	movt	r1, #0
     d88:	bl	0 <fprintf>
     d8c:	str	r0, [sp]
     d90:	mov	sp, fp
     d94:	pop	{fp, pc}

00000d98 <cdump>:
     d98:	push	{fp, lr}
     d9c:	mov	fp, sp
     da0:	sub	sp, sp, #72	; 0x48
     da4:	str	r0, [fp, #-4]
     da8:	str	r1, [fp, #-8]
     dac:	str	r2, [fp, #-12]
     db0:	str	r3, [fp, #-16]
     db4:	ldr	r0, [fp, #-8]
     db8:	str	r0, [sp, #28]
     dbc:	ldr	r0, [fp, #-4]
     dc0:	movw	r1, #0
     dc4:	cmp	r0, r1
     dc8:	beq	dd8 <cdump+0x40>
     dcc:	ldr	r0, [fp, #-4]
     dd0:	str	r0, [sp, #24]
     dd4:	b	de8 <cdump+0x50>
     dd8:	movw	r0, #0
     ddc:	movt	r0, #0
     de0:	str	r0, [sp, #24]
     de4:	b	de8 <cdump+0x50>
     de8:	ldr	r0, [sp, #24]
     dec:	str	r0, [fp, #-4]
     df0:	ldr	r0, [fp, #-16]
     df4:	ldr	r2, [fp, #-4]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	bl	0 <fprintf>
     e04:	movw	r1, #0
     e08:	str	r1, [fp, #-20]	; 0xffffffec
     e0c:	str	r0, [sp, #20]
     e10:	ldr	r0, [fp, #-20]	; 0xffffffec
     e14:	ldr	r1, [fp, #-12]
     e18:	cmp	r0, r1
     e1c:	bcs	ea4 <cdump+0x10c>
     e20:	ldr	r0, [fp, #-20]	; 0xffffffec
     e24:	and	r0, r0, #15
     e28:	cmp	r0, #0
     e2c:	bne	e48 <cdump+0xb0>
     e30:	ldr	r0, [fp, #-16]
     e34:	movw	r1, #0
     e38:	movt	r1, #0
     e3c:	bl	0 <fprintf>
     e40:	str	r0, [sp, #16]
     e44:	b	e70 <cdump+0xd8>
     e48:	ldr	r0, [fp, #-20]	; 0xffffffec
     e4c:	and	r0, r0, #7
     e50:	cmp	r0, #0
     e54:	bne	e6c <cdump+0xd4>
     e58:	ldr	r0, [fp, #-16]
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	bl	0 <fprintf>
     e68:	str	r0, [sp, #12]
     e6c:	b	e70 <cdump+0xd8>
     e70:	ldr	r0, [fp, #-16]
     e74:	ldr	r1, [sp, #28]
     e78:	ldr	r2, [fp, #-20]	; 0xffffffec
     e7c:	add	r1, r1, r2
     e80:	ldrb	r2, [r1]
     e84:	movw	r1, #0
     e88:	movt	r1, #0
     e8c:	bl	0 <fprintf>
     e90:	str	r0, [sp, #8]
     e94:	ldr	r0, [fp, #-20]	; 0xffffffec
     e98:	add	r0, r0, #1
     e9c:	str	r0, [fp, #-20]	; 0xffffffec
     ea0:	b	e10 <cdump+0x78>
     ea4:	ldr	r0, [fp, #-16]
     ea8:	movw	r1, #0
     eac:	movt	r1, #0
     eb0:	bl	0 <fprintf>
     eb4:	str	r0, [sp, #4]
     eb8:	mov	sp, fp
     ebc:	pop	{fp, pc}

00000ec0 <main>:
     ec0:	push	{fp, lr}
     ec4:	mov	fp, sp
     ec8:	sub	sp, sp, #24
     ecc:	movw	r2, #0
     ed0:	str	r2, [fp, #-4]
     ed4:	str	r0, [fp, #-8]
     ed8:	str	r1, [sp, #12]
     edc:	movw	r0, #0
     ee0:	movt	r0, #0
     ee4:	ldr	r0, [r0]
     ee8:	movw	r1, #0
     eec:	movt	r1, #0
     ef0:	bl	0 <fprintf>
     ef4:	ldr	r1, [fp, #-8]
     ef8:	cmp	r1, #1
     efc:	str	r0, [sp, #8]
     f00:	beq	f38 <main+0x78>
     f04:	ldr	r0, [fp, #-8]
     f08:	cmp	r0, #2
     f0c:	beq	f38 <main+0x78>
     f10:	movw	r0, #0
     f14:	movt	r0, #0
     f18:	ldr	r0, [r0]
     f1c:	movw	r1, #0
     f20:	movt	r1, #0
     f24:	bl	0 <fprintf>
     f28:	movw	r1, #1
     f2c:	str	r0, [sp, #4]
     f30:	mov	r0, r1
     f34:	bl	0 <exit>
     f38:	ldr	r0, [fp, #-8]
     f3c:	cmp	r0, #2
     f40:	bne	f58 <main+0x98>
     f44:	ldr	r0, [sp, #12]
     f48:	ldr	r0, [r0, #4]
     f4c:	movw	r1, #0
     f50:	movt	r1, #0
     f54:	str	r0, [r1]
     f58:	bl	628 <test_parse>
     f5c:	mov	sp, fp
     f60:	pop	{fp, pc}

00000f64 <flatbuffers_has_identifier>:
     f64:	push	{fp, lr}
     f68:	mov	fp, sp
     f6c:	sub	sp, sp, #32
     f70:	str	r0, [fp, #-8]
     f74:	str	r1, [fp, #-12]
     f78:	movw	r0, #0
     f7c:	str	r0, [sp, #12]
     f80:	ldr	r1, [fp, #-12]
     f84:	cmp	r1, r0
     f88:	bne	f98 <flatbuffers_has_identifier+0x34>
     f8c:	movw	r0, #1
     f90:	str	r0, [fp, #-4]
     f94:	b	1004 <flatbuffers_has_identifier+0xa0>
     f98:	add	r0, sp, #12
     f9c:	ldr	r1, [fp, #-12]
     fa0:	movw	r2, #4
     fa4:	bl	0 <strncpy>
     fa8:	ldr	r1, [sp, #12]
     fac:	str	r0, [sp, #8]
     fb0:	mov	r0, r1
     fb4:	bl	1034 <__flatbuffers_thash_cast_from_le>
     fb8:	str	r0, [sp, #12]
     fbc:	ldr	r0, [fp, #-8]
     fc0:	add	r0, r0, #4
     fc4:	bl	1048 <__flatbuffers_thash_read_from_pe>
     fc8:	str	r0, [sp, #16]
     fcc:	ldr	r0, [sp, #12]
     fd0:	cmp	r0, #0
     fd4:	movw	r0, #1
     fd8:	str	r0, [sp, #4]
     fdc:	beq	ff8 <flatbuffers_has_identifier+0x94>
     fe0:	ldr	r0, [sp, #16]
     fe4:	ldr	r1, [sp, #12]
     fe8:	cmp	r0, r1
     fec:	movw	r0, #0
     ff0:	moveq	r0, #1
     ff4:	str	r0, [sp, #4]
     ff8:	ldr	r0, [sp, #4]
     ffc:	and	r0, r0, #1
    1000:	str	r0, [fp, #-4]
    1004:	ldr	r0, [fp, #-4]
    1008:	mov	sp, fp
    100c:	pop	{fp, pc}

00001010 <__flatbuffers_uoffset_read_from_pe>:
    1010:	push	{fp, lr}
    1014:	mov	fp, sp
    1018:	sub	sp, sp, #8
    101c:	str	r0, [sp, #4]
    1020:	ldr	r0, [sp, #4]
    1024:	ldr	r0, [r0]
    1028:	bl	1080 <__flatbuffers_uoffset_cast_from_pe>
    102c:	mov	sp, fp
    1030:	pop	{fp, pc}

00001034 <__flatbuffers_thash_cast_from_le>:
    1034:	sub	sp, sp, #4
    1038:	str	r0, [sp]
    103c:	ldr	r0, [sp]
    1040:	add	sp, sp, #4
    1044:	bx	lr

00001048 <__flatbuffers_thash_read_from_pe>:
    1048:	push	{fp, lr}
    104c:	mov	fp, sp
    1050:	sub	sp, sp, #8
    1054:	str	r0, [sp, #4]
    1058:	ldr	r0, [sp, #4]
    105c:	ldr	r0, [r0]
    1060:	bl	106c <__flatbuffers_thash_cast_from_pe>
    1064:	mov	sp, fp
    1068:	pop	{fp, pc}

0000106c <__flatbuffers_thash_cast_from_pe>:
    106c:	sub	sp, sp, #4
    1070:	str	r0, [sp]
    1074:	ldr	r0, [sp]
    1078:	add	sp, sp, #4
    107c:	bx	lr

00001080 <__flatbuffers_uoffset_cast_from_pe>:
    1080:	sub	sp, sp, #4
    1084:	str	r0, [sp]
    1088:	ldr	r0, [sp]
    108c:	add	sp, sp, #4
    1090:	bx	lr

00001094 <__flatbuffers_soffset_read_from_pe>:
    1094:	push	{fp, lr}
    1098:	mov	fp, sp
    109c:	sub	sp, sp, #8
    10a0:	str	r0, [sp, #4]
    10a4:	ldr	r0, [sp, #4]
    10a8:	ldr	r0, [r0]
    10ac:	bl	10e0 <__flatbuffers_soffset_cast_from_pe>
    10b0:	mov	sp, fp
    10b4:	pop	{fp, pc}

000010b8 <__flatbuffers_voffset_read_from_pe>:
    10b8:	push	{fp, lr}
    10bc:	mov	fp, sp
    10c0:	sub	sp, sp, #8
    10c4:	str	r0, [sp, #4]
    10c8:	ldr	r0, [sp, #4]
    10cc:	ldrh	r0, [r0]
    10d0:	bl	10f4 <__flatbuffers_voffset_cast_from_pe>
    10d4:	uxth	r0, r0
    10d8:	mov	sp, fp
    10dc:	pop	{fp, pc}

000010e0 <__flatbuffers_soffset_cast_from_pe>:
    10e0:	sub	sp, sp, #4
    10e4:	str	r0, [sp]
    10e8:	ldr	r0, [sp]
    10ec:	add	sp, sp, #4
    10f0:	bx	lr

000010f4 <__flatbuffers_voffset_cast_from_pe>:
    10f4:	sub	sp, sp, #4
    10f8:	strh	r0, [sp, #2]
    10fc:	ldrh	r0, [sp, #2]
    1100:	add	sp, sp, #4
    1104:	bx	lr

00001108 <flatbuffers_float_read_from_pe>:
    1108:	push	{fp, lr}
    110c:	mov	fp, sp
    1110:	sub	sp, sp, #8
    1114:	str	r0, [sp, #4]
    1118:	ldr	r0, [sp, #4]
    111c:	vldr	s0, [r0]
    1120:	bl	112c <flatbuffers_float_cast_from_pe>
    1124:	mov	sp, fp
    1128:	pop	{fp, pc}

0000112c <flatbuffers_float_cast_from_pe>:
    112c:	sub	sp, sp, #8
    1130:	vstr	s0, [sp, #4]
    1134:	vldr	s0, [sp, #4]
    1138:	vstr	s0, [sp]
    113c:	ldr	r0, [sp]
    1140:	str	r0, [sp]
    1144:	vldr	s0, [sp]
    1148:	add	sp, sp, #8
    114c:	bx	lr

00001150 <flatbuffers_double_read_from_pe>:
    1150:	push	{fp, lr}
    1154:	mov	fp, sp
    1158:	sub	sp, sp, #8
    115c:	str	r0, [sp, #4]
    1160:	ldr	r0, [sp, #4]
    1164:	vldr	d0, [r0]
    1168:	bl	1174 <flatbuffers_double_cast_from_pe>
    116c:	mov	sp, fp
    1170:	pop	{fp, pc}

00001174 <flatbuffers_double_cast_from_pe>:
    1174:	sub	sp, sp, #16
    1178:	vstr	d0, [sp, #8]
    117c:	vldr	d0, [sp, #8]
    1180:	vstr	d0, [sp]
    1184:	vldr	d0, [sp]
    1188:	add	sp, sp, #16
    118c:	bx	lr

00001190 <MyGame_Example_Color_read_from_pe>:
    1190:	push	{fp, lr}
    1194:	mov	fp, sp
    1198:	sub	sp, sp, #8
    119c:	str	r0, [sp, #4]
    11a0:	ldr	r0, [sp, #4]
    11a4:	ldrsb	r0, [r0]
    11a8:	bl	11b8 <MyGame_Example_Color_cast_from_pe>
    11ac:	sxtb	r0, r0
    11b0:	mov	sp, fp
    11b4:	pop	{fp, pc}

000011b8 <MyGame_Example_Color_cast_from_pe>:
    11b8:	sub	sp, sp, #4
    11bc:	strb	r0, [sp, #3]
    11c0:	ldrsb	r0, [sp, #3]
    11c4:	add	sp, sp, #4
    11c8:	bx	lr

000011cc <flatbuffers_int16_read_from_pe>:
    11cc:	push	{fp, lr}
    11d0:	mov	fp, sp
    11d4:	sub	sp, sp, #8
    11d8:	str	r0, [sp, #4]
    11dc:	ldr	r0, [sp, #4]
    11e0:	ldrsh	r0, [r0]
    11e4:	bl	11f4 <flatbuffers_int16_cast_from_pe>
    11e8:	sxth	r0, r0
    11ec:	mov	sp, fp
    11f0:	pop	{fp, pc}

000011f4 <flatbuffers_int16_cast_from_pe>:
    11f4:	sub	sp, sp, #4
    11f8:	strh	r0, [sp, #2]
    11fc:	ldrsh	r0, [sp, #2]
    1200:	add	sp, sp, #4
    1204:	bx	lr

00001208 <flatbuffers_int8_read_from_pe>:
    1208:	push	{fp, lr}
    120c:	mov	fp, sp
    1210:	sub	sp, sp, #8
    1214:	str	r0, [sp, #4]
    1218:	ldr	r0, [sp, #4]
    121c:	ldrsb	r0, [r0]
    1220:	bl	1230 <flatbuffers_int8_cast_from_pe>
    1224:	sxtb	r0, r0
    1228:	mov	sp, fp
    122c:	pop	{fp, pc}

00001230 <flatbuffers_int8_cast_from_pe>:
    1230:	sub	sp, sp, #4
    1234:	strb	r0, [sp, #3]
    1238:	ldrsb	r0, [sp, #3]
    123c:	add	sp, sp, #4
    1240:	bx	lr

00001244 <flatcc_json_parser_init>:
    1244:	push	{fp, lr}
    1248:	mov	fp, sp
    124c:	sub	sp, sp, #24
    1250:	ldr	ip, [fp, #8]
    1254:	str	r0, [fp, #-4]
    1258:	str	r1, [fp, #-8]
    125c:	str	r2, [sp, #12]
    1260:	str	r3, [sp, #8]
    1264:	ldr	r0, [fp, #-4]
    1268:	movw	r1, #0
    126c:	and	r1, r1, #255	; 0xff
    1270:	movw	r2, #44	; 0x2c
    1274:	str	ip, [sp, #4]
    1278:	bl	0 <memset>
    127c:	ldr	r0, [fp, #-8]
    1280:	ldr	r1, [fp, #-4]
    1284:	str	r0, [r1]
    1288:	ldr	r0, [sp, #12]
    128c:	ldr	r1, [fp, #-4]
    1290:	str	r0, [r1, #4]
    1294:	ldr	r0, [fp, #-4]
    1298:	movw	r1, #1
    129c:	str	r1, [r0, #16]
    12a0:	ldr	r0, [fp, #8]
    12a4:	ldr	r1, [fp, #-4]
    12a8:	str	r0, [r1, #8]
    12ac:	ldr	r0, [sp, #12]
    12b0:	ldr	r1, [fp, #-4]
    12b4:	str	r0, [r1, #28]
    12b8:	ldr	r0, [sp, #8]
    12bc:	ldr	r1, [fp, #-4]
    12c0:	str	r0, [r1, #32]
    12c4:	ldr	r0, [sp, #12]
    12c8:	ldr	r1, [fp, #-4]
    12cc:	str	r0, [r1, #36]	; 0x24
    12d0:	mov	sp, fp
    12d4:	pop	{fp, pc}

000012d8 <MyGame_Example_Monster_parse_json_table>:
    12d8:	push	{r4, r5, fp, lr}
    12dc:	add	fp, sp, #8
    12e0:	sub	sp, sp, #280	; 0x118
    12e4:	str	r0, [fp, #-16]
    12e8:	str	r1, [fp, #-20]	; 0xffffffec
    12ec:	str	r2, [fp, #-24]	; 0xffffffe8
    12f0:	str	r3, [fp, #-28]	; 0xffffffe4
    12f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12f8:	movw	r1, #0
    12fc:	str	r1, [r0]
    1300:	ldr	r0, [fp, #-16]
    1304:	ldr	r0, [r0]
    1308:	movw	r1, #36	; 0x24
    130c:	bl	0 <flatcc_builder_start_table>
    1310:	cmp	r0, #0
    1314:	beq	131c <MyGame_Example_Monster_parse_json_table+0x44>
    1318:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    131c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1320:	ldr	r1, [fp, #-16]
    1324:	ldr	r2, [fp, #-20]	; 0xffffffec
    1328:	ldr	r3, [fp, #-24]	; 0xffffffe8
    132c:	str	r0, [sp, #124]	; 0x7c
    1330:	mov	r0, r1
    1334:	mov	r1, r2
    1338:	mov	r2, r3
    133c:	movw	r3, #1
    1340:	sub	ip, fp, #60	; 0x3c
    1344:	str	ip, [sp]
    1348:	bl	0 <flatcc_json_parser_prepare_unions>
    134c:	ldr	r1, [sp, #124]	; 0x7c
    1350:	cmp	r1, r0
    1354:	bne	135c <MyGame_Example_Monster_parse_json_table+0x84>
    1358:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    135c:	ldr	r0, [fp, #-16]
    1360:	ldr	r1, [fp, #-20]	; 0xffffffec
    1364:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1368:	sub	r3, fp, #32
    136c:	bl	4ccc <flatcc_json_parser_object_start>
    1370:	str	r0, [fp, #-20]	; 0xffffffec
    1374:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1378:	cmp	r0, #0
    137c:	beq	4c08 <MyGame_Example_Monster_parse_json_table+0x3930>
    1380:	ldr	r0, [fp, #-16]
    1384:	ldr	r1, [fp, #-20]	; 0xffffffec
    1388:	ldr	r2, [fp, #-24]	; 0xffffffe8
    138c:	bl	4db0 <flatcc_json_parser_symbol_start>
    1390:	str	r0, [fp, #-20]	; 0xffffffec
    1394:	ldr	r0, [fp, #-20]	; 0xffffffec
    1398:	ldr	r1, [fp, #-24]	; 0xffffffe8
    139c:	bl	4e5c <flatcc_json_parser_symbol_part>
    13a0:	str	r1, [fp, #-52]	; 0xffffffcc
    13a4:	str	r0, [fp, #-56]	; 0xffffffc8
    13a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    13ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    13b0:	movw	r2, #29280	; 0x7260
    13b4:	movt	r2, #24946	; 0x6172
    13b8:	subs	r0, r2, r0
    13bc:	movw	r2, #29556	; 0x7374
    13c0:	movt	r2, #29797	; 0x7465
    13c4:	sbcs	r1, r2, r1
    13c8:	str	r0, [sp, #120]	; 0x78
    13cc:	str	r1, [sp, #116]	; 0x74
    13d0:	bcc	2560 <MyGame_Example_Monster_parse_json_table+0x1288>
    13d4:	b	13d8 <MyGame_Example_Monster_parse_json_table+0x100>
    13d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    13dc:	movw	r1, #28004	; 0x6d64
    13e0:	movt	r1, #28257	; 0x6e61
    13e4:	cmp	r0, r1
    13e8:	bhi	1d5c <MyGame_Example_Monster_parse_json_table+0xa84>
    13ec:	b	13f0 <MyGame_Example_Monster_parse_json_table+0x118>
    13f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    13f4:	movw	r1, #25975	; 0x6577
    13f8:	movt	r1, #26220	; 0x666c
    13fc:	cmp	r0, r1
    1400:	bhi	1640 <MyGame_Example_Monster_parse_json_table+0x368>
    1404:	b	1408 <MyGame_Example_Monster_parse_json_table+0x130>
    1408:	ldr	r0, [fp, #-56]	; 0xffffffc8
    140c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1410:	and	r0, r0, #-16777216	; 0xff000000
    1414:	movw	r2, #25965	; 0x656d
    1418:	movt	r2, #25966	; 0x656e
    141c:	eor	r1, r1, r2
    1420:	eor	r0, r0, #2030043136	; 0x79000000
    1424:	orr	r0, r0, r1
    1428:	cmp	r0, #0
    142c:	bne	14d0 <MyGame_Example_Monster_parse_json_table+0x1f8>
    1430:	b	1434 <MyGame_Example_Monster_parse_json_table+0x15c>
    1434:	ldr	r0, [fp, #-16]
    1438:	ldr	r1, [fp, #-20]	; 0xffffffec
    143c:	str	r1, [fp, #-48]	; 0xffffffd0
    1440:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1444:	movw	r3, #5
    1448:	bl	4e94 <flatcc_json_parser_match_symbol>
    144c:	str	r0, [fp, #-20]	; 0xffffffec
    1450:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1454:	ldr	r1, [fp, #-20]	; 0xffffffec
    1458:	cmp	r0, r1
    145c:	beq	14b8 <MyGame_Example_Monster_parse_json_table+0x1e0>
    1460:	ldr	r0, [fp, #-16]
    1464:	ldr	r1, [fp, #-20]	; 0xffffffec
    1468:	ldr	r2, [fp, #-24]	; 0xffffffe8
    146c:	sub	r3, fp, #40	; 0x28
    1470:	bl	12d8 <MyGame_Example_Monster_parse_json_table>
    1474:	str	r0, [fp, #-20]	; 0xffffffec
    1478:	ldr	r0, [fp, #-40]	; 0xffffffd8
    147c:	cmp	r0, #0
    1480:	beq	14a4 <MyGame_Example_Monster_parse_json_table+0x1cc>
    1484:	ldr	r0, [fp, #-16]
    1488:	ldr	r0, [r0]
    148c:	movw	r1, #12
    1490:	bl	0 <flatcc_builder_table_add_offset>
    1494:	str	r0, [fp, #-44]	; 0xffffffd4
    1498:	movw	r1, #0
    149c:	cmp	r0, r1
    14a0:	bne	14a8 <MyGame_Example_Monster_parse_json_table+0x1d0>
    14a4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    14a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    14ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    14b0:	str	r0, [r1]
    14b4:	b	14cc <MyGame_Example_Monster_parse_json_table+0x1f4>
    14b8:	ldr	r0, [fp, #-16]
    14bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    14c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    14c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    14c8:	str	r0, [fp, #-20]	; 0xffffffec
    14cc:	b	163c <MyGame_Example_Monster_parse_json_table+0x364>
    14d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    14d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    14d8:	and	r0, r0, #-16777216	; 0xff000000
    14dc:	movw	r2, #27759	; 0x6c6f
    14e0:	movt	r2, #25455	; 0x636f
    14e4:	eor	r1, r1, r2
    14e8:	eor	r0, r0, #1912602624	; 0x72000000
    14ec:	orr	r0, r0, r1
    14f0:	cmp	r0, #0
    14f4:	bne	1624 <MyGame_Example_Monster_parse_json_table+0x34c>
    14f8:	b	14fc <MyGame_Example_Monster_parse_json_table+0x224>
    14fc:	ldr	r0, [fp, #-16]
    1500:	ldr	r1, [fp, #-20]	; 0xffffffec
    1504:	str	r1, [fp, #-48]	; 0xffffffd0
    1508:	ldr	r2, [fp, #-24]	; 0xffffffe8
    150c:	movw	r3, #5
    1510:	bl	4e94 <flatcc_json_parser_match_symbol>
    1514:	str	r0, [fp, #-20]	; 0xffffffec
    1518:	ldr	r0, [fp, #-48]	; 0xffffffd0
    151c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1520:	cmp	r0, r1
    1524:	beq	160c <MyGame_Example_Monster_parse_json_table+0x334>
    1528:	movw	r0, #0
    152c:	strb	r0, [fp, #-61]	; 0xffffffc3
    1530:	ldr	r0, [fp, #-16]
    1534:	ldr	r1, [fp, #-20]	; 0xffffffec
    1538:	str	r1, [fp, #-48]	; 0xffffffd0
    153c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1540:	sub	r3, fp, #61	; 0x3d
    1544:	bl	6410 <flatcc_json_parser_int8>
    1548:	str	r0, [fp, #-20]	; 0xffffffec
    154c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1550:	ldr	r1, [fp, #-20]	; 0xffffffec
    1554:	cmp	r0, r1
    1558:	bne	15ac <MyGame_Example_Monster_parse_json_table+0x2d4>
    155c:	ldr	r0, [fp, #-16]
    1560:	ldr	r1, [fp, #-20]	; 0xffffffec
    1564:	str	r1, [fp, #-48]	; 0xffffffd0
    1568:	ldr	r2, [fp, #-24]	; 0xffffffe8
    156c:	movw	r3, #0
    1570:	movt	r3, #0
    1574:	sub	ip, fp, #61	; 0x3d
    1578:	str	ip, [sp]
    157c:	bl	64ec <flatcc_json_parser_symbolic_int8>
    1580:	str	r0, [fp, #-20]	; 0xffffffec
    1584:	ldr	r0, [fp, #-20]	; 0xffffffec
    1588:	ldr	r1, [fp, #-48]	; 0xffffffd0
    158c:	cmp	r0, r1
    1590:	beq	15a4 <MyGame_Example_Monster_parse_json_table+0x2cc>
    1594:	ldr	r0, [fp, #-20]	; 0xffffffec
    1598:	ldr	r1, [fp, #-24]	; 0xffffffe8
    159c:	cmp	r0, r1
    15a0:	bne	15a8 <MyGame_Example_Monster_parse_json_table+0x2d0>
    15a4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    15a8:	b	15ac <MyGame_Example_Monster_parse_json_table+0x2d4>
    15ac:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
    15b0:	cmp	r0, #8
    15b4:	bne	15cc <MyGame_Example_Monster_parse_json_table+0x2f4>
    15b8:	ldr	r0, [fp, #-16]
    15bc:	ldr	r0, [r0, #8]
    15c0:	and	r0, r0, #2
    15c4:	cmp	r0, #0
    15c8:	beq	1608 <MyGame_Example_Monster_parse_json_table+0x330>
    15cc:	ldr	r0, [fp, #-16]
    15d0:	ldr	r0, [r0]
    15d4:	movw	r1, #6
    15d8:	movw	r2, #1
    15dc:	movw	r3, #1
    15e0:	uxth	r3, r3
    15e4:	bl	0 <flatcc_builder_table_add>
    15e8:	str	r0, [fp, #-36]	; 0xffffffdc
    15ec:	movw	r1, #0
    15f0:	cmp	r0, r1
    15f4:	bne	15fc <MyGame_Example_Monster_parse_json_table+0x324>
    15f8:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    15fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1600:	ldrsb	r1, [fp, #-61]	; 0xffffffc3
    1604:	bl	6718 <flatbuffers_int8_write_to_pe>
    1608:	b	1620 <MyGame_Example_Monster_parse_json_table+0x348>
    160c:	ldr	r0, [fp, #-16]
    1610:	ldr	r1, [fp, #-20]	; 0xffffffec
    1614:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1618:	bl	0 <flatcc_json_parser_unmatched_symbol>
    161c:	str	r0, [fp, #-20]	; 0xffffffec
    1620:	b	1638 <MyGame_Example_Monster_parse_json_table+0x360>
    1624:	ldr	r0, [fp, #-16]
    1628:	ldr	r1, [fp, #-20]	; 0xffffffec
    162c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1630:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1634:	str	r0, [fp, #-20]	; 0xffffffec
    1638:	b	163c <MyGame_Example_Monster_parse_json_table+0x364>
    163c:	b	1d58 <MyGame_Example_Monster_parse_json_table+0xa80>
    1640:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1644:	movw	r1, #65535	; 0xffff
    1648:	movt	r1, #26735	; 0x686f
    164c:	cmp	r0, r1
    1650:	bhi	1838 <MyGame_Example_Monster_parse_json_table+0x560>
    1654:	b	1658 <MyGame_Example_Monster_parse_json_table+0x380>
    1658:	ldr	r0, [fp, #-52]	; 0xffffffcc
    165c:	movw	r1, #25976	; 0x6578
    1660:	movt	r1, #26220	; 0x666c
    1664:	teq	r0, r1
    1668:	bne	1820 <MyGame_Example_Monster_parse_json_table+0x548>
    166c:	b	1670 <MyGame_Example_Monster_parse_json_table+0x398>
    1670:	ldr	r0, [fp, #-16]
    1674:	ldr	r1, [fp, #-20]	; 0xffffffec
    1678:	str	r1, [fp, #-48]	; 0xffffffd0
    167c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1680:	movw	r3, #4
    1684:	bl	4e94 <flatcc_json_parser_match_symbol>
    1688:	str	r0, [fp, #-20]	; 0xffffffec
    168c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1690:	ldr	r1, [fp, #-20]	; 0xffffffec
    1694:	cmp	r0, r1
    1698:	beq	1808 <MyGame_Example_Monster_parse_json_table+0x530>
    169c:	ldr	r0, [fp, #-16]
    16a0:	ldr	r0, [r0]
    16a4:	movw	r1, #1
    16a8:	movw	r2, #1
    16ac:	uxth	r2, r2
    16b0:	mvn	r3, #0
    16b4:	bl	0 <flatcc_builder_start_vector>
    16b8:	cmp	r0, #0
    16bc:	beq	16c4 <MyGame_Example_Monster_parse_json_table+0x3ec>
    16c0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    16c4:	ldr	r0, [fp, #-16]
    16c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    16cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    16d0:	sub	r3, fp, #32
    16d4:	bl	6744 <flatcc_json_parser_array_start>
    16d8:	str	r0, [fp, #-20]	; 0xffffffec
    16dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    16e0:	cmp	r0, #0
    16e4:	beq	17b8 <MyGame_Example_Monster_parse_json_table+0x4e0>
    16e8:	movw	r0, #0
    16ec:	strb	r0, [fp, #-62]	; 0xffffffc2
    16f0:	ldr	r0, [fp, #-16]
    16f4:	ldr	r0, [r0]
    16f8:	movw	r1, #1
    16fc:	bl	0 <flatcc_builder_extend_vector>
    1700:	str	r0, [fp, #-36]	; 0xffffffdc
    1704:	movw	r1, #0
    1708:	cmp	r0, r1
    170c:	bne	1714 <MyGame_Example_Monster_parse_json_table+0x43c>
    1710:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1714:	ldr	r0, [fp, #-16]
    1718:	ldr	r1, [fp, #-20]	; 0xffffffec
    171c:	str	r1, [fp, #-48]	; 0xffffffd0
    1720:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1724:	sub	r3, fp, #62	; 0x3e
    1728:	bl	6828 <flatcc_json_parser_uint8>
    172c:	str	r0, [fp, #-20]	; 0xffffffec
    1730:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1734:	ldr	r1, [fp, #-20]	; 0xffffffec
    1738:	cmp	r0, r1
    173c:	bne	1790 <MyGame_Example_Monster_parse_json_table+0x4b8>
    1740:	ldr	r0, [fp, #-16]
    1744:	ldr	r1, [fp, #-20]	; 0xffffffec
    1748:	str	r1, [fp, #-48]	; 0xffffffd0
    174c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1750:	movw	r3, #0
    1754:	movt	r3, #0
    1758:	sub	ip, fp, #62	; 0x3e
    175c:	str	ip, [sp]
    1760:	bl	6904 <flatcc_json_parser_symbolic_uint8>
    1764:	str	r0, [fp, #-20]	; 0xffffffec
    1768:	ldr	r0, [fp, #-20]	; 0xffffffec
    176c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1770:	cmp	r0, r1
    1774:	beq	1788 <MyGame_Example_Monster_parse_json_table+0x4b0>
    1778:	ldr	r0, [fp, #-20]	; 0xffffffec
    177c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1780:	cmp	r0, r1
    1784:	bne	178c <MyGame_Example_Monster_parse_json_table+0x4b4>
    1788:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    178c:	b	1790 <MyGame_Example_Monster_parse_json_table+0x4b8>
    1790:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1794:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    1798:	bl	6b30 <flatbuffers_uint8_write_to_pe>
    179c:	ldr	r0, [fp, #-16]
    17a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    17a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    17a8:	sub	r3, fp, #32
    17ac:	bl	6b5c <flatcc_json_parser_array_end>
    17b0:	str	r0, [fp, #-20]	; 0xffffffec
    17b4:	b	16dc <MyGame_Example_Monster_parse_json_table+0x404>
    17b8:	ldr	r0, [fp, #-16]
    17bc:	ldr	r0, [r0]
    17c0:	bl	0 <flatcc_builder_end_vector>
    17c4:	str	r0, [fp, #-40]	; 0xffffffd8
    17c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    17cc:	cmp	r0, #0
    17d0:	beq	17f4 <MyGame_Example_Monster_parse_json_table+0x51c>
    17d4:	ldr	r0, [fp, #-16]
    17d8:	ldr	r0, [r0]
    17dc:	movw	r1, #30
    17e0:	bl	0 <flatcc_builder_table_add_offset>
    17e4:	str	r0, [fp, #-44]	; 0xffffffd4
    17e8:	movw	r1, #0
    17ec:	cmp	r0, r1
    17f0:	bne	17f8 <MyGame_Example_Monster_parse_json_table+0x520>
    17f4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    17f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    17fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1800:	str	r0, [r1]
    1804:	b	181c <MyGame_Example_Monster_parse_json_table+0x544>
    1808:	ldr	r0, [fp, #-16]
    180c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1810:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1814:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1818:	str	r0, [fp, #-20]	; 0xffffffec
    181c:	b	1834 <MyGame_Example_Monster_parse_json_table+0x55c>
    1820:	ldr	r0, [fp, #-16]
    1824:	ldr	r1, [fp, #-20]	; 0xffffffec
    1828:	ldr	r2, [fp, #-24]	; 0xffffffe8
    182c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1830:	str	r0, [fp, #-20]	; 0xffffffec
    1834:	b	1d54 <MyGame_Example_Monster_parse_json_table+0xa7c>
    1838:	ldr	r0, [fp, #-56]	; 0xffffffc8
    183c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1840:	movw	r2, #28529	; 0x6f71
    1844:	movt	r2, #28276	; 0x6e74
    1848:	subs	r0, r2, r0
    184c:	movw	r2, #30309	; 0x7665
    1850:	movt	r2, #26990	; 0x696e
    1854:	sbcs	r1, r2, r1
    1858:	str	r0, [sp, #112]	; 0x70
    185c:	str	r1, [sp, #108]	; 0x6c
    1860:	bcc	19c8 <MyGame_Example_Monster_parse_json_table+0x6f0>
    1864:	b	1868 <MyGame_Example_Monster_parse_json_table+0x590>
    1868:	ldr	r0, [fp, #-52]	; 0xffffffcc
    186c:	bfc	r0, #0, #16
    1870:	movw	r1, #0
    1874:	movt	r1, #26736	; 0x6870
    1878:	teq	r0, r1
    187c:	bne	19b0 <MyGame_Example_Monster_parse_json_table+0x6d8>
    1880:	b	1884 <MyGame_Example_Monster_parse_json_table+0x5ac>
    1884:	ldr	r0, [fp, #-16]
    1888:	ldr	r1, [fp, #-20]	; 0xffffffec
    188c:	str	r1, [fp, #-48]	; 0xffffffd0
    1890:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1894:	movw	r3, #2
    1898:	bl	4e94 <flatcc_json_parser_match_symbol>
    189c:	str	r0, [fp, #-20]	; 0xffffffec
    18a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    18a8:	cmp	r0, r1
    18ac:	beq	1998 <MyGame_Example_Monster_parse_json_table+0x6c0>
    18b0:	movw	r0, #0
    18b4:	strh	r0, [fp, #-64]	; 0xffffffc0
    18b8:	ldr	r0, [fp, #-16]
    18bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    18c0:	str	r1, [fp, #-48]	; 0xffffffd0
    18c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18c8:	sub	r3, fp, #64	; 0x40
    18cc:	bl	6cc0 <flatcc_json_parser_int16>
    18d0:	str	r0, [fp, #-20]	; 0xffffffec
    18d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    18dc:	cmp	r0, r1
    18e0:	bne	1934 <MyGame_Example_Monster_parse_json_table+0x65c>
    18e4:	ldr	r0, [fp, #-16]
    18e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    18ec:	str	r1, [fp, #-48]	; 0xffffffd0
    18f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18f4:	movw	r3, #0
    18f8:	movt	r3, #0
    18fc:	sub	ip, fp, #64	; 0x40
    1900:	str	ip, [sp]
    1904:	bl	6d9c <flatcc_json_parser_symbolic_int16>
    1908:	str	r0, [fp, #-20]	; 0xffffffec
    190c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1910:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1914:	cmp	r0, r1
    1918:	beq	192c <MyGame_Example_Monster_parse_json_table+0x654>
    191c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1920:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1924:	cmp	r0, r1
    1928:	bne	1930 <MyGame_Example_Monster_parse_json_table+0x658>
    192c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1930:	b	1934 <MyGame_Example_Monster_parse_json_table+0x65c>
    1934:	ldrsh	r0, [fp, #-64]	; 0xffffffc0
    1938:	cmp	r0, #100	; 0x64
    193c:	bne	1954 <MyGame_Example_Monster_parse_json_table+0x67c>
    1940:	ldr	r0, [fp, #-16]
    1944:	ldr	r0, [r0, #8]
    1948:	and	r0, r0, #2
    194c:	cmp	r0, #0
    1950:	beq	1994 <MyGame_Example_Monster_parse_json_table+0x6bc>
    1954:	ldr	r0, [fp, #-16]
    1958:	ldr	r0, [r0]
    195c:	movw	r1, #2
    1960:	str	r1, [sp, #104]	; 0x68
    1964:	ldr	r2, [sp, #104]	; 0x68
    1968:	movw	r3, #2
    196c:	uxth	r3, r3
    1970:	bl	0 <flatcc_builder_table_add>
    1974:	str	r0, [fp, #-36]	; 0xffffffdc
    1978:	movw	r1, #0
    197c:	cmp	r0, r1
    1980:	bne	1988 <MyGame_Example_Monster_parse_json_table+0x6b0>
    1984:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1988:	ldr	r0, [fp, #-36]	; 0xffffffdc
    198c:	ldrsh	r1, [fp, #-64]	; 0xffffffc0
    1990:	bl	6fc8 <flatbuffers_int16_write_to_pe>
    1994:	b	19ac <MyGame_Example_Monster_parse_json_table+0x6d4>
    1998:	ldr	r0, [fp, #-16]
    199c:	ldr	r1, [fp, #-20]	; 0xffffffec
    19a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    19a8:	str	r0, [fp, #-20]	; 0xffffffec
    19ac:	b	19c4 <MyGame_Example_Monster_parse_json_table+0x6ec>
    19b0:	ldr	r0, [fp, #-16]
    19b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    19b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    19c0:	str	r0, [fp, #-20]	; 0xffffffec
    19c4:	b	1d50 <MyGame_Example_Monster_parse_json_table+0xa78>
    19c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    19cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    19d0:	movw	r2, #30309	; 0x7665
    19d4:	movt	r2, #26990	; 0x696e
    19d8:	eor	r1, r1, r2
    19dc:	movw	r2, #28530	; 0x6f72
    19e0:	movt	r2, #28276	; 0x6e74
    19e4:	eor	r0, r0, r2
    19e8:	orr	r0, r0, r1
    19ec:	cmp	r0, #0
    19f0:	bne	1bf4 <MyGame_Example_Monster_parse_json_table+0x91c>
    19f4:	b	19f8 <MyGame_Example_Monster_parse_json_table+0x720>
    19f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    19fc:	add	r0, r0, #8
    1a00:	str	r0, [fp, #-20]	; 0xffffffec
    1a04:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1a0c:	bl	4e5c <flatcc_json_parser_symbol_part>
    1a10:	str	r1, [fp, #-52]	; 0xffffffcc
    1a14:	str	r0, [fp, #-56]	; 0xffffffc8
    1a18:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a1c:	and	r0, r0, #-16777216	; 0xff000000
    1a20:	teq	r0, #2030043136	; 0x79000000
    1a24:	bne	1bdc <MyGame_Example_Monster_parse_json_table+0x904>
    1a28:	b	1a2c <MyGame_Example_Monster_parse_json_table+0x754>
    1a2c:	ldr	r0, [fp, #-16]
    1a30:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a34:	str	r1, [fp, #-48]	; 0xffffffd0
    1a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a3c:	movw	r3, #1
    1a40:	bl	4e94 <flatcc_json_parser_match_symbol>
    1a44:	str	r0, [fp, #-20]	; 0xffffffec
    1a48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a50:	cmp	r0, r1
    1a54:	beq	1bc4 <MyGame_Example_Monster_parse_json_table+0x8ec>
    1a58:	ldr	r0, [fp, #-16]
    1a5c:	ldr	r0, [r0]
    1a60:	movw	r1, #1
    1a64:	movw	r2, #1
    1a68:	uxth	r2, r2
    1a6c:	mvn	r3, #0
    1a70:	bl	0 <flatcc_builder_start_vector>
    1a74:	cmp	r0, #0
    1a78:	beq	1a80 <MyGame_Example_Monster_parse_json_table+0x7a8>
    1a7c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1a80:	ldr	r0, [fp, #-16]
    1a84:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a8c:	sub	r3, fp, #32
    1a90:	bl	6744 <flatcc_json_parser_array_start>
    1a94:	str	r0, [fp, #-20]	; 0xffffffec
    1a98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a9c:	cmp	r0, #0
    1aa0:	beq	1b74 <MyGame_Example_Monster_parse_json_table+0x89c>
    1aa4:	movw	r0, #0
    1aa8:	strb	r0, [fp, #-65]	; 0xffffffbf
    1aac:	ldr	r0, [fp, #-16]
    1ab0:	ldr	r0, [r0]
    1ab4:	movw	r1, #1
    1ab8:	bl	0 <flatcc_builder_extend_vector>
    1abc:	str	r0, [fp, #-36]	; 0xffffffdc
    1ac0:	movw	r1, #0
    1ac4:	cmp	r0, r1
    1ac8:	bne	1ad0 <MyGame_Example_Monster_parse_json_table+0x7f8>
    1acc:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1ad0:	ldr	r0, [fp, #-16]
    1ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
    1ad8:	str	r1, [fp, #-48]	; 0xffffffd0
    1adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ae0:	sub	r3, fp, #65	; 0x41
    1ae4:	bl	6828 <flatcc_json_parser_uint8>
    1ae8:	str	r0, [fp, #-20]	; 0xffffffec
    1aec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1af0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1af4:	cmp	r0, r1
    1af8:	bne	1b4c <MyGame_Example_Monster_parse_json_table+0x874>
    1afc:	ldr	r0, [fp, #-16]
    1b00:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b04:	str	r1, [fp, #-48]	; 0xffffffd0
    1b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b0c:	movw	r3, #0
    1b10:	movt	r3, #0
    1b14:	sub	ip, fp, #65	; 0x41
    1b18:	str	ip, [sp]
    1b1c:	bl	6904 <flatcc_json_parser_symbolic_uint8>
    1b20:	str	r0, [fp, #-20]	; 0xffffffec
    1b24:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b28:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1b2c:	cmp	r0, r1
    1b30:	beq	1b44 <MyGame_Example_Monster_parse_json_table+0x86c>
    1b34:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1b3c:	cmp	r0, r1
    1b40:	bne	1b48 <MyGame_Example_Monster_parse_json_table+0x870>
    1b44:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1b48:	b	1b4c <MyGame_Example_Monster_parse_json_table+0x874>
    1b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b50:	ldrb	r1, [fp, #-65]	; 0xffffffbf
    1b54:	bl	6b30 <flatbuffers_uint8_write_to_pe>
    1b58:	ldr	r0, [fp, #-16]
    1b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b64:	sub	r3, fp, #32
    1b68:	bl	6b5c <flatcc_json_parser_array_end>
    1b6c:	str	r0, [fp, #-20]	; 0xffffffec
    1b70:	b	1a98 <MyGame_Example_Monster_parse_json_table+0x7c0>
    1b74:	ldr	r0, [fp, #-16]
    1b78:	ldr	r0, [r0]
    1b7c:	bl	0 <flatcc_builder_end_vector>
    1b80:	str	r0, [fp, #-40]	; 0xffffffd8
    1b84:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1b88:	cmp	r0, #0
    1b8c:	beq	1bb0 <MyGame_Example_Monster_parse_json_table+0x8d8>
    1b90:	ldr	r0, [fp, #-16]
    1b94:	ldr	r0, [r0]
    1b98:	movw	r1, #5
    1b9c:	bl	0 <flatcc_builder_table_add_offset>
    1ba0:	str	r0, [fp, #-44]	; 0xffffffd4
    1ba4:	movw	r1, #0
    1ba8:	cmp	r0, r1
    1bac:	bne	1bb4 <MyGame_Example_Monster_parse_json_table+0x8dc>
    1bb0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1bbc:	str	r0, [r1]
    1bc0:	b	1bd8 <MyGame_Example_Monster_parse_json_table+0x900>
    1bc4:	ldr	r0, [fp, #-16]
    1bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1bd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1bd4:	str	r0, [fp, #-20]	; 0xffffffec
    1bd8:	b	1bf0 <MyGame_Example_Monster_parse_json_table+0x918>
    1bdc:	ldr	r0, [fp, #-16]
    1be0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1be4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1be8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1bec:	str	r0, [fp, #-20]	; 0xffffffec
    1bf0:	b	1d4c <MyGame_Example_Monster_parse_json_table+0xa74>
    1bf4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1bf8:	movw	r1, #28257	; 0x6e61
    1bfc:	movt	r1, #28001	; 0x6d61
    1c00:	teq	r0, r1
    1c04:	bne	1d34 <MyGame_Example_Monster_parse_json_table+0xa5c>
    1c08:	b	1c0c <MyGame_Example_Monster_parse_json_table+0x934>
    1c0c:	ldr	r0, [fp, #-16]
    1c10:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c14:	str	r1, [fp, #-48]	; 0xffffffd0
    1c18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c1c:	movw	r3, #4
    1c20:	bl	4e94 <flatcc_json_parser_match_symbol>
    1c24:	str	r0, [fp, #-20]	; 0xffffffec
    1c28:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c30:	cmp	r0, r1
    1c34:	beq	1d1c <MyGame_Example_Monster_parse_json_table+0xa44>
    1c38:	movw	r0, #0
    1c3c:	strh	r0, [fp, #-68]	; 0xffffffbc
    1c40:	ldr	r0, [fp, #-16]
    1c44:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c48:	str	r1, [fp, #-48]	; 0xffffffd0
    1c4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c50:	sub	r3, fp, #68	; 0x44
    1c54:	bl	6cc0 <flatcc_json_parser_int16>
    1c58:	str	r0, [fp, #-20]	; 0xffffffec
    1c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1c60:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c64:	cmp	r0, r1
    1c68:	bne	1cbc <MyGame_Example_Monster_parse_json_table+0x9e4>
    1c6c:	ldr	r0, [fp, #-16]
    1c70:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c74:	str	r1, [fp, #-48]	; 0xffffffd0
    1c78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c7c:	movw	r3, #0
    1c80:	movt	r3, #0
    1c84:	sub	ip, fp, #68	; 0x44
    1c88:	str	ip, [sp]
    1c8c:	bl	6d9c <flatcc_json_parser_symbolic_int16>
    1c90:	str	r0, [fp, #-20]	; 0xffffffec
    1c94:	ldr	r0, [fp, #-20]	; 0xffffffec
    1c98:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1c9c:	cmp	r0, r1
    1ca0:	beq	1cb4 <MyGame_Example_Monster_parse_json_table+0x9dc>
    1ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1cac:	cmp	r0, r1
    1cb0:	bne	1cb8 <MyGame_Example_Monster_parse_json_table+0x9e0>
    1cb4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1cb8:	b	1cbc <MyGame_Example_Monster_parse_json_table+0x9e4>
    1cbc:	ldrsh	r0, [fp, #-68]	; 0xffffffbc
    1cc0:	cmp	r0, #150	; 0x96
    1cc4:	bne	1cdc <MyGame_Example_Monster_parse_json_table+0xa04>
    1cc8:	ldr	r0, [fp, #-16]
    1ccc:	ldr	r0, [r0, #8]
    1cd0:	and	r0, r0, #2
    1cd4:	cmp	r0, #0
    1cd8:	beq	1d18 <MyGame_Example_Monster_parse_json_table+0xa40>
    1cdc:	ldr	r0, [fp, #-16]
    1ce0:	ldr	r0, [r0]
    1ce4:	movw	r1, #1
    1ce8:	movw	r2, #2
    1cec:	movw	r3, #2
    1cf0:	uxth	r3, r3
    1cf4:	bl	0 <flatcc_builder_table_add>
    1cf8:	str	r0, [fp, #-36]	; 0xffffffdc
    1cfc:	movw	r1, #0
    1d00:	cmp	r0, r1
    1d04:	bne	1d0c <MyGame_Example_Monster_parse_json_table+0xa34>
    1d08:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1d0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1d10:	ldrsh	r1, [fp, #-68]	; 0xffffffbc
    1d14:	bl	6fc8 <flatbuffers_int16_write_to_pe>
    1d18:	b	1d30 <MyGame_Example_Monster_parse_json_table+0xa58>
    1d1c:	ldr	r0, [fp, #-16]
    1d20:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1d2c:	str	r0, [fp, #-20]	; 0xffffffec
    1d30:	b	1d48 <MyGame_Example_Monster_parse_json_table+0xa70>
    1d34:	ldr	r0, [fp, #-16]
    1d38:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1d44:	str	r0, [fp, #-20]	; 0xffffffec
    1d48:	b	1d4c <MyGame_Example_Monster_parse_json_table+0xa74>
    1d4c:	b	1d50 <MyGame_Example_Monster_parse_json_table+0xa78>
    1d50:	b	1d54 <MyGame_Example_Monster_parse_json_table+0xa7c>
    1d54:	b	1d58 <MyGame_Example_Monster_parse_json_table+0xa80>
    1d58:	b	255c <MyGame_Example_Monster_parse_json_table+0x1284>
    1d5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1d60:	movw	r1, #29555	; 0x7373
    1d64:	movt	r1, #29797	; 0x7465
    1d68:	cmp	r0, r1
    1d6c:	bhi	20d4 <MyGame_Example_Monster_parse_json_table+0xdfc>
    1d70:	b	1d74 <MyGame_Example_Monster_parse_json_table+0xa9c>
    1d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1d78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1d7c:	movw	r2, #24429	; 0x5f6d
    1d80:	movt	r2, #28276	; 0x6e74
    1d84:	subs	r0, r2, r0
    1d88:	movw	r2, #29285	; 0x7265
    1d8c:	movt	r2, #28769	; 0x7061
    1d90:	sbcs	r1, r2, r1
    1d94:	str	r0, [sp, #100]	; 0x64
    1d98:	str	r1, [sp, #96]	; 0x60
    1d9c:	bcc	1e70 <MyGame_Example_Monster_parse_json_table+0xb98>
    1da0:	b	1da4 <MyGame_Example_Monster_parse_json_table+0xacc>
    1da4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1da8:	movw	r1, #28005	; 0x6d65
    1dac:	movt	r1, #28257	; 0x6e61
    1db0:	teq	r0, r1
    1db4:	bne	1e58 <MyGame_Example_Monster_parse_json_table+0xb80>
    1db8:	b	1dbc <MyGame_Example_Monster_parse_json_table+0xae4>
    1dbc:	ldr	r0, [fp, #-16]
    1dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1dc4:	str	r1, [fp, #-48]	; 0xffffffd0
    1dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1dcc:	movw	r3, #4
    1dd0:	bl	4e94 <flatcc_json_parser_match_symbol>
    1dd4:	str	r0, [fp, #-20]	; 0xffffffec
    1dd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1de0:	cmp	r0, r1
    1de4:	beq	1e40 <MyGame_Example_Monster_parse_json_table+0xb68>
    1de8:	ldr	r0, [fp, #-16]
    1dec:	ldr	r1, [fp, #-20]	; 0xffffffec
    1df0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1df4:	sub	r3, fp, #40	; 0x28
    1df8:	bl	0 <flatcc_json_parser_build_string>
    1dfc:	str	r0, [fp, #-20]	; 0xffffffec
    1e00:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1e04:	cmp	r0, #0
    1e08:	beq	1e2c <MyGame_Example_Monster_parse_json_table+0xb54>
    1e0c:	ldr	r0, [fp, #-16]
    1e10:	ldr	r0, [r0]
    1e14:	movw	r1, #3
    1e18:	bl	0 <flatcc_builder_table_add_offset>
    1e1c:	str	r0, [fp, #-44]	; 0xffffffd4
    1e20:	movw	r1, #0
    1e24:	cmp	r0, r1
    1e28:	bne	1e30 <MyGame_Example_Monster_parse_json_table+0xb58>
    1e2c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1e30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1e38:	str	r0, [r1]
    1e3c:	b	1e54 <MyGame_Example_Monster_parse_json_table+0xb7c>
    1e40:	ldr	r0, [fp, #-16]
    1e44:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e48:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1e50:	str	r0, [fp, #-20]	; 0xffffffec
    1e54:	b	1e6c <MyGame_Example_Monster_parse_json_table+0xb94>
    1e58:	ldr	r0, [fp, #-16]
    1e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1e68:	str	r0, [fp, #-20]	; 0xffffffec
    1e6c:	b	20d0 <MyGame_Example_Monster_parse_json_table+0xdf8>
    1e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1e74:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1e78:	movw	r2, #29285	; 0x7265
    1e7c:	movt	r2, #28769	; 0x7061
    1e80:	eor	r1, r1, r2
    1e84:	movw	r2, #24430	; 0x5f6e
    1e88:	movt	r2, #28276	; 0x6e74
    1e8c:	eor	r0, r0, r2
    1e90:	orr	r0, r0, r1
    1e94:	cmp	r0, #0
    1e98:	bne	2008 <MyGame_Example_Monster_parse_json_table+0xd30>
    1e9c:	b	1ea0 <MyGame_Example_Monster_parse_json_table+0xbc8>
    1ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ea4:	add	r0, r0, #8
    1ea8:	str	r0, [fp, #-20]	; 0xffffffec
    1eac:	ldr	r0, [fp, #-20]	; 0xffffffec
    1eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1eb4:	bl	4e5c <flatcc_json_parser_symbol_part>
    1eb8:	str	r1, [fp, #-52]	; 0xffffffcc
    1ebc:	str	r0, [fp, #-56]	; 0xffffffc8
    1ec0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1ec4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1ec8:	movw	lr, #25971	; 0x6573
    1ecc:	movt	lr, #24941	; 0x616d
    1ed0:	eor	r1, r1, lr
    1ed4:	movw	lr, #25445	; 0x6365
    1ed8:	movt	lr, #28769	; 0x7061
    1edc:	eor	r0, r0, lr
    1ee0:	orr	r0, r0, r1
    1ee4:	cmp	r0, #0
    1ee8:	bne	1ff0 <MyGame_Example_Monster_parse_json_table+0xd18>
    1eec:	b	1ef0 <MyGame_Example_Monster_parse_json_table+0xc18>
    1ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ef4:	add	r0, r0, #8
    1ef8:	str	r0, [fp, #-20]	; 0xffffffec
    1efc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1f00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f04:	bl	4e5c <flatcc_json_parser_symbol_part>
    1f08:	str	r1, [fp, #-52]	; 0xffffffcc
    1f0c:	str	r0, [fp, #-56]	; 0xffffffc8
    1f10:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1f14:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1f18:	and	r0, r0, #-16777216	; 0xff000000
    1f1c:	movw	lr, #25971	; 0x6573
    1f20:	movt	lr, #24436	; 0x5f74
    1f24:	eor	r1, r1, lr
    1f28:	eor	r0, r0, #1946157056	; 0x74000000
    1f2c:	orr	r0, r0, r1
    1f30:	cmp	r0, #0
    1f34:	bne	1fd8 <MyGame_Example_Monster_parse_json_table+0xd00>
    1f38:	b	1f3c <MyGame_Example_Monster_parse_json_table+0xc64>
    1f3c:	ldr	r0, [fp, #-16]
    1f40:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f44:	str	r1, [fp, #-48]	; 0xffffffd0
    1f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f4c:	movw	r3, #5
    1f50:	bl	4e94 <flatcc_json_parser_match_symbol>
    1f54:	str	r0, [fp, #-20]	; 0xffffffec
    1f58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f60:	cmp	r0, r1
    1f64:	beq	1fc0 <MyGame_Example_Monster_parse_json_table+0xce8>
    1f68:	ldr	r0, [fp, #-16]
    1f6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f74:	sub	r3, fp, #40	; 0x28
    1f78:	bl	6ff4 <MyGame_InParentNamespace_parse_json_table>
    1f7c:	str	r0, [fp, #-20]	; 0xffffffec
    1f80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1f84:	cmp	r0, #0
    1f88:	beq	1fac <MyGame_Example_Monster_parse_json_table+0xcd4>
    1f8c:	ldr	r0, [fp, #-16]
    1f90:	ldr	r0, [r0]
    1f94:	movw	r1, #34	; 0x22
    1f98:	bl	0 <flatcc_builder_table_add_offset>
    1f9c:	str	r0, [fp, #-44]	; 0xffffffd4
    1fa0:	movw	r1, #0
    1fa4:	cmp	r0, r1
    1fa8:	bne	1fb0 <MyGame_Example_Monster_parse_json_table+0xcd8>
    1fac:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    1fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1fb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1fb8:	str	r0, [r1]
    1fbc:	b	1fd4 <MyGame_Example_Monster_parse_json_table+0xcfc>
    1fc0:	ldr	r0, [fp, #-16]
    1fc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1fcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1fd0:	str	r0, [fp, #-20]	; 0xffffffec
    1fd4:	b	1fec <MyGame_Example_Monster_parse_json_table+0xd14>
    1fd8:	ldr	r0, [fp, #-16]
    1fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fe0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1fe4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    1fe8:	str	r0, [fp, #-20]	; 0xffffffec
    1fec:	b	2004 <MyGame_Example_Monster_parse_json_table+0xd2c>
    1ff0:	ldr	r0, [fp, #-16]
    1ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
    1ff8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ffc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2000:	str	r0, [fp, #-20]	; 0xffffffec
    2004:	b	20cc <MyGame_Example_Monster_parse_json_table+0xdf4>
    2008:	ldr	r0, [fp, #-52]	; 0xffffffcc
    200c:	bic	r0, r0, #255	; 0xff
    2010:	movw	r1, #29440	; 0x7300
    2014:	movt	r1, #28783	; 0x706f
    2018:	teq	r0, r1
    201c:	bne	20b4 <MyGame_Example_Monster_parse_json_table+0xddc>
    2020:	b	2024 <MyGame_Example_Monster_parse_json_table+0xd4c>
    2024:	ldr	r0, [fp, #-16]
    2028:	ldr	r1, [fp, #-20]	; 0xffffffec
    202c:	str	r1, [fp, #-48]	; 0xffffffd0
    2030:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2034:	movw	r3, #3
    2038:	bl	4e94 <flatcc_json_parser_match_symbol>
    203c:	str	r0, [fp, #-20]	; 0xffffffec
    2040:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2044:	ldr	r1, [fp, #-20]	; 0xffffffec
    2048:	cmp	r0, r1
    204c:	beq	209c <MyGame_Example_Monster_parse_json_table+0xdc4>
    2050:	ldr	r0, [fp, #-16]
    2054:	ldr	r0, [r0]
    2058:	movw	r1, #0
    205c:	movw	r2, #32
    2060:	movw	r3, #16
    2064:	uxth	r3, r3
    2068:	bl	0 <flatcc_builder_table_add>
    206c:	str	r0, [fp, #-36]	; 0xffffffdc
    2070:	movw	r1, #0
    2074:	cmp	r0, r1
    2078:	bne	2080 <MyGame_Example_Monster_parse_json_table+0xda8>
    207c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2080:	ldr	r0, [fp, #-16]
    2084:	ldr	r1, [fp, #-20]	; 0xffffffec
    2088:	ldr	r2, [fp, #-24]	; 0xffffffe8
    208c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2090:	bl	7100 <MyGame_Example_Vec3_parse_json_struct_inline>
    2094:	str	r0, [fp, #-20]	; 0xffffffec
    2098:	b	20b0 <MyGame_Example_Monster_parse_json_table+0xdd8>
    209c:	ldr	r0, [fp, #-16]
    20a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    20a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    20a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    20ac:	str	r0, [fp, #-20]	; 0xffffffec
    20b0:	b	20c8 <MyGame_Example_Monster_parse_json_table+0xdf0>
    20b4:	ldr	r0, [fp, #-16]
    20b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    20bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    20c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    20c4:	str	r0, [fp, #-20]	; 0xffffffec
    20c8:	b	20cc <MyGame_Example_Monster_parse_json_table+0xdf4>
    20cc:	b	20d0 <MyGame_Example_Monster_parse_json_table+0xdf8>
    20d0:	b	2558 <MyGame_Example_Monster_parse_json_table+0x1280>
    20d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    20d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    20dc:	and	r0, r0, #-16777216	; 0xff000000
    20e0:	movw	r2, #29556	; 0x7374
    20e4:	movt	r2, #29797	; 0x7465
    20e8:	eor	r1, r1, r2
    20ec:	eor	r0, r0, #872415232	; 0x34000000
    20f0:	orr	r0, r0, r1
    20f4:	cmp	r0, #0
    20f8:	bne	2228 <MyGame_Example_Monster_parse_json_table+0xf50>
    20fc:	b	2100 <MyGame_Example_Monster_parse_json_table+0xe28>
    2100:	ldr	r0, [fp, #-16]
    2104:	ldr	r1, [fp, #-20]	; 0xffffffec
    2108:	str	r1, [fp, #-48]	; 0xffffffd0
    210c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2110:	movw	r3, #5
    2114:	bl	4e94 <flatcc_json_parser_match_symbol>
    2118:	str	r0, [fp, #-20]	; 0xffffffec
    211c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2120:	ldr	r1, [fp, #-20]	; 0xffffffec
    2124:	cmp	r0, r1
    2128:	beq	2220 <MyGame_Example_Monster_parse_json_table+0xf48>
    212c:	ldr	r3, [pc, #4044]	; 3100 <MyGame_Example_Monster_parse_json_table+0x1e28>
    2130:	ldr	r0, [fp, #-16]
    2134:	ldr	r0, [r0]
    2138:	movw	r1, #4
    213c:	movw	r2, #2
    2140:	uxth	r2, r2
    2144:	bl	0 <flatcc_builder_start_vector>
    2148:	cmp	r0, #0
    214c:	beq	2154 <MyGame_Example_Monster_parse_json_table+0xe7c>
    2150:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2154:	ldr	r0, [fp, #-16]
    2158:	ldr	r1, [fp, #-20]	; 0xffffffec
    215c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2160:	sub	r3, fp, #32
    2164:	bl	6744 <flatcc_json_parser_array_start>
    2168:	str	r0, [fp, #-20]	; 0xffffffec
    216c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2170:	cmp	r0, #0
    2174:	beq	21d0 <MyGame_Example_Monster_parse_json_table+0xef8>
    2178:	ldr	r0, [fp, #-16]
    217c:	ldr	r0, [r0]
    2180:	movw	r1, #1
    2184:	bl	0 <flatcc_builder_extend_vector>
    2188:	str	r0, [fp, #-36]	; 0xffffffdc
    218c:	movw	r1, #0
    2190:	cmp	r0, r1
    2194:	bne	219c <MyGame_Example_Monster_parse_json_table+0xec4>
    2198:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    219c:	ldr	r0, [fp, #-16]
    21a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    21a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    21a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    21ac:	bl	7820 <MyGame_Example_Test_parse_json_struct_inline>
    21b0:	str	r0, [fp, #-20]	; 0xffffffec
    21b4:	ldr	r0, [fp, #-16]
    21b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    21bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    21c0:	sub	r3, fp, #32
    21c4:	bl	6b5c <flatcc_json_parser_array_end>
    21c8:	str	r0, [fp, #-20]	; 0xffffffec
    21cc:	b	216c <MyGame_Example_Monster_parse_json_table+0xe94>
    21d0:	ldr	r0, [fp, #-16]
    21d4:	ldr	r0, [r0]
    21d8:	bl	0 <flatcc_builder_end_vector>
    21dc:	str	r0, [fp, #-40]	; 0xffffffd8
    21e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    21e4:	cmp	r0, #0
    21e8:	beq	220c <MyGame_Example_Monster_parse_json_table+0xf34>
    21ec:	ldr	r0, [fp, #-16]
    21f0:	ldr	r0, [r0]
    21f4:	movw	r1, #9
    21f8:	bl	0 <flatcc_builder_table_add_offset>
    21fc:	str	r0, [fp, #-44]	; 0xffffffd4
    2200:	movw	r1, #0
    2204:	cmp	r0, r1
    2208:	bne	2210 <MyGame_Example_Monster_parse_json_table+0xf38>
    220c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2210:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2214:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2218:	str	r0, [r1]
    221c:	b	2224 <MyGame_Example_Monster_parse_json_table+0xf4c>
    2220:	b	22c8 <MyGame_Example_Monster_parse_json_table+0xff0>
    2224:	b	22c4 <MyGame_Example_Monster_parse_json_table+0xfec>
    2228:	ldr	r0, [fp, #-52]	; 0xffffffcc
    222c:	movw	r1, #29556	; 0x7374
    2230:	movt	r1, #29797	; 0x7465
    2234:	teq	r0, r1
    2238:	bne	22bc <MyGame_Example_Monster_parse_json_table+0xfe4>
    223c:	b	2240 <MyGame_Example_Monster_parse_json_table+0xf68>
    2240:	ldr	r0, [fp, #-16]
    2244:	ldr	r1, [fp, #-20]	; 0xffffffec
    2248:	str	r1, [fp, #-48]	; 0xffffffd0
    224c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2250:	movw	r3, #4
    2254:	bl	4e94 <flatcc_json_parser_match_symbol>
    2258:	str	r0, [fp, #-20]	; 0xffffffec
    225c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2260:	ldr	r1, [fp, #-20]	; 0xffffffec
    2264:	cmp	r0, r1
    2268:	beq	22b4 <MyGame_Example_Monster_parse_json_table+0xfdc>
    226c:	ldr	r0, [fp, #-16]
    2270:	ldr	r1, [fp, #-20]	; 0xffffffec
    2274:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2278:	ldr	r3, [fp, #-60]	; 0xffffffc4
    227c:	movw	ip, #0
    2280:	str	r3, [sp, #92]	; 0x5c
    2284:	mov	r3, ip
    2288:	movw	ip, #8
    228c:	uxth	ip, ip
    2290:	str	ip, [sp]
    2294:	ldr	ip, [sp, #92]	; 0x5c
    2298:	str	ip, [sp, #4]
    229c:	movw	lr, #0
    22a0:	movt	lr, #0
    22a4:	str	lr, [sp, #8]
    22a8:	bl	0 <flatcc_json_parser_union>
    22ac:	str	r0, [fp, #-20]	; 0xffffffec
    22b0:	b	22b8 <MyGame_Example_Monster_parse_json_table+0xfe0>
    22b4:	b	22c8 <MyGame_Example_Monster_parse_json_table+0xff0>
    22b8:	b	22c0 <MyGame_Example_Monster_parse_json_table+0xfe8>
    22bc:	b	22c8 <MyGame_Example_Monster_parse_json_table+0xff0>
    22c0:	b	22c4 <MyGame_Example_Monster_parse_json_table+0xfec>
    22c4:	b	2554 <MyGame_Example_Monster_parse_json_table+0x127c>
    22c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    22cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    22d0:	and	r0, r0, #-16777216	; 0xff000000
    22d4:	movw	r2, #29556	; 0x7374
    22d8:	movt	r2, #29797	; 0x7465
    22dc:	eor	r1, r1, r2
    22e0:	eor	r0, r0, #889192448	; 0x35000000
    22e4:	orr	r0, r0, r1
    22e8:	cmp	r0, #0
    22ec:	bne	241c <MyGame_Example_Monster_parse_json_table+0x1144>
    22f0:	b	22f4 <MyGame_Example_Monster_parse_json_table+0x101c>
    22f4:	ldr	r0, [fp, #-16]
    22f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    22fc:	str	r1, [fp, #-48]	; 0xffffffd0
    2300:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2304:	movw	r3, #5
    2308:	bl	4e94 <flatcc_json_parser_match_symbol>
    230c:	str	r0, [fp, #-20]	; 0xffffffec
    2310:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2314:	ldr	r1, [fp, #-20]	; 0xffffffec
    2318:	cmp	r0, r1
    231c:	beq	2414 <MyGame_Example_Monster_parse_json_table+0x113c>
    2320:	ldr	r3, [pc, #3544]	; 3100 <MyGame_Example_Monster_parse_json_table+0x1e28>
    2324:	ldr	r0, [fp, #-16]
    2328:	ldr	r0, [r0]
    232c:	movw	r1, #4
    2330:	movw	r2, #2
    2334:	uxth	r2, r2
    2338:	bl	0 <flatcc_builder_start_vector>
    233c:	cmp	r0, #0
    2340:	beq	2348 <MyGame_Example_Monster_parse_json_table+0x1070>
    2344:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2348:	ldr	r0, [fp, #-16]
    234c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2350:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2354:	sub	r3, fp, #32
    2358:	bl	6744 <flatcc_json_parser_array_start>
    235c:	str	r0, [fp, #-20]	; 0xffffffec
    2360:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2364:	cmp	r0, #0
    2368:	beq	23c4 <MyGame_Example_Monster_parse_json_table+0x10ec>
    236c:	ldr	r0, [fp, #-16]
    2370:	ldr	r0, [r0]
    2374:	movw	r1, #1
    2378:	bl	0 <flatcc_builder_extend_vector>
    237c:	str	r0, [fp, #-36]	; 0xffffffdc
    2380:	movw	r1, #0
    2384:	cmp	r0, r1
    2388:	bne	2390 <MyGame_Example_Monster_parse_json_table+0x10b8>
    238c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2390:	ldr	r0, [fp, #-16]
    2394:	ldr	r1, [fp, #-20]	; 0xffffffec
    2398:	ldr	r2, [fp, #-24]	; 0xffffffe8
    239c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    23a0:	bl	7820 <MyGame_Example_Test_parse_json_struct_inline>
    23a4:	str	r0, [fp, #-20]	; 0xffffffec
    23a8:	ldr	r0, [fp, #-16]
    23ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    23b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    23b4:	sub	r3, fp, #32
    23b8:	bl	6b5c <flatcc_json_parser_array_end>
    23bc:	str	r0, [fp, #-20]	; 0xffffffec
    23c0:	b	2360 <MyGame_Example_Monster_parse_json_table+0x1088>
    23c4:	ldr	r0, [fp, #-16]
    23c8:	ldr	r0, [r0]
    23cc:	bl	0 <flatcc_builder_end_vector>
    23d0:	str	r0, [fp, #-40]	; 0xffffffd8
    23d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    23d8:	cmp	r0, #0
    23dc:	beq	2400 <MyGame_Example_Monster_parse_json_table+0x1128>
    23e0:	ldr	r0, [fp, #-16]
    23e4:	ldr	r0, [r0]
    23e8:	movw	r1, #31
    23ec:	bl	0 <flatcc_builder_table_add_offset>
    23f0:	str	r0, [fp, #-44]	; 0xffffffd4
    23f4:	movw	r1, #0
    23f8:	cmp	r0, r1
    23fc:	bne	2404 <MyGame_Example_Monster_parse_json_table+0x112c>
    2400:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2404:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2408:	ldr	r1, [fp, #-44]	; 0xffffffd4
    240c:	str	r0, [r1]
    2410:	b	2418 <MyGame_Example_Monster_parse_json_table+0x1140>
    2414:	b	2424 <MyGame_Example_Monster_parse_json_table+0x114c>
    2418:	b	2420 <MyGame_Example_Monster_parse_json_table+0x1148>
    241c:	b	2424 <MyGame_Example_Monster_parse_json_table+0x114c>
    2420:	b	2550 <MyGame_Example_Monster_parse_json_table+0x1278>
    2424:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2428:	ldr	r1, [fp, #-52]	; 0xffffffcc
    242c:	movw	r2, #29556	; 0x7374
    2430:	movt	r2, #29797	; 0x7465
    2434:	eor	r1, r1, r2
    2438:	movw	r2, #31088	; 0x7970
    243c:	movt	r2, #24436	; 0x5f74
    2440:	eor	r0, r0, r2
    2444:	orr	r0, r0, r1
    2448:	cmp	r0, #0
    244c:	bne	2538 <MyGame_Example_Monster_parse_json_table+0x1260>
    2450:	b	2454 <MyGame_Example_Monster_parse_json_table+0x117c>
    2454:	ldr	r0, [fp, #-20]	; 0xffffffec
    2458:	add	r0, r0, #8
    245c:	str	r0, [fp, #-20]	; 0xffffffec
    2460:	ldr	r0, [fp, #-20]	; 0xffffffec
    2464:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2468:	bl	4e5c <flatcc_json_parser_symbol_part>
    246c:	str	r1, [fp, #-52]	; 0xffffffcc
    2470:	str	r0, [fp, #-56]	; 0xffffffc8
    2474:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2478:	and	r0, r0, #-16777216	; 0xff000000
    247c:	teq	r0, #1694498816	; 0x65000000
    2480:	bne	2520 <MyGame_Example_Monster_parse_json_table+0x1248>
    2484:	b	2488 <MyGame_Example_Monster_parse_json_table+0x11b0>
    2488:	ldr	r0, [fp, #-16]
    248c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2490:	str	r1, [fp, #-48]	; 0xffffffd0
    2494:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2498:	movw	r3, #1
    249c:	bl	4e94 <flatcc_json_parser_match_symbol>
    24a0:	str	r0, [fp, #-20]	; 0xffffffec
    24a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    24a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    24ac:	cmp	r0, r1
    24b0:	beq	2508 <MyGame_Example_Monster_parse_json_table+0x1230>
    24b4:	ldr	r0, [fp, #-16]
    24b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    24bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    24c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    24c4:	movw	ip, #0
    24c8:	str	r3, [sp, #88]	; 0x58
    24cc:	mov	r3, ip
    24d0:	movw	ip, #8
    24d4:	uxth	ip, ip
    24d8:	str	ip, [sp]
    24dc:	ldr	ip, [sp, #88]	; 0x58
    24e0:	str	ip, [sp, #4]
    24e4:	movw	lr, #0
    24e8:	movt	lr, #0
    24ec:	str	lr, [sp, #8]
    24f0:	movw	lr, #0
    24f4:	movt	lr, #0
    24f8:	str	lr, [sp, #12]
    24fc:	bl	0 <flatcc_json_parser_union_type>
    2500:	str	r0, [fp, #-20]	; 0xffffffec
    2504:	b	251c <MyGame_Example_Monster_parse_json_table+0x1244>
    2508:	ldr	r0, [fp, #-16]
    250c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2510:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2514:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2518:	str	r0, [fp, #-20]	; 0xffffffec
    251c:	b	2534 <MyGame_Example_Monster_parse_json_table+0x125c>
    2520:	ldr	r0, [fp, #-16]
    2524:	ldr	r1, [fp, #-20]	; 0xffffffec
    2528:	ldr	r2, [fp, #-24]	; 0xffffffe8
    252c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2530:	str	r0, [fp, #-20]	; 0xffffffec
    2534:	b	254c <MyGame_Example_Monster_parse_json_table+0x1274>
    2538:	ldr	r0, [fp, #-16]
    253c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2540:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2544:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2548:	str	r0, [fp, #-20]	; 0xffffffec
    254c:	b	2550 <MyGame_Example_Monster_parse_json_table+0x1278>
    2550:	b	2554 <MyGame_Example_Monster_parse_json_table+0x127c>
    2554:	b	2558 <MyGame_Example_Monster_parse_json_table+0x1280>
    2558:	b	255c <MyGame_Example_Monster_parse_json_table+0x1284>
    255c:	b	4bec <MyGame_Example_Monster_parse_json_table+0x3914>
    2560:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2564:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2568:	movw	r2, #65535	; 0xffff
    256c:	movt	r2, #26162	; 0x6632
    2570:	subs	r0, r2, r0
    2574:	movw	r2, #29556	; 0x7374
    2578:	movt	r2, #29797	; 0x7465
    257c:	sbcs	r1, r2, r1
    2580:	str	r0, [sp, #84]	; 0x54
    2584:	str	r1, [sp, #80]	; 0x50
    2588:	bcc	35e4 <MyGame_Example_Monster_parse_json_table+0x230c>
    258c:	b	2590 <MyGame_Example_Monster_parse_json_table+0x12b8>
    2590:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2594:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2598:	movw	r2, #29556	; 0x7374
    259c:	movt	r2, #29797	; 0x7465
    25a0:	eor	r1, r1, r2
    25a4:	movw	r2, #29281	; 0x7261
    25a8:	movt	r2, #24946	; 0x6172
    25ac:	eor	r0, r0, r2
    25b0:	orr	r0, r0, r1
    25b4:	cmp	r0, #0
    25b8:	bne	2ed4 <MyGame_Example_Monster_parse_json_table+0x1bfc>
    25bc:	b	25c0 <MyGame_Example_Monster_parse_json_table+0x12e8>
    25c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    25c4:	add	r0, r0, #8
    25c8:	str	r0, [fp, #-20]	; 0xffffffec
    25cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    25d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    25d4:	bl	4e5c <flatcc_json_parser_symbol_part>
    25d8:	str	r1, [fp, #-52]	; 0xffffffcc
    25dc:	str	r0, [fp, #-56]	; 0xffffffc8
    25e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    25e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    25e8:	movw	lr, #26989	; 0x696d
    25ec:	movt	lr, #29810	; 0x7472
    25f0:	subs	r0, lr, r0
    25f4:	movw	lr, #26227	; 0x6673
    25f8:	movt	lr, #31087	; 0x796f
    25fc:	sbcs	r1, lr, r1
    2600:	str	r0, [sp, #76]	; 0x4c
    2604:	str	r1, [sp, #72]	; 0x48
    2608:	bcc	29dc <MyGame_Example_Monster_parse_json_table+0x1704>
    260c:	b	2610 <MyGame_Example_Monster_parse_json_table+0x1338>
    2610:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2614:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2618:	movw	r2, #26210	; 0x6662
    261c:	movt	r2, #31087	; 0x796f
    2620:	eor	r1, r1, r2
    2624:	movw	r2, #27763	; 0x6c73
    2628:	movt	r2, #28527	; 0x6f6f
    262c:	eor	r0, r0, r2
    2630:	orr	r0, r0, r1
    2634:	cmp	r0, #0
    2638:	bne	27e0 <MyGame_Example_Monster_parse_json_table+0x1508>
    263c:	b	2640 <MyGame_Example_Monster_parse_json_table+0x1368>
    2640:	ldr	r0, [fp, #-16]
    2644:	ldr	r1, [fp, #-20]	; 0xffffffec
    2648:	str	r1, [fp, #-48]	; 0xffffffd0
    264c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2650:	movw	r3, #8
    2654:	bl	4e94 <flatcc_json_parser_match_symbol>
    2658:	str	r0, [fp, #-20]	; 0xffffffec
    265c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2660:	ldr	r1, [fp, #-20]	; 0xffffffec
    2664:	cmp	r0, r1
    2668:	beq	27d8 <MyGame_Example_Monster_parse_json_table+0x1500>
    266c:	ldr	r0, [fp, #-16]
    2670:	ldr	r0, [r0]
    2674:	movw	r1, #1
    2678:	movw	r2, #1
    267c:	uxth	r2, r2
    2680:	mvn	r3, #0
    2684:	bl	0 <flatcc_builder_start_vector>
    2688:	cmp	r0, #0
    268c:	beq	2694 <MyGame_Example_Monster_parse_json_table+0x13bc>
    2690:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2694:	ldr	r0, [fp, #-16]
    2698:	ldr	r1, [fp, #-20]	; 0xffffffec
    269c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    26a0:	sub	r3, fp, #32
    26a4:	bl	6744 <flatcc_json_parser_array_start>
    26a8:	str	r0, [fp, #-20]	; 0xffffffec
    26ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    26b0:	cmp	r0, #0
    26b4:	beq	2788 <MyGame_Example_Monster_parse_json_table+0x14b0>
    26b8:	movw	r0, #0
    26bc:	strb	r0, [fp, #-69]	; 0xffffffbb
    26c0:	ldr	r0, [fp, #-16]
    26c4:	ldr	r0, [r0]
    26c8:	movw	r1, #1
    26cc:	bl	0 <flatcc_builder_extend_vector>
    26d0:	str	r0, [fp, #-36]	; 0xffffffdc
    26d4:	movw	r1, #0
    26d8:	cmp	r0, r1
    26dc:	bne	26e4 <MyGame_Example_Monster_parse_json_table+0x140c>
    26e0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    26e4:	ldr	r0, [fp, #-16]
    26e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    26ec:	str	r1, [fp, #-48]	; 0xffffffd0
    26f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    26f4:	sub	r3, fp, #69	; 0x45
    26f8:	bl	80f4 <flatcc_json_parser_bool>
    26fc:	str	r0, [fp, #-20]	; 0xffffffec
    2700:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2704:	ldr	r1, [fp, #-20]	; 0xffffffec
    2708:	cmp	r0, r1
    270c:	bne	2760 <MyGame_Example_Monster_parse_json_table+0x1488>
    2710:	ldr	r0, [fp, #-16]
    2714:	ldr	r1, [fp, #-20]	; 0xffffffec
    2718:	str	r1, [fp, #-48]	; 0xffffffd0
    271c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2720:	movw	r3, #0
    2724:	movt	r3, #0
    2728:	sub	ip, fp, #69	; 0x45
    272c:	str	ip, [sp]
    2730:	bl	8218 <flatcc_json_parser_symbolic_bool>
    2734:	str	r0, [fp, #-20]	; 0xffffffec
    2738:	ldr	r0, [fp, #-20]	; 0xffffffec
    273c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2740:	cmp	r0, r1
    2744:	beq	2758 <MyGame_Example_Monster_parse_json_table+0x1480>
    2748:	ldr	r0, [fp, #-20]	; 0xffffffec
    274c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2750:	cmp	r0, r1
    2754:	bne	275c <MyGame_Example_Monster_parse_json_table+0x1484>
    2758:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    275c:	b	2760 <MyGame_Example_Monster_parse_json_table+0x1488>
    2760:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2764:	ldrb	r1, [fp, #-69]	; 0xffffffbb
    2768:	bl	8444 <flatbuffers_bool_write_to_pe>
    276c:	ldr	r0, [fp, #-16]
    2770:	ldr	r1, [fp, #-20]	; 0xffffffec
    2774:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2778:	sub	r3, fp, #32
    277c:	bl	6b5c <flatcc_json_parser_array_end>
    2780:	str	r0, [fp, #-20]	; 0xffffffec
    2784:	b	26ac <MyGame_Example_Monster_parse_json_table+0x13d4>
    2788:	ldr	r0, [fp, #-16]
    278c:	ldr	r0, [r0]
    2790:	bl	0 <flatcc_builder_end_vector>
    2794:	str	r0, [fp, #-40]	; 0xffffffd8
    2798:	ldr	r0, [fp, #-40]	; 0xffffffd8
    279c:	cmp	r0, #0
    27a0:	beq	27c4 <MyGame_Example_Monster_parse_json_table+0x14ec>
    27a4:	ldr	r0, [fp, #-16]
    27a8:	ldr	r0, [r0]
    27ac:	movw	r1, #24
    27b0:	bl	0 <flatcc_builder_table_add_offset>
    27b4:	str	r0, [fp, #-44]	; 0xffffffd4
    27b8:	movw	r1, #0
    27bc:	cmp	r0, r1
    27c0:	bne	27c8 <MyGame_Example_Monster_parse_json_table+0x14f0>
    27c4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    27c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    27cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    27d0:	str	r0, [r1]
    27d4:	b	27dc <MyGame_Example_Monster_parse_json_table+0x1504>
    27d8:	b	27e8 <MyGame_Example_Monster_parse_json_table+0x1510>
    27dc:	b	27e4 <MyGame_Example_Monster_parse_json_table+0x150c>
    27e0:	b	27e8 <MyGame_Example_Monster_parse_json_table+0x1510>
    27e4:	b	29d8 <MyGame_Example_Monster_parse_json_table+0x1700>
    27e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    27ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    27f0:	movw	r2, #26227	; 0x6673
    27f4:	movt	r2, #31087	; 0x796f
    27f8:	eor	r1, r1, r2
    27fc:	movw	r2, #29797	; 0x7465
    2800:	movt	r2, #28530	; 0x6f72
    2804:	eor	r0, r0, r2
    2808:	orr	r0, r0, r1
    280c:	cmp	r0, #0
    2810:	bne	29c0 <MyGame_Example_Monster_parse_json_table+0x16e8>
    2814:	b	2818 <MyGame_Example_Monster_parse_json_table+0x1540>
    2818:	ldr	r0, [fp, #-20]	; 0xffffffec
    281c:	add	r0, r0, #8
    2820:	str	r0, [fp, #-20]	; 0xffffffec
    2824:	ldr	r0, [fp, #-20]	; 0xffffffec
    2828:	ldr	r1, [fp, #-24]	; 0xffffffe8
    282c:	bl	4e5c <flatcc_json_parser_symbol_part>
    2830:	str	r1, [fp, #-52]	; 0xffffffcc
    2834:	str	r0, [fp, #-56]	; 0xffffffc8
    2838:	ldr	r0, [fp, #-56]	; 0xffffffc8
    283c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2840:	movw	lr, #29556	; 0x7374
    2844:	movt	lr, #100	; 0x64
    2848:	eor	lr, lr, r1, lsr #8
    284c:	lsr	r0, r0, #8
    2850:	orr	r0, r0, r1, lsl #24
    2854:	movw	r1, #25460	; 0x6374
    2858:	movt	r1, #29301	; 0x7275
    285c:	eor	r0, r0, r1
    2860:	orr	r0, r0, lr
    2864:	cmp	r0, #0
    2868:	bne	29a8 <MyGame_Example_Monster_parse_json_table+0x16d0>
    286c:	b	2870 <MyGame_Example_Monster_parse_json_table+0x1598>
    2870:	ldr	r0, [fp, #-16]
    2874:	ldr	r1, [fp, #-20]	; 0xffffffec
    2878:	str	r1, [fp, #-48]	; 0xffffffd0
    287c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2880:	movw	r3, #7
    2884:	bl	4e94 <flatcc_json_parser_match_symbol>
    2888:	str	r0, [fp, #-20]	; 0xffffffec
    288c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2890:	ldr	r1, [fp, #-20]	; 0xffffffec
    2894:	cmp	r0, r1
    2898:	beq	2990 <MyGame_Example_Monster_parse_json_table+0x16b8>
    289c:	ldr	r3, [pc, #3996]	; 3840 <MyGame_Example_Monster_parse_json_table+0x2568>
    28a0:	ldr	r0, [fp, #-16]
    28a4:	ldr	r0, [r0]
    28a8:	movw	r1, #8
    28ac:	movw	r2, #4
    28b0:	uxth	r2, r2
    28b4:	bl	0 <flatcc_builder_start_vector>
    28b8:	cmp	r0, #0
    28bc:	beq	28c4 <MyGame_Example_Monster_parse_json_table+0x15ec>
    28c0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    28c4:	ldr	r0, [fp, #-16]
    28c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    28cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28d0:	sub	r3, fp, #32
    28d4:	bl	6744 <flatcc_json_parser_array_start>
    28d8:	str	r0, [fp, #-20]	; 0xffffffec
    28dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    28e0:	cmp	r0, #0
    28e4:	beq	2940 <MyGame_Example_Monster_parse_json_table+0x1668>
    28e8:	ldr	r0, [fp, #-16]
    28ec:	ldr	r0, [r0]
    28f0:	movw	r1, #1
    28f4:	bl	0 <flatcc_builder_extend_vector>
    28f8:	str	r0, [fp, #-36]	; 0xffffffdc
    28fc:	movw	r1, #0
    2900:	cmp	r0, r1
    2904:	bne	290c <MyGame_Example_Monster_parse_json_table+0x1634>
    2908:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    290c:	ldr	r0, [fp, #-16]
    2910:	ldr	r1, [fp, #-20]	; 0xffffffec
    2914:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2918:	ldr	r3, [fp, #-36]	; 0xffffffdc
    291c:	bl	8470 <MyGame_Example_Ability_parse_json_struct_inline>
    2920:	str	r0, [fp, #-20]	; 0xffffffec
    2924:	ldr	r0, [fp, #-16]
    2928:	ldr	r1, [fp, #-20]	; 0xffffffec
    292c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2930:	sub	r3, fp, #32
    2934:	bl	6b5c <flatcc_json_parser_array_end>
    2938:	str	r0, [fp, #-20]	; 0xffffffec
    293c:	b	28dc <MyGame_Example_Monster_parse_json_table+0x1604>
    2940:	ldr	r0, [fp, #-16]
    2944:	ldr	r0, [r0]
    2948:	bl	0 <flatcc_builder_end_vector>
    294c:	str	r0, [fp, #-40]	; 0xffffffd8
    2950:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2954:	cmp	r0, #0
    2958:	beq	297c <MyGame_Example_Monster_parse_json_table+0x16a4>
    295c:	ldr	r0, [fp, #-16]
    2960:	ldr	r0, [r0]
    2964:	movw	r1, #29
    2968:	bl	0 <flatcc_builder_table_add_offset>
    296c:	str	r0, [fp, #-44]	; 0xffffffd4
    2970:	movw	r1, #0
    2974:	cmp	r0, r1
    2978:	bne	2980 <MyGame_Example_Monster_parse_json_table+0x16a8>
    297c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2980:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2984:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2988:	str	r0, [r1]
    298c:	b	29a4 <MyGame_Example_Monster_parse_json_table+0x16cc>
    2990:	ldr	r0, [fp, #-16]
    2994:	ldr	r1, [fp, #-20]	; 0xffffffec
    2998:	ldr	r2, [fp, #-24]	; 0xffffffe8
    299c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    29a0:	str	r0, [fp, #-20]	; 0xffffffec
    29a4:	b	29bc <MyGame_Example_Monster_parse_json_table+0x16e4>
    29a8:	ldr	r0, [fp, #-16]
    29ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    29b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    29b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    29b8:	str	r0, [fp, #-20]	; 0xffffffec
    29bc:	b	29d4 <MyGame_Example_Monster_parse_json_table+0x16fc>
    29c0:	ldr	r0, [fp, #-16]
    29c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    29c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    29cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    29d0:	str	r0, [fp, #-20]	; 0xffffffec
    29d4:	b	29d8 <MyGame_Example_Monster_parse_json_table+0x1700>
    29d8:	b	2ed0 <MyGame_Example_Monster_parse_json_table+0x1bf8>
    29dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    29e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29e4:	movw	r2, #26227	; 0x6673
    29e8:	movt	r2, #31087	; 0x796f
    29ec:	eor	r1, r1, r2
    29f0:	movw	r2, #26990	; 0x696e
    29f4:	movt	r2, #29810	; 0x7472
    29f8:	eor	r0, r0, r2
    29fc:	orr	r0, r0, r1
    2a00:	cmp	r0, #0
    2a04:	bne	2cf8 <MyGame_Example_Monster_parse_json_table+0x1a20>
    2a08:	b	2a0c <MyGame_Example_Monster_parse_json_table+0x1734>
    2a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a10:	add	r0, r0, #8
    2a14:	str	r0, [fp, #-20]	; 0xffffffec
    2a18:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2a20:	bl	4e5c <flatcc_json_parser_symbol_part>
    2a24:	str	r1, [fp, #-52]	; 0xffffffcc
    2a28:	str	r0, [fp, #-56]	; 0xffffffc8
    2a2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2a30:	bfc	r0, #0, #16
    2a34:	movw	r1, #0
    2a38:	movt	r1, #26418	; 0x6732
    2a3c:	teq	r0, r1
    2a40:	bne	2b88 <MyGame_Example_Monster_parse_json_table+0x18b0>
    2a44:	b	2a48 <MyGame_Example_Monster_parse_json_table+0x1770>
    2a48:	ldr	r0, [fp, #-16]
    2a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a50:	str	r1, [fp, #-48]	; 0xffffffd0
    2a54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a58:	movw	r3, #2
    2a5c:	bl	4e94 <flatcc_json_parser_match_symbol>
    2a60:	str	r0, [fp, #-20]	; 0xffffffec
    2a64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a68:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a6c:	cmp	r0, r1
    2a70:	beq	2b70 <MyGame_Example_Monster_parse_json_table+0x1898>
    2a74:	ldr	r0, [fp, #-16]
    2a78:	ldr	r0, [r0]
    2a7c:	bl	0 <flatcc_builder_start_offset_vector>
    2a80:	cmp	r0, #0
    2a84:	beq	2a8c <MyGame_Example_Monster_parse_json_table+0x17b4>
    2a88:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2a8c:	ldr	r0, [fp, #-16]
    2a90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a98:	sub	r3, fp, #32
    2a9c:	bl	6744 <flatcc_json_parser_array_start>
    2aa0:	str	r0, [fp, #-20]	; 0xffffffec
    2aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2aa8:	cmp	r0, #0
    2aac:	beq	2b20 <MyGame_Example_Monster_parse_json_table+0x1848>
    2ab0:	ldr	r0, [fp, #-16]
    2ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2abc:	sub	r3, fp, #40	; 0x28
    2ac0:	bl	0 <flatcc_json_parser_build_string>
    2ac4:	str	r0, [fp, #-20]	; 0xffffffec
    2ac8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2acc:	cmp	r0, #0
    2ad0:	beq	2af4 <MyGame_Example_Monster_parse_json_table+0x181c>
    2ad4:	ldr	r0, [fp, #-16]
    2ad8:	ldr	r0, [r0]
    2adc:	movw	r1, #1
    2ae0:	bl	0 <flatcc_builder_extend_offset_vector>
    2ae4:	str	r0, [fp, #-44]	; 0xffffffd4
    2ae8:	movw	r1, #0
    2aec:	cmp	r0, r1
    2af0:	bne	2af8 <MyGame_Example_Monster_parse_json_table+0x1820>
    2af4:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2afc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b00:	str	r0, [r1]
    2b04:	ldr	r0, [fp, #-16]
    2b08:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b10:	sub	r3, fp, #32
    2b14:	bl	6b5c <flatcc_json_parser_array_end>
    2b18:	str	r0, [fp, #-20]	; 0xffffffec
    2b1c:	b	2aa4 <MyGame_Example_Monster_parse_json_table+0x17cc>
    2b20:	ldr	r0, [fp, #-16]
    2b24:	ldr	r0, [r0]
    2b28:	bl	0 <flatcc_builder_end_offset_vector>
    2b2c:	str	r0, [fp, #-40]	; 0xffffffd8
    2b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2b34:	cmp	r0, #0
    2b38:	beq	2b5c <MyGame_Example_Monster_parse_json_table+0x1884>
    2b3c:	ldr	r0, [fp, #-16]
    2b40:	ldr	r0, [r0]
    2b44:	movw	r1, #28
    2b48:	bl	0 <flatcc_builder_table_add_offset>
    2b4c:	str	r0, [fp, #-44]	; 0xffffffd4
    2b50:	movw	r1, #0
    2b54:	cmp	r0, r1
    2b58:	bne	2b60 <MyGame_Example_Monster_parse_json_table+0x1888>
    2b5c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2b60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b68:	str	r0, [r1]
    2b6c:	b	2b84 <MyGame_Example_Monster_parse_json_table+0x18ac>
    2b70:	ldr	r0, [fp, #-16]
    2b74:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2b80:	str	r0, [fp, #-20]	; 0xffffffec
    2b84:	b	2cf4 <MyGame_Example_Monster_parse_json_table+0x1a1c>
    2b88:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2b8c:	and	r0, r0, #-16777216	; 0xff000000
    2b90:	teq	r0, #1728053248	; 0x67000000
    2b94:	bne	2cdc <MyGame_Example_Monster_parse_json_table+0x1a04>
    2b98:	b	2b9c <MyGame_Example_Monster_parse_json_table+0x18c4>
    2b9c:	ldr	r0, [fp, #-16]
    2ba0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ba4:	str	r1, [fp, #-48]	; 0xffffffd0
    2ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2bac:	movw	r3, #1
    2bb0:	bl	4e94 <flatcc_json_parser_match_symbol>
    2bb4:	str	r0, [fp, #-20]	; 0xffffffec
    2bb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2bbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bc0:	cmp	r0, r1
    2bc4:	beq	2cc4 <MyGame_Example_Monster_parse_json_table+0x19ec>
    2bc8:	ldr	r0, [fp, #-16]
    2bcc:	ldr	r0, [r0]
    2bd0:	bl	0 <flatcc_builder_start_offset_vector>
    2bd4:	cmp	r0, #0
    2bd8:	beq	2be0 <MyGame_Example_Monster_parse_json_table+0x1908>
    2bdc:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2be0:	ldr	r0, [fp, #-16]
    2be4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2be8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2bec:	sub	r3, fp, #32
    2bf0:	bl	6744 <flatcc_json_parser_array_start>
    2bf4:	str	r0, [fp, #-20]	; 0xffffffec
    2bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2bfc:	cmp	r0, #0
    2c00:	beq	2c74 <MyGame_Example_Monster_parse_json_table+0x199c>
    2c04:	ldr	r0, [fp, #-16]
    2c08:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c10:	sub	r3, fp, #40	; 0x28
    2c14:	bl	0 <flatcc_json_parser_build_string>
    2c18:	str	r0, [fp, #-20]	; 0xffffffec
    2c1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c20:	cmp	r0, #0
    2c24:	beq	2c48 <MyGame_Example_Monster_parse_json_table+0x1970>
    2c28:	ldr	r0, [fp, #-16]
    2c2c:	ldr	r0, [r0]
    2c30:	movw	r1, #1
    2c34:	bl	0 <flatcc_builder_extend_offset_vector>
    2c38:	str	r0, [fp, #-44]	; 0xffffffd4
    2c3c:	movw	r1, #0
    2c40:	cmp	r0, r1
    2c44:	bne	2c4c <MyGame_Example_Monster_parse_json_table+0x1974>
    2c48:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2c4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c54:	str	r0, [r1]
    2c58:	ldr	r0, [fp, #-16]
    2c5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c64:	sub	r3, fp, #32
    2c68:	bl	6b5c <flatcc_json_parser_array_end>
    2c6c:	str	r0, [fp, #-20]	; 0xffffffec
    2c70:	b	2bf8 <MyGame_Example_Monster_parse_json_table+0x1920>
    2c74:	ldr	r0, [fp, #-16]
    2c78:	ldr	r0, [r0]
    2c7c:	bl	0 <flatcc_builder_end_offset_vector>
    2c80:	str	r0, [fp, #-40]	; 0xffffffd8
    2c84:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2c88:	cmp	r0, #0
    2c8c:	beq	2cb0 <MyGame_Example_Monster_parse_json_table+0x19d8>
    2c90:	ldr	r0, [fp, #-16]
    2c94:	ldr	r0, [r0]
    2c98:	movw	r1, #10
    2c9c:	bl	0 <flatcc_builder_table_add_offset>
    2ca0:	str	r0, [fp, #-44]	; 0xffffffd4
    2ca4:	movw	r1, #0
    2ca8:	cmp	r0, r1
    2cac:	bne	2cb4 <MyGame_Example_Monster_parse_json_table+0x19dc>
    2cb0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2cb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2cb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2cbc:	str	r0, [r1]
    2cc0:	b	2cd8 <MyGame_Example_Monster_parse_json_table+0x1a00>
    2cc4:	ldr	r0, [fp, #-16]
    2cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2cd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2cd4:	str	r0, [fp, #-20]	; 0xffffffec
    2cd8:	b	2cf0 <MyGame_Example_Monster_parse_json_table+0x1a18>
    2cdc:	ldr	r0, [fp, #-16]
    2ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ce8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2cec:	str	r0, [fp, #-20]	; 0xffffffec
    2cf0:	b	2cf4 <MyGame_Example_Monster_parse_json_table+0x1a1c>
    2cf4:	b	2ecc <MyGame_Example_Monster_parse_json_table+0x1bf4>
    2cf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2cfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2d00:	movw	r2, #26228	; 0x6674
    2d04:	movt	r2, #31087	; 0x796f
    2d08:	eor	r1, r1, r2
    2d0c:	movw	r2, #27749	; 0x6c65
    2d10:	movt	r2, #24930	; 0x6162
    2d14:	eor	r0, r0, r2
    2d18:	orr	r0, r0, r1
    2d1c:	cmp	r0, #0
    2d20:	bne	2eb4 <MyGame_Example_Monster_parse_json_table+0x1bdc>
    2d24:	b	2d28 <MyGame_Example_Monster_parse_json_table+0x1a50>
    2d28:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d2c:	add	r0, r0, #8
    2d30:	str	r0, [fp, #-20]	; 0xffffffec
    2d34:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d3c:	bl	4e5c <flatcc_json_parser_symbol_part>
    2d40:	str	r1, [fp, #-52]	; 0xffffffcc
    2d44:	str	r0, [fp, #-56]	; 0xffffffc8
    2d48:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2d4c:	and	r0, r0, #-16777216	; 0xff000000
    2d50:	teq	r0, #1929379840	; 0x73000000
    2d54:	bne	2e9c <MyGame_Example_Monster_parse_json_table+0x1bc4>
    2d58:	b	2d5c <MyGame_Example_Monster_parse_json_table+0x1a84>
    2d5c:	ldr	r0, [fp, #-16]
    2d60:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d64:	str	r1, [fp, #-48]	; 0xffffffd0
    2d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d6c:	movw	r3, #1
    2d70:	bl	4e94 <flatcc_json_parser_match_symbol>
    2d74:	str	r0, [fp, #-20]	; 0xffffffec
    2d78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2d7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d80:	cmp	r0, r1
    2d84:	beq	2e84 <MyGame_Example_Monster_parse_json_table+0x1bac>
    2d88:	ldr	r0, [fp, #-16]
    2d8c:	ldr	r0, [r0]
    2d90:	bl	0 <flatcc_builder_start_offset_vector>
    2d94:	cmp	r0, #0
    2d98:	beq	2da0 <MyGame_Example_Monster_parse_json_table+0x1ac8>
    2d9c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2da0:	ldr	r0, [fp, #-16]
    2da4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2dac:	sub	r3, fp, #32
    2db0:	bl	6744 <flatcc_json_parser_array_start>
    2db4:	str	r0, [fp, #-20]	; 0xffffffec
    2db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2dbc:	cmp	r0, #0
    2dc0:	beq	2e34 <MyGame_Example_Monster_parse_json_table+0x1b5c>
    2dc4:	ldr	r0, [fp, #-16]
    2dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2dd0:	sub	r3, fp, #40	; 0x28
    2dd4:	bl	12d8 <MyGame_Example_Monster_parse_json_table>
    2dd8:	str	r0, [fp, #-20]	; 0xffffffec
    2ddc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2de0:	cmp	r0, #0
    2de4:	beq	2e08 <MyGame_Example_Monster_parse_json_table+0x1b30>
    2de8:	ldr	r0, [fp, #-16]
    2dec:	ldr	r0, [r0]
    2df0:	movw	r1, #1
    2df4:	bl	0 <flatcc_builder_extend_offset_vector>
    2df8:	str	r0, [fp, #-44]	; 0xffffffd4
    2dfc:	movw	r1, #0
    2e00:	cmp	r0, r1
    2e04:	bne	2e0c <MyGame_Example_Monster_parse_json_table+0x1b34>
    2e08:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2e0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e10:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e14:	str	r0, [r1]
    2e18:	ldr	r0, [fp, #-16]
    2e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e24:	sub	r3, fp, #32
    2e28:	bl	6b5c <flatcc_json_parser_array_end>
    2e2c:	str	r0, [fp, #-20]	; 0xffffffec
    2e30:	b	2db8 <MyGame_Example_Monster_parse_json_table+0x1ae0>
    2e34:	ldr	r0, [fp, #-16]
    2e38:	ldr	r0, [r0]
    2e3c:	bl	0 <flatcc_builder_end_offset_vector>
    2e40:	str	r0, [fp, #-40]	; 0xffffffd8
    2e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e48:	cmp	r0, #0
    2e4c:	beq	2e70 <MyGame_Example_Monster_parse_json_table+0x1b98>
    2e50:	ldr	r0, [fp, #-16]
    2e54:	ldr	r0, [r0]
    2e58:	movw	r1, #11
    2e5c:	bl	0 <flatcc_builder_table_add_offset>
    2e60:	str	r0, [fp, #-44]	; 0xffffffd4
    2e64:	movw	r1, #0
    2e68:	cmp	r0, r1
    2e6c:	bne	2e74 <MyGame_Example_Monster_parse_json_table+0x1b9c>
    2e70:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2e74:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e78:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e7c:	str	r0, [r1]
    2e80:	b	2e98 <MyGame_Example_Monster_parse_json_table+0x1bc0>
    2e84:	ldr	r0, [fp, #-16]
    2e88:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e94:	str	r0, [fp, #-20]	; 0xffffffec
    2e98:	b	2eb0 <MyGame_Example_Monster_parse_json_table+0x1bd8>
    2e9c:	ldr	r0, [fp, #-16]
    2ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ea8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2eac:	str	r0, [fp, #-20]	; 0xffffffec
    2eb0:	b	2ec8 <MyGame_Example_Monster_parse_json_table+0x1bf0>
    2eb4:	ldr	r0, [fp, #-16]
    2eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ebc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ec0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2ec4:	str	r0, [fp, #-20]	; 0xffffffec
    2ec8:	b	2ecc <MyGame_Example_Monster_parse_json_table+0x1bf4>
    2ecc:	b	2ed0 <MyGame_Example_Monster_parse_json_table+0x1bf8>
    2ed0:	b	35e0 <MyGame_Example_Monster_parse_json_table+0x2308>
    2ed4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2ed8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2edc:	movw	r2, #28787	; 0x7073
    2ee0:	movt	r2, #25965	; 0x656d
    2ee4:	subs	r0, r2, r0
    2ee8:	movw	r2, #29556	; 0x7374
    2eec:	movt	r2, #29797	; 0x7465
    2ef0:	sbcs	r1, r2, r1
    2ef4:	str	r0, [sp, #68]	; 0x44
    2ef8:	str	r1, [sp, #64]	; 0x40
    2efc:	bcc	319c <MyGame_Example_Monster_parse_json_table+0x1ec4>
    2f00:	b	2f04 <MyGame_Example_Monster_parse_json_table+0x1c2c>
    2f04:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2f08:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f0c:	movw	r2, #29556	; 0x7374
    2f10:	movt	r2, #29797	; 0x7465
    2f14:	eor	r1, r1, r2
    2f18:	movw	r2, #29541	; 0x7365
    2f1c:	movt	r2, #25185	; 0x6261
    2f20:	eor	r0, r0, r2
    2f24:	orr	r0, r0, r1
    2f28:	cmp	r0, #0
    2f2c:	bne	3024 <MyGame_Example_Monster_parse_json_table+0x1d4c>
    2f30:	b	2f34 <MyGame_Example_Monster_parse_json_table+0x1c5c>
    2f34:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f38:	add	r0, r0, #8
    2f3c:	str	r0, [fp, #-20]	; 0xffffffec
    2f40:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f48:	bl	4e5c <flatcc_json_parser_symbol_part>
    2f4c:	str	r1, [fp, #-52]	; 0xffffffcc
    2f50:	str	r0, [fp, #-56]	; 0xffffffc8
    2f54:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2f58:	bfc	r0, #0, #16
    2f5c:	movw	r1, #0
    2f60:	movt	r1, #13876	; 0x3634
    2f64:	teq	r0, r1
    2f68:	bne	300c <MyGame_Example_Monster_parse_json_table+0x1d34>
    2f6c:	b	2f70 <MyGame_Example_Monster_parse_json_table+0x1c98>
    2f70:	ldr	r0, [fp, #-16]
    2f74:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f78:	str	r1, [fp, #-48]	; 0xffffffd0
    2f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f80:	movw	r3, #2
    2f84:	bl	4e94 <flatcc_json_parser_match_symbol>
    2f88:	str	r0, [fp, #-20]	; 0xffffffec
    2f8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f94:	cmp	r0, r1
    2f98:	beq	2ff4 <MyGame_Example_Monster_parse_json_table+0x1d1c>
    2f9c:	ldr	r0, [fp, #-16]
    2fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2fa8:	sub	r3, fp, #40	; 0x28
    2fac:	bl	8750 <MyGame_Example_TestBase64_parse_json_table>
    2fb0:	str	r0, [fp, #-20]	; 0xffffffec
    2fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fb8:	cmp	r0, #0
    2fbc:	beq	2fe0 <MyGame_Example_Monster_parse_json_table+0x1d08>
    2fc0:	ldr	r0, [fp, #-16]
    2fc4:	ldr	r0, [r0]
    2fc8:	movw	r1, #35	; 0x23
    2fcc:	bl	0 <flatcc_builder_table_add_offset>
    2fd0:	str	r0, [fp, #-44]	; 0xffffffd4
    2fd4:	movw	r1, #0
    2fd8:	cmp	r0, r1
    2fdc:	bne	2fe4 <MyGame_Example_Monster_parse_json_table+0x1d0c>
    2fe0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    2fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2fe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2fec:	str	r0, [r1]
    2ff0:	b	3008 <MyGame_Example_Monster_parse_json_table+0x1d30>
    2ff4:	ldr	r0, [fp, #-16]
    2ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ffc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3000:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3004:	str	r0, [fp, #-20]	; 0xffffffec
    3008:	b	3020 <MyGame_Example_Monster_parse_json_table+0x1d48>
    300c:	ldr	r0, [fp, #-16]
    3010:	ldr	r1, [fp, #-20]	; 0xffffffec
    3014:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3018:	bl	0 <flatcc_json_parser_unmatched_symbol>
    301c:	str	r0, [fp, #-20]	; 0xffffffec
    3020:	b	3198 <MyGame_Example_Monster_parse_json_table+0x1ec0>
    3024:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3028:	ldr	r1, [fp, #-52]	; 0xffffffcc
    302c:	movw	r2, #29556	; 0x7374
    3030:	movt	r2, #29797	; 0x7465
    3034:	eor	r1, r1, r2
    3038:	movw	r2, #28524	; 0x6f6c
    303c:	movt	r2, #25199	; 0x626f
    3040:	eor	r0, r0, r2
    3044:	orr	r0, r0, r1
    3048:	cmp	r0, #0
    304c:	bne	3180 <MyGame_Example_Monster_parse_json_table+0x1ea8>
    3050:	b	3054 <MyGame_Example_Monster_parse_json_table+0x1d7c>
    3054:	ldr	r0, [fp, #-16]
    3058:	ldr	r1, [fp, #-20]	; 0xffffffec
    305c:	str	r1, [fp, #-48]	; 0xffffffd0
    3060:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3064:	movw	r3, #8
    3068:	bl	4e94 <flatcc_json_parser_match_symbol>
    306c:	str	r0, [fp, #-20]	; 0xffffffec
    3070:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3074:	ldr	r1, [fp, #-20]	; 0xffffffec
    3078:	cmp	r0, r1
    307c:	beq	3168 <MyGame_Example_Monster_parse_json_table+0x1e90>
    3080:	movw	r0, #0
    3084:	strb	r0, [fp, #-70]	; 0xffffffba
    3088:	ldr	r0, [fp, #-16]
    308c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3090:	str	r1, [fp, #-48]	; 0xffffffd0
    3094:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3098:	sub	r3, fp, #70	; 0x46
    309c:	bl	80f4 <flatcc_json_parser_bool>
    30a0:	str	r0, [fp, #-20]	; 0xffffffec
    30a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    30ac:	cmp	r0, r1
    30b0:	bne	3108 <MyGame_Example_Monster_parse_json_table+0x1e30>
    30b4:	ldr	r0, [fp, #-16]
    30b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    30bc:	str	r1, [fp, #-48]	; 0xffffffd0
    30c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30c4:	movw	r3, #0
    30c8:	movt	r3, #0
    30cc:	sub	ip, fp, #70	; 0x46
    30d0:	str	ip, [sp]
    30d4:	bl	8218 <flatcc_json_parser_symbolic_bool>
    30d8:	str	r0, [fp, #-20]	; 0xffffffec
    30dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    30e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    30e4:	cmp	r0, r1
    30e8:	beq	30fc <MyGame_Example_Monster_parse_json_table+0x1e24>
    30ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    30f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30f4:	cmp	r0, r1
    30f8:	bne	3104 <MyGame_Example_Monster_parse_json_table+0x1e2c>
    30fc:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3100:	.word	0x3fffffff
    3104:	b	3108 <MyGame_Example_Monster_parse_json_table+0x1e30>
    3108:	ldrb	r0, [fp, #-70]	; 0xffffffba
    310c:	cmp	r0, #1
    3110:	bne	3128 <MyGame_Example_Monster_parse_json_table+0x1e50>
    3114:	ldr	r0, [fp, #-16]
    3118:	ldr	r0, [r0, #8]
    311c:	and	r0, r0, #2
    3120:	cmp	r0, #0
    3124:	beq	3164 <MyGame_Example_Monster_parse_json_table+0x1e8c>
    3128:	ldr	r0, [fp, #-16]
    312c:	ldr	r0, [r0]
    3130:	movw	r1, #15
    3134:	movw	r2, #1
    3138:	movw	r3, #1
    313c:	uxth	r3, r3
    3140:	bl	0 <flatcc_builder_table_add>
    3144:	str	r0, [fp, #-36]	; 0xffffffdc
    3148:	movw	r1, #0
    314c:	cmp	r0, r1
    3150:	bne	3158 <MyGame_Example_Monster_parse_json_table+0x1e80>
    3154:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3158:	ldr	r0, [fp, #-36]	; 0xffffffdc
    315c:	ldrb	r1, [fp, #-70]	; 0xffffffba
    3160:	bl	8444 <flatbuffers_bool_write_to_pe>
    3164:	b	317c <MyGame_Example_Monster_parse_json_table+0x1ea4>
    3168:	ldr	r0, [fp, #-16]
    316c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3170:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3174:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3178:	str	r0, [fp, #-20]	; 0xffffffec
    317c:	b	3194 <MyGame_Example_Monster_parse_json_table+0x1ebc>
    3180:	ldr	r0, [fp, #-16]
    3184:	ldr	r1, [fp, #-20]	; 0xffffffec
    3188:	ldr	r2, [fp, #-24]	; 0xffffffe8
    318c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3190:	str	r0, [fp, #-20]	; 0xffffffec
    3194:	b	3198 <MyGame_Example_Monster_parse_json_table+0x1ec0>
    3198:	b	35dc <MyGame_Example_Monster_parse_json_table+0x2304>
    319c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    31a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    31a4:	mvn	r2, #-1711276032	; 0x9a000000
    31a8:	subs	r0, r2, r0
    31ac:	movw	r2, #29556	; 0x7374
    31b0:	movt	r2, #29797	; 0x7465
    31b4:	sbcs	r1, r2, r1
    31b8:	str	r0, [sp, #60]	; 0x3c
    31bc:	str	r1, [sp, #56]	; 0x38
    31c0:	bcc	32f8 <MyGame_Example_Monster_parse_json_table+0x2020>
    31c4:	b	31c8 <MyGame_Example_Monster_parse_json_table+0x1ef0>
    31c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    31cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    31d0:	movw	r2, #29556	; 0x7374
    31d4:	movt	r2, #29797	; 0x7465
    31d8:	eor	r1, r1, r2
    31dc:	movw	r2, #28788	; 0x7074
    31e0:	movt	r2, #25965	; 0x656d
    31e4:	eor	r0, r0, r2
    31e8:	orr	r0, r0, r1
    31ec:	cmp	r0, #0
    31f0:	bne	32e0 <MyGame_Example_Monster_parse_json_table+0x2008>
    31f4:	b	31f8 <MyGame_Example_Monster_parse_json_table+0x1f20>
    31f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    31fc:	add	r0, r0, #8
    3200:	str	r0, [fp, #-20]	; 0xffffffec
    3204:	ldr	r0, [fp, #-20]	; 0xffffffec
    3208:	ldr	r1, [fp, #-24]	; 0xffffffe8
    320c:	bl	4e5c <flatcc_json_parser_symbol_part>
    3210:	str	r1, [fp, #-52]	; 0xffffffcc
    3214:	str	r0, [fp, #-56]	; 0xffffffc8
    3218:	ldr	r0, [fp, #-52]	; 0xffffffcc
    321c:	and	r0, r0, #-16777216	; 0xff000000
    3220:	teq	r0, #2030043136	; 0x79000000
    3224:	bne	32c8 <MyGame_Example_Monster_parse_json_table+0x1ff0>
    3228:	b	322c <MyGame_Example_Monster_parse_json_table+0x1f54>
    322c:	ldr	r0, [fp, #-16]
    3230:	ldr	r1, [fp, #-20]	; 0xffffffec
    3234:	str	r1, [fp, #-48]	; 0xffffffd0
    3238:	ldr	r2, [fp, #-24]	; 0xffffffe8
    323c:	movw	r3, #1
    3240:	bl	4e94 <flatcc_json_parser_match_symbol>
    3244:	str	r0, [fp, #-20]	; 0xffffffec
    3248:	ldr	r0, [fp, #-48]	; 0xffffffd0
    324c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3250:	cmp	r0, r1
    3254:	beq	32b0 <MyGame_Example_Monster_parse_json_table+0x1fd8>
    3258:	ldr	r0, [fp, #-16]
    325c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3260:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3264:	sub	r3, fp, #40	; 0x28
    3268:	bl	8b30 <MyGame_Example_Stat_parse_json_table>
    326c:	str	r0, [fp, #-20]	; 0xffffffec
    3270:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3274:	cmp	r0, #0
    3278:	beq	329c <MyGame_Example_Monster_parse_json_table+0x1fc4>
    327c:	ldr	r0, [fp, #-16]
    3280:	ldr	r0, [r0]
    3284:	movw	r1, #14
    3288:	bl	0 <flatcc_builder_table_add_offset>
    328c:	str	r0, [fp, #-44]	; 0xffffffd4
    3290:	movw	r1, #0
    3294:	cmp	r0, r1
    3298:	bne	32a0 <MyGame_Example_Monster_parse_json_table+0x1fc8>
    329c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    32a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    32a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    32a8:	str	r0, [r1]
    32ac:	b	32c4 <MyGame_Example_Monster_parse_json_table+0x1fec>
    32b0:	ldr	r0, [fp, #-16]
    32b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    32b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    32bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    32c0:	str	r0, [fp, #-20]	; 0xffffffec
    32c4:	b	32dc <MyGame_Example_Monster_parse_json_table+0x2004>
    32c8:	ldr	r0, [fp, #-16]
    32cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    32d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    32d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    32d8:	str	r0, [fp, #-20]	; 0xffffffec
    32dc:	b	32f4 <MyGame_Example_Monster_parse_json_table+0x201c>
    32e0:	ldr	r0, [fp, #-16]
    32e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    32e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    32ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    32f0:	str	r0, [fp, #-20]	; 0xffffffec
    32f4:	b	35d8 <MyGame_Example_Monster_parse_json_table+0x2300>
    32f8:	ldrh	r0, [fp, #-54]	; 0xffffffca
    32fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3300:	movw	r2, #29797	; 0x7465
    3304:	eor	r2, r2, r1, lsr #16
    3308:	orr	r0, r0, r1, lsl #16
    330c:	movw	r1, #26162	; 0x6632
    3310:	movt	r1, #29556	; 0x7374
    3314:	eor	r0, r0, r1
    3318:	orr	r0, r0, r2
    331c:	cmp	r0, #0
    3320:	bne	345c <MyGame_Example_Monster_parse_json_table+0x2184>
    3324:	b	3328 <MyGame_Example_Monster_parse_json_table+0x2050>
    3328:	ldr	r0, [fp, #-16]
    332c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3330:	str	r1, [fp, #-48]	; 0xffffffd0
    3334:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3338:	movw	r3, #6
    333c:	bl	4e94 <flatcc_json_parser_match_symbol>
    3340:	str	r0, [fp, #-20]	; 0xffffffec
    3344:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3348:	ldr	r1, [fp, #-20]	; 0xffffffec
    334c:	cmp	r0, r1
    3350:	beq	3444 <MyGame_Example_Monster_parse_json_table+0x216c>
    3354:	vldr	s0, [pc, #1008]	; 374c <MyGame_Example_Monster_parse_json_table+0x2474>
    3358:	vstr	s0, [fp, #-76]	; 0xffffffb4
    335c:	ldr	r0, [fp, #-16]
    3360:	ldr	r1, [fp, #-20]	; 0xffffffec
    3364:	str	r1, [fp, #-48]	; 0xffffffd0
    3368:	ldr	r2, [fp, #-24]	; 0xffffffe8
    336c:	sub	r3, fp, #76	; 0x4c
    3370:	bl	0 <flatcc_json_parser_float>
    3374:	str	r0, [fp, #-20]	; 0xffffffec
    3378:	ldr	r0, [fp, #-48]	; 0xffffffd0
    337c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3380:	cmp	r0, r1
    3384:	bne	33d8 <MyGame_Example_Monster_parse_json_table+0x2100>
    3388:	ldr	r0, [fp, #-16]
    338c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3390:	str	r1, [fp, #-48]	; 0xffffffd0
    3394:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3398:	movw	r3, #0
    339c:	movt	r3, #0
    33a0:	sub	ip, fp, #76	; 0x4c
    33a4:	str	ip, [sp]
    33a8:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    33ac:	str	r0, [fp, #-20]	; 0xffffffec
    33b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    33b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    33b8:	cmp	r0, r1
    33bc:	beq	33d0 <MyGame_Example_Monster_parse_json_table+0x20f8>
    33c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    33c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    33c8:	cmp	r0, r1
    33cc:	bne	33d4 <MyGame_Example_Monster_parse_json_table+0x20fc>
    33d0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    33d4:	b	33d8 <MyGame_Example_Monster_parse_json_table+0x2100>
    33d8:	vldr	s0, [fp, #-76]	; 0xffffffb4
    33dc:	vcvt.f64.f32	d16, s0
    33e0:	vmov.f64	d17, #8	; 0x40400000  3.0
    33e4:	vcmp.f64	d16, d17
    33e8:	vmrs	APSR_nzcv, fpscr
    33ec:	bne	3404 <MyGame_Example_Monster_parse_json_table+0x212c>
    33f0:	ldr	r0, [fp, #-16]
    33f4:	ldr	r0, [r0, #8]
    33f8:	and	r0, r0, #2
    33fc:	cmp	r0, #0
    3400:	beq	3440 <MyGame_Example_Monster_parse_json_table+0x2168>
    3404:	ldr	r0, [fp, #-16]
    3408:	ldr	r0, [r0]
    340c:	movw	r1, #26
    3410:	movw	r2, #4
    3414:	movw	r3, #4
    3418:	uxth	r3, r3
    341c:	bl	0 <flatcc_builder_table_add>
    3420:	str	r0, [fp, #-36]	; 0xffffffdc
    3424:	movw	r1, #0
    3428:	cmp	r0, r1
    342c:	bne	3434 <MyGame_Example_Monster_parse_json_table+0x215c>
    3430:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3434:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3438:	vldr	s0, [fp, #-76]	; 0xffffffb4
    343c:	bl	9224 <flatbuffers_float_write_to_pe>
    3440:	b	3458 <MyGame_Example_Monster_parse_json_table+0x2180>
    3444:	ldr	r0, [fp, #-16]
    3448:	ldr	r1, [fp, #-20]	; 0xffffffec
    344c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3450:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3454:	str	r0, [fp, #-20]	; 0xffffffec
    3458:	b	35d4 <MyGame_Example_Monster_parse_json_table+0x22fc>
    345c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3460:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3464:	and	r0, r0, #-16777216	; 0xff000000
    3468:	movw	r2, #29556	; 0x7374
    346c:	movt	r2, #29797	; 0x7465
    3470:	eor	r1, r1, r2
    3474:	eor	r0, r0, #1711276032	; 0x66000000
    3478:	orr	r0, r0, r1
    347c:	cmp	r0, #0
    3480:	bne	35bc <MyGame_Example_Monster_parse_json_table+0x22e4>
    3484:	b	3488 <MyGame_Example_Monster_parse_json_table+0x21b0>
    3488:	ldr	r0, [fp, #-16]
    348c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3490:	str	r1, [fp, #-48]	; 0xffffffd0
    3494:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3498:	movw	r3, #5
    349c:	bl	4e94 <flatcc_json_parser_match_symbol>
    34a0:	str	r0, [fp, #-20]	; 0xffffffec
    34a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    34a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    34ac:	cmp	r0, r1
    34b0:	beq	35a4 <MyGame_Example_Monster_parse_json_table+0x22cc>
    34b4:	vldr	s0, [pc, #656]	; 374c <MyGame_Example_Monster_parse_json_table+0x2474>
    34b8:	vstr	s0, [fp, #-80]	; 0xffffffb0
    34bc:	ldr	r0, [fp, #-16]
    34c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    34c4:	str	r1, [fp, #-48]	; 0xffffffd0
    34c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    34cc:	sub	r3, fp, #80	; 0x50
    34d0:	bl	0 <flatcc_json_parser_float>
    34d4:	str	r0, [fp, #-20]	; 0xffffffec
    34d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    34dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    34e0:	cmp	r0, r1
    34e4:	bne	3538 <MyGame_Example_Monster_parse_json_table+0x2260>
    34e8:	ldr	r0, [fp, #-16]
    34ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    34f0:	str	r1, [fp, #-48]	; 0xffffffd0
    34f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    34f8:	movw	r3, #0
    34fc:	movt	r3, #0
    3500:	sub	ip, fp, #80	; 0x50
    3504:	str	ip, [sp]
    3508:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    350c:	str	r0, [fp, #-20]	; 0xffffffec
    3510:	ldr	r0, [fp, #-20]	; 0xffffffec
    3514:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3518:	cmp	r0, r1
    351c:	beq	3530 <MyGame_Example_Monster_parse_json_table+0x2258>
    3520:	ldr	r0, [fp, #-20]	; 0xffffffec
    3524:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3528:	cmp	r0, r1
    352c:	bne	3534 <MyGame_Example_Monster_parse_json_table+0x225c>
    3530:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3534:	b	3538 <MyGame_Example_Monster_parse_json_table+0x2260>
    3538:	vldr	d16, [pc, #944]	; 38f0 <MyGame_Example_Monster_parse_json_table+0x2618>
    353c:	vldr	s0, [fp, #-80]	; 0xffffffb0
    3540:	vcvt.f64.f32	d17, s0
    3544:	vcmp.f64	d17, d16
    3548:	vmrs	APSR_nzcv, fpscr
    354c:	bne	3564 <MyGame_Example_Monster_parse_json_table+0x228c>
    3550:	ldr	r0, [fp, #-16]
    3554:	ldr	r0, [r0, #8]
    3558:	and	r0, r0, #2
    355c:	cmp	r0, #0
    3560:	beq	35a0 <MyGame_Example_Monster_parse_json_table+0x22c8>
    3564:	ldr	r0, [fp, #-16]
    3568:	ldr	r0, [r0]
    356c:	movw	r1, #25
    3570:	movw	r2, #4
    3574:	movw	r3, #4
    3578:	uxth	r3, r3
    357c:	bl	0 <flatcc_builder_table_add>
    3580:	str	r0, [fp, #-36]	; 0xffffffdc
    3584:	movw	r1, #0
    3588:	cmp	r0, r1
    358c:	bne	3594 <MyGame_Example_Monster_parse_json_table+0x22bc>
    3590:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3594:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3598:	vldr	s0, [fp, #-80]	; 0xffffffb0
    359c:	bl	9224 <flatbuffers_float_write_to_pe>
    35a0:	b	35b8 <MyGame_Example_Monster_parse_json_table+0x22e0>
    35a4:	ldr	r0, [fp, #-16]
    35a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    35ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    35b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35b4:	str	r0, [fp, #-20]	; 0xffffffec
    35b8:	b	35d0 <MyGame_Example_Monster_parse_json_table+0x22f8>
    35bc:	ldr	r0, [fp, #-16]
    35c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    35c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    35c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35cc:	str	r0, [fp, #-20]	; 0xffffffec
    35d0:	b	35d4 <MyGame_Example_Monster_parse_json_table+0x22fc>
    35d4:	b	35d8 <MyGame_Example_Monster_parse_json_table+0x2300>
    35d8:	b	35dc <MyGame_Example_Monster_parse_json_table+0x2304>
    35dc:	b	35e0 <MyGame_Example_Monster_parse_json_table+0x2308>
    35e0:	b	4be8 <MyGame_Example_Monster_parse_json_table+0x3910>
    35e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    35e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    35ec:	movw	r2, #29543	; 0x7367
    35f0:	movt	r2, #26721	; 0x6861
    35f4:	subs	r0, r2, r0
    35f8:	movw	r2, #29556	; 0x7374
    35fc:	movt	r2, #29797	; 0x7465
    3600:	sbcs	r1, r2, r1
    3604:	str	r0, [sp, #52]	; 0x34
    3608:	str	r1, [sp, #48]	; 0x30
    360c:	bcc	3790 <MyGame_Example_Monster_parse_json_table+0x24b8>
    3610:	b	3614 <MyGame_Example_Monster_parse_json_table+0x233c>
    3614:	ldrh	r0, [fp, #-54]	; 0xffffffca
    3618:	ldr	r1, [fp, #-52]	; 0xffffffcc
    361c:	movw	r2, #29797	; 0x7465
    3620:	eor	r2, r2, r1, lsr #16
    3624:	orr	r0, r0, r1, lsl #16
    3628:	movw	r1, #26163	; 0x6633
    362c:	movt	r1, #29556	; 0x7374
    3630:	eor	r0, r0, r1
    3634:	orr	r0, r0, r2
    3638:	cmp	r0, #0
    363c:	bne	3778 <MyGame_Example_Monster_parse_json_table+0x24a0>
    3640:	b	3644 <MyGame_Example_Monster_parse_json_table+0x236c>
    3644:	ldr	r0, [fp, #-16]
    3648:	ldr	r1, [fp, #-20]	; 0xffffffec
    364c:	str	r1, [fp, #-48]	; 0xffffffd0
    3650:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3654:	movw	r3, #6
    3658:	bl	4e94 <flatcc_json_parser_match_symbol>
    365c:	str	r0, [fp, #-20]	; 0xffffffec
    3660:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3664:	ldr	r1, [fp, #-20]	; 0xffffffec
    3668:	cmp	r0, r1
    366c:	beq	3760 <MyGame_Example_Monster_parse_json_table+0x2488>
    3670:	vldr	s0, [pc, #212]	; 374c <MyGame_Example_Monster_parse_json_table+0x2474>
    3674:	vstr	s0, [fp, #-84]	; 0xffffffac
    3678:	ldr	r0, [fp, #-16]
    367c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3680:	str	r1, [fp, #-48]	; 0xffffffd0
    3684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3688:	sub	r3, fp, #84	; 0x54
    368c:	bl	0 <flatcc_json_parser_float>
    3690:	str	r0, [fp, #-20]	; 0xffffffec
    3694:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3698:	ldr	r1, [fp, #-20]	; 0xffffffec
    369c:	cmp	r0, r1
    36a0:	bne	36f4 <MyGame_Example_Monster_parse_json_table+0x241c>
    36a4:	ldr	r0, [fp, #-16]
    36a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    36ac:	str	r1, [fp, #-48]	; 0xffffffd0
    36b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    36b4:	movw	r3, #0
    36b8:	movt	r3, #0
    36bc:	sub	ip, fp, #84	; 0x54
    36c0:	str	ip, [sp]
    36c4:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    36c8:	str	r0, [fp, #-20]	; 0xffffffec
    36cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    36d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    36d4:	cmp	r0, r1
    36d8:	beq	36ec <MyGame_Example_Monster_parse_json_table+0x2414>
    36dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    36e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    36e4:	cmp	r0, r1
    36e8:	bne	36f0 <MyGame_Example_Monster_parse_json_table+0x2418>
    36ec:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    36f0:	b	36f4 <MyGame_Example_Monster_parse_json_table+0x241c>
    36f4:	vldr	s0, [fp, #-84]	; 0xffffffac
    36f8:	vcvt.f64.f32	d16, s0
    36fc:	vcmp.f64	d16, #0.0
    3700:	vmrs	APSR_nzcv, fpscr
    3704:	bne	371c <MyGame_Example_Monster_parse_json_table+0x2444>
    3708:	ldr	r0, [fp, #-16]
    370c:	ldr	r0, [r0, #8]
    3710:	and	r0, r0, #2
    3714:	cmp	r0, #0
    3718:	beq	375c <MyGame_Example_Monster_parse_json_table+0x2484>
    371c:	ldr	r0, [fp, #-16]
    3720:	ldr	r0, [r0]
    3724:	movw	r1, #27
    3728:	movw	r2, #4
    372c:	movw	r3, #4
    3730:	uxth	r3, r3
    3734:	bl	0 <flatcc_builder_table_add>
    3738:	str	r0, [fp, #-36]	; 0xffffffdc
    373c:	movw	r1, #0
    3740:	cmp	r0, r1
    3744:	bne	3750 <MyGame_Example_Monster_parse_json_table+0x2478>
    3748:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    374c:	.word	0x00000000
    3750:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3754:	vldr	s0, [fp, #-84]	; 0xffffffac
    3758:	bl	9224 <flatbuffers_float_write_to_pe>
    375c:	b	3774 <MyGame_Example_Monster_parse_json_table+0x249c>
    3760:	ldr	r0, [fp, #-16]
    3764:	ldr	r1, [fp, #-20]	; 0xffffffec
    3768:	ldr	r2, [fp, #-24]	; 0xffffffe8
    376c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3770:	str	r0, [fp, #-20]	; 0xffffffec
    3774:	b	378c <MyGame_Example_Monster_parse_json_table+0x24b4>
    3778:	ldr	r0, [fp, #-16]
    377c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3780:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3784:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3788:	str	r0, [fp, #-20]	; 0xffffffec
    378c:	b	4be4 <MyGame_Example_Monster_parse_json_table+0x390c>
    3790:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3794:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3798:	movw	r2, #29556	; 0x7374
    379c:	movt	r2, #29797	; 0x7465
    37a0:	eor	r1, r1, r2
    37a4:	movw	r2, #29544	; 0x7368
    37a8:	movt	r2, #26721	; 0x6861
    37ac:	eor	r0, r0, r2
    37b0:	orr	r0, r0, r1
    37b4:	cmp	r0, #0
    37b8:	bne	43d0 <MyGame_Example_Monster_parse_json_table+0x30f8>
    37bc:	b	37c0 <MyGame_Example_Monster_parse_json_table+0x24e8>
    37c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    37c4:	add	r0, r0, #8
    37c8:	str	r0, [fp, #-20]	; 0xffffffec
    37cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    37d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    37d4:	bl	4e5c <flatcc_json_parser_symbol_part>
    37d8:	str	r1, [fp, #-52]	; 0xffffffcc
    37dc:	str	r0, [fp, #-56]	; 0xffffffc8
    37e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    37e8:	movw	lr, #30256	; 0x7630
    37ec:	movt	lr, #26222	; 0x666e
    37f0:	subs	r0, lr, r0
    37f4:	movw	lr, #13407	; 0x345f
    37f8:	movt	lr, #29494	; 0x7336
    37fc:	sbcs	r1, lr, r1
    3800:	str	r0, [sp, #44]	; 0x2c
    3804:	str	r1, [sp, #40]	; 0x28
    3808:	bcc	3aec <MyGame_Example_Monster_parse_json_table+0x2814>
    380c:	b	3810 <MyGame_Example_Monster_parse_json_table+0x2538>
    3810:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3814:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3818:	movw	r2, #12895	; 0x325f
    381c:	movt	r2, #29491	; 0x7333
    3820:	eor	r1, r1, r2
    3824:	movw	r2, #30257	; 0x7631
    3828:	movt	r2, #26222	; 0x666e
    382c:	eor	r0, r0, r2
    3830:	orr	r0, r0, r1
    3834:	cmp	r0, #0
    3838:	bne	3ad4 <MyGame_Example_Monster_parse_json_table+0x27fc>
    383c:	b	3844 <MyGame_Example_Monster_parse_json_table+0x256c>
    3840:	.word	0x1fffffff
    3844:	ldr	r0, [fp, #-16]
    3848:	ldr	r1, [fp, #-20]	; 0xffffffec
    384c:	str	r1, [fp, #-48]	; 0xffffffd0
    3850:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3854:	movw	r3, #8
    3858:	bl	4e94 <flatcc_json_parser_match_symbol>
    385c:	str	r0, [fp, #-20]	; 0xffffffec
    3860:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3864:	ldr	r1, [fp, #-20]	; 0xffffffec
    3868:	cmp	r0, r1
    386c:	beq	395c <MyGame_Example_Monster_parse_json_table+0x2684>
    3870:	movw	r0, #0
    3874:	str	r0, [fp, #-88]	; 0xffffffa8
    3878:	ldr	r0, [fp, #-16]
    387c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3880:	str	r1, [fp, #-48]	; 0xffffffd0
    3884:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3888:	sub	r3, fp, #88	; 0x58
    388c:	bl	9250 <flatcc_json_parser_int32>
    3890:	str	r0, [fp, #-20]	; 0xffffffec
    3894:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3898:	ldr	r1, [fp, #-20]	; 0xffffffec
    389c:	cmp	r0, r1
    38a0:	bne	38fc <MyGame_Example_Monster_parse_json_table+0x2624>
    38a4:	ldr	r0, [fp, #-16]
    38a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    38ac:	str	r1, [fp, #-48]	; 0xffffffd0
    38b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    38b4:	movw	r3, #0
    38b8:	movt	r3, #0
    38bc:	sub	ip, fp, #88	; 0x58
    38c0:	str	ip, [sp]
    38c4:	bl	9328 <flatcc_json_parser_symbolic_int32>
    38c8:	str	r0, [fp, #-20]	; 0xffffffec
    38cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    38d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    38d4:	cmp	r0, r1
    38d8:	beq	38ec <MyGame_Example_Monster_parse_json_table+0x2614>
    38dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    38e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    38e4:	cmp	r0, r1
    38e8:	bne	38f8 <MyGame_Example_Monster_parse_json_table+0x2620>
    38ec:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    38f0:	.word	0x00000000
    38f4:	.word	0x41132cbc
    38f8:	b	38fc <MyGame_Example_Monster_parse_json_table+0x2624>
    38fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
    3900:	cmp	r0, #0
    3904:	bne	391c <MyGame_Example_Monster_parse_json_table+0x2644>
    3908:	ldr	r0, [fp, #-16]
    390c:	ldr	r0, [r0, #8]
    3910:	and	r0, r0, #2
    3914:	cmp	r0, #0
    3918:	beq	3958 <MyGame_Example_Monster_parse_json_table+0x2680>
    391c:	ldr	r0, [fp, #-16]
    3920:	ldr	r0, [r0]
    3924:	movw	r1, #16
    3928:	movw	r2, #4
    392c:	movw	r3, #4
    3930:	uxth	r3, r3
    3934:	bl	0 <flatcc_builder_table_add>
    3938:	str	r0, [fp, #-36]	; 0xffffffdc
    393c:	movw	r1, #0
    3940:	cmp	r0, r1
    3944:	bne	394c <MyGame_Example_Monster_parse_json_table+0x2674>
    3948:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    394c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3950:	ldr	r1, [fp, #-88]	; 0xffffffa8
    3954:	bl	9550 <flatbuffers_int32_write_to_pe>
    3958:	b	3ad0 <MyGame_Example_Monster_parse_json_table+0x27f8>
    395c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3960:	add	r0, r0, #8
    3964:	str	r0, [fp, #-20]	; 0xffffffec
    3968:	ldr	r0, [fp, #-20]	; 0xffffffec
    396c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3970:	bl	4e5c <flatcc_json_parser_symbol_part>
    3974:	str	r1, [fp, #-52]	; 0xffffffcc
    3978:	str	r0, [fp, #-56]	; 0xffffffc8
    397c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3980:	and	r0, r0, #-16777216	; 0xff000000
    3984:	teq	r0, #1627389952	; 0x61000000
    3988:	bne	3ab8 <MyGame_Example_Monster_parse_json_table+0x27e0>
    398c:	b	3990 <MyGame_Example_Monster_parse_json_table+0x26b8>
    3990:	ldr	r0, [fp, #-16]
    3994:	ldr	r1, [fp, #-20]	; 0xffffffec
    3998:	str	r1, [fp, #-48]	; 0xffffffd0
    399c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    39a0:	movw	r3, #1
    39a4:	bl	4e94 <flatcc_json_parser_match_symbol>
    39a8:	str	r0, [fp, #-20]	; 0xffffffec
    39ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    39b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    39b4:	cmp	r0, r1
    39b8:	beq	3aa0 <MyGame_Example_Monster_parse_json_table+0x27c8>
    39bc:	movw	r0, #0
    39c0:	str	r0, [fp, #-92]	; 0xffffffa4
    39c4:	ldr	r0, [fp, #-16]
    39c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    39cc:	str	r1, [fp, #-48]	; 0xffffffd0
    39d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    39d4:	sub	r3, fp, #92	; 0x5c
    39d8:	bl	9250 <flatcc_json_parser_int32>
    39dc:	str	r0, [fp, #-20]	; 0xffffffec
    39e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    39e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    39e8:	cmp	r0, r1
    39ec:	bne	3a40 <MyGame_Example_Monster_parse_json_table+0x2768>
    39f0:	ldr	r0, [fp, #-16]
    39f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    39f8:	str	r1, [fp, #-48]	; 0xffffffd0
    39fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a00:	movw	r3, #0
    3a04:	movt	r3, #0
    3a08:	sub	ip, fp, #92	; 0x5c
    3a0c:	str	ip, [sp]
    3a10:	bl	9328 <flatcc_json_parser_symbolic_int32>
    3a14:	str	r0, [fp, #-20]	; 0xffffffec
    3a18:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3a20:	cmp	r0, r1
    3a24:	beq	3a38 <MyGame_Example_Monster_parse_json_table+0x2760>
    3a28:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a30:	cmp	r0, r1
    3a34:	bne	3a3c <MyGame_Example_Monster_parse_json_table+0x2764>
    3a38:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3a3c:	b	3a40 <MyGame_Example_Monster_parse_json_table+0x2768>
    3a40:	ldr	r0, [fp, #-92]	; 0xffffffa4
    3a44:	cmp	r0, #0
    3a48:	bne	3a60 <MyGame_Example_Monster_parse_json_table+0x2788>
    3a4c:	ldr	r0, [fp, #-16]
    3a50:	ldr	r0, [r0, #8]
    3a54:	and	r0, r0, #2
    3a58:	cmp	r0, #0
    3a5c:	beq	3a9c <MyGame_Example_Monster_parse_json_table+0x27c4>
    3a60:	ldr	r0, [fp, #-16]
    3a64:	ldr	r0, [r0]
    3a68:	movw	r1, #20
    3a6c:	movw	r2, #4
    3a70:	movw	r3, #4
    3a74:	uxth	r3, r3
    3a78:	bl	0 <flatcc_builder_table_add>
    3a7c:	str	r0, [fp, #-36]	; 0xffffffdc
    3a80:	movw	r1, #0
    3a84:	cmp	r0, r1
    3a88:	bne	3a90 <MyGame_Example_Monster_parse_json_table+0x27b8>
    3a8c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3a90:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3a94:	ldr	r1, [fp, #-92]	; 0xffffffa4
    3a98:	bl	9550 <flatbuffers_int32_write_to_pe>
    3a9c:	b	3ab4 <MyGame_Example_Monster_parse_json_table+0x27dc>
    3aa0:	ldr	r0, [fp, #-16]
    3aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3aac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ab0:	str	r0, [fp, #-20]	; 0xffffffec
    3ab4:	b	3acc <MyGame_Example_Monster_parse_json_table+0x27f4>
    3ab8:	ldr	r0, [fp, #-16]
    3abc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ac0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ac4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ac8:	str	r0, [fp, #-20]	; 0xffffffec
    3acc:	b	3ad0 <MyGame_Example_Monster_parse_json_table+0x27f8>
    3ad0:	b	3ae8 <MyGame_Example_Monster_parse_json_table+0x2810>
    3ad4:	ldr	r0, [fp, #-16]
    3ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ae0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3ae4:	str	r0, [fp, #-20]	; 0xffffffec
    3ae8:	b	43cc <MyGame_Example_Monster_parse_json_table+0x30f4>
    3aec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3af0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3af4:	movw	r2, #30256	; 0x7630
    3af8:	movt	r2, #26222	; 0x666e
    3afc:	subs	r0, r2, r0
    3b00:	movw	r2, #12895	; 0x325f
    3b04:	movt	r2, #30003	; 0x7533
    3b08:	sbcs	r1, r2, r1
    3b0c:	str	r0, [sp, #36]	; 0x24
    3b10:	str	r1, [sp, #32]
    3b14:	bcc	3e14 <MyGame_Example_Monster_parse_json_table+0x2b3c>
    3b18:	b	3b1c <MyGame_Example_Monster_parse_json_table+0x2844>
    3b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3b20:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3b24:	movw	r2, #13407	; 0x345f
    3b28:	movt	r2, #29494	; 0x7336
    3b2c:	eor	r1, r1, r2
    3b30:	movw	r2, #30257	; 0x7631
    3b34:	movt	r2, #26222	; 0x666e
    3b38:	eor	r0, r0, r2
    3b3c:	orr	r0, r0, r1
    3b40:	cmp	r0, #0
    3b44:	bne	3dfc <MyGame_Example_Monster_parse_json_table+0x2b24>
    3b48:	b	3b4c <MyGame_Example_Monster_parse_json_table+0x2874>
    3b4c:	ldr	r0, [fp, #-16]
    3b50:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b54:	str	r1, [fp, #-48]	; 0xffffffd0
    3b58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b5c:	movw	r3, #8
    3b60:	bl	4e94 <flatcc_json_parser_match_symbol>
    3b64:	str	r0, [fp, #-20]	; 0xffffffec
    3b68:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b70:	cmp	r0, r1
    3b74:	beq	3c70 <MyGame_Example_Monster_parse_json_table+0x2998>
    3b78:	mov	r0, #0
    3b7c:	str	r0, [fp, #-100]	; 0xffffff9c
    3b80:	str	r0, [fp, #-104]	; 0xffffff98
    3b84:	ldr	r0, [fp, #-16]
    3b88:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b8c:	str	r1, [fp, #-48]	; 0xffffffd0
    3b90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b94:	sub	r3, fp, #104	; 0x68
    3b98:	bl	957c <flatcc_json_parser_int64>
    3b9c:	str	r0, [fp, #-20]	; 0xffffffec
    3ba0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ba8:	cmp	r0, r1
    3bac:	bne	3c00 <MyGame_Example_Monster_parse_json_table+0x2928>
    3bb0:	ldr	r0, [fp, #-16]
    3bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3bb8:	str	r1, [fp, #-48]	; 0xffffffd0
    3bbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3bc0:	movw	r3, #0
    3bc4:	movt	r3, #0
    3bc8:	sub	ip, fp, #104	; 0x68
    3bcc:	str	ip, [sp]
    3bd0:	bl	9654 <flatcc_json_parser_symbolic_int64>
    3bd4:	str	r0, [fp, #-20]	; 0xffffffec
    3bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
    3bdc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3be0:	cmp	r0, r1
    3be4:	beq	3bf8 <MyGame_Example_Monster_parse_json_table+0x2920>
    3be8:	ldr	r0, [fp, #-20]	; 0xffffffec
    3bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3bf0:	cmp	r0, r1
    3bf4:	bne	3bfc <MyGame_Example_Monster_parse_json_table+0x2924>
    3bf8:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3bfc:	b	3c00 <MyGame_Example_Monster_parse_json_table+0x2928>
    3c00:	ldr	r0, [fp, #-104]	; 0xffffff98
    3c04:	ldr	r1, [fp, #-100]	; 0xffffff9c
    3c08:	orr	r0, r0, r1
    3c0c:	cmp	r0, #0
    3c10:	bne	3c2c <MyGame_Example_Monster_parse_json_table+0x2954>
    3c14:	b	3c18 <MyGame_Example_Monster_parse_json_table+0x2940>
    3c18:	ldr	r0, [fp, #-16]
    3c1c:	ldr	r0, [r0, #8]
    3c20:	and	r0, r0, #2
    3c24:	cmp	r0, #0
    3c28:	beq	3c6c <MyGame_Example_Monster_parse_json_table+0x2994>
    3c2c:	ldr	r0, [fp, #-16]
    3c30:	ldr	r0, [r0]
    3c34:	movw	r1, #18
    3c38:	movw	r2, #8
    3c3c:	movw	r3, #8
    3c40:	uxth	r3, r3
    3c44:	bl	0 <flatcc_builder_table_add>
    3c48:	str	r0, [fp, #-36]	; 0xffffffdc
    3c4c:	movw	r1, #0
    3c50:	cmp	r0, r1
    3c54:	bne	3c5c <MyGame_Example_Monster_parse_json_table+0x2984>
    3c58:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3c60:	ldr	r2, [fp, #-104]	; 0xffffff98
    3c64:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3c68:	bl	9894 <flatbuffers_int64_write_to_pe>
    3c6c:	b	3df8 <MyGame_Example_Monster_parse_json_table+0x2b20>
    3c70:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c74:	add	r0, r0, #8
    3c78:	str	r0, [fp, #-20]	; 0xffffffec
    3c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c80:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3c84:	bl	4e5c <flatcc_json_parser_symbol_part>
    3c88:	str	r1, [fp, #-52]	; 0xffffffcc
    3c8c:	str	r0, [fp, #-56]	; 0xffffffc8
    3c90:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3c94:	and	r0, r0, #-16777216	; 0xff000000
    3c98:	teq	r0, #1627389952	; 0x61000000
    3c9c:	bne	3de0 <MyGame_Example_Monster_parse_json_table+0x2b08>
    3ca0:	b	3ca4 <MyGame_Example_Monster_parse_json_table+0x29cc>
    3ca4:	ldr	r0, [fp, #-16]
    3ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cac:	str	r1, [fp, #-48]	; 0xffffffd0
    3cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3cb4:	movw	r3, #1
    3cb8:	bl	4e94 <flatcc_json_parser_match_symbol>
    3cbc:	str	r0, [fp, #-20]	; 0xffffffec
    3cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cc8:	cmp	r0, r1
    3ccc:	beq	3dc8 <MyGame_Example_Monster_parse_json_table+0x2af0>
    3cd0:	mov	r0, #0
    3cd4:	str	r0, [fp, #-108]	; 0xffffff94
    3cd8:	str	r0, [fp, #-112]	; 0xffffff90
    3cdc:	ldr	r0, [fp, #-16]
    3ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ce4:	str	r1, [fp, #-48]	; 0xffffffd0
    3ce8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3cec:	sub	r3, fp, #112	; 0x70
    3cf0:	bl	957c <flatcc_json_parser_int64>
    3cf4:	str	r0, [fp, #-20]	; 0xffffffec
    3cf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3cfc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d00:	cmp	r0, r1
    3d04:	bne	3d58 <MyGame_Example_Monster_parse_json_table+0x2a80>
    3d08:	ldr	r0, [fp, #-16]
    3d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d10:	str	r1, [fp, #-48]	; 0xffffffd0
    3d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3d18:	movw	r3, #0
    3d1c:	movt	r3, #0
    3d20:	sub	ip, fp, #112	; 0x70
    3d24:	str	ip, [sp]
    3d28:	bl	9654 <flatcc_json_parser_symbolic_int64>
    3d2c:	str	r0, [fp, #-20]	; 0xffffffec
    3d30:	ldr	r0, [fp, #-20]	; 0xffffffec
    3d34:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d38:	cmp	r0, r1
    3d3c:	beq	3d50 <MyGame_Example_Monster_parse_json_table+0x2a78>
    3d40:	ldr	r0, [fp, #-20]	; 0xffffffec
    3d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3d48:	cmp	r0, r1
    3d4c:	bne	3d54 <MyGame_Example_Monster_parse_json_table+0x2a7c>
    3d50:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3d54:	b	3d58 <MyGame_Example_Monster_parse_json_table+0x2a80>
    3d58:	ldr	r0, [fp, #-112]	; 0xffffff90
    3d5c:	ldr	r1, [fp, #-108]	; 0xffffff94
    3d60:	orr	r0, r0, r1
    3d64:	cmp	r0, #0
    3d68:	bne	3d84 <MyGame_Example_Monster_parse_json_table+0x2aac>
    3d6c:	b	3d70 <MyGame_Example_Monster_parse_json_table+0x2a98>
    3d70:	ldr	r0, [fp, #-16]
    3d74:	ldr	r0, [r0, #8]
    3d78:	and	r0, r0, #2
    3d7c:	cmp	r0, #0
    3d80:	beq	3dc4 <MyGame_Example_Monster_parse_json_table+0x2aec>
    3d84:	ldr	r0, [fp, #-16]
    3d88:	ldr	r0, [r0]
    3d8c:	movw	r1, #22
    3d90:	movw	r2, #8
    3d94:	movw	r3, #8
    3d98:	uxth	r3, r3
    3d9c:	bl	0 <flatcc_builder_table_add>
    3da0:	str	r0, [fp, #-36]	; 0xffffffdc
    3da4:	movw	r1, #0
    3da8:	cmp	r0, r1
    3dac:	bne	3db4 <MyGame_Example_Monster_parse_json_table+0x2adc>
    3db0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3db8:	ldr	r2, [fp, #-112]	; 0xffffff90
    3dbc:	ldr	r3, [fp, #-108]	; 0xffffff94
    3dc0:	bl	9894 <flatbuffers_int64_write_to_pe>
    3dc4:	b	3ddc <MyGame_Example_Monster_parse_json_table+0x2b04>
    3dc8:	ldr	r0, [fp, #-16]
    3dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3dd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3dd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3dd8:	str	r0, [fp, #-20]	; 0xffffffec
    3ddc:	b	3df4 <MyGame_Example_Monster_parse_json_table+0x2b1c>
    3de0:	ldr	r0, [fp, #-16]
    3de4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3de8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3dec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3df0:	str	r0, [fp, #-20]	; 0xffffffec
    3df4:	b	3df8 <MyGame_Example_Monster_parse_json_table+0x2b20>
    3df8:	b	3e10 <MyGame_Example_Monster_parse_json_table+0x2b38>
    3dfc:	ldr	r0, [fp, #-16]
    3e00:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3e0c:	str	r0, [fp, #-20]	; 0xffffffec
    3e10:	b	43c8 <MyGame_Example_Monster_parse_json_table+0x30f0>
    3e14:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3e18:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3e1c:	movw	r2, #12895	; 0x325f
    3e20:	movt	r2, #30003	; 0x7533
    3e24:	eor	r1, r1, r2
    3e28:	movw	r2, #30257	; 0x7631
    3e2c:	movt	r2, #26222	; 0x666e
    3e30:	eor	r0, r0, r2
    3e34:	orr	r0, r0, r1
    3e38:	cmp	r0, #0
    3e3c:	bne	40cc <MyGame_Example_Monster_parse_json_table+0x2df4>
    3e40:	b	3e44 <MyGame_Example_Monster_parse_json_table+0x2b6c>
    3e44:	ldr	r0, [fp, #-16]
    3e48:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e4c:	str	r1, [fp, #-48]	; 0xffffffd0
    3e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e54:	movw	r3, #8
    3e58:	bl	4e94 <flatcc_json_parser_match_symbol>
    3e5c:	str	r0, [fp, #-20]	; 0xffffffec
    3e60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3e64:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e68:	cmp	r0, r1
    3e6c:	beq	3f54 <MyGame_Example_Monster_parse_json_table+0x2c7c>
    3e70:	movw	r0, #0
    3e74:	str	r0, [fp, #-116]	; 0xffffff8c
    3e78:	ldr	r0, [fp, #-16]
    3e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e80:	str	r1, [fp, #-48]	; 0xffffffd0
    3e84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e88:	sub	r3, fp, #116	; 0x74
    3e8c:	bl	98cc <flatcc_json_parser_uint32>
    3e90:	str	r0, [fp, #-20]	; 0xffffffec
    3e94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3e98:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e9c:	cmp	r0, r1
    3ea0:	bne	3ef4 <MyGame_Example_Monster_parse_json_table+0x2c1c>
    3ea4:	ldr	r0, [fp, #-16]
    3ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3eac:	str	r1, [fp, #-48]	; 0xffffffd0
    3eb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3eb4:	movw	r3, #0
    3eb8:	movt	r3, #0
    3ebc:	sub	ip, fp, #116	; 0x74
    3ec0:	str	ip, [sp]
    3ec4:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    3ec8:	str	r0, [fp, #-20]	; 0xffffffec
    3ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ed0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3ed4:	cmp	r0, r1
    3ed8:	beq	3eec <MyGame_Example_Monster_parse_json_table+0x2c14>
    3edc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3ee4:	cmp	r0, r1
    3ee8:	bne	3ef0 <MyGame_Example_Monster_parse_json_table+0x2c18>
    3eec:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3ef0:	b	3ef4 <MyGame_Example_Monster_parse_json_table+0x2c1c>
    3ef4:	ldr	r0, [fp, #-116]	; 0xffffff8c
    3ef8:	cmp	r0, #0
    3efc:	bne	3f14 <MyGame_Example_Monster_parse_json_table+0x2c3c>
    3f00:	ldr	r0, [fp, #-16]
    3f04:	ldr	r0, [r0, #8]
    3f08:	and	r0, r0, #2
    3f0c:	cmp	r0, #0
    3f10:	beq	3f50 <MyGame_Example_Monster_parse_json_table+0x2c78>
    3f14:	ldr	r0, [fp, #-16]
    3f18:	ldr	r0, [r0]
    3f1c:	movw	r1, #17
    3f20:	movw	r2, #4
    3f24:	movw	r3, #4
    3f28:	uxth	r3, r3
    3f2c:	bl	0 <flatcc_builder_table_add>
    3f30:	str	r0, [fp, #-36]	; 0xffffffdc
    3f34:	movw	r1, #0
    3f38:	cmp	r0, r1
    3f3c:	bne	3f44 <MyGame_Example_Monster_parse_json_table+0x2c6c>
    3f40:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    3f44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3f48:	ldr	r1, [fp, #-116]	; 0xffffff8c
    3f4c:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    3f50:	b	40c8 <MyGame_Example_Monster_parse_json_table+0x2df0>
    3f54:	ldr	r0, [fp, #-20]	; 0xffffffec
    3f58:	add	r0, r0, #8
    3f5c:	str	r0, [fp, #-20]	; 0xffffffec
    3f60:	ldr	r0, [fp, #-20]	; 0xffffffec
    3f64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3f68:	bl	4e5c <flatcc_json_parser_symbol_part>
    3f6c:	str	r1, [fp, #-52]	; 0xffffffcc
    3f70:	str	r0, [fp, #-56]	; 0xffffffc8
    3f74:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3f78:	and	r0, r0, #-16777216	; 0xff000000
    3f7c:	teq	r0, #1627389952	; 0x61000000
    3f80:	bne	40b0 <MyGame_Example_Monster_parse_json_table+0x2dd8>
    3f84:	b	3f88 <MyGame_Example_Monster_parse_json_table+0x2cb0>
    3f88:	ldr	r0, [fp, #-16]
    3f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f90:	str	r1, [fp, #-48]	; 0xffffffd0
    3f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f98:	movw	r3, #1
    3f9c:	bl	4e94 <flatcc_json_parser_match_symbol>
    3fa0:	str	r0, [fp, #-20]	; 0xffffffec
    3fa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3fa8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fac:	cmp	r0, r1
    3fb0:	beq	4098 <MyGame_Example_Monster_parse_json_table+0x2dc0>
    3fb4:	movw	r0, #0
    3fb8:	str	r0, [fp, #-120]	; 0xffffff88
    3fbc:	ldr	r0, [fp, #-16]
    3fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fc4:	str	r1, [fp, #-48]	; 0xffffffd0
    3fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fcc:	sub	r3, fp, #120	; 0x78
    3fd0:	bl	98cc <flatcc_json_parser_uint32>
    3fd4:	str	r0, [fp, #-20]	; 0xffffffec
    3fd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fe0:	cmp	r0, r1
    3fe4:	bne	4038 <MyGame_Example_Monster_parse_json_table+0x2d60>
    3fe8:	ldr	r0, [fp, #-16]
    3fec:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ff0:	str	r1, [fp, #-48]	; 0xffffffd0
    3ff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ff8:	movw	r3, #0
    3ffc:	movt	r3, #0
    4000:	sub	ip, fp, #120	; 0x78
    4004:	str	ip, [sp]
    4008:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    400c:	str	r0, [fp, #-20]	; 0xffffffec
    4010:	ldr	r0, [fp, #-20]	; 0xffffffec
    4014:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4018:	cmp	r0, r1
    401c:	beq	4030 <MyGame_Example_Monster_parse_json_table+0x2d58>
    4020:	ldr	r0, [fp, #-20]	; 0xffffffec
    4024:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4028:	cmp	r0, r1
    402c:	bne	4034 <MyGame_Example_Monster_parse_json_table+0x2d5c>
    4030:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4034:	b	4038 <MyGame_Example_Monster_parse_json_table+0x2d60>
    4038:	ldr	r0, [fp, #-120]	; 0xffffff88
    403c:	cmp	r0, #0
    4040:	bne	4058 <MyGame_Example_Monster_parse_json_table+0x2d80>
    4044:	ldr	r0, [fp, #-16]
    4048:	ldr	r0, [r0, #8]
    404c:	and	r0, r0, #2
    4050:	cmp	r0, #0
    4054:	beq	4094 <MyGame_Example_Monster_parse_json_table+0x2dbc>
    4058:	ldr	r0, [fp, #-16]
    405c:	ldr	r0, [r0]
    4060:	movw	r1, #21
    4064:	movw	r2, #4
    4068:	movw	r3, #4
    406c:	uxth	r3, r3
    4070:	bl	0 <flatcc_builder_table_add>
    4074:	str	r0, [fp, #-36]	; 0xffffffdc
    4078:	movw	r1, #0
    407c:	cmp	r0, r1
    4080:	bne	4088 <MyGame_Example_Monster_parse_json_table+0x2db0>
    4084:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4088:	ldr	r0, [fp, #-36]	; 0xffffffdc
    408c:	ldr	r1, [fp, #-120]	; 0xffffff88
    4090:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    4094:	b	40ac <MyGame_Example_Monster_parse_json_table+0x2dd4>
    4098:	ldr	r0, [fp, #-16]
    409c:	ldr	r1, [fp, #-20]	; 0xffffffec
    40a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    40a8:	str	r0, [fp, #-20]	; 0xffffffec
    40ac:	b	40c4 <MyGame_Example_Monster_parse_json_table+0x2dec>
    40b0:	ldr	r0, [fp, #-16]
    40b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    40b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    40c0:	str	r0, [fp, #-20]	; 0xffffffec
    40c4:	b	40c8 <MyGame_Example_Monster_parse_json_table+0x2df0>
    40c8:	b	43c4 <MyGame_Example_Monster_parse_json_table+0x30ec>
    40cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    40d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    40d4:	movw	r2, #13407	; 0x345f
    40d8:	movt	r2, #30006	; 0x7536
    40dc:	eor	r1, r1, r2
    40e0:	movw	r2, #30257	; 0x7631
    40e4:	movt	r2, #26222	; 0x666e
    40e8:	eor	r0, r0, r2
    40ec:	orr	r0, r0, r1
    40f0:	cmp	r0, #0
    40f4:	bne	43ac <MyGame_Example_Monster_parse_json_table+0x30d4>
    40f8:	b	40fc <MyGame_Example_Monster_parse_json_table+0x2e24>
    40fc:	ldr	r0, [fp, #-16]
    4100:	ldr	r1, [fp, #-20]	; 0xffffffec
    4104:	str	r1, [fp, #-48]	; 0xffffffd0
    4108:	ldr	r2, [fp, #-24]	; 0xffffffe8
    410c:	movw	r3, #8
    4110:	bl	4e94 <flatcc_json_parser_match_symbol>
    4114:	str	r0, [fp, #-20]	; 0xffffffec
    4118:	ldr	r0, [fp, #-48]	; 0xffffffd0
    411c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4120:	cmp	r0, r1
    4124:	beq	4220 <MyGame_Example_Monster_parse_json_table+0x2f48>
    4128:	mov	r0, #0
    412c:	str	r0, [fp, #-124]	; 0xffffff84
    4130:	str	r0, [fp, #-128]	; 0xffffff80
    4134:	ldr	r0, [fp, #-16]
    4138:	ldr	r1, [fp, #-20]	; 0xffffffec
    413c:	str	r1, [fp, #-48]	; 0xffffffd0
    4140:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4144:	sub	r3, fp, #128	; 0x80
    4148:	bl	9bf8 <flatcc_json_parser_uint64>
    414c:	str	r0, [fp, #-20]	; 0xffffffec
    4150:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4154:	ldr	r1, [fp, #-20]	; 0xffffffec
    4158:	cmp	r0, r1
    415c:	bne	41b0 <MyGame_Example_Monster_parse_json_table+0x2ed8>
    4160:	ldr	r0, [fp, #-16]
    4164:	ldr	r1, [fp, #-20]	; 0xffffffec
    4168:	str	r1, [fp, #-48]	; 0xffffffd0
    416c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4170:	movw	r3, #0
    4174:	movt	r3, #0
    4178:	sub	ip, fp, #128	; 0x80
    417c:	str	ip, [sp]
    4180:	bl	9cd0 <flatcc_json_parser_symbolic_uint64>
    4184:	str	r0, [fp, #-20]	; 0xffffffec
    4188:	ldr	r0, [fp, #-20]	; 0xffffffec
    418c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4190:	cmp	r0, r1
    4194:	beq	41a8 <MyGame_Example_Monster_parse_json_table+0x2ed0>
    4198:	ldr	r0, [fp, #-20]	; 0xffffffec
    419c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    41a0:	cmp	r0, r1
    41a4:	bne	41ac <MyGame_Example_Monster_parse_json_table+0x2ed4>
    41a8:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    41ac:	b	41b0 <MyGame_Example_Monster_parse_json_table+0x2ed8>
    41b0:	ldr	r0, [fp, #-128]	; 0xffffff80
    41b4:	ldr	r1, [fp, #-124]	; 0xffffff84
    41b8:	orr	r0, r0, r1
    41bc:	cmp	r0, #0
    41c0:	bne	41dc <MyGame_Example_Monster_parse_json_table+0x2f04>
    41c4:	b	41c8 <MyGame_Example_Monster_parse_json_table+0x2ef0>
    41c8:	ldr	r0, [fp, #-16]
    41cc:	ldr	r0, [r0, #8]
    41d0:	and	r0, r0, #2
    41d4:	cmp	r0, #0
    41d8:	beq	421c <MyGame_Example_Monster_parse_json_table+0x2f44>
    41dc:	ldr	r0, [fp, #-16]
    41e0:	ldr	r0, [r0]
    41e4:	movw	r1, #19
    41e8:	movw	r2, #8
    41ec:	movw	r3, #8
    41f0:	uxth	r3, r3
    41f4:	bl	0 <flatcc_builder_table_add>
    41f8:	str	r0, [fp, #-36]	; 0xffffffdc
    41fc:	movw	r1, #0
    4200:	cmp	r0, r1
    4204:	bne	420c <MyGame_Example_Monster_parse_json_table+0x2f34>
    4208:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    420c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4210:	ldr	r2, [fp, #-128]	; 0xffffff80
    4214:	ldr	r3, [fp, #-124]	; 0xffffff84
    4218:	bl	9f10 <flatbuffers_uint64_write_to_pe>
    421c:	b	43a8 <MyGame_Example_Monster_parse_json_table+0x30d0>
    4220:	ldr	r0, [fp, #-20]	; 0xffffffec
    4224:	add	r0, r0, #8
    4228:	str	r0, [fp, #-20]	; 0xffffffec
    422c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4230:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4234:	bl	4e5c <flatcc_json_parser_symbol_part>
    4238:	str	r1, [fp, #-52]	; 0xffffffcc
    423c:	str	r0, [fp, #-56]	; 0xffffffc8
    4240:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4244:	and	r0, r0, #-16777216	; 0xff000000
    4248:	teq	r0, #1627389952	; 0x61000000
    424c:	bne	4390 <MyGame_Example_Monster_parse_json_table+0x30b8>
    4250:	b	4254 <MyGame_Example_Monster_parse_json_table+0x2f7c>
    4254:	ldr	r0, [fp, #-16]
    4258:	ldr	r1, [fp, #-20]	; 0xffffffec
    425c:	str	r1, [fp, #-48]	; 0xffffffd0
    4260:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4264:	movw	r3, #1
    4268:	bl	4e94 <flatcc_json_parser_match_symbol>
    426c:	str	r0, [fp, #-20]	; 0xffffffec
    4270:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4274:	ldr	r1, [fp, #-20]	; 0xffffffec
    4278:	cmp	r0, r1
    427c:	beq	4378 <MyGame_Example_Monster_parse_json_table+0x30a0>
    4280:	mov	r0, #0
    4284:	str	r0, [fp, #-132]	; 0xffffff7c
    4288:	str	r0, [fp, #-136]	; 0xffffff78
    428c:	ldr	r0, [fp, #-16]
    4290:	ldr	r1, [fp, #-20]	; 0xffffffec
    4294:	str	r1, [fp, #-48]	; 0xffffffd0
    4298:	ldr	r2, [fp, #-24]	; 0xffffffe8
    429c:	sub	r3, fp, #136	; 0x88
    42a0:	bl	9bf8 <flatcc_json_parser_uint64>
    42a4:	str	r0, [fp, #-20]	; 0xffffffec
    42a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    42ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    42b0:	cmp	r0, r1
    42b4:	bne	4308 <MyGame_Example_Monster_parse_json_table+0x3030>
    42b8:	ldr	r0, [fp, #-16]
    42bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    42c0:	str	r1, [fp, #-48]	; 0xffffffd0
    42c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42c8:	movw	r3, #0
    42cc:	movt	r3, #0
    42d0:	sub	ip, fp, #136	; 0x88
    42d4:	str	ip, [sp]
    42d8:	bl	9cd0 <flatcc_json_parser_symbolic_uint64>
    42dc:	str	r0, [fp, #-20]	; 0xffffffec
    42e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    42e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    42e8:	cmp	r0, r1
    42ec:	beq	4300 <MyGame_Example_Monster_parse_json_table+0x3028>
    42f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    42f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    42f8:	cmp	r0, r1
    42fc:	bne	4304 <MyGame_Example_Monster_parse_json_table+0x302c>
    4300:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4304:	b	4308 <MyGame_Example_Monster_parse_json_table+0x3030>
    4308:	ldr	r0, [fp, #-136]	; 0xffffff78
    430c:	ldr	r1, [fp, #-132]	; 0xffffff7c
    4310:	orr	r0, r0, r1
    4314:	cmp	r0, #0
    4318:	bne	4334 <MyGame_Example_Monster_parse_json_table+0x305c>
    431c:	b	4320 <MyGame_Example_Monster_parse_json_table+0x3048>
    4320:	ldr	r0, [fp, #-16]
    4324:	ldr	r0, [r0, #8]
    4328:	and	r0, r0, #2
    432c:	cmp	r0, #0
    4330:	beq	4374 <MyGame_Example_Monster_parse_json_table+0x309c>
    4334:	ldr	r0, [fp, #-16]
    4338:	ldr	r0, [r0]
    433c:	movw	r1, #23
    4340:	movw	r2, #8
    4344:	movw	r3, #8
    4348:	uxth	r3, r3
    434c:	bl	0 <flatcc_builder_table_add>
    4350:	str	r0, [fp, #-36]	; 0xffffffdc
    4354:	movw	r1, #0
    4358:	cmp	r0, r1
    435c:	bne	4364 <MyGame_Example_Monster_parse_json_table+0x308c>
    4360:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4364:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4368:	ldr	r2, [fp, #-136]	; 0xffffff78
    436c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4370:	bl	9f10 <flatbuffers_uint64_write_to_pe>
    4374:	b	438c <MyGame_Example_Monster_parse_json_table+0x30b4>
    4378:	ldr	r0, [fp, #-16]
    437c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4380:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4384:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4388:	str	r0, [fp, #-20]	; 0xffffffec
    438c:	b	43a4 <MyGame_Example_Monster_parse_json_table+0x30cc>
    4390:	ldr	r0, [fp, #-16]
    4394:	ldr	r1, [fp, #-20]	; 0xffffffec
    4398:	ldr	r2, [fp, #-24]	; 0xffffffe8
    439c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    43a0:	str	r0, [fp, #-20]	; 0xffffffec
    43a4:	b	43a8 <MyGame_Example_Monster_parse_json_table+0x30d0>
    43a8:	b	43c0 <MyGame_Example_Monster_parse_json_table+0x30e8>
    43ac:	ldr	r0, [fp, #-16]
    43b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    43b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    43bc:	str	r0, [fp, #-20]	; 0xffffffec
    43c0:	b	43c4 <MyGame_Example_Monster_parse_json_table+0x30ec>
    43c4:	b	43c8 <MyGame_Example_Monster_parse_json_table+0x30f0>
    43c8:	b	43cc <MyGame_Example_Monster_parse_json_table+0x30f4>
    43cc:	b	4be0 <MyGame_Example_Monster_parse_json_table+0x3908>
    43d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    43d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    43d8:	movw	r2, #24430	; 0x5f6e
    43dc:	movt	r2, #28530	; 0x6f72
    43e0:	subs	r0, r2, r0
    43e4:	movw	r2, #25460	; 0x6374
    43e8:	movt	r2, #30309	; 0x7665
    43ec:	sbcs	r1, r2, r1
    43f0:	str	r0, [sp, #28]
    43f4:	str	r1, [sp, #24]
    43f8:	bcc	473c <MyGame_Example_Monster_parse_json_table+0x3464>
    43fc:	b	4400 <MyGame_Example_Monster_parse_json_table+0x3128>
    4400:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4404:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4408:	movw	r2, #29556	; 0x7374
    440c:	movt	r2, #29797	; 0x7465
    4410:	eor	r1, r1, r2
    4414:	movw	r2, #29556	; 0x7374
    4418:	movt	r2, #28261	; 0x6e65
    441c:	eor	r0, r0, r2
    4420:	orr	r0, r0, r1
    4424:	cmp	r0, #0
    4428:	bne	4724 <MyGame_Example_Monster_parse_json_table+0x344c>
    442c:	b	4430 <MyGame_Example_Monster_parse_json_table+0x3158>
    4430:	ldr	r0, [fp, #-20]	; 0xffffffec
    4434:	add	r0, r0, #8
    4438:	str	r0, [fp, #-20]	; 0xffffffec
    443c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4440:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4444:	bl	4e5c <flatcc_json_parser_symbol_part>
    4448:	str	r1, [fp, #-52]	; 0xffffffcc
    444c:	str	r0, [fp, #-56]	; 0xffffffc8
    4450:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4454:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4458:	movw	lr, #26220	; 0x666c
    445c:	movt	lr, #25956	; 0x6564
    4460:	eor	r1, r1, lr
    4464:	movw	lr, #25205	; 0x6275
    4468:	movt	lr, #24948	; 0x6174
    446c:	eor	r0, r0, lr
    4470:	orr	r0, r0, r1
    4474:	cmp	r0, #0
    4478:	bne	470c <MyGame_Example_Monster_parse_json_table+0x3434>
    447c:	b	4480 <MyGame_Example_Monster_parse_json_table+0x31a8>
    4480:	ldr	r0, [fp, #-20]	; 0xffffffec
    4484:	add	r0, r0, #8
    4488:	str	r0, [fp, #-20]	; 0xffffffec
    448c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4490:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4494:	bl	4e5c <flatcc_json_parser_symbol_part>
    4498:	str	r1, [fp, #-52]	; 0xffffffcc
    449c:	str	r0, [fp, #-56]	; 0xffffffc8
    44a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    44a4:	movw	r1, #25970	; 0x6572
    44a8:	movt	r1, #26214	; 0x6666
    44ac:	teq	r0, r1
    44b0:	bne	46f4 <MyGame_Example_Monster_parse_json_table+0x341c>
    44b4:	b	44b8 <MyGame_Example_Monster_parse_json_table+0x31e0>
    44b8:	ldr	r0, [fp, #-16]
    44bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    44c0:	str	r1, [fp, #-48]	; 0xffffffd0
    44c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44c8:	movw	r3, #4
    44cc:	bl	4e94 <flatcc_json_parser_match_symbol>
    44d0:	str	r0, [fp, #-20]	; 0xffffffec
    44d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    44d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    44dc:	cmp	r0, r1
    44e0:	beq	46dc <MyGame_Example_Monster_parse_json_table+0x3404>
    44e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    44e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    44ec:	cmp	r0, r1
    44f0:	beq	4634 <MyGame_Example_Monster_parse_json_table+0x335c>
    44f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    44f8:	ldrb	r0, [r0]
    44fc:	cmp	r0, #91	; 0x5b
    4500:	bne	4634 <MyGame_Example_Monster_parse_json_table+0x335c>
    4504:	ldr	r0, [fp, #-16]
    4508:	ldr	r0, [r0]
    450c:	movw	r1, #1
    4510:	movw	r2, #1
    4514:	uxth	r2, r2
    4518:	mvn	r3, #0
    451c:	bl	0 <flatcc_builder_start_vector>
    4520:	cmp	r0, #0
    4524:	beq	452c <MyGame_Example_Monster_parse_json_table+0x3254>
    4528:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    452c:	ldr	r0, [fp, #-16]
    4530:	ldr	r1, [fp, #-20]	; 0xffffffec
    4534:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4538:	sub	r3, fp, #32
    453c:	bl	6744 <flatcc_json_parser_array_start>
    4540:	str	r0, [fp, #-20]	; 0xffffffec
    4544:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4548:	cmp	r0, #0
    454c:	beq	4620 <MyGame_Example_Monster_parse_json_table+0x3348>
    4550:	movw	r0, #0
    4554:	strb	r0, [fp, #-137]	; 0xffffff77
    4558:	ldr	r0, [fp, #-16]
    455c:	ldr	r0, [r0]
    4560:	movw	r1, #1
    4564:	bl	0 <flatcc_builder_extend_vector>
    4568:	str	r0, [fp, #-36]	; 0xffffffdc
    456c:	movw	r1, #0
    4570:	cmp	r0, r1
    4574:	bne	457c <MyGame_Example_Monster_parse_json_table+0x32a4>
    4578:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    457c:	ldr	r0, [fp, #-16]
    4580:	ldr	r1, [fp, #-20]	; 0xffffffec
    4584:	str	r1, [fp, #-48]	; 0xffffffd0
    4588:	ldr	r2, [fp, #-24]	; 0xffffffe8
    458c:	sub	r3, fp, #137	; 0x89
    4590:	bl	6828 <flatcc_json_parser_uint8>
    4594:	str	r0, [fp, #-20]	; 0xffffffec
    4598:	ldr	r0, [fp, #-48]	; 0xffffffd0
    459c:	ldr	r1, [fp, #-20]	; 0xffffffec
    45a0:	cmp	r0, r1
    45a4:	bne	45f8 <MyGame_Example_Monster_parse_json_table+0x3320>
    45a8:	ldr	r0, [fp, #-16]
    45ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    45b0:	str	r1, [fp, #-48]	; 0xffffffd0
    45b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45b8:	movw	r3, #0
    45bc:	movt	r3, #0
    45c0:	sub	ip, fp, #137	; 0x89
    45c4:	str	ip, [sp]
    45c8:	bl	6904 <flatcc_json_parser_symbolic_uint8>
    45cc:	str	r0, [fp, #-20]	; 0xffffffec
    45d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    45d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    45d8:	cmp	r0, r1
    45dc:	beq	45f0 <MyGame_Example_Monster_parse_json_table+0x3318>
    45e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    45e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    45e8:	cmp	r0, r1
    45ec:	bne	45f4 <MyGame_Example_Monster_parse_json_table+0x331c>
    45f0:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    45f4:	b	45f8 <MyGame_Example_Monster_parse_json_table+0x3320>
    45f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    45fc:	ldrb	r1, [fp, #-137]	; 0xffffff77
    4600:	bl	6b30 <flatbuffers_uint8_write_to_pe>
    4604:	ldr	r0, [fp, #-16]
    4608:	ldr	r1, [fp, #-20]	; 0xffffffec
    460c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4610:	sub	r3, fp, #32
    4614:	bl	6b5c <flatcc_json_parser_array_end>
    4618:	str	r0, [fp, #-20]	; 0xffffffec
    461c:	b	4544 <MyGame_Example_Monster_parse_json_table+0x326c>
    4620:	ldr	r0, [fp, #-16]
    4624:	ldr	r0, [r0]
    4628:	bl	0 <flatcc_builder_end_vector>
    462c:	str	r0, [fp, #-40]	; 0xffffffd8
    4630:	b	469c <MyGame_Example_Monster_parse_json_table+0x33c4>
    4634:	ldr	r0, [fp, #-16]
    4638:	ldr	r0, [r0]
    463c:	movw	r1, #0
    4640:	str	r1, [sp, #20]
    4644:	movw	r2, #0
    4648:	uxth	r2, r2
    464c:	ldr	r3, [sp, #20]
    4650:	bl	0 <flatcc_builder_start_buffer>
    4654:	cmp	r0, #0
    4658:	beq	4660 <MyGame_Example_Monster_parse_json_table+0x3388>
    465c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4660:	ldr	r0, [fp, #-16]
    4664:	ldr	r1, [fp, #-20]	; 0xffffffec
    4668:	ldr	r2, [fp, #-24]	; 0xffffffe8
    466c:	sub	r3, fp, #40	; 0x28
    4670:	bl	12d8 <MyGame_Example_Monster_parse_json_table>
    4674:	str	r0, [fp, #-20]	; 0xffffffec
    4678:	ldr	r0, [fp, #-40]	; 0xffffffd8
    467c:	cmp	r0, #0
    4680:	bne	4688 <MyGame_Example_Monster_parse_json_table+0x33b0>
    4684:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4688:	ldr	r0, [fp, #-16]
    468c:	ldr	r0, [r0]
    4690:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4694:	bl	0 <flatcc_builder_end_buffer>
    4698:	str	r0, [fp, #-40]	; 0xffffffd8
    469c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    46a0:	cmp	r0, #0
    46a4:	beq	46c8 <MyGame_Example_Monster_parse_json_table+0x33f0>
    46a8:	ldr	r0, [fp, #-16]
    46ac:	ldr	r0, [r0]
    46b0:	movw	r1, #13
    46b4:	bl	0 <flatcc_builder_table_add_offset>
    46b8:	str	r0, [fp, #-44]	; 0xffffffd4
    46bc:	movw	r1, #0
    46c0:	cmp	r0, r1
    46c4:	bne	46cc <MyGame_Example_Monster_parse_json_table+0x33f4>
    46c8:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    46cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    46d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    46d4:	str	r0, [r1]
    46d8:	b	46f0 <MyGame_Example_Monster_parse_json_table+0x3418>
    46dc:	ldr	r0, [fp, #-16]
    46e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    46e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    46e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    46ec:	str	r0, [fp, #-20]	; 0xffffffec
    46f0:	b	4708 <MyGame_Example_Monster_parse_json_table+0x3430>
    46f4:	ldr	r0, [fp, #-16]
    46f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    46fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4704:	str	r0, [fp, #-20]	; 0xffffffec
    4708:	b	4720 <MyGame_Example_Monster_parse_json_table+0x3448>
    470c:	ldr	r0, [fp, #-16]
    4710:	ldr	r1, [fp, #-20]	; 0xffffffec
    4714:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4718:	bl	0 <flatcc_json_parser_unmatched_symbol>
    471c:	str	r0, [fp, #-20]	; 0xffffffec
    4720:	b	4738 <MyGame_Example_Monster_parse_json_table+0x3460>
    4724:	ldr	r0, [fp, #-16]
    4728:	ldr	r1, [fp, #-20]	; 0xffffffec
    472c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4730:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4734:	str	r0, [fp, #-20]	; 0xffffffec
    4738:	b	4bdc <MyGame_Example_Monster_parse_json_table+0x3904>
    473c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4740:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4744:	movw	r2, #25460	; 0x6374
    4748:	movt	r2, #30309	; 0x7665
    474c:	eor	r1, r1, r2
    4750:	movw	r2, #24431	; 0x5f6f
    4754:	movt	r2, #28530	; 0x6f72
    4758:	eor	r0, r0, r2
    475c:	orr	r0, r0, r1
    4760:	cmp	r0, #0
    4764:	bne	4bc4 <MyGame_Example_Monster_parse_json_table+0x38ec>
    4768:	b	476c <MyGame_Example_Monster_parse_json_table+0x3494>
    476c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4770:	add	r0, r0, #8
    4774:	str	r0, [fp, #-20]	; 0xffffffec
    4778:	ldr	r0, [fp, #-20]	; 0xffffffec
    477c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4780:	bl	4e5c <flatcc_json_parser_symbol_part>
    4784:	str	r1, [fp, #-52]	; 0xffffffcc
    4788:	str	r0, [fp, #-56]	; 0xffffffc8
    478c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4790:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4794:	movw	lr, #25711	; 0x646f
    4798:	movt	lr, #26207	; 0x665f
    479c:	eor	r1, r1, lr
    47a0:	movw	lr, #27749	; 0x6c65
    47a4:	movt	lr, #30050	; 0x7562
    47a8:	eor	r0, r0, lr
    47ac:	orr	r0, r0, r1
    47b0:	cmp	r0, #0
    47b4:	bne	49b8 <MyGame_Example_Monster_parse_json_table+0x36e0>
    47b8:	b	47bc <MyGame_Example_Monster_parse_json_table+0x34e4>
    47bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    47c0:	add	r0, r0, #8
    47c4:	str	r0, [fp, #-20]	; 0xffffffec
    47c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    47cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    47d0:	bl	4e5c <flatcc_json_parser_symbol_part>
    47d4:	str	r1, [fp, #-52]	; 0xffffffcc
    47d8:	str	r0, [fp, #-56]	; 0xffffffc8
    47dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    47e0:	and	r0, r0, #-16777216	; 0xff000000
    47e4:	teq	r0, #1929379840	; 0x73000000
    47e8:	bne	49a0 <MyGame_Example_Monster_parse_json_table+0x36c8>
    47ec:	b	47f0 <MyGame_Example_Monster_parse_json_table+0x3518>
    47f0:	ldr	r0, [fp, #-16]
    47f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    47f8:	str	r1, [fp, #-48]	; 0xffffffd0
    47fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4800:	movw	r3, #1
    4804:	bl	4e94 <flatcc_json_parser_match_symbol>
    4808:	str	r0, [fp, #-20]	; 0xffffffec
    480c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4810:	ldr	r1, [fp, #-20]	; 0xffffffec
    4814:	cmp	r0, r1
    4818:	beq	4988 <MyGame_Example_Monster_parse_json_table+0x36b0>
    481c:	ldr	r3, [pc, #1188]	; 4cc8 <MyGame_Example_Monster_parse_json_table+0x39f0>
    4820:	ldr	r0, [fp, #-16]
    4824:	ldr	r0, [r0]
    4828:	movw	r1, #8
    482c:	movw	r2, #8
    4830:	uxth	r2, r2
    4834:	bl	0 <flatcc_builder_start_vector>
    4838:	cmp	r0, #0
    483c:	beq	4844 <MyGame_Example_Monster_parse_json_table+0x356c>
    4840:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4844:	ldr	r0, [fp, #-16]
    4848:	ldr	r1, [fp, #-20]	; 0xffffffec
    484c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4850:	sub	r3, fp, #32
    4854:	bl	6744 <flatcc_json_parser_array_start>
    4858:	str	r0, [fp, #-20]	; 0xffffffec
    485c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4860:	cmp	r0, #0
    4864:	beq	4938 <MyGame_Example_Monster_parse_json_table+0x3660>
    4868:	vldr	d16, [pc, #1000]	; 4c58 <MyGame_Example_Monster_parse_json_table+0x3980>
    486c:	vstr	d16, [sp, #136]	; 0x88
    4870:	ldr	r0, [fp, #-16]
    4874:	ldr	r0, [r0]
    4878:	movw	r1, #1
    487c:	bl	0 <flatcc_builder_extend_vector>
    4880:	str	r0, [fp, #-36]	; 0xffffffdc
    4884:	movw	r1, #0
    4888:	cmp	r0, r1
    488c:	bne	4894 <MyGame_Example_Monster_parse_json_table+0x35bc>
    4890:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4894:	ldr	r0, [fp, #-16]
    4898:	ldr	r1, [fp, #-20]	; 0xffffffec
    489c:	str	r1, [fp, #-48]	; 0xffffffd0
    48a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48a4:	add	r3, sp, #136	; 0x88
    48a8:	bl	0 <flatcc_json_parser_double>
    48ac:	str	r0, [fp, #-20]	; 0xffffffec
    48b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    48b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    48b8:	cmp	r0, r1
    48bc:	bne	4910 <MyGame_Example_Monster_parse_json_table+0x3638>
    48c0:	ldr	r0, [fp, #-16]
    48c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    48c8:	str	r1, [fp, #-48]	; 0xffffffd0
    48cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48d0:	movw	r3, #0
    48d4:	movt	r3, #0
    48d8:	add	ip, sp, #136	; 0x88
    48dc:	str	ip, [sp]
    48e0:	bl	9f48 <flatcc_json_parser_symbolic_double>
    48e4:	str	r0, [fp, #-20]	; 0xffffffec
    48e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    48ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
    48f0:	cmp	r0, r1
    48f4:	beq	4908 <MyGame_Example_Monster_parse_json_table+0x3630>
    48f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    48fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4900:	cmp	r0, r1
    4904:	bne	490c <MyGame_Example_Monster_parse_json_table+0x3634>
    4908:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    490c:	b	4910 <MyGame_Example_Monster_parse_json_table+0x3638>
    4910:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4914:	vldr	d0, [sp, #136]	; 0x88
    4918:	bl	a180 <flatbuffers_double_write_to_pe>
    491c:	ldr	r0, [fp, #-16]
    4920:	ldr	r1, [fp, #-20]	; 0xffffffec
    4924:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4928:	sub	r3, fp, #32
    492c:	bl	6b5c <flatcc_json_parser_array_end>
    4930:	str	r0, [fp, #-20]	; 0xffffffec
    4934:	b	485c <MyGame_Example_Monster_parse_json_table+0x3584>
    4938:	ldr	r0, [fp, #-16]
    493c:	ldr	r0, [r0]
    4940:	bl	0 <flatcc_builder_end_vector>
    4944:	str	r0, [fp, #-40]	; 0xffffffd8
    4948:	ldr	r0, [fp, #-40]	; 0xffffffd8
    494c:	cmp	r0, #0
    4950:	beq	4974 <MyGame_Example_Monster_parse_json_table+0x369c>
    4954:	ldr	r0, [fp, #-16]
    4958:	ldr	r0, [r0]
    495c:	movw	r1, #33	; 0x21
    4960:	bl	0 <flatcc_builder_table_add_offset>
    4964:	str	r0, [fp, #-44]	; 0xffffffd4
    4968:	movw	r1, #0
    496c:	cmp	r0, r1
    4970:	bne	4978 <MyGame_Example_Monster_parse_json_table+0x36a0>
    4974:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4978:	ldr	r0, [fp, #-40]	; 0xffffffd8
    497c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4980:	str	r0, [r1]
    4984:	b	499c <MyGame_Example_Monster_parse_json_table+0x36c4>
    4988:	ldr	r0, [fp, #-16]
    498c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4990:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4994:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4998:	str	r0, [fp, #-20]	; 0xffffffec
    499c:	b	49b4 <MyGame_Example_Monster_parse_json_table+0x36dc>
    49a0:	ldr	r0, [fp, #-16]
    49a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    49a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    49ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    49b0:	str	r0, [fp, #-20]	; 0xffffffec
    49b4:	b	4bc0 <MyGame_Example_Monster_parse_json_table+0x38e8>
    49b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    49bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    49c0:	movw	r2, #24428	; 0x5f6c
    49c4:	movt	r2, #102	; 0x66
    49c8:	eor	r2, r2, r1, lsr #8
    49cc:	lsr	r0, r0, #8
    49d0:	orr	r0, r0, r1, lsl #24
    49d4:	movw	r1, #26483	; 0x6773
    49d8:	movt	r1, #28526	; 0x6f6e
    49dc:	eor	r0, r0, r1
    49e0:	orr	r0, r0, r2
    49e4:	cmp	r0, #0
    49e8:	bne	4ba8 <MyGame_Example_Monster_parse_json_table+0x38d0>
    49ec:	b	49f0 <MyGame_Example_Monster_parse_json_table+0x3718>
    49f0:	ldr	r0, [fp, #-16]
    49f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    49f8:	str	r1, [fp, #-48]	; 0xffffffd0
    49fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4a00:	movw	r3, #7
    4a04:	bl	4e94 <flatcc_json_parser_match_symbol>
    4a08:	str	r0, [fp, #-20]	; 0xffffffec
    4a0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4a10:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a14:	cmp	r0, r1
    4a18:	beq	4b90 <MyGame_Example_Monster_parse_json_table+0x38b8>
    4a1c:	ldr	r3, [pc, #676]	; 4cc8 <MyGame_Example_Monster_parse_json_table+0x39f0>
    4a20:	ldr	r0, [fp, #-16]
    4a24:	ldr	r0, [r0]
    4a28:	movw	r1, #8
    4a2c:	movw	r2, #8
    4a30:	uxth	r2, r2
    4a34:	bl	0 <flatcc_builder_start_vector>
    4a38:	cmp	r0, #0
    4a3c:	beq	4a44 <MyGame_Example_Monster_parse_json_table+0x376c>
    4a40:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4a44:	ldr	r0, [fp, #-16]
    4a48:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4a50:	sub	r3, fp, #32
    4a54:	bl	6744 <flatcc_json_parser_array_start>
    4a58:	str	r0, [fp, #-20]	; 0xffffffec
    4a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4a60:	cmp	r0, #0
    4a64:	beq	4b40 <MyGame_Example_Monster_parse_json_table+0x3868>
    4a68:	mov	r0, #0
    4a6c:	str	r0, [sp, #132]	; 0x84
    4a70:	str	r0, [sp, #128]	; 0x80
    4a74:	ldr	r0, [fp, #-16]
    4a78:	ldr	r0, [r0]
    4a7c:	movw	r1, #1
    4a80:	bl	0 <flatcc_builder_extend_vector>
    4a84:	str	r0, [fp, #-36]	; 0xffffffdc
    4a88:	movw	r1, #0
    4a8c:	cmp	r0, r1
    4a90:	bne	4a98 <MyGame_Example_Monster_parse_json_table+0x37c0>
    4a94:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4a98:	ldr	r0, [fp, #-16]
    4a9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4aa0:	str	r1, [fp, #-48]	; 0xffffffd0
    4aa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4aa8:	add	r3, sp, #128	; 0x80
    4aac:	bl	957c <flatcc_json_parser_int64>
    4ab0:	str	r0, [fp, #-20]	; 0xffffffec
    4ab4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4abc:	cmp	r0, r1
    4ac0:	bne	4b14 <MyGame_Example_Monster_parse_json_table+0x383c>
    4ac4:	ldr	r0, [fp, #-16]
    4ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4acc:	str	r1, [fp, #-48]	; 0xffffffd0
    4ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4ad4:	movw	r3, #0
    4ad8:	movt	r3, #0
    4adc:	add	ip, sp, #128	; 0x80
    4ae0:	str	ip, [sp]
    4ae4:	bl	9654 <flatcc_json_parser_symbolic_int64>
    4ae8:	str	r0, [fp, #-20]	; 0xffffffec
    4aec:	ldr	r0, [fp, #-20]	; 0xffffffec
    4af0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4af4:	cmp	r0, r1
    4af8:	beq	4b0c <MyGame_Example_Monster_parse_json_table+0x3834>
    4afc:	ldr	r0, [fp, #-20]	; 0xffffffec
    4b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4b04:	cmp	r0, r1
    4b08:	bne	4b10 <MyGame_Example_Monster_parse_json_table+0x3838>
    4b0c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4b10:	b	4b14 <MyGame_Example_Monster_parse_json_table+0x383c>
    4b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4b18:	ldr	r2, [sp, #128]	; 0x80
    4b1c:	ldr	r3, [sp, #132]	; 0x84
    4b20:	bl	9894 <flatbuffers_int64_write_to_pe>
    4b24:	ldr	r0, [fp, #-16]
    4b28:	ldr	r1, [fp, #-20]	; 0xffffffec
    4b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4b30:	sub	r3, fp, #32
    4b34:	bl	6b5c <flatcc_json_parser_array_end>
    4b38:	str	r0, [fp, #-20]	; 0xffffffec
    4b3c:	b	4a5c <MyGame_Example_Monster_parse_json_table+0x3784>
    4b40:	ldr	r0, [fp, #-16]
    4b44:	ldr	r0, [r0]
    4b48:	bl	0 <flatcc_builder_end_vector>
    4b4c:	str	r0, [fp, #-40]	; 0xffffffd8
    4b50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4b54:	cmp	r0, #0
    4b58:	beq	4b7c <MyGame_Example_Monster_parse_json_table+0x38a4>
    4b5c:	ldr	r0, [fp, #-16]
    4b60:	ldr	r0, [r0]
    4b64:	movw	r1, #32
    4b68:	bl	0 <flatcc_builder_table_add_offset>
    4b6c:	str	r0, [fp, #-44]	; 0xffffffd4
    4b70:	movw	r1, #0
    4b74:	cmp	r0, r1
    4b78:	bne	4b80 <MyGame_Example_Monster_parse_json_table+0x38a8>
    4b7c:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4b84:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4b88:	str	r0, [r1]
    4b8c:	b	4ba4 <MyGame_Example_Monster_parse_json_table+0x38cc>
    4b90:	ldr	r0, [fp, #-16]
    4b94:	ldr	r1, [fp, #-20]	; 0xffffffec
    4b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4b9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4ba0:	str	r0, [fp, #-20]	; 0xffffffec
    4ba4:	b	4bbc <MyGame_Example_Monster_parse_json_table+0x38e4>
    4ba8:	ldr	r0, [fp, #-16]
    4bac:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4bb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4bb8:	str	r0, [fp, #-20]	; 0xffffffec
    4bbc:	b	4bc0 <MyGame_Example_Monster_parse_json_table+0x38e8>
    4bc0:	b	4bd8 <MyGame_Example_Monster_parse_json_table+0x3900>
    4bc4:	ldr	r0, [fp, #-16]
    4bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4bd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4bd4:	str	r0, [fp, #-20]	; 0xffffffec
    4bd8:	b	4bdc <MyGame_Example_Monster_parse_json_table+0x3904>
    4bdc:	b	4be0 <MyGame_Example_Monster_parse_json_table+0x3908>
    4be0:	b	4be4 <MyGame_Example_Monster_parse_json_table+0x390c>
    4be4:	b	4be8 <MyGame_Example_Monster_parse_json_table+0x3910>
    4be8:	b	4bec <MyGame_Example_Monster_parse_json_table+0x3914>
    4bec:	ldr	r0, [fp, #-16]
    4bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4bf8:	sub	r3, fp, #32
    4bfc:	bl	a1ac <flatcc_json_parser_object_end>
    4c00:	str	r0, [fp, #-20]	; 0xffffffec
    4c04:	b	1374 <MyGame_Example_Monster_parse_json_table+0x9c>
    4c08:	ldr	r0, [fp, #-16]
    4c0c:	ldr	r0, [r0, #24]
    4c10:	cmp	r0, #0
    4c14:	beq	4c1c <MyGame_Example_Monster_parse_json_table+0x3944>
    4c18:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4c1c:	ldr	r0, [fp, #-16]
    4c20:	ldr	r0, [r0]
    4c24:	movw	r1, #3
    4c28:	uxth	r1, r1
    4c2c:	bl	0 <flatcc_builder_check_required_field>
    4c30:	cmp	r0, #0
    4c34:	bne	4c60 <MyGame_Example_Monster_parse_json_table+0x3988>
    4c38:	ldr	r0, [fp, #-16]
    4c3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c40:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4c44:	movw	r3, #29
    4c48:	bl	0 <flatcc_json_parser_set_error>
    4c4c:	str	r0, [fp, #-20]	; 0xffffffec
    4c50:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4c54:	nop	{0}
	...
    4c60:	ldr	r0, [fp, #-16]
    4c64:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4c6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4c70:	bl	0 <flatcc_json_parser_finalize_unions>
    4c74:	str	r0, [fp, #-20]	; 0xffffffec
    4c78:	ldr	r0, [fp, #-16]
    4c7c:	ldr	r0, [r0]
    4c80:	bl	0 <flatcc_builder_end_table>
    4c84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4c88:	str	r0, [r1]
    4c8c:	cmp	r0, #0
    4c90:	bne	4c98 <MyGame_Example_Monster_parse_json_table+0x39c0>
    4c94:	b	4ca4 <MyGame_Example_Monster_parse_json_table+0x39cc>
    4c98:	ldr	r0, [fp, #-20]	; 0xffffffec
    4c9c:	str	r0, [fp, #-12]
    4ca0:	b	4cbc <MyGame_Example_Monster_parse_json_table+0x39e4>
    4ca4:	ldr	r0, [fp, #-16]
    4ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4cac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4cb0:	movw	r3, #33	; 0x21
    4cb4:	bl	0 <flatcc_json_parser_set_error>
    4cb8:	str	r0, [fp, #-12]
    4cbc:	ldr	r0, [fp, #-12]
    4cc0:	sub	sp, fp, #8
    4cc4:	pop	{r4, r5, fp, pc}
    4cc8:	.word	0x1fffffff

00004ccc <flatcc_json_parser_object_start>:
    4ccc:	push	{fp, lr}
    4cd0:	mov	fp, sp
    4cd4:	sub	sp, sp, #24
    4cd8:	str	r0, [fp, #-8]
    4cdc:	str	r1, [sp, #12]
    4ce0:	str	r2, [sp, #8]
    4ce4:	str	r3, [sp, #4]
    4ce8:	ldr	r0, [sp, #12]
    4cec:	ldr	r1, [sp, #8]
    4cf0:	cmp	r0, r1
    4cf4:	beq	4d08 <flatcc_json_parser_object_start+0x3c>
    4cf8:	ldr	r0, [sp, #12]
    4cfc:	ldrb	r0, [r0]
    4d00:	cmp	r0, #123	; 0x7b
    4d04:	beq	4d30 <flatcc_json_parser_object_start+0x64>
    4d08:	ldr	r0, [sp, #4]
    4d0c:	movw	r1, #0
    4d10:	str	r1, [r0]
    4d14:	ldr	r0, [fp, #-8]
    4d18:	ldr	r1, [sp, #12]
    4d1c:	ldr	r2, [sp, #8]
    4d20:	movw	r3, #21
    4d24:	bl	0 <flatcc_json_parser_set_error>
    4d28:	str	r0, [fp, #-4]
    4d2c:	b	4da4 <flatcc_json_parser_object_start+0xd8>
    4d30:	ldr	r0, [fp, #-8]
    4d34:	ldr	r1, [sp, #12]
    4d38:	add	r1, r1, #1
    4d3c:	ldr	r2, [sp, #8]
    4d40:	bl	a310 <flatcc_json_parser_space>
    4d44:	str	r0, [sp, #12]
    4d48:	ldr	r0, [sp, #12]
    4d4c:	ldr	r1, [sp, #8]
    4d50:	cmp	r0, r1
    4d54:	beq	4d90 <flatcc_json_parser_object_start+0xc4>
    4d58:	ldr	r0, [sp, #12]
    4d5c:	ldrb	r0, [r0]
    4d60:	cmp	r0, #125	; 0x7d
    4d64:	bne	4d90 <flatcc_json_parser_object_start+0xc4>
    4d68:	ldr	r0, [sp, #4]
    4d6c:	movw	r1, #0
    4d70:	str	r1, [r0]
    4d74:	ldr	r0, [fp, #-8]
    4d78:	ldr	r1, [sp, #12]
    4d7c:	add	r1, r1, #1
    4d80:	ldr	r2, [sp, #8]
    4d84:	bl	a310 <flatcc_json_parser_space>
    4d88:	str	r0, [fp, #-4]
    4d8c:	b	4da4 <flatcc_json_parser_object_start+0xd8>
    4d90:	ldr	r0, [sp, #4]
    4d94:	movw	r1, #1
    4d98:	str	r1, [r0]
    4d9c:	ldr	r0, [sp, #12]
    4da0:	str	r0, [fp, #-4]
    4da4:	ldr	r0, [fp, #-4]
    4da8:	mov	sp, fp
    4dac:	pop	{fp, pc}

00004db0 <flatcc_json_parser_symbol_start>:
    4db0:	push	{fp, lr}
    4db4:	mov	fp, sp
    4db8:	sub	sp, sp, #16
    4dbc:	str	r0, [sp, #8]
    4dc0:	str	r1, [sp, #4]
    4dc4:	str	r2, [sp]
    4dc8:	ldr	r0, [sp, #4]
    4dcc:	ldr	r1, [sp]
    4dd0:	cmp	r0, r1
    4dd4:	bne	4de4 <flatcc_json_parser_symbol_start+0x34>
    4dd8:	ldr	r0, [sp, #4]
    4ddc:	str	r0, [fp, #-4]
    4de0:	b	4e50 <flatcc_json_parser_symbol_start+0xa0>
    4de4:	ldr	r0, [sp, #4]
    4de8:	ldrb	r0, [r0]
    4dec:	cmp	r0, #34	; 0x22
    4df0:	bne	4e10 <flatcc_json_parser_symbol_start+0x60>
    4df4:	ldr	r0, [sp, #4]
    4df8:	add	r0, r0, #1
    4dfc:	str	r0, [sp, #4]
    4e00:	ldr	r0, [sp, #8]
    4e04:	movw	r1, #0
    4e08:	str	r1, [r0, #12]
    4e0c:	b	4e48 <flatcc_json_parser_symbol_start+0x98>
    4e10:	ldr	r0, [sp, #4]
    4e14:	ldrb	r0, [r0]
    4e18:	cmp	r0, #46	; 0x2e
    4e1c:	bne	4e3c <flatcc_json_parser_symbol_start+0x8c>
    4e20:	ldr	r0, [sp, #8]
    4e24:	ldr	r1, [sp, #4]
    4e28:	ldr	r2, [sp]
    4e2c:	movw	r3, #5
    4e30:	bl	0 <flatcc_json_parser_set_error>
    4e34:	str	r0, [fp, #-4]
    4e38:	b	4e50 <flatcc_json_parser_symbol_start+0xa0>
    4e3c:	ldr	r0, [sp, #8]
    4e40:	movw	r1, #1
    4e44:	str	r1, [r0, #12]
    4e48:	ldr	r0, [sp, #4]
    4e4c:	str	r0, [fp, #-4]
    4e50:	ldr	r0, [fp, #-4]
    4e54:	mov	sp, fp
    4e58:	pop	{fp, pc}

00004e5c <flatcc_json_parser_symbol_part>:
    4e5c:	push	{fp, lr}
    4e60:	mov	fp, sp
    4e64:	sub	sp, sp, #16
    4e68:	str	r0, [fp, #-4]
    4e6c:	str	r1, [sp, #8]
    4e70:	ldr	r0, [sp, #8]
    4e74:	ldr	r1, [fp, #-4]
    4e78:	sub	r0, r0, r1
    4e7c:	str	r0, [sp, #4]
    4e80:	ldr	r0, [fp, #-4]
    4e84:	ldr	r1, [sp, #8]
    4e88:	bl	a3ac <flatcc_json_parser_symbol_part_ext>
    4e8c:	mov	sp, fp
    4e90:	pop	{fp, pc}

00004e94 <flatcc_json_parser_match_symbol>:
    4e94:	push	{fp, lr}
    4e98:	mov	fp, sp
    4e9c:	sub	sp, sp, #24
    4ea0:	str	r0, [fp, #-8]
    4ea4:	str	r1, [sp, #12]
    4ea8:	str	r2, [sp, #8]
    4eac:	str	r3, [sp, #4]
    4eb0:	ldr	r0, [sp, #12]
    4eb4:	str	r0, [sp]
    4eb8:	ldr	r0, [sp, #8]
    4ebc:	ldr	r1, [sp, #12]
    4ec0:	sub	r0, r0, r1
    4ec4:	ldr	r1, [sp, #4]
    4ec8:	cmp	r0, r1
    4ecc:	bgt	4edc <flatcc_json_parser_match_symbol+0x48>
    4ed0:	ldr	r0, [sp]
    4ed4:	str	r0, [fp, #-4]
    4ed8:	b	4ff0 <flatcc_json_parser_match_symbol+0x15c>
    4edc:	ldr	r0, [fp, #-8]
    4ee0:	ldr	r0, [r0, #12]
    4ee4:	cmp	r0, #0
    4ee8:	beq	4f48 <flatcc_json_parser_match_symbol+0xb4>
    4eec:	ldr	r0, [sp, #12]
    4ef0:	ldr	r1, [sp, #4]
    4ef4:	add	r0, r0, r1
    4ef8:	ldrb	r0, [r0]
    4efc:	cmp	r0, #32
    4f00:	ble	4f28 <flatcc_json_parser_match_symbol+0x94>
    4f04:	ldr	r0, [sp, #12]
    4f08:	ldr	r1, [sp, #4]
    4f0c:	add	r0, r0, r1
    4f10:	ldrb	r0, [r0]
    4f14:	cmp	r0, #58	; 0x3a
    4f18:	beq	4f28 <flatcc_json_parser_match_symbol+0x94>
    4f1c:	ldr	r0, [sp]
    4f20:	str	r0, [fp, #-4]
    4f24:	b	4ff0 <flatcc_json_parser_match_symbol+0x15c>
    4f28:	ldr	r0, [sp, #4]
    4f2c:	ldr	r1, [sp, #12]
    4f30:	add	r0, r1, r0
    4f34:	str	r0, [sp, #12]
    4f38:	ldr	r0, [fp, #-8]
    4f3c:	movw	r1, #0
    4f40:	str	r1, [r0, #12]
    4f44:	b	4f80 <flatcc_json_parser_match_symbol+0xec>
    4f48:	ldr	r0, [sp, #12]
    4f4c:	ldr	r1, [sp, #4]
    4f50:	add	r0, r0, r1
    4f54:	ldrb	r0, [r0]
    4f58:	cmp	r0, #34	; 0x22
    4f5c:	beq	4f6c <flatcc_json_parser_match_symbol+0xd8>
    4f60:	ldr	r0, [sp]
    4f64:	str	r0, [fp, #-4]
    4f68:	b	4ff0 <flatcc_json_parser_match_symbol+0x15c>
    4f6c:	ldr	r0, [sp, #4]
    4f70:	add	r0, r0, #1
    4f74:	ldr	r1, [sp, #12]
    4f78:	add	r0, r1, r0
    4f7c:	str	r0, [sp, #12]
    4f80:	ldr	r0, [fp, #-8]
    4f84:	ldr	r1, [sp, #12]
    4f88:	ldr	r2, [sp, #8]
    4f8c:	bl	a310 <flatcc_json_parser_space>
    4f90:	str	r0, [sp, #12]
    4f94:	ldr	r0, [sp, #12]
    4f98:	ldr	r1, [sp, #8]
    4f9c:	cmp	r0, r1
    4fa0:	beq	4fd8 <flatcc_json_parser_match_symbol+0x144>
    4fa4:	ldr	r0, [sp, #12]
    4fa8:	ldrb	r0, [r0]
    4fac:	cmp	r0, #58	; 0x3a
    4fb0:	bne	4fd8 <flatcc_json_parser_match_symbol+0x144>
    4fb4:	ldr	r0, [sp, #12]
    4fb8:	add	r0, r0, #1
    4fbc:	str	r0, [sp, #12]
    4fc0:	ldr	r0, [fp, #-8]
    4fc4:	ldr	r1, [sp, #12]
    4fc8:	ldr	r2, [sp, #8]
    4fcc:	bl	a310 <flatcc_json_parser_space>
    4fd0:	str	r0, [fp, #-4]
    4fd4:	b	4ff0 <flatcc_json_parser_match_symbol+0x15c>
    4fd8:	ldr	r0, [fp, #-8]
    4fdc:	ldr	r1, [sp, #12]
    4fe0:	ldr	r2, [sp, #8]
    4fe4:	movw	r3, #4
    4fe8:	bl	0 <flatcc_json_parser_set_error>
    4fec:	str	r0, [fp, #-4]
    4ff0:	ldr	r0, [fp, #-4]
    4ff4:	mov	sp, fp
    4ff8:	pop	{fp, pc}

00004ffc <MyGame_Example_Color_parse_json_enum>:
    4ffc:	push	{fp, lr}
    5000:	mov	fp, sp
    5004:	sub	sp, sp, #72	; 0x48
    5008:	ldr	ip, [fp, #12]
    500c:	ldr	lr, [fp, #8]
    5010:	str	r0, [fp, #-8]
    5014:	str	r1, [fp, #-12]
    5018:	str	r2, [fp, #-16]
    501c:	str	r3, [fp, #-20]	; 0xffffffec
    5020:	ldr	r0, [fp, #-12]
    5024:	str	r0, [fp, #-24]	; 0xffffffe8
    5028:	ldr	r0, [fp, #-12]
    502c:	ldr	r1, [fp, #-16]
    5030:	str	lr, [sp, #28]
    5034:	str	ip, [sp, #24]
    5038:	bl	4e5c <flatcc_json_parser_symbol_part>
    503c:	str	r1, [sp, #36]	; 0x24
    5040:	str	r0, [sp, #32]
    5044:	ldr	r0, [sp, #32]
    5048:	ldr	r1, [sp, #36]	; 0x24
    504c:	mvn	r2, #-1845493760	; 0x92000000
    5050:	subs	r0, r2, r0
    5054:	movw	r2, #25957	; 0x6565
    5058:	movt	r2, #18290	; 0x4772
    505c:	sbcs	r1, r2, r1
    5060:	str	r0, [sp, #20]
    5064:	str	r1, [sp, #16]
    5068:	bcc	510c <MyGame_Example_Color_parse_json_enum+0x110>
    506c:	b	5070 <MyGame_Example_Color_parse_json_enum+0x74>
    5070:	ldr	r0, [sp, #36]	; 0x24
    5074:	movw	r1, #30053	; 0x7565
    5078:	movt	r1, #17004	; 0x426c
    507c:	teq	r0, r1
    5080:	bne	50fc <MyGame_Example_Color_parse_json_enum+0x100>
    5084:	b	5088 <MyGame_Example_Color_parse_json_enum+0x8c>
    5088:	ldr	r0, [fp, #-8]
    508c:	ldr	r1, [fp, #-12]
    5090:	str	r1, [fp, #-28]	; 0xffffffe4
    5094:	ldr	r2, [fp, #-16]
    5098:	ldr	r3, [fp, #12]
    509c:	movw	ip, #4
    50a0:	str	r3, [sp, #12]
    50a4:	mov	r3, ip
    50a8:	ldr	ip, [sp, #12]
    50ac:	str	ip, [sp]
    50b0:	bl	0 <flatcc_json_parser_match_constant>
    50b4:	str	r0, [fp, #-12]
    50b8:	ldr	r0, [fp, #-12]
    50bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    50c0:	cmp	r0, r1
    50c4:	beq	50ec <MyGame_Example_Color_parse_json_enum+0xf0>
    50c8:	ldr	r0, [fp, #8]
    50cc:	mov	r1, #0
    50d0:	str	r1, [r0, #4]
    50d4:	mov	r1, #8
    50d8:	str	r1, [r0]
    50dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    50e0:	movw	r1, #0
    50e4:	str	r1, [r0]
    50e8:	b	50f8 <MyGame_Example_Color_parse_json_enum+0xfc>
    50ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    50f0:	str	r0, [fp, #-4]
    50f4:	b	5258 <MyGame_Example_Color_parse_json_enum+0x25c>
    50f8:	b	5108 <MyGame_Example_Color_parse_json_enum+0x10c>
    50fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5100:	str	r0, [fp, #-4]
    5104:	b	5258 <MyGame_Example_Color_parse_json_enum+0x25c>
    5108:	b	5250 <MyGame_Example_Color_parse_json_enum+0x254>
    510c:	ldr	r0, [sp, #36]	; 0x24
    5110:	bic	r0, r0, #255	; 0xff
    5114:	movw	r1, #25600	; 0x6400
    5118:	movt	r1, #21093	; 0x5265
    511c:	teq	r0, r1
    5120:	bne	519c <MyGame_Example_Color_parse_json_enum+0x1a0>
    5124:	b	5128 <MyGame_Example_Color_parse_json_enum+0x12c>
    5128:	ldr	r0, [fp, #-8]
    512c:	ldr	r1, [fp, #-12]
    5130:	str	r1, [fp, #-28]	; 0xffffffe4
    5134:	ldr	r2, [fp, #-16]
    5138:	ldr	r3, [fp, #12]
    513c:	movw	ip, #3
    5140:	str	r3, [sp, #8]
    5144:	mov	r3, ip
    5148:	ldr	ip, [sp, #8]
    514c:	str	ip, [sp]
    5150:	bl	0 <flatcc_json_parser_match_constant>
    5154:	str	r0, [fp, #-12]
    5158:	ldr	r0, [fp, #-12]
    515c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5160:	cmp	r0, r1
    5164:	beq	518c <MyGame_Example_Color_parse_json_enum+0x190>
    5168:	ldr	r0, [fp, #8]
    516c:	mov	r1, #0
    5170:	str	r1, [r0, #4]
    5174:	mov	r1, #1
    5178:	str	r1, [r0]
    517c:	ldr	r0, [fp, #-20]	; 0xffffffec
    5180:	movw	r1, #0
    5184:	str	r1, [r0]
    5188:	b	5198 <MyGame_Example_Color_parse_json_enum+0x19c>
    518c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5190:	str	r0, [fp, #-4]
    5194:	b	5258 <MyGame_Example_Color_parse_json_enum+0x25c>
    5198:	b	524c <MyGame_Example_Color_parse_json_enum+0x250>
    519c:	ldr	r0, [sp, #32]
    51a0:	ldr	r1, [sp, #36]	; 0x24
    51a4:	and	r0, r0, #-16777216	; 0xff000000
    51a8:	movw	r2, #25957	; 0x6565
    51ac:	movt	r2, #18290	; 0x4772
    51b0:	eor	r1, r1, r2
    51b4:	eor	r0, r0, #1845493760	; 0x6e000000
    51b8:	orr	r0, r0, r1
    51bc:	cmp	r0, #0
    51c0:	bne	523c <MyGame_Example_Color_parse_json_enum+0x240>
    51c4:	b	51c8 <MyGame_Example_Color_parse_json_enum+0x1cc>
    51c8:	ldr	r0, [fp, #-8]
    51cc:	ldr	r1, [fp, #-12]
    51d0:	str	r1, [fp, #-28]	; 0xffffffe4
    51d4:	ldr	r2, [fp, #-16]
    51d8:	ldr	r3, [fp, #12]
    51dc:	movw	ip, #5
    51e0:	str	r3, [sp, #4]
    51e4:	mov	r3, ip
    51e8:	ldr	ip, [sp, #4]
    51ec:	str	ip, [sp]
    51f0:	bl	0 <flatcc_json_parser_match_constant>
    51f4:	str	r0, [fp, #-12]
    51f8:	ldr	r0, [fp, #-12]
    51fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5200:	cmp	r0, r1
    5204:	beq	522c <MyGame_Example_Color_parse_json_enum+0x230>
    5208:	ldr	r0, [fp, #8]
    520c:	mov	r1, #0
    5210:	str	r1, [r0, #4]
    5214:	mov	r1, #2
    5218:	str	r1, [r0]
    521c:	ldr	r0, [fp, #-20]	; 0xffffffec
    5220:	movw	r1, #0
    5224:	str	r1, [r0]
    5228:	b	5238 <MyGame_Example_Color_parse_json_enum+0x23c>
    522c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5230:	str	r0, [fp, #-4]
    5234:	b	5258 <MyGame_Example_Color_parse_json_enum+0x25c>
    5238:	b	5248 <MyGame_Example_Color_parse_json_enum+0x24c>
    523c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5240:	str	r0, [fp, #-4]
    5244:	b	5258 <MyGame_Example_Color_parse_json_enum+0x25c>
    5248:	b	524c <MyGame_Example_Color_parse_json_enum+0x250>
    524c:	b	5250 <MyGame_Example_Color_parse_json_enum+0x254>
    5250:	ldr	r0, [fp, #-12]
    5254:	str	r0, [fp, #-4]
    5258:	ldr	r0, [fp, #-4]
    525c:	mov	sp, fp
    5260:	pop	{fp, pc}

00005264 <monster_test_local_MyGame_Example_json_parser_enum>:
    5264:	push	{fp, lr}
    5268:	mov	fp, sp
    526c:	sub	sp, sp, #88	; 0x58
    5270:	ldr	ip, [fp, #12]
    5274:	ldr	lr, [fp, #8]
    5278:	str	r0, [fp, #-8]
    527c:	str	r1, [fp, #-12]
    5280:	str	r2, [fp, #-16]
    5284:	str	r3, [fp, #-20]	; 0xffffffec
    5288:	ldr	r0, [fp, #-12]
    528c:	str	r0, [fp, #-24]	; 0xffffffe8
    5290:	ldr	r0, [fp, #-12]
    5294:	ldr	r1, [fp, #-16]
    5298:	str	lr, [sp, #44]	; 0x2c
    529c:	str	ip, [sp, #40]	; 0x28
    52a0:	bl	4e5c <flatcc_json_parser_symbol_part>
    52a4:	str	r1, [fp, #-36]	; 0xffffffdc
    52a8:	str	r0, [fp, #-40]	; 0xffffffd8
    52ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    52b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    52b4:	movw	r2, #30060	; 0x756c
    52b8:	movt	r2, #25966	; 0x656e
    52bc:	subs	r0, r2, r0
    52c0:	movw	r2, #30815	; 0x785f
    52c4:	movt	r2, #26725	; 0x6865
    52c8:	sbcs	r1, r2, r1
    52cc:	str	r0, [sp, #36]	; 0x24
    52d0:	str	r1, [sp, #32]
    52d4:	bcc	54cc <monster_test_local_MyGame_Example_json_parser_enum+0x268>
    52d8:	b	52dc <monster_test_local_MyGame_Example_json_parser_enum+0x78>
    52dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    52e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    52e4:	mvn	r2, #-1912602624	; 0x8e000000
    52e8:	subs	r0, r2, r0
    52ec:	movw	r2, #27759	; 0x6c6f
    52f0:	movt	r2, #17263	; 0x436f
    52f4:	sbcs	r1, r2, r1
    52f8:	str	r0, [sp, #28]
    52fc:	str	r1, [sp, #24]
    5300:	bcc	539c <monster_test_local_MyGame_Example_json_parser_enum+0x138>
    5304:	b	5308 <monster_test_local_MyGame_Example_json_parser_enum+0xa4>
    5308:	ldr	r0, [fp, #-36]	; 0xffffffdc
    530c:	bic	r0, r0, #255	; 0xff
    5310:	movw	r1, #30976	; 0x7900
    5314:	movt	r1, #16750	; 0x416e
    5318:	teq	r0, r1
    531c:	bne	538c <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    5320:	b	5324 <monster_test_local_MyGame_Example_json_parser_enum+0xc0>
    5324:	ldr	r0, [fp, #-8]
    5328:	ldr	r1, [fp, #-12]
    532c:	str	r1, [fp, #-28]	; 0xffffffe4
    5330:	ldr	r2, [fp, #-16]
    5334:	movw	r3, #3
    5338:	bl	a520 <flatcc_json_parser_match_scope>
    533c:	str	r0, [fp, #-12]
    5340:	ldr	r0, [fp, #-12]
    5344:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5348:	cmp	r0, r1
    534c:	beq	537c <monster_test_local_MyGame_Example_json_parser_enum+0x118>
    5350:	ldr	r0, [fp, #-8]
    5354:	ldr	r1, [fp, #-12]
    5358:	ldr	r2, [fp, #-16]
    535c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5360:	ldr	ip, [fp, #8]
    5364:	ldr	lr, [fp, #12]
    5368:	str	ip, [sp]
    536c:	str	lr, [sp, #4]
    5370:	bl	7c70 <MyGame_Example_Any_parse_json_enum>
    5374:	str	r0, [fp, #-12]
    5378:	b	5388 <monster_test_local_MyGame_Example_json_parser_enum+0x124>
    537c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5380:	str	r0, [fp, #-4]
    5384:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5388:	b	5398 <monster_test_local_MyGame_Example_json_parser_enum+0x134>
    538c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5390:	str	r0, [fp, #-4]
    5394:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5398:	b	54c8 <monster_test_local_MyGame_Example_json_parser_enum+0x264>
    539c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    53a0:	bic	r0, r0, #255	; 0xff
    53a4:	movw	r1, #28416	; 0x6f00
    53a8:	movt	r1, #18031	; 0x466f
    53ac:	teq	r0, r1
    53b0:	bne	5420 <monster_test_local_MyGame_Example_json_parser_enum+0x1bc>
    53b4:	b	53b8 <monster_test_local_MyGame_Example_json_parser_enum+0x154>
    53b8:	ldr	r0, [fp, #-8]
    53bc:	ldr	r1, [fp, #-12]
    53c0:	str	r1, [fp, #-28]	; 0xffffffe4
    53c4:	ldr	r2, [fp, #-16]
    53c8:	movw	r3, #3
    53cc:	bl	a520 <flatcc_json_parser_match_scope>
    53d0:	str	r0, [fp, #-12]
    53d4:	ldr	r0, [fp, #-12]
    53d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    53dc:	cmp	r0, r1
    53e0:	beq	5410 <monster_test_local_MyGame_Example_json_parser_enum+0x1ac>
    53e4:	ldr	r0, [fp, #-8]
    53e8:	ldr	r1, [fp, #-12]
    53ec:	ldr	r2, [fp, #-16]
    53f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    53f4:	ldr	ip, [fp, #8]
    53f8:	ldr	lr, [fp, #12]
    53fc:	str	ip, [sp]
    5400:	str	lr, [sp, #4]
    5404:	bl	a5a4 <MyGame_Example_Foo_parse_json_enum>
    5408:	str	r0, [fp, #-12]
    540c:	b	541c <monster_test_local_MyGame_Example_json_parser_enum+0x1b8>
    5410:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5414:	str	r0, [fp, #-4]
    5418:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    541c:	b	54c4 <monster_test_local_MyGame_Example_json_parser_enum+0x260>
    5420:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5424:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5428:	and	r0, r0, #-16777216	; 0xff000000
    542c:	movw	r2, #27759	; 0x6c6f
    5430:	movt	r2, #17263	; 0x436f
    5434:	eor	r1, r1, r2
    5438:	eor	r0, r0, #1912602624	; 0x72000000
    543c:	orr	r0, r0, r1
    5440:	cmp	r0, #0
    5444:	bne	54b4 <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    5448:	b	544c <monster_test_local_MyGame_Example_json_parser_enum+0x1e8>
    544c:	ldr	r0, [fp, #-8]
    5450:	ldr	r1, [fp, #-12]
    5454:	str	r1, [fp, #-28]	; 0xffffffe4
    5458:	ldr	r2, [fp, #-16]
    545c:	movw	r3, #5
    5460:	bl	a520 <flatcc_json_parser_match_scope>
    5464:	str	r0, [fp, #-12]
    5468:	ldr	r0, [fp, #-12]
    546c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5470:	cmp	r0, r1
    5474:	beq	54a4 <monster_test_local_MyGame_Example_json_parser_enum+0x240>
    5478:	ldr	r0, [fp, #-8]
    547c:	ldr	r1, [fp, #-12]
    5480:	ldr	r2, [fp, #-16]
    5484:	ldr	r3, [fp, #-20]	; 0xffffffec
    5488:	ldr	ip, [fp, #8]
    548c:	ldr	lr, [fp, #12]
    5490:	str	ip, [sp]
    5494:	str	lr, [sp, #4]
    5498:	bl	4ffc <MyGame_Example_Color_parse_json_enum>
    549c:	str	r0, [fp, #-12]
    54a0:	b	54b0 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    54a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54a8:	str	r0, [fp, #-4]
    54ac:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    54b0:	b	54c0 <monster_test_local_MyGame_Example_json_parser_enum+0x25c>
    54b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    54b8:	str	r0, [fp, #-4]
    54bc:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    54c0:	b	54c4 <monster_test_local_MyGame_Example_json_parser_enum+0x260>
    54c4:	b	54c8 <monster_test_local_MyGame_Example_json_parser_enum+0x264>
    54c8:	b	5810 <monster_test_local_MyGame_Example_json_parser_enum+0x5ac>
    54cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    54d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    54d4:	movw	r2, #30060	; 0x756c
    54d8:	movt	r2, #25966	; 0x656e
    54dc:	subs	r0, r2, r0
    54e0:	movw	r2, #29791	; 0x745f
    54e4:	movt	r2, #26990	; 0x696e
    54e8:	sbcs	r1, r2, r1
    54ec:	str	r0, [sp, #20]
    54f0:	str	r1, [sp, #16]
    54f4:	bcc	55a4 <monster_test_local_MyGame_Example_json_parser_enum+0x340>
    54f8:	b	54fc <monster_test_local_MyGame_Example_json_parser_enum+0x298>
    54fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5500:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5504:	movw	r2, #30815	; 0x785f
    5508:	movt	r2, #26725	; 0x6865
    550c:	eor	r1, r1, r2
    5510:	movw	r2, #30061	; 0x756d
    5514:	movt	r2, #25966	; 0x656e
    5518:	eor	r0, r0, r2
    551c:	orr	r0, r0, r1
    5520:	cmp	r0, #0
    5524:	bne	5594 <monster_test_local_MyGame_Example_json_parser_enum+0x330>
    5528:	b	552c <monster_test_local_MyGame_Example_json_parser_enum+0x2c8>
    552c:	ldr	r0, [fp, #-8]
    5530:	ldr	r1, [fp, #-12]
    5534:	str	r1, [fp, #-28]	; 0xffffffe4
    5538:	ldr	r2, [fp, #-16]
    553c:	movw	r3, #8
    5540:	bl	a520 <flatcc_json_parser_match_scope>
    5544:	str	r0, [fp, #-12]
    5548:	ldr	r0, [fp, #-12]
    554c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5550:	cmp	r0, r1
    5554:	beq	5584 <monster_test_local_MyGame_Example_json_parser_enum+0x320>
    5558:	ldr	r0, [fp, #-8]
    555c:	ldr	r1, [fp, #-12]
    5560:	ldr	r2, [fp, #-16]
    5564:	ldr	r3, [fp, #-20]	; 0xffffffec
    5568:	ldr	ip, [fp, #8]
    556c:	ldr	lr, [fp, #12]
    5570:	str	ip, [sp]
    5574:	str	lr, [sp, #4]
    5578:	bl	a7e0 <MyGame_Example_hex_enum_parse_json_enum>
    557c:	str	r0, [fp, #-12]
    5580:	b	5590 <monster_test_local_MyGame_Example_json_parser_enum+0x32c>
    5584:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5588:	str	r0, [fp, #-4]
    558c:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5590:	b	55a0 <monster_test_local_MyGame_Example_json_parser_enum+0x33c>
    5594:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5598:	str	r0, [fp, #-4]
    559c:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    55a0:	b	580c <monster_test_local_MyGame_Example_json_parser_enum+0x5a8>
    55a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    55a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    55ac:	movw	r2, #30060	; 0x756c
    55b0:	movt	r2, #25966	; 0x656e
    55b4:	subs	r0, r2, r0
    55b8:	movw	r2, #26463	; 0x675f
    55bc:	movt	r2, #28261	; 0x6e65
    55c0:	sbcs	r1, r2, r1
    55c4:	str	r0, [sp, #12]
    55c8:	str	r1, [sp, #8]
    55cc:	bcc	567c <monster_test_local_MyGame_Example_json_parser_enum+0x418>
    55d0:	b	55d4 <monster_test_local_MyGame_Example_json_parser_enum+0x370>
    55d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    55d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    55dc:	movw	r2, #29791	; 0x745f
    55e0:	movt	r2, #26990	; 0x696e
    55e4:	eor	r1, r1, r2
    55e8:	movw	r2, #30061	; 0x756d
    55ec:	movt	r2, #25966	; 0x656e
    55f0:	eor	r0, r0, r2
    55f4:	orr	r0, r0, r1
    55f8:	cmp	r0, #0
    55fc:	bne	566c <monster_test_local_MyGame_Example_json_parser_enum+0x408>
    5600:	b	5604 <monster_test_local_MyGame_Example_json_parser_enum+0x3a0>
    5604:	ldr	r0, [fp, #-8]
    5608:	ldr	r1, [fp, #-12]
    560c:	str	r1, [fp, #-28]	; 0xffffffe4
    5610:	ldr	r2, [fp, #-16]
    5614:	movw	r3, #8
    5618:	bl	a520 <flatcc_json_parser_match_scope>
    561c:	str	r0, [fp, #-12]
    5620:	ldr	r0, [fp, #-12]
    5624:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5628:	cmp	r0, r1
    562c:	beq	565c <monster_test_local_MyGame_Example_json_parser_enum+0x3f8>
    5630:	ldr	r0, [fp, #-8]
    5634:	ldr	r1, [fp, #-12]
    5638:	ldr	r2, [fp, #-16]
    563c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5640:	ldr	ip, [fp, #8]
    5644:	ldr	lr, [fp, #12]
    5648:	str	ip, [sp]
    564c:	str	lr, [sp, #4]
    5650:	bl	aa38 <MyGame_Example_int_enum_parse_json_enum>
    5654:	str	r0, [fp, #-12]
    5658:	b	5668 <monster_test_local_MyGame_Example_json_parser_enum+0x404>
    565c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5660:	str	r0, [fp, #-4]
    5664:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5668:	b	5678 <monster_test_local_MyGame_Example_json_parser_enum+0x414>
    566c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5670:	str	r0, [fp, #-4]
    5674:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5678:	b	5808 <monster_test_local_MyGame_Example_json_parser_enum+0x5a4>
    567c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5680:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5684:	movw	r2, #26463	; 0x675f
    5688:	movt	r2, #28261	; 0x6e65
    568c:	eor	r1, r1, r2
    5690:	movw	r2, #30061	; 0x756d
    5694:	movt	r2, #25966	; 0x656e
    5698:	eor	r0, r0, r2
    569c:	orr	r0, r0, r1
    56a0:	cmp	r0, #0
    56a4:	bne	570c <monster_test_local_MyGame_Example_json_parser_enum+0x4a8>
    56a8:	b	56ac <monster_test_local_MyGame_Example_json_parser_enum+0x448>
    56ac:	ldr	r0, [fp, #-8]
    56b0:	ldr	r1, [fp, #-12]
    56b4:	str	r1, [fp, #-28]	; 0xffffffe4
    56b8:	ldr	r2, [fp, #-16]
    56bc:	movw	r3, #8
    56c0:	bl	a520 <flatcc_json_parser_match_scope>
    56c4:	str	r0, [fp, #-12]
    56c8:	ldr	r0, [fp, #-12]
    56cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    56d0:	cmp	r0, r1
    56d4:	beq	5704 <monster_test_local_MyGame_Example_json_parser_enum+0x4a0>
    56d8:	ldr	r0, [fp, #-8]
    56dc:	ldr	r1, [fp, #-12]
    56e0:	ldr	r2, [fp, #-16]
    56e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    56e8:	ldr	ip, [fp, #8]
    56ec:	ldr	lr, [fp, #12]
    56f0:	str	ip, [sp]
    56f4:	str	lr, [sp, #4]
    56f8:	bl	ad78 <MyGame_Example_neg_enum_parse_json_enum>
    56fc:	str	r0, [fp, #-12]
    5700:	b	5708 <monster_test_local_MyGame_Example_json_parser_enum+0x4a4>
    5704:	b	5714 <monster_test_local_MyGame_Example_json_parser_enum+0x4b0>
    5708:	b	5710 <monster_test_local_MyGame_Example_json_parser_enum+0x4ac>
    570c:	b	5714 <monster_test_local_MyGame_Example_json_parser_enum+0x4b0>
    5710:	b	5804 <monster_test_local_MyGame_Example_json_parser_enum+0x5a0>
    5714:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5718:	ldr	r1, [fp, #-36]	; 0xffffffdc
    571c:	movw	r2, #29797	; 0x7465
    5720:	movt	r2, #28271	; 0x6e6f
    5724:	eor	r1, r1, r2
    5728:	movw	r2, #29817	; 0x7479
    572c:	movt	r2, #28016	; 0x6d70
    5730:	eor	r0, r0, r2
    5734:	orr	r0, r0, r1
    5738:	cmp	r0, #0
    573c:	bne	57f4 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    5740:	b	5744 <monster_test_local_MyGame_Example_json_parser_enum+0x4e0>
    5744:	ldr	r0, [fp, #-12]
    5748:	add	r0, r0, #8
    574c:	str	r0, [fp, #-12]
    5750:	ldr	r0, [fp, #-12]
    5754:	ldr	r1, [fp, #-16]
    5758:	bl	4e5c <flatcc_json_parser_symbol_part>
    575c:	str	r1, [fp, #-36]	; 0xffffffdc
    5760:	str	r0, [fp, #-40]	; 0xffffffd8
    5764:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5768:	movw	r1, #30061	; 0x756d
    576c:	movt	r1, #25966	; 0x656e
    5770:	teq	r0, r1
    5774:	bne	57e4 <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    5778:	b	577c <monster_test_local_MyGame_Example_json_parser_enum+0x518>
    577c:	ldr	r0, [fp, #-8]
    5780:	ldr	r1, [fp, #-12]
    5784:	str	r1, [fp, #-28]	; 0xffffffe4
    5788:	ldr	r2, [fp, #-16]
    578c:	movw	r3, #4
    5790:	bl	a520 <flatcc_json_parser_match_scope>
    5794:	str	r0, [fp, #-12]
    5798:	ldr	r0, [fp, #-12]
    579c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    57a0:	cmp	r0, r1
    57a4:	beq	57d4 <monster_test_local_MyGame_Example_json_parser_enum+0x570>
    57a8:	ldr	r0, [fp, #-8]
    57ac:	ldr	r1, [fp, #-12]
    57b0:	ldr	r2, [fp, #-16]
    57b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    57b8:	ldr	ip, [fp, #8]
    57bc:	ldr	lr, [fp, #12]
    57c0:	str	ip, [sp]
    57c4:	str	lr, [sp, #4]
    57c8:	bl	afb4 <MyGame_Example_notemptyenum_parse_json_enum>
    57cc:	str	r0, [fp, #-12]
    57d0:	b	57e0 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    57d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57d8:	str	r0, [fp, #-4]
    57dc:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    57e0:	b	57f0 <monster_test_local_MyGame_Example_json_parser_enum+0x58c>
    57e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57e8:	str	r0, [fp, #-4]
    57ec:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    57f0:	b	5800 <monster_test_local_MyGame_Example_json_parser_enum+0x59c>
    57f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57f8:	str	r0, [fp, #-4]
    57fc:	b	5818 <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    5800:	b	5804 <monster_test_local_MyGame_Example_json_parser_enum+0x5a0>
    5804:	b	5808 <monster_test_local_MyGame_Example_json_parser_enum+0x5a4>
    5808:	b	580c <monster_test_local_MyGame_Example_json_parser_enum+0x5a8>
    580c:	b	5810 <monster_test_local_MyGame_Example_json_parser_enum+0x5ac>
    5810:	ldr	r0, [fp, #-12]
    5814:	str	r0, [fp, #-4]
    5818:	ldr	r0, [fp, #-4]
    581c:	mov	sp, fp
    5820:	pop	{fp, pc}

00005824 <monster_test_global_json_parser_enum>:
    5824:	push	{fp, lr}
    5828:	mov	fp, sp
    582c:	sub	sp, sp, #96	; 0x60
    5830:	ldr	ip, [fp, #12]
    5834:	ldr	lr, [fp, #8]
    5838:	str	r0, [fp, #-8]
    583c:	str	r1, [fp, #-12]
    5840:	str	r2, [fp, #-16]
    5844:	str	r3, [fp, #-20]	; 0xffffffec
    5848:	ldr	r0, [fp, #-12]
    584c:	str	r0, [fp, #-24]	; 0xffffffe8
    5850:	ldr	r0, [fp, #-12]
    5854:	ldr	r1, [fp, #-16]
    5858:	str	lr, [fp, #-44]	; 0xffffffd4
    585c:	str	ip, [sp, #48]	; 0x30
    5860:	bl	4e5c <flatcc_json_parser_symbol_part>
    5864:	str	r1, [fp, #-36]	; 0xffffffdc
    5868:	str	r0, [fp, #-40]	; 0xffffffd8
    586c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5870:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5874:	movw	r2, #11844	; 0x2e44
    5878:	movt	r2, #28005	; 0x6d65
    587c:	subs	r0, r2, r0
    5880:	movw	r2, #18273	; 0x4761
    5884:	movt	r2, #19833	; 0x4d79
    5888:	sbcs	r1, r2, r1
    588c:	str	r0, [sp, #44]	; 0x2c
    5890:	str	r1, [sp, #40]	; 0x28
    5894:	bcc	59e8 <monster_test_global_json_parser_enum+0x1c4>
    5898:	b	589c <monster_test_global_json_parser_enum+0x78>
    589c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    58a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    58a4:	movw	r2, #28276	; 0x6e74
    58a8:	movt	r2, #18017	; 0x4661
    58ac:	eor	r1, r1, r2
    58b0:	movw	r2, #31022	; 0x792e
    58b4:	movt	r2, #24947	; 0x6173
    58b8:	eor	r0, r0, r2
    58bc:	orr	r0, r0, r1
    58c0:	cmp	r0, #0
    58c4:	bne	59d8 <monster_test_global_json_parser_enum+0x1b4>
    58c8:	b	58cc <monster_test_global_json_parser_enum+0xa8>
    58cc:	ldr	r0, [fp, #-12]
    58d0:	add	r0, r0, #8
    58d4:	str	r0, [fp, #-12]
    58d8:	ldr	r0, [fp, #-12]
    58dc:	ldr	r1, [fp, #-16]
    58e0:	bl	4e5c <flatcc_json_parser_symbol_part>
    58e4:	str	r1, [fp, #-36]	; 0xffffffdc
    58e8:	str	r0, [fp, #-40]	; 0xffffffd8
    58ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    58f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    58f4:	movw	lr, #24946	; 0x6172
    58f8:	movt	lr, #17256	; 0x4368
    58fc:	eor	r1, r1, lr
    5900:	movw	lr, #29797	; 0x7465
    5904:	movt	lr, #24931	; 0x6163
    5908:	eor	r0, r0, lr
    590c:	orr	r0, r0, r1
    5910:	cmp	r0, #0
    5914:	bne	59c8 <monster_test_global_json_parser_enum+0x1a4>
    5918:	b	591c <monster_test_global_json_parser_enum+0xf8>
    591c:	ldr	r0, [fp, #-12]
    5920:	add	r0, r0, #8
    5924:	str	r0, [fp, #-12]
    5928:	ldr	r0, [fp, #-12]
    592c:	ldr	r1, [fp, #-16]
    5930:	bl	4e5c <flatcc_json_parser_symbol_part>
    5934:	str	r1, [fp, #-36]	; 0xffffffdc
    5938:	str	r0, [fp, #-40]	; 0xffffffd8
    593c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5940:	and	r0, r0, #-16777216	; 0xff000000
    5944:	teq	r0, #1912602624	; 0x72000000
    5948:	bne	59b8 <monster_test_global_json_parser_enum+0x194>
    594c:	b	5950 <monster_test_global_json_parser_enum+0x12c>
    5950:	ldr	r0, [fp, #-8]
    5954:	ldr	r1, [fp, #-12]
    5958:	str	r1, [fp, #-28]	; 0xffffffe4
    595c:	ldr	r2, [fp, #-16]
    5960:	movw	r3, #1
    5964:	bl	a520 <flatcc_json_parser_match_scope>
    5968:	str	r0, [fp, #-12]
    596c:	ldr	r0, [fp, #-12]
    5970:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5974:	cmp	r0, r1
    5978:	beq	59a8 <monster_test_global_json_parser_enum+0x184>
    597c:	ldr	r0, [fp, #-8]
    5980:	ldr	r1, [fp, #-12]
    5984:	ldr	r2, [fp, #-16]
    5988:	ldr	r3, [fp, #-20]	; 0xffffffec
    598c:	ldr	ip, [fp, #8]
    5990:	ldr	lr, [fp, #12]
    5994:	str	ip, [sp]
    5998:	str	lr, [sp, #4]
    599c:	bl	b0a0 <Fantasy_Character_parse_json_enum>
    59a0:	str	r0, [fp, #-12]
    59a4:	b	59b4 <monster_test_global_json_parser_enum+0x190>
    59a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59ac:	str	r0, [fp, #-4]
    59b0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    59b4:	b	59c4 <monster_test_global_json_parser_enum+0x1a0>
    59b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59bc:	str	r0, [fp, #-4]
    59c0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    59c4:	b	59d4 <monster_test_global_json_parser_enum+0x1b0>
    59c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59cc:	str	r0, [fp, #-4]
    59d0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    59d4:	b	59e4 <monster_test_global_json_parser_enum+0x1c0>
    59d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59dc:	str	r0, [fp, #-4]
    59e0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    59e4:	b	63fc <monster_test_global_json_parser_enum+0xbd8>
    59e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    59ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    59f0:	movw	r2, #18273	; 0x4761
    59f4:	movt	r2, #19833	; 0x4d79
    59f8:	eor	r1, r1, r2
    59fc:	movw	r2, #11845	; 0x2e45
    5a00:	movt	r2, #28005	; 0x6d65
    5a04:	eor	r0, r0, r2
    5a08:	orr	r0, r0, r1
    5a0c:	cmp	r0, #0
    5a10:	bne	61ec <monster_test_global_json_parser_enum+0x9c8>
    5a14:	b	5a18 <monster_test_global_json_parser_enum+0x1f4>
    5a18:	ldr	r0, [fp, #-12]
    5a1c:	add	r0, r0, #8
    5a20:	str	r0, [fp, #-12]
    5a24:	ldr	r0, [fp, #-12]
    5a28:	ldr	r1, [fp, #-16]
    5a2c:	bl	4e5c <flatcc_json_parser_symbol_part>
    5a30:	str	r1, [fp, #-36]	; 0xffffffdc
    5a34:	str	r0, [fp, #-40]	; 0xffffffd8
    5a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5a3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5a40:	movw	lr, #11879	; 0x2e67
    5a44:	movt	lr, #27749	; 0x6c65
    5a48:	subs	r0, lr, r0
    5a4c:	movw	lr, #28016	; 0x6d70
    5a50:	movt	lr, #30817	; 0x7861
    5a54:	sbcs	r1, lr, r1
    5a58:	str	r0, [sp, #36]	; 0x24
    5a5c:	str	r1, [sp, #32]
    5a60:	bcc	5d68 <monster_test_global_json_parser_enum+0x544>
    5a64:	b	5a68 <monster_test_global_json_parser_enum+0x244>
    5a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5a6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5a70:	movw	r2, #11842	; 0x2e42
    5a74:	movt	r2, #27749	; 0x6c65
    5a78:	subs	r0, r2, r0
    5a7c:	movw	r2, #28016	; 0x6d70
    5a80:	movt	r2, #30817	; 0x7861
    5a84:	sbcs	r1, r2, r1
    5a88:	str	r0, [sp, #28]
    5a8c:	str	r1, [sp, #24]
    5a90:	bcc	5b8c <monster_test_global_json_parser_enum+0x368>
    5a94:	b	5a98 <monster_test_global_json_parser_enum+0x274>
    5a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5a9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5aa0:	movw	r2, #28016	; 0x6d70
    5aa4:	movt	r2, #30817	; 0x7861
    5aa8:	eor	r1, r1, r2
    5aac:	movw	r2, #11841	; 0x2e41
    5ab0:	movt	r2, #27749	; 0x6c65
    5ab4:	eor	r0, r0, r2
    5ab8:	orr	r0, r0, r1
    5abc:	cmp	r0, #0
    5ac0:	bne	5b7c <monster_test_global_json_parser_enum+0x358>
    5ac4:	b	5ac8 <monster_test_global_json_parser_enum+0x2a4>
    5ac8:	ldr	r0, [fp, #-12]
    5acc:	add	r0, r0, #8
    5ad0:	str	r0, [fp, #-12]
    5ad4:	ldr	r0, [fp, #-12]
    5ad8:	ldr	r1, [fp, #-16]
    5adc:	bl	4e5c <flatcc_json_parser_symbol_part>
    5ae0:	str	r1, [fp, #-36]	; 0xffffffdc
    5ae4:	str	r0, [fp, #-40]	; 0xffffffd8
    5ae8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5aec:	bfc	r0, #0, #16
    5af0:	movw	r1, #0
    5af4:	movt	r1, #28281	; 0x6e79
    5af8:	teq	r0, r1
    5afc:	bne	5b6c <monster_test_global_json_parser_enum+0x348>
    5b00:	b	5b04 <monster_test_global_json_parser_enum+0x2e0>
    5b04:	ldr	r0, [fp, #-8]
    5b08:	ldr	r1, [fp, #-12]
    5b0c:	str	r1, [fp, #-28]	; 0xffffffe4
    5b10:	ldr	r2, [fp, #-16]
    5b14:	movw	r3, #2
    5b18:	bl	a520 <flatcc_json_parser_match_scope>
    5b1c:	str	r0, [fp, #-12]
    5b20:	ldr	r0, [fp, #-12]
    5b24:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5b28:	cmp	r0, r1
    5b2c:	beq	5b5c <monster_test_global_json_parser_enum+0x338>
    5b30:	ldr	r0, [fp, #-8]
    5b34:	ldr	r1, [fp, #-12]
    5b38:	ldr	r2, [fp, #-16]
    5b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b40:	ldr	ip, [fp, #8]
    5b44:	ldr	lr, [fp, #12]
    5b48:	str	ip, [sp]
    5b4c:	str	lr, [sp, #4]
    5b50:	bl	7c70 <MyGame_Example_Any_parse_json_enum>
    5b54:	str	r0, [fp, #-12]
    5b58:	b	5b68 <monster_test_global_json_parser_enum+0x344>
    5b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b60:	str	r0, [fp, #-4]
    5b64:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5b68:	b	5b78 <monster_test_global_json_parser_enum+0x354>
    5b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b70:	str	r0, [fp, #-4]
    5b74:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5b78:	b	5b88 <monster_test_global_json_parser_enum+0x364>
    5b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b80:	str	r0, [fp, #-4]
    5b84:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5b88:	b	5d64 <monster_test_global_json_parser_enum+0x540>
    5b8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5b90:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5b94:	movw	r2, #28016	; 0x6d70
    5b98:	movt	r2, #30817	; 0x7861
    5b9c:	eor	r1, r1, r2
    5ba0:	movw	r2, #11843	; 0x2e43
    5ba4:	movt	r2, #27749	; 0x6c65
    5ba8:	eor	r0, r0, r2
    5bac:	orr	r0, r0, r1
    5bb0:	cmp	r0, #0
    5bb4:	bne	5c6c <monster_test_global_json_parser_enum+0x448>
    5bb8:	b	5bbc <monster_test_global_json_parser_enum+0x398>
    5bbc:	ldr	r0, [fp, #-12]
    5bc0:	add	r0, r0, #8
    5bc4:	str	r0, [fp, #-12]
    5bc8:	ldr	r0, [fp, #-12]
    5bcc:	ldr	r1, [fp, #-16]
    5bd0:	bl	4e5c <flatcc_json_parser_symbol_part>
    5bd4:	str	r1, [fp, #-36]	; 0xffffffdc
    5bd8:	str	r0, [fp, #-40]	; 0xffffffd8
    5bdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5be0:	movw	r1, #28530	; 0x6f72
    5be4:	movt	r1, #28524	; 0x6f6c
    5be8:	teq	r0, r1
    5bec:	bne	5c5c <monster_test_global_json_parser_enum+0x438>
    5bf0:	b	5bf4 <monster_test_global_json_parser_enum+0x3d0>
    5bf4:	ldr	r0, [fp, #-8]
    5bf8:	ldr	r1, [fp, #-12]
    5bfc:	str	r1, [fp, #-28]	; 0xffffffe4
    5c00:	ldr	r2, [fp, #-16]
    5c04:	movw	r3, #4
    5c08:	bl	a520 <flatcc_json_parser_match_scope>
    5c0c:	str	r0, [fp, #-12]
    5c10:	ldr	r0, [fp, #-12]
    5c14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5c18:	cmp	r0, r1
    5c1c:	beq	5c4c <monster_test_global_json_parser_enum+0x428>
    5c20:	ldr	r0, [fp, #-8]
    5c24:	ldr	r1, [fp, #-12]
    5c28:	ldr	r2, [fp, #-16]
    5c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5c30:	ldr	ip, [fp, #8]
    5c34:	ldr	lr, [fp, #12]
    5c38:	str	ip, [sp]
    5c3c:	str	lr, [sp, #4]
    5c40:	bl	4ffc <MyGame_Example_Color_parse_json_enum>
    5c44:	str	r0, [fp, #-12]
    5c48:	b	5c58 <monster_test_global_json_parser_enum+0x434>
    5c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c50:	str	r0, [fp, #-4]
    5c54:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5c58:	b	5c68 <monster_test_global_json_parser_enum+0x444>
    5c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c60:	str	r0, [fp, #-4]
    5c64:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5c68:	b	5d60 <monster_test_global_json_parser_enum+0x53c>
    5c6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5c70:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5c74:	movw	r2, #28016	; 0x6d70
    5c78:	movt	r2, #30817	; 0x7861
    5c7c:	eor	r1, r1, r2
    5c80:	movw	r2, #11846	; 0x2e46
    5c84:	movt	r2, #27749	; 0x6c65
    5c88:	eor	r0, r0, r2
    5c8c:	orr	r0, r0, r1
    5c90:	cmp	r0, #0
    5c94:	bne	5d50 <monster_test_global_json_parser_enum+0x52c>
    5c98:	b	5c9c <monster_test_global_json_parser_enum+0x478>
    5c9c:	ldr	r0, [fp, #-12]
    5ca0:	add	r0, r0, #8
    5ca4:	str	r0, [fp, #-12]
    5ca8:	ldr	r0, [fp, #-12]
    5cac:	ldr	r1, [fp, #-16]
    5cb0:	bl	4e5c <flatcc_json_parser_symbol_part>
    5cb4:	str	r1, [fp, #-36]	; 0xffffffdc
    5cb8:	str	r0, [fp, #-40]	; 0xffffffd8
    5cbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5cc0:	bfc	r0, #0, #16
    5cc4:	movw	r1, #0
    5cc8:	movt	r1, #28527	; 0x6f6f
    5ccc:	teq	r0, r1
    5cd0:	bne	5d40 <monster_test_global_json_parser_enum+0x51c>
    5cd4:	b	5cd8 <monster_test_global_json_parser_enum+0x4b4>
    5cd8:	ldr	r0, [fp, #-8]
    5cdc:	ldr	r1, [fp, #-12]
    5ce0:	str	r1, [fp, #-28]	; 0xffffffe4
    5ce4:	ldr	r2, [fp, #-16]
    5ce8:	movw	r3, #2
    5cec:	bl	a520 <flatcc_json_parser_match_scope>
    5cf0:	str	r0, [fp, #-12]
    5cf4:	ldr	r0, [fp, #-12]
    5cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5cfc:	cmp	r0, r1
    5d00:	beq	5d30 <monster_test_global_json_parser_enum+0x50c>
    5d04:	ldr	r0, [fp, #-8]
    5d08:	ldr	r1, [fp, #-12]
    5d0c:	ldr	r2, [fp, #-16]
    5d10:	ldr	r3, [fp, #-20]	; 0xffffffec
    5d14:	ldr	ip, [fp, #8]
    5d18:	ldr	lr, [fp, #12]
    5d1c:	str	ip, [sp]
    5d20:	str	lr, [sp, #4]
    5d24:	bl	a5a4 <MyGame_Example_Foo_parse_json_enum>
    5d28:	str	r0, [fp, #-12]
    5d2c:	b	5d3c <monster_test_global_json_parser_enum+0x518>
    5d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d34:	str	r0, [fp, #-4]
    5d38:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5d3c:	b	5d4c <monster_test_global_json_parser_enum+0x528>
    5d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d44:	str	r0, [fp, #-4]
    5d48:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5d4c:	b	5d5c <monster_test_global_json_parser_enum+0x538>
    5d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d54:	str	r0, [fp, #-4]
    5d58:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5d5c:	b	5d60 <monster_test_global_json_parser_enum+0x53c>
    5d60:	b	5d64 <monster_test_global_json_parser_enum+0x540>
    5d64:	b	61e8 <monster_test_global_json_parser_enum+0x9c4>
    5d68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5d6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5d70:	movw	r2, #11880	; 0x2e68
    5d74:	movt	r2, #27749	; 0x6c65
    5d78:	subs	r0, r2, r0
    5d7c:	movw	r2, #28016	; 0x6d70
    5d80:	movt	r2, #30817	; 0x7861
    5d84:	sbcs	r1, r2, r1
    5d88:	str	r0, [sp, #20]
    5d8c:	str	r1, [sp, #16]
    5d90:	bcc	5ea8 <monster_test_global_json_parser_enum+0x684>
    5d94:	b	5d98 <monster_test_global_json_parser_enum+0x574>
    5d98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5da0:	movw	r2, #28016	; 0x6d70
    5da4:	movt	r2, #30817	; 0x7861
    5da8:	eor	r1, r1, r2
    5dac:	movw	r2, #11880	; 0x2e68
    5db0:	movt	r2, #27749	; 0x6c65
    5db4:	eor	r0, r0, r2
    5db8:	orr	r0, r0, r1
    5dbc:	cmp	r0, #0
    5dc0:	bne	5e98 <monster_test_global_json_parser_enum+0x674>
    5dc4:	b	5dc8 <monster_test_global_json_parser_enum+0x5a4>
    5dc8:	ldr	r0, [fp, #-12]
    5dcc:	add	r0, r0, #8
    5dd0:	str	r0, [fp, #-12]
    5dd4:	ldr	r0, [fp, #-12]
    5dd8:	ldr	r1, [fp, #-16]
    5ddc:	bl	4e5c <flatcc_json_parser_symbol_part>
    5de0:	str	r1, [fp, #-36]	; 0xffffffdc
    5de4:	str	r0, [fp, #-40]	; 0xffffffd8
    5de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5dec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5df0:	movw	lr, #30815	; 0x785f
    5df4:	movt	lr, #101	; 0x65
    5df8:	eor	lr, lr, r1, lsr #8
    5dfc:	lsr	r0, r0, #8
    5e00:	orr	r0, r0, r1, lsl #24
    5e04:	movw	r1, #30061	; 0x756d
    5e08:	movt	r1, #25966	; 0x656e
    5e0c:	eor	r0, r0, r1
    5e10:	orr	r0, r0, lr
    5e14:	cmp	r0, #0
    5e18:	bne	5e88 <monster_test_global_json_parser_enum+0x664>
    5e1c:	b	5e20 <monster_test_global_json_parser_enum+0x5fc>
    5e20:	ldr	r0, [fp, #-8]
    5e24:	ldr	r1, [fp, #-12]
    5e28:	str	r1, [fp, #-28]	; 0xffffffe4
    5e2c:	ldr	r2, [fp, #-16]
    5e30:	movw	r3, #7
    5e34:	bl	a520 <flatcc_json_parser_match_scope>
    5e38:	str	r0, [fp, #-12]
    5e3c:	ldr	r0, [fp, #-12]
    5e40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5e44:	cmp	r0, r1
    5e48:	beq	5e78 <monster_test_global_json_parser_enum+0x654>
    5e4c:	ldr	r0, [fp, #-8]
    5e50:	ldr	r1, [fp, #-12]
    5e54:	ldr	r2, [fp, #-16]
    5e58:	ldr	r3, [fp, #-20]	; 0xffffffec
    5e5c:	ldr	ip, [fp, #8]
    5e60:	ldr	lr, [fp, #12]
    5e64:	str	ip, [sp]
    5e68:	str	lr, [sp, #4]
    5e6c:	bl	a7e0 <MyGame_Example_hex_enum_parse_json_enum>
    5e70:	str	r0, [fp, #-12]
    5e74:	b	5e84 <monster_test_global_json_parser_enum+0x660>
    5e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e7c:	str	r0, [fp, #-4]
    5e80:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5e84:	b	5e94 <monster_test_global_json_parser_enum+0x670>
    5e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e8c:	str	r0, [fp, #-4]
    5e90:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5e94:	b	5ea4 <monster_test_global_json_parser_enum+0x680>
    5e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e9c:	str	r0, [fp, #-4]
    5ea0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5ea4:	b	61e4 <monster_test_global_json_parser_enum+0x9c0>
    5ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5eac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5eb0:	movw	r2, #11885	; 0x2e6d
    5eb4:	movt	r2, #27749	; 0x6c65
    5eb8:	subs	r0, r2, r0
    5ebc:	movw	r2, #28016	; 0x6d70
    5ec0:	movt	r2, #30817	; 0x7861
    5ec4:	sbcs	r1, r2, r1
    5ec8:	str	r0, [sp, #12]
    5ecc:	str	r1, [sp, #8]
    5ed0:	bcc	5fe8 <monster_test_global_json_parser_enum+0x7c4>
    5ed4:	b	5ed8 <monster_test_global_json_parser_enum+0x6b4>
    5ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5ee0:	movw	r2, #28016	; 0x6d70
    5ee4:	movt	r2, #30817	; 0x7861
    5ee8:	eor	r1, r1, r2
    5eec:	movw	r2, #11881	; 0x2e69
    5ef0:	movt	r2, #27749	; 0x6c65
    5ef4:	eor	r0, r0, r2
    5ef8:	orr	r0, r0, r1
    5efc:	cmp	r0, #0
    5f00:	bne	5fd8 <monster_test_global_json_parser_enum+0x7b4>
    5f04:	b	5f08 <monster_test_global_json_parser_enum+0x6e4>
    5f08:	ldr	r0, [fp, #-12]
    5f0c:	add	r0, r0, #8
    5f10:	str	r0, [fp, #-12]
    5f14:	ldr	r0, [fp, #-12]
    5f18:	ldr	r1, [fp, #-16]
    5f1c:	bl	4e5c <flatcc_json_parser_symbol_part>
    5f20:	str	r1, [fp, #-36]	; 0xffffffdc
    5f24:	str	r0, [fp, #-40]	; 0xffffffd8
    5f28:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5f30:	movw	lr, #29791	; 0x745f
    5f34:	movt	lr, #110	; 0x6e
    5f38:	eor	lr, lr, r1, lsr #8
    5f3c:	lsr	r0, r0, #8
    5f40:	orr	r0, r0, r1, lsl #24
    5f44:	movw	r1, #30061	; 0x756d
    5f48:	movt	r1, #25966	; 0x656e
    5f4c:	eor	r0, r0, r1
    5f50:	orr	r0, r0, lr
    5f54:	cmp	r0, #0
    5f58:	bne	5fc8 <monster_test_global_json_parser_enum+0x7a4>
    5f5c:	b	5f60 <monster_test_global_json_parser_enum+0x73c>
    5f60:	ldr	r0, [fp, #-8]
    5f64:	ldr	r1, [fp, #-12]
    5f68:	str	r1, [fp, #-28]	; 0xffffffe4
    5f6c:	ldr	r2, [fp, #-16]
    5f70:	movw	r3, #7
    5f74:	bl	a520 <flatcc_json_parser_match_scope>
    5f78:	str	r0, [fp, #-12]
    5f7c:	ldr	r0, [fp, #-12]
    5f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5f84:	cmp	r0, r1
    5f88:	beq	5fb8 <monster_test_global_json_parser_enum+0x794>
    5f8c:	ldr	r0, [fp, #-8]
    5f90:	ldr	r1, [fp, #-12]
    5f94:	ldr	r2, [fp, #-16]
    5f98:	ldr	r3, [fp, #-20]	; 0xffffffec
    5f9c:	ldr	ip, [fp, #8]
    5fa0:	ldr	lr, [fp, #12]
    5fa4:	str	ip, [sp]
    5fa8:	str	lr, [sp, #4]
    5fac:	bl	aa38 <MyGame_Example_int_enum_parse_json_enum>
    5fb0:	str	r0, [fp, #-12]
    5fb4:	b	5fc4 <monster_test_global_json_parser_enum+0x7a0>
    5fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fbc:	str	r0, [fp, #-4]
    5fc0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5fc4:	b	5fd4 <monster_test_global_json_parser_enum+0x7b0>
    5fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fcc:	str	r0, [fp, #-4]
    5fd0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5fd4:	b	5fe4 <monster_test_global_json_parser_enum+0x7c0>
    5fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fdc:	str	r0, [fp, #-4]
    5fe0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    5fe4:	b	61e0 <monster_test_global_json_parser_enum+0x9bc>
    5fe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5fec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5ff0:	movw	r2, #28016	; 0x6d70
    5ff4:	movt	r2, #30817	; 0x7861
    5ff8:	eor	r1, r1, r2
    5ffc:	movw	r2, #11886	; 0x2e6e
    6000:	movt	r2, #27749	; 0x6c65
    6004:	eor	r0, r0, r2
    6008:	orr	r0, r0, r1
    600c:	cmp	r0, #0
    6010:	bne	61d0 <monster_test_global_json_parser_enum+0x9ac>
    6014:	b	6018 <monster_test_global_json_parser_enum+0x7f4>
    6018:	ldr	r0, [fp, #-12]
    601c:	add	r0, r0, #8
    6020:	str	r0, [fp, #-12]
    6024:	ldr	r0, [fp, #-12]
    6028:	ldr	r1, [fp, #-16]
    602c:	bl	4e5c <flatcc_json_parser_symbol_part>
    6030:	str	r1, [fp, #-36]	; 0xffffffdc
    6034:	str	r0, [fp, #-40]	; 0xffffffd8
    6038:	ldr	r0, [fp, #-40]	; 0xffffffd8
    603c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6040:	movw	lr, #26463	; 0x675f
    6044:	movt	lr, #101	; 0x65
    6048:	eor	lr, lr, r1, lsr #8
    604c:	lsr	r0, r0, #8
    6050:	orr	r0, r0, r1, lsl #24
    6054:	movw	r1, #30061	; 0x756d
    6058:	movt	r1, #25966	; 0x656e
    605c:	eor	r0, r0, r1
    6060:	orr	r0, r0, lr
    6064:	cmp	r0, #0
    6068:	bne	60d0 <monster_test_global_json_parser_enum+0x8ac>
    606c:	b	6070 <monster_test_global_json_parser_enum+0x84c>
    6070:	ldr	r0, [fp, #-8]
    6074:	ldr	r1, [fp, #-12]
    6078:	str	r1, [fp, #-28]	; 0xffffffe4
    607c:	ldr	r2, [fp, #-16]
    6080:	movw	r3, #7
    6084:	bl	a520 <flatcc_json_parser_match_scope>
    6088:	str	r0, [fp, #-12]
    608c:	ldr	r0, [fp, #-12]
    6090:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6094:	cmp	r0, r1
    6098:	beq	60c8 <monster_test_global_json_parser_enum+0x8a4>
    609c:	ldr	r0, [fp, #-8]
    60a0:	ldr	r1, [fp, #-12]
    60a4:	ldr	r2, [fp, #-16]
    60a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    60ac:	ldr	ip, [fp, #8]
    60b0:	ldr	lr, [fp, #12]
    60b4:	str	ip, [sp]
    60b8:	str	lr, [sp, #4]
    60bc:	bl	ad78 <MyGame_Example_neg_enum_parse_json_enum>
    60c0:	str	r0, [fp, #-12]
    60c4:	b	60cc <monster_test_global_json_parser_enum+0x8a8>
    60c8:	b	60d8 <monster_test_global_json_parser_enum+0x8b4>
    60cc:	b	60d4 <monster_test_global_json_parser_enum+0x8b0>
    60d0:	b	60d8 <monster_test_global_json_parser_enum+0x8b4>
    60d4:	b	61cc <monster_test_global_json_parser_enum+0x9a8>
    60d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    60dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    60e0:	movw	r2, #25965	; 0x656d
    60e4:	movt	r2, #28532	; 0x6f74
    60e8:	eor	r1, r1, r2
    60ec:	movw	r2, #31077	; 0x7965
    60f0:	movt	r2, #28788	; 0x7074
    60f4:	eor	r0, r0, r2
    60f8:	orr	r0, r0, r1
    60fc:	cmp	r0, #0
    6100:	bne	61bc <monster_test_global_json_parser_enum+0x998>
    6104:	b	6108 <monster_test_global_json_parser_enum+0x8e4>
    6108:	ldr	r0, [fp, #-12]
    610c:	add	r0, r0, #8
    6110:	str	r0, [fp, #-12]
    6114:	ldr	r0, [fp, #-12]
    6118:	ldr	r1, [fp, #-16]
    611c:	bl	4e5c <flatcc_json_parser_symbol_part>
    6120:	str	r1, [fp, #-36]	; 0xffffffdc
    6124:	str	r0, [fp, #-40]	; 0xffffffd8
    6128:	ldr	r0, [fp, #-36]	; 0xffffffdc
    612c:	bic	r0, r0, #255	; 0xff
    6130:	movw	r1, #27904	; 0x6d00
    6134:	movt	r1, #28277	; 0x6e75
    6138:	teq	r0, r1
    613c:	bne	61ac <monster_test_global_json_parser_enum+0x988>
    6140:	b	6144 <monster_test_global_json_parser_enum+0x920>
    6144:	ldr	r0, [fp, #-8]
    6148:	ldr	r1, [fp, #-12]
    614c:	str	r1, [fp, #-28]	; 0xffffffe4
    6150:	ldr	r2, [fp, #-16]
    6154:	movw	r3, #3
    6158:	bl	a520 <flatcc_json_parser_match_scope>
    615c:	str	r0, [fp, #-12]
    6160:	ldr	r0, [fp, #-12]
    6164:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6168:	cmp	r0, r1
    616c:	beq	619c <monster_test_global_json_parser_enum+0x978>
    6170:	ldr	r0, [fp, #-8]
    6174:	ldr	r1, [fp, #-12]
    6178:	ldr	r2, [fp, #-16]
    617c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6180:	ldr	ip, [fp, #8]
    6184:	ldr	lr, [fp, #12]
    6188:	str	ip, [sp]
    618c:	str	lr, [sp, #4]
    6190:	bl	afb4 <MyGame_Example_notemptyenum_parse_json_enum>
    6194:	str	r0, [fp, #-12]
    6198:	b	61a8 <monster_test_global_json_parser_enum+0x984>
    619c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61a0:	str	r0, [fp, #-4]
    61a4:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    61a8:	b	61b8 <monster_test_global_json_parser_enum+0x994>
    61ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61b0:	str	r0, [fp, #-4]
    61b4:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    61b8:	b	61c8 <monster_test_global_json_parser_enum+0x9a4>
    61bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61c0:	str	r0, [fp, #-4]
    61c4:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    61c8:	b	61cc <monster_test_global_json_parser_enum+0x9a8>
    61cc:	b	61dc <monster_test_global_json_parser_enum+0x9b8>
    61d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61d4:	str	r0, [fp, #-4]
    61d8:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    61dc:	b	61e0 <monster_test_global_json_parser_enum+0x9bc>
    61e0:	b	61e4 <monster_test_global_json_parser_enum+0x9c0>
    61e4:	b	61e8 <monster_test_global_json_parser_enum+0x9c4>
    61e8:	b	63f8 <monster_test_global_json_parser_enum+0xbd4>
    61ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    61f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    61f4:	movw	r2, #18273	; 0x4761
    61f8:	movt	r2, #19833	; 0x4d79
    61fc:	eor	r1, r1, r2
    6200:	movw	r2, #11855	; 0x2e4f
    6204:	movt	r2, #28005	; 0x6d65
    6208:	eor	r0, r0, r2
    620c:	orr	r0, r0, r1
    6210:	cmp	r0, #0
    6214:	bne	63e8 <monster_test_global_json_parser_enum+0xbc4>
    6218:	b	621c <monster_test_global_json_parser_enum+0x9f8>
    621c:	ldr	r0, [fp, #-12]
    6220:	add	r0, r0, #8
    6224:	str	r0, [fp, #-12]
    6228:	ldr	r0, [fp, #-12]
    622c:	ldr	r1, [fp, #-16]
    6230:	bl	4e5c <flatcc_json_parser_symbol_part>
    6234:	str	r1, [fp, #-36]	; 0xffffffdc
    6238:	str	r0, [fp, #-40]	; 0xffffffd8
    623c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6240:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6244:	movw	lr, #25970	; 0x6572
    6248:	movt	lr, #29800	; 0x7468
    624c:	eor	r1, r1, lr
    6250:	movw	lr, #28005	; 0x6d65
    6254:	movt	lr, #20065	; 0x4e61
    6258:	eor	r0, r0, lr
    625c:	orr	r0, r0, r1
    6260:	cmp	r0, #0
    6264:	bne	63d8 <monster_test_global_json_parser_enum+0xbb4>
    6268:	b	626c <monster_test_global_json_parser_enum+0xa48>
    626c:	ldr	r0, [fp, #-12]
    6270:	add	r0, r0, #8
    6274:	str	r0, [fp, #-12]
    6278:	ldr	r0, [fp, #-12]
    627c:	ldr	r1, [fp, #-16]
    6280:	bl	4e5c <flatcc_json_parser_symbol_part>
    6284:	str	r1, [fp, #-36]	; 0xffffffdc
    6288:	str	r0, [fp, #-40]	; 0xffffffd8
    628c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6290:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6294:	movw	lr, #24931	; 0x6163
    6298:	movt	lr, #21360	; 0x5370
    629c:	eor	r1, r1, lr
    62a0:	movw	lr, #18034	; 0x4672
    62a4:	movt	lr, #25902	; 0x652e
    62a8:	eor	r0, r0, lr
    62ac:	orr	r0, r0, r1
    62b0:	cmp	r0, #0
    62b4:	bne	63c8 <monster_test_global_json_parser_enum+0xba4>
    62b8:	b	62bc <monster_test_global_json_parser_enum+0xa98>
    62bc:	ldr	r0, [fp, #-12]
    62c0:	add	r0, r0, #8
    62c4:	str	r0, [fp, #-12]
    62c8:	ldr	r0, [fp, #-12]
    62cc:	ldr	r1, [fp, #-16]
    62d0:	bl	4e5c <flatcc_json_parser_symbol_part>
    62d4:	str	r1, [fp, #-36]	; 0xffffffdc
    62d8:	str	r0, [fp, #-40]	; 0xffffffd8
    62dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    62e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    62e4:	movw	lr, #18798	; 0x496e
    62e8:	movt	lr, #28525	; 0x6f6d
    62ec:	eor	r1, r1, lr
    62f0:	movw	lr, #30052	; 0x7564
    62f4:	movt	lr, #25452	; 0x636c
    62f8:	eor	r0, r0, lr
    62fc:	orr	r0, r0, r1
    6300:	cmp	r0, #0
    6304:	bne	63b8 <monster_test_global_json_parser_enum+0xb94>
    6308:	b	630c <monster_test_global_json_parser_enum+0xae8>
    630c:	ldr	r0, [fp, #-12]
    6310:	add	r0, r0, #8
    6314:	str	r0, [fp, #-12]
    6318:	ldr	r0, [fp, #-12]
    631c:	ldr	r1, [fp, #-16]
    6320:	bl	4e5c <flatcc_json_parser_symbol_part>
    6324:	str	r1, [fp, #-36]	; 0xffffffdc
    6328:	str	r0, [fp, #-40]	; 0xffffffd8
    632c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6330:	and	r0, r0, #-16777216	; 0xff000000
    6334:	teq	r0, #1694498816	; 0x65000000
    6338:	bne	63a8 <monster_test_global_json_parser_enum+0xb84>
    633c:	b	6340 <monster_test_global_json_parser_enum+0xb1c>
    6340:	ldr	r0, [fp, #-8]
    6344:	ldr	r1, [fp, #-12]
    6348:	str	r1, [fp, #-28]	; 0xffffffe4
    634c:	ldr	r2, [fp, #-16]
    6350:	movw	r3, #1
    6354:	bl	a520 <flatcc_json_parser_match_scope>
    6358:	str	r0, [fp, #-12]
    635c:	ldr	r0, [fp, #-12]
    6360:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6364:	cmp	r0, r1
    6368:	beq	6398 <monster_test_global_json_parser_enum+0xb74>
    636c:	ldr	r0, [fp, #-8]
    6370:	ldr	r1, [fp, #-12]
    6374:	ldr	r2, [fp, #-16]
    6378:	ldr	r3, [fp, #-20]	; 0xffffffec
    637c:	ldr	ip, [fp, #8]
    6380:	ldr	lr, [fp, #12]
    6384:	str	ip, [sp]
    6388:	str	lr, [sp, #4]
    638c:	bl	b660 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    6390:	str	r0, [fp, #-12]
    6394:	b	63a4 <monster_test_global_json_parser_enum+0xb80>
    6398:	ldr	r0, [fp, #-24]	; 0xffffffe8
    639c:	str	r0, [fp, #-4]
    63a0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63a4:	b	63b4 <monster_test_global_json_parser_enum+0xb90>
    63a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63ac:	str	r0, [fp, #-4]
    63b0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63b4:	b	63c4 <monster_test_global_json_parser_enum+0xba0>
    63b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63bc:	str	r0, [fp, #-4]
    63c0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63c4:	b	63d4 <monster_test_global_json_parser_enum+0xbb0>
    63c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63cc:	str	r0, [fp, #-4]
    63d0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63d4:	b	63e4 <monster_test_global_json_parser_enum+0xbc0>
    63d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63dc:	str	r0, [fp, #-4]
    63e0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63e4:	b	63f4 <monster_test_global_json_parser_enum+0xbd0>
    63e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63ec:	str	r0, [fp, #-4]
    63f0:	b	6404 <monster_test_global_json_parser_enum+0xbe0>
    63f4:	b	63f8 <monster_test_global_json_parser_enum+0xbd4>
    63f8:	b	63fc <monster_test_global_json_parser_enum+0xbd8>
    63fc:	ldr	r0, [fp, #-12]
    6400:	str	r0, [fp, #-4]
    6404:	ldr	r0, [fp, #-4]
    6408:	mov	sp, fp
    640c:	pop	{fp, pc}

00006410 <flatcc_json_parser_int8>:
    6410:	push	{r4, r5, fp, lr}
    6414:	add	fp, sp, #8
    6418:	sub	sp, sp, #56	; 0x38
    641c:	str	r0, [fp, #-16]
    6420:	str	r1, [fp, #-20]	; 0xffffffec
    6424:	str	r2, [fp, #-24]	; 0xffffffe8
    6428:	str	r3, [fp, #-28]	; 0xffffffe4
    642c:	mov	r0, #0
    6430:	str	r0, [sp, #28]
    6434:	str	r0, [sp, #24]
    6438:	movw	r0, #0
    643c:	str	r0, [sp, #20]
    6440:	ldr	r0, [fp, #-20]	; 0xffffffec
    6444:	str	r0, [sp, #16]
    6448:	ldr	r0, [fp, #-28]	; 0xffffffe4
    644c:	movw	r1, #0
    6450:	strb	r1, [r0]
    6454:	ldr	r0, [fp, #-20]	; 0xffffffec
    6458:	ldr	r1, [fp, #-24]	; 0xffffffe8
    645c:	cmp	r0, r1
    6460:	bne	6470 <flatcc_json_parser_int8+0x60>
    6464:	ldr	r0, [fp, #-20]	; 0xffffffec
    6468:	str	r0, [fp, #-12]
    646c:	b	64e0 <flatcc_json_parser_int8+0xd0>
    6470:	ldr	r0, [fp, #-16]
    6474:	ldr	r1, [fp, #-20]	; 0xffffffec
    6478:	ldr	r2, [fp, #-24]	; 0xffffffe8
    647c:	add	r3, sp, #20
    6480:	add	ip, sp, #24
    6484:	str	ip, [sp]
    6488:	bl	0 <flatcc_json_parser_integer>
    648c:	str	r0, [fp, #-20]	; 0xffffffec
    6490:	ldr	r0, [fp, #-20]	; 0xffffffec
    6494:	ldr	r1, [sp, #16]
    6498:	cmp	r0, r1
    649c:	beq	64d8 <flatcc_json_parser_int8+0xc8>
    64a0:	ldr	r0, [fp, #-16]
    64a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    64a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    64ac:	ldr	r3, [sp, #20]
    64b0:	ldr	ip, [sp, #24]
    64b4:	ldr	lr, [sp, #28]
    64b8:	ldr	r4, [fp, #-28]	; 0xffffffe4
    64bc:	mov	r5, sp
    64c0:	str	r4, [r5, #8]
    64c4:	str	lr, [r5, #4]
    64c8:	str	ip, [r5]
    64cc:	bl	b848 <flatcc_json_parser_coerce_int8>
    64d0:	str	r0, [fp, #-12]
    64d4:	b	64e0 <flatcc_json_parser_int8+0xd0>
    64d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    64dc:	str	r0, [fp, #-12]
    64e0:	ldr	r0, [fp, #-12]
    64e4:	sub	sp, fp, #8
    64e8:	pop	{r4, r5, fp, pc}

000064ec <flatcc_json_parser_symbolic_int8>:
    64ec:	push	{r4, r5, r6, sl, fp, lr}
    64f0:	add	fp, sp, #16
    64f4:	sub	sp, sp, #88	; 0x58
    64f8:	ldr	ip, [fp, #8]
    64fc:	str	r0, [fp, #-24]	; 0xffffffe8
    6500:	str	r1, [fp, #-28]	; 0xffffffe4
    6504:	str	r2, [fp, #-32]	; 0xffffffe0
    6508:	str	r3, [fp, #-36]	; 0xffffffdc
    650c:	movw	r0, #0
    6510:	strb	r0, [fp, #-45]	; 0xffffffd3
    6514:	movw	r1, #0
    6518:	str	r1, [sp, #36]	; 0x24
    651c:	ldr	r1, [fp, #8]
    6520:	strb	r0, [r1]
    6524:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6528:	ldr	r1, [fp, #-28]	; 0xffffffe4
    652c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6530:	str	ip, [sp, #32]
    6534:	bl	b934 <flatcc_json_parser_constant_start>
    6538:	str	r0, [fp, #-28]	; 0xffffffe4
    653c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6540:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6544:	cmp	r0, r1
    6548:	bne	6558 <flatcc_json_parser_symbolic_int8+0x6c>
    654c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6550:	str	r0, [fp, #-20]	; 0xffffffec
    6554:	b	670c <flatcc_json_parser_symbolic_int8+0x220>
    6558:	b	655c <flatcc_json_parser_symbolic_int8+0x70>
    655c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6560:	str	r0, [fp, #-40]	; 0xffffffd8
    6564:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6568:	ldr	r0, [r0]
    656c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6570:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6574:	str	r2, [fp, #-44]	; 0xffffffd4
    6578:	ldr	r3, [fp, #-32]	; 0xffffffe0
    657c:	str	r0, [sp, #28]
    6580:	mov	r0, r1
    6584:	mov	r1, r2
    6588:	mov	r2, r3
    658c:	add	r3, sp, #44	; 0x2c
    6590:	add	ip, sp, #48	; 0x30
    6594:	str	ip, [sp]
    6598:	add	ip, sp, #40	; 0x28
    659c:	str	ip, [sp, #4]
    65a0:	ldr	ip, [sp, #28]
    65a4:	blx	ip
    65a8:	str	r0, [fp, #-28]	; 0xffffffe4
    65ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    65b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    65b4:	cmp	r0, r1
    65b8:	bne	65c8 <flatcc_json_parser_symbolic_int8+0xdc>
    65bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    65c0:	str	r0, [fp, #-20]	; 0xffffffec
    65c4:	b	670c <flatcc_json_parser_symbolic_int8+0x220>
    65c8:	b	65cc <flatcc_json_parser_symbolic_int8+0xe0>
    65cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    65d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    65d4:	cmp	r0, r1
    65d8:	movw	r0, #0
    65dc:	str	r0, [sp, #24]
    65e0:	bne	6608 <flatcc_json_parser_symbolic_int8+0x11c>
    65e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    65e8:	add	r1, r0, #4
    65ec:	str	r1, [fp, #-40]	; 0xffffffd8
    65f0:	ldr	r0, [r0, #4]
    65f4:	movw	r1, #0
    65f8:	cmp	r0, r1
    65fc:	movw	r0, #0
    6600:	movne	r0, #1
    6604:	str	r0, [sp, #24]
    6608:	ldr	r0, [sp, #24]
    660c:	tst	r0, #1
    6610:	bne	6564 <flatcc_json_parser_symbolic_int8+0x78>
    6614:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6618:	ldr	r1, [fp, #-28]	; 0xffffffe4
    661c:	cmp	r0, r1
    6620:	bne	6640 <flatcc_json_parser_symbolic_int8+0x154>
    6624:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6628:	ldr	r1, [fp, #-28]	; 0xffffffe4
    662c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6630:	movw	r3, #23
    6634:	bl	0 <flatcc_json_parser_set_error>
    6638:	str	r0, [fp, #-20]	; 0xffffffec
    663c:	b	670c <flatcc_json_parser_symbolic_int8+0x220>
    6640:	ldr	r0, [sp, #36]	; 0x24
    6644:	add	r1, r0, #1
    6648:	str	r1, [sp, #36]	; 0x24
    664c:	cmp	r0, #0
    6650:	beq	6680 <flatcc_json_parser_symbolic_int8+0x194>
    6654:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6658:	ldr	r0, [r0, #12]
    665c:	cmp	r0, #0
    6660:	beq	6680 <flatcc_json_parser_symbolic_int8+0x194>
    6664:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6668:	ldr	r1, [fp, #-28]	; 0xffffffe4
    666c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6670:	movw	r3, #14
    6674:	bl	0 <flatcc_json_parser_set_error>
    6678:	str	r0, [fp, #-20]	; 0xffffffec
    667c:	b	670c <flatcc_json_parser_symbolic_int8+0x220>
    6680:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6684:	mov	r1, r0
    6688:	ldr	r2, [fp, #-24]	; 0xffffffe8
    668c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6690:	ldr	ip, [sp, #44]	; 0x2c
    6694:	ldr	lr, [sp, #48]	; 0x30
    6698:	ldr	r4, [sp, #52]	; 0x34
    669c:	mov	r5, sp
    66a0:	sub	r6, fp, #45	; 0x2d
    66a4:	str	r6, [r5, #8]
    66a8:	str	r4, [r5, #4]
    66ac:	str	lr, [r5]
    66b0:	str	r0, [sp, #20]
    66b4:	mov	r0, r2
    66b8:	str	r1, [sp, #16]
    66bc:	mov	r1, r3
    66c0:	ldr	r2, [sp, #20]
    66c4:	mov	r3, ip
    66c8:	bl	b848 <flatcc_json_parser_coerce_int8>
    66cc:	ldr	r1, [sp, #16]
    66d0:	cmp	r1, r0
    66d4:	bne	66e4 <flatcc_json_parser_symbolic_int8+0x1f8>
    66d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    66dc:	str	r0, [fp, #-20]	; 0xffffffec
    66e0:	b	670c <flatcc_json_parser_symbolic_int8+0x220>
    66e4:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
    66e8:	ldr	r1, [fp, #8]
    66ec:	ldrsb	r2, [r1]
    66f0:	add	r0, r2, r0
    66f4:	strb	r0, [r1]
    66f8:	ldr	r0, [sp, #40]	; 0x28
    66fc:	cmp	r0, #0
    6700:	bne	655c <flatcc_json_parser_symbolic_int8+0x70>
    6704:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6708:	str	r0, [fp, #-20]	; 0xffffffec
    670c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6710:	sub	sp, fp, #16
    6714:	pop	{r4, r5, r6, sl, fp, pc}

00006718 <flatbuffers_int8_write_to_pe>:
    6718:	push	{fp, lr}
    671c:	mov	fp, sp
    6720:	sub	sp, sp, #8
    6724:	str	r0, [sp, #4]
    6728:	strb	r1, [sp, #3]
    672c:	ldrsb	r0, [sp, #3]
    6730:	bl	b990 <flatbuffers_int8_cast_to_pe>
    6734:	ldr	r1, [sp, #4]
    6738:	strb	r0, [r1]
    673c:	mov	sp, fp
    6740:	pop	{fp, pc}

00006744 <flatcc_json_parser_array_start>:
    6744:	push	{fp, lr}
    6748:	mov	fp, sp
    674c:	sub	sp, sp, #24
    6750:	str	r0, [fp, #-8]
    6754:	str	r1, [sp, #12]
    6758:	str	r2, [sp, #8]
    675c:	str	r3, [sp, #4]
    6760:	ldr	r0, [sp, #12]
    6764:	ldr	r1, [sp, #8]
    6768:	cmp	r0, r1
    676c:	beq	6780 <flatcc_json_parser_array_start+0x3c>
    6770:	ldr	r0, [sp, #12]
    6774:	ldrb	r0, [r0]
    6778:	cmp	r0, #91	; 0x5b
    677c:	beq	67a8 <flatcc_json_parser_array_start+0x64>
    6780:	ldr	r0, [sp, #4]
    6784:	movw	r1, #0
    6788:	str	r1, [r0]
    678c:	ldr	r0, [fp, #-8]
    6790:	ldr	r1, [sp, #12]
    6794:	ldr	r2, [sp, #8]
    6798:	movw	r3, #22
    679c:	bl	0 <flatcc_json_parser_set_error>
    67a0:	str	r0, [fp, #-4]
    67a4:	b	681c <flatcc_json_parser_array_start+0xd8>
    67a8:	ldr	r0, [fp, #-8]
    67ac:	ldr	r1, [sp, #12]
    67b0:	add	r1, r1, #1
    67b4:	ldr	r2, [sp, #8]
    67b8:	bl	a310 <flatcc_json_parser_space>
    67bc:	str	r0, [sp, #12]
    67c0:	ldr	r0, [sp, #12]
    67c4:	ldr	r1, [sp, #8]
    67c8:	cmp	r0, r1
    67cc:	beq	6808 <flatcc_json_parser_array_start+0xc4>
    67d0:	ldr	r0, [sp, #12]
    67d4:	ldrb	r0, [r0]
    67d8:	cmp	r0, #93	; 0x5d
    67dc:	bne	6808 <flatcc_json_parser_array_start+0xc4>
    67e0:	ldr	r0, [sp, #4]
    67e4:	movw	r1, #0
    67e8:	str	r1, [r0]
    67ec:	ldr	r0, [fp, #-8]
    67f0:	ldr	r1, [sp, #12]
    67f4:	add	r1, r1, #1
    67f8:	ldr	r2, [sp, #8]
    67fc:	bl	a310 <flatcc_json_parser_space>
    6800:	str	r0, [fp, #-4]
    6804:	b	681c <flatcc_json_parser_array_start+0xd8>
    6808:	ldr	r0, [sp, #4]
    680c:	movw	r1, #1
    6810:	str	r1, [r0]
    6814:	ldr	r0, [sp, #12]
    6818:	str	r0, [fp, #-4]
    681c:	ldr	r0, [fp, #-4]
    6820:	mov	sp, fp
    6824:	pop	{fp, pc}

00006828 <flatcc_json_parser_uint8>:
    6828:	push	{r4, r5, fp, lr}
    682c:	add	fp, sp, #8
    6830:	sub	sp, sp, #56	; 0x38
    6834:	str	r0, [fp, #-16]
    6838:	str	r1, [fp, #-20]	; 0xffffffec
    683c:	str	r2, [fp, #-24]	; 0xffffffe8
    6840:	str	r3, [fp, #-28]	; 0xffffffe4
    6844:	mov	r0, #0
    6848:	str	r0, [sp, #28]
    684c:	str	r0, [sp, #24]
    6850:	movw	r0, #0
    6854:	str	r0, [sp, #20]
    6858:	ldr	r0, [fp, #-20]	; 0xffffffec
    685c:	str	r0, [sp, #16]
    6860:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6864:	movw	r1, #0
    6868:	strb	r1, [r0]
    686c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6870:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6874:	cmp	r0, r1
    6878:	bne	6888 <flatcc_json_parser_uint8+0x60>
    687c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6880:	str	r0, [fp, #-12]
    6884:	b	68f8 <flatcc_json_parser_uint8+0xd0>
    6888:	ldr	r0, [fp, #-16]
    688c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6890:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6894:	add	r3, sp, #20
    6898:	add	ip, sp, #24
    689c:	str	ip, [sp]
    68a0:	bl	0 <flatcc_json_parser_integer>
    68a4:	str	r0, [fp, #-20]	; 0xffffffec
    68a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    68ac:	ldr	r1, [sp, #16]
    68b0:	cmp	r0, r1
    68b4:	beq	68f0 <flatcc_json_parser_uint8+0xc8>
    68b8:	ldr	r0, [fp, #-16]
    68bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    68c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    68c4:	ldr	r3, [sp, #20]
    68c8:	ldr	ip, [sp, #24]
    68cc:	ldr	lr, [sp, #28]
    68d0:	ldr	r4, [fp, #-28]	; 0xffffffe4
    68d4:	mov	r5, sp
    68d8:	str	r4, [r5, #8]
    68dc:	str	lr, [r5, #4]
    68e0:	str	ip, [r5]
    68e4:	bl	b9a4 <flatcc_json_parser_coerce_uint8>
    68e8:	str	r0, [fp, #-12]
    68ec:	b	68f8 <flatcc_json_parser_uint8+0xd0>
    68f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    68f4:	str	r0, [fp, #-12]
    68f8:	ldr	r0, [fp, #-12]
    68fc:	sub	sp, fp, #8
    6900:	pop	{r4, r5, fp, pc}

00006904 <flatcc_json_parser_symbolic_uint8>:
    6904:	push	{r4, r5, r6, sl, fp, lr}
    6908:	add	fp, sp, #16
    690c:	sub	sp, sp, #88	; 0x58
    6910:	ldr	ip, [fp, #8]
    6914:	str	r0, [fp, #-24]	; 0xffffffe8
    6918:	str	r1, [fp, #-28]	; 0xffffffe4
    691c:	str	r2, [fp, #-32]	; 0xffffffe0
    6920:	str	r3, [fp, #-36]	; 0xffffffdc
    6924:	movw	r0, #0
    6928:	strb	r0, [fp, #-45]	; 0xffffffd3
    692c:	movw	r1, #0
    6930:	str	r1, [sp, #36]	; 0x24
    6934:	ldr	r1, [fp, #8]
    6938:	strb	r0, [r1]
    693c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6940:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6944:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6948:	str	ip, [sp, #32]
    694c:	bl	b934 <flatcc_json_parser_constant_start>
    6950:	str	r0, [fp, #-28]	; 0xffffffe4
    6954:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6958:	ldr	r1, [fp, #-32]	; 0xffffffe0
    695c:	cmp	r0, r1
    6960:	bne	6970 <flatcc_json_parser_symbolic_uint8+0x6c>
    6964:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6968:	str	r0, [fp, #-20]	; 0xffffffec
    696c:	b	6b24 <flatcc_json_parser_symbolic_uint8+0x220>
    6970:	b	6974 <flatcc_json_parser_symbolic_uint8+0x70>
    6974:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6978:	str	r0, [fp, #-40]	; 0xffffffd8
    697c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6980:	ldr	r0, [r0]
    6984:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6988:	ldr	r2, [fp, #-28]	; 0xffffffe4
    698c:	str	r2, [fp, #-44]	; 0xffffffd4
    6990:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6994:	str	r0, [sp, #28]
    6998:	mov	r0, r1
    699c:	mov	r1, r2
    69a0:	mov	r2, r3
    69a4:	add	r3, sp, #44	; 0x2c
    69a8:	add	ip, sp, #48	; 0x30
    69ac:	str	ip, [sp]
    69b0:	add	ip, sp, #40	; 0x28
    69b4:	str	ip, [sp, #4]
    69b8:	ldr	ip, [sp, #28]
    69bc:	blx	ip
    69c0:	str	r0, [fp, #-28]	; 0xffffffe4
    69c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    69cc:	cmp	r0, r1
    69d0:	bne	69e0 <flatcc_json_parser_symbolic_uint8+0xdc>
    69d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69d8:	str	r0, [fp, #-20]	; 0xffffffec
    69dc:	b	6b24 <flatcc_json_parser_symbolic_uint8+0x220>
    69e0:	b	69e4 <flatcc_json_parser_symbolic_uint8+0xe0>
    69e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    69ec:	cmp	r0, r1
    69f0:	movw	r0, #0
    69f4:	str	r0, [sp, #24]
    69f8:	bne	6a20 <flatcc_json_parser_symbolic_uint8+0x11c>
    69fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6a00:	add	r1, r0, #4
    6a04:	str	r1, [fp, #-40]	; 0xffffffd8
    6a08:	ldr	r0, [r0, #4]
    6a0c:	movw	r1, #0
    6a10:	cmp	r0, r1
    6a14:	movw	r0, #0
    6a18:	movne	r0, #1
    6a1c:	str	r0, [sp, #24]
    6a20:	ldr	r0, [sp, #24]
    6a24:	tst	r0, #1
    6a28:	bne	697c <flatcc_json_parser_symbolic_uint8+0x78>
    6a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a34:	cmp	r0, r1
    6a38:	bne	6a58 <flatcc_json_parser_symbolic_uint8+0x154>
    6a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6a48:	movw	r3, #23
    6a4c:	bl	0 <flatcc_json_parser_set_error>
    6a50:	str	r0, [fp, #-20]	; 0xffffffec
    6a54:	b	6b24 <flatcc_json_parser_symbolic_uint8+0x220>
    6a58:	ldr	r0, [sp, #36]	; 0x24
    6a5c:	add	r1, r0, #1
    6a60:	str	r1, [sp, #36]	; 0x24
    6a64:	cmp	r0, #0
    6a68:	beq	6a98 <flatcc_json_parser_symbolic_uint8+0x194>
    6a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a70:	ldr	r0, [r0, #12]
    6a74:	cmp	r0, #0
    6a78:	beq	6a98 <flatcc_json_parser_symbolic_uint8+0x194>
    6a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6a88:	movw	r3, #14
    6a8c:	bl	0 <flatcc_json_parser_set_error>
    6a90:	str	r0, [fp, #-20]	; 0xffffffec
    6a94:	b	6b24 <flatcc_json_parser_symbolic_uint8+0x220>
    6a98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a9c:	mov	r1, r0
    6aa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6aa8:	ldr	ip, [sp, #44]	; 0x2c
    6aac:	ldr	lr, [sp, #48]	; 0x30
    6ab0:	ldr	r4, [sp, #52]	; 0x34
    6ab4:	mov	r5, sp
    6ab8:	sub	r6, fp, #45	; 0x2d
    6abc:	str	r6, [r5, #8]
    6ac0:	str	r4, [r5, #4]
    6ac4:	str	lr, [r5]
    6ac8:	str	r0, [sp, #20]
    6acc:	mov	r0, r2
    6ad0:	str	r1, [sp, #16]
    6ad4:	mov	r1, r3
    6ad8:	ldr	r2, [sp, #20]
    6adc:	mov	r3, ip
    6ae0:	bl	b9a4 <flatcc_json_parser_coerce_uint8>
    6ae4:	ldr	r1, [sp, #16]
    6ae8:	cmp	r1, r0
    6aec:	bne	6afc <flatcc_json_parser_symbolic_uint8+0x1f8>
    6af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6af4:	str	r0, [fp, #-20]	; 0xffffffec
    6af8:	b	6b24 <flatcc_json_parser_symbolic_uint8+0x220>
    6afc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    6b00:	ldr	r1, [fp, #8]
    6b04:	ldrb	r2, [r1]
    6b08:	add	r0, r2, r0
    6b0c:	strb	r0, [r1]
    6b10:	ldr	r0, [sp, #40]	; 0x28
    6b14:	cmp	r0, #0
    6b18:	bne	6974 <flatcc_json_parser_symbolic_uint8+0x70>
    6b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6b20:	str	r0, [fp, #-20]	; 0xffffffec
    6b24:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b28:	sub	sp, fp, #16
    6b2c:	pop	{r4, r5, r6, sl, fp, pc}

00006b30 <flatbuffers_uint8_write_to_pe>:
    6b30:	push	{fp, lr}
    6b34:	mov	fp, sp
    6b38:	sub	sp, sp, #8
    6b3c:	str	r0, [sp, #4]
    6b40:	strb	r1, [sp, #3]
    6b44:	ldrb	r0, [sp, #3]
    6b48:	bl	ba5c <flatbuffers_uint8_cast_to_pe>
    6b4c:	ldr	r1, [sp, #4]
    6b50:	strb	r0, [r1]
    6b54:	mov	sp, fp
    6b58:	pop	{fp, pc}

00006b5c <flatcc_json_parser_array_end>:
    6b5c:	push	{fp, lr}
    6b60:	mov	fp, sp
    6b64:	sub	sp, sp, #24
    6b68:	str	r0, [fp, #-8]
    6b6c:	str	r1, [sp, #12]
    6b70:	str	r2, [sp, #8]
    6b74:	str	r3, [sp, #4]
    6b78:	ldr	r0, [fp, #-8]
    6b7c:	ldr	r1, [sp, #12]
    6b80:	ldr	r2, [sp, #8]
    6b84:	bl	a310 <flatcc_json_parser_space>
    6b88:	str	r0, [sp, #12]
    6b8c:	ldr	r0, [sp, #12]
    6b90:	ldr	r1, [sp, #8]
    6b94:	cmp	r0, r1
    6b98:	bne	6bb4 <flatcc_json_parser_array_end+0x58>
    6b9c:	ldr	r0, [sp, #4]
    6ba0:	movw	r1, #0
    6ba4:	str	r1, [r0]
    6ba8:	ldr	r0, [sp, #12]
    6bac:	str	r0, [fp, #-4]
    6bb0:	b	6cb4 <flatcc_json_parser_array_end+0x158>
    6bb4:	ldr	r0, [sp, #12]
    6bb8:	ldrb	r0, [r0]
    6bbc:	cmp	r0, #44	; 0x2c
    6bc0:	beq	6c18 <flatcc_json_parser_array_end+0xbc>
    6bc4:	ldr	r0, [sp, #4]
    6bc8:	movw	r1, #0
    6bcc:	str	r1, [r0]
    6bd0:	ldr	r0, [sp, #12]
    6bd4:	ldrb	r0, [r0]
    6bd8:	cmp	r0, #93	; 0x5d
    6bdc:	beq	6bfc <flatcc_json_parser_array_end+0xa0>
    6be0:	ldr	r0, [fp, #-8]
    6be4:	ldr	r1, [sp, #12]
    6be8:	ldr	r2, [sp, #8]
    6bec:	movw	r3, #9
    6bf0:	bl	0 <flatcc_json_parser_set_error>
    6bf4:	str	r0, [fp, #-4]
    6bf8:	b	6cb4 <flatcc_json_parser_array_end+0x158>
    6bfc:	ldr	r0, [fp, #-8]
    6c00:	ldr	r1, [sp, #12]
    6c04:	add	r1, r1, #1
    6c08:	ldr	r2, [sp, #8]
    6c0c:	bl	a310 <flatcc_json_parser_space>
    6c10:	str	r0, [fp, #-4]
    6c14:	b	6cb4 <flatcc_json_parser_array_end+0x158>
    6c18:	ldr	r0, [fp, #-8]
    6c1c:	ldr	r1, [sp, #12]
    6c20:	add	r1, r1, #1
    6c24:	ldr	r2, [sp, #8]
    6c28:	bl	a310 <flatcc_json_parser_space>
    6c2c:	str	r0, [sp, #12]
    6c30:	ldr	r0, [sp, #12]
    6c34:	ldr	r1, [sp, #8]
    6c38:	cmp	r0, r1
    6c3c:	bne	6c68 <flatcc_json_parser_array_end+0x10c>
    6c40:	ldr	r0, [sp, #4]
    6c44:	movw	r1, #0
    6c48:	str	r1, [r0]
    6c4c:	ldr	r0, [fp, #-8]
    6c50:	ldr	r1, [sp, #12]
    6c54:	ldr	r2, [sp, #8]
    6c58:	movw	r3, #9
    6c5c:	bl	0 <flatcc_json_parser_set_error>
    6c60:	str	r0, [fp, #-4]
    6c64:	b	6cb4 <flatcc_json_parser_array_end+0x158>
    6c68:	ldr	r0, [sp, #12]
    6c6c:	ldrb	r0, [r0]
    6c70:	cmp	r0, #93	; 0x5d
    6c74:	bne	6ca0 <flatcc_json_parser_array_end+0x144>
    6c78:	ldr	r0, [sp, #4]
    6c7c:	movw	r1, #0
    6c80:	str	r1, [r0]
    6c84:	ldr	r0, [fp, #-8]
    6c88:	ldr	r1, [sp, #12]
    6c8c:	add	r1, r1, #1
    6c90:	ldr	r2, [sp, #8]
    6c94:	bl	a310 <flatcc_json_parser_space>
    6c98:	str	r0, [fp, #-4]
    6c9c:	b	6cb4 <flatcc_json_parser_array_end+0x158>
    6ca0:	ldr	r0, [sp, #4]
    6ca4:	movw	r1, #1
    6ca8:	str	r1, [r0]
    6cac:	ldr	r0, [sp, #12]
    6cb0:	str	r0, [fp, #-4]
    6cb4:	ldr	r0, [fp, #-4]
    6cb8:	mov	sp, fp
    6cbc:	pop	{fp, pc}

00006cc0 <flatcc_json_parser_int16>:
    6cc0:	push	{r4, r5, fp, lr}
    6cc4:	add	fp, sp, #8
    6cc8:	sub	sp, sp, #56	; 0x38
    6ccc:	str	r0, [fp, #-16]
    6cd0:	str	r1, [fp, #-20]	; 0xffffffec
    6cd4:	str	r2, [fp, #-24]	; 0xffffffe8
    6cd8:	str	r3, [fp, #-28]	; 0xffffffe4
    6cdc:	mov	r0, #0
    6ce0:	str	r0, [sp, #28]
    6ce4:	str	r0, [sp, #24]
    6ce8:	movw	r0, #0
    6cec:	str	r0, [sp, #20]
    6cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6cf4:	str	r0, [sp, #16]
    6cf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6cfc:	movw	r1, #0
    6d00:	strh	r1, [r0]
    6d04:	ldr	r0, [fp, #-20]	; 0xffffffec
    6d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6d0c:	cmp	r0, r1
    6d10:	bne	6d20 <flatcc_json_parser_int16+0x60>
    6d14:	ldr	r0, [fp, #-20]	; 0xffffffec
    6d18:	str	r0, [fp, #-12]
    6d1c:	b	6d90 <flatcc_json_parser_int16+0xd0>
    6d20:	ldr	r0, [fp, #-16]
    6d24:	ldr	r1, [fp, #-20]	; 0xffffffec
    6d28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d2c:	add	r3, sp, #20
    6d30:	add	ip, sp, #24
    6d34:	str	ip, [sp]
    6d38:	bl	0 <flatcc_json_parser_integer>
    6d3c:	str	r0, [fp, #-20]	; 0xffffffec
    6d40:	ldr	r0, [fp, #-20]	; 0xffffffec
    6d44:	ldr	r1, [sp, #16]
    6d48:	cmp	r0, r1
    6d4c:	beq	6d88 <flatcc_json_parser_int16+0xc8>
    6d50:	ldr	r0, [fp, #-16]
    6d54:	ldr	r1, [fp, #-20]	; 0xffffffec
    6d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d5c:	ldr	r3, [sp, #20]
    6d60:	ldr	ip, [sp, #24]
    6d64:	ldr	lr, [sp, #28]
    6d68:	ldr	r4, [fp, #-28]	; 0xffffffe4
    6d6c:	mov	r5, sp
    6d70:	str	r4, [r5, #8]
    6d74:	str	lr, [r5, #4]
    6d78:	str	ip, [r5]
    6d7c:	bl	ba70 <flatcc_json_parser_coerce_int16>
    6d80:	str	r0, [fp, #-12]
    6d84:	b	6d90 <flatcc_json_parser_int16+0xd0>
    6d88:	ldr	r0, [fp, #-20]	; 0xffffffec
    6d8c:	str	r0, [fp, #-12]
    6d90:	ldr	r0, [fp, #-12]
    6d94:	sub	sp, fp, #8
    6d98:	pop	{r4, r5, fp, pc}

00006d9c <flatcc_json_parser_symbolic_int16>:
    6d9c:	push	{r4, r5, r6, sl, fp, lr}
    6da0:	add	fp, sp, #16
    6da4:	sub	sp, sp, #88	; 0x58
    6da8:	ldr	ip, [fp, #8]
    6dac:	str	r0, [fp, #-24]	; 0xffffffe8
    6db0:	str	r1, [fp, #-28]	; 0xffffffe4
    6db4:	str	r2, [fp, #-32]	; 0xffffffe0
    6db8:	str	r3, [fp, #-36]	; 0xffffffdc
    6dbc:	movw	r0, #0
    6dc0:	strh	r0, [fp, #-46]	; 0xffffffd2
    6dc4:	movw	r1, #0
    6dc8:	str	r1, [sp, #36]	; 0x24
    6dcc:	ldr	r1, [fp, #8]
    6dd0:	strh	r0, [r1]
    6dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6dd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ddc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6de0:	str	ip, [sp, #32]
    6de4:	bl	b934 <flatcc_json_parser_constant_start>
    6de8:	str	r0, [fp, #-28]	; 0xffffffe4
    6dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6df4:	cmp	r0, r1
    6df8:	bne	6e08 <flatcc_json_parser_symbolic_int16+0x6c>
    6dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e00:	str	r0, [fp, #-20]	; 0xffffffec
    6e04:	b	6fbc <flatcc_json_parser_symbolic_int16+0x220>
    6e08:	b	6e0c <flatcc_json_parser_symbolic_int16+0x70>
    6e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6e10:	str	r0, [fp, #-40]	; 0xffffffd8
    6e14:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6e18:	ldr	r0, [r0]
    6e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6e20:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6e24:	str	r2, [fp, #-44]	; 0xffffffd4
    6e28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6e2c:	str	r0, [sp, #28]
    6e30:	mov	r0, r1
    6e34:	mov	r1, r2
    6e38:	mov	r2, r3
    6e3c:	add	r3, sp, #44	; 0x2c
    6e40:	add	ip, sp, #48	; 0x30
    6e44:	str	ip, [sp]
    6e48:	add	ip, sp, #40	; 0x28
    6e4c:	str	ip, [sp, #4]
    6e50:	ldr	ip, [sp, #28]
    6e54:	blx	ip
    6e58:	str	r0, [fp, #-28]	; 0xffffffe4
    6e5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e60:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6e64:	cmp	r0, r1
    6e68:	bne	6e78 <flatcc_json_parser_symbolic_int16+0xdc>
    6e6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e70:	str	r0, [fp, #-20]	; 0xffffffec
    6e74:	b	6fbc <flatcc_json_parser_symbolic_int16+0x220>
    6e78:	b	6e7c <flatcc_json_parser_symbolic_int16+0xe0>
    6e7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6e84:	cmp	r0, r1
    6e88:	movw	r0, #0
    6e8c:	str	r0, [sp, #24]
    6e90:	bne	6eb8 <flatcc_json_parser_symbolic_int16+0x11c>
    6e94:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6e98:	add	r1, r0, #4
    6e9c:	str	r1, [fp, #-40]	; 0xffffffd8
    6ea0:	ldr	r0, [r0, #4]
    6ea4:	movw	r1, #0
    6ea8:	cmp	r0, r1
    6eac:	movw	r0, #0
    6eb0:	movne	r0, #1
    6eb4:	str	r0, [sp, #24]
    6eb8:	ldr	r0, [sp, #24]
    6ebc:	tst	r0, #1
    6ec0:	bne	6e14 <flatcc_json_parser_symbolic_int16+0x78>
    6ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6ec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ecc:	cmp	r0, r1
    6ed0:	bne	6ef0 <flatcc_json_parser_symbolic_int16+0x154>
    6ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6edc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6ee0:	movw	r3, #23
    6ee4:	bl	0 <flatcc_json_parser_set_error>
    6ee8:	str	r0, [fp, #-20]	; 0xffffffec
    6eec:	b	6fbc <flatcc_json_parser_symbolic_int16+0x220>
    6ef0:	ldr	r0, [sp, #36]	; 0x24
    6ef4:	add	r1, r0, #1
    6ef8:	str	r1, [sp, #36]	; 0x24
    6efc:	cmp	r0, #0
    6f00:	beq	6f30 <flatcc_json_parser_symbolic_int16+0x194>
    6f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f08:	ldr	r0, [r0, #12]
    6f0c:	cmp	r0, #0
    6f10:	beq	6f30 <flatcc_json_parser_symbolic_int16+0x194>
    6f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6f1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f20:	movw	r3, #14
    6f24:	bl	0 <flatcc_json_parser_set_error>
    6f28:	str	r0, [fp, #-20]	; 0xffffffec
    6f2c:	b	6fbc <flatcc_json_parser_symbolic_int16+0x220>
    6f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6f34:	mov	r1, r0
    6f38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6f3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f40:	ldr	ip, [sp, #44]	; 0x2c
    6f44:	ldr	lr, [sp, #48]	; 0x30
    6f48:	ldr	r4, [sp, #52]	; 0x34
    6f4c:	mov	r5, sp
    6f50:	sub	r6, fp, #46	; 0x2e
    6f54:	str	r6, [r5, #8]
    6f58:	str	r4, [r5, #4]
    6f5c:	str	lr, [r5]
    6f60:	str	r0, [sp, #20]
    6f64:	mov	r0, r2
    6f68:	str	r1, [sp, #16]
    6f6c:	mov	r1, r3
    6f70:	ldr	r2, [sp, #20]
    6f74:	mov	r3, ip
    6f78:	bl	ba70 <flatcc_json_parser_coerce_int16>
    6f7c:	ldr	r1, [sp, #16]
    6f80:	cmp	r1, r0
    6f84:	bne	6f94 <flatcc_json_parser_symbolic_int16+0x1f8>
    6f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6f8c:	str	r0, [fp, #-20]	; 0xffffffec
    6f90:	b	6fbc <flatcc_json_parser_symbolic_int16+0x220>
    6f94:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
    6f98:	ldr	r1, [fp, #8]
    6f9c:	ldrsh	r2, [r1]
    6fa0:	add	r0, r2, r0
    6fa4:	strh	r0, [r1]
    6fa8:	ldr	r0, [sp, #40]	; 0x28
    6fac:	cmp	r0, #0
    6fb0:	bne	6e0c <flatcc_json_parser_symbolic_int16+0x70>
    6fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6fb8:	str	r0, [fp, #-20]	; 0xffffffec
    6fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
    6fc0:	sub	sp, fp, #16
    6fc4:	pop	{r4, r5, r6, sl, fp, pc}

00006fc8 <flatbuffers_int16_write_to_pe>:
    6fc8:	push	{fp, lr}
    6fcc:	mov	fp, sp
    6fd0:	sub	sp, sp, #8
    6fd4:	str	r0, [sp, #4]
    6fd8:	strh	r1, [sp, #2]
    6fdc:	ldrsh	r0, [sp, #2]
    6fe0:	bl	bb60 <flatbuffers_int16_cast_to_pe>
    6fe4:	ldr	r1, [sp, #4]
    6fe8:	strh	r0, [r1]
    6fec:	mov	sp, fp
    6ff0:	pop	{fp, pc}

00006ff4 <MyGame_InParentNamespace_parse_json_table>:
    6ff4:	push	{fp, lr}
    6ff8:	mov	fp, sp
    6ffc:	sub	sp, sp, #24
    7000:	str	r0, [fp, #-8]
    7004:	str	r1, [sp, #12]
    7008:	str	r2, [sp, #8]
    700c:	str	r3, [sp, #4]
    7010:	ldr	r0, [sp, #4]
    7014:	movw	r1, #0
    7018:	str	r1, [r0]
    701c:	ldr	r0, [fp, #-8]
    7020:	ldr	r0, [r0]
    7024:	bl	0 <flatcc_builder_start_table>
    7028:	cmp	r0, #0
    702c:	beq	7034 <MyGame_InParentNamespace_parse_json_table+0x40>
    7030:	b	70dc <MyGame_InParentNamespace_parse_json_table+0xe8>
    7034:	ldr	r0, [fp, #-8]
    7038:	ldr	r1, [sp, #12]
    703c:	ldr	r2, [sp, #8]
    7040:	mov	r3, sp
    7044:	bl	4ccc <flatcc_json_parser_object_start>
    7048:	str	r0, [sp, #12]
    704c:	ldr	r0, [sp]
    7050:	cmp	r0, #0
    7054:	beq	709c <MyGame_InParentNamespace_parse_json_table+0xa8>
    7058:	ldr	r0, [fp, #-8]
    705c:	ldr	r1, [sp, #12]
    7060:	ldr	r2, [sp, #8]
    7064:	bl	4db0 <flatcc_json_parser_symbol_start>
    7068:	str	r0, [sp, #12]
    706c:	ldr	r0, [fp, #-8]
    7070:	ldr	r1, [sp, #12]
    7074:	ldr	r2, [sp, #8]
    7078:	bl	0 <flatcc_json_parser_unmatched_symbol>
    707c:	str	r0, [sp, #12]
    7080:	ldr	r0, [fp, #-8]
    7084:	ldr	r1, [sp, #12]
    7088:	ldr	r2, [sp, #8]
    708c:	mov	r3, sp
    7090:	bl	a1ac <flatcc_json_parser_object_end>
    7094:	str	r0, [sp, #12]
    7098:	b	704c <MyGame_InParentNamespace_parse_json_table+0x58>
    709c:	ldr	r0, [fp, #-8]
    70a0:	ldr	r0, [r0, #24]
    70a4:	cmp	r0, #0
    70a8:	beq	70b0 <MyGame_InParentNamespace_parse_json_table+0xbc>
    70ac:	b	70dc <MyGame_InParentNamespace_parse_json_table+0xe8>
    70b0:	ldr	r0, [fp, #-8]
    70b4:	ldr	r0, [r0]
    70b8:	bl	0 <flatcc_builder_end_table>
    70bc:	ldr	lr, [sp, #4]
    70c0:	str	r0, [lr]
    70c4:	cmp	r0, #0
    70c8:	bne	70d0 <MyGame_InParentNamespace_parse_json_table+0xdc>
    70cc:	b	70dc <MyGame_InParentNamespace_parse_json_table+0xe8>
    70d0:	ldr	r0, [sp, #12]
    70d4:	str	r0, [fp, #-4]
    70d8:	b	70f4 <MyGame_InParentNamespace_parse_json_table+0x100>
    70dc:	ldr	r0, [fp, #-8]
    70e0:	ldr	r1, [sp, #12]
    70e4:	ldr	r2, [sp, #8]
    70e8:	movw	r3, #33	; 0x21
    70ec:	bl	0 <flatcc_json_parser_set_error>
    70f0:	str	r0, [fp, #-4]
    70f4:	ldr	r0, [fp, #-4]
    70f8:	mov	sp, fp
    70fc:	pop	{fp, pc}

00007100 <MyGame_Example_Vec3_parse_json_struct_inline>:
    7100:	push	{fp, lr}
    7104:	mov	fp, sp
    7108:	sub	sp, sp, #88	; 0x58
    710c:	str	r0, [fp, #-8]
    7110:	str	r1, [fp, #-12]
    7114:	str	r2, [fp, #-16]
    7118:	str	r3, [fp, #-20]	; 0xffffffec
    711c:	ldr	r0, [fp, #-8]
    7120:	ldr	r1, [fp, #-12]
    7124:	ldr	r2, [fp, #-16]
    7128:	sub	r3, fp, #24
    712c:	bl	4ccc <flatcc_json_parser_object_start>
    7130:	str	r0, [fp, #-12]
    7134:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7138:	cmp	r0, #0
    713c:	beq	77ec <MyGame_Example_Vec3_parse_json_struct_inline+0x6ec>
    7140:	ldr	r0, [fp, #-8]
    7144:	ldr	r1, [fp, #-12]
    7148:	ldr	r2, [fp, #-16]
    714c:	bl	4db0 <flatcc_json_parser_symbol_start>
    7150:	str	r0, [fp, #-12]
    7154:	ldr	r0, [fp, #-12]
    7158:	ldr	r1, [fp, #-16]
    715c:	bl	4e5c <flatcc_json_parser_symbol_part>
    7160:	str	r1, [sp, #44]	; 0x2c
    7164:	str	r0, [sp, #40]	; 0x28
    7168:	ldr	r0, [sp, #40]	; 0x28
    716c:	ldr	r1, [sp, #44]	; 0x2c
    7170:	mvn	r2, #-855638016	; 0xcd000000
    7174:	subs	r0, r2, r0
    7178:	movw	r2, #29556	; 0x7374
    717c:	movt	r2, #29797	; 0x7465
    7180:	sbcs	r1, r2, r1
    7184:	str	r0, [sp, #8]
    7188:	str	r1, [sp, #4]
    718c:	bcc	73d0 <MyGame_Example_Vec3_parse_json_struct_inline+0x2d0>
    7190:	b	7194 <MyGame_Example_Vec3_parse_json_struct_inline+0x94>
    7194:	ldr	r0, [sp, #40]	; 0x28
    7198:	ldr	r1, [sp, #44]	; 0x2c
    719c:	and	r0, r0, #-16777216	; 0xff000000
    71a0:	movw	r2, #29556	; 0x7374
    71a4:	movt	r2, #29797	; 0x7465
    71a8:	eor	r1, r1, r2
    71ac:	eor	r0, r0, #838860800	; 0x32000000
    71b0:	orr	r0, r0, r1
    71b4:	cmp	r0, #0
    71b8:	bne	72a4 <MyGame_Example_Vec3_parse_json_struct_inline+0x1a4>
    71bc:	b	71c0 <MyGame_Example_Vec3_parse_json_struct_inline+0xc0>
    71c0:	ldr	r0, [fp, #-8]
    71c4:	ldr	r1, [fp, #-12]
    71c8:	str	r1, [fp, #-36]	; 0xffffffdc
    71cc:	ldr	r2, [fp, #-16]
    71d0:	movw	r3, #5
    71d4:	bl	4e94 <flatcc_json_parser_match_symbol>
    71d8:	str	r0, [fp, #-12]
    71dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    71e0:	ldr	r1, [fp, #-12]
    71e4:	cmp	r0, r1
    71e8:	beq	728c <MyGame_Example_Vec3_parse_json_struct_inline+0x18c>
    71ec:	movw	r0, #0
    71f0:	strb	r0, [sp, #39]	; 0x27
    71f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    71f8:	add	r0, r0, #24
    71fc:	str	r0, [fp, #-32]	; 0xffffffe0
    7200:	ldr	r0, [fp, #-8]
    7204:	ldr	r1, [fp, #-12]
    7208:	str	r1, [fp, #-36]	; 0xffffffdc
    720c:	ldr	r2, [fp, #-16]
    7210:	add	r3, sp, #39	; 0x27
    7214:	bl	6410 <flatcc_json_parser_int8>
    7218:	str	r0, [fp, #-12]
    721c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7220:	ldr	r1, [fp, #-12]
    7224:	cmp	r0, r1
    7228:	bne	727c <MyGame_Example_Vec3_parse_json_struct_inline+0x17c>
    722c:	ldr	r0, [fp, #-8]
    7230:	ldr	r1, [fp, #-12]
    7234:	str	r1, [fp, #-36]	; 0xffffffdc
    7238:	ldr	r2, [fp, #-16]
    723c:	movw	r3, #0
    7240:	movt	r3, #0
    7244:	add	ip, sp, #39	; 0x27
    7248:	str	ip, [sp]
    724c:	bl	64ec <flatcc_json_parser_symbolic_int8>
    7250:	str	r0, [fp, #-12]
    7254:	ldr	r0, [fp, #-12]
    7258:	ldr	r1, [fp, #-36]	; 0xffffffdc
    725c:	cmp	r0, r1
    7260:	beq	7274 <MyGame_Example_Vec3_parse_json_struct_inline+0x174>
    7264:	ldr	r0, [fp, #-12]
    7268:	ldr	r1, [fp, #-16]
    726c:	cmp	r0, r1
    7270:	bne	7278 <MyGame_Example_Vec3_parse_json_struct_inline+0x178>
    7274:	b	77f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    7278:	b	727c <MyGame_Example_Vec3_parse_json_struct_inline+0x17c>
    727c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7280:	ldrsb	r1, [sp, #39]	; 0x27
    7284:	bl	6718 <flatbuffers_int8_write_to_pe>
    7288:	b	72a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x1a0>
    728c:	ldr	r0, [fp, #-8]
    7290:	ldr	r1, [fp, #-12]
    7294:	ldr	r2, [fp, #-16]
    7298:	bl	0 <flatcc_json_parser_unmatched_symbol>
    729c:	str	r0, [fp, #-12]
    72a0:	b	73cc <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    72a4:	ldr	r0, [sp, #40]	; 0x28
    72a8:	ldr	r1, [sp, #44]	; 0x2c
    72ac:	and	r0, r0, #-16777216	; 0xff000000
    72b0:	movw	r2, #29556	; 0x7374
    72b4:	movt	r2, #29797	; 0x7465
    72b8:	eor	r1, r1, r2
    72bc:	eor	r0, r0, #822083584	; 0x31000000
    72c0:	orr	r0, r0, r1
    72c4:	cmp	r0, #0
    72c8:	bne	73b4 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b4>
    72cc:	b	72d0 <MyGame_Example_Vec3_parse_json_struct_inline+0x1d0>
    72d0:	ldr	r0, [fp, #-8]
    72d4:	ldr	r1, [fp, #-12]
    72d8:	str	r1, [fp, #-36]	; 0xffffffdc
    72dc:	ldr	r2, [fp, #-16]
    72e0:	movw	r3, #5
    72e4:	bl	4e94 <flatcc_json_parser_match_symbol>
    72e8:	str	r0, [fp, #-12]
    72ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    72f0:	ldr	r1, [fp, #-12]
    72f4:	cmp	r0, r1
    72f8:	beq	739c <MyGame_Example_Vec3_parse_json_struct_inline+0x29c>
    72fc:	vldr	d16, [pc, #956]	; 76c0 <MyGame_Example_Vec3_parse_json_struct_inline+0x5c0>
    7300:	vstr	d16, [sp, #24]
    7304:	ldr	r0, [fp, #-20]	; 0xffffffec
    7308:	add	r0, r0, #16
    730c:	str	r0, [fp, #-32]	; 0xffffffe0
    7310:	ldr	r0, [fp, #-8]
    7314:	ldr	r1, [fp, #-12]
    7318:	str	r1, [fp, #-36]	; 0xffffffdc
    731c:	ldr	r2, [fp, #-16]
    7320:	add	r3, sp, #24
    7324:	bl	0 <flatcc_json_parser_double>
    7328:	str	r0, [fp, #-12]
    732c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7330:	ldr	r1, [fp, #-12]
    7334:	cmp	r0, r1
    7338:	bne	738c <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    733c:	ldr	r0, [fp, #-8]
    7340:	ldr	r1, [fp, #-12]
    7344:	str	r1, [fp, #-36]	; 0xffffffdc
    7348:	ldr	r2, [fp, #-16]
    734c:	movw	r3, #0
    7350:	movt	r3, #0
    7354:	add	ip, sp, #24
    7358:	str	ip, [sp]
    735c:	bl	9f48 <flatcc_json_parser_symbolic_double>
    7360:	str	r0, [fp, #-12]
    7364:	ldr	r0, [fp, #-12]
    7368:	ldr	r1, [fp, #-36]	; 0xffffffdc
    736c:	cmp	r0, r1
    7370:	beq	7384 <MyGame_Example_Vec3_parse_json_struct_inline+0x284>
    7374:	ldr	r0, [fp, #-12]
    7378:	ldr	r1, [fp, #-16]
    737c:	cmp	r0, r1
    7380:	bne	7388 <MyGame_Example_Vec3_parse_json_struct_inline+0x288>
    7384:	b	77f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    7388:	b	738c <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    738c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7390:	vldr	d0, [sp, #24]
    7394:	bl	a180 <flatbuffers_double_write_to_pe>
    7398:	b	73b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b0>
    739c:	ldr	r0, [fp, #-8]
    73a0:	ldr	r1, [fp, #-12]
    73a4:	ldr	r2, [fp, #-16]
    73a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73ac:	str	r0, [fp, #-12]
    73b0:	b	73c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x2c8>
    73b4:	ldr	r0, [fp, #-8]
    73b8:	ldr	r1, [fp, #-12]
    73bc:	ldr	r2, [fp, #-16]
    73c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73c4:	str	r0, [fp, #-12]
    73c8:	b	73cc <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    73cc:	b	77d0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6d0>
    73d0:	ldr	r0, [sp, #44]	; 0x2c
    73d4:	cmn	r0, #-2013265919	; 0x88000001
    73d8:	bhi	7490 <MyGame_Example_Vec3_parse_json_struct_inline+0x390>
    73dc:	b	73e0 <MyGame_Example_Vec3_parse_json_struct_inline+0x2e0>
    73e0:	ldr	r0, [sp, #40]	; 0x28
    73e4:	ldr	r1, [sp, #44]	; 0x2c
    73e8:	and	r0, r0, #-16777216	; 0xff000000
    73ec:	movw	r2, #29556	; 0x7374
    73f0:	movt	r2, #29797	; 0x7465
    73f4:	eor	r1, r1, r2
    73f8:	eor	r0, r0, #855638016	; 0x33000000
    73fc:	orr	r0, r0, r1
    7400:	cmp	r0, #0
    7404:	bne	7478 <MyGame_Example_Vec3_parse_json_struct_inline+0x378>
    7408:	b	740c <MyGame_Example_Vec3_parse_json_struct_inline+0x30c>
    740c:	ldr	r0, [fp, #-8]
    7410:	ldr	r1, [fp, #-12]
    7414:	str	r1, [fp, #-36]	; 0xffffffdc
    7418:	ldr	r2, [fp, #-16]
    741c:	movw	r3, #5
    7420:	bl	4e94 <flatcc_json_parser_match_symbol>
    7424:	str	r0, [fp, #-12]
    7428:	ldr	r0, [fp, #-36]	; 0xffffffdc
    742c:	ldr	r1, [fp, #-12]
    7430:	cmp	r0, r1
    7434:	beq	7460 <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    7438:	ldr	r0, [fp, #-20]	; 0xffffffec
    743c:	add	r0, r0, #26
    7440:	str	r0, [fp, #-32]	; 0xffffffe0
    7444:	ldr	r0, [fp, #-8]
    7448:	ldr	r1, [fp, #-12]
    744c:	ldr	r2, [fp, #-16]
    7450:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7454:	bl	7820 <MyGame_Example_Test_parse_json_struct_inline>
    7458:	str	r0, [fp, #-12]
    745c:	b	7474 <MyGame_Example_Vec3_parse_json_struct_inline+0x374>
    7460:	ldr	r0, [fp, #-8]
    7464:	ldr	r1, [fp, #-12]
    7468:	ldr	r2, [fp, #-16]
    746c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7470:	str	r0, [fp, #-12]
    7474:	b	748c <MyGame_Example_Vec3_parse_json_struct_inline+0x38c>
    7478:	ldr	r0, [fp, #-8]
    747c:	ldr	r1, [fp, #-12]
    7480:	ldr	r2, [fp, #-16]
    7484:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7488:	str	r0, [fp, #-12]
    748c:	b	77cc <MyGame_Example_Vec3_parse_json_struct_inline+0x6cc>
    7490:	ldrb	r0, [sp, #47]	; 0x2f
    7494:	cmp	r0, #120	; 0x78
    7498:	bhi	75b0 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b0>
    749c:	b	74a0 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    74a0:	ldr	r0, [sp, #44]	; 0x2c
    74a4:	and	r0, r0, #-16777216	; 0xff000000
    74a8:	teq	r0, #2013265920	; 0x78000000
    74ac:	bne	7598 <MyGame_Example_Vec3_parse_json_struct_inline+0x498>
    74b0:	b	74b4 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b4>
    74b4:	ldr	r0, [fp, #-8]
    74b8:	ldr	r1, [fp, #-12]
    74bc:	str	r1, [fp, #-36]	; 0xffffffdc
    74c0:	ldr	r2, [fp, #-16]
    74c4:	movw	r3, #1
    74c8:	bl	4e94 <flatcc_json_parser_match_symbol>
    74cc:	str	r0, [fp, #-12]
    74d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    74d4:	ldr	r1, [fp, #-12]
    74d8:	cmp	r0, r1
    74dc:	beq	7580 <MyGame_Example_Vec3_parse_json_struct_inline+0x480>
    74e0:	vldr	s0, [pc, #820]	; 781c <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    74e4:	vstr	s0, [sp, #20]
    74e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    74ec:	add	r0, r0, #0
    74f0:	str	r0, [fp, #-32]	; 0xffffffe0
    74f4:	ldr	r0, [fp, #-8]
    74f8:	ldr	r1, [fp, #-12]
    74fc:	str	r1, [fp, #-36]	; 0xffffffdc
    7500:	ldr	r2, [fp, #-16]
    7504:	add	r3, sp, #20
    7508:	bl	0 <flatcc_json_parser_float>
    750c:	str	r0, [fp, #-12]
    7510:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7514:	ldr	r1, [fp, #-12]
    7518:	cmp	r0, r1
    751c:	bne	7570 <MyGame_Example_Vec3_parse_json_struct_inline+0x470>
    7520:	ldr	r0, [fp, #-8]
    7524:	ldr	r1, [fp, #-12]
    7528:	str	r1, [fp, #-36]	; 0xffffffdc
    752c:	ldr	r2, [fp, #-16]
    7530:	movw	r3, #0
    7534:	movt	r3, #0
    7538:	add	ip, sp, #20
    753c:	str	ip, [sp]
    7540:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    7544:	str	r0, [fp, #-12]
    7548:	ldr	r0, [fp, #-12]
    754c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7550:	cmp	r0, r1
    7554:	beq	7568 <MyGame_Example_Vec3_parse_json_struct_inline+0x468>
    7558:	ldr	r0, [fp, #-12]
    755c:	ldr	r1, [fp, #-16]
    7560:	cmp	r0, r1
    7564:	bne	756c <MyGame_Example_Vec3_parse_json_struct_inline+0x46c>
    7568:	b	77f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    756c:	b	7570 <MyGame_Example_Vec3_parse_json_struct_inline+0x470>
    7570:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7574:	vldr	s0, [sp, #20]
    7578:	bl	9224 <flatbuffers_float_write_to_pe>
    757c:	b	7594 <MyGame_Example_Vec3_parse_json_struct_inline+0x494>
    7580:	ldr	r0, [fp, #-8]
    7584:	ldr	r1, [fp, #-12]
    7588:	ldr	r2, [fp, #-16]
    758c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7590:	str	r0, [fp, #-12]
    7594:	b	75ac <MyGame_Example_Vec3_parse_json_struct_inline+0x4ac>
    7598:	ldr	r0, [fp, #-8]
    759c:	ldr	r1, [fp, #-12]
    75a0:	ldr	r2, [fp, #-16]
    75a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    75a8:	str	r0, [fp, #-12]
    75ac:	b	77c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    75b0:	ldr	r0, [sp, #44]	; 0x2c
    75b4:	and	r0, r0, #-16777216	; 0xff000000
    75b8:	teq	r0, #2046820352	; 0x7a000000
    75bc:	bne	76a8 <MyGame_Example_Vec3_parse_json_struct_inline+0x5a8>
    75c0:	b	75c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x4c4>
    75c4:	ldr	r0, [fp, #-8]
    75c8:	ldr	r1, [fp, #-12]
    75cc:	str	r1, [fp, #-36]	; 0xffffffdc
    75d0:	ldr	r2, [fp, #-16]
    75d4:	movw	r3, #1
    75d8:	bl	4e94 <flatcc_json_parser_match_symbol>
    75dc:	str	r0, [fp, #-12]
    75e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    75e4:	ldr	r1, [fp, #-12]
    75e8:	cmp	r0, r1
    75ec:	beq	7690 <MyGame_Example_Vec3_parse_json_struct_inline+0x590>
    75f0:	vldr	s0, [pc, #548]	; 781c <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    75f4:	vstr	s0, [sp, #16]
    75f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    75fc:	add	r0, r0, #8
    7600:	str	r0, [fp, #-32]	; 0xffffffe0
    7604:	ldr	r0, [fp, #-8]
    7608:	ldr	r1, [fp, #-12]
    760c:	str	r1, [fp, #-36]	; 0xffffffdc
    7610:	ldr	r2, [fp, #-16]
    7614:	add	r3, sp, #16
    7618:	bl	0 <flatcc_json_parser_float>
    761c:	str	r0, [fp, #-12]
    7620:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7624:	ldr	r1, [fp, #-12]
    7628:	cmp	r0, r1
    762c:	bne	7680 <MyGame_Example_Vec3_parse_json_struct_inline+0x580>
    7630:	ldr	r0, [fp, #-8]
    7634:	ldr	r1, [fp, #-12]
    7638:	str	r1, [fp, #-36]	; 0xffffffdc
    763c:	ldr	r2, [fp, #-16]
    7640:	movw	r3, #0
    7644:	movt	r3, #0
    7648:	add	ip, sp, #16
    764c:	str	ip, [sp]
    7650:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    7654:	str	r0, [fp, #-12]
    7658:	ldr	r0, [fp, #-12]
    765c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7660:	cmp	r0, r1
    7664:	beq	7678 <MyGame_Example_Vec3_parse_json_struct_inline+0x578>
    7668:	ldr	r0, [fp, #-12]
    766c:	ldr	r1, [fp, #-16]
    7670:	cmp	r0, r1
    7674:	bne	767c <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    7678:	b	77f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    767c:	b	7680 <MyGame_Example_Vec3_parse_json_struct_inline+0x580>
    7680:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7684:	vldr	s0, [sp, #16]
    7688:	bl	9224 <flatbuffers_float_write_to_pe>
    768c:	b	76a4 <MyGame_Example_Vec3_parse_json_struct_inline+0x5a4>
    7690:	ldr	r0, [fp, #-8]
    7694:	ldr	r1, [fp, #-12]
    7698:	ldr	r2, [fp, #-16]
    769c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    76a0:	str	r0, [fp, #-12]
    76a4:	b	77c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c4>
    76a8:	ldr	r0, [sp, #44]	; 0x2c
    76ac:	and	r0, r0, #-16777216	; 0xff000000
    76b0:	teq	r0, #2030043136	; 0x79000000
    76b4:	bne	77ac <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    76b8:	b	76c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x5c8>
    76bc:	nop	{0}
	...
    76c8:	ldr	r0, [fp, #-8]
    76cc:	ldr	r1, [fp, #-12]
    76d0:	str	r1, [fp, #-36]	; 0xffffffdc
    76d4:	ldr	r2, [fp, #-16]
    76d8:	movw	r3, #1
    76dc:	bl	4e94 <flatcc_json_parser_match_symbol>
    76e0:	str	r0, [fp, #-12]
    76e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    76e8:	ldr	r1, [fp, #-12]
    76ec:	cmp	r0, r1
    76f0:	beq	7794 <MyGame_Example_Vec3_parse_json_struct_inline+0x694>
    76f4:	vldr	s0, [pc, #288]	; 781c <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    76f8:	vstr	s0, [sp, #12]
    76fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    7700:	add	r0, r0, #4
    7704:	str	r0, [fp, #-32]	; 0xffffffe0
    7708:	ldr	r0, [fp, #-8]
    770c:	ldr	r1, [fp, #-12]
    7710:	str	r1, [fp, #-36]	; 0xffffffdc
    7714:	ldr	r2, [fp, #-16]
    7718:	add	r3, sp, #12
    771c:	bl	0 <flatcc_json_parser_float>
    7720:	str	r0, [fp, #-12]
    7724:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7728:	ldr	r1, [fp, #-12]
    772c:	cmp	r0, r1
    7730:	bne	7784 <MyGame_Example_Vec3_parse_json_struct_inline+0x684>
    7734:	ldr	r0, [fp, #-8]
    7738:	ldr	r1, [fp, #-12]
    773c:	str	r1, [fp, #-36]	; 0xffffffdc
    7740:	ldr	r2, [fp, #-16]
    7744:	movw	r3, #0
    7748:	movt	r3, #0
    774c:	add	ip, sp, #12
    7750:	str	ip, [sp]
    7754:	bl	8ff4 <flatcc_json_parser_symbolic_float>
    7758:	str	r0, [fp, #-12]
    775c:	ldr	r0, [fp, #-12]
    7760:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7764:	cmp	r0, r1
    7768:	beq	777c <MyGame_Example_Vec3_parse_json_struct_inline+0x67c>
    776c:	ldr	r0, [fp, #-12]
    7770:	ldr	r1, [fp, #-16]
    7774:	cmp	r0, r1
    7778:	bne	7780 <MyGame_Example_Vec3_parse_json_struct_inline+0x680>
    777c:	b	77f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    7780:	b	7784 <MyGame_Example_Vec3_parse_json_struct_inline+0x684>
    7784:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7788:	vldr	s0, [sp, #12]
    778c:	bl	9224 <flatbuffers_float_write_to_pe>
    7790:	b	77a8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6a8>
    7794:	ldr	r0, [fp, #-8]
    7798:	ldr	r1, [fp, #-12]
    779c:	ldr	r2, [fp, #-16]
    77a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77a4:	str	r0, [fp, #-12]
    77a8:	b	77c0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c0>
    77ac:	ldr	r0, [fp, #-8]
    77b0:	ldr	r1, [fp, #-12]
    77b4:	ldr	r2, [fp, #-16]
    77b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77bc:	str	r0, [fp, #-12]
    77c0:	b	77c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c4>
    77c4:	b	77c8 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    77c8:	b	77cc <MyGame_Example_Vec3_parse_json_struct_inline+0x6cc>
    77cc:	b	77d0 <MyGame_Example_Vec3_parse_json_struct_inline+0x6d0>
    77d0:	ldr	r0, [fp, #-8]
    77d4:	ldr	r1, [fp, #-12]
    77d8:	ldr	r2, [fp, #-16]
    77dc:	sub	r3, fp, #24
    77e0:	bl	a1ac <flatcc_json_parser_object_end>
    77e4:	str	r0, [fp, #-12]
    77e8:	b	7134 <MyGame_Example_Vec3_parse_json_struct_inline+0x34>
    77ec:	ldr	r0, [fp, #-12]
    77f0:	str	r0, [fp, #-4]
    77f4:	b	7810 <MyGame_Example_Vec3_parse_json_struct_inline+0x710>
    77f8:	ldr	r0, [fp, #-8]
    77fc:	ldr	r1, [fp, #-12]
    7800:	ldr	r2, [fp, #-16]
    7804:	movw	r3, #33	; 0x21
    7808:	bl	0 <flatcc_json_parser_set_error>
    780c:	str	r0, [fp, #-4]
    7810:	ldr	r0, [fp, #-4]
    7814:	mov	sp, fp
    7818:	pop	{fp, pc}
    781c:	.word	0x00000000

00007820 <MyGame_Example_Test_parse_json_struct_inline>:
    7820:	push	{fp, lr}
    7824:	mov	fp, sp
    7828:	sub	sp, sp, #56	; 0x38
    782c:	str	r0, [fp, #-8]
    7830:	str	r1, [fp, #-12]
    7834:	str	r2, [fp, #-16]
    7838:	str	r3, [fp, #-20]	; 0xffffffec
    783c:	ldr	r0, [fp, #-8]
    7840:	ldr	r1, [fp, #-12]
    7844:	ldr	r2, [fp, #-16]
    7848:	sub	r3, fp, #24
    784c:	bl	4ccc <flatcc_json_parser_object_start>
    7850:	str	r0, [fp, #-12]
    7854:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7858:	cmp	r0, #0
    785c:	beq	7aac <MyGame_Example_Test_parse_json_struct_inline+0x28c>
    7860:	ldr	r0, [fp, #-8]
    7864:	ldr	r1, [fp, #-12]
    7868:	ldr	r2, [fp, #-16]
    786c:	bl	4db0 <flatcc_json_parser_symbol_start>
    7870:	str	r0, [fp, #-12]
    7874:	ldr	r0, [fp, #-12]
    7878:	ldr	r1, [fp, #-16]
    787c:	bl	4e5c <flatcc_json_parser_symbol_part>
    7880:	str	r1, [sp, #12]
    7884:	str	r0, [sp, #8]
    7888:	ldr	r0, [sp, #12]
    788c:	and	r0, r0, #-16777216	; 0xff000000
    7890:	teq	r0, #1644167168	; 0x62000000
    7894:	bne	7980 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    7898:	b	789c <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    789c:	ldr	r0, [fp, #-8]
    78a0:	ldr	r1, [fp, #-12]
    78a4:	str	r1, [sp, #20]
    78a8:	ldr	r2, [fp, #-16]
    78ac:	movw	r3, #1
    78b0:	bl	4e94 <flatcc_json_parser_match_symbol>
    78b4:	str	r0, [fp, #-12]
    78b8:	ldr	r0, [sp, #20]
    78bc:	ldr	r1, [fp, #-12]
    78c0:	cmp	r0, r1
    78c4:	beq	7968 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    78c8:	movw	r0, #0
    78cc:	strb	r0, [sp, #7]
    78d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    78d4:	add	r0, r0, #2
    78d8:	str	r0, [sp, #24]
    78dc:	ldr	r0, [fp, #-8]
    78e0:	ldr	r1, [fp, #-12]
    78e4:	str	r1, [sp, #20]
    78e8:	ldr	r2, [fp, #-16]
    78ec:	add	r3, sp, #7
    78f0:	bl	6410 <flatcc_json_parser_int8>
    78f4:	str	r0, [fp, #-12]
    78f8:	ldr	r0, [sp, #20]
    78fc:	ldr	r1, [fp, #-12]
    7900:	cmp	r0, r1
    7904:	bne	7958 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    7908:	ldr	r0, [fp, #-8]
    790c:	ldr	r1, [fp, #-12]
    7910:	str	r1, [sp, #20]
    7914:	ldr	r2, [fp, #-16]
    7918:	movw	r3, #0
    791c:	movt	r3, #0
    7920:	add	ip, sp, #7
    7924:	str	ip, [sp]
    7928:	bl	64ec <flatcc_json_parser_symbolic_int8>
    792c:	str	r0, [fp, #-12]
    7930:	ldr	r0, [fp, #-12]
    7934:	ldr	r1, [sp, #20]
    7938:	cmp	r0, r1
    793c:	beq	7950 <MyGame_Example_Test_parse_json_struct_inline+0x130>
    7940:	ldr	r0, [fp, #-12]
    7944:	ldr	r1, [fp, #-16]
    7948:	cmp	r0, r1
    794c:	bne	7954 <MyGame_Example_Test_parse_json_struct_inline+0x134>
    7950:	b	7ab8 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    7954:	b	7958 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    7958:	ldr	r0, [sp, #24]
    795c:	ldrsb	r1, [sp, #7]
    7960:	bl	6718 <flatbuffers_int8_write_to_pe>
    7964:	b	797c <MyGame_Example_Test_parse_json_struct_inline+0x15c>
    7968:	ldr	r0, [fp, #-8]
    796c:	ldr	r1, [fp, #-12]
    7970:	ldr	r2, [fp, #-16]
    7974:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7978:	str	r0, [fp, #-12]
    797c:	b	7a90 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    7980:	ldr	r0, [sp, #12]
    7984:	and	r0, r0, #-16777216	; 0xff000000
    7988:	teq	r0, #1627389952	; 0x61000000
    798c:	bne	7a78 <MyGame_Example_Test_parse_json_struct_inline+0x258>
    7990:	b	7994 <MyGame_Example_Test_parse_json_struct_inline+0x174>
    7994:	ldr	r0, [fp, #-8]
    7998:	ldr	r1, [fp, #-12]
    799c:	str	r1, [sp, #20]
    79a0:	ldr	r2, [fp, #-16]
    79a4:	movw	r3, #1
    79a8:	bl	4e94 <flatcc_json_parser_match_symbol>
    79ac:	str	r0, [fp, #-12]
    79b0:	ldr	r0, [sp, #20]
    79b4:	ldr	r1, [fp, #-12]
    79b8:	cmp	r0, r1
    79bc:	beq	7a60 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    79c0:	movw	r0, #0
    79c4:	strh	r0, [sp, #4]
    79c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    79cc:	add	r0, r0, #0
    79d0:	str	r0, [sp, #24]
    79d4:	ldr	r0, [fp, #-8]
    79d8:	ldr	r1, [fp, #-12]
    79dc:	str	r1, [sp, #20]
    79e0:	ldr	r2, [fp, #-16]
    79e4:	add	r3, sp, #4
    79e8:	bl	6cc0 <flatcc_json_parser_int16>
    79ec:	str	r0, [fp, #-12]
    79f0:	ldr	r0, [sp, #20]
    79f4:	ldr	r1, [fp, #-12]
    79f8:	cmp	r0, r1
    79fc:	bne	7a50 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    7a00:	ldr	r0, [fp, #-8]
    7a04:	ldr	r1, [fp, #-12]
    7a08:	str	r1, [sp, #20]
    7a0c:	ldr	r2, [fp, #-16]
    7a10:	movw	r3, #0
    7a14:	movt	r3, #0
    7a18:	add	ip, sp, #4
    7a1c:	str	ip, [sp]
    7a20:	bl	6d9c <flatcc_json_parser_symbolic_int16>
    7a24:	str	r0, [fp, #-12]
    7a28:	ldr	r0, [fp, #-12]
    7a2c:	ldr	r1, [sp, #20]
    7a30:	cmp	r0, r1
    7a34:	beq	7a48 <MyGame_Example_Test_parse_json_struct_inline+0x228>
    7a38:	ldr	r0, [fp, #-12]
    7a3c:	ldr	r1, [fp, #-16]
    7a40:	cmp	r0, r1
    7a44:	bne	7a4c <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    7a48:	b	7ab8 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    7a4c:	b	7a50 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    7a50:	ldr	r0, [sp, #24]
    7a54:	ldrsh	r1, [sp, #4]
    7a58:	bl	6fc8 <flatbuffers_int16_write_to_pe>
    7a5c:	b	7a74 <MyGame_Example_Test_parse_json_struct_inline+0x254>
    7a60:	ldr	r0, [fp, #-8]
    7a64:	ldr	r1, [fp, #-12]
    7a68:	ldr	r2, [fp, #-16]
    7a6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a70:	str	r0, [fp, #-12]
    7a74:	b	7a8c <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    7a78:	ldr	r0, [fp, #-8]
    7a7c:	ldr	r1, [fp, #-12]
    7a80:	ldr	r2, [fp, #-16]
    7a84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a88:	str	r0, [fp, #-12]
    7a8c:	b	7a90 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    7a90:	ldr	r0, [fp, #-8]
    7a94:	ldr	r1, [fp, #-12]
    7a98:	ldr	r2, [fp, #-16]
    7a9c:	sub	r3, fp, #24
    7aa0:	bl	a1ac <flatcc_json_parser_object_end>
    7aa4:	str	r0, [fp, #-12]
    7aa8:	b	7854 <MyGame_Example_Test_parse_json_struct_inline+0x34>
    7aac:	ldr	r0, [fp, #-12]
    7ab0:	str	r0, [fp, #-4]
    7ab4:	b	7ad0 <MyGame_Example_Test_parse_json_struct_inline+0x2b0>
    7ab8:	ldr	r0, [fp, #-8]
    7abc:	ldr	r1, [fp, #-12]
    7ac0:	ldr	r2, [fp, #-16]
    7ac4:	movw	r3, #33	; 0x21
    7ac8:	bl	0 <flatcc_json_parser_set_error>
    7acc:	str	r0, [fp, #-4]
    7ad0:	ldr	r0, [fp, #-4]
    7ad4:	mov	sp, fp
    7ad8:	pop	{fp, pc}

00007adc <MyGame_Example_Any_parse_json_union>:
    7adc:	push	{fp, lr}
    7ae0:	mov	fp, sp
    7ae4:	sub	sp, sp, #32
    7ae8:	ldr	ip, [fp, #8]
    7aec:	str	r0, [fp, #-8]
    7af0:	str	r1, [fp, #-12]
    7af4:	str	r2, [sp, #16]
    7af8:	strb	r3, [sp, #15]
    7afc:	ldr	r0, [fp, #8]
    7b00:	mov	r1, #0
    7b04:	str	r1, [r0]
    7b08:	ldrb	r0, [sp, #15]
    7b0c:	mov	r1, r0
    7b10:	cmp	r0, #4
    7b14:	str	ip, [sp, #8]
    7b18:	str	r1, [sp, #4]
    7b1c:	bhi	7bcc <MyGame_Example_Any_parse_json_union+0xf0>
    7b20:	add	r0, pc, #8
    7b24:	ldr	r1, [sp, #4]
    7b28:	ldr	r0, [r0, r1, lsl #2]
    7b2c:	mov	pc, r0
    7b30:	.word	0x00007b44
    7b34:	.word	0x00007b5c
    7b38:	.word	0x00007b78
    7b3c:	.word	0x00007b94
    7b40:	.word	0x00007bb0
    7b44:	ldr	r0, [fp, #-8]
    7b48:	ldr	r1, [fp, #-12]
    7b4c:	ldr	r2, [sp, #16]
    7b50:	bl	bb74 <flatcc_json_parser_none>
    7b54:	str	r0, [fp, #-4]
    7b58:	b	7c64 <MyGame_Example_Any_parse_json_union+0x188>
    7b5c:	ldr	r0, [fp, #-8]
    7b60:	ldr	r1, [fp, #-12]
    7b64:	ldr	r2, [sp, #16]
    7b68:	ldr	r3, [fp, #8]
    7b6c:	bl	12d8 <MyGame_Example_Monster_parse_json_table>
    7b70:	str	r0, [fp, #-12]
    7b74:	b	7c14 <MyGame_Example_Any_parse_json_union+0x138>
    7b78:	ldr	r0, [fp, #-8]
    7b7c:	ldr	r1, [fp, #-12]
    7b80:	ldr	r2, [sp, #16]
    7b84:	ldr	r3, [fp, #8]
    7b88:	bl	bc00 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    7b8c:	str	r0, [fp, #-12]
    7b90:	b	7c14 <MyGame_Example_Any_parse_json_union+0x138>
    7b94:	ldr	r0, [fp, #-8]
    7b98:	ldr	r1, [fp, #-12]
    7b9c:	ldr	r2, [sp, #16]
    7ba0:	ldr	r3, [fp, #8]
    7ba4:	bl	c250 <MyGame_Example2_Monster_parse_json_table>
    7ba8:	str	r0, [fp, #-12]
    7bac:	b	7c14 <MyGame_Example_Any_parse_json_union+0x138>
    7bb0:	ldr	r0, [fp, #-8]
    7bb4:	ldr	r1, [fp, #-12]
    7bb8:	ldr	r2, [sp, #16]
    7bbc:	ldr	r3, [fp, #8]
    7bc0:	bl	c35c <MyGame_Example_Alt_parse_json_table>
    7bc4:	str	r0, [fp, #-12]
    7bc8:	b	7c14 <MyGame_Example_Any_parse_json_union+0x138>
    7bcc:	ldr	r0, [fp, #-8]
    7bd0:	ldr	r0, [r0, #8]
    7bd4:	and	r0, r0, #1
    7bd8:	cmp	r0, #0
    7bdc:	bne	7bfc <MyGame_Example_Any_parse_json_union+0x120>
    7be0:	ldr	r0, [fp, #-8]
    7be4:	ldr	r1, [fp, #-12]
    7be8:	ldr	r2, [sp, #16]
    7bec:	movw	r3, #15
    7bf0:	bl	0 <flatcc_json_parser_set_error>
    7bf4:	str	r0, [fp, #-4]
    7bf8:	b	7c64 <MyGame_Example_Any_parse_json_union+0x188>
    7bfc:	ldr	r0, [fp, #-8]
    7c00:	ldr	r1, [fp, #-12]
    7c04:	ldr	r2, [sp, #16]
    7c08:	bl	0 <flatcc_json_parser_generic_json>
    7c0c:	str	r0, [fp, #-4]
    7c10:	b	7c64 <MyGame_Example_Any_parse_json_union+0x188>
    7c14:	ldr	r0, [fp, #-8]
    7c18:	ldr	r0, [r0, #24]
    7c1c:	cmp	r0, #0
    7c20:	beq	7c30 <MyGame_Example_Any_parse_json_union+0x154>
    7c24:	ldr	r0, [fp, #-12]
    7c28:	str	r0, [fp, #-4]
    7c2c:	b	7c64 <MyGame_Example_Any_parse_json_union+0x188>
    7c30:	ldr	r0, [fp, #8]
    7c34:	ldr	r0, [r0]
    7c38:	cmp	r0, #0
    7c3c:	bne	7c5c <MyGame_Example_Any_parse_json_union+0x180>
    7c40:	ldr	r0, [fp, #-8]
    7c44:	ldr	r1, [fp, #-12]
    7c48:	ldr	r2, [sp, #16]
    7c4c:	movw	r3, #33	; 0x21
    7c50:	bl	0 <flatcc_json_parser_set_error>
    7c54:	str	r0, [fp, #-4]
    7c58:	b	7c64 <MyGame_Example_Any_parse_json_union+0x188>
    7c5c:	ldr	r0, [fp, #-12]
    7c60:	str	r0, [fp, #-4]
    7c64:	ldr	r0, [fp, #-4]
    7c68:	mov	sp, fp
    7c6c:	pop	{fp, pc}

00007c70 <MyGame_Example_Any_parse_json_enum>:
    7c70:	push	{fp, lr}
    7c74:	mov	fp, sp
    7c78:	sub	sp, sp, #80	; 0x50
    7c7c:	ldr	ip, [fp, #12]
    7c80:	ldr	lr, [fp, #8]
    7c84:	str	r0, [fp, #-8]
    7c88:	str	r1, [fp, #-12]
    7c8c:	str	r2, [fp, #-16]
    7c90:	str	r3, [fp, #-20]	; 0xffffffec
    7c94:	ldr	r0, [fp, #-12]
    7c98:	str	r0, [fp, #-24]	; 0xffffffe8
    7c9c:	ldr	r0, [fp, #-12]
    7ca0:	ldr	r1, [fp, #-16]
    7ca4:	str	lr, [sp, #36]	; 0x24
    7ca8:	str	ip, [sp, #32]
    7cac:	bl	4e5c <flatcc_json_parser_symbol_part>
    7cb0:	str	r1, [sp, #44]	; 0x2c
    7cb4:	str	r0, [sp, #40]	; 0x28
    7cb8:	ldr	r0, [sp, #40]	; 0x28
    7cbc:	ldr	r1, [sp, #44]	; 0x2c
    7cc0:	movw	r2, #29183	; 0x71ff
    7cc4:	movt	r2, #29797	; 0x7465
    7cc8:	subs	r0, r2, r0
    7ccc:	movw	r2, #28275	; 0x6e73
    7cd0:	movt	r2, #19823	; 0x4d6f
    7cd4:	sbcs	r1, r2, r1
    7cd8:	str	r0, [sp, #28]
    7cdc:	str	r1, [sp, #24]
    7ce0:	bcc	7d88 <MyGame_Example_Any_parse_json_enum+0x118>
    7ce4:	b	7ce8 <MyGame_Example_Any_parse_json_enum+0x78>
    7ce8:	ldr	r0, [sp, #44]	; 0x2c
    7cec:	bic	r0, r0, #255	; 0xff
    7cf0:	movw	r1, #29696	; 0x7400
    7cf4:	movt	r1, #16748	; 0x416c
    7cf8:	teq	r0, r1
    7cfc:	bne	7d78 <MyGame_Example_Any_parse_json_enum+0x108>
    7d00:	b	7d04 <MyGame_Example_Any_parse_json_enum+0x94>
    7d04:	ldr	r0, [fp, #-8]
    7d08:	ldr	r1, [fp, #-12]
    7d0c:	str	r1, [fp, #-28]	; 0xffffffe4
    7d10:	ldr	r2, [fp, #-16]
    7d14:	ldr	r3, [fp, #12]
    7d18:	movw	ip, #3
    7d1c:	str	r3, [sp, #20]
    7d20:	mov	r3, ip
    7d24:	ldr	ip, [sp, #20]
    7d28:	str	ip, [sp]
    7d2c:	bl	0 <flatcc_json_parser_match_constant>
    7d30:	str	r0, [fp, #-12]
    7d34:	ldr	r0, [fp, #-12]
    7d38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d3c:	cmp	r0, r1
    7d40:	beq	7d68 <MyGame_Example_Any_parse_json_enum+0xf8>
    7d44:	ldr	r0, [fp, #8]
    7d48:	mov	r1, #0
    7d4c:	str	r1, [r0, #4]
    7d50:	mov	r1, #4
    7d54:	str	r1, [r0]
    7d58:	ldr	r0, [fp, #-20]	; 0xffffffec
    7d5c:	movw	r1, #0
    7d60:	str	r1, [r0]
    7d64:	b	7d74 <MyGame_Example_Any_parse_json_enum+0x104>
    7d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d6c:	str	r0, [fp, #-4]
    7d70:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    7d74:	b	7d84 <MyGame_Example_Any_parse_json_enum+0x114>
    7d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d7c:	str	r0, [fp, #-4]
    7d80:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    7d84:	b	80e0 <MyGame_Example_Any_parse_json_enum+0x470>
    7d88:	ldr	r0, [sp, #40]	; 0x28
    7d8c:	ldr	r1, [sp, #44]	; 0x2c
    7d90:	movw	r2, #28275	; 0x6e73
    7d94:	movt	r2, #19823	; 0x4d6f
    7d98:	eor	r1, r1, r2
    7d9c:	movw	r2, #29234	; 0x7232
    7da0:	movt	r2, #29797	; 0x7465
    7da4:	eor	r0, r0, r2
    7da8:	orr	r0, r0, r1
    7dac:	cmp	r0, #0
    7db0:	bne	7e24 <MyGame_Example_Any_parse_json_enum+0x1b4>
    7db4:	b	7db8 <MyGame_Example_Any_parse_json_enum+0x148>
    7db8:	ldr	r0, [fp, #-8]
    7dbc:	ldr	r1, [fp, #-12]
    7dc0:	str	r1, [fp, #-28]	; 0xffffffe4
    7dc4:	ldr	r2, [fp, #-16]
    7dc8:	ldr	r3, [fp, #12]
    7dcc:	movw	ip, #8
    7dd0:	str	r3, [sp, #16]
    7dd4:	mov	r3, ip
    7dd8:	ldr	ip, [sp, #16]
    7ddc:	str	ip, [sp]
    7de0:	bl	0 <flatcc_json_parser_match_constant>
    7de4:	str	r0, [fp, #-12]
    7de8:	ldr	r0, [fp, #-12]
    7dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7df0:	cmp	r0, r1
    7df4:	beq	7e1c <MyGame_Example_Any_parse_json_enum+0x1ac>
    7df8:	ldr	r0, [fp, #8]
    7dfc:	mov	r1, #0
    7e00:	str	r1, [r0, #4]
    7e04:	mov	r1, #3
    7e08:	str	r1, [r0]
    7e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7e10:	movw	r1, #0
    7e14:	str	r1, [r0]
    7e18:	b	7e20 <MyGame_Example_Any_parse_json_enum+0x1b0>
    7e1c:	b	7ed4 <MyGame_Example_Any_parse_json_enum+0x264>
    7e20:	b	7ed0 <MyGame_Example_Any_parse_json_enum+0x260>
    7e24:	ldr	r0, [sp, #40]	; 0x28
    7e28:	ldr	r1, [sp, #44]	; 0x2c
    7e2c:	movw	r2, #28526	; 0x6f6e
    7e30:	movt	r2, #77	; 0x4d
    7e34:	eor	r2, r2, r1, lsr #8
    7e38:	lsr	r0, r0, #8
    7e3c:	orr	r0, r0, r1, lsl #24
    7e40:	movw	r1, #25970	; 0x6572
    7e44:	movt	r1, #29556	; 0x7374
    7e48:	eor	r0, r0, r1
    7e4c:	orr	r0, r0, r2
    7e50:	cmp	r0, #0
    7e54:	bne	7ec8 <MyGame_Example_Any_parse_json_enum+0x258>
    7e58:	b	7e5c <MyGame_Example_Any_parse_json_enum+0x1ec>
    7e5c:	ldr	r0, [fp, #-8]
    7e60:	ldr	r1, [fp, #-12]
    7e64:	str	r1, [fp, #-28]	; 0xffffffe4
    7e68:	ldr	r2, [fp, #-16]
    7e6c:	ldr	r3, [fp, #12]
    7e70:	movw	ip, #7
    7e74:	str	r3, [sp, #12]
    7e78:	mov	r3, ip
    7e7c:	ldr	ip, [sp, #12]
    7e80:	str	ip, [sp]
    7e84:	bl	0 <flatcc_json_parser_match_constant>
    7e88:	str	r0, [fp, #-12]
    7e8c:	ldr	r0, [fp, #-12]
    7e90:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7e94:	cmp	r0, r1
    7e98:	beq	7ec0 <MyGame_Example_Any_parse_json_enum+0x250>
    7e9c:	ldr	r0, [fp, #8]
    7ea0:	mov	r1, #0
    7ea4:	str	r1, [r0, #4]
    7ea8:	mov	r1, #1
    7eac:	str	r1, [r0]
    7eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
    7eb4:	movw	r1, #0
    7eb8:	str	r1, [r0]
    7ebc:	b	7ec4 <MyGame_Example_Any_parse_json_enum+0x254>
    7ec0:	b	7ed4 <MyGame_Example_Any_parse_json_enum+0x264>
    7ec4:	b	7ecc <MyGame_Example_Any_parse_json_enum+0x25c>
    7ec8:	b	7ed4 <MyGame_Example_Any_parse_json_enum+0x264>
    7ecc:	b	7ed0 <MyGame_Example_Any_parse_json_enum+0x260>
    7ed0:	b	80dc <MyGame_Example_Any_parse_json_enum+0x46c>
    7ed4:	ldr	r0, [sp, #44]	; 0x2c
    7ed8:	movw	r1, #20037	; 0x4e45
    7edc:	movt	r1, #20047	; 0x4e4f
    7ee0:	teq	r0, r1
    7ee4:	bne	7f54 <MyGame_Example_Any_parse_json_enum+0x2e4>
    7ee8:	b	7eec <MyGame_Example_Any_parse_json_enum+0x27c>
    7eec:	ldr	r0, [fp, #-8]
    7ef0:	ldr	r1, [fp, #-12]
    7ef4:	str	r1, [fp, #-28]	; 0xffffffe4
    7ef8:	ldr	r2, [fp, #-16]
    7efc:	ldr	r3, [fp, #12]
    7f00:	movw	ip, #4
    7f04:	str	r3, [sp, #8]
    7f08:	mov	r3, ip
    7f0c:	ldr	ip, [sp, #8]
    7f10:	str	ip, [sp]
    7f14:	bl	0 <flatcc_json_parser_match_constant>
    7f18:	str	r0, [fp, #-12]
    7f1c:	ldr	r0, [fp, #-12]
    7f20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f24:	cmp	r0, r1
    7f28:	beq	7f4c <MyGame_Example_Any_parse_json_enum+0x2dc>
    7f2c:	ldr	r0, [fp, #8]
    7f30:	mov	r1, #0
    7f34:	str	r1, [r0, #4]
    7f38:	str	r1, [r0]
    7f3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    7f40:	movw	r1, #0
    7f44:	str	r1, [r0]
    7f48:	b	7f50 <MyGame_Example_Any_parse_json_enum+0x2e0>
    7f4c:	b	7f5c <MyGame_Example_Any_parse_json_enum+0x2ec>
    7f50:	b	7f58 <MyGame_Example_Any_parse_json_enum+0x2e8>
    7f54:	b	7f5c <MyGame_Example_Any_parse_json_enum+0x2ec>
    7f58:	b	80d8 <MyGame_Example_Any_parse_json_enum+0x468>
    7f5c:	ldr	r0, [sp, #40]	; 0x28
    7f60:	ldr	r1, [sp, #44]	; 0x2c
    7f64:	movw	r2, #29556	; 0x7374
    7f68:	movt	r2, #21605	; 0x5465
    7f6c:	eor	r1, r1, r2
    7f70:	movw	r2, #28016	; 0x6d70
    7f74:	movt	r2, #21353	; 0x5369
    7f78:	eor	r0, r0, r2
    7f7c:	orr	r0, r0, r1
    7f80:	cmp	r0, #0
    7f84:	bne	80c8 <MyGame_Example_Any_parse_json_enum+0x458>
    7f88:	b	7f8c <MyGame_Example_Any_parse_json_enum+0x31c>
    7f8c:	ldr	r0, [fp, #-12]
    7f90:	add	r0, r0, #8
    7f94:	str	r0, [fp, #-12]
    7f98:	ldr	r0, [fp, #-12]
    7f9c:	ldr	r1, [fp, #-16]
    7fa0:	bl	4e5c <flatcc_json_parser_symbol_part>
    7fa4:	str	r1, [sp, #44]	; 0x2c
    7fa8:	str	r0, [sp, #40]	; 0x28
    7fac:	ldr	r0, [sp, #40]	; 0x28
    7fb0:	ldr	r1, [sp, #44]	; 0x2c
    7fb4:	movw	lr, #21601	; 0x5461
    7fb8:	movt	lr, #27749	; 0x6c65
    7fbc:	eor	r1, r1, lr
    7fc0:	movw	lr, #25943	; 0x6557
    7fc4:	movt	lr, #25196	; 0x626c
    7fc8:	eor	r0, r0, lr
    7fcc:	orr	r0, r0, r1
    7fd0:	cmp	r0, #0
    7fd4:	bne	80b8 <MyGame_Example_Any_parse_json_enum+0x448>
    7fd8:	b	7fdc <MyGame_Example_Any_parse_json_enum+0x36c>
    7fdc:	ldr	r0, [fp, #-12]
    7fe0:	add	r0, r0, #8
    7fe4:	str	r0, [fp, #-12]
    7fe8:	ldr	r0, [fp, #-12]
    7fec:	ldr	r1, [fp, #-16]
    7ff0:	bl	4e5c <flatcc_json_parser_symbol_part>
    7ff4:	str	r1, [sp, #44]	; 0x2c
    7ff8:	str	r0, [sp, #40]	; 0x28
    7ffc:	ldr	r0, [sp, #40]	; 0x28
    8000:	ldr	r1, [sp, #44]	; 0x2c
    8004:	movw	lr, #29800	; 0x7468
    8008:	movt	lr, #105	; 0x69
    800c:	eor	lr, lr, r1, lsr #8
    8010:	lsr	r0, r0, #8
    8014:	orr	r0, r0, r1, lsl #24
    8018:	movw	r1, #30061	; 0x756d
    801c:	movt	r1, #17774	; 0x456e
    8020:	eor	r0, r0, r1
    8024:	orr	r0, r0, lr
    8028:	cmp	r0, #0
    802c:	bne	80a8 <MyGame_Example_Any_parse_json_enum+0x438>
    8030:	b	8034 <MyGame_Example_Any_parse_json_enum+0x3c4>
    8034:	ldr	r0, [fp, #-8]
    8038:	ldr	r1, [fp, #-12]
    803c:	str	r1, [fp, #-28]	; 0xffffffe4
    8040:	ldr	r2, [fp, #-16]
    8044:	ldr	r3, [fp, #12]
    8048:	movw	ip, #7
    804c:	str	r3, [sp, #4]
    8050:	mov	r3, ip
    8054:	ldr	ip, [sp, #4]
    8058:	str	ip, [sp]
    805c:	bl	0 <flatcc_json_parser_match_constant>
    8060:	str	r0, [fp, #-12]
    8064:	ldr	r0, [fp, #-12]
    8068:	ldr	r1, [fp, #-28]	; 0xffffffe4
    806c:	cmp	r0, r1
    8070:	beq	8098 <MyGame_Example_Any_parse_json_enum+0x428>
    8074:	ldr	r0, [fp, #8]
    8078:	mov	r1, #0
    807c:	str	r1, [r0, #4]
    8080:	mov	r1, #2
    8084:	str	r1, [r0]
    8088:	ldr	r0, [fp, #-20]	; 0xffffffec
    808c:	movw	r1, #0
    8090:	str	r1, [r0]
    8094:	b	80a4 <MyGame_Example_Any_parse_json_enum+0x434>
    8098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    809c:	str	r0, [fp, #-4]
    80a0:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    80a4:	b	80b4 <MyGame_Example_Any_parse_json_enum+0x444>
    80a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80ac:	str	r0, [fp, #-4]
    80b0:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    80b4:	b	80c4 <MyGame_Example_Any_parse_json_enum+0x454>
    80b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80bc:	str	r0, [fp, #-4]
    80c0:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    80c4:	b	80d4 <MyGame_Example_Any_parse_json_enum+0x464>
    80c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80cc:	str	r0, [fp, #-4]
    80d0:	b	80e8 <MyGame_Example_Any_parse_json_enum+0x478>
    80d4:	b	80d8 <MyGame_Example_Any_parse_json_enum+0x468>
    80d8:	b	80dc <MyGame_Example_Any_parse_json_enum+0x46c>
    80dc:	b	80e0 <MyGame_Example_Any_parse_json_enum+0x470>
    80e0:	ldr	r0, [fp, #-12]
    80e4:	str	r0, [fp, #-4]
    80e8:	ldr	r0, [fp, #-4]
    80ec:	mov	sp, fp
    80f0:	pop	{fp, pc}

000080f4 <flatcc_json_parser_bool>:
    80f4:	push	{fp, lr}
    80f8:	mov	fp, sp
    80fc:	sub	sp, sp, #32
    8100:	str	r0, [fp, #-8]
    8104:	str	r1, [fp, #-12]
    8108:	str	r2, [sp, #16]
    810c:	str	r3, [sp, #12]
    8110:	ldr	r0, [fp, #-12]
    8114:	str	r0, [sp, #8]
    8118:	ldr	r0, [sp, #16]
    811c:	ldr	r1, [fp, #-12]
    8120:	sub	r0, r0, r1
    8124:	cmp	r0, #4
    8128:	blt	8174 <flatcc_json_parser_bool+0x80>
    812c:	ldr	r0, [fp, #-12]
    8130:	ldr	r0, [r0]
    8134:	movw	r1, #36236	; 0x8d8c
    8138:	movt	r1, #39562	; 0x9a8a
    813c:	add	r1, r0, r1
    8140:	movw	r2, #29300	; 0x7274
    8144:	movt	r2, #25973	; 0x6575
    8148:	cmp	r0, r2
    814c:	movwne	r1, #1
    8150:	cmp	r1, #0
    8154:	bne	8174 <flatcc_json_parser_bool+0x80>
    8158:	ldr	r0, [sp, #12]
    815c:	movw	r1, #1
    8160:	strb	r1, [r0]
    8164:	ldr	r0, [sp, #8]
    8168:	add	r0, r0, #4
    816c:	str	r0, [fp, #-4]
    8170:	b	820c <flatcc_json_parser_bool+0x118>
    8174:	ldr	r0, [sp, #16]
    8178:	ldr	r1, [fp, #-12]
    817c:	sub	r0, r0, r1
    8180:	cmp	r0, #5
    8184:	blt	81c0 <flatcc_json_parser_bool+0xcc>
    8188:	ldr	r0, [fp, #-12]
    818c:	movw	r1, #0
    8190:	movt	r1, #0
    8194:	mov	r2, #5
    8198:	bl	0 <memcmp>
    819c:	cmp	r0, #0
    81a0:	bne	81c0 <flatcc_json_parser_bool+0xcc>
    81a4:	ldr	r0, [sp, #12]
    81a8:	movw	r1, #0
    81ac:	strb	r1, [r0]
    81b0:	ldr	r0, [sp, #8]
    81b4:	add	r0, r0, #5
    81b8:	str	r0, [fp, #-4]
    81bc:	b	820c <flatcc_json_parser_bool+0x118>
    81c0:	b	81c4 <flatcc_json_parser_bool+0xd0>
    81c4:	ldr	r0, [fp, #-8]
    81c8:	ldr	r1, [fp, #-12]
    81cc:	ldr	r2, [sp, #16]
    81d0:	add	r3, sp, #7
    81d4:	bl	6828 <flatcc_json_parser_uint8>
    81d8:	str	r0, [fp, #-12]
    81dc:	ldrsb	r0, [sp, #7]
    81e0:	cmp	r0, #0
    81e4:	movw	r0, #0
    81e8:	movne	r0, #1
    81ec:	mvn	r1, #0
    81f0:	eor	r0, r0, r1
    81f4:	eor	r0, r0, r1
    81f8:	and	r0, r0, #1
    81fc:	ldr	r1, [sp, #12]
    8200:	strb	r0, [r1]
    8204:	ldr	r0, [fp, #-12]
    8208:	str	r0, [fp, #-4]
    820c:	ldr	r0, [fp, #-4]
    8210:	mov	sp, fp
    8214:	pop	{fp, pc}

00008218 <flatcc_json_parser_symbolic_bool>:
    8218:	push	{r4, r5, r6, sl, fp, lr}
    821c:	add	fp, sp, #16
    8220:	sub	sp, sp, #88	; 0x58
    8224:	ldr	ip, [fp, #8]
    8228:	str	r0, [fp, #-24]	; 0xffffffe8
    822c:	str	r1, [fp, #-28]	; 0xffffffe4
    8230:	str	r2, [fp, #-32]	; 0xffffffe0
    8234:	str	r3, [fp, #-36]	; 0xffffffdc
    8238:	movw	r0, #0
    823c:	strb	r0, [fp, #-45]	; 0xffffffd3
    8240:	movw	r1, #0
    8244:	str	r1, [sp, #36]	; 0x24
    8248:	ldr	r1, [fp, #8]
    824c:	strb	r0, [r1]
    8250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8254:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8258:	ldr	r2, [fp, #-32]	; 0xffffffe0
    825c:	str	ip, [sp, #32]
    8260:	bl	b934 <flatcc_json_parser_constant_start>
    8264:	str	r0, [fp, #-28]	; 0xffffffe4
    8268:	ldr	r0, [fp, #-28]	; 0xffffffe4
    826c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8270:	cmp	r0, r1
    8274:	bne	8284 <flatcc_json_parser_symbolic_bool+0x6c>
    8278:	ldr	r0, [fp, #-28]	; 0xffffffe4
    827c:	str	r0, [fp, #-20]	; 0xffffffec
    8280:	b	8438 <flatcc_json_parser_symbolic_bool+0x220>
    8284:	b	8288 <flatcc_json_parser_symbolic_bool+0x70>
    8288:	ldr	r0, [fp, #-36]	; 0xffffffdc
    828c:	str	r0, [fp, #-40]	; 0xffffffd8
    8290:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8294:	ldr	r0, [r0]
    8298:	ldr	r1, [fp, #-24]	; 0xffffffe8
    829c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    82a0:	str	r2, [fp, #-44]	; 0xffffffd4
    82a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    82a8:	str	r0, [sp, #28]
    82ac:	mov	r0, r1
    82b0:	mov	r1, r2
    82b4:	mov	r2, r3
    82b8:	add	r3, sp, #44	; 0x2c
    82bc:	add	ip, sp, #48	; 0x30
    82c0:	str	ip, [sp]
    82c4:	add	ip, sp, #40	; 0x28
    82c8:	str	ip, [sp, #4]
    82cc:	ldr	ip, [sp, #28]
    82d0:	blx	ip
    82d4:	str	r0, [fp, #-28]	; 0xffffffe4
    82d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    82e0:	cmp	r0, r1
    82e4:	bne	82f4 <flatcc_json_parser_symbolic_bool+0xdc>
    82e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82ec:	str	r0, [fp, #-20]	; 0xffffffec
    82f0:	b	8438 <flatcc_json_parser_symbolic_bool+0x220>
    82f4:	b	82f8 <flatcc_json_parser_symbolic_bool+0xe0>
    82f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8300:	cmp	r0, r1
    8304:	movw	r0, #0
    8308:	str	r0, [sp, #24]
    830c:	bne	8334 <flatcc_json_parser_symbolic_bool+0x11c>
    8310:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8314:	add	r1, r0, #4
    8318:	str	r1, [fp, #-40]	; 0xffffffd8
    831c:	ldr	r0, [r0, #4]
    8320:	movw	r1, #0
    8324:	cmp	r0, r1
    8328:	movw	r0, #0
    832c:	movne	r0, #1
    8330:	str	r0, [sp, #24]
    8334:	ldr	r0, [sp, #24]
    8338:	tst	r0, #1
    833c:	bne	8290 <flatcc_json_parser_symbolic_bool+0x78>
    8340:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8344:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8348:	cmp	r0, r1
    834c:	bne	836c <flatcc_json_parser_symbolic_bool+0x154>
    8350:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8354:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8358:	ldr	r2, [fp, #-32]	; 0xffffffe0
    835c:	movw	r3, #23
    8360:	bl	0 <flatcc_json_parser_set_error>
    8364:	str	r0, [fp, #-20]	; 0xffffffec
    8368:	b	8438 <flatcc_json_parser_symbolic_bool+0x220>
    836c:	ldr	r0, [sp, #36]	; 0x24
    8370:	add	r1, r0, #1
    8374:	str	r1, [sp, #36]	; 0x24
    8378:	cmp	r0, #0
    837c:	beq	83ac <flatcc_json_parser_symbolic_bool+0x194>
    8380:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8384:	ldr	r0, [r0, #12]
    8388:	cmp	r0, #0
    838c:	beq	83ac <flatcc_json_parser_symbolic_bool+0x194>
    8390:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8394:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8398:	ldr	r2, [fp, #-32]	; 0xffffffe0
    839c:	movw	r3, #14
    83a0:	bl	0 <flatcc_json_parser_set_error>
    83a4:	str	r0, [fp, #-20]	; 0xffffffec
    83a8:	b	8438 <flatcc_json_parser_symbolic_bool+0x220>
    83ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    83b0:	mov	r1, r0
    83b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    83b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    83bc:	ldr	ip, [sp, #44]	; 0x2c
    83c0:	ldr	lr, [sp, #48]	; 0x30
    83c4:	ldr	r4, [sp, #52]	; 0x34
    83c8:	mov	r5, sp
    83cc:	sub	r6, fp, #45	; 0x2d
    83d0:	str	r6, [r5, #8]
    83d4:	str	r4, [r5, #4]
    83d8:	str	lr, [r5]
    83dc:	str	r0, [sp, #20]
    83e0:	mov	r0, r2
    83e4:	str	r1, [sp, #16]
    83e8:	mov	r1, r3
    83ec:	ldr	r2, [sp, #20]
    83f0:	mov	r3, ip
    83f4:	bl	ffb0 <flatcc_json_parser_coerce_bool>
    83f8:	ldr	r1, [sp, #16]
    83fc:	cmp	r1, r0
    8400:	bne	8410 <flatcc_json_parser_symbolic_bool+0x1f8>
    8404:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8408:	str	r0, [fp, #-20]	; 0xffffffec
    840c:	b	8438 <flatcc_json_parser_symbolic_bool+0x220>
    8410:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    8414:	ldr	r1, [fp, #8]
    8418:	ldrb	r2, [r1]
    841c:	add	r0, r2, r0
    8420:	strb	r0, [r1]
    8424:	ldr	r0, [sp, #40]	; 0x28
    8428:	cmp	r0, #0
    842c:	bne	8288 <flatcc_json_parser_symbolic_bool+0x70>
    8430:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8434:	str	r0, [fp, #-20]	; 0xffffffec
    8438:	ldr	r0, [fp, #-20]	; 0xffffffec
    843c:	sub	sp, fp, #16
    8440:	pop	{r4, r5, r6, sl, fp, pc}

00008444 <flatbuffers_bool_write_to_pe>:
    8444:	push	{fp, lr}
    8448:	mov	fp, sp
    844c:	sub	sp, sp, #8
    8450:	str	r0, [sp, #4]
    8454:	strb	r1, [sp, #3]
    8458:	ldrb	r0, [sp, #3]
    845c:	bl	1004c <flatbuffers_bool_cast_to_pe>
    8460:	ldr	r1, [sp, #4]
    8464:	strb	r0, [r1]
    8468:	mov	sp, fp
    846c:	pop	{fp, pc}

00008470 <MyGame_Example_Ability_parse_json_struct_inline>:
    8470:	push	{fp, lr}
    8474:	mov	fp, sp
    8478:	sub	sp, sp, #64	; 0x40
    847c:	str	r0, [fp, #-8]
    8480:	str	r1, [fp, #-12]
    8484:	str	r2, [fp, #-16]
    8488:	str	r3, [fp, #-20]	; 0xffffffec
    848c:	ldr	r0, [fp, #-8]
    8490:	ldr	r1, [fp, #-12]
    8494:	ldr	r2, [fp, #-16]
    8498:	sub	r3, fp, #24
    849c:	bl	4ccc <flatcc_json_parser_object_start>
    84a0:	str	r0, [fp, #-12]
    84a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    84a8:	cmp	r0, #0
    84ac:	beq	8720 <MyGame_Example_Ability_parse_json_struct_inline+0x2b0>
    84b0:	ldr	r0, [fp, #-8]
    84b4:	ldr	r1, [fp, #-12]
    84b8:	ldr	r2, [fp, #-16]
    84bc:	bl	4db0 <flatcc_json_parser_symbol_start>
    84c0:	str	r0, [fp, #-12]
    84c4:	ldr	r0, [fp, #-12]
    84c8:	ldr	r1, [fp, #-16]
    84cc:	bl	4e5c <flatcc_json_parser_symbol_part>
    84d0:	str	r1, [sp, #20]
    84d4:	str	r0, [sp, #16]
    84d8:	ldr	r0, [sp, #20]
    84dc:	bfc	r0, #0, #16
    84e0:	movw	r1, #0
    84e4:	movt	r1, #26980	; 0x6964
    84e8:	teq	r0, r1
    84ec:	bne	85d8 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    84f0:	b	84f4 <MyGame_Example_Ability_parse_json_struct_inline+0x84>
    84f4:	ldr	r0, [fp, #-8]
    84f8:	ldr	r1, [fp, #-12]
    84fc:	str	r1, [sp, #28]
    8500:	ldr	r2, [fp, #-16]
    8504:	movw	r3, #2
    8508:	bl	4e94 <flatcc_json_parser_match_symbol>
    850c:	str	r0, [fp, #-12]
    8510:	ldr	r0, [sp, #28]
    8514:	ldr	r1, [fp, #-12]
    8518:	cmp	r0, r1
    851c:	beq	85c0 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    8520:	movw	r0, #0
    8524:	str	r0, [sp, #12]
    8528:	ldr	r0, [fp, #-20]	; 0xffffffec
    852c:	add	r0, r0, #0
    8530:	str	r0, [sp, #32]
    8534:	ldr	r0, [fp, #-8]
    8538:	ldr	r1, [fp, #-12]
    853c:	str	r1, [sp, #28]
    8540:	ldr	r2, [fp, #-16]
    8544:	add	r3, sp, #12
    8548:	bl	98cc <flatcc_json_parser_uint32>
    854c:	str	r0, [fp, #-12]
    8550:	ldr	r0, [sp, #28]
    8554:	ldr	r1, [fp, #-12]
    8558:	cmp	r0, r1
    855c:	bne	85b0 <MyGame_Example_Ability_parse_json_struct_inline+0x140>
    8560:	ldr	r0, [fp, #-8]
    8564:	ldr	r1, [fp, #-12]
    8568:	str	r1, [sp, #28]
    856c:	ldr	r2, [fp, #-16]
    8570:	movw	r3, #0
    8574:	movt	r3, #0
    8578:	add	ip, sp, #12
    857c:	str	ip, [sp]
    8580:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    8584:	str	r0, [fp, #-12]
    8588:	ldr	r0, [fp, #-12]
    858c:	ldr	r1, [sp, #28]
    8590:	cmp	r0, r1
    8594:	beq	85a8 <MyGame_Example_Ability_parse_json_struct_inline+0x138>
    8598:	ldr	r0, [fp, #-12]
    859c:	ldr	r1, [fp, #-16]
    85a0:	cmp	r0, r1
    85a4:	bne	85ac <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    85a8:	b	872c <MyGame_Example_Ability_parse_json_struct_inline+0x2bc>
    85ac:	b	85b0 <MyGame_Example_Ability_parse_json_struct_inline+0x140>
    85b0:	ldr	r0, [sp, #32]
    85b4:	ldr	r1, [sp, #12]
    85b8:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    85bc:	b	85d4 <MyGame_Example_Ability_parse_json_struct_inline+0x164>
    85c0:	ldr	r0, [fp, #-8]
    85c4:	ldr	r1, [fp, #-12]
    85c8:	ldr	r2, [fp, #-16]
    85cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    85d0:	str	r0, [fp, #-12]
    85d4:	b	8704 <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    85d8:	ldr	r0, [sp, #16]
    85dc:	ldr	r1, [sp, #20]
    85e0:	movw	r2, #29556	; 0x7374
    85e4:	movt	r2, #25705	; 0x6469
    85e8:	eor	r1, r1, r2
    85ec:	movw	r2, #25445	; 0x6365
    85f0:	movt	r2, #24942	; 0x616e
    85f4:	eor	r0, r0, r2
    85f8:	orr	r0, r0, r1
    85fc:	cmp	r0, #0
    8600:	bne	86ec <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    8604:	b	8608 <MyGame_Example_Ability_parse_json_struct_inline+0x198>
    8608:	ldr	r0, [fp, #-8]
    860c:	ldr	r1, [fp, #-12]
    8610:	str	r1, [sp, #28]
    8614:	ldr	r2, [fp, #-16]
    8618:	movw	r3, #8
    861c:	bl	4e94 <flatcc_json_parser_match_symbol>
    8620:	str	r0, [fp, #-12]
    8624:	ldr	r0, [sp, #28]
    8628:	ldr	r1, [fp, #-12]
    862c:	cmp	r0, r1
    8630:	beq	86d4 <MyGame_Example_Ability_parse_json_struct_inline+0x264>
    8634:	movw	r0, #0
    8638:	str	r0, [sp, #8]
    863c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8640:	add	r0, r0, #4
    8644:	str	r0, [sp, #32]
    8648:	ldr	r0, [fp, #-8]
    864c:	ldr	r1, [fp, #-12]
    8650:	str	r1, [sp, #28]
    8654:	ldr	r2, [fp, #-16]
    8658:	add	r3, sp, #8
    865c:	bl	98cc <flatcc_json_parser_uint32>
    8660:	str	r0, [fp, #-12]
    8664:	ldr	r0, [sp, #28]
    8668:	ldr	r1, [fp, #-12]
    866c:	cmp	r0, r1
    8670:	bne	86c4 <MyGame_Example_Ability_parse_json_struct_inline+0x254>
    8674:	ldr	r0, [fp, #-8]
    8678:	ldr	r1, [fp, #-12]
    867c:	str	r1, [sp, #28]
    8680:	ldr	r2, [fp, #-16]
    8684:	movw	r3, #0
    8688:	movt	r3, #0
    868c:	add	ip, sp, #8
    8690:	str	ip, [sp]
    8694:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    8698:	str	r0, [fp, #-12]
    869c:	ldr	r0, [fp, #-12]
    86a0:	ldr	r1, [sp, #28]
    86a4:	cmp	r0, r1
    86a8:	beq	86bc <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    86ac:	ldr	r0, [fp, #-12]
    86b0:	ldr	r1, [fp, #-16]
    86b4:	cmp	r0, r1
    86b8:	bne	86c0 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    86bc:	b	872c <MyGame_Example_Ability_parse_json_struct_inline+0x2bc>
    86c0:	b	86c4 <MyGame_Example_Ability_parse_json_struct_inline+0x254>
    86c4:	ldr	r0, [sp, #32]
    86c8:	ldr	r1, [sp, #8]
    86cc:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    86d0:	b	86e8 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    86d4:	ldr	r0, [fp, #-8]
    86d8:	ldr	r1, [fp, #-12]
    86dc:	ldr	r2, [fp, #-16]
    86e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    86e4:	str	r0, [fp, #-12]
    86e8:	b	8700 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    86ec:	ldr	r0, [fp, #-8]
    86f0:	ldr	r1, [fp, #-12]
    86f4:	ldr	r2, [fp, #-16]
    86f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    86fc:	str	r0, [fp, #-12]
    8700:	b	8704 <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    8704:	ldr	r0, [fp, #-8]
    8708:	ldr	r1, [fp, #-12]
    870c:	ldr	r2, [fp, #-16]
    8710:	sub	r3, fp, #24
    8714:	bl	a1ac <flatcc_json_parser_object_end>
    8718:	str	r0, [fp, #-12]
    871c:	b	84a4 <MyGame_Example_Ability_parse_json_struct_inline+0x34>
    8720:	ldr	r0, [fp, #-12]
    8724:	str	r0, [fp, #-4]
    8728:	b	8744 <MyGame_Example_Ability_parse_json_struct_inline+0x2d4>
    872c:	ldr	r0, [fp, #-8]
    8730:	ldr	r1, [fp, #-12]
    8734:	ldr	r2, [fp, #-16]
    8738:	movw	r3, #33	; 0x21
    873c:	bl	0 <flatcc_json_parser_set_error>
    8740:	str	r0, [fp, #-4]
    8744:	ldr	r0, [fp, #-4]
    8748:	mov	sp, fp
    874c:	pop	{fp, pc}

00008750 <MyGame_Example_TestBase64_parse_json_table>:
    8750:	push	{fp, lr}
    8754:	mov	fp, sp
    8758:	sub	sp, sp, #64	; 0x40
    875c:	str	r0, [fp, #-8]
    8760:	str	r1, [fp, #-12]
    8764:	str	r2, [fp, #-16]
    8768:	str	r3, [fp, #-20]	; 0xffffffec
    876c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8770:	movw	r1, #0
    8774:	str	r1, [r0]
    8778:	ldr	r0, [fp, #-8]
    877c:	ldr	r0, [r0]
    8780:	movw	r1, #3
    8784:	bl	0 <flatcc_builder_start_table>
    8788:	cmp	r0, #0
    878c:	beq	8794 <MyGame_Example_TestBase64_parse_json_table+0x44>
    8790:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    8794:	ldr	r0, [fp, #-8]
    8798:	ldr	r1, [fp, #-12]
    879c:	ldr	r2, [fp, #-16]
    87a0:	sub	r3, fp, #24
    87a4:	bl	4ccc <flatcc_json_parser_object_start>
    87a8:	str	r0, [fp, #-12]
    87ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    87b0:	cmp	r0, #0
    87b4:	beq	8acc <MyGame_Example_TestBase64_parse_json_table+0x37c>
    87b8:	ldr	r0, [fp, #-8]
    87bc:	ldr	r1, [fp, #-12]
    87c0:	ldr	r2, [fp, #-16]
    87c4:	bl	4db0 <flatcc_json_parser_symbol_start>
    87c8:	str	r0, [fp, #-12]
    87cc:	ldr	r0, [fp, #-12]
    87d0:	ldr	r1, [fp, #-16]
    87d4:	bl	4e5c <flatcc_json_parser_symbol_part>
    87d8:	str	r1, [sp, #20]
    87dc:	str	r0, [sp, #16]
    87e0:	ldr	r0, [sp, #16]
    87e4:	ldr	r1, [sp, #20]
    87e8:	movw	r2, #65535	; 0xffff
    87ec:	movt	r2, #25955	; 0x6563
    87f0:	subs	r0, r2, r0
    87f4:	movw	r2, #29556	; 0x7374
    87f8:	movt	r2, #28261	; 0x6e65
    87fc:	sbcs	r1, r2, r1
    8800:	str	r0, [sp, #12]
    8804:	str	r1, [sp, #8]
    8808:	bcc	88e4 <MyGame_Example_TestBase64_parse_json_table+0x194>
    880c:	b	8810 <MyGame_Example_TestBase64_parse_json_table+0xc0>
    8810:	ldr	r0, [sp, #20]
    8814:	movw	r1, #29793	; 0x7461
    8818:	movt	r1, #25697	; 0x6461
    881c:	teq	r0, r1
    8820:	bne	88cc <MyGame_Example_TestBase64_parse_json_table+0x17c>
    8824:	b	8828 <MyGame_Example_TestBase64_parse_json_table+0xd8>
    8828:	ldr	r0, [fp, #-8]
    882c:	ldr	r1, [fp, #-12]
    8830:	str	r1, [sp, #24]
    8834:	ldr	r2, [fp, #-16]
    8838:	movw	r3, #4
    883c:	bl	4e94 <flatcc_json_parser_match_symbol>
    8840:	str	r0, [fp, #-12]
    8844:	ldr	r0, [sp, #24]
    8848:	ldr	r1, [fp, #-12]
    884c:	cmp	r0, r1
    8850:	beq	88b4 <MyGame_Example_TestBase64_parse_json_table+0x164>
    8854:	ldr	r0, [fp, #-8]
    8858:	ldr	r1, [fp, #-12]
    885c:	ldr	r2, [fp, #-16]
    8860:	add	r3, sp, #32
    8864:	movw	ip, #0
    8868:	str	ip, [sp]
    886c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8870:	str	r0, [fp, #-12]
    8874:	ldr	r0, [sp, #32]
    8878:	cmp	r0, #0
    887c:	beq	88a0 <MyGame_Example_TestBase64_parse_json_table+0x150>
    8880:	ldr	r0, [fp, #-8]
    8884:	ldr	r0, [r0]
    8888:	movw	r1, #0
    888c:	bl	0 <flatcc_builder_table_add_offset>
    8890:	str	r0, [sp, #28]
    8894:	movw	r1, #0
    8898:	cmp	r0, r1
    889c:	bne	88a4 <MyGame_Example_TestBase64_parse_json_table+0x154>
    88a0:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    88a4:	ldr	r0, [sp, #32]
    88a8:	ldr	r1, [sp, #28]
    88ac:	str	r0, [r1]
    88b0:	b	88c8 <MyGame_Example_TestBase64_parse_json_table+0x178>
    88b4:	ldr	r0, [fp, #-8]
    88b8:	ldr	r1, [fp, #-12]
    88bc:	ldr	r2, [fp, #-16]
    88c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    88c4:	str	r0, [fp, #-12]
    88c8:	b	88e0 <MyGame_Example_TestBase64_parse_json_table+0x190>
    88cc:	ldr	r0, [fp, #-8]
    88d0:	ldr	r1, [fp, #-12]
    88d4:	ldr	r2, [fp, #-16]
    88d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    88dc:	str	r0, [fp, #-12]
    88e0:	b	8ab0 <MyGame_Example_TestBase64_parse_json_table+0x360>
    88e4:	ldr	r0, [sp, #16]
    88e8:	ldr	r1, [sp, #20]
    88ec:	movw	r2, #29292	; 0x726c
    88f0:	movt	r2, #117	; 0x75
    88f4:	eor	r2, r2, r1, lsr #8
    88f8:	lsr	r0, r0, #8
    88fc:	orr	r0, r0, r1, lsl #24
    8900:	movw	r1, #29793	; 0x7461
    8904:	movt	r1, #25697	; 0x6461
    8908:	eor	r0, r0, r1
    890c:	orr	r0, r0, r2
    8910:	cmp	r0, #0
    8914:	bne	89c0 <MyGame_Example_TestBase64_parse_json_table+0x270>
    8918:	b	891c <MyGame_Example_TestBase64_parse_json_table+0x1cc>
    891c:	ldr	r0, [fp, #-8]
    8920:	ldr	r1, [fp, #-12]
    8924:	str	r1, [sp, #24]
    8928:	ldr	r2, [fp, #-16]
    892c:	movw	r3, #7
    8930:	bl	4e94 <flatcc_json_parser_match_symbol>
    8934:	str	r0, [fp, #-12]
    8938:	ldr	r0, [sp, #24]
    893c:	ldr	r1, [fp, #-12]
    8940:	cmp	r0, r1
    8944:	beq	89a8 <MyGame_Example_TestBase64_parse_json_table+0x258>
    8948:	ldr	r0, [fp, #-8]
    894c:	ldr	r1, [fp, #-12]
    8950:	ldr	r2, [fp, #-16]
    8954:	add	r3, sp, #32
    8958:	movw	ip, #1
    895c:	str	ip, [sp]
    8960:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8964:	str	r0, [fp, #-12]
    8968:	ldr	r0, [sp, #32]
    896c:	cmp	r0, #0
    8970:	beq	8994 <MyGame_Example_TestBase64_parse_json_table+0x244>
    8974:	ldr	r0, [fp, #-8]
    8978:	ldr	r0, [r0]
    897c:	movw	r1, #1
    8980:	bl	0 <flatcc_builder_table_add_offset>
    8984:	str	r0, [sp, #28]
    8988:	movw	r1, #0
    898c:	cmp	r0, r1
    8990:	bne	8998 <MyGame_Example_TestBase64_parse_json_table+0x248>
    8994:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    8998:	ldr	r0, [sp, #32]
    899c:	ldr	r1, [sp, #28]
    89a0:	str	r0, [r1]
    89a4:	b	89bc <MyGame_Example_TestBase64_parse_json_table+0x26c>
    89a8:	ldr	r0, [fp, #-8]
    89ac:	ldr	r1, [fp, #-12]
    89b0:	ldr	r2, [fp, #-16]
    89b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    89b8:	str	r0, [fp, #-12]
    89bc:	b	8aac <MyGame_Example_TestBase64_parse_json_table+0x35c>
    89c0:	ldrh	r0, [sp, #18]
    89c4:	ldr	r1, [sp, #20]
    89c8:	movw	r2, #28261	; 0x6e65
    89cc:	eor	r2, r2, r1, lsr #16
    89d0:	orr	r0, r0, r1, lsl #16
    89d4:	movw	r1, #25956	; 0x6564
    89d8:	movt	r1, #29556	; 0x7374
    89dc:	eor	r0, r0, r1
    89e0:	orr	r0, r0, r2
    89e4:	cmp	r0, #0
    89e8:	bne	8a94 <MyGame_Example_TestBase64_parse_json_table+0x344>
    89ec:	b	89f0 <MyGame_Example_TestBase64_parse_json_table+0x2a0>
    89f0:	ldr	r0, [fp, #-8]
    89f4:	ldr	r1, [fp, #-12]
    89f8:	str	r1, [sp, #24]
    89fc:	ldr	r2, [fp, #-16]
    8a00:	movw	r3, #6
    8a04:	bl	4e94 <flatcc_json_parser_match_symbol>
    8a08:	str	r0, [fp, #-12]
    8a0c:	ldr	r0, [sp, #24]
    8a10:	ldr	r1, [fp, #-12]
    8a14:	cmp	r0, r1
    8a18:	beq	8a7c <MyGame_Example_TestBase64_parse_json_table+0x32c>
    8a1c:	ldr	r0, [fp, #-8]
    8a20:	ldr	r1, [fp, #-12]
    8a24:	ldr	r2, [fp, #-16]
    8a28:	add	r3, sp, #32
    8a2c:	movw	ip, #0
    8a30:	str	ip, [sp]
    8a34:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8a38:	str	r0, [fp, #-12]
    8a3c:	ldr	r0, [sp, #32]
    8a40:	cmp	r0, #0
    8a44:	beq	8a68 <MyGame_Example_TestBase64_parse_json_table+0x318>
    8a48:	ldr	r0, [fp, #-8]
    8a4c:	ldr	r0, [r0]
    8a50:	movw	r1, #2
    8a54:	bl	0 <flatcc_builder_table_add_offset>
    8a58:	str	r0, [sp, #28]
    8a5c:	movw	r1, #0
    8a60:	cmp	r0, r1
    8a64:	bne	8a6c <MyGame_Example_TestBase64_parse_json_table+0x31c>
    8a68:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    8a6c:	ldr	r0, [sp, #32]
    8a70:	ldr	r1, [sp, #28]
    8a74:	str	r0, [r1]
    8a78:	b	8a90 <MyGame_Example_TestBase64_parse_json_table+0x340>
    8a7c:	ldr	r0, [fp, #-8]
    8a80:	ldr	r1, [fp, #-12]
    8a84:	ldr	r2, [fp, #-16]
    8a88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8a8c:	str	r0, [fp, #-12]
    8a90:	b	8aa8 <MyGame_Example_TestBase64_parse_json_table+0x358>
    8a94:	ldr	r0, [fp, #-8]
    8a98:	ldr	r1, [fp, #-12]
    8a9c:	ldr	r2, [fp, #-16]
    8aa0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8aa4:	str	r0, [fp, #-12]
    8aa8:	b	8aac <MyGame_Example_TestBase64_parse_json_table+0x35c>
    8aac:	b	8ab0 <MyGame_Example_TestBase64_parse_json_table+0x360>
    8ab0:	ldr	r0, [fp, #-8]
    8ab4:	ldr	r1, [fp, #-12]
    8ab8:	ldr	r2, [fp, #-16]
    8abc:	sub	r3, fp, #24
    8ac0:	bl	a1ac <flatcc_json_parser_object_end>
    8ac4:	str	r0, [fp, #-12]
    8ac8:	b	87ac <MyGame_Example_TestBase64_parse_json_table+0x5c>
    8acc:	ldr	r0, [fp, #-8]
    8ad0:	ldr	r0, [r0, #24]
    8ad4:	cmp	r0, #0
    8ad8:	beq	8ae0 <MyGame_Example_TestBase64_parse_json_table+0x390>
    8adc:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    8ae0:	ldr	r0, [fp, #-8]
    8ae4:	ldr	r0, [r0]
    8ae8:	bl	0 <flatcc_builder_end_table>
    8aec:	ldr	lr, [fp, #-20]	; 0xffffffec
    8af0:	str	r0, [lr]
    8af4:	cmp	r0, #0
    8af8:	bne	8b00 <MyGame_Example_TestBase64_parse_json_table+0x3b0>
    8afc:	b	8b0c <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    8b00:	ldr	r0, [fp, #-12]
    8b04:	str	r0, [fp, #-4]
    8b08:	b	8b24 <MyGame_Example_TestBase64_parse_json_table+0x3d4>
    8b0c:	ldr	r0, [fp, #-8]
    8b10:	ldr	r1, [fp, #-12]
    8b14:	ldr	r2, [fp, #-16]
    8b18:	movw	r3, #33	; 0x21
    8b1c:	bl	0 <flatcc_json_parser_set_error>
    8b20:	str	r0, [fp, #-4]
    8b24:	ldr	r0, [fp, #-4]
    8b28:	mov	sp, fp
    8b2c:	pop	{fp, pc}

00008b30 <MyGame_Example_Stat_parse_json_table>:
    8b30:	push	{fp, lr}
    8b34:	mov	fp, sp
    8b38:	sub	sp, sp, #72	; 0x48
    8b3c:	str	r0, [fp, #-8]
    8b40:	str	r1, [fp, #-12]
    8b44:	str	r2, [fp, #-16]
    8b48:	str	r3, [fp, #-20]	; 0xffffffec
    8b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8b50:	movw	r1, #0
    8b54:	str	r1, [r0]
    8b58:	ldr	r0, [fp, #-8]
    8b5c:	ldr	r0, [r0]
    8b60:	movw	r1, #3
    8b64:	bl	0 <flatcc_builder_start_table>
    8b68:	cmp	r0, #0
    8b6c:	beq	8b74 <MyGame_Example_Stat_parse_json_table+0x44>
    8b70:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8b74:	ldr	r0, [fp, #-8]
    8b78:	ldr	r1, [fp, #-12]
    8b7c:	ldr	r2, [fp, #-16]
    8b80:	sub	r3, fp, #24
    8b84:	bl	4ccc <flatcc_json_parser_object_start>
    8b88:	str	r0, [fp, #-12]
    8b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8b90:	cmp	r0, #0
    8b94:	beq	8f90 <MyGame_Example_Stat_parse_json_table+0x460>
    8b98:	ldr	r0, [fp, #-8]
    8b9c:	ldr	r1, [fp, #-12]
    8ba0:	ldr	r2, [fp, #-16]
    8ba4:	bl	4db0 <flatcc_json_parser_symbol_start>
    8ba8:	str	r0, [fp, #-12]
    8bac:	ldr	r0, [fp, #-12]
    8bb0:	ldr	r1, [fp, #-16]
    8bb4:	bl	4e5c <flatcc_json_parser_symbol_part>
    8bb8:	str	r1, [sp, #28]
    8bbc:	str	r0, [sp, #24]
    8bc0:	ldr	r0, [sp, #28]
    8bc4:	movw	r1, #65535	; 0xffff
    8bc8:	movt	r1, #26979	; 0x6963
    8bcc:	cmp	r0, r1
    8bd0:	bhi	8d48 <MyGame_Example_Stat_parse_json_table+0x218>
    8bd4:	b	8bd8 <MyGame_Example_Stat_parse_json_table+0xa8>
    8bd8:	ldr	r0, [sp, #24]
    8bdc:	ldr	r1, [sp, #28]
    8be0:	and	r0, r0, #-16777216	; 0xff000000
    8be4:	movw	r2, #30062	; 0x756e
    8be8:	movt	r2, #25455	; 0x636f
    8bec:	eor	r1, r1, r2
    8bf0:	eor	r0, r0, #1946157056	; 0x74000000
    8bf4:	orr	r0, r0, r1
    8bf8:	cmp	r0, #0
    8bfc:	bne	8d30 <MyGame_Example_Stat_parse_json_table+0x200>
    8c00:	b	8c04 <MyGame_Example_Stat_parse_json_table+0xd4>
    8c04:	ldr	r0, [fp, #-8]
    8c08:	ldr	r1, [fp, #-12]
    8c0c:	str	r1, [sp, #32]
    8c10:	ldr	r2, [fp, #-16]
    8c14:	movw	r3, #5
    8c18:	bl	4e94 <flatcc_json_parser_match_symbol>
    8c1c:	str	r0, [fp, #-12]
    8c20:	ldr	r0, [sp, #32]
    8c24:	ldr	r1, [fp, #-12]
    8c28:	cmp	r0, r1
    8c2c:	beq	8d18 <MyGame_Example_Stat_parse_json_table+0x1e8>
    8c30:	movw	r0, #0
    8c34:	strh	r0, [sp, #22]
    8c38:	ldr	r0, [fp, #-8]
    8c3c:	ldr	r1, [fp, #-12]
    8c40:	str	r1, [sp, #32]
    8c44:	ldr	r2, [fp, #-16]
    8c48:	add	r3, sp, #22
    8c4c:	bl	f980 <flatcc_json_parser_uint16>
    8c50:	str	r0, [fp, #-12]
    8c54:	ldr	r0, [sp, #32]
    8c58:	ldr	r1, [fp, #-12]
    8c5c:	cmp	r0, r1
    8c60:	bne	8cb4 <MyGame_Example_Stat_parse_json_table+0x184>
    8c64:	ldr	r0, [fp, #-8]
    8c68:	ldr	r1, [fp, #-12]
    8c6c:	str	r1, [sp, #32]
    8c70:	ldr	r2, [fp, #-16]
    8c74:	movw	r3, #0
    8c78:	movt	r3, #0
    8c7c:	add	ip, sp, #22
    8c80:	str	ip, [sp]
    8c84:	bl	fa5c <flatcc_json_parser_symbolic_uint16>
    8c88:	str	r0, [fp, #-12]
    8c8c:	ldr	r0, [fp, #-12]
    8c90:	ldr	r1, [sp, #32]
    8c94:	cmp	r0, r1
    8c98:	beq	8cac <MyGame_Example_Stat_parse_json_table+0x17c>
    8c9c:	ldr	r0, [fp, #-12]
    8ca0:	ldr	r1, [fp, #-16]
    8ca4:	cmp	r0, r1
    8ca8:	bne	8cb0 <MyGame_Example_Stat_parse_json_table+0x180>
    8cac:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8cb0:	b	8cb4 <MyGame_Example_Stat_parse_json_table+0x184>
    8cb4:	ldrh	r0, [sp, #22]
    8cb8:	cmp	r0, #0
    8cbc:	bne	8cd4 <MyGame_Example_Stat_parse_json_table+0x1a4>
    8cc0:	ldr	r0, [fp, #-8]
    8cc4:	ldr	r0, [r0, #8]
    8cc8:	and	r0, r0, #2
    8ccc:	cmp	r0, #0
    8cd0:	beq	8d14 <MyGame_Example_Stat_parse_json_table+0x1e4>
    8cd4:	ldr	r0, [fp, #-8]
    8cd8:	ldr	r0, [r0]
    8cdc:	movw	r1, #2
    8ce0:	str	r1, [sp, #4]
    8ce4:	ldr	r2, [sp, #4]
    8ce8:	movw	r3, #2
    8cec:	uxth	r3, r3
    8cf0:	bl	0 <flatcc_builder_table_add>
    8cf4:	str	r0, [fp, #-28]	; 0xffffffe4
    8cf8:	movw	r1, #0
    8cfc:	cmp	r0, r1
    8d00:	bne	8d08 <MyGame_Example_Stat_parse_json_table+0x1d8>
    8d04:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8d08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d0c:	ldrh	r1, [sp, #22]
    8d10:	bl	fc88 <flatbuffers_uint16_write_to_pe>
    8d14:	b	8d2c <MyGame_Example_Stat_parse_json_table+0x1fc>
    8d18:	ldr	r0, [fp, #-8]
    8d1c:	ldr	r1, [fp, #-12]
    8d20:	ldr	r2, [fp, #-16]
    8d24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d28:	str	r0, [fp, #-12]
    8d2c:	b	8d44 <MyGame_Example_Stat_parse_json_table+0x214>
    8d30:	ldr	r0, [fp, #-8]
    8d34:	ldr	r1, [fp, #-12]
    8d38:	ldr	r2, [fp, #-16]
    8d3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8d40:	str	r0, [fp, #-12]
    8d44:	b	8f74 <MyGame_Example_Stat_parse_json_table+0x444>
    8d48:	ldr	r0, [sp, #28]
    8d4c:	bic	r0, r0, #255	; 0xff
    8d50:	movw	r1, #27648	; 0x6c00
    8d54:	movt	r1, #30305	; 0x7661
    8d58:	teq	r0, r1
    8d5c:	bne	8ea0 <MyGame_Example_Stat_parse_json_table+0x370>
    8d60:	b	8d64 <MyGame_Example_Stat_parse_json_table+0x234>
    8d64:	ldr	r0, [fp, #-8]
    8d68:	ldr	r1, [fp, #-12]
    8d6c:	str	r1, [sp, #32]
    8d70:	ldr	r2, [fp, #-16]
    8d74:	movw	r3, #3
    8d78:	bl	4e94 <flatcc_json_parser_match_symbol>
    8d7c:	str	r0, [fp, #-12]
    8d80:	ldr	r0, [sp, #32]
    8d84:	ldr	r1, [fp, #-12]
    8d88:	cmp	r0, r1
    8d8c:	beq	8e88 <MyGame_Example_Stat_parse_json_table+0x358>
    8d90:	mov	r0, #0
    8d94:	str	r0, [sp, #12]
    8d98:	str	r0, [sp, #8]
    8d9c:	ldr	r0, [fp, #-8]
    8da0:	ldr	r1, [fp, #-12]
    8da4:	str	r1, [sp, #32]
    8da8:	ldr	r2, [fp, #-16]
    8dac:	add	r3, sp, #8
    8db0:	bl	957c <flatcc_json_parser_int64>
    8db4:	str	r0, [fp, #-12]
    8db8:	ldr	r0, [sp, #32]
    8dbc:	ldr	r1, [fp, #-12]
    8dc0:	cmp	r0, r1
    8dc4:	bne	8e18 <MyGame_Example_Stat_parse_json_table+0x2e8>
    8dc8:	ldr	r0, [fp, #-8]
    8dcc:	ldr	r1, [fp, #-12]
    8dd0:	str	r1, [sp, #32]
    8dd4:	ldr	r2, [fp, #-16]
    8dd8:	movw	r3, #0
    8ddc:	movt	r3, #0
    8de0:	add	ip, sp, #8
    8de4:	str	ip, [sp]
    8de8:	bl	9654 <flatcc_json_parser_symbolic_int64>
    8dec:	str	r0, [fp, #-12]
    8df0:	ldr	r0, [fp, #-12]
    8df4:	ldr	r1, [sp, #32]
    8df8:	cmp	r0, r1
    8dfc:	beq	8e10 <MyGame_Example_Stat_parse_json_table+0x2e0>
    8e00:	ldr	r0, [fp, #-12]
    8e04:	ldr	r1, [fp, #-16]
    8e08:	cmp	r0, r1
    8e0c:	bne	8e14 <MyGame_Example_Stat_parse_json_table+0x2e4>
    8e10:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8e14:	b	8e18 <MyGame_Example_Stat_parse_json_table+0x2e8>
    8e18:	ldr	r0, [sp, #8]
    8e1c:	ldr	r1, [sp, #12]
    8e20:	orr	r0, r0, r1
    8e24:	cmp	r0, #0
    8e28:	bne	8e44 <MyGame_Example_Stat_parse_json_table+0x314>
    8e2c:	b	8e30 <MyGame_Example_Stat_parse_json_table+0x300>
    8e30:	ldr	r0, [fp, #-8]
    8e34:	ldr	r0, [r0, #8]
    8e38:	and	r0, r0, #2
    8e3c:	cmp	r0, #0
    8e40:	beq	8e84 <MyGame_Example_Stat_parse_json_table+0x354>
    8e44:	ldr	r0, [fp, #-8]
    8e48:	ldr	r0, [r0]
    8e4c:	movw	r1, #1
    8e50:	movw	r2, #8
    8e54:	movw	r3, #8
    8e58:	uxth	r3, r3
    8e5c:	bl	0 <flatcc_builder_table_add>
    8e60:	str	r0, [fp, #-28]	; 0xffffffe4
    8e64:	movw	r1, #0
    8e68:	cmp	r0, r1
    8e6c:	bne	8e74 <MyGame_Example_Stat_parse_json_table+0x344>
    8e70:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8e74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8e78:	ldr	r2, [sp, #8]
    8e7c:	ldr	r3, [sp, #12]
    8e80:	bl	9894 <flatbuffers_int64_write_to_pe>
    8e84:	b	8e9c <MyGame_Example_Stat_parse_json_table+0x36c>
    8e88:	ldr	r0, [fp, #-8]
    8e8c:	ldr	r1, [fp, #-12]
    8e90:	ldr	r2, [fp, #-16]
    8e94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8e98:	str	r0, [fp, #-12]
    8e9c:	b	8f70 <MyGame_Example_Stat_parse_json_table+0x440>
    8ea0:	ldr	r0, [sp, #28]
    8ea4:	bfc	r0, #0, #16
    8ea8:	movw	r1, #0
    8eac:	movt	r1, #26980	; 0x6964
    8eb0:	teq	r0, r1
    8eb4:	bne	8f58 <MyGame_Example_Stat_parse_json_table+0x428>
    8eb8:	b	8ebc <MyGame_Example_Stat_parse_json_table+0x38c>
    8ebc:	ldr	r0, [fp, #-8]
    8ec0:	ldr	r1, [fp, #-12]
    8ec4:	str	r1, [sp, #32]
    8ec8:	ldr	r2, [fp, #-16]
    8ecc:	movw	r3, #2
    8ed0:	bl	4e94 <flatcc_json_parser_match_symbol>
    8ed4:	str	r0, [fp, #-12]
    8ed8:	ldr	r0, [sp, #32]
    8edc:	ldr	r1, [fp, #-12]
    8ee0:	cmp	r0, r1
    8ee4:	beq	8f40 <MyGame_Example_Stat_parse_json_table+0x410>
    8ee8:	ldr	r0, [fp, #-8]
    8eec:	ldr	r1, [fp, #-12]
    8ef0:	ldr	r2, [fp, #-16]
    8ef4:	sub	r3, fp, #32
    8ef8:	bl	0 <flatcc_json_parser_build_string>
    8efc:	str	r0, [fp, #-12]
    8f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8f04:	cmp	r0, #0
    8f08:	beq	8f2c <MyGame_Example_Stat_parse_json_table+0x3fc>
    8f0c:	ldr	r0, [fp, #-8]
    8f10:	ldr	r0, [r0]
    8f14:	movw	r1, #0
    8f18:	bl	0 <flatcc_builder_table_add_offset>
    8f1c:	str	r0, [sp, #36]	; 0x24
    8f20:	movw	r1, #0
    8f24:	cmp	r0, r1
    8f28:	bne	8f30 <MyGame_Example_Stat_parse_json_table+0x400>
    8f2c:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8f34:	ldr	r1, [sp, #36]	; 0x24
    8f38:	str	r0, [r1]
    8f3c:	b	8f54 <MyGame_Example_Stat_parse_json_table+0x424>
    8f40:	ldr	r0, [fp, #-8]
    8f44:	ldr	r1, [fp, #-12]
    8f48:	ldr	r2, [fp, #-16]
    8f4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8f50:	str	r0, [fp, #-12]
    8f54:	b	8f6c <MyGame_Example_Stat_parse_json_table+0x43c>
    8f58:	ldr	r0, [fp, #-8]
    8f5c:	ldr	r1, [fp, #-12]
    8f60:	ldr	r2, [fp, #-16]
    8f64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8f68:	str	r0, [fp, #-12]
    8f6c:	b	8f70 <MyGame_Example_Stat_parse_json_table+0x440>
    8f70:	b	8f74 <MyGame_Example_Stat_parse_json_table+0x444>
    8f74:	ldr	r0, [fp, #-8]
    8f78:	ldr	r1, [fp, #-12]
    8f7c:	ldr	r2, [fp, #-16]
    8f80:	sub	r3, fp, #24
    8f84:	bl	a1ac <flatcc_json_parser_object_end>
    8f88:	str	r0, [fp, #-12]
    8f8c:	b	8b8c <MyGame_Example_Stat_parse_json_table+0x5c>
    8f90:	ldr	r0, [fp, #-8]
    8f94:	ldr	r0, [r0, #24]
    8f98:	cmp	r0, #0
    8f9c:	beq	8fa4 <MyGame_Example_Stat_parse_json_table+0x474>
    8fa0:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8fa4:	ldr	r0, [fp, #-8]
    8fa8:	ldr	r0, [r0]
    8fac:	bl	0 <flatcc_builder_end_table>
    8fb0:	ldr	lr, [fp, #-20]	; 0xffffffec
    8fb4:	str	r0, [lr]
    8fb8:	cmp	r0, #0
    8fbc:	bne	8fc4 <MyGame_Example_Stat_parse_json_table+0x494>
    8fc0:	b	8fd0 <MyGame_Example_Stat_parse_json_table+0x4a0>
    8fc4:	ldr	r0, [fp, #-12]
    8fc8:	str	r0, [fp, #-4]
    8fcc:	b	8fe8 <MyGame_Example_Stat_parse_json_table+0x4b8>
    8fd0:	ldr	r0, [fp, #-8]
    8fd4:	ldr	r1, [fp, #-12]
    8fd8:	ldr	r2, [fp, #-16]
    8fdc:	movw	r3, #33	; 0x21
    8fe0:	bl	0 <flatcc_json_parser_set_error>
    8fe4:	str	r0, [fp, #-4]
    8fe8:	ldr	r0, [fp, #-4]
    8fec:	mov	sp, fp
    8ff0:	pop	{fp, pc}

00008ff4 <flatcc_json_parser_symbolic_float>:
    8ff4:	push	{r4, r5, r6, sl, fp, lr}
    8ff8:	add	fp, sp, #16
    8ffc:	sub	sp, sp, #88	; 0x58
    9000:	ldr	ip, [fp, #8]
    9004:	vldr	s0, [pc, #532]	; 9220 <flatcc_json_parser_symbolic_float+0x22c>
    9008:	str	r0, [fp, #-24]	; 0xffffffe8
    900c:	str	r1, [fp, #-28]	; 0xffffffe4
    9010:	str	r2, [fp, #-32]	; 0xffffffe0
    9014:	str	r3, [fp, #-36]	; 0xffffffdc
    9018:	vstr	s0, [fp, #-48]	; 0xffffffd0
    901c:	movw	r0, #0
    9020:	str	r0, [sp, #36]	; 0x24
    9024:	ldr	r0, [fp, #8]
    9028:	vstr	s0, [r0]
    902c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9030:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9034:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9038:	str	ip, [sp, #32]
    903c:	bl	b934 <flatcc_json_parser_constant_start>
    9040:	str	r0, [fp, #-28]	; 0xffffffe4
    9044:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9048:	ldr	r1, [fp, #-32]	; 0xffffffe0
    904c:	cmp	r0, r1
    9050:	bne	9060 <flatcc_json_parser_symbolic_float+0x6c>
    9054:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9058:	str	r0, [fp, #-20]	; 0xffffffec
    905c:	b	9214 <flatcc_json_parser_symbolic_float+0x220>
    9060:	b	9064 <flatcc_json_parser_symbolic_float+0x70>
    9064:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9068:	str	r0, [fp, #-40]	; 0xffffffd8
    906c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9070:	ldr	r0, [r0]
    9074:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9078:	ldr	r2, [fp, #-28]	; 0xffffffe4
    907c:	str	r2, [fp, #-44]	; 0xffffffd4
    9080:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9084:	str	r0, [sp, #28]
    9088:	mov	r0, r1
    908c:	mov	r1, r2
    9090:	mov	r2, r3
    9094:	add	r3, sp, #44	; 0x2c
    9098:	add	ip, sp, #48	; 0x30
    909c:	str	ip, [sp]
    90a0:	add	ip, sp, #40	; 0x28
    90a4:	str	ip, [sp, #4]
    90a8:	ldr	ip, [sp, #28]
    90ac:	blx	ip
    90b0:	str	r0, [fp, #-28]	; 0xffffffe4
    90b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    90bc:	cmp	r0, r1
    90c0:	bne	90d0 <flatcc_json_parser_symbolic_float+0xdc>
    90c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90c8:	str	r0, [fp, #-20]	; 0xffffffec
    90cc:	b	9214 <flatcc_json_parser_symbolic_float+0x220>
    90d0:	b	90d4 <flatcc_json_parser_symbolic_float+0xe0>
    90d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    90d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    90dc:	cmp	r0, r1
    90e0:	movw	r0, #0
    90e4:	str	r0, [sp, #24]
    90e8:	bne	9110 <flatcc_json_parser_symbolic_float+0x11c>
    90ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    90f0:	add	r1, r0, #4
    90f4:	str	r1, [fp, #-40]	; 0xffffffd8
    90f8:	ldr	r0, [r0, #4]
    90fc:	movw	r1, #0
    9100:	cmp	r0, r1
    9104:	movw	r0, #0
    9108:	movne	r0, #1
    910c:	str	r0, [sp, #24]
    9110:	ldr	r0, [sp, #24]
    9114:	tst	r0, #1
    9118:	bne	906c <flatcc_json_parser_symbolic_float+0x78>
    911c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9120:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9124:	cmp	r0, r1
    9128:	bne	9148 <flatcc_json_parser_symbolic_float+0x154>
    912c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9130:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9134:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9138:	movw	r3, #23
    913c:	bl	0 <flatcc_json_parser_set_error>
    9140:	str	r0, [fp, #-20]	; 0xffffffec
    9144:	b	9214 <flatcc_json_parser_symbolic_float+0x220>
    9148:	ldr	r0, [sp, #36]	; 0x24
    914c:	add	r1, r0, #1
    9150:	str	r1, [sp, #36]	; 0x24
    9154:	cmp	r0, #0
    9158:	beq	9188 <flatcc_json_parser_symbolic_float+0x194>
    915c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9160:	ldr	r0, [r0, #12]
    9164:	cmp	r0, #0
    9168:	beq	9188 <flatcc_json_parser_symbolic_float+0x194>
    916c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9170:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9174:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9178:	movw	r3, #14
    917c:	bl	0 <flatcc_json_parser_set_error>
    9180:	str	r0, [fp, #-20]	; 0xffffffec
    9184:	b	9214 <flatcc_json_parser_symbolic_float+0x220>
    9188:	ldr	r0, [fp, #-32]	; 0xffffffe0
    918c:	mov	r1, r0
    9190:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9194:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9198:	ldr	ip, [sp, #44]	; 0x2c
    919c:	ldr	lr, [sp, #48]	; 0x30
    91a0:	ldr	r4, [sp, #52]	; 0x34
    91a4:	mov	r5, sp
    91a8:	sub	r6, fp, #48	; 0x30
    91ac:	str	r6, [r5, #8]
    91b0:	str	r4, [r5, #4]
    91b4:	str	lr, [r5]
    91b8:	str	r0, [sp, #20]
    91bc:	mov	r0, r2
    91c0:	str	r1, [sp, #16]
    91c4:	mov	r1, r3
    91c8:	ldr	r2, [sp, #20]
    91cc:	mov	r3, ip
    91d0:	bl	10060 <flatcc_json_parser_coerce_float>
    91d4:	ldr	r1, [sp, #16]
    91d8:	cmp	r1, r0
    91dc:	bne	91ec <flatcc_json_parser_symbolic_float+0x1f8>
    91e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    91e4:	str	r0, [fp, #-20]	; 0xffffffec
    91e8:	b	9214 <flatcc_json_parser_symbolic_float+0x220>
    91ec:	vldr	s0, [fp, #-48]	; 0xffffffd0
    91f0:	ldr	r0, [fp, #8]
    91f4:	vldr	s2, [r0]
    91f8:	vadd.f32	s0, s2, s0
    91fc:	vstr	s0, [r0]
    9200:	ldr	r0, [sp, #40]	; 0x28
    9204:	cmp	r0, #0
    9208:	bne	9064 <flatcc_json_parser_symbolic_float+0x70>
    920c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9210:	str	r0, [fp, #-20]	; 0xffffffec
    9214:	ldr	r0, [fp, #-20]	; 0xffffffec
    9218:	sub	sp, fp, #16
    921c:	pop	{r4, r5, r6, sl, fp, pc}
    9220:	.word	0x00000000

00009224 <flatbuffers_float_write_to_pe>:
    9224:	push	{fp, lr}
    9228:	mov	fp, sp
    922c:	sub	sp, sp, #8
    9230:	str	r0, [sp, #4]
    9234:	vstr	s0, [sp]
    9238:	vldr	s0, [sp]
    923c:	bl	100e8 <flatbuffers_float_cast_to_pe>
    9240:	ldr	r0, [sp, #4]
    9244:	vstr	s0, [r0]
    9248:	mov	sp, fp
    924c:	pop	{fp, pc}

00009250 <flatcc_json_parser_int32>:
    9250:	push	{r4, r5, fp, lr}
    9254:	add	fp, sp, #8
    9258:	sub	sp, sp, #56	; 0x38
    925c:	str	r0, [fp, #-16]
    9260:	str	r1, [fp, #-20]	; 0xffffffec
    9264:	str	r2, [fp, #-24]	; 0xffffffe8
    9268:	str	r3, [fp, #-28]	; 0xffffffe4
    926c:	mov	r0, #0
    9270:	str	r0, [sp, #28]
    9274:	str	r0, [sp, #24]
    9278:	movw	r0, #0
    927c:	str	r0, [sp, #20]
    9280:	ldr	r1, [fp, #-20]	; 0xffffffec
    9284:	str	r1, [sp, #16]
    9288:	ldr	r1, [fp, #-28]	; 0xffffffe4
    928c:	str	r0, [r1]
    9290:	ldr	r0, [fp, #-20]	; 0xffffffec
    9294:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9298:	cmp	r0, r1
    929c:	bne	92ac <flatcc_json_parser_int32+0x5c>
    92a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    92a4:	str	r0, [fp, #-12]
    92a8:	b	931c <flatcc_json_parser_int32+0xcc>
    92ac:	ldr	r0, [fp, #-16]
    92b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    92b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    92b8:	add	r3, sp, #20
    92bc:	add	ip, sp, #24
    92c0:	str	ip, [sp]
    92c4:	bl	0 <flatcc_json_parser_integer>
    92c8:	str	r0, [fp, #-20]	; 0xffffffec
    92cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    92d0:	ldr	r1, [sp, #16]
    92d4:	cmp	r0, r1
    92d8:	beq	9314 <flatcc_json_parser_int32+0xc4>
    92dc:	ldr	r0, [fp, #-16]
    92e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    92e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    92e8:	ldr	r3, [sp, #20]
    92ec:	ldr	ip, [sp, #24]
    92f0:	ldr	lr, [sp, #28]
    92f4:	ldr	r4, [fp, #-28]	; 0xffffffe4
    92f8:	mov	r5, sp
    92fc:	str	r4, [r5, #8]
    9300:	str	lr, [r5, #4]
    9304:	str	ip, [r5]
    9308:	bl	1010c <flatcc_json_parser_coerce_int32>
    930c:	str	r0, [fp, #-12]
    9310:	b	931c <flatcc_json_parser_int32+0xcc>
    9314:	ldr	r0, [fp, #-20]	; 0xffffffec
    9318:	str	r0, [fp, #-12]
    931c:	ldr	r0, [fp, #-12]
    9320:	sub	sp, fp, #8
    9324:	pop	{r4, r5, fp, pc}

00009328 <flatcc_json_parser_symbolic_int32>:
    9328:	push	{r4, r5, r6, sl, fp, lr}
    932c:	add	fp, sp, #16
    9330:	sub	sp, sp, #88	; 0x58
    9334:	ldr	ip, [fp, #8]
    9338:	str	r0, [fp, #-24]	; 0xffffffe8
    933c:	str	r1, [fp, #-28]	; 0xffffffe4
    9340:	str	r2, [fp, #-32]	; 0xffffffe0
    9344:	str	r3, [fp, #-36]	; 0xffffffdc
    9348:	movw	r0, #0
    934c:	str	r0, [fp, #-48]	; 0xffffffd0
    9350:	str	r0, [sp, #36]	; 0x24
    9354:	ldr	r1, [fp, #8]
    9358:	str	r0, [r1]
    935c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9360:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9364:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9368:	str	ip, [sp, #32]
    936c:	bl	b934 <flatcc_json_parser_constant_start>
    9370:	str	r0, [fp, #-28]	; 0xffffffe4
    9374:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9378:	ldr	r1, [fp, #-32]	; 0xffffffe0
    937c:	cmp	r0, r1
    9380:	bne	9390 <flatcc_json_parser_symbolic_int32+0x68>
    9384:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9388:	str	r0, [fp, #-20]	; 0xffffffec
    938c:	b	9544 <flatcc_json_parser_symbolic_int32+0x21c>
    9390:	b	9394 <flatcc_json_parser_symbolic_int32+0x6c>
    9394:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9398:	str	r0, [fp, #-40]	; 0xffffffd8
    939c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    93a0:	ldr	r0, [r0]
    93a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    93a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    93ac:	str	r2, [fp, #-44]	; 0xffffffd4
    93b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    93b4:	str	r0, [sp, #28]
    93b8:	mov	r0, r1
    93bc:	mov	r1, r2
    93c0:	mov	r2, r3
    93c4:	add	r3, sp, #44	; 0x2c
    93c8:	add	ip, sp, #48	; 0x30
    93cc:	str	ip, [sp]
    93d0:	add	ip, sp, #40	; 0x28
    93d4:	str	ip, [sp, #4]
    93d8:	ldr	ip, [sp, #28]
    93dc:	blx	ip
    93e0:	str	r0, [fp, #-28]	; 0xffffffe4
    93e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    93e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    93ec:	cmp	r0, r1
    93f0:	bne	9400 <flatcc_json_parser_symbolic_int32+0xd8>
    93f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    93f8:	str	r0, [fp, #-20]	; 0xffffffec
    93fc:	b	9544 <flatcc_json_parser_symbolic_int32+0x21c>
    9400:	b	9404 <flatcc_json_parser_symbolic_int32+0xdc>
    9404:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9408:	ldr	r1, [fp, #-44]	; 0xffffffd4
    940c:	cmp	r0, r1
    9410:	movw	r0, #0
    9414:	str	r0, [sp, #24]
    9418:	bne	9440 <flatcc_json_parser_symbolic_int32+0x118>
    941c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9420:	add	r1, r0, #4
    9424:	str	r1, [fp, #-40]	; 0xffffffd8
    9428:	ldr	r0, [r0, #4]
    942c:	movw	r1, #0
    9430:	cmp	r0, r1
    9434:	movw	r0, #0
    9438:	movne	r0, #1
    943c:	str	r0, [sp, #24]
    9440:	ldr	r0, [sp, #24]
    9444:	tst	r0, #1
    9448:	bne	939c <flatcc_json_parser_symbolic_int32+0x74>
    944c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9450:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9454:	cmp	r0, r1
    9458:	bne	9478 <flatcc_json_parser_symbolic_int32+0x150>
    945c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9460:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9464:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9468:	movw	r3, #23
    946c:	bl	0 <flatcc_json_parser_set_error>
    9470:	str	r0, [fp, #-20]	; 0xffffffec
    9474:	b	9544 <flatcc_json_parser_symbolic_int32+0x21c>
    9478:	ldr	r0, [sp, #36]	; 0x24
    947c:	add	r1, r0, #1
    9480:	str	r1, [sp, #36]	; 0x24
    9484:	cmp	r0, #0
    9488:	beq	94b8 <flatcc_json_parser_symbolic_int32+0x190>
    948c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9490:	ldr	r0, [r0, #12]
    9494:	cmp	r0, #0
    9498:	beq	94b8 <flatcc_json_parser_symbolic_int32+0x190>
    949c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    94a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    94a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    94a8:	movw	r3, #14
    94ac:	bl	0 <flatcc_json_parser_set_error>
    94b0:	str	r0, [fp, #-20]	; 0xffffffec
    94b4:	b	9544 <flatcc_json_parser_symbolic_int32+0x21c>
    94b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    94bc:	mov	r1, r0
    94c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    94c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    94c8:	ldr	ip, [sp, #44]	; 0x2c
    94cc:	ldr	lr, [sp, #48]	; 0x30
    94d0:	ldr	r4, [sp, #52]	; 0x34
    94d4:	mov	r5, sp
    94d8:	sub	r6, fp, #48	; 0x30
    94dc:	str	r6, [r5, #8]
    94e0:	str	r4, [r5, #4]
    94e4:	str	lr, [r5]
    94e8:	str	r0, [sp, #20]
    94ec:	mov	r0, r2
    94f0:	str	r1, [sp, #16]
    94f4:	mov	r1, r3
    94f8:	ldr	r2, [sp, #20]
    94fc:	mov	r3, ip
    9500:	bl	1010c <flatcc_json_parser_coerce_int32>
    9504:	ldr	r1, [sp, #16]
    9508:	cmp	r1, r0
    950c:	bne	951c <flatcc_json_parser_symbolic_int32+0x1f4>
    9510:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9514:	str	r0, [fp, #-20]	; 0xffffffec
    9518:	b	9544 <flatcc_json_parser_symbolic_int32+0x21c>
    951c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9520:	ldr	r1, [fp, #8]
    9524:	ldr	r2, [r1]
    9528:	add	r0, r2, r0
    952c:	str	r0, [r1]
    9530:	ldr	r0, [sp, #40]	; 0x28
    9534:	cmp	r0, #0
    9538:	bne	9394 <flatcc_json_parser_symbolic_int32+0x6c>
    953c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9540:	str	r0, [fp, #-20]	; 0xffffffec
    9544:	ldr	r0, [fp, #-20]	; 0xffffffec
    9548:	sub	sp, fp, #16
    954c:	pop	{r4, r5, r6, sl, fp, pc}

00009550 <flatbuffers_int32_write_to_pe>:
    9550:	push	{fp, lr}
    9554:	mov	fp, sp
    9558:	sub	sp, sp, #8
    955c:	str	r0, [sp, #4]
    9560:	str	r1, [sp]
    9564:	ldr	r0, [sp]
    9568:	bl	101f8 <flatbuffers_int32_cast_to_pe>
    956c:	ldr	r1, [sp, #4]
    9570:	str	r0, [r1]
    9574:	mov	sp, fp
    9578:	pop	{fp, pc}

0000957c <flatcc_json_parser_int64>:
    957c:	push	{r4, r5, fp, lr}
    9580:	add	fp, sp, #8
    9584:	sub	sp, sp, #56	; 0x38
    9588:	str	r0, [fp, #-16]
    958c:	str	r1, [fp, #-20]	; 0xffffffec
    9590:	str	r2, [fp, #-24]	; 0xffffffe8
    9594:	str	r3, [fp, #-28]	; 0xffffffe4
    9598:	mov	r0, #0
    959c:	str	r0, [sp, #28]
    95a0:	str	r0, [sp, #24]
    95a4:	str	r0, [sp, #20]
    95a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    95ac:	str	r1, [sp, #16]
    95b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    95b4:	str	r0, [r1, #4]
    95b8:	str	r0, [r1]
    95bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    95c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    95c4:	cmp	r0, r1
    95c8:	bne	95d8 <flatcc_json_parser_int64+0x5c>
    95cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    95d0:	str	r0, [fp, #-12]
    95d4:	b	9648 <flatcc_json_parser_int64+0xcc>
    95d8:	ldr	r0, [fp, #-16]
    95dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    95e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    95e4:	add	r3, sp, #20
    95e8:	add	ip, sp, #24
    95ec:	str	ip, [sp]
    95f0:	bl	0 <flatcc_json_parser_integer>
    95f4:	str	r0, [fp, #-20]	; 0xffffffec
    95f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    95fc:	ldr	r1, [sp, #16]
    9600:	cmp	r0, r1
    9604:	beq	9640 <flatcc_json_parser_int64+0xc4>
    9608:	ldr	r0, [fp, #-16]
    960c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9610:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9614:	ldr	r3, [sp, #20]
    9618:	ldr	ip, [sp, #24]
    961c:	ldr	lr, [sp, #28]
    9620:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9624:	mov	r5, sp
    9628:	str	r4, [r5, #8]
    962c:	str	lr, [r5, #4]
    9630:	str	ip, [r5]
    9634:	bl	1020c <flatcc_json_parser_coerce_int64>
    9638:	str	r0, [fp, #-12]
    963c:	b	9648 <flatcc_json_parser_int64+0xcc>
    9640:	ldr	r0, [fp, #-20]	; 0xffffffec
    9644:	str	r0, [fp, #-12]
    9648:	ldr	r0, [fp, #-12]
    964c:	sub	sp, fp, #8
    9650:	pop	{r4, r5, fp, pc}

00009654 <flatcc_json_parser_symbolic_int64>:
    9654:	push	{r4, r5, r6, sl, fp, lr}
    9658:	add	fp, sp, #16
    965c:	sub	sp, sp, #96	; 0x60
    9660:	ldr	ip, [fp, #8]
    9664:	str	r0, [fp, #-24]	; 0xffffffe8
    9668:	str	r1, [fp, #-28]	; 0xffffffe4
    966c:	str	r2, [fp, #-32]	; 0xffffffe0
    9670:	str	r3, [fp, #-36]	; 0xffffffdc
    9674:	mov	r0, #0
    9678:	str	r0, [sp, #60]	; 0x3c
    967c:	str	r0, [sp, #56]	; 0x38
    9680:	str	r0, [sp, #36]	; 0x24
    9684:	ldr	r1, [fp, #8]
    9688:	str	r0, [r1, #4]
    968c:	str	r0, [r1]
    9690:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9694:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9698:	ldr	r2, [fp, #-32]	; 0xffffffe0
    969c:	str	ip, [sp, #32]
    96a0:	bl	b934 <flatcc_json_parser_constant_start>
    96a4:	str	r0, [fp, #-28]	; 0xffffffe4
    96a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    96ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    96b0:	cmp	r0, r1
    96b4:	bne	96c4 <flatcc_json_parser_symbolic_int64+0x70>
    96b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    96bc:	str	r0, [fp, #-20]	; 0xffffffec
    96c0:	b	9888 <flatcc_json_parser_symbolic_int64+0x234>
    96c4:	b	96c8 <flatcc_json_parser_symbolic_int64+0x74>
    96c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    96cc:	str	r0, [fp, #-40]	; 0xffffffd8
    96d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    96d4:	ldr	r0, [r0]
    96d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    96dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    96e0:	str	r2, [fp, #-44]	; 0xffffffd4
    96e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    96e8:	str	r0, [sp, #28]
    96ec:	mov	r0, r1
    96f0:	mov	r1, r2
    96f4:	mov	r2, r3
    96f8:	add	r3, sp, #44	; 0x2c
    96fc:	add	ip, sp, #48	; 0x30
    9700:	str	ip, [sp]
    9704:	add	ip, sp, #40	; 0x28
    9708:	str	ip, [sp, #4]
    970c:	ldr	ip, [sp, #28]
    9710:	blx	ip
    9714:	str	r0, [fp, #-28]	; 0xffffffe4
    9718:	ldr	r0, [fp, #-28]	; 0xffffffe4
    971c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9720:	cmp	r0, r1
    9724:	bne	9734 <flatcc_json_parser_symbolic_int64+0xe0>
    9728:	ldr	r0, [fp, #-28]	; 0xffffffe4
    972c:	str	r0, [fp, #-20]	; 0xffffffec
    9730:	b	9888 <flatcc_json_parser_symbolic_int64+0x234>
    9734:	b	9738 <flatcc_json_parser_symbolic_int64+0xe4>
    9738:	ldr	r0, [fp, #-28]	; 0xffffffe4
    973c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9740:	cmp	r0, r1
    9744:	movw	r0, #0
    9748:	str	r0, [sp, #24]
    974c:	bne	9774 <flatcc_json_parser_symbolic_int64+0x120>
    9750:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9754:	add	r1, r0, #4
    9758:	str	r1, [fp, #-40]	; 0xffffffd8
    975c:	ldr	r0, [r0, #4]
    9760:	movw	r1, #0
    9764:	cmp	r0, r1
    9768:	movw	r0, #0
    976c:	movne	r0, #1
    9770:	str	r0, [sp, #24]
    9774:	ldr	r0, [sp, #24]
    9778:	tst	r0, #1
    977c:	bne	96d0 <flatcc_json_parser_symbolic_int64+0x7c>
    9780:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9784:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9788:	cmp	r0, r1
    978c:	bne	97ac <flatcc_json_parser_symbolic_int64+0x158>
    9790:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9794:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9798:	ldr	r2, [fp, #-32]	; 0xffffffe0
    979c:	movw	r3, #23
    97a0:	bl	0 <flatcc_json_parser_set_error>
    97a4:	str	r0, [fp, #-20]	; 0xffffffec
    97a8:	b	9888 <flatcc_json_parser_symbolic_int64+0x234>
    97ac:	ldr	r0, [sp, #36]	; 0x24
    97b0:	add	r1, r0, #1
    97b4:	str	r1, [sp, #36]	; 0x24
    97b8:	cmp	r0, #0
    97bc:	beq	97ec <flatcc_json_parser_symbolic_int64+0x198>
    97c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    97c4:	ldr	r0, [r0, #12]
    97c8:	cmp	r0, #0
    97cc:	beq	97ec <flatcc_json_parser_symbolic_int64+0x198>
    97d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    97d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    97d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    97dc:	movw	r3, #14
    97e0:	bl	0 <flatcc_json_parser_set_error>
    97e4:	str	r0, [fp, #-20]	; 0xffffffec
    97e8:	b	9888 <flatcc_json_parser_symbolic_int64+0x234>
    97ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    97f0:	mov	r1, r0
    97f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    97f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    97fc:	ldr	ip, [sp, #44]	; 0x2c
    9800:	ldr	lr, [sp, #48]	; 0x30
    9804:	ldr	r4, [sp, #52]	; 0x34
    9808:	mov	r5, sp
    980c:	add	r6, sp, #56	; 0x38
    9810:	str	r6, [r5, #8]
    9814:	str	r4, [r5, #4]
    9818:	str	lr, [r5]
    981c:	str	r0, [sp, #20]
    9820:	mov	r0, r2
    9824:	str	r1, [sp, #16]
    9828:	mov	r1, r3
    982c:	ldr	r2, [sp, #20]
    9830:	mov	r3, ip
    9834:	bl	1020c <flatcc_json_parser_coerce_int64>
    9838:	ldr	r1, [sp, #16]
    983c:	cmp	r1, r0
    9840:	bne	9850 <flatcc_json_parser_symbolic_int64+0x1fc>
    9844:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9848:	str	r0, [fp, #-20]	; 0xffffffec
    984c:	b	9888 <flatcc_json_parser_symbolic_int64+0x234>
    9850:	ldr	r0, [sp, #56]	; 0x38
    9854:	ldr	r1, [sp, #60]	; 0x3c
    9858:	ldr	r2, [fp, #8]
    985c:	ldr	r3, [r2]
    9860:	ldr	ip, [r2, #4]
    9864:	adds	r0, r3, r0
    9868:	adc	r1, ip, r1
    986c:	str	r0, [r2]
    9870:	str	r1, [r2, #4]
    9874:	ldr	r0, [sp, #40]	; 0x28
    9878:	cmp	r0, #0
    987c:	bne	96c8 <flatcc_json_parser_symbolic_int64+0x74>
    9880:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9884:	str	r0, [fp, #-20]	; 0xffffffec
    9888:	ldr	r0, [fp, #-20]	; 0xffffffec
    988c:	sub	sp, fp, #16
    9890:	pop	{r4, r5, r6, sl, fp, pc}

00009894 <flatbuffers_int64_write_to_pe>:
    9894:	push	{fp, lr}
    9898:	mov	fp, sp
    989c:	sub	sp, sp, #16
    98a0:	str	r0, [fp, #-4]
    98a4:	str	r3, [sp, #4]
    98a8:	str	r2, [sp]
    98ac:	ldr	r0, [sp]
    98b0:	ldr	r1, [sp, #4]
    98b4:	bl	102fc <flatbuffers_int64_cast_to_pe>
    98b8:	ldr	r2, [fp, #-4]
    98bc:	str	r1, [r2, #4]
    98c0:	str	r0, [r2]
    98c4:	mov	sp, fp
    98c8:	pop	{fp, pc}

000098cc <flatcc_json_parser_uint32>:
    98cc:	push	{r4, r5, fp, lr}
    98d0:	add	fp, sp, #8
    98d4:	sub	sp, sp, #56	; 0x38
    98d8:	str	r0, [fp, #-16]
    98dc:	str	r1, [fp, #-20]	; 0xffffffec
    98e0:	str	r2, [fp, #-24]	; 0xffffffe8
    98e4:	str	r3, [fp, #-28]	; 0xffffffe4
    98e8:	mov	r0, #0
    98ec:	str	r0, [sp, #28]
    98f0:	str	r0, [sp, #24]
    98f4:	movw	r0, #0
    98f8:	str	r0, [sp, #20]
    98fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    9900:	str	r1, [sp, #16]
    9904:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9908:	str	r0, [r1]
    990c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9910:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9914:	cmp	r0, r1
    9918:	bne	9928 <flatcc_json_parser_uint32+0x5c>
    991c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9920:	str	r0, [fp, #-12]
    9924:	b	9998 <flatcc_json_parser_uint32+0xcc>
    9928:	ldr	r0, [fp, #-16]
    992c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9930:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9934:	add	r3, sp, #20
    9938:	add	ip, sp, #24
    993c:	str	ip, [sp]
    9940:	bl	0 <flatcc_json_parser_integer>
    9944:	str	r0, [fp, #-20]	; 0xffffffec
    9948:	ldr	r0, [fp, #-20]	; 0xffffffec
    994c:	ldr	r1, [sp, #16]
    9950:	cmp	r0, r1
    9954:	beq	9990 <flatcc_json_parser_uint32+0xc4>
    9958:	ldr	r0, [fp, #-16]
    995c:	ldr	r1, [fp, #-20]	; 0xffffffec
    9960:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9964:	ldr	r3, [sp, #20]
    9968:	ldr	ip, [sp, #24]
    996c:	ldr	lr, [sp, #28]
    9970:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9974:	mov	r5, sp
    9978:	str	r4, [r5, #8]
    997c:	str	lr, [r5, #4]
    9980:	str	ip, [r5]
    9984:	bl	10318 <flatcc_json_parser_coerce_uint32>
    9988:	str	r0, [fp, #-12]
    998c:	b	9998 <flatcc_json_parser_uint32+0xcc>
    9990:	ldr	r0, [fp, #-20]	; 0xffffffec
    9994:	str	r0, [fp, #-12]
    9998:	ldr	r0, [fp, #-12]
    999c:	sub	sp, fp, #8
    99a0:	pop	{r4, r5, fp, pc}

000099a4 <flatcc_json_parser_symbolic_uint32>:
    99a4:	push	{r4, r5, r6, sl, fp, lr}
    99a8:	add	fp, sp, #16
    99ac:	sub	sp, sp, #88	; 0x58
    99b0:	ldr	ip, [fp, #8]
    99b4:	str	r0, [fp, #-24]	; 0xffffffe8
    99b8:	str	r1, [fp, #-28]	; 0xffffffe4
    99bc:	str	r2, [fp, #-32]	; 0xffffffe0
    99c0:	str	r3, [fp, #-36]	; 0xffffffdc
    99c4:	movw	r0, #0
    99c8:	str	r0, [fp, #-48]	; 0xffffffd0
    99cc:	str	r0, [sp, #36]	; 0x24
    99d0:	ldr	r1, [fp, #8]
    99d4:	str	r0, [r1]
    99d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    99dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    99e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    99e4:	str	ip, [sp, #32]
    99e8:	bl	b934 <flatcc_json_parser_constant_start>
    99ec:	str	r0, [fp, #-28]	; 0xffffffe4
    99f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    99f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    99f8:	cmp	r0, r1
    99fc:	bne	9a0c <flatcc_json_parser_symbolic_uint32+0x68>
    9a00:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9a04:	str	r0, [fp, #-20]	; 0xffffffec
    9a08:	b	9bc0 <flatcc_json_parser_symbolic_uint32+0x21c>
    9a0c:	b	9a10 <flatcc_json_parser_symbolic_uint32+0x6c>
    9a10:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9a14:	str	r0, [fp, #-40]	; 0xffffffd8
    9a18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9a1c:	ldr	r0, [r0]
    9a20:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9a24:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9a28:	str	r2, [fp, #-44]	; 0xffffffd4
    9a2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9a30:	str	r0, [sp, #28]
    9a34:	mov	r0, r1
    9a38:	mov	r1, r2
    9a3c:	mov	r2, r3
    9a40:	add	r3, sp, #44	; 0x2c
    9a44:	add	ip, sp, #48	; 0x30
    9a48:	str	ip, [sp]
    9a4c:	add	ip, sp, #40	; 0x28
    9a50:	str	ip, [sp, #4]
    9a54:	ldr	ip, [sp, #28]
    9a58:	blx	ip
    9a5c:	str	r0, [fp, #-28]	; 0xffffffe4
    9a60:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9a68:	cmp	r0, r1
    9a6c:	bne	9a7c <flatcc_json_parser_symbolic_uint32+0xd8>
    9a70:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9a74:	str	r0, [fp, #-20]	; 0xffffffec
    9a78:	b	9bc0 <flatcc_json_parser_symbolic_uint32+0x21c>
    9a7c:	b	9a80 <flatcc_json_parser_symbolic_uint32+0xdc>
    9a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9a84:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9a88:	cmp	r0, r1
    9a8c:	movw	r0, #0
    9a90:	str	r0, [sp, #24]
    9a94:	bne	9abc <flatcc_json_parser_symbolic_uint32+0x118>
    9a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9a9c:	add	r1, r0, #4
    9aa0:	str	r1, [fp, #-40]	; 0xffffffd8
    9aa4:	ldr	r0, [r0, #4]
    9aa8:	movw	r1, #0
    9aac:	cmp	r0, r1
    9ab0:	movw	r0, #0
    9ab4:	movne	r0, #1
    9ab8:	str	r0, [sp, #24]
    9abc:	ldr	r0, [sp, #24]
    9ac0:	tst	r0, #1
    9ac4:	bne	9a18 <flatcc_json_parser_symbolic_uint32+0x74>
    9ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9ad0:	cmp	r0, r1
    9ad4:	bne	9af4 <flatcc_json_parser_symbolic_uint32+0x150>
    9ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9adc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9ae0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ae4:	movw	r3, #23
    9ae8:	bl	0 <flatcc_json_parser_set_error>
    9aec:	str	r0, [fp, #-20]	; 0xffffffec
    9af0:	b	9bc0 <flatcc_json_parser_symbolic_uint32+0x21c>
    9af4:	ldr	r0, [sp, #36]	; 0x24
    9af8:	add	r1, r0, #1
    9afc:	str	r1, [sp, #36]	; 0x24
    9b00:	cmp	r0, #0
    9b04:	beq	9b34 <flatcc_json_parser_symbolic_uint32+0x190>
    9b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9b0c:	ldr	r0, [r0, #12]
    9b10:	cmp	r0, #0
    9b14:	beq	9b34 <flatcc_json_parser_symbolic_uint32+0x190>
    9b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9b20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9b24:	movw	r3, #14
    9b28:	bl	0 <flatcc_json_parser_set_error>
    9b2c:	str	r0, [fp, #-20]	; 0xffffffec
    9b30:	b	9bc0 <flatcc_json_parser_symbolic_uint32+0x21c>
    9b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9b38:	mov	r1, r0
    9b3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9b44:	ldr	ip, [sp, #44]	; 0x2c
    9b48:	ldr	lr, [sp, #48]	; 0x30
    9b4c:	ldr	r4, [sp, #52]	; 0x34
    9b50:	mov	r5, sp
    9b54:	sub	r6, fp, #48	; 0x30
    9b58:	str	r6, [r5, #8]
    9b5c:	str	r4, [r5, #4]
    9b60:	str	lr, [r5]
    9b64:	str	r0, [sp, #20]
    9b68:	mov	r0, r2
    9b6c:	str	r1, [sp, #16]
    9b70:	mov	r1, r3
    9b74:	ldr	r2, [sp, #20]
    9b78:	mov	r3, ip
    9b7c:	bl	10318 <flatcc_json_parser_coerce_uint32>
    9b80:	ldr	r1, [sp, #16]
    9b84:	cmp	r1, r0
    9b88:	bne	9b98 <flatcc_json_parser_symbolic_uint32+0x1f4>
    9b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9b90:	str	r0, [fp, #-20]	; 0xffffffec
    9b94:	b	9bc0 <flatcc_json_parser_symbolic_uint32+0x21c>
    9b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9b9c:	ldr	r1, [fp, #8]
    9ba0:	ldr	r2, [r1]
    9ba4:	add	r0, r2, r0
    9ba8:	str	r0, [r1]
    9bac:	ldr	r0, [sp, #40]	; 0x28
    9bb0:	cmp	r0, #0
    9bb4:	bne	9a10 <flatcc_json_parser_symbolic_uint32+0x6c>
    9bb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9bbc:	str	r0, [fp, #-20]	; 0xffffffec
    9bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
    9bc4:	sub	sp, fp, #16
    9bc8:	pop	{r4, r5, r6, sl, fp, pc}

00009bcc <flatbuffers_uint32_write_to_pe>:
    9bcc:	push	{fp, lr}
    9bd0:	mov	fp, sp
    9bd4:	sub	sp, sp, #8
    9bd8:	str	r0, [sp, #4]
    9bdc:	str	r1, [sp]
    9be0:	ldr	r0, [sp]
    9be4:	bl	103c0 <flatbuffers_uint32_cast_to_pe>
    9be8:	ldr	r1, [sp, #4]
    9bec:	str	r0, [r1]
    9bf0:	mov	sp, fp
    9bf4:	pop	{fp, pc}

00009bf8 <flatcc_json_parser_uint64>:
    9bf8:	push	{r4, r5, fp, lr}
    9bfc:	add	fp, sp, #8
    9c00:	sub	sp, sp, #56	; 0x38
    9c04:	str	r0, [fp, #-16]
    9c08:	str	r1, [fp, #-20]	; 0xffffffec
    9c0c:	str	r2, [fp, #-24]	; 0xffffffe8
    9c10:	str	r3, [fp, #-28]	; 0xffffffe4
    9c14:	mov	r0, #0
    9c18:	str	r0, [sp, #28]
    9c1c:	str	r0, [sp, #24]
    9c20:	str	r0, [sp, #20]
    9c24:	ldr	r1, [fp, #-20]	; 0xffffffec
    9c28:	str	r1, [sp, #16]
    9c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9c30:	str	r0, [r1, #4]
    9c34:	str	r0, [r1]
    9c38:	ldr	r0, [fp, #-20]	; 0xffffffec
    9c3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9c40:	cmp	r0, r1
    9c44:	bne	9c54 <flatcc_json_parser_uint64+0x5c>
    9c48:	ldr	r0, [fp, #-20]	; 0xffffffec
    9c4c:	str	r0, [fp, #-12]
    9c50:	b	9cc4 <flatcc_json_parser_uint64+0xcc>
    9c54:	ldr	r0, [fp, #-16]
    9c58:	ldr	r1, [fp, #-20]	; 0xffffffec
    9c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9c60:	add	r3, sp, #20
    9c64:	add	ip, sp, #24
    9c68:	str	ip, [sp]
    9c6c:	bl	0 <flatcc_json_parser_integer>
    9c70:	str	r0, [fp, #-20]	; 0xffffffec
    9c74:	ldr	r0, [fp, #-20]	; 0xffffffec
    9c78:	ldr	r1, [sp, #16]
    9c7c:	cmp	r0, r1
    9c80:	beq	9cbc <flatcc_json_parser_uint64+0xc4>
    9c84:	ldr	r0, [fp, #-16]
    9c88:	ldr	r1, [fp, #-20]	; 0xffffffec
    9c8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9c90:	ldr	r3, [sp, #20]
    9c94:	ldr	ip, [sp, #24]
    9c98:	ldr	lr, [sp, #28]
    9c9c:	ldr	r4, [fp, #-28]	; 0xffffffe4
    9ca0:	mov	r5, sp
    9ca4:	str	r4, [r5, #8]
    9ca8:	str	lr, [r5, #4]
    9cac:	str	ip, [r5]
    9cb0:	bl	103d4 <flatcc_json_parser_coerce_uint64>
    9cb4:	str	r0, [fp, #-12]
    9cb8:	b	9cc4 <flatcc_json_parser_uint64+0xcc>
    9cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
    9cc0:	str	r0, [fp, #-12]
    9cc4:	ldr	r0, [fp, #-12]
    9cc8:	sub	sp, fp, #8
    9ccc:	pop	{r4, r5, fp, pc}

00009cd0 <flatcc_json_parser_symbolic_uint64>:
    9cd0:	push	{r4, r5, r6, sl, fp, lr}
    9cd4:	add	fp, sp, #16
    9cd8:	sub	sp, sp, #96	; 0x60
    9cdc:	ldr	ip, [fp, #8]
    9ce0:	str	r0, [fp, #-24]	; 0xffffffe8
    9ce4:	str	r1, [fp, #-28]	; 0xffffffe4
    9ce8:	str	r2, [fp, #-32]	; 0xffffffe0
    9cec:	str	r3, [fp, #-36]	; 0xffffffdc
    9cf0:	mov	r0, #0
    9cf4:	str	r0, [sp, #60]	; 0x3c
    9cf8:	str	r0, [sp, #56]	; 0x38
    9cfc:	str	r0, [sp, #36]	; 0x24
    9d00:	ldr	r1, [fp, #8]
    9d04:	str	r0, [r1, #4]
    9d08:	str	r0, [r1]
    9d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9d10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9d14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9d18:	str	ip, [sp, #32]
    9d1c:	bl	b934 <flatcc_json_parser_constant_start>
    9d20:	str	r0, [fp, #-28]	; 0xffffffe4
    9d24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9d28:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9d2c:	cmp	r0, r1
    9d30:	bne	9d40 <flatcc_json_parser_symbolic_uint64+0x70>
    9d34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9d38:	str	r0, [fp, #-20]	; 0xffffffec
    9d3c:	b	9f04 <flatcc_json_parser_symbolic_uint64+0x234>
    9d40:	b	9d44 <flatcc_json_parser_symbolic_uint64+0x74>
    9d44:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9d48:	str	r0, [fp, #-40]	; 0xffffffd8
    9d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9d50:	ldr	r0, [r0]
    9d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9d58:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9d5c:	str	r2, [fp, #-44]	; 0xffffffd4
    9d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d64:	str	r0, [sp, #28]
    9d68:	mov	r0, r1
    9d6c:	mov	r1, r2
    9d70:	mov	r2, r3
    9d74:	add	r3, sp, #44	; 0x2c
    9d78:	add	ip, sp, #48	; 0x30
    9d7c:	str	ip, [sp]
    9d80:	add	ip, sp, #40	; 0x28
    9d84:	str	ip, [sp, #4]
    9d88:	ldr	ip, [sp, #28]
    9d8c:	blx	ip
    9d90:	str	r0, [fp, #-28]	; 0xffffffe4
    9d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9d98:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9d9c:	cmp	r0, r1
    9da0:	bne	9db0 <flatcc_json_parser_symbolic_uint64+0xe0>
    9da4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9da8:	str	r0, [fp, #-20]	; 0xffffffec
    9dac:	b	9f04 <flatcc_json_parser_symbolic_uint64+0x234>
    9db0:	b	9db4 <flatcc_json_parser_symbolic_uint64+0xe4>
    9db4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9db8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9dbc:	cmp	r0, r1
    9dc0:	movw	r0, #0
    9dc4:	str	r0, [sp, #24]
    9dc8:	bne	9df0 <flatcc_json_parser_symbolic_uint64+0x120>
    9dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9dd0:	add	r1, r0, #4
    9dd4:	str	r1, [fp, #-40]	; 0xffffffd8
    9dd8:	ldr	r0, [r0, #4]
    9ddc:	movw	r1, #0
    9de0:	cmp	r0, r1
    9de4:	movw	r0, #0
    9de8:	movne	r0, #1
    9dec:	str	r0, [sp, #24]
    9df0:	ldr	r0, [sp, #24]
    9df4:	tst	r0, #1
    9df8:	bne	9d4c <flatcc_json_parser_symbolic_uint64+0x7c>
    9dfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9e04:	cmp	r0, r1
    9e08:	bne	9e28 <flatcc_json_parser_symbolic_uint64+0x158>
    9e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9e10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9e14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e18:	movw	r3, #23
    9e1c:	bl	0 <flatcc_json_parser_set_error>
    9e20:	str	r0, [fp, #-20]	; 0xffffffec
    9e24:	b	9f04 <flatcc_json_parser_symbolic_uint64+0x234>
    9e28:	ldr	r0, [sp, #36]	; 0x24
    9e2c:	add	r1, r0, #1
    9e30:	str	r1, [sp, #36]	; 0x24
    9e34:	cmp	r0, #0
    9e38:	beq	9e68 <flatcc_json_parser_symbolic_uint64+0x198>
    9e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9e40:	ldr	r0, [r0, #12]
    9e44:	cmp	r0, #0
    9e48:	beq	9e68 <flatcc_json_parser_symbolic_uint64+0x198>
    9e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9e54:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e58:	movw	r3, #14
    9e5c:	bl	0 <flatcc_json_parser_set_error>
    9e60:	str	r0, [fp, #-20]	; 0xffffffec
    9e64:	b	9f04 <flatcc_json_parser_symbolic_uint64+0x234>
    9e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e6c:	mov	r1, r0
    9e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9e78:	ldr	ip, [sp, #44]	; 0x2c
    9e7c:	ldr	lr, [sp, #48]	; 0x30
    9e80:	ldr	r4, [sp, #52]	; 0x34
    9e84:	mov	r5, sp
    9e88:	add	r6, sp, #56	; 0x38
    9e8c:	str	r6, [r5, #8]
    9e90:	str	r4, [r5, #4]
    9e94:	str	lr, [r5]
    9e98:	str	r0, [sp, #20]
    9e9c:	mov	r0, r2
    9ea0:	str	r1, [sp, #16]
    9ea4:	mov	r1, r3
    9ea8:	ldr	r2, [sp, #20]
    9eac:	mov	r3, ip
    9eb0:	bl	103d4 <flatcc_json_parser_coerce_uint64>
    9eb4:	ldr	r1, [sp, #16]
    9eb8:	cmp	r1, r0
    9ebc:	bne	9ecc <flatcc_json_parser_symbolic_uint64+0x1fc>
    9ec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9ec4:	str	r0, [fp, #-20]	; 0xffffffec
    9ec8:	b	9f04 <flatcc_json_parser_symbolic_uint64+0x234>
    9ecc:	ldr	r0, [sp, #56]	; 0x38
    9ed0:	ldr	r1, [sp, #60]	; 0x3c
    9ed4:	ldr	r2, [fp, #8]
    9ed8:	ldr	r3, [r2]
    9edc:	ldr	ip, [r2, #4]
    9ee0:	adds	r0, r3, r0
    9ee4:	adc	r1, ip, r1
    9ee8:	str	r0, [r2]
    9eec:	str	r1, [r2, #4]
    9ef0:	ldr	r0, [sp, #40]	; 0x28
    9ef4:	cmp	r0, #0
    9ef8:	bne	9d44 <flatcc_json_parser_symbolic_uint64+0x74>
    9efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9f00:	str	r0, [fp, #-20]	; 0xffffffec
    9f04:	ldr	r0, [fp, #-20]	; 0xffffffec
    9f08:	sub	sp, fp, #16
    9f0c:	pop	{r4, r5, r6, sl, fp, pc}

00009f10 <flatbuffers_uint64_write_to_pe>:
    9f10:	push	{fp, lr}
    9f14:	mov	fp, sp
    9f18:	sub	sp, sp, #16
    9f1c:	str	r0, [fp, #-4]
    9f20:	str	r3, [sp, #4]
    9f24:	str	r2, [sp]
    9f28:	ldr	r0, [sp]
    9f2c:	ldr	r1, [sp, #4]
    9f30:	bl	10458 <flatbuffers_uint64_cast_to_pe>
    9f34:	ldr	r2, [fp, #-4]
    9f38:	str	r1, [r2, #4]
    9f3c:	str	r0, [r2]
    9f40:	mov	sp, fp
    9f44:	pop	{fp, pc}

00009f48 <flatcc_json_parser_symbolic_double>:
    9f48:	push	{r4, r5, r6, sl, fp, lr}
    9f4c:	add	fp, sp, #16
    9f50:	sub	sp, sp, #96	; 0x60
    9f54:	ldr	ip, [fp, #8]
    9f58:	vldr	d16, [pc, #536]	; a178 <flatcc_json_parser_symbolic_double+0x230>
    9f5c:	str	r0, [fp, #-24]	; 0xffffffe8
    9f60:	str	r1, [fp, #-28]	; 0xffffffe4
    9f64:	str	r2, [fp, #-32]	; 0xffffffe0
    9f68:	str	r3, [fp, #-36]	; 0xffffffdc
    9f6c:	vstr	d16, [sp, #56]	; 0x38
    9f70:	movw	r0, #0
    9f74:	str	r0, [sp, #36]	; 0x24
    9f78:	ldr	r0, [fp, #8]
    9f7c:	vstr	d16, [r0]
    9f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9f88:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9f8c:	str	ip, [sp, #32]
    9f90:	bl	b934 <flatcc_json_parser_constant_start>
    9f94:	str	r0, [fp, #-28]	; 0xffffffe4
    9f98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9f9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9fa0:	cmp	r0, r1
    9fa4:	bne	9fb4 <flatcc_json_parser_symbolic_double+0x6c>
    9fa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9fac:	str	r0, [fp, #-20]	; 0xffffffec
    9fb0:	b	a168 <flatcc_json_parser_symbolic_double+0x220>
    9fb4:	b	9fb8 <flatcc_json_parser_symbolic_double+0x70>
    9fb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9fbc:	str	r0, [fp, #-40]	; 0xffffffd8
    9fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9fc4:	ldr	r0, [r0]
    9fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9fcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9fd0:	str	r2, [fp, #-44]	; 0xffffffd4
    9fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9fd8:	str	r0, [sp, #28]
    9fdc:	mov	r0, r1
    9fe0:	mov	r1, r2
    9fe4:	mov	r2, r3
    9fe8:	add	r3, sp, #44	; 0x2c
    9fec:	add	ip, sp, #48	; 0x30
    9ff0:	str	ip, [sp]
    9ff4:	add	ip, sp, #40	; 0x28
    9ff8:	str	ip, [sp, #4]
    9ffc:	ldr	ip, [sp, #28]
    a000:	blx	ip
    a004:	str	r0, [fp, #-28]	; 0xffffffe4
    a008:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a00c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a010:	cmp	r0, r1
    a014:	bne	a024 <flatcc_json_parser_symbolic_double+0xdc>
    a018:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a01c:	str	r0, [fp, #-20]	; 0xffffffec
    a020:	b	a168 <flatcc_json_parser_symbolic_double+0x220>
    a024:	b	a028 <flatcc_json_parser_symbolic_double+0xe0>
    a028:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a02c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a030:	cmp	r0, r1
    a034:	movw	r0, #0
    a038:	str	r0, [sp, #24]
    a03c:	bne	a064 <flatcc_json_parser_symbolic_double+0x11c>
    a040:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a044:	add	r1, r0, #4
    a048:	str	r1, [fp, #-40]	; 0xffffffd8
    a04c:	ldr	r0, [r0, #4]
    a050:	movw	r1, #0
    a054:	cmp	r0, r1
    a058:	movw	r0, #0
    a05c:	movne	r0, #1
    a060:	str	r0, [sp, #24]
    a064:	ldr	r0, [sp, #24]
    a068:	tst	r0, #1
    a06c:	bne	9fc0 <flatcc_json_parser_symbolic_double+0x78>
    a070:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a074:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a078:	cmp	r0, r1
    a07c:	bne	a09c <flatcc_json_parser_symbolic_double+0x154>
    a080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a084:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a088:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a08c:	movw	r3, #23
    a090:	bl	0 <flatcc_json_parser_set_error>
    a094:	str	r0, [fp, #-20]	; 0xffffffec
    a098:	b	a168 <flatcc_json_parser_symbolic_double+0x220>
    a09c:	ldr	r0, [sp, #36]	; 0x24
    a0a0:	add	r1, r0, #1
    a0a4:	str	r1, [sp, #36]	; 0x24
    a0a8:	cmp	r0, #0
    a0ac:	beq	a0dc <flatcc_json_parser_symbolic_double+0x194>
    a0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a0b4:	ldr	r0, [r0, #12]
    a0b8:	cmp	r0, #0
    a0bc:	beq	a0dc <flatcc_json_parser_symbolic_double+0x194>
    a0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a0c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a0c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a0cc:	movw	r3, #14
    a0d0:	bl	0 <flatcc_json_parser_set_error>
    a0d4:	str	r0, [fp, #-20]	; 0xffffffec
    a0d8:	b	a168 <flatcc_json_parser_symbolic_double+0x220>
    a0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a0e0:	mov	r1, r0
    a0e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a0e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a0ec:	ldr	ip, [sp, #44]	; 0x2c
    a0f0:	ldr	lr, [sp, #48]	; 0x30
    a0f4:	ldr	r4, [sp, #52]	; 0x34
    a0f8:	mov	r5, sp
    a0fc:	add	r6, sp, #56	; 0x38
    a100:	str	r6, [r5, #8]
    a104:	str	r4, [r5, #4]
    a108:	str	lr, [r5]
    a10c:	str	r0, [sp, #20]
    a110:	mov	r0, r2
    a114:	str	r1, [sp, #16]
    a118:	mov	r1, r3
    a11c:	ldr	r2, [sp, #20]
    a120:	mov	r3, ip
    a124:	bl	10474 <flatcc_json_parser_coerce_double>
    a128:	ldr	r1, [sp, #16]
    a12c:	cmp	r1, r0
    a130:	bne	a140 <flatcc_json_parser_symbolic_double+0x1f8>
    a134:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a138:	str	r0, [fp, #-20]	; 0xffffffec
    a13c:	b	a168 <flatcc_json_parser_symbolic_double+0x220>
    a140:	vldr	d16, [sp, #56]	; 0x38
    a144:	ldr	r0, [fp, #8]
    a148:	vldr	d17, [r0]
    a14c:	vadd.f64	d16, d17, d16
    a150:	vstr	d16, [r0]
    a154:	ldr	r0, [sp, #40]	; 0x28
    a158:	cmp	r0, #0
    a15c:	bne	9fb8 <flatcc_json_parser_symbolic_double+0x70>
    a160:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a164:	str	r0, [fp, #-20]	; 0xffffffec
    a168:	ldr	r0, [fp, #-20]	; 0xffffffec
    a16c:	sub	sp, fp, #16
    a170:	pop	{r4, r5, r6, sl, fp, pc}
    a174:	nop	{0}
	...

0000a180 <flatbuffers_double_write_to_pe>:
    a180:	push	{fp, lr}
    a184:	mov	fp, sp
    a188:	sub	sp, sp, #16
    a18c:	str	r0, [fp, #-4]
    a190:	vstr	d0, [sp]
    a194:	vldr	d0, [sp]
    a198:	bl	104fc <flatbuffers_double_cast_to_pe>
    a19c:	ldr	r0, [fp, #-4]
    a1a0:	vstr	d0, [r0]
    a1a4:	mov	sp, fp
    a1a8:	pop	{fp, pc}

0000a1ac <flatcc_json_parser_object_end>:
    a1ac:	push	{fp, lr}
    a1b0:	mov	fp, sp
    a1b4:	sub	sp, sp, #24
    a1b8:	str	r0, [fp, #-8]
    a1bc:	str	r1, [sp, #12]
    a1c0:	str	r2, [sp, #8]
    a1c4:	str	r3, [sp, #4]
    a1c8:	ldr	r0, [fp, #-8]
    a1cc:	ldr	r1, [sp, #12]
    a1d0:	ldr	r2, [sp, #8]
    a1d4:	bl	a310 <flatcc_json_parser_space>
    a1d8:	str	r0, [sp, #12]
    a1dc:	ldr	r0, [sp, #12]
    a1e0:	ldr	r1, [sp, #8]
    a1e4:	cmp	r0, r1
    a1e8:	bne	a204 <flatcc_json_parser_object_end+0x58>
    a1ec:	ldr	r0, [sp, #4]
    a1f0:	movw	r1, #0
    a1f4:	str	r1, [r0]
    a1f8:	ldr	r0, [sp, #12]
    a1fc:	str	r0, [fp, #-4]
    a200:	b	a304 <flatcc_json_parser_object_end+0x158>
    a204:	ldr	r0, [sp, #12]
    a208:	ldrb	r0, [r0]
    a20c:	cmp	r0, #44	; 0x2c
    a210:	beq	a268 <flatcc_json_parser_object_end+0xbc>
    a214:	ldr	r0, [sp, #4]
    a218:	movw	r1, #0
    a21c:	str	r1, [r0]
    a220:	ldr	r0, [sp, #12]
    a224:	ldrb	r0, [r0]
    a228:	cmp	r0, #125	; 0x7d
    a22c:	beq	a24c <flatcc_json_parser_object_end+0xa0>
    a230:	ldr	r0, [fp, #-8]
    a234:	ldr	r1, [sp, #12]
    a238:	ldr	r2, [sp, #8]
    a23c:	movw	r3, #10
    a240:	bl	0 <flatcc_json_parser_set_error>
    a244:	str	r0, [fp, #-4]
    a248:	b	a304 <flatcc_json_parser_object_end+0x158>
    a24c:	ldr	r0, [fp, #-8]
    a250:	ldr	r1, [sp, #12]
    a254:	add	r1, r1, #1
    a258:	ldr	r2, [sp, #8]
    a25c:	bl	a310 <flatcc_json_parser_space>
    a260:	str	r0, [fp, #-4]
    a264:	b	a304 <flatcc_json_parser_object_end+0x158>
    a268:	ldr	r0, [fp, #-8]
    a26c:	ldr	r1, [sp, #12]
    a270:	add	r1, r1, #1
    a274:	ldr	r2, [sp, #8]
    a278:	bl	a310 <flatcc_json_parser_space>
    a27c:	str	r0, [sp, #12]
    a280:	ldr	r0, [sp, #12]
    a284:	ldr	r1, [sp, #8]
    a288:	cmp	r0, r1
    a28c:	bne	a2b8 <flatcc_json_parser_object_end+0x10c>
    a290:	ldr	r0, [sp, #4]
    a294:	movw	r1, #0
    a298:	str	r1, [r0]
    a29c:	ldr	r0, [fp, #-8]
    a2a0:	ldr	r1, [sp, #12]
    a2a4:	ldr	r2, [sp, #8]
    a2a8:	movw	r3, #10
    a2ac:	bl	0 <flatcc_json_parser_set_error>
    a2b0:	str	r0, [fp, #-4]
    a2b4:	b	a304 <flatcc_json_parser_object_end+0x158>
    a2b8:	ldr	r0, [sp, #12]
    a2bc:	ldrb	r0, [r0]
    a2c0:	cmp	r0, #125	; 0x7d
    a2c4:	bne	a2f0 <flatcc_json_parser_object_end+0x144>
    a2c8:	ldr	r0, [sp, #4]
    a2cc:	movw	r1, #0
    a2d0:	str	r1, [r0]
    a2d4:	ldr	r0, [fp, #-8]
    a2d8:	ldr	r1, [sp, #12]
    a2dc:	add	r1, r1, #1
    a2e0:	ldr	r2, [sp, #8]
    a2e4:	bl	a310 <flatcc_json_parser_space>
    a2e8:	str	r0, [fp, #-4]
    a2ec:	b	a304 <flatcc_json_parser_object_end+0x158>
    a2f0:	ldr	r0, [sp, #4]
    a2f4:	movw	r1, #1
    a2f8:	str	r1, [r0]
    a2fc:	ldr	r0, [sp, #12]
    a300:	str	r0, [fp, #-4]
    a304:	ldr	r0, [fp, #-4]
    a308:	mov	sp, fp
    a30c:	pop	{fp, pc}

0000a310 <flatcc_json_parser_space>:
    a310:	push	{fp, lr}
    a314:	mov	fp, sp
    a318:	sub	sp, sp, #16
    a31c:	str	r0, [sp, #8]
    a320:	str	r1, [sp, #4]
    a324:	str	r2, [sp]
    a328:	ldr	r0, [sp]
    a32c:	ldr	r1, [sp, #4]
    a330:	sub	r0, r0, r1
    a334:	cmp	r0, #1
    a338:	ble	a38c <flatcc_json_parser_space+0x7c>
    a33c:	ldr	r0, [sp, #4]
    a340:	ldrb	r0, [r0]
    a344:	cmp	r0, #32
    a348:	ble	a358 <flatcc_json_parser_space+0x48>
    a34c:	ldr	r0, [sp, #4]
    a350:	str	r0, [fp, #-4]
    a354:	b	a3a0 <flatcc_json_parser_space+0x90>
    a358:	ldr	r0, [sp, #4]
    a35c:	ldrb	r0, [r0]
    a360:	cmp	r0, #32
    a364:	bne	a388 <flatcc_json_parser_space+0x78>
    a368:	ldr	r0, [sp, #4]
    a36c:	ldrb	r0, [r0, #1]
    a370:	cmp	r0, #32
    a374:	ble	a388 <flatcc_json_parser_space+0x78>
    a378:	ldr	r0, [sp, #4]
    a37c:	add	r0, r0, #1
    a380:	str	r0, [fp, #-4]
    a384:	b	a3a0 <flatcc_json_parser_space+0x90>
    a388:	b	a38c <flatcc_json_parser_space+0x7c>
    a38c:	ldr	r0, [sp, #8]
    a390:	ldr	r1, [sp, #4]
    a394:	ldr	r2, [sp]
    a398:	bl	0 <flatcc_json_parser_space_ext>
    a39c:	str	r0, [fp, #-4]
    a3a0:	ldr	r0, [fp, #-4]
    a3a4:	mov	sp, fp
    a3a8:	pop	{fp, pc}

0000a3ac <flatcc_json_parser_symbol_part_ext>:
    a3ac:	sub	sp, sp, #24
    a3b0:	str	r0, [sp, #20]
    a3b4:	str	r1, [sp, #16]
    a3b8:	mov	r0, #0
    a3bc:	str	r0, [sp, #12]
    a3c0:	str	r0, [sp, #8]
    a3c4:	ldr	r0, [sp, #16]
    a3c8:	ldr	r1, [sp, #20]
    a3cc:	sub	r0, r0, r1
    a3d0:	str	r0, [sp, #4]
    a3d4:	ldr	r0, [sp, #4]
    a3d8:	cmp	r0, #8
    a3dc:	bls	a3e8 <flatcc_json_parser_symbol_part_ext+0x3c>
    a3e0:	movw	r0, #8
    a3e4:	str	r0, [sp, #4]
    a3e8:	ldr	r0, [sp, #4]
    a3ec:	cmp	r0, #8
    a3f0:	str	r0, [sp]
    a3f4:	bhi	a510 <flatcc_json_parser_symbol_part_ext+0x164>
    a3f8:	add	r0, pc, #8
    a3fc:	ldr	r1, [sp]
    a400:	ldr	r0, [r0, r1, lsl #2]
    a404:	mov	pc, r0
    a408:	.word	0x0000a50c
    a40c:	.word	0x0000a4f0
    a410:	.word	0x0000a4d4
    a414:	.word	0x0000a4b8
    a418:	.word	0x0000a49c
    a41c:	.word	0x0000a480
    a420:	.word	0x0000a464
    a424:	.word	0x0000a448
    a428:	.word	0x0000a42c
    a42c:	ldr	r0, [sp, #20]
    a430:	ldrb	r0, [r0, #7]
    a434:	ldr	r1, [sp, #8]
    a438:	ldr	r2, [sp, #12]
    a43c:	orr	r0, r1, r0
    a440:	str	r2, [sp, #12]
    a444:	str	r0, [sp, #8]
    a448:	ldr	r0, [sp, #20]
    a44c:	ldrb	r0, [r0, #6]
    a450:	ldr	r1, [sp, #8]
    a454:	ldr	r2, [sp, #12]
    a458:	orr	r0, r1, r0, lsl #8
    a45c:	str	r2, [sp, #12]
    a460:	str	r0, [sp, #8]
    a464:	ldr	r0, [sp, #20]
    a468:	ldrb	r0, [r0, #5]
    a46c:	ldr	r1, [sp, #8]
    a470:	ldr	r2, [sp, #12]
    a474:	orr	r0, r1, r0, lsl #16
    a478:	str	r2, [sp, #12]
    a47c:	str	r0, [sp, #8]
    a480:	ldr	r0, [sp, #20]
    a484:	ldrb	r0, [r0, #4]
    a488:	ldr	r1, [sp, #8]
    a48c:	ldr	r2, [sp, #12]
    a490:	orr	r0, r1, r0, lsl #24
    a494:	str	r2, [sp, #12]
    a498:	str	r0, [sp, #8]
    a49c:	ldr	r0, [sp, #20]
    a4a0:	ldrb	r0, [r0, #3]
    a4a4:	ldr	r1, [sp, #8]
    a4a8:	ldr	r2, [sp, #12]
    a4ac:	orr	r0, r2, r0
    a4b0:	str	r1, [sp, #8]
    a4b4:	str	r0, [sp, #12]
    a4b8:	ldr	r0, [sp, #20]
    a4bc:	ldrb	r0, [r0, #2]
    a4c0:	ldr	r1, [sp, #8]
    a4c4:	ldr	r2, [sp, #12]
    a4c8:	orr	r0, r2, r0, lsl #8
    a4cc:	str	r1, [sp, #8]
    a4d0:	str	r0, [sp, #12]
    a4d4:	ldr	r0, [sp, #20]
    a4d8:	ldrb	r0, [r0, #1]
    a4dc:	ldr	r1, [sp, #8]
    a4e0:	ldr	r2, [sp, #12]
    a4e4:	orr	r0, r2, r0, lsl #16
    a4e8:	str	r1, [sp, #8]
    a4ec:	str	r0, [sp, #12]
    a4f0:	ldr	r0, [sp, #20]
    a4f4:	ldrb	r0, [r0]
    a4f8:	ldr	r1, [sp, #8]
    a4fc:	ldr	r2, [sp, #12]
    a500:	orr	r0, r2, r0, lsl #24
    a504:	str	r1, [sp, #8]
    a508:	str	r0, [sp, #12]
    a50c:	b	a510 <flatcc_json_parser_symbol_part_ext+0x164>
    a510:	ldr	r0, [sp, #8]
    a514:	ldr	r1, [sp, #12]
    a518:	add	sp, sp, #24
    a51c:	bx	lr

0000a520 <flatcc_json_parser_match_scope>:
    a520:	sub	sp, sp, #24
    a524:	str	r0, [sp, #16]
    a528:	str	r1, [sp, #12]
    a52c:	str	r2, [sp, #8]
    a530:	str	r3, [sp, #4]
    a534:	ldr	r0, [sp, #12]
    a538:	str	r0, [sp]
    a53c:	ldr	r0, [sp, #8]
    a540:	ldr	r1, [sp, #12]
    a544:	sub	r0, r0, r1
    a548:	ldr	r1, [sp, #4]
    a54c:	cmp	r0, r1
    a550:	bgt	a560 <flatcc_json_parser_match_scope+0x40>
    a554:	ldr	r0, [sp]
    a558:	str	r0, [sp, #20]
    a55c:	b	a598 <flatcc_json_parser_match_scope+0x78>
    a560:	ldr	r0, [sp, #12]
    a564:	ldr	r1, [sp, #4]
    a568:	add	r0, r0, r1
    a56c:	ldrb	r0, [r0]
    a570:	cmp	r0, #46	; 0x2e
    a574:	beq	a584 <flatcc_json_parser_match_scope+0x64>
    a578:	ldr	r0, [sp]
    a57c:	str	r0, [sp, #20]
    a580:	b	a598 <flatcc_json_parser_match_scope+0x78>
    a584:	ldr	r0, [sp, #12]
    a588:	ldr	r1, [sp, #4]
    a58c:	add	r0, r0, r1
    a590:	add	r0, r0, #1
    a594:	str	r0, [sp, #20]
    a598:	ldr	r0, [sp, #20]
    a59c:	add	sp, sp, #24
    a5a0:	bx	lr

0000a5a4 <MyGame_Example_Foo_parse_json_enum>:
    a5a4:	push	{fp, lr}
    a5a8:	mov	fp, sp
    a5ac:	sub	sp, sp, #64	; 0x40
    a5b0:	ldr	ip, [fp, #12]
    a5b4:	ldr	lr, [fp, #8]
    a5b8:	str	r0, [fp, #-8]
    a5bc:	str	r1, [fp, #-12]
    a5c0:	str	r2, [fp, #-16]
    a5c4:	str	r3, [fp, #-20]	; 0xffffffec
    a5c8:	ldr	r0, [fp, #-12]
    a5cc:	str	r0, [fp, #-24]	; 0xffffffe8
    a5d0:	ldr	r0, [fp, #-12]
    a5d4:	ldr	r1, [fp, #-16]
    a5d8:	str	lr, [sp, #20]
    a5dc:	str	ip, [sp, #16]
    a5e0:	bl	4e5c <flatcc_json_parser_symbol_part>
    a5e4:	str	r1, [sp, #28]
    a5e8:	str	r0, [sp, #24]
    a5ec:	ldr	r0, [sp, #24]
    a5f0:	ldr	r1, [sp, #28]
    a5f4:	movw	r2, #20577	; 0x5061
    a5f8:	movt	r2, #18798	; 0x496e
    a5fc:	eor	r1, r1, r2
    a600:	movw	r2, #28276	; 0x6e74
    a604:	movt	r2, #29285	; 0x7265
    a608:	eor	r0, r0, r2
    a60c:	orr	r0, r0, r1
    a610:	cmp	r0, #0
    a614:	bne	a734 <MyGame_Example_Foo_parse_json_enum+0x190>
    a618:	b	a61c <MyGame_Example_Foo_parse_json_enum+0x78>
    a61c:	ldr	r0, [fp, #-12]
    a620:	add	r0, r0, #8
    a624:	str	r0, [fp, #-12]
    a628:	ldr	r0, [fp, #-12]
    a62c:	ldr	r1, [fp, #-16]
    a630:	bl	4e5c <flatcc_json_parser_symbol_part>
    a634:	str	r1, [sp, #28]
    a638:	str	r0, [sp, #24]
    a63c:	ldr	r0, [sp, #24]
    a640:	ldr	r1, [sp, #28]
    a644:	movw	lr, #28005	; 0x6d65
    a648:	movt	lr, #20065	; 0x4e61
    a64c:	eor	r1, r1, lr
    a650:	movw	lr, #24931	; 0x6163
    a654:	movt	lr, #29552	; 0x7370
    a658:	eor	r0, r0, lr
    a65c:	orr	r0, r0, r1
    a660:	cmp	r0, #0
    a664:	bne	a724 <MyGame_Example_Foo_parse_json_enum+0x180>
    a668:	b	a66c <MyGame_Example_Foo_parse_json_enum+0xc8>
    a66c:	ldr	r0, [fp, #-12]
    a670:	add	r0, r0, #8
    a674:	str	r0, [fp, #-12]
    a678:	ldr	r0, [fp, #-12]
    a67c:	ldr	r1, [fp, #-16]
    a680:	bl	4e5c <flatcc_json_parser_symbol_part>
    a684:	str	r1, [sp, #28]
    a688:	str	r0, [sp, #24]
    a68c:	ldr	r0, [sp, #28]
    a690:	and	r0, r0, #-16777216	; 0xff000000
    a694:	teq	r0, #1694498816	; 0x65000000
    a698:	bne	a714 <MyGame_Example_Foo_parse_json_enum+0x170>
    a69c:	b	a6a0 <MyGame_Example_Foo_parse_json_enum+0xfc>
    a6a0:	ldr	r0, [fp, #-8]
    a6a4:	ldr	r1, [fp, #-12]
    a6a8:	str	r1, [fp, #-28]	; 0xffffffe4
    a6ac:	ldr	r2, [fp, #-16]
    a6b0:	ldr	r3, [fp, #12]
    a6b4:	movw	ip, #1
    a6b8:	str	r3, [sp, #12]
    a6bc:	mov	r3, ip
    a6c0:	ldr	ip, [sp, #12]
    a6c4:	str	ip, [sp]
    a6c8:	bl	0 <flatcc_json_parser_match_constant>
    a6cc:	str	r0, [fp, #-12]
    a6d0:	ldr	r0, [fp, #-12]
    a6d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a6d8:	cmp	r0, r1
    a6dc:	beq	a704 <MyGame_Example_Foo_parse_json_enum+0x160>
    a6e0:	ldr	r0, [fp, #8]
    a6e4:	mov	r1, #0
    a6e8:	str	r1, [r0, #4]
    a6ec:	mov	r1, #1
    a6f0:	str	r1, [r0]
    a6f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    a6f8:	movw	r1, #0
    a6fc:	str	r1, [r0]
    a700:	b	a710 <MyGame_Example_Foo_parse_json_enum+0x16c>
    a704:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a708:	str	r0, [fp, #-4]
    a70c:	b	a7d4 <MyGame_Example_Foo_parse_json_enum+0x230>
    a710:	b	a720 <MyGame_Example_Foo_parse_json_enum+0x17c>
    a714:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a718:	str	r0, [fp, #-4]
    a71c:	b	a7d4 <MyGame_Example_Foo_parse_json_enum+0x230>
    a720:	b	a730 <MyGame_Example_Foo_parse_json_enum+0x18c>
    a724:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a728:	str	r0, [fp, #-4]
    a72c:	b	a7d4 <MyGame_Example_Foo_parse_json_enum+0x230>
    a730:	b	a7cc <MyGame_Example_Foo_parse_json_enum+0x228>
    a734:	ldr	r0, [sp, #28]
    a738:	movw	r1, #20037	; 0x4e45
    a73c:	movt	r1, #20047	; 0x4e4f
    a740:	teq	r0, r1
    a744:	bne	a7bc <MyGame_Example_Foo_parse_json_enum+0x218>
    a748:	b	a74c <MyGame_Example_Foo_parse_json_enum+0x1a8>
    a74c:	ldr	r0, [fp, #-8]
    a750:	ldr	r1, [fp, #-12]
    a754:	str	r1, [fp, #-28]	; 0xffffffe4
    a758:	ldr	r2, [fp, #-16]
    a75c:	ldr	r3, [fp, #12]
    a760:	movw	ip, #4
    a764:	str	r3, [sp, #8]
    a768:	mov	r3, ip
    a76c:	ldr	ip, [sp, #8]
    a770:	str	ip, [sp]
    a774:	bl	0 <flatcc_json_parser_match_constant>
    a778:	str	r0, [fp, #-12]
    a77c:	ldr	r0, [fp, #-12]
    a780:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a784:	cmp	r0, r1
    a788:	beq	a7ac <MyGame_Example_Foo_parse_json_enum+0x208>
    a78c:	ldr	r0, [fp, #8]
    a790:	mov	r1, #0
    a794:	str	r1, [r0, #4]
    a798:	str	r1, [r0]
    a79c:	ldr	r0, [fp, #-20]	; 0xffffffec
    a7a0:	movw	r1, #0
    a7a4:	str	r1, [r0]
    a7a8:	b	a7b8 <MyGame_Example_Foo_parse_json_enum+0x214>
    a7ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a7b0:	str	r0, [fp, #-4]
    a7b4:	b	a7d4 <MyGame_Example_Foo_parse_json_enum+0x230>
    a7b8:	b	a7c8 <MyGame_Example_Foo_parse_json_enum+0x224>
    a7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a7c0:	str	r0, [fp, #-4]
    a7c4:	b	a7d4 <MyGame_Example_Foo_parse_json_enum+0x230>
    a7c8:	b	a7cc <MyGame_Example_Foo_parse_json_enum+0x228>
    a7cc:	ldr	r0, [fp, #-12]
    a7d0:	str	r0, [fp, #-4]
    a7d4:	ldr	r0, [fp, #-4]
    a7d8:	mov	sp, fp
    a7dc:	pop	{fp, pc}

0000a7e0 <MyGame_Example_hex_enum_parse_json_enum>:
    a7e0:	push	{fp, lr}
    a7e4:	mov	fp, sp
    a7e8:	sub	sp, sp, #64	; 0x40
    a7ec:	ldr	ip, [fp, #12]
    a7f0:	ldr	lr, [fp, #8]
    a7f4:	str	r0, [fp, #-8]
    a7f8:	str	r1, [fp, #-12]
    a7fc:	str	r2, [fp, #-16]
    a800:	str	r3, [fp, #-20]	; 0xffffffec
    a804:	ldr	r0, [fp, #-12]
    a808:	str	r0, [fp, #-24]	; 0xffffffe8
    a80c:	ldr	r0, [fp, #-12]
    a810:	ldr	r1, [fp, #-16]
    a814:	str	lr, [sp, #20]
    a818:	str	ip, [sp, #16]
    a81c:	bl	4e5c <flatcc_json_parser_symbol_part>
    a820:	str	r1, [sp, #28]
    a824:	str	r0, [sp, #24]
    a828:	ldr	r0, [sp, #28]
    a82c:	movw	r1, #30769	; 0x7831
    a830:	movt	r1, #26725	; 0x6865
    a834:	cmp	r0, r1
    a838:	bhi	a8dc <MyGame_Example_hex_enum_parse_json_enum+0xfc>
    a83c:	b	a840 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    a840:	ldr	r0, [sp, #28]
    a844:	movw	r1, #30769	; 0x7831
    a848:	movt	r1, #26725	; 0x6865
    a84c:	teq	r0, r1
    a850:	bne	a8cc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    a854:	b	a858 <MyGame_Example_hex_enum_parse_json_enum+0x78>
    a858:	ldr	r0, [fp, #-8]
    a85c:	ldr	r1, [fp, #-12]
    a860:	str	r1, [fp, #-28]	; 0xffffffe4
    a864:	ldr	r2, [fp, #-16]
    a868:	ldr	r3, [fp, #12]
    a86c:	movw	ip, #4
    a870:	str	r3, [sp, #12]
    a874:	mov	r3, ip
    a878:	ldr	ip, [sp, #12]
    a87c:	str	ip, [sp]
    a880:	bl	0 <flatcc_json_parser_match_constant>
    a884:	str	r0, [fp, #-12]
    a888:	ldr	r0, [fp, #-12]
    a88c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a890:	cmp	r0, r1
    a894:	beq	a8bc <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    a898:	ldr	r0, [fp, #8]
    a89c:	mov	r1, #0
    a8a0:	str	r1, [r0, #4]
    a8a4:	mov	r1, #3
    a8a8:	str	r1, [r0]
    a8ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    a8b0:	movw	r1, #0
    a8b4:	str	r1, [r0]
    a8b8:	b	a8c8 <MyGame_Example_hex_enum_parse_json_enum+0xe8>
    a8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8c0:	str	r0, [fp, #-4]
    a8c4:	b	aa2c <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a8c8:	b	a8d8 <MyGame_Example_hex_enum_parse_json_enum+0xf8>
    a8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8d0:	str	r0, [fp, #-4]
    a8d4:	b	aa2c <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a8d8:	b	aa24 <MyGame_Example_hex_enum_parse_json_enum+0x244>
    a8dc:	ldrh	r0, [sp, #26]
    a8e0:	ldr	r1, [sp, #28]
    a8e4:	movw	r2, #26725	; 0x6865
    a8e8:	eor	r2, r2, r1, lsr #16
    a8ec:	orr	r0, r0, r1, lsl #16
    a8f0:	movw	r1, #25959	; 0x6567
    a8f4:	movt	r1, #30830	; 0x786e
    a8f8:	eor	r0, r0, r1
    a8fc:	orr	r0, r0, r2
    a900:	cmp	r0, #0
    a904:	bne	a980 <MyGame_Example_hex_enum_parse_json_enum+0x1a0>
    a908:	b	a90c <MyGame_Example_hex_enum_parse_json_enum+0x12c>
    a90c:	ldr	r0, [fp, #-8]
    a910:	ldr	r1, [fp, #-12]
    a914:	str	r1, [fp, #-28]	; 0xffffffe4
    a918:	ldr	r2, [fp, #-16]
    a91c:	ldr	r3, [fp, #12]
    a920:	movw	ip, #6
    a924:	str	r3, [sp, #8]
    a928:	mov	r3, ip
    a92c:	ldr	ip, [sp, #8]
    a930:	str	ip, [sp]
    a934:	bl	0 <flatcc_json_parser_match_constant>
    a938:	str	r0, [fp, #-12]
    a93c:	ldr	r0, [fp, #-12]
    a940:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a944:	cmp	r0, r1
    a948:	beq	a970 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    a94c:	ldr	r0, [fp, #8]
    a950:	mvn	r1, #0
    a954:	str	r1, [r0, #4]
    a958:	mvn	r1, #1
    a95c:	str	r1, [r0]
    a960:	ldr	r0, [fp, #-20]	; 0xffffffec
    a964:	movw	r1, #1
    a968:	str	r1, [r0]
    a96c:	b	a97c <MyGame_Example_hex_enum_parse_json_enum+0x19c>
    a970:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a974:	str	r0, [fp, #-4]
    a978:	b	aa2c <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    a97c:	b	aa20 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    a980:	ldr	r0, [sp, #28]
    a984:	movw	r1, #30770	; 0x7832
    a988:	movt	r1, #26725	; 0x6865
    a98c:	teq	r0, r1
    a990:	bne	aa10 <MyGame_Example_hex_enum_parse_json_enum+0x230>
    a994:	b	a998 <MyGame_Example_hex_enum_parse_json_enum+0x1b8>
    a998:	ldr	r0, [fp, #-8]
    a99c:	ldr	r1, [fp, #-12]
    a9a0:	str	r1, [fp, #-28]	; 0xffffffe4
    a9a4:	ldr	r2, [fp, #-16]
    a9a8:	ldr	r3, [fp, #12]
    a9ac:	movw	ip, #4
    a9b0:	str	r3, [sp, #4]
    a9b4:	mov	r3, ip
    a9b8:	ldr	ip, [sp, #4]
    a9bc:	str	ip, [sp]
    a9c0:	bl	0 <flatcc_json_parser_match_constant>
    a9c4:	str	r0, [fp, #-12]
    a9c8:	ldr	r0, [fp, #-12]
    a9cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a9d0:	cmp	r0, r1
    a9d4:	beq	aa00 <MyGame_Example_hex_enum_parse_json_enum+0x220>
    a9d8:	ldr	r0, [fp, #8]
    a9dc:	mov	r1, #0
    a9e0:	str	r1, [r0, #4]
    a9e4:	movw	r1, #48815	; 0xbeaf
    a9e8:	movt	r1, #32431	; 0x7eaf
    a9ec:	str	r1, [r0]
    a9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a9f4:	movw	r1, #0
    a9f8:	str	r1, [r0]
    a9fc:	b	aa0c <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    aa00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa04:	str	r0, [fp, #-4]
    aa08:	b	aa2c <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    aa0c:	b	aa1c <MyGame_Example_hex_enum_parse_json_enum+0x23c>
    aa10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa14:	str	r0, [fp, #-4]
    aa18:	b	aa2c <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    aa1c:	b	aa20 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    aa20:	b	aa24 <MyGame_Example_hex_enum_parse_json_enum+0x244>
    aa24:	ldr	r0, [fp, #-12]
    aa28:	str	r0, [fp, #-4]
    aa2c:	ldr	r0, [fp, #-4]
    aa30:	mov	sp, fp
    aa34:	pop	{fp, pc}

0000aa38 <MyGame_Example_int_enum_parse_json_enum>:
    aa38:	push	{fp, lr}
    aa3c:	mov	fp, sp
    aa40:	sub	sp, sp, #80	; 0x50
    aa44:	ldr	ip, [fp, #12]
    aa48:	ldr	lr, [fp, #8]
    aa4c:	str	r0, [fp, #-8]
    aa50:	str	r1, [fp, #-12]
    aa54:	str	r2, [fp, #-16]
    aa58:	str	r3, [fp, #-20]	; 0xffffffec
    aa5c:	ldr	r0, [fp, #-12]
    aa60:	str	r0, [fp, #-24]	; 0xffffffe8
    aa64:	ldr	r0, [fp, #-12]
    aa68:	ldr	r1, [fp, #-16]
    aa6c:	str	lr, [sp, #36]	; 0x24
    aa70:	str	ip, [sp, #32]
    aa74:	bl	4e5c <flatcc_json_parser_symbol_part>
    aa78:	str	r1, [sp, #44]	; 0x2c
    aa7c:	str	r0, [sp, #40]	; 0x28
    aa80:	ldr	r0, [sp, #44]	; 0x2c
    aa84:	movw	r1, #29745	; 0x7431
    aa88:	movt	r1, #26990	; 0x696e
    aa8c:	cmp	r0, r1
    aa90:	bhi	ab34 <MyGame_Example_int_enum_parse_json_enum+0xfc>
    aa94:	b	aa98 <MyGame_Example_int_enum_parse_json_enum+0x60>
    aa98:	ldr	r0, [sp, #44]	; 0x2c
    aa9c:	movw	r1, #29745	; 0x7431
    aaa0:	movt	r1, #26990	; 0x696e
    aaa4:	teq	r0, r1
    aaa8:	bne	ab24 <MyGame_Example_int_enum_parse_json_enum+0xec>
    aaac:	b	aab0 <MyGame_Example_int_enum_parse_json_enum+0x78>
    aab0:	ldr	r0, [fp, #-8]
    aab4:	ldr	r1, [fp, #-12]
    aab8:	str	r1, [fp, #-28]	; 0xffffffe4
    aabc:	ldr	r2, [fp, #-16]
    aac0:	ldr	r3, [fp, #12]
    aac4:	movw	ip, #4
    aac8:	str	r3, [sp, #28]
    aacc:	mov	r3, ip
    aad0:	ldr	ip, [sp, #28]
    aad4:	str	ip, [sp]
    aad8:	bl	0 <flatcc_json_parser_match_constant>
    aadc:	str	r0, [fp, #-12]
    aae0:	ldr	r0, [fp, #-12]
    aae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    aae8:	cmp	r0, r1
    aaec:	beq	ab14 <MyGame_Example_int_enum_parse_json_enum+0xdc>
    aaf0:	ldr	r0, [fp, #8]
    aaf4:	mov	r1, #0
    aaf8:	str	r1, [r0, #4]
    aafc:	mov	r1, #2
    ab00:	str	r1, [r0]
    ab04:	ldr	r0, [fp, #-20]	; 0xffffffec
    ab08:	movw	r1, #0
    ab0c:	str	r1, [r0]
    ab10:	b	ab20 <MyGame_Example_int_enum_parse_json_enum+0xe8>
    ab14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab18:	str	r0, [fp, #-4]
    ab1c:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    ab20:	b	ab30 <MyGame_Example_int_enum_parse_json_enum+0xf8>
    ab24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab28:	str	r0, [fp, #-4]
    ab2c:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    ab30:	b	ad64 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ab34:	ldr	r0, [sp, #40]	; 0x28
    ab38:	ldr	r1, [sp, #44]	; 0x2c
    ab3c:	movw	r2, #65535	; 0xffff
    ab40:	movt	r2, #25958	; 0x6566
    ab44:	subs	r0, r2, r0
    ab48:	movw	r2, #29806	; 0x746e
    ab4c:	movt	r2, #26990	; 0x696e
    ab50:	sbcs	r1, r2, r1
    ab54:	str	r0, [sp, #24]
    ab58:	str	r1, [sp, #20]
    ab5c:	bcc	ac00 <MyGame_Example_int_enum_parse_json_enum+0x1c8>
    ab60:	b	ab64 <MyGame_Example_int_enum_parse_json_enum+0x12c>
    ab64:	ldr	r0, [sp, #44]	; 0x2c
    ab68:	movw	r1, #29746	; 0x7432
    ab6c:	movt	r1, #26990	; 0x696e
    ab70:	teq	r0, r1
    ab74:	bne	abf0 <MyGame_Example_int_enum_parse_json_enum+0x1b8>
    ab78:	b	ab7c <MyGame_Example_int_enum_parse_json_enum+0x144>
    ab7c:	ldr	r0, [fp, #-8]
    ab80:	ldr	r1, [fp, #-12]
    ab84:	str	r1, [fp, #-28]	; 0xffffffe4
    ab88:	ldr	r2, [fp, #-16]
    ab8c:	ldr	r3, [fp, #12]
    ab90:	movw	ip, #4
    ab94:	str	r3, [sp, #16]
    ab98:	mov	r3, ip
    ab9c:	ldr	ip, [sp, #16]
    aba0:	str	ip, [sp]
    aba4:	bl	0 <flatcc_json_parser_match_constant>
    aba8:	str	r0, [fp, #-12]
    abac:	ldr	r0, [fp, #-12]
    abb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    abb4:	cmp	r0, r1
    abb8:	beq	abe0 <MyGame_Example_int_enum_parse_json_enum+0x1a8>
    abbc:	ldr	r0, [fp, #8]
    abc0:	mov	r1, #0
    abc4:	str	r1, [r0, #4]
    abc8:	mov	r1, #42	; 0x2a
    abcc:	str	r1, [r0]
    abd0:	ldr	r0, [fp, #-20]	; 0xffffffec
    abd4:	movw	r1, #0
    abd8:	str	r1, [r0]
    abdc:	b	abec <MyGame_Example_int_enum_parse_json_enum+0x1b4>
    abe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abe4:	str	r0, [fp, #-4]
    abe8:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    abec:	b	abfc <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    abf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abf4:	str	r0, [fp, #-4]
    abf8:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    abfc:	b	ad60 <MyGame_Example_int_enum_parse_json_enum+0x328>
    ac00:	ldr	r0, [sp, #40]	; 0x28
    ac04:	ldr	r1, [sp, #44]	; 0x2c
    ac08:	movw	r2, #28276	; 0x6e74
    ac0c:	movt	r2, #105	; 0x69
    ac10:	eor	r2, r2, r1, lsr #8
    ac14:	lsr	r0, r0, #8
    ac18:	orr	r0, r0, r1, lsl #24
    ac1c:	movw	r1, #26418	; 0x6732
    ac20:	movt	r1, #28261	; 0x6e65
    ac24:	eor	r0, r0, r1
    ac28:	orr	r0, r0, r2
    ac2c:	cmp	r0, #0
    ac30:	bne	aca8 <MyGame_Example_int_enum_parse_json_enum+0x270>
    ac34:	b	ac38 <MyGame_Example_int_enum_parse_json_enum+0x200>
    ac38:	ldr	r0, [fp, #-8]
    ac3c:	ldr	r1, [fp, #-12]
    ac40:	str	r1, [fp, #-28]	; 0xffffffe4
    ac44:	ldr	r2, [fp, #-16]
    ac48:	ldr	r3, [fp, #12]
    ac4c:	movw	ip, #7
    ac50:	str	r3, [sp, #12]
    ac54:	mov	r3, ip
    ac58:	ldr	ip, [sp, #12]
    ac5c:	str	ip, [sp]
    ac60:	bl	0 <flatcc_json_parser_match_constant>
    ac64:	str	r0, [fp, #-12]
    ac68:	ldr	r0, [fp, #-12]
    ac6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ac70:	cmp	r0, r1
    ac74:	beq	ac98 <MyGame_Example_int_enum_parse_json_enum+0x260>
    ac78:	ldr	r0, [fp, #8]
    ac7c:	mvn	r1, #0
    ac80:	str	r1, [r0, #4]
    ac84:	str	r1, [r0]
    ac88:	ldr	r0, [fp, #-20]	; 0xffffffec
    ac8c:	movw	r1, #1
    ac90:	str	r1, [r0]
    ac94:	b	aca4 <MyGame_Example_int_enum_parse_json_enum+0x26c>
    ac98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ac9c:	str	r0, [fp, #-4]
    aca0:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    aca4:	b	ad5c <MyGame_Example_int_enum_parse_json_enum+0x324>
    aca8:	ldrh	r0, [sp, #42]	; 0x2a
    acac:	ldr	r1, [sp, #44]	; 0x2c
    acb0:	movw	r2, #26990	; 0x696e
    acb4:	eor	r2, r2, r1, lsr #16
    acb8:	orr	r0, r0, r1, lsl #16
    acbc:	movw	r1, #25959	; 0x6567
    acc0:	movt	r1, #29806	; 0x746e
    acc4:	eor	r0, r0, r1
    acc8:	orr	r0, r0, r2
    accc:	cmp	r0, #0
    acd0:	bne	ad4c <MyGame_Example_int_enum_parse_json_enum+0x314>
    acd4:	b	acd8 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    acd8:	ldr	r0, [fp, #-8]
    acdc:	ldr	r1, [fp, #-12]
    ace0:	str	r1, [fp, #-28]	; 0xffffffe4
    ace4:	ldr	r2, [fp, #-16]
    ace8:	ldr	r3, [fp, #12]
    acec:	movw	ip, #6
    acf0:	str	r3, [sp, #8]
    acf4:	mov	r3, ip
    acf8:	ldr	ip, [sp, #8]
    acfc:	str	ip, [sp]
    ad00:	bl	0 <flatcc_json_parser_match_constant>
    ad04:	str	r0, [fp, #-12]
    ad08:	ldr	r0, [fp, #-12]
    ad0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ad10:	cmp	r0, r1
    ad14:	beq	ad3c <MyGame_Example_int_enum_parse_json_enum+0x304>
    ad18:	ldr	r0, [fp, #8]
    ad1c:	mvn	r1, #0
    ad20:	str	r1, [r0, #4]
    ad24:	mvn	r1, #1
    ad28:	str	r1, [r0]
    ad2c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ad30:	movw	r1, #1
    ad34:	str	r1, [r0]
    ad38:	b	ad48 <MyGame_Example_int_enum_parse_json_enum+0x310>
    ad3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad40:	str	r0, [fp, #-4]
    ad44:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    ad48:	b	ad58 <MyGame_Example_int_enum_parse_json_enum+0x320>
    ad4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad50:	str	r0, [fp, #-4]
    ad54:	b	ad6c <MyGame_Example_int_enum_parse_json_enum+0x334>
    ad58:	b	ad5c <MyGame_Example_int_enum_parse_json_enum+0x324>
    ad5c:	b	ad60 <MyGame_Example_int_enum_parse_json_enum+0x328>
    ad60:	b	ad64 <MyGame_Example_int_enum_parse_json_enum+0x32c>
    ad64:	ldr	r0, [fp, #-12]
    ad68:	str	r0, [fp, #-4]
    ad6c:	ldr	r0, [fp, #-4]
    ad70:	mov	sp, fp
    ad74:	pop	{fp, pc}

0000ad78 <MyGame_Example_neg_enum_parse_json_enum>:
    ad78:	push	{fp, lr}
    ad7c:	mov	fp, sp
    ad80:	sub	sp, sp, #64	; 0x40
    ad84:	ldr	ip, [fp, #12]
    ad88:	ldr	lr, [fp, #8]
    ad8c:	str	r0, [fp, #-8]
    ad90:	str	r1, [fp, #-12]
    ad94:	str	r2, [fp, #-16]
    ad98:	str	r3, [fp, #-20]	; 0xffffffec
    ad9c:	ldr	r0, [fp, #-12]
    ada0:	str	r0, [fp, #-24]	; 0xffffffe8
    ada4:	ldr	r0, [fp, #-12]
    ada8:	ldr	r1, [fp, #-16]
    adac:	str	lr, [sp, #20]
    adb0:	str	ip, [sp, #16]
    adb4:	bl	4e5c <flatcc_json_parser_symbol_part>
    adb8:	str	r1, [sp, #28]
    adbc:	str	r0, [sp, #24]
    adc0:	ldr	r0, [sp, #28]
    adc4:	movw	r1, #26417	; 0x6731
    adc8:	movt	r1, #28261	; 0x6e65
    adcc:	cmp	r0, r1
    add0:	bhi	ae74 <MyGame_Example_neg_enum_parse_json_enum+0xfc>
    add4:	b	add8 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    add8:	ldr	r0, [sp, #28]
    addc:	movw	r1, #26417	; 0x6731
    ade0:	movt	r1, #28261	; 0x6e65
    ade4:	teq	r0, r1
    ade8:	bne	ae64 <MyGame_Example_neg_enum_parse_json_enum+0xec>
    adec:	b	adf0 <MyGame_Example_neg_enum_parse_json_enum+0x78>
    adf0:	ldr	r0, [fp, #-8]
    adf4:	ldr	r1, [fp, #-12]
    adf8:	str	r1, [fp, #-28]	; 0xffffffe4
    adfc:	ldr	r2, [fp, #-16]
    ae00:	ldr	r3, [fp, #12]
    ae04:	movw	ip, #4
    ae08:	str	r3, [sp, #12]
    ae0c:	mov	r3, ip
    ae10:	ldr	ip, [sp, #12]
    ae14:	str	ip, [sp]
    ae18:	bl	0 <flatcc_json_parser_match_constant>
    ae1c:	str	r0, [fp, #-12]
    ae20:	ldr	r0, [fp, #-12]
    ae24:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ae28:	cmp	r0, r1
    ae2c:	beq	ae54 <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    ae30:	ldr	r0, [fp, #8]
    ae34:	mvn	r1, #0
    ae38:	str	r1, [r0, #4]
    ae3c:	mvn	r1, #11
    ae40:	str	r1, [r0]
    ae44:	ldr	r0, [fp, #-20]	; 0xffffffec
    ae48:	movw	r1, #1
    ae4c:	str	r1, [r0]
    ae50:	b	ae60 <MyGame_Example_neg_enum_parse_json_enum+0xe8>
    ae54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae58:	str	r0, [fp, #-4]
    ae5c:	b	afa8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ae60:	b	ae70 <MyGame_Example_neg_enum_parse_json_enum+0xf8>
    ae64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae68:	str	r0, [fp, #-4]
    ae6c:	b	afa8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    ae70:	b	afa0 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    ae74:	ldr	r0, [sp, #28]
    ae78:	movw	r1, #26419	; 0x6733
    ae7c:	movt	r1, #28261	; 0x6e65
    ae80:	teq	r0, r1
    ae84:	bne	af00 <MyGame_Example_neg_enum_parse_json_enum+0x188>
    ae88:	b	ae8c <MyGame_Example_neg_enum_parse_json_enum+0x114>
    ae8c:	ldr	r0, [fp, #-8]
    ae90:	ldr	r1, [fp, #-12]
    ae94:	str	r1, [fp, #-28]	; 0xffffffe4
    ae98:	ldr	r2, [fp, #-16]
    ae9c:	ldr	r3, [fp, #12]
    aea0:	movw	ip, #4
    aea4:	str	r3, [sp, #8]
    aea8:	mov	r3, ip
    aeac:	ldr	ip, [sp, #8]
    aeb0:	str	ip, [sp]
    aeb4:	bl	0 <flatcc_json_parser_match_constant>
    aeb8:	str	r0, [fp, #-12]
    aebc:	ldr	r0, [fp, #-12]
    aec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    aec4:	cmp	r0, r1
    aec8:	beq	aef0 <MyGame_Example_neg_enum_parse_json_enum+0x178>
    aecc:	ldr	r0, [fp, #8]
    aed0:	mvn	r1, #0
    aed4:	str	r1, [r0, #4]
    aed8:	mvn	r1, #9
    aedc:	str	r1, [r0]
    aee0:	ldr	r0, [fp, #-20]	; 0xffffffec
    aee4:	movw	r1, #1
    aee8:	str	r1, [r0]
    aeec:	b	aefc <MyGame_Example_neg_enum_parse_json_enum+0x184>
    aef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aef4:	str	r0, [fp, #-4]
    aef8:	b	afa8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    aefc:	b	af9c <MyGame_Example_neg_enum_parse_json_enum+0x224>
    af00:	ldr	r0, [sp, #28]
    af04:	movw	r1, #26418	; 0x6732
    af08:	movt	r1, #28261	; 0x6e65
    af0c:	teq	r0, r1
    af10:	bne	af8c <MyGame_Example_neg_enum_parse_json_enum+0x214>
    af14:	b	af18 <MyGame_Example_neg_enum_parse_json_enum+0x1a0>
    af18:	ldr	r0, [fp, #-8]
    af1c:	ldr	r1, [fp, #-12]
    af20:	str	r1, [fp, #-28]	; 0xffffffe4
    af24:	ldr	r2, [fp, #-16]
    af28:	ldr	r3, [fp, #12]
    af2c:	movw	ip, #4
    af30:	str	r3, [sp, #4]
    af34:	mov	r3, ip
    af38:	ldr	ip, [sp, #4]
    af3c:	str	ip, [sp]
    af40:	bl	0 <flatcc_json_parser_match_constant>
    af44:	str	r0, [fp, #-12]
    af48:	ldr	r0, [fp, #-12]
    af4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    af50:	cmp	r0, r1
    af54:	beq	af7c <MyGame_Example_neg_enum_parse_json_enum+0x204>
    af58:	ldr	r0, [fp, #8]
    af5c:	mvn	r1, #0
    af60:	str	r1, [r0, #4]
    af64:	mvn	r1, #10
    af68:	str	r1, [r0]
    af6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    af70:	movw	r1, #1
    af74:	str	r1, [r0]
    af78:	b	af88 <MyGame_Example_neg_enum_parse_json_enum+0x210>
    af7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    af80:	str	r0, [fp, #-4]
    af84:	b	afa8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    af88:	b	af98 <MyGame_Example_neg_enum_parse_json_enum+0x220>
    af8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    af90:	str	r0, [fp, #-4]
    af94:	b	afa8 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    af98:	b	af9c <MyGame_Example_neg_enum_parse_json_enum+0x224>
    af9c:	b	afa0 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    afa0:	ldr	r0, [fp, #-12]
    afa4:	str	r0, [fp, #-4]
    afa8:	ldr	r0, [fp, #-4]
    afac:	mov	sp, fp
    afb0:	pop	{fp, pc}

0000afb4 <MyGame_Example_notemptyenum_parse_json_enum>:
    afb4:	push	{fp, lr}
    afb8:	mov	fp, sp
    afbc:	sub	sp, sp, #56	; 0x38
    afc0:	ldr	ip, [fp, #12]
    afc4:	ldr	lr, [fp, #8]
    afc8:	str	r0, [fp, #-8]
    afcc:	str	r1, [fp, #-12]
    afd0:	str	r2, [fp, #-16]
    afd4:	str	r3, [fp, #-20]	; 0xffffffec
    afd8:	ldr	r0, [fp, #-12]
    afdc:	str	r0, [fp, #-24]	; 0xffffffe8
    afe0:	ldr	r0, [fp, #-12]
    afe4:	ldr	r1, [fp, #-16]
    afe8:	str	lr, [sp, #12]
    afec:	str	ip, [sp, #8]
    aff0:	bl	4e5c <flatcc_json_parser_symbol_part>
    aff4:	str	r1, [sp, #20]
    aff8:	str	r0, [sp, #16]
    affc:	ldr	r0, [sp, #20]
    b000:	and	r0, r0, #-16777216	; 0xff000000
    b004:	teq	r0, #2013265920	; 0x78000000
    b008:	bne	b080 <MyGame_Example_notemptyenum_parse_json_enum+0xcc>
    b00c:	b	b010 <MyGame_Example_notemptyenum_parse_json_enum+0x5c>
    b010:	ldr	r0, [fp, #-8]
    b014:	ldr	r1, [fp, #-12]
    b018:	str	r1, [sp, #28]
    b01c:	ldr	r2, [fp, #-16]
    b020:	ldr	r3, [fp, #12]
    b024:	movw	ip, #1
    b028:	str	r3, [sp, #4]
    b02c:	mov	r3, ip
    b030:	ldr	ip, [sp, #4]
    b034:	str	ip, [sp]
    b038:	bl	0 <flatcc_json_parser_match_constant>
    b03c:	str	r0, [fp, #-12]
    b040:	ldr	r0, [fp, #-12]
    b044:	ldr	r1, [sp, #28]
    b048:	cmp	r0, r1
    b04c:	beq	b070 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    b050:	ldr	r0, [fp, #8]
    b054:	mov	r1, #0
    b058:	str	r1, [r0, #4]
    b05c:	str	r1, [r0]
    b060:	ldr	r0, [fp, #-20]	; 0xffffffec
    b064:	movw	r1, #0
    b068:	str	r1, [r0]
    b06c:	b	b07c <MyGame_Example_notemptyenum_parse_json_enum+0xc8>
    b070:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b074:	str	r0, [fp, #-4]
    b078:	b	b094 <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    b07c:	b	b08c <MyGame_Example_notemptyenum_parse_json_enum+0xd8>
    b080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b084:	str	r0, [fp, #-4]
    b088:	b	b094 <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    b08c:	ldr	r0, [fp, #-12]
    b090:	str	r0, [fp, #-4]
    b094:	ldr	r0, [fp, #-4]
    b098:	mov	sp, fp
    b09c:	pop	{fp, pc}

0000b0a0 <Fantasy_Character_parse_json_enum>:
    b0a0:	push	{fp, lr}
    b0a4:	mov	fp, sp
    b0a8:	sub	sp, sp, #104	; 0x68
    b0ac:	ldr	ip, [fp, #12]
    b0b0:	ldr	lr, [fp, #8]
    b0b4:	str	r0, [fp, #-8]
    b0b8:	str	r1, [fp, #-12]
    b0bc:	str	r2, [fp, #-16]
    b0c0:	str	r3, [fp, #-20]	; 0xffffffec
    b0c4:	ldr	r0, [fp, #-12]
    b0c8:	str	r0, [fp, #-24]	; 0xffffffe8
    b0cc:	ldr	r0, [fp, #-12]
    b0d0:	ldr	r1, [fp, #-16]
    b0d4:	str	lr, [fp, #-44]	; 0xffffffd4
    b0d8:	str	ip, [fp, #-48]	; 0xffffffd0
    b0dc:	bl	4e5c <flatcc_json_parser_symbol_part>
    b0e0:	str	r1, [fp, #-36]	; 0xffffffdc
    b0e4:	str	r0, [fp, #-40]	; 0xffffffd8
    b0e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b0ec:	movw	r1, #20036	; 0x4e44
    b0f0:	movt	r1, #20047	; 0x4e4f
    b0f4:	cmp	r0, r1
    b0f8:	bhi	b344 <Fantasy_Character_parse_json_enum+0x2a4>
    b0fc:	b	b100 <Fantasy_Character_parse_json_enum+0x60>
    b100:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b104:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b108:	movw	r2, #28159	; 0x6dff
    b10c:	movt	r2, #18017	; 0x4661
    b110:	subs	r0, r2, r0
    b114:	movw	r2, #28523	; 0x6f6b
    b118:	movt	r2, #17007	; 0x426f
    b11c:	sbcs	r1, r2, r1
    b120:	str	r0, [sp, #52]	; 0x34
    b124:	str	r1, [sp, #48]	; 0x30
    b128:	bcc	b1e0 <Fantasy_Character_parse_json_enum+0x140>
    b12c:	b	b130 <Fantasy_Character_parse_json_enum+0x90>
    b130:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b134:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b138:	and	r0, r0, #-16777216	; 0xff000000
    b13c:	movw	r2, #27756	; 0x6c6c
    b140:	movt	r2, #16997	; 0x4265
    b144:	eor	r1, r1, r2
    b148:	eor	r0, r0, #1694498816	; 0x65000000
    b14c:	orr	r0, r0, r1
    b150:	cmp	r0, #0
    b154:	bne	b1d0 <Fantasy_Character_parse_json_enum+0x130>
    b158:	b	b15c <Fantasy_Character_parse_json_enum+0xbc>
    b15c:	ldr	r0, [fp, #-8]
    b160:	ldr	r1, [fp, #-12]
    b164:	str	r1, [fp, #-28]	; 0xffffffe4
    b168:	ldr	r2, [fp, #-16]
    b16c:	ldr	r3, [fp, #12]
    b170:	movw	ip, #5
    b174:	str	r3, [sp, #44]	; 0x2c
    b178:	mov	r3, ip
    b17c:	ldr	ip, [sp, #44]	; 0x2c
    b180:	str	ip, [sp]
    b184:	bl	0 <flatcc_json_parser_match_constant>
    b188:	str	r0, [fp, #-12]
    b18c:	ldr	r0, [fp, #-12]
    b190:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b194:	cmp	r0, r1
    b198:	beq	b1c0 <Fantasy_Character_parse_json_enum+0x120>
    b19c:	ldr	r0, [fp, #8]
    b1a0:	mov	r1, #0
    b1a4:	str	r1, [r0, #4]
    b1a8:	mov	r1, #9
    b1ac:	str	r1, [r0]
    b1b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b1b4:	movw	r1, #0
    b1b8:	str	r1, [r0]
    b1bc:	b	b1cc <Fantasy_Character_parse_json_enum+0x12c>
    b1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b1c4:	str	r0, [fp, #-4]
    b1c8:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b1cc:	b	b1dc <Fantasy_Character_parse_json_enum+0x13c>
    b1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b1d4:	str	r0, [fp, #-4]
    b1d8:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b1dc:	b	b340 <Fantasy_Character_parse_json_enum+0x2a0>
    b1e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b1e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b1e8:	and	r0, r0, #-16777216	; 0xff000000
    b1ec:	movw	r2, #19553	; 0x4c61
    b1f0:	movt	r2, #19829	; 0x4d75
    b1f4:	eor	r1, r1, r2
    b1f8:	eor	r0, r0, #1845493760	; 0x6e000000
    b1fc:	orr	r0, r0, r1
    b200:	cmp	r0, #0
    b204:	bne	b280 <Fantasy_Character_parse_json_enum+0x1e0>
    b208:	b	b20c <Fantasy_Character_parse_json_enum+0x16c>
    b20c:	ldr	r0, [fp, #-8]
    b210:	ldr	r1, [fp, #-12]
    b214:	str	r1, [fp, #-28]	; 0xffffffe4
    b218:	ldr	r2, [fp, #-16]
    b21c:	ldr	r3, [fp, #12]
    b220:	movw	ip, #5
    b224:	str	r3, [sp, #40]	; 0x28
    b228:	mov	r3, ip
    b22c:	ldr	ip, [sp, #40]	; 0x28
    b230:	str	ip, [sp]
    b234:	bl	0 <flatcc_json_parser_match_constant>
    b238:	str	r0, [fp, #-12]
    b23c:	ldr	r0, [fp, #-12]
    b240:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b244:	cmp	r0, r1
    b248:	beq	b270 <Fantasy_Character_parse_json_enum+0x1d0>
    b24c:	ldr	r0, [fp, #8]
    b250:	mov	r1, #0
    b254:	str	r1, [r0, #4]
    b258:	mov	r1, #2
    b25c:	str	r1, [r0]
    b260:	ldr	r0, [fp, #-20]	; 0xffffffec
    b264:	movw	r1, #0
    b268:	str	r1, [r0]
    b26c:	b	b27c <Fantasy_Character_parse_json_enum+0x1dc>
    b270:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b274:	str	r0, [fp, #-4]
    b278:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b27c:	b	b33c <Fantasy_Character_parse_json_enum+0x29c>
    b280:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b284:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b288:	movw	r2, #28527	; 0x6f6f
    b28c:	movt	r2, #66	; 0x42
    b290:	eor	r2, r2, r1, lsr #8
    b294:	lsr	r0, r0, #8
    b298:	orr	r0, r0, r1, lsl #24
    b29c:	movw	r1, #24942	; 0x616e
    b2a0:	movt	r1, #27462	; 0x6b46
    b2a4:	eor	r0, r0, r1
    b2a8:	orr	r0, r0, r2
    b2ac:	cmp	r0, #0
    b2b0:	bne	b32c <Fantasy_Character_parse_json_enum+0x28c>
    b2b4:	b	b2b8 <Fantasy_Character_parse_json_enum+0x218>
    b2b8:	ldr	r0, [fp, #-8]
    b2bc:	ldr	r1, [fp, #-12]
    b2c0:	str	r1, [fp, #-28]	; 0xffffffe4
    b2c4:	ldr	r2, [fp, #-16]
    b2c8:	ldr	r3, [fp, #12]
    b2cc:	movw	ip, #7
    b2d0:	str	r3, [sp, #36]	; 0x24
    b2d4:	mov	r3, ip
    b2d8:	ldr	ip, [sp, #36]	; 0x24
    b2dc:	str	ip, [sp]
    b2e0:	bl	0 <flatcc_json_parser_match_constant>
    b2e4:	str	r0, [fp, #-12]
    b2e8:	ldr	r0, [fp, #-12]
    b2ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b2f0:	cmp	r0, r1
    b2f4:	beq	b31c <Fantasy_Character_parse_json_enum+0x27c>
    b2f8:	ldr	r0, [fp, #8]
    b2fc:	mov	r1, #0
    b300:	str	r1, [r0, #4]
    b304:	mov	r1, #10
    b308:	str	r1, [r0]
    b30c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b310:	movw	r1, #0
    b314:	str	r1, [r0]
    b318:	b	b328 <Fantasy_Character_parse_json_enum+0x288>
    b31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b320:	str	r0, [fp, #-4]
    b324:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b328:	b	b338 <Fantasy_Character_parse_json_enum+0x298>
    b32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b330:	str	r0, [fp, #-4]
    b334:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b338:	b	b33c <Fantasy_Character_parse_json_enum+0x29c>
    b33c:	b	b340 <Fantasy_Character_parse_json_enum+0x2a0>
    b340:	b	b64c <Fantasy_Character_parse_json_enum+0x5ac>
    b344:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b348:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b34c:	mvn	r2, #-1912602624	; 0x8e000000
    b350:	subs	r0, r2, r0
    b354:	movw	r2, #26725	; 0x6865
    b358:	movt	r2, #20340	; 0x4f74
    b35c:	sbcs	r1, r2, r1
    b360:	str	r0, [sp, #32]
    b364:	str	r1, [sp, #28]
    b368:	bcc	b408 <Fantasy_Character_parse_json_enum+0x368>
    b36c:	b	b370 <Fantasy_Character_parse_json_enum+0x2d0>
    b370:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b374:	movw	r1, #20037	; 0x4e45
    b378:	movt	r1, #20047	; 0x4e4f
    b37c:	teq	r0, r1
    b380:	bne	b3f8 <Fantasy_Character_parse_json_enum+0x358>
    b384:	b	b388 <Fantasy_Character_parse_json_enum+0x2e8>
    b388:	ldr	r0, [fp, #-8]
    b38c:	ldr	r1, [fp, #-12]
    b390:	str	r1, [fp, #-28]	; 0xffffffe4
    b394:	ldr	r2, [fp, #-16]
    b398:	ldr	r3, [fp, #12]
    b39c:	movw	ip, #4
    b3a0:	str	r3, [sp, #24]
    b3a4:	mov	r3, ip
    b3a8:	ldr	ip, [sp, #24]
    b3ac:	str	ip, [sp]
    b3b0:	bl	0 <flatcc_json_parser_match_constant>
    b3b4:	str	r0, [fp, #-12]
    b3b8:	ldr	r0, [fp, #-12]
    b3bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b3c0:	cmp	r0, r1
    b3c4:	beq	b3e8 <Fantasy_Character_parse_json_enum+0x348>
    b3c8:	ldr	r0, [fp, #8]
    b3cc:	mov	r1, #0
    b3d0:	str	r1, [r0, #4]
    b3d4:	str	r1, [r0]
    b3d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b3dc:	movw	r1, #0
    b3e0:	str	r1, [r0]
    b3e4:	b	b3f4 <Fantasy_Character_parse_json_enum+0x354>
    b3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3ec:	str	r0, [fp, #-4]
    b3f0:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b3f4:	b	b404 <Fantasy_Character_parse_json_enum+0x364>
    b3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3fc:	str	r0, [fp, #-4]
    b400:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b404:	b	b648 <Fantasy_Character_parse_json_enum+0x5a8>
    b408:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b40c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b410:	movw	r2, #25963	; 0x656b
    b414:	movt	r2, #28282	; 0x6e7a
    b418:	subs	r0, r2, r0
    b41c:	movw	r2, #28789	; 0x7075
    b420:	movt	r2, #21089	; 0x5261
    b424:	sbcs	r1, r2, r1
    b428:	str	r0, [sp, #20]
    b42c:	str	r1, [sp, #16]
    b430:	bcc	b4e8 <Fantasy_Character_parse_json_enum+0x448>
    b434:	b	b438 <Fantasy_Character_parse_json_enum+0x398>
    b438:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b43c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b440:	and	r0, r0, #-16777216	; 0xff000000
    b444:	movw	r2, #26725	; 0x6865
    b448:	movt	r2, #20340	; 0x4f74
    b44c:	eor	r1, r1, r2
    b450:	eor	r0, r0, #1912602624	; 0x72000000
    b454:	orr	r0, r0, r1
    b458:	cmp	r0, #0
    b45c:	bne	b4d8 <Fantasy_Character_parse_json_enum+0x438>
    b460:	b	b464 <Fantasy_Character_parse_json_enum+0x3c4>
    b464:	ldr	r0, [fp, #-8]
    b468:	ldr	r1, [fp, #-12]
    b46c:	str	r1, [fp, #-28]	; 0xffffffe4
    b470:	ldr	r2, [fp, #-16]
    b474:	ldr	r3, [fp, #12]
    b478:	movw	ip, #5
    b47c:	str	r3, [sp, #12]
    b480:	mov	r3, ip
    b484:	ldr	ip, [sp, #12]
    b488:	str	ip, [sp]
    b48c:	bl	0 <flatcc_json_parser_match_constant>
    b490:	str	r0, [fp, #-12]
    b494:	ldr	r0, [fp, #-12]
    b498:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b49c:	cmp	r0, r1
    b4a0:	beq	b4c8 <Fantasy_Character_parse_json_enum+0x428>
    b4a4:	ldr	r0, [fp, #8]
    b4a8:	mov	r1, #0
    b4ac:	str	r1, [r0, #4]
    b4b0:	mov	r1, #11
    b4b4:	str	r1, [r0]
    b4b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b4bc:	movw	r1, #0
    b4c0:	str	r1, [r0]
    b4c4:	b	b4d4 <Fantasy_Character_parse_json_enum+0x434>
    b4c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4cc:	str	r0, [fp, #-4]
    b4d0:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b4d4:	b	b4e4 <Fantasy_Character_parse_json_enum+0x444>
    b4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4dc:	str	r0, [fp, #-4]
    b4e0:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b4e4:	b	b644 <Fantasy_Character_parse_json_enum+0x5a4>
    b4e8:	ldrh	r0, [fp, #-38]	; 0xffffffda
    b4ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b4f0:	movw	r2, #21870	; 0x556e
    b4f4:	eor	r2, r2, r1, lsr #16
    b4f8:	orr	r0, r0, r1, lsl #16
    b4fc:	movw	r1, #25956	; 0x6564
    b500:	movt	r1, #30067	; 0x7573
    b504:	eor	r0, r0, r1
    b508:	orr	r0, r0, r2
    b50c:	cmp	r0, #0
    b510:	bne	b58c <Fantasy_Character_parse_json_enum+0x4ec>
    b514:	b	b518 <Fantasy_Character_parse_json_enum+0x478>
    b518:	ldr	r0, [fp, #-8]
    b51c:	ldr	r1, [fp, #-12]
    b520:	str	r1, [fp, #-28]	; 0xffffffe4
    b524:	ldr	r2, [fp, #-16]
    b528:	ldr	r3, [fp, #12]
    b52c:	movw	ip, #6
    b530:	str	r3, [sp, #8]
    b534:	mov	r3, ip
    b538:	ldr	ip, [sp, #8]
    b53c:	str	ip, [sp]
    b540:	bl	0 <flatcc_json_parser_match_constant>
    b544:	str	r0, [fp, #-12]
    b548:	ldr	r0, [fp, #-12]
    b54c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b550:	cmp	r0, r1
    b554:	beq	b57c <Fantasy_Character_parse_json_enum+0x4dc>
    b558:	ldr	r0, [fp, #8]
    b55c:	mov	r1, #0
    b560:	str	r1, [r0, #4]
    b564:	mov	r1, #255	; 0xff
    b568:	str	r1, [r0]
    b56c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b570:	movw	r1, #0
    b574:	str	r1, [r0]
    b578:	b	b588 <Fantasy_Character_parse_json_enum+0x4e8>
    b57c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b580:	str	r0, [fp, #-4]
    b584:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b588:	b	b640 <Fantasy_Character_parse_json_enum+0x5a0>
    b58c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b590:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b594:	movw	r2, #28789	; 0x7075
    b598:	movt	r2, #21089	; 0x5261
    b59c:	eor	r1, r1, r2
    b5a0:	movw	r2, #25964	; 0x656c
    b5a4:	movt	r2, #28282	; 0x6e7a
    b5a8:	eor	r0, r0, r2
    b5ac:	orr	r0, r0, r1
    b5b0:	cmp	r0, #0
    b5b4:	bne	b630 <Fantasy_Character_parse_json_enum+0x590>
    b5b8:	b	b5bc <Fantasy_Character_parse_json_enum+0x51c>
    b5bc:	ldr	r0, [fp, #-8]
    b5c0:	ldr	r1, [fp, #-12]
    b5c4:	str	r1, [fp, #-28]	; 0xffffffe4
    b5c8:	ldr	r2, [fp, #-16]
    b5cc:	ldr	r3, [fp, #12]
    b5d0:	movw	ip, #8
    b5d4:	str	r3, [sp, #4]
    b5d8:	mov	r3, ip
    b5dc:	ldr	ip, [sp, #4]
    b5e0:	str	ip, [sp]
    b5e4:	bl	0 <flatcc_json_parser_match_constant>
    b5e8:	str	r0, [fp, #-12]
    b5ec:	ldr	r0, [fp, #-12]
    b5f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b5f4:	cmp	r0, r1
    b5f8:	beq	b620 <Fantasy_Character_parse_json_enum+0x580>
    b5fc:	ldr	r0, [fp, #8]
    b600:	mov	r1, #0
    b604:	str	r1, [r0, #4]
    b608:	mov	r1, #8
    b60c:	str	r1, [r0]
    b610:	ldr	r0, [fp, #-20]	; 0xffffffec
    b614:	movw	r1, #0
    b618:	str	r1, [r0]
    b61c:	b	b62c <Fantasy_Character_parse_json_enum+0x58c>
    b620:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b624:	str	r0, [fp, #-4]
    b628:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b62c:	b	b63c <Fantasy_Character_parse_json_enum+0x59c>
    b630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b634:	str	r0, [fp, #-4]
    b638:	b	b654 <Fantasy_Character_parse_json_enum+0x5b4>
    b63c:	b	b640 <Fantasy_Character_parse_json_enum+0x5a0>
    b640:	b	b644 <Fantasy_Character_parse_json_enum+0x5a4>
    b644:	b	b648 <Fantasy_Character_parse_json_enum+0x5a8>
    b648:	b	b64c <Fantasy_Character_parse_json_enum+0x5ac>
    b64c:	ldr	r0, [fp, #-12]
    b650:	str	r0, [fp, #-4]
    b654:	ldr	r0, [fp, #-4]
    b658:	mov	sp, fp
    b65c:	pop	{fp, pc}

0000b660 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    b660:	push	{fp, lr}
    b664:	mov	fp, sp
    b668:	sub	sp, sp, #64	; 0x40
    b66c:	ldr	ip, [fp, #12]
    b670:	ldr	lr, [fp, #8]
    b674:	str	r0, [fp, #-8]
    b678:	str	r1, [fp, #-12]
    b67c:	str	r2, [fp, #-16]
    b680:	str	r3, [fp, #-20]	; 0xffffffec
    b684:	ldr	r0, [fp, #-12]
    b688:	str	r0, [fp, #-24]	; 0xffffffe8
    b68c:	ldr	r0, [fp, #-12]
    b690:	ldr	r1, [fp, #-16]
    b694:	str	lr, [sp, #20]
    b698:	str	ip, [sp, #16]
    b69c:	bl	4e5c <flatcc_json_parser_symbol_part>
    b6a0:	str	r1, [sp, #28]
    b6a4:	str	r0, [sp, #24]
    b6a8:	ldr	r0, [sp, #28]
    b6ac:	bic	r0, r0, #255	; 0xff
    b6b0:	movw	r1, #28416	; 0x6f00
    b6b4:	movt	r1, #18031	; 0x466f
    b6b8:	teq	r0, r1
    b6bc:	bne	b730 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd0>
    b6c0:	b	b6c4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x64>
    b6c4:	ldr	r0, [fp, #-8]
    b6c8:	ldr	r1, [fp, #-12]
    b6cc:	str	r1, [fp, #-28]	; 0xffffffe4
    b6d0:	ldr	r2, [fp, #-16]
    b6d4:	ldr	r3, [fp, #12]
    b6d8:	movw	ip, #3
    b6dc:	str	r3, [sp, #12]
    b6e0:	mov	r3, ip
    b6e4:	ldr	ip, [sp, #12]
    b6e8:	str	ip, [sp]
    b6ec:	bl	0 <flatcc_json_parser_match_constant>
    b6f0:	str	r0, [fp, #-12]
    b6f4:	ldr	r0, [fp, #-12]
    b6f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b6fc:	cmp	r0, r1
    b700:	beq	b728 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc8>
    b704:	ldr	r0, [fp, #8]
    b708:	mov	r1, #0
    b70c:	str	r1, [r0, #4]
    b710:	mov	r1, #17
    b714:	str	r1, [r0]
    b718:	ldr	r0, [fp, #-20]	; 0xffffffec
    b71c:	movw	r1, #0
    b720:	str	r1, [r0]
    b724:	b	b72c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xcc>
    b728:	b	b738 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    b72c:	b	b734 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    b730:	b	b738 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    b734:	b	b834 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d4>
    b738:	ldr	r0, [sp, #24]
    b73c:	ldr	r1, [sp, #28]
    b740:	movw	r2, #25452	; 0x636c
    b744:	movt	r2, #18798	; 0x496e
    b748:	eor	r1, r1, r2
    b74c:	movw	r2, #25942	; 0x6556
    b750:	movt	r2, #30052	; 0x7564
    b754:	eor	r0, r0, r2
    b758:	orr	r0, r0, r1
    b75c:	cmp	r0, #0
    b760:	bne	b824 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c4>
    b764:	b	b768 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x108>
    b768:	ldr	r0, [fp, #-12]
    b76c:	add	r0, r0, #8
    b770:	str	r0, [fp, #-12]
    b774:	ldr	r0, [fp, #-12]
    b778:	ldr	r1, [fp, #-16]
    b77c:	bl	4e5c <flatcc_json_parser_symbol_part>
    b780:	str	r1, [sp, #28]
    b784:	str	r0, [sp, #24]
    b788:	ldr	r0, [sp, #28]
    b78c:	bfc	r0, #0, #16
    b790:	movw	r1, #0
    b794:	movt	r1, #24940	; 0x616c
    b798:	teq	r0, r1
    b79c:	bne	b814 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b4>
    b7a0:	b	b7a4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x144>
    b7a4:	ldr	r0, [fp, #-8]
    b7a8:	ldr	r1, [fp, #-12]
    b7ac:	str	r1, [fp, #-28]	; 0xffffffe4
    b7b0:	ldr	r2, [fp, #-16]
    b7b4:	ldr	r3, [fp, #12]
    b7b8:	movw	ip, #2
    b7bc:	str	r3, [sp, #8]
    b7c0:	mov	r3, ip
    b7c4:	ldr	ip, [sp, #8]
    b7c8:	str	ip, [sp]
    b7cc:	bl	0 <flatcc_json_parser_match_constant>
    b7d0:	str	r0, [fp, #-12]
    b7d4:	ldr	r0, [fp, #-12]
    b7d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b7dc:	cmp	r0, r1
    b7e0:	beq	b804 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a4>
    b7e4:	ldr	r0, [fp, #8]
    b7e8:	mov	r1, #0
    b7ec:	str	r1, [r0, #4]
    b7f0:	str	r1, [r0]
    b7f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b7f8:	movw	r1, #0
    b7fc:	str	r1, [r0]
    b800:	b	b810 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    b804:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b808:	str	r0, [fp, #-4]
    b80c:	b	b83c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    b810:	b	b820 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c0>
    b814:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b818:	str	r0, [fp, #-4]
    b81c:	b	b83c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    b820:	b	b830 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    b824:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b828:	str	r0, [fp, #-4]
    b82c:	b	b83c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    b830:	b	b834 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d4>
    b834:	ldr	r0, [fp, #-12]
    b838:	str	r0, [fp, #-4]
    b83c:	ldr	r0, [fp, #-4]
    b840:	mov	sp, fp
    b844:	pop	{fp, pc}

0000b848 <flatcc_json_parser_coerce_int8>:
    b848:	push	{r4, sl, fp, lr}
    b84c:	add	fp, sp, #8
    b850:	sub	sp, sp, #56	; 0x38
    b854:	ldr	ip, [fp, #12]
    b858:	ldr	lr, [fp, #8]
    b85c:	ldr	r4, [fp, #16]
    b860:	str	r0, [fp, #-16]
    b864:	str	r1, [fp, #-20]	; 0xffffffec
    b868:	str	r2, [fp, #-24]	; 0xffffffe8
    b86c:	str	r3, [fp, #-28]	; 0xffffffe4
    b870:	str	ip, [sp, #28]
    b874:	str	lr, [sp, #24]
    b878:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b87c:	cmp	r0, #0
    b880:	str	r4, [sp, #20]
    b884:	beq	b8d8 <flatcc_json_parser_coerce_int8+0x90>
    b888:	ldr	r0, [sp, #24]
    b88c:	ldr	r1, [sp, #28]
    b890:	subs	r0, r0, #129	; 0x81
    b894:	sbcs	r1, r1, #0
    b898:	str	r0, [sp, #16]
    b89c:	str	r1, [sp, #12]
    b8a0:	bcc	b8c4 <flatcc_json_parser_coerce_int8+0x7c>
    b8a4:	b	b8a8 <flatcc_json_parser_coerce_int8+0x60>
    b8a8:	ldr	r0, [fp, #-16]
    b8ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    b8b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b8b4:	movw	r3, #8
    b8b8:	bl	0 <flatcc_json_parser_set_error>
    b8bc:	str	r0, [fp, #-12]
    b8c0:	b	b928 <flatcc_json_parser_coerce_int8+0xe0>
    b8c4:	ldr	r0, [sp, #24]
    b8c8:	rsb	r0, r0, #0
    b8cc:	ldr	r1, [fp, #16]
    b8d0:	strb	r0, [r1]
    b8d4:	b	b920 <flatcc_json_parser_coerce_int8+0xd8>
    b8d8:	ldr	r0, [sp, #24]
    b8dc:	ldr	r1, [sp, #28]
    b8e0:	subs	r0, r0, #128	; 0x80
    b8e4:	sbcs	r1, r1, #0
    b8e8:	str	r0, [sp, #8]
    b8ec:	str	r1, [sp, #4]
    b8f0:	bcc	b914 <flatcc_json_parser_coerce_int8+0xcc>
    b8f4:	b	b8f8 <flatcc_json_parser_coerce_int8+0xb0>
    b8f8:	ldr	r0, [fp, #-16]
    b8fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    b900:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b904:	movw	r3, #7
    b908:	bl	0 <flatcc_json_parser_set_error>
    b90c:	str	r0, [fp, #-12]
    b910:	b	b928 <flatcc_json_parser_coerce_int8+0xe0>
    b914:	ldrb	r0, [sp, #24]
    b918:	ldr	r1, [fp, #16]
    b91c:	strb	r0, [r1]
    b920:	ldr	r0, [fp, #-20]	; 0xffffffec
    b924:	str	r0, [fp, #-12]
    b928:	ldr	r0, [fp, #-12]
    b92c:	sub	sp, fp, #8
    b930:	pop	{r4, sl, fp, pc}

0000b934 <flatcc_json_parser_constant_start>:
    b934:	push	{fp, lr}
    b938:	mov	fp, sp
    b93c:	sub	sp, sp, #16
    b940:	str	r0, [fp, #-4]
    b944:	str	r1, [sp, #8]
    b948:	str	r2, [sp, #4]
    b94c:	ldr	r0, [fp, #-4]
    b950:	ldr	r1, [sp, #8]
    b954:	ldr	r2, [sp, #4]
    b958:	bl	4db0 <flatcc_json_parser_symbol_start>
    b95c:	str	r0, [sp, #8]
    b960:	ldr	r0, [fp, #-4]
    b964:	ldr	r0, [r0, #12]
    b968:	cmp	r0, #0
    b96c:	bne	b984 <flatcc_json_parser_constant_start+0x50>
    b970:	ldr	r0, [fp, #-4]
    b974:	ldr	r1, [sp, #8]
    b978:	ldr	r2, [sp, #4]
    b97c:	bl	a310 <flatcc_json_parser_space>
    b980:	str	r0, [sp, #8]
    b984:	ldr	r0, [sp, #8]
    b988:	mov	sp, fp
    b98c:	pop	{fp, pc}

0000b990 <flatbuffers_int8_cast_to_pe>:
    b990:	sub	sp, sp, #4
    b994:	strb	r0, [sp, #3]
    b998:	ldrsb	r0, [sp, #3]
    b99c:	add	sp, sp, #4
    b9a0:	bx	lr

0000b9a4 <flatcc_json_parser_coerce_uint8>:
    b9a4:	push	{r4, sl, fp, lr}
    b9a8:	add	fp, sp, #8
    b9ac:	sub	sp, sp, #48	; 0x30
    b9b0:	ldr	ip, [fp, #12]
    b9b4:	ldr	lr, [fp, #8]
    b9b8:	ldr	r4, [fp, #16]
    b9bc:	str	r0, [fp, #-16]
    b9c0:	str	r1, [fp, #-20]	; 0xffffffec
    b9c4:	str	r2, [fp, #-24]	; 0xffffffe8
    b9c8:	str	r3, [sp, #28]
    b9cc:	str	ip, [sp, #20]
    b9d0:	str	lr, [sp, #16]
    b9d4:	ldr	r0, [sp, #28]
    b9d8:	cmp	r0, #0
    b9dc:	str	r4, [sp, #12]
    b9e0:	beq	ba00 <flatcc_json_parser_coerce_uint8+0x5c>
    b9e4:	ldr	r0, [fp, #-16]
    b9e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    b9ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b9f0:	movw	r3, #8
    b9f4:	bl	0 <flatcc_json_parser_set_error>
    b9f8:	str	r0, [fp, #-12]
    b9fc:	b	ba50 <flatcc_json_parser_coerce_uint8+0xac>
    ba00:	ldr	r0, [sp, #16]
    ba04:	ldr	r1, [sp, #20]
    ba08:	subs	r0, r0, #256	; 0x100
    ba0c:	sbcs	r1, r1, #0
    ba10:	str	r0, [sp, #8]
    ba14:	str	r1, [sp, #4]
    ba18:	bcc	ba3c <flatcc_json_parser_coerce_uint8+0x98>
    ba1c:	b	ba20 <flatcc_json_parser_coerce_uint8+0x7c>
    ba20:	ldr	r0, [fp, #-16]
    ba24:	ldr	r1, [fp, #-20]	; 0xffffffec
    ba28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ba2c:	movw	r3, #7
    ba30:	bl	0 <flatcc_json_parser_set_error>
    ba34:	str	r0, [fp, #-12]
    ba38:	b	ba50 <flatcc_json_parser_coerce_uint8+0xac>
    ba3c:	ldrb	r0, [sp, #16]
    ba40:	ldr	r1, [fp, #16]
    ba44:	strb	r0, [r1]
    ba48:	ldr	r0, [fp, #-20]	; 0xffffffec
    ba4c:	str	r0, [fp, #-12]
    ba50:	ldr	r0, [fp, #-12]
    ba54:	sub	sp, fp, #8
    ba58:	pop	{r4, sl, fp, pc}

0000ba5c <flatbuffers_uint8_cast_to_pe>:
    ba5c:	sub	sp, sp, #4
    ba60:	strb	r0, [sp, #3]
    ba64:	ldrb	r0, [sp, #3]
    ba68:	add	sp, sp, #4
    ba6c:	bx	lr

0000ba70 <flatcc_json_parser_coerce_int16>:
    ba70:	push	{r4, sl, fp, lr}
    ba74:	add	fp, sp, #8
    ba78:	sub	sp, sp, #56	; 0x38
    ba7c:	ldr	ip, [fp, #12]
    ba80:	ldr	lr, [fp, #8]
    ba84:	ldr	r4, [fp, #16]
    ba88:	str	r0, [fp, #-16]
    ba8c:	str	r1, [fp, #-20]	; 0xffffffec
    ba90:	str	r2, [fp, #-24]	; 0xffffffe8
    ba94:	str	r3, [fp, #-28]	; 0xffffffe4
    ba98:	str	ip, [sp, #28]
    ba9c:	str	lr, [sp, #24]
    baa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    baa4:	cmp	r0, #0
    baa8:	str	r4, [sp, #20]
    baac:	beq	bb04 <flatcc_json_parser_coerce_int16+0x94>
    bab0:	ldr	r0, [sp, #24]
    bab4:	ldr	r1, [sp, #28]
    bab8:	movw	r2, #32769	; 0x8001
    babc:	subs	r0, r0, r2
    bac0:	sbcs	r1, r1, #0
    bac4:	str	r0, [sp, #16]
    bac8:	str	r1, [sp, #12]
    bacc:	bcc	baf0 <flatcc_json_parser_coerce_int16+0x80>
    bad0:	b	bad4 <flatcc_json_parser_coerce_int16+0x64>
    bad4:	ldr	r0, [fp, #-16]
    bad8:	ldr	r1, [fp, #-20]	; 0xffffffec
    badc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bae0:	movw	r3, #8
    bae4:	bl	0 <flatcc_json_parser_set_error>
    bae8:	str	r0, [fp, #-12]
    baec:	b	bb54 <flatcc_json_parser_coerce_int16+0xe4>
    baf0:	ldr	r0, [sp, #24]
    baf4:	rsb	r0, r0, #0
    baf8:	ldr	r1, [fp, #16]
    bafc:	strh	r0, [r1]
    bb00:	b	bb4c <flatcc_json_parser_coerce_int16+0xdc>
    bb04:	ldr	r0, [sp, #24]
    bb08:	ldr	r1, [sp, #28]
    bb0c:	subs	r0, r0, #32768	; 0x8000
    bb10:	sbcs	r1, r1, #0
    bb14:	str	r0, [sp, #8]
    bb18:	str	r1, [sp, #4]
    bb1c:	bcc	bb40 <flatcc_json_parser_coerce_int16+0xd0>
    bb20:	b	bb24 <flatcc_json_parser_coerce_int16+0xb4>
    bb24:	ldr	r0, [fp, #-16]
    bb28:	ldr	r1, [fp, #-20]	; 0xffffffec
    bb2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bb30:	movw	r3, #7
    bb34:	bl	0 <flatcc_json_parser_set_error>
    bb38:	str	r0, [fp, #-12]
    bb3c:	b	bb54 <flatcc_json_parser_coerce_int16+0xe4>
    bb40:	ldrh	r0, [sp, #24]
    bb44:	ldr	r1, [fp, #16]
    bb48:	strh	r0, [r1]
    bb4c:	ldr	r0, [fp, #-20]	; 0xffffffec
    bb50:	str	r0, [fp, #-12]
    bb54:	ldr	r0, [fp, #-12]
    bb58:	sub	sp, fp, #8
    bb5c:	pop	{r4, sl, fp, pc}

0000bb60 <flatbuffers_int16_cast_to_pe>:
    bb60:	sub	sp, sp, #4
    bb64:	strh	r0, [sp, #2]
    bb68:	ldrsh	r0, [sp, #2]
    bb6c:	add	sp, sp, #4
    bb70:	bx	lr

0000bb74 <flatcc_json_parser_none>:
    bb74:	push	{fp, lr}
    bb78:	mov	fp, sp
    bb7c:	sub	sp, sp, #16
    bb80:	str	r0, [sp, #8]
    bb84:	str	r1, [sp, #4]
    bb88:	str	r2, [sp]
    bb8c:	ldr	r0, [sp]
    bb90:	ldr	r1, [sp, #4]
    bb94:	sub	r0, r0, r1
    bb98:	cmp	r0, #4
    bb9c:	blt	bbdc <flatcc_json_parser_none+0x68>
    bba0:	ldr	r0, [sp, #4]
    bba4:	ldr	r0, [r0]
    bba8:	movw	r1, #35474	; 0x8a92
    bbac:	movt	r1, #37779	; 0x9393
    bbb0:	add	r1, r0, r1
    bbb4:	movw	r2, #30062	; 0x756e
    bbb8:	movt	r2, #27756	; 0x6c6c
    bbbc:	cmp	r0, r2
    bbc0:	movwne	r1, #1
    bbc4:	cmp	r1, #0
    bbc8:	bne	bbdc <flatcc_json_parser_none+0x68>
    bbcc:	ldr	r0, [sp, #4]
    bbd0:	add	r0, r0, #4
    bbd4:	str	r0, [fp, #-4]
    bbd8:	b	bbf4 <flatcc_json_parser_none+0x80>
    bbdc:	ldr	r0, [sp, #8]
    bbe0:	ldr	r1, [sp, #4]
    bbe4:	ldr	r2, [sp]
    bbe8:	movw	r3, #26
    bbec:	bl	0 <flatcc_json_parser_set_error>
    bbf0:	str	r0, [fp, #-4]
    bbf4:	ldr	r0, [fp, #-4]
    bbf8:	mov	sp, fp
    bbfc:	pop	{fp, pc}

0000bc00 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    bc00:	push	{fp, lr}
    bc04:	mov	fp, sp
    bc08:	sub	sp, sp, #64	; 0x40
    bc0c:	str	r0, [fp, #-8]
    bc10:	str	r1, [fp, #-12]
    bc14:	str	r2, [fp, #-16]
    bc18:	str	r3, [fp, #-20]	; 0xffffffec
    bc1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    bc20:	movw	r1, #0
    bc24:	str	r1, [r0]
    bc28:	ldr	r0, [fp, #-8]
    bc2c:	ldr	r0, [r0]
    bc30:	movw	r1, #4
    bc34:	bl	0 <flatcc_builder_start_table>
    bc38:	cmp	r0, #0
    bc3c:	beq	bc44 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x44>
    bc40:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    bc44:	ldr	r0, [fp, #-8]
    bc48:	ldr	r1, [fp, #-12]
    bc4c:	ldr	r2, [fp, #-16]
    bc50:	sub	r3, fp, #24
    bc54:	bl	4ccc <flatcc_json_parser_object_start>
    bc58:	str	r0, [fp, #-12]
    bc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bc60:	cmp	r0, #0
    bc64:	beq	c1ec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ec>
    bc68:	ldr	r0, [fp, #-8]
    bc6c:	ldr	r1, [fp, #-12]
    bc70:	ldr	r2, [fp, #-16]
    bc74:	bl	4db0 <flatcc_json_parser_symbol_start>
    bc78:	str	r0, [fp, #-12]
    bc7c:	ldr	r0, [fp, #-12]
    bc80:	ldr	r1, [fp, #-16]
    bc84:	bl	4e5c <flatcc_json_parser_symbol_part>
    bc88:	str	r1, [sp, #20]
    bc8c:	str	r0, [sp, #16]
    bc90:	ldrh	r0, [sp, #18]
    bc94:	ldr	r1, [sp, #20]
    bc98:	movw	r2, #25455	; 0x636f
    bc9c:	eor	r2, r2, r1, lsr #16
    bca0:	orr	r0, r0, r1, lsl #16
    bca4:	movw	r1, #29234	; 0x7232
    bca8:	movt	r1, #27759	; 0x6c6f
    bcac:	eor	r0, r0, r1
    bcb0:	orr	r0, r0, r2
    bcb4:	cmp	r0, #0
    bcb8:	bne	bddc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1dc>
    bcbc:	b	bcc0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0xc0>
    bcc0:	ldr	r0, [fp, #-8]
    bcc4:	ldr	r1, [fp, #-12]
    bcc8:	str	r1, [sp, #24]
    bccc:	ldr	r2, [fp, #-16]
    bcd0:	movw	r3, #6
    bcd4:	bl	4e94 <flatcc_json_parser_match_symbol>
    bcd8:	str	r0, [fp, #-12]
    bcdc:	ldr	r0, [sp, #24]
    bce0:	ldr	r1, [fp, #-12]
    bce4:	cmp	r0, r1
    bce8:	beq	bdd4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d4>
    bcec:	movw	r0, #0
    bcf0:	strb	r0, [sp, #15]
    bcf4:	ldr	r0, [fp, #-8]
    bcf8:	ldr	r1, [fp, #-12]
    bcfc:	str	r1, [sp, #24]
    bd00:	ldr	r2, [fp, #-16]
    bd04:	add	r3, sp, #15
    bd08:	bl	6410 <flatcc_json_parser_int8>
    bd0c:	str	r0, [fp, #-12]
    bd10:	ldr	r0, [sp, #24]
    bd14:	ldr	r1, [fp, #-12]
    bd18:	cmp	r0, r1
    bd1c:	bne	bd70 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    bd20:	ldr	r0, [fp, #-8]
    bd24:	ldr	r1, [fp, #-12]
    bd28:	str	r1, [sp, #24]
    bd2c:	ldr	r2, [fp, #-16]
    bd30:	movw	r3, #0
    bd34:	movt	r3, #0
    bd38:	add	ip, sp, #15
    bd3c:	str	ip, [sp]
    bd40:	bl	64ec <flatcc_json_parser_symbolic_int8>
    bd44:	str	r0, [fp, #-12]
    bd48:	ldr	r0, [fp, #-12]
    bd4c:	ldr	r1, [sp, #24]
    bd50:	cmp	r0, r1
    bd54:	beq	bd68 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x168>
    bd58:	ldr	r0, [fp, #-12]
    bd5c:	ldr	r1, [fp, #-16]
    bd60:	cmp	r0, r1
    bd64:	bne	bd6c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x16c>
    bd68:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    bd6c:	b	bd70 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    bd70:	ldrsb	r0, [sp, #15]
    bd74:	cmp	r0, #2
    bd78:	bne	bd90 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x190>
    bd7c:	ldr	r0, [fp, #-8]
    bd80:	ldr	r0, [r0, #8]
    bd84:	and	r0, r0, #2
    bd88:	cmp	r0, #0
    bd8c:	beq	bdd0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d0>
    bd90:	ldr	r0, [fp, #-8]
    bd94:	ldr	r0, [r0]
    bd98:	movw	r1, #1
    bd9c:	str	r1, [sp, #8]
    bda0:	ldr	r2, [sp, #8]
    bda4:	movw	r3, #1
    bda8:	uxth	r3, r3
    bdac:	bl	0 <flatcc_builder_table_add>
    bdb0:	str	r0, [fp, #-28]	; 0xffffffe4
    bdb4:	movw	r1, #0
    bdb8:	cmp	r0, r1
    bdbc:	bne	bdc4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1c4>
    bdc0:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    bdc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bdc8:	ldrsb	r1, [sp, #15]
    bdcc:	bl	6718 <flatbuffers_int8_write_to_pe>
    bdd0:	b	bdd8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d8>
    bdd4:	b	bf2c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    bdd8:	b	bf28 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    bddc:	ldr	r0, [sp, #16]
    bde0:	ldr	r1, [sp, #20]
    bde4:	and	r0, r0, #-16777216	; 0xff000000
    bde8:	movw	r2, #27759	; 0x6c6f
    bdec:	movt	r2, #25455	; 0x636f
    bdf0:	eor	r1, r1, r2
    bdf4:	eor	r0, r0, #1912602624	; 0x72000000
    bdf8:	orr	r0, r0, r1
    bdfc:	cmp	r0, #0
    be00:	bne	bf20 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    be04:	b	be08 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x208>
    be08:	ldr	r0, [fp, #-8]
    be0c:	ldr	r1, [fp, #-12]
    be10:	str	r1, [sp, #24]
    be14:	ldr	r2, [fp, #-16]
    be18:	movw	r3, #5
    be1c:	bl	4e94 <flatcc_json_parser_match_symbol>
    be20:	str	r0, [fp, #-12]
    be24:	ldr	r0, [sp, #24]
    be28:	ldr	r1, [fp, #-12]
    be2c:	cmp	r0, r1
    be30:	beq	bf18 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x318>
    be34:	movw	r0, #0
    be38:	strb	r0, [sp, #14]
    be3c:	ldr	r0, [fp, #-8]
    be40:	ldr	r1, [fp, #-12]
    be44:	str	r1, [sp, #24]
    be48:	ldr	r2, [fp, #-16]
    be4c:	add	r3, sp, #14
    be50:	bl	6410 <flatcc_json_parser_int8>
    be54:	str	r0, [fp, #-12]
    be58:	ldr	r0, [sp, #24]
    be5c:	ldr	r1, [fp, #-12]
    be60:	cmp	r0, r1
    be64:	bne	beb8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b8>
    be68:	ldr	r0, [fp, #-8]
    be6c:	ldr	r1, [fp, #-12]
    be70:	str	r1, [sp, #24]
    be74:	ldr	r2, [fp, #-16]
    be78:	movw	r3, #0
    be7c:	movt	r3, #0
    be80:	add	ip, sp, #14
    be84:	str	ip, [sp]
    be88:	bl	64ec <flatcc_json_parser_symbolic_int8>
    be8c:	str	r0, [fp, #-12]
    be90:	ldr	r0, [fp, #-12]
    be94:	ldr	r1, [sp, #24]
    be98:	cmp	r0, r1
    be9c:	beq	beb0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b0>
    bea0:	ldr	r0, [fp, #-12]
    bea4:	ldr	r1, [fp, #-16]
    bea8:	cmp	r0, r1
    beac:	bne	beb4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    beb0:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    beb4:	b	beb8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b8>
    beb8:	ldrsb	r0, [sp, #14]
    bebc:	cmp	r0, #2
    bec0:	bne	bed8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    bec4:	ldr	r0, [fp, #-8]
    bec8:	ldr	r0, [r0, #8]
    becc:	and	r0, r0, #2
    bed0:	cmp	r0, #0
    bed4:	beq	bf14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x314>
    bed8:	ldr	r0, [fp, #-8]
    bedc:	ldr	r0, [r0]
    bee0:	movw	r1, #0
    bee4:	movw	r2, #1
    bee8:	movw	r3, #1
    beec:	uxth	r3, r3
    bef0:	bl	0 <flatcc_builder_table_add>
    bef4:	str	r0, [fp, #-28]	; 0xffffffe4
    bef8:	movw	r1, #0
    befc:	cmp	r0, r1
    bf00:	bne	bf08 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x308>
    bf04:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    bf08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf0c:	ldrsb	r1, [sp, #14]
    bf10:	bl	6718 <flatbuffers_int8_write_to_pe>
    bf14:	b	bf1c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x31c>
    bf18:	b	bf2c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    bf1c:	b	bf24 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    bf20:	b	bf2c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    bf24:	b	bf28 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    bf28:	b	c1d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5d0>
    bf2c:	ldr	r0, [sp, #20]
    bf30:	bic	r0, r0, #255	; 0xff
    bf34:	movw	r1, #12800	; 0x3200
    bf38:	movt	r1, #30051	; 0x7563
    bf3c:	teq	r0, r1
    bf40:	bne	c070 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x470>
    bf44:	b	bf48 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x348>
    bf48:	ldr	r0, [fp, #-8]
    bf4c:	ldr	r1, [fp, #-12]
    bf50:	str	r1, [sp, #24]
    bf54:	ldr	r2, [fp, #-16]
    bf58:	movw	r3, #3
    bf5c:	bl	4e94 <flatcc_json_parser_match_symbol>
    bf60:	str	r0, [fp, #-12]
    bf64:	ldr	r0, [sp, #24]
    bf68:	ldr	r1, [fp, #-12]
    bf6c:	cmp	r0, r1
    bf70:	beq	c058 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x458>
    bf74:	movw	r0, #0
    bf78:	strb	r0, [sp, #13]
    bf7c:	ldr	r0, [fp, #-8]
    bf80:	ldr	r1, [fp, #-12]
    bf84:	str	r1, [sp, #24]
    bf88:	ldr	r2, [fp, #-16]
    bf8c:	add	r3, sp, #13
    bf90:	bl	6828 <flatcc_json_parser_uint8>
    bf94:	str	r0, [fp, #-12]
    bf98:	ldr	r0, [sp, #24]
    bf9c:	ldr	r1, [fp, #-12]
    bfa0:	cmp	r0, r1
    bfa4:	bne	bff8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f8>
    bfa8:	ldr	r0, [fp, #-8]
    bfac:	ldr	r1, [fp, #-12]
    bfb0:	str	r1, [sp, #24]
    bfb4:	ldr	r2, [fp, #-16]
    bfb8:	movw	r3, #0
    bfbc:	movt	r3, #0
    bfc0:	add	ip, sp, #13
    bfc4:	str	ip, [sp]
    bfc8:	bl	6904 <flatcc_json_parser_symbolic_uint8>
    bfcc:	str	r0, [fp, #-12]
    bfd0:	ldr	r0, [fp, #-12]
    bfd4:	ldr	r1, [sp, #24]
    bfd8:	cmp	r0, r1
    bfdc:	beq	bff0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f0>
    bfe0:	ldr	r0, [fp, #-12]
    bfe4:	ldr	r1, [fp, #-16]
    bfe8:	cmp	r0, r1
    bfec:	bne	bff4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    bff0:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    bff4:	b	bff8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f8>
    bff8:	ldrb	r0, [sp, #13]
    bffc:	cmp	r0, #2
    c000:	bne	c018 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x418>
    c004:	ldr	r0, [fp, #-8]
    c008:	ldr	r0, [r0, #8]
    c00c:	and	r0, r0, #2
    c010:	cmp	r0, #0
    c014:	beq	c054 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x454>
    c018:	ldr	r0, [fp, #-8]
    c01c:	ldr	r0, [r0]
    c020:	movw	r1, #3
    c024:	movw	r2, #1
    c028:	movw	r3, #1
    c02c:	uxth	r3, r3
    c030:	bl	0 <flatcc_builder_table_add>
    c034:	str	r0, [fp, #-28]	; 0xffffffe4
    c038:	movw	r1, #0
    c03c:	cmp	r0, r1
    c040:	bne	c048 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x448>
    c044:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    c048:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c04c:	ldrb	r1, [sp, #13]
    c050:	bl	6b30 <flatbuffers_uint8_write_to_pe>
    c054:	b	c06c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    c058:	ldr	r0, [fp, #-8]
    c05c:	ldr	r1, [fp, #-12]
    c060:	ldr	r2, [fp, #-16]
    c064:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c068:	str	r0, [fp, #-12]
    c06c:	b	c1cc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    c070:	ldr	r0, [sp, #20]
    c074:	bfc	r0, #0, #16
    c078:	movw	r1, #0
    c07c:	movt	r1, #30051	; 0x7563
    c080:	teq	r0, r1
    c084:	bne	c1b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    c088:	b	c08c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x48c>
    c08c:	ldr	r0, [fp, #-8]
    c090:	ldr	r1, [fp, #-12]
    c094:	str	r1, [sp, #24]
    c098:	ldr	r2, [fp, #-16]
    c09c:	movw	r3, #2
    c0a0:	bl	4e94 <flatcc_json_parser_match_symbol>
    c0a4:	str	r0, [fp, #-12]
    c0a8:	ldr	r0, [sp, #24]
    c0ac:	ldr	r1, [fp, #-12]
    c0b0:	cmp	r0, r1
    c0b4:	beq	c19c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x59c>
    c0b8:	movw	r0, #0
    c0bc:	strb	r0, [sp, #12]
    c0c0:	ldr	r0, [fp, #-8]
    c0c4:	ldr	r1, [fp, #-12]
    c0c8:	str	r1, [sp, #24]
    c0cc:	ldr	r2, [fp, #-16]
    c0d0:	add	r3, sp, #12
    c0d4:	bl	6828 <flatcc_json_parser_uint8>
    c0d8:	str	r0, [fp, #-12]
    c0dc:	ldr	r0, [sp, #24]
    c0e0:	ldr	r1, [fp, #-12]
    c0e4:	cmp	r0, r1
    c0e8:	bne	c13c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x53c>
    c0ec:	ldr	r0, [fp, #-8]
    c0f0:	ldr	r1, [fp, #-12]
    c0f4:	str	r1, [sp, #24]
    c0f8:	ldr	r2, [fp, #-16]
    c0fc:	movw	r3, #0
    c100:	movt	r3, #0
    c104:	add	ip, sp, #12
    c108:	str	ip, [sp]
    c10c:	bl	6904 <flatcc_json_parser_symbolic_uint8>
    c110:	str	r0, [fp, #-12]
    c114:	ldr	r0, [fp, #-12]
    c118:	ldr	r1, [sp, #24]
    c11c:	cmp	r0, r1
    c120:	beq	c134 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    c124:	ldr	r0, [fp, #-12]
    c128:	ldr	r1, [fp, #-16]
    c12c:	cmp	r0, r1
    c130:	bne	c138 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x538>
    c134:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    c138:	b	c13c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x53c>
    c13c:	ldrb	r0, [sp, #12]
    c140:	cmp	r0, #2
    c144:	bne	c15c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x55c>
    c148:	ldr	r0, [fp, #-8]
    c14c:	ldr	r0, [r0, #8]
    c150:	and	r0, r0, #2
    c154:	cmp	r0, #0
    c158:	beq	c198 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x598>
    c15c:	ldr	r0, [fp, #-8]
    c160:	ldr	r0, [r0]
    c164:	movw	r1, #2
    c168:	movw	r2, #1
    c16c:	movw	r3, #1
    c170:	uxth	r3, r3
    c174:	bl	0 <flatcc_builder_table_add>
    c178:	str	r0, [fp, #-28]	; 0xffffffe4
    c17c:	movw	r1, #0
    c180:	cmp	r0, r1
    c184:	bne	c18c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x58c>
    c188:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    c18c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c190:	ldrb	r1, [sp, #12]
    c194:	bl	6b30 <flatbuffers_uint8_write_to_pe>
    c198:	b	c1b0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b0>
    c19c:	ldr	r0, [fp, #-8]
    c1a0:	ldr	r1, [fp, #-12]
    c1a4:	ldr	r2, [fp, #-16]
    c1a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c1ac:	str	r0, [fp, #-12]
    c1b0:	b	c1c8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    c1b4:	ldr	r0, [fp, #-8]
    c1b8:	ldr	r1, [fp, #-12]
    c1bc:	ldr	r2, [fp, #-16]
    c1c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c1c4:	str	r0, [fp, #-12]
    c1c8:	b	c1cc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    c1cc:	b	c1d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5d0>
    c1d0:	ldr	r0, [fp, #-8]
    c1d4:	ldr	r1, [fp, #-12]
    c1d8:	ldr	r2, [fp, #-16]
    c1dc:	sub	r3, fp, #24
    c1e0:	bl	a1ac <flatcc_json_parser_object_end>
    c1e4:	str	r0, [fp, #-12]
    c1e8:	b	bc5c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c>
    c1ec:	ldr	r0, [fp, #-8]
    c1f0:	ldr	r0, [r0, #24]
    c1f4:	cmp	r0, #0
    c1f8:	beq	c200 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x600>
    c1fc:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    c200:	ldr	r0, [fp, #-8]
    c204:	ldr	r0, [r0]
    c208:	bl	0 <flatcc_builder_end_table>
    c20c:	ldr	lr, [fp, #-20]	; 0xffffffec
    c210:	str	r0, [lr]
    c214:	cmp	r0, #0
    c218:	bne	c220 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x620>
    c21c:	b	c22c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    c220:	ldr	r0, [fp, #-12]
    c224:	str	r0, [fp, #-4]
    c228:	b	c244 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x644>
    c22c:	ldr	r0, [fp, #-8]
    c230:	ldr	r1, [fp, #-12]
    c234:	ldr	r2, [fp, #-16]
    c238:	movw	r3, #33	; 0x21
    c23c:	bl	0 <flatcc_json_parser_set_error>
    c240:	str	r0, [fp, #-4]
    c244:	ldr	r0, [fp, #-4]
    c248:	mov	sp, fp
    c24c:	pop	{fp, pc}

0000c250 <MyGame_Example2_Monster_parse_json_table>:
    c250:	push	{fp, lr}
    c254:	mov	fp, sp
    c258:	sub	sp, sp, #24
    c25c:	str	r0, [fp, #-8]
    c260:	str	r1, [sp, #12]
    c264:	str	r2, [sp, #8]
    c268:	str	r3, [sp, #4]
    c26c:	ldr	r0, [sp, #4]
    c270:	movw	r1, #0
    c274:	str	r1, [r0]
    c278:	ldr	r0, [fp, #-8]
    c27c:	ldr	r0, [r0]
    c280:	bl	0 <flatcc_builder_start_table>
    c284:	cmp	r0, #0
    c288:	beq	c290 <MyGame_Example2_Monster_parse_json_table+0x40>
    c28c:	b	c338 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c290:	ldr	r0, [fp, #-8]
    c294:	ldr	r1, [sp, #12]
    c298:	ldr	r2, [sp, #8]
    c29c:	mov	r3, sp
    c2a0:	bl	4ccc <flatcc_json_parser_object_start>
    c2a4:	str	r0, [sp, #12]
    c2a8:	ldr	r0, [sp]
    c2ac:	cmp	r0, #0
    c2b0:	beq	c2f8 <MyGame_Example2_Monster_parse_json_table+0xa8>
    c2b4:	ldr	r0, [fp, #-8]
    c2b8:	ldr	r1, [sp, #12]
    c2bc:	ldr	r2, [sp, #8]
    c2c0:	bl	4db0 <flatcc_json_parser_symbol_start>
    c2c4:	str	r0, [sp, #12]
    c2c8:	ldr	r0, [fp, #-8]
    c2cc:	ldr	r1, [sp, #12]
    c2d0:	ldr	r2, [sp, #8]
    c2d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c2d8:	str	r0, [sp, #12]
    c2dc:	ldr	r0, [fp, #-8]
    c2e0:	ldr	r1, [sp, #12]
    c2e4:	ldr	r2, [sp, #8]
    c2e8:	mov	r3, sp
    c2ec:	bl	a1ac <flatcc_json_parser_object_end>
    c2f0:	str	r0, [sp, #12]
    c2f4:	b	c2a8 <MyGame_Example2_Monster_parse_json_table+0x58>
    c2f8:	ldr	r0, [fp, #-8]
    c2fc:	ldr	r0, [r0, #24]
    c300:	cmp	r0, #0
    c304:	beq	c30c <MyGame_Example2_Monster_parse_json_table+0xbc>
    c308:	b	c338 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c30c:	ldr	r0, [fp, #-8]
    c310:	ldr	r0, [r0]
    c314:	bl	0 <flatcc_builder_end_table>
    c318:	ldr	lr, [sp, #4]
    c31c:	str	r0, [lr]
    c320:	cmp	r0, #0
    c324:	bne	c32c <MyGame_Example2_Monster_parse_json_table+0xdc>
    c328:	b	c338 <MyGame_Example2_Monster_parse_json_table+0xe8>
    c32c:	ldr	r0, [sp, #12]
    c330:	str	r0, [fp, #-4]
    c334:	b	c350 <MyGame_Example2_Monster_parse_json_table+0x100>
    c338:	ldr	r0, [fp, #-8]
    c33c:	ldr	r1, [sp, #12]
    c340:	ldr	r2, [sp, #8]
    c344:	movw	r3, #33	; 0x21
    c348:	bl	0 <flatcc_json_parser_set_error>
    c34c:	str	r0, [fp, #-4]
    c350:	ldr	r0, [fp, #-4]
    c354:	mov	sp, fp
    c358:	pop	{fp, pc}

0000c35c <MyGame_Example_Alt_parse_json_table>:
    c35c:	push	{fp, lr}
    c360:	mov	fp, sp
    c364:	sub	sp, sp, #88	; 0x58
    c368:	str	r0, [fp, #-8]
    c36c:	str	r1, [fp, #-12]
    c370:	str	r2, [fp, #-16]
    c374:	str	r3, [fp, #-20]	; 0xffffffec
    c378:	ldr	r0, [fp, #-20]	; 0xffffffec
    c37c:	movw	r1, #0
    c380:	str	r1, [r0]
    c384:	ldr	r0, [fp, #-8]
    c388:	ldr	r0, [r0]
    c38c:	movw	r1, #4
    c390:	bl	0 <flatcc_builder_start_table>
    c394:	cmp	r0, #0
    c398:	beq	c3a0 <MyGame_Example_Alt_parse_json_table+0x44>
    c39c:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c3a0:	ldr	r0, [fp, #-16]
    c3a4:	ldr	r1, [fp, #-8]
    c3a8:	ldr	r2, [fp, #-12]
    c3ac:	ldr	r3, [fp, #-16]
    c3b0:	str	r0, [sp, #32]
    c3b4:	mov	r0, r1
    c3b8:	mov	r1, r2
    c3bc:	mov	r2, r3
    c3c0:	movw	r3, #1
    c3c4:	add	ip, sp, #36	; 0x24
    c3c8:	str	ip, [sp]
    c3cc:	bl	0 <flatcc_json_parser_prepare_unions>
    c3d0:	ldr	r1, [sp, #32]
    c3d4:	cmp	r1, r0
    c3d8:	bne	c3e0 <MyGame_Example_Alt_parse_json_table+0x84>
    c3dc:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c3e0:	ldr	r0, [fp, #-8]
    c3e4:	ldr	r1, [fp, #-12]
    c3e8:	ldr	r2, [fp, #-16]
    c3ec:	sub	r3, fp, #24
    c3f0:	bl	4ccc <flatcc_json_parser_object_start>
    c3f4:	str	r0, [fp, #-12]
    c3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c3fc:	cmp	r0, #0
    c400:	beq	c7dc <MyGame_Example_Alt_parse_json_table+0x480>
    c404:	ldr	r0, [fp, #-8]
    c408:	ldr	r1, [fp, #-12]
    c40c:	ldr	r2, [fp, #-16]
    c410:	bl	4db0 <flatcc_json_parser_symbol_start>
    c414:	str	r0, [fp, #-12]
    c418:	ldr	r0, [fp, #-12]
    c41c:	ldr	r1, [fp, #-16]
    c420:	bl	4e5c <flatcc_json_parser_symbol_part>
    c424:	str	r1, [sp, #44]	; 0x2c
    c428:	str	r0, [sp, #40]	; 0x28
    c42c:	ldr	r0, [sp, #40]	; 0x28
    c430:	ldr	r1, [sp, #44]	; 0x2c
    c434:	movw	r2, #28281	; 0x6e79
    c438:	movt	r2, #28001	; 0x6d61
    c43c:	eor	r1, r1, r2
    c440:	movw	r2, #31071	; 0x795f
    c444:	movt	r2, #24942	; 0x616e
    c448:	eor	r0, r0, r2
    c44c:	orr	r0, r0, r1
    c450:	cmp	r0, #0
    c454:	bne	c550 <MyGame_Example_Alt_parse_json_table+0x1f4>
    c458:	b	c45c <MyGame_Example_Alt_parse_json_table+0x100>
    c45c:	ldr	r0, [fp, #-12]
    c460:	add	r0, r0, #8
    c464:	str	r0, [fp, #-12]
    c468:	ldr	r0, [fp, #-12]
    c46c:	ldr	r1, [fp, #-16]
    c470:	bl	4e5c <flatcc_json_parser_symbol_part>
    c474:	str	r1, [sp, #44]	; 0x2c
    c478:	str	r0, [sp, #40]	; 0x28
    c47c:	ldr	r0, [sp, #44]	; 0x2c
    c480:	movw	r1, #28773	; 0x7065
    c484:	movt	r1, #29817	; 0x7479
    c488:	teq	r0, r1
    c48c:	bne	c538 <MyGame_Example_Alt_parse_json_table+0x1dc>
    c490:	b	c494 <MyGame_Example_Alt_parse_json_table+0x138>
    c494:	ldr	r0, [fp, #-8]
    c498:	ldr	r1, [fp, #-12]
    c49c:	str	r1, [fp, #-40]	; 0xffffffd8
    c4a0:	ldr	r2, [fp, #-16]
    c4a4:	movw	r3, #4
    c4a8:	bl	4e94 <flatcc_json_parser_match_symbol>
    c4ac:	str	r0, [fp, #-12]
    c4b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c4b4:	ldr	r1, [fp, #-12]
    c4b8:	cmp	r0, r1
    c4bc:	beq	c520 <MyGame_Example_Alt_parse_json_table+0x1c4>
    c4c0:	ldr	r0, [fp, #-8]
    c4c4:	ldr	r1, [fp, #-12]
    c4c8:	ldr	r2, [fp, #-16]
    c4cc:	ldr	r3, [sp, #36]	; 0x24
    c4d0:	movw	ip, #0
    c4d4:	str	r3, [sp, #28]
    c4d8:	mov	r3, ip
    c4dc:	movw	ip, #3
    c4e0:	uxth	ip, ip
    c4e4:	str	ip, [sp]
    c4e8:	ldr	ip, [sp, #28]
    c4ec:	str	ip, [sp, #4]
    c4f0:	movw	lr, #0
    c4f4:	movt	lr, #0
    c4f8:	str	lr, [sp, #8]
    c4fc:	movw	lr, #0
    c500:	movt	lr, #0
    c504:	str	lr, [sp, #12]
    c508:	movw	lr, #0
    c50c:	movt	lr, #0
    c510:	str	lr, [sp, #16]
    c514:	bl	0 <flatcc_json_parser_union_type_vector>
    c518:	str	r0, [fp, #-12]
    c51c:	b	c534 <MyGame_Example_Alt_parse_json_table+0x1d8>
    c520:	ldr	r0, [fp, #-8]
    c524:	ldr	r1, [fp, #-12]
    c528:	ldr	r2, [fp, #-16]
    c52c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c530:	str	r0, [fp, #-12]
    c534:	b	c54c <MyGame_Example_Alt_parse_json_table+0x1f0>
    c538:	ldr	r0, [fp, #-8]
    c53c:	ldr	r1, [fp, #-12]
    c540:	ldr	r2, [fp, #-16]
    c544:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c548:	str	r0, [fp, #-12]
    c54c:	b	c7c0 <MyGame_Example_Alt_parse_json_table+0x464>
    c550:	ldr	r0, [sp, #40]	; 0x28
    c554:	ldr	r1, [sp, #44]	; 0x2c
    c558:	movw	r2, #24942	; 0x616e
    c55c:	movt	r2, #109	; 0x6d
    c560:	eor	r2, r2, r1, lsr #8
    c564:	lsr	r0, r0, #8
    c568:	orr	r0, r0, r1, lsl #24
    c56c:	movw	r1, #28281	; 0x6e79
    c570:	movt	r1, #31073	; 0x7961
    c574:	eor	r0, r0, r1
    c578:	orr	r0, r0, r2
    c57c:	cmp	r0, #0
    c580:	bne	c604 <MyGame_Example_Alt_parse_json_table+0x2a8>
    c584:	b	c588 <MyGame_Example_Alt_parse_json_table+0x22c>
    c588:	ldr	r0, [fp, #-8]
    c58c:	ldr	r1, [fp, #-12]
    c590:	str	r1, [fp, #-40]	; 0xffffffd8
    c594:	ldr	r2, [fp, #-16]
    c598:	movw	r3, #7
    c59c:	bl	4e94 <flatcc_json_parser_match_symbol>
    c5a0:	str	r0, [fp, #-12]
    c5a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c5a8:	ldr	r1, [fp, #-12]
    c5ac:	cmp	r0, r1
    c5b0:	beq	c5fc <MyGame_Example_Alt_parse_json_table+0x2a0>
    c5b4:	ldr	r0, [fp, #-8]
    c5b8:	ldr	r1, [fp, #-12]
    c5bc:	ldr	r2, [fp, #-16]
    c5c0:	ldr	r3, [sp, #36]	; 0x24
    c5c4:	movw	ip, #0
    c5c8:	str	r3, [sp, #24]
    c5cc:	mov	r3, ip
    c5d0:	movw	ip, #3
    c5d4:	uxth	ip, ip
    c5d8:	str	ip, [sp]
    c5dc:	ldr	ip, [sp, #24]
    c5e0:	str	ip, [sp, #4]
    c5e4:	movw	lr, #0
    c5e8:	movt	lr, #0
    c5ec:	str	lr, [sp, #8]
    c5f0:	bl	0 <flatcc_json_parser_union_vector>
    c5f4:	str	r0, [fp, #-12]
    c5f8:	b	c600 <MyGame_Example_Alt_parse_json_table+0x2a4>
    c5fc:	b	c60c <MyGame_Example_Alt_parse_json_table+0x2b0>
    c600:	b	c608 <MyGame_Example_Alt_parse_json_table+0x2ac>
    c604:	b	c60c <MyGame_Example_Alt_parse_json_table+0x2b0>
    c608:	b	c7bc <MyGame_Example_Alt_parse_json_table+0x460>
    c60c:	ldrh	r0, [sp, #42]	; 0x2a
    c610:	ldr	r1, [sp, #44]	; 0x2c
    c614:	movw	r2, #28786	; 0x7072
    c618:	eor	r2, r2, r1, lsr #16
    c61c:	orr	r0, r0, r1, lsl #16
    c620:	movw	r1, #27000	; 0x6978
    c624:	movt	r1, #25958	; 0x6566
    c628:	eor	r0, r0, r1
    c62c:	orr	r0, r0, r2
    c630:	cmp	r0, #0
    c634:	bne	c6d8 <MyGame_Example_Alt_parse_json_table+0x37c>
    c638:	b	c63c <MyGame_Example_Alt_parse_json_table+0x2e0>
    c63c:	ldr	r0, [fp, #-8]
    c640:	ldr	r1, [fp, #-12]
    c644:	str	r1, [fp, #-40]	; 0xffffffd8
    c648:	ldr	r2, [fp, #-16]
    c64c:	movw	r3, #6
    c650:	bl	4e94 <flatcc_json_parser_match_symbol>
    c654:	str	r0, [fp, #-12]
    c658:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c65c:	ldr	r1, [fp, #-12]
    c660:	cmp	r0, r1
    c664:	beq	c6c0 <MyGame_Example_Alt_parse_json_table+0x364>
    c668:	ldr	r0, [fp, #-8]
    c66c:	ldr	r1, [fp, #-12]
    c670:	ldr	r2, [fp, #-16]
    c674:	sub	r3, fp, #32
    c678:	bl	c8e8 <MyGame_Example_TestJSONPrefix_parse_json_table>
    c67c:	str	r0, [fp, #-12]
    c680:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c684:	cmp	r0, #0
    c688:	beq	c6ac <MyGame_Example_Alt_parse_json_table+0x350>
    c68c:	ldr	r0, [fp, #-8]
    c690:	ldr	r0, [r0]
    c694:	movw	r1, #0
    c698:	bl	0 <flatcc_builder_table_add_offset>
    c69c:	str	r0, [fp, #-36]	; 0xffffffdc
    c6a0:	movw	r1, #0
    c6a4:	cmp	r0, r1
    c6a8:	bne	c6b0 <MyGame_Example_Alt_parse_json_table+0x354>
    c6ac:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c6b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c6b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c6b8:	str	r0, [r1]
    c6bc:	b	c6d4 <MyGame_Example_Alt_parse_json_table+0x378>
    c6c0:	ldr	r0, [fp, #-8]
    c6c4:	ldr	r1, [fp, #-12]
    c6c8:	ldr	r2, [fp, #-16]
    c6cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6d0:	str	r0, [fp, #-12]
    c6d4:	b	c7b8 <MyGame_Example_Alt_parse_json_table+0x45c>
    c6d8:	ldr	r0, [sp, #40]	; 0x28
    c6dc:	ldr	r1, [sp, #44]	; 0x2c
    c6e0:	and	r0, r0, #-16777216	; 0xff000000
    c6e4:	movw	r2, #30313	; 0x7669
    c6e8:	movt	r2, #28015	; 0x6d6f
    c6ec:	eor	r1, r1, r2
    c6f0:	eor	r0, r0, #1694498816	; 0x65000000
    c6f4:	orr	r0, r0, r1
    c6f8:	cmp	r0, #0
    c6fc:	bne	c7a0 <MyGame_Example_Alt_parse_json_table+0x444>
    c700:	b	c704 <MyGame_Example_Alt_parse_json_table+0x3a8>
    c704:	ldr	r0, [fp, #-8]
    c708:	ldr	r1, [fp, #-12]
    c70c:	str	r1, [fp, #-40]	; 0xffffffd8
    c710:	ldr	r2, [fp, #-16]
    c714:	movw	r3, #5
    c718:	bl	4e94 <flatcc_json_parser_match_symbol>
    c71c:	str	r0, [fp, #-12]
    c720:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c724:	ldr	r1, [fp, #-12]
    c728:	cmp	r0, r1
    c72c:	beq	c788 <MyGame_Example_Alt_parse_json_table+0x42c>
    c730:	ldr	r0, [fp, #-8]
    c734:	ldr	r1, [fp, #-12]
    c738:	ldr	r2, [fp, #-16]
    c73c:	sub	r3, fp, #32
    c740:	bl	cd2c <Fantasy_Movie_parse_json_table>
    c744:	str	r0, [fp, #-12]
    c748:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c74c:	cmp	r0, #0
    c750:	beq	c774 <MyGame_Example_Alt_parse_json_table+0x418>
    c754:	ldr	r0, [fp, #-8]
    c758:	ldr	r0, [r0]
    c75c:	movw	r1, #1
    c760:	bl	0 <flatcc_builder_table_add_offset>
    c764:	str	r0, [fp, #-36]	; 0xffffffdc
    c768:	movw	r1, #0
    c76c:	cmp	r0, r1
    c770:	bne	c778 <MyGame_Example_Alt_parse_json_table+0x41c>
    c774:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c778:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c77c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c780:	str	r0, [r1]
    c784:	b	c79c <MyGame_Example_Alt_parse_json_table+0x440>
    c788:	ldr	r0, [fp, #-8]
    c78c:	ldr	r1, [fp, #-12]
    c790:	ldr	r2, [fp, #-16]
    c794:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c798:	str	r0, [fp, #-12]
    c79c:	b	c7b4 <MyGame_Example_Alt_parse_json_table+0x458>
    c7a0:	ldr	r0, [fp, #-8]
    c7a4:	ldr	r1, [fp, #-12]
    c7a8:	ldr	r2, [fp, #-16]
    c7ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7b0:	str	r0, [fp, #-12]
    c7b4:	b	c7b8 <MyGame_Example_Alt_parse_json_table+0x45c>
    c7b8:	b	c7bc <MyGame_Example_Alt_parse_json_table+0x460>
    c7bc:	b	c7c0 <MyGame_Example_Alt_parse_json_table+0x464>
    c7c0:	ldr	r0, [fp, #-8]
    c7c4:	ldr	r1, [fp, #-12]
    c7c8:	ldr	r2, [fp, #-16]
    c7cc:	sub	r3, fp, #24
    c7d0:	bl	a1ac <flatcc_json_parser_object_end>
    c7d4:	str	r0, [fp, #-12]
    c7d8:	b	c3f8 <MyGame_Example_Alt_parse_json_table+0x9c>
    c7dc:	ldr	r0, [fp, #-8]
    c7e0:	ldr	r0, [r0, #24]
    c7e4:	cmp	r0, #0
    c7e8:	beq	c7f0 <MyGame_Example_Alt_parse_json_table+0x494>
    c7ec:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c7f0:	ldr	r0, [fp, #-8]
    c7f4:	ldr	r1, [fp, #-12]
    c7f8:	ldr	r2, [fp, #-16]
    c7fc:	ldr	r3, [sp, #36]	; 0x24
    c800:	bl	0 <flatcc_json_parser_finalize_unions>
    c804:	str	r0, [fp, #-12]
    c808:	ldr	r0, [fp, #-8]
    c80c:	ldr	r0, [r0]
    c810:	bl	0 <flatcc_builder_end_table>
    c814:	ldr	r1, [fp, #-20]	; 0xffffffec
    c818:	str	r0, [r1]
    c81c:	cmp	r0, #0
    c820:	bne	c828 <MyGame_Example_Alt_parse_json_table+0x4cc>
    c824:	b	c834 <MyGame_Example_Alt_parse_json_table+0x4d8>
    c828:	ldr	r0, [fp, #-12]
    c82c:	str	r0, [fp, #-4]
    c830:	b	c84c <MyGame_Example_Alt_parse_json_table+0x4f0>
    c834:	ldr	r0, [fp, #-8]
    c838:	ldr	r1, [fp, #-12]
    c83c:	ldr	r2, [fp, #-16]
    c840:	movw	r3, #33	; 0x21
    c844:	bl	0 <flatcc_json_parser_set_error>
    c848:	str	r0, [fp, #-4]
    c84c:	ldr	r0, [fp, #-4]
    c850:	mov	sp, fp
    c854:	pop	{fp, pc}

0000c858 <MyGame_Example_Any_json_union_accept_type>:
    c858:	sub	sp, sp, #12
    c85c:	strb	r0, [sp, #7]
    c860:	ldrb	r0, [sp, #7]
    c864:	mov	r1, r0
    c868:	cmp	r0, #4
    c86c:	str	r1, [sp]
    c870:	bhi	c8d4 <MyGame_Example_Any_json_union_accept_type+0x7c>
    c874:	add	r0, pc, #8
    c878:	ldr	r1, [sp]
    c87c:	ldr	r0, [r0, r1, lsl #2]
    c880:	mov	pc, r0
    c884:	.word	0x0000c898
    c888:	.word	0x0000c8a4
    c88c:	.word	0x0000c8b0
    c890:	.word	0x0000c8bc
    c894:	.word	0x0000c8c8
    c898:	movw	r0, #1
    c89c:	str	r0, [sp, #8]
    c8a0:	b	c8dc <MyGame_Example_Any_json_union_accept_type+0x84>
    c8a4:	movw	r0, #1
    c8a8:	str	r0, [sp, #8]
    c8ac:	b	c8dc <MyGame_Example_Any_json_union_accept_type+0x84>
    c8b0:	movw	r0, #1
    c8b4:	str	r0, [sp, #8]
    c8b8:	b	c8dc <MyGame_Example_Any_json_union_accept_type+0x84>
    c8bc:	movw	r0, #1
    c8c0:	str	r0, [sp, #8]
    c8c4:	b	c8dc <MyGame_Example_Any_json_union_accept_type+0x84>
    c8c8:	movw	r0, #1
    c8cc:	str	r0, [sp, #8]
    c8d0:	b	c8dc <MyGame_Example_Any_json_union_accept_type+0x84>
    c8d4:	movw	r0, #0
    c8d8:	str	r0, [sp, #8]
    c8dc:	ldr	r0, [sp, #8]
    c8e0:	add	sp, sp, #12
    c8e4:	bx	lr

0000c8e8 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    c8e8:	push	{fp, lr}
    c8ec:	mov	fp, sp
    c8f0:	sub	sp, sp, #48	; 0x30
    c8f4:	str	r0, [fp, #-8]
    c8f8:	str	r1, [fp, #-12]
    c8fc:	str	r2, [fp, #-16]
    c900:	str	r3, [fp, #-20]	; 0xffffffec
    c904:	ldr	r0, [fp, #-20]	; 0xffffffec
    c908:	movw	r1, #0
    c90c:	str	r1, [r0]
    c910:	ldr	r0, [fp, #-8]
    c914:	ldr	r0, [r0]
    c918:	movw	r1, #3
    c91c:	bl	0 <flatcc_builder_start_table>
    c920:	cmp	r0, #0
    c924:	beq	c92c <MyGame_Example_TestJSONPrefix_parse_json_table+0x44>
    c928:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    c92c:	ldr	r0, [fp, #-8]
    c930:	ldr	r1, [fp, #-12]
    c934:	ldr	r2, [fp, #-16]
    c938:	add	r3, sp, #24
    c93c:	bl	4ccc <flatcc_json_parser_object_start>
    c940:	str	r0, [fp, #-12]
    c944:	ldr	r0, [sp, #24]
    c948:	cmp	r0, #0
    c94c:	beq	ccc8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e0>
    c950:	ldr	r0, [fp, #-8]
    c954:	ldr	r1, [fp, #-12]
    c958:	ldr	r2, [fp, #-16]
    c95c:	bl	4db0 <flatcc_json_parser_symbol_start>
    c960:	str	r0, [fp, #-12]
    c964:	ldr	r0, [fp, #-12]
    c968:	ldr	r1, [fp, #-16]
    c96c:	bl	4e5c <flatcc_json_parser_symbol_part>
    c970:	str	r1, [sp, #4]
    c974:	str	r0, [sp]
    c978:	ldr	r0, [sp]
    c97c:	ldr	r1, [sp, #4]
    c980:	movw	r2, #29556	; 0x7374
    c984:	movt	r2, #29797	; 0x7465
    c988:	eor	r1, r1, r2
    c98c:	movw	r2, #28526	; 0x6f6e
    c990:	movt	r2, #27251	; 0x6a73
    c994:	eor	r0, r0, r2
    c998:	orr	r0, r0, r1
    c99c:	cmp	r0, #0
    c9a0:	bne	cc98 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3b0>
    c9a4:	b	c9a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0xc0>
    c9a8:	ldr	r0, [fp, #-12]
    c9ac:	add	r0, r0, #8
    c9b0:	str	r0, [fp, #-12]
    c9b4:	ldr	r0, [fp, #-12]
    c9b8:	ldr	r1, [fp, #-16]
    c9bc:	bl	4e5c <flatcc_json_parser_symbol_part>
    c9c0:	str	r1, [sp, #4]
    c9c4:	str	r0, [sp]
    c9c8:	ldr	r0, [sp]
    c9cc:	ldr	r1, [sp, #4]
    c9d0:	movw	lr, #25958	; 0x6566
    c9d4:	movt	lr, #28786	; 0x7072
    c9d8:	eor	r1, r1, lr
    c9dc:	movw	lr, #28769	; 0x7061
    c9e0:	movt	lr, #27000	; 0x6978
    c9e4:	eor	r0, r0, lr
    c9e8:	orr	r0, r0, r1
    c9ec:	cmp	r0, #0
    c9f0:	bne	cc80 <MyGame_Example_TestJSONPrefix_parse_json_table+0x398>
    c9f4:	b	c9f8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x110>
    c9f8:	ldr	r0, [fp, #-12]
    c9fc:	add	r0, r0, #8
    ca00:	str	r0, [fp, #-12]
    ca04:	ldr	r0, [fp, #-12]
    ca08:	ldr	r1, [fp, #-16]
    ca0c:	bl	4e5c <flatcc_json_parser_symbol_part>
    ca10:	str	r1, [sp, #4]
    ca14:	str	r0, [sp]
    ca18:	ldrh	r0, [sp, #2]
    ca1c:	ldr	r1, [sp, #4]
    ca20:	movw	lr, #29299	; 0x7273
    ca24:	eor	lr, lr, r1, lsr #16
    ca28:	orr	r0, r0, r1, lsl #16
    ca2c:	movw	r1, #26418	; 0x6732
    ca30:	movt	r1, #26990	; 0x696e
    ca34:	eor	r0, r0, r1
    ca38:	orr	r0, r0, lr
    ca3c:	cmp	r0, #0
    ca40:	bne	cad4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    ca44:	b	ca48 <MyGame_Example_TestJSONPrefix_parse_json_table+0x160>
    ca48:	ldr	r0, [fp, #-8]
    ca4c:	ldr	r1, [fp, #-12]
    ca50:	str	r1, [sp, #8]
    ca54:	ldr	r2, [fp, #-16]
    ca58:	movw	r3, #6
    ca5c:	bl	4e94 <flatcc_json_parser_match_symbol>
    ca60:	str	r0, [fp, #-12]
    ca64:	ldr	r0, [sp, #8]
    ca68:	ldr	r1, [fp, #-12]
    ca6c:	cmp	r0, r1
    ca70:	beq	cacc <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e4>
    ca74:	ldr	r0, [fp, #-8]
    ca78:	ldr	r1, [fp, #-12]
    ca7c:	ldr	r2, [fp, #-16]
    ca80:	add	r3, sp, #16
    ca84:	bl	d90c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    ca88:	str	r0, [fp, #-12]
    ca8c:	ldr	r0, [sp, #16]
    ca90:	cmp	r0, #0
    ca94:	beq	cab8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d0>
    ca98:	ldr	r0, [fp, #-8]
    ca9c:	ldr	r0, [r0]
    caa0:	movw	r1, #1
    caa4:	bl	0 <flatcc_builder_table_add_offset>
    caa8:	str	r0, [sp, #12]
    caac:	movw	r1, #0
    cab0:	cmp	r0, r1
    cab4:	bne	cabc <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d4>
    cab8:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    cabc:	ldr	r0, [sp, #16]
    cac0:	ldr	r1, [sp, #12]
    cac4:	str	r0, [r1]
    cac8:	b	cad0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    cacc:	b	cb98 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    cad0:	b	cb94 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    cad4:	ldr	r0, [sp]
    cad8:	ldr	r1, [sp, #4]
    cadc:	and	r0, r0, #-16777216	; 0xff000000
    cae0:	movw	r2, #26990	; 0x696e
    cae4:	movt	r2, #29299	; 0x7273
    cae8:	eor	r1, r1, r2
    caec:	eor	r0, r0, #1728053248	; 0x67000000
    caf0:	orr	r0, r0, r1
    caf4:	cmp	r0, #0
    caf8:	bne	cb8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a4>
    cafc:	b	cb00 <MyGame_Example_TestJSONPrefix_parse_json_table+0x218>
    cb00:	ldr	r0, [fp, #-8]
    cb04:	ldr	r1, [fp, #-12]
    cb08:	str	r1, [sp, #8]
    cb0c:	ldr	r2, [fp, #-16]
    cb10:	movw	r3, #5
    cb14:	bl	4e94 <flatcc_json_parser_match_symbol>
    cb18:	str	r0, [fp, #-12]
    cb1c:	ldr	r0, [sp, #8]
    cb20:	ldr	r1, [fp, #-12]
    cb24:	cmp	r0, r1
    cb28:	beq	cb84 <MyGame_Example_TestJSONPrefix_parse_json_table+0x29c>
    cb2c:	ldr	r0, [fp, #-8]
    cb30:	ldr	r1, [fp, #-12]
    cb34:	ldr	r2, [fp, #-16]
    cb38:	add	r3, sp, #16
    cb3c:	bl	dd68 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    cb40:	str	r0, [fp, #-12]
    cb44:	ldr	r0, [sp, #16]
    cb48:	cmp	r0, #0
    cb4c:	beq	cb70 <MyGame_Example_TestJSONPrefix_parse_json_table+0x288>
    cb50:	ldr	r0, [fp, #-8]
    cb54:	ldr	r0, [r0]
    cb58:	movw	r1, #0
    cb5c:	bl	0 <flatcc_builder_table_add_offset>
    cb60:	str	r0, [sp, #12]
    cb64:	movw	r1, #0
    cb68:	cmp	r0, r1
    cb6c:	bne	cb74 <MyGame_Example_TestJSONPrefix_parse_json_table+0x28c>
    cb70:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    cb74:	ldr	r0, [sp, #16]
    cb78:	ldr	r1, [sp, #12]
    cb7c:	str	r0, [r1]
    cb80:	b	cb88 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a0>
    cb84:	b	cb98 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    cb88:	b	cb90 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    cb8c:	b	cb98 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    cb90:	b	cb94 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    cb94:	b	cc7c <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    cb98:	ldrh	r0, [sp, #2]
    cb9c:	ldr	r1, [sp, #4]
    cba0:	movw	r2, #29299	; 0x7273
    cba4:	eor	r2, r2, r1, lsr #16
    cba8:	orr	r0, r0, r1, lsl #16
    cbac:	movw	r1, #26419	; 0x6733
    cbb0:	movt	r1, #26990	; 0x696e
    cbb4:	eor	r0, r0, r1
    cbb8:	orr	r0, r0, r2
    cbbc:	cmp	r0, #0
    cbc0:	bne	cc64 <MyGame_Example_TestJSONPrefix_parse_json_table+0x37c>
    cbc4:	b	cbc8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2e0>
    cbc8:	ldr	r0, [fp, #-8]
    cbcc:	ldr	r1, [fp, #-12]
    cbd0:	str	r1, [sp, #8]
    cbd4:	ldr	r2, [fp, #-16]
    cbd8:	movw	r3, #6
    cbdc:	bl	4e94 <flatcc_json_parser_match_symbol>
    cbe0:	str	r0, [fp, #-12]
    cbe4:	ldr	r0, [sp, #8]
    cbe8:	ldr	r1, [fp, #-12]
    cbec:	cmp	r0, r1
    cbf0:	beq	cc4c <MyGame_Example_TestJSONPrefix_parse_json_table+0x364>
    cbf4:	ldr	r0, [fp, #-8]
    cbf8:	ldr	r1, [fp, #-12]
    cbfc:	ldr	r2, [fp, #-16]
    cc00:	add	r3, sp, #16
    cc04:	bl	e988 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    cc08:	str	r0, [fp, #-12]
    cc0c:	ldr	r0, [sp, #16]
    cc10:	cmp	r0, #0
    cc14:	beq	cc38 <MyGame_Example_TestJSONPrefix_parse_json_table+0x350>
    cc18:	ldr	r0, [fp, #-8]
    cc1c:	ldr	r0, [r0]
    cc20:	movw	r1, #2
    cc24:	bl	0 <flatcc_builder_table_add_offset>
    cc28:	str	r0, [sp, #12]
    cc2c:	movw	r1, #0
    cc30:	cmp	r0, r1
    cc34:	bne	cc3c <MyGame_Example_TestJSONPrefix_parse_json_table+0x354>
    cc38:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    cc3c:	ldr	r0, [sp, #16]
    cc40:	ldr	r1, [sp, #12]
    cc44:	str	r0, [r1]
    cc48:	b	cc60 <MyGame_Example_TestJSONPrefix_parse_json_table+0x378>
    cc4c:	ldr	r0, [fp, #-8]
    cc50:	ldr	r1, [fp, #-12]
    cc54:	ldr	r2, [fp, #-16]
    cc58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc5c:	str	r0, [fp, #-12]
    cc60:	b	cc78 <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    cc64:	ldr	r0, [fp, #-8]
    cc68:	ldr	r1, [fp, #-12]
    cc6c:	ldr	r2, [fp, #-16]
    cc70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc74:	str	r0, [fp, #-12]
    cc78:	b	cc7c <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    cc7c:	b	cc94 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ac>
    cc80:	ldr	r0, [fp, #-8]
    cc84:	ldr	r1, [fp, #-12]
    cc88:	ldr	r2, [fp, #-16]
    cc8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc90:	str	r0, [fp, #-12]
    cc94:	b	ccac <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    cc98:	ldr	r0, [fp, #-8]
    cc9c:	ldr	r1, [fp, #-12]
    cca0:	ldr	r2, [fp, #-16]
    cca4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cca8:	str	r0, [fp, #-12]
    ccac:	ldr	r0, [fp, #-8]
    ccb0:	ldr	r1, [fp, #-12]
    ccb4:	ldr	r2, [fp, #-16]
    ccb8:	add	r3, sp, #24
    ccbc:	bl	a1ac <flatcc_json_parser_object_end>
    ccc0:	str	r0, [fp, #-12]
    ccc4:	b	c944 <MyGame_Example_TestJSONPrefix_parse_json_table+0x5c>
    ccc8:	ldr	r0, [fp, #-8]
    cccc:	ldr	r0, [r0, #24]
    ccd0:	cmp	r0, #0
    ccd4:	beq	ccdc <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f4>
    ccd8:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    ccdc:	ldr	r0, [fp, #-8]
    cce0:	ldr	r0, [r0]
    cce4:	bl	0 <flatcc_builder_end_table>
    cce8:	ldr	lr, [fp, #-20]	; 0xffffffec
    ccec:	str	r0, [lr]
    ccf0:	cmp	r0, #0
    ccf4:	bne	ccfc <MyGame_Example_TestJSONPrefix_parse_json_table+0x414>
    ccf8:	b	cd08 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    ccfc:	ldr	r0, [fp, #-12]
    cd00:	str	r0, [fp, #-4]
    cd04:	b	cd20 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    cd08:	ldr	r0, [fp, #-8]
    cd0c:	ldr	r1, [fp, #-12]
    cd10:	ldr	r2, [fp, #-16]
    cd14:	movw	r3, #33	; 0x21
    cd18:	bl	0 <flatcc_json_parser_set_error>
    cd1c:	str	r0, [fp, #-4]
    cd20:	ldr	r0, [fp, #-4]
    cd24:	mov	sp, fp
    cd28:	pop	{fp, pc}

0000cd2c <Fantasy_Movie_parse_json_table>:
    cd2c:	push	{fp, lr}
    cd30:	mov	fp, sp
    cd34:	sub	sp, sp, #136	; 0x88
    cd38:	str	r0, [fp, #-8]
    cd3c:	str	r1, [fp, #-12]
    cd40:	str	r2, [fp, #-16]
    cd44:	str	r3, [fp, #-20]	; 0xffffffec
    cd48:	ldr	r0, [fp, #-20]	; 0xffffffec
    cd4c:	movw	r1, #0
    cd50:	str	r1, [r0]
    cd54:	ldr	r0, [fp, #-8]
    cd58:	ldr	r0, [r0]
    cd5c:	movw	r1, #10
    cd60:	bl	0 <flatcc_builder_start_table>
    cd64:	cmp	r0, #0
    cd68:	beq	cd70 <Fantasy_Movie_parse_json_table+0x44>
    cd6c:	b	d8e8 <Fantasy_Movie_parse_json_table+0xbbc>
    cd70:	ldr	r0, [fp, #-16]
    cd74:	ldr	r1, [fp, #-8]
    cd78:	ldr	r2, [fp, #-12]
    cd7c:	ldr	r3, [fp, #-16]
    cd80:	str	r0, [fp, #-56]	; 0xffffffc8
    cd84:	mov	r0, r1
    cd88:	mov	r1, r2
    cd8c:	mov	r2, r3
    cd90:	movw	r3, #5
    cd94:	sub	ip, fp, #52	; 0x34
    cd98:	str	ip, [sp]
    cd9c:	bl	0 <flatcc_json_parser_prepare_unions>
    cda0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    cda4:	cmp	r1, r0
    cda8:	bne	cdb0 <Fantasy_Movie_parse_json_table+0x84>
    cdac:	b	d8e8 <Fantasy_Movie_parse_json_table+0xbbc>
    cdb0:	ldr	r0, [fp, #-8]
    cdb4:	ldr	r1, [fp, #-12]
    cdb8:	ldr	r2, [fp, #-16]
    cdbc:	sub	r3, fp, #24
    cdc0:	bl	4ccc <flatcc_json_parser_object_start>
    cdc4:	str	r0, [fp, #-12]
    cdc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cdcc:	cmp	r0, #0
    cdd0:	beq	d890 <Fantasy_Movie_parse_json_table+0xb64>
    cdd4:	ldr	r0, [fp, #-8]
    cdd8:	ldr	r1, [fp, #-12]
    cddc:	ldr	r2, [fp, #-16]
    cde0:	bl	4db0 <flatcc_json_parser_symbol_start>
    cde4:	str	r0, [fp, #-12]
    cde8:	ldr	r0, [fp, #-12]
    cdec:	ldr	r1, [fp, #-16]
    cdf0:	bl	4e5c <flatcc_json_parser_symbol_part>
    cdf4:	str	r1, [fp, #-44]	; 0xffffffd4
    cdf8:	str	r0, [fp, #-48]	; 0xffffffd0
    cdfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ce00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ce04:	movw	r2, #29796	; 0x7464
    ce08:	movt	r2, #24931	; 0x6163
    ce0c:	subs	r0, r2, r0
    ce10:	movw	r2, #24946	; 0x6172
    ce14:	movt	r2, #25448	; 0x6368
    ce18:	sbcs	r1, r2, r1
    ce1c:	str	r0, [fp, #-60]	; 0xffffffc4
    ce20:	str	r1, [fp, #-64]	; 0xffffffc0
    ce24:	bcc	d204 <Fantasy_Movie_parse_json_table+0x4d8>
    ce28:	b	ce2c <Fantasy_Movie_parse_json_table+0x100>
    ce2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ce30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ce34:	movw	r2, #29793	; 0x7461
    ce38:	movt	r2, #24942	; 0x616e
    ce3c:	eor	r1, r1, r2
    ce40:	movw	r2, #28265	; 0x6e69
    ce44:	movt	r2, #26479	; 0x676f
    ce48:	eor	r0, r0, r2
    ce4c:	orr	r0, r0, r1
    ce50:	cmp	r0, #0
    ce54:	bne	d010 <Fantasy_Movie_parse_json_table+0x2e4>
    ce58:	b	ce5c <Fantasy_Movie_parse_json_table+0x130>
    ce5c:	ldr	r0, [fp, #-12]
    ce60:	add	r0, r0, #8
    ce64:	str	r0, [fp, #-12]
    ce68:	ldr	r0, [fp, #-12]
    ce6c:	ldr	r1, [fp, #-16]
    ce70:	bl	4e5c <flatcc_json_parser_symbol_part>
    ce74:	str	r1, [fp, #-44]	; 0xffffffd4
    ce78:	str	r0, [fp, #-48]	; 0xffffffd0
    ce7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ce80:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ce84:	movw	lr, #29791	; 0x745f
    ce88:	movt	lr, #115	; 0x73
    ce8c:	eor	lr, lr, r1, lsr #8
    ce90:	lsr	r0, r0, #8
    ce94:	orr	r0, r0, r1, lsl #24
    ce98:	movw	r1, #28773	; 0x7065
    ce9c:	movt	r1, #29817	; 0x7479
    cea0:	eor	r0, r0, r1
    cea4:	orr	r0, r0, lr
    cea8:	cmp	r0, #0
    ceac:	bne	cf4c <Fantasy_Movie_parse_json_table+0x220>
    ceb0:	b	ceb4 <Fantasy_Movie_parse_json_table+0x188>
    ceb4:	ldr	r0, [fp, #-8]
    ceb8:	ldr	r1, [fp, #-12]
    cebc:	str	r1, [fp, #-40]	; 0xffffffd8
    cec0:	ldr	r2, [fp, #-16]
    cec4:	movw	r3, #7
    cec8:	bl	4e94 <flatcc_json_parser_match_symbol>
    cecc:	str	r0, [fp, #-12]
    ced0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ced4:	ldr	r1, [fp, #-12]
    ced8:	cmp	r0, r1
    cedc:	beq	cf34 <Fantasy_Movie_parse_json_table+0x208>
    cee0:	ldr	r0, [fp, #-8]
    cee4:	ldr	r1, [fp, #-12]
    cee8:	ldr	r2, [fp, #-16]
    ceec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cef0:	movw	ip, #1
    cef4:	str	r3, [sp, #68]	; 0x44
    cef8:	mov	r3, ip
    cefc:	movw	ip, #3
    cf00:	uxth	ip, ip
    cf04:	str	ip, [sp]
    cf08:	ldr	ip, [sp, #68]	; 0x44
    cf0c:	str	ip, [sp, #4]
    cf10:	movw	lr, #0
    cf14:	movt	lr, #0
    cf18:	str	lr, [sp, #8]
    cf1c:	movw	lr, #0
    cf20:	movt	lr, #0
    cf24:	str	lr, [sp, #12]
    cf28:	bl	0 <flatcc_json_parser_union_type>
    cf2c:	str	r0, [fp, #-12]
    cf30:	b	cf48 <Fantasy_Movie_parse_json_table+0x21c>
    cf34:	ldr	r0, [fp, #-8]
    cf38:	ldr	r1, [fp, #-12]
    cf3c:	ldr	r2, [fp, #-16]
    cf40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cf44:	str	r0, [fp, #-12]
    cf48:	b	d00c <Fantasy_Movie_parse_json_table+0x2e0>
    cf4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    cf50:	bfc	r0, #0, #16
    cf54:	movw	r1, #0
    cf58:	movt	r1, #29556	; 0x7374
    cf5c:	teq	r0, r1
    cf60:	bne	cff4 <Fantasy_Movie_parse_json_table+0x2c8>
    cf64:	b	cf68 <Fantasy_Movie_parse_json_table+0x23c>
    cf68:	ldr	r0, [fp, #-8]
    cf6c:	ldr	r1, [fp, #-12]
    cf70:	str	r1, [fp, #-40]	; 0xffffffd8
    cf74:	ldr	r2, [fp, #-16]
    cf78:	movw	r3, #2
    cf7c:	bl	4e94 <flatcc_json_parser_match_symbol>
    cf80:	str	r0, [fp, #-12]
    cf84:	ldr	r0, [fp, #-40]	; 0xffffffd8
    cf88:	ldr	r1, [fp, #-12]
    cf8c:	cmp	r0, r1
    cf90:	beq	cfdc <Fantasy_Movie_parse_json_table+0x2b0>
    cf94:	ldr	r0, [fp, #-8]
    cf98:	ldr	r1, [fp, #-12]
    cf9c:	ldr	r2, [fp, #-16]
    cfa0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cfa4:	movw	ip, #1
    cfa8:	str	r3, [sp, #64]	; 0x40
    cfac:	mov	r3, ip
    cfb0:	movw	ip, #3
    cfb4:	uxth	ip, ip
    cfb8:	str	ip, [sp]
    cfbc:	ldr	ip, [sp, #64]	; 0x40
    cfc0:	str	ip, [sp, #4]
    cfc4:	movw	lr, #0
    cfc8:	movt	lr, #0
    cfcc:	str	lr, [sp, #8]
    cfd0:	bl	0 <flatcc_json_parser_union>
    cfd4:	str	r0, [fp, #-12]
    cfd8:	b	cff0 <Fantasy_Movie_parse_json_table+0x2c4>
    cfdc:	ldr	r0, [fp, #-8]
    cfe0:	ldr	r1, [fp, #-12]
    cfe4:	ldr	r2, [fp, #-16]
    cfe8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfec:	str	r0, [fp, #-12]
    cff0:	b	d008 <Fantasy_Movie_parse_json_table+0x2dc>
    cff4:	ldr	r0, [fp, #-8]
    cff8:	ldr	r1, [fp, #-12]
    cffc:	ldr	r2, [fp, #-16]
    d000:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d004:	str	r0, [fp, #-12]
    d008:	b	d00c <Fantasy_Movie_parse_json_table+0x2e0>
    d00c:	b	d200 <Fantasy_Movie_parse_json_table+0x4d4>
    d010:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d014:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d018:	movw	r2, #28005	; 0x6d65
    d01c:	movt	r2, #25441	; 0x6361
    d020:	eor	r1, r1, r2
    d024:	movw	r2, #29817	; 0x7479
    d028:	movt	r2, #28511	; 0x6f5f
    d02c:	eor	r0, r0, r2
    d030:	orr	r0, r0, r1
    d034:	cmp	r0, #0
    d038:	bne	d12c <Fantasy_Movie_parse_json_table+0x400>
    d03c:	b	d040 <Fantasy_Movie_parse_json_table+0x314>
    d040:	ldr	r0, [fp, #-12]
    d044:	add	r0, r0, #8
    d048:	str	r0, [fp, #-12]
    d04c:	ldr	r0, [fp, #-12]
    d050:	ldr	r1, [fp, #-16]
    d054:	bl	4e5c <flatcc_json_parser_symbol_part>
    d058:	str	r1, [fp, #-44]	; 0xffffffd4
    d05c:	str	r0, [fp, #-48]	; 0xffffffd0
    d060:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d064:	bfc	r0, #0, #16
    d068:	movw	r1, #0
    d06c:	movt	r1, #28773	; 0x7065
    d070:	teq	r0, r1
    d074:	bne	d114 <Fantasy_Movie_parse_json_table+0x3e8>
    d078:	b	d07c <Fantasy_Movie_parse_json_table+0x350>
    d07c:	ldr	r0, [fp, #-8]
    d080:	ldr	r1, [fp, #-12]
    d084:	str	r1, [fp, #-40]	; 0xffffffd8
    d088:	ldr	r2, [fp, #-16]
    d08c:	movw	r3, #2
    d090:	bl	4e94 <flatcc_json_parser_match_symbol>
    d094:	str	r0, [fp, #-12]
    d098:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d09c:	ldr	r1, [fp, #-12]
    d0a0:	cmp	r0, r1
    d0a4:	beq	d0fc <Fantasy_Movie_parse_json_table+0x3d0>
    d0a8:	ldr	r0, [fp, #-8]
    d0ac:	ldr	r1, [fp, #-12]
    d0b0:	ldr	r2, [fp, #-16]
    d0b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d0b8:	movw	ip, #3
    d0bc:	str	r3, [sp, #60]	; 0x3c
    d0c0:	mov	r3, ip
    d0c4:	movw	ip, #7
    d0c8:	uxth	ip, ip
    d0cc:	str	ip, [sp]
    d0d0:	ldr	ip, [sp, #60]	; 0x3c
    d0d4:	str	ip, [sp, #4]
    d0d8:	movw	lr, #0
    d0dc:	movt	lr, #0
    d0e0:	str	lr, [sp, #8]
    d0e4:	movw	lr, #0
    d0e8:	movt	lr, #0
    d0ec:	str	lr, [sp, #12]
    d0f0:	bl	0 <flatcc_json_parser_union_type>
    d0f4:	str	r0, [fp, #-12]
    d0f8:	b	d110 <Fantasy_Movie_parse_json_table+0x3e4>
    d0fc:	ldr	r0, [fp, #-8]
    d100:	ldr	r1, [fp, #-12]
    d104:	ldr	r2, [fp, #-16]
    d108:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d10c:	str	r0, [fp, #-12]
    d110:	b	d128 <Fantasy_Movie_parse_json_table+0x3fc>
    d114:	ldr	r0, [fp, #-8]
    d118:	ldr	r1, [fp, #-12]
    d11c:	ldr	r2, [fp, #-16]
    d120:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d124:	str	r0, [fp, #-12]
    d128:	b	d1fc <Fantasy_Movie_parse_json_table+0x4d0>
    d12c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d130:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d134:	and	r0, r0, #-16777216	; 0xff000000
    d138:	movw	r2, #28005	; 0x6d65
    d13c:	movt	r2, #25441	; 0x6361
    d140:	eor	r1, r1, r2
    d144:	eor	r0, r0, #1862270976	; 0x6f000000
    d148:	orr	r0, r0, r1
    d14c:	cmp	r0, #0
    d150:	bne	d1e4 <Fantasy_Movie_parse_json_table+0x4b8>
    d154:	b	d158 <Fantasy_Movie_parse_json_table+0x42c>
    d158:	ldr	r0, [fp, #-8]
    d15c:	ldr	r1, [fp, #-12]
    d160:	str	r1, [fp, #-40]	; 0xffffffd8
    d164:	ldr	r2, [fp, #-16]
    d168:	movw	r3, #5
    d16c:	bl	4e94 <flatcc_json_parser_match_symbol>
    d170:	str	r0, [fp, #-12]
    d174:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d178:	ldr	r1, [fp, #-12]
    d17c:	cmp	r0, r1
    d180:	beq	d1cc <Fantasy_Movie_parse_json_table+0x4a0>
    d184:	ldr	r0, [fp, #-8]
    d188:	ldr	r1, [fp, #-12]
    d18c:	ldr	r2, [fp, #-16]
    d190:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d194:	movw	ip, #3
    d198:	str	r3, [sp, #56]	; 0x38
    d19c:	mov	r3, ip
    d1a0:	movw	ip, #7
    d1a4:	uxth	ip, ip
    d1a8:	str	ip, [sp]
    d1ac:	ldr	ip, [sp, #56]	; 0x38
    d1b0:	str	ip, [sp, #4]
    d1b4:	movw	lr, #0
    d1b8:	movt	lr, #0
    d1bc:	str	lr, [sp, #8]
    d1c0:	bl	0 <flatcc_json_parser_union>
    d1c4:	str	r0, [fp, #-12]
    d1c8:	b	d1e0 <Fantasy_Movie_parse_json_table+0x4b4>
    d1cc:	ldr	r0, [fp, #-8]
    d1d0:	ldr	r1, [fp, #-12]
    d1d4:	ldr	r2, [fp, #-16]
    d1d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1dc:	str	r0, [fp, #-12]
    d1e0:	b	d1f8 <Fantasy_Movie_parse_json_table+0x4cc>
    d1e4:	ldr	r0, [fp, #-8]
    d1e8:	ldr	r1, [fp, #-12]
    d1ec:	ldr	r2, [fp, #-16]
    d1f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1f4:	str	r0, [fp, #-12]
    d1f8:	b	d1fc <Fantasy_Movie_parse_json_table+0x4d0>
    d1fc:	b	d200 <Fantasy_Movie_parse_json_table+0x4d4>
    d200:	b	d874 <Fantasy_Movie_parse_json_table+0xb48>
    d204:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d208:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d20c:	movw	r2, #26720	; 0x6860
    d210:	movt	r2, #24419	; 0x5f63
    d214:	subs	r0, r2, r0
    d218:	movw	r2, #26990	; 0x696e
    d21c:	movt	r2, #28001	; 0x6d61
    d220:	sbcs	r1, r2, r1
    d224:	str	r0, [sp, #52]	; 0x34
    d228:	str	r1, [sp, #48]	; 0x30
    d22c:	bcc	d43c <Fantasy_Movie_parse_json_table+0x710>
    d230:	b	d234 <Fantasy_Movie_parse_json_table+0x508>
    d234:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d238:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d23c:	movw	r2, #24946	; 0x6172
    d240:	movt	r2, #25448	; 0x6368
    d244:	eor	r1, r1, r2
    d248:	movw	r2, #29797	; 0x7465
    d24c:	movt	r2, #24931	; 0x6163
    d250:	eor	r0, r0, r2
    d254:	orr	r0, r0, r1
    d258:	cmp	r0, #0
    d25c:	bne	d424 <Fantasy_Movie_parse_json_table+0x6f8>
    d260:	b	d264 <Fantasy_Movie_parse_json_table+0x538>
    d264:	ldr	r0, [fp, #-12]
    d268:	add	r0, r0, #8
    d26c:	str	r0, [fp, #-12]
    d270:	ldr	r0, [fp, #-12]
    d274:	ldr	r1, [fp, #-16]
    d278:	bl	4e5c <flatcc_json_parser_symbol_part>
    d27c:	str	r1, [fp, #-44]	; 0xffffffd4
    d280:	str	r0, [fp, #-48]	; 0xffffffd0
    d284:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d288:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d28c:	movw	lr, #29535	; 0x735f
    d290:	movt	lr, #114	; 0x72
    d294:	eor	lr, lr, r1, lsr #8
    d298:	lsr	r0, r0, #8
    d29c:	orr	r0, r0, r1, lsl #24
    d2a0:	movw	r1, #28773	; 0x7065
    d2a4:	movt	r1, #29817	; 0x7479
    d2a8:	eor	r0, r0, r1
    d2ac:	orr	r0, r0, lr
    d2b0:	cmp	r0, #0
    d2b4:	bne	d360 <Fantasy_Movie_parse_json_table+0x634>
    d2b8:	b	d2bc <Fantasy_Movie_parse_json_table+0x590>
    d2bc:	ldr	r0, [fp, #-8]
    d2c0:	ldr	r1, [fp, #-12]
    d2c4:	str	r1, [fp, #-40]	; 0xffffffd8
    d2c8:	ldr	r2, [fp, #-16]
    d2cc:	movw	r3, #7
    d2d0:	bl	4e94 <flatcc_json_parser_match_symbol>
    d2d4:	str	r0, [fp, #-12]
    d2d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d2dc:	ldr	r1, [fp, #-12]
    d2e0:	cmp	r0, r1
    d2e4:	beq	d348 <Fantasy_Movie_parse_json_table+0x61c>
    d2e8:	ldr	r0, [fp, #-8]
    d2ec:	ldr	r1, [fp, #-12]
    d2f0:	ldr	r2, [fp, #-16]
    d2f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d2f8:	movw	ip, #4
    d2fc:	str	r3, [sp, #44]	; 0x2c
    d300:	mov	r3, ip
    d304:	movw	ip, #9
    d308:	uxth	ip, ip
    d30c:	str	ip, [sp]
    d310:	ldr	ip, [sp, #44]	; 0x2c
    d314:	str	ip, [sp, #4]
    d318:	movw	lr, #0
    d31c:	movt	lr, #0
    d320:	str	lr, [sp, #8]
    d324:	movw	lr, #0
    d328:	movt	lr, #0
    d32c:	str	lr, [sp, #12]
    d330:	movw	lr, #0
    d334:	movt	lr, #0
    d338:	str	lr, [sp, #16]
    d33c:	bl	0 <flatcc_json_parser_union_type_vector>
    d340:	str	r0, [fp, #-12]
    d344:	b	d35c <Fantasy_Movie_parse_json_table+0x630>
    d348:	ldr	r0, [fp, #-8]
    d34c:	ldr	r1, [fp, #-12]
    d350:	ldr	r2, [fp, #-16]
    d354:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d358:	str	r0, [fp, #-12]
    d35c:	b	d420 <Fantasy_Movie_parse_json_table+0x6f4>
    d360:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d364:	bfc	r0, #0, #16
    d368:	movw	r1, #0
    d36c:	movt	r1, #29299	; 0x7273
    d370:	teq	r0, r1
    d374:	bne	d408 <Fantasy_Movie_parse_json_table+0x6dc>
    d378:	b	d37c <Fantasy_Movie_parse_json_table+0x650>
    d37c:	ldr	r0, [fp, #-8]
    d380:	ldr	r1, [fp, #-12]
    d384:	str	r1, [fp, #-40]	; 0xffffffd8
    d388:	ldr	r2, [fp, #-16]
    d38c:	movw	r3, #2
    d390:	bl	4e94 <flatcc_json_parser_match_symbol>
    d394:	str	r0, [fp, #-12]
    d398:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d39c:	ldr	r1, [fp, #-12]
    d3a0:	cmp	r0, r1
    d3a4:	beq	d3f0 <Fantasy_Movie_parse_json_table+0x6c4>
    d3a8:	ldr	r0, [fp, #-8]
    d3ac:	ldr	r1, [fp, #-12]
    d3b0:	ldr	r2, [fp, #-16]
    d3b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d3b8:	movw	ip, #4
    d3bc:	str	r3, [sp, #40]	; 0x28
    d3c0:	mov	r3, ip
    d3c4:	movw	ip, #9
    d3c8:	uxth	ip, ip
    d3cc:	str	ip, [sp]
    d3d0:	ldr	ip, [sp, #40]	; 0x28
    d3d4:	str	ip, [sp, #4]
    d3d8:	movw	lr, #0
    d3dc:	movt	lr, #0
    d3e0:	str	lr, [sp, #8]
    d3e4:	bl	0 <flatcc_json_parser_union_vector>
    d3e8:	str	r0, [fp, #-12]
    d3ec:	b	d404 <Fantasy_Movie_parse_json_table+0x6d8>
    d3f0:	ldr	r0, [fp, #-8]
    d3f4:	ldr	r1, [fp, #-12]
    d3f8:	ldr	r2, [fp, #-16]
    d3fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d400:	str	r0, [fp, #-12]
    d404:	b	d41c <Fantasy_Movie_parse_json_table+0x6f0>
    d408:	ldr	r0, [fp, #-8]
    d40c:	ldr	r1, [fp, #-12]
    d410:	ldr	r2, [fp, #-16]
    d414:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d418:	str	r0, [fp, #-12]
    d41c:	b	d420 <Fantasy_Movie_parse_json_table+0x6f4>
    d420:	b	d438 <Fantasy_Movie_parse_json_table+0x70c>
    d424:	ldr	r0, [fp, #-8]
    d428:	ldr	r1, [fp, #-12]
    d42c:	ldr	r2, [fp, #-16]
    d430:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d434:	str	r0, [fp, #-12]
    d438:	b	d870 <Fantasy_Movie_parse_json_table+0xb44>
    d43c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d440:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d444:	movw	r2, #26990	; 0x696e
    d448:	movt	r2, #28001	; 0x6d61
    d44c:	eor	r1, r1, r2
    d450:	movw	r2, #26721	; 0x6861
    d454:	movt	r2, #24419	; 0x5f63
    d458:	eor	r0, r0, r2
    d45c:	orr	r0, r0, r1
    d460:	cmp	r0, #0
    d464:	bne	d680 <Fantasy_Movie_parse_json_table+0x954>
    d468:	b	d46c <Fantasy_Movie_parse_json_table+0x740>
    d46c:	ldr	r0, [fp, #-12]
    d470:	add	r0, r0, #8
    d474:	str	r0, [fp, #-12]
    d478:	ldr	r0, [fp, #-12]
    d47c:	ldr	r1, [fp, #-16]
    d480:	bl	4e5c <flatcc_json_parser_symbol_part>
    d484:	str	r1, [fp, #-44]	; 0xffffffd4
    d488:	str	r0, [fp, #-48]	; 0xffffffd0
    d48c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d490:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d494:	movw	lr, #25460	; 0x6374
    d498:	movt	lr, #29281	; 0x7261
    d49c:	eor	r1, r1, lr
    d4a0:	movw	lr, #24436	; 0x5f74
    d4a4:	movt	lr, #25970	; 0x6572
    d4a8:	eor	r0, r0, lr
    d4ac:	orr	r0, r0, r1
    d4b0:	cmp	r0, #0
    d4b4:	bne	d5a8 <Fantasy_Movie_parse_json_table+0x87c>
    d4b8:	b	d4bc <Fantasy_Movie_parse_json_table+0x790>
    d4bc:	ldr	r0, [fp, #-12]
    d4c0:	add	r0, r0, #8
    d4c4:	str	r0, [fp, #-12]
    d4c8:	ldr	r0, [fp, #-12]
    d4cc:	ldr	r1, [fp, #-16]
    d4d0:	bl	4e5c <flatcc_json_parser_symbol_part>
    d4d4:	str	r1, [fp, #-44]	; 0xffffffd4
    d4d8:	str	r0, [fp, #-48]	; 0xffffffd0
    d4dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d4e0:	bic	r0, r0, #255	; 0xff
    d4e4:	movw	r1, #25856	; 0x6500
    d4e8:	movt	r1, #31088	; 0x7970
    d4ec:	teq	r0, r1
    d4f0:	bne	d590 <Fantasy_Movie_parse_json_table+0x864>
    d4f4:	b	d4f8 <Fantasy_Movie_parse_json_table+0x7cc>
    d4f8:	ldr	r0, [fp, #-8]
    d4fc:	ldr	r1, [fp, #-12]
    d500:	str	r1, [fp, #-40]	; 0xffffffd8
    d504:	ldr	r2, [fp, #-16]
    d508:	movw	r3, #3
    d50c:	bl	4e94 <flatcc_json_parser_match_symbol>
    d510:	str	r0, [fp, #-12]
    d514:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d518:	ldr	r1, [fp, #-12]
    d51c:	cmp	r0, r1
    d520:	beq	d578 <Fantasy_Movie_parse_json_table+0x84c>
    d524:	ldr	r0, [fp, #-8]
    d528:	ldr	r1, [fp, #-12]
    d52c:	ldr	r2, [fp, #-16]
    d530:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d534:	movw	ip, #0
    d538:	str	r3, [sp, #36]	; 0x24
    d53c:	mov	r3, ip
    d540:	movw	ip, #1
    d544:	uxth	ip, ip
    d548:	str	ip, [sp]
    d54c:	ldr	ip, [sp, #36]	; 0x24
    d550:	str	ip, [sp, #4]
    d554:	movw	lr, #0
    d558:	movt	lr, #0
    d55c:	str	lr, [sp, #8]
    d560:	movw	lr, #0
    d564:	movt	lr, #0
    d568:	str	lr, [sp, #12]
    d56c:	bl	0 <flatcc_json_parser_union_type>
    d570:	str	r0, [fp, #-12]
    d574:	b	d58c <Fantasy_Movie_parse_json_table+0x860>
    d578:	ldr	r0, [fp, #-8]
    d57c:	ldr	r1, [fp, #-12]
    d580:	ldr	r2, [fp, #-16]
    d584:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d588:	str	r0, [fp, #-12]
    d58c:	b	d5a4 <Fantasy_Movie_parse_json_table+0x878>
    d590:	ldr	r0, [fp, #-8]
    d594:	ldr	r1, [fp, #-12]
    d598:	ldr	r2, [fp, #-16]
    d59c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d5a0:	str	r0, [fp, #-12]
    d5a4:	b	d67c <Fantasy_Movie_parse_json_table+0x950>
    d5a8:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    d5ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d5b0:	movw	r2, #29281	; 0x7261
    d5b4:	eor	r2, r2, r1, lsr #16
    d5b8:	orr	r0, r0, r1, lsl #16
    d5bc:	movw	r1, #25970	; 0x6572
    d5c0:	movt	r1, #25460	; 0x6374
    d5c4:	eor	r0, r0, r1
    d5c8:	orr	r0, r0, r2
    d5cc:	cmp	r0, #0
    d5d0:	bne	d664 <Fantasy_Movie_parse_json_table+0x938>
    d5d4:	b	d5d8 <Fantasy_Movie_parse_json_table+0x8ac>
    d5d8:	ldr	r0, [fp, #-8]
    d5dc:	ldr	r1, [fp, #-12]
    d5e0:	str	r1, [fp, #-40]	; 0xffffffd8
    d5e4:	ldr	r2, [fp, #-16]
    d5e8:	movw	r3, #6
    d5ec:	bl	4e94 <flatcc_json_parser_match_symbol>
    d5f0:	str	r0, [fp, #-12]
    d5f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d5f8:	ldr	r1, [fp, #-12]
    d5fc:	cmp	r0, r1
    d600:	beq	d64c <Fantasy_Movie_parse_json_table+0x920>
    d604:	ldr	r0, [fp, #-8]
    d608:	ldr	r1, [fp, #-12]
    d60c:	ldr	r2, [fp, #-16]
    d610:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d614:	movw	ip, #0
    d618:	str	r3, [sp, #32]
    d61c:	mov	r3, ip
    d620:	movw	ip, #1
    d624:	uxth	ip, ip
    d628:	str	ip, [sp]
    d62c:	ldr	ip, [sp, #32]
    d630:	str	ip, [sp, #4]
    d634:	movw	lr, #0
    d638:	movt	lr, #0
    d63c:	str	lr, [sp, #8]
    d640:	bl	0 <flatcc_json_parser_union>
    d644:	str	r0, [fp, #-12]
    d648:	b	d660 <Fantasy_Movie_parse_json_table+0x934>
    d64c:	ldr	r0, [fp, #-8]
    d650:	ldr	r1, [fp, #-12]
    d654:	ldr	r2, [fp, #-16]
    d658:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d65c:	str	r0, [fp, #-12]
    d660:	b	d678 <Fantasy_Movie_parse_json_table+0x94c>
    d664:	ldr	r0, [fp, #-8]
    d668:	ldr	r1, [fp, #-12]
    d66c:	ldr	r2, [fp, #-16]
    d670:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d674:	str	r0, [fp, #-12]
    d678:	b	d67c <Fantasy_Movie_parse_json_table+0x950>
    d67c:	b	d86c <Fantasy_Movie_parse_json_table+0xb40>
    d680:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d684:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d688:	movw	r2, #25701	; 0x6465
    d68c:	movt	r2, #29545	; 0x7369
    d690:	eor	r1, r1, r2
    d694:	movw	r2, #26979	; 0x6963
    d698:	movt	r2, #24427	; 0x5f6b
    d69c:	eor	r0, r0, r2
    d6a0:	orr	r0, r0, r1
    d6a4:	cmp	r0, #0
    d6a8:	bne	d854 <Fantasy_Movie_parse_json_table+0xb28>
    d6ac:	b	d6b0 <Fantasy_Movie_parse_json_table+0x984>
    d6b0:	ldr	r0, [fp, #-12]
    d6b4:	add	r0, r0, #8
    d6b8:	str	r0, [fp, #-12]
    d6bc:	ldr	r0, [fp, #-12]
    d6c0:	ldr	r1, [fp, #-16]
    d6c4:	bl	4e5c <flatcc_json_parser_symbol_part>
    d6c8:	str	r1, [fp, #-44]	; 0xffffffd4
    d6cc:	str	r0, [fp, #-48]	; 0xffffffd0
    d6d0:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    d6d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    d6d8:	movw	lr, #27487	; 0x6b5f
    d6dc:	eor	lr, lr, r1, lsr #16
    d6e0:	orr	r0, r0, r1, lsl #16
    d6e4:	movw	r1, #28773	; 0x7065
    d6e8:	movt	r1, #29817	; 0x7479
    d6ec:	eor	r0, r0, r1
    d6f0:	orr	r0, r0, lr
    d6f4:	cmp	r0, #0
    d6f8:	bne	d798 <Fantasy_Movie_parse_json_table+0xa6c>
    d6fc:	b	d700 <Fantasy_Movie_parse_json_table+0x9d4>
    d700:	ldr	r0, [fp, #-8]
    d704:	ldr	r1, [fp, #-12]
    d708:	str	r1, [fp, #-40]	; 0xffffffd8
    d70c:	ldr	r2, [fp, #-16]
    d710:	movw	r3, #6
    d714:	bl	4e94 <flatcc_json_parser_match_symbol>
    d718:	str	r0, [fp, #-12]
    d71c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d720:	ldr	r1, [fp, #-12]
    d724:	cmp	r0, r1
    d728:	beq	d780 <Fantasy_Movie_parse_json_table+0xa54>
    d72c:	ldr	r0, [fp, #-8]
    d730:	ldr	r1, [fp, #-12]
    d734:	ldr	r2, [fp, #-16]
    d738:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d73c:	movw	ip, #2
    d740:	str	r3, [sp, #28]
    d744:	mov	r3, ip
    d748:	movw	ip, #5
    d74c:	uxth	ip, ip
    d750:	str	ip, [sp]
    d754:	ldr	ip, [sp, #28]
    d758:	str	ip, [sp, #4]
    d75c:	movw	lr, #0
    d760:	movt	lr, #0
    d764:	str	lr, [sp, #8]
    d768:	movw	lr, #0
    d76c:	movt	lr, #0
    d770:	str	lr, [sp, #12]
    d774:	bl	0 <flatcc_json_parser_union_type>
    d778:	str	r0, [fp, #-12]
    d77c:	b	d794 <Fantasy_Movie_parse_json_table+0xa68>
    d780:	ldr	r0, [fp, #-8]
    d784:	ldr	r1, [fp, #-12]
    d788:	ldr	r2, [fp, #-16]
    d78c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d790:	str	r0, [fp, #-12]
    d794:	b	d850 <Fantasy_Movie_parse_json_table+0xb24>
    d798:	ldr	r0, [fp, #-44]	; 0xffffffd4
    d79c:	and	r0, r0, #-16777216	; 0xff000000
    d7a0:	teq	r0, #1795162112	; 0x6b000000
    d7a4:	bne	d838 <Fantasy_Movie_parse_json_table+0xb0c>
    d7a8:	b	d7ac <Fantasy_Movie_parse_json_table+0xa80>
    d7ac:	ldr	r0, [fp, #-8]
    d7b0:	ldr	r1, [fp, #-12]
    d7b4:	str	r1, [fp, #-40]	; 0xffffffd8
    d7b8:	ldr	r2, [fp, #-16]
    d7bc:	movw	r3, #1
    d7c0:	bl	4e94 <flatcc_json_parser_match_symbol>
    d7c4:	str	r0, [fp, #-12]
    d7c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d7cc:	ldr	r1, [fp, #-12]
    d7d0:	cmp	r0, r1
    d7d4:	beq	d820 <Fantasy_Movie_parse_json_table+0xaf4>
    d7d8:	ldr	r0, [fp, #-8]
    d7dc:	ldr	r1, [fp, #-12]
    d7e0:	ldr	r2, [fp, #-16]
    d7e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d7e8:	movw	ip, #2
    d7ec:	str	r3, [sp, #24]
    d7f0:	mov	r3, ip
    d7f4:	movw	ip, #5
    d7f8:	uxth	ip, ip
    d7fc:	str	ip, [sp]
    d800:	ldr	ip, [sp, #24]
    d804:	str	ip, [sp, #4]
    d808:	movw	lr, #0
    d80c:	movt	lr, #0
    d810:	str	lr, [sp, #8]
    d814:	bl	0 <flatcc_json_parser_union>
    d818:	str	r0, [fp, #-12]
    d81c:	b	d834 <Fantasy_Movie_parse_json_table+0xb08>
    d820:	ldr	r0, [fp, #-8]
    d824:	ldr	r1, [fp, #-12]
    d828:	ldr	r2, [fp, #-16]
    d82c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d830:	str	r0, [fp, #-12]
    d834:	b	d84c <Fantasy_Movie_parse_json_table+0xb20>
    d838:	ldr	r0, [fp, #-8]
    d83c:	ldr	r1, [fp, #-12]
    d840:	ldr	r2, [fp, #-16]
    d844:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d848:	str	r0, [fp, #-12]
    d84c:	b	d850 <Fantasy_Movie_parse_json_table+0xb24>
    d850:	b	d868 <Fantasy_Movie_parse_json_table+0xb3c>
    d854:	ldr	r0, [fp, #-8]
    d858:	ldr	r1, [fp, #-12]
    d85c:	ldr	r2, [fp, #-16]
    d860:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d864:	str	r0, [fp, #-12]
    d868:	b	d86c <Fantasy_Movie_parse_json_table+0xb40>
    d86c:	b	d870 <Fantasy_Movie_parse_json_table+0xb44>
    d870:	b	d874 <Fantasy_Movie_parse_json_table+0xb48>
    d874:	ldr	r0, [fp, #-8]
    d878:	ldr	r1, [fp, #-12]
    d87c:	ldr	r2, [fp, #-16]
    d880:	sub	r3, fp, #24
    d884:	bl	a1ac <flatcc_json_parser_object_end>
    d888:	str	r0, [fp, #-12]
    d88c:	b	cdc8 <Fantasy_Movie_parse_json_table+0x9c>
    d890:	ldr	r0, [fp, #-8]
    d894:	ldr	r0, [r0, #24]
    d898:	cmp	r0, #0
    d89c:	beq	d8a4 <Fantasy_Movie_parse_json_table+0xb78>
    d8a0:	b	d8e8 <Fantasy_Movie_parse_json_table+0xbbc>
    d8a4:	ldr	r0, [fp, #-8]
    d8a8:	ldr	r1, [fp, #-12]
    d8ac:	ldr	r2, [fp, #-16]
    d8b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d8b4:	bl	0 <flatcc_json_parser_finalize_unions>
    d8b8:	str	r0, [fp, #-12]
    d8bc:	ldr	r0, [fp, #-8]
    d8c0:	ldr	r0, [r0]
    d8c4:	bl	0 <flatcc_builder_end_table>
    d8c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    d8cc:	str	r0, [r1]
    d8d0:	cmp	r0, #0
    d8d4:	bne	d8dc <Fantasy_Movie_parse_json_table+0xbb0>
    d8d8:	b	d8e8 <Fantasy_Movie_parse_json_table+0xbbc>
    d8dc:	ldr	r0, [fp, #-12]
    d8e0:	str	r0, [fp, #-4]
    d8e4:	b	d900 <Fantasy_Movie_parse_json_table+0xbd4>
    d8e8:	ldr	r0, [fp, #-8]
    d8ec:	ldr	r1, [fp, #-12]
    d8f0:	ldr	r2, [fp, #-16]
    d8f4:	movw	r3, #33	; 0x21
    d8f8:	bl	0 <flatcc_json_parser_set_error>
    d8fc:	str	r0, [fp, #-4]
    d900:	ldr	r0, [fp, #-4]
    d904:	mov	sp, fp
    d908:	pop	{fp, pc}

0000d90c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    d90c:	push	{fp, lr}
    d910:	mov	fp, sp
    d914:	sub	sp, sp, #64	; 0x40
    d918:	str	r0, [fp, #-8]
    d91c:	str	r1, [fp, #-12]
    d920:	str	r2, [fp, #-16]
    d924:	str	r3, [fp, #-20]	; 0xffffffec
    d928:	ldr	r0, [fp, #-20]	; 0xffffffec
    d92c:	movw	r1, #0
    d930:	str	r1, [r0]
    d934:	ldr	r0, [fp, #-8]
    d938:	ldr	r0, [r0]
    d93c:	movw	r1, #2
    d940:	bl	0 <flatcc_builder_start_table>
    d944:	cmp	r0, #0
    d948:	beq	d950 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x44>
    d94c:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    d950:	ldr	r0, [fp, #-8]
    d954:	ldr	r1, [fp, #-12]
    d958:	ldr	r2, [fp, #-16]
    d95c:	sub	r3, fp, #24
    d960:	bl	4ccc <flatcc_json_parser_object_start>
    d964:	str	r0, [fp, #-12]
    d968:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d96c:	cmp	r0, #0
    d970:	beq	dd04 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    d974:	ldr	r0, [fp, #-8]
    d978:	ldr	r1, [fp, #-12]
    d97c:	ldr	r2, [fp, #-16]
    d980:	bl	4db0 <flatcc_json_parser_symbol_start>
    d984:	str	r0, [fp, #-12]
    d988:	ldr	r0, [fp, #-12]
    d98c:	ldr	r1, [fp, #-16]
    d990:	bl	4e5c <flatcc_json_parser_symbol_part>
    d994:	str	r1, [sp, #20]
    d998:	str	r0, [sp, #16]
    d99c:	ldr	r0, [sp, #16]
    d9a0:	ldr	r1, [sp, #20]
    d9a4:	movw	r2, #24929	; 0x6161
    d9a8:	movt	r2, #24929	; 0x6161
    d9ac:	eor	r1, r1, r2
    d9b0:	movw	r2, #25186	; 0x6262
    d9b4:	movt	r2, #24418	; 0x5f62
    d9b8:	eor	r0, r0, r2
    d9bc:	orr	r0, r0, r1
    d9c0:	cmp	r0, #0
    d9c4:	bne	dcd4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c8>
    d9c8:	b	d9cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0xc0>
    d9cc:	ldr	r0, [fp, #-12]
    d9d0:	add	r0, r0, #8
    d9d4:	str	r0, [fp, #-12]
    d9d8:	ldr	r0, [fp, #-12]
    d9dc:	ldr	r1, [fp, #-16]
    d9e0:	bl	4e5c <flatcc_json_parser_symbol_part>
    d9e4:	str	r1, [sp, #20]
    d9e8:	str	r0, [sp, #16]
    d9ec:	ldr	r0, [sp, #16]
    d9f0:	ldr	r1, [sp, #20]
    d9f4:	movw	lr, #24435	; 0x5f73
    d9f8:	movt	lr, #98	; 0x62
    d9fc:	eor	lr, lr, r1, lsr #8
    da00:	lsr	r0, r0, #8
    da04:	orr	r0, r0, r1, lsl #24
    da08:	movw	r1, #28787	; 0x7073
    da0c:	movt	r1, #29797	; 0x7465
    da10:	eor	r0, r0, r1
    da14:	orr	r0, r0, lr
    da18:	cmp	r0, #0
    da1c:	bne	db60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x254>
    da20:	b	da24 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x118>
    da24:	ldr	r0, [fp, #-8]
    da28:	ldr	r1, [fp, #-12]
    da2c:	str	r1, [sp, #24]
    da30:	ldr	r2, [fp, #-16]
    da34:	movw	r3, #7
    da38:	bl	4e94 <flatcc_json_parser_match_symbol>
    da3c:	str	r0, [fp, #-12]
    da40:	ldr	r0, [sp, #24]
    da44:	ldr	r1, [fp, #-12]
    da48:	cmp	r0, r1
    da4c:	beq	db48 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x23c>
    da50:	mov	r0, #0
    da54:	str	r0, [sp, #12]
    da58:	str	r0, [sp, #8]
    da5c:	ldr	r0, [fp, #-8]
    da60:	ldr	r1, [fp, #-12]
    da64:	str	r1, [sp, #24]
    da68:	ldr	r2, [fp, #-16]
    da6c:	add	r3, sp, #8
    da70:	bl	957c <flatcc_json_parser_int64>
    da74:	str	r0, [fp, #-12]
    da78:	ldr	r0, [sp, #24]
    da7c:	ldr	r1, [fp, #-12]
    da80:	cmp	r0, r1
    da84:	bne	dad8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    da88:	ldr	r0, [fp, #-8]
    da8c:	ldr	r1, [fp, #-12]
    da90:	str	r1, [sp, #24]
    da94:	ldr	r2, [fp, #-16]
    da98:	movw	r3, #0
    da9c:	movt	r3, #0
    daa0:	add	ip, sp, #8
    daa4:	str	ip, [sp]
    daa8:	bl	9654 <flatcc_json_parser_symbolic_int64>
    daac:	str	r0, [fp, #-12]
    dab0:	ldr	r0, [fp, #-12]
    dab4:	ldr	r1, [sp, #24]
    dab8:	cmp	r0, r1
    dabc:	beq	dad0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c4>
    dac0:	ldr	r0, [fp, #-12]
    dac4:	ldr	r1, [fp, #-16]
    dac8:	cmp	r0, r1
    dacc:	bne	dad4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c8>
    dad0:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    dad4:	b	dad8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    dad8:	ldr	r0, [sp, #8]
    dadc:	ldr	r1, [sp, #12]
    dae0:	orr	r0, r0, r1
    dae4:	cmp	r0, #0
    dae8:	bne	db04 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f8>
    daec:	b	daf0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    daf0:	ldr	r0, [fp, #-8]
    daf4:	ldr	r0, [r0, #8]
    daf8:	and	r0, r0, #2
    dafc:	cmp	r0, #0
    db00:	beq	db44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x238>
    db04:	ldr	r0, [fp, #-8]
    db08:	ldr	r0, [r0]
    db0c:	movw	r1, #0
    db10:	movw	r2, #8
    db14:	movw	r3, #8
    db18:	uxth	r3, r3
    db1c:	bl	0 <flatcc_builder_table_add>
    db20:	str	r0, [fp, #-28]	; 0xffffffe4
    db24:	movw	r1, #0
    db28:	cmp	r0, r1
    db2c:	bne	db34 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x228>
    db30:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    db34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    db38:	ldr	r2, [sp, #8]
    db3c:	ldr	r3, [sp, #12]
    db40:	bl	9894 <flatbuffers_int64_write_to_pe>
    db44:	b	db5c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x250>
    db48:	ldr	r0, [fp, #-8]
    db4c:	ldr	r1, [fp, #-12]
    db50:	ldr	r2, [fp, #-16]
    db54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    db58:	str	r0, [fp, #-12]
    db5c:	b	dcd0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    db60:	ldr	r0, [sp, #16]
    db64:	ldr	r1, [sp, #20]
    db68:	movw	r2, #29556	; 0x7374
    db6c:	movt	r2, #25183	; 0x625f
    db70:	eor	r1, r1, r2
    db74:	movw	r2, #29791	; 0x745f
    db78:	movt	r2, #24946	; 0x6172
    db7c:	eor	r0, r0, r2
    db80:	orr	r0, r0, r1
    db84:	cmp	r0, #0
    db88:	bne	dcb8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ac>
    db8c:	b	db90 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x284>
    db90:	ldr	r0, [fp, #-8]
    db94:	ldr	r1, [fp, #-12]
    db98:	str	r1, [sp, #24]
    db9c:	ldr	r2, [fp, #-16]
    dba0:	movw	r3, #8
    dba4:	bl	4e94 <flatcc_json_parser_match_symbol>
    dba8:	str	r0, [fp, #-12]
    dbac:	ldr	r0, [sp, #24]
    dbb0:	ldr	r1, [fp, #-12]
    dbb4:	cmp	r0, r1
    dbb8:	beq	dca0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x394>
    dbbc:	movw	r0, #0
    dbc0:	str	r0, [sp, #4]
    dbc4:	ldr	r0, [fp, #-8]
    dbc8:	ldr	r1, [fp, #-12]
    dbcc:	str	r1, [sp, #24]
    dbd0:	ldr	r2, [fp, #-16]
    dbd4:	add	r3, sp, #4
    dbd8:	bl	98cc <flatcc_json_parser_uint32>
    dbdc:	str	r0, [fp, #-12]
    dbe0:	ldr	r0, [sp, #24]
    dbe4:	ldr	r1, [fp, #-12]
    dbe8:	cmp	r0, r1
    dbec:	bne	dc40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    dbf0:	ldr	r0, [fp, #-8]
    dbf4:	ldr	r1, [fp, #-12]
    dbf8:	str	r1, [sp, #24]
    dbfc:	ldr	r2, [fp, #-16]
    dc00:	movw	r3, #0
    dc04:	movt	r3, #0
    dc08:	add	ip, sp, #4
    dc0c:	str	ip, [sp]
    dc10:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    dc14:	str	r0, [fp, #-12]
    dc18:	ldr	r0, [fp, #-12]
    dc1c:	ldr	r1, [sp, #24]
    dc20:	cmp	r0, r1
    dc24:	beq	dc38 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    dc28:	ldr	r0, [fp, #-12]
    dc2c:	ldr	r1, [fp, #-16]
    dc30:	cmp	r0, r1
    dc34:	bne	dc3c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x330>
    dc38:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    dc3c:	b	dc40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    dc40:	ldr	r0, [sp, #4]
    dc44:	cmp	r0, #0
    dc48:	bne	dc60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x354>
    dc4c:	ldr	r0, [fp, #-8]
    dc50:	ldr	r0, [r0, #8]
    dc54:	and	r0, r0, #2
    dc58:	cmp	r0, #0
    dc5c:	beq	dc9c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    dc60:	ldr	r0, [fp, #-8]
    dc64:	ldr	r0, [r0]
    dc68:	movw	r1, #1
    dc6c:	movw	r2, #4
    dc70:	movw	r3, #4
    dc74:	uxth	r3, r3
    dc78:	bl	0 <flatcc_builder_table_add>
    dc7c:	str	r0, [fp, #-28]	; 0xffffffe4
    dc80:	movw	r1, #0
    dc84:	cmp	r0, r1
    dc88:	bne	dc90 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x384>
    dc8c:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    dc90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc94:	ldr	r1, [sp, #4]
    dc98:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    dc9c:	b	dcb4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3a8>
    dca0:	ldr	r0, [fp, #-8]
    dca4:	ldr	r1, [fp, #-12]
    dca8:	ldr	r2, [fp, #-16]
    dcac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dcb0:	str	r0, [fp, #-12]
    dcb4:	b	dccc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c0>
    dcb8:	ldr	r0, [fp, #-8]
    dcbc:	ldr	r1, [fp, #-12]
    dcc0:	ldr	r2, [fp, #-16]
    dcc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dcc8:	str	r0, [fp, #-12]
    dccc:	b	dcd0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    dcd0:	b	dce8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3dc>
    dcd4:	ldr	r0, [fp, #-8]
    dcd8:	ldr	r1, [fp, #-12]
    dcdc:	ldr	r2, [fp, #-16]
    dce0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dce4:	str	r0, [fp, #-12]
    dce8:	ldr	r0, [fp, #-8]
    dcec:	ldr	r1, [fp, #-12]
    dcf0:	ldr	r2, [fp, #-16]
    dcf4:	sub	r3, fp, #24
    dcf8:	bl	a1ac <flatcc_json_parser_object_end>
    dcfc:	str	r0, [fp, #-12]
    dd00:	b	d968 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x5c>
    dd04:	ldr	r0, [fp, #-8]
    dd08:	ldr	r0, [r0, #24]
    dd0c:	cmp	r0, #0
    dd10:	beq	dd18 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x40c>
    dd14:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    dd18:	ldr	r0, [fp, #-8]
    dd1c:	ldr	r0, [r0]
    dd20:	bl	0 <flatcc_builder_end_table>
    dd24:	ldr	lr, [fp, #-20]	; 0xffffffec
    dd28:	str	r0, [lr]
    dd2c:	cmp	r0, #0
    dd30:	bne	dd38 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x42c>
    dd34:	b	dd44 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    dd38:	ldr	r0, [fp, #-12]
    dd3c:	str	r0, [fp, #-4]
    dd40:	b	dd5c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x450>
    dd44:	ldr	r0, [fp, #-8]
    dd48:	ldr	r1, [fp, #-12]
    dd4c:	ldr	r2, [fp, #-16]
    dd50:	movw	r3, #33	; 0x21
    dd54:	bl	0 <flatcc_json_parser_set_error>
    dd58:	str	r0, [fp, #-4]
    dd5c:	ldr	r0, [fp, #-4]
    dd60:	mov	sp, fp
    dd64:	pop	{fp, pc}

0000dd68 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    dd68:	push	{fp, lr}
    dd6c:	mov	fp, sp
    dd70:	sub	sp, sp, #96	; 0x60
    dd74:	str	r0, [fp, #-8]
    dd78:	str	r1, [fp, #-12]
    dd7c:	str	r2, [fp, #-16]
    dd80:	str	r3, [fp, #-20]	; 0xffffffec
    dd84:	ldr	r0, [fp, #-20]	; 0xffffffec
    dd88:	movw	r1, #0
    dd8c:	str	r1, [r0]
    dd90:	ldr	r0, [fp, #-8]
    dd94:	ldr	r0, [r0]
    dd98:	movw	r1, #9
    dd9c:	bl	0 <flatcc_builder_start_table>
    dda0:	cmp	r0, #0
    dda4:	beq	ddac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44>
    dda8:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    ddac:	ldr	r0, [fp, #-8]
    ddb0:	ldr	r1, [fp, #-12]
    ddb4:	ldr	r2, [fp, #-16]
    ddb8:	sub	r3, fp, #24
    ddbc:	bl	4ccc <flatcc_json_parser_object_start>
    ddc0:	str	r0, [fp, #-12]
    ddc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ddc8:	cmp	r0, #0
    ddcc:	beq	e924 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbbc>
    ddd0:	ldr	r0, [fp, #-8]
    ddd4:	ldr	r1, [fp, #-12]
    ddd8:	ldr	r2, [fp, #-16]
    dddc:	bl	4db0 <flatcc_json_parser_symbol_start>
    dde0:	str	r0, [fp, #-12]
    dde4:	ldr	r0, [fp, #-12]
    dde8:	ldr	r1, [fp, #-16]
    ddec:	bl	4e5c <flatcc_json_parser_symbol_part>
    ddf0:	str	r1, [sp, #52]	; 0x34
    ddf4:	str	r0, [sp, #48]	; 0x30
    ddf8:	ldr	r0, [sp, #52]	; 0x34
    ddfc:	movw	r1, #25442	; 0x6362
    de00:	movt	r1, #25443	; 0x6363
    de04:	cmp	r0, r1
    de08:	bhi	e2a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x53c>
    de0c:	b	de10 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8>
    de10:	ldr	r0, [sp, #48]	; 0x30
    de14:	ldr	r1, [sp, #52]	; 0x34
    de18:	movw	r2, #24929	; 0x6161
    de1c:	movt	r2, #24929	; 0x6161
    de20:	eor	r1, r1, r2
    de24:	movw	r2, #13108	; 0x3334
    de28:	movt	r2, #12594	; 0x3132
    de2c:	eor	r0, r0, r2
    de30:	orr	r0, r0, r1
    de34:	cmp	r0, #0
    de38:	bne	dfb4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x24c>
    de3c:	b	de40 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd8>
    de40:	ldr	r0, [fp, #-12]
    de44:	add	r0, r0, #8
    de48:	str	r0, [fp, #-12]
    de4c:	ldr	r0, [fp, #-12]
    de50:	ldr	r1, [fp, #-16]
    de54:	bl	4e5c <flatcc_json_parser_symbol_part>
    de58:	str	r1, [sp, #52]	; 0x34
    de5c:	str	r0, [sp, #48]	; 0x30
    de60:	ldr	r0, [sp, #52]	; 0x34
    de64:	and	r0, r0, #-16777216	; 0xff000000
    de68:	teq	r0, #889192448	; 0x35000000
    de6c:	bne	df9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x234>
    de70:	b	de74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x10c>
    de74:	ldr	r0, [fp, #-8]
    de78:	ldr	r1, [fp, #-12]
    de7c:	str	r1, [fp, #-40]	; 0xffffffd8
    de80:	ldr	r2, [fp, #-16]
    de84:	movw	r3, #1
    de88:	bl	4e94 <flatcc_json_parser_match_symbol>
    de8c:	str	r0, [fp, #-12]
    de90:	ldr	r0, [fp, #-40]	; 0xffffffd8
    de94:	ldr	r1, [fp, #-12]
    de98:	cmp	r0, r1
    de9c:	beq	df84 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x21c>
    dea0:	movw	r0, #0
    dea4:	str	r0, [sp, #44]	; 0x2c
    dea8:	ldr	r0, [fp, #-8]
    deac:	ldr	r1, [fp, #-12]
    deb0:	str	r1, [fp, #-40]	; 0xffffffd8
    deb4:	ldr	r2, [fp, #-16]
    deb8:	add	r3, sp, #44	; 0x2c
    debc:	bl	98cc <flatcc_json_parser_uint32>
    dec0:	str	r0, [fp, #-12]
    dec4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dec8:	ldr	r1, [fp, #-12]
    decc:	cmp	r0, r1
    ded0:	bne	df24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
    ded4:	ldr	r0, [fp, #-8]
    ded8:	ldr	r1, [fp, #-12]
    dedc:	str	r1, [fp, #-40]	; 0xffffffd8
    dee0:	ldr	r2, [fp, #-16]
    dee4:	movw	r3, #0
    dee8:	movt	r3, #0
    deec:	add	ip, sp, #44	; 0x2c
    def0:	str	ip, [sp]
    def4:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    def8:	str	r0, [fp, #-12]
    defc:	ldr	r0, [fp, #-12]
    df00:	ldr	r1, [fp, #-40]	; 0xffffffd8
    df04:	cmp	r0, r1
    df08:	beq	df1c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b4>
    df0c:	ldr	r0, [fp, #-12]
    df10:	ldr	r1, [fp, #-16]
    df14:	cmp	r0, r1
    df18:	bne	df20 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    df1c:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    df20:	b	df24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
    df24:	ldr	r0, [sp, #44]	; 0x2c
    df28:	cmp	r0, #0
    df2c:	bne	df44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1dc>
    df30:	ldr	r0, [fp, #-8]
    df34:	ldr	r0, [r0, #8]
    df38:	and	r0, r0, #2
    df3c:	cmp	r0, #0
    df40:	beq	df80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
    df44:	ldr	r0, [fp, #-8]
    df48:	ldr	r0, [r0]
    df4c:	movw	r1, #1
    df50:	movw	r2, #4
    df54:	movw	r3, #4
    df58:	uxth	r3, r3
    df5c:	bl	0 <flatcc_builder_table_add>
    df60:	str	r0, [fp, #-28]	; 0xffffffe4
    df64:	movw	r1, #0
    df68:	cmp	r0, r1
    df6c:	bne	df74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x20c>
    df70:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    df74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    df78:	ldr	r1, [sp, #44]	; 0x2c
    df7c:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    df80:	b	df98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
    df84:	ldr	r0, [fp, #-8]
    df88:	ldr	r1, [fp, #-12]
    df8c:	ldr	r2, [fp, #-16]
    df90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    df94:	str	r0, [fp, #-12]
    df98:	b	dfb0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x248>
    df9c:	ldr	r0, [fp, #-8]
    dfa0:	ldr	r1, [fp, #-12]
    dfa4:	ldr	r2, [fp, #-16]
    dfa8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dfac:	str	r0, [fp, #-12]
    dfb0:	b	e2a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
    dfb4:	ldr	r0, [sp, #52]	; 0x34
    dfb8:	movw	r1, #24929	; 0x6161
    dfbc:	movt	r1, #24929	; 0x6161
    dfc0:	teq	r0, r1
    dfc4:	bne	e058 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f0>
    dfc8:	b	dfcc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x264>
    dfcc:	ldr	r0, [fp, #-8]
    dfd0:	ldr	r1, [fp, #-12]
    dfd4:	str	r1, [fp, #-40]	; 0xffffffd8
    dfd8:	ldr	r2, [fp, #-16]
    dfdc:	movw	r3, #4
    dfe0:	bl	4e94 <flatcc_json_parser_match_symbol>
    dfe4:	str	r0, [fp, #-12]
    dfe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dfec:	ldr	r1, [fp, #-12]
    dff0:	cmp	r0, r1
    dff4:	beq	e050 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
    dff8:	ldr	r0, [fp, #-8]
    dffc:	ldr	r1, [fp, #-12]
    e000:	ldr	r2, [fp, #-16]
    e004:	sub	r3, fp, #32
    e008:	bl	0 <flatcc_json_parser_build_string>
    e00c:	str	r0, [fp, #-12]
    e010:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e014:	cmp	r0, #0
    e018:	beq	e03c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d4>
    e01c:	ldr	r0, [fp, #-8]
    e020:	ldr	r0, [r0]
    e024:	movw	r1, #0
    e028:	bl	0 <flatcc_builder_table_add_offset>
    e02c:	str	r0, [fp, #-36]	; 0xffffffdc
    e030:	movw	r1, #0
    e034:	cmp	r0, r1
    e038:	bne	e040 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d8>
    e03c:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e040:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e044:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e048:	str	r0, [r1]
    e04c:	b	e054 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
    e050:	b	e060 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
    e054:	b	e05c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f4>
    e058:	b	e060 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
    e05c:	b	e29c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    e060:	ldr	r0, [sp, #48]	; 0x30
    e064:	ldr	r1, [sp, #52]	; 0x34
    e068:	movw	r2, #25186	; 0x6262
    e06c:	movt	r2, #25186	; 0x6262
    e070:	eor	r1, r1, r2
    e074:	movw	r2, #13108	; 0x3334
    e078:	movt	r2, #12594	; 0x3132
    e07c:	eor	r0, r0, r2
    e080:	orr	r0, r0, r1
    e084:	cmp	r0, #0
    e088:	bne	e1cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x464>
    e08c:	b	e090 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
    e090:	ldr	r0, [fp, #-8]
    e094:	ldr	r1, [fp, #-12]
    e098:	str	r1, [fp, #-40]	; 0xffffffd8
    e09c:	ldr	r2, [fp, #-16]
    e0a0:	movw	r3, #8
    e0a4:	bl	4e94 <flatcc_json_parser_match_symbol>
    e0a8:	str	r0, [fp, #-12]
    e0ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e0b0:	ldr	r1, [fp, #-12]
    e0b4:	cmp	r0, r1
    e0b8:	beq	e1b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
    e0bc:	mov	r0, #0
    e0c0:	str	r0, [sp, #36]	; 0x24
    e0c4:	str	r0, [sp, #32]
    e0c8:	ldr	r0, [fp, #-8]
    e0cc:	ldr	r1, [fp, #-12]
    e0d0:	str	r1, [fp, #-40]	; 0xffffffd8
    e0d4:	ldr	r2, [fp, #-16]
    e0d8:	add	r3, sp, #32
    e0dc:	bl	957c <flatcc_json_parser_int64>
    e0e0:	str	r0, [fp, #-12]
    e0e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e0e8:	ldr	r1, [fp, #-12]
    e0ec:	cmp	r0, r1
    e0f0:	bne	e144 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
    e0f4:	ldr	r0, [fp, #-8]
    e0f8:	ldr	r1, [fp, #-12]
    e0fc:	str	r1, [fp, #-40]	; 0xffffffd8
    e100:	ldr	r2, [fp, #-16]
    e104:	movw	r3, #0
    e108:	movt	r3, #0
    e10c:	add	ip, sp, #32
    e110:	str	ip, [sp]
    e114:	bl	9654 <flatcc_json_parser_symbolic_int64>
    e118:	str	r0, [fp, #-12]
    e11c:	ldr	r0, [fp, #-12]
    e120:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e124:	cmp	r0, r1
    e128:	beq	e13c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d4>
    e12c:	ldr	r0, [fp, #-12]
    e130:	ldr	r1, [fp, #-16]
    e134:	cmp	r0, r1
    e138:	bne	e140 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
    e13c:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e140:	b	e144 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
    e144:	ldr	r0, [sp, #32]
    e148:	ldr	r1, [sp, #36]	; 0x24
    e14c:	orr	r0, r0, r1
    e150:	cmp	r0, #0
    e154:	bne	e170 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x408>
    e158:	b	e15c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3f4>
    e15c:	ldr	r0, [fp, #-8]
    e160:	ldr	r0, [r0, #8]
    e164:	and	r0, r0, #2
    e168:	cmp	r0, #0
    e16c:	beq	e1b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x448>
    e170:	ldr	r0, [fp, #-8]
    e174:	ldr	r0, [r0]
    e178:	movw	r1, #3
    e17c:	movw	r2, #8
    e180:	movw	r3, #8
    e184:	uxth	r3, r3
    e188:	bl	0 <flatcc_builder_table_add>
    e18c:	str	r0, [fp, #-28]	; 0xffffffe4
    e190:	movw	r1, #0
    e194:	cmp	r0, r1
    e198:	bne	e1a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x438>
    e19c:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e1a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e1a4:	ldr	r2, [sp, #32]
    e1a8:	ldr	r3, [sp, #36]	; 0x24
    e1ac:	bl	9894 <flatbuffers_int64_write_to_pe>
    e1b0:	b	e1c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x460>
    e1b4:	ldr	r0, [fp, #-8]
    e1b8:	ldr	r1, [fp, #-12]
    e1bc:	ldr	r2, [fp, #-16]
    e1c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e1c4:	str	r0, [fp, #-12]
    e1c8:	b	e298 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    e1cc:	ldr	r0, [sp, #52]	; 0x34
    e1d0:	movw	r1, #25186	; 0x6262
    e1d4:	movt	r1, #25186	; 0x6262
    e1d8:	teq	r0, r1
    e1dc:	bne	e280 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x518>
    e1e0:	b	e1e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x47c>
    e1e4:	ldr	r0, [fp, #-8]
    e1e8:	ldr	r1, [fp, #-12]
    e1ec:	str	r1, [fp, #-40]	; 0xffffffd8
    e1f0:	ldr	r2, [fp, #-16]
    e1f4:	movw	r3, #4
    e1f8:	bl	4e94 <flatcc_json_parser_match_symbol>
    e1fc:	str	r0, [fp, #-12]
    e200:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e204:	ldr	r1, [fp, #-12]
    e208:	cmp	r0, r1
    e20c:	beq	e268 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
    e210:	ldr	r0, [fp, #-8]
    e214:	ldr	r1, [fp, #-12]
    e218:	ldr	r2, [fp, #-16]
    e21c:	sub	r3, fp, #32
    e220:	bl	0 <flatcc_json_parser_build_string>
    e224:	str	r0, [fp, #-12]
    e228:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e22c:	cmp	r0, #0
    e230:	beq	e254 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4ec>
    e234:	ldr	r0, [fp, #-8]
    e238:	ldr	r0, [r0]
    e23c:	movw	r1, #2
    e240:	bl	0 <flatcc_builder_table_add_offset>
    e244:	str	r0, [fp, #-36]	; 0xffffffdc
    e248:	movw	r1, #0
    e24c:	cmp	r0, r1
    e250:	bne	e258 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4f0>
    e254:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e258:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e25c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e260:	str	r0, [r1]
    e264:	b	e27c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x514>
    e268:	ldr	r0, [fp, #-8]
    e26c:	ldr	r1, [fp, #-12]
    e270:	ldr	r2, [fp, #-16]
    e274:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e278:	str	r0, [fp, #-12]
    e27c:	b	e294 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x52c>
    e280:	ldr	r0, [fp, #-8]
    e284:	ldr	r1, [fp, #-12]
    e288:	ldr	r2, [fp, #-16]
    e28c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e290:	str	r0, [fp, #-12]
    e294:	b	e298 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    e298:	b	e29c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    e29c:	b	e2a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
    e2a0:	b	e908 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
    e2a4:	ldr	r0, [sp, #48]	; 0x30
    e2a8:	ldr	r1, [sp, #52]	; 0x34
    e2ac:	movw	r2, #25443	; 0x6363
    e2b0:	movt	r2, #25443	; 0x6363
    e2b4:	eor	r1, r1, r2
    e2b8:	movw	r2, #13108	; 0x3334
    e2bc:	movt	r2, #12594	; 0x3132
    e2c0:	eor	r0, r0, r2
    e2c4:	orr	r0, r0, r1
    e2c8:	cmp	r0, #0
    e2cc:	bne	e570 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
    e2d0:	b	e2d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x56c>
    e2d4:	ldr	r0, [fp, #-8]
    e2d8:	ldr	r1, [fp, #-12]
    e2dc:	str	r1, [fp, #-40]	; 0xffffffd8
    e2e0:	ldr	r2, [fp, #-16]
    e2e4:	movw	r3, #8
    e2e8:	bl	4e94 <flatcc_json_parser_match_symbol>
    e2ec:	str	r0, [fp, #-12]
    e2f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e2f4:	ldr	r1, [fp, #-12]
    e2f8:	cmp	r0, r1
    e2fc:	beq	e3f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x690>
    e300:	mov	r0, #0
    e304:	str	r0, [sp, #28]
    e308:	str	r0, [sp, #24]
    e30c:	ldr	r0, [fp, #-8]
    e310:	ldr	r1, [fp, #-12]
    e314:	str	r1, [fp, #-40]	; 0xffffffd8
    e318:	ldr	r2, [fp, #-16]
    e31c:	add	r3, sp, #24
    e320:	bl	957c <flatcc_json_parser_int64>
    e324:	str	r0, [fp, #-12]
    e328:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e32c:	ldr	r1, [fp, #-12]
    e330:	cmp	r0, r1
    e334:	bne	e388 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    e338:	ldr	r0, [fp, #-8]
    e33c:	ldr	r1, [fp, #-12]
    e340:	str	r1, [fp, #-40]	; 0xffffffd8
    e344:	ldr	r2, [fp, #-16]
    e348:	movw	r3, #0
    e34c:	movt	r3, #0
    e350:	add	ip, sp, #24
    e354:	str	ip, [sp]
    e358:	bl	9654 <flatcc_json_parser_symbolic_int64>
    e35c:	str	r0, [fp, #-12]
    e360:	ldr	r0, [fp, #-12]
    e364:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e368:	cmp	r0, r1
    e36c:	beq	e380 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x618>
    e370:	ldr	r0, [fp, #-12]
    e374:	ldr	r1, [fp, #-16]
    e378:	cmp	r0, r1
    e37c:	bne	e384 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x61c>
    e380:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e384:	b	e388 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
    e388:	ldr	r0, [sp, #24]
    e38c:	ldr	r1, [sp, #28]
    e390:	orr	r0, r0, r1
    e394:	cmp	r0, #0
    e398:	bne	e3b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64c>
    e39c:	b	e3a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
    e3a0:	ldr	r0, [fp, #-8]
    e3a4:	ldr	r0, [r0, #8]
    e3a8:	and	r0, r0, #2
    e3ac:	cmp	r0, #0
    e3b0:	beq	e3f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x68c>
    e3b4:	ldr	r0, [fp, #-8]
    e3b8:	ldr	r0, [r0]
    e3bc:	movw	r1, #5
    e3c0:	movw	r2, #8
    e3c4:	movw	r3, #8
    e3c8:	uxth	r3, r3
    e3cc:	bl	0 <flatcc_builder_table_add>
    e3d0:	str	r0, [fp, #-28]	; 0xffffffe4
    e3d4:	movw	r1, #0
    e3d8:	cmp	r0, r1
    e3dc:	bne	e3e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x67c>
    e3e0:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e3e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e3e8:	ldr	r2, [sp, #24]
    e3ec:	ldr	r3, [sp, #28]
    e3f0:	bl	9894 <flatbuffers_int64_write_to_pe>
    e3f4:	b	e56c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
    e3f8:	ldr	r0, [fp, #-12]
    e3fc:	add	r0, r0, #8
    e400:	str	r0, [fp, #-12]
    e404:	ldr	r0, [fp, #-12]
    e408:	ldr	r1, [fp, #-16]
    e40c:	bl	4e5c <flatcc_json_parser_symbol_part>
    e410:	str	r1, [sp, #52]	; 0x34
    e414:	str	r0, [sp, #48]	; 0x30
    e418:	ldr	r0, [sp, #52]	; 0x34
    e41c:	and	r0, r0, #-16777216	; 0xff000000
    e420:	teq	r0, #889192448	; 0x35000000
    e424:	bne	e554 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
    e428:	b	e42c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c4>
    e42c:	ldr	r0, [fp, #-8]
    e430:	ldr	r1, [fp, #-12]
    e434:	str	r1, [fp, #-40]	; 0xffffffd8
    e438:	ldr	r2, [fp, #-16]
    e43c:	movw	r3, #1
    e440:	bl	4e94 <flatcc_json_parser_match_symbol>
    e444:	str	r0, [fp, #-12]
    e448:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e44c:	ldr	r1, [fp, #-12]
    e450:	cmp	r0, r1
    e454:	beq	e53c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d4>
    e458:	movw	r0, #0
    e45c:	str	r0, [sp, #20]
    e460:	ldr	r0, [fp, #-8]
    e464:	ldr	r1, [fp, #-12]
    e468:	str	r1, [fp, #-40]	; 0xffffffd8
    e46c:	ldr	r2, [fp, #-16]
    e470:	add	r3, sp, #20
    e474:	bl	98cc <flatcc_json_parser_uint32>
    e478:	str	r0, [fp, #-12]
    e47c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e480:	ldr	r1, [fp, #-12]
    e484:	cmp	r0, r1
    e488:	bne	e4dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
    e48c:	ldr	r0, [fp, #-8]
    e490:	ldr	r1, [fp, #-12]
    e494:	str	r1, [fp, #-40]	; 0xffffffd8
    e498:	ldr	r2, [fp, #-16]
    e49c:	movw	r3, #0
    e4a0:	movt	r3, #0
    e4a4:	add	ip, sp, #20
    e4a8:	str	ip, [sp]
    e4ac:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    e4b0:	str	r0, [fp, #-12]
    e4b4:	ldr	r0, [fp, #-12]
    e4b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e4bc:	cmp	r0, r1
    e4c0:	beq	e4d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x76c>
    e4c4:	ldr	r0, [fp, #-12]
    e4c8:	ldr	r1, [fp, #-16]
    e4cc:	cmp	r0, r1
    e4d0:	bne	e4d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x770>
    e4d4:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e4d8:	b	e4dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
    e4dc:	ldr	r0, [sp, #20]
    e4e0:	cmp	r0, #0
    e4e4:	bne	e4fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x794>
    e4e8:	ldr	r0, [fp, #-8]
    e4ec:	ldr	r0, [r0, #8]
    e4f0:	and	r0, r0, #2
    e4f4:	cmp	r0, #0
    e4f8:	beq	e538 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d0>
    e4fc:	ldr	r0, [fp, #-8]
    e500:	ldr	r0, [r0]
    e504:	movw	r1, #6
    e508:	movw	r2, #4
    e50c:	movw	r3, #4
    e510:	uxth	r3, r3
    e514:	bl	0 <flatcc_builder_table_add>
    e518:	str	r0, [fp, #-28]	; 0xffffffe4
    e51c:	movw	r1, #0
    e520:	cmp	r0, r1
    e524:	bne	e52c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7c4>
    e528:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e52c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e530:	ldr	r1, [sp, #20]
    e534:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    e538:	b	e550 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
    e53c:	ldr	r0, [fp, #-8]
    e540:	ldr	r1, [fp, #-12]
    e544:	ldr	r2, [fp, #-16]
    e548:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e54c:	str	r0, [fp, #-12]
    e550:	b	e568 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x800>
    e554:	ldr	r0, [fp, #-8]
    e558:	ldr	r1, [fp, #-12]
    e55c:	ldr	r2, [fp, #-16]
    e560:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e564:	str	r0, [fp, #-12]
    e568:	b	e56c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
    e56c:	b	e904 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
    e570:	ldr	r0, [sp, #52]	; 0x34
    e574:	movw	r1, #25443	; 0x6363
    e578:	movt	r1, #25443	; 0x6363
    e57c:	teq	r0, r1
    e580:	bne	e614 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8ac>
    e584:	b	e588 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x820>
    e588:	ldr	r0, [fp, #-8]
    e58c:	ldr	r1, [fp, #-12]
    e590:	str	r1, [fp, #-40]	; 0xffffffd8
    e594:	ldr	r2, [fp, #-16]
    e598:	movw	r3, #4
    e59c:	bl	4e94 <flatcc_json_parser_match_symbol>
    e5a0:	str	r0, [fp, #-12]
    e5a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e5a8:	ldr	r1, [fp, #-12]
    e5ac:	cmp	r0, r1
    e5b0:	beq	e60c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
    e5b4:	ldr	r0, [fp, #-8]
    e5b8:	ldr	r1, [fp, #-12]
    e5bc:	ldr	r2, [fp, #-16]
    e5c0:	sub	r3, fp, #32
    e5c4:	bl	0 <flatcc_json_parser_build_string>
    e5c8:	str	r0, [fp, #-12]
    e5cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e5d0:	cmp	r0, #0
    e5d4:	beq	e5f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x890>
    e5d8:	ldr	r0, [fp, #-8]
    e5dc:	ldr	r0, [r0]
    e5e0:	movw	r1, #4
    e5e4:	bl	0 <flatcc_builder_table_add_offset>
    e5e8:	str	r0, [fp, #-36]	; 0xffffffdc
    e5ec:	movw	r1, #0
    e5f0:	cmp	r0, r1
    e5f4:	bne	e5fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x894>
    e5f8:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e5fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e600:	ldr	r1, [fp, #-36]	; 0xffffffdc
    e604:	str	r0, [r1]
    e608:	b	e610 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
    e60c:	b	e61c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
    e610:	b	e618 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b0>
    e614:	b	e61c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
    e618:	b	e900 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
    e61c:	ldr	r0, [sp, #48]	; 0x30
    e620:	ldr	r1, [sp, #52]	; 0x34
    e624:	movw	r2, #25700	; 0x6464
    e628:	movt	r2, #25700	; 0x6464
    e62c:	eor	r1, r1, r2
    e630:	movw	r2, #13108	; 0x3334
    e634:	movt	r2, #12594	; 0x3132
    e638:	eor	r0, r0, r2
    e63c:	orr	r0, r0, r1
    e640:	cmp	r0, #0
    e644:	bne	e8e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb80>
    e648:	b	e64c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8e4>
    e64c:	ldr	r0, [fp, #-8]
    e650:	ldr	r1, [fp, #-12]
    e654:	str	r1, [fp, #-40]	; 0xffffffd8
    e658:	ldr	r2, [fp, #-16]
    e65c:	movw	r3, #8
    e660:	bl	4e94 <flatcc_json_parser_match_symbol>
    e664:	str	r0, [fp, #-12]
    e668:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e66c:	ldr	r1, [fp, #-12]
    e670:	cmp	r0, r1
    e674:	beq	e770 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa08>
    e678:	mov	r0, #0
    e67c:	str	r0, [sp, #12]
    e680:	str	r0, [sp, #8]
    e684:	ldr	r0, [fp, #-8]
    e688:	ldr	r1, [fp, #-12]
    e68c:	str	r1, [fp, #-40]	; 0xffffffd8
    e690:	ldr	r2, [fp, #-16]
    e694:	add	r3, sp, #8
    e698:	bl	957c <flatcc_json_parser_int64>
    e69c:	str	r0, [fp, #-12]
    e6a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e6a4:	ldr	r1, [fp, #-12]
    e6a8:	cmp	r0, r1
    e6ac:	bne	e700 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
    e6b0:	ldr	r0, [fp, #-8]
    e6b4:	ldr	r1, [fp, #-12]
    e6b8:	str	r1, [fp, #-40]	; 0xffffffd8
    e6bc:	ldr	r2, [fp, #-16]
    e6c0:	movw	r3, #0
    e6c4:	movt	r3, #0
    e6c8:	add	ip, sp, #8
    e6cc:	str	ip, [sp]
    e6d0:	bl	9654 <flatcc_json_parser_symbolic_int64>
    e6d4:	str	r0, [fp, #-12]
    e6d8:	ldr	r0, [fp, #-12]
    e6dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e6e0:	cmp	r0, r1
    e6e4:	beq	e6f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x990>
    e6e8:	ldr	r0, [fp, #-12]
    e6ec:	ldr	r1, [fp, #-16]
    e6f0:	cmp	r0, r1
    e6f4:	bne	e6fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
    e6f8:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e6fc:	b	e700 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
    e700:	ldr	r0, [sp, #8]
    e704:	ldr	r1, [sp, #12]
    e708:	orr	r0, r0, r1
    e70c:	cmp	r0, #0
    e710:	bne	e72c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
    e714:	b	e718 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9b0>
    e718:	ldr	r0, [fp, #-8]
    e71c:	ldr	r0, [r0, #8]
    e720:	and	r0, r0, #2
    e724:	cmp	r0, #0
    e728:	beq	e76c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
    e72c:	ldr	r0, [fp, #-8]
    e730:	ldr	r0, [r0]
    e734:	movw	r1, #7
    e738:	movw	r2, #8
    e73c:	movw	r3, #8
    e740:	uxth	r3, r3
    e744:	bl	0 <flatcc_builder_table_add>
    e748:	str	r0, [fp, #-28]	; 0xffffffe4
    e74c:	movw	r1, #0
    e750:	cmp	r0, r1
    e754:	bne	e75c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f4>
    e758:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e760:	ldr	r2, [sp, #8]
    e764:	ldr	r3, [sp, #12]
    e768:	bl	9894 <flatbuffers_int64_write_to_pe>
    e76c:	b	e8e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
    e770:	ldr	r0, [fp, #-12]
    e774:	add	r0, r0, #8
    e778:	str	r0, [fp, #-12]
    e77c:	ldr	r0, [fp, #-12]
    e780:	ldr	r1, [fp, #-16]
    e784:	bl	4e5c <flatcc_json_parser_symbol_part>
    e788:	str	r1, [sp, #52]	; 0x34
    e78c:	str	r0, [sp, #48]	; 0x30
    e790:	ldr	r0, [sp, #52]	; 0x34
    e794:	and	r0, r0, #-16777216	; 0xff000000
    e798:	teq	r0, #889192448	; 0x35000000
    e79c:	bne	e8cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb64>
    e7a0:	b	e7a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa3c>
    e7a4:	ldr	r0, [fp, #-8]
    e7a8:	ldr	r1, [fp, #-12]
    e7ac:	str	r1, [fp, #-40]	; 0xffffffd8
    e7b0:	ldr	r2, [fp, #-16]
    e7b4:	movw	r3, #1
    e7b8:	bl	4e94 <flatcc_json_parser_match_symbol>
    e7bc:	str	r0, [fp, #-12]
    e7c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e7c4:	ldr	r1, [fp, #-12]
    e7c8:	cmp	r0, r1
    e7cc:	beq	e8b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb4c>
    e7d0:	movw	r0, #0
    e7d4:	str	r0, [sp, #4]
    e7d8:	ldr	r0, [fp, #-8]
    e7dc:	ldr	r1, [fp, #-12]
    e7e0:	str	r1, [fp, #-40]	; 0xffffffd8
    e7e4:	ldr	r2, [fp, #-16]
    e7e8:	add	r3, sp, #4
    e7ec:	bl	98cc <flatcc_json_parser_uint32>
    e7f0:	str	r0, [fp, #-12]
    e7f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e7f8:	ldr	r1, [fp, #-12]
    e7fc:	cmp	r0, r1
    e800:	bne	e854 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
    e804:	ldr	r0, [fp, #-8]
    e808:	ldr	r1, [fp, #-12]
    e80c:	str	r1, [fp, #-40]	; 0xffffffd8
    e810:	ldr	r2, [fp, #-16]
    e814:	movw	r3, #0
    e818:	movt	r3, #0
    e81c:	add	ip, sp, #4
    e820:	str	ip, [sp]
    e824:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    e828:	str	r0, [fp, #-12]
    e82c:	ldr	r0, [fp, #-12]
    e830:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e834:	cmp	r0, r1
    e838:	beq	e84c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
    e83c:	ldr	r0, [fp, #-12]
    e840:	ldr	r1, [fp, #-16]
    e844:	cmp	r0, r1
    e848:	bne	e850 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae8>
    e84c:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e850:	b	e854 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
    e854:	ldr	r0, [sp, #4]
    e858:	cmp	r0, #0
    e85c:	bne	e874 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb0c>
    e860:	ldr	r0, [fp, #-8]
    e864:	ldr	r0, [r0, #8]
    e868:	and	r0, r0, #2
    e86c:	cmp	r0, #0
    e870:	beq	e8b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb48>
    e874:	ldr	r0, [fp, #-8]
    e878:	ldr	r0, [r0]
    e87c:	movw	r1, #8
    e880:	movw	r2, #4
    e884:	movw	r3, #4
    e888:	uxth	r3, r3
    e88c:	bl	0 <flatcc_builder_table_add>
    e890:	str	r0, [fp, #-28]	; 0xffffffe4
    e894:	movw	r1, #0
    e898:	cmp	r0, r1
    e89c:	bne	e8a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb3c>
    e8a0:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e8a8:	ldr	r1, [sp, #4]
    e8ac:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    e8b0:	b	e8c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb60>
    e8b4:	ldr	r0, [fp, #-8]
    e8b8:	ldr	r1, [fp, #-12]
    e8bc:	ldr	r2, [fp, #-16]
    e8c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e8c4:	str	r0, [fp, #-12]
    e8c8:	b	e8e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb78>
    e8cc:	ldr	r0, [fp, #-8]
    e8d0:	ldr	r1, [fp, #-12]
    e8d4:	ldr	r2, [fp, #-16]
    e8d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e8dc:	str	r0, [fp, #-12]
    e8e0:	b	e8e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
    e8e4:	b	e8fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb94>
    e8e8:	ldr	r0, [fp, #-8]
    e8ec:	ldr	r1, [fp, #-12]
    e8f0:	ldr	r2, [fp, #-16]
    e8f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e8f8:	str	r0, [fp, #-12]
    e8fc:	b	e900 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
    e900:	b	e904 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
    e904:	b	e908 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
    e908:	ldr	r0, [fp, #-8]
    e90c:	ldr	r1, [fp, #-12]
    e910:	ldr	r2, [fp, #-16]
    e914:	sub	r3, fp, #24
    e918:	bl	a1ac <flatcc_json_parser_object_end>
    e91c:	str	r0, [fp, #-12]
    e920:	b	ddc4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5c>
    e924:	ldr	r0, [fp, #-8]
    e928:	ldr	r0, [r0, #24]
    e92c:	cmp	r0, #0
    e930:	beq	e938 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
    e934:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e938:	ldr	r0, [fp, #-8]
    e93c:	ldr	r0, [r0]
    e940:	bl	0 <flatcc_builder_end_table>
    e944:	ldr	lr, [fp, #-20]	; 0xffffffec
    e948:	str	r0, [lr]
    e94c:	cmp	r0, #0
    e950:	bne	e958 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
    e954:	b	e964 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    e958:	ldr	r0, [fp, #-12]
    e95c:	str	r0, [fp, #-4]
    e960:	b	e97c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    e964:	ldr	r0, [fp, #-8]
    e968:	ldr	r1, [fp, #-12]
    e96c:	ldr	r2, [fp, #-16]
    e970:	movw	r3, #33	; 0x21
    e974:	bl	0 <flatcc_json_parser_set_error>
    e978:	str	r0, [fp, #-4]
    e97c:	ldr	r0, [fp, #-4]
    e980:	mov	sp, fp
    e984:	pop	{fp, pc}

0000e988 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    e988:	push	{fp, lr}
    e98c:	mov	fp, sp
    e990:	sub	sp, sp, #72	; 0x48
    e994:	str	r0, [fp, #-8]
    e998:	str	r1, [fp, #-12]
    e99c:	str	r2, [fp, #-16]
    e9a0:	str	r3, [fp, #-20]	; 0xffffffec
    e9a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e9a8:	movw	r1, #0
    e9ac:	str	r1, [r0]
    e9b0:	ldr	r0, [fp, #-8]
    e9b4:	ldr	r0, [r0]
    e9b8:	movw	r1, #2
    e9bc:	bl	0 <flatcc_builder_start_table>
    e9c0:	cmp	r0, #0
    e9c4:	beq	e9cc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44>
    e9c8:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    e9cc:	ldr	r0, [fp, #-8]
    e9d0:	ldr	r1, [fp, #-12]
    e9d4:	ldr	r2, [fp, #-16]
    e9d8:	sub	r3, fp, #24
    e9dc:	bl	4ccc <flatcc_json_parser_object_start>
    e9e0:	str	r0, [fp, #-12]
    e9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e9e8:	cmp	r0, #0
    e9ec:	beq	ede4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x45c>
    e9f0:	ldr	r0, [fp, #-8]
    e9f4:	ldr	r1, [fp, #-12]
    e9f8:	ldr	r2, [fp, #-16]
    e9fc:	bl	4db0 <flatcc_json_parser_symbol_start>
    ea00:	str	r0, [fp, #-12]
    ea04:	ldr	r0, [fp, #-12]
    ea08:	ldr	r1, [fp, #-16]
    ea0c:	bl	4e5c <flatcc_json_parser_symbol_part>
    ea10:	str	r1, [sp, #28]
    ea14:	str	r0, [sp, #24]
    ea18:	ldr	r0, [sp, #24]
    ea1c:	ldr	r1, [sp, #28]
    ea20:	movw	r2, #24929	; 0x6161
    ea24:	movt	r2, #24929	; 0x6161
    ea28:	eor	r1, r1, r2
    ea2c:	movw	r2, #25186	; 0x6262
    ea30:	movt	r2, #24418	; 0x5f62
    ea34:	eor	r0, r0, r2
    ea38:	orr	r0, r0, r1
    ea3c:	cmp	r0, #0
    ea40:	bne	edb4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x42c>
    ea44:	b	ea48 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0xc0>
    ea48:	ldr	r0, [fp, #-12]
    ea4c:	add	r0, r0, #8
    ea50:	str	r0, [fp, #-12]
    ea54:	ldr	r0, [fp, #-12]
    ea58:	ldr	r1, [fp, #-16]
    ea5c:	bl	4e5c <flatcc_json_parser_symbol_part>
    ea60:	str	r1, [sp, #28]
    ea64:	str	r0, [sp, #24]
    ea68:	ldr	r0, [sp, #24]
    ea6c:	ldr	r1, [sp, #28]
    ea70:	movw	lr, #29556	; 0x7374
    ea74:	movt	lr, #25183	; 0x625f
    ea78:	eor	r1, r1, lr
    ea7c:	movw	lr, #29791	; 0x745f
    ea80:	movt	lr, #24946	; 0x6172
    ea84:	eor	r0, r0, lr
    ea88:	orr	r0, r0, r1
    ea8c:	cmp	r0, #0
    ea90:	bne	ec24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x29c>
    ea94:	b	ea98 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x110>
    ea98:	ldr	r0, [fp, #-12]
    ea9c:	add	r0, r0, #8
    eaa0:	str	r0, [fp, #-12]
    eaa4:	ldr	r0, [fp, #-12]
    eaa8:	ldr	r1, [fp, #-16]
    eaac:	bl	4e5c <flatcc_json_parser_symbol_part>
    eab0:	str	r1, [sp, #28]
    eab4:	str	r0, [sp, #24]
    eab8:	ldr	r0, [sp, #24]
    eabc:	ldr	r1, [sp, #28]
    eac0:	and	r0, r0, #-16777216	; 0xff000000
    eac4:	movw	lr, #25968	; 0x6570
    eac8:	movt	lr, #29556	; 0x7374
    eacc:	eor	r1, r1, lr
    ead0:	eor	r0, r0, #1929379840	; 0x73000000
    ead4:	orr	r0, r0, r1
    ead8:	cmp	r0, #0
    eadc:	bne	ec0c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x284>
    eae0:	b	eae4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x15c>
    eae4:	ldr	r0, [fp, #-8]
    eae8:	ldr	r1, [fp, #-12]
    eaec:	str	r1, [sp, #32]
    eaf0:	ldr	r2, [fp, #-16]
    eaf4:	movw	r3, #5
    eaf8:	bl	4e94 <flatcc_json_parser_match_symbol>
    eafc:	str	r0, [fp, #-12]
    eb00:	ldr	r0, [sp, #32]
    eb04:	ldr	r1, [fp, #-12]
    eb08:	cmp	r0, r1
    eb0c:	beq	ebf4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x26c>
    eb10:	movw	r0, #0
    eb14:	str	r0, [sp, #20]
    eb18:	ldr	r0, [fp, #-8]
    eb1c:	ldr	r1, [fp, #-12]
    eb20:	str	r1, [sp, #32]
    eb24:	ldr	r2, [fp, #-16]
    eb28:	add	r3, sp, #20
    eb2c:	bl	98cc <flatcc_json_parser_uint32>
    eb30:	str	r0, [fp, #-12]
    eb34:	ldr	r0, [sp, #32]
    eb38:	ldr	r1, [fp, #-12]
    eb3c:	cmp	r0, r1
    eb40:	bne	eb94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x20c>
    eb44:	ldr	r0, [fp, #-8]
    eb48:	ldr	r1, [fp, #-12]
    eb4c:	str	r1, [sp, #32]
    eb50:	ldr	r2, [fp, #-16]
    eb54:	movw	r3, #0
    eb58:	movt	r3, #0
    eb5c:	add	ip, sp, #20
    eb60:	str	ip, [sp]
    eb64:	bl	99a4 <flatcc_json_parser_symbolic_uint32>
    eb68:	str	r0, [fp, #-12]
    eb6c:	ldr	r0, [fp, #-12]
    eb70:	ldr	r1, [sp, #32]
    eb74:	cmp	r0, r1
    eb78:	beq	eb8c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x204>
    eb7c:	ldr	r0, [fp, #-12]
    eb80:	ldr	r1, [fp, #-16]
    eb84:	cmp	r0, r1
    eb88:	bne	eb90 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
    eb8c:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    eb90:	b	eb94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x20c>
    eb94:	ldr	r0, [sp, #20]
    eb98:	cmp	r0, #0
    eb9c:	bne	ebb4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x22c>
    eba0:	ldr	r0, [fp, #-8]
    eba4:	ldr	r0, [r0, #8]
    eba8:	and	r0, r0, #2
    ebac:	cmp	r0, #0
    ebb0:	beq	ebf0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x268>
    ebb4:	ldr	r0, [fp, #-8]
    ebb8:	ldr	r0, [r0]
    ebbc:	movw	r1, #1
    ebc0:	movw	r2, #4
    ebc4:	movw	r3, #4
    ebc8:	uxth	r3, r3
    ebcc:	bl	0 <flatcc_builder_table_add>
    ebd0:	str	r0, [fp, #-28]	; 0xffffffe4
    ebd4:	movw	r1, #0
    ebd8:	cmp	r0, r1
    ebdc:	bne	ebe4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x25c>
    ebe0:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    ebe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ebe8:	ldr	r1, [sp, #20]
    ebec:	bl	9bcc <flatbuffers_uint32_write_to_pe>
    ebf0:	b	ec08 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x280>
    ebf4:	ldr	r0, [fp, #-8]
    ebf8:	ldr	r1, [fp, #-12]
    ebfc:	ldr	r2, [fp, #-16]
    ec00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ec04:	str	r0, [fp, #-12]
    ec08:	b	ec20 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x298>
    ec0c:	ldr	r0, [fp, #-8]
    ec10:	ldr	r1, [fp, #-12]
    ec14:	ldr	r2, [fp, #-16]
    ec18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ec1c:	str	r0, [fp, #-12]
    ec20:	b	edb0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
    ec24:	ldr	r0, [sp, #24]
    ec28:	ldr	r1, [sp, #28]
    ec2c:	movw	r2, #24435	; 0x5f73
    ec30:	movt	r2, #98	; 0x62
    ec34:	eor	r2, r2, r1, lsr #8
    ec38:	lsr	r0, r0, #8
    ec3c:	orr	r0, r0, r1, lsl #24
    ec40:	movw	r1, #28787	; 0x7073
    ec44:	movt	r1, #29797	; 0x7465
    ec48:	eor	r0, r0, r1
    ec4c:	orr	r0, r0, r2
    ec50:	cmp	r0, #0
    ec54:	bne	ed98 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x410>
    ec58:	b	ec5c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x2d4>
    ec5c:	ldr	r0, [fp, #-8]
    ec60:	ldr	r1, [fp, #-12]
    ec64:	str	r1, [sp, #32]
    ec68:	ldr	r2, [fp, #-16]
    ec6c:	movw	r3, #7
    ec70:	bl	4e94 <flatcc_json_parser_match_symbol>
    ec74:	str	r0, [fp, #-12]
    ec78:	ldr	r0, [sp, #32]
    ec7c:	ldr	r1, [fp, #-12]
    ec80:	cmp	r0, r1
    ec84:	beq	ed80 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f8>
    ec88:	mov	r0, #0
    ec8c:	str	r0, [sp, #12]
    ec90:	str	r0, [sp, #8]
    ec94:	ldr	r0, [fp, #-8]
    ec98:	ldr	r1, [fp, #-12]
    ec9c:	str	r1, [sp, #32]
    eca0:	ldr	r2, [fp, #-16]
    eca4:	add	r3, sp, #8
    eca8:	bl	957c <flatcc_json_parser_int64>
    ecac:	str	r0, [fp, #-12]
    ecb0:	ldr	r0, [sp, #32]
    ecb4:	ldr	r1, [fp, #-12]
    ecb8:	cmp	r0, r1
    ecbc:	bne	ed10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
    ecc0:	ldr	r0, [fp, #-8]
    ecc4:	ldr	r1, [fp, #-12]
    ecc8:	str	r1, [sp, #32]
    eccc:	ldr	r2, [fp, #-16]
    ecd0:	movw	r3, #0
    ecd4:	movt	r3, #0
    ecd8:	add	ip, sp, #8
    ecdc:	str	ip, [sp]
    ece0:	bl	9654 <flatcc_json_parser_symbolic_int64>
    ece4:	str	r0, [fp, #-12]
    ece8:	ldr	r0, [fp, #-12]
    ecec:	ldr	r1, [sp, #32]
    ecf0:	cmp	r0, r1
    ecf4:	beq	ed08 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
    ecf8:	ldr	r0, [fp, #-12]
    ecfc:	ldr	r1, [fp, #-16]
    ed00:	cmp	r0, r1
    ed04:	bne	ed0c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
    ed08:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    ed0c:	b	ed10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
    ed10:	ldr	r0, [sp, #8]
    ed14:	ldr	r1, [sp, #12]
    ed18:	orr	r0, r0, r1
    ed1c:	cmp	r0, #0
    ed20:	bne	ed3c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b4>
    ed24:	b	ed28 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3a0>
    ed28:	ldr	r0, [fp, #-8]
    ed2c:	ldr	r0, [r0, #8]
    ed30:	and	r0, r0, #2
    ed34:	cmp	r0, #0
    ed38:	beq	ed7c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f4>
    ed3c:	ldr	r0, [fp, #-8]
    ed40:	ldr	r0, [r0]
    ed44:	movw	r1, #0
    ed48:	movw	r2, #8
    ed4c:	movw	r3, #8
    ed50:	uxth	r3, r3
    ed54:	bl	0 <flatcc_builder_table_add>
    ed58:	str	r0, [fp, #-28]	; 0xffffffe4
    ed5c:	movw	r1, #0
    ed60:	cmp	r0, r1
    ed64:	bne	ed6c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e4>
    ed68:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    ed6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ed70:	ldr	r2, [sp, #8]
    ed74:	ldr	r3, [sp, #12]
    ed78:	bl	9894 <flatbuffers_int64_write_to_pe>
    ed7c:	b	ed94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x40c>
    ed80:	ldr	r0, [fp, #-8]
    ed84:	ldr	r1, [fp, #-12]
    ed88:	ldr	r2, [fp, #-16]
    ed8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ed90:	str	r0, [fp, #-12]
    ed94:	b	edac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
    ed98:	ldr	r0, [fp, #-8]
    ed9c:	ldr	r1, [fp, #-12]
    eda0:	ldr	r2, [fp, #-16]
    eda4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eda8:	str	r0, [fp, #-12]
    edac:	b	edb0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
    edb0:	b	edc8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x440>
    edb4:	ldr	r0, [fp, #-8]
    edb8:	ldr	r1, [fp, #-12]
    edbc:	ldr	r2, [fp, #-16]
    edc0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    edc4:	str	r0, [fp, #-12]
    edc8:	ldr	r0, [fp, #-8]
    edcc:	ldr	r1, [fp, #-12]
    edd0:	ldr	r2, [fp, #-16]
    edd4:	sub	r3, fp, #24
    edd8:	bl	a1ac <flatcc_json_parser_object_end>
    eddc:	str	r0, [fp, #-12]
    ede0:	b	e9e4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x5c>
    ede4:	ldr	r0, [fp, #-8]
    ede8:	ldr	r0, [r0, #24]
    edec:	cmp	r0, #0
    edf0:	beq	edf8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x470>
    edf4:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    edf8:	ldr	r0, [fp, #-8]
    edfc:	ldr	r0, [r0]
    ee00:	bl	0 <flatcc_builder_end_table>
    ee04:	ldr	lr, [fp, #-20]	; 0xffffffec
    ee08:	str	r0, [lr]
    ee0c:	cmp	r0, #0
    ee10:	bne	ee18 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x490>
    ee14:	b	ee24 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    ee18:	ldr	r0, [fp, #-12]
    ee1c:	str	r0, [fp, #-4]
    ee20:	b	ee3c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x4b4>
    ee24:	ldr	r0, [fp, #-8]
    ee28:	ldr	r1, [fp, #-12]
    ee2c:	ldr	r2, [fp, #-16]
    ee30:	movw	r3, #33	; 0x21
    ee34:	bl	0 <flatcc_json_parser_set_error>
    ee38:	str	r0, [fp, #-4]
    ee3c:	ldr	r0, [fp, #-4]
    ee40:	mov	sp, fp
    ee44:	pop	{fp, pc}

0000ee48 <monster_test_local_Fantasy_json_parser_enum>:
    ee48:	push	{fp, lr}
    ee4c:	mov	fp, sp
    ee50:	sub	sp, sp, #56	; 0x38
    ee54:	ldr	ip, [fp, #12]
    ee58:	ldr	lr, [fp, #8]
    ee5c:	str	r0, [fp, #-8]
    ee60:	str	r1, [fp, #-12]
    ee64:	str	r2, [fp, #-16]
    ee68:	str	r3, [fp, #-20]	; 0xffffffec
    ee6c:	ldr	r0, [fp, #-12]
    ee70:	str	r0, [fp, #-24]	; 0xffffffe8
    ee74:	ldr	r0, [fp, #-12]
    ee78:	ldr	r1, [fp, #-16]
    ee7c:	str	lr, [sp, #12]
    ee80:	str	ip, [sp, #8]
    ee84:	bl	4e5c <flatcc_json_parser_symbol_part>
    ee88:	str	r1, [sp, #20]
    ee8c:	str	r0, [sp, #16]
    ee90:	ldr	r0, [sp, #16]
    ee94:	ldr	r1, [sp, #20]
    ee98:	movw	r2, #24946	; 0x6172
    ee9c:	movt	r2, #17256	; 0x4368
    eea0:	eor	r1, r1, r2
    eea4:	movw	r2, #29797	; 0x7465
    eea8:	movt	r2, #24931	; 0x6163
    eeac:	eor	r0, r0, r2
    eeb0:	orr	r0, r0, r1
    eeb4:	cmp	r0, #0
    eeb8:	bne	ef6c <monster_test_local_Fantasy_json_parser_enum+0x124>
    eebc:	b	eec0 <monster_test_local_Fantasy_json_parser_enum+0x78>
    eec0:	ldr	r0, [fp, #-12]
    eec4:	add	r0, r0, #8
    eec8:	str	r0, [fp, #-12]
    eecc:	ldr	r0, [fp, #-12]
    eed0:	ldr	r1, [fp, #-16]
    eed4:	bl	4e5c <flatcc_json_parser_symbol_part>
    eed8:	str	r1, [sp, #20]
    eedc:	str	r0, [sp, #16]
    eee0:	ldr	r0, [sp, #20]
    eee4:	and	r0, r0, #-16777216	; 0xff000000
    eee8:	teq	r0, #1912602624	; 0x72000000
    eeec:	bne	ef5c <monster_test_local_Fantasy_json_parser_enum+0x114>
    eef0:	b	eef4 <monster_test_local_Fantasy_json_parser_enum+0xac>
    eef4:	ldr	r0, [fp, #-8]
    eef8:	ldr	r1, [fp, #-12]
    eefc:	str	r1, [sp, #28]
    ef00:	ldr	r2, [fp, #-16]
    ef04:	movw	r3, #1
    ef08:	bl	a520 <flatcc_json_parser_match_scope>
    ef0c:	str	r0, [fp, #-12]
    ef10:	ldr	r0, [fp, #-12]
    ef14:	ldr	r1, [sp, #28]
    ef18:	cmp	r0, r1
    ef1c:	beq	ef4c <monster_test_local_Fantasy_json_parser_enum+0x104>
    ef20:	ldr	r0, [fp, #-8]
    ef24:	ldr	r1, [fp, #-12]
    ef28:	ldr	r2, [fp, #-16]
    ef2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef30:	ldr	ip, [fp, #8]
    ef34:	ldr	lr, [fp, #12]
    ef38:	str	ip, [sp]
    ef3c:	str	lr, [sp, #4]
    ef40:	bl	b0a0 <Fantasy_Character_parse_json_enum>
    ef44:	str	r0, [fp, #-12]
    ef48:	b	ef58 <monster_test_local_Fantasy_json_parser_enum+0x110>
    ef4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef50:	str	r0, [fp, #-4]
    ef54:	b	ef80 <monster_test_local_Fantasy_json_parser_enum+0x138>
    ef58:	b	ef68 <monster_test_local_Fantasy_json_parser_enum+0x120>
    ef5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef60:	str	r0, [fp, #-4]
    ef64:	b	ef80 <monster_test_local_Fantasy_json_parser_enum+0x138>
    ef68:	b	ef78 <monster_test_local_Fantasy_json_parser_enum+0x130>
    ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ef70:	str	r0, [fp, #-4]
    ef74:	b	ef80 <monster_test_local_Fantasy_json_parser_enum+0x138>
    ef78:	ldr	r0, [fp, #-12]
    ef7c:	str	r0, [fp, #-4]
    ef80:	ldr	r0, [fp, #-4]
    ef84:	mov	sp, fp
    ef88:	pop	{fp, pc}

0000ef8c <Fantasy_Character_parse_json_union>:
    ef8c:	push	{fp, lr}
    ef90:	mov	fp, sp
    ef94:	sub	sp, sp, #32
    ef98:	ldr	ip, [fp, #8]
    ef9c:	str	r0, [fp, #-8]
    efa0:	str	r1, [fp, #-12]
    efa4:	str	r2, [sp, #16]
    efa8:	strb	r3, [sp, #15]
    efac:	ldr	r0, [fp, #8]
    efb0:	mov	r1, #0
    efb4:	str	r1, [r0]
    efb8:	ldrb	r0, [sp, #15]
    efbc:	mov	r1, r0
    efc0:	cmp	r0, #0
    efc4:	str	ip, [sp, #8]
    efc8:	str	r1, [sp, #4]
    efcc:	beq	f034 <Fantasy_Character_parse_json_union+0xa8>
    efd0:	b	efd4 <Fantasy_Character_parse_json_union+0x48>
    efd4:	ldr	r0, [sp, #4]
    efd8:	cmp	r0, #2
    efdc:	beq	f04c <Fantasy_Character_parse_json_union+0xc0>
    efe0:	b	efe4 <Fantasy_Character_parse_json_union+0x58>
    efe4:	ldr	r0, [sp, #4]
    efe8:	cmp	r0, #8
    efec:	beq	f068 <Fantasy_Character_parse_json_union+0xdc>
    eff0:	b	eff4 <Fantasy_Character_parse_json_union+0x68>
    eff4:	ldr	r0, [sp, #4]
    eff8:	cmp	r0, #9
    effc:	beq	f084 <Fantasy_Character_parse_json_union+0xf8>
    f000:	b	f004 <Fantasy_Character_parse_json_union+0x78>
    f004:	ldr	r0, [sp, #4]
    f008:	cmp	r0, #10
    f00c:	beq	f0a0 <Fantasy_Character_parse_json_union+0x114>
    f010:	b	f014 <Fantasy_Character_parse_json_union+0x88>
    f014:	ldr	r0, [sp, #4]
    f018:	cmp	r0, #11
    f01c:	beq	f0bc <Fantasy_Character_parse_json_union+0x130>
    f020:	b	f024 <Fantasy_Character_parse_json_union+0x98>
    f024:	ldr	r0, [sp, #4]
    f028:	cmp	r0, #255	; 0xff
    f02c:	beq	f0d8 <Fantasy_Character_parse_json_union+0x14c>
    f030:	b	f0f4 <Fantasy_Character_parse_json_union+0x168>
    f034:	ldr	r0, [fp, #-8]
    f038:	ldr	r1, [fp, #-12]
    f03c:	ldr	r2, [sp, #16]
    f040:	bl	bb74 <flatcc_json_parser_none>
    f044:	str	r0, [fp, #-4]
    f048:	b	f18c <Fantasy_Character_parse_json_union+0x200>
    f04c:	ldr	r0, [fp, #-8]
    f050:	ldr	r1, [fp, #-12]
    f054:	ldr	r2, [sp, #16]
    f058:	ldr	r3, [fp, #8]
    f05c:	bl	f280 <Fantasy_Attacker_parse_json_table>
    f060:	str	r0, [fp, #-12]
    f064:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f068:	ldr	r0, [fp, #-8]
    f06c:	ldr	r1, [fp, #-12]
    f070:	ldr	r2, [sp, #16]
    f074:	ldr	r3, [fp, #8]
    f078:	bl	f5b8 <Fantasy_Rapunzel_parse_json_struct>
    f07c:	str	r0, [fp, #-12]
    f080:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f084:	ldr	r0, [fp, #-8]
    f088:	ldr	r1, [fp, #-12]
    f08c:	ldr	r2, [sp, #16]
    f090:	ldr	r3, [fp, #8]
    f094:	bl	f684 <Fantasy_BookReader_parse_json_struct>
    f098:	str	r0, [fp, #-12]
    f09c:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f0a0:	ldr	r0, [fp, #-8]
    f0a4:	ldr	r1, [fp, #-12]
    f0a8:	ldr	r2, [sp, #16]
    f0ac:	ldr	r3, [fp, #8]
    f0b0:	bl	f684 <Fantasy_BookReader_parse_json_struct>
    f0b4:	str	r0, [fp, #-12]
    f0b8:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f0bc:	ldr	r0, [fp, #-8]
    f0c0:	ldr	r1, [fp, #-12]
    f0c4:	ldr	r2, [sp, #16]
    f0c8:	ldr	r3, [fp, #8]
    f0cc:	bl	0 <flatcc_json_parser_build_string>
    f0d0:	str	r0, [fp, #-12]
    f0d4:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f0d8:	ldr	r0, [fp, #-8]
    f0dc:	ldr	r1, [fp, #-12]
    f0e0:	ldr	r2, [sp, #16]
    f0e4:	ldr	r3, [fp, #8]
    f0e8:	bl	0 <flatcc_json_parser_build_string>
    f0ec:	str	r0, [fp, #-12]
    f0f0:	b	f13c <Fantasy_Character_parse_json_union+0x1b0>
    f0f4:	ldr	r0, [fp, #-8]
    f0f8:	ldr	r0, [r0, #8]
    f0fc:	and	r0, r0, #1
    f100:	cmp	r0, #0
    f104:	bne	f124 <Fantasy_Character_parse_json_union+0x198>
    f108:	ldr	r0, [fp, #-8]
    f10c:	ldr	r1, [fp, #-12]
    f110:	ldr	r2, [sp, #16]
    f114:	movw	r3, #15
    f118:	bl	0 <flatcc_json_parser_set_error>
    f11c:	str	r0, [fp, #-4]
    f120:	b	f18c <Fantasy_Character_parse_json_union+0x200>
    f124:	ldr	r0, [fp, #-8]
    f128:	ldr	r1, [fp, #-12]
    f12c:	ldr	r2, [sp, #16]
    f130:	bl	0 <flatcc_json_parser_generic_json>
    f134:	str	r0, [fp, #-4]
    f138:	b	f18c <Fantasy_Character_parse_json_union+0x200>
    f13c:	ldr	r0, [fp, #-8]
    f140:	ldr	r0, [r0, #24]
    f144:	cmp	r0, #0
    f148:	beq	f158 <Fantasy_Character_parse_json_union+0x1cc>
    f14c:	ldr	r0, [fp, #-12]
    f150:	str	r0, [fp, #-4]
    f154:	b	f18c <Fantasy_Character_parse_json_union+0x200>
    f158:	ldr	r0, [fp, #8]
    f15c:	ldr	r0, [r0]
    f160:	cmp	r0, #0
    f164:	bne	f184 <Fantasy_Character_parse_json_union+0x1f8>
    f168:	ldr	r0, [fp, #-8]
    f16c:	ldr	r1, [fp, #-12]
    f170:	ldr	r2, [sp, #16]
    f174:	movw	r3, #33	; 0x21
    f178:	bl	0 <flatcc_json_parser_set_error>
    f17c:	str	r0, [fp, #-4]
    f180:	b	f18c <Fantasy_Character_parse_json_union+0x200>
    f184:	ldr	r0, [fp, #-12]
    f188:	str	r0, [fp, #-4]
    f18c:	ldr	r0, [fp, #-4]
    f190:	mov	sp, fp
    f194:	pop	{fp, pc}

0000f198 <Fantasy_Character_json_union_accept_type>:
    f198:	sub	sp, sp, #12
    f19c:	strb	r0, [sp, #7]
    f1a0:	ldrb	r0, [sp, #7]
    f1a4:	mov	r1, r0
    f1a8:	cmp	r0, #0
    f1ac:	str	r1, [sp]
    f1b0:	beq	f218 <Fantasy_Character_json_union_accept_type+0x80>
    f1b4:	b	f1b8 <Fantasy_Character_json_union_accept_type+0x20>
    f1b8:	ldr	r0, [sp]
    f1bc:	cmp	r0, #2
    f1c0:	beq	f224 <Fantasy_Character_json_union_accept_type+0x8c>
    f1c4:	b	f1c8 <Fantasy_Character_json_union_accept_type+0x30>
    f1c8:	ldr	r0, [sp]
    f1cc:	cmp	r0, #8
    f1d0:	beq	f230 <Fantasy_Character_json_union_accept_type+0x98>
    f1d4:	b	f1d8 <Fantasy_Character_json_union_accept_type+0x40>
    f1d8:	ldr	r0, [sp]
    f1dc:	cmp	r0, #9
    f1e0:	beq	f23c <Fantasy_Character_json_union_accept_type+0xa4>
    f1e4:	b	f1e8 <Fantasy_Character_json_union_accept_type+0x50>
    f1e8:	ldr	r0, [sp]
    f1ec:	cmp	r0, #10
    f1f0:	beq	f248 <Fantasy_Character_json_union_accept_type+0xb0>
    f1f4:	b	f1f8 <Fantasy_Character_json_union_accept_type+0x60>
    f1f8:	ldr	r0, [sp]
    f1fc:	cmp	r0, #11
    f200:	beq	f254 <Fantasy_Character_json_union_accept_type+0xbc>
    f204:	b	f208 <Fantasy_Character_json_union_accept_type+0x70>
    f208:	ldr	r0, [sp]
    f20c:	cmp	r0, #255	; 0xff
    f210:	beq	f260 <Fantasy_Character_json_union_accept_type+0xc8>
    f214:	b	f26c <Fantasy_Character_json_union_accept_type+0xd4>
    f218:	movw	r0, #1
    f21c:	str	r0, [sp, #8]
    f220:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f224:	movw	r0, #1
    f228:	str	r0, [sp, #8]
    f22c:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f230:	movw	r0, #1
    f234:	str	r0, [sp, #8]
    f238:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f23c:	movw	r0, #1
    f240:	str	r0, [sp, #8]
    f244:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f248:	movw	r0, #1
    f24c:	str	r0, [sp, #8]
    f250:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f254:	movw	r0, #1
    f258:	str	r0, [sp, #8]
    f25c:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f260:	movw	r0, #1
    f264:	str	r0, [sp, #8]
    f268:	b	f274 <Fantasy_Character_json_union_accept_type+0xdc>
    f26c:	movw	r0, #0
    f270:	str	r0, [sp, #8]
    f274:	ldr	r0, [sp, #8]
    f278:	add	sp, sp, #12
    f27c:	bx	lr

0000f280 <Fantasy_Attacker_parse_json_table>:
    f280:	push	{fp, lr}
    f284:	mov	fp, sp
    f288:	sub	sp, sp, #56	; 0x38
    f28c:	str	r0, [fp, #-8]
    f290:	str	r1, [fp, #-12]
    f294:	str	r2, [fp, #-16]
    f298:	str	r3, [fp, #-20]	; 0xffffffec
    f29c:	ldr	r0, [fp, #-20]	; 0xffffffec
    f2a0:	movw	r1, #0
    f2a4:	str	r1, [r0]
    f2a8:	ldr	r0, [fp, #-8]
    f2ac:	ldr	r0, [r0]
    f2b0:	movw	r1, #1
    f2b4:	bl	0 <flatcc_builder_start_table>
    f2b8:	cmp	r0, #0
    f2bc:	beq	f2c4 <Fantasy_Attacker_parse_json_table+0x44>
    f2c0:	b	f594 <Fantasy_Attacker_parse_json_table+0x314>
    f2c4:	ldr	r0, [fp, #-8]
    f2c8:	ldr	r1, [fp, #-12]
    f2cc:	ldr	r2, [fp, #-16]
    f2d0:	sub	r3, fp, #24
    f2d4:	bl	4ccc <flatcc_json_parser_object_start>
    f2d8:	str	r0, [fp, #-12]
    f2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f2e0:	cmp	r0, #0
    f2e4:	beq	f554 <Fantasy_Attacker_parse_json_table+0x2d4>
    f2e8:	ldr	r0, [fp, #-8]
    f2ec:	ldr	r1, [fp, #-12]
    f2f0:	ldr	r2, [fp, #-16]
    f2f4:	bl	4db0 <flatcc_json_parser_symbol_start>
    f2f8:	str	r0, [fp, #-12]
    f2fc:	ldr	r0, [fp, #-12]
    f300:	ldr	r1, [fp, #-16]
    f304:	bl	4e5c <flatcc_json_parser_symbol_part>
    f308:	str	r1, [sp, #12]
    f30c:	str	r0, [sp, #8]
    f310:	ldr	r0, [sp, #8]
    f314:	ldr	r1, [sp, #12]
    f318:	movw	r2, #28530	; 0x6f72
    f31c:	movt	r2, #29559	; 0x7377
    f320:	eor	r1, r1, r2
    f324:	movw	r2, #24948	; 0x6174
    f328:	movt	r2, #25695	; 0x645f
    f32c:	eor	r0, r0, r2
    f330:	orr	r0, r0, r1
    f334:	cmp	r0, #0
    f338:	bne	f524 <Fantasy_Attacker_parse_json_table+0x2a4>
    f33c:	b	f340 <Fantasy_Attacker_parse_json_table+0xc0>
    f340:	ldr	r0, [fp, #-12]
    f344:	add	r0, r0, #8
    f348:	str	r0, [fp, #-12]
    f34c:	ldr	r0, [fp, #-12]
    f350:	ldr	r1, [fp, #-16]
    f354:	bl	4e5c <flatcc_json_parser_symbol_part>
    f358:	str	r1, [sp, #12]
    f35c:	str	r0, [sp, #8]
    f360:	ldr	r0, [sp, #8]
    f364:	ldr	r1, [sp, #12]
    f368:	movw	lr, #25451	; 0x636b
    f36c:	movt	lr, #29793	; 0x7461
    f370:	eor	r1, r1, lr
    f374:	movw	lr, #24941	; 0x616d
    f378:	movt	lr, #24420	; 0x5f64
    f37c:	eor	r0, r0, lr
    f380:	orr	r0, r0, r1
    f384:	cmp	r0, #0
    f388:	bne	f50c <Fantasy_Attacker_parse_json_table+0x28c>
    f38c:	b	f390 <Fantasy_Attacker_parse_json_table+0x110>
    f390:	ldr	r0, [fp, #-12]
    f394:	add	r0, r0, #8
    f398:	str	r0, [fp, #-12]
    f39c:	ldr	r0, [fp, #-12]
    f3a0:	ldr	r1, [fp, #-16]
    f3a4:	bl	4e5c <flatcc_json_parser_symbol_part>
    f3a8:	str	r1, [sp, #12]
    f3ac:	str	r0, [sp, #8]
    f3b0:	ldr	r0, [sp, #12]
    f3b4:	bic	r0, r0, #255	; 0xff
    f3b8:	movw	r1, #25856	; 0x6500
    f3bc:	movt	r1, #24935	; 0x6167
    f3c0:	teq	r0, r1
    f3c4:	bne	f4f4 <Fantasy_Attacker_parse_json_table+0x274>
    f3c8:	b	f3cc <Fantasy_Attacker_parse_json_table+0x14c>
    f3cc:	ldr	r0, [fp, #-8]
    f3d0:	ldr	r1, [fp, #-12]
    f3d4:	str	r1, [sp, #16]
    f3d8:	ldr	r2, [fp, #-16]
    f3dc:	movw	r3, #3
    f3e0:	bl	4e94 <flatcc_json_parser_match_symbol>
    f3e4:	str	r0, [fp, #-12]
    f3e8:	ldr	r0, [sp, #16]
    f3ec:	ldr	r1, [fp, #-12]
    f3f0:	cmp	r0, r1
    f3f4:	beq	f4dc <Fantasy_Attacker_parse_json_table+0x25c>
    f3f8:	movw	r0, #0
    f3fc:	str	r0, [sp, #4]
    f400:	ldr	r0, [fp, #-8]
    f404:	ldr	r1, [fp, #-12]
    f408:	str	r1, [sp, #16]
    f40c:	ldr	r2, [fp, #-16]
    f410:	add	r3, sp, #4
    f414:	bl	9250 <flatcc_json_parser_int32>
    f418:	str	r0, [fp, #-12]
    f41c:	ldr	r0, [sp, #16]
    f420:	ldr	r1, [fp, #-12]
    f424:	cmp	r0, r1
    f428:	bne	f47c <Fantasy_Attacker_parse_json_table+0x1fc>
    f42c:	ldr	r0, [fp, #-8]
    f430:	ldr	r1, [fp, #-12]
    f434:	str	r1, [sp, #16]
    f438:	ldr	r2, [fp, #-16]
    f43c:	movw	r3, #0
    f440:	movt	r3, #0
    f444:	add	ip, sp, #4
    f448:	str	ip, [sp]
    f44c:	bl	9328 <flatcc_json_parser_symbolic_int32>
    f450:	str	r0, [fp, #-12]
    f454:	ldr	r0, [fp, #-12]
    f458:	ldr	r1, [sp, #16]
    f45c:	cmp	r0, r1
    f460:	beq	f474 <Fantasy_Attacker_parse_json_table+0x1f4>
    f464:	ldr	r0, [fp, #-12]
    f468:	ldr	r1, [fp, #-16]
    f46c:	cmp	r0, r1
    f470:	bne	f478 <Fantasy_Attacker_parse_json_table+0x1f8>
    f474:	b	f594 <Fantasy_Attacker_parse_json_table+0x314>
    f478:	b	f47c <Fantasy_Attacker_parse_json_table+0x1fc>
    f47c:	ldr	r0, [sp, #4]
    f480:	cmp	r0, #0
    f484:	bne	f49c <Fantasy_Attacker_parse_json_table+0x21c>
    f488:	ldr	r0, [fp, #-8]
    f48c:	ldr	r0, [r0, #8]
    f490:	and	r0, r0, #2
    f494:	cmp	r0, #0
    f498:	beq	f4d8 <Fantasy_Attacker_parse_json_table+0x258>
    f49c:	ldr	r0, [fp, #-8]
    f4a0:	ldr	r0, [r0]
    f4a4:	movw	r1, #0
    f4a8:	movw	r2, #4
    f4ac:	movw	r3, #4
    f4b0:	uxth	r3, r3
    f4b4:	bl	0 <flatcc_builder_table_add>
    f4b8:	str	r0, [sp, #28]
    f4bc:	movw	r1, #0
    f4c0:	cmp	r0, r1
    f4c4:	bne	f4cc <Fantasy_Attacker_parse_json_table+0x24c>
    f4c8:	b	f594 <Fantasy_Attacker_parse_json_table+0x314>
    f4cc:	ldr	r0, [sp, #28]
    f4d0:	ldr	r1, [sp, #4]
    f4d4:	bl	9550 <flatbuffers_int32_write_to_pe>
    f4d8:	b	f4f0 <Fantasy_Attacker_parse_json_table+0x270>
    f4dc:	ldr	r0, [fp, #-8]
    f4e0:	ldr	r1, [fp, #-12]
    f4e4:	ldr	r2, [fp, #-16]
    f4e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f4ec:	str	r0, [fp, #-12]
    f4f0:	b	f508 <Fantasy_Attacker_parse_json_table+0x288>
    f4f4:	ldr	r0, [fp, #-8]
    f4f8:	ldr	r1, [fp, #-12]
    f4fc:	ldr	r2, [fp, #-16]
    f500:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f504:	str	r0, [fp, #-12]
    f508:	b	f520 <Fantasy_Attacker_parse_json_table+0x2a0>
    f50c:	ldr	r0, [fp, #-8]
    f510:	ldr	r1, [fp, #-12]
    f514:	ldr	r2, [fp, #-16]
    f518:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f51c:	str	r0, [fp, #-12]
    f520:	b	f538 <Fantasy_Attacker_parse_json_table+0x2b8>
    f524:	ldr	r0, [fp, #-8]
    f528:	ldr	r1, [fp, #-12]
    f52c:	ldr	r2, [fp, #-16]
    f530:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f534:	str	r0, [fp, #-12]
    f538:	ldr	r0, [fp, #-8]
    f53c:	ldr	r1, [fp, #-12]
    f540:	ldr	r2, [fp, #-16]
    f544:	sub	r3, fp, #24
    f548:	bl	a1ac <flatcc_json_parser_object_end>
    f54c:	str	r0, [fp, #-12]
    f550:	b	f2dc <Fantasy_Attacker_parse_json_table+0x5c>
    f554:	ldr	r0, [fp, #-8]
    f558:	ldr	r0, [r0, #24]
    f55c:	cmp	r0, #0
    f560:	beq	f568 <Fantasy_Attacker_parse_json_table+0x2e8>
    f564:	b	f594 <Fantasy_Attacker_parse_json_table+0x314>
    f568:	ldr	r0, [fp, #-8]
    f56c:	ldr	r0, [r0]
    f570:	bl	0 <flatcc_builder_end_table>
    f574:	ldr	lr, [fp, #-20]	; 0xffffffec
    f578:	str	r0, [lr]
    f57c:	cmp	r0, #0
    f580:	bne	f588 <Fantasy_Attacker_parse_json_table+0x308>
    f584:	b	f594 <Fantasy_Attacker_parse_json_table+0x314>
    f588:	ldr	r0, [fp, #-12]
    f58c:	str	r0, [fp, #-4]
    f590:	b	f5ac <Fantasy_Attacker_parse_json_table+0x32c>
    f594:	ldr	r0, [fp, #-8]
    f598:	ldr	r1, [fp, #-12]
    f59c:	ldr	r2, [fp, #-16]
    f5a0:	movw	r3, #33	; 0x21
    f5a4:	bl	0 <flatcc_json_parser_set_error>
    f5a8:	str	r0, [fp, #-4]
    f5ac:	ldr	r0, [fp, #-4]
    f5b0:	mov	sp, fp
    f5b4:	pop	{fp, pc}

0000f5b8 <Fantasy_Rapunzel_parse_json_struct>:
    f5b8:	push	{fp, lr}
    f5bc:	mov	fp, sp
    f5c0:	sub	sp, sp, #24
    f5c4:	str	r0, [fp, #-8]
    f5c8:	str	r1, [sp, #12]
    f5cc:	str	r2, [sp, #8]
    f5d0:	str	r3, [sp, #4]
    f5d4:	ldr	r0, [sp, #4]
    f5d8:	movw	r1, #0
    f5dc:	str	r1, [r0]
    f5e0:	ldr	r0, [fp, #-8]
    f5e4:	ldr	r0, [r0]
    f5e8:	movw	r1, #2
    f5ec:	movw	r2, #2
    f5f0:	uxth	r2, r2
    f5f4:	bl	0 <flatcc_builder_start_struct>
    f5f8:	str	r0, [sp]
    f5fc:	movw	r1, #0
    f600:	cmp	r0, r1
    f604:	bne	f60c <Fantasy_Rapunzel_parse_json_struct+0x54>
    f608:	b	f660 <Fantasy_Rapunzel_parse_json_struct+0xa8>
    f60c:	ldr	r0, [fp, #-8]
    f610:	ldr	r1, [sp, #12]
    f614:	ldr	r2, [sp, #8]
    f618:	ldr	r3, [sp]
    f61c:	bl	f750 <Fantasy_Rapunzel_parse_json_struct_inline>
    f620:	str	r0, [sp, #12]
    f624:	ldr	r0, [sp, #12]
    f628:	ldr	r1, [sp, #8]
    f62c:	cmp	r0, r1
    f630:	beq	f650 <Fantasy_Rapunzel_parse_json_struct+0x98>
    f634:	ldr	r0, [fp, #-8]
    f638:	ldr	r0, [r0]
    f63c:	bl	0 <flatcc_builder_end_struct>
    f640:	ldr	lr, [sp, #4]
    f644:	str	r0, [lr]
    f648:	cmp	r0, #0
    f64c:	bne	f654 <Fantasy_Rapunzel_parse_json_struct+0x9c>
    f650:	b	f660 <Fantasy_Rapunzel_parse_json_struct+0xa8>
    f654:	ldr	r0, [sp, #12]
    f658:	str	r0, [fp, #-4]
    f65c:	b	f678 <Fantasy_Rapunzel_parse_json_struct+0xc0>
    f660:	ldr	r0, [fp, #-8]
    f664:	ldr	r1, [sp, #12]
    f668:	ldr	r2, [sp, #8]
    f66c:	movw	r3, #33	; 0x21
    f670:	bl	0 <flatcc_json_parser_set_error>
    f674:	str	r0, [fp, #-4]
    f678:	ldr	r0, [fp, #-4]
    f67c:	mov	sp, fp
    f680:	pop	{fp, pc}

0000f684 <Fantasy_BookReader_parse_json_struct>:
    f684:	push	{fp, lr}
    f688:	mov	fp, sp
    f68c:	sub	sp, sp, #24
    f690:	str	r0, [fp, #-8]
    f694:	str	r1, [sp, #12]
    f698:	str	r2, [sp, #8]
    f69c:	str	r3, [sp, #4]
    f6a0:	ldr	r0, [sp, #4]
    f6a4:	movw	r1, #0
    f6a8:	str	r1, [r0]
    f6ac:	ldr	r0, [fp, #-8]
    f6b0:	ldr	r0, [r0]
    f6b4:	movw	r1, #4
    f6b8:	movw	r2, #4
    f6bc:	uxth	r2, r2
    f6c0:	bl	0 <flatcc_builder_start_struct>
    f6c4:	str	r0, [sp]
    f6c8:	movw	r1, #0
    f6cc:	cmp	r0, r1
    f6d0:	bne	f6d8 <Fantasy_BookReader_parse_json_struct+0x54>
    f6d4:	b	f72c <Fantasy_BookReader_parse_json_struct+0xa8>
    f6d8:	ldr	r0, [fp, #-8]
    f6dc:	ldr	r1, [sp, #12]
    f6e0:	ldr	r2, [sp, #8]
    f6e4:	ldr	r3, [sp]
    f6e8:	bl	fd80 <Fantasy_BookReader_parse_json_struct_inline>
    f6ec:	str	r0, [sp, #12]
    f6f0:	ldr	r0, [sp, #12]
    f6f4:	ldr	r1, [sp, #8]
    f6f8:	cmp	r0, r1
    f6fc:	beq	f71c <Fantasy_BookReader_parse_json_struct+0x98>
    f700:	ldr	r0, [fp, #-8]
    f704:	ldr	r0, [r0]
    f708:	bl	0 <flatcc_builder_end_struct>
    f70c:	ldr	lr, [sp, #4]
    f710:	str	r0, [lr]
    f714:	cmp	r0, #0
    f718:	bne	f720 <Fantasy_BookReader_parse_json_struct+0x9c>
    f71c:	b	f72c <Fantasy_BookReader_parse_json_struct+0xa8>
    f720:	ldr	r0, [sp, #12]
    f724:	str	r0, [fp, #-4]
    f728:	b	f744 <Fantasy_BookReader_parse_json_struct+0xc0>
    f72c:	ldr	r0, [fp, #-8]
    f730:	ldr	r1, [sp, #12]
    f734:	ldr	r2, [sp, #8]
    f738:	movw	r3, #33	; 0x21
    f73c:	bl	0 <flatcc_json_parser_set_error>
    f740:	str	r0, [fp, #-4]
    f744:	ldr	r0, [fp, #-4]
    f748:	mov	sp, fp
    f74c:	pop	{fp, pc}

0000f750 <Fantasy_Rapunzel_parse_json_struct_inline>:
    f750:	push	{fp, lr}
    f754:	mov	fp, sp
    f758:	sub	sp, sp, #56	; 0x38
    f75c:	str	r0, [fp, #-8]
    f760:	str	r1, [fp, #-12]
    f764:	str	r2, [fp, #-16]
    f768:	str	r3, [fp, #-20]	; 0xffffffec
    f76c:	ldr	r0, [fp, #-8]
    f770:	ldr	r1, [fp, #-12]
    f774:	ldr	r2, [fp, #-16]
    f778:	sub	r3, fp, #24
    f77c:	bl	4ccc <flatcc_json_parser_object_start>
    f780:	str	r0, [fp, #-12]
    f784:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f788:	cmp	r0, #0
    f78c:	beq	f950 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
    f790:	ldr	r0, [fp, #-8]
    f794:	ldr	r1, [fp, #-12]
    f798:	ldr	r2, [fp, #-16]
    f79c:	bl	4db0 <flatcc_json_parser_symbol_start>
    f7a0:	str	r0, [fp, #-12]
    f7a4:	ldr	r0, [fp, #-12]
    f7a8:	ldr	r1, [fp, #-16]
    f7ac:	bl	4e5c <flatcc_json_parser_symbol_part>
    f7b0:	str	r1, [sp, #12]
    f7b4:	str	r0, [sp, #8]
    f7b8:	ldr	r0, [sp, #8]
    f7bc:	ldr	r1, [sp, #12]
    f7c0:	movw	r2, #26994	; 0x6972
    f7c4:	movt	r2, #26721	; 0x6861
    f7c8:	eor	r1, r1, r2
    f7cc:	movw	r2, #25966	; 0x656e
    f7d0:	movt	r2, #24428	; 0x5f6c
    f7d4:	eor	r0, r0, r2
    f7d8:	orr	r0, r0, r1
    f7dc:	cmp	r0, #0
    f7e0:	bne	f920 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d0>
    f7e4:	b	f7e8 <Fantasy_Rapunzel_parse_json_struct_inline+0x98>
    f7e8:	ldr	r0, [fp, #-12]
    f7ec:	add	r0, r0, #8
    f7f0:	str	r0, [fp, #-12]
    f7f4:	ldr	r0, [fp, #-12]
    f7f8:	ldr	r1, [fp, #-16]
    f7fc:	bl	4e5c <flatcc_json_parser_symbol_part>
    f800:	str	r1, [sp, #12]
    f804:	str	r0, [sp, #8]
    f808:	ldr	r0, [sp, #12]
    f80c:	bic	r0, r0, #255	; 0xff
    f810:	movw	r1, #26624	; 0x6800
    f814:	movt	r1, #26484	; 0x6774
    f818:	teq	r0, r1
    f81c:	bne	f908 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
    f820:	b	f824 <Fantasy_Rapunzel_parse_json_struct_inline+0xd4>
    f824:	ldr	r0, [fp, #-8]
    f828:	ldr	r1, [fp, #-12]
    f82c:	str	r1, [sp, #20]
    f830:	ldr	r2, [fp, #-16]
    f834:	movw	r3, #3
    f838:	bl	4e94 <flatcc_json_parser_match_symbol>
    f83c:	str	r0, [fp, #-12]
    f840:	ldr	r0, [sp, #20]
    f844:	ldr	r1, [fp, #-12]
    f848:	cmp	r0, r1
    f84c:	beq	f8f0 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
    f850:	movw	r0, #0
    f854:	strh	r0, [sp, #6]
    f858:	ldr	r0, [fp, #-20]	; 0xffffffec
    f85c:	add	r0, r0, #0
    f860:	str	r0, [sp, #24]
    f864:	ldr	r0, [fp, #-8]
    f868:	ldr	r1, [fp, #-12]
    f86c:	str	r1, [sp, #20]
    f870:	ldr	r2, [fp, #-16]
    f874:	add	r3, sp, #6
    f878:	bl	f980 <flatcc_json_parser_uint16>
    f87c:	str	r0, [fp, #-12]
    f880:	ldr	r0, [sp, #20]
    f884:	ldr	r1, [fp, #-12]
    f888:	cmp	r0, r1
    f88c:	bne	f8e0 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
    f890:	ldr	r0, [fp, #-8]
    f894:	ldr	r1, [fp, #-12]
    f898:	str	r1, [sp, #20]
    f89c:	ldr	r2, [fp, #-16]
    f8a0:	movw	r3, #0
    f8a4:	movt	r3, #0
    f8a8:	add	ip, sp, #6
    f8ac:	str	ip, [sp]
    f8b0:	bl	fa5c <flatcc_json_parser_symbolic_uint16>
    f8b4:	str	r0, [fp, #-12]
    f8b8:	ldr	r0, [fp, #-12]
    f8bc:	ldr	r1, [sp, #20]
    f8c0:	cmp	r0, r1
    f8c4:	beq	f8d8 <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
    f8c8:	ldr	r0, [fp, #-12]
    f8cc:	ldr	r1, [fp, #-16]
    f8d0:	cmp	r0, r1
    f8d4:	bne	f8dc <Fantasy_Rapunzel_parse_json_struct_inline+0x18c>
    f8d8:	b	f95c <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
    f8dc:	b	f8e0 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
    f8e0:	ldr	r0, [sp, #24]
    f8e4:	ldrh	r1, [sp, #6]
    f8e8:	bl	fc88 <flatbuffers_uint16_write_to_pe>
    f8ec:	b	f904 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
    f8f0:	ldr	r0, [fp, #-8]
    f8f4:	ldr	r1, [fp, #-12]
    f8f8:	ldr	r2, [fp, #-16]
    f8fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f900:	str	r0, [fp, #-12]
    f904:	b	f91c <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    f908:	ldr	r0, [fp, #-8]
    f90c:	ldr	r1, [fp, #-12]
    f910:	ldr	r2, [fp, #-16]
    f914:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f918:	str	r0, [fp, #-12]
    f91c:	b	f934 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    f920:	ldr	r0, [fp, #-8]
    f924:	ldr	r1, [fp, #-12]
    f928:	ldr	r2, [fp, #-16]
    f92c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f930:	str	r0, [fp, #-12]
    f934:	ldr	r0, [fp, #-8]
    f938:	ldr	r1, [fp, #-12]
    f93c:	ldr	r2, [fp, #-16]
    f940:	sub	r3, fp, #24
    f944:	bl	a1ac <flatcc_json_parser_object_end>
    f948:	str	r0, [fp, #-12]
    f94c:	b	f784 <Fantasy_Rapunzel_parse_json_struct_inline+0x34>
    f950:	ldr	r0, [fp, #-12]
    f954:	str	r0, [fp, #-4]
    f958:	b	f974 <Fantasy_Rapunzel_parse_json_struct_inline+0x224>
    f95c:	ldr	r0, [fp, #-8]
    f960:	ldr	r1, [fp, #-12]
    f964:	ldr	r2, [fp, #-16]
    f968:	movw	r3, #33	; 0x21
    f96c:	bl	0 <flatcc_json_parser_set_error>
    f970:	str	r0, [fp, #-4]
    f974:	ldr	r0, [fp, #-4]
    f978:	mov	sp, fp
    f97c:	pop	{fp, pc}

0000f980 <flatcc_json_parser_uint16>:
    f980:	push	{r4, r5, fp, lr}
    f984:	add	fp, sp, #8
    f988:	sub	sp, sp, #56	; 0x38
    f98c:	str	r0, [fp, #-16]
    f990:	str	r1, [fp, #-20]	; 0xffffffec
    f994:	str	r2, [fp, #-24]	; 0xffffffe8
    f998:	str	r3, [fp, #-28]	; 0xffffffe4
    f99c:	mov	r0, #0
    f9a0:	str	r0, [sp, #28]
    f9a4:	str	r0, [sp, #24]
    f9a8:	movw	r0, #0
    f9ac:	str	r0, [sp, #20]
    f9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    f9b4:	str	r0, [sp, #16]
    f9b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f9bc:	movw	r1, #0
    f9c0:	strh	r1, [r0]
    f9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    f9c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    f9cc:	cmp	r0, r1
    f9d0:	bne	f9e0 <flatcc_json_parser_uint16+0x60>
    f9d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    f9d8:	str	r0, [fp, #-12]
    f9dc:	b	fa50 <flatcc_json_parser_uint16+0xd0>
    f9e0:	ldr	r0, [fp, #-16]
    f9e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    f9e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f9ec:	add	r3, sp, #20
    f9f0:	add	ip, sp, #24
    f9f4:	str	ip, [sp]
    f9f8:	bl	0 <flatcc_json_parser_integer>
    f9fc:	str	r0, [fp, #-20]	; 0xffffffec
    fa00:	ldr	r0, [fp, #-20]	; 0xffffffec
    fa04:	ldr	r1, [sp, #16]
    fa08:	cmp	r0, r1
    fa0c:	beq	fa48 <flatcc_json_parser_uint16+0xc8>
    fa10:	ldr	r0, [fp, #-16]
    fa14:	ldr	r1, [fp, #-20]	; 0xffffffec
    fa18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fa1c:	ldr	r3, [sp, #20]
    fa20:	ldr	ip, [sp, #24]
    fa24:	ldr	lr, [sp, #28]
    fa28:	ldr	r4, [fp, #-28]	; 0xffffffe4
    fa2c:	mov	r5, sp
    fa30:	str	r4, [r5, #8]
    fa34:	str	lr, [r5, #4]
    fa38:	str	ip, [r5]
    fa3c:	bl	fcb4 <flatcc_json_parser_coerce_uint16>
    fa40:	str	r0, [fp, #-12]
    fa44:	b	fa50 <flatcc_json_parser_uint16+0xd0>
    fa48:	ldr	r0, [fp, #-20]	; 0xffffffec
    fa4c:	str	r0, [fp, #-12]
    fa50:	ldr	r0, [fp, #-12]
    fa54:	sub	sp, fp, #8
    fa58:	pop	{r4, r5, fp, pc}

0000fa5c <flatcc_json_parser_symbolic_uint16>:
    fa5c:	push	{r4, r5, r6, sl, fp, lr}
    fa60:	add	fp, sp, #16
    fa64:	sub	sp, sp, #88	; 0x58
    fa68:	ldr	ip, [fp, #8]
    fa6c:	str	r0, [fp, #-24]	; 0xffffffe8
    fa70:	str	r1, [fp, #-28]	; 0xffffffe4
    fa74:	str	r2, [fp, #-32]	; 0xffffffe0
    fa78:	str	r3, [fp, #-36]	; 0xffffffdc
    fa7c:	movw	r0, #0
    fa80:	strh	r0, [fp, #-46]	; 0xffffffd2
    fa84:	movw	r1, #0
    fa88:	str	r1, [sp, #36]	; 0x24
    fa8c:	ldr	r1, [fp, #8]
    fa90:	strh	r0, [r1]
    fa94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fa98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fa9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    faa0:	str	ip, [sp, #32]
    faa4:	bl	b934 <flatcc_json_parser_constant_start>
    faa8:	str	r0, [fp, #-28]	; 0xffffffe4
    faac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fab0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    fab4:	cmp	r0, r1
    fab8:	bne	fac8 <flatcc_json_parser_symbolic_uint16+0x6c>
    fabc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fac0:	str	r0, [fp, #-20]	; 0xffffffec
    fac4:	b	fc7c <flatcc_json_parser_symbolic_uint16+0x220>
    fac8:	b	facc <flatcc_json_parser_symbolic_uint16+0x70>
    facc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    fad0:	str	r0, [fp, #-40]	; 0xffffffd8
    fad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fad8:	ldr	r0, [r0]
    fadc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fae0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    fae4:	str	r2, [fp, #-44]	; 0xffffffd4
    fae8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    faec:	str	r0, [sp, #28]
    faf0:	mov	r0, r1
    faf4:	mov	r1, r2
    faf8:	mov	r2, r3
    fafc:	add	r3, sp, #44	; 0x2c
    fb00:	add	ip, sp, #48	; 0x30
    fb04:	str	ip, [sp]
    fb08:	add	ip, sp, #40	; 0x28
    fb0c:	str	ip, [sp, #4]
    fb10:	ldr	ip, [sp, #28]
    fb14:	blx	ip
    fb18:	str	r0, [fp, #-28]	; 0xffffffe4
    fb1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fb20:	ldr	r1, [fp, #-32]	; 0xffffffe0
    fb24:	cmp	r0, r1
    fb28:	bne	fb38 <flatcc_json_parser_symbolic_uint16+0xdc>
    fb2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fb30:	str	r0, [fp, #-20]	; 0xffffffec
    fb34:	b	fc7c <flatcc_json_parser_symbolic_uint16+0x220>
    fb38:	b	fb3c <flatcc_json_parser_symbolic_uint16+0xe0>
    fb3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fb40:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fb44:	cmp	r0, r1
    fb48:	movw	r0, #0
    fb4c:	str	r0, [sp, #24]
    fb50:	bne	fb78 <flatcc_json_parser_symbolic_uint16+0x11c>
    fb54:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fb58:	add	r1, r0, #4
    fb5c:	str	r1, [fp, #-40]	; 0xffffffd8
    fb60:	ldr	r0, [r0, #4]
    fb64:	movw	r1, #0
    fb68:	cmp	r0, r1
    fb6c:	movw	r0, #0
    fb70:	movne	r0, #1
    fb74:	str	r0, [sp, #24]
    fb78:	ldr	r0, [sp, #24]
    fb7c:	tst	r0, #1
    fb80:	bne	fad4 <flatcc_json_parser_symbolic_uint16+0x78>
    fb84:	ldr	r0, [fp, #-44]	; 0xffffffd4
    fb88:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fb8c:	cmp	r0, r1
    fb90:	bne	fbb0 <flatcc_json_parser_symbolic_uint16+0x154>
    fb94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fb98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fb9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    fba0:	movw	r3, #23
    fba4:	bl	0 <flatcc_json_parser_set_error>
    fba8:	str	r0, [fp, #-20]	; 0xffffffec
    fbac:	b	fc7c <flatcc_json_parser_symbolic_uint16+0x220>
    fbb0:	ldr	r0, [sp, #36]	; 0x24
    fbb4:	add	r1, r0, #1
    fbb8:	str	r1, [sp, #36]	; 0x24
    fbbc:	cmp	r0, #0
    fbc0:	beq	fbf0 <flatcc_json_parser_symbolic_uint16+0x194>
    fbc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fbc8:	ldr	r0, [r0, #12]
    fbcc:	cmp	r0, #0
    fbd0:	beq	fbf0 <flatcc_json_parser_symbolic_uint16+0x194>
    fbd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fbd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fbdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    fbe0:	movw	r3, #14
    fbe4:	bl	0 <flatcc_json_parser_set_error>
    fbe8:	str	r0, [fp, #-20]	; 0xffffffec
    fbec:	b	fc7c <flatcc_json_parser_symbolic_uint16+0x220>
    fbf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fbf4:	mov	r1, r0
    fbf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fbfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fc00:	ldr	ip, [sp, #44]	; 0x2c
    fc04:	ldr	lr, [sp, #48]	; 0x30
    fc08:	ldr	r4, [sp, #52]	; 0x34
    fc0c:	mov	r5, sp
    fc10:	sub	r6, fp, #46	; 0x2e
    fc14:	str	r6, [r5, #8]
    fc18:	str	r4, [r5, #4]
    fc1c:	str	lr, [r5]
    fc20:	str	r0, [sp, #20]
    fc24:	mov	r0, r2
    fc28:	str	r1, [sp, #16]
    fc2c:	mov	r1, r3
    fc30:	ldr	r2, [sp, #20]
    fc34:	mov	r3, ip
    fc38:	bl	fcb4 <flatcc_json_parser_coerce_uint16>
    fc3c:	ldr	r1, [sp, #16]
    fc40:	cmp	r1, r0
    fc44:	bne	fc54 <flatcc_json_parser_symbolic_uint16+0x1f8>
    fc48:	ldr	r0, [fp, #-32]	; 0xffffffe0
    fc4c:	str	r0, [fp, #-20]	; 0xffffffec
    fc50:	b	fc7c <flatcc_json_parser_symbolic_uint16+0x220>
    fc54:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    fc58:	ldr	r1, [fp, #8]
    fc5c:	ldrh	r2, [r1]
    fc60:	add	r0, r2, r0
    fc64:	strh	r0, [r1]
    fc68:	ldr	r0, [sp, #40]	; 0x28
    fc6c:	cmp	r0, #0
    fc70:	bne	facc <flatcc_json_parser_symbolic_uint16+0x70>
    fc74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fc78:	str	r0, [fp, #-20]	; 0xffffffec
    fc7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    fc80:	sub	sp, fp, #16
    fc84:	pop	{r4, r5, r6, sl, fp, pc}

0000fc88 <flatbuffers_uint16_write_to_pe>:
    fc88:	push	{fp, lr}
    fc8c:	mov	fp, sp
    fc90:	sub	sp, sp, #8
    fc94:	str	r0, [sp, #4]
    fc98:	strh	r1, [sp, #2]
    fc9c:	ldrh	r0, [sp, #2]
    fca0:	bl	fd6c <flatbuffers_uint16_cast_to_pe>
    fca4:	ldr	r1, [sp, #4]
    fca8:	strh	r0, [r1]
    fcac:	mov	sp, fp
    fcb0:	pop	{fp, pc}

0000fcb4 <flatcc_json_parser_coerce_uint16>:
    fcb4:	push	{r4, sl, fp, lr}
    fcb8:	add	fp, sp, #8
    fcbc:	sub	sp, sp, #48	; 0x30
    fcc0:	ldr	ip, [fp, #12]
    fcc4:	ldr	lr, [fp, #8]
    fcc8:	ldr	r4, [fp, #16]
    fccc:	str	r0, [fp, #-16]
    fcd0:	str	r1, [fp, #-20]	; 0xffffffec
    fcd4:	str	r2, [fp, #-24]	; 0xffffffe8
    fcd8:	str	r3, [sp, #28]
    fcdc:	str	ip, [sp, #20]
    fce0:	str	lr, [sp, #16]
    fce4:	ldr	r0, [sp, #28]
    fce8:	cmp	r0, #0
    fcec:	str	r4, [sp, #12]
    fcf0:	beq	fd10 <flatcc_json_parser_coerce_uint16+0x5c>
    fcf4:	ldr	r0, [fp, #-16]
    fcf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    fcfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fd00:	movw	r3, #8
    fd04:	bl	0 <flatcc_json_parser_set_error>
    fd08:	str	r0, [fp, #-12]
    fd0c:	b	fd60 <flatcc_json_parser_coerce_uint16+0xac>
    fd10:	ldr	r0, [sp, #16]
    fd14:	ldr	r1, [sp, #20]
    fd18:	subs	r0, r0, #65536	; 0x10000
    fd1c:	sbcs	r1, r1, #0
    fd20:	str	r0, [sp, #8]
    fd24:	str	r1, [sp, #4]
    fd28:	bcc	fd4c <flatcc_json_parser_coerce_uint16+0x98>
    fd2c:	b	fd30 <flatcc_json_parser_coerce_uint16+0x7c>
    fd30:	ldr	r0, [fp, #-16]
    fd34:	ldr	r1, [fp, #-20]	; 0xffffffec
    fd38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fd3c:	movw	r3, #7
    fd40:	bl	0 <flatcc_json_parser_set_error>
    fd44:	str	r0, [fp, #-12]
    fd48:	b	fd60 <flatcc_json_parser_coerce_uint16+0xac>
    fd4c:	ldrh	r0, [sp, #16]
    fd50:	ldr	r1, [fp, #16]
    fd54:	strh	r0, [r1]
    fd58:	ldr	r0, [fp, #-20]	; 0xffffffec
    fd5c:	str	r0, [fp, #-12]
    fd60:	ldr	r0, [fp, #-12]
    fd64:	sub	sp, fp, #8
    fd68:	pop	{r4, sl, fp, pc}

0000fd6c <flatbuffers_uint16_cast_to_pe>:
    fd6c:	sub	sp, sp, #4
    fd70:	strh	r0, [sp, #2]
    fd74:	ldrh	r0, [sp, #2]
    fd78:	add	sp, sp, #4
    fd7c:	bx	lr

0000fd80 <Fantasy_BookReader_parse_json_struct_inline>:
    fd80:	push	{fp, lr}
    fd84:	mov	fp, sp
    fd88:	sub	sp, sp, #56	; 0x38
    fd8c:	str	r0, [fp, #-8]
    fd90:	str	r1, [fp, #-12]
    fd94:	str	r2, [fp, #-16]
    fd98:	str	r3, [fp, #-20]	; 0xffffffec
    fd9c:	ldr	r0, [fp, #-8]
    fda0:	ldr	r1, [fp, #-12]
    fda4:	ldr	r2, [fp, #-16]
    fda8:	sub	r3, fp, #24
    fdac:	bl	4ccc <flatcc_json_parser_object_start>
    fdb0:	str	r0, [fp, #-12]
    fdb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fdb8:	cmp	r0, #0
    fdbc:	beq	ff80 <Fantasy_BookReader_parse_json_struct_inline+0x200>
    fdc0:	ldr	r0, [fp, #-8]
    fdc4:	ldr	r1, [fp, #-12]
    fdc8:	ldr	r2, [fp, #-16]
    fdcc:	bl	4db0 <flatcc_json_parser_symbol_start>
    fdd0:	str	r0, [fp, #-12]
    fdd4:	ldr	r0, [fp, #-12]
    fdd8:	ldr	r1, [fp, #-16]
    fddc:	bl	4e5c <flatcc_json_parser_symbol_part>
    fde0:	str	r1, [sp, #12]
    fde4:	str	r0, [sp, #8]
    fde8:	ldr	r0, [sp, #8]
    fdec:	ldr	r1, [sp, #12]
    fdf0:	movw	r2, #28523	; 0x6f6b
    fdf4:	movt	r2, #25199	; 0x626f
    fdf8:	eor	r1, r1, r2
    fdfc:	movw	r2, #29285	; 0x7265
    fe00:	movt	r2, #29535	; 0x735f
    fe04:	eor	r0, r0, r2
    fe08:	orr	r0, r0, r1
    fe0c:	cmp	r0, #0
    fe10:	bne	ff50 <Fantasy_BookReader_parse_json_struct_inline+0x1d0>
    fe14:	b	fe18 <Fantasy_BookReader_parse_json_struct_inline+0x98>
    fe18:	ldr	r0, [fp, #-12]
    fe1c:	add	r0, r0, #8
    fe20:	str	r0, [fp, #-12]
    fe24:	ldr	r0, [fp, #-12]
    fe28:	ldr	r1, [fp, #-16]
    fe2c:	bl	4e5c <flatcc_json_parser_symbol_part>
    fe30:	str	r1, [sp, #12]
    fe34:	str	r0, [sp, #8]
    fe38:	ldr	r0, [sp, #12]
    fe3c:	bfc	r0, #0, #16
    fe40:	movw	r1, #0
    fe44:	movt	r1, #24932	; 0x6164
    fe48:	teq	r0, r1
    fe4c:	bne	ff38 <Fantasy_BookReader_parse_json_struct_inline+0x1b8>
    fe50:	b	fe54 <Fantasy_BookReader_parse_json_struct_inline+0xd4>
    fe54:	ldr	r0, [fp, #-8]
    fe58:	ldr	r1, [fp, #-12]
    fe5c:	str	r1, [sp, #20]
    fe60:	ldr	r2, [fp, #-16]
    fe64:	movw	r3, #2
    fe68:	bl	4e94 <flatcc_json_parser_match_symbol>
    fe6c:	str	r0, [fp, #-12]
    fe70:	ldr	r0, [sp, #20]
    fe74:	ldr	r1, [fp, #-12]
    fe78:	cmp	r0, r1
    fe7c:	beq	ff20 <Fantasy_BookReader_parse_json_struct_inline+0x1a0>
    fe80:	movw	r0, #0
    fe84:	str	r0, [sp, #4]
    fe88:	ldr	r0, [fp, #-20]	; 0xffffffec
    fe8c:	add	r0, r0, #0
    fe90:	str	r0, [sp, #24]
    fe94:	ldr	r0, [fp, #-8]
    fe98:	ldr	r1, [fp, #-12]
    fe9c:	str	r1, [sp, #20]
    fea0:	ldr	r2, [fp, #-16]
    fea4:	add	r3, sp, #4
    fea8:	bl	9250 <flatcc_json_parser_int32>
    feac:	str	r0, [fp, #-12]
    feb0:	ldr	r0, [sp, #20]
    feb4:	ldr	r1, [fp, #-12]
    feb8:	cmp	r0, r1
    febc:	bne	ff10 <Fantasy_BookReader_parse_json_struct_inline+0x190>
    fec0:	ldr	r0, [fp, #-8]
    fec4:	ldr	r1, [fp, #-12]
    fec8:	str	r1, [sp, #20]
    fecc:	ldr	r2, [fp, #-16]
    fed0:	movw	r3, #0
    fed4:	movt	r3, #0
    fed8:	add	ip, sp, #4
    fedc:	str	ip, [sp]
    fee0:	bl	9328 <flatcc_json_parser_symbolic_int32>
    fee4:	str	r0, [fp, #-12]
    fee8:	ldr	r0, [fp, #-12]
    feec:	ldr	r1, [sp, #20]
    fef0:	cmp	r0, r1
    fef4:	beq	ff08 <Fantasy_BookReader_parse_json_struct_inline+0x188>
    fef8:	ldr	r0, [fp, #-12]
    fefc:	ldr	r1, [fp, #-16]
    ff00:	cmp	r0, r1
    ff04:	bne	ff0c <Fantasy_BookReader_parse_json_struct_inline+0x18c>
    ff08:	b	ff8c <Fantasy_BookReader_parse_json_struct_inline+0x20c>
    ff0c:	b	ff10 <Fantasy_BookReader_parse_json_struct_inline+0x190>
    ff10:	ldr	r0, [sp, #24]
    ff14:	ldr	r1, [sp, #4]
    ff18:	bl	9550 <flatbuffers_int32_write_to_pe>
    ff1c:	b	ff34 <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
    ff20:	ldr	r0, [fp, #-8]
    ff24:	ldr	r1, [fp, #-12]
    ff28:	ldr	r2, [fp, #-16]
    ff2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ff30:	str	r0, [fp, #-12]
    ff34:	b	ff4c <Fantasy_BookReader_parse_json_struct_inline+0x1cc>
    ff38:	ldr	r0, [fp, #-8]
    ff3c:	ldr	r1, [fp, #-12]
    ff40:	ldr	r2, [fp, #-16]
    ff44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ff48:	str	r0, [fp, #-12]
    ff4c:	b	ff64 <Fantasy_BookReader_parse_json_struct_inline+0x1e4>
    ff50:	ldr	r0, [fp, #-8]
    ff54:	ldr	r1, [fp, #-12]
    ff58:	ldr	r2, [fp, #-16]
    ff5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ff60:	str	r0, [fp, #-12]
    ff64:	ldr	r0, [fp, #-8]
    ff68:	ldr	r1, [fp, #-12]
    ff6c:	ldr	r2, [fp, #-16]
    ff70:	sub	r3, fp, #24
    ff74:	bl	a1ac <flatcc_json_parser_object_end>
    ff78:	str	r0, [fp, #-12]
    ff7c:	b	fdb4 <Fantasy_BookReader_parse_json_struct_inline+0x34>
    ff80:	ldr	r0, [fp, #-12]
    ff84:	str	r0, [fp, #-4]
    ff88:	b	ffa4 <Fantasy_BookReader_parse_json_struct_inline+0x224>
    ff8c:	ldr	r0, [fp, #-8]
    ff90:	ldr	r1, [fp, #-12]
    ff94:	ldr	r2, [fp, #-16]
    ff98:	movw	r3, #33	; 0x21
    ff9c:	bl	0 <flatcc_json_parser_set_error>
    ffa0:	str	r0, [fp, #-4]
    ffa4:	ldr	r0, [fp, #-4]
    ffa8:	mov	sp, fp
    ffac:	pop	{fp, pc}

0000ffb0 <flatcc_json_parser_coerce_bool>:
    ffb0:	push	{r4, sl, fp, lr}
    ffb4:	add	fp, sp, #8
    ffb8:	sub	sp, sp, #40	; 0x28
    ffbc:	ldr	ip, [fp, #12]
    ffc0:	ldr	lr, [fp, #8]
    ffc4:	ldr	r4, [fp, #16]
    ffc8:	str	r0, [fp, #-16]
    ffcc:	str	r1, [fp, #-20]	; 0xffffffec
    ffd0:	str	r2, [sp, #24]
    ffd4:	str	r3, [sp, #20]
    ffd8:	str	ip, [sp, #12]
    ffdc:	str	lr, [sp, #8]
    ffe0:	ldr	r0, [sp, #20]
    ffe4:	cmp	r0, #0
    ffe8:	str	r4, [sp, #4]
    ffec:	beq	1000c <flatcc_json_parser_coerce_bool+0x5c>
    fff0:	ldr	r0, [fp, #-16]
    fff4:	ldr	r1, [fp, #-20]	; 0xffffffec
    fff8:	ldr	r2, [sp, #24]
    fffc:	movw	r3, #8
   10000:	bl	0 <flatcc_json_parser_set_error>
   10004:	str	r0, [fp, #-12]
   10008:	b	10040 <flatcc_json_parser_coerce_bool+0x90>
   1000c:	ldr	r0, [sp, #8]
   10010:	ldr	r1, [sp, #12]
   10014:	orr	r0, r0, r1
   10018:	cmp	r0, #0
   1001c:	movwne	r0, #1
   10020:	mvn	r1, #0
   10024:	eor	r0, r0, r1
   10028:	eor	r0, r0, r1
   1002c:	and	r0, r0, #1
   10030:	ldr	r1, [fp, #16]
   10034:	strb	r0, [r1]
   10038:	ldr	r0, [fp, #-20]	; 0xffffffec
   1003c:	str	r0, [fp, #-12]
   10040:	ldr	r0, [fp, #-12]
   10044:	sub	sp, fp, #8
   10048:	pop	{r4, sl, fp, pc}

0001004c <flatbuffers_bool_cast_to_pe>:
   1004c:	sub	sp, sp, #4
   10050:	strb	r0, [sp, #3]
   10054:	ldrb	r0, [sp, #3]
   10058:	add	sp, sp, #4
   1005c:	bx	lr

00010060 <flatcc_json_parser_coerce_float>:
   10060:	push	{r4, sl, fp, lr}
   10064:	add	fp, sp, #8
   10068:	sub	sp, sp, #32
   1006c:	ldr	ip, [fp, #12]
   10070:	ldr	lr, [fp, #8]
   10074:	ldr	r4, [fp, #16]
   10078:	str	r0, [fp, #-12]
   1007c:	str	r1, [fp, #-16]
   10080:	str	r2, [sp, #20]
   10084:	str	r3, [sp, #16]
   10088:	str	ip, [sp, #12]
   1008c:	str	lr, [sp, #8]
   10090:	ldr	r0, [sp, #16]
   10094:	cmp	r0, #0
   10098:	str	r4, [sp, #4]
   1009c:	beq	100bc <flatcc_json_parser_coerce_float+0x5c>
   100a0:	ldr	r0, [sp, #8]
   100a4:	ldr	r1, [sp, #12]
   100a8:	bl	0 <__aeabi_ul2f>
   100ac:	vmov	s0, r0
   100b0:	vneg.f32	s0, s0
   100b4:	vstr	s0, [sp]
   100b8:	b	100d0 <flatcc_json_parser_coerce_float+0x70>
   100bc:	ldr	r0, [sp, #8]
   100c0:	ldr	r1, [sp, #12]
   100c4:	bl	0 <__aeabi_ul2f>
   100c8:	vmov	s0, r0
   100cc:	vstr	s0, [sp]
   100d0:	vldr	s0, [sp]
   100d4:	ldr	r0, [fp, #16]
   100d8:	vstr	s0, [r0]
   100dc:	ldr	r0, [fp, #-16]
   100e0:	sub	sp, fp, #8
   100e4:	pop	{r4, sl, fp, pc}

000100e8 <flatbuffers_float_cast_to_pe>:
   100e8:	sub	sp, sp, #8
   100ec:	vstr	s0, [sp, #4]
   100f0:	vldr	s0, [sp, #4]
   100f4:	vstr	s0, [sp]
   100f8:	ldr	r0, [sp]
   100fc:	str	r0, [sp]
   10100:	vldr	s0, [sp]
   10104:	add	sp, sp, #8
   10108:	bx	lr

0001010c <flatcc_json_parser_coerce_int32>:
   1010c:	push	{r4, sl, fp, lr}
   10110:	add	fp, sp, #8
   10114:	sub	sp, sp, #56	; 0x38
   10118:	ldr	ip, [fp, #12]
   1011c:	ldr	lr, [fp, #8]
   10120:	ldr	r4, [fp, #16]
   10124:	str	r0, [fp, #-16]
   10128:	str	r1, [fp, #-20]	; 0xffffffec
   1012c:	str	r2, [fp, #-24]	; 0xffffffe8
   10130:	str	r3, [fp, #-28]	; 0xffffffe4
   10134:	str	ip, [sp, #28]
   10138:	str	lr, [sp, #24]
   1013c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10140:	cmp	r0, #0
   10144:	str	r4, [sp, #20]
   10148:	beq	1019c <flatcc_json_parser_coerce_int32+0x90>
   1014c:	ldr	r0, [sp, #24]
   10150:	ldr	r1, [sp, #28]
   10154:	subs	r0, r0, #-2147483647	; 0x80000001
   10158:	sbcs	r1, r1, #0
   1015c:	str	r0, [sp, #16]
   10160:	str	r1, [sp, #12]
   10164:	bcc	10188 <flatcc_json_parser_coerce_int32+0x7c>
   10168:	b	1016c <flatcc_json_parser_coerce_int32+0x60>
   1016c:	ldr	r0, [fp, #-16]
   10170:	ldr	r1, [fp, #-20]	; 0xffffffec
   10174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10178:	movw	r3, #8
   1017c:	bl	0 <flatcc_json_parser_set_error>
   10180:	str	r0, [fp, #-12]
   10184:	b	101ec <flatcc_json_parser_coerce_int32+0xe0>
   10188:	ldr	r0, [sp, #24]
   1018c:	rsb	r0, r0, #0
   10190:	ldr	r1, [fp, #16]
   10194:	str	r0, [r1]
   10198:	b	101e4 <flatcc_json_parser_coerce_int32+0xd8>
   1019c:	ldr	r0, [sp, #24]
   101a0:	ldr	r1, [sp, #28]
   101a4:	subs	r0, r0, #-2147483648	; 0x80000000
   101a8:	sbcs	r1, r1, #0
   101ac:	str	r0, [sp, #8]
   101b0:	str	r1, [sp, #4]
   101b4:	bcc	101d8 <flatcc_json_parser_coerce_int32+0xcc>
   101b8:	b	101bc <flatcc_json_parser_coerce_int32+0xb0>
   101bc:	ldr	r0, [fp, #-16]
   101c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   101c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   101c8:	movw	r3, #7
   101cc:	bl	0 <flatcc_json_parser_set_error>
   101d0:	str	r0, [fp, #-12]
   101d4:	b	101ec <flatcc_json_parser_coerce_int32+0xe0>
   101d8:	ldr	r0, [sp, #24]
   101dc:	ldr	r1, [fp, #16]
   101e0:	str	r0, [r1]
   101e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   101e8:	str	r0, [fp, #-12]
   101ec:	ldr	r0, [fp, #-12]
   101f0:	sub	sp, fp, #8
   101f4:	pop	{r4, sl, fp, pc}

000101f8 <flatbuffers_int32_cast_to_pe>:
   101f8:	sub	sp, sp, #4
   101fc:	str	r0, [sp]
   10200:	ldr	r0, [sp]
   10204:	add	sp, sp, #4
   10208:	bx	lr

0001020c <flatcc_json_parser_coerce_int64>:
   1020c:	push	{r4, sl, fp, lr}
   10210:	add	fp, sp, #8
   10214:	sub	sp, sp, #48	; 0x30
   10218:	ldr	ip, [fp, #12]
   1021c:	ldr	lr, [fp, #8]
   10220:	ldr	r4, [fp, #16]
   10224:	str	r0, [fp, #-16]
   10228:	str	r1, [fp, #-20]	; 0xffffffec
   1022c:	str	r2, [fp, #-24]	; 0xffffffe8
   10230:	str	r3, [sp, #28]
   10234:	str	ip, [sp, #20]
   10238:	str	lr, [sp, #16]
   1023c:	ldr	r0, [sp, #28]
   10240:	cmp	r0, #0
   10244:	str	r4, [sp, #12]
   10248:	beq	102a8 <flatcc_json_parser_coerce_int64+0x9c>
   1024c:	ldr	r0, [sp, #16]
   10250:	ldr	r1, [sp, #20]
   10254:	subs	r0, r0, #1
   10258:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1025c:	str	r0, [sp, #8]
   10260:	str	r1, [sp, #4]
   10264:	bcc	10288 <flatcc_json_parser_coerce_int64+0x7c>
   10268:	b	1026c <flatcc_json_parser_coerce_int64+0x60>
   1026c:	ldr	r0, [fp, #-16]
   10270:	ldr	r1, [fp, #-20]	; 0xffffffec
   10274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10278:	movw	r3, #8
   1027c:	bl	0 <flatcc_json_parser_set_error>
   10280:	str	r0, [fp, #-12]
   10284:	b	102f0 <flatcc_json_parser_coerce_int64+0xe4>
   10288:	ldr	r0, [sp, #16]
   1028c:	ldr	r1, [sp, #20]
   10290:	rsbs	r0, r0, #0
   10294:	rsc	r1, r1, #0
   10298:	ldr	r2, [fp, #16]
   1029c:	str	r0, [r2]
   102a0:	str	r1, [r2, #4]
   102a4:	b	102e8 <flatcc_json_parser_coerce_int64+0xdc>
   102a8:	ldr	r0, [sp, #20]
   102ac:	cmn	r0, #1
   102b0:	bgt	102d4 <flatcc_json_parser_coerce_int64+0xc8>
   102b4:	b	102b8 <flatcc_json_parser_coerce_int64+0xac>
   102b8:	ldr	r0, [fp, #-16]
   102bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   102c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   102c4:	movw	r3, #7
   102c8:	bl	0 <flatcc_json_parser_set_error>
   102cc:	str	r0, [fp, #-12]
   102d0:	b	102f0 <flatcc_json_parser_coerce_int64+0xe4>
   102d4:	ldr	r0, [sp, #16]
   102d8:	ldr	r1, [sp, #20]
   102dc:	ldr	r2, [fp, #16]
   102e0:	str	r1, [r2, #4]
   102e4:	str	r0, [r2]
   102e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   102ec:	str	r0, [fp, #-12]
   102f0:	ldr	r0, [fp, #-12]
   102f4:	sub	sp, fp, #8
   102f8:	pop	{r4, sl, fp, pc}

000102fc <flatbuffers_int64_cast_to_pe>:
   102fc:	sub	sp, sp, #8
   10300:	str	r0, [sp]
   10304:	str	r1, [sp, #4]
   10308:	ldr	r0, [sp]
   1030c:	ldr	r1, [sp, #4]
   10310:	add	sp, sp, #8
   10314:	bx	lr

00010318 <flatcc_json_parser_coerce_uint32>:
   10318:	push	{r4, sl, fp, lr}
   1031c:	add	fp, sp, #8
   10320:	sub	sp, sp, #40	; 0x28
   10324:	ldr	ip, [fp, #12]
   10328:	ldr	lr, [fp, #8]
   1032c:	ldr	r4, [fp, #16]
   10330:	str	r0, [fp, #-16]
   10334:	str	r1, [fp, #-20]	; 0xffffffec
   10338:	str	r2, [sp, #24]
   1033c:	str	r3, [sp, #20]
   10340:	str	ip, [sp, #12]
   10344:	str	lr, [sp, #8]
   10348:	ldr	r0, [sp, #20]
   1034c:	cmp	r0, #0
   10350:	str	r4, [sp, #4]
   10354:	beq	10374 <flatcc_json_parser_coerce_uint32+0x5c>
   10358:	ldr	r0, [fp, #-16]
   1035c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10360:	ldr	r2, [sp, #24]
   10364:	movw	r3, #8
   10368:	bl	0 <flatcc_json_parser_set_error>
   1036c:	str	r0, [fp, #-12]
   10370:	b	103b4 <flatcc_json_parser_coerce_uint32+0x9c>
   10374:	ldr	r0, [sp, #12]
   10378:	cmp	r0, #0
   1037c:	beq	103a0 <flatcc_json_parser_coerce_uint32+0x88>
   10380:	b	10384 <flatcc_json_parser_coerce_uint32+0x6c>
   10384:	ldr	r0, [fp, #-16]
   10388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1038c:	ldr	r2, [sp, #24]
   10390:	movw	r3, #7
   10394:	bl	0 <flatcc_json_parser_set_error>
   10398:	str	r0, [fp, #-12]
   1039c:	b	103b4 <flatcc_json_parser_coerce_uint32+0x9c>
   103a0:	ldr	r0, [sp, #8]
   103a4:	ldr	r1, [fp, #16]
   103a8:	str	r0, [r1]
   103ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   103b0:	str	r0, [fp, #-12]
   103b4:	ldr	r0, [fp, #-12]
   103b8:	sub	sp, fp, #8
   103bc:	pop	{r4, sl, fp, pc}

000103c0 <flatbuffers_uint32_cast_to_pe>:
   103c0:	sub	sp, sp, #4
   103c4:	str	r0, [sp]
   103c8:	ldr	r0, [sp]
   103cc:	add	sp, sp, #4
   103d0:	bx	lr

000103d4 <flatcc_json_parser_coerce_uint64>:
   103d4:	push	{r4, sl, fp, lr}
   103d8:	add	fp, sp, #8
   103dc:	sub	sp, sp, #40	; 0x28
   103e0:	ldr	ip, [fp, #12]
   103e4:	ldr	lr, [fp, #8]
   103e8:	ldr	r4, [fp, #16]
   103ec:	str	r0, [fp, #-16]
   103f0:	str	r1, [fp, #-20]	; 0xffffffec
   103f4:	str	r2, [sp, #24]
   103f8:	str	r3, [sp, #20]
   103fc:	str	ip, [sp, #12]
   10400:	str	lr, [sp, #8]
   10404:	ldr	r0, [sp, #20]
   10408:	cmp	r0, #0
   1040c:	str	r4, [sp, #4]
   10410:	beq	10430 <flatcc_json_parser_coerce_uint64+0x5c>
   10414:	ldr	r0, [fp, #-16]
   10418:	ldr	r1, [fp, #-20]	; 0xffffffec
   1041c:	ldr	r2, [sp, #24]
   10420:	movw	r3, #8
   10424:	bl	0 <flatcc_json_parser_set_error>
   10428:	str	r0, [fp, #-12]
   1042c:	b	1044c <flatcc_json_parser_coerce_uint64+0x78>
   10430:	ldr	r0, [sp, #8]
   10434:	ldr	r1, [sp, #12]
   10438:	ldr	r2, [fp, #16]
   1043c:	str	r1, [r2, #4]
   10440:	str	r0, [r2]
   10444:	ldr	r0, [fp, #-20]	; 0xffffffec
   10448:	str	r0, [fp, #-12]
   1044c:	ldr	r0, [fp, #-12]
   10450:	sub	sp, fp, #8
   10454:	pop	{r4, sl, fp, pc}

00010458 <flatbuffers_uint64_cast_to_pe>:
   10458:	sub	sp, sp, #8
   1045c:	str	r0, [sp]
   10460:	str	r1, [sp, #4]
   10464:	ldr	r0, [sp]
   10468:	ldr	r1, [sp, #4]
   1046c:	add	sp, sp, #8
   10470:	bx	lr

00010474 <flatcc_json_parser_coerce_double>:
   10474:	push	{r4, sl, fp, lr}
   10478:	add	fp, sp, #8
   1047c:	sub	sp, sp, #40	; 0x28
   10480:	ldr	ip, [fp, #12]
   10484:	ldr	lr, [fp, #8]
   10488:	ldr	r4, [fp, #16]
   1048c:	str	r0, [fp, #-12]
   10490:	str	r1, [fp, #-16]
   10494:	str	r2, [fp, #-20]	; 0xffffffec
   10498:	str	r3, [sp, #24]
   1049c:	str	ip, [sp, #20]
   104a0:	str	lr, [sp, #16]
   104a4:	ldr	r0, [sp, #24]
   104a8:	cmp	r0, #0
   104ac:	str	r4, [sp, #12]
   104b0:	beq	104d0 <flatcc_json_parser_coerce_double+0x5c>
   104b4:	ldr	r0, [sp, #16]
   104b8:	ldr	r1, [sp, #20]
   104bc:	bl	0 <__aeabi_ul2d>
   104c0:	vmov	d16, r0, r1
   104c4:	vneg.f64	d16, d16
   104c8:	vstr	d16, [sp]
   104cc:	b	104e4 <flatcc_json_parser_coerce_double+0x70>
   104d0:	ldr	r0, [sp, #16]
   104d4:	ldr	r1, [sp, #20]
   104d8:	bl	0 <__aeabi_ul2d>
   104dc:	vmov	d16, r0, r1
   104e0:	vstr	d16, [sp]
   104e4:	vldr	d16, [sp]
   104e8:	ldr	r0, [fp, #16]
   104ec:	vstr	d16, [r0]
   104f0:	ldr	r0, [fp, #-16]
   104f4:	sub	sp, fp, #8
   104f8:	pop	{r4, sl, fp, pc}

000104fc <flatbuffers_double_cast_to_pe>:
   104fc:	sub	sp, sp, #16
   10500:	vstr	d0, [sp, #8]
   10504:	vldr	d0, [sp, #8]
   10508:	vstr	d0, [sp]
   1050c:	vldr	d0, [sp]
   10510:	add	sp, sp, #16
   10514:	bx	lr
