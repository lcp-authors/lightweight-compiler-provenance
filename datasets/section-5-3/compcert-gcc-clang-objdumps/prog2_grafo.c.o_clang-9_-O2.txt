
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <cria_elem>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r4, r0
   c:	mov	r0, #8
  10:	bl	0 <malloc>
  14:	cmp	r0, #0
  18:	moveq	r0, #0
  1c:	movne	r1, #0
  20:	strne	r4, [r0]
  24:	strne	r1, [r0, #4]
  28:	pop	{r4, sl, fp, pc}

0000002c <grafo_novo>:
  2c:	push	{r4, r5, fp, lr}
  30:	add	fp, sp, #8
  34:	cmp	r0, #1
  38:	blt	74 <grafo_novo+0x48>
  3c:	mov	r5, r0
  40:	mov	r0, #8
  44:	bl	0 <malloc>
  48:	str	r5, [r0]
  4c:	lsl	r5, r5, #3
  50:	mov	r4, r0
  54:	mov	r0, r5
  58:	bl	0 <malloc>
  5c:	mov	r1, #0
  60:	mov	r2, r5
  64:	str	r0, [r4, #4]
  68:	bl	0 <memset>
  6c:	mov	r0, r4
  70:	pop	{r4, r5, fp, pc}
  74:	mov	r4, #0
  78:	mov	r0, r4
  7c:	pop	{r4, r5, fp, pc}

00000080 <grafo_apaga>:
  80:	cmp	r0, #0
  84:	bxeq	lr
  88:	push	{r4, r5, r6, sl, fp, lr}
  8c:	add	fp, sp, #16
  90:	ldr	r1, [r0]
  94:	mov	r4, r0
  98:	cmp	r1, #1
  9c:	blt	e4 <grafo_apaga+0x64>
  a0:	mov	r5, #0
  a4:	b	b4 <grafo_apaga+0x34>
  a8:	add	r5, r5, #1
  ac:	cmp	r5, r1
  b0:	bge	e4 <grafo_apaga+0x64>
  b4:	ldr	r0, [r4, #4]
  b8:	add	r0, r0, r5, lsl #3
  bc:	ldr	r0, [r0, #4]
  c0:	cmp	r0, #0
  c4:	beq	a8 <grafo_apaga+0x28>
  c8:	ldr	r6, [r0, #4]
  cc:	bl	0 <free>
  d0:	cmp	r6, #0
  d4:	mov	r0, r6
  d8:	bne	c8 <grafo_apaga+0x48>
  dc:	ldr	r1, [r4]
  e0:	b	a8 <grafo_apaga+0x28>
  e4:	ldr	r0, [r4, #4]
  e8:	bl	0 <free>
  ec:	mov	r0, r4
  f0:	pop	{r4, r5, r6, sl, fp, lr}
  f4:	b	0 <free>

000000f8 <grafo_aresta>:
  f8:	mov	r3, r0
  fc:	mvn	r0, #0
 100:	cmp	r3, #0
 104:	beq	11c <grafo_aresta+0x24>
 108:	ldr	ip, [r3]
 10c:	cmp	ip, r1
 110:	movge	r0, #0
 114:	cmpge	ip, r2
 118:	bge	120 <grafo_aresta+0x28>
 11c:	bx	lr
 120:	ldr	r3, [r3, #4]
 124:	add	r1, r3, r1, lsl #3
 128:	ldr	r1, [r1, #4]
 12c:	cmp	r1, #0
 130:	bxeq	lr
 134:	ldr	r3, [r1]
 138:	cmp	r3, r2
 13c:	bne	128 <grafo_aresta+0x30>
 140:	mov	r0, #1
 144:	bx	lr

00000148 <grafo_adiciona>:
 148:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 14c:	add	fp, sp, #24
 150:	mov	r5, r0
 154:	mvn	r0, #0
 158:	cmp	r5, #0
 15c:	beq	178 <grafo_adiciona+0x30>
 160:	mov	r4, r1
 164:	ldr	r1, [r5]
 168:	cmp	r1, r4
 16c:	movge	r6, r2
 170:	cmpge	r1, r2
 174:	bge	17c <grafo_adiciona+0x34>
 178:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 17c:	ldr	r0, [r5, #4]
 180:	add	r7, r0, r4, lsl #3
 184:	ldr	r8, [r7, #4]!
 188:	cmp	r8, #0
 18c:	beq	1ac <grafo_adiciona+0x64>
 190:	mov	r0, r8
 194:	ldr	r1, [r0]
 198:	cmp	r1, r6
 19c:	beq	1f0 <grafo_adiciona+0xa8>
 1a0:	ldr	r0, [r0, #4]
 1a4:	cmp	r0, #0
 1a8:	bne	194 <grafo_adiciona+0x4c>
 1ac:	mov	r0, #8
 1b0:	bl	0 <malloc>
 1b4:	cmp	r0, #0
 1b8:	moveq	r0, #0
 1bc:	movne	r1, #0
 1c0:	strne	r6, [r0]
 1c4:	strne	r1, [r0, #4]
 1c8:	str	r0, [r7]
 1cc:	ldr	r0, [r5, #4]
 1d0:	add	r1, r0, r4, lsl #3
 1d4:	ldr	r1, [r1, #4]
 1d8:	str	r8, [r1, #4]
 1dc:	ldr	r1, [r0]
 1e0:	add	r1, r1, #1
 1e4:	str	r1, [r0]
 1e8:	mov	r0, #1
 1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 1f0:	mov	r0, #0
 1f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000001f8 <grafo_remove>:
 1f8:	push	{r4, sl, fp, lr}
 1fc:	add	fp, sp, #8
 200:	mov	r4, r0
 204:	mvn	r0, #0
 208:	cmp	r4, #0
 20c:	beq	220 <grafo_remove+0x28>
 210:	ldr	r3, [r4]
 214:	cmp	r3, r1
 218:	cmpge	r3, r2
 21c:	bge	224 <grafo_remove+0x2c>
 220:	pop	{r4, sl, fp, pc}
 224:	ldr	ip, [r4, #4]
 228:	mov	r0, #0
 22c:	add	lr, ip, r1, lsl #3
 230:	ldr	r1, [lr, #4]!
 234:	cmp	r1, #0
 238:	beq	220 <grafo_remove+0x28>
 23c:	ldr	r3, [r1]
 240:	cmp	r3, r2
 244:	bne	264 <grafo_remove+0x6c>
 248:	ldr	r0, [r1, #4]
 24c:	str	r0, [lr]
 250:	ldr	r0, [r4, #4]
 254:	ldr	r2, [r0]
 258:	sub	r2, r2, #1
 25c:	str	r2, [r0]
 260:	b	294 <grafo_remove+0x9c>
 264:	mov	r3, r1
 268:	ldr	r1, [r1, #4]
 26c:	cmp	r1, #0
 270:	beq	220 <grafo_remove+0x28>
 274:	ldr	r4, [r1]
 278:	cmp	r4, r2
 27c:	bne	264 <grafo_remove+0x6c>
 280:	ldr	r0, [r1, #4]
 284:	str	r0, [r3, #4]
 288:	ldr	r0, [ip]
 28c:	sub	r0, r0, #1
 290:	str	r0, [ip]
 294:	mov	r0, r1
 298:	bl	0 <free>
 29c:	mov	r0, #1
 2a0:	pop	{r4, sl, fp, pc}

000002a4 <v_sucessores>:
 2a4:	push	{r4, r5, r6, sl, fp, lr}
 2a8:	add	fp, sp, #16
 2ac:	mov	r4, #0
 2b0:	cmp	r0, #0
 2b4:	beq	314 <v_sucessores+0x70>
 2b8:	mov	r5, r1
 2bc:	cmp	r1, #0
 2c0:	bmi	314 <v_sucessores+0x70>
 2c4:	mov	r6, r0
 2c8:	ldr	r0, [r0]
 2cc:	cmp	r0, r5
 2d0:	ble	314 <v_sucessores+0x70>
 2d4:	bl	0 <vetor_novo>
 2d8:	mov	r4, r0
 2dc:	ldr	r0, [r6, #4]
 2e0:	add	r0, r0, r5, lsl #3
 2e4:	ldr	r6, [r0, #4]
 2e8:	cmp	r6, #0
 2ec:	beq	314 <v_sucessores+0x70>
 2f0:	mov	r5, #0
 2f4:	ldr	r1, [r6]
 2f8:	mov	r0, r4
 2fc:	mov	r2, r5
 300:	bl	0 <vetor_insere>
 304:	ldr	r6, [r6, #4]
 308:	add	r5, r5, #1
 30c:	cmp	r6, #0
 310:	bne	2f4 <v_sucessores+0x50>
 314:	mov	r0, r4
 318:	pop	{r4, r5, r6, sl, fp, pc}

0000031c <v_antecessores>:
 31c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 320:	add	fp, sp, #24
 324:	mov	r8, #0
 328:	cmp	r0, #0
 32c:	beq	3b4 <v_antecessores+0x98>
 330:	mov	r5, r1
 334:	cmp	r1, #0
 338:	bmi	3b4 <v_antecessores+0x98>
 33c:	mov	r6, r0
 340:	ldr	r0, [r0]
 344:	cmp	r0, r5
 348:	ble	3b4 <v_antecessores+0x98>
 34c:	bl	0 <vetor_novo>
 350:	mov	r8, r0
 354:	ldr	r0, [r6]
 358:	cmp	r0, #1
 35c:	blt	3b4 <v_antecessores+0x98>
 360:	mov	r7, #0
 364:	mov	r4, #0
 368:	b	378 <v_antecessores+0x5c>
 36c:	add	r4, r4, #1
 370:	cmp	r4, r0
 374:	bge	3b4 <v_antecessores+0x98>
 378:	ldr	r1, [r6, #4]
 37c:	add	r1, r1, r4, lsl #3
 380:	ldr	r1, [r1, #4]
 384:	cmp	r1, #0
 388:	beq	36c <v_antecessores+0x50>
 38c:	ldr	r2, [r1]
 390:	cmp	r2, r5
 394:	bne	380 <v_antecessores+0x64>
 398:	mov	r0, r8
 39c:	mov	r1, r4
 3a0:	mov	r2, r7
 3a4:	bl	0 <vetor_insere>
 3a8:	ldr	r0, [r6]
 3ac:	add	r7, r7, #1
 3b0:	b	36c <v_antecessores+0x50>
 3b4:	mov	r0, r8
 3b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000003bc <v_grau>:
 3bc:	cmp	r1, #0
 3c0:	mvnmi	r0, #0
 3c4:	bxmi	lr
 3c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 3cc:	add	fp, sp, #24
 3d0:	mov	r7, r0
 3d4:	cmp	r0, #0
 3d8:	beq	4b0 <v_grau+0xf4>
 3dc:	ldr	r0, [r7]
 3e0:	mov	r6, r1
 3e4:	mov	r9, #0
 3e8:	mov	r8, #0
 3ec:	cmp	r0, r1
 3f0:	ble	45c <v_grau+0xa0>
 3f4:	bl	0 <vetor_novo>
 3f8:	mov	r8, r0
 3fc:	ldr	r0, [r7]
 400:	cmp	r0, #1
 404:	blt	45c <v_grau+0xa0>
 408:	mov	r5, #0
 40c:	mov	r4, #0
 410:	b	420 <v_grau+0x64>
 414:	add	r4, r4, #1
 418:	cmp	r4, r0
 41c:	bge	45c <v_grau+0xa0>
 420:	ldr	r1, [r7, #4]
 424:	add	r1, r1, r4, lsl #3
 428:	ldr	r1, [r1, #4]
 42c:	cmp	r1, #0
 430:	beq	414 <v_grau+0x58>
 434:	ldr	r2, [r1]
 438:	cmp	r2, r6
 43c:	bne	428 <v_grau+0x6c>
 440:	mov	r0, r8
 444:	mov	r1, r4
 448:	mov	r2, r5
 44c:	bl	0 <vetor_insere>
 450:	ldr	r0, [r7]
 454:	add	r5, r5, #1
 458:	b	414 <v_grau+0x58>
 45c:	cmp	r6, #0
 460:	bmi	4b8 <v_grau+0xfc>
 464:	cmp	r0, r6
 468:	ble	4b8 <v_grau+0xfc>
 46c:	bl	0 <vetor_novo>
 470:	mov	r9, r0
 474:	ldr	r0, [r7, #4]
 478:	add	r0, r0, r6, lsl #3
 47c:	ldr	r5, [r0, #4]
 480:	cmp	r5, #0
 484:	beq	4b8 <v_grau+0xfc>
 488:	mov	r4, #0
 48c:	ldr	r1, [r5]
 490:	mov	r0, r9
 494:	mov	r2, r4
 498:	bl	0 <vetor_insere>
 49c:	ldr	r5, [r5, #4]
 4a0:	add	r4, r4, #1
 4a4:	cmp	r5, #0
 4a8:	bne	48c <v_grau+0xd0>
 4ac:	b	4b8 <v_grau+0xfc>
 4b0:	mov	r8, #0
 4b4:	mov	r9, #0
 4b8:	mov	r0, r8
 4bc:	bl	0 <vetor_tamanho>
 4c0:	mov	r4, r0
 4c4:	mov	r0, r9
 4c8:	bl	0 <vetor_tamanho>
 4cc:	mov	r5, r0
 4d0:	mov	r0, r8
 4d4:	bl	0 <vetor_apaga>
 4d8:	mov	r0, r9
 4dc:	bl	0 <vetor_apaga>
 4e0:	add	r0, r5, r4
 4e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000004e8 <v_celebridade>:
 4e8:	push	{r4, sl, fp, lr}
 4ec:	add	fp, sp, #8
 4f0:	cmp	r0, #0
 4f4:	beq	514 <v_celebridade+0x2c>
 4f8:	ldr	r3, [r0, #4]
 4fc:	mov	r2, #0
 500:	ldr	ip, [r3, r1, lsl #3]
 504:	cmp	ip, #0
 508:	beq	520 <v_celebridade+0x38>
 50c:	mov	r0, r2
 510:	pop	{r4, sl, fp, pc}
 514:	mvn	r2, #0
 518:	mov	r0, r2
 51c:	pop	{r4, sl, fp, pc}
 520:	ldr	lr, [r0]
 524:	mov	ip, #0
 528:	cmp	lr, #1
 52c:	blt	568 <v_celebridade+0x80>
 530:	mov	r2, #0
 534:	b	544 <v_celebridade+0x5c>
 538:	add	r2, r2, #1
 53c:	cmp	r2, lr
 540:	bge	568 <v_celebridade+0x80>
 544:	add	r0, r3, r2, lsl #3
 548:	ldr	r0, [r0, #4]
 54c:	cmp	r0, #0
 550:	beq	538 <v_celebridade+0x50>
 554:	ldr	r4, [r0]
 558:	cmp	r4, r1
 55c:	bne	548 <v_celebridade+0x60>
 560:	add	ip, ip, #1
 564:	b	538 <v_celebridade+0x50>
 568:	sub	r0, ip, lr
 56c:	add	r0, r0, #1
 570:	clz	r0, r0
 574:	lsr	r2, r0, #5
 578:	mov	r0, r2
 57c:	pop	{r4, sl, fp, pc}
