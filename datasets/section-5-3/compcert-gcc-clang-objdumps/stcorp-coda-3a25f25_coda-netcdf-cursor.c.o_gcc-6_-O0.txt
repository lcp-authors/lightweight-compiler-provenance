
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #96	; 0x60
       c:	str	r0, [fp, #-80]	; 0xffffffb0
      10:	strd	r2, [fp, #-92]	; 0xffffffa4
      14:	ldr	r3, [fp, #-80]	; 0xffffffb0
      18:	ldr	r3, [r3, #48]	; 0x30
      1c:	cmp	r3, #0
      20:	beq	fc <read_bytes+0xfc>
      24:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      28:	ldrd	r2, [fp, #4]
      2c:	adds	r2, r2, r0
      30:	adc	r3, r3, r1
      34:	ldr	r1, [fp, #-80]	; 0xffffffb0
      38:	ldrd	r0, [r1, #40]	; 0x28
      3c:	cmp	r3, r1
      40:	cmpeq	r2, r0
      44:	bls	d8 <read_bytes+0xd8>
      48:	ldr	r3, [fp, #-80]	; 0xffffffb0
      4c:	ldr	r3, [r3, #16]
      50:	cmp	r3, #0
      54:	beq	68 <read_bytes+0x68>
      58:	ldr	r3, [fp, #-80]	; 0xffffffb0
      5c:	ldr	r3, [r3, #16]
      60:	cmp	r3, #1
      64:	bne	7c <read_bytes+0x7c>
      68:	ldr	r1, [pc, #348]	; 1cc <read_bytes+0x1cc>
      6c:	mvn	r0, #300	; 0x12c
      70:	bl	0 <coda_set_error>
      74:	mvn	r3, #0
      78:	b	1c0 <read_bytes+0x1c0>
      7c:	sub	r3, fp, #28
      80:	mov	r2, r3
      84:	ldrd	r0, [fp, #4]
      88:	bl	0 <coda_str64>
      8c:	sub	r3, fp, #52	; 0x34
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      98:	bl	0 <coda_str64>
      9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
      a0:	ldrd	r0, [r3, #40]	; 0x28
      a4:	sub	r3, fp, #76	; 0x4c
      a8:	mov	r2, r3
      ac:	bl	0 <coda_str64>
      b0:	sub	r1, fp, #52	; 0x34
      b4:	sub	r2, fp, #28
      b8:	sub	r3, fp, #76	; 0x4c
      bc:	str	r3, [sp]
      c0:	mov	r3, r1
      c4:	ldr	r1, [pc, #260]	; 1d0 <read_bytes+0x1d0>
      c8:	mvn	r0, #300	; 0x12c
      cc:	bl	0 <coda_set_error>
      d0:	mvn	r3, #0
      d4:	b	1c0 <read_bytes+0x1c0>
      d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
      dc:	ldr	r2, [r3, #48]	; 0x30
      e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
      e4:	add	r3, r2, r3
      e8:	ldr	r2, [fp, #4]
      ec:	mov	r1, r3
      f0:	ldr	r0, [fp, #12]
      f4:	bl	0 <memcpy>
      f8:	b	1bc <read_bytes+0x1bc>
      fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
     100:	ldr	r3, [r3, #16]
     104:	cmp	r3, #0
     108:	beq	130 <read_bytes+0x130>
     10c:	ldr	r3, [fp, #-80]	; 0xffffffb0
     110:	ldr	r3, [r3, #16]
     114:	cmp	r3, #1
     118:	beq	130 <read_bytes+0x130>
     11c:	ldr	r3, [pc, #176]	; 1d4 <read_bytes+0x1d4>
     120:	mov	r2, #83	; 0x53
     124:	ldr	r1, [pc, #172]	; 1d8 <read_bytes+0x1d8>
     128:	ldr	r0, [pc, #172]	; 1dc <read_bytes+0x1dc>
     12c:	bl	0 <__assert_fail>
     130:	ldrd	r0, [fp, #-92]	; 0xffffffa4
     134:	ldrd	r2, [fp, #4]
     138:	adds	r2, r2, r0
     13c:	adc	r3, r3, r1
     140:	ldr	r1, [fp, #-80]	; 0xffffffb0
     144:	ldrd	r0, [r1, #8]
     148:	cmp	r3, r1
     14c:	cmpeq	r2, r0
     150:	bls	168 <read_bytes+0x168>
     154:	ldr	r1, [pc, #112]	; 1cc <read_bytes+0x1cc>
     158:	mvn	r0, #300	; 0x12c
     15c:	bl	0 <coda_set_error>
     160:	mvn	r3, #0
     164:	b	1c0 <read_bytes+0x1c0>
     168:	ldr	r3, [fp, #-80]	; 0xffffffb0
     16c:	ldr	r0, [r3, #56]	; 0x38
     170:	ldr	r2, [fp, #4]
     174:	ldr	r3, [fp, #-92]	; 0xffffffa4
     178:	ldr	r1, [fp, #12]
     17c:	bl	0 <pread>
     180:	mov	r3, r0
     184:	cmp	r3, #0
     188:	bge	1bc <read_bytes+0x1bc>
     18c:	bl	0 <__errno_location>
     190:	mov	r3, r0
     194:	ldr	r3, [r3]
     198:	mov	r0, r3
     19c:	bl	0 <strerror>
     1a0:	mov	r3, r0
     1a4:	mov	r2, r3
     1a8:	ldr	r1, [pc, #48]	; 1e0 <read_bytes+0x1e0>
     1ac:	mvn	r0, #21
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r3, #0
     1b8:	b	1c0 <read_bytes+0x1c0>
     1bc:	mov	r3, #0
     1c0:	mov	r0, r3
     1c4:	sub	sp, fp, #4
     1c8:	pop	{fp, pc}
     1cc:	.word	0x00000000
     1d0:	.word	0x0000002c
     1d4:	.word	0x000001f8
     1d8:	.word	0x00000068
     1dc:	.word	0x000000b8
     1e0:	.word	0x00000108

000001e4 <swap2>:
     1e4:	push	{fp}		; (str fp, [sp, #-4]!)
     1e8:	add	fp, sp, #0
     1ec:	sub	sp, sp, #20
     1f0:	str	r0, [fp, #-16]
     1f4:	ldr	r3, [fp, #-16]
     1f8:	str	r3, [fp, #-8]
     1fc:	ldr	r3, [fp, #-8]
     200:	ldrb	r2, [r3]
     204:	ldr	r3, [fp, #-8]
     208:	add	r3, r3, #1
     20c:	ldrb	r3, [r3]
     210:	eor	r3, r3, r2
     214:	uxtb	r2, r3
     218:	ldr	r3, [fp, #-8]
     21c:	strb	r2, [r3]
     220:	ldr	r3, [fp, #-8]
     224:	add	r3, r3, #1
     228:	ldr	r2, [fp, #-8]
     22c:	ldrb	r1, [r2]
     230:	ldr	r2, [fp, #-8]
     234:	add	r2, r2, #1
     238:	ldrb	r2, [r2]
     23c:	eor	r2, r2, r1
     240:	uxtb	r2, r2
     244:	strb	r2, [r3]
     248:	ldr	r3, [fp, #-8]
     24c:	ldrb	r2, [r3]
     250:	ldr	r3, [fp, #-8]
     254:	add	r3, r3, #1
     258:	ldrb	r3, [r3]
     25c:	eor	r3, r3, r2
     260:	uxtb	r2, r3
     264:	ldr	r3, [fp, #-8]
     268:	strb	r2, [r3]
     26c:	nop			; (mov r0, r0)
     270:	add	sp, fp, #0
     274:	pop	{fp}		; (ldr fp, [sp], #4)
     278:	bx	lr

0000027c <swap4>:
     27c:	push	{fp}		; (str fp, [sp, #-4]!)
     280:	add	fp, sp, #0
     284:	sub	sp, sp, #20
     288:	str	r0, [fp, #-16]
     28c:	ldr	r3, [fp, #-16]
     290:	str	r3, [fp, #-8]
     294:	ldr	r3, [fp, #-8]
     298:	ldrb	r2, [r3]
     29c:	ldr	r3, [fp, #-8]
     2a0:	add	r3, r3, #3
     2a4:	ldrb	r3, [r3]
     2a8:	eor	r3, r3, r2
     2ac:	uxtb	r2, r3
     2b0:	ldr	r3, [fp, #-8]
     2b4:	strb	r2, [r3]
     2b8:	ldr	r3, [fp, #-8]
     2bc:	add	r3, r3, #3
     2c0:	ldr	r2, [fp, #-8]
     2c4:	ldrb	r1, [r2]
     2c8:	ldr	r2, [fp, #-8]
     2cc:	add	r2, r2, #3
     2d0:	ldrb	r2, [r2]
     2d4:	eor	r2, r2, r1
     2d8:	uxtb	r2, r2
     2dc:	strb	r2, [r3]
     2e0:	ldr	r3, [fp, #-8]
     2e4:	ldrb	r2, [r3]
     2e8:	ldr	r3, [fp, #-8]
     2ec:	add	r3, r3, #3
     2f0:	ldrb	r3, [r3]
     2f4:	eor	r3, r3, r2
     2f8:	uxtb	r2, r3
     2fc:	ldr	r3, [fp, #-8]
     300:	strb	r2, [r3]
     304:	ldr	r3, [fp, #-8]
     308:	add	r3, r3, #1
     30c:	ldr	r2, [fp, #-8]
     310:	add	r2, r2, #1
     314:	ldrb	r1, [r2]
     318:	ldr	r2, [fp, #-8]
     31c:	add	r2, r2, #2
     320:	ldrb	r2, [r2]
     324:	eor	r2, r2, r1
     328:	uxtb	r2, r2
     32c:	strb	r2, [r3]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #2
     338:	ldr	r2, [fp, #-8]
     33c:	add	r2, r2, #1
     340:	ldrb	r1, [r2]
     344:	ldr	r2, [fp, #-8]
     348:	add	r2, r2, #2
     34c:	ldrb	r2, [r2]
     350:	eor	r2, r2, r1
     354:	uxtb	r2, r2
     358:	strb	r2, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #1
     364:	ldr	r2, [fp, #-8]
     368:	add	r2, r2, #1
     36c:	ldrb	r1, [r2]
     370:	ldr	r2, [fp, #-8]
     374:	add	r2, r2, #2
     378:	ldrb	r2, [r2]
     37c:	eor	r2, r2, r1
     380:	uxtb	r2, r2
     384:	strb	r2, [r3]
     388:	nop			; (mov r0, r0)
     38c:	add	sp, fp, #0
     390:	pop	{fp}		; (ldr fp, [sp], #4)
     394:	bx	lr

00000398 <swap8>:
     398:	push	{fp}		; (str fp, [sp, #-4]!)
     39c:	add	fp, sp, #0
     3a0:	sub	sp, sp, #20
     3a4:	str	r0, [fp, #-16]
     3a8:	ldr	r3, [fp, #-16]
     3ac:	str	r3, [fp, #-8]
     3b0:	ldr	r3, [fp, #-8]
     3b4:	ldrb	r2, [r3]
     3b8:	ldr	r3, [fp, #-8]
     3bc:	add	r3, r3, #7
     3c0:	ldrb	r3, [r3]
     3c4:	eor	r3, r3, r2
     3c8:	uxtb	r2, r3
     3cc:	ldr	r3, [fp, #-8]
     3d0:	strb	r2, [r3]
     3d4:	ldr	r3, [fp, #-8]
     3d8:	add	r3, r3, #7
     3dc:	ldr	r2, [fp, #-8]
     3e0:	ldrb	r1, [r2]
     3e4:	ldr	r2, [fp, #-8]
     3e8:	add	r2, r2, #7
     3ec:	ldrb	r2, [r2]
     3f0:	eor	r2, r2, r1
     3f4:	uxtb	r2, r2
     3f8:	strb	r2, [r3]
     3fc:	ldr	r3, [fp, #-8]
     400:	ldrb	r2, [r3]
     404:	ldr	r3, [fp, #-8]
     408:	add	r3, r3, #7
     40c:	ldrb	r3, [r3]
     410:	eor	r3, r3, r2
     414:	uxtb	r2, r3
     418:	ldr	r3, [fp, #-8]
     41c:	strb	r2, [r3]
     420:	ldr	r3, [fp, #-8]
     424:	add	r3, r3, #1
     428:	ldr	r2, [fp, #-8]
     42c:	add	r2, r2, #1
     430:	ldrb	r1, [r2]
     434:	ldr	r2, [fp, #-8]
     438:	add	r2, r2, #6
     43c:	ldrb	r2, [r2]
     440:	eor	r2, r2, r1
     444:	uxtb	r2, r2
     448:	strb	r2, [r3]
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #6
     454:	ldr	r2, [fp, #-8]
     458:	add	r2, r2, #1
     45c:	ldrb	r1, [r2]
     460:	ldr	r2, [fp, #-8]
     464:	add	r2, r2, #6
     468:	ldrb	r2, [r2]
     46c:	eor	r2, r2, r1
     470:	uxtb	r2, r2
     474:	strb	r2, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #1
     480:	ldr	r2, [fp, #-8]
     484:	add	r2, r2, #1
     488:	ldrb	r1, [r2]
     48c:	ldr	r2, [fp, #-8]
     490:	add	r2, r2, #6
     494:	ldrb	r2, [r2]
     498:	eor	r2, r2, r1
     49c:	uxtb	r2, r2
     4a0:	strb	r2, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #2
     4ac:	ldr	r2, [fp, #-8]
     4b0:	add	r2, r2, #2
     4b4:	ldrb	r1, [r2]
     4b8:	ldr	r2, [fp, #-8]
     4bc:	add	r2, r2, #5
     4c0:	ldrb	r2, [r2]
     4c4:	eor	r2, r2, r1
     4c8:	uxtb	r2, r2
     4cc:	strb	r2, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #5
     4d8:	ldr	r2, [fp, #-8]
     4dc:	add	r2, r2, #2
     4e0:	ldrb	r1, [r2]
     4e4:	ldr	r2, [fp, #-8]
     4e8:	add	r2, r2, #5
     4ec:	ldrb	r2, [r2]
     4f0:	eor	r2, r2, r1
     4f4:	uxtb	r2, r2
     4f8:	strb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #2
     504:	ldr	r2, [fp, #-8]
     508:	add	r2, r2, #2
     50c:	ldrb	r1, [r2]
     510:	ldr	r2, [fp, #-8]
     514:	add	r2, r2, #5
     518:	ldrb	r2, [r2]
     51c:	eor	r2, r2, r1
     520:	uxtb	r2, r2
     524:	strb	r2, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #3
     530:	ldr	r2, [fp, #-8]
     534:	add	r2, r2, #3
     538:	ldrb	r1, [r2]
     53c:	ldr	r2, [fp, #-8]
     540:	add	r2, r2, #4
     544:	ldrb	r2, [r2]
     548:	eor	r2, r2, r1
     54c:	uxtb	r2, r2
     550:	strb	r2, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #4
     55c:	ldr	r2, [fp, #-8]
     560:	add	r2, r2, #3
     564:	ldrb	r1, [r2]
     568:	ldr	r2, [fp, #-8]
     56c:	add	r2, r2, #4
     570:	ldrb	r2, [r2]
     574:	eor	r2, r2, r1
     578:	uxtb	r2, r2
     57c:	strb	r2, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #3
     588:	ldr	r2, [fp, #-8]
     58c:	add	r2, r2, #3
     590:	ldrb	r1, [r2]
     594:	ldr	r2, [fp, #-8]
     598:	add	r2, r2, #4
     59c:	ldrb	r2, [r2]
     5a0:	eor	r2, r2, r1
     5a4:	uxtb	r2, r2
     5a8:	strb	r2, [r3]
     5ac:	nop			; (mov r0, r0)
     5b0:	add	sp, fp, #0
     5b4:	pop	{fp}		; (ldr fp, [sp], #4)
     5b8:	bx	lr

000005bc <coda_netcdf_cursor_set_product>:
     5bc:	push	{fp}		; (str fp, [sp, #-4]!)
     5c0:	add	fp, sp, #0
     5c4:	sub	sp, sp, #12
     5c8:	str	r0, [fp, #-8]
     5cc:	str	r1, [fp, #-12]
     5d0:	ldr	r3, [fp, #-8]
     5d4:	ldr	r2, [fp, #-12]
     5d8:	str	r2, [r3]
     5dc:	ldr	r3, [fp, #-8]
     5e0:	mov	r2, #1
     5e4:	str	r2, [r3, #4]
     5e8:	ldr	r3, [fp, #-12]
     5ec:	ldr	r2, [r3, #20]
     5f0:	ldr	r3, [fp, #-8]
     5f4:	str	r2, [r3, #8]
     5f8:	ldr	r3, [fp, #-8]
     5fc:	mvn	r2, #0
     600:	str	r2, [r3, #12]
     604:	ldr	r1, [fp, #-8]
     608:	mvn	r2, #0
     60c:	mvn	r3, #0
     610:	strd	r2, [r1, #16]
     614:	mov	r3, #0
     618:	mov	r0, r3
     61c:	add	sp, fp, #0
     620:	pop	{fp}		; (ldr fp, [sp], #4)
     624:	bx	lr

00000628 <coda_netcdf_cursor_goto_array_element>:
     628:	push	{fp, lr}
     62c:	add	fp, sp, #4
     630:	sub	sp, sp, #64	; 0x40
     634:	str	r0, [fp, #-56]	; 0xffffffc8
     638:	str	r1, [fp, #-60]	; 0xffffffc4
     63c:	str	r2, [fp, #-64]	; 0xffffffc0
     640:	ldr	r3, [fp, #-56]	; 0xffffffc8
     644:	ldr	r3, [r3, #4]
     648:	sub	r3, r3, #1
     64c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     650:	lsl	r3, r3, #4
     654:	add	r3, r2, r3
     658:	ldr	r3, [r3, #8]
     65c:	ldr	r3, [r3, #4]
     660:	sub	r2, fp, #52	; 0x34
     664:	sub	r1, fp, #20
     668:	mov	r0, r3
     66c:	bl	0 <coda_type_get_array_dim>
     670:	mov	r3, r0
     674:	cmp	r3, #0
     678:	beq	684 <coda_netcdf_cursor_goto_array_element+0x5c>
     67c:	mvn	r3, #0
     680:	b	858 <coda_netcdf_cursor_goto_array_element+0x230>
     684:	ldr	r3, [fp, #-20]	; 0xffffffec
     688:	ldr	r2, [fp, #-60]	; 0xffffffc4
     68c:	cmp	r2, r3
     690:	beq	6b0 <coda_netcdf_cursor_goto_array_element+0x88>
     694:	ldr	r3, [fp, #-20]	; 0xffffffec
     698:	ldr	r2, [fp, #-60]	; 0xffffffc4
     69c:	ldr	r1, [pc, #448]	; 864 <coda_netcdf_cursor_goto_array_element+0x23c>
     6a0:	mvn	r0, #105	; 0x69
     6a4:	bl	0 <coda_set_error>
     6a8:	mvn	r3, #0
     6ac:	b	858 <coda_netcdf_cursor_goto_array_element+0x230>
     6b0:	mov	r3, #0
     6b4:	str	r3, [fp, #-8]
     6b8:	mov	r3, #0
     6bc:	str	r3, [fp, #-12]
     6c0:	b	7a4 <coda_netcdf_cursor_goto_array_element+0x17c>
     6c4:	ldr	r3, [fp, #-12]
     6c8:	lsl	r3, r3, #2
     6cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
     6d0:	add	r3, r2, r3
     6d4:	ldr	r3, [r3]
     6d8:	cmp	r3, #0
     6dc:	blt	710 <coda_netcdf_cursor_goto_array_element+0xe8>
     6e0:	ldr	r3, [fp, #-12]
     6e4:	lsl	r3, r3, #2
     6e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
     6ec:	add	r3, r2, r3
     6f0:	ldr	r2, [r3]
     6f4:	ldr	r3, [fp, #-12]
     6f8:	lsl	r3, r3, #2
     6fc:	sub	r1, fp, #4
     700:	add	r3, r1, r3
     704:	ldr	r3, [r3, #-48]	; 0xffffffd0
     708:	cmp	r2, r3
     70c:	blt	74c <coda_netcdf_cursor_goto_array_element+0x124>
     710:	ldr	r3, [fp, #-12]
     714:	lsl	r3, r3, #2
     718:	ldr	r2, [fp, #-64]	; 0xffffffc0
     71c:	add	r3, r2, r3
     720:	ldr	r2, [r3]
     724:	ldr	r3, [fp, #-12]
     728:	lsl	r3, r3, #2
     72c:	sub	r1, fp, #4
     730:	add	r3, r1, r3
     734:	ldr	r3, [r3, #-48]	; 0xffffffd0
     738:	ldr	r1, [pc, #296]	; 868 <coda_netcdf_cursor_goto_array_element+0x240>
     73c:	mvn	r0, #106	; 0x6a
     740:	bl	0 <coda_set_error>
     744:	mvn	r3, #0
     748:	b	858 <coda_netcdf_cursor_goto_array_element+0x230>
     74c:	ldr	r3, [fp, #-12]
     750:	cmp	r3, #0
     754:	ble	778 <coda_netcdf_cursor_goto_array_element+0x150>
     758:	ldr	r3, [fp, #-12]
     75c:	lsl	r3, r3, #2
     760:	sub	r2, fp, #4
     764:	add	r3, r2, r3
     768:	ldr	r2, [r3, #-48]	; 0xffffffd0
     76c:	ldr	r3, [fp, #-8]
     770:	mul	r3, r2, r3
     774:	str	r3, [fp, #-8]
     778:	ldr	r3, [fp, #-12]
     77c:	lsl	r3, r3, #2
     780:	ldr	r2, [fp, #-64]	; 0xffffffc0
     784:	add	r3, r2, r3
     788:	ldr	r3, [r3]
     78c:	ldr	r2, [fp, #-8]
     790:	add	r3, r2, r3
     794:	str	r3, [fp, #-8]
     798:	ldr	r3, [fp, #-12]
     79c:	add	r3, r3, #1
     7a0:	str	r3, [fp, #-12]
     7a4:	ldr	r3, [fp, #-20]	; 0xffffffec
     7a8:	ldr	r2, [fp, #-12]
     7ac:	cmp	r2, r3
     7b0:	blt	6c4 <coda_netcdf_cursor_goto_array_element+0x9c>
     7b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7b8:	ldr	r3, [r3, #4]
     7bc:	sub	r3, r3, #1
     7c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7c4:	lsl	r3, r3, #4
     7c8:	add	r3, r2, r3
     7cc:	ldr	r3, [r3, #8]
     7d0:	ldr	r3, [r3, #12]
     7d4:	str	r3, [fp, #-16]
     7d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7dc:	ldr	r3, [r3, #4]
     7e0:	add	r2, r3, #1
     7e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7e8:	str	r2, [r3, #4]
     7ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7f0:	ldr	r3, [r3, #4]
     7f4:	sub	r3, r3, #1
     7f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7fc:	lsl	r3, r3, #4
     800:	add	r3, r2, r3
     804:	ldr	r2, [fp, #-16]
     808:	str	r2, [r3, #8]
     80c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     810:	ldr	r3, [r3, #4]
     814:	sub	r3, r3, #1
     818:	ldr	r2, [fp, #-56]	; 0xffffffc8
     81c:	lsl	r3, r3, #4
     820:	add	r3, r2, r3
     824:	ldr	r2, [fp, #-8]
     828:	str	r2, [r3, #12]
     82c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     830:	ldr	r3, [r3, #4]
     834:	sub	r3, r3, #1
     838:	ldr	r2, [fp, #-56]	; 0xffffffc8
     83c:	add	r3, r3, #1
     840:	lsl	r3, r3, #4
     844:	add	r1, r2, r3
     848:	mvn	r2, #0
     84c:	mvn	r3, #0
     850:	strd	r2, [r1]
     854:	mov	r3, #0
     858:	mov	r0, r3
     85c:	sub	sp, fp, #4
     860:	pop	{fp, pc}
     864:	.word	0x00000128
     868:	.word	0x00000170

0000086c <coda_netcdf_cursor_goto_array_element_by_index>:
     86c:	push	{fp, lr}
     870:	add	fp, sp, #4
     874:	sub	sp, sp, #16
     878:	str	r0, [fp, #-16]
     87c:	str	r1, [fp, #-20]	; 0xffffffec
     880:	ldr	r3, [pc, #292]	; 9ac <coda_netcdf_cursor_goto_array_element_by_index+0x140>
     884:	ldr	r3, [pc, r3]
     888:	bl	0 <__aeabi_read_tp>
     88c:	mov	r2, r0
     890:	ldr	r3, [r2, r3]
     894:	cmp	r3, #0
     898:	beq	8fc <coda_netcdf_cursor_goto_array_element_by_index+0x90>
     89c:	ldr	r3, [fp, #-16]
     8a0:	ldr	r3, [r3, #4]
     8a4:	sub	r3, r3, #1
     8a8:	ldr	r2, [fp, #-16]
     8ac:	lsl	r3, r3, #4
     8b0:	add	r3, r2, r3
     8b4:	ldr	r3, [r3, #8]
     8b8:	ldr	r3, [r3, #4]
     8bc:	ldr	r3, [r3, #44]	; 0x2c
     8c0:	str	r3, [fp, #-8]
     8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     8c8:	cmp	r3, #0
     8cc:	blt	8e0 <coda_netcdf_cursor_goto_array_element_by_index+0x74>
     8d0:	ldr	r2, [fp, #-20]	; 0xffffffec
     8d4:	ldr	r3, [fp, #-8]
     8d8:	cmp	r2, r3
     8dc:	blt	8fc <coda_netcdf_cursor_goto_array_element_by_index+0x90>
     8e0:	ldr	r3, [fp, #-8]
     8e4:	ldr	r2, [fp, #-20]	; 0xffffffec
     8e8:	ldr	r1, [pc, #192]	; 9b0 <coda_netcdf_cursor_goto_array_element_by_index+0x144>
     8ec:	mvn	r0, #106	; 0x6a
     8f0:	bl	0 <coda_set_error>
     8f4:	mvn	r3, #0
     8f8:	b	9a0 <coda_netcdf_cursor_goto_array_element_by_index+0x134>
     8fc:	ldr	r3, [fp, #-16]
     900:	ldr	r3, [r3, #4]
     904:	sub	r3, r3, #1
     908:	ldr	r2, [fp, #-16]
     90c:	lsl	r3, r3, #4
     910:	add	r3, r2, r3
     914:	ldr	r3, [r3, #8]
     918:	ldr	r3, [r3, #12]
     91c:	str	r3, [fp, #-12]
     920:	ldr	r3, [fp, #-16]
     924:	ldr	r3, [r3, #4]
     928:	add	r2, r3, #1
     92c:	ldr	r3, [fp, #-16]
     930:	str	r2, [r3, #4]
     934:	ldr	r3, [fp, #-16]
     938:	ldr	r3, [r3, #4]
     93c:	sub	r3, r3, #1
     940:	ldr	r2, [fp, #-16]
     944:	lsl	r3, r3, #4
     948:	add	r3, r2, r3
     94c:	ldr	r2, [fp, #-12]
     950:	str	r2, [r3, #8]
     954:	ldr	r3, [fp, #-16]
     958:	ldr	r3, [r3, #4]
     95c:	sub	r3, r3, #1
     960:	ldr	r2, [fp, #-16]
     964:	lsl	r3, r3, #4
     968:	add	r3, r2, r3
     96c:	ldr	r2, [fp, #-20]	; 0xffffffec
     970:	str	r2, [r3, #12]
     974:	ldr	r3, [fp, #-16]
     978:	ldr	r3, [r3, #4]
     97c:	sub	r3, r3, #1
     980:	ldr	r2, [fp, #-16]
     984:	add	r3, r3, #1
     988:	lsl	r3, r3, #4
     98c:	add	r1, r2, r3
     990:	mvn	r2, #0
     994:	mvn	r3, #0
     998:	strd	r2, [r1]
     99c:	mov	r3, #0
     9a0:	mov	r0, r3
     9a4:	sub	sp, fp, #4
     9a8:	pop	{fp, pc}
     9ac:	.word	0x00000120
     9b0:	.word	0x00000170

000009b4 <coda_netcdf_cursor_goto_next_array_element>:
     9b4:	push	{fp, lr}
     9b8:	add	fp, sp, #4
     9bc:	sub	sp, sp, #16
     9c0:	str	r0, [fp, #-16]
     9c4:	ldr	r3, [pc, #216]	; aa4 <coda_netcdf_cursor_goto_next_array_element+0xf0>
     9c8:	ldr	r3, [pc, r3]
     9cc:	bl	0 <__aeabi_read_tp>
     9d0:	mov	r2, r0
     9d4:	ldr	r3, [r2, r3]
     9d8:	cmp	r3, #0
     9dc:	beq	a64 <coda_netcdf_cursor_goto_next_array_element+0xb0>
     9e0:	ldr	r3, [fp, #-16]
     9e4:	ldr	r3, [r3, #4]
     9e8:	sub	r3, r3, #1
     9ec:	ldr	r2, [fp, #-16]
     9f0:	lsl	r3, r3, #4
     9f4:	add	r3, r2, r3
     9f8:	ldr	r3, [r3, #12]
     9fc:	add	r3, r3, #1
     a00:	str	r3, [fp, #-8]
     a04:	ldr	r3, [fp, #-16]
     a08:	ldr	r3, [r3, #4]
     a0c:	sub	r3, r3, #2
     a10:	ldr	r2, [fp, #-16]
     a14:	lsl	r3, r3, #4
     a18:	add	r3, r2, r3
     a1c:	ldr	r3, [r3, #8]
     a20:	ldr	r3, [r3, #4]
     a24:	ldr	r3, [r3, #44]	; 0x2c
     a28:	str	r3, [fp, #-12]
     a2c:	ldr	r3, [fp, #-8]
     a30:	cmp	r3, #0
     a34:	blt	a48 <coda_netcdf_cursor_goto_next_array_element+0x94>
     a38:	ldr	r2, [fp, #-8]
     a3c:	ldr	r3, [fp, #-12]
     a40:	cmp	r2, r3
     a44:	blt	a64 <coda_netcdf_cursor_goto_next_array_element+0xb0>
     a48:	ldr	r3, [fp, #-12]
     a4c:	ldr	r2, [fp, #-8]
     a50:	ldr	r1, [pc, #80]	; aa8 <coda_netcdf_cursor_goto_next_array_element+0xf4>
     a54:	mvn	r0, #106	; 0x6a
     a58:	bl	0 <coda_set_error>
     a5c:	mvn	r3, #0
     a60:	b	a98 <coda_netcdf_cursor_goto_next_array_element+0xe4>
     a64:	ldr	r3, [fp, #-16]
     a68:	ldr	r3, [r3, #4]
     a6c:	sub	r2, r3, #1
     a70:	ldr	r1, [fp, #-16]
     a74:	lsl	r3, r2, #4
     a78:	add	r3, r1, r3
     a7c:	ldr	r3, [r3, #12]
     a80:	add	r1, r3, #1
     a84:	ldr	r0, [fp, #-16]
     a88:	lsl	r3, r2, #4
     a8c:	add	r3, r0, r3
     a90:	str	r1, [r3, #12]
     a94:	mov	r3, #0
     a98:	mov	r0, r3
     a9c:	sub	sp, fp, #4
     aa0:	pop	{fp, pc}
     aa4:	.word	0x000000d4
     aa8:	.word	0x00000170

00000aac <coda_netcdf_cursor_goto_attributes>:
     aac:	push	{r4, fp, lr}
     ab0:	add	fp, sp, #8
     ab4:	sub	sp, sp, #20
     ab8:	str	r0, [fp, #-24]	; 0xffffffe8
     abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ac0:	ldr	r3, [r3, #4]
     ac4:	sub	r3, r3, #1
     ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     acc:	lsl	r3, r3, #4
     ad0:	add	r3, r2, r3
     ad4:	ldr	r3, [r3, #8]
     ad8:	str	r3, [fp, #-16]
     adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ae0:	ldr	r3, [r3, #4]
     ae4:	add	r2, r3, #1
     ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     aec:	str	r2, [r3, #4]
     af0:	ldr	r3, [fp, #-16]
     af4:	ldr	r3, [r3, #8]
     af8:	cmp	r3, #0
     afc:	beq	b28 <coda_netcdf_cursor_goto_attributes+0x7c>
     b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b04:	ldr	r3, [r3, #4]
     b08:	sub	r3, r3, #1
     b0c:	ldr	r2, [fp, #-16]
     b10:	ldr	r2, [r2, #8]
     b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
     b18:	lsl	r3, r3, #4
     b1c:	add	r3, r1, r3
     b20:	str	r2, [r3, #8]
     b24:	b	b50 <coda_netcdf_cursor_goto_attributes+0xa4>
     b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b2c:	ldr	r3, [r3, #4]
     b30:	sub	r4, r3, #1
     b34:	mov	r0, #6
     b38:	bl	0 <coda_mem_empty_record>
     b3c:	mov	r1, r0
     b40:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b44:	lsl	r3, r4, #4
     b48:	add	r3, r2, r3
     b4c:	str	r1, [r3, #8]
     b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b54:	ldr	r3, [r3, #4]
     b58:	sub	r3, r3, #1
     b5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b60:	lsl	r3, r3, #4
     b64:	add	r3, r2, r3
     b68:	mvn	r2, #0
     b6c:	str	r2, [r3, #12]
     b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b74:	ldr	r3, [r3, #4]
     b78:	sub	r3, r3, #1
     b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     b80:	add	r3, r3, #1
     b84:	lsl	r3, r3, #4
     b88:	add	r1, r2, r3
     b8c:	mvn	r2, #0
     b90:	mvn	r3, #0
     b94:	strd	r2, [r1]
     b98:	mov	r3, #0
     b9c:	mov	r0, r3
     ba0:	sub	sp, fp, #8
     ba4:	pop	{r4, fp, pc}

00000ba8 <coda_netcdf_cursor_get_num_elements>:
     ba8:	push	{fp}		; (str fp, [sp, #-4]!)
     bac:	add	fp, sp, #0
     bb0:	sub	sp, sp, #12
     bb4:	str	r0, [fp, #-8]
     bb8:	str	r1, [fp, #-12]
     bbc:	ldr	r3, [fp, #-8]
     bc0:	ldr	r3, [r3, #4]
     bc4:	sub	r3, r3, #1
     bc8:	ldr	r2, [fp, #-8]
     bcc:	lsl	r3, r3, #4
     bd0:	add	r3, r2, r3
     bd4:	ldr	r3, [r3, #8]
     bd8:	ldr	r3, [r3, #4]
     bdc:	ldr	r3, [r3, #8]
     be0:	cmp	r3, #1
     be4:	bne	c18 <coda_netcdf_cursor_get_num_elements+0x70>
     be8:	ldr	r3, [fp, #-8]
     bec:	ldr	r3, [r3, #4]
     bf0:	sub	r3, r3, #1
     bf4:	ldr	r2, [fp, #-8]
     bf8:	lsl	r3, r3, #4
     bfc:	add	r3, r2, r3
     c00:	ldr	r3, [r3, #8]
     c04:	ldr	r3, [r3, #4]
     c08:	ldr	r2, [r3, #44]	; 0x2c
     c0c:	ldr	r3, [fp, #-12]
     c10:	str	r2, [r3]
     c14:	b	c24 <coda_netcdf_cursor_get_num_elements+0x7c>
     c18:	ldr	r3, [fp, #-12]
     c1c:	mov	r2, #1
     c20:	str	r2, [r3]
     c24:	mov	r3, #0
     c28:	mov	r0, r3
     c2c:	add	sp, fp, #0
     c30:	pop	{fp}		; (ldr fp, [sp], #4)
     c34:	bx	lr

00000c38 <coda_netcdf_cursor_get_string_length>:
     c38:	push	{fp, lr}
     c3c:	add	fp, sp, #4
     c40:	sub	sp, sp, #8
     c44:	str	r0, [fp, #-8]
     c48:	str	r1, [fp, #-12]
     c4c:	ldr	r3, [fp, #-8]
     c50:	ldr	r3, [r3, #4]
     c54:	sub	r3, r3, #1
     c58:	ldr	r2, [fp, #-8]
     c5c:	lsl	r3, r3, #4
     c60:	add	r3, r2, r3
     c64:	ldr	r3, [r3, #8]
     c68:	ldr	r3, [r3, #4]
     c6c:	ldr	r1, [fp, #-12]
     c70:	mov	r0, r3
     c74:	bl	0 <coda_type_get_string_length>
     c78:	mov	r3, r0
     c7c:	mov	r0, r3
     c80:	sub	sp, fp, #4
     c84:	pop	{fp, pc}

00000c88 <coda_netcdf_cursor_get_array_dim>:
     c88:	push	{fp, lr}
     c8c:	add	fp, sp, #4
     c90:	sub	sp, sp, #16
     c94:	str	r0, [fp, #-8]
     c98:	str	r1, [fp, #-12]
     c9c:	str	r2, [fp, #-16]
     ca0:	ldr	r3, [fp, #-8]
     ca4:	ldr	r3, [r3, #4]
     ca8:	sub	r3, r3, #1
     cac:	ldr	r2, [fp, #-8]
     cb0:	lsl	r3, r3, #4
     cb4:	add	r3, r2, r3
     cb8:	ldr	r3, [r3, #8]
     cbc:	ldr	r3, [r3, #4]
     cc0:	ldr	r2, [fp, #-16]
     cc4:	ldr	r1, [fp, #-12]
     cc8:	mov	r0, r3
     ccc:	bl	0 <coda_type_get_array_dim>
     cd0:	mov	r3, r0
     cd4:	mov	r0, r3
     cd8:	sub	sp, fp, #4
     cdc:	pop	{fp, pc}

00000ce0 <read_array>:
     ce0:	push	{r4, fp, lr}
     ce4:	add	fp, sp, #8
     ce8:	sub	sp, sp, #52	; 0x34
     cec:	str	r0, [fp, #-40]	; 0xffffffd8
     cf0:	str	r1, [fp, #-44]	; 0xffffffd4
     cf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
     cf8:	ldr	r1, [r1, #4]
     cfc:	sub	r1, r1, #1
     d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d04:	lsl	r1, r1, #4
     d08:	add	r1, r0, r1
     d0c:	ldr	r1, [r1, #8]
     d10:	str	r1, [fp, #-20]	; 0xffffffec
     d14:	ldr	r1, [fp, #-40]	; 0xffffffd8
     d18:	ldr	r1, [r1]
     d1c:	str	r1, [fp, #-24]	; 0xffffffe8
     d20:	ldr	r1, [fp, #-20]	; 0xffffffec
     d24:	ldr	r1, [r1, #4]
     d28:	ldr	r1, [r1, #44]	; 0x2c
     d2c:	mov	ip, r1
     d30:	ldr	r1, [fp, #-20]	; 0xffffffec
     d34:	ldr	r1, [r1, #12]
     d38:	ldr	r1, [r1, #4]
     d3c:	ldrd	r0, [r1, #24]
     d40:	lsr	r2, r0, #3
     d44:	orr	r2, r2, r1, lsl #29
     d48:	asr	r3, r1, #3
     d4c:	mov	r3, r2
     d50:	mul	r3, r3, ip
     d54:	str	r3, [fp, #-28]	; 0xffffffe4
     d58:	ldr	r3, [fp, #-20]	; 0xffffffec
     d5c:	ldr	r3, [r3, #12]
     d60:	ldr	r3, [r3, #24]
     d64:	cmp	r3, #0
     d68:	beq	e40 <read_array+0x160>
     d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
     d70:	ldr	r3, [r3, #4]
     d74:	ldr	r3, [r3, #52]	; 0x34
     d78:	str	r3, [fp, #-32]	; 0xffffffe0
     d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d84:	bl	0 <__aeabi_idiv>
     d88:	mov	r3, r0
     d8c:	str	r3, [fp, #-28]	; 0xffffffe4
     d90:	mov	r3, #0
     d94:	str	r3, [fp, #-16]
     d98:	b	e2c <read_array+0x14c>
     d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     da0:	ldr	r4, [r3, #52]	; 0x34
     da4:	ldr	r3, [fp, #-20]	; 0xffffffec
     da8:	ldr	r3, [r3, #12]
     dac:	ldrd	r0, [r3, #16]
     db0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     db4:	ldr	r3, [r3, #60]	; 0x3c
     db8:	ldr	r2, [fp, #-16]
     dbc:	mul	r3, r2, r3
     dc0:	mov	r2, r3
     dc4:	asr	r3, r2, #31
     dc8:	adds	r0, r0, r2
     dcc:	adc	r1, r1, r3
     dd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dd4:	mov	r2, r3
     dd8:	asr	r3, r2, #31
     ddc:	ldr	ip, [fp, #-16]
     de0:	ldr	lr, [fp, #-28]	; 0xffffffe4
     de4:	mul	ip, lr, ip
     de8:	mov	lr, ip
     dec:	ldr	ip, [fp, #-44]	; 0xffffffd4
     df0:	add	ip, ip, lr
     df4:	str	ip, [sp, #8]
     df8:	strd	r2, [sp]
     dfc:	mov	r2, r0
     e00:	mov	r3, r1
     e04:	mov	r0, r4
     e08:	bl	0 <read_bytes>
     e0c:	mov	r3, r0
     e10:	cmp	r3, #0
     e14:	beq	e20 <read_array+0x140>
     e18:	mvn	r3, #0
     e1c:	b	fe4 <read_array+0x304>
     e20:	ldr	r3, [fp, #-16]
     e24:	add	r3, r3, #1
     e28:	str	r3, [fp, #-16]
     e2c:	ldr	r2, [fp, #-16]
     e30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e34:	cmp	r2, r3
     e38:	blt	d9c <read_array+0xbc>
     e3c:	b	e90 <read_array+0x1b0>
     e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e44:	ldr	lr, [r3, #52]	; 0x34
     e48:	ldr	r3, [fp, #-20]	; 0xffffffec
     e4c:	ldr	r3, [r3, #12]
     e50:	ldrd	r0, [r3, #16]
     e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e58:	mov	r2, r3
     e5c:	asr	r3, r2, #31
     e60:	ldr	ip, [fp, #-44]	; 0xffffffd4
     e64:	str	ip, [sp, #8]
     e68:	strd	r2, [sp]
     e6c:	mov	r2, r0
     e70:	mov	r3, r1
     e74:	mov	r0, lr
     e78:	bl	0 <read_bytes>
     e7c:	mov	r3, r0
     e80:	cmp	r3, #0
     e84:	beq	e90 <read_array+0x1b0>
     e88:	mvn	r3, #0
     e8c:	b	fe4 <read_array+0x304>
     e90:	ldr	r3, [fp, #-20]	; 0xffffffec
     e94:	ldr	r3, [r3, #12]
     e98:	ldr	r3, [r3, #4]
     e9c:	ldrd	r2, [r3, #24]
     ea0:	cmp	r3, #0
     ea4:	cmpeq	r2, #16
     ea8:	beq	ee4 <read_array+0x204>
     eac:	cmp	r2, #17
     eb0:	sbcs	r1, r3, #0
     eb4:	bge	ec8 <read_array+0x1e8>
     eb8:	cmp	r3, #0
     ebc:	cmpeq	r2, #8
     ec0:	beq	fdc <read_array+0x2fc>
     ec4:	b	fc8 <read_array+0x2e8>
     ec8:	cmp	r3, #0
     ecc:	cmpeq	r2, #32
     ed0:	beq	f30 <read_array+0x250>
     ed4:	cmp	r3, #0
     ed8:	cmpeq	r2, #64	; 0x40
     edc:	beq	f7c <read_array+0x29c>
     ee0:	b	fc8 <read_array+0x2e8>
     ee4:	mov	r3, #0
     ee8:	str	r3, [fp, #-16]
     eec:	b	f14 <read_array+0x234>
     ef0:	ldr	r3, [fp, #-16]
     ef4:	lsl	r3, r3, #1
     ef8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     efc:	add	r3, r2, r3
     f00:	mov	r0, r3
     f04:	bl	1e4 <swap2>
     f08:	ldr	r3, [fp, #-16]
     f0c:	add	r3, r3, #1
     f10:	str	r3, [fp, #-16]
     f14:	ldr	r3, [fp, #-20]	; 0xffffffec
     f18:	ldr	r3, [r3, #4]
     f1c:	ldr	r2, [r3, #44]	; 0x2c
     f20:	ldr	r3, [fp, #-16]
     f24:	cmp	r2, r3
     f28:	bgt	ef0 <read_array+0x210>
     f2c:	b	fe0 <read_array+0x300>
     f30:	mov	r3, #0
     f34:	str	r3, [fp, #-16]
     f38:	b	f60 <read_array+0x280>
     f3c:	ldr	r3, [fp, #-16]
     f40:	lsl	r3, r3, #2
     f44:	ldr	r2, [fp, #-44]	; 0xffffffd4
     f48:	add	r3, r2, r3
     f4c:	mov	r0, r3
     f50:	bl	27c <swap4>
     f54:	ldr	r3, [fp, #-16]
     f58:	add	r3, r3, #1
     f5c:	str	r3, [fp, #-16]
     f60:	ldr	r3, [fp, #-20]	; 0xffffffec
     f64:	ldr	r3, [r3, #4]
     f68:	ldr	r2, [r3, #44]	; 0x2c
     f6c:	ldr	r3, [fp, #-16]
     f70:	cmp	r2, r3
     f74:	bgt	f3c <read_array+0x25c>
     f78:	b	fe0 <read_array+0x300>
     f7c:	mov	r3, #0
     f80:	str	r3, [fp, #-16]
     f84:	b	fac <read_array+0x2cc>
     f88:	ldr	r3, [fp, #-16]
     f8c:	lsl	r3, r3, #3
     f90:	ldr	r2, [fp, #-44]	; 0xffffffd4
     f94:	add	r3, r2, r3
     f98:	mov	r0, r3
     f9c:	bl	398 <swap8>
     fa0:	ldr	r3, [fp, #-16]
     fa4:	add	r3, r3, #1
     fa8:	str	r3, [fp, #-16]
     fac:	ldr	r3, [fp, #-20]	; 0xffffffec
     fb0:	ldr	r3, [r3, #4]
     fb4:	ldr	r2, [r3, #44]	; 0x2c
     fb8:	ldr	r3, [fp, #-16]
     fbc:	cmp	r2, r3
     fc0:	bgt	f88 <read_array+0x2a8>
     fc4:	b	fe0 <read_array+0x300>
     fc8:	ldr	r3, [pc, #32]	; ff0 <read_array+0x310>
     fcc:	ldr	r2, [pc, #32]	; ff4 <read_array+0x314>
     fd0:	ldr	r1, [pc, #32]	; ff8 <read_array+0x318>
     fd4:	ldr	r0, [pc, #32]	; ffc <read_array+0x31c>
     fd8:	bl	0 <__assert_fail>
     fdc:	nop			; (mov r0, r0)
     fe0:	mov	r3, #0
     fe4:	mov	r0, r3
     fe8:	sub	sp, fp, #8
     fec:	pop	{r4, fp, pc}
     ff0:	.word	0x00000204
     ff4:	.word	0x00000106
     ff8:	.word	0x000001a0
     ffc:	.word	0x000001f4

00001000 <read_partial_array>:
    1000:	push	{r4, r5, fp, lr}
    1004:	add	fp, sp, #12
    1008:	sub	sp, sp, #88	; 0x58
    100c:	str	r0, [fp, #-72]	; 0xffffffb8
    1010:	str	r1, [fp, #-76]	; 0xffffffb4
    1014:	str	r2, [fp, #-80]	; 0xffffffb0
    1018:	str	r3, [fp, #-84]	; 0xffffffac
    101c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1020:	ldr	r3, [r3, #4]
    1024:	sub	r3, r3, #1
    1028:	ldr	r2, [fp, #-72]	; 0xffffffb8
    102c:	lsl	r3, r3, #4
    1030:	add	r3, r2, r3
    1034:	ldr	r3, [r3, #8]
    1038:	str	r3, [fp, #-48]	; 0xffffffd0
    103c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1040:	ldr	r3, [r3]
    1044:	str	r3, [fp, #-52]	; 0xffffffcc
    1048:	ldr	r3, [fp, #-48]	; 0xffffffd0
    104c:	ldr	r3, [r3, #12]
    1050:	ldr	r3, [r3, #4]
    1054:	ldrd	r2, [r3, #24]
    1058:	lsr	r4, r2, #3
    105c:	orr	r4, r4, r3, lsl #29
    1060:	asr	r5, r3, #3
    1064:	mov	r3, r4
    1068:	str	r3, [fp, #-56]	; 0xffffffc8
    106c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1070:	ldr	r3, [r3, #12]
    1074:	ldr	r3, [r3, #24]
    1078:	cmp	r3, #0
    107c:	beq	1244 <read_partial_array+0x244>
    1080:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1084:	ldr	r3, [r3, #4]
    1088:	ldr	r3, [r3, #52]	; 0x34
    108c:	str	r3, [fp, #-60]	; 0xffffffc4
    1090:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1094:	ldr	r3, [r3, #4]
    1098:	ldr	r3, [r3, #44]	; 0x2c
    109c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10a0:	mov	r0, r3
    10a4:	bl	0 <__aeabi_idiv>
    10a8:	mov	r3, r0
    10ac:	str	r3, [fp, #-64]	; 0xffffffc0
    10b0:	mov	r2, #0
    10b4:	mov	r3, #0
    10b8:	strd	r2, [fp, #-28]	; 0xffffffe4
    10bc:	mov	r3, #0
    10c0:	str	r3, [fp, #-16]
    10c4:	b	1230 <read_partial_array+0x230>
    10c8:	mov	r2, #0
    10cc:	mov	r3, #0
    10d0:	strd	r2, [fp, #-36]	; 0xffffffdc
    10d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    10d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10dc:	mul	r3, r2, r3
    10e0:	mov	r2, r3
    10e4:	asr	r3, r2, #31
    10e8:	strd	r2, [fp, #-44]	; 0xffffffd4
    10ec:	ldr	r2, [fp, #-76]	; 0xffffffb4
    10f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    10f4:	add	r2, r2, r3
    10f8:	ldr	r3, [fp, #-16]
    10fc:	add	r3, r3, #1
    1100:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1104:	mul	r3, r1, r3
    1108:	cmp	r2, r3
    110c:	bge	1140 <read_partial_array+0x140>
    1110:	ldr	r2, [fp, #-76]	; 0xffffffb4
    1114:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1118:	add	r2, r2, r3
    111c:	ldr	r3, [fp, #-16]
    1120:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1124:	mul	r3, r1, r3
    1128:	sub	r3, r2, r3
    112c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1130:	mul	r3, r2, r3
    1134:	mov	r2, r3
    1138:	asr	r3, r2, #31
    113c:	strd	r2, [fp, #-44]	; 0xffffffd4
    1140:	ldr	r3, [fp, #-16]
    1144:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1148:	mul	r2, r2, r3
    114c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1150:	cmp	r2, r3
    1154:	bge	1194 <read_partial_array+0x194>
    1158:	ldr	r3, [fp, #-16]
    115c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1160:	mul	r3, r2, r3
    1164:	ldr	r2, [fp, #-76]	; 0xffffffb4
    1168:	sub	r3, r2, r3
    116c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1170:	mul	r3, r2, r3
    1174:	mov	r2, r3
    1178:	asr	r3, r2, #31
    117c:	strd	r2, [fp, #-36]	; 0xffffffdc
    1180:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    1184:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1188:	subs	r2, r0, r2
    118c:	sbc	r3, r1, r3
    1190:	strd	r2, [fp, #-44]	; 0xffffffd4
    1194:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1198:	ldr	ip, [r3, #52]	; 0x34
    119c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    11a0:	ldr	r3, [r3, #12]
    11a4:	ldrd	r0, [r3, #16]
    11a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11ac:	ldr	r3, [r3, #60]	; 0x3c
    11b0:	ldr	r2, [fp, #-16]
    11b4:	mul	r3, r2, r3
    11b8:	mov	r2, r3
    11bc:	asr	r3, r2, #31
    11c0:	adds	r0, r0, r2
    11c4:	adc	r1, r1, r3
    11c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    11cc:	adds	r0, r0, r2
    11d0:	adc	r1, r1, r3
    11d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11d8:	ldr	r2, [fp, #-84]	; 0xffffffac
    11dc:	add	r3, r2, r3
    11e0:	str	r3, [sp, #8]
    11e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    11e8:	strd	r2, [sp]
    11ec:	mov	r2, r0
    11f0:	mov	r3, r1
    11f4:	mov	r0, ip
    11f8:	bl	0 <read_bytes>
    11fc:	mov	r3, r0
    1200:	cmp	r3, #0
    1204:	beq	1210 <read_partial_array+0x210>
    1208:	mvn	r3, #0
    120c:	b	140c <read_partial_array+0x40c>
    1210:	ldrd	r0, [fp, #-28]	; 0xffffffe4
    1214:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1218:	adds	r2, r2, r0
    121c:	adc	r3, r3, r1
    1220:	strd	r2, [fp, #-28]	; 0xffffffe4
    1224:	ldr	r3, [fp, #-16]
    1228:	add	r3, r3, #1
    122c:	str	r3, [fp, #-16]
    1230:	ldr	r2, [fp, #-16]
    1234:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1238:	cmp	r2, r3
    123c:	blt	10c8 <read_partial_array+0xc8>
    1240:	b	12b8 <read_partial_array+0x2b8>
    1244:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1248:	ldr	lr, [r3, #52]	; 0x34
    124c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1250:	ldr	r3, [r3, #12]
    1254:	ldrd	r0, [r3, #16]
    1258:	ldr	r3, [fp, #-76]	; 0xffffffb4
    125c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1260:	mul	r3, r2, r3
    1264:	mov	r2, r3
    1268:	asr	r3, r2, #31
    126c:	adds	r0, r0, r2
    1270:	adc	r1, r1, r3
    1274:	ldr	r3, [fp, #-80]	; 0xffffffb0
    1278:	ldr	r2, [fp, #-56]	; 0xffffffc8
    127c:	mul	r3, r2, r3
    1280:	mov	r2, r3
    1284:	asr	r3, r2, #31
    1288:	ldr	ip, [fp, #-84]	; 0xffffffac
    128c:	str	ip, [sp, #8]
    1290:	strd	r2, [sp]
    1294:	mov	r2, r0
    1298:	mov	r3, r1
    129c:	mov	r0, lr
    12a0:	bl	0 <read_bytes>
    12a4:	mov	r3, r0
    12a8:	cmp	r3, #0
    12ac:	beq	12b8 <read_partial_array+0x2b8>
    12b0:	mvn	r3, #0
    12b4:	b	140c <read_partial_array+0x40c>
    12b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    12bc:	ldr	r3, [r3, #12]
    12c0:	ldr	r3, [r3, #4]
    12c4:	ldrd	r2, [r3, #24]
    12c8:	cmp	r3, #0
    12cc:	cmpeq	r2, #16
    12d0:	beq	130c <read_partial_array+0x30c>
    12d4:	cmp	r2, #17
    12d8:	sbcs	r1, r3, #0
    12dc:	bge	12f0 <read_partial_array+0x2f0>
    12e0:	cmp	r3, #0
    12e4:	cmpeq	r2, #8
    12e8:	beq	1404 <read_partial_array+0x404>
    12ec:	b	13f0 <read_partial_array+0x3f0>
    12f0:	cmp	r3, #0
    12f4:	cmpeq	r2, #32
    12f8:	beq	1358 <read_partial_array+0x358>
    12fc:	cmp	r3, #0
    1300:	cmpeq	r2, #64	; 0x40
    1304:	beq	13a4 <read_partial_array+0x3a4>
    1308:	b	13f0 <read_partial_array+0x3f0>
    130c:	mov	r3, #0
    1310:	str	r3, [fp, #-16]
    1314:	b	133c <read_partial_array+0x33c>
    1318:	ldr	r3, [fp, #-16]
    131c:	lsl	r3, r3, #1
    1320:	ldr	r2, [fp, #-84]	; 0xffffffac
    1324:	add	r3, r2, r3
    1328:	mov	r0, r3
    132c:	bl	1e4 <swap2>
    1330:	ldr	r3, [fp, #-16]
    1334:	add	r3, r3, #1
    1338:	str	r3, [fp, #-16]
    133c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1340:	ldr	r3, [r3, #4]
    1344:	ldr	r2, [r3, #44]	; 0x2c
    1348:	ldr	r3, [fp, #-16]
    134c:	cmp	r2, r3
    1350:	bgt	1318 <read_partial_array+0x318>
    1354:	b	1408 <read_partial_array+0x408>
    1358:	mov	r3, #0
    135c:	str	r3, [fp, #-16]
    1360:	b	1388 <read_partial_array+0x388>
    1364:	ldr	r3, [fp, #-16]
    1368:	lsl	r3, r3, #2
    136c:	ldr	r2, [fp, #-84]	; 0xffffffac
    1370:	add	r3, r2, r3
    1374:	mov	r0, r3
    1378:	bl	27c <swap4>
    137c:	ldr	r3, [fp, #-16]
    1380:	add	r3, r3, #1
    1384:	str	r3, [fp, #-16]
    1388:	ldr	r3, [fp, #-48]	; 0xffffffd0
    138c:	ldr	r3, [r3, #4]
    1390:	ldr	r2, [r3, #44]	; 0x2c
    1394:	ldr	r3, [fp, #-16]
    1398:	cmp	r2, r3
    139c:	bgt	1364 <read_partial_array+0x364>
    13a0:	b	1408 <read_partial_array+0x408>
    13a4:	mov	r3, #0
    13a8:	str	r3, [fp, #-16]
    13ac:	b	13d4 <read_partial_array+0x3d4>
    13b0:	ldr	r3, [fp, #-16]
    13b4:	lsl	r3, r3, #3
    13b8:	ldr	r2, [fp, #-84]	; 0xffffffac
    13bc:	add	r3, r2, r3
    13c0:	mov	r0, r3
    13c4:	bl	398 <swap8>
    13c8:	ldr	r3, [fp, #-16]
    13cc:	add	r3, r3, #1
    13d0:	str	r3, [fp, #-16]
    13d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    13d8:	ldr	r3, [r3, #4]
    13dc:	ldr	r2, [r3, #44]	; 0x2c
    13e0:	ldr	r3, [fp, #-16]
    13e4:	cmp	r2, r3
    13e8:	bgt	13b0 <read_partial_array+0x3b0>
    13ec:	b	1408 <read_partial_array+0x408>
    13f0:	ldr	r3, [pc, #32]	; 1418 <read_partial_array+0x418>
    13f4:	ldr	r2, [pc, #32]	; 141c <read_partial_array+0x41c>
    13f8:	ldr	r1, [pc, #32]	; 1420 <read_partial_array+0x420>
    13fc:	ldr	r0, [pc, #32]	; 1424 <read_partial_array+0x424>
    1400:	bl	0 <__assert_fail>
    1404:	nop			; (mov r0, r0)
    1408:	mov	r3, #0
    140c:	mov	r0, r3
    1410:	sub	sp, fp, #12
    1414:	pop	{r4, r5, fp, pc}
    1418:	.word	0x00000210
    141c:	.word	0x0000015b
    1420:	.word	0x000001a0
    1424:	.word	0x000001f4

00001428 <read_basic_type>:
    1428:	push	{r4, r5, fp, lr}
    142c:	add	fp, sp, #12
    1430:	sub	sp, sp, #72	; 0x48
    1434:	str	r0, [fp, #-56]	; 0xffffffc8
    1438:	str	r1, [fp, #-60]	; 0xffffffc4
    143c:	str	r2, [fp, #-64]	; 0xffffffc0
    1440:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1444:	ldr	r3, [r3, #4]
    1448:	sub	r3, r3, #1
    144c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1450:	lsl	r3, r3, #4
    1454:	add	r3, r2, r3
    1458:	ldr	r3, [r3, #8]
    145c:	str	r3, [fp, #-24]	; 0xffffffe8
    1460:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1464:	ldr	r3, [r3]
    1468:	str	r3, [fp, #-28]	; 0xffffffe4
    146c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1470:	ldrd	r2, [r3, #16]
    1474:	strd	r2, [fp, #-20]	; 0xffffffec
    1478:	ldr	r3, [fp, #-24]	; 0xffffffe8
    147c:	ldr	r3, [r3, #4]
    1480:	ldrd	r2, [r3, #24]
    1484:	lsr	r4, r2, #3
    1488:	orr	r4, r4, r3, lsl #29
    148c:	asr	r5, r3, #3
    1490:	strd	r4, [fp, #-36]	; 0xffffffdc
    1494:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1498:	ldr	r3, [r3, #4]
    149c:	sub	r3, r3, #2
    14a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14a4:	lsl	r3, r3, #4
    14a8:	add	r3, r2, r3
    14ac:	ldr	r3, [r3, #8]
    14b0:	ldr	r3, [r3]
    14b4:	cmp	r3, #104	; 0x68
    14b8:	bne	1660 <read_basic_type+0x238>
    14bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14c0:	ldr	r3, [r3, #4]
    14c4:	sub	r3, r3, #2
    14c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14cc:	lsl	r3, r3, #4
    14d0:	add	r3, r2, r3
    14d4:	ldr	r3, [r3, #8]
    14d8:	ldr	r3, [r3, #4]
    14dc:	ldr	r3, [r3, #8]
    14e0:	cmp	r3, #1
    14e4:	bne	1660 <read_basic_type+0x238>
    14e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14ec:	ldr	r3, [r3, #24]
    14f0:	cmp	r3, #0
    14f4:	beq	1608 <read_basic_type+0x1e0>
    14f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14fc:	ldr	r3, [r3, #4]
    1500:	sub	r3, r3, #2
    1504:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1508:	lsl	r3, r3, #4
    150c:	add	r3, r2, r3
    1510:	ldr	r3, [r3, #8]
    1514:	str	r3, [fp, #-40]	; 0xffffffd8
    1518:	ldr	r3, [fp, #-40]	; 0xffffffd8
    151c:	ldr	r3, [r3, #4]
    1520:	ldr	r2, [r3, #44]	; 0x2c
    1524:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1528:	ldr	r3, [r3, #4]
    152c:	ldr	r3, [r3, #52]	; 0x34
    1530:	mov	r1, r3
    1534:	mov	r0, r2
    1538:	bl	0 <__aeabi_idiv>
    153c:	mov	r3, r0
    1540:	str	r3, [fp, #-44]	; 0xffffffd4
    1544:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1548:	ldr	r3, [r3, #4]
    154c:	sub	r3, r3, #1
    1550:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1554:	lsl	r3, r3, #4
    1558:	add	r3, r2, r3
    155c:	ldr	r3, [r3, #12]
    1560:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1564:	mov	r0, r3
    1568:	bl	0 <__aeabi_idiv>
    156c:	mov	r3, r0
    1570:	str	r3, [fp, #-48]	; 0xffffffd0
    1574:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1578:	ldr	r3, [r3, #60]	; 0x3c
    157c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1580:	mul	r3, r2, r3
    1584:	mov	r2, r3
    1588:	asr	r3, r2, #31
    158c:	ldrd	r0, [fp, #-20]	; 0xffffffec
    1590:	adds	r2, r2, r0
    1594:	adc	r3, r3, r1
    1598:	strd	r2, [fp, #-20]	; 0xffffffec
    159c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15a0:	ldr	r3, [r3, #4]
    15a4:	sub	r3, r3, #1
    15a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15ac:	lsl	r3, r3, #4
    15b0:	add	r3, r2, r3
    15b4:	ldr	r2, [r3, #12]
    15b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    15bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    15c0:	mul	r3, r1, r3
    15c4:	sub	r3, r2, r3
    15c8:	mov	r2, r3
    15cc:	asr	r3, r2, #31
    15d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    15d4:	mul	r0, r3, r1
    15d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    15dc:	mul	r1, r2, r1
    15e0:	add	r1, r0, r1
    15e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    15e8:	umull	r2, r3, r0, r2
    15ec:	add	r1, r1, r3
    15f0:	mov	r3, r1
    15f4:	ldrd	r0, [fp, #-20]	; 0xffffffec
    15f8:	adds	r2, r2, r0
    15fc:	adc	r3, r3, r1
    1600:	strd	r2, [fp, #-20]	; 0xffffffec
    1604:	b	1660 <read_basic_type+0x238>
    1608:	ldr	r3, [fp, #-56]	; 0xffffffc8
    160c:	ldr	r3, [r3, #4]
    1610:	sub	r3, r3, #1
    1614:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1618:	lsl	r3, r3, #4
    161c:	add	r3, r2, r3
    1620:	ldr	r3, [r3, #12]
    1624:	mov	r2, r3
    1628:	asr	r3, r2, #31
    162c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1630:	mul	r0, r3, r1
    1634:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1638:	mul	r1, r2, r1
    163c:	add	r1, r0, r1
    1640:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1644:	umull	r2, r3, r0, r2
    1648:	add	r1, r1, r3
    164c:	mov	r3, r1
    1650:	ldrd	r0, [fp, #-20]	; 0xffffffec
    1654:	adds	r2, r2, r0
    1658:	adc	r3, r3, r1
    165c:	strd	r2, [fp, #-20]	; 0xffffffec
    1660:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1664:	cmp	r3, #0
    1668:	blt	16c4 <read_basic_type+0x29c>
    166c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1670:	mov	r0, r3
    1674:	asr	r1, r0, #31
    1678:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    167c:	cmp	r0, r2
    1680:	sbcs	r3, r1, r3
    1684:	bge	16c4 <read_basic_type+0x29c>
    1688:	ldr	r3, [fp, #-28]	; 0xffffffe4
    168c:	ldr	r0, [r3, #52]	; 0x34
    1690:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1694:	mov	r2, r3
    1698:	asr	r3, r2, #31
    169c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16a0:	str	r1, [sp, #8]
    16a4:	strd	r2, [sp]
    16a8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    16ac:	bl	0 <read_bytes>
    16b0:	mov	r3, r0
    16b4:	cmp	r3, #0
    16b8:	beq	16fc <read_basic_type+0x2d4>
    16bc:	mvn	r3, #0
    16c0:	b	17b4 <read_basic_type+0x38c>
    16c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16c8:	ldr	r1, [r3, #52]	; 0x34
    16cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    16d0:	str	r3, [sp, #8]
    16d4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    16d8:	strd	r2, [sp]
    16dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    16e0:	mov	r0, r1
    16e4:	bl	0 <read_bytes>
    16e8:	mov	r3, r0
    16ec:	cmp	r3, #0
    16f0:	beq	16fc <read_basic_type+0x2d4>
    16f4:	mvn	r3, #0
    16f8:	b	17b4 <read_basic_type+0x38c>
    16fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1700:	ldr	r3, [r3, #4]
    1704:	ldr	r3, [r3, #8]
    1708:	cmp	r3, #2
    170c:	beq	1724 <read_basic_type+0x2fc>
    1710:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1714:	ldr	r3, [r3, #4]
    1718:	ldr	r3, [r3, #8]
    171c:	cmp	r3, #3
    1720:	bne	17b0 <read_basic_type+0x388>
    1724:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1728:	ldr	r3, [r3, #4]
    172c:	ldrd	r2, [r3, #24]
    1730:	cmp	r3, #0
    1734:	cmpeq	r2, #16
    1738:	beq	1774 <read_basic_type+0x34c>
    173c:	cmp	r2, #17
    1740:	sbcs	r1, r3, #0
    1744:	bge	1758 <read_basic_type+0x330>
    1748:	cmp	r3, #0
    174c:	cmpeq	r2, #8
    1750:	beq	17ac <read_basic_type+0x384>
    1754:	b	1798 <read_basic_type+0x370>
    1758:	cmp	r3, #0
    175c:	cmpeq	r2, #32
    1760:	beq	1780 <read_basic_type+0x358>
    1764:	cmp	r3, #0
    1768:	cmpeq	r2, #64	; 0x40
    176c:	beq	178c <read_basic_type+0x364>
    1770:	b	1798 <read_basic_type+0x370>
    1774:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1778:	bl	1e4 <swap2>
    177c:	b	17b0 <read_basic_type+0x388>
    1780:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1784:	bl	27c <swap4>
    1788:	b	17b0 <read_basic_type+0x388>
    178c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1790:	bl	398 <swap8>
    1794:	b	17b0 <read_basic_type+0x388>
    1798:	ldr	r3, [pc, #32]	; 17c0 <read_basic_type+0x398>
    179c:	ldr	r2, [pc, #32]	; 17c4 <read_basic_type+0x39c>
    17a0:	ldr	r1, [pc, #32]	; 17c8 <read_basic_type+0x3a0>
    17a4:	ldr	r0, [pc, #32]	; 17cc <read_basic_type+0x3a4>
    17a8:	bl	0 <__assert_fail>
    17ac:	nop			; (mov r0, r0)
    17b0:	mov	r3, #0
    17b4:	mov	r0, r3
    17b8:	sub	sp, fp, #12
    17bc:	pop	{r4, r5, fp, pc}
    17c0:	.word	0x00000224
    17c4:	.word	0x000001a6
    17c8:	.word	0x000001a0
    17cc:	.word	0x000001f4

000017d0 <coda_netcdf_cursor_read_int8>:
    17d0:	push	{fp, lr}
    17d4:	add	fp, sp, #4
    17d8:	sub	sp, sp, #8
    17dc:	str	r0, [fp, #-8]
    17e0:	str	r1, [fp, #-12]
    17e4:	mvn	r2, #0
    17e8:	ldr	r1, [fp, #-12]
    17ec:	ldr	r0, [fp, #-8]
    17f0:	bl	1428 <read_basic_type>
    17f4:	mov	r3, r0
    17f8:	mov	r0, r3
    17fc:	sub	sp, fp, #4
    1800:	pop	{fp, pc}

00001804 <coda_netcdf_cursor_read_int16>:
    1804:	push	{fp, lr}
    1808:	add	fp, sp, #4
    180c:	sub	sp, sp, #8
    1810:	str	r0, [fp, #-8]
    1814:	str	r1, [fp, #-12]
    1818:	mvn	r2, #0
    181c:	ldr	r1, [fp, #-12]
    1820:	ldr	r0, [fp, #-8]
    1824:	bl	1428 <read_basic_type>
    1828:	mov	r3, r0
    182c:	mov	r0, r3
    1830:	sub	sp, fp, #4
    1834:	pop	{fp, pc}

00001838 <coda_netcdf_cursor_read_int32>:
    1838:	push	{fp, lr}
    183c:	add	fp, sp, #4
    1840:	sub	sp, sp, #8
    1844:	str	r0, [fp, #-8]
    1848:	str	r1, [fp, #-12]
    184c:	mvn	r2, #0
    1850:	ldr	r1, [fp, #-12]
    1854:	ldr	r0, [fp, #-8]
    1858:	bl	1428 <read_basic_type>
    185c:	mov	r3, r0
    1860:	mov	r0, r3
    1864:	sub	sp, fp, #4
    1868:	pop	{fp, pc}

0000186c <coda_netcdf_cursor_read_float>:
    186c:	push	{fp, lr}
    1870:	add	fp, sp, #4
    1874:	sub	sp, sp, #8
    1878:	str	r0, [fp, #-8]
    187c:	str	r1, [fp, #-12]
    1880:	mvn	r2, #0
    1884:	ldr	r1, [fp, #-12]
    1888:	ldr	r0, [fp, #-8]
    188c:	bl	1428 <read_basic_type>
    1890:	mov	r3, r0
    1894:	mov	r0, r3
    1898:	sub	sp, fp, #4
    189c:	pop	{fp, pc}

000018a0 <coda_netcdf_cursor_read_double>:
    18a0:	push	{fp, lr}
    18a4:	add	fp, sp, #4
    18a8:	sub	sp, sp, #8
    18ac:	str	r0, [fp, #-8]
    18b0:	str	r1, [fp, #-12]
    18b4:	mvn	r2, #0
    18b8:	ldr	r1, [fp, #-12]
    18bc:	ldr	r0, [fp, #-8]
    18c0:	bl	1428 <read_basic_type>
    18c4:	mov	r3, r0
    18c8:	mov	r0, r3
    18cc:	sub	sp, fp, #4
    18d0:	pop	{fp, pc}

000018d4 <coda_netcdf_cursor_read_char>:
    18d4:	push	{fp, lr}
    18d8:	add	fp, sp, #4
    18dc:	sub	sp, sp, #8
    18e0:	str	r0, [fp, #-8]
    18e4:	str	r1, [fp, #-12]
    18e8:	mvn	r2, #0
    18ec:	ldr	r1, [fp, #-12]
    18f0:	ldr	r0, [fp, #-8]
    18f4:	bl	1428 <read_basic_type>
    18f8:	mov	r3, r0
    18fc:	mov	r0, r3
    1900:	sub	sp, fp, #4
    1904:	pop	{fp, pc}

00001908 <coda_netcdf_cursor_read_string>:
    1908:	push	{fp, lr}
    190c:	add	fp, sp, #4
    1910:	sub	sp, sp, #16
    1914:	str	r0, [fp, #-8]
    1918:	str	r1, [fp, #-12]
    191c:	str	r2, [fp, #-16]
    1920:	ldr	r2, [fp, #-16]
    1924:	ldr	r1, [fp, #-12]
    1928:	ldr	r0, [fp, #-8]
    192c:	bl	1428 <read_basic_type>
    1930:	mov	r3, r0
    1934:	cmp	r3, #0
    1938:	beq	1944 <coda_netcdf_cursor_read_string+0x3c>
    193c:	mvn	r3, #0
    1940:	b	1960 <coda_netcdf_cursor_read_string+0x58>
    1944:	ldr	r3, [fp, #-16]
    1948:	sub	r3, r3, #1
    194c:	ldr	r2, [fp, #-12]
    1950:	add	r3, r2, r3
    1954:	mov	r2, #0
    1958:	strb	r2, [r3]
    195c:	mov	r3, #0
    1960:	mov	r0, r3
    1964:	sub	sp, fp, #4
    1968:	pop	{fp, pc}

0000196c <coda_netcdf_cursor_read_int8_array>:
    196c:	push	{fp, lr}
    1970:	add	fp, sp, #4
    1974:	sub	sp, sp, #8
    1978:	str	r0, [fp, #-8]
    197c:	str	r1, [fp, #-12]
    1980:	ldr	r1, [fp, #-12]
    1984:	ldr	r0, [fp, #-8]
    1988:	bl	ce0 <read_array>
    198c:	mov	r3, r0
    1990:	mov	r0, r3
    1994:	sub	sp, fp, #4
    1998:	pop	{fp, pc}

0000199c <coda_netcdf_cursor_read_int16_array>:
    199c:	push	{fp, lr}
    19a0:	add	fp, sp, #4
    19a4:	sub	sp, sp, #8
    19a8:	str	r0, [fp, #-8]
    19ac:	str	r1, [fp, #-12]
    19b0:	ldr	r1, [fp, #-12]
    19b4:	ldr	r0, [fp, #-8]
    19b8:	bl	ce0 <read_array>
    19bc:	mov	r3, r0
    19c0:	mov	r0, r3
    19c4:	sub	sp, fp, #4
    19c8:	pop	{fp, pc}

000019cc <coda_netcdf_cursor_read_int32_array>:
    19cc:	push	{fp, lr}
    19d0:	add	fp, sp, #4
    19d4:	sub	sp, sp, #8
    19d8:	str	r0, [fp, #-8]
    19dc:	str	r1, [fp, #-12]
    19e0:	ldr	r1, [fp, #-12]
    19e4:	ldr	r0, [fp, #-8]
    19e8:	bl	ce0 <read_array>
    19ec:	mov	r3, r0
    19f0:	mov	r0, r3
    19f4:	sub	sp, fp, #4
    19f8:	pop	{fp, pc}

000019fc <coda_netcdf_cursor_read_float_array>:
    19fc:	push	{fp, lr}
    1a00:	add	fp, sp, #4
    1a04:	sub	sp, sp, #8
    1a08:	str	r0, [fp, #-8]
    1a0c:	str	r1, [fp, #-12]
    1a10:	ldr	r1, [fp, #-12]
    1a14:	ldr	r0, [fp, #-8]
    1a18:	bl	ce0 <read_array>
    1a1c:	mov	r3, r0
    1a20:	mov	r0, r3
    1a24:	sub	sp, fp, #4
    1a28:	pop	{fp, pc}

00001a2c <coda_netcdf_cursor_read_double_array>:
    1a2c:	push	{fp, lr}
    1a30:	add	fp, sp, #4
    1a34:	sub	sp, sp, #8
    1a38:	str	r0, [fp, #-8]
    1a3c:	str	r1, [fp, #-12]
    1a40:	ldr	r1, [fp, #-12]
    1a44:	ldr	r0, [fp, #-8]
    1a48:	bl	ce0 <read_array>
    1a4c:	mov	r3, r0
    1a50:	mov	r0, r3
    1a54:	sub	sp, fp, #4
    1a58:	pop	{fp, pc}

00001a5c <coda_netcdf_cursor_read_char_array>:
    1a5c:	push	{fp, lr}
    1a60:	add	fp, sp, #4
    1a64:	sub	sp, sp, #8
    1a68:	str	r0, [fp, #-8]
    1a6c:	str	r1, [fp, #-12]
    1a70:	ldr	r1, [fp, #-12]
    1a74:	ldr	r0, [fp, #-8]
    1a78:	bl	ce0 <read_array>
    1a7c:	mov	r3, r0
    1a80:	mov	r0, r3
    1a84:	sub	sp, fp, #4
    1a88:	pop	{fp, pc}

00001a8c <coda_netcdf_cursor_read_int8_partial_array>:
    1a8c:	push	{fp, lr}
    1a90:	add	fp, sp, #4
    1a94:	sub	sp, sp, #16
    1a98:	str	r0, [fp, #-8]
    1a9c:	str	r1, [fp, #-12]
    1aa0:	str	r2, [fp, #-16]
    1aa4:	str	r3, [fp, #-20]	; 0xffffffec
    1aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1aac:	ldr	r2, [fp, #-16]
    1ab0:	ldr	r1, [fp, #-12]
    1ab4:	ldr	r0, [fp, #-8]
    1ab8:	bl	1000 <read_partial_array>
    1abc:	mov	r3, r0
    1ac0:	mov	r0, r3
    1ac4:	sub	sp, fp, #4
    1ac8:	pop	{fp, pc}

00001acc <coda_netcdf_cursor_read_int16_partial_array>:
    1acc:	push	{fp, lr}
    1ad0:	add	fp, sp, #4
    1ad4:	sub	sp, sp, #16
    1ad8:	str	r0, [fp, #-8]
    1adc:	str	r1, [fp, #-12]
    1ae0:	str	r2, [fp, #-16]
    1ae4:	str	r3, [fp, #-20]	; 0xffffffec
    1ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1aec:	ldr	r2, [fp, #-16]
    1af0:	ldr	r1, [fp, #-12]
    1af4:	ldr	r0, [fp, #-8]
    1af8:	bl	1000 <read_partial_array>
    1afc:	mov	r3, r0
    1b00:	mov	r0, r3
    1b04:	sub	sp, fp, #4
    1b08:	pop	{fp, pc}

00001b0c <coda_netcdf_cursor_read_int32_partial_array>:
    1b0c:	push	{fp, lr}
    1b10:	add	fp, sp, #4
    1b14:	sub	sp, sp, #16
    1b18:	str	r0, [fp, #-8]
    1b1c:	str	r1, [fp, #-12]
    1b20:	str	r2, [fp, #-16]
    1b24:	str	r3, [fp, #-20]	; 0xffffffec
    1b28:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b2c:	ldr	r2, [fp, #-16]
    1b30:	ldr	r1, [fp, #-12]
    1b34:	ldr	r0, [fp, #-8]
    1b38:	bl	1000 <read_partial_array>
    1b3c:	mov	r3, r0
    1b40:	mov	r0, r3
    1b44:	sub	sp, fp, #4
    1b48:	pop	{fp, pc}

00001b4c <coda_netcdf_cursor_read_float_partial_array>:
    1b4c:	push	{fp, lr}
    1b50:	add	fp, sp, #4
    1b54:	sub	sp, sp, #16
    1b58:	str	r0, [fp, #-8]
    1b5c:	str	r1, [fp, #-12]
    1b60:	str	r2, [fp, #-16]
    1b64:	str	r3, [fp, #-20]	; 0xffffffec
    1b68:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b6c:	ldr	r2, [fp, #-16]
    1b70:	ldr	r1, [fp, #-12]
    1b74:	ldr	r0, [fp, #-8]
    1b78:	bl	1000 <read_partial_array>
    1b7c:	mov	r3, r0
    1b80:	mov	r0, r3
    1b84:	sub	sp, fp, #4
    1b88:	pop	{fp, pc}

00001b8c <coda_netcdf_cursor_read_double_partial_array>:
    1b8c:	push	{fp, lr}
    1b90:	add	fp, sp, #4
    1b94:	sub	sp, sp, #16
    1b98:	str	r0, [fp, #-8]
    1b9c:	str	r1, [fp, #-12]
    1ba0:	str	r2, [fp, #-16]
    1ba4:	str	r3, [fp, #-20]	; 0xffffffec
    1ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bac:	ldr	r2, [fp, #-16]
    1bb0:	ldr	r1, [fp, #-12]
    1bb4:	ldr	r0, [fp, #-8]
    1bb8:	bl	1000 <read_partial_array>
    1bbc:	mov	r3, r0
    1bc0:	mov	r0, r3
    1bc4:	sub	sp, fp, #4
    1bc8:	pop	{fp, pc}

00001bcc <coda_netcdf_cursor_read_char_partial_array>:
    1bcc:	push	{fp, lr}
    1bd0:	add	fp, sp, #4
    1bd4:	sub	sp, sp, #16
    1bd8:	str	r0, [fp, #-8]
    1bdc:	str	r1, [fp, #-12]
    1be0:	str	r2, [fp, #-16]
    1be4:	str	r3, [fp, #-20]	; 0xffffffec
    1be8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bec:	ldr	r2, [fp, #-16]
    1bf0:	ldr	r1, [fp, #-12]
    1bf4:	ldr	r0, [fp, #-8]
    1bf8:	bl	1000 <read_partial_array>
    1bfc:	mov	r3, r0
    1c00:	mov	r0, r3
    1c04:	sub	sp, fp, #4
    1c08:	pop	{fp, pc}
