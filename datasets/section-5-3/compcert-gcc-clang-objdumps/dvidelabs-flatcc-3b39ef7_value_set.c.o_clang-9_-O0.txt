
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/value_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fb_value_set_clear>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	str	r0, [sp, #4]
  10:	ldr	r0, [sp, #4]
  14:	bl	20 <ht_clear>
  18:	mov	sp, fp
  1c:	pop	{fp, pc}

00000020 <ht_clear>:
  20:	push	{fp, lr}
  24:	mov	fp, sp
  28:	sub	sp, sp, #8
  2c:	str	r0, [sp, #4]
  30:	ldr	r0, [sp, #4]
  34:	ldr	r0, [r0]
  38:	movw	r1, #0
  3c:	cmp	r0, r1
  40:	beq	50 <ht_clear+0x30>
  44:	ldr	r0, [sp, #4]
  48:	ldr	r0, [r0]
  4c:	bl	0 <free>
  50:	ldr	r0, [sp, #4]
  54:	movw	r1, #0
  58:	and	r1, r1, #255	; 0xff
  5c:	movw	r2, #16
  60:	bl	0 <memset>
  64:	mov	sp, fp
  68:	pop	{fp, pc}

0000006c <fb_value_set_destroy>:
  6c:	push	{fp, lr}
  70:	mov	fp, sp
  74:	sub	sp, sp, #16
  78:	str	r0, [fp, #-4]
  7c:	str	r1, [sp, #8]
  80:	str	r2, [sp, #4]
  84:	ldr	r0, [sp, #8]
  88:	movw	r1, #0
  8c:	cmp	r0, r1
  90:	beq	a4 <fb_value_set_destroy+0x38>
  94:	ldr	r0, [fp, #-4]
  98:	ldr	r1, [sp, #8]
  9c:	ldr	r2, [sp, #4]
  a0:	bl	b4 <ht_visit>
  a4:	ldr	r0, [fp, #-4]
  a8:	bl	20 <ht_clear>
  ac:	mov	sp, fp
  b0:	pop	{fp, pc}

000000b4 <ht_visit>:
  b4:	push	{fp, lr}
  b8:	mov	fp, sp
  bc:	sub	sp, sp, #32
  c0:	str	r0, [fp, #-4]
  c4:	str	r1, [fp, #-8]
  c8:	str	r2, [fp, #-12]
  cc:	ldr	r0, [fp, #-4]
  d0:	ldr	r0, [r0]
  d4:	str	r0, [sp, #12]
  d8:	movw	r0, #0
  dc:	str	r0, [sp, #16]
  e0:	ldr	r0, [sp, #16]
  e4:	ldr	r1, [fp, #-4]
  e8:	ldr	r1, [r1, #12]
  ec:	cmp	r0, r1
  f0:	bcs	15c <ht_visit+0xa8>
  f4:	ldr	r0, [sp, #12]
  f8:	ldr	r1, [sp, #16]
  fc:	add	r0, r0, r1, lsl #2
 100:	ldr	r0, [r0]
 104:	str	r0, [sp, #8]
 108:	ldr	r0, [sp, #8]
 10c:	movw	r1, #0
 110:	cmp	r0, r1
 114:	beq	148 <ht_visit+0x94>
 118:	ldr	r0, [sp, #8]
 11c:	movw	r1, #2
 120:	cmp	r0, r1
 124:	beq	148 <ht_visit+0x94>
 128:	ldr	r0, [fp, #-8]
 12c:	ldr	r1, [fp, #-12]
 130:	ldr	r2, [sp, #8]
 134:	str	r0, [sp, #4]
 138:	mov	r0, r1
 13c:	mov	r1, r2
 140:	ldr	r2, [sp, #4]
 144:	blx	r2
 148:	b	14c <ht_visit+0x98>
 14c:	ldr	r0, [sp, #16]
 150:	add	r0, r0, #1
 154:	str	r0, [sp, #16]
 158:	b	e0 <ht_visit+0x2c>
 15c:	mov	sp, fp
 160:	pop	{fp, pc}

00000164 <fb_value_set_init>:
 164:	push	{fp, lr}
 168:	mov	fp, sp
 16c:	sub	sp, sp, #8
 170:	str	r0, [sp, #4]
 174:	str	r1, [sp]
 178:	ldr	r0, [sp, #4]
 17c:	ldr	r1, [sp]
 180:	bl	18c <ht_init>
 184:	mov	sp, fp
 188:	pop	{fp, pc}

0000018c <ht_init>:
 18c:	push	{fp, lr}
 190:	mov	fp, sp
 194:	sub	sp, sp, #16
 198:	str	r0, [sp, #8]
 19c:	str	r1, [sp, #4]
 1a0:	movw	r0, #4
 1a4:	str	r0, [sp]
 1a8:	ldr	r0, [sp, #4]
 1ac:	ldr	r1, [sp]
 1b0:	mov	r2, #179	; 0xb3
 1b4:	mul	r1, r1, r2
 1b8:	mov	r2, r1
 1bc:	lsr	r1, r1, #8
 1c0:	cmp	r0, r1
 1c4:	bls	1d8 <ht_init+0x4c>
 1c8:	ldr	r0, [sp]
 1cc:	lsl	r0, r0, #1
 1d0:	str	r0, [sp]
 1d4:	b	1a8 <ht_init+0x1c>
 1d8:	ldr	r0, [sp]
 1dc:	movw	r1, #4
 1e0:	bl	0 <calloc>
 1e4:	ldr	r1, [sp, #8]
 1e8:	str	r0, [r1]
 1ec:	ldr	r0, [sp, #8]
 1f0:	ldr	r0, [r0]
 1f4:	movw	r1, #0
 1f8:	cmp	r0, r1
 1fc:	bne	20c <ht_init+0x80>
 200:	mvn	r0, #0
 204:	str	r0, [fp, #-4]
 208:	b	230 <ht_init+0xa4>
 20c:	ldr	r0, [sp, #8]
 210:	movw	r1, #0
 214:	str	r1, [r0, #4]
 218:	ldr	r0, [sp]
 21c:	ldr	r2, [sp, #8]
 220:	str	r0, [r2, #12]
 224:	ldr	r0, [sp, #8]
 228:	str	r1, [r0, #8]
 22c:	str	r1, [fp, #-4]
 230:	ldr	r0, [fp, #-4]
 234:	mov	sp, fp
 238:	pop	{fp, pc}

0000023c <fb_value_set_resize>:
 23c:	push	{fp, lr}
 240:	mov	fp, sp
 244:	sub	sp, sp, #8
 248:	str	r0, [sp, #4]
 24c:	str	r1, [sp]
 250:	ldr	r0, [sp, #4]
 254:	ldr	r1, [sp]
 258:	bl	264 <ht_resize>
 25c:	mov	sp, fp
 260:	pop	{fp, pc}

00000264 <ht_resize>:
 264:	push	{fp, lr}
 268:	mov	fp, sp
 26c:	sub	sp, sp, #56	; 0x38
 270:	str	r0, [fp, #-8]
 274:	str	r1, [fp, #-12]
 278:	ldr	r0, [fp, #-8]
 27c:	ldr	r0, [r0]
 280:	str	r0, [sp, #20]
 284:	ldr	r0, [fp, #-12]
 288:	ldr	r1, [fp, #-8]
 28c:	ldr	r1, [r1, #8]
 290:	cmp	r0, r1
 294:	bcs	2a4 <ht_resize+0x40>
 298:	ldr	r0, [fp, #-8]
 29c:	ldr	r0, [r0, #8]
 2a0:	str	r0, [fp, #-12]
 2a4:	ldr	r1, [fp, #-12]
 2a8:	add	r0, sp, #24
 2ac:	bl	18c <ht_init>
 2b0:	cmp	r0, #0
 2b4:	beq	2c4 <ht_resize+0x60>
 2b8:	mvn	r0, #0
 2bc:	str	r0, [fp, #-4]
 2c0:	b	3a4 <ht_resize+0x140>
 2c4:	movw	r0, #0
 2c8:	str	r0, [fp, #-16]
 2cc:	ldr	r0, [fp, #-16]
 2d0:	ldr	r1, [fp, #-8]
 2d4:	ldr	r1, [r1, #12]
 2d8:	cmp	r0, r1
 2dc:	bcs	370 <ht_resize+0x10c>
 2e0:	ldr	r0, [sp, #20]
 2e4:	ldr	r1, [fp, #-16]
 2e8:	add	r0, r0, r1, lsl #2
 2ec:	ldr	r0, [r0]
 2f0:	str	r0, [sp, #16]
 2f4:	ldr	r0, [sp, #16]
 2f8:	movw	r1, #0
 2fc:	cmp	r0, r1
 300:	beq	35c <ht_resize+0xf8>
 304:	ldr	r0, [sp, #16]
 308:	movw	r1, #2
 30c:	cmp	r0, r1
 310:	beq	35c <ht_resize+0xf8>
 314:	ldr	r0, [sp, #16]
 318:	bl	7c4 <ht_key>
 31c:	ldr	r1, [sp, #16]
 320:	str	r0, [sp, #12]
 324:	mov	r0, r1
 328:	bl	7d8 <ht_key_len>
 32c:	ldr	r1, [sp, #16]
 330:	add	r2, sp, #24
 334:	str	r0, [sp, #8]
 338:	mov	r0, r2
 33c:	ldr	r2, [sp, #12]
 340:	str	r1, [sp, #4]
 344:	mov	r1, r2
 348:	ldr	r2, [sp, #8]
 34c:	ldr	r3, [sp, #4]
 350:	movw	ip, #3
 354:	str	ip, [sp]
 358:	bl	3f8 <ht_insert>
 35c:	b	360 <ht_resize+0xfc>
 360:	ldr	r0, [fp, #-16]
 364:	add	r0, r0, #1
 368:	str	r0, [fp, #-16]
 36c:	b	2cc <ht_resize+0x68>
 370:	ldr	r0, [fp, #-8]
 374:	bl	20 <ht_clear>
 378:	ldr	r0, [fp, #-8]
 37c:	ldr	r1, [sp, #24]
 380:	str	r1, [r0]
 384:	ldr	r1, [sp, #28]
 388:	str	r1, [r0, #4]
 38c:	ldr	r1, [sp, #32]
 390:	str	r1, [r0, #8]
 394:	ldr	r1, [sp, #36]	; 0x24
 398:	str	r1, [r0, #12]
 39c:	movw	r0, #0
 3a0:	str	r0, [fp, #-4]
 3a4:	ldr	r0, [fp, #-4]
 3a8:	mov	sp, fp
 3ac:	pop	{fp, pc}

000003b0 <fb_value_set_insert>:
 3b0:	push	{fp, lr}
 3b4:	mov	fp, sp
 3b8:	sub	sp, sp, #24
 3bc:	ldr	ip, [fp, #8]
 3c0:	str	r0, [fp, #-4]
 3c4:	str	r1, [fp, #-8]
 3c8:	str	r2, [sp, #12]
 3cc:	str	r3, [sp, #8]
 3d0:	ldr	r0, [fp, #-4]
 3d4:	ldr	r1, [fp, #-8]
 3d8:	ldr	r2, [sp, #12]
 3dc:	ldr	r3, [sp, #8]
 3e0:	ldr	lr, [fp, #8]
 3e4:	str	lr, [sp]
 3e8:	str	ip, [sp, #4]
 3ec:	bl	3f8 <ht_insert>
 3f0:	mov	sp, fp
 3f4:	pop	{fp, pc}

000003f8 <ht_insert>:
 3f8:	push	{fp, lr}
 3fc:	mov	fp, sp
 400:	sub	sp, sp, #56	; 0x38
 404:	ldr	ip, [fp, #8]
 408:	str	r0, [fp, #-8]
 40c:	str	r1, [fp, #-12]
 410:	str	r2, [fp, #-16]
 414:	str	r3, [fp, #-20]	; 0xffffffec
 418:	movw	r0, #0
 41c:	str	r0, [sp, #8]
 420:	ldr	r1, [fp, #-20]	; 0xffffffec
 424:	cmp	r1, r0
 428:	beq	430 <ht_insert+0x38>
 42c:	b	450 <ht_insert+0x58>
 430:	movw	r0, #0
 434:	movt	r0, #0
 438:	movw	r1, #0
 43c:	movt	r1, #0
 440:	movw	r2, #114	; 0x72
 444:	movw	r3, #0
 448:	movt	r3, #0
 44c:	bl	0 <__assert_fail>
 450:	ldr	r0, [fp, #-20]	; 0xffffffec
 454:	movw	r1, #2
 458:	cmp	r0, r1
 45c:	beq	464 <ht_insert+0x6c>
 460:	b	484 <ht_insert+0x8c>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	movw	r1, #0
 470:	movt	r1, #0
 474:	movw	r2, #115	; 0x73
 478:	movw	r3, #0
 47c:	movt	r3, #0
 480:	bl	0 <__assert_fail>
 484:	ldr	r0, [fp, #-20]	; 0xffffffec
 488:	movw	r1, #1
 48c:	cmp	r0, r1
 490:	beq	498 <ht_insert+0xa0>
 494:	b	4b8 <ht_insert+0xc0>
 498:	movw	r0, #0
 49c:	movt	r0, #0
 4a0:	movw	r1, #0
 4a4:	movt	r1, #0
 4a8:	movw	r2, #116	; 0x74
 4ac:	movw	r3, #0
 4b0:	movt	r3, #0
 4b4:	bl	0 <__assert_fail>
 4b8:	ldr	r0, [fp, #-8]
 4bc:	ldr	r1, [r0, #8]
 4c0:	ldr	r0, [r0, #12]
 4c4:	mov	r2, #179	; 0xb3
 4c8:	mul	r0, r0, r2
 4cc:	mov	r2, r0
 4d0:	lsr	r0, r0, #8
 4d4:	cmp	r1, r0
 4d8:	bcc	528 <ht_insert+0x130>
 4dc:	ldr	r0, [fp, #-8]
 4e0:	ldr	r1, [r0, #8]
 4e4:	lsl	r1, r1, #1
 4e8:	bl	264 <ht_resize>
 4ec:	cmp	r0, #0
 4f0:	beq	524 <ht_insert+0x12c>
 4f4:	movw	r0, #0
 4f8:	movt	r0, #0
 4fc:	ldr	r0, [r0]
 500:	movw	r1, #0
 504:	movt	r1, #0
 508:	movw	r2, #0
 50c:	movt	r2, #0
 510:	bl	0 <fprintf>
 514:	movw	r1, #1
 518:	str	r0, [sp, #4]
 51c:	mov	r0, r1
 520:	bl	0 <exit>
 524:	b	528 <ht_insert+0x130>
 528:	ldr	r0, [fp, #-8]
 52c:	ldr	r0, [r0]
 530:	str	r0, [fp, #-24]	; 0xffffffe8
 534:	ldr	r0, [fp, #-8]
 538:	ldr	r0, [r0, #12]
 53c:	sub	r0, r0, #1
 540:	str	r0, [sp, #28]
 544:	ldr	r0, [fp, #-12]
 548:	ldr	r1, [fp, #-16]
 54c:	bl	b74 <value_hash_function>
 550:	str	r0, [sp, #16]
 554:	movw	r0, #0
 558:	str	r0, [sp, #24]
 55c:	ldr	r0, [sp, #16]
 560:	ldr	r1, [sp, #24]
 564:	add	r0, r0, r1
 568:	ldr	r1, [sp, #28]
 56c:	and	r0, r0, r1
 570:	str	r0, [sp, #20]
 574:	ldr	r0, [fp, #8]
 578:	cmp	r0, #2
 57c:	beq	58c <ht_insert+0x194>
 580:	ldr	r0, [fp, #8]
 584:	cmp	r0, #3
 588:	bne	638 <ht_insert+0x240>
 58c:	ldr	r0, [fp, #-8]
 590:	ldr	r1, [r0, #8]
 594:	add	r1, r1, #1
 598:	str	r1, [r0, #8]
 59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5a0:	ldr	r1, [sp, #20]
 5a4:	add	r0, r0, r1, lsl #2
 5a8:	ldr	r0, [r0]
 5ac:	movw	r1, #0
 5b0:	cmp	r0, r1
 5b4:	movw	r0, #0
 5b8:	str	r0, [sp]
 5bc:	beq	5e4 <ht_insert+0x1ec>
 5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5c4:	ldr	r1, [sp, #20]
 5c8:	add	r0, r0, r1, lsl #2
 5cc:	ldr	r0, [r0]
 5d0:	movw	r1, #2
 5d4:	cmp	r0, r1
 5d8:	movw	r0, #0
 5dc:	movne	r0, #1
 5e0:	str	r0, [sp]
 5e4:	ldr	r0, [sp]
 5e8:	tst	r0, #1
 5ec:	beq	618 <ht_insert+0x220>
 5f0:	ldr	r0, [sp, #24]
 5f4:	add	r0, r0, #1
 5f8:	str	r0, [sp, #24]
 5fc:	ldr	r0, [sp, #16]
 600:	ldr	r1, [sp, #24]
 604:	add	r0, r0, r1
 608:	ldr	r1, [sp, #28]
 60c:	and	r0, r0, r1
 610:	str	r0, [sp, #20]
 614:	b	59c <ht_insert+0x1a4>
 618:	ldr	r0, [fp, #-20]	; 0xffffffec
 61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 620:	ldr	r2, [sp, #20]
 624:	add	r1, r1, r2, lsl #2
 628:	str	r0, [r1]
 62c:	movw	r0, #0
 630:	str	r0, [fp, #-4]
 634:	b	744 <ht_insert+0x34c>
 638:	b	63c <ht_insert+0x244>
 63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 640:	ldr	r1, [sp, #20]
 644:	add	r0, r0, r1, lsl #2
 648:	ldr	r0, [r0]
 64c:	str	r0, [sp, #12]
 650:	movw	r1, #0
 654:	cmp	r0, r1
 658:	beq	700 <ht_insert+0x308>
 65c:	ldr	r0, [sp, #12]
 660:	movw	r1, #2
 664:	cmp	r0, r1
 668:	bne	690 <ht_insert+0x298>
 66c:	ldr	r0, [sp, #8]
 670:	movw	r1, #0
 674:	cmp	r0, r1
 678:	bne	68c <ht_insert+0x294>
 67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 680:	ldr	r1, [sp, #20]
 684:	add	r0, r0, r1, lsl #2
 688:	str	r0, [sp, #8]
 68c:	b	6d8 <ht_insert+0x2e0>
 690:	ldr	r0, [fp, #-12]
 694:	ldr	r1, [fp, #-16]
 698:	ldr	r2, [sp, #12]
 69c:	bl	c40 <ht_match>
 6a0:	cmp	r0, #0
 6a4:	beq	6d4 <ht_insert+0x2dc>
 6a8:	ldr	r0, [fp, #8]
 6ac:	cmp	r0, #0
 6b0:	bne	6c8 <ht_insert+0x2d0>
 6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
 6b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
 6bc:	ldr	r2, [sp, #20]
 6c0:	add	r1, r1, r2, lsl #2
 6c4:	str	r0, [r1]
 6c8:	ldr	r0, [sp, #12]
 6cc:	str	r0, [fp, #-4]
 6d0:	b	744 <ht_insert+0x34c>
 6d4:	b	6d8 <ht_insert+0x2e0>
 6d8:	ldr	r0, [sp, #24]
 6dc:	add	r0, r0, #1
 6e0:	str	r0, [sp, #24]
 6e4:	ldr	r0, [sp, #16]
 6e8:	ldr	r1, [sp, #24]
 6ec:	add	r0, r0, r1
 6f0:	ldr	r1, [sp, #28]
 6f4:	and	r0, r0, r1
 6f8:	str	r0, [sp, #20]
 6fc:	b	63c <ht_insert+0x244>
 700:	ldr	r0, [sp, #8]
 704:	movw	r1, #0
 708:	cmp	r0, r1
 70c:	bne	720 <ht_insert+0x328>
 710:	ldr	r0, [fp, #-24]	; 0xffffffe8
 714:	ldr	r1, [sp, #20]
 718:	add	r0, r0, r1, lsl #2
 71c:	str	r0, [sp, #8]
 720:	ldr	r0, [fp, #-8]
 724:	ldr	r1, [r0, #8]
 728:	add	r1, r1, #1
 72c:	str	r1, [r0, #8]
 730:	ldr	r0, [fp, #-20]	; 0xffffffec
 734:	ldr	r1, [sp, #8]
 738:	str	r0, [r1]
 73c:	movw	r0, #0
 740:	str	r0, [fp, #-4]
 744:	ldr	r0, [fp, #-4]
 748:	mov	sp, fp
 74c:	pop	{fp, pc}

00000750 <fb_value_set_insert_item>:
 750:	push	{fp, lr}
 754:	mov	fp, sp
 758:	sub	sp, sp, #32
 75c:	str	r0, [fp, #-4]
 760:	str	r1, [fp, #-8]
 764:	str	r2, [fp, #-12]
 768:	ldr	r0, [fp, #-4]
 76c:	ldr	r1, [fp, #-8]
 770:	str	r0, [sp, #16]
 774:	mov	r0, r1
 778:	bl	7c4 <ht_key>
 77c:	ldr	r1, [fp, #-8]
 780:	str	r0, [sp, #12]
 784:	mov	r0, r1
 788:	bl	7d8 <ht_key_len>
 78c:	ldr	r3, [fp, #-8]
 790:	ldr	r1, [fp, #-12]
 794:	ldr	r2, [sp, #16]
 798:	str	r0, [sp, #8]
 79c:	mov	r0, r2
 7a0:	ldr	ip, [sp, #12]
 7a4:	str	r1, [sp, #4]
 7a8:	mov	r1, ip
 7ac:	ldr	r2, [sp, #8]
 7b0:	ldr	lr, [sp, #4]
 7b4:	str	lr, [sp]
 7b8:	bl	3f8 <ht_insert>
 7bc:	mov	sp, fp
 7c0:	pop	{fp, pc}

000007c4 <ht_key>:
 7c4:	sub	sp, sp, #4
 7c8:	str	r0, [sp]
 7cc:	ldr	r0, [sp]
 7d0:	add	sp, sp, #4
 7d4:	bx	lr

000007d8 <ht_key_len>:
 7d8:	sub	sp, sp, #4
 7dc:	str	r0, [sp]
 7e0:	movw	r0, #0
 7e4:	add	sp, sp, #4
 7e8:	bx	lr

000007ec <fb_value_set_find>:
 7ec:	push	{fp, lr}
 7f0:	mov	fp, sp
 7f4:	sub	sp, sp, #16
 7f8:	str	r0, [fp, #-4]
 7fc:	str	r1, [sp, #8]
 800:	str	r2, [sp, #4]
 804:	ldr	r0, [fp, #-4]
 808:	ldr	r1, [sp, #8]
 80c:	ldr	r2, [sp, #4]
 810:	bl	81c <ht_find>
 814:	mov	sp, fp
 818:	pop	{fp, pc}

0000081c <ht_find>:
 81c:	push	{fp, lr}
 820:	mov	fp, sp
 824:	sub	sp, sp, #40	; 0x28
 828:	str	r0, [fp, #-8]
 82c:	str	r1, [fp, #-12]
 830:	str	r2, [fp, #-16]
 834:	ldr	r0, [fp, #-8]
 838:	ldr	r0, [r0]
 83c:	str	r0, [sp, #20]
 840:	ldr	r0, [sp, #20]
 844:	movw	r1, #0
 848:	cmp	r0, r1
 84c:	bne	85c <ht_find+0x40>
 850:	movw	r0, #0
 854:	str	r0, [fp, #-4]
 858:	b	920 <ht_find+0x104>
 85c:	ldr	r0, [fp, #-8]
 860:	ldr	r0, [r0, #12]
 864:	sub	r0, r0, #1
 868:	str	r0, [sp, #16]
 86c:	ldr	r0, [fp, #-12]
 870:	ldr	r1, [fp, #-16]
 874:	bl	b74 <value_hash_function>
 878:	str	r0, [sp, #4]
 87c:	movw	r0, #0
 880:	str	r0, [sp, #12]
 884:	ldr	r0, [sp, #4]
 888:	ldr	r1, [sp, #12]
 88c:	add	r0, r0, r1
 890:	ldr	r1, [sp, #16]
 894:	and	r0, r0, r1
 898:	str	r0, [sp, #8]
 89c:	ldr	r0, [sp, #20]
 8a0:	ldr	r1, [sp, #8]
 8a4:	add	r0, r0, r1, lsl #2
 8a8:	ldr	r0, [r0]
 8ac:	str	r0, [sp]
 8b0:	movw	r1, #0
 8b4:	cmp	r0, r1
 8b8:	beq	918 <ht_find+0xfc>
 8bc:	ldr	r0, [sp]
 8c0:	movw	r1, #2
 8c4:	cmp	r0, r1
 8c8:	beq	8f0 <ht_find+0xd4>
 8cc:	ldr	r0, [fp, #-12]
 8d0:	ldr	r1, [fp, #-16]
 8d4:	ldr	r2, [sp]
 8d8:	bl	c40 <ht_match>
 8dc:	cmp	r0, #0
 8e0:	beq	8f0 <ht_find+0xd4>
 8e4:	ldr	r0, [sp]
 8e8:	str	r0, [fp, #-4]
 8ec:	b	920 <ht_find+0x104>
 8f0:	ldr	r0, [sp, #12]
 8f4:	add	r0, r0, #1
 8f8:	str	r0, [sp, #12]
 8fc:	ldr	r0, [sp, #4]
 900:	ldr	r1, [sp, #12]
 904:	add	r0, r0, r1
 908:	ldr	r1, [sp, #16]
 90c:	and	r0, r0, r1
 910:	str	r0, [sp, #8]
 914:	b	89c <ht_find+0x80>
 918:	movw	r0, #0
 91c:	str	r0, [fp, #-4]
 920:	ldr	r0, [fp, #-4]
 924:	mov	sp, fp
 928:	pop	{fp, pc}

0000092c <fb_value_set_find_item>:
 92c:	push	{fp, lr}
 930:	mov	fp, sp
 934:	sub	sp, sp, #24
 938:	str	r0, [fp, #-4]
 93c:	str	r1, [fp, #-8]
 940:	ldr	r0, [fp, #-4]
 944:	ldr	r1, [fp, #-8]
 948:	str	r0, [sp, #12]
 94c:	mov	r0, r1
 950:	bl	7c4 <ht_key>
 954:	ldr	r1, [fp, #-8]
 958:	str	r0, [sp, #8]
 95c:	mov	r0, r1
 960:	bl	7d8 <ht_key_len>
 964:	ldr	r1, [sp, #12]
 968:	str	r0, [sp, #4]
 96c:	mov	r0, r1
 970:	ldr	r1, [sp, #8]
 974:	ldr	r2, [sp, #4]
 978:	bl	81c <ht_find>
 97c:	mov	sp, fp
 980:	pop	{fp, pc}

00000984 <fb_value_set_remove>:
 984:	push	{fp, lr}
 988:	mov	fp, sp
 98c:	sub	sp, sp, #16
 990:	str	r0, [fp, #-4]
 994:	str	r1, [sp, #8]
 998:	str	r2, [sp, #4]
 99c:	ldr	r0, [fp, #-4]
 9a0:	ldr	r1, [sp, #8]
 9a4:	ldr	r2, [sp, #4]
 9a8:	bl	9b4 <ht_remove>
 9ac:	mov	sp, fp
 9b0:	pop	{fp, pc}

000009b4 <ht_remove>:
 9b4:	push	{fp, lr}
 9b8:	mov	fp, sp
 9bc:	sub	sp, sp, #40	; 0x28
 9c0:	str	r0, [fp, #-8]
 9c4:	str	r1, [fp, #-12]
 9c8:	str	r2, [fp, #-16]
 9cc:	ldr	r0, [fp, #-8]
 9d0:	ldr	r0, [r0]
 9d4:	str	r0, [sp, #20]
 9d8:	ldr	r0, [sp, #20]
 9dc:	movw	r1, #0
 9e0:	cmp	r0, r1
 9e4:	bne	9f4 <ht_remove+0x40>
 9e8:	movw	r0, #0
 9ec:	str	r0, [fp, #-4]
 9f0:	b	ae0 <ht_remove+0x12c>
 9f4:	ldr	r0, [fp, #-8]
 9f8:	ldr	r0, [r0, #12]
 9fc:	sub	r0, r0, #1
 a00:	str	r0, [sp, #16]
 a04:	ldr	r0, [fp, #-12]
 a08:	ldr	r1, [fp, #-16]
 a0c:	bl	b74 <value_hash_function>
 a10:	str	r0, [sp, #4]
 a14:	movw	r0, #0
 a18:	str	r0, [sp, #12]
 a1c:	ldr	r0, [sp, #4]
 a20:	ldr	r1, [sp, #12]
 a24:	add	r0, r0, r1
 a28:	ldr	r1, [sp, #16]
 a2c:	and	r0, r0, r1
 a30:	str	r0, [sp, #8]
 a34:	ldr	r0, [sp, #20]
 a38:	ldr	r1, [sp, #8]
 a3c:	add	r0, r0, r1, lsl #2
 a40:	ldr	r0, [r0]
 a44:	str	r0, [sp]
 a48:	movw	r1, #0
 a4c:	cmp	r0, r1
 a50:	beq	ad8 <ht_remove+0x124>
 a54:	ldr	r0, [sp]
 a58:	movw	r1, #2
 a5c:	cmp	r0, r1
 a60:	beq	ab0 <ht_remove+0xfc>
 a64:	ldr	r0, [fp, #-12]
 a68:	ldr	r1, [fp, #-16]
 a6c:	ldr	r2, [sp]
 a70:	bl	c40 <ht_match>
 a74:	cmp	r0, #0
 a78:	beq	ab0 <ht_remove+0xfc>
 a7c:	ldr	r0, [sp, #20]
 a80:	ldr	r1, [sp, #8]
 a84:	add	r0, r0, r1, lsl #2
 a88:	movw	r1, #2
 a8c:	str	r1, [r0]
 a90:	ldr	r0, [fp, #-8]
 a94:	ldr	r1, [r0, #8]
 a98:	mvn	r2, #0
 a9c:	add	r1, r1, r2
 aa0:	str	r1, [r0, #8]
 aa4:	ldr	r0, [sp]
 aa8:	str	r0, [fp, #-4]
 aac:	b	ae0 <ht_remove+0x12c>
 ab0:	ldr	r0, [sp, #12]
 ab4:	add	r0, r0, #1
 ab8:	str	r0, [sp, #12]
 abc:	ldr	r0, [sp, #4]
 ac0:	ldr	r1, [sp, #12]
 ac4:	add	r0, r0, r1
 ac8:	ldr	r1, [sp, #16]
 acc:	and	r0, r0, r1
 ad0:	str	r0, [sp, #8]
 ad4:	b	a34 <ht_remove+0x80>
 ad8:	movw	r0, #0
 adc:	str	r0, [fp, #-4]
 ae0:	ldr	r0, [fp, #-4]
 ae4:	mov	sp, fp
 ae8:	pop	{fp, pc}

00000aec <fb_value_set_remove_item>:
 aec:	push	{fp, lr}
 af0:	mov	fp, sp
 af4:	sub	sp, sp, #24
 af8:	str	r0, [fp, #-4]
 afc:	str	r1, [fp, #-8]
 b00:	ldr	r0, [fp, #-4]
 b04:	ldr	r1, [fp, #-8]
 b08:	str	r0, [sp, #12]
 b0c:	mov	r0, r1
 b10:	bl	7c4 <ht_key>
 b14:	ldr	r1, [fp, #-8]
 b18:	str	r0, [sp, #8]
 b1c:	mov	r0, r1
 b20:	bl	7d8 <ht_key_len>
 b24:	ldr	r1, [sp, #12]
 b28:	str	r0, [sp, #4]
 b2c:	mov	r0, r1
 b30:	ldr	r1, [sp, #8]
 b34:	ldr	r2, [sp, #4]
 b38:	bl	9b4 <ht_remove>
 b3c:	mov	sp, fp
 b40:	pop	{fp, pc}

00000b44 <fb_value_set_visit>:
 b44:	push	{fp, lr}
 b48:	mov	fp, sp
 b4c:	sub	sp, sp, #16
 b50:	str	r0, [fp, #-4]
 b54:	str	r1, [sp, #8]
 b58:	str	r2, [sp, #4]
 b5c:	ldr	r0, [fp, #-4]
 b60:	ldr	r1, [sp, #8]
 b64:	ldr	r2, [sp, #4]
 b68:	bl	b4 <ht_visit>
 b6c:	mov	sp, fp
 b70:	pop	{fp, pc}

00000b74 <value_hash_function>:
 b74:	push	{fp, lr}
 b78:	mov	fp, sp
 b7c:	sub	sp, sp, #24
 b80:	str	r0, [fp, #-8]
 b84:	str	r1, [sp, #12]
 b88:	ldr	r0, [fp, #-8]
 b8c:	str	r0, [sp, #8]
 b90:	ldr	r0, [sp, #8]
 b94:	ldrh	r0, [r0, #8]
 b98:	cmp	r0, #4
 b9c:	str	r0, [sp, #4]
 ba0:	beq	bc8 <value_hash_function+0x54>
 ba4:	b	ba8 <value_hash_function+0x34>
 ba8:	ldr	r0, [sp, #4]
 bac:	cmp	r0, #5
 bb0:	beq	be8 <value_hash_function+0x74>
 bb4:	b	bb8 <value_hash_function+0x44>
 bb8:	ldr	r0, [sp, #4]
 bbc:	cmp	r0, #6
 bc0:	beq	c08 <value_hash_function+0x94>
 bc4:	b	c2c <value_hash_function+0xb8>
 bc8:	ldr	r0, [sp, #8]
 bcc:	ldr	r1, [r0]
 bd0:	ldrh	r0, [r0, #8]
 bd4:	eor	r0, r1, r0
 bd8:	movw	r1, #8
 bdc:	bl	d60 <ht_int_hash_function>
 be0:	str	r0, [fp, #-4]
 be4:	b	c34 <value_hash_function+0xc0>
 be8:	ldr	r0, [sp, #8]
 bec:	ldr	r1, [r0]
 bf0:	ldrh	r0, [r0, #8]
 bf4:	eor	r0, r1, r0
 bf8:	movw	r1, #8
 bfc:	bl	d60 <ht_int_hash_function>
 c00:	str	r0, [fp, #-4]
 c04:	b	c34 <value_hash_function+0xc0>
 c08:	ldr	r0, [sp, #8]
 c0c:	ldrb	r0, [r0]
 c10:	ldr	r1, [sp, #8]
 c14:	ldrh	r1, [r1, #8]
 c18:	eor	r0, r0, r1
 c1c:	movw	r1, #1
 c20:	bl	d60 <ht_int_hash_function>
 c24:	str	r0, [fp, #-4]
 c28:	b	c34 <value_hash_function+0xc0>
 c2c:	movw	r0, #0
 c30:	str	r0, [fp, #-4]
 c34:	ldr	r0, [fp, #-4]
 c38:	mov	sp, fp
 c3c:	pop	{fp, pc}

00000c40 <ht_match>:
 c40:	sub	sp, sp, #24
 c44:	str	r0, [sp, #16]
 c48:	str	r1, [sp, #12]
 c4c:	str	r2, [sp, #8]
 c50:	ldr	r0, [sp, #16]
 c54:	str	r0, [sp, #4]
 c58:	ldr	r0, [sp, #4]
 c5c:	ldrh	r0, [r0, #8]
 c60:	ldr	r1, [sp, #8]
 c64:	ldrh	r1, [r1, #8]
 c68:	cmp	r0, r1
 c6c:	beq	c7c <ht_match+0x3c>
 c70:	movw	r0, #0
 c74:	str	r0, [sp, #20]
 c78:	b	d54 <ht_match+0x114>
 c7c:	ldr	r0, [sp, #4]
 c80:	ldrh	r0, [r0, #8]
 c84:	cmp	r0, #4
 c88:	str	r0, [sp]
 c8c:	beq	cb4 <ht_match+0x74>
 c90:	b	c94 <ht_match+0x54>
 c94:	ldr	r0, [sp]
 c98:	cmp	r0, #5
 c9c:	beq	cec <ht_match+0xac>
 ca0:	b	ca4 <ht_match+0x64>
 ca4:	ldr	r0, [sp]
 ca8:	cmp	r0, #6
 cac:	beq	d24 <ht_match+0xe4>
 cb0:	b	d4c <ht_match+0x10c>
 cb4:	ldr	r0, [sp, #4]
 cb8:	ldr	r1, [r0]
 cbc:	ldr	r0, [r0, #4]
 cc0:	ldr	r2, [sp, #8]
 cc4:	ldr	r3, [r2]
 cc8:	ldr	r2, [r2, #4]
 ccc:	eor	r0, r0, r2
 cd0:	eor	r1, r1, r3
 cd4:	orr	r0, r1, r0
 cd8:	clz	r0, r0
 cdc:	lsr	r0, r0, #5
 ce0:	and	r0, r0, #1
 ce4:	str	r0, [sp, #20]
 ce8:	b	d54 <ht_match+0x114>
 cec:	ldr	r0, [sp, #4]
 cf0:	ldr	r1, [r0]
 cf4:	ldr	r0, [r0, #4]
 cf8:	ldr	r2, [sp, #8]
 cfc:	ldr	r3, [r2]
 d00:	ldr	r2, [r2, #4]
 d04:	eor	r0, r0, r2
 d08:	eor	r1, r1, r3
 d0c:	orr	r0, r1, r0
 d10:	clz	r0, r0
 d14:	lsr	r0, r0, #5
 d18:	and	r0, r0, #1
 d1c:	str	r0, [sp, #20]
 d20:	b	d54 <ht_match+0x114>
 d24:	ldr	r0, [sp, #4]
 d28:	ldrb	r0, [r0]
 d2c:	ldr	r1, [sp, #8]
 d30:	ldrb	r1, [r1]
 d34:	cmp	r0, r1
 d38:	movw	r0, #0
 d3c:	moveq	r0, #1
 d40:	and	r0, r0, #1
 d44:	str	r0, [sp, #20]
 d48:	b	d54 <ht_match+0x114>
 d4c:	movw	r0, #0
 d50:	str	r0, [sp, #20]
 d54:	ldr	r0, [sp, #20]
 d58:	add	sp, sp, #24
 d5c:	bx	lr

00000d60 <ht_int_hash_function>:
 d60:	sub	sp, sp, #8
 d64:	ldr	r2, [pc, #28]	; d88 <ht_int_hash_function+0x28>
 d68:	ldr	r3, [pc, #28]	; d8c <ht_int_hash_function+0x2c>
 d6c:	str	r0, [sp, #4]
 d70:	str	r1, [sp]
 d74:	ldr	r0, [sp, #4]
 d78:	eor	r0, r0, r3
 d7c:	mul	r0, r0, r2
 d80:	add	sp, sp, #8
 d84:	bx	lr
 d88:	.word	0x9e3779b1
 d8c:	.word	0x2f693b52
