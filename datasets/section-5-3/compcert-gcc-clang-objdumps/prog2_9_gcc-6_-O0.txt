
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109c4 <.init>:
   109c4:	push	{r3, lr}
   109c8:	bl	10af8 <_start@@Base+0x3c>
   109cc:	pop	{r3, pc}

Disassembly of section .plt:

000109d0 <calloc@plt-0x14>:
   109d0:	push	{lr}		; (str lr, [sp, #-4]!)
   109d4:	ldr	lr, [pc, #4]	; 109e0 <calloc@plt-0x4>
   109d8:	add	lr, pc, lr
   109dc:	ldr	pc, [lr, #8]!
   109e0:	andeq	r1, r1, r0, lsr #12

000109e4 <calloc@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1568]!	; 0x620

000109f0 <strcmp@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1560]!	; 0x618

000109fc <printf@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1552]!	; 0x610

00010a08 <__isoc99_fscanf@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1544]!	; 0x608

00010a14 <fopen@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1536]!	; 0x600

00010a20 <fflush@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a2c <free@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a38 <fgets@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a44 <strdup@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a50 <puts@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a5c <malloc@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a68 <__libc_start_main@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a74 <__gmon_start__@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a80 <feof@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a8c <strlen@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a98 <putchar@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa4 <fclose@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab0 <abort@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010abc <_start@@Base>:
   10abc:	mov	fp, #0
   10ac0:	mov	lr, #0
   10ac4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ac8:	mov	r2, sp
   10acc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ad0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ad4:	ldr	ip, [pc, #16]	; 10aec <_start@@Base+0x30>
   10ad8:	push	{ip}		; (str ip, [sp, #-4]!)
   10adc:	ldr	r0, [pc, #12]	; 10af0 <_start@@Base+0x34>
   10ae0:	ldr	r3, [pc, #12]	; 10af4 <_start@@Base+0x38>
   10ae4:	bl	10a68 <__libc_start_main@plt>
   10ae8:	bl	10ab0 <abort@plt>
   10aec:	andeq	r1, r1, ip, ror #19
   10af0:	andeq	r1, r1, ip, lsl r1
   10af4:	andeq	r1, r1, ip, lsl #19
   10af8:	ldr	r3, [pc, #20]	; 10b14 <_start@@Base+0x58>
   10afc:	ldr	r2, [pc, #20]	; 10b18 <_start@@Base+0x5c>
   10b00:	add	r3, pc, r3
   10b04:	ldr	r2, [r3, r2]
   10b08:	cmp	r2, #0
   10b0c:	bxeq	lr
   10b10:	b	10a74 <__gmon_start__@plt>
   10b14:	strdeq	r1, [r1], -r8
   10b18:	andeq	r0, r0, r4, asr r0
   10b1c:	ldr	r3, [pc, #28]	; 10b40 <_start@@Base+0x84>
   10b20:	ldr	r0, [pc, #28]	; 10b44 <_start@@Base+0x88>
   10b24:	sub	r3, r3, r0
   10b28:	cmp	r3, #6
   10b2c:	bxls	lr
   10b30:	ldr	r3, [pc, #16]	; 10b48 <_start@@Base+0x8c>
   10b34:	cmp	r3, #0
   10b38:	bxeq	lr
   10b3c:	bx	r3
   10b40:	andeq	r2, r2, r3, rrx
   10b44:	andeq	r2, r2, r0, rrx
   10b48:	andeq	r0, r0, r0
   10b4c:	ldr	r1, [pc, #36]	; 10b78 <_start@@Base+0xbc>
   10b50:	ldr	r0, [pc, #36]	; 10b7c <_start@@Base+0xc0>
   10b54:	sub	r1, r1, r0
   10b58:	asr	r1, r1, #2
   10b5c:	add	r1, r1, r1, lsr #31
   10b60:	asrs	r1, r1, #1
   10b64:	bxeq	lr
   10b68:	ldr	r3, [pc, #16]	; 10b80 <_start@@Base+0xc4>
   10b6c:	cmp	r3, #0
   10b70:	bxeq	lr
   10b74:	bx	r3
   10b78:	andeq	r2, r2, r0, rrx
   10b7c:	andeq	r2, r2, r0, rrx
   10b80:	andeq	r0, r0, r0
   10b84:	push	{r4, lr}
   10b88:	ldr	r4, [pc, #24]	; 10ba8 <_start@@Base+0xec>
   10b8c:	ldrb	r3, [r4]
   10b90:	cmp	r3, #0
   10b94:	popne	{r4, pc}
   10b98:	bl	10b1c <_start@@Base+0x60>
   10b9c:	mov	r3, #1
   10ba0:	strb	r3, [r4]
   10ba4:	pop	{r4, pc}
   10ba8:	andeq	r2, r2, r4, rrx
   10bac:	ldr	r0, [pc, #40]	; 10bdc <_start@@Base+0x120>
   10bb0:	ldr	r3, [r0]
   10bb4:	cmp	r3, #0
   10bb8:	bne	10bc0 <_start@@Base+0x104>
   10bbc:	b	10b4c <_start@@Base+0x90>
   10bc0:	ldr	r3, [pc, #24]	; 10be0 <_start@@Base+0x124>
   10bc4:	cmp	r3, #0
   10bc8:	beq	10bbc <_start@@Base+0x100>
   10bcc:	push	{r4, lr}
   10bd0:	blx	r3
   10bd4:	pop	{r4, lr}
   10bd8:	b	10b4c <_start@@Base+0x90>
   10bdc:	andeq	r1, r2, r4, lsl pc
   10be0:	andeq	r0, r0, r0

00010be4 <fp_insere@@Base>:
   10be4:	push	{fp, lr}
   10be8:	add	fp, sp, #4
   10bec:	sub	sp, sp, #32
   10bf0:	str	r0, [fp, #-24]	; 0xffffffe8
   10bf4:	str	r1, [fp, #-28]	; 0xffffffe4
   10bf8:	str	r2, [fp, #-32]	; 0xffffffe0
   10bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c00:	cmp	r3, #0
   10c04:	bne	10c10 <fp_insere@@Base+0x2c>
   10c08:	mvn	r3, #0
   10c0c:	b	10d38 <fp_insere@@Base+0x154>
   10c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c14:	ldr	r2, [r3]
   10c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c1c:	ldr	r3, [r3, #4]
   10c20:	cmp	r2, r3
   10c24:	bne	10c30 <fp_insere@@Base+0x4c>
   10c28:	mov	r3, #0
   10c2c:	b	10d38 <fp_insere@@Base+0x154>
   10c30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10c38:	bl	11618 <elemento_cria@@Base>
   10c3c:	str	r0, [fp, #-16]
   10c40:	mov	r3, #0
   10c44:	str	r3, [fp, #-8]
   10c48:	b	10c88 <fp_insere@@Base+0xa4>
   10c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c50:	ldr	r2, [r3, #8]
   10c54:	ldr	r3, [fp, #-8]
   10c58:	lsl	r3, r3, #2
   10c5c:	add	r3, r2, r3
   10c60:	ldr	r3, [r3]
   10c64:	ldr	r1, [fp, #-16]
   10c68:	mov	r0, r3
   10c6c:	bl	11684 <maior_que@@Base>
   10c70:	mov	r3, r0
   10c74:	cmp	r3, #0
   10c78:	beq	10ca0 <fp_insere@@Base+0xbc>
   10c7c:	ldr	r3, [fp, #-8]
   10c80:	add	r3, r3, #1
   10c84:	str	r3, [fp, #-8]
   10c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c8c:	ldr	r2, [r3]
   10c90:	ldr	r3, [fp, #-8]
   10c94:	cmp	r2, r3
   10c98:	bgt	10c4c <fp_insere@@Base+0x68>
   10c9c:	b	10ca4 <fp_insere@@Base+0xc0>
   10ca0:	nop			; (mov r0, r0)
   10ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ca8:	ldr	r3, [r3]
   10cac:	str	r3, [fp, #-12]
   10cb0:	b	10cf4 <fp_insere@@Base+0x110>
   10cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cb8:	ldr	r2, [r3, #8]
   10cbc:	ldr	r3, [fp, #-12]
   10cc0:	add	r3, r3, #1
   10cc4:	lsl	r3, r3, #2
   10cc8:	add	r3, r2, r3
   10ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10cd0:	ldr	r1, [r2, #8]
   10cd4:	ldr	r2, [fp, #-12]
   10cd8:	lsl	r2, r2, #2
   10cdc:	add	r2, r1, r2
   10ce0:	ldr	r2, [r2]
   10ce4:	str	r2, [r3]
   10ce8:	ldr	r3, [fp, #-12]
   10cec:	sub	r3, r3, #1
   10cf0:	str	r3, [fp, #-12]
   10cf4:	ldr	r2, [fp, #-12]
   10cf8:	ldr	r3, [fp, #-8]
   10cfc:	cmp	r2, r3
   10d00:	bge	10cb4 <fp_insere@@Base+0xd0>
   10d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d08:	ldr	r2, [r3, #8]
   10d0c:	ldr	r3, [fp, #-8]
   10d10:	lsl	r3, r3, #2
   10d14:	add	r3, r2, r3
   10d18:	ldr	r2, [fp, #-16]
   10d1c:	str	r2, [r3]
   10d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d24:	ldr	r3, [r3]
   10d28:	add	r2, r3, #1
   10d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d30:	str	r2, [r3]
   10d34:	mov	r3, #1
   10d38:	mov	r0, r3
   10d3c:	sub	sp, fp, #4
   10d40:	pop	{fp, pc}

00010d44 <fp_remove@@Base>:
   10d44:	push	{fp}		; (str fp, [sp, #-4]!)
   10d48:	add	fp, sp, #0
   10d4c:	sub	sp, sp, #20
   10d50:	str	r0, [fp, #-16]
   10d54:	ldr	r3, [fp, #-16]
   10d58:	cmp	r3, #0
   10d5c:	beq	10d70 <fp_remove@@Base+0x2c>
   10d60:	ldr	r3, [fp, #-16]
   10d64:	ldr	r3, [r3]
   10d68:	cmp	r3, #0
   10d6c:	bne	10d78 <fp_remove@@Base+0x34>
   10d70:	mov	r3, #0
   10d74:	b	10e04 <fp_remove@@Base+0xc0>
   10d78:	ldr	r3, [fp, #-16]
   10d7c:	ldr	r3, [r3, #8]
   10d80:	ldr	r3, [r3]
   10d84:	str	r3, [fp, #-12]
   10d88:	mov	r3, #0
   10d8c:	str	r3, [fp, #-8]
   10d90:	b	10dd4 <fp_remove@@Base+0x90>
   10d94:	ldr	r3, [fp, #-16]
   10d98:	ldr	r2, [r3, #8]
   10d9c:	ldr	r3, [fp, #-8]
   10da0:	lsl	r3, r3, #2
   10da4:	add	r3, r2, r3
   10da8:	ldr	r2, [fp, #-16]
   10dac:	ldr	r1, [r2, #8]
   10db0:	ldr	r2, [fp, #-8]
   10db4:	add	r2, r2, #1
   10db8:	lsl	r2, r2, #2
   10dbc:	add	r2, r1, r2
   10dc0:	ldr	r2, [r2]
   10dc4:	str	r2, [r3]
   10dc8:	ldr	r3, [fp, #-8]
   10dcc:	add	r3, r3, #1
   10dd0:	str	r3, [fp, #-8]
   10dd4:	ldr	r3, [fp, #-16]
   10dd8:	ldr	r2, [r3]
   10ddc:	ldr	r3, [fp, #-8]
   10de0:	cmp	r2, r3
   10de4:	bgt	10d94 <fp_remove@@Base+0x50>
   10de8:	ldr	r3, [fp, #-16]
   10dec:	ldr	r3, [r3]
   10df0:	sub	r2, r3, #1
   10df4:	ldr	r3, [fp, #-16]
   10df8:	str	r2, [r3]
   10dfc:	ldr	r3, [fp, #-12]
   10e00:	ldr	r3, [r3, #4]
   10e04:	mov	r0, r3
   10e08:	add	sp, fp, #0
   10e0c:	pop	{fp}		; (ldr fp, [sp], #4)
   10e10:	bx	lr

00010e14 <fp_carrega@@Base>:
   10e14:	push	{fp, lr}
   10e18:	add	fp, sp, #4
   10e1c:	sub	sp, sp, #272	; 0x110
   10e20:	str	r0, [fp, #-272]	; 0xfffffef0
   10e24:	str	r1, [fp, #-276]	; 0xfffffeec
   10e28:	ldr	r1, [pc, #164]	; 10ed4 <fp_carrega@@Base+0xc0>
   10e2c:	ldr	r0, [fp, #-276]	; 0xfffffeec
   10e30:	bl	10a14 <fopen@plt>
   10e34:	str	r0, [fp, #-8]
   10e38:	ldr	r3, [fp, #-8]
   10e3c:	cmp	r3, #0
   10e40:	bne	10eb0 <fp_carrega@@Base+0x9c>
   10e44:	ldr	r0, [pc, #140]	; 10ed8 <fp_carrega@@Base+0xc4>
   10e48:	bl	10a50 <puts@plt>
   10e4c:	b	10ecc <fp_carrega@@Base+0xb8>
   10e50:	sub	r3, fp, #268	; 0x10c
   10e54:	mov	r2, r3
   10e58:	ldr	r1, [pc, #124]	; 10edc <fp_carrega@@Base+0xc8>
   10e5c:	ldr	r0, [fp, #-8]
   10e60:	bl	10a08 <__isoc99_fscanf@plt>
   10e64:	sub	r3, fp, #264	; 0x108
   10e68:	ldr	r2, [fp, #-8]
   10e6c:	mov	r1, #256	; 0x100
   10e70:	mov	r0, r3
   10e74:	bl	10a38 <fgets@plt>
   10e78:	sub	r3, fp, #264	; 0x108
   10e7c:	mov	r0, r3
   10e80:	bl	10a8c <strlen@plt>
   10e84:	mov	r3, r0
   10e88:	sub	r3, r3, #1
   10e8c:	sub	r2, fp, #4
   10e90:	add	r3, r2, r3
   10e94:	mov	r2, #0
   10e98:	strb	r2, [r3, #-260]	; 0xfffffefc
   10e9c:	ldr	r2, [fp, #-268]	; 0xfffffef4
   10ea0:	sub	r3, fp, #264	; 0x108
   10ea4:	mov	r1, r3
   10ea8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   10eac:	bl	10be4 <fp_insere@@Base>
   10eb0:	ldr	r0, [fp, #-8]
   10eb4:	bl	10a80 <feof@plt>
   10eb8:	mov	r3, r0
   10ebc:	cmp	r3, #0
   10ec0:	beq	10e50 <fp_carrega@@Base+0x3c>
   10ec4:	ldr	r0, [fp, #-8]
   10ec8:	bl	10aa4 <fclose@plt>
   10ecc:	sub	sp, fp, #4
   10ed0:	pop	{fp, pc}
   10ed4:	strdeq	r1, [r1], -ip
   10ed8:	andeq	r1, r1, r0, lsl #20
   10edc:	andeq	r1, r1, r4, lsr #20

00010ee0 <heap_insere@@Base>:
   10ee0:	push	{fp, lr}
   10ee4:	add	fp, sp, #4
   10ee8:	sub	sp, sp, #32
   10eec:	str	r0, [fp, #-24]	; 0xffffffe8
   10ef0:	str	r1, [fp, #-28]	; 0xffffffe4
   10ef4:	str	r2, [fp, #-32]	; 0xffffffe0
   10ef8:	str	r3, [fp, #-36]	; 0xffffffdc
   10efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f00:	ldr	r2, [r3]
   10f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f08:	ldr	r3, [r3, #4]
   10f0c:	cmp	r2, r3
   10f10:	bne	10f1c <heap_insere@@Base+0x3c>
   10f14:	mov	r3, #0
   10f18:	b	11018 <heap_insere@@Base+0x138>
   10f1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10f20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10f24:	bl	11618 <elemento_cria@@Base>
   10f28:	str	r0, [fp, #-16]
   10f2c:	mov	r3, #0
   10f30:	str	r3, [fp, #-8]
   10f34:	b	10f44 <heap_insere@@Base+0x64>
   10f38:	ldr	r3, [fp, #-8]
   10f3c:	add	r3, r3, #1
   10f40:	str	r3, [fp, #-8]
   10f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f48:	ldr	r2, [r3]
   10f4c:	ldr	r3, [fp, #-8]
   10f50:	cmp	r2, r3
   10f54:	ble	10f8c <heap_insere@@Base+0xac>
   10f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f5c:	ldr	r2, [r3, #8]
   10f60:	ldr	r3, [fp, #-8]
   10f64:	lsl	r3, r3, #2
   10f68:	add	r3, r2, r3
   10f6c:	ldr	r2, [r3]
   10f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f74:	ldr	r1, [fp, #-16]
   10f78:	mov	r0, r2
   10f7c:	blx	r3
   10f80:	mov	r3, r0
   10f84:	cmp	r3, #1
   10f88:	bne	10f38 <heap_insere@@Base+0x58>
   10f8c:	ldr	r3, [fp, #-8]
   10f90:	str	r3, [fp, #-12]
   10f94:	b	10fd8 <heap_insere@@Base+0xf8>
   10f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f9c:	ldr	r2, [r3, #8]
   10fa0:	ldr	r3, [fp, #-12]
   10fa4:	add	r3, r3, #1
   10fa8:	lsl	r3, r3, #2
   10fac:	add	r3, r2, r3
   10fb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10fb4:	ldr	r1, [r2, #8]
   10fb8:	ldr	r2, [fp, #-12]
   10fbc:	lsl	r2, r2, #2
   10fc0:	add	r2, r1, r2
   10fc4:	ldr	r2, [r2]
   10fc8:	str	r2, [r3]
   10fcc:	ldr	r3, [fp, #-12]
   10fd0:	sub	r3, r3, #1
   10fd4:	str	r3, [fp, #-12]
   10fd8:	ldr	r3, [fp, #-12]
   10fdc:	cmp	r3, #0
   10fe0:	bgt	10f98 <heap_insere@@Base+0xb8>
   10fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fe8:	ldr	r2, [r3, #8]
   10fec:	ldr	r3, [fp, #-8]
   10ff0:	lsl	r3, r3, #2
   10ff4:	add	r3, r2, r3
   10ff8:	ldr	r2, [fp, #-16]
   10ffc:	str	r2, [r3]
   11000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11004:	ldr	r3, [r3]
   11008:	add	r2, r3, #1
   1100c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11010:	str	r2, [r3]
   11014:	ldr	r3, [fp, #-8]
   11018:	mov	r0, r3
   1101c:	sub	sp, fp, #4
   11020:	pop	{fp, pc}

00011024 <heap_remove@@Base>:
   11024:	push	{fp}		; (str fp, [sp, #-4]!)
   11028:	add	fp, sp, #0
   1102c:	sub	sp, sp, #12
   11030:	str	r0, [fp, #-8]
   11034:	str	r1, [fp, #-12]
   11038:	mov	r3, #0
   1103c:	mov	r0, r3
   11040:	add	sp, fp, #0
   11044:	pop	{fp}		; (ldr fp, [sp], #4)
   11048:	bx	lr

0001104c <heap_carrega@@Base>:
   1104c:	push	{fp, lr}
   11050:	add	fp, sp, #4
   11054:	sub	sp, sp, #280	; 0x118
   11058:	str	r0, [fp, #-272]	; 0xfffffef0
   1105c:	str	r1, [fp, #-276]	; 0xfffffeec
   11060:	str	r2, [fp, #-280]	; 0xfffffee8
   11064:	ldr	r1, [pc, #164]	; 11110 <heap_carrega@@Base+0xc4>
   11068:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1106c:	bl	10a14 <fopen@plt>
   11070:	str	r0, [fp, #-8]
   11074:	ldr	r3, [fp, #-8]
   11078:	cmp	r3, #0
   1107c:	bne	110ec <heap_carrega@@Base+0xa0>
   11080:	ldr	r0, [pc, #140]	; 11114 <heap_carrega@@Base+0xc8>
   11084:	bl	10a50 <puts@plt>
   11088:	b	11108 <heap_carrega@@Base+0xbc>
   1108c:	sub	r3, fp, #268	; 0x10c
   11090:	mov	r2, r3
   11094:	ldr	r1, [pc, #124]	; 11118 <heap_carrega@@Base+0xcc>
   11098:	ldr	r0, [fp, #-8]
   1109c:	bl	10a08 <__isoc99_fscanf@plt>
   110a0:	sub	r3, fp, #264	; 0x108
   110a4:	ldr	r2, [fp, #-8]
   110a8:	mov	r1, #256	; 0x100
   110ac:	mov	r0, r3
   110b0:	bl	10a38 <fgets@plt>
   110b4:	sub	r3, fp, #264	; 0x108
   110b8:	mov	r0, r3
   110bc:	bl	10a8c <strlen@plt>
   110c0:	mov	r3, r0
   110c4:	sub	r3, r3, #1
   110c8:	sub	r2, fp, #4
   110cc:	add	r3, r2, r3
   110d0:	mov	r2, #0
   110d4:	strb	r2, [r3, #-260]	; 0xfffffefc
   110d8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   110dc:	sub	r2, fp, #264	; 0x108
   110e0:	ldr	r1, [fp, #-276]	; 0xfffffeec
   110e4:	ldr	r0, [fp, #-272]	; 0xfffffef0
   110e8:	bl	10ee0 <heap_insere@@Base>
   110ec:	ldr	r0, [fp, #-8]
   110f0:	bl	10a80 <feof@plt>
   110f4:	mov	r3, r0
   110f8:	cmp	r3, #0
   110fc:	beq	1108c <heap_carrega@@Base+0x40>
   11100:	ldr	r0, [fp, #-8]
   11104:	bl	10aa4 <fclose@plt>
   11108:	sub	sp, fp, #4
   1110c:	pop	{fp, pc}
   11110:	strdeq	r1, [r1], -ip
   11114:	andeq	r1, r1, r0, lsl #20
   11118:	andeq	r1, r1, r4, lsr #20

0001111c <main@@Base>:
   1111c:	push	{fp, lr}
   11120:	add	fp, sp, #4
   11124:	sub	sp, sp, #200	; 0xc8
   11128:	str	r0, [fp, #-200]	; 0xffffff38
   1112c:	str	r1, [fp, #-204]	; 0xffffff34
   11130:	mov	r0, #42	; 0x2a
   11134:	bl	114dc <vetor_cria@@Base>
   11138:	str	r0, [fp, #-12]
   1113c:	ldr	r0, [pc, #840]	; 1148c <main@@Base+0x370>
   11140:	bl	10a50 <puts@plt>
   11144:	ldr	r1, [pc, #836]	; 11490 <main@@Base+0x374>
   11148:	ldr	r0, [fp, #-12]
   1114c:	bl	10e14 <fp_carrega@@Base>
   11150:	ldr	r3, [pc, #828]	; 11494 <main@@Base+0x378>
   11154:	ldr	r3, [r3]
   11158:	mov	r1, r3
   1115c:	ldr	r0, [pc, #820]	; 11498 <main@@Base+0x37c>
   11160:	bl	109fc <printf@plt>
   11164:	ldr	r0, [fp, #-12]
   11168:	bl	117bc <vetor_imprime@@Base>
   1116c:	ldr	r3, [fp, #-12]
   11170:	ldr	r3, [r3]
   11174:	cmp	r3, #42	; 0x2a
   11178:	beq	1118c <main@@Base+0x70>
   1117c:	ldr	r0, [pc, #792]	; 1149c <main@@Base+0x380>
   11180:	bl	10a50 <puts@plt>
   11184:	mov	r3, #1
   11188:	b	11480 <main@@Base+0x364>
   1118c:	ldr	r0, [fp, #-12]
   11190:	bl	10d44 <fp_remove@@Base>
   11194:	mov	r3, r0
   11198:	mov	r1, r3
   1119c:	ldr	r0, [pc, #764]	; 114a0 <main@@Base+0x384>
   111a0:	bl	109f0 <strcmp@plt>
   111a4:	mov	r3, r0
   111a8:	cmp	r3, #0
   111ac:	beq	111c0 <main@@Base+0xa4>
   111b0:	ldr	r0, [pc, #748]	; 114a4 <main@@Base+0x388>
   111b4:	bl	10a50 <puts@plt>
   111b8:	mov	r3, #1
   111bc:	b	11480 <main@@Base+0x364>
   111c0:	ldr	r3, [pc, #716]	; 11494 <main@@Base+0x378>
   111c4:	mov	r2, #0
   111c8:	str	r2, [r3]
   111cc:	ldr	r0, [fp, #-12]
   111d0:	bl	10d44 <fp_remove@@Base>
   111d4:	ldr	r3, [pc, #696]	; 11494 <main@@Base+0x378>
   111d8:	ldr	r3, [r3]
   111dc:	mov	r1, r3
   111e0:	ldr	r0, [pc, #704]	; 114a8 <main@@Base+0x38c>
   111e4:	bl	109fc <printf@plt>
   111e8:	ldr	r3, [pc, #676]	; 11494 <main@@Base+0x378>
   111ec:	mov	r2, #0
   111f0:	str	r2, [r3]
   111f4:	mov	r2, #99	; 0x63
   111f8:	ldr	r1, [pc, #684]	; 114ac <main@@Base+0x390>
   111fc:	ldr	r0, [fp, #-12]
   11200:	bl	10be4 <fp_insere@@Base>
   11204:	ldr	r3, [pc, #648]	; 11494 <main@@Base+0x378>
   11208:	ldr	r3, [r3]
   1120c:	mov	r1, r3
   11210:	ldr	r0, [pc, #664]	; 114b0 <main@@Base+0x394>
   11214:	bl	109fc <printf@plt>
   11218:	ldr	r0, [fp, #-12]
   1121c:	bl	10d44 <fp_remove@@Base>
   11220:	ldr	r3, [pc, #620]	; 11494 <main@@Base+0x378>
   11224:	mov	r2, #0
   11228:	str	r2, [r3]
   1122c:	mov	r2, #0
   11230:	ldr	r1, [pc, #628]	; 114ac <main@@Base+0x390>
   11234:	ldr	r0, [fp, #-12]
   11238:	bl	10be4 <fp_insere@@Base>
   1123c:	ldr	r3, [pc, #592]	; 11494 <main@@Base+0x378>
   11240:	ldr	r3, [r3]
   11244:	mov	r1, r3
   11248:	ldr	r0, [pc, #612]	; 114b4 <main@@Base+0x398>
   1124c:	bl	109fc <printf@plt>
   11250:	ldr	r0, [fp, #-12]
   11254:	bl	10d44 <fp_remove@@Base>
   11258:	ldr	r3, [pc, #564]	; 11494 <main@@Base+0x378>
   1125c:	mov	r2, #0
   11260:	str	r2, [r3]
   11264:	mov	r2, #42	; 0x2a
   11268:	ldr	r1, [pc, #572]	; 114ac <main@@Base+0x390>
   1126c:	ldr	r0, [fp, #-12]
   11270:	bl	10be4 <fp_insere@@Base>
   11274:	ldr	r3, [pc, #536]	; 11494 <main@@Base+0x378>
   11278:	ldr	r3, [r3]
   1127c:	mov	r1, r3
   11280:	ldr	r0, [pc, #560]	; 114b8 <main@@Base+0x39c>
   11284:	bl	109fc <printf@plt>
   11288:	ldr	r0, [pc, #556]	; 114bc <main@@Base+0x3a0>
   1128c:	bl	10a50 <puts@plt>
   11290:	mov	r0, #42	; 0x2a
   11294:	bl	11578 <vetor_criaHeap@@Base>
   11298:	str	r0, [fp, #-16]
   1129c:	ldr	r3, [pc, #540]	; 114c0 <main@@Base+0x3a4>
   112a0:	str	r3, [fp, #-20]	; 0xffffffec
   112a4:	ldr	r2, [pc, #484]	; 11490 <main@@Base+0x374>
   112a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   112ac:	ldr	r0, [fp, #-16]
   112b0:	bl	1104c <heap_carrega@@Base>
   112b4:	ldr	r3, [pc, #472]	; 11494 <main@@Base+0x378>
   112b8:	ldr	r3, [r3]
   112bc:	mov	r1, r3
   112c0:	ldr	r0, [pc, #508]	; 114c4 <main@@Base+0x3a8>
   112c4:	bl	109fc <printf@plt>
   112c8:	ldr	r0, [fp, #-16]
   112cc:	bl	118a0 <vetor_imprimeHeap@@Base>
   112d0:	ldr	r3, [fp, #-16]
   112d4:	ldr	r3, [r3]
   112d8:	cmp	r3, #42	; 0x2a
   112dc:	beq	112f0 <main@@Base+0x1d4>
   112e0:	ldr	r0, [pc, #480]	; 114c8 <main@@Base+0x3ac>
   112e4:	bl	10a50 <puts@plt>
   112e8:	mov	r3, #1
   112ec:	b	11480 <main@@Base+0x364>
   112f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   112f4:	ldr	r0, [fp, #-16]
   112f8:	bl	11024 <heap_remove@@Base>
   112fc:	mov	r3, r0
   11300:	mov	r1, r3
   11304:	ldr	r0, [pc, #404]	; 114a0 <main@@Base+0x384>
   11308:	bl	109f0 <strcmp@plt>
   1130c:	mov	r3, r0
   11310:	cmp	r3, #0
   11314:	beq	11328 <main@@Base+0x20c>
   11318:	ldr	r0, [pc, #388]	; 114a4 <main@@Base+0x388>
   1131c:	bl	10a50 <puts@plt>
   11320:	mov	r3, #1
   11324:	b	11480 <main@@Base+0x364>
   11328:	ldr	r3, [pc, #356]	; 11494 <main@@Base+0x378>
   1132c:	mov	r2, #0
   11330:	str	r2, [r3]
   11334:	ldr	r1, [fp, #-20]	; 0xffffffec
   11338:	ldr	r0, [fp, #-16]
   1133c:	bl	11024 <heap_remove@@Base>
   11340:	ldr	r3, [pc, #332]	; 11494 <main@@Base+0x378>
   11344:	ldr	r3, [r3]
   11348:	mov	r1, r3
   1134c:	ldr	r0, [pc, #376]	; 114cc <main@@Base+0x3b0>
   11350:	bl	109fc <printf@plt>
   11354:	ldr	r3, [pc, #312]	; 11494 <main@@Base+0x378>
   11358:	mov	r2, #0
   1135c:	str	r2, [r3]
   11360:	mov	r3, #99	; 0x63
   11364:	ldr	r2, [pc, #320]	; 114ac <main@@Base+0x390>
   11368:	ldr	r1, [fp, #-20]	; 0xffffffec
   1136c:	ldr	r0, [fp, #-16]
   11370:	bl	10ee0 <heap_insere@@Base>
   11374:	ldr	r3, [pc, #280]	; 11494 <main@@Base+0x378>
   11378:	ldr	r3, [r3]
   1137c:	mov	r1, r3
   11380:	ldr	r0, [pc, #328]	; 114d0 <main@@Base+0x3b4>
   11384:	bl	109fc <printf@plt>
   11388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1138c:	ldr	r0, [fp, #-16]
   11390:	bl	11024 <heap_remove@@Base>
   11394:	ldr	r3, [pc, #248]	; 11494 <main@@Base+0x378>
   11398:	mov	r2, #0
   1139c:	str	r2, [r3]
   113a0:	mov	r3, #0
   113a4:	ldr	r2, [pc, #256]	; 114ac <main@@Base+0x390>
   113a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   113ac:	ldr	r0, [fp, #-16]
   113b0:	bl	10ee0 <heap_insere@@Base>
   113b4:	ldr	r3, [pc, #216]	; 11494 <main@@Base+0x378>
   113b8:	ldr	r3, [r3]
   113bc:	mov	r1, r3
   113c0:	ldr	r0, [pc, #268]	; 114d4 <main@@Base+0x3b8>
   113c4:	bl	109fc <printf@plt>
   113c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   113cc:	ldr	r0, [fp, #-16]
   113d0:	bl	11024 <heap_remove@@Base>
   113d4:	ldr	r3, [pc, #184]	; 11494 <main@@Base+0x378>
   113d8:	mov	r2, #0
   113dc:	str	r2, [r3]
   113e0:	mov	r3, #42	; 0x2a
   113e4:	ldr	r2, [pc, #192]	; 114ac <main@@Base+0x390>
   113e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   113ec:	ldr	r0, [fp, #-16]
   113f0:	bl	10ee0 <heap_insere@@Base>
   113f4:	ldr	r3, [pc, #152]	; 11494 <main@@Base+0x378>
   113f8:	ldr	r3, [r3]
   113fc:	mov	r1, r3
   11400:	ldr	r0, [pc, #176]	; 114b8 <main@@Base+0x39c>
   11404:	bl	109fc <printf@plt>
   11408:	mov	r0, #42	; 0x2a
   1140c:	bl	11578 <vetor_criaHeap@@Base>
   11410:	str	r0, [fp, #-16]
   11414:	ldr	r3, [pc, #188]	; 114d8 <main@@Base+0x3bc>
   11418:	str	r3, [fp, #-24]	; 0xffffffe8
   1141c:	ldr	r2, [pc, #108]	; 11490 <main@@Base+0x374>
   11420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11424:	ldr	r0, [fp, #-16]
   11428:	bl	1104c <heap_carrega@@Base>
   1142c:	ldr	r3, [pc, #96]	; 11494 <main@@Base+0x378>
   11430:	ldr	r3, [r3]
   11434:	mov	r1, r3
   11438:	ldr	r0, [pc, #132]	; 114c4 <main@@Base+0x3a8>
   1143c:	bl	109fc <printf@plt>
   11440:	mov	r3, #0
   11444:	str	r3, [fp, #-8]
   11448:	b	11470 <main@@Base+0x354>
   1144c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11450:	ldr	r0, [fp, #-16]
   11454:	bl	11024 <heap_remove@@Base>
   11458:	mov	r3, r0
   1145c:	mov	r0, r3
   11460:	bl	10a50 <puts@plt>
   11464:	ldr	r3, [fp, #-8]
   11468:	add	r3, r3, #1
   1146c:	str	r3, [fp, #-8]
   11470:	ldr	r3, [fp, #-8]
   11474:	cmp	r3, #41	; 0x29
   11478:	ble	1144c <main@@Base+0x330>
   1147c:	mov	r3, #0
   11480:	mov	r0, r3
   11484:	sub	sp, fp, #4
   11488:	pop	{fp, pc}
   1148c:	andeq	r1, r1, r8, lsr #20
   11490:	andeq	r1, r1, r0, ror #20
   11494:	andeq	r2, r2, r8, rrx
   11498:	andeq	r1, r1, ip, ror #20
   1149c:	andeq	r1, r1, r4, lsr #21
   114a0:	andeq	r1, r1, ip, asr #21
   114a4:	andeq	r1, r1, r0, ror #21
   114a8:	andeq	r1, r1, r4, lsr #22
   114ac:	andeq	r1, r1, r8, asr fp
   114b0:	andeq	r1, r1, r8, ror #22
   114b4:			; <UNDEFINED> instruction: 0x00011bb0
   114b8:	strdeq	r1, [r1], -r8
   114bc:	andeq	r1, r1, r0, asr #24
   114c0:	andeq	r1, r1, r4, lsl #13
   114c4:	andeq	r1, r1, r8, ror ip
   114c8:			; <UNDEFINED> instruction: 0x00011cb0
   114cc:	ldrdeq	r1, [r1], -r8
   114d0:	andeq	r1, r1, ip, lsl #26
   114d4:	andeq	r1, r1, r4, asr sp
   114d8:	andeq	r1, r1, ip, lsl r7

000114dc <vetor_cria@@Base>:
   114dc:	push	{fp, lr}
   114e0:	add	fp, sp, #4
   114e4:	sub	sp, sp, #16
   114e8:	str	r0, [fp, #-16]
   114ec:	mov	r0, #12
   114f0:	bl	10a5c <malloc@plt>
   114f4:	mov	r3, r0
   114f8:	str	r3, [fp, #-8]
   114fc:	ldr	r3, [fp, #-8]
   11500:	cmp	r3, #0
   11504:	bne	11510 <vetor_cria@@Base+0x34>
   11508:	mov	r3, #0
   1150c:	b	1156c <vetor_cria@@Base+0x90>
   11510:	ldr	r3, [fp, #-8]
   11514:	mov	r2, #0
   11518:	str	r2, [r3]
   1151c:	ldr	r3, [fp, #-8]
   11520:	ldr	r2, [fp, #-16]
   11524:	str	r2, [r3, #4]
   11528:	ldr	r3, [fp, #-16]
   1152c:	mov	r1, #4
   11530:	mov	r0, r3
   11534:	bl	109e4 <calloc@plt>
   11538:	mov	r3, r0
   1153c:	mov	r2, r3
   11540:	ldr	r3, [fp, #-8]
   11544:	str	r2, [r3, #8]
   11548:	ldr	r3, [fp, #-8]
   1154c:	ldr	r3, [r3, #8]
   11550:	cmp	r3, #0
   11554:	bne	11568 <vetor_cria@@Base+0x8c>
   11558:	ldr	r0, [fp, #-8]
   1155c:	bl	10a2c <free@plt>
   11560:	mov	r3, #0
   11564:	b	1156c <vetor_cria@@Base+0x90>
   11568:	ldr	r3, [fp, #-8]
   1156c:	mov	r0, r3
   11570:	sub	sp, fp, #4
   11574:	pop	{fp, pc}

00011578 <vetor_criaHeap@@Base>:
   11578:	push	{fp, lr}
   1157c:	add	fp, sp, #4
   11580:	sub	sp, sp, #16
   11584:	str	r0, [fp, #-16]
   11588:	mov	r0, #12
   1158c:	bl	10a5c <malloc@plt>
   11590:	mov	r3, r0
   11594:	str	r3, [fp, #-8]
   11598:	ldr	r3, [fp, #-8]
   1159c:	cmp	r3, #0
   115a0:	bne	115ac <vetor_criaHeap@@Base+0x34>
   115a4:	mov	r3, #0
   115a8:	b	1160c <vetor_criaHeap@@Base+0x94>
   115ac:	ldr	r3, [fp, #-8]
   115b0:	mov	r2, #0
   115b4:	str	r2, [r3]
   115b8:	ldr	r3, [fp, #-8]
   115bc:	ldr	r2, [fp, #-16]
   115c0:	str	r2, [r3, #4]
   115c4:	ldr	r3, [fp, #-16]
   115c8:	add	r3, r3, #1
   115cc:	mov	r1, #4
   115d0:	mov	r0, r3
   115d4:	bl	109e4 <calloc@plt>
   115d8:	mov	r3, r0
   115dc:	mov	r2, r3
   115e0:	ldr	r3, [fp, #-8]
   115e4:	str	r2, [r3, #8]
   115e8:	ldr	r3, [fp, #-8]
   115ec:	ldr	r3, [r3, #8]
   115f0:	cmp	r3, #0
   115f4:	bne	11608 <vetor_criaHeap@@Base+0x90>
   115f8:	ldr	r0, [fp, #-8]
   115fc:	bl	10a2c <free@plt>
   11600:	mov	r3, #0
   11604:	b	1160c <vetor_criaHeap@@Base+0x94>
   11608:	ldr	r3, [fp, #-8]
   1160c:	mov	r0, r3
   11610:	sub	sp, fp, #4
   11614:	pop	{fp, pc}

00011618 <elemento_cria@@Base>:
   11618:	push	{fp, lr}
   1161c:	add	fp, sp, #4
   11620:	sub	sp, sp, #16
   11624:	str	r0, [fp, #-16]
   11628:	str	r1, [fp, #-20]	; 0xffffffec
   1162c:	mov	r0, #8
   11630:	bl	10a5c <malloc@plt>
   11634:	mov	r3, r0
   11638:	str	r3, [fp, #-8]
   1163c:	ldr	r3, [fp, #-8]
   11640:	cmp	r3, #0
   11644:	bne	11650 <elemento_cria@@Base+0x38>
   11648:	mov	r3, #0
   1164c:	b	11678 <elemento_cria@@Base+0x60>
   11650:	ldr	r0, [fp, #-20]	; 0xffffffec
   11654:	bl	10a44 <strdup@plt>
   11658:	mov	r3, r0
   1165c:	mov	r2, r3
   11660:	ldr	r3, [fp, #-8]
   11664:	str	r2, [r3, #4]
   11668:	ldr	r3, [fp, #-8]
   1166c:	ldr	r2, [fp, #-16]
   11670:	str	r2, [r3]
   11674:	ldr	r3, [fp, #-8]
   11678:	mov	r0, r3
   1167c:	sub	sp, fp, #4
   11680:	pop	{fp, pc}

00011684 <maior_que@@Base>:
   11684:	push	{fp, lr}
   11688:	add	fp, sp, #4
   1168c:	sub	sp, sp, #8
   11690:	str	r0, [fp, #-8]
   11694:	str	r1, [fp, #-12]
   11698:	ldr	r3, [fp, #-8]
   1169c:	cmp	r3, #0
   116a0:	beq	116b0 <maior_que@@Base+0x2c>
   116a4:	ldr	r3, [fp, #-12]
   116a8:	cmp	r3, #0
   116ac:	bne	116c0 <maior_que@@Base+0x3c>
   116b0:	ldr	r0, [pc, #88]	; 11710 <maior_que@@Base+0x8c>
   116b4:	bl	10a50 <puts@plt>
   116b8:	mov	r3, #0
   116bc:	b	11704 <maior_que@@Base+0x80>
   116c0:	ldr	r3, [pc, #76]	; 11714 <maior_que@@Base+0x90>
   116c4:	ldr	r3, [r3]
   116c8:	mov	r0, r3
   116cc:	bl	10a20 <fflush@plt>
   116d0:	ldr	r3, [pc, #64]	; 11718 <maior_que@@Base+0x94>
   116d4:	ldr	r3, [r3]
   116d8:	add	r3, r3, #1
   116dc:	ldr	r2, [pc, #52]	; 11718 <maior_que@@Base+0x94>
   116e0:	str	r3, [r2]
   116e4:	ldr	r3, [fp, #-8]
   116e8:	ldr	r2, [r3]
   116ec:	ldr	r3, [fp, #-12]
   116f0:	ldr	r3, [r3]
   116f4:	cmp	r2, r3
   116f8:	movgt	r3, #1
   116fc:	movle	r3, #0
   11700:	uxtb	r3, r3
   11704:	mov	r0, r3
   11708:	sub	sp, fp, #4
   1170c:	pop	{fp, pc}
   11710:	muleq	r1, ip, sp
   11714:	andeq	r2, r2, r0, rrx
   11718:	andeq	r2, r2, r8, rrx

0001171c <maior_que_HeapSort@@Base>:
   1171c:	push	{fp, lr}
   11720:	add	fp, sp, #4
   11724:	sub	sp, sp, #8
   11728:	str	r0, [fp, #-8]
   1172c:	str	r1, [fp, #-12]
   11730:	ldr	r3, [fp, #-8]
   11734:	cmp	r3, #0
   11738:	beq	11748 <maior_que_HeapSort@@Base+0x2c>
   1173c:	ldr	r3, [fp, #-12]
   11740:	cmp	r3, #0
   11744:	bne	11758 <maior_que_HeapSort@@Base+0x3c>
   11748:	ldr	r0, [pc, #96]	; 117b0 <maior_que_HeapSort@@Base+0x94>
   1174c:	bl	10a50 <puts@plt>
   11750:	mov	r3, #0
   11754:	b	117a4 <maior_que_HeapSort@@Base+0x88>
   11758:	ldr	r3, [pc, #84]	; 117b4 <maior_que_HeapSort@@Base+0x98>
   1175c:	ldr	r3, [r3]
   11760:	mov	r0, r3
   11764:	bl	10a20 <fflush@plt>
   11768:	ldr	r3, [pc, #72]	; 117b8 <maior_que_HeapSort@@Base+0x9c>
   1176c:	ldr	r3, [r3]
   11770:	add	r3, r3, #1
   11774:	ldr	r2, [pc, #60]	; 117b8 <maior_que_HeapSort@@Base+0x9c>
   11778:	str	r3, [r2]
   1177c:	ldr	r3, [fp, #-8]
   11780:	ldr	r2, [r3, #4]
   11784:	ldr	r3, [fp, #-12]
   11788:	ldr	r3, [r3, #4]
   1178c:	mov	r1, r3
   11790:	mov	r0, r2
   11794:	bl	109f0 <strcmp@plt>
   11798:	mov	r3, r0
   1179c:	lsr	r3, r3, #31
   117a0:	uxtb	r3, r3
   117a4:	mov	r0, r3
   117a8:	sub	sp, fp, #4
   117ac:	pop	{fp, pc}
   117b0:	muleq	r1, ip, sp
   117b4:	andeq	r2, r2, r0, rrx
   117b8:	andeq	r2, r2, r8, rrx

000117bc <vetor_imprime@@Base>:
   117bc:	push	{fp, lr}
   117c0:	add	fp, sp, #4
   117c4:	sub	sp, sp, #16
   117c8:	str	r0, [fp, #-16]
   117cc:	ldr	r3, [fp, #-16]
   117d0:	ldr	r3, [r3]
   117d4:	cmp	r3, #0
   117d8:	ble	11814 <vetor_imprime@@Base+0x58>
   117dc:	ldr	r3, [fp, #-16]
   117e0:	ldr	r3, [r3, #8]
   117e4:	ldr	r3, [r3]
   117e8:	ldr	r1, [r3, #4]
   117ec:	ldr	r3, [fp, #-16]
   117f0:	ldr	r3, [r3, #8]
   117f4:	ldr	r3, [r3]
   117f8:	ldr	r3, [r3]
   117fc:	mov	r2, r3
   11800:	ldr	r0, [pc, #140]	; 11894 <vetor_imprime@@Base+0xd8>
   11804:	bl	109fc <printf@plt>
   11808:	mov	r3, #1
   1180c:	str	r3, [fp, #-8]
   11810:	b	11870 <vetor_imprime@@Base+0xb4>
   11814:	ldr	r0, [pc, #124]	; 11898 <vetor_imprime@@Base+0xdc>
   11818:	bl	10a50 <puts@plt>
   1181c:	b	1188c <vetor_imprime@@Base+0xd0>
   11820:	ldr	r3, [fp, #-16]
   11824:	ldr	r2, [r3, #8]
   11828:	ldr	r3, [fp, #-8]
   1182c:	lsl	r3, r3, #2
   11830:	add	r3, r2, r3
   11834:	ldr	r3, [r3]
   11838:	ldr	r1, [r3, #4]
   1183c:	ldr	r3, [fp, #-16]
   11840:	ldr	r2, [r3, #8]
   11844:	ldr	r3, [fp, #-8]
   11848:	lsl	r3, r3, #2
   1184c:	add	r3, r2, r3
   11850:	ldr	r3, [r3]
   11854:	ldr	r3, [r3]
   11858:	mov	r2, r3
   1185c:	ldr	r0, [pc, #56]	; 1189c <vetor_imprime@@Base+0xe0>
   11860:	bl	109fc <printf@plt>
   11864:	ldr	r3, [fp, #-8]
   11868:	add	r3, r3, #1
   1186c:	str	r3, [fp, #-8]
   11870:	ldr	r3, [fp, #-16]
   11874:	ldr	r2, [r3]
   11878:	ldr	r3, [fp, #-8]
   1187c:	cmp	r2, r3
   11880:	bgt	11820 <vetor_imprime@@Base+0x64>
   11884:	mov	r0, #10
   11888:	bl	10a98 <putchar@plt>
   1188c:	sub	sp, fp, #4
   11890:	pop	{fp, pc}
   11894:	andeq	r1, r1, r8, lsr #27
   11898:	andeq	r1, r1, r8, asr #27
   1189c:	andeq	r1, r1, r0, ror #27

000118a0 <vetor_imprimeHeap@@Base>:
   118a0:	push	{fp, lr}
   118a4:	add	fp, sp, #4
   118a8:	sub	sp, sp, #16
   118ac:	str	r0, [fp, #-16]
   118b0:	ldr	r3, [fp, #-16]
   118b4:	ldr	r3, [r3]
   118b8:	cmp	r3, #0
   118bc:	ble	11900 <vetor_imprimeHeap@@Base+0x60>
   118c0:	ldr	r3, [fp, #-16]
   118c4:	ldr	r3, [r3, #8]
   118c8:	add	r3, r3, #4
   118cc:	ldr	r3, [r3]
   118d0:	ldr	r1, [r3, #4]
   118d4:	ldr	r3, [fp, #-16]
   118d8:	ldr	r3, [r3, #8]
   118dc:	add	r3, r3, #4
   118e0:	ldr	r3, [r3]
   118e4:	ldr	r3, [r3]
   118e8:	mov	r2, r3
   118ec:	ldr	r0, [pc, #140]	; 11980 <vetor_imprimeHeap@@Base+0xe0>
   118f0:	bl	109fc <printf@plt>
   118f4:	mov	r3, #2
   118f8:	str	r3, [fp, #-8]
   118fc:	b	1195c <vetor_imprimeHeap@@Base+0xbc>
   11900:	ldr	r0, [pc, #124]	; 11984 <vetor_imprimeHeap@@Base+0xe4>
   11904:	bl	10a50 <puts@plt>
   11908:	b	11978 <vetor_imprimeHeap@@Base+0xd8>
   1190c:	ldr	r3, [fp, #-16]
   11910:	ldr	r2, [r3, #8]
   11914:	ldr	r3, [fp, #-8]
   11918:	lsl	r3, r3, #2
   1191c:	add	r3, r2, r3
   11920:	ldr	r3, [r3]
   11924:	ldr	r1, [r3, #4]
   11928:	ldr	r3, [fp, #-16]
   1192c:	ldr	r2, [r3, #8]
   11930:	ldr	r3, [fp, #-8]
   11934:	lsl	r3, r3, #2
   11938:	add	r3, r2, r3
   1193c:	ldr	r3, [r3]
   11940:	ldr	r3, [r3]
   11944:	mov	r2, r3
   11948:	ldr	r0, [pc, #56]	; 11988 <vetor_imprimeHeap@@Base+0xe8>
   1194c:	bl	109fc <printf@plt>
   11950:	ldr	r3, [fp, #-8]
   11954:	add	r3, r3, #1
   11958:	str	r3, [fp, #-8]
   1195c:	ldr	r3, [fp, #-16]
   11960:	ldr	r2, [r3]
   11964:	ldr	r3, [fp, #-8]
   11968:	cmp	r2, r3
   1196c:	bgt	1190c <vetor_imprimeHeap@@Base+0x6c>
   11970:	mov	r0, #10
   11974:	bl	10a98 <putchar@plt>
   11978:	sub	sp, fp, #4
   1197c:	pop	{fp, pc}
   11980:	andeq	r1, r1, r8, lsr #27
   11984:	andeq	r1, r1, r8, asr #27
   11988:	andeq	r1, r1, r0, ror #27

0001198c <__libc_csu_init@@Base>:
   1198c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11990:	mov	r7, r0
   11994:	ldr	r6, [pc, #72]	; 119e4 <__libc_csu_init@@Base+0x58>
   11998:	ldr	r5, [pc, #72]	; 119e8 <__libc_csu_init@@Base+0x5c>
   1199c:	add	r6, pc, r6
   119a0:	add	r5, pc, r5
   119a4:	sub	r6, r6, r5
   119a8:	mov	r8, r1
   119ac:	mov	r9, r2
   119b0:	bl	109c4 <calloc@plt-0x20>
   119b4:	asrs	r6, r6, #2
   119b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119bc:	mov	r4, #0
   119c0:	add	r4, r4, #1
   119c4:	ldr	r3, [r5], #4
   119c8:	mov	r2, r9
   119cc:	mov	r1, r8
   119d0:	mov	r0, r7
   119d4:	blx	r3
   119d8:	cmp	r6, r4
   119dc:	bne	119c0 <__libc_csu_init@@Base+0x34>
   119e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119e4:	andeq	r0, r1, ip, ror #10
   119e8:	andeq	r0, r1, r4, ror #10

000119ec <__libc_csu_fini@@Base>:
   119ec:	bx	lr

Disassembly of section .fini:

000119f0 <.fini>:
   119f0:	push	{r3, lr}
   119f4:	pop	{r3, pc}
