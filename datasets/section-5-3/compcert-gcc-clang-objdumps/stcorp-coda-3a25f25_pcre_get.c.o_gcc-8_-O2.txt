
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_get.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_get_stringnumber>:
   0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4:	mov	r2, #8
   8:	mov	r4, r0
   c:	strd	r6, [sp, #8]
  10:	mov	r7, r1
  14:	mov	r1, #0
  18:	strd	r8, [sp, #16]
  1c:	str	sl, [sp, #24]
  20:	str	lr, [sp, #28]
  24:	sub	sp, sp, #16
  28:	add	r3, sp, #8
  2c:	bl	0 <coda_pcre_fullinfo>
  30:	subs	r5, r0, #0
  34:	bne	60 <coda_pcre_get_stringnumber+0x60>
  38:	ldr	r3, [sp, #8]
  3c:	cmp	r3, #0
  40:	ble	e0 <coda_pcre_get_stringnumber+0xe0>
  44:	mov	r1, r5
  48:	add	r3, sp, #4
  4c:	mov	r2, #7
  50:	mov	r0, r4
  54:	bl	0 <coda_pcre_fullinfo>
  58:	subs	r5, r0, #0
  5c:	beq	80 <coda_pcre_get_stringnumber+0x80>
  60:	mov	r0, r5
  64:	add	sp, sp, #16
  68:	ldrd	r4, [sp]
  6c:	ldrd	r6, [sp, #8]
  70:	ldrd	r8, [sp, #16]
  74:	ldr	sl, [sp, #24]
  78:	add	sp, sp, #28
  7c:	pop	{pc}		; (ldr pc, [sp], #4)
  80:	mov	r1, r5
  84:	mov	r0, r4
  88:	add	r3, sp, #12
  8c:	mov	r2, #9
  90:	bl	0 <coda_pcre_fullinfo>
  94:	subs	r5, r0, #0
  98:	bne	60 <coda_pcre_get_stringnumber+0x60>
  9c:	ldr	r9, [sp, #4]
  a0:	ldr	r6, [sp, #8]
  a4:	ldr	r8, [sp, #12]
  a8:	b	cc <coda_pcre_get_stringnumber+0xcc>
  ac:	mla	sl, r4, r9, r8
  b0:	add	r1, sl, #2
  b4:	bl	0 <strcmp>
  b8:	cmp	r0, #0
  bc:	beq	e8 <coda_pcre_get_stringnumber+0xe8>
  c0:	addgt	r5, r4, #1
  c4:	movle	r6, r4
  c8:	strle	r4, [sp, #8]
  cc:	add	r4, r5, r6
  d0:	cmp	r5, r6
  d4:	mov	r0, r7
  d8:	asr	r4, r4, #1
  dc:	blt	ac <coda_pcre_get_stringnumber+0xac>
  e0:	mvn	r5, #6
  e4:	b	60 <coda_pcre_get_stringnumber+0x60>
  e8:	ldrh	r5, [sl]
  ec:	rev16	r5, r5
  f0:	uxth	r5, r5
  f4:	b	60 <coda_pcre_get_stringnumber+0x60>

000000f8 <coda_pcre_get_stringtable_entries>:
  f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
  fc:	mov	r5, r1
 100:	mov	r1, #0
 104:	strd	r6, [sp, #8]
 108:	mov	r4, r0
 10c:	strd	r8, [sp, #16]
 110:	strd	sl, [sp, #24]
 114:	mov	sl, r2
 118:	mov	r2, #8
 11c:	str	lr, [sp, #32]
 120:	sub	sp, sp, #28
 124:	str	r3, [sp]
 128:	add	r3, sp, #16
 12c:	bl	0 <coda_pcre_fullinfo>
 130:	subs	fp, r0, #0
 134:	bne	160 <coda_pcre_get_stringtable_entries+0x68>
 138:	ldr	r3, [sp, #16]
 13c:	cmp	r3, #0
 140:	ble	1e8 <coda_pcre_get_stringtable_entries+0xf0>
 144:	mov	r1, fp
 148:	add	r3, sp, #12
 14c:	mov	r2, #7
 150:	mov	r0, r4
 154:	bl	0 <coda_pcre_fullinfo>
 158:	subs	fp, r0, #0
 15c:	beq	180 <coda_pcre_get_stringtable_entries+0x88>
 160:	mov	r0, fp
 164:	add	sp, sp, #28
 168:	ldrd	r4, [sp]
 16c:	ldrd	r6, [sp, #8]
 170:	ldrd	r8, [sp, #16]
 174:	ldrd	sl, [sp, #24]
 178:	add	sp, sp, #32
 17c:	pop	{pc}		; (ldr pc, [sp], #4)
 180:	mov	r1, fp
 184:	mov	r0, r4
 188:	add	r3, sp, #20
 18c:	mov	r2, #9
 190:	bl	0 <coda_pcre_fullinfo>
 194:	subs	fp, r0, #0
 198:	bne	160 <coda_pcre_get_stringtable_entries+0x68>
 19c:	ldr	r6, [sp, #12]
 1a0:	ldr	r3, [sp, #16]
 1a4:	ldr	r7, [sp, #20]
 1a8:	mov	r9, r3
 1ac:	str	r3, [sp, #4]
 1b0:	b	1d4 <coda_pcre_get_stringtable_entries+0xdc>
 1b4:	mla	r8, r4, r6, r7
 1b8:	add	r1, r8, #2
 1bc:	bl	0 <strcmp>
 1c0:	cmp	r0, #0
 1c4:	beq	1f0 <coda_pcre_get_stringtable_entries+0xf8>
 1c8:	addgt	fp, r4, #1
 1cc:	movle	r9, r4
 1d0:	strle	r4, [sp, #16]
 1d4:	add	r4, fp, r9
 1d8:	cmp	fp, r9
 1dc:	mov	r0, r5
 1e0:	asr	r4, r4, #1
 1e4:	blt	1b4 <coda_pcre_get_stringtable_entries+0xbc>
 1e8:	mvn	fp, #6
 1ec:	b	160 <coda_pcre_get_stringtable_entries+0x68>
 1f0:	cmp	r7, r8
 1f4:	bcs	278 <coda_pcre_get_stringtable_entries+0x180>
 1f8:	rsb	fp, r6, #0
 1fc:	rsb	r4, r6, #2
 200:	mov	r9, r8
 204:	b	214 <coda_pcre_get_stringtable_entries+0x11c>
 208:	add	r9, r9, fp
 20c:	cmp	r7, r9
 210:	bcs	228 <coda_pcre_get_stringtable_entries+0x130>
 214:	add	r1, r9, r4
 218:	mov	r0, r5
 21c:	bl	0 <strcmp>
 220:	cmp	r0, #0
 224:	beq	208 <coda_pcre_get_stringtable_entries+0x110>
 228:	ldr	r3, [sp, #4]
 22c:	sub	r3, r3, #1
 230:	mla	r7, r6, r3, r7
 234:	cmp	r7, r8
 238:	bls	264 <coda_pcre_get_stringtable_entries+0x16c>
 23c:	add	r4, r6, #2
 240:	b	250 <coda_pcre_get_stringtable_entries+0x158>
 244:	add	r8, r8, r6
 248:	cmp	r7, r8
 24c:	bls	264 <coda_pcre_get_stringtable_entries+0x16c>
 250:	add	r1, r8, r4
 254:	mov	r0, r5
 258:	bl	0 <strcmp>
 25c:	cmp	r0, #0
 260:	beq	244 <coda_pcre_get_stringtable_entries+0x14c>
 264:	ldr	r3, [sp]
 268:	mov	fp, r6
 26c:	str	r9, [sl]
 270:	str	r8, [r3]
 274:	b	160 <coda_pcre_get_stringtable_entries+0x68>
 278:	mov	r9, r8
 27c:	b	228 <coda_pcre_get_stringtable_entries+0x130>

00000280 <get_first_set>:
 280:	str	r4, [sp, #-8]!
 284:	mov	r4, r2
 288:	mov	r3, r0
 28c:	ldr	r2, [r0, #8]
 290:	mov	ip, r1
 294:	str	lr, [sp, #4]
 298:	sub	sp, sp, #8
 29c:	tst	r2, #524288	; 0x80000
 2a0:	bne	2b0 <get_first_set+0x30>
 2a4:	ldr	r2, [r0, #12]
 2a8:	tst	r2, #1024	; 0x400
 2ac:	beq	32c <get_first_set+0xac>
 2b0:	mov	r0, r3
 2b4:	mov	r1, ip
 2b8:	add	r3, sp, #4
 2bc:	mov	r2, sp
 2c0:	bl	f8 <coda_pcre_get_stringtable_entries>
 2c4:	cmp	r0, #0
 2c8:	ble	31c <get_first_set+0x9c>
 2cc:	ldr	r3, [sp]
 2d0:	ldr	r1, [sp, #4]
 2d4:	ldrh	r2, [r3]
 2d8:	cmp	r3, r1
 2dc:	rev16	r2, r2
 2e0:	uxth	r2, r2
 2e4:	bhi	340 <get_first_set+0xc0>
 2e8:	ldr	ip, [r4, r2, lsl #3]
 2ec:	cmp	ip, #0
 2f0:	bge	340 <get_first_set+0xc0>
 2f4:	mov	ip, r0
 2f8:	b	308 <get_first_set+0x88>
 2fc:	ldr	r2, [r4, r0, lsl #3]
 300:	cmp	r2, #0
 304:	bge	31c <get_first_set+0x9c>
 308:	ldrh	r0, [r3, ip]!
 30c:	rev16	r0, r0
 310:	cmp	r3, r1
 314:	uxth	r0, r0
 318:	bls	2fc <get_first_set+0x7c>
 31c:	add	sp, sp, #8
 320:	ldr	r4, [sp]
 324:	add	sp, sp, #4
 328:	pop	{pc}		; (ldr pc, [sp], #4)
 32c:	bl	0 <coda_pcre_get_stringnumber>
 330:	add	sp, sp, #8
 334:	ldr	r4, [sp]
 338:	add	sp, sp, #4
 33c:	pop	{pc}		; (ldr pc, [sp], #4)
 340:	mov	r0, r2
 344:	b	31c <get_first_set+0x9c>

00000348 <coda_pcre_copy_substring>:
 348:	cmp	r3, r2
 34c:	strd	r4, [sp, #-16]!
 350:	movlt	r2, #0
 354:	movge	r2, #1
 358:	str	r6, [sp, #8]
 35c:	orrs	r5, r2, r3, lsr #31
 360:	str	lr, [sp, #12]
 364:	ldr	r6, [sp, #16]
 368:	bne	3bc <coda_pcre_copy_substring+0x74>
 36c:	lsl	r3, r3, #1
 370:	add	r2, r3, #1
 374:	ldr	r3, [r1, r3, lsl #2]
 378:	ldr	r4, [r1, r2, lsl #2]
 37c:	ldr	r2, [sp, #20]
 380:	sub	r4, r4, r3
 384:	cmp	r4, r2
 388:	bge	3b4 <coda_pcre_copy_substring+0x6c>
 38c:	add	r1, r0, r3
 390:	mov	r2, r4
 394:	mov	r0, r6
 398:	bl	0 <memcpy>
 39c:	strb	r5, [r6, r4]
 3a0:	mov	r0, r4
 3a4:	ldrd	r4, [sp]
 3a8:	ldr	r6, [sp, #8]
 3ac:	add	sp, sp, #12
 3b0:	pop	{pc}		; (ldr pc, [sp], #4)
 3b4:	mvn	r4, #5
 3b8:	b	3a0 <coda_pcre_copy_substring+0x58>
 3bc:	mvn	r4, #6
 3c0:	b	3a0 <coda_pcre_copy_substring+0x58>

000003c4 <coda_pcre_copy_named_substring>:
 3c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
 3c8:	mov	r5, r1
 3cc:	ldr	r1, [sp, #24]
 3d0:	strd	r6, [sp, #8]
 3d4:	mov	r6, r2
 3d8:	str	r8, [sp, #16]
 3dc:	mov	r8, r3
 3e0:	str	lr, [sp, #20]
 3e4:	ldr	r7, [sp, #28]
 3e8:	ldr	r4, [sp, #32]
 3ec:	bl	280 <get_first_set>
 3f0:	subs	r3, r0, #0
 3f4:	ble	424 <coda_pcre_copy_named_substring+0x60>
 3f8:	mov	r2, r8
 3fc:	mov	r1, r6
 400:	str	r7, [sp, #24]
 404:	mov	r0, r5
 408:	str	r4, [sp, #28]
 40c:	ldrd	r4, [sp]
 410:	ldrd	r6, [sp, #8]
 414:	ldr	r8, [sp, #16]
 418:	ldr	lr, [sp, #20]
 41c:	add	sp, sp, #24
 420:	b	348 <coda_pcre_copy_substring>
 424:	ldrd	r4, [sp]
 428:	ldrd	r6, [sp, #8]
 42c:	ldr	r8, [sp, #16]
 430:	add	sp, sp, #20
 434:	pop	{pc}		; (ldr pc, [sp], #4)

00000438 <coda_pcre_get_substring_list>:
 438:	strd	r4, [sp, #-36]!	; 0xffffffdc
 43c:	mov	r5, r2
 440:	movw	r2, #0
 444:	movt	r2, #0
 448:	strd	r6, [sp, #8]
 44c:	lsl	r6, r5, #1
 450:	mov	r7, r3
 454:	strd	r8, [sp, #16]
 458:	cmp	r6, #0
 45c:	strd	sl, [sp, #24]
 460:	str	lr, [sp, #32]
 464:	sub	sp, sp, #4
 468:	ldr	r3, [r2]
 46c:	ble	534 <coda_pcre_get_substring_list+0xfc>
 470:	mov	r8, r0
 474:	mov	r0, #4
 478:	mov	r4, r1
 47c:	mov	ip, #0
 480:	add	r1, r1, r0
 484:	ldr	lr, [r1, ip, lsl #2]
 488:	add	r0, r0, #5
 48c:	ldr	r2, [r4, ip, lsl #2]
 490:	add	ip, ip, #2
 494:	cmp	r6, ip
 498:	sub	lr, lr, r2
 49c:	add	r0, lr, r0
 4a0:	bgt	484 <coda_pcre_get_substring_list+0x4c>
 4a4:	blx	r3
 4a8:	subs	sl, r0, #0
 4ac:	beq	548 <coda_pcre_get_substring_list+0x110>
 4b0:	sub	r6, r6, #1
 4b4:	add	r3, r5, #1
 4b8:	str	sl, [r7]
 4bc:	lsr	r6, r6, #1
 4c0:	add	r7, r4, #8
 4c4:	mov	fp, sl
 4c8:	add	r3, sl, r3, lsl #2
 4cc:	mov	r9, #0
 4d0:	add	r7, r7, r6, lsl #3
 4d4:	ldm	r4, {r2, r5}
 4d8:	mov	r0, r3
 4dc:	add	r4, r4, #8
 4e0:	sub	r5, r5, r2
 4e4:	add	r1, r8, r2
 4e8:	mov	r2, r5
 4ec:	bl	0 <memcpy>
 4f0:	add	r3, r0, r5
 4f4:	cmp	r7, r4
 4f8:	str	r0, [fp], #4
 4fc:	strb	r9, [r3], #1
 500:	bne	4d4 <coda_pcre_get_substring_list+0x9c>
 504:	add	r6, r6, #1
 508:	add	sl, sl, r6, lsl #2
 50c:	mov	r3, #0
 510:	mov	r0, r3
 514:	str	r3, [sl]
 518:	add	sp, sp, #4
 51c:	ldrd	r4, [sp]
 520:	ldrd	r6, [sp, #8]
 524:	ldrd	r8, [sp, #16]
 528:	ldrd	sl, [sp, #24]
 52c:	add	sp, sp, #32
 530:	pop	{pc}		; (ldr pc, [sp], #4)
 534:	mov	r0, #4
 538:	blx	r3
 53c:	subs	sl, r0, #0
 540:	strne	sl, [r7]
 544:	bne	50c <coda_pcre_get_substring_list+0xd4>
 548:	mvn	r0, #5
 54c:	b	518 <coda_pcre_get_substring_list+0xe0>

00000550 <coda_pcre_free_substring_list>:
 550:	movw	r3, #0
 554:	movt	r3, #0
 558:	ldr	r3, [r3]
 55c:	bx	r3

00000560 <coda_pcre_get_substring>:
 560:	cmp	r3, r2
 564:	strd	r4, [sp, #-32]!	; 0xffffffe0
 568:	movlt	r2, #0
 56c:	movge	r2, #1
 570:	strd	r6, [sp, #8]
 574:	orrs	r7, r2, r3, lsr #31
 578:	strd	r8, [sp, #16]
 57c:	str	sl, [sp, #24]
 580:	str	lr, [sp, #28]
 584:	bne	5f8 <coda_pcre_get_substring+0x98>
 588:	mov	r6, r1
 58c:	add	r1, r1, r3, lsl #3
 590:	mov	r4, r3
 594:	ldr	r2, [r6, r3, lsl #3]
 598:	movw	r3, #0
 59c:	movt	r3, #0
 5a0:	mov	r9, r0
 5a4:	ldr	r5, [r1, #4]
 5a8:	ldr	r3, [r3]
 5ac:	sub	r5, r5, r2
 5b0:	add	r0, r5, #1
 5b4:	blx	r3
 5b8:	subs	r8, r0, #0
 5bc:	beq	600 <coda_pcre_get_substring+0xa0>
 5c0:	ldr	r1, [r6, r4, lsl #3]
 5c4:	mov	r2, r5
 5c8:	add	r1, r9, r1
 5cc:	bl	0 <memcpy>
 5d0:	ldr	r3, [sp, #32]
 5d4:	strb	r7, [r8, r5]
 5d8:	str	r8, [r3]
 5dc:	mov	r0, r5
 5e0:	ldrd	r4, [sp]
 5e4:	ldrd	r6, [sp, #8]
 5e8:	ldrd	r8, [sp, #16]
 5ec:	ldr	sl, [sp, #24]
 5f0:	add	sp, sp, #28
 5f4:	pop	{pc}		; (ldr pc, [sp], #4)
 5f8:	mvn	r5, #6
 5fc:	b	5dc <coda_pcre_get_substring+0x7c>
 600:	mvn	r5, #5
 604:	b	5dc <coda_pcre_get_substring+0x7c>

00000608 <coda_pcre_get_named_substring>:
 608:	strd	r4, [sp, #-24]!	; 0xffffffe8
 60c:	mov	r4, r1
 610:	mov	r5, r2
 614:	ldr	r1, [sp, #24]
 618:	strd	r6, [sp, #8]
 61c:	mov	r7, r3
 620:	str	r8, [sp, #16]
 624:	str	lr, [sp, #20]
 628:	ldr	r6, [sp, #28]
 62c:	bl	280 <get_first_set>
 630:	subs	r3, r0, #0
 634:	ble	660 <coda_pcre_get_named_substring+0x58>
 638:	mov	r2, r7
 63c:	mov	r1, r5
 640:	str	r6, [sp, #24]
 644:	mov	r0, r4
 648:	ldrd	r4, [sp]
 64c:	ldrd	r6, [sp, #8]
 650:	ldr	r8, [sp, #16]
 654:	ldr	lr, [sp, #20]
 658:	add	sp, sp, #24
 65c:	b	560 <coda_pcre_get_substring>
 660:	ldrd	r4, [sp]
 664:	ldrd	r6, [sp, #8]
 668:	ldr	r8, [sp, #16]
 66c:	add	sp, sp, #20
 670:	pop	{pc}		; (ldr pc, [sp], #4)

00000674 <coda_pcre_free_substring>:
 674:	movw	r3, #0
 678:	movt	r3, #0
 67c:	ldr	r3, [r3]
 680:	bx	r3
