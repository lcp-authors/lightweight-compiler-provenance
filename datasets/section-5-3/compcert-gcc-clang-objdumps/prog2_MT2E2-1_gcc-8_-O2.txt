
../compcert-repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	1115c <_start@@Base+0x3c>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <calloc@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <calloc@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r2, r1, ip, ror r1

00010e88 <calloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <strcmp@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <printf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <__isoc99_fscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <fopen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <free@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <memcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <realloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <strcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <puts@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <strlen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <abort@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f54 <main@@Base>:
   10f54:	movw	r1, #10296	; 0x2838
   10f58:	movt	r1, #1
   10f5c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10f60:	ldrd	r4, [r1]
   10f64:	movw	r0, #10812	; 0x2a3c
   10f68:	movt	r0, #1
   10f6c:	strd	r6, [sp, #8]
   10f70:	strd	r8, [sp, #16]
   10f74:	str	lr, [sp, #24]
   10f78:	sub	sp, sp, #380	; 0x17c
   10f7c:	ldrd	r2, [r1, #8]
   10f80:	add	r6, sp, #76	; 0x4c
   10f84:	add	r7, sp, #128	; 0x80
   10f88:	strd	r4, [sp, #76]	; 0x4c
   10f8c:	ldrd	r4, [r1, #16]
   10f90:	ldrd	r8, [r1, #32]
   10f94:	strd	r2, [sp, #84]	; 0x54
   10f98:	ldrd	r2, [r1, #24]
   10f9c:	strd	r4, [sp, #92]	; 0x5c
   10fa0:	ldrd	r4, [r1, #40]	; 0x28
   10fa4:	ldr	ip, [r1, #48]	; 0x30
   10fa8:	strd	r2, [sp, #100]	; 0x64
   10fac:	strd	r8, [sp, #108]	; 0x6c
   10fb0:	strd	r4, [sp, #116]	; 0x74
   10fb4:	str	ip, [sp, #124]	; 0x7c
   10fb8:	bl	10ef4 <puts@plt>
   10fbc:	bl	113c4 <avl_nova@@Base>
   10fc0:	mov	r4, r0
   10fc4:	mov	r1, r6
   10fc8:	mov	r0, r4
   10fcc:	add	r6, r6, #4
   10fd0:	bl	11830 <avl_insere@@Base>
   10fd4:	cmp	r7, r6
   10fd8:	bne	10fc4 <main@@Base+0x70>
   10fdc:	movw	r0, #10832	; 0x2a50
   10fe0:	movt	r0, #1
   10fe4:	bl	10ea0 <printf@plt>
   10fe8:	ldr	r0, [r4]
   10fec:	bl	11c70 <avl_imprime@@Base>
   10ff0:	movw	r0, #10852	; 0x2a64
   10ff4:	movt	r0, #1
   10ff8:	bl	10ea0 <printf@plt>
   10ffc:	ldr	r0, [r4]
   11000:	bl	11210 <crescente@@Base>
   11004:	movw	r0, #10884	; 0x2a84
   11008:	movt	r0, #1
   1100c:	bl	10ef4 <puts@plt>
   11010:	mov	r2, #300	; 0x12c
   11014:	ldr	r1, [pc, #252]	; 11118 <main@@Base+0x1c4>
   11018:	add	r0, sp, #76	; 0x4c
   1101c:	bl	10ed0 <memcpy@plt>
   11020:	mov	r2, #75	; 0x4b
   11024:	ldr	r1, [pc, #240]	; 1111c <main@@Base+0x1c8>
   11028:	mov	r0, sp
   1102c:	bl	10ed0 <memcpy@plt>
   11030:	movw	r0, #10888	; 0x2a88
   11034:	movt	r0, #1
   11038:	bl	10ef4 <puts@plt>
   1103c:	movw	r1, #10908	; 0x2a9c
   11040:	movt	r1, #1
   11044:	movw	r0, #10912	; 0x2aa0
   11048:	movt	r0, #1
   1104c:	bl	10eb8 <fopen@plt>
   11050:	subs	r6, r0, #0
   11054:	beq	11104 <main@@Base+0x1b0>
   11058:	bl	11d18 <lista_nova@@Base>
   1105c:	mov	r5, r0
   11060:	add	r1, sp, #76	; 0x4c
   11064:	mov	r2, #0
   11068:	bl	11dd4 <lista_insere@@Base>
   1106c:	mov	r2, #0
   11070:	add	r1, sp, #176	; 0xb0
   11074:	mov	r0, r5
   11078:	bl	11dd4 <lista_insere@@Base>
   1107c:	mov	r2, #0
   11080:	add	r1, sp, #276	; 0x114
   11084:	mov	r0, r5
   11088:	bl	11dd4 <lista_insere@@Base>
   1108c:	bl	11d18 <lista_nova@@Base>
   11090:	mov	r4, r0
   11094:	mov	r2, #0
   11098:	mov	r1, sp
   1109c:	bl	11dd4 <lista_insere@@Base>
   110a0:	mov	r2, #0
   110a4:	add	r1, sp, #25
   110a8:	mov	r0, r4
   110ac:	bl	11dd4 <lista_insere@@Base>
   110b0:	add	r1, sp, #50	; 0x32
   110b4:	mov	r2, #0
   110b8:	mov	r0, r4
   110bc:	bl	11dd4 <lista_insere@@Base>
   110c0:	mov	r2, r4
   110c4:	mov	r1, r5
   110c8:	mov	r0, r6
   110cc:	bl	112bc <valida_passwds@@Base>
   110d0:	mov	r0, r5
   110d4:	bl	11d4c <lista_apaga@@Base>
   110d8:	mov	r0, r4
   110dc:	bl	11d4c <lista_apaga@@Base>
   110e0:	mov	r0, r6
   110e4:	bl	10f3c <fclose@plt>
   110e8:	mov	r0, #0
   110ec:	add	sp, sp, #380	; 0x17c
   110f0:	ldrd	r4, [sp]
   110f4:	ldrd	r6, [sp, #8]
   110f8:	ldrd	r8, [sp, #16]
   110fc:	add	sp, sp, #24
   11100:	pop	{pc}		; (ldr pc, [sp], #4)
   11104:	movw	r0, #10928	; 0x2ab0
   11108:	movt	r0, #1
   1110c:	bl	10ef4 <puts@plt>
   11110:	mvn	r0, #0
   11114:	b	110ec <main@@Base+0x198>
   11118:	andeq	r2, r1, ip, ror #16
   1111c:	muleq	r1, r8, r9

00011120 <_start@@Base>:
   11120:	mov	fp, #0
   11124:	mov	lr, #0
   11128:	pop	{r1}		; (ldr r1, [sp], #4)
   1112c:	mov	r2, sp
   11130:	push	{r2}		; (str r2, [sp, #-4]!)
   11134:	push	{r0}		; (str r0, [sp, #-4]!)
   11138:	ldr	ip, [pc, #16]	; 11150 <_start@@Base+0x30>
   1113c:	push	{ip}		; (str ip, [sp, #-4]!)
   11140:	ldr	r0, [pc, #12]	; 11154 <_start@@Base+0x34>
   11144:	ldr	r3, [pc, #12]	; 11158 <_start@@Base+0x38>
   11148:	bl	10f0c <__libc_start_main@plt>
   1114c:	bl	10f48 <abort@plt>
   11150:	andeq	r2, r1, r8, lsr #16
   11154:	andeq	r0, r1, r4, asr pc
   11158:	andeq	r2, r1, r8, asr #15
   1115c:	ldr	r3, [pc, #20]	; 11178 <_start@@Base+0x58>
   11160:	ldr	r2, [pc, #20]	; 1117c <_start@@Base+0x5c>
   11164:	add	r3, pc, r3
   11168:	ldr	r2, [r3, r2]
   1116c:	cmp	r2, #0
   11170:	bxeq	lr
   11174:	b	10f18 <__gmon_start__@plt>
   11178:	muleq	r1, r4, lr
   1117c:	andeq	r0, r0, r0, asr r0
   11180:	ldr	r0, [pc, #24]	; 111a0 <_start@@Base+0x80>
   11184:	ldr	r3, [pc, #24]	; 111a4 <_start@@Base+0x84>
   11188:	cmp	r3, r0
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <_start@@Base+0x88>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r3, r2, ip, asr r0
   111a4:	andeq	r3, r2, ip, asr r0
   111a8:	andeq	r0, r0, r0
   111ac:	ldr	r0, [pc, #36]	; 111d8 <_start@@Base+0xb8>
   111b0:	ldr	r1, [pc, #36]	; 111dc <_start@@Base+0xbc>
   111b4:	sub	r1, r1, r0
   111b8:	asr	r1, r1, #2
   111bc:	add	r1, r1, r1, lsr #31
   111c0:	asrs	r1, r1, #1
   111c4:	bxeq	lr
   111c8:	ldr	r3, [pc, #16]	; 111e0 <_start@@Base+0xc0>
   111cc:	cmp	r3, #0
   111d0:	bxeq	lr
   111d4:	bx	r3
   111d8:	andeq	r3, r2, ip, asr r0
   111dc:	andeq	r3, r2, ip, asr r0
   111e0:	andeq	r0, r0, r0
   111e4:	push	{r4, lr}
   111e8:	ldr	r4, [pc, #24]	; 11208 <_start@@Base+0xe8>
   111ec:	ldrb	r3, [r4]
   111f0:	cmp	r3, #0
   111f4:	popne	{r4, pc}
   111f8:	bl	11180 <_start@@Base+0x60>
   111fc:	mov	r3, #1
   11200:	strb	r3, [r4]
   11204:	pop	{r4, pc}
   11208:	andeq	r3, r2, ip, asr r0
   1120c:	b	111ac <_start@@Base+0x8c>

00011210 <crescente@@Base>:
   11210:	strd	r4, [sp, #-16]!
   11214:	subs	r4, r0, #0
   11218:	str	r6, [sp, #8]
   1121c:	str	lr, [sp, #12]
   11220:	beq	1124c <crescente@@Base+0x3c>
   11224:	movw	r5, #10724	; 0x29e4
   11228:	movt	r5, #1
   1122c:	ldr	r0, [r4, #4]
   11230:	bl	11210 <crescente@@Base>
   11234:	mov	r0, r5
   11238:	ldr	r1, [r4]
   1123c:	bl	10ea0 <printf@plt>
   11240:	ldr	r4, [r4, #8]
   11244:	cmp	r4, #0
   11248:	bne	1122c <crescente@@Base+0x1c>
   1124c:	ldrd	r4, [sp]
   11250:	ldr	r6, [sp, #8]
   11254:	add	sp, sp, #12
   11258:	pop	{pc}		; (ldr pc, [sp], #4)

0001125c <decrescente@@Base>:
   1125c:	strd	r4, [sp, #-16]!
   11260:	subs	r4, r0, #0
   11264:	str	r6, [sp, #8]
   11268:	str	lr, [sp, #12]
   1126c:	beq	11298 <decrescente@@Base+0x3c>
   11270:	movw	r5, #10724	; 0x29e4
   11274:	movt	r5, #1
   11278:	ldr	r0, [r4, #8]
   1127c:	bl	1125c <decrescente@@Base>
   11280:	mov	r0, r5
   11284:	ldr	r1, [r4]
   11288:	bl	10ea0 <printf@plt>
   1128c:	ldr	r4, [r4, #4]
   11290:	cmp	r4, #0
   11294:	bne	11278 <decrescente@@Base+0x1c>
   11298:	ldrd	r4, [sp]
   1129c:	ldr	r6, [sp, #8]
   112a0:	add	sp, sp, #12
   112a4:	pop	{pc}		; (ldr pc, [sp], #4)

000112a8 <avl_imprime_ord@@Base>:
   112a8:	cmp	r1, #0
   112ac:	ldr	r0, [r0]
   112b0:	blt	112b8 <avl_imprime_ord@@Base+0x10>
   112b4:	b	11210 <crescente@@Base>
   112b8:	b	1125c <decrescente@@Base>

000112bc <valida_passwds@@Base>:
   112bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   112c0:	mov	r5, r0
   112c4:	mov	r0, #10
   112c8:	strd	r6, [sp, #8]
   112cc:	mov	r7, r2
   112d0:	movw	r4, #10728	; 0x29e8
   112d4:	movt	r4, #1
   112d8:	strd	r8, [sp, #16]
   112dc:	mov	r8, r1
   112e0:	movw	r1, #9912	; 0x26b8
   112e4:	movt	r1, #1
   112e8:	str	lr, [sp, #24]
   112ec:	sub	sp, sp, #60	; 0x3c
   112f0:	bl	12160 <tabela_nova@@Base>
   112f4:	mov	r6, r0
   112f8:	b	11300 <valida_passwds@@Base+0x44>
   112fc:	bl	1227c <tabela_adiciona@@Base>
   11300:	mov	r2, sp
   11304:	mov	r1, r4
   11308:	add	r3, sp, #28
   1130c:	mov	r0, r5
   11310:	bl	10eac <__isoc99_fscanf@plt>
   11314:	cmp	r0, #2
   11318:	add	r2, sp, #28
   1131c:	mov	r1, sp
   11320:	mov	r0, r6
   11324:	beq	112fc <valida_passwds@@Base+0x40>
   11328:	ldr	r5, [r7]
   1132c:	ldr	r4, [r8]
   11330:	cmp	r4, #0
   11334:	cmpne	r5, #0
   11338:	beq	1139c <valida_passwds@@Base+0xe0>
   1133c:	movw	r8, #10736	; 0x29f0
   11340:	movt	r8, #1
   11344:	movw	r7, #10788	; 0x2a24
   11348:	movt	r7, #1
   1134c:	movw	r9, #10760	; 0x2a08
   11350:	movt	r9, #1
   11354:	mov	r0, r8
   11358:	ldr	r2, [r5]
   1135c:	ldr	r1, [r4]
   11360:	bl	10ea0 <printf@plt>
   11364:	mov	r0, r6
   11368:	ldr	r1, [r4]
   1136c:	bl	12444 <tabela_valor@@Base>
   11370:	ldr	r1, [r5]
   11374:	bl	10e94 <strcmp@plt>
   11378:	cmp	r0, #0
   1137c:	mov	r0, r7
   11380:	moveq	r0, r9
   11384:	bl	10ef4 <puts@plt>
   11388:	ldr	r4, [r4, #4]
   1138c:	ldr	r5, [r5, #4]
   11390:	cmp	r4, #0
   11394:	cmpne	r5, #0
   11398:	bne	11354 <valida_passwds@@Base+0x98>
   1139c:	mov	r0, r6
   113a0:	bl	12504 <tabela_esvazia@@Base>
   113a4:	mov	r0, r6
   113a8:	bl	10ec4 <free@plt>
   113ac:	add	sp, sp, #60	; 0x3c
   113b0:	ldrd	r4, [sp]
   113b4:	ldrd	r6, [sp, #8]
   113b8:	ldrd	r8, [sp, #16]
   113bc:	add	sp, sp, #24
   113c0:	pop	{pc}		; (ldr pc, [sp], #4)

000113c4 <avl_nova@@Base>:
   113c4:	mov	r0, #4
   113c8:	str	r4, [sp, #-8]!
   113cc:	str	lr, [sp, #4]
   113d0:	bl	10f00 <malloc@plt>
   113d4:	cmp	r0, #0
   113d8:	ldr	r4, [sp]
   113dc:	add	sp, sp, #4
   113e0:	movne	r3, #0
   113e4:	strne	r3, [r0]
   113e8:	pop	{pc}		; (ldr pc, [sp], #4)

000113ec <avl_min@@Base>:
   113ec:	cmp	r0, #0
   113f0:	bne	113fc <avl_min@@Base+0x10>
   113f4:	b	11410 <avl_min@@Base+0x24>
   113f8:	mov	r0, r3
   113fc:	ldr	r3, [r0, #4]
   11400:	cmp	r3, #0
   11404:	bne	113f8 <avl_min@@Base+0xc>
   11408:	ldr	r0, [r0]
   1140c:	bx	lr
   11410:	bx	lr

00011414 <avl_max@@Base>:
   11414:	cmp	r0, #0
   11418:	bne	11424 <avl_max@@Base+0x10>
   1141c:	b	11438 <avl_max@@Base+0x24>
   11420:	mov	r0, r3
   11424:	ldr	r3, [r0, #8]
   11428:	cmp	r3, #0
   1142c:	bne	11420 <avl_max@@Base+0xc>
   11430:	ldr	r0, [r0]
   11434:	bx	lr
   11438:	bx	lr

0001143c <avl_altura@@Base>:
   1143c:	cmp	r0, #0
   11440:	ldrne	r0, [r0, #12]
   11444:	mvneq	r0, #0
   11448:	bx	lr

0001144c <max@@Base>:
   1144c:	cmp	r1, r0
   11450:	movge	r0, r1
   11454:	bx	lr

00011458 <avl_novo_no@@Base>:
   11458:	strd	r4, [sp, #-16]!
   1145c:	mov	r5, r0
   11460:	mov	r0, #16
   11464:	str	r6, [sp, #8]
   11468:	str	lr, [sp, #12]
   1146c:	bl	10f00 <malloc@plt>
   11470:	mov	r4, r0
   11474:	mov	r0, r5
   11478:	bl	10f24 <strlen@plt>
   1147c:	add	r6, r0, #1
   11480:	mov	r0, r6
   11484:	bl	10f00 <malloc@plt>
   11488:	mov	r2, r6
   1148c:	mov	r1, r5
   11490:	str	r0, [r4]
   11494:	bl	10ed0 <memcpy@plt>
   11498:	mov	r3, #0
   1149c:	mov	r0, r4
   114a0:	ldr	r6, [sp, #8]
   114a4:	str	r3, [r4, #4]
   114a8:	str	r3, [r4, #8]
   114ac:	str	r3, [r4, #12]
   114b0:	ldrd	r4, [sp]
   114b4:	add	sp, sp, #12
   114b8:	pop	{pc}		; (ldr pc, [sp], #4)

000114bc <roda_direita@@Base>:
   114bc:	ldr	r2, [r0, #4]
   114c0:	ldr	r3, [r2, #8]
   114c4:	str	r0, [r2, #8]
   114c8:	cmp	r3, #0
   114cc:	str	r3, [r0, #4]
   114d0:	ldrne	r1, [r3, #12]
   114d4:	mvneq	r1, #0
   114d8:	ldr	r3, [r0, #8]
   114dc:	ldr	ip, [r2, #4]
   114e0:	cmp	r3, #0
   114e4:	ldrne	r3, [r3, #12]
   114e8:	mvneq	r3, #0
   114ec:	cmp	r3, r1
   114f0:	movlt	r3, r1
   114f4:	cmp	ip, #0
   114f8:	add	r3, r3, #1
   114fc:	mvneq	r1, #0
   11500:	str	r3, [r0, #12]
   11504:	mov	r0, r2
   11508:	ldrne	r1, [ip, #12]
   1150c:	cmp	r3, r1
   11510:	movlt	r3, r1
   11514:	add	r3, r3, #1
   11518:	str	r3, [r2, #12]
   1151c:	bx	lr

00011520 <roda_esquerda@@Base>:
   11520:	ldr	r2, [r0, #8]
   11524:	ldr	r1, [r2, #4]
   11528:	str	r0, [r2, #4]
   1152c:	ldr	r3, [r0, #4]
   11530:	str	r1, [r0, #8]
   11534:	cmp	r3, #0
   11538:	ldrne	ip, [r3, #12]
   1153c:	mvneq	ip, #0
   11540:	cmp	r1, #0
   11544:	mvneq	r3, #0
   11548:	ldrne	r3, [r1, #12]
   1154c:	ldr	r1, [r2, #8]
   11550:	cmp	r3, ip
   11554:	movlt	r3, ip
   11558:	add	r3, r3, #1
   1155c:	cmp	r1, #0
   11560:	mvneq	r1, #0
   11564:	str	r3, [r0, #12]
   11568:	mov	r0, r2
   1156c:	ldrne	r1, [r1, #12]
   11570:	cmp	r3, r1
   11574:	movlt	r3, r1
   11578:	add	r3, r3, #1
   1157c:	str	r3, [r2, #12]
   11580:	bx	lr

00011584 <calc_balanceamento@@Base>:
   11584:	cmp	r0, #0
   11588:	beq	115b0 <calc_balanceamento@@Base+0x2c>
   1158c:	ldr	r3, [r0, #8]
   11590:	cmp	r3, #0
   11594:	ldrne	r2, [r3, #12]
   11598:	mvneq	r2, #0
   1159c:	ldr	r3, [r0, #4]
   115a0:	cmp	r3, #0
   115a4:	ldrne	r0, [r3, #12]
   115a8:	mvneq	r0, #0
   115ac:	sub	r0, r2, r0
   115b0:	bx	lr

000115b4 <avl_pesquisa_impl@@Base>:
   115b4:	strd	r4, [sp, #-16]!
   115b8:	subs	r4, r0, #0
   115bc:	movne	r5, r1
   115c0:	str	r6, [sp, #8]
   115c4:	str	lr, [sp, #12]
   115c8:	bne	115e0 <avl_pesquisa_impl@@Base+0x2c>
   115cc:	b	11600 <avl_pesquisa_impl@@Base+0x4c>
   115d0:	beq	11600 <avl_pesquisa_impl@@Base+0x4c>
   115d4:	ldr	r4, [r4, #8]
   115d8:	cmp	r4, #0
   115dc:	beq	11600 <avl_pesquisa_impl@@Base+0x4c>
   115e0:	mov	r0, r5
   115e4:	ldr	r1, [r4]
   115e8:	bl	10e94 <strcmp@plt>
   115ec:	cmp	r0, #0
   115f0:	bge	115d0 <avl_pesquisa_impl@@Base+0x1c>
   115f4:	ldr	r4, [r4, #4]
   115f8:	cmp	r4, #0
   115fc:	bne	115e0 <avl_pesquisa_impl@@Base+0x2c>
   11600:	mov	r0, r4
   11604:	ldrd	r4, [sp]
   11608:	ldr	r6, [sp, #8]
   1160c:	add	sp, sp, #12
   11610:	pop	{pc}		; (ldr pc, [sp], #4)

00011614 <avl_pesquisa@@Base>:
   11614:	cmp	r1, #0
   11618:	cmpne	r0, #0
   1161c:	beq	11628 <avl_pesquisa@@Base+0x14>
   11620:	ldr	r0, [r0]
   11624:	b	115b4 <avl_pesquisa_impl@@Base>
   11628:	mov	r0, #0
   1162c:	bx	lr

00011630 <avl_insere_impl@@Base>:
   11630:	strd	r4, [sp, #-16]!
   11634:	subs	r4, r0, #0
   11638:	str	r6, [sp, #8]
   1163c:	str	lr, [sp, #12]
   11640:	beq	11770 <avl_insere_impl@@Base+0x140>
   11644:	mov	r0, r1
   11648:	mov	r5, r1
   1164c:	ldr	r1, [r4]
   11650:	bl	10e94 <strcmp@plt>
   11654:	cmp	r0, #0
   11658:	blt	1170c <avl_insere_impl@@Base+0xdc>
   1165c:	beq	116b8 <avl_insere_impl@@Base+0x88>
   11660:	mov	r1, r5
   11664:	ldr	r0, [r4, #8]
   11668:	bl	11630 <avl_insere_impl@@Base>
   1166c:	ldr	r2, [r4, #4]
   11670:	str	r0, [r4, #8]
   11674:	cmp	r2, #0
   11678:	beq	117a4 <avl_insere_impl@@Base+0x174>
   1167c:	cmp	r0, #0
   11680:	ldr	r3, [r2, #12]
   11684:	beq	117d8 <avl_insere_impl@@Base+0x1a8>
   11688:	ldr	r1, [r0, #12]
   1168c:	cmp	r3, r1
   11690:	movlt	r3, r1
   11694:	add	r3, r3, #1
   11698:	str	r3, [r4, #12]
   1169c:	ldr	r3, [r0, #12]
   116a0:	ldr	r1, [r2, #12]
   116a4:	sub	r3, r3, r1
   116a8:	cmp	r3, #1
   116ac:	bgt	116cc <avl_insere_impl@@Base+0x9c>
   116b0:	cmn	r3, #1
   116b4:	blt	11728 <avl_insere_impl@@Base+0xf8>
   116b8:	mov	r0, r4
   116bc:	ldrd	r4, [sp]
   116c0:	ldr	r6, [sp, #8]
   116c4:	add	sp, sp, #12
   116c8:	pop	{pc}		; (ldr pc, [sp], #4)
   116cc:	ldrd	r2, [r0, #4]
   116d0:	cmp	r3, #0
   116d4:	beq	117f8 <avl_insere_impl@@Base+0x1c8>
   116d8:	cmp	r2, #0
   116dc:	ldr	r3, [r3, #12]
   116e0:	beq	11808 <avl_insere_impl@@Base+0x1d8>
   116e4:	ldr	r2, [r2, #12]
   116e8:	sub	r3, r3, r2
   116ec:	cmp	r3, #0
   116f0:	blt	11788 <avl_insere_impl@@Base+0x158>
   116f4:	mov	r0, r4
   116f8:	ldrd	r4, [sp]
   116fc:	ldr	r6, [sp, #8]
   11700:	ldr	lr, [sp, #12]
   11704:	add	sp, sp, #16
   11708:	b	11520 <roda_esquerda@@Base>
   1170c:	mov	r1, r5
   11710:	ldr	r0, [r4, #4]
   11714:	bl	11630 <avl_insere_impl@@Base>
   11718:	mov	r2, r0
   1171c:	ldr	r0, [r4, #8]
   11720:	str	r2, [r4, #4]
   11724:	b	11674 <avl_insere_impl@@Base+0x44>
   11728:	cmp	r2, #0
   1172c:	beq	11758 <avl_insere_impl@@Base+0x128>
   11730:	ldmib	r2, {r1, r3}
   11734:	cmp	r3, #0
   11738:	beq	11818 <avl_insere_impl@@Base+0x1e8>
   1173c:	cmp	r1, #0
   11740:	ldr	r3, [r3, #12]
   11744:	beq	11810 <avl_insere_impl@@Base+0x1e0>
   11748:	ldr	r1, [r1, #12]
   1174c:	sub	r3, r3, r1
   11750:	cmp	r3, #0
   11754:	bgt	11794 <avl_insere_impl@@Base+0x164>
   11758:	mov	r0, r4
   1175c:	ldrd	r4, [sp]
   11760:	ldr	r6, [sp, #8]
   11764:	ldr	lr, [sp, #12]
   11768:	add	sp, sp, #16
   1176c:	b	114bc <roda_direita@@Base>
   11770:	mov	r0, r1
   11774:	ldrd	r4, [sp]
   11778:	ldr	r6, [sp, #8]
   1177c:	ldr	lr, [sp, #12]
   11780:	add	sp, sp, #16
   11784:	b	11458 <avl_novo_no@@Base>
   11788:	bl	114bc <roda_direita@@Base>
   1178c:	str	r0, [r4, #8]
   11790:	b	116f4 <avl_insere_impl@@Base+0xc4>
   11794:	mov	r0, r2
   11798:	bl	11520 <roda_esquerda@@Base>
   1179c:	str	r0, [r4, #4]
   117a0:	b	11758 <avl_insere_impl@@Base+0x128>
   117a4:	cmp	r0, #0
   117a8:	beq	11828 <avl_insere_impl@@Base+0x1f8>
   117ac:	ldr	r3, [r0, #12]
   117b0:	orr	r3, r3, r3, asr #31
   117b4:	add	r3, r3, #1
   117b8:	str	r3, [r4, #12]
   117bc:	ldr	r3, [r0, #12]
   117c0:	add	r3, r3, #1
   117c4:	cmp	r3, #1
   117c8:	bgt	116cc <avl_insere_impl@@Base+0x9c>
   117cc:	cmn	r3, #1
   117d0:	bge	116b8 <avl_insere_impl@@Base+0x88>
   117d4:	b	11758 <avl_insere_impl@@Base+0x128>
   117d8:	orr	r3, r3, r3, asr #31
   117dc:	add	r3, r3, #1
   117e0:	str	r3, [r4, #12]
   117e4:	ldr	r3, [r2, #12]
   117e8:	mvn	r3, r3
   117ec:	cmp	r3, #1
   117f0:	bgt	116f4 <avl_insere_impl@@Base+0xc4>
   117f4:	b	116b0 <avl_insere_impl@@Base+0x80>
   117f8:	cmp	r2, #0
   117fc:	beq	116f4 <avl_insere_impl@@Base+0xc4>
   11800:	mvn	r3, #0
   11804:	b	116e4 <avl_insere_impl@@Base+0xb4>
   11808:	mvn	r2, #0
   1180c:	b	116e8 <avl_insere_impl@@Base+0xb8>
   11810:	mvn	r1, #0
   11814:	b	1174c <avl_insere_impl@@Base+0x11c>
   11818:	cmp	r1, #0
   1181c:	beq	11758 <avl_insere_impl@@Base+0x128>
   11820:	mvn	r3, #0
   11824:	b	11748 <avl_insere_impl@@Base+0x118>
   11828:	str	r0, [r4, #12]
   1182c:	b	116b8 <avl_insere_impl@@Base+0x88>

00011830 <avl_insere@@Base>:
   11830:	clz	r3, r1
   11834:	cmp	r0, #0
   11838:	strd	r4, [sp, #-16]!
   1183c:	lsr	r3, r3, #5
   11840:	moveq	r4, #1
   11844:	str	r6, [sp, #8]
   11848:	str	lr, [sp, #12]
   1184c:	movne	r4, r3
   11850:	cmp	r4, #0
   11854:	bne	1187c <avl_insere@@Base+0x4c>
   11858:	mov	r5, r0
   1185c:	ldr	r0, [r0]
   11860:	bl	11630 <avl_insere_impl@@Base>
   11864:	str	r0, [r5]
   11868:	mov	r0, r4
   1186c:	ldrd	r4, [sp]
   11870:	ldr	r6, [sp, #8]
   11874:	add	sp, sp, #12
   11878:	pop	{pc}		; (ldr pc, [sp], #4)
   1187c:	mvn	r4, #0
   11880:	b	11868 <avl_insere@@Base+0x38>

00011884 <avl_no_valormin@@Base>:
   11884:	b	1188c <avl_no_valormin@@Base+0x8>
   11888:	mov	r0, r3
   1188c:	ldr	r3, [r0, #4]
   11890:	cmp	r3, #0
   11894:	bne	11888 <avl_no_valormin@@Base+0x4>
   11898:	bx	lr

0001189c <avl_no_valormax@@Base>:
   1189c:	b	118a4 <avl_no_valormax@@Base+0x8>
   118a0:	mov	r0, r3
   118a4:	ldr	r3, [r0, #8]
   118a8:	cmp	r3, #0
   118ac:	bne	118a0 <avl_no_valormax@@Base+0x4>
   118b0:	bx	lr

000118b4 <avl_remove_impl@@Base>:
   118b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118b8:	subs	r5, r0, #0
   118bc:	strd	r6, [sp, #8]
   118c0:	str	r8, [sp, #16]
   118c4:	str	lr, [sp, #20]
   118c8:	beq	119e8 <avl_remove_impl@@Base+0x134>
   118cc:	ldr	r7, [r5]
   118d0:	mov	r0, r1
   118d4:	mov	r6, r1
   118d8:	mov	r1, r7
   118dc:	bl	10e94 <strcmp@plt>
   118e0:	cmp	r0, #0
   118e4:	blt	11a48 <avl_remove_impl@@Base+0x194>
   118e8:	ldr	r4, [r5, #8]
   118ec:	bne	11990 <avl_remove_impl@@Base+0xdc>
   118f0:	ldr	r6, [r5, #4]
   118f4:	cmp	r6, #0
   118f8:	beq	11ac8 <avl_remove_impl@@Base+0x214>
   118fc:	cmp	r4, #0
   11900:	bne	1194c <avl_remove_impl@@Base+0x98>
   11904:	ldr	r0, [r6]
   11908:	bl	10f24 <strlen@plt>
   1190c:	add	r1, r0, #1
   11910:	mov	r0, r7
   11914:	bl	10edc <realloc@plt>
   11918:	str	r0, [r5]
   1191c:	ldr	r1, [r6]
   11920:	bl	10ee8 <strcpy@plt>
   11924:	ldrd	r0, [r6]
   11928:	ldrd	r2, [r6, #8]
   1192c:	stmib	r5, {r1, r2, r3}
   11930:	bl	10ec4 <free@plt>
   11934:	mov	r0, r6
   11938:	bl	10ec4 <free@plt>
   1193c:	ldr	r2, [r5, #4]
   11940:	ldr	r0, [r5, #8]
   11944:	b	119a4 <avl_remove_impl@@Base+0xf0>
   11948:	mov	r4, r3
   1194c:	ldr	r3, [r4, #4]
   11950:	cmp	r3, #0
   11954:	bne	11948 <avl_remove_impl@@Base+0x94>
   11958:	ldr	r0, [r4]
   1195c:	bl	10f24 <strlen@plt>
   11960:	add	r1, r0, #1
   11964:	mov	r0, r7
   11968:	bl	10edc <realloc@plt>
   1196c:	str	r0, [r5]
   11970:	ldr	r1, [r4]
   11974:	bl	10ee8 <strcpy@plt>
   11978:	ldr	r1, [r4]
   1197c:	ldr	r0, [r5, #8]
   11980:	bl	118b4 <avl_remove_impl@@Base>
   11984:	str	r0, [r5, #8]
   11988:	ldr	r2, [r5, #4]
   1198c:	b	119a4 <avl_remove_impl@@Base+0xf0>
   11990:	mov	r1, r6
   11994:	mov	r0, r4
   11998:	bl	118b4 <avl_remove_impl@@Base>
   1199c:	ldr	r2, [r5, #4]
   119a0:	str	r0, [r5, #8]
   119a4:	cmp	r2, #0
   119a8:	beq	11b04 <avl_remove_impl@@Base+0x250>
   119ac:	cmp	r0, #0
   119b0:	ldr	r3, [r2, #12]
   119b4:	beq	11ae4 <avl_remove_impl@@Base+0x230>
   119b8:	ldr	r1, [r0, #12]
   119bc:	cmp	r3, r1
   119c0:	movlt	r3, r1
   119c4:	add	r3, r3, #1
   119c8:	str	r3, [r5, #12]
   119cc:	ldr	r3, [r0, #12]
   119d0:	ldr	r1, [r2, #12]
   119d4:	sub	r3, r3, r1
   119d8:	cmp	r3, #1
   119dc:	bgt	11a04 <avl_remove_impl@@Base+0x150>
   119e0:	cmn	r3, #1
   119e4:	blt	11a64 <avl_remove_impl@@Base+0x1b0>
   119e8:	mov	r4, r5
   119ec:	mov	r0, r4
   119f0:	ldrd	r4, [sp]
   119f4:	ldrd	r6, [sp, #8]
   119f8:	ldr	r8, [sp, #16]
   119fc:	add	sp, sp, #20
   11a00:	pop	{pc}		; (ldr pc, [sp], #4)
   11a04:	ldrd	r2, [r0, #4]
   11a08:	cmp	r3, #0
   11a0c:	beq	11b40 <avl_remove_impl@@Base+0x28c>
   11a10:	cmp	r2, #0
   11a14:	ldr	r3, [r3, #12]
   11a18:	beq	11b38 <avl_remove_impl@@Base+0x284>
   11a1c:	ldr	r2, [r2, #12]
   11a20:	sub	r3, r3, r2
   11a24:	cmp	r3, #0
   11a28:	blt	11abc <avl_remove_impl@@Base+0x208>
   11a2c:	mov	r0, r5
   11a30:	ldrd	r4, [sp]
   11a34:	ldrd	r6, [sp, #8]
   11a38:	ldr	r8, [sp, #16]
   11a3c:	ldr	lr, [sp, #20]
   11a40:	add	sp, sp, #24
   11a44:	b	11520 <roda_esquerda@@Base>
   11a48:	mov	r1, r6
   11a4c:	ldr	r0, [r5, #4]
   11a50:	bl	118b4 <avl_remove_impl@@Base>
   11a54:	mov	r2, r0
   11a58:	ldr	r0, [r5, #8]
   11a5c:	str	r2, [r5, #4]
   11a60:	b	119a4 <avl_remove_impl@@Base+0xf0>
   11a64:	cmp	r2, #0
   11a68:	beq	11aa0 <avl_remove_impl@@Base+0x1ec>
   11a6c:	ldmib	r2, {r1, r3}
   11a70:	cmp	r3, #0
   11a74:	beq	11b58 <avl_remove_impl@@Base+0x2a4>
   11a78:	cmp	r1, #0
   11a7c:	ldr	r3, [r3, #12]
   11a80:	beq	11b50 <avl_remove_impl@@Base+0x29c>
   11a84:	ldr	r1, [r1, #12]
   11a88:	sub	r3, r3, r1
   11a8c:	cmp	r3, #0
   11a90:	ble	11aa0 <avl_remove_impl@@Base+0x1ec>
   11a94:	mov	r0, r2
   11a98:	bl	11520 <roda_esquerda@@Base>
   11a9c:	str	r0, [r5, #4]
   11aa0:	mov	r0, r5
   11aa4:	ldrd	r4, [sp]
   11aa8:	ldrd	r6, [sp, #8]
   11aac:	ldr	r8, [sp, #16]
   11ab0:	ldr	lr, [sp, #20]
   11ab4:	add	sp, sp, #24
   11ab8:	b	114bc <roda_direita@@Base>
   11abc:	bl	114bc <roda_direita@@Base>
   11ac0:	str	r0, [r5, #8]
   11ac4:	b	11a2c <avl_remove_impl@@Base+0x178>
   11ac8:	cmp	r4, #0
   11acc:	bne	11b70 <avl_remove_impl@@Base+0x2bc>
   11ad0:	mov	r0, r7
   11ad4:	bl	10ec4 <free@plt>
   11ad8:	mov	r0, r5
   11adc:	bl	10ec4 <free@plt>
   11ae0:	b	119ec <avl_remove_impl@@Base+0x138>
   11ae4:	orr	r3, r3, r3, asr #31
   11ae8:	add	r3, r3, #1
   11aec:	str	r3, [r5, #12]
   11af0:	ldr	r3, [r2, #12]
   11af4:	mvn	r3, r3
   11af8:	cmp	r3, #1
   11afc:	bgt	11a2c <avl_remove_impl@@Base+0x178>
   11b00:	b	119e0 <avl_remove_impl@@Base+0x12c>
   11b04:	cmp	r0, #0
   11b08:	beq	11b68 <avl_remove_impl@@Base+0x2b4>
   11b0c:	ldr	r3, [r0, #12]
   11b10:	orr	r3, r3, r3, asr #31
   11b14:	add	r3, r3, #1
   11b18:	str	r3, [r5, #12]
   11b1c:	ldr	r3, [r0, #12]
   11b20:	add	r3, r3, #1
   11b24:	cmp	r3, #1
   11b28:	bgt	11a04 <avl_remove_impl@@Base+0x150>
   11b2c:	cmn	r3, #1
   11b30:	bge	119e8 <avl_remove_impl@@Base+0x134>
   11b34:	b	11aa0 <avl_remove_impl@@Base+0x1ec>
   11b38:	mvn	r2, #0
   11b3c:	b	11a20 <avl_remove_impl@@Base+0x16c>
   11b40:	cmp	r2, #0
   11b44:	beq	11a2c <avl_remove_impl@@Base+0x178>
   11b48:	mvn	r3, #0
   11b4c:	b	11a1c <avl_remove_impl@@Base+0x168>
   11b50:	mvn	r1, #0
   11b54:	b	11a88 <avl_remove_impl@@Base+0x1d4>
   11b58:	cmp	r1, #0
   11b5c:	beq	11aa0 <avl_remove_impl@@Base+0x1ec>
   11b60:	mvn	r3, #0
   11b64:	b	11a84 <avl_remove_impl@@Base+0x1d0>
   11b68:	str	r0, [r5, #12]
   11b6c:	b	119e8 <avl_remove_impl@@Base+0x134>
   11b70:	mov	r6, r4
   11b74:	b	11904 <avl_remove_impl@@Base+0x50>

00011b78 <avl_apaga@@Base>:
   11b78:	str	r4, [sp, #-8]!
   11b7c:	subs	r4, r0, #0
   11b80:	str	lr, [sp, #4]
   11b84:	beq	11bc4 <avl_apaga@@Base+0x4c>
   11b88:	ldr	r3, [r4]
   11b8c:	cmp	r3, #0
   11b90:	beq	11bb0 <avl_apaga@@Base+0x38>
   11b94:	mov	r0, r3
   11b98:	ldr	r1, [r3]
   11b9c:	bl	118b4 <avl_remove_impl@@Base>
   11ba0:	cmp	r0, #0
   11ba4:	mov	r3, r0
   11ba8:	str	r0, [r4]
   11bac:	bne	11b94 <avl_apaga@@Base+0x1c>
   11bb0:	mov	r0, r4
   11bb4:	ldr	r4, [sp]
   11bb8:	ldr	lr, [sp, #4]
   11bbc:	add	sp, sp, #8
   11bc0:	b	10ec4 <free@plt>
   11bc4:	ldr	r4, [sp]
   11bc8:	add	sp, sp, #4
   11bcc:	pop	{pc}		; (ldr pc, [sp], #4)

00011bd0 <avl_remove@@Base>:
   11bd0:	clz	r3, r1
   11bd4:	cmp	r0, #0
   11bd8:	strd	r4, [sp, #-16]!
   11bdc:	lsr	r3, r3, #5
   11be0:	moveq	r4, #1
   11be4:	str	r6, [sp, #8]
   11be8:	str	lr, [sp, #12]
   11bec:	movne	r4, r3
   11bf0:	cmp	r4, #0
   11bf4:	bne	11c1c <avl_remove@@Base+0x4c>
   11bf8:	mov	r5, r0
   11bfc:	ldr	r0, [r0]
   11c00:	bl	118b4 <avl_remove_impl@@Base>
   11c04:	str	r0, [r5]
   11c08:	mov	r0, r4
   11c0c:	ldrd	r4, [sp]
   11c10:	ldr	r6, [sp, #8]
   11c14:	add	sp, sp, #12
   11c18:	pop	{pc}		; (ldr pc, [sp], #4)
   11c1c:	mvn	r4, #0
   11c20:	b	11c08 <avl_remove@@Base+0x38>

00011c24 <avl_preordem_impl@@Base>:
   11c24:	strd	r4, [sp, #-16]!
   11c28:	subs	r4, r0, #0
   11c2c:	str	r6, [sp, #8]
   11c30:	str	lr, [sp, #12]
   11c34:	beq	11c60 <avl_preordem_impl@@Base+0x3c>
   11c38:	movw	r5, #10724	; 0x29e4
   11c3c:	movt	r5, #1
   11c40:	mov	r0, r5
   11c44:	ldr	r1, [r4]
   11c48:	bl	10ea0 <printf@plt>
   11c4c:	ldr	r0, [r4, #4]
   11c50:	bl	11c24 <avl_preordem_impl@@Base>
   11c54:	ldr	r4, [r4, #8]
   11c58:	cmp	r4, #0
   11c5c:	bne	11c40 <avl_preordem_impl@@Base+0x1c>
   11c60:	ldrd	r4, [sp]
   11c64:	ldr	r6, [sp, #8]
   11c68:	add	sp, sp, #12
   11c6c:	pop	{pc}		; (ldr pc, [sp], #4)

00011c70 <avl_imprime@@Base>:
   11c70:	cmp	r0, #0
   11c74:	bxeq	lr
   11c78:	str	r4, [sp, #-8]!
   11c7c:	str	lr, [sp, #4]
   11c80:	bl	11c24 <avl_preordem_impl@@Base>
   11c84:	mov	r0, #10
   11c88:	ldr	r4, [sp]
   11c8c:	ldr	lr, [sp, #4]
   11c90:	add	sp, sp, #8
   11c94:	b	10f30 <putchar@plt>

00011c98 <novo_str@@Base>:
   11c98:	strd	r4, [sp, #-16]!
   11c9c:	mov	r5, r0
   11ca0:	mov	r0, #12
   11ca4:	str	r6, [sp, #8]
   11ca8:	str	lr, [sp, #12]
   11cac:	bl	10f00 <malloc@plt>
   11cb0:	subs	r4, r0, #0
   11cb4:	beq	11cf4 <novo_str@@Base+0x5c>
   11cb8:	mov	r0, r5
   11cbc:	bl	10f24 <strlen@plt>
   11cc0:	add	r6, r0, #1
   11cc4:	mov	r0, r6
   11cc8:	bl	10f00 <malloc@plt>
   11ccc:	cmp	r0, #0
   11cd0:	mov	r3, r0
   11cd4:	str	r0, [r4]
   11cd8:	beq	11d08 <novo_str@@Base+0x70>
   11cdc:	mov	r2, r6
   11ce0:	mov	r1, r5
   11ce4:	bl	10ed0 <memcpy@plt>
   11ce8:	mov	r3, #0
   11cec:	str	r3, [r4, #4]
   11cf0:	str	r3, [r4, #8]
   11cf4:	mov	r0, r4
   11cf8:	ldrd	r4, [sp]
   11cfc:	ldr	r6, [sp, #8]
   11d00:	add	sp, sp, #12
   11d04:	pop	{pc}		; (ldr pc, [sp], #4)
   11d08:	mov	r0, r4
   11d0c:	mov	r4, r3
   11d10:	bl	10ec4 <free@plt>
   11d14:	b	11cf4 <novo_str@@Base+0x5c>

00011d18 <lista_nova@@Base>:
   11d18:	mov	r0, #12
   11d1c:	str	r4, [sp, #-8]!
   11d20:	str	lr, [sp, #4]
   11d24:	bl	10f00 <malloc@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d40 <lista_nova@@Base+0x28>
   11d30:	mov	r3, #0
   11d34:	str	r3, [r0]
   11d38:	str	r3, [r0, #4]
   11d3c:	str	r3, [r0, #8]
   11d40:	ldr	r4, [sp]
   11d44:	add	sp, sp, #4
   11d48:	pop	{pc}		; (ldr pc, [sp], #4)

00011d4c <lista_apaga@@Base>:
   11d4c:	strd	r4, [sp, #-16]!
   11d50:	subs	r5, r0, #0
   11d54:	str	r6, [sp, #8]
   11d58:	str	lr, [sp, #12]
   11d5c:	bne	11d78 <lista_apaga@@Base+0x2c>
   11d60:	b	11d9c <lista_apaga@@Base+0x50>
   11d64:	ldm	r4, {r0, r3}
   11d68:	str	r3, [r5]
   11d6c:	bl	10ec4 <free@plt>
   11d70:	mov	r0, r4
   11d74:	bl	10ec4 <free@plt>
   11d78:	ldr	r4, [r5]
   11d7c:	cmp	r4, #0
   11d80:	bne	11d64 <lista_apaga@@Base+0x18>
   11d84:	mov	r0, r5
   11d88:	ldrd	r4, [sp]
   11d8c:	ldr	r6, [sp, #8]
   11d90:	ldr	lr, [sp, #12]
   11d94:	add	sp, sp, #16
   11d98:	b	10ec4 <free@plt>
   11d9c:	ldrd	r4, [sp]
   11da0:	ldr	r6, [sp, #8]
   11da4:	add	sp, sp, #12
   11da8:	pop	{pc}		; (ldr pc, [sp], #4)

00011dac <lista_tamanho@@Base>:
   11dac:	cmp	r0, #0
   11db0:	ldrne	r0, [r0, #8]
   11db4:	mvneq	r0, #0
   11db8:	bx	lr

00011dbc <lista_inicio@@Base>:
   11dbc:	cmp	r0, #0
   11dc0:	ldrne	r0, [r0]
   11dc4:	bx	lr

00011dc8 <lista_fim@@Base>:
   11dc8:	cmp	r0, #0
   11dcc:	ldrne	r0, [r0, #4]
   11dd0:	bx	lr

00011dd4 <lista_insere@@Base>:
   11dd4:	cmp	r1, #0
   11dd8:	cmpne	r0, #0
   11ddc:	beq	11e94 <lista_insere@@Base+0xc0>
   11de0:	strd	r4, [sp, #-16]!
   11de4:	mov	r5, r0
   11de8:	mov	r0, r1
   11dec:	mov	r4, r2
   11df0:	str	r6, [sp, #8]
   11df4:	str	lr, [sp, #12]
   11df8:	bl	11c98 <novo_str@@Base>
   11dfc:	cmp	r0, #0
   11e00:	beq	11e58 <lista_insere@@Base+0x84>
   11e04:	cmp	r4, #0
   11e08:	ldr	r2, [r5]
   11e0c:	ldr	r3, [r5, #8]
   11e10:	add	r3, r3, #1
   11e14:	str	r3, [r5, #8]
   11e18:	beq	11e6c <lista_insere@@Base+0x98>
   11e1c:	cmp	r4, r2
   11e20:	streq	r4, [r0, #4]
   11e24:	streq	r0, [r4, #8]
   11e28:	streq	r0, [r5]
   11e2c:	beq	11e48 <lista_insere@@Base+0x74>
   11e30:	ldr	r3, [r4, #8]
   11e34:	str	r4, [r0, #4]
   11e38:	str	r3, [r0, #8]
   11e3c:	ldr	r3, [r4, #8]
   11e40:	str	r0, [r3, #4]
   11e44:	str	r0, [r4, #8]
   11e48:	ldrd	r4, [sp]
   11e4c:	ldr	r6, [sp, #8]
   11e50:	add	sp, sp, #12
   11e54:	pop	{pc}		; (ldr pc, [sp], #4)
   11e58:	ldrd	r4, [sp]
   11e5c:	mov	r0, #0
   11e60:	ldr	r6, [sp, #8]
   11e64:	add	sp, sp, #12
   11e68:	pop	{pc}		; (ldr pc, [sp], #4)
   11e6c:	cmp	r2, #0
   11e70:	ldr	r6, [sp, #8]
   11e74:	ldrne	r3, [r5, #4]
   11e78:	streq	r0, [r5]
   11e7c:	strne	r3, [r0, #8]
   11e80:	strne	r0, [r3, #4]
   11e84:	str	r0, [r5, #4]
   11e88:	ldrd	r4, [sp]
   11e8c:	add	sp, sp, #12
   11e90:	pop	{pc}		; (ldr pc, [sp], #4)
   11e94:	mov	r0, #0
   11e98:	bx	lr

00011e9c <lista_remove@@Base>:
   11e9c:	cmp	r1, #0
   11ea0:	cmpne	r0, #0
   11ea4:	strd	r4, [sp, #-16]!
   11ea8:	moveq	r5, #0
   11eac:	str	r6, [sp, #8]
   11eb0:	str	lr, [sp, #12]
   11eb4:	beq	11efc <lista_remove@@Base+0x60>
   11eb8:	ldr	r3, [r0, #8]
   11ebc:	mov	r4, r1
   11ec0:	ldr	r2, [r1, #8]
   11ec4:	ldr	r5, [r1, #4]
   11ec8:	sub	r3, r3, #1
   11ecc:	cmp	r2, #0
   11ed0:	str	r3, [r0, #8]
   11ed4:	strne	r5, [r2, #4]
   11ed8:	ldrne	r5, [r1, #4]
   11edc:	streq	r5, [r0]
   11ee0:	cmp	r5, #0
   11ee4:	streq	r2, [r0, #4]
   11ee8:	strne	r2, [r5, #8]
   11eec:	ldr	r0, [r1]
   11ef0:	bl	10ec4 <free@plt>
   11ef4:	mov	r0, r4
   11ef8:	bl	10ec4 <free@plt>
   11efc:	mov	r0, r5
   11f00:	ldrd	r4, [sp]
   11f04:	ldr	r6, [sp, #8]
   11f08:	add	sp, sp, #12
   11f0c:	pop	{pc}		; (ldr pc, [sp], #4)

00011f10 <lista_pesquisa@@Base>:
   11f10:	strd	r4, [sp, #-16]!
   11f14:	clz	r4, r1
   11f18:	cmp	r0, #0
   11f1c:	lsr	r4, r4, #5
   11f20:	moveq	r4, #1
   11f24:	str	r6, [sp, #8]
   11f28:	str	lr, [sp, #12]
   11f2c:	cmp	r4, #0
   11f30:	movne	r4, #0
   11f34:	bne	11f7c <lista_pesquisa@@Base+0x6c>
   11f38:	cmp	r2, #1
   11f3c:	bhi	11f7c <lista_pesquisa@@Base+0x6c>
   11f40:	cmp	r2, #0
   11f44:	mov	r5, r1
   11f48:	bne	11f90 <lista_pesquisa@@Base+0x80>
   11f4c:	ldr	r4, [r0]
   11f50:	cmp	r4, #0
   11f54:	bne	11f68 <lista_pesquisa@@Base+0x58>
   11f58:	b	11f7c <lista_pesquisa@@Base+0x6c>
   11f5c:	ldr	r4, [r4, #4]
   11f60:	cmp	r4, #0
   11f64:	beq	11f7c <lista_pesquisa@@Base+0x6c>
   11f68:	mov	r1, r5
   11f6c:	ldr	r0, [r4]
   11f70:	bl	10e94 <strcmp@plt>
   11f74:	cmp	r0, #0
   11f78:	bne	11f5c <lista_pesquisa@@Base+0x4c>
   11f7c:	mov	r0, r4
   11f80:	ldrd	r4, [sp]
   11f84:	ldr	r6, [sp, #8]
   11f88:	add	sp, sp, #12
   11f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f90:	ldr	r4, [r0, #4]
   11f94:	cmp	r4, #0
   11f98:	bne	11fac <lista_pesquisa@@Base+0x9c>
   11f9c:	b	11f7c <lista_pesquisa@@Base+0x6c>
   11fa0:	ldr	r4, [r4, #8]
   11fa4:	cmp	r4, #0
   11fa8:	beq	11f7c <lista_pesquisa@@Base+0x6c>
   11fac:	mov	r1, r5
   11fb0:	ldr	r0, [r4]
   11fb4:	bl	10e94 <strcmp@plt>
   11fb8:	cmp	r0, #0
   11fbc:	bne	11fa0 <lista_pesquisa@@Base+0x90>
   11fc0:	b	11f7c <lista_pesquisa@@Base+0x6c>

00011fc4 <lista_ordena@@Base>:
   11fc4:	cmp	r0, #0
   11fc8:	beq	12068 <lista_ordena@@Base+0xa4>
   11fcc:	ldr	r3, [r0, #8]
   11fd0:	cmp	r3, #0
   11fd4:	beq	12060 <lista_ordena@@Base+0x9c>
   11fd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11fdc:	strd	r6, [sp, #8]
   11fe0:	ldr	r6, [r0]
   11fe4:	str	r8, [sp, #16]
   11fe8:	str	lr, [sp, #20]
   11fec:	ldr	r7, [r6, #4]
   11ff0:	cmp	r7, #0
   11ff4:	beq	12048 <lista_ordena@@Base+0x84>
   11ff8:	mov	r5, r6
   11ffc:	mov	r4, r7
   12000:	ldr	r0, [r4]
   12004:	ldr	r1, [r5]
   12008:	bl	10e94 <strcmp@plt>
   1200c:	cmp	r0, #0
   12010:	movlt	r5, r4
   12014:	ldr	r4, [r4, #4]
   12018:	cmp	r4, #0
   1201c:	bne	12000 <lista_ordena@@Base+0x3c>
   12020:	cmp	r6, r5
   12024:	beq	12038 <lista_ordena@@Base+0x74>
   12028:	ldr	r2, [r5]
   1202c:	ldr	r3, [r6]
   12030:	str	r2, [r6]
   12034:	str	r3, [r5]
   12038:	mov	r6, r7
   1203c:	ldr	r7, [r6, #4]
   12040:	cmp	r7, #0
   12044:	bne	11ff8 <lista_ordena@@Base+0x34>
   12048:	ldrd	r4, [sp]
   1204c:	mov	r0, #0
   12050:	ldrd	r6, [sp, #8]
   12054:	ldr	r8, [sp, #16]
   12058:	add	sp, sp, #20
   1205c:	pop	{pc}		; (ldr pc, [sp], #4)
   12060:	mov	r0, #0
   12064:	bx	lr
   12068:	mvn	r0, #0
   1206c:	bx	lr

00012070 <lista_inverte@@Base>:
   12070:	strd	r4, [sp, #-12]!
   12074:	subs	r5, r0, #0
   12078:	str	lr, [sp, #8]
   1207c:	beq	12110 <lista_inverte@@Base+0xa0>
   12080:	ldr	r4, [r5, #8]
   12084:	cmp	r4, #1
   12088:	movle	r0, #0
   1208c:	ble	120fc <lista_inverte@@Base+0x8c>
   12090:	ldr	r1, [r5]
   12094:	cmp	r4, #2
   12098:	ldr	r3, [r1, #4]
   1209c:	beq	12108 <lista_inverte@@Base+0x98>
   120a0:	sub	r4, r4, #2
   120a4:	mov	ip, #0
   120a8:	b	120b0 <lista_inverte@@Base+0x40>
   120ac:	mov	r3, r2
   120b0:	ldmib	r3, {r2, lr}
   120b4:	add	ip, ip, #1
   120b8:	cmp	r4, ip
   120bc:	str	r2, [lr, #4]
   120c0:	str	lr, [r2, #8]
   120c4:	str	r1, [r3, #4]
   120c8:	str	r3, [r1, #8]
   120cc:	mov	r1, r3
   120d0:	bne	120ac <lista_inverte@@Base+0x3c>
   120d4:	ldr	r2, [r5, #4]
   120d8:	mov	r1, #0
   120dc:	mov	r0, r1
   120e0:	ldr	ip, [r2, #8]
   120e4:	str	ip, [r5, #4]
   120e8:	str	r1, [ip, #4]
   120ec:	str	r3, [r2, #4]
   120f0:	str	r1, [r2, #8]
   120f4:	str	r2, [r3, #8]
   120f8:	str	r2, [r5]
   120fc:	ldrd	r4, [sp]
   12100:	add	sp, sp, #8
   12104:	pop	{pc}		; (ldr pc, [sp], #4)
   12108:	mov	r3, r1
   1210c:	b	120d4 <lista_inverte@@Base+0x64>
   12110:	mvn	r0, #0
   12114:	b	120fc <lista_inverte@@Base+0x8c>
   12118:	ldr	r1, [r0, #8]
   1211c:	cmp	r1, #0
   12120:	ble	12158 <lista_inverte@@Base+0xe8>
   12124:	ldr	r2, [r0, #4]
   12128:	mov	r0, #0
   1212c:	add	r1, r2, r1, lsl #2
   12130:	ldr	r3, [r2], #4
   12134:	cmp	r3, #0
   12138:	beq	1214c <lista_inverte@@Base+0xdc>
   1213c:	ldr	r3, [r3, #4]
   12140:	add	r0, r0, #1
   12144:	cmp	r3, #0
   12148:	bne	1213c <lista_inverte@@Base+0xcc>
   1214c:	cmp	r2, r1
   12150:	bne	12130 <lista_inverte@@Base+0xc0>
   12154:	bx	lr
   12158:	mov	r0, #0
   1215c:	bx	lr

00012160 <tabela_nova@@Base>:
   12160:	strd	r4, [sp, #-16]!
   12164:	str	r6, [sp, #8]
   12168:	subs	r6, r0, #0
   1216c:	movle	r3, #1
   12170:	movgt	r3, #0
   12174:	str	lr, [sp, #12]
   12178:	cmp	r1, #0
   1217c:	moveq	r3, #1
   12180:	cmp	r3, #0
   12184:	bne	121d4 <tabela_nova@@Base+0x74>
   12188:	mov	r0, #12
   1218c:	mov	r4, r1
   12190:	bl	10f00 <malloc@plt>
   12194:	subs	r5, r0, #0
   12198:	beq	121d4 <tabela_nova@@Base+0x74>
   1219c:	mov	r1, #4
   121a0:	mov	r0, r6
   121a4:	bl	10e88 <calloc@plt>
   121a8:	cmp	r0, #0
   121ac:	mov	r3, r0
   121b0:	str	r0, [r5, #4]
   121b4:	strne	r4, [r5]
   121b8:	strne	r6, [r5, #8]
   121bc:	beq	121dc <tabela_nova@@Base+0x7c>
   121c0:	mov	r0, r5
   121c4:	ldrd	r4, [sp]
   121c8:	ldr	r6, [sp, #8]
   121cc:	add	sp, sp, #12
   121d0:	pop	{pc}		; (ldr pc, [sp], #4)
   121d4:	mov	r5, #0
   121d8:	b	121c0 <tabela_nova@@Base+0x60>
   121dc:	mov	r0, r5
   121e0:	mov	r5, r3
   121e4:	bl	10ec4 <free@plt>
   121e8:	b	121c0 <tabela_nova@@Base+0x60>

000121ec <tabela_apaga@@Base>:
   121ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   121f0:	strd	r6, [sp, #8]
   121f4:	subs	r7, r0, #0
   121f8:	str	r8, [sp, #16]
   121fc:	str	lr, [sp, #20]
   12200:	beq	12268 <tabela_apaga@@Base+0x7c>
   12204:	ldmib	r7, {r0, r3}
   12208:	cmp	r3, #0
   1220c:	ble	12248 <tabela_apaga@@Base+0x5c>
   12210:	mov	r6, #0
   12214:	ldr	r4, [r0, r6, lsl #2]
   12218:	cmp	r4, #0
   1221c:	beq	1223c <tabela_apaga@@Base+0x50>
   12220:	ldm	r4, {r0, r5}
   12224:	bl	10ec4 <free@plt>
   12228:	mov	r0, r4
   1222c:	bl	10ec4 <free@plt>
   12230:	subs	r4, r5, #0
   12234:	bne	12220 <tabela_apaga@@Base+0x34>
   12238:	ldmib	r7, {r0, r3}
   1223c:	add	r6, r6, #1
   12240:	cmp	r3, r6
   12244:	bgt	12214 <tabela_apaga@@Base+0x28>
   12248:	bl	10ec4 <free@plt>
   1224c:	mov	r0, r7
   12250:	ldrd	r4, [sp]
   12254:	ldrd	r6, [sp, #8]
   12258:	ldr	r8, [sp, #16]
   1225c:	ldr	lr, [sp, #20]
   12260:	add	sp, sp, #24
   12264:	b	10ec4 <free@plt>
   12268:	ldrd	r4, [sp]
   1226c:	ldrd	r6, [sp, #8]
   12270:	ldr	r8, [sp, #16]
   12274:	add	sp, sp, #20
   12278:	pop	{pc}		; (ldr pc, [sp], #4)

0001227c <tabela_adiciona@@Base>:
   1227c:	cmp	r1, #0
   12280:	clz	r3, r2
   12284:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12288:	lsr	r3, r3, #5
   1228c:	moveq	r3, #1
   12290:	cmp	r0, #0
   12294:	moveq	r3, #1
   12298:	strd	r6, [sp, #8]
   1229c:	cmp	r3, #0
   122a0:	strd	r8, [sp, #16]
   122a4:	str	sl, [sp, #24]
   122a8:	str	lr, [sp, #28]
   122ac:	bne	12380 <tabela_adiciona@@Base+0x104>
   122b0:	mov	r4, r0
   122b4:	mov	r6, r1
   122b8:	mov	r0, r1
   122bc:	ldr	r3, [r4]
   122c0:	mov	r8, r2
   122c4:	ldr	r1, [r4, #8]
   122c8:	blx	r3
   122cc:	ldr	sl, [r4, #4]
   122d0:	mov	r9, r0
   122d4:	ldr	r4, [sl, r0, lsl #2]
   122d8:	cmp	r4, #0
   122dc:	bne	122f0 <tabela_adiciona@@Base+0x74>
   122e0:	b	12330 <tabela_adiciona@@Base+0xb4>
   122e4:	ldr	r4, [r4, #4]
   122e8:	cmp	r4, #0
   122ec:	beq	12330 <tabela_adiciona@@Base+0xb4>
   122f0:	ldr	r5, [r4]
   122f4:	mov	r1, r6
   122f8:	mov	r0, r5
   122fc:	bl	10e94 <strcmp@plt>
   12300:	subs	r7, r0, #0
   12304:	bne	122e4 <tabela_adiciona@@Base+0x68>
   12308:	mov	r1, r8
   1230c:	add	r0, r5, #25
   12310:	bl	10ee8 <strcpy@plt>
   12314:	mov	r0, r7
   12318:	ldrd	r4, [sp]
   1231c:	ldrd	r6, [sp, #8]
   12320:	ldrd	r8, [sp, #16]
   12324:	ldr	sl, [sp, #24]
   12328:	add	sp, sp, #28
   1232c:	pop	{pc}		; (ldr pc, [sp], #4)
   12330:	mov	r0, #8
   12334:	bl	10f00 <malloc@plt>
   12338:	subs	r4, r0, #0
   1233c:	beq	12380 <tabela_adiciona@@Base+0x104>
   12340:	mov	r0, #125	; 0x7d
   12344:	bl	10f00 <malloc@plt>
   12348:	cmp	r0, #0
   1234c:	mov	r5, r0
   12350:	str	r0, [r4]
   12354:	beq	12380 <tabela_adiciona@@Base+0x104>
   12358:	mov	r1, r6
   1235c:	mov	r7, #0
   12360:	bl	10ee8 <strcpy@plt>
   12364:	mov	r1, r8
   12368:	add	r0, r5, #25
   1236c:	bl	10ee8 <strcpy@plt>
   12370:	ldr	r3, [sl, r9, lsl #2]
   12374:	str	r3, [r4, #4]
   12378:	str	r4, [sl, r9, lsl #2]
   1237c:	b	12314 <tabela_adiciona@@Base+0x98>
   12380:	mvn	r7, #1
   12384:	b	12314 <tabela_adiciona@@Base+0x98>

00012388 <tabela_remove@@Base>:
   12388:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1238c:	subs	r4, r0, #0
   12390:	strd	r6, [sp, #8]
   12394:	strd	r8, [sp, #16]
   12398:	str	sl, [sp, #24]
   1239c:	str	lr, [sp, #28]
   123a0:	beq	1243c <tabela_remove@@Base+0xb4>
   123a4:	mov	r0, r1
   123a8:	mov	r6, r1
   123ac:	ldr	r3, [r4]
   123b0:	ldr	r1, [r4, #8]
   123b4:	blx	r3
   123b8:	ldr	sl, [r4, #4]
   123bc:	mov	r9, r0
   123c0:	ldr	r4, [sl, r0, lsl #2]
   123c4:	cmp	r4, #0
   123c8:	beq	1241c <tabela_remove@@Base+0x94>
   123cc:	mov	r8, #0
   123d0:	b	123e0 <tabela_remove@@Base+0x58>
   123d4:	mov	r8, r4
   123d8:	subs	r4, r3, #0
   123dc:	beq	1241c <tabela_remove@@Base+0x94>
   123e0:	ldr	r5, [r4]
   123e4:	mov	r1, r6
   123e8:	mov	r0, r5
   123ec:	bl	10e94 <strcmp@plt>
   123f0:	subs	r7, r0, #0
   123f4:	ldr	r3, [r4, #4]
   123f8:	bne	123d4 <tabela_remove@@Base+0x4c>
   123fc:	cmp	r8, #0
   12400:	mov	r0, r5
   12404:	strne	r3, [r8, #4]
   12408:	streq	r3, [sl, r9, lsl #2]
   1240c:	bl	10ec4 <free@plt>
   12410:	mov	r0, r4
   12414:	bl	10ec4 <free@plt>
   12418:	b	12420 <tabela_remove@@Base+0x98>
   1241c:	mvn	r7, #2
   12420:	mov	r0, r7
   12424:	ldrd	r4, [sp]
   12428:	ldrd	r6, [sp, #8]
   1242c:	ldrd	r8, [sp, #16]
   12430:	ldr	sl, [sp, #24]
   12434:	add	sp, sp, #28
   12438:	pop	{pc}		; (ldr pc, [sp], #4)
   1243c:	mvn	r7, #1
   12440:	b	12420 <tabela_remove@@Base+0x98>

00012444 <tabela_valor@@Base>:
   12444:	strd	r4, [sp, #-16]!
   12448:	subs	r4, r0, #0
   1244c:	str	r6, [sp, #8]
   12450:	str	lr, [sp, #12]
   12454:	beq	124b8 <tabela_valor@@Base+0x74>
   12458:	mov	r0, r1
   1245c:	mov	r6, r1
   12460:	ldr	r3, [r4]
   12464:	ldr	r1, [r4, #8]
   12468:	blx	r3
   1246c:	ldr	r3, [r4, #4]
   12470:	ldr	r4, [r3, r0, lsl #2]
   12474:	cmp	r4, #0
   12478:	bne	1248c <tabela_valor@@Base+0x48>
   1247c:	b	124b8 <tabela_valor@@Base+0x74>
   12480:	ldr	r4, [r4, #4]
   12484:	cmp	r4, #0
   12488:	beq	124b8 <tabela_valor@@Base+0x74>
   1248c:	ldr	r5, [r4]
   12490:	mov	r1, r6
   12494:	mov	r0, r5
   12498:	bl	10e94 <strcmp@plt>
   1249c:	cmp	r0, #0
   124a0:	bne	12480 <tabela_valor@@Base+0x3c>
   124a4:	add	r0, r5, #25
   124a8:	ldrd	r4, [sp]
   124ac:	ldr	r6, [sp, #8]
   124b0:	add	sp, sp, #12
   124b4:	pop	{pc}		; (ldr pc, [sp], #4)
   124b8:	ldrd	r4, [sp]
   124bc:	mov	r0, #0
   124c0:	ldr	r6, [sp, #8]
   124c4:	add	sp, sp, #12
   124c8:	pop	{pc}		; (ldr pc, [sp], #4)

000124cc <tabela_existe@@Base>:
   124cc:	cmp	r0, #0
   124d0:	cmpne	r1, #0
   124d4:	beq	124fc <tabela_existe@@Base+0x30>
   124d8:	str	r4, [sp, #-8]!
   124dc:	str	lr, [sp, #4]
   124e0:	bl	12444 <tabela_valor@@Base>
   124e4:	cmp	r0, #0
   124e8:	ldr	r4, [sp]
   124ec:	add	sp, sp, #4
   124f0:	movne	r0, #1
   124f4:	mvneq	r0, #2
   124f8:	pop	{pc}		; (ldr pc, [sp], #4)
   124fc:	mvn	r0, #1
   12500:	bx	lr

00012504 <tabela_esvazia@@Base>:
   12504:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12508:	strd	r6, [sp, #8]
   1250c:	strd	r8, [sp, #16]
   12510:	subs	r8, r0, #0
   12514:	str	sl, [sp, #24]
   12518:	str	lr, [sp, #28]
   1251c:	beq	1259c <tabela_esvazia@@Base+0x98>
   12520:	ldr	r1, [r8, #8]
   12524:	cmp	r1, #0
   12528:	ble	12580 <tabela_esvazia@@Base+0x7c>
   1252c:	ldr	r3, [r8, #4]
   12530:	mov	r6, #0
   12534:	mov	r9, r6
   12538:	ldr	r4, [r3, r6, lsl #2]
   1253c:	lsl	r7, r6, #2
   12540:	add	r2, r3, r7
   12544:	cmp	r4, #0
   12548:	beq	12570 <tabela_esvazia@@Base+0x6c>
   1254c:	ldm	r4, {r0, r5}
   12550:	bl	10ec4 <free@plt>
   12554:	mov	r0, r4
   12558:	bl	10ec4 <free@plt>
   1255c:	subs	r4, r5, #0
   12560:	bne	1254c <tabela_esvazia@@Base+0x48>
   12564:	ldr	r3, [r8, #4]
   12568:	ldr	r1, [r8, #8]
   1256c:	add	r2, r3, r7
   12570:	add	r6, r6, #1
   12574:	str	r9, [r2]
   12578:	cmp	r1, r6
   1257c:	bgt	12538 <tabela_esvazia@@Base+0x34>
   12580:	mov	r0, #0
   12584:	ldrd	r4, [sp]
   12588:	ldrd	r6, [sp, #8]
   1258c:	ldrd	r8, [sp, #16]
   12590:	ldr	sl, [sp, #24]
   12594:	add	sp, sp, #28
   12598:	pop	{pc}		; (ldr pc, [sp], #4)
   1259c:	mvn	r0, #1
   125a0:	b	12584 <tabela_esvazia@@Base+0x80>

000125a4 <tabela_numelementos@@Base>:
   125a4:	cmp	r0, #0
   125a8:	beq	125b0 <tabela_numelementos@@Base+0xc>
   125ac:	b	12118 <lista_inverte@@Base+0xa8>
   125b0:	mvn	r0, #1
   125b4:	bx	lr

000125b8 <tabela_elementos@@Base>:
   125b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   125bc:	subs	r4, r0, #0
   125c0:	mvneq	r3, #1
   125c4:	strd	r6, [sp, #8]
   125c8:	strd	r8, [sp, #16]
   125cc:	moveq	r9, r4
   125d0:	str	sl, [sp, #24]
   125d4:	str	lr, [sp, #28]
   125d8:	streq	r3, [r1]
   125dc:	beq	12668 <tabela_elementos@@Base+0xb0>
   125e0:	mov	r5, r1
   125e4:	bl	12118 <lista_inverte@@Base+0xa8>
   125e8:	cmp	r0, #0
   125ec:	str	r0, [r5]
   125f0:	ble	12684 <tabela_elementos@@Base+0xcc>
   125f4:	mov	r8, #125	; 0x7d
   125f8:	mul	r0, r8, r0
   125fc:	bl	10f00 <malloc@plt>
   12600:	subs	r9, r0, #0
   12604:	beq	12684 <tabela_elementos@@Base+0xcc>
   12608:	ldr	r7, [r4, #8]
   1260c:	cmp	r7, #0
   12610:	ble	12668 <tabela_elementos@@Base+0xb0>
   12614:	ldr	r6, [r4, #4]
   12618:	mov	r5, #0
   1261c:	add	r7, r6, r7, lsl #2
   12620:	b	1262c <tabela_elementos@@Base+0x74>
   12624:	cmp	r6, r7
   12628:	beq	12668 <tabela_elementos@@Base+0xb0>
   1262c:	ldr	r4, [r6], #4
   12630:	cmp	r4, #0
   12634:	beq	12624 <tabela_elementos@@Base+0x6c>
   12638:	mla	r3, r8, r5, r9
   1263c:	mov	r0, r3
   12640:	mov	r2, #125	; 0x7d
   12644:	ldr	r1, [r4]
   12648:	bl	10ed0 <memcpy@plt>
   1264c:	ldr	r4, [r4, #4]
   12650:	add	r5, r5, #1
   12654:	add	r3, r0, #125	; 0x7d
   12658:	cmp	r4, #0
   1265c:	bne	1263c <tabela_elementos@@Base+0x84>
   12660:	cmp	r6, r7
   12664:	bne	1262c <tabela_elementos@@Base+0x74>
   12668:	mov	r0, r9
   1266c:	ldrd	r4, [sp]
   12670:	ldrd	r6, [sp, #8]
   12674:	ldrd	r8, [sp, #16]
   12678:	ldr	sl, [sp, #24]
   1267c:	add	sp, sp, #28
   12680:	pop	{pc}		; (ldr pc, [sp], #4)
   12684:	mov	r9, #0
   12688:	b	12668 <tabela_elementos@@Base+0xb0>

0001268c <hash_krm@@Base>:
   1268c:	ldrb	r3, [r0]
   12690:	mov	r2, #7
   12694:	cmp	r3, #0
   12698:	beq	126ac <hash_krm@@Base+0x20>
   1269c:	add	r2, r2, r3
   126a0:	ldrb	r3, [r0, #1]!
   126a4:	cmp	r3, #0
   126a8:	bne	1269c <hash_krm@@Base+0x10>
   126ac:	udiv	r0, r2, r1
   126b0:	mls	r0, r1, r0, r2
   126b4:	bx	lr

000126b8 <hash_djbm@@Base>:
   126b8:	ldrb	r2, [r0]
   126bc:	movw	r3, #5347	; 0x14e3
   126c0:	cmp	r2, #0
   126c4:	beq	126dc <hash_djbm@@Base+0x24>
   126c8:	rsb	r3, r3, r3, lsl #5
   126cc:	eor	r3, r3, r2
   126d0:	ldrb	r2, [r0, #1]!
   126d4:	cmp	r2, #0
   126d8:	bne	126c8 <hash_djbm@@Base+0x10>
   126dc:	udiv	r0, r3, r1
   126e0:	mls	r0, r1, r0, r3
   126e4:	bx	lr

000126e8 <mostraTabela@@Base>:
   126e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   126ec:	strd	r6, [sp, #8]
   126f0:	subs	r7, r0, #0
   126f4:	str	r8, [sp, #16]
   126f8:	str	lr, [sp, #20]
   126fc:	beq	127c0 <mostraTabela@@Base+0xd8>
   12700:	bl	12118 <lista_inverte@@Base+0xa8>
   12704:	mov	r1, r0
   12708:	movw	r0, #10964	; 0x2ad4
   1270c:	movt	r0, #1
   12710:	bl	10ea0 <printf@plt>
   12714:	ldr	r2, [r7, #8]
   12718:	cmp	r2, #0
   1271c:	ble	127a4 <mostraTabela@@Base+0xbc>
   12720:	movw	r8, #11000	; 0x2af8
   12724:	movt	r8, #1
   12728:	movw	r6, #11008	; 0x2b00
   1272c:	movt	r6, #1
   12730:	mov	r5, #0
   12734:	b	12744 <mostraTabela@@Base+0x5c>
   12738:	add	r5, r5, #1
   1273c:	cmp	r2, r5
   12740:	ble	127a4 <mostraTabela@@Base+0xbc>
   12744:	ldr	r3, [r7, #4]
   12748:	ldr	r3, [r3, r5, lsl #2]
   1274c:	cmp	r3, #0
   12750:	beq	12738 <mostraTabela@@Base+0x50>
   12754:	mov	r1, r5
   12758:	mov	r0, r8
   1275c:	bl	10ea0 <printf@plt>
   12760:	ldr	r3, [r7, #4]
   12764:	ldr	r4, [r3, r5, lsl #2]
   12768:	cmp	r4, #0
   1276c:	beq	1278c <mostraTabela@@Base+0xa4>
   12770:	ldr	r1, [r4]
   12774:	mov	r0, r6
   12778:	add	r2, r1, #25
   1277c:	bl	10ea0 <printf@plt>
   12780:	ldr	r4, [r4, #4]
   12784:	cmp	r4, #0
   12788:	bne	12770 <mostraTabela@@Base+0x88>
   1278c:	mov	r0, #10
   12790:	add	r5, r5, #1
   12794:	bl	10f30 <putchar@plt>
   12798:	ldr	r2, [r7, #8]
   1279c:	cmp	r2, r5
   127a0:	bgt	12744 <mostraTabela@@Base+0x5c>
   127a4:	mov	r0, #10
   127a8:	ldrd	r4, [sp]
   127ac:	ldrd	r6, [sp, #8]
   127b0:	ldr	r8, [sp, #16]
   127b4:	ldr	lr, [sp, #20]
   127b8:	add	sp, sp, #24
   127bc:	b	10f30 <putchar@plt>
   127c0:	mvn	r1, #1
   127c4:	b	12708 <mostraTabela@@Base+0x20>

000127c8 <__libc_csu_init@@Base>:
   127c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127cc:	mov	r7, r0
   127d0:	ldr	r6, [pc, #72]	; 12820 <__libc_csu_init@@Base+0x58>
   127d4:	ldr	r5, [pc, #72]	; 12824 <__libc_csu_init@@Base+0x5c>
   127d8:	add	r6, pc, r6
   127dc:	add	r5, pc, r5
   127e0:	sub	r6, r6, r5
   127e4:	mov	r8, r1
   127e8:	mov	r9, r2
   127ec:	bl	10e68 <calloc@plt-0x20>
   127f0:	asrs	r6, r6, #2
   127f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   127f8:	mov	r4, #0
   127fc:	add	r4, r4, #1
   12800:	ldr	r3, [r5], #4
   12804:	mov	r2, r9
   12808:	mov	r1, r8
   1280c:	mov	r0, r7
   12810:	blx	r3
   12814:	cmp	r6, r4
   12818:	bne	127fc <__libc_csu_init@@Base+0x34>
   1281c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12820:	andeq	r0, r1, r4, lsr r7
   12824:	andeq	r0, r1, ip, lsr #14

00012828 <__libc_csu_fini@@Base>:
   12828:	bx	lr

Disassembly of section .fini:

0001282c <.fini>:
   1282c:	push	{r3, lr}
   12830:	pop	{r3, pc}
