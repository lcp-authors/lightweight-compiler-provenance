
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_study>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #256	; 0x100
       c:	str	r0, [fp, #-16]
      10:	str	r1, [fp, #-20]	; 0xffffffec
      14:	str	r2, [fp, #-24]	; 0xffffffe8
      18:	movw	r0, #0
      1c:	str	r0, [fp, #-32]	; 0xffffffe0
      20:	str	r0, [fp, #-36]	; 0xffffffdc
      24:	str	r0, [fp, #-72]	; 0xffffffb8
      28:	ldr	r1, [fp, #-16]
      2c:	str	r1, [sp, #32]
      30:	ldr	r1, [fp, #-24]	; 0xffffffe8
      34:	str	r0, [r1]
      38:	ldr	r1, [sp, #32]
      3c:	cmp	r1, r0
      40:	beq	58 <coda_pcre_study+0x58>
      44:	ldr	r0, [pc, #944]	; 3fc <coda_pcre_study+0x3fc>
      48:	ldr	r1, [sp, #32]
      4c:	ldr	r1, [r1]
      50:	cmp	r1, r0
      54:	beq	74 <coda_pcre_study+0x74>
      58:	ldr	r0, [fp, #-24]	; 0xffffffe8
      5c:	movw	r1, #0
      60:	movt	r1, #0
      64:	str	r1, [r0]
      68:	movw	r0, #0
      6c:	str	r0, [fp, #-12]
      70:	b	3f0 <coda_pcre_study+0x3f0>
      74:	ldr	r0, [sp, #32]
      78:	ldr	r0, [r0, #12]
      7c:	and	r0, r0, #1
      80:	cmp	r0, #0
      84:	bne	a4 <coda_pcre_study+0xa4>
      88:	ldr	r0, [fp, #-24]	; 0xffffffe8
      8c:	movw	r1, #0
      90:	movt	r1, #0
      94:	str	r1, [r0]
      98:	movw	r0, #0
      9c:	str	r0, [fp, #-12]
      a0:	b	3f0 <coda_pcre_study+0x3f0>
      a4:	ldr	r0, [fp, #-20]	; 0xffffffec
      a8:	mvn	r1, #15
      ac:	and	r0, r0, r1
      b0:	cmp	r0, #0
      b4:	beq	d4 <coda_pcre_study+0xd4>
      b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	str	r1, [r0]
      c8:	movw	r0, #0
      cc:	str	r0, [fp, #-12]
      d0:	b	3f0 <coda_pcre_study+0x3f0>
      d4:	ldr	r0, [sp, #32]
      d8:	ldr	r1, [sp, #32]
      dc:	ldrh	r1, [r1, #34]	; 0x22
      e0:	add	r0, r0, r1
      e4:	ldr	r1, [sp, #32]
      e8:	ldrh	r1, [r1, #38]	; 0x26
      ec:	ldr	r2, [sp, #32]
      f0:	ldrh	r2, [r2, #36]	; 0x24
      f4:	mul	r1, r1, r2
      f8:	add	r0, r0, r1
      fc:	str	r0, [fp, #-84]	; 0xffffffac
     100:	ldr	r0, [sp, #32]
     104:	ldr	r0, [r0, #8]
     108:	and	r0, r0, #16
     10c:	cmp	r0, #0
     110:	bne	21c <coda_pcre_study+0x21c>
     114:	ldr	r0, [sp, #32]
     118:	ldr	r0, [r0, #12]
     11c:	and	r0, r0, #272	; 0x110
     120:	cmp	r0, #0
     124:	bne	21c <coda_pcre_study+0x21c>
     128:	ldr	r0, [sp, #32]
     12c:	ldr	r0, [r0, #48]	; 0x30
     130:	str	r0, [fp, #-80]	; 0xffffffb0
     134:	ldr	r0, [fp, #-80]	; 0xffffffb0
     138:	movw	r1, #0
     13c:	cmp	r0, r1
     140:	bne	164 <coda_pcre_study+0x164>
     144:	ldr	r0, [fp, #-16]
     148:	sub	r1, fp, #80	; 0x50
     14c:	movw	r2, #0
     150:	str	r1, [sp, #24]
     154:	mov	r1, r2
     158:	movw	r2, #11
     15c:	ldr	r3, [sp, #24]
     160:	bl	0 <coda_pcre_fullinfo>
     164:	sub	r0, fp, #68	; 0x44
     168:	ldr	r1, [fp, #-80]	; 0xffffffb0
     16c:	str	r1, [sp, #36]	; 0x24
     170:	ldr	r1, [fp, #-80]	; 0xffffffb0
     174:	add	r1, r1, #256	; 0x100
     178:	str	r1, [sp, #40]	; 0x28
     17c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     180:	add	r1, r1, #512	; 0x200
     184:	str	r1, [sp, #44]	; 0x2c
     188:	ldr	r1, [fp, #-80]	; 0xffffffb0
     18c:	add	r1, r1, #832	; 0x340
     190:	str	r1, [sp, #48]	; 0x30
     194:	str	r0, [sp, #20]
     198:	movw	r1, #0
     19c:	and	r1, r1, #255	; 0xff
     1a0:	movw	r2, #32
     1a4:	bl	0 <memset>
     1a8:	ldr	r0, [fp, #-84]	; 0xffffffac
     1ac:	ldr	r1, [sp, #32]
     1b0:	ldr	r1, [r1, #8]
     1b4:	and	r1, r1, #2048	; 0x800
     1b8:	cmp	r1, #0
     1bc:	movw	r1, #0
     1c0:	movne	r1, #1
     1c4:	and	r2, r1, #1
     1c8:	ldr	r1, [sp, #20]
     1cc:	add	r3, sp, #36	; 0x24
     1d0:	bl	400 <set_start_bits>
     1d4:	str	r0, [sp, #28]
     1d8:	ldr	r0, [sp, #28]
     1dc:	cmp	r0, #1
     1e0:	movw	r0, #0
     1e4:	moveq	r0, #1
     1e8:	and	r0, r0, #1
     1ec:	str	r0, [fp, #-36]	; 0xffffffdc
     1f0:	ldr	r0, [sp, #28]
     1f4:	cmp	r0, #3
     1f8:	bne	218 <coda_pcre_study+0x218>
     1fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	str	r1, [r0]
     20c:	movw	r0, #0
     210:	str	r0, [fp, #-12]
     214:	b	3f0 <coda_pcre_study+0x3f0>
     218:	b	21c <coda_pcre_study+0x21c>
     21c:	ldr	r0, [sp, #32]
     220:	ldr	r1, [fp, #-84]	; 0xffffffac
     224:	ldr	r3, [r0, #8]
     228:	mov	r2, sp
     22c:	sub	ip, fp, #32
     230:	str	ip, [r2, #4]
     234:	mov	ip, #0
     238:	str	ip, [r2]
     23c:	str	r1, [sp, #16]
     240:	ldr	r2, [sp, #16]
     244:	bl	1018 <find_minlength>
     248:	str	r0, [fp, #-28]	; 0xffffffe4
     24c:	mov	r1, r0
     250:	cmn	r0, #3
     254:	str	r1, [sp, #12]
     258:	beq	28c <coda_pcre_study+0x28c>
     25c:	b	260 <coda_pcre_study+0x260>
     260:	ldr	r0, [sp, #12]
     264:	cmn	r0, #2
     268:	bne	2a8 <coda_pcre_study+0x2a8>
     26c:	b	270 <coda_pcre_study+0x270>
     270:	ldr	r0, [fp, #-24]	; 0xffffffe8
     274:	movw	r1, #0
     278:	movt	r1, #0
     27c:	str	r1, [r0]
     280:	movw	r0, #0
     284:	str	r0, [fp, #-12]
     288:	b	3f0 <coda_pcre_study+0x3f0>
     28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     290:	movw	r1, #0
     294:	movt	r1, #0
     298:	str	r1, [r0]
     29c:	movw	r0, #0
     2a0:	str	r0, [fp, #-12]
     2a4:	b	3f0 <coda_pcre_study+0x3f0>
     2a8:	b	2ac <coda_pcre_study+0x2ac>
     2ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
     2b0:	cmp	r0, #0
     2b4:	bne	2d4 <coda_pcre_study+0x2d4>
     2b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     2bc:	cmp	r0, #0
     2c0:	bgt	2d4 <coda_pcre_study+0x2d4>
     2c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     2c8:	and	r0, r0, #8
     2cc:	cmp	r0, #0
     2d0:	beq	3e8 <coda_pcre_study+0x3e8>
     2d4:	movw	r0, #0
     2d8:	movt	r0, #0
     2dc:	ldr	r0, [r0]
     2e0:	movw	r1, #76	; 0x4c
     2e4:	str	r0, [sp, #8]
     2e8:	mov	r0, r1
     2ec:	ldr	r1, [sp, #8]
     2f0:	blx	r1
     2f4:	str	r0, [fp, #-72]	; 0xffffffb8
     2f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
     2fc:	movw	r1, #0
     300:	cmp	r0, r1
     304:	bne	324 <coda_pcre_study+0x324>
     308:	ldr	r0, [fp, #-24]	; 0xffffffe8
     30c:	movw	r1, #0
     310:	movt	r1, #0
     314:	str	r1, [r0]
     318:	movw	r0, #0
     31c:	str	r0, [fp, #-12]
     320:	b	3f0 <coda_pcre_study+0x3f0>
     324:	ldr	r0, [fp, #-72]	; 0xffffffb8
     328:	add	r0, r0, #32
     32c:	str	r0, [fp, #-76]	; 0xffffffb4
     330:	ldr	r0, [fp, #-72]	; 0xffffffb8
     334:	movw	r1, #1
     338:	str	r1, [r0]
     33c:	ldr	r0, [fp, #-76]	; 0xffffffb4
     340:	ldr	r1, [fp, #-72]	; 0xffffffb8
     344:	str	r0, [r1, #4]
     348:	ldr	r0, [fp, #-76]	; 0xffffffb4
     34c:	movw	r1, #44	; 0x2c
     350:	str	r1, [r0]
     354:	ldr	r0, [fp, #-76]	; 0xffffffb4
     358:	movw	r1, #0
     35c:	str	r1, [r0, #4]
     360:	ldr	r0, [fp, #-36]	; 0xffffffdc
     364:	cmp	r0, #0
     368:	beq	394 <coda_pcre_study+0x394>
     36c:	sub	r1, fp, #68	; 0x44
     370:	ldr	r0, [fp, #-76]	; 0xffffffb4
     374:	ldr	r2, [r0, #4]
     378:	orr	r2, r2, #1
     37c:	str	r2, [r0, #4]
     380:	ldr	r0, [fp, #-76]	; 0xffffffb4
     384:	add	r0, r0, #8
     388:	movw	r2, #32
     38c:	bl	0 <memcpy>
     390:	b	3ac <coda_pcre_study+0x3ac>
     394:	ldr	r0, [fp, #-76]	; 0xffffffb4
     398:	add	r0, r0, #8
     39c:	movw	r1, #0
     3a0:	and	r1, r1, #255	; 0xff
     3a4:	movw	r2, #32
     3a8:	bl	0 <memset>
     3ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3b0:	cmp	r0, #0
     3b4:	ble	3d8 <coda_pcre_study+0x3d8>
     3b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
     3bc:	ldr	r1, [r0, #4]
     3c0:	orr	r1, r1, #2
     3c4:	str	r1, [r0, #4]
     3c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
     3d0:	str	r0, [r1, #40]	; 0x28
     3d4:	b	3e4 <coda_pcre_study+0x3e4>
     3d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
     3dc:	movw	r1, #0
     3e0:	str	r1, [r0, #40]	; 0x28
     3e4:	b	3e8 <coda_pcre_study+0x3e8>
     3e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
     3ec:	str	r0, [fp, #-12]
     3f0:	ldr	r0, [fp, #-12]
     3f4:	sub	sp, fp, #8
     3f8:	pop	{r4, r5, fp, pc}
     3fc:	.word	0x50435245

00000400 <set_start_bits>:
     400:	push	{fp, lr}
     404:	mov	fp, sp
     408:	sub	sp, sp, #96	; 0x60
     40c:	str	r0, [fp, #-8]
     410:	str	r1, [fp, #-12]
     414:	str	r2, [fp, #-16]
     418:	str	r3, [fp, #-20]	; 0xffffffec
     41c:	movw	r0, #1
     420:	str	r0, [fp, #-28]	; 0xffffffe4
     424:	movw	r0, #32
     428:	str	r0, [fp, #-32]	; 0xffffffe0
     42c:	movw	r0, #1
     430:	str	r0, [fp, #-36]	; 0xffffffdc
     434:	ldr	r0, [fp, #-8]
     438:	add	r0, r0, #1
     43c:	add	r0, r0, #2
     440:	str	r0, [fp, #-40]	; 0xffffffd8
     444:	ldr	r0, [fp, #-8]
     448:	ldrb	r0, [r0]
     44c:	cmp	r0, #133	; 0x85
     450:	beq	484 <set_start_bits+0x84>
     454:	ldr	r0, [fp, #-8]
     458:	ldrb	r0, [r0]
     45c:	cmp	r0, #138	; 0x8a
     460:	beq	484 <set_start_bits+0x84>
     464:	ldr	r0, [fp, #-8]
     468:	ldrb	r0, [r0]
     46c:	cmp	r0, #134	; 0x86
     470:	beq	484 <set_start_bits+0x84>
     474:	ldr	r0, [fp, #-8]
     478:	ldrb	r0, [r0]
     47c:	cmp	r0, #139	; 0x8b
     480:	bne	490 <set_start_bits+0x90>
     484:	ldr	r0, [fp, #-40]	; 0xffffffd8
     488:	add	r0, r0, #2
     48c:	str	r0, [fp, #-40]	; 0xffffffd8
     490:	b	494 <set_start_bits+0x94>
     494:	ldr	r0, [fp, #-36]	; 0xffffffdc
     498:	cmp	r0, #0
     49c:	beq	fd0 <set_start_bits+0xbd0>
     4a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     4a4:	ldrb	r0, [r0]
     4a8:	mov	r1, r0
     4ac:	cmp	r0, #161	; 0xa1
     4b0:	str	r1, [sp, #40]	; 0x28
     4b4:	bhi	750 <set_start_bits+0x350>
     4b8:	add	r0, pc, #8
     4bc:	ldr	r1, [sp, #40]	; 0x28
     4c0:	ldr	r0, [r0, r1, lsl #2]
     4c4:	mov	pc, r0
     4c8:	.word	0x0000075c
     4cc:	.word	0x0000075c
     4d0:	.word	0x0000075c
     4d4:	.word	0x0000075c
     4d8:	.word	0x00000814
     4dc:	.word	0x00000814
     4e0:	.word	0x00000c0c
     4e4:	.word	0x00000c2c
     4e8:	.word	0x00000c4c
     4ec:	.word	0x00000c6c
     4f0:	.word	0x00000c8c
     4f4:	.word	0x00000cac
     4f8:	.word	0x0000075c
     4fc:	.word	0x0000075c
     500:	.word	0x0000075c
     504:	.word	0x0000075c
     508:	.word	0x00000768
     50c:	.word	0x00000bb0
     510:	.word	0x0000075c
     514:	.word	0x00000b74
     518:	.word	0x0000075c
     51c:	.word	0x00000bb0
     520:	.word	0x0000075c
     524:	.word	0x0000075c
     528:	.word	0x0000075c
     52c:	.word	0x0000075c
     530:	.word	0x0000075c
     534:	.word	0x0000075c
     538:	.word	0x0000075c
     53c:	.word	0x00000af8
     540:	.word	0x00000b3c
     544:	.word	0x0000075c
     548:	.word	0x0000075c
     54c:	.word	0x00000a14
     550:	.word	0x00000a14
     554:	.word	0x00000af8
     558:	.word	0x00000af8
     55c:	.word	0x00000a14
     560:	.word	0x00000a14
     564:	.word	0x00000a7c
     568:	.word	0x00000a7c
     56c:	.word	0x00000aec
     570:	.word	0x00000a14
     574:	.word	0x00000af8
     578:	.word	0x00000a14
     57c:	.word	0x00000a7c
     580:	.word	0x00000a48
     584:	.word	0x00000a48
     588:	.word	0x00000b3c
     58c:	.word	0x00000b3c
     590:	.word	0x00000a48
     594:	.word	0x00000a48
     598:	.word	0x00000ab4
     59c:	.word	0x00000ab4
     5a0:	.word	0x00000b30
     5a4:	.word	0x00000a48
     5a8:	.word	0x00000b3c
     5ac:	.word	0x00000a48
     5b0:	.word	0x00000ab4
     5b4:	.word	0x0000075c
     5b8:	.word	0x0000075c
     5bc:	.word	0x0000075c
     5c0:	.word	0x0000075c
     5c4:	.word	0x0000075c
     5c8:	.word	0x0000075c
     5cc:	.word	0x0000075c
     5d0:	.word	0x0000075c
     5d4:	.word	0x0000075c
     5d8:	.word	0x0000075c
     5dc:	.word	0x0000075c
     5e0:	.word	0x0000075c
     5e4:	.word	0x0000075c
     5e8:	.word	0x0000075c
     5ec:	.word	0x0000075c
     5f0:	.word	0x0000075c
     5f4:	.word	0x0000075c
     5f8:	.word	0x0000075c
     5fc:	.word	0x0000075c
     600:	.word	0x0000075c
     604:	.word	0x0000075c
     608:	.word	0x0000075c
     60c:	.word	0x0000075c
     610:	.word	0x0000075c
     614:	.word	0x0000075c
     618:	.word	0x0000075c
     61c:	.word	0x00000cf8
     620:	.word	0x00000cf8
     624:	.word	0x00000ccc
     628:	.word	0x00000ccc
     62c:	.word	0x00000cf8
     630:	.word	0x00000cf8
     634:	.word	0x00000cec
     638:	.word	0x00000cec
     63c:	.word	0x00000cdc
     640:	.word	0x00000cf8
     644:	.word	0x00000ccc
     648:	.word	0x00000cf8
     64c:	.word	0x00000cec
     650:	.word	0x00000750
     654:	.word	0x00000750
     658:	.word	0x00000750
     65c:	.word	0x00000750
     660:	.word	0x00000750
     664:	.word	0x00000750
     668:	.word	0x00000750
     66c:	.word	0x00000750
     670:	.word	0x00000750
     674:	.word	0x00000750
     678:	.word	0x00000750
     67c:	.word	0x00000750
     680:	.word	0x00000e94
     684:	.word	0x00000e94
     688:	.word	0x00000750
     68c:	.word	0x0000075c
     690:	.word	0x0000075c
     694:	.word	0x0000075c
     698:	.word	0x0000075c
     69c:	.word	0x0000075c
     6a0:	.word	0x000008e0
     6a4:	.word	0x000008c0
     6a8:	.word	0x000008d4
     6ac:	.word	0x000008d4
     6b0:	.word	0x000008d4
     6b4:	.word	0x000008d4
     6b8:	.word	0x0000075c
     6bc:	.word	0x00000824
     6c0:	.word	0x000008f0
     6c4:	.word	0x000008f0
     6c8:	.word	0x000008f0
     6cc:	.word	0x00000824
     6d0:	.word	0x00000824
     6d4:	.word	0x00000824
     6d8:	.word	0x00000824
     6dc:	.word	0x00000824
     6e0:	.word	0x00000824
     6e4:	.word	0x0000075c
     6e8:	.word	0x00000824
     6ec:	.word	0x00000824
     6f0:	.word	0x00000824
     6f4:	.word	0x00000824
     6f8:	.word	0x0000075c
     6fc:	.word	0x0000075c
     700:	.word	0x0000075c
     704:	.word	0x0000075c
     708:	.word	0x0000075c
     70c:	.word	0x0000075c
     710:	.word	0x00000938
     714:	.word	0x00000938
     718:	.word	0x00000938
     71c:	.word	0x0000075c
     720:	.word	0x0000075c
     724:	.word	0x0000075c
     728:	.word	0x0000075c
     72c:	.word	0x0000075c
     730:	.word	0x0000075c
     734:	.word	0x0000075c
     738:	.word	0x0000075c
     73c:	.word	0x0000075c
     740:	.word	0x0000075c
     744:	.word	0x0000075c
     748:	.word	0x0000075c
     74c:	.word	0x000009c4
     750:	movw	r0, #3
     754:	str	r0, [fp, #-4]
     758:	b	100c <set_start_bits+0xc0c>
     75c:	movw	r0, #0
     760:	str	r0, [fp, #-4]
     764:	b	100c <set_start_bits+0xc0c>
     768:	ldr	r0, [fp, #-40]	; 0xffffffd8
     76c:	ldrb	r0, [r0, #1]
     770:	cmp	r0, #9
     774:	beq	784 <set_start_bits+0x384>
     778:	movw	r0, #0
     77c:	str	r0, [fp, #-4]
     780:	b	100c <set_start_bits+0xc0c>
     784:	ldr	r0, [fp, #-40]	; 0xffffffd8
     788:	ldrb	r0, [r0, #2]
     78c:	mov	r1, r0
     790:	movw	r2, #0
     794:	movt	r2, #0
     798:	add	r0, r2, r0, lsl #2
     79c:	str	r0, [sp, #48]	; 0x30
     7a0:	ldr	r0, [sp, #48]	; 0x30
     7a4:	add	r1, r0, #4
     7a8:	str	r1, [sp, #48]	; 0x30
     7ac:	ldr	r0, [r0]
     7b0:	str	r0, [fp, #-24]	; 0xffffffe8
     7b4:	cmn	r0, #1
     7b8:	bcs	808 <set_start_bits+0x408>
     7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7c0:	cmp	r0, #255	; 0xff
     7c4:	bls	7dc <set_start_bits+0x3dc>
     7c8:	ldr	r0, [fp, #-12]
     7cc:	ldrb	r1, [r0, #31]
     7d0:	orr	r1, r1, #128	; 0x80
     7d4:	strb	r1, [r0, #31]
     7d8:	b	804 <set_start_bits+0x404>
     7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     7e0:	and	r1, r0, #7
     7e4:	mov	r2, #1
     7e8:	lsl	r1, r2, r1
     7ec:	ldr	r2, [fp, #-12]
     7f0:	lsr	r0, r0, #3
     7f4:	add	r0, r2, r0
     7f8:	ldrb	r2, [r0]
     7fc:	orr	r1, r2, r1
     800:	strb	r1, [r0]
     804:	b	7a0 <set_start_bits+0x3a0>
     808:	movw	r0, #0
     80c:	str	r0, [fp, #-36]	; 0xffffffdc
     810:	b	fcc <set_start_bits+0xbcc>
     814:	ldr	r0, [fp, #-40]	; 0xffffffd8
     818:	add	r0, r0, #1
     81c:	str	r0, [fp, #-40]	; 0xffffffd8
     820:	b	fcc <set_start_bits+0xbcc>
     824:	ldr	r0, [fp, #-40]	; 0xffffffd8
     828:	ldr	r1, [fp, #-12]
     82c:	ldr	r2, [fp, #-16]
     830:	ldr	r3, [fp, #-20]	; 0xffffffec
     834:	bl	400 <set_start_bits>
     838:	str	r0, [fp, #-44]	; 0xffffffd4
     83c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     840:	cmp	r0, #0
     844:	beq	854 <set_start_bits+0x454>
     848:	ldr	r0, [fp, #-44]	; 0xffffffd4
     84c:	cmp	r0, #3
     850:	bne	860 <set_start_bits+0x460>
     854:	ldr	r0, [fp, #-44]	; 0xffffffd4
     858:	str	r0, [fp, #-4]
     85c:	b	100c <set_start_bits+0xc0c>
     860:	ldr	r0, [fp, #-44]	; 0xffffffd4
     864:	cmp	r0, #1
     868:	bne	878 <set_start_bits+0x478>
     86c:	movw	r0, #0
     870:	str	r0, [fp, #-36]	; 0xffffffdc
     874:	b	8bc <set_start_bits+0x4bc>
     878:	b	87c <set_start_bits+0x47c>
     87c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     880:	ldrb	r0, [r0, #1]
     884:	lsl	r0, r0, #8
     888:	ldr	r1, [fp, #-40]	; 0xffffffd8
     88c:	ldrb	r1, [r1, #2]
     890:	orr	r0, r0, r1
     894:	ldr	r1, [fp, #-40]	; 0xffffffd8
     898:	add	r0, r1, r0
     89c:	str	r0, [fp, #-40]	; 0xffffffd8
     8a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8a4:	ldrb	r0, [r0]
     8a8:	cmp	r0, #119	; 0x77
     8ac:	beq	87c <set_start_bits+0x47c>
     8b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8b4:	add	r0, r0, #3
     8b8:	str	r0, [fp, #-40]	; 0xffffffd8
     8bc:	b	fcc <set_start_bits+0xbcc>
     8c0:	movw	r0, #2
     8c4:	str	r0, [fp, #-28]	; 0xffffffe4
     8c8:	movw	r0, #0
     8cc:	str	r0, [fp, #-36]	; 0xffffffdc
     8d0:	b	fcc <set_start_bits+0xbcc>
     8d4:	movw	r0, #2
     8d8:	str	r0, [fp, #-4]
     8dc:	b	100c <set_start_bits+0xc0c>
     8e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8e4:	add	r0, r0, #6
     8e8:	str	r0, [fp, #-40]	; 0xffffffd8
     8ec:	b	fcc <set_start_bits+0xbcc>
     8f0:	b	8f4 <set_start_bits+0x4f4>
     8f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8f8:	ldrb	r0, [r0, #1]
     8fc:	lsl	r0, r0, #8
     900:	ldr	r1, [fp, #-40]	; 0xffffffd8
     904:	ldrb	r1, [r1, #2]
     908:	orr	r0, r0, r1
     90c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     910:	add	r0, r1, r0
     914:	str	r0, [fp, #-40]	; 0xffffffd8
     918:	ldr	r0, [fp, #-40]	; 0xffffffd8
     91c:	ldrb	r0, [r0]
     920:	cmp	r0, #119	; 0x77
     924:	beq	8f4 <set_start_bits+0x4f4>
     928:	ldr	r0, [fp, #-40]	; 0xffffffd8
     92c:	add	r0, r0, #3
     930:	str	r0, [fp, #-40]	; 0xffffffd8
     934:	b	fcc <set_start_bits+0xbcc>
     938:	ldr	r0, [fp, #-40]	; 0xffffffd8
     93c:	add	r0, r0, #1
     940:	str	r0, [fp, #-40]	; 0xffffffd8
     944:	ldr	r1, [fp, #-12]
     948:	ldr	r2, [fp, #-16]
     94c:	ldr	r3, [fp, #-20]	; 0xffffffec
     950:	bl	400 <set_start_bits>
     954:	str	r0, [fp, #-44]	; 0xffffffd4
     958:	ldr	r0, [fp, #-44]	; 0xffffffd4
     95c:	cmp	r0, #0
     960:	beq	970 <set_start_bits+0x570>
     964:	ldr	r0, [fp, #-44]	; 0xffffffd4
     968:	cmp	r0, #3
     96c:	bne	97c <set_start_bits+0x57c>
     970:	ldr	r0, [fp, #-44]	; 0xffffffd4
     974:	str	r0, [fp, #-4]
     978:	b	100c <set_start_bits+0xc0c>
     97c:	b	980 <set_start_bits+0x580>
     980:	ldr	r0, [fp, #-40]	; 0xffffffd8
     984:	ldrb	r0, [r0, #1]
     988:	lsl	r0, r0, #8
     98c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     990:	ldrb	r1, [r1, #2]
     994:	orr	r0, r0, r1
     998:	ldr	r1, [fp, #-40]	; 0xffffffd8
     99c:	add	r0, r1, r0
     9a0:	str	r0, [fp, #-40]	; 0xffffffd8
     9a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9a8:	ldrb	r0, [r0]
     9ac:	cmp	r0, #119	; 0x77
     9b0:	beq	980 <set_start_bits+0x580>
     9b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9b8:	add	r0, r0, #3
     9bc:	str	r0, [fp, #-40]	; 0xffffffd8
     9c0:	b	fcc <set_start_bits+0xbcc>
     9c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9c8:	add	r0, r0, #1
     9cc:	str	r0, [fp, #-40]	; 0xffffffd8
     9d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9d4:	ldrb	r0, [r0, #1]
     9d8:	lsl	r0, r0, #8
     9dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
     9e0:	ldrb	r1, [r1, #2]
     9e4:	orr	r0, r0, r1
     9e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
     9ec:	add	r0, r1, r0
     9f0:	str	r0, [fp, #-40]	; 0xffffffd8
     9f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9f8:	ldrb	r0, [r0]
     9fc:	cmp	r0, #119	; 0x77
     a00:	beq	9d0 <set_start_bits+0x5d0>
     a04:	ldr	r0, [fp, #-40]	; 0xffffffd8
     a08:	add	r0, r0, #3
     a0c:	str	r0, [fp, #-40]	; 0xffffffd8
     a10:	b	fcc <set_start_bits+0xbcc>
     a14:	ldr	r0, [fp, #-12]
     a18:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a1c:	add	r1, r1, #1
     a20:	ldr	r3, [fp, #-20]	; 0xffffffec
     a24:	ldr	r2, [fp, #-16]
     a28:	movw	ip, #0
     a2c:	str	r2, [sp, #36]	; 0x24
     a30:	mov	r2, ip
     a34:	ldr	ip, [sp, #36]	; 0x24
     a38:	str	ip, [sp]
     a3c:	bl	1ff8 <set_table_bit>
     a40:	str	r0, [fp, #-40]	; 0xffffffd8
     a44:	b	fcc <set_start_bits+0xbcc>
     a48:	ldr	r0, [fp, #-12]
     a4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a50:	add	r1, r1, #1
     a54:	ldr	r3, [fp, #-20]	; 0xffffffec
     a58:	ldr	r2, [fp, #-16]
     a5c:	movw	ip, #1
     a60:	str	r2, [sp, #32]
     a64:	mov	r2, ip
     a68:	ldr	ip, [sp, #32]
     a6c:	str	ip, [sp]
     a70:	bl	1ff8 <set_table_bit>
     a74:	str	r0, [fp, #-40]	; 0xffffffd8
     a78:	b	fcc <set_start_bits+0xbcc>
     a7c:	ldr	r0, [fp, #-12]
     a80:	ldr	r1, [fp, #-40]	; 0xffffffd8
     a84:	add	r1, r1, #1
     a88:	add	r1, r1, #2
     a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
     a90:	ldr	r2, [fp, #-16]
     a94:	movw	ip, #0
     a98:	str	r2, [sp, #28]
     a9c:	mov	r2, ip
     aa0:	ldr	ip, [sp, #28]
     aa4:	str	ip, [sp]
     aa8:	bl	1ff8 <set_table_bit>
     aac:	str	r0, [fp, #-40]	; 0xffffffd8
     ab0:	b	fcc <set_start_bits+0xbcc>
     ab4:	ldr	r0, [fp, #-12]
     ab8:	ldr	r1, [fp, #-40]	; 0xffffffd8
     abc:	add	r1, r1, #1
     ac0:	add	r1, r1, #2
     ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ac8:	ldr	r2, [fp, #-16]
     acc:	movw	ip, #1
     ad0:	str	r2, [sp, #24]
     ad4:	mov	r2, ip
     ad8:	ldr	ip, [sp, #24]
     adc:	str	ip, [sp]
     ae0:	bl	1ff8 <set_table_bit>
     ae4:	str	r0, [fp, #-40]	; 0xffffffd8
     ae8:	b	fcc <set_start_bits+0xbcc>
     aec:	ldr	r0, [fp, #-40]	; 0xffffffd8
     af0:	add	r0, r0, #2
     af4:	str	r0, [fp, #-40]	; 0xffffffd8
     af8:	ldr	r0, [fp, #-12]
     afc:	ldr	r1, [fp, #-40]	; 0xffffffd8
     b00:	add	r1, r1, #1
     b04:	ldr	r3, [fp, #-20]	; 0xffffffec
     b08:	ldr	r2, [fp, #-16]
     b0c:	movw	ip, #0
     b10:	str	r2, [sp, #20]
     b14:	mov	r2, ip
     b18:	ldr	ip, [sp, #20]
     b1c:	str	ip, [sp]
     b20:	bl	1ff8 <set_table_bit>
     b24:	movw	r1, #0
     b28:	str	r1, [fp, #-36]	; 0xffffffdc
     b2c:	b	fcc <set_start_bits+0xbcc>
     b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b34:	add	r0, r0, #2
     b38:	str	r0, [fp, #-40]	; 0xffffffd8
     b3c:	ldr	r0, [fp, #-12]
     b40:	ldr	r1, [fp, #-40]	; 0xffffffd8
     b44:	add	r1, r1, #1
     b48:	ldr	r3, [fp, #-20]	; 0xffffffec
     b4c:	ldr	r2, [fp, #-16]
     b50:	movw	ip, #1
     b54:	str	r2, [sp, #16]
     b58:	mov	r2, ip
     b5c:	ldr	ip, [sp, #16]
     b60:	str	ip, [sp]
     b64:	bl	1ff8 <set_table_bit>
     b68:	movw	r1, #0
     b6c:	str	r1, [fp, #-36]	; 0xffffffdc
     b70:	b	fcc <set_start_bits+0xbcc>
     b74:	ldr	r0, [fp, #-12]
     b78:	ldrb	r1, [r0, #1]
     b7c:	orr	r1, r1, #2
     b80:	strb	r1, [r0, #1]
     b84:	ldr	r0, [fp, #-12]
     b88:	ldrb	r1, [r0, #4]
     b8c:	orr	r1, r1, #1
     b90:	strb	r1, [r0, #4]
     b94:	ldr	r0, [fp, #-12]
     b98:	ldrb	r1, [r0, #20]
     b9c:	orr	r1, r1, #1
     ba0:	strb	r1, [r0, #20]
     ba4:	movw	r0, #0
     ba8:	str	r0, [fp, #-36]	; 0xffffffdc
     bac:	b	fcc <set_start_bits+0xbcc>
     bb0:	ldr	r0, [fp, #-12]
     bb4:	ldrb	r1, [r0, #1]
     bb8:	orr	r1, r1, #4
     bbc:	strb	r1, [r0, #1]
     bc0:	ldr	r0, [fp, #-12]
     bc4:	ldrb	r1, [r0, #1]
     bc8:	orr	r1, r1, #8
     bcc:	strb	r1, [r0, #1]
     bd0:	ldr	r0, [fp, #-12]
     bd4:	ldrb	r1, [r0, #1]
     bd8:	orr	r1, r1, #16
     bdc:	strb	r1, [r0, #1]
     be0:	ldr	r0, [fp, #-12]
     be4:	ldrb	r1, [r0, #1]
     be8:	orr	r1, r1, #32
     bec:	strb	r1, [r0, #1]
     bf0:	ldr	r0, [fp, #-12]
     bf4:	ldrb	r1, [r0, #16]
     bf8:	orr	r1, r1, #32
     bfc:	strb	r1, [r0, #16]
     c00:	movw	r0, #0
     c04:	str	r0, [fp, #-36]	; 0xffffffdc
     c08:	b	fcc <set_start_bits+0xbcc>
     c0c:	ldr	r0, [fp, #-12]
     c10:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c14:	ldr	r3, [fp, #-20]	; 0xffffffec
     c18:	movw	r1, #64	; 0x40
     c1c:	bl	20d0 <set_nottype_bits>
     c20:	movw	r0, #0
     c24:	str	r0, [fp, #-36]	; 0xffffffdc
     c28:	b	fcc <set_start_bits+0xbcc>
     c2c:	ldr	r0, [fp, #-12]
     c30:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c34:	ldr	r3, [fp, #-20]	; 0xffffffec
     c38:	movw	r1, #64	; 0x40
     c3c:	bl	2150 <set_type_bits>
     c40:	movw	r0, #0
     c44:	str	r0, [fp, #-36]	; 0xffffffdc
     c48:	b	fcc <set_start_bits+0xbcc>
     c4c:	ldr	r0, [fp, #-12]
     c50:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c54:	ldr	r3, [fp, #-20]	; 0xffffffec
     c58:	movw	r1, #0
     c5c:	bl	20d0 <set_nottype_bits>
     c60:	movw	r0, #0
     c64:	str	r0, [fp, #-36]	; 0xffffffdc
     c68:	b	fcc <set_start_bits+0xbcc>
     c6c:	ldr	r0, [fp, #-12]
     c70:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c74:	ldr	r3, [fp, #-20]	; 0xffffffec
     c78:	movw	r1, #0
     c7c:	bl	2150 <set_type_bits>
     c80:	movw	r0, #0
     c84:	str	r0, [fp, #-36]	; 0xffffffdc
     c88:	b	fcc <set_start_bits+0xbcc>
     c8c:	ldr	r0, [fp, #-12]
     c90:	ldr	r2, [fp, #-32]	; 0xffffffe0
     c94:	ldr	r3, [fp, #-20]	; 0xffffffec
     c98:	movw	r1, #160	; 0xa0
     c9c:	bl	20d0 <set_nottype_bits>
     ca0:	movw	r0, #0
     ca4:	str	r0, [fp, #-36]	; 0xffffffdc
     ca8:	b	fcc <set_start_bits+0xbcc>
     cac:	ldr	r0, [fp, #-12]
     cb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
     cb8:	movw	r1, #160	; 0xa0
     cbc:	bl	2150 <set_type_bits>
     cc0:	movw	r0, #0
     cc4:	str	r0, [fp, #-36]	; 0xffffffdc
     cc8:	b	fcc <set_start_bits+0xbcc>
     ccc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     cd0:	add	r0, r0, #1
     cd4:	str	r0, [fp, #-40]	; 0xffffffd8
     cd8:	b	fcc <set_start_bits+0xbcc>
     cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ce0:	add	r0, r0, #3
     ce4:	str	r0, [fp, #-40]	; 0xffffffd8
     ce8:	b	fcc <set_start_bits+0xbcc>
     cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
     cf0:	add	r0, r0, #2
     cf4:	str	r0, [fp, #-40]	; 0xffffffd8
     cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     cfc:	ldrb	r0, [r0, #1]
     d00:	sub	r0, r0, #6
     d04:	cmp	r0, #15
     d08:	str	r0, [sp, #12]
     d0c:	bhi	d60 <set_start_bits+0x960>
     d10:	add	r0, pc, #8
     d14:	ldr	r1, [sp, #12]
     d18:	ldr	r0, [r0, r1, lsl #2]
     d1c:	mov	pc, r0
     d20:	.word	0x00000df8
     d24:	.word	0x00000e10
     d28:	.word	0x00000e28
     d2c:	.word	0x00000e40
     d30:	.word	0x00000e58
     d34:	.word	0x00000e70
     d38:	.word	0x00000d64
     d3c:	.word	0x00000d64
     d40:	.word	0x00000d60
     d44:	.word	0x00000d60
     d48:	.word	0x00000d60
     d4c:	.word	0x00000da4
     d50:	.word	0x00000d60
     d54:	.word	0x00000d70
     d58:	.word	0x00000d60
     d5c:	.word	0x00000da4
     d60:	b	d64 <set_start_bits+0x964>
     d64:	movw	r0, #0
     d68:	str	r0, [fp, #-4]
     d6c:	b	100c <set_start_bits+0xc0c>
     d70:	ldr	r0, [fp, #-12]
     d74:	ldrb	r1, [r0, #1]
     d78:	orr	r1, r1, #2
     d7c:	strb	r1, [r0, #1]
     d80:	ldr	r0, [fp, #-12]
     d84:	ldrb	r1, [r0, #4]
     d88:	orr	r1, r1, #1
     d8c:	strb	r1, [r0, #4]
     d90:	ldr	r0, [fp, #-12]
     d94:	ldrb	r1, [r0, #20]
     d98:	orr	r1, r1, #1
     d9c:	strb	r1, [r0, #20]
     da0:	b	e84 <set_start_bits+0xa84>
     da4:	ldr	r0, [fp, #-12]
     da8:	ldrb	r1, [r0, #1]
     dac:	orr	r1, r1, #4
     db0:	strb	r1, [r0, #1]
     db4:	ldr	r0, [fp, #-12]
     db8:	ldrb	r1, [r0, #1]
     dbc:	orr	r1, r1, #8
     dc0:	strb	r1, [r0, #1]
     dc4:	ldr	r0, [fp, #-12]
     dc8:	ldrb	r1, [r0, #1]
     dcc:	orr	r1, r1, #16
     dd0:	strb	r1, [r0, #1]
     dd4:	ldr	r0, [fp, #-12]
     dd8:	ldrb	r1, [r0, #1]
     ddc:	orr	r1, r1, #32
     de0:	strb	r1, [r0, #1]
     de4:	ldr	r0, [fp, #-12]
     de8:	ldrb	r1, [r0, #16]
     dec:	orr	r1, r1, #32
     df0:	strb	r1, [r0, #16]
     df4:	b	e84 <set_start_bits+0xa84>
     df8:	ldr	r0, [fp, #-12]
     dfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e00:	ldr	r3, [fp, #-20]	; 0xffffffec
     e04:	movw	r1, #64	; 0x40
     e08:	bl	20d0 <set_nottype_bits>
     e0c:	b	e84 <set_start_bits+0xa84>
     e10:	ldr	r0, [fp, #-12]
     e14:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e18:	ldr	r3, [fp, #-20]	; 0xffffffec
     e1c:	movw	r1, #64	; 0x40
     e20:	bl	2150 <set_type_bits>
     e24:	b	e84 <set_start_bits+0xa84>
     e28:	ldr	r0, [fp, #-12]
     e2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e30:	ldr	r3, [fp, #-20]	; 0xffffffec
     e34:	movw	r1, #0
     e38:	bl	20d0 <set_nottype_bits>
     e3c:	b	e84 <set_start_bits+0xa84>
     e40:	ldr	r0, [fp, #-12]
     e44:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e48:	ldr	r3, [fp, #-20]	; 0xffffffec
     e4c:	movw	r1, #0
     e50:	bl	2150 <set_type_bits>
     e54:	b	e84 <set_start_bits+0xa84>
     e58:	ldr	r0, [fp, #-12]
     e5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e60:	ldr	r3, [fp, #-20]	; 0xffffffec
     e64:	movw	r1, #160	; 0xa0
     e68:	bl	20d0 <set_nottype_bits>
     e6c:	b	e84 <set_start_bits+0xa84>
     e70:	ldr	r0, [fp, #-12]
     e74:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e78:	ldr	r3, [fp, #-20]	; 0xffffffec
     e7c:	movw	r1, #160	; 0xa0
     e80:	bl	2150 <set_type_bits>
     e84:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e88:	add	r0, r0, #2
     e8c:	str	r0, [fp, #-40]	; 0xffffffd8
     e90:	b	fcc <set_start_bits+0xbcc>
     e94:	ldr	r0, [fp, #-40]	; 0xffffffd8
     e98:	add	r0, r0, #1
     e9c:	str	r0, [fp, #-40]	; 0xffffffd8
     ea0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     ea4:	str	r0, [sp, #44]	; 0x2c
     ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     eac:	add	r0, r0, #32
     eb0:	str	r0, [fp, #-40]	; 0xffffffd8
     eb4:	movw	r0, #0
     eb8:	str	r0, [fp, #-24]	; 0xffffffe8
     ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ec0:	cmp	r0, #32
     ec4:	bcs	f00 <set_start_bits+0xb00>
     ec8:	ldr	r0, [sp, #44]	; 0x2c
     ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ed0:	add	r0, r0, r1
     ed4:	ldrb	r0, [r0]
     ed8:	ldr	r1, [fp, #-12]
     edc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ee0:	add	r1, r1, r2
     ee4:	ldrb	r2, [r1]
     ee8:	orr	r0, r2, r0
     eec:	strb	r0, [r1]
     ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ef4:	add	r0, r0, #1
     ef8:	str	r0, [fp, #-24]	; 0xffffffe8
     efc:	b	ebc <set_start_bits+0xabc>
     f00:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f04:	ldrb	r0, [r0]
     f08:	sub	r1, r0, #98	; 0x62
     f0c:	cmp	r1, #2
     f10:	str	r0, [sp, #8]
     f14:	bcc	f74 <set_start_bits+0xb74>
     f18:	b	f1c <set_start_bits+0xb1c>
     f1c:	ldr	r0, [sp, #8]
     f20:	sub	r1, r0, #102	; 0x66
     f24:	cmp	r1, #2
     f28:	bcc	f74 <set_start_bits+0xb74>
     f2c:	b	f30 <set_start_bits+0xb30>
     f30:	ldr	r0, [sp, #8]
     f34:	sub	r1, r0, #104	; 0x68
     f38:	cmp	r1, #2
     f3c:	bcc	f84 <set_start_bits+0xb84>
     f40:	b	f44 <set_start_bits+0xb44>
     f44:	ldr	r0, [sp, #8]
     f48:	cmp	r0, #106	; 0x6a
     f4c:	beq	f74 <set_start_bits+0xb74>
     f50:	b	f54 <set_start_bits+0xb54>
     f54:	ldr	r0, [sp, #8]
     f58:	cmp	r0, #108	; 0x6c
     f5c:	beq	f74 <set_start_bits+0xb74>
     f60:	b	f64 <set_start_bits+0xb64>
     f64:	ldr	r0, [sp, #8]
     f68:	cmp	r0, #109	; 0x6d
     f6c:	beq	f84 <set_start_bits+0xb84>
     f70:	b	fc0 <set_start_bits+0xbc0>
     f74:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f78:	add	r0, r0, #1
     f7c:	str	r0, [fp, #-40]	; 0xffffffd8
     f80:	b	fc8 <set_start_bits+0xbc8>
     f84:	ldr	r0, [fp, #-40]	; 0xffffffd8
     f88:	ldrb	r0, [r0, #1]
     f8c:	lsl	r0, r0, #8
     f90:	ldr	r1, [fp, #-40]	; 0xffffffd8
     f94:	ldrb	r1, [r1, #2]
     f98:	orr	r0, r0, r1
     f9c:	cmp	r0, #0
     fa0:	bne	fb4 <set_start_bits+0xbb4>
     fa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     fa8:	add	r0, r0, #5
     fac:	str	r0, [fp, #-40]	; 0xffffffd8
     fb0:	b	fbc <set_start_bits+0xbbc>
     fb4:	movw	r0, #0
     fb8:	str	r0, [fp, #-36]	; 0xffffffdc
     fbc:	b	fc8 <set_start_bits+0xbc8>
     fc0:	movw	r0, #0
     fc4:	str	r0, [fp, #-36]	; 0xffffffdc
     fc8:	b	fcc <set_start_bits+0xbcc>
     fcc:	b	494 <set_start_bits+0x94>
     fd0:	ldr	r0, [fp, #-8]
     fd4:	ldrb	r0, [r0, #1]
     fd8:	lsl	r0, r0, #8
     fdc:	ldr	r1, [fp, #-8]
     fe0:	ldrb	r1, [r1, #2]
     fe4:	orr	r0, r0, r1
     fe8:	ldr	r1, [fp, #-8]
     fec:	add	r0, r1, r0
     ff0:	str	r0, [fp, #-8]
     ff4:	ldr	r0, [fp, #-8]
     ff8:	ldrb	r0, [r0]
     ffc:	cmp	r0, #119	; 0x77
    1000:	beq	42c <set_start_bits+0x2c>
    1004:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1008:	str	r0, [fp, #-4]
    100c:	ldr	r0, [fp, #-4]
    1010:	mov	sp, fp
    1014:	pop	{fp, pc}

00001018 <find_minlength>:
    1018:	push	{fp, lr}
    101c:	mov	fp, sp
    1020:	sub	sp, sp, #120	; 0x78
    1024:	ldr	ip, [fp, #12]
    1028:	ldr	lr, [fp, #8]
    102c:	str	r0, [fp, #-8]
    1030:	str	r1, [fp, #-12]
    1034:	str	r2, [fp, #-16]
    1038:	str	r3, [fp, #-20]	; 0xffffffec
    103c:	mvn	r0, #0
    1040:	str	r0, [fp, #-24]	; 0xffffffe8
    1044:	ldr	r0, [fp, #-20]	; 0xffffffec
    1048:	and	r0, r0, #2048	; 0x800
    104c:	cmp	r0, #0
    1050:	movw	r0, #0
    1054:	movne	r0, #1
    1058:	and	r0, r0, #1
    105c:	str	r0, [fp, #-28]	; 0xffffffe4
    1060:	movw	r0, #0
    1064:	str	r0, [fp, #-32]	; 0xffffffe0
    1068:	str	r0, [fp, #-44]	; 0xffffffd4
    106c:	ldr	r0, [fp, #-12]
    1070:	add	r0, r0, #1
    1074:	add	r0, r0, #2
    1078:	str	r0, [fp, #-48]	; 0xffffffd0
    107c:	ldr	r0, [fp, #12]
    1080:	ldr	r1, [r0]
    1084:	add	r2, r1, #1
    1088:	str	r2, [r0]
    108c:	cmp	r1, #1000	; 0x3e8
    1090:	ble	10a0 <find_minlength+0x88>
    1094:	mvn	r0, #0
    1098:	str	r0, [fp, #-4]
    109c:	b	1f9c <find_minlength+0xf84>
    10a0:	ldr	r0, [fp, #-12]
    10a4:	ldrb	r0, [r0]
    10a8:	cmp	r0, #133	; 0x85
    10ac:	beq	10e0 <find_minlength+0xc8>
    10b0:	ldr	r0, [fp, #-12]
    10b4:	ldrb	r0, [r0]
    10b8:	cmp	r0, #138	; 0x8a
    10bc:	beq	10e0 <find_minlength+0xc8>
    10c0:	ldr	r0, [fp, #-12]
    10c4:	ldrb	r0, [r0]
    10c8:	cmp	r0, #134	; 0x86
    10cc:	beq	10e0 <find_minlength+0xc8>
    10d0:	ldr	r0, [fp, #-12]
    10d4:	ldrb	r0, [r0]
    10d8:	cmp	r0, #139	; 0x8b
    10dc:	bne	10ec <find_minlength+0xd4>
    10e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10e4:	add	r0, r0, #2
    10e8:	str	r0, [fp, #-48]	; 0xffffffd0
    10ec:	b	10f0 <find_minlength+0xd8>
    10f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10f4:	ldrb	r0, [r0]
    10f8:	strb	r0, [sp, #55]	; 0x37
    10fc:	ldrb	r0, [sp, #55]	; 0x37
    1100:	mov	r1, r0
    1104:	cmp	r0, #161	; 0xa1
    1108:	str	r1, [sp, #24]
    110c:	bhi	1f8c <find_minlength+0xf74>
    1110:	add	r0, pc, #8
    1114:	ldr	r1, [sp, #24]
    1118:	ldr	r0, [r0, r1, lsl #2]
    111c:	mov	pc, r0
    1120:	.word	0x00001494
    1124:	.word	0x00001534
    1128:	.word	0x00001534
    112c:	.word	0x00001f68
    1130:	.word	0x00001534
    1134:	.word	0x00001534
    1138:	.word	0x000016f4
    113c:	.word	0x000016f4
    1140:	.word	0x000016f4
    1144:	.word	0x000016f4
    1148:	.word	0x000016f4
    114c:	.word	0x000016f4
    1150:	.word	0x000016f4
    1154:	.word	0x000016f4
    1158:	.word	0x0000172c
    115c:	.word	0x000016e8
    1160:	.word	0x000016e8
    1164:	.word	0x00001710
    1168:	.word	0x000016f4
    116c:	.word	0x000016f4
    1170:	.word	0x000016f4
    1174:	.word	0x000016f4
    1178:	.word	0x000016f4
    117c:	.word	0x00001534
    1180:	.word	0x00001534
    1184:	.word	0x00001534
    1188:	.word	0x00001534
    118c:	.word	0x00001534
    1190:	.word	0x00001534
    1194:	.word	0x000015c4
    1198:	.word	0x000015c4
    119c:	.word	0x000015c4
    11a0:	.word	0x000015c4
    11a4:	.word	0x00001f14
    11a8:	.word	0x00001f14
    11ac:	.word	0x000015c4
    11b0:	.word	0x000015c4
    11b4:	.word	0x00001f14
    11b8:	.word	0x00001f14
    11bc:	.word	0x00001f14
    11c0:	.word	0x00001f14
    11c4:	.word	0x0000163c
    11c8:	.word	0x00001f14
    11cc:	.word	0x000015c4
    11d0:	.word	0x00001f14
    11d4:	.word	0x00001f14
    11d8:	.word	0x00001f14
    11dc:	.word	0x00001f14
    11e0:	.word	0x000015c4
    11e4:	.word	0x000015c4
    11e8:	.word	0x00001f14
    11ec:	.word	0x00001f14
    11f0:	.word	0x00001f14
    11f4:	.word	0x00001f14
    11f8:	.word	0x0000163c
    11fc:	.word	0x00001f14
    1200:	.word	0x000015c4
    1204:	.word	0x00001f14
    1208:	.word	0x00001f14
    120c:	.word	0x00001f14
    1210:	.word	0x00001f14
    1214:	.word	0x000015c4
    1218:	.word	0x000015c4
    121c:	.word	0x00001f14
    1220:	.word	0x00001f14
    1224:	.word	0x00001f14
    1228:	.word	0x00001f14
    122c:	.word	0x0000163c
    1230:	.word	0x00001f14
    1234:	.word	0x000015c4
    1238:	.word	0x00001f14
    123c:	.word	0x00001f14
    1240:	.word	0x00001f14
    1244:	.word	0x00001f14
    1248:	.word	0x000015c4
    124c:	.word	0x000015c4
    1250:	.word	0x00001f14
    1254:	.word	0x00001f14
    1258:	.word	0x00001f14
    125c:	.word	0x00001f14
    1260:	.word	0x0000163c
    1264:	.word	0x00001f14
    1268:	.word	0x000015c4
    126c:	.word	0x00001f14
    1270:	.word	0x00001f14
    1274:	.word	0x00001748
    1278:	.word	0x00001748
    127c:	.word	0x000015e0
    1280:	.word	0x000015e0
    1284:	.word	0x00001748
    1288:	.word	0x00001748
    128c:	.word	0x00001798
    1290:	.word	0x00001798
    1294:	.word	0x00001670
    1298:	.word	0x00001748
    129c:	.word	0x000015e0
    12a0:	.word	0x00001748
    12a4:	.word	0x00001798
    12a8:	.word	0x00001f8c
    12ac:	.word	0x00001f8c
    12b0:	.word	0x00001f8c
    12b4:	.word	0x00001f8c
    12b8:	.word	0x00001f8c
    12bc:	.word	0x00001f8c
    12c0:	.word	0x00001f8c
    12c4:	.word	0x00001f8c
    12c8:	.word	0x00001f8c
    12cc:	.word	0x00001f8c
    12d0:	.word	0x00001f8c
    12d4:	.word	0x00001f8c
    12d8:	.word	0x000017e8
    12dc:	.word	0x000017e8
    12e0:	.word	0x00001f8c
    12e4:	.word	0x00001b30
    12e8:	.word	0x00001b30
    12ec:	.word	0x000018f8
    12f0:	.word	0x000018f8
    12f4:	.word	0x00001dd0
    12f8:	.word	0x00001534
    12fc:	.word	0x00001494
    1300:	.word	0x00001494
    1304:	.word	0x00001494
    1308:	.word	0x00001494
    130c:	.word	0x00001494
    1310:	.word	0x00001534
    1314:	.word	0x000014f8
    1318:	.word	0x000014f8
    131c:	.word	0x000014f8
    1320:	.word	0x000014f8
    1324:	.word	0x000013f4
    1328:	.word	0x000013f4
    132c:	.word	0x000013f4
    1330:	.word	0x000013f4
    1334:	.word	0x000013f4
    1338:	.word	0x000013f4
    133c:	.word	0x000013a8
    1340:	.word	0x000013f4
    1344:	.word	0x000013f4
    1348:	.word	0x000013f4
    134c:	.word	0x000013f4
    1350:	.word	0x000013a8
    1354:	.word	0x00001534
    1358:	.word	0x00001534
    135c:	.word	0x00001534
    1360:	.word	0x00001534
    1364:	.word	0x00001534
    1368:	.word	0x0000155c
    136c:	.word	0x0000155c
    1370:	.word	0x0000155c
    1374:	.word	0x00001f38
    1378:	.word	0x00001f68
    137c:	.word	0x00001f38
    1380:	.word	0x00001f68
    1384:	.word	0x00001f38
    1388:	.word	0x00001f68
    138c:	.word	0x00001f38
    1390:	.word	0x00001f68
    1394:	.word	0x00001f68
    1398:	.word	0x00001488
    139c:	.word	0x00001488
    13a0:	.word	0x00001f68
    13a4:	.word	0x0000155c
    13a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    13ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
    13b0:	ldrb	r1, [r1, #1]
    13b4:	lsl	r1, r1, #8
    13b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    13bc:	ldrb	r2, [r2, #2]
    13c0:	orr	r1, r1, r2
    13c4:	add	r0, r0, r1
    13c8:	str	r0, [sp, #60]	; 0x3c
    13cc:	ldr	r0, [sp, #60]	; 0x3c
    13d0:	ldrb	r0, [r0]
    13d4:	cmp	r0, #119	; 0x77
    13d8:	beq	13f0 <find_minlength+0x3d8>
    13dc:	ldr	r0, [sp, #60]	; 0x3c
    13e0:	add	r0, r0, #1
    13e4:	add	r0, r0, #2
    13e8:	str	r0, [fp, #-48]	; 0xffffffd0
    13ec:	b	1f98 <find_minlength+0xf80>
    13f0:	b	13f4 <find_minlength+0x3dc>
    13f4:	ldr	r0, [fp, #-8]
    13f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    13fc:	ldr	r2, [fp, #-16]
    1400:	ldr	r3, [fp, #-20]	; 0xffffffec
    1404:	ldr	ip, [fp, #8]
    1408:	ldr	lr, [fp, #12]
    140c:	str	ip, [sp]
    1410:	str	lr, [sp, #4]
    1414:	bl	1018 <find_minlength>
    1418:	str	r0, [fp, #-52]	; 0xffffffcc
    141c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1420:	cmp	r0, #0
    1424:	bge	1434 <find_minlength+0x41c>
    1428:	ldr	r0, [fp, #-52]	; 0xffffffcc
    142c:	str	r0, [fp, #-4]
    1430:	b	1f9c <find_minlength+0xf84>
    1434:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1438:	ldr	r1, [fp, #-44]	; 0xffffffd4
    143c:	add	r0, r1, r0
    1440:	str	r0, [fp, #-44]	; 0xffffffd4
    1444:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1448:	ldrb	r0, [r0, #1]
    144c:	lsl	r0, r0, #8
    1450:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1454:	ldrb	r1, [r1, #2]
    1458:	orr	r0, r0, r1
    145c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1460:	add	r0, r1, r0
    1464:	str	r0, [fp, #-48]	; 0xffffffd0
    1468:	ldr	r0, [fp, #-48]	; 0xffffffd0
    146c:	ldrb	r0, [r0]
    1470:	cmp	r0, #119	; 0x77
    1474:	beq	1444 <find_minlength+0x42c>
    1478:	ldr	r0, [fp, #-48]	; 0xffffffd0
    147c:	add	r0, r0, #3
    1480:	str	r0, [fp, #-48]	; 0xffffffd0
    1484:	b	1f98 <find_minlength+0xf80>
    1488:	mvn	r0, #0
    148c:	str	r0, [fp, #-4]
    1490:	b	1f9c <find_minlength+0xf84>
    1494:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1498:	cmp	r0, #0
    149c:	blt	14bc <find_minlength+0x4a4>
    14a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14a4:	cmp	r0, #0
    14a8:	bne	14c4 <find_minlength+0x4ac>
    14ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    14b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    14b4:	cmp	r0, r1
    14b8:	bge	14c4 <find_minlength+0x4ac>
    14bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    14c0:	str	r0, [fp, #-24]	; 0xffffffe8
    14c4:	ldrb	r0, [sp, #55]	; 0x37
    14c8:	cmp	r0, #119	; 0x77
    14cc:	beq	14dc <find_minlength+0x4c4>
    14d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14d4:	str	r0, [fp, #-4]
    14d8:	b	1f9c <find_minlength+0xf84>
    14dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14e0:	add	r0, r0, #3
    14e4:	str	r0, [fp, #-48]	; 0xffffffd0
    14e8:	movw	r0, #0
    14ec:	str	r0, [fp, #-44]	; 0xffffffd4
    14f0:	str	r0, [fp, #-32]	; 0xffffffe0
    14f4:	b	1f98 <find_minlength+0xf80>
    14f8:	b	14fc <find_minlength+0x4e4>
    14fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1500:	ldrb	r0, [r0, #1]
    1504:	lsl	r0, r0, #8
    1508:	ldr	r1, [fp, #-48]	; 0xffffffd0
    150c:	ldrb	r1, [r1, #2]
    1510:	orr	r0, r0, r1
    1514:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1518:	add	r0, r1, r0
    151c:	str	r0, [fp, #-48]	; 0xffffffd0
    1520:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1524:	ldrb	r0, [r0]
    1528:	cmp	r0, #119	; 0x77
    152c:	beq	14fc <find_minlength+0x4e4>
    1530:	b	1534 <find_minlength+0x51c>
    1534:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1538:	ldrb	r0, [r0]
    153c:	movw	r1, #0
    1540:	movt	r1, #0
    1544:	add	r0, r1, r0
    1548:	ldrb	r0, [r0]
    154c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1550:	add	r0, r1, r0
    1554:	str	r0, [fp, #-48]	; 0xffffffd0
    1558:	b	1f98 <find_minlength+0xf80>
    155c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1560:	ldrb	r0, [r0]
    1564:	movw	r1, #0
    1568:	movt	r1, #0
    156c:	add	r0, r1, r0
    1570:	ldrb	r0, [r0]
    1574:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1578:	add	r0, r1, r0
    157c:	str	r0, [fp, #-48]	; 0xffffffd0
    1580:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1584:	ldrb	r0, [r0, #1]
    1588:	lsl	r0, r0, #8
    158c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1590:	ldrb	r1, [r1, #2]
    1594:	orr	r0, r0, r1
    1598:	ldr	r1, [fp, #-48]	; 0xffffffd0
    159c:	add	r0, r1, r0
    15a0:	str	r0, [fp, #-48]	; 0xffffffd0
    15a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15a8:	ldrb	r0, [r0]
    15ac:	cmp	r0, #119	; 0x77
    15b0:	beq	1580 <find_minlength+0x568>
    15b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15b8:	add	r0, r0, #3
    15bc:	str	r0, [fp, #-48]	; 0xffffffd0
    15c0:	b	1f98 <find_minlength+0xf80>
    15c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15c8:	add	r0, r0, #1
    15cc:	str	r0, [fp, #-44]	; 0xffffffd4
    15d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15d4:	add	r0, r0, #2
    15d8:	str	r0, [fp, #-48]	; 0xffffffd0
    15dc:	b	1f98 <find_minlength+0xf80>
    15e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15e4:	add	r0, r0, #1
    15e8:	str	r0, [fp, #-44]	; 0xffffffd4
    15ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15f0:	ldrb	r0, [r0, #1]
    15f4:	cmp	r0, #16
    15f8:	movw	r0, #1
    15fc:	str	r0, [sp, #20]
    1600:	beq	161c <find_minlength+0x604>
    1604:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1608:	ldrb	r0, [r0, #1]
    160c:	cmp	r0, #15
    1610:	movw	r0, #0
    1614:	moveq	r0, #1
    1618:	str	r0, [sp, #20]
    161c:	ldr	r0, [sp, #20]
    1620:	tst	r0, #1
    1624:	movw	r0, #4
    1628:	moveq	r0, #2
    162c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1630:	add	r0, r1, r0
    1634:	str	r0, [fp, #-48]	; 0xffffffd0
    1638:	b	1f98 <find_minlength+0xf80>
    163c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1640:	ldrb	r0, [r0, #1]
    1644:	lsl	r0, r0, #8
    1648:	ldr	r1, [fp, #-48]	; 0xffffffd0
    164c:	ldrb	r1, [r1, #2]
    1650:	orr	r0, r0, r1
    1654:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1658:	add	r0, r1, r0
    165c:	str	r0, [fp, #-44]	; 0xffffffd4
    1660:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1664:	add	r0, r0, #4
    1668:	str	r0, [fp, #-48]	; 0xffffffd0
    166c:	b	1f98 <find_minlength+0xf80>
    1670:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1674:	ldrb	r0, [r0, #1]
    1678:	lsl	r0, r0, #8
    167c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1680:	ldrb	r1, [r1, #2]
    1684:	orr	r0, r0, r1
    1688:	ldr	r1, [fp, #-44]	; 0xffffffd4
    168c:	add	r0, r1, r0
    1690:	str	r0, [fp, #-44]	; 0xffffffd4
    1694:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1698:	ldrb	r0, [r0, #3]
    169c:	cmp	r0, #16
    16a0:	movw	r0, #1
    16a4:	str	r0, [sp, #16]
    16a8:	beq	16c4 <find_minlength+0x6ac>
    16ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16b0:	ldrb	r0, [r0, #3]
    16b4:	cmp	r0, #15
    16b8:	movw	r0, #0
    16bc:	moveq	r0, #1
    16c0:	str	r0, [sp, #16]
    16c4:	ldr	r0, [sp, #16]
    16c8:	tst	r0, #1
    16cc:	movw	r0, #2
    16d0:	moveq	r0, #0
    16d4:	add	r0, r0, #4
    16d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    16dc:	add	r0, r1, r0
    16e0:	str	r0, [fp, #-48]	; 0xffffffd0
    16e4:	b	1f98 <find_minlength+0xf80>
    16e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    16ec:	add	r0, r0, #2
    16f0:	str	r0, [fp, #-48]	; 0xffffffd0
    16f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    16f8:	add	r0, r0, #1
    16fc:	str	r0, [fp, #-44]	; 0xffffffd4
    1700:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1704:	add	r0, r0, #1
    1708:	str	r0, [fp, #-48]	; 0xffffffd0
    170c:	b	1f98 <find_minlength+0xf80>
    1710:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1714:	add	r0, r0, #1
    1718:	str	r0, [fp, #-44]	; 0xffffffd4
    171c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1720:	add	r0, r0, #1
    1724:	str	r0, [fp, #-48]	; 0xffffffd0
    1728:	b	1f98 <find_minlength+0xf80>
    172c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1730:	add	r0, r0, #1
    1734:	str	r0, [fp, #-44]	; 0xffffffd4
    1738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    173c:	add	r0, r0, #1
    1740:	str	r0, [fp, #-48]	; 0xffffffd0
    1744:	b	1f98 <find_minlength+0xf80>
    1748:	ldr	r0, [fp, #-48]	; 0xffffffd0
    174c:	ldrb	r0, [r0, #1]
    1750:	cmp	r0, #16
    1754:	beq	1768 <find_minlength+0x750>
    1758:	ldr	r0, [fp, #-48]	; 0xffffffd0
    175c:	ldrb	r0, [r0, #1]
    1760:	cmp	r0, #15
    1764:	bne	1774 <find_minlength+0x75c>
    1768:	ldr	r0, [fp, #-48]	; 0xffffffd0
    176c:	add	r0, r0, #2
    1770:	str	r0, [fp, #-48]	; 0xffffffd0
    1774:	ldrb	r0, [sp, #55]	; 0x37
    1778:	movw	r1, #0
    177c:	movt	r1, #0
    1780:	add	r0, r1, r0
    1784:	ldrb	r0, [r0]
    1788:	ldr	r1, [fp, #-48]	; 0xffffffd0
    178c:	add	r0, r1, r0
    1790:	str	r0, [fp, #-48]	; 0xffffffd0
    1794:	b	1f98 <find_minlength+0xf80>
    1798:	ldr	r0, [fp, #-48]	; 0xffffffd0
    179c:	ldrb	r0, [r0, #3]
    17a0:	cmp	r0, #16
    17a4:	beq	17b8 <find_minlength+0x7a0>
    17a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17ac:	ldrb	r0, [r0, #3]
    17b0:	cmp	r0, #15
    17b4:	bne	17c4 <find_minlength+0x7ac>
    17b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    17bc:	add	r0, r0, #2
    17c0:	str	r0, [fp, #-48]	; 0xffffffd0
    17c4:	ldrb	r0, [sp, #55]	; 0x37
    17c8:	movw	r1, #0
    17cc:	movt	r1, #0
    17d0:	add	r0, r1, r0
    17d4:	ldrb	r0, [r0]
    17d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17dc:	add	r0, r1, r0
    17e0:	str	r0, [fp, #-48]	; 0xffffffd0
    17e4:	b	1f98 <find_minlength+0xf80>
    17e8:	movw	r0, #0
    17ec:	movt	r0, #0
    17f0:	ldrb	r0, [r0, #110]	; 0x6e
    17f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17f8:	add	r0, r1, r0
    17fc:	str	r0, [fp, #-48]	; 0xffffffd0
    1800:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1804:	ldrb	r0, [r0]
    1808:	sub	r1, r0, #98	; 0x62
    180c:	cmp	r1, #2
    1810:	str	r0, [sp, #12]
    1814:	bcc	18a4 <find_minlength+0x88c>
    1818:	b	181c <find_minlength+0x804>
    181c:	ldr	r0, [sp, #12]
    1820:	sub	r1, r0, #100	; 0x64
    1824:	cmp	r1, #2
    1828:	bcc	1898 <find_minlength+0x880>
    182c:	b	1830 <find_minlength+0x818>
    1830:	ldr	r0, [sp, #12]
    1834:	sub	r1, r0, #102	; 0x66
    1838:	cmp	r1, #2
    183c:	bcc	18a4 <find_minlength+0x88c>
    1840:	b	1844 <find_minlength+0x82c>
    1844:	ldr	r0, [sp, #12]
    1848:	sub	r1, r0, #104	; 0x68
    184c:	cmp	r1, #2
    1850:	bcc	18b4 <find_minlength+0x89c>
    1854:	b	1858 <find_minlength+0x840>
    1858:	ldr	r0, [sp, #12]
    185c:	cmp	r0, #106	; 0x6a
    1860:	beq	18a4 <find_minlength+0x88c>
    1864:	b	1868 <find_minlength+0x850>
    1868:	ldr	r0, [sp, #12]
    186c:	cmp	r0, #107	; 0x6b
    1870:	beq	1898 <find_minlength+0x880>
    1874:	b	1878 <find_minlength+0x860>
    1878:	ldr	r0, [sp, #12]
    187c:	cmp	r0, #108	; 0x6c
    1880:	beq	18a4 <find_minlength+0x88c>
    1884:	b	1888 <find_minlength+0x870>
    1888:	ldr	r0, [sp, #12]
    188c:	cmp	r0, #109	; 0x6d
    1890:	beq	18b4 <find_minlength+0x89c>
    1894:	b	18e8 <find_minlength+0x8d0>
    1898:	ldr	r0, [fp, #-44]	; 0xffffffd4
    189c:	add	r0, r0, #1
    18a0:	str	r0, [fp, #-44]	; 0xffffffd4
    18a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18a8:	add	r0, r0, #1
    18ac:	str	r0, [fp, #-48]	; 0xffffffd0
    18b0:	b	18f4 <find_minlength+0x8dc>
    18b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18b8:	ldrb	r0, [r0, #1]
    18bc:	lsl	r0, r0, #8
    18c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    18c4:	ldrb	r1, [r1, #2]
    18c8:	orr	r0, r0, r1
    18cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    18d0:	add	r0, r1, r0
    18d4:	str	r0, [fp, #-44]	; 0xffffffd4
    18d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    18dc:	add	r0, r0, #5
    18e0:	str	r0, [fp, #-48]	; 0xffffffd0
    18e4:	b	18f4 <find_minlength+0x8dc>
    18e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    18ec:	add	r0, r0, #1
    18f0:	str	r0, [fp, #-44]	; 0xffffffd4
    18f4:	b	1f98 <find_minlength+0xf80>
    18f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    18fc:	and	r0, r0, #33554432	; 0x2000000
    1900:	cmp	r0, #0
    1904:	bne	1b18 <find_minlength+0xb00>
    1908:	ldr	r0, [pc, #1688]	; 1fa8 <find_minlength+0xf90>
    190c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1910:	ldrb	r1, [r1, #3]
    1914:	lsl	r1, r1, #8
    1918:	ldr	r2, [fp, #-48]	; 0xffffffd0
    191c:	ldrb	r2, [r2, #4]
    1920:	orr	r1, r1, r2
    1924:	str	r1, [sp, #48]	; 0x30
    1928:	ldr	r1, [fp, #-8]
    192c:	ldr	r2, [fp, #-8]
    1930:	ldrh	r2, [r2, #34]	; 0x22
    1934:	add	r1, r1, r2
    1938:	ldr	r2, [fp, #-48]	; 0xffffffd0
    193c:	ldrb	r2, [r2, #1]
    1940:	lsl	r2, r2, #8
    1944:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1948:	ldrb	r3, [r3, #2]
    194c:	orr	r2, r2, r3
    1950:	ldr	r3, [fp, #-8]
    1954:	ldrh	r3, [r3, #36]	; 0x24
    1958:	mul	r2, r2, r3
    195c:	add	r1, r1, r2
    1960:	str	r1, [sp, #44]	; 0x2c
    1964:	str	r0, [fp, #-52]	; 0xffffffcc
    1968:	ldr	r0, [sp, #48]	; 0x30
    196c:	mvn	r1, #0
    1970:	add	r1, r0, r1
    1974:	str	r1, [sp, #48]	; 0x30
    1978:	cmp	r0, #0
    197c:	ble	1b14 <find_minlength+0xafc>
    1980:	ldr	r0, [fp, #-16]
    1984:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1988:	ldr	r2, [sp, #44]	; 0x2c
    198c:	ldrb	r2, [r2]
    1990:	lsl	r2, r2, #8
    1994:	ldr	r3, [sp, #44]	; 0x2c
    1998:	ldrb	r3, [r3, #1]
    199c:	orr	r2, r2, r3
    19a0:	bl	0 <coda__pcre_find_bracket>
    19a4:	str	r0, [sp, #60]	; 0x3c
    19a8:	str	r0, [sp, #56]	; 0x38
    19ac:	ldr	r0, [sp, #60]	; 0x3c
    19b0:	movw	r1, #0
    19b4:	cmp	r0, r1
    19b8:	bne	19c8 <find_minlength+0x9b0>
    19bc:	mvn	r0, #1
    19c0:	str	r0, [fp, #-4]
    19c4:	b	1f9c <find_minlength+0xf84>
    19c8:	b	19cc <find_minlength+0x9b4>
    19cc:	ldr	r0, [sp, #56]	; 0x38
    19d0:	ldrb	r0, [r0, #1]
    19d4:	lsl	r0, r0, #8
    19d8:	ldr	r1, [sp, #56]	; 0x38
    19dc:	ldrb	r1, [r1, #2]
    19e0:	orr	r0, r0, r1
    19e4:	ldr	r1, [sp, #56]	; 0x38
    19e8:	add	r0, r1, r0
    19ec:	str	r0, [sp, #56]	; 0x38
    19f0:	ldr	r0, [sp, #56]	; 0x38
    19f4:	ldrb	r0, [r0]
    19f8:	cmp	r0, #119	; 0x77
    19fc:	beq	19cc <find_minlength+0x9b4>
    1a00:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a04:	ldr	r1, [sp, #60]	; 0x3c
    1a08:	cmp	r0, r1
    1a0c:	bls	1a34 <find_minlength+0xa1c>
    1a10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1a14:	ldr	r1, [sp, #56]	; 0x38
    1a18:	cmp	r0, r1
    1a1c:	bcs	1a34 <find_minlength+0xa1c>
    1a20:	movw	r0, #0
    1a24:	str	r0, [fp, #-52]	; 0xffffffcc
    1a28:	movw	r0, #1
    1a2c:	str	r0, [fp, #-32]	; 0xffffffe0
    1a30:	b	1b14 <find_minlength+0xafc>
    1a34:	ldr	r0, [fp, #8]
    1a38:	str	r0, [sp, #40]	; 0x28
    1a3c:	ldr	r0, [fp, #8]
    1a40:	str	r0, [sp, #40]	; 0x28
    1a44:	ldr	r0, [sp, #40]	; 0x28
    1a48:	movw	r1, #0
    1a4c:	cmp	r0, r1
    1a50:	beq	1a80 <find_minlength+0xa68>
    1a54:	ldr	r0, [sp, #40]	; 0x28
    1a58:	ldr	r0, [r0, #4]
    1a5c:	ldr	r1, [sp, #60]	; 0x3c
    1a60:	cmp	r0, r1
    1a64:	bne	1a6c <find_minlength+0xa54>
    1a68:	b	1a80 <find_minlength+0xa68>
    1a6c:	b	1a70 <find_minlength+0xa58>
    1a70:	ldr	r0, [sp, #40]	; 0x28
    1a74:	ldr	r0, [r0]
    1a78:	str	r0, [sp, #40]	; 0x28
    1a7c:	b	1a44 <find_minlength+0xa2c>
    1a80:	ldr	r0, [sp, #40]	; 0x28
    1a84:	movw	r1, #0
    1a88:	cmp	r0, r1
    1a8c:	beq	1aa4 <find_minlength+0xa8c>
    1a90:	movw	r0, #0
    1a94:	str	r0, [fp, #-52]	; 0xffffffcc
    1a98:	movw	r0, #1
    1a9c:	str	r0, [fp, #-32]	; 0xffffffe0
    1aa0:	b	1b14 <find_minlength+0xafc>
    1aa4:	ldr	r0, [fp, #8]
    1aa8:	str	r0, [fp, #-40]	; 0xffffffd8
    1aac:	ldr	r0, [sp, #60]	; 0x3c
    1ab0:	str	r0, [fp, #-36]	; 0xffffffdc
    1ab4:	ldr	r0, [fp, #-8]
    1ab8:	ldr	r1, [sp, #60]	; 0x3c
    1abc:	ldr	r2, [fp, #-16]
    1ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ac4:	ldr	ip, [fp, #12]
    1ac8:	sub	lr, fp, #40	; 0x28
    1acc:	str	lr, [sp]
    1ad0:	str	ip, [sp, #4]
    1ad4:	bl	1018 <find_minlength>
    1ad8:	str	r0, [sp, #36]	; 0x24
    1adc:	ldr	r0, [sp, #36]	; 0x24
    1ae0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1ae4:	cmp	r0, r1
    1ae8:	bge	1af4 <find_minlength+0xadc>
    1aec:	ldr	r0, [sp, #36]	; 0x24
    1af0:	str	r0, [fp, #-52]	; 0xffffffcc
    1af4:	b	1af8 <find_minlength+0xae0>
    1af8:	b	1afc <find_minlength+0xae4>
    1afc:	ldr	r0, [fp, #-8]
    1b00:	ldrh	r0, [r0, #36]	; 0x24
    1b04:	ldr	r1, [sp, #44]	; 0x2c
    1b08:	add	r0, r1, r0
    1b0c:	str	r0, [sp, #44]	; 0x2c
    1b10:	b	1968 <find_minlength+0x950>
    1b14:	b	1b20 <find_minlength+0xb08>
    1b18:	movw	r0, #0
    1b1c:	str	r0, [fp, #-52]	; 0xffffffcc
    1b20:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1b24:	add	r0, r0, #5
    1b28:	str	r0, [fp, #-48]	; 0xffffffd0
    1b2c:	b	1cb8 <find_minlength+0xca0>
    1b30:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b34:	and	r0, r0, #33554432	; 0x2000000
    1b38:	cmp	r0, #0
    1b3c:	bne	1ca4 <find_minlength+0xc8c>
    1b40:	ldr	r0, [fp, #-16]
    1b44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1b48:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1b4c:	ldrb	r2, [r2, #1]
    1b50:	lsl	r2, r2, #8
    1b54:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1b58:	ldrb	r3, [r3, #2]
    1b5c:	orr	r2, r2, r3
    1b60:	bl	0 <coda__pcre_find_bracket>
    1b64:	str	r0, [sp, #60]	; 0x3c
    1b68:	str	r0, [sp, #56]	; 0x38
    1b6c:	ldr	r0, [sp, #60]	; 0x3c
    1b70:	movw	r1, #0
    1b74:	cmp	r0, r1
    1b78:	bne	1b88 <find_minlength+0xb70>
    1b7c:	mvn	r0, #1
    1b80:	str	r0, [fp, #-4]
    1b84:	b	1f9c <find_minlength+0xf84>
    1b88:	b	1b8c <find_minlength+0xb74>
    1b8c:	ldr	r0, [sp, #56]	; 0x38
    1b90:	ldrb	r0, [r0, #1]
    1b94:	lsl	r0, r0, #8
    1b98:	ldr	r1, [sp, #56]	; 0x38
    1b9c:	ldrb	r1, [r1, #2]
    1ba0:	orr	r0, r0, r1
    1ba4:	ldr	r1, [sp, #56]	; 0x38
    1ba8:	add	r0, r1, r0
    1bac:	str	r0, [sp, #56]	; 0x38
    1bb0:	ldr	r0, [sp, #56]	; 0x38
    1bb4:	ldrb	r0, [r0]
    1bb8:	cmp	r0, #119	; 0x77
    1bbc:	beq	1b8c <find_minlength+0xb74>
    1bc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bc4:	ldr	r1, [sp, #60]	; 0x3c
    1bc8:	cmp	r0, r1
    1bcc:	bls	1bf4 <find_minlength+0xbdc>
    1bd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1bd4:	ldr	r1, [sp, #56]	; 0x38
    1bd8:	cmp	r0, r1
    1bdc:	bcs	1bf4 <find_minlength+0xbdc>
    1be0:	movw	r0, #0
    1be4:	str	r0, [fp, #-52]	; 0xffffffcc
    1be8:	movw	r0, #1
    1bec:	str	r0, [fp, #-32]	; 0xffffffe0
    1bf0:	b	1ca0 <find_minlength+0xc88>
    1bf4:	ldr	r0, [fp, #8]
    1bf8:	str	r0, [sp, #32]
    1bfc:	ldr	r0, [fp, #8]
    1c00:	str	r0, [sp, #32]
    1c04:	ldr	r0, [sp, #32]
    1c08:	movw	r1, #0
    1c0c:	cmp	r0, r1
    1c10:	beq	1c40 <find_minlength+0xc28>
    1c14:	ldr	r0, [sp, #32]
    1c18:	ldr	r0, [r0, #4]
    1c1c:	ldr	r1, [sp, #60]	; 0x3c
    1c20:	cmp	r0, r1
    1c24:	bne	1c2c <find_minlength+0xc14>
    1c28:	b	1c40 <find_minlength+0xc28>
    1c2c:	b	1c30 <find_minlength+0xc18>
    1c30:	ldr	r0, [sp, #32]
    1c34:	ldr	r0, [r0]
    1c38:	str	r0, [sp, #32]
    1c3c:	b	1c04 <find_minlength+0xbec>
    1c40:	ldr	r0, [sp, #32]
    1c44:	movw	r1, #0
    1c48:	cmp	r0, r1
    1c4c:	beq	1c64 <find_minlength+0xc4c>
    1c50:	movw	r0, #0
    1c54:	str	r0, [fp, #-52]	; 0xffffffcc
    1c58:	movw	r0, #1
    1c5c:	str	r0, [fp, #-32]	; 0xffffffe0
    1c60:	b	1c9c <find_minlength+0xc84>
    1c64:	ldr	r0, [fp, #8]
    1c68:	str	r0, [fp, #-40]	; 0xffffffd8
    1c6c:	ldr	r0, [sp, #60]	; 0x3c
    1c70:	str	r0, [fp, #-36]	; 0xffffffdc
    1c74:	ldr	r0, [fp, #-8]
    1c78:	ldr	r1, [sp, #60]	; 0x3c
    1c7c:	ldr	r2, [fp, #-16]
    1c80:	ldr	r3, [fp, #-20]	; 0xffffffec
    1c84:	ldr	ip, [fp, #12]
    1c88:	sub	lr, fp, #40	; 0x28
    1c8c:	str	lr, [sp]
    1c90:	str	ip, [sp, #4]
    1c94:	bl	1018 <find_minlength>
    1c98:	str	r0, [fp, #-52]	; 0xffffffcc
    1c9c:	b	1ca0 <find_minlength+0xc88>
    1ca0:	b	1cac <find_minlength+0xc94>
    1ca4:	movw	r0, #0
    1ca8:	str	r0, [fp, #-52]	; 0xffffffcc
    1cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cb0:	add	r0, r0, #3
    1cb4:	str	r0, [fp, #-48]	; 0xffffffd0
    1cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1cbc:	ldrb	r0, [r0]
    1cc0:	sub	r1, r0, #98	; 0x62
    1cc4:	cmp	r1, #2
    1cc8:	str	r0, [sp, #8]
    1ccc:	bcc	1d50 <find_minlength+0xd38>
    1cd0:	b	1cd4 <find_minlength+0xcbc>
    1cd4:	ldr	r0, [sp, #8]
    1cd8:	sub	r1, r0, #100	; 0x64
    1cdc:	cmp	r1, #2
    1ce0:	bcc	1d68 <find_minlength+0xd50>
    1ce4:	b	1ce8 <find_minlength+0xcd0>
    1ce8:	ldr	r0, [sp, #8]
    1cec:	sub	r1, r0, #102	; 0x66
    1cf0:	cmp	r1, #2
    1cf4:	bcc	1d50 <find_minlength+0xd38>
    1cf8:	b	1cfc <find_minlength+0xce4>
    1cfc:	ldr	r0, [sp, #8]
    1d00:	sub	r1, r0, #104	; 0x68
    1d04:	cmp	r1, #2
    1d08:	bcc	1d80 <find_minlength+0xd68>
    1d0c:	b	1d10 <find_minlength+0xcf8>
    1d10:	ldr	r0, [sp, #8]
    1d14:	cmp	r0, #106	; 0x6a
    1d18:	beq	1d50 <find_minlength+0xd38>
    1d1c:	b	1d20 <find_minlength+0xd08>
    1d20:	ldr	r0, [sp, #8]
    1d24:	cmp	r0, #107	; 0x6b
    1d28:	beq	1d68 <find_minlength+0xd50>
    1d2c:	b	1d30 <find_minlength+0xd18>
    1d30:	ldr	r0, [sp, #8]
    1d34:	cmp	r0, #108	; 0x6c
    1d38:	beq	1d50 <find_minlength+0xd38>
    1d3c:	b	1d40 <find_minlength+0xd28>
    1d40:	ldr	r0, [sp, #8]
    1d44:	cmp	r0, #109	; 0x6d
    1d48:	beq	1d80 <find_minlength+0xd68>
    1d4c:	b	1dac <find_minlength+0xd94>
    1d50:	movw	r0, #0
    1d54:	str	r0, [fp, #-56]	; 0xffffffc8
    1d58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d5c:	add	r0, r0, #1
    1d60:	str	r0, [fp, #-48]	; 0xffffffd0
    1d64:	b	1db4 <find_minlength+0xd9c>
    1d68:	movw	r0, #1
    1d6c:	str	r0, [fp, #-56]	; 0xffffffc8
    1d70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d74:	add	r0, r0, #1
    1d78:	str	r0, [fp, #-48]	; 0xffffffd0
    1d7c:	b	1db4 <find_minlength+0xd9c>
    1d80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1d84:	ldrb	r0, [r0, #1]
    1d88:	lsl	r0, r0, #8
    1d8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1d90:	ldrb	r1, [r1, #2]
    1d94:	orr	r0, r0, r1
    1d98:	str	r0, [fp, #-56]	; 0xffffffc8
    1d9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1da0:	add	r0, r0, #5
    1da4:	str	r0, [fp, #-48]	; 0xffffffd0
    1da8:	b	1db4 <find_minlength+0xd9c>
    1dac:	movw	r0, #1
    1db0:	str	r0, [fp, #-56]	; 0xffffffc8
    1db4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1db8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1dbc:	mul	r0, r0, r1
    1dc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1dc4:	add	r0, r1, r0
    1dc8:	str	r0, [fp, #-44]	; 0xffffffd4
    1dcc:	b	1f98 <find_minlength+0xf80>
    1dd0:	ldr	r0, [fp, #-16]
    1dd4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1dd8:	ldrb	r1, [r1, #1]
    1ddc:	lsl	r1, r1, #8
    1de0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1de4:	ldrb	r2, [r2, #2]
    1de8:	orr	r1, r1, r2
    1dec:	add	r0, r0, r1
    1df0:	str	r0, [sp, #56]	; 0x38
    1df4:	str	r0, [sp, #60]	; 0x3c
    1df8:	ldr	r0, [sp, #56]	; 0x38
    1dfc:	ldrb	r0, [r0, #1]
    1e00:	lsl	r0, r0, #8
    1e04:	ldr	r1, [sp, #56]	; 0x38
    1e08:	ldrb	r1, [r1, #2]
    1e0c:	orr	r0, r0, r1
    1e10:	ldr	r1, [sp, #56]	; 0x38
    1e14:	add	r0, r1, r0
    1e18:	str	r0, [sp, #56]	; 0x38
    1e1c:	ldr	r0, [sp, #56]	; 0x38
    1e20:	ldrb	r0, [r0]
    1e24:	cmp	r0, #119	; 0x77
    1e28:	beq	1df8 <find_minlength+0xde0>
    1e2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e30:	ldr	r1, [sp, #60]	; 0x3c
    1e34:	cmp	r0, r1
    1e38:	bls	1e58 <find_minlength+0xe40>
    1e3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1e40:	ldr	r1, [sp, #56]	; 0x38
    1e44:	cmp	r0, r1
    1e48:	bcs	1e58 <find_minlength+0xe40>
    1e4c:	movw	r0, #1
    1e50:	str	r0, [fp, #-32]	; 0xffffffe0
    1e54:	b	1f04 <find_minlength+0xeec>
    1e58:	ldr	r0, [fp, #8]
    1e5c:	str	r0, [sp, #28]
    1e60:	ldr	r0, [fp, #8]
    1e64:	str	r0, [sp, #28]
    1e68:	ldr	r0, [sp, #28]
    1e6c:	movw	r1, #0
    1e70:	cmp	r0, r1
    1e74:	beq	1ea4 <find_minlength+0xe8c>
    1e78:	ldr	r0, [sp, #28]
    1e7c:	ldr	r0, [r0, #4]
    1e80:	ldr	r1, [sp, #60]	; 0x3c
    1e84:	cmp	r0, r1
    1e88:	bne	1e90 <find_minlength+0xe78>
    1e8c:	b	1ea4 <find_minlength+0xe8c>
    1e90:	b	1e94 <find_minlength+0xe7c>
    1e94:	ldr	r0, [sp, #28]
    1e98:	ldr	r0, [r0]
    1e9c:	str	r0, [sp, #28]
    1ea0:	b	1e68 <find_minlength+0xe50>
    1ea4:	ldr	r0, [sp, #28]
    1ea8:	movw	r1, #0
    1eac:	cmp	r0, r1
    1eb0:	beq	1ec0 <find_minlength+0xea8>
    1eb4:	movw	r0, #1
    1eb8:	str	r0, [fp, #-32]	; 0xffffffe0
    1ebc:	b	1f00 <find_minlength+0xee8>
    1ec0:	ldr	r0, [fp, #8]
    1ec4:	str	r0, [fp, #-40]	; 0xffffffd8
    1ec8:	ldr	r0, [sp, #60]	; 0x3c
    1ecc:	str	r0, [fp, #-36]	; 0xffffffdc
    1ed0:	ldr	r0, [fp, #-8]
    1ed4:	ldr	r1, [sp, #60]	; 0x3c
    1ed8:	ldr	r2, [fp, #-16]
    1edc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ee0:	ldr	ip, [fp, #12]
    1ee4:	sub	lr, fp, #40	; 0x28
    1ee8:	str	lr, [sp]
    1eec:	str	ip, [sp, #4]
    1ef0:	bl	1018 <find_minlength>
    1ef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1ef8:	add	r0, r1, r0
    1efc:	str	r0, [fp, #-44]	; 0xffffffd4
    1f00:	b	1f04 <find_minlength+0xeec>
    1f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1f08:	add	r0, r0, #3
    1f0c:	str	r0, [fp, #-48]	; 0xffffffd0
    1f10:	b	1f98 <find_minlength+0xf80>
    1f14:	ldrb	r0, [sp, #55]	; 0x37
    1f18:	movw	r1, #0
    1f1c:	movt	r1, #0
    1f20:	add	r0, r1, r0
    1f24:	ldrb	r0, [r0]
    1f28:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f2c:	add	r0, r1, r0
    1f30:	str	r0, [fp, #-48]	; 0xffffffd0
    1f34:	b	1f98 <find_minlength+0xf80>
    1f38:	ldrb	r0, [sp, #55]	; 0x37
    1f3c:	movw	r1, #0
    1f40:	movt	r1, #0
    1f44:	add	r0, r1, r0
    1f48:	ldrb	r0, [r0]
    1f4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f50:	ldrb	r1, [r1, #1]
    1f54:	add	r0, r0, r1
    1f58:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f5c:	add	r0, r1, r0
    1f60:	str	r0, [fp, #-48]	; 0xffffffd0
    1f64:	b	1f98 <find_minlength+0xf80>
    1f68:	ldrb	r0, [sp, #55]	; 0x37
    1f6c:	movw	r1, #0
    1f70:	movt	r1, #0
    1f74:	add	r0, r1, r0
    1f78:	ldrb	r0, [r0]
    1f7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f80:	add	r0, r1, r0
    1f84:	str	r0, [fp, #-48]	; 0xffffffd0
    1f88:	b	1f98 <find_minlength+0xf80>
    1f8c:	mvn	r0, #2
    1f90:	str	r0, [fp, #-4]
    1f94:	b	1f9c <find_minlength+0xf84>
    1f98:	b	10f0 <find_minlength+0xd8>
    1f9c:	ldr	r0, [fp, #-4]
    1fa0:	mov	sp, fp
    1fa4:	pop	{fp, pc}
    1fa8:	.word	0x7fffffff

00001fac <coda_pcre_free_study>:
    1fac:	push	{fp, lr}
    1fb0:	mov	fp, sp
    1fb4:	sub	sp, sp, #8
    1fb8:	str	r0, [sp, #4]
    1fbc:	ldr	r0, [sp, #4]
    1fc0:	movw	r1, #0
    1fc4:	cmp	r0, r1
    1fc8:	bne	1fd0 <coda_pcre_free_study+0x24>
    1fcc:	b	1ff0 <coda_pcre_free_study+0x44>
    1fd0:	movw	r0, #0
    1fd4:	movt	r0, #0
    1fd8:	ldr	r0, [r0]
    1fdc:	ldr	r1, [sp, #4]
    1fe0:	str	r0, [sp]
    1fe4:	mov	r0, r1
    1fe8:	ldr	r1, [sp]
    1fec:	blx	r1
    1ff0:	mov	sp, fp
    1ff4:	pop	{fp, pc}

00001ff8 <set_table_bit>:
    1ff8:	sub	sp, sp, #20
    1ffc:	ldr	ip, [sp, #20]
    2000:	str	r0, [sp, #16]
    2004:	str	r1, [sp, #12]
    2008:	str	r2, [sp, #8]
    200c:	str	r3, [sp, #4]
    2010:	ldr	r0, [sp, #12]
    2014:	ldrb	r0, [r0]
    2018:	str	r0, [sp]
    201c:	ldr	r0, [sp]
    2020:	and	r1, r0, #7
    2024:	mov	r2, #1
    2028:	lsl	r1, r2, r1
    202c:	ldr	r2, [sp, #16]
    2030:	lsr	r0, r0, #3
    2034:	add	r0, r2, r0
    2038:	ldrb	r2, [r0]
    203c:	orr	r1, r2, r1
    2040:	strb	r1, [r0]
    2044:	ldr	r0, [sp, #8]
    2048:	cmp	r0, #0
    204c:	beq	20c0 <set_table_bit+0xc8>
    2050:	ldr	r0, [sp, #4]
    2054:	ldr	r0, [r0, #12]
    2058:	ldr	r1, [sp]
    205c:	add	r0, r0, r1
    2060:	ldrb	r0, [r0]
    2064:	and	r0, r0, #2
    2068:	cmp	r0, #0
    206c:	beq	20c0 <set_table_bit+0xc8>
    2070:	ldr	r0, [sp, #4]
    2074:	ldr	r0, [r0, #4]
    2078:	ldr	r1, [sp]
    207c:	add	r0, r0, r1
    2080:	ldrb	r0, [r0]
    2084:	and	r0, r0, #7
    2088:	movw	r1, #1
    208c:	lsl	r0, r1, r0
    2090:	ldr	r1, [sp, #16]
    2094:	ldr	r2, [sp, #4]
    2098:	ldr	r2, [r2, #4]
    209c:	ldr	r3, [sp]
    20a0:	add	r2, r2, r3
    20a4:	ldrb	r2, [r2]
    20a8:	movw	r3, #8
    20ac:	sdiv	r2, r2, r3
    20b0:	add	r1, r1, r2
    20b4:	ldrb	r2, [r1]
    20b8:	orr	r0, r2, r0
    20bc:	strb	r0, [r1]
    20c0:	ldr	r0, [sp, #12]
    20c4:	add	r0, r0, #1
    20c8:	add	sp, sp, #20
    20cc:	bx	lr

000020d0 <set_nottype_bits>:
    20d0:	sub	sp, sp, #20
    20d4:	str	r0, [sp, #16]
    20d8:	str	r1, [sp, #12]
    20dc:	str	r2, [sp, #8]
    20e0:	str	r3, [sp, #4]
    20e4:	movw	r0, #0
    20e8:	str	r0, [sp]
    20ec:	ldr	r0, [sp]
    20f0:	ldr	r1, [sp, #8]
    20f4:	cmp	r0, r1
    20f8:	bcs	2148 <set_nottype_bits+0x78>
    20fc:	ldr	r0, [sp, #4]
    2100:	ldr	r0, [r0, #8]
    2104:	ldr	r1, [sp]
    2108:	ldr	r2, [sp, #12]
    210c:	add	r1, r1, r2
    2110:	add	r0, r0, r1
    2114:	ldrb	r0, [r0]
    2118:	mvn	r1, #0
    211c:	eor	r0, r0, r1
    2120:	ldr	r1, [sp, #16]
    2124:	ldr	r2, [sp]
    2128:	add	r1, r1, r2
    212c:	ldrb	r2, [r1]
    2130:	orr	r0, r2, r0
    2134:	strb	r0, [r1]
    2138:	ldr	r0, [sp]
    213c:	add	r0, r0, #1
    2140:	str	r0, [sp]
    2144:	b	20ec <set_nottype_bits+0x1c>
    2148:	add	sp, sp, #20
    214c:	bx	lr

00002150 <set_type_bits>:
    2150:	sub	sp, sp, #20
    2154:	str	r0, [sp, #16]
    2158:	str	r1, [sp, #12]
    215c:	str	r2, [sp, #8]
    2160:	str	r3, [sp, #4]
    2164:	movw	r0, #0
    2168:	str	r0, [sp]
    216c:	ldr	r0, [sp]
    2170:	ldr	r1, [sp, #8]
    2174:	cmp	r0, r1
    2178:	bcs	21c0 <set_type_bits+0x70>
    217c:	ldr	r0, [sp, #4]
    2180:	ldr	r0, [r0, #8]
    2184:	ldr	r1, [sp]
    2188:	ldr	r2, [sp, #12]
    218c:	add	r1, r1, r2
    2190:	add	r0, r0, r1
    2194:	ldrb	r0, [r0]
    2198:	ldr	r1, [sp, #16]
    219c:	ldr	r2, [sp]
    21a0:	add	r1, r1, r2
    21a4:	ldrb	r2, [r1]
    21a8:	orr	r0, r2, r0
    21ac:	strb	r0, [r1]
    21b0:	ldr	r0, [sp]
    21b4:	add	r0, r0, #1
    21b8:	str	r0, [sp]
    21bc:	b	216c <set_type_bits+0x1c>
    21c0:	add	sp, sp, #20
    21c4:	bx	lr
