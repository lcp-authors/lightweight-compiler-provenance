
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/arvores-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4:	add	fp, sp, #24
   8:	sub	sp, sp, #104	; 0x68
   c:	movw	r0, #0
  10:	movt	r0, #0
  14:	bl	0 <puts>
  18:	bl	0 <bst_nova>
  1c:	movw	r1, #0
  20:	mov	r4, r0
  24:	movt	r1, #0
  28:	bl	0 <bst_insere>
  2c:	movw	r1, #0
  30:	mov	r0, r4
  34:	movt	r1, #0
  38:	bl	0 <bst_insere>
  3c:	movw	r1, #0
  40:	mov	r0, r4
  44:	movt	r1, #0
  48:	bl	0 <bst_insere>
  4c:	movw	r1, #0
  50:	mov	r0, r4
  54:	movt	r1, #0
  58:	bl	0 <bst_insere>
  5c:	movw	r1, #0
  60:	mov	r0, r4
  64:	movt	r1, #0
  68:	bl	0 <bst_insere>
  6c:	movw	r1, #0
  70:	mov	r0, r4
  74:	movt	r1, #0
  78:	bl	0 <bst_insere>
  7c:	movw	r1, #0
  80:	mov	r0, r4
  84:	movt	r1, #0
  88:	bl	0 <bst_insere>
  8c:	movw	r1, #0
  90:	mov	r0, r4
  94:	movt	r1, #0
  98:	bl	0 <bst_insere>
  9c:	movw	r1, #0
  a0:	mov	r0, r4
  a4:	movt	r1, #0
  a8:	bl	0 <bst_insere>
  ac:	movw	r1, #0
  b0:	mov	r0, r4
  b4:	movt	r1, #0
  b8:	bl	0 <bst_insere>
  bc:	ldr	r0, [r4]
  c0:	bl	0 <bst_altura>
  c4:	mov	r1, r0
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <printf>
  d4:	mov	r0, r4
  d8:	bl	0 <bst_imprime>
  dc:	movw	r0, #0
  e0:	movt	r0, #0
  e4:	bl	0 <puts>
  e8:	bl	0 <avl_nova>
  ec:	movw	r1, #0
  f0:	mov	r4, r0
  f4:	movw	r0, #0
  f8:	movt	r0, #0
  fc:	movt	r1, #0
 100:	bl	0 <fopen>
 104:	mov	r5, r0
 108:	add	r6, sp, #4
 10c:	mov	r1, #100	; 0x64
 110:	mov	r0, r6
 114:	mov	r2, r5
 118:	bl	0 <fgets_unlocked>
 11c:	cmp	r0, #0
 120:	beq	190 <main+0x190>
 124:	movw	r7, #0
 128:	mov	r8, #0
 12c:	movt	r7, #0
 130:	mov	r0, r6
 134:	mov	r1, r7
 138:	bl	0 <strtok>
 13c:	mov	r1, r0
 140:	mov	r0, r6
 144:	bl	0 <strcpy>
 148:	mov	r0, #0
 14c:	mov	r1, r7
 150:	bl	0 <strtok>
 154:	mov	r1, r0
 158:	mov	r0, r6
 15c:	bl	0 <strcpy>
 160:	bl	0 <strlen>
 164:	add	r0, r0, r6
 168:	mov	r1, r6
 16c:	strb	r8, [r0, #-1]
 170:	mov	r0, r4
 174:	bl	0 <avl_insere>
 178:	mov	r0, r6
 17c:	mov	r1, #100	; 0x64
 180:	mov	r2, r5
 184:	bl	0 <fgets_unlocked>
 188:	cmp	r0, #0
 18c:	bne	130 <main+0x130>
 190:	mov	r0, r5
 194:	bl	0 <fclose>
 198:	movw	r1, #0
 19c:	mov	r0, r4
 1a0:	movt	r1, #0
 1a4:	bl	0 <avl_pesquisa>
 1a8:	cmp	r0, #0
 1ac:	beq	1c4 <main+0x1c4>
 1b0:	ldr	r1, [r0]
 1b4:	ldr	r2, [r0, #16]
 1b8:	movw	r0, #0
 1bc:	movt	r0, #0
 1c0:	bl	0 <printf>
 1c4:	movw	r1, #0
 1c8:	mov	r0, r4
 1cc:	movt	r1, #0
 1d0:	bl	0 <avl_pesquisa>
 1d4:	cmp	r0, #0
 1d8:	beq	1f0 <main+0x1f0>
 1dc:	ldr	r1, [r0]
 1e0:	ldr	r2, [r0, #16]
 1e4:	movw	r0, #0
 1e8:	movt	r0, #0
 1ec:	bl	0 <printf>
 1f0:	movw	r1, #0
 1f4:	mov	r0, r4
 1f8:	movt	r1, #0
 1fc:	bl	0 <avl_pesquisa>
 200:	cmp	r0, #0
 204:	beq	21c <main+0x21c>
 208:	ldr	r1, [r0]
 20c:	ldr	r2, [r0, #16]
 210:	movw	r0, #0
 214:	movt	r0, #0
 218:	bl	0 <printf>
 21c:	mov	r0, #0
 220:	sub	sp, fp, #24
 224:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
