
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_printer.dir/test_json_printer.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_printer_get_error>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldr	r0, [r0, #36]	; 0x24
      14:	ldr	lr, [sp, #4]
      18:	add	sp, sp, #8
      1c:	bx	lr

00000020 <flatcc_json_printer_set_unquoted>:
      20:	mov	ip, sp
      24:	sub	sp, sp, #8
      28:	str	ip, [sp]
      2c:	str	lr, [sp, #4]
      30:	cmp	r1, #0
      34:	movne	r1, #1
      38:	moveq	r1, #0
      3c:	and	r1, r1, #255	; 0xff
      40:	strb	r1, [r0, #26]
      44:	ldr	lr, [sp, #4]
      48:	add	sp, sp, #8
      4c:	bx	lr

00000050 <flatcc_json_printer_set_noenum>:
      50:	mov	ip, sp
      54:	sub	sp, sp, #8
      58:	str	ip, [sp]
      5c:	str	lr, [sp, #4]
      60:	cmp	r1, #0
      64:	movne	r1, #1
      68:	moveq	r1, #0
      6c:	and	r1, r1, #255	; 0xff
      70:	strb	r1, [r0, #27]
      74:	ldr	lr, [sp, #4]
      78:	add	sp, sp, #8
      7c:	bx	lr

00000080 <flatcc_json_printer_set_indent>:
      80:	mov	ip, sp
      84:	sub	sp, sp, #8
      88:	str	ip, [sp]
      8c:	str	lr, [sp, #4]
      90:	and	r1, r1, #255	; 0xff
      94:	strb	r1, [r0, #25]
      98:	ldr	lr, [sp, #4]
      9c:	add	sp, sp, #8
      a0:	bx	lr

000000a4 <flatcc_json_printer_set_nonstrict>:
      a4:	mov	ip, sp
      a8:	sub	sp, sp, #16
      ac:	str	ip, [sp]
      b0:	str	lr, [sp, #4]
      b4:	str	r4, [sp, #8]
      b8:	mov	r4, r0
      bc:	mov	r1, #2
      c0:	mov	r0, r4
      c4:	bl	80 <flatcc_json_printer_set_indent>
      c8:	mov	r1, #1
      cc:	mov	r0, r4
      d0:	bl	20 <flatcc_json_printer_set_unquoted>
      d4:	mov	r1, #0
      d8:	mov	r0, r4
      dc:	bl	50 <flatcc_json_printer_set_noenum>
      e0:	ldr	r4, [sp, #8]
      e4:	ldr	lr, [sp, #4]
      e8:	add	sp, sp, #16
      ec:	bx	lr

000000f0 <flatcc_json_printer_total>:
      f0:	mov	ip, sp
      f4:	sub	sp, sp, #8
      f8:	str	ip, [sp]
      fc:	str	lr, [sp, #4]
     100:	ldr	r3, [r0, #12]
     104:	ldr	r1, [r0, #20]
     108:	ldr	r2, [r0]
     10c:	sub	r2, r1, r2
     110:	add	r0, r3, r2
     114:	ldr	lr, [sp, #4]
     118:	add	sp, sp, #8
     11c:	bx	lr

00000120 <flatcc_json_printer_flush>:
     120:	mov	ip, sp
     124:	sub	sp, sp, #16
     128:	str	ip, [sp]
     12c:	str	lr, [sp, #4]
     130:	str	r4, [sp, #8]
     134:	mov	r4, r0
     138:	ldr	ip, [r4, #44]	; 0x2c
     13c:	mov	r1, #1
     140:	mov	r0, r4
     144:	blx	ip
     148:	mov	r0, r4
     14c:	bl	f0 <flatcc_json_printer_total>
     150:	ldr	r4, [sp, #8]
     154:	ldr	lr, [sp, #4]
     158:	add	sp, sp, #16
     15c:	bx	lr

00000160 <MyGame_Example_Color_print_json_enum>:
     160:	mov	ip, sp
     164:	sub	sp, sp, #24
     168:	str	ip, [sp]
     16c:	str	lr, [sp, #4]
     170:	str	r4, [sp, #8]
     174:	str	r5, [sp, #12]
     178:	str	r6, [sp, #16]
     17c:	str	r7, [sp, #20]
     180:	mov	r5, r0
     184:	and	r7, r1, #255	; 0xff
     188:	sub	r3, r7, #1
     18c:	and	r2, r7, r3
     190:	cmp	r2, #0
     194:	movne	r4, #1
     198:	moveq	r4, #0
     19c:	mov	r6, #0
     1a0:	and	r2, r7, #244	; 0xf4
     1a4:	cmp	r2, #0
     1a8:	bne	1bc <MyGame_Example_Color_print_json_enum+0x5c>
     1ac:	cmp	r7, #0
     1b0:	moveq	r0, #1
     1b4:	movne	r0, #0
     1b8:	b	1c0 <MyGame_Example_Color_print_json_enum+0x60>
     1bc:	mov	r0, #1
     1c0:	cmp	r0, #0
     1c4:	beq	1d8 <MyGame_Example_Color_print_json_enum+0x78>
     1c8:	sbfx	r1, r1, #0, #8
     1cc:	mov	r0, r5
     1d0:	bl	0 <flatcc_json_printer_int8>
     1d4:	b	258 <MyGame_Example_Color_print_json_enum+0xf8>
     1d8:	mov	r1, r4
     1dc:	mov	r0, r5
     1e0:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     1e4:	and	r1, r7, #1
     1e8:	cmp	r1, #0
     1ec:	beq	208 <MyGame_Example_Color_print_json_enum+0xa8>
     1f0:	mov	r1, r6
     1f4:	add	r6, r1, #1
     1f8:	ldr	r2, [pc, #120]	; 278 <MyGame_Example_Color_print_json_enum+0x118>
     1fc:	mov	r3, #3
     200:	mov	r0, r5
     204:	bl	0 <flatcc_json_printer_enum_flag>
     208:	and	r0, r7, #2
     20c:	cmp	r0, #0
     210:	beq	22c <MyGame_Example_Color_print_json_enum+0xcc>
     214:	mov	r1, r6
     218:	add	r6, r1, #1
     21c:	ldr	r2, [pc, #88]	; 27c <MyGame_Example_Color_print_json_enum+0x11c>
     220:	mov	r3, #5
     224:	mov	r0, r5
     228:	bl	0 <flatcc_json_printer_enum_flag>
     22c:	and	r1, r7, #8
     230:	cmp	r1, #0
     234:	beq	24c <MyGame_Example_Color_print_json_enum+0xec>
     238:	ldr	r2, [pc, #52]	; 274 <MyGame_Example_Color_print_json_enum+0x114>
     23c:	mov	r3, #4
     240:	mov	r1, r6
     244:	mov	r0, r5
     248:	bl	0 <flatcc_json_printer_enum_flag>
     24c:	mov	r1, r4
     250:	mov	r0, r5
     254:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     258:	ldr	r4, [sp, #8]
     25c:	ldr	r5, [sp, #12]
     260:	ldr	r6, [sp, #16]
     264:	ldr	r7, [sp, #20]
     268:	ldr	lr, [sp, #4]
     26c:	add	sp, sp, #24
     270:	bx	lr
     274:	.word	0x00000064
     278:	.word	0x000003f1
     27c:	.word	0x0000005e

00000280 <MyGame_Example_Any_print_json_union_type>:
     280:	mov	ip, sp
     284:	sub	sp, sp, #8
     288:	str	ip, [sp]
     28c:	str	lr, [sp, #4]
     290:	cmp	r1, #3
     294:	bcs	2c8 <MyGame_Example_Any_print_json_union_type+0x48>
     298:	cmp	r1, #1
     29c:	beq	2b8 <MyGame_Example_Any_print_json_union_type+0x38>
     2a0:	cmp	r1, #2
     2a4:	bne	2e8 <MyGame_Example_Any_print_json_union_type+0x68>
     2a8:	ldr	r1, [pc, #108]	; 31c <MyGame_Example_Any_print_json_union_type+0x9c>
     2ac:	mov	r2, #23
     2b0:	bl	0 <flatcc_json_printer_enum>
     2b4:	b	304 <MyGame_Example_Any_print_json_union_type+0x84>
     2b8:	ldr	r1, [pc, #80]	; 310 <MyGame_Example_Any_print_json_union_type+0x90>
     2bc:	mov	r2, #7
     2c0:	bl	0 <flatcc_json_printer_enum>
     2c4:	b	304 <MyGame_Example_Any_print_json_union_type+0x84>
     2c8:	cmp	r1, #3
     2cc:	beq	2f8 <MyGame_Example_Any_print_json_union_type+0x78>
     2d0:	cmp	r1, #4
     2d4:	bne	2e8 <MyGame_Example_Any_print_json_union_type+0x68>
     2d8:	ldr	r1, [pc, #64]	; 320 <MyGame_Example_Any_print_json_union_type+0xa0>
     2dc:	mov	r2, #3
     2e0:	bl	0 <flatcc_json_printer_enum>
     2e4:	b	304 <MyGame_Example_Any_print_json_union_type+0x84>
     2e8:	ldr	r1, [pc, #40]	; 318 <MyGame_Example_Any_print_json_union_type+0x98>
     2ec:	mov	r2, #4
     2f0:	bl	0 <flatcc_json_printer_enum>
     2f4:	b	304 <MyGame_Example_Any_print_json_union_type+0x84>
     2f8:	ldr	r1, [pc, #20]	; 314 <MyGame_Example_Any_print_json_union_type+0x94>
     2fc:	mov	r2, #8
     300:	bl	0 <flatcc_json_printer_enum>
     304:	ldr	lr, [sp, #4]
     308:	add	sp, sp, #8
     30c:	bx	lr
     310:	.word	0x000003f5
     314:	.word	0x0000035c
     318:	.word	0x00000105
     31c:	.word	0x000002ff
     320:	.word	0x00000193

00000324 <MyGame_Example_Any_print_json_union>:
     324:	mov	ip, sp
     328:	sub	sp, sp, #8
     32c:	str	ip, [sp]
     330:	str	lr, [sp, #4]
     334:	ldrb	ip, [r1, #8]
     338:	cmp	ip, #3
     33c:	bcs	368 <MyGame_Example_Any_print_json_union+0x44>
     340:	cmp	ip, #1
     344:	beq	35c <MyGame_Example_Any_print_json_union+0x38>
     348:	cmp	ip, #2
     34c:	bne	38c <MyGame_Example_Any_print_json_union+0x68>
     350:	ldr	r2, [pc, #72]	; 3a0 <MyGame_Example_Any_print_json_union+0x7c>
     354:	bl	0 <flatcc_json_printer_union_table>
     358:	b	38c <MyGame_Example_Any_print_json_union+0x68>
     35c:	ldr	r2, [pc, #56]	; 39c <MyGame_Example_Any_print_json_union+0x78>
     360:	bl	0 <flatcc_json_printer_union_table>
     364:	b	38c <MyGame_Example_Any_print_json_union+0x68>
     368:	cmp	ip, #3
     36c:	beq	384 <MyGame_Example_Any_print_json_union+0x60>
     370:	cmp	ip, #4
     374:	bne	38c <MyGame_Example_Any_print_json_union+0x68>
     378:	ldr	r2, [pc, #36]	; 3a4 <MyGame_Example_Any_print_json_union+0x80>
     37c:	bl	0 <flatcc_json_printer_union_table>
     380:	b	38c <MyGame_Example_Any_print_json_union+0x68>
     384:	ldr	r2, [pc, #12]	; 398 <MyGame_Example_Any_print_json_union+0x74>
     388:	bl	0 <flatcc_json_printer_union_table>
     38c:	ldr	lr, [sp, #4]
     390:	add	sp, sp, #8
     394:	bx	lr
	...

000003a8 <Fantasy_Character_print_json_union_type>:
     3a8:	mov	ip, sp
     3ac:	sub	sp, sp, #8
     3b0:	str	ip, [sp]
     3b4:	str	lr, [sp, #4]
     3b8:	cmp	r1, #10
     3bc:	bcs	408 <Fantasy_Character_print_json_union_type+0x60>
     3c0:	cmp	r1, #2
     3c4:	beq	3f8 <Fantasy_Character_print_json_union_type+0x50>
     3c8:	cmp	r1, #8
     3cc:	beq	3e8 <Fantasy_Character_print_json_union_type+0x40>
     3d0:	cmp	r1, #9
     3d4:	bne	430 <Fantasy_Character_print_json_union_type+0x88>
     3d8:	ldr	r1, [pc, #156]	; 47c <Fantasy_Character_print_json_union_type+0xd4>
     3dc:	mov	r2, #5
     3e0:	bl	0 <flatcc_json_printer_enum>
     3e4:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     3e8:	ldr	r1, [pc, #124]	; 46c <Fantasy_Character_print_json_union_type+0xc4>
     3ec:	mov	r2, #8
     3f0:	bl	0 <flatcc_json_printer_enum>
     3f4:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     3f8:	ldr	r1, [pc, #104]	; 468 <Fantasy_Character_print_json_union_type+0xc0>
     3fc:	mov	r2, #5
     400:	bl	0 <flatcc_json_printer_enum>
     404:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     408:	cmp	r1, #10
     40c:	beq	450 <Fantasy_Character_print_json_union_type+0xa8>
     410:	cmp	r1, #11
     414:	beq	440 <Fantasy_Character_print_json_union_type+0x98>
     418:	cmp	r1, #255	; 0xff
     41c:	bne	430 <Fantasy_Character_print_json_union_type+0x88>
     420:	ldr	r1, [pc, #76]	; 474 <Fantasy_Character_print_json_union_type+0xcc>
     424:	mov	r2, #6
     428:	bl	0 <flatcc_json_printer_enum>
     42c:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     430:	ldr	r1, [pc, #56]	; 470 <Fantasy_Character_print_json_union_type+0xc8>
     434:	mov	r2, #4
     438:	bl	0 <flatcc_json_printer_enum>
     43c:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     440:	ldr	r1, [pc, #56]	; 480 <Fantasy_Character_print_json_union_type+0xd8>
     444:	mov	r2, #5
     448:	bl	0 <flatcc_json_printer_enum>
     44c:	b	45c <Fantasy_Character_print_json_union_type+0xb4>
     450:	ldr	r1, [pc, #32]	; 478 <Fantasy_Character_print_json_union_type+0xd0>
     454:	mov	r2, #7
     458:	bl	0 <flatcc_json_printer_enum>
     45c:	ldr	lr, [sp, #4]
     460:	add	sp, sp, #8
     464:	bx	lr
     468:	.word	0x000004a8
     46c:	.word	0x00000021
     470:	.word	0x00000105
     474:	.word	0x00000324
     478:	.word	0x000005a1
     47c:	.word	0x00000197
     480:	.word	0x00000572

00000484 <Fantasy_Character_print_json_union>:
     484:	mov	ip, sp
     488:	sub	sp, sp, #8
     48c:	str	ip, [sp]
     490:	str	lr, [sp, #4]
     494:	ldrb	ip, [r1, #8]
     498:	cmp	ip, #10
     49c:	bcs	4dc <Fantasy_Character_print_json_union+0x58>
     4a0:	cmp	ip, #2
     4a4:	beq	4d0 <Fantasy_Character_print_json_union+0x4c>
     4a8:	cmp	ip, #8
     4ac:	beq	4c4 <Fantasy_Character_print_json_union+0x40>
     4b0:	cmp	ip, #9
     4b4:	bne	50c <Fantasy_Character_print_json_union+0x88>
     4b8:	ldr	r2, [pc, #96]	; 520 <Fantasy_Character_print_json_union+0x9c>
     4bc:	bl	0 <flatcc_json_printer_union_struct>
     4c0:	b	50c <Fantasy_Character_print_json_union+0x88>
     4c4:	ldr	r2, [pc, #80]	; 51c <Fantasy_Character_print_json_union+0x98>
     4c8:	bl	0 <flatcc_json_printer_union_struct>
     4cc:	b	50c <Fantasy_Character_print_json_union+0x88>
     4d0:	ldr	r2, [pc, #64]	; 518 <Fantasy_Character_print_json_union+0x94>
     4d4:	bl	0 <flatcc_json_printer_union_table>
     4d8:	b	50c <Fantasy_Character_print_json_union+0x88>
     4dc:	cmp	ip, #10
     4e0:	beq	504 <Fantasy_Character_print_json_union+0x80>
     4e4:	cmp	ip, #11
     4e8:	beq	4fc <Fantasy_Character_print_json_union+0x78>
     4ec:	cmp	ip, #255	; 0xff
     4f0:	bne	50c <Fantasy_Character_print_json_union+0x88>
     4f4:	bl	0 <flatcc_json_printer_union_string>
     4f8:	b	50c <Fantasy_Character_print_json_union+0x88>
     4fc:	bl	0 <flatcc_json_printer_union_string>
     500:	b	50c <Fantasy_Character_print_json_union+0x88>
     504:	ldr	r2, [pc, #20]	; 520 <Fantasy_Character_print_json_union+0x9c>
     508:	bl	0 <flatcc_json_printer_union_struct>
     50c:	ldr	lr, [sp, #4]
     510:	add	sp, sp, #8
     514:	bx	lr
	...

00000524 <MyGame_Example_Test_print_json_struct>:
     524:	mov	ip, sp
     528:	sub	sp, sp, #24
     52c:	str	ip, [sp, #8]
     530:	str	lr, [sp, #12]
     534:	str	r4, [sp, #16]
     538:	str	r5, [sp, #20]
     53c:	mov	r4, r1
     540:	mov	r5, r0
     544:	mov	r1, #0
     548:	mov	r3, #0
     54c:	ldr	r0, [pc, #80]	; 5a4 <MyGame_Example_Test_print_json_struct+0x80>
     550:	mov	r2, #1
     554:	str	r2, [sp, #4]
     558:	str	r0, [sp]
     55c:	mov	r2, r4
     560:	mov	r0, r5
     564:	bl	0 <flatcc_json_printer_int16_struct_field>
     568:	mov	r1, #1
     56c:	mov	r3, #2
     570:	ldr	r0, [pc, #40]	; 5a0 <MyGame_Example_Test_print_json_struct+0x7c>
     574:	mov	r2, #1
     578:	str	r2, [sp, #4]
     57c:	str	r0, [sp]
     580:	mov	r2, r4
     584:	mov	r0, r5
     588:	bl	0 <flatcc_json_printer_int8_struct_field>
     58c:	ldr	r4, [sp, #16]
     590:	ldr	r5, [sp, #20]
     594:	ldr	lr, [sp, #12]
     598:	add	sp, sp, #24
     59c:	bx	lr
     5a0:	.word	0x000001b8
     5a4:	.word	0x00000578

000005a8 <MyGame_Example_Vec3_print_json_struct>:
     5a8:	mov	ip, sp
     5ac:	sub	sp, sp, #40	; 0x28
     5b0:	str	ip, [sp, #12]
     5b4:	str	lr, [sp, #16]
     5b8:	str	r4, [sp, #24]
     5bc:	str	r5, [sp, #28]
     5c0:	str	r6, [sp, #32]
     5c4:	mov	r4, r1
     5c8:	mov	r5, r0
     5cc:	mov	r1, #0
     5d0:	mov	r3, #0
     5d4:	ldr	r0, [pc, #264]	; 6e4 <MyGame_Example_Vec3_print_json_struct+0x13c>
     5d8:	mov	r2, #1
     5dc:	str	r2, [sp, #4]
     5e0:	str	r0, [sp]
     5e4:	mov	r2, r4
     5e8:	mov	r0, r5
     5ec:	bl	0 <flatcc_json_printer_float_struct_field>
     5f0:	mov	r1, #1
     5f4:	mov	r3, #4
     5f8:	ldr	r0, [pc, #220]	; 6dc <MyGame_Example_Vec3_print_json_struct+0x134>
     5fc:	mov	r2, #1
     600:	str	r2, [sp, #4]
     604:	str	r0, [sp]
     608:	mov	r2, r4
     60c:	mov	r0, r5
     610:	bl	0 <flatcc_json_printer_float_struct_field>
     614:	mov	r1, #2
     618:	mov	r3, #8
     61c:	ldr	r0, [pc, #180]	; 6d8 <MyGame_Example_Vec3_print_json_struct+0x130>
     620:	mov	r2, #1
     624:	str	r2, [sp, #4]
     628:	str	r0, [sp]
     62c:	mov	r2, r4
     630:	mov	r0, r5
     634:	bl	0 <flatcc_json_printer_float_struct_field>
     638:	mov	r1, #3
     63c:	mov	r3, #16
     640:	ldr	r0, [pc, #160]	; 6e8 <MyGame_Example_Vec3_print_json_struct+0x140>
     644:	mov	r2, #5
     648:	str	r2, [sp, #4]
     64c:	str	r0, [sp]
     650:	mov	r2, r4
     654:	mov	r0, r5
     658:	bl	0 <flatcc_json_printer_double_struct_field>
     65c:	mov	r1, #4
     660:	mov	r3, #24
     664:	ldr	r6, [pc, #100]	; 6d0 <MyGame_Example_Vec3_print_json_struct+0x128>
     668:	mov	r0, #5
     66c:	ldr	r2, [pc, #108]	; 6e0 <MyGame_Example_Vec3_print_json_struct+0x138>
     670:	str	r2, [sp, #8]
     674:	str	r0, [sp, #4]
     678:	str	r6, [sp]
     67c:	mov	r2, r4
     680:	mov	r0, r5
     684:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
     688:	mov	r1, #5
     68c:	mov	r3, #26
     690:	ldr	r2, [pc, #60]	; 6d4 <MyGame_Example_Vec3_print_json_struct+0x12c>
     694:	mov	r6, #5
     698:	ldr	r0, [pc, #44]	; 6cc <MyGame_Example_Vec3_print_json_struct+0x124>
     69c:	str	r0, [sp, #8]
     6a0:	str	r6, [sp, #4]
     6a4:	str	r2, [sp]
     6a8:	mov	r2, r4
     6ac:	mov	r0, r5
     6b0:	bl	0 <flatcc_json_printer_embedded_struct_field>
     6b4:	ldr	r4, [sp, #24]
     6b8:	ldr	r5, [sp, #28]
     6bc:	ldr	r6, [sp, #32]
     6c0:	ldr	lr, [sp, #16]
     6c4:	add	sp, sp, #40	; 0x28
     6c8:	bx	lr
     6cc:	.word	0x00000000
     6d0:	.word	0x0000057a
     6d4:	.word	0x000000ff
     6d8:	.word	0x000001f0
     6dc:	.word	0x0000009d
     6e0:	.word	0x00000000
     6e4:	.word	0x00000074
     6e8:	.word	0x000001b2

000006ec <MyGame_Example_Ability_print_json_struct>:
     6ec:	mov	ip, sp
     6f0:	sub	sp, sp, #24
     6f4:	str	ip, [sp, #8]
     6f8:	str	lr, [sp, #12]
     6fc:	str	r4, [sp, #16]
     700:	str	r5, [sp, #20]
     704:	mov	r4, r1
     708:	mov	r5, r0
     70c:	mov	r1, #0
     710:	mov	r3, #0
     714:	ldr	r0, [pc, #80]	; 76c <MyGame_Example_Ability_print_json_struct+0x80>
     718:	mov	r2, #2
     71c:	str	r2, [sp, #4]
     720:	str	r0, [sp]
     724:	mov	r2, r4
     728:	mov	r0, r5
     72c:	bl	0 <flatcc_json_printer_uint32_struct_field>
     730:	mov	r1, #1
     734:	mov	r3, #4
     738:	ldr	r0, [pc, #40]	; 768 <MyGame_Example_Ability_print_json_struct+0x7c>
     73c:	mov	r2, #8
     740:	str	r2, [sp, #4]
     744:	str	r0, [sp]
     748:	mov	r2, r4
     74c:	mov	r0, r5
     750:	bl	0 <flatcc_json_printer_uint32_struct_field>
     754:	ldr	r4, [sp, #16]
     758:	ldr	r5, [sp, #20]
     75c:	ldr	lr, [sp, #12]
     760:	add	sp, sp, #24
     764:	bx	lr
     768:	.word	0x0000013e
     76c:	.word	0x00000365

00000770 <Fantasy_Rapunzel_print_json_struct>:
     770:	mov	ip, sp
     774:	sub	sp, sp, #24
     778:	str	ip, [sp, #8]
     77c:	str	lr, [sp, #12]
     780:	str	r4, [sp, #16]
     784:	str	r5, [sp, #20]
     788:	mov	r2, #0
     78c:	mov	r3, #0
     790:	ldr	r4, [pc, #44]	; 7c4 <Fantasy_Rapunzel_print_json_struct+0x54>
     794:	mov	r5, #11
     798:	str	r5, [sp, #4]
     79c:	str	r4, [sp]
     7a0:	mov	ip, r1
     7a4:	mov	r1, r2
     7a8:	mov	r2, ip
     7ac:	bl	0 <flatcc_json_printer_uint16_struct_field>
     7b0:	ldr	r4, [sp, #16]
     7b4:	ldr	r5, [sp, #20]
     7b8:	ldr	lr, [sp, #12]
     7bc:	add	sp, sp, #24
     7c0:	bx	lr
     7c4:	.word	0x000001ba

000007c8 <Fantasy_BookReader_print_json_struct>:
     7c8:	mov	ip, sp
     7cc:	sub	sp, sp, #24
     7d0:	str	ip, [sp, #8]
     7d4:	str	lr, [sp, #12]
     7d8:	str	r4, [sp, #16]
     7dc:	str	r5, [sp, #20]
     7e0:	mov	r2, #0
     7e4:	mov	r3, #0
     7e8:	ldr	r4, [pc, #44]	; 81c <Fantasy_BookReader_print_json_struct+0x54>
     7ec:	mov	r5, #10
     7f0:	str	r5, [sp, #4]
     7f4:	str	r4, [sp]
     7f8:	mov	ip, r1
     7fc:	mov	r1, r2
     800:	mov	r2, ip
     804:	bl	0 <flatcc_json_printer_int32_struct_field>
     808:	ldr	r4, [sp, #16]
     80c:	ldr	r5, [sp, #20]
     810:	ldr	lr, [sp, #12]
     814:	add	sp, sp, #24
     818:	bx	lr
     81c:	.word	0x0000010a

00000820 <MyGame_InParentNamespace_print_json_table>:
     820:	mov	ip, sp
     824:	sub	sp, sp, #8
     828:	str	ip, [sp]
     82c:	str	lr, [sp, #4]
     830:	ldr	lr, [sp, #4]
     834:	add	sp, sp, #8
     838:	bx	lr

0000083c <MyGame_Example2_Monster_print_json_table>:
     83c:	mov	ip, sp
     840:	sub	sp, sp, #8
     844:	str	ip, [sp]
     848:	str	lr, [sp, #4]
     84c:	ldr	lr, [sp, #4]
     850:	add	sp, sp, #8
     854:	bx	lr

00000858 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
     858:	mov	ip, sp
     85c:	sub	sp, sp, #32
     860:	str	ip, [sp, #12]
     864:	str	lr, [sp, #16]
     868:	str	r4, [sp, #24]
     86c:	str	r5, [sp, #28]
     870:	mov	r4, r1
     874:	mov	r5, r0
     878:	mov	r2, #0
     87c:	ldr	r3, [pc, #184]	; 93c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe4>
     880:	mov	ip, #5
     884:	mov	r1, #2
     888:	ldr	r0, [pc, #164]	; 934 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xdc>
     88c:	str	r0, [sp, #8]
     890:	str	r1, [sp, #4]
     894:	str	ip, [sp]
     898:	mov	r1, r4
     89c:	mov	r0, r5
     8a0:	bl	0 <flatcc_json_printer_int8_enum_field>
     8a4:	mov	r2, #1
     8a8:	ldr	r3, [pc, #128]	; 930 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd8>
     8ac:	mov	r0, #6
     8b0:	mov	ip, #2
     8b4:	ldr	r1, [pc, #120]	; 934 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xdc>
     8b8:	str	r1, [sp, #8]
     8bc:	str	ip, [sp, #4]
     8c0:	str	r0, [sp]
     8c4:	mov	r1, r4
     8c8:	mov	r0, r5
     8cc:	bl	0 <flatcc_json_printer_int8_enum_field>
     8d0:	mov	r2, #2
     8d4:	ldr	r3, [pc, #80]	; 92c <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd4>
     8d8:	mov	ip, #2
     8dc:	mov	r0, #2
     8e0:	str	r0, [sp, #4]
     8e4:	str	ip, [sp]
     8e8:	mov	r1, r4
     8ec:	mov	r0, r5
     8f0:	bl	0 <flatcc_json_printer_uint8_field>
     8f4:	mov	r2, #3
     8f8:	ldr	r3, [pc, #56]	; 938 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe0>
     8fc:	mov	ip, #3
     900:	mov	r1, #2
     904:	str	r1, [sp, #4]
     908:	str	ip, [sp]
     90c:	mov	r1, r4
     910:	mov	r0, r5
     914:	bl	0 <flatcc_json_printer_uint8_field>
     918:	ldr	r4, [sp, #24]
     91c:	ldr	r5, [sp, #28]
     920:	ldr	lr, [sp, #16]
     924:	add	sp, sp, #32
     928:	bx	lr
     92c:	.word	0x00000054
     930:	.word	0x00000317
     934:	.word	0x00000000
     938:	.word	0x000002ab
     93c:	.word	0x00000356

00000940 <MyGame_Example_Stat_print_json_table>:
     940:	mov	ip, sp
     944:	sub	sp, sp, #32
     948:	str	ip, [sp, #16]
     94c:	str	lr, [sp, #20]
     950:	str	r4, [sp, #24]
     954:	str	r5, [sp, #28]
     958:	mov	r4, r1
     95c:	mov	r5, r0
     960:	mov	r2, #0
     964:	ldr	r3, [pc, #124]	; 9e8 <MyGame_Example_Stat_print_json_table+0xa8>
     968:	mov	r1, #2
     96c:	str	r1, [sp]
     970:	mov	r1, r4
     974:	mov	r0, r5
     978:	bl	0 <flatcc_json_printer_string_field>
     97c:	mov	r2, #1
     980:	ldr	r3, [pc, #88]	; 9e0 <MyGame_Example_Stat_print_json_table+0xa0>
     984:	mov	ip, #3
     988:	mov	r1, #0
     98c:	mov	r0, #0
     990:	str	r1, [sp, #12]
     994:	str	r0, [sp, #8]
     998:	str	ip, [sp]
     99c:	mov	r1, r4
     9a0:	mov	r0, r5
     9a4:	bl	0 <flatcc_json_printer_int64_field>
     9a8:	mov	r2, #2
     9ac:	ldr	r3, [pc, #48]	; 9e4 <MyGame_Example_Stat_print_json_table+0xa4>
     9b0:	mov	r1, #5
     9b4:	mov	r0, #0
     9b8:	str	r0, [sp, #4]
     9bc:	str	r1, [sp]
     9c0:	mov	r1, r4
     9c4:	mov	r0, r5
     9c8:	bl	0 <flatcc_json_printer_uint16_field>
     9cc:	ldr	r4, [sp, #24]
     9d0:	ldr	r5, [sp, #28]
     9d4:	ldr	lr, [sp, #20]
     9d8:	add	sp, sp, #32
     9dc:	bx	lr
     9e0:	.word	0x000004ae
     9e4:	.word	0x00000069
     9e8:	.word	0x00000365

000009ec <MyGame_Example_Alt_print_json_table>:
     9ec:	mov	ip, sp
     9f0:	sub	sp, sp, #40	; 0x28
     9f4:	str	ip, [sp, #12]
     9f8:	str	lr, [sp, #16]
     9fc:	str	r4, [sp, #24]
     a00:	str	r5, [sp, #28]
     a04:	str	r6, [sp, #32]
     a08:	mov	r4, r1
     a0c:	mov	r5, r0
     a10:	mov	r2, #0
     a14:	ldr	r3, [pc, #132]	; aa0 <MyGame_Example_Alt_print_json_table+0xb4>
     a18:	mov	r0, #6
     a1c:	ldr	r1, [pc, #128]	; aa4 <MyGame_Example_Alt_print_json_table+0xb8>
     a20:	str	r1, [sp, #4]
     a24:	str	r0, [sp]
     a28:	mov	r1, r4
     a2c:	mov	r0, r5
     a30:	bl	0 <flatcc_json_printer_table_field>
     a34:	mov	r2, #1
     a38:	ldr	r3, [pc, #116]	; ab4 <MyGame_Example_Alt_print_json_table+0xc8>
     a3c:	mov	r0, #5
     a40:	ldr	r1, [pc, #84]	; a9c <MyGame_Example_Alt_print_json_table+0xb0>
     a44:	str	r1, [sp, #4]
     a48:	str	r0, [sp]
     a4c:	mov	r1, r4
     a50:	mov	r0, r5
     a54:	bl	0 <flatcc_json_printer_table_field>
     a58:	mov	r2, #3
     a5c:	ldr	r3, [pc, #76]	; ab0 <MyGame_Example_Alt_print_json_table+0xc4>
     a60:	mov	r0, #7
     a64:	ldr	r1, [pc, #64]	; aac <MyGame_Example_Alt_print_json_table+0xc0>
     a68:	ldr	r6, [pc, #56]	; aa8 <MyGame_Example_Alt_print_json_table+0xbc>
     a6c:	str	r6, [sp, #8]
     a70:	str	r1, [sp, #4]
     a74:	str	r0, [sp]
     a78:	mov	r1, r4
     a7c:	mov	r0, r5
     a80:	bl	0 <flatcc_json_printer_union_vector_field>
     a84:	ldr	r4, [sp, #24]
     a88:	ldr	r5, [sp, #28]
     a8c:	ldr	r6, [sp, #32]
     a90:	ldr	lr, [sp, #16]
     a94:	add	sp, sp, #40	; 0x28
     a98:	bx	lr
     a9c:	.word	0x00000000
     aa0:	.word	0x00000368
	...
     ab0:	.word	0x0000032b
     ab4:	.word	0x000005a9

00000ab8 <MyGame_Example_TestJSONPrefix_print_json_table>:
     ab8:	mov	ip, sp
     abc:	sub	sp, sp, #24
     ac0:	str	ip, [sp, #8]
     ac4:	str	lr, [sp, #12]
     ac8:	str	r4, [sp, #16]
     acc:	str	r5, [sp, #20]
     ad0:	mov	r4, r1
     ad4:	mov	r5, r0
     ad8:	mov	r2, #0
     adc:	ldr	r3, [pc, #136]	; b6c <MyGame_Example_TestJSONPrefix_print_json_table+0xb4>
     ae0:	mov	r1, #21
     ae4:	ldr	r0, [pc, #108]	; b58 <MyGame_Example_TestJSONPrefix_print_json_table+0xa0>
     ae8:	str	r0, [sp, #4]
     aec:	str	r1, [sp]
     af0:	mov	r1, r4
     af4:	mov	r0, r5
     af8:	bl	0 <flatcc_json_printer_table_field>
     afc:	mov	r2, #1
     b00:	ldr	r3, [pc, #92]	; b64 <MyGame_Example_TestJSONPrefix_print_json_table+0xac>
     b04:	mov	ip, #22
     b08:	ldr	r0, [pc, #76]	; b5c <MyGame_Example_TestJSONPrefix_print_json_table+0xa4>
     b0c:	str	r0, [sp, #4]
     b10:	str	ip, [sp]
     b14:	mov	r1, r4
     b18:	mov	r0, r5
     b1c:	bl	0 <flatcc_json_printer_table_field>
     b20:	mov	r2, #2
     b24:	ldr	r3, [pc, #60]	; b68 <MyGame_Example_TestJSONPrefix_print_json_table+0xb0>
     b28:	mov	ip, #22
     b2c:	ldr	r1, [pc, #44]	; b60 <MyGame_Example_TestJSONPrefix_print_json_table+0xa8>
     b30:	str	r1, [sp, #4]
     b34:	str	ip, [sp]
     b38:	mov	r1, r4
     b3c:	mov	r0, r5
     b40:	bl	0 <flatcc_json_printer_table_field>
     b44:	ldr	r4, [sp, #16]
     b48:	ldr	r5, [sp, #20]
     b4c:	ldr	lr, [sp, #12]
     b50:	add	sp, sp, #24
     b54:	bx	lr
	...
     b64:	.word	0x000003da
     b68:	.word	0x0000009f
     b6c:	.word	0x000002cf

00000b70 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
     b70:	mov	ip, sp
     b74:	sub	sp, sp, #32
     b78:	str	ip, [sp, #16]
     b7c:	str	lr, [sp, #20]
     b80:	str	r4, [sp, #24]
     b84:	str	r5, [sp, #28]
     b88:	mov	r4, r1
     b8c:	mov	r5, r0
     b90:	mov	r2, #0
     b94:	ldr	r3, [pc, #352]	; cfc <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x18c>
     b98:	mov	r1, #4
     b9c:	str	r1, [sp]
     ba0:	mov	r1, r4
     ba4:	mov	r0, r5
     ba8:	bl	0 <flatcc_json_printer_string_field>
     bac:	mov	r2, #1
     bb0:	ldr	r3, [pc, #316]	; cf4 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x184>
     bb4:	mov	r0, #9
     bb8:	mov	r1, #0
     bbc:	str	r1, [sp, #4]
     bc0:	str	r0, [sp]
     bc4:	mov	r1, r4
     bc8:	mov	r0, r5
     bcc:	bl	0 <flatcc_json_printer_uint32_field>
     bd0:	mov	r2, #2
     bd4:	ldr	r3, [pc, #300]	; d08 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x198>
     bd8:	mov	r0, #4
     bdc:	str	r0, [sp]
     be0:	mov	r1, r4
     be4:	mov	r0, r5
     be8:	bl	0 <flatcc_json_printer_string_field>
     bec:	mov	r2, #3
     bf0:	ldr	r3, [pc, #264]	; d00 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x190>
     bf4:	mov	r1, #8
     bf8:	mov	r0, #0
     bfc:	mov	ip, #0
     c00:	str	r0, [sp, #12]
     c04:	str	ip, [sp, #8]
     c08:	str	r1, [sp]
     c0c:	mov	r1, r4
     c10:	mov	r0, r5
     c14:	bl	0 <flatcc_json_printer_int64_field>
     c18:	mov	r2, #4
     c1c:	ldr	r3, [pc, #224]	; d04 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x194>
     c20:	mov	r1, #4
     c24:	str	r1, [sp]
     c28:	mov	r1, r4
     c2c:	mov	r0, r5
     c30:	bl	0 <flatcc_json_printer_string_field>
     c34:	mov	r2, #5
     c38:	ldr	r3, [pc, #168]	; ce8 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x178>
     c3c:	mov	r1, #8
     c40:	mov	r0, #0
     c44:	mov	ip, #0
     c48:	str	r0, [sp, #12]
     c4c:	str	ip, [sp, #8]
     c50:	str	r1, [sp]
     c54:	mov	r1, r4
     c58:	mov	r0, r5
     c5c:	bl	0 <flatcc_json_printer_int64_field>
     c60:	mov	r2, #6
     c64:	ldr	r3, [pc, #140]	; cf8 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x188>
     c68:	mov	r1, #9
     c6c:	mov	r0, #0
     c70:	str	r0, [sp, #4]
     c74:	str	r1, [sp]
     c78:	mov	r1, r4
     c7c:	mov	r0, r5
     c80:	bl	0 <flatcc_json_printer_uint32_field>
     c84:	mov	r2, #7
     c88:	ldr	r3, [pc, #92]	; cec <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x17c>
     c8c:	mov	ip, #8
     c90:	mov	r1, #0
     c94:	mov	r0, #0
     c98:	str	r1, [sp, #12]
     c9c:	str	r0, [sp, #8]
     ca0:	str	ip, [sp]
     ca4:	mov	r1, r4
     ca8:	mov	r0, r5
     cac:	bl	0 <flatcc_json_printer_int64_field>
     cb0:	mov	r2, #8
     cb4:	ldr	r3, [pc, #52]	; cf0 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x180>
     cb8:	mov	r1, #9
     cbc:	mov	r0, #0
     cc0:	str	r0, [sp, #4]
     cc4:	str	r1, [sp]
     cc8:	mov	r1, r4
     ccc:	mov	r0, r5
     cd0:	bl	0 <flatcc_json_printer_uint32_field>
     cd4:	ldr	r4, [sp, #24]
     cd8:	ldr	r5, [sp, #28]
     cdc:	ldr	lr, [sp, #20]
     ce0:	add	sp, sp, #32
     ce4:	bx	lr
     ce8:	.word	0x000003fd
     cec:	.word	0x000001f2
     cf0:	.word	0x000002af
     cf4:	.word	0x0000033c
     cf8:	.word	0x00000411
     cfc:	.word	0x0000046e
     d00:	.word	0x00000333
     d04:	.word	0x00000098
     d08:	.word	0x00000115

00000d0c <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
     d0c:	mov	ip, sp
     d10:	sub	sp, sp, #40	; 0x28
     d14:	str	ip, [sp, #16]
     d18:	str	lr, [sp, #20]
     d1c:	str	r4, [sp, #24]
     d20:	str	r5, [sp, #28]
     d24:	str	r6, [sp, #32]
     d28:	mov	r4, r1
     d2c:	mov	r5, r0
     d30:	mov	r2, #0
     d34:	ldr	r3, [pc, #92]	; d98 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x8c>
     d38:	mov	r6, #15
     d3c:	mov	r1, #0
     d40:	mov	r0, #0
     d44:	str	r1, [sp, #12]
     d48:	str	r0, [sp, #8]
     d4c:	str	r6, [sp]
     d50:	mov	r1, r4
     d54:	mov	r0, r5
     d58:	bl	0 <flatcc_json_printer_int64_field>
     d5c:	mov	r2, #1
     d60:	ldr	r3, [pc, #52]	; d9c <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x90>
     d64:	mov	ip, #16
     d68:	mov	r0, #0
     d6c:	str	r0, [sp, #4]
     d70:	str	ip, [sp]
     d74:	mov	r1, r4
     d78:	mov	r0, r5
     d7c:	bl	0 <flatcc_json_printer_uint32_field>
     d80:	ldr	r4, [sp, #24]
     d84:	ldr	r5, [sp, #28]
     d88:	ldr	r6, [sp, #32]
     d8c:	ldr	lr, [sp, #20]
     d90:	add	sp, sp, #40	; 0x28
     d94:	bx	lr
     d98:	.word	0x00000221
     d9c:	.word	0x000000b6

00000da0 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
     da0:	mov	ip, sp
     da4:	sub	sp, sp, #40	; 0x28
     da8:	str	ip, [sp, #16]
     dac:	str	lr, [sp, #20]
     db0:	str	r4, [sp, #24]
     db4:	str	r5, [sp, #28]
     db8:	str	r6, [sp, #32]
     dbc:	mov	r4, r1
     dc0:	mov	r5, r0
     dc4:	mov	r2, #0
     dc8:	ldr	r3, [pc, #96]	; e30 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x90>
     dcc:	mov	r6, #15
     dd0:	mov	r1, #0
     dd4:	mov	r0, #0
     dd8:	str	r1, [sp, #12]
     ddc:	str	r0, [sp, #8]
     de0:	str	r6, [sp]
     de4:	mov	r1, r4
     de8:	mov	r0, r5
     dec:	bl	0 <flatcc_json_printer_int64_field>
     df0:	mov	r2, #1
     df4:	ldr	r3, [pc, #48]	; e2c <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x8c>
     df8:	mov	ip, #21
     dfc:	mov	r0, #0
     e00:	str	r0, [sp, #4]
     e04:	str	ip, [sp]
     e08:	mov	r1, r4
     e0c:	mov	r0, r5
     e10:	bl	0 <flatcc_json_printer_uint32_field>
     e14:	ldr	r4, [sp, #24]
     e18:	ldr	r5, [sp, #28]
     e1c:	ldr	r6, [sp, #32]
     e20:	ldr	lr, [sp, #20]
     e24:	add	sp, sp, #40	; 0x28
     e28:	bx	lr
     e2c:	.word	0x000002b9
     e30:	.word	0x00000221

00000e34 <MyGame_Example_TestBase64_print_json_table>:
     e34:	mov	ip, sp
     e38:	sub	sp, sp, #24
     e3c:	str	ip, [sp, #8]
     e40:	str	lr, [sp, #12]
     e44:	str	r4, [sp, #16]
     e48:	str	r5, [sp, #20]
     e4c:	mov	r4, r1
     e50:	mov	r5, r0
     e54:	mov	r2, #0
     e58:	ldr	r3, [pc, #120]	; ed8 <MyGame_Example_TestBase64_print_json_table+0xa4>
     e5c:	mov	r1, #4
     e60:	mov	r0, #0
     e64:	str	r0, [sp, #4]
     e68:	str	r1, [sp]
     e6c:	mov	r1, r4
     e70:	mov	r0, r5
     e74:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     e78:	mov	r2, #1
     e7c:	ldr	r3, [pc, #88]	; edc <MyGame_Example_TestBase64_print_json_table+0xa8>
     e80:	mov	ip, #7
     e84:	mov	r0, #1
     e88:	str	r0, [sp, #4]
     e8c:	str	ip, [sp]
     e90:	mov	r1, r4
     e94:	mov	r0, r5
     e98:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     e9c:	mov	r2, #2
     ea0:	ldr	r3, [pc, #44]	; ed4 <MyGame_Example_TestBase64_print_json_table+0xa0>
     ea4:	mov	ip, #6
     ea8:	mov	r1, #0
     eac:	str	r1, [sp, #4]
     eb0:	str	ip, [sp]
     eb4:	mov	r1, r4
     eb8:	mov	r0, r5
     ebc:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     ec0:	ldr	r4, [sp, #16]
     ec4:	ldr	r5, [sp, #20]
     ec8:	ldr	lr, [sp, #12]
     ecc:	add	sp, sp, #24
     ed0:	bx	lr
     ed4:	.word	0x00000231
     ed8:	.word	0x00000346
     edc:	.word	0x000001c6

00000ee0 <MyGame_Example_Monster_print_json_table>:
     ee0:	mov	ip, sp
     ee4:	sub	sp, sp, #40	; 0x28
     ee8:	str	ip, [sp, #16]
     eec:	str	lr, [sp, #20]
     ef0:	str	r4, [sp, #24]
     ef4:	str	r5, [sp, #28]
     ef8:	str	r6, [sp, #32]
     efc:	mov	r4, r1
     f00:	mov	r5, r0
     f04:	mov	r2, #0
     f08:	ldr	r3, [pc, #1388]	; 147c <MyGame_Example_Monster_print_json_table+0x59c>
     f0c:	mov	ip, #3
     f10:	ldr	r0, [pc, #1408]	; 1498 <MyGame_Example_Monster_print_json_table+0x5b8>
     f14:	str	r0, [sp, #4]
     f18:	str	ip, [sp]
     f1c:	mov	r1, r4
     f20:	mov	r0, r5
     f24:	bl	0 <flatcc_json_printer_struct_field>
     f28:	mov	r2, #1
     f2c:	ldr	r3, [pc, #1268]	; 1428 <MyGame_Example_Monster_print_json_table+0x548>
     f30:	mov	r0, #4
     f34:	mov	r1, #150	; 0x96
     f38:	str	r1, [sp, #4]
     f3c:	str	r0, [sp]
     f40:	mov	r1, r4
     f44:	mov	r0, r5
     f48:	bl	0 <flatcc_json_printer_int16_field>
     f4c:	mov	r2, #2
     f50:	ldr	r3, [pc, #1244]	; 1434 <MyGame_Example_Monster_print_json_table+0x554>
     f54:	mov	r0, #2
     f58:	mov	r1, #100	; 0x64
     f5c:	str	r1, [sp, #4]
     f60:	str	r0, [sp]
     f64:	mov	r1, r4
     f68:	mov	r0, r5
     f6c:	bl	0 <flatcc_json_printer_int16_field>
     f70:	mov	r2, #3
     f74:	ldr	r3, [pc, #1304]	; 1494 <MyGame_Example_Monster_print_json_table+0x5b4>
     f78:	mov	r1, #4
     f7c:	str	r1, [sp]
     f80:	mov	r1, r4
     f84:	mov	r0, r5
     f88:	bl	0 <flatcc_json_printer_string_field>
     f8c:	mov	r2, #5
     f90:	ldr	r3, [pc, #1224]	; 1460 <MyGame_Example_Monster_print_json_table+0x580>
     f94:	mov	r0, #9
     f98:	str	r0, [sp]
     f9c:	mov	r1, r4
     fa0:	mov	r0, r5
     fa4:	bl	0 <flatcc_json_printer_uint8_vector_field>
     fa8:	mov	r2, #6
     fac:	ldr	r3, [pc, #1272]	; 14ac <MyGame_Example_Monster_print_json_table+0x5cc>
     fb0:	mov	r0, #5
     fb4:	mov	r1, #8
     fb8:	ldr	r6, [pc, #1164]	; 144c <MyGame_Example_Monster_print_json_table+0x56c>
     fbc:	str	r6, [sp, #8]
     fc0:	str	r1, [sp, #4]
     fc4:	str	r0, [sp]
     fc8:	mov	r1, r4
     fcc:	mov	r0, r5
     fd0:	bl	0 <flatcc_json_printer_int8_enum_field>
     fd4:	mov	r2, #8
     fd8:	ldr	r3, [pc, #1084]	; 141c <MyGame_Example_Monster_print_json_table+0x53c>
     fdc:	mov	ip, #4
     fe0:	ldr	r0, [pc, #1152]	; 1468 <MyGame_Example_Monster_print_json_table+0x588>
     fe4:	ldr	r1, [pc, #1088]	; 142c <MyGame_Example_Monster_print_json_table+0x54c>
     fe8:	str	r1, [sp, #8]
     fec:	str	r0, [sp, #4]
     ff0:	str	ip, [sp]
     ff4:	mov	r1, r4
     ff8:	mov	r0, r5
     ffc:	bl	0 <flatcc_json_printer_union_field>
    1000:	mov	r2, #9
    1004:	ldr	r3, [pc, #1036]	; 1418 <MyGame_Example_Monster_print_json_table+0x538>
    1008:	mov	r0, #5
    100c:	mov	r1, #4
    1010:	ldr	r6, [pc, #1020]	; 1414 <MyGame_Example_Monster_print_json_table+0x534>
    1014:	str	r6, [sp, #8]
    1018:	str	r1, [sp, #4]
    101c:	str	r0, [sp]
    1020:	mov	r1, r4
    1024:	mov	r0, r5
    1028:	bl	0 <flatcc_json_printer_struct_vector_field>
    102c:	mov	r2, #10
    1030:	ldr	r3, [pc, #1048]	; 1450 <MyGame_Example_Monster_print_json_table+0x570>
    1034:	mov	ip, #17
    1038:	str	ip, [sp]
    103c:	mov	r1, r4
    1040:	mov	r0, r5
    1044:	bl	0 <flatcc_json_printer_string_vector_field>
    1048:	mov	r2, #11
    104c:	ldr	r3, [pc, #1080]	; 148c <MyGame_Example_Monster_print_json_table+0x5ac>
    1050:	mov	ip, #17
    1054:	ldr	r0, [pc, #1000]	; 1444 <MyGame_Example_Monster_print_json_table+0x564>
    1058:	str	r0, [sp, #4]
    105c:	str	ip, [sp]
    1060:	mov	r1, r4
    1064:	mov	r0, r5
    1068:	bl	0 <flatcc_json_printer_table_vector_field>
    106c:	mov	r2, #12
    1070:	ldr	r3, [pc, #988]	; 1454 <MyGame_Example_Monster_print_json_table+0x574>
    1074:	mov	r0, #5
    1078:	ldr	r1, [pc, #964]	; 1444 <MyGame_Example_Monster_print_json_table+0x564>
    107c:	str	r1, [sp, #4]
    1080:	str	r0, [sp]
    1084:	mov	r1, r4
    1088:	mov	r0, r5
    108c:	bl	0 <flatcc_json_printer_table_field>
    1090:	mov	r2, #13
    1094:	ldr	r3, [pc, #996]	; 1480 <MyGame_Example_Monster_print_json_table+0x5a0>
    1098:	mov	r0, #20
    109c:	mov	r1, #0
    10a0:	ldr	ip, [pc, #924]	; 1444 <MyGame_Example_Monster_print_json_table+0x564>
    10a4:	str	ip, [sp, #8]
    10a8:	str	r1, [sp, #4]
    10ac:	str	r0, [sp]
    10b0:	mov	r1, r4
    10b4:	mov	r0, r5
    10b8:	bl	0 <flatcc_json_printer_table_as_nested_root>
    10bc:	mov	r2, #14
    10c0:	ldr	r3, [pc, #988]	; 14a4 <MyGame_Example_Monster_print_json_table+0x5c4>
    10c4:	mov	r0, #9
    10c8:	ldr	r1, [pc, #816]	; 1400 <MyGame_Example_Monster_print_json_table+0x520>
    10cc:	str	r1, [sp, #4]
    10d0:	str	r0, [sp]
    10d4:	mov	r1, r4
    10d8:	mov	r0, r5
    10dc:	bl	0 <flatcc_json_printer_table_field>
    10e0:	mov	r2, #15
    10e4:	ldr	r3, [pc, #792]	; 1404 <MyGame_Example_Monster_print_json_table+0x524>
    10e8:	mov	r0, #8
    10ec:	mov	r1, #1
    10f0:	str	r1, [sp, #4]
    10f4:	str	r0, [sp]
    10f8:	mov	r1, r4
    10fc:	mov	r0, r5
    1100:	bl	0 <flatcc_json_printer_bool_field>
    1104:	mov	r2, #16
    1108:	ldr	r3, [pc, #860]	; 146c <MyGame_Example_Monster_print_json_table+0x58c>
    110c:	mov	r0, #16
    1110:	mov	ip, #0
    1114:	str	ip, [sp, #4]
    1118:	str	r0, [sp]
    111c:	mov	r1, r4
    1120:	mov	r0, r5
    1124:	bl	0 <flatcc_json_printer_int32_field>
    1128:	mov	r2, #17
    112c:	ldr	r3, [pc, #728]	; 140c <MyGame_Example_Monster_print_json_table+0x52c>
    1130:	mov	r0, #16
    1134:	mov	ip, #0
    1138:	str	ip, [sp, #4]
    113c:	str	r0, [sp]
    1140:	mov	r1, r4
    1144:	mov	r0, r5
    1148:	bl	0 <flatcc_json_printer_uint32_field>
    114c:	mov	r2, #18
    1150:	ldr	r3, [pc, #716]	; 1424 <MyGame_Example_Monster_print_json_table+0x544>
    1154:	mov	r1, #16
    1158:	mov	r0, #0
    115c:	mov	ip, #0
    1160:	str	r0, [sp, #12]
    1164:	str	ip, [sp, #8]
    1168:	str	r1, [sp]
    116c:	mov	r1, r4
    1170:	mov	r0, r5
    1174:	bl	0 <flatcc_json_printer_int64_field>
    1178:	mov	r2, #19
    117c:	ldr	r3, [pc, #796]	; 14a0 <MyGame_Example_Monster_print_json_table+0x5c0>
    1180:	mov	r1, #16
    1184:	mov	r0, #0
    1188:	mov	ip, #0
    118c:	str	r0, [sp, #12]
    1190:	str	ip, [sp, #8]
    1194:	str	r1, [sp]
    1198:	mov	r1, r4
    119c:	mov	r0, r5
    11a0:	bl	0 <flatcc_json_printer_uint64_field>
    11a4:	mov	r2, #20
    11a8:	ldr	r3, [pc, #712]	; 1478 <MyGame_Example_Monster_print_json_table+0x598>
    11ac:	mov	ip, #17
    11b0:	mov	r0, #0
    11b4:	str	r0, [sp, #4]
    11b8:	str	ip, [sp]
    11bc:	mov	r1, r4
    11c0:	mov	r0, r5
    11c4:	bl	0 <flatcc_json_printer_int32_field>
    11c8:	mov	r2, #21
    11cc:	ldr	r3, [pc, #644]	; 1458 <MyGame_Example_Monster_print_json_table+0x578>
    11d0:	mov	r0, #17
    11d4:	mov	ip, #0
    11d8:	str	ip, [sp, #4]
    11dc:	str	r0, [sp]
    11e0:	mov	r1, r4
    11e4:	mov	r0, r5
    11e8:	bl	0 <flatcc_json_printer_uint32_field>
    11ec:	mov	r2, #22
    11f0:	ldr	r3, [pc, #636]	; 1474 <MyGame_Example_Monster_print_json_table+0x594>
    11f4:	mov	r6, #17
    11f8:	mov	r1, #0
    11fc:	mov	r0, #0
    1200:	str	r1, [sp, #12]
    1204:	str	r0, [sp, #8]
    1208:	str	r6, [sp]
    120c:	mov	r1, r4
    1210:	mov	r0, r5
    1214:	bl	0 <flatcc_json_printer_int64_field>
    1218:	mov	r2, #23
    121c:	ldr	r3, [pc, #608]	; 1484 <MyGame_Example_Monster_print_json_table+0x5a4>
    1220:	mov	r0, #17
    1224:	mov	ip, #0
    1228:	mov	r1, #0
    122c:	str	ip, [sp, #12]
    1230:	str	r1, [sp, #8]
    1234:	str	r0, [sp]
    1238:	mov	r1, r4
    123c:	mov	r0, r5
    1240:	bl	0 <flatcc_json_printer_uint64_field>
    1244:	mov	r2, #24
    1248:	ldr	r3, [pc, #492]	; 143c <MyGame_Example_Monster_print_json_table+0x55c>
    124c:	mov	r0, #16
    1250:	str	r0, [sp]
    1254:	mov	r1, r4
    1258:	mov	r0, r5
    125c:	bl	0 <flatcc_json_printer_bool_vector_field>
    1260:	mov	r2, #25
    1264:	ldr	r3, [pc, #496]	; 145c <MyGame_Example_Monster_print_json_table+0x57c>
    1268:	mov	ip, #5
    126c:	vldr	d6, [pc, #580]	; 14b8 <MyGame_Example_Monster_print_json_table+0x5d8>
    1270:	vcvt.f32.f64	s0, d6
    1274:	str	ip, [sp]
    1278:	mov	r1, r4
    127c:	mov	r0, r5
    1280:	vmov.f32	s0, s0
    1284:	bl	0 <flatcc_json_printer_float_field>
    1288:	mov	r2, #26
    128c:	ldr	r3, [pc, #464]	; 1464 <MyGame_Example_Monster_print_json_table+0x584>
    1290:	mov	r0, #6
    1294:	vmov.f64	d3, #8	; 0x40400000  3.0
    1298:	vcvt.f32.f64	s0, d3
    129c:	str	r0, [sp]
    12a0:	mov	r1, r4
    12a4:	mov	r0, r5
    12a8:	vmov.f32	s0, s0
    12ac:	bl	0 <flatcc_json_printer_float_field>
    12b0:	mov	r2, #27
    12b4:	ldr	r3, [pc, #480]	; 149c <MyGame_Example_Monster_print_json_table+0x5bc>
    12b8:	mov	ip, #6
    12bc:	vldr	d2, [pc, #492]	; 14b0 <MyGame_Example_Monster_print_json_table+0x5d0>
    12c0:	vcvt.f32.f64	s0, d2
    12c4:	str	ip, [sp]
    12c8:	mov	r1, r4
    12cc:	mov	r0, r5
    12d0:	vmov.f32	s0, s0
    12d4:	bl	0 <flatcc_json_printer_float_field>
    12d8:	mov	r2, #28
    12dc:	ldr	r3, [pc, #428]	; 1490 <MyGame_Example_Monster_print_json_table+0x5b0>
    12e0:	mov	r1, #18
    12e4:	str	r1, [sp]
    12e8:	mov	r1, r4
    12ec:	mov	r0, r5
    12f0:	bl	0 <flatcc_json_printer_string_vector_field>
    12f4:	mov	r2, #29
    12f8:	ldr	r3, [pc, #272]	; 1410 <MyGame_Example_Monster_print_json_table+0x530>
    12fc:	mov	r1, #23
    1300:	mov	r0, #8
    1304:	ldr	ip, [pc, #412]	; 14a8 <MyGame_Example_Monster_print_json_table+0x5c8>
    1308:	str	ip, [sp, #8]
    130c:	str	r0, [sp, #4]
    1310:	str	r1, [sp]
    1314:	mov	r1, r4
    1318:	mov	r0, r5
    131c:	bl	0 <flatcc_json_printer_struct_vector_field>
    1320:	mov	r2, #30
    1324:	ldr	r3, [pc, #276]	; 1440 <MyGame_Example_Monster_print_json_table+0x560>
    1328:	mov	r1, #4
    132c:	str	r1, [sp]
    1330:	mov	r1, r4
    1334:	mov	r0, r5
    1338:	bl	0 <flatcc_json_printer_uint8_vector_field>
    133c:	mov	r2, #31
    1340:	ldr	r3, [pc, #256]	; 1448 <MyGame_Example_Monster_print_json_table+0x568>
    1344:	mov	ip, #5
    1348:	mov	r0, #4
    134c:	ldr	r1, [pc, #192]	; 1414 <MyGame_Example_Monster_print_json_table+0x534>
    1350:	str	r1, [sp, #8]
    1354:	str	r0, [sp, #4]
    1358:	str	ip, [sp]
    135c:	mov	r1, r4
    1360:	mov	r0, r5
    1364:	bl	0 <flatcc_json_printer_struct_vector_field>
    1368:	mov	r2, #32
    136c:	ldr	r3, [pc, #172]	; 1420 <MyGame_Example_Monster_print_json_table+0x540>
    1370:	mov	r1, #15
    1374:	str	r1, [sp]
    1378:	mov	r1, r4
    137c:	mov	r0, r5
    1380:	bl	0 <flatcc_json_printer_int64_vector_field>
    1384:	mov	r2, #33	; 0x21
    1388:	ldr	r3, [pc, #224]	; 1470 <MyGame_Example_Monster_print_json_table+0x590>
    138c:	mov	ip, #17
    1390:	str	ip, [sp]
    1394:	mov	r1, r4
    1398:	mov	r0, r5
    139c:	bl	0 <flatcc_json_printer_double_vector_field>
    13a0:	mov	r2, #34	; 0x22
    13a4:	ldr	r3, [pc, #140]	; 1438 <MyGame_Example_Monster_print_json_table+0x558>
    13a8:	mov	r0, #21
    13ac:	ldr	ip, [pc, #212]	; 1488 <MyGame_Example_Monster_print_json_table+0x5a8>
    13b0:	str	ip, [sp, #4]
    13b4:	str	r0, [sp]
    13b8:	mov	r1, r4
    13bc:	mov	r0, r5
    13c0:	bl	0 <flatcc_json_printer_table_field>
    13c4:	mov	r2, #35	; 0x23
    13c8:	ldr	r3, [pc, #56]	; 1408 <MyGame_Example_Monster_print_json_table+0x528>
    13cc:	mov	r1, #10
    13d0:	ldr	r0, [pc, #88]	; 1430 <MyGame_Example_Monster_print_json_table+0x550>
    13d4:	str	r0, [sp, #4]
    13d8:	str	r1, [sp]
    13dc:	mov	r1, r4
    13e0:	mov	r0, r5
    13e4:	bl	0 <flatcc_json_printer_table_field>
    13e8:	ldr	r4, [sp, #24]
    13ec:	ldr	r5, [sp, #28]
    13f0:	ldr	r6, [sp, #32]
    13f4:	ldr	lr, [sp, #20]
    13f8:	add	sp, sp, #40	; 0x28
    13fc:	bx	lr
    1400:	.word	0x00000000
    1404:	.word	0x00000076
    1408:	.word	0x000000cf
    140c:	.word	0x00000580
    1410:	.word	0x00000456
    1414:	.word	0x00000000
    1418:	.word	0x00000350
    141c:	.word	0x0000034b
    1420:	.word	0x00000591
    1424:	.word	0x00000473
    1428:	.word	0x00000262
	...
    1434:	.word	0x0000011a
    1438:	.word	0x00000381
    143c:	.word	0x0000042d
	...
    1448:	.word	0x0000031e
    144c:	.word	0x00000000
    1450:	.word	0x0000041b
    1454:	.word	0x00000450
    1458:	.word	0x000005af
    145c:	.word	0x000001fb
    1460:	.word	0x000003b5
    1464:	.word	0x00000057
    1468:	.word	0x00000000
    146c:	.word	0x000001ce
    1470:	.word	0x0000036f
    1474:	.word	0x0000043e
    1478:	.word	0x00000267
    147c:	.word	0x00000005
    1480:	.word	0x0000019d
    1484:	.word	0x0000011d
    1488:	.word	0x00000000
    148c:	.word	0x00000147
    1490:	.word	0x00000495
    1494:	.word	0x000000ca
    1498:	.word	0x00000000
    149c:	.word	0x00000279
    14a0:	.word	0x00000484
    14a4:	.word	0x00000201
    14a8:	.word	0x00000000
    14ac:	.word	0x00000356
	...
    14bc:	.word	0x41132cbc

000014c0 <MyGame_Example_Monster_print_json_as_root>:
    14c0:	mov	ip, sp
    14c4:	sub	sp, sp, #24
    14c8:	str	ip, [sp, #4]
    14cc:	str	lr, [sp, #8]
    14d0:	str	r4, [sp, #16]
    14d4:	ldr	r4, [pc, #20]	; 14f0 <MyGame_Example_Monster_print_json_as_root+0x30>
    14d8:	str	r4, [sp]
    14dc:	bl	0 <flatcc_json_printer_table_as_root>
    14e0:	ldr	r4, [sp, #16]
    14e4:	ldr	lr, [sp, #8]
    14e8:	add	sp, sp, #24
    14ec:	bx	lr
    14f0:	.word	0x00000000

000014f4 <Fantasy_Attacker_print_json_table>:
    14f4:	mov	ip, sp
    14f8:	sub	sp, sp, #24
    14fc:	str	ip, [sp, #8]
    1500:	str	lr, [sp, #12]
    1504:	str	r4, [sp, #16]
    1508:	str	r5, [sp, #20]
    150c:	mov	r2, #0
    1510:	ldr	r3, [pc, #36]	; 153c <Fantasy_Attacker_print_json_table+0x48>
    1514:	mov	r4, #19
    1518:	mov	r5, #0
    151c:	str	r5, [sp, #4]
    1520:	str	r4, [sp]
    1524:	bl	0 <flatcc_json_printer_int32_field>
    1528:	ldr	r4, [sp, #16]
    152c:	ldr	r5, [sp, #20]
    1530:	ldr	lr, [sp, #12]
    1534:	add	sp, sp, #24
    1538:	bx	lr
    153c:	.word	0x0000020b

00001540 <Fantasy_Movie_print_json_table>:
    1540:	mov	ip, sp
    1544:	sub	sp, sp, #40	; 0x28
    1548:	str	ip, [sp, #12]
    154c:	str	lr, [sp, #16]
    1550:	str	r4, [sp, #24]
    1554:	str	r5, [sp, #28]
    1558:	str	r6, [sp, #32]
    155c:	mov	r4, r1
    1560:	mov	r5, r0
    1564:	mov	r2, #1
    1568:	ldr	r3, [pc, #256]	; 1670 <Fantasy_Movie_print_json_table+0x130>
    156c:	mov	r1, #14
    1570:	ldr	r0, [pc, #228]	; 165c <Fantasy_Movie_print_json_table+0x11c>
    1574:	ldr	r6, [pc, #220]	; 1658 <Fantasy_Movie_print_json_table+0x118>
    1578:	str	r6, [sp, #8]
    157c:	str	r0, [sp, #4]
    1580:	str	r1, [sp]
    1584:	mov	r1, r4
    1588:	mov	r0, r5
    158c:	bl	0 <flatcc_json_printer_union_field>
    1590:	mov	r2, #3
    1594:	ldr	r3, [pc, #204]	; 1668 <Fantasy_Movie_print_json_table+0x128>
    1598:	mov	r0, #10
    159c:	ldr	ip, [pc, #184]	; 165c <Fantasy_Movie_print_json_table+0x11c>
    15a0:	ldr	r1, [pc, #176]	; 1658 <Fantasy_Movie_print_json_table+0x118>
    15a4:	str	r1, [sp, #8]
    15a8:	str	ip, [sp, #4]
    15ac:	str	r0, [sp]
    15b0:	mov	r1, r4
    15b4:	mov	r0, r5
    15b8:	bl	0 <flatcc_json_printer_union_field>
    15bc:	mov	r2, #5
    15c0:	ldr	r3, [pc, #156]	; 1664 <Fantasy_Movie_print_json_table+0x124>
    15c4:	mov	ip, #9
    15c8:	ldr	r1, [pc, #140]	; 165c <Fantasy_Movie_print_json_table+0x11c>
    15cc:	ldr	r0, [pc, #132]	; 1658 <Fantasy_Movie_print_json_table+0x118>
    15d0:	str	r0, [sp, #8]
    15d4:	str	r1, [sp, #4]
    15d8:	str	ip, [sp]
    15dc:	mov	r1, r4
    15e0:	mov	r0, r5
    15e4:	bl	0 <flatcc_json_printer_union_field>
    15e8:	mov	r2, #7
    15ec:	ldr	r3, [pc, #108]	; 1660 <Fantasy_Movie_print_json_table+0x120>
    15f0:	mov	r1, #5
    15f4:	ldr	r0, [pc, #96]	; 165c <Fantasy_Movie_print_json_table+0x11c>
    15f8:	ldr	ip, [pc, #88]	; 1658 <Fantasy_Movie_print_json_table+0x118>
    15fc:	str	ip, [sp, #8]
    1600:	str	r0, [sp, #4]
    1604:	str	r1, [sp]
    1608:	mov	r1, r4
    160c:	mov	r0, r5
    1610:	bl	0 <flatcc_json_printer_union_field>
    1614:	mov	r2, #9
    1618:	ldr	r3, [pc, #76]	; 166c <Fantasy_Movie_print_json_table+0x12c>
    161c:	mov	r0, #10
    1620:	ldr	r1, [pc, #52]	; 165c <Fantasy_Movie_print_json_table+0x11c>
    1624:	ldr	ip, [pc, #44]	; 1658 <Fantasy_Movie_print_json_table+0x118>
    1628:	str	ip, [sp, #8]
    162c:	str	r1, [sp, #4]
    1630:	str	r0, [sp]
    1634:	mov	r1, r4
    1638:	mov	r0, r5
    163c:	bl	0 <flatcc_json_printer_union_vector_field>
    1640:	ldr	r4, [sp, #24]
    1644:	ldr	r5, [sp, #28]
    1648:	ldr	r6, [sp, #32]
    164c:	ldr	lr, [sp, #16]
    1650:	add	sp, sp, #40	; 0x28
    1654:	bx	lr
	...
    1660:	.word	0x000001df
    1664:	.word	0x0000002a
    1668:	.word	0x00000406
    166c:	.word	0x000001e5
    1670:	.word	0x0000012f

00001674 <readfile>:
    1674:	mov	ip, sp
    1678:	sub	sp, sp, #40	; 0x28
    167c:	str	ip, [sp]
    1680:	str	lr, [sp, #4]
    1684:	str	r4, [sp, #8]
    1688:	str	r5, [sp, #12]
    168c:	str	r6, [sp, #16]
    1690:	str	r7, [sp, #20]
    1694:	str	r8, [sp, #24]
    1698:	mov	r8, r1
    169c:	cmp	r2, #0
    16a0:	bne	16ac <readfile+0x38>
    16a4:	add	r4, sp, #32
    16a8:	b	16b0 <readfile+0x3c>
    16ac:	mov	r4, r2
    16b0:	ldr	r1, [pc, #272]	; 17c8 <readfile+0x154>
    16b4:	bl	0 <fopen>
    16b8:	mov	r7, r0
    16bc:	mov	r6, #0
    16c0:	mov	r5, #0
    16c4:	cmp	r7, #0
    16c8:	beq	177c <readfile+0x108>
    16cc:	mov	r1, #0
    16d0:	mov	r2, #2
    16d4:	mov	r0, r7
    16d8:	bl	0 <fseek>
    16dc:	mov	r0, r7
    16e0:	bl	0 <ftell>
    16e4:	mov	r6, r0
    16e8:	str	r6, [r4]
    16ec:	cmp	r8, #0
    16f0:	bhi	16fc <readfile+0x88>
    16f4:	mov	r2, #0
    16f8:	b	1708 <readfile+0x94>
    16fc:	cmp	r6, r8
    1700:	movhi	r2, #1
    1704:	movls	r2, #0
    1708:	cmp	r2, #0
    170c:	bne	177c <readfile+0x108>
    1710:	mov	r0, r7
    1714:	bl	0 <rewind>
    1718:	cmp	r6, #0
    171c:	bne	1728 <readfile+0xb4>
    1720:	mov	r0, #1
    1724:	b	172c <readfile+0xb8>
    1728:	mov	r0, r6
    172c:	bl	0 <malloc>
    1730:	mov	r5, r0
    1734:	cmp	r5, #0
    1738:	beq	177c <readfile+0x108>
    173c:	mov	r8, #0
    1740:	add	r0, r5, r8
    1744:	mov	r1, #1
    1748:	sub	r2, r6, r8
    174c:	mov	r3, r7
    1750:	bl	0 <fread>
    1754:	cmp	r0, #0
    1758:	beq	1764 <readfile+0xf0>
    175c:	add	r8, r8, r0
    1760:	b	1740 <readfile+0xcc>
    1764:	cmp	r8, r6
    1768:	bne	177c <readfile+0x108>
    176c:	mov	r0, r7
    1770:	bl	0 <fclose>
    1774:	str	r6, [r4]
    1778:	b	17a4 <readfile+0x130>
    177c:	cmp	r7, #0
    1780:	beq	178c <readfile+0x118>
    1784:	mov	r0, r7
    1788:	bl	0 <fclose>
    178c:	cmp	r5, #0
    1790:	beq	179c <readfile+0x128>
    1794:	mov	r0, r5
    1798:	bl	0 <free>
    179c:	str	r6, [r4]
    17a0:	mov	r5, #0
    17a4:	mov	r0, r5
    17a8:	ldr	r4, [sp, #8]
    17ac:	ldr	r5, [sp, #12]
    17b0:	ldr	r6, [sp, #16]
    17b4:	ldr	r7, [sp, #20]
    17b8:	ldr	r8, [sp, #24]
    17bc:	ldr	lr, [sp, #4]
    17c0:	add	sp, sp, #40	; 0x28
    17c4:	bx	lr
    17c8:	.word	0x000000c7

000017cc <test_print>:
    17cc:	mov	ip, sp
    17d0:	sub	sp, sp, #96	; 0x60
    17d4:	str	ip, [sp]
    17d8:	str	lr, [sp, #4]
    17dc:	str	r4, [sp, #8]
    17e0:	str	r5, [sp, #12]
    17e4:	str	r6, [sp, #16]
    17e8:	str	r7, [sp, #20]
    17ec:	str	r8, [sp, #24]
    17f0:	str	r9, [sp, #28]
    17f4:	mov	r6, #0
    17f8:	mov	r5, #0
    17fc:	mov	r7, #0
    1800:	mov	r2, #0
    1804:	str	r2, [sp, #32]
    1808:	mov	r1, #0
    180c:	str	r1, [sp, #36]	; 0x24
    1810:	mov	r1, #0
    1814:	str	r1, [sp, #40]	; 0x28
    1818:	add	r8, sp, #48	; 0x30
    181c:	ldr	r1, [pc, #656]	; 1ab4 <test_print+0x2e8>
    1820:	ldr	r0, [r1]
    1824:	ldr	r1, [pc, #652]	; 1ab8 <test_print+0x2ec>
    1828:	bl	0 <fopen>
    182c:	mov	r4, r0
    1830:	cmp	r4, #0
    1834:	bne	1858 <test_print+0x8c>
    1838:	ldr	r0, [pc, #652]	; 1acc <test_print+0x300>
    183c:	ldr	r0, [r0]
    1840:	ldr	r1, [pc, #592]	; 1a98 <test_print+0x2cc>
    1844:	ldr	r2, [pc, #616]	; 1ab4 <test_print+0x2e8>
    1848:	ldr	r2, [r2]
    184c:	bl	0 <fprintf>
    1850:	mvn	r0, #0
    1854:	b	1a70 <test_print+0x2a4>
    1858:	mov	r1, r4
    185c:	mov	r0, r8
    1860:	bl	0 <flatcc_json_printer_init>
    1864:	mov	r0, r8
    1868:	bl	a4 <flatcc_json_printer_set_nonstrict>
    186c:	ldr	r2, [pc, #560]	; 1aa4 <test_print+0x2d8>
    1870:	ldr	r2, [r2]
    1874:	cmp	r2, #0
    1878:	beq	189c <test_print+0xd0>
    187c:	ldr	ip, [pc, #544]	; 1aa4 <test_print+0x2d8>
    1880:	ldr	r0, [ip]
    1884:	ldr	r1, [pc, #564]	; 1ac0 <test_print+0x2f4>
    1888:	bl	0 <strcmp>
    188c:	cmp	r0, #0
    1890:	movne	r0, #1
    1894:	moveq	r0, #0
    1898:	b	18a0 <test_print+0xd4>
    189c:	mov	r0, #0
    18a0:	cmp	r0, #0
    18a4:	beq	18c4 <test_print+0xf8>
    18a8:	ldr	r3, [pc, #500]	; 1aa4 <test_print+0x2d8>
    18ac:	ldr	r0, [r3]
    18b0:	mov	r1, #10240	; 0x2800
    18b4:	add	r2, sp, #32
    18b8:	bl	1674 <readfile>
    18bc:	mov	r9, r0
    18c0:	b	18d0 <test_print+0x104>
    18c4:	ldr	r9, [pc, #504]	; 1ac4 <test_print+0x2f8>
    18c8:	mov	r3, #288	; 0x120
    18cc:	str	r3, [sp, #32]
    18d0:	cmp	r9, #0
    18d4:	bne	18f4 <test_print+0x128>
    18d8:	ldr	r0, [pc, #492]	; 1acc <test_print+0x300>
    18dc:	ldr	r0, [r0]
    18e0:	ldr	r1, [pc, #436]	; 1a9c <test_print+0x2d0>
    18e4:	ldr	r2, [pc, #440]	; 1aa4 <test_print+0x2d8>
    18e8:	ldr	r2, [r2]
    18ec:	bl	0 <fprintf>
    18f0:	b	19f8 <test_print+0x22c>
    18f4:	ldr	ip, [pc, #420]	; 1aa0 <test_print+0x2d4>
    18f8:	ldr	r0, [ip]
    18fc:	mov	r1, #10240	; 0x2800
    1900:	add	r2, sp, #36	; 0x24
    1904:	bl	1674 <readfile>
    1908:	mov	r5, r0
    190c:	cmp	r5, #0
    1910:	bne	1930 <test_print+0x164>
    1914:	ldr	r1, [pc, #432]	; 1acc <test_print+0x300>
    1918:	ldr	r0, [r1]
    191c:	ldr	r1, [pc, #420]	; 1ac8 <test_print+0x2fc>
    1920:	ldr	ip, [pc, #376]	; 1aa0 <test_print+0x2d4>
    1924:	ldr	r2, [ip]
    1928:	bl	0 <fprintf>
    192c:	b	19f8 <test_print+0x22c>
    1930:	ldr	r2, [sp, #32]
    1934:	ldr	r3, [pc, #384]	; 1abc <test_print+0x2f0>
    1938:	mov	r1, r9
    193c:	mov	r0, r8
    1940:	bl	14c0 <MyGame_Example_Monster_print_json_as_root>
    1944:	mov	r0, r8
    1948:	bl	120 <flatcc_json_printer_flush>
    194c:	mov	r0, r8
    1950:	bl	0 <flatcc_json_printer_get_error>
    1954:	cmp	r0, #0
    1958:	beq	1964 <test_print+0x198>
    195c:	ldr	r0, [pc, #324]	; 1aa8 <test_print+0x2dc>
    1960:	bl	0 <printf>
    1964:	mov	r0, r4
    1968:	bl	0 <fclose>
    196c:	mov	r4, #0
    1970:	ldr	r0, [pc, #316]	; 1ab4 <test_print+0x2e8>
    1974:	ldr	r0, [r0]
    1978:	mov	r1, #10240	; 0x2800
    197c:	add	r2, sp, #40	; 0x28
    1980:	bl	1674 <readfile>
    1984:	mov	r7, r0
    1988:	cmp	r7, #0
    198c:	bne	19ac <test_print+0x1e0>
    1990:	ldr	r2, [pc, #308]	; 1acc <test_print+0x300>
    1994:	ldr	r0, [r2]
    1998:	ldr	r1, [pc, #268]	; 1aac <test_print+0x2e0>
    199c:	ldr	r3, [pc, #272]	; 1ab4 <test_print+0x2e8>
    19a0:	ldr	r2, [r3]
    19a4:	bl	0 <fprintf>
    19a8:	b	19f8 <test_print+0x22c>
    19ac:	ldr	r0, [sp, #40]	; 0x28
    19b0:	ldr	r2, [sp, #36]	; 0x24
    19b4:	cmp	r0, r2
    19b8:	bne	19dc <test_print+0x210>
    19bc:	ldr	r2, [sp, #40]	; 0x28
    19c0:	mov	r1, r5
    19c4:	mov	r0, r7
    19c8:	bl	0 <memcmp>
    19cc:	cmp	r0, #0
    19d0:	movne	r3, #1
    19d4:	moveq	r3, #0
    19d8:	b	19e0 <test_print+0x214>
    19dc:	mov	r3, #1
    19e0:	cmp	r3, #0
    19e4:	beq	1a00 <test_print+0x234>
    19e8:	ldr	r3, [pc, #220]	; 1acc <test_print+0x300>
    19ec:	ldr	r0, [r3]
    19f0:	ldr	r1, [pc, #156]	; 1a94 <test_print+0x2c8>
    19f4:	bl	0 <fprintf>
    19f8:	mvn	r6, #0
    19fc:	b	1a10 <test_print+0x244>
    1a00:	ldr	r3, [pc, #196]	; 1acc <test_print+0x300>
    1a04:	ldr	r0, [r3]
    1a08:	ldr	r1, [pc, #160]	; 1ab0 <test_print+0x2e4>
    1a0c:	bl	0 <fprintf>
    1a10:	mov	r0, r8
    1a14:	bl	0 <flatcc_json_printer_clear>
    1a18:	ldr	r2, [pc, #132]	; 1aa4 <test_print+0x2d8>
    1a1c:	ldr	ip, [r2]
    1a20:	cmp	ip, #0
    1a24:	bne	1a2c <test_print+0x260>
    1a28:	mov	r9, #0
    1a2c:	cmp	r9, #0
    1a30:	beq	1a3c <test_print+0x270>
    1a34:	mov	r0, r9
    1a38:	bl	0 <free>
    1a3c:	cmp	r5, #0
    1a40:	beq	1a4c <test_print+0x280>
    1a44:	mov	r0, r5
    1a48:	bl	0 <free>
    1a4c:	cmp	r7, #0
    1a50:	beq	1a5c <test_print+0x290>
    1a54:	mov	r0, r7
    1a58:	bl	0 <free>
    1a5c:	cmp	r4, #0
    1a60:	beq	1a6c <test_print+0x2a0>
    1a64:	mov	r0, r4
    1a68:	bl	0 <fclose>
    1a6c:	mov	r0, r6
    1a70:	ldr	r4, [sp, #8]
    1a74:	ldr	r5, [sp, #12]
    1a78:	ldr	r6, [sp, #16]
    1a7c:	ldr	r7, [sp, #20]
    1a80:	ldr	r8, [sp, #24]
    1a84:	ldr	r9, [sp, #28]
    1a88:	ldr	lr, [sp, #4]
    1a8c:	add	sp, sp, #96	; 0x60
    1a90:	bx	lr
    1a94:	.word	0x0000015c
    1a98:	.word	0x00000034
    1a9c:	.word	0x00000238
	...
    1aa8:	.word	0x00000397
    1aac:	.word	0x000000da
    1ab0:	.word	0x000003bf
    1ab4:	.word	0x00000000
    1ab8:	.word	0x00000159
    1abc:	.word	0x0000006f
    1ac0:	.word	0x0000021f
    1ac4:	.word	0x000005c1
    1ac8:	.word	0x00000280
    1acc:	.word	0x00000000

00001ad0 <main>:
    1ad0:	mov	ip, sp
    1ad4:	sub	sp, sp, #16
    1ad8:	str	ip, [sp]
    1adc:	str	lr, [sp, #4]
    1ae0:	str	r4, [sp, #8]
    1ae4:	str	r5, [sp, #12]
    1ae8:	mov	r4, r1
    1aec:	mov	r5, r0
    1af0:	ldr	r2, [pc, #156]	; 1b94 <main+0xc4>
    1af4:	ldr	r0, [r2]
    1af8:	ldr	r1, [pc, #132]	; 1b84 <main+0xb4>
    1afc:	bl	0 <fprintf>
    1b00:	cmp	r5, #1
    1b04:	bne	1b10 <main+0x40>
    1b08:	mov	r3, #0
    1b0c:	b	1b1c <main+0x4c>
    1b10:	cmp	r5, #4
    1b14:	movne	r3, #1
    1b18:	moveq	r3, #0
    1b1c:	cmp	r3, #0
    1b20:	beq	1b3c <main+0x6c>
    1b24:	ldr	r1, [pc, #104]	; 1b94 <main+0xc4>
    1b28:	ldr	r0, [r1]
    1b2c:	ldr	r1, [pc, #76]	; 1b80 <main+0xb0>
    1b30:	bl	0 <fprintf>
    1b34:	mov	r0, #1
    1b38:	bl	0 <exit>
    1b3c:	cmp	r5, #4
    1b40:	bne	1b68 <main+0x98>
    1b44:	ldr	r1, [pc, #64]	; 1b8c <main+0xbc>
    1b48:	ldr	ip, [r4, #4]
    1b4c:	str	ip, [r1]
    1b50:	ldr	r2, [pc, #48]	; 1b88 <main+0xb8>
    1b54:	ldr	ip, [r4, #8]
    1b58:	str	ip, [r2]
    1b5c:	ldr	r0, [pc, #44]	; 1b90 <main+0xc0>
    1b60:	ldr	r3, [r4, #12]
    1b64:	str	r3, [r0]
    1b68:	bl	17cc <test_print>
    1b6c:	ldr	r4, [sp, #8]
    1b70:	ldr	r5, [sp, #12]
    1b74:	ldr	lr, [sp, #4]
    1b78:	add	sp, sp, #16
    1b7c:	bx	lr
    1b80:	.word	0x000004b2
    1b84:	.word	0x0000007f
	...
