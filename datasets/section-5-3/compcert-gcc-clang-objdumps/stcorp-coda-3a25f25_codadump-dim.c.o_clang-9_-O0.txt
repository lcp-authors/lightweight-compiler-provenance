
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-dim.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dim_info_init>:
       0:	movw	r0, #0
       4:	movw	r1, #0
       8:	movt	r1, #0
       c:	str	r0, [r1]
      10:	str	r0, [r1, #68]	; 0x44
      14:	mvn	r0, #0
      18:	str	r0, [r1, #104]	; 0x68
      1c:	bx	lr

00000020 <dim_info_done>:
      20:	bx	lr

00000024 <print_all_distinct_dims>:
      24:	push	{fp, lr}
      28:	mov	fp, sp
      2c:	sub	sp, sp, #40	; 0x28
      30:	str	r0, [fp, #-4]
      34:	ldr	r0, [fp, #-4]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	ldr	r1, [r1]
      44:	cmp	r0, r1
      48:	bge	50 <print_all_distinct_dims+0x2c>
      4c:	b	70 <print_all_distinct_dims+0x4c>
      50:	movw	r0, #0
      54:	movt	r0, #0
      58:	movw	r1, #0
      5c:	movt	r1, #0
      60:	movw	r2, #50	; 0x32
      64:	movw	r3, #0
      68:	movt	r3, #0
      6c:	bl	0 <__assert_fail>
      70:	movw	r0, #0
      74:	movt	r0, #0
      78:	add	r0, r0, #72	; 0x48
      7c:	ldr	r1, [fp, #-4]
      80:	movw	r2, #0
      84:	movt	r2, #0
      88:	add	r1, r2, r1, lsl #2
      8c:	add	r1, r1, #72	; 0x48
      90:	ldr	r1, [r1]
      94:	cmp	r1, #0
      98:	bne	a0 <print_all_distinct_dims+0x7c>
      9c:	b	3cc <print_all_distinct_dims+0x3a8>
      a0:	ldr	r0, [fp, #-4]
      a4:	movw	r1, #0
      a8:	movt	r1, #0
      ac:	add	r0, r1, r0, lsl #2
      b0:	ldr	r0, [r0, #4]
      b4:	add	r0, r0, #1
      b8:	lsl	r0, r0, #2
      bc:	bl	0 <malloc>
      c0:	str	r0, [fp, #-8]
      c4:	ldr	r0, [fp, #-8]
      c8:	movw	r1, #0
      cc:	cmp	r0, r1
      d0:	bne	11c <print_all_distinct_dims+0xf8>
      d4:	ldr	r0, [fp, #-4]
      d8:	movw	r1, #0
      dc:	movt	r1, #0
      e0:	add	r0, r1, r0, lsl #2
      e4:	ldr	r0, [r0, #4]
      e8:	add	r0, r0, #1
      ec:	lsl	r2, r0, #2
      f0:	mvn	r0, #0
      f4:	movw	r1, #0
      f8:	movt	r1, #0
      fc:	movw	r3, #0
     100:	movt	r3, #0
     104:	movw	ip, #61	; 0x3d
     108:	str	ip, [sp]
     10c:	bl	0 <coda_set_error>
     110:	movw	r0, #0
     114:	movt	r0, #0
     118:	blx	r0
     11c:	ldr	r0, [fp, #-8]
     120:	ldr	r1, [fp, #-4]
     124:	movw	r2, #0
     128:	movt	r2, #0
     12c:	add	r1, r2, r1, lsl #2
     130:	ldr	r1, [r1, #4]
     134:	add	r1, r1, #1
     138:	lsl	r2, r1, #2
     13c:	movw	r1, #0
     140:	and	r1, r1, #255	; 0xff
     144:	bl	0 <memset>
     148:	movw	r0, #0
     14c:	str	r0, [fp, #-12]
     150:	ldr	r0, [fp, #-12]
     154:	ldr	r1, [fp, #-4]
     158:	movw	r2, #0
     15c:	movt	r2, #0
     160:	add	r1, r2, r1, lsl #2
     164:	ldr	r1, [r1, #140]	; 0x8c
     168:	add	r1, r2, r1, lsl #3
     16c:	ldr	r2, [r1, #232]	; 0xe8
     170:	ldr	r1, [r1, #236]	; 0xec
     174:	subs	r2, r0, r2
     178:	rscs	r0, r1, r0, asr #31
     17c:	bge	1f0 <print_all_distinct_dims+0x1cc>
     180:	b	184 <print_all_distinct_dims+0x160>
     184:	ldr	r0, [fp, #-4]
     188:	movw	r1, #0
     18c:	movt	r1, #0
     190:	add	r0, r1, r0, lsl #2
     194:	ldr	r0, [r0, #108]	; 0x6c
     198:	ldr	r1, [fp, #-12]
     19c:	add	r0, r0, r1, lsl #2
     1a0:	ldr	r0, [r0]
     1a4:	cmp	r0, #0
     1a8:	blt	1dc <print_all_distinct_dims+0x1b8>
     1ac:	ldr	r0, [fp, #-8]
     1b0:	ldr	r1, [fp, #-4]
     1b4:	movw	r2, #0
     1b8:	movt	r2, #0
     1bc:	add	r1, r2, r1, lsl #2
     1c0:	ldr	r1, [r1, #108]	; 0x6c
     1c4:	ldr	r2, [fp, #-12]
     1c8:	ldr	r1, [r1, r2, lsl #2]
     1cc:	add	r0, r0, r1, lsl #2
     1d0:	ldr	r1, [r0]
     1d4:	add	r1, r1, #1
     1d8:	str	r1, [r0]
     1dc:	b	1e0 <print_all_distinct_dims+0x1bc>
     1e0:	ldr	r0, [fp, #-12]
     1e4:	add	r0, r0, #1
     1e8:	str	r0, [fp, #-12]
     1ec:	b	150 <print_all_distinct_dims+0x12c>
     1f0:	movw	r0, #0
     1f4:	movt	r0, #0
     1f8:	add	r0, r0, #36	; 0x24
     1fc:	ldr	r1, [fp, #-4]
     200:	add	r1, r1, #1
     204:	movw	r2, #0
     208:	movt	r2, #0
     20c:	str	r0, [fp, #-16]
     210:	mov	r0, r2
     214:	bl	0 <printf>
     218:	ldr	r1, [fp, #-4]
     21c:	movw	r2, #0
     220:	movt	r2, #0
     224:	add	r1, r2, r1, lsl #2
     228:	add	r1, r1, #36	; 0x24
     22c:	ldr	r1, [r1]
     230:	str	r1, [fp, #-12]
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	add	r0, r0, #4
     240:	ldr	r1, [fp, #-12]
     244:	ldr	r2, [fp, #-4]
     248:	movw	r3, #0
     24c:	movt	r3, #0
     250:	add	r2, r3, r2, lsl #2
     254:	add	r2, r2, #4
     258:	ldr	r2, [r2]
     25c:	cmp	r1, r2
     260:	bge	2a0 <print_all_distinct_dims+0x27c>
     264:	ldr	r0, [fp, #-8]
     268:	ldr	r1, [fp, #-12]
     26c:	add	r0, r0, r1, lsl #2
     270:	ldr	r0, [r0]
     274:	cmp	r0, #0
     278:	ble	28c <print_all_distinct_dims+0x268>
     27c:	ldr	r1, [fp, #-12]
     280:	movw	r0, #0
     284:	movt	r0, #0
     288:	bl	0 <printf>
     28c:	b	290 <print_all_distinct_dims+0x26c>
     290:	ldr	r0, [fp, #-12]
     294:	add	r0, r0, #1
     298:	str	r0, [fp, #-12]
     29c:	b	234 <print_all_distinct_dims+0x210>
     2a0:	movw	r0, #0
     2a4:	movt	r0, #0
     2a8:	add	r0, r0, #36	; 0x24
     2ac:	ldr	r1, [fp, #-4]
     2b0:	movw	r2, #0
     2b4:	movt	r2, #0
     2b8:	add	r1, r2, r1, lsl #2
     2bc:	ldr	r1, [r1, #4]
     2c0:	movw	r3, #0
     2c4:	movt	r3, #0
     2c8:	str	r0, [sp, #20]
     2cc:	mov	r0, r3
     2d0:	str	r2, [sp, #16]
     2d4:	bl	0 <printf>
     2d8:	movw	r1, #0
     2dc:	movt	r1, #0
     2e0:	str	r0, [sp, #12]
     2e4:	mov	r0, r1
     2e8:	bl	0 <printf>
     2ec:	ldr	r1, [fp, #-4]
     2f0:	ldr	r2, [sp, #16]
     2f4:	add	r1, r2, r1, lsl #2
     2f8:	add	r1, r1, #36	; 0x24
     2fc:	ldr	r1, [r1]
     300:	str	r1, [fp, #-12]
     304:	movw	r0, #0
     308:	movt	r0, #0
     30c:	add	r0, r0, #4
     310:	ldr	r1, [fp, #-12]
     314:	ldr	r2, [fp, #-4]
     318:	movw	r3, #0
     31c:	movt	r3, #0
     320:	add	r2, r3, r2, lsl #2
     324:	add	r2, r2, #4
     328:	ldr	r2, [r2]
     32c:	cmp	r1, r2
     330:	bge	37c <print_all_distinct_dims+0x358>
     334:	ldr	r0, [fp, #-8]
     338:	ldr	r1, [fp, #-12]
     33c:	add	r0, r0, r1, lsl #2
     340:	ldr	r0, [r0]
     344:	cmp	r0, #0
     348:	ble	368 <print_all_distinct_dims+0x344>
     34c:	ldr	r0, [fp, #-8]
     350:	ldr	r1, [fp, #-12]
     354:	add	r0, r0, r1, lsl #2
     358:	ldr	r1, [r0]
     35c:	movw	r0, #0
     360:	movt	r0, #0
     364:	bl	0 <printf>
     368:	b	36c <print_all_distinct_dims+0x348>
     36c:	ldr	r0, [fp, #-12]
     370:	add	r0, r0, #1
     374:	str	r0, [fp, #-12]
     378:	b	304 <print_all_distinct_dims+0x2e0>
     37c:	ldr	r0, [fp, #-8]
     380:	ldr	r1, [fp, #-4]
     384:	movw	r2, #0
     388:	movt	r2, #0
     38c:	add	r1, r2, r1, lsl #2
     390:	ldr	r1, [r1, #4]
     394:	add	r0, r0, r1, lsl #2
     398:	ldr	r1, [r0]
     39c:	movw	r0, #0
     3a0:	movt	r0, #0
     3a4:	bl	0 <printf>
     3a8:	movw	r1, #0
     3ac:	movt	r1, #0
     3b0:	str	r0, [sp, #8]
     3b4:	mov	r0, r1
     3b8:	bl	0 <printf>
     3bc:	ldr	r1, [fp, #-8]
     3c0:	str	r0, [sp, #4]
     3c4:	mov	r0, r1
     3c8:	bl	0 <free>
     3cc:	mov	sp, fp
     3d0:	pop	{fp, pc}

000003d4 <dim_enter_array>:
     3d4:	push	{r4, r5, fp, lr}
     3d8:	add	fp, sp, #8
     3dc:	sub	sp, sp, #168	; 0xa8
     3e0:	movw	r0, #0
     3e4:	movt	r0, #0
     3e8:	add	r0, r0, #8
     3ec:	movw	r1, #0
     3f0:	movt	r1, #0
     3f4:	ldr	r2, [r1, #3360]	; 0xd20
     3f8:	add	r2, r2, r2, lsl #2
     3fc:	add	r2, r1, r2, lsl #4
     400:	add	r2, r2, #800	; 0x320
     404:	str	r2, [fp, #-16]
     408:	ldr	r2, [r1, #136]	; 0x88
     40c:	add	r1, r1, r2, lsl #2
     410:	add	r1, r1, #8
     414:	ldr	r1, [r1]
     418:	str	r0, [sp, #56]	; 0x38
     41c:	mov	r0, r1
     420:	sub	r1, fp, #12
     424:	bl	0 <coda_type_get_class>
     428:	cmp	r0, #0
     42c:	beq	43c <dim_enter_array+0x68>
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	blx	r0
     43c:	ldr	r0, [fp, #-12]
     440:	sub	r0, r0, #1
     444:	cmp	r0, #5
     448:	str	r0, [sp, #52]	; 0x34
     44c:	bhi	6b0 <dim_enter_array+0x2dc>
     450:	add	r0, pc, #8
     454:	ldr	r1, [sp, #52]	; 0x34
     458:	ldr	r0, [r0, r1, lsl #2]
     45c:	mov	pc, r0
     460:	.word	0x00000478
     464:	.word	0x000006b0
     468:	.word	0x000006b0
     46c:	.word	0x000005b0
     470:	.word	0x00000614
     474:	.word	0x00000518
     478:	sub	r2, fp, #80	; 0x50
     47c:	movw	r0, #0
     480:	movt	r0, #0
     484:	add	r0, r0, #8
     488:	movw	r1, #0
     48c:	movt	r1, #0
     490:	ldr	r3, [r1, #136]	; 0x88
     494:	add	r1, r1, r3, lsl #2
     498:	add	r1, r1, #8
     49c:	ldr	r1, [r1]
     4a0:	str	r0, [sp, #48]	; 0x30
     4a4:	mov	r0, r1
     4a8:	sub	r1, fp, #84	; 0x54
     4ac:	bl	0 <coda_type_get_array_dim>
     4b0:	cmp	r0, #0
     4b4:	beq	4c4 <dim_enter_array+0xf0>
     4b8:	movw	r0, #0
     4bc:	movt	r0, #0
     4c0:	blx	r0
     4c4:	ldr	r0, [fp, #-84]	; 0xffffffac
     4c8:	ldr	r1, [fp, #-16]
     4cc:	str	r0, [r1, #4]
     4d0:	movw	r0, #0
     4d4:	str	r0, [fp, #-48]	; 0xffffffd0
     4d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     4dc:	ldr	r1, [fp, #-84]	; 0xffffffac
     4e0:	cmp	r0, r1
     4e4:	bge	514 <dim_enter_array+0x140>
     4e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
     4ec:	sub	r1, fp, #80	; 0x50
     4f0:	ldr	r1, [r1, r0, lsl #2]
     4f4:	ldr	r2, [fp, #-16]
     4f8:	add	r2, r2, #8
     4fc:	add	r0, r2, r0, lsl #2
     500:	str	r1, [r0]
     504:	ldr	r0, [fp, #-48]	; 0xffffffd0
     508:	add	r0, r0, #1
     50c:	str	r0, [fp, #-48]	; 0xffffffd0
     510:	b	4d8 <dim_enter_array+0x104>
     514:	b	6d0 <dim_enter_array+0x2fc>
     518:	movw	r0, #0
     51c:	movt	r0, #0
     520:	add	r0, r0, #8
     524:	movw	r1, #0
     528:	movt	r1, #0
     52c:	ldr	r2, [r1, #136]	; 0x88
     530:	add	r1, r1, r2, lsl #2
     534:	add	r1, r1, #8
     538:	ldr	r1, [r1]
     53c:	str	r0, [sp, #44]	; 0x2c
     540:	mov	r0, r1
     544:	add	r1, sp, #88	; 0x58
     548:	bl	0 <coda_type_get_special_type>
     54c:	cmp	r0, #0
     550:	beq	560 <dim_enter_array+0x18c>
     554:	movw	r0, #0
     558:	movt	r0, #0
     55c:	blx	r0
     560:	ldr	r0, [sp, #88]	; 0x58
     564:	cmp	r0, #3
     568:	bne	58c <dim_enter_array+0x1b8>
     56c:	b	570 <dim_enter_array+0x19c>
     570:	ldr	r0, [fp, #-16]
     574:	movw	r1, #1
     578:	str	r1, [r0, #4]
     57c:	ldr	r0, [fp, #-16]
     580:	movw	r1, #2
     584:	str	r1, [r0, #8]
     588:	b	5ac <dim_enter_array+0x1d8>
     58c:	movw	r0, #0
     590:	movt	r0, #0
     594:	movw	r1, #0
     598:	movt	r1, #0
     59c:	movw	r2, #349	; 0x15d
     5a0:	movw	r3, #0
     5a4:	movt	r3, #0
     5a8:	bl	0 <__assert_fail>
     5ac:	b	6d0 <dim_enter_array+0x2fc>
     5b0:	movw	r0, #0
     5b4:	movt	r0, #0
     5b8:	add	r0, r0, #8
     5bc:	movw	r1, #0
     5c0:	movt	r1, #0
     5c4:	ldr	r2, [r1, #136]	; 0x88
     5c8:	add	r1, r1, r2, lsl #2
     5cc:	add	r1, r1, #8
     5d0:	ldr	r1, [r1]
     5d4:	str	r0, [sp, #40]	; 0x28
     5d8:	mov	r0, r1
     5dc:	add	r1, sp, #84	; 0x54
     5e0:	bl	0 <coda_type_get_string_length>
     5e4:	cmp	r0, #0
     5e8:	beq	5f8 <dim_enter_array+0x224>
     5ec:	movw	r0, #0
     5f0:	movt	r0, #0
     5f4:	blx	r0
     5f8:	ldr	r0, [fp, #-16]
     5fc:	movw	r1, #1
     600:	str	r1, [r0, #4]
     604:	ldr	r0, [sp, #84]	; 0x54
     608:	ldr	r1, [fp, #-16]
     60c:	str	r0, [r1, #8]
     610:	b	6d0 <dim_enter_array+0x2fc>
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	add	r0, r0, #8
     620:	movw	r1, #0
     624:	movt	r1, #0
     628:	ldr	r2, [r1, #136]	; 0x88
     62c:	add	r1, r1, r2, lsl #2
     630:	add	r1, r1, #8
     634:	ldr	r1, [r1]
     638:	str	r0, [sp, #36]	; 0x24
     63c:	mov	r0, r1
     640:	add	r1, sp, #72	; 0x48
     644:	bl	0 <coda_type_get_bit_size>
     648:	cmp	r0, #0
     64c:	beq	65c <dim_enter_array+0x288>
     650:	movw	r0, #0
     654:	movt	r0, #0
     658:	blx	r0
     65c:	ldr	r0, [fp, #-16]
     660:	mov	r1, #1
     664:	str	r1, [r0, #4]
     668:	ldr	r0, [sp, #76]	; 0x4c
     66c:	cmp	r0, #0
     670:	bmi	6a0 <dim_enter_array+0x2cc>
     674:	b	678 <dim_enter_array+0x2a4>
     678:	ldr	r0, [sp, #72]	; 0x48
     67c:	ldr	r1, [sp, #76]	; 0x4c
     680:	lsr	r2, r0, #3
     684:	orr	r1, r2, r1, lsl #29
     688:	add	r2, r1, #1
     68c:	tst	r0, #7
     690:	movne	r1, r2
     694:	ldr	r0, [fp, #-16]
     698:	str	r1, [r0, #8]
     69c:	b	6ac <dim_enter_array+0x2d8>
     6a0:	ldr	r0, [fp, #-16]
     6a4:	mvn	r1, #0
     6a8:	str	r1, [r0, #8]
     6ac:	b	6d0 <dim_enter_array+0x2fc>
     6b0:	movw	r0, #0
     6b4:	movt	r0, #0
     6b8:	movw	r1, #0
     6bc:	movt	r1, #0
     6c0:	movw	r2, #386	; 0x182
     6c4:	movw	r3, #0
     6c8:	movt	r3, #0
     6cc:	bl	0 <__assert_fail>
     6d0:	movw	r0, #0
     6d4:	movt	r0, #0
     6d8:	ldr	r0, [r0]
     6dc:	cmp	r0, #0
     6e0:	bne	708 <dim_enter_array+0x334>
     6e4:	ldr	r0, [fp, #-16]
     6e8:	mvn	r1, #0
     6ec:	str	r1, [r0]
     6f0:	ldr	r0, [fp, #-16]
     6f4:	movw	r1, #0
     6f8:	str	r1, [r0, #40]	; 0x28
     6fc:	ldr	r0, [fp, #-16]
     700:	str	r1, [r0, #44]	; 0x2c
     704:	b	1140 <dim_enter_array+0xd6c>
     708:	movw	r0, #0
     70c:	movt	r0, #0
     710:	ldr	r1, [r0]
     714:	str	r1, [fp, #-44]	; 0xffffffd4
     718:	ldr	r1, [fp, #-44]	; 0xffffffd4
     71c:	ldr	r2, [fp, #-16]
     720:	str	r1, [r2]
     724:	ldr	r0, [r0]
     728:	ldr	r1, [fp, #-16]
     72c:	ldr	r1, [r1, #4]
     730:	add	r0, r0, r1
     734:	cmp	r0, #8
     738:	bgt	740 <dim_enter_array+0x36c>
     73c:	b	760 <dim_enter_array+0x38c>
     740:	movw	r0, #0
     744:	movt	r0, #0
     748:	movw	r1, #0
     74c:	movt	r1, #0
     750:	movw	r2, #402	; 0x192
     754:	movw	r3, #0
     758:	movt	r3, #0
     75c:	bl	0 <__assert_fail>
     760:	ldr	r0, [fp, #-16]
     764:	ldr	r0, [r0, #4]
     768:	movw	r1, #0
     76c:	movt	r1, #0
     770:	ldr	r2, [r1]
     774:	add	r0, r2, r0
     778:	str	r0, [r1]
     77c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     780:	cmp	r0, #0
     784:	ble	7c4 <dim_enter_array+0x3f0>
     788:	ldr	r0, [fp, #-44]	; 0xffffffd4
     78c:	movw	r1, #0
     790:	movt	r1, #0
     794:	add	r0, r1, r0, lsl #3
     798:	ldr	r2, [r0, #232]	; 0xe8
     79c:	ldr	r0, [r0, #236]	; 0xec
     7a0:	str	r0, [fp, #-20]	; 0xffffffec
     7a4:	str	r2, [fp, #-24]	; 0xffffffe8
     7a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     7ac:	add	r0, r1, r0, lsl #3
     7b0:	ldr	r1, [r0, #296]	; 0x128
     7b4:	ldr	r0, [r0, #300]	; 0x12c
     7b8:	str	r0, [fp, #-28]	; 0xffffffe4
     7bc:	str	r1, [fp, #-32]	; 0xffffffe0
     7c0:	b	7dc <dim_enter_array+0x408>
     7c4:	mov	r0, #0
     7c8:	str	r0, [fp, #-20]	; 0xffffffec
     7cc:	mov	r1, #1
     7d0:	str	r1, [fp, #-24]	; 0xffffffe8
     7d4:	str	r0, [fp, #-28]	; 0xffffffe4
     7d8:	str	r1, [fp, #-32]	; 0xffffffe0
     7dc:	mov	r0, #0
     7e0:	str	r0, [fp, #-36]	; 0xffffffdc
     7e4:	str	r0, [fp, #-40]	; 0xffffffd8
     7e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     7ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
     7f0:	subs	r0, r0, #1
     7f4:	sbcs	r1, r1, #0
     7f8:	blt	898 <dim_enter_array+0x4c4>
     7fc:	b	800 <dim_enter_array+0x42c>
     800:	movw	r0, #0
     804:	str	r0, [fp, #-48]	; 0xffffffd0
     808:	ldr	r0, [fp, #-48]	; 0xffffffd0
     80c:	ldr	r1, [fp, #-16]
     810:	ldr	r1, [r1, #4]
     814:	cmp	r0, r1
     818:	bge	894 <dim_enter_array+0x4c0>
     81c:	ldr	r0, [fp, #-16]
     820:	ldr	r1, [fp, #-48]	; 0xffffffd0
     824:	add	r0, r0, r1, lsl #2
     828:	ldr	r0, [r0, #8]
     82c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     830:	add	r1, r2, r1
     834:	movw	r2, #0
     838:	movt	r2, #0
     83c:	add	r1, r2, r1, lsl #2
     840:	str	r0, [r1, #4]
     844:	ldr	r0, [fp, #-44]	; 0xffffffd4
     848:	ldr	r1, [fp, #-48]	; 0xffffffd0
     84c:	add	r0, r0, r1
     850:	add	r0, r2, r0, lsl #2
     854:	mov	r1, #0
     858:	str	r1, [r0, #72]	; 0x48
     85c:	ldr	r0, [fp, #-16]
     860:	add	r0, r0, #8
     864:	ldr	r1, [fp, #-48]	; 0xffffffd0
     868:	add	r0, r0, r1, lsl #2
     86c:	ldr	r0, [r0]
     870:	cmn	r0, #1
     874:	bne	880 <dim_enter_array+0x4ac>
     878:	movw	r0, #1
     87c:	str	r0, [fp, #-36]	; 0xffffffdc
     880:	b	884 <dim_enter_array+0x4b0>
     884:	ldr	r0, [fp, #-48]	; 0xffffffd0
     888:	add	r0, r0, #1
     88c:	str	r0, [fp, #-48]	; 0xffffffd0
     890:	b	808 <dim_enter_array+0x434>
     894:	b	910 <dim_enter_array+0x53c>
     898:	movw	r0, #0
     89c:	str	r0, [fp, #-48]	; 0xffffffd0
     8a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8a4:	ldr	r1, [fp, #-16]
     8a8:	ldr	r1, [r1, #4]
     8ac:	cmp	r0, r1
     8b0:	bge	90c <dim_enter_array+0x538>
     8b4:	movw	r0, #0
     8b8:	movt	r0, #0
     8bc:	add	r0, r0, #72	; 0x48
     8c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
     8c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
     8c8:	add	r1, r1, r2
     8cc:	movw	r2, #0
     8d0:	movt	r2, #0
     8d4:	add	r1, r2, r1, lsl #2
     8d8:	mov	r3, #0
     8dc:	str	r3, [r1, #4]
     8e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
     8e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     8e8:	add	r1, r1, r3
     8ec:	add	r1, r2, r1, lsl #2
     8f0:	add	r1, r1, #72	; 0x48
     8f4:	movw	r2, #0
     8f8:	str	r2, [r1]
     8fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
     900:	add	r0, r0, #1
     904:	str	r0, [fp, #-48]	; 0xffffffd0
     908:	b	8a0 <dim_enter_array+0x4cc>
     90c:	b	910 <dim_enter_array+0x53c>
     910:	ldr	r0, [fp, #-36]	; 0xffffffdc
     914:	cmp	r0, #0
     918:	beq	c30 <dim_enter_array+0x85c>
     91c:	movw	r0, #0
     920:	str	r0, [fp, #-48]	; 0xffffffd0
     924:	ldr	r0, [fp, #-48]	; 0xffffffd0
     928:	ldr	r1, [fp, #-16]
     92c:	ldr	r1, [r1, #4]
     930:	cmp	r0, r1
     934:	bge	ac0 <dim_enter_array+0x6ec>
     938:	ldr	r0, [fp, #-16]
     93c:	add	r0, r0, #8
     940:	ldr	r1, [fp, #-48]	; 0xffffffd0
     944:	add	r0, r0, r1, lsl #2
     948:	ldr	r0, [r0]
     94c:	cmn	r0, #1
     950:	bne	a64 <dim_enter_array+0x690>
     954:	movw	r0, #0
     958:	movt	r0, #0
     95c:	add	r0, r0, #108	; 0x6c
     960:	ldr	r1, [fp, #-44]	; 0xffffffd4
     964:	ldr	r2, [fp, #-48]	; 0xffffffd0
     968:	add	r2, r1, r2
     96c:	movw	r3, #0
     970:	movt	r3, #0
     974:	add	r2, r3, r2, lsl #2
     978:	str	r1, [r2, #140]	; 0x8c
     97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     980:	lsl	r1, r1, #2
     984:	str	r0, [sp, #32]
     988:	mov	r0, r1
     98c:	str	r3, [sp, #28]
     990:	bl	0 <malloc>
     994:	ldr	r1, [fp, #-44]	; 0xffffffd4
     998:	ldr	r2, [fp, #-48]	; 0xffffffd0
     99c:	add	r1, r1, r2
     9a0:	ldr	r2, [sp, #28]
     9a4:	add	r3, r2, #108	; 0x6c
     9a8:	str	r0, [r3, r1, lsl #2]
     9ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
     9b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     9b4:	add	r0, r0, r1
     9b8:	add	r0, r3, r0, lsl #2
     9bc:	ldr	r0, [r0]
     9c0:	movw	r1, #0
     9c4:	cmp	r0, r1
     9c8:	bne	a00 <dim_enter_array+0x62c>
     9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9d0:	lsl	r2, r0, #2
     9d4:	mvn	r0, #0
     9d8:	movw	r1, #0
     9dc:	movt	r1, #0
     9e0:	movw	r3, #0
     9e4:	movt	r3, #0
     9e8:	movw	ip, #456	; 0x1c8
     9ec:	str	ip, [sp]
     9f0:	bl	0 <coda_set_error>
     9f4:	movw	r0, #0
     9f8:	movt	r0, #0
     9fc:	blx	r0
     a00:	movw	r0, #0
     a04:	str	r0, [sp, #68]	; 0x44
     a08:	ldr	r0, [sp, #68]	; 0x44
     a0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     a10:	ldr	r2, [fp, #-20]	; 0xffffffec
     a14:	subs	r1, r0, r1
     a18:	rscs	r0, r2, r0, asr #31
     a1c:	bge	a60 <dim_enter_array+0x68c>
     a20:	b	a24 <dim_enter_array+0x650>
     a24:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a28:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a2c:	add	r0, r0, r1
     a30:	movw	r1, #0
     a34:	movt	r1, #0
     a38:	add	r0, r1, r0, lsl #2
     a3c:	ldr	r0, [r0, #108]	; 0x6c
     a40:	ldr	r1, [sp, #68]	; 0x44
     a44:	add	r0, r0, r1, lsl #2
     a48:	mvn	r1, #0
     a4c:	str	r1, [r0]
     a50:	ldr	r0, [sp, #68]	; 0x44
     a54:	add	r0, r0, #1
     a58:	str	r0, [sp, #68]	; 0x44
     a5c:	b	a08 <dim_enter_array+0x634>
     a60:	b	aac <dim_enter_array+0x6d8>
     a64:	movw	r0, #0
     a68:	movt	r0, #0
     a6c:	add	r0, r0, #108	; 0x6c
     a70:	ldr	r1, [fp, #-44]	; 0xffffffd4
     a74:	ldr	r2, [fp, #-48]	; 0xffffffd0
     a78:	add	r1, r1, r2
     a7c:	movw	r2, #0
     a80:	movt	r2, #0
     a84:	add	r1, r2, r1, lsl #2
     a88:	mov	r3, #0
     a8c:	str	r3, [r1, #140]	; 0x8c
     a90:	ldr	r1, [fp, #-44]	; 0xffffffd4
     a94:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a98:	add	r1, r1, r3
     a9c:	add	r1, r2, r1, lsl #2
     aa0:	add	r1, r1, #108	; 0x6c
     aa4:	movw	r2, #0
     aa8:	str	r2, [r1]
     aac:	b	ab0 <dim_enter_array+0x6dc>
     ab0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ab4:	add	r0, r0, #1
     ab8:	str	r0, [fp, #-48]	; 0xffffffd0
     abc:	b	924 <dim_enter_array+0x550>
     ac0:	ldr	r0, [fp, #-16]
     ac4:	movw	r1, #0
     ac8:	str	r1, [r0, #44]	; 0x2c
     acc:	mov	r0, r1
     ad0:	str	r1, [sp, #24]
     ad4:	ldr	r2, [sp, #24]
     ad8:	bl	1148 <get_all_dims_for_array>
     adc:	movw	r0, #0
     ae0:	str	r0, [fp, #-48]	; 0xffffffd0
     ae4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ae8:	ldr	r1, [fp, #-16]
     aec:	ldr	r1, [r1, #4]
     af0:	cmp	r0, r1
     af4:	bge	c2c <dim_enter_array+0x858>
     af8:	ldr	r0, [fp, #-16]
     afc:	add	r0, r0, #8
     b00:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b04:	add	r0, r0, r1, lsl #2
     b08:	ldr	r0, [r0]
     b0c:	cmn	r0, #1
     b10:	bne	c18 <dim_enter_array+0x844>
     b14:	movw	r0, #0
     b18:	movt	r0, #0
     b1c:	add	r0, r0, #36	; 0x24
     b20:	ldr	r1, [fp, #-44]	; 0xffffffd4
     b24:	ldr	r2, [fp, #-48]	; 0xffffffd0
     b28:	add	r1, r1, r2
     b2c:	movw	r2, #0
     b30:	movt	r2, #0
     b34:	add	r1, r2, r1, lsl #2
     b38:	ldr	r2, [r1, #4]
     b3c:	add	r1, r1, #36	; 0x24
     b40:	ldr	r1, [r1]
     b44:	cmp	r2, r1
     b48:	beq	b84 <dim_enter_array+0x7b0>
     b4c:	movw	r0, #0
     b50:	movt	r0, #0
     b54:	add	r0, r0, #72	; 0x48
     b58:	ldr	r1, [fp, #-44]	; 0xffffffd4
     b5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
     b60:	add	r1, r1, r2
     b64:	movw	r2, #0
     b68:	movt	r2, #0
     b6c:	add	r1, r2, r1, lsl #2
     b70:	add	r1, r1, #72	; 0x48
     b74:	movw	r2, #1
     b78:	str	r2, [r1]
     b7c:	str	r2, [fp, #-40]	; 0xffffffd8
     b80:	b	c14 <dim_enter_array+0x840>
     b84:	movw	r0, #0
     b88:	movt	r0, #0
     b8c:	add	r0, r0, #140	; 0x8c
     b90:	ldr	r1, [fp, #-44]	; 0xffffffd4
     b94:	ldr	r2, [fp, #-48]	; 0xffffffd0
     b98:	add	r1, r1, r2
     b9c:	movw	r2, #0
     ba0:	movt	r2, #0
     ba4:	add	r1, r2, r1, lsl #2
     ba8:	mov	r3, #0
     bac:	str	r3, [r1, #72]	; 0x48
     bb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
     bb4:	ldr	ip, [fp, #-48]	; 0xffffffd0
     bb8:	add	r1, r1, ip
     bbc:	add	ip, r2, #108	; 0x6c
     bc0:	ldr	r1, [ip, r1, lsl #2]
     bc4:	str	r0, [sp, #20]
     bc8:	mov	r0, r1
     bcc:	str	r2, [sp, #16]
     bd0:	str	r3, [sp, #12]
     bd4:	str	ip, [sp, #8]
     bd8:	bl	0 <free>
     bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     be0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     be4:	add	r0, r0, r1
     be8:	ldr	r1, [sp, #12]
     bec:	ldr	r2, [sp, #8]
     bf0:	str	r1, [r2, r0, lsl #2]
     bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     bf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     bfc:	add	r0, r0, r3
     c00:	ldr	r3, [sp, #16]
     c04:	add	r0, r3, r0, lsl #2
     c08:	add	r0, r0, #140	; 0x8c
     c0c:	movw	ip, #0
     c10:	str	ip, [r0]
     c14:	b	c18 <dim_enter_array+0x844>
     c18:	b	c1c <dim_enter_array+0x848>
     c1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     c20:	add	r0, r0, #1
     c24:	str	r0, [fp, #-48]	; 0xffffffd0
     c28:	b	ae4 <dim_enter_array+0x710>
     c2c:	b	c30 <dim_enter_array+0x85c>
     c30:	movw	r0, #0
     c34:	movt	r0, #0
     c38:	movw	r1, #0
     c3c:	str	r1, [r0, #68]	; 0x44
     c40:	mvn	r2, #0
     c44:	str	r2, [r0, #104]	; 0x68
     c48:	str	r1, [fp, #-48]	; 0xffffffd0
     c4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     c50:	movw	r1, #0
     c54:	movt	r1, #0
     c58:	ldr	r1, [r1]
     c5c:	cmp	r0, r1
     c60:	bge	cbc <dim_enter_array+0x8e8>
     c64:	movw	r0, #0
     c68:	movt	r0, #0
     c6c:	add	r0, r0, #72	; 0x48
     c70:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c74:	movw	r2, #0
     c78:	movt	r2, #0
     c7c:	add	r1, r2, r1, lsl #2
     c80:	add	r1, r1, #72	; 0x48
     c84:	ldr	r1, [r1]
     c88:	cmp	r1, #0
     c8c:	beq	ca8 <dim_enter_array+0x8d4>
     c90:	movw	r0, #1
     c94:	movw	r1, #0
     c98:	movt	r1, #0
     c9c:	str	r0, [r1, #68]	; 0x44
     ca0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ca4:	str	r0, [r1, #104]	; 0x68
     ca8:	b	cac <dim_enter_array+0x8d8>
     cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     cb0:	add	r0, r0, #1
     cb4:	str	r0, [fp, #-48]	; 0xffffffd0
     cb8:	b	c4c <dim_enter_array+0x878>
     cbc:	ldr	r0, [fp, #-16]
     cc0:	movw	r1, #1
     cc4:	str	r1, [r0, #40]	; 0x28
     cc8:	movw	r0, #0
     ccc:	str	r0, [fp, #-48]	; 0xffffffd0
     cd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     cd4:	ldr	r1, [fp, #-16]
     cd8:	ldr	r1, [r1, #4]
     cdc:	cmp	r0, r1
     ce0:	bge	dbc <dim_enter_array+0x9e8>
     ce4:	movw	r0, #0
     ce8:	movt	r0, #0
     cec:	add	r0, r0, #4
     cf0:	ldr	r1, [fp, #-44]	; 0xffffffd4
     cf4:	ldr	r2, [fp, #-48]	; 0xffffffd0
     cf8:	add	r1, r1, r2
     cfc:	movw	r2, #0
     d00:	movt	r2, #0
     d04:	add	r1, r2, r1, lsl #2
     d08:	add	r1, r1, #4
     d0c:	ldr	r1, [r1]
     d10:	ldr	r2, [fp, #-16]
     d14:	ldr	r3, [r2, #40]	; 0x28
     d18:	mul	r1, r3, r1
     d1c:	str	r1, [r2, #40]	; 0x28
     d20:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d24:	cmp	r1, #0
     d28:	bne	d68 <dim_enter_array+0x994>
     d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d30:	ldr	r1, [fp, #-20]	; 0xffffffec
     d34:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d38:	movw	r3, #0
     d3c:	movt	r3, #0
     d40:	add	ip, r3, r2, lsl #2
     d44:	ldr	ip, [ip, #4]
     d48:	asr	lr, ip, #31
     d4c:	umull	r4, r5, r0, ip
     d50:	mla	r0, r0, lr, r5
     d54:	mla	r0, r1, ip, r0
     d58:	add	r1, r3, r2, lsl #3
     d5c:	str	r4, [r1, #240]	; 0xf0
     d60:	str	r0, [r1, #244]	; 0xf4
     d64:	b	da8 <dim_enter_array+0x9d4>
     d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d70:	add	r0, r0, r1
     d74:	movw	r1, #0
     d78:	movt	r1, #0
     d7c:	add	r2, r1, r0, lsl #3
     d80:	ldr	r3, [r2, #232]	; 0xe8
     d84:	ldr	ip, [r2, #236]	; 0xec
     d88:	add	r0, r1, r0, lsl #2
     d8c:	ldr	r0, [r0, #4]
     d90:	asr	r1, r0, #31
     d94:	umull	lr, r4, r3, r0
     d98:	mla	r1, r3, r1, r4
     d9c:	mla	r0, ip, r0, r1
     da0:	str	lr, [r2, #240]	; 0xf0
     da4:	str	r0, [r2, #244]	; 0xf4
     da8:	b	dac <dim_enter_array+0x9d8>
     dac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     db0:	add	r0, r0, #1
     db4:	str	r0, [fp, #-48]	; 0xffffffd0
     db8:	b	cd0 <dim_enter_array+0x8fc>
     dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dc0:	cmp	r0, #0
     dc4:	beq	f60 <dim_enter_array+0xb8c>
     dc8:	movw	r0, #0
     dcc:	str	r0, [fp, #-48]	; 0xffffffd0
     dd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     dd4:	ldr	r1, [fp, #-16]
     dd8:	ldr	r1, [r1, #4]
     ddc:	cmp	r0, r1
     de0:	bge	e18 <dim_enter_array+0xa44>
     de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     de8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     dec:	add	r0, r0, r1
     df0:	movw	r1, #0
     df4:	movt	r1, #0
     df8:	add	r0, r1, r0, lsl #3
     dfc:	mov	r1, #0
     e00:	str	r1, [r0, #308]	; 0x134
     e04:	str	r1, [r0, #304]	; 0x130
     e08:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e0c:	add	r0, r0, #1
     e10:	str	r0, [fp, #-48]	; 0xffffffd0
     e14:	b	dd0 <dim_enter_array+0x9fc>
     e18:	movw	r0, #0
     e1c:	str	r0, [sp, #64]	; 0x40
     e20:	ldr	r0, [sp, #64]	; 0x40
     e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
     e28:	ldr	r2, [fp, #-20]	; 0xffffffec
     e2c:	subs	r1, r0, r1
     e30:	rscs	r0, r2, r0, asr #31
     e34:	bge	f5c <dim_enter_array+0xb88>
     e38:	b	e3c <dim_enter_array+0xa68>
     e3c:	movw	r0, #1
     e40:	str	r0, [sp, #60]	; 0x3c
     e44:	movw	r0, #0
     e48:	str	r0, [fp, #-48]	; 0xffffffd0
     e4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e50:	ldr	r1, [fp, #-16]
     e54:	ldr	r1, [r1, #4]
     e58:	cmp	r0, r1
     e5c:	bge	f48 <dim_enter_array+0xb74>
     e60:	movw	r0, #0
     e64:	movt	r0, #0
     e68:	add	r0, r0, #72	; 0x48
     e6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
     e70:	ldr	r2, [fp, #-48]	; 0xffffffd0
     e74:	add	r1, r1, r2
     e78:	movw	r2, #0
     e7c:	movt	r2, #0
     e80:	add	r1, r2, r1, lsl #2
     e84:	add	r1, r1, #72	; 0x48
     e88:	ldr	r1, [r1]
     e8c:	cmp	r1, #0
     e90:	beq	ecc <dim_enter_array+0xaf8>
     e94:	ldr	r0, [fp, #-44]	; 0xffffffd4
     e98:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e9c:	add	r0, r0, r1
     ea0:	movw	r1, #0
     ea4:	movt	r1, #0
     ea8:	add	r0, r1, r0, lsl #2
     eac:	ldr	r0, [r0, #108]	; 0x6c
     eb0:	ldr	r1, [sp, #64]	; 0x40
     eb4:	add	r0, r0, r1, lsl #2
     eb8:	ldr	r0, [r0]
     ebc:	ldr	r1, [sp, #60]	; 0x3c
     ec0:	mul	r0, r1, r0
     ec4:	str	r0, [sp, #60]	; 0x3c
     ec8:	b	f04 <dim_enter_array+0xb30>
     ecc:	movw	r0, #0
     ed0:	movt	r0, #0
     ed4:	add	r0, r0, #4
     ed8:	ldr	r1, [fp, #-44]	; 0xffffffd4
     edc:	ldr	r2, [fp, #-48]	; 0xffffffd0
     ee0:	add	r1, r1, r2
     ee4:	movw	r2, #0
     ee8:	movt	r2, #0
     eec:	add	r1, r2, r1, lsl #2
     ef0:	add	r1, r1, #4
     ef4:	ldr	r1, [r1]
     ef8:	ldr	r2, [sp, #60]	; 0x3c
     efc:	mul	r1, r2, r1
     f00:	str	r1, [sp, #60]	; 0x3c
     f04:	ldr	r0, [sp, #60]	; 0x3c
     f08:	ldr	r1, [fp, #-44]	; 0xffffffd4
     f0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
     f10:	add	r1, r1, r2
     f14:	movw	r2, #0
     f18:	movt	r2, #0
     f1c:	add	r1, r2, r1, lsl #3
     f20:	ldr	r2, [r1, #304]	; 0x130
     f24:	ldr	r3, [r1, #308]	; 0x134
     f28:	adds	r2, r2, r0
     f2c:	adc	r0, r3, r0, asr #31
     f30:	str	r2, [r1, #304]	; 0x130
     f34:	str	r0, [r1, #308]	; 0x134
     f38:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f3c:	add	r0, r0, #1
     f40:	str	r0, [fp, #-48]	; 0xffffffd0
     f44:	b	e4c <dim_enter_array+0xa78>
     f48:	b	f4c <dim_enter_array+0xb78>
     f4c:	ldr	r0, [sp, #64]	; 0x40
     f50:	add	r0, r0, #1
     f54:	str	r0, [sp, #64]	; 0x40
     f58:	b	e20 <dim_enter_array+0xa4c>
     f5c:	b	1008 <dim_enter_array+0xc34>
     f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f64:	ldr	r1, [fp, #-28]	; 0xffffffe4
     f68:	ldr	r2, [fp, #-44]	; 0xffffffd4
     f6c:	movw	r3, #0
     f70:	movt	r3, #0
     f74:	add	ip, r3, r2, lsl #2
     f78:	ldr	ip, [ip, #4]
     f7c:	asr	lr, ip, #31
     f80:	umull	r4, r5, r0, ip
     f84:	mla	r0, r0, lr, r5
     f88:	mla	r0, r1, ip, r0
     f8c:	add	r1, r3, r2, lsl #3
     f90:	str	r4, [r1, #304]	; 0x130
     f94:	str	r0, [r1, #308]	; 0x134
     f98:	movw	r0, #1
     f9c:	str	r0, [fp, #-48]	; 0xffffffd0
     fa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     fa4:	ldr	r1, [fp, #-16]
     fa8:	ldr	r1, [r1, #4]
     fac:	cmp	r0, r1
     fb0:	bge	1004 <dim_enter_array+0xc30>
     fb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     fb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     fbc:	add	r0, r0, r1
     fc0:	movw	r1, #0
     fc4:	movt	r1, #0
     fc8:	add	r2, r1, r0, lsl #3
     fcc:	ldr	r3, [r2, #296]	; 0x128
     fd0:	ldr	ip, [r2, #300]	; 0x12c
     fd4:	add	r0, r1, r0, lsl #2
     fd8:	ldr	r0, [r0, #4]
     fdc:	asr	r1, r0, #31
     fe0:	umull	lr, r4, r3, r0
     fe4:	mla	r1, r3, r1, r4
     fe8:	mla	r0, ip, r0, r1
     fec:	str	lr, [r2, #304]	; 0x130
     ff0:	str	r0, [r2, #308]	; 0x134
     ff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ff8:	add	r0, r0, #1
     ffc:	str	r0, [fp, #-48]	; 0xffffffd0
    1000:	b	fa0 <dim_enter_array+0xbcc>
    1004:	b	1008 <dim_enter_array+0xc34>
    1008:	ldr	r0, [fp, #-44]	; 0xffffffd4
    100c:	ldr	r1, [fp, #-16]
    1010:	ldr	r1, [r1, #4]
    1014:	add	r0, r0, r1
    1018:	movw	r1, #0
    101c:	movt	r1, #0
    1020:	add	r0, r1, r0, lsl #3
    1024:	ldr	r1, [r0, #296]	; 0x128
    1028:	ldr	r0, [r0, #300]	; 0x12c
    102c:	subs	r1, r1, #1
    1030:	sbcs	r0, r0, #0
    1034:	blt	1140 <dim_enter_array+0xd6c>
    1038:	b	103c <dim_enter_array+0xc68>
    103c:	movw	r0, #0
    1040:	movt	r0, #0
    1044:	ldr	r1, [r0]
    1048:	sub	r1, r1, #1
    104c:	add	r2, r0, r1, lsl #2
    1050:	ldr	r2, [r2, #4]
    1054:	asr	r3, r2, #31
    1058:	add	r0, r0, r1, lsl #3
    105c:	str	r2, [r0, #176]	; 0xb0
    1060:	str	r3, [r0, #180]	; 0xb4
    1064:	ldr	r0, [fp, #-16]
    1068:	ldr	r0, [r0, #4]
    106c:	sub	r0, r0, #2
    1070:	str	r0, [fp, #-48]	; 0xffffffd0
    1074:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1078:	cmp	r0, #0
    107c:	blt	10d4 <dim_enter_array+0xd00>
    1080:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1084:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1088:	add	r0, r0, r1
    108c:	movw	r1, #0
    1090:	movt	r1, #0
    1094:	add	r2, r1, r0, lsl #2
    1098:	ldr	r2, [r2, #4]
    109c:	asr	r3, r2, #31
    10a0:	add	r0, r1, r0, lsl #3
    10a4:	ldr	r1, [r0, #184]	; 0xb8
    10a8:	ldr	ip, [r0, #188]	; 0xbc
    10ac:	umull	lr, r4, r2, r1
    10b0:	mla	r2, r2, ip, r4
    10b4:	mla	r1, r3, r1, r2
    10b8:	str	lr, [r0, #176]	; 0xb0
    10bc:	str	r1, [r0, #180]	; 0xb4
    10c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10c4:	mvn	r1, #0
    10c8:	add	r0, r0, r1
    10cc:	str	r0, [fp, #-48]	; 0xffffffd0
    10d0:	b	1074 <dim_enter_array+0xca0>
    10d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10d8:	sub	r0, r0, #1
    10dc:	str	r0, [fp, #-48]	; 0xffffffd0
    10e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    10e4:	cmp	r0, #0
    10e8:	blt	113c <dim_enter_array+0xd68>
    10ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10f0:	movw	r1, #0
    10f4:	movt	r1, #0
    10f8:	add	r1, r1, #176	; 0xb0
    10fc:	mov	r2, r1
    1100:	ldr	r0, [r2, r0, lsl #3]!
    1104:	ldr	r2, [r2, #4]
    1108:	ldr	r3, [fp, #-48]	; 0xffffffd0
    110c:	ldr	r3, [r1, r3, lsl #3]!
    1110:	ldr	ip, [r1, #4]
    1114:	umull	lr, r4, r3, r0
    1118:	mla	r2, r3, r2, r4
    111c:	mla	r0, ip, r0, r2
    1120:	str	lr, [r1]
    1124:	str	r0, [r1, #4]
    1128:	ldr	r0, [fp, #-48]	; 0xffffffd0
    112c:	mvn	r1, #0
    1130:	add	r0, r0, r1
    1134:	str	r0, [fp, #-48]	; 0xffffffd0
    1138:	b	10e0 <dim_enter_array+0xd0c>
    113c:	b	1140 <dim_enter_array+0xd6c>
    1140:	sub	sp, fp, #8
    1144:	pop	{r4, r5, fp, pc}

00001148 <get_all_dims_for_array>:
    1148:	push	{fp, lr}
    114c:	mov	fp, sp
    1150:	sub	sp, sp, #128	; 0x80
    1154:	movw	r3, #0
    1158:	movt	r3, #0
    115c:	add	r3, r3, #144	; 0x90
    1160:	str	r0, [fp, #-4]
    1164:	str	r1, [fp, #-8]
    1168:	str	r2, [fp, #-12]
    116c:	mov	r0, r3
    1170:	sub	r1, fp, #16
    1174:	bl	0 <coda_cursor_get_type_class>
    1178:	cmp	r0, #0
    117c:	beq	118c <get_all_dims_for_array+0x44>
    1180:	movw	r0, #0
    1184:	movt	r0, #0
    1188:	blx	r0
    118c:	ldr	r0, [fp, #-16]
    1190:	cmp	r0, #0
    1194:	str	r0, [sp, #8]
    1198:	beq	1640 <get_all_dims_for_array+0x4f8>
    119c:	b	11a0 <get_all_dims_for_array+0x58>
    11a0:	ldr	r0, [sp, #8]
    11a4:	cmp	r0, #1
    11a8:	beq	11c4 <get_all_dims_for_array+0x7c>
    11ac:	b	11b0 <get_all_dims_for_array+0x68>
    11b0:	ldr	r0, [sp, #8]
    11b4:	sub	r1, r0, #4
    11b8:	cmp	r1, #2
    11bc:	bcc	185c <get_all_dims_for_array+0x714>
    11c0:	b	1a68 <get_all_dims_for_array+0x920>
    11c4:	movw	r0, #0
    11c8:	movt	r0, #0
    11cc:	add	r1, r0, #800	; 0x320
    11d0:	ldr	r2, [fp, #-8]
    11d4:	movw	r3, #80	; 0x50
    11d8:	mul	r2, r2, r3
    11dc:	add	r1, r1, r2
    11e0:	str	r1, [fp, #-20]	; 0xffffffec
    11e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    11e8:	ldr	r1, [r1]
    11ec:	str	r1, [fp, #-24]	; 0xffffffe8
    11f0:	ldr	r1, [fp, #-8]
    11f4:	ldr	r0, [r0, #3360]	; 0xd20
    11f8:	cmp	r1, r0
    11fc:	bne	1430 <get_all_dims_for_array+0x2e8>
    1200:	movw	r0, #0
    1204:	movt	r0, #0
    1208:	add	r0, r0, #144	; 0x90
    120c:	sub	r2, fp, #56	; 0x38
    1210:	sub	r1, fp, #60	; 0x3c
    1214:	bl	0 <coda_cursor_get_array_dim>
    1218:	cmp	r0, #0
    121c:	beq	122c <get_all_dims_for_array+0xe4>
    1220:	movw	r0, #0
    1224:	movt	r0, #0
    1228:	blx	r0
    122c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1230:	ldr	r1, [fp, #-20]	; 0xffffffec
    1234:	ldr	r1, [r1, #4]
    1238:	cmp	r0, r1
    123c:	bne	1244 <get_all_dims_for_array+0xfc>
    1240:	b	1264 <get_all_dims_for_array+0x11c>
    1244:	movw	r0, #0
    1248:	movt	r0, #0
    124c:	movw	r1, #0
    1250:	movt	r1, #0
    1254:	movw	r2, #125	; 0x7d
    1258:	movw	r3, #0
    125c:	movt	r3, #0
    1260:	bl	0 <__assert_fail>
    1264:	movw	r0, #0
    1268:	str	r0, [sp, #64]	; 0x40
    126c:	ldr	r0, [sp, #64]	; 0x40
    1270:	ldr	r1, [fp, #-20]	; 0xffffffec
    1274:	ldr	r1, [r1, #4]
    1278:	cmp	r0, r1
    127c:	bge	142c <get_all_dims_for_array+0x2e4>
    1280:	ldr	r0, [fp, #-20]	; 0xffffffec
    1284:	add	r0, r0, #8
    1288:	ldr	r1, [sp, #64]	; 0x40
    128c:	add	r0, r0, r1, lsl #2
    1290:	ldr	r0, [r0]
    1294:	cmn	r0, #1
    1298:	bne	1418 <get_all_dims_for_array+0x2d0>
    129c:	movw	r0, #0
    12a0:	movt	r0, #0
    12a4:	add	r0, r0, #4
    12a8:	ldr	r1, [sp, #64]	; 0x40
    12ac:	sub	r2, fp, #56	; 0x38
    12b0:	ldr	r2, [r2, r1, lsl #2]
    12b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12b8:	add	r1, r3, r1
    12bc:	movw	r3, #0
    12c0:	movt	r3, #0
    12c4:	add	r1, r3, r1, lsl #2
    12c8:	ldr	r1, [r1, #108]	; 0x6c
    12cc:	ldr	ip, [fp, #-20]	; 0xffffffec
    12d0:	ldr	ip, [ip, #44]	; 0x2c
    12d4:	str	r2, [r1, ip, lsl #2]
    12d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    12dc:	ldr	r2, [sp, #64]	; 0x40
    12e0:	add	r1, r1, r2
    12e4:	add	r1, r3, r1, lsl #2
    12e8:	add	r1, r1, #4
    12ec:	ldr	r1, [r1]
    12f0:	cmn	r1, #1
    12f4:	bne	1348 <get_all_dims_for_array+0x200>
    12f8:	movw	r0, #0
    12fc:	movt	r0, #0
    1300:	add	r0, r0, #36	; 0x24
    1304:	ldr	r1, [sp, #64]	; 0x40
    1308:	sub	r2, fp, #56	; 0x38
    130c:	ldr	r3, [r2, r1, lsl #2]
    1310:	ldr	ip, [fp, #-24]	; 0xffffffe8
    1314:	add	r1, ip, r1
    1318:	movw	ip, #0
    131c:	movt	ip, #0
    1320:	add	r1, ip, r1, lsl #2
    1324:	str	r3, [r1, #4]
    1328:	ldr	r1, [sp, #64]	; 0x40
    132c:	ldr	r2, [r2, r1, lsl #2]
    1330:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1334:	add	r1, r3, r1
    1338:	add	r1, ip, r1, lsl #2
    133c:	add	r1, r1, #36	; 0x24
    1340:	str	r2, [r1]
    1344:	b	1414 <get_all_dims_for_array+0x2cc>
    1348:	ldr	r0, [fp, #-24]	; 0xffffffe8
    134c:	ldr	r1, [sp, #64]	; 0x40
    1350:	add	r0, r0, r1
    1354:	movw	r2, #0
    1358:	movt	r2, #0
    135c:	add	r0, r2, r0, lsl #2
    1360:	ldr	r0, [r0, #4]
    1364:	sub	r2, fp, #56	; 0x38
    1368:	add	r1, r2, r1, lsl #2
    136c:	ldr	r1, [r1]
    1370:	cmp	r0, r1
    1374:	bge	13ac <get_all_dims_for_array+0x264>
    1378:	movw	r0, #0
    137c:	movt	r0, #0
    1380:	add	r0, r0, #4
    1384:	ldr	r1, [sp, #64]	; 0x40
    1388:	sub	r2, fp, #56	; 0x38
    138c:	ldr	r2, [r2, r1, lsl #2]
    1390:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1394:	add	r1, r3, r1
    1398:	movw	r3, #0
    139c:	movt	r3, #0
    13a0:	add	r1, r3, r1, lsl #2
    13a4:	add	r1, r1, #4
    13a8:	str	r2, [r1]
    13ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13b0:	ldr	r1, [sp, #64]	; 0x40
    13b4:	add	r0, r0, r1
    13b8:	movw	r2, #0
    13bc:	movt	r2, #0
    13c0:	add	r0, r2, r0, lsl #2
    13c4:	ldr	r0, [r0, #36]	; 0x24
    13c8:	sub	r2, fp, #56	; 0x38
    13cc:	add	r1, r2, r1, lsl #2
    13d0:	ldr	r1, [r1]
    13d4:	cmp	r0, r1
    13d8:	ble	1410 <get_all_dims_for_array+0x2c8>
    13dc:	movw	r0, #0
    13e0:	movt	r0, #0
    13e4:	add	r0, r0, #36	; 0x24
    13e8:	ldr	r1, [sp, #64]	; 0x40
    13ec:	sub	r2, fp, #56	; 0x38
    13f0:	ldr	r2, [r2, r1, lsl #2]
    13f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13f8:	add	r1, r3, r1
    13fc:	movw	r3, #0
    1400:	movt	r3, #0
    1404:	add	r1, r3, r1, lsl #2
    1408:	add	r1, r1, #36	; 0x24
    140c:	str	r2, [r1]
    1410:	b	1414 <get_all_dims_for_array+0x2cc>
    1414:	b	1418 <get_all_dims_for_array+0x2d0>
    1418:	b	141c <get_all_dims_for_array+0x2d4>
    141c:	ldr	r0, [sp, #64]	; 0x40
    1420:	add	r0, r0, #1
    1424:	str	r0, [sp, #64]	; 0x40
    1428:	b	126c <get_all_dims_for_array+0x124>
    142c:	b	163c <get_all_dims_for_array+0x4f4>
    1430:	ldr	r0, [fp, #-8]
    1434:	cmp	r0, #0
    1438:	bne	1448 <get_all_dims_for_array+0x300>
    143c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1440:	movw	r1, #0
    1444:	str	r1, [r0, #44]	; 0x2c
    1448:	movw	r0, #0
    144c:	movt	r0, #0
    1450:	add	r0, r0, #800	; 0x320
    1454:	ldr	r1, [fp, #-20]	; 0xffffffec
    1458:	ldr	r1, [r1, #44]	; 0x2c
    145c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1460:	ldr	r2, [r2, #40]	; 0x28
    1464:	mul	r1, r1, r2
    1468:	ldr	r2, [fp, #-8]
    146c:	add	r2, r2, #1
    1470:	movw	r3, #80	; 0x50
    1474:	mul	r2, r2, r3
    1478:	add	r0, r0, r2
    147c:	str	r1, [r0, #44]	; 0x2c
    1480:	movw	r0, #1
    1484:	str	r0, [sp, #60]	; 0x3c
    1488:	ldr	r0, [fp, #-24]	; 0xffffffe8
    148c:	str	r0, [sp, #56]	; 0x38
    1490:	ldr	r0, [sp, #56]	; 0x38
    1494:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1498:	ldr	r2, [fp, #-20]	; 0xffffffec
    149c:	ldr	r2, [r2, #4]
    14a0:	add	r1, r1, r2
    14a4:	cmp	r0, r1
    14a8:	bge	1550 <get_all_dims_for_array+0x408>
    14ac:	movw	r0, #0
    14b0:	movt	r0, #0
    14b4:	add	r0, r0, #72	; 0x48
    14b8:	ldr	r1, [sp, #56]	; 0x38
    14bc:	movw	r2, #0
    14c0:	movt	r2, #0
    14c4:	add	r1, r2, r1, lsl #2
    14c8:	add	r1, r1, #72	; 0x48
    14cc:	ldr	r1, [r1]
    14d0:	cmp	r1, #0
    14d4:	beq	150c <get_all_dims_for_array+0x3c4>
    14d8:	ldr	r0, [sp, #56]	; 0x38
    14dc:	movw	r1, #0
    14e0:	movt	r1, #0
    14e4:	add	r0, r1, r0, lsl #2
    14e8:	ldr	r0, [r0, #108]	; 0x6c
    14ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    14f0:	ldr	r1, [r1, #44]	; 0x2c
    14f4:	add	r0, r0, r1, lsl #2
    14f8:	ldr	r0, [r0]
    14fc:	ldr	r1, [sp, #60]	; 0x3c
    1500:	mul	r0, r1, r0
    1504:	str	r0, [sp, #60]	; 0x3c
    1508:	b	153c <get_all_dims_for_array+0x3f4>
    150c:	movw	r0, #0
    1510:	movt	r0, #0
    1514:	add	r0, r0, #4
    1518:	ldr	r1, [sp, #56]	; 0x38
    151c:	movw	r2, #0
    1520:	movt	r2, #0
    1524:	add	r1, r2, r1, lsl #2
    1528:	add	r1, r1, #4
    152c:	ldr	r1, [r1]
    1530:	ldr	r2, [sp, #60]	; 0x3c
    1534:	mul	r1, r2, r1
    1538:	str	r1, [sp, #60]	; 0x3c
    153c:	b	1540 <get_all_dims_for_array+0x3f8>
    1540:	ldr	r0, [sp, #56]	; 0x38
    1544:	add	r0, r0, #1
    1548:	str	r0, [sp, #56]	; 0x38
    154c:	b	1490 <get_all_dims_for_array+0x348>
    1550:	ldr	r0, [sp, #60]	; 0x3c
    1554:	cmp	r0, #0
    1558:	ble	1638 <get_all_dims_for_array+0x4f0>
    155c:	movw	r0, #0
    1560:	movt	r0, #0
    1564:	add	r0, r0, #144	; 0x90
    1568:	bl	0 <coda_cursor_goto_first_array_element>
    156c:	cmp	r0, #0
    1570:	beq	1580 <get_all_dims_for_array+0x438>
    1574:	movw	r0, #0
    1578:	movt	r0, #0
    157c:	blx	r0
    1580:	movw	r0, #0
    1584:	str	r0, [sp, #52]	; 0x34
    1588:	ldr	r0, [sp, #52]	; 0x34
    158c:	ldr	r1, [sp, #60]	; 0x3c
    1590:	cmp	r0, r1
    1594:	bge	1628 <get_all_dims_for_array+0x4e0>
    1598:	ldr	r0, [fp, #-4]
    159c:	add	r0, r0, #1
    15a0:	ldr	r1, [fp, #-8]
    15a4:	add	r1, r1, #1
    15a8:	ldr	r2, [fp, #-12]
    15ac:	bl	1148 <get_all_dims_for_array>
    15b0:	ldr	r0, [sp, #52]	; 0x34
    15b4:	ldr	r1, [sp, #60]	; 0x3c
    15b8:	sub	r1, r1, #1
    15bc:	cmp	r0, r1
    15c0:	bge	1614 <get_all_dims_for_array+0x4cc>
    15c4:	movw	r0, #0
    15c8:	movt	r0, #0
    15cc:	add	r0, r0, #144	; 0x90
    15d0:	bl	0 <coda_cursor_goto_next_array_element>
    15d4:	cmp	r0, #0
    15d8:	beq	15e8 <get_all_dims_for_array+0x4a0>
    15dc:	movw	r0, #0
    15e0:	movt	r0, #0
    15e4:	blx	r0
    15e8:	movw	r0, #0
    15ec:	movt	r0, #0
    15f0:	add	r0, r0, #800	; 0x320
    15f4:	ldr	r1, [fp, #-8]
    15f8:	add	r1, r1, #1
    15fc:	movw	r2, #80	; 0x50
    1600:	mul	r1, r1, r2
    1604:	add	r0, r0, r1
    1608:	ldr	r1, [r0, #44]	; 0x2c
    160c:	add	r1, r1, #1
    1610:	str	r1, [r0, #44]	; 0x2c
    1614:	b	1618 <get_all_dims_for_array+0x4d0>
    1618:	ldr	r0, [sp, #52]	; 0x34
    161c:	add	r0, r0, #1
    1620:	str	r0, [sp, #52]	; 0x34
    1624:	b	1588 <get_all_dims_for_array+0x440>
    1628:	movw	r0, #0
    162c:	movt	r0, #0
    1630:	add	r0, r0, #144	; 0x90
    1634:	bl	0 <coda_cursor_goto_parent>
    1638:	b	163c <get_all_dims_for_array+0x4f4>
    163c:	b	1a88 <get_all_dims_for_array+0x940>
    1640:	movw	r0, #0
    1644:	movt	r0, #0
    1648:	add	r1, r0, #144	; 0x90
    164c:	movw	r2, #3492	; 0xda4
    1650:	add	r0, r0, r2
    1654:	ldr	r2, [fp, #-12]
    1658:	movw	r3, #0
    165c:	movt	r3, #0
    1660:	add	r2, r3, r2, lsl #2
    1664:	movw	r3, #3492	; 0xda4
    1668:	add	r2, r2, r3
    166c:	ldr	r2, [r2]
    1670:	str	r0, [sp, #4]
    1674:	mov	r0, r1
    1678:	mov	r1, r2
    167c:	add	r2, sp, #48	; 0x30
    1680:	bl	0 <coda_cursor_get_record_field_available_status>
    1684:	cmp	r0, #0
    1688:	beq	1698 <get_all_dims_for_array+0x550>
    168c:	movw	r0, #0
    1690:	movt	r0, #0
    1694:	blx	r0
    1698:	ldr	r0, [sp, #48]	; 0x30
    169c:	cmp	r0, #0
    16a0:	beq	1724 <get_all_dims_for_array+0x5dc>
    16a4:	movw	r0, #0
    16a8:	movt	r0, #0
    16ac:	add	r1, r0, #144	; 0x90
    16b0:	movw	r2, #3492	; 0xda4
    16b4:	add	r0, r0, r2
    16b8:	ldr	r2, [fp, #-12]
    16bc:	movw	r3, #0
    16c0:	movt	r3, #0
    16c4:	add	r2, r3, r2, lsl #2
    16c8:	movw	r3, #3492	; 0xda4
    16cc:	add	r2, r2, r3
    16d0:	ldr	r2, [r2]
    16d4:	str	r0, [sp]
    16d8:	mov	r0, r1
    16dc:	mov	r1, r2
    16e0:	bl	0 <coda_cursor_goto_record_field_by_index>
    16e4:	cmp	r0, #0
    16e8:	beq	16f8 <get_all_dims_for_array+0x5b0>
    16ec:	movw	r0, #0
    16f0:	movt	r0, #0
    16f4:	blx	r0
    16f8:	ldr	r0, [fp, #-4]
    16fc:	add	r0, r0, #1
    1700:	ldr	r1, [fp, #-8]
    1704:	ldr	r2, [fp, #-12]
    1708:	add	r2, r2, #1
    170c:	bl	1148 <get_all_dims_for_array>
    1710:	movw	r0, #0
    1714:	movt	r0, #0
    1718:	add	r0, r0, #144	; 0x90
    171c:	bl	0 <coda_cursor_goto_parent>
    1720:	b	1858 <get_all_dims_for_array+0x710>
    1724:	movw	r0, #0
    1728:	movt	r0, #0
    172c:	add	r1, r0, #800	; 0x320
    1730:	ldr	r0, [r0, #3360]	; 0xd20
    1734:	movw	r2, #80	; 0x50
    1738:	mul	r0, r0, r2
    173c:	add	r0, r1, r0
    1740:	str	r0, [sp, #44]	; 0x2c
    1744:	ldr	r0, [sp, #44]	; 0x2c
    1748:	ldr	r0, [r0]
    174c:	str	r0, [sp, #40]	; 0x28
    1750:	movw	r0, #0
    1754:	str	r0, [sp, #36]	; 0x24
    1758:	ldr	r0, [sp, #36]	; 0x24
    175c:	ldr	r1, [sp, #44]	; 0x2c
    1760:	ldr	r1, [r1, #4]
    1764:	cmp	r0, r1
    1768:	bge	1854 <get_all_dims_for_array+0x70c>
    176c:	ldr	r0, [sp, #44]	; 0x2c
    1770:	add	r0, r0, #8
    1774:	ldr	r1, [sp, #36]	; 0x24
    1778:	add	r0, r0, r1, lsl #2
    177c:	ldr	r0, [r0]
    1780:	cmn	r0, #1
    1784:	bne	1840 <get_all_dims_for_array+0x6f8>
    1788:	movw	r0, #0
    178c:	movt	r0, #0
    1790:	add	r0, r0, #4
    1794:	ldr	r1, [sp, #40]	; 0x28
    1798:	ldr	r2, [sp, #36]	; 0x24
    179c:	add	r1, r1, r2
    17a0:	movw	r2, #0
    17a4:	movt	r2, #0
    17a8:	add	r1, r2, r1, lsl #2
    17ac:	ldr	r1, [r1, #108]	; 0x6c
    17b0:	ldr	r3, [sp, #44]	; 0x2c
    17b4:	ldr	r3, [r3, #44]	; 0x2c
    17b8:	mov	ip, #0
    17bc:	str	ip, [r1, r3, lsl #2]
    17c0:	ldr	r1, [sp, #40]	; 0x28
    17c4:	ldr	r3, [sp, #36]	; 0x24
    17c8:	add	r1, r1, r3
    17cc:	add	r1, r2, r1, lsl #2
    17d0:	add	r1, r1, #4
    17d4:	ldr	r1, [r1]
    17d8:	cmn	r1, #1
    17dc:	bne	1810 <get_all_dims_for_array+0x6c8>
    17e0:	movw	r0, #0
    17e4:	movt	r0, #0
    17e8:	add	r0, r0, #4
    17ec:	ldr	r1, [sp, #40]	; 0x28
    17f0:	ldr	r2, [sp, #36]	; 0x24
    17f4:	add	r1, r1, r2
    17f8:	movw	r2, #0
    17fc:	movt	r2, #0
    1800:	add	r1, r2, r1, lsl #2
    1804:	add	r1, r1, #4
    1808:	movw	r2, #0
    180c:	str	r2, [r1]
    1810:	movw	r0, #0
    1814:	movt	r0, #0
    1818:	add	r0, r0, #36	; 0x24
    181c:	ldr	r1, [sp, #40]	; 0x28
    1820:	ldr	r2, [sp, #36]	; 0x24
    1824:	add	r1, r1, r2
    1828:	movw	r2, #0
    182c:	movt	r2, #0
    1830:	add	r1, r2, r1, lsl #2
    1834:	add	r1, r1, #36	; 0x24
    1838:	movw	r2, #0
    183c:	str	r2, [r1]
    1840:	b	1844 <get_all_dims_for_array+0x6fc>
    1844:	ldr	r0, [sp, #36]	; 0x24
    1848:	add	r0, r0, #1
    184c:	str	r0, [sp, #36]	; 0x24
    1850:	b	1758 <get_all_dims_for_array+0x610>
    1854:	b	1858 <get_all_dims_for_array+0x710>
    1858:	b	1a88 <get_all_dims_for_array+0x940>
    185c:	ldr	r0, [fp, #-8]
    1860:	movw	r1, #0
    1864:	movt	r1, #0
    1868:	ldr	r1, [r1, #3360]	; 0xd20
    186c:	cmp	r0, r1
    1870:	bne	1878 <get_all_dims_for_array+0x730>
    1874:	b	1898 <get_all_dims_for_array+0x750>
    1878:	movw	r0, #0
    187c:	movt	r0, #0
    1880:	movw	r1, #0
    1884:	movt	r1, #0
    1888:	movw	r2, #252	; 0xfc
    188c:	movw	r3, #0
    1890:	movt	r3, #0
    1894:	bl	0 <__assert_fail>
    1898:	ldr	r0, [fp, #-16]
    189c:	cmp	r0, #4
    18a0:	bne	18e0 <get_all_dims_for_array+0x798>
    18a4:	movw	r0, #0
    18a8:	movt	r0, #0
    18ac:	add	r0, r0, #144	; 0x90
    18b0:	add	r1, sp, #12
    18b4:	bl	0 <coda_cursor_get_string_length>
    18b8:	cmp	r0, #0
    18bc:	beq	18cc <get_all_dims_for_array+0x784>
    18c0:	movw	r0, #0
    18c4:	movt	r0, #0
    18c8:	blx	r0
    18cc:	ldr	r0, [sp, #12]
    18d0:	asr	r1, r0, #31
    18d4:	str	r0, [sp, #16]
    18d8:	str	r1, [sp, #20]
    18dc:	b	190c <get_all_dims_for_array+0x7c4>
    18e0:	movw	r0, #0
    18e4:	movt	r0, #0
    18e8:	add	r0, r0, #144	; 0x90
    18ec:	add	r1, sp, #16
    18f0:	bl	0 <coda_cursor_get_byte_size>
    18f4:	cmp	r0, #0
    18f8:	beq	1908 <get_all_dims_for_array+0x7c0>
    18fc:	movw	r0, #0
    1900:	movt	r0, #0
    1904:	blx	r0
    1908:	b	190c <get_all_dims_for_array+0x7c4>
    190c:	movw	r0, #0
    1910:	movt	r0, #0
    1914:	add	r0, r0, #4
    1918:	ldr	r1, [fp, #-8]
    191c:	add	r1, r1, r1, lsl #2
    1920:	movw	r2, #0
    1924:	movt	r2, #0
    1928:	add	r1, r2, r1, lsl #4
    192c:	add	r1, r1, #800	; 0x320
    1930:	str	r1, [sp, #32]
    1934:	ldr	r1, [sp, #32]
    1938:	ldr	r1, [r1]
    193c:	str	r1, [sp, #28]
    1940:	ldr	r1, [sp, #16]
    1944:	ldr	r2, [sp, #28]
    1948:	movw	r3, #0
    194c:	movt	r3, #0
    1950:	add	r2, r3, r2, lsl #2
    1954:	ldr	r2, [r2, #108]	; 0x6c
    1958:	ldr	ip, [sp, #32]
    195c:	ldr	ip, [ip, #44]	; 0x2c
    1960:	str	r1, [r2, ip, lsl #2]
    1964:	ldr	r1, [sp, #28]
    1968:	add	r1, r3, r1, lsl #2
    196c:	add	r1, r1, #4
    1970:	ldr	r1, [r1]
    1974:	cmn	r1, #1
    1978:	bne	19b8 <get_all_dims_for_array+0x870>
    197c:	movw	r0, #0
    1980:	movt	r0, #0
    1984:	add	r0, r0, #36	; 0x24
    1988:	ldr	r1, [sp, #16]
    198c:	ldr	r2, [sp, #28]
    1990:	movw	r3, #0
    1994:	movt	r3, #0
    1998:	add	r2, r3, r2, lsl #2
    199c:	str	r1, [r2, #4]
    19a0:	ldr	r1, [sp, #16]
    19a4:	ldr	r2, [sp, #28]
    19a8:	add	r2, r3, r2, lsl #2
    19ac:	add	r2, r2, #36	; 0x24
    19b0:	str	r1, [r2]
    19b4:	b	1a64 <get_all_dims_for_array+0x91c>
    19b8:	ldr	r0, [sp, #28]
    19bc:	movw	r1, #0
    19c0:	movt	r1, #0
    19c4:	add	r0, r1, r0, lsl #2
    19c8:	ldr	r0, [r0, #4]
    19cc:	ldr	r1, [sp, #16]
    19d0:	ldr	r2, [sp, #20]
    19d4:	subs	r1, r0, r1
    19d8:	rscs	r0, r2, r0, asr #31
    19dc:	bge	1a0c <get_all_dims_for_array+0x8c4>
    19e0:	b	19e4 <get_all_dims_for_array+0x89c>
    19e4:	movw	r0, #0
    19e8:	movt	r0, #0
    19ec:	add	r0, r0, #4
    19f0:	ldr	r1, [sp, #16]
    19f4:	ldr	r2, [sp, #28]
    19f8:	movw	r3, #0
    19fc:	movt	r3, #0
    1a00:	add	r2, r3, r2, lsl #2
    1a04:	add	r2, r2, #4
    1a08:	str	r1, [r2]
    1a0c:	ldr	r0, [sp, #28]
    1a10:	movw	r1, #0
    1a14:	movt	r1, #0
    1a18:	add	r0, r1, r0, lsl #2
    1a1c:	ldr	r0, [r0, #36]	; 0x24
    1a20:	ldr	r1, [sp, #16]
    1a24:	ldr	r2, [sp, #20]
    1a28:	subs	r1, r1, r0
    1a2c:	sbcs	r0, r2, r0, asr #31
    1a30:	bge	1a60 <get_all_dims_for_array+0x918>
    1a34:	b	1a38 <get_all_dims_for_array+0x8f0>
    1a38:	movw	r0, #0
    1a3c:	movt	r0, #0
    1a40:	add	r0, r0, #36	; 0x24
    1a44:	ldr	r1, [sp, #16]
    1a48:	ldr	r2, [sp, #28]
    1a4c:	movw	r3, #0
    1a50:	movt	r3, #0
    1a54:	add	r2, r3, r2, lsl #2
    1a58:	add	r2, r2, #36	; 0x24
    1a5c:	str	r1, [r2]
    1a60:	b	1a64 <get_all_dims_for_array+0x91c>
    1a64:	b	1a88 <get_all_dims_for_array+0x940>
    1a68:	movw	r0, #0
    1a6c:	movt	r0, #0
    1a70:	movw	r1, #0
    1a74:	movt	r1, #0
    1a78:	movw	r2, #294	; 0x126
    1a7c:	movw	r3, #0
    1a80:	movt	r3, #0
    1a84:	bl	0 <__assert_fail>
    1a88:	mov	sp, fp
    1a8c:	pop	{fp, pc}

00001a90 <dim_leave_array>:
    1a90:	push	{fp, lr}
    1a94:	mov	fp, sp
    1a98:	sub	sp, sp, #24
    1a9c:	movw	r0, #0
    1aa0:	movt	r0, #0
    1aa4:	ldr	r0, [r0, #3360]	; 0xd20
    1aa8:	cmp	r0, #0
    1aac:	blt	1ab4 <dim_leave_array+0x24>
    1ab0:	b	1ad4 <dim_leave_array+0x44>
    1ab4:	movw	r0, #0
    1ab8:	movt	r0, #0
    1abc:	movw	r1, #0
    1ac0:	movt	r1, #0
    1ac4:	movw	r2, #579	; 0x243
    1ac8:	movw	r3, #0
    1acc:	movt	r3, #0
    1ad0:	bl	0 <__assert_fail>
    1ad4:	movw	r0, #0
    1ad8:	movt	r0, #0
    1adc:	add	r1, r0, #800	; 0x320
    1ae0:	ldr	r0, [r0, #3360]	; 0xd20
    1ae4:	movw	r2, #80	; 0x50
    1ae8:	mul	r0, r0, r2
    1aec:	add	r0, r1, r0
    1af0:	str	r0, [fp, #-4]
    1af4:	ldr	r0, [fp, #-4]
    1af8:	ldr	r0, [r0]
    1afc:	str	r0, [fp, #-8]
    1b00:	ldr	r0, [fp, #-4]
    1b04:	ldr	r0, [r0, #4]
    1b08:	movw	r1, #0
    1b0c:	movt	r1, #0
    1b10:	ldr	r2, [r1]
    1b14:	sub	r0, r2, r0
    1b18:	str	r0, [r1]
    1b1c:	movw	r0, #0
    1b20:	str	r0, [sp, #12]
    1b24:	ldr	r0, [sp, #12]
    1b28:	ldr	r1, [fp, #-4]
    1b2c:	ldr	r1, [r1, #4]
    1b30:	cmp	r0, r1
    1b34:	bge	1bb8 <dim_leave_array+0x128>
    1b38:	movw	r0, #0
    1b3c:	movt	r0, #0
    1b40:	add	r0, r0, #72	; 0x48
    1b44:	ldr	r1, [fp, #-8]
    1b48:	ldr	r2, [sp, #12]
    1b4c:	add	r1, r1, r2
    1b50:	movw	r2, #0
    1b54:	movt	r2, #0
    1b58:	add	r1, r2, r1, lsl #2
    1b5c:	add	r1, r1, #72	; 0x48
    1b60:	ldr	r1, [r1]
    1b64:	cmp	r1, #0
    1b68:	beq	1ba4 <dim_leave_array+0x114>
    1b6c:	movw	r0, #0
    1b70:	movt	r0, #0
    1b74:	add	r0, r0, #108	; 0x6c
    1b78:	ldr	r1, [fp, #-8]
    1b7c:	ldr	r2, [sp, #12]
    1b80:	add	r1, r1, r2
    1b84:	movw	r2, #0
    1b88:	movt	r2, #0
    1b8c:	add	r1, r2, r1, lsl #2
    1b90:	add	r1, r1, #108	; 0x6c
    1b94:	ldr	r1, [r1]
    1b98:	str	r0, [sp, #8]
    1b9c:	mov	r0, r1
    1ba0:	bl	0 <free>
    1ba4:	b	1ba8 <dim_leave_array+0x118>
    1ba8:	ldr	r0, [sp, #12]
    1bac:	add	r0, r0, #1
    1bb0:	str	r0, [sp, #12]
    1bb4:	b	1b24 <dim_leave_array+0x94>
    1bb8:	movw	r0, #0
    1bbc:	movt	r0, #0
    1bc0:	movw	r1, #0
    1bc4:	str	r1, [r0, #68]	; 0x44
    1bc8:	mvn	r2, #0
    1bcc:	str	r2, [r0, #104]	; 0x68
    1bd0:	str	r1, [sp, #12]
    1bd4:	ldr	r0, [sp, #12]
    1bd8:	movw	r1, #0
    1bdc:	movt	r1, #0
    1be0:	ldr	r1, [r1]
    1be4:	cmp	r0, r1
    1be8:	bge	1c44 <dim_leave_array+0x1b4>
    1bec:	movw	r0, #0
    1bf0:	movt	r0, #0
    1bf4:	add	r0, r0, #72	; 0x48
    1bf8:	ldr	r1, [sp, #12]
    1bfc:	movw	r2, #0
    1c00:	movt	r2, #0
    1c04:	add	r1, r2, r1, lsl #2
    1c08:	add	r1, r1, #72	; 0x48
    1c0c:	ldr	r1, [r1]
    1c10:	cmp	r1, #0
    1c14:	beq	1c30 <dim_leave_array+0x1a0>
    1c18:	movw	r0, #1
    1c1c:	movw	r1, #0
    1c20:	movt	r1, #0
    1c24:	str	r0, [r1, #68]	; 0x44
    1c28:	ldr	r0, [sp, #12]
    1c2c:	str	r0, [r1, #104]	; 0x68
    1c30:	b	1c34 <dim_leave_array+0x1a4>
    1c34:	ldr	r0, [sp, #12]
    1c38:	add	r0, r0, #1
    1c3c:	str	r0, [sp, #12]
    1c40:	b	1bd4 <dim_leave_array+0x144>
    1c44:	ldr	r0, [fp, #-8]
    1c48:	ldr	r1, [fp, #-4]
    1c4c:	ldr	r1, [r1, #4]
    1c50:	add	r0, r0, r1
    1c54:	movw	r1, #0
    1c58:	movt	r1, #0
    1c5c:	add	r0, r1, r0, lsl #3
    1c60:	ldr	r1, [r0, #296]	; 0x128
    1c64:	ldr	r0, [r0, #300]	; 0x12c
    1c68:	subs	r1, r1, #1
    1c6c:	sbcs	r0, r0, #0
    1c70:	blt	1cf4 <dim_leave_array+0x264>
    1c74:	b	1c78 <dim_leave_array+0x1e8>
    1c78:	ldr	r0, [fp, #-8]
    1c7c:	sub	r0, r0, #1
    1c80:	str	r0, [sp, #12]
    1c84:	ldr	r0, [sp, #12]
    1c88:	cmp	r0, #0
    1c8c:	blt	1cf0 <dim_leave_array+0x260>
    1c90:	ldr	r0, [fp, #-8]
    1c94:	movw	r1, #0
    1c98:	movt	r1, #0
    1c9c:	add	r1, r1, #176	; 0xb0
    1ca0:	mov	r2, r1
    1ca4:	ldr	r0, [r2, r0, lsl #3]!
    1ca8:	ldr	r3, [r2, #4]
    1cac:	ldr	r2, [sp, #12]
    1cb0:	ldr	r2, [r1, r2, lsl #3]!
    1cb4:	ldr	ip, [r1, #4]
    1cb8:	str	r0, [sp, #4]
    1cbc:	mov	r0, r2
    1cc0:	str	r1, [sp]
    1cc4:	mov	r1, ip
    1cc8:	ldr	r2, [sp, #4]
    1ccc:	bl	0 <__aeabi_ldivmod>
    1cd0:	ldr	r2, [sp]
    1cd4:	str	r1, [r2, #4]
    1cd8:	str	r0, [r2]
    1cdc:	ldr	r0, [sp, #12]
    1ce0:	mvn	r1, #0
    1ce4:	add	r0, r0, r1
    1ce8:	str	r0, [sp, #12]
    1cec:	b	1c84 <dim_leave_array+0x1f4>
    1cf0:	b	1cf4 <dim_leave_array+0x264>
    1cf4:	mov	sp, fp
    1cf8:	pop	{fp, pc}

00001cfc <dim_record_field_available>:
    1cfc:	push	{fp, lr}
    1d00:	mov	fp, sp
    1d04:	sub	sp, sp, #8
    1d08:	movw	r0, #0
    1d0c:	str	r0, [sp, #4]
    1d10:	ldr	r1, [sp, #4]
    1d14:	ldr	r2, [sp, #4]
    1d18:	bl	1d24 <get_record_field_available_status>
    1d1c:	mov	sp, fp
    1d20:	pop	{fp, pc}

00001d24 <get_record_field_available_status>:
    1d24:	push	{fp, lr}
    1d28:	mov	fp, sp
    1d2c:	sub	sp, sp, #56	; 0x38
    1d30:	movw	r3, #0
    1d34:	movt	r3, #0
    1d38:	add	r3, r3, #144	; 0x90
    1d3c:	str	r0, [fp, #-8]
    1d40:	str	r1, [fp, #-12]
    1d44:	str	r2, [fp, #-16]
    1d48:	mov	r0, r3
    1d4c:	sub	r1, fp, #20
    1d50:	bl	0 <coda_cursor_get_type_class>
    1d54:	cmp	r0, #0
    1d58:	beq	1d68 <get_record_field_available_status+0x44>
    1d5c:	movw	r0, #0
    1d60:	movt	r0, #0
    1d64:	blx	r0
    1d68:	ldr	r0, [fp, #-20]	; 0xffffffec
    1d6c:	cmp	r0, #0
    1d70:	str	r0, [sp, #8]
    1d74:	beq	2034 <get_record_field_available_status+0x310>
    1d78:	b	1d7c <get_record_field_available_status+0x58>
    1d7c:	ldr	r0, [sp, #8]
    1d80:	cmp	r0, #1
    1d84:	bne	2168 <get_record_field_available_status+0x444>
    1d88:	b	1d8c <get_record_field_available_status+0x68>
    1d8c:	movw	r0, #0
    1d90:	movt	r0, #0
    1d94:	add	r1, r0, #800	; 0x320
    1d98:	ldr	r2, [fp, #-12]
    1d9c:	movw	r3, #80	; 0x50
    1da0:	mul	r2, r2, r3
    1da4:	add	r1, r1, r2
    1da8:	str	r1, [fp, #-24]	; 0xffffffe8
    1dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1db0:	ldr	r1, [r1]
    1db4:	str	r1, [sp, #24]
    1db8:	ldr	r1, [fp, #-12]
    1dbc:	ldr	r0, [r0, #3360]	; 0xd20
    1dc0:	cmp	r1, r0
    1dc4:	bge	1dcc <get_record_field_available_status+0xa8>
    1dc8:	b	1dec <get_record_field_available_status+0xc8>
    1dcc:	movw	r0, #0
    1dd0:	movt	r0, #0
    1dd4:	movw	r1, #0
    1dd8:	movt	r1, #0
    1ddc:	movw	r2, #638	; 0x27e
    1de0:	movw	r3, #0
    1de4:	movt	r3, #0
    1de8:	bl	0 <__assert_fail>
    1dec:	ldr	r0, [fp, #-12]
    1df0:	cmp	r0, #0
    1df4:	bne	1e04 <get_record_field_available_status+0xe0>
    1df8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dfc:	movw	r1, #0
    1e00:	str	r1, [r0, #44]	; 0x2c
    1e04:	ldr	r0, [fp, #-12]
    1e08:	movw	r1, #0
    1e0c:	movt	r1, #0
    1e10:	ldr	r1, [r1, #3360]	; 0xd20
    1e14:	cmp	r0, r1
    1e18:	bge	1e54 <get_record_field_available_status+0x130>
    1e1c:	movw	r0, #0
    1e20:	movt	r0, #0
    1e24:	add	r0, r0, #800	; 0x320
    1e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e2c:	ldr	r1, [r1, #44]	; 0x2c
    1e30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e34:	ldr	r2, [r2, #40]	; 0x28
    1e38:	mul	r1, r1, r2
    1e3c:	ldr	r2, [fp, #-12]
    1e40:	add	r2, r2, #1
    1e44:	movw	r3, #80	; 0x50
    1e48:	mul	r2, r2, r3
    1e4c:	add	r0, r0, r2
    1e50:	str	r1, [r0, #44]	; 0x2c
    1e54:	movw	r0, #1
    1e58:	str	r0, [sp, #28]
    1e5c:	ldr	r0, [sp, #24]
    1e60:	str	r0, [sp, #20]
    1e64:	ldr	r0, [sp, #20]
    1e68:	ldr	r1, [sp, #24]
    1e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e70:	ldr	r2, [r2, #4]
    1e74:	add	r1, r1, r2
    1e78:	cmp	r0, r1
    1e7c:	bge	1f24 <get_record_field_available_status+0x200>
    1e80:	movw	r0, #0
    1e84:	movt	r0, #0
    1e88:	add	r0, r0, #72	; 0x48
    1e8c:	ldr	r1, [sp, #20]
    1e90:	movw	r2, #0
    1e94:	movt	r2, #0
    1e98:	add	r1, r2, r1, lsl #2
    1e9c:	add	r1, r1, #72	; 0x48
    1ea0:	ldr	r1, [r1]
    1ea4:	cmp	r1, #0
    1ea8:	beq	1ee0 <get_record_field_available_status+0x1bc>
    1eac:	ldr	r0, [sp, #20]
    1eb0:	movw	r1, #0
    1eb4:	movt	r1, #0
    1eb8:	add	r0, r1, r0, lsl #2
    1ebc:	ldr	r0, [r0, #108]	; 0x6c
    1ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ec4:	ldr	r1, [r1, #44]	; 0x2c
    1ec8:	add	r0, r0, r1, lsl #2
    1ecc:	ldr	r0, [r0]
    1ed0:	ldr	r1, [sp, #28]
    1ed4:	mul	r0, r1, r0
    1ed8:	str	r0, [sp, #28]
    1edc:	b	1f10 <get_record_field_available_status+0x1ec>
    1ee0:	movw	r0, #0
    1ee4:	movt	r0, #0
    1ee8:	add	r0, r0, #4
    1eec:	ldr	r1, [sp, #20]
    1ef0:	movw	r2, #0
    1ef4:	movt	r2, #0
    1ef8:	add	r1, r2, r1, lsl #2
    1efc:	add	r1, r1, #4
    1f00:	ldr	r1, [r1]
    1f04:	ldr	r2, [sp, #28]
    1f08:	mul	r1, r2, r1
    1f0c:	str	r1, [sp, #28]
    1f10:	b	1f14 <get_record_field_available_status+0x1f0>
    1f14:	ldr	r0, [sp, #20]
    1f18:	add	r0, r0, #1
    1f1c:	str	r0, [sp, #20]
    1f20:	b	1e64 <get_record_field_available_status+0x140>
    1f24:	ldr	r0, [sp, #28]
    1f28:	cmp	r0, #0
    1f2c:	ble	2030 <get_record_field_available_status+0x30c>
    1f30:	movw	r0, #0
    1f34:	movt	r0, #0
    1f38:	add	r0, r0, #144	; 0x90
    1f3c:	bl	0 <coda_cursor_goto_first_array_element>
    1f40:	cmp	r0, #0
    1f44:	beq	1f54 <get_record_field_available_status+0x230>
    1f48:	movw	r0, #0
    1f4c:	movt	r0, #0
    1f50:	blx	r0
    1f54:	movw	r0, #0
    1f58:	str	r0, [sp, #16]
    1f5c:	ldr	r0, [sp, #16]
    1f60:	ldr	r1, [sp, #28]
    1f64:	cmp	r0, r1
    1f68:	bge	2020 <get_record_field_available_status+0x2fc>
    1f6c:	ldr	r0, [fp, #-8]
    1f70:	add	r0, r0, #1
    1f74:	ldr	r1, [fp, #-12]
    1f78:	add	r1, r1, #1
    1f7c:	ldr	r2, [fp, #-16]
    1f80:	bl	1d24 <get_record_field_available_status>
    1f84:	cmp	r0, #0
    1f88:	beq	1fa8 <get_record_field_available_status+0x284>
    1f8c:	movw	r0, #0
    1f90:	movt	r0, #0
    1f94:	add	r0, r0, #144	; 0x90
    1f98:	bl	0 <coda_cursor_goto_parent>
    1f9c:	movw	r1, #1
    1fa0:	str	r1, [fp, #-4]
    1fa4:	b	2190 <get_record_field_available_status+0x46c>
    1fa8:	ldr	r0, [sp, #16]
    1fac:	ldr	r1, [sp, #28]
    1fb0:	sub	r1, r1, #1
    1fb4:	cmp	r0, r1
    1fb8:	bge	200c <get_record_field_available_status+0x2e8>
    1fbc:	movw	r0, #0
    1fc0:	movt	r0, #0
    1fc4:	add	r0, r0, #144	; 0x90
    1fc8:	bl	0 <coda_cursor_goto_next_array_element>
    1fcc:	cmp	r0, #0
    1fd0:	beq	1fe0 <get_record_field_available_status+0x2bc>
    1fd4:	movw	r0, #0
    1fd8:	movt	r0, #0
    1fdc:	blx	r0
    1fe0:	movw	r0, #0
    1fe4:	movt	r0, #0
    1fe8:	add	r0, r0, #800	; 0x320
    1fec:	ldr	r1, [fp, #-12]
    1ff0:	add	r1, r1, #1
    1ff4:	movw	r2, #80	; 0x50
    1ff8:	mul	r1, r1, r2
    1ffc:	add	r0, r0, r1
    2000:	ldr	r1, [r0, #44]	; 0x2c
    2004:	add	r1, r1, #1
    2008:	str	r1, [r0, #44]	; 0x2c
    200c:	b	2010 <get_record_field_available_status+0x2ec>
    2010:	ldr	r0, [sp, #16]
    2014:	add	r0, r0, #1
    2018:	str	r0, [sp, #16]
    201c:	b	1f5c <get_record_field_available_status+0x238>
    2020:	movw	r0, #0
    2024:	movt	r0, #0
    2028:	add	r0, r0, #144	; 0x90
    202c:	bl	0 <coda_cursor_goto_parent>
    2030:	b	2188 <get_record_field_available_status+0x464>
    2034:	movw	r0, #0
    2038:	movt	r0, #0
    203c:	add	r1, r0, #144	; 0x90
    2040:	movw	r2, #3492	; 0xda4
    2044:	add	r0, r0, r2
    2048:	ldr	r2, [fp, #-16]
    204c:	movw	r3, #0
    2050:	movt	r3, #0
    2054:	add	r2, r3, r2, lsl #2
    2058:	movw	r3, #3492	; 0xda4
    205c:	add	r2, r2, r3
    2060:	ldr	r2, [r2]
    2064:	str	r0, [sp, #4]
    2068:	mov	r0, r1
    206c:	mov	r1, r2
    2070:	add	r2, sp, #12
    2074:	bl	0 <coda_cursor_get_record_field_available_status>
    2078:	cmp	r0, #0
    207c:	beq	208c <get_record_field_available_status+0x368>
    2080:	movw	r0, #0
    2084:	movt	r0, #0
    2088:	blx	r0
    208c:	ldr	r0, [sp, #12]
    2090:	cmp	r0, #0
    2094:	beq	2164 <get_record_field_available_status+0x440>
    2098:	ldr	r0, [fp, #-16]
    209c:	movw	r1, #0
    20a0:	movt	r1, #0
    20a4:	ldr	r1, [r1, #3748]	; 0xea4
    20a8:	sub	r1, r1, #1
    20ac:	cmp	r0, r1
    20b0:	bne	20c0 <get_record_field_available_status+0x39c>
    20b4:	movw	r0, #1
    20b8:	str	r0, [fp, #-4]
    20bc:	b	2190 <get_record_field_available_status+0x46c>
    20c0:	movw	r0, #0
    20c4:	movt	r0, #0
    20c8:	add	r1, r0, #144	; 0x90
    20cc:	movw	r2, #3492	; 0xda4
    20d0:	add	r0, r0, r2
    20d4:	ldr	r2, [fp, #-16]
    20d8:	movw	r3, #0
    20dc:	movt	r3, #0
    20e0:	add	r2, r3, r2, lsl #2
    20e4:	movw	r3, #3492	; 0xda4
    20e8:	add	r2, r2, r3
    20ec:	ldr	r2, [r2]
    20f0:	str	r0, [sp]
    20f4:	mov	r0, r1
    20f8:	mov	r1, r2
    20fc:	bl	0 <coda_cursor_goto_record_field_by_index>
    2100:	cmp	r0, #0
    2104:	beq	2114 <get_record_field_available_status+0x3f0>
    2108:	movw	r0, #0
    210c:	movt	r0, #0
    2110:	blx	r0
    2114:	ldr	r0, [fp, #-8]
    2118:	add	r0, r0, #1
    211c:	ldr	r1, [fp, #-12]
    2120:	ldr	r2, [fp, #-16]
    2124:	add	r2, r2, #1
    2128:	bl	1d24 <get_record_field_available_status>
    212c:	movw	r1, #0
    2130:	movt	r1, #0
    2134:	add	r1, r1, #144	; 0x90
    2138:	str	r0, [sp, #12]
    213c:	mov	r0, r1
    2140:	bl	0 <coda_cursor_goto_parent>
    2144:	ldr	r1, [sp, #12]
    2148:	cmp	r1, #0
    214c:	beq	215c <get_record_field_available_status+0x438>
    2150:	movw	r0, #1
    2154:	str	r0, [fp, #-4]
    2158:	b	2190 <get_record_field_available_status+0x46c>
    215c:	b	2160 <get_record_field_available_status+0x43c>
    2160:	b	2164 <get_record_field_available_status+0x440>
    2164:	b	2188 <get_record_field_available_status+0x464>
    2168:	movw	r0, #0
    216c:	movt	r0, #0
    2170:	movw	r1, #0
    2174:	movt	r1, #0
    2178:	movw	r2, #729	; 0x2d9
    217c:	movw	r3, #0
    2180:	movt	r3, #0
    2184:	bl	0 <__assert_fail>
    2188:	movw	r0, #0
    218c:	str	r0, [fp, #-4]
    2190:	ldr	r0, [fp, #-4]
    2194:	mov	sp, fp
    2198:	pop	{fp, pc}
