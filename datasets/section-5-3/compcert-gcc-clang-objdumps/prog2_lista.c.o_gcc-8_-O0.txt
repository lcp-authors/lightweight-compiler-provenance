
../compcert-repos/prog2/CMakeFiles/MT1E1-2.1.dir/Extras/Miniteste1-Exemplo2/1/lista.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <novo_str>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	mov	r0, #12
  18:	bl	0 <malloc>
  1c:	mov	r3, r0
  20:	str	r3, [fp, #-8]
  24:	ldr	r3, [fp, #-8]
  28:	cmp	r3, #0
  2c:	bne	38 <novo_str+0x38>
  30:	mov	r3, #0
  34:	b	b0 <novo_str+0xb0>
  38:	ldr	r0, [fp, #-16]
  3c:	bl	0 <strlen>
  40:	mov	r3, r0
  44:	add	r3, r3, #1
  48:	mov	r0, r3
  4c:	bl	0 <malloc>
  50:	mov	r3, r0
  54:	mov	r2, r3
  58:	ldr	r3, [fp, #-8]
  5c:	str	r2, [r3]
  60:	ldr	r3, [fp, #-8]
  64:	ldr	r3, [r3]
  68:	cmp	r3, #0
  6c:	bne	80 <novo_str+0x80>
  70:	ldr	r0, [fp, #-8]
  74:	bl	0 <free>
  78:	mov	r3, #0
  7c:	b	b0 <novo_str+0xb0>
  80:	ldr	r3, [fp, #-8]
  84:	ldr	r3, [r3]
  88:	ldr	r1, [fp, #-16]
  8c:	mov	r0, r3
  90:	bl	0 <strcpy>
  94:	ldr	r3, [fp, #-8]
  98:	mov	r2, #0
  9c:	str	r2, [r3, #4]
  a0:	ldr	r3, [fp, #-8]
  a4:	mov	r2, #0
  a8:	str	r2, [r3, #8]
  ac:	ldr	r3, [fp, #-8]
  b0:	mov	r0, r3
  b4:	sub	sp, fp, #4
  b8:	ldr	fp, [sp]
  bc:	add	sp, sp, #4
  c0:	pop	{pc}		; (ldr pc, [sp], #4)

000000c4 <lista_nova>:
  c4:	str	fp, [sp, #-8]!
  c8:	str	lr, [sp, #4]
  cc:	add	fp, sp, #4
  d0:	sub	sp, sp, #8
  d4:	mov	r0, #12
  d8:	bl	0 <malloc>
  dc:	mov	r3, r0
  e0:	str	r3, [fp, #-8]
  e4:	ldr	r3, [fp, #-8]
  e8:	cmp	r3, #0
  ec:	bne	f8 <lista_nova+0x34>
  f0:	mov	r3, #0
  f4:	b	120 <lista_nova+0x5c>
  f8:	ldr	r3, [fp, #-8]
  fc:	mov	r2, #0
 100:	str	r2, [r3]
 104:	ldr	r3, [fp, #-8]
 108:	mov	r2, #0
 10c:	str	r2, [r3, #4]
 110:	ldr	r3, [fp, #-8]
 114:	mov	r2, #0
 118:	str	r2, [r3, #8]
 11c:	ldr	r3, [fp, #-8]
 120:	mov	r0, r3
 124:	sub	sp, fp, #4
 128:	ldr	fp, [sp]
 12c:	add	sp, sp, #4
 130:	pop	{pc}		; (ldr pc, [sp], #4)

00000134 <lista_apaga>:
 134:	str	fp, [sp, #-8]!
 138:	str	lr, [sp, #4]
 13c:	add	fp, sp, #4
 140:	sub	sp, sp, #16
 144:	str	r0, [fp, #-16]
 148:	ldr	r3, [fp, #-16]
 14c:	cmp	r3, #0
 150:	beq	1b0 <lista_apaga+0x7c>
 154:	b	190 <lista_apaga+0x5c>
 158:	ldr	r3, [fp, #-16]
 15c:	ldr	r3, [r3]
 160:	str	r3, [fp, #-8]
 164:	ldr	r3, [fp, #-16]
 168:	ldr	r3, [r3]
 16c:	ldr	r2, [r3, #4]
 170:	ldr	r3, [fp, #-16]
 174:	str	r2, [r3]
 178:	ldr	r3, [fp, #-8]
 17c:	ldr	r3, [r3]
 180:	mov	r0, r3
 184:	bl	0 <free>
 188:	ldr	r0, [fp, #-8]
 18c:	bl	0 <free>
 190:	ldr	r3, [fp, #-16]
 194:	ldr	r3, [r3]
 198:	cmp	r3, #0
 19c:	bne	158 <lista_apaga+0x24>
 1a0:	ldr	r0, [fp, #-16]
 1a4:	bl	0 <free>
 1a8:	nop	{0}
 1ac:	b	1b4 <lista_apaga+0x80>
 1b0:	nop	{0}
 1b4:	sub	sp, fp, #4
 1b8:	ldr	fp, [sp]
 1bc:	add	sp, sp, #4
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)

000001c4 <lista_tamanho>:
 1c4:	push	{fp}		; (str fp, [sp, #-4]!)
 1c8:	add	fp, sp, #0
 1cc:	sub	sp, sp, #12
 1d0:	str	r0, [fp, #-8]
 1d4:	ldr	r3, [fp, #-8]
 1d8:	cmp	r3, #0
 1dc:	bne	1e8 <lista_tamanho+0x24>
 1e0:	mvn	r3, #0
 1e4:	b	1f0 <lista_tamanho+0x2c>
 1e8:	ldr	r3, [fp, #-8]
 1ec:	ldr	r3, [r3, #8]
 1f0:	mov	r0, r3
 1f4:	add	sp, fp, #0
 1f8:	pop	{fp}		; (ldr fp, [sp], #4)
 1fc:	bx	lr

00000200 <lista_inicio>:
 200:	push	{fp}		; (str fp, [sp, #-4]!)
 204:	add	fp, sp, #0
 208:	sub	sp, sp, #12
 20c:	str	r0, [fp, #-8]
 210:	ldr	r3, [fp, #-8]
 214:	cmp	r3, #0
 218:	bne	224 <lista_inicio+0x24>
 21c:	mov	r3, #0
 220:	b	22c <lista_inicio+0x2c>
 224:	ldr	r3, [fp, #-8]
 228:	ldr	r3, [r3]
 22c:	mov	r0, r3
 230:	add	sp, fp, #0
 234:	pop	{fp}		; (ldr fp, [sp], #4)
 238:	bx	lr

0000023c <lista_fim>:
 23c:	push	{fp}		; (str fp, [sp, #-4]!)
 240:	add	fp, sp, #0
 244:	sub	sp, sp, #12
 248:	str	r0, [fp, #-8]
 24c:	ldr	r3, [fp, #-8]
 250:	cmp	r3, #0
 254:	bne	260 <lista_fim+0x24>
 258:	mov	r3, #0
 25c:	b	268 <lista_fim+0x2c>
 260:	ldr	r3, [fp, #-8]
 264:	ldr	r3, [r3, #4]
 268:	mov	r0, r3
 26c:	add	sp, fp, #0
 270:	pop	{fp}		; (ldr fp, [sp], #4)
 274:	bx	lr

00000278 <lista_insere>:
 278:	str	fp, [sp, #-8]!
 27c:	str	lr, [sp, #4]
 280:	add	fp, sp, #4
 284:	sub	sp, sp, #24
 288:	str	r0, [fp, #-16]
 28c:	str	r1, [fp, #-20]	; 0xffffffec
 290:	str	r2, [fp, #-24]	; 0xffffffe8
 294:	mov	r3, #0
 298:	str	r3, [fp, #-8]
 29c:	ldr	r3, [fp, #-16]
 2a0:	cmp	r3, #0
 2a4:	beq	2b4 <lista_insere+0x3c>
 2a8:	ldr	r3, [fp, #-20]	; 0xffffffec
 2ac:	cmp	r3, #0
 2b0:	bne	2bc <lista_insere+0x44>
 2b4:	mov	r3, #0
 2b8:	b	3e4 <lista_insere+0x16c>
 2bc:	ldr	r0, [fp, #-20]	; 0xffffffec
 2c0:	bl	0 <novo_str>
 2c4:	str	r0, [fp, #-8]
 2c8:	ldr	r3, [fp, #-8]
 2cc:	cmp	r3, #0
 2d0:	bne	2dc <lista_insere+0x64>
 2d4:	mov	r3, #0
 2d8:	b	3e4 <lista_insere+0x16c>
 2dc:	ldr	r3, [fp, #-16]
 2e0:	ldr	r3, [r3, #8]
 2e4:	add	r2, r3, #1
 2e8:	ldr	r3, [fp, #-16]
 2ec:	str	r2, [r3, #8]
 2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2f4:	cmp	r3, #0
 2f8:	bne	360 <lista_insere+0xe8>
 2fc:	ldr	r3, [fp, #-16]
 300:	ldr	r3, [r3]
 304:	cmp	r3, #0
 308:	bne	32c <lista_insere+0xb4>
 30c:	ldr	r3, [fp, #-16]
 310:	ldr	r2, [fp, #-8]
 314:	str	r2, [r3, #4]
 318:	ldr	r3, [fp, #-16]
 31c:	ldr	r2, [r3, #4]
 320:	ldr	r3, [fp, #-16]
 324:	str	r2, [r3]
 328:	b	358 <lista_insere+0xe0>
 32c:	ldr	r3, [fp, #-16]
 330:	ldr	r2, [r3, #4]
 334:	ldr	r3, [fp, #-8]
 338:	str	r2, [r3, #8]
 33c:	ldr	r3, [fp, #-16]
 340:	ldr	r3, [r3, #4]
 344:	ldr	r2, [fp, #-8]
 348:	str	r2, [r3, #4]
 34c:	ldr	r3, [fp, #-16]
 350:	ldr	r2, [fp, #-8]
 354:	str	r2, [r3, #4]
 358:	ldr	r3, [fp, #-8]
 35c:	b	3e4 <lista_insere+0x16c>
 360:	ldr	r3, [fp, #-16]
 364:	ldr	r3, [r3]
 368:	ldr	r2, [fp, #-24]	; 0xffffffe8
 36c:	cmp	r2, r3
 370:	bne	3a8 <lista_insere+0x130>
 374:	ldr	r3, [fp, #-16]
 378:	ldr	r2, [r3]
 37c:	ldr	r3, [fp, #-8]
 380:	str	r2, [r3, #4]
 384:	ldr	r3, [fp, #-16]
 388:	ldr	r3, [r3]
 38c:	ldr	r2, [fp, #-8]
 390:	str	r2, [r3, #8]
 394:	ldr	r3, [fp, #-16]
 398:	ldr	r2, [fp, #-8]
 39c:	str	r2, [r3]
 3a0:	ldr	r3, [fp, #-8]
 3a4:	b	3e4 <lista_insere+0x16c>
 3a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3ac:	ldr	r2, [r3, #8]
 3b0:	ldr	r3, [fp, #-8]
 3b4:	str	r2, [r3, #8]
 3b8:	ldr	r3, [fp, #-8]
 3bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 3c0:	str	r2, [r3, #4]
 3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3c8:	ldr	r3, [r3, #8]
 3cc:	ldr	r2, [fp, #-8]
 3d0:	str	r2, [r3, #4]
 3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 3d8:	ldr	r2, [fp, #-8]
 3dc:	str	r2, [r3, #8]
 3e0:	ldr	r3, [fp, #-8]
 3e4:	mov	r0, r3
 3e8:	sub	sp, fp, #4
 3ec:	ldr	fp, [sp]
 3f0:	add	sp, sp, #4
 3f4:	pop	{pc}		; (ldr pc, [sp], #4)

000003f8 <lista_remove>:
 3f8:	str	fp, [sp, #-8]!
 3fc:	str	lr, [sp, #4]
 400:	add	fp, sp, #4
 404:	sub	sp, sp, #16
 408:	str	r0, [fp, #-16]
 40c:	str	r1, [fp, #-20]	; 0xffffffec
 410:	ldr	r3, [fp, #-16]
 414:	cmp	r3, #0
 418:	beq	428 <lista_remove+0x30>
 41c:	ldr	r3, [fp, #-20]	; 0xffffffec
 420:	cmp	r3, #0
 424:	bne	430 <lista_remove+0x38>
 428:	mov	r3, #0
 42c:	b	4dc <lista_remove+0xe4>
 430:	ldr	r3, [fp, #-16]
 434:	ldr	r3, [r3, #8]
 438:	sub	r2, r3, #1
 43c:	ldr	r3, [fp, #-16]
 440:	str	r2, [r3, #8]
 444:	ldr	r3, [fp, #-20]	; 0xffffffec
 448:	ldr	r3, [r3, #8]
 44c:	cmp	r3, #0
 450:	beq	46c <lista_remove+0x74>
 454:	ldr	r3, [fp, #-20]	; 0xffffffec
 458:	ldr	r3, [r3, #8]
 45c:	ldr	r2, [fp, #-20]	; 0xffffffec
 460:	ldr	r2, [r2, #4]
 464:	str	r2, [r3, #4]
 468:	b	47c <lista_remove+0x84>
 46c:	ldr	r3, [fp, #-20]	; 0xffffffec
 470:	ldr	r2, [r3, #4]
 474:	ldr	r3, [fp, #-16]
 478:	str	r2, [r3]
 47c:	ldr	r3, [fp, #-20]	; 0xffffffec
 480:	ldr	r3, [r3, #4]
 484:	cmp	r3, #0
 488:	beq	4a4 <lista_remove+0xac>
 48c:	ldr	r3, [fp, #-20]	; 0xffffffec
 490:	ldr	r3, [r3, #4]
 494:	ldr	r2, [fp, #-20]	; 0xffffffec
 498:	ldr	r2, [r2, #8]
 49c:	str	r2, [r3, #8]
 4a0:	b	4b4 <lista_remove+0xbc>
 4a4:	ldr	r3, [fp, #-20]	; 0xffffffec
 4a8:	ldr	r2, [r3, #8]
 4ac:	ldr	r3, [fp, #-16]
 4b0:	str	r2, [r3, #4]
 4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
 4b8:	ldr	r3, [r3, #4]
 4bc:	str	r3, [fp, #-8]
 4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
 4c4:	ldr	r3, [r3]
 4c8:	mov	r0, r3
 4cc:	bl	0 <free>
 4d0:	ldr	r0, [fp, #-20]	; 0xffffffec
 4d4:	bl	0 <free>
 4d8:	ldr	r3, [fp, #-8]
 4dc:	mov	r0, r3
 4e0:	sub	sp, fp, #4
 4e4:	ldr	fp, [sp]
 4e8:	add	sp, sp, #4
 4ec:	pop	{pc}		; (ldr pc, [sp], #4)

000004f0 <lista_pesquisa>:
 4f0:	str	fp, [sp, #-8]!
 4f4:	str	lr, [sp, #4]
 4f8:	add	fp, sp, #4
 4fc:	sub	sp, sp, #24
 500:	str	r0, [fp, #-16]
 504:	str	r1, [fp, #-20]	; 0xffffffec
 508:	str	r2, [fp, #-24]	; 0xffffffe8
 50c:	ldr	r3, [fp, #-16]
 510:	cmp	r3, #0
 514:	beq	53c <lista_pesquisa+0x4c>
 518:	ldr	r3, [fp, #-20]	; 0xffffffec
 51c:	cmp	r3, #0
 520:	beq	53c <lista_pesquisa+0x4c>
 524:	ldr	r3, [fp, #-24]	; 0xffffffe8
 528:	cmp	r3, #0
 52c:	beq	544 <lista_pesquisa+0x54>
 530:	ldr	r3, [fp, #-24]	; 0xffffffe8
 534:	cmp	r3, #1
 538:	beq	544 <lista_pesquisa+0x54>
 53c:	mov	r3, #0
 540:	b	5fc <lista_pesquisa+0x10c>
 544:	ldr	r3, [fp, #-24]	; 0xffffffe8
 548:	cmp	r3, #0
 54c:	bne	5a8 <lista_pesquisa+0xb8>
 550:	ldr	r3, [fp, #-16]
 554:	ldr	r3, [r3]
 558:	str	r3, [fp, #-8]
 55c:	b	594 <lista_pesquisa+0xa4>
 560:	ldr	r3, [fp, #-8]
 564:	ldr	r3, [r3]
 568:	ldr	r1, [fp, #-20]	; 0xffffffec
 56c:	mov	r0, r3
 570:	bl	0 <strcmp>
 574:	mov	r3, r0
 578:	cmp	r3, #0
 57c:	bne	588 <lista_pesquisa+0x98>
 580:	ldr	r3, [fp, #-8]
 584:	b	5fc <lista_pesquisa+0x10c>
 588:	ldr	r3, [fp, #-8]
 58c:	ldr	r3, [r3, #4]
 590:	str	r3, [fp, #-8]
 594:	ldr	r3, [fp, #-8]
 598:	cmp	r3, #0
 59c:	bne	560 <lista_pesquisa+0x70>
 5a0:	mov	r3, #0
 5a4:	b	5fc <lista_pesquisa+0x10c>
 5a8:	ldr	r3, [fp, #-16]
 5ac:	ldr	r3, [r3, #4]
 5b0:	str	r3, [fp, #-8]
 5b4:	b	5ec <lista_pesquisa+0xfc>
 5b8:	ldr	r3, [fp, #-8]
 5bc:	ldr	r3, [r3]
 5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
 5c4:	mov	r0, r3
 5c8:	bl	0 <strcmp>
 5cc:	mov	r3, r0
 5d0:	cmp	r3, #0
 5d4:	bne	5e0 <lista_pesquisa+0xf0>
 5d8:	ldr	r3, [fp, #-8]
 5dc:	b	5fc <lista_pesquisa+0x10c>
 5e0:	ldr	r3, [fp, #-8]
 5e4:	ldr	r3, [r3, #8]
 5e8:	str	r3, [fp, #-8]
 5ec:	ldr	r3, [fp, #-8]
 5f0:	cmp	r3, #0
 5f4:	bne	5b8 <lista_pesquisa+0xc8>
 5f8:	mov	r3, #0
 5fc:	mov	r0, r3
 600:	sub	sp, fp, #4
 604:	ldr	fp, [sp]
 608:	add	sp, sp, #4
 60c:	pop	{pc}		; (ldr pc, [sp], #4)

00000610 <lista_ordena>:
 610:	str	fp, [sp, #-8]!
 614:	str	lr, [sp, #4]
 618:	add	fp, sp, #4
 61c:	sub	sp, sp, #24
 620:	str	r0, [fp, #-24]	; 0xffffffe8
 624:	ldr	r3, [fp, #-24]	; 0xffffffe8
 628:	cmp	r3, #0
 62c:	bne	638 <lista_ordena+0x28>
 630:	mvn	r3, #0
 634:	b	700 <lista_ordena+0xf0>
 638:	ldr	r3, [fp, #-24]	; 0xffffffe8
 63c:	ldr	r3, [r3]
 640:	str	r3, [fp, #-12]
 644:	b	6ec <lista_ordena+0xdc>
 648:	ldr	r3, [fp, #-12]
 64c:	str	r3, [fp, #-16]
 650:	ldr	r3, [fp, #-12]
 654:	ldr	r3, [r3, #4]
 658:	str	r3, [fp, #-8]
 65c:	b	69c <lista_ordena+0x8c>
 660:	ldr	r3, [fp, #-8]
 664:	ldr	r2, [r3]
 668:	ldr	r3, [fp, #-16]
 66c:	ldr	r3, [r3]
 670:	mov	r1, r3
 674:	mov	r0, r2
 678:	bl	0 <strcmp>
 67c:	mov	r3, r0
 680:	cmp	r3, #0
 684:	bge	690 <lista_ordena+0x80>
 688:	ldr	r3, [fp, #-8]
 68c:	str	r3, [fp, #-16]
 690:	ldr	r3, [fp, #-8]
 694:	ldr	r3, [r3, #4]
 698:	str	r3, [fp, #-8]
 69c:	ldr	r3, [fp, #-8]
 6a0:	cmp	r3, #0
 6a4:	bne	660 <lista_ordena+0x50>
 6a8:	ldr	r2, [fp, #-16]
 6ac:	ldr	r3, [fp, #-12]
 6b0:	cmp	r2, r3
 6b4:	beq	6e0 <lista_ordena+0xd0>
 6b8:	ldr	r3, [fp, #-12]
 6bc:	ldr	r3, [r3]
 6c0:	str	r3, [fp, #-20]	; 0xffffffec
 6c4:	ldr	r3, [fp, #-16]
 6c8:	ldr	r2, [r3]
 6cc:	ldr	r3, [fp, #-12]
 6d0:	str	r2, [r3]
 6d4:	ldr	r3, [fp, #-16]
 6d8:	ldr	r2, [fp, #-20]	; 0xffffffec
 6dc:	str	r2, [r3]
 6e0:	ldr	r3, [fp, #-12]
 6e4:	ldr	r3, [r3, #4]
 6e8:	str	r3, [fp, #-12]
 6ec:	ldr	r3, [fp, #-12]
 6f0:	ldr	r3, [r3, #4]
 6f4:	cmp	r3, #0
 6f8:	bne	648 <lista_ordena+0x38>
 6fc:	mov	r3, #0
 700:	mov	r0, r3
 704:	sub	sp, fp, #4
 708:	ldr	fp, [sp]
 70c:	add	sp, sp, #4
 710:	pop	{pc}		; (ldr pc, [sp], #4)

00000714 <lista_inverte>:
 714:	push	{fp}		; (str fp, [sp, #-4]!)
 718:	add	fp, sp, #0
 71c:	sub	sp, sp, #28
 720:	str	r0, [fp, #-24]	; 0xffffffe8
 724:	ldr	r3, [fp, #-24]	; 0xffffffe8
 728:	cmp	r3, #0
 72c:	bne	738 <lista_inverte+0x24>
 730:	mvn	r3, #0
 734:	b	860 <lista_inverte+0x14c>
 738:	ldr	r3, [fp, #-24]	; 0xffffffe8
 73c:	ldr	r3, [r3, #8]
 740:	cmp	r3, #1
 744:	bgt	750 <lista_inverte+0x3c>
 748:	mov	r3, #0
 74c:	b	860 <lista_inverte+0x14c>
 750:	ldr	r3, [fp, #-24]	; 0xffffffe8
 754:	ldr	r3, [r3]
 758:	ldr	r3, [r3, #4]
 75c:	str	r3, [fp, #-12]
 760:	mov	r3, #0
 764:	str	r3, [fp, #-8]
 768:	b	7e0 <lista_inverte+0xcc>
 76c:	ldr	r3, [fp, #-12]
 770:	ldr	r3, [r3, #8]
 774:	ldr	r2, [fp, #-12]
 778:	ldr	r2, [r2, #4]
 77c:	str	r2, [r3, #4]
 780:	ldr	r3, [fp, #-12]
 784:	ldr	r3, [r3, #4]
 788:	ldr	r2, [fp, #-12]
 78c:	ldr	r2, [r2, #8]
 790:	str	r2, [r3, #8]
 794:	ldr	r3, [fp, #-12]
 798:	ldr	r3, [r3, #4]
 79c:	str	r3, [fp, #-16]
 7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7a4:	ldr	r2, [r3]
 7a8:	ldr	r3, [fp, #-12]
 7ac:	str	r2, [r3, #4]
 7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7b4:	ldr	r3, [r3]
 7b8:	ldr	r2, [fp, #-12]
 7bc:	str	r2, [r3, #8]
 7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7c4:	ldr	r2, [fp, #-12]
 7c8:	str	r2, [r3]
 7cc:	ldr	r3, [fp, #-16]
 7d0:	str	r3, [fp, #-12]
 7d4:	ldr	r3, [fp, #-8]
 7d8:	add	r3, r3, #1
 7dc:	str	r3, [fp, #-8]
 7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7e4:	ldr	r3, [r3, #8]
 7e8:	sub	r3, r3, #2
 7ec:	ldr	r2, [fp, #-8]
 7f0:	cmp	r2, r3
 7f4:	blt	76c <lista_inverte+0x58>
 7f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7fc:	ldr	r3, [r3, #4]
 800:	str	r3, [fp, #-12]
 804:	ldr	r3, [fp, #-12]
 808:	ldr	r2, [r3, #8]
 80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 810:	str	r2, [r3, #4]
 814:	ldr	r3, [fp, #-24]	; 0xffffffe8
 818:	ldr	r3, [r3, #4]
 81c:	mov	r2, #0
 820:	str	r2, [r3, #4]
 824:	ldr	r3, [fp, #-12]
 828:	mov	r2, #0
 82c:	str	r2, [r3, #8]
 830:	ldr	r3, [fp, #-24]	; 0xffffffe8
 834:	ldr	r2, [r3]
 838:	ldr	r3, [fp, #-12]
 83c:	str	r2, [r3, #4]
 840:	ldr	r3, [fp, #-24]	; 0xffffffe8
 844:	ldr	r3, [r3]
 848:	ldr	r2, [fp, #-12]
 84c:	str	r2, [r3, #8]
 850:	ldr	r3, [fp, #-24]	; 0xffffffe8
 854:	ldr	r2, [fp, #-12]
 858:	str	r2, [r3]
 85c:	mov	r3, #0
 860:	mov	r0, r3
 864:	add	sp, fp, #0
 868:	pop	{fp}		; (ldr fp, [sp], #4)
 86c:	bx	lr
