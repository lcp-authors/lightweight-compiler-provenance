
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_basic_parse.dir/test_basic_parse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #184	; 0xb8
       c:	str	r0, [fp, #-4]
      10:	str	r1, [fp, #-8]
      14:	str	r2, [fp, #-12]
      18:	str	r3, [fp, #-16]
      1c:	movw	r0, #0
      20:	str	r0, [fp, #-68]	; 0xffffffbc
      24:	sub	r1, fp, #60	; 0x3c
      28:	str	r1, [fp, #-64]	; 0xffffffc0
      2c:	ldr	r1, [fp, #-64]	; 0xffffffc0
      30:	str	r0, [sp, #76]	; 0x4c
      34:	mov	r0, r1
      38:	movw	r1, #0
      3c:	and	r1, r1, #255	; 0xff
      40:	movw	r2, #44	; 0x2c
      44:	bl	0 <memset>
      48:	ldr	r0, [fp, #-64]	; 0xffffffc0
      4c:	movw	r1, #1
      50:	str	r1, [r0, #16]
      54:	ldr	r0, [fp, #-8]
      58:	ldr	r1, [fp, #-64]	; 0xffffffc0
      5c:	str	r0, [r1, #4]
      60:	ldr	r0, [fp, #-4]
      64:	movw	r1, #0
      68:	movt	r1, #0
      6c:	movw	r2, #0
      70:	uxth	r2, r2
      74:	ldr	r3, [sp, #76]	; 0x4c
      78:	bl	0 <flatcc_builder_start_buffer>
      7c:	ldr	r1, [fp, #-64]	; 0xffffffc0
      80:	ldr	r2, [fp, #-8]
      84:	ldr	r3, [fp, #-12]
      88:	str	r0, [sp, #72]	; 0x48
      8c:	mov	r0, r1
      90:	mov	r1, r2
      94:	mov	r2, r3
      98:	bl	fcc <flatcc_json_parser_space>
      9c:	str	r0, [fp, #-8]
      a0:	ldr	r0, [fp, #-8]
      a4:	ldr	r1, [fp, #-12]
      a8:	cmp	r0, r1
      ac:	bne	cc <test+0xcc>
      b0:	movw	r0, #0
      b4:	movt	r0, #0
      b8:	ldr	r0, [r0]
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	bl	0 <fprintf>
      c8:	b	f04 <test+0xf04>
      cc:	ldr	r0, [fp, #-12]
      d0:	ldr	r1, [fp, #-8]
      d4:	cmp	r0, r1
      d8:	bls	fc <test+0xfc>
      dc:	ldr	r0, [fp, #-8]
      e0:	ldrb	r0, [r0]
      e4:	cmp	r0, #123	; 0x7b
      e8:	bne	fc <test+0xfc>
      ec:	ldr	r0, [fp, #-8]
      f0:	add	r0, r0, #1
      f4:	str	r0, [fp, #-8]
      f8:	b	144 <test+0x144>
      fc:	movw	r0, #0
     100:	movt	r0, #0
     104:	ldr	r0, [r0]
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	movw	r2, #123	; 0x7b
     114:	bl	0 <fprintf>
     118:	ldr	r1, [fp, #-64]	; 0xffffffc0
     11c:	ldr	r2, [fp, #-8]
     120:	ldr	r3, [fp, #-12]
     124:	str	r0, [sp, #68]	; 0x44
     128:	mov	r0, r1
     12c:	mov	r1, r2
     130:	mov	r2, r3
     134:	movw	r3, #17
     138:	bl	0 <flatcc_json_parser_set_error>
     13c:	str	r0, [fp, #-8]
     140:	b	f04 <test+0xf04>
     144:	ldr	r0, [fp, #-64]	; 0xffffffc0
     148:	ldr	r1, [fp, #-8]
     14c:	ldr	r2, [fp, #-12]
     150:	bl	fcc <flatcc_json_parser_space>
     154:	str	r0, [fp, #-8]
     158:	ldr	r0, [fp, #-8]
     15c:	ldr	r1, [fp, #-12]
     160:	cmp	r0, r1
     164:	bne	184 <test+0x184>
     168:	movw	r0, #0
     16c:	movt	r0, #0
     170:	ldr	r0, [r0]
     174:	movw	r1, #0
     178:	movt	r1, #0
     17c:	bl	0 <fprintf>
     180:	b	f04 <test+0xf04>
     184:	ldr	r0, [fp, #-4]
     188:	movw	r1, #11
     18c:	bl	0 <flatcc_builder_start_table>
     190:	ldr	r0, [fp, #-64]	; 0xffffffc0
     194:	ldr	r1, [fp, #-8]
     198:	ldr	r2, [fp, #-12]
     19c:	bl	1068 <flatcc_json_parser_symbol_start>
     1a0:	str	r0, [fp, #-8]
     1a4:	ldr	r0, [fp, #-8]
     1a8:	ldr	r1, [fp, #-12]
     1ac:	bl	1114 <flatcc_json_parser_symbol_part>
     1b0:	str	r1, [fp, #-84]	; 0xffffffac
     1b4:	str	r0, [fp, #-88]	; 0xffffffa8
     1b8:	ldr	r0, [fp, #-12]
     1bc:	ldr	r1, [fp, #-8]
     1c0:	sub	r0, r0, r1
     1c4:	cmp	r0, #8
     1c8:	ble	1dc <test+0x1dc>
     1cc:	ldr	r0, [fp, #-8]
     1d0:	add	r0, r0, #8
     1d4:	str	r0, [sp, #64]	; 0x40
     1d8:	b	1e4 <test+0x1e4>
     1dc:	ldr	r0, [fp, #-12]
     1e0:	str	r0, [sp, #64]	; 0x40
     1e4:	ldr	r0, [sp, #64]	; 0x40
     1e8:	str	r0, [sp, #92]	; 0x5c
     1ec:	ldr	r0, [fp, #-84]	; 0xffffffac
     1f0:	ldrh	r1, [fp, #-86]	; 0xffffffaa
     1f4:	movw	r2, #0
     1f8:	movt	r2, #0
     1fc:	ldr	r3, [r2]
     200:	rev	r3, r3
     204:	ldrb	ip, [r2, #4]
     208:	lsl	ip, ip, #24
     20c:	ldrb	r2, [r2, #5]
     210:	orr	r2, ip, r2, lsl #16
     214:	rsbs	r1, r2, r1, lsl #16
     218:	sbcs	r0, r0, r3
     21c:	bcs	3f0 <test+0x3f0>
     220:	b	224 <test+0x224>
     224:	ldr	r0, [fp, #-84]	; 0xffffffac
     228:	ldrb	r1, [fp, #-85]	; 0xffffffab
     22c:	movw	r2, #0
     230:	movt	r2, #0
     234:	ldr	r3, [r2]
     238:	rev	r3, r3
     23c:	ldrb	r2, [r2, #4]
     240:	eor	r1, r1, r2
     244:	eor	r0, r0, r3
     248:	orr	r0, r0, r1, lsl #24
     24c:	cmp	r0, #0
     250:	beq	274 <test+0x274>
     254:	b	258 <test+0x258>
     258:	ldr	r0, [fp, #-64]	; 0xffffffc0
     25c:	ldr	r1, [fp, #-8]
     260:	ldr	r2, [fp, #-12]
     264:	movw	r3, #13
     268:	bl	0 <flatcc_json_parser_set_error>
     26c:	str	r0, [fp, #-8]
     270:	b	f04 <test+0xf04>
     274:	ldr	r0, [fp, #-64]	; 0xffffffc0
     278:	ldr	r1, [fp, #-8]
     27c:	add	r1, r1, #5
     280:	ldr	r2, [fp, #-12]
     284:	bl	114c <flatcc_json_parser_symbol_end>
     288:	str	r0, [fp, #-8]
     28c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     290:	ldr	r1, [fp, #-8]
     294:	ldr	r2, [fp, #-12]
     298:	bl	fcc <flatcc_json_parser_space>
     29c:	str	r0, [fp, #-8]
     2a0:	ldr	r0, [fp, #-8]
     2a4:	ldr	r1, [fp, #-12]
     2a8:	cmp	r0, r1
     2ac:	bne	2cc <test+0x2cc>
     2b0:	movw	r0, #0
     2b4:	movt	r0, #0
     2b8:	ldr	r0, [r0]
     2bc:	movw	r1, #0
     2c0:	movt	r1, #0
     2c4:	bl	0 <fprintf>
     2c8:	b	f04 <test+0xf04>
     2cc:	ldr	r0, [fp, #-12]
     2d0:	ldr	r1, [fp, #-8]
     2d4:	cmp	r0, r1
     2d8:	bls	2fc <test+0x2fc>
     2dc:	ldr	r0, [fp, #-8]
     2e0:	ldrb	r0, [r0]
     2e4:	cmp	r0, #58	; 0x3a
     2e8:	bne	2fc <test+0x2fc>
     2ec:	ldr	r0, [fp, #-8]
     2f0:	add	r0, r0, #1
     2f4:	str	r0, [fp, #-8]
     2f8:	b	344 <test+0x344>
     2fc:	movw	r0, #0
     300:	movt	r0, #0
     304:	ldr	r0, [r0]
     308:	movw	r1, #0
     30c:	movt	r1, #0
     310:	movw	r2, #58	; 0x3a
     314:	bl	0 <fprintf>
     318:	ldr	r1, [fp, #-64]	; 0xffffffc0
     31c:	ldr	r2, [fp, #-8]
     320:	ldr	r3, [fp, #-12]
     324:	str	r0, [sp, #60]	; 0x3c
     328:	mov	r0, r1
     32c:	mov	r1, r2
     330:	mov	r2, r3
     334:	movw	r3, #17
     338:	bl	0 <flatcc_json_parser_set_error>
     33c:	str	r0, [fp, #-8]
     340:	b	f04 <test+0xf04>
     344:	ldr	r0, [fp, #-64]	; 0xffffffc0
     348:	ldr	r1, [fp, #-8]
     34c:	ldr	r2, [fp, #-12]
     350:	bl	fcc <flatcc_json_parser_space>
     354:	str	r0, [fp, #-8]
     358:	ldr	r0, [fp, #-8]
     35c:	ldr	r1, [fp, #-12]
     360:	cmp	r0, r1
     364:	bne	384 <test+0x384>
     368:	movw	r0, #0
     36c:	movt	r0, #0
     370:	ldr	r0, [r0]
     374:	movw	r1, #0
     378:	movt	r1, #0
     37c:	bl	0 <fprintf>
     380:	b	f04 <test+0xf04>
     384:	ldr	r0, [fp, #-4]
     388:	movw	r1, #0
     38c:	movw	r2, #1
     390:	movw	r3, #1
     394:	uxth	r3, r3
     398:	bl	0 <flatcc_builder_table_add>
     39c:	str	r0, [sp, #80]	; 0x50
     3a0:	ldr	r0, [sp, #80]	; 0x50
     3a4:	movw	r1, #0
     3a8:	cmp	r0, r1
     3ac:	bne	3b4 <test+0x3b4>
     3b0:	b	f04 <test+0xf04>
     3b4:	ldr	r0, [fp, #-8]
     3b8:	str	r0, [sp, #92]	; 0x5c
     3bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
     3c0:	ldr	r1, [fp, #-8]
     3c4:	ldr	r2, [fp, #-12]
     3c8:	ldr	r3, [sp, #80]	; 0x50
     3cc:	bl	1360 <flatcc_json_parser_uint8>
     3d0:	str	r0, [fp, #-8]
     3d4:	ldr	r0, [sp, #92]	; 0x5c
     3d8:	ldr	r1, [fp, #-8]
     3dc:	cmp	r0, r1
     3e0:	bne	3e8 <test+0x3e8>
     3e4:	b	f04 <test+0xf04>
     3e8:	b	3ec <test+0x3ec>
     3ec:	b	d6c <test+0xd6c>
     3f0:	ldr	r0, [fp, #-84]	; 0xffffffac
     3f4:	movw	r1, #0
     3f8:	movt	r1, #0
     3fc:	ldr	r1, [r1]
     400:	rev	r1, r1
     404:	cmp	r0, r1
     408:	bcs	a58 <test+0xa58>
     40c:	b	410 <test+0x410>
     410:	ldr	r0, [fp, #-88]	; 0xffffffa8
     414:	ldr	r1, [fp, #-84]	; 0xffffffac
     418:	movw	r2, #0
     41c:	movt	r2, #0
     420:	ldr	r3, [r2]
     424:	ldr	r2, [r2, #4]
     428:	rev	r3, r3
     42c:	rev	r2, r2
     430:	subs	r0, r0, r2
     434:	sbcs	r1, r1, r3
     438:	bcs	618 <test+0x618>
     43c:	b	440 <test+0x440>
     440:	ldrh	r0, [fp, #-86]	; 0xffffffaa
     444:	ldr	r1, [fp, #-84]	; 0xffffffac
     448:	movw	r2, #0
     44c:	movt	r2, #0
     450:	ldr	r3, [r2]
     454:	rev	r3, r3
     458:	ldrb	ip, [r2, #4]
     45c:	lsl	ip, ip, #24
     460:	ldrb	r2, [r2, #5]
     464:	orr	r2, ip, r2, lsl #16
     468:	eor	r1, r1, r3
     46c:	eor	r0, r2, r0, lsl #16
     470:	orr	r0, r0, r1
     474:	cmp	r0, #0
     478:	beq	49c <test+0x49c>
     47c:	b	480 <test+0x480>
     480:	ldr	r0, [fp, #-64]	; 0xffffffc0
     484:	ldr	r1, [fp, #-8]
     488:	ldr	r2, [fp, #-12]
     48c:	movw	r3, #13
     490:	bl	0 <flatcc_json_parser_set_error>
     494:	str	r0, [fp, #-8]
     498:	b	f04 <test+0xf04>
     49c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     4a0:	ldr	r1, [fp, #-8]
     4a4:	add	r1, r1, #6
     4a8:	ldr	r2, [fp, #-12]
     4ac:	bl	114c <flatcc_json_parser_symbol_end>
     4b0:	str	r0, [fp, #-8]
     4b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     4b8:	ldr	r1, [fp, #-8]
     4bc:	ldr	r2, [fp, #-12]
     4c0:	bl	fcc <flatcc_json_parser_space>
     4c4:	str	r0, [fp, #-8]
     4c8:	ldr	r0, [fp, #-8]
     4cc:	ldr	r1, [fp, #-12]
     4d0:	cmp	r0, r1
     4d4:	bne	4f4 <test+0x4f4>
     4d8:	movw	r0, #0
     4dc:	movt	r0, #0
     4e0:	ldr	r0, [r0]
     4e4:	movw	r1, #0
     4e8:	movt	r1, #0
     4ec:	bl	0 <fprintf>
     4f0:	b	f04 <test+0xf04>
     4f4:	ldr	r0, [fp, #-12]
     4f8:	ldr	r1, [fp, #-8]
     4fc:	cmp	r0, r1
     500:	bls	524 <test+0x524>
     504:	ldr	r0, [fp, #-8]
     508:	ldrb	r0, [r0]
     50c:	cmp	r0, #58	; 0x3a
     510:	bne	524 <test+0x524>
     514:	ldr	r0, [fp, #-8]
     518:	add	r0, r0, #1
     51c:	str	r0, [fp, #-8]
     520:	b	56c <test+0x56c>
     524:	movw	r0, #0
     528:	movt	r0, #0
     52c:	ldr	r0, [r0]
     530:	movw	r1, #0
     534:	movt	r1, #0
     538:	movw	r2, #58	; 0x3a
     53c:	bl	0 <fprintf>
     540:	ldr	r1, [fp, #-64]	; 0xffffffc0
     544:	ldr	r2, [fp, #-8]
     548:	ldr	r3, [fp, #-12]
     54c:	str	r0, [sp, #56]	; 0x38
     550:	mov	r0, r1
     554:	mov	r1, r2
     558:	mov	r2, r3
     55c:	movw	r3, #17
     560:	bl	0 <flatcc_json_parser_set_error>
     564:	str	r0, [fp, #-8]
     568:	b	f04 <test+0xf04>
     56c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     570:	ldr	r1, [fp, #-8]
     574:	ldr	r2, [fp, #-12]
     578:	bl	fcc <flatcc_json_parser_space>
     57c:	str	r0, [fp, #-8]
     580:	ldr	r0, [fp, #-8]
     584:	ldr	r1, [fp, #-12]
     588:	cmp	r0, r1
     58c:	bne	5ac <test+0x5ac>
     590:	movw	r0, #0
     594:	movt	r0, #0
     598:	ldr	r0, [r0]
     59c:	movw	r1, #0
     5a0:	movt	r1, #0
     5a4:	bl	0 <fprintf>
     5a8:	b	f04 <test+0xf04>
     5ac:	ldr	r0, [fp, #-4]
     5b0:	movw	r1, #1
     5b4:	movw	r2, #8
     5b8:	movw	r3, #8
     5bc:	uxth	r3, r3
     5c0:	bl	0 <flatcc_builder_table_add>
     5c4:	str	r0, [sp, #80]	; 0x50
     5c8:	ldr	r0, [sp, #80]	; 0x50
     5cc:	movw	r1, #0
     5d0:	cmp	r0, r1
     5d4:	bne	5dc <test+0x5dc>
     5d8:	b	f04 <test+0xf04>
     5dc:	ldr	r0, [fp, #-8]
     5e0:	str	r0, [sp, #92]	; 0x5c
     5e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     5e8:	ldr	r1, [fp, #-8]
     5ec:	ldr	r2, [fp, #-12]
     5f0:	ldr	r3, [sp, #80]	; 0x50
     5f4:	bl	0 <flatcc_json_parser_double>
     5f8:	str	r0, [fp, #-8]
     5fc:	ldr	r0, [sp, #92]	; 0x5c
     600:	ldr	r1, [fp, #-8]
     604:	cmp	r0, r1
     608:	bne	610 <test+0x610>
     60c:	b	f04 <test+0xf04>
     610:	b	614 <test+0x614>
     614:	b	a54 <test+0xa54>
     618:	ldr	r0, [fp, #-88]	; 0xffffffa8
     61c:	ldr	r1, [fp, #-84]	; 0xffffffac
     620:	movw	r2, #0
     624:	movt	r2, #0
     628:	ldr	r3, [r2]
     62c:	ldr	r2, [r2, #4]
     630:	rev	r3, r3
     634:	rev	r2, r2
     638:	eor	r1, r1, r3
     63c:	eor	r0, r0, r2
     640:	orr	r0, r0, r1
     644:	cmp	r0, #0
     648:	beq	66c <test+0x66c>
     64c:	b	650 <test+0x650>
     650:	ldr	r0, [fp, #-64]	; 0xffffffc0
     654:	ldr	r1, [fp, #-8]
     658:	ldr	r2, [fp, #-12]
     65c:	movw	r3, #13
     660:	bl	0 <flatcc_json_parser_set_error>
     664:	str	r0, [fp, #-8]
     668:	b	f04 <test+0xf04>
     66c:	ldr	r0, [sp, #92]	; 0x5c
     670:	str	r0, [fp, #-8]
     674:	ldr	r0, [fp, #-8]
     678:	ldr	r1, [fp, #-12]
     67c:	bl	1114 <flatcc_json_parser_symbol_part>
     680:	str	r1, [fp, #-84]	; 0xffffffac
     684:	str	r0, [fp, #-88]	; 0xffffffa8
     688:	ldr	r0, [fp, #-12]
     68c:	ldr	r1, [fp, #-8]
     690:	sub	r0, r0, r1
     694:	cmp	r0, #8
     698:	ble	6ac <test+0x6ac>
     69c:	ldr	r0, [fp, #-8]
     6a0:	add	r0, r0, #8
     6a4:	str	r0, [sp, #52]	; 0x34
     6a8:	b	6b4 <test+0x6b4>
     6ac:	ldr	r0, [fp, #-12]
     6b0:	str	r0, [sp, #52]	; 0x34
     6b4:	ldr	r0, [sp, #52]	; 0x34
     6b8:	str	r0, [sp, #92]	; 0x5c
     6bc:	ldr	r0, [fp, #-84]	; 0xffffffac
     6c0:	movw	r1, #0
     6c4:	movt	r1, #0
     6c8:	ldr	r1, [r1]
     6cc:	rev	r1, r1
     6d0:	cmp	r0, r1
     6d4:	bcs	894 <test+0x894>
     6d8:	b	6dc <test+0x6dc>
     6dc:	ldr	r0, [fp, #-84]	; 0xffffffac
     6e0:	movw	r1, #0
     6e4:	movt	r1, #0
     6e8:	ldr	r1, [r1]
     6ec:	rev	r1, r1
     6f0:	teq	r0, r1
     6f4:	beq	718 <test+0x718>
     6f8:	b	6fc <test+0x6fc>
     6fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
     700:	ldr	r1, [fp, #-8]
     704:	ldr	r2, [fp, #-12]
     708:	movw	r3, #13
     70c:	bl	0 <flatcc_json_parser_set_error>
     710:	str	r0, [fp, #-8]
     714:	b	f04 <test+0xf04>
     718:	ldr	r0, [fp, #-64]	; 0xffffffc0
     71c:	ldr	r1, [fp, #-8]
     720:	add	r1, r1, #4
     724:	ldr	r2, [fp, #-12]
     728:	bl	114c <flatcc_json_parser_symbol_end>
     72c:	str	r0, [fp, #-8]
     730:	ldr	r0, [fp, #-64]	; 0xffffffc0
     734:	ldr	r1, [fp, #-8]
     738:	ldr	r2, [fp, #-12]
     73c:	bl	fcc <flatcc_json_parser_space>
     740:	str	r0, [fp, #-8]
     744:	ldr	r0, [fp, #-8]
     748:	ldr	r1, [fp, #-12]
     74c:	cmp	r0, r1
     750:	bne	770 <test+0x770>
     754:	movw	r0, #0
     758:	movt	r0, #0
     75c:	ldr	r0, [r0]
     760:	movw	r1, #0
     764:	movt	r1, #0
     768:	bl	0 <fprintf>
     76c:	b	f04 <test+0xf04>
     770:	ldr	r0, [fp, #-12]
     774:	ldr	r1, [fp, #-8]
     778:	cmp	r0, r1
     77c:	bls	7a0 <test+0x7a0>
     780:	ldr	r0, [fp, #-8]
     784:	ldrb	r0, [r0]
     788:	cmp	r0, #58	; 0x3a
     78c:	bne	7a0 <test+0x7a0>
     790:	ldr	r0, [fp, #-8]
     794:	add	r0, r0, #1
     798:	str	r0, [fp, #-8]
     79c:	b	7e8 <test+0x7e8>
     7a0:	movw	r0, #0
     7a4:	movt	r0, #0
     7a8:	ldr	r0, [r0]
     7ac:	movw	r1, #0
     7b0:	movt	r1, #0
     7b4:	movw	r2, #58	; 0x3a
     7b8:	bl	0 <fprintf>
     7bc:	ldr	r1, [fp, #-64]	; 0xffffffc0
     7c0:	ldr	r2, [fp, #-8]
     7c4:	ldr	r3, [fp, #-12]
     7c8:	str	r0, [sp, #48]	; 0x30
     7cc:	mov	r0, r1
     7d0:	mov	r1, r2
     7d4:	mov	r2, r3
     7d8:	movw	r3, #17
     7dc:	bl	0 <flatcc_json_parser_set_error>
     7e0:	str	r0, [fp, #-8]
     7e4:	b	f04 <test+0xf04>
     7e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     7ec:	ldr	r1, [fp, #-8]
     7f0:	ldr	r2, [fp, #-12]
     7f4:	bl	fcc <flatcc_json_parser_space>
     7f8:	str	r0, [fp, #-8]
     7fc:	ldr	r0, [fp, #-8]
     800:	ldr	r1, [fp, #-12]
     804:	cmp	r0, r1
     808:	bne	828 <test+0x828>
     80c:	movw	r0, #0
     810:	movt	r0, #0
     814:	ldr	r0, [r0]
     818:	movw	r1, #0
     81c:	movt	r1, #0
     820:	bl	0 <fprintf>
     824:	b	f04 <test+0xf04>
     828:	ldr	r0, [fp, #-4]
     82c:	movw	r1, #3
     830:	movw	r2, #8
     834:	movw	r3, #8
     838:	uxth	r3, r3
     83c:	bl	0 <flatcc_builder_table_add>
     840:	str	r0, [sp, #80]	; 0x50
     844:	ldr	r0, [sp, #80]	; 0x50
     848:	movw	r1, #0
     84c:	cmp	r0, r1
     850:	bne	858 <test+0x858>
     854:	b	f04 <test+0xf04>
     858:	ldr	r0, [fp, #-8]
     85c:	str	r0, [sp, #92]	; 0x5c
     860:	ldr	r0, [fp, #-64]	; 0xffffffc0
     864:	ldr	r1, [fp, #-8]
     868:	ldr	r2, [fp, #-12]
     86c:	ldr	r3, [sp, #80]	; 0x50
     870:	bl	143c <flatcc_json_parser_int64>
     874:	str	r0, [fp, #-8]
     878:	ldr	r0, [sp, #92]	; 0x5c
     87c:	ldr	r1, [fp, #-8]
     880:	cmp	r0, r1
     884:	bne	88c <test+0x88c>
     888:	b	f04 <test+0xf04>
     88c:	b	890 <test+0x890>
     890:	b	a4c <test+0xa4c>
     894:	ldr	r0, [fp, #-84]	; 0xffffffac
     898:	movw	r1, #0
     89c:	movt	r1, #0
     8a0:	ldr	r1, [r1]
     8a4:	rev	r1, r1
     8a8:	teq	r0, r1
     8ac:	beq	8d0 <test+0x8d0>
     8b0:	b	8b4 <test+0x8b4>
     8b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8b8:	ldr	r1, [fp, #-8]
     8bc:	ldr	r2, [fp, #-12]
     8c0:	movw	r3, #13
     8c4:	bl	0 <flatcc_json_parser_set_error>
     8c8:	str	r0, [fp, #-8]
     8cc:	b	f04 <test+0xf04>
     8d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8d4:	ldr	r1, [fp, #-8]
     8d8:	add	r1, r1, #4
     8dc:	ldr	r2, [fp, #-12]
     8e0:	bl	114c <flatcc_json_parser_symbol_end>
     8e4:	str	r0, [fp, #-8]
     8e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8ec:	ldr	r1, [fp, #-8]
     8f0:	ldr	r2, [fp, #-12]
     8f4:	bl	fcc <flatcc_json_parser_space>
     8f8:	str	r0, [fp, #-8]
     8fc:	ldr	r0, [fp, #-8]
     900:	ldr	r1, [fp, #-12]
     904:	cmp	r0, r1
     908:	bne	928 <test+0x928>
     90c:	movw	r0, #0
     910:	movt	r0, #0
     914:	ldr	r0, [r0]
     918:	movw	r1, #0
     91c:	movt	r1, #0
     920:	bl	0 <fprintf>
     924:	b	f04 <test+0xf04>
     928:	ldr	r0, [fp, #-12]
     92c:	ldr	r1, [fp, #-8]
     930:	cmp	r0, r1
     934:	bls	958 <test+0x958>
     938:	ldr	r0, [fp, #-8]
     93c:	ldrb	r0, [r0]
     940:	cmp	r0, #58	; 0x3a
     944:	bne	958 <test+0x958>
     948:	ldr	r0, [fp, #-8]
     94c:	add	r0, r0, #1
     950:	str	r0, [fp, #-8]
     954:	b	9a0 <test+0x9a0>
     958:	movw	r0, #0
     95c:	movt	r0, #0
     960:	ldr	r0, [r0]
     964:	movw	r1, #0
     968:	movt	r1, #0
     96c:	movw	r2, #58	; 0x3a
     970:	bl	0 <fprintf>
     974:	ldr	r1, [fp, #-64]	; 0xffffffc0
     978:	ldr	r2, [fp, #-8]
     97c:	ldr	r3, [fp, #-12]
     980:	str	r0, [sp, #44]	; 0x2c
     984:	mov	r0, r1
     988:	mov	r1, r2
     98c:	mov	r2, r3
     990:	movw	r3, #17
     994:	bl	0 <flatcc_json_parser_set_error>
     998:	str	r0, [fp, #-8]
     99c:	b	f04 <test+0xf04>
     9a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     9a4:	ldr	r1, [fp, #-8]
     9a8:	ldr	r2, [fp, #-12]
     9ac:	bl	fcc <flatcc_json_parser_space>
     9b0:	str	r0, [fp, #-8]
     9b4:	ldr	r0, [fp, #-8]
     9b8:	ldr	r1, [fp, #-12]
     9bc:	cmp	r0, r1
     9c0:	bne	9e0 <test+0x9e0>
     9c4:	movw	r0, #0
     9c8:	movt	r0, #0
     9cc:	ldr	r0, [r0]
     9d0:	movw	r1, #0
     9d4:	movt	r1, #0
     9d8:	bl	0 <fprintf>
     9dc:	b	f04 <test+0xf04>
     9e0:	ldr	r0, [fp, #-4]
     9e4:	movw	r1, #2
     9e8:	movw	r2, #4
     9ec:	movw	r3, #4
     9f0:	uxth	r3, r3
     9f4:	bl	0 <flatcc_builder_table_add>
     9f8:	str	r0, [sp, #80]	; 0x50
     9fc:	ldr	r0, [sp, #80]	; 0x50
     a00:	movw	r1, #0
     a04:	cmp	r0, r1
     a08:	bne	a10 <test+0xa10>
     a0c:	b	f04 <test+0xf04>
     a10:	ldr	r0, [fp, #-8]
     a14:	str	r0, [sp, #92]	; 0x5c
     a18:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a1c:	ldr	r1, [fp, #-8]
     a20:	ldr	r2, [fp, #-12]
     a24:	ldr	r3, [sp, #80]	; 0x50
     a28:	bl	1514 <flatcc_json_parser_uint32>
     a2c:	str	r0, [fp, #-8]
     a30:	ldr	r0, [sp, #92]	; 0x5c
     a34:	ldr	r1, [fp, #-8]
     a38:	cmp	r0, r1
     a3c:	bne	a44 <test+0xa44>
     a40:	b	f04 <test+0xf04>
     a44:	b	a48 <test+0xa48>
     a48:	b	a4c <test+0xa4c>
     a4c:	b	a50 <test+0xa50>
     a50:	b	a54 <test+0xa54>
     a54:	b	d68 <test+0xd68>
     a58:	ldr	r0, [fp, #-84]	; 0xffffffac
     a5c:	movw	r1, #0
     a60:	movt	r1, #0
     a64:	ldr	r1, [r1]
     a68:	rev	r1, r1
     a6c:	teq	r0, r1
     a70:	beq	a94 <test+0xa94>
     a74:	b	a78 <test+0xa78>
     a78:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a7c:	ldr	r1, [fp, #-8]
     a80:	ldr	r2, [fp, #-12]
     a84:	movw	r3, #13
     a88:	bl	0 <flatcc_json_parser_set_error>
     a8c:	str	r0, [fp, #-8]
     a90:	b	f04 <test+0xf04>
     a94:	ldr	r0, [fp, #-64]	; 0xffffffc0
     a98:	ldr	r1, [fp, #-8]
     a9c:	add	r1, r1, #4
     aa0:	ldr	r2, [fp, #-12]
     aa4:	bl	114c <flatcc_json_parser_symbol_end>
     aa8:	str	r0, [fp, #-8]
     aac:	ldr	r0, [fp, #-64]	; 0xffffffc0
     ab0:	ldr	r1, [fp, #-8]
     ab4:	ldr	r2, [fp, #-12]
     ab8:	bl	fcc <flatcc_json_parser_space>
     abc:	str	r0, [fp, #-8]
     ac0:	ldr	r0, [fp, #-8]
     ac4:	ldr	r1, [fp, #-12]
     ac8:	cmp	r0, r1
     acc:	bne	aec <test+0xaec>
     ad0:	movw	r0, #0
     ad4:	movt	r0, #0
     ad8:	ldr	r0, [r0]
     adc:	movw	r1, #0
     ae0:	movt	r1, #0
     ae4:	bl	0 <fprintf>
     ae8:	b	f04 <test+0xf04>
     aec:	ldr	r0, [fp, #-12]
     af0:	ldr	r1, [fp, #-8]
     af4:	cmp	r0, r1
     af8:	bls	b1c <test+0xb1c>
     afc:	ldr	r0, [fp, #-8]
     b00:	ldrb	r0, [r0]
     b04:	cmp	r0, #58	; 0x3a
     b08:	bne	b1c <test+0xb1c>
     b0c:	ldr	r0, [fp, #-8]
     b10:	add	r0, r0, #1
     b14:	str	r0, [fp, #-8]
     b18:	b	b64 <test+0xb64>
     b1c:	movw	r0, #0
     b20:	movt	r0, #0
     b24:	ldr	r0, [r0]
     b28:	movw	r1, #0
     b2c:	movt	r1, #0
     b30:	movw	r2, #58	; 0x3a
     b34:	bl	0 <fprintf>
     b38:	ldr	r1, [fp, #-64]	; 0xffffffc0
     b3c:	ldr	r2, [fp, #-8]
     b40:	ldr	r3, [fp, #-12]
     b44:	str	r0, [sp, #40]	; 0x28
     b48:	mov	r0, r1
     b4c:	mov	r1, r2
     b50:	mov	r2, r3
     b54:	movw	r3, #17
     b58:	bl	0 <flatcc_json_parser_set_error>
     b5c:	str	r0, [fp, #-8]
     b60:	b	f04 <test+0xf04>
     b64:	ldr	r0, [fp, #-64]	; 0xffffffc0
     b68:	ldr	r1, [fp, #-8]
     b6c:	ldr	r2, [fp, #-12]
     b70:	bl	fcc <flatcc_json_parser_space>
     b74:	str	r0, [fp, #-8]
     b78:	ldr	r0, [fp, #-8]
     b7c:	ldr	r1, [fp, #-12]
     b80:	cmp	r0, r1
     b84:	bne	ba4 <test+0xba4>
     b88:	movw	r0, #0
     b8c:	movt	r0, #0
     b90:	ldr	r0, [r0]
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	bl	0 <fprintf>
     ba0:	b	f04 <test+0xf04>
     ba4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     ba8:	ldr	r1, [fp, #-8]
     bac:	ldr	r2, [fp, #-12]
     bb0:	bl	15ec <flatcc_json_parser_string_start>
     bb4:	str	r0, [fp, #-8]
     bb8:	ldr	r0, [fp, #-8]
     bbc:	str	r0, [sp, #92]	; 0x5c
     bc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     bc4:	ldr	r1, [fp, #-8]
     bc8:	ldr	r2, [fp, #-12]
     bcc:	bl	0 <flatcc_json_parser_string_part>
     bd0:	str	r0, [fp, #-8]
     bd4:	ldr	r0, [fp, #-8]
     bd8:	ldr	r1, [fp, #-12]
     bdc:	cmp	r0, r1
     be0:	bne	be8 <test+0xbe8>
     be4:	b	f04 <test+0xf04>
     be8:	ldr	r0, [fp, #-8]
     bec:	ldrb	r0, [r0]
     bf0:	cmp	r0, #34	; 0x22
     bf4:	bne	c18 <test+0xc18>
     bf8:	ldr	r0, [fp, #-4]
     bfc:	ldr	r1, [sp, #92]	; 0x5c
     c00:	ldr	r2, [fp, #-8]
     c04:	ldr	r3, [sp, #92]	; 0x5c
     c08:	sub	r2, r2, r3
     c0c:	bl	0 <flatcc_builder_create_string>
     c10:	str	r0, [fp, #-72]	; 0xffffffb8
     c14:	b	d10 <test+0xd10>
     c18:	ldr	r0, [fp, #-4]
     c1c:	bl	0 <flatcc_builder_start_string>
     c20:	ldr	r1, [fp, #-4]
     c24:	ldr	r2, [fp, #-8]
     c28:	ldr	r3, [sp, #92]	; 0x5c
     c2c:	sub	r2, r2, r3
     c30:	str	r0, [sp, #36]	; 0x24
     c34:	mov	r0, r1
     c38:	mov	r1, r2
     c3c:	bl	0 <flatcc_builder_extend_string>
     c40:	str	r0, [sp, #88]	; 0x58
     c44:	ldr	r0, [sp, #88]	; 0x58
     c48:	movw	r1, #0
     c4c:	cmp	r0, r1
     c50:	bne	c58 <test+0xc58>
     c54:	b	f04 <test+0xf04>
     c58:	ldr	r0, [sp, #88]	; 0x58
     c5c:	ldr	r1, [sp, #92]	; 0x5c
     c60:	ldr	r2, [fp, #-8]
     c64:	ldr	r3, [sp, #92]	; 0x5c
     c68:	sub	r2, r2, r3
     c6c:	bl	0 <memcpy>
     c70:	add	r3, sp, #84	; 0x54
     c74:	ldr	r0, [fp, #-64]	; 0xffffffc0
     c78:	ldr	r1, [fp, #-8]
     c7c:	ldr	r2, [fp, #-12]
     c80:	bl	0 <flatcc_json_parser_string_escape>
     c84:	add	r1, sp, #84	; 0x54
     c88:	str	r0, [fp, #-8]
     c8c:	ldr	r0, [fp, #-4]
     c90:	add	r1, r1, #1
     c94:	ldrb	r2, [sp, #84]	; 0x54
     c98:	bl	0 <flatcc_builder_append_string>
     c9c:	ldr	r1, [fp, #-8]
     ca0:	str	r1, [sp, #92]	; 0x5c
     ca4:	ldr	r1, [fp, #-64]	; 0xffffffc0
     ca8:	ldr	r2, [fp, #-8]
     cac:	ldr	r3, [fp, #-12]
     cb0:	str	r0, [sp, #32]
     cb4:	mov	r0, r1
     cb8:	mov	r1, r2
     cbc:	mov	r2, r3
     cc0:	bl	0 <flatcc_json_parser_string_part>
     cc4:	str	r0, [fp, #-8]
     cc8:	ldr	r0, [fp, #-8]
     ccc:	ldr	r1, [fp, #-12]
     cd0:	cmp	r0, r1
     cd4:	bne	cdc <test+0xcdc>
     cd8:	b	f04 <test+0xf04>
     cdc:	ldr	r0, [fp, #-4]
     ce0:	ldr	r1, [sp, #92]	; 0x5c
     ce4:	ldr	r2, [fp, #-8]
     ce8:	ldr	r3, [sp, #92]	; 0x5c
     cec:	sub	r2, r2, r3
     cf0:	bl	0 <flatcc_builder_append_string>
     cf4:	ldr	r0, [fp, #-8]
     cf8:	ldrb	r0, [r0]
     cfc:	cmp	r0, #34	; 0x22
     d00:	bne	c70 <test+0xc70>
     d04:	ldr	r0, [fp, #-4]
     d08:	bl	0 <flatcc_builder_end_string>
     d0c:	str	r0, [fp, #-72]	; 0xffffffb8
     d10:	ldr	r0, [fp, #-72]	; 0xffffffb8
     d14:	cmp	r0, #0
     d18:	bne	d20 <test+0xd20>
     d1c:	b	f04 <test+0xf04>
     d20:	ldr	r0, [fp, #-4]
     d24:	movw	r1, #10
     d28:	bl	0 <flatcc_builder_table_add_offset>
     d2c:	str	r0, [fp, #-76]	; 0xffffffb4
     d30:	ldr	r0, [fp, #-76]	; 0xffffffb4
     d34:	movw	r1, #0
     d38:	cmp	r0, r1
     d3c:	bne	d44 <test+0xd44>
     d40:	b	f04 <test+0xf04>
     d44:	ldr	r0, [fp, #-72]	; 0xffffffb8
     d48:	ldr	r1, [fp, #-76]	; 0xffffffb4
     d4c:	str	r0, [r1]
     d50:	ldr	r0, [fp, #-64]	; 0xffffffc0
     d54:	ldr	r1, [fp, #-8]
     d58:	ldr	r2, [fp, #-12]
     d5c:	bl	165c <flatcc_json_parser_string_end>
     d60:	str	r0, [fp, #-8]
     d64:	b	d68 <test+0xd68>
     d68:	b	d6c <test+0xd6c>
     d6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     d70:	ldr	r1, [fp, #-8]
     d74:	ldr	r2, [fp, #-12]
     d78:	bl	fcc <flatcc_json_parser_space>
     d7c:	str	r0, [fp, #-8]
     d80:	ldr	r0, [fp, #-8]
     d84:	ldr	r1, [fp, #-12]
     d88:	cmp	r0, r1
     d8c:	bne	dac <test+0xdac>
     d90:	movw	r0, #0
     d94:	movt	r0, #0
     d98:	ldr	r0, [r0]
     d9c:	movw	r1, #0
     da0:	movt	r1, #0
     da4:	bl	0 <fprintf>
     da8:	b	f04 <test+0xf04>
     dac:	ldr	r0, [fp, #-8]
     db0:	ldrb	r0, [r0]
     db4:	cmp	r0, #44	; 0x2c
     db8:	bne	e20 <test+0xe20>
     dbc:	ldr	r0, [fp, #-8]
     dc0:	add	r0, r0, #1
     dc4:	str	r0, [fp, #-8]
     dc8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     dcc:	ldr	r1, [fp, #-8]
     dd0:	ldr	r2, [fp, #-12]
     dd4:	bl	fcc <flatcc_json_parser_space>
     dd8:	str	r0, [fp, #-8]
     ddc:	ldr	r0, [fp, #-8]
     de0:	ldr	r1, [fp, #-12]
     de4:	cmp	r0, r1
     de8:	bne	e08 <test+0xe08>
     dec:	movw	r0, #0
     df0:	movt	r0, #0
     df4:	ldr	r0, [r0]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	bl	0 <fprintf>
     e04:	b	f04 <test+0xf04>
     e08:	ldr	r0, [fp, #-8]
     e0c:	ldrb	r0, [r0]
     e10:	cmp	r0, #125	; 0x7d
     e14:	beq	e1c <test+0xe1c>
     e18:	b	190 <test+0x190>
     e1c:	b	e20 <test+0xe20>
     e20:	ldr	r0, [fp, #-12]
     e24:	ldr	r1, [fp, #-8]
     e28:	cmp	r0, r1
     e2c:	bls	e50 <test+0xe50>
     e30:	ldr	r0, [fp, #-8]
     e34:	ldrb	r0, [r0]
     e38:	cmp	r0, #125	; 0x7d
     e3c:	bne	e50 <test+0xe50>
     e40:	ldr	r0, [fp, #-8]
     e44:	add	r0, r0, #1
     e48:	str	r0, [fp, #-8]
     e4c:	b	e98 <test+0xe98>
     e50:	movw	r0, #0
     e54:	movt	r0, #0
     e58:	ldr	r0, [r0]
     e5c:	movw	r1, #0
     e60:	movt	r1, #0
     e64:	movw	r2, #125	; 0x7d
     e68:	bl	0 <fprintf>
     e6c:	ldr	r1, [fp, #-64]	; 0xffffffc0
     e70:	ldr	r2, [fp, #-8]
     e74:	ldr	r3, [fp, #-12]
     e78:	str	r0, [sp, #28]
     e7c:	mov	r0, r1
     e80:	mov	r1, r2
     e84:	mov	r2, r3
     e88:	movw	r3, #17
     e8c:	bl	0 <flatcc_json_parser_set_error>
     e90:	str	r0, [fp, #-8]
     e94:	b	f04 <test+0xf04>
     e98:	ldr	r0, [fp, #-4]
     e9c:	bl	0 <flatcc_builder_end_table>
     ea0:	str	r0, [fp, #-68]	; 0xffffffbc
     ea4:	ldr	r0, [fp, #-4]
     ea8:	ldr	r1, [fp, #-68]	; 0xffffffbc
     eac:	bl	0 <flatcc_builder_end_buffer>
     eb0:	ldr	r1, [fp, #-64]	; 0xffffffc0
     eb4:	ldr	r2, [fp, #-8]
     eb8:	ldr	r3, [fp, #-12]
     ebc:	str	r0, [sp, #24]
     ec0:	mov	r0, r1
     ec4:	mov	r1, r2
     ec8:	mov	r2, r3
     ecc:	bl	fcc <flatcc_json_parser_space>
     ed0:	str	r0, [fp, #-8]
     ed4:	ldr	r0, [fp, #-8]
     ed8:	ldr	r1, [fp, #-12]
     edc:	cmp	r0, r1
     ee0:	beq	f00 <test+0xf00>
     ee4:	movw	r0, #0
     ee8:	movt	r0, #0
     eec:	ldr	r0, [r0]
     ef0:	movw	r1, #0
     ef4:	movt	r1, #0
     ef8:	bl	0 <fprintf>
     efc:	b	f04 <test+0xf04>
     f00:	b	f04 <test+0xf04>
     f04:	ldr	r0, [fp, #-64]	; 0xffffffc0
     f08:	ldr	r0, [r0, #24]
     f0c:	cmp	r0, #0
     f10:	beq	f98 <test+0xf98>
     f14:	movw	r0, #0
     f18:	movt	r0, #0
     f1c:	ldr	r0, [r0]
     f20:	ldr	r1, [fp, #-64]	; 0xffffffc0
     f24:	ldr	r2, [r1, #16]
     f28:	ldr	r1, [fp, #-64]	; 0xffffffc0
     f2c:	ldr	r1, [r1, #36]	; 0x24
     f30:	ldr	r3, [fp, #-64]	; 0xffffffc0
     f34:	ldr	r3, [r3, #4]
     f38:	sub	r1, r1, r3
     f3c:	add	r3, r1, #1
     f40:	ldr	r1, [fp, #-64]	; 0xffffffc0
     f44:	ldr	r1, [r1, #24]
     f48:	str	r0, [sp, #20]
     f4c:	mov	r0, r1
     f50:	str	r2, [sp, #16]
     f54:	str	r3, [sp, #12]
     f58:	bl	0 <flatcc_json_parser_error_string>
     f5c:	ldr	r1, [sp, #20]
     f60:	str	r0, [sp, #8]
     f64:	mov	r0, r1
     f68:	movw	r1, #0
     f6c:	movt	r1, #0
     f70:	ldr	r2, [sp, #16]
     f74:	ldr	r3, [sp, #12]
     f78:	ldr	ip, [sp, #8]
     f7c:	str	ip, [sp]
     f80:	bl	0 <fprintf>
     f84:	ldr	r1, [fp, #-4]
     f88:	str	r0, [sp, #4]
     f8c:	mov	r0, r1
     f90:	bl	0 <flatcc_builder_reset>
     f94:	b	fb0 <test+0xfb0>
     f98:	movw	r0, #0
     f9c:	movt	r0, #0
     fa0:	ldr	r0, [r0]
     fa4:	movw	r1, #0
     fa8:	movt	r1, #0
     fac:	bl	0 <fprintf>
     fb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
     fb4:	ldr	r0, [r0, #24]
     fb8:	ldr	r1, [fp, #-16]
     fbc:	str	r0, [r1]
     fc0:	ldr	r0, [fp, #-8]
     fc4:	mov	sp, fp
     fc8:	pop	{fp, pc}

00000fcc <flatcc_json_parser_space>:
     fcc:	push	{fp, lr}
     fd0:	mov	fp, sp
     fd4:	sub	sp, sp, #16
     fd8:	str	r0, [sp, #8]
     fdc:	str	r1, [sp, #4]
     fe0:	str	r2, [sp]
     fe4:	ldr	r0, [sp]
     fe8:	ldr	r1, [sp, #4]
     fec:	sub	r0, r0, r1
     ff0:	cmp	r0, #1
     ff4:	ble	1048 <flatcc_json_parser_space+0x7c>
     ff8:	ldr	r0, [sp, #4]
     ffc:	ldrb	r0, [r0]
    1000:	cmp	r0, #32
    1004:	ble	1014 <flatcc_json_parser_space+0x48>
    1008:	ldr	r0, [sp, #4]
    100c:	str	r0, [fp, #-4]
    1010:	b	105c <flatcc_json_parser_space+0x90>
    1014:	ldr	r0, [sp, #4]
    1018:	ldrb	r0, [r0]
    101c:	cmp	r0, #32
    1020:	bne	1044 <flatcc_json_parser_space+0x78>
    1024:	ldr	r0, [sp, #4]
    1028:	ldrb	r0, [r0, #1]
    102c:	cmp	r0, #32
    1030:	ble	1044 <flatcc_json_parser_space+0x78>
    1034:	ldr	r0, [sp, #4]
    1038:	add	r0, r0, #1
    103c:	str	r0, [fp, #-4]
    1040:	b	105c <flatcc_json_parser_space+0x90>
    1044:	b	1048 <flatcc_json_parser_space+0x7c>
    1048:	ldr	r0, [sp, #8]
    104c:	ldr	r1, [sp, #4]
    1050:	ldr	r2, [sp]
    1054:	bl	0 <flatcc_json_parser_space_ext>
    1058:	str	r0, [fp, #-4]
    105c:	ldr	r0, [fp, #-4]
    1060:	mov	sp, fp
    1064:	pop	{fp, pc}

00001068 <flatcc_json_parser_symbol_start>:
    1068:	push	{fp, lr}
    106c:	mov	fp, sp
    1070:	sub	sp, sp, #16
    1074:	str	r0, [sp, #8]
    1078:	str	r1, [sp, #4]
    107c:	str	r2, [sp]
    1080:	ldr	r0, [sp, #4]
    1084:	ldr	r1, [sp]
    1088:	cmp	r0, r1
    108c:	bne	109c <flatcc_json_parser_symbol_start+0x34>
    1090:	ldr	r0, [sp, #4]
    1094:	str	r0, [fp, #-4]
    1098:	b	1108 <flatcc_json_parser_symbol_start+0xa0>
    109c:	ldr	r0, [sp, #4]
    10a0:	ldrb	r0, [r0]
    10a4:	cmp	r0, #34	; 0x22
    10a8:	bne	10c8 <flatcc_json_parser_symbol_start+0x60>
    10ac:	ldr	r0, [sp, #4]
    10b0:	add	r0, r0, #1
    10b4:	str	r0, [sp, #4]
    10b8:	ldr	r0, [sp, #8]
    10bc:	movw	r1, #0
    10c0:	str	r1, [r0, #12]
    10c4:	b	1100 <flatcc_json_parser_symbol_start+0x98>
    10c8:	ldr	r0, [sp, #4]
    10cc:	ldrb	r0, [r0]
    10d0:	cmp	r0, #46	; 0x2e
    10d4:	bne	10f4 <flatcc_json_parser_symbol_start+0x8c>
    10d8:	ldr	r0, [sp, #8]
    10dc:	ldr	r1, [sp, #4]
    10e0:	ldr	r2, [sp]
    10e4:	movw	r3, #5
    10e8:	bl	0 <flatcc_json_parser_set_error>
    10ec:	str	r0, [fp, #-4]
    10f0:	b	1108 <flatcc_json_parser_symbol_start+0xa0>
    10f4:	ldr	r0, [sp, #8]
    10f8:	movw	r1, #1
    10fc:	str	r1, [r0, #12]
    1100:	ldr	r0, [sp, #4]
    1104:	str	r0, [fp, #-4]
    1108:	ldr	r0, [fp, #-4]
    110c:	mov	sp, fp
    1110:	pop	{fp, pc}

00001114 <flatcc_json_parser_symbol_part>:
    1114:	push	{fp, lr}
    1118:	mov	fp, sp
    111c:	sub	sp, sp, #16
    1120:	str	r0, [fp, #-4]
    1124:	str	r1, [sp, #8]
    1128:	ldr	r0, [sp, #8]
    112c:	ldr	r1, [fp, #-4]
    1130:	sub	r0, r0, r1
    1134:	str	r0, [sp, #4]
    1138:	ldr	r0, [fp, #-4]
    113c:	ldr	r1, [sp, #8]
    1140:	bl	173c <flatcc_json_parser_symbol_part_ext>
    1144:	mov	sp, fp
    1148:	pop	{fp, pc}

0000114c <flatcc_json_parser_symbol_end>:
    114c:	push	{fp, lr}
    1150:	mov	fp, sp
    1154:	sub	sp, sp, #32
    1158:	str	r0, [fp, #-8]
    115c:	str	r1, [fp, #-12]
    1160:	str	r2, [sp, #16]
    1164:	movw	r0, #0
    1168:	strb	r0, [sp, #14]
    116c:	ldr	r0, [fp, #-8]
    1170:	ldr	r0, [r0, #12]
    1174:	cmp	r0, #0
    1178:	beq	1280 <flatcc_json_parser_symbol_end+0x134>
    117c:	b	1180 <flatcc_json_parser_symbol_end+0x34>
    1180:	ldr	r0, [fp, #-12]
    1184:	ldr	r1, [sp, #16]
    1188:	cmp	r0, r1
    118c:	movw	r0, #0
    1190:	str	r0, [sp, #8]
    1194:	beq	11b0 <flatcc_json_parser_symbol_end+0x64>
    1198:	ldr	r0, [fp, #-12]
    119c:	ldrb	r0, [r0]
    11a0:	cmp	r0, #32
    11a4:	movw	r0, #0
    11a8:	movgt	r0, #1
    11ac:	str	r0, [sp, #8]
    11b0:	ldr	r0, [sp, #8]
    11b4:	tst	r0, #1
    11b8:	beq	1254 <flatcc_json_parser_symbol_end+0x108>
    11bc:	ldr	r0, [fp, #-12]
    11c0:	ldrb	r0, [r0]
    11c4:	strb	r0, [sp, #15]
    11c8:	strb	r0, [sp, #14]
    11cc:	ldrb	r0, [sp, #15]
    11d0:	cmp	r0, #95	; 0x5f
    11d4:	beq	120c <flatcc_json_parser_symbol_end+0xc0>
    11d8:	ldrb	r0, [sp, #15]
    11dc:	cmp	r0, #46	; 0x2e
    11e0:	beq	120c <flatcc_json_parser_symbol_end+0xc0>
    11e4:	ldrb	r0, [sp, #15]
    11e8:	and	r0, r0, #128	; 0x80
    11ec:	cmp	r0, #0
    11f0:	bne	120c <flatcc_json_parser_symbol_end+0xc0>
    11f4:	ldrb	r0, [sp, #15]
    11f8:	cmp	r0, #48	; 0x30
    11fc:	blt	121c <flatcc_json_parser_symbol_end+0xd0>
    1200:	ldrb	r0, [sp, #15]
    1204:	cmp	r0, #57	; 0x39
    1208:	bgt	121c <flatcc_json_parser_symbol_end+0xd0>
    120c:	ldr	r0, [fp, #-12]
    1210:	add	r0, r0, #1
    1214:	str	r0, [fp, #-12]
    1218:	b	1180 <flatcc_json_parser_symbol_end+0x34>
    121c:	ldrb	r0, [sp, #15]
    1220:	orr	r0, r0, #32
    1224:	strb	r0, [sp, #15]
    1228:	ldrb	r0, [sp, #15]
    122c:	cmp	r0, #97	; 0x61
    1230:	blt	1250 <flatcc_json_parser_symbol_end+0x104>
    1234:	ldrb	r0, [sp, #15]
    1238:	cmp	r0, #122	; 0x7a
    123c:	bgt	1250 <flatcc_json_parser_symbol_end+0x104>
    1240:	ldr	r0, [fp, #-12]
    1244:	add	r0, r0, #1
    1248:	str	r0, [fp, #-12]
    124c:	b	1180 <flatcc_json_parser_symbol_end+0x34>
    1250:	b	1254 <flatcc_json_parser_symbol_end+0x108>
    1254:	ldrb	r0, [sp, #14]
    1258:	cmp	r0, #46	; 0x2e
    125c:	bne	127c <flatcc_json_parser_symbol_end+0x130>
    1260:	ldr	r0, [fp, #-8]
    1264:	ldr	r1, [fp, #-12]
    1268:	ldr	r2, [sp, #16]
    126c:	movw	r3, #5
    1270:	bl	0 <flatcc_json_parser_set_error>
    1274:	str	r0, [fp, #-4]
    1278:	b	1354 <flatcc_json_parser_symbol_end+0x208>
    127c:	b	134c <flatcc_json_parser_symbol_end+0x200>
    1280:	b	1284 <flatcc_json_parser_symbol_end+0x138>
    1284:	ldr	r0, [fp, #-12]
    1288:	ldr	r1, [sp, #16]
    128c:	cmp	r0, r1
    1290:	movw	r0, #0
    1294:	str	r0, [sp, #4]
    1298:	beq	12b4 <flatcc_json_parser_symbol_end+0x168>
    129c:	ldr	r0, [fp, #-12]
    12a0:	ldrb	r0, [r0]
    12a4:	cmp	r0, #34	; 0x22
    12a8:	movw	r0, #0
    12ac:	movne	r0, #1
    12b0:	str	r0, [sp, #4]
    12b4:	ldr	r0, [sp, #4]
    12b8:	tst	r0, #1
    12bc:	beq	1304 <flatcc_json_parser_symbol_end+0x1b8>
    12c0:	ldr	r0, [fp, #-12]
    12c4:	ldrb	r0, [r0]
    12c8:	cmp	r0, #92	; 0x5c
    12cc:	bne	12f4 <flatcc_json_parser_symbol_end+0x1a8>
    12d0:	ldr	r0, [sp, #16]
    12d4:	ldr	r1, [fp, #-12]
    12d8:	sub	r0, r0, r1
    12dc:	cmp	r0, #2
    12e0:	bge	12e8 <flatcc_json_parser_symbol_end+0x19c>
    12e4:	b	1304 <flatcc_json_parser_symbol_end+0x1b8>
    12e8:	ldr	r0, [fp, #-12]
    12ec:	add	r0, r0, #1
    12f0:	str	r0, [fp, #-12]
    12f4:	ldr	r0, [fp, #-12]
    12f8:	add	r0, r0, #1
    12fc:	str	r0, [fp, #-12]
    1300:	b	1284 <flatcc_json_parser_symbol_end+0x138>
    1304:	ldr	r0, [fp, #-12]
    1308:	ldr	r1, [sp, #16]
    130c:	cmp	r0, r1
    1310:	beq	1324 <flatcc_json_parser_symbol_end+0x1d8>
    1314:	ldr	r0, [fp, #-12]
    1318:	ldrb	r0, [r0]
    131c:	cmp	r0, #34	; 0x22
    1320:	beq	1340 <flatcc_json_parser_symbol_end+0x1f4>
    1324:	ldr	r0, [fp, #-8]
    1328:	ldr	r1, [fp, #-12]
    132c:	ldr	r2, [sp, #16]
    1330:	movw	r3, #20
    1334:	bl	0 <flatcc_json_parser_set_error>
    1338:	str	r0, [fp, #-4]
    133c:	b	1354 <flatcc_json_parser_symbol_end+0x208>
    1340:	ldr	r0, [fp, #-12]
    1344:	add	r0, r0, #1
    1348:	str	r0, [fp, #-12]
    134c:	ldr	r0, [fp, #-12]
    1350:	str	r0, [fp, #-4]
    1354:	ldr	r0, [fp, #-4]
    1358:	mov	sp, fp
    135c:	pop	{fp, pc}

00001360 <flatcc_json_parser_uint8>:
    1360:	push	{r4, r5, fp, lr}
    1364:	add	fp, sp, #8
    1368:	sub	sp, sp, #56	; 0x38
    136c:	str	r0, [fp, #-16]
    1370:	str	r1, [fp, #-20]	; 0xffffffec
    1374:	str	r2, [fp, #-24]	; 0xffffffe8
    1378:	str	r3, [fp, #-28]	; 0xffffffe4
    137c:	mov	r0, #0
    1380:	str	r0, [sp, #28]
    1384:	str	r0, [sp, #24]
    1388:	movw	r0, #0
    138c:	str	r0, [sp, #20]
    1390:	ldr	r0, [fp, #-20]	; 0xffffffec
    1394:	str	r0, [sp, #16]
    1398:	ldr	r0, [fp, #-28]	; 0xffffffe4
    139c:	movw	r1, #0
    13a0:	strb	r1, [r0]
    13a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    13a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13ac:	cmp	r0, r1
    13b0:	bne	13c0 <flatcc_json_parser_uint8+0x60>
    13b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    13b8:	str	r0, [fp, #-12]
    13bc:	b	1430 <flatcc_json_parser_uint8+0xd0>
    13c0:	ldr	r0, [fp, #-16]
    13c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    13c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    13cc:	add	r3, sp, #20
    13d0:	add	ip, sp, #24
    13d4:	str	ip, [sp]
    13d8:	bl	0 <flatcc_json_parser_integer>
    13dc:	str	r0, [fp, #-20]	; 0xffffffec
    13e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    13e4:	ldr	r1, [sp, #16]
    13e8:	cmp	r0, r1
    13ec:	beq	1428 <flatcc_json_parser_uint8+0xc8>
    13f0:	ldr	r0, [fp, #-16]
    13f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    13f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    13fc:	ldr	r3, [sp, #20]
    1400:	ldr	ip, [sp, #24]
    1404:	ldr	lr, [sp, #28]
    1408:	ldr	r4, [fp, #-28]	; 0xffffffe4
    140c:	mov	r5, sp
    1410:	str	r4, [r5, #8]
    1414:	str	lr, [r5, #4]
    1418:	str	ip, [r5]
    141c:	bl	18b0 <flatcc_json_parser_coerce_uint8>
    1420:	str	r0, [fp, #-12]
    1424:	b	1430 <flatcc_json_parser_uint8+0xd0>
    1428:	ldr	r0, [fp, #-20]	; 0xffffffec
    142c:	str	r0, [fp, #-12]
    1430:	ldr	r0, [fp, #-12]
    1434:	sub	sp, fp, #8
    1438:	pop	{r4, r5, fp, pc}

0000143c <flatcc_json_parser_int64>:
    143c:	push	{r4, r5, fp, lr}
    1440:	add	fp, sp, #8
    1444:	sub	sp, sp, #56	; 0x38
    1448:	str	r0, [fp, #-16]
    144c:	str	r1, [fp, #-20]	; 0xffffffec
    1450:	str	r2, [fp, #-24]	; 0xffffffe8
    1454:	str	r3, [fp, #-28]	; 0xffffffe4
    1458:	mov	r0, #0
    145c:	str	r0, [sp, #28]
    1460:	str	r0, [sp, #24]
    1464:	str	r0, [sp, #20]
    1468:	ldr	r1, [fp, #-20]	; 0xffffffec
    146c:	str	r1, [sp, #16]
    1470:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1474:	str	r0, [r1, #4]
    1478:	str	r0, [r1]
    147c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1480:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1484:	cmp	r0, r1
    1488:	bne	1498 <flatcc_json_parser_int64+0x5c>
    148c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1490:	str	r0, [fp, #-12]
    1494:	b	1508 <flatcc_json_parser_int64+0xcc>
    1498:	ldr	r0, [fp, #-16]
    149c:	ldr	r1, [fp, #-20]	; 0xffffffec
    14a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    14a4:	add	r3, sp, #20
    14a8:	add	ip, sp, #24
    14ac:	str	ip, [sp]
    14b0:	bl	0 <flatcc_json_parser_integer>
    14b4:	str	r0, [fp, #-20]	; 0xffffffec
    14b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    14bc:	ldr	r1, [sp, #16]
    14c0:	cmp	r0, r1
    14c4:	beq	1500 <flatcc_json_parser_int64+0xc4>
    14c8:	ldr	r0, [fp, #-16]
    14cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    14d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    14d4:	ldr	r3, [sp, #20]
    14d8:	ldr	ip, [sp, #24]
    14dc:	ldr	lr, [sp, #28]
    14e0:	ldr	r4, [fp, #-28]	; 0xffffffe4
    14e4:	mov	r5, sp
    14e8:	str	r4, [r5, #8]
    14ec:	str	lr, [r5, #4]
    14f0:	str	ip, [r5]
    14f4:	bl	195c <flatcc_json_parser_coerce_int64>
    14f8:	str	r0, [fp, #-12]
    14fc:	b	1508 <flatcc_json_parser_int64+0xcc>
    1500:	ldr	r0, [fp, #-20]	; 0xffffffec
    1504:	str	r0, [fp, #-12]
    1508:	ldr	r0, [fp, #-12]
    150c:	sub	sp, fp, #8
    1510:	pop	{r4, r5, fp, pc}

00001514 <flatcc_json_parser_uint32>:
    1514:	push	{r4, r5, fp, lr}
    1518:	add	fp, sp, #8
    151c:	sub	sp, sp, #56	; 0x38
    1520:	str	r0, [fp, #-16]
    1524:	str	r1, [fp, #-20]	; 0xffffffec
    1528:	str	r2, [fp, #-24]	; 0xffffffe8
    152c:	str	r3, [fp, #-28]	; 0xffffffe4
    1530:	mov	r0, #0
    1534:	str	r0, [sp, #28]
    1538:	str	r0, [sp, #24]
    153c:	movw	r0, #0
    1540:	str	r0, [sp, #20]
    1544:	ldr	r1, [fp, #-20]	; 0xffffffec
    1548:	str	r1, [sp, #16]
    154c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1550:	str	r0, [r1]
    1554:	ldr	r0, [fp, #-20]	; 0xffffffec
    1558:	ldr	r1, [fp, #-24]	; 0xffffffe8
    155c:	cmp	r0, r1
    1560:	bne	1570 <flatcc_json_parser_uint32+0x5c>
    1564:	ldr	r0, [fp, #-20]	; 0xffffffec
    1568:	str	r0, [fp, #-12]
    156c:	b	15e0 <flatcc_json_parser_uint32+0xcc>
    1570:	ldr	r0, [fp, #-16]
    1574:	ldr	r1, [fp, #-20]	; 0xffffffec
    1578:	ldr	r2, [fp, #-24]	; 0xffffffe8
    157c:	add	r3, sp, #20
    1580:	add	ip, sp, #24
    1584:	str	ip, [sp]
    1588:	bl	0 <flatcc_json_parser_integer>
    158c:	str	r0, [fp, #-20]	; 0xffffffec
    1590:	ldr	r0, [fp, #-20]	; 0xffffffec
    1594:	ldr	r1, [sp, #16]
    1598:	cmp	r0, r1
    159c:	beq	15d8 <flatcc_json_parser_uint32+0xc4>
    15a0:	ldr	r0, [fp, #-16]
    15a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    15a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15ac:	ldr	r3, [sp, #20]
    15b0:	ldr	ip, [sp, #24]
    15b4:	ldr	lr, [sp, #28]
    15b8:	ldr	r4, [fp, #-28]	; 0xffffffe4
    15bc:	mov	r5, sp
    15c0:	str	r4, [r5, #8]
    15c4:	str	lr, [r5, #4]
    15c8:	str	ip, [r5]
    15cc:	bl	1a40 <flatcc_json_parser_coerce_uint32>
    15d0:	str	r0, [fp, #-12]
    15d4:	b	15e0 <flatcc_json_parser_uint32+0xcc>
    15d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    15dc:	str	r0, [fp, #-12]
    15e0:	ldr	r0, [fp, #-12]
    15e4:	sub	sp, fp, #8
    15e8:	pop	{r4, r5, fp, pc}

000015ec <flatcc_json_parser_string_start>:
    15ec:	push	{fp, lr}
    15f0:	mov	fp, sp
    15f4:	sub	sp, sp, #16
    15f8:	str	r0, [sp, #8]
    15fc:	str	r1, [sp, #4]
    1600:	str	r2, [sp]
    1604:	ldr	r0, [sp, #4]
    1608:	ldr	r1, [sp]
    160c:	cmp	r0, r1
    1610:	beq	1624 <flatcc_json_parser_string_start+0x38>
    1614:	ldr	r0, [sp, #4]
    1618:	ldrb	r0, [r0]
    161c:	cmp	r0, #34	; 0x22
    1620:	beq	1640 <flatcc_json_parser_string_start+0x54>
    1624:	ldr	r0, [sp, #8]
    1628:	ldr	r1, [sp, #4]
    162c:	ldr	r2, [sp]
    1630:	movw	r3, #16
    1634:	bl	0 <flatcc_json_parser_set_error>
    1638:	str	r0, [fp, #-4]
    163c:	b	1650 <flatcc_json_parser_string_start+0x64>
    1640:	ldr	r0, [sp, #4]
    1644:	add	r0, r0, #1
    1648:	str	r0, [sp, #4]
    164c:	str	r0, [fp, #-4]
    1650:	ldr	r0, [fp, #-4]
    1654:	mov	sp, fp
    1658:	pop	{fp, pc}

0000165c <flatcc_json_parser_string_end>:
    165c:	push	{fp, lr}
    1660:	mov	fp, sp
    1664:	sub	sp, sp, #16
    1668:	str	r0, [sp, #8]
    166c:	str	r1, [sp, #4]
    1670:	str	r2, [sp]
    1674:	ldr	r0, [sp, #4]
    1678:	ldr	r1, [sp]
    167c:	cmp	r0, r1
    1680:	beq	1694 <flatcc_json_parser_string_end+0x38>
    1684:	ldr	r0, [sp, #4]
    1688:	ldrb	r0, [r0]
    168c:	cmp	r0, #34	; 0x22
    1690:	beq	16b0 <flatcc_json_parser_string_end+0x54>
    1694:	ldr	r0, [sp, #8]
    1698:	ldr	r1, [sp, #4]
    169c:	ldr	r2, [sp]
    16a0:	movw	r3, #20
    16a4:	bl	0 <flatcc_json_parser_set_error>
    16a8:	str	r0, [fp, #-4]
    16ac:	b	16c0 <flatcc_json_parser_string_end+0x64>
    16b0:	ldr	r0, [sp, #4]
    16b4:	add	r0, r0, #1
    16b8:	str	r0, [sp, #4]
    16bc:	str	r0, [fp, #-4]
    16c0:	ldr	r0, [fp, #-4]
    16c4:	mov	sp, fp
    16c8:	pop	{fp, pc}

000016cc <main>:
    16cc:	push	{r4, r5, fp, lr}
    16d0:	add	fp, sp, #8
    16d4:	sub	sp, sp, #256	; 0x100
    16d8:	movw	r0, #0
    16dc:	str	r0, [fp, #-12]
    16e0:	mvn	r0, #0
    16e4:	str	r0, [fp, #-16]
    16e8:	add	r0, sp, #16
    16ec:	bl	0 <flatcc_builder_init>
    16f0:	movw	r1, #645	; 0x285
    16f4:	movw	r2, #0
    16f8:	movt	r2, #0
    16fc:	add	r1, r2, r1
    1700:	add	r3, sp, #16
    1704:	str	r0, [sp, #12]
    1708:	mov	r0, r3
    170c:	str	r1, [sp, #8]
    1710:	mov	r1, r2
    1714:	ldr	r2, [sp, #8]
    1718:	sub	r3, fp, #16
    171c:	bl	0 <test>
    1720:	add	r1, sp, #16
    1724:	str	r0, [sp, #4]
    1728:	mov	r0, r1
    172c:	bl	0 <flatcc_builder_clear>
    1730:	ldr	r0, [fp, #-16]
    1734:	sub	sp, fp, #8
    1738:	pop	{r4, r5, fp, pc}

0000173c <flatcc_json_parser_symbol_part_ext>:
    173c:	sub	sp, sp, #24
    1740:	str	r0, [sp, #20]
    1744:	str	r1, [sp, #16]
    1748:	mov	r0, #0
    174c:	str	r0, [sp, #12]
    1750:	str	r0, [sp, #8]
    1754:	ldr	r0, [sp, #16]
    1758:	ldr	r1, [sp, #20]
    175c:	sub	r0, r0, r1
    1760:	str	r0, [sp, #4]
    1764:	ldr	r0, [sp, #4]
    1768:	cmp	r0, #8
    176c:	bls	1778 <flatcc_json_parser_symbol_part_ext+0x3c>
    1770:	movw	r0, #8
    1774:	str	r0, [sp, #4]
    1778:	ldr	r0, [sp, #4]
    177c:	cmp	r0, #8
    1780:	str	r0, [sp]
    1784:	bhi	18a0 <flatcc_json_parser_symbol_part_ext+0x164>
    1788:	add	r0, pc, #8
    178c:	ldr	r1, [sp]
    1790:	ldr	r0, [r0, r1, lsl #2]
    1794:	mov	pc, r0
    1798:	.word	0x0000189c
    179c:	.word	0x00001880
    17a0:	.word	0x00001864
    17a4:	.word	0x00001848
    17a8:	.word	0x0000182c
    17ac:	.word	0x00001810
    17b0:	.word	0x000017f4
    17b4:	.word	0x000017d8
    17b8:	.word	0x000017bc
    17bc:	ldr	r0, [sp, #20]
    17c0:	ldrb	r0, [r0, #7]
    17c4:	ldr	r1, [sp, #8]
    17c8:	ldr	r2, [sp, #12]
    17cc:	orr	r0, r1, r0
    17d0:	str	r2, [sp, #12]
    17d4:	str	r0, [sp, #8]
    17d8:	ldr	r0, [sp, #20]
    17dc:	ldrb	r0, [r0, #6]
    17e0:	ldr	r1, [sp, #8]
    17e4:	ldr	r2, [sp, #12]
    17e8:	orr	r0, r1, r0, lsl #8
    17ec:	str	r2, [sp, #12]
    17f0:	str	r0, [sp, #8]
    17f4:	ldr	r0, [sp, #20]
    17f8:	ldrb	r0, [r0, #5]
    17fc:	ldr	r1, [sp, #8]
    1800:	ldr	r2, [sp, #12]
    1804:	orr	r0, r1, r0, lsl #16
    1808:	str	r2, [sp, #12]
    180c:	str	r0, [sp, #8]
    1810:	ldr	r0, [sp, #20]
    1814:	ldrb	r0, [r0, #4]
    1818:	ldr	r1, [sp, #8]
    181c:	ldr	r2, [sp, #12]
    1820:	orr	r0, r1, r0, lsl #24
    1824:	str	r2, [sp, #12]
    1828:	str	r0, [sp, #8]
    182c:	ldr	r0, [sp, #20]
    1830:	ldrb	r0, [r0, #3]
    1834:	ldr	r1, [sp, #8]
    1838:	ldr	r2, [sp, #12]
    183c:	orr	r0, r2, r0
    1840:	str	r1, [sp, #8]
    1844:	str	r0, [sp, #12]
    1848:	ldr	r0, [sp, #20]
    184c:	ldrb	r0, [r0, #2]
    1850:	ldr	r1, [sp, #8]
    1854:	ldr	r2, [sp, #12]
    1858:	orr	r0, r2, r0, lsl #8
    185c:	str	r1, [sp, #8]
    1860:	str	r0, [sp, #12]
    1864:	ldr	r0, [sp, #20]
    1868:	ldrb	r0, [r0, #1]
    186c:	ldr	r1, [sp, #8]
    1870:	ldr	r2, [sp, #12]
    1874:	orr	r0, r2, r0, lsl #16
    1878:	str	r1, [sp, #8]
    187c:	str	r0, [sp, #12]
    1880:	ldr	r0, [sp, #20]
    1884:	ldrb	r0, [r0]
    1888:	ldr	r1, [sp, #8]
    188c:	ldr	r2, [sp, #12]
    1890:	orr	r0, r2, r0, lsl #24
    1894:	str	r1, [sp, #8]
    1898:	str	r0, [sp, #12]
    189c:	b	18a0 <flatcc_json_parser_symbol_part_ext+0x164>
    18a0:	ldr	r0, [sp, #8]
    18a4:	ldr	r1, [sp, #12]
    18a8:	add	sp, sp, #24
    18ac:	bx	lr

000018b0 <flatcc_json_parser_coerce_uint8>:
    18b0:	push	{r4, sl, fp, lr}
    18b4:	add	fp, sp, #8
    18b8:	sub	sp, sp, #32
    18bc:	ldr	ip, [fp, #12]
    18c0:	ldr	lr, [fp, #8]
    18c4:	ldr	r4, [fp, #16]
    18c8:	str	r0, [fp, #-16]
    18cc:	str	r1, [sp, #20]
    18d0:	str	r2, [sp, #16]
    18d4:	str	r3, [sp, #12]
    18d8:	str	ip, [sp, #4]
    18dc:	str	lr, [sp]
    18e0:	ldr	r0, [sp, #12]
    18e4:	cmp	r0, #0
    18e8:	beq	1908 <flatcc_json_parser_coerce_uint8+0x58>
    18ec:	ldr	r0, [fp, #-16]
    18f0:	ldr	r1, [sp, #20]
    18f4:	ldr	r2, [sp, #16]
    18f8:	movw	r3, #8
    18fc:	bl	0 <flatcc_json_parser_set_error>
    1900:	str	r0, [fp, #-12]
    1904:	b	1950 <flatcc_json_parser_coerce_uint8+0xa0>
    1908:	ldr	r0, [sp]
    190c:	ldr	r1, [sp, #4]
    1910:	subs	r0, r0, #256	; 0x100
    1914:	sbcs	r1, r1, #0
    1918:	bcc	193c <flatcc_json_parser_coerce_uint8+0x8c>
    191c:	b	1920 <flatcc_json_parser_coerce_uint8+0x70>
    1920:	ldr	r0, [fp, #-16]
    1924:	ldr	r1, [sp, #20]
    1928:	ldr	r2, [sp, #16]
    192c:	movw	r3, #7
    1930:	bl	0 <flatcc_json_parser_set_error>
    1934:	str	r0, [fp, #-12]
    1938:	b	1950 <flatcc_json_parser_coerce_uint8+0xa0>
    193c:	ldrb	r0, [sp]
    1940:	ldr	r1, [fp, #16]
    1944:	strb	r0, [r1]
    1948:	ldr	r0, [sp, #20]
    194c:	str	r0, [fp, #-12]
    1950:	ldr	r0, [fp, #-12]
    1954:	sub	sp, fp, #8
    1958:	pop	{r4, sl, fp, pc}

0000195c <flatcc_json_parser_coerce_int64>:
    195c:	push	{r4, sl, fp, lr}
    1960:	add	fp, sp, #8
    1964:	sub	sp, sp, #32
    1968:	ldr	ip, [fp, #12]
    196c:	ldr	lr, [fp, #8]
    1970:	ldr	r4, [fp, #16]
    1974:	str	r0, [fp, #-16]
    1978:	str	r1, [sp, #20]
    197c:	str	r2, [sp, #16]
    1980:	str	r3, [sp, #12]
    1984:	str	ip, [sp, #4]
    1988:	str	lr, [sp]
    198c:	ldr	r0, [sp, #12]
    1990:	cmp	r0, #0
    1994:	beq	19ec <flatcc_json_parser_coerce_int64+0x90>
    1998:	ldr	r0, [sp]
    199c:	ldr	r1, [sp, #4]
    19a0:	subs	r0, r0, #1
    19a4:	sbcs	r1, r1, #-2147483648	; 0x80000000
    19a8:	bcc	19cc <flatcc_json_parser_coerce_int64+0x70>
    19ac:	b	19b0 <flatcc_json_parser_coerce_int64+0x54>
    19b0:	ldr	r0, [fp, #-16]
    19b4:	ldr	r1, [sp, #20]
    19b8:	ldr	r2, [sp, #16]
    19bc:	movw	r3, #8
    19c0:	bl	0 <flatcc_json_parser_set_error>
    19c4:	str	r0, [fp, #-12]
    19c8:	b	1a34 <flatcc_json_parser_coerce_int64+0xd8>
    19cc:	ldr	r0, [sp]
    19d0:	ldr	r1, [sp, #4]
    19d4:	rsbs	r0, r0, #0
    19d8:	rsc	r1, r1, #0
    19dc:	ldr	r2, [fp, #16]
    19e0:	str	r0, [r2]
    19e4:	str	r1, [r2, #4]
    19e8:	b	1a2c <flatcc_json_parser_coerce_int64+0xd0>
    19ec:	ldr	r0, [sp, #4]
    19f0:	cmn	r0, #1
    19f4:	bgt	1a18 <flatcc_json_parser_coerce_int64+0xbc>
    19f8:	b	19fc <flatcc_json_parser_coerce_int64+0xa0>
    19fc:	ldr	r0, [fp, #-16]
    1a00:	ldr	r1, [sp, #20]
    1a04:	ldr	r2, [sp, #16]
    1a08:	movw	r3, #7
    1a0c:	bl	0 <flatcc_json_parser_set_error>
    1a10:	str	r0, [fp, #-12]
    1a14:	b	1a34 <flatcc_json_parser_coerce_int64+0xd8>
    1a18:	ldr	r0, [sp]
    1a1c:	ldr	r1, [sp, #4]
    1a20:	ldr	r2, [fp, #16]
    1a24:	str	r1, [r2, #4]
    1a28:	str	r0, [r2]
    1a2c:	ldr	r0, [sp, #20]
    1a30:	str	r0, [fp, #-12]
    1a34:	ldr	r0, [fp, #-12]
    1a38:	sub	sp, fp, #8
    1a3c:	pop	{r4, sl, fp, pc}

00001a40 <flatcc_json_parser_coerce_uint32>:
    1a40:	push	{r4, sl, fp, lr}
    1a44:	add	fp, sp, #8
    1a48:	sub	sp, sp, #32
    1a4c:	ldr	ip, [fp, #12]
    1a50:	ldr	lr, [fp, #8]
    1a54:	ldr	r4, [fp, #16]
    1a58:	str	r0, [fp, #-16]
    1a5c:	str	r1, [sp, #20]
    1a60:	str	r2, [sp, #16]
    1a64:	str	r3, [sp, #12]
    1a68:	str	ip, [sp, #4]
    1a6c:	str	lr, [sp]
    1a70:	ldr	r0, [sp, #12]
    1a74:	cmp	r0, #0
    1a78:	beq	1a98 <flatcc_json_parser_coerce_uint32+0x58>
    1a7c:	ldr	r0, [fp, #-16]
    1a80:	ldr	r1, [sp, #20]
    1a84:	ldr	r2, [sp, #16]
    1a88:	movw	r3, #8
    1a8c:	bl	0 <flatcc_json_parser_set_error>
    1a90:	str	r0, [fp, #-12]
    1a94:	b	1ad8 <flatcc_json_parser_coerce_uint32+0x98>
    1a98:	ldr	r0, [sp, #4]
    1a9c:	cmp	r0, #0
    1aa0:	beq	1ac4 <flatcc_json_parser_coerce_uint32+0x84>
    1aa4:	b	1aa8 <flatcc_json_parser_coerce_uint32+0x68>
    1aa8:	ldr	r0, [fp, #-16]
    1aac:	ldr	r1, [sp, #20]
    1ab0:	ldr	r2, [sp, #16]
    1ab4:	movw	r3, #7
    1ab8:	bl	0 <flatcc_json_parser_set_error>
    1abc:	str	r0, [fp, #-12]
    1ac0:	b	1ad8 <flatcc_json_parser_coerce_uint32+0x98>
    1ac4:	ldr	r0, [sp]
    1ac8:	ldr	r1, [fp, #16]
    1acc:	str	r0, [r1]
    1ad0:	ldr	r0, [sp, #20]
    1ad4:	str	r0, [fp, #-12]
    1ad8:	ldr	r0, [fp, #-12]
    1adc:	sub	sp, fp, #8
    1ae0:	pop	{r4, sl, fp, pc}
