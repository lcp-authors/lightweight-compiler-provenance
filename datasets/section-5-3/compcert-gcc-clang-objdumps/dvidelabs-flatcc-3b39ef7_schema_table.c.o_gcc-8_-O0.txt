
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/schema_table.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_default_hash_function>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #24
  10:	str	r0, [fp, #-16]
  14:	str	r1, [fp, #-20]	; 0xffffffec
  18:	ldr	r3, [fp, #-20]	; 0xffffffec
  1c:	mov	r0, r3
  20:	mov	r1, #0
  24:	sub	r3, fp, #12
  28:	str	r3, [sp, #4]
  2c:	movw	r3, #15186	; 0x3b52
  30:	movt	r3, #12137	; 0x2f69
  34:	str	r3, [sp]
  38:	mov	r2, r0
  3c:	mov	r3, r1
  40:	ldr	r0, [fp, #-16]
  44:	bl	0 <cmetrohash64_1>
  48:	ldrd	r2, [fp, #-12]
  4c:	mov	r3, r2
  50:	mov	r0, r3
  54:	sub	sp, fp, #4
  58:	ldr	fp, [sp]
  5c:	add	sp, sp, #4
  60:	pop	{pc}		; (ldr pc, [sp], #4)

00000064 <fb_schema_table_clear>:
  64:	str	fp, [sp, #-8]!
  68:	str	lr, [sp, #4]
  6c:	add	fp, sp, #4
  70:	sub	sp, sp, #8
  74:	str	r0, [fp, #-8]
  78:	ldr	r0, [fp, #-8]
  7c:	bl	bb8 <ht_clear>
  80:	nop	{0}
  84:	sub	sp, fp, #4
  88:	ldr	fp, [sp]
  8c:	add	sp, sp, #4
  90:	pop	{pc}		; (ldr pc, [sp], #4)

00000094 <fb_schema_table_destroy>:
  94:	str	fp, [sp, #-8]!
  98:	str	lr, [sp, #4]
  9c:	add	fp, sp, #4
  a0:	sub	sp, sp, #16
  a4:	str	r0, [fp, #-8]
  a8:	str	r1, [fp, #-12]
  ac:	str	r2, [fp, #-16]
  b0:	ldr	r3, [fp, #-12]
  b4:	cmp	r3, #0
  b8:	beq	cc <fb_schema_table_destroy+0x38>
  bc:	ldr	r2, [fp, #-16]
  c0:	ldr	r1, [fp, #-12]
  c4:	ldr	r0, [fp, #-8]
  c8:	bl	b10 <ht_visit>
  cc:	ldr	r0, [fp, #-8]
  d0:	bl	bb8 <ht_clear>
  d4:	nop	{0}
  d8:	sub	sp, fp, #4
  dc:	ldr	fp, [sp]
  e0:	add	sp, sp, #4
  e4:	pop	{pc}		; (ldr pc, [sp], #4)

000000e8 <fb_schema_table_init>:
  e8:	str	fp, [sp, #-8]!
  ec:	str	lr, [sp, #4]
  f0:	add	fp, sp, #4
  f4:	sub	sp, sp, #8
  f8:	str	r0, [fp, #-8]
  fc:	str	r1, [fp, #-12]
 100:	ldr	r1, [fp, #-12]
 104:	ldr	r0, [fp, #-8]
 108:	bl	3a8 <ht_init>
 10c:	mov	r3, r0
 110:	mov	r0, r3
 114:	sub	sp, fp, #4
 118:	ldr	fp, [sp]
 11c:	add	sp, sp, #4
 120:	pop	{pc}		; (ldr pc, [sp], #4)

00000124 <fb_schema_table_resize>:
 124:	str	fp, [sp, #-8]!
 128:	str	lr, [sp, #4]
 12c:	add	fp, sp, #4
 130:	sub	sp, sp, #8
 134:	str	r0, [fp, #-8]
 138:	str	r1, [fp, #-12]
 13c:	ldr	r1, [fp, #-12]
 140:	ldr	r0, [fp, #-8]
 144:	bl	464 <ht_resize>
 148:	mov	r3, r0
 14c:	mov	r0, r3
 150:	sub	sp, fp, #4
 154:	ldr	fp, [sp]
 158:	add	sp, sp, #4
 15c:	pop	{pc}		; (ldr pc, [sp], #4)

00000160 <fb_schema_table_insert>:
 160:	str	fp, [sp, #-8]!
 164:	str	lr, [sp, #4]
 168:	add	fp, sp, #4
 16c:	sub	sp, sp, #24
 170:	str	r0, [fp, #-8]
 174:	str	r1, [fp, #-12]
 178:	str	r2, [fp, #-16]
 17c:	str	r3, [fp, #-20]	; 0xffffffec
 180:	ldr	r3, [fp, #4]
 184:	str	r3, [sp]
 188:	ldr	r3, [fp, #-20]	; 0xffffffec
 18c:	ldr	r2, [fp, #-16]
 190:	ldr	r1, [fp, #-12]
 194:	ldr	r0, [fp, #-8]
 198:	bl	594 <ht_insert>
 19c:	mov	r3, r0
 1a0:	mov	r0, r3
 1a4:	sub	sp, fp, #4
 1a8:	ldr	fp, [sp]
 1ac:	add	sp, sp, #4
 1b0:	pop	{pc}		; (ldr pc, [sp], #4)

000001b4 <fb_schema_table_insert_item>:
 1b4:	str	r4, [sp, #-12]!
 1b8:	str	fp, [sp, #4]
 1bc:	str	lr, [sp, #8]
 1c0:	add	fp, sp, #8
 1c4:	sub	sp, sp, #28
 1c8:	str	r0, [fp, #-16]
 1cc:	str	r1, [fp, #-20]	; 0xffffffec
 1d0:	str	r2, [fp, #-24]	; 0xffffffe8
 1d4:	ldr	r0, [fp, #-20]	; 0xffffffec
 1d8:	bl	c88 <ht_key>
 1dc:	mov	r4, r0
 1e0:	ldr	r0, [fp, #-20]	; 0xffffffec
 1e4:	bl	cb0 <ht_key_len>
 1e8:	mov	r2, r0
 1ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1f0:	str	r3, [sp]
 1f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 1f8:	mov	r1, r4
 1fc:	ldr	r0, [fp, #-16]
 200:	bl	594 <ht_insert>
 204:	mov	r3, r0
 208:	mov	r0, r3
 20c:	sub	sp, fp, #8
 210:	ldr	r4, [sp]
 214:	ldr	fp, [sp, #4]
 218:	add	sp, sp, #8
 21c:	pop	{pc}		; (ldr pc, [sp], #4)

00000220 <fb_schema_table_find>:
 220:	str	fp, [sp, #-8]!
 224:	str	lr, [sp, #4]
 228:	add	fp, sp, #4
 22c:	sub	sp, sp, #16
 230:	str	r0, [fp, #-8]
 234:	str	r1, [fp, #-12]
 238:	str	r2, [fp, #-16]
 23c:	ldr	r2, [fp, #-16]
 240:	ldr	r1, [fp, #-12]
 244:	ldr	r0, [fp, #-8]
 248:	bl	8c4 <ht_find>
 24c:	mov	r3, r0
 250:	mov	r0, r3
 254:	sub	sp, fp, #4
 258:	ldr	fp, [sp]
 25c:	add	sp, sp, #4
 260:	pop	{pc}		; (ldr pc, [sp], #4)

00000264 <fb_schema_table_find_item>:
 264:	str	r4, [sp, #-12]!
 268:	str	fp, [sp, #4]
 26c:	str	lr, [sp, #8]
 270:	add	fp, sp, #8
 274:	sub	sp, sp, #12
 278:	str	r0, [fp, #-16]
 27c:	str	r1, [fp, #-20]	; 0xffffffec
 280:	ldr	r0, [fp, #-20]	; 0xffffffec
 284:	bl	c88 <ht_key>
 288:	mov	r4, r0
 28c:	ldr	r0, [fp, #-20]	; 0xffffffec
 290:	bl	cb0 <ht_key_len>
 294:	mov	r3, r0
 298:	mov	r2, r3
 29c:	mov	r1, r4
 2a0:	ldr	r0, [fp, #-16]
 2a4:	bl	8c4 <ht_find>
 2a8:	mov	r3, r0
 2ac:	mov	r0, r3
 2b0:	sub	sp, fp, #8
 2b4:	ldr	r4, [sp]
 2b8:	ldr	fp, [sp, #4]
 2bc:	add	sp, sp, #8
 2c0:	pop	{pc}		; (ldr pc, [sp], #4)

000002c4 <fb_schema_table_remove>:
 2c4:	str	fp, [sp, #-8]!
 2c8:	str	lr, [sp, #4]
 2cc:	add	fp, sp, #4
 2d0:	sub	sp, sp, #16
 2d4:	str	r0, [fp, #-8]
 2d8:	str	r1, [fp, #-12]
 2dc:	str	r2, [fp, #-16]
 2e0:	ldr	r2, [fp, #-16]
 2e4:	ldr	r1, [fp, #-12]
 2e8:	ldr	r0, [fp, #-8]
 2ec:	bl	9d4 <ht_remove>
 2f0:	mov	r3, r0
 2f4:	mov	r0, r3
 2f8:	sub	sp, fp, #4
 2fc:	ldr	fp, [sp]
 300:	add	sp, sp, #4
 304:	pop	{pc}		; (ldr pc, [sp], #4)

00000308 <fb_schema_table_remove_item>:
 308:	str	r4, [sp, #-12]!
 30c:	str	fp, [sp, #4]
 310:	str	lr, [sp, #8]
 314:	add	fp, sp, #8
 318:	sub	sp, sp, #12
 31c:	str	r0, [fp, #-16]
 320:	str	r1, [fp, #-20]	; 0xffffffec
 324:	ldr	r0, [fp, #-20]	; 0xffffffec
 328:	bl	c88 <ht_key>
 32c:	mov	r4, r0
 330:	ldr	r0, [fp, #-20]	; 0xffffffec
 334:	bl	cb0 <ht_key_len>
 338:	mov	r3, r0
 33c:	mov	r2, r3
 340:	mov	r1, r4
 344:	ldr	r0, [fp, #-16]
 348:	bl	9d4 <ht_remove>
 34c:	mov	r3, r0
 350:	mov	r0, r3
 354:	sub	sp, fp, #8
 358:	ldr	r4, [sp]
 35c:	ldr	fp, [sp, #4]
 360:	add	sp, sp, #8
 364:	pop	{pc}		; (ldr pc, [sp], #4)

00000368 <fb_schema_table_visit>:
 368:	str	fp, [sp, #-8]!
 36c:	str	lr, [sp, #4]
 370:	add	fp, sp, #4
 374:	sub	sp, sp, #16
 378:	str	r0, [fp, #-8]
 37c:	str	r1, [fp, #-12]
 380:	str	r2, [fp, #-16]
 384:	ldr	r2, [fp, #-16]
 388:	ldr	r1, [fp, #-12]
 38c:	ldr	r0, [fp, #-8]
 390:	bl	b10 <ht_visit>
 394:	nop	{0}
 398:	sub	sp, fp, #4
 39c:	ldr	fp, [sp]
 3a0:	add	sp, sp, #4
 3a4:	pop	{pc}		; (ldr pc, [sp], #4)

000003a8 <ht_init>:
 3a8:	str	fp, [sp, #-8]!
 3ac:	str	lr, [sp, #4]
 3b0:	add	fp, sp, #4
 3b4:	sub	sp, sp, #16
 3b8:	str	r0, [fp, #-16]
 3bc:	str	r1, [fp, #-20]	; 0xffffffec
 3c0:	mov	r3, #4
 3c4:	str	r3, [fp, #-8]
 3c8:	b	3d8 <ht_init+0x30>
 3cc:	ldr	r3, [fp, #-8]
 3d0:	lsl	r3, r3, #1
 3d4:	str	r3, [fp, #-8]
 3d8:	ldr	r3, [fp, #-8]
 3dc:	mov	r2, #179	; 0xb3
 3e0:	mul	r3, r2, r3
 3e4:	lsr	r3, r3, #8
 3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
 3ec:	cmp	r2, r3
 3f0:	bhi	3cc <ht_init+0x24>
 3f4:	mov	r1, #4
 3f8:	ldr	r0, [fp, #-8]
 3fc:	bl	0 <calloc>
 400:	mov	r3, r0
 404:	mov	r2, r3
 408:	ldr	r3, [fp, #-16]
 40c:	str	r2, [r3]
 410:	ldr	r3, [fp, #-16]
 414:	ldr	r3, [r3]
 418:	cmp	r3, #0
 41c:	bne	428 <ht_init+0x80>
 420:	mvn	r3, #0
 424:	b	450 <ht_init+0xa8>
 428:	ldr	r3, [fp, #-16]
 42c:	mov	r2, #0
 430:	str	r2, [r3, #4]
 434:	ldr	r3, [fp, #-16]
 438:	ldr	r2, [fp, #-8]
 43c:	str	r2, [r3, #12]
 440:	ldr	r3, [fp, #-16]
 444:	mov	r2, #0
 448:	str	r2, [r3, #8]
 44c:	mov	r3, #0
 450:	mov	r0, r3
 454:	sub	sp, fp, #4
 458:	ldr	fp, [sp]
 45c:	add	sp, sp, #4
 460:	pop	{pc}		; (ldr pc, [sp], #4)

00000464 <ht_resize>:
 464:	str	r4, [sp, #-12]!
 468:	str	fp, [sp, #4]
 46c:	str	lr, [sp, #8]
 470:	add	fp, sp, #8
 474:	sub	sp, sp, #52	; 0x34
 478:	str	r0, [fp, #-48]	; 0xffffffd0
 47c:	str	r1, [fp, #-52]	; 0xffffffcc
 480:	ldr	r3, [fp, #-48]	; 0xffffffd0
 484:	ldr	r3, [r3]
 488:	str	r3, [fp, #-20]	; 0xffffffec
 48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 490:	ldr	r3, [r3, #8]
 494:	ldr	r2, [fp, #-52]	; 0xffffffcc
 498:	cmp	r2, r3
 49c:	bcs	4ac <ht_resize+0x48>
 4a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
 4a4:	ldr	r3, [r3, #8]
 4a8:	str	r3, [fp, #-52]	; 0xffffffcc
 4ac:	sub	r3, fp, #40	; 0x28
 4b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
 4b4:	mov	r0, r3
 4b8:	bl	3a8 <ht_init>
 4bc:	mov	r3, r0
 4c0:	cmp	r3, #0
 4c4:	beq	4d0 <ht_resize+0x6c>
 4c8:	mvn	r3, #0
 4cc:	b	57c <ht_resize+0x118>
 4d0:	mov	r3, #0
 4d4:	str	r3, [fp, #-16]
 4d8:	b	548 <ht_resize+0xe4>
 4dc:	ldr	r3, [fp, #-16]
 4e0:	lsl	r3, r3, #2
 4e4:	ldr	r2, [fp, #-20]	; 0xffffffec
 4e8:	add	r3, r2, r3
 4ec:	ldr	r3, [r3]
 4f0:	str	r3, [fp, #-24]	; 0xffffffe8
 4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4f8:	cmp	r3, #0
 4fc:	beq	53c <ht_resize+0xd8>
 500:	ldr	r3, [fp, #-24]	; 0xffffffe8
 504:	cmp	r3, #2
 508:	beq	53c <ht_resize+0xd8>
 50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 510:	bl	c88 <ht_key>
 514:	mov	r4, r0
 518:	ldr	r0, [fp, #-24]	; 0xffffffe8
 51c:	bl	cb0 <ht_key_len>
 520:	mov	r2, r0
 524:	sub	r0, fp, #40	; 0x28
 528:	mov	r3, #3
 52c:	str	r3, [sp]
 530:	ldr	r3, [fp, #-24]	; 0xffffffe8
 534:	mov	r1, r4
 538:	bl	594 <ht_insert>
 53c:	ldr	r3, [fp, #-16]
 540:	add	r3, r3, #1
 544:	str	r3, [fp, #-16]
 548:	ldr	r3, [fp, #-48]	; 0xffffffd0
 54c:	ldr	r3, [r3, #12]
 550:	ldr	r2, [fp, #-16]
 554:	cmp	r2, r3
 558:	bcc	4dc <ht_resize+0x78>
 55c:	ldr	r0, [fp, #-48]	; 0xffffffd0
 560:	bl	bb8 <ht_clear>
 564:	sub	r3, fp, #40	; 0x28
 568:	mov	r2, #16
 56c:	mov	r1, r3
 570:	ldr	r0, [fp, #-48]	; 0xffffffd0
 574:	bl	0 <memcpy>
 578:	mov	r3, #0
 57c:	mov	r0, r3
 580:	sub	sp, fp, #8
 584:	ldr	r4, [sp]
 588:	ldr	fp, [sp, #4]
 58c:	add	sp, sp, #8
 590:	pop	{pc}		; (ldr pc, [sp], #4)

00000594 <ht_insert>:
 594:	str	fp, [sp, #-8]!
 598:	str	lr, [sp, #4]
 59c:	add	fp, sp, #4
 5a0:	sub	sp, sp, #48	; 0x30
 5a4:	str	r0, [fp, #-40]	; 0xffffffd8
 5a8:	str	r1, [fp, #-44]	; 0xffffffd4
 5ac:	str	r2, [fp, #-48]	; 0xffffffd0
 5b0:	str	r3, [fp, #-52]	; 0xffffffcc
 5b4:	mov	r3, #0
 5b8:	str	r3, [fp, #-16]
 5bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
 5c0:	cmp	r3, #0
 5c4:	bne	5e8 <ht_insert+0x54>
 5c8:	movw	r3, #0
 5cc:	movt	r3, #0
 5d0:	mov	r2, #114	; 0x72
 5d4:	movw	r1, #0
 5d8:	movt	r1, #0
 5dc:	movw	r0, #0
 5e0:	movt	r0, #0
 5e4:	bl	0 <__assert_fail>
 5e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
 5ec:	cmp	r3, #2
 5f0:	bne	614 <ht_insert+0x80>
 5f4:	movw	r3, #0
 5f8:	movt	r3, #0
 5fc:	mov	r2, #115	; 0x73
 600:	movw	r1, #0
 604:	movt	r1, #0
 608:	movw	r0, #0
 60c:	movt	r0, #0
 610:	bl	0 <__assert_fail>
 614:	ldr	r3, [fp, #-52]	; 0xffffffcc
 618:	cmp	r3, #1
 61c:	bne	640 <ht_insert+0xac>
 620:	movw	r3, #0
 624:	movt	r3, #0
 628:	mov	r2, #116	; 0x74
 62c:	movw	r1, #0
 630:	movt	r1, #0
 634:	movw	r0, #0
 638:	movt	r0, #0
 63c:	bl	0 <__assert_fail>
 640:	ldr	r3, [fp, #-40]	; 0xffffffd8
 644:	ldr	r2, [r3, #8]
 648:	ldr	r3, [fp, #-40]	; 0xffffffd8
 64c:	ldr	r3, [r3, #12]
 650:	mov	r1, #179	; 0xb3
 654:	mul	r3, r1, r3
 658:	lsr	r3, r3, #8
 65c:	cmp	r2, r3
 660:	bcc	6b4 <ht_insert+0x120>
 664:	ldr	r3, [fp, #-40]	; 0xffffffd8
 668:	ldr	r3, [r3, #8]
 66c:	lsl	r3, r3, #1
 670:	mov	r1, r3
 674:	ldr	r0, [fp, #-40]	; 0xffffffd8
 678:	bl	464 <ht_resize>
 67c:	mov	r3, r0
 680:	cmp	r3, #0
 684:	beq	6b4 <ht_insert+0x120>
 688:	movw	r3, #0
 68c:	movt	r3, #0
 690:	ldr	r3, [r3]
 694:	movw	r2, #0
 698:	movt	r2, #0
 69c:	movw	r1, #0
 6a0:	movt	r1, #0
 6a4:	mov	r0, r3
 6a8:	bl	0 <fprintf>
 6ac:	mov	r0, #1
 6b0:	bl	0 <exit>
 6b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6b8:	ldr	r3, [r3]
 6bc:	str	r3, [fp, #-20]	; 0xffffffec
 6c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6c4:	ldr	r3, [r3, #12]
 6c8:	sub	r3, r3, #1
 6cc:	str	r3, [fp, #-24]	; 0xffffffe8
 6d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
 6d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
 6d8:	bl	0 <ht_default_hash_function>
 6dc:	str	r0, [fp, #-28]	; 0xffffffe4
 6e0:	mov	r3, #0
 6e4:	str	r3, [fp, #-8]
 6e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
 6ec:	ldr	r3, [fp, #-8]
 6f0:	add	r3, r2, r3
 6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 6f8:	and	r3, r3, r2
 6fc:	str	r3, [fp, #-12]
 700:	ldr	r3, [fp, #4]
 704:	cmp	r3, #2
 708:	beq	718 <ht_insert+0x184>
 70c:	ldr	r3, [fp, #4]
 710:	cmp	r3, #3
 714:	bne	848 <ht_insert+0x2b4>
 718:	ldr	r3, [fp, #-40]	; 0xffffffd8
 71c:	ldr	r3, [r3, #8]
 720:	add	r2, r3, #1
 724:	ldr	r3, [fp, #-40]	; 0xffffffd8
 728:	str	r2, [r3, #8]
 72c:	b	754 <ht_insert+0x1c0>
 730:	ldr	r3, [fp, #-8]
 734:	add	r3, r3, #1
 738:	str	r3, [fp, #-8]
 73c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 740:	ldr	r3, [fp, #-8]
 744:	add	r3, r2, r3
 748:	ldr	r2, [fp, #-24]	; 0xffffffe8
 74c:	and	r3, r3, r2
 750:	str	r3, [fp, #-12]
 754:	ldr	r3, [fp, #-12]
 758:	lsl	r3, r3, #2
 75c:	ldr	r2, [fp, #-20]	; 0xffffffec
 760:	add	r3, r2, r3
 764:	ldr	r3, [r3]
 768:	cmp	r3, #0
 76c:	beq	78c <ht_insert+0x1f8>
 770:	ldr	r3, [fp, #-12]
 774:	lsl	r3, r3, #2
 778:	ldr	r2, [fp, #-20]	; 0xffffffec
 77c:	add	r3, r2, r3
 780:	ldr	r3, [r3]
 784:	cmp	r3, #2
 788:	bne	730 <ht_insert+0x19c>
 78c:	ldr	r3, [fp, #-12]
 790:	lsl	r3, r3, #2
 794:	ldr	r2, [fp, #-20]	; 0xffffffec
 798:	add	r3, r2, r3
 79c:	ldr	r2, [fp, #-52]	; 0xffffffcc
 7a0:	str	r2, [r3]
 7a4:	mov	r3, #0
 7a8:	b	8b0 <ht_insert+0x31c>
 7ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 7b0:	cmp	r3, #2
 7b4:	bne	7dc <ht_insert+0x248>
 7b8:	ldr	r3, [fp, #-16]
 7bc:	cmp	r3, #0
 7c0:	bne	824 <ht_insert+0x290>
 7c4:	ldr	r3, [fp, #-12]
 7c8:	lsl	r3, r3, #2
 7cc:	ldr	r2, [fp, #-20]	; 0xffffffec
 7d0:	add	r3, r2, r3
 7d4:	str	r3, [fp, #-16]
 7d8:	b	824 <ht_insert+0x290>
 7dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
 7e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
 7e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
 7e8:	bl	c10 <ht_match>
 7ec:	mov	r3, r0
 7f0:	cmp	r3, #0
 7f4:	beq	824 <ht_insert+0x290>
 7f8:	ldr	r3, [fp, #4]
 7fc:	cmp	r3, #0
 800:	bne	81c <ht_insert+0x288>
 804:	ldr	r3, [fp, #-12]
 808:	lsl	r3, r3, #2
 80c:	ldr	r2, [fp, #-20]	; 0xffffffec
 810:	add	r3, r2, r3
 814:	ldr	r2, [fp, #-52]	; 0xffffffcc
 818:	str	r2, [r3]
 81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 820:	b	8b0 <ht_insert+0x31c>
 824:	ldr	r3, [fp, #-8]
 828:	add	r3, r3, #1
 82c:	str	r3, [fp, #-8]
 830:	ldr	r2, [fp, #-28]	; 0xffffffe4
 834:	ldr	r3, [fp, #-8]
 838:	add	r3, r2, r3
 83c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 840:	and	r3, r3, r2
 844:	str	r3, [fp, #-12]
 848:	ldr	r3, [fp, #-12]
 84c:	lsl	r3, r3, #2
 850:	ldr	r2, [fp, #-20]	; 0xffffffec
 854:	add	r3, r2, r3
 858:	ldr	r3, [r3]
 85c:	str	r3, [fp, #-32]	; 0xffffffe0
 860:	ldr	r3, [fp, #-32]	; 0xffffffe0
 864:	cmp	r3, #0
 868:	bne	7ac <ht_insert+0x218>
 86c:	ldr	r3, [fp, #-16]
 870:	cmp	r3, #0
 874:	bne	88c <ht_insert+0x2f8>
 878:	ldr	r3, [fp, #-12]
 87c:	lsl	r3, r3, #2
 880:	ldr	r2, [fp, #-20]	; 0xffffffec
 884:	add	r3, r2, r3
 888:	str	r3, [fp, #-16]
 88c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 890:	ldr	r3, [r3, #8]
 894:	add	r2, r3, #1
 898:	ldr	r3, [fp, #-40]	; 0xffffffd8
 89c:	str	r2, [r3, #8]
 8a0:	ldr	r3, [fp, #-16]
 8a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
 8a8:	str	r2, [r3]
 8ac:	mov	r3, #0
 8b0:	mov	r0, r3
 8b4:	sub	sp, fp, #4
 8b8:	ldr	fp, [sp]
 8bc:	add	sp, sp, #4
 8c0:	pop	{pc}		; (ldr pc, [sp], #4)

000008c4 <ht_find>:
 8c4:	str	fp, [sp, #-8]!
 8c8:	str	lr, [sp, #4]
 8cc:	add	fp, sp, #4
 8d0:	sub	sp, sp, #40	; 0x28
 8d4:	str	r0, [fp, #-32]	; 0xffffffe0
 8d8:	str	r1, [fp, #-36]	; 0xffffffdc
 8dc:	str	r2, [fp, #-40]	; 0xffffffd8
 8e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8e4:	ldr	r3, [r3]
 8e8:	str	r3, [fp, #-16]
 8ec:	ldr	r3, [fp, #-16]
 8f0:	cmp	r3, #0
 8f4:	bne	900 <ht_find+0x3c>
 8f8:	mov	r3, #0
 8fc:	b	9c0 <ht_find+0xfc>
 900:	ldr	r3, [fp, #-32]	; 0xffffffe0
 904:	ldr	r3, [r3, #12]
 908:	sub	r3, r3, #1
 90c:	str	r3, [fp, #-20]	; 0xffffffec
 910:	ldr	r1, [fp, #-40]	; 0xffffffd8
 914:	ldr	r0, [fp, #-36]	; 0xffffffdc
 918:	bl	0 <ht_default_hash_function>
 91c:	str	r0, [fp, #-24]	; 0xffffffe8
 920:	mov	r3, #0
 924:	str	r3, [fp, #-8]
 928:	ldr	r2, [fp, #-24]	; 0xffffffe8
 92c:	ldr	r3, [fp, #-8]
 930:	add	r3, r2, r3
 934:	ldr	r2, [fp, #-20]	; 0xffffffec
 938:	and	r3, r3, r2
 93c:	str	r3, [fp, #-12]
 940:	b	998 <ht_find+0xd4>
 944:	ldr	r3, [fp, #-28]	; 0xffffffe4
 948:	cmp	r3, #2
 94c:	beq	974 <ht_find+0xb0>
 950:	ldr	r2, [fp, #-28]	; 0xffffffe4
 954:	ldr	r1, [fp, #-40]	; 0xffffffd8
 958:	ldr	r0, [fp, #-36]	; 0xffffffdc
 95c:	bl	c10 <ht_match>
 960:	mov	r3, r0
 964:	cmp	r3, #0
 968:	beq	974 <ht_find+0xb0>
 96c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 970:	b	9c0 <ht_find+0xfc>
 974:	ldr	r3, [fp, #-8]
 978:	add	r3, r3, #1
 97c:	str	r3, [fp, #-8]
 980:	ldr	r2, [fp, #-24]	; 0xffffffe8
 984:	ldr	r3, [fp, #-8]
 988:	add	r3, r2, r3
 98c:	ldr	r2, [fp, #-20]	; 0xffffffec
 990:	and	r3, r3, r2
 994:	str	r3, [fp, #-12]
 998:	ldr	r3, [fp, #-12]
 99c:	lsl	r3, r3, #2
 9a0:	ldr	r2, [fp, #-16]
 9a4:	add	r3, r2, r3
 9a8:	ldr	r3, [r3]
 9ac:	str	r3, [fp, #-28]	; 0xffffffe4
 9b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9b4:	cmp	r3, #0
 9b8:	bne	944 <ht_find+0x80>
 9bc:	mov	r3, #0
 9c0:	mov	r0, r3
 9c4:	sub	sp, fp, #4
 9c8:	ldr	fp, [sp]
 9cc:	add	sp, sp, #4
 9d0:	pop	{pc}		; (ldr pc, [sp], #4)

000009d4 <ht_remove>:
 9d4:	str	fp, [sp, #-8]!
 9d8:	str	lr, [sp, #4]
 9dc:	add	fp, sp, #4
 9e0:	sub	sp, sp, #40	; 0x28
 9e4:	str	r0, [fp, #-32]	; 0xffffffe0
 9e8:	str	r1, [fp, #-36]	; 0xffffffdc
 9ec:	str	r2, [fp, #-40]	; 0xffffffd8
 9f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9f4:	ldr	r3, [r3]
 9f8:	str	r3, [fp, #-16]
 9fc:	ldr	r3, [fp, #-16]
 a00:	cmp	r3, #0
 a04:	bne	a10 <ht_remove+0x3c>
 a08:	mov	r3, #0
 a0c:	b	afc <ht_remove+0x128>
 a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a14:	ldr	r3, [r3, #12]
 a18:	sub	r3, r3, #1
 a1c:	str	r3, [fp, #-20]	; 0xffffffec
 a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
 a24:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a28:	bl	0 <ht_default_hash_function>
 a2c:	str	r0, [fp, #-24]	; 0xffffffe8
 a30:	mov	r3, #0
 a34:	str	r3, [fp, #-8]
 a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
 a3c:	ldr	r3, [fp, #-8]
 a40:	add	r3, r2, r3
 a44:	ldr	r2, [fp, #-20]	; 0xffffffec
 a48:	and	r3, r3, r2
 a4c:	str	r3, [fp, #-12]
 a50:	b	ad4 <ht_remove+0x100>
 a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a58:	cmp	r3, #2
 a5c:	beq	ab0 <ht_remove+0xdc>
 a60:	ldr	r2, [fp, #-28]	; 0xffffffe4
 a64:	ldr	r1, [fp, #-40]	; 0xffffffd8
 a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a6c:	bl	c10 <ht_match>
 a70:	mov	r3, r0
 a74:	cmp	r3, #0
 a78:	beq	ab0 <ht_remove+0xdc>
 a7c:	ldr	r3, [fp, #-12]
 a80:	lsl	r3, r3, #2
 a84:	ldr	r2, [fp, #-16]
 a88:	add	r3, r2, r3
 a8c:	mov	r2, #2
 a90:	str	r2, [r3]
 a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a98:	ldr	r3, [r3, #8]
 a9c:	sub	r2, r3, #1
 aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 aa4:	str	r2, [r3, #8]
 aa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 aac:	b	afc <ht_remove+0x128>
 ab0:	ldr	r3, [fp, #-8]
 ab4:	add	r3, r3, #1
 ab8:	str	r3, [fp, #-8]
 abc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 ac0:	ldr	r3, [fp, #-8]
 ac4:	add	r3, r2, r3
 ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
 acc:	and	r3, r3, r2
 ad0:	str	r3, [fp, #-12]
 ad4:	ldr	r3, [fp, #-12]
 ad8:	lsl	r3, r3, #2
 adc:	ldr	r2, [fp, #-16]
 ae0:	add	r3, r2, r3
 ae4:	ldr	r3, [r3]
 ae8:	str	r3, [fp, #-28]	; 0xffffffe4
 aec:	ldr	r3, [fp, #-28]	; 0xffffffe4
 af0:	cmp	r3, #0
 af4:	bne	a54 <ht_remove+0x80>
 af8:	mov	r3, #0
 afc:	mov	r0, r3
 b00:	sub	sp, fp, #4
 b04:	ldr	fp, [sp]
 b08:	add	sp, sp, #4
 b0c:	pop	{pc}		; (ldr pc, [sp], #4)

00000b10 <ht_visit>:
 b10:	str	fp, [sp, #-8]!
 b14:	str	lr, [sp, #4]
 b18:	add	fp, sp, #4
 b1c:	sub	sp, sp, #32
 b20:	str	r0, [fp, #-24]	; 0xffffffe8
 b24:	str	r1, [fp, #-28]	; 0xffffffe4
 b28:	str	r2, [fp, #-32]	; 0xffffffe0
 b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b30:	ldr	r3, [r3]
 b34:	str	r3, [fp, #-12]
 b38:	mov	r3, #0
 b3c:	str	r3, [fp, #-8]
 b40:	b	b90 <ht_visit+0x80>
 b44:	ldr	r3, [fp, #-8]
 b48:	lsl	r3, r3, #2
 b4c:	ldr	r2, [fp, #-12]
 b50:	add	r3, r2, r3
 b54:	ldr	r3, [r3]
 b58:	str	r3, [fp, #-16]
 b5c:	ldr	r3, [fp, #-16]
 b60:	cmp	r3, #0
 b64:	beq	b84 <ht_visit+0x74>
 b68:	ldr	r3, [fp, #-16]
 b6c:	cmp	r3, #2
 b70:	beq	b84 <ht_visit+0x74>
 b74:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b78:	ldr	r1, [fp, #-16]
 b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 b80:	blx	r3
 b84:	ldr	r3, [fp, #-8]
 b88:	add	r3, r3, #1
 b8c:	str	r3, [fp, #-8]
 b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b94:	ldr	r3, [r3, #12]
 b98:	ldr	r2, [fp, #-8]
 b9c:	cmp	r2, r3
 ba0:	bcc	b44 <ht_visit+0x34>
 ba4:	nop	{0}
 ba8:	sub	sp, fp, #4
 bac:	ldr	fp, [sp]
 bb0:	add	sp, sp, #4
 bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00000bb8 <ht_clear>:
 bb8:	str	fp, [sp, #-8]!
 bbc:	str	lr, [sp, #4]
 bc0:	add	fp, sp, #4
 bc4:	sub	sp, sp, #8
 bc8:	str	r0, [fp, #-8]
 bcc:	ldr	r3, [fp, #-8]
 bd0:	ldr	r3, [r3]
 bd4:	cmp	r3, #0
 bd8:	beq	bec <ht_clear+0x34>
 bdc:	ldr	r3, [fp, #-8]
 be0:	ldr	r3, [r3]
 be4:	mov	r0, r3
 be8:	bl	0 <free>
 bec:	mov	r2, #16
 bf0:	mov	r1, #0
 bf4:	ldr	r0, [fp, #-8]
 bf8:	bl	0 <memset>
 bfc:	nop	{0}
 c00:	sub	sp, fp, #4
 c04:	ldr	fp, [sp]
 c08:	add	sp, sp, #4
 c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00000c10 <ht_match>:
 c10:	str	fp, [sp, #-8]!
 c14:	str	lr, [sp, #4]
 c18:	add	fp, sp, #4
 c1c:	sub	sp, sp, #16
 c20:	str	r0, [fp, #-8]
 c24:	str	r1, [fp, #-12]
 c28:	str	r2, [fp, #-16]
 c2c:	ldr	r3, [fp, #-16]
 c30:	ldr	r3, [r3, #148]	; 0x94
 c34:	mov	r2, r3
 c38:	ldr	r3, [fp, #-12]
 c3c:	cmp	r3, r2
 c40:	bne	c70 <ht_match+0x60>
 c44:	ldr	r3, [fp, #-16]
 c48:	ldr	r3, [r3, #144]	; 0x90
 c4c:	ldr	r2, [fp, #-12]
 c50:	mov	r1, r3
 c54:	ldr	r0, [fp, #-8]
 c58:	bl	0 <memcmp>
 c5c:	mov	r3, r0
 c60:	cmp	r3, #0
 c64:	bne	c70 <ht_match+0x60>
 c68:	mov	r3, #1
 c6c:	b	c74 <ht_match+0x64>
 c70:	mov	r3, #0
 c74:	mov	r0, r3
 c78:	sub	sp, fp, #4
 c7c:	ldr	fp, [sp]
 c80:	add	sp, sp, #4
 c84:	pop	{pc}		; (ldr pc, [sp], #4)

00000c88 <ht_key>:
 c88:	push	{fp}		; (str fp, [sp, #-4]!)
 c8c:	add	fp, sp, #0
 c90:	sub	sp, sp, #12
 c94:	str	r0, [fp, #-8]
 c98:	ldr	r3, [fp, #-8]
 c9c:	ldr	r3, [r3, #144]	; 0x90
 ca0:	mov	r0, r3
 ca4:	add	sp, fp, #0
 ca8:	pop	{fp}		; (ldr fp, [sp], #4)
 cac:	bx	lr

00000cb0 <ht_key_len>:
 cb0:	push	{fp}		; (str fp, [sp, #-4]!)
 cb4:	add	fp, sp, #0
 cb8:	sub	sp, sp, #12
 cbc:	str	r0, [fp, #-8]
 cc0:	ldr	r3, [fp, #-8]
 cc4:	ldr	r3, [r3, #148]	; 0x94
 cc8:	mov	r0, r3
 ccc:	add	sp, fp, #0
 cd0:	pop	{fp}		; (ldr fp, [sp], #4)
 cd4:	bx	lr
