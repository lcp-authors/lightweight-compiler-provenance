
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-xml.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_xml_reopen>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp, #4]
   c:	str	lr, [sp, #8]
  10:	str	r4, [sp, #16]
  14:	str	r5, [sp, #20]
  18:	mov	r5, r0
  1c:	mov	r0, #56	; 0x38
  20:	bl	0 <malloc>
  24:	mov	r4, r0
  28:	cmp	r4, #0
  2c:	bne	5c <coda_xml_reopen+0x5c>
  30:	mvn	r0, #0
  34:	ldr	r1, [pc, #252]	; 138 <coda_xml_reopen+0x138>
  38:	mov	r2, #56	; 0x38
  3c:	ldr	r3, [pc, #248]	; 13c <coda_xml_reopen+0x13c>
  40:	mov	ip, #53	; 0x35
  44:	str	ip, [sp]
  48:	bl	0 <coda_set_error>
  4c:	ldr	r0, [r5]
  50:	bl	0 <coda_close>
  54:	mvn	r0, #0
  58:	b	124 <coda_xml_reopen+0x124>
  5c:	mov	ip, #0
  60:	str	ip, [r4]
  64:	ldr	r0, [r5]
  68:	ldr	r2, [r0, #8]
  6c:	ldr	r0, [r0, #12]
  70:	str	r2, [r4, #8]
  74:	str	r0, [r4, #12]
  78:	mov	ip, #2
  7c:	str	ip, [r4, #16]
  80:	mov	r2, #0
  84:	str	r2, [r4, #20]
  88:	mov	r3, #0
  8c:	str	r3, [r4, #24]
  90:	mov	r0, #0
  94:	str	r0, [r4, #28]
  98:	mov	r2, #0
  9c:	str	r2, [r4, #32]
  a0:	mov	r1, #0
  a4:	mov	r0, #0
  a8:	str	r0, [r4, #40]	; 0x28
  ac:	str	r1, [r4, #44]	; 0x2c
  b0:	mov	r1, #0
  b4:	str	r1, [r4, #48]	; 0x30
  b8:	ldr	r3, [r5]
  bc:	str	r3, [r4, #52]	; 0x34
  c0:	ldr	r3, [r5]
  c4:	ldr	r0, [r3]
  c8:	bl	0 <strdup>
  cc:	str	r0, [r4]
  d0:	cmp	r0, #0
  d4:	bne	fc <coda_xml_reopen+0xfc>
  d8:	mvn	r0, #0
  dc:	ldr	r1, [pc, #92]	; 140 <coda_xml_reopen+0x140>
  e0:	ldr	r2, [pc, #84]	; 13c <coda_xml_reopen+0x13c>
  e4:	mov	r3, #72	; 0x48
  e8:	bl	0 <coda_set_error>
  ec:	mov	r0, r4
  f0:	bl	0 <coda_close>
  f4:	mvn	r0, #0
  f8:	b	124 <coda_xml_reopen+0x124>
  fc:	mov	r0, r4
 100:	bl	0 <coda_xml_parse>
 104:	cmp	r0, #0
 108:	beq	11c <coda_xml_reopen+0x11c>
 10c:	mov	r0, r4
 110:	bl	0 <coda_close>
 114:	mvn	r0, #0
 118:	b	124 <coda_xml_reopen+0x124>
 11c:	str	r4, [r5]
 120:	mov	r0, #0
 124:	ldr	r4, [sp, #16]
 128:	ldr	r5, [sp, #20]
 12c:	ldr	lr, [sp, #8]
 130:	add	sp, sp, #24
 134:	bx	lr
 138:	.word	0x000000b9
 13c:	.word	0x00000061
 140:	.word	0x000000ee

00000144 <coda_xml_reopen_with_definition>:
 144:	mov	ip, sp
 148:	sub	sp, sp, #16
 14c:	str	ip, [sp]
 150:	str	lr, [sp, #4]
 154:	str	r4, [sp, #8]
 158:	str	r5, [sp, #12]
 15c:	mov	r4, r1
 160:	ldr	r5, [r0]
 164:	cmp	r4, #0
 168:	bne	180 <coda_xml_reopen_with_definition+0x3c>
 16c:	ldr	r0, [pc, #192]	; 234 <coda_xml_reopen_with_definition+0xf0>
 170:	ldr	r1, [pc, #192]	; 238 <coda_xml_reopen_with_definition+0xf4>
 174:	mov	r2, #92	; 0x5c
 178:	ldr	r3, [pc, #188]	; 23c <coda_xml_reopen_with_definition+0xf8>
 17c:	bl	0 <__assert_fail>
 180:	ldr	r3, [r5, #16]
 184:	cmp	r3, #2
 188:	beq	1a0 <coda_xml_reopen_with_definition+0x5c>
 18c:	ldr	r0, [pc, #152]	; 22c <coda_xml_reopen_with_definition+0xe8>
 190:	ldr	r1, [pc, #160]	; 238 <coda_xml_reopen_with_definition+0xf4>
 194:	mov	r2, #93	; 0x5d
 198:	ldr	r3, [pc, #156]	; 23c <coda_xml_reopen_with_definition+0xf8>
 19c:	bl	0 <__assert_fail>
 1a0:	ldr	r2, [r4]
 1a4:	cmp	r2, #2
 1a8:	beq	1c0 <coda_xml_reopen_with_definition+0x7c>
 1ac:	ldr	r0, [pc, #124]	; 230 <coda_xml_reopen_with_definition+0xec>
 1b0:	ldr	r1, [pc, #128]	; 238 <coda_xml_reopen_with_definition+0xf4>
 1b4:	mov	r2, #94	; 0x5e
 1b8:	ldr	r3, [pc, #124]	; 23c <coda_xml_reopen_with_definition+0xf8>
 1bc:	bl	0 <__assert_fail>
 1c0:	ldr	r0, [r5, #20]
 1c4:	bl	0 <coda_dynamic_type_delete>
 1c8:	mov	ip, #0
 1cc:	str	ip, [r5, #20]
 1d0:	mov	r1, #0
 1d4:	mov	r0, #0
 1d8:	str	r0, [r5, #40]	; 0x28
 1dc:	str	r1, [r5, #44]	; 0x2c
 1e0:	ldr	r0, [r5, #48]	; 0x30
 1e4:	cmp	r0, #0
 1e8:	beq	1f8 <coda_xml_reopen_with_definition+0xb4>
 1ec:	bl	0 <free>
 1f0:	mov	r3, #0
 1f4:	str	r3, [r5, #48]	; 0x30
 1f8:	str	r4, [r5, #24]
 1fc:	mov	r0, r5
 200:	bl	0 <coda_xml_parse>
 204:	cmp	r0, #0
 208:	beq	214 <coda_xml_reopen_with_definition+0xd0>
 20c:	mvn	r0, #0
 210:	b	218 <coda_xml_reopen_with_definition+0xd4>
 214:	mov	r0, #0
 218:	ldr	r4, [sp, #8]
 21c:	ldr	r5, [sp, #12]
 220:	ldr	lr, [sp, #4]
 224:	add	sp, sp, #16
 228:	bx	lr
 22c:	.word	0x00000039
 230:	.word	0x00000000
 234:	.word	0x00000026
 238:	.word	0x00000061
 23c:	.word	0x0000012a

00000240 <coda_xml_close>:
 240:	mov	ip, sp
 244:	sub	sp, sp, #16
 248:	str	ip, [sp]
 24c:	str	lr, [sp, #4]
 250:	str	r4, [sp, #8]
 254:	mov	r4, r0
 258:	ldr	r0, [r4]
 25c:	cmp	r0, #0
 260:	beq	268 <coda_xml_close+0x28>
 264:	bl	0 <free>
 268:	ldr	r0, [r4, #20]
 26c:	cmp	r0, #0
 270:	beq	278 <coda_xml_close+0x38>
 274:	bl	0 <coda_dynamic_type_delete>
 278:	ldr	r0, [r4, #48]	; 0x30
 27c:	cmp	r0, #0
 280:	beq	288 <coda_xml_close+0x48>
 284:	bl	0 <free>
 288:	ldr	r0, [r4, #52]	; 0x34
 28c:	cmp	r0, #0
 290:	beq	298 <coda_xml_close+0x58>
 294:	bl	0 <coda_bin_close>
 298:	mov	r0, r4
 29c:	bl	0 <free>
 2a0:	mov	r0, #0
 2a4:	ldr	r4, [sp, #8]
 2a8:	ldr	lr, [sp, #4]
 2ac:	add	sp, sp, #16
 2b0:	bx	lr

000002b4 <coda_xml_cursor_set_product>:
 2b4:	mov	ip, sp
 2b8:	sub	sp, sp, #8
 2bc:	str	ip, [sp]
 2c0:	str	lr, [sp, #4]
 2c4:	str	r1, [r0]
 2c8:	mov	r3, #1
 2cc:	str	r3, [r0, #4]
 2d0:	ldr	r2, [r1, #20]
 2d4:	str	r2, [r0, #8]
 2d8:	mvn	ip, #0
 2dc:	str	ip, [r0, #12]
 2e0:	mov	r2, #0
 2e4:	mov	r1, #0
 2e8:	str	r1, [r0, #16]
 2ec:	str	r2, [r0, #20]
 2f0:	mov	r0, #0
 2f4:	ldr	lr, [sp, #4]
 2f8:	add	sp, sp, #8
 2fc:	bx	lr
