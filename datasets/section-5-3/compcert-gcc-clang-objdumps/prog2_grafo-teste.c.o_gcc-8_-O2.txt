
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_f.part.0>:
   0:	ldr	r3, [r0]
   4:	cmp	r3, #0
   8:	ble	74 <_f.part.0+0x74>
   c:	strd	r4, [sp, #-16]!
  10:	mov	r5, r0
  14:	mov	r4, #0
  18:	str	r6, [sp, #8]
  1c:	mov	r6, r1
  20:	str	lr, [sp, #12]
  24:	b	34 <_f.part.0+0x34>
  28:	ldr	r3, [r5]
  2c:	cmp	r4, r3
  30:	bge	60 <_f.part.0+0x60>
  34:	mov	r1, r4
  38:	mov	r0, r5
  3c:	bl	0 <vetor_elemento>
  40:	cmp	r0, r6
  44:	add	r4, r4, #1
  48:	bne	28 <_f.part.0+0x28>
  4c:	ldrd	r4, [sp]
  50:	mov	r0, #1
  54:	ldr	r6, [sp, #8]
  58:	add	sp, sp, #12
  5c:	pop	{pc}		; (ldr pc, [sp], #4)
  60:	ldrd	r4, [sp]
  64:	mov	r0, #0
  68:	ldr	r6, [sp, #8]
  6c:	add	sp, sp, #12
  70:	pop	{pc}		; (ldr pc, [sp], #4)
  74:	mov	r0, #0
  78:	bx	lr

0000007c <_g>:
  7c:	push	{r1, r2, r3}
  80:	strd	r4, [sp, #-32]!	; 0xffffffe0
  84:	strd	r6, [sp, #8]
  88:	mov	r7, r0
  8c:	mov	r0, #8
  90:	strd	r8, [sp, #16]
  94:	str	sl, [sp, #24]
  98:	str	lr, [sp, #28]
  9c:	sub	sp, sp, #12
  a0:	ldr	r5, [sp, #44]	; 0x2c
  a4:	bl	0 <malloc>
  a8:	add	r3, sp, #48	; 0x30
  ac:	mov	r6, r0
  b0:	mov	r1, #8
  b4:	mov	r0, r7
  b8:	str	r3, [sp, #4]
  bc:	bl	0 <calloc>
  c0:	cmp	r5, #0
  c4:	str	r0, [r6, #4]
  c8:	ble	128 <_g+0xac>
  cc:	sub	r5, r5, #1
  d0:	mov	r8, r0
  d4:	bic	r5, r5, #1
  d8:	mov	r9, #0
  dc:	add	r5, r5, #2
  e0:	ldr	r3, [sp, #4]
  e4:	mov	r1, #8
  e8:	mov	r0, #1
  ec:	add	r9, r9, #2
  f0:	ldr	sl, [r3, #4]
  f4:	ldr	r4, [r3], #8
  f8:	str	r3, [sp, #4]
  fc:	bl	0 <calloc>
 100:	add	r2, r8, r4, lsl #3
 104:	ldr	r3, [r8, r4, lsl #3]
 108:	cmp	r9, r5
 10c:	str	sl, [r0]
 110:	ldr	r1, [r2, #4]
 114:	str	r0, [r2, #4]
 118:	add	r3, r3, #1
 11c:	str	r3, [r8, r4, lsl #3]
 120:	str	r1, [r0, #4]
 124:	bne	e0 <_g+0x64>
 128:	mov	r0, r6
 12c:	str	r7, [r6]
 130:	add	sp, sp, #12
 134:	ldrd	r4, [sp]
 138:	ldrd	r6, [sp, #8]
 13c:	ldrd	r8, [sp, #16]
 140:	ldr	sl, [sp, #24]
 144:	ldr	lr, [sp, #28]
 148:	add	sp, sp, #32
 14c:	add	sp, sp, #12
 150:	bx	lr

00000154 <_f>:
 154:	cmp	r0, #0
 158:	beq	160 <_f+0xc>
 15c:	b	0 <_f.part.0>
 160:	bx	lr

00000164 <teste_grafo_novo>:
 164:	movw	r0, #0
 168:	movt	r0, #0
 16c:	strd	r4, [sp, #-16]!
 170:	str	r6, [sp, #8]
 174:	str	lr, [sp, #12]
 178:	bl	0 <printf>
 17c:	mov	r0, #10
 180:	bl	0 <grafo_novo>
 184:	subs	r5, r0, #0
 188:	beq	224 <teste_grafo_novo+0xc0>
 18c:	ldr	r3, [r5]
 190:	cmp	r3, #10
 194:	moveq	r4, #0
 198:	bne	1ec <teste_grafo_novo+0x88>
 19c:	mov	r0, r5
 1a0:	bl	0 <grafo_apaga>
 1a4:	mov	r0, #1
 1a8:	bl	0 <grafo_novo>
 1ac:	subs	r5, r0, #0
 1b0:	beq	240 <teste_grafo_novo+0xdc>
 1b4:	ldr	r3, [r5]
 1b8:	cmp	r3, #1
 1bc:	bne	200 <teste_grafo_novo+0x9c>
 1c0:	bl	0 <grafo_apaga>
 1c4:	cmp	r4, #0
 1c8:	bne	218 <teste_grafo_novo+0xb4>
 1cc:	movw	r0, #0
 1d0:	movt	r0, #0
 1d4:	bl	0 <puts>
 1d8:	mov	r0, r4
 1dc:	ldrd	r4, [sp]
 1e0:	ldr	r6, [sp, #8]
 1e4:	add	sp, sp, #12
 1e8:	pop	{pc}		; (ldr pc, [sp], #4)
 1ec:	movw	r0, #0
 1f0:	movt	r0, #0
 1f4:	bl	0 <printf>
 1f8:	mov	r4, #1
 1fc:	b	19c <teste_grafo_novo+0x38>
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	bl	0 <printf>
 20c:	mov	r0, r5
 210:	add	r4, r4, #1
 214:	bl	0 <grafo_apaga>
 218:	mov	r0, #10
 21c:	bl	0 <putchar>
 220:	b	1d8 <teste_grafo_novo+0x74>
 224:	movw	r0, #0
 228:	movt	r0, #0
 22c:	bl	0 <printf>
 230:	mov	r0, #10
 234:	mov	r4, #1
 238:	bl	0 <putchar>
 23c:	b	1d8 <teste_grafo_novo+0x74>
 240:	movw	r0, #0
 244:	movt	r0, #0
 248:	bl	0 <printf>
 24c:	mov	r0, #10
 250:	add	r4, r4, #1
 254:	bl	0 <putchar>
 258:	b	1d8 <teste_grafo_novo+0x74>

0000025c <teste_grafo_aresta>:
 25c:	mov	r0, #7
 260:	mov	r2, #2
 264:	strd	r4, [sp, #-24]!	; 0xffffffe8
 268:	mov	r5, #4
 26c:	mov	r4, #0
 270:	strd	r6, [sp, #8]
 274:	str	r8, [sp, #16]
 278:	mov	r8, #5
 27c:	mov	ip, #6
 280:	str	lr, [sp, #20]
 284:	sub	sp, sp, #80	; 0x50
 288:	mov	lr, #3
 28c:	mov	r7, #1
 290:	mov	r3, r2
 294:	mov	r1, #22
 298:	stm	sp, {r0, r2, r4}
 29c:	str	r2, [sp, #12]
 2a0:	mov	r2, lr
 2a4:	str	r0, [sp, #16]
 2a8:	str	r8, [sp, #20]
 2ac:	str	r8, [sp, #24]
 2b0:	str	r5, [sp, #28]
 2b4:	str	r5, [sp, #32]
 2b8:	strd	r4, [sp, #36]	; 0x24
 2bc:	str	r0, [sp, #56]	; 0x38
 2c0:	mov	r0, #8
 2c4:	str	ip, [sp, #44]	; 0x2c
 2c8:	str	r7, [sp, #48]	; 0x30
 2cc:	str	r7, [sp, #52]	; 0x34
 2d0:	str	ip, [sp, #60]	; 0x3c
 2d4:	str	ip, [sp, #64]	; 0x40
 2d8:	str	lr, [sp, #68]	; 0x44
 2dc:	str	r4, [sp, #72]	; 0x48
 2e0:	str	r7, [sp, #76]	; 0x4c
 2e4:	bl	7c <_g>
 2e8:	mov	r6, r0
 2ec:	movw	r0, #0
 2f0:	movt	r0, #0
 2f4:	bl	0 <printf>
 2f8:	mov	r2, r5
 2fc:	mov	r1, r8
 300:	mov	r0, r6
 304:	bl	0 <grafo_aresta>
 308:	cmp	r0, r7
 30c:	beq	320 <teste_grafo_aresta+0xc4>
 310:	movw	r0, #0
 314:	movt	r0, #0
 318:	mov	r4, r7
 31c:	bl	0 <printf>
 320:	mov	r2, #6
 324:	mov	r1, #7
 328:	mov	r0, r6
 32c:	bl	0 <grafo_aresta>
 330:	cmp	r0, #1
 334:	beq	348 <teste_grafo_aresta+0xec>
 338:	movw	r0, #0
 33c:	movt	r0, #0
 340:	add	r4, r4, #1
 344:	bl	0 <printf>
 348:	mov	r2, #1
 34c:	mov	r1, #7
 350:	mov	r0, r6
 354:	bl	0 <grafo_aresta>
 358:	cmp	r0, #0
 35c:	bne	3ac <teste_grafo_aresta+0x150>
 360:	mov	r2, #7
 364:	mov	r1, #2
 368:	bl	0 <grafo_aresta>
 36c:	cmn	r0, #1
 370:	bne	3d4 <teste_grafo_aresta+0x178>
 374:	mov	r0, r6
 378:	bl	0 <grafo_apaga>
 37c:	cmp	r4, #0
 380:	bne	3ec <teste_grafo_aresta+0x190>
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	bl	0 <puts>
 390:	mov	r0, r4
 394:	add	sp, sp, #80	; 0x50
 398:	ldrd	r4, [sp]
 39c:	ldrd	r6, [sp, #8]
 3a0:	ldr	r8, [sp, #16]
 3a4:	add	sp, sp, #20
 3a8:	pop	{pc}		; (ldr pc, [sp], #4)
 3ac:	movw	r0, #0
 3b0:	movt	r0, #0
 3b4:	bl	0 <printf>
 3b8:	mov	r2, #7
 3bc:	mov	r1, #2
 3c0:	mov	r0, #0
 3c4:	add	r4, r4, #1
 3c8:	bl	0 <grafo_aresta>
 3cc:	cmn	r0, #1
 3d0:	beq	3f8 <teste_grafo_aresta+0x19c>
 3d4:	movw	r0, #0
 3d8:	movt	r0, #0
 3dc:	bl	0 <printf>
 3e0:	mov	r0, r6
 3e4:	add	r4, r4, #1
 3e8:	bl	0 <grafo_apaga>
 3ec:	mov	r0, #10
 3f0:	bl	0 <putchar>
 3f4:	b	390 <teste_grafo_aresta+0x134>
 3f8:	mov	r0, r6
 3fc:	bl	0 <grafo_apaga>
 400:	b	3ec <teste_grafo_aresta+0x190>

00000404 <teste_grafo_adiciona>:
 404:	strd	r4, [sp, #-16]!
 408:	mov	r4, #2
 40c:	mov	r2, #3
 410:	str	r6, [sp, #8]
 414:	mov	r6, #7
 418:	mov	r3, r4
 41c:	str	lr, [sp, #12]
 420:	sub	sp, sp, #8
 424:	mov	r1, #4
 428:	mov	r0, #9
 42c:	str	r6, [sp]
 430:	str	r4, [sp, #4]
 434:	bl	7c <_g>
 438:	mov	r5, r0
 43c:	movw	r0, #0
 440:	movt	r0, #0
 444:	bl	0 <printf>
 448:	mov	r1, r4
 44c:	mov	r2, r6
 450:	mov	r0, r5
 454:	bl	0 <grafo_adiciona>
 458:	cmp	r0, #1
 45c:	moveq	r4, #0
 460:	beq	474 <teste_grafo_adiciona+0x70>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	mov	r4, #1
 470:	bl	0 <printf>
 474:	ldr	r3, [r5, #4]
 478:	ldr	r3, [r3, #20]
 47c:	cmp	r3, #0
 480:	beq	490 <teste_grafo_adiciona+0x8c>
 484:	ldr	r3, [r3]
 488:	cmp	r3, #7
 48c:	beq	4a0 <teste_grafo_adiciona+0x9c>
 490:	movw	r0, #0
 494:	movt	r0, #0
 498:	add	r4, r4, #1
 49c:	bl	0 <printf>
 4a0:	mov	r2, #8
 4a4:	mov	r1, #3
 4a8:	mov	r0, r5
 4ac:	bl	0 <grafo_adiciona>
 4b0:	cmp	r0, #1
 4b4:	beq	4c8 <teste_grafo_adiciona+0xc4>
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	add	r4, r4, #1
 4c4:	bl	0 <printf>
 4c8:	ldr	r3, [r5, #4]
 4cc:	ldr	r3, [r3, #28]
 4d0:	cmp	r3, #0
 4d4:	beq	4f0 <teste_grafo_adiciona+0xec>
 4d8:	ldr	r2, [r3, #4]
 4dc:	cmp	r2, #0
 4e0:	beq	4f0 <teste_grafo_adiciona+0xec>
 4e4:	ldr	r1, [r2, #4]
 4e8:	cmp	r1, #0
 4ec:	beq	5dc <teste_grafo_adiciona+0x1d8>
 4f0:	movw	r0, #0
 4f4:	movt	r0, #0
 4f8:	add	r4, r4, #1
 4fc:	bl	0 <printf>
 500:	mov	r2, #7
 504:	mov	r1, #2
 508:	mov	r0, r5
 50c:	bl	0 <grafo_adiciona>
 510:	cmp	r0, #0
 514:	bne	5c8 <teste_grafo_adiciona+0x1c4>
 518:	mov	r2, #7
 51c:	mov	r1, #22
 520:	mov	r0, r5
 524:	bl	0 <grafo_adiciona>
 528:	cmn	r0, #1
 52c:	bne	57c <teste_grafo_adiciona+0x178>
 530:	mov	r2, #7
 534:	mov	r1, #2
 538:	mov	r0, #0
 53c:	bl	0 <grafo_adiciona>
 540:	cmn	r0, #1
 544:	bne	5a4 <teste_grafo_adiciona+0x1a0>
 548:	mov	r0, r5
 54c:	bl	0 <grafo_apaga>
 550:	cmp	r4, #0
 554:	bne	5bc <teste_grafo_adiciona+0x1b8>
 558:	movw	r0, #0
 55c:	movt	r0, #0
 560:	bl	0 <puts>
 564:	mov	r0, r4
 568:	add	sp, sp, #8
 56c:	ldrd	r4, [sp]
 570:	ldr	r6, [sp, #8]
 574:	add	sp, sp, #12
 578:	pop	{pc}		; (ldr pc, [sp], #4)
 57c:	movw	r0, #0
 580:	movt	r0, #0
 584:	bl	0 <printf>
 588:	mov	r2, #7
 58c:	mov	r1, #2
 590:	mov	r0, #0
 594:	add	r4, r4, #1
 598:	bl	0 <grafo_adiciona>
 59c:	cmn	r0, #1
 5a0:	beq	610 <teste_grafo_adiciona+0x20c>
 5a4:	movw	r0, #0
 5a8:	movt	r0, #0
 5ac:	bl	0 <printf>
 5b0:	mov	r0, r5
 5b4:	add	r4, r4, #1
 5b8:	bl	0 <grafo_apaga>
 5bc:	mov	r0, #10
 5c0:	bl	0 <putchar>
 5c4:	b	564 <teste_grafo_adiciona+0x160>
 5c8:	movw	r0, #0
 5cc:	movt	r0, #0
 5d0:	add	r4, r4, #1
 5d4:	bl	0 <printf>
 5d8:	b	518 <teste_grafo_adiciona+0x114>
 5dc:	ldr	r3, [r3]
 5e0:	cmp	r3, #2
 5e4:	beq	600 <teste_grafo_adiciona+0x1fc>
 5e8:	cmp	r3, #8
 5ec:	bne	4f0 <teste_grafo_adiciona+0xec>
 5f0:	ldr	r3, [r2]
 5f4:	cmp	r3, #2
 5f8:	bne	4f0 <teste_grafo_adiciona+0xec>
 5fc:	b	500 <teste_grafo_adiciona+0xfc>
 600:	ldr	r3, [r2]
 604:	cmp	r3, #8
 608:	bne	4f0 <teste_grafo_adiciona+0xec>
 60c:	b	500 <teste_grafo_adiciona+0xfc>
 610:	mov	r0, r5
 614:	bl	0 <grafo_apaga>
 618:	b	5bc <teste_grafo_adiciona+0x1b8>

0000061c <teste_grafo_remove>:
 61c:	mov	r0, #2
 620:	strd	r4, [sp, #-16]!
 624:	mov	r4, #1
 628:	str	r6, [sp, #8]
 62c:	mov	r6, #7
 630:	mov	r3, r0
 634:	str	lr, [sp, #12]
 638:	sub	sp, sp, #16
 63c:	mov	r2, #3
 640:	mov	r1, #6
 644:	str	r6, [sp]
 648:	stmib	sp, {r0, r6}
 64c:	mov	r0, #9
 650:	str	r4, [sp, #12]
 654:	bl	7c <_g>
 658:	mov	r5, r0
 65c:	movw	r0, #0
 660:	movt	r0, #0
 664:	bl	0 <printf>
 668:	mov	r2, r4
 66c:	mov	r1, r6
 670:	mov	r0, r5
 674:	bl	0 <grafo_remove>
 678:	cmp	r0, r4
 67c:	moveq	r4, #0
 680:	beq	690 <teste_grafo_remove+0x74>
 684:	movw	r0, #0
 688:	movt	r0, #0
 68c:	bl	0 <printf>
 690:	ldr	r3, [r5, #4]
 694:	ldr	r3, [r3, #60]	; 0x3c
 698:	cmp	r3, #0
 69c:	beq	6ac <teste_grafo_remove+0x90>
 6a0:	ldr	r2, [r3, #4]
 6a4:	cmp	r2, #0
 6a8:	beq	7b4 <teste_grafo_remove+0x198>
 6ac:	movw	r0, #0
 6b0:	movt	r0, #0
 6b4:	add	r4, r4, #1
 6b8:	bl	0 <printf>
 6bc:	mov	r2, #2
 6c0:	mov	r1, #7
 6c4:	mov	r0, r5
 6c8:	bl	0 <grafo_remove>
 6cc:	cmp	r0, #1
 6d0:	beq	6e4 <teste_grafo_remove+0xc8>
 6d4:	movw	r0, #0
 6d8:	movt	r0, #0
 6dc:	add	r4, r4, #1
 6e0:	bl	0 <printf>
 6e4:	ldr	r3, [r5, #4]
 6e8:	ldr	r3, [r3, #60]	; 0x3c
 6ec:	cmp	r3, #0
 6f0:	beq	704 <teste_grafo_remove+0xe8>
 6f4:	movw	r0, #0
 6f8:	movt	r0, #0
 6fc:	add	r4, r4, #1
 700:	bl	0 <printf>
 704:	mov	r2, #0
 708:	mov	r1, #4
 70c:	mov	r0, r5
 710:	bl	0 <grafo_remove>
 714:	cmp	r0, #0
 718:	bne	768 <teste_grafo_remove+0x14c>
 71c:	mov	r2, #22
 720:	mov	r1, #7
 724:	mov	r0, r5
 728:	bl	0 <grafo_remove>
 72c:	cmn	r0, #1
 730:	bne	790 <teste_grafo_remove+0x174>
 734:	mov	r0, r5
 738:	bl	0 <grafo_apaga>
 73c:	cmp	r4, #0
 740:	bne	7a8 <teste_grafo_remove+0x18c>
 744:	movw	r0, #0
 748:	movt	r0, #0
 74c:	bl	0 <puts>
 750:	mov	r0, r4
 754:	add	sp, sp, #16
 758:	ldrd	r4, [sp]
 75c:	ldr	r6, [sp, #8]
 760:	add	sp, sp, #12
 764:	pop	{pc}		; (ldr pc, [sp], #4)
 768:	movw	r0, #0
 76c:	movt	r0, #0
 770:	bl	0 <printf>
 774:	mov	r2, #22
 778:	mov	r1, #7
 77c:	mov	r0, r5
 780:	add	r4, r4, #1
 784:	bl	0 <grafo_remove>
 788:	cmn	r0, #1
 78c:	beq	7c4 <teste_grafo_remove+0x1a8>
 790:	movw	r0, #0
 794:	movt	r0, #0
 798:	bl	0 <printf>
 79c:	mov	r0, r5
 7a0:	add	r4, r4, #1
 7a4:	bl	0 <grafo_apaga>
 7a8:	mov	r0, #10
 7ac:	bl	0 <putchar>
 7b0:	b	750 <teste_grafo_remove+0x134>
 7b4:	ldr	r3, [r3]
 7b8:	cmp	r3, #2
 7bc:	bne	6ac <teste_grafo_remove+0x90>
 7c0:	b	6bc <teste_grafo_remove+0xa0>
 7c4:	mov	r0, r5
 7c8:	bl	0 <grafo_apaga>
 7cc:	b	7a8 <teste_grafo_remove+0x18c>

000007d0 <teste_v_sucessores>:
 7d0:	mov	r0, #4
 7d4:	mov	r2, #2
 7d8:	strd	r4, [sp, #-20]!	; 0xffffffec
 7dc:	mov	r1, #5
 7e0:	mov	r5, #7
 7e4:	strd	r6, [sp, #8]
 7e8:	mov	r4, #0
 7ec:	str	lr, [sp, #16]
 7f0:	sub	sp, sp, #84	; 0x54
 7f4:	mov	ip, #6
 7f8:	mov	lr, #3
 7fc:	mov	r6, #1
 800:	mov	r3, r2
 804:	str	r5, [sp]
 808:	stmib	sp, {r2, r4}
 80c:	str	r2, [sp, #12]
 810:	mov	r2, lr
 814:	str	r5, [sp, #16]
 818:	str	r1, [sp, #20]
 81c:	str	r1, [sp, #24]
 820:	mov	r1, #22
 824:	str	r0, [sp, #28]
 828:	str	r0, [sp, #32]
 82c:	str	r4, [sp, #36]	; 0x24
 830:	str	r0, [sp, #40]	; 0x28
 834:	mov	r0, #8
 838:	str	ip, [sp, #44]	; 0x2c
 83c:	str	r6, [sp, #48]	; 0x30
 840:	str	r6, [sp, #52]	; 0x34
 844:	str	r5, [sp, #56]	; 0x38
 848:	str	ip, [sp, #60]	; 0x3c
 84c:	str	ip, [sp, #64]	; 0x40
 850:	str	lr, [sp, #68]	; 0x44
 854:	str	r4, [sp, #72]	; 0x48
 858:	str	r6, [sp, #76]	; 0x4c
 85c:	bl	7c <_g>
 860:	mov	r7, r0
 864:	movw	r0, #0
 868:	movt	r0, #0
 86c:	bl	0 <printf>
 870:	mov	r1, r5
 874:	mov	r0, r7
 878:	bl	0 <v_sucessores>
 87c:	subs	r5, r0, #0
 880:	beq	980 <teste_v_sucessores+0x1b0>
 884:	ldr	r3, [r5]
 888:	cmp	r3, #3
 88c:	moveq	r6, r4
 890:	bne	944 <teste_v_sucessores+0x174>
 894:	mov	r1, #2
 898:	mov	r0, r5
 89c:	bl	0 <_f.part.0>
 8a0:	cmp	r0, #0
 8a4:	bne	918 <teste_v_sucessores+0x148>
 8a8:	movw	r0, #0
 8ac:	movt	r0, #0
 8b0:	add	r6, r6, #1
 8b4:	bl	0 <printf>
 8b8:	mov	r0, r5
 8bc:	bl	0 <vetor_apaga>
 8c0:	mov	r1, #2
 8c4:	mov	r0, r7
 8c8:	bl	0 <v_sucessores>
 8cc:	subs	r5, r0, #0
 8d0:	beq	998 <teste_v_sucessores+0x1c8>
 8d4:	ldr	r3, [r5]
 8d8:	cmp	r3, #0
 8dc:	bne	954 <teste_v_sucessores+0x184>
 8e0:	bl	0 <vetor_apaga>
 8e4:	mov	r0, r7
 8e8:	bl	0 <grafo_apaga>
 8ec:	cmp	r6, #0
 8f0:	bne	974 <teste_v_sucessores+0x1a4>
 8f4:	movw	r0, #0
 8f8:	movt	r0, #0
 8fc:	bl	0 <puts>
 900:	mov	r0, r6
 904:	add	sp, sp, #84	; 0x54
 908:	ldrd	r4, [sp]
 90c:	ldrd	r6, [sp, #8]
 910:	add	sp, sp, #16
 914:	pop	{pc}		; (ldr pc, [sp], #4)
 918:	mov	r1, #5
 91c:	mov	r0, r5
 920:	bl	0 <_f.part.0>
 924:	cmp	r0, #0
 928:	beq	8a8 <teste_v_sucessores+0xd8>
 92c:	mov	r1, #6
 930:	mov	r0, r5
 934:	bl	0 <_f.part.0>
 938:	cmp	r0, #0
 93c:	beq	8a8 <teste_v_sucessores+0xd8>
 940:	b	8b8 <teste_v_sucessores+0xe8>
 944:	movw	r0, #0
 948:	movt	r0, #0
 94c:	bl	0 <printf>
 950:	b	894 <teste_v_sucessores+0xc4>
 954:	movw	r0, #0
 958:	movt	r0, #0
 95c:	bl	0 <printf>
 960:	mov	r0, r5
 964:	add	r6, r6, #1
 968:	bl	0 <vetor_apaga>
 96c:	mov	r0, r7
 970:	bl	0 <grafo_apaga>
 974:	mov	r0, #10
 978:	bl	0 <putchar>
 97c:	b	900 <teste_v_sucessores+0x130>
 980:	movw	r0, #0
 984:	movt	r0, #0
 988:	bl	0 <printf>
 98c:	mov	r0, #10
 990:	bl	0 <putchar>
 994:	b	900 <teste_v_sucessores+0x130>
 998:	movw	r0, #0
 99c:	movt	r0, #0
 9a0:	bl	0 <printf>
 9a4:	mov	r0, #10
 9a8:	add	r6, r6, #1
 9ac:	bl	0 <putchar>
 9b0:	b	900 <teste_v_sucessores+0x130>

000009b4 <teste_v_antecessores>:
 9b4:	mov	r0, #7
 9b8:	mov	r1, #4
 9bc:	strd	r4, [sp, #-20]!	; 0xffffffec
 9c0:	mov	r2, #5
 9c4:	mov	r5, #2
 9c8:	strd	r6, [sp, #8]
 9cc:	mov	r4, #0
 9d0:	str	lr, [sp, #16]
 9d4:	sub	sp, sp, #84	; 0x54
 9d8:	mov	ip, #6
 9dc:	mov	lr, #3
 9e0:	mov	r6, #1
 9e4:	mov	r3, r5
 9e8:	stm	sp, {r0, r5}
 9ec:	strd	r4, [sp, #8]
 9f0:	str	r0, [sp, #16]
 9f4:	str	r2, [sp, #20]
 9f8:	str	r2, [sp, #24]
 9fc:	mov	r2, lr
 a00:	str	r1, [sp, #28]
 a04:	str	r1, [sp, #32]
 a08:	str	r4, [sp, #36]	; 0x24
 a0c:	str	r1, [sp, #40]	; 0x28
 a10:	mov	r1, #22
 a14:	str	ip, [sp, #44]	; 0x2c
 a18:	str	r0, [sp, #56]	; 0x38
 a1c:	mov	r0, #8
 a20:	str	r6, [sp, #48]	; 0x30
 a24:	str	r6, [sp, #52]	; 0x34
 a28:	str	ip, [sp, #60]	; 0x3c
 a2c:	str	ip, [sp, #64]	; 0x40
 a30:	str	lr, [sp, #68]	; 0x44
 a34:	str	r4, [sp, #72]	; 0x48
 a38:	str	r6, [sp, #76]	; 0x4c
 a3c:	bl	7c <_g>
 a40:	mov	r7, r0
 a44:	movw	r0, #0
 a48:	movt	r0, #0
 a4c:	bl	0 <printf>
 a50:	mov	r1, r5
 a54:	mov	r0, r7
 a58:	bl	0 <v_antecessores>
 a5c:	subs	r5, r0, #0
 a60:	beq	b60 <teste_v_antecessores+0x1ac>
 a64:	ldr	r3, [r5]
 a68:	cmp	r3, #3
 a6c:	moveq	r6, r4
 a70:	bne	b24 <teste_v_antecessores+0x170>
 a74:	mov	r1, #0
 a78:	mov	r0, r5
 a7c:	bl	0 <_f.part.0>
 a80:	cmp	r0, #0
 a84:	bne	af8 <teste_v_antecessores+0x144>
 a88:	movw	r0, #0
 a8c:	movt	r0, #0
 a90:	add	r6, r6, #1
 a94:	bl	0 <printf>
 a98:	mov	r0, r5
 a9c:	bl	0 <vetor_apaga>
 aa0:	mov	r1, #7
 aa4:	mov	r0, r7
 aa8:	bl	0 <v_antecessores>
 aac:	subs	r5, r0, #0
 ab0:	beq	b78 <teste_v_antecessores+0x1c4>
 ab4:	ldr	r3, [r5]
 ab8:	cmp	r3, #0
 abc:	bne	b34 <teste_v_antecessores+0x180>
 ac0:	bl	0 <vetor_apaga>
 ac4:	mov	r0, r7
 ac8:	bl	0 <grafo_apaga>
 acc:	cmp	r6, #0
 ad0:	bne	b54 <teste_v_antecessores+0x1a0>
 ad4:	movw	r0, #0
 ad8:	movt	r0, #0
 adc:	bl	0 <puts>
 ae0:	mov	r0, r6
 ae4:	add	sp, sp, #84	; 0x54
 ae8:	ldrd	r4, [sp]
 aec:	ldrd	r6, [sp, #8]
 af0:	add	sp, sp, #16
 af4:	pop	{pc}		; (ldr pc, [sp], #4)
 af8:	mov	r1, #3
 afc:	mov	r0, r5
 b00:	bl	0 <_f.part.0>
 b04:	cmp	r0, #0
 b08:	beq	a88 <teste_v_antecessores+0xd4>
 b0c:	mov	r1, #7
 b10:	mov	r0, r5
 b14:	bl	0 <_f.part.0>
 b18:	cmp	r0, #0
 b1c:	beq	a88 <teste_v_antecessores+0xd4>
 b20:	b	a98 <teste_v_antecessores+0xe4>
 b24:	movw	r0, #0
 b28:	movt	r0, #0
 b2c:	bl	0 <printf>
 b30:	b	a74 <teste_v_antecessores+0xc0>
 b34:	movw	r0, #0
 b38:	movt	r0, #0
 b3c:	bl	0 <printf>
 b40:	mov	r0, r5
 b44:	add	r6, r6, #1
 b48:	bl	0 <vetor_apaga>
 b4c:	mov	r0, r7
 b50:	bl	0 <grafo_apaga>
 b54:	mov	r0, #10
 b58:	bl	0 <putchar>
 b5c:	b	ae0 <teste_v_antecessores+0x12c>
 b60:	movw	r0, #0
 b64:	movt	r0, #0
 b68:	bl	0 <printf>
 b6c:	mov	r0, #10
 b70:	bl	0 <putchar>
 b74:	b	ae0 <teste_v_antecessores+0x12c>
 b78:	movw	r0, #0
 b7c:	movt	r0, #0
 b80:	bl	0 <printf>
 b84:	mov	r0, #10
 b88:	add	r6, r6, #1
 b8c:	bl	0 <putchar>
 b90:	b	ae0 <teste_v_antecessores+0x12c>

00000b94 <teste_v_grau>:
 b94:	mov	r3, #2
 b98:	mov	r0, #7
 b9c:	strd	r4, [sp, #-16]!
 ba0:	mov	r1, #4
 ba4:	mov	r4, #0
 ba8:	str	r6, [sp, #8]
 bac:	mov	r2, #5
 bb0:	str	lr, [sp, #12]
 bb4:	sub	sp, sp, #80	; 0x50
 bb8:	mov	ip, #6
 bbc:	mov	lr, #3
 bc0:	mov	r6, #1
 bc4:	stm	sp, {r0, r3, r4}
 bc8:	str	r3, [sp, #12]
 bcc:	str	r0, [sp, #16]
 bd0:	str	r2, [sp, #20]
 bd4:	str	r2, [sp, #24]
 bd8:	mov	r2, lr
 bdc:	str	r1, [sp, #28]
 be0:	str	r1, [sp, #32]
 be4:	str	r4, [sp, #36]	; 0x24
 be8:	str	r1, [sp, #40]	; 0x28
 bec:	mov	r1, #22
 bf0:	str	r0, [sp, #56]	; 0x38
 bf4:	mov	r0, #8
 bf8:	str	ip, [sp, #44]	; 0x2c
 bfc:	str	r6, [sp, #48]	; 0x30
 c00:	str	r6, [sp, #52]	; 0x34
 c04:	str	ip, [sp, #60]	; 0x3c
 c08:	str	ip, [sp, #64]	; 0x40
 c0c:	str	lr, [sp, #68]	; 0x44
 c10:	str	r4, [sp, #72]	; 0x48
 c14:	str	r6, [sp, #76]	; 0x4c
 c18:	bl	7c <_g>
 c1c:	mov	r5, r0
 c20:	movw	r0, #0
 c24:	movt	r0, #0
 c28:	bl	0 <printf>
 c2c:	mov	r0, r5
 c30:	mvn	r1, #3
 c34:	bl	0 <v_grau>
 c38:	cmn	r0, #1
 c3c:	beq	c50 <teste_v_grau+0xbc>
 c40:	movw	r0, #0
 c44:	movt	r0, #0
 c48:	mov	r4, r6
 c4c:	bl	0 <printf>
 c50:	mov	r1, #7
 c54:	mov	r0, r5
 c58:	bl	0 <v_grau>
 c5c:	cmp	r0, #3
 c60:	bne	cac <teste_v_grau+0x118>
 c64:	mov	r1, #5
 c68:	mov	r0, r5
 c6c:	bl	0 <v_grau>
 c70:	cmp	r0, #2
 c74:	bne	cd0 <teste_v_grau+0x13c>
 c78:	mov	r0, r5
 c7c:	bl	0 <grafo_apaga>
 c80:	cmp	r4, #0
 c84:	bne	ce8 <teste_v_grau+0x154>
 c88:	movw	r0, #0
 c8c:	movt	r0, #0
 c90:	bl	0 <puts>
 c94:	mov	r0, r4
 c98:	add	sp, sp, #80	; 0x50
 c9c:	ldrd	r4, [sp]
 ca0:	ldr	r6, [sp, #8]
 ca4:	add	sp, sp, #12
 ca8:	pop	{pc}		; (ldr pc, [sp], #4)
 cac:	movw	r0, #0
 cb0:	movt	r0, #0
 cb4:	bl	0 <printf>
 cb8:	mov	r1, #5
 cbc:	mov	r0, r5
 cc0:	bl	0 <v_grau>
 cc4:	cmp	r0, #2
 cc8:	add	r4, r4, #1
 ccc:	beq	cf4 <teste_v_grau+0x160>
 cd0:	movw	r0, #0
 cd4:	movt	r0, #0
 cd8:	bl	0 <printf>
 cdc:	mov	r0, r5
 ce0:	add	r4, r4, #1
 ce4:	bl	0 <grafo_apaga>
 ce8:	mov	r0, #10
 cec:	bl	0 <putchar>
 cf0:	b	c94 <teste_v_grau+0x100>
 cf4:	mov	r0, r5
 cf8:	bl	0 <grafo_apaga>
 cfc:	b	ce8 <teste_v_grau+0x154>

00000d00 <teste_v_celebridade>:
 d00:	mov	r0, #6
 d04:	mov	r1, #0
 d08:	strd	r4, [sp, #-20]!	; 0xffffffec
 d0c:	strd	r6, [sp, #8]
 d10:	mov	r6, #7
 d14:	mov	r4, #2
 d18:	str	lr, [sp, #16]
 d1c:	sub	sp, sp, #116	; 0x74
 d20:	mov	ip, #4
 d24:	mov	lr, #5
 d28:	mov	r5, #1
 d2c:	mov	r7, #3
 d30:	mov	r3, r4
 d34:	str	r6, [sp]
 d38:	mov	r2, r7
 d3c:	str	r4, [sp, #4]
 d40:	str	r1, [sp, #8]
 d44:	str	r1, [sp, #36]	; 0x24
 d48:	str	r0, [sp, #44]	; 0x2c
 d4c:	str	r0, [sp, #60]	; 0x3c
 d50:	str	r0, [sp, #64]	; 0x40
 d54:	str	r1, [sp, #72]	; 0x48
 d58:	mov	r1, #30
 d5c:	str	r0, [sp, #88]	; 0x58
 d60:	mov	r0, #8
 d64:	str	r4, [sp, #12]
 d68:	str	r6, [sp, #16]
 d6c:	str	lr, [sp, #20]
 d70:	str	lr, [sp, #24]
 d74:	str	ip, [sp, #28]
 d78:	str	ip, [sp, #32]
 d7c:	str	ip, [sp, #40]	; 0x28
 d80:	str	r5, [sp, #48]	; 0x30
 d84:	str	r5, [sp, #52]	; 0x34
 d88:	str	r6, [sp, #56]	; 0x38
 d8c:	str	r7, [sp, #68]	; 0x44
 d90:	str	r5, [sp, #76]	; 0x4c
 d94:	str	r5, [sp, #80]	; 0x50
 d98:	str	r4, [sp, #84]	; 0x54
 d9c:	str	r4, [sp, #92]	; 0x5c
 da0:	str	ip, [sp, #96]	; 0x60
 da4:	str	r4, [sp, #100]	; 0x64
 da8:	str	lr, [sp, #104]	; 0x68
 dac:	str	r4, [sp, #108]	; 0x6c
 db0:	bl	7c <_g>
 db4:	mov	r7, r0
 db8:	movw	r0, #0
 dbc:	movt	r0, #0
 dc0:	bl	0 <printf>
 dc4:	mov	r1, r6
 dc8:	mov	r0, r7
 dcc:	bl	0 <v_celebridade>
 dd0:	subs	r6, r0, #0
 dd4:	bne	e18 <teste_v_celebridade+0x118>
 dd8:	mov	r1, r4
 ddc:	mov	r0, r7
 de0:	bl	0 <v_celebridade>
 de4:	cmp	r0, #1
 de8:	bne	e60 <teste_v_celebridade+0x160>
 dec:	mov	r0, r7
 df0:	bl	0 <grafo_apaga>
 df4:	movw	r0, #0
 df8:	movt	r0, #0
 dfc:	bl	0 <puts>
 e00:	mov	r0, r6
 e04:	add	sp, sp, #116	; 0x74
 e08:	ldrd	r4, [sp]
 e0c:	ldrd	r6, [sp, #8]
 e10:	add	sp, sp, #16
 e14:	pop	{pc}		; (ldr pc, [sp], #4)
 e18:	movw	r0, #0
 e1c:	movt	r0, #0
 e20:	bl	0 <printf>
 e24:	mov	r1, r4
 e28:	mov	r0, r7
 e2c:	bl	0 <v_celebridade>
 e30:	cmp	r0, r5
 e34:	mov	r6, r0
 e38:	beq	e4c <teste_v_celebridade+0x14c>
 e3c:	mov	r6, r4
 e40:	movw	r0, #0
 e44:	movt	r0, #0
 e48:	bl	0 <printf>
 e4c:	mov	r0, r7
 e50:	bl	0 <grafo_apaga>
 e54:	mov	r0, #10
 e58:	bl	0 <putchar>
 e5c:	b	e00 <teste_v_celebridade+0x100>
 e60:	mov	r6, r5
 e64:	b	e40 <teste_v_celebridade+0x140>

Disassembly of section .text.startup:

00000000 <main>:
   0:	mov	r3, #0
   4:	movw	r1, #0
   8:	movt	r1, #0
   c:	mov	r2, #2
  10:	str	r4, [sp, #-8]!
  14:	ldr	r0, [r1]
  18:	mov	r1, r3
  1c:	str	lr, [sp, #4]
  20:	bl	0 <setvbuf>
  24:	mov	r3, #0
  28:	movw	r1, #0
  2c:	movt	r1, #0
  30:	mov	r2, #2
  34:	ldr	r0, [r1]
  38:	mov	r1, r3
  3c:	bl	0 <setvbuf>
  40:	bl	164 <teste_grafo_novo>
  44:	mov	r4, r0
  48:	bl	25c <teste_grafo_aresta>
  4c:	add	r4, r4, r0
  50:	bl	404 <teste_grafo_adiciona>
  54:	add	r4, r4, r0
  58:	bl	61c <teste_grafo_remove>
  5c:	add	r4, r4, r0
  60:	bl	7d0 <teste_v_sucessores>
  64:	add	r4, r4, r0
  68:	bl	9b4 <teste_v_antecessores>
  6c:	add	r4, r4, r0
  70:	bl	b94 <teste_v_grau>
  74:	add	r4, r4, r0
  78:	bl	d00 <teste_v_celebridade>
  7c:	adds	r1, r4, r0
  80:	bne	a0 <main+0xa0>
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	bl	0 <puts>
  90:	ldr	r4, [sp]
  94:	add	sp, sp, #4
  98:	mov	r0, #0
  9c:	pop	{pc}		; (ldr pc, [sp], #4)
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <printf>
  ac:	b	90 <main+0x90>
