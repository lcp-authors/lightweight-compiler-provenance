
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacmp.dir/tools/codacmp/codacmp.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	bl	0 <coda_get_libcoda_version>
       c:	mov	r3, r0
      10:	mov	r1, r3
      14:	ldr	r0, [pc, #24]	; 34 <print_version+0x34>
      18:	bl	0 <printf>
      1c:	ldr	r0, [pc, #20]	; 38 <print_version+0x38>
      20:	bl	0 <puts>
      24:	mov	r0, #10
      28:	bl	0 <putchar>
      2c:	nop			; (mov r0, r0)
      30:	pop	{fp, pc}
      34:	.word	0x00000008
      38:	.word	0x00000020

0000003c <print_help>:
      3c:	push	{fp, lr}
      40:	add	fp, sp, #4
      44:	ldr	r0, [pc, #280]	; 164 <print_help+0x128>
      48:	bl	0 <puts>
      4c:	ldr	r0, [pc, #276]	; 168 <print_help+0x12c>
      50:	bl	0 <puts>
      54:	ldr	r0, [pc, #272]	; 16c <print_help+0x130>
      58:	bl	0 <puts>
      5c:	ldr	r0, [pc, #268]	; 170 <print_help+0x134>
      60:	bl	0 <puts>
      64:	ldr	r0, [pc, #264]	; 174 <print_help+0x138>
      68:	bl	0 <puts>
      6c:	ldr	r0, [pc, #260]	; 178 <print_help+0x13c>
      70:	bl	0 <puts>
      74:	ldr	r0, [pc, #256]	; 17c <print_help+0x140>
      78:	bl	0 <puts>
      7c:	ldr	r0, [pc, #252]	; 180 <print_help+0x144>
      80:	bl	0 <puts>
      84:	ldr	r0, [pc, #248]	; 184 <print_help+0x148>
      88:	bl	0 <puts>
      8c:	ldr	r0, [pc, #244]	; 188 <print_help+0x14c>
      90:	bl	0 <puts>
      94:	ldr	r0, [pc, #240]	; 18c <print_help+0x150>
      98:	bl	0 <puts>
      9c:	ldr	r0, [pc, #236]	; 190 <print_help+0x154>
      a0:	bl	0 <puts>
      a4:	ldr	r0, [pc, #232]	; 194 <print_help+0x158>
      a8:	bl	0 <puts>
      ac:	ldr	r0, [pc, #228]	; 198 <print_help+0x15c>
      b0:	bl	0 <puts>
      b4:	ldr	r0, [pc, #224]	; 19c <print_help+0x160>
      b8:	bl	0 <puts>
      bc:	ldr	r0, [pc, #220]	; 1a0 <print_help+0x164>
      c0:	bl	0 <puts>
      c4:	ldr	r0, [pc, #216]	; 1a4 <print_help+0x168>
      c8:	bl	0 <puts>
      cc:	ldr	r0, [pc, #212]	; 1a8 <print_help+0x16c>
      d0:	bl	0 <puts>
      d4:	ldr	r0, [pc, #208]	; 1ac <print_help+0x170>
      d8:	bl	0 <puts>
      dc:	ldr	r0, [pc, #204]	; 1b0 <print_help+0x174>
      e0:	bl	0 <puts>
      e4:	mov	r0, #10
      e8:	bl	0 <putchar>
      ec:	ldr	r0, [pc, #192]	; 1b4 <print_help+0x178>
      f0:	bl	0 <puts>
      f4:	ldr	r0, [pc, #188]	; 1b8 <print_help+0x17c>
      f8:	bl	0 <puts>
      fc:	mov	r0, #10
     100:	bl	0 <putchar>
     104:	ldr	r0, [pc, #176]	; 1bc <print_help+0x180>
     108:	bl	0 <puts>
     10c:	ldr	r0, [pc, #172]	; 1c0 <print_help+0x184>
     110:	bl	0 <puts>
     114:	mov	r0, #10
     118:	bl	0 <putchar>
     11c:	ldr	r0, [pc, #160]	; 1c4 <print_help+0x188>
     120:	bl	0 <puts>
     124:	ldr	r0, [pc, #156]	; 1c8 <print_help+0x18c>
     128:	bl	0 <puts>
     12c:	ldr	r0, [pc, #152]	; 1cc <print_help+0x190>
     130:	bl	0 <puts>
     134:	ldr	r0, [pc, #148]	; 1d0 <print_help+0x194>
     138:	bl	0 <puts>
     13c:	ldr	r0, [pc, #144]	; 1d4 <print_help+0x198>
     140:	bl	0 <puts>
     144:	ldr	r0, [pc, #140]	; 1d8 <print_help+0x19c>
     148:	bl	0 <puts>
     14c:	ldr	r0, [pc, #136]	; 1dc <print_help+0x1a0>
     150:	bl	0 <puts>
     154:	mov	r0, #10
     158:	bl	0 <putchar>
     15c:	nop			; (mov r0, r0)
     160:	pop	{fp, pc}
     164:	.word	0x00000050
     168:	.word	0x00000058
     16c:	.word	0x00000090
     170:	.word	0x000000bc
     174:	.word	0x000000d0
     178:	.word	0x000000f8
     17c:	.word	0x00000134
     180:	.word	0x00000154
     184:	.word	0x0000019c
     188:	.word	0x000001ec
     18c:	.word	0x00000238
     190:	.word	0x00000288
     194:	.word	0x000002c0
     198:	.word	0x00000308
     19c:	.word	0x00000358
     1a0:	.word	0x000003a8
     1a4:	.word	0x000003f8
     1a8:	.word	0x00000448
     1ac:	.word	0x00000470
     1b0:	.word	0x0000048c
     1b4:	.word	0x000004d8
     1b8:	.word	0x000004f0
     1bc:	.word	0x00000510
     1c0:	.word	0x0000052c
     1c4:	.word	0x00000560
     1c8:	.word	0x000005b0
     1cc:	.word	0x000005fc
     1d0:	.word	0x00000628
     1d4:	.word	0x00000674
     1d8:	.word	0x000006bc
     1dc:	.word	0x000006fc

000001e0 <print_escaped>:
     1e0:	push	{fp, lr}
     1e4:	add	fp, sp, #4
     1e8:	sub	sp, sp, #16
     1ec:	str	r0, [fp, #-16]
     1f0:	str	r1, [fp, #-20]	; 0xffffffec
     1f4:	mov	r3, #0
     1f8:	str	r3, [fp, #-8]
     1fc:	b	30c <print_escaped+0x12c>
     200:	ldr	r3, [fp, #-8]
     204:	ldr	r2, [fp, #-16]
     208:	add	r3, r2, r3
     20c:	ldrb	r3, [r3]
     210:	strb	r3, [fp, #-9]
     214:	ldrb	r3, [fp, #-9]
     218:	cmp	r3, #10
     21c:	beq	28c <print_escaped+0xac>
     220:	cmp	r3, #10
     224:	bgt	244 <print_escaped+0x64>
     228:	cmp	r3, #8
     22c:	beq	274 <print_escaped+0x94>
     230:	cmp	r3, #8
     234:	bgt	280 <print_escaped+0xa0>
     238:	cmp	r3, #7
     23c:	beq	268 <print_escaped+0x88>
     240:	b	2c8 <print_escaped+0xe8>
     244:	cmp	r3, #12
     248:	beq	2a4 <print_escaped+0xc4>
     24c:	cmp	r3, #12
     250:	blt	298 <print_escaped+0xb8>
     254:	cmp	r3, #13
     258:	beq	2b0 <print_escaped+0xd0>
     25c:	cmp	r3, #92	; 0x5c
     260:	beq	2bc <print_escaped+0xdc>
     264:	b	2c8 <print_escaped+0xe8>
     268:	ldr	r0, [pc, #184]	; 328 <print_escaped+0x148>
     26c:	bl	0 <printf>
     270:	b	300 <print_escaped+0x120>
     274:	ldr	r0, [pc, #176]	; 32c <print_escaped+0x14c>
     278:	bl	0 <printf>
     27c:	b	300 <print_escaped+0x120>
     280:	ldr	r0, [pc, #168]	; 330 <print_escaped+0x150>
     284:	bl	0 <printf>
     288:	b	300 <print_escaped+0x120>
     28c:	ldr	r0, [pc, #160]	; 334 <print_escaped+0x154>
     290:	bl	0 <printf>
     294:	b	300 <print_escaped+0x120>
     298:	ldr	r0, [pc, #152]	; 338 <print_escaped+0x158>
     29c:	bl	0 <printf>
     2a0:	b	300 <print_escaped+0x120>
     2a4:	ldr	r0, [pc, #144]	; 33c <print_escaped+0x15c>
     2a8:	bl	0 <printf>
     2ac:	b	300 <print_escaped+0x120>
     2b0:	ldr	r0, [pc, #136]	; 340 <print_escaped+0x160>
     2b4:	bl	0 <printf>
     2b8:	b	300 <print_escaped+0x120>
     2bc:	ldr	r0, [pc, #128]	; 344 <print_escaped+0x164>
     2c0:	bl	0 <printf>
     2c4:	b	300 <print_escaped+0x120>
     2c8:	ldrb	r3, [fp, #-9]
     2cc:	cmp	r3, #31
     2d0:	bls	2f0 <print_escaped+0x110>
     2d4:	ldrb	r3, [fp, #-9]
     2d8:	cmp	r3, #126	; 0x7e
     2dc:	bhi	2f0 <print_escaped+0x110>
     2e0:	ldrb	r3, [fp, #-9]
     2e4:	mov	r0, r3
     2e8:	bl	0 <putchar>
     2ec:	b	300 <print_escaped+0x120>
     2f0:	ldrb	r3, [fp, #-9]
     2f4:	mov	r1, r3
     2f8:	ldr	r0, [pc, #72]	; 348 <print_escaped+0x168>
     2fc:	bl	0 <printf>
     300:	ldr	r3, [fp, #-8]
     304:	add	r3, r3, #1
     308:	str	r3, [fp, #-8]
     30c:	ldr	r2, [fp, #-8]
     310:	ldr	r3, [fp, #-20]	; 0xffffffec
     314:	cmp	r2, r3
     318:	blt	200 <print_escaped+0x20>
     31c:	nop			; (mov r0, r0)
     320:	sub	sp, fp, #4
     324:	pop	{fp, pc}
     328:	.word	0x0000073c
     32c:	.word	0x00000740
     330:	.word	0x00000744
     334:	.word	0x00000748
     338:	.word	0x0000074c
     33c:	.word	0x00000750
     340:	.word	0x00000754
     344:	.word	0x00000758
     348:	.word	0x0000075c

0000034c <print_error_with_cursor>:
     34c:	push	{r4, r5, fp, lr}
     350:	add	fp, sp, #12
     354:	sub	sp, sp, #8
     358:	str	r0, [fp, #-16]
     35c:	str	r1, [fp, #-20]	; 0xffffffec
     360:	ldr	r0, [fp, #-16]
     364:	bl	0 <coda_cursor_add_to_error_message>
     368:	ldr	r3, [pc, #68]	; 3b4 <print_error_with_cursor+0x68>
     36c:	ldr	r4, [r3]
     370:	ldr	r3, [fp, #-20]	; 0xffffffec
     374:	sub	r3, r3, #1
     378:	ldr	r2, [pc, #56]	; 3b8 <print_error_with_cursor+0x6c>
     37c:	ldr	r5, [r2, r3, lsl #2]
     380:	bl	0 <coda_get_errno>
     384:	mov	r3, r0
     388:	ldr	r3, [r3]
     38c:	mov	r0, r3
     390:	bl	0 <coda_errno_to_string>
     394:	mov	r3, r0
     398:	mov	r2, r5
     39c:	ldr	r1, [pc, #24]	; 3bc <print_error_with_cursor+0x70>
     3a0:	mov	r0, r4
     3a4:	bl	0 <fprintf>
     3a8:	nop			; (mov r0, r0)
     3ac:	sub	sp, fp, #12
     3b0:	pop	{r4, r5, fp, pc}
	...
     3bc:	.word	0x00000764

000003c0 <array_key_info_init>:
     3c0:	push	{fp}		; (str fp, [sp, #-4]!)
     3c4:	add	fp, sp, #0
     3c8:	ldr	r3, [pc, #56]	; 408 <array_key_info_init+0x48>
     3cc:	mov	r2, #0
     3d0:	str	r2, [r3]
     3d4:	ldr	r3, [pc, #44]	; 408 <array_key_info_init+0x48>
     3d8:	mov	r2, #0
     3dc:	str	r2, [r3, #4]
     3e0:	ldr	r3, [pc, #32]	; 408 <array_key_info_init+0x48>
     3e4:	mov	r2, #0
     3e8:	str	r2, [r3, #8]
     3ec:	ldr	r3, [pc, #20]	; 408 <array_key_info_init+0x48>
     3f0:	mov	r2, #0
     3f4:	str	r2, [r3, #12]
     3f8:	nop			; (mov r0, r0)
     3fc:	add	sp, fp, #0
     400:	pop	{fp}		; (ldr fp, [sp], #4)
     404:	bx	lr
     408:	.word	0x00000000

0000040c <array_key_info_done>:
     40c:	push	{fp, lr}
     410:	add	fp, sp, #4
     414:	ldr	r3, [pc, #100]	; 480 <array_key_info_done+0x74>
     418:	ldr	r3, [r3, #4]
     41c:	cmp	r3, #0
     420:	beq	434 <array_key_info_done+0x28>
     424:	ldr	r3, [pc, #84]	; 480 <array_key_info_done+0x74>
     428:	ldr	r3, [r3, #4]
     42c:	mov	r0, r3
     430:	bl	0 <free>
     434:	ldr	r3, [pc, #68]	; 480 <array_key_info_done+0x74>
     438:	ldr	r3, [r3, #8]
     43c:	cmp	r3, #0
     440:	beq	454 <array_key_info_done+0x48>
     444:	ldr	r3, [pc, #52]	; 480 <array_key_info_done+0x74>
     448:	ldr	r3, [r3, #8]
     44c:	mov	r0, r3
     450:	bl	0 <free>
     454:	ldr	r3, [pc, #36]	; 480 <array_key_info_done+0x74>
     458:	ldr	r3, [r3, #12]
     45c:	cmp	r3, #0
     460:	beq	478 <array_key_info_done+0x6c>
     464:	ldr	r3, [pc, #20]	; 480 <array_key_info_done+0x74>
     468:	ldr	r3, [r3, #12]
     46c:	mov	r1, #0
     470:	mov	r0, r3
     474:	bl	0 <coda_tree_node_delete>
     478:	nop			; (mov r0, r0)
     47c:	pop	{fp, pc}
     480:	.word	0x00000000

00000484 <array_key_info_add_key>:
     484:	push	{fp, lr}
     488:	add	fp, sp, #4
     48c:	sub	sp, sp, #24
     490:	str	r0, [fp, #-16]
     494:	str	r1, [fp, #-20]	; 0xffffffec
     498:	ldr	r3, [pc, #336]	; 5f0 <array_key_info_add_key+0x16c>
     49c:	ldr	r3, [r3]
     4a0:	and	r3, r3, #15
     4a4:	cmp	r3, #0
     4a8:	bne	58c <array_key_info_add_key+0x108>
     4ac:	ldr	r3, [pc, #316]	; 5f0 <array_key_info_add_key+0x16c>
     4b0:	ldr	r2, [r3, #4]
     4b4:	ldr	r3, [pc, #308]	; 5f0 <array_key_info_add_key+0x16c>
     4b8:	ldr	r3, [r3]
     4bc:	add	r3, r3, #16
     4c0:	lsl	r3, r3, #2
     4c4:	mov	r1, r3
     4c8:	mov	r0, r2
     4cc:	bl	0 <realloc>
     4d0:	str	r0, [fp, #-8]
     4d4:	ldr	r3, [fp, #-8]
     4d8:	cmp	r3, #0
     4dc:	bne	510 <array_key_info_add_key+0x8c>
     4e0:	ldr	r3, [pc, #264]	; 5f0 <array_key_info_add_key+0x16c>
     4e4:	ldr	r3, [r3]
     4e8:	add	r3, r3, #16
     4ec:	lsl	r2, r3, #2
     4f0:	mov	r3, #198	; 0xc6
     4f4:	str	r3, [sp]
     4f8:	ldr	r3, [pc, #244]	; 5f4 <array_key_info_add_key+0x170>
     4fc:	ldr	r1, [pc, #244]	; 5f8 <array_key_info_add_key+0x174>
     500:	mvn	r0, #0
     504:	bl	0 <coda_set_error>
     508:	mvn	r3, #0
     50c:	b	5e4 <array_key_info_add_key+0x160>
     510:	ldr	r2, [pc, #216]	; 5f0 <array_key_info_add_key+0x16c>
     514:	ldr	r3, [fp, #-8]
     518:	str	r3, [r2, #4]
     51c:	ldr	r3, [pc, #204]	; 5f0 <array_key_info_add_key+0x16c>
     520:	ldr	r2, [r3, #8]
     524:	ldr	r3, [pc, #196]	; 5f0 <array_key_info_add_key+0x16c>
     528:	ldr	r3, [r3]
     52c:	add	r3, r3, #16
     530:	lsl	r3, r3, #2
     534:	mov	r1, r3
     538:	mov	r0, r2
     53c:	bl	0 <realloc>
     540:	str	r0, [fp, #-12]
     544:	ldr	r3, [fp, #-12]
     548:	cmp	r3, #0
     54c:	bne	580 <array_key_info_add_key+0xfc>
     550:	ldr	r3, [pc, #152]	; 5f0 <array_key_info_add_key+0x16c>
     554:	ldr	r3, [r3]
     558:	add	r3, r3, #16
     55c:	lsl	r2, r3, #2
     560:	mov	r3, #207	; 0xcf
     564:	str	r3, [sp]
     568:	ldr	r3, [pc, #132]	; 5f4 <array_key_info_add_key+0x170>
     56c:	ldr	r1, [pc, #132]	; 5f8 <array_key_info_add_key+0x174>
     570:	mvn	r0, #0
     574:	bl	0 <coda_set_error>
     578:	mvn	r3, #0
     57c:	b	5e4 <array_key_info_add_key+0x160>
     580:	ldr	r2, [pc, #104]	; 5f0 <array_key_info_add_key+0x16c>
     584:	ldr	r3, [fp, #-12]
     588:	str	r3, [r2, #8]
     58c:	ldr	r3, [pc, #92]	; 5f0 <array_key_info_add_key+0x16c>
     590:	ldr	r2, [r3, #4]
     594:	ldr	r3, [pc, #84]	; 5f0 <array_key_info_add_key+0x16c>
     598:	ldr	r3, [r3]
     59c:	lsl	r3, r3, #2
     5a0:	add	r3, r2, r3
     5a4:	ldr	r2, [fp, #-16]
     5a8:	str	r2, [r3]
     5ac:	ldr	r3, [pc, #60]	; 5f0 <array_key_info_add_key+0x16c>
     5b0:	ldr	r2, [r3, #8]
     5b4:	ldr	r3, [pc, #52]	; 5f0 <array_key_info_add_key+0x16c>
     5b8:	ldr	r3, [r3]
     5bc:	lsl	r3, r3, #2
     5c0:	add	r3, r2, r3
     5c4:	ldr	r2, [fp, #-20]	; 0xffffffec
     5c8:	str	r2, [r3]
     5cc:	ldr	r3, [pc, #28]	; 5f0 <array_key_info_add_key+0x16c>
     5d0:	ldr	r3, [r3]
     5d4:	add	r3, r3, #1
     5d8:	ldr	r2, [pc, #16]	; 5f0 <array_key_info_add_key+0x16c>
     5dc:	str	r3, [r2]
     5e0:	mov	r3, #0
     5e4:	mov	r0, r3
     5e8:	sub	sp, fp, #4
     5ec:	pop	{fp, pc}
     5f0:	.word	0x00000000
     5f4:	.word	0x00000774
     5f8:	.word	0x000007c0

000005fc <array_key_info_set_product>:
     5fc:	push	{fp, lr}
     600:	add	fp, sp, #4
     604:	sub	sp, sp, #16
     608:	str	r0, [fp, #-16]
     60c:	ldr	r3, [pc, #244]	; 708 <array_key_info_set_product+0x10c>
     610:	ldr	r3, [r3]
     614:	cmp	r3, #0
     618:	bne	624 <array_key_info_set_product+0x28>
     61c:	mov	r3, #0
     620:	b	6fc <array_key_info_set_product+0x100>
     624:	sub	r3, fp, #12
     628:	mov	r1, r3
     62c:	ldr	r0, [fp, #-16]
     630:	bl	0 <coda_get_product_root_type>
     634:	mov	r3, r0
     638:	cmp	r3, #0
     63c:	beq	648 <array_key_info_set_product+0x4c>
     640:	mvn	r3, #0
     644:	b	6fc <array_key_info_set_product+0x100>
     648:	ldr	r3, [fp, #-12]
     64c:	mov	r0, r3
     650:	bl	0 <coda_tree_node_new>
     654:	mov	r2, r0
     658:	ldr	r3, [pc, #168]	; 708 <array_key_info_set_product+0x10c>
     65c:	str	r2, [r3, #12]
     660:	ldr	r3, [pc, #160]	; 708 <array_key_info_set_product+0x10c>
     664:	ldr	r3, [r3, #12]
     668:	cmp	r3, #0
     66c:	bne	678 <array_key_info_set_product+0x7c>
     670:	mvn	r3, #0
     674:	b	6fc <array_key_info_set_product+0x100>
     678:	mov	r3, #0
     67c:	str	r3, [fp, #-8]
     680:	b	6e4 <array_key_info_set_product+0xe8>
     684:	ldr	r3, [pc, #124]	; 708 <array_key_info_set_product+0x10c>
     688:	ldr	r0, [r3, #12]
     68c:	ldr	r3, [pc, #116]	; 708 <array_key_info_set_product+0x10c>
     690:	ldr	r2, [r3, #4]
     694:	ldr	r3, [fp, #-8]
     698:	lsl	r3, r3, #2
     69c:	add	r3, r2, r3
     6a0:	ldr	r1, [r3]
     6a4:	ldr	r3, [pc, #92]	; 708 <array_key_info_set_product+0x10c>
     6a8:	ldr	r2, [r3, #8]
     6ac:	ldr	r3, [fp, #-8]
     6b0:	lsl	r3, r3, #2
     6b4:	add	r3, r2, r3
     6b8:	ldr	r2, [r3]
     6bc:	mov	r3, #0
     6c0:	bl	0 <coda_tree_node_add_item_for_path>
     6c4:	mov	r3, r0
     6c8:	cmp	r3, #0
     6cc:	beq	6d8 <array_key_info_set_product+0xdc>
     6d0:	mvn	r3, #0
     6d4:	b	6fc <array_key_info_set_product+0x100>
     6d8:	ldr	r3, [fp, #-8]
     6dc:	add	r3, r3, #1
     6e0:	str	r3, [fp, #-8]
     6e4:	ldr	r3, [pc, #28]	; 708 <array_key_info_set_product+0x10c>
     6e8:	ldr	r2, [r3]
     6ec:	ldr	r3, [fp, #-8]
     6f0:	cmp	r2, r3
     6f4:	bgt	684 <array_key_info_set_product+0x88>
     6f8:	mov	r3, #0
     6fc:	mov	r0, r3
     700:	sub	sp, fp, #4
     704:	pop	{fp, pc}
     708:	.word	0x00000000

0000070c <compare_arrays_as_records_sub>:
     70c:	push	{r4, r5, fp, lr}
     710:	add	fp, sp, #12
     714:	sub	sp, sp, #40	; 0x28
     718:	str	r0, [fp, #-40]	; 0xffffffd8
     71c:	str	r1, [fp, #-44]	; 0xffffffd4
     720:	str	r2, [fp, #-48]	; 0xffffffd0
     724:	str	r3, [fp, #-52]	; 0xffffffcc
     728:	ldr	r3, [fp, #-52]	; 0xffffffcc
     72c:	cmp	r3, #0
     730:	ble	8c4 <compare_arrays_as_records_sub+0x1b8>
     734:	ldr	r0, [fp, #-40]	; 0xffffffd8
     738:	bl	0 <coda_cursor_goto_first_array_element>
     73c:	mov	r3, r0
     740:	cmp	r3, #0
     744:	beq	75c <compare_arrays_as_records_sub+0x50>
     748:	mov	r1, #1
     74c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     750:	bl	34c <print_error_with_cursor>
     754:	mvn	r3, #0
     758:	b	d8c <compare_arrays_as_records_sub+0x680>
     75c:	mov	r3, #0
     760:	str	r3, [fp, #-20]	; 0xffffffec
     764:	b	8ac <compare_arrays_as_records_sub+0x1a0>
     768:	ldr	r3, [fp, #-20]	; 0xffffffec
     76c:	lsl	r3, r3, #2
     770:	ldr	r2, [fp, #8]
     774:	add	r2, r2, r3
     778:	sub	r3, fp, #28
     77c:	ldr	r1, [fp, #-40]	; 0xffffffd8
     780:	ldr	r0, [fp, #-48]	; 0xffffffd0
     784:	bl	0 <coda_expression_eval_string>
     788:	mov	r3, r0
     78c:	cmp	r3, #0
     790:	beq	7d4 <compare_arrays_as_records_sub+0xc8>
     794:	ldr	r3, [pc, #1532]	; d98 <compare_arrays_as_records_sub+0x68c>
     798:	ldr	r4, [r3]
     79c:	ldr	r3, [pc, #1528]	; d9c <compare_arrays_as_records_sub+0x690>
     7a0:	ldr	r5, [r3]
     7a4:	bl	0 <coda_get_errno>
     7a8:	mov	r3, r0
     7ac:	ldr	r3, [r3]
     7b0:	mov	r0, r3
     7b4:	bl	0 <coda_errno_to_string>
     7b8:	mov	r3, r0
     7bc:	mov	r2, r5
     7c0:	ldr	r1, [pc, #1496]	; da0 <compare_arrays_as_records_sub+0x694>
     7c4:	mov	r0, r4
     7c8:	bl	0 <fprintf>
     7cc:	mvn	r3, #0
     7d0:	b	d8c <compare_arrays_as_records_sub+0x680>
     7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
     7d8:	lsl	r3, r3, #2
     7dc:	ldr	r2, [fp, #8]
     7e0:	add	r3, r2, r3
     7e4:	ldr	r3, [r3]
     7e8:	mov	r1, r3
     7ec:	ldr	r0, [fp, #16]
     7f0:	bl	0 <coda_hashtable_add_name>
     7f4:	mov	r3, r0
     7f8:	cmp	r3, #0
     7fc:	beq	864 <compare_arrays_as_records_sub+0x158>
     800:	ldr	r3, [fp, #-20]	; 0xffffffec
     804:	lsl	r3, r3, #2
     808:	ldr	r2, [fp, #8]
     80c:	add	r3, r2, r3
     810:	ldr	r3, [r3]
     814:	mov	r2, r3
     818:	ldr	r1, [pc, #1412]	; da4 <compare_arrays_as_records_sub+0x698>
     81c:	mvn	r0, #99	; 0x63
     820:	bl	0 <coda_set_error>
     824:	ldr	r3, [pc, #1388]	; d98 <compare_arrays_as_records_sub+0x68c>
     828:	ldr	r4, [r3]
     82c:	ldr	r3, [pc, #1384]	; d9c <compare_arrays_as_records_sub+0x690>
     830:	ldr	r5, [r3]
     834:	bl	0 <coda_get_errno>
     838:	mov	r3, r0
     83c:	ldr	r3, [r3]
     840:	mov	r0, r3
     844:	bl	0 <coda_errno_to_string>
     848:	mov	r3, r0
     84c:	mov	r2, r5
     850:	ldr	r1, [pc, #1352]	; da0 <compare_arrays_as_records_sub+0x694>
     854:	mov	r0, r4
     858:	bl	0 <fprintf>
     85c:	mvn	r3, #0
     860:	b	d8c <compare_arrays_as_records_sub+0x680>
     864:	ldr	r3, [fp, #-52]	; 0xffffffcc
     868:	sub	r2, r3, #1
     86c:	ldr	r3, [fp, #-20]	; 0xffffffec
     870:	cmp	r2, r3
     874:	ble	8a0 <compare_arrays_as_records_sub+0x194>
     878:	ldr	r0, [fp, #-40]	; 0xffffffd8
     87c:	bl	0 <coda_cursor_goto_next_array_element>
     880:	mov	r3, r0
     884:	cmp	r3, #0
     888:	beq	8a0 <compare_arrays_as_records_sub+0x194>
     88c:	mov	r1, #1
     890:	ldr	r0, [fp, #-40]	; 0xffffffd8
     894:	bl	34c <print_error_with_cursor>
     898:	mvn	r3, #0
     89c:	b	d8c <compare_arrays_as_records_sub+0x680>
     8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
     8a4:	add	r3, r3, #1
     8a8:	str	r3, [fp, #-20]	; 0xffffffec
     8ac:	ldr	r2, [fp, #-20]	; 0xffffffec
     8b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     8b4:	cmp	r2, r3
     8b8:	blt	768 <compare_arrays_as_records_sub+0x5c>
     8bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     8c0:	bl	0 <coda_cursor_goto_parent>
     8c4:	ldr	r3, [fp, #4]
     8c8:	cmp	r3, #0
     8cc:	ble	a60 <compare_arrays_as_records_sub+0x354>
     8d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     8d4:	bl	0 <coda_cursor_goto_first_array_element>
     8d8:	mov	r3, r0
     8dc:	cmp	r3, #0
     8e0:	beq	8f8 <compare_arrays_as_records_sub+0x1ec>
     8e4:	mov	r1, #2
     8e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     8ec:	bl	34c <print_error_with_cursor>
     8f0:	mvn	r3, #0
     8f4:	b	d8c <compare_arrays_as_records_sub+0x680>
     8f8:	mov	r3, #0
     8fc:	str	r3, [fp, #-24]	; 0xffffffe8
     900:	b	a48 <compare_arrays_as_records_sub+0x33c>
     904:	ldr	r3, [fp, #-24]	; 0xffffffe8
     908:	lsl	r3, r3, #2
     90c:	ldr	r2, [fp, #12]
     910:	add	r2, r2, r3
     914:	sub	r3, fp, #32
     918:	ldr	r1, [fp, #-44]	; 0xffffffd4
     91c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     920:	bl	0 <coda_expression_eval_string>
     924:	mov	r3, r0
     928:	cmp	r3, #0
     92c:	beq	970 <compare_arrays_as_records_sub+0x264>
     930:	ldr	r3, [pc, #1120]	; d98 <compare_arrays_as_records_sub+0x68c>
     934:	ldr	r4, [r3]
     938:	ldr	r3, [pc, #1116]	; d9c <compare_arrays_as_records_sub+0x690>
     93c:	ldr	r5, [r3, #4]
     940:	bl	0 <coda_get_errno>
     944:	mov	r3, r0
     948:	ldr	r3, [r3]
     94c:	mov	r0, r3
     950:	bl	0 <coda_errno_to_string>
     954:	mov	r3, r0
     958:	mov	r2, r5
     95c:	ldr	r1, [pc, #1084]	; da0 <compare_arrays_as_records_sub+0x694>
     960:	mov	r0, r4
     964:	bl	0 <fprintf>
     968:	mvn	r3, #0
     96c:	b	d8c <compare_arrays_as_records_sub+0x680>
     970:	ldr	r3, [fp, #-24]	; 0xffffffe8
     974:	lsl	r3, r3, #2
     978:	ldr	r2, [fp, #12]
     97c:	add	r3, r2, r3
     980:	ldr	r3, [r3]
     984:	mov	r1, r3
     988:	ldr	r0, [fp, #20]
     98c:	bl	0 <coda_hashtable_add_name>
     990:	mov	r3, r0
     994:	cmp	r3, #0
     998:	beq	a00 <compare_arrays_as_records_sub+0x2f4>
     99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9a0:	lsl	r3, r3, #2
     9a4:	ldr	r2, [fp, #12]
     9a8:	add	r3, r2, r3
     9ac:	ldr	r3, [r3]
     9b0:	mov	r2, r3
     9b4:	ldr	r1, [pc, #1000]	; da4 <compare_arrays_as_records_sub+0x698>
     9b8:	mvn	r0, #99	; 0x63
     9bc:	bl	0 <coda_set_error>
     9c0:	ldr	r3, [pc, #976]	; d98 <compare_arrays_as_records_sub+0x68c>
     9c4:	ldr	r4, [r3]
     9c8:	ldr	r3, [pc, #972]	; d9c <compare_arrays_as_records_sub+0x690>
     9cc:	ldr	r5, [r3, #4]
     9d0:	bl	0 <coda_get_errno>
     9d4:	mov	r3, r0
     9d8:	ldr	r3, [r3]
     9dc:	mov	r0, r3
     9e0:	bl	0 <coda_errno_to_string>
     9e4:	mov	r3, r0
     9e8:	mov	r2, r5
     9ec:	ldr	r1, [pc, #940]	; da0 <compare_arrays_as_records_sub+0x694>
     9f0:	mov	r0, r4
     9f4:	bl	0 <fprintf>
     9f8:	mvn	r3, #0
     9fc:	b	d8c <compare_arrays_as_records_sub+0x680>
     a00:	ldr	r3, [fp, #4]
     a04:	sub	r2, r3, #1
     a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a0c:	cmp	r2, r3
     a10:	ble	a3c <compare_arrays_as_records_sub+0x330>
     a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a18:	bl	0 <coda_cursor_goto_next_array_element>
     a1c:	mov	r3, r0
     a20:	cmp	r3, #0
     a24:	beq	a3c <compare_arrays_as_records_sub+0x330>
     a28:	mov	r1, #2
     a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a30:	bl	34c <print_error_with_cursor>
     a34:	mvn	r3, #0
     a38:	b	d8c <compare_arrays_as_records_sub+0x680>
     a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a40:	add	r3, r3, #1
     a44:	str	r3, [fp, #-24]	; 0xffffffe8
     a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a4c:	ldr	r3, [fp, #4]
     a50:	cmp	r2, r3
     a54:	blt	904 <compare_arrays_as_records_sub+0x1f8>
     a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
     a5c:	bl	0 <coda_cursor_goto_parent>
     a60:	ldr	r2, [fp, #-52]	; 0xffffffcc
     a64:	ldr	r3, [fp, #4]
     a68:	cmp	r2, r3
     a6c:	beq	acc <compare_arrays_as_records_sub+0x3c0>
     a70:	ldr	r0, [pc, #816]	; da8 <compare_arrays_as_records_sub+0x69c>
     a74:	bl	0 <printf>
     a78:	ldr	r1, [pc, #812]	; dac <compare_arrays_as_records_sub+0x6a0>
     a7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     a80:	bl	0 <coda_cursor_print_path>
     a84:	mov	r0, #10
     a88:	bl	0 <putchar>
     a8c:	ldr	r3, [pc, #796]	; db0 <compare_arrays_as_records_sub+0x6a4>
     a90:	ldr	r3, [r3]
     a94:	cmp	r3, #0
     a98:	beq	acc <compare_arrays_as_records_sub+0x3c0>
     a9c:	ldr	r3, [pc, #760]	; d9c <compare_arrays_as_records_sub+0x690>
     aa0:	ldr	r3, [r3]
     aa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
     aa8:	mov	r1, r3
     aac:	ldr	r0, [pc, #768]	; db4 <compare_arrays_as_records_sub+0x6a8>
     ab0:	bl	0 <printf>
     ab4:	ldr	r3, [pc, #736]	; d9c <compare_arrays_as_records_sub+0x690>
     ab8:	ldr	r3, [r3, #4]
     abc:	ldr	r2, [fp, #4]
     ac0:	mov	r1, r3
     ac4:	ldr	r0, [pc, #744]	; db4 <compare_arrays_as_records_sub+0x6a8>
     ac8:	bl	0 <printf>
     acc:	mov	r3, #1
     ad0:	str	r3, [fp, #-16]
     ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ad8:	cmp	r3, #0
     adc:	ble	b9c <compare_arrays_as_records_sub+0x490>
     ae0:	mov	r3, #0
     ae4:	str	r3, [fp, #-20]	; 0xffffffec
     ae8:	b	b8c <compare_arrays_as_records_sub+0x480>
     aec:	ldr	r3, [fp, #-20]	; 0xffffffec
     af0:	lsl	r3, r3, #2
     af4:	ldr	r2, [fp, #8]
     af8:	add	r3, r2, r3
     afc:	ldr	r3, [r3]
     b00:	mov	r1, r3
     b04:	ldr	r0, [fp, #20]
     b08:	bl	0 <coda_hashtable_get_index_from_name>
     b0c:	mov	r3, r0
     b10:	cmp	r3, #0
     b14:	bge	b80 <compare_arrays_as_records_sub+0x474>
     b18:	ldr	r3, [fp, #-16]
     b1c:	cmp	r3, #0
     b20:	beq	b48 <compare_arrays_as_records_sub+0x43c>
     b24:	ldr	r0, [pc, #652]	; db8 <compare_arrays_as_records_sub+0x6ac>
     b28:	bl	0 <printf>
     b2c:	ldr	r1, [pc, #632]	; dac <compare_arrays_as_records_sub+0x6a0>
     b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b34:	bl	0 <coda_cursor_print_path>
     b38:	mov	r0, #10
     b3c:	bl	0 <putchar>
     b40:	mov	r3, #0
     b44:	str	r3, [fp, #-16]
     b48:	ldr	r3, [pc, #608]	; db0 <compare_arrays_as_records_sub+0x6a4>
     b4c:	ldr	r3, [r3]
     b50:	cmp	r3, #0
     b54:	beq	b80 <compare_arrays_as_records_sub+0x474>
     b58:	ldr	r3, [pc, #572]	; d9c <compare_arrays_as_records_sub+0x690>
     b5c:	ldr	r1, [r3]
     b60:	ldr	r3, [fp, #-20]	; 0xffffffec
     b64:	lsl	r3, r3, #2
     b68:	ldr	r2, [fp, #8]
     b6c:	add	r3, r2, r3
     b70:	ldr	r3, [r3]
     b74:	mov	r2, r3
     b78:	ldr	r0, [pc, #572]	; dbc <compare_arrays_as_records_sub+0x6b0>
     b7c:	bl	0 <printf>
     b80:	ldr	r3, [fp, #-20]	; 0xffffffec
     b84:	add	r3, r3, #1
     b88:	str	r3, [fp, #-20]	; 0xffffffec
     b8c:	ldr	r2, [fp, #-20]	; 0xffffffec
     b90:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b94:	cmp	r2, r3
     b98:	blt	aec <compare_arrays_as_records_sub+0x3e0>
     b9c:	ldr	r3, [fp, #4]
     ba0:	cmp	r3, #0
     ba4:	ble	c64 <compare_arrays_as_records_sub+0x558>
     ba8:	mov	r3, #0
     bac:	str	r3, [fp, #-24]	; 0xffffffe8
     bb0:	b	c54 <compare_arrays_as_records_sub+0x548>
     bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bb8:	lsl	r3, r3, #2
     bbc:	ldr	r2, [fp, #12]
     bc0:	add	r3, r2, r3
     bc4:	ldr	r3, [r3]
     bc8:	mov	r1, r3
     bcc:	ldr	r0, [fp, #16]
     bd0:	bl	0 <coda_hashtable_get_index_from_name>
     bd4:	mov	r3, r0
     bd8:	cmp	r3, #0
     bdc:	bge	c48 <compare_arrays_as_records_sub+0x53c>
     be0:	ldr	r3, [fp, #-16]
     be4:	cmp	r3, #0
     be8:	beq	c10 <compare_arrays_as_records_sub+0x504>
     bec:	ldr	r0, [pc, #452]	; db8 <compare_arrays_as_records_sub+0x6ac>
     bf0:	bl	0 <printf>
     bf4:	ldr	r1, [pc, #432]	; dac <compare_arrays_as_records_sub+0x6a0>
     bf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     bfc:	bl	0 <coda_cursor_print_path>
     c00:	mov	r0, #10
     c04:	bl	0 <putchar>
     c08:	mov	r3, #0
     c0c:	str	r3, [fp, #-16]
     c10:	ldr	r3, [pc, #408]	; db0 <compare_arrays_as_records_sub+0x6a4>
     c14:	ldr	r3, [r3]
     c18:	cmp	r3, #0
     c1c:	beq	c48 <compare_arrays_as_records_sub+0x53c>
     c20:	ldr	r3, [pc, #372]	; d9c <compare_arrays_as_records_sub+0x690>
     c24:	ldr	r1, [r3, #4]
     c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c2c:	lsl	r3, r3, #2
     c30:	ldr	r2, [fp, #12]
     c34:	add	r3, r2, r3
     c38:	ldr	r3, [r3]
     c3c:	mov	r2, r3
     c40:	ldr	r0, [pc, #372]	; dbc <compare_arrays_as_records_sub+0x6b0>
     c44:	bl	0 <printf>
     c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c4c:	add	r3, r3, #1
     c50:	str	r3, [fp, #-24]	; 0xffffffe8
     c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
     c58:	ldr	r3, [fp, #4]
     c5c:	cmp	r2, r3
     c60:	blt	bb4 <compare_arrays_as_records_sub+0x4a8>
     c64:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c68:	cmp	r3, #0
     c6c:	ble	d88 <compare_arrays_as_records_sub+0x67c>
     c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c74:	bl	0 <coda_cursor_goto_first_array_element>
     c78:	mov	r3, r0
     c7c:	cmp	r3, #0
     c80:	beq	c98 <compare_arrays_as_records_sub+0x58c>
     c84:	mov	r1, #1
     c88:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c8c:	bl	34c <print_error_with_cursor>
     c90:	mvn	r3, #0
     c94:	b	d8c <compare_arrays_as_records_sub+0x680>
     c98:	mov	r3, #0
     c9c:	str	r3, [fp, #-20]	; 0xffffffec
     ca0:	b	d70 <compare_arrays_as_records_sub+0x664>
     ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ca8:	lsl	r3, r3, #2
     cac:	ldr	r2, [fp, #8]
     cb0:	add	r3, r2, r3
     cb4:	ldr	r3, [r3]
     cb8:	mov	r1, r3
     cbc:	ldr	r0, [fp, #20]
     cc0:	bl	0 <coda_hashtable_get_index_from_name>
     cc4:	str	r0, [fp, #-24]	; 0xffffffe8
     cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ccc:	cmp	r3, #0
     cd0:	blt	d28 <compare_arrays_as_records_sub+0x61c>
     cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     cdc:	bl	0 <coda_cursor_goto_array_element_by_index>
     ce0:	mov	r3, r0
     ce4:	cmp	r3, #0
     ce8:	beq	d00 <compare_arrays_as_records_sub+0x5f4>
     cec:	mov	r1, #2
     cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     cf4:	bl	34c <print_error_with_cursor>
     cf8:	mvn	r3, #0
     cfc:	b	d8c <compare_arrays_as_records_sub+0x680>
     d00:	ldr	r1, [fp, #-44]	; 0xffffffd4
     d04:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d08:	bl	27f0 <compare_data>
     d0c:	mov	r3, r0
     d10:	cmp	r3, #0
     d14:	beq	d20 <compare_arrays_as_records_sub+0x614>
     d18:	mvn	r3, #0
     d1c:	b	d8c <compare_arrays_as_records_sub+0x680>
     d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d24:	bl	0 <coda_cursor_goto_parent>
     d28:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d2c:	sub	r2, r3, #1
     d30:	ldr	r3, [fp, #-20]	; 0xffffffec
     d34:	cmp	r2, r3
     d38:	ble	d64 <compare_arrays_as_records_sub+0x658>
     d3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d40:	bl	0 <coda_cursor_goto_next_array_element>
     d44:	mov	r3, r0
     d48:	cmp	r3, #0
     d4c:	beq	d64 <compare_arrays_as_records_sub+0x658>
     d50:	mov	r1, #1
     d54:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d58:	bl	34c <print_error_with_cursor>
     d5c:	mvn	r3, #0
     d60:	b	d8c <compare_arrays_as_records_sub+0x680>
     d64:	ldr	r3, [fp, #-20]	; 0xffffffec
     d68:	add	r3, r3, #1
     d6c:	str	r3, [fp, #-20]	; 0xffffffec
     d70:	ldr	r2, [fp, #-20]	; 0xffffffec
     d74:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d78:	cmp	r2, r3
     d7c:	blt	ca4 <compare_arrays_as_records_sub+0x598>
     d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d84:	bl	0 <coda_cursor_goto_parent>
     d88:	mov	r3, #0
     d8c:	mov	r0, r3
     d90:	sub	sp, fp, #12
     d94:	pop	{r4, r5, fp, pc}
	...
     da0:	.word	0x00000764
     da4:	.word	0x000007f8
     da8:	.word	0x00000820
	...
     db4:	.word	0x00000848
     db8:	.word	0x00000850
     dbc:	.word	0x0000086c

00000dc0 <compare_arrays_as_records>:
     dc0:	push	{r4, fp, lr}
     dc4:	add	fp, sp, #8
     dc8:	sub	sp, sp, #84	; 0x54
     dcc:	str	r0, [fp, #-56]	; 0xffffffc8
     dd0:	str	r1, [fp, #-60]	; 0xffffffc4
     dd4:	str	r2, [fp, #-64]	; 0xffffffc0
     dd8:	mov	r3, #0
     ddc:	str	r3, [fp, #-40]	; 0xffffffd8
     de0:	mov	r3, #0
     de4:	str	r3, [fp, #-20]	; 0xffffffec
     de8:	mov	r3, #0
     dec:	str	r3, [fp, #-24]	; 0xffffffe8
     df0:	mov	r3, #0
     df4:	str	r3, [fp, #-28]	; 0xffffffe4
     df8:	mov	r3, #0
     dfc:	str	r3, [fp, #-32]	; 0xffffffe0
     e00:	sub	r3, fp, #44	; 0x2c
     e04:	mov	r1, r3
     e08:	ldr	r0, [fp, #-56]	; 0xffffffc8
     e0c:	bl	0 <coda_cursor_get_num_elements>
     e10:	mov	r3, r0
     e14:	cmp	r3, #0
     e18:	beq	e30 <compare_arrays_as_records+0x70>
     e1c:	mov	r1, #1
     e20:	ldr	r0, [fp, #-56]	; 0xffffffc8
     e24:	bl	34c <print_error_with_cursor>
     e28:	mvn	r3, #0
     e2c:	b	11fc <compare_arrays_as_records+0x43c>
     e30:	sub	r3, fp, #48	; 0x30
     e34:	mov	r1, r3
     e38:	ldr	r0, [fp, #-60]	; 0xffffffc4
     e3c:	bl	0 <coda_cursor_get_num_elements>
     e40:	mov	r3, r0
     e44:	cmp	r3, #0
     e48:	beq	e60 <compare_arrays_as_records+0xa0>
     e4c:	mov	r1, #2
     e50:	ldr	r0, [fp, #-60]	; 0xffffffc4
     e54:	bl	34c <print_error_with_cursor>
     e58:	mvn	r3, #0
     e5c:	b	11fc <compare_arrays_as_records+0x43c>
     e60:	sub	r3, fp, #40	; 0x28
     e64:	mov	r1, r3
     e68:	ldr	r0, [fp, #-64]	; 0xffffffc0
     e6c:	bl	0 <coda_expression_from_string>
     e70:	mov	r3, r0
     e74:	cmp	r3, #0
     e78:	beq	eb4 <compare_arrays_as_records+0xf4>
     e7c:	ldr	r3, [pc, #900]	; 1208 <compare_arrays_as_records+0x448>
     e80:	ldr	r4, [r3]
     e84:	bl	0 <coda_get_errno>
     e88:	mov	r3, r0
     e8c:	ldr	r3, [r3]
     e90:	mov	r0, r3
     e94:	bl	0 <coda_errno_to_string>
     e98:	mov	r3, r0
     e9c:	mov	r2, r3
     ea0:	ldr	r1, [pc, #868]	; 120c <compare_arrays_as_records+0x44c>
     ea4:	mov	r0, r4
     ea8:	bl	0 <fprintf>
     eac:	mvn	r3, #0
     eb0:	b	11fc <compare_arrays_as_records+0x43c>
     eb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     eb8:	lsl	r3, r3, #2
     ebc:	mov	r0, r3
     ec0:	bl	0 <malloc>
     ec4:	mov	r3, r0
     ec8:	str	r3, [fp, #-28]	; 0xffffffe4
     ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ed0:	cmp	r3, #0
     ed4:	bne	f18 <compare_arrays_as_records+0x158>
     ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     edc:	lsl	r2, r3, #2
     ee0:	ldr	r3, [pc, #808]	; 1210 <compare_arrays_as_records+0x450>
     ee4:	str	r3, [sp]
     ee8:	ldr	r3, [pc, #804]	; 1214 <compare_arrays_as_records+0x454>
     eec:	ldr	r1, [pc, #804]	; 1218 <compare_arrays_as_records+0x458>
     ef0:	mvn	r0, #0
     ef4:	bl	0 <coda_set_error>
     ef8:	mov	r1, #1
     efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
     f00:	bl	34c <print_error_with_cursor>
     f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
     f08:	mov	r0, r3
     f0c:	bl	0 <coda_expression_delete>
     f10:	mvn	r3, #0
     f14:	b	11fc <compare_arrays_as_records+0x43c>
     f18:	mov	r3, #0
     f1c:	str	r3, [fp, #-16]
     f20:	b	f48 <compare_arrays_as_records+0x188>
     f24:	ldr	r3, [fp, #-16]
     f28:	lsl	r3, r3, #2
     f2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     f30:	add	r3, r2, r3
     f34:	mov	r2, #0
     f38:	str	r2, [r3]
     f3c:	ldr	r3, [fp, #-16]
     f40:	add	r3, r3, #1
     f44:	str	r3, [fp, #-16]
     f48:	ldr	r3, [fp, #-44]	; 0xffffffd4
     f4c:	ldr	r2, [fp, #-16]
     f50:	cmp	r2, r3
     f54:	blt	f24 <compare_arrays_as_records+0x164>
     f58:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f5c:	lsl	r3, r3, #2
     f60:	mov	r0, r3
     f64:	bl	0 <malloc>
     f68:	mov	r3, r0
     f6c:	str	r3, [fp, #-32]	; 0xffffffe0
     f70:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f74:	cmp	r3, #0
     f78:	bne	fc4 <compare_arrays_as_records+0x204>
     f7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f80:	lsl	r2, r3, #2
     f84:	ldr	r3, [pc, #656]	; 121c <compare_arrays_as_records+0x45c>
     f88:	str	r3, [sp]
     f8c:	ldr	r3, [pc, #640]	; 1214 <compare_arrays_as_records+0x454>
     f90:	ldr	r1, [pc, #640]	; 1218 <compare_arrays_as_records+0x458>
     f94:	mvn	r0, #0
     f98:	bl	0 <coda_set_error>
     f9c:	mov	r1, #2
     fa0:	ldr	r0, [fp, #-60]	; 0xffffffc4
     fa4:	bl	34c <print_error_with_cursor>
     fa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     fac:	mov	r0, r3
     fb0:	bl	0 <coda_expression_delete>
     fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     fb8:	bl	0 <free>
     fbc:	mvn	r3, #0
     fc0:	b	11fc <compare_arrays_as_records+0x43c>
     fc4:	mov	r3, #0
     fc8:	str	r3, [fp, #-16]
     fcc:	b	ff4 <compare_arrays_as_records+0x234>
     fd0:	ldr	r3, [fp, #-16]
     fd4:	lsl	r3, r3, #2
     fd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     fdc:	add	r3, r2, r3
     fe0:	mov	r2, #0
     fe4:	str	r2, [r3]
     fe8:	ldr	r3, [fp, #-16]
     fec:	add	r3, r3, #1
     ff0:	str	r3, [fp, #-16]
     ff4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     ff8:	ldr	r2, [fp, #-16]
     ffc:	cmp	r2, r3
    1000:	blt	fd0 <compare_arrays_as_records+0x210>
    1004:	mov	r0, #1
    1008:	bl	0 <coda_hashtable_new>
    100c:	str	r0, [fp, #-20]	; 0xffffffec
    1010:	ldr	r3, [fp, #-20]	; 0xffffffec
    1014:	cmp	r3, #0
    1018:	bne	1060 <compare_arrays_as_records+0x2a0>
    101c:	ldr	r3, [pc, #508]	; 1220 <compare_arrays_as_records+0x460>
    1020:	ldr	r2, [pc, #492]	; 1214 <compare_arrays_as_records+0x454>
    1024:	ldr	r1, [pc, #504]	; 1224 <compare_arrays_as_records+0x464>
    1028:	mvn	r0, #0
    102c:	bl	0 <coda_set_error>
    1030:	mov	r1, #1
    1034:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1038:	bl	34c <print_error_with_cursor>
    103c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1040:	mov	r0, r3
    1044:	bl	0 <coda_expression_delete>
    1048:	ldr	r0, [fp, #-28]	; 0xffffffe4
    104c:	bl	0 <free>
    1050:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1054:	bl	0 <free>
    1058:	mvn	r3, #0
    105c:	b	11fc <compare_arrays_as_records+0x43c>
    1060:	mov	r0, #1
    1064:	bl	0 <coda_hashtable_new>
    1068:	str	r0, [fp, #-24]	; 0xffffffe8
    106c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1070:	cmp	r3, #0
    1074:	bne	10c4 <compare_arrays_as_records+0x304>
    1078:	mov	r3, #500	; 0x1f4
    107c:	ldr	r2, [pc, #400]	; 1214 <compare_arrays_as_records+0x454>
    1080:	ldr	r1, [pc, #412]	; 1224 <compare_arrays_as_records+0x464>
    1084:	mvn	r0, #0
    1088:	bl	0 <coda_set_error>
    108c:	mov	r1, #2
    1090:	ldr	r0, [fp, #-60]	; 0xffffffc4
    1094:	bl	34c <print_error_with_cursor>
    1098:	ldr	r3, [fp, #-40]	; 0xffffffd8
    109c:	mov	r0, r3
    10a0:	bl	0 <coda_expression_delete>
    10a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    10a8:	bl	0 <coda_hashtable_delete>
    10ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10b0:	bl	0 <free>
    10b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10b8:	bl	0 <free>
    10bc:	mvn	r3, #0
    10c0:	b	11fc <compare_arrays_as_records+0x43c>
    10c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    10c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    10d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10d4:	str	r2, [sp, #16]
    10d8:	ldr	r2, [fp, #-20]	; 0xffffffec
    10dc:	str	r2, [sp, #12]
    10e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    10e4:	str	r2, [sp, #8]
    10e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    10ec:	str	r2, [sp, #4]
    10f0:	str	r3, [sp]
    10f4:	mov	r3, r0
    10f8:	mov	r2, r1
    10fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1100:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1104:	bl	70c <compare_arrays_as_records_sub>
    1108:	str	r0, [fp, #-36]	; 0xffffffdc
    110c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1110:	mov	r0, r3
    1114:	bl	0 <coda_expression_delete>
    1118:	ldr	r0, [fp, #-20]	; 0xffffffec
    111c:	bl	0 <coda_hashtable_delete>
    1120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1124:	bl	0 <coda_hashtable_delete>
    1128:	mov	r3, #0
    112c:	str	r3, [fp, #-16]
    1130:	b	1178 <compare_arrays_as_records+0x3b8>
    1134:	ldr	r3, [fp, #-16]
    1138:	lsl	r3, r3, #2
    113c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1140:	add	r3, r2, r3
    1144:	ldr	r3, [r3]
    1148:	cmp	r3, #0
    114c:	beq	116c <compare_arrays_as_records+0x3ac>
    1150:	ldr	r3, [fp, #-16]
    1154:	lsl	r3, r3, #2
    1158:	ldr	r2, [fp, #-28]	; 0xffffffe4
    115c:	add	r3, r2, r3
    1160:	ldr	r3, [r3]
    1164:	mov	r0, r3
    1168:	bl	0 <coda_free>
    116c:	ldr	r3, [fp, #-16]
    1170:	add	r3, r3, #1
    1174:	str	r3, [fp, #-16]
    1178:	ldr	r3, [fp, #-44]	; 0xffffffd4
    117c:	ldr	r2, [fp, #-16]
    1180:	cmp	r2, r3
    1184:	blt	1134 <compare_arrays_as_records+0x374>
    1188:	ldr	r0, [fp, #-28]	; 0xffffffe4
    118c:	bl	0 <free>
    1190:	mov	r3, #0
    1194:	str	r3, [fp, #-16]
    1198:	b	11e0 <compare_arrays_as_records+0x420>
    119c:	ldr	r3, [fp, #-16]
    11a0:	lsl	r3, r3, #2
    11a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    11a8:	add	r3, r2, r3
    11ac:	ldr	r3, [r3]
    11b0:	cmp	r3, #0
    11b4:	beq	11d4 <compare_arrays_as_records+0x414>
    11b8:	ldr	r3, [fp, #-16]
    11bc:	lsl	r3, r3, #2
    11c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    11c4:	add	r3, r2, r3
    11c8:	ldr	r3, [r3]
    11cc:	mov	r0, r3
    11d0:	bl	0 <coda_free>
    11d4:	ldr	r3, [fp, #-16]
    11d8:	add	r3, r3, #1
    11dc:	str	r3, [fp, #-16]
    11e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    11e4:	ldr	r2, [fp, #-16]
    11e8:	cmp	r2, r3
    11ec:	blt	119c <compare_arrays_as_records+0x3dc>
    11f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    11f4:	bl	0 <free>
    11f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11fc:	mov	r0, r3
    1200:	sub	sp, fp, #8
    1204:	pop	{r4, fp, pc}
    1208:	.word	0x00000000
    120c:	.word	0x00000894
    1210:	.word	0x000001cd
    1214:	.word	0x00000774
    1218:	.word	0x000007c0
    121c:	.word	0x000001db
    1220:	.word	0x000001e9
    1224:	.word	0x000008a0

00001228 <compare_arrays>:
    1228:	push	{fp, lr}
    122c:	add	fp, sp, #4
    1230:	sub	sp, sp, #24
    1234:	str	r0, [fp, #-24]	; 0xffffffe8
    1238:	str	r1, [fp, #-28]	; 0xffffffe4
    123c:	ldr	r3, [pc, #596]	; 1498 <compare_arrays+0x270>
    1240:	ldr	r3, [r3, #12]
    1244:	sub	r2, fp, #12
    1248:	ldr	r1, [fp, #-24]	; 0xffffffe8
    124c:	mov	r0, r3
    1250:	bl	0 <coda_tree_node_get_item_for_cursor>
    1254:	mov	r3, r0
    1258:	cmp	r3, #0
    125c:	beq	1274 <compare_arrays+0x4c>
    1260:	mov	r1, #1
    1264:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1268:	bl	34c <print_error_with_cursor>
    126c:	mvn	r3, #0
    1270:	b	148c <compare_arrays+0x264>
    1274:	ldr	r3, [fp, #-12]
    1278:	cmp	r3, #0
    127c:	beq	129c <compare_arrays+0x74>
    1280:	ldr	r3, [fp, #-12]
    1284:	mov	r2, r3
    1288:	ldr	r1, [fp, #-28]	; 0xffffffe4
    128c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1290:	bl	dc0 <compare_arrays_as_records>
    1294:	mov	r3, r0
    1298:	b	148c <compare_arrays+0x264>
    129c:	sub	r3, fp, #16
    12a0:	mov	r1, r3
    12a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12a8:	bl	0 <coda_cursor_get_num_elements>
    12ac:	mov	r3, r0
    12b0:	cmp	r3, #0
    12b4:	beq	12cc <compare_arrays+0xa4>
    12b8:	mov	r1, #1
    12bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12c0:	bl	34c <print_error_with_cursor>
    12c4:	mvn	r3, #0
    12c8:	b	148c <compare_arrays+0x264>
    12cc:	sub	r3, fp, #20
    12d0:	mov	r1, r3
    12d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12d8:	bl	0 <coda_cursor_get_num_elements>
    12dc:	mov	r3, r0
    12e0:	cmp	r3, #0
    12e4:	beq	12fc <compare_arrays+0xd4>
    12e8:	mov	r1, #2
    12ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12f0:	bl	34c <print_error_with_cursor>
    12f4:	mvn	r3, #0
    12f8:	b	148c <compare_arrays+0x264>
    12fc:	ldr	r2, [fp, #-16]
    1300:	ldr	r3, [fp, #-20]	; 0xffffffec
    1304:	cmp	r2, r3
    1308:	beq	1370 <compare_arrays+0x148>
    130c:	ldr	r0, [pc, #392]	; 149c <compare_arrays+0x274>
    1310:	bl	0 <printf>
    1314:	ldr	r1, [pc, #388]	; 14a0 <compare_arrays+0x278>
    1318:	ldr	r0, [fp, #-24]	; 0xffffffe8
    131c:	bl	0 <coda_cursor_print_path>
    1320:	mov	r0, #10
    1324:	bl	0 <putchar>
    1328:	ldr	r3, [pc, #372]	; 14a4 <compare_arrays+0x27c>
    132c:	ldr	r3, [r3]
    1330:	cmp	r3, #0
    1334:	beq	1368 <compare_arrays+0x140>
    1338:	ldr	r3, [pc, #360]	; 14a8 <compare_arrays+0x280>
    133c:	ldr	r3, [r3]
    1340:	ldr	r2, [fp, #-16]
    1344:	mov	r1, r3
    1348:	ldr	r0, [pc, #348]	; 14ac <compare_arrays+0x284>
    134c:	bl	0 <printf>
    1350:	ldr	r3, [pc, #336]	; 14a8 <compare_arrays+0x280>
    1354:	ldr	r3, [r3, #4]
    1358:	ldr	r2, [fp, #-20]	; 0xffffffec
    135c:	mov	r1, r3
    1360:	ldr	r0, [pc, #324]	; 14ac <compare_arrays+0x284>
    1364:	bl	0 <printf>
    1368:	mov	r3, #0
    136c:	b	148c <compare_arrays+0x264>
    1370:	ldr	r3, [fp, #-16]
    1374:	cmp	r3, #0
    1378:	ble	1488 <compare_arrays+0x260>
    137c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1380:	bl	0 <coda_cursor_goto_first_array_element>
    1384:	mov	r3, r0
    1388:	cmp	r3, #0
    138c:	beq	13a4 <compare_arrays+0x17c>
    1390:	mov	r1, #1
    1394:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1398:	bl	34c <print_error_with_cursor>
    139c:	mvn	r3, #0
    13a0:	b	148c <compare_arrays+0x264>
    13a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13a8:	bl	0 <coda_cursor_goto_first_array_element>
    13ac:	mov	r3, r0
    13b0:	cmp	r3, #0
    13b4:	beq	13cc <compare_arrays+0x1a4>
    13b8:	mov	r1, #1
    13bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13c0:	bl	34c <print_error_with_cursor>
    13c4:	mvn	r3, #0
    13c8:	b	148c <compare_arrays+0x264>
    13cc:	mov	r3, #0
    13d0:	str	r3, [fp, #-8]
    13d4:	b	1468 <compare_arrays+0x240>
    13d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    13dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13e0:	bl	27f0 <compare_data>
    13e4:	mov	r3, r0
    13e8:	cmp	r3, #0
    13ec:	beq	13f8 <compare_arrays+0x1d0>
    13f0:	mvn	r3, #0
    13f4:	b	148c <compare_arrays+0x264>
    13f8:	ldr	r3, [fp, #-16]
    13fc:	sub	r2, r3, #1
    1400:	ldr	r3, [fp, #-8]
    1404:	cmp	r2, r3
    1408:	ble	145c <compare_arrays+0x234>
    140c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1410:	bl	0 <coda_cursor_goto_next_array_element>
    1414:	mov	r3, r0
    1418:	cmp	r3, #0
    141c:	beq	1434 <compare_arrays+0x20c>
    1420:	mov	r1, #1
    1424:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1428:	bl	34c <print_error_with_cursor>
    142c:	mvn	r3, #0
    1430:	b	148c <compare_arrays+0x264>
    1434:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1438:	bl	0 <coda_cursor_goto_next_array_element>
    143c:	mov	r3, r0
    1440:	cmp	r3, #0
    1444:	beq	145c <compare_arrays+0x234>
    1448:	mov	r1, #2
    144c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1450:	bl	34c <print_error_with_cursor>
    1454:	mvn	r3, #0
    1458:	b	148c <compare_arrays+0x264>
    145c:	ldr	r3, [fp, #-8]
    1460:	add	r3, r3, #1
    1464:	str	r3, [fp, #-8]
    1468:	ldr	r3, [fp, #-16]
    146c:	ldr	r2, [fp, #-8]
    1470:	cmp	r2, r3
    1474:	blt	13d8 <compare_arrays+0x1b0>
    1478:	ldr	r0, [fp, #-24]	; 0xffffffe8
    147c:	bl	0 <coda_cursor_goto_parent>
    1480:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1484:	bl	0 <coda_cursor_goto_parent>
    1488:	mov	r3, #0
    148c:	mov	r0, r3
    1490:	sub	sp, fp, #4
    1494:	pop	{fp, pc}
    1498:	.word	0x00000000
    149c:	.word	0x00000820
	...
    14ac:	.word	0x00000848

000014b0 <compare_records>:
    14b0:	push	{fp, lr}
    14b4:	add	fp, sp, #4
    14b8:	sub	sp, sp, #576	; 0x240
    14bc:	str	r0, [fp, #-576]	; 0xfffffdc0
    14c0:	str	r1, [fp, #-580]	; 0xfffffdbc
    14c4:	sub	r3, fp, #12
    14c8:	mov	r1, r3
    14cc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    14d0:	bl	0 <coda_cursor_get_type>
    14d4:	mov	r3, r0
    14d8:	cmp	r3, #0
    14dc:	beq	14f4 <compare_records+0x44>
    14e0:	mov	r1, #1
    14e4:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    14e8:	bl	34c <print_error_with_cursor>
    14ec:	mvn	r3, #0
    14f0:	b	1a08 <compare_records+0x558>
    14f4:	sub	r3, fp, #16
    14f8:	mov	r1, r3
    14fc:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1500:	bl	0 <coda_cursor_get_type>
    1504:	mov	r3, r0
    1508:	cmp	r3, #0
    150c:	beq	1524 <compare_records+0x74>
    1510:	mov	r1, #2
    1514:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1518:	bl	34c <print_error_with_cursor>
    151c:	mvn	r3, #0
    1520:	b	1a08 <compare_records+0x558>
    1524:	sub	r3, fp, #20
    1528:	mov	r1, r3
    152c:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1530:	bl	0 <coda_cursor_get_num_elements>
    1534:	mov	r3, r0
    1538:	cmp	r3, #0
    153c:	beq	1554 <compare_records+0xa4>
    1540:	mov	r1, #1
    1544:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1548:	bl	34c <print_error_with_cursor>
    154c:	mvn	r3, #0
    1550:	b	1a08 <compare_records+0x558>
    1554:	sub	r3, fp, #24
    1558:	mov	r1, r3
    155c:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1560:	bl	0 <coda_cursor_get_num_elements>
    1564:	mov	r3, r0
    1568:	cmp	r3, #0
    156c:	beq	1584 <compare_records+0xd4>
    1570:	mov	r1, #2
    1574:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1578:	bl	34c <print_error_with_cursor>
    157c:	mvn	r3, #0
    1580:	b	1a08 <compare_records+0x558>
    1584:	mov	r3, #1
    1588:	str	r3, [fp, #-8]
    158c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1590:	cmp	r3, #0
    1594:	ble	166c <compare_records+0x1bc>
    1598:	mov	r3, #0
    159c:	str	r3, [fp, #-28]	; 0xffffffe4
    15a0:	b	165c <compare_records+0x1ac>
    15a4:	ldr	r3, [fp, #-12]
    15a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    15ac:	sub	r2, fp, #36	; 0x24
    15b0:	mov	r0, r3
    15b4:	bl	0 <coda_type_get_record_field_name>
    15b8:	mov	r3, r0
    15bc:	cmp	r3, #0
    15c0:	beq	15d8 <compare_records+0x128>
    15c4:	mov	r1, #1
    15c8:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    15cc:	bl	34c <print_error_with_cursor>
    15d0:	mvn	r3, #0
    15d4:	b	1a08 <compare_records+0x558>
    15d8:	ldr	r3, [fp, #-16]
    15dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    15e0:	sub	r2, fp, #32
    15e4:	mov	r0, r3
    15e8:	bl	0 <coda_type_get_record_field_index_from_name>
    15ec:	mov	r3, r0
    15f0:	cmp	r3, #0
    15f4:	beq	1650 <compare_records+0x1a0>
    15f8:	ldr	r3, [fp, #-8]
    15fc:	cmp	r3, #0
    1600:	beq	1628 <compare_records+0x178>
    1604:	ldr	r0, [pc, #1032]	; 1a14 <compare_records+0x564>
    1608:	bl	0 <printf>
    160c:	ldr	r1, [pc, #1028]	; 1a18 <compare_records+0x568>
    1610:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1614:	bl	0 <coda_cursor_print_path>
    1618:	mov	r0, #10
    161c:	bl	0 <putchar>
    1620:	mov	r3, #0
    1624:	str	r3, [fp, #-8]
    1628:	ldr	r3, [pc, #1004]	; 1a1c <compare_records+0x56c>
    162c:	ldr	r3, [r3]
    1630:	cmp	r3, #0
    1634:	beq	1650 <compare_records+0x1a0>
    1638:	ldr	r3, [pc, #992]	; 1a20 <compare_records+0x570>
    163c:	ldr	r3, [r3]
    1640:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1644:	mov	r1, r3
    1648:	ldr	r0, [pc, #980]	; 1a24 <compare_records+0x574>
    164c:	bl	0 <printf>
    1650:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1654:	add	r3, r3, #1
    1658:	str	r3, [fp, #-28]	; 0xffffffe4
    165c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1660:	ldr	r3, [fp, #-20]	; 0xffffffec
    1664:	cmp	r2, r3
    1668:	blt	15a4 <compare_records+0xf4>
    166c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1670:	cmp	r3, #0
    1674:	ble	174c <compare_records+0x29c>
    1678:	mov	r3, #0
    167c:	str	r3, [fp, #-32]	; 0xffffffe0
    1680:	b	173c <compare_records+0x28c>
    1684:	ldr	r3, [fp, #-16]
    1688:	ldr	r1, [fp, #-32]	; 0xffffffe0
    168c:	sub	r2, fp, #40	; 0x28
    1690:	mov	r0, r3
    1694:	bl	0 <coda_type_get_record_field_name>
    1698:	mov	r3, r0
    169c:	cmp	r3, #0
    16a0:	beq	16b8 <compare_records+0x208>
    16a4:	mov	r1, #2
    16a8:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    16ac:	bl	34c <print_error_with_cursor>
    16b0:	mvn	r3, #0
    16b4:	b	1a08 <compare_records+0x558>
    16b8:	ldr	r3, [fp, #-12]
    16bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    16c0:	sub	r2, fp, #28
    16c4:	mov	r0, r3
    16c8:	bl	0 <coda_type_get_record_field_index_from_name>
    16cc:	mov	r3, r0
    16d0:	cmp	r3, #0
    16d4:	beq	1730 <compare_records+0x280>
    16d8:	ldr	r3, [fp, #-8]
    16dc:	cmp	r3, #0
    16e0:	beq	1708 <compare_records+0x258>
    16e4:	ldr	r0, [pc, #808]	; 1a14 <compare_records+0x564>
    16e8:	bl	0 <printf>
    16ec:	ldr	r1, [pc, #804]	; 1a18 <compare_records+0x568>
    16f0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    16f4:	bl	0 <coda_cursor_print_path>
    16f8:	mov	r0, #10
    16fc:	bl	0 <putchar>
    1700:	mov	r3, #0
    1704:	str	r3, [fp, #-8]
    1708:	ldr	r3, [pc, #780]	; 1a1c <compare_records+0x56c>
    170c:	ldr	r3, [r3]
    1710:	cmp	r3, #0
    1714:	beq	1730 <compare_records+0x280>
    1718:	ldr	r3, [pc, #768]	; 1a20 <compare_records+0x570>
    171c:	ldr	r3, [r3, #4]
    1720:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1724:	mov	r1, r3
    1728:	ldr	r0, [pc, #756]	; 1a24 <compare_records+0x574>
    172c:	bl	0 <printf>
    1730:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1734:	add	r3, r3, #1
    1738:	str	r3, [fp, #-32]	; 0xffffffe0
    173c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1740:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1744:	cmp	r2, r3
    1748:	blt	1684 <compare_records+0x1d4>
    174c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1750:	cmp	r3, #0
    1754:	ble	1a04 <compare_records+0x554>
    1758:	ldr	r2, [fp, #-576]	; 0xfffffdc0
    175c:	sub	r3, fp, #572	; 0x23c
    1760:	mov	r1, r2
    1764:	mov	r2, #520	; 0x208
    1768:	mov	r0, r3
    176c:	bl	0 <memcpy>
    1770:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1774:	bl	0 <coda_cursor_goto_first_record_field>
    1778:	mov	r3, r0
    177c:	cmp	r3, #0
    1780:	beq	1798 <compare_records+0x2e8>
    1784:	mov	r1, #1
    1788:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    178c:	bl	34c <print_error_with_cursor>
    1790:	mvn	r3, #0
    1794:	b	1a08 <compare_records+0x558>
    1798:	mov	r3, #0
    179c:	str	r3, [fp, #-28]	; 0xffffffe4
    17a0:	b	19ec <compare_records+0x53c>
    17a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    17a8:	sub	r2, fp, #48	; 0x30
    17ac:	sub	r3, fp, #572	; 0x23c
    17b0:	mov	r0, r3
    17b4:	bl	0 <coda_cursor_get_record_field_available_status>
    17b8:	mov	r3, r0
    17bc:	cmp	r3, #0
    17c0:	beq	17dc <compare_records+0x32c>
    17c4:	sub	r3, fp, #572	; 0x23c
    17c8:	mov	r1, #1
    17cc:	mov	r0, r3
    17d0:	bl	34c <print_error_with_cursor>
    17d4:	mvn	r3, #0
    17d8:	b	1a08 <compare_records+0x558>
    17dc:	ldr	r3, [fp, #-12]
    17e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    17e4:	sub	r2, fp, #44	; 0x2c
    17e8:	mov	r0, r3
    17ec:	bl	0 <coda_type_get_record_field_name>
    17f0:	mov	r3, r0
    17f4:	cmp	r3, #0
    17f8:	beq	1810 <compare_records+0x360>
    17fc:	mov	r1, #1
    1800:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1804:	bl	34c <print_error_with_cursor>
    1808:	mvn	r3, #0
    180c:	b	19e8 <compare_records+0x538>
    1810:	ldr	r3, [fp, #-16]
    1814:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1818:	sub	r2, fp, #32
    181c:	mov	r0, r3
    1820:	bl	0 <coda_type_get_record_field_index_from_name>
    1824:	mov	r3, r0
    1828:	cmp	r3, #0
    182c:	bne	199c <compare_records+0x4ec>
    1830:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1834:	sub	r2, fp, #52	; 0x34
    1838:	mov	r1, r3
    183c:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1840:	bl	0 <coda_cursor_get_record_field_available_status>
    1844:	mov	r3, r0
    1848:	cmp	r3, #0
    184c:	beq	1864 <compare_records+0x3b4>
    1850:	mov	r1, #2
    1854:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1858:	bl	34c <print_error_with_cursor>
    185c:	mvn	r3, #0
    1860:	b	19e8 <compare_records+0x538>
    1864:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1868:	cmp	r3, #0
    186c:	beq	1930 <compare_records+0x480>
    1870:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1874:	cmp	r3, #0
    1878:	beq	18d8 <compare_records+0x428>
    187c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1880:	mov	r1, r3
    1884:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    1888:	bl	0 <coda_cursor_goto_record_field_by_index>
    188c:	mov	r3, r0
    1890:	cmp	r3, #0
    1894:	beq	18ac <compare_records+0x3fc>
    1898:	mov	r1, #2
    189c:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    18a0:	bl	34c <print_error_with_cursor>
    18a4:	mvn	r3, #0
    18a8:	b	1994 <compare_records+0x4e4>
    18ac:	ldr	r1, [fp, #-580]	; 0xfffffdbc
    18b0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    18b4:	bl	27f0 <compare_data>
    18b8:	mov	r3, r0
    18bc:	cmp	r3, #0
    18c0:	beq	18cc <compare_records+0x41c>
    18c4:	mvn	r3, #0
    18c8:	b	1994 <compare_records+0x4e4>
    18cc:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    18d0:	bl	0 <coda_cursor_goto_parent>
    18d4:	b	199c <compare_records+0x4ec>
    18d8:	ldr	r0, [pc, #328]	; 1a28 <compare_records+0x578>
    18dc:	bl	0 <printf>
    18e0:	ldr	r1, [pc, #304]	; 1a18 <compare_records+0x568>
    18e4:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    18e8:	bl	0 <coda_cursor_print_path>
    18ec:	mov	r0, #10
    18f0:	bl	0 <putchar>
    18f4:	ldr	r3, [pc, #288]	; 1a1c <compare_records+0x56c>
    18f8:	ldr	r3, [r3]
    18fc:	cmp	r3, #0
    1900:	beq	199c <compare_records+0x4ec>
    1904:	ldr	r3, [pc, #276]	; 1a20 <compare_records+0x570>
    1908:	ldr	r3, [r3]
    190c:	mov	r1, r3
    1910:	ldr	r0, [pc, #276]	; 1a2c <compare_records+0x57c>
    1914:	bl	0 <printf>
    1918:	ldr	r3, [pc, #256]	; 1a20 <compare_records+0x570>
    191c:	ldr	r3, [r3, #4]
    1920:	mov	r1, r3
    1924:	ldr	r0, [pc, #260]	; 1a30 <compare_records+0x580>
    1928:	bl	0 <printf>
    192c:	b	199c <compare_records+0x4ec>
    1930:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1934:	cmp	r3, #0
    1938:	beq	199c <compare_records+0x4ec>
    193c:	ldr	r0, [pc, #228]	; 1a28 <compare_records+0x578>
    1940:	bl	0 <printf>
    1944:	ldr	r1, [pc, #204]	; 1a18 <compare_records+0x568>
    1948:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    194c:	bl	0 <coda_cursor_print_path>
    1950:	mov	r0, #10
    1954:	bl	0 <putchar>
    1958:	ldr	r3, [pc, #188]	; 1a1c <compare_records+0x56c>
    195c:	ldr	r3, [r3]
    1960:	cmp	r3, #0
    1964:	beq	199c <compare_records+0x4ec>
    1968:	ldr	r3, [pc, #176]	; 1a20 <compare_records+0x570>
    196c:	ldr	r3, [r3]
    1970:	mov	r1, r3
    1974:	ldr	r0, [pc, #180]	; 1a30 <compare_records+0x580>
    1978:	bl	0 <printf>
    197c:	ldr	r3, [pc, #156]	; 1a20 <compare_records+0x570>
    1980:	ldr	r3, [r3, #4]
    1984:	mov	r1, r3
    1988:	ldr	r0, [pc, #156]	; 1a2c <compare_records+0x57c>
    198c:	bl	0 <printf>
    1990:	b	199c <compare_records+0x4ec>
    1994:	nop			; (mov r0, r0)
    1998:	b	1a08 <compare_records+0x558>
    199c:	ldr	r3, [fp, #-20]	; 0xffffffec
    19a0:	sub	r2, r3, #1
    19a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19a8:	cmp	r2, r3
    19ac:	ble	19d8 <compare_records+0x528>
    19b0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    19b4:	bl	0 <coda_cursor_goto_next_record_field>
    19b8:	mov	r3, r0
    19bc:	cmp	r3, #0
    19c0:	beq	19d8 <compare_records+0x528>
    19c4:	mov	r1, #1
    19c8:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    19cc:	bl	34c <print_error_with_cursor>
    19d0:	mvn	r3, #0
    19d4:	b	19e8 <compare_records+0x538>
    19d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19dc:	add	r3, r3, #1
    19e0:	str	r3, [fp, #-28]	; 0xffffffe4
    19e4:	b	19ec <compare_records+0x53c>
    19e8:	b	1a08 <compare_records+0x558>
    19ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    19f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    19f4:	cmp	r2, r3
    19f8:	blt	17a4 <compare_records+0x2f4>
    19fc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    1a00:	bl	0 <coda_cursor_goto_parent>
    1a04:	mov	r3, #0
    1a08:	mov	r0, r3
    1a0c:	sub	sp, fp, #4
    1a10:	pop	{fp, pc}
    1a14:	.word	0x000008d4
	...
    1a24:	.word	0x000008ec
    1a28:	.word	0x00000900
    1a2c:	.word	0x0000091c
    1a30:	.word	0x0000092c

00001a34 <compare_numbers>:
    1a34:	push	{r4, fp, lr}
    1a38:	add	fp, sp, #8
    1a3c:	sub	sp, sp, #116	; 0x74
    1a40:	str	r0, [fp, #-120]	; 0xffffff88
    1a44:	str	r1, [fp, #-124]	; 0xffffff84
    1a48:	sub	r3, fp, #16
    1a4c:	mov	r1, r3
    1a50:	ldr	r0, [fp, #-120]	; 0xffffff88
    1a54:	bl	0 <coda_cursor_get_read_type>
    1a58:	mov	r3, r0
    1a5c:	cmp	r3, #0
    1a60:	beq	1a78 <compare_numbers+0x44>
    1a64:	mov	r1, #1
    1a68:	ldr	r0, [fp, #-120]	; 0xffffff88
    1a6c:	bl	34c <print_error_with_cursor>
    1a70:	mvn	r3, #0
    1a74:	b	1f80 <compare_numbers+0x54c>
    1a78:	sub	r3, fp, #20
    1a7c:	mov	r1, r3
    1a80:	ldr	r0, [fp, #-124]	; 0xffffff84
    1a84:	bl	0 <coda_cursor_get_read_type>
    1a88:	mov	r3, r0
    1a8c:	cmp	r3, #0
    1a90:	beq	1aa8 <compare_numbers+0x74>
    1a94:	mov	r1, #2
    1a98:	ldr	r0, [fp, #-124]	; 0xffffff84
    1a9c:	bl	34c <print_error_with_cursor>
    1aa0:	mvn	r3, #0
    1aa4:	b	1f80 <compare_numbers+0x54c>
    1aa8:	ldr	r2, [fp, #-16]
    1aac:	ldr	r3, [fp, #-20]	; 0xffffffec
    1ab0:	cmp	r2, r3
    1ab4:	beq	1b3c <compare_numbers+0x108>
    1ab8:	ldr	r0, [pc, #1228]	; 1f8c <compare_numbers+0x558>
    1abc:	bl	0 <printf>
    1ac0:	ldr	r1, [pc, #1224]	; 1f90 <compare_numbers+0x55c>
    1ac4:	ldr	r0, [fp, #-120]	; 0xffffff88
    1ac8:	bl	0 <coda_cursor_print_path>
    1acc:	mov	r0, #10
    1ad0:	bl	0 <putchar>
    1ad4:	ldr	r3, [pc, #1208]	; 1f94 <compare_numbers+0x560>
    1ad8:	ldr	r3, [r3]
    1adc:	cmp	r3, #0
    1ae0:	beq	1b34 <compare_numbers+0x100>
    1ae4:	ldr	r3, [pc, #1196]	; 1f98 <compare_numbers+0x564>
    1ae8:	ldr	r4, [r3]
    1aec:	ldr	r3, [fp, #-16]
    1af0:	mov	r0, r3
    1af4:	bl	0 <coda_type_get_native_type_name>
    1af8:	mov	r3, r0
    1afc:	mov	r2, r3
    1b00:	mov	r1, r4
    1b04:	ldr	r0, [pc, #1168]	; 1f9c <compare_numbers+0x568>
    1b08:	bl	0 <printf>
    1b0c:	ldr	r3, [pc, #1156]	; 1f98 <compare_numbers+0x564>
    1b10:	ldr	r4, [r3, #4]
    1b14:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b18:	mov	r0, r3
    1b1c:	bl	0 <coda_type_get_native_type_name>
    1b20:	mov	r3, r0
    1b24:	mov	r2, r3
    1b28:	mov	r1, r4
    1b2c:	ldr	r0, [pc, #1128]	; 1f9c <compare_numbers+0x568>
    1b30:	bl	0 <printf>
    1b34:	mov	r3, #0
    1b38:	b	1f80 <compare_numbers+0x54c>
    1b3c:	ldr	r3, [fp, #-16]
    1b40:	cmp	r3, #9
    1b44:	ldrls	pc, [pc, r3, lsl #2]
    1b48:	b	1f54 <compare_numbers+0x520>
    1b4c:	.word	0x00001b74
    1b50:	.word	0x00001cbc
    1b54:	.word	0x00001b74
    1b58:	.word	0x00001cbc
    1b5c:	.word	0x00001b74
    1b60:	.word	0x00001cbc
    1b64:	.word	0x00001b74
    1b68:	.word	0x00001cbc
    1b6c:	.word	0x00001e04
    1b70:	.word	0x00001e04
    1b74:	sub	r3, fp, #28
    1b78:	mov	r1, r3
    1b7c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1b80:	bl	0 <coda_cursor_read_int64>
    1b84:	mov	r3, r0
    1b88:	cmp	r3, #0
    1b8c:	beq	1bcc <compare_numbers+0x198>
    1b90:	mov	r1, #1
    1b94:	ldr	r0, [fp, #-120]	; 0xffffff88
    1b98:	bl	34c <print_error_with_cursor>
    1b9c:	bl	0 <coda_get_errno>
    1ba0:	mov	r3, r0
    1ba4:	ldr	r3, [r3]
    1ba8:	cmn	r3, #300	; 0x12c
    1bac:	beq	1f68 <compare_numbers+0x534>
    1bb0:	bl	0 <coda_get_errno>
    1bb4:	mov	r3, r0
    1bb8:	ldr	r3, [r3]
    1bbc:	cmn	r3, #103	; 0x67
    1bc0:	beq	1f68 <compare_numbers+0x534>
    1bc4:	mvn	r3, #0
    1bc8:	b	1f80 <compare_numbers+0x54c>
    1bcc:	sub	r3, fp, #36	; 0x24
    1bd0:	mov	r1, r3
    1bd4:	ldr	r0, [fp, #-124]	; 0xffffff84
    1bd8:	bl	0 <coda_cursor_read_int64>
    1bdc:	mov	r3, r0
    1be0:	cmp	r3, #0
    1be4:	beq	1c24 <compare_numbers+0x1f0>
    1be8:	mov	r1, #2
    1bec:	ldr	r0, [fp, #-124]	; 0xffffff84
    1bf0:	bl	34c <print_error_with_cursor>
    1bf4:	bl	0 <coda_get_errno>
    1bf8:	mov	r3, r0
    1bfc:	ldr	r3, [r3]
    1c00:	cmn	r3, #300	; 0x12c
    1c04:	beq	1f68 <compare_numbers+0x534>
    1c08:	bl	0 <coda_get_errno>
    1c0c:	mov	r3, r0
    1c10:	ldr	r3, [r3]
    1c14:	cmn	r3, #103	; 0x67
    1c18:	beq	1f68 <compare_numbers+0x534>
    1c1c:	mvn	r3, #0
    1c20:	b	1f80 <compare_numbers+0x54c>
    1c24:	ldrd	r0, [fp, #-28]	; 0xffffffe4
    1c28:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    1c2c:	cmp	r1, r3
    1c30:	cmpeq	r0, r2
    1c34:	beq	1f68 <compare_numbers+0x534>
    1c38:	ldr	r0, [pc, #864]	; 1fa0 <compare_numbers+0x56c>
    1c3c:	bl	0 <printf>
    1c40:	ldr	r1, [pc, #840]	; 1f90 <compare_numbers+0x55c>
    1c44:	ldr	r0, [fp, #-120]	; 0xffffff88
    1c48:	bl	0 <coda_cursor_print_path>
    1c4c:	mov	r0, #10
    1c50:	bl	0 <putchar>
    1c54:	ldr	r3, [pc, #824]	; 1f94 <compare_numbers+0x560>
    1c58:	ldr	r3, [r3]
    1c5c:	cmp	r3, #0
    1c60:	beq	1cb4 <compare_numbers+0x280>
    1c64:	ldrd	r0, [fp, #-28]	; 0xffffffe4
    1c68:	sub	r3, fp, #60	; 0x3c
    1c6c:	mov	r2, r3
    1c70:	bl	0 <coda_str64>
    1c74:	ldr	r3, [pc, #796]	; 1f98 <compare_numbers+0x564>
    1c78:	ldr	r3, [r3]
    1c7c:	sub	r2, fp, #60	; 0x3c
    1c80:	mov	r1, r3
    1c84:	ldr	r0, [pc, #784]	; 1f9c <compare_numbers+0x568>
    1c88:	bl	0 <printf>
    1c8c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    1c90:	sub	r3, fp, #60	; 0x3c
    1c94:	mov	r2, r3
    1c98:	bl	0 <coda_str64>
    1c9c:	ldr	r3, [pc, #756]	; 1f98 <compare_numbers+0x564>
    1ca0:	ldr	r3, [r3, #4]
    1ca4:	sub	r2, fp, #60	; 0x3c
    1ca8:	mov	r1, r3
    1cac:	ldr	r0, [pc, #744]	; 1f9c <compare_numbers+0x568>
    1cb0:	bl	0 <printf>
    1cb4:	mov	r3, #0
    1cb8:	b	1f80 <compare_numbers+0x54c>
    1cbc:	sub	r3, fp, #68	; 0x44
    1cc0:	mov	r1, r3
    1cc4:	ldr	r0, [fp, #-120]	; 0xffffff88
    1cc8:	bl	0 <coda_cursor_read_uint64>
    1ccc:	mov	r3, r0
    1cd0:	cmp	r3, #0
    1cd4:	beq	1d14 <compare_numbers+0x2e0>
    1cd8:	mov	r1, #1
    1cdc:	ldr	r0, [fp, #-120]	; 0xffffff88
    1ce0:	bl	34c <print_error_with_cursor>
    1ce4:	bl	0 <coda_get_errno>
    1ce8:	mov	r3, r0
    1cec:	ldr	r3, [r3]
    1cf0:	cmn	r3, #300	; 0x12c
    1cf4:	beq	1f70 <compare_numbers+0x53c>
    1cf8:	bl	0 <coda_get_errno>
    1cfc:	mov	r3, r0
    1d00:	ldr	r3, [r3]
    1d04:	cmn	r3, #103	; 0x67
    1d08:	beq	1f70 <compare_numbers+0x53c>
    1d0c:	mvn	r3, #0
    1d10:	b	1f80 <compare_numbers+0x54c>
    1d14:	sub	r3, fp, #76	; 0x4c
    1d18:	mov	r1, r3
    1d1c:	ldr	r0, [fp, #-124]	; 0xffffff84
    1d20:	bl	0 <coda_cursor_read_uint64>
    1d24:	mov	r3, r0
    1d28:	cmp	r3, #0
    1d2c:	beq	1d6c <compare_numbers+0x338>
    1d30:	mov	r1, #2
    1d34:	ldr	r0, [fp, #-124]	; 0xffffff84
    1d38:	bl	34c <print_error_with_cursor>
    1d3c:	bl	0 <coda_get_errno>
    1d40:	mov	r3, r0
    1d44:	ldr	r3, [r3]
    1d48:	cmn	r3, #300	; 0x12c
    1d4c:	beq	1f70 <compare_numbers+0x53c>
    1d50:	bl	0 <coda_get_errno>
    1d54:	mov	r3, r0
    1d58:	ldr	r3, [r3]
    1d5c:	cmn	r3, #103	; 0x67
    1d60:	beq	1f70 <compare_numbers+0x53c>
    1d64:	mvn	r3, #0
    1d68:	b	1f80 <compare_numbers+0x54c>
    1d6c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    1d70:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    1d74:	cmp	r1, r3
    1d78:	cmpeq	r0, r2
    1d7c:	beq	1f70 <compare_numbers+0x53c>
    1d80:	ldr	r0, [pc, #536]	; 1fa0 <compare_numbers+0x56c>
    1d84:	bl	0 <printf>
    1d88:	ldr	r1, [pc, #512]	; 1f90 <compare_numbers+0x55c>
    1d8c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1d90:	bl	0 <coda_cursor_print_path>
    1d94:	mov	r0, #10
    1d98:	bl	0 <putchar>
    1d9c:	ldr	r3, [pc, #496]	; 1f94 <compare_numbers+0x560>
    1da0:	ldr	r3, [r3]
    1da4:	cmp	r3, #0
    1da8:	beq	1dfc <compare_numbers+0x3c8>
    1dac:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    1db0:	sub	r3, fp, #100	; 0x64
    1db4:	mov	r2, r3
    1db8:	bl	0 <coda_str64u>
    1dbc:	ldr	r3, [pc, #468]	; 1f98 <compare_numbers+0x564>
    1dc0:	ldr	r3, [r3]
    1dc4:	sub	r2, fp, #100	; 0x64
    1dc8:	mov	r1, r3
    1dcc:	ldr	r0, [pc, #456]	; 1f9c <compare_numbers+0x568>
    1dd0:	bl	0 <printf>
    1dd4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    1dd8:	sub	r3, fp, #100	; 0x64
    1ddc:	mov	r2, r3
    1de0:	bl	0 <coda_str64u>
    1de4:	ldr	r3, [pc, #428]	; 1f98 <compare_numbers+0x564>
    1de8:	ldr	r3, [r3, #4]
    1dec:	sub	r2, fp, #100	; 0x64
    1df0:	mov	r1, r3
    1df4:	ldr	r0, [pc, #416]	; 1f9c <compare_numbers+0x568>
    1df8:	bl	0 <printf>
    1dfc:	mov	r3, #0
    1e00:	b	1f80 <compare_numbers+0x54c>
    1e04:	sub	r3, fp, #108	; 0x6c
    1e08:	mov	r1, r3
    1e0c:	ldr	r0, [fp, #-120]	; 0xffffff88
    1e10:	bl	0 <coda_cursor_read_double>
    1e14:	mov	r3, r0
    1e18:	cmp	r3, #0
    1e1c:	beq	1e5c <compare_numbers+0x428>
    1e20:	mov	r1, #1
    1e24:	ldr	r0, [fp, #-120]	; 0xffffff88
    1e28:	bl	34c <print_error_with_cursor>
    1e2c:	bl	0 <coda_get_errno>
    1e30:	mov	r3, r0
    1e34:	ldr	r3, [r3]
    1e38:	cmn	r3, #300	; 0x12c
    1e3c:	beq	1f78 <compare_numbers+0x544>
    1e40:	bl	0 <coda_get_errno>
    1e44:	mov	r3, r0
    1e48:	ldr	r3, [r3]
    1e4c:	cmn	r3, #103	; 0x67
    1e50:	beq	1f78 <compare_numbers+0x544>
    1e54:	mvn	r3, #0
    1e58:	b	1f80 <compare_numbers+0x54c>
    1e5c:	sub	r3, fp, #116	; 0x74
    1e60:	mov	r1, r3
    1e64:	ldr	r0, [fp, #-124]	; 0xffffff84
    1e68:	bl	0 <coda_cursor_read_double>
    1e6c:	mov	r3, r0
    1e70:	cmp	r3, #0
    1e74:	beq	1eb4 <compare_numbers+0x480>
    1e78:	mov	r1, #2
    1e7c:	ldr	r0, [fp, #-124]	; 0xffffff84
    1e80:	bl	34c <print_error_with_cursor>
    1e84:	bl	0 <coda_get_errno>
    1e88:	mov	r3, r0
    1e8c:	ldr	r3, [r3]
    1e90:	cmn	r3, #300	; 0x12c
    1e94:	beq	1f78 <compare_numbers+0x544>
    1e98:	bl	0 <coda_get_errno>
    1e9c:	mov	r3, r0
    1ea0:	ldr	r3, [r3]
    1ea4:	cmn	r3, #103	; 0x67
    1ea8:	beq	1f78 <compare_numbers+0x544>
    1eac:	mvn	r3, #0
    1eb0:	b	1f80 <compare_numbers+0x54c>
    1eb4:	vldr	d6, [fp, #-108]	; 0xffffff94
    1eb8:	vldr	d7, [fp, #-116]	; 0xffffff8c
    1ebc:	vcmp.f64	d6, d7
    1ec0:	vmrs	APSR_nzcv, fpscr
    1ec4:	beq	1f78 <compare_numbers+0x544>
    1ec8:	vldr	d7, [fp, #-108]	; 0xffffff94
    1ecc:	vmov.f64	d0, d7
    1ed0:	bl	0 <coda_isNaN>
    1ed4:	mov	r3, r0
    1ed8:	cmp	r3, #0
    1edc:	beq	1ef8 <compare_numbers+0x4c4>
    1ee0:	vldr	d7, [fp, #-116]	; 0xffffff8c
    1ee4:	vmov.f64	d0, d7
    1ee8:	bl	0 <coda_isNaN>
    1eec:	mov	r3, r0
    1ef0:	cmp	r3, #0
    1ef4:	bne	1f78 <compare_numbers+0x544>
    1ef8:	ldr	r0, [pc, #160]	; 1fa0 <compare_numbers+0x56c>
    1efc:	bl	0 <printf>
    1f00:	ldr	r1, [pc, #136]	; 1f90 <compare_numbers+0x55c>
    1f04:	ldr	r0, [fp, #-120]	; 0xffffff88
    1f08:	bl	0 <coda_cursor_print_path>
    1f0c:	mov	r0, #10
    1f10:	bl	0 <putchar>
    1f14:	ldr	r3, [pc, #120]	; 1f94 <compare_numbers+0x560>
    1f18:	ldr	r3, [r3]
    1f1c:	cmp	r3, #0
    1f20:	beq	1f4c <compare_numbers+0x518>
    1f24:	ldr	r3, [pc, #108]	; 1f98 <compare_numbers+0x564>
    1f28:	ldr	r1, [r3]
    1f2c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    1f30:	ldr	r0, [pc, #108]	; 1fa4 <compare_numbers+0x570>
    1f34:	bl	0 <printf>
    1f38:	ldr	r3, [pc, #88]	; 1f98 <compare_numbers+0x564>
    1f3c:	ldr	r1, [r3, #4]
    1f40:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    1f44:	ldr	r0, [pc, #88]	; 1fa4 <compare_numbers+0x570>
    1f48:	bl	0 <printf>
    1f4c:	mov	r3, #0
    1f50:	b	1f80 <compare_numbers+0x54c>
    1f54:	ldr	r3, [pc, #76]	; 1fa8 <compare_numbers+0x574>
    1f58:	ldr	r2, [pc, #76]	; 1fac <compare_numbers+0x578>
    1f5c:	ldr	r1, [pc, #76]	; 1fb0 <compare_numbers+0x57c>
    1f60:	ldr	r0, [pc, #76]	; 1fb4 <compare_numbers+0x580>
    1f64:	bl	0 <__assert_fail>
    1f68:	nop			; (mov r0, r0)
    1f6c:	b	1f7c <compare_numbers+0x548>
    1f70:	nop			; (mov r0, r0)
    1f74:	b	1f7c <compare_numbers+0x548>
    1f78:	nop			; (mov r0, r0)
    1f7c:	mov	r3, #0
    1f80:	mov	r0, r3
    1f84:	sub	sp, fp, #8
    1f88:	pop	{r4, fp, pc}
    1f8c:	.word	0x00000940
	...
    1f9c:	.word	0x00000958
    1fa0:	.word	0x00000960
    1fa4:	.word	0x00000974
    1fa8:	.word	0x00000aa8
    1fac:	.word	0x000003b6
    1fb0:	.word	0x00000774
    1fb4:	.word	0x00000980

00001fb8 <compare_strings>:
    1fb8:	push	{fp, lr}
    1fbc:	add	fp, sp, #4
    1fc0:	sub	sp, sp, #32
    1fc4:	str	r0, [fp, #-24]	; 0xffffffe8
    1fc8:	str	r1, [fp, #-28]	; 0xffffffe4
    1fcc:	sub	r3, fp, #16
    1fd0:	mov	r1, r3
    1fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fd8:	bl	0 <coda_cursor_get_string_length>
    1fdc:	mov	r3, r0
    1fe0:	cmp	r3, #0
    1fe4:	beq	1ffc <compare_strings+0x44>
    1fe8:	mov	r1, #1
    1fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ff0:	bl	34c <print_error_with_cursor>
    1ff4:	mvn	r3, #0
    1ff8:	b	225c <compare_strings+0x2a4>
    1ffc:	sub	r3, fp, #20
    2000:	mov	r1, r3
    2004:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2008:	bl	0 <coda_cursor_get_string_length>
    200c:	mov	r3, r0
    2010:	cmp	r3, #0
    2014:	beq	202c <compare_strings+0x74>
    2018:	mov	r1, #2
    201c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2020:	bl	34c <print_error_with_cursor>
    2024:	mvn	r3, #0
    2028:	b	225c <compare_strings+0x2a4>
    202c:	ldr	r3, [fp, #-16]
    2030:	add	r3, r3, #1
    2034:	mov	r0, r3
    2038:	bl	0 <malloc>
    203c:	mov	r3, r0
    2040:	str	r3, [fp, #-8]
    2044:	ldr	r3, [fp, #-8]
    2048:	cmp	r3, #0
    204c:	bne	2080 <compare_strings+0xc8>
    2050:	ldr	r2, [fp, #-16]
    2054:	ldr	r3, [pc, #524]	; 2268 <compare_strings+0x2b0>
    2058:	str	r3, [sp]
    205c:	ldr	r3, [pc, #520]	; 226c <compare_strings+0x2b4>
    2060:	ldr	r1, [pc, #520]	; 2270 <compare_strings+0x2b8>
    2064:	mvn	r0, #0
    2068:	bl	0 <coda_set_error>
    206c:	mov	r1, #1
    2070:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2074:	bl	34c <print_error_with_cursor>
    2078:	mvn	r3, #0
    207c:	b	225c <compare_strings+0x2a4>
    2080:	ldr	r3, [fp, #-20]	; 0xffffffec
    2084:	add	r3, r3, #1
    2088:	mov	r0, r3
    208c:	bl	0 <malloc>
    2090:	mov	r3, r0
    2094:	str	r3, [fp, #-12]
    2098:	ldr	r3, [fp, #-12]
    209c:	cmp	r3, #0
    20a0:	bne	20dc <compare_strings+0x124>
    20a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    20a8:	ldr	r3, [pc, #452]	; 2274 <compare_strings+0x2bc>
    20ac:	str	r3, [sp]
    20b0:	ldr	r3, [pc, #436]	; 226c <compare_strings+0x2b4>
    20b4:	ldr	r1, [pc, #436]	; 2270 <compare_strings+0x2b8>
    20b8:	mvn	r0, #0
    20bc:	bl	0 <coda_set_error>
    20c0:	mov	r1, #2
    20c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    20c8:	bl	34c <print_error_with_cursor>
    20cc:	ldr	r0, [fp, #-8]
    20d0:	bl	0 <free>
    20d4:	mvn	r3, #0
    20d8:	b	225c <compare_strings+0x2a4>
    20dc:	ldr	r3, [fp, #-16]
    20e0:	add	r3, r3, #1
    20e4:	mov	r2, r3
    20e8:	ldr	r1, [fp, #-8]
    20ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    20f0:	bl	0 <coda_cursor_read_string>
    20f4:	mov	r3, r0
    20f8:	cmp	r3, #0
    20fc:	beq	214c <compare_strings+0x194>
    2100:	mov	r1, #1
    2104:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2108:	bl	34c <print_error_with_cursor>
    210c:	bl	0 <coda_get_errno>
    2110:	mov	r3, r0
    2114:	ldr	r3, [r3]
    2118:	cmn	r3, #300	; 0x12c
    211c:	beq	2248 <compare_strings+0x290>
    2120:	bl	0 <coda_get_errno>
    2124:	mov	r3, r0
    2128:	ldr	r3, [r3]
    212c:	cmn	r3, #103	; 0x67
    2130:	beq	2248 <compare_strings+0x290>
    2134:	ldr	r0, [fp, #-8]
    2138:	bl	0 <free>
    213c:	ldr	r0, [fp, #-12]
    2140:	bl	0 <free>
    2144:	mvn	r3, #0
    2148:	b	225c <compare_strings+0x2a4>
    214c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2150:	add	r3, r3, #1
    2154:	mov	r2, r3
    2158:	ldr	r1, [fp, #-12]
    215c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2160:	bl	0 <coda_cursor_read_string>
    2164:	mov	r3, r0
    2168:	cmp	r3, #0
    216c:	beq	21bc <compare_strings+0x204>
    2170:	mov	r1, #2
    2174:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2178:	bl	34c <print_error_with_cursor>
    217c:	bl	0 <coda_get_errno>
    2180:	mov	r3, r0
    2184:	ldr	r3, [r3]
    2188:	cmn	r3, #300	; 0x12c
    218c:	beq	2248 <compare_strings+0x290>
    2190:	bl	0 <coda_get_errno>
    2194:	mov	r3, r0
    2198:	ldr	r3, [r3]
    219c:	cmn	r3, #103	; 0x67
    21a0:	beq	2248 <compare_strings+0x290>
    21a4:	ldr	r0, [fp, #-8]
    21a8:	bl	0 <free>
    21ac:	ldr	r0, [fp, #-12]
    21b0:	bl	0 <free>
    21b4:	mvn	r3, #0
    21b8:	b	225c <compare_strings+0x2a4>
    21bc:	ldr	r2, [fp, #-16]
    21c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    21c4:	cmp	r2, r3
    21c8:	bne	21ec <compare_strings+0x234>
    21cc:	ldr	r3, [fp, #-16]
    21d0:	mov	r2, r3
    21d4:	ldr	r1, [fp, #-12]
    21d8:	ldr	r0, [fp, #-8]
    21dc:	bl	0 <memcmp>
    21e0:	mov	r3, r0
    21e4:	cmp	r3, #0
    21e8:	beq	2248 <compare_strings+0x290>
    21ec:	ldr	r0, [pc, #132]	; 2278 <compare_strings+0x2c0>
    21f0:	bl	0 <printf>
    21f4:	ldr	r1, [pc, #128]	; 227c <compare_strings+0x2c4>
    21f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21fc:	bl	0 <coda_cursor_print_path>
    2200:	mov	r0, #10
    2204:	bl	0 <putchar>
    2208:	ldr	r3, [pc, #112]	; 2280 <compare_strings+0x2c8>
    220c:	ldr	r3, [r3]
    2210:	cmp	r3, #0
    2214:	beq	2248 <compare_strings+0x290>
    2218:	ldr	r3, [pc, #100]	; 2284 <compare_strings+0x2cc>
    221c:	ldr	r3, [r3]
    2220:	ldr	r2, [fp, #-8]
    2224:	mov	r1, r3
    2228:	ldr	r0, [pc, #88]	; 2288 <compare_strings+0x2d0>
    222c:	bl	0 <printf>
    2230:	ldr	r3, [pc, #76]	; 2284 <compare_strings+0x2cc>
    2234:	ldr	r3, [r3, #4]
    2238:	ldr	r2, [fp, #-12]
    223c:	mov	r1, r3
    2240:	ldr	r0, [pc, #64]	; 2288 <compare_strings+0x2d0>
    2244:	bl	0 <printf>
    2248:	ldr	r0, [fp, #-8]
    224c:	bl	0 <free>
    2250:	ldr	r0, [fp, #-12]
    2254:	bl	0 <free>
    2258:	mov	r3, #0
    225c:	mov	r0, r3
    2260:	sub	sp, fp, #4
    2264:	pop	{fp, pc}
    2268:	.word	0x000003d2
    226c:	.word	0x00000774
    2270:	.word	0x000007c0
    2274:	.word	0x000003da
    2278:	.word	0x00000984
	...
    2288:	.word	0x00000958

0000228c <compare_bytes>:
    228c:	push	{r4, r5, r6, r7, fp, lr}
    2290:	add	fp, sp, #20
    2294:	sub	sp, sp, #80	; 0x50
    2298:	str	r0, [fp, #-88]	; 0xffffffa8
    229c:	str	r1, [fp, #-92]	; 0xffffffa4
    22a0:	sub	r3, fp, #52	; 0x34
    22a4:	mov	r1, r3
    22a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    22ac:	bl	0 <coda_cursor_get_bit_size>
    22b0:	mov	r3, r0
    22b4:	cmp	r3, #0
    22b8:	beq	22d0 <compare_bytes+0x44>
    22bc:	mov	r1, #1
    22c0:	ldr	r0, [fp, #-88]	; 0xffffffa8
    22c4:	bl	34c <print_error_with_cursor>
    22c8:	mvn	r3, #0
    22cc:	b	26a0 <compare_bytes+0x414>
    22d0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    22d4:	lsr	r6, r2, #3
    22d8:	orr	r6, r6, r3, lsl #29
    22dc:	asr	r7, r3, #3
    22e0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    22e4:	mov	r0, #7
    22e8:	mov	r1, #0
    22ec:	and	r2, r2, r0
    22f0:	and	r3, r3, r1
    22f4:	orrs	r3, r2, r3
    22f8:	beq	2308 <compare_bytes+0x7c>
    22fc:	mov	r2, #1
    2300:	mov	r3, #0
    2304:	b	2310 <compare_bytes+0x84>
    2308:	mov	r2, #0
    230c:	mov	r3, #0
    2310:	adds	r2, r2, r6
    2314:	adc	r3, r3, r7
    2318:	strd	r2, [fp, #-28]	; 0xffffffe4
    231c:	sub	r3, fp, #60	; 0x3c
    2320:	mov	r1, r3
    2324:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2328:	bl	0 <coda_cursor_get_bit_size>
    232c:	mov	r3, r0
    2330:	cmp	r3, #0
    2334:	beq	234c <compare_bytes+0xc0>
    2338:	mov	r1, #2
    233c:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2340:	bl	34c <print_error_with_cursor>
    2344:	mvn	r3, #0
    2348:	b	26a0 <compare_bytes+0x414>
    234c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2350:	lsr	r4, r2, #3
    2354:	orr	r4, r4, r3, lsl #29
    2358:	asr	r5, r3, #3
    235c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2360:	mov	r0, #7
    2364:	mov	r1, #0
    2368:	and	r2, r2, r0
    236c:	and	r3, r3, r1
    2370:	orrs	r3, r2, r3
    2374:	beq	2384 <compare_bytes+0xf8>
    2378:	mov	r2, #1
    237c:	mov	r3, #0
    2380:	b	238c <compare_bytes+0x100>
    2384:	mov	r2, #0
    2388:	mov	r3, #0
    238c:	adds	r2, r2, r4
    2390:	adc	r3, r3, r5
    2394:	strd	r2, [fp, #-36]	; 0xffffffdc
    2398:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    239c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    23a0:	cmp	r1, r3
    23a4:	cmpeq	r0, r2
    23a8:	beq	2430 <compare_bytes+0x1a4>
    23ac:	ldr	r0, [pc, #760]	; 26ac <compare_bytes+0x420>
    23b0:	bl	0 <printf>
    23b4:	ldr	r1, [pc, #756]	; 26b0 <compare_bytes+0x424>
    23b8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    23bc:	bl	0 <coda_cursor_print_path>
    23c0:	mov	r0, #10
    23c4:	bl	0 <putchar>
    23c8:	ldr	r3, [pc, #740]	; 26b4 <compare_bytes+0x428>
    23cc:	ldr	r3, [r3]
    23d0:	cmp	r3, #0
    23d4:	beq	2428 <compare_bytes+0x19c>
    23d8:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    23dc:	sub	r3, fp, #84	; 0x54
    23e0:	mov	r2, r3
    23e4:	bl	0 <coda_str64>
    23e8:	ldr	r3, [pc, #712]	; 26b8 <compare_bytes+0x42c>
    23ec:	ldr	r3, [r3]
    23f0:	sub	r2, fp, #84	; 0x54
    23f4:	mov	r1, r3
    23f8:	ldr	r0, [pc, #700]	; 26bc <compare_bytes+0x430>
    23fc:	bl	0 <printf>
    2400:	ldrd	r0, [fp, #-60]	; 0xffffffc4
    2404:	sub	r3, fp, #84	; 0x54
    2408:	mov	r2, r3
    240c:	bl	0 <coda_str64>
    2410:	ldr	r3, [pc, #672]	; 26b8 <compare_bytes+0x42c>
    2414:	ldr	r3, [r3, #4]
    2418:	sub	r2, fp, #84	; 0x54
    241c:	mov	r1, r3
    2420:	ldr	r0, [pc, #660]	; 26bc <compare_bytes+0x430>
    2424:	bl	0 <printf>
    2428:	mov	r3, #0
    242c:	b	26a0 <compare_bytes+0x414>
    2430:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2434:	cmp	r2, #1
    2438:	sbcs	r3, r3, #0
    243c:	blt	269c <compare_bytes+0x410>
    2440:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2444:	mov	r0, r3
    2448:	bl	0 <malloc>
    244c:	mov	r3, r0
    2450:	str	r3, [fp, #-40]	; 0xffffffd8
    2454:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2458:	cmp	r3, #0
    245c:	bne	2490 <compare_bytes+0x204>
    2460:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2464:	mov	r3, #1072	; 0x430
    2468:	str	r3, [sp]
    246c:	ldr	r3, [pc, #588]	; 26c0 <compare_bytes+0x434>
    2470:	ldr	r1, [pc, #588]	; 26c4 <compare_bytes+0x438>
    2474:	mvn	r0, #0
    2478:	bl	0 <coda_set_error>
    247c:	mov	r1, #1
    2480:	ldr	r0, [fp, #-88]	; 0xffffffa8
    2484:	bl	34c <print_error_with_cursor>
    2488:	mvn	r3, #0
    248c:	b	26a0 <compare_bytes+0x414>
    2490:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2494:	mov	r0, r3
    2498:	bl	0 <malloc>
    249c:	mov	r3, r0
    24a0:	str	r3, [fp, #-44]	; 0xffffffd4
    24a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    24a8:	cmp	r3, #0
    24ac:	bne	24e8 <compare_bytes+0x25c>
    24b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    24b4:	ldr	r3, [pc, #524]	; 26c8 <compare_bytes+0x43c>
    24b8:	str	r3, [sp]
    24bc:	ldr	r3, [pc, #508]	; 26c0 <compare_bytes+0x434>
    24c0:	ldr	r1, [pc, #508]	; 26c4 <compare_bytes+0x438>
    24c4:	mvn	r0, #0
    24c8:	bl	0 <coda_set_error>
    24cc:	mov	r1, #2
    24d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
    24d4:	bl	34c <print_error_with_cursor>
    24d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    24dc:	bl	0 <free>
    24e0:	mvn	r3, #0
    24e4:	b	26a0 <compare_bytes+0x414>
    24e8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    24ec:	strd	r2, [sp]
    24f0:	mov	r2, #0
    24f4:	mov	r3, #0
    24f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    24fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
    2500:	bl	0 <coda_cursor_read_bits>
    2504:	mov	r3, r0
    2508:	cmp	r3, #0
    250c:	beq	255c <compare_bytes+0x2d0>
    2510:	mov	r1, #1
    2514:	ldr	r0, [fp, #-88]	; 0xffffffa8
    2518:	bl	34c <print_error_with_cursor>
    251c:	bl	0 <coda_get_errno>
    2520:	mov	r3, r0
    2524:	ldr	r3, [r3]
    2528:	cmn	r3, #300	; 0x12c
    252c:	beq	268c <compare_bytes+0x400>
    2530:	bl	0 <coda_get_errno>
    2534:	mov	r3, r0
    2538:	ldr	r3, [r3]
    253c:	cmn	r3, #103	; 0x67
    2540:	beq	268c <compare_bytes+0x400>
    2544:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2548:	bl	0 <free>
    254c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2550:	bl	0 <free>
    2554:	mvn	r3, #0
    2558:	b	26a0 <compare_bytes+0x414>
    255c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    2560:	strd	r2, [sp]
    2564:	mov	r2, #0
    2568:	mov	r3, #0
    256c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2570:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2574:	bl	0 <coda_cursor_read_bits>
    2578:	mov	r3, r0
    257c:	cmp	r3, #0
    2580:	beq	25d0 <compare_bytes+0x344>
    2584:	mov	r1, #2
    2588:	ldr	r0, [fp, #-92]	; 0xffffffa4
    258c:	bl	34c <print_error_with_cursor>
    2590:	bl	0 <coda_get_errno>
    2594:	mov	r3, r0
    2598:	ldr	r3, [r3]
    259c:	cmn	r3, #300	; 0x12c
    25a0:	beq	268c <compare_bytes+0x400>
    25a4:	bl	0 <coda_get_errno>
    25a8:	mov	r3, r0
    25ac:	ldr	r3, [r3]
    25b0:	cmn	r3, #103	; 0x67
    25b4:	beq	268c <compare_bytes+0x400>
    25b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    25bc:	bl	0 <free>
    25c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    25c4:	bl	0 <free>
    25c8:	mvn	r3, #0
    25cc:	b	26a0 <compare_bytes+0x414>
    25d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    25d4:	mov	r2, r3
    25d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    25dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    25e0:	bl	0 <memcmp>
    25e4:	mov	r3, r0
    25e8:	cmp	r3, #0
    25ec:	beq	268c <compare_bytes+0x400>
    25f0:	ldr	r0, [pc, #212]	; 26cc <compare_bytes+0x440>
    25f4:	bl	0 <printf>
    25f8:	ldr	r1, [pc, #176]	; 26b0 <compare_bytes+0x424>
    25fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
    2600:	bl	0 <coda_cursor_print_path>
    2604:	mov	r0, #10
    2608:	bl	0 <putchar>
    260c:	ldr	r3, [pc, #160]	; 26b4 <compare_bytes+0x428>
    2610:	ldr	r3, [r3]
    2614:	cmp	r3, #0
    2618:	beq	268c <compare_bytes+0x400>
    261c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    2620:	mov	r0, #256	; 0x100
    2624:	mov	r1, #0
    2628:	cmp	r0, r2
    262c:	sbcs	r3, r1, r3
    2630:	blt	268c <compare_bytes+0x400>
    2634:	ldr	r3, [pc, #124]	; 26b8 <compare_bytes+0x42c>
    2638:	ldr	r3, [r3]
    263c:	mov	r1, r3
    2640:	ldr	r0, [pc, #136]	; 26d0 <compare_bytes+0x444>
    2644:	bl	0 <printf>
    2648:	ldr	r3, [fp, #-28]	; 0xffffffe4
    264c:	mov	r1, r3
    2650:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2654:	bl	1e0 <print_escaped>
    2658:	mov	r0, #10
    265c:	bl	0 <putchar>
    2660:	ldr	r3, [pc, #80]	; 26b8 <compare_bytes+0x42c>
    2664:	ldr	r3, [r3, #4]
    2668:	mov	r1, r3
    266c:	ldr	r0, [pc, #92]	; 26d0 <compare_bytes+0x444>
    2670:	bl	0 <printf>
    2674:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2678:	mov	r1, r3
    267c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2680:	bl	1e0 <print_escaped>
    2684:	mov	r0, #10
    2688:	bl	0 <putchar>
    268c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2690:	bl	0 <free>
    2694:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2698:	bl	0 <free>
    269c:	mov	r3, #0
    26a0:	mov	r0, r3
    26a4:	sub	sp, fp, #20
    26a8:	pop	{r4, r5, r6, r7, fp, pc}
    26ac:	.word	0x000009a0
	...
    26bc:	.word	0x000009b8
    26c0:	.word	0x00000774
    26c4:	.word	0x000007c0
    26c8:	.word	0x00000438
    26cc:	.word	0x000009c4
    26d0:	.word	0x000009d8

000026d4 <compare_attributes>:
    26d4:	push	{fp, lr}
    26d8:	add	fp, sp, #4
    26dc:	sub	sp, sp, #16
    26e0:	str	r0, [fp, #-16]
    26e4:	str	r1, [fp, #-20]	; 0xffffffec
    26e8:	sub	r3, fp, #8
    26ec:	mov	r1, r3
    26f0:	ldr	r0, [fp, #-16]
    26f4:	bl	0 <coda_cursor_has_attributes>
    26f8:	mov	r3, r0
    26fc:	cmp	r3, #0
    2700:	beq	2718 <compare_attributes+0x44>
    2704:	mov	r1, #1
    2708:	ldr	r0, [fp, #-16]
    270c:	bl	34c <print_error_with_cursor>
    2710:	mvn	r3, #0
    2714:	b	27e4 <compare_attributes+0x110>
    2718:	sub	r3, fp, #12
    271c:	mov	r1, r3
    2720:	ldr	r0, [fp, #-20]	; 0xffffffec
    2724:	bl	0 <coda_cursor_has_attributes>
    2728:	mov	r3, r0
    272c:	cmp	r3, #0
    2730:	beq	2748 <compare_attributes+0x74>
    2734:	mov	r1, #2
    2738:	ldr	r0, [fp, #-20]	; 0xffffffec
    273c:	bl	34c <print_error_with_cursor>
    2740:	mvn	r3, #0
    2744:	b	27e4 <compare_attributes+0x110>
    2748:	ldr	r3, [fp, #-8]
    274c:	cmp	r3, #0
    2750:	bne	2760 <compare_attributes+0x8c>
    2754:	ldr	r3, [fp, #-12]
    2758:	cmp	r3, #0
    275c:	beq	27e0 <compare_attributes+0x10c>
    2760:	ldr	r0, [fp, #-16]
    2764:	bl	0 <coda_cursor_goto_attributes>
    2768:	mov	r3, r0
    276c:	cmp	r3, #0
    2770:	beq	2788 <compare_attributes+0xb4>
    2774:	mov	r1, #1
    2778:	ldr	r0, [fp, #-16]
    277c:	bl	34c <print_error_with_cursor>
    2780:	mvn	r3, #0
    2784:	b	27e4 <compare_attributes+0x110>
    2788:	ldr	r0, [fp, #-20]	; 0xffffffec
    278c:	bl	0 <coda_cursor_goto_attributes>
    2790:	mov	r3, r0
    2794:	cmp	r3, #0
    2798:	beq	27b0 <compare_attributes+0xdc>
    279c:	mov	r1, #2
    27a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    27a4:	bl	34c <print_error_with_cursor>
    27a8:	mvn	r3, #0
    27ac:	b	27e4 <compare_attributes+0x110>
    27b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27b4:	ldr	r0, [fp, #-16]
    27b8:	bl	27f0 <compare_data>
    27bc:	mov	r3, r0
    27c0:	cmp	r3, #0
    27c4:	beq	27d0 <compare_attributes+0xfc>
    27c8:	mvn	r3, #0
    27cc:	b	27e4 <compare_attributes+0x110>
    27d0:	ldr	r0, [fp, #-16]
    27d4:	bl	0 <coda_cursor_goto_parent>
    27d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    27dc:	bl	0 <coda_cursor_goto_parent>
    27e0:	mov	r3, #0
    27e4:	mov	r0, r3
    27e8:	sub	sp, fp, #4
    27ec:	pop	{fp, pc}

000027f0 <compare_data>:
    27f0:	push	{r4, fp, lr}
    27f4:	add	fp, sp, #8
    27f8:	sub	sp, sp, #28
    27fc:	str	r0, [fp, #-32]	; 0xffffffe0
    2800:	str	r1, [fp, #-36]	; 0xffffffdc
    2804:	sub	r3, fp, #16
    2808:	mov	r1, r3
    280c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2810:	bl	0 <coda_cursor_get_type_class>
    2814:	mov	r3, r0
    2818:	cmp	r3, #0
    281c:	beq	2834 <compare_data+0x44>
    2820:	mov	r1, #1
    2824:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2828:	bl	34c <print_error_with_cursor>
    282c:	mvn	r3, #0
    2830:	b	2b78 <compare_data+0x388>
    2834:	sub	r3, fp, #20
    2838:	mov	r1, r3
    283c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2840:	bl	0 <coda_cursor_get_type_class>
    2844:	mov	r3, r0
    2848:	cmp	r3, #0
    284c:	beq	2864 <compare_data+0x74>
    2850:	mov	r1, #2
    2854:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2858:	bl	34c <print_error_with_cursor>
    285c:	mvn	r3, #0
    2860:	b	2b78 <compare_data+0x388>
    2864:	ldr	r2, [fp, #-16]
    2868:	ldr	r3, [fp, #-20]	; 0xffffffec
    286c:	cmp	r2, r3
    2870:	beq	28f8 <compare_data+0x108>
    2874:	ldr	r0, [pc, #776]	; 2b84 <compare_data+0x394>
    2878:	bl	0 <printf>
    287c:	ldr	r1, [pc, #772]	; 2b88 <compare_data+0x398>
    2880:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2884:	bl	0 <coda_cursor_print_path>
    2888:	mov	r0, #10
    288c:	bl	0 <putchar>
    2890:	ldr	r3, [pc, #756]	; 2b8c <compare_data+0x39c>
    2894:	ldr	r3, [r3]
    2898:	cmp	r3, #0
    289c:	beq	28f0 <compare_data+0x100>
    28a0:	ldr	r3, [pc, #744]	; 2b90 <compare_data+0x3a0>
    28a4:	ldr	r4, [r3]
    28a8:	ldr	r3, [fp, #-16]
    28ac:	mov	r0, r3
    28b0:	bl	0 <coda_type_get_class_name>
    28b4:	mov	r3, r0
    28b8:	mov	r2, r3
    28bc:	mov	r1, r4
    28c0:	ldr	r0, [pc, #716]	; 2b94 <compare_data+0x3a4>
    28c4:	bl	0 <printf>
    28c8:	ldr	r3, [pc, #704]	; 2b90 <compare_data+0x3a0>
    28cc:	ldr	r4, [r3, #4]
    28d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    28d4:	mov	r0, r3
    28d8:	bl	0 <coda_type_get_class_name>
    28dc:	mov	r3, r0
    28e0:	mov	r2, r3
    28e4:	mov	r1, r4
    28e8:	ldr	r0, [pc, #676]	; 2b94 <compare_data+0x3a4>
    28ec:	bl	0 <printf>
    28f0:	mov	r3, #0
    28f4:	b	2b78 <compare_data+0x388>
    28f8:	ldr	r3, [fp, #-16]
    28fc:	cmp	r3, #6
    2900:	ldrls	pc, [pc, r3, lsl #2]
    2904:	b	2b54 <compare_data+0x364>
    2908:	.word	0x00002944
    290c:	.word	0x00002924
    2910:	.word	0x00002964
    2914:	.word	0x00002964
    2918:	.word	0x00002984
    291c:	.word	0x000029a4
    2920:	.word	0x000029c4
    2924:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2928:	ldr	r0, [fp, #-32]	; 0xffffffe0
    292c:	bl	1228 <compare_arrays>
    2930:	mov	r3, r0
    2934:	cmp	r3, #0
    2938:	beq	2b28 <compare_data+0x338>
    293c:	mvn	r3, #0
    2940:	b	2b78 <compare_data+0x388>
    2944:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2948:	ldr	r0, [fp, #-32]	; 0xffffffe0
    294c:	bl	14b0 <compare_records>
    2950:	mov	r3, r0
    2954:	cmp	r3, #0
    2958:	beq	2b30 <compare_data+0x340>
    295c:	mvn	r3, #0
    2960:	b	2b78 <compare_data+0x388>
    2964:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2968:	ldr	r0, [fp, #-32]	; 0xffffffe0
    296c:	bl	1a34 <compare_numbers>
    2970:	mov	r3, r0
    2974:	cmp	r3, #0
    2978:	beq	2b38 <compare_data+0x348>
    297c:	mvn	r3, #0
    2980:	b	2b78 <compare_data+0x388>
    2984:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2988:	ldr	r0, [fp, #-32]	; 0xffffffe0
    298c:	bl	1fb8 <compare_strings>
    2990:	mov	r3, r0
    2994:	cmp	r3, #0
    2998:	beq	2b40 <compare_data+0x350>
    299c:	mvn	r3, #0
    29a0:	b	2b78 <compare_data+0x388>
    29a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    29a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    29ac:	bl	228c <compare_bytes>
    29b0:	mov	r3, r0
    29b4:	cmp	r3, #0
    29b8:	beq	2b48 <compare_data+0x358>
    29bc:	mvn	r3, #0
    29c0:	b	2b78 <compare_data+0x388>
    29c4:	sub	r3, fp, #24
    29c8:	mov	r1, r3
    29cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    29d0:	bl	0 <coda_cursor_get_special_type>
    29d4:	mov	r3, r0
    29d8:	cmp	r3, #0
    29dc:	beq	29f4 <compare_data+0x204>
    29e0:	mov	r1, #1
    29e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    29e8:	bl	34c <print_error_with_cursor>
    29ec:	mvn	r3, #0
    29f0:	b	2b78 <compare_data+0x388>
    29f4:	sub	r3, fp, #28
    29f8:	mov	r1, r3
    29fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2a00:	bl	0 <coda_cursor_get_special_type>
    2a04:	mov	r3, r0
    2a08:	cmp	r3, #0
    2a0c:	beq	2a24 <compare_data+0x234>
    2a10:	mov	r1, #2
    2a14:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2a18:	bl	34c <print_error_with_cursor>
    2a1c:	mvn	r3, #0
    2a20:	b	2b78 <compare_data+0x388>
    2a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a2c:	cmp	r2, r3
    2a30:	beq	2ab8 <compare_data+0x2c8>
    2a34:	ldr	r0, [pc, #348]	; 2b98 <compare_data+0x3a8>
    2a38:	bl	0 <printf>
    2a3c:	ldr	r1, [pc, #324]	; 2b88 <compare_data+0x398>
    2a40:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2a44:	bl	0 <coda_cursor_print_path>
    2a48:	mov	r0, #10
    2a4c:	bl	0 <putchar>
    2a50:	ldr	r3, [pc, #308]	; 2b8c <compare_data+0x39c>
    2a54:	ldr	r3, [r3]
    2a58:	cmp	r3, #0
    2a5c:	beq	2ab0 <compare_data+0x2c0>
    2a60:	ldr	r3, [pc, #296]	; 2b90 <compare_data+0x3a0>
    2a64:	ldr	r4, [r3]
    2a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a6c:	mov	r0, r3
    2a70:	bl	0 <coda_type_get_special_type_name>
    2a74:	mov	r3, r0
    2a78:	mov	r2, r3
    2a7c:	mov	r1, r4
    2a80:	ldr	r0, [pc, #268]	; 2b94 <compare_data+0x3a4>
    2a84:	bl	0 <printf>
    2a88:	ldr	r3, [pc, #256]	; 2b90 <compare_data+0x3a0>
    2a8c:	ldr	r4, [r3, #4]
    2a90:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a94:	mov	r0, r3
    2a98:	bl	0 <coda_type_get_special_type_name>
    2a9c:	mov	r3, r0
    2aa0:	mov	r2, r3
    2aa4:	mov	r1, r4
    2aa8:	ldr	r0, [pc, #228]	; 2b94 <compare_data+0x3a4>
    2aac:	bl	0 <printf>
    2ab0:	mov	r3, #0
    2ab4:	b	2b78 <compare_data+0x388>
    2ab8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2abc:	bl	0 <coda_cursor_use_base_type_of_special_type>
    2ac0:	mov	r3, r0
    2ac4:	cmp	r3, #0
    2ac8:	beq	2ae0 <compare_data+0x2f0>
    2acc:	mov	r1, #1
    2ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2ad4:	bl	34c <print_error_with_cursor>
    2ad8:	mvn	r3, #0
    2adc:	b	2b78 <compare_data+0x388>
    2ae0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2ae4:	bl	0 <coda_cursor_use_base_type_of_special_type>
    2ae8:	mov	r3, r0
    2aec:	cmp	r3, #0
    2af0:	beq	2b08 <compare_data+0x318>
    2af4:	mov	r1, #2
    2af8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2afc:	bl	34c <print_error_with_cursor>
    2b00:	mvn	r3, #0
    2b04:	b	2b78 <compare_data+0x388>
    2b08:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2b10:	bl	27f0 <compare_data>
    2b14:	mov	r3, r0
    2b18:	cmp	r3, #0
    2b1c:	beq	2b50 <compare_data+0x360>
    2b20:	mvn	r3, #0
    2b24:	b	2b78 <compare_data+0x388>
    2b28:	nop			; (mov r0, r0)
    2b2c:	b	2b54 <compare_data+0x364>
    2b30:	nop			; (mov r0, r0)
    2b34:	b	2b54 <compare_data+0x364>
    2b38:	nop			; (mov r0, r0)
    2b3c:	b	2b54 <compare_data+0x364>
    2b40:	nop			; (mov r0, r0)
    2b44:	b	2b54 <compare_data+0x364>
    2b48:	nop			; (mov r0, r0)
    2b4c:	b	2b54 <compare_data+0x364>
    2b50:	nop			; (mov r0, r0)
    2b54:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2b5c:	bl	26d4 <compare_attributes>
    2b60:	mov	r3, r0
    2b64:	cmp	r3, #0
    2b68:	beq	2b74 <compare_data+0x384>
    2b6c:	mvn	r3, #0
    2b70:	b	2b78 <compare_data+0x388>
    2b74:	mov	r3, #0
    2b78:	mov	r0, r3
    2b7c:	sub	sp, fp, #8
    2b80:	pop	{r4, fp, pc}
    2b84:	.word	0x000009dc
	...
    2b94:	.word	0x00000958
    2b98:	.word	0x000009f0

00002b9c <compare_files>:
    2b9c:	push	{r4, r5, fp, lr}
    2ba0:	add	fp, sp, #12
    2ba4:	sub	sp, sp, #1072	; 0x430
    2ba8:	str	r0, [fp, #-1072]	; 0xfffffbd0
    2bac:	str	r1, [fp, #-1076]	; 0xfffffbcc
    2bb0:	str	r2, [fp, #-1080]	; 0xfffffbc8
    2bb4:	sub	r3, fp, #20
    2bb8:	mov	r1, r3
    2bbc:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    2bc0:	bl	0 <coda_open>
    2bc4:	str	r0, [fp, #-16]
    2bc8:	ldr	r3, [fp, #-16]
    2bcc:	cmp	r3, #0
    2bd0:	beq	2c0c <compare_files+0x70>
    2bd4:	bl	0 <coda_get_errno>
    2bd8:	mov	r3, r0
    2bdc:	ldr	r3, [r3]
    2be0:	cmn	r3, #21
    2be4:	bne	2c0c <compare_files+0x70>
    2be8:	mov	r0, #0
    2bec:	bl	0 <coda_set_option_use_mmap>
    2bf0:	sub	r3, fp, #20
    2bf4:	mov	r1, r3
    2bf8:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    2bfc:	bl	0 <coda_open>
    2c00:	str	r0, [fp, #-16]
    2c04:	mov	r0, #1
    2c08:	bl	0 <coda_set_option_use_mmap>
    2c0c:	ldr	r3, [fp, #-16]
    2c10:	cmp	r3, #0
    2c14:	beq	2c58 <compare_files+0xbc>
    2c18:	ldr	r3, [pc, #880]	; 2f90 <compare_files+0x3f4>
    2c1c:	ldr	r4, [r3]
    2c20:	ldr	r3, [pc, #876]	; 2f94 <compare_files+0x3f8>
    2c24:	ldr	r5, [r3]
    2c28:	bl	0 <coda_get_errno>
    2c2c:	mov	r3, r0
    2c30:	ldr	r3, [r3]
    2c34:	mov	r0, r3
    2c38:	bl	0 <coda_errno_to_string>
    2c3c:	mov	r3, r0
    2c40:	mov	r2, r5
    2c44:	ldr	r1, [pc, #844]	; 2f98 <compare_files+0x3fc>
    2c48:	mov	r0, r4
    2c4c:	bl	0 <fprintf>
    2c50:	mvn	r3, #0
    2c54:	b	2f84 <compare_files+0x3e8>
    2c58:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c5c:	mov	r0, r3
    2c60:	bl	5fc <array_key_info_set_product>
    2c64:	mov	r3, r0
    2c68:	cmp	r3, #0
    2c6c:	beq	2cb0 <compare_files+0x114>
    2c70:	ldr	r3, [pc, #792]	; 2f90 <compare_files+0x3f4>
    2c74:	ldr	r4, [r3]
    2c78:	ldr	r3, [pc, #788]	; 2f94 <compare_files+0x3f8>
    2c7c:	ldr	r5, [r3]
    2c80:	bl	0 <coda_get_errno>
    2c84:	mov	r3, r0
    2c88:	ldr	r3, [r3]
    2c8c:	mov	r0, r3
    2c90:	bl	0 <coda_errno_to_string>
    2c94:	mov	r3, r0
    2c98:	mov	r2, r5
    2c9c:	ldr	r1, [pc, #756]	; 2f98 <compare_files+0x3fc>
    2ca0:	mov	r0, r4
    2ca4:	bl	0 <fprintf>
    2ca8:	mvn	r3, #0
    2cac:	b	2f84 <compare_files+0x3e8>
    2cb0:	sub	r3, fp, #24
    2cb4:	mov	r1, r3
    2cb8:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    2cbc:	bl	0 <coda_open>
    2cc0:	str	r0, [fp, #-16]
    2cc4:	ldr	r3, [fp, #-16]
    2cc8:	cmp	r3, #0
    2ccc:	beq	2d08 <compare_files+0x16c>
    2cd0:	bl	0 <coda_get_errno>
    2cd4:	mov	r3, r0
    2cd8:	ldr	r3, [r3]
    2cdc:	cmn	r3, #21
    2ce0:	bne	2d08 <compare_files+0x16c>
    2ce4:	mov	r0, #0
    2ce8:	bl	0 <coda_set_option_use_mmap>
    2cec:	sub	r3, fp, #24
    2cf0:	mov	r1, r3
    2cf4:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    2cf8:	bl	0 <coda_open>
    2cfc:	str	r0, [fp, #-16]
    2d00:	mov	r0, #1
    2d04:	bl	0 <coda_set_option_use_mmap>
    2d08:	ldr	r3, [fp, #-16]
    2d0c:	cmp	r3, #0
    2d10:	beq	2d60 <compare_files+0x1c4>
    2d14:	ldr	r3, [pc, #628]	; 2f90 <compare_files+0x3f4>
    2d18:	ldr	r4, [r3]
    2d1c:	ldr	r3, [pc, #624]	; 2f94 <compare_files+0x3f8>
    2d20:	ldr	r5, [r3, #4]
    2d24:	bl	0 <coda_get_errno>
    2d28:	mov	r3, r0
    2d2c:	ldr	r3, [r3]
    2d30:	mov	r0, r3
    2d34:	bl	0 <coda_errno_to_string>
    2d38:	mov	r3, r0
    2d3c:	mov	r2, r5
    2d40:	ldr	r1, [pc, #592]	; 2f98 <compare_files+0x3fc>
    2d44:	mov	r0, r4
    2d48:	bl	0 <fprintf>
    2d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d50:	mov	r0, r3
    2d54:	bl	0 <coda_close>
    2d58:	mvn	r3, #0
    2d5c:	b	2f84 <compare_files+0x3e8>
    2d60:	ldr	r2, [fp, #-20]	; 0xffffffec
    2d64:	sub	r3, fp, #548	; 0x224
    2d68:	mov	r1, r2
    2d6c:	mov	r0, r3
    2d70:	bl	0 <coda_cursor_set_product>
    2d74:	mov	r3, r0
    2d78:	cmp	r3, #0
    2d7c:	beq	2dd8 <compare_files+0x23c>
    2d80:	ldr	r3, [pc, #520]	; 2f90 <compare_files+0x3f4>
    2d84:	ldr	r4, [r3]
    2d88:	ldr	r3, [pc, #516]	; 2f94 <compare_files+0x3f8>
    2d8c:	ldr	r5, [r3]
    2d90:	bl	0 <coda_get_errno>
    2d94:	mov	r3, r0
    2d98:	ldr	r3, [r3]
    2d9c:	mov	r0, r3
    2da0:	bl	0 <coda_errno_to_string>
    2da4:	mov	r3, r0
    2da8:	mov	r2, r5
    2dac:	ldr	r1, [pc, #484]	; 2f98 <compare_files+0x3fc>
    2db0:	mov	r0, r4
    2db4:	bl	0 <fprintf>
    2db8:	ldr	r3, [fp, #-20]	; 0xffffffec
    2dbc:	mov	r0, r3
    2dc0:	bl	0 <coda_close>
    2dc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2dc8:	mov	r0, r3
    2dcc:	bl	0 <coda_close>
    2dd0:	mvn	r3, #0
    2dd4:	b	2f84 <compare_files+0x3e8>
    2dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ddc:	sub	r3, fp, #1056	; 0x420
    2de0:	sub	r3, r3, #12
    2de4:	mov	r1, r2
    2de8:	mov	r0, r3
    2dec:	bl	0 <coda_cursor_set_product>
    2df0:	mov	r3, r0
    2df4:	cmp	r3, #0
    2df8:	beq	2e54 <compare_files+0x2b8>
    2dfc:	ldr	r3, [pc, #396]	; 2f90 <compare_files+0x3f4>
    2e00:	ldr	r4, [r3]
    2e04:	ldr	r3, [pc, #392]	; 2f94 <compare_files+0x3f8>
    2e08:	ldr	r5, [r3, #4]
    2e0c:	bl	0 <coda_get_errno>
    2e10:	mov	r3, r0
    2e14:	ldr	r3, [r3]
    2e18:	mov	r0, r3
    2e1c:	bl	0 <coda_errno_to_string>
    2e20:	mov	r3, r0
    2e24:	mov	r2, r5
    2e28:	ldr	r1, [pc, #360]	; 2f98 <compare_files+0x3fc>
    2e2c:	mov	r0, r4
    2e30:	bl	0 <fprintf>
    2e34:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e38:	mov	r0, r3
    2e3c:	bl	0 <coda_close>
    2e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e44:	mov	r0, r3
    2e48:	bl	0 <coda_close>
    2e4c:	mvn	r3, #0
    2e50:	b	2f84 <compare_files+0x3e8>
    2e54:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    2e58:	cmp	r3, #0
    2e5c:	beq	2f4c <compare_files+0x3b0>
    2e60:	sub	r3, fp, #548	; 0x224
    2e64:	ldr	r1, [fp, #-1080]	; 0xfffffbc8
    2e68:	mov	r0, r3
    2e6c:	bl	0 <coda_cursor_goto>
    2e70:	mov	r3, r0
    2e74:	cmp	r3, #0
    2e78:	beq	2ed4 <compare_files+0x338>
    2e7c:	ldr	r3, [pc, #268]	; 2f90 <compare_files+0x3f4>
    2e80:	ldr	r4, [r3]
    2e84:	ldr	r3, [pc, #264]	; 2f94 <compare_files+0x3f8>
    2e88:	ldr	r5, [r3]
    2e8c:	bl	0 <coda_get_errno>
    2e90:	mov	r3, r0
    2e94:	ldr	r3, [r3]
    2e98:	mov	r0, r3
    2e9c:	bl	0 <coda_errno_to_string>
    2ea0:	mov	r3, r0
    2ea4:	mov	r2, r5
    2ea8:	ldr	r1, [pc, #232]	; 2f98 <compare_files+0x3fc>
    2eac:	mov	r0, r4
    2eb0:	bl	0 <fprintf>
    2eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    2eb8:	mov	r0, r3
    2ebc:	bl	0 <coda_close>
    2ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ec4:	mov	r0, r3
    2ec8:	bl	0 <coda_close>
    2ecc:	mvn	r3, #0
    2ed0:	b	2f84 <compare_files+0x3e8>
    2ed4:	sub	r3, fp, #1056	; 0x420
    2ed8:	sub	r3, r3, #12
    2edc:	ldr	r1, [fp, #-1080]	; 0xfffffbc8
    2ee0:	mov	r0, r3
    2ee4:	bl	0 <coda_cursor_goto>
    2ee8:	mov	r3, r0
    2eec:	cmp	r3, #0
    2ef0:	beq	2f4c <compare_files+0x3b0>
    2ef4:	ldr	r3, [pc, #148]	; 2f90 <compare_files+0x3f4>
    2ef8:	ldr	r4, [r3]
    2efc:	ldr	r3, [pc, #144]	; 2f94 <compare_files+0x3f8>
    2f00:	ldr	r5, [r3, #4]
    2f04:	bl	0 <coda_get_errno>
    2f08:	mov	r3, r0
    2f0c:	ldr	r3, [r3]
    2f10:	mov	r0, r3
    2f14:	bl	0 <coda_errno_to_string>
    2f18:	mov	r3, r0
    2f1c:	mov	r2, r5
    2f20:	ldr	r1, [pc, #112]	; 2f98 <compare_files+0x3fc>
    2f24:	mov	r0, r4
    2f28:	bl	0 <fprintf>
    2f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f30:	mov	r0, r3
    2f34:	bl	0 <coda_close>
    2f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f3c:	mov	r0, r3
    2f40:	bl	0 <coda_close>
    2f44:	mvn	r3, #0
    2f48:	b	2f84 <compare_files+0x3e8>
    2f4c:	sub	r2, fp, #1056	; 0x420
    2f50:	sub	r2, r2, #12
    2f54:	sub	r3, fp, #548	; 0x224
    2f58:	mov	r1, r2
    2f5c:	mov	r0, r3
    2f60:	bl	27f0 <compare_data>
    2f64:	str	r0, [fp, #-16]
    2f68:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f6c:	mov	r0, r3
    2f70:	bl	0 <coda_close>
    2f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f78:	mov	r0, r3
    2f7c:	bl	0 <coda_close>
    2f80:	ldr	r3, [fp, #-16]
    2f84:	mov	r0, r3
    2f88:	sub	sp, fp, #12
    2f8c:	pop	{r4, r5, fp, pc}
	...
    2f98:	.word	0x00000764

00002f9c <main>:
    2f9c:	push	{r4, fp, lr}
    2fa0:	add	fp, sp, #8
    2fa4:	sub	sp, sp, #36	; 0x24
    2fa8:	str	r0, [fp, #-40]	; 0xffffffd8
    2fac:	str	r1, [fp, #-44]	; 0xffffffd4
    2fb0:	ldr	r3, [pc, #1376]	; 3518 <main+0x57c>
    2fb4:	mov	r2, #0
    2fb8:	str	r2, [r3]
    2fbc:	mov	r3, #1
    2fc0:	str	r3, [fp, #-16]
    2fc4:	mov	r3, #0
    2fc8:	str	r3, [fp, #-20]	; 0xffffffec
    2fcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2fd0:	cmp	r3, #1
    2fd4:	beq	3020 <main+0x84>
    2fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2fdc:	add	r3, r3, #4
    2fe0:	ldr	r3, [r3]
    2fe4:	ldr	r1, [pc, #1328]	; 351c <main+0x580>
    2fe8:	mov	r0, r3
    2fec:	bl	0 <strcmp>
    2ff0:	mov	r3, r0
    2ff4:	cmp	r3, #0
    2ff8:	beq	3020 <main+0x84>
    2ffc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3000:	add	r3, r3, #4
    3004:	ldr	r3, [r3]
    3008:	ldr	r1, [pc, #1296]	; 3520 <main+0x584>
    300c:	mov	r0, r3
    3010:	bl	0 <strcmp>
    3014:	mov	r3, r0
    3018:	cmp	r3, #0
    301c:	bne	302c <main+0x90>
    3020:	bl	3c <print_help>
    3024:	mov	r0, #0
    3028:	bl	0 <exit>
    302c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3030:	add	r3, r3, #4
    3034:	ldr	r3, [r3]
    3038:	ldr	r1, [pc, #1252]	; 3524 <main+0x588>
    303c:	mov	r0, r3
    3040:	bl	0 <strcmp>
    3044:	mov	r3, r0
    3048:	cmp	r3, #0
    304c:	beq	3074 <main+0xd8>
    3050:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3054:	add	r3, r3, #4
    3058:	ldr	r3, [r3]
    305c:	ldr	r1, [pc, #1220]	; 3528 <main+0x58c>
    3060:	mov	r0, r3
    3064:	bl	0 <strcmp>
    3068:	mov	r3, r0
    306c:	cmp	r3, #0
    3070:	bne	3080 <main+0xe4>
    3074:	bl	0 <print_version>
    3078:	mov	r0, #0
    307c:	bl	0 <exit>
    3080:	bl	3c0 <array_key_info_init>
    3084:	mov	r3, #1
    3088:	str	r3, [fp, #-24]	; 0xffffffe8
    308c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3090:	add	r2, r3, #1
    3094:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3098:	cmp	r2, r3
    309c:	bge	30fc <main+0x160>
    30a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30a4:	lsl	r3, r3, #2
    30a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    30ac:	add	r3, r2, r3
    30b0:	ldr	r3, [r3]
    30b4:	ldr	r1, [pc, #1136]	; 352c <main+0x590>
    30b8:	mov	r0, r3
    30bc:	bl	0 <strcmp>
    30c0:	mov	r3, r0
    30c4:	cmp	r3, #0
    30c8:	bne	30fc <main+0x160>
    30cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30d0:	add	r3, r3, #1
    30d4:	lsl	r3, r3, #2
    30d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    30dc:	add	r3, r2, r3
    30e0:	ldr	r3, [r3]
    30e4:	mov	r0, r3
    30e8:	bl	0 <coda_set_definition_path>
    30ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30f0:	add	r3, r3, #2
    30f4:	str	r3, [fp, #-24]	; 0xffffffe8
    30f8:	b	3160 <main+0x1c4>
    30fc:	ldr	r3, [pc, #1068]	; 3530 <main+0x594>
    3100:	str	r3, [fp, #-28]	; 0xffffffe4
    3104:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3108:	ldr	r3, [r3]
    310c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3110:	mov	r1, #0
    3114:	mov	r0, r3
    3118:	bl	0 <coda_set_definition_path_conditional>
    311c:	mov	r3, r0
    3120:	cmp	r3, #0
    3124:	beq	3404 <main+0x468>
    3128:	ldr	r3, [pc, #1028]	; 3534 <main+0x598>
    312c:	ldr	r4, [r3]
    3130:	bl	0 <coda_get_errno>
    3134:	mov	r3, r0
    3138:	ldr	r3, [r3]
    313c:	mov	r0, r3
    3140:	bl	0 <coda_errno_to_string>
    3144:	mov	r3, r0
    3148:	mov	r2, r3
    314c:	ldr	r1, [pc, #996]	; 3538 <main+0x59c>
    3150:	mov	r0, r4
    3154:	bl	0 <fprintf>
    3158:	mov	r0, #1
    315c:	bl	0 <exit>
    3160:	b	3404 <main+0x468>
    3164:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3168:	lsl	r3, r3, #2
    316c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3170:	add	r3, r2, r3
    3174:	ldr	r3, [r3]
    3178:	ldr	r1, [pc, #956]	; 353c <main+0x5a0>
    317c:	mov	r0, r3
    3180:	bl	0 <strcmp>
    3184:	mov	r3, r0
    3188:	cmp	r3, #0
    318c:	beq	31bc <main+0x220>
    3190:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3194:	lsl	r3, r3, #2
    3198:	ldr	r2, [fp, #-44]	; 0xffffffd4
    319c:	add	r3, r2, r3
    31a0:	ldr	r3, [r3]
    31a4:	ldr	r1, [pc, #916]	; 3540 <main+0x5a4>
    31a8:	mov	r0, r3
    31ac:	bl	0 <strcmp>
    31b0:	mov	r3, r0
    31b4:	cmp	r3, #0
    31b8:	bne	31cc <main+0x230>
    31bc:	ldr	r3, [pc, #852]	; 3518 <main+0x57c>
    31c0:	mov	r2, #1
    31c4:	str	r2, [r3]
    31c8:	b	33f8 <main+0x45c>
    31cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    31d0:	lsl	r3, r3, #2
    31d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    31d8:	add	r3, r2, r3
    31dc:	ldr	r3, [r3]
    31e0:	ldr	r1, [pc, #860]	; 3544 <main+0x5a8>
    31e4:	mov	r0, r3
    31e8:	bl	0 <strcmp>
    31ec:	mov	r3, r0
    31f0:	cmp	r3, #0
    31f4:	beq	3224 <main+0x288>
    31f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    31fc:	lsl	r3, r3, #2
    3200:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3204:	add	r3, r2, r3
    3208:	ldr	r3, [r3]
    320c:	ldr	r1, [pc, #820]	; 3548 <main+0x5ac>
    3210:	mov	r0, r3
    3214:	bl	0 <strcmp>
    3218:	mov	r3, r0
    321c:	cmp	r3, #0
    3220:	bne	3230 <main+0x294>
    3224:	mov	r3, #0
    3228:	str	r3, [fp, #-16]
    322c:	b	33f8 <main+0x45c>
    3230:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3234:	lsl	r3, r3, #2
    3238:	ldr	r2, [fp, #-44]	; 0xffffffd4
    323c:	add	r3, r2, r3
    3240:	ldr	r3, [r3]
    3244:	ldr	r1, [pc, #768]	; 354c <main+0x5b0>
    3248:	mov	r0, r3
    324c:	bl	0 <strcmp>
    3250:	mov	r3, r0
    3254:	cmp	r3, #0
    3258:	beq	3288 <main+0x2ec>
    325c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3260:	lsl	r3, r3, #2
    3264:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3268:	add	r3, r2, r3
    326c:	ldr	r3, [r3]
    3270:	ldr	r1, [pc, #728]	; 3550 <main+0x5b4>
    3274:	mov	r0, r3
    3278:	bl	0 <strcmp>
    327c:	mov	r3, r0
    3280:	cmp	r3, #0
    3284:	bne	32ec <main+0x350>
    3288:	ldr	r3, [fp, #-24]	; 0xffffffe8
    328c:	add	r2, r3, #1
    3290:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3294:	cmp	r2, r3
    3298:	bge	32ec <main+0x350>
    329c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32a0:	add	r3, r3, #1
    32a4:	lsl	r3, r3, #2
    32a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    32ac:	add	r3, r2, r3
    32b0:	ldr	r3, [r3]
    32b4:	ldrb	r3, [r3]
    32b8:	cmp	r3, #45	; 0x2d
    32bc:	beq	32ec <main+0x350>
    32c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32c4:	add	r3, r3, #1
    32c8:	lsl	r3, r3, #2
    32cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    32d0:	add	r3, r2, r3
    32d4:	ldr	r3, [r3]
    32d8:	str	r3, [fp, #-20]	; 0xffffffec
    32dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32e0:	add	r3, r3, #1
    32e4:	str	r3, [fp, #-24]	; 0xffffffe8
    32e8:	b	33f8 <main+0x45c>
    32ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32f0:	lsl	r3, r3, #2
    32f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    32f8:	add	r3, r2, r3
    32fc:	ldr	r3, [r3]
    3300:	ldr	r1, [pc, #588]	; 3554 <main+0x5b8>
    3304:	mov	r0, r3
    3308:	bl	0 <strcmp>
    330c:	mov	r3, r0
    3310:	cmp	r3, #0
    3314:	beq	3344 <main+0x3a8>
    3318:	ldr	r3, [fp, #-24]	; 0xffffffe8
    331c:	lsl	r3, r3, #2
    3320:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3324:	add	r3, r2, r3
    3328:	ldr	r3, [r3]
    332c:	ldr	r1, [pc, #548]	; 3558 <main+0x5bc>
    3330:	mov	r0, r3
    3334:	bl	0 <strcmp>
    3338:	mov	r3, r0
    333c:	cmp	r3, #0
    3340:	bne	33b4 <main+0x418>
    3344:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3348:	add	r2, r3, #2
    334c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3350:	cmp	r2, r3
    3354:	bge	33b4 <main+0x418>
    3358:	ldr	r3, [fp, #-24]	; 0xffffffe8
    335c:	add	r3, r3, #1
    3360:	lsl	r3, r3, #2
    3364:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3368:	add	r3, r2, r3
    336c:	ldr	r0, [r3]
    3370:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3374:	add	r3, r3, #2
    3378:	lsl	r3, r3, #2
    337c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3380:	add	r3, r2, r3
    3384:	ldr	r3, [r3]
    3388:	mov	r1, r3
    338c:	bl	484 <array_key_info_add_key>
    3390:	mov	r3, r0
    3394:	cmp	r3, #0
    3398:	beq	33a4 <main+0x408>
    339c:	mvn	r3, #0
    33a0:	b	350c <main+0x570>
    33a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    33a8:	add	r3, r3, #2
    33ac:	str	r3, [fp, #-24]	; 0xffffffe8
    33b0:	b	33f8 <main+0x45c>
    33b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    33b8:	lsl	r3, r3, #2
    33bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    33c0:	add	r3, r2, r3
    33c4:	ldr	r3, [r3]
    33c8:	ldrb	r3, [r3]
    33cc:	cmp	r3, #45	; 0x2d
    33d0:	bne	3418 <main+0x47c>
    33d4:	ldr	r3, [pc, #344]	; 3534 <main+0x598>
    33d8:	ldr	r3, [r3]
    33dc:	mov	r2, #25
    33e0:	mov	r1, #1
    33e4:	ldr	r0, [pc, #368]	; 355c <main+0x5c0>
    33e8:	bl	0 <fwrite>
    33ec:	bl	3c <print_help>
    33f0:	mov	r0, #1
    33f4:	bl	0 <exit>
    33f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    33fc:	add	r3, r3, #1
    3400:	str	r3, [fp, #-24]	; 0xffffffe8
    3404:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3408:	ldr	r3, [fp, #-40]	; 0xffffffd8
    340c:	cmp	r2, r3
    3410:	blt	3164 <main+0x1c8>
    3414:	b	341c <main+0x480>
    3418:	nop			; (mov r0, r0)
    341c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3420:	sub	r2, r3, #2
    3424:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3428:	cmp	r2, r3
    342c:	beq	3454 <main+0x4b8>
    3430:	ldr	r3, [pc, #252]	; 3534 <main+0x598>
    3434:	ldr	r3, [r3]
    3438:	mov	r2, #25
    343c:	mov	r1, #1
    3440:	ldr	r0, [pc, #276]	; 355c <main+0x5c0>
    3444:	bl	0 <fwrite>
    3448:	bl	3c <print_help>
    344c:	mov	r0, #1
    3450:	bl	0 <exit>
    3454:	bl	0 <coda_init>
    3458:	mov	r3, r0
    345c:	cmp	r3, #0
    3460:	beq	349c <main+0x500>
    3464:	ldr	r3, [pc, #200]	; 3534 <main+0x598>
    3468:	ldr	r4, [r3]
    346c:	bl	0 <coda_get_errno>
    3470:	mov	r3, r0
    3474:	ldr	r3, [r3]
    3478:	mov	r0, r3
    347c:	bl	0 <coda_errno_to_string>
    3480:	mov	r3, r0
    3484:	mov	r2, r3
    3488:	ldr	r1, [pc, #168]	; 3538 <main+0x59c>
    348c:	mov	r0, r4
    3490:	bl	0 <fprintf>
    3494:	mov	r0, #1
    3498:	bl	0 <exit>
    349c:	mov	r0, #0
    34a0:	bl	0 <coda_set_option_perform_boundary_checks>
    34a4:	ldr	r0, [fp, #-16]
    34a8:	bl	0 <coda_set_option_perform_conversions>
    34ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    34b0:	sub	r3, r3, #-1073741822	; 0xc0000002
    34b4:	lsl	r3, r3, #2
    34b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    34bc:	add	r3, r2, r3
    34c0:	ldr	r0, [r3]
    34c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    34c8:	sub	r3, r3, #-1073741823	; 0xc0000001
    34cc:	lsl	r3, r3, #2
    34d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    34d4:	add	r3, r2, r3
    34d8:	ldr	r3, [r3]
    34dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    34e0:	mov	r1, r3
    34e4:	bl	2b9c <compare_files>
    34e8:	str	r0, [fp, #-32]	; 0xffffffe0
    34ec:	bl	0 <coda_done>
    34f0:	bl	40c <array_key_info_done>
    34f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34f8:	cmp	r3, #0
    34fc:	beq	3508 <main+0x56c>
    3500:	mov	r0, #1
    3504:	bl	0 <exit>
    3508:	mov	r3, #0
    350c:	mov	r0, r3
    3510:	sub	sp, fp, #8
    3514:	pop	{r4, fp, pc}
    3518:	.word	0x00000000
    351c:	.word	0x00000a0c
    3520:	.word	0x00000a10
    3524:	.word	0x00000a18
    3528:	.word	0x00000a1c
    352c:	.word	0x00000a28
    3530:	.word	0x00000a2c
    3534:	.word	0x00000000
    3538:	.word	0x00000894
    353c:	.word	0x00000a48
    3540:	.word	0x00000a4c
    3544:	.word	0x00000a58
    3548:	.word	0x00000a5c
    354c:	.word	0x00000a74
    3550:	.word	0x00000a78
    3554:	.word	0x00000a80
    3558:	.word	0x00000a84
    355c:	.word	0x00000a8c
