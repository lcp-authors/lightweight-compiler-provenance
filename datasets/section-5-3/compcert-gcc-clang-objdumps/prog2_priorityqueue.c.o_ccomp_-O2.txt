
../repos/prog2/CMakeFiles/9.dir/Aula09_Filas_de_Prioridade_e_Heaps/priorityqueue.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fp_insere>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r5, r0
  20:	mov	r0, r2
  24:	cmp	r5, #0
  28:	bne	34 <fp_insere+0x34>
  2c:	mvn	r0, #0
  30:	b	c4 <fp_insere+0xc4>
  34:	ldr	r3, [r5]
  38:	ldr	r2, [r5, #4]
  3c:	cmp	r3, r2
  40:	bne	4c <fp_insere+0x4c>
  44:	mov	r0, #0
  48:	b	c4 <fp_insere+0xc4>
  4c:	bl	0 <elemento_cria>
  50:	mov	r4, r0
  54:	mov	r6, #0
  58:	ldr	r1, [r5]
  5c:	cmp	r6, r1
  60:	bge	84 <fp_insere+0x84>
  64:	ldr	ip, [r5, #8]
  68:	ldr	r0, [ip, r6, lsl #2]
  6c:	mov	r1, r4
  70:	bl	0 <maior_que>
  74:	cmp	r0, #0
  78:	beq	84 <fp_insere+0x84>
  7c:	add	r6, r6, #1
  80:	b	58 <fp_insere+0x58>
  84:	ldr	ip, [r5]
  88:	cmp	ip, r6
  8c:	blt	ac <fp_insere+0xac>
  90:	ldr	r0, [r5, #8]
  94:	lsl	r2, ip, #2
  98:	add	r3, r0, r2
  9c:	ldr	r0, [r0, ip, lsl #2]
  a0:	str	r0, [r3, #4]
  a4:	sub	ip, ip, #1
  a8:	b	88 <fp_insere+0x88>
  ac:	ldr	r3, [r5, #8]
  b0:	str	r4, [r3, r6, lsl #2]
  b4:	ldr	r0, [r5]
  b8:	add	ip, r0, #1
  bc:	str	ip, [r5]
  c0:	mov	r0, #1
  c4:	ldr	r4, [sp, #8]
  c8:	ldr	r5, [sp, #12]
  cc:	ldr	r6, [sp, #16]
  d0:	ldr	lr, [sp, #4]
  d4:	add	sp, sp, #24
  d8:	bx	lr

000000dc <fp_remove>:
  dc:	mov	ip, sp
  e0:	sub	sp, sp, #8
  e4:	str	ip, [sp]
  e8:	str	lr, [sp, #4]
  ec:	cmp	r0, #0
  f0:	beq	144 <fp_remove+0x68>
  f4:	ldr	ip, [r0]
  f8:	cmp	ip, #0
  fc:	beq	144 <fp_remove+0x68>
 100:	ldr	r1, [r0, #8]
 104:	ldr	r2, [r1]
 108:	mov	ip, #0
 10c:	ldr	r1, [r0]
 110:	cmp	ip, r1
 114:	bge	134 <fp_remove+0x58>
 118:	ldr	r1, [r0, #8]
 11c:	lsl	r3, ip, #2
 120:	add	r3, r1, r3
 124:	ldr	r3, [r3, #4]
 128:	str	r3, [r1, ip, lsl #2]
 12c:	add	ip, ip, #1
 130:	b	10c <fp_remove+0x30>
 134:	sub	r3, r1, #1
 138:	str	r3, [r0]
 13c:	ldr	r0, [r2, #4]
 140:	b	148 <fp_remove+0x6c>
 144:	mov	r0, #0
 148:	ldr	lr, [sp, #4]
 14c:	add	sp, sp, #8
 150:	bx	lr

00000154 <fp_carrega>:
 154:	mov	ip, sp
 158:	sub	sp, sp, #280	; 0x118
 15c:	str	ip, [sp]
 160:	str	lr, [sp, #4]
 164:	str	r4, [sp, #8]
 168:	str	r5, [sp, #12]
 16c:	mov	r5, r0
 170:	mov	r0, r1
 174:	ldr	r1, [pc, #156]	; 218 <fp_carrega+0xc4>
 178:	bl	0 <fopen>
 17c:	mov	r4, r0
 180:	cmp	r4, #0
 184:	bne	194 <fp_carrega+0x40>
 188:	ldr	r0, [pc, #132]	; 214 <fp_carrega+0xc0>
 18c:	bl	0 <printf>
 190:	b	1fc <fp_carrega+0xa8>
 194:	mov	r0, r4
 198:	bl	0 <feof>
 19c:	cmp	r0, #0
 1a0:	bne	1f4 <fp_carrega+0xa0>
 1a4:	ldr	r1, [pc, #100]	; 210 <fp_carrega+0xbc>
 1a8:	add	r2, sp, #16
 1ac:	mov	r0, r4
 1b0:	bl	0 <fscanf>
 1b4:	add	r0, sp, #24
 1b8:	mov	r1, #256	; 0x100
 1bc:	mov	r2, r4
 1c0:	bl	0 <fgets>
 1c4:	add	r0, sp, #24
 1c8:	bl	0 <strlen>
 1cc:	add	r1, sp, #24
 1d0:	add	r0, r1, r0
 1d4:	mov	r3, #0
 1d8:	sub	lr, r0, #4096	; 0x1000
 1dc:	strb	r3, [lr, #4095]	; 0xfff
 1e0:	add	r1, sp, #24
 1e4:	ldr	r2, [sp, #16]
 1e8:	mov	r0, r5
 1ec:	bl	0 <fp_insere>
 1f0:	b	194 <fp_carrega+0x40>
 1f4:	mov	r0, r4
 1f8:	bl	0 <fclose>
 1fc:	ldr	r4, [sp, #8]
 200:	ldr	r5, [sp, #12]
 204:	ldr	lr, [sp, #4]
 208:	add	sp, sp, #280	; 0x118
 20c:	bx	lr
 210:	.word	0x00000265
 214:	.word	0x00000269
 218:	.word	0x00000000

0000021c <heap_insere>:
 21c:	mov	ip, sp
 220:	sub	sp, sp, #24
 224:	str	ip, [sp]
 228:	str	lr, [sp, #4]
 22c:	str	r4, [sp, #8]
 230:	str	r5, [sp, #12]
 234:	str	r6, [sp, #16]
 238:	str	r7, [sp, #20]
 23c:	mov	r6, r1
 240:	mov	r7, r0
 244:	ldr	ip, [r7]
 248:	ldr	r0, [r7, #4]
 24c:	cmp	ip, r0
 250:	bne	25c <heap_insere+0x40>
 254:	mov	r0, #0
 258:	b	2dc <heap_insere+0xc0>
 25c:	mov	r1, r2
 260:	mov	r0, r3
 264:	bl	0 <elemento_cria>
 268:	mov	r5, r0
 26c:	mov	r4, #0
 270:	ldr	r2, [r7]
 274:	cmp	r4, r2
 278:	bge	29c <heap_insere+0x80>
 27c:	ldr	r1, [r7, #8]
 280:	ldr	r0, [r1, r4, lsl #2]
 284:	mov	r1, r5
 288:	blx	r6
 28c:	cmp	r0, #1
 290:	beq	29c <heap_insere+0x80>
 294:	add	r4, r4, #1
 298:	b	270 <heap_insere+0x54>
 29c:	mov	r0, r4
 2a0:	cmp	r0, #0
 2a4:	ble	2c4 <heap_insere+0xa8>
 2a8:	ldr	r1, [r7, #8]
 2ac:	lsl	ip, r0, #2
 2b0:	add	r3, r1, ip
 2b4:	ldr	r1, [r1, r0, lsl #2]
 2b8:	str	r1, [r3, #4]
 2bc:	sub	r0, r0, #1
 2c0:	b	2a0 <heap_insere+0x84>
 2c4:	ldr	r0, [r7, #8]
 2c8:	str	r5, [r0, r4, lsl #2]
 2cc:	ldr	r3, [r7]
 2d0:	add	r1, r3, #1
 2d4:	str	r1, [r7]
 2d8:	mov	r0, r4
 2dc:	ldr	r4, [sp, #8]
 2e0:	ldr	r5, [sp, #12]
 2e4:	ldr	r6, [sp, #16]
 2e8:	ldr	r7, [sp, #20]
 2ec:	ldr	lr, [sp, #4]
 2f0:	add	sp, sp, #24
 2f4:	bx	lr

000002f8 <heap_remove>:
 2f8:	mov	ip, sp
 2fc:	sub	sp, sp, #8
 300:	str	ip, [sp]
 304:	str	lr, [sp, #4]
 308:	mov	r0, #0
 30c:	ldr	lr, [sp, #4]
 310:	add	sp, sp, #8
 314:	bx	lr

00000318 <heap_carrega>:
 318:	mov	ip, sp
 31c:	sub	sp, sp, #288	; 0x120
 320:	str	ip, [sp]
 324:	str	lr, [sp, #4]
 328:	str	r4, [sp, #8]
 32c:	str	r5, [sp, #12]
 330:	str	r6, [sp, #16]
 334:	mov	r6, r0
 338:	mov	r0, r2
 33c:	mov	r5, r1
 340:	ldr	r1, [pc, #164]	; 3ec <heap_carrega+0xd4>
 344:	bl	0 <fopen>
 348:	mov	r4, r0
 34c:	cmp	r4, #0
 350:	bne	360 <heap_carrega+0x48>
 354:	ldr	r0, [pc, #140]	; 3e8 <heap_carrega+0xd0>
 358:	bl	0 <printf>
 35c:	b	3cc <heap_carrega+0xb4>
 360:	mov	r0, r4
 364:	bl	0 <feof>
 368:	cmp	r0, #0
 36c:	bne	3c4 <heap_carrega+0xac>
 370:	ldr	r1, [pc, #108]	; 3e4 <heap_carrega+0xcc>
 374:	add	r2, sp, #24
 378:	mov	r0, r4
 37c:	bl	0 <fscanf>
 380:	add	r0, sp, #32
 384:	mov	r1, #256	; 0x100
 388:	mov	r2, r4
 38c:	bl	0 <fgets>
 390:	add	r0, sp, #32
 394:	bl	0 <strlen>
 398:	add	r1, sp, #32
 39c:	add	r0, r1, r0
 3a0:	mov	r3, #0
 3a4:	sub	lr, r0, #4096	; 0x1000
 3a8:	strb	r3, [lr, #4095]	; 0xfff
 3ac:	add	r2, sp, #32
 3b0:	ldr	r3, [sp, #24]
 3b4:	mov	r1, r5
 3b8:	mov	r0, r6
 3bc:	bl	21c <heap_insere>
 3c0:	b	360 <heap_carrega+0x48>
 3c4:	mov	r0, r4
 3c8:	bl	0 <fclose>
 3cc:	ldr	r4, [sp, #8]
 3d0:	ldr	r5, [sp, #12]
 3d4:	ldr	r6, [sp, #16]
 3d8:	ldr	lr, [sp, #4]
 3dc:	add	sp, sp, #288	; 0x120
 3e0:	bx	lr
 3e4:	.word	0x00000265
 3e8:	.word	0x00000269
 3ec:	.word	0x00000000

000003f0 <main>:
 3f0:	mov	ip, sp
 3f4:	sub	sp, sp, #192	; 0xc0
 3f8:	str	ip, [sp]
 3fc:	str	lr, [sp, #4]
 400:	str	r4, [sp, #8]
 404:	str	r5, [sp, #12]
 408:	str	r6, [sp, #16]
 40c:	mov	r0, #42	; 0x2a
 410:	bl	0 <vetor_cria>
 414:	mov	r4, r0
 418:	ldr	r0, [pc, #812]	; 74c <main+0x35c>
 41c:	bl	0 <printf>
 420:	ldr	r1, [pc, #772]	; 72c <main+0x33c>
 424:	mov	r0, r4
 428:	bl	154 <fp_carrega>
 42c:	ldr	r0, [pc, #752]	; 724 <main+0x334>
 430:	ldr	r1, [pc, #780]	; 744 <main+0x354>
 434:	ldr	r1, [r1]
 438:	bl	0 <printf>
 43c:	mov	r0, r4
 440:	bl	0 <vetor_imprime>
 444:	ldr	ip, [r4]
 448:	cmp	ip, #42	; 0x2a
 44c:	beq	460 <main+0x70>
 450:	ldr	r0, [pc, #768]	; 758 <main+0x368>
 454:	bl	0 <printf>
 458:	mov	r0, #1
 45c:	b	70c <main+0x31c>
 460:	mov	r0, r4
 464:	bl	dc <fp_remove>
 468:	ldr	r1, [pc, #740]	; 754 <main+0x364>
 46c:	mov	r2, r0
 470:	mov	r0, r1
 474:	mov	r1, r2
 478:	bl	0 <strcmp>
 47c:	cmp	r0, #0
 480:	beq	494 <main+0xa4>
 484:	ldr	r0, [pc, #676]	; 730 <main+0x340>
 488:	bl	0 <printf>
 48c:	mov	r0, #1
 490:	b	70c <main+0x31c>
 494:	ldr	r2, [pc, #680]	; 744 <main+0x354>
 498:	mov	r3, #0
 49c:	str	r3, [r2]
 4a0:	mov	r0, r4
 4a4:	bl	dc <fp_remove>
 4a8:	ldr	r0, [pc, #692]	; 764 <main+0x374>
 4ac:	ldr	r1, [pc, #656]	; 744 <main+0x354>
 4b0:	ldr	r1, [r1]
 4b4:	bl	0 <printf>
 4b8:	ldr	ip, [pc, #644]	; 744 <main+0x354>
 4bc:	mov	r2, #0
 4c0:	str	r2, [ip]
 4c4:	ldr	r1, [pc, #672]	; 76c <main+0x37c>
 4c8:	mov	r2, #99	; 0x63
 4cc:	mov	r0, r4
 4d0:	bl	0 <fp_insere>
 4d4:	ldr	r0, [pc, #640]	; 75c <main+0x36c>
 4d8:	ldr	r1, [pc, #612]	; 744 <main+0x354>
 4dc:	ldr	r1, [r1]
 4e0:	bl	0 <printf>
 4e4:	mov	r0, r4
 4e8:	bl	dc <fp_remove>
 4ec:	ldr	ip, [pc, #592]	; 744 <main+0x354>
 4f0:	mov	r3, #0
 4f4:	str	r3, [ip]
 4f8:	ldr	r1, [pc, #620]	; 76c <main+0x37c>
 4fc:	mov	r2, #0
 500:	mov	r0, r4
 504:	bl	0 <fp_insere>
 508:	ldr	r0, [pc, #556]	; 73c <main+0x34c>
 50c:	ldr	r1, [pc, #560]	; 744 <main+0x354>
 510:	ldr	r1, [r1]
 514:	bl	0 <printf>
 518:	mov	r0, r4
 51c:	bl	dc <fp_remove>
 520:	ldr	ip, [pc, #540]	; 744 <main+0x354>
 524:	mov	r3, #0
 528:	str	r3, [ip]
 52c:	ldr	r1, [pc, #568]	; 76c <main+0x37c>
 530:	mov	r2, #42	; 0x2a
 534:	mov	r0, r4
 538:	bl	0 <fp_insere>
 53c:	ldr	r0, [pc, #484]	; 728 <main+0x338>
 540:	ldr	r1, [pc, #508]	; 744 <main+0x354>
 544:	ldr	r1, [r1]
 548:	bl	0 <printf>
 54c:	ldr	r0, [pc, #484]	; 738 <main+0x348>
 550:	bl	0 <printf>
 554:	mov	r0, #42	; 0x2a
 558:	bl	0 <vetor_criaHeap>
 55c:	mov	r4, r0
 560:	ldr	r5, [pc, #524]	; 774 <main+0x384>
 564:	ldr	r2, [pc, #448]	; 72c <main+0x33c>
 568:	mov	r1, r5
 56c:	mov	r0, r4
 570:	bl	318 <heap_carrega>
 574:	ldr	r0, [pc, #452]	; 740 <main+0x350>
 578:	ldr	r1, [pc, #452]	; 744 <main+0x354>
 57c:	ldr	r1, [r1]
 580:	bl	0 <printf>
 584:	mov	r0, r4
 588:	bl	0 <vetor_imprimeHeap>
 58c:	ldr	r1, [r4]
 590:	cmp	r1, #42	; 0x2a
 594:	beq	5a8 <main+0x1b8>
 598:	ldr	r0, [pc, #424]	; 748 <main+0x358>
 59c:	bl	0 <printf>
 5a0:	mov	r0, #1
 5a4:	b	70c <main+0x31c>
 5a8:	mov	r1, r5
 5ac:	mov	r0, r4
 5b0:	bl	2f8 <heap_remove>
 5b4:	mov	r1, r0
 5b8:	ldr	r0, [pc, #404]	; 754 <main+0x364>
 5bc:	bl	0 <strcmp>
 5c0:	cmp	r0, #0
 5c4:	beq	5d8 <main+0x1e8>
 5c8:	ldr	r0, [pc, #352]	; 730 <main+0x340>
 5cc:	bl	0 <printf>
 5d0:	mov	r0, #1
 5d4:	b	70c <main+0x31c>
 5d8:	ldr	r0, [pc, #356]	; 744 <main+0x354>
 5dc:	mov	ip, #0
 5e0:	str	ip, [r0]
 5e4:	mov	r1, r5
 5e8:	mov	r0, r4
 5ec:	bl	2f8 <heap_remove>
 5f0:	ldr	r0, [pc, #344]	; 750 <main+0x360>
 5f4:	ldr	ip, [pc, #328]	; 744 <main+0x354>
 5f8:	ldr	r1, [ip]
 5fc:	bl	0 <printf>
 600:	ldr	r0, [pc, #316]	; 744 <main+0x354>
 604:	mov	r3, #0
 608:	str	r3, [r0]
 60c:	ldr	r2, [pc, #344]	; 76c <main+0x37c>
 610:	mov	r3, #99	; 0x63
 614:	mov	r1, r5
 618:	mov	r0, r4
 61c:	bl	21c <heap_insere>
 620:	ldr	r0, [pc, #312]	; 760 <main+0x370>
 624:	ldr	r2, [pc, #280]	; 744 <main+0x354>
 628:	ldr	r1, [r2]
 62c:	bl	0 <printf>
 630:	mov	r1, r5
 634:	mov	r0, r4
 638:	bl	2f8 <heap_remove>
 63c:	ldr	r3, [pc, #256]	; 744 <main+0x354>
 640:	mov	r2, #0
 644:	str	r2, [r3]
 648:	ldr	r2, [pc, #284]	; 76c <main+0x37c>
 64c:	mov	r3, #0
 650:	mov	r1, r5
 654:	mov	r0, r4
 658:	bl	21c <heap_insere>
 65c:	ldr	r0, [pc, #208]	; 734 <main+0x344>
 660:	ldr	ip, [pc, #220]	; 744 <main+0x354>
 664:	ldr	r1, [ip]
 668:	bl	0 <printf>
 66c:	mov	r1, r5
 670:	mov	r0, r4
 674:	bl	2f8 <heap_remove>
 678:	ldr	r1, [pc, #196]	; 744 <main+0x354>
 67c:	mov	r2, #0
 680:	str	r2, [r1]
 684:	ldr	r2, [pc, #224]	; 76c <main+0x37c>
 688:	mov	r3, #42	; 0x2a
 68c:	mov	r1, r5
 690:	mov	r0, r4
 694:	bl	21c <heap_insere>
 698:	ldr	r0, [pc, #136]	; 728 <main+0x338>
 69c:	ldr	r2, [pc, #160]	; 744 <main+0x354>
 6a0:	ldr	r1, [r2]
 6a4:	bl	0 <printf>
 6a8:	mov	r0, #42	; 0x2a
 6ac:	bl	0 <vetor_criaHeap>
 6b0:	mov	r4, r0
 6b4:	ldr	r5, [pc, #180]	; 770 <main+0x380>
 6b8:	ldr	r2, [pc, #108]	; 72c <main+0x33c>
 6bc:	mov	r1, r5
 6c0:	mov	r0, r4
 6c4:	bl	318 <heap_carrega>
 6c8:	ldr	r0, [pc, #112]	; 740 <main+0x350>
 6cc:	ldr	r1, [pc, #112]	; 744 <main+0x354>
 6d0:	ldr	r1, [r1]
 6d4:	bl	0 <printf>
 6d8:	mov	r6, #0
 6dc:	mov	r1, r5
 6e0:	mov	r0, r4
 6e4:	bl	2f8 <heap_remove>
 6e8:	ldr	r1, [pc, #120]	; 768 <main+0x378>
 6ec:	mov	r3, r0
 6f0:	mov	r0, r1
 6f4:	mov	r1, r3
 6f8:	bl	0 <printf>
 6fc:	add	r6, r6, #1
 700:	cmp	r6, #42	; 0x2a
 704:	blt	6dc <main+0x2ec>
 708:	mov	r0, #0
 70c:	ldr	r4, [sp, #8]
 710:	ldr	r5, [sp, #12]
 714:	ldr	r6, [sp, #16]
 718:	ldr	lr, [sp, #4]
 71c:	add	sp, sp, #192	; 0xc0
 720:	bx	lr
 724:	.word	0x00000002
 728:	.word	0x000000f1
 72c:	.word	0x00000389
 730:	.word	0x000000ac
 734:	.word	0x00000210
 738:	.word	0x00000061
 73c:	.word	0x0000015e
 740:	.word	0x000001a5
 744:	.word	0x00000000
 748:	.word	0x00000039
 74c:	.word	0x0000028b
 750:	.word	0x000001dc
 754:	.word	0x0000009a
 758:	.word	0x00000137
 75c:	.word	0x000002fb
 760:	.word	0x00000342
 764:	.word	0x000002c7
 768:	.word	0x000002c3
 76c:	.word	0x00000257
	...
