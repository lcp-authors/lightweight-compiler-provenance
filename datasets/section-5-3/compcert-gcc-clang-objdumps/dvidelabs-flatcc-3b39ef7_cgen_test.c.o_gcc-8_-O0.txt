
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/CMakeFiles/cgen_test.dir/cgen_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #3968	; 0xf80
  10:	sub	sp, sp, #8
  14:	movw	r3, #0
  18:	movt	r3, #0
  1c:	str	r3, [fp, #-12]
  20:	movw	r2, #0
  24:	movt	r2, #0
  28:	sub	r3, fp, #3744	; 0xea0
  2c:	sub	r3, r3, #4
  30:	sub	r3, r3, #4
  34:	mov	r1, r2
  38:	movw	r2, #3735	; 0xe97
  3c:	mov	r0, r3
  40:	bl	0 <memcpy>
  44:	mov	r3, #0
  48:	str	r3, [fp, #-16]
  4c:	mvn	r3, #0
  50:	str	r3, [fp, #-8]
  54:	sub	r3, fp, #3968	; 0xf80
  58:	sub	r3, r3, #4
  5c:	sub	r3, r3, #8
  60:	mov	r0, r3
  64:	bl	0 <flatcc_init_options>
  68:	mov	r3, #1
  6c:	str	r3, [fp, #-3836]	; 0xfffff104
  70:	mov	r3, #1
  74:	str	r3, [fp, #-3828]	; 0xfffff10c
  78:	mov	r3, #1
  7c:	str	r3, [fp, #-3832]	; 0xfffff108
  80:	mov	r3, #1
  84:	str	r3, [fp, #-3824]	; 0xfffff110
  88:	mov	r3, #1
  8c:	str	r3, [fp, #-3872]	; 0xfffff0e0
  90:	sub	r0, fp, #3968	; 0xf80
  94:	sub	r0, r0, #4
  98:	sub	r0, r0, #8
  9c:	mov	r3, #0
  a0:	mov	r2, #0
  a4:	ldr	r1, [fp, #-12]
  a8:	bl	0 <flatcc_create_context>
  ac:	str	r0, [fp, #-16]
  b0:	ldr	r3, [fp, #-16]
  b4:	cmp	r3, #0
  b8:	bne	e4 <main+0xe4>
  bc:	movw	r3, #0
  c0:	movt	r3, #0
  c4:	ldr	r3, [r3]
  c8:	mov	r2, #41	; 0x29
  cc:	mov	r1, #1
  d0:	movw	r0, #0
  d4:	movt	r0, #0
  d8:	bl	0 <fwrite>
  dc:	mvn	r3, #0
  e0:	b	1e8 <main+0x1e8>
  e4:	sub	r3, fp, #3744	; 0xea0
  e8:	sub	r3, r3, #4
  ec:	sub	r3, r3, #4
  f0:	movw	r2, #3735	; 0xe97
  f4:	mov	r1, r3
  f8:	ldr	r0, [fp, #-16]
  fc:	bl	0 <flatcc_parse_buffer>
 100:	str	r0, [fp, #-8]
 104:	ldr	r3, [fp, #-8]
 108:	cmp	r3, #0
 10c:	beq	134 <main+0x134>
 110:	movw	r3, #0
 114:	movt	r3, #0
 118:	ldr	r3, [r3]
 11c:	mov	r2, #20
 120:	mov	r1, #1
 124:	movw	r0, #0
 128:	movt	r0, #0
 12c:	bl	0 <fwrite>
 130:	b	1dc <main+0x1dc>
 134:	movw	r3, #0
 138:	movt	r3, #0
 13c:	ldr	r3, [r3]
 140:	mov	r2, #17
 144:	mov	r1, #1
 148:	movw	r0, #0
 14c:	movt	r0, #0
 150:	bl	0 <fwrite>
 154:	movw	r3, #0
 158:	movt	r3, #0
 15c:	ldr	r3, [r3]
 160:	mov	r2, #31
 164:	mov	r1, #1
 168:	movw	r0, #0
 16c:	movt	r0, #0
 170:	bl	0 <fwrite>
 174:	ldr	r0, [fp, #-16]
 178:	bl	0 <flatcc_generate_files>
 17c:	mov	r3, r0
 180:	cmp	r3, #0
 184:	beq	1ac <main+0x1ac>
 188:	movw	r3, #0
 18c:	movt	r3, #0
 190:	ldr	r3, [r3]
 194:	mov	r2, #32
 198:	mov	r1, #1
 19c:	movw	r0, #0
 1a0:	movt	r0, #0
 1a4:	bl	0 <fwrite>
 1a8:	b	1dc <main+0x1dc>
 1ac:	movw	r3, #0
 1b0:	movt	r3, #0
 1b4:	ldr	r0, [r3]
 1b8:	sub	r3, fp, #3744	; 0xea0
 1bc:	sub	r3, r3, #4
 1c0:	sub	r3, r3, #4
 1c4:	mov	r2, r3
 1c8:	movw	r1, #0
 1cc:	movt	r1, #0
 1d0:	bl	0 <fprintf>
 1d4:	mov	r3, #0
 1d8:	str	r3, [fp, #-8]
 1dc:	ldr	r0, [fp, #-16]
 1e0:	bl	0 <flatcc_destroy_context>
 1e4:	ldr	r3, [fp, #-8]
 1e8:	mov	r0, r3
 1ec:	sub	sp, fp, #4
 1f0:	ldr	fp, [sp]
 1f4:	add	sp, sp, #4
 1f8:	pop	{pc}		; (ldr pc, [sp], #4)
