
../compcert-repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	10f88 <_start@@Base+0x3c>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <coda_match_filefilter@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <coda_match_filefilter@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r2, r1, ip, asr r2

00010da8 <coda_match_filefilter@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #73728	; 0x12000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <coda_expression_eval_integer@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #73728	; 0x12000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <strcmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #73728	; 0x12000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <printf@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <coda_set_error@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <coda_open@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <free@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <coda_set_definition_path_conditional@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <coda_set_definition_path@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <coda_expression_eval_bool@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <coda_cursor_set_product@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <coda_done@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <__libc_start_main@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <coda_expression_delete@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <__gmon_start__@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #73728	; 0x12000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <fprintf@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #73728	; 0x12000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <coda_init@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #73728	; 0x12000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <coda_set_option_perform_conversions@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <coda_expression_eval_string@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <coda_expression_get_type@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <coda_close@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <coda_expression_is_constant@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <coda_expression_eval_float@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <coda_expression_eval_node@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <coda_errno_to_string@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <coda_expression_get_type_name@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <coda_expression_from_string@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <coda_get_libcoda_version@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <coda_get_errno@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <abort@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <coda_str64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <__assert_fail@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010f4c <_start@@Base>:
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <_start@@Base+0x30>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <_start@@Base+0x34>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <_start@@Base+0x38>
   10f74:	bl	10e38 <__libc_start_main@plt>
   10f78:	bl	10f28 <abort@plt>
   10f7c:	andeq	r2, r1, r4, ror r3
   10f80:	andeq	r1, r1, r0, lsl #5
   10f84:	andeq	r2, r1, r4, lsl r3
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <_start@@Base+0x58>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <_start@@Base+0x5c>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10e50 <__gmon_start__@plt>
   10fa4:	andeq	r2, r1, r8, rrx
   10fa8:	muleq	r0, r8, r0
   10fac:	ldr	r0, [pc, #24]	; 10fcc <_start@@Base+0x80>
   10fb0:	ldr	r3, [pc, #24]	; 10fd0 <_start@@Base+0x84>
   10fb4:	cmp	r3, r0
   10fb8:	bxeq	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <_start@@Base+0x88>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:	andeq	r3, r2, r4, lsr #1
   10fd0:	andeq	r3, r2, r4, lsr #1
   10fd4:	andeq	r0, r0, r0
   10fd8:	ldr	r0, [pc, #36]	; 11004 <_start@@Base+0xb8>
   10fdc:	ldr	r1, [pc, #36]	; 11008 <_start@@Base+0xbc>
   10fe0:	sub	r1, r1, r0
   10fe4:	asr	r1, r1, #2
   10fe8:	add	r1, r1, r1, lsr #31
   10fec:	asrs	r1, r1, #1
   10ff0:	bxeq	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <_start@@Base+0xc0>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:	andeq	r3, r2, r4, lsr #1
   11008:	andeq	r3, r2, r4, lsr #1
   1100c:	andeq	r0, r0, r0
   11010:	push	{r4, lr}
   11014:	ldr	r4, [pc, #24]	; 11034 <_start@@Base+0xe8>
   11018:	ldrb	r3, [r4]
   1101c:	cmp	r3, #0
   11020:	popne	{r4, pc}
   11024:	bl	10fac <_start@@Base+0x60>
   11028:	mov	r3, #1
   1102c:	strb	r3, [r4]
   11030:	pop	{r4, pc}
   11034:	andeq	r3, r2, ip, lsr #1
   11038:	b	10fd8 <_start@@Base+0x8c>

0001103c <callback@@Base>:
   1103c:	push	{fp, lr}
   11040:	mov	fp, sp
   11044:	sub	sp, sp, #24
   11048:	str	r0, [fp, #-8]
   1104c:	str	r1, [sp, #12]
   11050:	str	r2, [sp, #8]
   11054:	str	r3, [sp, #4]
   11058:	ldr	r0, [sp, #12]
   1105c:	cmp	r0, #0
   11060:	bne	11088 <callback@@Base+0x4c>
   11064:	movw	r0, #12456	; 0x30a8
   11068:	movt	r0, #2
   1106c:	ldr	r0, [r0]
   11070:	ldr	r2, [sp, #8]
   11074:	ldr	r3, [fp, #-8]
   11078:	movw	r1, #9092	; 0x2384
   1107c:	movt	r1, #1
   11080:	bl	10e80 <fprintf@plt>
   11084:	b	110e8 <callback@@Base+0xac>
   11088:	ldr	r0, [sp, #12]
   1108c:	cmp	r0, #2
   11090:	bne	110b4 <callback@@Base+0x78>
   11094:	movw	r0, #12456	; 0x30a8
   11098:	movt	r0, #2
   1109c:	ldr	r0, [r0]
   110a0:	ldr	r2, [fp, #-8]
   110a4:	movw	r1, #9110	; 0x2396
   110a8:	movt	r1, #1
   110ac:	bl	10e80 <fprintf@plt>
   110b0:	b	110e4 <callback@@Base+0xa8>
   110b4:	ldr	r0, [sp, #12]
   110b8:	cmp	r0, #1
   110bc:	bne	110e0 <callback@@Base+0xa4>
   110c0:	movw	r0, #12456	; 0x30a8
   110c4:	movt	r0, #2
   110c8:	ldr	r0, [r0]
   110cc:	ldr	r2, [fp, #-8]
   110d0:	ldr	r3, [sp, #8]
   110d4:	movw	r1, #9148	; 0x23bc
   110d8:	movt	r1, #1
   110dc:	bl	10e80 <fprintf@plt>
   110e0:	b	110e4 <callback@@Base+0xa8>
   110e4:	b	110e8 <callback@@Base+0xac>
   110e8:	ldr	r0, [sp, #12]
   110ec:	cmp	r0, #4
   110f0:	bne	11104 <callback@@Base+0xc8>
   110f4:	ldr	r0, [fp, #-8]
   110f8:	bl	11118 <callback@@Base+0xdc>
   110fc:	str	r0, [fp, #-4]
   11100:	b	1110c <callback@@Base+0xd0>
   11104:	movw	r0, #0
   11108:	str	r0, [fp, #-4]
   1110c:	ldr	r0, [fp, #-4]
   11110:	mov	sp, fp
   11114:	pop	{fp, pc}
   11118:	push	{r4, r5, fp, lr}
   1111c:	add	fp, sp, #8
   11120:	sub	sp, sp, #560	; 0x230
   11124:	str	r0, [fp, #-16]
   11128:	movw	r0, #0
   1112c:	str	r0, [fp, #-20]	; 0xffffffec
   11130:	ldr	r0, [fp, #-16]
   11134:	sub	r1, fp, #20
   11138:	bl	10de4 <coda_open@plt>
   1113c:	cmp	r0, #0
   11140:	beq	11150 <callback@@Base+0x114>
   11144:	movw	r0, #1
   11148:	str	r0, [fp, #-12]
   1114c:	b	11274 <callback@@Base+0x238>
   11150:	ldr	r1, [fp, #-20]	; 0xffffffec
   11154:	add	r0, sp, #24
   11158:	bl	10e20 <coda_cursor_set_product@plt>
   1115c:	cmp	r0, #0
   11160:	beq	11178 <callback@@Base+0x13c>
   11164:	ldr	r0, [fp, #-20]	; 0xffffffec
   11168:	bl	10ebc <coda_close@plt>
   1116c:	movw	r1, #1
   11170:	str	r1, [fp, #-12]
   11174:	b	11274 <callback@@Base+0x238>
   11178:	movw	r0, #12464	; 0x30b0
   1117c:	movt	r0, #2
   11180:	ldr	r0, [r0]
   11184:	movw	r1, #0
   11188:	cmp	r0, r1
   1118c:	beq	11204 <callback@@Base+0x1c8>
   11190:	movw	r0, #12464	; 0x30b0
   11194:	movt	r0, #2
   11198:	ldr	r0, [r0]
   1119c:	add	r1, sp, #24
   111a0:	bl	10ee0 <coda_expression_eval_node@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	11200 <callback@@Base+0x1c4>
   111ac:	movw	r0, #12456	; 0x30a8
   111b0:	movt	r0, #2
   111b4:	ldr	r0, [r0]
   111b8:	str	r0, [sp, #20]
   111bc:	bl	10f1c <coda_get_errno@plt>
   111c0:	ldr	r0, [r0]
   111c4:	bl	10eec <coda_errno_to_string@plt>
   111c8:	ldr	r1, [sp, #20]
   111cc:	str	r0, [sp, #16]
   111d0:	mov	r0, r1
   111d4:	movw	r1, #9637	; 0x25a5
   111d8:	movt	r1, #1
   111dc:	ldr	r2, [sp, #16]
   111e0:	bl	10e80 <fprintf@plt>
   111e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   111e8:	str	r0, [sp, #12]
   111ec:	mov	r0, r1
   111f0:	bl	10ebc <coda_close@plt>
   111f4:	movw	r1, #0
   111f8:	str	r1, [fp, #-12]
   111fc:	b	11274 <callback@@Base+0x238>
   11200:	b	11204 <callback@@Base+0x1c8>
   11204:	add	r0, sp, #24
   11208:	bl	11a14 <main@@Base+0x794>
   1120c:	cmp	r0, #0
   11210:	beq	11250 <callback@@Base+0x214>
   11214:	movw	r0, #12456	; 0x30a8
   11218:	movt	r0, #2
   1121c:	ldr	r0, [r0]
   11220:	str	r0, [sp, #8]
   11224:	bl	10f1c <coda_get_errno@plt>
   11228:	ldr	r0, [r0]
   1122c:	bl	10eec <coda_errno_to_string@plt>
   11230:	ldr	r3, [fp, #-16]
   11234:	ldr	r1, [sp, #8]
   11238:	str	r0, [sp, #4]
   1123c:	mov	r0, r1
   11240:	movw	r1, #9092	; 0x2384
   11244:	movt	r1, #1
   11248:	ldr	r2, [sp, #4]
   1124c:	bl	10e80 <fprintf@plt>
   11250:	ldr	r0, [fp, #-20]	; 0xffffffec
   11254:	bl	10ebc <coda_close@plt>
   11258:	cmp	r0, #0
   1125c:	beq	1126c <callback@@Base+0x230>
   11260:	movw	r0, #1
   11264:	str	r0, [fp, #-12]
   11268:	b	11274 <callback@@Base+0x238>
   1126c:	movw	r0, #0
   11270:	str	r0, [fp, #-12]
   11274:	ldr	r0, [fp, #-12]
   11278:	sub	sp, fp, #8
   1127c:	pop	{r4, r5, fp, pc}

00011280 <main@@Base>:
   11280:	push	{fp, lr}
   11284:	mov	fp, sp
   11288:	sub	sp, sp, #152	; 0x98
   1128c:	movw	r2, #0
   11290:	str	r2, [fp, #-4]
   11294:	str	r0, [fp, #-8]
   11298:	str	r1, [fp, #-12]
   1129c:	movw	r0, #1
   112a0:	str	r0, [fp, #-16]
   112a4:	str	r2, [fp, #-20]	; 0xffffffec
   112a8:	ldr	r0, [fp, #-8]
   112ac:	cmp	r0, #1
   112b0:	beq	112ec <main@@Base+0x6c>
   112b4:	ldr	r0, [fp, #-12]
   112b8:	ldr	r0, [r0, #4]
   112bc:	movw	r1, #9184	; 0x23e0
   112c0:	movt	r1, #1
   112c4:	bl	10dc0 <strcmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112ec <main@@Base+0x6c>
   112d0:	ldr	r0, [fp, #-12]
   112d4:	ldr	r0, [r0, #4]
   112d8:	movw	r1, #9187	; 0x23e3
   112dc:	movt	r1, #1
   112e0:	bl	10dc0 <strcmp@plt>
   112e4:	cmp	r0, #0
   112e8:	bne	112f8 <main@@Base+0x78>
   112ec:	bl	11ca8 <main@@Base+0xa28>
   112f0:	movw	r0, #0
   112f4:	bl	10e68 <exit@plt>
   112f8:	ldr	r0, [fp, #-12]
   112fc:	ldr	r0, [r0, #4]
   11300:	movw	r1, #9194	; 0x23ea
   11304:	movt	r1, #1
   11308:	bl	10dc0 <strcmp@plt>
   1130c:	cmp	r0, #0
   11310:	beq	11330 <main@@Base+0xb0>
   11314:	ldr	r0, [fp, #-12]
   11318:	ldr	r0, [r0, #4]
   1131c:	movw	r1, #9197	; 0x23ed
   11320:	movt	r1, #1
   11324:	bl	10dc0 <strcmp@plt>
   11328:	cmp	r0, #0
   1132c:	bne	1133c <main@@Base+0xbc>
   11330:	bl	11fac <main@@Base+0xd2c>
   11334:	movw	r0, #0
   11338:	bl	10e68 <exit@plt>
   1133c:	movw	r0, #1
   11340:	str	r0, [fp, #-24]	; 0xffffffe8
   11344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11348:	add	r0, r0, #1
   1134c:	ldr	r1, [fp, #-8]
   11350:	cmp	r0, r1
   11354:	bge	113a4 <main@@Base+0x124>
   11358:	ldr	r0, [fp, #-12]
   1135c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11360:	add	r0, r0, r1, lsl #2
   11364:	ldr	r0, [r0]
   11368:	movw	r1, #9207	; 0x23f7
   1136c:	movt	r1, #1
   11370:	bl	10dc0 <strcmp@plt>
   11374:	cmp	r0, #0
   11378:	bne	113a4 <main@@Base+0x124>
   1137c:	ldr	r0, [fp, #-12]
   11380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11384:	add	r1, r1, #1
   11388:	add	r0, r0, r1, lsl #2
   1138c:	ldr	r0, [r0]
   11390:	bl	10e08 <coda_set_definition_path@plt>
   11394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11398:	add	r1, r1, #2
   1139c:	str	r1, [fp, #-24]	; 0xffffffe8
   113a0:	b	11418 <main@@Base+0x198>
   113a4:	movw	r0, #9210	; 0x23fa
   113a8:	movt	r0, #1
   113ac:	str	r0, [fp, #-28]	; 0xffffffe4
   113b0:	ldr	r0, [fp, #-12]
   113b4:	ldr	r0, [r0]
   113b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   113bc:	movw	r1, #0
   113c0:	bl	10dfc <coda_set_definition_path_conditional@plt>
   113c4:	cmp	r0, #0
   113c8:	beq	11414 <main@@Base+0x194>
   113cc:	movw	r0, #12456	; 0x30a8
   113d0:	movt	r0, #2
   113d4:	ldr	r0, [r0]
   113d8:	str	r0, [fp, #-32]	; 0xffffffe0
   113dc:	bl	10f1c <coda_get_errno@plt>
   113e0:	ldr	r0, [r0]
   113e4:	bl	10eec <coda_errno_to_string@plt>
   113e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   113ec:	str	r0, [fp, #-36]	; 0xffffffdc
   113f0:	mov	r0, r1
   113f4:	movw	r1, #9236	; 0x2414
   113f8:	movt	r1, #1
   113fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11400:	bl	10e80 <fprintf@plt>
   11404:	movw	r1, #1
   11408:	str	r0, [fp, #-40]	; 0xffffffd8
   1140c:	mov	r0, r1
   11410:	bl	10e68 <exit@plt>
   11414:	b	11418 <main@@Base+0x198>
   11418:	b	1141c <main@@Base+0x19c>
   1141c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11420:	ldr	r1, [fp, #-8]
   11424:	cmp	r0, r1
   11428:	bge	1160c <main@@Base+0x38c>
   1142c:	ldr	r0, [fp, #-12]
   11430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11434:	add	r0, r0, r1, lsl #2
   11438:	ldr	r0, [r0]
   1143c:	movw	r1, #9247	; 0x241f
   11440:	movt	r1, #1
   11444:	bl	10dc0 <strcmp@plt>
   11448:	cmp	r0, #0
   1144c:	beq	11474 <main@@Base+0x1f4>
   11450:	ldr	r0, [fp, #-12]
   11454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11458:	add	r0, r0, r1, lsl #2
   1145c:	ldr	r0, [r0]
   11460:	movw	r1, #9250	; 0x2422
   11464:	movt	r1, #1
   11468:	bl	10dc0 <strcmp@plt>
   1146c:	cmp	r0, #0
   11470:	bne	11480 <main@@Base+0x200>
   11474:	movw	r0, #1
   11478:	str	r0, [fp, #-20]	; 0xffffffec
   1147c:	b	115fc <main@@Base+0x37c>
   11480:	ldr	r0, [fp, #-12]
   11484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11488:	add	r0, r0, r1, lsl #2
   1148c:	ldr	r0, [r0]
   11490:	movw	r1, #9258	; 0x242a
   11494:	movt	r1, #1
   11498:	bl	10dc0 <strcmp@plt>
   1149c:	cmp	r0, #0
   114a0:	beq	114c8 <main@@Base+0x248>
   114a4:	ldr	r0, [fp, #-12]
   114a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114ac:	add	r0, r0, r1, lsl #2
   114b0:	ldr	r0, [r0]
   114b4:	movw	r1, #9261	; 0x242d
   114b8:	movt	r1, #1
   114bc:	bl	10dc0 <strcmp@plt>
   114c0:	cmp	r0, #0
   114c4:	bne	114d4 <main@@Base+0x254>
   114c8:	movw	r0, #0
   114cc:	str	r0, [fp, #-16]
   114d0:	b	115f8 <main@@Base+0x378>
   114d4:	ldr	r0, [fp, #-12]
   114d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114dc:	add	r0, r0, r1, lsl #2
   114e0:	ldr	r0, [r0]
   114e4:	movw	r1, #9283	; 0x2443
   114e8:	movt	r1, #1
   114ec:	bl	10dc0 <strcmp@plt>
   114f0:	cmp	r0, #0
   114f4:	bne	115ac <main@@Base+0x32c>
   114f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114fc:	add	r0, r0, #1
   11500:	ldr	r1, [fp, #-8]
   11504:	cmp	r0, r1
   11508:	bge	115ac <main@@Base+0x32c>
   1150c:	ldr	r0, [fp, #-12]
   11510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11514:	add	r1, r1, #1
   11518:	add	r0, r0, r1, lsl #2
   1151c:	ldr	r0, [r0]
   11520:	ldrb	r0, [r0]
   11524:	cmp	r0, #45	; 0x2d
   11528:	beq	115ac <main@@Base+0x32c>
   1152c:	ldr	r0, [fp, #-12]
   11530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11534:	add	r1, r1, #1
   11538:	add	r0, r0, r1, lsl #2
   1153c:	ldr	r0, [r0]
   11540:	movw	r1, #12464	; 0x30b0
   11544:	movt	r1, #2
   11548:	bl	10f04 <coda_expression_from_string@plt>
   1154c:	cmp	r0, #0
   11550:	beq	1159c <main@@Base+0x31c>
   11554:	movw	r0, #12456	; 0x30a8
   11558:	movt	r0, #2
   1155c:	ldr	r0, [r0]
   11560:	str	r0, [fp, #-44]	; 0xffffffd4
   11564:	bl	10f1c <coda_get_errno@plt>
   11568:	ldr	r0, [r0]
   1156c:	bl	10eec <coda_errno_to_string@plt>
   11570:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11574:	str	r0, [fp, #-48]	; 0xffffffd0
   11578:	mov	r0, r1
   1157c:	movw	r1, #9286	; 0x2446
   11580:	movt	r1, #1
   11584:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11588:	bl	10e80 <fprintf@plt>
   1158c:	movw	r1, #1
   11590:	str	r0, [fp, #-52]	; 0xffffffcc
   11594:	mov	r0, r1
   11598:	bl	10e68 <exit@plt>
   1159c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115a0:	add	r0, r0, #1
   115a4:	str	r0, [fp, #-24]	; 0xffffffe8
   115a8:	b	115f4 <main@@Base+0x374>
   115ac:	ldr	r0, [fp, #-12]
   115b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115b4:	add	r0, r0, r1, lsl #2
   115b8:	ldr	r0, [r0]
   115bc:	ldrb	r0, [r0]
   115c0:	cmp	r0, #45	; 0x2d
   115c4:	beq	115cc <main@@Base+0x34c>
   115c8:	b	1160c <main@@Base+0x38c>
   115cc:	movw	r0, #12456	; 0x30a8
   115d0:	movt	r0, #2
   115d4:	ldr	r0, [r0]
   115d8:	movw	r1, #9323	; 0x246b
   115dc:	movt	r1, #1
   115e0:	bl	10e80 <fprintf@plt>
   115e4:	str	r0, [fp, #-56]	; 0xffffffc8
   115e8:	bl	11ca8 <main@@Base+0xa28>
   115ec:	movw	r0, #1
   115f0:	bl	10e68 <exit@plt>
   115f4:	b	115f8 <main@@Base+0x378>
   115f8:	b	115fc <main@@Base+0x37c>
   115fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11600:	add	r0, r0, #1
   11604:	str	r0, [fp, #-24]	; 0xffffffe8
   11608:	b	1141c <main@@Base+0x19c>
   1160c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11610:	ldr	r1, [fp, #-8]
   11614:	cmp	r0, r1
   11618:	blt	11644 <main@@Base+0x3c4>
   1161c:	movw	r0, #12456	; 0x30a8
   11620:	movt	r0, #2
   11624:	ldr	r0, [r0]
   11628:	movw	r1, #9323	; 0x246b
   1162c:	movt	r1, #1
   11630:	bl	10e80 <fprintf@plt>
   11634:	str	r0, [fp, #-60]	; 0xffffffc4
   11638:	bl	11ca8 <main@@Base+0xa28>
   1163c:	movw	r0, #1
   11640:	bl	10e68 <exit@plt>
   11644:	ldr	r0, [fp, #-12]
   11648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1164c:	add	r0, r0, r1, lsl #2
   11650:	ldr	r0, [r0]
   11654:	movw	r1, #12468	; 0x30b4
   11658:	movt	r1, #2
   1165c:	bl	10f04 <coda_expression_from_string@plt>
   11660:	cmp	r0, #0
   11664:	beq	116b0 <main@@Base+0x430>
   11668:	movw	r0, #12456	; 0x30a8
   1166c:	movt	r0, #2
   11670:	ldr	r0, [r0]
   11674:	str	r0, [fp, #-64]	; 0xffffffc0
   11678:	bl	10f1c <coda_get_errno@plt>
   1167c:	ldr	r0, [r0]
   11680:	bl	10eec <coda_errno_to_string@plt>
   11684:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11688:	str	r0, [fp, #-68]	; 0xffffffbc
   1168c:	mov	r0, r1
   11690:	movw	r1, #9349	; 0x2485
   11694:	movt	r1, #1
   11698:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1169c:	bl	10e80 <fprintf@plt>
   116a0:	movw	r1, #1
   116a4:	str	r0, [fp, #-72]	; 0xffffffb8
   116a8:	mov	r0, r1
   116ac:	bl	10e68 <exit@plt>
   116b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116b4:	add	r0, r0, #1
   116b8:	str	r0, [fp, #-24]	; 0xffffffe8
   116bc:	movw	r0, #12468	; 0x30b4
   116c0:	movt	r0, #2
   116c4:	ldr	r0, [r0]
   116c8:	movw	r1, #12472	; 0x30b8
   116cc:	movt	r1, #2
   116d0:	bl	10eb0 <coda_expression_get_type@plt>
   116d4:	cmp	r0, #0
   116d8:	beq	11724 <main@@Base+0x4a4>
   116dc:	movw	r0, #12456	; 0x30a8
   116e0:	movt	r0, #2
   116e4:	ldr	r0, [r0]
   116e8:	str	r0, [sp, #76]	; 0x4c
   116ec:	bl	10f1c <coda_get_errno@plt>
   116f0:	ldr	r0, [r0]
   116f4:	bl	10eec <coda_errno_to_string@plt>
   116f8:	ldr	r1, [sp, #76]	; 0x4c
   116fc:	str	r0, [sp, #72]	; 0x48
   11700:	mov	r0, r1
   11704:	movw	r1, #9236	; 0x2414
   11708:	movt	r1, #1
   1170c:	ldr	r2, [sp, #72]	; 0x48
   11710:	bl	10e80 <fprintf@plt>
   11714:	movw	r1, #1
   11718:	str	r0, [sp, #68]	; 0x44
   1171c:	mov	r0, r1
   11720:	bl	10e68 <exit@plt>
   11724:	movw	r0, #12472	; 0x30b8
   11728:	movt	r0, #2
   1172c:	ldr	r0, [r0]
   11730:	cmp	r0, #4
   11734:	beq	1174c <main@@Base+0x4cc>
   11738:	movw	r0, #12472	; 0x30b8
   1173c:	movt	r0, #2
   11740:	ldr	r0, [r0]
   11744:	cmp	r0, #5
   11748:	bne	1179c <main@@Base+0x51c>
   1174c:	movw	r0, #12456	; 0x30a8
   11750:	movt	r0, #2
   11754:	ldr	r0, [r0]
   11758:	movw	r1, #12472	; 0x30b8
   1175c:	movt	r1, #2
   11760:	ldr	r1, [r1]
   11764:	str	r0, [sp, #64]	; 0x40
   11768:	mov	r0, r1
   1176c:	bl	10ef8 <coda_expression_get_type_name@plt>
   11770:	ldr	r1, [sp, #64]	; 0x40
   11774:	str	r0, [sp, #60]	; 0x3c
   11778:	mov	r0, r1
   1177c:	movw	r1, #9381	; 0x24a5
   11780:	movt	r1, #1
   11784:	ldr	r2, [sp, #60]	; 0x3c
   11788:	bl	10e80 <fprintf@plt>
   1178c:	movw	r1, #1
   11790:	str	r0, [sp, #56]	; 0x38
   11794:	mov	r0, r1
   11798:	bl	10e68 <exit@plt>
   1179c:	ldr	r0, [fp, #-20]	; 0xffffffec
   117a0:	cmp	r0, #0
   117a4:	beq	117ec <main@@Base+0x56c>
   117a8:	movw	r0, #12468	; 0x30b4
   117ac:	movt	r0, #2
   117b0:	ldr	r0, [r0]
   117b4:	bl	10e44 <coda_expression_delete@plt>
   117b8:	movw	r0, #12464	; 0x30b0
   117bc:	movt	r0, #2
   117c0:	ldr	r0, [r0]
   117c4:	movw	r1, #0
   117c8:	cmp	r0, r1
   117cc:	beq	117e0 <main@@Base+0x560>
   117d0:	movw	r0, #12464	; 0x30b0
   117d4:	movt	r0, #2
   117d8:	ldr	r0, [r0]
   117dc:	bl	10e44 <coda_expression_delete@plt>
   117e0:	movw	r0, #0
   117e4:	str	r0, [fp, #-4]
   117e8:	b	11a08 <main@@Base+0x788>
   117ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117f0:	ldr	r1, [fp, #-8]
   117f4:	cmp	r0, r1
   117f8:	bge	118ec <main@@Base+0x66c>
   117fc:	bl	10e8c <coda_init@plt>
   11800:	cmp	r0, #0
   11804:	beq	11850 <main@@Base+0x5d0>
   11808:	movw	r0, #12456	; 0x30a8
   1180c:	movt	r0, #2
   11810:	ldr	r0, [r0]
   11814:	str	r0, [sp, #52]	; 0x34
   11818:	bl	10f1c <coda_get_errno@plt>
   1181c:	ldr	r0, [r0]
   11820:	bl	10eec <coda_errno_to_string@plt>
   11824:	ldr	r1, [sp, #52]	; 0x34
   11828:	str	r0, [sp, #48]	; 0x30
   1182c:	mov	r0, r1
   11830:	movw	r1, #9236	; 0x2414
   11834:	movt	r1, #1
   11838:	ldr	r2, [sp, #48]	; 0x30
   1183c:	bl	10e80 <fprintf@plt>
   11840:	movw	r1, #1
   11844:	str	r0, [sp, #44]	; 0x2c
   11848:	mov	r0, r1
   1184c:	bl	10e68 <exit@plt>
   11850:	ldr	r0, [fp, #-16]
   11854:	bl	10e98 <coda_set_option_perform_conversions@plt>
   11858:	ldr	r1, [fp, #-8]
   1185c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11860:	sub	r1, r1, r2
   11864:	ldr	r3, [fp, #-12]
   11868:	add	r2, r3, r2, lsl #2
   1186c:	movw	r3, #0
   11870:	str	r0, [sp, #40]	; 0x28
   11874:	mov	r0, r3
   11878:	movw	ip, #4156	; 0x103c
   1187c:	movt	ip, #1
   11880:	str	r3, [sp, #36]	; 0x24
   11884:	mov	r3, ip
   11888:	ldr	ip, [sp, #36]	; 0x24
   1188c:	str	ip, [sp]
   11890:	bl	10da8 <coda_match_filefilter@plt>
   11894:	cmp	r0, #0
   11898:	beq	118e4 <main@@Base+0x664>
   1189c:	movw	r0, #12456	; 0x30a8
   118a0:	movt	r0, #2
   118a4:	ldr	r0, [r0]
   118a8:	str	r0, [sp, #32]
   118ac:	bl	10f1c <coda_get_errno@plt>
   118b0:	ldr	r0, [r0]
   118b4:	bl	10eec <coda_errno_to_string@plt>
   118b8:	ldr	r1, [sp, #32]
   118bc:	str	r0, [sp, #28]
   118c0:	mov	r0, r1
   118c4:	movw	r1, #9236	; 0x2414
   118c8:	movt	r1, #1
   118cc:	ldr	r2, [sp, #28]
   118d0:	bl	10e80 <fprintf@plt>
   118d4:	movw	r1, #1
   118d8:	str	r0, [sp, #24]
   118dc:	mov	r0, r1
   118e0:	bl	10e68 <exit@plt>
   118e4:	bl	10e2c <coda_done@plt>
   118e8:	b	119c8 <main@@Base+0x748>
   118ec:	movw	r0, #12464	; 0x30b0
   118f0:	movt	r0, #2
   118f4:	ldr	r0, [r0]
   118f8:	movw	r1, #0
   118fc:	cmp	r0, r1
   11900:	beq	1192c <main@@Base+0x6ac>
   11904:	movw	r0, #12456	; 0x30a8
   11908:	movt	r0, #2
   1190c:	ldr	r0, [r0]
   11910:	movw	r1, #9428	; 0x24d4
   11914:	movt	r1, #1
   11918:	bl	10e80 <fprintf@plt>
   1191c:	movw	r1, #1
   11920:	str	r0, [sp, #20]
   11924:	mov	r0, r1
   11928:	bl	10e68 <exit@plt>
   1192c:	movw	r0, #12468	; 0x30b4
   11930:	movt	r0, #2
   11934:	ldr	r0, [r0]
   11938:	bl	10ec8 <coda_expression_is_constant@plt>
   1193c:	cmp	r0, #0
   11940:	bne	1196c <main@@Base+0x6ec>
   11944:	movw	r0, #12456	; 0x30a8
   11948:	movt	r0, #2
   1194c:	ldr	r0, [r0]
   11950:	movw	r1, #9525	; 0x2535
   11954:	movt	r1, #1
   11958:	bl	10e80 <fprintf@plt>
   1195c:	movw	r1, #1
   11960:	str	r0, [sp, #16]
   11964:	mov	r0, r1
   11968:	bl	10e68 <exit@plt>
   1196c:	movw	r0, #0
   11970:	bl	11a14 <main@@Base+0x794>
   11974:	cmp	r0, #0
   11978:	beq	119c4 <main@@Base+0x744>
   1197c:	movw	r0, #12456	; 0x30a8
   11980:	movt	r0, #2
   11984:	ldr	r0, [r0]
   11988:	str	r0, [sp, #12]
   1198c:	bl	10f1c <coda_get_errno@plt>
   11990:	ldr	r0, [r0]
   11994:	bl	10eec <coda_errno_to_string@plt>
   11998:	ldr	r1, [sp, #12]
   1199c:	str	r0, [sp, #8]
   119a0:	mov	r0, r1
   119a4:	movw	r1, #9236	; 0x2414
   119a8:	movt	r1, #1
   119ac:	ldr	r2, [sp, #8]
   119b0:	bl	10e80 <fprintf@plt>
   119b4:	movw	r1, #1
   119b8:	str	r0, [sp, #4]
   119bc:	mov	r0, r1
   119c0:	bl	10e68 <exit@plt>
   119c4:	b	119c8 <main@@Base+0x748>
   119c8:	movw	r0, #12468	; 0x30b4
   119cc:	movt	r0, #2
   119d0:	ldr	r0, [r0]
   119d4:	bl	10e44 <coda_expression_delete@plt>
   119d8:	movw	r0, #12464	; 0x30b0
   119dc:	movt	r0, #2
   119e0:	ldr	r0, [r0]
   119e4:	movw	r1, #0
   119e8:	cmp	r0, r1
   119ec:	beq	11a00 <main@@Base+0x780>
   119f0:	movw	r0, #12464	; 0x30b0
   119f4:	movt	r0, #2
   119f8:	ldr	r0, [r0]
   119fc:	bl	10e44 <coda_expression_delete@plt>
   11a00:	movw	r0, #0
   11a04:	str	r0, [fp, #-4]
   11a08:	ldr	r0, [fp, #-4]
   11a0c:	mov	sp, fp
   11a10:	pop	{fp, pc}
   11a14:	push	{fp, lr}
   11a18:	mov	fp, sp
   11a1c:	sub	sp, sp, #88	; 0x58
   11a20:	str	r0, [fp, #-8]
   11a24:	movw	r0, #12472	; 0x30b8
   11a28:	movt	r0, #2
   11a2c:	ldr	r0, [r0]
   11a30:	cmp	r0, #5
   11a34:	str	r0, [sp, #20]
   11a38:	bhi	11c94 <main@@Base+0xa14>
   11a3c:	add	r0, pc, #8
   11a40:	ldr	r1, [sp, #20]
   11a44:	ldr	r0, [r0, r1, lsl #2]
   11a48:	mov	pc, r0
   11a4c:	andeq	r1, r1, r4, ror #20
   11a50:	strdeq	r1, [r1], -ip
   11a54:	andeq	r1, r1, r4, ror fp
   11a58:	andeq	r1, r1, r0, ror #23
   11a5c:	andeq	r1, r1, r4, ror ip
   11a60:	andeq	r1, r1, r4, ror ip
   11a64:	movw	r0, #12468	; 0x30b4
   11a68:	movt	r0, #2
   11a6c:	ldr	r0, [r0]
   11a70:	ldr	r1, [fp, #-8]
   11a74:	sub	r2, fp, #12
   11a78:	bl	10e14 <coda_expression_eval_bool@plt>
   11a7c:	cmp	r0, #0
   11a80:	beq	11ab8 <main@@Base+0x838>
   11a84:	bl	10f1c <coda_get_errno@plt>
   11a88:	ldr	r0, [r0]
   11a8c:	bl	10eec <coda_errno_to_string@plt>
   11a90:	mvn	r1, #400	; 0x190
   11a94:	str	r0, [sp, #16]
   11a98:	mov	r0, r1
   11a9c:	movw	r1, #11496	; 0x2ce8
   11aa0:	movt	r1, #1
   11aa4:	ldr	r2, [sp, #16]
   11aa8:	bl	10dd8 <coda_set_error@plt>
   11aac:	mvn	r0, #0
   11ab0:	str	r0, [fp, #-4]
   11ab4:	b	11c9c <main@@Base+0xa1c>
   11ab8:	ldr	r0, [fp, #-12]
   11abc:	cmp	r0, #0
   11ac0:	movw	r0, #0
   11ac4:	movne	r0, #1
   11ac8:	tst	r0, #1
   11acc:	movw	r0, #11541	; 0x2d15
   11ad0:	movt	r0, #1
   11ad4:	movw	r1, #11536	; 0x2d10
   11ad8:	movt	r1, #1
   11adc:	movne	r0, r1
   11ae0:	movw	r1, #9243	; 0x241b
   11ae4:	movt	r1, #1
   11ae8:	str	r0, [sp, #12]
   11aec:	mov	r0, r1
   11af0:	ldr	r1, [sp, #12]
   11af4:	bl	10dcc <printf@plt>
   11af8:	b	11c94 <main@@Base+0xa14>
   11afc:	movw	r0, #12468	; 0x30b4
   11b00:	movt	r0, #2
   11b04:	ldr	r0, [r0]
   11b08:	ldr	r1, [fp, #-8]
   11b0c:	sub	r2, fp, #24
   11b10:	bl	10db4 <coda_expression_eval_integer@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	11b50 <main@@Base+0x8d0>
   11b1c:	bl	10f1c <coda_get_errno@plt>
   11b20:	ldr	r0, [r0]
   11b24:	bl	10eec <coda_errno_to_string@plt>
   11b28:	mvn	r1, #400	; 0x190
   11b2c:	str	r0, [sp, #8]
   11b30:	mov	r0, r1
   11b34:	movw	r1, #11547	; 0x2d1b
   11b38:	movt	r1, #1
   11b3c:	ldr	r2, [sp, #8]
   11b40:	bl	10dd8 <coda_set_error@plt>
   11b44:	mvn	r0, #0
   11b48:	str	r0, [fp, #-4]
   11b4c:	b	11c9c <main@@Base+0xa1c>
   11b50:	add	r2, sp, #43	; 0x2b
   11b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b58:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b5c:	bl	10f34 <coda_str64@plt>
   11b60:	add	r1, sp, #43	; 0x2b
   11b64:	movw	r0, #9243	; 0x241b
   11b68:	movt	r0, #1
   11b6c:	bl	10dcc <printf@plt>
   11b70:	b	11c94 <main@@Base+0xa14>
   11b74:	movw	r0, #12468	; 0x30b4
   11b78:	movt	r0, #2
   11b7c:	ldr	r0, [r0]
   11b80:	ldr	r1, [fp, #-8]
   11b84:	add	r2, sp, #32
   11b88:	bl	10ed4 <coda_expression_eval_float@plt>
   11b8c:	cmp	r0, #0
   11b90:	beq	11bc8 <main@@Base+0x948>
   11b94:	bl	10f1c <coda_get_errno@plt>
   11b98:	ldr	r0, [r0]
   11b9c:	bl	10eec <coda_errno_to_string@plt>
   11ba0:	mvn	r1, #400	; 0x190
   11ba4:	str	r0, [sp, #4]
   11ba8:	mov	r0, r1
   11bac:	movw	r1, #11587	; 0x2d43
   11bb0:	movt	r1, #1
   11bb4:	ldr	r2, [sp, #4]
   11bb8:	bl	10dd8 <coda_set_error@plt>
   11bbc:	mvn	r0, #0
   11bc0:	str	r0, [fp, #-4]
   11bc4:	b	11c9c <main@@Base+0xa1c>
   11bc8:	vldr	d16, [sp, #32]
   11bcc:	movw	r0, #11634	; 0x2d72
   11bd0:	movt	r0, #1
   11bd4:	vmov	r2, r3, d16
   11bd8:	bl	10dcc <printf@plt>
   11bdc:	b	11c94 <main@@Base+0xa14>
   11be0:	movw	r0, #0
   11be4:	str	r0, [sp, #28]
   11be8:	movw	r0, #12468	; 0x30b4
   11bec:	movt	r0, #2
   11bf0:	ldr	r0, [r0]
   11bf4:	ldr	r1, [fp, #-8]
   11bf8:	add	r2, sp, #28
   11bfc:	add	r3, sp, #24
   11c00:	bl	10ea4 <coda_expression_eval_string@plt>
   11c04:	cmp	r0, #0
   11c08:	beq	11c40 <main@@Base+0x9c0>
   11c0c:	bl	10f1c <coda_get_errno@plt>
   11c10:	ldr	r0, [r0]
   11c14:	bl	10eec <coda_errno_to_string@plt>
   11c18:	mvn	r1, #400	; 0x190
   11c1c:	str	r0, [sp]
   11c20:	mov	r0, r1
   11c24:	movw	r1, #11641	; 0x2d79
   11c28:	movt	r1, #1
   11c2c:	ldr	r2, [sp]
   11c30:	bl	10dd8 <coda_set_error@plt>
   11c34:	mvn	r0, #0
   11c38:	str	r0, [fp, #-4]
   11c3c:	b	11c9c <main@@Base+0xa1c>
   11c40:	ldr	r0, [sp, #28]
   11c44:	ldr	r1, [sp, #24]
   11c48:	bl	12004 <main@@Base+0xd84>
   11c4c:	movw	r0, #10413	; 0x28ad
   11c50:	movt	r0, #1
   11c54:	bl	10dcc <printf@plt>
   11c58:	ldr	r1, [sp, #28]
   11c5c:	movw	r2, #0
   11c60:	cmp	r1, r2
   11c64:	beq	11c70 <main@@Base+0x9f0>
   11c68:	ldr	r0, [sp, #28]
   11c6c:	bl	10df0 <free@plt>
   11c70:	b	11c94 <main@@Base+0xa14>
   11c74:	movw	r0, #11680	; 0x2da0
   11c78:	movt	r0, #1
   11c7c:	movw	r1, #11682	; 0x2da2
   11c80:	movt	r1, #1
   11c84:	movw	r2, #230	; 0xe6
   11c88:	movw	r3, #11760	; 0x2df0
   11c8c:	movt	r3, #1
   11c90:	bl	10f40 <__assert_fail@plt>
   11c94:	movw	r0, #0
   11c98:	str	r0, [fp, #-4]
   11c9c:	ldr	r0, [fp, #-4]
   11ca0:	mov	sp, fp
   11ca4:	pop	{fp, pc}
   11ca8:	push	{fp, lr}
   11cac:	mov	fp, sp
   11cb0:	sub	sp, sp, #152	; 0x98
   11cb4:	movw	r0, #9684	; 0x25d4
   11cb8:	movt	r0, #1
   11cbc:	bl	10dcc <printf@plt>
   11cc0:	movw	r1, #9692	; 0x25dc
   11cc4:	movt	r1, #1
   11cc8:	str	r0, [fp, #-4]
   11ccc:	mov	r0, r1
   11cd0:	bl	10dcc <printf@plt>
   11cd4:	movw	r1, #9771	; 0x262b
   11cd8:	movt	r1, #1
   11cdc:	str	r0, [fp, #-8]
   11ce0:	mov	r0, r1
   11ce4:	bl	10dcc <printf@plt>
   11ce8:	movw	r1, #9850	; 0x267a
   11cec:	movt	r1, #1
   11cf0:	str	r0, [fp, #-12]
   11cf4:	mov	r0, r1
   11cf8:	bl	10dcc <printf@plt>
   11cfc:	movw	r1, #9887	; 0x269f
   11d00:	movt	r1, #1
   11d04:	str	r0, [fp, #-16]
   11d08:	mov	r0, r1
   11d0c:	bl	10dcc <printf@plt>
   11d10:	movw	r1, #9962	; 0x26ea
   11d14:	movt	r1, #1
   11d18:	str	r0, [fp, #-20]	; 0xffffffec
   11d1c:	mov	r0, r1
   11d20:	bl	10dcc <printf@plt>
   11d24:	movw	r1, #10038	; 0x2736
   11d28:	movt	r1, #1
   11d2c:	str	r0, [fp, #-24]	; 0xffffffe8
   11d30:	mov	r0, r1
   11d34:	bl	10dcc <printf@plt>
   11d38:	movw	r1, #10413	; 0x28ad
   11d3c:	movt	r1, #1
   11d40:	str	r0, [fp, #-28]	; 0xffffffe4
   11d44:	mov	r0, r1
   11d48:	bl	10dcc <printf@plt>
   11d4c:	movw	r1, #10087	; 0x2767
   11d50:	movt	r1, #1
   11d54:	str	r0, [fp, #-32]	; 0xffffffe0
   11d58:	mov	r0, r1
   11d5c:	bl	10dcc <printf@plt>
   11d60:	movw	r1, #10105	; 0x2779
   11d64:	movt	r1, #1
   11d68:	str	r0, [fp, #-36]	; 0xffffffdc
   11d6c:	mov	r0, r1
   11d70:	bl	10dcc <printf@plt>
   11d74:	movw	r1, #10130	; 0x2792
   11d78:	movt	r1, #1
   11d7c:	str	r0, [fp, #-40]	; 0xffffffd8
   11d80:	mov	r0, r1
   11d84:	bl	10dcc <printf@plt>
   11d88:	movw	r1, #10211	; 0x27e3
   11d8c:	movt	r1, #1
   11d90:	str	r0, [fp, #-44]	; 0xffffffd4
   11d94:	mov	r0, r1
   11d98:	bl	10dcc <printf@plt>
   11d9c:	movw	r1, #10292	; 0x2834
   11da0:	movt	r1, #1
   11da4:	str	r0, [fp, #-48]	; 0xffffffd0
   11da8:	mov	r0, r1
   11dac:	bl	10dcc <printf@plt>
   11db0:	movw	r1, #10331	; 0x285b
   11db4:	movt	r1, #1
   11db8:	str	r0, [fp, #-52]	; 0xffffffcc
   11dbc:	mov	r0, r1
   11dc0:	bl	10dcc <printf@plt>
   11dc4:	movw	r1, #10390	; 0x2896
   11dc8:	movt	r1, #1
   11dcc:	str	r0, [fp, #-56]	; 0xffffffc8
   11dd0:	mov	r0, r1
   11dd4:	bl	10dcc <printf@plt>
   11dd8:	movw	r1, #10415	; 0x28af
   11ddc:	movt	r1, #1
   11de0:	str	r0, [fp, #-60]	; 0xffffffc4
   11de4:	mov	r0, r1
   11de8:	bl	10dcc <printf@plt>
   11dec:	movw	r1, #10490	; 0x28fa
   11df0:	movt	r1, #1
   11df4:	str	r0, [fp, #-64]	; 0xffffffc0
   11df8:	mov	r0, r1
   11dfc:	bl	10dcc <printf@plt>
   11e00:	movw	r1, #10566	; 0x2946
   11e04:	movt	r1, #1
   11e08:	str	r0, [fp, #-68]	; 0xffffffbc
   11e0c:	mov	r0, r1
   11e10:	bl	10dcc <printf@plt>
   11e14:	movw	r1, #10597	; 0x2965
   11e18:	movt	r1, #1
   11e1c:	str	r0, [fp, #-72]	; 0xffffffb8
   11e20:	mov	r0, r1
   11e24:	bl	10dcc <printf@plt>
   11e28:	movw	r1, #10674	; 0x29b2
   11e2c:	movt	r1, #1
   11e30:	str	r0, [sp, #76]	; 0x4c
   11e34:	mov	r0, r1
   11e38:	bl	10dcc <printf@plt>
   11e3c:	movw	r1, #10413	; 0x28ad
   11e40:	movt	r1, #1
   11e44:	str	r0, [sp, #72]	; 0x48
   11e48:	mov	r0, r1
   11e4c:	bl	10dcc <printf@plt>
   11e50:	movw	r1, #10722	; 0x29e2
   11e54:	movt	r1, #1
   11e58:	str	r0, [sp, #68]	; 0x44
   11e5c:	mov	r0, r1
   11e60:	bl	10dcc <printf@plt>
   11e64:	movw	r1, #10803	; 0x2a33
   11e68:	movt	r1, #1
   11e6c:	str	r0, [sp, #64]	; 0x40
   11e70:	mov	r0, r1
   11e74:	bl	10dcc <printf@plt>
   11e78:	movw	r1, #10413	; 0x28ad
   11e7c:	movt	r1, #1
   11e80:	str	r0, [sp, #60]	; 0x3c
   11e84:	mov	r0, r1
   11e88:	bl	10dcc <printf@plt>
   11e8c:	movw	r1, #10827	; 0x2a4b
   11e90:	movt	r1, #1
   11e94:	str	r0, [sp, #56]	; 0x38
   11e98:	mov	r0, r1
   11e9c:	bl	10dcc <printf@plt>
   11ea0:	movw	r1, #10851	; 0x2a63
   11ea4:	movt	r1, #1
   11ea8:	str	r0, [sp, #52]	; 0x34
   11eac:	mov	r0, r1
   11eb0:	bl	10dcc <printf@plt>
   11eb4:	movw	r1, #10413	; 0x28ad
   11eb8:	movt	r1, #1
   11ebc:	str	r0, [sp, #48]	; 0x30
   11ec0:	mov	r0, r1
   11ec4:	bl	10dcc <printf@plt>
   11ec8:	movw	r1, #10882	; 0x2a82
   11ecc:	movt	r1, #1
   11ed0:	str	r0, [sp, #44]	; 0x2c
   11ed4:	mov	r0, r1
   11ed8:	bl	10dcc <printf@plt>
   11edc:	movw	r1, #10910	; 0x2a9e
   11ee0:	movt	r1, #1
   11ee4:	str	r0, [sp, #40]	; 0x28
   11ee8:	mov	r0, r1
   11eec:	bl	10dcc <printf@plt>
   11ef0:	movw	r1, #10413	; 0x28ad
   11ef4:	movt	r1, #1
   11ef8:	str	r0, [sp, #36]	; 0x24
   11efc:	mov	r0, r1
   11f00:	bl	10dcc <printf@plt>
   11f04:	movw	r1, #10961	; 0x2ad1
   11f08:	movt	r1, #1
   11f0c:	str	r0, [sp, #32]
   11f10:	mov	r0, r1
   11f14:	bl	10dcc <printf@plt>
   11f18:	movw	r1, #11036	; 0x2b1c
   11f1c:	movt	r1, #1
   11f20:	str	r0, [sp, #28]
   11f24:	mov	r0, r1
   11f28:	bl	10dcc <printf@plt>
   11f2c:	movw	r1, #11111	; 0x2b67
   11f30:	movt	r1, #1
   11f34:	str	r0, [sp, #24]
   11f38:	mov	r0, r1
   11f3c:	bl	10dcc <printf@plt>
   11f40:	movw	r1, #11158	; 0x2b96
   11f44:	movt	r1, #1
   11f48:	str	r0, [sp, #20]
   11f4c:	mov	r0, r1
   11f50:	bl	10dcc <printf@plt>
   11f54:	movw	r1, #11232	; 0x2be0
   11f58:	movt	r1, #1
   11f5c:	str	r0, [sp, #16]
   11f60:	mov	r0, r1
   11f64:	bl	10dcc <printf@plt>
   11f68:	movw	r1, #11306	; 0x2c2a
   11f6c:	movt	r1, #1
   11f70:	str	r0, [sp, #12]
   11f74:	mov	r0, r1
   11f78:	bl	10dcc <printf@plt>
   11f7c:	movw	r1, #11370	; 0x2c6a
   11f80:	movt	r1, #1
   11f84:	str	r0, [sp, #8]
   11f88:	mov	r0, r1
   11f8c:	bl	10dcc <printf@plt>
   11f90:	movw	r1, #10413	; 0x28ad
   11f94:	movt	r1, #1
   11f98:	str	r0, [sp, #4]
   11f9c:	mov	r0, r1
   11fa0:	bl	10dcc <printf@plt>
   11fa4:	mov	sp, fp
   11fa8:	pop	{fp, pc}
   11fac:	push	{fp, lr}
   11fb0:	mov	fp, sp
   11fb4:	sub	sp, sp, #16
   11fb8:	bl	10f10 <coda_get_libcoda_version@plt>
   11fbc:	movw	r1, #11435	; 0x2cab
   11fc0:	movt	r1, #1
   11fc4:	str	r0, [fp, #-4]
   11fc8:	mov	r0, r1
   11fcc:	ldr	r1, [fp, #-4]
   11fd0:	bl	10dcc <printf@plt>
   11fd4:	movw	r1, #11448	; 0x2cb8
   11fd8:	movt	r1, #1
   11fdc:	str	r0, [sp, #8]
   11fe0:	mov	r0, r1
   11fe4:	bl	10dcc <printf@plt>
   11fe8:	movw	r1, #10413	; 0x28ad
   11fec:	movt	r1, #1
   11ff0:	str	r0, [sp, #4]
   11ff4:	mov	r0, r1
   11ff8:	bl	10dcc <printf@plt>
   11ffc:	mov	sp, fp
   12000:	pop	{fp, pc}
   12004:	push	{fp, lr}
   12008:	mov	fp, sp
   1200c:	sub	sp, sp, #16
   12010:	str	r0, [fp, #-4]
   12014:	str	r1, [sp, #8]
   12018:	movw	r0, #0
   1201c:	str	r0, [sp, #4]
   12020:	ldr	r0, [sp, #8]
   12024:	cmp	r0, #0
   12028:	beq	1203c <main@@Base+0xdbc>
   1202c:	ldr	r0, [fp, #-4]
   12030:	movw	r1, #0
   12034:	cmp	r0, r1
   12038:	bne	12040 <main@@Base+0xdc0>
   1203c:	b	1230c <main@@Base+0x108c>
   12040:	ldr	r0, [sp, #8]
   12044:	cmp	r0, #0
   12048:	bge	12058 <main@@Base+0xdd8>
   1204c:	ldr	r0, [fp, #-4]
   12050:	bl	10e74 <strlen@plt>
   12054:	str	r0, [sp, #8]
   12058:	b	1205c <main@@Base+0xddc>
   1205c:	ldr	r0, [sp, #4]
   12060:	ldr	r1, [sp, #8]
   12064:	cmp	r0, r1
   12068:	bge	1230c <main@@Base+0x108c>
   1206c:	ldr	r0, [fp, #-4]
   12070:	ldr	r1, [sp, #4]
   12074:	ldrb	r0, [r0, r1]
   12078:	sub	r0, r0, #7
   1207c:	cmp	r0, #85	; 0x55
   12080:	str	r0, [sp]
   12084:	bhi	12290 <main@@Base+0x1010>
   12088:	add	r0, pc, #8
   1208c:	ldr	r1, [sp]
   12090:	ldr	r0, [r0, r1, lsl #2]
   12094:	mov	pc, r0
   12098:	andeq	r2, r1, r0, lsl #4
   1209c:	andeq	r2, r1, r0, lsl r2
   120a0:	andeq	r2, r1, r0, asr r2
   120a4:	andeq	r2, r1, r0, lsr r2
   120a8:	andeq	r2, r1, r0, ror #4
   120ac:	andeq	r2, r1, r0, lsr #4
   120b0:	andeq	r2, r1, r0, asr #4
   120b4:	muleq	r1, r0, r2
   120b8:	muleq	r1, r0, r2
   120bc:	muleq	r1, r0, r2
   120c0:	muleq	r1, r0, r2
   120c4:	muleq	r1, r0, r2
   120c8:	muleq	r1, r0, r2
   120cc:	muleq	r1, r0, r2
   120d0:	muleq	r1, r0, r2
   120d4:	muleq	r1, r0, r2
   120d8:	muleq	r1, r0, r2
   120dc:	muleq	r1, r0, r2
   120e0:	muleq	r1, r0, r2
   120e4:	muleq	r1, r0, r2
   120e8:	strdeq	r2, [r1], -r0
   120ec:	muleq	r1, r0, r2
   120f0:	muleq	r1, r0, r2
   120f4:	muleq	r1, r0, r2
   120f8:	muleq	r1, r0, r2
   120fc:	muleq	r1, r0, r2
   12100:	muleq	r1, r0, r2
   12104:	andeq	r2, r1, r0, lsl #5
   12108:	muleq	r1, r0, r2
   1210c:	muleq	r1, r0, r2
   12110:	muleq	r1, r0, r2
   12114:	muleq	r1, r0, r2
   12118:	muleq	r1, r0, r2
   1211c:	muleq	r1, r0, r2
   12120:	muleq	r1, r0, r2
   12124:	muleq	r1, r0, r2
   12128:	muleq	r1, r0, r2
   1212c:	muleq	r1, r0, r2
   12130:	muleq	r1, r0, r2
   12134:	muleq	r1, r0, r2
   12138:	muleq	r1, r0, r2
   1213c:	muleq	r1, r0, r2
   12140:	muleq	r1, r0, r2
   12144:	muleq	r1, r0, r2
   12148:	muleq	r1, r0, r2
   1214c:	muleq	r1, r0, r2
   12150:	muleq	r1, r0, r2
   12154:	muleq	r1, r0, r2
   12158:	muleq	r1, r0, r2
   1215c:	muleq	r1, r0, r2
   12160:	muleq	r1, r0, r2
   12164:	muleq	r1, r0, r2
   12168:	muleq	r1, r0, r2
   1216c:	muleq	r1, r0, r2
   12170:	muleq	r1, r0, r2
   12174:	muleq	r1, r0, r2
   12178:	muleq	r1, r0, r2
   1217c:	muleq	r1, r0, r2
   12180:	muleq	r1, r0, r2
   12184:	muleq	r1, r0, r2
   12188:	muleq	r1, r0, r2
   1218c:	muleq	r1, r0, r2
   12190:	muleq	r1, r0, r2
   12194:	muleq	r1, r0, r2
   12198:	muleq	r1, r0, r2
   1219c:	muleq	r1, r0, r2
   121a0:	muleq	r1, r0, r2
   121a4:	muleq	r1, r0, r2
   121a8:	muleq	r1, r0, r2
   121ac:	muleq	r1, r0, r2
   121b0:	muleq	r1, r0, r2
   121b4:	muleq	r1, r0, r2
   121b8:	muleq	r1, r0, r2
   121bc:	muleq	r1, r0, r2
   121c0:	muleq	r1, r0, r2
   121c4:	muleq	r1, r0, r2
   121c8:	muleq	r1, r0, r2
   121cc:	muleq	r1, r0, r2
   121d0:	muleq	r1, r0, r2
   121d4:	muleq	r1, r0, r2
   121d8:	muleq	r1, r0, r2
   121dc:	muleq	r1, r0, r2
   121e0:	muleq	r1, r0, r2
   121e4:	muleq	r1, r0, r2
   121e8:	muleq	r1, r0, r2
   121ec:	andeq	r2, r1, r0, ror r2
   121f0:	movw	r0, #11795	; 0x2e13
   121f4:	movt	r0, #1
   121f8:	bl	10dcc <printf@plt>
   121fc:	b	122fc <main@@Base+0x107c>
   12200:	movw	r0, #11798	; 0x2e16
   12204:	movt	r0, #1
   12208:	bl	10dcc <printf@plt>
   1220c:	b	122fc <main@@Base+0x107c>
   12210:	movw	r0, #11801	; 0x2e19
   12214:	movt	r0, #1
   12218:	bl	10dcc <printf@plt>
   1221c:	b	122fc <main@@Base+0x107c>
   12220:	movw	r0, #11804	; 0x2e1c
   12224:	movt	r0, #1
   12228:	bl	10dcc <printf@plt>
   1222c:	b	122fc <main@@Base+0x107c>
   12230:	movw	r0, #11807	; 0x2e1f
   12234:	movt	r0, #1
   12238:	bl	10dcc <printf@plt>
   1223c:	b	122fc <main@@Base+0x107c>
   12240:	movw	r0, #11810	; 0x2e22
   12244:	movt	r0, #1
   12248:	bl	10dcc <printf@plt>
   1224c:	b	122fc <main@@Base+0x107c>
   12250:	movw	r0, #11813	; 0x2e25
   12254:	movt	r0, #1
   12258:	bl	10dcc <printf@plt>
   1225c:	b	122fc <main@@Base+0x107c>
   12260:	movw	r0, #11816	; 0x2e28
   12264:	movt	r0, #1
   12268:	bl	10dcc <printf@plt>
   1226c:	b	122fc <main@@Base+0x107c>
   12270:	movw	r0, #11819	; 0x2e2b
   12274:	movt	r0, #1
   12278:	bl	10dcc <printf@plt>
   1227c:	b	122fc <main@@Base+0x107c>
   12280:	movw	r0, #11822	; 0x2e2e
   12284:	movt	r0, #1
   12288:	bl	10dcc <printf@plt>
   1228c:	b	122fc <main@@Base+0x107c>
   12290:	bl	10e5c <__ctype_b_loc@plt>
   12294:	ldr	r0, [r0]
   12298:	ldr	r1, [fp, #-4]
   1229c:	ldr	r2, [sp, #4]
   122a0:	ldrb	r1, [r1, r2]
   122a4:	mov	r2, r1
   122a8:	add	r0, r0, r1, lsl #1
   122ac:	ldrh	r0, [r0]
   122b0:	and	r0, r0, #16384	; 0x4000
   122b4:	cmp	r0, #0
   122b8:	bne	122dc <main@@Base+0x105c>
   122bc:	ldr	r0, [fp, #-4]
   122c0:	ldr	r1, [sp, #4]
   122c4:	add	r0, r0, r1
   122c8:	ldrb	r1, [r0]
   122cc:	movw	r0, #11825	; 0x2e31
   122d0:	movt	r0, #1
   122d4:	bl	10dcc <printf@plt>
   122d8:	b	122f8 <main@@Base+0x1078>
   122dc:	ldr	r0, [fp, #-4]
   122e0:	ldr	r1, [sp, #4]
   122e4:	add	r0, r0, r1
   122e8:	ldrb	r1, [r0]
   122ec:	movw	r0, #11831	; 0x2e37
   122f0:	movt	r0, #1
   122f4:	bl	10dcc <printf@plt>
   122f8:	b	122fc <main@@Base+0x107c>
   122fc:	ldr	r0, [sp, #4]
   12300:	add	r0, r0, #1
   12304:	str	r0, [sp, #4]
   12308:	b	1205c <main@@Base+0xddc>
   1230c:	mov	sp, fp
   12310:	pop	{fp, pc}

00012314 <__libc_csu_init@@Base>:
   12314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12318:	mov	r7, r0
   1231c:	ldr	r6, [pc, #72]	; 1236c <__libc_csu_init@@Base+0x58>
   12320:	ldr	r5, [pc, #72]	; 12370 <__libc_csu_init@@Base+0x5c>
   12324:	add	r6, pc, r6
   12328:	add	r5, pc, r5
   1232c:	sub	r6, r6, r5
   12330:	mov	r8, r1
   12334:	mov	r9, r2
   12338:	bl	10d88 <coda_match_filefilter@plt-0x20>
   1233c:	asrs	r6, r6, #2
   12340:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12344:	mov	r4, #0
   12348:	add	r4, r4, #1
   1234c:	ldr	r3, [r5], #4
   12350:	mov	r2, r9
   12354:	mov	r1, r8
   12358:	mov	r0, r7
   1235c:	blx	r3
   12360:	cmp	r6, r4
   12364:	bne	12348 <__libc_csu_init@@Base+0x34>
   12368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1236c:	andeq	r0, r1, r8, asr #23
   12370:	andeq	r0, r1, r0, asr #23

00012374 <__libc_csu_fini@@Base>:
   12374:	bx	lr

Disassembly of section .fini:

00012378 <.fini>:
   12378:	push	{r3, lr}
   1237c:	pop	{r3, pc}
