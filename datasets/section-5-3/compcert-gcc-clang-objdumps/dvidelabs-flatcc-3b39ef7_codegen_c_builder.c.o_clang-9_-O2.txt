
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_builder.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_common_c_builder_header>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #8
       c:	mov	r5, r0
      10:	ldr	r0, [r0, #204]	; 0xcc
      14:	movw	r1, #0
      18:	add	r4, r5, #102	; 0x66
      1c:	movt	r1, #0
      20:	mov	r2, r4
      24:	bl	0 <fprintf>
      28:	ldr	r0, [r5, #204]	; 0xcc
      2c:	movw	r1, #0
      30:	mov	r2, r4
      34:	movt	r1, #0
      38:	bl	0 <fprintf>
      3c:	ldr	r3, [r5, #204]	; 0xcc
      40:	movw	r0, #0
      44:	mov	r1, #81	; 0x51
      48:	mov	r2, #1
      4c:	movt	r0, #0
      50:	bl	0 <fwrite>
      54:	ldr	r3, [r5, #204]	; 0xcc
      58:	movw	r0, #0
      5c:	mov	r1, #53	; 0x35
      60:	mov	r2, #1
      64:	movt	r0, #0
      68:	bl	0 <fwrite>
      6c:	ldr	r0, [r5, #212]	; 0xd4
      70:	ldr	r0, [r0, #140]	; 0x8c
      74:	cmp	r0, #0
      78:	beq	94 <__flatcc_fb_gen_common_c_builder_header+0x94>
      7c:	ldr	r3, [r5, #204]	; 0xcc
      80:	movw	r0, #0
      84:	mov	r1, #36	; 0x24
      88:	mov	r2, #1
      8c:	movt	r0, #0
      90:	bl	0 <fwrite>
      94:	ldr	r3, [r5, #204]	; 0xcc
      98:	movw	r0, #0
      9c:	mov	r1, #22
      a0:	mov	r2, #1
      a4:	movt	r0, #0
      a8:	bl	0 <fwrite>
      ac:	ldr	r3, [r5, #204]	; 0xcc
      b0:	movw	r0, #0
      b4:	mov	r1, #35	; 0x23
      b8:	mov	r2, #1
      bc:	movt	r0, #0
      c0:	bl	0 <fwrite>
      c4:	ldr	r3, [r5, #204]	; 0xcc
      c8:	movw	r0, #0
      cc:	mov	r1, #7
      d0:	mov	r2, #1
      d4:	movt	r0, #0
      d8:	bl	0 <fwrite>
      dc:	movw	r1, #0
      e0:	mov	r0, r5
      e4:	movt	r1, #0
      e8:	bl	0 <strcmp>
      ec:	cmp	r0, #0
      f0:	beq	16c <__flatcc_fb_gen_common_c_builder_header+0x16c>
      f4:	ldr	r0, [r5, #204]	; 0xcc
      f8:	movw	r1, #0
      fc:	mov	r2, r5
     100:	movt	r1, #0
     104:	bl	0 <fprintf>
     108:	ldr	r0, [r5, #204]	; 0xcc
     10c:	movw	r1, #0
     110:	mov	r2, r5
     114:	movt	r1, #0
     118:	bl	0 <fprintf>
     11c:	ldr	r0, [r5, #204]	; 0xcc
     120:	movw	r1, #0
     124:	mov	r2, r5
     128:	movt	r1, #0
     12c:	bl	0 <fprintf>
     130:	ldr	r0, [r5, #204]	; 0xcc
     134:	movw	r1, #0
     138:	mov	r2, r5
     13c:	movt	r1, #0
     140:	bl	0 <fprintf>
     144:	ldr	r0, [r5, #204]	; 0xcc
     148:	movw	r1, #0
     14c:	mov	r2, r5
     150:	movt	r1, #0
     154:	bl	0 <fprintf>
     158:	ldr	r0, [r5, #204]	; 0xcc
     15c:	movw	r1, #0
     160:	mov	r2, r5
     164:	movt	r1, #0
     168:	bl	0 <fprintf>
     16c:	ldr	r0, [r5, #204]	; 0xcc
     170:	movw	r1, #0
     174:	mov	r2, r5
     178:	mov	r3, r5
     17c:	movt	r1, #0
     180:	bl	0 <fprintf>
     184:	ldr	r0, [r5, #204]	; 0xcc
     188:	movw	r1, #0
     18c:	mov	r2, r5
     190:	mov	r3, r5
     194:	movt	r1, #0
     198:	bl	0 <fprintf>
     19c:	movw	r1, #0
     1a0:	mov	r0, r5
     1a4:	movt	r1, #0
     1a8:	bl	0 <strcmp>
     1ac:	cmp	r0, #0
     1b0:	beq	1dc <__flatcc_fb_gen_common_c_builder_header+0x1dc>
     1b4:	ldr	r0, [r5, #204]	; 0xcc
     1b8:	movw	r1, #0
     1bc:	mov	r2, r5
     1c0:	movt	r1, #0
     1c4:	bl	0 <fprintf>
     1c8:	ldr	r0, [r5, #204]	; 0xcc
     1cc:	movw	r1, #0
     1d0:	mov	r2, r5
     1d4:	movt	r1, #0
     1d8:	bl	0 <fprintf>
     1dc:	ldr	r1, [r5, #204]	; 0xcc
     1e0:	mov	r0, #10
     1e4:	bl	0 <fputc>
     1e8:	ldr	r0, [r5, #204]	; 0xcc
     1ec:	movw	r1, #0
     1f0:	mov	r2, r5
     1f4:	movt	r1, #0
     1f8:	bl	0 <fprintf>
     1fc:	ldr	r0, [r5, #204]	; 0xcc
     200:	movw	r1, #0
     204:	mov	r2, r5
     208:	movt	r1, #0
     20c:	bl	0 <fprintf>
     210:	ldr	r0, [r5, #204]	; 0xcc
     214:	movw	r1, #0
     218:	mov	r2, r5
     21c:	mov	r3, r5
     220:	str	r5, [sp]
     224:	movt	r1, #0
     228:	bl	0 <fprintf>
     22c:	ldr	r0, [r5, #204]	; 0xcc
     230:	movw	r1, #0
     234:	mov	r2, r5
     238:	movt	r1, #0
     23c:	bl	0 <fprintf>
     240:	ldr	r0, [r5, #204]	; 0xcc
     244:	movw	r1, #0
     248:	mov	r2, r5
     24c:	movt	r1, #0
     250:	bl	0 <fprintf>
     254:	ldr	r0, [r5, #204]	; 0xcc
     258:	movw	r1, #0
     25c:	mov	r2, r5
     260:	movt	r1, #0
     264:	bl	0 <fprintf>
     268:	ldr	r0, [r5, #204]	; 0xcc
     26c:	movw	r1, #0
     270:	mov	r2, r5
     274:	movt	r1, #0
     278:	bl	0 <fprintf>
     27c:	ldr	r0, [r5, #204]	; 0xcc
     280:	movw	r1, #0
     284:	mov	r2, r5
     288:	mov	r3, r5
     28c:	movt	r1, #0
     290:	bl	0 <fprintf>
     294:	ldr	r0, [r5, #204]	; 0xcc
     298:	movw	r1, #0
     29c:	mov	r2, r5
     2a0:	mov	r3, r5
     2a4:	str	r5, [sp]
     2a8:	movt	r1, #0
     2ac:	bl	0 <fprintf>
     2b0:	ldr	r0, [r5, #204]	; 0xcc
     2b4:	movw	r1, #0
     2b8:	mov	r2, r5
     2bc:	movt	r1, #0
     2c0:	bl	0 <fprintf>
     2c4:	ldr	r0, [r5, #204]	; 0xcc
     2c8:	movw	r1, #0
     2cc:	mov	r2, r5
     2d0:	movt	r1, #0
     2d4:	bl	0 <fprintf>
     2d8:	ldr	r0, [r5, #204]	; 0xcc
     2dc:	movw	r1, #0
     2e0:	mov	r2, r5
     2e4:	movt	r1, #0
     2e8:	bl	0 <fprintf>
     2ec:	ldr	r0, [r5, #204]	; 0xcc
     2f0:	movw	r1, #0
     2f4:	mov	r2, r5
     2f8:	mov	r3, r5
     2fc:	movt	r1, #0
     300:	bl	0 <fprintf>
     304:	ldr	r0, [r5, #204]	; 0xcc
     308:	movw	r1, #0
     30c:	mov	r2, r5
     310:	movt	r1, #0
     314:	bl	0 <fprintf>
     318:	ldr	r0, [r5, #204]	; 0xcc
     31c:	movw	r1, #0
     320:	mov	r2, r5
     324:	mov	r3, r5
     328:	str	r5, [sp]
     32c:	movt	r1, #0
     330:	bl	0 <fprintf>
     334:	ldr	r0, [r5, #204]	; 0xcc
     338:	movw	r1, #0
     33c:	mov	r2, r5
     340:	mov	r3, r5
     344:	str	r5, [sp]
     348:	str	r5, [sp, #4]
     34c:	movt	r1, #0
     350:	bl	0 <fprintf>
     354:	ldr	r0, [r5, #204]	; 0xcc
     358:	movw	r1, #0
     35c:	mov	r2, r5
     360:	mov	r3, r5
     364:	movt	r1, #0
     368:	bl	0 <fprintf>
     36c:	ldr	r0, [r5, #204]	; 0xcc
     370:	movw	r1, #0
     374:	mov	r2, r5
     378:	mov	r3, r5
     37c:	str	r5, [sp]
     380:	str	r5, [sp, #4]
     384:	movt	r1, #0
     388:	bl	0 <fprintf>
     38c:	ldr	r0, [r5, #204]	; 0xcc
     390:	movw	r1, #0
     394:	mov	r2, r5
     398:	mov	r3, r5
     39c:	movt	r1, #0
     3a0:	bl	0 <fprintf>
     3a4:	ldr	r0, [r5, #204]	; 0xcc
     3a8:	movw	r1, #0
     3ac:	mov	r2, r5
     3b0:	movt	r1, #0
     3b4:	bl	0 <fprintf>
     3b8:	ldr	r0, [r5, #204]	; 0xcc
     3bc:	movw	r1, #0
     3c0:	mov	r2, r5
     3c4:	movt	r1, #0
     3c8:	bl	0 <fprintf>
     3cc:	ldr	r0, [r5, #204]	; 0xcc
     3d0:	movw	r1, #0
     3d4:	mov	r2, r5
     3d8:	movt	r1, #0
     3dc:	bl	0 <fprintf>
     3e0:	ldr	r0, [r5, #204]	; 0xcc
     3e4:	movw	r1, #0
     3e8:	mov	r2, r5
     3ec:	movt	r1, #0
     3f0:	bl	0 <fprintf>
     3f4:	ldr	r0, [r5, #204]	; 0xcc
     3f8:	movw	r1, #0
     3fc:	mov	r2, r5
     400:	mov	r3, r5
     404:	movt	r1, #0
     408:	bl	0 <fprintf>
     40c:	ldr	r0, [r5, #204]	; 0xcc
     410:	movw	r1, #0
     414:	mov	r2, r5
     418:	movt	r1, #0
     41c:	bl	0 <fprintf>
     420:	ldr	r0, [r5, #204]	; 0xcc
     424:	movw	r1, #0
     428:	mov	r2, r5
     42c:	movt	r1, #0
     430:	bl	0 <fprintf>
     434:	ldr	r0, [r5, #204]	; 0xcc
     438:	movw	r1, #0
     43c:	mov	r2, r5
     440:	mov	r3, r5
     444:	movt	r1, #0
     448:	bl	0 <fprintf>
     44c:	ldr	r0, [r5, #204]	; 0xcc
     450:	movw	r1, #0
     454:	mov	r2, r5
     458:	mov	r3, r5
     45c:	movt	r1, #0
     460:	bl	0 <fprintf>
     464:	ldr	r0, [r5, #204]	; 0xcc
     468:	movw	r1, #0
     46c:	mov	r2, r5
     470:	mov	r3, r5
     474:	movt	r1, #0
     478:	bl	0 <fprintf>
     47c:	ldr	r0, [r5, #204]	; 0xcc
     480:	movw	r1, #0
     484:	mov	r2, r5
     488:	mov	r3, r5
     48c:	movt	r1, #0
     490:	bl	0 <fprintf>
     494:	ldr	r0, [r5, #204]	; 0xcc
     498:	movw	r1, #0
     49c:	mov	r2, r5
     4a0:	mov	r3, r5
     4a4:	str	r5, [sp]
     4a8:	movt	r1, #0
     4ac:	bl	0 <fprintf>
     4b0:	ldr	r0, [r5, #204]	; 0xcc
     4b4:	movw	r1, #0
     4b8:	mov	r2, r5
     4bc:	mov	r3, r5
     4c0:	movt	r1, #0
     4c4:	bl	0 <fprintf>
     4c8:	ldr	r0, [r5, #204]	; 0xcc
     4cc:	movw	r1, #0
     4d0:	mov	r2, r5
     4d4:	movt	r1, #0
     4d8:	bl	0 <fprintf>
     4dc:	ldr	r0, [r5, #204]	; 0xcc
     4e0:	movw	r1, #0
     4e4:	mov	r2, r5
     4e8:	movt	r1, #0
     4ec:	bl	0 <fprintf>
     4f0:	ldr	r0, [r5, #204]	; 0xcc
     4f4:	movw	r1, #0
     4f8:	mov	r2, r5
     4fc:	movt	r1, #0
     500:	bl	0 <fprintf>
     504:	ldr	r0, [r5, #204]	; 0xcc
     508:	movw	r1, #0
     50c:	mov	r2, r5
     510:	mov	r3, r5
     514:	str	r5, [sp]
     518:	movt	r1, #0
     51c:	bl	0 <fprintf>
     520:	ldr	r0, [r5, #204]	; 0xcc
     524:	movw	r1, #0
     528:	mov	r2, r5
     52c:	movt	r1, #0
     530:	bl	0 <fprintf>
     534:	ldr	r0, [r5, #204]	; 0xcc
     538:	movw	r1, #0
     53c:	mov	r2, r5
     540:	movt	r1, #0
     544:	bl	0 <fprintf>
     548:	ldr	r0, [r5, #204]	; 0xcc
     54c:	movw	r1, #0
     550:	mov	r2, r5
     554:	movt	r1, #0
     558:	bl	0 <fprintf>
     55c:	ldr	r0, [r5, #204]	; 0xcc
     560:	movw	r1, #0
     564:	mov	r2, r5
     568:	movt	r1, #0
     56c:	bl	0 <fprintf>
     570:	ldr	r0, [r5, #204]	; 0xcc
     574:	movw	r1, #0
     578:	mov	r2, r5
     57c:	mov	r3, r5
     580:	movt	r1, #0
     584:	bl	0 <fprintf>
     588:	ldr	r0, [r5, #204]	; 0xcc
     58c:	movw	r1, #0
     590:	mov	r2, r5
     594:	movt	r1, #0
     598:	bl	0 <fprintf>
     59c:	ldr	r0, [r5, #204]	; 0xcc
     5a0:	movw	r1, #0
     5a4:	mov	r2, r5
     5a8:	movt	r1, #0
     5ac:	bl	0 <fprintf>
     5b0:	ldr	r0, [r5, #204]	; 0xcc
     5b4:	movw	r1, #0
     5b8:	mov	r2, r5
     5bc:	movt	r1, #0
     5c0:	bl	0 <fprintf>
     5c4:	ldr	r0, [r5, #204]	; 0xcc
     5c8:	movw	r1, #0
     5cc:	mov	r2, r5
     5d0:	movt	r1, #0
     5d4:	bl	0 <fprintf>
     5d8:	ldr	r0, [r5, #204]	; 0xcc
     5dc:	movw	r1, #0
     5e0:	mov	r2, r5
     5e4:	movt	r1, #0
     5e8:	bl	0 <fprintf>
     5ec:	ldr	r0, [r5, #204]	; 0xcc
     5f0:	movw	r1, #0
     5f4:	mov	r2, r5
     5f8:	movt	r1, #0
     5fc:	bl	0 <fprintf>
     600:	ldr	r0, [r5, #204]	; 0xcc
     604:	movw	r1, #0
     608:	mov	r2, r5
     60c:	movt	r1, #0
     610:	bl	0 <fprintf>
     614:	ldr	r0, [r5, #204]	; 0xcc
     618:	movw	r1, #0
     61c:	mov	r2, r5
     620:	movt	r1, #0
     624:	bl	0 <fprintf>
     628:	ldr	r0, [r5, #204]	; 0xcc
     62c:	movw	r1, #0
     630:	mov	r2, r5
     634:	movt	r1, #0
     638:	bl	0 <fprintf>
     63c:	ldr	r0, [r5, #204]	; 0xcc
     640:	movw	r1, #0
     644:	mov	r2, r5
     648:	movt	r1, #0
     64c:	bl	0 <fprintf>
     650:	ldr	r0, [r5, #204]	; 0xcc
     654:	movw	r1, #0
     658:	mov	r2, r5
     65c:	movt	r1, #0
     660:	bl	0 <fprintf>
     664:	ldr	r0, [r5, #204]	; 0xcc
     668:	movw	r1, #0
     66c:	mov	r2, r5
     670:	movt	r1, #0
     674:	bl	0 <fprintf>
     678:	ldr	r0, [r5, #204]	; 0xcc
     67c:	movw	r1, #0
     680:	mov	r2, r5
     684:	movt	r1, #0
     688:	bl	0 <fprintf>
     68c:	ldr	r0, [r5, #204]	; 0xcc
     690:	movw	r1, #0
     694:	mov	r2, r5
     698:	movt	r1, #0
     69c:	bl	0 <fprintf>
     6a0:	ldr	r0, [r5, #204]	; 0xcc
     6a4:	movw	r1, #0
     6a8:	mov	r2, r5
     6ac:	movt	r1, #0
     6b0:	bl	0 <fprintf>
     6b4:	ldr	r0, [r5, #204]	; 0xcc
     6b8:	movw	r1, #0
     6bc:	mov	r2, r5
     6c0:	movt	r1, #0
     6c4:	bl	0 <fprintf>
     6c8:	ldr	r0, [r5, #204]	; 0xcc
     6cc:	movw	r1, #0
     6d0:	mov	r2, r5
     6d4:	movt	r1, #0
     6d8:	bl	0 <fprintf>
     6dc:	ldr	r1, [r5, #204]	; 0xcc
     6e0:	mov	r0, #10
     6e4:	bl	0 <fputc>
     6e8:	ldr	r0, [r5, #204]	; 0xcc
     6ec:	movw	r1, #0
     6f0:	mov	r2, r5
     6f4:	mov	r3, r5
     6f8:	str	r5, [sp]
     6fc:	movt	r1, #0
     700:	bl	0 <fprintf>
     704:	ldr	r0, [r5, #204]	; 0xcc
     708:	movw	r1, #0
     70c:	mov	r2, r5
     710:	mov	r3, r5
     714:	str	r5, [sp]
     718:	movt	r1, #0
     71c:	bl	0 <fprintf>
     720:	ldr	r0, [r5, #204]	; 0xcc
     724:	movw	r1, #0
     728:	mov	r2, r5
     72c:	mov	r3, r5
     730:	str	r5, [sp]
     734:	str	r5, [sp, #4]
     738:	movt	r1, #0
     73c:	bl	0 <fprintf>
     740:	ldr	r0, [r5, #204]	; 0xcc
     744:	movw	r1, #0
     748:	mov	r2, r5
     74c:	mov	r3, r5
     750:	str	r5, [sp]
     754:	movt	r1, #0
     758:	bl	0 <fprintf>
     75c:	ldr	r0, [r5, #204]	; 0xcc
     760:	movw	r1, #0
     764:	mov	r2, r5
     768:	mov	r3, r5
     76c:	str	r5, [sp]
     770:	movt	r1, #0
     774:	bl	0 <fprintf>
     778:	ldr	r0, [r5, #204]	; 0xcc
     77c:	movw	r1, #0
     780:	mov	r2, r5
     784:	mov	r3, r5
     788:	str	r5, [sp]
     78c:	movt	r1, #0
     790:	bl	0 <fprintf>
     794:	ldr	r0, [r5, #204]	; 0xcc
     798:	movw	r1, #0
     79c:	mov	r2, r5
     7a0:	mov	r3, r5
     7a4:	str	r5, [sp]
     7a8:	movt	r1, #0
     7ac:	bl	0 <fprintf>
     7b0:	ldr	r0, [r5, #204]	; 0xcc
     7b4:	movw	r1, #0
     7b8:	mov	r2, r5
     7bc:	mov	r3, r5
     7c0:	str	r5, [sp]
     7c4:	movt	r1, #0
     7c8:	bl	0 <fprintf>
     7cc:	ldr	r0, [r5, #204]	; 0xcc
     7d0:	movw	r1, #0
     7d4:	mov	r2, r5
     7d8:	mov	r3, r5
     7dc:	str	r5, [sp]
     7e0:	movt	r1, #0
     7e4:	bl	0 <fprintf>
     7e8:	ldr	r0, [r5, #204]	; 0xcc
     7ec:	movw	r1, #0
     7f0:	mov	r2, r5
     7f4:	mov	r3, r5
     7f8:	str	r5, [sp]
     7fc:	movt	r1, #0
     800:	bl	0 <fprintf>
     804:	ldr	r0, [r5, #204]	; 0xcc
     808:	movw	r1, #0
     80c:	mov	r2, r5
     810:	mov	r3, r5
     814:	str	r5, [sp]
     818:	movt	r1, #0
     81c:	bl	0 <fprintf>
     820:	ldr	r1, [r5, #204]	; 0xcc
     824:	mov	r0, #10
     828:	bl	0 <fputc>
     82c:	ldr	r0, [r5, #204]	; 0xcc
     830:	movw	r1, #0
     834:	mov	r2, r5
     838:	mov	r3, r5
     83c:	movt	r1, #0
     840:	bl	0 <fprintf>
     844:	ldr	r1, [r5, #204]	; 0xcc
     848:	mov	r0, #10
     84c:	bl	0 <fputc>
     850:	ldr	r0, [r5, #204]	; 0xcc
     854:	movw	r1, #0
     858:	mov	r2, r5
     85c:	mov	r3, r5
     860:	movt	r1, #0
     864:	bl	0 <fprintf>
     868:	ldr	r0, [r5, #212]	; 0xd4
     86c:	ldr	r0, [r0, #140]	; 0x8c
     870:	cmp	r0, #0
     874:	beq	890 <__flatcc_fb_gen_common_c_builder_header+0x890>
     878:	ldr	r3, [r5, #204]	; 0xcc
     87c:	movw	r0, #0
     880:	mov	r1, #36	; 0x24
     884:	mov	r2, #1
     888:	movt	r0, #0
     88c:	bl	0 <fwrite>
     890:	ldr	r0, [r5, #204]	; 0xcc
     894:	movw	r1, #0
     898:	mov	r2, r4
     89c:	movt	r1, #0
     8a0:	bl	0 <fprintf>
     8a4:	mov	r0, #0
     8a8:	sub	sp, fp, #8
     8ac:	pop	{r4, r5, fp, pc}

000008b0 <__flatcc_fb_gen_c_builder>:
     8b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     8b4:	add	fp, sp, #28
     8b8:	sub	sp, sp, #620	; 0x26c
     8bc:	mov	r4, r0
     8c0:	mov	sl, r0
     8c4:	ldr	r1, [r4, #208]	; 0xd0
     8c8:	ldr	r0, [sl, #204]!	; 0xcc
     8cc:	ldr	r2, [r1, #164]	; 0xa4
     8d0:	movw	r1, #0
     8d4:	movt	r1, #0
     8d8:	mov	r3, r2
     8dc:	bl	0 <fprintf>
     8e0:	ldr	r3, [sl]
     8e4:	movw	r0, #0
     8e8:	mov	r1, #81	; 0x51
     8ec:	mov	r2, #1
     8f0:	movt	r0, #0
     8f4:	bl	0 <fwrite>
     8f8:	ldr	r1, [r4, #208]	; 0xd0
     8fc:	ldr	r0, [sl]
     900:	ldr	r2, [r1, #164]	; 0xa4
     904:	movw	r1, #0
     908:	movt	r1, #0
     90c:	bl	0 <fprintf>
     910:	ldr	r1, [r4, #208]	; 0xd0
     914:	ldr	r0, [sl]
     918:	ldr	r2, [r1, #160]	; 0xa0
     91c:	movw	r1, #0
     920:	movt	r1, #0
     924:	bl	0 <fprintf>
     928:	movw	r5, #0
     92c:	ldr	r3, [sl]
     930:	mov	r1, #7
     934:	mov	r2, #1
     938:	movt	r5, #0
     93c:	mov	r0, r5
     940:	bl	0 <fwrite>
     944:	ldr	r0, [sl]
     948:	movw	r1, #0
     94c:	add	r2, r4, #102	; 0x66
     950:	movt	r1, #0
     954:	bl	0 <fprintf>
     958:	ldr	r0, [sl]
     95c:	movw	r1, #0
     960:	mov	r2, r4
     964:	movt	r1, #0
     968:	bl	0 <fprintf>
     96c:	ldr	r3, [sl]
     970:	mov	r0, r5
     974:	mov	r1, #7
     978:	mov	r2, #1
     97c:	bl	0 <fwrite>
     980:	movw	r1, #0
     984:	movw	r2, #0
     988:	mov	r0, r4
     98c:	movt	r1, #0
     990:	movt	r2, #0
     994:	bl	0 <__flatcc_fb_gen_c_includes>
     998:	ldr	r0, [r4, #212]	; 0xd4
     99c:	ldr	r0, [r0, #140]	; 0x8c
     9a0:	cmp	r0, #0
     9a4:	beq	9c0 <__flatcc_fb_gen_c_builder+0x110>
     9a8:	ldr	r3, [sl]
     9ac:	movw	r0, #0
     9b0:	mov	r1, #36	; 0x24
     9b4:	mov	r2, #1
     9b8:	movt	r0, #0
     9bc:	bl	0 <fwrite>
     9c0:	ldr	r1, [r4, #208]	; 0xd0
     9c4:	ldr	r0, [r4, #204]	; 0xcc
     9c8:	ldrh	r2, [r1, #16]
     9cc:	cmp	r2, #2
     9d0:	bne	9ec <__flatcc_fb_gen_c_builder+0x13c>
     9d4:	ldrd	r2, [r1, #8]
     9d8:	movw	r1, #0
     9dc:	movt	r1, #0
     9e0:	str	r3, [sp]
     9e4:	str	r2, [sp, #4]
     9e8:	b	9f4 <__flatcc_fb_gen_c_builder+0x144>
     9ec:	movw	r1, #0
     9f0:	movt	r1, #0
     9f4:	mov	r2, r4
     9f8:	mov	r3, r4
     9fc:	bl	0 <fprintf>
     a00:	ldr	r1, [r4, #208]	; 0xd0
     a04:	ldr	r0, [r4, #204]	; 0xcc
     a08:	ldrh	r2, [r1, #32]
     a0c:	cmp	r2, #2
     a10:	bne	a2c <__flatcc_fb_gen_c_builder+0x17c>
     a14:	ldrd	r2, [r1, #24]
     a18:	movw	r1, #0
     a1c:	movt	r1, #0
     a20:	str	r3, [sp]
     a24:	str	r2, [sp, #4]
     a28:	b	a40 <__flatcc_fb_gen_c_builder+0x190>
     a2c:	ldr	r1, [r4, #212]	; 0xd4
     a30:	ldr	r1, [r1, #104]	; 0x68
     a34:	str	r1, [sp]
     a38:	movw	r1, #0
     a3c:	movt	r1, #0
     a40:	mov	r2, r4
     a44:	mov	r3, r4
     a48:	bl	0 <fprintf>
     a4c:	ldr	r1, [r4, #204]	; 0xcc
     a50:	mov	r0, #10
     a54:	bl	0 <fputc>
     a58:	sub	r5, fp, #256	; 0x100
     a5c:	mov	r1, #0
     a60:	mov	r2, #220	; 0xdc
     a64:	mov	r7, #0
     a68:	mov	r0, r5
     a6c:	bl	0 <memset>
     a70:	ldr	r0, [r4, #208]	; 0xd0
     a74:	ldr	r6, [r0, #40]	; 0x28
     a78:	cmp	r6, #0
     a7c:	beq	b0c <__flatcc_fb_gen_c_builder+0x25c>
     a80:	movw	r8, #0
     a84:	movw	r9, #0
     a88:	movt	r8, #0
     a8c:	movt	r9, #0
     a90:	b	aa0 <__flatcc_fb_gen_c_builder+0x1f0>
     a94:	ldr	r6, [r6]
     a98:	cmp	r6, #0
     a9c:	beq	af8 <__flatcc_fb_gen_c_builder+0x248>
     aa0:	ldrh	r0, [r6, #8]
     aa4:	cmp	r0, #3
     aa8:	bne	a94 <__flatcc_fb_gen_c_builder+0x1e4>
     aac:	ldr	r0, [r6, #12]
     ab0:	mov	r1, r6
     ab4:	mov	r2, r5
     ab8:	bl	0 <__flatcc_fb_scoped_symbol_name>
     abc:	ldr	r0, [r4, #204]	; 0xcc
     ac0:	mov	r1, r8
     ac4:	mov	r2, r5
     ac8:	mov	r3, r5
     acc:	str	r5, [sp]
     ad0:	bl	0 <fprintf>
     ad4:	ldr	r0, [r4, #204]	; 0xcc
     ad8:	mov	r1, r9
     adc:	mov	r2, r4
     ae0:	mov	r3, r4
     ae4:	str	r5, [sp]
     ae8:	str	r5, [sp, #4]
     aec:	bl	0 <fprintf>
     af0:	mov	r7, #1
     af4:	b	a94 <__flatcc_fb_gen_c_builder+0x1e4>
     af8:	cmp	r7, #0
     afc:	beq	b0c <__flatcc_fb_gen_c_builder+0x25c>
     b00:	ldr	r1, [sl]
     b04:	mov	r0, #10
     b08:	bl	0 <fputc>
     b0c:	ldr	r7, [r4, #208]	; 0xd0
     b10:	str	sl, [sp, #64]	; 0x40
     b14:	ldr	r6, [r7, #44]	; 0x2c
     b18:	cmp	r6, #0
     b1c:	beq	f68 <__flatcc_fb_gen_c_builder+0x6b8>
     b20:	mov	r9, #1
     b24:	b	e2c <__flatcc_fb_gen_c_builder+0x57c>
     b28:	ldr	r1, [r4, #204]	; 0xcc
     b2c:	mov	r0, #10
     b30:	bl	0 <fputc>
     b34:	ldr	r0, [r4, #204]	; 0xcc
     b38:	movw	r1, #0
     b3c:	mov	r2, r5
     b40:	mov	r3, r5
     b44:	str	r5, [sp]
     b48:	movt	r1, #0
     b4c:	bl	0 <fprintf>
     b50:	mov	r8, #0
     b54:	mov	r0, r4
     b58:	mov	r1, r6
     b5c:	mov	r2, #0
     b60:	mov	r3, r7
     b64:	str	r8, [sp]
     b68:	bl	2170 <gen_builder_struct_args>
     b6c:	movw	sl, #0
     b70:	ldr	r3, [r4, #204]	; 0xcc
     b74:	mov	r1, #4
     b78:	mov	r2, #1
     b7c:	movt	sl, #0
     b80:	mov	r0, sl
     b84:	bl	0 <fwrite>
     b88:	mov	r0, r4
     b8c:	mov	r1, r6
     b90:	mov	r2, r7
     b94:	mov	r3, #0
     b98:	str	r8, [sp]
     b9c:	bl	2408 <gen_builder_struct_field_assign>
     ba0:	movw	sl, #0
     ba4:	ldr	r3, [r4, #204]	; 0xcc
     ba8:	mov	r1, #12
     bac:	mov	r2, #1
     bb0:	movt	sl, #0
     bb4:	mov	r0, sl
     bb8:	bl	0 <fwrite>
     bbc:	ldr	r0, [r4, #204]	; 0xcc
     bc0:	movw	r1, #0
     bc4:	mov	r2, r5
     bc8:	mov	r3, r5
     bcc:	str	r5, [sp]
     bd0:	str	r5, [sp, #4]
     bd4:	movt	r1, #0
     bd8:	bl	0 <fprintf>
     bdc:	ldr	r3, [r4, #204]	; 0xcc
     be0:	movw	r0, #0
     be4:	mov	r1, #2
     be8:	mov	r2, #1
     bec:	movt	r0, #0
     bf0:	bl	0 <fwrite>
     bf4:	mov	r9, #1
     bf8:	mov	r0, r4
     bfc:	mov	r1, r6
     c00:	mov	r2, r7
     c04:	mov	r3, #0
     c08:	str	r9, [sp]
     c0c:	bl	2408 <gen_builder_struct_field_assign>
     c10:	ldr	r3, [r4, #204]	; 0xcc
     c14:	mov	r0, sl
     c18:	mov	r1, #12
     c1c:	mov	r2, #1
     c20:	bl	0 <fwrite>
     c24:	ldr	r0, [r4, #204]	; 0xcc
     c28:	movw	r1, #0
     c2c:	mov	r2, r5
     c30:	mov	r3, r5
     c34:	str	r5, [sp]
     c38:	movt	r1, #0
     c3c:	bl	0 <fprintf>
     c40:	mov	r0, r4
     c44:	mov	r1, r6
     c48:	mov	r2, #0
     c4c:	mov	r3, r7
     c50:	str	r8, [sp]
     c54:	bl	2170 <gen_builder_struct_args>
     c58:	ldr	r3, [r4, #204]	; 0xcc
     c5c:	movw	r0, #0
     c60:	mov	r1, #4
     c64:	mov	r2, #1
     c68:	movt	r0, #0
     c6c:	bl	0 <fwrite>
     c70:	mov	r0, r4
     c74:	mov	r1, r6
     c78:	mov	r2, r7
     c7c:	mov	r3, #2
     c80:	str	r8, [sp]
     c84:	bl	2408 <gen_builder_struct_field_assign>
     c88:	ldr	r3, [r4, #204]	; 0xcc
     c8c:	mov	r0, sl
     c90:	mov	r1, #12
     c94:	mov	r2, #1
     c98:	bl	0 <fwrite>
     c9c:	ldr	r0, [r4, #204]	; 0xcc
     ca0:	movw	r1, #0
     ca4:	mov	r2, r5
     ca8:	mov	r3, r5
     cac:	str	r5, [sp]
     cb0:	str	r5, [sp, #4]
     cb4:	movt	r1, #0
     cb8:	bl	0 <fprintf>
     cbc:	ldr	r3, [r4, #204]	; 0xcc
     cc0:	movw	r0, #0
     cc4:	mov	r1, #2
     cc8:	mov	r2, #1
     ccc:	movt	r0, #0
     cd0:	bl	0 <fwrite>
     cd4:	mov	r0, r4
     cd8:	mov	r1, r6
     cdc:	mov	r2, r7
     ce0:	mov	r3, #2
     ce4:	str	r9, [sp]
     ce8:	bl	2408 <gen_builder_struct_field_assign>
     cec:	ldr	r3, [r4, #204]	; 0xcc
     cf0:	mov	r0, sl
     cf4:	mov	r1, #12
     cf8:	mov	r2, #1
     cfc:	bl	0 <fwrite>
     d00:	ldr	r0, [r4, #204]	; 0xcc
     d04:	movw	r1, #0
     d08:	mov	r2, r5
     d0c:	mov	r3, r5
     d10:	str	r5, [sp]
     d14:	movt	r1, #0
     d18:	bl	0 <fprintf>
     d1c:	mov	r0, r4
     d20:	mov	r1, r6
     d24:	mov	r2, #0
     d28:	mov	r3, r7
     d2c:	str	r8, [sp]
     d30:	bl	2170 <gen_builder_struct_args>
     d34:	ldr	r3, [r4, #204]	; 0xcc
     d38:	movw	r0, #0
     d3c:	mov	r1, #4
     d40:	mov	r2, #1
     d44:	movt	r0, #0
     d48:	bl	0 <fwrite>
     d4c:	mov	r0, r4
     d50:	mov	r1, r6
     d54:	mov	r2, r7
     d58:	mov	r3, #1
     d5c:	str	r8, [sp]
     d60:	bl	2408 <gen_builder_struct_field_assign>
     d64:	ldr	r3, [r4, #204]	; 0xcc
     d68:	mov	r0, sl
     d6c:	mov	r1, #12
     d70:	mov	r2, #1
     d74:	bl	0 <fwrite>
     d78:	ldr	r0, [r4, #204]	; 0xcc
     d7c:	movw	r1, #0
     d80:	mov	r2, r5
     d84:	mov	r3, r5
     d88:	str	r5, [sp]
     d8c:	str	r5, [sp, #4]
     d90:	movt	r1, #0
     d94:	bl	0 <fprintf>
     d98:	ldr	r3, [r4, #204]	; 0xcc
     d9c:	movw	r0, #0
     da0:	mov	r1, #2
     da4:	mov	r2, #1
     da8:	movt	r0, #0
     dac:	bl	0 <fwrite>
     db0:	mov	r0, r4
     db4:	mov	r1, r6
     db8:	mov	r2, r7
     dbc:	mov	r3, #1
     dc0:	str	r9, [sp]
     dc4:	bl	2408 <gen_builder_struct_field_assign>
     dc8:	ldr	r3, [r4, #204]	; 0xcc
     dcc:	mov	r0, sl
     dd0:	mov	r1, #12
     dd4:	mov	r2, #1
     dd8:	bl	0 <fwrite>
     ddc:	ldrh	r1, [r6, #104]	; 0x68
     de0:	ldrd	r2, [r6, #112]	; 0x70
     de4:	ldr	r0, [r4, #204]	; 0xcc
     de8:	str	r5, [sp, #20]
     dec:	str	r5, [sp, #24]
     df0:	str	r5, [sp]
     df4:	str	r1, [sp, #16]
     df8:	movw	r1, #0
     dfc:	str	r2, [sp, #8]
     e00:	str	r3, [sp, #12]
     e04:	mov	r2, r4
     e08:	mov	r3, r4
     e0c:	movt	r1, #0
     e10:	bl	0 <fprintf>
     e14:	ldr	r1, [r4, #204]	; 0xcc
     e18:	mov	r0, #10
     e1c:	bl	0 <fputc>
     e20:	ldr	r6, [r6, #120]	; 0x78
     e24:	cmp	r6, #0
     e28:	beq	f60 <__flatcc_fb_gen_c_builder+0x6b0>
     e2c:	mov	r0, r5
     e30:	mov	r1, #0
     e34:	mov	r2, #220	; 0xdc
     e38:	bl	0 <memset>
     e3c:	ldrh	r0, [r6, #8]
     e40:	cmp	r0, #1
     e44:	bne	1ed8 <__flatcc_fb_gen_c_builder+0x1628>
     e48:	ldr	r0, [r6, #12]
     e4c:	mov	r1, r6
     e50:	mov	r2, r5
     e54:	bl	0 <__flatcc_fb_scoped_symbol_name>
     e58:	mov	r0, r6
     e5c:	bl	2100 <get_total_struct_field_count>
     e60:	mov	r7, r0
     e64:	ldr	r0, [r4, #204]	; 0xcc
     e68:	movw	r1, #0
     e6c:	mov	r2, r5
     e70:	movt	r1, #0
     e74:	bl	0 <fprintf>
     e78:	mov	r0, r4
     e7c:	mov	r1, r6
     e80:	mov	r2, #0
     e84:	mov	r3, r7
     e88:	str	r9, [sp]
     e8c:	bl	2170 <gen_builder_struct_args>
     e90:	ldr	r0, [r4, #204]	; 0xcc
     e94:	movw	r1, #0
     e98:	mov	r2, r5
     e9c:	movt	r1, #0
     ea0:	bl	0 <fprintf>
     ea4:	mov	r0, r6
     ea8:	bl	2100 <get_total_struct_field_count>
     eac:	cmp	r0, #1
     eb0:	blt	b28 <__flatcc_fb_gen_c_builder+0x278>
     eb4:	mov	r8, r0
     eb8:	mov	r9, #0
     ebc:	mov	sl, r7
     ec0:	cmp	r7, #0
     ec4:	bne	f10 <__flatcc_fb_gen_c_builder+0x660>
     ec8:	b	ee0 <__flatcc_fb_gen_c_builder+0x630>
     ecc:	movw	r0, #0
     ed0:	mov	r1, #2
     ed4:	mov	r2, #1
     ed8:	movt	r0, #0
     edc:	bl	0 <fwrite>
     ee0:	ldr	r0, [sp, #64]	; 0x40
     ee4:	movw	r1, #0
     ee8:	mov	r2, r9
     eec:	movt	r1, #0
     ef0:	ldr	r0, [r0]
     ef4:	bl	0 <fprintf>
     ef8:	add	r9, r9, #1
     efc:	sub	sl, sl, #1
     f00:	cmp	r8, r9
     f04:	beq	b28 <__flatcc_fb_gen_c_builder+0x278>
     f08:	cmp	r7, #0
     f0c:	beq	ee0 <__flatcc_fb_gen_c_builder+0x630>
     f10:	cmp	r9, #0
     f14:	beq	f34 <__flatcc_fb_gen_c_builder+0x684>
     f18:	ldr	r0, [sp, #64]	; 0x40
     f1c:	tst	r9, #3
     f20:	ldr	r3, [r0]
     f24:	bne	ecc <__flatcc_fb_gen_c_builder+0x61c>
     f28:	cmp	sl, #2
     f2c:	bgt	f44 <__flatcc_fb_gen_c_builder+0x694>
     f30:	b	ecc <__flatcc_fb_gen_c_builder+0x61c>
     f34:	ldr	r0, [sp, #64]	; 0x40
     f38:	cmp	r7, #5
     f3c:	ldr	r3, [r0]
     f40:	blt	ecc <__flatcc_fb_gen_c_builder+0x61c>
     f44:	movw	r1, #0
     f48:	movw	r2, #0
     f4c:	mov	r0, r3
     f50:	movt	r1, #0
     f54:	movt	r2, #0
     f58:	bl	0 <fprintf>
     f5c:	b	ee0 <__flatcc_fb_gen_c_builder+0x630>
     f60:	ldr	r7, [r4, #208]	; 0xd0
     f64:	ldr	sl, [sp, #64]	; 0x40
     f68:	sub	r9, fp, #256	; 0x100
     f6c:	mov	r1, #0
     f70:	mov	r2, #220	; 0xdc
     f74:	mov	r5, #0
     f78:	mov	r0, r9
     f7c:	bl	0 <memset>
     f80:	ldr	r6, [r7, #40]	; 0x28
     f84:	cmp	r6, #0
     f88:	beq	ff4 <__flatcc_fb_gen_c_builder+0x744>
     f8c:	movw	r7, #0
     f90:	movt	r7, #0
     f94:	b	fa4 <__flatcc_fb_gen_c_builder+0x6f4>
     f98:	ldr	r6, [r6]
     f9c:	cmp	r6, #0
     fa0:	beq	fe0 <__flatcc_fb_gen_c_builder+0x730>
     fa4:	ldrh	r0, [r6, #8]
     fa8:	cmp	r0, #4
     fac:	bne	f98 <__flatcc_fb_gen_c_builder+0x6e8>
     fb0:	ldr	r0, [r6, #12]
     fb4:	mov	r1, r6
     fb8:	mov	r2, r9
     fbc:	bl	0 <__flatcc_fb_scoped_symbol_name>
     fc0:	ldr	r0, [r4, #204]	; 0xcc
     fc4:	mov	r1, r7
     fc8:	mov	r2, r4
     fcc:	mov	r3, r9
     fd0:	stm	sp, {r4, r9}
     fd4:	bl	0 <fprintf>
     fd8:	mov	r5, #1
     fdc:	b	f98 <__flatcc_fb_gen_c_builder+0x6e8>
     fe0:	cmp	r5, #0
     fe4:	beq	ff4 <__flatcc_fb_gen_c_builder+0x744>
     fe8:	ldr	r1, [sl]
     fec:	mov	r0, #10
     ff0:	bl	0 <fputc>
     ff4:	ldr	r0, [r4, #208]	; 0xd0
     ff8:	ldr	r6, [r0, #40]	; 0x28
     ffc:	cmp	r6, #0
    1000:	beq	1de4 <__flatcc_fb_gen_c_builder+0x1534>
    1004:	movw	sl, #0
    1008:	mov	r1, #0
    100c:	mov	r7, #1
    1010:	movt	sl, #0
    1014:	b	108c <__flatcc_fb_gen_c_builder+0x7dc>
    1018:	ldr	r0, [sp, #64]	; 0x40
    101c:	ldr	r3, [r0]
    1020:	movw	r0, #0
    1024:	mov	r1, #6
    1028:	mov	r2, #1
    102c:	movt	r0, #0
    1030:	bl	0 <fwrite>
    1034:	mov	r0, r9
    1038:	mov	r1, #0
    103c:	mov	r2, #220	; 0xdc
    1040:	bl	0 <memset>
    1044:	ldr	r0, [r6, #12]
    1048:	mov	r1, r6
    104c:	mov	r2, r9
    1050:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1054:	ldrd	r2, [r6, #96]	; 0x60
    1058:	ldr	r0, [r4, #204]	; 0xcc
    105c:	movw	r1, #0
    1060:	str	r9, [sp]
    1064:	movt	r1, #0
    1068:	str	r2, [sp, #8]
    106c:	str	r3, [sp, #12]
    1070:	mov	r2, r4
    1074:	mov	r3, r4
    1078:	bl	0 <fprintf>
    107c:	mov	r1, #1
    1080:	ldr	r6, [r6]
    1084:	cmp	r6, #0
    1088:	beq	11e8 <__flatcc_fb_gen_c_builder+0x938>
    108c:	ldrh	r0, [r6, #8]
    1090:	cmp	r0, #0
    1094:	bne	1080 <__flatcc_fb_gen_c_builder+0x7d0>
    1098:	mov	r0, r9
    109c:	mov	r1, #0
    10a0:	mov	r2, #220	; 0xdc
    10a4:	mov	r8, #0
    10a8:	bl	0 <memset>
    10ac:	ldr	r0, [r6, #20]
    10b0:	cmp	r0, #0
    10b4:	beq	10d4 <__flatcc_fb_gen_c_builder+0x824>
    10b8:	mov	r8, #0
    10bc:	ldrh	r1, [r0, #72]	; 0x48
    10c0:	ldr	r0, [r0]
    10c4:	bic	r1, r7, r1, lsr #2
    10c8:	cmp	r0, #0
    10cc:	add	r8, r8, r1
    10d0:	bne	10bc <__flatcc_fb_gen_c_builder+0x80c>
    10d4:	ldr	r0, [r6, #12]
    10d8:	mov	r1, r6
    10dc:	mov	r2, r9
    10e0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    10e4:	ldr	r0, [r4, #204]	; 0xcc
    10e8:	movw	r1, #0
    10ec:	mov	r2, r4
    10f0:	mov	r3, r9
    10f4:	movt	r1, #0
    10f8:	bl	0 <fprintf>
    10fc:	ldr	r5, [r6, #20]
    1100:	cmp	r5, #0
    1104:	beq	1018 <__flatcc_fb_gen_c_builder+0x768>
    1108:	mov	r9, #0
    110c:	b	1144 <__flatcc_fb_gen_c_builder+0x894>
    1110:	ldr	r0, [sp, #64]	; 0x40
    1114:	ldr	r1, [r0]
    1118:	mov	r0, #32
    111c:	bl	0 <fputc>
    1120:	ldr	r0, [sp, #64]	; 0x40
    1124:	ldr	r2, [r5, #96]	; 0x60
    1128:	mov	r1, sl
    112c:	ldr	r0, [r0]
    1130:	bl	0 <fprintf>
    1134:	add	r9, r9, #1
    1138:	ldr	r5, [r5]
    113c:	cmp	r5, #0
    1140:	beq	11b4 <__flatcc_fb_gen_c_builder+0x904>
    1144:	ldrh	r0, [r5, #72]	; 0x48
    1148:	and	r0, r0, #260	; 0x104
    114c:	cmp	r0, #256	; 0x100
    1150:	bne	1138 <__flatcc_fb_gen_c_builder+0x888>
    1154:	cmp	r9, #1
    1158:	blt	1110 <__flatcc_fb_gen_c_builder+0x860>
    115c:	cmp	r8, #0
    1160:	beq	1120 <__flatcc_fb_gen_c_builder+0x870>
    1164:	ldr	r0, [sp, #64]	; 0x40
    1168:	tst	r9, #3
    116c:	ldr	r3, [r0]
    1170:	bne	119c <__flatcc_fb_gen_c_builder+0x8ec>
    1174:	sub	r0, r8, r9
    1178:	cmp	r0, #2
    117c:	ble	119c <__flatcc_fb_gen_c_builder+0x8ec>
    1180:	movw	r1, #0
    1184:	movw	r2, #0
    1188:	mov	r0, r3
    118c:	movt	r1, #0
    1190:	movt	r2, #0
    1194:	bl	0 <fprintf>
    1198:	b	1120 <__flatcc_fb_gen_c_builder+0x870>
    119c:	movw	r0, #0
    11a0:	mov	r1, #2
    11a4:	mov	r2, #1
    11a8:	movt	r0, #0
    11ac:	bl	0 <fwrite>
    11b0:	b	1120 <__flatcc_fb_gen_c_builder+0x870>
    11b4:	ldr	r0, [sp, #64]	; 0x40
    11b8:	cmp	r9, #1
    11bc:	ldr	r3, [r0]
    11c0:	blt	11e0 <__flatcc_fb_gen_c_builder+0x930>
    11c4:	movw	r0, #0
    11c8:	mov	r1, #7
    11cc:	mov	r2, #1
    11d0:	movt	r0, #0
    11d4:	bl	0 <fwrite>
    11d8:	sub	r9, fp, #256	; 0x100
    11dc:	b	1034 <__flatcc_fb_gen_c_builder+0x784>
    11e0:	sub	r9, fp, #256	; 0x100
    11e4:	b	1020 <__flatcc_fb_gen_c_builder+0x770>
    11e8:	ldr	r0, [r4, #208]	; 0xd0
    11ec:	ldr	sl, [sp, #64]	; 0x40
    11f0:	str	r1, [sp, #60]	; 0x3c
    11f4:	ldr	r6, [r0, #40]	; 0x28
    11f8:	cmp	r6, #0
    11fc:	beq	1614 <__flatcc_fb_gen_c_builder+0xd64>
    1200:	add	r5, sp, #168	; 0xa8
    1204:	mov	r8, #1
    1208:	b	124c <__flatcc_fb_gen_c_builder+0x99c>
    120c:	ldr	r1, [r4, #204]	; 0xcc
    1210:	mov	r0, #10
    1214:	bl	0 <fputc>
    1218:	ldr	r0, [r4, #204]	; 0xcc
    121c:	movw	r1, #0
    1220:	add	r5, sp, #168	; 0xa8
    1224:	str	r4, [sp]
    1228:	movt	r1, #0
    122c:	mov	r2, r5
    1230:	mov	r3, r5
    1234:	str	r5, [sp, #4]
    1238:	bl	0 <fprintf>
    123c:	sub	r9, fp, #256	; 0x100
    1240:	ldr	r6, [r6]
    1244:	cmp	r6, #0
    1248:	beq	1614 <__flatcc_fb_gen_c_builder+0xd64>
    124c:	ldrh	r0, [r6, #8]
    1250:	cmp	r0, #0
    1254:	bne	1240 <__flatcc_fb_gen_c_builder+0x990>
    1258:	mov	r0, r5
    125c:	mov	r1, #0
    1260:	mov	r2, #220	; 0xdc
    1264:	mov	r9, #0
    1268:	bl	0 <memset>
    126c:	ldr	r0, [r6, #12]
    1270:	mov	r1, r6
    1274:	mov	r2, r5
    1278:	bl	0 <__flatcc_fb_scoped_symbol_name>
    127c:	ldr	r0, [r6, #20]
    1280:	cmp	r0, #0
    1284:	beq	12a4 <__flatcc_fb_gen_c_builder+0x9f4>
    1288:	mov	r9, #0
    128c:	ldrh	r1, [r0, #72]	; 0x48
    1290:	ldr	r0, [r0]
    1294:	bic	r1, r8, r1, lsr #2
    1298:	cmp	r0, #0
    129c:	add	r9, r9, r1
    12a0:	bne	128c <__flatcc_fb_gen_c_builder+0x9dc>
    12a4:	ldr	r0, [sl]
    12a8:	movw	r1, #0
    12ac:	mov	r2, r5
    12b0:	movt	r1, #0
    12b4:	bl	0 <fprintf>
    12b8:	sub	r5, fp, #256	; 0x100
    12bc:	mov	r1, #0
    12c0:	mov	r2, #220	; 0xdc
    12c4:	mov	r0, r5
    12c8:	bl	0 <memset>
    12cc:	ldr	r7, [r6, #20]
    12d0:	cmp	r7, #0
    12d4:	beq	1550 <__flatcc_fb_gen_c_builder+0xca0>
    12d8:	mov	sl, #0
    12dc:	b	1314 <__flatcc_fb_gen_c_builder+0xa64>
    12e0:	cmp	r0, #3
    12e4:	bne	2020 <__flatcc_fb_gen_c_builder+0x1770>
    12e8:	ldr	r0, [sp, #64]	; 0x40
    12ec:	ldrd	r2, [r7, #96]	; 0x60
    12f0:	movw	r1, #0
    12f4:	movt	r1, #0
    12f8:	ldr	r0, [r0]
    12fc:	stm	sp, {r2, r3}
    1300:	mov	r2, r5
    1304:	bl	0 <fprintf>
    1308:	ldr	r7, [r7]
    130c:	cmp	r7, #0
    1310:	beq	1550 <__flatcc_fb_gen_c_builder+0xca0>
    1314:	ldrb	r0, [r7, #72]	; 0x48
    1318:	tst	r0, #4
    131c:	bne	1308 <__flatcc_fb_gen_c_builder+0xa58>
    1320:	cmp	r9, #0
    1324:	beq	138c <__flatcc_fb_gen_c_builder+0xadc>
    1328:	cmp	sl, #0
    132c:	beq	1368 <__flatcc_fb_gen_c_builder+0xab8>
    1330:	ldr	r0, [sp, #64]	; 0x40
    1334:	tst	sl, #3
    1338:	ldr	r3, [r0]
    133c:	bne	1378 <__flatcc_fb_gen_c_builder+0xac8>
    1340:	sub	r0, r9, sl
    1344:	cmp	r0, #2
    1348:	ble	1378 <__flatcc_fb_gen_c_builder+0xac8>
    134c:	movw	r1, #0
    1350:	movw	r2, #0
    1354:	mov	r0, r3
    1358:	movt	r1, #0
    135c:	movt	r2, #0
    1360:	bl	0 <fprintf>
    1364:	b	138c <__flatcc_fb_gen_c_builder+0xadc>
    1368:	ldr	r0, [sp, #64]	; 0x40
    136c:	cmp	r9, #5
    1370:	ldr	r3, [r0]
    1374:	bge	134c <__flatcc_fb_gen_c_builder+0xa9c>
    1378:	movw	r0, #0
    137c:	mov	r1, #2
    1380:	mov	r2, #1
    1384:	movt	r0, #0
    1388:	bl	0 <fwrite>
    138c:	ldrh	r0, [r7, #24]
    1390:	sub	r0, r0, #7
    1394:	cmp	r0, #8
    1398:	bhi	1e38 <__flatcc_fb_gen_c_builder+0x1588>
    139c:	add	r1, pc, #4
    13a0:	add	sl, sl, #1
    13a4:	ldr	pc, [r1, r0, lsl #2]
    13a8:	.word	0x000013cc
    13ac:	.word	0x0000141c
    13b0:	.word	0x0000146c
    13b4:	.word	0x00001408
    13b8:	.word	0x00001e38
    13bc:	.word	0x00001e38
    13c0:	.word	0x00001e38
    13c4:	.word	0x000014c4
    13c8:	.word	0x00001488
    13cc:	ldr	r0, [r7, #16]
    13d0:	sub	r1, r0, #1
    13d4:	cmp	r1, #11
    13d8:	bcs	2068 <__flatcc_fb_gen_c_builder+0x17b8>
    13dc:	ldrd	r2, [r7, #96]	; 0x60
    13e0:	ldr	r0, [r4, #204]	; 0xcc
    13e4:	stm	sp, {r2, r3}
    13e8:	movw	r2, #0
    13ec:	movt	r2, #0
    13f0:	ldr	r3, [r2, r1, lsl #2]
    13f4:	movw	r1, #0
    13f8:	mov	r2, r4
    13fc:	movt	r1, #0
    1400:	bl	0 <fprintf>
    1404:	b	1308 <__flatcc_fb_gen_c_builder+0xa58>
    1408:	ldr	r0, [r4, #204]	; 0xcc
    140c:	ldrd	r2, [r7, #96]	; 0x60
    1410:	movw	r1, #0
    1414:	movt	r1, #0
    1418:	b	147c <__flatcc_fb_gen_c_builder+0xbcc>
    141c:	ldr	r2, [r7, #16]
    1420:	sub	r1, r2, #1
    1424:	cmp	r1, #11
    1428:	bcs	1f40 <__flatcc_fb_gen_c_builder+0x1690>
    142c:	ldr	r3, [r7, #96]	; 0x60
    1430:	ldr	r0, [r4, #204]	; 0xcc
    1434:	ldr	r5, [r7, #100]	; 0x64
    1438:	cmp	r2, #5
    143c:	movw	r2, #0
    1440:	movt	r2, #0
    1444:	moveq	r2, r4
    1448:	stm	sp, {r3, r5}
    144c:	movw	r3, #0
    1450:	movt	r3, #0
    1454:	ldr	r3, [r3, r1, lsl #2]
    1458:	movw	r1, #0
    145c:	movt	r1, #0
    1460:	bl	0 <fprintf>
    1464:	sub	r5, fp, #256	; 0x100
    1468:	b	1308 <__flatcc_fb_gen_c_builder+0xa58>
    146c:	ldrd	r2, [r7, #96]	; 0x60
    1470:	ldr	r0, [r4, #204]	; 0xcc
    1474:	movw	r1, #0
    1478:	movt	r1, #0
    147c:	stm	sp, {r2, r3}
    1480:	mov	r2, r4
    1484:	b	1304 <__flatcc_fb_gen_c_builder+0xa54>
    1488:	ldr	r1, [r7, #16]
    148c:	mov	r2, r5
    1490:	ldr	r0, [r1, #12]
    1494:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1498:	ldr	r0, [r7, #16]
    149c:	ldrh	r0, [r0, #8]
    14a0:	cmp	r0, #2
    14a4:	bcc	12e8 <__flatcc_fb_gen_c_builder+0xa38>
    14a8:	cmp	r0, #4
    14ac:	bne	12e0 <__flatcc_fb_gen_c_builder+0xa30>
    14b0:	ldr	r0, [sp, #64]	; 0x40
    14b4:	ldrd	r2, [r7, #96]	; 0x60
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	b	12f8 <__flatcc_fb_gen_c_builder+0xa48>
    14c4:	ldr	r1, [r7, #16]
    14c8:	mov	r2, r5
    14cc:	ldr	r0, [r1, #12]
    14d0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    14d4:	ldr	r0, [r7, #16]
    14d8:	ldrh	r0, [r0, #8]
    14dc:	cmp	r0, #4
    14e0:	bhi	1ef8 <__flatcc_fb_gen_c_builder+0x1648>
    14e4:	add	r1, pc, #0
    14e8:	ldr	pc, [r1, r0, lsl #2]
    14ec:	.word	0x00001500
    14f0:	.word	0x00001528
    14f4:	.word	0x00001ef8
    14f8:	.word	0x0000153c
    14fc:	.word	0x00001514
    1500:	ldr	r0, [sp, #64]	; 0x40
    1504:	ldrd	r2, [r7, #96]	; 0x60
    1508:	movw	r1, #0
    150c:	movt	r1, #0
    1510:	b	12f8 <__flatcc_fb_gen_c_builder+0xa48>
    1514:	ldr	r0, [sp, #64]	; 0x40
    1518:	ldrd	r2, [r7, #96]	; 0x60
    151c:	movw	r1, #0
    1520:	movt	r1, #0
    1524:	b	12f8 <__flatcc_fb_gen_c_builder+0xa48>
    1528:	ldr	r0, [sp, #64]	; 0x40
    152c:	ldrd	r2, [r7, #96]	; 0x60
    1530:	movw	r1, #0
    1534:	movt	r1, #0
    1538:	b	12f8 <__flatcc_fb_gen_c_builder+0xa48>
    153c:	ldr	r0, [sp, #64]	; 0x40
    1540:	ldrd	r2, [r7, #96]	; 0x60
    1544:	movw	r1, #0
    1548:	movt	r1, #0
    154c:	b	12f8 <__flatcc_fb_gen_c_builder+0xa48>
    1550:	ldr	sl, [sp, #64]	; 0x40
    1554:	movw	r1, #0
    1558:	add	r2, sp, #168	; 0xa8
    155c:	movt	r1, #0
    1560:	ldr	r0, [sl]
    1564:	bl	0 <fprintf>
    1568:	ldr	r5, [r6, #20]
    156c:	cmp	r5, #0
    1570:	beq	120c <__flatcc_fb_gen_c_builder+0x95c>
    1574:	mov	r7, #0
    1578:	b	15b4 <__flatcc_fb_gen_c_builder+0xd04>
    157c:	movw	r0, #0
    1580:	mov	r1, #2
    1584:	mov	r2, #1
    1588:	movt	r0, #0
    158c:	bl	0 <fwrite>
    1590:	ldrd	r2, [r5, #96]	; 0x60
    1594:	ldr	r0, [sl]
    1598:	movw	r1, #0
    159c:	movt	r1, #0
    15a0:	bl	0 <fprintf>
    15a4:	add	r7, r7, #1
    15a8:	ldr	r5, [r5]
    15ac:	cmp	r5, #0
    15b0:	beq	120c <__flatcc_fb_gen_c_builder+0x95c>
    15b4:	ldrb	r0, [r5, #72]	; 0x48
    15b8:	tst	r0, #4
    15bc:	bne	15a8 <__flatcc_fb_gen_c_builder+0xcf8>
    15c0:	cmp	r9, #0
    15c4:	beq	1590 <__flatcc_fb_gen_c_builder+0xce0>
    15c8:	cmp	r7, #0
    15cc:	beq	15ec <__flatcc_fb_gen_c_builder+0xd3c>
    15d0:	ldr	r3, [sl]
    15d4:	tst	r7, #3
    15d8:	bne	157c <__flatcc_fb_gen_c_builder+0xccc>
    15dc:	sub	r0, r9, r7
    15e0:	cmp	r0, #2
    15e4:	bgt	15f8 <__flatcc_fb_gen_c_builder+0xd48>
    15e8:	b	157c <__flatcc_fb_gen_c_builder+0xccc>
    15ec:	ldr	r3, [sl]
    15f0:	cmp	r9, #5
    15f4:	blt	157c <__flatcc_fb_gen_c_builder+0xccc>
    15f8:	movw	r1, #0
    15fc:	movw	r2, #0
    1600:	mov	r0, r3
    1604:	movt	r1, #0
    1608:	movt	r2, #0
    160c:	bl	0 <fprintf>
    1610:	b	1590 <__flatcc_fb_gen_c_builder+0xce0>
    1614:	ldr	r0, [sp, #60]	; 0x3c
    1618:	cmp	r0, #0
    161c:	beq	1de4 <__flatcc_fb_gen_c_builder+0x1534>
    1620:	ldr	r1, [r4, #204]	; 0xcc
    1624:	mov	r0, #10
    1628:	bl	0 <fputc>
    162c:	mov	r0, r4
    1630:	bl	28c4 <gen_unions>
    1634:	ldr	r0, [r4, #208]	; 0xd0
    1638:	ldr	r5, [r0, #40]	; 0x28
    163c:	cmp	r5, #0
    1640:	bne	16c0 <__flatcc_fb_gen_c_builder+0xe10>
    1644:	b	1dec <__flatcc_fb_gen_c_builder+0x153c>
    1648:	ldr	r0, [r4, #204]	; 0xcc
    164c:	movw	r1, #0
    1650:	mov	r2, r9
    1654:	movt	r1, #0
    1658:	bl	0 <fprintf>
    165c:	mov	r0, r9
    1660:	mov	r1, #0
    1664:	mov	r2, #220	; 0xdc
    1668:	bl	0 <memset>
    166c:	ldr	r0, [sp, #60]	; 0x3c
    1670:	ldr	r1, [sp, #60]	; 0x3c
    1674:	mov	r2, r9
    1678:	ldr	r0, [r0, #12]
    167c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1680:	ldr	r0, [r4, #204]	; 0xcc
    1684:	movw	r1, #0
    1688:	mov	r2, r4
    168c:	mov	r3, r4
    1690:	str	r9, [sp]
    1694:	str	r9, [sp, #4]
    1698:	str	r9, [sp, #8]
    169c:	movt	r1, #0
    16a0:	bl	0 <fprintf>
    16a4:	ldr	r1, [r4, #204]	; 0xcc
    16a8:	mov	r0, #10
    16ac:	bl	0 <fputc>
    16b0:	ldr	r5, [sp, #60]	; 0x3c
    16b4:	ldr	r5, [r5]
    16b8:	cmp	r5, #0
    16bc:	beq	1dec <__flatcc_fb_gen_c_builder+0x153c>
    16c0:	ldrh	r0, [r5, #8]
    16c4:	cmp	r0, #0
    16c8:	bne	16b4 <__flatcc_fb_gen_c_builder+0xe04>
    16cc:	mov	r0, r9
    16d0:	mov	r1, #0
    16d4:	mov	r2, #220	; 0xdc
    16d8:	bl	0 <memset>
    16dc:	add	r0, sp, #168	; 0xa8
    16e0:	mov	r1, #0
    16e4:	mov	r2, #220	; 0xdc
    16e8:	bl	0 <memset>
    16ec:	ldr	r0, [r5, #12]
    16f0:	mov	r1, r5
    16f4:	mov	r2, r9
    16f8:	bl	0 <__flatcc_fb_scoped_symbol_name>
    16fc:	ldr	r7, [r5, #20]
    1700:	str	r5, [sp, #60]	; 0x3c
    1704:	cmp	r7, #0
    1708:	bne	173c <__flatcc_fb_gen_c_builder+0xe8c>
    170c:	b	1c24 <__flatcc_fb_gen_c_builder+0x1374>
    1710:	ldr	r0, [r4, #204]	; 0xcc
    1714:	ldrd	r2, [r5]
    1718:	movw	r1, #0
    171c:	movt	r1, #0
    1720:	stm	sp, {r2, r3, r4, r9, sl}
    1724:	str	r8, [sp, #20]
    1728:	mov	r2, r4
    172c:	bl	0 <fprintf>
    1730:	ldr	r7, [r7]
    1734:	cmp	r7, #0
    1738:	beq	1c24 <__flatcc_fb_gen_c_builder+0x1374>
    173c:	ldr	r0, [r7, #4]
    1740:	ldm	r0, {r8, sl}
    1744:	ldrb	r0, [r7, #72]	; 0x48
    1748:	tst	r0, #4
    174c:	bne	1860 <__flatcc_fb_gen_c_builder+0xfb0>
    1750:	ldrh	r0, [r7, #24]
    1754:	sub	r0, r0, #7
    1758:	cmp	r0, #8
    175c:	bhi	1e88 <__flatcc_fb_gen_c_builder+0x15d8>
    1760:	add	r1, pc, #8
    1764:	add	r6, r7, #88	; 0x58
    1768:	add	r5, r7, #96	; 0x60
    176c:	ldr	pc, [r1, r0, lsl #2]
    1770:	.word	0x00001794
    1774:	.word	0x00001890
    1778:	.word	0x0000193c
    177c:	.word	0x00001710
    1780:	.word	0x00001e88
    1784:	.word	0x00001e88
    1788:	.word	0x00001e88
    178c:	.word	0x000019d8
    1790:	.word	0x00001950
    1794:	ldr	r2, [r7, #16]
    1798:	sub	r1, r2, #1
    179c:	cmp	r1, #11
    17a0:	bcs	1f40 <__flatcc_fb_gen_c_builder+0x1690>
    17a4:	movw	r0, #0
    17a8:	cmp	r2, #5
    17ac:	movw	r2, #0
    17b0:	ldr	r6, [r5]
    17b4:	ldr	r5, [r5, #4]
    17b8:	movt	r0, #0
    17bc:	movt	r2, #0
    17c0:	moveq	r2, r4
    17c4:	ldr	r3, [r0, r1, lsl #2]
    17c8:	ldr	r0, [r4, #204]	; 0xcc
    17cc:	str	r2, [sp, #32]
    17d0:	movw	r2, #0
    17d4:	movt	r2, #0
    17d8:	str	r6, [sp]
    17dc:	str	r5, [sp, #4]
    17e0:	ldr	r1, [r2, r1, lsl #2]
    17e4:	add	r2, sp, #8
    17e8:	str	r3, [sp, #36]	; 0x24
    17ec:	stm	r2, {r4, r9, sl}
    17f0:	mov	r2, r4
    17f4:	str	r8, [sp, #20]
    17f8:	str	r4, [sp, #24]
    17fc:	str	r1, [sp, #28]
    1800:	movw	r1, #0
    1804:	movt	r1, #0
    1808:	bl	0 <fprintf>
    180c:	ldr	r1, [r7, #104]	; 0x68
    1810:	cmp	r1, #0
    1814:	beq	1880 <__flatcc_fb_gen_c_builder+0xfd0>
    1818:	ldrh	r0, [r1, #8]
    181c:	cmp	r0, #1
    1820:	beq	1a38 <__flatcc_fb_gen_c_builder+0x1188>
    1824:	cmp	r0, #0
    1828:	bne	20b8 <__flatcc_fb_gen_c_builder+0x1808>
    182c:	ldr	r0, [r1, #12]
    1830:	add	r5, sp, #168	; 0xa8
    1834:	mov	r2, r5
    1838:	bl	0 <__flatcc_fb_scoped_symbol_name>
    183c:	ldr	r0, [r4, #204]	; 0xcc
    1840:	movw	r1, #0
    1844:	stm	sp, {r9, sl}
    1848:	str	r8, [sp, #8]
    184c:	str	r5, [sp, #12]
    1850:	str	r5, [sp, #16]
    1854:	str	r5, [sp, #20]
    1858:	movt	r1, #0
    185c:	b	1a74 <__flatcc_fb_gen_c_builder+0x11c4>
    1860:	ldr	r0, [sp, #64]	; 0x40
    1864:	movw	r1, #0
    1868:	mov	r2, r9
    186c:	mov	r3, sl
    1870:	movt	r1, #0
    1874:	ldr	r0, [r0]
    1878:	str	r8, [sp]
    187c:	bl	0 <fprintf>
    1880:	ldr	r7, [r7]
    1884:	cmp	r7, #0
    1888:	bne	173c <__flatcc_fb_gen_c_builder+0xe8c>
    188c:	b	1c24 <__flatcc_fb_gen_c_builder+0x1374>
    1890:	ldr	r9, [r7, #16]
    1894:	str	r8, [sp, #56]	; 0x38
    1898:	sub	r8, r9, #1
    189c:	cmp	r8, #11
    18a0:	bcs	1f40 <__flatcc_fb_gen_c_builder+0x1690>
    18a4:	add	r1, r7, #48	; 0x30
    18a8:	mov	r0, r9
    18ac:	add	r2, sp, #68	; 0x44
    18b0:	bl	2a94 <print_literal>
    18b4:	ldr	r1, [r6, #4]
    18b8:	ldm	r5, {r2, ip}
    18bc:	ldr	r0, [r4, #204]	; 0xcc
    18c0:	ldr	r6, [r6]
    18c4:	ldrh	r5, [r7, #74]	; 0x4a
    18c8:	cmp	r9, #5
    18cc:	add	r3, sp, #68	; 0x44
    18d0:	sub	r9, fp, #256	; 0x100
    18d4:	str	r3, [sp, #52]	; 0x34
    18d8:	str	r1, [sp, #44]	; 0x2c
    18dc:	movw	r1, #0
    18e0:	str	r5, [sp, #48]	; 0x30
    18e4:	str	r6, [sp, #40]	; 0x28
    18e8:	movt	r1, #0
    18ec:	ldr	r1, [r1, r8, lsl #2]
    18f0:	str	r1, [sp, #36]	; 0x24
    18f4:	movw	r1, #0
    18f8:	movt	r1, #0
    18fc:	moveq	r1, r4
    1900:	str	r1, [sp, #32]
    1904:	movw	r1, #0
    1908:	stm	sp, {r2, ip}
    190c:	ldr	r2, [sp, #56]	; 0x38
    1910:	str	r4, [sp, #8]
    1914:	str	r9, [sp, #12]
    1918:	str	sl, [sp, #16]
    191c:	str	r4, [sp, #24]
    1920:	movt	r1, #0
    1924:	ldr	r1, [r1, r8, lsl #2]
    1928:	str	r2, [sp, #20]
    192c:	str	r1, [sp, #28]
    1930:	movw	r1, #0
    1934:	movt	r1, #0
    1938:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    193c:	ldrd	r2, [r5]
    1940:	ldr	r0, [r4, #204]	; 0xcc
    1944:	movw	r1, #0
    1948:	movt	r1, #0
    194c:	b	1720 <__flatcc_fb_gen_c_builder+0xe70>
    1950:	ldr	r1, [r7, #16]
    1954:	add	r2, sp, #168	; 0xa8
    1958:	ldr	r0, [r1, #12]
    195c:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1960:	ldr	r0, [r7, #16]
    1964:	ldrh	r1, [r0, #8]
    1968:	cmp	r1, #4
    196c:	bhi	1f90 <__flatcc_fb_gen_c_builder+0x16e0>
    1970:	add	r2, pc, #0
    1974:	ldr	pc, [r2, r1, lsl #2]
    1978:	.word	0x0000198c
    197c:	.word	0x00001b14
    1980:	.word	0x00001f90
    1984:	.word	0x00001ba0
    1988:	.word	0x00001a80
    198c:	ldrb	r0, [r0, #10]
    1990:	tst	r0, #8
    1994:	beq	19b4 <__flatcc_fb_gen_c_builder+0x1104>
    1998:	ldr	r0, [sp, #64]	; 0x40
    199c:	mov	r1, #32
    19a0:	mov	r2, #1
    19a4:	ldr	r3, [r0]
    19a8:	movw	r0, #0
    19ac:	movt	r0, #0
    19b0:	bl	0 <fwrite>
    19b4:	ldrd	r2, [r5]
    19b8:	ldr	r0, [r4, #204]	; 0xcc
    19bc:	add	r1, sp, #168	; 0xa8
    19c0:	stm	sp, {r2, r3, r4, r9, sl}
    19c4:	str	r1, [sp, #24]
    19c8:	movw	r1, #0
    19cc:	str	r8, [sp, #20]
    19d0:	movt	r1, #0
    19d4:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    19d8:	ldr	r1, [r7, #16]
    19dc:	add	r2, sp, #168	; 0xa8
    19e0:	ldr	r0, [r1, #12]
    19e4:	bl	0 <__flatcc_fb_scoped_symbol_name>
    19e8:	ldr	r0, [r7, #16]
    19ec:	ldrh	r1, [r0, #8]
    19f0:	cmp	r1, #4
    19f4:	bhi	1fd8 <__flatcc_fb_gen_c_builder+0x1728>
    19f8:	add	r2, pc, #0
    19fc:	ldr	pc, [r2, r1, lsl #2]
    1a00:	.word	0x00001a14
    1a04:	.word	0x00001b64
    1a08:	.word	0x00001fd8
    1a0c:	.word	0x00001bc8
    1a10:	.word	0x00001ab8
    1a14:	ldrd	r2, [r5]
    1a18:	ldr	r0, [r4, #204]	; 0xcc
    1a1c:	add	r1, sp, #168	; 0xa8
    1a20:	stm	sp, {r2, r3, r4, r9, sl}
    1a24:	str	r1, [sp, #24]
    1a28:	movw	r1, #0
    1a2c:	str	r8, [sp, #20]
    1a30:	movt	r1, #0
    1a34:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    1a38:	ldr	r0, [r1, #12]
    1a3c:	add	r5, sp, #168	; 0xa8
    1a40:	mov	r2, r5
    1a44:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1a48:	ldr	r1, [r7, #104]	; 0x68
    1a4c:	ldr	r0, [r4, #204]	; 0xcc
    1a50:	ldrh	r1, [r1, #104]	; 0x68
    1a54:	stm	sp, {r9, sl}
    1a58:	str	r8, [sp, #8]
    1a5c:	str	r5, [sp, #12]
    1a60:	str	r5, [sp, #20]
    1a64:	str	r5, [sp, #24]
    1a68:	str	r1, [sp, #16]
    1a6c:	movw	r1, #0
    1a70:	movt	r1, #0
    1a74:	mov	r2, r4
    1a78:	mov	r3, r4
    1a7c:	b	187c <__flatcc_fb_gen_c_builder+0xfcc>
    1a80:	ldrd	r2, [r5]
    1a84:	ldr	r0, [r4, #204]	; 0xcc
    1a88:	add	r1, sp, #168	; 0xa8
    1a8c:	stm	sp, {r2, r3, r4, r9, sl}
    1a90:	str	r1, [sp, #24]
    1a94:	movw	r1, #0
    1a98:	mov	r2, r4
    1a9c:	str	r8, [sp, #20]
    1aa0:	movt	r1, #0
    1aa4:	bl	0 <fprintf>
    1aa8:	ldr	r0, [r7, #16]
    1aac:	str	r0, [sp]
    1ab0:	mov	r0, #1
    1ab4:	b	1aec <__flatcc_fb_gen_c_builder+0x123c>
    1ab8:	ldrd	r2, [r5]
    1abc:	ldr	r0, [r4, #204]	; 0xcc
    1ac0:	add	r1, sp, #168	; 0xa8
    1ac4:	stm	sp, {r2, r3, r4, r9, sl}
    1ac8:	str	r1, [sp, #24]
    1acc:	movw	r1, #0
    1ad0:	mov	r2, r4
    1ad4:	str	r8, [sp, #20]
    1ad8:	movt	r1, #0
    1adc:	bl	0 <fprintf>
    1ae0:	ldr	r0, [r7, #16]
    1ae4:	str	r0, [sp]
    1ae8:	mov	r0, #0
    1aec:	str	r0, [sp, #4]
    1af0:	mov	r0, r4
    1af4:	mov	r1, r9
    1af8:	mov	r2, sl
    1afc:	mov	r3, r8
    1b00:	bl	2c38 <gen_union_fields>
    1b04:	ldr	r7, [r7]
    1b08:	cmp	r7, #0
    1b0c:	bne	173c <__flatcc_fb_gen_c_builder+0xe8c>
    1b10:	b	1c24 <__flatcc_fb_gen_c_builder+0x1374>
    1b14:	ldrb	r0, [r0, #10]
    1b18:	tst	r0, #8
    1b1c:	beq	1b3c <__flatcc_fb_gen_c_builder+0x128c>
    1b20:	ldr	r0, [sp, #64]	; 0x40
    1b24:	mov	r1, #32
    1b28:	mov	r2, #1
    1b2c:	ldr	r3, [r0]
    1b30:	movw	r0, #0
    1b34:	movt	r0, #0
    1b38:	bl	0 <fwrite>
    1b3c:	ldrd	r2, [r5]
    1b40:	ldr	r0, [r4, #204]	; 0xcc
    1b44:	add	r1, sp, #168	; 0xa8
    1b48:	stm	sp, {r2, r3, r4, r9, sl}
    1b4c:	str	r1, [sp, #24]
    1b50:	str	r1, [sp, #28]
    1b54:	movw	r1, #0
    1b58:	str	r8, [sp, #20]
    1b5c:	movt	r1, #0
    1b60:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    1b64:	ldr	r1, [r6, #4]
    1b68:	ldrd	r2, [r5]
    1b6c:	ldr	r6, [r6]
    1b70:	ldrh	r5, [r7, #74]	; 0x4a
    1b74:	ldr	r0, [r4, #204]	; 0xcc
    1b78:	str	r1, [sp, #36]	; 0x24
    1b7c:	add	r1, sp, #168	; 0xa8
    1b80:	str	r6, [sp, #32]
    1b84:	str	r5, [sp, #40]	; 0x28
    1b88:	stm	sp, {r2, r3, r4, r9, sl}
    1b8c:	str	r8, [sp, #20]
    1b90:	str	r1, [sp, #24]
    1b94:	movw	r1, #0
    1b98:	movt	r1, #0
    1b9c:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    1ba0:	ldrd	r2, [r5]
    1ba4:	ldr	r0, [r4, #204]	; 0xcc
    1ba8:	add	r1, sp, #168	; 0xa8
    1bac:	stm	sp, {r2, r3, r4, r9, sl}
    1bb0:	str	r1, [sp, #24]
    1bb4:	str	r1, [sp, #28]
    1bb8:	movw	r1, #0
    1bbc:	str	r8, [sp, #20]
    1bc0:	movt	r1, #0
    1bc4:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    1bc8:	ldr	r0, [r0, #40]	; 0x28
    1bcc:	str	r8, [sp, #56]	; 0x38
    1bd0:	add	r8, sp, #68	; 0x44
    1bd4:	add	r1, r7, #48	; 0x30
    1bd8:	mov	r2, r8
    1bdc:	bl	2a94 <print_literal>
    1be0:	ldr	r1, [r6, #4]
    1be4:	ldr	r6, [r6]
    1be8:	add	ip, sp, #36	; 0x24
    1bec:	ldrd	r2, [r5]
    1bf0:	ldr	r0, [r4, #204]	; 0xcc
    1bf4:	ldrh	r5, [r7, #74]	; 0x4a
    1bf8:	str	r6, [sp, #32]
    1bfc:	stm	ip, {r1, r5, r8}
    1c00:	ldr	r1, [sp, #56]	; 0x38
    1c04:	stm	sp, {r2, r3, r4, r9, sl}
    1c08:	str	r1, [sp, #20]
    1c0c:	add	r1, sp, #168	; 0xa8
    1c10:	str	r1, [sp, #24]
    1c14:	str	r1, [sp, #28]
    1c18:	movw	r1, #0
    1c1c:	movt	r1, #0
    1c20:	b	1728 <__flatcc_fb_gen_c_builder+0xe78>
    1c24:	ldr	r1, [r4, #204]	; 0xcc
    1c28:	mov	r0, #10
    1c2c:	bl	0 <fputc>
    1c30:	ldr	r5, [sp, #60]	; 0x3c
    1c34:	mov	r0, r9
    1c38:	mov	r1, #0
    1c3c:	mov	r2, #220	; 0xdc
    1c40:	ldrh	r6, [r5, #92]	; 0x5c
    1c44:	bl	0 <memset>
    1c48:	ldr	r0, [r5, #12]
    1c4c:	mov	r1, r5
    1c50:	mov	r2, r9
    1c54:	bl	0 <__flatcc_fb_scoped_symbol_name>
    1c58:	ldr	r0, [r4, #204]	; 0xcc
    1c5c:	movw	r1, #0
    1c60:	mov	r2, r9
    1c64:	mov	r3, r9
    1c68:	stm	sp, {r4, r9}
    1c6c:	movt	r1, #0
    1c70:	bl	0 <fprintf>
    1c74:	ldr	r0, [r4, #204]	; 0xcc
    1c78:	movw	r1, #0
    1c7c:	mov	r2, r9
    1c80:	movt	r1, #0
    1c84:	bl	0 <fprintf>
    1c88:	ldr	r5, [r5, #24]
    1c8c:	ldr	sl, [sp, #64]	; 0x40
    1c90:	cmp	r5, #0
    1c94:	beq	1648 <__flatcc_fb_gen_c_builder+0xd98>
    1c98:	ands	r9, r6, #8
    1c9c:	mov	r0, #0
    1ca0:	str	r9, [sp, #56]	; 0x38
    1ca4:	movwne	r9, #1
    1ca8:	b	1cf0 <__flatcc_fb_gen_c_builder+0x1440>
    1cac:	movw	r1, #0
    1cb0:	mov	r6, r0
    1cb4:	movt	r1, #0
    1cb8:	ldr	sl, [sp, #64]	; 0x40
    1cbc:	ldr	r2, [r5, #96]	; 0x60
    1cc0:	ldr	r7, [r5, #100]	; 0x64
    1cc4:	ldr	r0, [sl]
    1cc8:	str	r2, [sp, #8]
    1ccc:	sub	r2, fp, #256	; 0x100
    1cd0:	str	r7, [sp, #12]
    1cd4:	str	r4, [sp]
    1cd8:	bl	0 <fprintf>
    1cdc:	mov	r0, r6
    1ce0:	mov	r4, r8
    1ce4:	ldr	r5, [r5, #108]	; 0x6c
    1ce8:	cmp	r5, #0
    1cec:	beq	1d4c <__flatcc_fb_gen_c_builder+0x149c>
    1cf0:	ldrb	r1, [r5, #72]	; 0x48
    1cf4:	tst	r1, #4
    1cf8:	bne	1ce4 <__flatcc_fb_gen_c_builder+0x1434>
    1cfc:	ldr	r1, [r5, #4]
    1d00:	mov	r8, r4
    1d04:	ldr	r4, [r1]
    1d08:	ldr	r3, [r1, #4]
    1d0c:	ldrh	r1, [r5, #24]
    1d10:	cmp	r1, #14
    1d14:	bne	1cac <__flatcc_fb_gen_c_builder+0x13fc>
    1d18:	ldr	r1, [r5, #16]
    1d1c:	mov	r6, #1
    1d20:	ldrh	r1, [r1, #8]
    1d24:	cmp	r1, #4
    1d28:	moveq	r0, r6
    1d2c:	subs	r1, r1, #4
    1d30:	movwne	r1, #1
    1d34:	orr	r1, r1, r9
    1d38:	cmp	r1, #1
    1d3c:	movw	r1, #0
    1d40:	movt	r1, #0
    1d44:	beq	1cac <__flatcc_fb_gen_c_builder+0x13fc>
    1d48:	b	1cb8 <__flatcc_fb_gen_c_builder+0x1408>
    1d4c:	ldr	r1, [sp, #56]	; 0x38
    1d50:	sub	r9, fp, #256	; 0x100
    1d54:	cmp	r1, #0
    1d58:	ldr	r1, [sp, #60]	; 0x3c
    1d5c:	bne	1648 <__flatcc_fb_gen_c_builder+0xd98>
    1d60:	cmp	r0, #0
    1d64:	beq	1648 <__flatcc_fb_gen_c_builder+0xd98>
    1d68:	ldr	r5, [r1, #24]
    1d6c:	cmp	r5, #0
    1d70:	bne	1d84 <__flatcc_fb_gen_c_builder+0x14d4>
    1d74:	b	1648 <__flatcc_fb_gen_c_builder+0xd98>
    1d78:	ldr	r5, [r5, #108]	; 0x6c
    1d7c:	cmp	r5, #0
    1d80:	beq	1648 <__flatcc_fb_gen_c_builder+0xd98>
    1d84:	ldrb	r0, [r5, #72]	; 0x48
    1d88:	tst	r0, #4
    1d8c:	bne	1d78 <__flatcc_fb_gen_c_builder+0x14c8>
    1d90:	ldrh	r0, [r5, #24]
    1d94:	cmp	r0, #14
    1d98:	bne	1d78 <__flatcc_fb_gen_c_builder+0x14c8>
    1d9c:	ldr	r0, [r5, #16]
    1da0:	ldrh	r0, [r0, #8]
    1da4:	cmp	r0, #4
    1da8:	bne	1d78 <__flatcc_fb_gen_c_builder+0x14c8>
    1dac:	ldr	r1, [r5, #4]
    1db0:	ldr	r2, [r5, #96]	; 0x60
    1db4:	ldr	r0, [sl]
    1db8:	ldr	r7, [r5, #100]	; 0x64
    1dbc:	ldr	r6, [r1]
    1dc0:	ldr	r3, [r1, #4]
    1dc4:	movw	r1, #0
    1dc8:	str	r2, [sp, #8]
    1dcc:	mov	r2, r9
    1dd0:	str	r7, [sp, #12]
    1dd4:	movt	r1, #0
    1dd8:	str	r6, [sp]
    1ddc:	bl	0 <fprintf>
    1de0:	b	1d78 <__flatcc_fb_gen_c_builder+0x14c8>
    1de4:	mov	r0, r4
    1de8:	bl	28c4 <gen_unions>
    1dec:	ldr	r0, [r4, #212]	; 0xd4
    1df0:	ldr	r0, [r0, #140]	; 0x8c
    1df4:	cmp	r0, #0
    1df8:	beq	1e14 <__flatcc_fb_gen_c_builder+0x1564>
    1dfc:	ldr	r3, [sl]
    1e00:	movw	r0, #0
    1e04:	mov	r1, #36	; 0x24
    1e08:	mov	r2, #1
    1e0c:	movt	r0, #0
    1e10:	bl	0 <fwrite>
    1e14:	ldr	r1, [r4, #208]	; 0xd0
    1e18:	ldr	r0, [r4, #204]	; 0xcc
    1e1c:	ldr	r2, [r1, #164]	; 0xa4
    1e20:	movw	r1, #0
    1e24:	movt	r1, #0
    1e28:	bl	0 <fprintf>
    1e2c:	mov	r0, #0
    1e30:	sub	sp, fp, #28
    1e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e38:	movw	r0, #0
    1e3c:	movw	r1, #0
    1e40:	movw	r4, #0
    1e44:	movw	r3, #1209	; 0x4b9
    1e48:	movt	r0, #0
    1e4c:	movt	r1, #0
    1e50:	movt	r4, #0
    1e54:	ldr	r0, [r0]
    1e58:	str	r1, [sp]
    1e5c:	movw	r1, #0
    1e60:	mov	r2, r4
    1e64:	movt	r1, #0
    1e68:	bl	0 <fprintf>
    1e6c:	movw	r0, #0
    1e70:	movw	r3, #0
    1e74:	mov	r1, r4
    1e78:	movw	r2, #1209	; 0x4b9
    1e7c:	movt	r0, #0
    1e80:	movt	r3, #0
    1e84:	bl	0 <__assert_fail>
    1e88:	movw	r0, #0
    1e8c:	movw	r1, #0
    1e90:	movw	r4, #0
    1e94:	movw	r3, #1512	; 0x5e8
    1e98:	movt	r0, #0
    1e9c:	movt	r1, #0
    1ea0:	movt	r4, #0
    1ea4:	ldr	r0, [r0]
    1ea8:	str	r1, [sp]
    1eac:	movw	r1, #0
    1eb0:	mov	r2, r4
    1eb4:	movt	r1, #0
    1eb8:	bl	0 <fprintf>
    1ebc:	movw	r0, #0
    1ec0:	movw	r3, #0
    1ec4:	mov	r1, r4
    1ec8:	movw	r2, #1512	; 0x5e8
    1ecc:	movt	r0, #0
    1ed0:	movt	r3, #0
    1ed4:	bl	0 <__assert_fail>
    1ed8:	movw	r0, #0
    1edc:	movw	r1, #0
    1ee0:	movw	r3, #0
    1ee4:	movw	r2, #1010	; 0x3f2
    1ee8:	movt	r0, #0
    1eec:	movt	r1, #0
    1ef0:	movt	r3, #0
    1ef4:	bl	0 <__assert_fail>
    1ef8:	movw	r0, #0
    1efc:	movw	r1, #0
    1f00:	movw	r4, #0
    1f04:	movw	r3, #1173	; 0x495
    1f08:	movt	r0, #0
    1f0c:	movt	r1, #0
    1f10:	movt	r4, #0
    1f14:	ldr	r0, [r0]
    1f18:	str	r1, [sp]
    1f1c:	movw	r1, #0
    1f20:	mov	r2, r4
    1f24:	movt	r1, #0
    1f28:	bl	0 <fprintf>
    1f2c:	movw	r0, #0
    1f30:	movw	r3, #0
    1f34:	mov	r1, r4
    1f38:	movw	r2, #1173	; 0x495
    1f3c:	b	1e7c <__flatcc_fb_gen_c_builder+0x15cc>
    1f40:	movw	r0, #0
    1f44:	movw	r1, #0
    1f48:	movw	r4, #0
    1f4c:	mov	r3, #141	; 0x8d
    1f50:	movt	r0, #0
    1f54:	movt	r1, #0
    1f58:	movt	r4, #0
    1f5c:	ldr	r0, [r0]
    1f60:	str	r1, [sp]
    1f64:	movw	r1, #0
    1f68:	mov	r2, r4
    1f6c:	movt	r1, #0
    1f70:	bl	0 <fprintf>
    1f74:	movw	r0, #0
    1f78:	movw	r3, #0
    1f7c:	mov	r1, r4
    1f80:	mov	r2, #141	; 0x8d
    1f84:	movt	r0, #0
    1f88:	movt	r3, #0
    1f8c:	bl	0 <__assert_fail>
    1f90:	movw	r0, #0
    1f94:	movw	r1, #0
    1f98:	movw	r4, #0
    1f9c:	movw	r3, #1507	; 0x5e3
    1fa0:	movt	r0, #0
    1fa4:	movt	r1, #0
    1fa8:	movt	r4, #0
    1fac:	ldr	r0, [r0]
    1fb0:	str	r1, [sp]
    1fb4:	movw	r1, #0
    1fb8:	mov	r2, r4
    1fbc:	movt	r1, #0
    1fc0:	bl	0 <fprintf>
    1fc4:	movw	r0, #0
    1fc8:	movw	r3, #0
    1fcc:	mov	r1, r4
    1fd0:	movw	r2, #1507	; 0x5e3
    1fd4:	b	1ecc <__flatcc_fb_gen_c_builder+0x161c>
    1fd8:	movw	r0, #0
    1fdc:	movw	r1, #0
    1fe0:	movw	r4, #0
    1fe4:	mov	r3, #1472	; 0x5c0
    1fe8:	movt	r0, #0
    1fec:	movt	r1, #0
    1ff0:	movt	r4, #0
    1ff4:	ldr	r0, [r0]
    1ff8:	str	r1, [sp]
    1ffc:	movw	r1, #0
    2000:	mov	r2, r4
    2004:	movt	r1, #0
    2008:	bl	0 <fprintf>
    200c:	movw	r0, #0
    2010:	movw	r3, #0
    2014:	mov	r1, r4
    2018:	mov	r2, #1472	; 0x5c0
    201c:	b	1ecc <__flatcc_fb_gen_c_builder+0x161c>
    2020:	movw	r0, #0
    2024:	movw	r1, #0
    2028:	movw	r4, #0
    202c:	movw	r3, #1189	; 0x4a5
    2030:	movt	r0, #0
    2034:	movt	r1, #0
    2038:	movt	r4, #0
    203c:	ldr	r0, [r0]
    2040:	str	r1, [sp]
    2044:	movw	r1, #0
    2048:	mov	r2, r4
    204c:	movt	r1, #0
    2050:	bl	0 <fprintf>
    2054:	movw	r0, #0
    2058:	movw	r3, #0
    205c:	mov	r1, r4
    2060:	movw	r2, #1189	; 0x4a5
    2064:	b	1e7c <__flatcc_fb_gen_c_builder+0x15cc>
    2068:	movw	r0, #0
    206c:	movw	r1, #0
    2070:	movw	r4, #0
    2074:	mov	r3, #96	; 0x60
    2078:	movt	r0, #0
    207c:	movt	r1, #0
    2080:	movt	r4, #0
    2084:	ldr	r0, [r0]
    2088:	str	r1, [sp]
    208c:	movw	r1, #0
    2090:	mov	r2, r4
    2094:	movt	r1, #0
    2098:	bl	0 <fprintf>
    209c:	movw	r0, #0
    20a0:	movw	r3, #0
    20a4:	mov	r1, r4
    20a8:	mov	r2, #96	; 0x60
    20ac:	movt	r0, #0
    20b0:	movt	r3, #0
    20b4:	bl	0 <__assert_fail>
    20b8:	movw	r0, #0
    20bc:	movw	r1, #0
    20c0:	movw	r4, #0
    20c4:	movw	r3, #1430	; 0x596
    20c8:	movt	r0, #0
    20cc:	movt	r1, #0
    20d0:	movt	r4, #0
    20d4:	ldr	r0, [r0]
    20d8:	str	r1, [sp]
    20dc:	movw	r1, #0
    20e0:	mov	r2, r4
    20e4:	movt	r1, #0
    20e8:	bl	0 <fprintf>
    20ec:	movw	r0, #0
    20f0:	movw	r3, #0
    20f4:	mov	r1, r4
    20f8:	movw	r2, #1430	; 0x596
    20fc:	b	1ecc <__flatcc_fb_gen_c_builder+0x161c>

00002100 <get_total_struct_field_count>:
    2100:	push	{r4, r5, fp, lr}
    2104:	add	fp, sp, #8
    2108:	ldr	r5, [r0, #20]
    210c:	mov	r4, #0
    2110:	cmp	r5, #0
    2114:	bne	212c <get_total_struct_field_count+0x2c>
    2118:	b	2168 <get_total_struct_field_count+0x68>
    211c:	add	r4, r4, #1
    2120:	ldr	r5, [r5]
    2124:	cmp	r5, #0
    2128:	beq	2168 <get_total_struct_field_count+0x68>
    212c:	ldrb	r0, [r5, #72]	; 0x48
    2130:	tst	r0, #4
    2134:	bne	2120 <get_total_struct_field_count+0x20>
    2138:	ldrh	r0, [r5, #24]
    213c:	cmp	r0, #14
    2140:	bne	211c <get_total_struct_field_count+0x1c>
    2144:	ldr	r0, [r5, #16]
    2148:	ldrh	r1, [r0, #8]
    214c:	cmp	r1, #1
    2150:	bne	211c <get_total_struct_field_count+0x1c>
    2154:	bl	2100 <get_total_struct_field_count>
    2158:	ldr	r5, [r5]
    215c:	add	r4, r0, r4
    2160:	cmp	r5, #0
    2164:	bne	212c <get_total_struct_field_count+0x2c>
    2168:	mov	r0, r4
    216c:	pop	{r4, r5, fp, pc}

00002170 <gen_builder_struct_args>:
    2170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2174:	add	fp, sp, #28
    2178:	sub	sp, sp, #236	; 0xec
    217c:	mov	r4, r2
    2180:	mov	r7, r1
    2184:	mov	r6, r0
    2188:	add	r0, sp, #8
    218c:	mov	r1, #0
    2190:	mov	r2, #220	; 0xdc
    2194:	mov	r5, r3
    2198:	bl	0 <memset>
    219c:	ldr	sl, [r7, #20]
    21a0:	cmp	sl, #0
    21a4:	beq	235c <gen_builder_struct_args+0x1ec>
    21a8:	ldr	r1, [fp, #8]
    21ac:	movw	r0, #0
    21b0:	movw	r8, #0
    21b4:	movw	r7, #0
    21b8:	add	r9, sp, #8
    21bc:	movt	r0, #0
    21c0:	movt	r8, #0
    21c4:	movt	r7, #0
    21c8:	cmp	r1, #0
    21cc:	moveq	r7, r0
    21d0:	b	2220 <gen_builder_struct_args+0xb0>
    21d4:	movw	r0, #0
    21d8:	mov	r1, #2
    21dc:	mov	r2, #1
    21e0:	movt	r0, #0
    21e4:	bl	0 <fwrite>
    21e8:	ldr	r1, [sl, #16]
    21ec:	mov	r2, r9
    21f0:	ldr	r0, [r1, #12]
    21f4:	bl	0 <__flatcc_fb_scoped_symbol_name>
    21f8:	ldr	r0, [r6, #204]	; 0xcc
    21fc:	movw	r1, #0
    2200:	mov	r2, r9
    2204:	mov	r3, r4
    2208:	movt	r1, #0
    220c:	bl	0 <fprintf>
    2210:	add	r4, r4, #1
    2214:	ldr	sl, [sl]
    2218:	cmp	sl, #0
    221c:	beq	235c <gen_builder_struct_args+0x1ec>
    2220:	ldrb	r0, [sl, #72]	; 0x48
    2224:	tst	r0, #4
    2228:	bne	2214 <gen_builder_struct_args+0xa4>
    222c:	ldrh	r0, [sl, #24]
    2230:	cmp	r0, #8
    2234:	beq	2270 <gen_builder_struct_args+0x100>
    2238:	cmp	r0, #14
    223c:	bne	2368 <gen_builder_struct_args+0x1f8>
    2240:	ldr	r1, [sl, #16]
    2244:	ldrh	r0, [r1, #8]
    2248:	cmp	r0, #1
    224c:	bne	22b0 <gen_builder_struct_args+0x140>
    2250:	ldr	r0, [fp, #8]
    2254:	mov	r2, r4
    2258:	mov	r3, r5
    225c:	str	r0, [sp]
    2260:	mov	r0, r6
    2264:	bl	2170 <gen_builder_struct_args>
    2268:	mov	r4, r0
    226c:	b	2214 <gen_builder_struct_args+0xa4>
    2270:	cmp	r5, #0
    2274:	beq	22fc <gen_builder_struct_args+0x18c>
    2278:	cmp	r4, #0
    227c:	beq	22dc <gen_builder_struct_args+0x16c>
    2280:	ldr	r3, [r6, #204]	; 0xcc
    2284:	tst	r4, #3
    2288:	bne	22e8 <gen_builder_struct_args+0x178>
    228c:	sub	r0, r5, r4
    2290:	cmp	r0, #2
    2294:	ble	22e8 <gen_builder_struct_args+0x178>
    2298:	movw	r1, #0
    229c:	mov	r0, r3
    22a0:	mov	r2, r7
    22a4:	movt	r1, #0
    22a8:	bl	0 <fprintf>
    22ac:	b	22fc <gen_builder_struct_args+0x18c>
    22b0:	cmp	r5, #0
    22b4:	beq	21e8 <gen_builder_struct_args+0x78>
    22b8:	cmp	r4, #0
    22bc:	beq	2338 <gen_builder_struct_args+0x1c8>
    22c0:	ldr	r3, [r6, #204]	; 0xcc
    22c4:	tst	r4, #3
    22c8:	bne	21d4 <gen_builder_struct_args+0x64>
    22cc:	sub	r0, r5, r4
    22d0:	cmp	r0, #2
    22d4:	bgt	2344 <gen_builder_struct_args+0x1d4>
    22d8:	b	21d4 <gen_builder_struct_args+0x64>
    22dc:	ldr	r3, [r6, #204]	; 0xcc
    22e0:	cmp	r5, #5
    22e4:	bge	2298 <gen_builder_struct_args+0x128>
    22e8:	movw	r0, #0
    22ec:	mov	r1, #2
    22f0:	mov	r2, #1
    22f4:	movt	r0, #0
    22f8:	bl	0 <fwrite>
    22fc:	ldr	r2, [sl, #16]
    2300:	sub	r1, r2, #1
    2304:	cmp	r1, #11
    2308:	bcs	23b8 <gen_builder_struct_args+0x248>
    230c:	movw	r3, #0
    2310:	ldr	r0, [r6, #204]	; 0xcc
    2314:	cmp	r2, #5
    2318:	movw	r2, #0
    231c:	str	r4, [sp]
    2320:	movt	r3, #0
    2324:	movt	r2, #0
    2328:	moveq	r2, r6
    232c:	ldr	r3, [r3, r1, lsl #2]
    2330:	mov	r1, r8
    2334:	b	220c <gen_builder_struct_args+0x9c>
    2338:	ldr	r3, [r6, #204]	; 0xcc
    233c:	cmp	r5, #5
    2340:	blt	21d4 <gen_builder_struct_args+0x64>
    2344:	movw	r1, #0
    2348:	mov	r0, r3
    234c:	mov	r2, r7
    2350:	movt	r1, #0
    2354:	bl	0 <fprintf>
    2358:	b	21e8 <gen_builder_struct_args+0x78>
    235c:	mov	r0, r4
    2360:	sub	sp, fp, #28
    2364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2368:	movw	r0, #0
    236c:	movw	r1, #0
    2370:	movw	r4, #0
    2374:	movw	r3, #850	; 0x352
    2378:	movt	r0, #0
    237c:	movt	r1, #0
    2380:	movt	r4, #0
    2384:	ldr	r0, [r0]
    2388:	str	r1, [sp]
    238c:	movw	r1, #0
    2390:	mov	r2, r4
    2394:	movt	r1, #0
    2398:	bl	0 <fprintf>
    239c:	movw	r0, #0
    23a0:	movw	r3, #0
    23a4:	mov	r1, r4
    23a8:	movw	r2, #850	; 0x352
    23ac:	movt	r0, #0
    23b0:	movt	r3, #0
    23b4:	bl	0 <__assert_fail>
    23b8:	movw	r0, #0
    23bc:	movw	r1, #0
    23c0:	movw	r4, #0
    23c4:	mov	r3, #141	; 0x8d
    23c8:	movt	r0, #0
    23cc:	movt	r1, #0
    23d0:	movt	r4, #0
    23d4:	ldr	r0, [r0]
    23d8:	str	r1, [sp]
    23dc:	movw	r1, #0
    23e0:	mov	r2, r4
    23e4:	movt	r1, #0
    23e8:	bl	0 <fprintf>
    23ec:	movw	r0, #0
    23f0:	movw	r3, #0
    23f4:	mov	r1, r4
    23f8:	mov	r2, #141	; 0x8d
    23fc:	movt	r0, #0
    2400:	movt	r3, #0
    2404:	bl	0 <__assert_fail>

00002408 <gen_builder_struct_field_assign>:
    2408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    240c:	add	fp, sp, #28
    2410:	sub	sp, sp, #260	; 0x104
    2414:	str	r2, [sp, #28]
    2418:	mov	r6, r1
    241c:	mov	r9, r0
    2420:	add	r0, sp, #32
    2424:	mov	r1, #0
    2428:	mov	r2, #220	; 0xdc
    242c:	mov	r4, r3
    2430:	mov	sl, #0
    2434:	bl	0 <memset>
    2438:	movw	r0, #0
    243c:	ldr	r5, [r6, #20]
    2440:	movw	r1, #0
    2444:	cmp	r4, #1
    2448:	movt	r0, #0
    244c:	movt	r1, #0
    2450:	moveq	r1, r0
    2454:	movw	r0, #0
    2458:	cmp	r4, #2
    245c:	movt	r0, #0
    2460:	movne	r0, r1
    2464:	cmp	r5, #0
    2468:	str	r0, [sp, #20]
    246c:	beq	27f8 <gen_builder_struct_field_assign+0x3f0>
    2470:	ldr	r6, [fp, #8]
    2474:	mov	r0, #0
    2478:	str	r0, [sp, #24]
    247c:	b	24a4 <gen_builder_struct_field_assign+0x9c>
    2480:	movw	r1, #0
    2484:	stm	sp, {r7, r8, sl}
    2488:	movt	r1, #0
    248c:	mov	r2, r9
    2490:	bl	0 <fprintf>
    2494:	add	sl, sl, #1
    2498:	ldr	r5, [r5]
    249c:	cmp	r5, #0
    24a0:	beq	27f8 <gen_builder_struct_field_assign+0x3f0>
    24a4:	ldr	r0, [r5, #4]
    24a8:	cmp	sl, #1
    24ac:	ldr	r8, [r0]
    24b0:	ldr	r7, [r0, #4]
    24b4:	blt	24e8 <gen_builder_struct_field_assign+0xe0>
    24b8:	ldr	r3, [r9, #204]	; 0xcc
    24bc:	tst	sl, #3
    24c0:	beq	24d4 <gen_builder_struct_field_assign+0xcc>
    24c4:	movw	r0, #0
    24c8:	mov	r1, #2
    24cc:	movt	r0, #0
    24d0:	b	24e0 <gen_builder_struct_field_assign+0xd8>
    24d4:	movw	r0, #0
    24d8:	mov	r1, #4
    24dc:	movt	r0, #0
    24e0:	mov	r2, #1
    24e4:	bl	0 <fwrite>
    24e8:	ldrh	r0, [r5, #24]
    24ec:	cmp	r0, #8
    24f0:	beq	2558 <gen_builder_struct_field_assign+0x150>
    24f4:	cmp	r0, #14
    24f8:	bne	2824 <gen_builder_struct_field_assign+0x41c>
    24fc:	ldr	r1, [r5, #16]
    2500:	add	r2, sp, #32
    2504:	ldr	r0, [r1, #12]
    2508:	bl	0 <__flatcc_fb_scoped_symbol_name>
    250c:	ldrh	r0, [r5, #72]	; 0x48
    2510:	and	r1, r0, #4
    2514:	ldr	r0, [r5, #16]
    2518:	ldrh	r0, [r0, #8]
    251c:	cmp	r0, #1
    2520:	bne	25c4 <gen_builder_struct_field_assign+0x1bc>
    2524:	ldr	r0, [r9, #204]	; 0xcc
    2528:	cmp	r1, #0
    252c:	beq	25f4 <gen_builder_struct_field_assign+0x1ec>
    2530:	ldr	r7, [sp, #24]
    2534:	movw	r1, #0
    2538:	movt	r1, #0
    253c:	mov	r2, r7
    2540:	mov	r3, r7
    2544:	bl	0 <fprintf>
    2548:	ldr	r0, [r5, #16]
    254c:	bl	2100 <get_total_struct_field_count>
    2550:	add	sl, r0, sl
    2554:	b	25e8 <gen_builder_struct_field_assign+0x1e0>
    2558:	ldr	r0, [r5, #16]
    255c:	sub	r0, r0, #1
    2560:	cmp	r0, #11
    2564:	bcs	2874 <gen_builder_struct_field_assign+0x46c>
    2568:	ldrb	r1, [r5, #72]	; 0x48
    256c:	tst	r1, #4
    2570:	bne	25cc <gen_builder_struct_field_assign+0x1c4>
    2574:	movw	r1, #0
    2578:	movt	r1, #0
    257c:	ldr	r3, [r1, r0, lsl #2]
    2580:	ldrd	r0, [r5, #88]	; 0x58
    2584:	eor	r0, r0, #1
    2588:	orrs	r0, r0, r1
    258c:	movne	r0, r4
    2590:	cmp	r0, #2
    2594:	beq	2678 <gen_builder_struct_field_assign+0x270>
    2598:	cmp	r0, #1
    259c:	bne	265c <gen_builder_struct_field_assign+0x254>
    25a0:	ldr	r0, [r9, #204]	; 0xcc
    25a4:	cmp	r6, #0
    25a8:	beq	2480 <gen_builder_struct_field_assign+0x78>
    25ac:	movw	r1, #0
    25b0:	stm	sp, {r7, r8}
    25b4:	str	r7, [sp, #8]
    25b8:	str	r8, [sp, #12]
    25bc:	movt	r1, #0
    25c0:	b	248c <gen_builder_struct_field_assign+0x84>
    25c4:	cmp	r1, #0
    25c8:	beq	261c <gen_builder_struct_field_assign+0x214>
    25cc:	ldr	r7, [sp, #24]
    25d0:	ldr	r0, [r9, #204]	; 0xcc
    25d4:	movw	r1, #0
    25d8:	movt	r1, #0
    25dc:	mov	r2, r7
    25e0:	bl	0 <fprintf>
    25e4:	add	sl, sl, #1
    25e8:	add	r7, r7, #1
    25ec:	str	r7, [sp, #24]
    25f0:	b	2498 <gen_builder_struct_field_assign+0x90>
    25f4:	cmp	r6, #0
    25f8:	beq	269c <gen_builder_struct_field_assign+0x294>
    25fc:	ldr	r3, [sp, #20]
    2600:	movw	r1, #0
    2604:	stm	sp, {r7, r8}
    2608:	str	r7, [sp, #8]
    260c:	str	r8, [sp, #12]
    2610:	add	r2, sp, #32
    2614:	movt	r1, #0
    2618:	b	2490 <gen_builder_struct_field_assign+0x88>
    261c:	ldrd	r0, [r5, #88]	; 0x58
    2620:	eor	r0, r0, #1
    2624:	orrs	r0, r0, r1
    2628:	movne	r0, r4
    262c:	cmp	r0, #2
    2630:	beq	2784 <gen_builder_struct_field_assign+0x37c>
    2634:	cmp	r0, #1
    2638:	bne	265c <gen_builder_struct_field_assign+0x254>
    263c:	ldr	r0, [r9, #204]	; 0xcc
    2640:	cmp	r6, #0
    2644:	beq	27d0 <gen_builder_struct_field_assign+0x3c8>
    2648:	movw	r1, #0
    264c:	str	r8, [sp]
    2650:	stmib	sp, {r7, r8}
    2654:	movt	r1, #0
    2658:	b	27ec <gen_builder_struct_field_assign+0x3e4>
    265c:	ldr	r0, [r9, #204]	; 0xcc
    2660:	cmp	r6, #0
    2664:	beq	276c <gen_builder_struct_field_assign+0x364>
    2668:	movw	r1, #0
    266c:	stm	sp, {r7, r8}
    2670:	movt	r1, #0
    2674:	b	2778 <gen_builder_struct_field_assign+0x370>
    2678:	ldr	r0, [r9, #204]	; 0xcc
    267c:	cmp	r6, #0
    2680:	beq	27a4 <gen_builder_struct_field_assign+0x39c>
    2684:	movw	r1, #0
    2688:	stm	sp, {r7, r8}
    268c:	str	r7, [sp, #8]
    2690:	str	r8, [sp, #12]
    2694:	movt	r1, #0
    2698:	b	248c <gen_builder_struct_field_assign+0x84>
    269c:	ldr	r3, [sp, #20]
    26a0:	movw	r1, #0
    26a4:	add	r2, sp, #32
    26a8:	stm	sp, {r7, r8}
    26ac:	movt	r1, #0
    26b0:	bl	0 <fprintf>
    26b4:	ldr	r0, [r5, #16]
    26b8:	bl	2100 <get_total_struct_field_count>
    26bc:	cmp	r0, #1
    26c0:	blt	27c0 <gen_builder_struct_field_assign+0x3b8>
    26c4:	ldr	r7, [sp, #28]
    26c8:	str	r4, [sp, #16]
    26cc:	mov	r8, r0
    26d0:	mov	r4, #0
    26d4:	b	2710 <gen_builder_struct_field_assign+0x308>
    26d8:	movw	r0, #0
    26dc:	mov	r1, #2
    26e0:	mov	r2, #1
    26e4:	movt	r0, #0
    26e8:	bl	0 <fwrite>
    26ec:	ldr	r0, [r9, #204]	; 0xcc
    26f0:	movw	r1, #0
    26f4:	mov	r2, r6
    26f8:	movt	r1, #0
    26fc:	bl	0 <fprintf>
    2700:	add	r4, r4, #1
    2704:	sub	r7, r7, #1
    2708:	cmp	r8, r4
    270c:	beq	27b4 <gen_builder_struct_field_assign+0x3ac>
    2710:	ldr	r0, [sp, #28]
    2714:	add	r6, sl, r4
    2718:	cmp	r0, #0
    271c:	beq	26ec <gen_builder_struct_field_assign+0x2e4>
    2720:	cmp	r4, #0
    2724:	beq	2740 <gen_builder_struct_field_assign+0x338>
    2728:	ldr	r3, [r9, #204]	; 0xcc
    272c:	tst	r4, #3
    2730:	bne	26d8 <gen_builder_struct_field_assign+0x2d0>
    2734:	cmp	r7, #2
    2738:	bgt	2750 <gen_builder_struct_field_assign+0x348>
    273c:	b	26d8 <gen_builder_struct_field_assign+0x2d0>
    2740:	ldr	r0, [sp, #28]
    2744:	ldr	r3, [r9, #204]	; 0xcc
    2748:	cmp	r0, #5
    274c:	blt	26d8 <gen_builder_struct_field_assign+0x2d0>
    2750:	movw	r1, #0
    2754:	movw	r2, #0
    2758:	mov	r0, r3
    275c:	movt	r1, #0
    2760:	movt	r2, #0
    2764:	bl	0 <fprintf>
    2768:	b	26ec <gen_builder_struct_field_assign+0x2e4>
    276c:	movw	r1, #0
    2770:	str	sl, [sp]
    2774:	movt	r1, #0
    2778:	mov	r2, r7
    277c:	mov	r3, r8
    2780:	b	2490 <gen_builder_struct_field_assign+0x88>
    2784:	ldr	r0, [r9, #204]	; 0xcc
    2788:	cmp	r6, #0
    278c:	beq	27e0 <gen_builder_struct_field_assign+0x3d8>
    2790:	movw	r1, #0
    2794:	str	r8, [sp]
    2798:	stmib	sp, {r7, r8}
    279c:	movt	r1, #0
    27a0:	b	27ec <gen_builder_struct_field_assign+0x3e4>
    27a4:	movw	r1, #0
    27a8:	stm	sp, {r7, r8, sl}
    27ac:	movt	r1, #0
    27b0:	b	248c <gen_builder_struct_field_assign+0x84>
    27b4:	add	sl, sl, r4
    27b8:	ldr	r4, [sp, #16]
    27bc:	ldr	r6, [fp, #8]
    27c0:	ldr	r1, [r9, #204]	; 0xcc
    27c4:	mov	r0, #41	; 0x29
    27c8:	bl	0 <fputc>
    27cc:	b	2498 <gen_builder_struct_field_assign+0x90>
    27d0:	movw	r1, #0
    27d4:	stm	sp, {r8, sl}
    27d8:	movt	r1, #0
    27dc:	b	27ec <gen_builder_struct_field_assign+0x3e4>
    27e0:	movw	r1, #0
    27e4:	stm	sp, {r8, sl}
    27e8:	movt	r1, #0
    27ec:	add	r2, sp, #32
    27f0:	mov	r3, r7
    27f4:	b	2490 <gen_builder_struct_field_assign+0x88>
    27f8:	ldr	r0, [sp, #28]
    27fc:	cmp	r0, #1
    2800:	blt	281c <gen_builder_struct_field_assign+0x414>
    2804:	ldr	r3, [r9, #204]	; 0xcc
    2808:	movw	r0, #0
    280c:	mov	r1, #4
    2810:	mov	r2, #1
    2814:	movt	r0, #0
    2818:	bl	0 <fwrite>
    281c:	sub	sp, fp, #28
    2820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2824:	movw	r0, #0
    2828:	movw	r1, #0
    282c:	movw	r4, #0
    2830:	movw	r3, #993	; 0x3e1
    2834:	movt	r0, #0
    2838:	movt	r1, #0
    283c:	movt	r4, #0
    2840:	ldr	r0, [r0]
    2844:	str	r1, [sp]
    2848:	movw	r1, #0
    284c:	mov	r2, r4
    2850:	movt	r1, #0
    2854:	bl	0 <fprintf>
    2858:	movw	r0, #0
    285c:	movw	r3, #0
    2860:	mov	r1, r4
    2864:	movw	r2, #993	; 0x3e1
    2868:	movt	r0, #0
    286c:	movt	r3, #0
    2870:	bl	0 <__assert_fail>
    2874:	movw	r0, #0
    2878:	movw	r1, #0
    287c:	movw	r4, #0
    2880:	mov	r3, #96	; 0x60
    2884:	movt	r0, #0
    2888:	movt	r1, #0
    288c:	movt	r4, #0
    2890:	ldr	r0, [r0]
    2894:	str	r1, [sp]
    2898:	movw	r1, #0
    289c:	mov	r2, r4
    28a0:	movt	r1, #0
    28a4:	bl	0 <fprintf>
    28a8:	movw	r0, #0
    28ac:	movw	r3, #0
    28b0:	mov	r1, r4
    28b4:	mov	r2, #96	; 0x60
    28b8:	movt	r0, #0
    28bc:	movt	r3, #0
    28c0:	bl	0 <__assert_fail>

000028c4 <gen_unions>:
    28c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    28c8:	add	fp, sp, #28
    28cc:	sub	sp, sp, #484	; 0x1e4
    28d0:	mov	r4, r0
    28d4:	ldr	r0, [r0, #208]	; 0xd0
    28d8:	ldr	r5, [r0, #40]	; 0x28
    28dc:	cmp	r5, #0
    28e0:	beq	2a3c <gen_unions+0x178>
    28e4:	movw	sl, #0
    28e8:	movw	r8, #0
    28ec:	mov	r0, #0
    28f0:	add	r6, sp, #256	; 0x100
    28f4:	add	r7, sp, #32
    28f8:	movt	sl, #0
    28fc:	movt	r8, #0
    2900:	b	2930 <gen_unions+0x6c>
    2904:	ldr	r0, [r4, #204]	; 0xcc
    2908:	movw	r1, #0
    290c:	mov	r2, r4
    2910:	mov	r3, r4
    2914:	str	r6, [sp]
    2918:	movt	r1, #0
    291c:	bl	0 <fprintf>
    2920:	mov	r0, #1
    2924:	ldr	r5, [r5]
    2928:	cmp	r5, #0
    292c:	beq	2a28 <gen_unions+0x164>
    2930:	ldrh	r1, [r5, #8]
    2934:	cmp	r1, #4
    2938:	bne	2924 <gen_unions+0x60>
    293c:	mov	r0, r6
    2940:	mov	r1, #0
    2944:	mov	r2, #220	; 0xdc
    2948:	bl	0 <memset>
    294c:	mov	r0, r7
    2950:	mov	r1, #0
    2954:	mov	r2, #220	; 0xdc
    2958:	bl	0 <memset>
    295c:	ldr	r0, [r5, #12]
    2960:	mov	r1, r5
    2964:	mov	r2, r6
    2968:	bl	0 <__flatcc_fb_scoped_symbol_name>
    296c:	ldr	r9, [r5, #20]
    2970:	cmp	r9, #0
    2974:	bne	29b8 <gen_unions+0xf4>
    2978:	b	2904 <gen_unions+0x40>
    297c:	ldr	r1, [r9, #4]
    2980:	ldr	r0, [r4, #204]	; 0xcc
    2984:	ldr	r2, [r1]
    2988:	ldr	r1, [r1, #4]
    298c:	stm	sp, {r1, r2, r4, r6}
    2990:	str	r1, [sp, #20]
    2994:	str	r6, [sp, #16]
    2998:	str	r2, [sp, #24]
    299c:	mov	r1, sl
    29a0:	mov	r2, r6
    29a4:	mov	r3, r6
    29a8:	bl	0 <fprintf>
    29ac:	ldr	r9, [r9]
    29b0:	cmp	r9, #0
    29b4:	beq	2904 <gen_unions+0x40>
    29b8:	ldrh	r0, [r9, #24]
    29bc:	cmp	r0, #0
    29c0:	beq	2a10 <gen_unions+0x14c>
    29c4:	cmp	r0, #10
    29c8:	beq	297c <gen_unions+0xb8>
    29cc:	cmp	r0, #14
    29d0:	bne	2a44 <gen_unions+0x180>
    29d4:	ldr	r1, [r9, #16]
    29d8:	mov	r2, r7
    29dc:	ldr	r0, [r1, #12]
    29e0:	bl	0 <__flatcc_fb_scoped_symbol_name>
    29e4:	ldr	r1, [r9, #4]
    29e8:	ldr	r0, [r4, #204]	; 0xcc
    29ec:	ldr	r2, [r1]
    29f0:	ldr	r1, [r1, #4]
    29f4:	stm	sp, {r1, r2, r7}
    29f8:	str	r1, [sp, #20]
    29fc:	str	r6, [sp, #12]
    2a00:	str	r6, [sp, #16]
    2a04:	str	r2, [sp, #24]
    2a08:	mov	r1, r8
    2a0c:	b	29a0 <gen_unions+0xdc>
    2a10:	ldr	r0, [r4, #204]	; 0xcc
    2a14:	movw	r1, #0
    2a18:	str	r6, [sp]
    2a1c:	str	r6, [sp, #4]
    2a20:	movt	r1, #0
    2a24:	b	29a0 <gen_unions+0xdc>
    2a28:	cmp	r0, #0
    2a2c:	beq	2a3c <gen_unions+0x178>
    2a30:	ldr	r1, [r4, #204]	; 0xcc
    2a34:	mov	r0, #10
    2a38:	bl	0 <fputc>
    2a3c:	sub	sp, fp, #28
    2a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2a44:	movw	r0, #0
    2a48:	movw	r1, #0
    2a4c:	movw	r4, #0
    2a50:	movw	r3, #1608	; 0x648
    2a54:	movt	r0, #0
    2a58:	movt	r1, #0
    2a5c:	movt	r4, #0
    2a60:	ldr	r0, [r0]
    2a64:	str	r1, [sp]
    2a68:	movw	r1, #0
    2a6c:	mov	r2, r4
    2a70:	movt	r1, #0
    2a74:	bl	0 <fprintf>
    2a78:	movw	r0, #0
    2a7c:	movw	r3, #0
    2a80:	mov	r1, r4
    2a84:	movw	r2, #1608	; 0x648
    2a88:	movt	r0, #0
    2a8c:	movt	r3, #0
    2a90:	bl	0 <__assert_fail>

00002a94 <print_literal>:
    2a94:	push	{r4, sl, fp, lr}
    2a98:	add	fp, sp, #8
    2a9c:	sub	sp, sp, #8
    2aa0:	mov	r4, r2
    2aa4:	ldrh	r2, [r1, #8]
    2aa8:	sub	r2, r2, #3
    2aac:	cmp	r2, #3
    2ab0:	bhi	2b98 <print_literal+0x104>
    2ab4:	add	r3, pc, #0
    2ab8:	ldr	pc, [r3, r2, lsl #2]
    2abc:	.word	0x00002acc
    2ac0:	.word	0x00002b44
    2ac4:	.word	0x00002af0
    2ac8:	.word	0x00002b1c
    2acc:	vldr	d16, [r1]
    2ad0:	cmp	r0, #11
    2ad4:	bne	2b7c <print_literal+0xe8>
    2ad8:	vcvt.f32.f64	s0, d16
    2adc:	movw	r1, #0
    2ae0:	movt	r1, #0
    2ae4:	vcvt.f64.f32	d16, s0
    2ae8:	vmov	r2, r3, d16
    2aec:	b	2b88 <print_literal+0xf4>
    2af0:	sub	r0, r0, #1
    2af4:	cmp	r0, #9
    2af8:	bcs	2be8 <print_literal+0x154>
    2afc:	ldrd	r2, [r1]
    2b00:	movw	r1, #0
    2b04:	movt	r1, #0
    2b08:	stm	sp, {r2, r3}
    2b0c:	ldr	r2, [r1, r0, lsl #2]
    2b10:	movw	r1, #0
    2b14:	movt	r1, #0
    2b18:	b	2b6c <print_literal+0xd8>
    2b1c:	sub	r0, r0, #1
    2b20:	cmp	r0, #9
    2b24:	bcs	2be8 <print_literal+0x154>
    2b28:	movw	r2, #0
    2b2c:	ldrb	r3, [r1]
    2b30:	movw	r1, #0
    2b34:	movt	r2, #0
    2b38:	movt	r1, #0
    2b3c:	ldr	r2, [r2, r0, lsl #2]
    2b40:	b	2b88 <print_literal+0xf4>
    2b44:	sub	r0, r0, #1
    2b48:	cmp	r0, #9
    2b4c:	bcs	2be8 <print_literal+0x154>
    2b50:	ldrd	r2, [r1]
    2b54:	movw	r1, #0
    2b58:	movt	r1, #0
    2b5c:	stm	sp, {r2, r3}
    2b60:	ldr	r2, [r1, r0, lsl #2]
    2b64:	movw	r1, #0
    2b68:	movt	r1, #0
    2b6c:	mov	r0, r4
    2b70:	bl	0 <sprintf>
    2b74:	sub	sp, fp, #8
    2b78:	pop	{r4, sl, fp, pc}
    2b7c:	vmov	r2, r3, d16
    2b80:	movw	r1, #0
    2b84:	movt	r1, #0
    2b88:	mov	r0, r4
    2b8c:	sub	sp, fp, #8
    2b90:	pop	{r4, sl, fp, lr}
    2b94:	b	0 <sprintf>
    2b98:	movw	r0, #0
    2b9c:	movw	r1, #0
    2ba0:	movw	r4, #0
    2ba4:	mov	r3, #260	; 0x104
    2ba8:	movt	r0, #0
    2bac:	movt	r1, #0
    2bb0:	movt	r4, #0
    2bb4:	ldr	r0, [r0]
    2bb8:	str	r1, [sp]
    2bbc:	movw	r1, #0
    2bc0:	mov	r2, r4
    2bc4:	movt	r1, #0
    2bc8:	bl	0 <fprintf>
    2bcc:	movw	r0, #0
    2bd0:	movw	r3, #0
    2bd4:	mov	r1, r4
    2bd8:	mov	r2, #260	; 0x104
    2bdc:	movt	r0, #0
    2be0:	movt	r3, #0
    2be4:	bl	0 <__assert_fail>
    2be8:	movw	r0, #0
    2bec:	movw	r1, #0
    2bf0:	movw	r4, #0
    2bf4:	mov	r3, #226	; 0xe2
    2bf8:	movt	r0, #0
    2bfc:	movt	r1, #0
    2c00:	movt	r4, #0
    2c04:	ldr	r0, [r0]
    2c08:	str	r1, [sp]
    2c0c:	movw	r1, #0
    2c10:	mov	r2, r4
    2c14:	movt	r1, #0
    2c18:	bl	0 <fprintf>
    2c1c:	movw	r0, #0
    2c20:	movw	r3, #0
    2c24:	mov	r1, r4
    2c28:	mov	r2, #226	; 0xe2
    2c2c:	movt	r0, #0
    2c30:	movt	r3, #0
    2c34:	bl	0 <__assert_fail>

00002c38 <gen_union_fields>:
    2c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2c3c:	add	fp, sp, #28
    2c40:	sub	sp, sp, #492	; 0x1ec
    2c44:	sub	r4, fp, #256	; 0x100
    2c48:	str	r2, [sp, #32]
    2c4c:	mov	r9, r1
    2c50:	mov	r7, r0
    2c54:	mov	r1, #0
    2c58:	mov	r2, #220	; 0xdc
    2c5c:	str	r3, [sp, #36]	; 0x24
    2c60:	mov	r0, r4
    2c64:	bl	0 <memset>
    2c68:	add	r0, sp, #40	; 0x28
    2c6c:	mov	r1, #0
    2c70:	mov	r2, #220	; 0xdc
    2c74:	bl	0 <memset>
    2c78:	ldr	r5, [fp, #8]
    2c7c:	mov	r2, r4
    2c80:	ldr	r0, [r5, #12]
    2c84:	mov	r1, r5
    2c88:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2c8c:	ldr	r0, [fp, #12]
    2c90:	movw	r1, #0
    2c94:	ldr	r5, [r5, #20]
    2c98:	movw	r4, #0
    2c9c:	movt	r1, #0
    2ca0:	movt	r4, #0
    2ca4:	cmp	r0, #0
    2ca8:	moveq	r4, r1
    2cac:	cmp	r5, #0
    2cb0:	bne	2d04 <gen_union_fields+0xcc>
    2cb4:	sub	sp, fp, #28
    2cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2cbc:	ldr	r1, [sp, #32]
    2cc0:	ldr	r0, [r7, #204]	; 0xcc
    2cc4:	stm	sp, {r7, r9}
    2cc8:	str	sl, [sp, #20]
    2ccc:	str	r6, [sp, #24]
    2cd0:	str	r1, [sp, #8]
    2cd4:	ldr	r1, [sp, #36]	; 0x24
    2cd8:	str	r1, [sp, #12]
    2cdc:	sub	r1, fp, #256	; 0x100
    2ce0:	str	r1, [sp, #16]
    2ce4:	movw	r1, #0
    2ce8:	movt	r1, #0
    2cec:	mov	r2, r7
    2cf0:	mov	r3, r4
    2cf4:	bl	0 <fprintf>
    2cf8:	ldr	r5, [r5]
    2cfc:	cmp	r5, #0
    2d00:	beq	2cb4 <gen_union_fields+0x7c>
    2d04:	ldrh	r0, [r5, #24]
    2d08:	cmp	r0, #0
    2d0c:	beq	2cf8 <gen_union_fields+0xc0>
    2d10:	ldr	r1, [r5, #4]
    2d14:	cmp	r0, #10
    2d18:	ldm	r1, {r6, sl}
    2d1c:	beq	2cbc <gen_union_fields+0x84>
    2d20:	cmp	r0, #14
    2d24:	add	r8, sp, #40	; 0x28
    2d28:	bne	2dc8 <gen_union_fields+0x190>
    2d2c:	ldr	r1, [r5, #16]
    2d30:	mov	r2, r8
    2d34:	ldr	r0, [r1, #12]
    2d38:	bl	0 <__flatcc_fb_scoped_symbol_name>
    2d3c:	ldr	r0, [r5, #16]
    2d40:	ldrh	r0, [r0, #8]
    2d44:	cmp	r0, #1
    2d48:	beq	2d90 <gen_union_fields+0x158>
    2d4c:	cmp	r0, #0
    2d50:	bne	2e10 <gen_union_fields+0x1d8>
    2d54:	ldr	r1, [sp, #32]
    2d58:	ldr	r0, [r7, #204]	; 0xcc
    2d5c:	stm	sp, {r7, r9}
    2d60:	str	sl, [sp, #20]
    2d64:	str	r6, [sp, #24]
    2d68:	str	r1, [sp, #8]
    2d6c:	ldr	r1, [sp, #36]	; 0x24
    2d70:	str	r1, [sp, #12]
    2d74:	sub	r1, fp, #256	; 0x100
    2d78:	str	r1, [sp, #16]
    2d7c:	add	r1, sp, #40	; 0x28
    2d80:	str	r1, [sp, #28]
    2d84:	movw	r1, #0
    2d88:	movt	r1, #0
    2d8c:	b	2cec <gen_union_fields+0xb4>
    2d90:	ldr	r1, [sp, #32]
    2d94:	ldr	r0, [r7, #204]	; 0xcc
    2d98:	stm	sp, {r7, r9}
    2d9c:	str	sl, [sp, #20]
    2da0:	str	r6, [sp, #24]
    2da4:	str	r8, [sp, #28]
    2da8:	str	r1, [sp, #8]
    2dac:	ldr	r1, [sp, #36]	; 0x24
    2db0:	str	r1, [sp, #12]
    2db4:	sub	r1, fp, #256	; 0x100
    2db8:	str	r1, [sp, #16]
    2dbc:	movw	r1, #0
    2dc0:	movt	r1, #0
    2dc4:	b	2cec <gen_union_fields+0xb4>
    2dc8:	movw	r0, #0
    2dcc:	movw	r1, #0
    2dd0:	movw	r4, #0
    2dd4:	movw	r3, #1368	; 0x558
    2dd8:	movt	r0, #0
    2ddc:	movt	r1, #0
    2de0:	movt	r4, #0
    2de4:	ldr	r0, [r0]
    2de8:	str	r1, [sp]
    2dec:	movw	r1, #0
    2df0:	mov	r2, r4
    2df4:	movt	r1, #0
    2df8:	bl	0 <fprintf>
    2dfc:	movw	r0, #0
    2e00:	movw	r3, #0
    2e04:	mov	r1, r4
    2e08:	movw	r2, #1368	; 0x558
    2e0c:	b	2e54 <gen_union_fields+0x21c>
    2e10:	movw	r0, #0
    2e14:	movw	r1, #0
    2e18:	movw	r4, #0
    2e1c:	movw	r3, #1358	; 0x54e
    2e20:	movt	r0, #0
    2e24:	movt	r1, #0
    2e28:	movt	r4, #0
    2e2c:	ldr	r0, [r0]
    2e30:	str	r1, [sp]
    2e34:	movw	r1, #0
    2e38:	mov	r2, r4
    2e3c:	movt	r1, #0
    2e40:	bl	0 <fprintf>
    2e44:	movw	r0, #0
    2e48:	movw	r3, #0
    2e4c:	mov	r1, r4
    2e50:	movw	r2, #1358	; 0x54e
    2e54:	movt	r0, #0
    2e58:	movt	r3, #0
    2e5c:	bl	0 <__assert_fail>
