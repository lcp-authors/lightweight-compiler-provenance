
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_netcdf_reopen>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #4
       c:	vpush	{d8}
      10:	sub	sp, sp, #232	; 0xe8
      14:	mov	r5, #0
      18:	mov	r6, r0
      1c:	mov	r0, #64	; 0x40
      20:	str	r5, [sp, #92]	; 0x5c
      24:	str	r5, [sp, #88]	; 0x58
      28:	bl	0 <malloc>
      2c:	cmp	r0, #0
      30:	beq	130 <coda_netcdf_reopen+0x130>
      34:	str	r5, [r0]
      38:	mov	r4, r0
      3c:	vmov.i32	q8, #0	; 0x00000000
      40:	mov	r1, #6
      44:	mov	r7, #1
      48:	ldr	r0, [r6]
      4c:	add	sl, r4, #20
      50:	ldrd	r2, [r0, #8]
      54:	vst1.32	{d16-d17}, [sl]
      58:	str	r5, [r4, #40]	; 0x28
      5c:	str	r5, [r4, #44]	; 0x2c
      60:	str	r5, [r4, #48]	; 0x30
      64:	str	r0, [r4, #52]	; 0x34
      68:	str	r7, [r4, #56]	; 0x38
      6c:	str	r5, [r4, #60]	; 0x3c
      70:	str	r2, [r4, #8]
      74:	str	r3, [r4, #12]
      78:	str	r1, [r4, #16]
      7c:	ldr	r0, [r0]
      80:	bl	0 <strdup>
      84:	cmp	r0, #0
      88:	str	r0, [r4]
      8c:	beq	164 <coda_netcdf_reopen+0x164>
      90:	mov	r0, #6
      94:	bl	0 <coda_type_record_new>
      98:	cmp	r0, #0
      9c:	beq	1f4 <coda_netcdf_reopen+0x1f4>
      a0:	mov	r1, #0
      a4:	mov	r5, r0
      a8:	mov	r7, #0
      ac:	bl	0 <coda_mem_record_new>
      b0:	mov	r9, r0
      b4:	mov	r0, r5
      b8:	bl	0 <coda_type_release>
      bc:	cmp	r9, #0
      c0:	beq	1f4 <coda_netcdf_reopen+0x1f4>
      c4:	str	r9, [r4, #20]
      c8:	mov	r2, #4
      cc:	add	r1, sp, #116	; 0x74
      d0:	mov	r3, #0
      d4:	ldr	r0, [r4, #52]	; 0x34
      d8:	stm	sp, {r2, r7}
      dc:	mov	r2, #0
      e0:	str	r1, [sp, #8]
      e4:	bl	db8 <read_bytes>
      e8:	cmn	r0, #1
      ec:	ble	1d4 <coda_netcdf_reopen+0x1d4>
      f0:	ldrb	r0, [sp, #116]	; 0x74
      f4:	cmp	r0, #67	; 0x43
      f8:	bne	110 <coda_netcdf_reopen+0x110>
      fc:	ldrb	r0, [sp, #117]	; 0x75
     100:	cmp	r0, #68	; 0x44
     104:	ldrbeq	r0, [sp, #118]	; 0x76
     108:	cmpeq	r0, #70	; 0x46
     10c:	beq	184 <coda_netcdf_reopen+0x184>
     110:	movw	r0, #0
     114:	movw	r1, #0
     118:	movw	r3, #0
     11c:	movw	r2, #851	; 0x353
     120:	movt	r0, #0
     124:	movt	r1, #0
     128:	movt	r3, #0
     12c:	bl	0 <__assert_fail>
     130:	movw	r1, #0
     134:	movw	r3, #0
     138:	movw	r0, #801	; 0x321
     13c:	mov	r2, #64	; 0x40
     140:	mvn	r4, #0
     144:	str	r0, [sp]
     148:	movt	r1, #0
     14c:	movt	r3, #0
     150:	mvn	r0, #0
     154:	bl	0 <coda_set_error>
     158:	ldr	r0, [r6]
     15c:	bl	0 <coda_close>
     160:	b	240 <coda_netcdf_reopen+0x240>
     164:	movw	r1, #0
     168:	movw	r2, #0
     16c:	mvn	r0, #0
     170:	movw	r3, #823	; 0x337
     174:	movt	r1, #0
     178:	movt	r2, #0
     17c:	bl	0 <coda_set_error>
     180:	b	1f4 <coda_netcdf_reopen+0x1f4>
     184:	ldrb	r2, [sp, #119]	; 0x77
     188:	cmp	r2, #5
     18c:	str	r2, [r4, #56]	; 0x38
     190:	bhi	31c <coda_netcdf_reopen+0x31c>
     194:	mov	r0, #1
     198:	mov	r1, #38	; 0x26
     19c:	tst	r1, r0, lsl r2
     1a0:	beq	31c <coda_netcdf_reopen+0x31c>
     1a4:	ldr	r0, [sp, #88]	; 0x58
     1a8:	ldr	r1, [sp, #92]	; 0x5c
     1ac:	add	r2, sp, #104	; 0x68
     1b0:	adds	r0, r0, #4
     1b4:	str	r0, [sp, #88]	; 0x58
     1b8:	adc	r0, r1, #0
     1bc:	add	r1, sp, #88	; 0x58
     1c0:	str	r0, [sp, #92]	; 0x5c
     1c4:	mov	r0, r4
     1c8:	bl	f20 <read_length_value>
     1cc:	cmp	r0, #0
     1d0:	beq	254 <coda_netcdf_reopen+0x254>
     1d4:	bl	0 <__errno_location>
     1d8:	ldr	r0, [r0]
     1dc:	bl	0 <strerror>
     1e0:	movw	r1, #0
     1e4:	mov	r2, r0
     1e8:	mvn	r0, #21
     1ec:	movt	r1, #0
     1f0:	bl	0 <coda_set_error>
     1f4:	ldr	r0, [r4]
     1f8:	cmp	r0, #0
     1fc:	beq	204 <coda_netcdf_reopen+0x204>
     200:	bl	0 <free>
     204:	ldr	r0, [sl]
     208:	cmp	r0, #0
     20c:	beq	214 <coda_netcdf_reopen+0x214>
     210:	bl	0 <coda_dynamic_type_delete>
     214:	ldr	r0, [r4, #48]	; 0x30
     218:	cmp	r0, #0
     21c:	beq	224 <coda_netcdf_reopen+0x224>
     220:	bl	0 <free>
     224:	ldr	r0, [r4, #52]	; 0x34
     228:	cmp	r0, #0
     22c:	beq	234 <coda_netcdf_reopen+0x234>
     230:	bl	0 <coda_bin_close>
     234:	mov	r0, r4
     238:	bl	0 <free>
     23c:	mvn	r4, #0
     240:	mov	r0, r4
     244:	sub	sp, fp, #40	; 0x28
     248:	vpop	{d8}
     24c:	add	sp, sp, #4
     250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     254:	ldr	r0, [sp, #108]	; 0x6c
     258:	ldr	r2, [sp, #88]	; 0x58
     25c:	ldr	r3, [sp, #92]	; 0x5c
     260:	ldr	r8, [sp, #104]	; 0x68
     264:	sub	r1, fp, #56	; 0x38
     268:	mov	r5, #0
     26c:	mov	r7, #4
     270:	str	r7, [sp]
     274:	str	r5, [sp, #4]
     278:	str	r1, [sp, #8]
     27c:	str	r0, [sp, #84]	; 0x54
     280:	ldr	r0, [r4, #52]	; 0x34
     284:	bl	db8 <read_bytes>
     288:	cmp	r0, #0
     28c:	blt	1f4 <coda_netcdf_reopen+0x1f4>
     290:	ldrb	r0, [fp, #-56]	; 0xffffffc8
     294:	ldrb	r1, [fp, #-55]	; 0xffffffc9
     298:	ldrb	r2, [fp, #-54]	; 0xffffffca
     29c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
     2a0:	strb	r0, [fp, #-53]	; 0xffffffcb
     2a4:	ldr	r0, [sp, #88]	; 0x58
     2a8:	strb	r3, [fp, #-56]	; 0xffffffc8
     2ac:	strb	r2, [fp, #-55]	; 0xffffffc9
     2b0:	strb	r1, [fp, #-54]	; 0xffffffca
     2b4:	ldr	r1, [sp, #92]	; 0x5c
     2b8:	add	r2, sp, #96	; 0x60
     2bc:	adds	r0, r0, #4
     2c0:	str	r0, [sp, #88]	; 0x58
     2c4:	adc	r0, r1, #0
     2c8:	add	r1, sp, #88	; 0x58
     2cc:	str	r0, [sp, #92]	; 0x5c
     2d0:	mov	r0, r4
     2d4:	bl	f20 <read_length_value>
     2d8:	cmp	r0, #0
     2dc:	bne	1f4 <coda_netcdf_reopen+0x1f4>
     2e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
     2e4:	cmp	r0, #10
     2e8:	beq	32c <coda_netcdf_reopen+0x32c>
     2ec:	cmp	r0, #0
     2f0:	bne	448 <coda_netcdf_reopen+0x448>
     2f4:	ldr	r0, [sp, #96]	; 0x60
     2f8:	ldr	r1, [sp, #100]	; 0x64
     2fc:	orrs	r0, r0, r1
     300:	beq	460 <coda_netcdf_reopen+0x460>
     304:	movw	r0, #65236	; 0xfed4
     308:	movw	r1, #0
     30c:	movt	r0, #65535	; 0xffff
     310:	movt	r1, #0
     314:	bl	0 <coda_set_error>
     318:	b	1f4 <coda_netcdf_reopen+0x1f4>
     31c:	movw	r1, #0
     320:	mvn	r0, #199	; 0xc7
     324:	movt	r1, #0
     328:	b	1f0 <coda_netcdf_reopen+0x1f0>
     32c:	ldr	r7, [sp, #96]	; 0x60
     330:	str	r8, [sp, #68]	; 0x44
     334:	ldr	r8, [sp, #100]	; 0x64
     338:	lsl	r5, r7, #3
     33c:	mov	r0, r5
     340:	bl	0 <malloc>
     344:	cmp	r0, #0
     348:	beq	480 <coda_netcdf_reopen+0x480>
     34c:	mov	r1, r0
     350:	subs	r0, r7, #1
     354:	str	r8, [sp, #80]	; 0x50
     358:	sbcs	r0, r8, #0
     35c:	blt	4bc <coda_netcdf_reopen+0x4bc>
     360:	str	r9, [sp, #60]	; 0x3c
     364:	mvn	r0, #0
     368:	add	r9, sp, #88	; 0x58
     36c:	mov	r5, r1
     370:	mov	r8, #0
     374:	str	r1, [sp, #64]	; 0x40
     378:	str	r7, [sp, #76]	; 0x4c
     37c:	str	r0, [sp, #72]	; 0x48
     380:	mov	r0, r4
     384:	mov	r1, r9
     388:	sub	r2, fp, #96	; 0x60
     38c:	bl	f20 <read_length_value>
     390:	cmp	r0, #0
     394:	bne	4b0 <coda_netcdf_reopen+0x4b0>
     398:	ldr	r0, [fp, #-96]	; 0xffffffa0
     39c:	ldr	r2, [sp, #88]	; 0x58
     3a0:	ldr	r1, [fp, #-92]	; 0xffffffa4
     3a4:	ldr	r3, [sp, #92]	; 0x5c
     3a8:	mov	r7, #0
     3ac:	adds	r2, r2, r0
     3b0:	and	r0, r0, #3
     3b4:	adc	r1, r3, r1
     3b8:	rsbs	r3, r0, #4
     3bc:	sbc	r7, r7, #0
     3c0:	adds	r3, r2, r3
     3c4:	adc	r7, r1, r7
     3c8:	cmp	r0, #0
     3cc:	mov	r0, r4
     3d0:	moveq	r3, r2
     3d4:	moveq	r7, r1
     3d8:	mov	r1, r9
     3dc:	mov	r2, r5
     3e0:	str	r7, [sp, #92]	; 0x5c
     3e4:	str	r3, [sp, #88]	; 0x58
     3e8:	mov	r7, r9
     3ec:	bl	f20 <read_length_value>
     3f0:	cmp	r0, #0
     3f4:	bne	4b0 <coda_netcdf_reopen+0x4b0>
     3f8:	ldrd	r0, [r5]
     3fc:	orrs	r0, r0, r1
     400:	bne	414 <coda_netcdf_reopen+0x414>
     404:	ldr	r0, [sp, #68]	; 0x44
     408:	ldr	r1, [sp, #84]	; 0x54
     40c:	str	r8, [sp, #72]	; 0x48
     410:	strd	r0, [r5]
     414:	ldr	r1, [sp, #76]	; 0x4c
     418:	add	r8, r8, #1
     41c:	add	r5, r5, #8
     420:	mov	r9, r7
     424:	subs	r0, r8, r1
     428:	ldr	r0, [sp, #80]	; 0x50
     42c:	rscs	r0, r0, #0
     430:	blt	380 <coda_netcdf_reopen+0x380>
     434:	ldr	r5, [sp, #64]	; 0x40
     438:	ldr	r9, [sp, #60]	; 0x3c
     43c:	mov	r7, r1
     440:	mov	r8, r5
     444:	b	4cc <coda_netcdf_reopen+0x4cc>
     448:	movw	r0, #65236	; 0xfed4
     44c:	movw	r1, #0
     450:	movt	r0, #65535	; 0xffff
     454:	movt	r1, #0
     458:	bl	0 <coda_set_error>
     45c:	b	1f4 <coda_netcdf_reopen+0x1f4>
     460:	mvn	r0, #0
     464:	mov	r7, #0
     468:	mov	r8, #0
     46c:	mov	r5, #0
     470:	str	r0, [sp, #72]	; 0x48
     474:	mov	r0, #0
     478:	str	r0, [sp, #80]	; 0x50
     47c:	b	4cc <coda_netcdf_reopen+0x4cc>
     480:	movw	r1, #0
     484:	mov	r0, #124	; 0x7c
     488:	mov	r2, r5
     48c:	movt	r1, #0
     490:	str	r0, [sp, #4]
     494:	lsl	r0, r8, #3
     498:	str	r1, [sp]
     49c:	movw	r1, #0
     4a0:	orr	r3, r0, r7, lsr #29
     4a4:	mvn	r0, #0
     4a8:	movt	r1, #0
     4ac:	b	17c <coda_netcdf_reopen+0x17c>
     4b0:	ldr	r0, [sp, #64]	; 0x40
     4b4:	bl	0 <free>
     4b8:	b	1f4 <coda_netcdf_reopen+0x1f4>
     4bc:	mvn	r0, #0
     4c0:	mov	r8, r1
     4c4:	mov	r5, r1
     4c8:	str	r0, [sp, #72]	; 0x48
     4cc:	add	r1, sp, #88	; 0x58
     4d0:	add	r2, sp, #120	; 0x78
     4d4:	mov	r0, r4
     4d8:	mov	r3, #0
     4dc:	bl	1020 <read_att_array>
     4e0:	cmp	r0, #0
     4e4:	beq	4f4 <coda_netcdf_reopen+0x4f4>
     4e8:	cmp	r5, #0
     4ec:	bne	c90 <coda_netcdf_reopen+0xc90>
     4f0:	b	1f4 <coda_netcdf_reopen+0x1f4>
     4f4:	ldr	r1, [sp, #120]	; 0x78
     4f8:	cmp	r1, #0
     4fc:	beq	514 <coda_netcdf_reopen+0x514>
     500:	mov	r0, r9
     504:	mov	r2, #1
     508:	bl	0 <coda_mem_type_set_attributes>
     50c:	cmp	r0, #0
     510:	bne	4e8 <coda_netcdf_reopen+0x4e8>
     514:	ldr	r0, [r4, #52]	; 0x34
     518:	ldr	r2, [sp, #88]	; 0x58
     51c:	ldr	r3, [sp, #92]	; 0x5c
     520:	str	r7, [sp, #76]	; 0x4c
     524:	str	r5, [sp, #84]	; 0x54
     528:	sub	r1, fp, #48	; 0x30
     52c:	mov	r5, #0
     530:	mov	r7, #4
     534:	str	r7, [sp]
     538:	str	r5, [sp, #4]
     53c:	str	r1, [sp, #8]
     540:	bl	db8 <read_bytes>
     544:	cmn	r0, #1
     548:	ble	c24 <coda_netcdf_reopen+0xc24>
     54c:	ldrb	r0, [fp, #-48]	; 0xffffffd0
     550:	ldrb	r1, [fp, #-47]	; 0xffffffd1
     554:	ldrb	r2, [fp, #-46]	; 0xffffffd2
     558:	ldrb	r3, [fp, #-45]	; 0xffffffd3
     55c:	strb	r0, [fp, #-45]	; 0xffffffd3
     560:	ldr	r0, [sp, #88]	; 0x58
     564:	strb	r3, [fp, #-48]	; 0xffffffd0
     568:	strb	r2, [fp, #-47]	; 0xffffffd1
     56c:	strb	r1, [fp, #-46]	; 0xffffffd2
     570:	ldr	r1, [sp, #92]	; 0x5c
     574:	sub	r2, fp, #56	; 0x38
     578:	adds	r0, r0, #4
     57c:	str	r0, [sp, #88]	; 0x58
     580:	adc	r0, r1, #0
     584:	add	r1, sp, #88	; 0x58
     588:	str	r0, [sp, #92]	; 0x5c
     58c:	mov	r0, r4
     590:	bl	f20 <read_length_value>
     594:	cmp	r0, #0
     598:	ldr	r0, [sp, #84]	; 0x54
     59c:	bne	c88 <coda_netcdf_reopen+0xc88>
     5a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     5a4:	str	r8, [sp, #64]	; 0x40
     5a8:	cmp	r0, #0
     5ac:	beq	c48 <coda_netcdf_reopen+0xc48>
     5b0:	cmp	r0, #11
     5b4:	bne	c6c <coda_netcdf_reopen+0xc6c>
     5b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
     5bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
     5c0:	str	r0, [sp, #24]
     5c4:	subs	r0, r0, #1
     5c8:	str	r1, [sp, #20]
     5cc:	sbcs	r0, r1, #0
     5d0:	blt	c9c <coda_netcdf_reopen+0xc9c>
     5d4:	vmov.f64	d8, #112	; 0x3f800000  1.0
     5d8:	mov	r0, #0
     5dc:	str	r0, [sp, #28]
     5e0:	mov	r0, #0
     5e4:	add	r1, sp, #88	; 0x58
     5e8:	sub	r2, fp, #112	; 0x70
     5ec:	str	r0, [fp, #-60]	; 0xffffffc4
     5f0:	mov	r0, r4
     5f4:	bl	f20 <read_length_value>
     5f8:	cmp	r0, #0
     5fc:	bne	c80 <coda_netcdf_reopen+0xc80>
     600:	ldr	r5, [fp, #-112]	; 0xffffff90
     604:	ldr	r7, [fp, #-108]	; 0xffffff94
     608:	add	r8, r5, #1
     60c:	mov	r0, r8
     610:	bl	0 <malloc>
     614:	cmp	r0, #0
     618:	str	r0, [sp, #32]
     61c:	beq	cf8 <coda_netcdf_reopen+0xcf8>
     620:	ldr	r1, [sp, #32]
     624:	mov	r0, #0
     628:	ldr	r2, [sp, #88]	; 0x58
     62c:	ldr	r3, [sp, #92]	; 0x5c
     630:	strb	r0, [r1, r5]
     634:	ldr	r0, [r4, #52]	; 0x34
     638:	stm	sp, {r5, r7}
     63c:	str	r1, [sp, #8]
     640:	bl	db8 <read_bytes>
     644:	cmn	r0, #1
     648:	ble	d50 <coda_netcdf_reopen+0xd50>
     64c:	and	r0, r5, #3
     650:	mov	r2, #0
     654:	ldr	r3, [sp, #92]	; 0x5c
     658:	rsbs	r1, r0, #4
     65c:	sbc	r2, r2, #0
     660:	adds	r1, r5, r1
     664:	adc	r2, r7, r2
     668:	cmp	r0, #0
     66c:	ldr	r0, [sp, #88]	; 0x58
     670:	moveq	r1, r5
     674:	moveq	r2, r7
     678:	adds	r0, r1, r0
     67c:	add	r1, sp, #88	; 0x58
     680:	str	r0, [sp, #88]	; 0x58
     684:	adc	r0, r2, r3
     688:	sub	r2, fp, #128	; 0x80
     68c:	str	r0, [sp, #92]	; 0x5c
     690:	mov	r0, r4
     694:	bl	f20 <read_length_value>
     698:	cmp	r0, #0
     69c:	bne	c80 <coda_netcdf_reopen+0xc80>
     6a0:	ldr	r0, [fp, #-128]	; 0xffffff80
     6a4:	ldr	r1, [fp, #-124]	; 0xffffff84
     6a8:	str	r0, [sp, #68]	; 0x44
     6ac:	subs	r0, r0, #1
     6b0:	str	r1, [sp, #60]	; 0x3c
     6b4:	sbcs	r0, r1, #0
     6b8:	blt	7ec <coda_netcdf_reopen+0x7ec>
     6bc:	ldr	r0, [sp, #68]	; 0x44
     6c0:	ldr	r7, [sp, #76]	; 0x4c
     6c4:	mov	r5, #0
     6c8:	mov	r8, #0
     6cc:	subs	r0, r0, #1
     6d0:	str	r0, [sp, #56]	; 0x38
     6d4:	ldr	r0, [sp, #60]	; 0x3c
     6d8:	sbc	r0, r0, #0
     6dc:	str	r0, [sp, #52]	; 0x34
     6e0:	mov	r0, #0
     6e4:	str	r0, [sp, #48]	; 0x30
     6e8:	mov	r0, #0
     6ec:	str	r0, [sp, #36]	; 0x24
     6f0:	mov	r0, #0
     6f4:	str	r0, [sp, #44]	; 0x2c
     6f8:	mov	r0, #0
     6fc:	str	r0, [sp, #40]	; 0x28
     700:	mov	r0, r4
     704:	add	r1, sp, #88	; 0x58
     708:	add	r2, sp, #128	; 0x80
     70c:	bl	f20 <read_length_value>
     710:	cmp	r0, #0
     714:	bne	c80 <coda_netcdf_reopen+0xc80>
     718:	ldr	r0, [sp, #132]	; 0x84
     71c:	cmp	r0, #0
     720:	blt	cbc <coda_netcdf_reopen+0xcbc>
     724:	ldr	r1, [sp, #128]	; 0x80
     728:	subs	r2, r1, r7
     72c:	ldr	r2, [sp, #80]	; 0x50
     730:	sbcs	r2, r0, r2
     734:	bge	cbc <coda_netcdf_reopen+0xcbc>
     738:	ldr	r2, [sp, #56]	; 0x38
     73c:	ldr	r3, [sp, #52]	; 0x34
     740:	eor	r2, r2, r5
     744:	eor	r3, r3, r8
     748:	orrs	r2, r2, r3
     74c:	bne	770 <coda_netcdf_reopen+0x770>
     750:	ldr	r2, [sp, #84]	; 0x54
     754:	ldr	r2, [r2, r1, lsl #3]
     758:	str	r2, [sp, #40]	; 0x28
     75c:	mov	r2, #1
     760:	str	r2, [sp, #44]	; 0x2c
     764:	cmp	r5, #0
     768:	bne	7c8 <coda_netcdf_reopen+0x7c8>
     76c:	b	79c <coda_netcdf_reopen+0x79c>
     770:	ldr	r2, [sp, #84]	; 0x54
     774:	cmp	r5, #7
     778:	ldr	r2, [r2, r1, lsl #3]
     77c:	bhi	7bc <coda_netcdf_reopen+0x7bc>
     780:	sub	r3, fp, #96	; 0x60
     784:	str	r2, [r3, r5, lsl #2]
     788:	ldr	r2, [sp, #48]	; 0x30
     78c:	add	r2, r2, #1
     790:	str	r2, [sp, #48]	; 0x30
     794:	cmp	r5, #0
     798:	bne	7c8 <coda_netcdf_reopen+0x7c8>
     79c:	ldr	r2, [sp, #72]	; 0x48
     7a0:	eor	r1, r1, r2
     7a4:	eor	r0, r0, r2, asr #31
     7a8:	orr	r0, r1, r0
     7ac:	clz	r0, r0
     7b0:	lsr	r0, r0, #5
     7b4:	str	r0, [sp, #36]	; 0x24
     7b8:	b	7c8 <coda_netcdf_reopen+0x7c8>
     7bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
     7c0:	mul	r0, r0, r2
     7c4:	str	r0, [fp, #-68]	; 0xffffffbc
     7c8:	ldr	r0, [sp, #68]	; 0x44
     7cc:	add	r5, r5, #1
     7d0:	ldr	r7, [sp, #76]	; 0x4c
     7d4:	mov	r8, #0
     7d8:	subs	r0, r5, r0
     7dc:	ldr	r0, [sp, #60]	; 0x3c
     7e0:	rscs	r0, r0, #0
     7e4:	blt	700 <coda_netcdf_reopen+0x700>
     7e8:	b	80c <coda_netcdf_reopen+0x80c>
     7ec:	mov	r0, #0
     7f0:	str	r0, [sp, #40]	; 0x28
     7f4:	mov	r0, #0
     7f8:	str	r0, [sp, #44]	; 0x2c
     7fc:	mov	r0, #0
     800:	str	r0, [sp, #36]	; 0x24
     804:	mov	r0, #0
     808:	str	r0, [sp, #48]	; 0x30
     80c:	bl	0 <coda_NaN>
     810:	vmov.f64	d3, d0
     814:	vmov.f64	d0, d8
     818:	vmov.f64	d1, d8
     81c:	vmov.i32	d2, #0	; 0x00000000
     820:	bl	0 <coda_conversion_new>
     824:	cmp	r0, #0
     828:	beq	d50 <coda_netcdf_reopen+0xd50>
     82c:	mov	r5, r0
     830:	mov	r0, r4
     834:	add	r1, sp, #88	; 0x58
     838:	sub	r2, fp, #60	; 0x3c
     83c:	mov	r3, r5
     840:	bl	1020 <read_att_array>
     844:	cmp	r0, #0
     848:	bne	cec <coda_netcdf_reopen+0xcec>
     84c:	ldr	r0, [r4, #52]	; 0x34
     850:	ldr	r2, [sp, #88]	; 0x58
     854:	ldr	r3, [sp, #92]	; 0x5c
     858:	mov	r1, #4
     85c:	str	r1, [sp]
     860:	mov	r1, #0
     864:	str	r1, [sp, #4]
     868:	sub	r1, fp, #116	; 0x74
     86c:	str	r1, [sp, #8]
     870:	bl	db8 <read_bytes>
     874:	cmn	r0, #1
     878:	ble	ce4 <coda_netcdf_reopen+0xce4>
     87c:	ldrb	r0, [fp, #-116]	; 0xffffff8c
     880:	ldrb	r1, [fp, #-115]	; 0xffffff8d
     884:	ldrb	r2, [fp, #-114]	; 0xffffff8e
     888:	ldrb	r3, [fp, #-113]	; 0xffffff8f
     88c:	strb	r0, [fp, #-113]	; 0xffffff8f
     890:	ldr	r0, [sp, #88]	; 0x58
     894:	strb	r3, [fp, #-116]	; 0xffffff8c
     898:	strb	r2, [fp, #-115]	; 0xffffff8d
     89c:	strb	r1, [fp, #-114]	; 0xffffff8e
     8a0:	ldr	r1, [sp, #92]	; 0x5c
     8a4:	adds	r0, r0, #4
     8a8:	str	r0, [sp, #88]	; 0x58
     8ac:	adc	r0, r1, #0
     8b0:	str	r0, [sp, #92]	; 0x5c
     8b4:	vldr	d16, [r5]
     8b8:	vcmp.f64	d16, d8
     8bc:	vmrs	APSR_nzcv, fpscr
     8c0:	bne	900 <coda_netcdf_reopen+0x900>
     8c4:	vldr	d16, [r5, #16]
     8c8:	vcmp.f64	d16, #0.0
     8cc:	vmrs	APSR_nzcv, fpscr
     8d0:	bne	900 <coda_netcdf_reopen+0x900>
     8d4:	ldr	r0, [fp, #-116]	; 0xffffff8c
     8d8:	sub	r0, r0, #5
     8dc:	cmp	r0, #1
     8e0:	bhi	8f4 <coda_netcdf_reopen+0x8f4>
     8e4:	vldr	d0, [r5, #24]
     8e8:	bl	0 <coda_isNaN>
     8ec:	cmp	r0, #0
     8f0:	beq	900 <coda_netcdf_reopen+0x900>
     8f4:	mov	r0, r5
     8f8:	bl	0 <coda_conversion_delete>
     8fc:	mov	r5, #0
     900:	mov	r0, r4
     904:	add	r1, sp, #88	; 0x58
     908:	add	r2, sp, #136	; 0x88
     90c:	bl	f20 <read_length_value>
     910:	cmp	r0, #0
     914:	bne	ce4 <coda_netcdf_reopen+0xce4>
     918:	ldr	r0, [sp, #36]	; 0x24
     91c:	cmp	r0, #0
     920:	ldrne	r0, [r4, #60]	; 0x3c
     924:	ldrne	r1, [sp, #136]	; 0x88
     928:	addne	r0, r0, r1
     92c:	strne	r0, [r4, #60]	; 0x3c
     930:	ldr	r0, [r4, #56]	; 0x38
     934:	cmp	r0, #1
     938:	bne	9b8 <coda_netcdf_reopen+0x9b8>
     93c:	ldr	r0, [r4, #52]	; 0x34
     940:	ldr	r2, [sp, #88]	; 0x58
     944:	ldr	r3, [sp, #92]	; 0x5c
     948:	mov	r1, #4
     94c:	str	r1, [sp]
     950:	mov	r1, #0
     954:	str	r1, [sp, #4]
     958:	add	r1, sp, #124	; 0x7c
     95c:	str	r1, [sp, #8]
     960:	bl	db8 <read_bytes>
     964:	cmp	r0, #0
     968:	blt	ce4 <coda_netcdf_reopen+0xce4>
     96c:	ldrb	r0, [sp, #124]	; 0x7c
     970:	ldrb	r1, [sp, #125]	; 0x7d
     974:	ldrb	r2, [sp, #126]	; 0x7e
     978:	ldrb	r3, [sp, #127]	; 0x7f
     97c:	strb	r0, [sp, #127]	; 0x7f
     980:	ldr	r0, [sp, #88]	; 0x58
     984:	strb	r3, [sp, #124]	; 0x7c
     988:	strb	r2, [sp, #125]	; 0x7d
     98c:	strb	r1, [sp, #126]	; 0x7e
     990:	ldr	r1, [sp, #92]	; 0x5c
     994:	adds	r0, r0, #4
     998:	str	r0, [sp, #88]	; 0x58
     99c:	adc	r0, r1, #0
     9a0:	str	r0, [sp, #92]	; 0x5c
     9a4:	ldr	r0, [sp, #124]	; 0x7c
     9a8:	str	r0, [fp, #-104]	; 0xffffff98
     9ac:	asr	r0, r0, #31
     9b0:	str	r0, [fp, #-100]	; 0xffffff9c
     9b4:	b	a40 <coda_netcdf_reopen+0xa40>
     9b8:	ldr	r0, [r4, #52]	; 0x34
     9bc:	ldr	r2, [sp, #88]	; 0x58
     9c0:	ldr	r3, [sp, #92]	; 0x5c
     9c4:	mov	r1, #8
     9c8:	str	r1, [sp]
     9cc:	mov	r1, #0
     9d0:	str	r1, [sp, #4]
     9d4:	sub	r1, fp, #104	; 0x68
     9d8:	str	r1, [sp, #8]
     9dc:	bl	db8 <read_bytes>
     9e0:	cmn	r0, #1
     9e4:	ble	ce4 <coda_netcdf_reopen+0xce4>
     9e8:	ldrb	r0, [fp, #-97]	; 0xffffff9f
     9ec:	ldrb	r1, [fp, #-104]	; 0xffffff98
     9f0:	ldrb	r2, [fp, #-103]	; 0xffffff99
     9f4:	ldrb	r3, [fp, #-102]	; 0xffffff9a
     9f8:	ldrb	r7, [fp, #-101]	; 0xffffff9b
     9fc:	strb	r1, [fp, #-97]	; 0xffffff9f
     a00:	strb	r0, [fp, #-104]	; 0xffffff98
     a04:	ldr	r1, [sp, #92]	; 0x5c
     a08:	ldrb	r0, [fp, #-98]	; 0xffffff9e
     a0c:	strb	r0, [fp, #-103]	; 0xffffff99
     a10:	strb	r2, [fp, #-98]	; 0xffffff9e
     a14:	ldrb	r0, [fp, #-99]	; 0xffffff9d
     a18:	strb	r0, [fp, #-102]	; 0xffffff9a
     a1c:	strb	r3, [fp, #-99]	; 0xffffff9d
     a20:	ldrb	r0, [fp, #-100]	; 0xffffff9c
     a24:	strb	r0, [fp, #-101]	; 0xffffff9b
     a28:	ldr	r0, [sp, #88]	; 0x58
     a2c:	strb	r7, [fp, #-100]	; 0xffffff9c
     a30:	adds	r0, r0, #8
     a34:	str	r0, [sp, #88]	; 0x58
     a38:	adc	r0, r1, #0
     a3c:	str	r0, [sp, #92]	; 0x5c
     a40:	ldr	r1, [sp, #44]	; 0x2c
     a44:	ldr	r0, [fp, #-116]	; 0xffffff8c
     a48:	cmp	r1, #0
     a4c:	beq	acc <coda_netcdf_reopen+0xacc>
     a50:	ldr	r2, [sp, #48]	; 0x30
     a54:	ldr	r1, [sp, #36]	; 0x24
     a58:	ldr	r3, [fp, #-100]	; 0xffffff9c
     a5c:	clz	r2, r2
     a60:	cmp	r1, #0
     a64:	lsr	r7, r2, #5
     a68:	ldr	r2, [fp, #-104]	; 0xffffff98
     a6c:	movwne	r1, #1
     a70:	tst	r1, r7
     a74:	cmpeq	r0, #2
     a78:	beq	aec <coda_netcdf_reopen+0xaec>
     a7c:	mov	r1, #1
     a80:	str	r1, [sp, #8]
     a84:	mov	r1, #0
     a88:	str	r1, [sp, #12]
     a8c:	ldr	r1, [sp, #36]	; 0x24
     a90:	str	r1, [sp]
     a94:	bl	0 <coda_netcdf_basic_type_new>
     a98:	mov	r8, r0
     a9c:	ldr	r0, [sp, #48]	; 0x30
     aa0:	cmp	r0, #7
     aa4:	bgt	b20 <coda_netcdf_reopen+0xb20>
     aa8:	ldr	r1, [sp, #48]	; 0x30
     aac:	ldr	r2, [sp, #40]	; 0x28
     ab0:	sub	r0, fp, #96	; 0x60
     ab4:	str	r2, [r0, r1, lsl #2]
     ab8:	add	r1, r1, #1
     abc:	str	r1, [sp, #48]	; 0x30
     ac0:	cmp	r8, #0
     ac4:	bne	b38 <coda_netcdf_reopen+0xb38>
     ac8:	b	ce4 <coda_netcdf_reopen+0xce4>
     acc:	ldr	r2, [fp, #-104]	; 0xffffff98
     ad0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     ad4:	mov	r1, #1
     ad8:	str	r1, [sp, #8]
     adc:	mov	r1, #0
     ae0:	str	r1, [sp, #12]
     ae4:	str	r1, [sp]
     ae8:	b	b0c <coda_netcdf_reopen+0xb0c>
     aec:	ldr	r0, [sp, #40]	; 0x28
     af0:	mov	r1, r0
     af4:	asr	r0, r0, #31
     af8:	str	r0, [sp, #12]
     afc:	ldr	r0, [sp, #36]	; 0x24
     b00:	str	r1, [sp, #8]
     b04:	str	r0, [sp]
     b08:	mov	r0, #2
     b0c:	bl	0 <coda_netcdf_basic_type_new>
     b10:	mov	r8, r0
     b14:	cmp	r8, #0
     b18:	bne	b38 <coda_netcdf_reopen+0xb38>
     b1c:	b	ce4 <coda_netcdf_reopen+0xce4>
     b20:	ldr	r0, [fp, #-68]	; 0xffffffbc
     b24:	ldr	r1, [sp, #40]	; 0x28
     b28:	mul	r0, r0, r1
     b2c:	str	r0, [fp, #-68]	; 0xffffffbc
     b30:	cmp	r8, #0
     b34:	beq	ce4 <coda_netcdf_reopen+0xce4>
     b38:	cmp	r5, #0
     b3c:	beq	b54 <coda_netcdf_reopen+0xb54>
     b40:	mov	r0, r8
     b44:	mov	r1, r5
     b48:	bl	0 <coda_netcdf_basic_type_set_conversion>
     b4c:	cmp	r0, #0
     b50:	bne	ce4 <coda_netcdf_reopen+0xce4>
     b54:	ldr	r0, [sp, #48]	; 0x30
     b58:	cmp	r0, #0
     b5c:	beq	bbc <coda_netcdf_reopen+0xbbc>
     b60:	ldr	r0, [sp, #48]	; 0x30
     b64:	sub	r1, fp, #96	; 0x60
     b68:	mov	r2, r8
     b6c:	bl	0 <coda_netcdf_array_new>
     b70:	cmp	r0, #0
     b74:	beq	d20 <coda_netcdf_reopen+0xd20>
     b78:	ldr	r8, [fp, #-60]	; 0xffffffc4
     b7c:	mov	r5, r0
     b80:	cmp	r8, #0
     b84:	beq	b9c <coda_netcdf_reopen+0xb9c>
     b88:	mov	r0, r5
     b8c:	mov	r1, r8
     b90:	bl	0 <coda_netcdf_array_set_attributes>
     b94:	cmp	r0, #0
     b98:	bne	d30 <coda_netcdf_reopen+0xd30>
     b9c:	ldr	r1, [sp, #32]
     ba0:	mov	r0, r9
     ba4:	mov	r2, r5
     ba8:	mov	r3, #1
     bac:	bl	0 <coda_mem_record_add_field>
     bb0:	cmp	r0, #0
     bb4:	beq	bf8 <coda_netcdf_reopen+0xbf8>
     bb8:	b	d48 <coda_netcdf_reopen+0xd48>
     bbc:	ldr	r5, [fp, #-60]	; 0xffffffc4
     bc0:	cmp	r5, #0
     bc4:	beq	bdc <coda_netcdf_reopen+0xbdc>
     bc8:	mov	r0, r8
     bcc:	mov	r1, r5
     bd0:	bl	0 <coda_netcdf_basic_type_set_attributes>
     bd4:	cmp	r0, #0
     bd8:	bne	d40 <coda_netcdf_reopen+0xd40>
     bdc:	ldr	r1, [sp, #32]
     be0:	mov	r0, r9
     be4:	mov	r2, r8
     be8:	mov	r3, #1
     bec:	bl	0 <coda_mem_record_add_field>
     bf0:	cmp	r0, #0
     bf4:	bne	d38 <coda_netcdf_reopen+0xd38>
     bf8:	ldr	r0, [sp, #32]
     bfc:	bl	0 <free>
     c00:	ldr	r1, [sp, #28]
     c04:	ldr	r0, [sp, #24]
     c08:	add	r1, r1, #1
     c0c:	subs	r0, r1, r0
     c10:	str	r1, [sp, #28]
     c14:	ldr	r0, [sp, #20]
     c18:	rscs	r0, r0, #0
     c1c:	blt	5e0 <coda_netcdf_reopen+0x5e0>
     c20:	b	c9c <coda_netcdf_reopen+0xc9c>
     c24:	bl	0 <__errno_location>
     c28:	ldr	r0, [r0]
     c2c:	bl	0 <strerror>
     c30:	movw	r1, #0
     c34:	mov	r2, r0
     c38:	mvn	r0, #21
     c3c:	movt	r1, #0
     c40:	bl	0 <coda_set_error>
     c44:	b	c84 <coda_netcdf_reopen+0xc84>
     c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
     c4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     c50:	orrs	r0, r0, r1
     c54:	beq	c9c <coda_netcdf_reopen+0xc9c>
     c58:	movw	r0, #65236	; 0xfed4
     c5c:	movw	r1, #0
     c60:	movt	r0, #65535	; 0xffff
     c64:	movt	r1, #0
     c68:	b	c7c <coda_netcdf_reopen+0xc7c>
     c6c:	movw	r0, #65236	; 0xfed4
     c70:	movw	r1, #0
     c74:	movt	r0, #65535	; 0xffff
     c78:	movt	r1, #0
     c7c:	bl	0 <coda_set_error>
     c80:	ldr	r8, [sp, #64]	; 0x40
     c84:	ldr	r0, [sp, #84]	; 0x54
     c88:	cmp	r0, #0
     c8c:	beq	1f4 <coda_netcdf_reopen+0x1f4>
     c90:	mov	r0, r8
     c94:	bl	0 <free>
     c98:	b	1f4 <coda_netcdf_reopen+0x1f4>
     c9c:	ldr	r0, [sp, #84]	; 0x54
     ca0:	cmp	r0, #0
     ca4:	beq	cb0 <coda_netcdf_reopen+0xcb0>
     ca8:	ldr	r0, [sp, #64]	; 0x40
     cac:	bl	0 <free>
     cb0:	str	r4, [r6]
     cb4:	mov	r4, #0
     cb8:	b	240 <coda_netcdf_reopen+0x240>
     cbc:	ldr	r5, [sp, #32]
     cc0:	mov	r0, r5
     cc4:	bl	0 <free>
     cc8:	movw	r0, #65236	; 0xfed4
     ccc:	movw	r1, #0
     cd0:	mov	r2, r5
     cd4:	movt	r0, #65535	; 0xffff
     cd8:	movt	r1, #0
     cdc:	bl	0 <coda_set_error>
     ce0:	b	c80 <coda_netcdf_reopen+0xc80>
     ce4:	ldr	r0, [fp, #-60]	; 0xffffffc4
     ce8:	bl	0 <coda_dynamic_type_delete>
     cec:	mov	r0, r5
     cf0:	bl	0 <coda_conversion_delete>
     cf4:	b	d50 <coda_netcdf_reopen+0xd50>
     cf8:	movw	r1, #0
     cfc:	movw	r3, #0
     d00:	movw	r0, #546	; 0x222
     d04:	mov	r2, r8
     d08:	str	r0, [sp]
     d0c:	movt	r1, #0
     d10:	movt	r3, #0
     d14:	mvn	r0, #0
     d18:	bl	0 <coda_set_error>
     d1c:	b	c80 <coda_netcdf_reopen+0xc80>
     d20:	mov	r0, r8
     d24:	bl	0 <coda_dynamic_type_delete>
     d28:	ldr	r0, [fp, #-60]	; 0xffffffc4
     d2c:	b	d4c <coda_netcdf_reopen+0xd4c>
     d30:	mov	r0, r5
     d34:	bl	0 <coda_dynamic_type_delete>
     d38:	mov	r0, r8
     d3c:	b	d4c <coda_netcdf_reopen+0xd4c>
     d40:	mov	r0, r8
     d44:	bl	0 <coda_dynamic_type_delete>
     d48:	mov	r0, r5
     d4c:	bl	0 <coda_dynamic_type_delete>
     d50:	ldr	r0, [sp, #32]
     d54:	bl	0 <free>
     d58:	b	c80 <coda_netcdf_reopen+0xc80>

00000d5c <coda_netcdf_close>:
     d5c:	push	{r4, sl, fp, lr}
     d60:	add	fp, sp, #8
     d64:	mov	r4, r0
     d68:	ldr	r0, [r0]
     d6c:	cmp	r0, #0
     d70:	beq	d78 <coda_netcdf_close+0x1c>
     d74:	bl	0 <free>
     d78:	ldr	r0, [r4, #20]
     d7c:	cmp	r0, #0
     d80:	beq	d88 <coda_netcdf_close+0x2c>
     d84:	bl	0 <coda_dynamic_type_delete>
     d88:	ldr	r0, [r4, #48]	; 0x30
     d8c:	cmp	r0, #0
     d90:	beq	d98 <coda_netcdf_close+0x3c>
     d94:	bl	0 <free>
     d98:	ldr	r0, [r4, #52]	; 0x34
     d9c:	cmp	r0, #0
     da0:	beq	da8 <coda_netcdf_close+0x4c>
     da4:	bl	0 <coda_bin_close>
     da8:	mov	r0, r4
     dac:	bl	0 <free>
     db0:	mov	r0, #0
     db4:	pop	{r4, sl, fp, pc}

00000db8 <read_bytes>:
     db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     dbc:	add	fp, sp, #28
     dc0:	sub	sp, sp, #68	; 0x44
     dc4:	ldr	r7, [r0, #48]	; 0x30
     dc8:	mov	sl, r2
     dcc:	ldr	r1, [fp, #12]
     dd0:	ldr	r2, [fp, #8]
     dd4:	ldr	ip, [fp, #16]
     dd8:	mov	r9, r3
     ddc:	cmp	r7, #0
     de0:	beq	e64 <read_bytes+0xac>
     de4:	mov	r6, r0
     de8:	adds	lr, r2, sl
     dec:	ldr	r4, [r6, #40]!	; 0x28
     df0:	adc	r5, r1, r9
     df4:	ldr	r3, [r6, #4]
     df8:	subs	r4, r4, lr
     dfc:	sbcs	r3, r3, r5
     e00:	bcs	ea4 <read_bytes+0xec>
     e04:	ldr	r0, [r0, #16]
     e08:	cmp	r0, #1
     e0c:	bls	e88 <read_bytes+0xd0>
     e10:	add	r8, sp, #47	; 0x2f
     e14:	mov	r0, r2
     e18:	mov	r2, r8
     e1c:	bl	0 <coda_str64>
     e20:	add	r7, sp, #26
     e24:	mov	r0, sl
     e28:	mov	r1, r9
     e2c:	mov	r2, r7
     e30:	bl	0 <coda_str64>
     e34:	ldrd	r0, [r6]
     e38:	add	r4, sp, #5
     e3c:	mov	r2, r4
     e40:	bl	0 <coda_str64>
     e44:	movw	r1, #0
     e48:	mvn	r0, #300	; 0x12c
     e4c:	mov	r2, r8
     e50:	mov	r3, r7
     e54:	str	r4, [sp]
     e58:	movt	r1, #0
     e5c:	bl	0 <coda_set_error>
     e60:	b	e98 <read_bytes+0xe0>
     e64:	ldr	r3, [r0, #16]
     e68:	cmp	r3, #2
     e6c:	bcs	f00 <read_bytes+0x148>
     e70:	ldrd	r4, [r0, #8]
     e74:	adds	r3, r2, sl
     e78:	adc	r1, r1, r9
     e7c:	subs	r3, r4, r3
     e80:	sbcs	r1, r5, r1
     e84:	bcs	ebc <read_bytes+0x104>
     e88:	movw	r1, #0
     e8c:	mvn	r0, #300	; 0x12c
     e90:	movt	r1, #0
     e94:	bl	0 <coda_set_error>
     e98:	mvn	r0, #0
     e9c:	sub	sp, fp, #28
     ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ea4:	add	r1, r7, sl
     ea8:	mov	r0, ip
     eac:	bl	0 <memcpy>
     eb0:	mov	r0, #0
     eb4:	sub	sp, fp, #28
     eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ebc:	ldr	r0, [r0, #56]	; 0x38
     ec0:	mov	r1, ip
     ec4:	mov	r3, sl
     ec8:	bl	0 <pread>
     ecc:	mov	r1, r0
     ed0:	mov	r0, #0
     ed4:	cmn	r1, #1
     ed8:	bgt	e9c <read_bytes+0xe4>
     edc:	bl	0 <__errno_location>
     ee0:	ldr	r0, [r0]
     ee4:	bl	0 <strerror>
     ee8:	movw	r1, #0
     eec:	mov	r2, r0
     ef0:	mvn	r0, #21
     ef4:	movt	r1, #0
     ef8:	bl	0 <coda_set_error>
     efc:	b	e98 <read_bytes+0xe0>
     f00:	movw	r0, #0
     f04:	movw	r1, #0
     f08:	movw	r3, #0
     f0c:	mov	r2, #83	; 0x53
     f10:	movt	r0, #0
     f14:	movt	r1, #0
     f18:	movt	r3, #0
     f1c:	bl	0 <__assert_fail>

00000f20 <read_length_value>:
     f20:	push	{r4, r5, r6, sl, fp, lr}
     f24:	add	fp, sp, #16
     f28:	sub	sp, sp, #16
     f2c:	mov	r4, r1
     f30:	ldr	r1, [r0, #56]	; 0x38
     f34:	mov	r6, r2
     f38:	cmp	r1, #5
     f3c:	bne	fac <read_length_value+0x8c>
     f40:	ldrd	r2, [r4]
     f44:	ldr	r0, [r0, #52]	; 0x34
     f48:	mov	r5, #0
     f4c:	mov	r1, #8
     f50:	stm	sp, {r1, r5, r6}
     f54:	bl	db8 <read_bytes>
     f58:	cmp	r0, #0
     f5c:	blt	1010 <read_length_value+0xf0>
     f60:	ldrb	r2, [r6, #4]
     f64:	ldrb	r0, [r6]
     f68:	ldrb	r1, [r6, #1]
     f6c:	ldrb	ip, [r6, #2]
     f70:	ldrb	r3, [r6, #3]
     f74:	strb	r2, [r6, #3]
     f78:	ldrb	r2, [r6, #7]
     f7c:	strb	r0, [r6, #7]
     f80:	strb	r2, [r6]
     f84:	ldrb	r0, [r6, #6]
     f88:	strb	r0, [r6, #1]
     f8c:	strb	r1, [r6, #6]
     f90:	ldrb	r0, [r6, #5]
     f94:	strb	r0, [r6, #2]
     f98:	strb	ip, [r6, #5]
     f9c:	strb	r3, [r6, #4]
     fa0:	ldrd	r0, [r4]
     fa4:	adds	r0, r0, #8
     fa8:	b	1004 <read_length_value+0xe4>
     fac:	ldrd	r2, [r4]
     fb0:	ldr	r0, [r0, #52]	; 0x34
     fb4:	add	ip, sp, #12
     fb8:	mov	r5, #0
     fbc:	mov	r1, #4
     fc0:	stm	sp, {r1, r5, ip}
     fc4:	bl	db8 <read_bytes>
     fc8:	cmp	r0, #0
     fcc:	blt	1010 <read_length_value+0xf0>
     fd0:	ldrb	r0, [sp, #12]
     fd4:	ldrb	r1, [sp, #13]
     fd8:	ldrb	r2, [sp, #14]
     fdc:	ldrb	r3, [sp, #15]
     fe0:	strb	r0, [sp, #15]
     fe4:	strb	r3, [sp, #12]
     fe8:	strb	r2, [sp, #13]
     fec:	strb	r1, [sp, #14]
     ff0:	ldr	r0, [sp, #12]
     ff4:	asr	r1, r0, #31
     ff8:	strd	r0, [r6]
     ffc:	ldrd	r0, [r4]
    1000:	adds	r0, r0, #4
    1004:	adc	r1, r1, #0
    1008:	strd	r0, [r4]
    100c:	b	1014 <read_length_value+0xf4>
    1010:	mvn	r5, #0
    1014:	mov	r0, r5
    1018:	sub	sp, fp, #16
    101c:	pop	{r4, r5, r6, sl, fp, pc}

00001020 <read_att_array>:
    1020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1024:	add	fp, sp, #28
    1028:	sub	sp, sp, #92	; 0x5c
    102c:	mov	r9, r0
    1030:	mov	r8, r3
    1034:	mov	sl, r2
    1038:	ldrd	r2, [r1]
    103c:	ldr	r0, [r0, #52]	; 0x34
    1040:	mov	r6, r1
    1044:	sub	r1, fp, #32
    1048:	mov	r7, #0
    104c:	mov	r5, #4
    1050:	stm	sp, {r5, r7}
    1054:	str	r1, [sp, #8]
    1058:	bl	db8 <read_bytes>
    105c:	cmp	r0, #0
    1060:	blt	10ac <read_att_array+0x8c>
    1064:	ldrb	r0, [fp, #-32]	; 0xffffffe0
    1068:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    106c:	ldrb	r2, [fp, #-30]	; 0xffffffe2
    1070:	ldrb	r3, [fp, #-29]	; 0xffffffe3
    1074:	strb	r0, [fp, #-29]	; 0xffffffe3
    1078:	strb	r3, [fp, #-32]	; 0xffffffe0
    107c:	strb	r2, [fp, #-31]	; 0xffffffe1
    1080:	strb	r1, [fp, #-30]	; 0xffffffe2
    1084:	sub	r2, fp, #40	; 0x28
    1088:	ldrd	r0, [r6]
    108c:	adds	r0, r0, #4
    1090:	adc	r1, r1, #0
    1094:	strd	r0, [r6]
    1098:	mov	r0, r9
    109c:	mov	r1, r6
    10a0:	bl	f20 <read_length_value>
    10a4:	cmp	r0, #0
    10a8:	beq	10bc <read_att_array+0x9c>
    10ac:	mvn	r5, #0
    10b0:	mov	r0, r5
    10b4:	sub	sp, fp, #28
    10b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10c0:	cmp	r0, #12
    10c4:	beq	1100 <read_att_array+0xe0>
    10c8:	cmp	r0, #0
    10cc:	bne	16f8 <read_att_array+0x6d8>
    10d0:	mov	r5, #0
    10d4:	str	r5, [sl]
    10d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    10dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    10e0:	orrs	r0, r0, r1
    10e4:	beq	10b0 <read_att_array+0x90>
    10e8:	movw	r0, #65236	; 0xfed4
    10ec:	movw	r1, #0
    10f0:	movt	r0, #65535	; 0xffff
    10f4:	movt	r1, #0
    10f8:	bl	0 <coda_set_error>
    10fc:	b	10ac <read_att_array+0x8c>
    1100:	mov	r0, #6
    1104:	bl	0 <coda_type_record_new>
    1108:	cmp	r0, #0
    110c:	beq	10ac <read_att_array+0x8c>
    1110:	mov	r1, #0
    1114:	mov	r4, r0
    1118:	mov	r5, #0
    111c:	bl	0 <coda_mem_record_new>
    1120:	str	r0, [sl]
    1124:	mov	r0, r4
    1128:	bl	0 <coda_type_release>
    112c:	ldr	r0, [sl]
    1130:	cmp	r0, #0
    1134:	beq	10ac <read_att_array+0x8c>
    1138:	ldr	r0, [fp, #-40]	; 0xffffffd8
    113c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1140:	str	r0, [sp, #20]
    1144:	subs	r0, r0, #1
    1148:	str	r1, [sp, #16]
    114c:	sbcs	r0, r1, #0
    1150:	blt	10b0 <read_att_array+0x90>
    1154:	mov	r0, #1
    1158:	str	r0, [sp, #28]
    115c:	mov	r0, r9
    1160:	mov	r1, r6
    1164:	sub	r2, fp, #48	; 0x30
    1168:	bl	f20 <read_length_value>
    116c:	cmp	r0, #0
    1170:	bne	10ac <read_att_array+0x8c>
    1174:	ldr	r5, [fp, #-48]	; 0xffffffd0
    1178:	ldr	r7, [fp, #-44]	; 0xffffffd4
    117c:	add	r4, r5, #1
    1180:	mov	r0, r4
    1184:	bl	0 <malloc>
    1188:	cmp	r0, #0
    118c:	beq	1710 <read_att_array+0x6f0>
    1190:	mov	r4, #0
    1194:	mov	r1, r0
    1198:	strb	r4, [r0, r5]
    119c:	ldrd	r2, [r6]
    11a0:	ldr	r0, [r9, #52]	; 0x34
    11a4:	stm	sp, {r5, r7}
    11a8:	str	r1, [sp, #44]	; 0x2c
    11ac:	str	r1, [sp, #8]
    11b0:	bl	db8 <read_bytes>
    11b4:	cmn	r0, #1
    11b8:	ble	1790 <read_att_array+0x770>
    11bc:	and	r0, r5, #3
    11c0:	rsbs	r1, r0, #4
    11c4:	sbc	r2, r4, #0
    11c8:	adds	r1, r5, r1
    11cc:	adc	r2, r7, r2
    11d0:	cmp	r0, #0
    11d4:	ldm	r6, {r0, r3}
    11d8:	moveq	r1, r5
    11dc:	moveq	r2, r7
    11e0:	mov	r7, #0
    11e4:	adds	r4, r1, r0
    11e8:	mov	r1, #4
    11ec:	adc	r5, r2, r3
    11f0:	mov	r2, r4
    11f4:	strd	r4, [r6]
    11f8:	mov	r3, r5
    11fc:	ldr	r0, [r9, #52]	; 0x34
    1200:	stm	sp, {r1, r7}
    1204:	sub	r1, fp, #52	; 0x34
    1208:	str	r1, [sp, #8]
    120c:	bl	db8 <read_bytes>
    1210:	cmn	r0, #1
    1214:	ble	1790 <read_att_array+0x770>
    1218:	ldrb	r0, [fp, #-52]	; 0xffffffcc
    121c:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    1220:	ldrb	r2, [fp, #-50]	; 0xffffffce
    1224:	ldrb	r3, [fp, #-49]	; 0xffffffcf
    1228:	strb	r0, [fp, #-49]	; 0xffffffcf
    122c:	strb	r3, [fp, #-52]	; 0xffffffcc
    1230:	strb	r2, [fp, #-51]	; 0xffffffcd
    1234:	strb	r1, [fp, #-50]	; 0xffffffce
    1238:	add	r2, sp, #56	; 0x38
    123c:	ldrd	r0, [r6]
    1240:	adds	r0, r0, #4
    1244:	adc	r1, r1, #0
    1248:	strd	r0, [r6]
    124c:	mov	r0, r9
    1250:	mov	r1, r6
    1254:	bl	f20 <read_length_value>
    1258:	cmp	r0, #0
    125c:	bne	10ac <read_att_array+0x8c>
    1260:	ldr	r5, [fp, #-52]	; 0xffffffcc
    1264:	sub	r7, r5, #1
    1268:	cmp	r7, #5
    126c:	bhi	1744 <read_att_array+0x724>
    1270:	ldr	r3, [sp, #56]	; 0x38
    1274:	ldr	r4, [sp, #60]	; 0x3c
    1278:	add	r0, pc, #4
    127c:	mov	r1, r3
    1280:	ldr	pc, [r0, r7, lsl #2]
    1284:	.word	0x000012b0
    1288:	.word	0x000012b0
    128c:	.word	0x000012a4
    1290:	.word	0x0000129c
    1294:	.word	0x0000129c
    1298:	.word	0x000012ac
    129c:	lsl	r1, r3, #2
    12a0:	b	12b0 <read_att_array+0x290>
    12a4:	lsl	r1, r3, #1
    12a8:	b	12b0 <read_att_array+0x290>
    12ac:	lsl	r1, r3, #3
    12b0:	cmp	r8, #0
    12b4:	str	r1, [sp, #32]
    12b8:	str	r3, [sp, #40]	; 0x28
    12bc:	str	r4, [sp, #36]	; 0x24
    12c0:	beq	15b0 <read_att_array+0x590>
    12c4:	eor	r0, r3, #1
    12c8:	orrs	r0, r0, r4
    12cc:	bne	15b0 <read_att_array+0x590>
    12d0:	ldr	r4, [sp, #44]	; 0x2c
    12d4:	movw	r1, #0
    12d8:	str	r5, [sp, #24]
    12dc:	movt	r1, #0
    12e0:	mov	r0, r4
    12e4:	bl	0 <strcmp>
    12e8:	cmp	r0, #0
    12ec:	beq	1320 <read_att_array+0x300>
    12f0:	movw	r1, #0
    12f4:	mov	r0, r4
    12f8:	movt	r1, #0
    12fc:	bl	0 <strcmp>
    1300:	cmp	r0, #0
    1304:	beq	1320 <read_att_array+0x300>
    1308:	ldr	r0, [sp, #24]
    130c:	cmp	r0, #2
    1310:	mov	r0, r4
    1314:	ldr	r4, [sp, #36]	; 0x24
    1318:	bne	1444 <read_att_array+0x424>
    131c:	b	13a4 <read_att_array+0x384>
    1320:	ldr	r1, [sp, #24]
    1324:	mov	r0, r4
    1328:	ldr	r4, [sp, #36]	; 0x24
    132c:	cmp	r1, #2
    1330:	beq	13a4 <read_att_array+0x384>
    1334:	cmp	r1, #6
    1338:	beq	13b8 <read_att_array+0x398>
    133c:	cmp	r1, #5
    1340:	bne	1444 <read_att_array+0x424>
    1344:	ldrd	r2, [r6]
    1348:	ldr	r0, [r9, #52]	; 0x34
    134c:	mov	r1, #4
    1350:	str	r1, [sp]
    1354:	mov	r1, #0
    1358:	str	r1, [sp, #4]
    135c:	add	r1, sp, #48	; 0x30
    1360:	str	r1, [sp, #8]
    1364:	bl	db8 <read_bytes>
    1368:	cmp	r0, #0
    136c:	blt	1790 <read_att_array+0x770>
    1370:	ldrb	r0, [sp, #48]	; 0x30
    1374:	ldrb	r1, [sp, #49]	; 0x31
    1378:	ldrb	r2, [sp, #50]	; 0x32
    137c:	ldrb	r3, [sp, #51]	; 0x33
    1380:	strb	r0, [sp, #51]	; 0x33
    1384:	ldr	r0, [sp, #44]	; 0x2c
    1388:	strb	r3, [sp, #48]	; 0x30
    138c:	strb	r2, [sp, #49]	; 0x31
    1390:	strb	r1, [sp, #50]	; 0x32
    1394:	vldr	s0, [sp, #48]	; 0x30
    1398:	ldrb	r1, [r0]
    139c:	vcvt.f64.f32	d16, s0
    13a0:	b	1434 <read_att_array+0x414>
    13a4:	ldr	r7, [sp, #32]
    13a8:	ldr	r2, [r6]
    13ac:	ldr	r1, [r6, #4]
    13b0:	ldr	r3, [sp, #40]	; 0x28
    13b4:	b	15c4 <read_att_array+0x5a4>
    13b8:	ldrd	r2, [r6]
    13bc:	ldr	r0, [r9, #52]	; 0x34
    13c0:	mov	r1, #8
    13c4:	str	r1, [sp]
    13c8:	mov	r1, #0
    13cc:	str	r1, [sp, #4]
    13d0:	add	r1, sp, #48	; 0x30
    13d4:	str	r1, [sp, #8]
    13d8:	bl	db8 <read_bytes>
    13dc:	cmp	r0, #0
    13e0:	blt	1790 <read_att_array+0x770>
    13e4:	ldrb	r4, [sp, #51]	; 0x33
    13e8:	ldrb	r0, [sp, #52]	; 0x34
    13ec:	ldrb	r1, [sp, #48]	; 0x30
    13f0:	ldrb	r2, [sp, #49]	; 0x31
    13f4:	ldrb	r3, [sp, #50]	; 0x32
    13f8:	strb	r4, [sp, #52]	; 0x34
    13fc:	ldrb	r4, [sp, #55]	; 0x37
    1400:	strb	r1, [sp, #55]	; 0x37
    1404:	strb	r4, [sp, #48]	; 0x30
    1408:	ldr	r4, [sp, #36]	; 0x24
    140c:	ldrb	r1, [sp, #54]	; 0x36
    1410:	strb	r1, [sp, #49]	; 0x31
    1414:	strb	r2, [sp, #54]	; 0x36
    1418:	ldrb	r1, [sp, #53]	; 0x35
    141c:	strb	r1, [sp, #50]	; 0x32
    1420:	strb	r3, [sp, #53]	; 0x35
    1424:	strb	r0, [sp, #51]	; 0x33
    1428:	ldr	r0, [sp, #44]	; 0x2c
    142c:	vldr	d16, [sp, #48]	; 0x30
    1430:	ldrb	r1, [r0]
    1434:	cmp	r1, #115	; 0x73
    1438:	mov	r1, r8
    143c:	addne	r1, r1, #16
    1440:	vstr	d16, [r1]
    1444:	movw	r1, #0
    1448:	movt	r1, #0
    144c:	bl	0 <strcmp>
    1450:	cmp	r0, #0
    1454:	beq	1490 <read_att_array+0x470>
    1458:	ldr	r0, [sp, #44]	; 0x2c
    145c:	movw	r1, #0
    1460:	movt	r1, #0
    1464:	bl	0 <strcmp>
    1468:	ldr	r5, [sp, #24]
    146c:	ldr	r3, [sp, #40]	; 0x28
    1470:	cmp	r0, #0
    1474:	bne	15b0 <read_att_array+0x590>
    1478:	vldr	d0, [r8, #24]
    147c:	bl	0 <coda_isNaN>
    1480:	ldr	r5, [sp, #24]
    1484:	ldr	r3, [sp, #40]	; 0x28
    1488:	cmp	r0, #0
    148c:	beq	15b0 <read_att_array+0x590>
    1490:	ldr	r5, [sp, #32]
    1494:	ldrd	r2, [r6]
    1498:	ldr	r0, [r9, #52]	; 0x34
    149c:	asr	r1, r5, #31
    14a0:	str	r5, [sp]
    14a4:	str	r1, [sp, #4]
    14a8:	add	r1, sp, #48	; 0x30
    14ac:	str	r1, [sp, #8]
    14b0:	bl	db8 <read_bytes>
    14b4:	cmp	r0, #0
    14b8:	blt	1790 <read_att_array+0x770>
    14bc:	cmp	r7, #5
    14c0:	bhi	17a4 <read_att_array+0x784>
    14c4:	add	r0, pc, #0
    14c8:	ldr	pc, [r0, r7, lsl #2]
    14cc:	.word	0x000014e4
    14d0:	.word	0x000017a4
    14d4:	.word	0x00001518
    14d8:	.word	0x00001534
    14dc:	.word	0x000014ec
    14e0:	.word	0x00001560
    14e4:	ldrsb	r0, [sp, #48]	; 0x30
    14e8:	b	152c <read_att_array+0x50c>
    14ec:	ldrb	r0, [sp, #48]	; 0x30
    14f0:	ldrb	r1, [sp, #49]	; 0x31
    14f4:	ldrb	r2, [sp, #50]	; 0x32
    14f8:	ldrb	r3, [sp, #51]	; 0x33
    14fc:	strb	r0, [sp, #51]	; 0x33
    1500:	strb	r3, [sp, #48]	; 0x30
    1504:	strb	r2, [sp, #49]	; 0x31
    1508:	strb	r1, [sp, #50]	; 0x32
    150c:	vldr	s0, [sp, #48]	; 0x30
    1510:	vcvt.f64.f32	d16, s0
    1514:	b	15a4 <read_att_array+0x584>
    1518:	ldrb	r0, [sp, #48]	; 0x30
    151c:	ldrb	r1, [sp, #49]	; 0x31
    1520:	strb	r0, [sp, #49]	; 0x31
    1524:	strb	r1, [sp, #48]	; 0x30
    1528:	ldrsh	r0, [sp, #48]	; 0x30
    152c:	vmov	s0, r0
    1530:	b	1558 <read_att_array+0x538>
    1534:	ldrb	r0, [sp, #48]	; 0x30
    1538:	ldrb	r1, [sp, #49]	; 0x31
    153c:	ldrb	r2, [sp, #50]	; 0x32
    1540:	ldrb	r3, [sp, #51]	; 0x33
    1544:	strb	r0, [sp, #51]	; 0x33
    1548:	strb	r3, [sp, #48]	; 0x30
    154c:	strb	r2, [sp, #49]	; 0x31
    1550:	strb	r1, [sp, #50]	; 0x32
    1554:	vldr	s0, [sp, #48]	; 0x30
    1558:	vcvt.f64.s32	d16, s0
    155c:	b	15a4 <read_att_array+0x584>
    1560:	ldrb	r0, [sp, #55]	; 0x37
    1564:	ldrb	r1, [sp, #48]	; 0x30
    1568:	ldrb	r2, [sp, #49]	; 0x31
    156c:	ldrb	r3, [sp, #50]	; 0x32
    1570:	ldrb	r5, [sp, #51]	; 0x33
    1574:	strb	r1, [sp, #55]	; 0x37
    1578:	strb	r0, [sp, #48]	; 0x30
    157c:	ldrb	r0, [sp, #54]	; 0x36
    1580:	strb	r0, [sp, #49]	; 0x31
    1584:	strb	r2, [sp, #54]	; 0x36
    1588:	ldrb	r0, [sp, #53]	; 0x35
    158c:	strb	r0, [sp, #50]	; 0x32
    1590:	strb	r3, [sp, #53]	; 0x35
    1594:	ldrb	r0, [sp, #52]	; 0x34
    1598:	strb	r5, [sp, #52]	; 0x34
    159c:	strb	r0, [sp, #51]	; 0x33
    15a0:	vldr	d16, [sp, #48]	; 0x30
    15a4:	ldr	r3, [sp, #40]	; 0x28
    15a8:	ldr	r5, [sp, #24]
    15ac:	vstr	d16, [r8, #24]
    15b0:	ldr	r2, [r6]
    15b4:	ldr	r1, [r6, #4]
    15b8:	cmp	r5, #2
    15bc:	bne	15f4 <read_att_array+0x5d4>
    15c0:	ldr	r7, [sp, #32]
    15c4:	mov	r0, #0
    15c8:	str	r3, [sp, #8]
    15cc:	mov	r3, r1
    15d0:	str	r4, [sp, #12]
    15d4:	str	r0, [sp]
    15d8:	mov	r0, #2
    15dc:	bl	0 <coda_netcdf_basic_type_new>
    15e0:	mov	r5, r0
    15e4:	mov	r4, #1
    15e8:	cmp	r5, #0
    15ec:	bne	1624 <read_att_array+0x604>
    15f0:	b	1790 <read_att_array+0x770>
    15f4:	ldr	r7, [sp, #32]
    15f8:	mov	r0, #1
    15fc:	mov	r4, #0
    1600:	mov	r3, r1
    1604:	str	r0, [sp, #8]
    1608:	mov	r0, r5
    160c:	str	r4, [sp, #12]
    1610:	str	r4, [sp]
    1614:	bl	0 <coda_netcdf_basic_type_new>
    1618:	mov	r5, r0
    161c:	cmp	r5, #0
    1620:	beq	1790 <read_att_array+0x770>
    1624:	ldrd	r0, [r6]
    1628:	adds	r0, r0, r7
    162c:	adc	r1, r1, r7, asr #31
    1630:	ands	r2, r7, #3
    1634:	beq	1644 <read_att_array+0x624>
    1638:	rsb	r2, r2, #4
    163c:	adds	r0, r0, r2
    1640:	adc	r1, r1, #0
    1644:	ldr	r2, [sp, #40]	; 0x28
    1648:	strd	r0, [r6]
    164c:	ldr	r1, [sp, #36]	; 0x24
    1650:	eor	r0, r2, #1
    1654:	orrs	r0, r0, r1
    1658:	eor	r1, r4, #1
    165c:	movwne	r0, #1
    1660:	tst	r0, r1
    1664:	bne	168c <read_att_array+0x66c>
    1668:	ldr	r4, [sp, #44]	; 0x2c
    166c:	ldr	r0, [sl]
    1670:	mov	r2, r5
    1674:	mov	r3, #1
    1678:	mov	r1, r4
    167c:	bl	0 <coda_mem_record_add_field>
    1680:	cmp	r0, #0
    1684:	beq	16cc <read_att_array+0x6ac>
    1688:	b	1778 <read_att_array+0x758>
    168c:	str	r2, [sp, #48]	; 0x30
    1690:	mov	r0, #1
    1694:	add	r1, sp, #48	; 0x30
    1698:	mov	r2, r5
    169c:	bl	0 <coda_netcdf_array_new>
    16a0:	cmp	r0, #0
    16a4:	beq	1770 <read_att_array+0x750>
    16a8:	mov	r4, r0
    16ac:	ldr	r0, [sl]
    16b0:	ldr	r1, [sp, #44]	; 0x2c
    16b4:	mov	r3, #1
    16b8:	mov	r2, r4
    16bc:	bl	0 <coda_mem_record_add_field>
    16c0:	cmp	r0, #0
    16c4:	bne	1788 <read_att_array+0x768>
    16c8:	ldr	r4, [sp, #44]	; 0x2c
    16cc:	mov	r0, r4
    16d0:	bl	0 <free>
    16d4:	ldr	r2, [sp, #28]
    16d8:	ldr	r1, [sp, #20]
    16dc:	mov	r5, #0
    16e0:	subs	r1, r2, r1
    16e4:	add	r0, r2, #1
    16e8:	ldr	r1, [sp, #16]
    16ec:	rscs	r1, r1, #0
    16f0:	blt	1158 <read_att_array+0x138>
    16f4:	b	10b0 <read_att_array+0x90>
    16f8:	movw	r0, #65236	; 0xfed4
    16fc:	movw	r1, #0
    1700:	movt	r0, #65535	; 0xffff
    1704:	movt	r1, #0
    1708:	bl	0 <coda_set_error>
    170c:	b	10ac <read_att_array+0x8c>
    1710:	ldr	r0, [sl]
    1714:	bl	0 <coda_dynamic_type_delete>
    1718:	movw	r1, #0
    171c:	movw	r3, #0
    1720:	mov	r0, #230	; 0xe6
    1724:	mov	r2, r4
    1728:	mvn	r5, #0
    172c:	str	r0, [sp]
    1730:	movt	r1, #0
    1734:	movt	r3, #0
    1738:	mvn	r0, #0
    173c:	bl	0 <coda_set_error>
    1740:	b	10b0 <read_att_array+0x90>
    1744:	ldr	r0, [sp, #44]	; 0x2c
    1748:	bl	0 <free>
    174c:	ldr	r0, [sl]
    1750:	bl	0 <coda_dynamic_type_delete>
    1754:	movw	r0, #65236	; 0xfed4
    1758:	movw	r1, #0
    175c:	mov	r2, r5
    1760:	movt	r0, #65535	; 0xffff
    1764:	movt	r1, #0
    1768:	bl	0 <coda_set_error>
    176c:	b	10ac <read_att_array+0x8c>
    1770:	mov	r0, r5
    1774:	b	178c <read_att_array+0x76c>
    1778:	mov	r0, r5
    177c:	bl	0 <coda_dynamic_type_delete>
    1780:	mov	r0, r4
    1784:	b	1794 <read_att_array+0x774>
    1788:	mov	r0, r4
    178c:	bl	0 <coda_dynamic_type_delete>
    1790:	ldr	r0, [sp, #44]	; 0x2c
    1794:	bl	0 <free>
    1798:	ldr	r0, [sl]
    179c:	bl	0 <coda_dynamic_type_delete>
    17a0:	b	10ac <read_att_array+0x8c>
    17a4:	movw	r0, #0
    17a8:	movw	r1, #0
    17ac:	movw	r3, #0
    17b0:	movw	r2, #417	; 0x1a1
    17b4:	movt	r0, #0
    17b8:	movt	r1, #0
    17bc:	movt	r3, #0
    17c0:	bl	0 <__assert_fail>
