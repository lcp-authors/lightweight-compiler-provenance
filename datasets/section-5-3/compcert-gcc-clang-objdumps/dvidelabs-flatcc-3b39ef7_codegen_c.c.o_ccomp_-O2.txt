
../repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_open_output_file>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #40	; 0x28
   8:	str	ip, [sp, #8]
   c:	str	lr, [sp, #12]
  10:	str	r4, [sp, #16]
  14:	str	r5, [sp, #20]
  18:	str	r6, [sp, #24]
  1c:	str	r7, [sp, #28]
  20:	str	r8, [sp, #32]
  24:	mov	r5, r3
  28:	mov	r6, r2
  2c:	mov	r7, r1
  30:	mov	r8, r0
  34:	ldr	ip, [r8, #212]	; 0xd4
  38:	ldr	r4, [ip, #216]	; 0xd8
  3c:	cmp	r4, #0
  40:	bne	48 <__flatcc_fb_open_output_file+0x48>
  44:	ldr	r4, [pc, #192]	; 10c <__flatcc_fb_open_output_file+0x10c>
  48:	mov	r0, r4
  4c:	bl	0 <strlen>
  50:	mov	r1, r0
  54:	ldr	r2, [r8, #204]	; 0xcc
  58:	cmp	r2, #0
  5c:	beq	68 <__flatcc_fb_open_output_file+0x68>
  60:	mov	r0, #0
  64:	b	e8 <__flatcc_fb_open_output_file+0xe8>
  68:	mov	r0, #1
  6c:	str	r0, [sp, #4]
  70:	str	r5, [sp]
  74:	mov	r3, r6
  78:	mov	r2, r7
  7c:	mov	r0, r4
  80:	bl	0 <__flatcc_fb_create_join_path_n>
  84:	mov	r4, r0
  88:	cmp	r0, #0
  8c:	bne	a8 <__flatcc_fb_open_output_file+0xa8>
  90:	ldr	r3, [pc, #120]	; 110 <__flatcc_fb_open_output_file+0x110>
  94:	ldr	r0, [r3]
  98:	ldr	r1, [pc, #116]	; 114 <__flatcc_fb_open_output_file+0x114>
  9c:	bl	0 <fprintf>
  a0:	mov	r0, #1
  a4:	bl	0 <exit>
  a8:	ldr	r1, [pc, #104]	; 118 <__flatcc_fb_open_output_file+0x118>
  ac:	mov	r0, r4
  b0:	bl	0 <fopen>
  b4:	str	r0, [r8, #204]	; 0xcc
  b8:	mov	r5, #0
  bc:	cmp	r0, #0
  c0:	bne	dc <__flatcc_fb_open_output_file+0xdc>
  c4:	ldr	r3, [pc, #68]	; 110 <__flatcc_fb_open_output_file+0x110>
  c8:	ldr	r0, [r3]
  cc:	ldr	r1, [pc, #52]	; 108 <__flatcc_fb_open_output_file+0x108>
  d0:	mov	r2, r4
  d4:	bl	0 <fprintf>
  d8:	mvn	r5, #0
  dc:	mov	r0, r4
  e0:	bl	0 <free>
  e4:	mov	r0, r5
  e8:	ldr	r4, [sp, #16]
  ec:	ldr	r5, [sp, #20]
  f0:	ldr	r6, [sp, #24]
  f4:	ldr	r7, [sp, #28]
  f8:	ldr	r8, [sp, #32]
  fc:	ldr	lr, [sp, #12]
 100:	add	sp, sp, #40	; 0x28
 104:	bx	lr
 108:	.word	0x000000ff
 10c:	.word	0x00000159
 110:	.word	0x00000000
 114:	.word	0x0000001d
 118:	.word	0x0000007a

0000011c <__flatcc_fb_close_output_file>:
 11c:	mov	ip, sp
 120:	sub	sp, sp, #16
 124:	str	ip, [sp]
 128:	str	lr, [sp, #4]
 12c:	str	r4, [sp, #8]
 130:	mov	r4, r0
 134:	ldr	r0, [r4, #212]	; 0xd4
 138:	ldr	r2, [r0, #124]	; 0x7c
 13c:	cmp	r2, #0
 140:	bne	168 <__flatcc_fb_close_output_file+0x4c>
 144:	ldr	r1, [r0, #108]	; 0x6c
 148:	cmp	r1, #0
 14c:	bne	168 <__flatcc_fb_close_output_file+0x4c>
 150:	ldr	r0, [r4, #204]	; 0xcc
 154:	cmp	r0, #0
 158:	beq	168 <__flatcc_fb_close_output_file+0x4c>
 15c:	bl	0 <fclose>
 160:	mov	r3, #0
 164:	str	r3, [r4, #204]	; 0xcc
 168:	ldr	r4, [sp, #8]
 16c:	ldr	lr, [sp, #4]
 170:	add	sp, sp, #16
 174:	bx	lr

00000178 <__flatcc_fb_end_output_c>:
 178:	mov	ip, sp
 17c:	sub	sp, sp, #16
 180:	str	ip, [sp]
 184:	str	lr, [sp, #4]
 188:	str	r4, [sp, #8]
 18c:	mov	r4, r0
 190:	ldr	r0, [r4, #204]	; 0xcc
 194:	ldr	r1, [pc, #44]	; 1c8 <__flatcc_fb_end_output_c+0x50>
 198:	ldr	r1, [r1]
 19c:	cmp	r0, r1
 1a0:	beq	1b0 <__flatcc_fb_end_output_c+0x38>
 1a4:	cmp	r0, #0
 1a8:	beq	1b0 <__flatcc_fb_end_output_c+0x38>
 1ac:	bl	0 <fclose>
 1b0:	mov	r2, #0
 1b4:	str	r2, [r4, #204]	; 0xcc
 1b8:	ldr	r4, [sp, #8]
 1bc:	ldr	lr, [sp, #4]
 1c0:	add	sp, sp, #16
 1c4:	bx	lr
 1c8:	.word	0x00000000

000001cc <__flatcc_fb_init_output_c>:
 1cc:	mov	ip, sp
 1d0:	sub	sp, sp, #40	; 0x28
 1d4:	str	ip, [sp]
 1d8:	str	lr, [sp, #4]
 1dc:	str	r4, [sp, #8]
 1e0:	str	r5, [sp, #12]
 1e4:	str	r6, [sp, #16]
 1e8:	str	r7, [sp, #20]
 1ec:	str	r8, [sp, #24]
 1f0:	str	r9, [sp, #28]
 1f4:	str	sl, [sp, #32]
 1f8:	str	fp, [sp, #36]	; 0x24
 1fc:	mov	sl, r1
 200:	mov	r8, r0
 204:	ldr	ip, [pc, #484]	; 3f0 <__flatcc_fb_init_output_c+0x224>
 208:	ldr	r1, [pc, #508]	; 40c <__flatcc_fb_init_output_c+0x240>
 20c:	ldr	r2, [sl, #128]	; 0x80
 210:	cmp	r2, #0
 214:	movne	r7, ip
 218:	moveq	r7, r1
 21c:	ldr	r4, [sl, #216]	; 0xd8
 220:	cmp	r4, #0
 224:	bne	22c <__flatcc_fb_init_output_c+0x60>
 228:	ldr	r4, [pc, #456]	; 3f8 <__flatcc_fb_init_output_c+0x22c>
 22c:	mov	r1, #0
 230:	mov	r2, #232	; 0xe8
 234:	mov	r0, r8
 238:	bl	0 <memset>
 23c:	str	sl, [r8, #212]	; 0xd4
 240:	ldr	r5, [sl, #196]	; 0xc4
 244:	cmp	r5, #0
 248:	beq	27c <__flatcc_fb_init_output_c+0xb0>
 24c:	mov	r0, r5
 250:	bl	0 <strlen>
 254:	mov	r6, r0
 258:	cmp	r6, #100	; 0x64
 25c:	bls	28c <__flatcc_fb_init_output_c+0xc0>
 260:	ldr	r0, [pc, #408]	; 400 <__flatcc_fb_init_output_c+0x234>
 264:	ldr	r0, [r0]
 268:	ldr	r1, [pc, #396]	; 3fc <__flatcc_fb_init_output_c+0x230>
 26c:	mov	r2, #100	; 0x64
 270:	bl	0 <fprintf>
 274:	mvn	r0, #0
 278:	b	3c0 <__flatcc_fb_init_output_c+0x1f4>
 27c:	ldr	r5, [pc, #368]	; 3f4 <__flatcc_fb_init_output_c+0x228>
 280:	mov	r0, r5
 284:	bl	0 <strlen>
 288:	mov	r6, r0
 28c:	mov	r2, #100	; 0x64
 290:	mov	r1, r5
 294:	mov	r0, r8
 298:	bl	0 <strncpy>
 29c:	mov	ip, #0
 2a0:	strb	ip, [r8, #100]	; 0x64
 2a4:	cmp	r6, #0
 2a8:	beq	2c0 <__flatcc_fb_init_output_c+0xf4>
 2ac:	mov	r2, #95	; 0x5f
 2b0:	strb	r2, [r8, r6]
 2b4:	add	r2, r8, r6
 2b8:	mov	r3, #0
 2bc:	strb	r3, [r2, #1]
 2c0:	add	r5, r8, #102	; 0x66
 2c4:	mov	fp, r8
 2c8:	ldrb	r0, [fp]
 2cc:	cmp	r0, #0
 2d0:	beq	2ec <__flatcc_fb_init_output_c+0x120>
 2d4:	mov	r9, r5
 2d8:	add	r5, r9, #1
 2dc:	add	fp, fp, #1
 2e0:	bl	0 <toupper>
 2e4:	strb	r0, [r9]
 2e8:	b	2c8 <__flatcc_fb_init_output_c+0xfc>
 2ec:	mov	ip, #0
 2f0:	strb	ip, [r5]
 2f4:	add	r0, r8, r6
 2f8:	mov	ip, #0
 2fc:	strb	ip, [r0, #102]	; 0x66
 300:	ldr	r1, [sl, #176]	; 0xb0
 304:	str	r1, [r8, #224]	; 0xe0
 308:	ldr	r0, [sl, #108]	; 0x6c
 30c:	cmp	r0, #0
 310:	beq	328 <__flatcc_fb_init_output_c+0x15c>
 314:	ldr	r0, [pc, #236]	; 408 <__flatcc_fb_init_output_c+0x23c>
 318:	ldr	r2, [r0]
 31c:	str	r2, [r8, #204]	; 0xcc
 320:	mov	r0, #0
 324:	b	3c0 <__flatcc_fb_init_output_c+0x1f4>
 328:	ldr	r1, [r8, #212]	; 0xd4
 32c:	ldr	r1, [r1, #124]	; 0x7c
 330:	cmp	r1, #0
 334:	bne	340 <__flatcc_fb_init_output_c+0x174>
 338:	mov	r0, #0
 33c:	b	3c0 <__flatcc_fb_init_output_c+0x1f4>
 340:	ldr	r2, [pc, #176]	; 3f8 <__flatcc_fb_init_output_c+0x22c>
 344:	mov	r3, #1
 348:	mov	r0, r4
 34c:	bl	0 <__flatcc_fb_create_join_path>
 350:	mov	r4, r0
 354:	cmp	r0, #0
 358:	bne	374 <__flatcc_fb_init_output_c+0x1a8>
 35c:	ldr	r3, [pc, #156]	; 400 <__flatcc_fb_init_output_c+0x234>
 360:	ldr	r0, [r3]
 364:	ldr	r1, [pc, #152]	; 404 <__flatcc_fb_init_output_c+0x238>
 368:	bl	0 <fprintf>
 36c:	mov	r0, #1
 370:	bl	0 <exit>
 374:	mov	r1, r7
 378:	mov	r0, r4
 37c:	bl	0 <fopen>
 380:	str	r0, [r8, #204]	; 0xcc
 384:	cmp	r0, #0
 388:	bne	3a8 <__flatcc_fb_init_output_c+0x1dc>
 38c:	ldr	r3, [pc, #108]	; 400 <__flatcc_fb_init_output_c+0x234>
 390:	ldr	r0, [r3]
 394:	ldr	r1, [pc, #80]	; 3ec <__flatcc_fb_init_output_c+0x220>
 398:	mov	r2, r4
 39c:	bl	0 <fprintf>
 3a0:	mvn	r5, #0
 3a4:	b	3ac <__flatcc_fb_init_output_c+0x1e0>
 3a8:	mov	r5, #0
 3ac:	cmp	r4, #0
 3b0:	beq	3bc <__flatcc_fb_init_output_c+0x1f0>
 3b4:	mov	r0, r4
 3b8:	bl	0 <free>
 3bc:	mov	r0, r5
 3c0:	ldr	r4, [sp, #8]
 3c4:	ldr	r5, [sp, #12]
 3c8:	ldr	r6, [sp, #16]
 3cc:	ldr	r7, [sp, #20]
 3d0:	ldr	r8, [sp, #24]
 3d4:	ldr	r9, [sp, #28]
 3d8:	ldr	sl, [sp, #32]
 3dc:	ldr	fp, [sp, #36]	; 0x24
 3e0:	ldr	lr, [sp, #4]
 3e4:	add	sp, sp, #40	; 0x28
 3e8:	bx	lr
 3ec:	.word	0x000000ff
 3f0:	.word	0x00000040
 3f4:	.word	0x0000012c
 3f8:	.word	0x00000159
 3fc:	.word	0x00000043
 400:	.word	0x00000000
 404:	.word	0x0000001d
 408:	.word	0x00000000
 40c:	.word	0x0000007a

00000410 <_str_set_destructor>:
 410:	mov	ip, sp
 414:	sub	sp, sp, #8
 418:	str	ip, [sp]
 41c:	str	lr, [sp, #4]
 420:	mov	r0, r1
 424:	ldr	lr, [sp, #4]
 428:	add	sp, sp, #8
 42c:	b	0 <free>

00000430 <__flatcc_fb_gen_c_includes>:
 430:	mov	ip, sp
 434:	sub	sp, sp, #64	; 0x40
 438:	str	ip, [sp, #8]
 43c:	str	lr, [sp, #12]
 440:	str	r4, [sp, #16]
 444:	str	r5, [sp, #20]
 448:	str	r6, [sp, #24]
 44c:	str	r7, [sp, #28]
 450:	str	r8, [sp, #32]
 454:	str	r9, [sp, #36]	; 0x24
 458:	str	sl, [sp, #40]	; 0x28
 45c:	mov	r5, r2
 460:	mov	r9, r1
 464:	mov	r7, r0
 468:	ldr	r0, [r7, #208]	; 0xd0
 46c:	ldr	r8, [r0]
 470:	add	r0, sp, #48	; 0x30
 474:	mov	r1, #0
 478:	mov	r2, #16
 47c:	bl	0 <memset>
 480:	ldr	r3, [r7, #208]	; 0xd0
 484:	ldr	r0, [r3, #164]	; 0xa4
 488:	bl	0 <__flatcc_fb_copy_path>
 48c:	add	r1, sp, #48	; 0x30
 490:	mov	r2, #1
 494:	mov	r3, r0
 498:	mov	r0, r1
 49c:	mov	r1, r3
 4a0:	bl	0 <str_set_insert_item>
 4a4:	cmp	r8, #0
 4a8:	beq	58c <__flatcc_fb_gen_c_includes+0x15c>
 4ac:	ldr	r0, [r8, #8]
 4b0:	ldr	r1, [r8, #12]
 4b4:	ldr	ip, [r7, #212]	; 0xd4
 4b8:	ldr	r2, [ip, #96]	; 0x60
 4bc:	bl	0 <__flatcc_fb_create_basename>
 4c0:	mov	r4, r0
 4c4:	mov	r1, r4
 4c8:	cmp	r1, #0
 4cc:	bne	4e8 <__flatcc_fb_gen_c_includes+0xb8>
 4d0:	ldr	ip, [pc, #244]	; 5cc <__flatcc_fb_gen_c_includes+0x19c>
 4d4:	ldr	r0, [ip]
 4d8:	ldr	r1, [pc, #240]	; 5d0 <__flatcc_fb_gen_c_includes+0x1a0>
 4dc:	bl	0 <fprintf>
 4e0:	mov	r0, #1
 4e4:	bl	0 <exit>
 4e8:	ldr	r8, [r8]
 4ec:	mov	r0, r4
 4f0:	bl	0 <__flatcc_fb_copy_path>
 4f4:	mov	r6, r0
 4f8:	cmp	r0, #0
 4fc:	bne	518 <__flatcc_fb_gen_c_includes+0xe8>
 500:	ldr	ip, [pc, #196]	; 5cc <__flatcc_fb_gen_c_includes+0x19c>
 504:	ldr	r0, [ip]
 508:	ldr	r1, [pc, #192]	; 5d0 <__flatcc_fb_gen_c_includes+0x1a0>
 50c:	bl	0 <fprintf>
 510:	mov	r0, #1
 514:	bl	0 <exit>
 518:	mov	sl, r6
 51c:	ldrb	r0, [sl]
 520:	cmp	r0, #0
 524:	beq	538 <__flatcc_fb_gen_c_includes+0x108>
 528:	bl	0 <toupper>
 52c:	strb	r0, [sl]
 530:	add	sl, sl, #1
 534:	b	51c <__flatcc_fb_gen_c_includes+0xec>
 538:	add	r0, sp, #48	; 0x30
 53c:	mov	r2, #1
 540:	mov	r1, r6
 544:	bl	0 <str_set_insert_item>
 548:	cmp	r0, #0
 54c:	beq	564 <__flatcc_fb_gen_c_includes+0x134>
 550:	mov	r0, r6
 554:	bl	0 <free>
 558:	mov	r0, r4
 55c:	bl	0 <free>
 560:	b	4a4 <__flatcc_fb_gen_c_includes+0x74>
 564:	ldr	r0, [r7, #204]	; 0xcc
 568:	ldr	r1, [pc, #84]	; 5c4 <__flatcc_fb_gen_c_includes+0x194>
 56c:	str	r9, [sp, #4]
 570:	str	r4, [sp]
 574:	mov	r3, r5
 578:	mov	r2, r6
 57c:	bl	0 <fprintf>
 580:	mov	r0, r4
 584:	bl	0 <free>
 588:	b	4a4 <__flatcc_fb_gen_c_includes+0x74>
 58c:	add	r0, sp, #48	; 0x30
 590:	ldr	r1, [pc, #48]	; 5c8 <__flatcc_fb_gen_c_includes+0x198>
 594:	mov	r2, #0
 598:	bl	0 <str_set_destroy>
 59c:	ldr	r4, [sp, #16]
 5a0:	ldr	r5, [sp, #20]
 5a4:	ldr	r6, [sp, #24]
 5a8:	ldr	r7, [sp, #28]
 5ac:	ldr	r8, [sp, #32]
 5b0:	ldr	r9, [sp, #36]	; 0x24
 5b4:	ldr	sl, [sp, #40]	; 0x28
 5b8:	ldr	lr, [sp, #12]
 5bc:	add	sp, sp, #64	; 0x40
 5c0:	bx	lr
 5c4:	.word	0x00000098
	...
 5d0:	.word	0x0000001d

000005d4 <__flatcc_fb_copy_scope>:
 5d4:	mov	ip, sp
 5d8:	sub	sp, sp, #24
 5dc:	str	ip, [sp]
 5e0:	str	lr, [sp, #4]
 5e4:	str	r4, [sp, #8]
 5e8:	str	r5, [sp, #12]
 5ec:	str	r6, [sp, #16]
 5f0:	str	r7, [sp, #20]
 5f4:	mov	r6, r1
 5f8:	mov	r4, r0
 5fc:	ldr	r1, [r4, #24]
 600:	ldr	ip, [r4]
 604:	cmp	ip, #0
 608:	beq	624 <__flatcc_fb_copy_scope+0x50>
 60c:	ldr	r3, [ip, #4]
 610:	ldr	r2, [r3, #4]
 614:	add	r0, r1, r2
 618:	add	r1, r0, #1
 61c:	ldr	ip, [ip]
 620:	b	604 <__flatcc_fb_copy_scope+0x30>
 624:	cmp	r1, #101	; 0x65
 628:	bls	63c <__flatcc_fb_copy_scope+0x68>
 62c:	mov	ip, #0
 630:	strb	ip, [r6]
 634:	mvn	r0, #0
 638:	b	6a0 <__flatcc_fb_copy_scope+0xcc>
 63c:	ldr	r5, [r4, #24]
 640:	ldr	r1, [r4, #20]
 644:	mov	r2, r5
 648:	mov	r0, r6
 64c:	bl	0 <memcpy>
 650:	ldr	r7, [r4]
 654:	cmp	r7, #0
 658:	beq	694 <__flatcc_fb_copy_scope+0xc0>
 65c:	ldr	r1, [r7, #4]
 660:	ldr	r4, [r1, #4]
 664:	add	r0, r6, r5
 668:	ldr	r1, [r1]
 66c:	mov	r2, r4
 670:	bl	0 <memcpy>
 674:	add	r1, r5, r4
 678:	add	r5, r1, #1
 67c:	add	r2, r6, r5
 680:	mov	r0, #95	; 0x5f
 684:	sub	lr, r2, #4096	; 0x1000
 688:	strb	r0, [lr, #4095]	; 0xfff
 68c:	ldr	r7, [r7]
 690:	b	654 <__flatcc_fb_copy_scope+0x80>
 694:	mov	r2, #0
 698:	strb	r2, [r6, r5]
 69c:	mov	r0, r5
 6a0:	ldr	r4, [sp, #8]
 6a4:	ldr	r5, [sp, #12]
 6a8:	ldr	r6, [sp, #16]
 6ac:	ldr	r7, [sp, #20]
 6b0:	ldr	lr, [sp, #4]
 6b4:	add	sp, sp, #24
 6b8:	bx	lr

000006bc <__flatcc_fb_scoped_symbol_name>:
 6bc:	mov	ip, sp
 6c0:	sub	sp, sp, #16
 6c4:	str	ip, [sp]
 6c8:	str	lr, [sp, #4]
 6cc:	str	r4, [sp, #8]
 6d0:	str	r5, [sp, #12]
 6d4:	mov	r5, r2
 6d8:	ldr	r4, [r1, #4]
 6dc:	ldr	r1, [r5, #204]	; 0xcc
 6e0:	cmp	r1, r0
 6e4:	beq	714 <__flatcc_fb_scoped_symbol_name+0x58>
 6e8:	mov	r1, r5
 6ec:	bl	5d4 <__flatcc_fb_copy_scope>
 6f0:	str	r0, [r5, #208]	; 0xd0
 6f4:	cmp	r0, #0
 6f8:	bge	714 <__flatcc_fb_scoped_symbol_name+0x58>
 6fc:	mov	ip, #0
 700:	str	ip, [r5, #208]	; 0xd0
 704:	ldr	r2, [pc, #144]	; 79c <__flatcc_fb_scoped_symbol_name+0xe0>
 708:	ldr	r0, [r2]
 70c:	ldr	r1, [pc, #128]	; 794 <__flatcc_fb_scoped_symbol_name+0xd8>
 710:	bl	0 <fprintf>
 714:	ldr	r1, [r4, #4]
 718:	str	r1, [r5, #212]	; 0xd4
 71c:	ldr	r0, [r5, #208]	; 0xd0
 720:	add	r2, r0, r1
 724:	str	r2, [r5, #216]	; 0xd8
 728:	cmp	r2, #203	; 0xcb
 72c:	ble	760 <__flatcc_fb_scoped_symbol_name+0xa4>
 730:	ldr	r3, [pc, #100]	; 79c <__flatcc_fb_scoped_symbol_name+0xe0>
 734:	ldr	r0, [r3]
 738:	ldr	r1, [pc, #88]	; 798 <__flatcc_fb_scoped_symbol_name+0xdc>
 73c:	ldr	r2, [r5, #212]	; 0xd4
 740:	ldr	r3, [r4]
 744:	bl	0 <fprintf>
 748:	ldr	ip, [r5, #208]	; 0xd0
 74c:	rsb	r0, ip, #203	; 0xcb
 750:	str	r0, [r5, #212]	; 0xd4
 754:	ldr	r3, [r5, #208]	; 0xd0
 758:	add	r2, r3, r0
 75c:	str	r2, [r5, #216]	; 0xd8
 760:	ldr	r3, [r5, #208]	; 0xd0
 764:	add	r0, r5, r3
 768:	ldr	r1, [r4]
 76c:	ldr	r2, [r5, #212]	; 0xd4
 770:	bl	0 <memcpy>
 774:	ldr	r1, [r5, #216]	; 0xd8
 778:	mov	r3, #0
 77c:	strb	r3, [r5, r1]
 780:	ldr	r4, [sp, #8]
 784:	ldr	r5, [sp, #12]
 788:	ldr	lr, [sp, #4]
 78c:	add	sp, sp, #16
 790:	bx	lr
 794:	.word	0x00000000
 798:	.word	0x000000cf
 79c:	.word	0x00000000

000007a0 <__flatcc_fb_codegen_common_c>:
 7a0:	mov	ip, sp
 7a4:	sub	sp, sp, #24
 7a8:	str	ip, [sp]
 7ac:	str	lr, [sp, #4]
 7b0:	str	r4, [sp, #8]
 7b4:	str	r5, [sp, #12]
 7b8:	str	r6, [sp, #16]
 7bc:	mov	r6, r0
 7c0:	mov	r0, r6
 7c4:	bl	0 <strlen>
 7c8:	sub	r5, r0, #1
 7cc:	mov	r4, #0
 7d0:	ldr	ip, [r6, #212]	; 0xd4
 7d4:	ldr	r2, [ip, #144]	; 0x90
 7d8:	cmp	r2, #0
 7dc:	beq	818 <__flatcc_fb_codegen_common_c+0x78>
 7e0:	ldr	r3, [pc, #156]	; 884 <__flatcc_fb_codegen_common_c+0xe4>
 7e4:	mov	r2, r5
 7e8:	mov	r1, r6
 7ec:	mov	r0, r6
 7f0:	bl	0 <__flatcc_fb_open_output_file>
 7f4:	cmp	r0, #0
 7f8:	beq	804 <__flatcc_fb_codegen_common_c+0x64>
 7fc:	mvn	r0, #0
 800:	b	868 <__flatcc_fb_codegen_common_c+0xc8>
 804:	mov	r0, r6
 808:	bl	0 <__flatcc_fb_gen_common_c_header>
 80c:	mov	r4, r0
 810:	mov	r0, r6
 814:	bl	11c <__flatcc_fb_close_output_file>
 818:	cmp	r4, #0
 81c:	bne	864 <__flatcc_fb_codegen_common_c+0xc4>
 820:	ldr	r1, [r6, #212]	; 0xd4
 824:	ldr	r3, [r1, #148]	; 0x94
 828:	cmp	r3, #0
 82c:	beq	864 <__flatcc_fb_codegen_common_c+0xc4>
 830:	ldr	r3, [pc, #72]	; 880 <__flatcc_fb_codegen_common_c+0xe0>
 834:	mov	r2, r5
 838:	mov	r1, r6
 83c:	mov	r0, r6
 840:	bl	0 <__flatcc_fb_open_output_file>
 844:	cmp	r0, #0
 848:	beq	854 <__flatcc_fb_codegen_common_c+0xb4>
 84c:	mvn	r0, #0
 850:	b	868 <__flatcc_fb_codegen_common_c+0xc8>
 854:	mov	r0, r6
 858:	bl	0 <__flatcc_fb_gen_common_c_builder_header>
 85c:	mov	r0, r6
 860:	bl	11c <__flatcc_fb_close_output_file>
 864:	mov	r0, r4
 868:	ldr	r4, [sp, #8]
 86c:	ldr	r5, [sp, #12]
 870:	ldr	r6, [sp, #16]
 874:	ldr	lr, [sp, #4]
 878:	add	sp, sp, #24
 87c:	bx	lr
 880:	.word	0x000000bd
 884:	.word	0x00000148

00000888 <__flatcc_fb_codegen_c>:
 888:	mov	ip, sp
 88c:	sub	sp, sp, #24
 890:	str	ip, [sp]
 894:	str	lr, [sp, #4]
 898:	str	r4, [sp, #8]
 89c:	str	r5, [sp, #12]
 8a0:	str	r6, [sp, #16]
 8a4:	mov	r5, r0
 8a8:	mov	r4, #0
 8ac:	str	r1, [r5, #208]	; 0xd0
 8b0:	ldr	r0, [r1, #60]	; 0x3c
 8b4:	mov	r1, #0
 8b8:	mov	r2, #0
 8bc:	bl	0 <fb_scope_table_find>
 8c0:	str	r0, [r5, #216]	; 0xd8
 8c4:	ldr	ip, [r5, #208]	; 0xd0
 8c8:	ldr	r0, [ip, #160]	; 0xa0
 8cc:	bl	0 <strlen>
 8d0:	mov	r6, r0
 8d4:	ldr	r0, [r5, #212]	; 0xd4
 8d8:	ldr	r1, [r0, #152]	; 0x98
 8dc:	cmp	r1, #0
 8e0:	beq	928 <__flatcc_fb_codegen_c+0xa0>
 8e4:	ldr	r3, [r5, #208]	; 0xd0
 8e8:	ldr	r1, [r3, #160]	; 0xa0
 8ec:	ldr	r3, [pc, #432]	; aa4 <__flatcc_fb_codegen_c+0x21c>
 8f0:	mov	r2, r6
 8f4:	mov	r0, r5
 8f8:	bl	0 <__flatcc_fb_open_output_file>
 8fc:	cmp	r0, #0
 900:	beq	90c <__flatcc_fb_codegen_c+0x84>
 904:	mvn	r4, #0
 908:	b	a78 <__flatcc_fb_codegen_c+0x1f0>
 90c:	mov	r0, r5
 910:	bl	0 <__flatcc_fb_gen_c_reader>
 914:	mov	r4, r0
 918:	cmp	r4, #0
 91c:	bne	a78 <__flatcc_fb_codegen_c+0x1f0>
 920:	mov	r0, r5
 924:	bl	11c <__flatcc_fb_close_output_file>
 928:	ldr	ip, [r5, #212]	; 0xd4
 92c:	ldr	r2, [ip, #156]	; 0x9c
 930:	cmp	r2, #0
 934:	beq	97c <__flatcc_fb_codegen_c+0xf4>
 938:	ldr	ip, [r5, #208]	; 0xd0
 93c:	ldr	r1, [ip, #160]	; 0xa0
 940:	ldr	r3, [pc, #332]	; a94 <__flatcc_fb_codegen_c+0x20c>
 944:	mov	r2, r6
 948:	mov	r0, r5
 94c:	bl	0 <__flatcc_fb_open_output_file>
 950:	cmp	r0, #0
 954:	beq	960 <__flatcc_fb_codegen_c+0xd8>
 958:	mvn	r4, #0
 95c:	b	a78 <__flatcc_fb_codegen_c+0x1f0>
 960:	mov	r0, r5
 964:	bl	0 <__flatcc_fb_gen_c_builder>
 968:	mov	r4, r0
 96c:	cmp	r0, #0
 970:	bne	a78 <__flatcc_fb_codegen_c+0x1f0>
 974:	mov	r0, r5
 978:	bl	11c <__flatcc_fb_close_output_file>
 97c:	ldr	r2, [r5, #212]	; 0xd4
 980:	ldr	r3, [r2, #160]	; 0xa0
 984:	cmp	r3, #0
 988:	beq	9d0 <__flatcc_fb_codegen_c+0x148>
 98c:	ldr	r2, [r5, #208]	; 0xd0
 990:	ldr	r1, [r2, #160]	; 0xa0
 994:	ldr	r3, [pc, #256]	; a9c <__flatcc_fb_codegen_c+0x214>
 998:	mov	r2, r6
 99c:	mov	r0, r5
 9a0:	bl	0 <__flatcc_fb_open_output_file>
 9a4:	cmp	r0, #0
 9a8:	beq	9b4 <__flatcc_fb_codegen_c+0x12c>
 9ac:	mvn	r4, #0
 9b0:	b	a78 <__flatcc_fb_codegen_c+0x1f0>
 9b4:	mov	r0, r5
 9b8:	bl	0 <__flatcc_fb_gen_c_verifier>
 9bc:	mov	r4, r0
 9c0:	cmp	r4, #0
 9c4:	bne	a78 <__flatcc_fb_codegen_c+0x1f0>
 9c8:	mov	r0, r5
 9cc:	bl	11c <__flatcc_fb_close_output_file>
 9d0:	ldr	ip, [r5, #212]	; 0xd4
 9d4:	ldr	r3, [ip, #164]	; 0xa4
 9d8:	cmp	r3, #0
 9dc:	beq	a24 <__flatcc_fb_codegen_c+0x19c>
 9e0:	ldr	r0, [r5, #208]	; 0xd0
 9e4:	ldr	r1, [r0, #160]	; 0xa0
 9e8:	ldr	r3, [pc, #176]	; aa0 <__flatcc_fb_codegen_c+0x218>
 9ec:	mov	r2, r6
 9f0:	mov	r0, r5
 9f4:	bl	0 <__flatcc_fb_open_output_file>
 9f8:	cmp	r0, #0
 9fc:	beq	a08 <__flatcc_fb_codegen_c+0x180>
 a00:	mvn	r4, #0
 a04:	b	a78 <__flatcc_fb_codegen_c+0x1f0>
 a08:	mov	r0, r5
 a0c:	bl	0 <__flatcc_fb_gen_c_json_parser>
 a10:	mov	r4, r0
 a14:	cmp	r0, #0
 a18:	bne	a78 <__flatcc_fb_codegen_c+0x1f0>
 a1c:	mov	r0, r5
 a20:	bl	11c <__flatcc_fb_close_output_file>
 a24:	ldr	r3, [r5, #212]	; 0xd4
 a28:	ldr	r2, [r3, #168]	; 0xa8
 a2c:	cmp	r2, #0
 a30:	beq	a78 <__flatcc_fb_codegen_c+0x1f0>
 a34:	ldr	r1, [r5, #208]	; 0xd0
 a38:	ldr	r1, [r1, #160]	; 0xa0
 a3c:	ldr	r3, [pc, #84]	; a98 <__flatcc_fb_codegen_c+0x210>
 a40:	mov	r2, r6
 a44:	mov	r0, r5
 a48:	bl	0 <__flatcc_fb_open_output_file>
 a4c:	cmp	r0, #0
 a50:	beq	a5c <__flatcc_fb_codegen_c+0x1d4>
 a54:	mvn	r4, #0
 a58:	b	a78 <__flatcc_fb_codegen_c+0x1f0>
 a5c:	mov	r0, r5
 a60:	bl	0 <__flatcc_fb_gen_c_json_printer>
 a64:	mov	r4, r0
 a68:	cmp	r4, #0
 a6c:	bne	a78 <__flatcc_fb_codegen_c+0x1f0>
 a70:	mov	r0, r5
 a74:	bl	11c <__flatcc_fb_close_output_file>
 a78:	mov	r0, r4
 a7c:	ldr	r4, [sp, #8]
 a80:	ldr	r5, [sp, #12]
 a84:	ldr	r6, [sp, #16]
 a88:	ldr	lr, [sp, #4]
 a8c:	add	sp, sp, #24
 a90:	bx	lr
 a94:	.word	0x00000121
 a98:	.word	0x00000138
 a9c:	.word	0x0000007d
 aa0:	.word	0x00000089
 aa4:	.word	0x000000f5
