
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_sp3_done>:
       0:	push	{r4, r5, r6, sl, fp, lr}
       4:	add	fp, sp, #16
       8:	ldr	r4, [pc, #92]	; 6c <coda_sp3_done+0x6c>
       c:	bl	0 <__aeabi_read_tp>
      10:	ldr	r0, [r0, r4]
      14:	cmp	r0, #0
      18:	beq	68 <coda_sp3_done+0x68>
      1c:	mov	r5, #0
      20:	mov	r6, #0
      24:	b	34 <coda_sp3_done+0x34>
      28:	sub	r6, r6, #1
      2c:	cmn	r6, #75	; 0x4b
      30:	beq	58 <coda_sp3_done+0x58>
      34:	ldr	r1, [r0, -r6, lsl #2]
      38:	cmp	r1, #0
      3c:	beq	28 <coda_sp3_done+0x28>
      40:	mov	r0, r1
      44:	bl	0 <coda_type_release>
      48:	bl	0 <__aeabi_read_tp>
      4c:	ldr	r0, [r0, r4]
      50:	str	r5, [r0, -r6, lsl #2]
      54:	b	28 <coda_sp3_done+0x28>
      58:	bl	0 <free>
      5c:	mov	r1, #0
      60:	bl	0 <__aeabi_read_tp>
      64:	str	r1, [r0, r4]
      68:	pop	{r4, r5, r6, sl, fp, pc}
      6c:	.word	0x00000000

00000070 <coda_sp3_reopen>:
      70:	push	{r4, r5, r6, r7, fp, lr}
      74:	add	fp, sp, #16
      78:	sub	sp, sp, #8
      7c:	mov	r4, r0
      80:	bl	190 <sp3_init>
      84:	cmp	r0, #0
      88:	beq	9c <coda_sp3_reopen+0x2c>
      8c:	ldr	r0, [r4]
      90:	bl	0 <coda_close>
      94:	mvn	r6, #0
      98:	b	184 <coda_sp3_reopen+0x114>
      9c:	mov	r0, #56	; 0x38
      a0:	bl	0 <malloc>
      a4:	cmp	r0, #0
      a8:	beq	11c <coda_sp3_reopen+0xac>
      ac:	mov	r5, r0
      b0:	mov	r1, #0
      b4:	vmov.i32	q8, #0	; 0x00000000
      b8:	add	r0, r0, #8
      bc:	mov	r3, #9
      c0:	str	r1, [r5]
      c4:	ldr	r2, [r4]
      c8:	ldrd	r6, [r2, #8]
      cc:	strd	r6, [r0]
      d0:	str	r3, [r5, #16]
      d4:	str	r1, [r0, #32]
      d8:	str	r1, [r0, #36]	; 0x24
      dc:	add	r0, r5, #20
      e0:	vst1.32	{d16-d17}, [r0]
      e4:	str	r1, [r5, #48]	; 0x30
      e8:	ldr	r0, [r2]
      ec:	bl	0 <strdup>
      f0:	cmp	r0, #0
      f4:	str	r0, [r5]
      f8:	beq	148 <coda_sp3_reopen+0xd8>
      fc:	ldr	r0, [r4]
     100:	bl	0 <coda_close>
     104:	mov	r0, r5
     108:	bl	22dc <read_file>
     10c:	cmp	r0, #0
     110:	beq	17c <coda_sp3_reopen+0x10c>
     114:	mov	r0, r5
     118:	b	90 <coda_sp3_reopen+0x20>
     11c:	movw	r1, #0
     120:	movw	r3, #0
     124:	movw	r0, #1946	; 0x79a
     128:	mov	r2, #56	; 0x38
     12c:	mvn	r6, #0
     130:	movt	r1, #0
     134:	movt	r3, #0
     138:	str	r0, [sp]
     13c:	mvn	r0, #0
     140:	bl	0 <coda_set_error>
     144:	b	170 <coda_sp3_reopen+0x100>
     148:	movw	r1, #0
     14c:	movw	r2, #0
     150:	mvn	r0, #0
     154:	movw	r3, #1964	; 0x7ac
     158:	mvn	r6, #0
     15c:	movt	r1, #0
     160:	movt	r2, #0
     164:	bl	0 <coda_set_error>
     168:	mov	r0, r5
     16c:	bl	0 <coda_close>
     170:	ldr	r0, [r4]
     174:	bl	0 <coda_close>
     178:	b	184 <coda_sp3_reopen+0x114>
     17c:	mov	r6, #0
     180:	str	r5, [r4]
     184:	mov	r0, r6
     188:	sub	sp, fp, #16
     18c:	pop	{r4, r5, r6, r7, fp, pc}

00000190 <sp3_init>:
     190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     194:	add	fp, sp, #28
     198:	sub	sp, sp, #12
     19c:	ldr	r8, [pc, #20]	; 1b8 <sp3_init+0x28>
     1a0:	bl	0 <__aeabi_read_tp>
     1a4:	ldr	r0, [r0, r8]
     1a8:	mov	r4, #0
     1ac:	cmp	r0, #0
     1b0:	bne	22d0 <sp3_init+0x2140>
     1b4:	b	1bc <sp3_init+0x2c>
     1b8:	.word	0x00000000
     1bc:	mov	r0, #300	; 0x12c
     1c0:	bl	0 <malloc>
     1c4:	mov	r1, r0
     1c8:	bl	0 <__aeabi_read_tp>
     1cc:	cmp	r1, #0
     1d0:	str	r1, [r0, r8]
     1d4:	beq	22a8 <sp3_init+0x2118>
     1d8:	mov	r0, r1
     1dc:	mov	r1, #0
     1e0:	mov	r2, #300	; 0x12c
     1e4:	mov	r4, #0
     1e8:	bl	0 <memset>
     1ec:	mov	r0, #9
     1f0:	bl	0 <coda_type_text_new>
     1f4:	mov	r1, r0
     1f8:	bl	0 <__aeabi_read_tp>
     1fc:	mov	r5, r0
     200:	ldr	r0, [r0, r8]
     204:	mov	r2, #1
     208:	mov	r3, #0
     20c:	str	r1, [r0]
     210:	mov	r0, r1
     214:	bl	0 <coda_type_set_byte_size>
     218:	ldr	r0, [r5, r8]
     21c:	movw	r1, #0
     220:	movt	r1, #0
     224:	ldr	r0, [r0]
     228:	bl	0 <coda_type_set_description>
     22c:	mov	r0, #9
     230:	bl	0 <coda_type_text_new>
     234:	ldr	r1, [r5, r8]
     238:	movw	r6, #0
     23c:	add	r7, sp, #8
     240:	movt	r6, #0
     244:	str	r0, [r1, #4]
     248:	mov	r0, r6
     24c:	mov	r1, r7
     250:	str	r4, [sp, #8]
     254:	bl	0 <coda_expression_from_string>
     258:	ldr	r1, [sp, #8]
     25c:	mov	r0, #9
     260:	bl	0 <coda_type_time_new>
     264:	ldr	r1, [r5, r8]
     268:	str	r0, [r1, #8]
     26c:	ldr	r1, [r1, #4]
     270:	bl	0 <coda_type_time_set_base_type>
     274:	ldr	r0, [r5, r8]
     278:	movw	r1, #0
     27c:	movt	r1, #0
     280:	ldr	r0, [r0, #8]
     284:	bl	0 <coda_type_set_description>
     288:	mov	r0, #9
     28c:	mov	r1, #2
     290:	bl	0 <coda_type_number_new>
     294:	ldr	r1, [r5, r8]
     298:	str	r0, [r1, #12]
     29c:	mov	r1, #1
     2a0:	bl	0 <coda_type_number_set_endianness>
     2a4:	ldr	r0, [r5, r8]
     2a8:	mov	r1, #4
     2ac:	ldr	r0, [r0, #12]
     2b0:	bl	0 <coda_type_set_read_type>
     2b4:	ldr	r0, [r5, r8]
     2b8:	mov	r2, #32
     2bc:	mov	r3, #0
     2c0:	ldr	r0, [r0, #12]
     2c4:	bl	0 <coda_type_set_bit_size>
     2c8:	ldr	r0, [r5, r8]
     2cc:	movw	r1, #0
     2d0:	movt	r1, #0
     2d4:	ldr	r0, [r0, #12]
     2d8:	bl	0 <coda_type_set_description>
     2dc:	mov	r0, #9
     2e0:	bl	0 <coda_type_text_new>
     2e4:	ldr	r1, [r5, r8]
     2e8:	mov	r2, #5
     2ec:	mov	r3, #0
     2f0:	str	r0, [r1, #16]
     2f4:	bl	0 <coda_type_set_byte_size>
     2f8:	ldr	r0, [r5, r8]
     2fc:	movw	r1, #0
     300:	movt	r1, #0
     304:	ldr	r0, [r0, #16]
     308:	bl	0 <coda_type_set_description>
     30c:	mov	r0, #9
     310:	bl	0 <coda_type_text_new>
     314:	ldr	r1, [r5, r8]
     318:	mov	r2, #5
     31c:	mov	r3, #0
     320:	str	r0, [r1, #20]
     324:	bl	0 <coda_type_set_byte_size>
     328:	ldr	r0, [r5, r8]
     32c:	movw	r1, #0
     330:	movt	r1, #0
     334:	ldr	r0, [r0, #20]
     338:	bl	0 <coda_type_set_description>
     33c:	mov	r0, #9
     340:	bl	0 <coda_type_text_new>
     344:	ldr	r1, [r5, r8]
     348:	mov	r2, #3
     34c:	mov	r3, #0
     350:	str	r0, [r1, #24]
     354:	bl	0 <coda_type_set_byte_size>
     358:	ldr	r0, [r5, r8]
     35c:	movw	r1, #0
     360:	movt	r1, #0
     364:	ldr	r0, [r0, #24]
     368:	bl	0 <coda_type_set_description>
     36c:	mov	r0, #9
     370:	bl	0 <coda_type_text_new>
     374:	ldr	r1, [r5, r8]
     378:	mov	r2, #4
     37c:	mov	r3, #0
     380:	str	r0, [r1, #28]
     384:	bl	0 <coda_type_set_byte_size>
     388:	ldr	r0, [r5, r8]
     38c:	movw	r1, #0
     390:	movt	r1, #0
     394:	ldr	r0, [r0, #28]
     398:	bl	0 <coda_type_set_description>
     39c:	mov	r0, #9
     3a0:	mov	r1, #2
     3a4:	bl	0 <coda_type_number_new>
     3a8:	ldr	r1, [r5, r8]
     3ac:	str	r0, [r1, #32]
     3b0:	mov	r1, #1
     3b4:	bl	0 <coda_type_number_set_endianness>
     3b8:	ldr	r0, [r5, r8]
     3bc:	mov	r1, #2
     3c0:	ldr	r0, [r0, #32]
     3c4:	bl	0 <coda_type_set_read_type>
     3c8:	ldr	r0, [r5, r8]
     3cc:	mov	r2, #16
     3d0:	mov	r3, #0
     3d4:	ldr	r0, [r0, #32]
     3d8:	bl	0 <coda_type_set_bit_size>
     3dc:	ldr	r0, [r5, r8]
     3e0:	movw	r1, #0
     3e4:	movt	r1, #0
     3e8:	ldr	r0, [r0, #32]
     3ec:	bl	0 <coda_type_set_description>
     3f0:	mov	r0, #9
     3f4:	mov	r1, #3
     3f8:	bl	0 <coda_type_number_new>
     3fc:	ldr	r1, [r5, r8]
     400:	str	r0, [r1, #36]	; 0x24
     404:	mov	r1, #1
     408:	bl	0 <coda_type_number_set_endianness>
     40c:	ldr	r0, [r5, r8]
     410:	mov	r2, #64	; 0x40
     414:	mov	r3, #0
     418:	ldr	r0, [r0, #36]	; 0x24
     41c:	bl	0 <coda_type_set_bit_size>
     420:	ldr	r0, [r5, r8]
     424:	movw	r1, #0
     428:	movt	r1, #0
     42c:	ldr	r0, [r0, #36]	; 0x24
     430:	bl	0 <coda_type_set_description>
     434:	mov	r0, #9
     438:	mov	r1, #3
     43c:	bl	0 <coda_type_number_new>
     440:	ldr	r1, [r5, r8]
     444:	str	r0, [r1, #40]	; 0x28
     448:	mov	r1, #1
     44c:	bl	0 <coda_type_number_set_endianness>
     450:	ldr	r0, [r5, r8]
     454:	mov	r2, #64	; 0x40
     458:	mov	r3, #0
     45c:	ldr	r0, [r0, #40]	; 0x28
     460:	bl	0 <coda_type_set_bit_size>
     464:	ldr	r0, [r5, r8]
     468:	movw	r1, #0
     46c:	movt	r1, #0
     470:	ldr	r0, [r0, #40]	; 0x28
     474:	bl	0 <coda_type_set_description>
     478:	mov	r0, #9
     47c:	mov	r1, #2
     480:	bl	0 <coda_type_number_new>
     484:	ldr	r1, [r5, r8]
     488:	str	r0, [r1, #44]	; 0x2c
     48c:	mov	r1, #1
     490:	bl	0 <coda_type_number_set_endianness>
     494:	ldr	r0, [r5, r8]
     498:	mov	r1, #4
     49c:	ldr	r0, [r0, #44]	; 0x2c
     4a0:	bl	0 <coda_type_set_read_type>
     4a4:	ldr	r0, [r5, r8]
     4a8:	mov	r2, #32
     4ac:	mov	r3, #0
     4b0:	ldr	r0, [r0, #44]	; 0x2c
     4b4:	bl	0 <coda_type_set_bit_size>
     4b8:	ldr	r0, [r5, r8]
     4bc:	movw	r1, #0
     4c0:	movt	r1, #0
     4c4:	ldr	r0, [r0, #44]	; 0x2c
     4c8:	bl	0 <coda_type_set_description>
     4cc:	mov	r0, #9
     4d0:	mov	r1, #3
     4d4:	bl	0 <coda_type_number_new>
     4d8:	ldr	r1, [r5, r8]
     4dc:	str	r0, [r1, #48]	; 0x30
     4e0:	mov	r1, #1
     4e4:	bl	0 <coda_type_number_set_endianness>
     4e8:	ldr	r0, [r5, r8]
     4ec:	mov	r2, #64	; 0x40
     4f0:	mov	r3, #0
     4f4:	ldr	r0, [r0, #48]	; 0x30
     4f8:	bl	0 <coda_type_set_bit_size>
     4fc:	ldr	r0, [r5, r8]
     500:	movw	r1, #0
     504:	movt	r1, #0
     508:	ldr	r0, [r0, #48]	; 0x30
     50c:	bl	0 <coda_type_set_description>
     510:	mov	r0, #9
     514:	mov	r1, #2
     518:	bl	0 <coda_type_number_new>
     51c:	ldr	r1, [r5, r8]
     520:	str	r0, [r1, #52]	; 0x34
     524:	mov	r1, #1
     528:	bl	0 <coda_type_number_set_endianness>
     52c:	ldr	r0, [r5, r8]
     530:	mov	r1, #1
     534:	ldr	r0, [r0, #52]	; 0x34
     538:	bl	0 <coda_type_set_read_type>
     53c:	ldr	r0, [r5, r8]
     540:	mov	r2, #8
     544:	mov	r3, #0
     548:	ldr	r0, [r0, #52]	; 0x34
     54c:	bl	0 <coda_type_set_bit_size>
     550:	ldr	r0, [r5, r8]
     554:	movw	r1, #0
     558:	movt	r1, #0
     55c:	ldr	r0, [r0, #52]	; 0x34
     560:	bl	0 <coda_type_set_description>
     564:	mov	r0, #9
     568:	bl	0 <coda_type_text_new>
     56c:	ldr	r1, [r5, r8]
     570:	mov	r2, #3
     574:	mov	r3, #0
     578:	str	r0, [r1, #56]	; 0x38
     57c:	bl	0 <coda_type_set_byte_size>
     580:	ldr	r0, [r5, r8]
     584:	movw	r1, #0
     588:	movt	r1, #0
     58c:	ldr	r0, [r0, #56]	; 0x38
     590:	bl	0 <coda_type_set_description>
     594:	mov	r0, #9
     598:	mov	r1, #2
     59c:	bl	0 <coda_type_number_new>
     5a0:	ldr	r1, [r5, r8]
     5a4:	str	r0, [r1, #64]	; 0x40
     5a8:	mov	r1, #1
     5ac:	bl	0 <coda_type_number_set_endianness>
     5b0:	ldr	r0, [r5, r8]
     5b4:	mov	r1, #2
     5b8:	ldr	r0, [r0, #64]	; 0x40
     5bc:	bl	0 <coda_type_set_read_type>
     5c0:	ldr	r0, [r5, r8]
     5c4:	mov	r2, #16
     5c8:	mov	r3, #0
     5cc:	ldr	r0, [r0, #64]	; 0x40
     5d0:	bl	0 <coda_type_set_bit_size>
     5d4:	ldr	r0, [r5, r8]
     5d8:	movw	r1, #0
     5dc:	movt	r1, #0
     5e0:	ldr	r0, [r0, #64]	; 0x40
     5e4:	bl	0 <coda_type_set_description>
     5e8:	mov	r0, #9
     5ec:	bl	0 <coda_type_text_new>
     5f0:	ldr	r1, [r5, r8]
     5f4:	mov	r2, #2
     5f8:	mov	r3, #0
     5fc:	str	r0, [r1, #72]	; 0x48
     600:	bl	0 <coda_type_set_byte_size>
     604:	ldr	r0, [r5, r8]
     608:	movw	r1, #0
     60c:	movt	r1, #0
     610:	ldr	r0, [r0, #72]	; 0x48
     614:	bl	0 <coda_type_set_description>
     618:	mov	r0, #9
     61c:	bl	0 <coda_type_text_new>
     620:	ldr	r1, [r5, r8]
     624:	mov	r2, #3
     628:	mov	r3, #0
     62c:	str	r0, [r1, #76]	; 0x4c
     630:	bl	0 <coda_type_set_byte_size>
     634:	ldr	r0, [r5, r8]
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	ldr	r0, [r0, #76]	; 0x4c
     644:	bl	0 <coda_type_set_description>
     648:	mov	r0, #9
     64c:	mov	r1, #3
     650:	bl	0 <coda_type_number_new>
     654:	ldr	r1, [r5, r8]
     658:	str	r0, [r1, #80]	; 0x50
     65c:	mov	r1, #1
     660:	bl	0 <coda_type_number_set_endianness>
     664:	ldr	r0, [r5, r8]
     668:	mov	r2, #64	; 0x40
     66c:	mov	r3, #0
     670:	ldr	r0, [r0, #80]	; 0x50
     674:	bl	0 <coda_type_set_bit_size>
     678:	ldr	r0, [r5, r8]
     67c:	movw	r1, #0
     680:	movt	r1, #0
     684:	ldr	r0, [r0, #80]	; 0x50
     688:	bl	0 <coda_type_set_description>
     68c:	mov	r0, #9
     690:	mov	r1, #3
     694:	bl	0 <coda_type_number_new>
     698:	ldr	r1, [r5, r8]
     69c:	str	r0, [r1, #84]	; 0x54
     6a0:	mov	r1, #1
     6a4:	bl	0 <coda_type_number_set_endianness>
     6a8:	ldr	r0, [r5, r8]
     6ac:	mov	r2, #64	; 0x40
     6b0:	mov	r3, #0
     6b4:	ldr	r0, [r0, #84]	; 0x54
     6b8:	bl	0 <coda_type_set_bit_size>
     6bc:	ldr	r0, [r5, r8]
     6c0:	movw	r1, #0
     6c4:	movt	r1, #0
     6c8:	ldr	r0, [r0, #84]	; 0x54
     6cc:	bl	0 <coda_type_set_description>
     6d0:	mov	r0, #9
     6d4:	bl	0 <coda_type_text_new>
     6d8:	ldr	r1, [r5, r8]
     6dc:	str	r0, [r1, #260]	; 0x104
     6e0:	mov	r0, r6
     6e4:	mov	r1, r7
     6e8:	str	r4, [sp, #8]
     6ec:	bl	0 <coda_expression_from_string>
     6f0:	ldr	r1, [sp, #8]
     6f4:	mov	r0, #9
     6f8:	bl	0 <coda_type_time_new>
     6fc:	ldr	r1, [r5, r8]
     700:	str	r0, [r1, #264]	; 0x108
     704:	ldr	r1, [r1, #260]	; 0x104
     708:	bl	0 <coda_type_time_set_base_type>
     70c:	ldr	r0, [r5, r8]
     710:	movw	r1, #0
     714:	movt	r1, #0
     718:	ldr	r0, [r0, #264]	; 0x108
     71c:	bl	0 <coda_type_set_description>
     720:	mov	r0, #9
     724:	bl	0 <coda_type_text_new>
     728:	ldr	r1, [r5, r8]
     72c:	mov	r2, #3
     730:	mov	r3, #0
     734:	str	r0, [r1, #88]	; 0x58
     738:	bl	0 <coda_type_set_byte_size>
     73c:	ldr	r0, [r5, r8]
     740:	movw	r1, #0
     744:	movt	r1, #0
     748:	ldr	r0, [r0, #88]	; 0x58
     74c:	bl	0 <coda_type_set_description>
     750:	mov	r0, #9
     754:	mov	r1, #3
     758:	bl	0 <coda_type_number_new>
     75c:	ldr	r1, [r5, r8]
     760:	str	r0, [r1, #92]	; 0x5c
     764:	mov	r1, #1
     768:	bl	0 <coda_type_number_set_endianness>
     76c:	ldr	r0, [r5, r8]
     770:	mov	r2, #64	; 0x40
     774:	mov	r3, #0
     778:	ldr	r0, [r0, #92]	; 0x5c
     77c:	bl	0 <coda_type_set_bit_size>
     780:	ldr	r0, [r5, r8]
     784:	movw	r1, #0
     788:	movt	r1, #0
     78c:	ldr	r0, [r0, #92]	; 0x5c
     790:	bl	0 <coda_type_set_description>
     794:	ldr	r0, [r5, r8]
     798:	movw	r4, #0
     79c:	movt	r4, #0
     7a0:	mov	r1, r4
     7a4:	ldr	r0, [r0, #92]	; 0x5c
     7a8:	bl	0 <coda_type_number_set_unit>
     7ac:	mov	r0, #9
     7b0:	mov	r1, #3
     7b4:	bl	0 <coda_type_number_new>
     7b8:	ldr	r1, [r5, r8]
     7bc:	str	r0, [r1, #96]	; 0x60
     7c0:	mov	r1, #1
     7c4:	bl	0 <coda_type_number_set_endianness>
     7c8:	ldr	r0, [r5, r8]
     7cc:	mov	r2, #64	; 0x40
     7d0:	mov	r3, #0
     7d4:	ldr	r0, [r0, #96]	; 0x60
     7d8:	bl	0 <coda_type_set_bit_size>
     7dc:	ldr	r0, [r5, r8]
     7e0:	movw	r1, #0
     7e4:	movt	r1, #0
     7e8:	ldr	r0, [r0, #96]	; 0x60
     7ec:	bl	0 <coda_type_set_description>
     7f0:	ldr	r0, [r5, r8]
     7f4:	mov	r1, r4
     7f8:	ldr	r0, [r0, #96]	; 0x60
     7fc:	bl	0 <coda_type_number_set_unit>
     800:	mov	r0, #9
     804:	mov	r1, #3
     808:	bl	0 <coda_type_number_new>
     80c:	ldr	r1, [r5, r8]
     810:	str	r0, [r1, #100]	; 0x64
     814:	mov	r1, #1
     818:	bl	0 <coda_type_number_set_endianness>
     81c:	ldr	r0, [r5, r8]
     820:	mov	r2, #64	; 0x40
     824:	mov	r3, #0
     828:	ldr	r0, [r0, #100]	; 0x64
     82c:	bl	0 <coda_type_set_bit_size>
     830:	ldr	r0, [r5, r8]
     834:	movw	r1, #0
     838:	movt	r1, #0
     83c:	ldr	r0, [r0, #100]	; 0x64
     840:	bl	0 <coda_type_set_description>
     844:	ldr	r0, [r5, r8]
     848:	mov	r1, r4
     84c:	ldr	r0, [r0, #100]	; 0x64
     850:	bl	0 <coda_type_number_set_unit>
     854:	mov	r0, #9
     858:	mov	r1, #3
     85c:	bl	0 <coda_type_number_new>
     860:	ldr	r1, [r5, r8]
     864:	str	r0, [r1, #104]	; 0x68
     868:	mov	r1, #1
     86c:	bl	0 <coda_type_number_set_endianness>
     870:	ldr	r0, [r5, r8]
     874:	mov	r2, #64	; 0x40
     878:	mov	r3, #0
     87c:	ldr	r0, [r0, #104]	; 0x68
     880:	bl	0 <coda_type_set_bit_size>
     884:	ldr	r0, [r5, r8]
     888:	movw	r1, #0
     88c:	movt	r1, #0
     890:	ldr	r0, [r0, #104]	; 0x68
     894:	bl	0 <coda_type_set_description>
     898:	ldr	r0, [r5, r8]
     89c:	movw	r1, #0
     8a0:	movt	r1, #0
     8a4:	ldr	r0, [r0, #104]	; 0x68
     8a8:	bl	0 <coda_type_number_set_unit>
     8ac:	mov	r0, #9
     8b0:	mov	r1, #2
     8b4:	bl	0 <coda_type_number_new>
     8b8:	ldr	r1, [r5, r8]
     8bc:	str	r0, [r1, #108]	; 0x6c
     8c0:	mov	r1, #1
     8c4:	bl	0 <coda_type_number_set_endianness>
     8c8:	ldr	r0, [r5, r8]
     8cc:	mov	r1, #0
     8d0:	ldr	r0, [r0, #108]	; 0x6c
     8d4:	bl	0 <coda_type_set_read_type>
     8d8:	ldr	r0, [r5, r8]
     8dc:	mov	r2, #8
     8e0:	mov	r3, #0
     8e4:	ldr	r0, [r0, #108]	; 0x6c
     8e8:	bl	0 <coda_type_set_bit_size>
     8ec:	ldr	r0, [r5, r8]
     8f0:	movw	r1, #0
     8f4:	movt	r1, #0
     8f8:	ldr	r0, [r0, #108]	; 0x6c
     8fc:	bl	0 <coda_type_set_description>
     900:	mov	r0, #9
     904:	mov	r1, #2
     908:	bl	0 <coda_type_number_new>
     90c:	ldr	r1, [r5, r8]
     910:	str	r0, [r1, #112]	; 0x70
     914:	mov	r1, #1
     918:	bl	0 <coda_type_number_set_endianness>
     91c:	ldr	r0, [r5, r8]
     920:	mov	r1, #0
     924:	ldr	r0, [r0, #112]	; 0x70
     928:	bl	0 <coda_type_set_read_type>
     92c:	ldr	r0, [r5, r8]
     930:	mov	r2, #8
     934:	mov	r3, #0
     938:	ldr	r0, [r0, #112]	; 0x70
     93c:	bl	0 <coda_type_set_bit_size>
     940:	ldr	r0, [r5, r8]
     944:	movw	r1, #0
     948:	movt	r1, #0
     94c:	ldr	r0, [r0, #112]	; 0x70
     950:	bl	0 <coda_type_set_description>
     954:	mov	r0, #9
     958:	mov	r1, #2
     95c:	bl	0 <coda_type_number_new>
     960:	ldr	r1, [r5, r8]
     964:	str	r0, [r1, #116]	; 0x74
     968:	mov	r1, #1
     96c:	bl	0 <coda_type_number_set_endianness>
     970:	ldr	r0, [r5, r8]
     974:	mov	r1, #0
     978:	ldr	r0, [r0, #116]	; 0x74
     97c:	bl	0 <coda_type_set_read_type>
     980:	ldr	r0, [r5, r8]
     984:	mov	r2, #8
     988:	mov	r3, #0
     98c:	ldr	r0, [r0, #116]	; 0x74
     990:	bl	0 <coda_type_set_bit_size>
     994:	ldr	r0, [r5, r8]
     998:	movw	r1, #0
     99c:	movt	r1, #0
     9a0:	ldr	r0, [r0, #116]	; 0x74
     9a4:	bl	0 <coda_type_set_description>
     9a8:	mov	r0, #9
     9ac:	mov	r1, #2
     9b0:	bl	0 <coda_type_number_new>
     9b4:	ldr	r1, [r5, r8]
     9b8:	str	r0, [r1, #120]	; 0x78
     9bc:	mov	r1, #1
     9c0:	bl	0 <coda_type_number_set_endianness>
     9c4:	ldr	r0, [r5, r8]
     9c8:	mov	r1, #2
     9cc:	ldr	r0, [r0, #120]	; 0x78
     9d0:	bl	0 <coda_type_set_read_type>
     9d4:	ldr	r0, [r5, r8]
     9d8:	mov	r2, #16
     9dc:	mov	r3, #0
     9e0:	ldr	r0, [r0, #120]	; 0x78
     9e4:	bl	0 <coda_type_set_bit_size>
     9e8:	ldr	r0, [r5, r8]
     9ec:	movw	r1, #0
     9f0:	movt	r1, #0
     9f4:	ldr	r0, [r0, #120]	; 0x78
     9f8:	bl	0 <coda_type_set_description>
     9fc:	mov	r0, #9
     a00:	bl	0 <coda_type_text_new>
     a04:	ldr	r1, [r5, r8]
     a08:	mov	r2, #1
     a0c:	mov	r3, #0
     a10:	str	r0, [r1, #124]	; 0x7c
     a14:	bl	0 <coda_type_set_byte_size>
     a18:	ldr	r0, [r5, r8]
     a1c:	movw	r1, #0
     a20:	movt	r1, #0
     a24:	ldr	r0, [r0, #124]	; 0x7c
     a28:	bl	0 <coda_type_set_description>
     a2c:	mov	r0, #9
     a30:	bl	0 <coda_type_text_new>
     a34:	ldr	r1, [r5, r8]
     a38:	mov	r2, #1
     a3c:	mov	r3, #0
     a40:	str	r0, [r1, #128]	; 0x80
     a44:	bl	0 <coda_type_set_byte_size>
     a48:	ldr	r0, [r5, r8]
     a4c:	movw	r1, #0
     a50:	movt	r1, #0
     a54:	ldr	r0, [r0, #128]	; 0x80
     a58:	bl	0 <coda_type_set_description>
     a5c:	mov	r0, #9
     a60:	bl	0 <coda_type_text_new>
     a64:	ldr	r1, [r5, r8]
     a68:	mov	r2, #1
     a6c:	mov	r3, #0
     a70:	str	r0, [r1, #132]	; 0x84
     a74:	bl	0 <coda_type_set_byte_size>
     a78:	ldr	r0, [r5, r8]
     a7c:	movw	r1, #0
     a80:	movt	r1, #0
     a84:	ldr	r0, [r0, #132]	; 0x84
     a88:	bl	0 <coda_type_set_description>
     a8c:	mov	r0, #9
     a90:	bl	0 <coda_type_text_new>
     a94:	ldr	r1, [r5, r8]
     a98:	mov	r2, #1
     a9c:	mov	r3, #0
     aa0:	str	r0, [r1, #136]	; 0x88
     aa4:	bl	0 <coda_type_set_byte_size>
     aa8:	ldr	r0, [r5, r8]
     aac:	movw	r1, #0
     ab0:	movt	r1, #0
     ab4:	ldr	r0, [r0, #136]	; 0x88
     ab8:	bl	0 <coda_type_set_description>
     abc:	mov	r0, #9
     ac0:	mov	r1, #2
     ac4:	bl	0 <coda_type_number_new>
     ac8:	ldr	r1, [r5, r8]
     acc:	str	r0, [r1, #144]	; 0x90
     ad0:	mov	r1, #1
     ad4:	bl	0 <coda_type_number_set_endianness>
     ad8:	ldr	r0, [r5, r8]
     adc:	mov	r1, #2
     ae0:	ldr	r0, [r0, #144]	; 0x90
     ae4:	bl	0 <coda_type_set_read_type>
     ae8:	ldr	r0, [r5, r8]
     aec:	mov	r2, #16
     af0:	mov	r3, #0
     af4:	ldr	r0, [r0, #144]	; 0x90
     af8:	bl	0 <coda_type_set_bit_size>
     afc:	ldr	r0, [r5, r8]
     b00:	movw	r1, #0
     b04:	movt	r1, #0
     b08:	ldr	r0, [r0, #144]	; 0x90
     b0c:	bl	0 <coda_type_set_description>
     b10:	ldr	r0, [r5, r8]
     b14:	movw	r4, #0
     b18:	movt	r4, #0
     b1c:	mov	r1, r4
     b20:	ldr	r0, [r0, #144]	; 0x90
     b24:	bl	0 <coda_type_number_set_unit>
     b28:	mov	r0, #9
     b2c:	mov	r1, #2
     b30:	bl	0 <coda_type_number_new>
     b34:	ldr	r1, [r5, r8]
     b38:	str	r0, [r1, #148]	; 0x94
     b3c:	mov	r1, #1
     b40:	bl	0 <coda_type_number_set_endianness>
     b44:	ldr	r0, [r5, r8]
     b48:	mov	r1, #2
     b4c:	ldr	r0, [r0, #148]	; 0x94
     b50:	bl	0 <coda_type_set_read_type>
     b54:	ldr	r0, [r5, r8]
     b58:	mov	r2, #16
     b5c:	mov	r3, #0
     b60:	ldr	r0, [r0, #148]	; 0x94
     b64:	bl	0 <coda_type_set_bit_size>
     b68:	ldr	r0, [r5, r8]
     b6c:	movw	r1, #0
     b70:	movt	r1, #0
     b74:	ldr	r0, [r0, #148]	; 0x94
     b78:	bl	0 <coda_type_set_description>
     b7c:	ldr	r0, [r5, r8]
     b80:	mov	r1, r4
     b84:	ldr	r0, [r0, #148]	; 0x94
     b88:	bl	0 <coda_type_number_set_unit>
     b8c:	mov	r0, #9
     b90:	mov	r1, #2
     b94:	bl	0 <coda_type_number_new>
     b98:	ldr	r1, [r5, r8]
     b9c:	str	r0, [r1, #152]	; 0x98
     ba0:	mov	r1, #1
     ba4:	bl	0 <coda_type_number_set_endianness>
     ba8:	ldr	r0, [r5, r8]
     bac:	mov	r1, #2
     bb0:	ldr	r0, [r0, #152]	; 0x98
     bb4:	bl	0 <coda_type_set_read_type>
     bb8:	ldr	r0, [r5, r8]
     bbc:	mov	r2, #16
     bc0:	mov	r3, #0
     bc4:	ldr	r0, [r0, #152]	; 0x98
     bc8:	bl	0 <coda_type_set_bit_size>
     bcc:	ldr	r0, [r5, r8]
     bd0:	movw	r1, #0
     bd4:	movt	r1, #0
     bd8:	ldr	r0, [r0, #152]	; 0x98
     bdc:	bl	0 <coda_type_set_description>
     be0:	ldr	r0, [r5, r8]
     be4:	mov	r1, r4
     be8:	ldr	r0, [r0, #152]	; 0x98
     bec:	bl	0 <coda_type_number_set_unit>
     bf0:	mov	r0, #9
     bf4:	mov	r1, #2
     bf8:	bl	0 <coda_type_number_new>
     bfc:	ldr	r1, [r5, r8]
     c00:	str	r0, [r1, #156]	; 0x9c
     c04:	mov	r1, #1
     c08:	bl	0 <coda_type_number_set_endianness>
     c0c:	ldr	r0, [r5, r8]
     c10:	mov	r1, #4
     c14:	ldr	r0, [r0, #156]	; 0x9c
     c18:	bl	0 <coda_type_set_read_type>
     c1c:	ldr	r0, [r5, r8]
     c20:	mov	r2, #32
     c24:	mov	r3, #0
     c28:	ldr	r0, [r0, #156]	; 0x9c
     c2c:	bl	0 <coda_type_set_bit_size>
     c30:	ldr	r0, [r5, r8]
     c34:	movw	r1, #0
     c38:	movt	r1, #0
     c3c:	ldr	r0, [r0, #156]	; 0x9c
     c40:	bl	0 <coda_type_set_description>
     c44:	ldr	r0, [r5, r8]
     c48:	movw	r1, #0
     c4c:	movt	r1, #0
     c50:	ldr	r0, [r0, #156]	; 0x9c
     c54:	bl	0 <coda_type_number_set_unit>
     c58:	mov	r0, #9
     c5c:	mov	r1, #2
     c60:	bl	0 <coda_type_number_new>
     c64:	ldr	r1, [r5, r8]
     c68:	str	r0, [r1, #160]	; 0xa0
     c6c:	mov	r1, #1
     c70:	bl	0 <coda_type_number_set_endianness>
     c74:	ldr	r0, [r5, r8]
     c78:	mov	r1, #4
     c7c:	ldr	r0, [r0, #160]	; 0xa0
     c80:	bl	0 <coda_type_set_read_type>
     c84:	ldr	r0, [r5, r8]
     c88:	mov	r2, #32
     c8c:	mov	r3, #0
     c90:	ldr	r0, [r0, #160]	; 0xa0
     c94:	bl	0 <coda_type_set_bit_size>
     c98:	ldr	r0, [r5, r8]
     c9c:	movw	r1, #0
     ca0:	movt	r1, #0
     ca4:	ldr	r0, [r0, #160]	; 0xa0
     ca8:	bl	0 <coda_type_set_description>
     cac:	mov	r0, #9
     cb0:	mov	r1, #2
     cb4:	bl	0 <coda_type_number_new>
     cb8:	ldr	r1, [r5, r8]
     cbc:	str	r0, [r1, #164]	; 0xa4
     cc0:	mov	r1, #1
     cc4:	bl	0 <coda_type_number_set_endianness>
     cc8:	ldr	r0, [r5, r8]
     ccc:	mov	r1, #4
     cd0:	ldr	r0, [r0, #164]	; 0xa4
     cd4:	bl	0 <coda_type_set_read_type>
     cd8:	ldr	r0, [r5, r8]
     cdc:	mov	r2, #32
     ce0:	mov	r3, #0
     ce4:	ldr	r0, [r0, #164]	; 0xa4
     ce8:	bl	0 <coda_type_set_bit_size>
     cec:	ldr	r0, [r5, r8]
     cf0:	movw	r1, #0
     cf4:	movt	r1, #0
     cf8:	ldr	r0, [r0, #164]	; 0xa4
     cfc:	bl	0 <coda_type_set_description>
     d00:	mov	r0, #9
     d04:	mov	r1, #2
     d08:	bl	0 <coda_type_number_new>
     d0c:	ldr	r1, [r5, r8]
     d10:	str	r0, [r1, #168]	; 0xa8
     d14:	mov	r1, #1
     d18:	bl	0 <coda_type_number_set_endianness>
     d1c:	ldr	r0, [r5, r8]
     d20:	mov	r1, #4
     d24:	ldr	r0, [r0, #168]	; 0xa8
     d28:	bl	0 <coda_type_set_read_type>
     d2c:	ldr	r0, [r5, r8]
     d30:	mov	r2, #32
     d34:	mov	r3, #0
     d38:	ldr	r0, [r0, #168]	; 0xa8
     d3c:	bl	0 <coda_type_set_bit_size>
     d40:	ldr	r0, [r5, r8]
     d44:	movw	r1, #0
     d48:	movt	r1, #0
     d4c:	ldr	r0, [r0, #168]	; 0xa8
     d50:	bl	0 <coda_type_set_description>
     d54:	mov	r0, #9
     d58:	mov	r1, #2
     d5c:	bl	0 <coda_type_number_new>
     d60:	ldr	r1, [r5, r8]
     d64:	str	r0, [r1, #172]	; 0xac
     d68:	mov	r1, #1
     d6c:	bl	0 <coda_type_number_set_endianness>
     d70:	ldr	r0, [r5, r8]
     d74:	mov	r1, #4
     d78:	ldr	r0, [r0, #172]	; 0xac
     d7c:	bl	0 <coda_type_set_read_type>
     d80:	ldr	r0, [r5, r8]
     d84:	mov	r2, #32
     d88:	mov	r3, #0
     d8c:	ldr	r0, [r0, #172]	; 0xac
     d90:	bl	0 <coda_type_set_bit_size>
     d94:	ldr	r0, [r5, r8]
     d98:	movw	r6, #0
     d9c:	movt	r6, #0
     da0:	mov	r1, r6
     da4:	ldr	r0, [r0, #172]	; 0xac
     da8:	bl	0 <coda_type_set_description>
     dac:	mov	r0, #9
     db0:	mov	r1, #2
     db4:	bl	0 <coda_type_number_new>
     db8:	ldr	r1, [r5, r8]
     dbc:	str	r0, [r1, #176]	; 0xb0
     dc0:	mov	r1, #1
     dc4:	bl	0 <coda_type_number_set_endianness>
     dc8:	ldr	r0, [r5, r8]
     dcc:	mov	r1, #4
     dd0:	ldr	r0, [r0, #176]	; 0xb0
     dd4:	bl	0 <coda_type_set_read_type>
     dd8:	ldr	r0, [r5, r8]
     ddc:	mov	r2, #32
     de0:	mov	r3, #0
     de4:	ldr	r0, [r0, #176]	; 0xb0
     de8:	bl	0 <coda_type_set_bit_size>
     dec:	ldr	r0, [r5, r8]
     df0:	movw	r4, #0
     df4:	movt	r4, #0
     df8:	mov	r1, r4
     dfc:	ldr	r0, [r0, #176]	; 0xb0
     e00:	bl	0 <coda_type_set_description>
     e04:	mov	r0, #9
     e08:	mov	r1, #2
     e0c:	bl	0 <coda_type_number_new>
     e10:	ldr	r1, [r5, r8]
     e14:	str	r0, [r1, #180]	; 0xb4
     e18:	mov	r1, #1
     e1c:	bl	0 <coda_type_number_set_endianness>
     e20:	ldr	r0, [r5, r8]
     e24:	mov	r1, #4
     e28:	ldr	r0, [r0, #180]	; 0xb4
     e2c:	bl	0 <coda_type_set_read_type>
     e30:	ldr	r0, [r5, r8]
     e34:	mov	r2, #32
     e38:	mov	r3, #0
     e3c:	ldr	r0, [r0, #180]	; 0xb4
     e40:	bl	0 <coda_type_set_bit_size>
     e44:	ldr	r0, [r5, r8]
     e48:	movw	r9, #0
     e4c:	movt	r9, #0
     e50:	mov	r1, r9
     e54:	ldr	r0, [r0, #180]	; 0xb4
     e58:	bl	0 <coda_type_set_description>
     e5c:	mov	r0, #9
     e60:	mov	r1, #3
     e64:	bl	0 <coda_type_number_new>
     e68:	ldr	r1, [r5, r8]
     e6c:	str	r0, [r1, #184]	; 0xb8
     e70:	mov	r1, #1
     e74:	bl	0 <coda_type_number_set_endianness>
     e78:	ldr	r0, [r5, r8]
     e7c:	mov	r2, #64	; 0x40
     e80:	mov	r3, #0
     e84:	ldr	r0, [r0, #184]	; 0xb8
     e88:	bl	0 <coda_type_set_bit_size>
     e8c:	ldr	r0, [r5, r8]
     e90:	movw	r1, #0
     e94:	movt	r1, #0
     e98:	ldr	r0, [r0, #184]	; 0xb8
     e9c:	bl	0 <coda_type_set_description>
     ea0:	ldr	r0, [r5, r8]
     ea4:	movw	r7, #0
     ea8:	movt	r7, #0
     eac:	mov	r1, r7
     eb0:	ldr	r0, [r0, #184]	; 0xb8
     eb4:	bl	0 <coda_type_number_set_unit>
     eb8:	mov	r0, #9
     ebc:	mov	r1, #3
     ec0:	bl	0 <coda_type_number_new>
     ec4:	ldr	r1, [r5, r8]
     ec8:	str	r0, [r1, #188]	; 0xbc
     ecc:	mov	r1, #1
     ed0:	bl	0 <coda_type_number_set_endianness>
     ed4:	ldr	r0, [r5, r8]
     ed8:	mov	r2, #64	; 0x40
     edc:	mov	r3, #0
     ee0:	ldr	r0, [r0, #188]	; 0xbc
     ee4:	bl	0 <coda_type_set_bit_size>
     ee8:	ldr	r0, [r5, r8]
     eec:	movw	r1, #0
     ef0:	movt	r1, #0
     ef4:	ldr	r0, [r0, #188]	; 0xbc
     ef8:	bl	0 <coda_type_set_description>
     efc:	ldr	r0, [r5, r8]
     f00:	mov	r1, r7
     f04:	ldr	r0, [r0, #188]	; 0xbc
     f08:	bl	0 <coda_type_number_set_unit>
     f0c:	mov	r0, #9
     f10:	mov	r1, #3
     f14:	bl	0 <coda_type_number_new>
     f18:	ldr	r1, [r5, r8]
     f1c:	str	r0, [r1, #192]	; 0xc0
     f20:	mov	r1, #1
     f24:	bl	0 <coda_type_number_set_endianness>
     f28:	ldr	r0, [r5, r8]
     f2c:	mov	r2, #64	; 0x40
     f30:	mov	r3, #0
     f34:	ldr	r0, [r0, #192]	; 0xc0
     f38:	bl	0 <coda_type_set_bit_size>
     f3c:	ldr	r0, [r5, r8]
     f40:	movw	r1, #0
     f44:	movt	r1, #0
     f48:	ldr	r0, [r0, #192]	; 0xc0
     f4c:	bl	0 <coda_type_set_description>
     f50:	ldr	r0, [r5, r8]
     f54:	mov	r1, r7
     f58:	ldr	r0, [r0, #192]	; 0xc0
     f5c:	bl	0 <coda_type_number_set_unit>
     f60:	mov	r0, #9
     f64:	mov	r1, #3
     f68:	bl	0 <coda_type_number_new>
     f6c:	ldr	r1, [r5, r8]
     f70:	str	r0, [r1, #196]	; 0xc4
     f74:	mov	r1, #1
     f78:	bl	0 <coda_type_number_set_endianness>
     f7c:	ldr	r0, [r5, r8]
     f80:	mov	r2, #64	; 0x40
     f84:	mov	r3, #0
     f88:	ldr	r0, [r0, #196]	; 0xc4
     f8c:	bl	0 <coda_type_set_bit_size>
     f90:	ldr	r0, [r5, r8]
     f94:	movw	r1, #0
     f98:	movt	r1, #0
     f9c:	ldr	r0, [r0, #196]	; 0xc4
     fa0:	bl	0 <coda_type_set_description>
     fa4:	ldr	r0, [r5, r8]
     fa8:	movw	r1, #0
     fac:	movt	r1, #0
     fb0:	ldr	r0, [r0, #196]	; 0xc4
     fb4:	bl	0 <coda_type_number_set_unit>
     fb8:	mov	r0, #9
     fbc:	mov	r1, #2
     fc0:	bl	0 <coda_type_number_new>
     fc4:	ldr	r1, [r5, r8]
     fc8:	str	r0, [r1, #200]	; 0xc8
     fcc:	mov	r1, #1
     fd0:	bl	0 <coda_type_number_set_endianness>
     fd4:	ldr	r0, [r5, r8]
     fd8:	mov	r1, #0
     fdc:	ldr	r0, [r0, #200]	; 0xc8
     fe0:	bl	0 <coda_type_set_read_type>
     fe4:	ldr	r0, [r5, r8]
     fe8:	mov	r2, #8
     fec:	mov	r3, #0
     ff0:	ldr	r0, [r0, #200]	; 0xc8
     ff4:	bl	0 <coda_type_set_bit_size>
     ff8:	ldr	r0, [r5, r8]
     ffc:	movw	r1, #0
    1000:	movt	r1, #0
    1004:	ldr	r0, [r0, #200]	; 0xc8
    1008:	bl	0 <coda_type_set_description>
    100c:	mov	r0, #9
    1010:	mov	r1, #2
    1014:	bl	0 <coda_type_number_new>
    1018:	ldr	r1, [r5, r8]
    101c:	str	r0, [r1, #204]	; 0xcc
    1020:	mov	r1, #1
    1024:	bl	0 <coda_type_number_set_endianness>
    1028:	ldr	r0, [r5, r8]
    102c:	mov	r1, #0
    1030:	ldr	r0, [r0, #204]	; 0xcc
    1034:	bl	0 <coda_type_set_read_type>
    1038:	ldr	r0, [r5, r8]
    103c:	mov	r2, #8
    1040:	mov	r3, #0
    1044:	ldr	r0, [r0, #204]	; 0xcc
    1048:	bl	0 <coda_type_set_bit_size>
    104c:	ldr	r0, [r5, r8]
    1050:	movw	r1, #0
    1054:	movt	r1, #0
    1058:	ldr	r0, [r0, #204]	; 0xcc
    105c:	bl	0 <coda_type_set_description>
    1060:	mov	r0, #9
    1064:	mov	r1, #2
    1068:	bl	0 <coda_type_number_new>
    106c:	ldr	r1, [r5, r8]
    1070:	str	r0, [r1, #208]	; 0xd0
    1074:	mov	r1, #1
    1078:	bl	0 <coda_type_number_set_endianness>
    107c:	ldr	r0, [r5, r8]
    1080:	mov	r1, #0
    1084:	ldr	r0, [r0, #208]	; 0xd0
    1088:	bl	0 <coda_type_set_read_type>
    108c:	ldr	r0, [r5, r8]
    1090:	mov	r2, #8
    1094:	mov	r3, #0
    1098:	ldr	r0, [r0, #208]	; 0xd0
    109c:	bl	0 <coda_type_set_bit_size>
    10a0:	ldr	r0, [r5, r8]
    10a4:	movw	r1, #0
    10a8:	movt	r1, #0
    10ac:	ldr	r0, [r0, #208]	; 0xd0
    10b0:	bl	0 <coda_type_set_description>
    10b4:	mov	r0, #9
    10b8:	mov	r1, #2
    10bc:	bl	0 <coda_type_number_new>
    10c0:	ldr	r1, [r5, r8]
    10c4:	str	r0, [r1, #212]	; 0xd4
    10c8:	mov	r1, #1
    10cc:	bl	0 <coda_type_number_set_endianness>
    10d0:	ldr	r0, [r5, r8]
    10d4:	mov	r1, #2
    10d8:	ldr	r0, [r0, #212]	; 0xd4
    10dc:	bl	0 <coda_type_set_read_type>
    10e0:	ldr	r0, [r5, r8]
    10e4:	mov	r2, #16
    10e8:	mov	r3, #0
    10ec:	ldr	r0, [r0, #212]	; 0xd4
    10f0:	bl	0 <coda_type_set_bit_size>
    10f4:	ldr	r0, [r5, r8]
    10f8:	movw	r1, #0
    10fc:	movt	r1, #0
    1100:	ldr	r0, [r0, #212]	; 0xd4
    1104:	bl	0 <coda_type_set_description>
    1108:	mov	r0, #9
    110c:	mov	r1, #2
    1110:	bl	0 <coda_type_number_new>
    1114:	ldr	r1, [r5, r8]
    1118:	str	r0, [r1, #220]	; 0xdc
    111c:	mov	r1, #1
    1120:	bl	0 <coda_type_number_set_endianness>
    1124:	ldr	r0, [r5, r8]
    1128:	mov	r1, #2
    112c:	ldr	r0, [r0, #220]	; 0xdc
    1130:	bl	0 <coda_type_set_read_type>
    1134:	ldr	r0, [r5, r8]
    1138:	mov	r2, #16
    113c:	mov	r3, #0
    1140:	ldr	r0, [r0, #220]	; 0xdc
    1144:	bl	0 <coda_type_set_bit_size>
    1148:	ldr	r0, [r5, r8]
    114c:	movw	r1, #0
    1150:	movt	r1, #0
    1154:	ldr	r0, [r0, #220]	; 0xdc
    1158:	bl	0 <coda_type_set_description>
    115c:	ldr	r0, [r5, r8]
    1160:	movw	sl, #0
    1164:	movt	sl, #0
    1168:	mov	r1, sl
    116c:	ldr	r0, [r0, #220]	; 0xdc
    1170:	bl	0 <coda_type_number_set_unit>
    1174:	mov	r0, #9
    1178:	mov	r1, #2
    117c:	bl	0 <coda_type_number_new>
    1180:	ldr	r1, [r5, r8]
    1184:	str	r0, [r1, #224]	; 0xe0
    1188:	mov	r1, #1
    118c:	bl	0 <coda_type_number_set_endianness>
    1190:	ldr	r0, [r5, r8]
    1194:	mov	r1, #2
    1198:	ldr	r0, [r0, #224]	; 0xe0
    119c:	bl	0 <coda_type_set_read_type>
    11a0:	ldr	r0, [r5, r8]
    11a4:	mov	r2, #16
    11a8:	mov	r3, #0
    11ac:	ldr	r0, [r0, #224]	; 0xe0
    11b0:	bl	0 <coda_type_set_bit_size>
    11b4:	ldr	r0, [r5, r8]
    11b8:	movw	r1, #0
    11bc:	movt	r1, #0
    11c0:	ldr	r0, [r0, #224]	; 0xe0
    11c4:	bl	0 <coda_type_set_description>
    11c8:	ldr	r0, [r5, r8]
    11cc:	mov	r1, sl
    11d0:	ldr	r0, [r0, #224]	; 0xe0
    11d4:	bl	0 <coda_type_number_set_unit>
    11d8:	mov	r0, #9
    11dc:	mov	r1, #2
    11e0:	bl	0 <coda_type_number_new>
    11e4:	ldr	r1, [r5, r8]
    11e8:	str	r0, [r1, #228]	; 0xe4
    11ec:	mov	r1, #1
    11f0:	bl	0 <coda_type_number_set_endianness>
    11f4:	ldr	r0, [r5, r8]
    11f8:	mov	r1, #2
    11fc:	ldr	r0, [r0, #228]	; 0xe4
    1200:	bl	0 <coda_type_set_read_type>
    1204:	ldr	r0, [r5, r8]
    1208:	mov	r2, #16
    120c:	mov	r3, #0
    1210:	ldr	r0, [r0, #228]	; 0xe4
    1214:	bl	0 <coda_type_set_bit_size>
    1218:	ldr	r0, [r5, r8]
    121c:	movw	r1, #0
    1220:	movt	r1, #0
    1224:	ldr	r0, [r0, #228]	; 0xe4
    1228:	bl	0 <coda_type_set_description>
    122c:	ldr	r0, [r5, r8]
    1230:	mov	r1, sl
    1234:	ldr	r0, [r0, #228]	; 0xe4
    1238:	bl	0 <coda_type_number_set_unit>
    123c:	mov	r0, #9
    1240:	mov	r1, #2
    1244:	bl	0 <coda_type_number_new>
    1248:	ldr	r1, [r5, r8]
    124c:	str	r0, [r1, #232]	; 0xe8
    1250:	mov	r1, #1
    1254:	bl	0 <coda_type_number_set_endianness>
    1258:	ldr	r0, [r5, r8]
    125c:	mov	r1, #2
    1260:	ldr	r0, [r0, #232]	; 0xe8
    1264:	bl	0 <coda_type_set_read_type>
    1268:	ldr	r0, [r5, r8]
    126c:	mov	r2, #16
    1270:	mov	r3, #0
    1274:	ldr	r0, [r0, #232]	; 0xe8
    1278:	bl	0 <coda_type_set_bit_size>
    127c:	ldr	r0, [r5, r8]
    1280:	movw	r1, #0
    1284:	movt	r1, #0
    1288:	ldr	r0, [r0, #232]	; 0xe8
    128c:	bl	0 <coda_type_set_description>
    1290:	ldr	r0, [r5, r8]
    1294:	movw	r1, #0
    1298:	movt	r1, #0
    129c:	ldr	r0, [r0, #232]	; 0xe8
    12a0:	bl	0 <coda_type_number_set_unit>
    12a4:	mov	r0, #9
    12a8:	mov	r1, #2
    12ac:	bl	0 <coda_type_number_new>
    12b0:	ldr	r1, [r5, r8]
    12b4:	str	r0, [r1, #236]	; 0xec
    12b8:	mov	r1, #1
    12bc:	bl	0 <coda_type_number_set_endianness>
    12c0:	ldr	r0, [r5, r8]
    12c4:	mov	r1, #4
    12c8:	ldr	r0, [r0, #236]	; 0xec
    12cc:	bl	0 <coda_type_set_read_type>
    12d0:	ldr	r0, [r5, r8]
    12d4:	mov	r2, #32
    12d8:	mov	r3, #0
    12dc:	ldr	r0, [r0, #236]	; 0xec
    12e0:	bl	0 <coda_type_set_bit_size>
    12e4:	ldr	r0, [r5, r8]
    12e8:	movw	r1, #0
    12ec:	movt	r1, #0
    12f0:	ldr	r0, [r0, #236]	; 0xec
    12f4:	bl	0 <coda_type_set_description>
    12f8:	mov	r0, #9
    12fc:	mov	r1, #2
    1300:	bl	0 <coda_type_number_new>
    1304:	ldr	r1, [r5, r8]
    1308:	str	r0, [r1, #240]	; 0xf0
    130c:	mov	r1, #1
    1310:	bl	0 <coda_type_number_set_endianness>
    1314:	ldr	r0, [r5, r8]
    1318:	mov	r1, #4
    131c:	ldr	r0, [r0, #240]	; 0xf0
    1320:	bl	0 <coda_type_set_read_type>
    1324:	ldr	r0, [r5, r8]
    1328:	mov	r2, #32
    132c:	mov	r3, #0
    1330:	ldr	r0, [r0, #240]	; 0xf0
    1334:	bl	0 <coda_type_set_bit_size>
    1338:	ldr	r0, [r5, r8]
    133c:	movw	r1, #0
    1340:	movt	r1, #0
    1344:	ldr	r0, [r0, #240]	; 0xf0
    1348:	bl	0 <coda_type_set_description>
    134c:	mov	r0, #9
    1350:	mov	r1, #2
    1354:	bl	0 <coda_type_number_new>
    1358:	ldr	r1, [r5, r8]
    135c:	str	r0, [r1, #244]	; 0xf4
    1360:	mov	r1, #1
    1364:	bl	0 <coda_type_number_set_endianness>
    1368:	ldr	r0, [r5, r8]
    136c:	mov	r1, #4
    1370:	ldr	r0, [r0, #244]	; 0xf4
    1374:	bl	0 <coda_type_set_read_type>
    1378:	ldr	r0, [r5, r8]
    137c:	mov	r2, #32
    1380:	mov	r3, #0
    1384:	ldr	r0, [r0, #244]	; 0xf4
    1388:	bl	0 <coda_type_set_bit_size>
    138c:	ldr	r0, [r5, r8]
    1390:	movw	r1, #0
    1394:	movt	r1, #0
    1398:	ldr	r0, [r0, #244]	; 0xf4
    139c:	bl	0 <coda_type_set_description>
    13a0:	mov	r0, #9
    13a4:	mov	r1, #2
    13a8:	bl	0 <coda_type_number_new>
    13ac:	ldr	r1, [r5, r8]
    13b0:	str	r0, [r1, #248]	; 0xf8
    13b4:	mov	r1, #1
    13b8:	bl	0 <coda_type_number_set_endianness>
    13bc:	ldr	r0, [r5, r8]
    13c0:	mov	r1, #4
    13c4:	ldr	r0, [r0, #248]	; 0xf8
    13c8:	bl	0 <coda_type_set_read_type>
    13cc:	ldr	r0, [r5, r8]
    13d0:	mov	r2, #32
    13d4:	mov	r3, #0
    13d8:	ldr	r0, [r0, #248]	; 0xf8
    13dc:	bl	0 <coda_type_set_bit_size>
    13e0:	ldr	r0, [r5, r8]
    13e4:	mov	r1, r6
    13e8:	ldr	r0, [r0, #248]	; 0xf8
    13ec:	bl	0 <coda_type_set_description>
    13f0:	mov	r0, #9
    13f4:	mov	r1, #2
    13f8:	bl	0 <coda_type_number_new>
    13fc:	ldr	r1, [r5, r8]
    1400:	str	r0, [r1, #252]	; 0xfc
    1404:	mov	r1, #1
    1408:	bl	0 <coda_type_number_set_endianness>
    140c:	ldr	r0, [r5, r8]
    1410:	mov	r1, #4
    1414:	ldr	r0, [r0, #252]	; 0xfc
    1418:	bl	0 <coda_type_set_read_type>
    141c:	ldr	r0, [r5, r8]
    1420:	mov	r2, #32
    1424:	mov	r3, #0
    1428:	ldr	r0, [r0, #252]	; 0xfc
    142c:	bl	0 <coda_type_set_bit_size>
    1430:	ldr	r0, [r5, r8]
    1434:	mov	r1, r4
    1438:	ldr	r0, [r0, #252]	; 0xfc
    143c:	bl	0 <coda_type_set_description>
    1440:	mov	r0, #9
    1444:	mov	r1, #2
    1448:	bl	0 <coda_type_number_new>
    144c:	ldr	r1, [r5, r8]
    1450:	str	r0, [r1, #256]	; 0x100
    1454:	mov	r1, #1
    1458:	bl	0 <coda_type_number_set_endianness>
    145c:	ldr	r0, [r5, r8]
    1460:	mov	r1, #4
    1464:	ldr	r0, [r0, #256]	; 0x100
    1468:	bl	0 <coda_type_set_read_type>
    146c:	ldr	r0, [r5, r8]
    1470:	mov	r2, #32
    1474:	mov	r3, #0
    1478:	ldr	r0, [r0, #256]	; 0x100
    147c:	bl	0 <coda_type_set_bit_size>
    1480:	ldr	r0, [r5, r8]
    1484:	mov	r1, r9
    1488:	ldr	r0, [r0, #256]	; 0x100
    148c:	bl	0 <coda_type_set_description>
    1490:	mov	r0, #9
    1494:	bl	0 <coda_type_array_new>
    1498:	ldr	r1, [r5, r8]
    149c:	str	r0, [r1, #60]	; 0x3c
    14a0:	mov	r1, #0
    14a4:	bl	0 <coda_type_array_add_variable_dimension>
    14a8:	ldr	r0, [r5, r8]
    14ac:	ldr	r1, [r0, #56]	; 0x38
    14b0:	ldr	r0, [r0, #60]	; 0x3c
    14b4:	bl	0 <coda_type_array_set_base_type>
    14b8:	mov	r0, #9
    14bc:	bl	0 <coda_type_array_new>
    14c0:	ldr	r1, [r5, r8]
    14c4:	str	r0, [r1, #68]	; 0x44
    14c8:	mov	r1, #0
    14cc:	bl	0 <coda_type_array_add_variable_dimension>
    14d0:	ldr	r0, [r5, r8]
    14d4:	ldr	r1, [r0, #64]	; 0x40
    14d8:	ldr	r0, [r0, #68]	; 0x44
    14dc:	bl	0 <coda_type_array_set_base_type>
    14e0:	mov	r0, #9
    14e4:	bl	0 <coda_type_record_new>
    14e8:	ldr	r1, [r5, r8]
    14ec:	str	r0, [r1, #284]	; 0x11c
    14f0:	movw	r0, #0
    14f4:	movt	r0, #0
    14f8:	bl	0 <coda_type_record_field_new>
    14fc:	mov	r4, r0
    1500:	ldr	r0, [r5, r8]
    1504:	ldr	r1, [r0]
    1508:	mov	r0, r4
    150c:	bl	0 <coda_type_record_field_set_type>
    1510:	ldr	r0, [r5, r8]
    1514:	mov	r1, r4
    1518:	ldr	r0, [r0, #284]	; 0x11c
    151c:	bl	0 <coda_type_record_add_field>
    1520:	movw	r0, #0
    1524:	movt	r0, #0
    1528:	bl	0 <coda_type_record_field_new>
    152c:	mov	r4, r0
    1530:	ldr	r0, [r5, r8]
    1534:	ldr	r1, [r0, #8]
    1538:	mov	r0, r4
    153c:	bl	0 <coda_type_record_field_set_type>
    1540:	ldr	r0, [r5, r8]
    1544:	mov	r1, r4
    1548:	ldr	r0, [r0, #284]	; 0x11c
    154c:	bl	0 <coda_type_record_add_field>
    1550:	movw	r0, #0
    1554:	movt	r0, #0
    1558:	bl	0 <coda_type_record_field_new>
    155c:	mov	r4, r0
    1560:	ldr	r0, [r5, r8]
    1564:	ldr	r1, [r0, #12]
    1568:	mov	r0, r4
    156c:	bl	0 <coda_type_record_field_set_type>
    1570:	ldr	r0, [r5, r8]
    1574:	mov	r1, r4
    1578:	ldr	r0, [r0, #284]	; 0x11c
    157c:	bl	0 <coda_type_record_add_field>
    1580:	movw	r0, #0
    1584:	movt	r0, #0
    1588:	bl	0 <coda_type_record_field_new>
    158c:	mov	r4, r0
    1590:	ldr	r0, [r5, r8]
    1594:	ldr	r1, [r0, #16]
    1598:	mov	r0, r4
    159c:	bl	0 <coda_type_record_field_set_type>
    15a0:	ldr	r0, [r5, r8]
    15a4:	mov	r1, r4
    15a8:	ldr	r0, [r0, #284]	; 0x11c
    15ac:	bl	0 <coda_type_record_add_field>
    15b0:	movw	r0, #0
    15b4:	movt	r0, #0
    15b8:	bl	0 <coda_type_record_field_new>
    15bc:	mov	r4, r0
    15c0:	ldr	r0, [r5, r8]
    15c4:	ldr	r1, [r0, #20]
    15c8:	mov	r0, r4
    15cc:	bl	0 <coda_type_record_field_set_type>
    15d0:	ldr	r0, [r5, r8]
    15d4:	mov	r1, r4
    15d8:	ldr	r0, [r0, #284]	; 0x11c
    15dc:	bl	0 <coda_type_record_add_field>
    15e0:	movw	r0, #0
    15e4:	movt	r0, #0
    15e8:	bl	0 <coda_type_record_field_new>
    15ec:	mov	r4, r0
    15f0:	ldr	r0, [r5, r8]
    15f4:	ldr	r1, [r0, #24]
    15f8:	mov	r0, r4
    15fc:	bl	0 <coda_type_record_field_set_type>
    1600:	ldr	r0, [r5, r8]
    1604:	mov	r1, r4
    1608:	ldr	r0, [r0, #284]	; 0x11c
    160c:	bl	0 <coda_type_record_add_field>
    1610:	movw	r0, #0
    1614:	movt	r0, #0
    1618:	bl	0 <coda_type_record_field_new>
    161c:	mov	r4, r0
    1620:	ldr	r0, [r5, r8]
    1624:	ldr	r1, [r0, #28]
    1628:	mov	r0, r4
    162c:	bl	0 <coda_type_record_field_set_type>
    1630:	ldr	r0, [r5, r8]
    1634:	mov	r1, r4
    1638:	ldr	r0, [r0, #284]	; 0x11c
    163c:	bl	0 <coda_type_record_add_field>
    1640:	movw	r0, #0
    1644:	movt	r0, #0
    1648:	bl	0 <coda_type_record_field_new>
    164c:	mov	r4, r0
    1650:	ldr	r0, [r5, r8]
    1654:	ldr	r1, [r0, #32]
    1658:	mov	r0, r4
    165c:	bl	0 <coda_type_record_field_set_type>
    1660:	ldr	r0, [r5, r8]
    1664:	mov	r1, r4
    1668:	ldr	r0, [r0, #284]	; 0x11c
    166c:	bl	0 <coda_type_record_add_field>
    1670:	movw	r0, #0
    1674:	movt	r0, #0
    1678:	bl	0 <coda_type_record_field_new>
    167c:	mov	r4, r0
    1680:	ldr	r0, [r5, r8]
    1684:	ldr	r1, [r0, #36]	; 0x24
    1688:	mov	r0, r4
    168c:	bl	0 <coda_type_record_field_set_type>
    1690:	ldr	r0, [r5, r8]
    1694:	mov	r1, r4
    1698:	ldr	r0, [r0, #284]	; 0x11c
    169c:	bl	0 <coda_type_record_add_field>
    16a0:	movw	r0, #0
    16a4:	movt	r0, #0
    16a8:	bl	0 <coda_type_record_field_new>
    16ac:	mov	r4, r0
    16b0:	ldr	r0, [r5, r8]
    16b4:	ldr	r1, [r0, #40]	; 0x28
    16b8:	mov	r0, r4
    16bc:	bl	0 <coda_type_record_field_set_type>
    16c0:	ldr	r0, [r5, r8]
    16c4:	mov	r1, r4
    16c8:	ldr	r0, [r0, #284]	; 0x11c
    16cc:	bl	0 <coda_type_record_add_field>
    16d0:	movw	r0, #0
    16d4:	movt	r0, #0
    16d8:	bl	0 <coda_type_record_field_new>
    16dc:	mov	r4, r0
    16e0:	ldr	r0, [r5, r8]
    16e4:	ldr	r1, [r0, #44]	; 0x2c
    16e8:	mov	r0, r4
    16ec:	bl	0 <coda_type_record_field_set_type>
    16f0:	ldr	r0, [r5, r8]
    16f4:	mov	r1, r4
    16f8:	ldr	r0, [r0, #284]	; 0x11c
    16fc:	bl	0 <coda_type_record_add_field>
    1700:	movw	r0, #0
    1704:	movt	r0, #0
    1708:	bl	0 <coda_type_record_field_new>
    170c:	mov	r4, r0
    1710:	ldr	r0, [r5, r8]
    1714:	ldr	r1, [r0, #48]	; 0x30
    1718:	mov	r0, r4
    171c:	bl	0 <coda_type_record_field_set_type>
    1720:	ldr	r0, [r5, r8]
    1724:	mov	r1, r4
    1728:	ldr	r0, [r0, #284]	; 0x11c
    172c:	bl	0 <coda_type_record_add_field>
    1730:	movw	r0, #0
    1734:	movt	r0, #0
    1738:	bl	0 <coda_type_record_field_new>
    173c:	mov	r4, r0
    1740:	ldr	r0, [r5, r8]
    1744:	ldr	r1, [r0, #52]	; 0x34
    1748:	mov	r0, r4
    174c:	bl	0 <coda_type_record_field_set_type>
    1750:	ldr	r0, [r5, r8]
    1754:	mov	r1, r4
    1758:	ldr	r0, [r0, #284]	; 0x11c
    175c:	bl	0 <coda_type_record_add_field>
    1760:	movw	r0, #0
    1764:	movt	r0, #0
    1768:	bl	0 <coda_type_record_field_new>
    176c:	mov	r4, r0
    1770:	ldr	r0, [r5, r8]
    1774:	ldr	r1, [r0, #60]	; 0x3c
    1778:	mov	r0, r4
    177c:	bl	0 <coda_type_record_field_set_type>
    1780:	ldr	r0, [r5, r8]
    1784:	mov	r1, r4
    1788:	ldr	r0, [r0, #284]	; 0x11c
    178c:	bl	0 <coda_type_record_add_field>
    1790:	movw	r0, #0
    1794:	movt	r0, #0
    1798:	bl	0 <coda_type_record_field_new>
    179c:	mov	r4, r0
    17a0:	ldr	r0, [r5, r8]
    17a4:	ldr	r1, [r0, #68]	; 0x44
    17a8:	mov	r0, r4
    17ac:	bl	0 <coda_type_record_field_set_type>
    17b0:	ldr	r0, [r5, r8]
    17b4:	mov	r1, r4
    17b8:	ldr	r0, [r0, #284]	; 0x11c
    17bc:	bl	0 <coda_type_record_add_field>
    17c0:	movw	r0, #0
    17c4:	movt	r0, #0
    17c8:	bl	0 <coda_type_record_field_new>
    17cc:	mov	r4, r0
    17d0:	ldr	r0, [r5, r8]
    17d4:	ldr	r1, [r0, #72]	; 0x48
    17d8:	mov	r0, r4
    17dc:	bl	0 <coda_type_record_field_set_type>
    17e0:	ldr	r0, [r5, r8]
    17e4:	mov	r1, r4
    17e8:	ldr	r0, [r0, #284]	; 0x11c
    17ec:	bl	0 <coda_type_record_add_field>
    17f0:	movw	r0, #0
    17f4:	movt	r0, #0
    17f8:	bl	0 <coda_type_record_field_new>
    17fc:	mov	r4, r0
    1800:	ldr	r0, [r5, r8]
    1804:	ldr	r1, [r0, #76]	; 0x4c
    1808:	mov	r0, r4
    180c:	bl	0 <coda_type_record_field_set_type>
    1810:	ldr	r0, [r5, r8]
    1814:	mov	r1, r4
    1818:	ldr	r0, [r0, #284]	; 0x11c
    181c:	bl	0 <coda_type_record_add_field>
    1820:	movw	r0, #0
    1824:	movt	r0, #0
    1828:	bl	0 <coda_type_record_field_new>
    182c:	mov	r4, r0
    1830:	ldr	r0, [r5, r8]
    1834:	ldr	r1, [r0, #80]	; 0x50
    1838:	mov	r0, r4
    183c:	bl	0 <coda_type_record_field_set_type>
    1840:	ldr	r0, [r5, r8]
    1844:	mov	r1, r4
    1848:	ldr	r0, [r0, #284]	; 0x11c
    184c:	bl	0 <coda_type_record_add_field>
    1850:	movw	r0, #0
    1854:	movt	r0, #0
    1858:	bl	0 <coda_type_record_field_new>
    185c:	mov	r4, r0
    1860:	ldr	r0, [r5, r8]
    1864:	ldr	r1, [r0, #84]	; 0x54
    1868:	mov	r0, r4
    186c:	bl	0 <coda_type_record_field_set_type>
    1870:	ldr	r0, [r5, r8]
    1874:	mov	r1, r4
    1878:	ldr	r0, [r0, #284]	; 0x11c
    187c:	bl	0 <coda_type_record_add_field>
    1880:	mov	r0, #9
    1884:	bl	0 <coda_type_record_new>
    1888:	ldr	r1, [r5, r8]
    188c:	movw	sl, #0
    1890:	movt	sl, #0
    1894:	str	r0, [r1, #140]	; 0x8c
    1898:	mov	r0, sl
    189c:	bl	0 <coda_type_record_field_new>
    18a0:	mov	r4, r0
    18a4:	ldr	r0, [r5, r8]
    18a8:	ldr	r1, [r0, #144]	; 0x90
    18ac:	mov	r0, r4
    18b0:	bl	0 <coda_type_record_field_set_type>
    18b4:	ldr	r0, [r5, r8]
    18b8:	mov	r1, r4
    18bc:	ldr	r0, [r0, #140]	; 0x8c
    18c0:	bl	0 <coda_type_record_add_field>
    18c4:	movw	r9, #0
    18c8:	movt	r9, #0
    18cc:	mov	r0, r9
    18d0:	bl	0 <coda_type_record_field_new>
    18d4:	mov	r4, r0
    18d8:	ldr	r0, [r5, r8]
    18dc:	ldr	r1, [r0, #148]	; 0x94
    18e0:	mov	r0, r4
    18e4:	bl	0 <coda_type_record_field_set_type>
    18e8:	ldr	r0, [r5, r8]
    18ec:	mov	r1, r4
    18f0:	ldr	r0, [r0, #140]	; 0x8c
    18f4:	bl	0 <coda_type_record_add_field>
    18f8:	movw	r4, #0
    18fc:	movt	r4, #0
    1900:	mov	r0, r4
    1904:	bl	0 <coda_type_record_field_new>
    1908:	mov	r7, r0
    190c:	ldr	r0, [r5, r8]
    1910:	ldr	r1, [r0, #152]	; 0x98
    1914:	mov	r0, r7
    1918:	bl	0 <coda_type_record_field_set_type>
    191c:	ldr	r0, [r5, r8]
    1920:	mov	r1, r7
    1924:	ldr	r0, [r0, #140]	; 0x8c
    1928:	bl	0 <coda_type_record_add_field>
    192c:	movw	r7, #0
    1930:	movt	r7, #0
    1934:	mov	r0, r7
    1938:	bl	0 <coda_type_record_field_new>
    193c:	mov	r6, r0
    1940:	ldr	r0, [r5, r8]
    1944:	ldr	r1, [r0, #156]	; 0x9c
    1948:	mov	r0, r6
    194c:	bl	0 <coda_type_record_field_set_type>
    1950:	ldr	r0, [r5, r8]
    1954:	mov	r1, r6
    1958:	ldr	r0, [r0, #140]	; 0x8c
    195c:	bl	0 <coda_type_record_add_field>
    1960:	movw	r0, #0
    1964:	movt	r0, #0
    1968:	bl	0 <coda_type_record_field_new>
    196c:	mov	r6, r0
    1970:	ldr	r0, [r5, r8]
    1974:	ldr	r1, [r0, #160]	; 0xa0
    1978:	mov	r0, r6
    197c:	bl	0 <coda_type_record_field_set_type>
    1980:	ldr	r0, [r5, r8]
    1984:	mov	r1, r6
    1988:	ldr	r0, [r0, #140]	; 0x8c
    198c:	bl	0 <coda_type_record_add_field>
    1990:	movw	r0, #0
    1994:	movt	r0, #0
    1998:	bl	0 <coda_type_record_field_new>
    199c:	mov	r6, r0
    19a0:	ldr	r0, [r5, r8]
    19a4:	ldr	r1, [r0, #164]	; 0xa4
    19a8:	mov	r0, r6
    19ac:	bl	0 <coda_type_record_field_set_type>
    19b0:	ldr	r0, [r5, r8]
    19b4:	mov	r1, r6
    19b8:	ldr	r0, [r0, #140]	; 0x8c
    19bc:	bl	0 <coda_type_record_add_field>
    19c0:	movw	r0, #0
    19c4:	movt	r0, #0
    19c8:	bl	0 <coda_type_record_field_new>
    19cc:	mov	r6, r0
    19d0:	ldr	r0, [r5, r8]
    19d4:	ldr	r1, [r0, #168]	; 0xa8
    19d8:	mov	r0, r6
    19dc:	bl	0 <coda_type_record_field_set_type>
    19e0:	ldr	r0, [r5, r8]
    19e4:	mov	r1, r6
    19e8:	ldr	r0, [r0, #140]	; 0x8c
    19ec:	bl	0 <coda_type_record_add_field>
    19f0:	movw	r0, #0
    19f4:	movt	r0, #0
    19f8:	bl	0 <coda_type_record_field_new>
    19fc:	mov	r6, r0
    1a00:	ldr	r0, [r5, r8]
    1a04:	ldr	r1, [r0, #172]	; 0xac
    1a08:	mov	r0, r6
    1a0c:	bl	0 <coda_type_record_field_set_type>
    1a10:	ldr	r0, [r5, r8]
    1a14:	mov	r1, r6
    1a18:	ldr	r0, [r0, #140]	; 0x8c
    1a1c:	bl	0 <coda_type_record_add_field>
    1a20:	movw	r0, #0
    1a24:	movt	r0, #0
    1a28:	bl	0 <coda_type_record_field_new>
    1a2c:	mov	r6, r0
    1a30:	ldr	r0, [r5, r8]
    1a34:	ldr	r1, [r0, #176]	; 0xb0
    1a38:	mov	r0, r6
    1a3c:	bl	0 <coda_type_record_field_set_type>
    1a40:	ldr	r0, [r5, r8]
    1a44:	mov	r1, r6
    1a48:	ldr	r0, [r0, #140]	; 0x8c
    1a4c:	bl	0 <coda_type_record_add_field>
    1a50:	movw	r0, #0
    1a54:	movt	r0, #0
    1a58:	bl	0 <coda_type_record_field_new>
    1a5c:	mov	r6, r0
    1a60:	ldr	r0, [r5, r8]
    1a64:	ldr	r1, [r0, #180]	; 0xb4
    1a68:	mov	r0, r6
    1a6c:	bl	0 <coda_type_record_field_set_type>
    1a70:	ldr	r0, [r5, r8]
    1a74:	mov	r1, r6
    1a78:	ldr	r0, [r0, #140]	; 0x8c
    1a7c:	bl	0 <coda_type_record_add_field>
    1a80:	mov	r0, #9
    1a84:	bl	0 <coda_type_record_new>
    1a88:	ldr	r1, [r5, r8]
    1a8c:	str	r0, [r1, #268]	; 0x10c
    1a90:	movw	r0, #0
    1a94:	movt	r0, #0
    1a98:	bl	0 <coda_type_record_field_new>
    1a9c:	mov	r6, r0
    1aa0:	ldr	r0, [r5, r8]
    1aa4:	ldr	r1, [r0, #88]	; 0x58
    1aa8:	mov	r0, r6
    1aac:	bl	0 <coda_type_record_field_set_type>
    1ab0:	ldr	r0, [r5, r8]
    1ab4:	mov	r1, r6
    1ab8:	ldr	r0, [r0, #268]	; 0x10c
    1abc:	bl	0 <coda_type_record_add_field>
    1ac0:	movw	r0, #0
    1ac4:	movt	r0, #0
    1ac8:	bl	0 <coda_type_record_field_new>
    1acc:	mov	r6, r0
    1ad0:	ldr	r0, [r5, r8]
    1ad4:	ldr	r1, [r0, #92]	; 0x5c
    1ad8:	mov	r0, r6
    1adc:	bl	0 <coda_type_record_field_set_type>
    1ae0:	ldr	r0, [r5, r8]
    1ae4:	mov	r1, r6
    1ae8:	ldr	r0, [r0, #268]	; 0x10c
    1aec:	bl	0 <coda_type_record_add_field>
    1af0:	movw	r0, #0
    1af4:	movt	r0, #0
    1af8:	bl	0 <coda_type_record_field_new>
    1afc:	mov	r6, r0
    1b00:	ldr	r0, [r5, r8]
    1b04:	ldr	r1, [r0, #96]	; 0x60
    1b08:	mov	r0, r6
    1b0c:	bl	0 <coda_type_record_field_set_type>
    1b10:	ldr	r0, [r5, r8]
    1b14:	mov	r1, r6
    1b18:	ldr	r0, [r0, #268]	; 0x10c
    1b1c:	bl	0 <coda_type_record_add_field>
    1b20:	movw	r0, #0
    1b24:	movt	r0, #0
    1b28:	bl	0 <coda_type_record_field_new>
    1b2c:	mov	r6, r0
    1b30:	ldr	r0, [r5, r8]
    1b34:	ldr	r1, [r0, #100]	; 0x64
    1b38:	mov	r0, r6
    1b3c:	bl	0 <coda_type_record_field_set_type>
    1b40:	ldr	r0, [r5, r8]
    1b44:	mov	r1, r6
    1b48:	ldr	r0, [r0, #268]	; 0x10c
    1b4c:	bl	0 <coda_type_record_add_field>
    1b50:	movw	r0, #0
    1b54:	movt	r0, #0
    1b58:	bl	0 <coda_type_record_field_new>
    1b5c:	mov	r6, r0
    1b60:	ldr	r0, [r5, r8]
    1b64:	ldr	r1, [r0, #104]	; 0x68
    1b68:	mov	r0, r6
    1b6c:	bl	0 <coda_type_record_field_set_type>
    1b70:	ldr	r0, [r5, r8]
    1b74:	mov	r1, r6
    1b78:	ldr	r0, [r0, #268]	; 0x10c
    1b7c:	bl	0 <coda_type_record_add_field>
    1b80:	mov	r0, sl
    1b84:	bl	0 <coda_type_record_field_new>
    1b88:	mov	r6, r0
    1b8c:	ldr	r0, [r5, r8]
    1b90:	ldr	r1, [r0, #108]	; 0x6c
    1b94:	mov	r0, r6
    1b98:	bl	0 <coda_type_record_field_set_type>
    1b9c:	ldr	r0, [r5, r8]
    1ba0:	mov	r1, r6
    1ba4:	ldr	r0, [r0, #268]	; 0x10c
    1ba8:	bl	0 <coda_type_record_add_field>
    1bac:	mov	r0, r9
    1bb0:	bl	0 <coda_type_record_field_new>
    1bb4:	mov	r6, r0
    1bb8:	ldr	r0, [r5, r8]
    1bbc:	ldr	r1, [r0, #112]	; 0x70
    1bc0:	mov	r0, r6
    1bc4:	bl	0 <coda_type_record_field_set_type>
    1bc8:	ldr	r0, [r5, r8]
    1bcc:	mov	r1, r6
    1bd0:	ldr	r0, [r0, #268]	; 0x10c
    1bd4:	bl	0 <coda_type_record_add_field>
    1bd8:	mov	r0, r4
    1bdc:	bl	0 <coda_type_record_field_new>
    1be0:	mov	r4, r0
    1be4:	ldr	r0, [r5, r8]
    1be8:	ldr	r1, [r0, #116]	; 0x74
    1bec:	mov	r0, r4
    1bf0:	bl	0 <coda_type_record_field_set_type>
    1bf4:	ldr	r0, [r5, r8]
    1bf8:	mov	r1, r4
    1bfc:	ldr	r0, [r0, #268]	; 0x10c
    1c00:	bl	0 <coda_type_record_add_field>
    1c04:	mov	r0, r7
    1c08:	bl	0 <coda_type_record_field_new>
    1c0c:	mov	r4, r0
    1c10:	ldr	r0, [r5, r8]
    1c14:	ldr	r1, [r0, #120]	; 0x78
    1c18:	mov	r0, r4
    1c1c:	bl	0 <coda_type_record_field_set_type>
    1c20:	ldr	r0, [r5, r8]
    1c24:	mov	r1, r4
    1c28:	ldr	r0, [r0, #268]	; 0x10c
    1c2c:	bl	0 <coda_type_record_add_field>
    1c30:	movw	r0, #0
    1c34:	movt	r0, #0
    1c38:	bl	0 <coda_type_record_field_new>
    1c3c:	mov	r4, r0
    1c40:	ldr	r0, [r5, r8]
    1c44:	ldr	r1, [r0, #124]	; 0x7c
    1c48:	mov	r0, r4
    1c4c:	bl	0 <coda_type_record_field_set_type>
    1c50:	ldr	r0, [r5, r8]
    1c54:	mov	r1, r4
    1c58:	ldr	r0, [r0, #268]	; 0x10c
    1c5c:	bl	0 <coda_type_record_add_field>
    1c60:	movw	r0, #0
    1c64:	movt	r0, #0
    1c68:	bl	0 <coda_type_record_field_new>
    1c6c:	mov	r4, r0
    1c70:	ldr	r0, [r5, r8]
    1c74:	ldr	r1, [r0, #128]	; 0x80
    1c78:	mov	r0, r4
    1c7c:	bl	0 <coda_type_record_field_set_type>
    1c80:	ldr	r0, [r5, r8]
    1c84:	mov	r1, r4
    1c88:	ldr	r0, [r0, #268]	; 0x10c
    1c8c:	bl	0 <coda_type_record_add_field>
    1c90:	movw	r0, #0
    1c94:	movt	r0, #0
    1c98:	bl	0 <coda_type_record_field_new>
    1c9c:	mov	r4, r0
    1ca0:	ldr	r0, [r5, r8]
    1ca4:	ldr	r1, [r0, #132]	; 0x84
    1ca8:	mov	r0, r4
    1cac:	bl	0 <coda_type_record_field_set_type>
    1cb0:	ldr	r0, [r5, r8]
    1cb4:	mov	r1, r4
    1cb8:	ldr	r0, [r0, #268]	; 0x10c
    1cbc:	bl	0 <coda_type_record_add_field>
    1cc0:	movw	r0, #0
    1cc4:	movt	r0, #0
    1cc8:	bl	0 <coda_type_record_field_new>
    1ccc:	mov	r4, r0
    1cd0:	ldr	r0, [r5, r8]
    1cd4:	ldr	r1, [r0, #136]	; 0x88
    1cd8:	mov	r0, r4
    1cdc:	bl	0 <coda_type_record_field_set_type>
    1ce0:	ldr	r0, [r5, r8]
    1ce4:	mov	r1, r4
    1ce8:	ldr	r0, [r0, #268]	; 0x10c
    1cec:	bl	0 <coda_type_record_add_field>
    1cf0:	movw	r0, #0
    1cf4:	movt	r0, #0
    1cf8:	bl	0 <coda_type_record_field_new>
    1cfc:	mov	r4, r0
    1d00:	ldr	r0, [r5, r8]
    1d04:	ldr	r1, [r0, #140]	; 0x8c
    1d08:	mov	r0, r4
    1d0c:	bl	0 <coda_type_record_field_set_type>
    1d10:	mov	r0, r4
    1d14:	bl	0 <coda_type_record_field_set_optional>
    1d18:	ldr	r0, [r5, r8]
    1d1c:	mov	r1, r4
    1d20:	ldr	r0, [r0, #268]	; 0x10c
    1d24:	bl	0 <coda_type_record_add_field>
    1d28:	mov	r0, #9
    1d2c:	bl	0 <coda_type_array_new>
    1d30:	ldr	r1, [r5, r8]
    1d34:	str	r0, [r1, #272]	; 0x110
    1d38:	mov	r1, #0
    1d3c:	bl	0 <coda_type_array_add_variable_dimension>
    1d40:	ldr	r0, [r5, r8]
    1d44:	ldr	r1, [r0, #268]	; 0x10c
    1d48:	ldr	r0, [r0, #272]	; 0x110
    1d4c:	bl	0 <coda_type_array_set_base_type>
    1d50:	mov	r0, #9
    1d54:	bl	0 <coda_type_record_new>
    1d58:	ldr	r1, [r5, r8]
    1d5c:	movw	sl, #0
    1d60:	movt	sl, #0
    1d64:	str	r0, [r1, #216]	; 0xd8
    1d68:	mov	r0, sl
    1d6c:	bl	0 <coda_type_record_field_new>
    1d70:	mov	r6, r0
    1d74:	ldr	r0, [r5, r8]
    1d78:	ldr	r1, [r0, #220]	; 0xdc
    1d7c:	mov	r0, r6
    1d80:	bl	0 <coda_type_record_field_set_type>
    1d84:	ldr	r0, [r5, r8]
    1d88:	mov	r1, r6
    1d8c:	ldr	r0, [r0, #216]	; 0xd8
    1d90:	bl	0 <coda_type_record_add_field>
    1d94:	movw	r6, #0
    1d98:	movt	r6, #0
    1d9c:	mov	r0, r6
    1da0:	bl	0 <coda_type_record_field_new>
    1da4:	mov	r7, r0
    1da8:	ldr	r0, [r5, r8]
    1dac:	ldr	r1, [r0, #224]	; 0xe0
    1db0:	mov	r0, r7
    1db4:	bl	0 <coda_type_record_field_set_type>
    1db8:	ldr	r0, [r5, r8]
    1dbc:	mov	r1, r7
    1dc0:	ldr	r0, [r0, #216]	; 0xd8
    1dc4:	bl	0 <coda_type_record_add_field>
    1dc8:	movw	r7, #0
    1dcc:	movt	r7, #0
    1dd0:	mov	r0, r7
    1dd4:	bl	0 <coda_type_record_field_new>
    1dd8:	mov	r4, r0
    1ddc:	ldr	r0, [r5, r8]
    1de0:	ldr	r1, [r0, #228]	; 0xe4
    1de4:	mov	r0, r4
    1de8:	bl	0 <coda_type_record_field_set_type>
    1dec:	ldr	r0, [r5, r8]
    1df0:	mov	r1, r4
    1df4:	ldr	r0, [r0, #216]	; 0xd8
    1df8:	bl	0 <coda_type_record_add_field>
    1dfc:	movw	r9, #0
    1e00:	movt	r9, #0
    1e04:	mov	r0, r9
    1e08:	bl	0 <coda_type_record_field_new>
    1e0c:	mov	r4, r0
    1e10:	ldr	r0, [r5, r8]
    1e14:	ldr	r1, [r0, #232]	; 0xe8
    1e18:	mov	r0, r4
    1e1c:	bl	0 <coda_type_record_field_set_type>
    1e20:	ldr	r0, [r5, r8]
    1e24:	mov	r1, r4
    1e28:	ldr	r0, [r0, #216]	; 0xd8
    1e2c:	bl	0 <coda_type_record_add_field>
    1e30:	movw	r0, #0
    1e34:	movt	r0, #0
    1e38:	bl	0 <coda_type_record_field_new>
    1e3c:	mov	r4, r0
    1e40:	ldr	r0, [r5, r8]
    1e44:	ldr	r1, [r0, #236]	; 0xec
    1e48:	mov	r0, r4
    1e4c:	bl	0 <coda_type_record_field_set_type>
    1e50:	ldr	r0, [r5, r8]
    1e54:	mov	r1, r4
    1e58:	ldr	r0, [r0, #216]	; 0xd8
    1e5c:	bl	0 <coda_type_record_add_field>
    1e60:	movw	r0, #0
    1e64:	movt	r0, #0
    1e68:	bl	0 <coda_type_record_field_new>
    1e6c:	mov	r4, r0
    1e70:	ldr	r0, [r5, r8]
    1e74:	ldr	r1, [r0, #240]	; 0xf0
    1e78:	mov	r0, r4
    1e7c:	bl	0 <coda_type_record_field_set_type>
    1e80:	ldr	r0, [r5, r8]
    1e84:	mov	r1, r4
    1e88:	ldr	r0, [r0, #216]	; 0xd8
    1e8c:	bl	0 <coda_type_record_add_field>
    1e90:	movw	r0, #0
    1e94:	movt	r0, #0
    1e98:	bl	0 <coda_type_record_field_new>
    1e9c:	mov	r4, r0
    1ea0:	ldr	r0, [r5, r8]
    1ea4:	ldr	r1, [r0, #244]	; 0xf4
    1ea8:	mov	r0, r4
    1eac:	bl	0 <coda_type_record_field_set_type>
    1eb0:	ldr	r0, [r5, r8]
    1eb4:	mov	r1, r4
    1eb8:	ldr	r0, [r0, #216]	; 0xd8
    1ebc:	bl	0 <coda_type_record_add_field>
    1ec0:	movw	r0, #0
    1ec4:	movt	r0, #0
    1ec8:	bl	0 <coda_type_record_field_new>
    1ecc:	mov	r4, r0
    1ed0:	ldr	r0, [r5, r8]
    1ed4:	ldr	r1, [r0, #248]	; 0xf8
    1ed8:	mov	r0, r4
    1edc:	bl	0 <coda_type_record_field_set_type>
    1ee0:	ldr	r0, [r5, r8]
    1ee4:	mov	r1, r4
    1ee8:	ldr	r0, [r0, #216]	; 0xd8
    1eec:	bl	0 <coda_type_record_add_field>
    1ef0:	movw	r0, #0
    1ef4:	movt	r0, #0
    1ef8:	bl	0 <coda_type_record_field_new>
    1efc:	mov	r4, r0
    1f00:	ldr	r0, [r5, r8]
    1f04:	ldr	r1, [r0, #252]	; 0xfc
    1f08:	mov	r0, r4
    1f0c:	bl	0 <coda_type_record_field_set_type>
    1f10:	ldr	r0, [r5, r8]
    1f14:	mov	r1, r4
    1f18:	ldr	r0, [r0, #216]	; 0xd8
    1f1c:	bl	0 <coda_type_record_add_field>
    1f20:	movw	r0, #0
    1f24:	movt	r0, #0
    1f28:	bl	0 <coda_type_record_field_new>
    1f2c:	mov	r4, r0
    1f30:	ldr	r0, [r5, r8]
    1f34:	ldr	r1, [r0, #256]	; 0x100
    1f38:	mov	r0, r4
    1f3c:	bl	0 <coda_type_record_field_set_type>
    1f40:	ldr	r0, [r5, r8]
    1f44:	mov	r1, r4
    1f48:	ldr	r0, [r0, #216]	; 0xd8
    1f4c:	bl	0 <coda_type_record_add_field>
    1f50:	mov	r0, #9
    1f54:	bl	0 <coda_type_record_new>
    1f58:	ldr	r1, [r5, r8]
    1f5c:	str	r0, [r1, #276]	; 0x114
    1f60:	movw	r0, #0
    1f64:	movt	r0, #0
    1f68:	bl	0 <coda_type_record_field_new>
    1f6c:	mov	r4, r0
    1f70:	ldr	r0, [r5, r8]
    1f74:	ldr	r1, [r0, #88]	; 0x58
    1f78:	mov	r0, r4
    1f7c:	bl	0 <coda_type_record_field_set_type>
    1f80:	ldr	r0, [r5, r8]
    1f84:	mov	r1, r4
    1f88:	ldr	r0, [r0, #276]	; 0x114
    1f8c:	bl	0 <coda_type_record_add_field>
    1f90:	movw	r0, #0
    1f94:	movt	r0, #0
    1f98:	bl	0 <coda_type_record_field_new>
    1f9c:	mov	r4, r0
    1fa0:	ldr	r0, [r5, r8]
    1fa4:	ldr	r1, [r0, #184]	; 0xb8
    1fa8:	mov	r0, r4
    1fac:	bl	0 <coda_type_record_field_set_type>
    1fb0:	ldr	r0, [r5, r8]
    1fb4:	mov	r1, r4
    1fb8:	ldr	r0, [r0, #276]	; 0x114
    1fbc:	bl	0 <coda_type_record_add_field>
    1fc0:	movw	r0, #0
    1fc4:	movt	r0, #0
    1fc8:	bl	0 <coda_type_record_field_new>
    1fcc:	mov	r4, r0
    1fd0:	ldr	r0, [r5, r8]
    1fd4:	ldr	r1, [r0, #188]	; 0xbc
    1fd8:	mov	r0, r4
    1fdc:	bl	0 <coda_type_record_field_set_type>
    1fe0:	ldr	r0, [r5, r8]
    1fe4:	mov	r1, r4
    1fe8:	ldr	r0, [r0, #276]	; 0x114
    1fec:	bl	0 <coda_type_record_add_field>
    1ff0:	movw	r0, #0
    1ff4:	movt	r0, #0
    1ff8:	bl	0 <coda_type_record_field_new>
    1ffc:	mov	r4, r0
    2000:	ldr	r0, [r5, r8]
    2004:	ldr	r1, [r0, #192]	; 0xc0
    2008:	mov	r0, r4
    200c:	bl	0 <coda_type_record_field_set_type>
    2010:	ldr	r0, [r5, r8]
    2014:	mov	r1, r4
    2018:	ldr	r0, [r0, #276]	; 0x114
    201c:	bl	0 <coda_type_record_add_field>
    2020:	movw	r0, #0
    2024:	movt	r0, #0
    2028:	bl	0 <coda_type_record_field_new>
    202c:	mov	r4, r0
    2030:	ldr	r0, [r5, r8]
    2034:	ldr	r1, [r0, #196]	; 0xc4
    2038:	mov	r0, r4
    203c:	bl	0 <coda_type_record_field_set_type>
    2040:	ldr	r0, [r5, r8]
    2044:	mov	r1, r4
    2048:	ldr	r0, [r0, #276]	; 0x114
    204c:	bl	0 <coda_type_record_add_field>
    2050:	mov	r0, sl
    2054:	bl	0 <coda_type_record_field_new>
    2058:	mov	r4, r0
    205c:	ldr	r0, [r5, r8]
    2060:	ldr	r1, [r0, #200]	; 0xc8
    2064:	mov	r0, r4
    2068:	bl	0 <coda_type_record_field_set_type>
    206c:	ldr	r0, [r5, r8]
    2070:	mov	r1, r4
    2074:	ldr	r0, [r0, #276]	; 0x114
    2078:	bl	0 <coda_type_record_add_field>
    207c:	mov	r0, r6
    2080:	bl	0 <coda_type_record_field_new>
    2084:	mov	r4, r0
    2088:	ldr	r0, [r5, r8]
    208c:	ldr	r1, [r0, #204]	; 0xcc
    2090:	mov	r0, r4
    2094:	bl	0 <coda_type_record_field_set_type>
    2098:	ldr	r0, [r5, r8]
    209c:	mov	r1, r4
    20a0:	ldr	r0, [r0, #276]	; 0x114
    20a4:	bl	0 <coda_type_record_add_field>
    20a8:	mov	r0, r7
    20ac:	bl	0 <coda_type_record_field_new>
    20b0:	mov	r4, r0
    20b4:	ldr	r0, [r5, r8]
    20b8:	ldr	r1, [r0, #208]	; 0xd0
    20bc:	mov	r0, r4
    20c0:	bl	0 <coda_type_record_field_set_type>
    20c4:	ldr	r0, [r5, r8]
    20c8:	mov	r1, r4
    20cc:	ldr	r0, [r0, #276]	; 0x114
    20d0:	bl	0 <coda_type_record_add_field>
    20d4:	mov	r0, r9
    20d8:	bl	0 <coda_type_record_field_new>
    20dc:	mov	r4, r0
    20e0:	ldr	r0, [r5, r8]
    20e4:	ldr	r1, [r0, #212]	; 0xd4
    20e8:	mov	r0, r4
    20ec:	bl	0 <coda_type_record_field_set_type>
    20f0:	ldr	r0, [r5, r8]
    20f4:	mov	r1, r4
    20f8:	ldr	r0, [r0, #276]	; 0x114
    20fc:	bl	0 <coda_type_record_add_field>
    2100:	movw	r0, #0
    2104:	movt	r0, #0
    2108:	bl	0 <coda_type_record_field_new>
    210c:	mov	r4, r0
    2110:	ldr	r0, [r5, r8]
    2114:	ldr	r1, [r0, #216]	; 0xd8
    2118:	mov	r0, r4
    211c:	bl	0 <coda_type_record_field_set_type>
    2120:	mov	r0, r4
    2124:	bl	0 <coda_type_record_field_set_optional>
    2128:	ldr	r0, [r5, r8]
    212c:	mov	r1, r4
    2130:	ldr	r0, [r0, #276]	; 0x114
    2134:	bl	0 <coda_type_record_add_field>
    2138:	mov	r0, #9
    213c:	bl	0 <coda_type_array_new>
    2140:	ldr	r1, [r5, r8]
    2144:	str	r0, [r1, #280]	; 0x118
    2148:	mov	r1, #0
    214c:	bl	0 <coda_type_array_add_variable_dimension>
    2150:	ldr	r0, [r5, r8]
    2154:	ldr	r1, [r0, #276]	; 0x114
    2158:	ldr	r0, [r0, #280]	; 0x118
    215c:	bl	0 <coda_type_array_set_base_type>
    2160:	mov	r0, #9
    2164:	bl	0 <coda_type_record_new>
    2168:	ldr	r1, [r5, r8]
    216c:	str	r0, [r1, #292]	; 0x124
    2170:	movw	r0, #0
    2174:	movt	r0, #0
    2178:	bl	0 <coda_type_record_field_new>
    217c:	mov	r4, r0
    2180:	ldr	r0, [r5, r8]
    2184:	ldr	r1, [r0, #264]	; 0x108
    2188:	mov	r0, r4
    218c:	bl	0 <coda_type_record_field_set_type>
    2190:	ldr	r0, [r5, r8]
    2194:	mov	r1, r4
    2198:	ldr	r0, [r0, #292]	; 0x124
    219c:	bl	0 <coda_type_record_add_field>
    21a0:	movw	r0, #0
    21a4:	movt	r0, #0
    21a8:	bl	0 <coda_type_record_field_new>
    21ac:	mov	r4, r0
    21b0:	ldr	r0, [r5, r8]
    21b4:	ldr	r1, [r0, #272]	; 0x110
    21b8:	mov	r0, r4
    21bc:	bl	0 <coda_type_record_field_set_type>
    21c0:	ldr	r0, [r5, r8]
    21c4:	mov	r1, r4
    21c8:	ldr	r0, [r0, #292]	; 0x124
    21cc:	bl	0 <coda_type_record_add_field>
    21d0:	movw	r0, #0
    21d4:	movt	r0, #0
    21d8:	bl	0 <coda_type_record_field_new>
    21dc:	mov	r4, r0
    21e0:	ldr	r0, [r5, r8]
    21e4:	ldr	r1, [r0, #280]	; 0x118
    21e8:	mov	r0, r4
    21ec:	bl	0 <coda_type_record_field_set_type>
    21f0:	mov	r0, r4
    21f4:	bl	0 <coda_type_record_field_set_optional>
    21f8:	ldr	r0, [r5, r8]
    21fc:	mov	r1, r4
    2200:	ldr	r0, [r0, #292]	; 0x124
    2204:	bl	0 <coda_type_record_add_field>
    2208:	mov	r0, #9
    220c:	bl	0 <coda_type_array_new>
    2210:	ldr	r1, [r5, r8]
    2214:	str	r0, [r1, #288]	; 0x120
    2218:	mov	r1, #0
    221c:	bl	0 <coda_type_array_add_variable_dimension>
    2220:	ldr	r1, [r5, r8]
    2224:	ldr	r0, [r1, #288]	; 0x120
    2228:	ldr	r1, [r1, #292]	; 0x124
    222c:	bl	0 <coda_type_array_set_base_type>
    2230:	mov	r0, #9
    2234:	bl	0 <coda_type_record_new>
    2238:	ldr	r1, [r5, r8]
    223c:	str	r0, [r1, #296]	; 0x128
    2240:	movw	r0, #0
    2244:	movt	r0, #0
    2248:	bl	0 <coda_type_record_field_new>
    224c:	mov	r4, r0
    2250:	ldr	r0, [r5, r8]
    2254:	ldr	r1, [r0, #284]	; 0x11c
    2258:	mov	r0, r4
    225c:	bl	0 <coda_type_record_field_set_type>
    2260:	ldr	r0, [r5, r8]
    2264:	mov	r1, r4
    2268:	ldr	r0, [r0, #296]	; 0x128
    226c:	bl	0 <coda_type_record_add_field>
    2270:	movw	r0, #0
    2274:	movt	r0, #0
    2278:	bl	0 <coda_type_record_field_new>
    227c:	mov	r4, r0
    2280:	ldr	r0, [r5, r8]
    2284:	ldr	r1, [r0, #288]	; 0x120
    2288:	mov	r0, r4
    228c:	bl	0 <coda_type_record_field_set_type>
    2290:	ldr	r0, [r5, r8]
    2294:	mov	r1, r4
    2298:	mov	r4, #0
    229c:	ldr	r0, [r0, #296]	; 0x128
    22a0:	bl	0 <coda_type_record_add_field>
    22a4:	b	22d0 <sp3_init+0x2140>
    22a8:	movw	r1, #0
    22ac:	movw	r3, #0
    22b0:	mov	r0, #230	; 0xe6
    22b4:	mov	r2, #300	; 0x12c
    22b8:	mvn	r4, #0
    22bc:	movt	r1, #0
    22c0:	movt	r3, #0
    22c4:	str	r0, [sp]
    22c8:	mvn	r0, #0
    22cc:	bl	0 <coda_set_error>
    22d0:	mov	r0, r4
    22d4:	sub	sp, fp, #28
    22d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000022dc <read_file>:
    22dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    22e0:	add	fp, sp, #28
    22e4:	sub	sp, sp, #212	; 0xd4
    22e8:	sub	sp, sp, #1024	; 0x400
    22ec:	vmov.i32	q8, #0	; 0x00000000
    22f0:	add	r8, sp, #96	; 0x60
    22f4:	mov	r9, r0
    22f8:	movw	r1, #0
    22fc:	add	r0, r8, #8
    2300:	movt	r1, #0
    2304:	vst1.64	{d16-d17}, [r0]
    2308:	add	r0, r8, #24
    230c:	str	r0, [sp, #92]	; 0x5c
    2310:	vst1.64	{d16-d17}, [r0]
    2314:	mov	r0, #0
    2318:	str	r0, [sp, #148]	; 0x94
    231c:	str	r0, [sp, #144]	; 0x90
    2320:	str	r0, [sp, #136]	; 0x88
    2324:	str	r9, [sp, #100]	; 0x64
    2328:	ldr	r0, [r9]
    232c:	bl	0 <fopen>
    2330:	cmp	r0, #0
    2334:	str	r0, [sp, #96]	; 0x60
    2338:	beq	23d8 <read_file+0xfc>
    233c:	ldr	r4, [pc, #3808]	; 3224 <read_file+0xf48>
    2340:	mov	r5, r0
    2344:	bl	0 <__aeabi_read_tp>
    2348:	mov	r6, r0
    234c:	ldr	r0, [r0, r4]
    2350:	mov	r1, #0
    2354:	ldr	r0, [r0, #284]	; 0x11c
    2358:	bl	0 <coda_mem_record_new>
    235c:	str	r0, [sp, #104]	; 0x68
    2360:	ldr	r0, [r6, r4]
    2364:	mov	r1, #0
    2368:	ldr	r0, [r0, #288]	; 0x120
    236c:	bl	0 <coda_mem_array_new>
    2370:	str	r0, [sp, #108]	; 0x6c
    2374:	mov	r0, r5
    2378:	bl	0 <ftell>
    237c:	str	r0, [sp, #148]	; 0x94
    2380:	mov	r0, #1
    2384:	add	r6, sp, #216	; 0xd8
    2388:	str	r0, [sp, #144]	; 0x90
    238c:	mov	r0, r5
    2390:	mov	r1, r6
    2394:	bl	4a4c <get_line>
    2398:	mvn	r5, #0
    239c:	cmp	r0, #0
    23a0:	bmi	26c8 <read_file+0x3ec>
    23a4:	mov	r2, r0
    23a8:	cmp	r0, #59	; 0x3b
    23ac:	bgt	23f0 <read_file+0x114>
    23b0:	ldr	r0, [sp, #148]	; 0x94
    23b4:	ldr	r3, [sp, #144]	; 0x90
    23b8:	movw	r1, #0
    23bc:	movt	r1, #0
    23c0:	str	r0, [sp]
    23c4:	mvn	r0, #21
    23c8:	bl	0 <coda_set_error>
    23cc:	cmp	r5, #0
    23d0:	bne	26d0 <read_file+0x3f4>
    23d4:	b	2fc8 <read_file+0xcec>
    23d8:	ldr	r2, [r9]
    23dc:	movw	r1, #0
    23e0:	mvn	r0, #20
    23e4:	movt	r1, #0
    23e8:	bl	0 <coda_set_error>
    23ec:	b	26d8 <read_file+0x3fc>
    23f0:	ldrb	r0, [sp, #218]	; 0xda
    23f4:	mov	sl, #0
    23f8:	strb	sl, [sp, #153]	; 0x99
    23fc:	strb	r0, [sp, #140]	; 0x8c
    2400:	strb	r0, [sp, #152]	; 0x98
    2404:	bl	0 <__aeabi_read_tp>
    2408:	mov	r7, r0
    240c:	ldr	r0, [r0, r4]
    2410:	ldr	r2, [sp, #100]	; 0x64
    2414:	add	r5, sp, #152	; 0x98
    2418:	mov	r1, #0
    241c:	mov	r3, r5
    2420:	ldr	r0, [r0]
    2424:	bl	0 <coda_mem_string_new>
    2428:	mov	r2, r0
    242c:	ldr	r0, [sp, #104]	; 0x68
    2430:	movw	r1, #0
    2434:	mov	r3, #0
    2438:	movt	r1, #0
    243c:	bl	0 <coda_mem_record_add_field>
    2440:	add	r0, r6, #15
    2444:	orr	r1, r6, #3
    2448:	ldr	r2, [sp, #100]	; 0x64
    244c:	mov	r3, r5
    2450:	vld1.8	{d16-d17}, [r0]
    2454:	vld1.8	{d18-d19}, [r1]
    2458:	add	r0, r5, #12
    245c:	str	r1, [sp, #88]	; 0x58
    2460:	mov	r1, r5
    2464:	vst1.32	{d16-d17}, [r0]
    2468:	mov	r0, #28
    246c:	vst1.64	{d18-d19}, [r1], r0
    2470:	ldr	r0, [r7, r4]
    2474:	strb	sl, [r1]
    2478:	mov	r1, #0
    247c:	ldr	r0, [r0, #4]
    2480:	bl	0 <coda_mem_string_new>
    2484:	mov	r2, r0
    2488:	ldr	r0, [r7, r4]
    248c:	mov	r1, #0
    2490:	ldr	r0, [r0, #8]
    2494:	bl	0 <coda_mem_time_new>
    2498:	mov	r2, r0
    249c:	ldr	r0, [sp, #104]	; 0x68
    24a0:	movw	r1, #0
    24a4:	mov	r3, #0
    24a8:	movt	r1, #0
    24ac:	bl	0 <coda_mem_record_add_field>
    24b0:	add	r0, r6, #32
    24b4:	sub	r2, fp, #48	; 0x30
    24b8:	mov	r1, #7
    24bc:	mov	r3, #0
    24c0:	bl	0 <coda_ascii_parse_int64>
    24c4:	cmn	r0, #1
    24c8:	ble	2664 <read_file+0x388>
    24cc:	add	r5, sp, #268	; 0x10c
    24d0:	bl	0 <__aeabi_read_tp>
    24d4:	mov	r6, r0
    24d8:	ldr	r0, [r0, r4]
    24dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    24e0:	ldr	r2, [sp, #100]	; 0x64
    24e4:	mov	r1, #0
    24e8:	ldr	r0, [r0, #12]
    24ec:	bl	0 <coda_mem_int32_new>
    24f0:	mov	r2, r0
    24f4:	ldr	r0, [sp, #104]	; 0x68
    24f8:	movw	r1, #0
    24fc:	mov	r3, #0
    2500:	movt	r1, #0
    2504:	bl	0 <coda_mem_record_add_field>
    2508:	ldr	r0, [sp, #256]	; 0x100
    250c:	strb	sl, [sp, #157]	; 0x9d
    2510:	ldr	r2, [sp, #100]	; 0x64
    2514:	add	r7, sp, #152	; 0x98
    2518:	mov	r1, #0
    251c:	mov	r3, r7
    2520:	str	r0, [sp, #152]	; 0x98
    2524:	ldrb	r0, [sp, #260]	; 0x104
    2528:	strb	r0, [sp, #156]	; 0x9c
    252c:	ldr	r0, [r6, r4]
    2530:	ldr	r0, [r0, #16]
    2534:	bl	0 <coda_mem_string_new>
    2538:	mov	r2, r0
    253c:	ldr	r0, [sp, #104]	; 0x68
    2540:	movw	r1, #0
    2544:	mov	r3, #0
    2548:	movt	r1, #0
    254c:	bl	0 <coda_mem_record_add_field>
    2550:	ldr	r0, [sp, #262]	; 0x106
    2554:	strb	sl, [sp, #157]	; 0x9d
    2558:	ldr	r2, [sp, #100]	; 0x64
    255c:	mov	r1, #0
    2560:	mov	r3, r7
    2564:	str	r0, [sp, #152]	; 0x98
    2568:	ldrb	r0, [sp, #266]	; 0x10a
    256c:	strb	r0, [sp, #156]	; 0x9c
    2570:	ldr	r0, [r6, r4]
    2574:	ldr	r0, [r0, #20]
    2578:	bl	0 <coda_mem_string_new>
    257c:	mov	r2, r0
    2580:	ldr	r0, [sp, #104]	; 0x68
    2584:	movw	r1, #0
    2588:	mov	r3, #0
    258c:	movt	r1, #0
    2590:	bl	0 <coda_mem_record_add_field>
    2594:	ldrh	r0, [r5]
    2598:	strb	sl, [sp, #155]	; 0x9b
    259c:	ldr	r2, [sp, #100]	; 0x64
    25a0:	mov	r1, #0
    25a4:	mov	r3, r7
    25a8:	strh	r0, [sp, #152]	; 0x98
    25ac:	ldrb	r0, [sp, #270]	; 0x10e
    25b0:	strb	r0, [sp, #154]	; 0x9a
    25b4:	ldr	r0, [r6, r4]
    25b8:	ldr	r0, [r0, #24]
    25bc:	bl	0 <coda_mem_string_new>
    25c0:	mov	r2, r0
    25c4:	ldr	r0, [sp, #104]	; 0x68
    25c8:	movw	r1, #0
    25cc:	mov	r3, #0
    25d0:	movt	r1, #0
    25d4:	bl	0 <coda_mem_record_add_field>
    25d8:	ldr	r0, [sp, #272]	; 0x110
    25dc:	strb	sl, [sp, #156]	; 0x9c
    25e0:	ldr	r2, [sp, #100]	; 0x64
    25e4:	mov	r1, #0
    25e8:	mov	r3, r7
    25ec:	str	r0, [sp, #152]	; 0x98
    25f0:	ldr	r0, [r6, r4]
    25f4:	ldr	r0, [r0, #28]
    25f8:	bl	0 <coda_mem_string_new>
    25fc:	mov	r2, r0
    2600:	ldr	r0, [sp, #104]	; 0x68
    2604:	movw	r1, #0
    2608:	mov	r3, #0
    260c:	movt	r1, #0
    2610:	bl	0 <coda_mem_record_add_field>
    2614:	ldr	r0, [sp, #96]	; 0x60
    2618:	bl	0 <ftell>
    261c:	str	r0, [sp, #148]	; 0x94
    2620:	ldr	r1, [sp, #144]	; 0x90
    2624:	ldr	r0, [sp, #96]	; 0x60
    2628:	add	r1, r1, #1
    262c:	str	r1, [sp, #144]	; 0x90
    2630:	add	r1, sp, #216	; 0xd8
    2634:	bl	4a4c <get_line>
    2638:	cmp	r0, #0
    263c:	bmi	267c <read_file+0x3a0>
    2640:	mov	r2, r0
    2644:	cmp	r0, #59	; 0x3b
    2648:	bgt	268c <read_file+0x3b0>
    264c:	ldr	r0, [sp, #148]	; 0x94
    2650:	ldr	r3, [sp, #144]	; 0x90
    2654:	movw	r1, #0
    2658:	movt	r1, #0
    265c:	str	r0, [sp]
    2660:	b	26bc <read_file+0x3e0>
    2664:	ldr	r0, [sp, #148]	; 0x94
    2668:	ldr	r1, [sp, #144]	; 0x90
    266c:	add	r2, r0, #32
    2670:	movw	r0, #0
    2674:	movt	r0, #0
    2678:	bl	0 <coda_add_error_message>
    267c:	mvn	r5, #0
    2680:	cmp	r5, #0
    2684:	bne	26d0 <read_file+0x3f4>
    2688:	b	2fc8 <read_file+0xcec>
    268c:	movw	r1, #0
    2690:	add	r6, sp, #216	; 0xd8
    2694:	mov	r2, #3
    2698:	movt	r1, #0
    269c:	mov	r0, r6
    26a0:	bl	0 <bcmp>
    26a4:	cmp	r0, #0
    26a8:	beq	26e8 <read_file+0x40c>
    26ac:	ldr	r2, [sp, #144]	; 0x90
    26b0:	ldr	r3, [sp, #148]	; 0x94
    26b4:	movw	r1, #0
    26b8:	movt	r1, #0
    26bc:	mvn	r0, #21
    26c0:	bl	0 <coda_set_error>
    26c4:	mvn	r5, #0
    26c8:	cmp	r5, #0
    26cc:	beq	2fc8 <read_file+0xcec>
    26d0:	add	r0, sp, #96	; 0x60
    26d4:	bl	49ac <ingest_info_cleanup>
    26d8:	mvn	r5, #0
    26dc:	mov	r0, r5
    26e0:	sub	sp, fp, #28
    26e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    26e8:	ldr	r0, [sp, #88]	; 0x58
    26ec:	sub	r2, fp, #48	; 0x30
    26f0:	mov	r1, #4
    26f4:	mov	r3, #0
    26f8:	bl	0 <coda_ascii_parse_int64>
    26fc:	cmn	r0, #1
    2700:	ble	294c <read_file+0x670>
    2704:	bl	0 <__aeabi_read_tp>
    2708:	ldr	r0, [r0, r4]
    270c:	ldrsh	r3, [fp, #-48]	; 0xffffffd0
    2710:	ldr	r2, [sp, #100]	; 0x64
    2714:	mov	r1, #0
    2718:	ldr	r0, [r0, #32]
    271c:	bl	0 <coda_mem_int16_new>
    2720:	mov	r2, r0
    2724:	ldr	r0, [sp, #104]	; 0x68
    2728:	movw	r1, #0
    272c:	mov	r3, #0
    2730:	movt	r1, #0
    2734:	bl	0 <coda_mem_record_add_field>
    2738:	add	r0, r6, #8
    273c:	sub	r2, fp, #40	; 0x28
    2740:	mov	r1, #15
    2744:	mov	r3, #0
    2748:	bl	0 <coda_ascii_parse_double>
    274c:	cmn	r0, #1
    2750:	ble	295c <read_file+0x680>
    2754:	bl	0 <__aeabi_read_tp>
    2758:	ldr	r0, [r0, r4]
    275c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2760:	ldr	r2, [sp, #100]	; 0x64
    2764:	mov	r1, #0
    2768:	ldr	r0, [r0, #36]	; 0x24
    276c:	bl	0 <coda_mem_double_new>
    2770:	mov	r2, r0
    2774:	ldr	r0, [sp, #104]	; 0x68
    2778:	movw	r1, #0
    277c:	mov	r3, #0
    2780:	movt	r1, #0
    2784:	bl	0 <coda_mem_record_add_field>
    2788:	add	r0, r6, #24
    278c:	sub	r2, fp, #40	; 0x28
    2790:	mov	r1, #14
    2794:	mov	r3, #0
    2798:	bl	0 <coda_ascii_parse_double>
    279c:	cmn	r0, #1
    27a0:	ble	296c <read_file+0x690>
    27a4:	bl	0 <__aeabi_read_tp>
    27a8:	ldr	r0, [r0, r4]
    27ac:	vldr	d0, [fp, #-40]	; 0xffffffd8
    27b0:	ldr	r2, [sp, #100]	; 0x64
    27b4:	mov	r1, #0
    27b8:	ldr	r0, [r0, #40]	; 0x28
    27bc:	bl	0 <coda_mem_double_new>
    27c0:	mov	r2, r0
    27c4:	ldr	r0, [sp, #104]	; 0x68
    27c8:	movw	r1, #0
    27cc:	mov	r3, #0
    27d0:	movt	r1, #0
    27d4:	bl	0 <coda_mem_record_add_field>
    27d8:	add	r0, r6, #39	; 0x27
    27dc:	sub	r2, fp, #48	; 0x30
    27e0:	mov	r1, #5
    27e4:	mov	r3, #0
    27e8:	bl	0 <coda_ascii_parse_int64>
    27ec:	cmn	r0, #1
    27f0:	ble	297c <read_file+0x6a0>
    27f4:	bl	0 <__aeabi_read_tp>
    27f8:	ldr	r0, [r0, r4]
    27fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2800:	ldr	r2, [sp, #100]	; 0x64
    2804:	mov	r1, #0
    2808:	ldr	r0, [r0, #44]	; 0x2c
    280c:	bl	0 <coda_mem_int32_new>
    2810:	mov	r2, r0
    2814:	ldr	r0, [sp, #104]	; 0x68
    2818:	movw	r1, #0
    281c:	mov	r3, #0
    2820:	movt	r1, #0
    2824:	bl	0 <coda_mem_record_add_field>
    2828:	add	r0, r6, #45	; 0x2d
    282c:	sub	r2, fp, #40	; 0x28
    2830:	mov	r1, #15
    2834:	mov	r3, #0
    2838:	bl	0 <coda_ascii_parse_double>
    283c:	cmn	r0, #1
    2840:	ble	2a78 <read_file+0x79c>
    2844:	bl	0 <__aeabi_read_tp>
    2848:	ldr	r0, [r0, r4]
    284c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2850:	ldr	r2, [sp, #100]	; 0x64
    2854:	mov	r1, #0
    2858:	ldr	r0, [r0, #48]	; 0x30
    285c:	bl	0 <coda_mem_double_new>
    2860:	mov	r2, r0
    2864:	ldr	r0, [sp, #104]	; 0x68
    2868:	movw	r1, #0
    286c:	mov	r3, #0
    2870:	movt	r1, #0
    2874:	bl	0 <coda_mem_record_add_field>
    2878:	ldr	r0, [sp, #96]	; 0x60
    287c:	bl	0 <ftell>
    2880:	str	r0, [sp, #148]	; 0x94
    2884:	ldr	r1, [sp, #144]	; 0x90
    2888:	ldr	r0, [sp, #96]	; 0x60
    288c:	add	r1, r1, #1
    2890:	str	r1, [sp, #144]	; 0x90
    2894:	add	r1, sp, #216	; 0xd8
    2898:	bl	4a4c <get_line>
    289c:	cmp	r0, #0
    28a0:	bmi	267c <read_file+0x3a0>
    28a4:	mov	r2, r0
    28a8:	cmp	r0, #59	; 0x3b
    28ac:	ble	264c <read_file+0x370>
    28b0:	movw	r1, #0
    28b4:	add	r6, sp, #216	; 0xd8
    28b8:	mov	r2, #4
    28bc:	movt	r1, #0
    28c0:	mov	r0, r6
    28c4:	bl	0 <bcmp>
    28c8:	cmp	r0, #0
    28cc:	bne	26ac <read_file+0x3d0>
    28d0:	orr	r0, r6, #4
    28d4:	sub	r2, fp, #48	; 0x30
    28d8:	mov	r1, #2
    28dc:	mov	r3, #0
    28e0:	bl	0 <coda_ascii_parse_int64>
    28e4:	cmn	r0, #1
    28e8:	ble	2a88 <read_file+0x7ac>
    28ec:	bl	0 <__aeabi_read_tp>
    28f0:	mov	r6, r0
    28f4:	ldr	r0, [r0, r4]
    28f8:	ldrb	r3, [fp, #-48]	; 0xffffffd0
    28fc:	ldr	r2, [sp, #100]	; 0x64
    2900:	mov	r1, #0
    2904:	ldr	r0, [r0, #52]	; 0x34
    2908:	bl	0 <coda_mem_uint8_new>
    290c:	mov	r2, r0
    2910:	ldr	r0, [sp, #104]	; 0x68
    2914:	movw	r1, #0
    2918:	mov	r3, #0
    291c:	movt	r1, #0
    2920:	bl	0 <coda_mem_record_add_field>
    2924:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2928:	mov	r1, #0
    292c:	str	r0, [sp, #136]	; 0x88
    2930:	ldr	r0, [r6, r4]
    2934:	ldr	r0, [r0, #60]	; 0x3c
    2938:	bl	0 <coda_mem_array_new>
    293c:	mov	r7, #0
    2940:	add	r6, sp, #216	; 0xd8
    2944:	str	r0, [sp, #84]	; 0x54
    2948:	b	2998 <read_file+0x6bc>
    294c:	ldr	r0, [sp, #148]	; 0x94
    2950:	ldr	r1, [sp, #144]	; 0x90
    2954:	add	r2, r0, #3
    2958:	b	2670 <read_file+0x394>
    295c:	ldr	r0, [sp, #148]	; 0x94
    2960:	ldr	r1, [sp, #144]	; 0x90
    2964:	add	r2, r0, #8
    2968:	b	2670 <read_file+0x394>
    296c:	ldr	r0, [sp, #148]	; 0x94
    2970:	ldr	r1, [sp, #144]	; 0x90
    2974:	add	r2, r0, #24
    2978:	b	2670 <read_file+0x394>
    297c:	ldr	r0, [sp, #148]	; 0x94
    2980:	ldr	r1, [sp, #144]	; 0x90
    2984:	add	r2, r0, #39	; 0x27
    2988:	b	2670 <read_file+0x394>
    298c:	add	r7, r7, #1
    2990:	cmp	r7, #85	; 0x55
    2994:	beq	2a98 <read_file+0x7bc>
    2998:	movw	r1, #61681	; 0xf0f1
    299c:	uxtb	r0, r7
    29a0:	cmp	r7, #0
    29a4:	movt	r1, #61680	; 0xf0f0
    29a8:	umull	r1, r2, r0, r1
    29ac:	lsr	r1, r2, #4
    29b0:	add	r1, r1, r1, lsl #4
    29b4:	sub	sl, r0, r1
    29b8:	beq	2a1c <read_file+0x740>
    29bc:	tst	sl, #255	; 0xff
    29c0:	bne	2a1c <read_file+0x740>
    29c4:	ldr	r0, [sp, #96]	; 0x60
    29c8:	bl	0 <ftell>
    29cc:	str	r0, [sp, #148]	; 0x94
    29d0:	ldr	r1, [sp, #144]	; 0x90
    29d4:	ldr	r0, [sp, #96]	; 0x60
    29d8:	add	r1, r1, #1
    29dc:	str	r1, [sp, #144]	; 0x90
    29e0:	mov	r1, r6
    29e4:	bl	4a4c <get_line>
    29e8:	cmn	r0, #1
    29ec:	ble	2bc8 <read_file+0x8ec>
    29f0:	mov	r6, r0
    29f4:	cmp	r0, #59	; 0x3b
    29f8:	ble	2bd4 <read_file+0x8f8>
    29fc:	movw	r1, #0
    2a00:	add	r6, sp, #216	; 0xd8
    2a04:	mov	r2, #9
    2a08:	movt	r1, #0
    2a0c:	mov	r0, r6
    2a10:	bl	0 <bcmp>
    2a14:	cmp	r0, #0
    2a18:	bne	2bf0 <read_file+0x914>
    2a1c:	ldr	r0, [sp, #136]	; 0x88
    2a20:	cmp	r7, r0
    2a24:	bge	298c <read_file+0x6b0>
    2a28:	mov	r0, #0
    2a2c:	strb	r0, [sp, #155]	; 0x9b
    2a30:	add	r0, sl, sl, lsl #1
    2a34:	add	r0, r0, #9
    2a38:	uxtab	r0, r6, r0
    2a3c:	ldrb	r1, [r0, #2]
    2a40:	ldrh	r0, [r0]
    2a44:	strb	r1, [sp, #154]	; 0x9a
    2a48:	strh	r0, [sp, #152]	; 0x98
    2a4c:	bl	0 <__aeabi_read_tp>
    2a50:	ldr	r0, [r0, r4]
    2a54:	ldr	r2, [sp, #100]	; 0x64
    2a58:	mov	r1, #0
    2a5c:	add	r3, sp, #152	; 0x98
    2a60:	ldr	r0, [r0, #56]	; 0x38
    2a64:	bl	0 <coda_mem_string_new>
    2a68:	mov	r1, r0
    2a6c:	ldr	r0, [sp, #84]	; 0x54
    2a70:	bl	0 <coda_mem_array_add_element>
    2a74:	b	298c <read_file+0x6b0>
    2a78:	ldr	r0, [sp, #148]	; 0x94
    2a7c:	ldr	r1, [sp, #144]	; 0x90
    2a80:	add	r2, r0, #45	; 0x2d
    2a84:	b	2670 <read_file+0x394>
    2a88:	ldr	r0, [sp, #148]	; 0x94
    2a8c:	ldr	r1, [sp, #144]	; 0x90
    2a90:	add	r2, r0, #4
    2a94:	b	2670 <read_file+0x394>
    2a98:	ldr	r0, [sp, #104]	; 0x68
    2a9c:	ldr	r2, [sp, #84]	; 0x54
    2aa0:	movw	r1, #0
    2aa4:	mov	r3, #0
    2aa8:	mov	r7, #0
    2aac:	movt	r1, #0
    2ab0:	bl	0 <coda_mem_record_add_field>
    2ab4:	bl	0 <__aeabi_read_tp>
    2ab8:	ldr	r0, [r0, r4]
    2abc:	mov	r1, #0
    2ac0:	ldr	r0, [r0, #68]	; 0x44
    2ac4:	bl	0 <coda_mem_array_new>
    2ac8:	str	r0, [sp, #84]	; 0x54
    2acc:	b	2b08 <read_file+0x82c>
    2ad0:	bl	0 <__aeabi_read_tp>
    2ad4:	ldr	r0, [r0, r4]
    2ad8:	ldrsh	r3, [fp, #-48]	; 0xffffffd0
    2adc:	ldr	r2, [sp, #100]	; 0x64
    2ae0:	mov	r1, #0
    2ae4:	ldr	r0, [r0, #64]	; 0x40
    2ae8:	bl	0 <coda_mem_int16_new>
    2aec:	mov	r1, r0
    2af0:	ldr	r0, [sp, #84]	; 0x54
    2af4:	bl	0 <coda_mem_array_add_element>
    2af8:	add	r6, sp, #216	; 0xd8
    2afc:	add	r7, r7, #1
    2b00:	cmp	r7, #85	; 0x55
    2b04:	beq	2bfc <read_file+0x920>
    2b08:	movw	r1, #61681	; 0xf0f1
    2b0c:	uxtb	r0, r7
    2b10:	movt	r1, #61680	; 0xf0f0
    2b14:	umull	r1, r2, r0, r1
    2b18:	lsr	r1, r2, #4
    2b1c:	add	r1, r1, r1, lsl #4
    2b20:	subs	sl, r0, r1
    2b24:	bne	2b80 <read_file+0x8a4>
    2b28:	ldr	r0, [sp, #96]	; 0x60
    2b2c:	bl	0 <ftell>
    2b30:	str	r0, [sp, #148]	; 0x94
    2b34:	ldr	r1, [sp, #144]	; 0x90
    2b38:	ldr	r0, [sp, #96]	; 0x60
    2b3c:	add	r1, r1, #1
    2b40:	str	r1, [sp, #144]	; 0x90
    2b44:	mov	r1, r6
    2b48:	bl	4a4c <get_line>
    2b4c:	cmn	r0, #1
    2b50:	ble	2bc8 <read_file+0x8ec>
    2b54:	mov	r6, r0
    2b58:	cmp	r0, #59	; 0x3b
    2b5c:	ble	2bd4 <read_file+0x8f8>
    2b60:	movw	r1, #0
    2b64:	add	r6, sp, #216	; 0xd8
    2b68:	mov	r2, #9
    2b6c:	movt	r1, #0
    2b70:	mov	r0, r6
    2b74:	bl	0 <bcmp>
    2b78:	cmp	r0, #0
    2b7c:	bne	2bf0 <read_file+0x914>
    2b80:	ldr	r0, [sp, #136]	; 0x88
    2b84:	cmp	r7, r0
    2b88:	bge	2afc <read_file+0x820>
    2b8c:	add	r0, sl, sl, lsl #1
    2b90:	mov	r1, r6
    2b94:	sub	r2, fp, #48	; 0x30
    2b98:	mov	r3, #0
    2b9c:	add	r6, r0, #9
    2ba0:	uxtab	r0, r1, r6
    2ba4:	mov	r1, #3
    2ba8:	bl	0 <coda_ascii_parse_int64>
    2bac:	cmn	r0, #1
    2bb0:	bgt	2ad0 <read_file+0x7f4>
    2bb4:	ldr	r2, [sp, #148]	; 0x94
    2bb8:	ldr	r1, [sp, #144]	; 0x90
    2bbc:	uxtb	r0, r6
    2bc0:	add	r2, r2, r0
    2bc4:	b	2670 <read_file+0x394>
    2bc8:	ldr	r0, [sp, #84]	; 0x54
    2bcc:	bl	0 <coda_dynamic_type_delete>
    2bd0:	b	267c <read_file+0x3a0>
    2bd4:	ldr	r0, [sp, #84]	; 0x54
    2bd8:	bl	0 <coda_dynamic_type_delete>
    2bdc:	ldr	r0, [sp, #148]	; 0x94
    2be0:	ldr	r3, [sp, #144]	; 0x90
    2be4:	movw	r1, #0
    2be8:	mov	r2, r6
    2bec:	b	2658 <read_file+0x37c>
    2bf0:	ldr	r0, [sp, #84]	; 0x54
    2bf4:	bl	0 <coda_dynamic_type_delete>
    2bf8:	b	26ac <read_file+0x3d0>
    2bfc:	ldr	r0, [sp, #104]	; 0x68
    2c00:	ldr	r2, [sp, #84]	; 0x54
    2c04:	movw	r1, #0
    2c08:	mov	r3, #0
    2c0c:	movt	r1, #0
    2c10:	bl	0 <coda_mem_record_add_field>
    2c14:	ldr	r0, [sp, #96]	; 0x60
    2c18:	bl	0 <ftell>
    2c1c:	str	r0, [sp, #148]	; 0x94
    2c20:	ldr	r1, [sp, #144]	; 0x90
    2c24:	ldr	r0, [sp, #96]	; 0x60
    2c28:	add	r1, r1, #1
    2c2c:	str	r1, [sp, #144]	; 0x90
    2c30:	add	r1, sp, #216	; 0xd8
    2c34:	bl	4a4c <get_line>
    2c38:	cmp	r0, #0
    2c3c:	bmi	2c98 <read_file+0x9bc>
    2c40:	mov	r2, r0
    2c44:	cmp	r0, #59	; 0x3b
    2c48:	bgt	2c64 <read_file+0x988>
    2c4c:	ldr	r0, [sp, #148]	; 0x94
    2c50:	ldr	r3, [sp, #144]	; 0x90
    2c54:	movw	r1, #0
    2c58:	movt	r1, #0
    2c5c:	str	r0, [sp]
    2c60:	b	2c90 <read_file+0x9b4>
    2c64:	movw	r1, #0
    2c68:	add	r0, sp, #216	; 0xd8
    2c6c:	mov	r2, #3
    2c70:	movt	r1, #0
    2c74:	bl	0 <bcmp>
    2c78:	cmp	r0, #0
    2c7c:	beq	2ca0 <read_file+0x9c4>
    2c80:	ldr	r2, [sp, #144]	; 0x90
    2c84:	ldr	r3, [sp, #148]	; 0x94
    2c88:	movw	r1, #0
    2c8c:	movt	r1, #0
    2c90:	mvn	r0, #21
    2c94:	bl	0 <coda_set_error>
    2c98:	ldr	r4, [pc, #1412]	; 3224 <read_file+0xf48>
    2c9c:	b	267c <read_file+0x3a0>
    2ca0:	ldrh	r0, [sp, #219]	; 0xdb
    2ca4:	mov	sl, #0
    2ca8:	strb	sl, [sp, #154]	; 0x9a
    2cac:	strh	r0, [sp, #152]	; 0x98
    2cb0:	bl	0 <__aeabi_read_tp>
    2cb4:	ldr	r6, [pc, #1384]	; 3224 <read_file+0xf48>
    2cb8:	mov	r7, r0
    2cbc:	ldr	r2, [sp, #100]	; 0x64
    2cc0:	add	r4, sp, #152	; 0x98
    2cc4:	mov	r1, #0
    2cc8:	mov	r3, r4
    2ccc:	ldr	r0, [r0, r6]
    2cd0:	ldr	r0, [r0, #72]	; 0x48
    2cd4:	bl	0 <coda_mem_string_new>
    2cd8:	mov	r2, r0
    2cdc:	ldr	r0, [sp, #104]	; 0x68
    2ce0:	movw	r1, #0
    2ce4:	mov	r3, #0
    2ce8:	movt	r1, #0
    2cec:	bl	0 <coda_mem_record_add_field>
    2cf0:	ldrh	r0, [r5, #-43]	; 0xffffffd5
    2cf4:	strb	sl, [sp, #155]	; 0x9b
    2cf8:	ldr	r2, [sp, #100]	; 0x64
    2cfc:	mov	r1, #0
    2d00:	mov	r3, r4
    2d04:	strh	r0, [sp, #152]	; 0x98
    2d08:	ldrb	r0, [sp, #227]	; 0xe3
    2d0c:	strb	r0, [sp, #154]	; 0x9a
    2d10:	ldr	r0, [r7, r6]
    2d14:	ldr	r0, [r0, #76]	; 0x4c
    2d18:	bl	0 <coda_mem_string_new>
    2d1c:	mov	r2, r0
    2d20:	ldr	r0, [sp, #104]	; 0x68
    2d24:	movw	r1, #0
    2d28:	mov	r3, #0
    2d2c:	movt	r1, #0
    2d30:	bl	0 <coda_mem_record_add_field>
    2d34:	ldr	r0, [sp, #96]	; 0x60
    2d38:	bl	0 <ftell>
    2d3c:	str	r0, [sp, #148]	; 0x94
    2d40:	ldr	r1, [sp, #144]	; 0x90
    2d44:	ldr	r0, [sp, #96]	; 0x60
    2d48:	add	r1, r1, #1
    2d4c:	str	r1, [sp, #144]	; 0x90
    2d50:	add	r1, sp, #216	; 0xd8
    2d54:	bl	4a4c <get_line>
    2d58:	cmp	r0, #0
    2d5c:	bmi	2c98 <read_file+0x9bc>
    2d60:	mov	r2, r0
    2d64:	cmp	r0, #59	; 0x3b
    2d68:	ble	2c4c <read_file+0x970>
    2d6c:	movw	r1, #0
    2d70:	add	r0, sp, #216	; 0xd8
    2d74:	mov	r2, #3
    2d78:	movt	r1, #0
    2d7c:	bl	0 <bcmp>
    2d80:	cmp	r0, #0
    2d84:	bne	2c80 <read_file+0x9a4>
    2d88:	ldr	r0, [sp, #96]	; 0x60
    2d8c:	bl	0 <ftell>
    2d90:	str	r0, [sp, #148]	; 0x94
    2d94:	ldr	r1, [sp, #144]	; 0x90
    2d98:	ldr	r0, [sp, #96]	; 0x60
    2d9c:	add	r1, r1, #1
    2da0:	str	r1, [sp, #144]	; 0x90
    2da4:	add	r1, sp, #216	; 0xd8
    2da8:	bl	4a4c <get_line>
    2dac:	cmp	r0, #0
    2db0:	bmi	2c98 <read_file+0x9bc>
    2db4:	mov	r2, r0
    2db8:	cmp	r0, #59	; 0x3b
    2dbc:	ble	2c4c <read_file+0x970>
    2dc0:	movw	r1, #0
    2dc4:	add	r6, sp, #216	; 0xd8
    2dc8:	mov	r2, #3
    2dcc:	movt	r1, #0
    2dd0:	mov	r0, r6
    2dd4:	bl	0 <bcmp>
    2dd8:	cmp	r0, #0
    2ddc:	bne	2c80 <read_file+0x9a4>
    2de0:	ldr	r0, [sp, #88]	; 0x58
    2de4:	sub	r2, fp, #40	; 0x28
    2de8:	mov	r1, #10
    2dec:	mov	r3, #0
    2df0:	bl	0 <coda_ascii_parse_double>
    2df4:	cmn	r0, #1
    2df8:	ble	491c <read_file+0x2640>
    2dfc:	bl	0 <__aeabi_read_tp>
    2e00:	ldr	r1, [pc, #1052]	; 3224 <read_file+0xf48>
    2e04:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2e08:	ldr	r2, [sp, #100]	; 0x64
    2e0c:	ldr	r0, [r0, r1]
    2e10:	mov	r1, #0
    2e14:	ldr	r0, [r0, #80]	; 0x50
    2e18:	bl	0 <coda_mem_double_new>
    2e1c:	mov	r2, r0
    2e20:	ldr	r0, [sp, #104]	; 0x68
    2e24:	movw	r1, #0
    2e28:	mov	r3, #0
    2e2c:	movt	r1, #0
    2e30:	bl	0 <coda_mem_record_add_field>
    2e34:	add	r0, r6, #14
    2e38:	sub	r2, fp, #40	; 0x28
    2e3c:	mov	r1, #12
    2e40:	mov	r3, #0
    2e44:	bl	0 <coda_ascii_parse_double>
    2e48:	cmn	r0, #1
    2e4c:	ble	492c <read_file+0x2650>
    2e50:	bl	0 <__aeabi_read_tp>
    2e54:	ldr	r1, [pc, #968]	; 3224 <read_file+0xf48>
    2e58:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2e5c:	ldr	r2, [sp, #100]	; 0x64
    2e60:	ldr	r0, [r0, r1]
    2e64:	mov	r1, #0
    2e68:	ldr	r0, [r0, #84]	; 0x54
    2e6c:	bl	0 <coda_mem_double_new>
    2e70:	mov	r2, r0
    2e74:	ldr	r0, [sp, #104]	; 0x68
    2e78:	movw	r1, #0
    2e7c:	mov	r3, #0
    2e80:	movt	r1, #0
    2e84:	bl	0 <coda_mem_record_add_field>
    2e88:	ldr	r0, [sp, #96]	; 0x60
    2e8c:	bl	0 <ftell>
    2e90:	str	r0, [sp, #148]	; 0x94
    2e94:	ldr	r1, [sp, #144]	; 0x90
    2e98:	ldr	r0, [sp, #96]	; 0x60
    2e9c:	add	r1, r1, #1
    2ea0:	str	r1, [sp, #144]	; 0x90
    2ea4:	add	r1, sp, #216	; 0xd8
    2ea8:	bl	4a4c <get_line>
    2eac:	cmp	r0, #0
    2eb0:	bmi	2c98 <read_file+0x9bc>
    2eb4:	ldr	r0, [sp, #96]	; 0x60
    2eb8:	bl	0 <ftell>
    2ebc:	str	r0, [sp, #148]	; 0x94
    2ec0:	ldr	r1, [sp, #144]	; 0x90
    2ec4:	ldr	r0, [sp, #96]	; 0x60
    2ec8:	add	r1, r1, #1
    2ecc:	str	r1, [sp, #144]	; 0x90
    2ed0:	add	r1, sp, #216	; 0xd8
    2ed4:	bl	4a4c <get_line>
    2ed8:	cmp	r0, #0
    2edc:	bmi	2c98 <read_file+0x9bc>
    2ee0:	ldr	r0, [sp, #96]	; 0x60
    2ee4:	bl	0 <ftell>
    2ee8:	str	r0, [sp, #148]	; 0x94
    2eec:	ldr	r1, [sp, #144]	; 0x90
    2ef0:	ldr	r0, [sp, #96]	; 0x60
    2ef4:	add	r1, r1, #1
    2ef8:	str	r1, [sp, #144]	; 0x90
    2efc:	add	r1, sp, #216	; 0xd8
    2f00:	bl	4a4c <get_line>
    2f04:	cmp	r0, #0
    2f08:	bmi	2c98 <read_file+0x9bc>
    2f0c:	ldr	r0, [sp, #96]	; 0x60
    2f10:	bl	0 <ftell>
    2f14:	str	r0, [sp, #148]	; 0x94
    2f18:	ldr	r1, [sp, #144]	; 0x90
    2f1c:	ldr	r0, [sp, #96]	; 0x60
    2f20:	add	r1, r1, #1
    2f24:	str	r1, [sp, #144]	; 0x90
    2f28:	add	r1, sp, #216	; 0xd8
    2f2c:	bl	4a4c <get_line>
    2f30:	cmp	r0, #0
    2f34:	bmi	2c98 <read_file+0x9bc>
    2f38:	ldr	r0, [sp, #96]	; 0x60
    2f3c:	bl	0 <ftell>
    2f40:	str	r0, [sp, #148]	; 0x94
    2f44:	ldr	r1, [sp, #144]	; 0x90
    2f48:	ldr	r0, [sp, #96]	; 0x60
    2f4c:	add	r1, r1, #1
    2f50:	str	r1, [sp, #144]	; 0x90
    2f54:	add	r1, sp, #216	; 0xd8
    2f58:	bl	4a4c <get_line>
    2f5c:	cmp	r0, #0
    2f60:	bmi	2c98 <read_file+0x9bc>
    2f64:	ldr	r0, [sp, #96]	; 0x60
    2f68:	bl	0 <ftell>
    2f6c:	str	r0, [sp, #148]	; 0x94
    2f70:	ldr	r1, [sp, #144]	; 0x90
    2f74:	ldr	r0, [sp, #96]	; 0x60
    2f78:	add	r1, r1, #1
    2f7c:	str	r1, [sp, #144]	; 0x90
    2f80:	add	r1, sp, #216	; 0xd8
    2f84:	bl	4a4c <get_line>
    2f88:	ldr	r4, [pc, #660]	; 3224 <read_file+0xf48>
    2f8c:	cmp	r0, #0
    2f90:	mvn	r5, #0
    2f94:	bmi	26c8 <read_file+0x3ec>
    2f98:	ldr	r0, [sp, #96]	; 0x60
    2f9c:	bl	0 <ftell>
    2fa0:	str	r0, [sp, #148]	; 0x94
    2fa4:	ldr	r1, [sp, #144]	; 0x90
    2fa8:	ldr	r0, [sp, #96]	; 0x60
    2fac:	add	r1, r1, #1
    2fb0:	str	r1, [sp, #144]	; 0x90
    2fb4:	add	r1, sp, #216	; 0xd8
    2fb8:	bl	4a4c <get_line>
    2fbc:	asr	r5, r0, #31
    2fc0:	cmp	r5, #0
    2fc4:	bne	26d0 <read_file+0x3f4>
    2fc8:	ldr	r0, [sp, #96]	; 0x60
    2fcc:	bl	0 <ftell>
    2fd0:	str	r0, [sp, #148]	; 0x94
    2fd4:	ldr	r1, [sp, #144]	; 0x90
    2fd8:	ldr	r0, [sp, #96]	; 0x60
    2fdc:	add	r1, r1, #1
    2fe0:	str	r1, [sp, #144]	; 0x90
    2fe4:	add	r1, sp, #216	; 0xd8
    2fe8:	bl	4a4c <get_line>
    2fec:	cmp	r0, #0
    2ff0:	bmi	26d0 <read_file+0x3f4>
    2ff4:	movw	r1, #0
    2ff8:	add	sl, sp, #216	; 0xd8
    2ffc:	mov	r6, r0
    3000:	mov	r2, #3
    3004:	movt	r1, #0
    3008:	mov	r0, sl
    300c:	bl	0 <bcmp>
    3010:	cmp	r0, #0
    3014:	beq	46b0 <read_file+0x23d4>
    3018:	add	r0, sl, #72	; 0x48
    301c:	add	r1, r8, #32
    3020:	add	r8, sp, #152	; 0x98
    3024:	sub	r7, fp, #40	; 0x28
    3028:	sub	r5, fp, #48	; 0x30
    302c:	str	r0, [sp, #12]
    3030:	add	r0, sl, #63	; 0x3f
    3034:	str	r1, [sp, #8]
    3038:	str	r0, [sp, #16]
    303c:	add	r0, sl, #54	; 0x36
    3040:	str	r0, [sp, #20]
    3044:	add	r0, sl, #45	; 0x2d
    3048:	str	r0, [sp, #24]
    304c:	add	r0, sl, #36	; 0x24
    3050:	str	r0, [sp, #28]
    3054:	add	r0, sl, #27
    3058:	str	r0, [sp, #32]
    305c:	add	r0, sl, #19
    3060:	str	r0, [sp, #36]	; 0x24
    3064:	add	r0, sl, #14
    3068:	str	r0, [sp, #40]	; 0x28
    306c:	add	r0, sl, #9
    3070:	str	r0, [sp, #44]	; 0x2c
    3074:	orr	r0, sl, #3
    3078:	str	r0, [sp, #52]	; 0x34
    307c:	add	r0, sl, #70	; 0x46
    3080:	str	r0, [sp, #56]	; 0x38
    3084:	add	r0, sl, #67	; 0x43
    3088:	str	r0, [sp, #60]	; 0x3c
    308c:	add	r0, sl, #64	; 0x40
    3090:	str	r0, [sp, #64]	; 0x40
    3094:	add	r0, sl, #61	; 0x3d
    3098:	str	r0, [sp, #68]	; 0x44
    309c:	add	r0, sl, #46	; 0x2e
    30a0:	str	r0, [sp, #72]	; 0x48
    30a4:	add	r0, sl, #32
    30a8:	str	r0, [sp, #76]	; 0x4c
    30ac:	add	r0, sl, #18
    30b0:	str	r0, [sp, #80]	; 0x50
    30b4:	orr	r0, sl, #4
    30b8:	str	r0, [sp, #88]	; 0x58
    30bc:	orr	r0, sl, #1
    30c0:	str	r0, [sp, #84]	; 0x54
    30c4:	ldrb	r0, [sp, #216]	; 0xd8
    30c8:	cmp	r0, #86	; 0x56
    30cc:	beq	342c <read_file+0x1150>
    30d0:	cmp	r0, #80	; 0x50
    30d4:	beq	3228 <read_file+0xf4c>
    30d8:	cmp	r0, #42	; 0x2a
    30dc:	bne	4764 <read_file+0x2488>
    30e0:	ldr	r0, [sp, #112]	; 0x70
    30e4:	mov	r5, r7
    30e8:	mov	r7, r8
    30ec:	cmp	r0, #0
    30f0:	beq	3144 <read_file+0xe68>
    30f4:	ldr	r2, [sp, #116]	; 0x74
    30f8:	movw	r1, #0
    30fc:	mov	r3, #0
    3100:	movt	r1, #0
    3104:	bl	0 <coda_mem_record_add_field>
    3108:	mov	r8, #0
    310c:	str	r8, [sp, #116]	; 0x74
    3110:	ldr	r2, [sp, #124]	; 0x7c
    3114:	cmp	r2, #0
    3118:	beq	3134 <read_file+0xe58>
    311c:	ldr	r0, [sp, #112]	; 0x70
    3120:	movw	r1, #0
    3124:	mov	r3, #0
    3128:	movt	r1, #0
    312c:	bl	0 <coda_mem_record_add_field>
    3130:	str	r8, [sp, #124]	; 0x7c
    3134:	ldr	r0, [sp, #108]	; 0x6c
    3138:	ldr	r1, [sp, #112]	; 0x70
    313c:	bl	0 <coda_mem_array_add_element>
    3140:	str	r8, [sp, #112]	; 0x70
    3144:	bl	0 <__aeabi_read_tp>
    3148:	ldr	r0, [r0, r4]
    314c:	mov	r1, #0
    3150:	ldr	r0, [r0, #272]	; 0x110
    3154:	bl	0 <coda_mem_array_new>
    3158:	str	r0, [sp, #116]	; 0x74
    315c:	ldrb	r0, [sp, #140]	; 0x8c
    3160:	cmp	r0, #86	; 0x56
    3164:	bne	3180 <read_file+0xea4>
    3168:	bl	0 <__aeabi_read_tp>
    316c:	ldr	r0, [r0, r4]
    3170:	mov	r1, #0
    3174:	ldr	r0, [r0, #280]	; 0x118
    3178:	bl	0 <coda_mem_array_new>
    317c:	str	r0, [sp, #124]	; 0x7c
    3180:	bl	0 <__aeabi_read_tp>
    3184:	ldr	r0, [r0, r4]
    3188:	mov	r1, #0
    318c:	ldr	r0, [r0, #292]	; 0x124
    3190:	bl	0 <coda_mem_record_new>
    3194:	cmp	r6, #30
    3198:	str	r0, [sp, #112]	; 0x70
    319c:	ble	4778 <read_file+0x249c>
    31a0:	ldr	r0, [sp, #52]	; 0x34
    31a4:	mov	r1, #12
    31a8:	mov	r8, r7
    31ac:	vld1.8	{d16-d17}, [r0], r1
    31b0:	mov	r1, #28
    31b4:	vld1.8	{d18-d19}, [r0]
    31b8:	mov	r0, r7
    31bc:	vst1.64	{d16-d17}, [r0], r1
    31c0:	mov	r1, #0
    31c4:	strb	r1, [r0]
    31c8:	add	r0, r7, #12
    31cc:	vst1.32	{d18-d19}, [r0]
    31d0:	bl	0 <__aeabi_read_tp>
    31d4:	mov	r6, r0
    31d8:	ldr	r0, [r0, r4]
    31dc:	ldr	r2, [sp, #100]	; 0x64
    31e0:	mov	r1, #0
    31e4:	mov	r3, r7
    31e8:	ldr	r0, [r0, #260]	; 0x104
    31ec:	bl	0 <coda_mem_string_new>
    31f0:	mov	r2, r0
    31f4:	ldr	r0, [r6, r4]
    31f8:	mov	r1, #0
    31fc:	ldr	r0, [r0, #264]	; 0x108
    3200:	bl	0 <coda_mem_time_new>
    3204:	mov	r2, r0
    3208:	ldr	r0, [sp, #112]	; 0x70
    320c:	movw	r1, #0
    3210:	mov	r3, #0
    3214:	movt	r1, #0
    3218:	bl	0 <coda_mem_record_add_field>
    321c:	mov	r7, r5
    3220:	b	3938 <read_file+0x165c>
    3224:	.word	0x00000000
    3228:	ldr	r0, [sp, #116]	; 0x74
    322c:	cmp	r0, #0
    3230:	beq	47d4 <read_file+0x24f8>
    3234:	bl	0 <__aeabi_read_tp>
    3238:	ldr	r0, [r0, r4]
    323c:	mov	r1, #0
    3240:	ldr	r0, [r0, #268]	; 0x10c
    3244:	bl	0 <coda_mem_record_new>
    3248:	cmp	r6, #59	; 0x3b
    324c:	str	r0, [sp, #120]	; 0x78
    3250:	ble	4778 <read_file+0x249c>
    3254:	ldr	r1, [sp, #84]	; 0x54
    3258:	mov	r2, #0
    325c:	strb	r2, [sp, #155]	; 0x9b
    3260:	ldrh	r0, [r1]
    3264:	ldrb	r1, [r1, #2]
    3268:	strb	r1, [sp, #154]	; 0x9a
    326c:	strh	r0, [sp, #152]	; 0x98
    3270:	bl	0 <__aeabi_read_tp>
    3274:	ldr	r0, [r0, r4]
    3278:	ldr	r2, [sp, #100]	; 0x64
    327c:	mov	r1, #0
    3280:	mov	r3, r8
    3284:	ldr	r0, [r0, #88]	; 0x58
    3288:	bl	0 <coda_mem_string_new>
    328c:	mov	r2, r0
    3290:	ldr	r0, [sp, #120]	; 0x78
    3294:	movw	r1, #0
    3298:	mov	r3, #0
    329c:	movt	r1, #0
    32a0:	bl	0 <coda_mem_record_add_field>
    32a4:	ldr	r0, [sp, #88]	; 0x58
    32a8:	mov	r1, #14
    32ac:	mov	r2, r7
    32b0:	mov	r3, #0
    32b4:	bl	0 <coda_ascii_parse_double>
    32b8:	cmn	r0, #1
    32bc:	ble	4794 <read_file+0x24b8>
    32c0:	bl	0 <__aeabi_read_tp>
    32c4:	ldr	r0, [r0, r4]
    32c8:	vldr	d0, [fp, #-40]	; 0xffffffd8
    32cc:	ldr	r2, [sp, #100]	; 0x64
    32d0:	mov	r1, #0
    32d4:	ldr	r0, [r0, #92]	; 0x5c
    32d8:	bl	0 <coda_mem_double_new>
    32dc:	mov	r2, r0
    32e0:	ldr	r0, [sp, #120]	; 0x78
    32e4:	movw	r1, #0
    32e8:	mov	r3, #0
    32ec:	movt	r1, #0
    32f0:	bl	0 <coda_mem_record_add_field>
    32f4:	ldr	r0, [sp, #80]	; 0x50
    32f8:	mov	r1, #14
    32fc:	mov	r2, r7
    3300:	mov	r3, #0
    3304:	bl	0 <coda_ascii_parse_double>
    3308:	cmn	r0, #1
    330c:	ble	47a4 <read_file+0x24c8>
    3310:	bl	0 <__aeabi_read_tp>
    3314:	ldr	r0, [r0, r4]
    3318:	vldr	d0, [fp, #-40]	; 0xffffffd8
    331c:	ldr	r2, [sp, #100]	; 0x64
    3320:	mov	r1, #0
    3324:	ldr	r0, [r0, #96]	; 0x60
    3328:	bl	0 <coda_mem_double_new>
    332c:	mov	r2, r0
    3330:	ldr	r0, [sp, #120]	; 0x78
    3334:	movw	r1, #0
    3338:	mov	r3, #0
    333c:	movt	r1, #0
    3340:	bl	0 <coda_mem_record_add_field>
    3344:	ldr	r0, [sp, #76]	; 0x4c
    3348:	mov	r1, #14
    334c:	mov	r2, r7
    3350:	mov	r3, #0
    3354:	bl	0 <coda_ascii_parse_double>
    3358:	cmn	r0, #1
    335c:	ble	47b4 <read_file+0x24d8>
    3360:	bl	0 <__aeabi_read_tp>
    3364:	ldr	r0, [r0, r4]
    3368:	vldr	d0, [fp, #-40]	; 0xffffffd8
    336c:	ldr	r2, [sp, #100]	; 0x64
    3370:	mov	r1, #0
    3374:	ldr	r0, [r0, #100]	; 0x64
    3378:	bl	0 <coda_mem_double_new>
    337c:	mov	r2, r0
    3380:	ldr	r0, [sp, #120]	; 0x78
    3384:	movw	r1, #0
    3388:	mov	r3, #0
    338c:	movt	r1, #0
    3390:	bl	0 <coda_mem_record_add_field>
    3394:	ldr	r0, [sp, #72]	; 0x48
    3398:	mov	r1, #14
    339c:	mov	r2, r7
    33a0:	mov	r3, #0
    33a4:	bl	0 <coda_ascii_parse_double>
    33a8:	cmn	r0, #1
    33ac:	ble	47c4 <read_file+0x24e8>
    33b0:	bl	0 <__aeabi_read_tp>
    33b4:	ldr	r0, [r0, r4]
    33b8:	vldr	d0, [fp, #-40]	; 0xffffffd8
    33bc:	ldr	r2, [sp, #100]	; 0x64
    33c0:	mov	r1, #0
    33c4:	ldr	r0, [r0, #104]	; 0x68
    33c8:	bl	0 <coda_mem_double_new>
    33cc:	mov	r2, r0
    33d0:	ldr	r0, [sp, #120]	; 0x78
    33d4:	movw	r1, #0
    33d8:	mov	r3, #0
    33dc:	movt	r1, #0
    33e0:	bl	0 <coda_mem_record_add_field>
    33e4:	cmp	r6, #64	; 0x40
    33e8:	blt	363c <read_file+0x1360>
    33ec:	ldr	r0, [sp, #68]	; 0x44
    33f0:	movw	r1, #0
    33f4:	mov	r2, #2
    33f8:	movt	r1, #0
    33fc:	bl	0 <bcmp>
    3400:	cmp	r0, #0
    3404:	beq	363c <read_file+0x1360>
    3408:	ldr	r0, [sp, #68]	; 0x44
    340c:	mov	r1, #2
    3410:	mov	r2, r5
    3414:	mov	r3, #0
    3418:	bl	0 <coda_ascii_parse_int64>
    341c:	cmp	r0, #0
    3420:	bmi	4810 <read_file+0x2534>
    3424:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3428:	b	3648 <read_file+0x136c>
    342c:	ldrb	r0, [sp, #140]	; 0x8c
    3430:	cmp	r0, #86	; 0x56
    3434:	bne	47e8 <read_file+0x250c>
    3438:	ldr	r0, [sp, #124]	; 0x7c
    343c:	cmp	r0, #0
    3440:	beq	47fc <read_file+0x2520>
    3444:	bl	0 <__aeabi_read_tp>
    3448:	ldr	r0, [r0, r4]
    344c:	mov	r1, #0
    3450:	ldr	r0, [r0, #276]	; 0x114
    3454:	bl	0 <coda_mem_record_new>
    3458:	cmp	r6, #59	; 0x3b
    345c:	str	r0, [sp, #128]	; 0x80
    3460:	ble	4778 <read_file+0x249c>
    3464:	ldr	r1, [sp, #84]	; 0x54
    3468:	mov	r2, #0
    346c:	strb	r2, [sp, #155]	; 0x9b
    3470:	ldrh	r0, [r1]
    3474:	ldrb	r1, [r1, #2]
    3478:	strb	r1, [sp, #154]	; 0x9a
    347c:	strh	r0, [sp, #152]	; 0x98
    3480:	bl	0 <__aeabi_read_tp>
    3484:	ldr	r0, [r0, r4]
    3488:	ldr	r2, [sp, #100]	; 0x64
    348c:	mov	r1, #0
    3490:	mov	r3, r8
    3494:	ldr	r0, [r0, #88]	; 0x58
    3498:	bl	0 <coda_mem_string_new>
    349c:	mov	r2, r0
    34a0:	ldr	r0, [sp, #128]	; 0x80
    34a4:	movw	r1, #0
    34a8:	mov	r3, #0
    34ac:	movt	r1, #0
    34b0:	bl	0 <coda_mem_record_add_field>
    34b4:	ldr	r0, [sp, #88]	; 0x58
    34b8:	mov	r1, #14
    34bc:	mov	r2, r7
    34c0:	mov	r3, #0
    34c4:	bl	0 <coda_ascii_parse_double>
    34c8:	cmn	r0, #1
    34cc:	ble	4794 <read_file+0x24b8>
    34d0:	bl	0 <__aeabi_read_tp>
    34d4:	ldr	r0, [r0, r4]
    34d8:	vldr	d0, [fp, #-40]	; 0xffffffd8
    34dc:	ldr	r2, [sp, #100]	; 0x64
    34e0:	mov	r1, #0
    34e4:	ldr	r0, [r0, #184]	; 0xb8
    34e8:	bl	0 <coda_mem_double_new>
    34ec:	mov	r2, r0
    34f0:	ldr	r0, [sp, #128]	; 0x80
    34f4:	movw	r1, #0
    34f8:	mov	r3, #0
    34fc:	movt	r1, #0
    3500:	bl	0 <coda_mem_record_add_field>
    3504:	ldr	r0, [sp, #80]	; 0x50
    3508:	mov	r1, #14
    350c:	mov	r2, r7
    3510:	mov	r3, #0
    3514:	bl	0 <coda_ascii_parse_double>
    3518:	cmn	r0, #1
    351c:	ble	47a4 <read_file+0x24c8>
    3520:	bl	0 <__aeabi_read_tp>
    3524:	ldr	r0, [r0, r4]
    3528:	vldr	d0, [fp, #-40]	; 0xffffffd8
    352c:	ldr	r2, [sp, #100]	; 0x64
    3530:	mov	r1, #0
    3534:	ldr	r0, [r0, #188]	; 0xbc
    3538:	bl	0 <coda_mem_double_new>
    353c:	mov	r2, r0
    3540:	ldr	r0, [sp, #128]	; 0x80
    3544:	movw	r1, #0
    3548:	mov	r3, #0
    354c:	movt	r1, #0
    3550:	bl	0 <coda_mem_record_add_field>
    3554:	ldr	r0, [sp, #76]	; 0x4c
    3558:	mov	r1, #14
    355c:	mov	r2, r7
    3560:	mov	r3, #0
    3564:	bl	0 <coda_ascii_parse_double>
    3568:	cmn	r0, #1
    356c:	ble	47b4 <read_file+0x24d8>
    3570:	bl	0 <__aeabi_read_tp>
    3574:	ldr	r0, [r0, r4]
    3578:	vldr	d0, [fp, #-40]	; 0xffffffd8
    357c:	ldr	r2, [sp, #100]	; 0x64
    3580:	mov	r1, #0
    3584:	ldr	r0, [r0, #192]	; 0xc0
    3588:	bl	0 <coda_mem_double_new>
    358c:	mov	r2, r0
    3590:	ldr	r0, [sp, #128]	; 0x80
    3594:	movw	r1, #0
    3598:	mov	r3, #0
    359c:	movt	r1, #0
    35a0:	bl	0 <coda_mem_record_add_field>
    35a4:	ldr	r0, [sp, #72]	; 0x48
    35a8:	mov	r1, #14
    35ac:	mov	r2, r7
    35b0:	mov	r3, #0
    35b4:	bl	0 <coda_ascii_parse_double>
    35b8:	cmn	r0, #1
    35bc:	ble	47c4 <read_file+0x24e8>
    35c0:	bl	0 <__aeabi_read_tp>
    35c4:	ldr	r0, [r0, r4]
    35c8:	vldr	d0, [fp, #-40]	; 0xffffffd8
    35cc:	ldr	r2, [sp, #100]	; 0x64
    35d0:	mov	r1, #0
    35d4:	ldr	r0, [r0, #196]	; 0xc4
    35d8:	bl	0 <coda_mem_double_new>
    35dc:	mov	r2, r0
    35e0:	ldr	r0, [sp, #128]	; 0x80
    35e4:	movw	r1, #0
    35e8:	mov	r3, #0
    35ec:	movt	r1, #0
    35f0:	bl	0 <coda_mem_record_add_field>
    35f4:	cmp	r6, #63	; 0x3f
    35f8:	blt	3940 <read_file+0x1664>
    35fc:	ldr	r0, [sp, #68]	; 0x44
    3600:	movw	r1, #0
    3604:	mov	r2, #2
    3608:	movt	r1, #0
    360c:	bl	0 <bcmp>
    3610:	cmp	r0, #0
    3614:	beq	3940 <read_file+0x1664>
    3618:	ldr	r0, [sp, #68]	; 0x44
    361c:	mov	r1, #2
    3620:	mov	r2, r5
    3624:	mov	r3, #0
    3628:	bl	0 <coda_ascii_parse_int64>
    362c:	cmp	r0, #0
    3630:	bmi	4810 <read_file+0x2534>
    3634:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3638:	b	394c <read_file+0x1670>
    363c:	mov	r1, #0
    3640:	str	r1, [fp, #-44]	; 0xffffffd4
    3644:	str	r1, [fp, #-48]	; 0xffffffd0
    3648:	bl	0 <__aeabi_read_tp>
    364c:	ldr	r0, [r0, r4]
    3650:	ldr	r2, [sp, #100]	; 0x64
    3654:	sxtb	r3, r1
    3658:	mov	r1, #0
    365c:	ldr	r0, [r0, #108]	; 0x6c
    3660:	bl	0 <coda_mem_int8_new>
    3664:	mov	r2, r0
    3668:	ldr	r0, [sp, #120]	; 0x78
    366c:	movw	r1, #0
    3670:	mov	r3, #0
    3674:	movt	r1, #0
    3678:	bl	0 <coda_mem_record_add_field>
    367c:	cmp	r6, #66	; 0x42
    3680:	blt	36c4 <read_file+0x13e8>
    3684:	ldr	r0, [sp, #64]	; 0x40
    3688:	movw	r1, #0
    368c:	mov	r2, #2
    3690:	movt	r1, #0
    3694:	bl	0 <bcmp>
    3698:	cmp	r0, #0
    369c:	beq	36c4 <read_file+0x13e8>
    36a0:	ldr	r0, [sp, #64]	; 0x40
    36a4:	mov	r1, #2
    36a8:	mov	r2, r5
    36ac:	mov	r3, #0
    36b0:	bl	0 <coda_ascii_parse_int64>
    36b4:	cmp	r0, #0
    36b8:	bmi	4820 <read_file+0x2544>
    36bc:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    36c0:	b	36d0 <read_file+0x13f4>
    36c4:	mov	r1, #0
    36c8:	str	r1, [fp, #-44]	; 0xffffffd4
    36cc:	str	r1, [fp, #-48]	; 0xffffffd0
    36d0:	bl	0 <__aeabi_read_tp>
    36d4:	ldr	r0, [r0, r4]
    36d8:	ldr	r2, [sp, #100]	; 0x64
    36dc:	sxtb	r3, r1
    36e0:	mov	r1, #0
    36e4:	ldr	r0, [r0, #112]	; 0x70
    36e8:	bl	0 <coda_mem_int8_new>
    36ec:	mov	r2, r0
    36f0:	ldr	r0, [sp, #120]	; 0x78
    36f4:	movw	r1, #0
    36f8:	mov	r3, #0
    36fc:	movt	r1, #0
    3700:	bl	0 <coda_mem_record_add_field>
    3704:	cmp	r6, #69	; 0x45
    3708:	blt	374c <read_file+0x1470>
    370c:	ldr	r0, [sp, #60]	; 0x3c
    3710:	movw	r1, #0
    3714:	mov	r2, #2
    3718:	movt	r1, #0
    371c:	bl	0 <bcmp>
    3720:	cmp	r0, #0
    3724:	beq	374c <read_file+0x1470>
    3728:	ldr	r0, [sp, #60]	; 0x3c
    372c:	mov	r1, #2
    3730:	mov	r2, r5
    3734:	mov	r3, #0
    3738:	bl	0 <coda_ascii_parse_int64>
    373c:	cmp	r0, #0
    3740:	bmi	4830 <read_file+0x2554>
    3744:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3748:	b	3758 <read_file+0x147c>
    374c:	mov	r1, #0
    3750:	str	r1, [fp, #-44]	; 0xffffffd4
    3754:	str	r1, [fp, #-48]	; 0xffffffd0
    3758:	bl	0 <__aeabi_read_tp>
    375c:	ldr	r0, [r0, r4]
    3760:	ldr	r2, [sp, #100]	; 0x64
    3764:	sxtb	r3, r1
    3768:	mov	r1, #0
    376c:	ldr	r0, [r0, #116]	; 0x74
    3770:	bl	0 <coda_mem_int8_new>
    3774:	mov	r2, r0
    3778:	ldr	r0, [sp, #120]	; 0x78
    377c:	movw	r1, #0
    3780:	mov	r3, #0
    3784:	movt	r1, #0
    3788:	bl	0 <coda_mem_record_add_field>
    378c:	cmp	r6, #73	; 0x49
    3790:	str	r9, [sp, #48]	; 0x30
    3794:	blt	37dc <read_file+0x1500>
    3798:	ldr	r0, [sp, #56]	; 0x38
    379c:	movw	r1, #0
    37a0:	mov	r2, #3
    37a4:	movt	r1, #0
    37a8:	bl	0 <bcmp>
    37ac:	cmp	r0, #0
    37b0:	beq	37dc <read_file+0x1500>
    37b4:	ldr	r0, [sp, #56]	; 0x38
    37b8:	mov	r1, #3
    37bc:	mov	r2, r5
    37c0:	mov	r3, #0
    37c4:	bl	0 <coda_ascii_parse_int64>
    37c8:	cmp	r0, #0
    37cc:	bmi	4840 <read_file+0x2564>
    37d0:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    37d4:	mov	r5, r8
    37d8:	b	37ec <read_file+0x1510>
    37dc:	mov	r1, #0
    37e0:	mov	r5, r8
    37e4:	str	r1, [fp, #-44]	; 0xffffffd4
    37e8:	str	r1, [fp, #-48]	; 0xffffffd0
    37ec:	bl	0 <__aeabi_read_tp>
    37f0:	mov	r8, r0
    37f4:	ldr	r0, [r0, r4]
    37f8:	ldr	r2, [sp, #100]	; 0x64
    37fc:	sxth	r3, r1
    3800:	mov	r1, #0
    3804:	ldr	r0, [r0, #120]	; 0x78
    3808:	bl	0 <coda_mem_int16_new>
    380c:	mov	r2, r0
    3810:	ldr	r0, [sp, #120]	; 0x78
    3814:	movw	r1, #0
    3818:	mov	r3, #0
    381c:	movt	r1, #0
    3820:	bl	0 <coda_mem_record_add_field>
    3824:	mov	r0, #0
    3828:	cmp	r6, #75	; 0x4b
    382c:	ldr	r2, [sp, #100]	; 0x64
    3830:	mov	r1, #0
    3834:	mov	r3, r5
    3838:	strb	r0, [sp, #153]	; 0x99
    383c:	ldrb	r0, [sp, #290]	; 0x122
    3840:	movwlt	r0, #32
    3844:	strb	r0, [sp, #152]	; 0x98
    3848:	ldr	r0, [r8, r4]
    384c:	ldr	r0, [r0, #124]	; 0x7c
    3850:	bl	0 <coda_mem_string_new>
    3854:	mov	r2, r0
    3858:	ldr	r0, [sp, #120]	; 0x78
    385c:	movw	r1, #0
    3860:	mov	r3, #0
    3864:	movt	r1, #0
    3868:	bl	0 <coda_mem_record_add_field>
    386c:	cmp	r6, #76	; 0x4c
    3870:	ldrb	r0, [sp, #291]	; 0x123
    3874:	ldr	r2, [sp, #100]	; 0x64
    3878:	mov	r1, #0
    387c:	mov	r3, r5
    3880:	movwlt	r0, #32
    3884:	strb	r0, [sp, #152]	; 0x98
    3888:	ldr	r0, [r8, r4]
    388c:	ldr	r0, [r0, #128]	; 0x80
    3890:	bl	0 <coda_mem_string_new>
    3894:	mov	r2, r0
    3898:	ldr	r0, [sp, #120]	; 0x78
    389c:	movw	r1, #0
    38a0:	mov	r3, #0
    38a4:	movt	r1, #0
    38a8:	bl	0 <coda_mem_record_add_field>
    38ac:	cmp	r6, #79	; 0x4f
    38b0:	ldrb	r0, [sp, #294]	; 0x126
    38b4:	ldr	r2, [sp, #100]	; 0x64
    38b8:	mov	r1, #0
    38bc:	mov	r3, r5
    38c0:	movwlt	r0, #32
    38c4:	strb	r0, [sp, #152]	; 0x98
    38c8:	ldr	r0, [r8, r4]
    38cc:	ldr	r0, [r0, #132]	; 0x84
    38d0:	bl	0 <coda_mem_string_new>
    38d4:	mov	r2, r0
    38d8:	ldr	r0, [sp, #120]	; 0x78
    38dc:	movw	r1, #0
    38e0:	mov	r3, #0
    38e4:	movt	r1, #0
    38e8:	bl	0 <coda_mem_record_add_field>
    38ec:	cmp	r6, #80	; 0x50
    38f0:	ldrb	r0, [sp, #295]	; 0x127
    38f4:	ldr	r2, [sp, #100]	; 0x64
    38f8:	mov	r1, #0
    38fc:	mov	r3, r5
    3900:	movwlt	r0, #32
    3904:	strb	r0, [sp, #152]	; 0x98
    3908:	ldr	r0, [r8, r4]
    390c:	mov	r8, r5
    3910:	ldr	r0, [r0, #136]	; 0x88
    3914:	bl	0 <coda_mem_string_new>
    3918:	mov	r2, r0
    391c:	ldr	r0, [sp, #120]	; 0x78
    3920:	movw	r1, #0
    3924:	mov	r3, #0
    3928:	movt	r1, #0
    392c:	bl	0 <coda_mem_record_add_field>
    3930:	ldr	r9, [sp, #48]	; 0x30
    3934:	sub	r7, fp, #40	; 0x28
    3938:	sub	r5, fp, #48	; 0x30
    393c:	b	3b18 <read_file+0x183c>
    3940:	mov	r1, #0
    3944:	str	r1, [fp, #-44]	; 0xffffffd4
    3948:	str	r1, [fp, #-48]	; 0xffffffd0
    394c:	bl	0 <__aeabi_read_tp>
    3950:	ldr	r0, [r0, r4]
    3954:	ldr	r2, [sp, #100]	; 0x64
    3958:	sxtb	r3, r1
    395c:	mov	r1, #0
    3960:	ldr	r0, [r0, #200]	; 0xc8
    3964:	bl	0 <coda_mem_int8_new>
    3968:	mov	r2, r0
    396c:	ldr	r0, [sp, #128]	; 0x80
    3970:	movw	r1, #0
    3974:	mov	r3, #0
    3978:	movt	r1, #0
    397c:	bl	0 <coda_mem_record_add_field>
    3980:	cmp	r6, #66	; 0x42
    3984:	blt	39c8 <read_file+0x16ec>
    3988:	ldr	r0, [sp, #64]	; 0x40
    398c:	movw	r1, #0
    3990:	mov	r2, #2
    3994:	movt	r1, #0
    3998:	bl	0 <bcmp>
    399c:	cmp	r0, #0
    39a0:	beq	39c8 <read_file+0x16ec>
    39a4:	ldr	r0, [sp, #64]	; 0x40
    39a8:	mov	r1, #2
    39ac:	mov	r2, r5
    39b0:	mov	r3, #0
    39b4:	bl	0 <coda_ascii_parse_int64>
    39b8:	cmp	r0, #0
    39bc:	bmi	4820 <read_file+0x2544>
    39c0:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    39c4:	b	39d4 <read_file+0x16f8>
    39c8:	mov	r1, #0
    39cc:	str	r1, [fp, #-44]	; 0xffffffd4
    39d0:	str	r1, [fp, #-48]	; 0xffffffd0
    39d4:	bl	0 <__aeabi_read_tp>
    39d8:	ldr	r0, [r0, r4]
    39dc:	ldr	r2, [sp, #100]	; 0x64
    39e0:	sxtb	r3, r1
    39e4:	mov	r1, #0
    39e8:	ldr	r0, [r0, #204]	; 0xcc
    39ec:	bl	0 <coda_mem_int8_new>
    39f0:	mov	r2, r0
    39f4:	ldr	r0, [sp, #128]	; 0x80
    39f8:	movw	r1, #0
    39fc:	mov	r3, #0
    3a00:	movt	r1, #0
    3a04:	bl	0 <coda_mem_record_add_field>
    3a08:	cmp	r6, #69	; 0x45
    3a0c:	blt	3a50 <read_file+0x1774>
    3a10:	ldr	r0, [sp, #60]	; 0x3c
    3a14:	movw	r1, #0
    3a18:	mov	r2, #2
    3a1c:	movt	r1, #0
    3a20:	bl	0 <bcmp>
    3a24:	cmp	r0, #0
    3a28:	beq	3a50 <read_file+0x1774>
    3a2c:	ldr	r0, [sp, #60]	; 0x3c
    3a30:	mov	r1, #2
    3a34:	mov	r2, r5
    3a38:	mov	r3, #0
    3a3c:	bl	0 <coda_ascii_parse_int64>
    3a40:	cmp	r0, #0
    3a44:	bmi	4830 <read_file+0x2554>
    3a48:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3a4c:	b	3a5c <read_file+0x1780>
    3a50:	mov	r1, #0
    3a54:	str	r1, [fp, #-44]	; 0xffffffd4
    3a58:	str	r1, [fp, #-48]	; 0xffffffd0
    3a5c:	bl	0 <__aeabi_read_tp>
    3a60:	ldr	r0, [r0, r4]
    3a64:	ldr	r2, [sp, #100]	; 0x64
    3a68:	sxtb	r3, r1
    3a6c:	mov	r1, #0
    3a70:	ldr	r0, [r0, #208]	; 0xd0
    3a74:	bl	0 <coda_mem_int8_new>
    3a78:	mov	r2, r0
    3a7c:	ldr	r0, [sp, #128]	; 0x80
    3a80:	movw	r1, #0
    3a84:	mov	r3, #0
    3a88:	movt	r1, #0
    3a8c:	bl	0 <coda_mem_record_add_field>
    3a90:	cmp	r6, #73	; 0x49
    3a94:	blt	3ad8 <read_file+0x17fc>
    3a98:	ldr	r0, [sp, #56]	; 0x38
    3a9c:	movw	r1, #0
    3aa0:	mov	r2, #3
    3aa4:	movt	r1, #0
    3aa8:	bl	0 <bcmp>
    3aac:	cmp	r0, #0
    3ab0:	beq	3ad8 <read_file+0x17fc>
    3ab4:	ldr	r0, [sp, #56]	; 0x38
    3ab8:	mov	r1, #3
    3abc:	mov	r2, r5
    3ac0:	mov	r3, #0
    3ac4:	bl	0 <coda_ascii_parse_int64>
    3ac8:	cmp	r0, #0
    3acc:	bmi	4840 <read_file+0x2564>
    3ad0:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3ad4:	b	3ae4 <read_file+0x1808>
    3ad8:	mov	r1, #0
    3adc:	str	r1, [fp, #-44]	; 0xffffffd4
    3ae0:	str	r1, [fp, #-48]	; 0xffffffd0
    3ae4:	bl	0 <__aeabi_read_tp>
    3ae8:	ldr	r0, [r0, r4]
    3aec:	ldr	r2, [sp, #100]	; 0x64
    3af0:	sxth	r3, r1
    3af4:	mov	r1, #0
    3af8:	ldr	r0, [r0, #212]	; 0xd4
    3afc:	bl	0 <coda_mem_int16_new>
    3b00:	mov	r2, r0
    3b04:	ldr	r0, [sp, #128]	; 0x80
    3b08:	movw	r1, #0
    3b0c:	mov	r3, #0
    3b10:	movt	r1, #0
    3b14:	bl	0 <coda_mem_record_add_field>
    3b18:	ldr	r0, [sp, #96]	; 0x60
    3b1c:	bl	0 <ftell>
    3b20:	str	r0, [sp, #148]	; 0x94
    3b24:	ldr	r1, [sp, #144]	; 0x90
    3b28:	ldr	r0, [sp, #96]	; 0x60
    3b2c:	add	r1, r1, #1
    3b30:	str	r1, [sp, #144]	; 0x90
    3b34:	mov	r1, sl
    3b38:	bl	4a4c <get_line>
    3b3c:	cmp	r0, #0
    3b40:	bmi	26d0 <read_file+0x3f4>
    3b44:	mov	r6, r0
    3b48:	ldrb	r0, [sp, #216]	; 0xd8
    3b4c:	cmp	r0, #69	; 0x45
    3b50:	bne	465c <read_file+0x2380>
    3b54:	ldrb	r0, [sp, #217]	; 0xd9
    3b58:	cmp	r0, #86	; 0x56
    3b5c:	beq	3bd4 <read_file+0x18f8>
    3b60:	cmp	r0, #80	; 0x50
    3b64:	bne	465c <read_file+0x2380>
    3b68:	ldr	r0, [sp, #120]	; 0x78
    3b6c:	cmp	r0, #0
    3b70:	beq	4850 <read_file+0x2574>
    3b74:	bl	0 <__aeabi_read_tp>
    3b78:	ldr	r0, [r0, r4]
    3b7c:	mov	r1, #0
    3b80:	ldr	r0, [r0, #140]	; 0x8c
    3b84:	bl	0 <coda_mem_record_new>
    3b88:	cmp	r6, #8
    3b8c:	str	r0, [sp, #132]	; 0x84
    3b90:	blt	3c40 <read_file+0x1964>
    3b94:	ldr	r0, [sp, #88]	; 0x58
    3b98:	movw	r1, #0
    3b9c:	mov	r2, #4
    3ba0:	movt	r1, #0
    3ba4:	bl	0 <bcmp>
    3ba8:	cmp	r0, #0
    3bac:	beq	3c40 <read_file+0x1964>
    3bb0:	ldr	r0, [sp, #88]	; 0x58
    3bb4:	mov	r1, #4
    3bb8:	mov	r2, r5
    3bbc:	mov	r3, #0
    3bc0:	bl	0 <coda_ascii_parse_int64>
    3bc4:	cmp	r0, #0
    3bc8:	bmi	4794 <read_file+0x24b8>
    3bcc:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3bd0:	b	3c4c <read_file+0x1970>
    3bd4:	ldr	r0, [sp, #128]	; 0x80
    3bd8:	cmp	r0, #0
    3bdc:	beq	4864 <read_file+0x2588>
    3be0:	bl	0 <__aeabi_read_tp>
    3be4:	ldr	r0, [r0, r4]
    3be8:	mov	r1, #0
    3bec:	ldr	r0, [r0, #216]	; 0xd8
    3bf0:	bl	0 <coda_mem_record_new>
    3bf4:	cmp	r6, #8
    3bf8:	str	r0, [sp, #132]	; 0x84
    3bfc:	blt	3cc8 <read_file+0x19ec>
    3c00:	ldr	r0, [sp, #88]	; 0x58
    3c04:	movw	r1, #0
    3c08:	mov	r2, #4
    3c0c:	movt	r1, #0
    3c10:	bl	0 <bcmp>
    3c14:	cmp	r0, #0
    3c18:	beq	3cc8 <read_file+0x19ec>
    3c1c:	ldr	r0, [sp, #88]	; 0x58
    3c20:	mov	r1, #4
    3c24:	mov	r2, r5
    3c28:	mov	r3, #0
    3c2c:	bl	0 <coda_ascii_parse_int64>
    3c30:	cmp	r0, #0
    3c34:	bmi	4794 <read_file+0x24b8>
    3c38:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3c3c:	b	3cd4 <read_file+0x19f8>
    3c40:	mov	r1, #0
    3c44:	str	r1, [fp, #-44]	; 0xffffffd4
    3c48:	str	r1, [fp, #-48]	; 0xffffffd0
    3c4c:	bl	0 <__aeabi_read_tp>
    3c50:	ldr	r0, [r0, r4]
    3c54:	ldr	r2, [sp, #100]	; 0x64
    3c58:	sxth	r3, r1
    3c5c:	mov	r1, #0
    3c60:	ldr	r0, [r0, #144]	; 0x90
    3c64:	bl	0 <coda_mem_int16_new>
    3c68:	mov	r2, r0
    3c6c:	ldr	r0, [sp, #132]	; 0x84
    3c70:	movw	r1, #0
    3c74:	mov	r3, #0
    3c78:	movt	r1, #0
    3c7c:	bl	0 <coda_mem_record_add_field>
    3c80:	cmp	r6, #13
    3c84:	blt	3d50 <read_file+0x1a74>
    3c88:	ldr	r0, [sp, #44]	; 0x2c
    3c8c:	movw	r1, #0
    3c90:	mov	r2, #4
    3c94:	movt	r1, #0
    3c98:	bl	0 <bcmp>
    3c9c:	cmp	r0, #0
    3ca0:	beq	3d50 <read_file+0x1a74>
    3ca4:	ldr	r0, [sp, #44]	; 0x2c
    3ca8:	mov	r1, #4
    3cac:	mov	r2, r5
    3cb0:	mov	r3, #0
    3cb4:	bl	0 <coda_ascii_parse_int64>
    3cb8:	cmp	r0, #0
    3cbc:	bmi	4880 <read_file+0x25a4>
    3cc0:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3cc4:	b	3d5c <read_file+0x1a80>
    3cc8:	mov	r1, #0
    3ccc:	str	r1, [fp, #-44]	; 0xffffffd4
    3cd0:	str	r1, [fp, #-48]	; 0xffffffd0
    3cd4:	bl	0 <__aeabi_read_tp>
    3cd8:	ldr	r0, [r0, r4]
    3cdc:	ldr	r2, [sp, #100]	; 0x64
    3ce0:	sxth	r3, r1
    3ce4:	mov	r1, #0
    3ce8:	ldr	r0, [r0, #220]	; 0xdc
    3cec:	bl	0 <coda_mem_int16_new>
    3cf0:	mov	r2, r0
    3cf4:	ldr	r0, [sp, #132]	; 0x84
    3cf8:	movw	r1, #0
    3cfc:	mov	r3, #0
    3d00:	movt	r1, #0
    3d04:	bl	0 <coda_mem_record_add_field>
    3d08:	cmp	r6, #13
    3d0c:	blt	3dd8 <read_file+0x1afc>
    3d10:	ldr	r0, [sp, #44]	; 0x2c
    3d14:	movw	r1, #0
    3d18:	mov	r2, #4
    3d1c:	movt	r1, #0
    3d20:	bl	0 <bcmp>
    3d24:	cmp	r0, #0
    3d28:	beq	3dd8 <read_file+0x1afc>
    3d2c:	ldr	r0, [sp, #44]	; 0x2c
    3d30:	mov	r1, #4
    3d34:	mov	r2, r5
    3d38:	mov	r3, #0
    3d3c:	bl	0 <coda_ascii_parse_int64>
    3d40:	cmp	r0, #0
    3d44:	bmi	4880 <read_file+0x25a4>
    3d48:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3d4c:	b	3de4 <read_file+0x1b08>
    3d50:	mov	r1, #0
    3d54:	str	r1, [fp, #-44]	; 0xffffffd4
    3d58:	str	r1, [fp, #-48]	; 0xffffffd0
    3d5c:	bl	0 <__aeabi_read_tp>
    3d60:	ldr	r0, [r0, r4]
    3d64:	ldr	r2, [sp, #100]	; 0x64
    3d68:	sxth	r3, r1
    3d6c:	mov	r1, #0
    3d70:	ldr	r0, [r0, #148]	; 0x94
    3d74:	bl	0 <coda_mem_int16_new>
    3d78:	mov	r2, r0
    3d7c:	ldr	r0, [sp, #132]	; 0x84
    3d80:	movw	r1, #0
    3d84:	mov	r3, #0
    3d88:	movt	r1, #0
    3d8c:	bl	0 <coda_mem_record_add_field>
    3d90:	cmp	r6, #18
    3d94:	blt	3e60 <read_file+0x1b84>
    3d98:	ldr	r0, [sp, #40]	; 0x28
    3d9c:	movw	r1, #0
    3da0:	mov	r2, #4
    3da4:	movt	r1, #0
    3da8:	bl	0 <bcmp>
    3dac:	cmp	r0, #0
    3db0:	beq	3e60 <read_file+0x1b84>
    3db4:	ldr	r0, [sp, #40]	; 0x28
    3db8:	mov	r1, #4
    3dbc:	mov	r2, r5
    3dc0:	mov	r3, #0
    3dc4:	bl	0 <coda_ascii_parse_int64>
    3dc8:	cmp	r0, #0
    3dcc:	bmi	4890 <read_file+0x25b4>
    3dd0:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3dd4:	b	3e6c <read_file+0x1b90>
    3dd8:	mov	r1, #0
    3ddc:	str	r1, [fp, #-44]	; 0xffffffd4
    3de0:	str	r1, [fp, #-48]	; 0xffffffd0
    3de4:	bl	0 <__aeabi_read_tp>
    3de8:	ldr	r0, [r0, r4]
    3dec:	ldr	r2, [sp, #100]	; 0x64
    3df0:	sxth	r3, r1
    3df4:	mov	r1, #0
    3df8:	ldr	r0, [r0, #224]	; 0xe0
    3dfc:	bl	0 <coda_mem_int16_new>
    3e00:	mov	r2, r0
    3e04:	ldr	r0, [sp, #132]	; 0x84
    3e08:	movw	r1, #0
    3e0c:	mov	r3, #0
    3e10:	movt	r1, #0
    3e14:	bl	0 <coda_mem_record_add_field>
    3e18:	cmp	r6, #18
    3e1c:	blt	3ee8 <read_file+0x1c0c>
    3e20:	ldr	r0, [sp, #40]	; 0x28
    3e24:	movw	r1, #0
    3e28:	mov	r2, #4
    3e2c:	movt	r1, #0
    3e30:	bl	0 <bcmp>
    3e34:	cmp	r0, #0
    3e38:	beq	3ee8 <read_file+0x1c0c>
    3e3c:	ldr	r0, [sp, #40]	; 0x28
    3e40:	mov	r1, #4
    3e44:	mov	r2, r5
    3e48:	mov	r3, #0
    3e4c:	bl	0 <coda_ascii_parse_int64>
    3e50:	cmp	r0, #0
    3e54:	bmi	4890 <read_file+0x25b4>
    3e58:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3e5c:	b	3ef4 <read_file+0x1c18>
    3e60:	mov	r1, #0
    3e64:	str	r1, [fp, #-44]	; 0xffffffd4
    3e68:	str	r1, [fp, #-48]	; 0xffffffd0
    3e6c:	bl	0 <__aeabi_read_tp>
    3e70:	ldr	r0, [r0, r4]
    3e74:	ldr	r2, [sp, #100]	; 0x64
    3e78:	sxth	r3, r1
    3e7c:	mov	r1, #0
    3e80:	ldr	r0, [r0, #152]	; 0x98
    3e84:	bl	0 <coda_mem_int16_new>
    3e88:	mov	r2, r0
    3e8c:	ldr	r0, [sp, #132]	; 0x84
    3e90:	movw	r1, #0
    3e94:	mov	r3, #0
    3e98:	movt	r1, #0
    3e9c:	bl	0 <coda_mem_record_add_field>
    3ea0:	cmp	r6, #26
    3ea4:	blt	3f70 <read_file+0x1c94>
    3ea8:	ldr	r0, [sp, #36]	; 0x24
    3eac:	movw	r1, #0
    3eb0:	mov	r2, #7
    3eb4:	movt	r1, #0
    3eb8:	bl	0 <bcmp>
    3ebc:	cmp	r0, #0
    3ec0:	beq	3f70 <read_file+0x1c94>
    3ec4:	ldr	r0, [sp, #36]	; 0x24
    3ec8:	mov	r1, #7
    3ecc:	mov	r2, r5
    3ed0:	mov	r3, #0
    3ed4:	bl	0 <coda_ascii_parse_int64>
    3ed8:	cmp	r0, #0
    3edc:	bmi	48a0 <read_file+0x25c4>
    3ee0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3ee4:	b	3f7c <read_file+0x1ca0>
    3ee8:	mov	r1, #0
    3eec:	str	r1, [fp, #-44]	; 0xffffffd4
    3ef0:	str	r1, [fp, #-48]	; 0xffffffd0
    3ef4:	bl	0 <__aeabi_read_tp>
    3ef8:	ldr	r0, [r0, r4]
    3efc:	ldr	r2, [sp, #100]	; 0x64
    3f00:	sxth	r3, r1
    3f04:	mov	r1, #0
    3f08:	ldr	r0, [r0, #228]	; 0xe4
    3f0c:	bl	0 <coda_mem_int16_new>
    3f10:	mov	r2, r0
    3f14:	ldr	r0, [sp, #132]	; 0x84
    3f18:	movw	r1, #0
    3f1c:	mov	r3, #0
    3f20:	movt	r1, #0
    3f24:	bl	0 <coda_mem_record_add_field>
    3f28:	cmp	r6, #28
    3f2c:	blt	3ff4 <read_file+0x1d18>
    3f30:	ldr	r0, [sp, #36]	; 0x24
    3f34:	movw	r1, #0
    3f38:	mov	r2, #7
    3f3c:	movt	r1, #0
    3f40:	bl	0 <bcmp>
    3f44:	cmp	r0, #0
    3f48:	beq	3ff4 <read_file+0x1d18>
    3f4c:	ldr	r0, [sp, #36]	; 0x24
    3f50:	mov	r1, #7
    3f54:	mov	r2, r5
    3f58:	mov	r3, #0
    3f5c:	bl	0 <coda_ascii_parse_int64>
    3f60:	cmp	r0, #0
    3f64:	bmi	48a0 <read_file+0x25c4>
    3f68:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3f6c:	b	4000 <read_file+0x1d24>
    3f70:	mov	r3, #0
    3f74:	str	r3, [fp, #-44]	; 0xffffffd4
    3f78:	str	r3, [fp, #-48]	; 0xffffffd0
    3f7c:	bl	0 <__aeabi_read_tp>
    3f80:	ldr	r0, [r0, r4]
    3f84:	ldr	r2, [sp, #100]	; 0x64
    3f88:	mov	r1, #0
    3f8c:	ldr	r0, [r0, #156]	; 0x9c
    3f90:	bl	0 <coda_mem_int32_new>
    3f94:	mov	r2, r0
    3f98:	ldr	r0, [sp, #132]	; 0x84
    3f9c:	movw	r1, #0
    3fa0:	mov	r3, #0
    3fa4:	movt	r1, #0
    3fa8:	bl	0 <coda_mem_record_add_field>
    3fac:	cmp	r6, #35	; 0x23
    3fb0:	blt	407c <read_file+0x1da0>
    3fb4:	ldr	r0, [sp, #32]
    3fb8:	movw	r1, #0
    3fbc:	mov	r2, #8
    3fc0:	movt	r1, #0
    3fc4:	bl	0 <bcmp>
    3fc8:	cmp	r0, #0
    3fcc:	beq	407c <read_file+0x1da0>
    3fd0:	ldr	r0, [sp, #32]
    3fd4:	mov	r1, #8
    3fd8:	mov	r2, r5
    3fdc:	mov	r3, #0
    3fe0:	bl	0 <coda_ascii_parse_int64>
    3fe4:	cmp	r0, #0
    3fe8:	bmi	48b0 <read_file+0x25d4>
    3fec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3ff0:	b	4088 <read_file+0x1dac>
    3ff4:	mov	r1, #0
    3ff8:	str	r1, [fp, #-44]	; 0xffffffd4
    3ffc:	str	r1, [fp, #-48]	; 0xffffffd0
    4000:	bl	0 <__aeabi_read_tp>
    4004:	ldr	r0, [r0, r4]
    4008:	ldr	r2, [sp, #100]	; 0x64
    400c:	sxth	r3, r1
    4010:	mov	r1, #0
    4014:	ldr	r0, [r0, #232]	; 0xe8
    4018:	bl	0 <coda_mem_int16_new>
    401c:	mov	r2, r0
    4020:	ldr	r0, [sp, #132]	; 0x84
    4024:	movw	r1, #0
    4028:	mov	r3, #0
    402c:	movt	r1, #0
    4030:	bl	0 <coda_mem_record_add_field>
    4034:	cmp	r6, #35	; 0x23
    4038:	blt	4100 <read_file+0x1e24>
    403c:	ldr	r0, [sp, #32]
    4040:	movw	r1, #0
    4044:	mov	r2, #8
    4048:	movt	r1, #0
    404c:	bl	0 <bcmp>
    4050:	cmp	r0, #0
    4054:	beq	4100 <read_file+0x1e24>
    4058:	ldr	r0, [sp, #32]
    405c:	mov	r1, #8
    4060:	mov	r2, r5
    4064:	mov	r3, #0
    4068:	bl	0 <coda_ascii_parse_int64>
    406c:	cmp	r0, #0
    4070:	bmi	48b0 <read_file+0x25d4>
    4074:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4078:	b	410c <read_file+0x1e30>
    407c:	mov	r3, #0
    4080:	str	r3, [fp, #-44]	; 0xffffffd4
    4084:	str	r3, [fp, #-48]	; 0xffffffd0
    4088:	bl	0 <__aeabi_read_tp>
    408c:	ldr	r0, [r0, r4]
    4090:	ldr	r2, [sp, #100]	; 0x64
    4094:	mov	r1, #0
    4098:	ldr	r0, [r0, #160]	; 0xa0
    409c:	bl	0 <coda_mem_int32_new>
    40a0:	mov	r2, r0
    40a4:	ldr	r0, [sp, #132]	; 0x84
    40a8:	movw	r1, #0
    40ac:	mov	r3, #0
    40b0:	movt	r1, #0
    40b4:	bl	0 <coda_mem_record_add_field>
    40b8:	cmp	r6, #44	; 0x2c
    40bc:	blt	4184 <read_file+0x1ea8>
    40c0:	ldr	r0, [sp, #28]
    40c4:	movw	r1, #0
    40c8:	mov	r2, #8
    40cc:	movt	r1, #0
    40d0:	bl	0 <bcmp>
    40d4:	cmp	r0, #0
    40d8:	beq	4184 <read_file+0x1ea8>
    40dc:	ldr	r0, [sp, #28]
    40e0:	mov	r1, #8
    40e4:	mov	r2, r5
    40e8:	mov	r3, #0
    40ec:	bl	0 <coda_ascii_parse_int64>
    40f0:	cmp	r0, #0
    40f4:	bmi	48c0 <read_file+0x25e4>
    40f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    40fc:	b	4190 <read_file+0x1eb4>
    4100:	mov	r3, #0
    4104:	str	r3, [fp, #-44]	; 0xffffffd4
    4108:	str	r3, [fp, #-48]	; 0xffffffd0
    410c:	bl	0 <__aeabi_read_tp>
    4110:	ldr	r0, [r0, r4]
    4114:	ldr	r2, [sp, #100]	; 0x64
    4118:	mov	r1, #0
    411c:	ldr	r0, [r0, #236]	; 0xec
    4120:	bl	0 <coda_mem_int32_new>
    4124:	mov	r2, r0
    4128:	ldr	r0, [sp, #132]	; 0x84
    412c:	movw	r1, #0
    4130:	mov	r3, #0
    4134:	movt	r1, #0
    4138:	bl	0 <coda_mem_record_add_field>
    413c:	cmp	r6, #44	; 0x2c
    4140:	blt	4208 <read_file+0x1f2c>
    4144:	ldr	r0, [sp, #28]
    4148:	movw	r1, #0
    414c:	mov	r2, #8
    4150:	movt	r1, #0
    4154:	bl	0 <bcmp>
    4158:	cmp	r0, #0
    415c:	beq	4208 <read_file+0x1f2c>
    4160:	ldr	r0, [sp, #28]
    4164:	mov	r1, #8
    4168:	mov	r2, r5
    416c:	mov	r3, #0
    4170:	bl	0 <coda_ascii_parse_int64>
    4174:	cmp	r0, #0
    4178:	bmi	48c0 <read_file+0x25e4>
    417c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4180:	b	4214 <read_file+0x1f38>
    4184:	mov	r3, #0
    4188:	str	r3, [fp, #-44]	; 0xffffffd4
    418c:	str	r3, [fp, #-48]	; 0xffffffd0
    4190:	bl	0 <__aeabi_read_tp>
    4194:	ldr	r0, [r0, r4]
    4198:	ldr	r2, [sp, #100]	; 0x64
    419c:	mov	r1, #0
    41a0:	ldr	r0, [r0, #164]	; 0xa4
    41a4:	bl	0 <coda_mem_int32_new>
    41a8:	mov	r2, r0
    41ac:	ldr	r0, [sp, #132]	; 0x84
    41b0:	movw	r1, #0
    41b4:	mov	r3, #0
    41b8:	movt	r1, #0
    41bc:	bl	0 <coda_mem_record_add_field>
    41c0:	cmp	r6, #53	; 0x35
    41c4:	blt	428c <read_file+0x1fb0>
    41c8:	ldr	r0, [sp, #24]
    41cc:	movw	r1, #0
    41d0:	mov	r2, #8
    41d4:	movt	r1, #0
    41d8:	bl	0 <bcmp>
    41dc:	cmp	r0, #0
    41e0:	beq	428c <read_file+0x1fb0>
    41e4:	ldr	r0, [sp, #24]
    41e8:	mov	r1, #8
    41ec:	mov	r2, r5
    41f0:	mov	r3, #0
    41f4:	bl	0 <coda_ascii_parse_int64>
    41f8:	cmp	r0, #0
    41fc:	bmi	48d0 <read_file+0x25f4>
    4200:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4204:	b	4298 <read_file+0x1fbc>
    4208:	mov	r3, #0
    420c:	str	r3, [fp, #-44]	; 0xffffffd4
    4210:	str	r3, [fp, #-48]	; 0xffffffd0
    4214:	bl	0 <__aeabi_read_tp>
    4218:	ldr	r0, [r0, r4]
    421c:	ldr	r2, [sp, #100]	; 0x64
    4220:	mov	r1, #0
    4224:	ldr	r0, [r0, #240]	; 0xf0
    4228:	bl	0 <coda_mem_int32_new>
    422c:	mov	r2, r0
    4230:	ldr	r0, [sp, #132]	; 0x84
    4234:	movw	r1, #0
    4238:	mov	r3, #0
    423c:	movt	r1, #0
    4240:	bl	0 <coda_mem_record_add_field>
    4244:	cmp	r6, #53	; 0x35
    4248:	blt	4310 <read_file+0x2034>
    424c:	ldr	r0, [sp, #24]
    4250:	movw	r1, #0
    4254:	mov	r2, #8
    4258:	movt	r1, #0
    425c:	bl	0 <bcmp>
    4260:	cmp	r0, #0
    4264:	beq	4310 <read_file+0x2034>
    4268:	ldr	r0, [sp, #24]
    426c:	mov	r1, #8
    4270:	mov	r2, r5
    4274:	mov	r3, #0
    4278:	bl	0 <coda_ascii_parse_int64>
    427c:	cmp	r0, #0
    4280:	bmi	48d0 <read_file+0x25f4>
    4284:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4288:	b	431c <read_file+0x2040>
    428c:	mov	r3, #0
    4290:	str	r3, [fp, #-44]	; 0xffffffd4
    4294:	str	r3, [fp, #-48]	; 0xffffffd0
    4298:	bl	0 <__aeabi_read_tp>
    429c:	ldr	r0, [r0, r4]
    42a0:	ldr	r2, [sp, #100]	; 0x64
    42a4:	mov	r1, #0
    42a8:	ldr	r0, [r0, #168]	; 0xa8
    42ac:	bl	0 <coda_mem_int32_new>
    42b0:	mov	r2, r0
    42b4:	ldr	r0, [sp, #132]	; 0x84
    42b8:	movw	r1, #0
    42bc:	mov	r3, #0
    42c0:	movt	r1, #0
    42c4:	bl	0 <coda_mem_record_add_field>
    42c8:	cmp	r6, #62	; 0x3e
    42cc:	blt	4394 <read_file+0x20b8>
    42d0:	ldr	r0, [sp, #20]
    42d4:	movw	r1, #0
    42d8:	mov	r2, #8
    42dc:	movt	r1, #0
    42e0:	bl	0 <bcmp>
    42e4:	cmp	r0, #0
    42e8:	beq	4394 <read_file+0x20b8>
    42ec:	ldr	r0, [sp, #20]
    42f0:	mov	r1, #8
    42f4:	mov	r2, r5
    42f8:	mov	r3, #0
    42fc:	bl	0 <coda_ascii_parse_int64>
    4300:	cmp	r0, #0
    4304:	bmi	48e0 <read_file+0x2604>
    4308:	ldr	r3, [fp, #-48]	; 0xffffffd0
    430c:	b	43a0 <read_file+0x20c4>
    4310:	mov	r3, #0
    4314:	str	r3, [fp, #-44]	; 0xffffffd4
    4318:	str	r3, [fp, #-48]	; 0xffffffd0
    431c:	bl	0 <__aeabi_read_tp>
    4320:	ldr	r0, [r0, r4]
    4324:	ldr	r2, [sp, #100]	; 0x64
    4328:	mov	r1, #0
    432c:	ldr	r0, [r0, #244]	; 0xf4
    4330:	bl	0 <coda_mem_int32_new>
    4334:	mov	r2, r0
    4338:	ldr	r0, [sp, #132]	; 0x84
    433c:	movw	r1, #0
    4340:	mov	r3, #0
    4344:	movt	r1, #0
    4348:	bl	0 <coda_mem_record_add_field>
    434c:	cmp	r6, #62	; 0x3e
    4350:	blt	4418 <read_file+0x213c>
    4354:	ldr	r0, [sp, #20]
    4358:	movw	r1, #0
    435c:	mov	r2, #8
    4360:	movt	r1, #0
    4364:	bl	0 <bcmp>
    4368:	cmp	r0, #0
    436c:	beq	4418 <read_file+0x213c>
    4370:	ldr	r0, [sp, #20]
    4374:	mov	r1, #8
    4378:	mov	r2, r5
    437c:	mov	r3, #0
    4380:	bl	0 <coda_ascii_parse_int64>
    4384:	cmp	r0, #0
    4388:	bmi	48e0 <read_file+0x2604>
    438c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4390:	b	4424 <read_file+0x2148>
    4394:	mov	r3, #0
    4398:	str	r3, [fp, #-44]	; 0xffffffd4
    439c:	str	r3, [fp, #-48]	; 0xffffffd0
    43a0:	bl	0 <__aeabi_read_tp>
    43a4:	ldr	r0, [r0, r4]
    43a8:	ldr	r2, [sp, #100]	; 0x64
    43ac:	mov	r1, #0
    43b0:	ldr	r0, [r0, #172]	; 0xac
    43b4:	bl	0 <coda_mem_int32_new>
    43b8:	mov	r2, r0
    43bc:	ldr	r0, [sp, #132]	; 0x84
    43c0:	movw	r1, #0
    43c4:	mov	r3, #0
    43c8:	movt	r1, #0
    43cc:	bl	0 <coda_mem_record_add_field>
    43d0:	cmp	r6, #71	; 0x47
    43d4:	blt	449c <read_file+0x21c0>
    43d8:	ldr	r0, [sp, #16]
    43dc:	movw	r1, #0
    43e0:	mov	r2, #8
    43e4:	movt	r1, #0
    43e8:	bl	0 <bcmp>
    43ec:	cmp	r0, #0
    43f0:	beq	449c <read_file+0x21c0>
    43f4:	ldr	r0, [sp, #16]
    43f8:	mov	r1, #8
    43fc:	mov	r2, r5
    4400:	mov	r3, #0
    4404:	bl	0 <coda_ascii_parse_int64>
    4408:	cmp	r0, #0
    440c:	bmi	48f0 <read_file+0x2614>
    4410:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4414:	b	44a8 <read_file+0x21cc>
    4418:	mov	r3, #0
    441c:	str	r3, [fp, #-44]	; 0xffffffd4
    4420:	str	r3, [fp, #-48]	; 0xffffffd0
    4424:	bl	0 <__aeabi_read_tp>
    4428:	ldr	r0, [r0, r4]
    442c:	ldr	r2, [sp, #100]	; 0x64
    4430:	mov	r1, #0
    4434:	ldr	r0, [r0, #248]	; 0xf8
    4438:	bl	0 <coda_mem_int32_new>
    443c:	mov	r2, r0
    4440:	ldr	r0, [sp, #132]	; 0x84
    4444:	movw	r1, #0
    4448:	mov	r3, #0
    444c:	movt	r1, #0
    4450:	bl	0 <coda_mem_record_add_field>
    4454:	cmp	r6, #71	; 0x47
    4458:	blt	4528 <read_file+0x224c>
    445c:	ldr	r0, [sp, #16]
    4460:	movw	r1, #0
    4464:	mov	r2, #8
    4468:	movt	r1, #0
    446c:	bl	0 <bcmp>
    4470:	cmp	r0, #0
    4474:	beq	4528 <read_file+0x224c>
    4478:	ldr	r0, [sp, #16]
    447c:	mov	r1, #8
    4480:	mov	r2, r5
    4484:	mov	r3, #0
    4488:	bl	0 <coda_ascii_parse_int64>
    448c:	cmp	r0, #0
    4490:	bmi	48f0 <read_file+0x2614>
    4494:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4498:	b	4534 <read_file+0x2258>
    449c:	mov	r3, #0
    44a0:	str	r3, [fp, #-44]	; 0xffffffd4
    44a4:	str	r3, [fp, #-48]	; 0xffffffd0
    44a8:	bl	0 <__aeabi_read_tp>
    44ac:	ldr	r0, [r0, r4]
    44b0:	ldr	r2, [sp, #100]	; 0x64
    44b4:	mov	r1, #0
    44b8:	ldr	r0, [r0, #176]	; 0xb0
    44bc:	bl	0 <coda_mem_int32_new>
    44c0:	mov	r2, r0
    44c4:	ldr	r0, [sp, #132]	; 0x84
    44c8:	movw	r1, #0
    44cc:	mov	r3, #0
    44d0:	movt	r1, #0
    44d4:	bl	0 <coda_mem_record_add_field>
    44d8:	cmp	r6, #80	; 0x50
    44dc:	blt	45b0 <read_file+0x22d4>
    44e0:	ldr	r0, [sp, #12]
    44e4:	movw	r1, #0
    44e8:	mov	r2, #8
    44ec:	movt	r1, #0
    44f0:	bl	0 <bcmp>
    44f4:	cmp	r0, #0
    44f8:	beq	45b0 <read_file+0x22d4>
    44fc:	ldr	r0, [sp, #12]
    4500:	mov	r1, #8
    4504:	mov	r2, r5
    4508:	mov	r3, #0
    450c:	bl	0 <coda_ascii_parse_int64>
    4510:	cmp	r0, #0
    4514:	bmi	4900 <read_file+0x2624>
    4518:	ldr	r3, [fp, #-48]	; 0xffffffd0
    451c:	ldr	r6, [sp, #92]	; 0x5c
    4520:	mov	r1, #45	; 0x2d
    4524:	b	45dc <read_file+0x2300>
    4528:	mov	r3, #0
    452c:	str	r3, [fp, #-44]	; 0xffffffd4
    4530:	str	r3, [fp, #-48]	; 0xffffffd0
    4534:	bl	0 <__aeabi_read_tp>
    4538:	ldr	r0, [r0, r4]
    453c:	ldr	r2, [sp, #100]	; 0x64
    4540:	mov	r1, #0
    4544:	ldr	r0, [r0, #252]	; 0xfc
    4548:	bl	0 <coda_mem_int32_new>
    454c:	mov	r2, r0
    4550:	ldr	r0, [sp, #132]	; 0x84
    4554:	movw	r1, #0
    4558:	mov	r3, #0
    455c:	movt	r1, #0
    4560:	bl	0 <coda_mem_record_add_field>
    4564:	cmp	r6, #80	; 0x50
    4568:	blt	45c8 <read_file+0x22ec>
    456c:	ldr	r0, [sp, #12]
    4570:	movw	r1, #0
    4574:	mov	r2, #8
    4578:	movt	r1, #0
    457c:	bl	0 <bcmp>
    4580:	cmp	r0, #0
    4584:	beq	45c8 <read_file+0x22ec>
    4588:	ldr	r0, [sp, #12]
    458c:	mov	r1, #8
    4590:	mov	r2, r5
    4594:	mov	r3, #0
    4598:	bl	0 <coda_ascii_parse_int64>
    459c:	cmp	r0, #0
    45a0:	bmi	4900 <read_file+0x2624>
    45a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    45a8:	mov	r1, #64	; 0x40
    45ac:	b	45d8 <read_file+0x22fc>
    45b0:	ldr	r6, [sp, #92]	; 0x5c
    45b4:	mov	r3, #0
    45b8:	mov	r1, #45	; 0x2d
    45bc:	str	r3, [fp, #-44]	; 0xffffffd4
    45c0:	str	r3, [fp, #-48]	; 0xffffffd0
    45c4:	b	45dc <read_file+0x2300>
    45c8:	mov	r3, #0
    45cc:	mov	r1, #64	; 0x40
    45d0:	str	r3, [fp, #-44]	; 0xffffffd4
    45d4:	str	r3, [fp, #-48]	; 0xffffffd0
    45d8:	ldr	r6, [sp, #8]
    45dc:	bl	0 <__aeabi_read_tp>
    45e0:	ldr	r0, [r0, r4]
    45e4:	ldr	r2, [sp, #100]	; 0x64
    45e8:	ldr	r0, [r0, r1, lsl #2]
    45ec:	mov	r1, #0
    45f0:	bl	0 <coda_mem_int32_new>
    45f4:	mov	r2, r0
    45f8:	ldr	r0, [sp, #132]	; 0x84
    45fc:	movw	r1, #0
    4600:	mov	r3, #0
    4604:	movt	r1, #0
    4608:	bl	0 <coda_mem_record_add_field>
    460c:	ldr	r0, [r6]
    4610:	ldr	r2, [sp, #132]	; 0x84
    4614:	movw	r1, #0
    4618:	mov	r3, #0
    461c:	movt	r1, #0
    4620:	bl	0 <coda_mem_record_add_field>
    4624:	mov	r0, #0
    4628:	str	r0, [sp, #132]	; 0x84
    462c:	ldr	r0, [sp, #96]	; 0x60
    4630:	bl	0 <ftell>
    4634:	str	r0, [sp, #148]	; 0x94
    4638:	ldr	r1, [sp, #144]	; 0x90
    463c:	ldr	r0, [sp, #96]	; 0x60
    4640:	add	r1, r1, #1
    4644:	str	r1, [sp, #144]	; 0x90
    4648:	mov	r1, sl
    464c:	bl	4a4c <get_line>
    4650:	mov	r6, r0
    4654:	cmp	r0, #0
    4658:	bmi	26d0 <read_file+0x3f4>
    465c:	ldr	r1, [sp, #120]	; 0x78
    4660:	cmp	r1, #0
    4664:	beq	4678 <read_file+0x239c>
    4668:	ldr	r0, [sp, #116]	; 0x74
    466c:	bl	0 <coda_mem_array_add_element>
    4670:	mov	r0, #0
    4674:	str	r0, [sp, #120]	; 0x78
    4678:	ldr	r1, [sp, #128]	; 0x80
    467c:	cmp	r1, #0
    4680:	beq	4694 <read_file+0x23b8>
    4684:	ldr	r0, [sp, #124]	; 0x7c
    4688:	bl	0 <coda_mem_array_add_element>
    468c:	mov	r0, #0
    4690:	str	r0, [sp, #128]	; 0x80
    4694:	movw	r1, #0
    4698:	mov	r0, sl
    469c:	mov	r2, #3
    46a0:	movt	r1, #0
    46a4:	bl	0 <bcmp>
    46a8:	cmp	r0, #0
    46ac:	bne	30c4 <read_file+0xde8>
    46b0:	ldr	r0, [sp, #112]	; 0x70
    46b4:	cmp	r0, #0
    46b8:	beq	4704 <read_file+0x2428>
    46bc:	ldr	r2, [sp, #116]	; 0x74
    46c0:	movw	r1, #0
    46c4:	mov	r3, #0
    46c8:	mov	r5, #0
    46cc:	movt	r1, #0
    46d0:	bl	0 <coda_mem_record_add_field>
    46d4:	str	r5, [sp, #116]	; 0x74
    46d8:	movw	r1, #0
    46dc:	mov	r3, #0
    46e0:	ldr	r0, [sp, #112]	; 0x70
    46e4:	ldr	r2, [sp, #124]	; 0x7c
    46e8:	movt	r1, #0
    46ec:	bl	0 <coda_mem_record_add_field>
    46f0:	str	r5, [sp, #124]	; 0x7c
    46f4:	ldr	r0, [sp, #108]	; 0x6c
    46f8:	ldr	r1, [sp, #112]	; 0x70
    46fc:	bl	0 <coda_mem_array_add_element>
    4700:	str	r5, [sp, #112]	; 0x70
    4704:	bl	0 <__aeabi_read_tp>
    4708:	ldr	r0, [r0, r4]
    470c:	mov	r1, #0
    4710:	mov	r5, #0
    4714:	ldr	r0, [r0, #296]	; 0x128
    4718:	bl	0 <coda_mem_record_new>
    471c:	ldr	r2, [sp, #104]	; 0x68
    4720:	movw	r1, #0
    4724:	mov	r3, #0
    4728:	mov	r6, r0
    472c:	movt	r1, #0
    4730:	bl	0 <coda_mem_record_add_field>
    4734:	str	r5, [sp, #104]	; 0x68
    4738:	movw	r1, #0
    473c:	mov	r0, r6
    4740:	mov	r3, #0
    4744:	ldr	r2, [sp, #108]	; 0x6c
    4748:	movt	r1, #0
    474c:	bl	0 <coda_mem_record_add_field>
    4750:	add	r0, sp, #96	; 0x60
    4754:	str	r5, [sp, #108]	; 0x6c
    4758:	str	r6, [r9, #20]
    475c:	bl	49ac <ingest_info_cleanup>
    4760:	b	26dc <read_file+0x400>
    4764:	ldr	r2, [sp, #144]	; 0x90
    4768:	ldr	r3, [sp, #148]	; 0x94
    476c:	movw	r1, #0
    4770:	movt	r1, #0
    4774:	b	4874 <read_file+0x2598>
    4778:	ldr	r0, [sp, #148]	; 0x94
    477c:	ldr	r3, [sp, #144]	; 0x90
    4780:	movw	r1, #0
    4784:	mov	r2, r6
    4788:	movt	r1, #0
    478c:	str	r0, [sp]
    4790:	b	4874 <read_file+0x2598>
    4794:	ldr	r0, [sp, #148]	; 0x94
    4798:	ldr	r1, [sp, #144]	; 0x90
    479c:	add	r2, r0, #4
    47a0:	b	490c <read_file+0x2630>
    47a4:	ldr	r0, [sp, #148]	; 0x94
    47a8:	ldr	r1, [sp, #144]	; 0x90
    47ac:	add	r2, r0, #18
    47b0:	b	490c <read_file+0x2630>
    47b4:	ldr	r0, [sp, #148]	; 0x94
    47b8:	ldr	r1, [sp, #144]	; 0x90
    47bc:	add	r2, r0, #32
    47c0:	b	490c <read_file+0x2630>
    47c4:	ldr	r0, [sp, #148]	; 0x94
    47c8:	ldr	r1, [sp, #144]	; 0x90
    47cc:	add	r2, r0, #46	; 0x2e
    47d0:	b	490c <read_file+0x2630>
    47d4:	ldr	r2, [sp, #144]	; 0x90
    47d8:	ldr	r3, [sp, #148]	; 0x94
    47dc:	movw	r1, #0
    47e0:	movt	r1, #0
    47e4:	b	4874 <read_file+0x2598>
    47e8:	ldr	r2, [sp, #144]	; 0x90
    47ec:	ldr	r3, [sp, #148]	; 0x94
    47f0:	movw	r1, #0
    47f4:	movt	r1, #0
    47f8:	b	4874 <read_file+0x2598>
    47fc:	ldr	r2, [sp, #144]	; 0x90
    4800:	ldr	r3, [sp, #148]	; 0x94
    4804:	movw	r1, #0
    4808:	movt	r1, #0
    480c:	b	4874 <read_file+0x2598>
    4810:	ldr	r0, [sp, #148]	; 0x94
    4814:	ldr	r1, [sp, #144]	; 0x90
    4818:	add	r2, r0, #61	; 0x3d
    481c:	b	490c <read_file+0x2630>
    4820:	ldr	r0, [sp, #148]	; 0x94
    4824:	ldr	r1, [sp, #144]	; 0x90
    4828:	add	r2, r0, #64	; 0x40
    482c:	b	490c <read_file+0x2630>
    4830:	ldr	r0, [sp, #148]	; 0x94
    4834:	ldr	r1, [sp, #144]	; 0x90
    4838:	add	r2, r0, #67	; 0x43
    483c:	b	490c <read_file+0x2630>
    4840:	ldr	r0, [sp, #148]	; 0x94
    4844:	ldr	r1, [sp, #144]	; 0x90
    4848:	add	r2, r0, #70	; 0x46
    484c:	b	490c <read_file+0x2630>
    4850:	ldr	r2, [sp, #144]	; 0x90
    4854:	ldr	r3, [sp, #148]	; 0x94
    4858:	movw	r1, #0
    485c:	movt	r1, #0
    4860:	b	4874 <read_file+0x2598>
    4864:	ldr	r2, [sp, #144]	; 0x90
    4868:	ldr	r3, [sp, #148]	; 0x94
    486c:	movw	r1, #0
    4870:	movt	r1, #0
    4874:	mvn	r0, #21
    4878:	bl	0 <coda_set_error>
    487c:	b	26d0 <read_file+0x3f4>
    4880:	ldr	r0, [sp, #148]	; 0x94
    4884:	ldr	r1, [sp, #144]	; 0x90
    4888:	add	r2, r0, #9
    488c:	b	490c <read_file+0x2630>
    4890:	ldr	r0, [sp, #148]	; 0x94
    4894:	ldr	r1, [sp, #144]	; 0x90
    4898:	add	r2, r0, #14
    489c:	b	490c <read_file+0x2630>
    48a0:	ldr	r0, [sp, #148]	; 0x94
    48a4:	ldr	r1, [sp, #144]	; 0x90
    48a8:	add	r2, r0, #19
    48ac:	b	490c <read_file+0x2630>
    48b0:	ldr	r0, [sp, #148]	; 0x94
    48b4:	ldr	r1, [sp, #144]	; 0x90
    48b8:	add	r2, r0, #27
    48bc:	b	490c <read_file+0x2630>
    48c0:	ldr	r0, [sp, #148]	; 0x94
    48c4:	ldr	r1, [sp, #144]	; 0x90
    48c8:	add	r2, r0, #36	; 0x24
    48cc:	b	490c <read_file+0x2630>
    48d0:	ldr	r0, [sp, #148]	; 0x94
    48d4:	ldr	r1, [sp, #144]	; 0x90
    48d8:	add	r2, r0, #45	; 0x2d
    48dc:	b	490c <read_file+0x2630>
    48e0:	ldr	r0, [sp, #148]	; 0x94
    48e4:	ldr	r1, [sp, #144]	; 0x90
    48e8:	add	r2, r0, #54	; 0x36
    48ec:	b	490c <read_file+0x2630>
    48f0:	ldr	r0, [sp, #148]	; 0x94
    48f4:	ldr	r1, [sp, #144]	; 0x90
    48f8:	add	r2, r0, #63	; 0x3f
    48fc:	b	490c <read_file+0x2630>
    4900:	ldr	r0, [sp, #148]	; 0x94
    4904:	ldr	r1, [sp, #144]	; 0x90
    4908:	add	r2, r0, #72	; 0x48
    490c:	movw	r0, #0
    4910:	movt	r0, #0
    4914:	bl	0 <coda_add_error_message>
    4918:	b	26d0 <read_file+0x3f4>
    491c:	ldr	r0, [sp, #148]	; 0x94
    4920:	ldr	r1, [sp, #144]	; 0x90
    4924:	add	r2, r0, #3
    4928:	b	4938 <read_file+0x265c>
    492c:	ldr	r0, [sp, #148]	; 0x94
    4930:	ldr	r1, [sp, #144]	; 0x90
    4934:	add	r2, r0, #14
    4938:	movw	r0, #0
    493c:	movt	r0, #0
    4940:	bl	0 <coda_add_error_message>
    4944:	b	2c98 <read_file+0x9bc>

00004948 <coda_sp3_close>:
    4948:	push	{r4, sl, fp, lr}
    494c:	add	fp, sp, #8
    4950:	mov	r4, r0
    4954:	ldr	r0, [r0, #20]
    4958:	cmp	r0, #0
    495c:	beq	4964 <coda_sp3_close+0x1c>
    4960:	bl	0 <coda_dynamic_type_delete>
    4964:	ldr	r0, [r4]
    4968:	cmp	r0, #0
    496c:	beq	4974 <coda_sp3_close+0x2c>
    4970:	bl	0 <free>
    4974:	mov	r0, r4
    4978:	bl	0 <free>
    497c:	mov	r0, #0
    4980:	pop	{r4, sl, fp, pc}

00004984 <coda_sp3_cursor_set_product>:
    4984:	mov	r2, #1
    4988:	stm	r0, {r1, r2}
    498c:	mvn	r2, #0
    4990:	ldr	r1, [r1, #20]
    4994:	str	r2, [r0, #20]
    4998:	str	r2, [r0, #16]
    499c:	str	r2, [r0, #12]
    49a0:	str	r1, [r0, #8]
    49a4:	mov	r0, #0
    49a8:	bx	lr

000049ac <ingest_info_cleanup>:
    49ac:	push	{r4, sl, fp, lr}
    49b0:	add	fp, sp, #8
    49b4:	mov	r4, r0
    49b8:	ldr	r0, [r0]
    49bc:	cmp	r0, #0
    49c0:	beq	49c8 <ingest_info_cleanup+0x1c>
    49c4:	bl	0 <fclose>
    49c8:	ldr	r0, [r4, #8]
    49cc:	cmp	r0, #0
    49d0:	beq	49d8 <ingest_info_cleanup+0x2c>
    49d4:	bl	0 <coda_dynamic_type_delete>
    49d8:	ldr	r0, [r4, #12]
    49dc:	cmp	r0, #0
    49e0:	beq	49e8 <ingest_info_cleanup+0x3c>
    49e4:	bl	0 <coda_dynamic_type_delete>
    49e8:	ldr	r0, [r4, #16]
    49ec:	cmp	r0, #0
    49f0:	beq	49f8 <ingest_info_cleanup+0x4c>
    49f4:	bl	0 <coda_dynamic_type_delete>
    49f8:	ldr	r0, [r4, #20]
    49fc:	cmp	r0, #0
    4a00:	beq	4a08 <ingest_info_cleanup+0x5c>
    4a04:	bl	0 <coda_dynamic_type_delete>
    4a08:	ldr	r0, [r4, #24]
    4a0c:	cmp	r0, #0
    4a10:	beq	4a18 <ingest_info_cleanup+0x6c>
    4a14:	bl	0 <coda_dynamic_type_delete>
    4a18:	ldr	r0, [r4, #28]
    4a1c:	cmp	r0, #0
    4a20:	beq	4a28 <ingest_info_cleanup+0x7c>
    4a24:	bl	0 <coda_dynamic_type_delete>
    4a28:	ldr	r0, [r4, #32]
    4a2c:	cmp	r0, #0
    4a30:	beq	4a38 <ingest_info_cleanup+0x8c>
    4a34:	bl	0 <coda_dynamic_type_delete>
    4a38:	ldr	r0, [r4, #36]	; 0x24
    4a3c:	cmp	r0, #0
    4a40:	popeq	{r4, sl, fp, pc}
    4a44:	pop	{r4, sl, fp, lr}
    4a48:	b	0 <coda_dynamic_type_delete>

00004a4c <get_line>:
    4a4c:	push	{r4, r5, fp, lr}
    4a50:	add	fp, sp, #8
    4a54:	mov	r5, r0
    4a58:	mov	r4, r1
    4a5c:	mov	r0, r1
    4a60:	mov	r1, #1000	; 0x3e8
    4a64:	mov	r2, r5
    4a68:	bl	0 <fgets>
    4a6c:	cmp	r0, #0
    4a70:	beq	4ab8 <get_line+0x6c>
    4a74:	mov	r0, r4
    4a78:	bl	0 <strlen>
    4a7c:	mov	r1, r0
    4a80:	cmp	r0, #1
    4a84:	blt	4af0 <get_line+0xa4>
    4a88:	sub	r2, r1, #1
    4a8c:	ldrb	r5, [r4, r2]
    4a90:	cmp	r5, #10
    4a94:	bne	4af8 <get_line+0xac>
    4a98:	mov	r0, #0
    4a9c:	cmp	r2, #1
    4aa0:	strb	r0, [r4, r2]
    4aa4:	blt	4b10 <get_line+0xc4>
    4aa8:	sub	r3, r1, #2
    4aac:	mov	r0, r2
    4ab0:	ldrb	r5, [r4, r3]
    4ab4:	b	4b00 <get_line+0xb4>
    4ab8:	mov	r0, r5
    4abc:	bl	0 <ferror>
    4ac0:	cmp	r0, #0
    4ac4:	beq	4b14 <get_line+0xc8>
    4ac8:	bl	0 <__errno_location>
    4acc:	ldr	r0, [r0]
    4ad0:	bl	0 <strerror>
    4ad4:	movw	r1, #0
    4ad8:	mov	r2, r0
    4adc:	mvn	r0, #21
    4ae0:	movt	r1, #0
    4ae4:	bl	0 <coda_set_error>
    4ae8:	mvn	r0, #0
    4aec:	pop	{r4, r5, fp, pc}
    4af0:	mov	r0, r1
    4af4:	pop	{r4, r5, fp, pc}
    4af8:	mov	r3, r2
    4afc:	mov	r0, r1
    4b00:	cmp	r5, #13
    4b04:	moveq	r0, #0
    4b08:	strbeq	r0, [r4, r3]
    4b0c:	moveq	r0, r3
    4b10:	pop	{r4, r5, fp, pc}
    4b14:	mov	r0, #0
    4b18:	strb	r0, [r4]
    4b1c:	pop	{r4, r5, fp, pc}
