
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-detect.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <indent>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	ldr	r3, [pc, #88]	; 6c <indent+0x6c>
  10:	ldr	r3, [r3]
  14:	cmp	r3, #0
  18:	bge	30 <indent+0x30>
  1c:	ldr	r3, [pc, #76]	; 70 <indent+0x70>
  20:	mov	r2, #52	; 0x34
  24:	ldr	r1, [pc, #72]	; 74 <indent+0x74>
  28:	ldr	r0, [pc, #72]	; 78 <indent+0x78>
  2c:	bl	0 <__assert_fail>
  30:	ldr	r3, [pc, #52]	; 6c <indent+0x6c>
  34:	ldr	r3, [r3]
  38:	str	r3, [fp, #-8]
  3c:	b	54 <indent+0x54>
  40:	ldr	r0, [pc, #52]	; 7c <indent+0x7c>
  44:	bl	0 <printf>
  48:	ldr	r3, [fp, #-8]
  4c:	sub	r3, r3, #1
  50:	str	r3, [fp, #-8]
  54:	ldr	r3, [fp, #-8]
  58:	cmp	r3, #0
  5c:	bne	40 <indent+0x40>
  60:	nop			; (mov r0, r0)
  64:	sub	sp, fp, #4
  68:	pop	{fp, pc}
  6c:	.word	0x00000000
  70:	.word	0x0000009c
  74:	.word	0x00000000
  78:	.word	0x00000054
  7c:	.word	0x00000060

00000080 <generate_detection_tree_sub>:
  80:	push	{fp, lr}
  84:	add	fp, sp, #4
  88:	sub	sp, sp, #16
  8c:	str	r0, [fp, #-16]
  90:	str	r1, [fp, #-20]	; 0xffffffec
  94:	ldr	r3, [fp, #-16]
  98:	cmp	r3, #0
  9c:	beq	220 <generate_detection_tree_sub+0x1a0>
  a0:	ldr	r3, [fp, #-16]
  a4:	ldr	r3, [r3]
  a8:	cmp	r3, #0
  ac:	bne	c0 <generate_detection_tree_sub+0x40>
  b0:	ldr	r3, [fp, #-16]
  b4:	ldr	r3, [r3, #4]
  b8:	cmp	r3, #0
  bc:	beq	19c <generate_detection_tree_sub+0x11c>
  c0:	ldr	r3, [fp, #-16]
  c4:	ldr	r3, [r3]
  c8:	cmp	r3, #0
  cc:	beq	ec <generate_detection_tree_sub+0x6c>
  d0:	bl	0 <indent>
  d4:	ldr	r3, [fp, #-16]
  d8:	ldr	r3, [r3]
  dc:	mov	r1, r3
  e0:	ldr	r0, [pc, #324]	; 22c <generate_detection_tree_sub+0x1ac>
  e4:	bl	0 <printf>
  e8:	b	110 <generate_detection_tree_sub+0x90>
  ec:	ldr	r3, [fp, #-20]	; 0xffffffec
  f0:	add	r3, r3, #1
  f4:	str	r3, [fp, #-20]	; 0xffffffec
  f8:	bl	0 <indent>
  fc:	ldr	r3, [fp, #-16]
 100:	ldr	r3, [r3, #4]
 104:	ldr	r1, [pc, #292]	; 230 <generate_detection_tree_sub+0x1b0>
 108:	mov	r0, r3
 10c:	bl	0 <coda_expression_print>
 110:	ldr	r3, [fp, #-16]
 114:	ldr	r3, [r3, #8]
 118:	cmp	r3, #0
 11c:	beq	194 <generate_detection_tree_sub+0x114>
 120:	ldr	r3, [fp, #-16]
 124:	ldr	r3, [r3, #8]
 128:	ldr	r3, [r3, #8]
 12c:	str	r3, [fp, #-12]
 130:	ldr	r3, [fp, #-12]
 134:	ldr	r3, [r3, #44]	; 0x2c
 138:	ldr	r3, [r3, #20]
 13c:	ldr	r1, [r3]
 140:	ldr	r3, [fp, #-12]
 144:	ldr	r3, [r3, #44]	; 0x2c
 148:	ldr	r2, [r3]
 14c:	ldr	r3, [fp, #-12]
 150:	ldr	r3, [r3, #4]
 154:	ldr	r0, [pc, #216]	; 234 <generate_detection_tree_sub+0x1b4>
 158:	bl	0 <printf>
 15c:	ldr	r3, [fp, #-16]
 160:	ldr	r3, [r3, #12]
 164:	cmp	r3, #0
 168:	ble	188 <generate_detection_tree_sub+0x108>
 16c:	ldr	r3, [fp, #-16]
 170:	ldr	r3, [r3, #12]
 174:	mov	r2, r3
 178:	ldr	r1, [fp, #-20]	; 0xffffffec
 17c:	ldr	r0, [pc, #180]	; 238 <generate_detection_tree_sub+0x1b8>
 180:	bl	0 <printf>
 184:	b	194 <generate_detection_tree_sub+0x114>
 188:	ldr	r1, [fp, #-20]	; 0xffffffec
 18c:	ldr	r0, [pc, #168]	; 23c <generate_detection_tree_sub+0x1bc>
 190:	bl	0 <printf>
 194:	mov	r0, #10
 198:	bl	0 <putchar>
 19c:	mov	r3, #0
 1a0:	str	r3, [fp, #-8]
 1a4:	b	208 <generate_detection_tree_sub+0x188>
 1a8:	ldr	r3, [pc, #144]	; 240 <generate_detection_tree_sub+0x1c0>
 1ac:	ldr	r3, [r3]
 1b0:	add	r3, r3, #1
 1b4:	ldr	r2, [pc, #132]	; 240 <generate_detection_tree_sub+0x1c0>
 1b8:	str	r3, [r2]
 1bc:	ldr	r3, [fp, #-16]
 1c0:	ldr	r2, [r3, #16]
 1c4:	ldr	r3, [fp, #-8]
 1c8:	lsl	r3, r3, #2
 1cc:	add	r3, r2, r3
 1d0:	ldr	r0, [r3]
 1d4:	ldr	r2, [fp, #-20]	; 0xffffffec
 1d8:	ldr	r3, [fp, #-8]
 1dc:	add	r3, r2, r3
 1e0:	mov	r1, r3
 1e4:	bl	80 <generate_detection_tree_sub>
 1e8:	ldr	r3, [pc, #80]	; 240 <generate_detection_tree_sub+0x1c0>
 1ec:	ldr	r3, [r3]
 1f0:	sub	r3, r3, #1
 1f4:	ldr	r2, [pc, #68]	; 240 <generate_detection_tree_sub+0x1c0>
 1f8:	str	r3, [r2]
 1fc:	ldr	r3, [fp, #-8]
 200:	add	r3, r3, #1
 204:	str	r3, [fp, #-8]
 208:	ldr	r3, [fp, #-16]
 20c:	ldr	r2, [r3, #12]
 210:	ldr	r3, [fp, #-8]
 214:	cmp	r2, r3
 218:	bgt	1a8 <generate_detection_tree_sub+0x128>
 21c:	b	224 <generate_detection_tree_sub+0x1a4>
 220:	nop			; (mov r0, r0)
 224:	sub	sp, fp, #4
 228:	pop	{fp, pc}
 22c:	.word	0x00000064
 230:	.word	0x00000000
 234:	.word	0x00000070
 238:	.word	0x00000080
 23c:	.word	0x00000090
 240:	.word	0x00000000

00000244 <generate_detection_tree>:
 244:	push	{fp, lr}
 248:	add	fp, sp, #4
 24c:	sub	sp, sp, #8
 250:	str	r0, [fp, #-8]
 254:	ldr	r0, [fp, #-8]
 258:	bl	0 <coda_data_dictionary_get_detection_tree>
 25c:	mov	r3, r0
 260:	mov	r1, #0
 264:	mov	r0, r3
 268:	bl	80 <generate_detection_tree_sub>
 26c:	nop			; (mov r0, r0)
 270:	sub	sp, fp, #4
 274:	pop	{fp, pc}
