
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inflate.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflateResetKeep>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	sub	sp, sp, #20
       c:	str	r0, [fp, #-16]
      10:	ldr	r3, [fp, #-16]
      14:	cmp	r3, #0
      18:	beq	2c <coda_inflateResetKeep+0x2c>
      1c:	ldr	r3, [fp, #-16]
      20:	ldr	r3, [r3, #28]
      24:	cmp	r3, #0
      28:	bne	34 <coda_inflateResetKeep+0x34>
      2c:	mvn	r3, #1
      30:	b	14c <coda_inflateResetKeep+0x14c>
      34:	ldr	r3, [fp, #-16]
      38:	ldr	r3, [r3, #28]
      3c:	str	r3, [fp, #-8]
      40:	ldr	r3, [fp, #-8]
      44:	mov	r2, #0
      48:	str	r2, [r3, #28]
      4c:	ldr	r3, [fp, #-8]
      50:	ldr	r2, [r3, #28]
      54:	ldr	r3, [fp, #-16]
      58:	str	r2, [r3, #20]
      5c:	ldr	r3, [fp, #-16]
      60:	ldr	r2, [r3, #20]
      64:	ldr	r3, [fp, #-16]
      68:	str	r2, [r3, #8]
      6c:	ldr	r3, [fp, #-16]
      70:	mov	r2, #0
      74:	str	r2, [r3, #24]
      78:	ldr	r3, [fp, #-8]
      7c:	ldr	r3, [r3, #8]
      80:	cmp	r3, #0
      84:	beq	9c <coda_inflateResetKeep+0x9c>
      88:	ldr	r3, [fp, #-8]
      8c:	ldr	r3, [r3, #8]
      90:	and	r2, r3, #1
      94:	ldr	r3, [fp, #-16]
      98:	str	r2, [r3, #48]	; 0x30
      9c:	ldr	r3, [fp, #-8]
      a0:	mov	r2, #0
      a4:	str	r2, [r3]
      a8:	ldr	r3, [fp, #-8]
      ac:	mov	r2, #0
      b0:	str	r2, [r3, #4]
      b4:	ldr	r3, [fp, #-8]
      b8:	mov	r2, #0
      bc:	str	r2, [r3, #12]
      c0:	ldr	r3, [fp, #-8]
      c4:	mov	r2, #32768	; 0x8000
      c8:	str	r2, [r3, #20]
      cc:	ldr	r3, [fp, #-8]
      d0:	mov	r2, #0
      d4:	str	r2, [r3, #32]
      d8:	ldr	r3, [fp, #-8]
      dc:	mov	r2, #0
      e0:	str	r2, [r3, #56]	; 0x38
      e4:	ldr	r3, [fp, #-8]
      e8:	mov	r2, #0
      ec:	str	r2, [r3, #60]	; 0x3c
      f0:	ldr	r3, [fp, #-8]
      f4:	add	r2, r3, #1328	; 0x530
      f8:	ldr	r3, [fp, #-8]
      fc:	str	r2, [r3, #108]	; 0x6c
     100:	ldr	r3, [fp, #-8]
     104:	ldr	r2, [r3, #108]	; 0x6c
     108:	ldr	r3, [fp, #-8]
     10c:	str	r2, [r3, #80]	; 0x50
     110:	ldr	r3, [fp, #-8]
     114:	ldr	r2, [r3, #80]	; 0x50
     118:	ldr	r3, [fp, #-8]
     11c:	str	r2, [r3, #76]	; 0x4c
     120:	ldr	r3, [fp, #-8]
     124:	add	r3, r3, #4096	; 0x1000
     128:	mov	r2, r3
     12c:	mov	r3, #1
     130:	str	r3, [r2, #3008]	; 0xbc0
     134:	ldr	r3, [fp, #-8]
     138:	add	r3, r3, #4096	; 0x1000
     13c:	mov	r2, r3
     140:	mvn	r3, #0
     144:	str	r3, [r2, #3012]	; 0xbc4
     148:	mov	r3, #0
     14c:	mov	r0, r3
     150:	add	sp, fp, #0
     154:	pop	{fp}		; (ldr fp, [sp], #4)
     158:	bx	lr

0000015c <coda_inflateReset>:
     15c:	push	{fp, lr}
     160:	add	fp, sp, #4
     164:	sub	sp, sp, #16
     168:	str	r0, [fp, #-16]
     16c:	ldr	r3, [fp, #-16]
     170:	cmp	r3, #0
     174:	beq	188 <coda_inflateReset+0x2c>
     178:	ldr	r3, [fp, #-16]
     17c:	ldr	r3, [r3, #28]
     180:	cmp	r3, #0
     184:	bne	190 <coda_inflateReset+0x34>
     188:	mvn	r3, #1
     18c:	b	1cc <coda_inflateReset+0x70>
     190:	ldr	r3, [fp, #-16]
     194:	ldr	r3, [r3, #28]
     198:	str	r3, [fp, #-8]
     19c:	ldr	r3, [fp, #-8]
     1a0:	mov	r2, #0
     1a4:	str	r2, [r3, #40]	; 0x28
     1a8:	ldr	r3, [fp, #-8]
     1ac:	mov	r2, #0
     1b0:	str	r2, [r3, #44]	; 0x2c
     1b4:	ldr	r3, [fp, #-8]
     1b8:	mov	r2, #0
     1bc:	str	r2, [r3, #48]	; 0x30
     1c0:	ldr	r0, [fp, #-16]
     1c4:	bl	0 <coda_inflateResetKeep>
     1c8:	mov	r3, r0
     1cc:	mov	r0, r3
     1d0:	sub	sp, fp, #4
     1d4:	pop	{fp, pc}

000001d8 <coda_inflateReset2>:
     1d8:	push	{fp, lr}
     1dc:	add	fp, sp, #4
     1e0:	sub	sp, sp, #16
     1e4:	str	r0, [fp, #-16]
     1e8:	str	r1, [fp, #-20]	; 0xffffffec
     1ec:	ldr	r3, [fp, #-16]
     1f0:	cmp	r3, #0
     1f4:	beq	208 <coda_inflateReset2+0x30>
     1f8:	ldr	r3, [fp, #-16]
     1fc:	ldr	r3, [r3, #28]
     200:	cmp	r3, #0
     204:	bne	210 <coda_inflateReset2+0x38>
     208:	mvn	r3, #1
     20c:	b	308 <coda_inflateReset2+0x130>
     210:	ldr	r3, [fp, #-16]
     214:	ldr	r3, [r3, #28]
     218:	str	r3, [fp, #-12]
     21c:	ldr	r3, [fp, #-20]	; 0xffffffec
     220:	cmp	r3, #0
     224:	bge	240 <coda_inflateReset2+0x68>
     228:	mov	r3, #0
     22c:	str	r3, [fp, #-8]
     230:	ldr	r3, [fp, #-20]	; 0xffffffec
     234:	rsb	r3, r3, #0
     238:	str	r3, [fp, #-20]	; 0xffffffec
     23c:	b	268 <coda_inflateReset2+0x90>
     240:	ldr	r3, [fp, #-20]	; 0xffffffec
     244:	asr	r3, r3, #4
     248:	add	r3, r3, #1
     24c:	str	r3, [fp, #-8]
     250:	ldr	r3, [fp, #-20]	; 0xffffffec
     254:	cmp	r3, #47	; 0x2f
     258:	bgt	268 <coda_inflateReset2+0x90>
     25c:	ldr	r3, [fp, #-20]	; 0xffffffec
     260:	and	r3, r3, #15
     264:	str	r3, [fp, #-20]	; 0xffffffec
     268:	ldr	r3, [fp, #-20]	; 0xffffffec
     26c:	cmp	r3, #0
     270:	beq	294 <coda_inflateReset2+0xbc>
     274:	ldr	r3, [fp, #-20]	; 0xffffffec
     278:	cmp	r3, #7
     27c:	ble	28c <coda_inflateReset2+0xb4>
     280:	ldr	r3, [fp, #-20]	; 0xffffffec
     284:	cmp	r3, #15
     288:	ble	294 <coda_inflateReset2+0xbc>
     28c:	mvn	r3, #1
     290:	b	308 <coda_inflateReset2+0x130>
     294:	ldr	r3, [fp, #-12]
     298:	ldr	r3, [r3, #52]	; 0x34
     29c:	cmp	r3, #0
     2a0:	beq	2e4 <coda_inflateReset2+0x10c>
     2a4:	ldr	r3, [fp, #-12]
     2a8:	ldr	r2, [r3, #36]	; 0x24
     2ac:	ldr	r3, [fp, #-20]	; 0xffffffec
     2b0:	cmp	r2, r3
     2b4:	beq	2e4 <coda_inflateReset2+0x10c>
     2b8:	ldr	r3, [fp, #-16]
     2bc:	ldr	r3, [r3, #36]	; 0x24
     2c0:	ldr	r2, [fp, #-16]
     2c4:	ldr	r0, [r2, #40]	; 0x28
     2c8:	ldr	r2, [fp, #-12]
     2cc:	ldr	r2, [r2, #52]	; 0x34
     2d0:	mov	r1, r2
     2d4:	blx	r3
     2d8:	ldr	r3, [fp, #-12]
     2dc:	mov	r2, #0
     2e0:	str	r2, [r3, #52]	; 0x34
     2e4:	ldr	r3, [fp, #-12]
     2e8:	ldr	r2, [fp, #-8]
     2ec:	str	r2, [r3, #8]
     2f0:	ldr	r2, [fp, #-20]	; 0xffffffec
     2f4:	ldr	r3, [fp, #-12]
     2f8:	str	r2, [r3, #36]	; 0x24
     2fc:	ldr	r0, [fp, #-16]
     300:	bl	15c <coda_inflateReset>
     304:	mov	r3, r0
     308:	mov	r0, r3
     30c:	sub	sp, fp, #4
     310:	pop	{fp, pc}

00000314 <coda_inflateInit2_>:
     314:	push	{fp, lr}
     318:	add	fp, sp, #4
     31c:	sub	sp, sp, #24
     320:	str	r0, [fp, #-16]
     324:	str	r1, [fp, #-20]	; 0xffffffec
     328:	str	r2, [fp, #-24]	; 0xffffffe8
     32c:	str	r3, [fp, #-28]	; 0xffffffe4
     330:	ldr	r3, [fp, #-24]	; 0xffffffe8
     334:	cmp	r3, #0
     338:	beq	35c <coda_inflateInit2_+0x48>
     33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     340:	ldrb	r3, [r3]
     344:	mov	r2, #49	; 0x31
     348:	cmp	r3, r2
     34c:	bne	35c <coda_inflateInit2_+0x48>
     350:	ldr	r3, [fp, #-28]	; 0xffffffe4
     354:	cmp	r3, #56	; 0x38
     358:	beq	364 <coda_inflateInit2_+0x50>
     35c:	mvn	r3, #5
     360:	b	45c <coda_inflateInit2_+0x148>
     364:	ldr	r3, [fp, #-16]
     368:	cmp	r3, #0
     36c:	bne	378 <coda_inflateInit2_+0x64>
     370:	mvn	r3, #1
     374:	b	45c <coda_inflateInit2_+0x148>
     378:	ldr	r3, [fp, #-16]
     37c:	mov	r2, #0
     380:	str	r2, [r3, #24]
     384:	ldr	r3, [fp, #-16]
     388:	ldr	r3, [r3, #32]
     38c:	cmp	r3, #0
     390:	bne	3ac <coda_inflateInit2_+0x98>
     394:	ldr	r3, [fp, #-16]
     398:	ldr	r2, [pc, #200]	; 468 <coda_inflateInit2_+0x154>
     39c:	str	r2, [r3, #32]
     3a0:	ldr	r3, [fp, #-16]
     3a4:	mov	r2, #0
     3a8:	str	r2, [r3, #40]	; 0x28
     3ac:	ldr	r3, [fp, #-16]
     3b0:	ldr	r3, [r3, #36]	; 0x24
     3b4:	cmp	r3, #0
     3b8:	bne	3c8 <coda_inflateInit2_+0xb4>
     3bc:	ldr	r3, [fp, #-16]
     3c0:	ldr	r2, [pc, #164]	; 46c <coda_inflateInit2_+0x158>
     3c4:	str	r2, [r3, #36]	; 0x24
     3c8:	ldr	r3, [fp, #-16]
     3cc:	ldr	r3, [r3, #32]
     3d0:	ldr	r2, [fp, #-16]
     3d4:	ldr	r0, [r2, #40]	; 0x28
     3d8:	ldr	r2, [pc, #144]	; 470 <coda_inflateInit2_+0x15c>
     3dc:	mov	r1, #1
     3e0:	blx	r3
     3e4:	str	r0, [fp, #-8]
     3e8:	ldr	r3, [fp, #-8]
     3ec:	cmp	r3, #0
     3f0:	bne	3fc <coda_inflateInit2_+0xe8>
     3f4:	mvn	r3, #3
     3f8:	b	45c <coda_inflateInit2_+0x148>
     3fc:	ldr	r3, [fp, #-16]
     400:	ldr	r2, [fp, #-8]
     404:	str	r2, [r3, #28]
     408:	ldr	r3, [fp, #-8]
     40c:	mov	r2, #0
     410:	str	r2, [r3, #52]	; 0x34
     414:	ldr	r1, [fp, #-20]	; 0xffffffec
     418:	ldr	r0, [fp, #-16]
     41c:	bl	1d8 <coda_inflateReset2>
     420:	str	r0, [fp, #-12]
     424:	ldr	r3, [fp, #-12]
     428:	cmp	r3, #0
     42c:	beq	458 <coda_inflateInit2_+0x144>
     430:	ldr	r3, [fp, #-16]
     434:	ldr	r3, [r3, #36]	; 0x24
     438:	ldr	r2, [fp, #-16]
     43c:	ldr	r2, [r2, #40]	; 0x28
     440:	ldr	r1, [fp, #-8]
     444:	mov	r0, r2
     448:	blx	r3
     44c:	ldr	r3, [fp, #-16]
     450:	mov	r2, #0
     454:	str	r2, [r3, #28]
     458:	ldr	r3, [fp, #-12]
     45c:	mov	r0, r3
     460:	sub	sp, fp, #4
     464:	pop	{fp, pc}
	...
     470:	.word	0x00001bcc

00000474 <coda_inflateInit_>:
     474:	push	{fp, lr}
     478:	add	fp, sp, #4
     47c:	sub	sp, sp, #16
     480:	str	r0, [fp, #-8]
     484:	str	r1, [fp, #-12]
     488:	str	r2, [fp, #-16]
     48c:	ldr	r3, [fp, #-16]
     490:	ldr	r2, [fp, #-12]
     494:	mov	r1, #15
     498:	ldr	r0, [fp, #-8]
     49c:	bl	314 <coda_inflateInit2_>
     4a0:	mov	r3, r0
     4a4:	mov	r0, r3
     4a8:	sub	sp, fp, #4
     4ac:	pop	{fp, pc}

000004b0 <coda_inflatePrime>:
     4b0:	push	{fp}		; (str fp, [sp, #-4]!)
     4b4:	add	fp, sp, #0
     4b8:	sub	sp, sp, #28
     4bc:	str	r0, [fp, #-16]
     4c0:	str	r1, [fp, #-20]	; 0xffffffec
     4c4:	str	r2, [fp, #-24]	; 0xffffffe8
     4c8:	ldr	r3, [fp, #-16]
     4cc:	cmp	r3, #0
     4d0:	beq	4e4 <coda_inflatePrime+0x34>
     4d4:	ldr	r3, [fp, #-16]
     4d8:	ldr	r3, [r3, #28]
     4dc:	cmp	r3, #0
     4e0:	bne	4ec <coda_inflatePrime+0x3c>
     4e4:	mvn	r3, #1
     4e8:	b	5ac <coda_inflatePrime+0xfc>
     4ec:	ldr	r3, [fp, #-16]
     4f0:	ldr	r3, [r3, #28]
     4f4:	str	r3, [fp, #-8]
     4f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     4fc:	cmp	r3, #0
     500:	bge	524 <coda_inflatePrime+0x74>
     504:	ldr	r3, [fp, #-8]
     508:	mov	r2, #0
     50c:	str	r2, [r3, #56]	; 0x38
     510:	ldr	r3, [fp, #-8]
     514:	mov	r2, #0
     518:	str	r2, [r3, #60]	; 0x3c
     51c:	mov	r3, #0
     520:	b	5ac <coda_inflatePrime+0xfc>
     524:	ldr	r3, [fp, #-20]	; 0xffffffec
     528:	cmp	r3, #16
     52c:	bgt	548 <coda_inflatePrime+0x98>
     530:	ldr	r3, [fp, #-8]
     534:	ldr	r2, [r3, #60]	; 0x3c
     538:	ldr	r3, [fp, #-20]	; 0xffffffec
     53c:	add	r3, r2, r3
     540:	cmp	r3, #32
     544:	bls	550 <coda_inflatePrime+0xa0>
     548:	mvn	r3, #1
     54c:	b	5ac <coda_inflatePrime+0xfc>
     550:	mov	r2, #1
     554:	ldr	r3, [fp, #-20]	; 0xffffffec
     558:	lsl	r3, r2, r3
     55c:	sub	r3, r3, #1
     560:	ldr	r2, [fp, #-24]	; 0xffffffe8
     564:	and	r3, r3, r2
     568:	str	r3, [fp, #-24]	; 0xffffffe8
     56c:	ldr	r3, [fp, #-8]
     570:	ldr	r3, [r3, #56]	; 0x38
     574:	ldr	r2, [fp, #-8]
     578:	ldr	r2, [r2, #60]	; 0x3c
     57c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     580:	lsl	r2, r1, r2
     584:	add	r2, r3, r2
     588:	ldr	r3, [fp, #-8]
     58c:	str	r2, [r3, #56]	; 0x38
     590:	ldr	r3, [fp, #-8]
     594:	ldr	r2, [r3, #60]	; 0x3c
     598:	ldr	r3, [fp, #-20]	; 0xffffffec
     59c:	add	r2, r2, r3
     5a0:	ldr	r3, [fp, #-8]
     5a4:	str	r2, [r3, #60]	; 0x3c
     5a8:	mov	r3, #0
     5ac:	mov	r0, r3
     5b0:	add	sp, fp, #0
     5b4:	pop	{fp}		; (ldr fp, [sp], #4)
     5b8:	bx	lr

000005bc <fixedtables>:
     5bc:	push	{fp}		; (str fp, [sp, #-4]!)
     5c0:	add	fp, sp, #0
     5c4:	sub	sp, sp, #12
     5c8:	str	r0, [fp, #-8]
     5cc:	ldr	r3, [fp, #-8]
     5d0:	ldr	r2, [pc, #52]	; 60c <fixedtables+0x50>
     5d4:	str	r2, [r3, #76]	; 0x4c
     5d8:	ldr	r3, [fp, #-8]
     5dc:	mov	r2, #9
     5e0:	str	r2, [r3, #84]	; 0x54
     5e4:	ldr	r3, [fp, #-8]
     5e8:	ldr	r2, [pc, #32]	; 610 <fixedtables+0x54>
     5ec:	str	r2, [r3, #80]	; 0x50
     5f0:	ldr	r3, [fp, #-8]
     5f4:	mov	r2, #5
     5f8:	str	r2, [r3, #88]	; 0x58
     5fc:	nop			; (mov r0, r0)
     600:	add	sp, fp, #0
     604:	pop	{fp}		; (ldr fp, [sp], #4)
     608:	bx	lr
     60c:	.word	0x000001e8
     610:	.word	0x000009e8

00000614 <updatewindow>:
     614:	push	{fp, lr}
     618:	add	fp, sp, #4
     61c:	sub	sp, sp, #24
     620:	str	r0, [fp, #-16]
     624:	str	r1, [fp, #-20]	; 0xffffffec
     628:	str	r2, [fp, #-24]	; 0xffffffe8
     62c:	ldr	r3, [fp, #-16]
     630:	ldr	r3, [r3, #28]
     634:	str	r3, [fp, #-12]
     638:	ldr	r3, [fp, #-12]
     63c:	ldr	r3, [r3, #52]	; 0x34
     640:	cmp	r3, #0
     644:	bne	694 <updatewindow+0x80>
     648:	ldr	r3, [fp, #-16]
     64c:	ldr	r3, [r3, #32]
     650:	ldr	r2, [fp, #-16]
     654:	ldr	r0, [r2, #40]	; 0x28
     658:	ldr	r2, [fp, #-12]
     65c:	ldr	r2, [r2, #36]	; 0x24
     660:	mov	r1, #1
     664:	lsl	r1, r1, r2
     668:	mov	r2, #1
     66c:	blx	r3
     670:	mov	r2, r0
     674:	ldr	r3, [fp, #-12]
     678:	str	r2, [r3, #52]	; 0x34
     67c:	ldr	r3, [fp, #-12]
     680:	ldr	r3, [r3, #52]	; 0x34
     684:	cmp	r3, #0
     688:	bne	694 <updatewindow+0x80>
     68c:	mov	r3, #1
     690:	b	864 <updatewindow+0x250>
     694:	ldr	r3, [fp, #-12]
     698:	ldr	r3, [r3, #40]	; 0x28
     69c:	cmp	r3, #0
     6a0:	bne	6d4 <updatewindow+0xc0>
     6a4:	ldr	r3, [fp, #-12]
     6a8:	ldr	r3, [r3, #36]	; 0x24
     6ac:	mov	r2, #1
     6b0:	lsl	r2, r2, r3
     6b4:	ldr	r3, [fp, #-12]
     6b8:	str	r2, [r3, #40]	; 0x28
     6bc:	ldr	r3, [fp, #-12]
     6c0:	mov	r2, #0
     6c4:	str	r2, [r3, #48]	; 0x30
     6c8:	ldr	r3, [fp, #-12]
     6cc:	mov	r2, #0
     6d0:	str	r2, [r3, #44]	; 0x2c
     6d4:	ldr	r3, [fp, #-12]
     6d8:	ldr	r2, [r3, #40]	; 0x28
     6dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6e0:	cmp	r2, r3
     6e4:	bhi	734 <updatewindow+0x120>
     6e8:	ldr	r3, [fp, #-12]
     6ec:	ldr	r0, [r3, #52]	; 0x34
     6f0:	ldr	r3, [fp, #-12]
     6f4:	ldr	r3, [r3, #40]	; 0x28
     6f8:	rsb	r3, r3, #0
     6fc:	ldr	r2, [fp, #-20]	; 0xffffffec
     700:	add	r1, r2, r3
     704:	ldr	r3, [fp, #-12]
     708:	ldr	r3, [r3, #40]	; 0x28
     70c:	mov	r2, r3
     710:	bl	0 <memcpy>
     714:	ldr	r3, [fp, #-12]
     718:	mov	r2, #0
     71c:	str	r2, [r3, #48]	; 0x30
     720:	ldr	r3, [fp, #-12]
     724:	ldr	r2, [r3, #40]	; 0x28
     728:	ldr	r3, [fp, #-12]
     72c:	str	r2, [r3, #44]	; 0x2c
     730:	b	860 <updatewindow+0x24c>
     734:	ldr	r3, [fp, #-12]
     738:	ldr	r2, [r3, #40]	; 0x28
     73c:	ldr	r3, [fp, #-12]
     740:	ldr	r3, [r3, #48]	; 0x30
     744:	sub	r3, r2, r3
     748:	str	r3, [fp, #-8]
     74c:	ldr	r2, [fp, #-8]
     750:	ldr	r3, [fp, #-24]	; 0xffffffe8
     754:	cmp	r2, r3
     758:	bls	764 <updatewindow+0x150>
     75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     760:	str	r3, [fp, #-8]
     764:	ldr	r3, [fp, #-12]
     768:	ldr	r2, [r3, #52]	; 0x34
     76c:	ldr	r3, [fp, #-12]
     770:	ldr	r3, [r3, #48]	; 0x30
     774:	add	r0, r2, r3
     778:	ldr	r3, [fp, #-24]	; 0xffffffe8
     77c:	rsb	r3, r3, #0
     780:	ldr	r2, [fp, #-20]	; 0xffffffec
     784:	add	r3, r2, r3
     788:	ldr	r2, [fp, #-8]
     78c:	mov	r1, r3
     790:	bl	0 <memcpy>
     794:	ldr	r2, [fp, #-24]	; 0xffffffe8
     798:	ldr	r3, [fp, #-8]
     79c:	sub	r3, r2, r3
     7a0:	str	r3, [fp, #-24]	; 0xffffffe8
     7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7a8:	cmp	r3, #0
     7ac:	beq	7f4 <updatewindow+0x1e0>
     7b0:	ldr	r3, [fp, #-12]
     7b4:	ldr	r0, [r3, #52]	; 0x34
     7b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7bc:	rsb	r3, r3, #0
     7c0:	ldr	r2, [fp, #-20]	; 0xffffffec
     7c4:	add	r3, r2, r3
     7c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7cc:	mov	r1, r3
     7d0:	bl	0 <memcpy>
     7d4:	ldr	r3, [fp, #-12]
     7d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     7dc:	str	r2, [r3, #48]	; 0x30
     7e0:	ldr	r3, [fp, #-12]
     7e4:	ldr	r2, [r3, #40]	; 0x28
     7e8:	ldr	r3, [fp, #-12]
     7ec:	str	r2, [r3, #44]	; 0x2c
     7f0:	b	860 <updatewindow+0x24c>
     7f4:	ldr	r3, [fp, #-12]
     7f8:	ldr	r2, [r3, #48]	; 0x30
     7fc:	ldr	r3, [fp, #-8]
     800:	add	r2, r2, r3
     804:	ldr	r3, [fp, #-12]
     808:	str	r2, [r3, #48]	; 0x30
     80c:	ldr	r3, [fp, #-12]
     810:	ldr	r2, [r3, #48]	; 0x30
     814:	ldr	r3, [fp, #-12]
     818:	ldr	r3, [r3, #40]	; 0x28
     81c:	cmp	r2, r3
     820:	bne	830 <updatewindow+0x21c>
     824:	ldr	r3, [fp, #-12]
     828:	mov	r2, #0
     82c:	str	r2, [r3, #48]	; 0x30
     830:	ldr	r3, [fp, #-12]
     834:	ldr	r2, [r3, #44]	; 0x2c
     838:	ldr	r3, [fp, #-12]
     83c:	ldr	r3, [r3, #40]	; 0x28
     840:	cmp	r2, r3
     844:	bcs	860 <updatewindow+0x24c>
     848:	ldr	r3, [fp, #-12]
     84c:	ldr	r2, [r3, #44]	; 0x2c
     850:	ldr	r3, [fp, #-8]
     854:	add	r2, r2, r3
     858:	ldr	r3, [fp, #-12]
     85c:	str	r2, [r3, #44]	; 0x2c
     860:	mov	r3, #0
     864:	mov	r0, r3
     868:	sub	sp, fp, #4
     86c:	pop	{fp, pc}

00000870 <coda_inflate>:
     870:	push	{fp, lr}
     874:	add	fp, sp, #4
     878:	sub	sp, sp, #80	; 0x50
     87c:	str	r0, [fp, #-72]	; 0xffffffb8
     880:	str	r1, [fp, #-76]	; 0xffffffb4
     884:	ldr	r3, [fp, #-72]	; 0xffffffb8
     888:	cmp	r3, #0
     88c:	beq	8d0 <coda_inflate+0x60>
     890:	ldr	r3, [fp, #-72]	; 0xffffffb8
     894:	ldr	r3, [r3, #28]
     898:	cmp	r3, #0
     89c:	beq	8d0 <coda_inflate+0x60>
     8a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8a4:	ldr	r3, [r3, #12]
     8a8:	cmp	r3, #0
     8ac:	beq	8d0 <coda_inflate+0x60>
     8b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8b4:	ldr	r3, [r3]
     8b8:	cmp	r3, #0
     8bc:	bne	8d8 <coda_inflate+0x68>
     8c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8c4:	ldr	r3, [r3, #4]
     8c8:	cmp	r3, #0
     8cc:	beq	8d8 <coda_inflate+0x68>
     8d0:	mvn	r3, #1
     8d4:	b	35a4 <coda_inflate+0x2d34>
     8d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8dc:	ldr	r3, [r3, #28]
     8e0:	str	r3, [fp, #-52]	; 0xffffffcc
     8e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     8e8:	ldr	r3, [r3]
     8ec:	cmp	r3, #11
     8f0:	bne	900 <coda_inflate+0x90>
     8f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     8f8:	mov	r2, #12
     8fc:	str	r2, [r3]
     900:	ldr	r3, [fp, #-72]	; 0xffffffb8
     904:	ldr	r3, [r3, #12]
     908:	str	r3, [fp, #-12]
     90c:	ldr	r3, [fp, #-72]	; 0xffffffb8
     910:	ldr	r3, [r3, #16]
     914:	str	r3, [fp, #-20]	; 0xffffffec
     918:	ldr	r3, [fp, #-72]	; 0xffffffb8
     91c:	ldr	r3, [r3]
     920:	str	r3, [fp, #-8]
     924:	ldr	r3, [fp, #-72]	; 0xffffffb8
     928:	ldr	r3, [r3, #4]
     92c:	str	r3, [fp, #-16]
     930:	ldr	r3, [fp, #-52]	; 0xffffffcc
     934:	ldr	r3, [r3, #56]	; 0x38
     938:	str	r3, [fp, #-24]	; 0xffffffe8
     93c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     940:	ldr	r3, [r3, #60]	; 0x3c
     944:	str	r3, [fp, #-28]	; 0xffffffe4
     948:	ldr	r3, [fp, #-16]
     94c:	str	r3, [fp, #-56]	; 0xffffffc8
     950:	ldr	r3, [fp, #-20]	; 0xffffffec
     954:	str	r3, [fp, #-32]	; 0xffffffe0
     958:	mov	r3, #0
     95c:	str	r3, [fp, #-48]	; 0xffffffd0
     960:	ldr	r3, [fp, #-52]	; 0xffffffcc
     964:	ldr	r3, [r3]
     968:	cmp	r3, #30
     96c:	ldrls	pc, [pc, r3, lsl #2]
     970:	b	31e4 <coda_inflate+0x2974>
     974:	.word	0x000009f0
     978:	.word	0x00000d14
     97c:	.word	0x00000e74
     980:	.word	0x00000f80
     984:	.word	0x00001034
     988:	.word	0x00001164
     98c:	.word	0x000012dc
     990:	.word	0x0000144c
     994:	.word	0x000015b0
     998:	.word	0x00001728
     99c:	.word	0x0000179c
     9a0:	.word	0x00001834
     9a4:	.word	0x0000184c
     9a8:	.word	0x000019c8
     9ac:	.word	0x00001b04
     9b0:	.word	0x00001b10
     9b4:	.word	0x00001c2c
     9b8:	.word	0x00001dd8
     9bc:	.word	0x00002320
     9c0:	.word	0x000024cc
     9c4:	.word	0x000024d8
     9c8:	.word	0x00002890
     9cc:	.word	0x000029a8
     9d0:	.word	0x00002c10
     9d4:	.word	0x00002d14
     9d8:	.word	0x00002ee8
     9dc:	.word	0x00002f2c
     9e0:	.word	0x000030fc
     9e4:	.word	0x000031c4
     9e8:	.word	0x000031d0
     9ec:	.word	0x000031dc
     9f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     9f4:	ldr	r3, [r3, #8]
     9f8:	cmp	r3, #0
     9fc:	bne	a5c <coda_inflate+0x1ec>
     a00:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a04:	mov	r2, #12
     a08:	str	r2, [r3]
     a0c:	b	3200 <coda_inflate+0x2990>
     a10:	ldr	r3, [fp, #-16]
     a14:	cmp	r3, #0
     a18:	beq	3204 <coda_inflate+0x2994>
     a1c:	ldr	r3, [fp, #-16]
     a20:	sub	r3, r3, #1
     a24:	str	r3, [fp, #-16]
     a28:	ldr	r3, [fp, #-8]
     a2c:	add	r2, r3, #1
     a30:	str	r2, [fp, #-8]
     a34:	ldrb	r3, [r3]
     a38:	mov	r2, r3
     a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a40:	lsl	r3, r2, r3
     a44:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a48:	add	r3, r2, r3
     a4c:	str	r3, [fp, #-24]	; 0xffffffe8
     a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a54:	add	r3, r3, #8
     a58:	str	r3, [fp, #-28]	; 0xffffffe4
     a5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a60:	cmp	r3, #15
     a64:	bls	a10 <coda_inflate+0x1a0>
     a68:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a6c:	ldr	r3, [r3, #8]
     a70:	and	r3, r3, #2
     a74:	cmp	r3, #0
     a78:	beq	b08 <coda_inflate+0x298>
     a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a80:	ldr	r2, [pc, #3940]	; 19ec <coda_inflate+0x117c>
     a84:	cmp	r3, r2
     a88:	bne	b08 <coda_inflate+0x298>
     a8c:	mov	r2, #0
     a90:	mov	r1, #0
     a94:	mov	r0, #0
     a98:	bl	0 <coda_crc32>
     a9c:	mov	r2, r0
     aa0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     aa4:	str	r2, [r3, #24]
     aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     aac:	uxtb	r3, r3
     ab0:	strb	r3, [fp, #-68]	; 0xffffffbc
     ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ab8:	lsr	r3, r3, #8
     abc:	uxtb	r3, r3
     ac0:	strb	r3, [fp, #-67]	; 0xffffffbd
     ac4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ac8:	ldr	r3, [r3, #24]
     acc:	sub	r1, fp, #68	; 0x44
     ad0:	mov	r2, #2
     ad4:	mov	r0, r3
     ad8:	bl	0 <coda_crc32>
     adc:	mov	r2, r0
     ae0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ae4:	str	r2, [r3, #24]
     ae8:	mov	r3, #0
     aec:	str	r3, [fp, #-24]	; 0xffffffe8
     af0:	mov	r3, #0
     af4:	str	r3, [fp, #-28]	; 0xffffffe4
     af8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     afc:	mov	r2, #1
     b00:	str	r2, [r3]
     b04:	b	3200 <coda_inflate+0x2990>
     b08:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b0c:	mov	r2, #0
     b10:	str	r2, [r3, #16]
     b14:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b18:	ldr	r3, [r3, #32]
     b1c:	cmp	r3, #0
     b20:	beq	b34 <coda_inflate+0x2c4>
     b24:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b28:	ldr	r3, [r3, #32]
     b2c:	mvn	r2, #0
     b30:	str	r2, [r3, #48]	; 0x30
     b34:	ldr	r3, [fp, #-52]	; 0xffffffcc
     b38:	ldr	r3, [r3, #8]
     b3c:	and	r3, r3, #1
     b40:	cmp	r3, #0
     b44:	beq	b90 <coda_inflate+0x320>
     b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b4c:	lsl	r3, r3, #8
     b50:	uxth	r2, r3
     b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b58:	lsr	r3, r3, #8
     b5c:	add	r1, r2, r3
     b60:	ldr	r3, [pc, #3720]	; 19f0 <coda_inflate+0x1180>
     b64:	umull	r2, r3, r3, r1
     b68:	sub	r2, r1, r3
     b6c:	lsr	r2, r2, #1
     b70:	add	r3, r3, r2
     b74:	lsr	r2, r3, #4
     b78:	mov	r3, r2
     b7c:	lsl	r3, r3, #5
     b80:	sub	r3, r3, r2
     b84:	sub	r2, r1, r3
     b88:	cmp	r2, #0
     b8c:	beq	bac <coda_inflate+0x33c>
     b90:	ldr	r3, [fp, #-72]	; 0xffffffb8
     b94:	ldr	r2, [pc, #3672]	; 19f4 <coda_inflate+0x1184>
     b98:	str	r2, [r3, #24]
     b9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ba0:	mov	r2, #29
     ba4:	str	r2, [r3]
     ba8:	b	3200 <coda_inflate+0x2990>
     bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bb0:	and	r3, r3, #15
     bb4:	cmp	r3, #8
     bb8:	beq	bd8 <coda_inflate+0x368>
     bbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     bc0:	ldr	r2, [pc, #3632]	; 19f8 <coda_inflate+0x1188>
     bc4:	str	r2, [r3, #24]
     bc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     bcc:	mov	r2, #29
     bd0:	str	r2, [r3]
     bd4:	b	3200 <coda_inflate+0x2990>
     bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bdc:	lsr	r3, r3, #4
     be0:	str	r3, [fp, #-24]	; 0xffffffe8
     be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     be8:	sub	r3, r3, #4
     bec:	str	r3, [fp, #-28]	; 0xffffffe4
     bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bf4:	and	r3, r3, #15
     bf8:	add	r3, r3, #8
     bfc:	str	r3, [fp, #-44]	; 0xffffffd4
     c00:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c04:	ldr	r3, [r3, #36]	; 0x24
     c08:	cmp	r3, #0
     c0c:	bne	c20 <coda_inflate+0x3b0>
     c10:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c14:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c18:	str	r2, [r3, #36]	; 0x24
     c1c:	b	c50 <coda_inflate+0x3e0>
     c20:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c24:	ldr	r2, [r3, #36]	; 0x24
     c28:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c2c:	cmp	r2, r3
     c30:	bcs	c50 <coda_inflate+0x3e0>
     c34:	ldr	r3, [fp, #-72]	; 0xffffffb8
     c38:	ldr	r2, [pc, #3516]	; 19fc <coda_inflate+0x118c>
     c3c:	str	r2, [r3, #24]
     c40:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c44:	mov	r2, #29
     c48:	str	r2, [r3]
     c4c:	b	3200 <coda_inflate+0x2990>
     c50:	mov	r2, #1
     c54:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c58:	lsl	r2, r2, r3
     c5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c60:	str	r2, [r3, #20]
     c64:	mov	r2, #0
     c68:	mov	r1, #0
     c6c:	mov	r0, #0
     c70:	bl	0 <coda_adler32>
     c74:	mov	r2, r0
     c78:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c7c:	str	r2, [r3, #24]
     c80:	ldr	r3, [fp, #-52]	; 0xffffffcc
     c84:	ldr	r2, [r3, #24]
     c88:	ldr	r3, [fp, #-72]	; 0xffffffb8
     c8c:	str	r2, [r3, #48]	; 0x30
     c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c94:	and	r3, r3, #512	; 0x200
     c98:	cmp	r3, #0
     c9c:	beq	ca8 <coda_inflate+0x438>
     ca0:	mov	r2, #9
     ca4:	b	cac <coda_inflate+0x43c>
     ca8:	mov	r2, #11
     cac:	ldr	r3, [fp, #-52]	; 0xffffffcc
     cb0:	str	r2, [r3]
     cb4:	mov	r3, #0
     cb8:	str	r3, [fp, #-24]	; 0xffffffe8
     cbc:	mov	r3, #0
     cc0:	str	r3, [fp, #-28]	; 0xffffffe4
     cc4:	b	3200 <coda_inflate+0x2990>
     cc8:	ldr	r3, [fp, #-16]
     ccc:	cmp	r3, #0
     cd0:	beq	320c <coda_inflate+0x299c>
     cd4:	ldr	r3, [fp, #-16]
     cd8:	sub	r3, r3, #1
     cdc:	str	r3, [fp, #-16]
     ce0:	ldr	r3, [fp, #-8]
     ce4:	add	r2, r3, #1
     ce8:	str	r2, [fp, #-8]
     cec:	ldrb	r3, [r3]
     cf0:	mov	r2, r3
     cf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     cf8:	lsl	r3, r2, r3
     cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d00:	add	r3, r2, r3
     d04:	str	r3, [fp, #-24]	; 0xffffffe8
     d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d0c:	add	r3, r3, #8
     d10:	str	r3, [fp, #-28]	; 0xffffffe4
     d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d18:	cmp	r3, #15
     d1c:	bls	cc8 <coda_inflate+0x458>
     d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d24:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d28:	str	r2, [r3, #16]
     d2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d30:	ldr	r3, [r3, #16]
     d34:	uxtb	r3, r3
     d38:	cmp	r3, #8
     d3c:	beq	d5c <coda_inflate+0x4ec>
     d40:	ldr	r3, [fp, #-72]	; 0xffffffb8
     d44:	ldr	r2, [pc, #3244]	; 19f8 <coda_inflate+0x1188>
     d48:	str	r2, [r3, #24]
     d4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d50:	mov	r2, #29
     d54:	str	r2, [r3]
     d58:	b	3200 <coda_inflate+0x2990>
     d5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d60:	ldr	r3, [r3, #16]
     d64:	and	r3, r3, #57344	; 0xe000
     d68:	cmp	r3, #0
     d6c:	beq	d8c <coda_inflate+0x51c>
     d70:	ldr	r3, [fp, #-72]	; 0xffffffb8
     d74:	ldr	r2, [pc, #3204]	; 1a00 <coda_inflate+0x1190>
     d78:	str	r2, [r3, #24]
     d7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d80:	mov	r2, #29
     d84:	str	r2, [r3]
     d88:	b	3200 <coda_inflate+0x2990>
     d8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d90:	ldr	r3, [r3, #32]
     d94:	cmp	r3, #0
     d98:	beq	db4 <coda_inflate+0x544>
     d9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     da0:	ldr	r3, [r3, #32]
     da4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     da8:	lsr	r2, r2, #8
     dac:	and	r2, r2, #1
     db0:	str	r2, [r3]
     db4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     db8:	ldr	r3, [r3, #16]
     dbc:	and	r3, r3, #512	; 0x200
     dc0:	cmp	r3, #0
     dc4:	beq	e08 <coda_inflate+0x598>
     dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dcc:	uxtb	r3, r3
     dd0:	strb	r3, [fp, #-68]	; 0xffffffbc
     dd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dd8:	lsr	r3, r3, #8
     ddc:	uxtb	r3, r3
     de0:	strb	r3, [fp, #-67]	; 0xffffffbd
     de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     de8:	ldr	r3, [r3, #24]
     dec:	sub	r1, fp, #68	; 0x44
     df0:	mov	r2, #2
     df4:	mov	r0, r3
     df8:	bl	0 <coda_crc32>
     dfc:	mov	r2, r0
     e00:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e04:	str	r2, [r3, #24]
     e08:	mov	r3, #0
     e0c:	str	r3, [fp, #-24]	; 0xffffffe8
     e10:	mov	r3, #0
     e14:	str	r3, [fp, #-28]	; 0xffffffe4
     e18:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e1c:	mov	r2, #2
     e20:	str	r2, [r3]
     e24:	b	e74 <coda_inflate+0x604>
     e28:	ldr	r3, [fp, #-16]
     e2c:	cmp	r3, #0
     e30:	beq	3214 <coda_inflate+0x29a4>
     e34:	ldr	r3, [fp, #-16]
     e38:	sub	r3, r3, #1
     e3c:	str	r3, [fp, #-16]
     e40:	ldr	r3, [fp, #-8]
     e44:	add	r2, r3, #1
     e48:	str	r2, [fp, #-8]
     e4c:	ldrb	r3, [r3]
     e50:	mov	r2, r3
     e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e58:	lsl	r3, r2, r3
     e5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e60:	add	r3, r2, r3
     e64:	str	r3, [fp, #-24]	; 0xffffffe8
     e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e6c:	add	r3, r3, #8
     e70:	str	r3, [fp, #-28]	; 0xffffffe4
     e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e78:	cmp	r3, #31
     e7c:	bls	e28 <coda_inflate+0x5b8>
     e80:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e84:	ldr	r3, [r3, #32]
     e88:	cmp	r3, #0
     e8c:	beq	ea0 <coda_inflate+0x630>
     e90:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e94:	ldr	r3, [r3, #32]
     e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e9c:	str	r2, [r3, #4]
     ea0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ea4:	ldr	r3, [r3, #16]
     ea8:	and	r3, r3, #512	; 0x200
     eac:	cmp	r3, #0
     eb0:	beq	f14 <coda_inflate+0x6a4>
     eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     eb8:	uxtb	r3, r3
     ebc:	strb	r3, [fp, #-68]	; 0xffffffbc
     ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ec4:	lsr	r3, r3, #8
     ec8:	uxtb	r3, r3
     ecc:	strb	r3, [fp, #-67]	; 0xffffffbd
     ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ed4:	lsr	r3, r3, #16
     ed8:	uxtb	r3, r3
     edc:	strb	r3, [fp, #-66]	; 0xffffffbe
     ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ee4:	lsr	r3, r3, #24
     ee8:	uxtb	r3, r3
     eec:	strb	r3, [fp, #-65]	; 0xffffffbf
     ef0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ef4:	ldr	r3, [r3, #24]
     ef8:	sub	r1, fp, #68	; 0x44
     efc:	mov	r2, #4
     f00:	mov	r0, r3
     f04:	bl	0 <coda_crc32>
     f08:	mov	r2, r0
     f0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f10:	str	r2, [r3, #24]
     f14:	mov	r3, #0
     f18:	str	r3, [fp, #-24]	; 0xffffffe8
     f1c:	mov	r3, #0
     f20:	str	r3, [fp, #-28]	; 0xffffffe4
     f24:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f28:	mov	r2, #3
     f2c:	str	r2, [r3]
     f30:	b	f80 <coda_inflate+0x710>
     f34:	ldr	r3, [fp, #-16]
     f38:	cmp	r3, #0
     f3c:	beq	321c <coda_inflate+0x29ac>
     f40:	ldr	r3, [fp, #-16]
     f44:	sub	r3, r3, #1
     f48:	str	r3, [fp, #-16]
     f4c:	ldr	r3, [fp, #-8]
     f50:	add	r2, r3, #1
     f54:	str	r2, [fp, #-8]
     f58:	ldrb	r3, [r3]
     f5c:	mov	r2, r3
     f60:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f64:	lsl	r3, r2, r3
     f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f6c:	add	r3, r2, r3
     f70:	str	r3, [fp, #-24]	; 0xffffffe8
     f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f78:	add	r3, r3, #8
     f7c:	str	r3, [fp, #-28]	; 0xffffffe4
     f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f84:	cmp	r3, #15
     f88:	bls	f34 <coda_inflate+0x6c4>
     f8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f90:	ldr	r3, [r3, #32]
     f94:	cmp	r3, #0
     f98:	beq	fc4 <coda_inflate+0x754>
     f9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     fa0:	ldr	r3, [r3, #32]
     fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
     fa8:	uxtb	r2, r2
     fac:	str	r2, [r3, #8]
     fb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     fb4:	ldr	r3, [r3, #32]
     fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     fbc:	lsr	r2, r2, #8
     fc0:	str	r2, [r3, #12]
     fc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     fc8:	ldr	r3, [r3, #16]
     fcc:	and	r3, r3, #512	; 0x200
     fd0:	cmp	r3, #0
     fd4:	beq	1018 <coda_inflate+0x7a8>
     fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fdc:	uxtb	r3, r3
     fe0:	strb	r3, [fp, #-68]	; 0xffffffbc
     fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fe8:	lsr	r3, r3, #8
     fec:	uxtb	r3, r3
     ff0:	strb	r3, [fp, #-67]	; 0xffffffbd
     ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ff8:	ldr	r3, [r3, #24]
     ffc:	sub	r1, fp, #68	; 0x44
    1000:	mov	r2, #2
    1004:	mov	r0, r3
    1008:	bl	0 <coda_crc32>
    100c:	mov	r2, r0
    1010:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1014:	str	r2, [r3, #24]
    1018:	mov	r3, #0
    101c:	str	r3, [fp, #-24]	; 0xffffffe8
    1020:	mov	r3, #0
    1024:	str	r3, [fp, #-28]	; 0xffffffe4
    1028:	ldr	r3, [fp, #-52]	; 0xffffffcc
    102c:	mov	r2, #4
    1030:	str	r2, [r3]
    1034:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1038:	ldr	r3, [r3, #16]
    103c:	and	r3, r3, #1024	; 0x400
    1040:	cmp	r3, #0
    1044:	beq	1138 <coda_inflate+0x8c8>
    1048:	b	1098 <coda_inflate+0x828>
    104c:	ldr	r3, [fp, #-16]
    1050:	cmp	r3, #0
    1054:	beq	3224 <coda_inflate+0x29b4>
    1058:	ldr	r3, [fp, #-16]
    105c:	sub	r3, r3, #1
    1060:	str	r3, [fp, #-16]
    1064:	ldr	r3, [fp, #-8]
    1068:	add	r2, r3, #1
    106c:	str	r2, [fp, #-8]
    1070:	ldrb	r3, [r3]
    1074:	mov	r2, r3
    1078:	ldr	r3, [fp, #-28]	; 0xffffffe4
    107c:	lsl	r3, r2, r3
    1080:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1084:	add	r3, r2, r3
    1088:	str	r3, [fp, #-24]	; 0xffffffe8
    108c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1090:	add	r3, r3, #8
    1094:	str	r3, [fp, #-28]	; 0xffffffe4
    1098:	ldr	r3, [fp, #-28]	; 0xffffffe4
    109c:	cmp	r3, #15
    10a0:	bls	104c <coda_inflate+0x7dc>
    10a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    10a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10ac:	str	r2, [r3, #64]	; 0x40
    10b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    10b4:	ldr	r3, [r3, #32]
    10b8:	cmp	r3, #0
    10bc:	beq	10d0 <coda_inflate+0x860>
    10c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    10c4:	ldr	r3, [r3, #32]
    10c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10cc:	str	r2, [r3, #20]
    10d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    10d4:	ldr	r3, [r3, #16]
    10d8:	and	r3, r3, #512	; 0x200
    10dc:	cmp	r3, #0
    10e0:	beq	1124 <coda_inflate+0x8b4>
    10e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10e8:	uxtb	r3, r3
    10ec:	strb	r3, [fp, #-68]	; 0xffffffbc
    10f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10f4:	lsr	r3, r3, #8
    10f8:	uxtb	r3, r3
    10fc:	strb	r3, [fp, #-67]	; 0xffffffbd
    1100:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1104:	ldr	r3, [r3, #24]
    1108:	sub	r1, fp, #68	; 0x44
    110c:	mov	r2, #2
    1110:	mov	r0, r3
    1114:	bl	0 <coda_crc32>
    1118:	mov	r2, r0
    111c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1120:	str	r2, [r3, #24]
    1124:	mov	r3, #0
    1128:	str	r3, [fp, #-24]	; 0xffffffe8
    112c:	mov	r3, #0
    1130:	str	r3, [fp, #-28]	; 0xffffffe4
    1134:	b	1158 <coda_inflate+0x8e8>
    1138:	ldr	r3, [fp, #-52]	; 0xffffffcc
    113c:	ldr	r3, [r3, #32]
    1140:	cmp	r3, #0
    1144:	beq	1158 <coda_inflate+0x8e8>
    1148:	ldr	r3, [fp, #-52]	; 0xffffffcc
    114c:	ldr	r3, [r3, #32]
    1150:	mov	r2, #0
    1154:	str	r2, [r3, #16]
    1158:	ldr	r3, [fp, #-52]	; 0xffffffcc
    115c:	mov	r2, #5
    1160:	str	r2, [r3]
    1164:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1168:	ldr	r3, [r3, #16]
    116c:	and	r3, r3, #1024	; 0x400
    1170:	cmp	r3, #0
    1174:	beq	12c4 <coda_inflate+0xa54>
    1178:	ldr	r3, [fp, #-52]	; 0xffffffcc
    117c:	ldr	r3, [r3, #64]	; 0x40
    1180:	str	r3, [fp, #-36]	; 0xffffffdc
    1184:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1188:	ldr	r3, [fp, #-16]
    118c:	cmp	r2, r3
    1190:	bls	119c <coda_inflate+0x92c>
    1194:	ldr	r3, [fp, #-16]
    1198:	str	r3, [fp, #-36]	; 0xffffffdc
    119c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11a0:	cmp	r3, #0
    11a4:	beq	12b4 <coda_inflate+0xa44>
    11a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11ac:	ldr	r3, [r3, #32]
    11b0:	cmp	r3, #0
    11b4:	beq	1244 <coda_inflate+0x9d4>
    11b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11bc:	ldr	r3, [r3, #32]
    11c0:	ldr	r3, [r3, #16]
    11c4:	cmp	r3, #0
    11c8:	beq	1244 <coda_inflate+0x9d4>
    11cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11d0:	ldr	r3, [r3, #32]
    11d4:	ldr	r2, [r3, #20]
    11d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11dc:	ldr	r3, [r3, #64]	; 0x40
    11e0:	sub	r3, r2, r3
    11e4:	str	r3, [fp, #-44]	; 0xffffffd4
    11e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11ec:	ldr	r3, [r3, #32]
    11f0:	ldr	r2, [r3, #16]
    11f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    11f8:	add	r0, r2, r3
    11fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1200:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1204:	add	r2, r2, r3
    1208:	ldr	r3, [fp, #-52]	; 0xffffffcc
    120c:	ldr	r3, [r3, #32]
    1210:	ldr	r3, [r3, #24]
    1214:	cmp	r2, r3
    1218:	bls	1234 <coda_inflate+0x9c4>
    121c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1220:	ldr	r3, [r3, #32]
    1224:	ldr	r2, [r3, #24]
    1228:	ldr	r3, [fp, #-44]	; 0xffffffd4
    122c:	sub	r3, r2, r3
    1230:	b	1238 <coda_inflate+0x9c8>
    1234:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1238:	mov	r2, r3
    123c:	ldr	r1, [fp, #-8]
    1240:	bl	0 <memcpy>
    1244:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1248:	ldr	r3, [r3, #16]
    124c:	and	r3, r3, #512	; 0x200
    1250:	cmp	r3, #0
    1254:	beq	127c <coda_inflate+0xa0c>
    1258:	ldr	r3, [fp, #-52]	; 0xffffffcc
    125c:	ldr	r3, [r3, #24]
    1260:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1264:	ldr	r1, [fp, #-8]
    1268:	mov	r0, r3
    126c:	bl	0 <coda_crc32>
    1270:	mov	r2, r0
    1274:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1278:	str	r2, [r3, #24]
    127c:	ldr	r2, [fp, #-16]
    1280:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1284:	sub	r3, r2, r3
    1288:	str	r3, [fp, #-16]
    128c:	ldr	r2, [fp, #-8]
    1290:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1294:	add	r3, r2, r3
    1298:	str	r3, [fp, #-8]
    129c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12a0:	ldr	r2, [r3, #64]	; 0x40
    12a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    12a8:	sub	r2, r2, r3
    12ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12b0:	str	r2, [r3, #64]	; 0x40
    12b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12b8:	ldr	r3, [r3, #64]	; 0x40
    12bc:	cmp	r3, #0
    12c0:	bne	322c <coda_inflate+0x29bc>
    12c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12c8:	mov	r2, #0
    12cc:	str	r2, [r3, #64]	; 0x40
    12d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12d4:	mov	r2, #6
    12d8:	str	r2, [r3]
    12dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12e0:	ldr	r3, [r3, #16]
    12e4:	and	r3, r3, #2048	; 0x800
    12e8:	cmp	r3, #0
    12ec:	beq	1414 <coda_inflate+0xba4>
    12f0:	ldr	r3, [fp, #-16]
    12f4:	cmp	r3, #0
    12f8:	beq	3234 <coda_inflate+0x29c4>
    12fc:	mov	r3, #0
    1300:	str	r3, [fp, #-36]	; 0xffffffdc
    1304:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1308:	add	r2, r3, #1
    130c:	str	r2, [fp, #-36]	; 0xffffffdc
    1310:	ldr	r2, [fp, #-8]
    1314:	add	r3, r2, r3
    1318:	ldrb	r3, [r3]
    131c:	str	r3, [fp, #-44]	; 0xffffffd4
    1320:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1324:	ldr	r3, [r3, #32]
    1328:	cmp	r3, #0
    132c:	beq	1390 <coda_inflate+0xb20>
    1330:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1334:	ldr	r3, [r3, #32]
    1338:	ldr	r3, [r3, #28]
    133c:	cmp	r3, #0
    1340:	beq	1390 <coda_inflate+0xb20>
    1344:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1348:	ldr	r2, [r3, #64]	; 0x40
    134c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1350:	ldr	r3, [r3, #32]
    1354:	ldr	r3, [r3, #32]
    1358:	cmp	r2, r3
    135c:	bcs	1390 <coda_inflate+0xb20>
    1360:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1364:	ldr	r3, [r3, #32]
    1368:	ldr	r2, [r3, #28]
    136c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1370:	ldr	r3, [r3, #64]	; 0x40
    1374:	add	r0, r3, #1
    1378:	ldr	r1, [fp, #-52]	; 0xffffffcc
    137c:	str	r0, [r1, #64]	; 0x40
    1380:	add	r3, r2, r3
    1384:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1388:	uxtb	r2, r2
    138c:	strb	r2, [r3]
    1390:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1394:	cmp	r3, #0
    1398:	beq	13ac <coda_inflate+0xb3c>
    139c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    13a0:	ldr	r3, [fp, #-16]
    13a4:	cmp	r2, r3
    13a8:	bcc	1304 <coda_inflate+0xa94>
    13ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13b0:	ldr	r3, [r3, #16]
    13b4:	and	r3, r3, #512	; 0x200
    13b8:	cmp	r3, #0
    13bc:	beq	13e4 <coda_inflate+0xb74>
    13c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13c4:	ldr	r3, [r3, #24]
    13c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    13cc:	ldr	r1, [fp, #-8]
    13d0:	mov	r0, r3
    13d4:	bl	0 <coda_crc32>
    13d8:	mov	r2, r0
    13dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    13e0:	str	r2, [r3, #24]
    13e4:	ldr	r2, [fp, #-16]
    13e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13ec:	sub	r3, r2, r3
    13f0:	str	r3, [fp, #-16]
    13f4:	ldr	r2, [fp, #-8]
    13f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13fc:	add	r3, r2, r3
    1400:	str	r3, [fp, #-8]
    1404:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1408:	cmp	r3, #0
    140c:	beq	1434 <coda_inflate+0xbc4>
    1410:	b	32f8 <coda_inflate+0x2a88>
    1414:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1418:	ldr	r3, [r3, #32]
    141c:	cmp	r3, #0
    1420:	beq	1434 <coda_inflate+0xbc4>
    1424:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1428:	ldr	r3, [r3, #32]
    142c:	mov	r2, #0
    1430:	str	r2, [r3, #28]
    1434:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1438:	mov	r2, #0
    143c:	str	r2, [r3, #64]	; 0x40
    1440:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1444:	mov	r2, #7
    1448:	str	r2, [r3]
    144c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1450:	ldr	r3, [r3, #16]
    1454:	and	r3, r3, #4096	; 0x1000
    1458:	cmp	r3, #0
    145c:	beq	1584 <coda_inflate+0xd14>
    1460:	ldr	r3, [fp, #-16]
    1464:	cmp	r3, #0
    1468:	beq	323c <coda_inflate+0x29cc>
    146c:	mov	r3, #0
    1470:	str	r3, [fp, #-36]	; 0xffffffdc
    1474:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1478:	add	r2, r3, #1
    147c:	str	r2, [fp, #-36]	; 0xffffffdc
    1480:	ldr	r2, [fp, #-8]
    1484:	add	r3, r2, r3
    1488:	ldrb	r3, [r3]
    148c:	str	r3, [fp, #-44]	; 0xffffffd4
    1490:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1494:	ldr	r3, [r3, #32]
    1498:	cmp	r3, #0
    149c:	beq	1500 <coda_inflate+0xc90>
    14a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14a4:	ldr	r3, [r3, #32]
    14a8:	ldr	r3, [r3, #36]	; 0x24
    14ac:	cmp	r3, #0
    14b0:	beq	1500 <coda_inflate+0xc90>
    14b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14b8:	ldr	r2, [r3, #64]	; 0x40
    14bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14c0:	ldr	r3, [r3, #32]
    14c4:	ldr	r3, [r3, #40]	; 0x28
    14c8:	cmp	r2, r3
    14cc:	bcs	1500 <coda_inflate+0xc90>
    14d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14d4:	ldr	r3, [r3, #32]
    14d8:	ldr	r2, [r3, #36]	; 0x24
    14dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14e0:	ldr	r3, [r3, #64]	; 0x40
    14e4:	add	r0, r3, #1
    14e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    14ec:	str	r0, [r1, #64]	; 0x40
    14f0:	add	r3, r2, r3
    14f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    14f8:	uxtb	r2, r2
    14fc:	strb	r2, [r3]
    1500:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1504:	cmp	r3, #0
    1508:	beq	151c <coda_inflate+0xcac>
    150c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1510:	ldr	r3, [fp, #-16]
    1514:	cmp	r2, r3
    1518:	bcc	1474 <coda_inflate+0xc04>
    151c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1520:	ldr	r3, [r3, #16]
    1524:	and	r3, r3, #512	; 0x200
    1528:	cmp	r3, #0
    152c:	beq	1554 <coda_inflate+0xce4>
    1530:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1534:	ldr	r3, [r3, #24]
    1538:	ldr	r2, [fp, #-36]	; 0xffffffdc
    153c:	ldr	r1, [fp, #-8]
    1540:	mov	r0, r3
    1544:	bl	0 <coda_crc32>
    1548:	mov	r2, r0
    154c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1550:	str	r2, [r3, #24]
    1554:	ldr	r2, [fp, #-16]
    1558:	ldr	r3, [fp, #-36]	; 0xffffffdc
    155c:	sub	r3, r2, r3
    1560:	str	r3, [fp, #-16]
    1564:	ldr	r2, [fp, #-8]
    1568:	ldr	r3, [fp, #-36]	; 0xffffffdc
    156c:	add	r3, r2, r3
    1570:	str	r3, [fp, #-8]
    1574:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1578:	cmp	r3, #0
    157c:	beq	15a4 <coda_inflate+0xd34>
    1580:	b	32f8 <coda_inflate+0x2a88>
    1584:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1588:	ldr	r3, [r3, #32]
    158c:	cmp	r3, #0
    1590:	beq	15a4 <coda_inflate+0xd34>
    1594:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1598:	ldr	r3, [r3, #32]
    159c:	mov	r2, #0
    15a0:	str	r2, [r3, #36]	; 0x24
    15a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15a8:	mov	r2, #8
    15ac:	str	r2, [r3]
    15b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    15b4:	ldr	r3, [r3, #16]
    15b8:	and	r3, r3, #512	; 0x200
    15bc:	cmp	r3, #0
    15c0:	beq	1664 <coda_inflate+0xdf4>
    15c4:	b	1614 <coda_inflate+0xda4>
    15c8:	ldr	r3, [fp, #-16]
    15cc:	cmp	r3, #0
    15d0:	beq	3244 <coda_inflate+0x29d4>
    15d4:	ldr	r3, [fp, #-16]
    15d8:	sub	r3, r3, #1
    15dc:	str	r3, [fp, #-16]
    15e0:	ldr	r3, [fp, #-8]
    15e4:	add	r2, r3, #1
    15e8:	str	r2, [fp, #-8]
    15ec:	ldrb	r3, [r3]
    15f0:	mov	r2, r3
    15f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15f8:	lsl	r3, r2, r3
    15fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1600:	add	r3, r2, r3
    1604:	str	r3, [fp, #-24]	; 0xffffffe8
    1608:	ldr	r3, [fp, #-28]	; 0xffffffe4
    160c:	add	r3, r3, #8
    1610:	str	r3, [fp, #-28]	; 0xffffffe4
    1614:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1618:	cmp	r3, #15
    161c:	bls	15c8 <coda_inflate+0xd58>
    1620:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1624:	ldr	r3, [r3, #24]
    1628:	uxth	r2, r3
    162c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1630:	cmp	r2, r3
    1634:	beq	1654 <coda_inflate+0xde4>
    1638:	ldr	r3, [fp, #-72]	; 0xffffffb8
    163c:	ldr	r2, [pc, #960]	; 1a04 <coda_inflate+0x1194>
    1640:	str	r2, [r3, #24]
    1644:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1648:	mov	r2, #29
    164c:	str	r2, [r3]
    1650:	b	3200 <coda_inflate+0x2990>
    1654:	mov	r3, #0
    1658:	str	r3, [fp, #-24]	; 0xffffffe8
    165c:	mov	r3, #0
    1660:	str	r3, [fp, #-28]	; 0xffffffe4
    1664:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1668:	ldr	r3, [r3, #32]
    166c:	cmp	r3, #0
    1670:	beq	16a0 <coda_inflate+0xe30>
    1674:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1678:	ldr	r3, [r3, #32]
    167c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1680:	ldr	r2, [r2, #16]
    1684:	asr	r2, r2, #9
    1688:	and	r2, r2, #1
    168c:	str	r2, [r3, #44]	; 0x2c
    1690:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1694:	ldr	r3, [r3, #32]
    1698:	mov	r2, #1
    169c:	str	r2, [r3, #48]	; 0x30
    16a0:	mov	r2, #0
    16a4:	mov	r1, #0
    16a8:	mov	r0, #0
    16ac:	bl	0 <coda_crc32>
    16b0:	mov	r2, r0
    16b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16b8:	str	r2, [r3, #24]
    16bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16c0:	ldr	r2, [r3, #24]
    16c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    16c8:	str	r2, [r3, #48]	; 0x30
    16cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16d0:	mov	r2, #11
    16d4:	str	r2, [r3]
    16d8:	b	3200 <coda_inflate+0x2990>
    16dc:	ldr	r3, [fp, #-16]
    16e0:	cmp	r3, #0
    16e4:	beq	324c <coda_inflate+0x29dc>
    16e8:	ldr	r3, [fp, #-16]
    16ec:	sub	r3, r3, #1
    16f0:	str	r3, [fp, #-16]
    16f4:	ldr	r3, [fp, #-8]
    16f8:	add	r2, r3, #1
    16fc:	str	r2, [fp, #-8]
    1700:	ldrb	r3, [r3]
    1704:	mov	r2, r3
    1708:	ldr	r3, [fp, #-28]	; 0xffffffe4
    170c:	lsl	r3, r2, r3
    1710:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1714:	add	r3, r2, r3
    1718:	str	r3, [fp, #-24]	; 0xffffffe8
    171c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1720:	add	r3, r3, #8
    1724:	str	r3, [fp, #-28]	; 0xffffffe4
    1728:	ldr	r3, [fp, #-28]	; 0xffffffe4
    172c:	cmp	r3, #31
    1730:	bls	16dc <coda_inflate+0xe6c>
    1734:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1738:	lsr	r2, r3, #24
    173c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1740:	lsr	r3, r3, #8
    1744:	and	r3, r3, #65280	; 0xff00
    1748:	add	r2, r2, r3
    174c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1750:	lsl	r3, r3, #8
    1754:	and	r3, r3, #16711680	; 0xff0000
    1758:	add	r2, r2, r3
    175c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1760:	lsl	r3, r3, #24
    1764:	add	r2, r2, r3
    1768:	ldr	r3, [fp, #-52]	; 0xffffffcc
    176c:	str	r2, [r3, #24]
    1770:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1774:	ldr	r2, [r3, #24]
    1778:	ldr	r3, [fp, #-72]	; 0xffffffb8
    177c:	str	r2, [r3, #48]	; 0x30
    1780:	mov	r3, #0
    1784:	str	r3, [fp, #-24]	; 0xffffffe8
    1788:	mov	r3, #0
    178c:	str	r3, [fp, #-28]	; 0xffffffe4
    1790:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1794:	mov	r2, #10
    1798:	str	r2, [r3]
    179c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17a0:	ldr	r3, [r3, #12]
    17a4:	cmp	r3, #0
    17a8:	bne	17fc <coda_inflate+0xf8c>
    17ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    17b0:	ldr	r2, [fp, #-12]
    17b4:	str	r2, [r3, #12]
    17b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    17bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    17c0:	str	r2, [r3, #16]
    17c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    17c8:	ldr	r2, [fp, #-8]
    17cc:	str	r2, [r3]
    17d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    17d4:	ldr	r2, [fp, #-16]
    17d8:	str	r2, [r3, #4]
    17dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    17e4:	str	r2, [r3, #56]	; 0x38
    17e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    17f0:	str	r2, [r3, #60]	; 0x3c
    17f4:	mov	r3, #2
    17f8:	b	35a4 <coda_inflate+0x2d34>
    17fc:	mov	r2, #0
    1800:	mov	r1, #0
    1804:	mov	r0, #0
    1808:	bl	0 <coda_adler32>
    180c:	mov	r2, r0
    1810:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1814:	str	r2, [r3, #24]
    1818:	ldr	r3, [fp, #-52]	; 0xffffffcc
    181c:	ldr	r2, [r3, #24]
    1820:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1824:	str	r2, [r3, #48]	; 0x30
    1828:	ldr	r3, [fp, #-52]	; 0xffffffcc
    182c:	mov	r2, #11
    1830:	str	r2, [r3]
    1834:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1838:	cmp	r3, #5
    183c:	beq	32f8 <coda_inflate+0x2a88>
    1840:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1844:	cmp	r3, #6
    1848:	beq	32f8 <coda_inflate+0x2a88>
    184c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1850:	ldr	r3, [r3, #4]
    1854:	cmp	r3, #0
    1858:	beq	18d8 <coda_inflate+0x1068>
    185c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1860:	and	r3, r3, #7
    1864:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1868:	lsr	r3, r2, r3
    186c:	str	r3, [fp, #-24]	; 0xffffffe8
    1870:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1874:	bic	r3, r3, #7
    1878:	str	r3, [fp, #-28]	; 0xffffffe4
    187c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1880:	mov	r2, #26
    1884:	str	r2, [r3]
    1888:	b	3200 <coda_inflate+0x2990>
    188c:	ldr	r3, [fp, #-16]
    1890:	cmp	r3, #0
    1894:	beq	3254 <coda_inflate+0x29e4>
    1898:	ldr	r3, [fp, #-16]
    189c:	sub	r3, r3, #1
    18a0:	str	r3, [fp, #-16]
    18a4:	ldr	r3, [fp, #-8]
    18a8:	add	r2, r3, #1
    18ac:	str	r2, [fp, #-8]
    18b0:	ldrb	r3, [r3]
    18b4:	mov	r2, r3
    18b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    18bc:	lsl	r3, r2, r3
    18c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    18c4:	add	r3, r2, r3
    18c8:	str	r3, [fp, #-24]	; 0xffffffe8
    18cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    18d0:	add	r3, r3, #8
    18d4:	str	r3, [fp, #-28]	; 0xffffffe4
    18d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    18dc:	cmp	r3, #2
    18e0:	bls	188c <coda_inflate+0x101c>
    18e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    18e8:	and	r2, r3, #1
    18ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18f0:	str	r2, [r3, #4]
    18f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    18f8:	lsr	r3, r3, #1
    18fc:	str	r3, [fp, #-24]	; 0xffffffe8
    1900:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1904:	sub	r3, r3, #1
    1908:	str	r3, [fp, #-28]	; 0xffffffe4
    190c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1910:	and	r3, r3, #3
    1914:	cmp	r3, #3
    1918:	ldrls	pc, [pc, r3, lsl #2]
    191c:	b	19ac <coda_inflate+0x113c>
    1920:	.word	0x00001930
    1924:	.word	0x00001940
    1928:	.word	0x0000197c
    192c:	.word	0x0000198c
    1930:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1934:	mov	r2, #13
    1938:	str	r2, [r3]
    193c:	b	19ac <coda_inflate+0x113c>
    1940:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1944:	bl	5bc <fixedtables>
    1948:	ldr	r3, [fp, #-52]	; 0xffffffcc
    194c:	mov	r2, #19
    1950:	str	r2, [r3]
    1954:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1958:	cmp	r3, #6
    195c:	bne	19a8 <coda_inflate+0x1138>
    1960:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1964:	lsr	r3, r3, #2
    1968:	str	r3, [fp, #-24]	; 0xffffffe8
    196c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1970:	sub	r3, r3, #2
    1974:	str	r3, [fp, #-28]	; 0xffffffe4
    1978:	b	32f8 <coda_inflate+0x2a88>
    197c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1980:	mov	r2, #16
    1984:	str	r2, [r3]
    1988:	b	19ac <coda_inflate+0x113c>
    198c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1990:	ldr	r2, [pc, #112]	; 1a08 <coda_inflate+0x1198>
    1994:	str	r2, [r3, #24]
    1998:	ldr	r3, [fp, #-52]	; 0xffffffcc
    199c:	mov	r2, #29
    19a0:	str	r2, [r3]
    19a4:	b	19ac <coda_inflate+0x113c>
    19a8:	nop			; (mov r0, r0)
    19ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19b0:	lsr	r3, r3, #2
    19b4:	str	r3, [fp, #-24]	; 0xffffffe8
    19b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19bc:	sub	r3, r3, #2
    19c0:	str	r3, [fp, #-28]	; 0xffffffe4
    19c4:	b	3200 <coda_inflate+0x2990>
    19c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19cc:	and	r3, r3, #7
    19d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19d4:	lsr	r3, r2, r3
    19d8:	str	r3, [fp, #-24]	; 0xffffffe8
    19dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    19e0:	bic	r3, r3, #7
    19e4:	str	r3, [fp, #-28]	; 0xffffffe4
    19e8:	b	1a84 <coda_inflate+0x1214>
    19ec:	.word	0x00008b1f
    19f0:	.word	0x08421085
    19f4:	.word	0x00000000
    19f8:	.word	0x00000018
    19fc:	.word	0x00000034
    1a00:	.word	0x00000048
    1a04:	.word	0x00000064
    1a08:	.word	0x00000078
    1a0c:	.word	0x0000008c
    1a10:	.word	0x0000011e
    1a14:	.word	0x000000ac
    1a18:	.word	0x00000a68
    1a1c:	.word	0x000000d0
    1a20:	.word	0x000000ec
    1a24:	.word	0x00000108
    1a28:	.word	0x00000130
    1a2c:	.word	0x0000014c
    1a30:	.word	0x00000101
    1a34:	.word	0x00000164
    1a38:	ldr	r3, [fp, #-16]
    1a3c:	cmp	r3, #0
    1a40:	beq	325c <coda_inflate+0x29ec>
    1a44:	ldr	r3, [fp, #-16]
    1a48:	sub	r3, r3, #1
    1a4c:	str	r3, [fp, #-16]
    1a50:	ldr	r3, [fp, #-8]
    1a54:	add	r2, r3, #1
    1a58:	str	r2, [fp, #-8]
    1a5c:	ldrb	r3, [r3]
    1a60:	mov	r2, r3
    1a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a68:	lsl	r3, r2, r3
    1a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a70:	add	r3, r2, r3
    1a74:	str	r3, [fp, #-24]	; 0xffffffe8
    1a78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a7c:	add	r3, r3, #8
    1a80:	str	r3, [fp, #-28]	; 0xffffffe4
    1a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a88:	cmp	r3, #31
    1a8c:	bls	1a38 <coda_inflate+0x11c8>
    1a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a94:	uxth	r2, r3
    1a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a9c:	lsr	r3, r3, #16
    1aa0:	eor	r3, r3, #65280	; 0xff00
    1aa4:	eor	r3, r3, #255	; 0xff
    1aa8:	cmp	r2, r3
    1aac:	beq	1acc <coda_inflate+0x125c>
    1ab0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1ab4:	ldr	r2, [pc, #-176]	; 1a0c <coda_inflate+0x119c>
    1ab8:	str	r2, [r3, #24]
    1abc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ac0:	mov	r2, #29
    1ac4:	str	r2, [r3]
    1ac8:	b	3200 <coda_inflate+0x2990>
    1acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ad0:	uxth	r2, r3
    1ad4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ad8:	str	r2, [r3, #64]	; 0x40
    1adc:	mov	r3, #0
    1ae0:	str	r3, [fp, #-24]	; 0xffffffe8
    1ae4:	mov	r3, #0
    1ae8:	str	r3, [fp, #-28]	; 0xffffffe4
    1aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1af0:	mov	r2, #14
    1af4:	str	r2, [r3]
    1af8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1afc:	cmp	r3, #6
    1b00:	beq	3264 <coda_inflate+0x29f4>
    1b04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b08:	mov	r2, #15
    1b0c:	str	r2, [r3]
    1b10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b14:	ldr	r3, [r3, #64]	; 0x40
    1b18:	str	r3, [fp, #-36]	; 0xffffffdc
    1b1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b20:	cmp	r3, #0
    1b24:	beq	1bd0 <coda_inflate+0x1360>
    1b28:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b2c:	ldr	r3, [fp, #-16]
    1b30:	cmp	r2, r3
    1b34:	bls	1b40 <coda_inflate+0x12d0>
    1b38:	ldr	r3, [fp, #-16]
    1b3c:	str	r3, [fp, #-36]	; 0xffffffdc
    1b40:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b44:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b48:	cmp	r2, r3
    1b4c:	bls	1b58 <coda_inflate+0x12e8>
    1b50:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b54:	str	r3, [fp, #-36]	; 0xffffffdc
    1b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b5c:	cmp	r3, #0
    1b60:	beq	326c <coda_inflate+0x29fc>
    1b64:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b68:	ldr	r1, [fp, #-8]
    1b6c:	ldr	r0, [fp, #-12]
    1b70:	bl	0 <memcpy>
    1b74:	ldr	r2, [fp, #-16]
    1b78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b7c:	sub	r3, r2, r3
    1b80:	str	r3, [fp, #-16]
    1b84:	ldr	r2, [fp, #-8]
    1b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b8c:	add	r3, r2, r3
    1b90:	str	r3, [fp, #-8]
    1b94:	ldr	r2, [fp, #-20]	; 0xffffffec
    1b98:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b9c:	sub	r3, r2, r3
    1ba0:	str	r3, [fp, #-20]	; 0xffffffec
    1ba4:	ldr	r2, [fp, #-12]
    1ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bac:	add	r3, r2, r3
    1bb0:	str	r3, [fp, #-12]
    1bb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bb8:	ldr	r2, [r3, #64]	; 0x40
    1bbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bc0:	sub	r2, r2, r3
    1bc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bc8:	str	r2, [r3, #64]	; 0x40
    1bcc:	b	3200 <coda_inflate+0x2990>
    1bd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1bd4:	mov	r2, #11
    1bd8:	str	r2, [r3]
    1bdc:	b	3200 <coda_inflate+0x2990>
    1be0:	ldr	r3, [fp, #-16]
    1be4:	cmp	r3, #0
    1be8:	beq	3274 <coda_inflate+0x2a04>
    1bec:	ldr	r3, [fp, #-16]
    1bf0:	sub	r3, r3, #1
    1bf4:	str	r3, [fp, #-16]
    1bf8:	ldr	r3, [fp, #-8]
    1bfc:	add	r2, r3, #1
    1c00:	str	r2, [fp, #-8]
    1c04:	ldrb	r3, [r3]
    1c08:	mov	r2, r3
    1c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c10:	lsl	r3, r2, r3
    1c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c18:	add	r3, r2, r3
    1c1c:	str	r3, [fp, #-24]	; 0xffffffe8
    1c20:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c24:	add	r3, r3, #8
    1c28:	str	r3, [fp, #-28]	; 0xffffffe4
    1c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c30:	cmp	r3, #13
    1c34:	bls	1be0 <coda_inflate+0x1370>
    1c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c3c:	and	r3, r3, #31
    1c40:	add	r3, r3, #256	; 0x100
    1c44:	add	r3, r3, #1
    1c48:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1c4c:	str	r3, [r2, #96]	; 0x60
    1c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c54:	lsr	r3, r3, #5
    1c58:	str	r3, [fp, #-24]	; 0xffffffe8
    1c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c60:	sub	r3, r3, #5
    1c64:	str	r3, [fp, #-28]	; 0xffffffe4
    1c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c6c:	and	r3, r3, #31
    1c70:	add	r2, r3, #1
    1c74:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1c78:	str	r2, [r3, #100]	; 0x64
    1c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c80:	lsr	r3, r3, #5
    1c84:	str	r3, [fp, #-24]	; 0xffffffe8
    1c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1c8c:	sub	r3, r3, #5
    1c90:	str	r3, [fp, #-28]	; 0xffffffe4
    1c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c98:	and	r3, r3, #15
    1c9c:	add	r2, r3, #4
    1ca0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ca4:	str	r2, [r3, #92]	; 0x5c
    1ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cac:	lsr	r3, r3, #4
    1cb0:	str	r3, [fp, #-24]	; 0xffffffe8
    1cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1cb8:	sub	r3, r3, #4
    1cbc:	str	r3, [fp, #-28]	; 0xffffffe4
    1cc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cc4:	ldr	r3, [r3, #96]	; 0x60
    1cc8:	ldr	r2, [pc, #-704]	; 1a10 <coda_inflate+0x11a0>
    1ccc:	cmp	r3, r2
    1cd0:	bhi	1ce4 <coda_inflate+0x1474>
    1cd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cd8:	ldr	r3, [r3, #100]	; 0x64
    1cdc:	cmp	r3, #30
    1ce0:	bls	1d00 <coda_inflate+0x1490>
    1ce4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1ce8:	ldr	r2, [pc, #-732]	; 1a14 <coda_inflate+0x11a4>
    1cec:	str	r2, [r3, #24]
    1cf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1cf4:	mov	r2, #29
    1cf8:	str	r2, [r3]
    1cfc:	b	3200 <coda_inflate+0x2990>
    1d00:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d04:	mov	r2, #0
    1d08:	str	r2, [r3, #104]	; 0x68
    1d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d10:	mov	r2, #17
    1d14:	str	r2, [r3]
    1d18:	b	1dd8 <coda_inflate+0x1568>
    1d1c:	ldr	r3, [fp, #-16]
    1d20:	cmp	r3, #0
    1d24:	beq	327c <coda_inflate+0x2a0c>
    1d28:	ldr	r3, [fp, #-16]
    1d2c:	sub	r3, r3, #1
    1d30:	str	r3, [fp, #-16]
    1d34:	ldr	r3, [fp, #-8]
    1d38:	add	r2, r3, #1
    1d3c:	str	r2, [fp, #-8]
    1d40:	ldrb	r3, [r3]
    1d44:	mov	r2, r3
    1d48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d4c:	lsl	r3, r2, r3
    1d50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1d54:	add	r3, r2, r3
    1d58:	str	r3, [fp, #-24]	; 0xffffffe8
    1d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d60:	add	r3, r3, #8
    1d64:	str	r3, [fp, #-28]	; 0xffffffe4
    1d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d6c:	cmp	r3, #2
    1d70:	bls	1d1c <coda_inflate+0x14ac>
    1d74:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1d78:	ldr	r3, [r3, #104]	; 0x68
    1d7c:	add	r1, r3, #1
    1d80:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1d84:	str	r1, [r2, #104]	; 0x68
    1d88:	ldr	r2, [pc, #-888]	; 1a18 <coda_inflate+0x11a8>
    1d8c:	lsl	r3, r3, #1
    1d90:	add	r3, r2, r3
    1d94:	ldrh	r3, [r3]
    1d98:	mov	r0, r3
    1d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1da0:	uxth	r3, r3
    1da4:	and	r3, r3, #7
    1da8:	uxth	r2, r3
    1dac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1db0:	add	r3, r0, #56	; 0x38
    1db4:	lsl	r3, r3, #1
    1db8:	add	r3, r1, r3
    1dbc:	strh	r2, [r3]
    1dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dc4:	lsr	r3, r3, #3
    1dc8:	str	r3, [fp, #-24]	; 0xffffffe8
    1dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1dd0:	sub	r3, r3, #3
    1dd4:	str	r3, [fp, #-28]	; 0xffffffe4
    1dd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ddc:	ldr	r2, [r3, #104]	; 0x68
    1de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1de4:	ldr	r3, [r3, #92]	; 0x5c
    1de8:	cmp	r2, r3
    1dec:	bcc	1d68 <coda_inflate+0x14f8>
    1df0:	b	1e30 <coda_inflate+0x15c0>
    1df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1df8:	ldr	r3, [r3, #104]	; 0x68
    1dfc:	add	r1, r3, #1
    1e00:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e04:	str	r1, [r2, #104]	; 0x68
    1e08:	ldr	r2, [pc, #-1016]	; 1a18 <coda_inflate+0x11a8>
    1e0c:	lsl	r3, r3, #1
    1e10:	add	r3, r2, r3
    1e14:	ldrh	r3, [r3]
    1e18:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e1c:	add	r3, r3, #56	; 0x38
    1e20:	lsl	r3, r3, #1
    1e24:	add	r3, r2, r3
    1e28:	mov	r2, #0
    1e2c:	strh	r2, [r3]
    1e30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e34:	ldr	r3, [r3, #104]	; 0x68
    1e38:	cmp	r3, #18
    1e3c:	bls	1df4 <coda_inflate+0x1584>
    1e40:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e44:	add	r2, r3, #1328	; 0x530
    1e48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e4c:	str	r2, [r3, #108]	; 0x6c
    1e50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e54:	ldr	r2, [r3, #108]	; 0x6c
    1e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e5c:	str	r2, [r3, #76]	; 0x4c
    1e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e64:	mov	r2, #7
    1e68:	str	r2, [r3, #84]	; 0x54
    1e6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e70:	add	r1, r3, #112	; 0x70
    1e74:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e78:	add	r0, r3, #108	; 0x6c
    1e7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1e80:	add	r3, r3, #84	; 0x54
    1e84:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1e88:	add	r2, r2, #752	; 0x2f0
    1e8c:	str	r2, [sp, #4]
    1e90:	str	r3, [sp]
    1e94:	mov	r3, r0
    1e98:	mov	r2, #19
    1e9c:	mov	r0, #0
    1ea0:	bl	0 <coda_inflate_table>
    1ea4:	str	r0, [fp, #-48]	; 0xffffffd0
    1ea8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1eac:	cmp	r3, #0
    1eb0:	beq	1ed0 <coda_inflate+0x1660>
    1eb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1eb8:	ldr	r2, [pc, #-1188]	; 1a1c <coda_inflate+0x11ac>
    1ebc:	str	r2, [r3, #24]
    1ec0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ec4:	mov	r2, #29
    1ec8:	str	r2, [r3]
    1ecc:	b	3200 <coda_inflate+0x2990>
    1ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ed4:	mov	r2, #0
    1ed8:	str	r2, [r3, #104]	; 0x68
    1edc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ee0:	mov	r2, #18
    1ee4:	str	r2, [r3]
    1ee8:	b	2320 <coda_inflate+0x1ab0>
    1eec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ef0:	ldr	r2, [r3, #76]	; 0x4c
    1ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ef8:	ldr	r3, [r3, #84]	; 0x54
    1efc:	mov	r1, #1
    1f00:	lsl	r3, r1, r3
    1f04:	sub	r1, r3, #1
    1f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f0c:	and	r3, r3, r1
    1f10:	lsl	r3, r3, #2
    1f14:	add	r2, r2, r3
    1f18:	sub	r3, fp, #60	; 0x3c
    1f1c:	ldr	r0, [r2]
    1f20:	str	r0, [r3]
    1f24:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1f28:	mov	r2, r3
    1f2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f30:	cmp	r2, r3
    1f34:	bls	1f88 <coda_inflate+0x1718>
    1f38:	ldr	r3, [fp, #-16]
    1f3c:	cmp	r3, #0
    1f40:	beq	3284 <coda_inflate+0x2a14>
    1f44:	ldr	r3, [fp, #-16]
    1f48:	sub	r3, r3, #1
    1f4c:	str	r3, [fp, #-16]
    1f50:	ldr	r3, [fp, #-8]
    1f54:	add	r2, r3, #1
    1f58:	str	r2, [fp, #-8]
    1f5c:	ldrb	r3, [r3]
    1f60:	mov	r2, r3
    1f64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f68:	lsl	r3, r2, r3
    1f6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f70:	add	r3, r2, r3
    1f74:	str	r3, [fp, #-24]	; 0xffffffe8
    1f78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f7c:	add	r3, r3, #8
    1f80:	str	r3, [fp, #-28]	; 0xffffffe4
    1f84:	b	1eec <coda_inflate+0x167c>
    1f88:	nop			; (mov r0, r0)
    1f8c:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    1f90:	cmp	r3, #15
    1f94:	bhi	1ff0 <coda_inflate+0x1780>
    1f98:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1f9c:	mov	r2, r3
    1fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fa4:	lsr	r3, r3, r2
    1fa8:	str	r3, [fp, #-24]	; 0xffffffe8
    1fac:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    1fb0:	mov	r2, r3
    1fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1fb8:	sub	r3, r3, r2
    1fbc:	str	r3, [fp, #-28]	; 0xffffffe4
    1fc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1fc4:	ldr	r3, [r3, #104]	; 0x68
    1fc8:	add	r1, r3, #1
    1fcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1fd0:	str	r1, [r2, #104]	; 0x68
    1fd4:	ldrh	r2, [fp, #-58]	; 0xffffffc6
    1fd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1fdc:	add	r3, r3, #56	; 0x38
    1fe0:	lsl	r3, r3, #1
    1fe4:	add	r3, r1, r3
    1fe8:	strh	r2, [r3]
    1fec:	b	2320 <coda_inflate+0x1ab0>
    1ff0:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    1ff4:	cmp	r3, #16
    1ff8:	bne	2108 <coda_inflate+0x1898>
    1ffc:	b	204c <coda_inflate+0x17dc>
    2000:	ldr	r3, [fp, #-16]
    2004:	cmp	r3, #0
    2008:	beq	328c <coda_inflate+0x2a1c>
    200c:	ldr	r3, [fp, #-16]
    2010:	sub	r3, r3, #1
    2014:	str	r3, [fp, #-16]
    2018:	ldr	r3, [fp, #-8]
    201c:	add	r2, r3, #1
    2020:	str	r2, [fp, #-8]
    2024:	ldrb	r3, [r3]
    2028:	mov	r2, r3
    202c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2030:	lsl	r3, r2, r3
    2034:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2038:	add	r3, r2, r3
    203c:	str	r3, [fp, #-24]	; 0xffffffe8
    2040:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2044:	add	r3, r3, #8
    2048:	str	r3, [fp, #-28]	; 0xffffffe4
    204c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2050:	add	r3, r3, #2
    2054:	mov	r2, r3
    2058:	ldr	r3, [fp, #-28]	; 0xffffffe4
    205c:	cmp	r2, r3
    2060:	bhi	2000 <coda_inflate+0x1790>
    2064:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2068:	mov	r2, r3
    206c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2070:	lsr	r3, r3, r2
    2074:	str	r3, [fp, #-24]	; 0xffffffe8
    2078:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    207c:	mov	r2, r3
    2080:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2084:	sub	r3, r3, r2
    2088:	str	r3, [fp, #-28]	; 0xffffffe4
    208c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2090:	ldr	r3, [r3, #104]	; 0x68
    2094:	cmp	r3, #0
    2098:	bne	20b8 <coda_inflate+0x1848>
    209c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    20a0:	ldr	r2, [pc, #-1672]	; 1a20 <coda_inflate+0x11b0>
    20a4:	str	r2, [r3, #24]
    20a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20ac:	mov	r2, #29
    20b0:	str	r2, [r3]
    20b4:	b	2344 <coda_inflate+0x1ad4>
    20b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    20bc:	ldr	r3, [r3, #104]	; 0x68
    20c0:	sub	r3, r3, #1
    20c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20c8:	add	r3, r3, #56	; 0x38
    20cc:	lsl	r3, r3, #1
    20d0:	add	r3, r2, r3
    20d4:	ldrh	r3, [r3]
    20d8:	str	r3, [fp, #-44]	; 0xffffffd4
    20dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20e0:	and	r3, r3, #3
    20e4:	add	r3, r3, #3
    20e8:	str	r3, [fp, #-36]	; 0xffffffdc
    20ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20f0:	lsr	r3, r3, #2
    20f4:	str	r3, [fp, #-24]	; 0xffffffe8
    20f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    20fc:	sub	r3, r3, #2
    2100:	str	r3, [fp, #-28]	; 0xffffffe4
    2104:	b	2294 <coda_inflate+0x1a24>
    2108:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    210c:	cmp	r3, #17
    2110:	bne	2224 <coda_inflate+0x19b4>
    2114:	b	2164 <coda_inflate+0x18f4>
    2118:	ldr	r3, [fp, #-16]
    211c:	cmp	r3, #0
    2120:	beq	3294 <coda_inflate+0x2a24>
    2124:	ldr	r3, [fp, #-16]
    2128:	sub	r3, r3, #1
    212c:	str	r3, [fp, #-16]
    2130:	ldr	r3, [fp, #-8]
    2134:	add	r2, r3, #1
    2138:	str	r2, [fp, #-8]
    213c:	ldrb	r3, [r3]
    2140:	mov	r2, r3
    2144:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2148:	lsl	r3, r2, r3
    214c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2150:	add	r3, r2, r3
    2154:	str	r3, [fp, #-24]	; 0xffffffe8
    2158:	ldr	r3, [fp, #-28]	; 0xffffffe4
    215c:	add	r3, r3, #8
    2160:	str	r3, [fp, #-28]	; 0xffffffe4
    2164:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2168:	add	r3, r3, #3
    216c:	mov	r2, r3
    2170:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2174:	cmp	r2, r3
    2178:	bhi	2118 <coda_inflate+0x18a8>
    217c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2180:	mov	r2, r3
    2184:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2188:	lsr	r3, r3, r2
    218c:	str	r3, [fp, #-24]	; 0xffffffe8
    2190:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2194:	mov	r2, r3
    2198:	ldr	r3, [fp, #-28]	; 0xffffffe4
    219c:	sub	r3, r3, r2
    21a0:	str	r3, [fp, #-28]	; 0xffffffe4
    21a4:	mov	r3, #0
    21a8:	str	r3, [fp, #-44]	; 0xffffffd4
    21ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21b0:	and	r3, r3, #7
    21b4:	add	r3, r3, #3
    21b8:	str	r3, [fp, #-36]	; 0xffffffdc
    21bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    21c0:	lsr	r3, r3, #3
    21c4:	str	r3, [fp, #-24]	; 0xffffffe8
    21c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    21cc:	sub	r3, r3, #3
    21d0:	str	r3, [fp, #-28]	; 0xffffffe4
    21d4:	b	2294 <coda_inflate+0x1a24>
    21d8:	ldr	r3, [fp, #-16]
    21dc:	cmp	r3, #0
    21e0:	beq	329c <coda_inflate+0x2a2c>
    21e4:	ldr	r3, [fp, #-16]
    21e8:	sub	r3, r3, #1
    21ec:	str	r3, [fp, #-16]
    21f0:	ldr	r3, [fp, #-8]
    21f4:	add	r2, r3, #1
    21f8:	str	r2, [fp, #-8]
    21fc:	ldrb	r3, [r3]
    2200:	mov	r2, r3
    2204:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2208:	lsl	r3, r2, r3
    220c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2210:	add	r3, r2, r3
    2214:	str	r3, [fp, #-24]	; 0xffffffe8
    2218:	ldr	r3, [fp, #-28]	; 0xffffffe4
    221c:	add	r3, r3, #8
    2220:	str	r3, [fp, #-28]	; 0xffffffe4
    2224:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2228:	add	r3, r3, #7
    222c:	mov	r2, r3
    2230:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2234:	cmp	r2, r3
    2238:	bhi	21d8 <coda_inflate+0x1968>
    223c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2240:	mov	r2, r3
    2244:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2248:	lsr	r3, r3, r2
    224c:	str	r3, [fp, #-24]	; 0xffffffe8
    2250:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2254:	mov	r2, r3
    2258:	ldr	r3, [fp, #-28]	; 0xffffffe4
    225c:	sub	r3, r3, r2
    2260:	str	r3, [fp, #-28]	; 0xffffffe4
    2264:	mov	r3, #0
    2268:	str	r3, [fp, #-44]	; 0xffffffd4
    226c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2270:	and	r3, r3, #127	; 0x7f
    2274:	add	r3, r3, #11
    2278:	str	r3, [fp, #-36]	; 0xffffffdc
    227c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2280:	lsr	r3, r3, #7
    2284:	str	r3, [fp, #-24]	; 0xffffffe8
    2288:	ldr	r3, [fp, #-28]	; 0xffffffe4
    228c:	sub	r3, r3, #7
    2290:	str	r3, [fp, #-28]	; 0xffffffe4
    2294:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2298:	ldr	r2, [r3, #104]	; 0x68
    229c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    22a0:	add	r2, r2, r3
    22a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22a8:	ldr	r1, [r3, #96]	; 0x60
    22ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22b0:	ldr	r3, [r3, #100]	; 0x64
    22b4:	add	r3, r1, r3
    22b8:	cmp	r2, r3
    22bc:	bls	230c <coda_inflate+0x1a9c>
    22c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    22c4:	ldr	r2, [pc, #-2220]	; 1a20 <coda_inflate+0x11b0>
    22c8:	str	r2, [r3, #24]
    22cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22d0:	mov	r2, #29
    22d4:	str	r2, [r3]
    22d8:	b	2344 <coda_inflate+0x1ad4>
    22dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22e0:	ldr	r3, [r3, #104]	; 0x68
    22e4:	add	r1, r3, #1
    22e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    22ec:	str	r1, [r2, #104]	; 0x68
    22f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    22f4:	uxth	r2, r2
    22f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    22fc:	add	r3, r3, #56	; 0x38
    2300:	lsl	r3, r3, #1
    2304:	add	r3, r1, r3
    2308:	strh	r2, [r3]
    230c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2310:	sub	r2, r3, #1
    2314:	str	r2, [fp, #-36]	; 0xffffffdc
    2318:	cmp	r3, #0
    231c:	bne	22dc <coda_inflate+0x1a6c>
    2320:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2324:	ldr	r2, [r3, #104]	; 0x68
    2328:	ldr	r3, [fp, #-52]	; 0xffffffcc
    232c:	ldr	r1, [r3, #96]	; 0x60
    2330:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2334:	ldr	r3, [r3, #100]	; 0x64
    2338:	add	r3, r1, r3
    233c:	cmp	r2, r3
    2340:	bcc	1eec <coda_inflate+0x167c>
    2344:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2348:	ldr	r3, [r3]
    234c:	cmp	r3, #29
    2350:	beq	31ec <coda_inflate+0x297c>
    2354:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2358:	add	r3, r3, #624	; 0x270
    235c:	ldrh	r3, [r3]
    2360:	cmp	r3, #0
    2364:	bne	2384 <coda_inflate+0x1b14>
    2368:	ldr	r3, [fp, #-72]	; 0xffffffb8
    236c:	ldr	r2, [pc, #-2384]	; 1a24 <coda_inflate+0x11b4>
    2370:	str	r2, [r3, #24]
    2374:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2378:	mov	r2, #29
    237c:	str	r2, [r3]
    2380:	b	3200 <coda_inflate+0x2990>
    2384:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2388:	add	r2, r3, #1328	; 0x530
    238c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2390:	str	r2, [r3, #108]	; 0x6c
    2394:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2398:	ldr	r2, [r3, #108]	; 0x6c
    239c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23a0:	str	r2, [r3, #76]	; 0x4c
    23a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23a8:	mov	r2, #9
    23ac:	str	r2, [r3, #84]	; 0x54
    23b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23b4:	add	r1, r3, #112	; 0x70
    23b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23bc:	ldr	r0, [r3, #96]	; 0x60
    23c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23c4:	add	ip, r3, #108	; 0x6c
    23c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23cc:	add	r3, r3, #84	; 0x54
    23d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    23d4:	add	r2, r2, #752	; 0x2f0
    23d8:	str	r2, [sp, #4]
    23dc:	str	r3, [sp]
    23e0:	mov	r3, ip
    23e4:	mov	r2, r0
    23e8:	mov	r0, #1
    23ec:	bl	0 <coda_inflate_table>
    23f0:	str	r0, [fp, #-48]	; 0xffffffd0
    23f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    23f8:	cmp	r3, #0
    23fc:	beq	241c <coda_inflate+0x1bac>
    2400:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2404:	ldr	r2, [pc, #-2532]	; 1a28 <coda_inflate+0x11b8>
    2408:	str	r2, [r3, #24]
    240c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2410:	mov	r2, #29
    2414:	str	r2, [r3]
    2418:	b	3200 <coda_inflate+0x2990>
    241c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2420:	ldr	r2, [r3, #108]	; 0x6c
    2424:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2428:	str	r2, [r3, #80]	; 0x50
    242c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2430:	mov	r2, #6
    2434:	str	r2, [r3, #88]	; 0x58
    2438:	ldr	r3, [fp, #-52]	; 0xffffffcc
    243c:	add	r2, r3, #112	; 0x70
    2440:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2444:	ldr	r3, [r3, #96]	; 0x60
    2448:	lsl	r3, r3, #1
    244c:	add	r1, r2, r3
    2450:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2454:	ldr	r0, [r3, #100]	; 0x64
    2458:	ldr	r3, [fp, #-52]	; 0xffffffcc
    245c:	add	ip, r3, #108	; 0x6c
    2460:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2464:	add	r3, r3, #88	; 0x58
    2468:	ldr	r2, [fp, #-52]	; 0xffffffcc
    246c:	add	r2, r2, #752	; 0x2f0
    2470:	str	r2, [sp, #4]
    2474:	str	r3, [sp]
    2478:	mov	r3, ip
    247c:	mov	r2, r0
    2480:	mov	r0, #2
    2484:	bl	0 <coda_inflate_table>
    2488:	str	r0, [fp, #-48]	; 0xffffffd0
    248c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2490:	cmp	r3, #0
    2494:	beq	24b4 <coda_inflate+0x1c44>
    2498:	ldr	r3, [fp, #-72]	; 0xffffffb8
    249c:	ldr	r2, [pc, #-2680]	; 1a2c <coda_inflate+0x11bc>
    24a0:	str	r2, [r3, #24]
    24a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24a8:	mov	r2, #29
    24ac:	str	r2, [r3]
    24b0:	b	3200 <coda_inflate+0x2990>
    24b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24b8:	mov	r2, #19
    24bc:	str	r2, [r3]
    24c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    24c4:	cmp	r3, #6
    24c8:	beq	32a4 <coda_inflate+0x2a34>
    24cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24d0:	mov	r2, #20
    24d4:	str	r2, [r3]
    24d8:	ldr	r3, [fp, #-16]
    24dc:	cmp	r3, #5
    24e0:	bls	25b8 <coda_inflate+0x1d48>
    24e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    24e8:	ldr	r2, [pc, #-2752]	; 1a30 <coda_inflate+0x11c0>
    24ec:	cmp	r3, r2
    24f0:	bls	25b8 <coda_inflate+0x1d48>
    24f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    24f8:	ldr	r2, [fp, #-12]
    24fc:	str	r2, [r3, #12]
    2500:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2504:	ldr	r2, [fp, #-20]	; 0xffffffec
    2508:	str	r2, [r3, #16]
    250c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2510:	ldr	r2, [fp, #-8]
    2514:	str	r2, [r3]
    2518:	ldr	r3, [fp, #-72]	; 0xffffffb8
    251c:	ldr	r2, [fp, #-16]
    2520:	str	r2, [r3, #4]
    2524:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2528:	ldr	r2, [fp, #-24]	; 0xffffffe8
    252c:	str	r2, [r3, #56]	; 0x38
    2530:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2534:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2538:	str	r2, [r3, #60]	; 0x3c
    253c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2540:	ldr	r0, [fp, #-72]	; 0xffffffb8
    2544:	bl	0 <coda_inflate_fast>
    2548:	ldr	r3, [fp, #-72]	; 0xffffffb8
    254c:	ldr	r3, [r3, #12]
    2550:	str	r3, [fp, #-12]
    2554:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2558:	ldr	r3, [r3, #16]
    255c:	str	r3, [fp, #-20]	; 0xffffffec
    2560:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2564:	ldr	r3, [r3]
    2568:	str	r3, [fp, #-8]
    256c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2570:	ldr	r3, [r3, #4]
    2574:	str	r3, [fp, #-16]
    2578:	ldr	r3, [fp, #-52]	; 0xffffffcc
    257c:	ldr	r3, [r3, #56]	; 0x38
    2580:	str	r3, [fp, #-24]	; 0xffffffe8
    2584:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2588:	ldr	r3, [r3, #60]	; 0x3c
    258c:	str	r3, [fp, #-28]	; 0xffffffe4
    2590:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2594:	ldr	r3, [r3]
    2598:	cmp	r3, #11
    259c:	bne	31f4 <coda_inflate+0x2984>
    25a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25a4:	add	r3, r3, #4096	; 0x1000
    25a8:	mov	r2, r3
    25ac:	mvn	r3, #0
    25b0:	str	r3, [r2, #3012]	; 0xbc4
    25b4:	b	31f4 <coda_inflate+0x2984>
    25b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25bc:	add	r3, r3, #4096	; 0x1000
    25c0:	mov	r2, r3
    25c4:	mov	r3, #0
    25c8:	str	r3, [r2, #3012]	; 0xbc4
    25cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25d0:	ldr	r2, [r3, #76]	; 0x4c
    25d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25d8:	ldr	r3, [r3, #84]	; 0x54
    25dc:	mov	r1, #1
    25e0:	lsl	r3, r1, r3
    25e4:	sub	r1, r3, #1
    25e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25ec:	and	r3, r3, r1
    25f0:	lsl	r3, r3, #2
    25f4:	add	r2, r2, r3
    25f8:	sub	r3, fp, #60	; 0x3c
    25fc:	ldr	r0, [r2]
    2600:	str	r0, [r3]
    2604:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2608:	mov	r2, r3
    260c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2610:	cmp	r2, r3
    2614:	bls	2668 <coda_inflate+0x1df8>
    2618:	ldr	r3, [fp, #-16]
    261c:	cmp	r3, #0
    2620:	beq	32ac <coda_inflate+0x2a3c>
    2624:	ldr	r3, [fp, #-16]
    2628:	sub	r3, r3, #1
    262c:	str	r3, [fp, #-16]
    2630:	ldr	r3, [fp, #-8]
    2634:	add	r2, r3, #1
    2638:	str	r2, [fp, #-8]
    263c:	ldrb	r3, [r3]
    2640:	mov	r2, r3
    2644:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2648:	lsl	r3, r2, r3
    264c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2650:	add	r3, r2, r3
    2654:	str	r3, [fp, #-24]	; 0xffffffe8
    2658:	ldr	r3, [fp, #-28]	; 0xffffffe4
    265c:	add	r3, r3, #8
    2660:	str	r3, [fp, #-28]	; 0xffffffe4
    2664:	b	25cc <coda_inflate+0x1d5c>
    2668:	nop			; (mov r0, r0)
    266c:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2670:	cmp	r3, #0
    2674:	beq	27a0 <coda_inflate+0x1f30>
    2678:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    267c:	and	r3, r3, #240	; 0xf0
    2680:	cmp	r3, #0
    2684:	bne	27a0 <coda_inflate+0x1f30>
    2688:	ldr	r3, [fp, #-60]	; 0xffffffc4
    268c:	str	r3, [fp, #-64]	; 0xffffffc0
    2690:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2694:	ldr	r2, [r3, #76]	; 0x4c
    2698:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    269c:	mov	r0, r3
    26a0:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    26a4:	mov	r1, r3
    26a8:	ldrb	r3, [fp, #-64]	; 0xffffffc0
    26ac:	add	r3, r1, r3
    26b0:	mov	r1, #1
    26b4:	lsl	r3, r1, r3
    26b8:	sub	r1, r3, #1
    26bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    26c0:	and	r3, r3, r1
    26c4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
    26c8:	lsr	r3, r3, r1
    26cc:	add	r3, r0, r3
    26d0:	lsl	r3, r3, #2
    26d4:	add	r2, r2, r3
    26d8:	sub	r3, fp, #60	; 0x3c
    26dc:	ldr	r0, [r2]
    26e0:	str	r0, [r3]
    26e4:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    26e8:	mov	r2, r3
    26ec:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    26f0:	add	r3, r2, r3
    26f4:	mov	r2, r3
    26f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    26fc:	cmp	r2, r3
    2700:	bls	2754 <coda_inflate+0x1ee4>
    2704:	ldr	r3, [fp, #-16]
    2708:	cmp	r3, #0
    270c:	beq	32b4 <coda_inflate+0x2a44>
    2710:	ldr	r3, [fp, #-16]
    2714:	sub	r3, r3, #1
    2718:	str	r3, [fp, #-16]
    271c:	ldr	r3, [fp, #-8]
    2720:	add	r2, r3, #1
    2724:	str	r2, [fp, #-8]
    2728:	ldrb	r3, [r3]
    272c:	mov	r2, r3
    2730:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2734:	lsl	r3, r2, r3
    2738:	ldr	r2, [fp, #-24]	; 0xffffffe8
    273c:	add	r3, r2, r3
    2740:	str	r3, [fp, #-24]	; 0xffffffe8
    2744:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2748:	add	r3, r3, #8
    274c:	str	r3, [fp, #-28]	; 0xffffffe4
    2750:	b	2690 <coda_inflate+0x1e20>
    2754:	nop			; (mov r0, r0)
    2758:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    275c:	mov	r2, r3
    2760:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2764:	lsr	r3, r3, r2
    2768:	str	r3, [fp, #-24]	; 0xffffffe8
    276c:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2770:	mov	r2, r3
    2774:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2778:	sub	r3, r3, r2
    277c:	str	r3, [fp, #-28]	; 0xffffffe4
    2780:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2784:	add	r3, r3, #4096	; 0x1000
    2788:	ldr	r3, [r3, #3012]	; 0xbc4
    278c:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    2790:	add	r3, r3, r2
    2794:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2798:	add	r2, r2, #4096	; 0x1000
    279c:	str	r3, [r2, #3012]	; 0xbc4
    27a0:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    27a4:	mov	r2, r3
    27a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    27ac:	lsr	r3, r3, r2
    27b0:	str	r3, [fp, #-24]	; 0xffffffe8
    27b4:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    27b8:	mov	r2, r3
    27bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    27c0:	sub	r3, r3, r2
    27c4:	str	r3, [fp, #-28]	; 0xffffffe4
    27c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27cc:	add	r3, r3, #4096	; 0x1000
    27d0:	ldr	r3, [r3, #3012]	; 0xbc4
    27d4:	ldrb	r2, [fp, #-59]	; 0xffffffc5
    27d8:	add	r3, r3, r2
    27dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    27e0:	add	r2, r2, #4096	; 0x1000
    27e4:	str	r3, [r2, #3012]	; 0xbc4
    27e8:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    27ec:	mov	r2, r3
    27f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    27f4:	str	r2, [r3, #64]	; 0x40
    27f8:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    27fc:	cmp	r3, #0
    2800:	bne	2814 <coda_inflate+0x1fa4>
    2804:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2808:	mov	r2, #25
    280c:	str	r2, [r3]
    2810:	b	3200 <coda_inflate+0x2990>
    2814:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2818:	and	r3, r3, #32
    281c:	cmp	r3, #0
    2820:	beq	2848 <coda_inflate+0x1fd8>
    2824:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2828:	add	r3, r3, #4096	; 0x1000
    282c:	mov	r2, r3
    2830:	mvn	r3, #0
    2834:	str	r3, [r2, #3012]	; 0xbc4
    2838:	ldr	r3, [fp, #-52]	; 0xffffffcc
    283c:	mov	r2, #11
    2840:	str	r2, [r3]
    2844:	b	3200 <coda_inflate+0x2990>
    2848:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    284c:	and	r3, r3, #64	; 0x40
    2850:	cmp	r3, #0
    2854:	beq	2874 <coda_inflate+0x2004>
    2858:	ldr	r3, [fp, #-72]	; 0xffffffb8
    285c:	ldr	r2, [pc, #-3632]	; 1a34 <coda_inflate+0x11c4>
    2860:	str	r2, [r3, #24]
    2864:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2868:	mov	r2, #29
    286c:	str	r2, [r3]
    2870:	b	3200 <coda_inflate+0x2990>
    2874:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2878:	and	r2, r3, #15
    287c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2880:	str	r2, [r3, #72]	; 0x48
    2884:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2888:	mov	r2, #21
    288c:	str	r2, [r3]
    2890:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2894:	ldr	r3, [r3, #72]	; 0x48
    2898:	cmp	r3, #0
    289c:	beq	2988 <coda_inflate+0x2118>
    28a0:	b	28f0 <coda_inflate+0x2080>
    28a4:	ldr	r3, [fp, #-16]
    28a8:	cmp	r3, #0
    28ac:	beq	32bc <coda_inflate+0x2a4c>
    28b0:	ldr	r3, [fp, #-16]
    28b4:	sub	r3, r3, #1
    28b8:	str	r3, [fp, #-16]
    28bc:	ldr	r3, [fp, #-8]
    28c0:	add	r2, r3, #1
    28c4:	str	r2, [fp, #-8]
    28c8:	ldrb	r3, [r3]
    28cc:	mov	r2, r3
    28d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    28d4:	lsl	r3, r2, r3
    28d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28dc:	add	r3, r2, r3
    28e0:	str	r3, [fp, #-24]	; 0xffffffe8
    28e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    28e8:	add	r3, r3, #8
    28ec:	str	r3, [fp, #-28]	; 0xffffffe4
    28f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    28f4:	ldr	r2, [r3, #72]	; 0x48
    28f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    28fc:	cmp	r2, r3
    2900:	bhi	28a4 <coda_inflate+0x2034>
    2904:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2908:	ldr	r2, [r3, #64]	; 0x40
    290c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2910:	ldr	r3, [r3, #72]	; 0x48
    2914:	mov	r1, #1
    2918:	lsl	r3, r1, r3
    291c:	sub	r1, r3, #1
    2920:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2924:	and	r3, r3, r1
    2928:	add	r2, r2, r3
    292c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2930:	str	r2, [r3, #64]	; 0x40
    2934:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2938:	ldr	r3, [r3, #72]	; 0x48
    293c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2940:	lsr	r3, r2, r3
    2944:	str	r3, [fp, #-24]	; 0xffffffe8
    2948:	ldr	r3, [fp, #-52]	; 0xffffffcc
    294c:	ldr	r3, [r3, #72]	; 0x48
    2950:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2954:	sub	r3, r2, r3
    2958:	str	r3, [fp, #-28]	; 0xffffffe4
    295c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2960:	add	r3, r3, #4096	; 0x1000
    2964:	ldr	r3, [r3, #3012]	; 0xbc4
    2968:	mov	r2, r3
    296c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2970:	ldr	r3, [r3, #72]	; 0x48
    2974:	add	r3, r2, r3
    2978:	mov	r2, r3
    297c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2980:	add	r3, r3, #4096	; 0x1000
    2984:	str	r2, [r3, #3012]	; 0xbc4
    2988:	ldr	r3, [fp, #-52]	; 0xffffffcc
    298c:	ldr	r3, [r3, #64]	; 0x40
    2990:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2994:	add	r2, r2, #4096	; 0x1000
    2998:	str	r3, [r2, #3016]	; 0xbc8
    299c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29a0:	mov	r2, #22
    29a4:	str	r2, [r3]
    29a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29ac:	ldr	r2, [r3, #80]	; 0x50
    29b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29b4:	ldr	r3, [r3, #88]	; 0x58
    29b8:	mov	r1, #1
    29bc:	lsl	r3, r1, r3
    29c0:	sub	r1, r3, #1
    29c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    29c8:	and	r3, r3, r1
    29cc:	lsl	r3, r3, #2
    29d0:	add	r2, r2, r3
    29d4:	sub	r3, fp, #60	; 0x3c
    29d8:	ldr	r0, [r2]
    29dc:	str	r0, [r3]
    29e0:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    29e4:	mov	r2, r3
    29e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    29ec:	cmp	r2, r3
    29f0:	bls	2a44 <coda_inflate+0x21d4>
    29f4:	ldr	r3, [fp, #-16]
    29f8:	cmp	r3, #0
    29fc:	beq	32c4 <coda_inflate+0x2a54>
    2a00:	ldr	r3, [fp, #-16]
    2a04:	sub	r3, r3, #1
    2a08:	str	r3, [fp, #-16]
    2a0c:	ldr	r3, [fp, #-8]
    2a10:	add	r2, r3, #1
    2a14:	str	r2, [fp, #-8]
    2a18:	ldrb	r3, [r3]
    2a1c:	mov	r2, r3
    2a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a24:	lsl	r3, r2, r3
    2a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a2c:	add	r3, r2, r3
    2a30:	str	r3, [fp, #-24]	; 0xffffffe8
    2a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2a38:	add	r3, r3, #8
    2a3c:	str	r3, [fp, #-28]	; 0xffffffe4
    2a40:	b	29a8 <coda_inflate+0x2138>
    2a44:	nop			; (mov r0, r0)
    2a48:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2a4c:	and	r3, r3, #240	; 0xf0
    2a50:	cmp	r3, #0
    2a54:	bne	2b70 <coda_inflate+0x2300>
    2a58:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2a5c:	str	r3, [fp, #-64]	; 0xffffffc0
    2a60:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a64:	ldr	r2, [r3, #80]	; 0x50
    2a68:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    2a6c:	mov	r0, r3
    2a70:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2a74:	mov	r1, r3
    2a78:	ldrb	r3, [fp, #-64]	; 0xffffffc0
    2a7c:	add	r3, r1, r3
    2a80:	mov	r1, #1
    2a84:	lsl	r3, r1, r3
    2a88:	sub	r1, r3, #1
    2a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a90:	and	r3, r3, r1
    2a94:	ldrb	r1, [fp, #-63]	; 0xffffffc1
    2a98:	lsr	r3, r3, r1
    2a9c:	add	r3, r0, r3
    2aa0:	lsl	r3, r3, #2
    2aa4:	add	r2, r2, r3
    2aa8:	sub	r3, fp, #60	; 0x3c
    2aac:	ldr	r0, [r2]
    2ab0:	str	r0, [r3]
    2ab4:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2ab8:	mov	r2, r3
    2abc:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2ac0:	add	r3, r2, r3
    2ac4:	mov	r2, r3
    2ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2acc:	cmp	r2, r3
    2ad0:	bls	2b24 <coda_inflate+0x22b4>
    2ad4:	ldr	r3, [fp, #-16]
    2ad8:	cmp	r3, #0
    2adc:	beq	32cc <coda_inflate+0x2a5c>
    2ae0:	ldr	r3, [fp, #-16]
    2ae4:	sub	r3, r3, #1
    2ae8:	str	r3, [fp, #-16]
    2aec:	ldr	r3, [fp, #-8]
    2af0:	add	r2, r3, #1
    2af4:	str	r2, [fp, #-8]
    2af8:	ldrb	r3, [r3]
    2afc:	mov	r2, r3
    2b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b04:	lsl	r3, r2, r3
    2b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b0c:	add	r3, r2, r3
    2b10:	str	r3, [fp, #-24]	; 0xffffffe8
    2b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b18:	add	r3, r3, #8
    2b1c:	str	r3, [fp, #-28]	; 0xffffffe4
    2b20:	b	2a60 <coda_inflate+0x21f0>
    2b24:	nop			; (mov r0, r0)
    2b28:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2b2c:	mov	r2, r3
    2b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b34:	lsr	r3, r3, r2
    2b38:	str	r3, [fp, #-24]	; 0xffffffe8
    2b3c:	ldrb	r3, [fp, #-63]	; 0xffffffc1
    2b40:	mov	r2, r3
    2b44:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b48:	sub	r3, r3, r2
    2b4c:	str	r3, [fp, #-28]	; 0xffffffe4
    2b50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b54:	add	r3, r3, #4096	; 0x1000
    2b58:	ldr	r3, [r3, #3012]	; 0xbc4
    2b5c:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    2b60:	add	r3, r3, r2
    2b64:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2b68:	add	r2, r2, #4096	; 0x1000
    2b6c:	str	r3, [r2, #3012]	; 0xbc4
    2b70:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2b74:	mov	r2, r3
    2b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b7c:	lsr	r3, r3, r2
    2b80:	str	r3, [fp, #-24]	; 0xffffffe8
    2b84:	ldrb	r3, [fp, #-59]	; 0xffffffc5
    2b88:	mov	r2, r3
    2b8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b90:	sub	r3, r3, r2
    2b94:	str	r3, [fp, #-28]	; 0xffffffe4
    2b98:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b9c:	add	r3, r3, #4096	; 0x1000
    2ba0:	ldr	r3, [r3, #3012]	; 0xbc4
    2ba4:	ldrb	r2, [fp, #-59]	; 0xffffffc5
    2ba8:	add	r3, r3, r2
    2bac:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2bb0:	add	r2, r2, #4096	; 0x1000
    2bb4:	str	r3, [r2, #3012]	; 0xbc4
    2bb8:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2bbc:	and	r3, r3, #64	; 0x40
    2bc0:	cmp	r3, #0
    2bc4:	beq	2be4 <coda_inflate+0x2374>
    2bc8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2bcc:	ldr	r2, [pc, #2524]	; 35b0 <coda_inflate+0x2d40>
    2bd0:	str	r2, [r3, #24]
    2bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2bd8:	mov	r2, #29
    2bdc:	str	r2, [r3]
    2be0:	b	3200 <coda_inflate+0x2990>
    2be4:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    2be8:	mov	r2, r3
    2bec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2bf0:	str	r2, [r3, #68]	; 0x44
    2bf4:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    2bf8:	and	r2, r3, #15
    2bfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c00:	str	r2, [r3, #72]	; 0x48
    2c04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c08:	mov	r2, #23
    2c0c:	str	r2, [r3]
    2c10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c14:	ldr	r3, [r3, #72]	; 0x48
    2c18:	cmp	r3, #0
    2c1c:	beq	2d08 <coda_inflate+0x2498>
    2c20:	b	2c70 <coda_inflate+0x2400>
    2c24:	ldr	r3, [fp, #-16]
    2c28:	cmp	r3, #0
    2c2c:	beq	32d4 <coda_inflate+0x2a64>
    2c30:	ldr	r3, [fp, #-16]
    2c34:	sub	r3, r3, #1
    2c38:	str	r3, [fp, #-16]
    2c3c:	ldr	r3, [fp, #-8]
    2c40:	add	r2, r3, #1
    2c44:	str	r2, [fp, #-8]
    2c48:	ldrb	r3, [r3]
    2c4c:	mov	r2, r3
    2c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c54:	lsl	r3, r2, r3
    2c58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c5c:	add	r3, r2, r3
    2c60:	str	r3, [fp, #-24]	; 0xffffffe8
    2c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c68:	add	r3, r3, #8
    2c6c:	str	r3, [fp, #-28]	; 0xffffffe4
    2c70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c74:	ldr	r2, [r3, #72]	; 0x48
    2c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2c7c:	cmp	r2, r3
    2c80:	bhi	2c24 <coda_inflate+0x23b4>
    2c84:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c88:	ldr	r2, [r3, #68]	; 0x44
    2c8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c90:	ldr	r3, [r3, #72]	; 0x48
    2c94:	mov	r1, #1
    2c98:	lsl	r3, r1, r3
    2c9c:	sub	r1, r3, #1
    2ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ca4:	and	r3, r3, r1
    2ca8:	add	r2, r2, r3
    2cac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cb0:	str	r2, [r3, #68]	; 0x44
    2cb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cb8:	ldr	r3, [r3, #72]	; 0x48
    2cbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2cc0:	lsr	r3, r2, r3
    2cc4:	str	r3, [fp, #-24]	; 0xffffffe8
    2cc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ccc:	ldr	r3, [r3, #72]	; 0x48
    2cd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2cd4:	sub	r3, r2, r3
    2cd8:	str	r3, [fp, #-28]	; 0xffffffe4
    2cdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ce0:	add	r3, r3, #4096	; 0x1000
    2ce4:	ldr	r3, [r3, #3012]	; 0xbc4
    2ce8:	mov	r2, r3
    2cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2cf0:	ldr	r3, [r3, #72]	; 0x48
    2cf4:	add	r3, r2, r3
    2cf8:	mov	r2, r3
    2cfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d00:	add	r3, r3, #4096	; 0x1000
    2d04:	str	r2, [r3, #3012]	; 0xbc4
    2d08:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d0c:	mov	r2, #24
    2d10:	str	r2, [r3]
    2d14:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d18:	cmp	r3, #0
    2d1c:	beq	32dc <coda_inflate+0x2a6c>
    2d20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2d24:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d28:	sub	r3, r2, r3
    2d2c:	str	r3, [fp, #-36]	; 0xffffffdc
    2d30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d34:	ldr	r2, [r3, #68]	; 0x44
    2d38:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d3c:	cmp	r2, r3
    2d40:	bls	2e2c <coda_inflate+0x25bc>
    2d44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d48:	ldr	r2, [r3, #68]	; 0x44
    2d4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d50:	sub	r3, r2, r3
    2d54:	str	r3, [fp, #-36]	; 0xffffffdc
    2d58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d5c:	ldr	r2, [r3, #44]	; 0x2c
    2d60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2d64:	cmp	r2, r3
    2d68:	bcs	2d9c <coda_inflate+0x252c>
    2d6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d70:	add	r3, r3, #4096	; 0x1000
    2d74:	ldr	r3, [r3, #3008]	; 0xbc0
    2d78:	cmp	r3, #0
    2d7c:	beq	2d9c <coda_inflate+0x252c>
    2d80:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2d84:	ldr	r2, [pc, #2088]	; 35b4 <coda_inflate+0x2d44>
    2d88:	str	r2, [r3, #24]
    2d8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d90:	mov	r2, #29
    2d94:	str	r2, [r3]
    2d98:	b	3200 <coda_inflate+0x2990>
    2d9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2da0:	ldr	r2, [r3, #48]	; 0x30
    2da4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2da8:	cmp	r2, r3
    2dac:	bcs	2de8 <coda_inflate+0x2578>
    2db0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2db4:	ldr	r3, [r3, #48]	; 0x30
    2db8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2dbc:	sub	r3, r2, r3
    2dc0:	str	r3, [fp, #-36]	; 0xffffffdc
    2dc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2dc8:	ldr	r2, [r3, #52]	; 0x34
    2dcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2dd0:	ldr	r1, [r3, #40]	; 0x28
    2dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2dd8:	sub	r3, r1, r3
    2ddc:	add	r3, r2, r3
    2de0:	str	r3, [fp, #-40]	; 0xffffffd8
    2de4:	b	2e08 <coda_inflate+0x2598>
    2de8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2dec:	ldr	r2, [r3, #52]	; 0x34
    2df0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2df4:	ldr	r1, [r3, #48]	; 0x30
    2df8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2dfc:	sub	r3, r1, r3
    2e00:	add	r3, r2, r3
    2e04:	str	r3, [fp, #-40]	; 0xffffffd8
    2e08:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e0c:	ldr	r2, [r3, #64]	; 0x40
    2e10:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e14:	cmp	r2, r3
    2e18:	bcs	2e50 <coda_inflate+0x25e0>
    2e1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e20:	ldr	r3, [r3, #64]	; 0x40
    2e24:	str	r3, [fp, #-36]	; 0xffffffdc
    2e28:	b	2e50 <coda_inflate+0x25e0>
    2e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e30:	ldr	r3, [r3, #68]	; 0x44
    2e34:	rsb	r3, r3, #0
    2e38:	ldr	r2, [fp, #-12]
    2e3c:	add	r3, r2, r3
    2e40:	str	r3, [fp, #-40]	; 0xffffffd8
    2e44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e48:	ldr	r3, [r3, #64]	; 0x40
    2e4c:	str	r3, [fp, #-36]	; 0xffffffdc
    2e50:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2e54:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e58:	cmp	r2, r3
    2e5c:	bls	2e68 <coda_inflate+0x25f8>
    2e60:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e64:	str	r3, [fp, #-36]	; 0xffffffdc
    2e68:	ldr	r2, [fp, #-20]	; 0xffffffec
    2e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e70:	sub	r3, r2, r3
    2e74:	str	r3, [fp, #-20]	; 0xffffffec
    2e78:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e7c:	ldr	r2, [r3, #64]	; 0x40
    2e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2e84:	sub	r2, r2, r3
    2e88:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e8c:	str	r2, [r3, #64]	; 0x40
    2e90:	ldr	r3, [fp, #-12]
    2e94:	add	r2, r3, #1
    2e98:	str	r2, [fp, #-12]
    2e9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2ea0:	add	r1, r2, #1
    2ea4:	str	r1, [fp, #-40]	; 0xffffffd8
    2ea8:	ldrb	r2, [r2]
    2eac:	strb	r2, [r3]
    2eb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2eb4:	sub	r3, r3, #1
    2eb8:	str	r3, [fp, #-36]	; 0xffffffdc
    2ebc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ec0:	cmp	r3, #0
    2ec4:	bne	2e90 <coda_inflate+0x2620>
    2ec8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ecc:	ldr	r3, [r3, #64]	; 0x40
    2ed0:	cmp	r3, #0
    2ed4:	bne	31fc <coda_inflate+0x298c>
    2ed8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2edc:	mov	r2, #20
    2ee0:	str	r2, [r3]
    2ee4:	b	31fc <coda_inflate+0x298c>
    2ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
    2eec:	cmp	r3, #0
    2ef0:	beq	32e4 <coda_inflate+0x2a74>
    2ef4:	ldr	r3, [fp, #-12]
    2ef8:	add	r2, r3, #1
    2efc:	str	r2, [fp, #-12]
    2f00:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2f04:	ldr	r2, [r2, #64]	; 0x40
    2f08:	uxtb	r2, r2
    2f0c:	strb	r2, [r3]
    2f10:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f14:	sub	r3, r3, #1
    2f18:	str	r3, [fp, #-20]	; 0xffffffec
    2f1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f20:	mov	r2, #20
    2f24:	str	r2, [r3]
    2f28:	b	3200 <coda_inflate+0x2990>
    2f2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f30:	ldr	r3, [r3, #8]
    2f34:	cmp	r3, #0
    2f38:	beq	30f0 <coda_inflate+0x2880>
    2f3c:	b	2f8c <coda_inflate+0x271c>
    2f40:	ldr	r3, [fp, #-16]
    2f44:	cmp	r3, #0
    2f48:	beq	32ec <coda_inflate+0x2a7c>
    2f4c:	ldr	r3, [fp, #-16]
    2f50:	sub	r3, r3, #1
    2f54:	str	r3, [fp, #-16]
    2f58:	ldr	r3, [fp, #-8]
    2f5c:	add	r2, r3, #1
    2f60:	str	r2, [fp, #-8]
    2f64:	ldrb	r3, [r3]
    2f68:	mov	r2, r3
    2f6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2f70:	lsl	r3, r2, r3
    2f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f78:	add	r3, r2, r3
    2f7c:	str	r3, [fp, #-24]	; 0xffffffe8
    2f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2f84:	add	r3, r3, #8
    2f88:	str	r3, [fp, #-28]	; 0xffffffe4
    2f8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2f90:	cmp	r3, #31
    2f94:	bls	2f40 <coda_inflate+0x26d0>
    2f98:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2fa0:	sub	r3, r2, r3
    2fa4:	str	r3, [fp, #-32]	; 0xffffffe0
    2fa8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2fac:	ldr	r2, [r3, #20]
    2fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fb4:	add	r2, r2, r3
    2fb8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2fbc:	str	r2, [r3, #20]
    2fc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2fc4:	ldr	r2, [r3, #28]
    2fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fcc:	add	r2, r2, r3
    2fd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2fd4:	str	r2, [r3, #28]
    2fd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fdc:	cmp	r3, #0
    2fe0:	beq	3060 <coda_inflate+0x27f0>
    2fe4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2fe8:	ldr	r3, [r3, #16]
    2fec:	cmp	r3, #0
    2ff0:	beq	3020 <coda_inflate+0x27b0>
    2ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2ff8:	ldr	r0, [r3, #24]
    2ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3000:	rsb	r3, r3, #0
    3004:	ldr	r2, [fp, #-12]
    3008:	add	r3, r2, r3
    300c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3010:	mov	r1, r3
    3014:	bl	0 <coda_crc32>
    3018:	mov	r2, r0
    301c:	b	3048 <coda_inflate+0x27d8>
    3020:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3024:	ldr	r0, [r3, #24]
    3028:	ldr	r3, [fp, #-32]	; 0xffffffe0
    302c:	rsb	r3, r3, #0
    3030:	ldr	r2, [fp, #-12]
    3034:	add	r3, r2, r3
    3038:	ldr	r2, [fp, #-32]	; 0xffffffe0
    303c:	mov	r1, r3
    3040:	bl	0 <coda_adler32>
    3044:	mov	r2, r0
    3048:	ldr	r3, [fp, #-52]	; 0xffffffcc
    304c:	str	r2, [r3, #24]
    3050:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3054:	ldr	r2, [r3, #24]
    3058:	ldr	r3, [fp, #-72]	; 0xffffffb8
    305c:	str	r2, [r3, #48]	; 0x30
    3060:	ldr	r3, [fp, #-20]	; 0xffffffec
    3064:	str	r3, [fp, #-32]	; 0xffffffe0
    3068:	ldr	r3, [fp, #-52]	; 0xffffffcc
    306c:	ldr	r3, [r3, #16]
    3070:	cmp	r3, #0
    3074:	bne	30b0 <coda_inflate+0x2840>
    3078:	ldr	r3, [fp, #-24]	; 0xffffffe8
    307c:	lsr	r2, r3, #24
    3080:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3084:	lsr	r3, r3, #8
    3088:	and	r3, r3, #65280	; 0xff00
    308c:	add	r2, r2, r3
    3090:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3094:	lsl	r3, r3, #8
    3098:	and	r3, r3, #16711680	; 0xff0000
    309c:	add	r2, r2, r3
    30a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30a4:	lsl	r3, r3, #24
    30a8:	add	r3, r2, r3
    30ac:	b	30b4 <coda_inflate+0x2844>
    30b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    30b8:	ldr	r2, [r2, #24]
    30bc:	cmp	r3, r2
    30c0:	beq	30e0 <coda_inflate+0x2870>
    30c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    30c8:	ldr	r2, [pc, #1256]	; 35b8 <coda_inflate+0x2d48>
    30cc:	str	r2, [r3, #24]
    30d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30d4:	mov	r2, #29
    30d8:	str	r2, [r3]
    30dc:	b	3200 <coda_inflate+0x2990>
    30e0:	mov	r3, #0
    30e4:	str	r3, [fp, #-24]	; 0xffffffe8
    30e8:	mov	r3, #0
    30ec:	str	r3, [fp, #-28]	; 0xffffffe4
    30f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30f4:	mov	r2, #27
    30f8:	str	r2, [r3]
    30fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3100:	ldr	r3, [r3, #8]
    3104:	cmp	r3, #0
    3108:	beq	31b8 <coda_inflate+0x2948>
    310c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3110:	ldr	r3, [r3, #16]
    3114:	cmp	r3, #0
    3118:	beq	31b8 <coda_inflate+0x2948>
    311c:	b	316c <coda_inflate+0x28fc>
    3120:	ldr	r3, [fp, #-16]
    3124:	cmp	r3, #0
    3128:	beq	32f4 <coda_inflate+0x2a84>
    312c:	ldr	r3, [fp, #-16]
    3130:	sub	r3, r3, #1
    3134:	str	r3, [fp, #-16]
    3138:	ldr	r3, [fp, #-8]
    313c:	add	r2, r3, #1
    3140:	str	r2, [fp, #-8]
    3144:	ldrb	r3, [r3]
    3148:	mov	r2, r3
    314c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3150:	lsl	r3, r2, r3
    3154:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3158:	add	r3, r2, r3
    315c:	str	r3, [fp, #-24]	; 0xffffffe8
    3160:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3164:	add	r3, r3, #8
    3168:	str	r3, [fp, #-28]	; 0xffffffe4
    316c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3170:	cmp	r3, #31
    3174:	bls	3120 <coda_inflate+0x28b0>
    3178:	ldr	r3, [fp, #-52]	; 0xffffffcc
    317c:	ldr	r2, [r3, #28]
    3180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3184:	cmp	r2, r3
    3188:	beq	31a8 <coda_inflate+0x2938>
    318c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3190:	ldr	r2, [pc, #1060]	; 35bc <coda_inflate+0x2d4c>
    3194:	str	r2, [r3, #24]
    3198:	ldr	r3, [fp, #-52]	; 0xffffffcc
    319c:	mov	r2, #29
    31a0:	str	r2, [r3]
    31a4:	b	3200 <coda_inflate+0x2990>
    31a8:	mov	r3, #0
    31ac:	str	r3, [fp, #-24]	; 0xffffffe8
    31b0:	mov	r3, #0
    31b4:	str	r3, [fp, #-28]	; 0xffffffe4
    31b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31bc:	mov	r2, #28
    31c0:	str	r2, [r3]
    31c4:	mov	r3, #1
    31c8:	str	r3, [fp, #-48]	; 0xffffffd0
    31cc:	b	32f8 <coda_inflate+0x2a88>
    31d0:	mvn	r3, #2
    31d4:	str	r3, [fp, #-48]	; 0xffffffd0
    31d8:	b	32f8 <coda_inflate+0x2a88>
    31dc:	mvn	r3, #3
    31e0:	b	35a4 <coda_inflate+0x2d34>
    31e4:	mvn	r3, #1
    31e8:	b	35a4 <coda_inflate+0x2d34>
    31ec:	nop			; (mov r0, r0)
    31f0:	b	960 <coda_inflate+0xf0>
    31f4:	nop			; (mov r0, r0)
    31f8:	b	960 <coda_inflate+0xf0>
    31fc:	nop			; (mov r0, r0)
    3200:	b	960 <coda_inflate+0xf0>
    3204:	nop			; (mov r0, r0)
    3208:	b	32f8 <coda_inflate+0x2a88>
    320c:	nop			; (mov r0, r0)
    3210:	b	32f8 <coda_inflate+0x2a88>
    3214:	nop			; (mov r0, r0)
    3218:	b	32f8 <coda_inflate+0x2a88>
    321c:	nop			; (mov r0, r0)
    3220:	b	32f8 <coda_inflate+0x2a88>
    3224:	nop			; (mov r0, r0)
    3228:	b	32f8 <coda_inflate+0x2a88>
    322c:	nop			; (mov r0, r0)
    3230:	b	32f8 <coda_inflate+0x2a88>
    3234:	nop			; (mov r0, r0)
    3238:	b	32f8 <coda_inflate+0x2a88>
    323c:	nop			; (mov r0, r0)
    3240:	b	32f8 <coda_inflate+0x2a88>
    3244:	nop			; (mov r0, r0)
    3248:	b	32f8 <coda_inflate+0x2a88>
    324c:	nop			; (mov r0, r0)
    3250:	b	32f8 <coda_inflate+0x2a88>
    3254:	nop			; (mov r0, r0)
    3258:	b	32f8 <coda_inflate+0x2a88>
    325c:	nop			; (mov r0, r0)
    3260:	b	32f8 <coda_inflate+0x2a88>
    3264:	nop			; (mov r0, r0)
    3268:	b	32f8 <coda_inflate+0x2a88>
    326c:	nop			; (mov r0, r0)
    3270:	b	32f8 <coda_inflate+0x2a88>
    3274:	nop			; (mov r0, r0)
    3278:	b	32f8 <coda_inflate+0x2a88>
    327c:	nop			; (mov r0, r0)
    3280:	b	32f8 <coda_inflate+0x2a88>
    3284:	nop			; (mov r0, r0)
    3288:	b	32f8 <coda_inflate+0x2a88>
    328c:	nop			; (mov r0, r0)
    3290:	b	32f8 <coda_inflate+0x2a88>
    3294:	nop			; (mov r0, r0)
    3298:	b	32f8 <coda_inflate+0x2a88>
    329c:	nop			; (mov r0, r0)
    32a0:	b	32f8 <coda_inflate+0x2a88>
    32a4:	nop			; (mov r0, r0)
    32a8:	b	32f8 <coda_inflate+0x2a88>
    32ac:	nop			; (mov r0, r0)
    32b0:	b	32f8 <coda_inflate+0x2a88>
    32b4:	nop			; (mov r0, r0)
    32b8:	b	32f8 <coda_inflate+0x2a88>
    32bc:	nop			; (mov r0, r0)
    32c0:	b	32f8 <coda_inflate+0x2a88>
    32c4:	nop			; (mov r0, r0)
    32c8:	b	32f8 <coda_inflate+0x2a88>
    32cc:	nop			; (mov r0, r0)
    32d0:	b	32f8 <coda_inflate+0x2a88>
    32d4:	nop			; (mov r0, r0)
    32d8:	b	32f8 <coda_inflate+0x2a88>
    32dc:	nop			; (mov r0, r0)
    32e0:	b	32f8 <coda_inflate+0x2a88>
    32e4:	nop			; (mov r0, r0)
    32e8:	b	32f8 <coda_inflate+0x2a88>
    32ec:	nop			; (mov r0, r0)
    32f0:	b	32f8 <coda_inflate+0x2a88>
    32f4:	nop			; (mov r0, r0)
    32f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    32fc:	ldr	r2, [fp, #-12]
    3300:	str	r2, [r3, #12]
    3304:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3308:	ldr	r2, [fp, #-20]	; 0xffffffec
    330c:	str	r2, [r3, #16]
    3310:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3314:	ldr	r2, [fp, #-8]
    3318:	str	r2, [r3]
    331c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3320:	ldr	r2, [fp, #-16]
    3324:	str	r2, [r3, #4]
    3328:	ldr	r3, [fp, #-52]	; 0xffffffcc
    332c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3330:	str	r2, [r3, #56]	; 0x38
    3334:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3338:	ldr	r2, [fp, #-28]	; 0xffffffe4
    333c:	str	r2, [r3, #60]	; 0x3c
    3340:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3344:	ldr	r3, [r3, #40]	; 0x28
    3348:	cmp	r3, #0
    334c:	bne	3390 <coda_inflate+0x2b20>
    3350:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3354:	ldr	r2, [r3, #16]
    3358:	ldr	r3, [fp, #-32]	; 0xffffffe0
    335c:	cmp	r2, r3
    3360:	beq	33d4 <coda_inflate+0x2b64>
    3364:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3368:	ldr	r3, [r3]
    336c:	cmp	r3, #28
    3370:	bhi	33d4 <coda_inflate+0x2b64>
    3374:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3378:	ldr	r3, [r3]
    337c:	cmp	r3, #25
    3380:	bls	3390 <coda_inflate+0x2b20>
    3384:	ldr	r3, [fp, #-76]	; 0xffffffb4
    3388:	cmp	r3, #4
    338c:	beq	33d4 <coda_inflate+0x2b64>
    3390:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3394:	ldr	r1, [r3, #12]
    3398:	ldr	r3, [fp, #-72]	; 0xffffffb8
    339c:	ldr	r3, [r3, #16]
    33a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    33a4:	sub	r3, r2, r3
    33a8:	mov	r2, r3
    33ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
    33b0:	bl	614 <updatewindow>
    33b4:	mov	r3, r0
    33b8:	cmp	r3, #0
    33bc:	beq	33d4 <coda_inflate+0x2b64>
    33c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33c4:	mov	r2, #30
    33c8:	str	r2, [r3]
    33cc:	mvn	r3, #3
    33d0:	b	35a4 <coda_inflate+0x2d34>
    33d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    33d8:	ldr	r3, [r3, #4]
    33dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33e0:	sub	r3, r2, r3
    33e4:	str	r3, [fp, #-56]	; 0xffffffc8
    33e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    33ec:	ldr	r3, [r3, #16]
    33f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    33f4:	sub	r3, r2, r3
    33f8:	str	r3, [fp, #-32]	; 0xffffffe0
    33fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3400:	ldr	r2, [r3, #8]
    3404:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3408:	add	r2, r2, r3
    340c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3410:	str	r2, [r3, #8]
    3414:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3418:	ldr	r2, [r3, #20]
    341c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3420:	add	r2, r2, r3
    3424:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3428:	str	r2, [r3, #20]
    342c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3430:	ldr	r2, [r3, #28]
    3434:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3438:	add	r2, r2, r3
    343c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3440:	str	r2, [r3, #28]
    3444:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3448:	ldr	r3, [r3, #8]
    344c:	cmp	r3, #0
    3450:	beq	34e4 <coda_inflate+0x2c74>
    3454:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3458:	cmp	r3, #0
    345c:	beq	34e4 <coda_inflate+0x2c74>
    3460:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3464:	ldr	r3, [r3, #16]
    3468:	cmp	r3, #0
    346c:	beq	34a0 <coda_inflate+0x2c30>
    3470:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3474:	ldr	r0, [r3, #24]
    3478:	ldr	r3, [fp, #-72]	; 0xffffffb8
    347c:	ldr	r2, [r3, #12]
    3480:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3484:	rsb	r3, r3, #0
    3488:	add	r3, r2, r3
    348c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3490:	mov	r1, r3
    3494:	bl	0 <coda_crc32>
    3498:	mov	r2, r0
    349c:	b	34cc <coda_inflate+0x2c5c>
    34a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34a4:	ldr	r0, [r3, #24]
    34a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    34ac:	ldr	r2, [r3, #12]
    34b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    34b4:	rsb	r3, r3, #0
    34b8:	add	r3, r2, r3
    34bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    34c0:	mov	r1, r3
    34c4:	bl	0 <coda_adler32>
    34c8:	mov	r2, r0
    34cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34d0:	str	r2, [r3, #24]
    34d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34d8:	ldr	r2, [r3, #24]
    34dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    34e0:	str	r2, [r3, #48]	; 0x30
    34e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34e8:	ldr	r2, [r3, #60]	; 0x3c
    34ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34f0:	ldr	r3, [r3, #4]
    34f4:	cmp	r3, #0
    34f8:	beq	3504 <coda_inflate+0x2c94>
    34fc:	mov	r3, #64	; 0x40
    3500:	b	3508 <coda_inflate+0x2c98>
    3504:	mov	r3, #0
    3508:	add	r2, r2, r3
    350c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3510:	ldr	r3, [r3]
    3514:	cmp	r3, #11
    3518:	bne	3524 <coda_inflate+0x2cb4>
    351c:	mov	r3, #128	; 0x80
    3520:	b	3528 <coda_inflate+0x2cb8>
    3524:	mov	r3, #0
    3528:	add	r2, r2, r3
    352c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3530:	ldr	r3, [r3]
    3534:	cmp	r3, #19
    3538:	beq	354c <coda_inflate+0x2cdc>
    353c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3540:	ldr	r3, [r3]
    3544:	cmp	r3, #14
    3548:	bne	3554 <coda_inflate+0x2ce4>
    354c:	mov	r3, #256	; 0x100
    3550:	b	3558 <coda_inflate+0x2ce8>
    3554:	mov	r3, #0
    3558:	add	r3, r2, r3
    355c:	mov	r2, r3
    3560:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3564:	str	r2, [r3, #44]	; 0x2c
    3568:	ldr	r3, [fp, #-56]	; 0xffffffc8
    356c:	cmp	r3, #0
    3570:	bne	3580 <coda_inflate+0x2d10>
    3574:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3578:	cmp	r3, #0
    357c:	beq	358c <coda_inflate+0x2d1c>
    3580:	ldr	r3, [fp, #-76]	; 0xffffffb4
    3584:	cmp	r3, #4
    3588:	bne	35a0 <coda_inflate+0x2d30>
    358c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3590:	cmp	r3, #0
    3594:	bne	35a0 <coda_inflate+0x2d30>
    3598:	mvn	r3, #4
    359c:	str	r3, [fp, #-48]	; 0xffffffd0
    35a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    35a4:	mov	r0, r3
    35a8:	sub	sp, fp, #4
    35ac:	pop	{fp, pc}
    35b0:	.word	0x00000180
    35b4:	.word	0x00000198
    35b8:	.word	0x000001b8
    35bc:	.word	0x000001d0

000035c0 <coda_inflateEnd>:
    35c0:	push	{fp, lr}
    35c4:	add	fp, sp, #4
    35c8:	sub	sp, sp, #16
    35cc:	str	r0, [fp, #-16]
    35d0:	ldr	r3, [fp, #-16]
    35d4:	cmp	r3, #0
    35d8:	beq	35fc <coda_inflateEnd+0x3c>
    35dc:	ldr	r3, [fp, #-16]
    35e0:	ldr	r3, [r3, #28]
    35e4:	cmp	r3, #0
    35e8:	beq	35fc <coda_inflateEnd+0x3c>
    35ec:	ldr	r3, [fp, #-16]
    35f0:	ldr	r3, [r3, #36]	; 0x24
    35f4:	cmp	r3, #0
    35f8:	bne	3604 <coda_inflateEnd+0x44>
    35fc:	mvn	r3, #1
    3600:	b	3670 <coda_inflateEnd+0xb0>
    3604:	ldr	r3, [fp, #-16]
    3608:	ldr	r3, [r3, #28]
    360c:	str	r3, [fp, #-8]
    3610:	ldr	r3, [fp, #-8]
    3614:	ldr	r3, [r3, #52]	; 0x34
    3618:	cmp	r3, #0
    361c:	beq	3640 <coda_inflateEnd+0x80>
    3620:	ldr	r3, [fp, #-16]
    3624:	ldr	r3, [r3, #36]	; 0x24
    3628:	ldr	r2, [fp, #-16]
    362c:	ldr	r0, [r2, #40]	; 0x28
    3630:	ldr	r2, [fp, #-8]
    3634:	ldr	r2, [r2, #52]	; 0x34
    3638:	mov	r1, r2
    363c:	blx	r3
    3640:	ldr	r3, [fp, #-16]
    3644:	ldr	r3, [r3, #36]	; 0x24
    3648:	ldr	r2, [fp, #-16]
    364c:	ldr	r0, [r2, #40]	; 0x28
    3650:	ldr	r2, [fp, #-16]
    3654:	ldr	r2, [r2, #28]
    3658:	mov	r1, r2
    365c:	blx	r3
    3660:	ldr	r3, [fp, #-16]
    3664:	mov	r2, #0
    3668:	str	r2, [r3, #28]
    366c:	mov	r3, #0
    3670:	mov	r0, r3
    3674:	sub	sp, fp, #4
    3678:	pop	{fp, pc}

0000367c <coda_inflateGetDictionary>:
    367c:	push	{fp, lr}
    3680:	add	fp, sp, #4
    3684:	sub	sp, sp, #24
    3688:	str	r0, [fp, #-16]
    368c:	str	r1, [fp, #-20]	; 0xffffffec
    3690:	str	r2, [fp, #-24]	; 0xffffffe8
    3694:	ldr	r3, [fp, #-16]
    3698:	cmp	r3, #0
    369c:	beq	36b0 <coda_inflateGetDictionary+0x34>
    36a0:	ldr	r3, [fp, #-16]
    36a4:	ldr	r3, [r3, #28]
    36a8:	cmp	r3, #0
    36ac:	bne	36b8 <coda_inflateGetDictionary+0x3c>
    36b0:	mvn	r3, #1
    36b4:	b	3768 <coda_inflateGetDictionary+0xec>
    36b8:	ldr	r3, [fp, #-16]
    36bc:	ldr	r3, [r3, #28]
    36c0:	str	r3, [fp, #-8]
    36c4:	ldr	r3, [fp, #-8]
    36c8:	ldr	r3, [r3, #44]	; 0x2c
    36cc:	cmp	r3, #0
    36d0:	beq	3748 <coda_inflateGetDictionary+0xcc>
    36d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    36d8:	cmp	r3, #0
    36dc:	beq	3748 <coda_inflateGetDictionary+0xcc>
    36e0:	ldr	r3, [fp, #-8]
    36e4:	ldr	r2, [r3, #52]	; 0x34
    36e8:	ldr	r3, [fp, #-8]
    36ec:	ldr	r3, [r3, #48]	; 0x30
    36f0:	add	r1, r2, r3
    36f4:	ldr	r3, [fp, #-8]
    36f8:	ldr	r2, [r3, #44]	; 0x2c
    36fc:	ldr	r3, [fp, #-8]
    3700:	ldr	r3, [r3, #48]	; 0x30
    3704:	sub	r3, r2, r3
    3708:	mov	r2, r3
    370c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3710:	bl	0 <memcpy>
    3714:	ldr	r3, [fp, #-8]
    3718:	ldr	r2, [r3, #44]	; 0x2c
    371c:	ldr	r3, [fp, #-8]
    3720:	ldr	r3, [r3, #48]	; 0x30
    3724:	sub	r3, r2, r3
    3728:	ldr	r2, [fp, #-20]	; 0xffffffec
    372c:	add	r0, r2, r3
    3730:	ldr	r3, [fp, #-8]
    3734:	ldr	r1, [r3, #52]	; 0x34
    3738:	ldr	r3, [fp, #-8]
    373c:	ldr	r3, [r3, #48]	; 0x30
    3740:	mov	r2, r3
    3744:	bl	0 <memcpy>
    3748:	ldr	r3, [fp, #-24]	; 0xffffffe8
    374c:	cmp	r3, #0
    3750:	beq	3764 <coda_inflateGetDictionary+0xe8>
    3754:	ldr	r3, [fp, #-8]
    3758:	ldr	r2, [r3, #44]	; 0x2c
    375c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3760:	str	r2, [r3]
    3764:	mov	r3, #0
    3768:	mov	r0, r3
    376c:	sub	sp, fp, #4
    3770:	pop	{fp, pc}

00003774 <coda_inflateSetDictionary>:
    3774:	push	{fp, lr}
    3778:	add	fp, sp, #4
    377c:	sub	sp, sp, #32
    3780:	str	r0, [fp, #-24]	; 0xffffffe8
    3784:	str	r1, [fp, #-28]	; 0xffffffe4
    3788:	str	r2, [fp, #-32]	; 0xffffffe0
    378c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3790:	cmp	r3, #0
    3794:	beq	37a8 <coda_inflateSetDictionary+0x34>
    3798:	ldr	r3, [fp, #-24]	; 0xffffffe8
    379c:	ldr	r3, [r3, #28]
    37a0:	cmp	r3, #0
    37a4:	bne	37b0 <coda_inflateSetDictionary+0x3c>
    37a8:	mvn	r3, #1
    37ac:	b	3888 <coda_inflateSetDictionary+0x114>
    37b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37b4:	ldr	r3, [r3, #28]
    37b8:	str	r3, [fp, #-8]
    37bc:	ldr	r3, [fp, #-8]
    37c0:	ldr	r3, [r3, #8]
    37c4:	cmp	r3, #0
    37c8:	beq	37e4 <coda_inflateSetDictionary+0x70>
    37cc:	ldr	r3, [fp, #-8]
    37d0:	ldr	r3, [r3]
    37d4:	cmp	r3, #10
    37d8:	beq	37e4 <coda_inflateSetDictionary+0x70>
    37dc:	mvn	r3, #1
    37e0:	b	3888 <coda_inflateSetDictionary+0x114>
    37e4:	ldr	r3, [fp, #-8]
    37e8:	ldr	r3, [r3]
    37ec:	cmp	r3, #10
    37f0:	bne	3838 <coda_inflateSetDictionary+0xc4>
    37f4:	mov	r2, #0
    37f8:	mov	r1, #0
    37fc:	mov	r0, #0
    3800:	bl	0 <coda_adler32>
    3804:	str	r0, [fp, #-12]
    3808:	ldr	r2, [fp, #-32]	; 0xffffffe0
    380c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3810:	ldr	r0, [fp, #-12]
    3814:	bl	0 <coda_adler32>
    3818:	str	r0, [fp, #-12]
    381c:	ldr	r3, [fp, #-8]
    3820:	ldr	r2, [r3, #24]
    3824:	ldr	r3, [fp, #-12]
    3828:	cmp	r2, r3
    382c:	beq	3838 <coda_inflateSetDictionary+0xc4>
    3830:	mvn	r3, #2
    3834:	b	3888 <coda_inflateSetDictionary+0x114>
    3838:	ldr	r2, [fp, #-28]	; 0xffffffe4
    383c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3840:	add	r3, r2, r3
    3844:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3848:	mov	r1, r3
    384c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3850:	bl	614 <updatewindow>
    3854:	str	r0, [fp, #-16]
    3858:	ldr	r3, [fp, #-16]
    385c:	cmp	r3, #0
    3860:	beq	3878 <coda_inflateSetDictionary+0x104>
    3864:	ldr	r3, [fp, #-8]
    3868:	mov	r2, #30
    386c:	str	r2, [r3]
    3870:	mvn	r3, #3
    3874:	b	3888 <coda_inflateSetDictionary+0x114>
    3878:	ldr	r3, [fp, #-8]
    387c:	mov	r2, #1
    3880:	str	r2, [r3, #12]
    3884:	mov	r3, #0
    3888:	mov	r0, r3
    388c:	sub	sp, fp, #4
    3890:	pop	{fp, pc}

00003894 <coda_inflateGetHeader>:
    3894:	push	{fp}		; (str fp, [sp, #-4]!)
    3898:	add	fp, sp, #0
    389c:	sub	sp, sp, #20
    38a0:	str	r0, [fp, #-16]
    38a4:	str	r1, [fp, #-20]	; 0xffffffec
    38a8:	ldr	r3, [fp, #-16]
    38ac:	cmp	r3, #0
    38b0:	beq	38c4 <coda_inflateGetHeader+0x30>
    38b4:	ldr	r3, [fp, #-16]
    38b8:	ldr	r3, [r3, #28]
    38bc:	cmp	r3, #0
    38c0:	bne	38cc <coda_inflateGetHeader+0x38>
    38c4:	mvn	r3, #1
    38c8:	b	3910 <coda_inflateGetHeader+0x7c>
    38cc:	ldr	r3, [fp, #-16]
    38d0:	ldr	r3, [r3, #28]
    38d4:	str	r3, [fp, #-8]
    38d8:	ldr	r3, [fp, #-8]
    38dc:	ldr	r3, [r3, #8]
    38e0:	and	r3, r3, #2
    38e4:	cmp	r3, #0
    38e8:	bne	38f4 <coda_inflateGetHeader+0x60>
    38ec:	mvn	r3, #1
    38f0:	b	3910 <coda_inflateGetHeader+0x7c>
    38f4:	ldr	r3, [fp, #-8]
    38f8:	ldr	r2, [fp, #-20]	; 0xffffffec
    38fc:	str	r2, [r3, #32]
    3900:	ldr	r3, [fp, #-20]	; 0xffffffec
    3904:	mov	r2, #0
    3908:	str	r2, [r3, #48]	; 0x30
    390c:	mov	r3, #0
    3910:	mov	r0, r3
    3914:	add	sp, fp, #0
    3918:	pop	{fp}		; (ldr fp, [sp], #4)
    391c:	bx	lr

00003920 <syncsearch>:
    3920:	push	{fp}		; (str fp, [sp, #-4]!)
    3924:	add	fp, sp, #0
    3928:	sub	sp, sp, #28
    392c:	str	r0, [fp, #-16]
    3930:	str	r1, [fp, #-20]	; 0xffffffec
    3934:	str	r2, [fp, #-24]	; 0xffffffe8
    3938:	ldr	r3, [fp, #-16]
    393c:	ldr	r3, [r3]
    3940:	str	r3, [fp, #-8]
    3944:	mov	r3, #0
    3948:	str	r3, [fp, #-12]
    394c:	b	39d0 <syncsearch+0xb0>
    3950:	ldr	r2, [fp, #-20]	; 0xffffffec
    3954:	ldr	r3, [fp, #-12]
    3958:	add	r3, r2, r3
    395c:	ldrb	r3, [r3]
    3960:	mov	r2, r3
    3964:	ldr	r3, [fp, #-8]
    3968:	cmp	r3, #1
    396c:	bhi	3978 <syncsearch+0x58>
    3970:	mov	r3, #0
    3974:	b	397c <syncsearch+0x5c>
    3978:	mov	r3, #255	; 0xff
    397c:	cmp	r2, r3
    3980:	bne	3994 <syncsearch+0x74>
    3984:	ldr	r3, [fp, #-8]
    3988:	add	r3, r3, #1
    398c:	str	r3, [fp, #-8]
    3990:	b	39c4 <syncsearch+0xa4>
    3994:	ldr	r2, [fp, #-20]	; 0xffffffec
    3998:	ldr	r3, [fp, #-12]
    399c:	add	r3, r2, r3
    39a0:	ldrb	r3, [r3]
    39a4:	cmp	r3, #0
    39a8:	beq	39b8 <syncsearch+0x98>
    39ac:	mov	r3, #0
    39b0:	str	r3, [fp, #-8]
    39b4:	b	39c4 <syncsearch+0xa4>
    39b8:	ldr	r3, [fp, #-8]
    39bc:	rsb	r3, r3, #4
    39c0:	str	r3, [fp, #-8]
    39c4:	ldr	r3, [fp, #-12]
    39c8:	add	r3, r3, #1
    39cc:	str	r3, [fp, #-12]
    39d0:	ldr	r2, [fp, #-12]
    39d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39d8:	cmp	r2, r3
    39dc:	bcs	39ec <syncsearch+0xcc>
    39e0:	ldr	r3, [fp, #-8]
    39e4:	cmp	r3, #3
    39e8:	bls	3950 <syncsearch+0x30>
    39ec:	ldr	r3, [fp, #-16]
    39f0:	ldr	r2, [fp, #-8]
    39f4:	str	r2, [r3]
    39f8:	ldr	r3, [fp, #-12]
    39fc:	mov	r0, r3
    3a00:	add	sp, fp, #0
    3a04:	pop	{fp}		; (ldr fp, [sp], #4)
    3a08:	bx	lr

00003a0c <coda_inflateSync>:
    3a0c:	push	{fp, lr}
    3a10:	add	fp, sp, #4
    3a14:	sub	sp, sp, #32
    3a18:	str	r0, [fp, #-32]	; 0xffffffe0
    3a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a20:	cmp	r3, #0
    3a24:	beq	3a38 <coda_inflateSync+0x2c>
    3a28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a2c:	ldr	r3, [r3, #28]
    3a30:	cmp	r3, #0
    3a34:	bne	3a40 <coda_inflateSync+0x34>
    3a38:	mvn	r3, #1
    3a3c:	b	3c1c <coda_inflateSync+0x210>
    3a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a44:	ldr	r3, [r3, #28]
    3a48:	str	r3, [fp, #-12]
    3a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3a50:	ldr	r3, [r3, #4]
    3a54:	cmp	r3, #0
    3a58:	bne	3a74 <coda_inflateSync+0x68>
    3a5c:	ldr	r3, [fp, #-12]
    3a60:	ldr	r3, [r3, #60]	; 0x3c
    3a64:	cmp	r3, #7
    3a68:	bhi	3a74 <coda_inflateSync+0x68>
    3a6c:	mvn	r3, #4
    3a70:	b	3c1c <coda_inflateSync+0x210>
    3a74:	ldr	r3, [fp, #-12]
    3a78:	ldr	r3, [r3]
    3a7c:	cmp	r3, #31
    3a80:	beq	3b50 <coda_inflateSync+0x144>
    3a84:	ldr	r3, [fp, #-12]
    3a88:	mov	r2, #31
    3a8c:	str	r2, [r3]
    3a90:	ldr	r3, [fp, #-12]
    3a94:	ldr	r2, [r3, #56]	; 0x38
    3a98:	ldr	r3, [fp, #-12]
    3a9c:	ldr	r3, [r3, #60]	; 0x3c
    3aa0:	and	r3, r3, #7
    3aa4:	lsl	r2, r2, r3
    3aa8:	ldr	r3, [fp, #-12]
    3aac:	str	r2, [r3, #56]	; 0x38
    3ab0:	ldr	r3, [fp, #-12]
    3ab4:	ldr	r3, [r3, #60]	; 0x3c
    3ab8:	bic	r2, r3, #7
    3abc:	ldr	r3, [fp, #-12]
    3ac0:	str	r2, [r3, #60]	; 0x3c
    3ac4:	mov	r3, #0
    3ac8:	str	r3, [fp, #-8]
    3acc:	b	3b1c <coda_inflateSync+0x110>
    3ad0:	ldr	r3, [fp, #-8]
    3ad4:	add	r2, r3, #1
    3ad8:	str	r2, [fp, #-8]
    3adc:	ldr	r2, [fp, #-12]
    3ae0:	ldr	r2, [r2, #56]	; 0x38
    3ae4:	uxtb	r2, r2
    3ae8:	sub	r1, fp, #4
    3aec:	add	r3, r1, r3
    3af0:	strb	r2, [r3, #-20]	; 0xffffffec
    3af4:	ldr	r3, [fp, #-12]
    3af8:	ldr	r3, [r3, #56]	; 0x38
    3afc:	lsr	r2, r3, #8
    3b00:	ldr	r3, [fp, #-12]
    3b04:	str	r2, [r3, #56]	; 0x38
    3b08:	ldr	r3, [fp, #-12]
    3b0c:	ldr	r3, [r3, #60]	; 0x3c
    3b10:	sub	r2, r3, #8
    3b14:	ldr	r3, [fp, #-12]
    3b18:	str	r2, [r3, #60]	; 0x3c
    3b1c:	ldr	r3, [fp, #-12]
    3b20:	ldr	r3, [r3, #60]	; 0x3c
    3b24:	cmp	r3, #7
    3b28:	bhi	3ad0 <coda_inflateSync+0xc4>
    3b2c:	ldr	r3, [fp, #-12]
    3b30:	mov	r2, #0
    3b34:	str	r2, [r3, #104]	; 0x68
    3b38:	ldr	r3, [fp, #-12]
    3b3c:	add	r3, r3, #104	; 0x68
    3b40:	sub	r1, fp, #24
    3b44:	ldr	r2, [fp, #-8]
    3b48:	mov	r0, r3
    3b4c:	bl	3920 <syncsearch>
    3b50:	ldr	r3, [fp, #-12]
    3b54:	add	r0, r3, #104	; 0x68
    3b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3b5c:	ldr	r1, [r3]
    3b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3b64:	ldr	r3, [r3, #4]
    3b68:	mov	r2, r3
    3b6c:	bl	3920 <syncsearch>
    3b70:	str	r0, [fp, #-8]
    3b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3b78:	ldr	r2, [r3, #4]
    3b7c:	ldr	r3, [fp, #-8]
    3b80:	sub	r2, r2, r3
    3b84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3b88:	str	r2, [r3, #4]
    3b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3b90:	ldr	r2, [r3]
    3b94:	ldr	r3, [fp, #-8]
    3b98:	add	r2, r2, r3
    3b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3ba0:	str	r2, [r3]
    3ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3ba8:	ldr	r2, [r3, #8]
    3bac:	ldr	r3, [fp, #-8]
    3bb0:	add	r2, r2, r3
    3bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bb8:	str	r2, [r3, #8]
    3bbc:	ldr	r3, [fp, #-12]
    3bc0:	ldr	r3, [r3, #104]	; 0x68
    3bc4:	cmp	r3, #4
    3bc8:	beq	3bd4 <coda_inflateSync+0x1c8>
    3bcc:	mvn	r3, #2
    3bd0:	b	3c1c <coda_inflateSync+0x210>
    3bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bd8:	ldr	r3, [r3, #8]
    3bdc:	str	r3, [fp, #-16]
    3be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3be4:	ldr	r3, [r3, #20]
    3be8:	str	r3, [fp, #-20]	; 0xffffffec
    3bec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3bf0:	bl	15c <coda_inflateReset>
    3bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bf8:	ldr	r2, [fp, #-16]
    3bfc:	str	r2, [r3, #8]
    3c00:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3c04:	ldr	r2, [fp, #-20]	; 0xffffffec
    3c08:	str	r2, [r3, #20]
    3c0c:	ldr	r3, [fp, #-12]
    3c10:	mov	r2, #11
    3c14:	str	r2, [r3]
    3c18:	mov	r3, #0
    3c1c:	mov	r0, r3
    3c20:	sub	sp, fp, #4
    3c24:	pop	{fp, pc}

00003c28 <coda_inflateSyncPoint>:
    3c28:	push	{fp}		; (str fp, [sp, #-4]!)
    3c2c:	add	fp, sp, #0
    3c30:	sub	sp, sp, #20
    3c34:	str	r0, [fp, #-16]
    3c38:	ldr	r3, [fp, #-16]
    3c3c:	cmp	r3, #0
    3c40:	beq	3c54 <coda_inflateSyncPoint+0x2c>
    3c44:	ldr	r3, [fp, #-16]
    3c48:	ldr	r3, [r3, #28]
    3c4c:	cmp	r3, #0
    3c50:	bne	3c5c <coda_inflateSyncPoint+0x34>
    3c54:	mvn	r3, #1
    3c58:	b	3c94 <coda_inflateSyncPoint+0x6c>
    3c5c:	ldr	r3, [fp, #-16]
    3c60:	ldr	r3, [r3, #28]
    3c64:	str	r3, [fp, #-8]
    3c68:	ldr	r3, [fp, #-8]
    3c6c:	ldr	r3, [r3]
    3c70:	cmp	r3, #13
    3c74:	bne	3c90 <coda_inflateSyncPoint+0x68>
    3c78:	ldr	r3, [fp, #-8]
    3c7c:	ldr	r3, [r3, #60]	; 0x3c
    3c80:	cmp	r3, #0
    3c84:	bne	3c90 <coda_inflateSyncPoint+0x68>
    3c88:	mov	r3, #1
    3c8c:	b	3c94 <coda_inflateSyncPoint+0x6c>
    3c90:	mov	r3, #0
    3c94:	mov	r0, r3
    3c98:	add	sp, fp, #0
    3c9c:	pop	{fp}		; (ldr fp, [sp], #4)
    3ca0:	bx	lr

00003ca4 <coda_inflateCopy>:
    3ca4:	push	{fp, lr}
    3ca8:	add	fp, sp, #4
    3cac:	sub	sp, sp, #24
    3cb0:	str	r0, [fp, #-24]	; 0xffffffe8
    3cb4:	str	r1, [fp, #-28]	; 0xffffffe4
    3cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3cbc:	cmp	r3, #0
    3cc0:	beq	3d00 <coda_inflateCopy+0x5c>
    3cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3cc8:	cmp	r3, #0
    3ccc:	beq	3d00 <coda_inflateCopy+0x5c>
    3cd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3cd4:	ldr	r3, [r3, #28]
    3cd8:	cmp	r3, #0
    3cdc:	beq	3d00 <coda_inflateCopy+0x5c>
    3ce0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3ce4:	ldr	r3, [r3, #32]
    3ce8:	cmp	r3, #0
    3cec:	beq	3d00 <coda_inflateCopy+0x5c>
    3cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3cf4:	ldr	r3, [r3, #36]	; 0x24
    3cf8:	cmp	r3, #0
    3cfc:	bne	3d08 <coda_inflateCopy+0x64>
    3d00:	mvn	r3, #1
    3d04:	b	3eec <coda_inflateCopy+0x248>
    3d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d0c:	ldr	r3, [r3, #28]
    3d10:	str	r3, [fp, #-12]
    3d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d18:	ldr	r3, [r3, #32]
    3d1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3d20:	ldr	r0, [r2, #40]	; 0x28
    3d24:	ldr	r2, [pc, #460]	; 3ef8 <coda_inflateCopy+0x254>
    3d28:	mov	r1, #1
    3d2c:	blx	r3
    3d30:	str	r0, [fp, #-16]
    3d34:	ldr	r3, [fp, #-16]
    3d38:	cmp	r3, #0
    3d3c:	bne	3d48 <coda_inflateCopy+0xa4>
    3d40:	mvn	r3, #3
    3d44:	b	3eec <coda_inflateCopy+0x248>
    3d48:	mov	r3, #0
    3d4c:	str	r3, [fp, #-8]
    3d50:	ldr	r3, [fp, #-12]
    3d54:	ldr	r3, [r3, #52]	; 0x34
    3d58:	cmp	r3, #0
    3d5c:	beq	3dbc <coda_inflateCopy+0x118>
    3d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d64:	ldr	r3, [r3, #32]
    3d68:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3d6c:	ldr	r0, [r2, #40]	; 0x28
    3d70:	ldr	r2, [fp, #-12]
    3d74:	ldr	r2, [r2, #36]	; 0x24
    3d78:	mov	r1, #1
    3d7c:	lsl	r1, r1, r2
    3d80:	mov	r2, #1
    3d84:	blx	r3
    3d88:	str	r0, [fp, #-8]
    3d8c:	ldr	r3, [fp, #-8]
    3d90:	cmp	r3, #0
    3d94:	bne	3dbc <coda_inflateCopy+0x118>
    3d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3d9c:	ldr	r3, [r3, #36]	; 0x24
    3da0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3da4:	ldr	r2, [r2, #40]	; 0x28
    3da8:	ldr	r1, [fp, #-16]
    3dac:	mov	r0, r2
    3db0:	blx	r3
    3db4:	mvn	r3, #3
    3db8:	b	3eec <coda_inflateCopy+0x248>
    3dbc:	mov	r2, #56	; 0x38
    3dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3dc8:	bl	0 <memcpy>
    3dcc:	ldr	r2, [pc, #292]	; 3ef8 <coda_inflateCopy+0x254>
    3dd0:	ldr	r1, [fp, #-12]
    3dd4:	ldr	r0, [fp, #-16]
    3dd8:	bl	0 <memcpy>
    3ddc:	ldr	r3, [fp, #-12]
    3de0:	ldr	r2, [r3, #76]	; 0x4c
    3de4:	ldr	r3, [fp, #-12]
    3de8:	add	r3, r3, #1328	; 0x530
    3dec:	cmp	r2, r3
    3df0:	bcc	3e6c <coda_inflateCopy+0x1c8>
    3df4:	ldr	r3, [fp, #-12]
    3df8:	ldr	r2, [r3, #76]	; 0x4c
    3dfc:	ldr	r3, [fp, #-12]
    3e00:	add	r3, r3, #1328	; 0x530
    3e04:	add	r3, r3, #5760	; 0x1680
    3e08:	add	r3, r3, #12
    3e0c:	cmp	r2, r3
    3e10:	bhi	3e6c <coda_inflateCopy+0x1c8>
    3e14:	ldr	r3, [fp, #-16]
    3e18:	add	r3, r3, #1328	; 0x530
    3e1c:	ldr	r2, [fp, #-12]
    3e20:	ldr	r2, [r2, #76]	; 0x4c
    3e24:	mov	r1, r2
    3e28:	ldr	r2, [fp, #-12]
    3e2c:	add	r2, r2, #1328	; 0x530
    3e30:	sub	r2, r1, r2
    3e34:	add	r2, r3, r2
    3e38:	ldr	r3, [fp, #-16]
    3e3c:	str	r2, [r3, #76]	; 0x4c
    3e40:	ldr	r3, [fp, #-16]
    3e44:	add	r3, r3, #1328	; 0x530
    3e48:	ldr	r2, [fp, #-12]
    3e4c:	ldr	r2, [r2, #80]	; 0x50
    3e50:	mov	r1, r2
    3e54:	ldr	r2, [fp, #-12]
    3e58:	add	r2, r2, #1328	; 0x530
    3e5c:	sub	r2, r1, r2
    3e60:	add	r2, r3, r2
    3e64:	ldr	r3, [fp, #-16]
    3e68:	str	r2, [r3, #80]	; 0x50
    3e6c:	ldr	r3, [fp, #-16]
    3e70:	add	r3, r3, #1328	; 0x530
    3e74:	ldr	r2, [fp, #-12]
    3e78:	ldr	r2, [r2, #108]	; 0x6c
    3e7c:	mov	r1, r2
    3e80:	ldr	r2, [fp, #-12]
    3e84:	add	r2, r2, #1328	; 0x530
    3e88:	sub	r2, r1, r2
    3e8c:	add	r2, r3, r2
    3e90:	ldr	r3, [fp, #-16]
    3e94:	str	r2, [r3, #108]	; 0x6c
    3e98:	ldr	r3, [fp, #-8]
    3e9c:	cmp	r3, #0
    3ea0:	beq	3ed0 <coda_inflateCopy+0x22c>
    3ea4:	ldr	r3, [fp, #-12]
    3ea8:	ldr	r3, [r3, #36]	; 0x24
    3eac:	mov	r2, #1
    3eb0:	lsl	r3, r2, r3
    3eb4:	str	r3, [fp, #-20]	; 0xffffffec
    3eb8:	ldr	r3, [fp, #-12]
    3ebc:	ldr	r3, [r3, #52]	; 0x34
    3ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
    3ec4:	mov	r1, r3
    3ec8:	ldr	r0, [fp, #-8]
    3ecc:	bl	0 <memcpy>
    3ed0:	ldr	r3, [fp, #-16]
    3ed4:	ldr	r2, [fp, #-8]
    3ed8:	str	r2, [r3, #52]	; 0x34
    3edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3ee0:	ldr	r2, [fp, #-16]
    3ee4:	str	r2, [r3, #28]
    3ee8:	mov	r3, #0
    3eec:	mov	r0, r3
    3ef0:	sub	sp, fp, #4
    3ef4:	pop	{fp, pc}
    3ef8:	.word	0x00001bcc

00003efc <coda_inflateUndermine>:
    3efc:	push	{fp}		; (str fp, [sp, #-4]!)
    3f00:	add	fp, sp, #0
    3f04:	sub	sp, sp, #20
    3f08:	str	r0, [fp, #-16]
    3f0c:	str	r1, [fp, #-20]	; 0xffffffec
    3f10:	ldr	r3, [fp, #-16]
    3f14:	cmp	r3, #0
    3f18:	beq	3f2c <coda_inflateUndermine+0x30>
    3f1c:	ldr	r3, [fp, #-16]
    3f20:	ldr	r3, [r3, #28]
    3f24:	cmp	r3, #0
    3f28:	bne	3f34 <coda_inflateUndermine+0x38>
    3f2c:	mvn	r3, #1
    3f30:	b	3f7c <coda_inflateUndermine+0x80>
    3f34:	ldr	r3, [fp, #-16]
    3f38:	ldr	r3, [r3, #28]
    3f3c:	str	r3, [fp, #-8]
    3f40:	ldr	r3, [fp, #-20]	; 0xffffffec
    3f44:	cmp	r3, #0
    3f48:	moveq	r3, #1
    3f4c:	movne	r3, #0
    3f50:	uxtb	r3, r3
    3f54:	mov	r2, r3
    3f58:	ldr	r3, [fp, #-8]
    3f5c:	add	r3, r3, #4096	; 0x1000
    3f60:	str	r2, [r3, #3008]	; 0xbc0
    3f64:	ldr	r3, [fp, #-8]
    3f68:	add	r3, r3, #4096	; 0x1000
    3f6c:	mov	r2, r3
    3f70:	mov	r3, #1
    3f74:	str	r3, [r2, #3008]	; 0xbc0
    3f78:	mvn	r3, #2
    3f7c:	mov	r0, r3
    3f80:	add	sp, fp, #0
    3f84:	pop	{fp}		; (ldr fp, [sp], #4)
    3f88:	bx	lr

00003f8c <coda_inflateMark>:
    3f8c:	push	{fp}		; (str fp, [sp, #-4]!)
    3f90:	add	fp, sp, #0
    3f94:	sub	sp, sp, #20
    3f98:	str	r0, [fp, #-16]
    3f9c:	ldr	r3, [fp, #-16]
    3fa0:	cmp	r3, #0
    3fa4:	beq	3fb8 <coda_inflateMark+0x2c>
    3fa8:	ldr	r3, [fp, #-16]
    3fac:	ldr	r3, [r3, #28]
    3fb0:	cmp	r3, #0
    3fb4:	bne	3fc0 <coda_inflateMark+0x34>
    3fb8:	ldr	r3, [pc, #128]	; 4040 <coda_inflateMark+0xb4>
    3fbc:	b	4030 <coda_inflateMark+0xa4>
    3fc0:	ldr	r3, [fp, #-16]
    3fc4:	ldr	r3, [r3, #28]
    3fc8:	str	r3, [fp, #-8]
    3fcc:	ldr	r3, [fp, #-8]
    3fd0:	add	r3, r3, #4096	; 0x1000
    3fd4:	ldr	r3, [r3, #3012]	; 0xbc4
    3fd8:	lsl	r3, r3, #16
    3fdc:	mov	r1, r3
    3fe0:	ldr	r3, [fp, #-8]
    3fe4:	ldr	r3, [r3]
    3fe8:	cmp	r3, #15
    3fec:	bne	3ffc <coda_inflateMark+0x70>
    3ff0:	ldr	r3, [fp, #-8]
    3ff4:	ldr	r3, [r3, #64]	; 0x40
    3ff8:	b	402c <coda_inflateMark+0xa0>
    3ffc:	ldr	r3, [fp, #-8]
    4000:	ldr	r3, [r3]
    4004:	cmp	r3, #24
    4008:	bne	4028 <coda_inflateMark+0x9c>
    400c:	ldr	r3, [fp, #-8]
    4010:	add	r3, r3, #4096	; 0x1000
    4014:	ldr	r2, [r3, #3016]	; 0xbc8
    4018:	ldr	r3, [fp, #-8]
    401c:	ldr	r3, [r3, #64]	; 0x40
    4020:	sub	r3, r2, r3
    4024:	b	402c <coda_inflateMark+0xa0>
    4028:	mov	r3, #0
    402c:	add	r3, r1, r3
    4030:	mov	r0, r3
    4034:	add	sp, fp, #0
    4038:	pop	{fp}		; (ldr fp, [sp], #4)
    403c:	bx	lr
    4040:	.word	0xffff0000
