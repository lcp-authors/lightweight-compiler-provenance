
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_sp3_done>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #32
       c:	ldr	r0, [pc, #236]	; 100 <coda_sp3_done+0x100>
      10:	str	r0, [fp, #-8]
      14:	bl	0 <__aeabi_read_tp>
      18:	ldr	ip, [fp, #-8]
      1c:	ldr	r0, [r0, ip]
      20:	movw	ip, #0
      24:	cmp	r0, ip
      28:	bne	30 <coda_sp3_done+0x30>
      2c:	b	f8 <coda_sp3_done+0xf8>
      30:	movw	r0, #0
      34:	str	r0, [fp, #-4]
      38:	ldr	r0, [fp, #-4]
      3c:	cmp	r0, #75	; 0x4b
      40:	bge	c8 <coda_sp3_done+0xc8>
      44:	ldr	r0, [pc, #180]	; 100 <coda_sp3_done+0x100>
      48:	str	r0, [fp, #-12]
      4c:	bl	0 <__aeabi_read_tp>
      50:	ldr	ip, [fp, #-12]
      54:	ldr	r0, [r0, ip]
      58:	ldr	ip, [fp, #-4]
      5c:	add	r0, r0, ip, lsl #2
      60:	ldr	r0, [r0]
      64:	movw	ip, #0
      68:	cmp	r0, ip
      6c:	beq	b4 <coda_sp3_done+0xb4>
      70:	ldr	r0, [pc, #136]	; 100 <coda_sp3_done+0x100>
      74:	str	r0, [sp, #16]
      78:	bl	0 <__aeabi_read_tp>
      7c:	ldr	ip, [sp, #16]
      80:	ldr	lr, [r0, ip]
      84:	ldr	r1, [fp, #-4]
      88:	ldr	r1, [lr, r1, lsl #2]
      8c:	str	r0, [sp, #12]
      90:	mov	r0, r1
      94:	bl	0 <coda_type_release>
      98:	ldr	r0, [sp, #12]
      9c:	ldr	r1, [sp, #16]
      a0:	ldr	ip, [r0, r1]
      a4:	ldr	lr, [fp, #-4]
      a8:	add	ip, ip, lr, lsl #2
      ac:	movw	lr, #0
      b0:	str	lr, [ip]
      b4:	b	b8 <coda_sp3_done+0xb8>
      b8:	ldr	r0, [fp, #-4]
      bc:	add	r0, r0, #1
      c0:	str	r0, [fp, #-4]
      c4:	b	38 <coda_sp3_done+0x38>
      c8:	ldr	r0, [pc, #48]	; 100 <coda_sp3_done+0x100>
      cc:	str	r0, [sp, #8]
      d0:	bl	0 <__aeabi_read_tp>
      d4:	ldr	ip, [sp, #8]
      d8:	ldr	lr, [r0, ip]
      dc:	str	r0, [sp, #4]
      e0:	mov	r0, lr
      e4:	bl	0 <free>
      e8:	mov	r0, #0
      ec:	ldr	ip, [sp, #4]
      f0:	ldr	lr, [sp, #8]
      f4:	str	r0, [ip, lr]
      f8:	mov	sp, fp
      fc:	pop	{fp, pc}
     100:	.word	0x00000000

00000104 <coda_sp3_reopen>:
     104:	push	{fp, lr}
     108:	mov	fp, sp
     10c:	sub	sp, sp, #40	; 0x28
     110:	str	r0, [fp, #-8]
     114:	bl	2d4 <sp3_init>
     118:	cmp	r0, #0
     11c:	beq	13c <coda_sp3_reopen+0x38>
     120:	ldr	r0, [fp, #-8]
     124:	ldr	r0, [r0]
     128:	bl	0 <coda_close>
     12c:	mvn	lr, #0
     130:	str	lr, [fp, #-4]
     134:	str	r0, [fp, #-16]
     138:	b	2c8 <coda_sp3_reopen+0x1c4>
     13c:	movw	r0, #56	; 0x38
     140:	bl	0 <malloc>
     144:	str	r0, [fp, #-12]
     148:	ldr	r0, [fp, #-12]
     14c:	movw	lr, #0
     150:	cmp	r0, lr
     154:	bne	198 <coda_sp3_reopen+0x94>
     158:	mvn	r0, #0
     15c:	movw	r1, #0
     160:	movt	r1, #0
     164:	movw	r2, #56	; 0x38
     168:	movw	r3, #0
     16c:	movt	r3, #0
     170:	movw	ip, #1946	; 0x79a
     174:	str	ip, [sp]
     178:	bl	0 <coda_set_error>
     17c:	ldr	r0, [fp, #-8]
     180:	ldr	r0, [r0]
     184:	bl	0 <coda_close>
     188:	mvn	r1, #0
     18c:	str	r1, [fp, #-4]
     190:	str	r0, [sp, #20]
     194:	b	2c8 <coda_sp3_reopen+0x1c4>
     198:	ldr	r0, [fp, #-12]
     19c:	mov	r1, #0
     1a0:	str	r1, [r0]
     1a4:	ldr	r0, [fp, #-8]
     1a8:	ldr	r0, [r0]
     1ac:	ldr	r2, [r0, #8]
     1b0:	ldr	r0, [r0, #12]
     1b4:	ldr	r3, [fp, #-12]
     1b8:	str	r0, [r3, #12]
     1bc:	str	r2, [r3, #8]
     1c0:	ldr	r0, [fp, #-12]
     1c4:	mov	r2, #9
     1c8:	str	r2, [r0, #16]
     1cc:	ldr	r0, [fp, #-12]
     1d0:	str	r1, [r0, #20]
     1d4:	ldr	r0, [fp, #-12]
     1d8:	str	r1, [r0, #24]
     1dc:	ldr	r0, [fp, #-12]
     1e0:	str	r1, [r0, #28]
     1e4:	ldr	r0, [fp, #-12]
     1e8:	str	r1, [r0, #32]
     1ec:	ldr	r0, [fp, #-12]
     1f0:	str	r1, [r0, #44]	; 0x2c
     1f4:	str	r1, [r0, #40]	; 0x28
     1f8:	ldr	r0, [fp, #-12]
     1fc:	movw	r1, #0
     200:	str	r1, [r0, #48]	; 0x30
     204:	ldr	r0, [fp, #-8]
     208:	ldr	r0, [r0]
     20c:	ldr	r0, [r0]
     210:	bl	0 <strdup>
     214:	ldr	r1, [fp, #-12]
     218:	str	r0, [r1]
     21c:	ldr	r0, [fp, #-12]
     220:	ldr	r0, [r0]
     224:	movw	r1, #0
     228:	cmp	r0, r1
     22c:	bne	278 <coda_sp3_reopen+0x174>
     230:	mvn	r0, #0
     234:	movw	r1, #0
     238:	movt	r1, #0
     23c:	movw	r2, #0
     240:	movt	r2, #0
     244:	movw	r3, #1964	; 0x7ac
     248:	bl	0 <coda_set_error>
     24c:	ldr	r0, [fp, #-12]
     250:	bl	0 <coda_close>
     254:	ldr	r1, [fp, #-8]
     258:	ldr	r1, [r1]
     25c:	str	r0, [sp, #16]
     260:	mov	r0, r1
     264:	bl	0 <coda_close>
     268:	mvn	r1, #0
     26c:	str	r1, [fp, #-4]
     270:	str	r0, [sp, #12]
     274:	b	2c8 <coda_sp3_reopen+0x1c4>
     278:	ldr	r0, [fp, #-8]
     27c:	ldr	r0, [r0]
     280:	bl	0 <coda_close>
     284:	ldr	lr, [fp, #-12]
     288:	str	r0, [sp, #8]
     28c:	mov	r0, lr
     290:	bl	3e50 <read_file>
     294:	cmp	r0, #0
     298:	beq	2b4 <coda_sp3_reopen+0x1b0>
     29c:	ldr	r0, [fp, #-12]
     2a0:	bl	0 <coda_close>
     2a4:	mvn	lr, #0
     2a8:	str	lr, [fp, #-4]
     2ac:	str	r0, [sp, #4]
     2b0:	b	2c8 <coda_sp3_reopen+0x1c4>
     2b4:	ldr	r0, [fp, #-12]
     2b8:	ldr	r1, [fp, #-8]
     2bc:	str	r0, [r1]
     2c0:	movw	r0, #0
     2c4:	str	r0, [fp, #-4]
     2c8:	ldr	r0, [fp, #-4]
     2cc:	mov	sp, fp
     2d0:	pop	{fp, pc}

000002d4 <sp3_init>:
     2d4:	push	{r4, r5, fp, lr}
     2d8:	add	fp, sp, #8
     2dc:	sub	sp, sp, #664	; 0x298
     2e0:	sub	sp, sp, #1024	; 0x400
     2e4:	ldr	r0, [pc, #216]	; 3c4 <sp3_init+0xf0>
     2e8:	str	r0, [fp, #-32]	; 0xffffffe0
     2ec:	bl	0 <__aeabi_read_tp>
     2f0:	ldr	ip, [fp, #-32]	; 0xffffffe0
     2f4:	ldr	r0, [r0, ip]
     2f8:	movw	ip, #0
     2fc:	cmp	r0, ip
     300:	beq	310 <sp3_init+0x3c>
     304:	movw	r0, #0
     308:	str	r0, [fp, #-12]
     30c:	b	3e44 <sp3_init+0x3b70>
     310:	mov	r0, #1
     314:	str	r0, [fp, #-16]
     318:	mov	r0, #300	; 0x12c
     31c:	bl	0 <malloc>
     320:	ldr	lr, [pc, #156]	; 3c4 <sp3_init+0xf0>
     324:	str	r0, [fp, #-36]	; 0xffffffdc
     328:	str	lr, [fp, #-40]	; 0xffffffd8
     32c:	bl	0 <__aeabi_read_tp>
     330:	ldr	ip, [fp, #-36]	; 0xffffffdc
     334:	ldr	lr, [fp, #-40]	; 0xffffffd8
     338:	str	ip, [r0, lr]
     33c:	ldr	r0, [r0, lr]
     340:	movw	r1, #0
     344:	cmp	r0, r1
     348:	bne	37c <sp3_init+0xa8>
     34c:	mvn	r0, #0
     350:	movw	r1, #0
     354:	movt	r1, #0
     358:	movw	r2, #300	; 0x12c
     35c:	movw	r3, #0
     360:	movt	r3, #0
     364:	movw	ip, #230	; 0xe6
     368:	str	ip, [sp]
     36c:	bl	0 <coda_set_error>
     370:	mvn	r0, #0
     374:	str	r0, [fp, #-12]
     378:	b	3e44 <sp3_init+0x3b70>
     37c:	movw	r0, #0
     380:	str	r0, [fp, #-28]	; 0xffffffe4
     384:	ldr	r0, [fp, #-28]	; 0xffffffe4
     388:	cmp	r0, #75	; 0x4b
     38c:	bge	3c8 <sp3_init+0xf4>
     390:	ldr	r0, [pc, #44]	; 3c4 <sp3_init+0xf0>
     394:	str	r0, [fp, #-44]	; 0xffffffd4
     398:	bl	0 <__aeabi_read_tp>
     39c:	ldr	ip, [fp, #-44]	; 0xffffffd4
     3a0:	ldr	r0, [r0, ip]
     3a4:	ldr	ip, [fp, #-28]	; 0xffffffe4
     3a8:	add	r0, r0, ip, lsl #2
     3ac:	movw	ip, #0
     3b0:	str	ip, [r0]
     3b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3b8:	add	r0, r0, #1
     3bc:	str	r0, [fp, #-28]	; 0xffffffe4
     3c0:	b	384 <sp3_init+0xb0>
     3c4:	.word	0x00000000
     3c8:	mov	r0, #9
     3cc:	str	r0, [fp, #-48]	; 0xffffffd0
     3d0:	bl	0 <coda_type_text_new>
     3d4:	ldr	lr, [pc, #-24]	; 3c4 <sp3_init+0xf0>
     3d8:	str	r0, [fp, #-52]	; 0xffffffcc
     3dc:	str	lr, [fp, #-56]	; 0xffffffc8
     3e0:	bl	0 <__aeabi_read_tp>
     3e4:	ldr	ip, [fp, #-56]	; 0xffffffc8
     3e8:	ldr	lr, [r0, ip]
     3ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
     3f0:	str	r1, [lr]
     3f4:	ldr	lr, [r0, ip]
     3f8:	ldr	lr, [lr]
     3fc:	mov	r2, #1
     400:	mov	r3, #0
     404:	str	r0, [fp, #-60]	; 0xffffffc4
     408:	mov	r0, lr
     40c:	str	r2, [fp, #-64]	; 0xffffffc0
     410:	str	r3, [fp, #-68]	; 0xffffffbc
     414:	bl	0 <coda_type_set_byte_size>
     418:	ldr	r1, [fp, #-60]	; 0xffffffc4
     41c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     420:	ldr	r3, [r1, r2]
     424:	ldr	r3, [r3]
     428:	movw	r1, #0
     42c:	movt	r1, #0
     430:	str	r0, [fp, #-72]	; 0xffffffb8
     434:	mov	r0, r3
     438:	bl	0 <coda_type_set_description>
     43c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     440:	str	r0, [fp, #-76]	; 0xffffffb4
     444:	mov	r0, r1
     448:	bl	0 <coda_type_text_new>
     44c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     450:	ldr	r2, [fp, #-56]	; 0xffffffc8
     454:	ldr	r3, [r1, r2]
     458:	str	r0, [r3, #4]
     45c:	ldr	r0, [fp, #-68]	; 0xffffffbc
     460:	str	r0, [fp, #-24]	; 0xffffffe8
     464:	movw	r3, #0
     468:	movt	r3, #0
     46c:	sub	ip, fp, #24
     470:	mov	r0, r3
     474:	mov	r1, ip
     478:	str	r3, [fp, #-80]	; 0xffffffb0
     47c:	str	ip, [fp, #-84]	; 0xffffffac
     480:	bl	0 <coda_expression_from_string>
     484:	ldr	r1, [fp, #-24]	; 0xffffffe8
     488:	ldr	r2, [fp, #-48]	; 0xffffffd0
     48c:	str	r0, [fp, #-88]	; 0xffffffa8
     490:	mov	r0, r2
     494:	bl	0 <coda_type_time_new>
     498:	ldr	r1, [fp, #-60]	; 0xffffffc4
     49c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     4a0:	ldr	r3, [r1, r2]
     4a4:	str	r0, [r3, #8]
     4a8:	ldr	r0, [r1, r2]
     4ac:	ldr	r1, [r0, #4]
     4b0:	ldr	r0, [r0, #8]
     4b4:	bl	0 <coda_type_time_set_base_type>
     4b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     4bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     4c0:	ldr	r3, [r1, r2]
     4c4:	ldr	r3, [r3, #8]
     4c8:	movw	r1, #0
     4cc:	movt	r1, #0
     4d0:	str	r0, [fp, #-92]	; 0xffffffa4
     4d4:	mov	r0, r3
     4d8:	bl	0 <coda_type_set_description>
     4dc:	mov	r1, #2
     4e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
     4e4:	str	r0, [fp, #-96]	; 0xffffffa0
     4e8:	mov	r0, r2
     4ec:	str	r1, [fp, #-100]	; 0xffffff9c
     4f0:	bl	0 <coda_type_number_new>
     4f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     4f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     4fc:	ldr	r3, [r1, r2]
     500:	str	r0, [r3, #12]
     504:	ldr	r0, [r1, r2]
     508:	ldr	r0, [r0, #12]
     50c:	ldr	r1, [fp, #-16]
     510:	bl	0 <coda_type_number_set_endianness>
     514:	ldr	r1, [fp, #-60]	; 0xffffffc4
     518:	ldr	r2, [fp, #-56]	; 0xffffffc8
     51c:	ldr	r3, [r1, r2]
     520:	ldr	r3, [r3, #12]
     524:	mov	ip, #4
     528:	str	r0, [fp, #-104]	; 0xffffff98
     52c:	mov	r0, r3
     530:	mov	r1, ip
     534:	str	ip, [fp, #-108]	; 0xffffff94
     538:	bl	0 <coda_type_set_read_type>
     53c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     540:	ldr	r2, [fp, #-56]	; 0xffffffc8
     544:	ldr	r3, [r1, r2]
     548:	ldr	r3, [r3, #12]
     54c:	mov	ip, #32
     550:	str	r0, [fp, #-112]	; 0xffffff90
     554:	mov	r0, r3
     558:	mov	r2, ip
     55c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     560:	str	ip, [fp, #-116]	; 0xffffff8c
     564:	bl	0 <coda_type_set_bit_size>
     568:	ldr	r1, [fp, #-60]	; 0xffffffc4
     56c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     570:	ldr	r3, [r1, r2]
     574:	ldr	r3, [r3, #12]
     578:	movw	r1, #0
     57c:	movt	r1, #0
     580:	str	r0, [fp, #-120]	; 0xffffff88
     584:	mov	r0, r3
     588:	bl	0 <coda_type_set_description>
     58c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     590:	str	r0, [fp, #-124]	; 0xffffff84
     594:	mov	r0, r1
     598:	bl	0 <coda_type_text_new>
     59c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     5a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     5a4:	ldr	r3, [r1, r2]
     5a8:	str	r0, [r3, #16]
     5ac:	ldr	r0, [r1, r2]
     5b0:	ldr	r0, [r0, #16]
     5b4:	mov	r3, #5
     5b8:	mov	r2, r3
     5bc:	ldr	ip, [fp, #-68]	; 0xffffffbc
     5c0:	str	r3, [fp, #-128]	; 0xffffff80
     5c4:	mov	r3, ip
     5c8:	bl	0 <coda_type_set_byte_size>
     5cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     5d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     5d4:	ldr	r3, [r1, r2]
     5d8:	ldr	r3, [r3, #16]
     5dc:	movw	r1, #0
     5e0:	movt	r1, #0
     5e4:	str	r0, [fp, #-132]	; 0xffffff7c
     5e8:	mov	r0, r3
     5ec:	bl	0 <coda_type_set_description>
     5f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     5f4:	str	r0, [fp, #-136]	; 0xffffff78
     5f8:	mov	r0, r1
     5fc:	bl	0 <coda_type_text_new>
     600:	ldr	r1, [fp, #-60]	; 0xffffffc4
     604:	ldr	r2, [fp, #-56]	; 0xffffffc8
     608:	ldr	r3, [r1, r2]
     60c:	str	r0, [r3, #20]
     610:	ldr	r0, [r1, r2]
     614:	ldr	r0, [r0, #20]
     618:	ldr	r2, [fp, #-128]	; 0xffffff80
     61c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     620:	bl	0 <coda_type_set_byte_size>
     624:	ldr	r1, [fp, #-60]	; 0xffffffc4
     628:	ldr	r2, [fp, #-56]	; 0xffffffc8
     62c:	ldr	r3, [r1, r2]
     630:	ldr	r3, [r3, #20]
     634:	movw	r1, #0
     638:	movt	r1, #0
     63c:	str	r0, [fp, #-140]	; 0xffffff74
     640:	mov	r0, r3
     644:	bl	0 <coda_type_set_description>
     648:	ldr	r1, [fp, #-48]	; 0xffffffd0
     64c:	str	r0, [fp, #-144]	; 0xffffff70
     650:	mov	r0, r1
     654:	bl	0 <coda_type_text_new>
     658:	ldr	r1, [fp, #-60]	; 0xffffffc4
     65c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     660:	ldr	r3, [r1, r2]
     664:	str	r0, [r3, #24]
     668:	ldr	r0, [r1, r2]
     66c:	ldr	r0, [r0, #24]
     670:	mov	r3, #3
     674:	mov	r2, r3
     678:	ldr	ip, [fp, #-68]	; 0xffffffbc
     67c:	str	r3, [fp, #-148]	; 0xffffff6c
     680:	mov	r3, ip
     684:	bl	0 <coda_type_set_byte_size>
     688:	ldr	r1, [fp, #-60]	; 0xffffffc4
     68c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     690:	ldr	r3, [r1, r2]
     694:	ldr	r3, [r3, #24]
     698:	movw	r1, #0
     69c:	movt	r1, #0
     6a0:	str	r0, [fp, #-152]	; 0xffffff68
     6a4:	mov	r0, r3
     6a8:	bl	0 <coda_type_set_description>
     6ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
     6b0:	str	r0, [fp, #-156]	; 0xffffff64
     6b4:	mov	r0, r1
     6b8:	bl	0 <coda_type_text_new>
     6bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     6c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     6c4:	ldr	r3, [r1, r2]
     6c8:	str	r0, [r3, #28]
     6cc:	ldr	r0, [r1, r2]
     6d0:	ldr	r0, [r0, #28]
     6d4:	ldr	r2, [fp, #-108]	; 0xffffff94
     6d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     6dc:	bl	0 <coda_type_set_byte_size>
     6e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     6e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     6e8:	ldr	r3, [r1, r2]
     6ec:	ldr	r3, [r3, #28]
     6f0:	movw	r1, #0
     6f4:	movt	r1, #0
     6f8:	str	r0, [fp, #-160]	; 0xffffff60
     6fc:	mov	r0, r3
     700:	bl	0 <coda_type_set_description>
     704:	ldr	r1, [fp, #-48]	; 0xffffffd0
     708:	str	r0, [fp, #-164]	; 0xffffff5c
     70c:	mov	r0, r1
     710:	ldr	r1, [fp, #-100]	; 0xffffff9c
     714:	bl	0 <coda_type_number_new>
     718:	ldr	r1, [fp, #-60]	; 0xffffffc4
     71c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     720:	ldr	r3, [r1, r2]
     724:	str	r0, [r3, #32]
     728:	ldr	r0, [r1, r2]
     72c:	ldr	r0, [r0, #32]
     730:	ldr	r1, [fp, #-16]
     734:	bl	0 <coda_type_number_set_endianness>
     738:	ldr	r1, [fp, #-60]	; 0xffffffc4
     73c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     740:	ldr	r3, [r1, r2]
     744:	ldr	r3, [r3, #32]
     748:	str	r0, [fp, #-168]	; 0xffffff58
     74c:	mov	r0, r3
     750:	ldr	r1, [fp, #-100]	; 0xffffff9c
     754:	bl	0 <coda_type_set_read_type>
     758:	ldr	r1, [fp, #-60]	; 0xffffffc4
     75c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     760:	ldr	r3, [r1, r2]
     764:	ldr	r3, [r3, #32]
     768:	mov	ip, #16
     76c:	str	r0, [fp, #-172]	; 0xffffff54
     770:	mov	r0, r3
     774:	mov	r2, ip
     778:	ldr	r3, [fp, #-68]	; 0xffffffbc
     77c:	str	ip, [fp, #-176]	; 0xffffff50
     780:	bl	0 <coda_type_set_bit_size>
     784:	ldr	r1, [fp, #-60]	; 0xffffffc4
     788:	ldr	r2, [fp, #-56]	; 0xffffffc8
     78c:	ldr	r3, [r1, r2]
     790:	ldr	r3, [r3, #32]
     794:	movw	r1, #0
     798:	movt	r1, #0
     79c:	str	r0, [fp, #-180]	; 0xffffff4c
     7a0:	mov	r0, r3
     7a4:	bl	0 <coda_type_set_description>
     7a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     7ac:	str	r0, [fp, #-184]	; 0xffffff48
     7b0:	mov	r0, r1
     7b4:	ldr	r1, [fp, #-148]	; 0xffffff6c
     7b8:	bl	0 <coda_type_number_new>
     7bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     7c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7c4:	ldr	r3, [r1, r2]
     7c8:	str	r0, [r3, #36]	; 0x24
     7cc:	ldr	r0, [r1, r2]
     7d0:	ldr	r0, [r0, #36]	; 0x24
     7d4:	ldr	r1, [fp, #-16]
     7d8:	bl	0 <coda_type_number_set_endianness>
     7dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     7e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7e4:	ldr	r3, [r1, r2]
     7e8:	ldr	r3, [r3, #36]	; 0x24
     7ec:	mov	ip, #64	; 0x40
     7f0:	str	r0, [fp, #-188]	; 0xffffff44
     7f4:	mov	r0, r3
     7f8:	mov	r2, ip
     7fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     800:	str	ip, [fp, #-192]	; 0xffffff40
     804:	bl	0 <coda_type_set_bit_size>
     808:	ldr	r1, [fp, #-60]	; 0xffffffc4
     80c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     810:	ldr	r3, [r1, r2]
     814:	ldr	r3, [r3, #36]	; 0x24
     818:	movw	r1, #0
     81c:	movt	r1, #0
     820:	str	r0, [fp, #-196]	; 0xffffff3c
     824:	mov	r0, r3
     828:	bl	0 <coda_type_set_description>
     82c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     830:	str	r0, [fp, #-200]	; 0xffffff38
     834:	mov	r0, r1
     838:	ldr	r1, [fp, #-148]	; 0xffffff6c
     83c:	bl	0 <coda_type_number_new>
     840:	ldr	r1, [fp, #-60]	; 0xffffffc4
     844:	ldr	r2, [fp, #-56]	; 0xffffffc8
     848:	ldr	r3, [r1, r2]
     84c:	str	r0, [r3, #40]	; 0x28
     850:	ldr	r0, [r1, r2]
     854:	ldr	r0, [r0, #40]	; 0x28
     858:	ldr	r1, [fp, #-16]
     85c:	bl	0 <coda_type_number_set_endianness>
     860:	ldr	r1, [fp, #-60]	; 0xffffffc4
     864:	ldr	r2, [fp, #-56]	; 0xffffffc8
     868:	ldr	r3, [r1, r2]
     86c:	ldr	r3, [r3, #40]	; 0x28
     870:	str	r0, [fp, #-204]	; 0xffffff34
     874:	mov	r0, r3
     878:	ldr	r2, [fp, #-192]	; 0xffffff40
     87c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     880:	bl	0 <coda_type_set_bit_size>
     884:	ldr	r1, [fp, #-60]	; 0xffffffc4
     888:	ldr	r2, [fp, #-56]	; 0xffffffc8
     88c:	ldr	r3, [r1, r2]
     890:	ldr	r3, [r3, #40]	; 0x28
     894:	movw	r1, #0
     898:	movt	r1, #0
     89c:	str	r0, [fp, #-208]	; 0xffffff30
     8a0:	mov	r0, r3
     8a4:	bl	0 <coda_type_set_description>
     8a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     8ac:	str	r0, [fp, #-212]	; 0xffffff2c
     8b0:	mov	r0, r1
     8b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
     8b8:	bl	0 <coda_type_number_new>
     8bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8c4:	ldr	r3, [r1, r2]
     8c8:	str	r0, [r3, #44]	; 0x2c
     8cc:	ldr	r0, [r1, r2]
     8d0:	ldr	r0, [r0, #44]	; 0x2c
     8d4:	ldr	r1, [fp, #-16]
     8d8:	bl	0 <coda_type_number_set_endianness>
     8dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8e4:	ldr	r3, [r1, r2]
     8e8:	ldr	r3, [r3, #44]	; 0x2c
     8ec:	str	r0, [fp, #-216]	; 0xffffff28
     8f0:	mov	r0, r3
     8f4:	ldr	r1, [fp, #-108]	; 0xffffff94
     8f8:	bl	0 <coda_type_set_read_type>
     8fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     900:	ldr	r2, [fp, #-56]	; 0xffffffc8
     904:	ldr	r3, [r1, r2]
     908:	ldr	r3, [r3, #44]	; 0x2c
     90c:	str	r0, [fp, #-220]	; 0xffffff24
     910:	mov	r0, r3
     914:	ldr	r2, [fp, #-116]	; 0xffffff8c
     918:	ldr	r3, [fp, #-68]	; 0xffffffbc
     91c:	bl	0 <coda_type_set_bit_size>
     920:	ldr	r1, [fp, #-60]	; 0xffffffc4
     924:	ldr	r2, [fp, #-56]	; 0xffffffc8
     928:	ldr	r3, [r1, r2]
     92c:	ldr	r3, [r3, #44]	; 0x2c
     930:	movw	r1, #0
     934:	movt	r1, #0
     938:	str	r0, [fp, #-224]	; 0xffffff20
     93c:	mov	r0, r3
     940:	bl	0 <coda_type_set_description>
     944:	ldr	r1, [fp, #-48]	; 0xffffffd0
     948:	str	r0, [fp, #-228]	; 0xffffff1c
     94c:	mov	r0, r1
     950:	ldr	r1, [fp, #-148]	; 0xffffff6c
     954:	bl	0 <coda_type_number_new>
     958:	ldr	r1, [fp, #-60]	; 0xffffffc4
     95c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     960:	ldr	r3, [r1, r2]
     964:	str	r0, [r3, #48]	; 0x30
     968:	ldr	r0, [r1, r2]
     96c:	ldr	r0, [r0, #48]	; 0x30
     970:	ldr	r1, [fp, #-16]
     974:	bl	0 <coda_type_number_set_endianness>
     978:	ldr	r1, [fp, #-60]	; 0xffffffc4
     97c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     980:	ldr	r3, [r1, r2]
     984:	ldr	r3, [r3, #48]	; 0x30
     988:	str	r0, [fp, #-232]	; 0xffffff18
     98c:	mov	r0, r3
     990:	ldr	r2, [fp, #-192]	; 0xffffff40
     994:	ldr	r3, [fp, #-68]	; 0xffffffbc
     998:	bl	0 <coda_type_set_bit_size>
     99c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     9a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9a4:	ldr	r3, [r1, r2]
     9a8:	ldr	r3, [r3, #48]	; 0x30
     9ac:	movw	r1, #0
     9b0:	movt	r1, #0
     9b4:	str	r0, [fp, #-236]	; 0xffffff14
     9b8:	mov	r0, r3
     9bc:	bl	0 <coda_type_set_description>
     9c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     9c4:	str	r0, [fp, #-240]	; 0xffffff10
     9c8:	mov	r0, r1
     9cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
     9d0:	bl	0 <coda_type_number_new>
     9d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     9d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9dc:	ldr	r3, [r1, r2]
     9e0:	str	r0, [r3, #52]	; 0x34
     9e4:	ldr	r0, [r1, r2]
     9e8:	ldr	r0, [r0, #52]	; 0x34
     9ec:	ldr	r1, [fp, #-16]
     9f0:	bl	0 <coda_type_number_set_endianness>
     9f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     9f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9fc:	ldr	r3, [r1, r2]
     a00:	ldr	r3, [r3, #52]	; 0x34
     a04:	str	r0, [fp, #-244]	; 0xffffff0c
     a08:	mov	r0, r3
     a0c:	ldr	r1, [fp, #-64]	; 0xffffffc0
     a10:	bl	0 <coda_type_set_read_type>
     a14:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a18:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a1c:	ldr	r3, [r1, r2]
     a20:	ldr	r3, [r3, #52]	; 0x34
     a24:	mov	ip, #8
     a28:	str	r0, [fp, #-248]	; 0xffffff08
     a2c:	mov	r0, r3
     a30:	mov	r2, ip
     a34:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a38:	str	ip, [fp, #-252]	; 0xffffff04
     a3c:	bl	0 <coda_type_set_bit_size>
     a40:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a44:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a48:	ldr	r3, [r1, r2]
     a4c:	ldr	r3, [r3, #52]	; 0x34
     a50:	movw	r1, #0
     a54:	movt	r1, #0
     a58:	str	r0, [fp, #-256]	; 0xffffff00
     a5c:	mov	r0, r3
     a60:	bl	0 <coda_type_set_description>
     a64:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a68:	str	r0, [fp, #-260]	; 0xfffffefc
     a6c:	mov	r0, r1
     a70:	bl	0 <coda_type_text_new>
     a74:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a7c:	ldr	r3, [r1, r2]
     a80:	str	r0, [r3, #56]	; 0x38
     a84:	ldr	r0, [r1, r2]
     a88:	ldr	r0, [r0, #56]	; 0x38
     a8c:	ldr	r2, [fp, #-148]	; 0xffffff6c
     a90:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a94:	bl	0 <coda_type_set_byte_size>
     a98:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     aa0:	ldr	r3, [r1, r2]
     aa4:	ldr	r3, [r3, #56]	; 0x38
     aa8:	movw	r1, #0
     aac:	movt	r1, #0
     ab0:	str	r0, [fp, #-264]	; 0xfffffef8
     ab4:	mov	r0, r3
     ab8:	bl	0 <coda_type_set_description>
     abc:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ac0:	str	r0, [fp, #-268]	; 0xfffffef4
     ac4:	mov	r0, r1
     ac8:	ldr	r1, [fp, #-100]	; 0xffffff9c
     acc:	bl	0 <coda_type_number_new>
     ad0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ad4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ad8:	ldr	r3, [r1, r2]
     adc:	str	r0, [r3, #64]	; 0x40
     ae0:	ldr	r0, [r1, r2]
     ae4:	ldr	r0, [r0, #64]	; 0x40
     ae8:	ldr	r1, [fp, #-16]
     aec:	bl	0 <coda_type_number_set_endianness>
     af0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     af4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     af8:	ldr	r3, [r1, r2]
     afc:	ldr	r3, [r3, #64]	; 0x40
     b00:	str	r0, [fp, #-272]	; 0xfffffef0
     b04:	mov	r0, r3
     b08:	ldr	r1, [fp, #-100]	; 0xffffff9c
     b0c:	bl	0 <coda_type_set_read_type>
     b10:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b14:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b18:	ldr	r3, [r1, r2]
     b1c:	ldr	r3, [r3, #64]	; 0x40
     b20:	str	r0, [fp, #-276]	; 0xfffffeec
     b24:	mov	r0, r3
     b28:	ldr	r2, [fp, #-176]	; 0xffffff50
     b2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b30:	bl	0 <coda_type_set_bit_size>
     b34:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b38:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b3c:	ldr	r3, [r1, r2]
     b40:	ldr	r3, [r3, #64]	; 0x40
     b44:	movw	r1, #0
     b48:	movt	r1, #0
     b4c:	str	r0, [fp, #-280]	; 0xfffffee8
     b50:	mov	r0, r3
     b54:	bl	0 <coda_type_set_description>
     b58:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b5c:	str	r0, [fp, #-284]	; 0xfffffee4
     b60:	mov	r0, r1
     b64:	bl	0 <coda_type_text_new>
     b68:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b70:	ldr	r3, [r1, r2]
     b74:	str	r0, [r3, #72]	; 0x48
     b78:	ldr	r0, [r1, r2]
     b7c:	ldr	r0, [r0, #72]	; 0x48
     b80:	ldr	r2, [fp, #-100]	; 0xffffff9c
     b84:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b88:	bl	0 <coda_type_set_byte_size>
     b8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b90:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b94:	ldr	r3, [r1, r2]
     b98:	ldr	r3, [r3, #72]	; 0x48
     b9c:	movw	r1, #0
     ba0:	movt	r1, #0
     ba4:	str	r0, [fp, #-288]	; 0xfffffee0
     ba8:	mov	r0, r3
     bac:	bl	0 <coda_type_set_description>
     bb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     bb4:	str	r0, [fp, #-292]	; 0xfffffedc
     bb8:	mov	r0, r1
     bbc:	bl	0 <coda_type_text_new>
     bc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     bc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     bc8:	ldr	r3, [r1, r2]
     bcc:	str	r0, [r3, #76]	; 0x4c
     bd0:	ldr	r0, [r1, r2]
     bd4:	ldr	r0, [r0, #76]	; 0x4c
     bd8:	ldr	r2, [fp, #-148]	; 0xffffff6c
     bdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     be0:	bl	0 <coda_type_set_byte_size>
     be4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     be8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     bec:	ldr	r3, [r1, r2]
     bf0:	ldr	r3, [r3, #76]	; 0x4c
     bf4:	movw	r1, #0
     bf8:	movt	r1, #0
     bfc:	str	r0, [fp, #-296]	; 0xfffffed8
     c00:	mov	r0, r3
     c04:	bl	0 <coda_type_set_description>
     c08:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c0c:	str	r0, [fp, #-300]	; 0xfffffed4
     c10:	mov	r0, r1
     c14:	ldr	r1, [fp, #-148]	; 0xffffff6c
     c18:	bl	0 <coda_type_number_new>
     c1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c20:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c24:	ldr	r3, [r1, r2]
     c28:	str	r0, [r3, #80]	; 0x50
     c2c:	ldr	r0, [r1, r2]
     c30:	ldr	r0, [r0, #80]	; 0x50
     c34:	ldr	r1, [fp, #-16]
     c38:	bl	0 <coda_type_number_set_endianness>
     c3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c40:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c44:	ldr	r3, [r1, r2]
     c48:	ldr	r3, [r3, #80]	; 0x50
     c4c:	str	r0, [fp, #-304]	; 0xfffffed0
     c50:	mov	r0, r3
     c54:	ldr	r2, [fp, #-192]	; 0xffffff40
     c58:	ldr	r3, [fp, #-68]	; 0xffffffbc
     c5c:	bl	0 <coda_type_set_bit_size>
     c60:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c68:	ldr	r3, [r1, r2]
     c6c:	ldr	r3, [r3, #80]	; 0x50
     c70:	movw	r1, #0
     c74:	movt	r1, #0
     c78:	str	r0, [fp, #-308]	; 0xfffffecc
     c7c:	mov	r0, r3
     c80:	bl	0 <coda_type_set_description>
     c84:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c88:	str	r0, [fp, #-312]	; 0xfffffec8
     c8c:	mov	r0, r1
     c90:	ldr	r1, [fp, #-148]	; 0xffffff6c
     c94:	bl	0 <coda_type_number_new>
     c98:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ca0:	ldr	r3, [r1, r2]
     ca4:	str	r0, [r3, #84]	; 0x54
     ca8:	ldr	r0, [r1, r2]
     cac:	ldr	r0, [r0, #84]	; 0x54
     cb0:	ldr	r1, [fp, #-16]
     cb4:	bl	0 <coda_type_number_set_endianness>
     cb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     cbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     cc0:	ldr	r3, [r1, r2]
     cc4:	ldr	r3, [r3, #84]	; 0x54
     cc8:	str	r0, [fp, #-316]	; 0xfffffec4
     ccc:	mov	r0, r3
     cd0:	ldr	r2, [fp, #-192]	; 0xffffff40
     cd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
     cd8:	bl	0 <coda_type_set_bit_size>
     cdc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ce0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ce4:	ldr	r3, [r1, r2]
     ce8:	ldr	r3, [r3, #84]	; 0x54
     cec:	movw	r1, #0
     cf0:	movt	r1, #0
     cf4:	str	r0, [fp, #-320]	; 0xfffffec0
     cf8:	mov	r0, r3
     cfc:	bl	0 <coda_type_set_description>
     d00:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d04:	str	r0, [fp, #-324]	; 0xfffffebc
     d08:	mov	r0, r1
     d0c:	bl	0 <coda_type_text_new>
     d10:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d14:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d18:	ldr	r3, [r1, r2]
     d1c:	str	r0, [r3, #260]	; 0x104
     d20:	ldr	r0, [fp, #-68]	; 0xffffffbc
     d24:	str	r0, [fp, #-24]	; 0xffffffe8
     d28:	ldr	r0, [fp, #-80]	; 0xffffffb0
     d2c:	ldr	r1, [fp, #-84]	; 0xffffffac
     d30:	bl	0 <coda_expression_from_string>
     d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d38:	ldr	r2, [fp, #-48]	; 0xffffffd0
     d3c:	str	r0, [fp, #-328]	; 0xfffffeb8
     d40:	mov	r0, r2
     d44:	bl	0 <coda_type_time_new>
     d48:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d50:	ldr	r3, [r1, r2]
     d54:	str	r0, [r3, #264]	; 0x108
     d58:	ldr	r0, [r1, r2]
     d5c:	ldr	r1, [r0, #260]	; 0x104
     d60:	ldr	r0, [r0, #264]	; 0x108
     d64:	bl	0 <coda_type_time_set_base_type>
     d68:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d70:	ldr	r3, [r1, r2]
     d74:	ldr	r3, [r3, #264]	; 0x108
     d78:	movw	r1, #0
     d7c:	movt	r1, #0
     d80:	str	r0, [fp, #-332]	; 0xfffffeb4
     d84:	mov	r0, r3
     d88:	bl	0 <coda_type_set_description>
     d8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d90:	str	r0, [fp, #-336]	; 0xfffffeb0
     d94:	mov	r0, r1
     d98:	bl	0 <coda_type_text_new>
     d9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     da4:	ldr	r3, [r1, r2]
     da8:	str	r0, [r3, #88]	; 0x58
     dac:	ldr	r0, [r1, r2]
     db0:	ldr	r0, [r0, #88]	; 0x58
     db4:	ldr	r2, [fp, #-148]	; 0xffffff6c
     db8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     dbc:	bl	0 <coda_type_set_byte_size>
     dc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     dc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     dc8:	ldr	r3, [r1, r2]
     dcc:	ldr	r3, [r3, #88]	; 0x58
     dd0:	movw	r1, #0
     dd4:	movt	r1, #0
     dd8:	str	r0, [fp, #-340]	; 0xfffffeac
     ddc:	mov	r0, r3
     de0:	bl	0 <coda_type_set_description>
     de4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     de8:	str	r0, [fp, #-344]	; 0xfffffea8
     dec:	mov	r0, r1
     df0:	ldr	r1, [fp, #-148]	; 0xffffff6c
     df4:	bl	0 <coda_type_number_new>
     df8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     dfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e00:	ldr	r3, [r1, r2]
     e04:	str	r0, [r3, #92]	; 0x5c
     e08:	ldr	r0, [r1, r2]
     e0c:	ldr	r0, [r0, #92]	; 0x5c
     e10:	ldr	r1, [fp, #-16]
     e14:	bl	0 <coda_type_number_set_endianness>
     e18:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e20:	ldr	r3, [r1, r2]
     e24:	ldr	r3, [r3, #92]	; 0x5c
     e28:	str	r0, [fp, #-348]	; 0xfffffea4
     e2c:	mov	r0, r3
     e30:	ldr	r2, [fp, #-192]	; 0xffffff40
     e34:	ldr	r3, [fp, #-68]	; 0xffffffbc
     e38:	bl	0 <coda_type_set_bit_size>
     e3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e40:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e44:	ldr	r3, [r1, r2]
     e48:	ldr	r3, [r3, #92]	; 0x5c
     e4c:	movw	r1, #0
     e50:	movt	r1, #0
     e54:	str	r0, [fp, #-352]	; 0xfffffea0
     e58:	mov	r0, r3
     e5c:	bl	0 <coda_type_set_description>
     e60:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e64:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e68:	ldr	r3, [r1, r2]
     e6c:	ldr	r3, [r3, #92]	; 0x5c
     e70:	movw	ip, #0
     e74:	movt	ip, #0
     e78:	str	r0, [fp, #-356]	; 0xfffffe9c
     e7c:	mov	r0, r3
     e80:	mov	r1, ip
     e84:	str	ip, [fp, #-360]	; 0xfffffe98
     e88:	bl	0 <coda_type_number_set_unit>
     e8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e90:	str	r0, [fp, #-364]	; 0xfffffe94
     e94:	mov	r0, r1
     e98:	ldr	r1, [fp, #-148]	; 0xffffff6c
     e9c:	bl	0 <coda_type_number_new>
     ea0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ea4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ea8:	ldr	r3, [r1, r2]
     eac:	str	r0, [r3, #96]	; 0x60
     eb0:	ldr	r0, [r1, r2]
     eb4:	ldr	r0, [r0, #96]	; 0x60
     eb8:	ldr	r1, [fp, #-16]
     ebc:	bl	0 <coda_type_number_set_endianness>
     ec0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ec4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ec8:	ldr	r3, [r1, r2]
     ecc:	ldr	r3, [r3, #96]	; 0x60
     ed0:	str	r0, [fp, #-368]	; 0xfffffe90
     ed4:	mov	r0, r3
     ed8:	ldr	r2, [fp, #-192]	; 0xffffff40
     edc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     ee0:	bl	0 <coda_type_set_bit_size>
     ee4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ee8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     eec:	ldr	r3, [r1, r2]
     ef0:	ldr	r3, [r3, #96]	; 0x60
     ef4:	movw	r1, #0
     ef8:	movt	r1, #0
     efc:	str	r0, [fp, #-372]	; 0xfffffe8c
     f00:	mov	r0, r3
     f04:	bl	0 <coda_type_set_description>
     f08:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f10:	ldr	r3, [r1, r2]
     f14:	ldr	r3, [r3, #96]	; 0x60
     f18:	str	r0, [fp, #-376]	; 0xfffffe88
     f1c:	mov	r0, r3
     f20:	ldr	r1, [fp, #-360]	; 0xfffffe98
     f24:	bl	0 <coda_type_number_set_unit>
     f28:	ldr	r1, [fp, #-48]	; 0xffffffd0
     f2c:	str	r0, [fp, #-380]	; 0xfffffe84
     f30:	mov	r0, r1
     f34:	ldr	r1, [fp, #-148]	; 0xffffff6c
     f38:	bl	0 <coda_type_number_new>
     f3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f40:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f44:	ldr	r3, [r1, r2]
     f48:	str	r0, [r3, #100]	; 0x64
     f4c:	ldr	r0, [r1, r2]
     f50:	ldr	r0, [r0, #100]	; 0x64
     f54:	ldr	r1, [fp, #-16]
     f58:	bl	0 <coda_type_number_set_endianness>
     f5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f60:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f64:	ldr	r3, [r1, r2]
     f68:	ldr	r3, [r3, #100]	; 0x64
     f6c:	str	r0, [fp, #-384]	; 0xfffffe80
     f70:	mov	r0, r3
     f74:	ldr	r2, [fp, #-192]	; 0xffffff40
     f78:	ldr	r3, [fp, #-68]	; 0xffffffbc
     f7c:	bl	0 <coda_type_set_bit_size>
     f80:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f88:	ldr	r3, [r1, r2]
     f8c:	ldr	r3, [r3, #100]	; 0x64
     f90:	movw	r1, #0
     f94:	movt	r1, #0
     f98:	str	r0, [fp, #-388]	; 0xfffffe7c
     f9c:	mov	r0, r3
     fa0:	bl	0 <coda_type_set_description>
     fa4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     fa8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fac:	ldr	r3, [r1, r2]
     fb0:	ldr	r3, [r3, #100]	; 0x64
     fb4:	str	r0, [fp, #-392]	; 0xfffffe78
     fb8:	mov	r0, r3
     fbc:	ldr	r1, [fp, #-360]	; 0xfffffe98
     fc0:	bl	0 <coda_type_number_set_unit>
     fc4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     fc8:	str	r0, [fp, #-396]	; 0xfffffe74
     fcc:	mov	r0, r1
     fd0:	ldr	r1, [fp, #-148]	; 0xffffff6c
     fd4:	bl	0 <coda_type_number_new>
     fd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     fdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fe0:	ldr	r3, [r1, r2]
     fe4:	str	r0, [r3, #104]	; 0x68
     fe8:	ldr	r0, [r1, r2]
     fec:	ldr	r0, [r0, #104]	; 0x68
     ff0:	ldr	r1, [fp, #-16]
     ff4:	bl	0 <coda_type_number_set_endianness>
     ff8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ffc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1000:	ldr	r3, [r1, r2]
    1004:	ldr	r3, [r3, #104]	; 0x68
    1008:	str	r0, [fp, #-400]	; 0xfffffe70
    100c:	mov	r0, r3
    1010:	ldr	r2, [fp, #-192]	; 0xffffff40
    1014:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1018:	bl	0 <coda_type_set_bit_size>
    101c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1020:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1024:	ldr	r3, [r1, r2]
    1028:	ldr	r3, [r3, #104]	; 0x68
    102c:	movw	ip, #0
    1030:	movt	ip, #0
    1034:	str	r0, [fp, #-404]	; 0xfffffe6c
    1038:	mov	r0, r3
    103c:	mov	r1, ip
    1040:	str	ip, [fp, #-408]	; 0xfffffe68
    1044:	bl	0 <coda_type_set_description>
    1048:	ldr	r1, [fp, #-60]	; 0xffffffc4
    104c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1050:	ldr	r3, [r1, r2]
    1054:	ldr	r3, [r3, #104]	; 0x68
    1058:	movw	r1, #0
    105c:	movt	r1, #0
    1060:	str	r0, [fp, #-412]	; 0xfffffe64
    1064:	mov	r0, r3
    1068:	bl	0 <coda_type_number_set_unit>
    106c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1070:	str	r0, [fp, #-416]	; 0xfffffe60
    1074:	mov	r0, r1
    1078:	ldr	r1, [fp, #-100]	; 0xffffff9c
    107c:	bl	0 <coda_type_number_new>
    1080:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1084:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1088:	ldr	r3, [r1, r2]
    108c:	str	r0, [r3, #108]	; 0x6c
    1090:	ldr	r0, [r1, r2]
    1094:	ldr	r0, [r0, #108]	; 0x6c
    1098:	ldr	r1, [fp, #-16]
    109c:	bl	0 <coda_type_number_set_endianness>
    10a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10a8:	ldr	r3, [r1, r2]
    10ac:	ldr	r3, [r3, #108]	; 0x6c
    10b0:	str	r0, [fp, #-420]	; 0xfffffe5c
    10b4:	mov	r0, r3
    10b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    10bc:	bl	0 <coda_type_set_read_type>
    10c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10c8:	ldr	r3, [r1, r2]
    10cc:	ldr	r3, [r3, #108]	; 0x6c
    10d0:	str	r0, [fp, #-424]	; 0xfffffe58
    10d4:	mov	r0, r3
    10d8:	ldr	r2, [fp, #-252]	; 0xffffff04
    10dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    10e0:	bl	0 <coda_type_set_bit_size>
    10e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10ec:	ldr	r3, [r1, r2]
    10f0:	ldr	r3, [r3, #108]	; 0x6c
    10f4:	movw	r1, #0
    10f8:	movt	r1, #0
    10fc:	str	r0, [fp, #-428]	; 0xfffffe54
    1100:	mov	r0, r3
    1104:	bl	0 <coda_type_set_description>
    1108:	ldr	r1, [fp, #-48]	; 0xffffffd0
    110c:	str	r0, [fp, #-432]	; 0xfffffe50
    1110:	mov	r0, r1
    1114:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1118:	bl	0 <coda_type_number_new>
    111c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1120:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1124:	ldr	r3, [r1, r2]
    1128:	str	r0, [r3, #112]	; 0x70
    112c:	ldr	r0, [r1, r2]
    1130:	ldr	r0, [r0, #112]	; 0x70
    1134:	ldr	r1, [fp, #-16]
    1138:	bl	0 <coda_type_number_set_endianness>
    113c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1140:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1144:	ldr	r3, [r1, r2]
    1148:	ldr	r3, [r3, #112]	; 0x70
    114c:	str	r0, [fp, #-436]	; 0xfffffe4c
    1150:	mov	r0, r3
    1154:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1158:	bl	0 <coda_type_set_read_type>
    115c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1160:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1164:	ldr	r3, [r1, r2]
    1168:	ldr	r3, [r3, #112]	; 0x70
    116c:	str	r0, [fp, #-440]	; 0xfffffe48
    1170:	mov	r0, r3
    1174:	ldr	r2, [fp, #-252]	; 0xffffff04
    1178:	ldr	r3, [fp, #-68]	; 0xffffffbc
    117c:	bl	0 <coda_type_set_bit_size>
    1180:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1184:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1188:	ldr	r3, [r1, r2]
    118c:	ldr	r3, [r3, #112]	; 0x70
    1190:	movw	r1, #0
    1194:	movt	r1, #0
    1198:	str	r0, [fp, #-444]	; 0xfffffe44
    119c:	mov	r0, r3
    11a0:	bl	0 <coda_type_set_description>
    11a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    11a8:	str	r0, [fp, #-448]	; 0xfffffe40
    11ac:	mov	r0, r1
    11b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    11b4:	bl	0 <coda_type_number_new>
    11b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11c0:	ldr	r3, [r1, r2]
    11c4:	str	r0, [r3, #116]	; 0x74
    11c8:	ldr	r0, [r1, r2]
    11cc:	ldr	r0, [r0, #116]	; 0x74
    11d0:	ldr	r1, [fp, #-16]
    11d4:	bl	0 <coda_type_number_set_endianness>
    11d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11e0:	ldr	r3, [r1, r2]
    11e4:	ldr	r3, [r3, #116]	; 0x74
    11e8:	str	r0, [fp, #-452]	; 0xfffffe3c
    11ec:	mov	r0, r3
    11f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    11f4:	bl	0 <coda_type_set_read_type>
    11f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1200:	ldr	r3, [r1, r2]
    1204:	ldr	r3, [r3, #116]	; 0x74
    1208:	str	r0, [fp, #-456]	; 0xfffffe38
    120c:	mov	r0, r3
    1210:	ldr	r2, [fp, #-252]	; 0xffffff04
    1214:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1218:	bl	0 <coda_type_set_bit_size>
    121c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1220:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1224:	ldr	r3, [r1, r2]
    1228:	ldr	r3, [r3, #116]	; 0x74
    122c:	movw	r1, #0
    1230:	movt	r1, #0
    1234:	str	r0, [fp, #-460]	; 0xfffffe34
    1238:	mov	r0, r3
    123c:	bl	0 <coda_type_set_description>
    1240:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1244:	str	r0, [fp, #-464]	; 0xfffffe30
    1248:	mov	r0, r1
    124c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1250:	bl	0 <coda_type_number_new>
    1254:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1258:	ldr	r2, [fp, #-56]	; 0xffffffc8
    125c:	ldr	r3, [r1, r2]
    1260:	str	r0, [r3, #120]	; 0x78
    1264:	ldr	r0, [r1, r2]
    1268:	ldr	r0, [r0, #120]	; 0x78
    126c:	ldr	r1, [fp, #-16]
    1270:	bl	0 <coda_type_number_set_endianness>
    1274:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1278:	ldr	r2, [fp, #-56]	; 0xffffffc8
    127c:	ldr	r3, [r1, r2]
    1280:	ldr	r3, [r3, #120]	; 0x78
    1284:	str	r0, [fp, #-468]	; 0xfffffe2c
    1288:	mov	r0, r3
    128c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1290:	bl	0 <coda_type_set_read_type>
    1294:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1298:	ldr	r2, [fp, #-56]	; 0xffffffc8
    129c:	ldr	r3, [r1, r2]
    12a0:	ldr	r3, [r3, #120]	; 0x78
    12a4:	str	r0, [fp, #-472]	; 0xfffffe28
    12a8:	mov	r0, r3
    12ac:	ldr	r2, [fp, #-176]	; 0xffffff50
    12b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    12b4:	bl	0 <coda_type_set_bit_size>
    12b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12c0:	ldr	r3, [r1, r2]
    12c4:	ldr	r3, [r3, #120]	; 0x78
    12c8:	movw	r1, #0
    12cc:	movt	r1, #0
    12d0:	str	r0, [fp, #-476]	; 0xfffffe24
    12d4:	mov	r0, r3
    12d8:	bl	0 <coda_type_set_description>
    12dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    12e0:	str	r0, [fp, #-480]	; 0xfffffe20
    12e4:	mov	r0, r1
    12e8:	bl	0 <coda_type_text_new>
    12ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12f4:	ldr	r3, [r1, r2]
    12f8:	str	r0, [r3, #124]	; 0x7c
    12fc:	ldr	r0, [r1, r2]
    1300:	ldr	r0, [r0, #124]	; 0x7c
    1304:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1308:	ldr	r3, [fp, #-68]	; 0xffffffbc
    130c:	bl	0 <coda_type_set_byte_size>
    1310:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1314:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1318:	ldr	r3, [r1, r2]
    131c:	ldr	r3, [r3, #124]	; 0x7c
    1320:	movw	r1, #0
    1324:	movt	r1, #0
    1328:	str	r0, [fp, #-484]	; 0xfffffe1c
    132c:	mov	r0, r3
    1330:	bl	0 <coda_type_set_description>
    1334:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1338:	str	r0, [fp, #-488]	; 0xfffffe18
    133c:	mov	r0, r1
    1340:	bl	0 <coda_type_text_new>
    1344:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1348:	ldr	r2, [fp, #-56]	; 0xffffffc8
    134c:	ldr	r3, [r1, r2]
    1350:	str	r0, [r3, #128]	; 0x80
    1354:	ldr	r0, [r1, r2]
    1358:	ldr	r0, [r0, #128]	; 0x80
    135c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1360:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1364:	bl	0 <coda_type_set_byte_size>
    1368:	ldr	r1, [fp, #-60]	; 0xffffffc4
    136c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1370:	ldr	r3, [r1, r2]
    1374:	ldr	r3, [r3, #128]	; 0x80
    1378:	movw	r1, #0
    137c:	movt	r1, #0
    1380:	str	r0, [fp, #-492]	; 0xfffffe14
    1384:	mov	r0, r3
    1388:	bl	0 <coda_type_set_description>
    138c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1390:	str	r0, [fp, #-496]	; 0xfffffe10
    1394:	mov	r0, r1
    1398:	bl	0 <coda_type_text_new>
    139c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    13a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13a4:	ldr	r3, [r1, r2]
    13a8:	str	r0, [r3, #132]	; 0x84
    13ac:	ldr	r0, [r1, r2]
    13b0:	ldr	r0, [r0, #132]	; 0x84
    13b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    13b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    13bc:	bl	0 <coda_type_set_byte_size>
    13c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    13c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13c8:	ldr	r3, [r1, r2]
    13cc:	ldr	r3, [r3, #132]	; 0x84
    13d0:	movw	r1, #0
    13d4:	movt	r1, #0
    13d8:	str	r0, [fp, #-500]	; 0xfffffe0c
    13dc:	mov	r0, r3
    13e0:	bl	0 <coda_type_set_description>
    13e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    13e8:	str	r0, [fp, #-504]	; 0xfffffe08
    13ec:	mov	r0, r1
    13f0:	bl	0 <coda_type_text_new>
    13f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    13f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13fc:	ldr	r3, [r1, r2]
    1400:	str	r0, [r3, #136]	; 0x88
    1404:	ldr	r0, [r1, r2]
    1408:	ldr	r0, [r0, #136]	; 0x88
    140c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1410:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1414:	bl	0 <coda_type_set_byte_size>
    1418:	ldr	r1, [fp, #-60]	; 0xffffffc4
    141c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1420:	ldr	r3, [r1, r2]
    1424:	ldr	r3, [r3, #136]	; 0x88
    1428:	movw	r1, #0
    142c:	movt	r1, #0
    1430:	str	r0, [fp, #-508]	; 0xfffffe04
    1434:	mov	r0, r3
    1438:	bl	0 <coda_type_set_description>
    143c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1440:	str	r0, [fp, #-512]	; 0xfffffe00
    1444:	mov	r0, r1
    1448:	ldr	r1, [fp, #-100]	; 0xffffff9c
    144c:	bl	0 <coda_type_number_new>
    1450:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1454:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1458:	ldr	r3, [r1, r2]
    145c:	str	r0, [r3, #144]	; 0x90
    1460:	ldr	r0, [r1, r2]
    1464:	ldr	r0, [r0, #144]	; 0x90
    1468:	ldr	r1, [fp, #-16]
    146c:	bl	0 <coda_type_number_set_endianness>
    1470:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1474:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1478:	ldr	r3, [r1, r2]
    147c:	ldr	r3, [r3, #144]	; 0x90
    1480:	str	r0, [fp, #-516]	; 0xfffffdfc
    1484:	mov	r0, r3
    1488:	ldr	r1, [fp, #-100]	; 0xffffff9c
    148c:	bl	0 <coda_type_set_read_type>
    1490:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1494:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1498:	ldr	r3, [r1, r2]
    149c:	ldr	r3, [r3, #144]	; 0x90
    14a0:	str	r0, [fp, #-520]	; 0xfffffdf8
    14a4:	mov	r0, r3
    14a8:	ldr	r2, [fp, #-176]	; 0xffffff50
    14ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    14b0:	bl	0 <coda_type_set_bit_size>
    14b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    14b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14bc:	ldr	r3, [r1, r2]
    14c0:	ldr	r3, [r3, #144]	; 0x90
    14c4:	movw	r1, #0
    14c8:	movt	r1, #0
    14cc:	str	r0, [fp, #-524]	; 0xfffffdf4
    14d0:	mov	r0, r3
    14d4:	bl	0 <coda_type_set_description>
    14d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    14dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14e0:	ldr	r3, [r1, r2]
    14e4:	ldr	r3, [r3, #144]	; 0x90
    14e8:	movw	ip, #0
    14ec:	movt	ip, #0
    14f0:	str	r0, [fp, #-528]	; 0xfffffdf0
    14f4:	mov	r0, r3
    14f8:	mov	r1, ip
    14fc:	str	ip, [fp, #-532]	; 0xfffffdec
    1500:	bl	0 <coda_type_number_set_unit>
    1504:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1508:	str	r0, [fp, #-536]	; 0xfffffde8
    150c:	mov	r0, r1
    1510:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1514:	bl	0 <coda_type_number_new>
    1518:	ldr	r1, [fp, #-60]	; 0xffffffc4
    151c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1520:	ldr	r3, [r1, r2]
    1524:	str	r0, [r3, #148]	; 0x94
    1528:	ldr	r0, [r1, r2]
    152c:	ldr	r0, [r0, #148]	; 0x94
    1530:	ldr	r1, [fp, #-16]
    1534:	bl	0 <coda_type_number_set_endianness>
    1538:	ldr	r1, [fp, #-60]	; 0xffffffc4
    153c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1540:	ldr	r3, [r1, r2]
    1544:	ldr	r3, [r3, #148]	; 0x94
    1548:	str	r0, [fp, #-540]	; 0xfffffde4
    154c:	mov	r0, r3
    1550:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1554:	bl	0 <coda_type_set_read_type>
    1558:	ldr	r1, [fp, #-60]	; 0xffffffc4
    155c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1560:	ldr	r3, [r1, r2]
    1564:	ldr	r3, [r3, #148]	; 0x94
    1568:	str	r0, [fp, #-544]	; 0xfffffde0
    156c:	mov	r0, r3
    1570:	ldr	r2, [fp, #-176]	; 0xffffff50
    1574:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1578:	bl	0 <coda_type_set_bit_size>
    157c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1580:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1584:	ldr	r3, [r1, r2]
    1588:	ldr	r3, [r3, #148]	; 0x94
    158c:	movw	r1, #0
    1590:	movt	r1, #0
    1594:	str	r0, [fp, #-548]	; 0xfffffddc
    1598:	mov	r0, r3
    159c:	bl	0 <coda_type_set_description>
    15a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    15a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15a8:	ldr	r3, [r1, r2]
    15ac:	ldr	r3, [r3, #148]	; 0x94
    15b0:	str	r0, [fp, #-552]	; 0xfffffdd8
    15b4:	mov	r0, r3
    15b8:	ldr	r1, [fp, #-532]	; 0xfffffdec
    15bc:	bl	0 <coda_type_number_set_unit>
    15c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15c4:	str	r0, [fp, #-556]	; 0xfffffdd4
    15c8:	mov	r0, r1
    15cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    15d0:	bl	0 <coda_type_number_new>
    15d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    15d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15dc:	ldr	r3, [r1, r2]
    15e0:	str	r0, [r3, #152]	; 0x98
    15e4:	ldr	r0, [r1, r2]
    15e8:	ldr	r0, [r0, #152]	; 0x98
    15ec:	ldr	r1, [fp, #-16]
    15f0:	bl	0 <coda_type_number_set_endianness>
    15f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    15f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15fc:	ldr	r3, [r1, r2]
    1600:	ldr	r3, [r3, #152]	; 0x98
    1604:	str	r0, [fp, #-560]	; 0xfffffdd0
    1608:	mov	r0, r3
    160c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1610:	bl	0 <coda_type_set_read_type>
    1614:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1618:	ldr	r2, [fp, #-56]	; 0xffffffc8
    161c:	ldr	r3, [r1, r2]
    1620:	ldr	r3, [r3, #152]	; 0x98
    1624:	str	r0, [fp, #-564]	; 0xfffffdcc
    1628:	mov	r0, r3
    162c:	ldr	r2, [fp, #-176]	; 0xffffff50
    1630:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1634:	bl	0 <coda_type_set_bit_size>
    1638:	ldr	r1, [fp, #-60]	; 0xffffffc4
    163c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1640:	ldr	r3, [r1, r2]
    1644:	ldr	r3, [r3, #152]	; 0x98
    1648:	movw	r1, #0
    164c:	movt	r1, #0
    1650:	str	r0, [fp, #-568]	; 0xfffffdc8
    1654:	mov	r0, r3
    1658:	bl	0 <coda_type_set_description>
    165c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1660:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1664:	ldr	r3, [r1, r2]
    1668:	ldr	r3, [r3, #152]	; 0x98
    166c:	str	r0, [fp, #-572]	; 0xfffffdc4
    1670:	mov	r0, r3
    1674:	ldr	r1, [fp, #-532]	; 0xfffffdec
    1678:	bl	0 <coda_type_number_set_unit>
    167c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1680:	str	r0, [fp, #-576]	; 0xfffffdc0
    1684:	mov	r0, r1
    1688:	ldr	r1, [fp, #-100]	; 0xffffff9c
    168c:	bl	0 <coda_type_number_new>
    1690:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1694:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1698:	ldr	r3, [r1, r2]
    169c:	str	r0, [r3, #156]	; 0x9c
    16a0:	ldr	r0, [r1, r2]
    16a4:	ldr	r0, [r0, #156]	; 0x9c
    16a8:	ldr	r1, [fp, #-16]
    16ac:	bl	0 <coda_type_number_set_endianness>
    16b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16b8:	ldr	r3, [r1, r2]
    16bc:	ldr	r3, [r3, #156]	; 0x9c
    16c0:	str	r0, [fp, #-580]	; 0xfffffdbc
    16c4:	mov	r0, r3
    16c8:	ldr	r1, [fp, #-108]	; 0xffffff94
    16cc:	bl	0 <coda_type_set_read_type>
    16d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16d8:	ldr	r3, [r1, r2]
    16dc:	ldr	r3, [r3, #156]	; 0x9c
    16e0:	str	r0, [fp, #-584]	; 0xfffffdb8
    16e4:	mov	r0, r3
    16e8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    16ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    16f0:	bl	0 <coda_type_set_bit_size>
    16f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16fc:	ldr	r3, [r1, r2]
    1700:	ldr	r3, [r3, #156]	; 0x9c
    1704:	movw	r1, #0
    1708:	movt	r1, #0
    170c:	str	r0, [fp, #-588]	; 0xfffffdb4
    1710:	mov	r0, r3
    1714:	bl	0 <coda_type_set_description>
    1718:	ldr	r1, [fp, #-60]	; 0xffffffc4
    171c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1720:	ldr	r3, [r1, r2]
    1724:	ldr	r3, [r3, #156]	; 0x9c
    1728:	movw	r1, #0
    172c:	movt	r1, #0
    1730:	str	r0, [fp, #-592]	; 0xfffffdb0
    1734:	mov	r0, r3
    1738:	bl	0 <coda_type_number_set_unit>
    173c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1740:	str	r0, [fp, #-596]	; 0xfffffdac
    1744:	mov	r0, r1
    1748:	ldr	r1, [fp, #-100]	; 0xffffff9c
    174c:	bl	0 <coda_type_number_new>
    1750:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1754:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1758:	ldr	r3, [r1, r2]
    175c:	str	r0, [r3, #160]	; 0xa0
    1760:	ldr	r0, [r1, r2]
    1764:	ldr	r0, [r0, #160]	; 0xa0
    1768:	ldr	r1, [fp, #-16]
    176c:	bl	0 <coda_type_number_set_endianness>
    1770:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1774:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1778:	ldr	r3, [r1, r2]
    177c:	ldr	r3, [r3, #160]	; 0xa0
    1780:	str	r0, [fp, #-600]	; 0xfffffda8
    1784:	mov	r0, r3
    1788:	ldr	r1, [fp, #-108]	; 0xffffff94
    178c:	bl	0 <coda_type_set_read_type>
    1790:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1794:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1798:	ldr	r3, [r1, r2]
    179c:	ldr	r3, [r3, #160]	; 0xa0
    17a0:	str	r0, [fp, #-604]	; 0xfffffda4
    17a4:	mov	r0, r3
    17a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
    17ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    17b0:	bl	0 <coda_type_set_bit_size>
    17b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    17b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17bc:	ldr	r3, [r1, r2]
    17c0:	ldr	r3, [r3, #160]	; 0xa0
    17c4:	movw	ip, #0
    17c8:	movt	ip, #0
    17cc:	str	r0, [fp, #-608]	; 0xfffffda0
    17d0:	mov	r0, r3
    17d4:	mov	r1, ip
    17d8:	str	ip, [fp, #-612]	; 0xfffffd9c
    17dc:	bl	0 <coda_type_set_description>
    17e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17e4:	str	r0, [fp, #-616]	; 0xfffffd98
    17e8:	mov	r0, r1
    17ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
    17f0:	bl	0 <coda_type_number_new>
    17f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    17f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17fc:	ldr	r3, [r1, r2]
    1800:	str	r0, [r3, #164]	; 0xa4
    1804:	ldr	r0, [r1, r2]
    1808:	ldr	r0, [r0, #164]	; 0xa4
    180c:	ldr	r1, [fp, #-16]
    1810:	bl	0 <coda_type_number_set_endianness>
    1814:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1818:	ldr	r2, [fp, #-56]	; 0xffffffc8
    181c:	ldr	r3, [r1, r2]
    1820:	ldr	r3, [r3, #164]	; 0xa4
    1824:	str	r0, [fp, #-620]	; 0xfffffd94
    1828:	mov	r0, r3
    182c:	ldr	r1, [fp, #-108]	; 0xffffff94
    1830:	bl	0 <coda_type_set_read_type>
    1834:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1838:	ldr	r2, [fp, #-56]	; 0xffffffc8
    183c:	ldr	r3, [r1, r2]
    1840:	ldr	r3, [r3, #164]	; 0xa4
    1844:	str	r0, [fp, #-624]	; 0xfffffd90
    1848:	mov	r0, r3
    184c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1850:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1854:	bl	0 <coda_type_set_bit_size>
    1858:	ldr	r1, [fp, #-60]	; 0xffffffc4
    185c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1860:	ldr	r3, [r1, r2]
    1864:	ldr	r3, [r3, #164]	; 0xa4
    1868:	movw	ip, #0
    186c:	movt	ip, #0
    1870:	str	r0, [fp, #-628]	; 0xfffffd8c
    1874:	mov	r0, r3
    1878:	mov	r1, ip
    187c:	str	ip, [fp, #-632]	; 0xfffffd88
    1880:	bl	0 <coda_type_set_description>
    1884:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1888:	str	r0, [fp, #-636]	; 0xfffffd84
    188c:	mov	r0, r1
    1890:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1894:	bl	0 <coda_type_number_new>
    1898:	ldr	r1, [fp, #-60]	; 0xffffffc4
    189c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18a0:	ldr	r3, [r1, r2]
    18a4:	str	r0, [r3, #168]	; 0xa8
    18a8:	ldr	r0, [r1, r2]
    18ac:	ldr	r0, [r0, #168]	; 0xa8
    18b0:	ldr	r1, [fp, #-16]
    18b4:	bl	0 <coda_type_number_set_endianness>
    18b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    18bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18c0:	ldr	r3, [r1, r2]
    18c4:	ldr	r3, [r3, #168]	; 0xa8
    18c8:	str	r0, [fp, #-640]	; 0xfffffd80
    18cc:	mov	r0, r3
    18d0:	ldr	r1, [fp, #-108]	; 0xffffff94
    18d4:	bl	0 <coda_type_set_read_type>
    18d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    18dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18e0:	ldr	r3, [r1, r2]
    18e4:	ldr	r3, [r3, #168]	; 0xa8
    18e8:	str	r0, [fp, #-644]	; 0xfffffd7c
    18ec:	mov	r0, r3
    18f0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    18f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    18f8:	bl	0 <coda_type_set_bit_size>
    18fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1900:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1904:	ldr	r3, [r1, r2]
    1908:	ldr	r3, [r3, #168]	; 0xa8
    190c:	movw	ip, #0
    1910:	movt	ip, #0
    1914:	str	r0, [fp, #-648]	; 0xfffffd78
    1918:	mov	r0, r3
    191c:	mov	r1, ip
    1920:	str	ip, [fp, #-652]	; 0xfffffd74
    1924:	bl	0 <coda_type_set_description>
    1928:	ldr	r1, [fp, #-48]	; 0xffffffd0
    192c:	str	r0, [fp, #-656]	; 0xfffffd70
    1930:	mov	r0, r1
    1934:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1938:	bl	0 <coda_type_number_new>
    193c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1940:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1944:	ldr	r3, [r1, r2]
    1948:	str	r0, [r3, #172]	; 0xac
    194c:	ldr	r0, [r1, r2]
    1950:	ldr	r0, [r0, #172]	; 0xac
    1954:	ldr	r1, [fp, #-16]
    1958:	bl	0 <coda_type_number_set_endianness>
    195c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1960:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1964:	ldr	r3, [r1, r2]
    1968:	ldr	r3, [r3, #172]	; 0xac
    196c:	str	r0, [fp, #-660]	; 0xfffffd6c
    1970:	mov	r0, r3
    1974:	ldr	r1, [fp, #-108]	; 0xffffff94
    1978:	bl	0 <coda_type_set_read_type>
    197c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1980:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1984:	ldr	r3, [r1, r2]
    1988:	ldr	r3, [r3, #172]	; 0xac
    198c:	str	r0, [fp, #-664]	; 0xfffffd68
    1990:	mov	r0, r3
    1994:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1998:	ldr	r3, [fp, #-68]	; 0xffffffbc
    199c:	bl	0 <coda_type_set_bit_size>
    19a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    19a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19a8:	ldr	r3, [r1, r2]
    19ac:	ldr	r3, [r3, #172]	; 0xac
    19b0:	movw	ip, #0
    19b4:	movt	ip, #0
    19b8:	str	r0, [fp, #-668]	; 0xfffffd64
    19bc:	mov	r0, r3
    19c0:	mov	r1, ip
    19c4:	str	ip, [fp, #-672]	; 0xfffffd60
    19c8:	bl	0 <coda_type_set_description>
    19cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    19d0:	str	r0, [fp, #-676]	; 0xfffffd5c
    19d4:	mov	r0, r1
    19d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    19dc:	bl	0 <coda_type_number_new>
    19e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    19e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19e8:	ldr	r3, [r1, r2]
    19ec:	str	r0, [r3, #176]	; 0xb0
    19f0:	ldr	r0, [r1, r2]
    19f4:	ldr	r0, [r0, #176]	; 0xb0
    19f8:	ldr	r1, [fp, #-16]
    19fc:	bl	0 <coda_type_number_set_endianness>
    1a00:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a08:	ldr	r3, [r1, r2]
    1a0c:	ldr	r3, [r3, #176]	; 0xb0
    1a10:	str	r0, [fp, #-680]	; 0xfffffd58
    1a14:	mov	r0, r3
    1a18:	ldr	r1, [fp, #-108]	; 0xffffff94
    1a1c:	bl	0 <coda_type_set_read_type>
    1a20:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a28:	ldr	r3, [r1, r2]
    1a2c:	ldr	r3, [r3, #176]	; 0xb0
    1a30:	str	r0, [fp, #-684]	; 0xfffffd54
    1a34:	mov	r0, r3
    1a38:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1a3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1a40:	bl	0 <coda_type_set_bit_size>
    1a44:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a4c:	ldr	r3, [r1, r2]
    1a50:	ldr	r3, [r3, #176]	; 0xb0
    1a54:	movw	ip, #0
    1a58:	movt	ip, #0
    1a5c:	str	r0, [fp, #-688]	; 0xfffffd50
    1a60:	mov	r0, r3
    1a64:	mov	r1, ip
    1a68:	str	ip, [fp, #-692]	; 0xfffffd4c
    1a6c:	bl	0 <coda_type_set_description>
    1a70:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1a74:	str	r0, [fp, #-696]	; 0xfffffd48
    1a78:	mov	r0, r1
    1a7c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1a80:	bl	0 <coda_type_number_new>
    1a84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a8c:	ldr	r3, [r1, r2]
    1a90:	str	r0, [r3, #180]	; 0xb4
    1a94:	ldr	r0, [r1, r2]
    1a98:	ldr	r0, [r0, #180]	; 0xb4
    1a9c:	ldr	r1, [fp, #-16]
    1aa0:	bl	0 <coda_type_number_set_endianness>
    1aa4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1aa8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1aac:	ldr	r3, [r1, r2]
    1ab0:	ldr	r3, [r3, #180]	; 0xb4
    1ab4:	str	r0, [fp, #-700]	; 0xfffffd44
    1ab8:	mov	r0, r3
    1abc:	ldr	r1, [fp, #-108]	; 0xffffff94
    1ac0:	bl	0 <coda_type_set_read_type>
    1ac4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1acc:	ldr	r3, [r1, r2]
    1ad0:	ldr	r3, [r3, #180]	; 0xb4
    1ad4:	str	r0, [fp, #-704]	; 0xfffffd40
    1ad8:	mov	r0, r3
    1adc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1ae0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ae4:	bl	0 <coda_type_set_bit_size>
    1ae8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1aec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1af0:	ldr	r3, [r1, r2]
    1af4:	ldr	r3, [r3, #180]	; 0xb4
    1af8:	movw	ip, #0
    1afc:	movt	ip, #0
    1b00:	str	r0, [fp, #-708]	; 0xfffffd3c
    1b04:	mov	r0, r3
    1b08:	mov	r1, ip
    1b0c:	str	ip, [fp, #-712]	; 0xfffffd38
    1b10:	bl	0 <coda_type_set_description>
    1b14:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1b18:	str	r0, [fp, #-716]	; 0xfffffd34
    1b1c:	mov	r0, r1
    1b20:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1b24:	bl	0 <coda_type_number_new>
    1b28:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b30:	ldr	r3, [r1, r2]
    1b34:	str	r0, [r3, #184]	; 0xb8
    1b38:	ldr	r0, [r1, r2]
    1b3c:	ldr	r0, [r0, #184]	; 0xb8
    1b40:	ldr	r1, [fp, #-16]
    1b44:	bl	0 <coda_type_number_set_endianness>
    1b48:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b50:	ldr	r3, [r1, r2]
    1b54:	ldr	r3, [r3, #184]	; 0xb8
    1b58:	str	r0, [fp, #-720]	; 0xfffffd30
    1b5c:	mov	r0, r3
    1b60:	ldr	r2, [fp, #-192]	; 0xffffff40
    1b64:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1b68:	bl	0 <coda_type_set_bit_size>
    1b6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b74:	ldr	r3, [r1, r2]
    1b78:	ldr	r3, [r3, #184]	; 0xb8
    1b7c:	movw	r1, #0
    1b80:	movt	r1, #0
    1b84:	str	r0, [fp, #-724]	; 0xfffffd2c
    1b88:	mov	r0, r3
    1b8c:	bl	0 <coda_type_set_description>
    1b90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b98:	ldr	r3, [r1, r2]
    1b9c:	ldr	r3, [r3, #184]	; 0xb8
    1ba0:	movw	ip, #0
    1ba4:	movt	ip, #0
    1ba8:	str	r0, [fp, #-728]	; 0xfffffd28
    1bac:	mov	r0, r3
    1bb0:	mov	r1, ip
    1bb4:	str	ip, [fp, #-732]	; 0xfffffd24
    1bb8:	bl	0 <coda_type_number_set_unit>
    1bbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1bc0:	str	r0, [fp, #-736]	; 0xfffffd20
    1bc4:	mov	r0, r1
    1bc8:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1bcc:	bl	0 <coda_type_number_new>
    1bd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1bd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bd8:	ldr	r3, [r1, r2]
    1bdc:	str	r0, [r3, #188]	; 0xbc
    1be0:	ldr	r0, [r1, r2]
    1be4:	ldr	r0, [r0, #188]	; 0xbc
    1be8:	ldr	r1, [fp, #-16]
    1bec:	bl	0 <coda_type_number_set_endianness>
    1bf0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1bf4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bf8:	ldr	r3, [r1, r2]
    1bfc:	ldr	r3, [r3, #188]	; 0xbc
    1c00:	str	r0, [fp, #-740]	; 0xfffffd1c
    1c04:	mov	r0, r3
    1c08:	ldr	r2, [fp, #-192]	; 0xffffff40
    1c0c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1c10:	bl	0 <coda_type_set_bit_size>
    1c14:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c18:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c1c:	ldr	r3, [r1, r2]
    1c20:	ldr	r3, [r3, #188]	; 0xbc
    1c24:	movw	r1, #0
    1c28:	movt	r1, #0
    1c2c:	str	r0, [fp, #-744]	; 0xfffffd18
    1c30:	mov	r0, r3
    1c34:	bl	0 <coda_type_set_description>
    1c38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c40:	ldr	r3, [r1, r2]
    1c44:	ldr	r3, [r3, #188]	; 0xbc
    1c48:	str	r0, [fp, #-748]	; 0xfffffd14
    1c4c:	mov	r0, r3
    1c50:	ldr	r1, [fp, #-732]	; 0xfffffd24
    1c54:	bl	0 <coda_type_number_set_unit>
    1c58:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1c5c:	str	r0, [fp, #-752]	; 0xfffffd10
    1c60:	mov	r0, r1
    1c64:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1c68:	bl	0 <coda_type_number_new>
    1c6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c74:	ldr	r3, [r1, r2]
    1c78:	str	r0, [r3, #192]	; 0xc0
    1c7c:	ldr	r0, [r1, r2]
    1c80:	ldr	r0, [r0, #192]	; 0xc0
    1c84:	ldr	r1, [fp, #-16]
    1c88:	bl	0 <coda_type_number_set_endianness>
    1c8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c94:	ldr	r3, [r1, r2]
    1c98:	ldr	r3, [r3, #192]	; 0xc0
    1c9c:	str	r0, [fp, #-756]	; 0xfffffd0c
    1ca0:	mov	r0, r3
    1ca4:	ldr	r2, [fp, #-192]	; 0xffffff40
    1ca8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1cac:	bl	0 <coda_type_set_bit_size>
    1cb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1cb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cb8:	ldr	r3, [r1, r2]
    1cbc:	ldr	r3, [r3, #192]	; 0xc0
    1cc0:	movw	r1, #0
    1cc4:	movt	r1, #0
    1cc8:	str	r0, [fp, #-760]	; 0xfffffd08
    1ccc:	mov	r0, r3
    1cd0:	bl	0 <coda_type_set_description>
    1cd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1cd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cdc:	ldr	r3, [r1, r2]
    1ce0:	ldr	r3, [r3, #192]	; 0xc0
    1ce4:	str	r0, [fp, #-764]	; 0xfffffd04
    1ce8:	mov	r0, r3
    1cec:	ldr	r1, [fp, #-732]	; 0xfffffd24
    1cf0:	bl	0 <coda_type_number_set_unit>
    1cf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1cf8:	str	r0, [fp, #-768]	; 0xfffffd00
    1cfc:	mov	r0, r1
    1d00:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1d04:	bl	0 <coda_type_number_new>
    1d08:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d10:	ldr	r3, [r1, r2]
    1d14:	str	r0, [r3, #196]	; 0xc4
    1d18:	ldr	r0, [r1, r2]
    1d1c:	ldr	r0, [r0, #196]	; 0xc4
    1d20:	ldr	r1, [fp, #-16]
    1d24:	bl	0 <coda_type_number_set_endianness>
    1d28:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d30:	ldr	r3, [r1, r2]
    1d34:	ldr	r3, [r3, #196]	; 0xc4
    1d38:	str	r0, [fp, #-772]	; 0xfffffcfc
    1d3c:	mov	r0, r3
    1d40:	ldr	r2, [fp, #-192]	; 0xffffff40
    1d44:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1d48:	bl	0 <coda_type_set_bit_size>
    1d4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d54:	ldr	r3, [r1, r2]
    1d58:	ldr	r3, [r3, #196]	; 0xc4
    1d5c:	movw	r1, #0
    1d60:	movt	r1, #0
    1d64:	str	r0, [fp, #-776]	; 0xfffffcf8
    1d68:	mov	r0, r3
    1d6c:	bl	0 <coda_type_set_description>
    1d70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d78:	ldr	r3, [r1, r2]
    1d7c:	ldr	r3, [r3, #196]	; 0xc4
    1d80:	movw	r1, #0
    1d84:	movt	r1, #0
    1d88:	str	r0, [fp, #-780]	; 0xfffffcf4
    1d8c:	mov	r0, r3
    1d90:	bl	0 <coda_type_number_set_unit>
    1d94:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1d98:	str	r0, [fp, #-784]	; 0xfffffcf0
    1d9c:	mov	r0, r1
    1da0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1da4:	bl	0 <coda_type_number_new>
    1da8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1dac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1db0:	ldr	r3, [r1, r2]
    1db4:	str	r0, [r3, #200]	; 0xc8
    1db8:	ldr	r0, [r1, r2]
    1dbc:	ldr	r0, [r0, #200]	; 0xc8
    1dc0:	ldr	r1, [fp, #-16]
    1dc4:	bl	0 <coda_type_number_set_endianness>
    1dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1dcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1dd0:	ldr	r3, [r1, r2]
    1dd4:	ldr	r3, [r3, #200]	; 0xc8
    1dd8:	str	r0, [fp, #-788]	; 0xfffffcec
    1ddc:	mov	r0, r3
    1de0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1de4:	bl	0 <coda_type_set_read_type>
    1de8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1dec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1df0:	ldr	r3, [r1, r2]
    1df4:	ldr	r3, [r3, #200]	; 0xc8
    1df8:	str	r0, [fp, #-792]	; 0xfffffce8
    1dfc:	mov	r0, r3
    1e00:	ldr	r2, [fp, #-252]	; 0xffffff04
    1e04:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e08:	bl	0 <coda_type_set_bit_size>
    1e0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e10:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e14:	ldr	r3, [r1, r2]
    1e18:	ldr	r3, [r3, #200]	; 0xc8
    1e1c:	movw	r1, #0
    1e20:	movt	r1, #0
    1e24:	str	r0, [fp, #-796]	; 0xfffffce4
    1e28:	mov	r0, r3
    1e2c:	bl	0 <coda_type_set_description>
    1e30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e34:	str	r0, [fp, #-800]	; 0xfffffce0
    1e38:	mov	r0, r1
    1e3c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1e40:	bl	0 <coda_type_number_new>
    1e44:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e4c:	ldr	r3, [r1, r2]
    1e50:	str	r0, [r3, #204]	; 0xcc
    1e54:	ldr	r0, [r1, r2]
    1e58:	ldr	r0, [r0, #204]	; 0xcc
    1e5c:	ldr	r1, [fp, #-16]
    1e60:	bl	0 <coda_type_number_set_endianness>
    1e64:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e6c:	ldr	r3, [r1, r2]
    1e70:	ldr	r3, [r3, #204]	; 0xcc
    1e74:	str	r0, [fp, #-804]	; 0xfffffcdc
    1e78:	mov	r0, r3
    1e7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1e80:	bl	0 <coda_type_set_read_type>
    1e84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e8c:	ldr	r3, [r1, r2]
    1e90:	ldr	r3, [r3, #204]	; 0xcc
    1e94:	str	r0, [fp, #-808]	; 0xfffffcd8
    1e98:	mov	r0, r3
    1e9c:	ldr	r2, [fp, #-252]	; 0xffffff04
    1ea0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ea4:	bl	0 <coda_type_set_bit_size>
    1ea8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1eac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1eb0:	ldr	r3, [r1, r2]
    1eb4:	ldr	r3, [r3, #204]	; 0xcc
    1eb8:	movw	r1, #0
    1ebc:	movt	r1, #0
    1ec0:	str	r0, [fp, #-812]	; 0xfffffcd4
    1ec4:	mov	r0, r3
    1ec8:	bl	0 <coda_type_set_description>
    1ecc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ed0:	str	r0, [fp, #-816]	; 0xfffffcd0
    1ed4:	mov	r0, r1
    1ed8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1edc:	bl	0 <coda_type_number_new>
    1ee0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ee4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ee8:	ldr	r3, [r1, r2]
    1eec:	str	r0, [r3, #208]	; 0xd0
    1ef0:	ldr	r0, [r1, r2]
    1ef4:	ldr	r0, [r0, #208]	; 0xd0
    1ef8:	ldr	r1, [fp, #-16]
    1efc:	bl	0 <coda_type_number_set_endianness>
    1f00:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f08:	ldr	r3, [r1, r2]
    1f0c:	ldr	r3, [r3, #208]	; 0xd0
    1f10:	str	r0, [fp, #-820]	; 0xfffffccc
    1f14:	mov	r0, r3
    1f18:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1f1c:	bl	0 <coda_type_set_read_type>
    1f20:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f28:	ldr	r3, [r1, r2]
    1f2c:	ldr	r3, [r3, #208]	; 0xd0
    1f30:	str	r0, [fp, #-824]	; 0xfffffcc8
    1f34:	mov	r0, r3
    1f38:	ldr	r2, [fp, #-252]	; 0xffffff04
    1f3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1f40:	bl	0 <coda_type_set_bit_size>
    1f44:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f4c:	ldr	r3, [r1, r2]
    1f50:	ldr	r3, [r3, #208]	; 0xd0
    1f54:	movw	r1, #0
    1f58:	movt	r1, #0
    1f5c:	str	r0, [fp, #-828]	; 0xfffffcc4
    1f60:	mov	r0, r3
    1f64:	bl	0 <coda_type_set_description>
    1f68:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f6c:	str	r0, [fp, #-832]	; 0xfffffcc0
    1f70:	mov	r0, r1
    1f74:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1f78:	bl	0 <coda_type_number_new>
    1f7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f84:	ldr	r3, [r1, r2]
    1f88:	str	r0, [r3, #212]	; 0xd4
    1f8c:	ldr	r0, [r1, r2]
    1f90:	ldr	r0, [r0, #212]	; 0xd4
    1f94:	ldr	r1, [fp, #-16]
    1f98:	bl	0 <coda_type_number_set_endianness>
    1f9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1fa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fa4:	ldr	r3, [r1, r2]
    1fa8:	ldr	r3, [r3, #212]	; 0xd4
    1fac:	str	r0, [fp, #-836]	; 0xfffffcbc
    1fb0:	mov	r0, r3
    1fb4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1fb8:	bl	0 <coda_type_set_read_type>
    1fbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1fc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fc4:	ldr	r3, [r1, r2]
    1fc8:	ldr	r3, [r3, #212]	; 0xd4
    1fcc:	str	r0, [fp, #-840]	; 0xfffffcb8
    1fd0:	mov	r0, r3
    1fd4:	ldr	r2, [fp, #-176]	; 0xffffff50
    1fd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1fdc:	bl	0 <coda_type_set_bit_size>
    1fe0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1fe4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fe8:	ldr	r3, [r1, r2]
    1fec:	ldr	r3, [r3, #212]	; 0xd4
    1ff0:	movw	r1, #0
    1ff4:	movt	r1, #0
    1ff8:	str	r0, [fp, #-844]	; 0xfffffcb4
    1ffc:	mov	r0, r3
    2000:	bl	0 <coda_type_set_description>
    2004:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2008:	str	r0, [sp, #848]	; 0x350
    200c:	mov	r0, r1
    2010:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2014:	bl	0 <coda_type_number_new>
    2018:	ldr	r1, [fp, #-60]	; 0xffffffc4
    201c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2020:	ldr	r3, [r1, r2]
    2024:	str	r0, [r3, #220]	; 0xdc
    2028:	ldr	r0, [r1, r2]
    202c:	ldr	r0, [r0, #220]	; 0xdc
    2030:	ldr	r1, [fp, #-16]
    2034:	bl	0 <coda_type_number_set_endianness>
    2038:	ldr	r1, [fp, #-60]	; 0xffffffc4
    203c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2040:	ldr	r3, [r1, r2]
    2044:	ldr	r3, [r3, #220]	; 0xdc
    2048:	str	r0, [sp, #844]	; 0x34c
    204c:	mov	r0, r3
    2050:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2054:	bl	0 <coda_type_set_read_type>
    2058:	ldr	r1, [fp, #-60]	; 0xffffffc4
    205c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2060:	ldr	r3, [r1, r2]
    2064:	ldr	r3, [r3, #220]	; 0xdc
    2068:	str	r0, [sp, #840]	; 0x348
    206c:	mov	r0, r3
    2070:	ldr	r2, [fp, #-176]	; 0xffffff50
    2074:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2078:	bl	0 <coda_type_set_bit_size>
    207c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2080:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2084:	ldr	r3, [r1, r2]
    2088:	ldr	r3, [r3, #220]	; 0xdc
    208c:	movw	r1, #0
    2090:	movt	r1, #0
    2094:	str	r0, [sp, #836]	; 0x344
    2098:	mov	r0, r3
    209c:	bl	0 <coda_type_set_description>
    20a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    20a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20a8:	ldr	r3, [r1, r2]
    20ac:	ldr	r3, [r3, #220]	; 0xdc
    20b0:	movw	ip, #0
    20b4:	movt	ip, #0
    20b8:	str	r0, [sp, #832]	; 0x340
    20bc:	mov	r0, r3
    20c0:	mov	r1, ip
    20c4:	str	ip, [sp, #828]	; 0x33c
    20c8:	bl	0 <coda_type_number_set_unit>
    20cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    20d0:	str	r0, [sp, #824]	; 0x338
    20d4:	mov	r0, r1
    20d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    20dc:	bl	0 <coda_type_number_new>
    20e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    20e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20e8:	ldr	r3, [r1, r2]
    20ec:	str	r0, [r3, #224]	; 0xe0
    20f0:	ldr	r0, [r1, r2]
    20f4:	ldr	r0, [r0, #224]	; 0xe0
    20f8:	ldr	r1, [fp, #-16]
    20fc:	bl	0 <coda_type_number_set_endianness>
    2100:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2104:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2108:	ldr	r3, [r1, r2]
    210c:	ldr	r3, [r3, #224]	; 0xe0
    2110:	str	r0, [sp, #820]	; 0x334
    2114:	mov	r0, r3
    2118:	ldr	r1, [fp, #-100]	; 0xffffff9c
    211c:	bl	0 <coda_type_set_read_type>
    2120:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2124:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2128:	ldr	r3, [r1, r2]
    212c:	ldr	r3, [r3, #224]	; 0xe0
    2130:	str	r0, [sp, #816]	; 0x330
    2134:	mov	r0, r3
    2138:	ldr	r2, [fp, #-176]	; 0xffffff50
    213c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2140:	bl	0 <coda_type_set_bit_size>
    2144:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2148:	ldr	r2, [fp, #-56]	; 0xffffffc8
    214c:	ldr	r3, [r1, r2]
    2150:	ldr	r3, [r3, #224]	; 0xe0
    2154:	movw	r1, #0
    2158:	movt	r1, #0
    215c:	str	r0, [sp, #812]	; 0x32c
    2160:	mov	r0, r3
    2164:	bl	0 <coda_type_set_description>
    2168:	ldr	r1, [fp, #-60]	; 0xffffffc4
    216c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2170:	ldr	r3, [r1, r2]
    2174:	ldr	r3, [r3, #224]	; 0xe0
    2178:	str	r0, [sp, #808]	; 0x328
    217c:	mov	r0, r3
    2180:	ldr	r1, [sp, #828]	; 0x33c
    2184:	bl	0 <coda_type_number_set_unit>
    2188:	ldr	r1, [fp, #-48]	; 0xffffffd0
    218c:	str	r0, [sp, #804]	; 0x324
    2190:	mov	r0, r1
    2194:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2198:	bl	0 <coda_type_number_new>
    219c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21a4:	ldr	r3, [r1, r2]
    21a8:	str	r0, [r3, #228]	; 0xe4
    21ac:	ldr	r0, [r1, r2]
    21b0:	ldr	r0, [r0, #228]	; 0xe4
    21b4:	ldr	r1, [fp, #-16]
    21b8:	bl	0 <coda_type_number_set_endianness>
    21bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21c4:	ldr	r3, [r1, r2]
    21c8:	ldr	r3, [r3, #228]	; 0xe4
    21cc:	str	r0, [sp, #800]	; 0x320
    21d0:	mov	r0, r3
    21d4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    21d8:	bl	0 <coda_type_set_read_type>
    21dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21e4:	ldr	r3, [r1, r2]
    21e8:	ldr	r3, [r3, #228]	; 0xe4
    21ec:	str	r0, [sp, #796]	; 0x31c
    21f0:	mov	r0, r3
    21f4:	ldr	r2, [fp, #-176]	; 0xffffff50
    21f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    21fc:	bl	0 <coda_type_set_bit_size>
    2200:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2204:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2208:	ldr	r3, [r1, r2]
    220c:	ldr	r3, [r3, #228]	; 0xe4
    2210:	movw	r1, #0
    2214:	movt	r1, #0
    2218:	str	r0, [sp, #792]	; 0x318
    221c:	mov	r0, r3
    2220:	bl	0 <coda_type_set_description>
    2224:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2228:	ldr	r2, [fp, #-56]	; 0xffffffc8
    222c:	ldr	r3, [r1, r2]
    2230:	ldr	r3, [r3, #228]	; 0xe4
    2234:	str	r0, [sp, #788]	; 0x314
    2238:	mov	r0, r3
    223c:	ldr	r1, [sp, #828]	; 0x33c
    2240:	bl	0 <coda_type_number_set_unit>
    2244:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2248:	str	r0, [sp, #784]	; 0x310
    224c:	mov	r0, r1
    2250:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2254:	bl	0 <coda_type_number_new>
    2258:	ldr	r1, [fp, #-60]	; 0xffffffc4
    225c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2260:	ldr	r3, [r1, r2]
    2264:	str	r0, [r3, #232]	; 0xe8
    2268:	ldr	r0, [r1, r2]
    226c:	ldr	r0, [r0, #232]	; 0xe8
    2270:	ldr	r1, [fp, #-16]
    2274:	bl	0 <coda_type_number_set_endianness>
    2278:	ldr	r1, [fp, #-60]	; 0xffffffc4
    227c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2280:	ldr	r3, [r1, r2]
    2284:	ldr	r3, [r3, #232]	; 0xe8
    2288:	str	r0, [sp, #780]	; 0x30c
    228c:	mov	r0, r3
    2290:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2294:	bl	0 <coda_type_set_read_type>
    2298:	ldr	r1, [fp, #-60]	; 0xffffffc4
    229c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22a0:	ldr	r3, [r1, r2]
    22a4:	ldr	r3, [r3, #232]	; 0xe8
    22a8:	str	r0, [sp, #776]	; 0x308
    22ac:	mov	r0, r3
    22b0:	ldr	r2, [fp, #-176]	; 0xffffff50
    22b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    22b8:	bl	0 <coda_type_set_bit_size>
    22bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    22c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22c4:	ldr	r3, [r1, r2]
    22c8:	ldr	r3, [r3, #232]	; 0xe8
    22cc:	movw	r1, #0
    22d0:	movt	r1, #0
    22d4:	str	r0, [sp, #772]	; 0x304
    22d8:	mov	r0, r3
    22dc:	bl	0 <coda_type_set_description>
    22e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    22e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22e8:	ldr	r3, [r1, r2]
    22ec:	ldr	r3, [r3, #232]	; 0xe8
    22f0:	movw	r1, #0
    22f4:	movt	r1, #0
    22f8:	str	r0, [sp, #768]	; 0x300
    22fc:	mov	r0, r3
    2300:	bl	0 <coda_type_number_set_unit>
    2304:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2308:	str	r0, [sp, #764]	; 0x2fc
    230c:	mov	r0, r1
    2310:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2314:	bl	0 <coda_type_number_new>
    2318:	ldr	r1, [fp, #-60]	; 0xffffffc4
    231c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2320:	ldr	r3, [r1, r2]
    2324:	str	r0, [r3, #236]	; 0xec
    2328:	ldr	r0, [r1, r2]
    232c:	ldr	r0, [r0, #236]	; 0xec
    2330:	ldr	r1, [fp, #-16]
    2334:	bl	0 <coda_type_number_set_endianness>
    2338:	ldr	r1, [fp, #-60]	; 0xffffffc4
    233c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2340:	ldr	r3, [r1, r2]
    2344:	ldr	r3, [r3, #236]	; 0xec
    2348:	str	r0, [sp, #760]	; 0x2f8
    234c:	mov	r0, r3
    2350:	ldr	r1, [fp, #-108]	; 0xffffff94
    2354:	bl	0 <coda_type_set_read_type>
    2358:	ldr	r1, [fp, #-60]	; 0xffffffc4
    235c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2360:	ldr	r3, [r1, r2]
    2364:	ldr	r3, [r3, #236]	; 0xec
    2368:	str	r0, [sp, #756]	; 0x2f4
    236c:	mov	r0, r3
    2370:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2374:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2378:	bl	0 <coda_type_set_bit_size>
    237c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2380:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2384:	ldr	r3, [r1, r2]
    2388:	ldr	r3, [r3, #236]	; 0xec
    238c:	str	r0, [sp, #752]	; 0x2f0
    2390:	mov	r0, r3
    2394:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    2398:	bl	0 <coda_type_set_description>
    239c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    23a0:	str	r0, [sp, #748]	; 0x2ec
    23a4:	mov	r0, r1
    23a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    23ac:	bl	0 <coda_type_number_new>
    23b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23b8:	ldr	r3, [r1, r2]
    23bc:	str	r0, [r3, #240]	; 0xf0
    23c0:	ldr	r0, [r1, r2]
    23c4:	ldr	r0, [r0, #240]	; 0xf0
    23c8:	ldr	r1, [fp, #-16]
    23cc:	bl	0 <coda_type_number_set_endianness>
    23d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23d8:	ldr	r3, [r1, r2]
    23dc:	ldr	r3, [r3, #240]	; 0xf0
    23e0:	str	r0, [sp, #744]	; 0x2e8
    23e4:	mov	r0, r3
    23e8:	ldr	r1, [fp, #-108]	; 0xffffff94
    23ec:	bl	0 <coda_type_set_read_type>
    23f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23f8:	ldr	r3, [r1, r2]
    23fc:	ldr	r3, [r3, #240]	; 0xf0
    2400:	str	r0, [sp, #740]	; 0x2e4
    2404:	mov	r0, r3
    2408:	ldr	r2, [fp, #-116]	; 0xffffff8c
    240c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2410:	bl	0 <coda_type_set_bit_size>
    2414:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2418:	ldr	r2, [fp, #-56]	; 0xffffffc8
    241c:	ldr	r3, [r1, r2]
    2420:	ldr	r3, [r3, #240]	; 0xf0
    2424:	str	r0, [sp, #736]	; 0x2e0
    2428:	mov	r0, r3
    242c:	ldr	r1, [fp, #-632]	; 0xfffffd88
    2430:	bl	0 <coda_type_set_description>
    2434:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2438:	str	r0, [sp, #732]	; 0x2dc
    243c:	mov	r0, r1
    2440:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2444:	bl	0 <coda_type_number_new>
    2448:	ldr	r1, [fp, #-60]	; 0xffffffc4
    244c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2450:	ldr	r3, [r1, r2]
    2454:	str	r0, [r3, #244]	; 0xf4
    2458:	ldr	r0, [r1, r2]
    245c:	ldr	r0, [r0, #244]	; 0xf4
    2460:	ldr	r1, [fp, #-16]
    2464:	bl	0 <coda_type_number_set_endianness>
    2468:	ldr	r1, [fp, #-60]	; 0xffffffc4
    246c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2470:	ldr	r3, [r1, r2]
    2474:	ldr	r3, [r3, #244]	; 0xf4
    2478:	str	r0, [sp, #728]	; 0x2d8
    247c:	mov	r0, r3
    2480:	ldr	r1, [fp, #-108]	; 0xffffff94
    2484:	bl	0 <coda_type_set_read_type>
    2488:	ldr	r1, [fp, #-60]	; 0xffffffc4
    248c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2490:	ldr	r3, [r1, r2]
    2494:	ldr	r3, [r3, #244]	; 0xf4
    2498:	str	r0, [sp, #724]	; 0x2d4
    249c:	mov	r0, r3
    24a0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    24a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    24a8:	bl	0 <coda_type_set_bit_size>
    24ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24b4:	ldr	r3, [r1, r2]
    24b8:	ldr	r3, [r3, #244]	; 0xf4
    24bc:	str	r0, [sp, #720]	; 0x2d0
    24c0:	mov	r0, r3
    24c4:	ldr	r1, [fp, #-652]	; 0xfffffd74
    24c8:	bl	0 <coda_type_set_description>
    24cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    24d0:	str	r0, [sp, #716]	; 0x2cc
    24d4:	mov	r0, r1
    24d8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    24dc:	bl	0 <coda_type_number_new>
    24e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24e8:	ldr	r3, [r1, r2]
    24ec:	str	r0, [r3, #248]	; 0xf8
    24f0:	ldr	r0, [r1, r2]
    24f4:	ldr	r0, [r0, #248]	; 0xf8
    24f8:	ldr	r1, [fp, #-16]
    24fc:	bl	0 <coda_type_number_set_endianness>
    2500:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2504:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2508:	ldr	r3, [r1, r2]
    250c:	ldr	r3, [r3, #248]	; 0xf8
    2510:	str	r0, [sp, #712]	; 0x2c8
    2514:	mov	r0, r3
    2518:	ldr	r1, [fp, #-108]	; 0xffffff94
    251c:	bl	0 <coda_type_set_read_type>
    2520:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2524:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2528:	ldr	r3, [r1, r2]
    252c:	ldr	r3, [r3, #248]	; 0xf8
    2530:	str	r0, [sp, #708]	; 0x2c4
    2534:	mov	r0, r3
    2538:	ldr	r2, [fp, #-116]	; 0xffffff8c
    253c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2540:	bl	0 <coda_type_set_bit_size>
    2544:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2548:	ldr	r2, [fp, #-56]	; 0xffffffc8
    254c:	ldr	r3, [r1, r2]
    2550:	ldr	r3, [r3, #248]	; 0xf8
    2554:	str	r0, [sp, #704]	; 0x2c0
    2558:	mov	r0, r3
    255c:	ldr	r1, [fp, #-672]	; 0xfffffd60
    2560:	bl	0 <coda_type_set_description>
    2564:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2568:	str	r0, [sp, #700]	; 0x2bc
    256c:	mov	r0, r1
    2570:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2574:	bl	0 <coda_type_number_new>
    2578:	ldr	r1, [fp, #-60]	; 0xffffffc4
    257c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2580:	ldr	r3, [r1, r2]
    2584:	str	r0, [r3, #252]	; 0xfc
    2588:	ldr	r0, [r1, r2]
    258c:	ldr	r0, [r0, #252]	; 0xfc
    2590:	ldr	r1, [fp, #-16]
    2594:	bl	0 <coda_type_number_set_endianness>
    2598:	ldr	r1, [fp, #-60]	; 0xffffffc4
    259c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25a0:	ldr	r3, [r1, r2]
    25a4:	ldr	r3, [r3, #252]	; 0xfc
    25a8:	str	r0, [sp, #696]	; 0x2b8
    25ac:	mov	r0, r3
    25b0:	ldr	r1, [fp, #-108]	; 0xffffff94
    25b4:	bl	0 <coda_type_set_read_type>
    25b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    25bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25c0:	ldr	r3, [r1, r2]
    25c4:	ldr	r3, [r3, #252]	; 0xfc
    25c8:	str	r0, [sp, #692]	; 0x2b4
    25cc:	mov	r0, r3
    25d0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    25d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    25d8:	bl	0 <coda_type_set_bit_size>
    25dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    25e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25e4:	ldr	r3, [r1, r2]
    25e8:	ldr	r3, [r3, #252]	; 0xfc
    25ec:	str	r0, [sp, #688]	; 0x2b0
    25f0:	mov	r0, r3
    25f4:	ldr	r1, [fp, #-692]	; 0xfffffd4c
    25f8:	bl	0 <coda_type_set_description>
    25fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2600:	str	r0, [sp, #684]	; 0x2ac
    2604:	mov	r0, r1
    2608:	ldr	r1, [fp, #-100]	; 0xffffff9c
    260c:	bl	0 <coda_type_number_new>
    2610:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2614:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2618:	ldr	r3, [r1, r2]
    261c:	str	r0, [r3, #256]	; 0x100
    2620:	ldr	r0, [r1, r2]
    2624:	ldr	r0, [r0, #256]	; 0x100
    2628:	ldr	r1, [fp, #-16]
    262c:	bl	0 <coda_type_number_set_endianness>
    2630:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2634:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2638:	ldr	r3, [r1, r2]
    263c:	ldr	r3, [r3, #256]	; 0x100
    2640:	str	r0, [sp, #680]	; 0x2a8
    2644:	mov	r0, r3
    2648:	ldr	r1, [fp, #-108]	; 0xffffff94
    264c:	bl	0 <coda_type_set_read_type>
    2650:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2654:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2658:	ldr	r3, [r1, r2]
    265c:	ldr	r3, [r3, #256]	; 0x100
    2660:	str	r0, [sp, #676]	; 0x2a4
    2664:	mov	r0, r3
    2668:	ldr	r2, [fp, #-116]	; 0xffffff8c
    266c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2670:	bl	0 <coda_type_set_bit_size>
    2674:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2678:	ldr	r2, [fp, #-56]	; 0xffffffc8
    267c:	ldr	r3, [r1, r2]
    2680:	ldr	r3, [r3, #256]	; 0x100
    2684:	str	r0, [sp, #672]	; 0x2a0
    2688:	mov	r0, r3
    268c:	ldr	r1, [fp, #-712]	; 0xfffffd38
    2690:	bl	0 <coda_type_set_description>
    2694:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2698:	str	r0, [sp, #668]	; 0x29c
    269c:	mov	r0, r1
    26a0:	bl	0 <coda_type_array_new>
    26a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26ac:	ldr	r3, [r1, r2]
    26b0:	str	r0, [r3, #60]	; 0x3c
    26b4:	ldr	r0, [r1, r2]
    26b8:	ldr	r0, [r0, #60]	; 0x3c
    26bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    26c0:	bl	0 <coda_type_array_add_variable_dimension>
    26c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26cc:	ldr	r3, [r1, r2]
    26d0:	ldr	r1, [r3, #56]	; 0x38
    26d4:	ldr	r3, [r3, #60]	; 0x3c
    26d8:	str	r0, [sp, #664]	; 0x298
    26dc:	mov	r0, r3
    26e0:	bl	0 <coda_type_array_set_base_type>
    26e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    26e8:	str	r0, [sp, #660]	; 0x294
    26ec:	mov	r0, r1
    26f0:	bl	0 <coda_type_array_new>
    26f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26fc:	ldr	r3, [r1, r2]
    2700:	str	r0, [r3, #68]	; 0x44
    2704:	ldr	r0, [r1, r2]
    2708:	ldr	r0, [r0, #68]	; 0x44
    270c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2710:	bl	0 <coda_type_array_add_variable_dimension>
    2714:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2718:	ldr	r2, [fp, #-56]	; 0xffffffc8
    271c:	ldr	r3, [r1, r2]
    2720:	ldr	r1, [r3, #64]	; 0x40
    2724:	ldr	r3, [r3, #68]	; 0x44
    2728:	str	r0, [sp, #656]	; 0x290
    272c:	mov	r0, r3
    2730:	bl	0 <coda_type_array_set_base_type>
    2734:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2738:	str	r0, [sp, #652]	; 0x28c
    273c:	mov	r0, r1
    2740:	bl	0 <coda_type_record_new>
    2744:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2748:	ldr	r2, [fp, #-56]	; 0xffffffc8
    274c:	ldr	r3, [r1, r2]
    2750:	str	r0, [r3, #284]	; 0x11c
    2754:	movw	r0, #0
    2758:	movt	r0, #0
    275c:	bl	0 <coda_type_record_field_new>
    2760:	str	r0, [fp, #-20]	; 0xffffffec
    2764:	ldr	r0, [fp, #-20]	; 0xffffffec
    2768:	ldr	r1, [fp, #-60]	; 0xffffffc4
    276c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2770:	ldr	r3, [r1, r2]
    2774:	ldr	r1, [r3]
    2778:	bl	0 <coda_type_record_field_set_type>
    277c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2780:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2784:	ldr	r3, [r1, r2]
    2788:	ldr	r3, [r3, #284]	; 0x11c
    278c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2790:	str	r0, [sp, #648]	; 0x288
    2794:	mov	r0, r3
    2798:	bl	0 <coda_type_record_add_field>
    279c:	movw	r1, #0
    27a0:	movt	r1, #0
    27a4:	str	r0, [sp, #644]	; 0x284
    27a8:	mov	r0, r1
    27ac:	bl	0 <coda_type_record_field_new>
    27b0:	str	r0, [fp, #-20]	; 0xffffffec
    27b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    27b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    27bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27c0:	ldr	r3, [r1, r2]
    27c4:	ldr	r1, [r3, #8]
    27c8:	bl	0 <coda_type_record_field_set_type>
    27cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    27d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27d4:	ldr	r3, [r1, r2]
    27d8:	ldr	r3, [r3, #284]	; 0x11c
    27dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    27e0:	str	r0, [sp, #640]	; 0x280
    27e4:	mov	r0, r3
    27e8:	bl	0 <coda_type_record_add_field>
    27ec:	movw	r1, #0
    27f0:	movt	r1, #0
    27f4:	str	r0, [sp, #636]	; 0x27c
    27f8:	mov	r0, r1
    27fc:	bl	0 <coda_type_record_field_new>
    2800:	str	r0, [fp, #-20]	; 0xffffffec
    2804:	ldr	r0, [fp, #-20]	; 0xffffffec
    2808:	ldr	r1, [fp, #-60]	; 0xffffffc4
    280c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2810:	ldr	r3, [r1, r2]
    2814:	ldr	r1, [r3, #12]
    2818:	bl	0 <coda_type_record_field_set_type>
    281c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2820:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2824:	ldr	r3, [r1, r2]
    2828:	ldr	r3, [r3, #284]	; 0x11c
    282c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2830:	str	r0, [sp, #632]	; 0x278
    2834:	mov	r0, r3
    2838:	bl	0 <coda_type_record_add_field>
    283c:	movw	r1, #0
    2840:	movt	r1, #0
    2844:	str	r0, [sp, #628]	; 0x274
    2848:	mov	r0, r1
    284c:	bl	0 <coda_type_record_field_new>
    2850:	str	r0, [fp, #-20]	; 0xffffffec
    2854:	ldr	r0, [fp, #-20]	; 0xffffffec
    2858:	ldr	r1, [fp, #-60]	; 0xffffffc4
    285c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2860:	ldr	r3, [r1, r2]
    2864:	ldr	r1, [r3, #16]
    2868:	bl	0 <coda_type_record_field_set_type>
    286c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2870:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2874:	ldr	r3, [r1, r2]
    2878:	ldr	r3, [r3, #284]	; 0x11c
    287c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2880:	str	r0, [sp, #624]	; 0x270
    2884:	mov	r0, r3
    2888:	bl	0 <coda_type_record_add_field>
    288c:	movw	r1, #0
    2890:	movt	r1, #0
    2894:	str	r0, [sp, #620]	; 0x26c
    2898:	mov	r0, r1
    289c:	bl	0 <coda_type_record_field_new>
    28a0:	str	r0, [fp, #-20]	; 0xffffffec
    28a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    28a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28b0:	ldr	r3, [r1, r2]
    28b4:	ldr	r1, [r3, #20]
    28b8:	bl	0 <coda_type_record_field_set_type>
    28bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28c4:	ldr	r3, [r1, r2]
    28c8:	ldr	r3, [r3, #284]	; 0x11c
    28cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    28d0:	str	r0, [sp, #616]	; 0x268
    28d4:	mov	r0, r3
    28d8:	bl	0 <coda_type_record_add_field>
    28dc:	movw	r1, #0
    28e0:	movt	r1, #0
    28e4:	str	r0, [sp, #612]	; 0x264
    28e8:	mov	r0, r1
    28ec:	bl	0 <coda_type_record_field_new>
    28f0:	str	r0, [fp, #-20]	; 0xffffffec
    28f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    28f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2900:	ldr	r3, [r1, r2]
    2904:	ldr	r1, [r3, #24]
    2908:	bl	0 <coda_type_record_field_set_type>
    290c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2910:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2914:	ldr	r3, [r1, r2]
    2918:	ldr	r3, [r3, #284]	; 0x11c
    291c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2920:	str	r0, [sp, #608]	; 0x260
    2924:	mov	r0, r3
    2928:	bl	0 <coda_type_record_add_field>
    292c:	movw	r1, #0
    2930:	movt	r1, #0
    2934:	str	r0, [sp, #604]	; 0x25c
    2938:	mov	r0, r1
    293c:	bl	0 <coda_type_record_field_new>
    2940:	str	r0, [fp, #-20]	; 0xffffffec
    2944:	ldr	r0, [fp, #-20]	; 0xffffffec
    2948:	ldr	r1, [fp, #-60]	; 0xffffffc4
    294c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2950:	ldr	r3, [r1, r2]
    2954:	ldr	r1, [r3, #28]
    2958:	bl	0 <coda_type_record_field_set_type>
    295c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2960:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2964:	ldr	r3, [r1, r2]
    2968:	ldr	r3, [r3, #284]	; 0x11c
    296c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2970:	str	r0, [sp, #600]	; 0x258
    2974:	mov	r0, r3
    2978:	bl	0 <coda_type_record_add_field>
    297c:	movw	r1, #0
    2980:	movt	r1, #0
    2984:	str	r0, [sp, #596]	; 0x254
    2988:	mov	r0, r1
    298c:	bl	0 <coda_type_record_field_new>
    2990:	str	r0, [fp, #-20]	; 0xffffffec
    2994:	ldr	r0, [fp, #-20]	; 0xffffffec
    2998:	ldr	r1, [fp, #-60]	; 0xffffffc4
    299c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29a0:	ldr	r3, [r1, r2]
    29a4:	ldr	r1, [r3, #32]
    29a8:	bl	0 <coda_type_record_field_set_type>
    29ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    29b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29b4:	ldr	r3, [r1, r2]
    29b8:	ldr	r3, [r3, #284]	; 0x11c
    29bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    29c0:	str	r0, [sp, #592]	; 0x250
    29c4:	mov	r0, r3
    29c8:	bl	0 <coda_type_record_add_field>
    29cc:	movw	r1, #0
    29d0:	movt	r1, #0
    29d4:	str	r0, [sp, #588]	; 0x24c
    29d8:	mov	r0, r1
    29dc:	bl	0 <coda_type_record_field_new>
    29e0:	str	r0, [fp, #-20]	; 0xffffffec
    29e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    29e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    29ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29f0:	ldr	r3, [r1, r2]
    29f4:	ldr	r1, [r3, #36]	; 0x24
    29f8:	bl	0 <coda_type_record_field_set_type>
    29fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a04:	ldr	r3, [r1, r2]
    2a08:	ldr	r3, [r3, #284]	; 0x11c
    2a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a10:	str	r0, [sp, #584]	; 0x248
    2a14:	mov	r0, r3
    2a18:	bl	0 <coda_type_record_add_field>
    2a1c:	movw	r1, #0
    2a20:	movt	r1, #0
    2a24:	str	r0, [sp, #580]	; 0x244
    2a28:	mov	r0, r1
    2a2c:	bl	0 <coda_type_record_field_new>
    2a30:	str	r0, [fp, #-20]	; 0xffffffec
    2a34:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a40:	ldr	r3, [r1, r2]
    2a44:	ldr	r1, [r3, #40]	; 0x28
    2a48:	bl	0 <coda_type_record_field_set_type>
    2a4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a54:	ldr	r3, [r1, r2]
    2a58:	ldr	r3, [r3, #284]	; 0x11c
    2a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a60:	str	r0, [sp, #576]	; 0x240
    2a64:	mov	r0, r3
    2a68:	bl	0 <coda_type_record_add_field>
    2a6c:	movw	r1, #0
    2a70:	movt	r1, #0
    2a74:	str	r0, [sp, #572]	; 0x23c
    2a78:	mov	r0, r1
    2a7c:	bl	0 <coda_type_record_field_new>
    2a80:	str	r0, [fp, #-20]	; 0xffffffec
    2a84:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a88:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a90:	ldr	r3, [r1, r2]
    2a94:	ldr	r1, [r3, #44]	; 0x2c
    2a98:	bl	0 <coda_type_record_field_set_type>
    2a9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2aa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2aa4:	ldr	r3, [r1, r2]
    2aa8:	ldr	r3, [r3, #284]	; 0x11c
    2aac:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ab0:	str	r0, [sp, #568]	; 0x238
    2ab4:	mov	r0, r3
    2ab8:	bl	0 <coda_type_record_add_field>
    2abc:	movw	r1, #0
    2ac0:	movt	r1, #0
    2ac4:	str	r0, [sp, #564]	; 0x234
    2ac8:	mov	r0, r1
    2acc:	bl	0 <coda_type_record_field_new>
    2ad0:	str	r0, [fp, #-20]	; 0xffffffec
    2ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ad8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2adc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ae0:	ldr	r3, [r1, r2]
    2ae4:	ldr	r1, [r3, #48]	; 0x30
    2ae8:	bl	0 <coda_type_record_field_set_type>
    2aec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2af4:	ldr	r3, [r1, r2]
    2af8:	ldr	r3, [r3, #284]	; 0x11c
    2afc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b00:	str	r0, [sp, #560]	; 0x230
    2b04:	mov	r0, r3
    2b08:	bl	0 <coda_type_record_add_field>
    2b0c:	movw	r1, #0
    2b10:	movt	r1, #0
    2b14:	str	r0, [sp, #556]	; 0x22c
    2b18:	mov	r0, r1
    2b1c:	bl	0 <coda_type_record_field_new>
    2b20:	str	r0, [fp, #-20]	; 0xffffffec
    2b24:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b28:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b30:	ldr	r3, [r1, r2]
    2b34:	ldr	r1, [r3, #52]	; 0x34
    2b38:	bl	0 <coda_type_record_field_set_type>
    2b3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b40:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b44:	ldr	r3, [r1, r2]
    2b48:	ldr	r3, [r3, #284]	; 0x11c
    2b4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b50:	str	r0, [sp, #552]	; 0x228
    2b54:	mov	r0, r3
    2b58:	bl	0 <coda_type_record_add_field>
    2b5c:	movw	r1, #0
    2b60:	movt	r1, #0
    2b64:	str	r0, [sp, #548]	; 0x224
    2b68:	mov	r0, r1
    2b6c:	bl	0 <coda_type_record_field_new>
    2b70:	str	r0, [fp, #-20]	; 0xffffffec
    2b74:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b78:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b80:	ldr	r3, [r1, r2]
    2b84:	ldr	r1, [r3, #60]	; 0x3c
    2b88:	bl	0 <coda_type_record_field_set_type>
    2b8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b94:	ldr	r3, [r1, r2]
    2b98:	ldr	r3, [r3, #284]	; 0x11c
    2b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ba0:	str	r0, [sp, #544]	; 0x220
    2ba4:	mov	r0, r3
    2ba8:	bl	0 <coda_type_record_add_field>
    2bac:	movw	r1, #0
    2bb0:	movt	r1, #0
    2bb4:	str	r0, [sp, #540]	; 0x21c
    2bb8:	mov	r0, r1
    2bbc:	bl	0 <coda_type_record_field_new>
    2bc0:	str	r0, [fp, #-20]	; 0xffffffec
    2bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2bc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2bcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bd0:	ldr	r3, [r1, r2]
    2bd4:	ldr	r1, [r3, #68]	; 0x44
    2bd8:	bl	0 <coda_type_record_field_set_type>
    2bdc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2be0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2be4:	ldr	r3, [r1, r2]
    2be8:	ldr	r3, [r3, #284]	; 0x11c
    2bec:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bf0:	str	r0, [sp, #536]	; 0x218
    2bf4:	mov	r0, r3
    2bf8:	bl	0 <coda_type_record_add_field>
    2bfc:	movw	r1, #0
    2c00:	movt	r1, #0
    2c04:	str	r0, [sp, #532]	; 0x214
    2c08:	mov	r0, r1
    2c0c:	bl	0 <coda_type_record_field_new>
    2c10:	str	r0, [fp, #-20]	; 0xffffffec
    2c14:	ldr	r0, [fp, #-20]	; 0xffffffec
    2c18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c20:	ldr	r3, [r1, r2]
    2c24:	ldr	r1, [r3, #72]	; 0x48
    2c28:	bl	0 <coda_type_record_field_set_type>
    2c2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c34:	ldr	r3, [r1, r2]
    2c38:	ldr	r3, [r3, #284]	; 0x11c
    2c3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c40:	str	r0, [sp, #528]	; 0x210
    2c44:	mov	r0, r3
    2c48:	bl	0 <coda_type_record_add_field>
    2c4c:	movw	r1, #0
    2c50:	movt	r1, #0
    2c54:	str	r0, [sp, #524]	; 0x20c
    2c58:	mov	r0, r1
    2c5c:	bl	0 <coda_type_record_field_new>
    2c60:	str	r0, [fp, #-20]	; 0xffffffec
    2c64:	ldr	r0, [fp, #-20]	; 0xffffffec
    2c68:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c70:	ldr	r3, [r1, r2]
    2c74:	ldr	r1, [r3, #76]	; 0x4c
    2c78:	bl	0 <coda_type_record_field_set_type>
    2c7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c84:	ldr	r3, [r1, r2]
    2c88:	ldr	r3, [r3, #284]	; 0x11c
    2c8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c90:	str	r0, [sp, #520]	; 0x208
    2c94:	mov	r0, r3
    2c98:	bl	0 <coda_type_record_add_field>
    2c9c:	movw	r1, #0
    2ca0:	movt	r1, #0
    2ca4:	str	r0, [sp, #516]	; 0x204
    2ca8:	mov	r0, r1
    2cac:	bl	0 <coda_type_record_field_new>
    2cb0:	str	r0, [fp, #-20]	; 0xffffffec
    2cb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2cb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2cbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cc0:	ldr	r3, [r1, r2]
    2cc4:	ldr	r1, [r3, #80]	; 0x50
    2cc8:	bl	0 <coda_type_record_field_set_type>
    2ccc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2cd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cd4:	ldr	r3, [r1, r2]
    2cd8:	ldr	r3, [r3, #284]	; 0x11c
    2cdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ce0:	str	r0, [sp, #512]	; 0x200
    2ce4:	mov	r0, r3
    2ce8:	bl	0 <coda_type_record_add_field>
    2cec:	movw	r1, #0
    2cf0:	movt	r1, #0
    2cf4:	str	r0, [sp, #508]	; 0x1fc
    2cf8:	mov	r0, r1
    2cfc:	bl	0 <coda_type_record_field_new>
    2d00:	str	r0, [fp, #-20]	; 0xffffffec
    2d04:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d08:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d10:	ldr	r3, [r1, r2]
    2d14:	ldr	r1, [r3, #84]	; 0x54
    2d18:	bl	0 <coda_type_record_field_set_type>
    2d1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d24:	ldr	r3, [r1, r2]
    2d28:	ldr	r3, [r3, #284]	; 0x11c
    2d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d30:	str	r0, [sp, #504]	; 0x1f8
    2d34:	mov	r0, r3
    2d38:	bl	0 <coda_type_record_add_field>
    2d3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2d40:	str	r0, [sp, #500]	; 0x1f4
    2d44:	mov	r0, r1
    2d48:	bl	0 <coda_type_record_new>
    2d4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d54:	ldr	r3, [r1, r2]
    2d58:	str	r0, [r3, #140]	; 0x8c
    2d5c:	movw	r0, #0
    2d60:	movt	r0, #0
    2d64:	str	r0, [sp, #496]	; 0x1f0
    2d68:	bl	0 <coda_type_record_field_new>
    2d6c:	str	r0, [fp, #-20]	; 0xffffffec
    2d70:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d74:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d7c:	ldr	r3, [r1, r2]
    2d80:	ldr	r1, [r3, #144]	; 0x90
    2d84:	bl	0 <coda_type_record_field_set_type>
    2d88:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d90:	ldr	r3, [r1, r2]
    2d94:	ldr	r3, [r3, #140]	; 0x8c
    2d98:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d9c:	str	r0, [sp, #492]	; 0x1ec
    2da0:	mov	r0, r3
    2da4:	bl	0 <coda_type_record_add_field>
    2da8:	movw	r1, #0
    2dac:	movt	r1, #0
    2db0:	str	r0, [sp, #488]	; 0x1e8
    2db4:	mov	r0, r1
    2db8:	str	r1, [sp, #484]	; 0x1e4
    2dbc:	bl	0 <coda_type_record_field_new>
    2dc0:	str	r0, [fp, #-20]	; 0xffffffec
    2dc4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2dcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2dd0:	ldr	r3, [r1, r2]
    2dd4:	ldr	r1, [r3, #148]	; 0x94
    2dd8:	bl	0 <coda_type_record_field_set_type>
    2ddc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2de0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2de4:	ldr	r3, [r1, r2]
    2de8:	ldr	r3, [r3, #140]	; 0x8c
    2dec:	ldr	r1, [fp, #-20]	; 0xffffffec
    2df0:	str	r0, [sp, #480]	; 0x1e0
    2df4:	mov	r0, r3
    2df8:	bl	0 <coda_type_record_add_field>
    2dfc:	movw	r1, #0
    2e00:	movt	r1, #0
    2e04:	str	r0, [sp, #476]	; 0x1dc
    2e08:	mov	r0, r1
    2e0c:	str	r1, [sp, #472]	; 0x1d8
    2e10:	bl	0 <coda_type_record_field_new>
    2e14:	str	r0, [fp, #-20]	; 0xffffffec
    2e18:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e24:	ldr	r3, [r1, r2]
    2e28:	ldr	r1, [r3, #152]	; 0x98
    2e2c:	bl	0 <coda_type_record_field_set_type>
    2e30:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e34:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e38:	ldr	r3, [r1, r2]
    2e3c:	ldr	r3, [r3, #140]	; 0x8c
    2e40:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e44:	str	r0, [sp, #468]	; 0x1d4
    2e48:	mov	r0, r3
    2e4c:	bl	0 <coda_type_record_add_field>
    2e50:	movw	r1, #0
    2e54:	movt	r1, #0
    2e58:	str	r0, [sp, #464]	; 0x1d0
    2e5c:	mov	r0, r1
    2e60:	str	r1, [sp, #460]	; 0x1cc
    2e64:	bl	0 <coda_type_record_field_new>
    2e68:	str	r0, [fp, #-20]	; 0xffffffec
    2e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e78:	ldr	r3, [r1, r2]
    2e7c:	ldr	r1, [r3, #156]	; 0x9c
    2e80:	bl	0 <coda_type_record_field_set_type>
    2e84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e8c:	ldr	r3, [r1, r2]
    2e90:	ldr	r3, [r3, #140]	; 0x8c
    2e94:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e98:	str	r0, [sp, #456]	; 0x1c8
    2e9c:	mov	r0, r3
    2ea0:	bl	0 <coda_type_record_add_field>
    2ea4:	movw	r1, #0
    2ea8:	movt	r1, #0
    2eac:	str	r0, [sp, #452]	; 0x1c4
    2eb0:	mov	r0, r1
    2eb4:	str	r1, [sp, #448]	; 0x1c0
    2eb8:	bl	0 <coda_type_record_field_new>
    2ebc:	str	r0, [fp, #-20]	; 0xffffffec
    2ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ec4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ec8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ecc:	ldr	r3, [r1, r2]
    2ed0:	ldr	r1, [r3, #160]	; 0xa0
    2ed4:	bl	0 <coda_type_record_field_set_type>
    2ed8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2edc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ee0:	ldr	r3, [r1, r2]
    2ee4:	ldr	r3, [r3, #140]	; 0x8c
    2ee8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2eec:	str	r0, [sp, #444]	; 0x1bc
    2ef0:	mov	r0, r3
    2ef4:	bl	0 <coda_type_record_add_field>
    2ef8:	movw	r1, #0
    2efc:	movt	r1, #0
    2f00:	str	r0, [sp, #440]	; 0x1b8
    2f04:	mov	r0, r1
    2f08:	str	r1, [sp, #436]	; 0x1b4
    2f0c:	bl	0 <coda_type_record_field_new>
    2f10:	str	r0, [fp, #-20]	; 0xffffffec
    2f14:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f20:	ldr	r3, [r1, r2]
    2f24:	ldr	r1, [r3, #164]	; 0xa4
    2f28:	bl	0 <coda_type_record_field_set_type>
    2f2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f34:	ldr	r3, [r1, r2]
    2f38:	ldr	r3, [r3, #140]	; 0x8c
    2f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f40:	str	r0, [sp, #432]	; 0x1b0
    2f44:	mov	r0, r3
    2f48:	bl	0 <coda_type_record_add_field>
    2f4c:	movw	r1, #0
    2f50:	movt	r1, #0
    2f54:	str	r0, [sp, #428]	; 0x1ac
    2f58:	mov	r0, r1
    2f5c:	str	r1, [sp, #424]	; 0x1a8
    2f60:	bl	0 <coda_type_record_field_new>
    2f64:	str	r0, [fp, #-20]	; 0xffffffec
    2f68:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f74:	ldr	r3, [r1, r2]
    2f78:	ldr	r1, [r3, #168]	; 0xa8
    2f7c:	bl	0 <coda_type_record_field_set_type>
    2f80:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f88:	ldr	r3, [r1, r2]
    2f8c:	ldr	r3, [r3, #140]	; 0x8c
    2f90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f94:	str	r0, [sp, #420]	; 0x1a4
    2f98:	mov	r0, r3
    2f9c:	bl	0 <coda_type_record_add_field>
    2fa0:	movw	r1, #0
    2fa4:	movt	r1, #0
    2fa8:	str	r0, [sp, #416]	; 0x1a0
    2fac:	mov	r0, r1
    2fb0:	str	r1, [sp, #412]	; 0x19c
    2fb4:	bl	0 <coda_type_record_field_new>
    2fb8:	str	r0, [fp, #-20]	; 0xffffffec
    2fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
    2fc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2fc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fc8:	ldr	r3, [r1, r2]
    2fcc:	ldr	r1, [r3, #172]	; 0xac
    2fd0:	bl	0 <coda_type_record_field_set_type>
    2fd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2fd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fdc:	ldr	r3, [r1, r2]
    2fe0:	ldr	r3, [r3, #140]	; 0x8c
    2fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fe8:	str	r0, [sp, #408]	; 0x198
    2fec:	mov	r0, r3
    2ff0:	bl	0 <coda_type_record_add_field>
    2ff4:	movw	r1, #0
    2ff8:	movt	r1, #0
    2ffc:	str	r0, [sp, #404]	; 0x194
    3000:	mov	r0, r1
    3004:	str	r1, [sp, #400]	; 0x190
    3008:	bl	0 <coda_type_record_field_new>
    300c:	str	r0, [fp, #-20]	; 0xffffffec
    3010:	ldr	r0, [fp, #-20]	; 0xffffffec
    3014:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3018:	ldr	r2, [fp, #-56]	; 0xffffffc8
    301c:	ldr	r3, [r1, r2]
    3020:	ldr	r1, [r3, #176]	; 0xb0
    3024:	bl	0 <coda_type_record_field_set_type>
    3028:	ldr	r1, [fp, #-60]	; 0xffffffc4
    302c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3030:	ldr	r3, [r1, r2]
    3034:	ldr	r3, [r3, #140]	; 0x8c
    3038:	ldr	r1, [fp, #-20]	; 0xffffffec
    303c:	str	r0, [sp, #396]	; 0x18c
    3040:	mov	r0, r3
    3044:	bl	0 <coda_type_record_add_field>
    3048:	movw	r1, #0
    304c:	movt	r1, #0
    3050:	str	r0, [sp, #392]	; 0x188
    3054:	mov	r0, r1
    3058:	str	r1, [sp, #388]	; 0x184
    305c:	bl	0 <coda_type_record_field_new>
    3060:	str	r0, [fp, #-20]	; 0xffffffec
    3064:	ldr	r0, [fp, #-20]	; 0xffffffec
    3068:	ldr	r1, [fp, #-60]	; 0xffffffc4
    306c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3070:	ldr	r3, [r1, r2]
    3074:	ldr	r1, [r3, #180]	; 0xb4
    3078:	bl	0 <coda_type_record_field_set_type>
    307c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3080:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3084:	ldr	r3, [r1, r2]
    3088:	ldr	r3, [r3, #140]	; 0x8c
    308c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3090:	str	r0, [sp, #384]	; 0x180
    3094:	mov	r0, r3
    3098:	bl	0 <coda_type_record_add_field>
    309c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    30a0:	str	r0, [sp, #380]	; 0x17c
    30a4:	mov	r0, r1
    30a8:	bl	0 <coda_type_record_new>
    30ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30b4:	ldr	r3, [r1, r2]
    30b8:	str	r0, [r3, #268]	; 0x10c
    30bc:	movw	r0, #0
    30c0:	movt	r0, #0
    30c4:	str	r0, [sp, #376]	; 0x178
    30c8:	bl	0 <coda_type_record_field_new>
    30cc:	str	r0, [fp, #-20]	; 0xffffffec
    30d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    30d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30dc:	ldr	r3, [r1, r2]
    30e0:	ldr	r1, [r3, #88]	; 0x58
    30e4:	bl	0 <coda_type_record_field_set_type>
    30e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30f0:	ldr	r3, [r1, r2]
    30f4:	ldr	r3, [r3, #268]	; 0x10c
    30f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    30fc:	str	r0, [sp, #372]	; 0x174
    3100:	mov	r0, r3
    3104:	bl	0 <coda_type_record_add_field>
    3108:	movw	r1, #0
    310c:	movt	r1, #0
    3110:	str	r0, [sp, #368]	; 0x170
    3114:	mov	r0, r1
    3118:	bl	0 <coda_type_record_field_new>
    311c:	str	r0, [fp, #-20]	; 0xffffffec
    3120:	ldr	r0, [fp, #-20]	; 0xffffffec
    3124:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3128:	ldr	r2, [fp, #-56]	; 0xffffffc8
    312c:	ldr	r3, [r1, r2]
    3130:	ldr	r1, [r3, #92]	; 0x5c
    3134:	bl	0 <coda_type_record_field_set_type>
    3138:	ldr	r1, [fp, #-60]	; 0xffffffc4
    313c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3140:	ldr	r3, [r1, r2]
    3144:	ldr	r3, [r3, #268]	; 0x10c
    3148:	ldr	r1, [fp, #-20]	; 0xffffffec
    314c:	str	r0, [sp, #364]	; 0x16c
    3150:	mov	r0, r3
    3154:	bl	0 <coda_type_record_add_field>
    3158:	movw	r1, #0
    315c:	movt	r1, #0
    3160:	str	r0, [sp, #360]	; 0x168
    3164:	mov	r0, r1
    3168:	bl	0 <coda_type_record_field_new>
    316c:	str	r0, [fp, #-20]	; 0xffffffec
    3170:	ldr	r0, [fp, #-20]	; 0xffffffec
    3174:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3178:	ldr	r2, [fp, #-56]	; 0xffffffc8
    317c:	ldr	r3, [r1, r2]
    3180:	ldr	r1, [r3, #96]	; 0x60
    3184:	bl	0 <coda_type_record_field_set_type>
    3188:	ldr	r1, [fp, #-60]	; 0xffffffc4
    318c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3190:	ldr	r3, [r1, r2]
    3194:	ldr	r3, [r3, #268]	; 0x10c
    3198:	ldr	r1, [fp, #-20]	; 0xffffffec
    319c:	str	r0, [sp, #356]	; 0x164
    31a0:	mov	r0, r3
    31a4:	bl	0 <coda_type_record_add_field>
    31a8:	movw	r1, #0
    31ac:	movt	r1, #0
    31b0:	str	r0, [sp, #352]	; 0x160
    31b4:	mov	r0, r1
    31b8:	bl	0 <coda_type_record_field_new>
    31bc:	str	r0, [fp, #-20]	; 0xffffffec
    31c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    31c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    31c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    31cc:	ldr	r3, [r1, r2]
    31d0:	ldr	r1, [r3, #100]	; 0x64
    31d4:	bl	0 <coda_type_record_field_set_type>
    31d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    31dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    31e0:	ldr	r3, [r1, r2]
    31e4:	ldr	r3, [r3, #268]	; 0x10c
    31e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    31ec:	str	r0, [sp, #348]	; 0x15c
    31f0:	mov	r0, r3
    31f4:	bl	0 <coda_type_record_add_field>
    31f8:	ldr	r1, [fp, #-408]	; 0xfffffe68
    31fc:	str	r0, [sp, #344]	; 0x158
    3200:	mov	r0, r1
    3204:	bl	0 <coda_type_record_field_new>
    3208:	str	r0, [fp, #-20]	; 0xffffffec
    320c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3210:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3214:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3218:	ldr	r3, [r1, r2]
    321c:	ldr	r1, [r3, #104]	; 0x68
    3220:	bl	0 <coda_type_record_field_set_type>
    3224:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3228:	ldr	r2, [fp, #-56]	; 0xffffffc8
    322c:	ldr	r3, [r1, r2]
    3230:	ldr	r3, [r3, #268]	; 0x10c
    3234:	ldr	r1, [fp, #-20]	; 0xffffffec
    3238:	str	r0, [sp, #340]	; 0x154
    323c:	mov	r0, r3
    3240:	bl	0 <coda_type_record_add_field>
    3244:	ldr	r1, [sp, #496]	; 0x1f0
    3248:	str	r0, [sp, #336]	; 0x150
    324c:	mov	r0, r1
    3250:	bl	0 <coda_type_record_field_new>
    3254:	str	r0, [fp, #-20]	; 0xffffffec
    3258:	ldr	r0, [fp, #-20]	; 0xffffffec
    325c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3260:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3264:	ldr	r3, [r1, r2]
    3268:	ldr	r1, [r3, #108]	; 0x6c
    326c:	bl	0 <coda_type_record_field_set_type>
    3270:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3274:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3278:	ldr	r3, [r1, r2]
    327c:	ldr	r3, [r3, #268]	; 0x10c
    3280:	ldr	r1, [fp, #-20]	; 0xffffffec
    3284:	str	r0, [sp, #332]	; 0x14c
    3288:	mov	r0, r3
    328c:	bl	0 <coda_type_record_add_field>
    3290:	ldr	r1, [sp, #484]	; 0x1e4
    3294:	str	r0, [sp, #328]	; 0x148
    3298:	mov	r0, r1
    329c:	bl	0 <coda_type_record_field_new>
    32a0:	str	r0, [fp, #-20]	; 0xffffffec
    32a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    32a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32b0:	ldr	r3, [r1, r2]
    32b4:	ldr	r1, [r3, #112]	; 0x70
    32b8:	bl	0 <coda_type_record_field_set_type>
    32bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32c4:	ldr	r3, [r1, r2]
    32c8:	ldr	r3, [r3, #268]	; 0x10c
    32cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    32d0:	str	r0, [sp, #324]	; 0x144
    32d4:	mov	r0, r3
    32d8:	bl	0 <coda_type_record_add_field>
    32dc:	ldr	r1, [sp, #472]	; 0x1d8
    32e0:	str	r0, [sp, #320]	; 0x140
    32e4:	mov	r0, r1
    32e8:	bl	0 <coda_type_record_field_new>
    32ec:	str	r0, [fp, #-20]	; 0xffffffec
    32f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    32f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32fc:	ldr	r3, [r1, r2]
    3300:	ldr	r1, [r3, #116]	; 0x74
    3304:	bl	0 <coda_type_record_field_set_type>
    3308:	ldr	r1, [fp, #-60]	; 0xffffffc4
    330c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3310:	ldr	r3, [r1, r2]
    3314:	ldr	r3, [r3, #268]	; 0x10c
    3318:	ldr	r1, [fp, #-20]	; 0xffffffec
    331c:	str	r0, [sp, #316]	; 0x13c
    3320:	mov	r0, r3
    3324:	bl	0 <coda_type_record_add_field>
    3328:	ldr	r1, [sp, #460]	; 0x1cc
    332c:	str	r0, [sp, #312]	; 0x138
    3330:	mov	r0, r1
    3334:	bl	0 <coda_type_record_field_new>
    3338:	str	r0, [fp, #-20]	; 0xffffffec
    333c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3340:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3344:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3348:	ldr	r3, [r1, r2]
    334c:	ldr	r1, [r3, #120]	; 0x78
    3350:	bl	0 <coda_type_record_field_set_type>
    3354:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3358:	ldr	r2, [fp, #-56]	; 0xffffffc8
    335c:	ldr	r3, [r1, r2]
    3360:	ldr	r3, [r3, #268]	; 0x10c
    3364:	ldr	r1, [fp, #-20]	; 0xffffffec
    3368:	str	r0, [sp, #308]	; 0x134
    336c:	mov	r0, r3
    3370:	bl	0 <coda_type_record_add_field>
    3374:	movw	r1, #0
    3378:	movt	r1, #0
    337c:	str	r0, [sp, #304]	; 0x130
    3380:	mov	r0, r1
    3384:	bl	0 <coda_type_record_field_new>
    3388:	str	r0, [fp, #-20]	; 0xffffffec
    338c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3390:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3394:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3398:	ldr	r3, [r1, r2]
    339c:	ldr	r1, [r3, #124]	; 0x7c
    33a0:	bl	0 <coda_type_record_field_set_type>
    33a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    33a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33ac:	ldr	r3, [r1, r2]
    33b0:	ldr	r3, [r3, #268]	; 0x10c
    33b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33b8:	str	r0, [sp, #300]	; 0x12c
    33bc:	mov	r0, r3
    33c0:	bl	0 <coda_type_record_add_field>
    33c4:	movw	r1, #0
    33c8:	movt	r1, #0
    33cc:	str	r0, [sp, #296]	; 0x128
    33d0:	mov	r0, r1
    33d4:	bl	0 <coda_type_record_field_new>
    33d8:	str	r0, [fp, #-20]	; 0xffffffec
    33dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    33e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    33e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33e8:	ldr	r3, [r1, r2]
    33ec:	ldr	r1, [r3, #128]	; 0x80
    33f0:	bl	0 <coda_type_record_field_set_type>
    33f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    33f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33fc:	ldr	r3, [r1, r2]
    3400:	ldr	r3, [r3, #268]	; 0x10c
    3404:	ldr	r1, [fp, #-20]	; 0xffffffec
    3408:	str	r0, [sp, #292]	; 0x124
    340c:	mov	r0, r3
    3410:	bl	0 <coda_type_record_add_field>
    3414:	movw	r1, #0
    3418:	movt	r1, #0
    341c:	str	r0, [sp, #288]	; 0x120
    3420:	mov	r0, r1
    3424:	bl	0 <coda_type_record_field_new>
    3428:	str	r0, [fp, #-20]	; 0xffffffec
    342c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3430:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3434:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3438:	ldr	r3, [r1, r2]
    343c:	ldr	r1, [r3, #132]	; 0x84
    3440:	bl	0 <coda_type_record_field_set_type>
    3444:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3448:	ldr	r2, [fp, #-56]	; 0xffffffc8
    344c:	ldr	r3, [r1, r2]
    3450:	ldr	r3, [r3, #268]	; 0x10c
    3454:	ldr	r1, [fp, #-20]	; 0xffffffec
    3458:	str	r0, [sp, #284]	; 0x11c
    345c:	mov	r0, r3
    3460:	bl	0 <coda_type_record_add_field>
    3464:	movw	r1, #0
    3468:	movt	r1, #0
    346c:	str	r0, [sp, #280]	; 0x118
    3470:	mov	r0, r1
    3474:	bl	0 <coda_type_record_field_new>
    3478:	str	r0, [fp, #-20]	; 0xffffffec
    347c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3480:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3484:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3488:	ldr	r3, [r1, r2]
    348c:	ldr	r1, [r3, #136]	; 0x88
    3490:	bl	0 <coda_type_record_field_set_type>
    3494:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3498:	ldr	r2, [fp, #-56]	; 0xffffffc8
    349c:	ldr	r3, [r1, r2]
    34a0:	ldr	r3, [r3, #268]	; 0x10c
    34a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    34a8:	str	r0, [sp, #276]	; 0x114
    34ac:	mov	r0, r3
    34b0:	bl	0 <coda_type_record_add_field>
    34b4:	movw	r1, #0
    34b8:	movt	r1, #0
    34bc:	str	r0, [sp, #272]	; 0x110
    34c0:	mov	r0, r1
    34c4:	str	r1, [sp, #268]	; 0x10c
    34c8:	bl	0 <coda_type_record_field_new>
    34cc:	str	r0, [fp, #-20]	; 0xffffffec
    34d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    34d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    34d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    34dc:	ldr	r3, [r1, r2]
    34e0:	ldr	r1, [r3, #140]	; 0x8c
    34e4:	bl	0 <coda_type_record_field_set_type>
    34e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    34ec:	str	r0, [sp, #264]	; 0x108
    34f0:	mov	r0, r1
    34f4:	bl	0 <coda_type_record_field_set_optional>
    34f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    34fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3500:	ldr	r3, [r1, r2]
    3504:	ldr	r3, [r3, #268]	; 0x10c
    3508:	ldr	r1, [fp, #-20]	; 0xffffffec
    350c:	str	r0, [sp, #260]	; 0x104
    3510:	mov	r0, r3
    3514:	bl	0 <coda_type_record_add_field>
    3518:	ldr	r1, [fp, #-48]	; 0xffffffd0
    351c:	str	r0, [sp, #256]	; 0x100
    3520:	mov	r0, r1
    3524:	bl	0 <coda_type_array_new>
    3528:	ldr	r1, [fp, #-60]	; 0xffffffc4
    352c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3530:	ldr	r3, [r1, r2]
    3534:	str	r0, [r3, #272]	; 0x110
    3538:	ldr	r0, [r1, r2]
    353c:	ldr	r0, [r0, #272]	; 0x110
    3540:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3544:	bl	0 <coda_type_array_add_variable_dimension>
    3548:	ldr	r1, [fp, #-60]	; 0xffffffc4
    354c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3550:	ldr	r3, [r1, r2]
    3554:	ldr	r1, [r3, #268]	; 0x10c
    3558:	ldr	r3, [r3, #272]	; 0x110
    355c:	str	r0, [sp, #252]	; 0xfc
    3560:	mov	r0, r3
    3564:	bl	0 <coda_type_array_set_base_type>
    3568:	ldr	r1, [fp, #-48]	; 0xffffffd0
    356c:	str	r0, [sp, #248]	; 0xf8
    3570:	mov	r0, r1
    3574:	bl	0 <coda_type_record_new>
    3578:	ldr	r1, [fp, #-60]	; 0xffffffc4
    357c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3580:	ldr	r3, [r1, r2]
    3584:	str	r0, [r3, #216]	; 0xd8
    3588:	movw	r0, #0
    358c:	movt	r0, #0
    3590:	str	r0, [sp, #244]	; 0xf4
    3594:	bl	0 <coda_type_record_field_new>
    3598:	str	r0, [fp, #-20]	; 0xffffffec
    359c:	ldr	r0, [fp, #-20]	; 0xffffffec
    35a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35a8:	ldr	r3, [r1, r2]
    35ac:	ldr	r1, [r3, #220]	; 0xdc
    35b0:	bl	0 <coda_type_record_field_set_type>
    35b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35bc:	ldr	r3, [r1, r2]
    35c0:	ldr	r3, [r3, #216]	; 0xd8
    35c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    35c8:	str	r0, [sp, #240]	; 0xf0
    35cc:	mov	r0, r3
    35d0:	bl	0 <coda_type_record_add_field>
    35d4:	movw	r1, #0
    35d8:	movt	r1, #0
    35dc:	str	r0, [sp, #236]	; 0xec
    35e0:	mov	r0, r1
    35e4:	str	r1, [sp, #232]	; 0xe8
    35e8:	bl	0 <coda_type_record_field_new>
    35ec:	str	r0, [fp, #-20]	; 0xffffffec
    35f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    35f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35fc:	ldr	r3, [r1, r2]
    3600:	ldr	r1, [r3, #224]	; 0xe0
    3604:	bl	0 <coda_type_record_field_set_type>
    3608:	ldr	r1, [fp, #-60]	; 0xffffffc4
    360c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3610:	ldr	r3, [r1, r2]
    3614:	ldr	r3, [r3, #216]	; 0xd8
    3618:	ldr	r1, [fp, #-20]	; 0xffffffec
    361c:	str	r0, [sp, #228]	; 0xe4
    3620:	mov	r0, r3
    3624:	bl	0 <coda_type_record_add_field>
    3628:	movw	r1, #0
    362c:	movt	r1, #0
    3630:	str	r0, [sp, #224]	; 0xe0
    3634:	mov	r0, r1
    3638:	str	r1, [sp, #220]	; 0xdc
    363c:	bl	0 <coda_type_record_field_new>
    3640:	str	r0, [fp, #-20]	; 0xffffffec
    3644:	ldr	r0, [fp, #-20]	; 0xffffffec
    3648:	ldr	r1, [fp, #-60]	; 0xffffffc4
    364c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3650:	ldr	r3, [r1, r2]
    3654:	ldr	r1, [r3, #228]	; 0xe4
    3658:	bl	0 <coda_type_record_field_set_type>
    365c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3660:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3664:	ldr	r3, [r1, r2]
    3668:	ldr	r3, [r3, #216]	; 0xd8
    366c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3670:	str	r0, [sp, #216]	; 0xd8
    3674:	mov	r0, r3
    3678:	bl	0 <coda_type_record_add_field>
    367c:	movw	r1, #0
    3680:	movt	r1, #0
    3684:	str	r0, [sp, #212]	; 0xd4
    3688:	mov	r0, r1
    368c:	str	r1, [sp, #208]	; 0xd0
    3690:	bl	0 <coda_type_record_field_new>
    3694:	str	r0, [fp, #-20]	; 0xffffffec
    3698:	ldr	r0, [fp, #-20]	; 0xffffffec
    369c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36a4:	ldr	r3, [r1, r2]
    36a8:	ldr	r1, [r3, #232]	; 0xe8
    36ac:	bl	0 <coda_type_record_field_set_type>
    36b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36b8:	ldr	r3, [r1, r2]
    36bc:	ldr	r3, [r3, #216]	; 0xd8
    36c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    36c4:	str	r0, [sp, #204]	; 0xcc
    36c8:	mov	r0, r3
    36cc:	bl	0 <coda_type_record_add_field>
    36d0:	ldr	r1, [sp, #448]	; 0x1c0
    36d4:	str	r0, [sp, #200]	; 0xc8
    36d8:	mov	r0, r1
    36dc:	bl	0 <coda_type_record_field_new>
    36e0:	str	r0, [fp, #-20]	; 0xffffffec
    36e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    36e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36f0:	ldr	r3, [r1, r2]
    36f4:	ldr	r1, [r3, #236]	; 0xec
    36f8:	bl	0 <coda_type_record_field_set_type>
    36fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3700:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3704:	ldr	r3, [r1, r2]
    3708:	ldr	r3, [r3, #216]	; 0xd8
    370c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3710:	str	r0, [sp, #196]	; 0xc4
    3714:	mov	r0, r3
    3718:	bl	0 <coda_type_record_add_field>
    371c:	ldr	r1, [sp, #436]	; 0x1b4
    3720:	str	r0, [sp, #192]	; 0xc0
    3724:	mov	r0, r1
    3728:	bl	0 <coda_type_record_field_new>
    372c:	str	r0, [fp, #-20]	; 0xffffffec
    3730:	ldr	r0, [fp, #-20]	; 0xffffffec
    3734:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3738:	ldr	r2, [fp, #-56]	; 0xffffffc8
    373c:	ldr	r3, [r1, r2]
    3740:	ldr	r1, [r3, #240]	; 0xf0
    3744:	bl	0 <coda_type_record_field_set_type>
    3748:	ldr	r1, [fp, #-60]	; 0xffffffc4
    374c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3750:	ldr	r3, [r1, r2]
    3754:	ldr	r3, [r3, #216]	; 0xd8
    3758:	ldr	r1, [fp, #-20]	; 0xffffffec
    375c:	str	r0, [sp, #188]	; 0xbc
    3760:	mov	r0, r3
    3764:	bl	0 <coda_type_record_add_field>
    3768:	ldr	r1, [sp, #424]	; 0x1a8
    376c:	str	r0, [sp, #184]	; 0xb8
    3770:	mov	r0, r1
    3774:	bl	0 <coda_type_record_field_new>
    3778:	str	r0, [fp, #-20]	; 0xffffffec
    377c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3780:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3784:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3788:	ldr	r3, [r1, r2]
    378c:	ldr	r1, [r3, #244]	; 0xf4
    3790:	bl	0 <coda_type_record_field_set_type>
    3794:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3798:	ldr	r2, [fp, #-56]	; 0xffffffc8
    379c:	ldr	r3, [r1, r2]
    37a0:	ldr	r3, [r3, #216]	; 0xd8
    37a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    37a8:	str	r0, [sp, #180]	; 0xb4
    37ac:	mov	r0, r3
    37b0:	bl	0 <coda_type_record_add_field>
    37b4:	ldr	r1, [sp, #412]	; 0x19c
    37b8:	str	r0, [sp, #176]	; 0xb0
    37bc:	mov	r0, r1
    37c0:	bl	0 <coda_type_record_field_new>
    37c4:	str	r0, [fp, #-20]	; 0xffffffec
    37c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    37cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    37d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    37d4:	ldr	r3, [r1, r2]
    37d8:	ldr	r1, [r3, #248]	; 0xf8
    37dc:	bl	0 <coda_type_record_field_set_type>
    37e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    37e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    37e8:	ldr	r3, [r1, r2]
    37ec:	ldr	r3, [r3, #216]	; 0xd8
    37f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    37f4:	str	r0, [sp, #172]	; 0xac
    37f8:	mov	r0, r3
    37fc:	bl	0 <coda_type_record_add_field>
    3800:	ldr	r1, [sp, #400]	; 0x190
    3804:	str	r0, [sp, #168]	; 0xa8
    3808:	mov	r0, r1
    380c:	bl	0 <coda_type_record_field_new>
    3810:	str	r0, [fp, #-20]	; 0xffffffec
    3814:	ldr	r0, [fp, #-20]	; 0xffffffec
    3818:	ldr	r1, [fp, #-60]	; 0xffffffc4
    381c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3820:	ldr	r3, [r1, r2]
    3824:	ldr	r1, [r3, #252]	; 0xfc
    3828:	bl	0 <coda_type_record_field_set_type>
    382c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3830:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3834:	ldr	r3, [r1, r2]
    3838:	ldr	r3, [r3, #216]	; 0xd8
    383c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3840:	str	r0, [sp, #164]	; 0xa4
    3844:	mov	r0, r3
    3848:	bl	0 <coda_type_record_add_field>
    384c:	ldr	r1, [sp, #388]	; 0x184
    3850:	str	r0, [sp, #160]	; 0xa0
    3854:	mov	r0, r1
    3858:	bl	0 <coda_type_record_field_new>
    385c:	str	r0, [fp, #-20]	; 0xffffffec
    3860:	ldr	r0, [fp, #-20]	; 0xffffffec
    3864:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3868:	ldr	r2, [fp, #-56]	; 0xffffffc8
    386c:	ldr	r3, [r1, r2]
    3870:	ldr	r1, [r3, #256]	; 0x100
    3874:	bl	0 <coda_type_record_field_set_type>
    3878:	ldr	r1, [fp, #-60]	; 0xffffffc4
    387c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3880:	ldr	r3, [r1, r2]
    3884:	ldr	r3, [r3, #216]	; 0xd8
    3888:	ldr	r1, [fp, #-20]	; 0xffffffec
    388c:	str	r0, [sp, #156]	; 0x9c
    3890:	mov	r0, r3
    3894:	bl	0 <coda_type_record_add_field>
    3898:	ldr	r1, [fp, #-48]	; 0xffffffd0
    389c:	str	r0, [sp, #152]	; 0x98
    38a0:	mov	r0, r1
    38a4:	bl	0 <coda_type_record_new>
    38a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38b0:	ldr	r3, [r1, r2]
    38b4:	str	r0, [r3, #276]	; 0x114
    38b8:	ldr	r0, [sp, #376]	; 0x178
    38bc:	bl	0 <coda_type_record_field_new>
    38c0:	str	r0, [fp, #-20]	; 0xffffffec
    38c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    38c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38d0:	ldr	r3, [r1, r2]
    38d4:	ldr	r1, [r3, #88]	; 0x58
    38d8:	bl	0 <coda_type_record_field_set_type>
    38dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38e4:	ldr	r3, [r1, r2]
    38e8:	ldr	r3, [r3, #276]	; 0x114
    38ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    38f0:	str	r0, [sp, #148]	; 0x94
    38f4:	mov	r0, r3
    38f8:	bl	0 <coda_type_record_add_field>
    38fc:	movw	r1, #0
    3900:	movt	r1, #0
    3904:	str	r0, [sp, #144]	; 0x90
    3908:	mov	r0, r1
    390c:	bl	0 <coda_type_record_field_new>
    3910:	str	r0, [fp, #-20]	; 0xffffffec
    3914:	ldr	r0, [fp, #-20]	; 0xffffffec
    3918:	ldr	r1, [fp, #-60]	; 0xffffffc4
    391c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3920:	ldr	r3, [r1, r2]
    3924:	ldr	r1, [r3, #184]	; 0xb8
    3928:	bl	0 <coda_type_record_field_set_type>
    392c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3930:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3934:	ldr	r3, [r1, r2]
    3938:	ldr	r3, [r3, #276]	; 0x114
    393c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3940:	str	r0, [sp, #140]	; 0x8c
    3944:	mov	r0, r3
    3948:	bl	0 <coda_type_record_add_field>
    394c:	movw	r1, #0
    3950:	movt	r1, #0
    3954:	str	r0, [sp, #136]	; 0x88
    3958:	mov	r0, r1
    395c:	bl	0 <coda_type_record_field_new>
    3960:	str	r0, [fp, #-20]	; 0xffffffec
    3964:	ldr	r0, [fp, #-20]	; 0xffffffec
    3968:	ldr	r1, [fp, #-60]	; 0xffffffc4
    396c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3970:	ldr	r3, [r1, r2]
    3974:	ldr	r1, [r3, #188]	; 0xbc
    3978:	bl	0 <coda_type_record_field_set_type>
    397c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3980:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3984:	ldr	r3, [r1, r2]
    3988:	ldr	r3, [r3, #276]	; 0x114
    398c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3990:	str	r0, [sp, #132]	; 0x84
    3994:	mov	r0, r3
    3998:	bl	0 <coda_type_record_add_field>
    399c:	movw	r1, #0
    39a0:	movt	r1, #0
    39a4:	str	r0, [sp, #128]	; 0x80
    39a8:	mov	r0, r1
    39ac:	bl	0 <coda_type_record_field_new>
    39b0:	str	r0, [fp, #-20]	; 0xffffffec
    39b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    39b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    39bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    39c0:	ldr	r3, [r1, r2]
    39c4:	ldr	r1, [r3, #192]	; 0xc0
    39c8:	bl	0 <coda_type_record_field_set_type>
    39cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    39d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    39d4:	ldr	r3, [r1, r2]
    39d8:	ldr	r3, [r3, #276]	; 0x114
    39dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    39e0:	str	r0, [sp, #124]	; 0x7c
    39e4:	mov	r0, r3
    39e8:	bl	0 <coda_type_record_add_field>
    39ec:	movw	r1, #0
    39f0:	movt	r1, #0
    39f4:	str	r0, [sp, #120]	; 0x78
    39f8:	mov	r0, r1
    39fc:	bl	0 <coda_type_record_field_new>
    3a00:	str	r0, [fp, #-20]	; 0xffffffec
    3a04:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a08:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a10:	ldr	r3, [r1, r2]
    3a14:	ldr	r1, [r3, #196]	; 0xc4
    3a18:	bl	0 <coda_type_record_field_set_type>
    3a1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a24:	ldr	r3, [r1, r2]
    3a28:	ldr	r3, [r3, #276]	; 0x114
    3a2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a30:	str	r0, [sp, #116]	; 0x74
    3a34:	mov	r0, r3
    3a38:	bl	0 <coda_type_record_add_field>
    3a3c:	ldr	r1, [sp, #244]	; 0xf4
    3a40:	str	r0, [sp, #112]	; 0x70
    3a44:	mov	r0, r1
    3a48:	bl	0 <coda_type_record_field_new>
    3a4c:	str	r0, [fp, #-20]	; 0xffffffec
    3a50:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a54:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a58:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a5c:	ldr	r3, [r1, r2]
    3a60:	ldr	r1, [r3, #200]	; 0xc8
    3a64:	bl	0 <coda_type_record_field_set_type>
    3a68:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a70:	ldr	r3, [r1, r2]
    3a74:	ldr	r3, [r3, #276]	; 0x114
    3a78:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a7c:	str	r0, [sp, #108]	; 0x6c
    3a80:	mov	r0, r3
    3a84:	bl	0 <coda_type_record_add_field>
    3a88:	ldr	r1, [sp, #232]	; 0xe8
    3a8c:	str	r0, [sp, #104]	; 0x68
    3a90:	mov	r0, r1
    3a94:	bl	0 <coda_type_record_field_new>
    3a98:	str	r0, [fp, #-20]	; 0xffffffec
    3a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3aa0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3aa4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3aa8:	ldr	r3, [r1, r2]
    3aac:	ldr	r1, [r3, #204]	; 0xcc
    3ab0:	bl	0 <coda_type_record_field_set_type>
    3ab4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ab8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3abc:	ldr	r3, [r1, r2]
    3ac0:	ldr	r3, [r3, #276]	; 0x114
    3ac4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ac8:	str	r0, [sp, #100]	; 0x64
    3acc:	mov	r0, r3
    3ad0:	bl	0 <coda_type_record_add_field>
    3ad4:	ldr	r1, [sp, #220]	; 0xdc
    3ad8:	str	r0, [sp, #96]	; 0x60
    3adc:	mov	r0, r1
    3ae0:	bl	0 <coda_type_record_field_new>
    3ae4:	str	r0, [fp, #-20]	; 0xffffffec
    3ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
    3aec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3af4:	ldr	r3, [r1, r2]
    3af8:	ldr	r1, [r3, #208]	; 0xd0
    3afc:	bl	0 <coda_type_record_field_set_type>
    3b00:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b08:	ldr	r3, [r1, r2]
    3b0c:	ldr	r3, [r3, #276]	; 0x114
    3b10:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b14:	str	r0, [sp, #92]	; 0x5c
    3b18:	mov	r0, r3
    3b1c:	bl	0 <coda_type_record_add_field>
    3b20:	ldr	r1, [sp, #208]	; 0xd0
    3b24:	str	r0, [sp, #88]	; 0x58
    3b28:	mov	r0, r1
    3b2c:	bl	0 <coda_type_record_field_new>
    3b30:	str	r0, [fp, #-20]	; 0xffffffec
    3b34:	ldr	r0, [fp, #-20]	; 0xffffffec
    3b38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b40:	ldr	r3, [r1, r2]
    3b44:	ldr	r1, [r3, #212]	; 0xd4
    3b48:	bl	0 <coda_type_record_field_set_type>
    3b4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b54:	ldr	r3, [r1, r2]
    3b58:	ldr	r3, [r3, #276]	; 0x114
    3b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b60:	str	r0, [sp, #84]	; 0x54
    3b64:	mov	r0, r3
    3b68:	bl	0 <coda_type_record_add_field>
    3b6c:	ldr	r1, [sp, #268]	; 0x10c
    3b70:	str	r0, [sp, #80]	; 0x50
    3b74:	mov	r0, r1
    3b78:	bl	0 <coda_type_record_field_new>
    3b7c:	str	r0, [fp, #-20]	; 0xffffffec
    3b80:	ldr	r0, [fp, #-20]	; 0xffffffec
    3b84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b8c:	ldr	r3, [r1, r2]
    3b90:	ldr	r1, [r3, #216]	; 0xd8
    3b94:	bl	0 <coda_type_record_field_set_type>
    3b98:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b9c:	str	r0, [sp, #76]	; 0x4c
    3ba0:	mov	r0, r1
    3ba4:	bl	0 <coda_type_record_field_set_optional>
    3ba8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3bac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3bb0:	ldr	r3, [r1, r2]
    3bb4:	ldr	r3, [r3, #276]	; 0x114
    3bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3bbc:	str	r0, [sp, #72]	; 0x48
    3bc0:	mov	r0, r3
    3bc4:	bl	0 <coda_type_record_add_field>
    3bc8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3bcc:	str	r0, [sp, #68]	; 0x44
    3bd0:	mov	r0, r1
    3bd4:	bl	0 <coda_type_array_new>
    3bd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3bdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3be0:	ldr	r3, [r1, r2]
    3be4:	str	r0, [r3, #280]	; 0x118
    3be8:	ldr	r0, [r1, r2]
    3bec:	ldr	r0, [r0, #280]	; 0x118
    3bf0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3bf4:	bl	0 <coda_type_array_add_variable_dimension>
    3bf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3bfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c00:	ldr	r3, [r1, r2]
    3c04:	ldr	r1, [r3, #276]	; 0x114
    3c08:	ldr	r3, [r3, #280]	; 0x118
    3c0c:	str	r0, [sp, #64]	; 0x40
    3c10:	mov	r0, r3
    3c14:	bl	0 <coda_type_array_set_base_type>
    3c18:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3c1c:	str	r0, [sp, #60]	; 0x3c
    3c20:	mov	r0, r1
    3c24:	bl	0 <coda_type_record_new>
    3c28:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c30:	ldr	r3, [r1, r2]
    3c34:	str	r0, [r3, #292]	; 0x124
    3c38:	movw	r0, #0
    3c3c:	movt	r0, #0
    3c40:	bl	0 <coda_type_record_field_new>
    3c44:	str	r0, [fp, #-20]	; 0xffffffec
    3c48:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c54:	ldr	r3, [r1, r2]
    3c58:	ldr	r1, [r3, #264]	; 0x108
    3c5c:	bl	0 <coda_type_record_field_set_type>
    3c60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c68:	ldr	r3, [r1, r2]
    3c6c:	ldr	r3, [r3, #292]	; 0x124
    3c70:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c74:	str	r0, [sp, #56]	; 0x38
    3c78:	mov	r0, r3
    3c7c:	bl	0 <coda_type_record_add_field>
    3c80:	movw	r1, #0
    3c84:	movt	r1, #0
    3c88:	str	r0, [sp, #52]	; 0x34
    3c8c:	mov	r0, r1
    3c90:	bl	0 <coda_type_record_field_new>
    3c94:	str	r0, [fp, #-20]	; 0xffffffec
    3c98:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ca0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ca4:	ldr	r3, [r1, r2]
    3ca8:	ldr	r1, [r3, #272]	; 0x110
    3cac:	bl	0 <coda_type_record_field_set_type>
    3cb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3cb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3cb8:	ldr	r3, [r1, r2]
    3cbc:	ldr	r3, [r3, #292]	; 0x124
    3cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cc4:	str	r0, [sp, #48]	; 0x30
    3cc8:	mov	r0, r3
    3ccc:	bl	0 <coda_type_record_add_field>
    3cd0:	movw	r1, #0
    3cd4:	movt	r1, #0
    3cd8:	str	r0, [sp, #44]	; 0x2c
    3cdc:	mov	r0, r1
    3ce0:	bl	0 <coda_type_record_field_new>
    3ce4:	str	r0, [fp, #-20]	; 0xffffffec
    3ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
    3cec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3cf0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3cf4:	ldr	r3, [r1, r2]
    3cf8:	ldr	r1, [r3, #280]	; 0x118
    3cfc:	bl	0 <coda_type_record_field_set_type>
    3d00:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d04:	str	r0, [sp, #40]	; 0x28
    3d08:	mov	r0, r1
    3d0c:	bl	0 <coda_type_record_field_set_optional>
    3d10:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d14:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d18:	ldr	r3, [r1, r2]
    3d1c:	ldr	r3, [r3, #292]	; 0x124
    3d20:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d24:	str	r0, [sp, #36]	; 0x24
    3d28:	mov	r0, r3
    3d2c:	bl	0 <coda_type_record_add_field>
    3d30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d34:	str	r0, [sp, #32]
    3d38:	mov	r0, r1
    3d3c:	bl	0 <coda_type_array_new>
    3d40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d48:	ldr	r3, [r1, r2]
    3d4c:	str	r0, [r3, #288]	; 0x120
    3d50:	ldr	r0, [r1, r2]
    3d54:	ldr	r0, [r0, #288]	; 0x120
    3d58:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3d5c:	bl	0 <coda_type_array_add_variable_dimension>
    3d60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d68:	ldr	r3, [r1, r2]
    3d6c:	ldr	ip, [r3, #288]	; 0x120
    3d70:	ldr	r1, [r3, #292]	; 0x124
    3d74:	str	r0, [sp, #28]
    3d78:	mov	r0, ip
    3d7c:	bl	0 <coda_type_array_set_base_type>
    3d80:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d84:	str	r0, [sp, #24]
    3d88:	mov	r0, r1
    3d8c:	bl	0 <coda_type_record_new>
    3d90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d98:	ldr	r3, [r1, r2]
    3d9c:	str	r0, [r3, #296]	; 0x128
    3da0:	movw	r0, #0
    3da4:	movt	r0, #0
    3da8:	bl	0 <coda_type_record_field_new>
    3dac:	str	r0, [fp, #-20]	; 0xffffffec
    3db0:	ldr	r0, [fp, #-20]	; 0xffffffec
    3db4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3db8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3dbc:	ldr	r3, [r1, r2]
    3dc0:	ldr	r1, [r3, #284]	; 0x11c
    3dc4:	bl	0 <coda_type_record_field_set_type>
    3dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3dcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3dd0:	ldr	r3, [r1, r2]
    3dd4:	ldr	r3, [r3, #296]	; 0x128
    3dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ddc:	str	r0, [sp, #20]
    3de0:	mov	r0, r3
    3de4:	bl	0 <coda_type_record_add_field>
    3de8:	movw	r1, #0
    3dec:	movt	r1, #0
    3df0:	str	r0, [sp, #16]
    3df4:	mov	r0, r1
    3df8:	bl	0 <coda_type_record_field_new>
    3dfc:	str	r0, [fp, #-20]	; 0xffffffec
    3e00:	ldr	r0, [fp, #-20]	; 0xffffffec
    3e04:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3e08:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3e0c:	ldr	r3, [r1, r2]
    3e10:	ldr	r1, [r3, #288]	; 0x120
    3e14:	bl	0 <coda_type_record_field_set_type>
    3e18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3e1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3e20:	ldr	r3, [r1, r2]
    3e24:	ldr	r3, [r3, #296]	; 0x128
    3e28:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e2c:	str	r0, [sp, #12]
    3e30:	mov	r0, r3
    3e34:	bl	0 <coda_type_record_add_field>
    3e38:	movw	r1, #0
    3e3c:	str	r1, [fp, #-12]
    3e40:	str	r0, [sp, #8]
    3e44:	ldr	r0, [fp, #-12]
    3e48:	sub	sp, fp, #8
    3e4c:	pop	{r4, r5, fp, pc}

00003e50 <read_file>:
    3e50:	push	{fp, lr}
    3e54:	mov	fp, sp
    3e58:	sub	sp, sp, #96	; 0x60
    3e5c:	str	r0, [fp, #-8]
    3e60:	movw	r0, #0
    3e64:	str	r0, [fp, #-12]
    3e68:	add	r0, sp, #28
    3e6c:	bl	40cc <ingest_info_init>
    3e70:	ldr	r0, [fp, #-8]
    3e74:	str	r0, [sp, #32]
    3e78:	ldr	r0, [fp, #-8]
    3e7c:	ldr	r0, [r0]
    3e80:	movw	r1, #0
    3e84:	movt	r1, #0
    3e88:	bl	0 <fopen>
    3e8c:	str	r0, [sp, #28]
    3e90:	ldr	r0, [sp, #28]
    3e94:	movw	r1, #0
    3e98:	cmp	r0, r1
    3e9c:	bne	3ec4 <read_file+0x74>
    3ea0:	ldr	r0, [fp, #-8]
    3ea4:	ldr	r2, [r0]
    3ea8:	mvn	r0, #20
    3eac:	movw	r1, #0
    3eb0:	movt	r1, #0
    3eb4:	bl	0 <coda_set_error>
    3eb8:	mvn	r0, #0
    3ebc:	str	r0, [fp, #-4]
    3ec0:	b	4000 <read_file+0x1b0>
    3ec4:	ldr	r0, [pc, #320]	; 400c <read_file+0x1bc>
    3ec8:	str	r0, [sp, #24]
    3ecc:	bl	0 <__aeabi_read_tp>
    3ed0:	ldr	ip, [sp, #24]
    3ed4:	ldr	lr, [r0, ip]
    3ed8:	ldr	lr, [lr, #284]	; 0x11c
    3edc:	mov	r1, #0
    3ee0:	str	r0, [sp, #20]
    3ee4:	mov	r0, lr
    3ee8:	bl	0 <coda_mem_record_new>
    3eec:	str	r0, [sp, #36]	; 0x24
    3ef0:	ldr	r0, [sp, #20]
    3ef4:	ldr	r1, [sp, #24]
    3ef8:	ldr	ip, [r0, r1]
    3efc:	ldr	ip, [ip, #288]	; 0x120
    3f00:	mov	r0, ip
    3f04:	movw	r1, #0
    3f08:	bl	0 <coda_mem_array_new>
    3f0c:	str	r0, [sp, #40]	; 0x28
    3f10:	add	r0, sp, #28
    3f14:	bl	4140 <read_header>
    3f18:	cmp	r0, #0
    3f1c:	beq	3f34 <read_file+0xe4>
    3f20:	add	r0, sp, #28
    3f24:	bl	5534 <ingest_info_cleanup>
    3f28:	mvn	r0, #0
    3f2c:	str	r0, [fp, #-4]
    3f30:	b	4000 <read_file+0x1b0>
    3f34:	add	r0, sp, #28
    3f38:	bl	5670 <read_records>
    3f3c:	cmp	r0, #0
    3f40:	beq	3f58 <read_file+0x108>
    3f44:	add	r0, sp, #28
    3f48:	bl	5534 <ingest_info_cleanup>
    3f4c:	mvn	r0, #0
    3f50:	str	r0, [fp, #-4]
    3f54:	b	4000 <read_file+0x1b0>
    3f58:	ldr	r0, [pc, #172]	; 400c <read_file+0x1bc>
    3f5c:	str	r0, [sp, #16]
    3f60:	bl	0 <__aeabi_read_tp>
    3f64:	ldr	ip, [sp, #16]
    3f68:	ldr	r0, [r0, ip]
    3f6c:	ldr	r0, [r0, #296]	; 0x128
    3f70:	movw	r1, #0
    3f74:	bl	0 <coda_mem_record_new>
    3f78:	str	r0, [fp, #-12]
    3f7c:	ldr	r0, [fp, #-12]
    3f80:	ldr	r1, [sp, #36]	; 0x24
    3f84:	movw	ip, #0
    3f88:	movt	ip, #0
    3f8c:	str	r1, [sp, #12]
    3f90:	mov	r1, ip
    3f94:	ldr	r2, [sp, #12]
    3f98:	movw	r3, #0
    3f9c:	bl	0 <coda_mem_record_add_field>
    3fa0:	movw	r1, #0
    3fa4:	str	r1, [sp, #36]	; 0x24
    3fa8:	ldr	r2, [fp, #-12]
    3fac:	ldr	r3, [sp, #40]	; 0x28
    3fb0:	str	r0, [sp, #8]
    3fb4:	mov	r0, r2
    3fb8:	movw	r2, #0
    3fbc:	movt	r2, #0
    3fc0:	str	r1, [sp, #4]
    3fc4:	mov	r1, r2
    3fc8:	mov	r2, r3
    3fcc:	ldr	r3, [sp, #4]
    3fd0:	bl	0 <coda_mem_record_add_field>
    3fd4:	movw	r1, #0
    3fd8:	str	r1, [sp, #40]	; 0x28
    3fdc:	ldr	r1, [fp, #-12]
    3fe0:	ldr	r2, [fp, #-8]
    3fe4:	str	r1, [r2, #20]
    3fe8:	add	r1, sp, #28
    3fec:	str	r0, [sp]
    3ff0:	mov	r0, r1
    3ff4:	bl	5534 <ingest_info_cleanup>
    3ff8:	movw	r0, #0
    3ffc:	str	r0, [fp, #-4]
    4000:	ldr	r0, [fp, #-4]
    4004:	mov	sp, fp
    4008:	pop	{fp, pc}
    400c:	.word	0x00000000

00004010 <coda_sp3_close>:
    4010:	push	{fp, lr}
    4014:	mov	fp, sp
    4018:	sub	sp, sp, #8
    401c:	str	r0, [sp, #4]
    4020:	ldr	r0, [sp, #4]
    4024:	ldr	r0, [r0, #20]
    4028:	movw	r1, #0
    402c:	cmp	r0, r1
    4030:	beq	4040 <coda_sp3_close+0x30>
    4034:	ldr	r0, [sp, #4]
    4038:	ldr	r0, [r0, #20]
    403c:	bl	0 <coda_dynamic_type_delete>
    4040:	ldr	r0, [sp, #4]
    4044:	ldr	r0, [r0]
    4048:	movw	r1, #0
    404c:	cmp	r0, r1
    4050:	beq	4060 <coda_sp3_close+0x50>
    4054:	ldr	r0, [sp, #4]
    4058:	ldr	r0, [r0]
    405c:	bl	0 <free>
    4060:	ldr	r0, [sp, #4]
    4064:	bl	0 <free>
    4068:	movw	r0, #0
    406c:	mov	sp, fp
    4070:	pop	{fp, pc}

00004074 <coda_sp3_cursor_set_product>:
    4074:	sub	sp, sp, #8
    4078:	str	r0, [sp, #4]
    407c:	str	r1, [sp]
    4080:	ldr	r0, [sp]
    4084:	ldr	r1, [sp, #4]
    4088:	str	r0, [r1]
    408c:	ldr	r0, [sp, #4]
    4090:	mov	r1, #1
    4094:	str	r1, [r0, #4]
    4098:	ldr	r0, [sp]
    409c:	ldr	r0, [r0, #20]
    40a0:	ldr	r1, [sp, #4]
    40a4:	str	r0, [r1, #8]
    40a8:	ldr	r0, [sp, #4]
    40ac:	mvn	r1, #0
    40b0:	str	r1, [r0, #12]
    40b4:	ldr	r0, [sp, #4]
    40b8:	str	r1, [r0, #20]
    40bc:	str	r1, [r0, #16]
    40c0:	movw	r0, #0
    40c4:	add	sp, sp, #8
    40c8:	bx	lr

000040cc <ingest_info_init>:
    40cc:	sub	sp, sp, #4
    40d0:	str	r0, [sp]
    40d4:	ldr	r0, [sp]
    40d8:	movw	r1, #0
    40dc:	str	r1, [r0]
    40e0:	ldr	r0, [sp]
    40e4:	str	r1, [r0, #8]
    40e8:	ldr	r0, [sp]
    40ec:	str	r1, [r0, #12]
    40f0:	ldr	r0, [sp]
    40f4:	str	r1, [r0, #16]
    40f8:	ldr	r0, [sp]
    40fc:	str	r1, [r0, #20]
    4100:	ldr	r0, [sp]
    4104:	str	r1, [r0, #24]
    4108:	ldr	r0, [sp]
    410c:	str	r1, [r0, #28]
    4110:	ldr	r0, [sp]
    4114:	str	r1, [r0, #32]
    4118:	ldr	r0, [sp]
    411c:	str	r1, [r0, #36]	; 0x24
    4120:	ldr	r0, [sp]
    4124:	str	r1, [r0, #40]	; 0x28
    4128:	ldr	r0, [sp]
    412c:	str	r1, [r0, #48]	; 0x30
    4130:	ldr	r0, [sp]
    4134:	str	r1, [r0, #52]	; 0x34
    4138:	add	sp, sp, #4
    413c:	bx	lr

00004140 <read_header>:
    4140:	push	{r4, r5, fp, lr}
    4144:	add	fp, sp, #8
    4148:	sub	sp, sp, #1344	; 0x540
    414c:	str	r0, [fp, #-16]
    4150:	ldr	r0, [fp, #-16]
    4154:	ldr	r0, [r0]
    4158:	bl	0 <ftell>
    415c:	add	r1, sp, #324	; 0x144
    4160:	ldr	lr, [fp, #-16]
    4164:	str	r0, [lr, #52]	; 0x34
    4168:	ldr	r0, [fp, #-16]
    416c:	ldr	lr, [r0, #48]	; 0x30
    4170:	add	lr, lr, #1
    4174:	str	lr, [r0, #48]	; 0x30
    4178:	ldr	r0, [fp, #-16]
    417c:	ldr	r0, [r0]
    4180:	bl	7f84 <get_line>
    4184:	str	r0, [sp, #236]	; 0xec
    4188:	ldr	r0, [sp, #236]	; 0xec
    418c:	cmp	r0, #0
    4190:	bge	41a0 <read_header+0x60>
    4194:	mvn	r0, #0
    4198:	str	r0, [fp, #-12]
    419c:	b	5524 <read_header+0x13e4>
    41a0:	ldr	r0, [sp, #236]	; 0xec
    41a4:	cmp	r0, #60	; 0x3c
    41a8:	bge	41ec <read_header+0xac>
    41ac:	ldr	r2, [sp, #236]	; 0xec
    41b0:	ldr	r0, [fp, #-16]
    41b4:	ldr	r3, [r0, #48]	; 0x30
    41b8:	ldr	r0, [fp, #-16]
    41bc:	ldr	r0, [r0, #52]	; 0x34
    41c0:	mvn	r1, #21
    41c4:	str	r0, [sp, #228]	; 0xe4
    41c8:	mov	r0, r1
    41cc:	movw	r1, #0
    41d0:	movt	r1, #0
    41d4:	ldr	ip, [sp, #228]	; 0xe4
    41d8:	str	ip, [sp]
    41dc:	bl	0 <coda_set_error>
    41e0:	mvn	r0, #0
    41e4:	str	r0, [fp, #-12]
    41e8:	b	5524 <read_header+0x13e4>
    41ec:	ldrb	r0, [sp, #326]	; 0x146
    41f0:	ldr	r1, [fp, #-16]
    41f4:	strb	r0, [r1, #44]	; 0x2c
    41f8:	ldrb	r0, [sp, #326]	; 0x146
    41fc:	strb	r0, [sp, #240]	; 0xf0
    4200:	mov	r0, #0
    4204:	strb	r0, [sp, #241]	; 0xf1
    4208:	ldr	r1, [pc, #4060]	; 51ec <read_header+0x10ac>
    420c:	str	r0, [sp, #224]	; 0xe0
    4210:	str	r1, [sp, #220]	; 0xdc
    4214:	bl	0 <__aeabi_read_tp>
    4218:	ldr	r1, [sp, #220]	; 0xdc
    421c:	ldr	ip, [r0, r1]
    4220:	ldr	ip, [ip]
    4224:	ldr	lr, [fp, #-16]
    4228:	ldr	r2, [lr, #4]
    422c:	add	lr, sp, #240	; 0xf0
    4230:	str	r0, [sp, #216]	; 0xd8
    4234:	mov	r0, ip
    4238:	ldr	r1, [sp, #224]	; 0xe0
    423c:	mov	r3, lr
    4240:	str	lr, [sp, #212]	; 0xd4
    4244:	bl	0 <coda_mem_string_new>
    4248:	str	r0, [fp, #-24]	; 0xffffffe8
    424c:	ldr	r0, [fp, #-16]
    4250:	ldr	r0, [r0, #8]
    4254:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4258:	movw	r1, #0
    425c:	movt	r1, #0
    4260:	ldr	r3, [sp, #224]	; 0xe0
    4264:	bl	0 <coda_mem_record_add_field>
    4268:	add	r1, sp, #324	; 0x144
    426c:	add	r2, r1, #3
    4270:	ldr	r3, [sp, #212]	; 0xd4
    4274:	add	ip, r3, #12
    4278:	add	r1, r1, #15
    427c:	vld1.8	{d16-d17}, [r1]
    4280:	vst1.32	{d16-d17}, [ip]
    4284:	vld1.8	{d16-d17}, [r2]
    4288:	mov	r1, #28
    428c:	vst1.64	{d16-d17}, [r3], r1
    4290:	ldr	r1, [sp, #224]	; 0xe0
    4294:	strb	r1, [r3]
    4298:	ldr	r2, [sp, #216]	; 0xd8
    429c:	ldr	r3, [sp, #220]	; 0xdc
    42a0:	ldr	ip, [r2, r3]
    42a4:	ldr	ip, [ip, #4]
    42a8:	ldr	lr, [fp, #-16]
    42ac:	ldr	r2, [lr, #4]
    42b0:	str	r0, [sp, #208]	; 0xd0
    42b4:	mov	r0, ip
    42b8:	ldr	r3, [sp, #212]	; 0xd4
    42bc:	bl	0 <coda_mem_string_new>
    42c0:	str	r0, [fp, #-20]	; 0xffffffec
    42c4:	ldr	r0, [sp, #216]	; 0xd8
    42c8:	ldr	r1, [sp, #220]	; 0xdc
    42cc:	ldr	r2, [r0, r1]
    42d0:	ldr	r2, [r2, #8]
    42d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    42d8:	mov	r0, r2
    42dc:	movw	r1, #0
    42e0:	mov	r2, r3
    42e4:	bl	0 <coda_mem_time_new>
    42e8:	str	r0, [fp, #-24]	; 0xffffffe8
    42ec:	ldr	r0, [fp, #-16]
    42f0:	ldr	r0, [r0, #8]
    42f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42f8:	movw	r1, #0
    42fc:	movt	r1, #0
    4300:	movw	r3, #0
    4304:	bl	0 <coda_mem_record_add_field>
    4308:	add	r1, sp, #324	; 0x144
    430c:	add	r1, r1, #32
    4310:	str	r0, [sp, #204]	; 0xcc
    4314:	mov	r0, r1
    4318:	movw	r1, #7
    431c:	add	r2, sp, #304	; 0x130
    4320:	movw	r3, #0
    4324:	bl	0 <coda_ascii_parse_int64>
    4328:	cmp	r0, #0
    432c:	bge	435c <read_header+0x21c>
    4330:	ldr	r0, [fp, #-16]
    4334:	ldr	r1, [r0, #48]	; 0x30
    4338:	ldr	r0, [fp, #-16]
    433c:	ldr	r0, [r0, #52]	; 0x34
    4340:	add	r2, r0, #32
    4344:	movw	r0, #0
    4348:	movt	r0, #0
    434c:	bl	0 <coda_add_error_message>
    4350:	mvn	r0, #0
    4354:	str	r0, [fp, #-12]
    4358:	b	5524 <read_header+0x13e4>
    435c:	add	r3, sp, #240	; 0xf0
    4360:	ldr	r0, [pc, #3716]	; 51ec <read_header+0x10ac>
    4364:	str	r3, [sp, #200]	; 0xc8
    4368:	str	r0, [sp, #196]	; 0xc4
    436c:	bl	0 <__aeabi_read_tp>
    4370:	ldr	r3, [sp, #196]	; 0xc4
    4374:	ldr	ip, [r0, r3]
    4378:	ldr	ip, [ip, #12]
    437c:	ldr	lr, [fp, #-16]
    4380:	ldr	r2, [lr, #4]
    4384:	ldr	r3, [sp, #304]	; 0x130
    4388:	mov	lr, #0
    438c:	str	r0, [sp, #192]	; 0xc0
    4390:	mov	r0, ip
    4394:	mov	r1, lr
    4398:	str	lr, [sp, #188]	; 0xbc
    439c:	bl	0 <coda_mem_int32_new>
    43a0:	str	r0, [fp, #-24]	; 0xffffffe8
    43a4:	ldr	r0, [fp, #-16]
    43a8:	ldr	r0, [r0, #8]
    43ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43b0:	movw	r1, #0
    43b4:	movt	r1, #0
    43b8:	ldr	r3, [sp, #188]	; 0xbc
    43bc:	bl	0 <coda_mem_record_add_field>
    43c0:	ldrb	r1, [sp, #368]	; 0x170
    43c4:	strb	r1, [sp, #244]	; 0xf4
    43c8:	ldr	r1, [sp, #364]	; 0x16c
    43cc:	str	r1, [sp, #240]	; 0xf0
    43d0:	ldr	r1, [sp, #188]	; 0xbc
    43d4:	strb	r1, [sp, #245]	; 0xf5
    43d8:	ldr	r2, [sp, #192]	; 0xc0
    43dc:	ldr	r3, [sp, #196]	; 0xc4
    43e0:	ldr	ip, [r2, r3]
    43e4:	ldr	ip, [ip, #16]
    43e8:	ldr	lr, [fp, #-16]
    43ec:	ldr	r2, [lr, #4]
    43f0:	add	lr, sp, #240	; 0xf0
    43f4:	str	r0, [sp, #184]	; 0xb8
    43f8:	mov	r0, ip
    43fc:	mov	r3, lr
    4400:	str	lr, [sp, #180]	; 0xb4
    4404:	bl	0 <coda_mem_string_new>
    4408:	str	r0, [fp, #-24]	; 0xffffffe8
    440c:	ldr	r0, [fp, #-16]
    4410:	ldr	r0, [r0, #8]
    4414:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4418:	movw	r1, #0
    441c:	movt	r1, #0
    4420:	ldr	r3, [sp, #188]	; 0xbc
    4424:	bl	0 <coda_mem_record_add_field>
    4428:	ldrb	r1, [sp, #374]	; 0x176
    442c:	strb	r1, [sp, #244]	; 0xf4
    4430:	ldr	r1, [sp, #370]	; 0x172
    4434:	str	r1, [sp, #240]	; 0xf0
    4438:	ldr	r1, [sp, #188]	; 0xbc
    443c:	strb	r1, [sp, #245]	; 0xf5
    4440:	ldr	r2, [sp, #192]	; 0xc0
    4444:	ldr	r3, [sp, #196]	; 0xc4
    4448:	ldr	ip, [r2, r3]
    444c:	ldr	ip, [ip, #20]
    4450:	ldr	lr, [fp, #-16]
    4454:	ldr	r2, [lr, #4]
    4458:	str	r0, [sp, #176]	; 0xb0
    445c:	mov	r0, ip
    4460:	ldr	r3, [sp, #180]	; 0xb4
    4464:	bl	0 <coda_mem_string_new>
    4468:	str	r0, [fp, #-24]	; 0xffffffe8
    446c:	ldr	r0, [fp, #-16]
    4470:	ldr	r0, [r0, #8]
    4474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4478:	movw	r1, #0
    447c:	movt	r1, #0
    4480:	ldr	r3, [sp, #188]	; 0xbc
    4484:	bl	0 <coda_mem_record_add_field>
    4488:	ldrb	r1, [sp, #378]	; 0x17a
    448c:	strb	r1, [sp, #242]	; 0xf2
    4490:	add	lr, sp, #256	; 0x100
    4494:	ldrh	r1, [lr, #120]	; 0x78
    4498:	strh	r1, [sp, #240]	; 0xf0
    449c:	ldr	r1, [sp, #188]	; 0xbc
    44a0:	strb	r1, [sp, #243]	; 0xf3
    44a4:	ldr	r2, [sp, #192]	; 0xc0
    44a8:	ldr	r3, [sp, #196]	; 0xc4
    44ac:	ldr	ip, [r2, r3]
    44b0:	ldr	ip, [ip, #24]
    44b4:	ldr	lr, [fp, #-16]
    44b8:	ldr	r2, [lr, #4]
    44bc:	str	r0, [sp, #172]	; 0xac
    44c0:	mov	r0, ip
    44c4:	ldr	r3, [sp, #180]	; 0xb4
    44c8:	bl	0 <coda_mem_string_new>
    44cc:	str	r0, [fp, #-24]	; 0xffffffe8
    44d0:	ldr	r0, [fp, #-16]
    44d4:	ldr	r0, [r0, #8]
    44d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44dc:	movw	r1, #0
    44e0:	movt	r1, #0
    44e4:	ldr	r3, [sp, #188]	; 0xbc
    44e8:	bl	0 <coda_mem_record_add_field>
    44ec:	ldr	r1, [sp, #380]	; 0x17c
    44f0:	str	r1, [sp, #240]	; 0xf0
    44f4:	ldr	r1, [sp, #188]	; 0xbc
    44f8:	strb	r1, [sp, #244]	; 0xf4
    44fc:	ldr	r2, [sp, #192]	; 0xc0
    4500:	ldr	r3, [sp, #196]	; 0xc4
    4504:	ldr	ip, [r2, r3]
    4508:	ldr	ip, [ip, #28]
    450c:	ldr	lr, [fp, #-16]
    4510:	ldr	r2, [lr, #4]
    4514:	str	r0, [sp, #168]	; 0xa8
    4518:	mov	r0, ip
    451c:	movw	r1, #0
    4520:	ldr	r3, [sp, #200]	; 0xc8
    4524:	bl	0 <coda_mem_string_new>
    4528:	str	r0, [fp, #-24]	; 0xffffffe8
    452c:	ldr	r0, [fp, #-16]
    4530:	ldr	r0, [r0, #8]
    4534:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4538:	movw	r1, #0
    453c:	movt	r1, #0
    4540:	movw	r3, #0
    4544:	bl	0 <coda_mem_record_add_field>
    4548:	ldr	r1, [fp, #-16]
    454c:	ldr	r1, [r1]
    4550:	str	r0, [sp, #164]	; 0xa4
    4554:	mov	r0, r1
    4558:	bl	0 <ftell>
    455c:	add	r1, sp, #324	; 0x144
    4560:	ldr	r2, [fp, #-16]
    4564:	str	r0, [r2, #52]	; 0x34
    4568:	ldr	r0, [fp, #-16]
    456c:	ldr	r2, [r0, #48]	; 0x30
    4570:	add	r2, r2, #1
    4574:	str	r2, [r0, #48]	; 0x30
    4578:	ldr	r0, [fp, #-16]
    457c:	ldr	r0, [r0]
    4580:	bl	7f84 <get_line>
    4584:	str	r0, [sp, #236]	; 0xec
    4588:	ldr	r0, [sp, #236]	; 0xec
    458c:	cmp	r0, #0
    4590:	bge	45a0 <read_header+0x460>
    4594:	mvn	r0, #0
    4598:	str	r0, [fp, #-12]
    459c:	b	5524 <read_header+0x13e4>
    45a0:	ldr	r0, [sp, #236]	; 0xec
    45a4:	cmp	r0, #60	; 0x3c
    45a8:	bge	45ec <read_header+0x4ac>
    45ac:	ldr	r2, [sp, #236]	; 0xec
    45b0:	ldr	r0, [fp, #-16]
    45b4:	ldr	r3, [r0, #48]	; 0x30
    45b8:	ldr	r0, [fp, #-16]
    45bc:	ldr	r0, [r0, #52]	; 0x34
    45c0:	mvn	r1, #21
    45c4:	str	r0, [sp, #160]	; 0xa0
    45c8:	mov	r0, r1
    45cc:	movw	r1, #0
    45d0:	movt	r1, #0
    45d4:	ldr	ip, [sp, #160]	; 0xa0
    45d8:	str	ip, [sp]
    45dc:	bl	0 <coda_set_error>
    45e0:	mvn	r0, #0
    45e4:	str	r0, [fp, #-12]
    45e8:	b	5524 <read_header+0x13e4>
    45ec:	add	r0, sp, #324	; 0x144
    45f0:	movw	r1, #0
    45f4:	movt	r1, #0
    45f8:	mov	r2, #3
    45fc:	bl	0 <memcmp>
    4600:	cmp	r0, #0
    4604:	beq	4634 <read_header+0x4f4>
    4608:	ldr	r0, [fp, #-16]
    460c:	ldr	r2, [r0, #48]	; 0x30
    4610:	ldr	r0, [fp, #-16]
    4614:	ldr	r3, [r0, #52]	; 0x34
    4618:	mvn	r0, #21
    461c:	movw	r1, #0
    4620:	movt	r1, #0
    4624:	bl	0 <coda_set_error>
    4628:	mvn	r0, #0
    462c:	str	r0, [fp, #-12]
    4630:	b	5524 <read_header+0x13e4>
    4634:	add	r0, sp, #324	; 0x144
    4638:	add	r0, r0, #3
    463c:	movw	r1, #4
    4640:	add	r2, sp, #304	; 0x130
    4644:	movw	r3, #0
    4648:	bl	0 <coda_ascii_parse_int64>
    464c:	cmp	r0, #0
    4650:	bge	4680 <read_header+0x540>
    4654:	ldr	r0, [fp, #-16]
    4658:	ldr	r1, [r0, #48]	; 0x30
    465c:	ldr	r0, [fp, #-16]
    4660:	ldr	r0, [r0, #52]	; 0x34
    4664:	add	r2, r0, #3
    4668:	movw	r0, #0
    466c:	movt	r0, #0
    4670:	bl	0 <coda_add_error_message>
    4674:	mvn	r0, #0
    4678:	str	r0, [fp, #-12]
    467c:	b	5524 <read_header+0x13e4>
    4680:	ldr	r0, [pc, #3752]	; 5530 <read_header+0x13f0>
    4684:	str	r0, [sp, #156]	; 0x9c
    4688:	bl	0 <__aeabi_read_tp>
    468c:	ldr	ip, [sp, #156]	; 0x9c
    4690:	ldr	r0, [r0, ip]
    4694:	ldr	r0, [r0, #32]
    4698:	ldr	ip, [fp, #-16]
    469c:	ldr	r2, [ip, #4]
    46a0:	add	lr, sp, #256	; 0x100
    46a4:	ldrh	ip, [lr, #48]	; 0x30
    46a8:	movw	r1, #0
    46ac:	sxth	r3, ip
    46b0:	bl	0 <coda_mem_int16_new>
    46b4:	str	r0, [fp, #-24]	; 0xffffffe8
    46b8:	ldr	r0, [fp, #-16]
    46bc:	ldr	r0, [r0, #8]
    46c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    46c4:	movw	r1, #0
    46c8:	movt	r1, #0
    46cc:	movw	r3, #0
    46d0:	bl	0 <coda_mem_record_add_field>
    46d4:	add	r1, sp, #324	; 0x144
    46d8:	add	r1, r1, #8
    46dc:	str	r0, [sp, #152]	; 0x98
    46e0:	mov	r0, r1
    46e4:	movw	r1, #15
    46e8:	add	r2, sp, #312	; 0x138
    46ec:	movw	r3, #0
    46f0:	bl	0 <coda_ascii_parse_double>
    46f4:	cmp	r0, #0
    46f8:	bge	4728 <read_header+0x5e8>
    46fc:	ldr	r0, [fp, #-16]
    4700:	ldr	r1, [r0, #48]	; 0x30
    4704:	ldr	r0, [fp, #-16]
    4708:	ldr	r0, [r0, #52]	; 0x34
    470c:	add	r2, r0, #8
    4710:	movw	r0, #0
    4714:	movt	r0, #0
    4718:	bl	0 <coda_add_error_message>
    471c:	mvn	r0, #0
    4720:	str	r0, [fp, #-12]
    4724:	b	5524 <read_header+0x13e4>
    4728:	ldr	r0, [pc, #3584]	; 5530 <read_header+0x13f0>
    472c:	str	r0, [sp, #148]	; 0x94
    4730:	bl	0 <__aeabi_read_tp>
    4734:	ldr	ip, [sp, #148]	; 0x94
    4738:	ldr	r0, [r0, ip]
    473c:	ldr	r0, [r0, #36]	; 0x24
    4740:	ldr	ip, [fp, #-16]
    4744:	ldr	r2, [ip, #4]
    4748:	vldr	d0, [sp, #312]	; 0x138
    474c:	movw	r1, #0
    4750:	bl	0 <coda_mem_double_new>
    4754:	str	r0, [fp, #-24]	; 0xffffffe8
    4758:	ldr	r0, [fp, #-16]
    475c:	ldr	r0, [r0, #8]
    4760:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4764:	movw	r1, #0
    4768:	movt	r1, #0
    476c:	movw	r3, #0
    4770:	bl	0 <coda_mem_record_add_field>
    4774:	add	r1, sp, #324	; 0x144
    4778:	add	r1, r1, #24
    477c:	str	r0, [sp, #144]	; 0x90
    4780:	mov	r0, r1
    4784:	movw	r1, #14
    4788:	add	r2, sp, #312	; 0x138
    478c:	movw	r3, #0
    4790:	bl	0 <coda_ascii_parse_double>
    4794:	cmp	r0, #0
    4798:	bge	47c8 <read_header+0x688>
    479c:	ldr	r0, [fp, #-16]
    47a0:	ldr	r1, [r0, #48]	; 0x30
    47a4:	ldr	r0, [fp, #-16]
    47a8:	ldr	r0, [r0, #52]	; 0x34
    47ac:	add	r2, r0, #24
    47b0:	movw	r0, #0
    47b4:	movt	r0, #0
    47b8:	bl	0 <coda_add_error_message>
    47bc:	mvn	r0, #0
    47c0:	str	r0, [fp, #-12]
    47c4:	b	5524 <read_header+0x13e4>
    47c8:	ldr	r0, [pc, #3424]	; 5530 <read_header+0x13f0>
    47cc:	str	r0, [sp, #140]	; 0x8c
    47d0:	bl	0 <__aeabi_read_tp>
    47d4:	ldr	ip, [sp, #140]	; 0x8c
    47d8:	ldr	r0, [r0, ip]
    47dc:	ldr	r0, [r0, #40]	; 0x28
    47e0:	ldr	ip, [fp, #-16]
    47e4:	ldr	r2, [ip, #4]
    47e8:	vldr	d0, [sp, #312]	; 0x138
    47ec:	movw	r1, #0
    47f0:	bl	0 <coda_mem_double_new>
    47f4:	str	r0, [fp, #-24]	; 0xffffffe8
    47f8:	ldr	r0, [fp, #-16]
    47fc:	ldr	r0, [r0, #8]
    4800:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4804:	movw	r1, #0
    4808:	movt	r1, #0
    480c:	movw	r3, #0
    4810:	bl	0 <coda_mem_record_add_field>
    4814:	add	r1, sp, #324	; 0x144
    4818:	add	r1, r1, #39	; 0x27
    481c:	str	r0, [sp, #136]	; 0x88
    4820:	mov	r0, r1
    4824:	movw	r1, #5
    4828:	add	r2, sp, #304	; 0x130
    482c:	movw	r3, #0
    4830:	bl	0 <coda_ascii_parse_int64>
    4834:	cmp	r0, #0
    4838:	bge	4868 <read_header+0x728>
    483c:	ldr	r0, [fp, #-16]
    4840:	ldr	r1, [r0, #48]	; 0x30
    4844:	ldr	r0, [fp, #-16]
    4848:	ldr	r0, [r0, #52]	; 0x34
    484c:	add	r2, r0, #39	; 0x27
    4850:	movw	r0, #0
    4854:	movt	r0, #0
    4858:	bl	0 <coda_add_error_message>
    485c:	mvn	r0, #0
    4860:	str	r0, [fp, #-12]
    4864:	b	5524 <read_header+0x13e4>
    4868:	ldr	r0, [pc, #3264]	; 5530 <read_header+0x13f0>
    486c:	str	r0, [sp, #132]	; 0x84
    4870:	bl	0 <__aeabi_read_tp>
    4874:	ldr	ip, [sp, #132]	; 0x84
    4878:	ldr	r0, [r0, ip]
    487c:	ldr	r0, [r0, #44]	; 0x2c
    4880:	ldr	ip, [fp, #-16]
    4884:	ldr	r2, [ip, #4]
    4888:	ldr	r3, [sp, #304]	; 0x130
    488c:	movw	r1, #0
    4890:	bl	0 <coda_mem_int32_new>
    4894:	str	r0, [fp, #-24]	; 0xffffffe8
    4898:	ldr	r0, [fp, #-16]
    489c:	ldr	r0, [r0, #8]
    48a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48a4:	movw	r1, #0
    48a8:	movt	r1, #0
    48ac:	movw	r3, #0
    48b0:	bl	0 <coda_mem_record_add_field>
    48b4:	add	r1, sp, #324	; 0x144
    48b8:	add	r1, r1, #45	; 0x2d
    48bc:	str	r0, [sp, #128]	; 0x80
    48c0:	mov	r0, r1
    48c4:	movw	r1, #15
    48c8:	add	r2, sp, #312	; 0x138
    48cc:	movw	r3, #0
    48d0:	bl	0 <coda_ascii_parse_double>
    48d4:	cmp	r0, #0
    48d8:	bge	4908 <read_header+0x7c8>
    48dc:	ldr	r0, [fp, #-16]
    48e0:	ldr	r1, [r0, #48]	; 0x30
    48e4:	ldr	r0, [fp, #-16]
    48e8:	ldr	r0, [r0, #52]	; 0x34
    48ec:	add	r2, r0, #45	; 0x2d
    48f0:	movw	r0, #0
    48f4:	movt	r0, #0
    48f8:	bl	0 <coda_add_error_message>
    48fc:	mvn	r0, #0
    4900:	str	r0, [fp, #-12]
    4904:	b	5524 <read_header+0x13e4>
    4908:	ldr	r0, [pc, #3104]	; 5530 <read_header+0x13f0>
    490c:	str	r0, [sp, #124]	; 0x7c
    4910:	bl	0 <__aeabi_read_tp>
    4914:	ldr	ip, [sp, #124]	; 0x7c
    4918:	ldr	r0, [r0, ip]
    491c:	ldr	r0, [r0, #48]	; 0x30
    4920:	ldr	ip, [fp, #-16]
    4924:	ldr	r2, [ip, #4]
    4928:	vldr	d0, [sp, #312]	; 0x138
    492c:	movw	r1, #0
    4930:	bl	0 <coda_mem_double_new>
    4934:	str	r0, [fp, #-24]	; 0xffffffe8
    4938:	ldr	r0, [fp, #-16]
    493c:	ldr	r0, [r0, #8]
    4940:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4944:	movw	r1, #0
    4948:	movt	r1, #0
    494c:	movw	r3, #0
    4950:	bl	0 <coda_mem_record_add_field>
    4954:	ldr	r1, [fp, #-16]
    4958:	ldr	r1, [r1]
    495c:	str	r0, [sp, #120]	; 0x78
    4960:	mov	r0, r1
    4964:	bl	0 <ftell>
    4968:	add	r1, sp, #324	; 0x144
    496c:	ldr	r2, [fp, #-16]
    4970:	str	r0, [r2, #52]	; 0x34
    4974:	ldr	r0, [fp, #-16]
    4978:	ldr	r2, [r0, #48]	; 0x30
    497c:	add	r2, r2, #1
    4980:	str	r2, [r0, #48]	; 0x30
    4984:	ldr	r0, [fp, #-16]
    4988:	ldr	r0, [r0]
    498c:	bl	7f84 <get_line>
    4990:	str	r0, [sp, #236]	; 0xec
    4994:	ldr	r0, [sp, #236]	; 0xec
    4998:	cmp	r0, #0
    499c:	bge	49ac <read_header+0x86c>
    49a0:	mvn	r0, #0
    49a4:	str	r0, [fp, #-12]
    49a8:	b	5524 <read_header+0x13e4>
    49ac:	ldr	r0, [sp, #236]	; 0xec
    49b0:	cmp	r0, #60	; 0x3c
    49b4:	bge	49f8 <read_header+0x8b8>
    49b8:	ldr	r2, [sp, #236]	; 0xec
    49bc:	ldr	r0, [fp, #-16]
    49c0:	ldr	r3, [r0, #48]	; 0x30
    49c4:	ldr	r0, [fp, #-16]
    49c8:	ldr	r0, [r0, #52]	; 0x34
    49cc:	mvn	r1, #21
    49d0:	str	r0, [sp, #116]	; 0x74
    49d4:	mov	r0, r1
    49d8:	movw	r1, #0
    49dc:	movt	r1, #0
    49e0:	ldr	ip, [sp, #116]	; 0x74
    49e4:	str	ip, [sp]
    49e8:	bl	0 <coda_set_error>
    49ec:	mvn	r0, #0
    49f0:	str	r0, [fp, #-12]
    49f4:	b	5524 <read_header+0x13e4>
    49f8:	add	r0, sp, #324	; 0x144
    49fc:	ldr	r0, [r0]
    4a00:	movw	r1, #57301	; 0xdfd5
    4a04:	movt	r1, #57311	; 0xdfdf
    4a08:	add	r1, r0, r1
    4a0c:	movw	r2, #8235	; 0x202b
    4a10:	movt	r2, #8224	; 0x2020
    4a14:	cmp	r0, r2
    4a18:	movwne	r1, #1
    4a1c:	cmp	r1, #0
    4a20:	beq	4a50 <read_header+0x910>
    4a24:	ldr	r0, [fp, #-16]
    4a28:	ldr	r2, [r0, #48]	; 0x30
    4a2c:	ldr	r0, [fp, #-16]
    4a30:	ldr	r3, [r0, #52]	; 0x34
    4a34:	mvn	r0, #21
    4a38:	movw	r1, #0
    4a3c:	movt	r1, #0
    4a40:	bl	0 <coda_set_error>
    4a44:	mvn	r0, #0
    4a48:	str	r0, [fp, #-12]
    4a4c:	b	5524 <read_header+0x13e4>
    4a50:	add	r0, sp, #324	; 0x144
    4a54:	add	r0, r0, #4
    4a58:	movw	r1, #2
    4a5c:	add	r2, sp, #304	; 0x130
    4a60:	movw	r3, #0
    4a64:	bl	0 <coda_ascii_parse_int64>
    4a68:	cmp	r0, #0
    4a6c:	bge	4a9c <read_header+0x95c>
    4a70:	ldr	r0, [fp, #-16]
    4a74:	ldr	r1, [r0, #48]	; 0x30
    4a78:	ldr	r0, [fp, #-16]
    4a7c:	ldr	r0, [r0, #52]	; 0x34
    4a80:	add	r2, r0, #4
    4a84:	movw	r0, #0
    4a88:	movt	r0, #0
    4a8c:	bl	0 <coda_add_error_message>
    4a90:	mvn	r0, #0
    4a94:	str	r0, [fp, #-12]
    4a98:	b	5524 <read_header+0x13e4>
    4a9c:	ldr	r0, [pc, #2700]	; 5530 <read_header+0x13f0>
    4aa0:	str	r0, [sp, #112]	; 0x70
    4aa4:	bl	0 <__aeabi_read_tp>
    4aa8:	ldr	ip, [sp, #112]	; 0x70
    4aac:	ldr	lr, [r0, ip]
    4ab0:	ldr	lr, [lr, #52]	; 0x34
    4ab4:	ldr	r1, [fp, #-16]
    4ab8:	ldr	r2, [r1, #4]
    4abc:	ldrb	r3, [sp, #304]	; 0x130
    4ac0:	mov	r1, #0
    4ac4:	str	r0, [sp, #108]	; 0x6c
    4ac8:	mov	r0, lr
    4acc:	str	r1, [sp, #104]	; 0x68
    4ad0:	bl	0 <coda_mem_uint8_new>
    4ad4:	str	r0, [fp, #-24]	; 0xffffffe8
    4ad8:	ldr	r0, [fp, #-16]
    4adc:	ldr	r0, [r0, #8]
    4ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4ae4:	movw	r1, #0
    4ae8:	movt	r1, #0
    4aec:	ldr	r3, [sp, #104]	; 0x68
    4af0:	bl	0 <coda_mem_record_add_field>
    4af4:	ldr	r1, [sp, #304]	; 0x130
    4af8:	ldr	r2, [fp, #-16]
    4afc:	str	r1, [r2, #40]	; 0x28
    4b00:	ldr	r1, [sp, #108]	; 0x6c
    4b04:	ldr	r2, [sp, #112]	; 0x70
    4b08:	ldr	r3, [r1, r2]
    4b0c:	ldr	r3, [r3, #60]	; 0x3c
    4b10:	str	r0, [sp, #100]	; 0x64
    4b14:	mov	r0, r3
    4b18:	movw	r1, #0
    4b1c:	bl	0 <coda_mem_array_new>
    4b20:	str	r0, [fp, #-28]	; 0xffffffe4
    4b24:	movw	r0, #0
    4b28:	str	r0, [sp, #232]	; 0xe8
    4b2c:	ldr	r0, [sp, #232]	; 0xe8
    4b30:	cmp	r0, #85	; 0x55
    4b34:	bge	4d20 <read_header+0xbe0>
    4b38:	ldr	r0, [sp, #232]	; 0xe8
    4b3c:	movw	r1, #30841	; 0x7879
    4b40:	movt	r1, #30840	; 0x7878
    4b44:	smmul	r1, r0, r1
    4b48:	asr	r2, r1, #3
    4b4c:	add	r1, r2, r1, lsr #31
    4b50:	add	r1, r1, r1, lsl #4
    4b54:	sub	r0, r0, r1
    4b58:	cmp	r0, #0
    4b5c:	bne	4c6c <read_header+0xb2c>
    4b60:	ldr	r0, [sp, #232]	; 0xe8
    4b64:	cmp	r0, #0
    4b68:	ble	4c6c <read_header+0xb2c>
    4b6c:	ldr	r0, [fp, #-16]
    4b70:	ldr	r0, [r0]
    4b74:	bl	0 <ftell>
    4b78:	add	r1, sp, #324	; 0x144
    4b7c:	ldr	lr, [fp, #-16]
    4b80:	str	r0, [lr, #52]	; 0x34
    4b84:	ldr	r0, [fp, #-16]
    4b88:	ldr	lr, [r0, #48]	; 0x30
    4b8c:	add	lr, lr, #1
    4b90:	str	lr, [r0, #48]	; 0x30
    4b94:	ldr	r0, [fp, #-16]
    4b98:	ldr	r0, [r0]
    4b9c:	bl	7f84 <get_line>
    4ba0:	str	r0, [sp, #236]	; 0xec
    4ba4:	ldr	r0, [sp, #236]	; 0xec
    4ba8:	cmp	r0, #0
    4bac:	bge	4bc4 <read_header+0xa84>
    4bb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4bb4:	bl	0 <coda_dynamic_type_delete>
    4bb8:	mvn	r0, #0
    4bbc:	str	r0, [fp, #-12]
    4bc0:	b	5524 <read_header+0x13e4>
    4bc4:	ldr	r0, [sp, #236]	; 0xec
    4bc8:	cmp	r0, #60	; 0x3c
    4bcc:	bge	4c18 <read_header+0xad8>
    4bd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4bd4:	bl	0 <coda_dynamic_type_delete>
    4bd8:	ldr	r2, [sp, #236]	; 0xec
    4bdc:	ldr	r0, [fp, #-16]
    4be0:	ldr	r3, [r0, #48]	; 0x30
    4be4:	ldr	r0, [fp, #-16]
    4be8:	ldr	r0, [r0, #52]	; 0x34
    4bec:	mvn	lr, #21
    4bf0:	str	r0, [sp, #96]	; 0x60
    4bf4:	mov	r0, lr
    4bf8:	movw	r1, #0
    4bfc:	movt	r1, #0
    4c00:	ldr	lr, [sp, #96]	; 0x60
    4c04:	str	lr, [sp]
    4c08:	bl	0 <coda_set_error>
    4c0c:	mvn	r0, #0
    4c10:	str	r0, [fp, #-12]
    4c14:	b	5524 <read_header+0x13e4>
    4c18:	add	r0, sp, #324	; 0x144
    4c1c:	movw	r1, #0
    4c20:	movt	r1, #0
    4c24:	mov	r2, #9
    4c28:	bl	0 <memcmp>
    4c2c:	cmp	r0, #0
    4c30:	beq	4c68 <read_header+0xb28>
    4c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4c38:	bl	0 <coda_dynamic_type_delete>
    4c3c:	ldr	r0, [fp, #-16]
    4c40:	ldr	r2, [r0, #48]	; 0x30
    4c44:	ldr	r0, [fp, #-16]
    4c48:	ldr	r3, [r0, #52]	; 0x34
    4c4c:	mvn	r0, #21
    4c50:	movw	r1, #0
    4c54:	movt	r1, #0
    4c58:	bl	0 <coda_set_error>
    4c5c:	mvn	r0, #0
    4c60:	str	r0, [fp, #-12]
    4c64:	b	5524 <read_header+0x13e4>
    4c68:	b	4c6c <read_header+0xb2c>
    4c6c:	ldr	r0, [sp, #232]	; 0xe8
    4c70:	ldr	r1, [fp, #-16]
    4c74:	ldr	r1, [r1, #40]	; 0x28
    4c78:	cmp	r0, r1
    4c7c:	bge	4d0c <read_header+0xbcc>
    4c80:	add	r3, sp, #240	; 0xf0
    4c84:	ldr	r0, [sp, #232]	; 0xe8
    4c88:	movw	r1, #30841	; 0x7879
    4c8c:	movt	r1, #30840	; 0x7878
    4c90:	smmul	r1, r0, r1
    4c94:	asr	r2, r1, #3
    4c98:	add	r1, r2, r1, lsr #31
    4c9c:	add	r1, r1, r1, lsl #4
    4ca0:	sub	r0, r0, r1
    4ca4:	add	r0, r0, r0, lsl #1
    4ca8:	add	r1, sp, #324	; 0x144
    4cac:	add	r0, r1, r0
    4cb0:	ldrb	r1, [r0, #11]
    4cb4:	strb	r1, [sp, #242]	; 0xf2
    4cb8:	ldrh	r0, [r0, #9]
    4cbc:	strh	r0, [sp, #240]	; 0xf0
    4cc0:	mov	r0, #0
    4cc4:	strb	r0, [sp, #243]	; 0xf3
    4cc8:	ldr	r0, [pc, #2144]	; 5530 <read_header+0x13f0>
    4ccc:	str	r3, [sp, #92]	; 0x5c
    4cd0:	str	r0, [sp, #88]	; 0x58
    4cd4:	bl	0 <__aeabi_read_tp>
    4cd8:	ldr	r1, [sp, #88]	; 0x58
    4cdc:	ldr	r0, [r0, r1]
    4ce0:	ldr	r0, [r0, #56]	; 0x38
    4ce4:	ldr	r1, [fp, #-16]
    4ce8:	ldr	r2, [r1, #4]
    4cec:	movw	r1, #0
    4cf0:	ldr	r3, [sp, #92]	; 0x5c
    4cf4:	bl	0 <coda_mem_string_new>
    4cf8:	str	r0, [fp, #-24]	; 0xffffffe8
    4cfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4d04:	bl	0 <coda_mem_array_add_element>
    4d08:	str	r0, [sp, #84]	; 0x54
    4d0c:	b	4d10 <read_header+0xbd0>
    4d10:	ldr	r0, [sp, #232]	; 0xe8
    4d14:	add	r0, r0, #1
    4d18:	str	r0, [sp, #232]	; 0xe8
    4d1c:	b	4b2c <read_header+0x9ec>
    4d20:	ldr	r0, [fp, #-16]
    4d24:	ldr	r0, [r0, #8]
    4d28:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4d2c:	movw	r1, #0
    4d30:	movt	r1, #0
    4d34:	mov	r3, #0
    4d38:	bl	0 <coda_mem_record_add_field>
    4d3c:	ldr	r1, [pc, #2028]	; 5530 <read_header+0x13f0>
    4d40:	str	r0, [sp, #80]	; 0x50
    4d44:	str	r1, [sp, #76]	; 0x4c
    4d48:	bl	0 <__aeabi_read_tp>
    4d4c:	ldr	r1, [sp, #76]	; 0x4c
    4d50:	ldr	r0, [r0, r1]
    4d54:	ldr	r0, [r0, #68]	; 0x44
    4d58:	movw	r1, #0
    4d5c:	bl	0 <coda_mem_array_new>
    4d60:	str	r0, [fp, #-28]	; 0xffffffe4
    4d64:	movw	r0, #0
    4d68:	str	r0, [sp, #232]	; 0xe8
    4d6c:	ldr	r0, [sp, #232]	; 0xe8
    4d70:	cmp	r0, #85	; 0x55
    4d74:	bge	4fac <read_header+0xe6c>
    4d78:	ldr	r0, [sp, #232]	; 0xe8
    4d7c:	movw	r1, #30841	; 0x7879
    4d80:	movt	r1, #30840	; 0x7878
    4d84:	smmul	r1, r0, r1
    4d88:	asr	r2, r1, #3
    4d8c:	add	r1, r2, r1, lsr #31
    4d90:	add	r1, r1, r1, lsl #4
    4d94:	sub	r0, r0, r1
    4d98:	cmp	r0, #0
    4d9c:	bne	4ea0 <read_header+0xd60>
    4da0:	ldr	r0, [fp, #-16]
    4da4:	ldr	r0, [r0]
    4da8:	bl	0 <ftell>
    4dac:	add	r1, sp, #324	; 0x144
    4db0:	ldr	lr, [fp, #-16]
    4db4:	str	r0, [lr, #52]	; 0x34
    4db8:	ldr	r0, [fp, #-16]
    4dbc:	ldr	lr, [r0, #48]	; 0x30
    4dc0:	add	lr, lr, #1
    4dc4:	str	lr, [r0, #48]	; 0x30
    4dc8:	ldr	r0, [fp, #-16]
    4dcc:	ldr	r0, [r0]
    4dd0:	bl	7f84 <get_line>
    4dd4:	str	r0, [sp, #236]	; 0xec
    4dd8:	ldr	r0, [sp, #236]	; 0xec
    4ddc:	cmp	r0, #0
    4de0:	bge	4df8 <read_header+0xcb8>
    4de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4de8:	bl	0 <coda_dynamic_type_delete>
    4dec:	mvn	r0, #0
    4df0:	str	r0, [fp, #-12]
    4df4:	b	5524 <read_header+0x13e4>
    4df8:	ldr	r0, [sp, #236]	; 0xec
    4dfc:	cmp	r0, #60	; 0x3c
    4e00:	bge	4e4c <read_header+0xd0c>
    4e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4e08:	bl	0 <coda_dynamic_type_delete>
    4e0c:	ldr	r2, [sp, #236]	; 0xec
    4e10:	ldr	r0, [fp, #-16]
    4e14:	ldr	r3, [r0, #48]	; 0x30
    4e18:	ldr	r0, [fp, #-16]
    4e1c:	ldr	r0, [r0, #52]	; 0x34
    4e20:	mvn	lr, #21
    4e24:	str	r0, [sp, #72]	; 0x48
    4e28:	mov	r0, lr
    4e2c:	movw	r1, #0
    4e30:	movt	r1, #0
    4e34:	ldr	lr, [sp, #72]	; 0x48
    4e38:	str	lr, [sp]
    4e3c:	bl	0 <coda_set_error>
    4e40:	mvn	r0, #0
    4e44:	str	r0, [fp, #-12]
    4e48:	b	5524 <read_header+0x13e4>
    4e4c:	add	r0, sp, #324	; 0x144
    4e50:	movw	r1, #0
    4e54:	movt	r1, #0
    4e58:	mov	r2, #9
    4e5c:	bl	0 <memcmp>
    4e60:	cmp	r0, #0
    4e64:	beq	4e9c <read_header+0xd5c>
    4e68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4e6c:	bl	0 <coda_dynamic_type_delete>
    4e70:	ldr	r0, [fp, #-16]
    4e74:	ldr	r2, [r0, #48]	; 0x30
    4e78:	ldr	r0, [fp, #-16]
    4e7c:	ldr	r3, [r0, #52]	; 0x34
    4e80:	mvn	r0, #21
    4e84:	movw	r1, #0
    4e88:	movt	r1, #0
    4e8c:	bl	0 <coda_set_error>
    4e90:	mvn	r0, #0
    4e94:	str	r0, [fp, #-12]
    4e98:	b	5524 <read_header+0x13e4>
    4e9c:	b	4ea0 <read_header+0xd60>
    4ea0:	ldr	r0, [sp, #232]	; 0xe8
    4ea4:	ldr	r1, [fp, #-16]
    4ea8:	ldr	r1, [r1, #40]	; 0x28
    4eac:	cmp	r0, r1
    4eb0:	bge	4f98 <read_header+0xe58>
    4eb4:	ldr	r0, [sp, #232]	; 0xe8
    4eb8:	movw	r1, #30841	; 0x7879
    4ebc:	movt	r1, #30840	; 0x7878
    4ec0:	smmul	r1, r0, r1
    4ec4:	asr	r2, r1, #3
    4ec8:	add	r1, r2, r1, lsr #31
    4ecc:	add	r1, r1, r1, lsl #4
    4ed0:	sub	r0, r0, r1
    4ed4:	movw	r1, #3
    4ed8:	mul	r0, r0, r1
    4edc:	add	r0, r0, #9
    4ee0:	add	r2, sp, #324	; 0x144
    4ee4:	add	r0, r2, r0
    4ee8:	add	r2, sp, #304	; 0x130
    4eec:	movw	r3, #0
    4ef0:	bl	0 <coda_ascii_parse_int64>
    4ef4:	cmp	r0, #0
    4ef8:	bge	4f50 <read_header+0xe10>
    4efc:	ldr	r0, [fp, #-16]
    4f00:	ldr	r1, [r0, #48]	; 0x30
    4f04:	ldr	r0, [r0, #52]	; 0x34
    4f08:	add	r0, r0, #9
    4f0c:	ldr	r2, [sp, #232]	; 0xe8
    4f10:	movw	r3, #30841	; 0x7879
    4f14:	movt	r3, #30840	; 0x7878
    4f18:	smmul	r3, r2, r3
    4f1c:	asr	ip, r3, #3
    4f20:	add	r3, ip, r3, lsr #31
    4f24:	add	r3, r3, r3, lsl #4
    4f28:	sub	r2, r2, r3
    4f2c:	movw	r3, #3
    4f30:	mul	r2, r2, r3
    4f34:	add	r2, r0, r2
    4f38:	movw	r0, #0
    4f3c:	movt	r0, #0
    4f40:	bl	0 <coda_add_error_message>
    4f44:	mvn	r0, #0
    4f48:	str	r0, [fp, #-12]
    4f4c:	b	5524 <read_header+0x13e4>
    4f50:	ldr	r0, [pc, #1496]	; 5530 <read_header+0x13f0>
    4f54:	str	r0, [sp, #68]	; 0x44
    4f58:	bl	0 <__aeabi_read_tp>
    4f5c:	ldr	ip, [sp, #68]	; 0x44
    4f60:	ldr	r0, [r0, ip]
    4f64:	ldr	r0, [r0, #64]	; 0x40
    4f68:	ldr	ip, [fp, #-16]
    4f6c:	ldr	r2, [ip, #4]
    4f70:	add	lr, sp, #256	; 0x100
    4f74:	ldrh	ip, [lr, #48]	; 0x30
    4f78:	movw	r1, #0
    4f7c:	sxth	r3, ip
    4f80:	bl	0 <coda_mem_int16_new>
    4f84:	str	r0, [fp, #-24]	; 0xffffffe8
    4f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4f90:	bl	0 <coda_mem_array_add_element>
    4f94:	str	r0, [sp, #64]	; 0x40
    4f98:	b	4f9c <read_header+0xe5c>
    4f9c:	ldr	r0, [sp, #232]	; 0xe8
    4fa0:	add	r0, r0, #1
    4fa4:	str	r0, [sp, #232]	; 0xe8
    4fa8:	b	4d6c <read_header+0xc2c>
    4fac:	ldr	r0, [fp, #-16]
    4fb0:	ldr	r0, [r0, #8]
    4fb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4fb8:	movw	r1, #0
    4fbc:	movt	r1, #0
    4fc0:	movw	r3, #0
    4fc4:	bl	0 <coda_mem_record_add_field>
    4fc8:	ldr	r1, [fp, #-16]
    4fcc:	ldr	r1, [r1]
    4fd0:	str	r0, [sp, #60]	; 0x3c
    4fd4:	mov	r0, r1
    4fd8:	bl	0 <ftell>
    4fdc:	add	r1, sp, #324	; 0x144
    4fe0:	ldr	r2, [fp, #-16]
    4fe4:	str	r0, [r2, #52]	; 0x34
    4fe8:	ldr	r0, [fp, #-16]
    4fec:	ldr	r2, [r0, #48]	; 0x30
    4ff0:	add	r2, r2, #1
    4ff4:	str	r2, [r0, #48]	; 0x30
    4ff8:	ldr	r0, [fp, #-16]
    4ffc:	ldr	r0, [r0]
    5000:	bl	7f84 <get_line>
    5004:	str	r0, [sp, #236]	; 0xec
    5008:	ldr	r0, [sp, #236]	; 0xec
    500c:	cmp	r0, #0
    5010:	bge	5020 <read_header+0xee0>
    5014:	mvn	r0, #0
    5018:	str	r0, [fp, #-12]
    501c:	b	5524 <read_header+0x13e4>
    5020:	ldr	r0, [sp, #236]	; 0xec
    5024:	cmp	r0, #60	; 0x3c
    5028:	bge	506c <read_header+0xf2c>
    502c:	ldr	r2, [sp, #236]	; 0xec
    5030:	ldr	r0, [fp, #-16]
    5034:	ldr	r3, [r0, #48]	; 0x30
    5038:	ldr	r0, [fp, #-16]
    503c:	ldr	r0, [r0, #52]	; 0x34
    5040:	mvn	r1, #21
    5044:	str	r0, [sp, #56]	; 0x38
    5048:	mov	r0, r1
    504c:	movw	r1, #0
    5050:	movt	r1, #0
    5054:	ldr	ip, [sp, #56]	; 0x38
    5058:	str	ip, [sp]
    505c:	bl	0 <coda_set_error>
    5060:	mvn	r0, #0
    5064:	str	r0, [fp, #-12]
    5068:	b	5524 <read_header+0x13e4>
    506c:	add	r0, sp, #324	; 0x144
    5070:	movw	r1, #0
    5074:	movt	r1, #0
    5078:	mov	r2, #3
    507c:	bl	0 <memcmp>
    5080:	cmp	r0, #0
    5084:	beq	50b4 <read_header+0xf74>
    5088:	ldr	r0, [fp, #-16]
    508c:	ldr	r2, [r0, #48]	; 0x30
    5090:	ldr	r0, [fp, #-16]
    5094:	ldr	r3, [r0, #52]	; 0x34
    5098:	mvn	r0, #21
    509c:	movw	r1, #0
    50a0:	movt	r1, #0
    50a4:	bl	0 <coda_set_error>
    50a8:	mvn	r0, #0
    50ac:	str	r0, [fp, #-12]
    50b0:	b	5524 <read_header+0x13e4>
    50b4:	add	r3, sp, #240	; 0xf0
    50b8:	add	lr, sp, #256	; 0x100
    50bc:	ldrh	r0, [lr, #71]	; 0x47
    50c0:	strh	r0, [sp, #240]	; 0xf0
    50c4:	mov	r0, #0
    50c8:	strb	r0, [sp, #242]	; 0xf2
    50cc:	ldr	r1, [pc, #1116]	; 5530 <read_header+0x13f0>
    50d0:	str	r3, [sp, #52]	; 0x34
    50d4:	str	r0, [sp, #48]	; 0x30
    50d8:	str	r1, [sp, #44]	; 0x2c
    50dc:	bl	0 <__aeabi_read_tp>
    50e0:	ldr	r1, [sp, #44]	; 0x2c
    50e4:	ldr	r3, [r0, r1]
    50e8:	ldr	r3, [r3, #72]	; 0x48
    50ec:	ldr	ip, [fp, #-16]
    50f0:	ldr	r2, [ip, #4]
    50f4:	add	ip, sp, #240	; 0xf0
    50f8:	str	r0, [sp, #40]	; 0x28
    50fc:	mov	r0, r3
    5100:	ldr	r1, [sp, #48]	; 0x30
    5104:	mov	r3, ip
    5108:	bl	0 <coda_mem_string_new>
    510c:	str	r0, [fp, #-24]	; 0xffffffe8
    5110:	ldr	r0, [fp, #-16]
    5114:	ldr	r0, [r0, #8]
    5118:	ldr	r2, [fp, #-24]	; 0xffffffe8
    511c:	movw	r1, #0
    5120:	movt	r1, #0
    5124:	ldr	r3, [sp, #48]	; 0x30
    5128:	bl	0 <coda_mem_record_add_field>
    512c:	ldrb	r1, [sp, #335]	; 0x14f
    5130:	strb	r1, [sp, #242]	; 0xf2
    5134:	add	lr, sp, #256	; 0x100
    5138:	ldrh	r1, [lr, #77]	; 0x4d
    513c:	strh	r1, [sp, #240]	; 0xf0
    5140:	ldr	r1, [sp, #48]	; 0x30
    5144:	strb	r1, [sp, #243]	; 0xf3
    5148:	ldr	r2, [sp, #40]	; 0x28
    514c:	ldr	r3, [sp, #44]	; 0x2c
    5150:	ldr	ip, [r2, r3]
    5154:	ldr	ip, [ip, #76]	; 0x4c
    5158:	ldr	lr, [fp, #-16]
    515c:	ldr	r2, [lr, #4]
    5160:	str	r0, [sp, #36]	; 0x24
    5164:	mov	r0, ip
    5168:	movw	r1, #0
    516c:	ldr	r3, [sp, #52]	; 0x34
    5170:	bl	0 <coda_mem_string_new>
    5174:	str	r0, [fp, #-24]	; 0xffffffe8
    5178:	ldr	r0, [fp, #-16]
    517c:	ldr	r0, [r0, #8]
    5180:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5184:	movw	r1, #0
    5188:	movt	r1, #0
    518c:	movw	r3, #0
    5190:	bl	0 <coda_mem_record_add_field>
    5194:	ldr	r1, [fp, #-16]
    5198:	ldr	r1, [r1]
    519c:	str	r0, [sp, #32]
    51a0:	mov	r0, r1
    51a4:	bl	0 <ftell>
    51a8:	add	r1, sp, #324	; 0x144
    51ac:	ldr	r2, [fp, #-16]
    51b0:	str	r0, [r2, #52]	; 0x34
    51b4:	ldr	r0, [fp, #-16]
    51b8:	ldr	r2, [r0, #48]	; 0x30
    51bc:	add	r2, r2, #1
    51c0:	str	r2, [r0, #48]	; 0x30
    51c4:	ldr	r0, [fp, #-16]
    51c8:	ldr	r0, [r0]
    51cc:	bl	7f84 <get_line>
    51d0:	str	r0, [sp, #236]	; 0xec
    51d4:	ldr	r0, [sp, #236]	; 0xec
    51d8:	cmp	r0, #0
    51dc:	bge	51f0 <read_header+0x10b0>
    51e0:	mvn	r0, #0
    51e4:	str	r0, [fp, #-12]
    51e8:	b	5524 <read_header+0x13e4>
    51ec:	.word	0x00000000
    51f0:	ldr	r0, [sp, #236]	; 0xec
    51f4:	cmp	r0, #60	; 0x3c
    51f8:	bge	523c <read_header+0x10fc>
    51fc:	ldr	r2, [sp, #236]	; 0xec
    5200:	ldr	r0, [fp, #-16]
    5204:	ldr	r3, [r0, #48]	; 0x30
    5208:	ldr	r0, [fp, #-16]
    520c:	ldr	r0, [r0, #52]	; 0x34
    5210:	mvn	r1, #21
    5214:	str	r0, [sp, #28]
    5218:	mov	r0, r1
    521c:	movw	r1, #0
    5220:	movt	r1, #0
    5224:	ldr	ip, [sp, #28]
    5228:	str	ip, [sp]
    522c:	bl	0 <coda_set_error>
    5230:	mvn	r0, #0
    5234:	str	r0, [fp, #-12]
    5238:	b	5524 <read_header+0x13e4>
    523c:	add	r0, sp, #324	; 0x144
    5240:	movw	r1, #0
    5244:	movt	r1, #0
    5248:	mov	r2, #3
    524c:	bl	0 <memcmp>
    5250:	cmp	r0, #0
    5254:	beq	5284 <read_header+0x1144>
    5258:	ldr	r0, [fp, #-16]
    525c:	ldr	r2, [r0, #48]	; 0x30
    5260:	ldr	r0, [fp, #-16]
    5264:	ldr	r3, [r0, #52]	; 0x34
    5268:	mvn	r0, #21
    526c:	movw	r1, #0
    5270:	movt	r1, #0
    5274:	bl	0 <coda_set_error>
    5278:	mvn	r0, #0
    527c:	str	r0, [fp, #-12]
    5280:	b	5524 <read_header+0x13e4>
    5284:	ldr	r0, [fp, #-16]
    5288:	ldr	r0, [r0]
    528c:	bl	0 <ftell>
    5290:	add	r1, sp, #324	; 0x144
    5294:	ldr	lr, [fp, #-16]
    5298:	str	r0, [lr, #52]	; 0x34
    529c:	ldr	r0, [fp, #-16]
    52a0:	ldr	lr, [r0, #48]	; 0x30
    52a4:	add	lr, lr, #1
    52a8:	str	lr, [r0, #48]	; 0x30
    52ac:	ldr	r0, [fp, #-16]
    52b0:	ldr	r0, [r0]
    52b4:	bl	7f84 <get_line>
    52b8:	str	r0, [sp, #236]	; 0xec
    52bc:	ldr	r0, [sp, #236]	; 0xec
    52c0:	cmp	r0, #0
    52c4:	bge	52d4 <read_header+0x1194>
    52c8:	mvn	r0, #0
    52cc:	str	r0, [fp, #-12]
    52d0:	b	5524 <read_header+0x13e4>
    52d4:	ldr	r0, [sp, #236]	; 0xec
    52d8:	cmp	r0, #60	; 0x3c
    52dc:	bge	5320 <read_header+0x11e0>
    52e0:	ldr	r2, [sp, #236]	; 0xec
    52e4:	ldr	r0, [fp, #-16]
    52e8:	ldr	r3, [r0, #48]	; 0x30
    52ec:	ldr	r0, [fp, #-16]
    52f0:	ldr	r0, [r0, #52]	; 0x34
    52f4:	mvn	r1, #21
    52f8:	str	r0, [sp, #24]
    52fc:	mov	r0, r1
    5300:	movw	r1, #0
    5304:	movt	r1, #0
    5308:	ldr	ip, [sp, #24]
    530c:	str	ip, [sp]
    5310:	bl	0 <coda_set_error>
    5314:	mvn	r0, #0
    5318:	str	r0, [fp, #-12]
    531c:	b	5524 <read_header+0x13e4>
    5320:	add	r0, sp, #324	; 0x144
    5324:	movw	r1, #0
    5328:	movt	r1, #0
    532c:	mov	r2, #3
    5330:	bl	0 <memcmp>
    5334:	cmp	r0, #0
    5338:	beq	5368 <read_header+0x1228>
    533c:	ldr	r0, [fp, #-16]
    5340:	ldr	r2, [r0, #48]	; 0x30
    5344:	ldr	r0, [fp, #-16]
    5348:	ldr	r3, [r0, #52]	; 0x34
    534c:	mvn	r0, #21
    5350:	movw	r1, #0
    5354:	movt	r1, #0
    5358:	bl	0 <coda_set_error>
    535c:	mvn	r0, #0
    5360:	str	r0, [fp, #-12]
    5364:	b	5524 <read_header+0x13e4>
    5368:	add	r0, sp, #324	; 0x144
    536c:	add	r0, r0, #3
    5370:	movw	r1, #10
    5374:	add	r2, sp, #312	; 0x138
    5378:	movw	r3, #0
    537c:	bl	0 <coda_ascii_parse_double>
    5380:	cmp	r0, #0
    5384:	bge	53b4 <read_header+0x1274>
    5388:	ldr	r0, [fp, #-16]
    538c:	ldr	r1, [r0, #48]	; 0x30
    5390:	ldr	r0, [fp, #-16]
    5394:	ldr	r0, [r0, #52]	; 0x34
    5398:	add	r2, r0, #3
    539c:	movw	r0, #0
    53a0:	movt	r0, #0
    53a4:	bl	0 <coda_add_error_message>
    53a8:	mvn	r0, #0
    53ac:	str	r0, [fp, #-12]
    53b0:	b	5524 <read_header+0x13e4>
    53b4:	ldr	r0, [pc, #372]	; 5530 <read_header+0x13f0>
    53b8:	str	r0, [sp, #20]
    53bc:	bl	0 <__aeabi_read_tp>
    53c0:	ldr	ip, [sp, #20]
    53c4:	ldr	r0, [r0, ip]
    53c8:	ldr	r0, [r0, #80]	; 0x50
    53cc:	ldr	ip, [fp, #-16]
    53d0:	ldr	r2, [ip, #4]
    53d4:	vldr	d0, [sp, #312]	; 0x138
    53d8:	movw	r1, #0
    53dc:	bl	0 <coda_mem_double_new>
    53e0:	str	r0, [fp, #-24]	; 0xffffffe8
    53e4:	ldr	r0, [fp, #-16]
    53e8:	ldr	r0, [r0, #8]
    53ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    53f0:	movw	r1, #0
    53f4:	movt	r1, #0
    53f8:	movw	r3, #0
    53fc:	bl	0 <coda_mem_record_add_field>
    5400:	add	r1, sp, #324	; 0x144
    5404:	add	r1, r1, #14
    5408:	str	r0, [sp, #16]
    540c:	mov	r0, r1
    5410:	movw	r1, #12
    5414:	add	r2, sp, #312	; 0x138
    5418:	movw	r3, #0
    541c:	bl	0 <coda_ascii_parse_double>
    5420:	cmp	r0, #0
    5424:	bge	5454 <read_header+0x1314>
    5428:	ldr	r0, [fp, #-16]
    542c:	ldr	r1, [r0, #48]	; 0x30
    5430:	ldr	r0, [fp, #-16]
    5434:	ldr	r0, [r0, #52]	; 0x34
    5438:	add	r2, r0, #14
    543c:	movw	r0, #0
    5440:	movt	r0, #0
    5444:	bl	0 <coda_add_error_message>
    5448:	mvn	r0, #0
    544c:	str	r0, [fp, #-12]
    5450:	b	5524 <read_header+0x13e4>
    5454:	ldr	r0, [pc, #212]	; 5530 <read_header+0x13f0>
    5458:	str	r0, [sp, #12]
    545c:	bl	0 <__aeabi_read_tp>
    5460:	ldr	ip, [sp, #12]
    5464:	ldr	r0, [r0, ip]
    5468:	ldr	r0, [r0, #84]	; 0x54
    546c:	ldr	ip, [fp, #-16]
    5470:	ldr	r2, [ip, #4]
    5474:	vldr	d0, [sp, #312]	; 0x138
    5478:	movw	r1, #0
    547c:	bl	0 <coda_mem_double_new>
    5480:	str	r0, [fp, #-24]	; 0xffffffe8
    5484:	ldr	r0, [fp, #-16]
    5488:	ldr	r0, [r0, #8]
    548c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5490:	movw	r1, #0
    5494:	movt	r1, #0
    5498:	movw	r3, #0
    549c:	bl	0 <coda_mem_record_add_field>
    54a0:	movw	r1, #0
    54a4:	str	r1, [sp, #232]	; 0xe8
    54a8:	str	r0, [sp, #8]
    54ac:	ldr	r0, [sp, #232]	; 0xe8
    54b0:	cmp	r0, #7
    54b4:	bge	551c <read_header+0x13dc>
    54b8:	ldr	r0, [fp, #-16]
    54bc:	ldr	r0, [r0]
    54c0:	bl	0 <ftell>
    54c4:	add	r1, sp, #324	; 0x144
    54c8:	ldr	lr, [fp, #-16]
    54cc:	str	r0, [lr, #52]	; 0x34
    54d0:	ldr	r0, [fp, #-16]
    54d4:	ldr	lr, [r0, #48]	; 0x30
    54d8:	add	lr, lr, #1
    54dc:	str	lr, [r0, #48]	; 0x30
    54e0:	ldr	r0, [fp, #-16]
    54e4:	ldr	r0, [r0]
    54e8:	bl	7f84 <get_line>
    54ec:	str	r0, [sp, #236]	; 0xec
    54f0:	ldr	r0, [sp, #236]	; 0xec
    54f4:	cmp	r0, #0
    54f8:	bge	5508 <read_header+0x13c8>
    54fc:	mvn	r0, #0
    5500:	str	r0, [fp, #-12]
    5504:	b	5524 <read_header+0x13e4>
    5508:	b	550c <read_header+0x13cc>
    550c:	ldr	r0, [sp, #232]	; 0xe8
    5510:	add	r0, r0, #1
    5514:	str	r0, [sp, #232]	; 0xe8
    5518:	b	54ac <read_header+0x136c>
    551c:	movw	r0, #0
    5520:	str	r0, [fp, #-12]
    5524:	ldr	r0, [fp, #-12]
    5528:	sub	sp, fp, #8
    552c:	pop	{r4, r5, fp, pc}
    5530:	.word	0x00000000

00005534 <ingest_info_cleanup>:
    5534:	push	{fp, lr}
    5538:	mov	fp, sp
    553c:	sub	sp, sp, #8
    5540:	str	r0, [sp, #4]
    5544:	ldr	r0, [sp, #4]
    5548:	ldr	r0, [r0]
    554c:	movw	r1, #0
    5550:	cmp	r0, r1
    5554:	beq	5568 <ingest_info_cleanup+0x34>
    5558:	ldr	r0, [sp, #4]
    555c:	ldr	r0, [r0]
    5560:	bl	0 <fclose>
    5564:	str	r0, [sp]
    5568:	ldr	r0, [sp, #4]
    556c:	ldr	r0, [r0, #8]
    5570:	movw	r1, #0
    5574:	cmp	r0, r1
    5578:	beq	5588 <ingest_info_cleanup+0x54>
    557c:	ldr	r0, [sp, #4]
    5580:	ldr	r0, [r0, #8]
    5584:	bl	0 <coda_dynamic_type_delete>
    5588:	ldr	r0, [sp, #4]
    558c:	ldr	r0, [r0, #12]
    5590:	movw	r1, #0
    5594:	cmp	r0, r1
    5598:	beq	55a8 <ingest_info_cleanup+0x74>
    559c:	ldr	r0, [sp, #4]
    55a0:	ldr	r0, [r0, #12]
    55a4:	bl	0 <coda_dynamic_type_delete>
    55a8:	ldr	r0, [sp, #4]
    55ac:	ldr	r0, [r0, #16]
    55b0:	movw	r1, #0
    55b4:	cmp	r0, r1
    55b8:	beq	55c8 <ingest_info_cleanup+0x94>
    55bc:	ldr	r0, [sp, #4]
    55c0:	ldr	r0, [r0, #16]
    55c4:	bl	0 <coda_dynamic_type_delete>
    55c8:	ldr	r0, [sp, #4]
    55cc:	ldr	r0, [r0, #20]
    55d0:	movw	r1, #0
    55d4:	cmp	r0, r1
    55d8:	beq	55e8 <ingest_info_cleanup+0xb4>
    55dc:	ldr	r0, [sp, #4]
    55e0:	ldr	r0, [r0, #20]
    55e4:	bl	0 <coda_dynamic_type_delete>
    55e8:	ldr	r0, [sp, #4]
    55ec:	ldr	r0, [r0, #24]
    55f0:	movw	r1, #0
    55f4:	cmp	r0, r1
    55f8:	beq	5608 <ingest_info_cleanup+0xd4>
    55fc:	ldr	r0, [sp, #4]
    5600:	ldr	r0, [r0, #24]
    5604:	bl	0 <coda_dynamic_type_delete>
    5608:	ldr	r0, [sp, #4]
    560c:	ldr	r0, [r0, #28]
    5610:	movw	r1, #0
    5614:	cmp	r0, r1
    5618:	beq	5628 <ingest_info_cleanup+0xf4>
    561c:	ldr	r0, [sp, #4]
    5620:	ldr	r0, [r0, #28]
    5624:	bl	0 <coda_dynamic_type_delete>
    5628:	ldr	r0, [sp, #4]
    562c:	ldr	r0, [r0, #32]
    5630:	movw	r1, #0
    5634:	cmp	r0, r1
    5638:	beq	5648 <ingest_info_cleanup+0x114>
    563c:	ldr	r0, [sp, #4]
    5640:	ldr	r0, [r0, #32]
    5644:	bl	0 <coda_dynamic_type_delete>
    5648:	ldr	r0, [sp, #4]
    564c:	ldr	r0, [r0, #36]	; 0x24
    5650:	movw	r1, #0
    5654:	cmp	r0, r1
    5658:	beq	5668 <ingest_info_cleanup+0x134>
    565c:	ldr	r0, [sp, #4]
    5660:	ldr	r0, [r0, #36]	; 0x24
    5664:	bl	0 <coda_dynamic_type_delete>
    5668:	mov	sp, fp
    566c:	pop	{fp, pc}

00005670 <read_records>:
    5670:	push	{r4, r5, fp, lr}
    5674:	add	fp, sp, #8
    5678:	sub	sp, sp, #1600	; 0x640
    567c:	str	r0, [fp, #-16]
    5680:	ldr	r0, [fp, #-16]
    5684:	ldr	r0, [r0]
    5688:	bl	0 <ftell>
    568c:	add	r1, sp, #584	; 0x248
    5690:	ldr	lr, [fp, #-16]
    5694:	str	r0, [lr, #52]	; 0x34
    5698:	ldr	r0, [fp, #-16]
    569c:	ldr	lr, [r0, #48]	; 0x30
    56a0:	add	lr, lr, #1
    56a4:	str	lr, [r0, #48]	; 0x30
    56a8:	ldr	r0, [fp, #-16]
    56ac:	ldr	r0, [r0]
    56b0:	bl	7f84 <get_line>
    56b4:	str	r0, [sp, #500]	; 0x1f4
    56b8:	ldr	r0, [sp, #500]	; 0x1f4
    56bc:	cmp	r0, #0
    56c0:	bge	56d0 <read_records+0x60>
    56c4:	mvn	r0, #0
    56c8:	str	r0, [fp, #-12]
    56cc:	b	7f74 <read_records+0x2904>
    56d0:	b	56d4 <read_records+0x64>
    56d4:	add	r0, sp, #584	; 0x248
    56d8:	movw	r1, #0
    56dc:	movt	r1, #0
    56e0:	mov	r2, #3
    56e4:	bl	0 <memcmp>
    56e8:	cmp	r0, #0
    56ec:	beq	7eb4 <read_records+0x2844>
    56f0:	ldrb	r0, [sp, #584]	; 0x248
    56f4:	cmp	r0, #42	; 0x2a
    56f8:	bne	5954 <read_records+0x2e4>
    56fc:	ldr	r0, [fp, #-16]
    5700:	ldr	r0, [r0, #16]
    5704:	movw	r1, #0
    5708:	cmp	r0, r1
    570c:	beq	57bc <read_records+0x14c>
    5710:	ldr	r0, [fp, #-16]
    5714:	ldr	r0, [r0, #16]
    5718:	ldr	r1, [fp, #-16]
    571c:	ldr	r1, [r1, #20]
    5720:	movw	r2, #0
    5724:	movt	r2, #0
    5728:	str	r1, [sp, #496]	; 0x1f0
    572c:	mov	r1, r2
    5730:	ldr	r2, [sp, #496]	; 0x1f0
    5734:	movw	r3, #0
    5738:	bl	0 <coda_mem_record_add_field>
    573c:	ldr	r1, [fp, #-16]
    5740:	movw	r2, #0
    5744:	str	r2, [r1, #20]
    5748:	ldr	r1, [fp, #-16]
    574c:	ldr	r1, [r1, #28]
    5750:	cmp	r1, r2
    5754:	str	r0, [sp, #492]	; 0x1ec
    5758:	beq	5798 <read_records+0x128>
    575c:	ldr	r0, [fp, #-16]
    5760:	ldr	r0, [r0, #16]
    5764:	ldr	r1, [fp, #-16]
    5768:	ldr	r1, [r1, #28]
    576c:	movw	r2, #0
    5770:	movt	r2, #0
    5774:	str	r1, [sp, #488]	; 0x1e8
    5778:	mov	r1, r2
    577c:	ldr	r2, [sp, #488]	; 0x1e8
    5780:	movw	r3, #0
    5784:	bl	0 <coda_mem_record_add_field>
    5788:	ldr	r1, [fp, #-16]
    578c:	movw	r2, #0
    5790:	str	r2, [r1, #28]
    5794:	str	r0, [sp, #484]	; 0x1e4
    5798:	ldr	r0, [fp, #-16]
    579c:	ldr	r0, [r0, #12]
    57a0:	ldr	r1, [fp, #-16]
    57a4:	ldr	r1, [r1, #16]
    57a8:	bl	0 <coda_mem_array_add_element>
    57ac:	ldr	r1, [fp, #-16]
    57b0:	movw	lr, #0
    57b4:	str	lr, [r1, #16]
    57b8:	str	r0, [sp, #480]	; 0x1e0
    57bc:	ldr	r0, [pc, #4092]	; 67c0 <read_records+0x1150>
    57c0:	str	r0, [sp, #476]	; 0x1dc
    57c4:	bl	0 <__aeabi_read_tp>
    57c8:	ldr	ip, [sp, #476]	; 0x1dc
    57cc:	ldr	r0, [r0, ip]
    57d0:	ldr	r0, [r0, #272]	; 0x110
    57d4:	movw	r1, #0
    57d8:	bl	0 <coda_mem_array_new>
    57dc:	ldr	r1, [fp, #-16]
    57e0:	str	r0, [r1, #20]
    57e4:	ldr	r0, [fp, #-16]
    57e8:	ldrb	r0, [r0, #44]	; 0x2c
    57ec:	cmp	r0, #86	; 0x56
    57f0:	bne	581c <read_records+0x1ac>
    57f4:	ldr	r0, [pc, #4036]	; 67c0 <read_records+0x1150>
    57f8:	str	r0, [sp, #472]	; 0x1d8
    57fc:	bl	0 <__aeabi_read_tp>
    5800:	ldr	ip, [sp, #472]	; 0x1d8
    5804:	ldr	r0, [r0, ip]
    5808:	ldr	r0, [r0, #280]	; 0x118
    580c:	movw	r1, #0
    5810:	bl	0 <coda_mem_array_new>
    5814:	ldr	r1, [fp, #-16]
    5818:	str	r0, [r1, #28]
    581c:	ldr	r0, [pc, #3996]	; 67c0 <read_records+0x1150>
    5820:	str	r0, [sp, #468]	; 0x1d4
    5824:	bl	0 <__aeabi_read_tp>
    5828:	ldr	ip, [sp, #468]	; 0x1d4
    582c:	ldr	r0, [r0, ip]
    5830:	ldr	r0, [r0, #292]	; 0x124
    5834:	movw	r1, #0
    5838:	bl	0 <coda_mem_record_new>
    583c:	ldr	r1, [fp, #-16]
    5840:	str	r0, [r1, #16]
    5844:	ldr	r0, [sp, #500]	; 0x1f4
    5848:	cmp	r0, #31
    584c:	bge	5890 <read_records+0x220>
    5850:	ldr	r2, [sp, #500]	; 0x1f4
    5854:	ldr	r0, [fp, #-16]
    5858:	ldr	r3, [r0, #48]	; 0x30
    585c:	ldr	r0, [fp, #-16]
    5860:	ldr	r0, [r0, #52]	; 0x34
    5864:	mvn	r1, #21
    5868:	str	r0, [sp, #464]	; 0x1d0
    586c:	mov	r0, r1
    5870:	movw	r1, #0
    5874:	movt	r1, #0
    5878:	ldr	ip, [sp, #464]	; 0x1d0
    587c:	str	ip, [sp]
    5880:	bl	0 <coda_set_error>
    5884:	mvn	r0, #0
    5888:	str	r0, [fp, #-12]
    588c:	b	7f74 <read_records+0x2904>
    5890:	add	r0, sp, #584	; 0x248
    5894:	add	r1, r0, #3
    5898:	add	r2, sp, #504	; 0x1f8
    589c:	add	r3, r2, #12
    58a0:	add	r0, r0, #15
    58a4:	vld1.8	{d16-d17}, [r0]
    58a8:	vst1.32	{d16-d17}, [r3]
    58ac:	vld1.8	{d16-d17}, [r1]
    58b0:	mov	r0, #28
    58b4:	mov	r1, r2
    58b8:	vst1.64	{d16-d17}, [r1], r0
    58bc:	mov	r0, #0
    58c0:	strb	r0, [r1]
    58c4:	ldr	r1, [pc, #3828]	; 67c0 <read_records+0x1150>
    58c8:	str	r2, [sp, #460]	; 0x1cc
    58cc:	str	r0, [sp, #456]	; 0x1c8
    58d0:	str	r1, [sp, #452]	; 0x1c4
    58d4:	bl	0 <__aeabi_read_tp>
    58d8:	ldr	r1, [sp, #452]	; 0x1c4
    58dc:	ldr	r2, [r0, r1]
    58e0:	ldr	r2, [r2, #260]	; 0x104
    58e4:	ldr	r3, [fp, #-16]
    58e8:	ldr	r3, [r3, #4]
    58ec:	str	r0, [sp, #448]	; 0x1c0
    58f0:	mov	r0, r2
    58f4:	ldr	r1, [sp, #456]	; 0x1c8
    58f8:	mov	r2, r3
    58fc:	ldr	r3, [sp, #460]	; 0x1cc
    5900:	bl	0 <coda_mem_string_new>
    5904:	str	r0, [fp, #-20]	; 0xffffffec
    5908:	ldr	r0, [sp, #448]	; 0x1c0
    590c:	ldr	r1, [sp, #452]	; 0x1c4
    5910:	ldr	r2, [r0, r1]
    5914:	ldr	r2, [r2, #264]	; 0x108
    5918:	ldr	r3, [fp, #-20]	; 0xffffffec
    591c:	mov	r0, r2
    5920:	movw	r1, #0
    5924:	mov	r2, r3
    5928:	bl	0 <coda_mem_time_new>
    592c:	str	r0, [fp, #-24]	; 0xffffffe8
    5930:	ldr	r0, [fp, #-16]
    5934:	ldr	r0, [r0, #16]
    5938:	ldr	r2, [fp, #-24]	; 0xffffffe8
    593c:	movw	r1, #0
    5940:	movt	r1, #0
    5944:	movw	r3, #0
    5948:	bl	0 <coda_mem_record_add_field>
    594c:	str	r0, [sp, #444]	; 0x1bc
    5950:	b	6a68 <read_records+0x13f8>
    5954:	ldrb	r0, [sp, #584]	; 0x248
    5958:	cmp	r0, #80	; 0x50
    595c:	bne	62a8 <read_records+0xc38>
    5960:	ldr	r0, [fp, #-16]
    5964:	ldr	r0, [r0, #20]
    5968:	movw	r1, #0
    596c:	cmp	r0, r1
    5970:	bne	59a0 <read_records+0x330>
    5974:	ldr	r0, [fp, #-16]
    5978:	ldr	r2, [r0, #48]	; 0x30
    597c:	ldr	r0, [fp, #-16]
    5980:	ldr	r3, [r0, #52]	; 0x34
    5984:	mvn	r0, #21
    5988:	movw	r1, #0
    598c:	movt	r1, #0
    5990:	bl	0 <coda_set_error>
    5994:	mvn	r0, #0
    5998:	str	r0, [fp, #-12]
    599c:	b	7f74 <read_records+0x2904>
    59a0:	ldr	r0, [pc, #3608]	; 67c0 <read_records+0x1150>
    59a4:	str	r0, [sp, #440]	; 0x1b8
    59a8:	bl	0 <__aeabi_read_tp>
    59ac:	ldr	ip, [sp, #440]	; 0x1b8
    59b0:	ldr	r0, [r0, ip]
    59b4:	ldr	r0, [r0, #268]	; 0x10c
    59b8:	movw	r1, #0
    59bc:	bl	0 <coda_mem_record_new>
    59c0:	ldr	r1, [fp, #-16]
    59c4:	str	r0, [r1, #24]
    59c8:	ldr	r0, [sp, #500]	; 0x1f4
    59cc:	cmp	r0, #60	; 0x3c
    59d0:	bge	5a14 <read_records+0x3a4>
    59d4:	ldr	r2, [sp, #500]	; 0x1f4
    59d8:	ldr	r0, [fp, #-16]
    59dc:	ldr	r3, [r0, #48]	; 0x30
    59e0:	ldr	r0, [fp, #-16]
    59e4:	ldr	r0, [r0, #52]	; 0x34
    59e8:	mvn	r1, #21
    59ec:	str	r0, [sp, #436]	; 0x1b4
    59f0:	mov	r0, r1
    59f4:	movw	r1, #0
    59f8:	movt	r1, #0
    59fc:	ldr	ip, [sp, #436]	; 0x1b4
    5a00:	str	ip, [sp]
    5a04:	bl	0 <coda_set_error>
    5a08:	mvn	r0, #0
    5a0c:	str	r0, [fp, #-12]
    5a10:	b	7f74 <read_records+0x2904>
    5a14:	add	r3, sp, #504	; 0x1f8
    5a18:	ldrb	r0, [sp, #587]	; 0x24b
    5a1c:	strb	r0, [sp, #506]	; 0x1fa
    5a20:	add	lr, sp, #512	; 0x200
    5a24:	ldrh	r0, [lr, #73]	; 0x49
    5a28:	add	lr, sp, #256	; 0x100
    5a2c:	strh	r0, [lr, #248]	; 0xf8
    5a30:	mov	r0, #0
    5a34:	strb	r0, [sp, #507]	; 0x1fb
    5a38:	ldr	r0, [pc, #3456]	; 67c0 <read_records+0x1150>
    5a3c:	str	r3, [sp, #432]	; 0x1b0
    5a40:	str	r0, [sp, #428]	; 0x1ac
    5a44:	bl	0 <__aeabi_read_tp>
    5a48:	ldr	r3, [sp, #428]	; 0x1ac
    5a4c:	ldr	r0, [r0, r3]
    5a50:	ldr	r0, [r0, #88]	; 0x58
    5a54:	ldr	r3, [fp, #-16]
    5a58:	ldr	r2, [r3, #4]
    5a5c:	movw	r1, #0
    5a60:	ldr	r3, [sp, #432]	; 0x1b0
    5a64:	bl	0 <coda_mem_string_new>
    5a68:	str	r0, [fp, #-24]	; 0xffffffe8
    5a6c:	ldr	r0, [fp, #-16]
    5a70:	ldr	r0, [r0, #24]
    5a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5a78:	movw	r1, #0
    5a7c:	movt	r1, #0
    5a80:	movw	r3, #0
    5a84:	bl	0 <coda_mem_record_add_field>
    5a88:	add	r1, sp, #584	; 0x248
    5a8c:	add	r1, r1, #4
    5a90:	str	r0, [sp, #424]	; 0x1a8
    5a94:	mov	r0, r1
    5a98:	movw	r1, #14
    5a9c:	add	r2, sp, #576	; 0x240
    5aa0:	movw	r3, #0
    5aa4:	bl	0 <coda_ascii_parse_double>
    5aa8:	cmp	r0, #0
    5aac:	bge	5adc <read_records+0x46c>
    5ab0:	ldr	r0, [fp, #-16]
    5ab4:	ldr	r1, [r0, #48]	; 0x30
    5ab8:	ldr	r0, [fp, #-16]
    5abc:	ldr	r0, [r0, #52]	; 0x34
    5ac0:	add	r2, r0, #4
    5ac4:	movw	r0, #0
    5ac8:	movt	r0, #0
    5acc:	bl	0 <coda_add_error_message>
    5ad0:	mvn	r0, #0
    5ad4:	str	r0, [fp, #-12]
    5ad8:	b	7f74 <read_records+0x2904>
    5adc:	ldr	r0, [pc, #3292]	; 67c0 <read_records+0x1150>
    5ae0:	str	r0, [sp, #420]	; 0x1a4
    5ae4:	bl	0 <__aeabi_read_tp>
    5ae8:	ldr	ip, [sp, #420]	; 0x1a4
    5aec:	ldr	r0, [r0, ip]
    5af0:	ldr	r0, [r0, #92]	; 0x5c
    5af4:	ldr	ip, [fp, #-16]
    5af8:	ldr	r2, [ip, #4]
    5afc:	vldr	d0, [sp, #576]	; 0x240
    5b00:	movw	r1, #0
    5b04:	bl	0 <coda_mem_double_new>
    5b08:	str	r0, [fp, #-24]	; 0xffffffe8
    5b0c:	ldr	r0, [fp, #-16]
    5b10:	ldr	r0, [r0, #24]
    5b14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5b18:	movw	r1, #0
    5b1c:	movt	r1, #0
    5b20:	movw	r3, #0
    5b24:	bl	0 <coda_mem_record_add_field>
    5b28:	add	r1, sp, #584	; 0x248
    5b2c:	add	r1, r1, #18
    5b30:	str	r0, [sp, #416]	; 0x1a0
    5b34:	mov	r0, r1
    5b38:	movw	r1, #14
    5b3c:	add	r2, sp, #576	; 0x240
    5b40:	movw	r3, #0
    5b44:	bl	0 <coda_ascii_parse_double>
    5b48:	cmp	r0, #0
    5b4c:	bge	5b7c <read_records+0x50c>
    5b50:	ldr	r0, [fp, #-16]
    5b54:	ldr	r1, [r0, #48]	; 0x30
    5b58:	ldr	r0, [fp, #-16]
    5b5c:	ldr	r0, [r0, #52]	; 0x34
    5b60:	add	r2, r0, #18
    5b64:	movw	r0, #0
    5b68:	movt	r0, #0
    5b6c:	bl	0 <coda_add_error_message>
    5b70:	mvn	r0, #0
    5b74:	str	r0, [fp, #-12]
    5b78:	b	7f74 <read_records+0x2904>
    5b7c:	ldr	r0, [pc, #3132]	; 67c0 <read_records+0x1150>
    5b80:	str	r0, [sp, #412]	; 0x19c
    5b84:	bl	0 <__aeabi_read_tp>
    5b88:	ldr	ip, [sp, #412]	; 0x19c
    5b8c:	ldr	r0, [r0, ip]
    5b90:	ldr	r0, [r0, #96]	; 0x60
    5b94:	ldr	ip, [fp, #-16]
    5b98:	ldr	r2, [ip, #4]
    5b9c:	vldr	d0, [sp, #576]	; 0x240
    5ba0:	movw	r1, #0
    5ba4:	bl	0 <coda_mem_double_new>
    5ba8:	str	r0, [fp, #-24]	; 0xffffffe8
    5bac:	ldr	r0, [fp, #-16]
    5bb0:	ldr	r0, [r0, #24]
    5bb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5bb8:	movw	r1, #0
    5bbc:	movt	r1, #0
    5bc0:	movw	r3, #0
    5bc4:	bl	0 <coda_mem_record_add_field>
    5bc8:	add	r1, sp, #584	; 0x248
    5bcc:	add	r1, r1, #32
    5bd0:	str	r0, [sp, #408]	; 0x198
    5bd4:	mov	r0, r1
    5bd8:	movw	r1, #14
    5bdc:	add	r2, sp, #576	; 0x240
    5be0:	movw	r3, #0
    5be4:	bl	0 <coda_ascii_parse_double>
    5be8:	cmp	r0, #0
    5bec:	bge	5c1c <read_records+0x5ac>
    5bf0:	ldr	r0, [fp, #-16]
    5bf4:	ldr	r1, [r0, #48]	; 0x30
    5bf8:	ldr	r0, [fp, #-16]
    5bfc:	ldr	r0, [r0, #52]	; 0x34
    5c00:	add	r2, r0, #32
    5c04:	movw	r0, #0
    5c08:	movt	r0, #0
    5c0c:	bl	0 <coda_add_error_message>
    5c10:	mvn	r0, #0
    5c14:	str	r0, [fp, #-12]
    5c18:	b	7f74 <read_records+0x2904>
    5c1c:	ldr	r0, [pc, #2972]	; 67c0 <read_records+0x1150>
    5c20:	str	r0, [sp, #404]	; 0x194
    5c24:	bl	0 <__aeabi_read_tp>
    5c28:	ldr	ip, [sp, #404]	; 0x194
    5c2c:	ldr	r0, [r0, ip]
    5c30:	ldr	r0, [r0, #100]	; 0x64
    5c34:	ldr	ip, [fp, #-16]
    5c38:	ldr	r2, [ip, #4]
    5c3c:	vldr	d0, [sp, #576]	; 0x240
    5c40:	movw	r1, #0
    5c44:	bl	0 <coda_mem_double_new>
    5c48:	str	r0, [fp, #-24]	; 0xffffffe8
    5c4c:	ldr	r0, [fp, #-16]
    5c50:	ldr	r0, [r0, #24]
    5c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5c58:	movw	r1, #0
    5c5c:	movt	r1, #0
    5c60:	movw	r3, #0
    5c64:	bl	0 <coda_mem_record_add_field>
    5c68:	add	r1, sp, #584	; 0x248
    5c6c:	add	r1, r1, #46	; 0x2e
    5c70:	str	r0, [sp, #400]	; 0x190
    5c74:	mov	r0, r1
    5c78:	movw	r1, #14
    5c7c:	add	r2, sp, #576	; 0x240
    5c80:	movw	r3, #0
    5c84:	bl	0 <coda_ascii_parse_double>
    5c88:	cmp	r0, #0
    5c8c:	bge	5cbc <read_records+0x64c>
    5c90:	ldr	r0, [fp, #-16]
    5c94:	ldr	r1, [r0, #48]	; 0x30
    5c98:	ldr	r0, [fp, #-16]
    5c9c:	ldr	r0, [r0, #52]	; 0x34
    5ca0:	add	r2, r0, #46	; 0x2e
    5ca4:	movw	r0, #0
    5ca8:	movt	r0, #0
    5cac:	bl	0 <coda_add_error_message>
    5cb0:	mvn	r0, #0
    5cb4:	str	r0, [fp, #-12]
    5cb8:	b	7f74 <read_records+0x2904>
    5cbc:	ldr	r0, [pc, #2812]	; 67c0 <read_records+0x1150>
    5cc0:	str	r0, [sp, #396]	; 0x18c
    5cc4:	bl	0 <__aeabi_read_tp>
    5cc8:	ldr	ip, [sp, #396]	; 0x18c
    5ccc:	ldr	r0, [r0, ip]
    5cd0:	ldr	r0, [r0, #104]	; 0x68
    5cd4:	ldr	ip, [fp, #-16]
    5cd8:	ldr	r2, [ip, #4]
    5cdc:	vldr	d0, [sp, #576]	; 0x240
    5ce0:	movw	r1, #0
    5ce4:	bl	0 <coda_mem_double_new>
    5ce8:	str	r0, [fp, #-24]	; 0xffffffe8
    5cec:	ldr	r0, [fp, #-16]
    5cf0:	ldr	r0, [r0, #24]
    5cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5cf8:	movw	r1, #0
    5cfc:	movt	r1, #0
    5d00:	movw	r3, #0
    5d04:	bl	0 <coda_mem_record_add_field>
    5d08:	ldr	r1, [sp, #500]	; 0x1f4
    5d0c:	cmp	r1, #64	; 0x40
    5d10:	str	r0, [sp, #392]	; 0x188
    5d14:	blt	5d3c <read_records+0x6cc>
    5d18:	add	r0, sp, #584	; 0x248
    5d1c:	add	r0, r0, #61	; 0x3d
    5d20:	ldrh	r0, [r0]
    5d24:	movw	r1, #8224	; 0x2020
    5d28:	sub	r2, r0, r1
    5d2c:	cmp	r0, r1
    5d30:	movwne	r2, #1
    5d34:	cmp	r2, #0
    5d38:	bne	5d4c <read_records+0x6dc>
    5d3c:	mov	r0, #0
    5d40:	str	r0, [sp, #572]	; 0x23c
    5d44:	str	r0, [sp, #568]	; 0x238
    5d48:	b	5d9c <read_records+0x72c>
    5d4c:	add	r0, sp, #584	; 0x248
    5d50:	add	r0, r0, #61	; 0x3d
    5d54:	movw	r1, #2
    5d58:	add	r2, sp, #568	; 0x238
    5d5c:	movw	r3, #0
    5d60:	bl	0 <coda_ascii_parse_int64>
    5d64:	cmp	r0, #0
    5d68:	bge	5d98 <read_records+0x728>
    5d6c:	ldr	r0, [fp, #-16]
    5d70:	ldr	r1, [r0, #48]	; 0x30
    5d74:	ldr	r0, [fp, #-16]
    5d78:	ldr	r0, [r0, #52]	; 0x34
    5d7c:	add	r2, r0, #61	; 0x3d
    5d80:	movw	r0, #0
    5d84:	movt	r0, #0
    5d88:	bl	0 <coda_add_error_message>
    5d8c:	mvn	r0, #0
    5d90:	str	r0, [fp, #-12]
    5d94:	b	7f74 <read_records+0x2904>
    5d98:	b	5d9c <read_records+0x72c>
    5d9c:	ldr	r0, [pc, #2588]	; 67c0 <read_records+0x1150>
    5da0:	str	r0, [sp, #388]	; 0x184
    5da4:	bl	0 <__aeabi_read_tp>
    5da8:	ldr	ip, [sp, #388]	; 0x184
    5dac:	ldr	r0, [r0, ip]
    5db0:	ldr	r0, [r0, #108]	; 0x6c
    5db4:	ldr	ip, [fp, #-16]
    5db8:	ldr	r2, [ip, #4]
    5dbc:	ldrb	ip, [sp, #568]	; 0x238
    5dc0:	movw	r1, #0
    5dc4:	sxtb	r3, ip
    5dc8:	bl	0 <coda_mem_int8_new>
    5dcc:	str	r0, [fp, #-24]	; 0xffffffe8
    5dd0:	ldr	r0, [fp, #-16]
    5dd4:	ldr	r0, [r0, #24]
    5dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ddc:	movw	r1, #0
    5de0:	movt	r1, #0
    5de4:	movw	r3, #0
    5de8:	bl	0 <coda_mem_record_add_field>
    5dec:	ldr	r1, [sp, #500]	; 0x1f4
    5df0:	cmp	r1, #66	; 0x42
    5df4:	str	r0, [sp, #384]	; 0x180
    5df8:	blt	5e20 <read_records+0x7b0>
    5dfc:	add	r0, sp, #584	; 0x248
    5e00:	add	r0, r0, #64	; 0x40
    5e04:	ldrh	r0, [r0]
    5e08:	movw	r1, #8224	; 0x2020
    5e0c:	sub	r2, r0, r1
    5e10:	cmp	r0, r1
    5e14:	movwne	r2, #1
    5e18:	cmp	r2, #0
    5e1c:	bne	5e30 <read_records+0x7c0>
    5e20:	mov	r0, #0
    5e24:	str	r0, [sp, #572]	; 0x23c
    5e28:	str	r0, [sp, #568]	; 0x238
    5e2c:	b	5e80 <read_records+0x810>
    5e30:	add	r0, sp, #584	; 0x248
    5e34:	add	r0, r0, #64	; 0x40
    5e38:	movw	r1, #2
    5e3c:	add	r2, sp, #568	; 0x238
    5e40:	movw	r3, #0
    5e44:	bl	0 <coda_ascii_parse_int64>
    5e48:	cmp	r0, #0
    5e4c:	bge	5e7c <read_records+0x80c>
    5e50:	ldr	r0, [fp, #-16]
    5e54:	ldr	r1, [r0, #48]	; 0x30
    5e58:	ldr	r0, [fp, #-16]
    5e5c:	ldr	r0, [r0, #52]	; 0x34
    5e60:	add	r2, r0, #64	; 0x40
    5e64:	movw	r0, #0
    5e68:	movt	r0, #0
    5e6c:	bl	0 <coda_add_error_message>
    5e70:	mvn	r0, #0
    5e74:	str	r0, [fp, #-12]
    5e78:	b	7f74 <read_records+0x2904>
    5e7c:	b	5e80 <read_records+0x810>
    5e80:	ldr	r0, [pc, #2360]	; 67c0 <read_records+0x1150>
    5e84:	str	r0, [sp, #380]	; 0x17c
    5e88:	bl	0 <__aeabi_read_tp>
    5e8c:	ldr	ip, [sp, #380]	; 0x17c
    5e90:	ldr	r0, [r0, ip]
    5e94:	ldr	r0, [r0, #112]	; 0x70
    5e98:	ldr	ip, [fp, #-16]
    5e9c:	ldr	r2, [ip, #4]
    5ea0:	ldrb	ip, [sp, #568]	; 0x238
    5ea4:	movw	r1, #0
    5ea8:	sxtb	r3, ip
    5eac:	bl	0 <coda_mem_int8_new>
    5eb0:	str	r0, [fp, #-24]	; 0xffffffe8
    5eb4:	ldr	r0, [fp, #-16]
    5eb8:	ldr	r0, [r0, #24]
    5ebc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ec0:	movw	r1, #0
    5ec4:	movt	r1, #0
    5ec8:	movw	r3, #0
    5ecc:	bl	0 <coda_mem_record_add_field>
    5ed0:	ldr	r1, [sp, #500]	; 0x1f4
    5ed4:	cmp	r1, #69	; 0x45
    5ed8:	str	r0, [sp, #376]	; 0x178
    5edc:	blt	5f04 <read_records+0x894>
    5ee0:	add	r0, sp, #584	; 0x248
    5ee4:	add	r0, r0, #67	; 0x43
    5ee8:	ldrh	r0, [r0]
    5eec:	movw	r1, #8224	; 0x2020
    5ef0:	sub	r2, r0, r1
    5ef4:	cmp	r0, r1
    5ef8:	movwne	r2, #1
    5efc:	cmp	r2, #0
    5f00:	bne	5f14 <read_records+0x8a4>
    5f04:	mov	r0, #0
    5f08:	str	r0, [sp, #572]	; 0x23c
    5f0c:	str	r0, [sp, #568]	; 0x238
    5f10:	b	5f64 <read_records+0x8f4>
    5f14:	add	r0, sp, #584	; 0x248
    5f18:	add	r0, r0, #67	; 0x43
    5f1c:	movw	r1, #2
    5f20:	add	r2, sp, #568	; 0x238
    5f24:	movw	r3, #0
    5f28:	bl	0 <coda_ascii_parse_int64>
    5f2c:	cmp	r0, #0
    5f30:	bge	5f60 <read_records+0x8f0>
    5f34:	ldr	r0, [fp, #-16]
    5f38:	ldr	r1, [r0, #48]	; 0x30
    5f3c:	ldr	r0, [fp, #-16]
    5f40:	ldr	r0, [r0, #52]	; 0x34
    5f44:	add	r2, r0, #67	; 0x43
    5f48:	movw	r0, #0
    5f4c:	movt	r0, #0
    5f50:	bl	0 <coda_add_error_message>
    5f54:	mvn	r0, #0
    5f58:	str	r0, [fp, #-12]
    5f5c:	b	7f74 <read_records+0x2904>
    5f60:	b	5f64 <read_records+0x8f4>
    5f64:	ldr	r0, [pc, #2132]	; 67c0 <read_records+0x1150>
    5f68:	str	r0, [sp, #372]	; 0x174
    5f6c:	bl	0 <__aeabi_read_tp>
    5f70:	ldr	ip, [sp, #372]	; 0x174
    5f74:	ldr	r0, [r0, ip]
    5f78:	ldr	r0, [r0, #116]	; 0x74
    5f7c:	ldr	ip, [fp, #-16]
    5f80:	ldr	r2, [ip, #4]
    5f84:	ldrb	ip, [sp, #568]	; 0x238
    5f88:	movw	r1, #0
    5f8c:	sxtb	r3, ip
    5f90:	bl	0 <coda_mem_int8_new>
    5f94:	str	r0, [fp, #-24]	; 0xffffffe8
    5f98:	ldr	r0, [fp, #-16]
    5f9c:	ldr	r0, [r0, #24]
    5fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5fa4:	movw	r1, #0
    5fa8:	movt	r1, #0
    5fac:	movw	r3, #0
    5fb0:	bl	0 <coda_mem_record_add_field>
    5fb4:	ldr	r1, [sp, #500]	; 0x1f4
    5fb8:	cmp	r1, #73	; 0x49
    5fbc:	str	r0, [sp, #368]	; 0x170
    5fc0:	blt	5fe4 <read_records+0x974>
    5fc4:	add	r0, sp, #584	; 0x248
    5fc8:	add	r0, r0, #70	; 0x46
    5fcc:	movw	r1, #0
    5fd0:	movt	r1, #0
    5fd4:	mov	r2, #3
    5fd8:	bl	0 <memcmp>
    5fdc:	cmp	r0, #0
    5fe0:	bne	5ff4 <read_records+0x984>
    5fe4:	mov	r0, #0
    5fe8:	str	r0, [sp, #572]	; 0x23c
    5fec:	str	r0, [sp, #568]	; 0x238
    5ff0:	b	6044 <read_records+0x9d4>
    5ff4:	add	r0, sp, #584	; 0x248
    5ff8:	add	r0, r0, #70	; 0x46
    5ffc:	movw	r1, #3
    6000:	add	r2, sp, #568	; 0x238
    6004:	movw	r3, #0
    6008:	bl	0 <coda_ascii_parse_int64>
    600c:	cmp	r0, #0
    6010:	bge	6040 <read_records+0x9d0>
    6014:	ldr	r0, [fp, #-16]
    6018:	ldr	r1, [r0, #48]	; 0x30
    601c:	ldr	r0, [fp, #-16]
    6020:	ldr	r0, [r0, #52]	; 0x34
    6024:	add	r2, r0, #70	; 0x46
    6028:	movw	r0, #0
    602c:	movt	r0, #0
    6030:	bl	0 <coda_add_error_message>
    6034:	mvn	r0, #0
    6038:	str	r0, [fp, #-12]
    603c:	b	7f74 <read_records+0x2904>
    6040:	b	6044 <read_records+0x9d4>
    6044:	ldr	r0, [pc, #1908]	; 67c0 <read_records+0x1150>
    6048:	str	r0, [sp, #364]	; 0x16c
    604c:	bl	0 <__aeabi_read_tp>
    6050:	ldr	ip, [sp, #364]	; 0x16c
    6054:	ldr	r0, [r0, ip]
    6058:	ldr	r0, [r0, #120]	; 0x78
    605c:	ldr	ip, [fp, #-16]
    6060:	ldr	r2, [ip, #4]
    6064:	add	lr, sp, #512	; 0x200
    6068:	ldrh	ip, [lr, #56]	; 0x38
    606c:	movw	r1, #0
    6070:	sxth	r3, ip
    6074:	bl	0 <coda_mem_int16_new>
    6078:	str	r0, [fp, #-24]	; 0xffffffe8
    607c:	ldr	r0, [fp, #-16]
    6080:	ldr	r0, [r0, #24]
    6084:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6088:	movw	r1, #0
    608c:	movt	r1, #0
    6090:	movw	r3, #0
    6094:	bl	0 <coda_mem_record_add_field>
    6098:	ldr	r1, [sp, #500]	; 0x1f4
    609c:	cmp	r1, #75	; 0x4b
    60a0:	str	r0, [sp, #360]	; 0x168
    60a4:	bge	60b4 <read_records+0xa44>
    60a8:	movw	r0, #32
    60ac:	str	r0, [sp, #356]	; 0x164
    60b0:	b	60bc <read_records+0xa4c>
    60b4:	ldrb	r0, [sp, #658]	; 0x292
    60b8:	str	r0, [sp, #356]	; 0x164
    60bc:	ldr	r0, [sp, #356]	; 0x164
    60c0:	add	r3, sp, #504	; 0x1f8
    60c4:	strb	r0, [sp, #504]	; 0x1f8
    60c8:	mov	r0, #0
    60cc:	strb	r0, [sp, #505]	; 0x1f9
    60d0:	ldr	r0, [pc, #1768]	; 67c0 <read_records+0x1150>
    60d4:	str	r3, [sp, #352]	; 0x160
    60d8:	str	r0, [sp, #348]	; 0x15c
    60dc:	bl	0 <__aeabi_read_tp>
    60e0:	ldr	r3, [sp, #348]	; 0x15c
    60e4:	ldr	r0, [r0, r3]
    60e8:	ldr	r0, [r0, #124]	; 0x7c
    60ec:	ldr	r3, [fp, #-16]
    60f0:	ldr	r2, [r3, #4]
    60f4:	movw	r1, #0
    60f8:	ldr	r3, [sp, #352]	; 0x160
    60fc:	bl	0 <coda_mem_string_new>
    6100:	str	r0, [fp, #-24]	; 0xffffffe8
    6104:	ldr	r0, [fp, #-16]
    6108:	ldr	r0, [r0, #24]
    610c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6110:	movw	r1, #0
    6114:	movt	r1, #0
    6118:	movw	r3, #0
    611c:	bl	0 <coda_mem_record_add_field>
    6120:	ldr	r1, [sp, #500]	; 0x1f4
    6124:	cmp	r1, #76	; 0x4c
    6128:	str	r0, [sp, #344]	; 0x158
    612c:	bge	613c <read_records+0xacc>
    6130:	movw	r0, #32
    6134:	str	r0, [sp, #340]	; 0x154
    6138:	b	6144 <read_records+0xad4>
    613c:	ldrb	r0, [sp, #659]	; 0x293
    6140:	str	r0, [sp, #340]	; 0x154
    6144:	ldr	r0, [sp, #340]	; 0x154
    6148:	add	r3, sp, #504	; 0x1f8
    614c:	strb	r0, [sp, #504]	; 0x1f8
    6150:	ldr	r0, [pc, #1640]	; 67c0 <read_records+0x1150>
    6154:	str	r3, [sp, #336]	; 0x150
    6158:	str	r0, [sp, #332]	; 0x14c
    615c:	bl	0 <__aeabi_read_tp>
    6160:	ldr	r3, [sp, #332]	; 0x14c
    6164:	ldr	r0, [r0, r3]
    6168:	ldr	r0, [r0, #128]	; 0x80
    616c:	ldr	r3, [fp, #-16]
    6170:	ldr	r2, [r3, #4]
    6174:	movw	r1, #0
    6178:	ldr	r3, [sp, #336]	; 0x150
    617c:	bl	0 <coda_mem_string_new>
    6180:	str	r0, [fp, #-24]	; 0xffffffe8
    6184:	ldr	r0, [fp, #-16]
    6188:	ldr	r0, [r0, #24]
    618c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6190:	movw	r1, #0
    6194:	movt	r1, #0
    6198:	movw	r3, #0
    619c:	bl	0 <coda_mem_record_add_field>
    61a0:	ldr	r1, [sp, #500]	; 0x1f4
    61a4:	cmp	r1, #79	; 0x4f
    61a8:	str	r0, [sp, #328]	; 0x148
    61ac:	bge	61bc <read_records+0xb4c>
    61b0:	movw	r0, #32
    61b4:	str	r0, [sp, #324]	; 0x144
    61b8:	b	61c4 <read_records+0xb54>
    61bc:	ldrb	r0, [sp, #662]	; 0x296
    61c0:	str	r0, [sp, #324]	; 0x144
    61c4:	ldr	r0, [sp, #324]	; 0x144
    61c8:	add	r3, sp, #504	; 0x1f8
    61cc:	strb	r0, [sp, #504]	; 0x1f8
    61d0:	ldr	r0, [pc, #1512]	; 67c0 <read_records+0x1150>
    61d4:	str	r3, [sp, #320]	; 0x140
    61d8:	str	r0, [sp, #316]	; 0x13c
    61dc:	bl	0 <__aeabi_read_tp>
    61e0:	ldr	r3, [sp, #316]	; 0x13c
    61e4:	ldr	r0, [r0, r3]
    61e8:	ldr	r0, [r0, #132]	; 0x84
    61ec:	ldr	r3, [fp, #-16]
    61f0:	ldr	r2, [r3, #4]
    61f4:	movw	r1, #0
    61f8:	ldr	r3, [sp, #320]	; 0x140
    61fc:	bl	0 <coda_mem_string_new>
    6200:	str	r0, [fp, #-24]	; 0xffffffe8
    6204:	ldr	r0, [fp, #-16]
    6208:	ldr	r0, [r0, #24]
    620c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6210:	movw	r1, #0
    6214:	movt	r1, #0
    6218:	movw	r3, #0
    621c:	bl	0 <coda_mem_record_add_field>
    6220:	ldr	r1, [sp, #500]	; 0x1f4
    6224:	cmp	r1, #80	; 0x50
    6228:	str	r0, [sp, #312]	; 0x138
    622c:	bge	623c <read_records+0xbcc>
    6230:	movw	r0, #32
    6234:	str	r0, [sp, #308]	; 0x134
    6238:	b	6244 <read_records+0xbd4>
    623c:	ldrb	r0, [sp, #663]	; 0x297
    6240:	str	r0, [sp, #308]	; 0x134
    6244:	ldr	r0, [sp, #308]	; 0x134
    6248:	add	r3, sp, #504	; 0x1f8
    624c:	strb	r0, [sp, #504]	; 0x1f8
    6250:	ldr	r0, [pc, #1384]	; 67c0 <read_records+0x1150>
    6254:	str	r3, [sp, #304]	; 0x130
    6258:	str	r0, [sp, #300]	; 0x12c
    625c:	bl	0 <__aeabi_read_tp>
    6260:	ldr	r3, [sp, #300]	; 0x12c
    6264:	ldr	r0, [r0, r3]
    6268:	ldr	r0, [r0, #136]	; 0x88
    626c:	ldr	r3, [fp, #-16]
    6270:	ldr	r2, [r3, #4]
    6274:	movw	r1, #0
    6278:	ldr	r3, [sp, #304]	; 0x130
    627c:	bl	0 <coda_mem_string_new>
    6280:	str	r0, [fp, #-24]	; 0xffffffe8
    6284:	ldr	r0, [fp, #-16]
    6288:	ldr	r0, [r0, #24]
    628c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6290:	movw	r1, #0
    6294:	movt	r1, #0
    6298:	movw	r3, #0
    629c:	bl	0 <coda_mem_record_add_field>
    62a0:	str	r0, [sp, #296]	; 0x128
    62a4:	b	6a64 <read_records+0x13f4>
    62a8:	ldrb	r0, [sp, #584]	; 0x248
    62ac:	cmp	r0, #86	; 0x56
    62b0:	bne	6a34 <read_records+0x13c4>
    62b4:	ldr	r0, [fp, #-16]
    62b8:	ldrb	r0, [r0, #44]	; 0x2c
    62bc:	cmp	r0, #86	; 0x56
    62c0:	beq	62f0 <read_records+0xc80>
    62c4:	ldr	r0, [fp, #-16]
    62c8:	ldr	r2, [r0, #48]	; 0x30
    62cc:	ldr	r0, [fp, #-16]
    62d0:	ldr	r3, [r0, #52]	; 0x34
    62d4:	mvn	r0, #21
    62d8:	movw	r1, #0
    62dc:	movt	r1, #0
    62e0:	bl	0 <coda_set_error>
    62e4:	mvn	r0, #0
    62e8:	str	r0, [fp, #-12]
    62ec:	b	7f74 <read_records+0x2904>
    62f0:	ldr	r0, [fp, #-16]
    62f4:	ldr	r0, [r0, #28]
    62f8:	movw	r1, #0
    62fc:	cmp	r0, r1
    6300:	bne	6330 <read_records+0xcc0>
    6304:	ldr	r0, [fp, #-16]
    6308:	ldr	r2, [r0, #48]	; 0x30
    630c:	ldr	r0, [fp, #-16]
    6310:	ldr	r3, [r0, #52]	; 0x34
    6314:	mvn	r0, #21
    6318:	movw	r1, #0
    631c:	movt	r1, #0
    6320:	bl	0 <coda_set_error>
    6324:	mvn	r0, #0
    6328:	str	r0, [fp, #-12]
    632c:	b	7f74 <read_records+0x2904>
    6330:	ldr	r0, [pc, #1160]	; 67c0 <read_records+0x1150>
    6334:	str	r0, [sp, #292]	; 0x124
    6338:	bl	0 <__aeabi_read_tp>
    633c:	ldr	ip, [sp, #292]	; 0x124
    6340:	ldr	r0, [r0, ip]
    6344:	ldr	r0, [r0, #276]	; 0x114
    6348:	movw	r1, #0
    634c:	bl	0 <coda_mem_record_new>
    6350:	ldr	r1, [fp, #-16]
    6354:	str	r0, [r1, #32]
    6358:	ldr	r0, [sp, #500]	; 0x1f4
    635c:	cmp	r0, #60	; 0x3c
    6360:	bge	63a4 <read_records+0xd34>
    6364:	ldr	r2, [sp, #500]	; 0x1f4
    6368:	ldr	r0, [fp, #-16]
    636c:	ldr	r3, [r0, #48]	; 0x30
    6370:	ldr	r0, [fp, #-16]
    6374:	ldr	r0, [r0, #52]	; 0x34
    6378:	mvn	r1, #21
    637c:	str	r0, [sp, #288]	; 0x120
    6380:	mov	r0, r1
    6384:	movw	r1, #0
    6388:	movt	r1, #0
    638c:	ldr	ip, [sp, #288]	; 0x120
    6390:	str	ip, [sp]
    6394:	bl	0 <coda_set_error>
    6398:	mvn	r0, #0
    639c:	str	r0, [fp, #-12]
    63a0:	b	7f74 <read_records+0x2904>
    63a4:	add	r3, sp, #504	; 0x1f8
    63a8:	ldrb	r0, [sp, #587]	; 0x24b
    63ac:	strb	r0, [sp, #506]	; 0x1fa
    63b0:	add	lr, sp, #512	; 0x200
    63b4:	ldrh	r0, [lr, #73]	; 0x49
    63b8:	add	lr, sp, #256	; 0x100
    63bc:	strh	r0, [lr, #248]	; 0xf8
    63c0:	mov	r0, #0
    63c4:	strb	r0, [sp, #507]	; 0x1fb
    63c8:	ldr	r0, [pc, #1008]	; 67c0 <read_records+0x1150>
    63cc:	str	r3, [sp, #284]	; 0x11c
    63d0:	str	r0, [sp, #280]	; 0x118
    63d4:	bl	0 <__aeabi_read_tp>
    63d8:	ldr	r3, [sp, #280]	; 0x118
    63dc:	ldr	r0, [r0, r3]
    63e0:	ldr	r0, [r0, #88]	; 0x58
    63e4:	ldr	r3, [fp, #-16]
    63e8:	ldr	r2, [r3, #4]
    63ec:	movw	r1, #0
    63f0:	ldr	r3, [sp, #284]	; 0x11c
    63f4:	bl	0 <coda_mem_string_new>
    63f8:	str	r0, [fp, #-24]	; 0xffffffe8
    63fc:	ldr	r0, [fp, #-16]
    6400:	ldr	r0, [r0, #32]
    6404:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6408:	movw	r1, #0
    640c:	movt	r1, #0
    6410:	movw	r3, #0
    6414:	bl	0 <coda_mem_record_add_field>
    6418:	add	r1, sp, #584	; 0x248
    641c:	add	r1, r1, #4
    6420:	str	r0, [sp, #276]	; 0x114
    6424:	mov	r0, r1
    6428:	movw	r1, #14
    642c:	add	r2, sp, #576	; 0x240
    6430:	movw	r3, #0
    6434:	bl	0 <coda_ascii_parse_double>
    6438:	cmp	r0, #0
    643c:	bge	646c <read_records+0xdfc>
    6440:	ldr	r0, [fp, #-16]
    6444:	ldr	r1, [r0, #48]	; 0x30
    6448:	ldr	r0, [fp, #-16]
    644c:	ldr	r0, [r0, #52]	; 0x34
    6450:	add	r2, r0, #4
    6454:	movw	r0, #0
    6458:	movt	r0, #0
    645c:	bl	0 <coda_add_error_message>
    6460:	mvn	r0, #0
    6464:	str	r0, [fp, #-12]
    6468:	b	7f74 <read_records+0x2904>
    646c:	ldr	r0, [pc, #844]	; 67c0 <read_records+0x1150>
    6470:	str	r0, [sp, #272]	; 0x110
    6474:	bl	0 <__aeabi_read_tp>
    6478:	ldr	ip, [sp, #272]	; 0x110
    647c:	ldr	r0, [r0, ip]
    6480:	ldr	r0, [r0, #184]	; 0xb8
    6484:	ldr	ip, [fp, #-16]
    6488:	ldr	r2, [ip, #4]
    648c:	vldr	d0, [sp, #576]	; 0x240
    6490:	movw	r1, #0
    6494:	bl	0 <coda_mem_double_new>
    6498:	str	r0, [fp, #-24]	; 0xffffffe8
    649c:	ldr	r0, [fp, #-16]
    64a0:	ldr	r0, [r0, #32]
    64a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    64a8:	movw	r1, #0
    64ac:	movt	r1, #0
    64b0:	movw	r3, #0
    64b4:	bl	0 <coda_mem_record_add_field>
    64b8:	add	r1, sp, #584	; 0x248
    64bc:	add	r1, r1, #18
    64c0:	str	r0, [sp, #268]	; 0x10c
    64c4:	mov	r0, r1
    64c8:	movw	r1, #14
    64cc:	add	r2, sp, #576	; 0x240
    64d0:	movw	r3, #0
    64d4:	bl	0 <coda_ascii_parse_double>
    64d8:	cmp	r0, #0
    64dc:	bge	650c <read_records+0xe9c>
    64e0:	ldr	r0, [fp, #-16]
    64e4:	ldr	r1, [r0, #48]	; 0x30
    64e8:	ldr	r0, [fp, #-16]
    64ec:	ldr	r0, [r0, #52]	; 0x34
    64f0:	add	r2, r0, #18
    64f4:	movw	r0, #0
    64f8:	movt	r0, #0
    64fc:	bl	0 <coda_add_error_message>
    6500:	mvn	r0, #0
    6504:	str	r0, [fp, #-12]
    6508:	b	7f74 <read_records+0x2904>
    650c:	ldr	r0, [pc, #684]	; 67c0 <read_records+0x1150>
    6510:	str	r0, [sp, #264]	; 0x108
    6514:	bl	0 <__aeabi_read_tp>
    6518:	ldr	ip, [sp, #264]	; 0x108
    651c:	ldr	r0, [r0, ip]
    6520:	ldr	r0, [r0, #188]	; 0xbc
    6524:	ldr	ip, [fp, #-16]
    6528:	ldr	r2, [ip, #4]
    652c:	vldr	d0, [sp, #576]	; 0x240
    6530:	movw	r1, #0
    6534:	bl	0 <coda_mem_double_new>
    6538:	str	r0, [fp, #-24]	; 0xffffffe8
    653c:	ldr	r0, [fp, #-16]
    6540:	ldr	r0, [r0, #32]
    6544:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6548:	movw	r1, #0
    654c:	movt	r1, #0
    6550:	movw	r3, #0
    6554:	bl	0 <coda_mem_record_add_field>
    6558:	add	r1, sp, #584	; 0x248
    655c:	add	r1, r1, #32
    6560:	str	r0, [sp, #260]	; 0x104
    6564:	mov	r0, r1
    6568:	movw	r1, #14
    656c:	add	r2, sp, #576	; 0x240
    6570:	movw	r3, #0
    6574:	bl	0 <coda_ascii_parse_double>
    6578:	cmp	r0, #0
    657c:	bge	65ac <read_records+0xf3c>
    6580:	ldr	r0, [fp, #-16]
    6584:	ldr	r1, [r0, #48]	; 0x30
    6588:	ldr	r0, [fp, #-16]
    658c:	ldr	r0, [r0, #52]	; 0x34
    6590:	add	r2, r0, #32
    6594:	movw	r0, #0
    6598:	movt	r0, #0
    659c:	bl	0 <coda_add_error_message>
    65a0:	mvn	r0, #0
    65a4:	str	r0, [fp, #-12]
    65a8:	b	7f74 <read_records+0x2904>
    65ac:	ldr	r0, [pc, #524]	; 67c0 <read_records+0x1150>
    65b0:	str	r0, [sp, #256]	; 0x100
    65b4:	bl	0 <__aeabi_read_tp>
    65b8:	ldr	ip, [sp, #256]	; 0x100
    65bc:	ldr	r0, [r0, ip]
    65c0:	ldr	r0, [r0, #192]	; 0xc0
    65c4:	ldr	ip, [fp, #-16]
    65c8:	ldr	r2, [ip, #4]
    65cc:	vldr	d0, [sp, #576]	; 0x240
    65d0:	movw	r1, #0
    65d4:	bl	0 <coda_mem_double_new>
    65d8:	str	r0, [fp, #-24]	; 0xffffffe8
    65dc:	ldr	r0, [fp, #-16]
    65e0:	ldr	r0, [r0, #32]
    65e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    65e8:	movw	r1, #0
    65ec:	movt	r1, #0
    65f0:	movw	r3, #0
    65f4:	bl	0 <coda_mem_record_add_field>
    65f8:	add	r1, sp, #584	; 0x248
    65fc:	add	r1, r1, #46	; 0x2e
    6600:	str	r0, [sp, #252]	; 0xfc
    6604:	mov	r0, r1
    6608:	movw	r1, #14
    660c:	add	r2, sp, #576	; 0x240
    6610:	movw	r3, #0
    6614:	bl	0 <coda_ascii_parse_double>
    6618:	cmp	r0, #0
    661c:	bge	664c <read_records+0xfdc>
    6620:	ldr	r0, [fp, #-16]
    6624:	ldr	r1, [r0, #48]	; 0x30
    6628:	ldr	r0, [fp, #-16]
    662c:	ldr	r0, [r0, #52]	; 0x34
    6630:	add	r2, r0, #46	; 0x2e
    6634:	movw	r0, #0
    6638:	movt	r0, #0
    663c:	bl	0 <coda_add_error_message>
    6640:	mvn	r0, #0
    6644:	str	r0, [fp, #-12]
    6648:	b	7f74 <read_records+0x2904>
    664c:	ldr	r0, [pc, #364]	; 67c0 <read_records+0x1150>
    6650:	str	r0, [sp, #248]	; 0xf8
    6654:	bl	0 <__aeabi_read_tp>
    6658:	ldr	ip, [sp, #248]	; 0xf8
    665c:	ldr	r0, [r0, ip]
    6660:	ldr	r0, [r0, #196]	; 0xc4
    6664:	ldr	ip, [fp, #-16]
    6668:	ldr	r2, [ip, #4]
    666c:	vldr	d0, [sp, #576]	; 0x240
    6670:	movw	r1, #0
    6674:	bl	0 <coda_mem_double_new>
    6678:	str	r0, [fp, #-24]	; 0xffffffe8
    667c:	ldr	r0, [fp, #-16]
    6680:	ldr	r0, [r0, #32]
    6684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6688:	movw	r1, #0
    668c:	movt	r1, #0
    6690:	movw	r3, #0
    6694:	bl	0 <coda_mem_record_add_field>
    6698:	ldr	r1, [sp, #500]	; 0x1f4
    669c:	cmp	r1, #63	; 0x3f
    66a0:	str	r0, [sp, #244]	; 0xf4
    66a4:	blt	66cc <read_records+0x105c>
    66a8:	add	r0, sp, #584	; 0x248
    66ac:	add	r0, r0, #61	; 0x3d
    66b0:	ldrh	r0, [r0]
    66b4:	movw	r1, #8224	; 0x2020
    66b8:	sub	r2, r0, r1
    66bc:	cmp	r0, r1
    66c0:	movwne	r2, #1
    66c4:	cmp	r2, #0
    66c8:	bne	66dc <read_records+0x106c>
    66cc:	mov	r0, #0
    66d0:	str	r0, [sp, #572]	; 0x23c
    66d4:	str	r0, [sp, #568]	; 0x238
    66d8:	b	672c <read_records+0x10bc>
    66dc:	add	r0, sp, #584	; 0x248
    66e0:	add	r0, r0, #61	; 0x3d
    66e4:	movw	r1, #2
    66e8:	add	r2, sp, #568	; 0x238
    66ec:	movw	r3, #0
    66f0:	bl	0 <coda_ascii_parse_int64>
    66f4:	cmp	r0, #0
    66f8:	bge	6728 <read_records+0x10b8>
    66fc:	ldr	r0, [fp, #-16]
    6700:	ldr	r1, [r0, #48]	; 0x30
    6704:	ldr	r0, [fp, #-16]
    6708:	ldr	r0, [r0, #52]	; 0x34
    670c:	add	r2, r0, #61	; 0x3d
    6710:	movw	r0, #0
    6714:	movt	r0, #0
    6718:	bl	0 <coda_add_error_message>
    671c:	mvn	r0, #0
    6720:	str	r0, [fp, #-12]
    6724:	b	7f74 <read_records+0x2904>
    6728:	b	672c <read_records+0x10bc>
    672c:	ldr	r0, [pc, #140]	; 67c0 <read_records+0x1150>
    6730:	str	r0, [sp, #240]	; 0xf0
    6734:	bl	0 <__aeabi_read_tp>
    6738:	ldr	ip, [sp, #240]	; 0xf0
    673c:	ldr	r0, [r0, ip]
    6740:	ldr	r0, [r0, #200]	; 0xc8
    6744:	ldr	ip, [fp, #-16]
    6748:	ldr	r2, [ip, #4]
    674c:	ldrb	ip, [sp, #568]	; 0x238
    6750:	movw	r1, #0
    6754:	sxtb	r3, ip
    6758:	bl	0 <coda_mem_int8_new>
    675c:	str	r0, [fp, #-24]	; 0xffffffe8
    6760:	ldr	r0, [fp, #-16]
    6764:	ldr	r0, [r0, #32]
    6768:	ldr	r2, [fp, #-24]	; 0xffffffe8
    676c:	movw	r1, #0
    6770:	movt	r1, #0
    6774:	movw	r3, #0
    6778:	bl	0 <coda_mem_record_add_field>
    677c:	ldr	r1, [sp, #500]	; 0x1f4
    6780:	cmp	r1, #66	; 0x42
    6784:	str	r0, [sp, #236]	; 0xec
    6788:	blt	67b0 <read_records+0x1140>
    678c:	add	r0, sp, #584	; 0x248
    6790:	add	r0, r0, #64	; 0x40
    6794:	ldrh	r0, [r0]
    6798:	movw	r1, #8224	; 0x2020
    679c:	sub	r2, r0, r1
    67a0:	cmp	r0, r1
    67a4:	movwne	r2, #1
    67a8:	cmp	r2, #0
    67ac:	bne	67c4 <read_records+0x1154>
    67b0:	mov	r0, #0
    67b4:	str	r0, [sp, #572]	; 0x23c
    67b8:	str	r0, [sp, #568]	; 0x238
    67bc:	b	6814 <read_records+0x11a4>
    67c0:	.word	0x00000000
    67c4:	add	r0, sp, #584	; 0x248
    67c8:	add	r0, r0, #64	; 0x40
    67cc:	movw	r1, #2
    67d0:	add	r2, sp, #568	; 0x238
    67d4:	movw	r3, #0
    67d8:	bl	0 <coda_ascii_parse_int64>
    67dc:	cmp	r0, #0
    67e0:	bge	6810 <read_records+0x11a0>
    67e4:	ldr	r0, [fp, #-16]
    67e8:	ldr	r1, [r0, #48]	; 0x30
    67ec:	ldr	r0, [fp, #-16]
    67f0:	ldr	r0, [r0, #52]	; 0x34
    67f4:	add	r2, r0, #64	; 0x40
    67f8:	movw	r0, #0
    67fc:	movt	r0, #0
    6800:	bl	0 <coda_add_error_message>
    6804:	mvn	r0, #0
    6808:	str	r0, [fp, #-12]
    680c:	b	7f74 <read_records+0x2904>
    6810:	b	6814 <read_records+0x11a4>
    6814:	ldr	r0, [pc, #-92]	; 67c0 <read_records+0x1150>
    6818:	str	r0, [sp, #232]	; 0xe8
    681c:	bl	0 <__aeabi_read_tp>
    6820:	ldr	ip, [sp, #232]	; 0xe8
    6824:	ldr	r0, [r0, ip]
    6828:	ldr	r0, [r0, #204]	; 0xcc
    682c:	ldr	ip, [fp, #-16]
    6830:	ldr	r2, [ip, #4]
    6834:	ldrb	ip, [sp, #568]	; 0x238
    6838:	movw	r1, #0
    683c:	sxtb	r3, ip
    6840:	bl	0 <coda_mem_int8_new>
    6844:	str	r0, [fp, #-24]	; 0xffffffe8
    6848:	ldr	r0, [fp, #-16]
    684c:	ldr	r0, [r0, #32]
    6850:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6854:	movw	r1, #0
    6858:	movt	r1, #0
    685c:	movw	r3, #0
    6860:	bl	0 <coda_mem_record_add_field>
    6864:	ldr	r1, [sp, #500]	; 0x1f4
    6868:	cmp	r1, #69	; 0x45
    686c:	str	r0, [sp, #228]	; 0xe4
    6870:	blt	6898 <read_records+0x1228>
    6874:	add	r0, sp, #584	; 0x248
    6878:	add	r0, r0, #67	; 0x43
    687c:	ldrh	r0, [r0]
    6880:	movw	r1, #8224	; 0x2020
    6884:	sub	r2, r0, r1
    6888:	cmp	r0, r1
    688c:	movwne	r2, #1
    6890:	cmp	r2, #0
    6894:	bne	68a8 <read_records+0x1238>
    6898:	mov	r0, #0
    689c:	str	r0, [sp, #572]	; 0x23c
    68a0:	str	r0, [sp, #568]	; 0x238
    68a4:	b	68f8 <read_records+0x1288>
    68a8:	add	r0, sp, #584	; 0x248
    68ac:	add	r0, r0, #67	; 0x43
    68b0:	movw	r1, #2
    68b4:	add	r2, sp, #568	; 0x238
    68b8:	movw	r3, #0
    68bc:	bl	0 <coda_ascii_parse_int64>
    68c0:	cmp	r0, #0
    68c4:	bge	68f4 <read_records+0x1284>
    68c8:	ldr	r0, [fp, #-16]
    68cc:	ldr	r1, [r0, #48]	; 0x30
    68d0:	ldr	r0, [fp, #-16]
    68d4:	ldr	r0, [r0, #52]	; 0x34
    68d8:	add	r2, r0, #67	; 0x43
    68dc:	movw	r0, #0
    68e0:	movt	r0, #0
    68e4:	bl	0 <coda_add_error_message>
    68e8:	mvn	r0, #0
    68ec:	str	r0, [fp, #-12]
    68f0:	b	7f74 <read_records+0x2904>
    68f4:	b	68f8 <read_records+0x1288>
    68f8:	ldr	r0, [pc, #-320]	; 67c0 <read_records+0x1150>
    68fc:	str	r0, [sp, #224]	; 0xe0
    6900:	bl	0 <__aeabi_read_tp>
    6904:	ldr	ip, [sp, #224]	; 0xe0
    6908:	ldr	r0, [r0, ip]
    690c:	ldr	r0, [r0, #208]	; 0xd0
    6910:	ldr	ip, [fp, #-16]
    6914:	ldr	r2, [ip, #4]
    6918:	ldrb	ip, [sp, #568]	; 0x238
    691c:	movw	r1, #0
    6920:	sxtb	r3, ip
    6924:	bl	0 <coda_mem_int8_new>
    6928:	str	r0, [fp, #-24]	; 0xffffffe8
    692c:	ldr	r0, [fp, #-16]
    6930:	ldr	r0, [r0, #32]
    6934:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6938:	movw	r1, #0
    693c:	movt	r1, #0
    6940:	movw	r3, #0
    6944:	bl	0 <coda_mem_record_add_field>
    6948:	ldr	r1, [sp, #500]	; 0x1f4
    694c:	cmp	r1, #73	; 0x49
    6950:	str	r0, [sp, #220]	; 0xdc
    6954:	blt	6978 <read_records+0x1308>
    6958:	add	r0, sp, #584	; 0x248
    695c:	add	r0, r0, #70	; 0x46
    6960:	movw	r1, #0
    6964:	movt	r1, #0
    6968:	mov	r2, #3
    696c:	bl	0 <memcmp>
    6970:	cmp	r0, #0
    6974:	bne	6988 <read_records+0x1318>
    6978:	mov	r0, #0
    697c:	str	r0, [sp, #572]	; 0x23c
    6980:	str	r0, [sp, #568]	; 0x238
    6984:	b	69d8 <read_records+0x1368>
    6988:	add	r0, sp, #584	; 0x248
    698c:	add	r0, r0, #70	; 0x46
    6990:	movw	r1, #3
    6994:	add	r2, sp, #568	; 0x238
    6998:	movw	r3, #0
    699c:	bl	0 <coda_ascii_parse_int64>
    69a0:	cmp	r0, #0
    69a4:	bge	69d4 <read_records+0x1364>
    69a8:	ldr	r0, [fp, #-16]
    69ac:	ldr	r1, [r0, #48]	; 0x30
    69b0:	ldr	r0, [fp, #-16]
    69b4:	ldr	r0, [r0, #52]	; 0x34
    69b8:	add	r2, r0, #70	; 0x46
    69bc:	movw	r0, #0
    69c0:	movt	r0, #0
    69c4:	bl	0 <coda_add_error_message>
    69c8:	mvn	r0, #0
    69cc:	str	r0, [fp, #-12]
    69d0:	b	7f74 <read_records+0x2904>
    69d4:	b	69d8 <read_records+0x1368>
    69d8:	ldr	r0, [pc, #-544]	; 67c0 <read_records+0x1150>
    69dc:	str	r0, [sp, #216]	; 0xd8
    69e0:	bl	0 <__aeabi_read_tp>
    69e4:	ldr	ip, [sp, #216]	; 0xd8
    69e8:	ldr	r0, [r0, ip]
    69ec:	ldr	r0, [r0, #212]	; 0xd4
    69f0:	ldr	ip, [fp, #-16]
    69f4:	ldr	r2, [ip, #4]
    69f8:	add	lr, sp, #512	; 0x200
    69fc:	ldrh	ip, [lr, #56]	; 0x38
    6a00:	movw	r1, #0
    6a04:	sxth	r3, ip
    6a08:	bl	0 <coda_mem_int16_new>
    6a0c:	str	r0, [fp, #-24]	; 0xffffffe8
    6a10:	ldr	r0, [fp, #-16]
    6a14:	ldr	r0, [r0, #32]
    6a18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6a1c:	movw	r1, #0
    6a20:	movt	r1, #0
    6a24:	movw	r3, #0
    6a28:	bl	0 <coda_mem_record_add_field>
    6a2c:	str	r0, [sp, #212]	; 0xd4
    6a30:	b	6a60 <read_records+0x13f0>
    6a34:	ldr	r0, [fp, #-16]
    6a38:	ldr	r2, [r0, #48]	; 0x30
    6a3c:	ldr	r0, [fp, #-16]
    6a40:	ldr	r3, [r0, #52]	; 0x34
    6a44:	mvn	r0, #21
    6a48:	movw	r1, #0
    6a4c:	movt	r1, #0
    6a50:	bl	0 <coda_set_error>
    6a54:	mvn	r0, #0
    6a58:	str	r0, [fp, #-12]
    6a5c:	b	7f74 <read_records+0x2904>
    6a60:	b	6a64 <read_records+0x13f4>
    6a64:	b	6a68 <read_records+0x13f8>
    6a68:	ldr	r0, [fp, #-16]
    6a6c:	ldr	r0, [r0]
    6a70:	bl	0 <ftell>
    6a74:	add	r1, sp, #584	; 0x248
    6a78:	ldr	lr, [fp, #-16]
    6a7c:	str	r0, [lr, #52]	; 0x34
    6a80:	ldr	r0, [fp, #-16]
    6a84:	ldr	lr, [r0, #48]	; 0x30
    6a88:	add	lr, lr, #1
    6a8c:	str	lr, [r0, #48]	; 0x30
    6a90:	ldr	r0, [fp, #-16]
    6a94:	ldr	r0, [r0]
    6a98:	bl	7f84 <get_line>
    6a9c:	str	r0, [sp, #500]	; 0x1f4
    6aa0:	ldr	r0, [sp, #500]	; 0x1f4
    6aa4:	cmp	r0, #0
    6aa8:	bge	6ab8 <read_records+0x1448>
    6aac:	mvn	r0, #0
    6ab0:	str	r0, [fp, #-12]
    6ab4:	b	7f74 <read_records+0x2904>
    6ab8:	ldrb	r0, [sp, #584]	; 0x248
    6abc:	cmp	r0, #69	; 0x45
    6ac0:	bne	7e40 <read_records+0x27d0>
    6ac4:	ldrb	r0, [sp, #585]	; 0x249
    6ac8:	cmp	r0, #80	; 0x50
    6acc:	beq	6adc <read_records+0x146c>
    6ad0:	ldrb	r0, [sp, #585]	; 0x249
    6ad4:	cmp	r0, #86	; 0x56
    6ad8:	bne	7e40 <read_records+0x27d0>
    6adc:	ldrb	r0, [sp, #585]	; 0x249
    6ae0:	cmp	r0, #80	; 0x50
    6ae4:	bne	7468 <read_records+0x1df8>
    6ae8:	ldr	r0, [fp, #-16]
    6aec:	ldr	r0, [r0, #24]
    6af0:	movw	r1, #0
    6af4:	cmp	r0, r1
    6af8:	bne	6b28 <read_records+0x14b8>
    6afc:	ldr	r0, [fp, #-16]
    6b00:	ldr	r2, [r0, #48]	; 0x30
    6b04:	ldr	r0, [fp, #-16]
    6b08:	ldr	r3, [r0, #52]	; 0x34
    6b0c:	mvn	r0, #21
    6b10:	movw	r1, #0
    6b14:	movt	r1, #0
    6b18:	bl	0 <coda_set_error>
    6b1c:	mvn	r0, #0
    6b20:	str	r0, [fp, #-12]
    6b24:	b	7f74 <read_records+0x2904>
    6b28:	ldr	r0, [pc, #-880]	; 67c0 <read_records+0x1150>
    6b2c:	str	r0, [sp, #208]	; 0xd0
    6b30:	bl	0 <__aeabi_read_tp>
    6b34:	ldr	ip, [sp, #208]	; 0xd0
    6b38:	ldr	r0, [r0, ip]
    6b3c:	ldr	r0, [r0, #140]	; 0x8c
    6b40:	movw	r1, #0
    6b44:	bl	0 <coda_mem_record_new>
    6b48:	ldr	r1, [fp, #-16]
    6b4c:	str	r0, [r1, #36]	; 0x24
    6b50:	ldr	r0, [sp, #500]	; 0x1f4
    6b54:	cmp	r0, #8
    6b58:	blt	6b8c <read_records+0x151c>
    6b5c:	add	r0, sp, #584	; 0x248
    6b60:	add	r0, r0, #4
    6b64:	ldr	r0, [r0]
    6b68:	movw	r1, #57312	; 0xdfe0
    6b6c:	movt	r1, #57311	; 0xdfdf
    6b70:	add	r1, r0, r1
    6b74:	movw	r2, #8224	; 0x2020
    6b78:	movt	r2, #8224	; 0x2020
    6b7c:	cmp	r0, r2
    6b80:	movwne	r1, #1
    6b84:	cmp	r1, #0
    6b88:	bne	6b9c <read_records+0x152c>
    6b8c:	mov	r0, #0
    6b90:	str	r0, [sp, #572]	; 0x23c
    6b94:	str	r0, [sp, #568]	; 0x238
    6b98:	b	6bec <read_records+0x157c>
    6b9c:	add	r0, sp, #584	; 0x248
    6ba0:	add	r0, r0, #4
    6ba4:	movw	r1, #4
    6ba8:	add	r2, sp, #568	; 0x238
    6bac:	movw	r3, #0
    6bb0:	bl	0 <coda_ascii_parse_int64>
    6bb4:	cmp	r0, #0
    6bb8:	bge	6be8 <read_records+0x1578>
    6bbc:	ldr	r0, [fp, #-16]
    6bc0:	ldr	r1, [r0, #48]	; 0x30
    6bc4:	ldr	r0, [fp, #-16]
    6bc8:	ldr	r0, [r0, #52]	; 0x34
    6bcc:	add	r2, r0, #4
    6bd0:	movw	r0, #0
    6bd4:	movt	r0, #0
    6bd8:	bl	0 <coda_add_error_message>
    6bdc:	mvn	r0, #0
    6be0:	str	r0, [fp, #-12]
    6be4:	b	7f74 <read_records+0x2904>
    6be8:	b	6bec <read_records+0x157c>
    6bec:	ldr	r0, [pc, #-1076]	; 67c0 <read_records+0x1150>
    6bf0:	str	r0, [sp, #204]	; 0xcc
    6bf4:	bl	0 <__aeabi_read_tp>
    6bf8:	ldr	ip, [sp, #204]	; 0xcc
    6bfc:	ldr	r0, [r0, ip]
    6c00:	ldr	r0, [r0, #144]	; 0x90
    6c04:	ldr	ip, [fp, #-16]
    6c08:	ldr	r2, [ip, #4]
    6c0c:	add	lr, sp, #512	; 0x200
    6c10:	ldrh	ip, [lr, #56]	; 0x38
    6c14:	movw	r1, #0
    6c18:	sxth	r3, ip
    6c1c:	bl	0 <coda_mem_int16_new>
    6c20:	str	r0, [fp, #-24]	; 0xffffffe8
    6c24:	ldr	r0, [fp, #-16]
    6c28:	ldr	r0, [r0, #36]	; 0x24
    6c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6c30:	movw	r1, #0
    6c34:	movt	r1, #0
    6c38:	movw	r3, #0
    6c3c:	bl	0 <coda_mem_record_add_field>
    6c40:	ldr	r1, [sp, #500]	; 0x1f4
    6c44:	cmp	r1, #13
    6c48:	str	r0, [sp, #200]	; 0xc8
    6c4c:	blt	6c80 <read_records+0x1610>
    6c50:	add	r0, sp, #584	; 0x248
    6c54:	add	r0, r0, #9
    6c58:	ldr	r0, [r0]
    6c5c:	movw	r1, #57312	; 0xdfe0
    6c60:	movt	r1, #57311	; 0xdfdf
    6c64:	add	r1, r0, r1
    6c68:	movw	r2, #8224	; 0x2020
    6c6c:	movt	r2, #8224	; 0x2020
    6c70:	cmp	r0, r2
    6c74:	movwne	r1, #1
    6c78:	cmp	r1, #0
    6c7c:	bne	6c90 <read_records+0x1620>
    6c80:	mov	r0, #0
    6c84:	str	r0, [sp, #572]	; 0x23c
    6c88:	str	r0, [sp, #568]	; 0x238
    6c8c:	b	6ce0 <read_records+0x1670>
    6c90:	add	r0, sp, #584	; 0x248
    6c94:	add	r0, r0, #9
    6c98:	movw	r1, #4
    6c9c:	add	r2, sp, #568	; 0x238
    6ca0:	movw	r3, #0
    6ca4:	bl	0 <coda_ascii_parse_int64>
    6ca8:	cmp	r0, #0
    6cac:	bge	6cdc <read_records+0x166c>
    6cb0:	ldr	r0, [fp, #-16]
    6cb4:	ldr	r1, [r0, #48]	; 0x30
    6cb8:	ldr	r0, [fp, #-16]
    6cbc:	ldr	r0, [r0, #52]	; 0x34
    6cc0:	add	r2, r0, #9
    6cc4:	movw	r0, #0
    6cc8:	movt	r0, #0
    6ccc:	bl	0 <coda_add_error_message>
    6cd0:	mvn	r0, #0
    6cd4:	str	r0, [fp, #-12]
    6cd8:	b	7f74 <read_records+0x2904>
    6cdc:	b	6ce0 <read_records+0x1670>
    6ce0:	ldr	r0, [pc, #-1320]	; 67c0 <read_records+0x1150>
    6ce4:	str	r0, [sp, #196]	; 0xc4
    6ce8:	bl	0 <__aeabi_read_tp>
    6cec:	ldr	ip, [sp, #196]	; 0xc4
    6cf0:	ldr	r0, [r0, ip]
    6cf4:	ldr	r0, [r0, #148]	; 0x94
    6cf8:	ldr	ip, [fp, #-16]
    6cfc:	ldr	r2, [ip, #4]
    6d00:	add	lr, sp, #512	; 0x200
    6d04:	ldrh	ip, [lr, #56]	; 0x38
    6d08:	movw	r1, #0
    6d0c:	sxth	r3, ip
    6d10:	bl	0 <coda_mem_int16_new>
    6d14:	str	r0, [fp, #-24]	; 0xffffffe8
    6d18:	ldr	r0, [fp, #-16]
    6d1c:	ldr	r0, [r0, #36]	; 0x24
    6d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d24:	movw	r1, #0
    6d28:	movt	r1, #0
    6d2c:	movw	r3, #0
    6d30:	bl	0 <coda_mem_record_add_field>
    6d34:	ldr	r1, [sp, #500]	; 0x1f4
    6d38:	cmp	r1, #18
    6d3c:	str	r0, [sp, #192]	; 0xc0
    6d40:	blt	6d74 <read_records+0x1704>
    6d44:	add	r0, sp, #584	; 0x248
    6d48:	add	r0, r0, #14
    6d4c:	ldr	r0, [r0]
    6d50:	movw	r1, #57312	; 0xdfe0
    6d54:	movt	r1, #57311	; 0xdfdf
    6d58:	add	r1, r0, r1
    6d5c:	movw	r2, #8224	; 0x2020
    6d60:	movt	r2, #8224	; 0x2020
    6d64:	cmp	r0, r2
    6d68:	movwne	r1, #1
    6d6c:	cmp	r1, #0
    6d70:	bne	6d84 <read_records+0x1714>
    6d74:	mov	r0, #0
    6d78:	str	r0, [sp, #572]	; 0x23c
    6d7c:	str	r0, [sp, #568]	; 0x238
    6d80:	b	6dd4 <read_records+0x1764>
    6d84:	add	r0, sp, #584	; 0x248
    6d88:	add	r0, r0, #14
    6d8c:	movw	r1, #4
    6d90:	add	r2, sp, #568	; 0x238
    6d94:	movw	r3, #0
    6d98:	bl	0 <coda_ascii_parse_int64>
    6d9c:	cmp	r0, #0
    6da0:	bge	6dd0 <read_records+0x1760>
    6da4:	ldr	r0, [fp, #-16]
    6da8:	ldr	r1, [r0, #48]	; 0x30
    6dac:	ldr	r0, [fp, #-16]
    6db0:	ldr	r0, [r0, #52]	; 0x34
    6db4:	add	r2, r0, #14
    6db8:	movw	r0, #0
    6dbc:	movt	r0, #0
    6dc0:	bl	0 <coda_add_error_message>
    6dc4:	mvn	r0, #0
    6dc8:	str	r0, [fp, #-12]
    6dcc:	b	7f74 <read_records+0x2904>
    6dd0:	b	6dd4 <read_records+0x1764>
    6dd4:	ldr	r0, [pc, #-1564]	; 67c0 <read_records+0x1150>
    6dd8:	str	r0, [sp, #188]	; 0xbc
    6ddc:	bl	0 <__aeabi_read_tp>
    6de0:	ldr	ip, [sp, #188]	; 0xbc
    6de4:	ldr	r0, [r0, ip]
    6de8:	ldr	r0, [r0, #152]	; 0x98
    6dec:	ldr	ip, [fp, #-16]
    6df0:	ldr	r2, [ip, #4]
    6df4:	add	lr, sp, #512	; 0x200
    6df8:	ldrh	ip, [lr, #56]	; 0x38
    6dfc:	movw	r1, #0
    6e00:	sxth	r3, ip
    6e04:	bl	0 <coda_mem_int16_new>
    6e08:	str	r0, [fp, #-24]	; 0xffffffe8
    6e0c:	ldr	r0, [fp, #-16]
    6e10:	ldr	r0, [r0, #36]	; 0x24
    6e14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e18:	movw	r1, #0
    6e1c:	movt	r1, #0
    6e20:	movw	r3, #0
    6e24:	bl	0 <coda_mem_record_add_field>
    6e28:	ldr	r1, [sp, #500]	; 0x1f4
    6e2c:	cmp	r1, #26
    6e30:	str	r0, [sp, #184]	; 0xb8
    6e34:	blt	6e58 <read_records+0x17e8>
    6e38:	add	r0, sp, #584	; 0x248
    6e3c:	add	r0, r0, #19
    6e40:	movw	r1, #0
    6e44:	movt	r1, #0
    6e48:	mov	r2, #7
    6e4c:	bl	0 <memcmp>
    6e50:	cmp	r0, #0
    6e54:	bne	6e68 <read_records+0x17f8>
    6e58:	mov	r0, #0
    6e5c:	str	r0, [sp, #572]	; 0x23c
    6e60:	str	r0, [sp, #568]	; 0x238
    6e64:	b	6eb8 <read_records+0x1848>
    6e68:	add	r0, sp, #584	; 0x248
    6e6c:	add	r0, r0, #19
    6e70:	movw	r1, #7
    6e74:	add	r2, sp, #568	; 0x238
    6e78:	movw	r3, #0
    6e7c:	bl	0 <coda_ascii_parse_int64>
    6e80:	cmp	r0, #0
    6e84:	bge	6eb4 <read_records+0x1844>
    6e88:	ldr	r0, [fp, #-16]
    6e8c:	ldr	r1, [r0, #48]	; 0x30
    6e90:	ldr	r0, [fp, #-16]
    6e94:	ldr	r0, [r0, #52]	; 0x34
    6e98:	add	r2, r0, #19
    6e9c:	movw	r0, #0
    6ea0:	movt	r0, #0
    6ea4:	bl	0 <coda_add_error_message>
    6ea8:	mvn	r0, #0
    6eac:	str	r0, [fp, #-12]
    6eb0:	b	7f74 <read_records+0x2904>
    6eb4:	b	6eb8 <read_records+0x1848>
    6eb8:	ldr	r0, [pc, #-1792]	; 67c0 <read_records+0x1150>
    6ebc:	str	r0, [sp, #180]	; 0xb4
    6ec0:	bl	0 <__aeabi_read_tp>
    6ec4:	ldr	ip, [sp, #180]	; 0xb4
    6ec8:	ldr	r0, [r0, ip]
    6ecc:	ldr	r0, [r0, #156]	; 0x9c
    6ed0:	ldr	ip, [fp, #-16]
    6ed4:	ldr	r2, [ip, #4]
    6ed8:	ldr	r3, [sp, #568]	; 0x238
    6edc:	movw	r1, #0
    6ee0:	bl	0 <coda_mem_int32_new>
    6ee4:	str	r0, [fp, #-24]	; 0xffffffe8
    6ee8:	ldr	r0, [fp, #-16]
    6eec:	ldr	r0, [r0, #36]	; 0x24
    6ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6ef4:	movw	r1, #0
    6ef8:	movt	r1, #0
    6efc:	movw	r3, #0
    6f00:	bl	0 <coda_mem_record_add_field>
    6f04:	ldr	r1, [sp, #500]	; 0x1f4
    6f08:	cmp	r1, #35	; 0x23
    6f0c:	str	r0, [sp, #176]	; 0xb0
    6f10:	blt	6f34 <read_records+0x18c4>
    6f14:	add	r0, sp, #584	; 0x248
    6f18:	add	r0, r0, #27
    6f1c:	movw	r1, #0
    6f20:	movt	r1, #0
    6f24:	mov	r2, #8
    6f28:	bl	0 <memcmp>
    6f2c:	cmp	r0, #0
    6f30:	bne	6f44 <read_records+0x18d4>
    6f34:	mov	r0, #0
    6f38:	str	r0, [sp, #572]	; 0x23c
    6f3c:	str	r0, [sp, #568]	; 0x238
    6f40:	b	6f94 <read_records+0x1924>
    6f44:	add	r0, sp, #584	; 0x248
    6f48:	add	r0, r0, #27
    6f4c:	movw	r1, #8
    6f50:	add	r2, sp, #568	; 0x238
    6f54:	movw	r3, #0
    6f58:	bl	0 <coda_ascii_parse_int64>
    6f5c:	cmp	r0, #0
    6f60:	bge	6f90 <read_records+0x1920>
    6f64:	ldr	r0, [fp, #-16]
    6f68:	ldr	r1, [r0, #48]	; 0x30
    6f6c:	ldr	r0, [fp, #-16]
    6f70:	ldr	r0, [r0, #52]	; 0x34
    6f74:	add	r2, r0, #27
    6f78:	movw	r0, #0
    6f7c:	movt	r0, #0
    6f80:	bl	0 <coda_add_error_message>
    6f84:	mvn	r0, #0
    6f88:	str	r0, [fp, #-12]
    6f8c:	b	7f74 <read_records+0x2904>
    6f90:	b	6f94 <read_records+0x1924>
    6f94:	ldr	r0, [pc, #4068]	; 7f80 <read_records+0x2910>
    6f98:	str	r0, [sp, #172]	; 0xac
    6f9c:	bl	0 <__aeabi_read_tp>
    6fa0:	ldr	ip, [sp, #172]	; 0xac
    6fa4:	ldr	r0, [r0, ip]
    6fa8:	ldr	r0, [r0, #160]	; 0xa0
    6fac:	ldr	ip, [fp, #-16]
    6fb0:	ldr	r2, [ip, #4]
    6fb4:	ldr	r3, [sp, #568]	; 0x238
    6fb8:	movw	r1, #0
    6fbc:	bl	0 <coda_mem_int32_new>
    6fc0:	str	r0, [fp, #-24]	; 0xffffffe8
    6fc4:	ldr	r0, [fp, #-16]
    6fc8:	ldr	r0, [r0, #36]	; 0x24
    6fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6fd0:	movw	r1, #0
    6fd4:	movt	r1, #0
    6fd8:	movw	r3, #0
    6fdc:	bl	0 <coda_mem_record_add_field>
    6fe0:	ldr	r1, [sp, #500]	; 0x1f4
    6fe4:	cmp	r1, #44	; 0x2c
    6fe8:	str	r0, [sp, #168]	; 0xa8
    6fec:	blt	7010 <read_records+0x19a0>
    6ff0:	add	r0, sp, #584	; 0x248
    6ff4:	add	r0, r0, #36	; 0x24
    6ff8:	movw	r1, #0
    6ffc:	movt	r1, #0
    7000:	mov	r2, #8
    7004:	bl	0 <memcmp>
    7008:	cmp	r0, #0
    700c:	bne	7020 <read_records+0x19b0>
    7010:	mov	r0, #0
    7014:	str	r0, [sp, #572]	; 0x23c
    7018:	str	r0, [sp, #568]	; 0x238
    701c:	b	7070 <read_records+0x1a00>
    7020:	add	r0, sp, #584	; 0x248
    7024:	add	r0, r0, #36	; 0x24
    7028:	movw	r1, #8
    702c:	add	r2, sp, #568	; 0x238
    7030:	movw	r3, #0
    7034:	bl	0 <coda_ascii_parse_int64>
    7038:	cmp	r0, #0
    703c:	bge	706c <read_records+0x19fc>
    7040:	ldr	r0, [fp, #-16]
    7044:	ldr	r1, [r0, #48]	; 0x30
    7048:	ldr	r0, [fp, #-16]
    704c:	ldr	r0, [r0, #52]	; 0x34
    7050:	add	r2, r0, #36	; 0x24
    7054:	movw	r0, #0
    7058:	movt	r0, #0
    705c:	bl	0 <coda_add_error_message>
    7060:	mvn	r0, #0
    7064:	str	r0, [fp, #-12]
    7068:	b	7f74 <read_records+0x2904>
    706c:	b	7070 <read_records+0x1a00>
    7070:	ldr	r0, [pc, #3848]	; 7f80 <read_records+0x2910>
    7074:	str	r0, [sp, #164]	; 0xa4
    7078:	bl	0 <__aeabi_read_tp>
    707c:	ldr	ip, [sp, #164]	; 0xa4
    7080:	ldr	r0, [r0, ip]
    7084:	ldr	r0, [r0, #164]	; 0xa4
    7088:	ldr	ip, [fp, #-16]
    708c:	ldr	r2, [ip, #4]
    7090:	ldr	r3, [sp, #568]	; 0x238
    7094:	movw	r1, #0
    7098:	bl	0 <coda_mem_int32_new>
    709c:	str	r0, [fp, #-24]	; 0xffffffe8
    70a0:	ldr	r0, [fp, #-16]
    70a4:	ldr	r0, [r0, #36]	; 0x24
    70a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    70ac:	movw	r1, #0
    70b0:	movt	r1, #0
    70b4:	movw	r3, #0
    70b8:	bl	0 <coda_mem_record_add_field>
    70bc:	ldr	r1, [sp, #500]	; 0x1f4
    70c0:	cmp	r1, #53	; 0x35
    70c4:	str	r0, [sp, #160]	; 0xa0
    70c8:	blt	70ec <read_records+0x1a7c>
    70cc:	add	r0, sp, #584	; 0x248
    70d0:	add	r0, r0, #45	; 0x2d
    70d4:	movw	r1, #0
    70d8:	movt	r1, #0
    70dc:	mov	r2, #8
    70e0:	bl	0 <memcmp>
    70e4:	cmp	r0, #0
    70e8:	bne	70fc <read_records+0x1a8c>
    70ec:	mov	r0, #0
    70f0:	str	r0, [sp, #572]	; 0x23c
    70f4:	str	r0, [sp, #568]	; 0x238
    70f8:	b	714c <read_records+0x1adc>
    70fc:	add	r0, sp, #584	; 0x248
    7100:	add	r0, r0, #45	; 0x2d
    7104:	movw	r1, #8
    7108:	add	r2, sp, #568	; 0x238
    710c:	movw	r3, #0
    7110:	bl	0 <coda_ascii_parse_int64>
    7114:	cmp	r0, #0
    7118:	bge	7148 <read_records+0x1ad8>
    711c:	ldr	r0, [fp, #-16]
    7120:	ldr	r1, [r0, #48]	; 0x30
    7124:	ldr	r0, [fp, #-16]
    7128:	ldr	r0, [r0, #52]	; 0x34
    712c:	add	r2, r0, #45	; 0x2d
    7130:	movw	r0, #0
    7134:	movt	r0, #0
    7138:	bl	0 <coda_add_error_message>
    713c:	mvn	r0, #0
    7140:	str	r0, [fp, #-12]
    7144:	b	7f74 <read_records+0x2904>
    7148:	b	714c <read_records+0x1adc>
    714c:	ldr	r0, [pc, #3628]	; 7f80 <read_records+0x2910>
    7150:	str	r0, [sp, #156]	; 0x9c
    7154:	bl	0 <__aeabi_read_tp>
    7158:	ldr	ip, [sp, #156]	; 0x9c
    715c:	ldr	r0, [r0, ip]
    7160:	ldr	r0, [r0, #168]	; 0xa8
    7164:	ldr	ip, [fp, #-16]
    7168:	ldr	r2, [ip, #4]
    716c:	ldr	r3, [sp, #568]	; 0x238
    7170:	movw	r1, #0
    7174:	bl	0 <coda_mem_int32_new>
    7178:	str	r0, [fp, #-24]	; 0xffffffe8
    717c:	ldr	r0, [fp, #-16]
    7180:	ldr	r0, [r0, #36]	; 0x24
    7184:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7188:	movw	r1, #0
    718c:	movt	r1, #0
    7190:	movw	r3, #0
    7194:	bl	0 <coda_mem_record_add_field>
    7198:	ldr	r1, [sp, #500]	; 0x1f4
    719c:	cmp	r1, #62	; 0x3e
    71a0:	str	r0, [sp, #152]	; 0x98
    71a4:	blt	71c8 <read_records+0x1b58>
    71a8:	add	r0, sp, #584	; 0x248
    71ac:	add	r0, r0, #54	; 0x36
    71b0:	movw	r1, #0
    71b4:	movt	r1, #0
    71b8:	mov	r2, #8
    71bc:	bl	0 <memcmp>
    71c0:	cmp	r0, #0
    71c4:	bne	71d8 <read_records+0x1b68>
    71c8:	mov	r0, #0
    71cc:	str	r0, [sp, #572]	; 0x23c
    71d0:	str	r0, [sp, #568]	; 0x238
    71d4:	b	7228 <read_records+0x1bb8>
    71d8:	add	r0, sp, #584	; 0x248
    71dc:	add	r0, r0, #54	; 0x36
    71e0:	movw	r1, #8
    71e4:	add	r2, sp, #568	; 0x238
    71e8:	movw	r3, #0
    71ec:	bl	0 <coda_ascii_parse_int64>
    71f0:	cmp	r0, #0
    71f4:	bge	7224 <read_records+0x1bb4>
    71f8:	ldr	r0, [fp, #-16]
    71fc:	ldr	r1, [r0, #48]	; 0x30
    7200:	ldr	r0, [fp, #-16]
    7204:	ldr	r0, [r0, #52]	; 0x34
    7208:	add	r2, r0, #54	; 0x36
    720c:	movw	r0, #0
    7210:	movt	r0, #0
    7214:	bl	0 <coda_add_error_message>
    7218:	mvn	r0, #0
    721c:	str	r0, [fp, #-12]
    7220:	b	7f74 <read_records+0x2904>
    7224:	b	7228 <read_records+0x1bb8>
    7228:	ldr	r0, [pc, #3408]	; 7f80 <read_records+0x2910>
    722c:	str	r0, [sp, #148]	; 0x94
    7230:	bl	0 <__aeabi_read_tp>
    7234:	ldr	ip, [sp, #148]	; 0x94
    7238:	ldr	r0, [r0, ip]
    723c:	ldr	r0, [r0, #172]	; 0xac
    7240:	ldr	ip, [fp, #-16]
    7244:	ldr	r2, [ip, #4]
    7248:	ldr	r3, [sp, #568]	; 0x238
    724c:	movw	r1, #0
    7250:	bl	0 <coda_mem_int32_new>
    7254:	str	r0, [fp, #-24]	; 0xffffffe8
    7258:	ldr	r0, [fp, #-16]
    725c:	ldr	r0, [r0, #36]	; 0x24
    7260:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7264:	movw	r1, #0
    7268:	movt	r1, #0
    726c:	movw	r3, #0
    7270:	bl	0 <coda_mem_record_add_field>
    7274:	ldr	r1, [sp, #500]	; 0x1f4
    7278:	cmp	r1, #71	; 0x47
    727c:	str	r0, [sp, #144]	; 0x90
    7280:	blt	72a4 <read_records+0x1c34>
    7284:	add	r0, sp, #584	; 0x248
    7288:	add	r0, r0, #63	; 0x3f
    728c:	movw	r1, #0
    7290:	movt	r1, #0
    7294:	mov	r2, #8
    7298:	bl	0 <memcmp>
    729c:	cmp	r0, #0
    72a0:	bne	72b4 <read_records+0x1c44>
    72a4:	mov	r0, #0
    72a8:	str	r0, [sp, #572]	; 0x23c
    72ac:	str	r0, [sp, #568]	; 0x238
    72b0:	b	7304 <read_records+0x1c94>
    72b4:	add	r0, sp, #584	; 0x248
    72b8:	add	r0, r0, #63	; 0x3f
    72bc:	movw	r1, #8
    72c0:	add	r2, sp, #568	; 0x238
    72c4:	movw	r3, #0
    72c8:	bl	0 <coda_ascii_parse_int64>
    72cc:	cmp	r0, #0
    72d0:	bge	7300 <read_records+0x1c90>
    72d4:	ldr	r0, [fp, #-16]
    72d8:	ldr	r1, [r0, #48]	; 0x30
    72dc:	ldr	r0, [fp, #-16]
    72e0:	ldr	r0, [r0, #52]	; 0x34
    72e4:	add	r2, r0, #63	; 0x3f
    72e8:	movw	r0, #0
    72ec:	movt	r0, #0
    72f0:	bl	0 <coda_add_error_message>
    72f4:	mvn	r0, #0
    72f8:	str	r0, [fp, #-12]
    72fc:	b	7f74 <read_records+0x2904>
    7300:	b	7304 <read_records+0x1c94>
    7304:	ldr	r0, [pc, #3188]	; 7f80 <read_records+0x2910>
    7308:	str	r0, [sp, #140]	; 0x8c
    730c:	bl	0 <__aeabi_read_tp>
    7310:	ldr	ip, [sp, #140]	; 0x8c
    7314:	ldr	r0, [r0, ip]
    7318:	ldr	r0, [r0, #176]	; 0xb0
    731c:	ldr	ip, [fp, #-16]
    7320:	ldr	r2, [ip, #4]
    7324:	ldr	r3, [sp, #568]	; 0x238
    7328:	movw	r1, #0
    732c:	bl	0 <coda_mem_int32_new>
    7330:	str	r0, [fp, #-24]	; 0xffffffe8
    7334:	ldr	r0, [fp, #-16]
    7338:	ldr	r0, [r0, #36]	; 0x24
    733c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7340:	movw	r1, #0
    7344:	movt	r1, #0
    7348:	movw	r3, #0
    734c:	bl	0 <coda_mem_record_add_field>
    7350:	ldr	r1, [sp, #500]	; 0x1f4
    7354:	cmp	r1, #80	; 0x50
    7358:	str	r0, [sp, #136]	; 0x88
    735c:	blt	7380 <read_records+0x1d10>
    7360:	add	r0, sp, #584	; 0x248
    7364:	add	r0, r0, #72	; 0x48
    7368:	movw	r1, #0
    736c:	movt	r1, #0
    7370:	mov	r2, #8
    7374:	bl	0 <memcmp>
    7378:	cmp	r0, #0
    737c:	bne	7390 <read_records+0x1d20>
    7380:	mov	r0, #0
    7384:	str	r0, [sp, #572]	; 0x23c
    7388:	str	r0, [sp, #568]	; 0x238
    738c:	b	73e0 <read_records+0x1d70>
    7390:	add	r0, sp, #584	; 0x248
    7394:	add	r0, r0, #72	; 0x48
    7398:	movw	r1, #8
    739c:	add	r2, sp, #568	; 0x238
    73a0:	movw	r3, #0
    73a4:	bl	0 <coda_ascii_parse_int64>
    73a8:	cmp	r0, #0
    73ac:	bge	73dc <read_records+0x1d6c>
    73b0:	ldr	r0, [fp, #-16]
    73b4:	ldr	r1, [r0, #48]	; 0x30
    73b8:	ldr	r0, [fp, #-16]
    73bc:	ldr	r0, [r0, #52]	; 0x34
    73c0:	add	r2, r0, #72	; 0x48
    73c4:	movw	r0, #0
    73c8:	movt	r0, #0
    73cc:	bl	0 <coda_add_error_message>
    73d0:	mvn	r0, #0
    73d4:	str	r0, [fp, #-12]
    73d8:	b	7f74 <read_records+0x2904>
    73dc:	b	73e0 <read_records+0x1d70>
    73e0:	ldr	r0, [pc, #2968]	; 7f80 <read_records+0x2910>
    73e4:	str	r0, [sp, #132]	; 0x84
    73e8:	bl	0 <__aeabi_read_tp>
    73ec:	ldr	ip, [sp, #132]	; 0x84
    73f0:	ldr	r0, [r0, ip]
    73f4:	ldr	r0, [r0, #180]	; 0xb4
    73f8:	ldr	ip, [fp, #-16]
    73fc:	ldr	r2, [ip, #4]
    7400:	ldr	r3, [sp, #568]	; 0x238
    7404:	movw	r1, #0
    7408:	bl	0 <coda_mem_int32_new>
    740c:	str	r0, [fp, #-24]	; 0xffffffe8
    7410:	ldr	r0, [fp, #-16]
    7414:	ldr	r0, [r0, #36]	; 0x24
    7418:	ldr	r2, [fp, #-24]	; 0xffffffe8
    741c:	movw	r1, #0
    7420:	movt	r1, #0
    7424:	movw	r3, #0
    7428:	bl	0 <coda_mem_record_add_field>
    742c:	ldr	r1, [fp, #-16]
    7430:	ldr	r1, [r1, #24]
    7434:	ldr	r2, [fp, #-16]
    7438:	ldr	r2, [r2, #36]	; 0x24
    743c:	str	r0, [sp, #128]	; 0x80
    7440:	mov	r0, r1
    7444:	movw	r1, #0
    7448:	movt	r1, #0
    744c:	movw	r3, #0
    7450:	bl	0 <coda_mem_record_add_field>
    7454:	ldr	r1, [fp, #-16]
    7458:	movw	r2, #0
    745c:	str	r2, [r1, #36]	; 0x24
    7460:	str	r0, [sp, #124]	; 0x7c
    7464:	b	7dec <read_records+0x277c>
    7468:	ldr	r0, [fp, #-16]
    746c:	ldr	r0, [r0, #32]
    7470:	movw	r1, #0
    7474:	cmp	r0, r1
    7478:	bne	74a8 <read_records+0x1e38>
    747c:	ldr	r0, [fp, #-16]
    7480:	ldr	r2, [r0, #48]	; 0x30
    7484:	ldr	r0, [fp, #-16]
    7488:	ldr	r3, [r0, #52]	; 0x34
    748c:	mvn	r0, #21
    7490:	movw	r1, #0
    7494:	movt	r1, #0
    7498:	bl	0 <coda_set_error>
    749c:	mvn	r0, #0
    74a0:	str	r0, [fp, #-12]
    74a4:	b	7f74 <read_records+0x2904>
    74a8:	ldr	r0, [pc, #2768]	; 7f80 <read_records+0x2910>
    74ac:	str	r0, [sp, #120]	; 0x78
    74b0:	bl	0 <__aeabi_read_tp>
    74b4:	ldr	ip, [sp, #120]	; 0x78
    74b8:	ldr	r0, [r0, ip]
    74bc:	ldr	r0, [r0, #216]	; 0xd8
    74c0:	movw	r1, #0
    74c4:	bl	0 <coda_mem_record_new>
    74c8:	ldr	r1, [fp, #-16]
    74cc:	str	r0, [r1, #36]	; 0x24
    74d0:	ldr	r0, [sp, #500]	; 0x1f4
    74d4:	cmp	r0, #8
    74d8:	blt	750c <read_records+0x1e9c>
    74dc:	add	r0, sp, #584	; 0x248
    74e0:	add	r0, r0, #4
    74e4:	ldr	r0, [r0]
    74e8:	movw	r1, #57312	; 0xdfe0
    74ec:	movt	r1, #57311	; 0xdfdf
    74f0:	add	r1, r0, r1
    74f4:	movw	r2, #8224	; 0x2020
    74f8:	movt	r2, #8224	; 0x2020
    74fc:	cmp	r0, r2
    7500:	movwne	r1, #1
    7504:	cmp	r1, #0
    7508:	bne	751c <read_records+0x1eac>
    750c:	mov	r0, #0
    7510:	str	r0, [sp, #572]	; 0x23c
    7514:	str	r0, [sp, #568]	; 0x238
    7518:	b	756c <read_records+0x1efc>
    751c:	add	r0, sp, #584	; 0x248
    7520:	add	r0, r0, #4
    7524:	movw	r1, #4
    7528:	add	r2, sp, #568	; 0x238
    752c:	movw	r3, #0
    7530:	bl	0 <coda_ascii_parse_int64>
    7534:	cmp	r0, #0
    7538:	bge	7568 <read_records+0x1ef8>
    753c:	ldr	r0, [fp, #-16]
    7540:	ldr	r1, [r0, #48]	; 0x30
    7544:	ldr	r0, [fp, #-16]
    7548:	ldr	r0, [r0, #52]	; 0x34
    754c:	add	r2, r0, #4
    7550:	movw	r0, #0
    7554:	movt	r0, #0
    7558:	bl	0 <coda_add_error_message>
    755c:	mvn	r0, #0
    7560:	str	r0, [fp, #-12]
    7564:	b	7f74 <read_records+0x2904>
    7568:	b	756c <read_records+0x1efc>
    756c:	ldr	r0, [pc, #2572]	; 7f80 <read_records+0x2910>
    7570:	str	r0, [sp, #116]	; 0x74
    7574:	bl	0 <__aeabi_read_tp>
    7578:	ldr	ip, [sp, #116]	; 0x74
    757c:	ldr	r0, [r0, ip]
    7580:	ldr	r0, [r0, #220]	; 0xdc
    7584:	ldr	ip, [fp, #-16]
    7588:	ldr	r2, [ip, #4]
    758c:	add	lr, sp, #512	; 0x200
    7590:	ldrh	ip, [lr, #56]	; 0x38
    7594:	movw	r1, #0
    7598:	sxth	r3, ip
    759c:	bl	0 <coda_mem_int16_new>
    75a0:	str	r0, [fp, #-24]	; 0xffffffe8
    75a4:	ldr	r0, [fp, #-16]
    75a8:	ldr	r0, [r0, #36]	; 0x24
    75ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    75b0:	movw	r1, #0
    75b4:	movt	r1, #0
    75b8:	movw	r3, #0
    75bc:	bl	0 <coda_mem_record_add_field>
    75c0:	ldr	r1, [sp, #500]	; 0x1f4
    75c4:	cmp	r1, #13
    75c8:	str	r0, [sp, #112]	; 0x70
    75cc:	blt	7600 <read_records+0x1f90>
    75d0:	add	r0, sp, #584	; 0x248
    75d4:	add	r0, r0, #9
    75d8:	ldr	r0, [r0]
    75dc:	movw	r1, #57312	; 0xdfe0
    75e0:	movt	r1, #57311	; 0xdfdf
    75e4:	add	r1, r0, r1
    75e8:	movw	r2, #8224	; 0x2020
    75ec:	movt	r2, #8224	; 0x2020
    75f0:	cmp	r0, r2
    75f4:	movwne	r1, #1
    75f8:	cmp	r1, #0
    75fc:	bne	7610 <read_records+0x1fa0>
    7600:	mov	r0, #0
    7604:	str	r0, [sp, #572]	; 0x23c
    7608:	str	r0, [sp, #568]	; 0x238
    760c:	b	7660 <read_records+0x1ff0>
    7610:	add	r0, sp, #584	; 0x248
    7614:	add	r0, r0, #9
    7618:	movw	r1, #4
    761c:	add	r2, sp, #568	; 0x238
    7620:	movw	r3, #0
    7624:	bl	0 <coda_ascii_parse_int64>
    7628:	cmp	r0, #0
    762c:	bge	765c <read_records+0x1fec>
    7630:	ldr	r0, [fp, #-16]
    7634:	ldr	r1, [r0, #48]	; 0x30
    7638:	ldr	r0, [fp, #-16]
    763c:	ldr	r0, [r0, #52]	; 0x34
    7640:	add	r2, r0, #9
    7644:	movw	r0, #0
    7648:	movt	r0, #0
    764c:	bl	0 <coda_add_error_message>
    7650:	mvn	r0, #0
    7654:	str	r0, [fp, #-12]
    7658:	b	7f74 <read_records+0x2904>
    765c:	b	7660 <read_records+0x1ff0>
    7660:	ldr	r0, [pc, #2328]	; 7f80 <read_records+0x2910>
    7664:	str	r0, [sp, #108]	; 0x6c
    7668:	bl	0 <__aeabi_read_tp>
    766c:	ldr	ip, [sp, #108]	; 0x6c
    7670:	ldr	r0, [r0, ip]
    7674:	ldr	r0, [r0, #224]	; 0xe0
    7678:	ldr	ip, [fp, #-16]
    767c:	ldr	r2, [ip, #4]
    7680:	add	lr, sp, #512	; 0x200
    7684:	ldrh	ip, [lr, #56]	; 0x38
    7688:	movw	r1, #0
    768c:	sxth	r3, ip
    7690:	bl	0 <coda_mem_int16_new>
    7694:	str	r0, [fp, #-24]	; 0xffffffe8
    7698:	ldr	r0, [fp, #-16]
    769c:	ldr	r0, [r0, #36]	; 0x24
    76a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    76a4:	movw	r1, #0
    76a8:	movt	r1, #0
    76ac:	movw	r3, #0
    76b0:	bl	0 <coda_mem_record_add_field>
    76b4:	ldr	r1, [sp, #500]	; 0x1f4
    76b8:	cmp	r1, #18
    76bc:	str	r0, [sp, #104]	; 0x68
    76c0:	blt	76f4 <read_records+0x2084>
    76c4:	add	r0, sp, #584	; 0x248
    76c8:	add	r0, r0, #14
    76cc:	ldr	r0, [r0]
    76d0:	movw	r1, #57312	; 0xdfe0
    76d4:	movt	r1, #57311	; 0xdfdf
    76d8:	add	r1, r0, r1
    76dc:	movw	r2, #8224	; 0x2020
    76e0:	movt	r2, #8224	; 0x2020
    76e4:	cmp	r0, r2
    76e8:	movwne	r1, #1
    76ec:	cmp	r1, #0
    76f0:	bne	7704 <read_records+0x2094>
    76f4:	mov	r0, #0
    76f8:	str	r0, [sp, #572]	; 0x23c
    76fc:	str	r0, [sp, #568]	; 0x238
    7700:	b	7754 <read_records+0x20e4>
    7704:	add	r0, sp, #584	; 0x248
    7708:	add	r0, r0, #14
    770c:	movw	r1, #4
    7710:	add	r2, sp, #568	; 0x238
    7714:	movw	r3, #0
    7718:	bl	0 <coda_ascii_parse_int64>
    771c:	cmp	r0, #0
    7720:	bge	7750 <read_records+0x20e0>
    7724:	ldr	r0, [fp, #-16]
    7728:	ldr	r1, [r0, #48]	; 0x30
    772c:	ldr	r0, [fp, #-16]
    7730:	ldr	r0, [r0, #52]	; 0x34
    7734:	add	r2, r0, #14
    7738:	movw	r0, #0
    773c:	movt	r0, #0
    7740:	bl	0 <coda_add_error_message>
    7744:	mvn	r0, #0
    7748:	str	r0, [fp, #-12]
    774c:	b	7f74 <read_records+0x2904>
    7750:	b	7754 <read_records+0x20e4>
    7754:	ldr	r0, [pc, #2084]	; 7f80 <read_records+0x2910>
    7758:	str	r0, [sp, #100]	; 0x64
    775c:	bl	0 <__aeabi_read_tp>
    7760:	ldr	ip, [sp, #100]	; 0x64
    7764:	ldr	r0, [r0, ip]
    7768:	ldr	r0, [r0, #228]	; 0xe4
    776c:	ldr	ip, [fp, #-16]
    7770:	ldr	r2, [ip, #4]
    7774:	add	lr, sp, #512	; 0x200
    7778:	ldrh	ip, [lr, #56]	; 0x38
    777c:	movw	r1, #0
    7780:	sxth	r3, ip
    7784:	bl	0 <coda_mem_int16_new>
    7788:	str	r0, [fp, #-24]	; 0xffffffe8
    778c:	ldr	r0, [fp, #-16]
    7790:	ldr	r0, [r0, #36]	; 0x24
    7794:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7798:	movw	r1, #0
    779c:	movt	r1, #0
    77a0:	movw	r3, #0
    77a4:	bl	0 <coda_mem_record_add_field>
    77a8:	ldr	r1, [sp, #500]	; 0x1f4
    77ac:	cmp	r1, #28
    77b0:	str	r0, [sp, #96]	; 0x60
    77b4:	blt	77d8 <read_records+0x2168>
    77b8:	add	r0, sp, #584	; 0x248
    77bc:	add	r0, r0, #19
    77c0:	movw	r1, #0
    77c4:	movt	r1, #0
    77c8:	mov	r2, #7
    77cc:	bl	0 <memcmp>
    77d0:	cmp	r0, #0
    77d4:	bne	77e8 <read_records+0x2178>
    77d8:	mov	r0, #0
    77dc:	str	r0, [sp, #572]	; 0x23c
    77e0:	str	r0, [sp, #568]	; 0x238
    77e4:	b	7838 <read_records+0x21c8>
    77e8:	add	r0, sp, #584	; 0x248
    77ec:	add	r0, r0, #19
    77f0:	movw	r1, #7
    77f4:	add	r2, sp, #568	; 0x238
    77f8:	movw	r3, #0
    77fc:	bl	0 <coda_ascii_parse_int64>
    7800:	cmp	r0, #0
    7804:	bge	7834 <read_records+0x21c4>
    7808:	ldr	r0, [fp, #-16]
    780c:	ldr	r1, [r0, #48]	; 0x30
    7810:	ldr	r0, [fp, #-16]
    7814:	ldr	r0, [r0, #52]	; 0x34
    7818:	add	r2, r0, #19
    781c:	movw	r0, #0
    7820:	movt	r0, #0
    7824:	bl	0 <coda_add_error_message>
    7828:	mvn	r0, #0
    782c:	str	r0, [fp, #-12]
    7830:	b	7f74 <read_records+0x2904>
    7834:	b	7838 <read_records+0x21c8>
    7838:	ldr	r0, [pc, #1856]	; 7f80 <read_records+0x2910>
    783c:	str	r0, [sp, #92]	; 0x5c
    7840:	bl	0 <__aeabi_read_tp>
    7844:	ldr	ip, [sp, #92]	; 0x5c
    7848:	ldr	r0, [r0, ip]
    784c:	ldr	r0, [r0, #232]	; 0xe8
    7850:	ldr	ip, [fp, #-16]
    7854:	ldr	r2, [ip, #4]
    7858:	add	lr, sp, #512	; 0x200
    785c:	ldrh	ip, [lr, #56]	; 0x38
    7860:	movw	r1, #0
    7864:	sxth	r3, ip
    7868:	bl	0 <coda_mem_int16_new>
    786c:	str	r0, [fp, #-24]	; 0xffffffe8
    7870:	ldr	r0, [fp, #-16]
    7874:	ldr	r0, [r0, #36]	; 0x24
    7878:	ldr	r2, [fp, #-24]	; 0xffffffe8
    787c:	movw	r1, #0
    7880:	movt	r1, #0
    7884:	movw	r3, #0
    7888:	bl	0 <coda_mem_record_add_field>
    788c:	ldr	r1, [sp, #500]	; 0x1f4
    7890:	cmp	r1, #35	; 0x23
    7894:	str	r0, [sp, #88]	; 0x58
    7898:	blt	78bc <read_records+0x224c>
    789c:	add	r0, sp, #584	; 0x248
    78a0:	add	r0, r0, #27
    78a4:	movw	r1, #0
    78a8:	movt	r1, #0
    78ac:	mov	r2, #8
    78b0:	bl	0 <memcmp>
    78b4:	cmp	r0, #0
    78b8:	bne	78cc <read_records+0x225c>
    78bc:	mov	r0, #0
    78c0:	str	r0, [sp, #572]	; 0x23c
    78c4:	str	r0, [sp, #568]	; 0x238
    78c8:	b	791c <read_records+0x22ac>
    78cc:	add	r0, sp, #584	; 0x248
    78d0:	add	r0, r0, #27
    78d4:	movw	r1, #8
    78d8:	add	r2, sp, #568	; 0x238
    78dc:	movw	r3, #0
    78e0:	bl	0 <coda_ascii_parse_int64>
    78e4:	cmp	r0, #0
    78e8:	bge	7918 <read_records+0x22a8>
    78ec:	ldr	r0, [fp, #-16]
    78f0:	ldr	r1, [r0, #48]	; 0x30
    78f4:	ldr	r0, [fp, #-16]
    78f8:	ldr	r0, [r0, #52]	; 0x34
    78fc:	add	r2, r0, #27
    7900:	movw	r0, #0
    7904:	movt	r0, #0
    7908:	bl	0 <coda_add_error_message>
    790c:	mvn	r0, #0
    7910:	str	r0, [fp, #-12]
    7914:	b	7f74 <read_records+0x2904>
    7918:	b	791c <read_records+0x22ac>
    791c:	ldr	r0, [pc, #1628]	; 7f80 <read_records+0x2910>
    7920:	str	r0, [sp, #84]	; 0x54
    7924:	bl	0 <__aeabi_read_tp>
    7928:	ldr	ip, [sp, #84]	; 0x54
    792c:	ldr	r0, [r0, ip]
    7930:	ldr	r0, [r0, #236]	; 0xec
    7934:	ldr	ip, [fp, #-16]
    7938:	ldr	r2, [ip, #4]
    793c:	ldr	r3, [sp, #568]	; 0x238
    7940:	movw	r1, #0
    7944:	bl	0 <coda_mem_int32_new>
    7948:	str	r0, [fp, #-24]	; 0xffffffe8
    794c:	ldr	r0, [fp, #-16]
    7950:	ldr	r0, [r0, #36]	; 0x24
    7954:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7958:	movw	r1, #0
    795c:	movt	r1, #0
    7960:	movw	r3, #0
    7964:	bl	0 <coda_mem_record_add_field>
    7968:	ldr	r1, [sp, #500]	; 0x1f4
    796c:	cmp	r1, #44	; 0x2c
    7970:	str	r0, [sp, #80]	; 0x50
    7974:	blt	7998 <read_records+0x2328>
    7978:	add	r0, sp, #584	; 0x248
    797c:	add	r0, r0, #36	; 0x24
    7980:	movw	r1, #0
    7984:	movt	r1, #0
    7988:	mov	r2, #8
    798c:	bl	0 <memcmp>
    7990:	cmp	r0, #0
    7994:	bne	79a8 <read_records+0x2338>
    7998:	mov	r0, #0
    799c:	str	r0, [sp, #572]	; 0x23c
    79a0:	str	r0, [sp, #568]	; 0x238
    79a4:	b	79f8 <read_records+0x2388>
    79a8:	add	r0, sp, #584	; 0x248
    79ac:	add	r0, r0, #36	; 0x24
    79b0:	movw	r1, #8
    79b4:	add	r2, sp, #568	; 0x238
    79b8:	movw	r3, #0
    79bc:	bl	0 <coda_ascii_parse_int64>
    79c0:	cmp	r0, #0
    79c4:	bge	79f4 <read_records+0x2384>
    79c8:	ldr	r0, [fp, #-16]
    79cc:	ldr	r1, [r0, #48]	; 0x30
    79d0:	ldr	r0, [fp, #-16]
    79d4:	ldr	r0, [r0, #52]	; 0x34
    79d8:	add	r2, r0, #36	; 0x24
    79dc:	movw	r0, #0
    79e0:	movt	r0, #0
    79e4:	bl	0 <coda_add_error_message>
    79e8:	mvn	r0, #0
    79ec:	str	r0, [fp, #-12]
    79f0:	b	7f74 <read_records+0x2904>
    79f4:	b	79f8 <read_records+0x2388>
    79f8:	ldr	r0, [pc, #1408]	; 7f80 <read_records+0x2910>
    79fc:	str	r0, [sp, #76]	; 0x4c
    7a00:	bl	0 <__aeabi_read_tp>
    7a04:	ldr	ip, [sp, #76]	; 0x4c
    7a08:	ldr	r0, [r0, ip]
    7a0c:	ldr	r0, [r0, #240]	; 0xf0
    7a10:	ldr	ip, [fp, #-16]
    7a14:	ldr	r2, [ip, #4]
    7a18:	ldr	r3, [sp, #568]	; 0x238
    7a1c:	movw	r1, #0
    7a20:	bl	0 <coda_mem_int32_new>
    7a24:	str	r0, [fp, #-24]	; 0xffffffe8
    7a28:	ldr	r0, [fp, #-16]
    7a2c:	ldr	r0, [r0, #36]	; 0x24
    7a30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7a34:	movw	r1, #0
    7a38:	movt	r1, #0
    7a3c:	movw	r3, #0
    7a40:	bl	0 <coda_mem_record_add_field>
    7a44:	ldr	r1, [sp, #500]	; 0x1f4
    7a48:	cmp	r1, #53	; 0x35
    7a4c:	str	r0, [sp, #72]	; 0x48
    7a50:	blt	7a74 <read_records+0x2404>
    7a54:	add	r0, sp, #584	; 0x248
    7a58:	add	r0, r0, #45	; 0x2d
    7a5c:	movw	r1, #0
    7a60:	movt	r1, #0
    7a64:	mov	r2, #8
    7a68:	bl	0 <memcmp>
    7a6c:	cmp	r0, #0
    7a70:	bne	7a84 <read_records+0x2414>
    7a74:	mov	r0, #0
    7a78:	str	r0, [sp, #572]	; 0x23c
    7a7c:	str	r0, [sp, #568]	; 0x238
    7a80:	b	7ad4 <read_records+0x2464>
    7a84:	add	r0, sp, #584	; 0x248
    7a88:	add	r0, r0, #45	; 0x2d
    7a8c:	movw	r1, #8
    7a90:	add	r2, sp, #568	; 0x238
    7a94:	movw	r3, #0
    7a98:	bl	0 <coda_ascii_parse_int64>
    7a9c:	cmp	r0, #0
    7aa0:	bge	7ad0 <read_records+0x2460>
    7aa4:	ldr	r0, [fp, #-16]
    7aa8:	ldr	r1, [r0, #48]	; 0x30
    7aac:	ldr	r0, [fp, #-16]
    7ab0:	ldr	r0, [r0, #52]	; 0x34
    7ab4:	add	r2, r0, #45	; 0x2d
    7ab8:	movw	r0, #0
    7abc:	movt	r0, #0
    7ac0:	bl	0 <coda_add_error_message>
    7ac4:	mvn	r0, #0
    7ac8:	str	r0, [fp, #-12]
    7acc:	b	7f74 <read_records+0x2904>
    7ad0:	b	7ad4 <read_records+0x2464>
    7ad4:	ldr	r0, [pc, #1188]	; 7f80 <read_records+0x2910>
    7ad8:	str	r0, [sp, #68]	; 0x44
    7adc:	bl	0 <__aeabi_read_tp>
    7ae0:	ldr	ip, [sp, #68]	; 0x44
    7ae4:	ldr	r0, [r0, ip]
    7ae8:	ldr	r0, [r0, #244]	; 0xf4
    7aec:	ldr	ip, [fp, #-16]
    7af0:	ldr	r2, [ip, #4]
    7af4:	ldr	r3, [sp, #568]	; 0x238
    7af8:	movw	r1, #0
    7afc:	bl	0 <coda_mem_int32_new>
    7b00:	str	r0, [fp, #-24]	; 0xffffffe8
    7b04:	ldr	r0, [fp, #-16]
    7b08:	ldr	r0, [r0, #36]	; 0x24
    7b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7b10:	movw	r1, #0
    7b14:	movt	r1, #0
    7b18:	movw	r3, #0
    7b1c:	bl	0 <coda_mem_record_add_field>
    7b20:	ldr	r1, [sp, #500]	; 0x1f4
    7b24:	cmp	r1, #62	; 0x3e
    7b28:	str	r0, [sp, #64]	; 0x40
    7b2c:	blt	7b50 <read_records+0x24e0>
    7b30:	add	r0, sp, #584	; 0x248
    7b34:	add	r0, r0, #54	; 0x36
    7b38:	movw	r1, #0
    7b3c:	movt	r1, #0
    7b40:	mov	r2, #8
    7b44:	bl	0 <memcmp>
    7b48:	cmp	r0, #0
    7b4c:	bne	7b60 <read_records+0x24f0>
    7b50:	mov	r0, #0
    7b54:	str	r0, [sp, #572]	; 0x23c
    7b58:	str	r0, [sp, #568]	; 0x238
    7b5c:	b	7bb0 <read_records+0x2540>
    7b60:	add	r0, sp, #584	; 0x248
    7b64:	add	r0, r0, #54	; 0x36
    7b68:	movw	r1, #8
    7b6c:	add	r2, sp, #568	; 0x238
    7b70:	movw	r3, #0
    7b74:	bl	0 <coda_ascii_parse_int64>
    7b78:	cmp	r0, #0
    7b7c:	bge	7bac <read_records+0x253c>
    7b80:	ldr	r0, [fp, #-16]
    7b84:	ldr	r1, [r0, #48]	; 0x30
    7b88:	ldr	r0, [fp, #-16]
    7b8c:	ldr	r0, [r0, #52]	; 0x34
    7b90:	add	r2, r0, #54	; 0x36
    7b94:	movw	r0, #0
    7b98:	movt	r0, #0
    7b9c:	bl	0 <coda_add_error_message>
    7ba0:	mvn	r0, #0
    7ba4:	str	r0, [fp, #-12]
    7ba8:	b	7f74 <read_records+0x2904>
    7bac:	b	7bb0 <read_records+0x2540>
    7bb0:	ldr	r0, [pc, #968]	; 7f80 <read_records+0x2910>
    7bb4:	str	r0, [sp, #60]	; 0x3c
    7bb8:	bl	0 <__aeabi_read_tp>
    7bbc:	ldr	ip, [sp, #60]	; 0x3c
    7bc0:	ldr	r0, [r0, ip]
    7bc4:	ldr	r0, [r0, #248]	; 0xf8
    7bc8:	ldr	ip, [fp, #-16]
    7bcc:	ldr	r2, [ip, #4]
    7bd0:	ldr	r3, [sp, #568]	; 0x238
    7bd4:	movw	r1, #0
    7bd8:	bl	0 <coda_mem_int32_new>
    7bdc:	str	r0, [fp, #-24]	; 0xffffffe8
    7be0:	ldr	r0, [fp, #-16]
    7be4:	ldr	r0, [r0, #36]	; 0x24
    7be8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7bec:	movw	r1, #0
    7bf0:	movt	r1, #0
    7bf4:	movw	r3, #0
    7bf8:	bl	0 <coda_mem_record_add_field>
    7bfc:	ldr	r1, [sp, #500]	; 0x1f4
    7c00:	cmp	r1, #71	; 0x47
    7c04:	str	r0, [sp, #56]	; 0x38
    7c08:	blt	7c2c <read_records+0x25bc>
    7c0c:	add	r0, sp, #584	; 0x248
    7c10:	add	r0, r0, #63	; 0x3f
    7c14:	movw	r1, #0
    7c18:	movt	r1, #0
    7c1c:	mov	r2, #8
    7c20:	bl	0 <memcmp>
    7c24:	cmp	r0, #0
    7c28:	bne	7c3c <read_records+0x25cc>
    7c2c:	mov	r0, #0
    7c30:	str	r0, [sp, #572]	; 0x23c
    7c34:	str	r0, [sp, #568]	; 0x238
    7c38:	b	7c8c <read_records+0x261c>
    7c3c:	add	r0, sp, #584	; 0x248
    7c40:	add	r0, r0, #63	; 0x3f
    7c44:	movw	r1, #8
    7c48:	add	r2, sp, #568	; 0x238
    7c4c:	movw	r3, #0
    7c50:	bl	0 <coda_ascii_parse_int64>
    7c54:	cmp	r0, #0
    7c58:	bge	7c88 <read_records+0x2618>
    7c5c:	ldr	r0, [fp, #-16]
    7c60:	ldr	r1, [r0, #48]	; 0x30
    7c64:	ldr	r0, [fp, #-16]
    7c68:	ldr	r0, [r0, #52]	; 0x34
    7c6c:	add	r2, r0, #63	; 0x3f
    7c70:	movw	r0, #0
    7c74:	movt	r0, #0
    7c78:	bl	0 <coda_add_error_message>
    7c7c:	mvn	r0, #0
    7c80:	str	r0, [fp, #-12]
    7c84:	b	7f74 <read_records+0x2904>
    7c88:	b	7c8c <read_records+0x261c>
    7c8c:	ldr	r0, [pc, #748]	; 7f80 <read_records+0x2910>
    7c90:	str	r0, [sp, #52]	; 0x34
    7c94:	bl	0 <__aeabi_read_tp>
    7c98:	ldr	ip, [sp, #52]	; 0x34
    7c9c:	ldr	r0, [r0, ip]
    7ca0:	ldr	r0, [r0, #252]	; 0xfc
    7ca4:	ldr	ip, [fp, #-16]
    7ca8:	ldr	r2, [ip, #4]
    7cac:	ldr	r3, [sp, #568]	; 0x238
    7cb0:	movw	r1, #0
    7cb4:	bl	0 <coda_mem_int32_new>
    7cb8:	str	r0, [fp, #-24]	; 0xffffffe8
    7cbc:	ldr	r0, [fp, #-16]
    7cc0:	ldr	r0, [r0, #36]	; 0x24
    7cc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7cc8:	movw	r1, #0
    7ccc:	movt	r1, #0
    7cd0:	movw	r3, #0
    7cd4:	bl	0 <coda_mem_record_add_field>
    7cd8:	ldr	r1, [sp, #500]	; 0x1f4
    7cdc:	cmp	r1, #80	; 0x50
    7ce0:	str	r0, [sp, #48]	; 0x30
    7ce4:	blt	7d08 <read_records+0x2698>
    7ce8:	add	r0, sp, #584	; 0x248
    7cec:	add	r0, r0, #72	; 0x48
    7cf0:	movw	r1, #0
    7cf4:	movt	r1, #0
    7cf8:	mov	r2, #8
    7cfc:	bl	0 <memcmp>
    7d00:	cmp	r0, #0
    7d04:	bne	7d18 <read_records+0x26a8>
    7d08:	mov	r0, #0
    7d0c:	str	r0, [sp, #572]	; 0x23c
    7d10:	str	r0, [sp, #568]	; 0x238
    7d14:	b	7d68 <read_records+0x26f8>
    7d18:	add	r0, sp, #584	; 0x248
    7d1c:	add	r0, r0, #72	; 0x48
    7d20:	movw	r1, #8
    7d24:	add	r2, sp, #568	; 0x238
    7d28:	movw	r3, #0
    7d2c:	bl	0 <coda_ascii_parse_int64>
    7d30:	cmp	r0, #0
    7d34:	bge	7d64 <read_records+0x26f4>
    7d38:	ldr	r0, [fp, #-16]
    7d3c:	ldr	r1, [r0, #48]	; 0x30
    7d40:	ldr	r0, [fp, #-16]
    7d44:	ldr	r0, [r0, #52]	; 0x34
    7d48:	add	r2, r0, #72	; 0x48
    7d4c:	movw	r0, #0
    7d50:	movt	r0, #0
    7d54:	bl	0 <coda_add_error_message>
    7d58:	mvn	r0, #0
    7d5c:	str	r0, [fp, #-12]
    7d60:	b	7f74 <read_records+0x2904>
    7d64:	b	7d68 <read_records+0x26f8>
    7d68:	ldr	r0, [pc, #528]	; 7f80 <read_records+0x2910>
    7d6c:	str	r0, [sp, #44]	; 0x2c
    7d70:	bl	0 <__aeabi_read_tp>
    7d74:	ldr	ip, [sp, #44]	; 0x2c
    7d78:	ldr	r0, [r0, ip]
    7d7c:	ldr	r0, [r0, #256]	; 0x100
    7d80:	ldr	ip, [fp, #-16]
    7d84:	ldr	r2, [ip, #4]
    7d88:	ldr	r3, [sp, #568]	; 0x238
    7d8c:	movw	r1, #0
    7d90:	bl	0 <coda_mem_int32_new>
    7d94:	str	r0, [fp, #-24]	; 0xffffffe8
    7d98:	ldr	r0, [fp, #-16]
    7d9c:	ldr	r0, [r0, #36]	; 0x24
    7da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7da4:	movw	r1, #0
    7da8:	movt	r1, #0
    7dac:	movw	r3, #0
    7db0:	bl	0 <coda_mem_record_add_field>
    7db4:	ldr	r1, [fp, #-16]
    7db8:	ldr	r1, [r1, #32]
    7dbc:	ldr	r2, [fp, #-16]
    7dc0:	ldr	r2, [r2, #36]	; 0x24
    7dc4:	str	r0, [sp, #40]	; 0x28
    7dc8:	mov	r0, r1
    7dcc:	movw	r1, #0
    7dd0:	movt	r1, #0
    7dd4:	movw	r3, #0
    7dd8:	bl	0 <coda_mem_record_add_field>
    7ddc:	ldr	r1, [fp, #-16]
    7de0:	movw	r2, #0
    7de4:	str	r2, [r1, #36]	; 0x24
    7de8:	str	r0, [sp, #36]	; 0x24
    7dec:	ldr	r0, [fp, #-16]
    7df0:	ldr	r0, [r0]
    7df4:	bl	0 <ftell>
    7df8:	add	r1, sp, #584	; 0x248
    7dfc:	ldr	lr, [fp, #-16]
    7e00:	str	r0, [lr, #52]	; 0x34
    7e04:	ldr	r0, [fp, #-16]
    7e08:	ldr	lr, [r0, #48]	; 0x30
    7e0c:	add	lr, lr, #1
    7e10:	str	lr, [r0, #48]	; 0x30
    7e14:	ldr	r0, [fp, #-16]
    7e18:	ldr	r0, [r0]
    7e1c:	bl	7f84 <get_line>
    7e20:	str	r0, [sp, #500]	; 0x1f4
    7e24:	ldr	r0, [sp, #500]	; 0x1f4
    7e28:	cmp	r0, #0
    7e2c:	bge	7e3c <read_records+0x27cc>
    7e30:	mvn	r0, #0
    7e34:	str	r0, [fp, #-12]
    7e38:	b	7f74 <read_records+0x2904>
    7e3c:	b	7e40 <read_records+0x27d0>
    7e40:	ldr	r0, [fp, #-16]
    7e44:	ldr	r0, [r0, #24]
    7e48:	movw	r1, #0
    7e4c:	cmp	r0, r1
    7e50:	beq	7e78 <read_records+0x2808>
    7e54:	ldr	r0, [fp, #-16]
    7e58:	ldr	r0, [r0, #20]
    7e5c:	ldr	r1, [fp, #-16]
    7e60:	ldr	r1, [r1, #24]
    7e64:	bl	0 <coda_mem_array_add_element>
    7e68:	ldr	r1, [fp, #-16]
    7e6c:	movw	lr, #0
    7e70:	str	lr, [r1, #24]
    7e74:	str	r0, [sp, #32]
    7e78:	ldr	r0, [fp, #-16]
    7e7c:	ldr	r0, [r0, #32]
    7e80:	movw	r1, #0
    7e84:	cmp	r0, r1
    7e88:	beq	7eb0 <read_records+0x2840>
    7e8c:	ldr	r0, [fp, #-16]
    7e90:	ldr	r0, [r0, #28]
    7e94:	ldr	r1, [fp, #-16]
    7e98:	ldr	r1, [r1, #32]
    7e9c:	bl	0 <coda_mem_array_add_element>
    7ea0:	ldr	r1, [fp, #-16]
    7ea4:	movw	lr, #0
    7ea8:	str	lr, [r1, #32]
    7eac:	str	r0, [sp, #28]
    7eb0:	b	56d4 <read_records+0x64>
    7eb4:	ldr	r0, [fp, #-16]
    7eb8:	ldr	r0, [r0, #16]
    7ebc:	movw	r1, #0
    7ec0:	cmp	r0, r1
    7ec4:	beq	7f6c <read_records+0x28fc>
    7ec8:	ldr	r0, [fp, #-16]
    7ecc:	ldr	r0, [r0, #16]
    7ed0:	ldr	r1, [fp, #-16]
    7ed4:	ldr	r1, [r1, #20]
    7ed8:	movw	r2, #0
    7edc:	movt	r2, #0
    7ee0:	str	r1, [sp, #24]
    7ee4:	mov	r1, r2
    7ee8:	ldr	r2, [sp, #24]
    7eec:	movw	r3, #0
    7ef0:	bl	0 <coda_mem_record_add_field>
    7ef4:	ldr	r1, [fp, #-16]
    7ef8:	movw	r2, #0
    7efc:	str	r2, [r1, #20]
    7f00:	ldr	r1, [fp, #-16]
    7f04:	ldr	r1, [r1, #16]
    7f08:	ldr	r3, [fp, #-16]
    7f0c:	ldr	r3, [r3, #28]
    7f10:	str	r0, [sp, #20]
    7f14:	mov	r0, r1
    7f18:	movw	r1, #0
    7f1c:	movt	r1, #0
    7f20:	str	r2, [sp, #16]
    7f24:	mov	r2, r3
    7f28:	ldr	r3, [sp, #16]
    7f2c:	bl	0 <coda_mem_record_add_field>
    7f30:	ldr	r1, [fp, #-16]
    7f34:	movw	r2, #0
    7f38:	str	r2, [r1, #28]
    7f3c:	ldr	r1, [fp, #-16]
    7f40:	ldr	r1, [r1, #12]
    7f44:	ldr	r2, [fp, #-16]
    7f48:	ldr	r2, [r2, #16]
    7f4c:	str	r0, [sp, #12]
    7f50:	mov	r0, r1
    7f54:	mov	r1, r2
    7f58:	bl	0 <coda_mem_array_add_element>
    7f5c:	ldr	r1, [fp, #-16]
    7f60:	movw	r2, #0
    7f64:	str	r2, [r1, #16]
    7f68:	str	r0, [sp, #8]
    7f6c:	movw	r0, #0
    7f70:	str	r0, [fp, #-12]
    7f74:	ldr	r0, [fp, #-12]
    7f78:	sub	sp, fp, #8
    7f7c:	pop	{r4, r5, fp, pc}
    7f80:	.word	0x00000000

00007f84 <get_line>:
    7f84:	push	{fp, lr}
    7f88:	mov	fp, sp
    7f8c:	sub	sp, sp, #24
    7f90:	str	r0, [fp, #-8]
    7f94:	str	r1, [sp, #12]
    7f98:	ldr	r0, [sp, #12]
    7f9c:	ldr	r2, [fp, #-8]
    7fa0:	movw	r1, #1000	; 0x3e8
    7fa4:	bl	0 <fgets>
    7fa8:	movw	r1, #0
    7fac:	cmp	r0, r1
    7fb0:	bne	8010 <get_line+0x8c>
    7fb4:	ldr	r0, [fp, #-8]
    7fb8:	bl	0 <ferror>
    7fbc:	cmp	r0, #0
    7fc0:	beq	7ff8 <get_line+0x74>
    7fc4:	bl	0 <__errno_location>
    7fc8:	ldr	r0, [r0]
    7fcc:	bl	0 <strerror>
    7fd0:	mvn	lr, #21
    7fd4:	str	r0, [sp, #4]
    7fd8:	mov	r0, lr
    7fdc:	movw	r1, #0
    7fe0:	movt	r1, #0
    7fe4:	ldr	r2, [sp, #4]
    7fe8:	bl	0 <coda_set_error>
    7fec:	mvn	r0, #0
    7ff0:	str	r0, [fp, #-4]
    7ff4:	b	80c4 <get_line+0x140>
    7ff8:	ldr	r0, [sp, #12]
    7ffc:	movw	r1, #0
    8000:	strb	r1, [r0]
    8004:	movw	r0, #0
    8008:	str	r0, [fp, #-4]
    800c:	b	80c4 <get_line+0x140>
    8010:	ldr	r0, [sp, #12]
    8014:	bl	0 <strlen>
    8018:	str	r0, [sp, #8]
    801c:	ldr	r0, [sp, #8]
    8020:	cmp	r0, #0
    8024:	ble	806c <get_line+0xe8>
    8028:	ldr	r0, [sp, #12]
    802c:	ldr	r1, [sp, #8]
    8030:	sub	r1, r1, #1
    8034:	add	r0, r0, r1
    8038:	ldrb	r0, [r0]
    803c:	cmp	r0, #10
    8040:	bne	806c <get_line+0xe8>
    8044:	ldr	r0, [sp, #12]
    8048:	ldr	r1, [sp, #8]
    804c:	sub	r1, r1, #1
    8050:	add	r0, r0, r1
    8054:	movw	r1, #0
    8058:	strb	r1, [r0]
    805c:	ldr	r0, [sp, #8]
    8060:	mvn	r1, #0
    8064:	add	r0, r0, r1
    8068:	str	r0, [sp, #8]
    806c:	ldr	r0, [sp, #8]
    8070:	cmp	r0, #0
    8074:	ble	80bc <get_line+0x138>
    8078:	ldr	r0, [sp, #12]
    807c:	ldr	r1, [sp, #8]
    8080:	sub	r1, r1, #1
    8084:	add	r0, r0, r1
    8088:	ldrb	r0, [r0]
    808c:	cmp	r0, #13
    8090:	bne	80bc <get_line+0x138>
    8094:	ldr	r0, [sp, #12]
    8098:	ldr	r1, [sp, #8]
    809c:	sub	r1, r1, #1
    80a0:	add	r0, r0, r1
    80a4:	movw	r1, #0
    80a8:	strb	r1, [r0]
    80ac:	ldr	r0, [sp, #8]
    80b0:	mvn	r1, #0
    80b4:	add	r0, r0, r1
    80b8:	str	r0, [sp, #8]
    80bc:	ldr	r0, [sp, #8]
    80c0:	str	r0, [fp, #-4]
    80c4:	ldr	r0, [fp, #-4]
    80c8:	mov	sp, fp
    80cc:	pop	{fp, pc}
