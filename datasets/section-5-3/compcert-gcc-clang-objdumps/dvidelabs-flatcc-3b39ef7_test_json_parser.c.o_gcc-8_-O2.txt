
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_parser.dir/test_json_parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_symbol_part_ext>:
       0:	sub	r1, r1, r0
       4:	strd	r4, [sp, #-8]!
       8:	cmp	r1, #8
       c:	bhi	40 <flatcc_json_parser_symbol_part_ext+0x40>
      10:	sub	r1, r1, #1
      14:	cmp	r1, #7
      18:	ldrls	pc, [pc, r1, lsl #2]
      1c:	b	e8 <flatcc_json_parser_symbol_part_ext+0xe8>
      20:	.word	0x000000a0
      24:	.word	0x000000ac
      28:	.word	0x000000b8
      2c:	.word	0x000000c4
      30:	.word	0x000000d0
      34:	.word	0x000000dc
      38:	.word	0x00000094
      3c:	.word	0x00000040
      40:	ldrb	r2, [r0, #7]
      44:	mov	r3, #0
      48:	mov	r1, r3
      4c:	ldrb	r4, [r0, #6]
      50:	orr	r2, r2, r4, lsl #8
      54:	ldrb	r4, [r0, #5]
      58:	orr	r2, r2, r4, lsl #16
      5c:	ldrb	r4, [r0, #4]
      60:	orr	r2, r2, r4, lsl #24
      64:	ldrb	r4, [r0, #3]
      68:	orr	r1, r1, r4
      6c:	ldrb	r4, [r0, #2]
      70:	orr	r1, r1, r4, lsl #8
      74:	ldrb	r4, [r0, #1]
      78:	orr	r1, r1, r4, lsl #16
      7c:	ldrb	r4, [r0]
      80:	mov	r0, r2
      84:	orr	r1, r1, r4, lsl #24
      88:	ldrd	r4, [sp]
      8c:	add	sp, sp, #8
      90:	bx	lr
      94:	mov	r2, #0
      98:	mov	r3, #0
      9c:	b	48 <flatcc_json_parser_symbol_part_ext+0x48>
      a0:	mov	r2, #0
      a4:	mov	r1, r2
      a8:	b	7c <flatcc_json_parser_symbol_part_ext+0x7c>
      ac:	mov	r2, #0
      b0:	mov	r1, r2
      b4:	b	74 <flatcc_json_parser_symbol_part_ext+0x74>
      b8:	mov	r2, #0
      bc:	mov	r1, r2
      c0:	b	6c <flatcc_json_parser_symbol_part_ext+0x6c>
      c4:	mov	r2, #0
      c8:	mov	r1, r2
      cc:	b	64 <flatcc_json_parser_symbol_part_ext+0x64>
      d0:	mov	r2, #0
      d4:	mov	r1, r2
      d8:	b	5c <flatcc_json_parser_symbol_part_ext+0x5c>
      dc:	mov	r2, #0
      e0:	mov	r1, r2
      e4:	b	54 <flatcc_json_parser_symbol_part_ext+0x54>
      e8:	mov	r0, #0
      ec:	mov	r1, r0
      f0:	b	88 <flatcc_json_parser_symbol_part_ext+0x88>

000000f4 <MyGame_Example_Any_json_union_accept_type>:
      f4:	cmp	r0, #4
      f8:	movhi	r0, #0
      fc:	movls	r0, #1
     100:	bx	lr

00000104 <Fantasy_Character_json_union_accept_type>:
     104:	cmp	r0, #11
     108:	bhi	12c <Fantasy_Character_json_union_accept_type+0x28>
     10c:	cmp	r0, #8
     110:	bcs	13c <Fantasy_Character_json_union_accept_type+0x38>
     114:	cmp	r0, #0
     118:	beq	13c <Fantasy_Character_json_union_accept_type+0x38>
     11c:	sub	r0, r0, #2
     120:	clz	r0, r0
     124:	lsr	r0, r0, #5
     128:	bx	lr
     12c:	sub	r0, r0, #255	; 0xff
     130:	clz	r0, r0
     134:	lsr	r0, r0, #5
     138:	bx	lr
     13c:	mov	r0, #1
     140:	bx	lr

00000144 <Fantasy_Character_parse_json_enum>:
     144:	strd	r4, [sp, #-32]!	; 0xffffffe0
     148:	mov	r4, r1
     14c:	mov	r1, r2
     150:	strd	r6, [sp, #8]
     154:	mov	r5, r2
     158:	strd	r8, [sp, #16]
     15c:	mov	r8, r0
     160:	mov	r0, r4
     164:	str	sl, [sp, #24]
     168:	mov	r9, r3
     16c:	str	lr, [sp, #28]
     170:	sub	sp, sp, #8
     174:	bl	0 <flatcc_json_parser_symbol_part_ext>
     178:	add	r3, pc, #648	; 0x288
     17c:	ldrd	r2, [r3]
     180:	cmp	r1, r3
     184:	cmpeq	r0, r2
     188:	bhi	24c <Fantasy_Character_parse_json_enum+0x108>
     18c:	add	r7, pc, #636	; 0x27c
     190:	ldrd	r6, [r7]
     194:	and	r2, r0, #-16777216	; 0xff000000
     198:	mov	r3, r1
     19c:	cmp	r1, r7
     1a0:	cmpeq	r0, r6
     1a4:	bhi	1dc <Fantasy_Character_parse_json_enum+0x98>
     1a8:	add	r1, pc, #616	; 0x268
     1ac:	ldrd	r0, [r1]
     1b0:	cmp	r3, r1
     1b4:	cmpeq	r2, r0
     1b8:	beq	384 <Fantasy_Character_parse_json_enum+0x240>
     1bc:	mov	r0, r4
     1c0:	add	sp, sp, #8
     1c4:	ldrd	r4, [sp]
     1c8:	ldrd	r6, [sp, #8]
     1cc:	ldrd	r8, [sp, #16]
     1d0:	ldr	sl, [sp, #24]
     1d4:	add	sp, sp, #28
     1d8:	pop	{pc}		; (ldr pc, [sp], #4)
     1dc:	add	r7, pc, #572	; 0x23c
     1e0:	ldrd	r6, [r7]
     1e4:	cmp	r1, r7
     1e8:	cmpeq	r2, r6
     1ec:	beq	3b0 <Fantasy_Character_parse_json_enum+0x26c>
     1f0:	add	r7, pc, #560	; 0x230
     1f4:	ldrd	r6, [r7]
     1f8:	bic	r2, r0, #255	; 0xff
     1fc:	cmp	r1, r7
     200:	cmpeq	r2, r6
     204:	bne	1bc <Fantasy_Character_parse_json_enum+0x78>
     208:	ldr	r3, [sp, #44]	; 0x2c
     20c:	mov	r2, r5
     210:	mov	r0, r8
     214:	mov	r1, r4
     218:	str	r3, [sp]
     21c:	mov	r3, #7
     220:	bl	0 <flatcc_json_parser_match_constant>
     224:	cmp	r4, r0
     228:	movne	r6, #10
     22c:	beq	1bc <Fantasy_Character_parse_json_enum+0x78>
     230:	ldr	r2, [sp, #40]	; 0x28
     234:	mov	r7, #0
     238:	mov	r3, #0
     23c:	mov	r4, r0
     240:	strd	r6, [r2]
     244:	str	r3, [r9]
     248:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     24c:	add	r3, pc, #476	; 0x1dc
     250:	ldrd	r2, [r3]
     254:	cmp	r1, r3
     258:	cmpeq	r0, r2
     25c:	bhi	2b8 <Fantasy_Character_parse_json_enum+0x174>
     260:	add	r7, pc, #464	; 0x1d0
     264:	ldrd	r6, [r7]
     268:	mov	sl, #0
     26c:	cmp	r1, r7
     270:	cmpeq	sl, r6
     274:	bne	1bc <Fantasy_Character_parse_json_enum+0x78>
     278:	ldr	r3, [sp, #44]	; 0x2c
     27c:	mov	r2, r5
     280:	mov	r0, r8
     284:	mov	r1, r4
     288:	str	r3, [sp]
     28c:	mov	r3, #4
     290:	bl	0 <flatcc_json_parser_match_constant>
     294:	cmp	r4, r0
     298:	beq	1bc <Fantasy_Character_parse_json_enum+0x78>
     29c:	ldr	r1, [sp, #40]	; 0x28
     2a0:	mov	r2, #0
     2a4:	mov	r3, #0
     2a8:	mov	r4, r0
     2ac:	strd	r2, [r1]
     2b0:	str	sl, [r9]
     2b4:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     2b8:	add	r3, pc, #384	; 0x180
     2bc:	ldrd	r2, [r3]
     2c0:	cmp	r1, r3
     2c4:	cmpeq	r0, r2
     2c8:	bls	340 <Fantasy_Character_parse_json_enum+0x1fc>
     2cc:	add	r7, pc, #372	; 0x174
     2d0:	ldrd	r6, [r7]
     2d4:	lsr	r2, r0, #16
     2d8:	lsl	r2, r2, #16
     2dc:	cmp	r1, r7
     2e0:	cmpeq	r2, r6
     2e4:	beq	3dc <Fantasy_Character_parse_json_enum+0x298>
     2e8:	add	r3, pc, #352	; 0x160
     2ec:	ldrd	r2, [r3]
     2f0:	cmp	r1, r3
     2f4:	cmpeq	r0, r2
     2f8:	bne	1bc <Fantasy_Character_parse_json_enum+0x78>
     2fc:	ldr	r3, [sp, #44]	; 0x2c
     300:	mov	r2, r5
     304:	mov	r0, r8
     308:	mov	r1, r4
     30c:	str	r3, [sp]
     310:	mov	r3, #8
     314:	bl	0 <flatcc_json_parser_match_constant>
     318:	cmp	r4, r0
     31c:	beq	1bc <Fantasy_Character_parse_json_enum+0x78>
     320:	ldr	r2, [sp, #40]	; 0x28
     324:	mov	r4, r0
     328:	mov	r1, #0
     32c:	mov	r0, #8
     330:	mov	r3, #0
     334:	strd	r0, [r2]
     338:	str	r3, [r9]
     33c:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     340:	add	r7, pc, #272	; 0x110
     344:	ldrd	r6, [r7]
     348:	and	r2, r0, #-16777216	; 0xff000000
     34c:	cmp	r1, r7
     350:	cmpeq	r2, r6
     354:	bne	1bc <Fantasy_Character_parse_json_enum+0x78>
     358:	ldr	r3, [sp, #44]	; 0x2c
     35c:	mov	r2, r5
     360:	mov	r0, r8
     364:	mov	r1, r4
     368:	str	r3, [sp]
     36c:	mov	r3, #5
     370:	bl	0 <flatcc_json_parser_match_constant>
     374:	cmp	r4, r0
     378:	movne	r6, #11
     37c:	bne	230 <Fantasy_Character_parse_json_enum+0xec>
     380:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     384:	ldr	r3, [sp, #44]	; 0x2c
     388:	mov	r2, r5
     38c:	mov	r0, r8
     390:	mov	r1, r4
     394:	str	r3, [sp]
     398:	mov	r3, #5
     39c:	bl	0 <flatcc_json_parser_match_constant>
     3a0:	cmp	r4, r0
     3a4:	movne	r6, #9
     3a8:	bne	230 <Fantasy_Character_parse_json_enum+0xec>
     3ac:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     3b0:	ldr	r3, [sp, #44]	; 0x2c
     3b4:	mov	r2, r5
     3b8:	mov	r0, r8
     3bc:	mov	r1, r4
     3c0:	str	r3, [sp]
     3c4:	mov	r3, #5
     3c8:	bl	0 <flatcc_json_parser_match_constant>
     3cc:	cmp	r4, r0
     3d0:	movne	r6, #2
     3d4:	bne	230 <Fantasy_Character_parse_json_enum+0xec>
     3d8:	b	1bc <Fantasy_Character_parse_json_enum+0x78>
     3dc:	ldr	r3, [sp, #44]	; 0x2c
     3e0:	mov	r2, r5
     3e4:	mov	r0, r8
     3e8:	mov	r1, r4
     3ec:	str	r3, [sp]
     3f0:	mov	r3, #6
     3f4:	bl	0 <flatcc_json_parser_match_constant>
     3f8:	cmp	r4, r0
     3fc:	beq	1bc <Fantasy_Character_parse_json_enum+0x78>
     400:	mov	r6, #255	; 0xff
     404:	b	230 <Fantasy_Character_parse_json_enum+0xec>
     408:	.word	0xffffffff
     40c:	.word	0x4e4f4e44
     410:	.word	0x46616dff
     414:	.word	0x426f6f6b
     418:	.word	0x65000000
     41c:	.word	0x42656c6c
     420:	.word	0x6e000000
     424:	.word	0x4d754c61
     428:	.word	0x46616e00
     42c:	.word	0x426f6f6b
     430:	.word	0x71ffffff
     434:	.word	0x4f746865
     438:	.word	0x00000000
     43c:	.word	0x4e4f4e45
     440:	.word	0x6e7a656b
     444:	.word	0x52617075
     448:	.word	0x65640000
     44c:	.word	0x556e7573
     450:	.word	0x6e7a656c
     454:	.word	0x52617075
     458:	.word	0x72000000
     45c:	.word	0x4f746865

00000460 <MyGame_Example_Any_parse_json_enum>:
     460:	strd	r4, [sp, #-36]!	; 0xffffffdc
     464:	mov	r4, r1
     468:	mov	r1, r2
     46c:	strd	r6, [sp, #8]
     470:	mov	r5, r2
     474:	strd	r8, [sp, #16]
     478:	mov	r8, r0
     47c:	mov	r0, r4
     480:	strd	sl, [sp, #24]
     484:	mov	r9, r3
     488:	str	lr, [sp, #32]
     48c:	sub	sp, sp, #12
     490:	bl	0 <flatcc_json_parser_symbol_part_ext>
     494:	add	r3, pc, #524	; 0x20c
     498:	ldrd	r2, [r3]
     49c:	cmp	r1, r3
     4a0:	cmpeq	r0, r2
     4a4:	bhi	4e4 <MyGame_Example_Any_parse_json_enum+0x84>
     4a8:	add	r7, pc, #512	; 0x200
     4ac:	ldrd	r6, [r7]
     4b0:	bic	r3, r1, #255	; 0xff
     4b4:	mov	sl, #0
     4b8:	cmp	r3, r7
     4bc:	cmpeq	sl, r6
     4c0:	beq	5c0 <MyGame_Example_Any_parse_json_enum+0x160>
     4c4:	mov	r0, r4
     4c8:	add	sp, sp, #12
     4cc:	ldrd	r4, [sp]
     4d0:	ldrd	r6, [sp, #8]
     4d4:	ldrd	r8, [sp, #16]
     4d8:	ldrd	sl, [sp, #24]
     4dc:	add	sp, sp, #32
     4e0:	pop	{pc}		; (ldr pc, [sp], #4)
     4e4:	add	r3, pc, #460	; 0x1cc
     4e8:	ldrd	r2, [r3]
     4ec:	cmp	r1, r3
     4f0:	cmpeq	r0, r2
     4f4:	beq	678 <MyGame_Example_Any_parse_json_enum+0x218>
     4f8:	add	r7, pc, #448	; 0x1c0
     4fc:	ldrd	r6, [r7]
     500:	bic	r2, r0, #255	; 0xff
     504:	cmp	r1, r7
     508:	cmpeq	r2, r6
     50c:	beq	638 <MyGame_Example_Any_parse_json_enum+0x1d8>
     510:	add	r7, pc, #432	; 0x1b0
     514:	ldrd	r6, [r7]
     518:	mov	sl, #0
     51c:	cmp	r1, r7
     520:	cmpeq	sl, r6
     524:	beq	5fc <MyGame_Example_Any_parse_json_enum+0x19c>
     528:	add	r3, pc, #416	; 0x1a0
     52c:	ldrd	r2, [r3]
     530:	cmp	r1, r3
     534:	cmpeq	r0, r2
     538:	bne	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     53c:	mov	r1, r5
     540:	add	r0, r4, #8
     544:	bl	0 <flatcc_json_parser_symbol_part_ext>
     548:	add	r3, pc, #392	; 0x188
     54c:	ldrd	r2, [r3]
     550:	cmp	r1, r3
     554:	cmpeq	r0, r2
     558:	bne	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     55c:	add	r7, pc, #380	; 0x17c
     560:	ldrd	r6, [r7]
     564:	add	fp, r4, #16
     568:	mov	r1, r5
     56c:	mov	r0, fp
     570:	bl	0 <flatcc_json_parser_symbol_part_ext>
     574:	bic	r2, r0, #255	; 0xff
     578:	cmp	r1, r7
     57c:	cmpeq	r2, r6
     580:	bne	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     584:	ldr	r3, [sp, #52]	; 0x34
     588:	mov	r2, r5
     58c:	mov	r0, r8
     590:	mov	r1, fp
     594:	str	r3, [sp]
     598:	mov	r3, #7
     59c:	bl	0 <flatcc_json_parser_match_constant>
     5a0:	cmp	fp, r0
     5a4:	beq	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     5a8:	ldr	r1, [sp, #48]	; 0x30
     5ac:	mov	r2, #2
     5b0:	mov	r3, #0
     5b4:	strd	r2, [r1]
     5b8:	str	sl, [r9]
     5bc:	b	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     5c0:	ldr	r3, [sp, #52]	; 0x34
     5c4:	mov	r2, r5
     5c8:	mov	r0, r8
     5cc:	mov	r1, r4
     5d0:	str	r3, [sp]
     5d4:	mov	r3, #3
     5d8:	bl	0 <flatcc_json_parser_match_constant>
     5dc:	cmp	r4, r0
     5e0:	beq	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     5e4:	ldr	r1, [sp, #48]	; 0x30
     5e8:	mov	r2, #4
     5ec:	mov	r3, #0
     5f0:	strd	r2, [r1]
     5f4:	str	sl, [r9]
     5f8:	b	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     5fc:	ldr	r3, [sp, #52]	; 0x34
     600:	mov	r2, r5
     604:	mov	r0, r8
     608:	mov	r1, r4
     60c:	str	r3, [sp]
     610:	mov	r3, #4
     614:	bl	0 <flatcc_json_parser_match_constant>
     618:	cmp	r4, r0
     61c:	beq	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     620:	ldr	r1, [sp, #48]	; 0x30
     624:	mov	r2, #0
     628:	mov	r3, #0
     62c:	strd	r2, [r1]
     630:	str	sl, [r9]
     634:	b	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     638:	ldr	r3, [sp, #52]	; 0x34
     63c:	mov	r2, r5
     640:	mov	r0, r8
     644:	mov	r1, r4
     648:	str	r3, [sp]
     64c:	mov	r3, #7
     650:	bl	0 <flatcc_json_parser_match_constant>
     654:	cmp	r4, r0
     658:	beq	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     65c:	mov	r4, #1
     660:	ldr	r2, [sp, #48]	; 0x30
     664:	mov	r5, #0
     668:	mov	r3, #0
     66c:	strd	r4, [r2]
     670:	str	r3, [r9]
     674:	b	4c8 <MyGame_Example_Any_parse_json_enum+0x68>
     678:	ldr	r3, [sp, #52]	; 0x34
     67c:	mov	r1, r4
     680:	mov	r2, r5
     684:	mov	r0, r8
     688:	str	r3, [sp]
     68c:	mov	r3, #8
     690:	bl	0 <flatcc_json_parser_match_constant>
     694:	cmp	r4, r0
     698:	movne	r4, #3
     69c:	bne	660 <MyGame_Example_Any_parse_json_enum+0x200>
     6a0:	b	4c4 <MyGame_Example_Any_parse_json_enum+0x64>
     6a4:	nop	{0}
     6a8:	.word	0x746571ff
     6ac:	.word	0x4d6f6e73
     6b0:	.word	0x00000000
     6b4:	.word	0x416c7400
     6b8:	.word	0x74657232
     6bc:	.word	0x4d6f6e73
     6c0:	.word	0x74657200
     6c4:	.word	0x4d6f6e73
     6c8:	.word	0x00000000
     6cc:	.word	0x4e4f4e45
     6d0:	.word	0x53696d70
     6d4:	.word	0x54657374
     6d8:	.word	0x626c6557
     6dc:	.word	0x6c655461
     6e0:	.word	0x6e756d00
     6e4:	.word	0x69746845

000006e8 <MyGame_Example_int_enum_parse_json_enum>:
     6e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
     6ec:	mov	r4, r1
     6f0:	mov	r1, r2
     6f4:	strd	r6, [sp, #8]
     6f8:	mov	r5, r2
     6fc:	strd	r8, [sp, #16]
     700:	mov	r8, r0
     704:	mov	r0, r4
     708:	str	sl, [sp, #24]
     70c:	mov	r9, r3
     710:	str	lr, [sp, #28]
     714:	sub	sp, sp, #8
     718:	bl	0 <flatcc_json_parser_symbol_part_ext>
     71c:	add	r3, pc, #412	; 0x19c
     720:	ldrd	r2, [r3]
     724:	cmp	r1, r3
     728:	cmpeq	r0, r2
     72c:	bhi	768 <MyGame_Example_int_enum_parse_json_enum+0x80>
     730:	add	r7, pc, #400	; 0x190
     734:	ldrd	r6, [r7]
     738:	mov	sl, #0
     73c:	cmp	r1, r7
     740:	cmpeq	sl, r6
     744:	beq	838 <MyGame_Example_int_enum_parse_json_enum+0x150>
     748:	mov	r0, r4
     74c:	add	sp, sp, #8
     750:	ldrd	r4, [sp]
     754:	ldrd	r6, [sp, #8]
     758:	ldrd	r8, [sp, #16]
     75c:	ldr	sl, [sp, #24]
     760:	add	sp, sp, #28
     764:	pop	{pc}		; (ldr pc, [sp], #4)
     768:	add	r3, pc, #352	; 0x160
     76c:	ldrd	r2, [r3]
     770:	cmp	r1, r3
     774:	cmpeq	r0, r2
     778:	bhi	7c0 <MyGame_Example_int_enum_parse_json_enum+0xd8>
     77c:	add	r7, pc, #340	; 0x154
     780:	ldrd	r6, [r7]
     784:	mov	sl, #0
     788:	cmp	r1, r7
     78c:	cmpeq	sl, r6
     790:	bne	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     794:	ldr	r3, [sp, #44]	; 0x2c
     798:	mov	r2, r5
     79c:	mov	r0, r8
     7a0:	mov	r1, r4
     7a4:	str	r3, [sp]
     7a8:	mov	r3, #4
     7ac:	bl	0 <flatcc_json_parser_match_constant>
     7b0:	cmp	r4, r0
     7b4:	beq	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     7b8:	mov	r2, #42	; 0x2a
     7bc:	b	860 <MyGame_Example_int_enum_parse_json_enum+0x178>
     7c0:	add	r7, pc, #280	; 0x118
     7c4:	ldrd	r6, [r7]
     7c8:	bic	r2, r0, #255	; 0xff
     7cc:	cmp	r1, r7
     7d0:	cmpeq	r2, r6
     7d4:	beq	878 <MyGame_Example_int_enum_parse_json_enum+0x190>
     7d8:	add	r7, pc, #264	; 0x108
     7dc:	ldrd	r6, [r7]
     7e0:	lsr	r2, r0, #16
     7e4:	lsl	r2, r2, #16
     7e8:	cmp	r1, r7
     7ec:	cmpeq	r2, r6
     7f0:	bne	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     7f4:	ldr	r3, [sp, #44]	; 0x2c
     7f8:	mov	r2, r5
     7fc:	mov	r0, r8
     800:	mov	r1, r4
     804:	str	r3, [sp]
     808:	mov	r3, #6
     80c:	bl	0 <flatcc_json_parser_match_constant>
     810:	cmp	r4, r0
     814:	beq	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     818:	ldr	r2, [sp, #40]	; 0x28
     81c:	mov	r4, r0
     820:	mvn	r1, #0
     824:	mvn	r0, #1
     828:	mov	r3, #1
     82c:	strd	r0, [r2]
     830:	str	r3, [r9]
     834:	b	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     838:	ldr	r3, [sp, #44]	; 0x2c
     83c:	mov	r2, r5
     840:	mov	r0, r8
     844:	mov	r1, r4
     848:	str	r3, [sp]
     84c:	mov	r3, #4
     850:	bl	0 <flatcc_json_parser_match_constant>
     854:	cmp	r4, r0
     858:	movne	r2, #2
     85c:	beq	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     860:	ldr	r1, [sp, #40]	; 0x28
     864:	mov	r3, #0
     868:	mov	r4, r0
     86c:	strd	r2, [r1]
     870:	str	sl, [r9]
     874:	b	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     878:	ldr	r3, [sp, #44]	; 0x2c
     87c:	mov	r2, r5
     880:	mov	r0, r8
     884:	mov	r1, r4
     888:	str	r3, [sp]
     88c:	mov	r3, #7
     890:	bl	0 <flatcc_json_parser_match_constant>
     894:	cmp	r4, r0
     898:	beq	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     89c:	ldr	r2, [sp, #40]	; 0x28
     8a0:	mvn	r6, #0
     8a4:	mvn	r7, #0
     8a8:	mov	r3, #1
     8ac:	mov	r4, r0
     8b0:	strd	r6, [r2]
     8b4:	str	r3, [r9]
     8b8:	b	748 <MyGame_Example_int_enum_parse_json_enum+0x60>
     8bc:	nop	{0}
     8c0:	.word	0xffffffff
     8c4:	.word	0x696e7431
     8c8:	.word	0x00000000
     8cc:	.word	0x696e7431
     8d0:	.word	0x6566ffff
     8d4:	.word	0x696e746e
     8d8:	.word	0x00000000
     8dc:	.word	0x696e7432
     8e0:	.word	0x65673200
     8e4:	.word	0x696e746e
     8e8:	.word	0x65670000
     8ec:	.word	0x696e746e

000008f0 <flatcc_json_parser_space>:
     8f0:	sub	r3, r2, r1
     8f4:	cmp	r3, #1
     8f8:	ble	90c <flatcc_json_parser_space+0x1c>
     8fc:	ldrb	r3, [r1]
     900:	cmp	r3, #32
     904:	bhi	910 <flatcc_json_parser_space+0x20>
     908:	beq	918 <flatcc_json_parser_space+0x28>
     90c:	b	0 <flatcc_json_parser_space_ext>
     910:	mov	r0, r1
     914:	bx	lr
     918:	ldrb	r3, [r1, #1]
     91c:	cmp	r3, #32
     920:	bls	90c <flatcc_json_parser_space+0x1c>
     924:	add	r0, r1, #1
     928:	bx	lr

0000092c <flatcc_json_parser_int64>:
     92c:	strd	r4, [sp, #-20]!	; 0xffffffec
     930:	mov	r4, #0
     934:	mov	r5, #0
     938:	strd	r6, [sp, #8]
     93c:	mov	r6, #0
     940:	cmp	r1, r2
     944:	str	lr, [sp, #16]
     948:	sub	sp, sp, #28
     94c:	moveq	r0, r1
     950:	strd	r4, [r3]
     954:	str	r6, [sp, #12]
     958:	strd	r4, [sp, #16]
     95c:	beq	988 <flatcc_json_parser_int64+0x5c>
     960:	add	ip, sp, #16
     964:	mov	r5, r3
     968:	add	r3, sp, #12
     96c:	mov	r4, r1
     970:	str	ip, [sp]
     974:	mov	r7, r0
     978:	mov	r6, r2
     97c:	bl	0 <flatcc_json_parser_integer>
     980:	cmp	r4, r0
     984:	bne	99c <flatcc_json_parser_int64+0x70>
     988:	add	sp, sp, #28
     98c:	ldrd	r4, [sp]
     990:	ldrd	r6, [sp, #8]
     994:	add	sp, sp, #16
     998:	pop	{pc}		; (ldr pc, [sp], #4)
     99c:	ldr	r1, [sp, #12]
     9a0:	ldrd	r2, [sp, #16]
     9a4:	cmp	r1, #0
     9a8:	beq	9c8 <flatcc_json_parser_int64+0x9c>
     9ac:	cmp	r3, #-2147483648	; 0x80000000
     9b0:	cmpeq	r2, #0
     9b4:	bhi	9f0 <flatcc_json_parser_int64+0xc4>
     9b8:	rsbs	r2, r2, #0
     9bc:	rsc	r3, r3, #0
     9c0:	strd	r2, [r5]
     9c4:	b	988 <flatcc_json_parser_int64+0x5c>
     9c8:	cmp	r2, #0
     9cc:	sbcs	r1, r3, #0
     9d0:	strdge	r2, [r5]
     9d4:	bge	988 <flatcc_json_parser_int64+0x5c>
     9d8:	mov	r1, r0
     9dc:	mov	r2, r6
     9e0:	mov	r0, r7
     9e4:	mov	r3, #7
     9e8:	bl	0 <flatcc_json_parser_set_error>
     9ec:	b	988 <flatcc_json_parser_int64+0x5c>
     9f0:	mov	r1, r0
     9f4:	mov	r2, r6
     9f8:	mov	r0, r7
     9fc:	mov	r3, #8
     a00:	bl	0 <flatcc_json_parser_set_error>
     a04:	b	988 <flatcc_json_parser_int64+0x5c>

00000a08 <flatcc_json_parser_uint64.constprop.29>:
     a08:	strd	r4, [sp, #-20]!	; 0xffffffec
     a0c:	mov	r4, #0
     a10:	mov	r5, #0
     a14:	strd	r6, [sp, #8]
     a18:	mov	r6, #0
     a1c:	cmp	r1, r2
     a20:	str	lr, [sp, #16]
     a24:	sub	sp, sp, #28
     a28:	moveq	r0, r1
     a2c:	strd	r4, [r3]
     a30:	str	r6, [sp, #12]
     a34:	strd	r4, [sp, #16]
     a38:	beq	a78 <flatcc_json_parser_uint64.constprop.29+0x70>
     a3c:	add	ip, sp, #16
     a40:	mov	r5, r3
     a44:	add	r3, sp, #12
     a48:	mov	r4, r1
     a4c:	str	ip, [sp]
     a50:	mov	r7, r0
     a54:	mov	r6, r2
     a58:	bl	0 <flatcc_json_parser_integer>
     a5c:	cmp	r4, r0
     a60:	beq	a78 <flatcc_json_parser_uint64.constprop.29+0x70>
     a64:	ldr	r3, [sp, #12]
     a68:	cmp	r3, #0
     a6c:	bne	a8c <flatcc_json_parser_uint64.constprop.29+0x84>
     a70:	ldrd	r2, [sp, #16]
     a74:	strd	r2, [r5]
     a78:	add	sp, sp, #28
     a7c:	ldrd	r4, [sp]
     a80:	ldrd	r6, [sp, #8]
     a84:	add	sp, sp, #16
     a88:	pop	{pc}		; (ldr pc, [sp], #4)
     a8c:	mov	r1, r0
     a90:	mov	r2, r6
     a94:	mov	r0, r7
     a98:	mov	r3, #8
     a9c:	bl	0 <flatcc_json_parser_set_error>
     aa0:	b	a78 <flatcc_json_parser_uint64.constprop.29+0x70>

00000aa4 <flatcc_json_parser_uint8>:
     aa4:	strd	r4, [sp, #-20]!	; 0xffffffec
     aa8:	cmp	r1, r2
     aac:	strd	r6, [sp, #8]
     ab0:	mov	r6, #0
     ab4:	mov	r7, #0
     ab8:	str	lr, [sp, #16]
     abc:	sub	sp, sp, #28
     ac0:	mov	lr, #0
     ac4:	moveq	r0, r1
     ac8:	strb	lr, [r3]
     acc:	str	lr, [sp, #12]
     ad0:	strd	r6, [sp, #16]
     ad4:	beq	b00 <flatcc_json_parser_uint8+0x5c>
     ad8:	add	ip, sp, #16
     adc:	mov	r5, r3
     ae0:	add	r3, sp, #12
     ae4:	mov	r4, r1
     ae8:	str	ip, [sp]
     aec:	mov	r7, r0
     af0:	mov	r6, r2
     af4:	bl	0 <flatcc_json_parser_integer>
     af8:	cmp	r4, r0
     afc:	bne	b14 <flatcc_json_parser_uint8+0x70>
     b00:	add	sp, sp, #28
     b04:	ldrd	r4, [sp]
     b08:	ldrd	r6, [sp, #8]
     b0c:	add	sp, sp, #16
     b10:	pop	{pc}		; (ldr pc, [sp], #4)
     b14:	ldr	r3, [sp, #12]
     b18:	cmp	r3, #0
     b1c:	bne	b4c <flatcc_json_parser_uint8+0xa8>
     b20:	ldrd	r2, [sp, #16]
     b24:	cmp	r3, #0
     b28:	cmpeq	r2, #255	; 0xff
     b2c:	strbls	r2, [r5]
     b30:	bls	b00 <flatcc_json_parser_uint8+0x5c>
     b34:	mov	r1, r0
     b38:	mov	r2, r6
     b3c:	mov	r0, r7
     b40:	mov	r3, #7
     b44:	bl	0 <flatcc_json_parser_set_error>
     b48:	b	b00 <flatcc_json_parser_uint8+0x5c>
     b4c:	mov	r1, r0
     b50:	mov	r2, r6
     b54:	mov	r0, r7
     b58:	mov	r3, #8
     b5c:	bl	0 <flatcc_json_parser_set_error>
     b60:	b	b00 <flatcc_json_parser_uint8+0x5c>

00000b64 <flatcc_json_parser_uint32.constprop.28>:
     b64:	strd	r4, [sp, #-28]!	; 0xffffffe4
     b68:	cmp	r1, r2
     b6c:	strd	r6, [sp, #8]
     b70:	mov	r6, #0
     b74:	mov	r7, #0
     b78:	strd	r8, [sp, #16]
     b7c:	moveq	r0, r1
     b80:	str	lr, [sp, #24]
     b84:	sub	sp, sp, #28
     b88:	mov	lr, #0
     b8c:	str	lr, [r3]
     b90:	str	lr, [sp, #12]
     b94:	strd	r6, [sp, #16]
     b98:	beq	bc4 <flatcc_json_parser_uint32.constprop.28+0x60>
     b9c:	add	ip, sp, #16
     ba0:	mov	r5, r3
     ba4:	add	r3, sp, #12
     ba8:	mov	r4, r1
     bac:	str	ip, [sp]
     bb0:	mov	r7, r0
     bb4:	mov	r6, r2
     bb8:	bl	0 <flatcc_json_parser_integer>
     bbc:	cmp	r4, r0
     bc0:	bne	bdc <flatcc_json_parser_uint32.constprop.28+0x78>
     bc4:	add	sp, sp, #28
     bc8:	ldrd	r4, [sp]
     bcc:	ldrd	r6, [sp, #8]
     bd0:	ldrd	r8, [sp, #16]
     bd4:	add	sp, sp, #24
     bd8:	pop	{pc}		; (ldr pc, [sp], #4)
     bdc:	ldr	r3, [sp, #12]
     be0:	cmp	r3, #0
     be4:	bne	c1c <flatcc_json_parser_uint32.constprop.28+0xb8>
     be8:	ldrd	r2, [sp, #16]
     bec:	mov	r9, #0
     bf0:	mvn	r8, #0
     bf4:	cmp	r3, r9
     bf8:	cmpeq	r2, r8
     bfc:	strls	r2, [r5]
     c00:	bls	bc4 <flatcc_json_parser_uint32.constprop.28+0x60>
     c04:	mov	r1, r0
     c08:	mov	r2, r6
     c0c:	mov	r0, r7
     c10:	mov	r3, #7
     c14:	bl	0 <flatcc_json_parser_set_error>
     c18:	b	bc4 <flatcc_json_parser_uint32.constprop.28+0x60>
     c1c:	mov	r1, r0
     c20:	mov	r2, r6
     c24:	mov	r0, r7
     c28:	mov	r3, #8
     c2c:	bl	0 <flatcc_json_parser_set_error>
     c30:	b	bc4 <flatcc_json_parser_uint32.constprop.28+0x60>

00000c34 <flatcc_json_parser_int32.constprop.26>:
     c34:	strd	r4, [sp, #-28]!	; 0xffffffe4
     c38:	cmp	r1, r2
     c3c:	strd	r6, [sp, #8]
     c40:	mov	r6, #0
     c44:	mov	r7, #0
     c48:	strd	r8, [sp, #16]
     c4c:	moveq	r0, r1
     c50:	str	lr, [sp, #24]
     c54:	sub	sp, sp, #28
     c58:	mov	lr, #0
     c5c:	str	lr, [r3]
     c60:	str	lr, [sp, #12]
     c64:	strd	r6, [sp, #16]
     c68:	beq	c94 <flatcc_json_parser_int32.constprop.26+0x60>
     c6c:	add	ip, sp, #16
     c70:	mov	r5, r3
     c74:	add	r3, sp, #12
     c78:	mov	r4, r1
     c7c:	str	ip, [sp]
     c80:	mov	r7, r0
     c84:	mov	r6, r2
     c88:	bl	0 <flatcc_json_parser_integer>
     c8c:	cmp	r4, r0
     c90:	bne	cac <flatcc_json_parser_int32.constprop.26+0x78>
     c94:	add	sp, sp, #28
     c98:	ldrd	r4, [sp]
     c9c:	ldrd	r6, [sp, #8]
     ca0:	ldrd	r8, [sp, #16]
     ca4:	add	sp, sp, #24
     ca8:	pop	{pc}		; (ldr pc, [sp], #4)
     cac:	ldr	r1, [sp, #12]
     cb0:	ldrd	r2, [sp, #16]
     cb4:	cmp	r1, #0
     cb8:	beq	ce8 <flatcc_json_parser_int32.constprop.26+0xb4>
     cbc:	cmp	r3, #0
     cc0:	cmpeq	r2, #-2147483648	; 0x80000000
     cc4:	rsbls	r2, r2, #0
     cc8:	strls	r2, [r5]
     ccc:	bls	c94 <flatcc_json_parser_int32.constprop.26+0x60>
     cd0:	mov	r1, r0
     cd4:	mov	r2, r6
     cd8:	mov	r0, r7
     cdc:	mov	r3, #8
     ce0:	bl	0 <flatcc_json_parser_set_error>
     ce4:	b	c94 <flatcc_json_parser_int32.constprop.26+0x60>
     ce8:	mov	r9, #0
     cec:	mvn	r8, #-2147483648	; 0x80000000
     cf0:	cmp	r3, r9
     cf4:	cmpeq	r2, r8
     cf8:	strls	r2, [r5]
     cfc:	bls	c94 <flatcc_json_parser_int32.constprop.26+0x60>
     d00:	mov	r1, r0
     d04:	mov	r2, r6
     d08:	mov	r0, r7
     d0c:	mov	r3, #7
     d10:	bl	0 <flatcc_json_parser_set_error>
     d14:	b	c94 <flatcc_json_parser_int32.constprop.26+0x60>

00000d18 <flatcc_json_parser_int16.constprop.25>:
     d18:	strd	r4, [sp, #-28]!	; 0xffffffe4
     d1c:	cmp	r1, r2
     d20:	strd	r6, [sp, #8]
     d24:	mov	r6, #0
     d28:	mov	r7, #0
     d2c:	strd	r8, [sp, #16]
     d30:	moveq	r0, r1
     d34:	str	lr, [sp, #24]
     d38:	sub	sp, sp, #28
     d3c:	mov	lr, #0
     d40:	strh	lr, [r3]
     d44:	str	lr, [sp, #12]
     d48:	strd	r6, [sp, #16]
     d4c:	beq	d78 <flatcc_json_parser_int16.constprop.25+0x60>
     d50:	add	ip, sp, #16
     d54:	mov	r5, r3
     d58:	add	r3, sp, #12
     d5c:	mov	r4, r1
     d60:	str	ip, [sp]
     d64:	mov	r7, r0
     d68:	mov	r6, r2
     d6c:	bl	0 <flatcc_json_parser_integer>
     d70:	cmp	r4, r0
     d74:	bne	d90 <flatcc_json_parser_int16.constprop.25+0x78>
     d78:	add	sp, sp, #28
     d7c:	ldrd	r4, [sp]
     d80:	ldrd	r6, [sp, #8]
     d84:	ldrd	r8, [sp, #16]
     d88:	add	sp, sp, #24
     d8c:	pop	{pc}		; (ldr pc, [sp], #4)
     d90:	ldr	r1, [sp, #12]
     d94:	ldrd	r2, [sp, #16]
     d98:	cmp	r1, #0
     d9c:	beq	dcc <flatcc_json_parser_int16.constprop.25+0xb4>
     da0:	cmp	r3, #0
     da4:	cmpeq	r2, #32768	; 0x8000
     da8:	rsbls	r2, r2, #0
     dac:	strhls	r2, [r5]
     db0:	bls	d78 <flatcc_json_parser_int16.constprop.25+0x60>
     db4:	mov	r1, r0
     db8:	mov	r2, r6
     dbc:	mov	r0, r7
     dc0:	mov	r3, #8
     dc4:	bl	0 <flatcc_json_parser_set_error>
     dc8:	b	d78 <flatcc_json_parser_int16.constprop.25+0x60>
     dcc:	mov	r9, #0
     dd0:	movw	r8, #32767	; 0x7fff
     dd4:	cmp	r3, r9
     dd8:	cmpeq	r2, r8
     ddc:	strhls	r2, [r5]
     de0:	bls	d78 <flatcc_json_parser_int16.constprop.25+0x60>
     de4:	mov	r1, r0
     de8:	mov	r2, r6
     dec:	mov	r0, r7
     df0:	mov	r3, #7
     df4:	bl	0 <flatcc_json_parser_set_error>
     df8:	b	d78 <flatcc_json_parser_int16.constprop.25+0x60>

00000dfc <flatcc_json_parser_object_start>:
     dfc:	cmp	r1, r2
     e00:	beq	e10 <flatcc_json_parser_object_start+0x14>
     e04:	ldrb	ip, [r1]
     e08:	cmp	ip, #123	; 0x7b
     e0c:	beq	e20 <flatcc_json_parser_object_start+0x24>
     e10:	mov	ip, #0
     e14:	str	ip, [r3]
     e18:	mov	r3, #21
     e1c:	b	0 <flatcc_json_parser_set_error>
     e20:	strd	r4, [sp, #-16]!
     e24:	mov	r5, r0
     e28:	add	r0, r1, #1
     e2c:	str	r6, [sp, #8]
     e30:	mov	r6, r3
     e34:	sub	r3, r2, r0
     e38:	cmp	r3, #1
     e3c:	mov	r4, r2
     e40:	str	lr, [sp, #12]
     e44:	ble	e58 <flatcc_json_parser_object_start+0x5c>
     e48:	ldrb	r3, [r1, #1]
     e4c:	cmp	r3, #32
     e50:	bhi	e68 <flatcc_json_parser_object_start+0x6c>
     e54:	beq	e94 <flatcc_json_parser_object_start+0x98>
     e58:	mov	r1, r0
     e5c:	mov	r2, r4
     e60:	mov	r0, r5
     e64:	bl	0 <flatcc_json_parser_space_ext>
     e68:	cmp	r4, r0
     e6c:	beq	e7c <flatcc_json_parser_object_start+0x80>
     e70:	ldrb	r3, [r0]
     e74:	cmp	r3, #125	; 0x7d
     e78:	beq	ea8 <flatcc_json_parser_object_start+0xac>
     e7c:	mov	r3, #1
     e80:	ldrd	r4, [sp]
     e84:	str	r3, [r6]
     e88:	ldr	r6, [sp, #8]
     e8c:	add	sp, sp, #12
     e90:	pop	{pc}		; (ldr pc, [sp], #4)
     e94:	ldrb	r3, [r1, #2]
     e98:	cmp	r3, #32
     e9c:	addhi	r0, r1, #2
     ea0:	bls	e58 <flatcc_json_parser_object_start+0x5c>
     ea4:	b	e68 <flatcc_json_parser_object_start+0x6c>
     ea8:	mov	r3, #0
     eac:	mov	r2, r4
     eb0:	ldr	lr, [sp, #12]
     eb4:	add	r1, r0, #1
     eb8:	mov	r0, r5
     ebc:	ldrd	r4, [sp]
     ec0:	str	r3, [r6]
     ec4:	ldr	r6, [sp, #8]
     ec8:	add	sp, sp, #16
     ecc:	b	8f0 <flatcc_json_parser_space>

00000ed0 <flatcc_json_parser_array_start>:
     ed0:	cmp	r1, r2
     ed4:	beq	ee4 <flatcc_json_parser_array_start+0x14>
     ed8:	ldrb	ip, [r1]
     edc:	cmp	ip, #91	; 0x5b
     ee0:	beq	ef4 <flatcc_json_parser_array_start+0x24>
     ee4:	mov	ip, #0
     ee8:	str	ip, [r3]
     eec:	mov	r3, #22
     ef0:	b	0 <flatcc_json_parser_set_error>
     ef4:	strd	r4, [sp, #-16]!
     ef8:	mov	r5, r0
     efc:	add	r0, r1, #1
     f00:	str	r6, [sp, #8]
     f04:	mov	r6, r3
     f08:	sub	r3, r2, r0
     f0c:	cmp	r3, #1
     f10:	mov	r4, r2
     f14:	str	lr, [sp, #12]
     f18:	ble	f2c <flatcc_json_parser_array_start+0x5c>
     f1c:	ldrb	r3, [r1, #1]
     f20:	cmp	r3, #32
     f24:	bhi	f3c <flatcc_json_parser_array_start+0x6c>
     f28:	beq	f68 <flatcc_json_parser_array_start+0x98>
     f2c:	mov	r1, r0
     f30:	mov	r2, r4
     f34:	mov	r0, r5
     f38:	bl	0 <flatcc_json_parser_space_ext>
     f3c:	cmp	r4, r0
     f40:	beq	f50 <flatcc_json_parser_array_start+0x80>
     f44:	ldrb	r3, [r0]
     f48:	cmp	r3, #93	; 0x5d
     f4c:	beq	f7c <flatcc_json_parser_array_start+0xac>
     f50:	mov	r3, #1
     f54:	ldrd	r4, [sp]
     f58:	str	r3, [r6]
     f5c:	ldr	r6, [sp, #8]
     f60:	add	sp, sp, #12
     f64:	pop	{pc}		; (ldr pc, [sp], #4)
     f68:	ldrb	r3, [r1, #2]
     f6c:	cmp	r3, #32
     f70:	addhi	r0, r1, #2
     f74:	bls	f2c <flatcc_json_parser_array_start+0x5c>
     f78:	b	f3c <flatcc_json_parser_array_start+0x6c>
     f7c:	mov	r3, #0
     f80:	mov	r2, r4
     f84:	ldr	lr, [sp, #12]
     f88:	add	r1, r0, #1
     f8c:	mov	r0, r5
     f90:	ldrd	r4, [sp]
     f94:	str	r3, [r6]
     f98:	ldr	r6, [sp, #8]
     f9c:	add	sp, sp, #16
     fa0:	b	8f0 <flatcc_json_parser_space>

00000fa4 <flatcc_json_parser_symbolic_float>:
     fa4:	strd	r4, [sp, #-36]!	; 0xffffffdc
     fa8:	cmp	r1, r2
     fac:	mov	r5, r2
     fb0:	strd	r6, [sp, #8]
     fb4:	strd	r8, [sp, #16]
     fb8:	mov	r8, r0
     fbc:	strd	sl, [sp, #24]
     fc0:	mov	fp, r3
     fc4:	str	lr, [sp, #32]
     fc8:	sub	sp, sp, #36	; 0x24
     fcc:	mov	lr, #0
     fd0:	ldr	r3, [sp, #72]	; 0x48
     fd4:	str	lr, [r3]
     fd8:	beq	1130 <flatcc_json_parser_symbolic_float+0x18c>
     fdc:	ldrb	r3, [r1]
     fe0:	cmp	r3, #34	; 0x22
     fe4:	moveq	r2, #0
     fe8:	addeq	r3, r1, #1
     fec:	streq	r2, [r0, #12]
     ff0:	beq	1144 <flatcc_json_parser_symbolic_float+0x1a0>
     ff4:	cmp	r3, #46	; 0x2e
     ff8:	movne	r2, #1
     ffc:	movne	r3, r1
    1000:	strne	r2, [r0, #12]
    1004:	beq	110c <flatcc_json_parser_symbolic_float+0x168>
    1008:	mov	r2, #0
    100c:	add	sl, sp, #20
    1010:	add	r9, sp, #24
    1014:	str	r2, [sp, #8]
    1018:	mov	r7, fp
    101c:	mov	r6, r3
    1020:	ldr	r4, [fp]
    1024:	mov	r1, r3
    1028:	b	1044 <flatcc_json_parser_symbolic_float+0xa0>
    102c:	cmp	r6, r0
    1030:	mov	r6, r0
    1034:	bne	1088 <flatcc_json_parser_symbolic_float+0xe4>
    1038:	ldr	r4, [r7, #4]!
    103c:	cmp	r4, #0
    1040:	beq	10f4 <flatcc_json_parser_symbolic_float+0x150>
    1044:	add	r3, sp, #16
    1048:	mov	r2, r5
    104c:	stm	sp, {r9, sl}
    1050:	mov	r0, r8
    1054:	blx	r4
    1058:	cmp	r5, r0
    105c:	mov	r1, r0
    1060:	bne	102c <flatcc_json_parser_symbolic_float+0x88>
    1064:	mov	r3, r0
    1068:	mov	r0, r3
    106c:	add	sp, sp, #36	; 0x24
    1070:	ldrd	r4, [sp]
    1074:	ldrd	r6, [sp, #8]
    1078:	ldrd	r8, [sp, #16]
    107c:	ldrd	sl, [sp, #24]
    1080:	add	sp, sp, #32
    1084:	pop	{pc}		; (ldr pc, [sp], #4)
    1088:	ldr	r2, [sp, #8]
    108c:	mov	r3, r0
    1090:	cmp	r2, #0
    1094:	beq	10a4 <flatcc_json_parser_symbolic_float+0x100>
    1098:	ldr	r2, [r8, #12]
    109c:	cmp	r2, #0
    10a0:	bne	1188 <flatcc_json_parser_symbolic_float+0x1e4>
    10a4:	ldrd	r0, [sp, #24]
    10a8:	str	r3, [sp, #12]
    10ac:	bl	0 <__aeabi_ul2f>
    10b0:	vmov	s14, r0
    10b4:	ldr	r2, [sp, #16]
    10b8:	ldr	r3, [sp, #12]
    10bc:	cmp	r2, #0
    10c0:	ldr	r2, [sp, #72]	; 0x48
    10c4:	vnegne.f32	s14, s14
    10c8:	vldr	s15, [r2]
    10cc:	ldr	r2, [sp, #8]
    10d0:	vadd.f32	s15, s15, s14
    10d4:	add	r2, r2, #1
    10d8:	str	r2, [sp, #8]
    10dc:	ldr	r2, [sp, #20]
    10e0:	cmp	r2, #0
    10e4:	ldr	r2, [sp, #72]	; 0x48
    10e8:	vstr	s15, [r2]
    10ec:	bne	1018 <flatcc_json_parser_symbolic_float+0x74>
    10f0:	b	1068 <flatcc_json_parser_symbolic_float+0xc4>
    10f4:	mov	r3, #23
    10f8:	mov	r2, r5
    10fc:	mov	r0, r8
    1100:	bl	0 <flatcc_json_parser_set_error>
    1104:	mov	r3, r0
    1108:	b	1068 <flatcc_json_parser_symbolic_float+0xc4>
    110c:	mov	r3, #5
    1110:	bl	0 <flatcc_json_parser_set_error>
    1114:	ldr	r2, [r8, #12]
    1118:	mov	r3, r0
    111c:	cmp	r2, #0
    1120:	beq	1144 <flatcc_json_parser_symbolic_float+0x1a0>
    1124:	cmp	r5, r3
    1128:	bne	1008 <flatcc_json_parser_symbolic_float+0x64>
    112c:	b	1068 <flatcc_json_parser_symbolic_float+0xc4>
    1130:	ldr	r3, [r0, #12]
    1134:	cmp	r3, #0
    1138:	movne	r3, r1
    113c:	bne	1068 <flatcc_json_parser_symbolic_float+0xc4>
    1140:	mov	r3, r5
    1144:	sub	r2, r5, r3
    1148:	cmp	r2, #1
    114c:	ble	1170 <flatcc_json_parser_symbolic_float+0x1cc>
    1150:	ldrb	r2, [r3]
    1154:	cmp	r2, #32
    1158:	bhi	1124 <flatcc_json_parser_symbolic_float+0x180>
    115c:	bne	1170 <flatcc_json_parser_symbolic_float+0x1cc>
    1160:	ldrb	r2, [r3, #1]
    1164:	cmp	r2, #32
    1168:	addhi	r3, r3, #1
    116c:	bhi	1124 <flatcc_json_parser_symbolic_float+0x180>
    1170:	mov	r1, r3
    1174:	mov	r2, r5
    1178:	mov	r0, r8
    117c:	bl	0 <flatcc_json_parser_space_ext>
    1180:	mov	r3, r0
    1184:	b	1124 <flatcc_json_parser_symbolic_float+0x180>
    1188:	mov	r1, r3
    118c:	mov	r2, r5
    1190:	mov	r3, #14
    1194:	mov	r0, r8
    1198:	bl	0 <flatcc_json_parser_set_error>
    119c:	mov	r3, r0
    11a0:	b	1068 <flatcc_json_parser_symbolic_float+0xc4>

000011a4 <flatcc_json_parser_symbolic_double>:
    11a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    11a8:	cmp	r1, r2
    11ac:	mov	r5, r2
    11b0:	strd	r6, [sp, #8]
    11b4:	mov	r6, #0
    11b8:	mov	r7, #0
    11bc:	strd	r8, [sp, #16]
    11c0:	mov	r8, r0
    11c4:	strd	sl, [sp, #24]
    11c8:	mov	fp, r3
    11cc:	str	lr, [sp, #32]
    11d0:	sub	sp, sp, #36	; 0x24
    11d4:	ldr	r3, [sp, #72]	; 0x48
    11d8:	strd	r6, [r3]
    11dc:	beq	1334 <flatcc_json_parser_symbolic_double+0x190>
    11e0:	ldrb	r3, [r1]
    11e4:	cmp	r3, #34	; 0x22
    11e8:	moveq	r2, #0
    11ec:	addeq	r3, r1, #1
    11f0:	streq	r2, [r0, #12]
    11f4:	beq	1348 <flatcc_json_parser_symbolic_double+0x1a4>
    11f8:	cmp	r3, #46	; 0x2e
    11fc:	movne	r2, #1
    1200:	movne	r3, r1
    1204:	strne	r2, [r0, #12]
    1208:	beq	1310 <flatcc_json_parser_symbolic_double+0x16c>
    120c:	mov	r2, #0
    1210:	add	sl, sp, #20
    1214:	add	r9, sp, #24
    1218:	str	r2, [sp, #8]
    121c:	mov	r7, fp
    1220:	mov	r6, r3
    1224:	ldr	r4, [fp]
    1228:	mov	r1, r3
    122c:	b	1248 <flatcc_json_parser_symbolic_double+0xa4>
    1230:	cmp	r6, r0
    1234:	mov	r6, r0
    1238:	bne	128c <flatcc_json_parser_symbolic_double+0xe8>
    123c:	ldr	r4, [r7, #4]!
    1240:	cmp	r4, #0
    1244:	beq	12f8 <flatcc_json_parser_symbolic_double+0x154>
    1248:	add	r3, sp, #16
    124c:	mov	r2, r5
    1250:	stm	sp, {r9, sl}
    1254:	mov	r0, r8
    1258:	blx	r4
    125c:	cmp	r5, r0
    1260:	mov	r1, r0
    1264:	bne	1230 <flatcc_json_parser_symbolic_double+0x8c>
    1268:	mov	r3, r0
    126c:	mov	r0, r3
    1270:	add	sp, sp, #36	; 0x24
    1274:	ldrd	r4, [sp]
    1278:	ldrd	r6, [sp, #8]
    127c:	ldrd	r8, [sp, #16]
    1280:	ldrd	sl, [sp, #24]
    1284:	add	sp, sp, #32
    1288:	pop	{pc}		; (ldr pc, [sp], #4)
    128c:	ldr	r2, [sp, #8]
    1290:	mov	r3, r0
    1294:	cmp	r2, #0
    1298:	beq	12a8 <flatcc_json_parser_symbolic_double+0x104>
    129c:	ldr	r2, [r8, #12]
    12a0:	cmp	r2, #0
    12a4:	bne	138c <flatcc_json_parser_symbolic_double+0x1e8>
    12a8:	ldrd	r0, [sp, #24]
    12ac:	str	r3, [sp, #12]
    12b0:	bl	0 <__aeabi_ul2d>
    12b4:	vmov	d6, r0, r1
    12b8:	ldr	r2, [sp, #16]
    12bc:	ldr	r3, [sp, #12]
    12c0:	cmp	r2, #0
    12c4:	ldr	r2, [sp, #72]	; 0x48
    12c8:	vnegne.f64	d6, d6
    12cc:	vldr	d7, [r2]
    12d0:	ldr	r2, [sp, #8]
    12d4:	vadd.f64	d7, d7, d6
    12d8:	add	r2, r2, #1
    12dc:	str	r2, [sp, #8]
    12e0:	ldr	r2, [sp, #20]
    12e4:	cmp	r2, #0
    12e8:	ldr	r2, [sp, #72]	; 0x48
    12ec:	vstr	d7, [r2]
    12f0:	bne	121c <flatcc_json_parser_symbolic_double+0x78>
    12f4:	b	126c <flatcc_json_parser_symbolic_double+0xc8>
    12f8:	mov	r3, #23
    12fc:	mov	r2, r5
    1300:	mov	r0, r8
    1304:	bl	0 <flatcc_json_parser_set_error>
    1308:	mov	r3, r0
    130c:	b	126c <flatcc_json_parser_symbolic_double+0xc8>
    1310:	mov	r3, #5
    1314:	bl	0 <flatcc_json_parser_set_error>
    1318:	ldr	r2, [r8, #12]
    131c:	mov	r3, r0
    1320:	cmp	r2, #0
    1324:	beq	1348 <flatcc_json_parser_symbolic_double+0x1a4>
    1328:	cmp	r5, r3
    132c:	bne	120c <flatcc_json_parser_symbolic_double+0x68>
    1330:	b	126c <flatcc_json_parser_symbolic_double+0xc8>
    1334:	ldr	r3, [r0, #12]
    1338:	cmp	r3, #0
    133c:	movne	r3, r1
    1340:	bne	126c <flatcc_json_parser_symbolic_double+0xc8>
    1344:	mov	r3, r5
    1348:	sub	r2, r5, r3
    134c:	cmp	r2, #1
    1350:	ble	1374 <flatcc_json_parser_symbolic_double+0x1d0>
    1354:	ldrb	r2, [r3]
    1358:	cmp	r2, #32
    135c:	bhi	1328 <flatcc_json_parser_symbolic_double+0x184>
    1360:	bne	1374 <flatcc_json_parser_symbolic_double+0x1d0>
    1364:	ldrb	r2, [r3, #1]
    1368:	cmp	r2, #32
    136c:	addhi	r3, r3, #1
    1370:	bhi	1328 <flatcc_json_parser_symbolic_double+0x184>
    1374:	mov	r1, r3
    1378:	mov	r2, r5
    137c:	mov	r0, r8
    1380:	bl	0 <flatcc_json_parser_space_ext>
    1384:	mov	r3, r0
    1388:	b	1328 <flatcc_json_parser_symbolic_double+0x184>
    138c:	mov	r1, r3
    1390:	mov	r2, r5
    1394:	mov	r3, #14
    1398:	mov	r0, r8
    139c:	bl	0 <flatcc_json_parser_set_error>
    13a0:	mov	r3, r0
    13a4:	b	126c <flatcc_json_parser_symbolic_double+0xc8>

000013a8 <flatcc_json_parser_symbolic_bool>:
    13a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    13ac:	mov	ip, #0
    13b0:	cmp	r1, r2
    13b4:	strd	r6, [sp, #8]
    13b8:	mov	r4, r1
    13bc:	mov	r6, r2
    13c0:	strd	r8, [sp, #16]
    13c4:	mov	r9, r0
    13c8:	strd	sl, [sp, #24]
    13cc:	str	lr, [sp, #32]
    13d0:	sub	sp, sp, #44	; 0x2c
    13d4:	str	r3, [sp, #20]
    13d8:	ldr	r3, [sp, #80]	; 0x50
    13dc:	strb	ip, [r3]
    13e0:	beq	1538 <flatcc_json_parser_symbolic_bool+0x190>
    13e4:	ldrb	r3, [r1]
    13e8:	cmp	r3, #34	; 0x22
    13ec:	addeq	r4, r1, #1
    13f0:	streq	ip, [r0, #12]
    13f4:	beq	1548 <flatcc_json_parser_symbolic_bool+0x1a0>
    13f8:	cmp	r3, #46	; 0x2e
    13fc:	movne	r3, #1
    1400:	strne	r3, [r0, #12]
    1404:	beq	1514 <flatcc_json_parser_symbolic_bool+0x16c>
    1408:	mov	r3, #0
    140c:	add	fp, sp, #28
    1410:	add	sl, sp, #32
    1414:	str	r3, [sp, #12]
    1418:	str	r3, [sp, #16]
    141c:	ldr	r8, [sp, #20]
    1420:	mov	r7, r4
    1424:	mov	r1, r4
    1428:	ldr	r5, [r8]
    142c:	b	1448 <flatcc_json_parser_symbolic_bool+0xa0>
    1430:	cmp	r7, r0
    1434:	mov	r7, r0
    1438:	bne	148c <flatcc_json_parser_symbolic_bool+0xe4>
    143c:	ldr	r5, [r8, #4]!
    1440:	cmp	r5, #0
    1444:	beq	14fc <flatcc_json_parser_symbolic_bool+0x154>
    1448:	add	r3, sp, #24
    144c:	mov	r2, r6
    1450:	strd	sl, [sp]
    1454:	mov	r0, r9
    1458:	blx	r5
    145c:	cmp	r6, r0
    1460:	mov	r1, r0
    1464:	bne	1430 <flatcc_json_parser_symbolic_bool+0x88>
    1468:	mov	r4, r0
    146c:	mov	r0, r4
    1470:	add	sp, sp, #44	; 0x2c
    1474:	ldrd	r4, [sp]
    1478:	ldrd	r6, [sp, #8]
    147c:	ldrd	r8, [sp, #16]
    1480:	ldrd	sl, [sp, #24]
    1484:	add	sp, sp, #32
    1488:	pop	{pc}		; (ldr pc, [sp], #4)
    148c:	ldr	r3, [sp, #12]
    1490:	mov	r4, r0
    1494:	cmp	r3, #0
    1498:	beq	14a8 <flatcc_json_parser_symbolic_bool+0x100>
    149c:	ldr	r3, [r9, #12]
    14a0:	cmp	r3, #0
    14a4:	bne	15b0 <flatcc_json_parser_symbolic_bool+0x208>
    14a8:	ldr	r3, [sp, #24]
    14ac:	cmp	r3, #0
    14b0:	bne	158c <flatcc_json_parser_symbolic_bool+0x1e4>
    14b4:	ldrd	r2, [sp, #32]
    14b8:	orrs	r3, r2, r3
    14bc:	movne	r3, #1
    14c0:	moveq	r3, #0
    14c4:	str	r3, [sp, #16]
    14c8:	ldr	r2, [sp, #12]
    14cc:	ldr	r1, [sp, #16]
    14d0:	ldr	r3, [sp, #80]	; 0x50
    14d4:	add	r2, r2, #1
    14d8:	str	r2, [sp, #12]
    14dc:	ldr	r2, [sp, #28]
    14e0:	ldrb	r3, [r3]
    14e4:	cmp	r2, #0
    14e8:	ldr	r2, [sp, #80]	; 0x50
    14ec:	add	r3, r1, r3
    14f0:	strb	r3, [r2]
    14f4:	bne	141c <flatcc_json_parser_symbolic_bool+0x74>
    14f8:	b	146c <flatcc_json_parser_symbolic_bool+0xc4>
    14fc:	mov	r2, r6
    1500:	mov	r0, r9
    1504:	mov	r3, #23
    1508:	bl	0 <flatcc_json_parser_set_error>
    150c:	mov	r4, r0
    1510:	b	146c <flatcc_json_parser_symbolic_bool+0xc4>
    1514:	mov	r3, #5
    1518:	bl	0 <flatcc_json_parser_set_error>
    151c:	ldr	r3, [r9, #12]
    1520:	mov	r4, r0
    1524:	cmp	r3, #0
    1528:	beq	1548 <flatcc_json_parser_symbolic_bool+0x1a0>
    152c:	cmp	r6, r4
    1530:	bne	1408 <flatcc_json_parser_symbolic_bool+0x60>
    1534:	b	146c <flatcc_json_parser_symbolic_bool+0xc4>
    1538:	ldr	r3, [r0, #12]
    153c:	cmp	r3, #0
    1540:	bne	146c <flatcc_json_parser_symbolic_bool+0xc4>
    1544:	mov	r4, r6
    1548:	sub	r3, r6, r4
    154c:	cmp	r3, #1
    1550:	ble	1574 <flatcc_json_parser_symbolic_bool+0x1cc>
    1554:	ldrb	r3, [r4]
    1558:	cmp	r3, #32
    155c:	bhi	152c <flatcc_json_parser_symbolic_bool+0x184>
    1560:	bne	1574 <flatcc_json_parser_symbolic_bool+0x1cc>
    1564:	ldrb	r3, [r4, #1]
    1568:	cmp	r3, #32
    156c:	addhi	r4, r4, #1
    1570:	bhi	152c <flatcc_json_parser_symbolic_bool+0x184>
    1574:	mov	r1, r4
    1578:	mov	r2, r6
    157c:	mov	r0, r9
    1580:	bl	0 <flatcc_json_parser_space_ext>
    1584:	mov	r4, r0
    1588:	b	152c <flatcc_json_parser_symbolic_bool+0x184>
    158c:	mov	r3, #8
    1590:	mov	r2, r6
    1594:	mov	r1, r4
    1598:	mov	r0, r9
    159c:	bl	0 <flatcc_json_parser_set_error>
    15a0:	cmp	r6, r0
    15a4:	bne	14c8 <flatcc_json_parser_symbolic_bool+0x120>
    15a8:	mov	r4, r6
    15ac:	b	146c <flatcc_json_parser_symbolic_bool+0xc4>
    15b0:	mov	r1, r4
    15b4:	mov	r2, r6
    15b8:	mov	r0, r9
    15bc:	mov	r3, #14
    15c0:	bl	0 <flatcc_json_parser_set_error>
    15c4:	mov	r4, r0
    15c8:	b	146c <flatcc_json_parser_symbolic_bool+0xc4>

000015cc <flatcc_json_parser_symbolic_uint64>:
    15cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    15d0:	cmp	r1, r2
    15d4:	mov	r4, r1
    15d8:	strd	r6, [sp, #8]
    15dc:	mov	r6, r2
    15e0:	strd	r8, [sp, #16]
    15e4:	mov	r9, r0
    15e8:	strd	sl, [sp, #24]
    15ec:	mov	sl, #0
    15f0:	mov	fp, #0
    15f4:	str	lr, [sp, #32]
    15f8:	sub	sp, sp, #44	; 0x2c
    15fc:	str	r3, [sp, #20]
    1600:	ldr	r3, [sp, #80]	; 0x50
    1604:	strd	sl, [r3]
    1608:	beq	1778 <flatcc_json_parser_symbolic_uint64+0x1ac>
    160c:	ldrb	r3, [r1]
    1610:	cmp	r3, #34	; 0x22
    1614:	moveq	r3, #0
    1618:	addeq	r4, r1, #1
    161c:	streq	r3, [r0, #12]
    1620:	beq	1788 <flatcc_json_parser_symbolic_uint64+0x1bc>
    1624:	cmp	r3, #46	; 0x2e
    1628:	movne	r3, #1
    162c:	strne	r3, [r0, #12]
    1630:	beq	1754 <flatcc_json_parser_symbolic_uint64+0x188>
    1634:	mov	r3, #0
    1638:	add	fp, sp, #28
    163c:	add	sl, sp, #32
    1640:	str	r3, [sp, #8]
    1644:	str	r3, [sp, #12]
    1648:	str	r3, [sp, #16]
    164c:	ldr	r8, [sp, #20]
    1650:	mov	r7, r4
    1654:	mov	r1, r4
    1658:	ldr	r5, [r8]
    165c:	b	1678 <flatcc_json_parser_symbolic_uint64+0xac>
    1660:	cmp	r7, r0
    1664:	mov	r7, r0
    1668:	bne	16bc <flatcc_json_parser_symbolic_uint64+0xf0>
    166c:	ldr	r5, [r8, #4]!
    1670:	cmp	r5, #0
    1674:	beq	173c <flatcc_json_parser_symbolic_uint64+0x170>
    1678:	add	r3, sp, #24
    167c:	mov	r2, r6
    1680:	strd	sl, [sp]
    1684:	mov	r0, r9
    1688:	blx	r5
    168c:	cmp	r6, r0
    1690:	mov	r1, r0
    1694:	bne	1660 <flatcc_json_parser_symbolic_uint64+0x94>
    1698:	mov	r4, r0
    169c:	mov	r0, r4
    16a0:	add	sp, sp, #44	; 0x2c
    16a4:	ldrd	r4, [sp]
    16a8:	ldrd	r6, [sp, #8]
    16ac:	ldrd	r8, [sp, #16]
    16b0:	ldrd	sl, [sp, #24]
    16b4:	add	sp, sp, #32
    16b8:	pop	{pc}		; (ldr pc, [sp], #4)
    16bc:	ldr	r3, [sp, #8]
    16c0:	mov	r4, r0
    16c4:	cmp	r3, #0
    16c8:	beq	16d8 <flatcc_json_parser_symbolic_uint64+0x10c>
    16cc:	ldr	r3, [r9, #12]
    16d0:	cmp	r3, #0
    16d4:	bne	17f0 <flatcc_json_parser_symbolic_uint64+0x224>
    16d8:	ldr	r3, [sp, #24]
    16dc:	cmp	r3, #0
    16e0:	bne	17cc <flatcc_json_parser_symbolic_uint64+0x200>
    16e4:	ldr	r3, [sp, #32]
    16e8:	str	r3, [sp, #12]
    16ec:	ldr	r3, [sp, #36]	; 0x24
    16f0:	str	r3, [sp, #16]
    16f4:	ldr	r2, [sp, #8]
    16f8:	ldr	r0, [sp, #12]
    16fc:	ldr	r3, [sp, #80]	; 0x50
    1700:	add	r2, r2, #1
    1704:	ldr	r1, [sp, #28]
    1708:	str	r2, [sp, #8]
    170c:	ldr	r2, [sp, #80]	; 0x50
    1710:	ldr	r3, [r3]
    1714:	ldr	r2, [r2, #4]
    1718:	adds	r3, r3, r0
    171c:	ldr	r0, [sp, #16]
    1720:	adc	r2, r2, r0
    1724:	ldr	r0, [sp, #80]	; 0x50
    1728:	cmp	r1, #0
    172c:	str	r3, [r0]
    1730:	str	r2, [r0, #4]
    1734:	bne	164c <flatcc_json_parser_symbolic_uint64+0x80>
    1738:	b	169c <flatcc_json_parser_symbolic_uint64+0xd0>
    173c:	mov	r2, r6
    1740:	mov	r0, r9
    1744:	mov	r3, #23
    1748:	bl	0 <flatcc_json_parser_set_error>
    174c:	mov	r4, r0
    1750:	b	169c <flatcc_json_parser_symbolic_uint64+0xd0>
    1754:	mov	r3, #5
    1758:	bl	0 <flatcc_json_parser_set_error>
    175c:	ldr	r3, [r9, #12]
    1760:	mov	r4, r0
    1764:	cmp	r3, #0
    1768:	beq	1788 <flatcc_json_parser_symbolic_uint64+0x1bc>
    176c:	cmp	r6, r4
    1770:	bne	1634 <flatcc_json_parser_symbolic_uint64+0x68>
    1774:	b	169c <flatcc_json_parser_symbolic_uint64+0xd0>
    1778:	ldr	r3, [r0, #12]
    177c:	cmp	r3, #0
    1780:	bne	169c <flatcc_json_parser_symbolic_uint64+0xd0>
    1784:	mov	r4, r6
    1788:	sub	r3, r6, r4
    178c:	cmp	r3, #1
    1790:	ble	17b4 <flatcc_json_parser_symbolic_uint64+0x1e8>
    1794:	ldrb	r3, [r4]
    1798:	cmp	r3, #32
    179c:	bhi	176c <flatcc_json_parser_symbolic_uint64+0x1a0>
    17a0:	bne	17b4 <flatcc_json_parser_symbolic_uint64+0x1e8>
    17a4:	ldrb	r3, [r4, #1]
    17a8:	cmp	r3, #32
    17ac:	addhi	r4, r4, #1
    17b0:	bhi	176c <flatcc_json_parser_symbolic_uint64+0x1a0>
    17b4:	mov	r1, r4
    17b8:	mov	r2, r6
    17bc:	mov	r0, r9
    17c0:	bl	0 <flatcc_json_parser_space_ext>
    17c4:	mov	r4, r0
    17c8:	b	176c <flatcc_json_parser_symbolic_uint64+0x1a0>
    17cc:	mov	r3, #8
    17d0:	mov	r2, r6
    17d4:	mov	r1, r4
    17d8:	mov	r0, r9
    17dc:	bl	0 <flatcc_json_parser_set_error>
    17e0:	cmp	r6, r0
    17e4:	bne	16f4 <flatcc_json_parser_symbolic_uint64+0x128>
    17e8:	mov	r4, r6
    17ec:	b	169c <flatcc_json_parser_symbolic_uint64+0xd0>
    17f0:	mov	r1, r4
    17f4:	mov	r2, r6
    17f8:	mov	r0, r9
    17fc:	mov	r3, #14
    1800:	bl	0 <flatcc_json_parser_set_error>
    1804:	mov	r4, r0
    1808:	b	169c <flatcc_json_parser_symbolic_uint64+0xd0>

0000180c <flatcc_json_parser_symbolic_uint8>:
    180c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1810:	mov	ip, #0
    1814:	cmp	r1, r2
    1818:	strd	r6, [sp, #8]
    181c:	mov	r4, r1
    1820:	mov	r6, r2
    1824:	strd	r8, [sp, #16]
    1828:	mov	r9, r0
    182c:	strd	sl, [sp, #24]
    1830:	str	lr, [sp, #32]
    1834:	sub	sp, sp, #44	; 0x2c
    1838:	str	r3, [sp, #16]
    183c:	ldr	r3, [sp, #80]	; 0x50
    1840:	strb	ip, [r3]
    1844:	beq	19a0 <flatcc_json_parser_symbolic_uint8+0x194>
    1848:	ldrb	r3, [r1]
    184c:	cmp	r3, #34	; 0x22
    1850:	addeq	r4, r1, #1
    1854:	streq	ip, [r0, #12]
    1858:	beq	19b0 <flatcc_json_parser_symbolic_uint8+0x1a4>
    185c:	cmp	r3, #46	; 0x2e
    1860:	movne	r3, #1
    1864:	strne	r3, [r0, #12]
    1868:	beq	197c <flatcc_json_parser_symbolic_uint8+0x170>
    186c:	mov	r3, #0
    1870:	add	fp, sp, #28
    1874:	add	sl, sp, #32
    1878:	str	r3, [sp, #12]
    187c:	str	r3, [sp, #20]
    1880:	ldr	r8, [sp, #16]
    1884:	mov	r7, r4
    1888:	mov	r1, r4
    188c:	ldr	r5, [r8]
    1890:	b	18ac <flatcc_json_parser_symbolic_uint8+0xa0>
    1894:	cmp	r7, r0
    1898:	mov	r7, r0
    189c:	bne	18f0 <flatcc_json_parser_symbolic_uint8+0xe4>
    18a0:	ldr	r5, [r8, #4]!
    18a4:	cmp	r5, #0
    18a8:	beq	1964 <flatcc_json_parser_symbolic_uint8+0x158>
    18ac:	add	r3, sp, #24
    18b0:	mov	r2, r6
    18b4:	strd	sl, [sp]
    18b8:	mov	r0, r9
    18bc:	blx	r5
    18c0:	cmp	r6, r0
    18c4:	mov	r1, r0
    18c8:	bne	1894 <flatcc_json_parser_symbolic_uint8+0x88>
    18cc:	mov	r4, r0
    18d0:	mov	r0, r4
    18d4:	add	sp, sp, #44	; 0x2c
    18d8:	ldrd	r4, [sp]
    18dc:	ldrd	r6, [sp, #8]
    18e0:	ldrd	r8, [sp, #16]
    18e4:	ldrd	sl, [sp, #24]
    18e8:	add	sp, sp, #32
    18ec:	pop	{pc}		; (ldr pc, [sp], #4)
    18f0:	ldr	r3, [sp, #12]
    18f4:	mov	r4, r0
    18f8:	cmp	r3, #0
    18fc:	beq	190c <flatcc_json_parser_symbolic_uint8+0x100>
    1900:	ldr	r3, [r9, #12]
    1904:	cmp	r3, #0
    1908:	bne	1a30 <flatcc_json_parser_symbolic_uint8+0x224>
    190c:	ldr	r3, [sp, #24]
    1910:	cmp	r3, #0
    1914:	bne	19f4 <flatcc_json_parser_symbolic_uint8+0x1e8>
    1918:	ldrd	r2, [sp, #32]
    191c:	cmp	r3, #0
    1920:	cmpeq	r2, #255	; 0xff
    1924:	uxtbls	r3, r2
    1928:	strls	r3, [sp, #20]
    192c:	bhi	1a18 <flatcc_json_parser_symbolic_uint8+0x20c>
    1930:	ldr	r2, [sp, #12]
    1934:	ldr	r1, [sp, #20]
    1938:	ldr	r3, [sp, #80]	; 0x50
    193c:	add	r2, r2, #1
    1940:	str	r2, [sp, #12]
    1944:	ldr	r2, [sp, #28]
    1948:	ldrb	r3, [r3]
    194c:	cmp	r2, #0
    1950:	ldr	r2, [sp, #80]	; 0x50
    1954:	add	r3, r1, r3
    1958:	strb	r3, [r2]
    195c:	bne	1880 <flatcc_json_parser_symbolic_uint8+0x74>
    1960:	b	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>
    1964:	mov	r2, r6
    1968:	mov	r0, r9
    196c:	mov	r3, #23
    1970:	bl	0 <flatcc_json_parser_set_error>
    1974:	mov	r4, r0
    1978:	b	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>
    197c:	mov	r3, #5
    1980:	bl	0 <flatcc_json_parser_set_error>
    1984:	ldr	r3, [r9, #12]
    1988:	mov	r4, r0
    198c:	cmp	r3, #0
    1990:	beq	19b0 <flatcc_json_parser_symbolic_uint8+0x1a4>
    1994:	cmp	r6, r4
    1998:	bne	186c <flatcc_json_parser_symbolic_uint8+0x60>
    199c:	b	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>
    19a0:	ldr	r3, [r0, #12]
    19a4:	cmp	r3, #0
    19a8:	bne	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>
    19ac:	mov	r4, r6
    19b0:	sub	r3, r6, r4
    19b4:	cmp	r3, #1
    19b8:	ble	19dc <flatcc_json_parser_symbolic_uint8+0x1d0>
    19bc:	ldrb	r3, [r4]
    19c0:	cmp	r3, #32
    19c4:	bhi	1994 <flatcc_json_parser_symbolic_uint8+0x188>
    19c8:	bne	19dc <flatcc_json_parser_symbolic_uint8+0x1d0>
    19cc:	ldrb	r3, [r4, #1]
    19d0:	cmp	r3, #32
    19d4:	addhi	r4, r4, #1
    19d8:	bhi	1994 <flatcc_json_parser_symbolic_uint8+0x188>
    19dc:	mov	r1, r4
    19e0:	mov	r2, r6
    19e4:	mov	r0, r9
    19e8:	bl	0 <flatcc_json_parser_space_ext>
    19ec:	mov	r4, r0
    19f0:	b	1994 <flatcc_json_parser_symbolic_uint8+0x188>
    19f4:	mov	r3, #8
    19f8:	mov	r2, r6
    19fc:	mov	r1, r4
    1a00:	mov	r0, r9
    1a04:	bl	0 <flatcc_json_parser_set_error>
    1a08:	cmp	r6, r0
    1a0c:	bne	1930 <flatcc_json_parser_symbolic_uint8+0x124>
    1a10:	mov	r4, r6
    1a14:	b	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>
    1a18:	mov	r3, #7
    1a1c:	mov	r2, r6
    1a20:	mov	r1, r4
    1a24:	mov	r0, r9
    1a28:	bl	0 <flatcc_json_parser_set_error>
    1a2c:	b	1a08 <flatcc_json_parser_symbolic_uint8+0x1fc>
    1a30:	mov	r1, r4
    1a34:	mov	r2, r6
    1a38:	mov	r0, r9
    1a3c:	mov	r3, #14
    1a40:	bl	0 <flatcc_json_parser_set_error>
    1a44:	mov	r4, r0
    1a48:	b	18d0 <flatcc_json_parser_symbolic_uint8+0xc4>

00001a4c <flatcc_json_parser_symbolic_int16>:
    1a4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1a50:	mov	ip, #0
    1a54:	cmp	r1, r2
    1a58:	strd	r6, [sp, #8]
    1a5c:	mov	r4, r1
    1a60:	mov	r6, r2
    1a64:	strd	r8, [sp, #16]
    1a68:	mov	r9, r0
    1a6c:	strd	sl, [sp, #24]
    1a70:	str	lr, [sp, #32]
    1a74:	sub	sp, sp, #44	; 0x2c
    1a78:	str	r3, [sp, #16]
    1a7c:	ldr	r3, [sp, #80]	; 0x50
    1a80:	strh	ip, [r3]
    1a84:	beq	1c28 <flatcc_json_parser_symbolic_int16+0x1dc>
    1a88:	ldrb	r3, [r1]
    1a8c:	cmp	r3, #34	; 0x22
    1a90:	addeq	r4, r1, #1
    1a94:	streq	ip, [r0, #12]
    1a98:	beq	1c38 <flatcc_json_parser_symbolic_int16+0x1ec>
    1a9c:	cmp	r3, #46	; 0x2e
    1aa0:	movne	r3, #1
    1aa4:	strne	r3, [r0, #12]
    1aa8:	beq	1c04 <flatcc_json_parser_symbolic_int16+0x1b8>
    1aac:	mov	r3, #0
    1ab0:	add	fp, sp, #28
    1ab4:	add	sl, sp, #32
    1ab8:	str	r3, [sp, #12]
    1abc:	str	r3, [sp, #20]
    1ac0:	ldr	r8, [sp, #16]
    1ac4:	mov	r7, r4
    1ac8:	mov	r1, r4
    1acc:	ldr	r5, [r8]
    1ad0:	b	1aec <flatcc_json_parser_symbolic_int16+0xa0>
    1ad4:	cmp	r7, r0
    1ad8:	mov	r7, r0
    1adc:	bne	1b30 <flatcc_json_parser_symbolic_int16+0xe4>
    1ae0:	ldr	r5, [r8, #4]!
    1ae4:	cmp	r5, #0
    1ae8:	beq	1ba8 <flatcc_json_parser_symbolic_int16+0x15c>
    1aec:	add	r3, sp, #24
    1af0:	mov	r2, r6
    1af4:	strd	sl, [sp]
    1af8:	mov	r0, r9
    1afc:	blx	r5
    1b00:	cmp	r6, r0
    1b04:	mov	r1, r0
    1b08:	bne	1ad4 <flatcc_json_parser_symbolic_int16+0x88>
    1b0c:	mov	r4, r0
    1b10:	mov	r0, r4
    1b14:	add	sp, sp, #44	; 0x2c
    1b18:	ldrd	r4, [sp]
    1b1c:	ldrd	r6, [sp, #8]
    1b20:	ldrd	r8, [sp, #16]
    1b24:	ldrd	sl, [sp, #24]
    1b28:	add	sp, sp, #32
    1b2c:	pop	{pc}		; (ldr pc, [sp], #4)
    1b30:	ldr	r3, [sp, #12]
    1b34:	mov	r4, r0
    1b38:	cmp	r3, #0
    1b3c:	beq	1b4c <flatcc_json_parser_symbolic_int16+0x100>
    1b40:	ldr	r3, [r9, #12]
    1b44:	cmp	r3, #0
    1b48:	bne	1c9c <flatcc_json_parser_symbolic_int16+0x250>
    1b4c:	ldr	r1, [sp, #24]
    1b50:	ldrd	r2, [sp, #32]
    1b54:	cmp	r1, #0
    1b58:	beq	1bc0 <flatcc_json_parser_symbolic_int16+0x174>
    1b5c:	cmp	r3, #0
    1b60:	cmpeq	r2, #32768	; 0x8000
    1b64:	bhi	1c7c <flatcc_json_parser_symbolic_int16+0x230>
    1b68:	rsb	r2, r2, #0
    1b6c:	uxth	r2, r2
    1b70:	sxth	r3, r2
    1b74:	str	r3, [sp, #20]
    1b78:	ldr	r3, [sp, #80]	; 0x50
    1b7c:	ldrh	r1, [r3]
    1b80:	ldr	r3, [sp, #12]
    1b84:	add	r2, r2, r1
    1b88:	add	r3, r3, #1
    1b8c:	str	r3, [sp, #12]
    1b90:	ldr	r3, [sp, #28]
    1b94:	cmp	r3, #0
    1b98:	ldr	r3, [sp, #80]	; 0x50
    1b9c:	strh	r2, [r3]
    1ba0:	bne	1ac0 <flatcc_json_parser_symbolic_int16+0x74>
    1ba4:	b	1b10 <flatcc_json_parser_symbolic_int16+0xc4>
    1ba8:	mov	r2, r6
    1bac:	mov	r0, r9
    1bb0:	mov	r3, #23
    1bb4:	bl	0 <flatcc_json_parser_set_error>
    1bb8:	mov	r4, r0
    1bbc:	b	1b10 <flatcc_json_parser_symbolic_int16+0xc4>
    1bc0:	mov	r1, #0
    1bc4:	movw	r0, #32767	; 0x7fff
    1bc8:	cmp	r3, r1
    1bcc:	cmpeq	r2, r0
    1bd0:	sxthls	r1, r2
    1bd4:	uxthls	r2, r2
    1bd8:	strls	r1, [sp, #20]
    1bdc:	bls	1b78 <flatcc_json_parser_symbolic_int16+0x12c>
    1be0:	mov	r3, #7
    1be4:	mov	r2, r6
    1be8:	mov	r1, r4
    1bec:	mov	r0, r9
    1bf0:	bl	0 <flatcc_json_parser_set_error>
    1bf4:	cmp	r6, r0
    1bf8:	beq	1c94 <flatcc_json_parser_symbolic_int16+0x248>
    1bfc:	ldrh	r2, [sp, #20]
    1c00:	b	1b78 <flatcc_json_parser_symbolic_int16+0x12c>
    1c04:	mov	r3, #5
    1c08:	bl	0 <flatcc_json_parser_set_error>
    1c0c:	ldr	r3, [r9, #12]
    1c10:	mov	r4, r0
    1c14:	cmp	r3, #0
    1c18:	beq	1c38 <flatcc_json_parser_symbolic_int16+0x1ec>
    1c1c:	cmp	r6, r4
    1c20:	bne	1aac <flatcc_json_parser_symbolic_int16+0x60>
    1c24:	b	1b10 <flatcc_json_parser_symbolic_int16+0xc4>
    1c28:	ldr	r3, [r0, #12]
    1c2c:	cmp	r3, #0
    1c30:	bne	1b10 <flatcc_json_parser_symbolic_int16+0xc4>
    1c34:	mov	r4, r6
    1c38:	sub	r3, r6, r4
    1c3c:	cmp	r3, #1
    1c40:	ble	1c64 <flatcc_json_parser_symbolic_int16+0x218>
    1c44:	ldrb	r3, [r4]
    1c48:	cmp	r3, #32
    1c4c:	bhi	1c1c <flatcc_json_parser_symbolic_int16+0x1d0>
    1c50:	bne	1c64 <flatcc_json_parser_symbolic_int16+0x218>
    1c54:	ldrb	r3, [r4, #1]
    1c58:	cmp	r3, #32
    1c5c:	addhi	r4, r4, #1
    1c60:	bhi	1c1c <flatcc_json_parser_symbolic_int16+0x1d0>
    1c64:	mov	r1, r4
    1c68:	mov	r2, r6
    1c6c:	mov	r0, r9
    1c70:	bl	0 <flatcc_json_parser_space_ext>
    1c74:	mov	r4, r0
    1c78:	b	1c1c <flatcc_json_parser_symbolic_int16+0x1d0>
    1c7c:	mov	r3, #8
    1c80:	mov	r2, r6
    1c84:	mov	r1, r4
    1c88:	mov	r0, r9
    1c8c:	bl	0 <flatcc_json_parser_set_error>
    1c90:	b	1bf4 <flatcc_json_parser_symbolic_int16+0x1a8>
    1c94:	mov	r4, r6
    1c98:	b	1b10 <flatcc_json_parser_symbolic_int16+0xc4>
    1c9c:	mov	r1, r4
    1ca0:	mov	r2, r6
    1ca4:	mov	r0, r9
    1ca8:	mov	r3, #14
    1cac:	bl	0 <flatcc_json_parser_set_error>
    1cb0:	mov	r4, r0
    1cb4:	b	1b10 <flatcc_json_parser_symbolic_int16+0xc4>

00001cb8 <flatcc_json_parser_symbolic_int32>:
    1cb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1cbc:	mov	ip, #0
    1cc0:	cmp	r1, r2
    1cc4:	strd	r6, [sp, #8]
    1cc8:	mov	r4, r1
    1ccc:	mov	r6, r2
    1cd0:	strd	r8, [sp, #16]
    1cd4:	mov	r9, r0
    1cd8:	strd	sl, [sp, #24]
    1cdc:	str	lr, [sp, #32]
    1ce0:	sub	sp, sp, #44	; 0x2c
    1ce4:	str	r3, [sp, #20]
    1ce8:	ldr	r3, [sp, #80]	; 0x50
    1cec:	str	ip, [r3]
    1cf0:	beq	1e88 <flatcc_json_parser_symbolic_int32+0x1d0>
    1cf4:	ldrb	r3, [r1]
    1cf8:	cmp	r3, #34	; 0x22
    1cfc:	addeq	r4, r1, #1
    1d00:	streq	ip, [r0, #12]
    1d04:	beq	1e98 <flatcc_json_parser_symbolic_int32+0x1e0>
    1d08:	cmp	r3, #46	; 0x2e
    1d0c:	movne	r3, #1
    1d10:	strne	r3, [r0, #12]
    1d14:	beq	1e64 <flatcc_json_parser_symbolic_int32+0x1ac>
    1d18:	mov	r3, #0
    1d1c:	add	fp, sp, #28
    1d20:	add	sl, sp, #32
    1d24:	str	r3, [sp, #12]
    1d28:	str	r3, [sp, #16]
    1d2c:	ldr	r8, [sp, #20]
    1d30:	mov	r7, r4
    1d34:	mov	r1, r4
    1d38:	ldr	r5, [r8]
    1d3c:	b	1d58 <flatcc_json_parser_symbolic_int32+0xa0>
    1d40:	cmp	r7, r0
    1d44:	mov	r7, r0
    1d48:	bne	1d9c <flatcc_json_parser_symbolic_int32+0xe4>
    1d4c:	ldr	r5, [r8, #4]!
    1d50:	cmp	r5, #0
    1d54:	beq	1e10 <flatcc_json_parser_symbolic_int32+0x158>
    1d58:	add	r3, sp, #24
    1d5c:	mov	r2, r6
    1d60:	strd	sl, [sp]
    1d64:	mov	r0, r9
    1d68:	blx	r5
    1d6c:	cmp	r6, r0
    1d70:	mov	r1, r0
    1d74:	bne	1d40 <flatcc_json_parser_symbolic_int32+0x88>
    1d78:	mov	r4, r0
    1d7c:	mov	r0, r4
    1d80:	add	sp, sp, #44	; 0x2c
    1d84:	ldrd	r4, [sp]
    1d88:	ldrd	r6, [sp, #8]
    1d8c:	ldrd	r8, [sp, #16]
    1d90:	ldrd	sl, [sp, #24]
    1d94:	add	sp, sp, #32
    1d98:	pop	{pc}		; (ldr pc, [sp], #4)
    1d9c:	ldr	r3, [sp, #12]
    1da0:	mov	r4, r0
    1da4:	cmp	r3, #0
    1da8:	beq	1db8 <flatcc_json_parser_symbolic_int32+0x100>
    1dac:	ldr	r3, [r9, #12]
    1db0:	cmp	r3, #0
    1db4:	bne	1ef4 <flatcc_json_parser_symbolic_int32+0x23c>
    1db8:	ldr	r1, [sp, #24]
    1dbc:	ldrd	r2, [sp, #32]
    1dc0:	cmp	r1, #0
    1dc4:	beq	1e28 <flatcc_json_parser_symbolic_int32+0x170>
    1dc8:	cmp	r3, #0
    1dcc:	cmpeq	r2, #-2147483648	; 0x80000000
    1dd0:	rsbls	r3, r2, #0
    1dd4:	strls	r3, [sp, #16]
    1dd8:	bhi	1edc <flatcc_json_parser_symbolic_int32+0x224>
    1ddc:	ldr	r2, [sp, #12]
    1de0:	ldr	r1, [sp, #16]
    1de4:	ldr	r3, [sp, #80]	; 0x50
    1de8:	add	r2, r2, #1
    1dec:	str	r2, [sp, #12]
    1df0:	ldr	r2, [sp, #28]
    1df4:	ldr	r3, [r3]
    1df8:	cmp	r2, #0
    1dfc:	ldr	r2, [sp, #80]	; 0x50
    1e00:	add	r3, r3, r1
    1e04:	str	r3, [r2]
    1e08:	bne	1d2c <flatcc_json_parser_symbolic_int32+0x74>
    1e0c:	b	1d7c <flatcc_json_parser_symbolic_int32+0xc4>
    1e10:	mov	r2, r6
    1e14:	mov	r0, r9
    1e18:	mov	r3, #23
    1e1c:	bl	0 <flatcc_json_parser_set_error>
    1e20:	mov	r4, r0
    1e24:	b	1d7c <flatcc_json_parser_symbolic_int32+0xc4>
    1e28:	mov	r1, #0
    1e2c:	mvn	r0, #-2147483648	; 0x80000000
    1e30:	cmp	r3, r1
    1e34:	cmpeq	r2, r0
    1e38:	strls	r2, [sp, #16]
    1e3c:	bls	1ddc <flatcc_json_parser_symbolic_int32+0x124>
    1e40:	mov	r3, #7
    1e44:	mov	r2, r6
    1e48:	mov	r1, r4
    1e4c:	mov	r0, r9
    1e50:	bl	0 <flatcc_json_parser_set_error>
    1e54:	cmp	r6, r0
    1e58:	bne	1ddc <flatcc_json_parser_symbolic_int32+0x124>
    1e5c:	mov	r4, r6
    1e60:	b	1d7c <flatcc_json_parser_symbolic_int32+0xc4>
    1e64:	mov	r3, #5
    1e68:	bl	0 <flatcc_json_parser_set_error>
    1e6c:	ldr	r3, [r9, #12]
    1e70:	mov	r4, r0
    1e74:	cmp	r3, #0
    1e78:	beq	1e98 <flatcc_json_parser_symbolic_int32+0x1e0>
    1e7c:	cmp	r6, r4
    1e80:	bne	1d18 <flatcc_json_parser_symbolic_int32+0x60>
    1e84:	b	1d7c <flatcc_json_parser_symbolic_int32+0xc4>
    1e88:	ldr	r3, [r0, #12]
    1e8c:	cmp	r3, #0
    1e90:	bne	1d7c <flatcc_json_parser_symbolic_int32+0xc4>
    1e94:	mov	r4, r6
    1e98:	sub	r3, r6, r4
    1e9c:	cmp	r3, #1
    1ea0:	ble	1ec4 <flatcc_json_parser_symbolic_int32+0x20c>
    1ea4:	ldrb	r3, [r4]
    1ea8:	cmp	r3, #32
    1eac:	bhi	1e7c <flatcc_json_parser_symbolic_int32+0x1c4>
    1eb0:	bne	1ec4 <flatcc_json_parser_symbolic_int32+0x20c>
    1eb4:	ldrb	r3, [r4, #1]
    1eb8:	cmp	r3, #32
    1ebc:	addhi	r4, r4, #1
    1ec0:	bhi	1e7c <flatcc_json_parser_symbolic_int32+0x1c4>
    1ec4:	mov	r1, r4
    1ec8:	mov	r2, r6
    1ecc:	mov	r0, r9
    1ed0:	bl	0 <flatcc_json_parser_space_ext>
    1ed4:	mov	r4, r0
    1ed8:	b	1e7c <flatcc_json_parser_symbolic_int32+0x1c4>
    1edc:	mov	r3, #8
    1ee0:	mov	r2, r6
    1ee4:	mov	r1, r4
    1ee8:	mov	r0, r9
    1eec:	bl	0 <flatcc_json_parser_set_error>
    1ef0:	b	1e54 <flatcc_json_parser_symbolic_int32+0x19c>
    1ef4:	mov	r1, r4
    1ef8:	mov	r2, r6
    1efc:	mov	r0, r9
    1f00:	mov	r3, #14
    1f04:	bl	0 <flatcc_json_parser_set_error>
    1f08:	mov	r4, r0
    1f0c:	b	1d7c <flatcc_json_parser_symbolic_int32+0xc4>

00001f10 <flatcc_json_parser_symbolic_int8>:
    1f10:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1f14:	mov	ip, #0
    1f18:	cmp	r1, r2
    1f1c:	strd	r6, [sp, #8]
    1f20:	mov	r4, r1
    1f24:	mov	r6, r2
    1f28:	strd	r8, [sp, #16]
    1f2c:	mov	r9, r0
    1f30:	strd	sl, [sp, #24]
    1f34:	str	lr, [sp, #32]
    1f38:	sub	sp, sp, #44	; 0x2c
    1f3c:	str	r3, [sp, #16]
    1f40:	ldr	r3, [sp, #80]	; 0x50
    1f44:	strb	ip, [r3]
    1f48:	beq	20e4 <flatcc_json_parser_symbolic_int8+0x1d4>
    1f4c:	ldrb	r3, [r1]
    1f50:	cmp	r3, #34	; 0x22
    1f54:	addeq	r4, r1, #1
    1f58:	streq	ip, [r0, #12]
    1f5c:	beq	20f4 <flatcc_json_parser_symbolic_int8+0x1e4>
    1f60:	cmp	r3, #46	; 0x2e
    1f64:	movne	r3, #1
    1f68:	strne	r3, [r0, #12]
    1f6c:	beq	20c0 <flatcc_json_parser_symbolic_int8+0x1b0>
    1f70:	mov	r3, #0
    1f74:	add	fp, sp, #28
    1f78:	add	sl, sp, #32
    1f7c:	str	r3, [sp, #12]
    1f80:	str	r3, [sp, #20]
    1f84:	ldr	r8, [sp, #16]
    1f88:	mov	r7, r4
    1f8c:	mov	r1, r4
    1f90:	ldr	r5, [r8]
    1f94:	b	1fb0 <flatcc_json_parser_symbolic_int8+0xa0>
    1f98:	cmp	r7, r0
    1f9c:	mov	r7, r0
    1fa0:	bne	1ff4 <flatcc_json_parser_symbolic_int8+0xe4>
    1fa4:	ldr	r5, [r8, #4]!
    1fa8:	cmp	r5, #0
    1fac:	beq	206c <flatcc_json_parser_symbolic_int8+0x15c>
    1fb0:	add	r3, sp, #24
    1fb4:	mov	r2, r6
    1fb8:	strd	sl, [sp]
    1fbc:	mov	r0, r9
    1fc0:	blx	r5
    1fc4:	cmp	r6, r0
    1fc8:	mov	r1, r0
    1fcc:	bne	1f98 <flatcc_json_parser_symbolic_int8+0x88>
    1fd0:	mov	r4, r0
    1fd4:	mov	r0, r4
    1fd8:	add	sp, sp, #44	; 0x2c
    1fdc:	ldrd	r4, [sp]
    1fe0:	ldrd	r6, [sp, #8]
    1fe4:	ldrd	r8, [sp, #16]
    1fe8:	ldrd	sl, [sp, #24]
    1fec:	add	sp, sp, #32
    1ff0:	pop	{pc}		; (ldr pc, [sp], #4)
    1ff4:	ldr	r3, [sp, #12]
    1ff8:	mov	r4, r0
    1ffc:	cmp	r3, #0
    2000:	beq	2010 <flatcc_json_parser_symbolic_int8+0x100>
    2004:	ldr	r3, [r9, #12]
    2008:	cmp	r3, #0
    200c:	bne	2158 <flatcc_json_parser_symbolic_int8+0x248>
    2010:	ldr	r1, [sp, #24]
    2014:	ldrd	r2, [sp, #32]
    2018:	cmp	r1, #0
    201c:	beq	2084 <flatcc_json_parser_symbolic_int8+0x174>
    2020:	cmp	r3, #0
    2024:	cmpeq	r2, #128	; 0x80
    2028:	bhi	2138 <flatcc_json_parser_symbolic_int8+0x228>
    202c:	rsb	r2, r2, #0
    2030:	uxtb	r2, r2
    2034:	sxtb	r3, r2
    2038:	str	r3, [sp, #20]
    203c:	ldr	r3, [sp, #80]	; 0x50
    2040:	ldrb	r1, [r3]
    2044:	ldr	r3, [sp, #12]
    2048:	add	r2, r2, r1
    204c:	add	r3, r3, #1
    2050:	str	r3, [sp, #12]
    2054:	ldr	r3, [sp, #28]
    2058:	cmp	r3, #0
    205c:	ldr	r3, [sp, #80]	; 0x50
    2060:	strb	r2, [r3]
    2064:	bne	1f84 <flatcc_json_parser_symbolic_int8+0x74>
    2068:	b	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>
    206c:	mov	r2, r6
    2070:	mov	r0, r9
    2074:	mov	r3, #23
    2078:	bl	0 <flatcc_json_parser_set_error>
    207c:	mov	r4, r0
    2080:	b	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>
    2084:	cmp	r3, #0
    2088:	cmpeq	r2, #127	; 0x7f
    208c:	sxtbls	r1, r2
    2090:	uxtbls	r2, r2
    2094:	strls	r1, [sp, #20]
    2098:	bls	203c <flatcc_json_parser_symbolic_int8+0x12c>
    209c:	mov	r3, #7
    20a0:	mov	r2, r6
    20a4:	mov	r1, r4
    20a8:	mov	r0, r9
    20ac:	bl	0 <flatcc_json_parser_set_error>
    20b0:	cmp	r6, r0
    20b4:	beq	2150 <flatcc_json_parser_symbolic_int8+0x240>
    20b8:	ldrb	r2, [sp, #20]
    20bc:	b	203c <flatcc_json_parser_symbolic_int8+0x12c>
    20c0:	mov	r3, #5
    20c4:	bl	0 <flatcc_json_parser_set_error>
    20c8:	ldr	r3, [r9, #12]
    20cc:	mov	r4, r0
    20d0:	cmp	r3, #0
    20d4:	beq	20f4 <flatcc_json_parser_symbolic_int8+0x1e4>
    20d8:	cmp	r6, r4
    20dc:	bne	1f70 <flatcc_json_parser_symbolic_int8+0x60>
    20e0:	b	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>
    20e4:	ldr	r3, [r0, #12]
    20e8:	cmp	r3, #0
    20ec:	bne	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>
    20f0:	mov	r4, r6
    20f4:	sub	r3, r6, r4
    20f8:	cmp	r3, #1
    20fc:	ble	2120 <flatcc_json_parser_symbolic_int8+0x210>
    2100:	ldrb	r3, [r4]
    2104:	cmp	r3, #32
    2108:	bhi	20d8 <flatcc_json_parser_symbolic_int8+0x1c8>
    210c:	bne	2120 <flatcc_json_parser_symbolic_int8+0x210>
    2110:	ldrb	r3, [r4, #1]
    2114:	cmp	r3, #32
    2118:	addhi	r4, r4, #1
    211c:	bhi	20d8 <flatcc_json_parser_symbolic_int8+0x1c8>
    2120:	mov	r1, r4
    2124:	mov	r2, r6
    2128:	mov	r0, r9
    212c:	bl	0 <flatcc_json_parser_space_ext>
    2130:	mov	r4, r0
    2134:	b	20d8 <flatcc_json_parser_symbolic_int8+0x1c8>
    2138:	mov	r3, #8
    213c:	mov	r2, r6
    2140:	mov	r1, r4
    2144:	mov	r0, r9
    2148:	bl	0 <flatcc_json_parser_set_error>
    214c:	b	20b0 <flatcc_json_parser_symbolic_int8+0x1a0>
    2150:	mov	r4, r6
    2154:	b	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>
    2158:	mov	r1, r4
    215c:	mov	r2, r6
    2160:	mov	r0, r9
    2164:	mov	r3, #14
    2168:	bl	0 <flatcc_json_parser_set_error>
    216c:	mov	r4, r0
    2170:	b	1fd4 <flatcc_json_parser_symbolic_int8+0xc4>

00002174 <flatcc_json_parser_symbolic_uint16>:
    2174:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2178:	mov	ip, #0
    217c:	cmp	r1, r2
    2180:	strd	r6, [sp, #8]
    2184:	mov	r4, r1
    2188:	mov	r6, r2
    218c:	strd	r8, [sp, #16]
    2190:	mov	r9, r0
    2194:	strd	sl, [sp, #24]
    2198:	str	lr, [sp, #32]
    219c:	sub	sp, sp, #44	; 0x2c
    21a0:	str	r3, [sp, #16]
    21a4:	ldr	r3, [sp, #80]	; 0x50
    21a8:	strh	ip, [r3]
    21ac:	beq	2310 <flatcc_json_parser_symbolic_uint16+0x19c>
    21b0:	ldrb	r3, [r1]
    21b4:	cmp	r3, #34	; 0x22
    21b8:	addeq	r4, r1, #1
    21bc:	streq	ip, [r0, #12]
    21c0:	beq	2320 <flatcc_json_parser_symbolic_uint16+0x1ac>
    21c4:	cmp	r3, #46	; 0x2e
    21c8:	movne	r3, #1
    21cc:	strne	r3, [r0, #12]
    21d0:	beq	22ec <flatcc_json_parser_symbolic_uint16+0x178>
    21d4:	mov	r3, #0
    21d8:	add	fp, sp, #28
    21dc:	add	sl, sp, #32
    21e0:	str	r3, [sp, #12]
    21e4:	str	r3, [sp, #20]
    21e8:	ldr	r8, [sp, #16]
    21ec:	mov	r7, r4
    21f0:	mov	r1, r4
    21f4:	ldr	r5, [r8]
    21f8:	b	2214 <flatcc_json_parser_symbolic_uint16+0xa0>
    21fc:	cmp	r7, r0
    2200:	mov	r7, r0
    2204:	bne	2258 <flatcc_json_parser_symbolic_uint16+0xe4>
    2208:	ldr	r5, [r8, #4]!
    220c:	cmp	r5, #0
    2210:	beq	22d4 <flatcc_json_parser_symbolic_uint16+0x160>
    2214:	add	r3, sp, #24
    2218:	mov	r2, r6
    221c:	strd	sl, [sp]
    2220:	mov	r0, r9
    2224:	blx	r5
    2228:	cmp	r6, r0
    222c:	mov	r1, r0
    2230:	bne	21fc <flatcc_json_parser_symbolic_uint16+0x88>
    2234:	mov	r4, r0
    2238:	mov	r0, r4
    223c:	add	sp, sp, #44	; 0x2c
    2240:	ldrd	r4, [sp]
    2244:	ldrd	r6, [sp, #8]
    2248:	ldrd	r8, [sp, #16]
    224c:	ldrd	sl, [sp, #24]
    2250:	add	sp, sp, #32
    2254:	pop	{pc}		; (ldr pc, [sp], #4)
    2258:	ldr	r3, [sp, #12]
    225c:	mov	r4, r0
    2260:	cmp	r3, #0
    2264:	beq	2274 <flatcc_json_parser_symbolic_uint16+0x100>
    2268:	ldr	r3, [r9, #12]
    226c:	cmp	r3, #0
    2270:	bne	23a0 <flatcc_json_parser_symbolic_uint16+0x22c>
    2274:	ldr	r3, [sp, #24]
    2278:	cmp	r3, #0
    227c:	bne	2364 <flatcc_json_parser_symbolic_uint16+0x1f0>
    2280:	ldrd	r2, [sp, #32]
    2284:	mov	r1, #0
    2288:	movw	r0, #65535	; 0xffff
    228c:	cmp	r3, r1
    2290:	cmpeq	r2, r0
    2294:	uxthls	r3, r2
    2298:	strls	r3, [sp, #20]
    229c:	bhi	2388 <flatcc_json_parser_symbolic_uint16+0x214>
    22a0:	ldr	r2, [sp, #12]
    22a4:	ldr	r1, [sp, #20]
    22a8:	ldr	r3, [sp, #80]	; 0x50
    22ac:	add	r2, r2, #1
    22b0:	str	r2, [sp, #12]
    22b4:	ldr	r2, [sp, #28]
    22b8:	ldrh	r3, [r3]
    22bc:	cmp	r2, #0
    22c0:	ldr	r2, [sp, #80]	; 0x50
    22c4:	add	r3, r1, r3
    22c8:	strh	r3, [r2]
    22cc:	bne	21e8 <flatcc_json_parser_symbolic_uint16+0x74>
    22d0:	b	2238 <flatcc_json_parser_symbolic_uint16+0xc4>
    22d4:	mov	r2, r6
    22d8:	mov	r0, r9
    22dc:	mov	r3, #23
    22e0:	bl	0 <flatcc_json_parser_set_error>
    22e4:	mov	r4, r0
    22e8:	b	2238 <flatcc_json_parser_symbolic_uint16+0xc4>
    22ec:	mov	r3, #5
    22f0:	bl	0 <flatcc_json_parser_set_error>
    22f4:	ldr	r3, [r9, #12]
    22f8:	mov	r4, r0
    22fc:	cmp	r3, #0
    2300:	beq	2320 <flatcc_json_parser_symbolic_uint16+0x1ac>
    2304:	cmp	r6, r4
    2308:	bne	21d4 <flatcc_json_parser_symbolic_uint16+0x60>
    230c:	b	2238 <flatcc_json_parser_symbolic_uint16+0xc4>
    2310:	ldr	r3, [r0, #12]
    2314:	cmp	r3, #0
    2318:	bne	2238 <flatcc_json_parser_symbolic_uint16+0xc4>
    231c:	mov	r4, r6
    2320:	sub	r3, r6, r4
    2324:	cmp	r3, #1
    2328:	ble	234c <flatcc_json_parser_symbolic_uint16+0x1d8>
    232c:	ldrb	r3, [r4]
    2330:	cmp	r3, #32
    2334:	bhi	2304 <flatcc_json_parser_symbolic_uint16+0x190>
    2338:	bne	234c <flatcc_json_parser_symbolic_uint16+0x1d8>
    233c:	ldrb	r3, [r4, #1]
    2340:	cmp	r3, #32
    2344:	addhi	r4, r4, #1
    2348:	bhi	2304 <flatcc_json_parser_symbolic_uint16+0x190>
    234c:	mov	r1, r4
    2350:	mov	r2, r6
    2354:	mov	r0, r9
    2358:	bl	0 <flatcc_json_parser_space_ext>
    235c:	mov	r4, r0
    2360:	b	2304 <flatcc_json_parser_symbolic_uint16+0x190>
    2364:	mov	r3, #8
    2368:	mov	r2, r6
    236c:	mov	r1, r4
    2370:	mov	r0, r9
    2374:	bl	0 <flatcc_json_parser_set_error>
    2378:	cmp	r6, r0
    237c:	bne	22a0 <flatcc_json_parser_symbolic_uint16+0x12c>
    2380:	mov	r4, r6
    2384:	b	2238 <flatcc_json_parser_symbolic_uint16+0xc4>
    2388:	mov	r3, #7
    238c:	mov	r2, r6
    2390:	mov	r1, r4
    2394:	mov	r0, r9
    2398:	bl	0 <flatcc_json_parser_set_error>
    239c:	b	2378 <flatcc_json_parser_symbolic_uint16+0x204>
    23a0:	mov	r1, r4
    23a4:	mov	r2, r6
    23a8:	mov	r0, r9
    23ac:	mov	r3, #14
    23b0:	bl	0 <flatcc_json_parser_set_error>
    23b4:	mov	r4, r0
    23b8:	b	2238 <flatcc_json_parser_symbolic_uint16+0xc4>

000023bc <flatcc_json_parser_symbolic_uint32>:
    23bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    23c0:	mov	ip, #0
    23c4:	cmp	r1, r2
    23c8:	strd	r6, [sp, #8]
    23cc:	mov	r4, r1
    23d0:	mov	r6, r2
    23d4:	strd	r8, [sp, #16]
    23d8:	mov	r9, r0
    23dc:	strd	sl, [sp, #24]
    23e0:	str	lr, [sp, #32]
    23e4:	sub	sp, sp, #44	; 0x2c
    23e8:	str	r3, [sp, #16]
    23ec:	ldr	r3, [sp, #80]	; 0x50
    23f0:	str	ip, [r3]
    23f4:	beq	2554 <flatcc_json_parser_symbolic_uint32+0x198>
    23f8:	ldrb	r3, [r1]
    23fc:	cmp	r3, #34	; 0x22
    2400:	addeq	r4, r1, #1
    2404:	streq	ip, [r0, #12]
    2408:	beq	2564 <flatcc_json_parser_symbolic_uint32+0x1a8>
    240c:	cmp	r3, #46	; 0x2e
    2410:	movne	r3, #1
    2414:	strne	r3, [r0, #12]
    2418:	beq	2530 <flatcc_json_parser_symbolic_uint32+0x174>
    241c:	mov	r3, #0
    2420:	add	fp, sp, #28
    2424:	add	sl, sp, #32
    2428:	str	r3, [sp, #12]
    242c:	str	r3, [sp, #20]
    2430:	ldr	r8, [sp, #16]
    2434:	mov	r7, r4
    2438:	mov	r1, r4
    243c:	ldr	r5, [r8]
    2440:	b	245c <flatcc_json_parser_symbolic_uint32+0xa0>
    2444:	cmp	r7, r0
    2448:	mov	r7, r0
    244c:	bne	24a0 <flatcc_json_parser_symbolic_uint32+0xe4>
    2450:	ldr	r5, [r8, #4]!
    2454:	cmp	r5, #0
    2458:	beq	2518 <flatcc_json_parser_symbolic_uint32+0x15c>
    245c:	add	r3, sp, #24
    2460:	mov	r2, r6
    2464:	strd	sl, [sp]
    2468:	mov	r0, r9
    246c:	blx	r5
    2470:	cmp	r6, r0
    2474:	mov	r1, r0
    2478:	bne	2444 <flatcc_json_parser_symbolic_uint32+0x88>
    247c:	mov	r4, r0
    2480:	mov	r0, r4
    2484:	add	sp, sp, #44	; 0x2c
    2488:	ldrd	r4, [sp]
    248c:	ldrd	r6, [sp, #8]
    2490:	ldrd	r8, [sp, #16]
    2494:	ldrd	sl, [sp, #24]
    2498:	add	sp, sp, #32
    249c:	pop	{pc}		; (ldr pc, [sp], #4)
    24a0:	ldr	r3, [sp, #12]
    24a4:	mov	r4, r0
    24a8:	cmp	r3, #0
    24ac:	beq	24bc <flatcc_json_parser_symbolic_uint32+0x100>
    24b0:	ldr	r3, [r9, #12]
    24b4:	cmp	r3, #0
    24b8:	bne	25e4 <flatcc_json_parser_symbolic_uint32+0x228>
    24bc:	ldr	r3, [sp, #24]
    24c0:	cmp	r3, #0
    24c4:	bne	25a8 <flatcc_json_parser_symbolic_uint32+0x1ec>
    24c8:	ldrd	r2, [sp, #32]
    24cc:	mov	r1, #0
    24d0:	mvn	r0, #0
    24d4:	cmp	r3, r1
    24d8:	cmpeq	r2, r0
    24dc:	strls	r2, [sp, #20]
    24e0:	bhi	25cc <flatcc_json_parser_symbolic_uint32+0x210>
    24e4:	ldr	r2, [sp, #12]
    24e8:	ldr	r1, [sp, #20]
    24ec:	ldr	r3, [sp, #80]	; 0x50
    24f0:	add	r2, r2, #1
    24f4:	str	r2, [sp, #12]
    24f8:	ldr	r2, [sp, #28]
    24fc:	ldr	r3, [r3]
    2500:	cmp	r2, #0
    2504:	ldr	r2, [sp, #80]	; 0x50
    2508:	add	r3, r3, r1
    250c:	str	r3, [r2]
    2510:	bne	2430 <flatcc_json_parser_symbolic_uint32+0x74>
    2514:	b	2480 <flatcc_json_parser_symbolic_uint32+0xc4>
    2518:	mov	r2, r6
    251c:	mov	r0, r9
    2520:	mov	r3, #23
    2524:	bl	0 <flatcc_json_parser_set_error>
    2528:	mov	r4, r0
    252c:	b	2480 <flatcc_json_parser_symbolic_uint32+0xc4>
    2530:	mov	r3, #5
    2534:	bl	0 <flatcc_json_parser_set_error>
    2538:	ldr	r3, [r9, #12]
    253c:	mov	r4, r0
    2540:	cmp	r3, #0
    2544:	beq	2564 <flatcc_json_parser_symbolic_uint32+0x1a8>
    2548:	cmp	r6, r4
    254c:	bne	241c <flatcc_json_parser_symbolic_uint32+0x60>
    2550:	b	2480 <flatcc_json_parser_symbolic_uint32+0xc4>
    2554:	ldr	r3, [r0, #12]
    2558:	cmp	r3, #0
    255c:	bne	2480 <flatcc_json_parser_symbolic_uint32+0xc4>
    2560:	mov	r4, r6
    2564:	sub	r3, r6, r4
    2568:	cmp	r3, #1
    256c:	ble	2590 <flatcc_json_parser_symbolic_uint32+0x1d4>
    2570:	ldrb	r3, [r4]
    2574:	cmp	r3, #32
    2578:	bhi	2548 <flatcc_json_parser_symbolic_uint32+0x18c>
    257c:	bne	2590 <flatcc_json_parser_symbolic_uint32+0x1d4>
    2580:	ldrb	r3, [r4, #1]
    2584:	cmp	r3, #32
    2588:	addhi	r4, r4, #1
    258c:	bhi	2548 <flatcc_json_parser_symbolic_uint32+0x18c>
    2590:	mov	r1, r4
    2594:	mov	r2, r6
    2598:	mov	r0, r9
    259c:	bl	0 <flatcc_json_parser_space_ext>
    25a0:	mov	r4, r0
    25a4:	b	2548 <flatcc_json_parser_symbolic_uint32+0x18c>
    25a8:	mov	r3, #8
    25ac:	mov	r2, r6
    25b0:	mov	r1, r4
    25b4:	mov	r0, r9
    25b8:	bl	0 <flatcc_json_parser_set_error>
    25bc:	cmp	r6, r0
    25c0:	bne	24e4 <flatcc_json_parser_symbolic_uint32+0x128>
    25c4:	mov	r4, r6
    25c8:	b	2480 <flatcc_json_parser_symbolic_uint32+0xc4>
    25cc:	mov	r3, #7
    25d0:	mov	r2, r6
    25d4:	mov	r1, r4
    25d8:	mov	r0, r9
    25dc:	bl	0 <flatcc_json_parser_set_error>
    25e0:	b	25bc <flatcc_json_parser_symbolic_uint32+0x200>
    25e4:	mov	r1, r4
    25e8:	mov	r2, r6
    25ec:	mov	r0, r9
    25f0:	mov	r3, #14
    25f4:	bl	0 <flatcc_json_parser_set_error>
    25f8:	mov	r4, r0
    25fc:	b	2480 <flatcc_json_parser_symbolic_uint32+0xc4>

00002600 <flatcc_json_parser_symbolic_int64>:
    2600:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2604:	cmp	r1, r2
    2608:	mov	r4, r1
    260c:	strd	r6, [sp, #8]
    2610:	mov	r6, r2
    2614:	strd	r8, [sp, #16]
    2618:	mov	r9, r0
    261c:	strd	sl, [sp, #24]
    2620:	mov	sl, #0
    2624:	mov	fp, #0
    2628:	str	lr, [sp, #32]
    262c:	sub	sp, sp, #44	; 0x2c
    2630:	str	r3, [sp, #20]
    2634:	ldr	r3, [sp, #80]	; 0x50
    2638:	strd	sl, [r3]
    263c:	beq	27e8 <flatcc_json_parser_symbolic_int64+0x1e8>
    2640:	ldrb	r3, [r1]
    2644:	cmp	r3, #34	; 0x22
    2648:	moveq	r3, #0
    264c:	addeq	r4, r1, #1
    2650:	streq	r3, [r0, #12]
    2654:	beq	27f8 <flatcc_json_parser_symbolic_int64+0x1f8>
    2658:	cmp	r3, #46	; 0x2e
    265c:	movne	r3, #1
    2660:	strne	r3, [r0, #12]
    2664:	beq	27c4 <flatcc_json_parser_symbolic_int64+0x1c4>
    2668:	mov	r3, #0
    266c:	add	fp, sp, #28
    2670:	add	sl, sp, #32
    2674:	str	r3, [sp, #8]
    2678:	str	r3, [sp, #12]
    267c:	str	r3, [sp, #16]
    2680:	ldr	r8, [sp, #20]
    2684:	mov	r7, r4
    2688:	mov	r1, r4
    268c:	ldr	r5, [r8]
    2690:	b	26ac <flatcc_json_parser_symbolic_int64+0xac>
    2694:	cmp	r7, r0
    2698:	mov	r7, r0
    269c:	bne	26f0 <flatcc_json_parser_symbolic_int64+0xf0>
    26a0:	ldr	r5, [r8, #4]!
    26a4:	cmp	r5, #0
    26a8:	beq	277c <flatcc_json_parser_symbolic_int64+0x17c>
    26ac:	add	r3, sp, #24
    26b0:	mov	r2, r6
    26b4:	strd	sl, [sp]
    26b8:	mov	r0, r9
    26bc:	blx	r5
    26c0:	cmp	r6, r0
    26c4:	mov	r1, r0
    26c8:	bne	2694 <flatcc_json_parser_symbolic_int64+0x94>
    26cc:	mov	r4, r0
    26d0:	mov	r0, r4
    26d4:	add	sp, sp, #44	; 0x2c
    26d8:	ldrd	r4, [sp]
    26dc:	ldrd	r6, [sp, #8]
    26e0:	ldrd	r8, [sp, #16]
    26e4:	ldrd	sl, [sp, #24]
    26e8:	add	sp, sp, #32
    26ec:	pop	{pc}		; (ldr pc, [sp], #4)
    26f0:	ldr	r3, [sp, #8]
    26f4:	mov	r4, r0
    26f8:	cmp	r3, #0
    26fc:	beq	270c <flatcc_json_parser_symbolic_int64+0x10c>
    2700:	ldr	r3, [r9, #12]
    2704:	cmp	r3, #0
    2708:	bne	2854 <flatcc_json_parser_symbolic_int64+0x254>
    270c:	ldr	r1, [sp, #24]
    2710:	ldrd	r2, [sp, #32]
    2714:	cmp	r1, #0
    2718:	beq	2794 <flatcc_json_parser_symbolic_int64+0x194>
    271c:	cmp	r3, #-2147483648	; 0x80000000
    2720:	cmpeq	r2, #0
    2724:	bhi	283c <flatcc_json_parser_symbolic_int64+0x23c>
    2728:	rsbs	r2, r2, #0
    272c:	rsc	r3, r3, #0
    2730:	strd	r2, [sp, #12]
    2734:	ldr	r2, [sp, #8]
    2738:	ldr	r0, [sp, #12]
    273c:	ldr	r3, [sp, #80]	; 0x50
    2740:	add	r2, r2, #1
    2744:	ldr	r1, [sp, #28]
    2748:	str	r2, [sp, #8]
    274c:	ldr	r2, [sp, #80]	; 0x50
    2750:	ldr	r3, [r3]
    2754:	ldr	r2, [r2, #4]
    2758:	adds	r3, r3, r0
    275c:	ldr	r0, [sp, #16]
    2760:	adc	r2, r2, r0
    2764:	ldr	r0, [sp, #80]	; 0x50
    2768:	cmp	r1, #0
    276c:	str	r3, [r0]
    2770:	str	r2, [r0, #4]
    2774:	bne	2680 <flatcc_json_parser_symbolic_int64+0x80>
    2778:	b	26d0 <flatcc_json_parser_symbolic_int64+0xd0>
    277c:	mov	r2, r6
    2780:	mov	r0, r9
    2784:	mov	r3, #23
    2788:	bl	0 <flatcc_json_parser_set_error>
    278c:	mov	r4, r0
    2790:	b	26d0 <flatcc_json_parser_symbolic_int64+0xd0>
    2794:	cmp	r2, #0
    2798:	sbcs	r1, r3, #0
    279c:	bge	2730 <flatcc_json_parser_symbolic_int64+0x130>
    27a0:	mov	r3, #7
    27a4:	mov	r2, r6
    27a8:	mov	r1, r4
    27ac:	mov	r0, r9
    27b0:	bl	0 <flatcc_json_parser_set_error>
    27b4:	cmp	r6, r0
    27b8:	bne	2734 <flatcc_json_parser_symbolic_int64+0x134>
    27bc:	mov	r4, r6
    27c0:	b	26d0 <flatcc_json_parser_symbolic_int64+0xd0>
    27c4:	mov	r3, #5
    27c8:	bl	0 <flatcc_json_parser_set_error>
    27cc:	ldr	r3, [r9, #12]
    27d0:	mov	r4, r0
    27d4:	cmp	r3, #0
    27d8:	beq	27f8 <flatcc_json_parser_symbolic_int64+0x1f8>
    27dc:	cmp	r6, r4
    27e0:	bne	2668 <flatcc_json_parser_symbolic_int64+0x68>
    27e4:	b	26d0 <flatcc_json_parser_symbolic_int64+0xd0>
    27e8:	ldr	r3, [r0, #12]
    27ec:	cmp	r3, #0
    27f0:	bne	26d0 <flatcc_json_parser_symbolic_int64+0xd0>
    27f4:	mov	r4, r6
    27f8:	sub	r3, r6, r4
    27fc:	cmp	r3, #1
    2800:	ble	2824 <flatcc_json_parser_symbolic_int64+0x224>
    2804:	ldrb	r3, [r4]
    2808:	cmp	r3, #32
    280c:	bhi	27dc <flatcc_json_parser_symbolic_int64+0x1dc>
    2810:	bne	2824 <flatcc_json_parser_symbolic_int64+0x224>
    2814:	ldrb	r3, [r4, #1]
    2818:	cmp	r3, #32
    281c:	addhi	r4, r4, #1
    2820:	bhi	27dc <flatcc_json_parser_symbolic_int64+0x1dc>
    2824:	mov	r1, r4
    2828:	mov	r2, r6
    282c:	mov	r0, r9
    2830:	bl	0 <flatcc_json_parser_space_ext>
    2834:	mov	r4, r0
    2838:	b	27dc <flatcc_json_parser_symbolic_int64+0x1dc>
    283c:	mov	r3, #8
    2840:	mov	r2, r6
    2844:	mov	r1, r4
    2848:	mov	r0, r9
    284c:	bl	0 <flatcc_json_parser_set_error>
    2850:	b	27b4 <flatcc_json_parser_symbolic_int64+0x1b4>
    2854:	mov	r1, r4
    2858:	mov	r2, r6
    285c:	mov	r0, r9
    2860:	mov	r3, #14
    2864:	bl	0 <flatcc_json_parser_set_error>
    2868:	mov	r4, r0
    286c:	b	26d0 <flatcc_json_parser_symbolic_int64+0xd0>

00002870 <Fantasy_BookReader_parse_json_struct>:
    2870:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2874:	mov	r5, r0
    2878:	mov	r4, r2
    287c:	ldr	r0, [r0]
    2880:	mov	r2, #4
    2884:	strd	r6, [sp, #8]
    2888:	mov	r7, r3
    288c:	mov	r3, #0
    2890:	mov	r6, r1
    2894:	mov	r1, r2
    2898:	strd	r8, [sp, #16]
    289c:	strd	sl, [sp, #24]
    28a0:	str	lr, [sp, #32]
    28a4:	sub	sp, sp, #52	; 0x34
    28a8:	str	r3, [r7]
    28ac:	bl	0 <flatcc_builder_start_struct>
    28b0:	subs	r3, r0, #0
    28b4:	str	r3, [sp, #24]
    28b8:	beq	2908 <Fantasy_BookReader_parse_json_struct+0x98>
    28bc:	cmp	r6, r4
    28c0:	beq	28d0 <Fantasy_BookReader_parse_json_struct+0x60>
    28c4:	ldrb	r3, [r6]
    28c8:	cmp	r3, #123	; 0x7b
    28cc:	beq	2940 <Fantasy_BookReader_parse_json_struct+0xd0>
    28d0:	mov	r1, r6
    28d4:	mov	r3, #21
    28d8:	mov	r2, r4
    28dc:	mov	r0, r5
    28e0:	bl	0 <flatcc_json_parser_set_error>
    28e4:	mov	r8, r0
    28e8:	cmp	r4, r8
    28ec:	beq	2f78 <Fantasy_BookReader_parse_json_struct+0x708>
    28f0:	ldr	r0, [r5]
    28f4:	bl	0 <flatcc_builder_end_struct>
    28f8:	cmp	r0, #0
    28fc:	str	r0, [r7]
    2900:	moveq	r6, r8
    2904:	bne	2920 <Fantasy_BookReader_parse_json_struct+0xb0>
    2908:	mov	r2, r4
    290c:	mov	r1, r6
    2910:	mov	r0, r5
    2914:	mov	r3, #33	; 0x21
    2918:	bl	0 <flatcc_json_parser_set_error>
    291c:	mov	r8, r0
    2920:	mov	r0, r8
    2924:	add	sp, sp, #52	; 0x34
    2928:	ldrd	r4, [sp]
    292c:	ldrd	r6, [sp, #8]
    2930:	ldrd	r8, [sp, #16]
    2934:	ldrd	sl, [sp, #24]
    2938:	add	sp, sp, #32
    293c:	pop	{pc}		; (ldr pc, [sp], #4)
    2940:	add	r1, r6, #1
    2944:	sub	r3, r4, r1
    2948:	cmp	r3, #1
    294c:	ble	2960 <Fantasy_BookReader_parse_json_struct+0xf0>
    2950:	ldrb	r3, [r6, #1]
    2954:	cmp	r3, #32
    2958:	bhi	2970 <Fantasy_BookReader_parse_json_struct+0x100>
    295c:	beq	2f30 <Fantasy_BookReader_parse_json_struct+0x6c0>
    2960:	mov	r2, r4
    2964:	mov	r0, r5
    2968:	bl	0 <flatcc_json_parser_space_ext>
    296c:	mov	r1, r0
    2970:	cmp	r4, r1
    2974:	beq	2984 <Fantasy_BookReader_parse_json_struct+0x114>
    2978:	ldrb	r3, [r1]
    297c:	cmp	r3, #125	; 0x7d
    2980:	beq	2f60 <Fantasy_BookReader_parse_json_struct+0x6f0>
    2984:	mov	r3, #0
    2988:	movt	r3, #65535	; 0xffff
    298c:	str	r3, [sp, #28]
    2990:	cmp	r4, r1
    2994:	beq	29c0 <Fantasy_BookReader_parse_json_struct+0x150>
    2998:	ldrb	r3, [r1]
    299c:	cmp	r3, #34	; 0x22
    29a0:	moveq	r3, #0
    29a4:	addeq	r1, r1, #1
    29a8:	streq	r3, [r5, #12]
    29ac:	beq	29c0 <Fantasy_BookReader_parse_json_struct+0x150>
    29b0:	cmp	r3, #46	; 0x2e
    29b4:	movne	r3, #1
    29b8:	strne	r3, [r5, #12]
    29bc:	beq	2de8 <Fantasy_BookReader_parse_json_struct+0x578>
    29c0:	sub	r3, r4, r1
    29c4:	cmp	r3, #8
    29c8:	bhi	29fc <Fantasy_BookReader_parse_json_struct+0x18c>
    29cc:	sub	r3, r3, #1
    29d0:	cmp	r3, #7
    29d4:	ldrls	pc, [pc, r3, lsl #2]
    29d8:	b	2dc4 <Fantasy_BookReader_parse_json_struct+0x554>
    29dc:	.word	0x00002cc4
    29e0:	.word	0x00002cb8
    29e4:	.word	0x00002cac
    29e8:	.word	0x00002ca0
    29ec:	.word	0x00002c94
    29f0:	.word	0x00002c88
    29f4:	.word	0x00002c7c
    29f8:	.word	0x000029fc
    29fc:	ldrb	sl, [r1, #7]
    2a00:	mov	fp, #0
    2a04:	mov	r3, fp
    2a08:	ldrb	r8, [r1, #6]
    2a0c:	orr	r2, sl, r8, lsl #8
    2a10:	ldrb	r8, [r1, #5]
    2a14:	orr	r2, r2, r8, lsl #16
    2a18:	ldrb	r8, [r1, #4]
    2a1c:	orr	r2, r2, r8, lsl #24
    2a20:	ldrb	sl, [r1, #3]
    2a24:	orr	r3, r3, sl
    2a28:	ldrb	sl, [r1, #2]
    2a2c:	orr	sl, r3, sl, lsl #8
    2a30:	ldrb	r8, [r1, #1]
    2a34:	orr	sl, sl, r8, lsl #16
    2a38:	str	r2, [sp, #8]
    2a3c:	ldrb	r2, [r1]
    2a40:	add	r9, pc, #960	; 0x3c0
    2a44:	ldrd	r8, [r9]
    2a48:	orr	r3, sl, r2, lsl #24
    2a4c:	str	r3, [sp, #12]
    2a50:	ldrd	r2, [sp, #8]
    2a54:	cmp	r3, r9
    2a58:	cmpeq	r2, r8
    2a5c:	bne	2dc4 <Fantasy_BookReader_parse_json_struct+0x554>
    2a60:	add	r6, r1, #8
    2a64:	sub	r3, r4, r6
    2a68:	cmp	r3, #8
    2a6c:	bhi	2a9c <Fantasy_BookReader_parse_json_struct+0x22c>
    2a70:	sub	r2, r3, #2
    2a74:	cmp	r2, #6
    2a78:	ldrls	pc, [pc, r2, lsl #2]
    2a7c:	b	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2a80:	.word	0x00002cd8
    2a84:	.word	0x00002cd0
    2a88:	.word	0x00002ce0
    2a8c:	.word	0x00002c74
    2a90:	.word	0x00002c74
    2a94:	.word	0x00002a9c
    2a98:	.word	0x00002a9c
    2a9c:	mov	r9, #0
    2aa0:	mov	sl, r9
    2aa4:	mov	r8, sl
    2aa8:	ldrb	sl, [r1, #11]
    2aac:	orr	sl, r8, sl
    2ab0:	ldrb	r8, [r1, #10]
    2ab4:	orr	sl, sl, r8, lsl #8
    2ab8:	ldrb	r8, [r1, #9]
    2abc:	mov	r2, #0
    2ac0:	mov	fp, #0
    2ac4:	movt	fp, #24932	; 0x6164
    2ac8:	str	r2, [sp, #16]
    2acc:	ldr	r2, [sp, #28]
    2ad0:	orr	sl, sl, r8, lsl #16
    2ad4:	ldrb	r8, [r1, #8]
    2ad8:	orr	r8, sl, r8, lsl #24
    2adc:	mov	sl, #0
    2ae0:	and	r2, r8, r2
    2ae4:	str	r2, [sp, #20]
    2ae8:	ldrd	r8, [sp, #16]
    2aec:	cmp	r9, fp
    2af0:	cmpeq	r8, sl
    2af4:	bne	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2af8:	cmp	r3, #2
    2afc:	ble	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2b00:	ldr	r2, [r5, #12]
    2b04:	ldrb	r3, [r1, #10]
    2b08:	cmp	r2, #0
    2b0c:	beq	2dd8 <Fantasy_BookReader_parse_json_struct+0x568>
    2b10:	cmp	r3, #58	; 0x3a
    2b14:	cmpne	r3, #32
    2b18:	movhi	r3, #1
    2b1c:	movls	r3, #0
    2b20:	bhi	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2b24:	add	r1, r1, #10
    2b28:	str	r3, [r5, #12]
    2b2c:	sub	r3, r4, r1
    2b30:	cmp	r3, #1
    2b34:	ble	2b48 <Fantasy_BookReader_parse_json_struct+0x2d8>
    2b38:	ldrb	r3, [r1]
    2b3c:	cmp	r3, #32
    2b40:	bhi	2b58 <Fantasy_BookReader_parse_json_struct+0x2e8>
    2b44:	beq	2ed0 <Fantasy_BookReader_parse_json_struct+0x660>
    2b48:	mov	r2, r4
    2b4c:	mov	r0, r5
    2b50:	bl	0 <flatcc_json_parser_space_ext>
    2b54:	mov	r1, r0
    2b58:	cmp	r4, r1
    2b5c:	beq	2b6c <Fantasy_BookReader_parse_json_struct+0x2fc>
    2b60:	ldrb	r3, [r1]
    2b64:	cmp	r3, #58	; 0x3a
    2b68:	beq	2ee4 <Fantasy_BookReader_parse_json_struct+0x674>
    2b6c:	mov	r3, #4
    2b70:	mov	r2, r4
    2b74:	mov	r0, r5
    2b78:	bl	0 <flatcc_json_parser_set_error>
    2b7c:	mov	r8, r0
    2b80:	cmp	r6, r8
    2b84:	beq	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2b88:	mov	r3, #0
    2b8c:	mov	r0, #0
    2b90:	mov	r1, #0
    2b94:	cmp	r4, r8
    2b98:	str	r3, [sp, #32]
    2b9c:	str	r3, [sp, #36]	; 0x24
    2ba0:	strd	r0, [sp, #40]	; 0x28
    2ba4:	beq	2e00 <Fantasy_BookReader_parse_json_struct+0x590>
    2ba8:	add	r0, sp, #40	; 0x28
    2bac:	add	r3, sp, #36	; 0x24
    2bb0:	mov	r2, r4
    2bb4:	mov	r1, r8
    2bb8:	str	r0, [sp]
    2bbc:	mov	r0, r5
    2bc0:	bl	0 <flatcc_json_parser_integer>
    2bc4:	cmp	r8, r0
    2bc8:	mov	r6, r0
    2bcc:	bne	2e10 <Fantasy_BookReader_parse_json_struct+0x5a0>
    2bd0:	add	r0, sp, #32
    2bd4:	movw	r3, #0
    2bd8:	movt	r3, #0
    2bdc:	mov	r2, r4
    2be0:	mov	r1, r6
    2be4:	str	r0, [sp]
    2be8:	mov	r0, r5
    2bec:	bl	1cb8 <flatcc_json_parser_symbolic_int32>
    2bf0:	cmp	r4, r0
    2bf4:	cmpne	r0, r6
    2bf8:	beq	2f44 <Fantasy_BookReader_parse_json_struct+0x6d4>
    2bfc:	ldr	r2, [sp, #32]
    2c00:	mov	r6, r0
    2c04:	ldr	r3, [sp, #24]
    2c08:	str	r2, [r3]
    2c0c:	sub	r3, r4, r6
    2c10:	cmp	r3, #1
    2c14:	ble	2c28 <Fantasy_BookReader_parse_json_struct+0x3b8>
    2c18:	ldrb	r3, [r6]
    2c1c:	cmp	r3, #32
    2c20:	bhi	2c3c <Fantasy_BookReader_parse_json_struct+0x3cc>
    2c24:	beq	2db0 <Fantasy_BookReader_parse_json_struct+0x540>
    2c28:	mov	r1, r6
    2c2c:	mov	r2, r4
    2c30:	mov	r0, r5
    2c34:	bl	0 <flatcc_json_parser_space_ext>
    2c38:	mov	r6, r0
    2c3c:	cmp	r4, r6
    2c40:	beq	2908 <Fantasy_BookReader_parse_json_struct+0x98>
    2c44:	ldrb	r3, [r6]
    2c48:	cmp	r3, #44	; 0x2c
    2c4c:	beq	2d20 <Fantasy_BookReader_parse_json_struct+0x4b0>
    2c50:	cmp	r3, #125	; 0x7d
    2c54:	beq	2ce8 <Fantasy_BookReader_parse_json_struct+0x478>
    2c58:	mov	r1, r6
    2c5c:	mov	r3, #10
    2c60:	mov	r2, r4
    2c64:	mov	r0, r5
    2c68:	bl	0 <flatcc_json_parser_set_error>
    2c6c:	mov	r8, r0
    2c70:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2c74:	mov	sl, #0
    2c78:	b	2aa4 <Fantasy_BookReader_parse_json_struct+0x234>
    2c7c:	mov	sl, #0
    2c80:	mov	fp, #0
    2c84:	b	2a04 <Fantasy_BookReader_parse_json_struct+0x194>
    2c88:	mov	r2, #0
    2c8c:	mov	r3, r2
    2c90:	b	2a10 <Fantasy_BookReader_parse_json_struct+0x1a0>
    2c94:	mov	r2, #0
    2c98:	mov	r3, r2
    2c9c:	b	2a18 <Fantasy_BookReader_parse_json_struct+0x1a8>
    2ca0:	mov	r2, #0
    2ca4:	mov	r3, r2
    2ca8:	b	2a20 <Fantasy_BookReader_parse_json_struct+0x1b0>
    2cac:	mov	r2, #0
    2cb0:	mov	r3, r2
    2cb4:	b	2a28 <Fantasy_BookReader_parse_json_struct+0x1b8>
    2cb8:	mov	r2, #0
    2cbc:	mov	sl, r2
    2cc0:	b	2a30 <Fantasy_BookReader_parse_json_struct+0x1c0>
    2cc4:	mov	r2, #0
    2cc8:	mov	sl, r2
    2ccc:	b	2a38 <Fantasy_BookReader_parse_json_struct+0x1c8>
    2cd0:	mov	sl, #0
    2cd4:	b	2ab0 <Fantasy_BookReader_parse_json_struct+0x240>
    2cd8:	mov	sl, #0
    2cdc:	b	2ab8 <Fantasy_BookReader_parse_json_struct+0x248>
    2ce0:	mov	r8, #0
    2ce4:	b	2aa8 <Fantasy_BookReader_parse_json_struct+0x238>
    2ce8:	add	r8, r6, #1
    2cec:	sub	r3, r4, r8
    2cf0:	cmp	r3, #1
    2cf4:	ble	2d08 <Fantasy_BookReader_parse_json_struct+0x498>
    2cf8:	ldrb	r3, [r6, #1]
    2cfc:	cmp	r3, #32
    2d00:	bhi	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2d04:	beq	2e58 <Fantasy_BookReader_parse_json_struct+0x5e8>
    2d08:	mov	r1, r8
    2d0c:	mov	r2, r4
    2d10:	mov	r0, r5
    2d14:	bl	0 <flatcc_json_parser_space_ext>
    2d18:	mov	r8, r0
    2d1c:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2d20:	add	r1, r6, #1
    2d24:	sub	r3, r4, r1
    2d28:	cmp	r3, #1
    2d2c:	ble	2d40 <Fantasy_BookReader_parse_json_struct+0x4d0>
    2d30:	ldrb	r3, [r6, #1]
    2d34:	cmp	r3, #32
    2d38:	bhi	2d50 <Fantasy_BookReader_parse_json_struct+0x4e0>
    2d3c:	beq	2e6c <Fantasy_BookReader_parse_json_struct+0x5fc>
    2d40:	mov	r2, r4
    2d44:	mov	r0, r5
    2d48:	bl	0 <flatcc_json_parser_space_ext>
    2d4c:	mov	r1, r0
    2d50:	cmp	r4, r1
    2d54:	beq	2e84 <Fantasy_BookReader_parse_json_struct+0x614>
    2d58:	ldrb	r3, [r1]
    2d5c:	cmp	r3, #125	; 0x7d
    2d60:	bne	2990 <Fantasy_BookReader_parse_json_struct+0x120>
    2d64:	add	r8, r1, #1
    2d68:	sub	r3, r4, r8
    2d6c:	cmp	r3, #1
    2d70:	ble	2d08 <Fantasy_BookReader_parse_json_struct+0x498>
    2d74:	ldrb	r3, [r1, #1]
    2d78:	cmp	r3, #32
    2d7c:	bhi	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2d80:	bne	2d08 <Fantasy_BookReader_parse_json_struct+0x498>
    2d84:	ldrb	r3, [r1, #2]
    2d88:	cmp	r3, #32
    2d8c:	addhi	r8, r1, #2
    2d90:	bls	2d08 <Fantasy_BookReader_parse_json_struct+0x498>
    2d94:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2d98:	mov	r1, r6
    2d9c:	mov	r2, r4
    2da0:	mov	r0, r5
    2da4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2da8:	mov	r6, r0
    2dac:	b	2c0c <Fantasy_BookReader_parse_json_struct+0x39c>
    2db0:	ldrb	r3, [r6, #1]
    2db4:	cmp	r3, #32
    2db8:	addhi	r6, r6, #1
    2dbc:	bls	2c28 <Fantasy_BookReader_parse_json_struct+0x3b8>
    2dc0:	b	2c3c <Fantasy_BookReader_parse_json_struct+0x3cc>
    2dc4:	mov	r2, r4
    2dc8:	mov	r0, r5
    2dcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2dd0:	mov	r6, r0
    2dd4:	b	2c0c <Fantasy_BookReader_parse_json_struct+0x39c>
    2dd8:	cmp	r3, #34	; 0x22
    2ddc:	bne	2d98 <Fantasy_BookReader_parse_json_struct+0x528>
    2de0:	add	r1, r1, #11
    2de4:	b	2b2c <Fantasy_BookReader_parse_json_struct+0x2bc>
    2de8:	mov	r3, #5
    2dec:	mov	r2, r4
    2df0:	mov	r0, r5
    2df4:	bl	0 <flatcc_json_parser_set_error>
    2df8:	mov	r1, r0
    2dfc:	b	29c0 <Fantasy_BookReader_parse_json_struct+0x150>
    2e00:	mov	r6, r4
    2e04:	b	2bd0 <Fantasy_BookReader_parse_json_struct+0x360>
    2e08:	.word	0x735f7265
    2e0c:	.word	0x626f6f6b
    2e10:	ldr	r1, [sp, #36]	; 0x24
    2e14:	ldrd	r2, [sp, #40]	; 0x28
    2e18:	cmp	r1, #0
    2e1c:	beq	2ea0 <Fantasy_BookReader_parse_json_struct+0x630>
    2e20:	cmp	r3, #0
    2e24:	cmpeq	r2, #-2147483648	; 0x80000000
    2e28:	rsbls	r2, r2, #0
    2e2c:	bls	2c04 <Fantasy_BookReader_parse_json_struct+0x394>
    2e30:	mov	r1, r0
    2e34:	mov	r3, #8
    2e38:	mov	r2, r4
    2e3c:	mov	r0, r5
    2e40:	bl	0 <flatcc_json_parser_set_error>
    2e44:	mov	r6, r0
    2e48:	cmp	r8, r6
    2e4c:	ldrne	r2, [sp, #32]
    2e50:	bne	2c04 <Fantasy_BookReader_parse_json_struct+0x394>
    2e54:	b	2bd0 <Fantasy_BookReader_parse_json_struct+0x360>
    2e58:	ldrb	r3, [r6, #2]
    2e5c:	cmp	r3, #32
    2e60:	addhi	r8, r6, #2
    2e64:	bls	2d08 <Fantasy_BookReader_parse_json_struct+0x498>
    2e68:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2e6c:	ldrb	r3, [r6, #2]
    2e70:	cmp	r3, #32
    2e74:	addhi	r1, r6, #2
    2e78:	bls	2d40 <Fantasy_BookReader_parse_json_struct+0x4d0>
    2e7c:	cmp	r4, r1
    2e80:	bne	2d58 <Fantasy_BookReader_parse_json_struct+0x4e8>
    2e84:	mov	r3, #10
    2e88:	mov	r2, r4
    2e8c:	mov	r1, r4
    2e90:	mov	r0, r5
    2e94:	bl	0 <flatcc_json_parser_set_error>
    2e98:	mov	r8, r0
    2e9c:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2ea0:	mov	r1, #0
    2ea4:	mvn	r0, #-2147483648	; 0x80000000
    2ea8:	cmp	r3, r1
    2eac:	cmpeq	r2, r0
    2eb0:	bls	2c04 <Fantasy_BookReader_parse_json_struct+0x394>
    2eb4:	mov	r1, r6
    2eb8:	mov	r3, #7
    2ebc:	mov	r2, r4
    2ec0:	mov	r0, r5
    2ec4:	bl	0 <flatcc_json_parser_set_error>
    2ec8:	mov	r6, r0
    2ecc:	b	2e48 <Fantasy_BookReader_parse_json_struct+0x5d8>
    2ed0:	ldrb	r3, [r1, #1]
    2ed4:	cmp	r3, #32
    2ed8:	addhi	r1, r1, #1
    2edc:	bls	2b48 <Fantasy_BookReader_parse_json_struct+0x2d8>
    2ee0:	b	2b58 <Fantasy_BookReader_parse_json_struct+0x2e8>
    2ee4:	add	r8, r1, #1
    2ee8:	sub	r3, r4, r8
    2eec:	cmp	r3, #1
    2ef0:	ble	2f04 <Fantasy_BookReader_parse_json_struct+0x694>
    2ef4:	ldrb	r3, [r1, #1]
    2ef8:	cmp	r3, #32
    2efc:	bhi	2b80 <Fantasy_BookReader_parse_json_struct+0x310>
    2f00:	beq	2f1c <Fantasy_BookReader_parse_json_struct+0x6ac>
    2f04:	mov	r1, r8
    2f08:	mov	r2, r4
    2f0c:	mov	r0, r5
    2f10:	bl	0 <flatcc_json_parser_space_ext>
    2f14:	mov	r8, r0
    2f18:	b	2b80 <Fantasy_BookReader_parse_json_struct+0x310>
    2f1c:	ldrb	r3, [r1, #2]
    2f20:	cmp	r3, #32
    2f24:	addhi	r8, r1, #2
    2f28:	bls	2f04 <Fantasy_BookReader_parse_json_struct+0x694>
    2f2c:	b	2b80 <Fantasy_BookReader_parse_json_struct+0x310>
    2f30:	ldrb	r3, [r6, #2]
    2f34:	cmp	r3, #32
    2f38:	addhi	r1, r6, #2
    2f3c:	bls	2960 <Fantasy_BookReader_parse_json_struct+0xf0>
    2f40:	b	2970 <Fantasy_BookReader_parse_json_struct+0x100>
    2f44:	mov	r1, r0
    2f48:	mov	r3, #33	; 0x21
    2f4c:	mov	r2, r4
    2f50:	mov	r0, r5
    2f54:	bl	0 <flatcc_json_parser_set_error>
    2f58:	mov	r8, r0
    2f5c:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2f60:	add	r1, r1, #1
    2f64:	mov	r2, r4
    2f68:	mov	r0, r5
    2f6c:	bl	8f0 <flatcc_json_parser_space>
    2f70:	mov	r8, r0
    2f74:	b	28e8 <Fantasy_BookReader_parse_json_struct+0x78>
    2f78:	mov	r6, r4
    2f7c:	b	2908 <Fantasy_BookReader_parse_json_struct+0x98>

00002f80 <flatcc_json_parser_object_end>:
    2f80:	strd	r4, [sp, #-16]!
    2f84:	mov	r4, r2
    2f88:	sub	r2, r2, r1
    2f8c:	cmp	r2, #1
    2f90:	mov	r5, r0
    2f94:	str	r6, [sp, #8]
    2f98:	mov	r6, r3
    2f9c:	str	lr, [sp, #12]
    2fa0:	ble	2fb4 <flatcc_json_parser_object_end+0x34>
    2fa4:	ldrb	r3, [r1]
    2fa8:	cmp	r3, #32
    2fac:	bhi	2fc4 <flatcc_json_parser_object_end+0x44>
    2fb0:	beq	30b4 <flatcc_json_parser_object_end+0x134>
    2fb4:	mov	r2, r4
    2fb8:	mov	r0, r5
    2fbc:	bl	0 <flatcc_json_parser_space_ext>
    2fc0:	mov	r1, r0
    2fc4:	cmp	r4, r1
    2fc8:	moveq	r3, #0
    2fcc:	moveq	r0, r4
    2fd0:	streq	r3, [r6]
    2fd4:	beq	30a4 <flatcc_json_parser_object_end+0x124>
    2fd8:	ldrb	r3, [r1]
    2fdc:	cmp	r3, #44	; 0x2c
    2fe0:	beq	3058 <flatcc_json_parser_object_end+0xd8>
    2fe4:	mov	r3, #0
    2fe8:	str	r3, [r6]
    2fec:	ldrb	r3, [r1]
    2ff0:	cmp	r3, #125	; 0x7d
    2ff4:	beq	3018 <flatcc_json_parser_object_end+0x98>
    2ff8:	mov	r2, r4
    2ffc:	mov	r0, r5
    3000:	mov	r3, #10
    3004:	ldrd	r4, [sp]
    3008:	ldr	r6, [sp, #8]
    300c:	ldr	lr, [sp, #12]
    3010:	add	sp, sp, #16
    3014:	b	0 <flatcc_json_parser_set_error>
    3018:	add	r0, r1, #1
    301c:	sub	r3, r4, r0
    3020:	cmp	r3, #1
    3024:	ble	3038 <flatcc_json_parser_object_end+0xb8>
    3028:	ldrb	r3, [r1, #1]
    302c:	cmp	r3, #32
    3030:	bhi	30a4 <flatcc_json_parser_object_end+0x124>
    3034:	beq	3100 <flatcc_json_parser_object_end+0x180>
    3038:	mov	r2, r4
    303c:	mov	r1, r0
    3040:	ldr	r6, [sp, #8]
    3044:	mov	r0, r5
    3048:	ldrd	r4, [sp]
    304c:	ldr	lr, [sp, #12]
    3050:	add	sp, sp, #16
    3054:	b	0 <flatcc_json_parser_space_ext>
    3058:	add	r0, r1, #1
    305c:	sub	r3, r4, r0
    3060:	cmp	r3, #1
    3064:	ble	3078 <flatcc_json_parser_object_end+0xf8>
    3068:	ldrb	r3, [r1, #1]
    306c:	cmp	r3, #32
    3070:	bhi	3088 <flatcc_json_parser_object_end+0x108>
    3074:	beq	3114 <flatcc_json_parser_object_end+0x194>
    3078:	mov	r1, r0
    307c:	mov	r2, r4
    3080:	mov	r0, r5
    3084:	bl	0 <flatcc_json_parser_space_ext>
    3088:	cmp	r4, r0
    308c:	beq	3128 <flatcc_json_parser_object_end+0x1a8>
    3090:	ldrb	r3, [r0]
    3094:	cmp	r3, #125	; 0x7d
    3098:	movne	r3, #1
    309c:	strne	r3, [r6]
    30a0:	beq	30d8 <flatcc_json_parser_object_end+0x158>
    30a4:	ldrd	r4, [sp]
    30a8:	ldr	r6, [sp, #8]
    30ac:	add	sp, sp, #12
    30b0:	pop	{pc}		; (ldr pc, [sp], #4)
    30b4:	ldrb	r3, [r1, #1]
    30b8:	cmp	r3, #32
    30bc:	addhi	r1, r1, #1
    30c0:	bhi	2fc4 <flatcc_json_parser_object_end+0x44>
    30c4:	mov	r2, r4
    30c8:	mov	r0, r5
    30cc:	bl	0 <flatcc_json_parser_space_ext>
    30d0:	mov	r1, r0
    30d4:	b	2fc4 <flatcc_json_parser_object_end+0x44>
    30d8:	mov	r3, #0
    30dc:	mov	r2, r4
    30e0:	ldr	lr, [sp, #12]
    30e4:	add	r1, r0, #1
    30e8:	mov	r0, r5
    30ec:	ldrd	r4, [sp]
    30f0:	str	r3, [r6]
    30f4:	ldr	r6, [sp, #8]
    30f8:	add	sp, sp, #16
    30fc:	b	8f0 <flatcc_json_parser_space>
    3100:	ldrb	r3, [r1, #2]
    3104:	cmp	r3, #32
    3108:	addhi	r0, r1, #2
    310c:	bls	3038 <flatcc_json_parser_object_end+0xb8>
    3110:	b	30a4 <flatcc_json_parser_object_end+0x124>
    3114:	ldrb	r3, [r1, #2]
    3118:	cmp	r3, #32
    311c:	addhi	r0, r1, #2
    3120:	bls	3078 <flatcc_json_parser_object_end+0xf8>
    3124:	b	3088 <flatcc_json_parser_object_end+0x108>
    3128:	mov	ip, #0
    312c:	mov	r0, r5
    3130:	mov	r3, #10
    3134:	mov	r2, r4
    3138:	mov	r1, r4
    313c:	str	ip, [r6]
    3140:	b	3004 <flatcc_json_parser_object_end+0x84>

00003144 <flatcc_json_parser_array_end>:
    3144:	strd	r4, [sp, #-16]!
    3148:	mov	r4, r2
    314c:	sub	r2, r2, r1
    3150:	cmp	r2, #1
    3154:	mov	r5, r0
    3158:	str	r6, [sp, #8]
    315c:	mov	r6, r3
    3160:	str	lr, [sp, #12]
    3164:	ble	3178 <flatcc_json_parser_array_end+0x34>
    3168:	ldrb	r3, [r1]
    316c:	cmp	r3, #32
    3170:	bhi	3188 <flatcc_json_parser_array_end+0x44>
    3174:	beq	3278 <flatcc_json_parser_array_end+0x134>
    3178:	mov	r2, r4
    317c:	mov	r0, r5
    3180:	bl	0 <flatcc_json_parser_space_ext>
    3184:	mov	r1, r0
    3188:	cmp	r4, r1
    318c:	moveq	r3, #0
    3190:	moveq	r0, r4
    3194:	streq	r3, [r6]
    3198:	beq	3268 <flatcc_json_parser_array_end+0x124>
    319c:	ldrb	r3, [r1]
    31a0:	cmp	r3, #44	; 0x2c
    31a4:	beq	321c <flatcc_json_parser_array_end+0xd8>
    31a8:	mov	r3, #0
    31ac:	str	r3, [r6]
    31b0:	ldrb	r3, [r1]
    31b4:	cmp	r3, #93	; 0x5d
    31b8:	beq	31dc <flatcc_json_parser_array_end+0x98>
    31bc:	mov	r2, r4
    31c0:	mov	r0, r5
    31c4:	mov	r3, #9
    31c8:	ldrd	r4, [sp]
    31cc:	ldr	r6, [sp, #8]
    31d0:	ldr	lr, [sp, #12]
    31d4:	add	sp, sp, #16
    31d8:	b	0 <flatcc_json_parser_set_error>
    31dc:	add	r0, r1, #1
    31e0:	sub	r3, r4, r0
    31e4:	cmp	r3, #1
    31e8:	ble	31fc <flatcc_json_parser_array_end+0xb8>
    31ec:	ldrb	r3, [r1, #1]
    31f0:	cmp	r3, #32
    31f4:	bhi	3268 <flatcc_json_parser_array_end+0x124>
    31f8:	beq	32c4 <flatcc_json_parser_array_end+0x180>
    31fc:	mov	r2, r4
    3200:	mov	r1, r0
    3204:	ldr	r6, [sp, #8]
    3208:	mov	r0, r5
    320c:	ldrd	r4, [sp]
    3210:	ldr	lr, [sp, #12]
    3214:	add	sp, sp, #16
    3218:	b	0 <flatcc_json_parser_space_ext>
    321c:	add	r0, r1, #1
    3220:	sub	r3, r4, r0
    3224:	cmp	r3, #1
    3228:	ble	323c <flatcc_json_parser_array_end+0xf8>
    322c:	ldrb	r3, [r1, #1]
    3230:	cmp	r3, #32
    3234:	bhi	324c <flatcc_json_parser_array_end+0x108>
    3238:	beq	32d8 <flatcc_json_parser_array_end+0x194>
    323c:	mov	r1, r0
    3240:	mov	r2, r4
    3244:	mov	r0, r5
    3248:	bl	0 <flatcc_json_parser_space_ext>
    324c:	cmp	r4, r0
    3250:	beq	32ec <flatcc_json_parser_array_end+0x1a8>
    3254:	ldrb	r3, [r0]
    3258:	cmp	r3, #93	; 0x5d
    325c:	movne	r3, #1
    3260:	strne	r3, [r6]
    3264:	beq	329c <flatcc_json_parser_array_end+0x158>
    3268:	ldrd	r4, [sp]
    326c:	ldr	r6, [sp, #8]
    3270:	add	sp, sp, #12
    3274:	pop	{pc}		; (ldr pc, [sp], #4)
    3278:	ldrb	r3, [r1, #1]
    327c:	cmp	r3, #32
    3280:	addhi	r1, r1, #1
    3284:	bhi	3188 <flatcc_json_parser_array_end+0x44>
    3288:	mov	r2, r4
    328c:	mov	r0, r5
    3290:	bl	0 <flatcc_json_parser_space_ext>
    3294:	mov	r1, r0
    3298:	b	3188 <flatcc_json_parser_array_end+0x44>
    329c:	mov	r3, #0
    32a0:	mov	r2, r4
    32a4:	ldr	lr, [sp, #12]
    32a8:	add	r1, r0, #1
    32ac:	mov	r0, r5
    32b0:	ldrd	r4, [sp]
    32b4:	str	r3, [r6]
    32b8:	ldr	r6, [sp, #8]
    32bc:	add	sp, sp, #16
    32c0:	b	8f0 <flatcc_json_parser_space>
    32c4:	ldrb	r3, [r1, #2]
    32c8:	cmp	r3, #32
    32cc:	addhi	r0, r1, #2
    32d0:	bls	31fc <flatcc_json_parser_array_end+0xb8>
    32d4:	b	3268 <flatcc_json_parser_array_end+0x124>
    32d8:	ldrb	r3, [r1, #2]
    32dc:	cmp	r3, #32
    32e0:	addhi	r0, r1, #2
    32e4:	bls	323c <flatcc_json_parser_array_end+0xf8>
    32e8:	b	324c <flatcc_json_parser_array_end+0x108>
    32ec:	mov	ip, #0
    32f0:	mov	r0, r5
    32f4:	mov	r3, #9
    32f8:	mov	r2, r4
    32fc:	mov	r1, r4
    3300:	str	ip, [r6]
    3304:	b	31c8 <flatcc_json_parser_array_end+0x84>

00003308 <MyGame_Example_Test_parse_json_struct_inline>:
    3308:	cmp	r1, r2
    330c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3310:	strd	r6, [sp, #8]
    3314:	mov	r6, r2
    3318:	mov	r7, r0
    331c:	strd	r8, [sp, #16]
    3320:	strd	sl, [sp, #24]
    3324:	str	lr, [sp, #32]
    3328:	sub	sp, sp, #28
    332c:	beq	3340 <MyGame_Example_Test_parse_json_struct_inline+0x38>
    3330:	mov	fp, r3
    3334:	ldrb	r3, [r1]
    3338:	cmp	r3, #123	; 0x7b
    333c:	beq	3374 <MyGame_Example_Test_parse_json_struct_inline+0x6c>
    3340:	mov	r2, r6
    3344:	mov	r0, r7
    3348:	mov	r3, #21
    334c:	bl	0 <flatcc_json_parser_set_error>
    3350:	mov	r5, r0
    3354:	mov	r0, r5
    3358:	add	sp, sp, #28
    335c:	ldrd	r4, [sp]
    3360:	ldrd	r6, [sp, #8]
    3364:	ldrd	r8, [sp, #16]
    3368:	ldrd	sl, [sp, #24]
    336c:	add	sp, sp, #32
    3370:	pop	{pc}		; (ldr pc, [sp], #4)
    3374:	add	r4, r1, #1
    3378:	sub	r3, r2, r4
    337c:	cmp	r3, #1
    3380:	ble	3394 <MyGame_Example_Test_parse_json_struct_inline+0x8c>
    3384:	ldrb	r3, [r1, #1]
    3388:	cmp	r3, #32
    338c:	bhi	33a8 <MyGame_Example_Test_parse_json_struct_inline+0xa0>
    3390:	beq	3a6c <MyGame_Example_Test_parse_json_struct_inline+0x764>
    3394:	mov	r1, r4
    3398:	mov	r2, r6
    339c:	mov	r0, r7
    33a0:	bl	0 <flatcc_json_parser_space_ext>
    33a4:	mov	r4, r0
    33a8:	cmp	r6, r4
    33ac:	beq	33bc <MyGame_Example_Test_parse_json_struct_inline+0xb4>
    33b0:	ldrb	r3, [r4]
    33b4:	cmp	r3, #125	; 0x7d
    33b8:	beq	3a80 <MyGame_Example_Test_parse_json_struct_inline+0x778>
    33bc:	cmp	r6, r4
    33c0:	beq	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    33c4:	ldrb	r3, [r4]
    33c8:	cmp	r3, #34	; 0x22
    33cc:	moveq	r3, #0
    33d0:	addeq	r4, r4, #1
    33d4:	streq	r3, [r7, #12]
    33d8:	beq	33ec <MyGame_Example_Test_parse_json_struct_inline+0xe4>
    33dc:	cmp	r3, #46	; 0x2e
    33e0:	movne	r3, #1
    33e4:	strne	r3, [r7, #12]
    33e8:	beq	3828 <MyGame_Example_Test_parse_json_struct_inline+0x520>
    33ec:	sub	r2, r6, r4
    33f0:	cmp	r2, #8
    33f4:	bls	35cc <MyGame_Example_Test_parse_json_struct_inline+0x2c4>
    33f8:	mov	r1, #0
    33fc:	mov	r3, r1
    3400:	ldrb	r0, [r4, #3]
    3404:	orr	r3, r3, r0
    3408:	ldrb	r0, [r4, #2]
    340c:	orr	r3, r3, r0, lsl #8
    3410:	ldrb	r0, [r4, #1]
    3414:	orr	r3, r3, r0, lsl #16
    3418:	ldrb	r0, [r4]
    341c:	mov	r8, #0
    3420:	orr	r3, r3, r0, lsl #24
    3424:	and	r9, r3, #-16777216	; 0xff000000
    3428:	cmp	r9, #1644167168	; 0x62000000
    342c:	cmpeq	r8, #0
    3430:	beq	361c <MyGame_Example_Test_parse_json_struct_inline+0x314>
    3434:	cmp	r9, #1627389952	; 0x61000000
    3438:	cmpeq	r8, #0
    343c:	bne	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3440:	cmp	r2, #1
    3444:	ble	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3448:	ldr	r2, [r7, #12]
    344c:	ldrb	r3, [r4, #1]
    3450:	cmp	r2, #0
    3454:	beq	3808 <MyGame_Example_Test_parse_json_struct_inline+0x500>
    3458:	cmp	r3, #58	; 0x3a
    345c:	cmpne	r3, #32
    3460:	movhi	r3, #1
    3464:	movls	r3, #0
    3468:	bhi	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    346c:	add	r1, r4, #1
    3470:	str	r3, [r7, #12]
    3474:	sub	r3, r6, r1
    3478:	cmp	r3, #1
    347c:	ble	3490 <MyGame_Example_Test_parse_json_struct_inline+0x188>
    3480:	ldrb	r3, [r1]
    3484:	cmp	r3, #32
    3488:	bhi	34a0 <MyGame_Example_Test_parse_json_struct_inline+0x198>
    348c:	beq	3998 <MyGame_Example_Test_parse_json_struct_inline+0x690>
    3490:	mov	r2, r6
    3494:	mov	r0, r7
    3498:	bl	0 <flatcc_json_parser_space_ext>
    349c:	mov	r1, r0
    34a0:	cmp	r6, r1
    34a4:	beq	34b4 <MyGame_Example_Test_parse_json_struct_inline+0x1ac>
    34a8:	ldrb	r3, [r1]
    34ac:	cmp	r3, #58	; 0x3a
    34b0:	beq	39f4 <MyGame_Example_Test_parse_json_struct_inline+0x6ec>
    34b4:	mov	r3, #4
    34b8:	mov	r2, r6
    34bc:	mov	r0, r7
    34c0:	bl	0 <flatcc_json_parser_set_error>
    34c4:	mov	sl, r0
    34c8:	cmp	sl, r4
    34cc:	beq	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    34d0:	mov	r3, #0
    34d4:	mov	r0, #0
    34d8:	mov	r1, #0
    34dc:	cmp	r6, sl
    34e0:	strh	r3, [sp, #10]
    34e4:	str	r3, [sp, #12]
    34e8:	strd	r0, [sp, #16]
    34ec:	beq	3820 <MyGame_Example_Test_parse_json_struct_inline+0x518>
    34f0:	add	r0, sp, #16
    34f4:	add	r3, sp, #12
    34f8:	mov	r2, r6
    34fc:	mov	r1, sl
    3500:	str	r0, [sp]
    3504:	mov	r0, r7
    3508:	bl	0 <flatcc_json_parser_integer>
    350c:	cmp	sl, r0
    3510:	mov	r5, r0
    3514:	bne	3884 <MyGame_Example_Test_parse_json_struct_inline+0x57c>
    3518:	add	ip, sp, #10
    351c:	ldr	r3, [pc, #1396]	; 3a98 <MyGame_Example_Test_parse_json_struct_inline+0x790>
    3520:	mov	r2, r6
    3524:	mov	r1, r5
    3528:	mov	r0, r7
    352c:	str	ip, [sp]
    3530:	bl	1a4c <flatcc_json_parser_symbolic_int16>
    3534:	cmp	r6, r0
    3538:	cmpne	r0, r5
    353c:	beq	3a50 <MyGame_Example_Test_parse_json_struct_inline+0x748>
    3540:	ldrsh	r2, [sp, #10]
    3544:	mov	r5, r0
    3548:	strh	r2, [fp]
    354c:	sub	r3, r6, r5
    3550:	cmp	r3, #1
    3554:	ble	3568 <MyGame_Example_Test_parse_json_struct_inline+0x260>
    3558:	ldrb	r3, [r5]
    355c:	cmp	r3, #32
    3560:	bhi	357c <MyGame_Example_Test_parse_json_struct_inline+0x274>
    3564:	beq	3764 <MyGame_Example_Test_parse_json_struct_inline+0x45c>
    3568:	mov	r1, r5
    356c:	mov	r2, r6
    3570:	mov	r0, r7
    3574:	bl	0 <flatcc_json_parser_space_ext>
    3578:	mov	r5, r0
    357c:	cmp	r6, r5
    3580:	beq	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3584:	ldrb	r3, [r5]
    3588:	cmp	r3, #44	; 0x2c
    358c:	beq	3778 <MyGame_Example_Test_parse_json_struct_inline+0x470>
    3590:	cmp	r3, #125	; 0x7d
    3594:	beq	372c <MyGame_Example_Test_parse_json_struct_inline+0x424>
    3598:	mov	r1, r5
    359c:	mov	r2, r6
    35a0:	mov	r0, r7
    35a4:	mov	r3, #10
    35a8:	bl	0 <flatcc_json_parser_set_error>
    35ac:	mov	r5, r0
    35b0:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    35b4:	mov	r1, r4
    35b8:	mov	r2, r6
    35bc:	mov	r0, r7
    35c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35c4:	mov	r5, r0
    35c8:	b	354c <MyGame_Example_Test_parse_json_struct_inline+0x244>
    35cc:	sub	r3, r2, #1
    35d0:	cmp	r3, #7
    35d4:	ldrls	pc, [pc, r3, lsl #2]
    35d8:	b	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    35dc:	.word	0x00003614
    35e0:	.word	0x0000360c
    35e4:	.word	0x00003604
    35e8:	.word	0x000035fc
    35ec:	.word	0x000035fc
    35f0:	.word	0x000035fc
    35f4:	.word	0x000033f8
    35f8:	.word	0x000033f8
    35fc:	mov	r3, #0
    3600:	b	3400 <MyGame_Example_Test_parse_json_struct_inline+0xf8>
    3604:	mov	r3, #0
    3608:	b	3408 <MyGame_Example_Test_parse_json_struct_inline+0x100>
    360c:	mov	r3, #0
    3610:	b	3410 <MyGame_Example_Test_parse_json_struct_inline+0x108>
    3614:	mov	r3, #0
    3618:	b	3418 <MyGame_Example_Test_parse_json_struct_inline+0x110>
    361c:	cmp	r2, #1
    3620:	ble	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3624:	ldr	r2, [r7, #12]
    3628:	ldrb	r3, [r4, #1]
    362c:	cmp	r2, r8
    3630:	beq	37f8 <MyGame_Example_Test_parse_json_struct_inline+0x4f0>
    3634:	cmp	r3, #58	; 0x3a
    3638:	cmpne	r3, #32
    363c:	movhi	r3, #1
    3640:	movls	r3, #0
    3644:	bhi	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3648:	add	r1, r4, #1
    364c:	str	r3, [r7, #12]
    3650:	sub	r3, r6, r1
    3654:	cmp	r3, #1
    3658:	ble	366c <MyGame_Example_Test_parse_json_struct_inline+0x364>
    365c:	ldrb	r3, [r1]
    3660:	cmp	r3, #32
    3664:	bhi	367c <MyGame_Example_Test_parse_json_struct_inline+0x374>
    3668:	beq	3984 <MyGame_Example_Test_parse_json_struct_inline+0x67c>
    366c:	mov	r2, r6
    3670:	mov	r0, r7
    3674:	bl	0 <flatcc_json_parser_space_ext>
    3678:	mov	r1, r0
    367c:	cmp	r6, r1
    3680:	beq	3690 <MyGame_Example_Test_parse_json_struct_inline+0x388>
    3684:	ldrb	r3, [r1]
    3688:	cmp	r3, #58	; 0x3a
    368c:	beq	39ac <MyGame_Example_Test_parse_json_struct_inline+0x6a4>
    3690:	mov	r3, #4
    3694:	mov	r2, r6
    3698:	mov	r0, r7
    369c:	bl	0 <flatcc_json_parser_set_error>
    36a0:	mov	sl, r0
    36a4:	cmp	sl, r4
    36a8:	beq	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    36ac:	mov	r3, #0
    36b0:	mov	r0, #0
    36b4:	mov	r1, #0
    36b8:	cmp	r6, sl
    36bc:	strb	r3, [sp, #10]
    36c0:	str	r3, [sp, #12]
    36c4:	strd	r0, [sp, #16]
    36c8:	beq	3818 <MyGame_Example_Test_parse_json_struct_inline+0x510>
    36cc:	add	r0, sp, #16
    36d0:	add	r3, sp, #12
    36d4:	mov	r2, r6
    36d8:	mov	r1, sl
    36dc:	str	r0, [sp]
    36e0:	mov	r0, r7
    36e4:	bl	0 <flatcc_json_parser_integer>
    36e8:	cmp	sl, r0
    36ec:	mov	r5, r0
    36f0:	bne	3844 <MyGame_Example_Test_parse_json_struct_inline+0x53c>
    36f4:	add	ip, sp, #10
    36f8:	ldr	r3, [pc, #924]	; 3a9c <MyGame_Example_Test_parse_json_struct_inline+0x794>
    36fc:	mov	r2, r6
    3700:	mov	r1, r5
    3704:	mov	r0, r7
    3708:	str	ip, [sp]
    370c:	bl	1f10 <flatcc_json_parser_symbolic_int8>
    3710:	cmp	r6, r0
    3714:	cmpne	r0, r5
    3718:	beq	3a50 <MyGame_Example_Test_parse_json_struct_inline+0x748>
    371c:	ldrsb	r2, [sp, #10]
    3720:	mov	r5, r0
    3724:	strb	r2, [fp, #2]
    3728:	b	354c <MyGame_Example_Test_parse_json_struct_inline+0x244>
    372c:	add	r1, r5, #1
    3730:	sub	r3, r6, r1
    3734:	cmp	r3, #1
    3738:	ble	3750 <MyGame_Example_Test_parse_json_struct_inline+0x448>
    373c:	ldrb	r3, [r5, #1]
    3740:	cmp	r3, #32
    3744:	movhi	r5, r1
    3748:	bhi	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    374c:	beq	38d0 <MyGame_Example_Test_parse_json_struct_inline+0x5c8>
    3750:	mov	r2, r6
    3754:	mov	r0, r7
    3758:	bl	0 <flatcc_json_parser_space_ext>
    375c:	mov	r5, r0
    3760:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3764:	ldrb	r3, [r5, #1]
    3768:	cmp	r3, #32
    376c:	addhi	r5, r5, #1
    3770:	bls	3568 <MyGame_Example_Test_parse_json_struct_inline+0x260>
    3774:	b	357c <MyGame_Example_Test_parse_json_struct_inline+0x274>
    3778:	add	r4, r5, #1
    377c:	sub	r3, r6, r4
    3780:	cmp	r3, #1
    3784:	ble	3798 <MyGame_Example_Test_parse_json_struct_inline+0x490>
    3788:	ldrb	r3, [r5, #1]
    378c:	cmp	r3, #32
    3790:	bhi	37ac <MyGame_Example_Test_parse_json_struct_inline+0x4a4>
    3794:	beq	3950 <MyGame_Example_Test_parse_json_struct_inline+0x648>
    3798:	mov	r1, r4
    379c:	mov	r2, r6
    37a0:	mov	r0, r7
    37a4:	bl	0 <flatcc_json_parser_space_ext>
    37a8:	mov	r4, r0
    37ac:	cmp	r6, r4
    37b0:	beq	3968 <MyGame_Example_Test_parse_json_struct_inline+0x660>
    37b4:	ldrb	r3, [r4]
    37b8:	cmp	r3, #125	; 0x7d
    37bc:	bne	33bc <MyGame_Example_Test_parse_json_struct_inline+0xb4>
    37c0:	add	r5, r4, #1
    37c4:	sub	r3, r6, r5
    37c8:	cmp	r3, #1
    37cc:	ble	37e0 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    37d0:	ldrb	r3, [r4, #1]
    37d4:	cmp	r3, #32
    37d8:	bhi	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    37dc:	beq	3a3c <MyGame_Example_Test_parse_json_struct_inline+0x734>
    37e0:	mov	r1, r5
    37e4:	mov	r2, r6
    37e8:	mov	r0, r7
    37ec:	bl	0 <flatcc_json_parser_space_ext>
    37f0:	mov	r5, r0
    37f4:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    37f8:	cmp	r3, #34	; 0x22
    37fc:	bne	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3800:	add	r1, r4, #2
    3804:	b	3650 <MyGame_Example_Test_parse_json_struct_inline+0x348>
    3808:	cmp	r3, #34	; 0x22
    380c:	bne	35b4 <MyGame_Example_Test_parse_json_struct_inline+0x2ac>
    3810:	add	r1, r4, #2
    3814:	b	3474 <MyGame_Example_Test_parse_json_struct_inline+0x16c>
    3818:	mov	r5, r6
    381c:	b	36f4 <MyGame_Example_Test_parse_json_struct_inline+0x3ec>
    3820:	mov	r5, r6
    3824:	b	3518 <MyGame_Example_Test_parse_json_struct_inline+0x210>
    3828:	mov	r1, r4
    382c:	mov	r3, #5
    3830:	mov	r2, r6
    3834:	mov	r0, r7
    3838:	bl	0 <flatcc_json_parser_set_error>
    383c:	mov	r4, r0
    3840:	b	33ec <MyGame_Example_Test_parse_json_struct_inline+0xe4>
    3844:	ldr	r1, [sp, #12]
    3848:	ldrd	r2, [sp, #16]
    384c:	cmp	r1, #0
    3850:	beq	38e4 <MyGame_Example_Test_parse_json_struct_inline+0x5dc>
    3854:	cmp	r3, #0
    3858:	cmpeq	r2, #128	; 0x80
    385c:	rsbls	r2, r2, #0
    3860:	sxtbls	r2, r2
    3864:	bls	3724 <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    3868:	mov	r1, r0
    386c:	mov	r3, #8
    3870:	mov	r2, r6
    3874:	mov	r0, r7
    3878:	bl	0 <flatcc_json_parser_set_error>
    387c:	mov	r5, r0
    3880:	b	390c <MyGame_Example_Test_parse_json_struct_inline+0x604>
    3884:	ldr	r1, [sp, #12]
    3888:	ldrd	r2, [sp, #16]
    388c:	cmp	r1, #0
    3890:	beq	391c <MyGame_Example_Test_parse_json_struct_inline+0x614>
    3894:	cmp	r3, #0
    3898:	cmpeq	r2, #32768	; 0x8000
    389c:	rsbls	r2, r2, #0
    38a0:	sxthls	r2, r2
    38a4:	bls	3548 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    38a8:	mov	r1, r0
    38ac:	mov	r3, #8
    38b0:	mov	r2, r6
    38b4:	mov	r0, r7
    38b8:	bl	0 <flatcc_json_parser_set_error>
    38bc:	mov	r5, r0
    38c0:	cmp	sl, r5
    38c4:	ldrshne	r2, [sp, #10]
    38c8:	bne	3548 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    38cc:	b	3518 <MyGame_Example_Test_parse_json_struct_inline+0x210>
    38d0:	ldrb	r3, [r5, #2]
    38d4:	cmp	r3, #32
    38d8:	addhi	r5, r5, #2
    38dc:	bls	3750 <MyGame_Example_Test_parse_json_struct_inline+0x448>
    38e0:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    38e4:	cmp	r3, #0
    38e8:	cmpeq	r2, #127	; 0x7f
    38ec:	sxtbls	r2, r2
    38f0:	bls	3724 <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    38f4:	mov	r1, r0
    38f8:	mov	r3, #7
    38fc:	mov	r2, r6
    3900:	mov	r0, r7
    3904:	bl	0 <flatcc_json_parser_set_error>
    3908:	mov	r5, r0
    390c:	cmp	sl, r5
    3910:	ldrsbne	r2, [sp, #10]
    3914:	bne	3724 <MyGame_Example_Test_parse_json_struct_inline+0x41c>
    3918:	b	36f4 <MyGame_Example_Test_parse_json_struct_inline+0x3ec>
    391c:	mov	r1, #0
    3920:	movw	r0, #32767	; 0x7fff
    3924:	cmp	r3, r1
    3928:	cmpeq	r2, r0
    392c:	sxthls	r2, r2
    3930:	bls	3548 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    3934:	mov	r1, r5
    3938:	mov	r3, #7
    393c:	mov	r2, r6
    3940:	mov	r0, r7
    3944:	bl	0 <flatcc_json_parser_set_error>
    3948:	mov	r5, r0
    394c:	b	38c0 <MyGame_Example_Test_parse_json_struct_inline+0x5b8>
    3950:	ldrb	r3, [r5, #2]
    3954:	cmp	r3, #32
    3958:	addhi	r4, r5, #2
    395c:	bls	3798 <MyGame_Example_Test_parse_json_struct_inline+0x490>
    3960:	cmp	r6, r4
    3964:	bne	37b4 <MyGame_Example_Test_parse_json_struct_inline+0x4ac>
    3968:	mov	r0, r7
    396c:	mov	r3, #10
    3970:	mov	r2, r6
    3974:	mov	r1, r6
    3978:	bl	0 <flatcc_json_parser_set_error>
    397c:	mov	r5, r0
    3980:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3984:	ldrb	r3, [r1, #1]
    3988:	cmp	r3, #32
    398c:	addhi	r1, r1, #1
    3990:	bls	366c <MyGame_Example_Test_parse_json_struct_inline+0x364>
    3994:	b	367c <MyGame_Example_Test_parse_json_struct_inline+0x374>
    3998:	ldrb	r3, [r1, #1]
    399c:	cmp	r3, #32
    39a0:	addhi	r1, r1, #1
    39a4:	bls	3490 <MyGame_Example_Test_parse_json_struct_inline+0x188>
    39a8:	b	34a0 <MyGame_Example_Test_parse_json_struct_inline+0x198>
    39ac:	add	sl, r1, #1
    39b0:	sub	r3, r6, sl
    39b4:	cmp	r3, #1
    39b8:	ble	39dc <MyGame_Example_Test_parse_json_struct_inline+0x6d4>
    39bc:	ldrb	r3, [r1, #1]
    39c0:	cmp	r3, #32
    39c4:	bhi	36a4 <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    39c8:	bne	39dc <MyGame_Example_Test_parse_json_struct_inline+0x6d4>
    39cc:	ldrb	r3, [r1, #2]
    39d0:	cmp	r3, #32
    39d4:	addhi	sl, r1, #2
    39d8:	bhi	36a4 <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    39dc:	mov	r1, sl
    39e0:	mov	r2, r6
    39e4:	mov	r0, r7
    39e8:	bl	0 <flatcc_json_parser_space_ext>
    39ec:	mov	sl, r0
    39f0:	b	36a4 <MyGame_Example_Test_parse_json_struct_inline+0x39c>
    39f4:	add	sl, r1, #1
    39f8:	sub	r3, r6, sl
    39fc:	cmp	r3, #1
    3a00:	ble	3a24 <MyGame_Example_Test_parse_json_struct_inline+0x71c>
    3a04:	ldrb	r3, [r1, #1]
    3a08:	cmp	r3, #32
    3a0c:	bhi	34c8 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    3a10:	bne	3a24 <MyGame_Example_Test_parse_json_struct_inline+0x71c>
    3a14:	ldrb	r3, [r1, #2]
    3a18:	cmp	r3, #32
    3a1c:	addhi	sl, r1, #2
    3a20:	bhi	34c8 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    3a24:	mov	r1, sl
    3a28:	mov	r2, r6
    3a2c:	mov	r0, r7
    3a30:	bl	0 <flatcc_json_parser_space_ext>
    3a34:	mov	sl, r0
    3a38:	b	34c8 <MyGame_Example_Test_parse_json_struct_inline+0x1c0>
    3a3c:	ldrb	r3, [r4, #2]
    3a40:	cmp	r3, #32
    3a44:	addhi	r5, r4, #2
    3a48:	bls	37e0 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    3a4c:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3a50:	mov	r1, r0
    3a54:	mov	r2, r6
    3a58:	mov	r0, r7
    3a5c:	mov	r3, #33	; 0x21
    3a60:	bl	0 <flatcc_json_parser_set_error>
    3a64:	mov	r5, r0
    3a68:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3a6c:	ldrb	r3, [r1, #2]
    3a70:	cmp	r3, #32
    3a74:	addhi	r4, r1, #2
    3a78:	bls	3394 <MyGame_Example_Test_parse_json_struct_inline+0x8c>
    3a7c:	b	33a8 <MyGame_Example_Test_parse_json_struct_inline+0xa0>
    3a80:	mov	r2, r6
    3a84:	add	r1, r4, #1
    3a88:	mov	r0, r7
    3a8c:	bl	8f0 <flatcc_json_parser_space>
    3a90:	mov	r5, r0
    3a94:	b	3354 <MyGame_Example_Test_parse_json_struct_inline+0x4c>
    3a98:	.word	0x00000018
    3a9c:	.word	0x0000000c

00003aa0 <MyGame_Example_Foo_parse_json_enum>:
    3aa0:	sub	ip, r2, r1
    3aa4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3aa8:	cmp	ip, #8
    3aac:	strd	r6, [sp, #8]
    3ab0:	strd	r8, [sp, #16]
    3ab4:	strd	sl, [sp, #24]
    3ab8:	str	lr, [sp, #32]
    3abc:	sub	sp, sp, #12
    3ac0:	bhi	3af4 <MyGame_Example_Foo_parse_json_enum+0x54>
    3ac4:	sub	ip, ip, #1
    3ac8:	cmp	ip, #7
    3acc:	ldrls	pc, [pc, ip, lsl #2]
    3ad0:	b	3ca4 <MyGame_Example_Foo_parse_json_enum+0x204>
    3ad4:	.word	0x00003c50
    3ad8:	.word	0x00003c5c
    3adc:	.word	0x00003c68
    3ae0:	.word	0x00003c74
    3ae4:	.word	0x00003c80
    3ae8:	.word	0x00003c8c
    3aec:	.word	0x00003c98
    3af0:	.word	0x00003af4
    3af4:	ldrb	r6, [r1, #7]
    3af8:	mov	r7, #0
    3afc:	mov	ip, r7
    3b00:	ldrb	r4, [r1, #6]
    3b04:	orr	r6, r6, r4, lsl #8
    3b08:	ldrb	r4, [r1, #5]
    3b0c:	orr	r6, r6, r4, lsl #16
    3b10:	ldrb	r4, [r1, #4]
    3b14:	orr	r6, r6, r4, lsl #24
    3b18:	ldrb	r4, [r1, #3]
    3b1c:	orr	ip, ip, r4
    3b20:	ldrb	r4, [r1, #2]
    3b24:	orr	ip, ip, r4, lsl #8
    3b28:	ldrb	r4, [r1, #1]
    3b2c:	orr	ip, ip, r4, lsl #16
    3b30:	mov	r5, r1
    3b34:	mov	r4, r2
    3b38:	mov	r2, r6
    3b3c:	ldrb	r6, [r5]
    3b40:	mov	sl, r0
    3b44:	mov	fp, r3
    3b48:	add	r1, pc, #352	; 0x160
    3b4c:	ldrd	r0, [r1]
    3b50:	orr	r3, ip, r6, lsl #24
    3b54:	mov	r6, #0
    3b58:	cmp	r3, r1
    3b5c:	cmpeq	r2, r0
    3b60:	beq	3bd4 <MyGame_Example_Foo_parse_json_enum+0x134>
    3b64:	add	r9, pc, #332	; 0x14c
    3b68:	ldrd	r8, [r9]
    3b6c:	cmp	r3, r9
    3b70:	cmpeq	r6, r8
    3b74:	beq	3b98 <MyGame_Example_Foo_parse_json_enum+0xf8>
    3b78:	mov	r0, r5
    3b7c:	add	sp, sp, #12
    3b80:	ldrd	r4, [sp]
    3b84:	ldrd	r6, [sp, #8]
    3b88:	ldrd	r8, [sp, #16]
    3b8c:	ldrd	sl, [sp, #24]
    3b90:	add	sp, sp, #32
    3b94:	pop	{pc}		; (ldr pc, [sp], #4)
    3b98:	ldr	r3, [sp, #52]	; 0x34
    3b9c:	mov	r2, r4
    3ba0:	mov	r0, sl
    3ba4:	mov	r1, r5
    3ba8:	str	r3, [sp]
    3bac:	mov	r3, #4
    3bb0:	bl	0 <flatcc_json_parser_match_constant>
    3bb4:	cmp	r5, r0
    3bb8:	beq	3b7c <MyGame_Example_Foo_parse_json_enum+0xdc>
    3bbc:	ldr	r1, [sp, #48]	; 0x30
    3bc0:	mov	r2, #0
    3bc4:	mov	r3, #0
    3bc8:	strd	r2, [r1]
    3bcc:	str	r6, [fp]
    3bd0:	b	3b7c <MyGame_Example_Foo_parse_json_enum+0xdc>
    3bd4:	mov	r1, r4
    3bd8:	add	r0, r5, #8
    3bdc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3be0:	add	r3, pc, #216	; 0xd8
    3be4:	ldrd	r2, [r3]
    3be8:	cmp	r1, r3
    3bec:	cmpeq	r0, r2
    3bf0:	bne	3b78 <MyGame_Example_Foo_parse_json_enum+0xd8>
    3bf4:	add	r7, r5, #16
    3bf8:	mov	r1, r4
    3bfc:	mov	r0, r7
    3c00:	bl	0 <flatcc_json_parser_symbol_part_ext>
    3c04:	and	r3, r1, #-16777216	; 0xff000000
    3c08:	cmp	r3, #1694498816	; 0x65000000
    3c0c:	cmpeq	r6, #0
    3c10:	bne	3b78 <MyGame_Example_Foo_parse_json_enum+0xd8>
    3c14:	ldr	r3, [sp, #52]	; 0x34
    3c18:	mov	r2, r4
    3c1c:	mov	r0, sl
    3c20:	mov	r1, r7
    3c24:	str	r3, [sp]
    3c28:	mov	r3, #1
    3c2c:	bl	0 <flatcc_json_parser_match_constant>
    3c30:	cmp	r7, r0
    3c34:	beq	3b78 <MyGame_Example_Foo_parse_json_enum+0xd8>
    3c38:	ldr	r1, [sp, #48]	; 0x30
    3c3c:	mov	r2, #1
    3c40:	mov	r3, #0
    3c44:	strd	r2, [r1]
    3c48:	str	r6, [fp]
    3c4c:	b	3b7c <MyGame_Example_Foo_parse_json_enum+0xdc>
    3c50:	mov	r6, #0
    3c54:	mov	ip, r6
    3c58:	b	3b30 <MyGame_Example_Foo_parse_json_enum+0x90>
    3c5c:	mov	r6, #0
    3c60:	mov	ip, r6
    3c64:	b	3b28 <MyGame_Example_Foo_parse_json_enum+0x88>
    3c68:	mov	r6, #0
    3c6c:	mov	ip, r6
    3c70:	b	3b20 <MyGame_Example_Foo_parse_json_enum+0x80>
    3c74:	mov	r6, #0
    3c78:	mov	ip, r6
    3c7c:	b	3b18 <MyGame_Example_Foo_parse_json_enum+0x78>
    3c80:	mov	r6, #0
    3c84:	mov	ip, r6
    3c88:	b	3b10 <MyGame_Example_Foo_parse_json_enum+0x70>
    3c8c:	mov	r6, #0
    3c90:	mov	ip, r6
    3c94:	b	3b08 <MyGame_Example_Foo_parse_json_enum+0x68>
    3c98:	mov	r6, #0
    3c9c:	mov	r7, #0
    3ca0:	b	3afc <MyGame_Example_Foo_parse_json_enum+0x5c>
    3ca4:	mov	r0, r1
    3ca8:	b	3b7c <MyGame_Example_Foo_parse_json_enum+0xdc>
    3cac:	nop	{0}
    3cb0:	.word	0x72656e74
    3cb4:	.word	0x496e5061
    3cb8:	.word	0x00000000
    3cbc:	.word	0x4e4f4e45
    3cc0:	.word	0x73706163
    3cc4:	.word	0x4e616d65

00003cc8 <MyGame_Example_neg_enum_parse_json_enum>:
    3cc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3ccc:	mov	r4, r1
    3cd0:	sub	r1, r2, r1
    3cd4:	cmp	r1, #8
    3cd8:	mov	r5, r3
    3cdc:	strd	r6, [sp, #8]
    3ce0:	strd	r8, [sp, #16]
    3ce4:	strd	sl, [sp, #24]
    3ce8:	str	lr, [sp, #32]
    3cec:	sub	sp, sp, #12
    3cf0:	bhi	3d24 <MyGame_Example_neg_enum_parse_json_enum+0x5c>
    3cf4:	sub	r1, r1, #1
    3cf8:	cmp	r1, #7
    3cfc:	ldrls	pc, [pc, r1, lsl #2]
    3d00:	b	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3d04:	.word	0x00003e7c
    3d08:	.word	0x00003ea0
    3d0c:	.word	0x00003eac
    3d10:	.word	0x00003eb8
    3d14:	.word	0x00003ec4
    3d18:	.word	0x00003e88
    3d1c:	.word	0x00003e94
    3d20:	.word	0x00003d24
    3d24:	ldrb	r6, [r4, #7]
    3d28:	mov	r7, #0
    3d2c:	mov	r1, r7
    3d30:	ldrb	r8, [r4, #6]
    3d34:	orr	r3, r6, r8, lsl #8
    3d38:	ldrb	r6, [r4, #5]
    3d3c:	orr	r3, r3, r6, lsl #16
    3d40:	ldrb	r6, [r4, #4]
    3d44:	orr	r3, r3, r6, lsl #24
    3d48:	ldrb	r6, [r4, #3]
    3d4c:	orr	r1, r1, r6
    3d50:	ldrb	r6, [r4, #2]
    3d54:	orr	r1, r1, r6, lsl #8
    3d58:	ldrb	r6, [r4, #1]
    3d5c:	orr	r1, r1, r6, lsl #16
    3d60:	ldrb	r8, [r4]
    3d64:	add	fp, pc, #356	; 0x164
    3d68:	ldrd	sl, [fp]
    3d6c:	orr	r7, r1, r8, lsl #24
    3d70:	mov	r8, #0
    3d74:	cmp	r7, fp
    3d78:	mov	r9, r7
    3d7c:	cmpeq	r3, sl
    3d80:	bls	3dcc <MyGame_Example_neg_enum_parse_json_enum+0x104>
    3d84:	add	r7, pc, #332	; 0x14c
    3d88:	ldrd	r6, [r7]
    3d8c:	cmp	r9, r7
    3d90:	cmpeq	r8, r6
    3d94:	beq	3e58 <MyGame_Example_neg_enum_parse_json_enum+0x190>
    3d98:	add	r7, pc, #320	; 0x140
    3d9c:	ldrd	r6, [r7]
    3da0:	cmp	r9, r7
    3da4:	cmpeq	r8, r6
    3da8:	beq	3e1c <MyGame_Example_neg_enum_parse_json_enum+0x154>
    3dac:	mov	r0, r4
    3db0:	add	sp, sp, #12
    3db4:	ldrd	r4, [sp]
    3db8:	ldrd	r6, [sp, #8]
    3dbc:	ldrd	r8, [sp, #16]
    3dc0:	ldrd	sl, [sp, #24]
    3dc4:	add	sp, sp, #32
    3dc8:	pop	{pc}		; (ldr pc, [sp], #4)
    3dcc:	add	r7, pc, #276	; 0x114
    3dd0:	ldrd	r6, [r7]
    3dd4:	cmp	r9, r7
    3dd8:	cmpeq	r8, r6
    3ddc:	bne	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3de0:	ldr	r3, [sp, #52]	; 0x34
    3de4:	mov	r1, r4
    3de8:	str	r3, [sp]
    3dec:	mov	r3, #4
    3df0:	bl	0 <flatcc_json_parser_match_constant>
    3df4:	cmp	r4, r0
    3df8:	mvnne	r6, #11
    3dfc:	beq	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3e00:	ldr	r2, [sp, #48]	; 0x30
    3e04:	mvn	r7, #0
    3e08:	mov	r3, #1
    3e0c:	mov	r4, r0
    3e10:	strd	r6, [r2]
    3e14:	str	r3, [r5]
    3e18:	b	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3e1c:	ldr	r3, [sp, #52]	; 0x34
    3e20:	mov	r1, r4
    3e24:	str	r3, [sp]
    3e28:	mov	r3, #4
    3e2c:	bl	0 <flatcc_json_parser_match_constant>
    3e30:	cmp	r4, r0
    3e34:	beq	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3e38:	ldr	r2, [sp, #48]	; 0x30
    3e3c:	mov	r4, r0
    3e40:	mvn	r1, #0
    3e44:	mvn	r0, #10
    3e48:	mov	r3, #1
    3e4c:	strd	r0, [r2]
    3e50:	str	r3, [r5]
    3e54:	b	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3e58:	ldr	r3, [sp, #52]	; 0x34
    3e5c:	mov	r1, r4
    3e60:	str	r3, [sp]
    3e64:	mov	r3, #4
    3e68:	bl	0 <flatcc_json_parser_match_constant>
    3e6c:	cmp	r4, r0
    3e70:	beq	3dac <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    3e74:	mvn	r6, #9
    3e78:	b	3e00 <MyGame_Example_neg_enum_parse_json_enum+0x138>
    3e7c:	mov	r3, #0
    3e80:	mov	r1, r3
    3e84:	b	3d60 <MyGame_Example_neg_enum_parse_json_enum+0x98>
    3e88:	mov	r3, #0
    3e8c:	mov	r1, r3
    3e90:	b	3d38 <MyGame_Example_neg_enum_parse_json_enum+0x70>
    3e94:	mov	r6, #0
    3e98:	mov	r7, #0
    3e9c:	b	3d2c <MyGame_Example_neg_enum_parse_json_enum+0x64>
    3ea0:	mov	r3, #0
    3ea4:	mov	r1, r3
    3ea8:	b	3d58 <MyGame_Example_neg_enum_parse_json_enum+0x90>
    3eac:	mov	r3, #0
    3eb0:	mov	r1, r3
    3eb4:	b	3d50 <MyGame_Example_neg_enum_parse_json_enum+0x88>
    3eb8:	mov	r3, #0
    3ebc:	mov	r1, r3
    3ec0:	b	3d48 <MyGame_Example_neg_enum_parse_json_enum+0x80>
    3ec4:	mov	r3, #0
    3ec8:	mov	r1, r3
    3ecc:	b	3d40 <MyGame_Example_neg_enum_parse_json_enum+0x78>
    3ed0:	.word	0xffffffff
    3ed4:	.word	0x6e656731
    3ed8:	.word	0x00000000
    3edc:	.word	0x6e656733
    3ee0:	.word	0x00000000
    3ee4:	.word	0x6e656732
    3ee8:	.word	0x00000000
    3eec:	.word	0x6e656731

00003ef0 <MyGame_Example_hex_enum_parse_json_enum>:
    3ef0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3ef4:	mov	r4, r1
    3ef8:	sub	r1, r2, r1
    3efc:	cmp	r1, #8
    3f00:	mov	ip, r0
    3f04:	strd	r6, [sp, #8]
    3f08:	strd	r8, [sp, #16]
    3f0c:	str	sl, [sp, #24]
    3f10:	mov	sl, r3
    3f14:	str	lr, [sp, #28]
    3f18:	sub	sp, sp, #8
    3f1c:	bhi	3f50 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    3f20:	sub	r1, r1, #1
    3f24:	cmp	r1, #7
    3f28:	ldrls	pc, [pc, r1, lsl #2]
    3f2c:	b	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    3f30:	.word	0x000040c8
    3f34:	.word	0x000040ec
    3f38:	.word	0x000040f8
    3f3c:	.word	0x00004104
    3f40:	.word	0x00004110
    3f44:	.word	0x000040d4
    3f48:	.word	0x000040e0
    3f4c:	.word	0x00003f50
    3f50:	ldrb	r0, [r4, #7]
    3f54:	mov	r1, #0
    3f58:	mov	lr, r1
    3f5c:	ldrb	r6, [r4, #6]
    3f60:	orr	r3, r0, r6, lsl #8
    3f64:	ldrb	r0, [r4, #5]
    3f68:	orr	r3, r3, r0, lsl #16
    3f6c:	ldrb	r0, [r4, #4]
    3f70:	orr	r3, r3, r0, lsl #24
    3f74:	ldrb	r0, [r4, #3]
    3f78:	orr	lr, lr, r0
    3f7c:	ldrb	r0, [r4, #2]
    3f80:	orr	lr, lr, r0, lsl #8
    3f84:	ldrb	r0, [r4, #1]
    3f88:	orr	lr, lr, r0, lsl #16
    3f8c:	ldrb	r6, [r4]
    3f90:	mov	r5, #0
    3f94:	add	r9, pc, #388	; 0x184
    3f98:	ldrd	r8, [r9]
    3f9c:	orr	r1, lr, r6, lsl #24
    3fa0:	cmp	r1, r9
    3fa4:	cmpeq	r3, r8
    3fa8:	bls	3ffc <MyGame_Example_hex_enum_parse_json_enum+0x10c>
    3fac:	add	r9, pc, #372	; 0x174
    3fb0:	ldrd	r8, [r9]
    3fb4:	lsr	r6, r3, #16
    3fb8:	lsl	r6, r6, #16
    3fbc:	cmp	r1, r9
    3fc0:	cmpeq	r6, r8
    3fc4:	beq	4088 <MyGame_Example_hex_enum_parse_json_enum+0x198>
    3fc8:	add	r9, pc, #352	; 0x160
    3fcc:	ldrd	r8, [r9]
    3fd0:	cmp	r1, r9
    3fd4:	cmpeq	r5, r8
    3fd8:	beq	404c <MyGame_Example_hex_enum_parse_json_enum+0x15c>
    3fdc:	mov	r0, r4
    3fe0:	add	sp, sp, #8
    3fe4:	ldrd	r4, [sp]
    3fe8:	ldrd	r6, [sp, #8]
    3fec:	ldrd	r8, [sp, #16]
    3ff0:	ldr	sl, [sp, #24]
    3ff4:	add	sp, sp, #28
    3ff8:	pop	{pc}		; (ldr pc, [sp], #4)
    3ffc:	add	r9, pc, #308	; 0x134
    4000:	ldrd	r8, [r9]
    4004:	cmp	r1, r9
    4008:	cmpeq	r5, r8
    400c:	bne	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    4010:	ldr	r3, [sp, #44]	; 0x2c
    4014:	mov	r0, ip
    4018:	mov	r1, r4
    401c:	str	r3, [sp]
    4020:	mov	r3, #4
    4024:	bl	0 <flatcc_json_parser_match_constant>
    4028:	cmp	r4, r0
    402c:	beq	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    4030:	ldr	r1, [sp, #40]	; 0x28
    4034:	mov	r2, #3
    4038:	mov	r3, #0
    403c:	mov	r4, r0
    4040:	strd	r2, [r1]
    4044:	str	r5, [sl]
    4048:	b	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    404c:	ldr	r3, [sp, #44]	; 0x2c
    4050:	mov	r0, ip
    4054:	mov	r1, r4
    4058:	str	r3, [sp]
    405c:	mov	r3, #4
    4060:	bl	0 <flatcc_json_parser_match_constant>
    4064:	cmp	r4, r0
    4068:	beq	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    406c:	add	r3, pc, #204	; 0xcc
    4070:	ldrd	r2, [r3]
    4074:	mov	r4, r0
    4078:	ldr	r1, [sp, #40]	; 0x28
    407c:	strd	r2, [r1]
    4080:	str	r5, [sl]
    4084:	b	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    4088:	ldr	r3, [sp, #44]	; 0x2c
    408c:	mov	r0, ip
    4090:	mov	r1, r4
    4094:	str	r3, [sp]
    4098:	mov	r3, #6
    409c:	bl	0 <flatcc_json_parser_match_constant>
    40a0:	cmp	r4, r0
    40a4:	beq	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    40a8:	ldr	r2, [sp, #40]	; 0x28
    40ac:	mvn	r6, #1
    40b0:	mvn	r7, #0
    40b4:	mov	r3, #1
    40b8:	mov	r4, r0
    40bc:	strd	r6, [r2]
    40c0:	str	r3, [sl]
    40c4:	b	3fdc <MyGame_Example_hex_enum_parse_json_enum+0xec>
    40c8:	mov	r3, #0
    40cc:	mov	lr, r3
    40d0:	b	3f8c <MyGame_Example_hex_enum_parse_json_enum+0x9c>
    40d4:	mov	r3, #0
    40d8:	mov	lr, r3
    40dc:	b	3f64 <MyGame_Example_hex_enum_parse_json_enum+0x74>
    40e0:	mov	r0, #0
    40e4:	mov	r1, #0
    40e8:	b	3f58 <MyGame_Example_hex_enum_parse_json_enum+0x68>
    40ec:	mov	r3, #0
    40f0:	mov	lr, r3
    40f4:	b	3f84 <MyGame_Example_hex_enum_parse_json_enum+0x94>
    40f8:	mov	r3, #0
    40fc:	mov	lr, r3
    4100:	b	3f7c <MyGame_Example_hex_enum_parse_json_enum+0x8c>
    4104:	mov	r3, #0
    4108:	mov	lr, r3
    410c:	b	3f74 <MyGame_Example_hex_enum_parse_json_enum+0x84>
    4110:	mov	r3, #0
    4114:	mov	lr, r3
    4118:	b	3f6c <MyGame_Example_hex_enum_parse_json_enum+0x7c>
    411c:	nop	{0}
    4120:	.word	0xffffffff
    4124:	.word	0x68657831
    4128:	.word	0x65670000
    412c:	.word	0x6865786e
    4130:	.word	0x00000000
    4134:	.word	0x68657832
    4138:	.word	0x00000000
    413c:	.word	0x68657831
    4140:	.word	0x7eafbeaf
    4144:	.word	0x00000000

00004148 <MyGame_Example_Color_parse_json_enum>:
    4148:	strd	r4, [sp, #-32]!	; 0xffffffe0
    414c:	mov	r4, r1
    4150:	sub	r1, r2, r1
    4154:	cmp	r1, #8
    4158:	mov	ip, r0
    415c:	strd	r6, [sp, #8]
    4160:	strd	r8, [sp, #16]
    4164:	str	sl, [sp, #24]
    4168:	mov	sl, r3
    416c:	str	lr, [sp, #28]
    4170:	sub	sp, sp, #8
    4174:	bhi	41a8 <MyGame_Example_Color_parse_json_enum+0x60>
    4178:	sub	r1, r1, #1
    417c:	cmp	r1, #7
    4180:	ldrls	pc, [pc, r1, lsl #2]
    4184:	b	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    4188:	.word	0x00004308
    418c:	.word	0x0000432c
    4190:	.word	0x00004338
    4194:	.word	0x00004344
    4198:	.word	0x00004350
    419c:	.word	0x00004314
    41a0:	.word	0x00004320
    41a4:	.word	0x000041a8
    41a8:	ldrb	r0, [r4, #7]
    41ac:	mov	r1, #0
    41b0:	mov	lr, r1
    41b4:	ldrb	r6, [r4, #6]
    41b8:	orr	r3, r0, r6, lsl #8
    41bc:	ldrb	r0, [r4, #5]
    41c0:	orr	r3, r3, r0, lsl #16
    41c4:	ldrb	r0, [r4, #4]
    41c8:	orr	r3, r3, r0, lsl #24
    41cc:	ldrb	r0, [r4, #3]
    41d0:	orr	lr, lr, r0
    41d4:	ldrb	r0, [r4, #2]
    41d8:	orr	lr, lr, r0, lsl #8
    41dc:	ldrb	r0, [r4, #1]
    41e0:	orr	lr, lr, r0, lsl #16
    41e4:	ldrb	r6, [r4]
    41e8:	mov	r5, #0
    41ec:	add	r9, pc, #364	; 0x16c
    41f0:	ldrd	r8, [r9]
    41f4:	orr	r1, lr, r6, lsl #24
    41f8:	cmp	r1, r9
    41fc:	cmpeq	r3, r8
    4200:	bls	4254 <MyGame_Example_Color_parse_json_enum+0x10c>
    4204:	add	r9, pc, #348	; 0x15c
    4208:	ldrd	r8, [r9]
    420c:	bic	r7, r1, #255	; 0xff
    4210:	cmp	r7, r9
    4214:	cmpeq	r5, r8
    4218:	beq	42e0 <MyGame_Example_Color_parse_json_enum+0x198>
    421c:	add	r9, pc, #332	; 0x14c
    4220:	ldrd	r8, [r9]
    4224:	and	r6, r3, #-16777216	; 0xff000000
    4228:	cmp	r1, r9
    422c:	cmpeq	r6, r8
    4230:	beq	42a4 <MyGame_Example_Color_parse_json_enum+0x15c>
    4234:	mov	r0, r4
    4238:	add	sp, sp, #8
    423c:	ldrd	r4, [sp]
    4240:	ldrd	r6, [sp, #8]
    4244:	ldrd	r8, [sp, #16]
    4248:	ldr	sl, [sp, #24]
    424c:	add	sp, sp, #28
    4250:	pop	{pc}		; (ldr pc, [sp], #4)
    4254:	add	r9, pc, #284	; 0x11c
    4258:	ldrd	r8, [r9]
    425c:	cmp	r1, r9
    4260:	cmpeq	r5, r8
    4264:	bne	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    4268:	ldr	r3, [sp, #44]	; 0x2c
    426c:	mov	r0, ip
    4270:	mov	r1, r4
    4274:	str	r3, [sp]
    4278:	mov	r3, #4
    427c:	bl	0 <flatcc_json_parser_match_constant>
    4280:	cmp	r4, r0
    4284:	movne	r2, #8
    4288:	beq	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    428c:	ldr	r1, [sp, #40]	; 0x28
    4290:	mov	r3, #0
    4294:	mov	r4, r0
    4298:	strd	r2, [r1]
    429c:	str	r5, [sl]
    42a0:	b	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    42a4:	ldr	r3, [sp, #44]	; 0x2c
    42a8:	mov	r0, ip
    42ac:	mov	r1, r4
    42b0:	str	r3, [sp]
    42b4:	mov	r3, #5
    42b8:	bl	0 <flatcc_json_parser_match_constant>
    42bc:	cmp	r4, r0
    42c0:	beq	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    42c4:	ldr	r1, [sp, #40]	; 0x28
    42c8:	mov	r2, #2
    42cc:	mov	r3, #0
    42d0:	mov	r4, r0
    42d4:	strd	r2, [r1]
    42d8:	str	r5, [sl]
    42dc:	b	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    42e0:	ldr	r3, [sp, #44]	; 0x2c
    42e4:	mov	r0, ip
    42e8:	mov	r1, r4
    42ec:	str	r3, [sp]
    42f0:	mov	r3, #3
    42f4:	bl	0 <flatcc_json_parser_match_constant>
    42f8:	cmp	r4, r0
    42fc:	beq	4234 <MyGame_Example_Color_parse_json_enum+0xec>
    4300:	mov	r2, #1
    4304:	b	428c <MyGame_Example_Color_parse_json_enum+0x144>
    4308:	mov	r3, #0
    430c:	mov	lr, r3
    4310:	b	41e4 <MyGame_Example_Color_parse_json_enum+0x9c>
    4314:	mov	r3, #0
    4318:	mov	lr, r3
    431c:	b	41bc <MyGame_Example_Color_parse_json_enum+0x74>
    4320:	mov	r0, #0
    4324:	mov	r1, #0
    4328:	b	41b0 <MyGame_Example_Color_parse_json_enum+0x68>
    432c:	mov	r3, #0
    4330:	mov	lr, r3
    4334:	b	41dc <MyGame_Example_Color_parse_json_enum+0x94>
    4338:	mov	r3, #0
    433c:	mov	lr, r3
    4340:	b	41d4 <MyGame_Example_Color_parse_json_enum+0x8c>
    4344:	mov	r3, #0
    4348:	mov	lr, r3
    434c:	b	41cc <MyGame_Example_Color_parse_json_enum+0x84>
    4350:	mov	r3, #0
    4354:	mov	lr, r3
    4358:	b	41c4 <MyGame_Example_Color_parse_json_enum+0x7c>
    435c:	nop	{0}
    4360:	.word	0x6dffffff
    4364:	.word	0x47726565
    4368:	.word	0x00000000
    436c:	.word	0x52656400
    4370:	.word	0x6e000000
    4374:	.word	0x47726565
    4378:	.word	0x00000000
    437c:	.word	0x426c7565

00004380 <monster_test_global_json_parser_enum>:
    4380:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4384:	mov	r4, r1
    4388:	mov	r1, r2
    438c:	strd	r6, [sp, #8]
    4390:	mov	r5, r2
    4394:	strd	r8, [sp, #16]
    4398:	mov	r8, r0
    439c:	mov	r0, r4
    43a0:	strd	sl, [sp, #24]
    43a4:	mov	sl, r3
    43a8:	str	lr, [sp, #32]
    43ac:	sub	sp, sp, #20
    43b0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    43b4:	add	r3, pc, #924	; 0x39c
    43b8:	ldrd	r2, [r3]
    43bc:	ldr	r7, [sp, #56]	; 0x38
    43c0:	ldr	fp, [sp, #60]	; 0x3c
    43c4:	cmp	r1, r3
    43c8:	cmpeq	r0, r2
    43cc:	bhi	4470 <monster_test_global_json_parser_enum+0xf0>
    43d0:	add	r3, pc, #904	; 0x388
    43d4:	ldrd	r2, [r3]
    43d8:	cmp	r1, r3
    43dc:	cmpeq	r0, r2
    43e0:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    43e4:	mov	r1, r5
    43e8:	add	r0, r4, #8
    43ec:	bl	0 <flatcc_json_parser_symbol_part_ext>
    43f0:	add	r3, pc, #880	; 0x370
    43f4:	ldrd	r2, [r3]
    43f8:	cmp	r1, r3
    43fc:	cmpeq	r0, r2
    4400:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4404:	add	r6, r4, #16
    4408:	mov	r1, r5
    440c:	mov	r0, r6
    4410:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4414:	and	r3, r1, #-16777216	; 0xff000000
    4418:	mov	r2, #0
    441c:	cmp	r3, #1912602624	; 0x72000000
    4420:	cmpeq	r2, #0
    4424:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4428:	sub	r6, r5, r6
    442c:	cmp	r6, #1
    4430:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4434:	ldrb	r3, [r4, #17]
    4438:	cmp	r3, #46	; 0x2e
    443c:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4440:	mov	r3, sl
    4444:	mov	r2, r5
    4448:	add	r1, r4, #18
    444c:	mov	r0, r8
    4450:	add	sp, sp, #20
    4454:	ldrd	r4, [sp]
    4458:	ldrd	r6, [sp, #8]
    445c:	ldrd	r8, [sp, #16]
    4460:	ldrd	sl, [sp, #24]
    4464:	ldr	lr, [sp, #32]
    4468:	add	sp, sp, #36	; 0x24
    446c:	b	144 <Fantasy_Character_parse_json_enum>
    4470:	add	r3, pc, #760	; 0x2f8
    4474:	ldrd	r2, [r3]
    4478:	cmp	r1, r3
    447c:	cmpeq	r0, r2
    4480:	beq	45d0 <monster_test_global_json_parser_enum+0x250>
    4484:	add	r3, pc, #748	; 0x2ec
    4488:	ldrd	r2, [r3]
    448c:	cmp	r1, r3
    4490:	cmpeq	r0, r2
    4494:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4498:	mov	r1, r5
    449c:	add	r0, r4, #8
    44a0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    44a4:	add	r3, pc, #724	; 0x2d4
    44a8:	ldrd	r2, [r3]
    44ac:	cmp	r1, r3
    44b0:	cmpeq	r0, r2
    44b4:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    44b8:	mov	r1, r5
    44bc:	add	r0, r4, #16
    44c0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    44c4:	add	r3, pc, #700	; 0x2bc
    44c8:	ldrd	r2, [r3]
    44cc:	cmp	r1, r3
    44d0:	cmpeq	r0, r2
    44d4:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    44d8:	mov	r1, r5
    44dc:	add	r0, r4, #24
    44e0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    44e4:	add	r3, pc, #676	; 0x2a4
    44e8:	ldrd	r2, [r3]
    44ec:	cmp	r1, r3
    44f0:	cmpeq	r0, r2
    44f4:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    44f8:	add	r6, r4, #32
    44fc:	mov	r1, r5
    4500:	mov	r0, r6
    4504:	mov	r9, #0
    4508:	bl	0 <flatcc_json_parser_symbol_part_ext>
    450c:	and	r3, r1, #-16777216	; 0xff000000
    4510:	cmp	r3, #1694498816	; 0x65000000
    4514:	cmpeq	r9, #0
    4518:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    451c:	sub	r6, r5, r6
    4520:	cmp	r6, #1
    4524:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4528:	ldrb	r3, [r4, #33]	; 0x21
    452c:	cmp	r3, #46	; 0x2e
    4530:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4534:	add	r6, r4, #34	; 0x22
    4538:	mov	r1, r5
    453c:	mov	r0, r6
    4540:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4544:	bic	r3, r1, #255	; 0xff
    4548:	strd	r0, [sp, #8]
    454c:	add	r1, pc, #580	; 0x244
    4550:	ldrd	r0, [r1]
    4554:	cmp	r3, r1
    4558:	cmpeq	r9, r0
    455c:	beq	4ad4 <monster_test_global_json_parser_enum+0x754>
    4560:	add	r3, pc, #568	; 0x238
    4564:	ldrd	r2, [r3]
    4568:	ldrd	r0, [sp, #8]
    456c:	cmp	r1, r3
    4570:	cmpeq	r0, r2
    4574:	bne	45ac <monster_test_global_json_parser_enum+0x22c>
    4578:	add	r9, r4, #42	; 0x2a
    457c:	mov	r1, r5
    4580:	mov	r0, r9
    4584:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4588:	lsr	r3, r1, #16
    458c:	mov	r1, #0
    4590:	movt	r1, #24940	; 0x616c
    4594:	mov	r2, #0
    4598:	mov	r0, #0
    459c:	lsl	r3, r3, #16
    45a0:	cmp	r3, r1
    45a4:	cmpeq	r2, r0
    45a8:	beq	4b0c <monster_test_global_json_parser_enum+0x78c>
    45ac:	mov	r4, r6
    45b0:	mov	r0, r4
    45b4:	add	sp, sp, #20
    45b8:	ldrd	r4, [sp]
    45bc:	ldrd	r6, [sp, #8]
    45c0:	ldrd	r8, [sp, #16]
    45c4:	ldrd	sl, [sp, #24]
    45c8:	add	sp, sp, #32
    45cc:	pop	{pc}		; (ldr pc, [sp], #4)
    45d0:	mov	r1, r5
    45d4:	add	r0, r4, #8
    45d8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    45dc:	add	r3, pc, #452	; 0x1c4
    45e0:	ldrd	r2, [r3]
    45e4:	cmp	r1, r3
    45e8:	cmpeq	r0, r2
    45ec:	bhi	46a8 <monster_test_global_json_parser_enum+0x328>
    45f0:	add	r3, pc, #440	; 0x1b8
    45f4:	ldrd	r2, [r3]
    45f8:	cmp	r1, r3
    45fc:	cmpeq	r0, r2
    4600:	bls	4890 <monster_test_global_json_parser_enum+0x510>
    4604:	add	r3, pc, #428	; 0x1ac
    4608:	ldrd	r2, [r3]
    460c:	cmp	r1, r3
    4610:	cmpeq	r0, r2
    4614:	beq	49ac <monster_test_global_json_parser_enum+0x62c>
    4618:	add	r3, pc, #416	; 0x1a0
    461c:	ldrd	r2, [r3]
    4620:	cmp	r1, r3
    4624:	cmpeq	r0, r2
    4628:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    462c:	add	r9, r4, #16
    4630:	mov	r1, r5
    4634:	mov	r0, r9
    4638:	mov	r7, #0
    463c:	movt	r7, #28527	; 0x6f6f
    4640:	mov	r6, #0
    4644:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4648:	lsr	r3, r1, #16
    464c:	mov	r2, #0
    4650:	lsl	r3, r3, #16
    4654:	cmp	r3, r7
    4658:	cmpeq	r2, r6
    465c:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4660:	sub	r9, r5, r9
    4664:	cmp	r9, #2
    4668:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    466c:	ldrb	r3, [r4, #18]
    4670:	cmp	r3, #46	; 0x2e
    4674:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4678:	mov	r3, sl
    467c:	mov	r2, r5
    4680:	add	r1, r4, #19
    4684:	mov	r0, r8
    4688:	add	sp, sp, #20
    468c:	ldrd	r4, [sp]
    4690:	ldrd	r6, [sp, #8]
    4694:	ldrd	r8, [sp, #16]
    4698:	ldrd	sl, [sp, #24]
    469c:	ldr	lr, [sp, #32]
    46a0:	add	sp, sp, #36	; 0x24
    46a4:	b	3aa0 <MyGame_Example_Foo_parse_json_enum>
    46a8:	add	r3, pc, #280	; 0x118
    46ac:	ldrd	r2, [r3]
    46b0:	cmp	r1, r3
    46b4:	cmpeq	r0, r2
    46b8:	beq	4820 <monster_test_global_json_parser_enum+0x4a0>
    46bc:	add	r3, pc, #268	; 0x10c
    46c0:	ldrd	r2, [r3]
    46c4:	cmp	r1, r3
    46c8:	cmpeq	r0, r2
    46cc:	bhi	4920 <monster_test_global_json_parser_enum+0x5a0>
    46d0:	add	r3, pc, #256	; 0x100
    46d4:	ldrd	r2, [r3]
    46d8:	cmp	r1, r3
    46dc:	cmpeq	r0, r2
    46e0:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    46e4:	add	r7, pc, #244	; 0xf4
    46e8:	ldrd	r6, [r7]
    46ec:	add	r9, r4, #16
    46f0:	mov	r1, r5
    46f4:	mov	r0, r9
    46f8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    46fc:	bic	r2, r0, #255	; 0xff
    4700:	cmp	r1, r7
    4704:	cmpeq	r2, r6
    4708:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    470c:	sub	r9, r5, r9
    4710:	cmp	r9, #7
    4714:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4718:	ldrb	r3, [r4, #23]
    471c:	cmp	r3, #46	; 0x2e
    4720:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4724:	mov	r3, sl
    4728:	mov	r2, r5
    472c:	add	r1, r4, #24
    4730:	mov	r0, r8
    4734:	add	sp, sp, #20
    4738:	ldrd	r4, [sp]
    473c:	ldrd	r6, [sp, #8]
    4740:	ldrd	r8, [sp, #16]
    4744:	ldrd	sl, [sp, #24]
    4748:	ldr	lr, [sp, #32]
    474c:	add	sp, sp, #36	; 0x24
    4750:	b	6e8 <MyGame_Example_int_enum_parse_json_enum>
    4754:	nop	{0}
    4758:	.word	0x6d652e44
    475c:	.word	0x4d794761
    4760:	.word	0x6173792e
    4764:	.word	0x46616e74
    4768:	.word	0x61637465
    476c:	.word	0x43686172
    4770:	.word	0x6d652e45
    4774:	.word	0x4d794761
    4778:	.word	0x6d652e4f
    477c:	.word	0x4d794761
    4780:	.word	0x4e616d65
    4784:	.word	0x74686572
    4788:	.word	0x652e4672
    478c:	.word	0x53706163
    4790:	.word	0x636c7564
    4794:	.word	0x6f6d496e
    4798:	.word	0x00000000
    479c:	.word	0x466f6f00
    47a0:	.word	0x75646556
    47a4:	.word	0x496e636c
    47a8:	.word	0x6c652e67
    47ac:	.word	0x78616d70
    47b0:	.word	0x6c652e42
    47b4:	.word	0x78616d70
    47b8:	.word	0x6c652e43
    47bc:	.word	0x78616d70
    47c0:	.word	0x6c652e46
    47c4:	.word	0x78616d70
    47c8:	.word	0x6c652e68
    47cc:	.word	0x78616d70
    47d0:	.word	0x6c652e6d
    47d4:	.word	0x78616d70
    47d8:	.word	0x6c652e69
    47dc:	.word	0x78616d70
    47e0:	.word	0x6e756d00
    47e4:	.word	0x6e745f65
    47e8:	.word	0x6e756d00
    47ec:	.word	0x65785f65
    47f0:	.word	0x6c652e41
    47f4:	.word	0x78616d70
    47f8:	.word	0x6c652e6e
    47fc:	.word	0x78616d70
    4800:	.word	0x6e756d00
    4804:	.word	0x65675f65
    4808:	.word	0x00000000
    480c:	.word	0x6f6c6f72
    4810:	.word	0x70747965
    4814:	.word	0x6f74656d
    4818:	.word	0x00000000
    481c:	.word	0x6e756d00
    4820:	sub	r7, pc, #64	; 0x40
    4824:	ldrd	r6, [r7]
    4828:	add	r9, r4, #16
    482c:	mov	r1, r5
    4830:	mov	r0, r9
    4834:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4838:	bic	r2, r0, #255	; 0xff
    483c:	cmp	r1, r7
    4840:	cmpeq	r2, r6
    4844:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4848:	sub	r9, r5, r9
    484c:	cmp	r9, #7
    4850:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4854:	ldrb	r3, [r4, #23]
    4858:	cmp	r3, #46	; 0x2e
    485c:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4860:	mov	r3, sl
    4864:	mov	r2, r5
    4868:	add	r1, r4, #24
    486c:	mov	r0, r8
    4870:	add	sp, sp, #20
    4874:	ldrd	r4, [sp]
    4878:	ldrd	r6, [sp, #8]
    487c:	ldrd	r8, [sp, #16]
    4880:	ldrd	sl, [sp, #24]
    4884:	ldr	lr, [sp, #32]
    4888:	add	sp, sp, #36	; 0x24
    488c:	b	3ef0 <MyGame_Example_hex_enum_parse_json_enum>
    4890:	sub	r3, pc, #168	; 0xa8
    4894:	ldrd	r2, [r3]
    4898:	cmp	r1, r3
    489c:	cmpeq	r0, r2
    48a0:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    48a4:	add	r9, r4, #16
    48a8:	mov	r1, r5
    48ac:	mov	r0, r9
    48b0:	mov	r7, #0
    48b4:	movt	r7, #28281	; 0x6e79
    48b8:	mov	r6, #0
    48bc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    48c0:	lsr	r3, r1, #16
    48c4:	mov	r2, #0
    48c8:	lsl	r3, r3, #16
    48cc:	cmp	r3, r7
    48d0:	cmpeq	r2, r6
    48d4:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    48d8:	sub	r9, r5, r9
    48dc:	cmp	r9, #2
    48e0:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    48e4:	ldrb	r3, [r4, #18]
    48e8:	cmp	r3, #46	; 0x2e
    48ec:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    48f0:	mov	r3, sl
    48f4:	mov	r2, r5
    48f8:	add	r1, r4, #19
    48fc:	mov	r0, r8
    4900:	add	sp, sp, #20
    4904:	ldrd	r4, [sp]
    4908:	ldrd	r6, [sp, #8]
    490c:	ldrd	r8, [sp, #16]
    4910:	ldrd	sl, [sp, #24]
    4914:	ldr	lr, [sp, #32]
    4918:	add	sp, sp, #36	; 0x24
    491c:	b	460 <MyGame_Example_Any_parse_json_enum>
    4920:	sub	r3, pc, #304	; 0x130
    4924:	ldrd	r2, [r3]
    4928:	cmp	r1, r3
    492c:	cmpeq	r0, r2
    4930:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4934:	add	r9, r4, #16
    4938:	mov	r1, r5
    493c:	mov	r0, r9
    4940:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4944:	bic	r2, r0, #255	; 0xff
    4948:	mov	r3, r1
    494c:	strd	r0, [sp, #8]
    4950:	sub	r1, pc, #344	; 0x158
    4954:	ldrd	r0, [r1]
    4958:	cmp	r3, r1
    495c:	cmpeq	r2, r0
    4960:	bne	4a1c <monster_test_global_json_parser_enum+0x69c>
    4964:	sub	r9, r5, r9
    4968:	cmp	r9, #7
    496c:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4970:	ldrb	r3, [r4, #23]
    4974:	cmp	r3, #46	; 0x2e
    4978:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    497c:	mov	r3, sl
    4980:	mov	r2, r5
    4984:	add	r1, r4, #24
    4988:	mov	r0, r8
    498c:	add	sp, sp, #20
    4990:	ldrd	r4, [sp]
    4994:	ldrd	r6, [sp, #8]
    4998:	ldrd	r8, [sp, #16]
    499c:	ldrd	sl, [sp, #24]
    49a0:	ldr	lr, [sp, #32]
    49a4:	add	sp, sp, #36	; 0x24
    49a8:	b	3cc8 <MyGame_Example_neg_enum_parse_json_enum>
    49ac:	sub	r7, pc, #428	; 0x1ac
    49b0:	ldrd	r6, [r7]
    49b4:	add	r9, r4, #16
    49b8:	mov	r1, r5
    49bc:	mov	r0, r9
    49c0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    49c4:	mov	r2, #0
    49c8:	cmp	r1, r7
    49cc:	cmpeq	r2, r6
    49d0:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    49d4:	sub	r9, r5, r9
    49d8:	cmp	r9, #4
    49dc:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    49e0:	ldrb	r3, [r4, #20]
    49e4:	cmp	r3, #46	; 0x2e
    49e8:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    49ec:	mov	r3, sl
    49f0:	mov	r2, r5
    49f4:	add	r1, r4, #21
    49f8:	mov	r0, r8
    49fc:	add	sp, sp, #20
    4a00:	ldrd	r4, [sp]
    4a04:	ldrd	r6, [sp, #8]
    4a08:	ldrd	r8, [sp, #16]
    4a0c:	ldrd	sl, [sp, #24]
    4a10:	ldr	lr, [sp, #32]
    4a14:	add	sp, sp, #36	; 0x24
    4a18:	b	4148 <MyGame_Example_Color_parse_json_enum>
    4a1c:	sub	r3, pc, #532	; 0x214
    4a20:	ldrd	r2, [r3]
    4a24:	ldrd	r0, [sp, #8]
    4a28:	cmp	r1, r3
    4a2c:	cmpeq	r0, r2
    4a30:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4a34:	add	r9, r4, #24
    4a38:	mov	r1, r5
    4a3c:	mov	r0, r9
    4a40:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4a44:	bic	r3, r1, #255	; 0xff
    4a48:	sub	r1, pc, #568	; 0x238
    4a4c:	ldrd	r0, [r1]
    4a50:	mov	r2, #0
    4a54:	cmp	r3, r1
    4a58:	cmpeq	r2, r0
    4a5c:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4a60:	sub	r9, r5, r9
    4a64:	cmp	r9, #3
    4a68:	ble	45b0 <monster_test_global_json_parser_enum+0x230>
    4a6c:	ldrb	r3, [r4, #27]
    4a70:	cmp	r3, #46	; 0x2e
    4a74:	bne	45b0 <monster_test_global_json_parser_enum+0x230>
    4a78:	add	r6, r4, #28
    4a7c:	mov	r1, r5
    4a80:	mov	r0, r6
    4a84:	mov	r9, #0
    4a88:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4a8c:	and	r3, r1, #-16777216	; 0xff000000
    4a90:	cmp	r3, #2013265920	; 0x78000000
    4a94:	cmpeq	r9, #0
    4a98:	bne	45ac <monster_test_global_json_parser_enum+0x22c>
    4a9c:	mov	r2, r5
    4aa0:	mov	r0, r8
    4aa4:	str	fp, [sp]
    4aa8:	mov	r3, #1
    4aac:	mov	r1, r6
    4ab0:	bl	0 <flatcc_json_parser_match_constant>
    4ab4:	cmp	r6, r0
    4ab8:	mov	r4, r0
    4abc:	beq	45b0 <monster_test_global_json_parser_enum+0x230>
    4ac0:	mov	r2, #0
    4ac4:	mov	r3, #0
    4ac8:	strd	r2, [r7]
    4acc:	str	r9, [sl]
    4ad0:	b	45b0 <monster_test_global_json_parser_enum+0x230>
    4ad4:	mov	r2, r5
    4ad8:	mov	r0, r8
    4adc:	str	fp, [sp]
    4ae0:	mov	r3, #3
    4ae4:	mov	r1, r6
    4ae8:	bl	0 <flatcc_json_parser_match_constant>
    4aec:	cmp	r6, r0
    4af0:	mov	r4, r0
    4af4:	beq	45b0 <monster_test_global_json_parser_enum+0x230>
    4af8:	mov	r0, #17
    4afc:	mov	r1, #0
    4b00:	strd	r0, [r7]
    4b04:	str	r9, [sl]
    4b08:	b	45b0 <monster_test_global_json_parser_enum+0x230>
    4b0c:	mov	r2, r5
    4b10:	mov	r0, r8
    4b14:	str	fp, [sp]
    4b18:	mov	r3, #2
    4b1c:	mov	r1, r9
    4b20:	bl	0 <flatcc_json_parser_match_constant>
    4b24:	cmp	r9, r0
    4b28:	mov	r4, r0
    4b2c:	beq	45ac <monster_test_global_json_parser_enum+0x22c>
    4b30:	mov	r3, #0
    4b34:	mov	r2, #0
    4b38:	strd	r2, [r7]
    4b3c:	mov	r3, #0
    4b40:	str	r3, [sl]
    4b44:	b	45b0 <monster_test_global_json_parser_enum+0x230>

00004b48 <monster_test_local_MyGame_Example_json_parser_enum>:
    4b48:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4b4c:	mov	r4, r1
    4b50:	mov	r5, r0
    4b54:	mov	r1, r2
    4b58:	mov	r0, r4
    4b5c:	strd	r6, [sp, #8]
    4b60:	strd	r8, [sp, #16]
    4b64:	strd	sl, [sp, #24]
    4b68:	mov	sl, r2
    4b6c:	mov	fp, r3
    4b70:	str	lr, [sp, #32]
    4b74:	sub	sp, sp, #20
    4b78:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4b7c:	add	r3, pc, #876	; 0x36c
    4b80:	ldrd	r2, [r3]
    4b84:	ldr	r9, [sp, #56]	; 0x38
    4b88:	ldr	r8, [sp, #60]	; 0x3c
    4b8c:	cmp	r1, r3
    4b90:	cmpeq	r0, r2
    4b94:	bhi	4c74 <monster_test_local_MyGame_Example_json_parser_enum+0x12c>
    4b98:	add	r3, pc, #856	; 0x358
    4b9c:	ldrd	r2, [r3]
    4ba0:	mov	r6, #0
    4ba4:	bic	r7, r1, #255	; 0xff
    4ba8:	cmp	r1, r3
    4bac:	cmpeq	r0, r2
    4bb0:	bhi	4c00 <monster_test_local_MyGame_Example_json_parser_enum+0xb8>
    4bb4:	add	r3, pc, #836	; 0x344
    4bb8:	ldrd	r2, [r3]
    4bbc:	cmp	r7, r3
    4bc0:	cmpeq	r6, r2
    4bc4:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4bc8:	sub	r3, sl, r4
    4bcc:	cmp	r3, #3
    4bd0:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4bd4:	ldrb	r3, [r4, #3]
    4bd8:	cmp	r3, #46	; 0x2e
    4bdc:	beq	4e3c <monster_test_local_MyGame_Example_json_parser_enum+0x2f4>
    4be0:	mov	r0, r4
    4be4:	add	sp, sp, #20
    4be8:	ldrd	r4, [sp]
    4bec:	ldrd	r6, [sp, #8]
    4bf0:	ldrd	r8, [sp, #16]
    4bf4:	ldrd	sl, [sp, #24]
    4bf8:	add	sp, sp, #32
    4bfc:	pop	{pc}		; (ldr pc, [sp], #4)
    4c00:	add	r3, pc, #768	; 0x300
    4c04:	ldrd	r2, [r3]
    4c08:	cmp	r7, r3
    4c0c:	cmpeq	r6, r2
    4c10:	beq	4df4 <monster_test_local_MyGame_Example_json_parser_enum+0x2ac>
    4c14:	add	r9, pc, #756	; 0x2f4
    4c18:	ldrd	r8, [r9]
    4c1c:	and	r6, r0, #-16777216	; 0xff000000
    4c20:	cmp	r1, r9
    4c24:	cmpeq	r6, r8
    4c28:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4c2c:	sub	r3, sl, r4
    4c30:	cmp	r3, #5
    4c34:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4c38:	ldrb	r3, [r4, #5]
    4c3c:	cmp	r3, #46	; 0x2e
    4c40:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4c44:	mov	r3, fp
    4c48:	mov	r2, sl
    4c4c:	add	r1, r4, #6
    4c50:	mov	r0, r5
    4c54:	add	sp, sp, #20
    4c58:	ldrd	r4, [sp]
    4c5c:	ldrd	r6, [sp, #8]
    4c60:	ldrd	r8, [sp, #16]
    4c64:	ldrd	sl, [sp, #24]
    4c68:	ldr	lr, [sp, #32]
    4c6c:	add	sp, sp, #36	; 0x24
    4c70:	b	4148 <MyGame_Example_Color_parse_json_enum>
    4c74:	add	r3, pc, #668	; 0x29c
    4c78:	ldrd	r2, [r3]
    4c7c:	cmp	r1, r3
    4c80:	cmpeq	r0, r2
    4c84:	bhi	4ce4 <monster_test_local_MyGame_Example_json_parser_enum+0x19c>
    4c88:	add	r3, pc, #656	; 0x290
    4c8c:	ldrd	r2, [r3]
    4c90:	cmp	r1, r3
    4c94:	cmpeq	r0, r2
    4c98:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4c9c:	sub	r3, sl, r4
    4ca0:	cmp	r3, #8
    4ca4:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4ca8:	ldrb	r3, [r4, #8]
    4cac:	cmp	r3, #46	; 0x2e
    4cb0:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4cb4:	mov	r3, fp
    4cb8:	mov	r2, sl
    4cbc:	add	r1, r4, #9
    4cc0:	mov	r0, r5
    4cc4:	add	sp, sp, #20
    4cc8:	ldrd	r4, [sp]
    4ccc:	ldrd	r6, [sp, #8]
    4cd0:	ldrd	r8, [sp, #16]
    4cd4:	ldrd	sl, [sp, #24]
    4cd8:	ldr	lr, [sp, #32]
    4cdc:	add	sp, sp, #36	; 0x24
    4ce0:	b	3ef0 <MyGame_Example_hex_enum_parse_json_enum>
    4ce4:	add	r3, pc, #572	; 0x23c
    4ce8:	ldrd	r2, [r3]
    4cec:	cmp	r1, r3
    4cf0:	cmpeq	r0, r2
    4cf4:	bhi	4d54 <monster_test_local_MyGame_Example_json_parser_enum+0x20c>
    4cf8:	add	r3, pc, #560	; 0x230
    4cfc:	ldrd	r2, [r3]
    4d00:	cmp	r1, r3
    4d04:	cmpeq	r0, r2
    4d08:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4d0c:	sub	r3, sl, r4
    4d10:	cmp	r3, #8
    4d14:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4d18:	ldrb	r3, [r4, #8]
    4d1c:	cmp	r3, #46	; 0x2e
    4d20:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4d24:	mov	r3, fp
    4d28:	mov	r2, sl
    4d2c:	add	r1, r4, #9
    4d30:	mov	r0, r5
    4d34:	add	sp, sp, #20
    4d38:	ldrd	r4, [sp]
    4d3c:	ldrd	r6, [sp, #8]
    4d40:	ldrd	r8, [sp, #16]
    4d44:	ldrd	sl, [sp, #24]
    4d48:	ldr	lr, [sp, #32]
    4d4c:	add	sp, sp, #36	; 0x24
    4d50:	b	6e8 <MyGame_Example_int_enum_parse_json_enum>
    4d54:	add	r3, pc, #476	; 0x1dc
    4d58:	ldrd	r2, [r3]
    4d5c:	cmp	r1, r3
    4d60:	cmpeq	r0, r2
    4d64:	beq	4e6c <monster_test_local_MyGame_Example_json_parser_enum+0x324>
    4d68:	add	r3, pc, #464	; 0x1d0
    4d6c:	ldrd	r2, [r3]
    4d70:	cmp	r1, r3
    4d74:	cmpeq	r0, r2
    4d78:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4d7c:	add	r6, r4, #8
    4d80:	mov	r1, sl
    4d84:	mov	r0, r6
    4d88:	mov	r7, #0
    4d8c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4d90:	mov	r3, r1
    4d94:	add	r1, pc, #428	; 0x1ac
    4d98:	ldrd	r0, [r1]
    4d9c:	cmp	r3, r1
    4da0:	cmpeq	r7, r0
    4da4:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4da8:	sub	r3, sl, r6
    4dac:	cmp	r3, #4
    4db0:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4db4:	ldrb	r3, [r4, #12]
    4db8:	cmp	r3, #46	; 0x2e
    4dbc:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4dc0:	add	r3, r4, #13
    4dc4:	cmp	r6, r3
    4dc8:	str	r3, [sp, #12]
    4dcc:	beq	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4dd0:	mov	r0, r3
    4dd4:	mov	r1, sl
    4dd8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4ddc:	and	r3, r1, #-16777216	; 0xff000000
    4de0:	cmp	r3, #2013265920	; 0x78000000
    4de4:	cmpeq	r7, #0
    4de8:	beq	4eb4 <monster_test_local_MyGame_Example_json_parser_enum+0x36c>
    4dec:	ldr	r4, [sp, #12]
    4df0:	b	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4df4:	sub	r3, sl, r4
    4df8:	cmp	r3, #3
    4dfc:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4e00:	ldrb	r3, [r4, #3]
    4e04:	cmp	r3, #46	; 0x2e
    4e08:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4e0c:	mov	r3, fp
    4e10:	mov	r2, sl
    4e14:	add	r1, r4, #4
    4e18:	mov	r0, r5
    4e1c:	add	sp, sp, #20
    4e20:	ldrd	r4, [sp]
    4e24:	ldrd	r6, [sp, #8]
    4e28:	ldrd	r8, [sp, #16]
    4e2c:	ldrd	sl, [sp, #24]
    4e30:	ldr	lr, [sp, #32]
    4e34:	add	sp, sp, #36	; 0x24
    4e38:	b	3aa0 <MyGame_Example_Foo_parse_json_enum>
    4e3c:	mov	r3, fp
    4e40:	mov	r2, sl
    4e44:	add	r1, r4, #4
    4e48:	mov	r0, r5
    4e4c:	add	sp, sp, #20
    4e50:	ldrd	r4, [sp]
    4e54:	ldrd	r6, [sp, #8]
    4e58:	ldrd	r8, [sp, #16]
    4e5c:	ldrd	sl, [sp, #24]
    4e60:	ldr	lr, [sp, #32]
    4e64:	add	sp, sp, #36	; 0x24
    4e68:	b	460 <MyGame_Example_Any_parse_json_enum>
    4e6c:	sub	r3, sl, r4
    4e70:	cmp	r3, #8
    4e74:	ble	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4e78:	ldrb	r3, [r4, #8]
    4e7c:	cmp	r3, #46	; 0x2e
    4e80:	bne	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4e84:	mov	r3, fp
    4e88:	mov	r2, sl
    4e8c:	add	r1, r4, #9
    4e90:	mov	r0, r5
    4e94:	add	sp, sp, #20
    4e98:	ldrd	r4, [sp]
    4e9c:	ldrd	r6, [sp, #8]
    4ea0:	ldrd	r8, [sp, #16]
    4ea4:	ldrd	sl, [sp, #24]
    4ea8:	ldr	lr, [sp, #32]
    4eac:	add	sp, sp, #36	; 0x24
    4eb0:	b	3cc8 <MyGame_Example_neg_enum_parse_json_enum>
    4eb4:	mov	r0, r5
    4eb8:	ldr	r5, [sp, #12]
    4ebc:	mov	r2, sl
    4ec0:	mov	r3, #1
    4ec4:	str	r8, [sp]
    4ec8:	mov	r1, r5
    4ecc:	bl	0 <flatcc_json_parser_match_constant>
    4ed0:	cmp	r5, r0
    4ed4:	mov	r4, r0
    4ed8:	beq	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4edc:	mov	r0, #0
    4ee0:	mov	r1, #0
    4ee4:	strd	r0, [r9]
    4ee8:	str	r7, [fp]
    4eec:	b	4be0 <monster_test_local_MyGame_Example_json_parser_enum+0x98>
    4ef0:	.word	0x656e756c
    4ef4:	.word	0x6865785f
    4ef8:	.word	0x71ffffff
    4efc:	.word	0x436f6c6f
    4f00:	.word	0x00000000
    4f04:	.word	0x416e7900
    4f08:	.word	0x00000000
    4f0c:	.word	0x466f6f00
    4f10:	.word	0x72000000
    4f14:	.word	0x436f6c6f
    4f18:	.word	0x656e756c
    4f1c:	.word	0x696e745f
    4f20:	.word	0x656e756d
    4f24:	.word	0x6865785f
    4f28:	.word	0x656e756c
    4f2c:	.word	0x6e65675f
    4f30:	.word	0x656e756d
    4f34:	.word	0x696e745f
    4f38:	.word	0x656e756d
    4f3c:	.word	0x6e65675f
    4f40:	.word	0x6d707479
    4f44:	.word	0x6e6f7465
    4f48:	.word	0x00000000
    4f4c:	.word	0x656e756d

00004f50 <MyGame_Example2_Monster_parse_json_table>:
    4f50:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4f54:	mov	r4, r1
    4f58:	mov	r5, r2
    4f5c:	strd	r6, [sp, #8]
    4f60:	mov	r7, r3
    4f64:	mov	r3, #0
    4f68:	mov	r6, r0
    4f6c:	mov	r1, r3
    4f70:	strd	r8, [sp, #16]
    4f74:	str	sl, [sp, #24]
    4f78:	str	lr, [sp, #28]
    4f7c:	ldr	r0, [r0]
    4f80:	str	r3, [r7]
    4f84:	bl	0 <flatcc_builder_start_table>
    4f88:	cmp	r0, #0
    4f8c:	beq	4fbc <MyGame_Example2_Monster_parse_json_table+0x6c>
    4f90:	mov	r2, r5
    4f94:	mov	r1, r4
    4f98:	ldrd	r4, [sp]
    4f9c:	mov	r0, r6
    4fa0:	mov	r3, #33	; 0x21
    4fa4:	ldrd	r6, [sp, #8]
    4fa8:	ldrd	r8, [sp, #16]
    4fac:	ldr	sl, [sp, #24]
    4fb0:	ldr	lr, [sp, #28]
    4fb4:	add	sp, sp, #32
    4fb8:	b	0 <flatcc_json_parser_set_error>
    4fbc:	cmp	r4, r5
    4fc0:	beq	4fd0 <MyGame_Example2_Monster_parse_json_table+0x80>
    4fc4:	ldrb	r3, [r4]
    4fc8:	cmp	r3, #123	; 0x7b
    4fcc:	beq	5024 <MyGame_Example2_Monster_parse_json_table+0xd4>
    4fd0:	mov	r1, r4
    4fd4:	mov	r3, #21
    4fd8:	mov	r2, r5
    4fdc:	mov	r0, r6
    4fe0:	bl	0 <flatcc_json_parser_set_error>
    4fe4:	mov	r4, r0
    4fe8:	ldr	r3, [r6, #24]
    4fec:	cmp	r3, #0
    4ff0:	bne	4f90 <MyGame_Example2_Monster_parse_json_table+0x40>
    4ff4:	ldr	r0, [r6]
    4ff8:	bl	0 <flatcc_builder_end_table>
    4ffc:	cmp	r0, #0
    5000:	str	r0, [r7]
    5004:	beq	4f90 <MyGame_Example2_Monster_parse_json_table+0x40>
    5008:	mov	r0, r4
    500c:	ldrd	r4, [sp]
    5010:	ldrd	r6, [sp, #8]
    5014:	ldrd	r8, [sp, #16]
    5018:	ldr	sl, [sp, #24]
    501c:	add	sp, sp, #28
    5020:	pop	{pc}		; (ldr pc, [sp], #4)
    5024:	add	r1, r4, #1
    5028:	sub	r3, r5, r1
    502c:	cmp	r3, #1
    5030:	ble	5044 <MyGame_Example2_Monster_parse_json_table+0xf4>
    5034:	ldrb	r3, [r4, #1]
    5038:	cmp	r3, #32
    503c:	bhi	5054 <MyGame_Example2_Monster_parse_json_table+0x104>
    5040:	beq	5224 <MyGame_Example2_Monster_parse_json_table+0x2d4>
    5044:	mov	r2, r5
    5048:	mov	r0, r6
    504c:	bl	0 <flatcc_json_parser_space_ext>
    5050:	mov	r1, r0
    5054:	cmp	r5, r1
    5058:	beq	5068 <MyGame_Example2_Monster_parse_json_table+0x118>
    505c:	ldrb	r3, [r1]
    5060:	cmp	r3, #125	; 0x7d
    5064:	beq	524c <MyGame_Example2_Monster_parse_json_table+0x2fc>
    5068:	mov	r8, #1
    506c:	mov	r9, #0
    5070:	cmp	r5, r1
    5074:	beq	5098 <MyGame_Example2_Monster_parse_json_table+0x148>
    5078:	ldrb	r3, [r1]
    507c:	cmp	r3, #34	; 0x22
    5080:	addeq	r1, r1, #1
    5084:	streq	r9, [r6, #12]
    5088:	beq	5098 <MyGame_Example2_Monster_parse_json_table+0x148>
    508c:	cmp	r3, #46	; 0x2e
    5090:	strne	r8, [r6, #12]
    5094:	beq	51c8 <MyGame_Example2_Monster_parse_json_table+0x278>
    5098:	mov	r2, r5
    509c:	mov	r0, r6
    50a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    50a4:	sub	r3, r5, r0
    50a8:	mov	r4, r0
    50ac:	cmp	r3, #1
    50b0:	ble	50c4 <MyGame_Example2_Monster_parse_json_table+0x174>
    50b4:	ldrb	r3, [r0]
    50b8:	cmp	r3, #32
    50bc:	bhi	50d8 <MyGame_Example2_Monster_parse_json_table+0x188>
    50c0:	beq	5148 <MyGame_Example2_Monster_parse_json_table+0x1f8>
    50c4:	mov	r1, r4
    50c8:	mov	r2, r5
    50cc:	mov	r0, r6
    50d0:	bl	0 <flatcc_json_parser_space_ext>
    50d4:	mov	r4, r0
    50d8:	cmp	r5, r4
    50dc:	beq	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    50e0:	ldrb	r3, [r4]
    50e4:	cmp	r3, #44	; 0x2c
    50e8:	beq	515c <MyGame_Example2_Monster_parse_json_table+0x20c>
    50ec:	cmp	r3, #125	; 0x7d
    50f0:	beq	5110 <MyGame_Example2_Monster_parse_json_table+0x1c0>
    50f4:	mov	r1, r4
    50f8:	mov	r3, #10
    50fc:	mov	r2, r5
    5100:	mov	r0, r6
    5104:	bl	0 <flatcc_json_parser_set_error>
    5108:	mov	r4, r0
    510c:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    5110:	add	r1, r4, #1
    5114:	sub	r3, r5, r1
    5118:	cmp	r3, #1
    511c:	ble	5134 <MyGame_Example2_Monster_parse_json_table+0x1e4>
    5120:	ldrb	r3, [r4, #1]
    5124:	cmp	r3, #32
    5128:	movhi	r4, r1
    512c:	bhi	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    5130:	beq	51e0 <MyGame_Example2_Monster_parse_json_table+0x290>
    5134:	mov	r2, r5
    5138:	mov	r0, r6
    513c:	bl	0 <flatcc_json_parser_space_ext>
    5140:	mov	r4, r0
    5144:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    5148:	ldrb	r3, [r0, #1]
    514c:	cmp	r3, #32
    5150:	addhi	r4, r0, #1
    5154:	bls	50c4 <MyGame_Example2_Monster_parse_json_table+0x174>
    5158:	b	50d8 <MyGame_Example2_Monster_parse_json_table+0x188>
    515c:	add	r1, r4, #1
    5160:	sub	r3, r5, r1
    5164:	cmp	r3, #1
    5168:	ble	517c <MyGame_Example2_Monster_parse_json_table+0x22c>
    516c:	ldrb	r3, [r4, #1]
    5170:	cmp	r3, #32
    5174:	bhi	518c <MyGame_Example2_Monster_parse_json_table+0x23c>
    5178:	beq	51f4 <MyGame_Example2_Monster_parse_json_table+0x2a4>
    517c:	mov	r2, r5
    5180:	mov	r0, r6
    5184:	bl	0 <flatcc_json_parser_space_ext>
    5188:	mov	r1, r0
    518c:	cmp	r5, r1
    5190:	beq	5208 <MyGame_Example2_Monster_parse_json_table+0x2b8>
    5194:	ldrb	r3, [r1]
    5198:	cmp	r3, #125	; 0x7d
    519c:	bne	5070 <MyGame_Example2_Monster_parse_json_table+0x120>
    51a0:	add	r4, r1, #1
    51a4:	sub	r3, r5, r4
    51a8:	cmp	r3, #1
    51ac:	ble	51c0 <MyGame_Example2_Monster_parse_json_table+0x270>
    51b0:	ldrb	r3, [r1, #1]
    51b4:	cmp	r3, #32
    51b8:	bhi	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    51bc:	beq	5238 <MyGame_Example2_Monster_parse_json_table+0x2e8>
    51c0:	mov	r1, r4
    51c4:	b	5134 <MyGame_Example2_Monster_parse_json_table+0x1e4>
    51c8:	mov	r3, #5
    51cc:	mov	r2, r5
    51d0:	mov	r0, r6
    51d4:	bl	0 <flatcc_json_parser_set_error>
    51d8:	mov	r1, r0
    51dc:	b	5098 <MyGame_Example2_Monster_parse_json_table+0x148>
    51e0:	ldrb	r3, [r4, #2]
    51e4:	cmp	r3, #32
    51e8:	addhi	r4, r4, #2
    51ec:	bls	5134 <MyGame_Example2_Monster_parse_json_table+0x1e4>
    51f0:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    51f4:	ldrb	r3, [r4, #2]
    51f8:	cmp	r3, #32
    51fc:	addhi	r1, r4, #2
    5200:	bls	517c <MyGame_Example2_Monster_parse_json_table+0x22c>
    5204:	b	518c <MyGame_Example2_Monster_parse_json_table+0x23c>
    5208:	mov	r3, #10
    520c:	mov	r2, r5
    5210:	mov	r1, r5
    5214:	mov	r0, r6
    5218:	bl	0 <flatcc_json_parser_set_error>
    521c:	mov	r4, r0
    5220:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    5224:	ldrb	r3, [r4, #2]
    5228:	cmp	r3, #32
    522c:	addhi	r1, r4, #2
    5230:	bls	5044 <MyGame_Example2_Monster_parse_json_table+0xf4>
    5234:	b	5054 <MyGame_Example2_Monster_parse_json_table+0x104>
    5238:	ldrb	r3, [r1, #2]
    523c:	cmp	r3, #32
    5240:	addhi	r4, r1, #2
    5244:	bls	51c0 <MyGame_Example2_Monster_parse_json_table+0x270>
    5248:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>
    524c:	add	r1, r1, #1
    5250:	mov	r2, r5
    5254:	mov	r0, r6
    5258:	bl	8f0 <flatcc_json_parser_space>
    525c:	mov	r4, r0
    5260:	b	4fe8 <MyGame_Example2_Monster_parse_json_table+0x98>

00005264 <flatcc_json_parser_match_symbol.part.18>:
    5264:	strd	r4, [sp, #-16]!
    5268:	add	ip, r1, r3
    526c:	ldr	r4, [r0, #12]
    5270:	str	r6, [sp, #8]
    5274:	str	lr, [sp, #12]
    5278:	ldrb	lr, [r1, r3]
    527c:	cmp	r4, #0
    5280:	beq	5320 <flatcc_json_parser_match_symbol.part.18+0xbc>
    5284:	cmp	lr, #58	; 0x3a
    5288:	cmpne	lr, #32
    528c:	movls	lr, #0
    5290:	movhi	lr, #1
    5294:	strls	lr, [r0, #12]
    5298:	bhi	530c <flatcc_json_parser_match_symbol.part.18+0xa8>
    529c:	sub	r3, r2, ip
    52a0:	mov	r5, r2
    52a4:	cmp	r3, #1
    52a8:	mov	r4, r0
    52ac:	ble	52c0 <flatcc_json_parser_match_symbol.part.18+0x5c>
    52b0:	ldrb	r3, [ip]
    52b4:	cmp	r3, #32
    52b8:	bhi	52d4 <flatcc_json_parser_match_symbol.part.18+0x70>
    52bc:	beq	5334 <flatcc_json_parser_match_symbol.part.18+0xd0>
    52c0:	mov	r1, ip
    52c4:	mov	r2, r5
    52c8:	mov	r0, r4
    52cc:	bl	0 <flatcc_json_parser_space_ext>
    52d0:	mov	ip, r0
    52d4:	cmp	r5, ip
    52d8:	beq	52e8 <flatcc_json_parser_match_symbol.part.18+0x84>
    52dc:	ldrb	r3, [ip]
    52e0:	cmp	r3, #58	; 0x3a
    52e4:	beq	5348 <flatcc_json_parser_match_symbol.part.18+0xe4>
    52e8:	mov	r2, r5
    52ec:	mov	r0, r4
    52f0:	ldrd	r4, [sp]
    52f4:	mov	r1, ip
    52f8:	mov	r3, #4
    52fc:	ldr	r6, [sp, #8]
    5300:	ldr	lr, [sp, #12]
    5304:	add	sp, sp, #16
    5308:	b	0 <flatcc_json_parser_set_error>
    530c:	mov	r0, r1
    5310:	ldrd	r4, [sp]
    5314:	ldr	r6, [sp, #8]
    5318:	add	sp, sp, #12
    531c:	pop	{pc}		; (ldr pc, [sp], #4)
    5320:	cmp	lr, #34	; 0x22
    5324:	bne	530c <flatcc_json_parser_match_symbol.part.18+0xa8>
    5328:	add	r3, r3, #1
    532c:	add	ip, r1, r3
    5330:	b	529c <flatcc_json_parser_match_symbol.part.18+0x38>
    5334:	ldrb	r3, [ip, #1]
    5338:	cmp	r3, #32
    533c:	addhi	ip, ip, #1
    5340:	bls	52c0 <flatcc_json_parser_match_symbol.part.18+0x5c>
    5344:	b	52d4 <flatcc_json_parser_match_symbol.part.18+0x70>
    5348:	add	r0, ip, #1
    534c:	sub	r3, r5, r0
    5350:	cmp	r3, #1
    5354:	ble	5368 <flatcc_json_parser_match_symbol.part.18+0x104>
    5358:	ldrb	r3, [ip, #1]
    535c:	cmp	r3, #32
    5360:	bhi	5310 <flatcc_json_parser_match_symbol.part.18+0xac>
    5364:	beq	5388 <flatcc_json_parser_match_symbol.part.18+0x124>
    5368:	mov	r2, r5
    536c:	mov	r1, r0
    5370:	ldr	r6, [sp, #8]
    5374:	mov	r0, r4
    5378:	ldrd	r4, [sp]
    537c:	ldr	lr, [sp, #12]
    5380:	add	sp, sp, #16
    5384:	b	0 <flatcc_json_parser_space_ext>
    5388:	ldrb	r3, [ip, #2]
    538c:	cmp	r3, #32
    5390:	addhi	r0, ip, #2
    5394:	bls	5368 <flatcc_json_parser_match_symbol.part.18+0x104>
    5398:	b	5310 <flatcc_json_parser_match_symbol.part.18+0xac>

0000539c <MyGame_Example_Alt_parse_json_table>:
    539c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    53a0:	mov	r5, r0
    53a4:	mov	ip, r3
    53a8:	ldr	r0, [r0]
    53ac:	mov	r4, r2
    53b0:	strd	r6, [sp, #8]
    53b4:	strd	r8, [sp, #16]
    53b8:	strd	sl, [sp, #24]
    53bc:	mov	fp, r1
    53c0:	mov	r1, #4
    53c4:	str	lr, [sp, #32]
    53c8:	sub	sp, sp, #332	; 0x14c
    53cc:	str	r3, [sp, #272]	; 0x110
    53d0:	mov	r3, #0
    53d4:	str	r3, [ip]
    53d8:	bl	0 <flatcc_builder_start_table>
    53dc:	cmp	r0, #0
    53e0:	beq	541c <MyGame_Example_Alt_parse_json_table+0x80>
    53e4:	mov	r1, fp
    53e8:	mov	r2, r4
    53ec:	mov	r0, r5
    53f0:	mov	r3, #33	; 0x21
    53f4:	bl	0 <flatcc_json_parser_set_error>
    53f8:	mov	fp, r0
    53fc:	mov	r0, fp
    5400:	add	sp, sp, #332	; 0x14c
    5404:	ldrd	r4, [sp]
    5408:	ldrd	r6, [sp, #8]
    540c:	ldrd	r8, [sp, #16]
    5410:	ldrd	sl, [sp, #24]
    5414:	add	sp, sp, #32
    5418:	pop	{pc}		; (ldr pc, [sp], #4)
    541c:	add	r0, sp, #296	; 0x128
    5420:	mov	r3, #1
    5424:	mov	r2, r4
    5428:	mov	r1, fp
    542c:	str	r0, [sp]
    5430:	mov	r0, r5
    5434:	bl	0 <flatcc_json_parser_prepare_unions>
    5438:	cmp	r4, r0
    543c:	beq	53e4 <MyGame_Example_Alt_parse_json_table+0x48>
    5440:	add	r3, sp, #292	; 0x124
    5444:	mov	r1, fp
    5448:	mov	r2, r4
    544c:	mov	r0, r5
    5450:	bl	dfc <flatcc_json_parser_object_start>
    5454:	ldr	r3, [sp, #292]	; 0x124
    5458:	mov	sl, r0
    545c:	cmp	r3, #0
    5460:	beq	5604 <MyGame_Example_Alt_parse_json_table+0x268>
    5464:	cmp	r4, sl
    5468:	beq	563c <MyGame_Example_Alt_parse_json_table+0x2a0>
    546c:	ldrb	r3, [sl]
    5470:	cmp	r3, #34	; 0x22
    5474:	moveq	r3, #0
    5478:	addeq	sl, sl, #1
    547c:	streq	r3, [r5, #12]
    5480:	beq	5494 <MyGame_Example_Alt_parse_json_table+0xf8>
    5484:	cmp	r3, #46	; 0x2e
    5488:	movne	r3, #1
    548c:	strne	r3, [r5, #12]
    5490:	beq	6f6c <MyGame_Example_Alt_parse_json_table+0x1bd0>
    5494:	sub	ip, r4, sl
    5498:	cmp	ip, #8
    549c:	bls	560c <MyGame_Example_Alt_parse_json_table+0x270>
    54a0:	ldrb	r2, [sl, #7]
    54a4:	mov	r3, #0
    54a8:	mov	lr, r3
    54ac:	ldrb	r0, [sl, #6]
    54b0:	orr	r2, r2, r0, lsl #8
    54b4:	ldrb	r6, [sl, #5]
    54b8:	orr	r2, r2, r6, lsl #16
    54bc:	ldrb	r6, [sl, #4]
    54c0:	orr	r2, r2, r6, lsl #24
    54c4:	ldrb	r6, [sl, #3]
    54c8:	orr	lr, lr, r6
    54cc:	ldrb	r0, [sl]
    54d0:	str	r2, [sp, #32]
    54d4:	ldrb	r6, [sl, #1]
    54d8:	add	r3, pc, #792	; 0x318
    54dc:	ldrd	r2, [r3]
    54e0:	lsl	r0, r0, #24
    54e4:	orr	r6, r0, r6, lsl #16
    54e8:	ldrb	r0, [sl, #2]
    54ec:	orr	r1, lr, r0, lsl #8
    54f0:	orr	r1, r6, r1
    54f4:	str	r1, [sp, #36]	; 0x24
    54f8:	ldrd	r0, [sp, #32]
    54fc:	cmp	r1, r3
    5500:	cmpeq	r0, r2
    5504:	beq	56b4 <MyGame_Example_Alt_parse_json_table+0x318>
    5508:	ldrd	r0, [sp, #32]
    550c:	add	r3, pc, #748	; 0x2ec
    5510:	ldrd	r2, [r3]
    5514:	bic	lr, r0, #255	; 0xff
    5518:	str	lr, [sp, #96]	; 0x60
    551c:	str	r1, [sp, #100]	; 0x64
    5520:	ldrd	r0, [sp, #96]	; 0x60
    5524:	cmp	r1, r3
    5528:	cmpeq	r0, r2
    552c:	bne	5814 <MyGame_Example_Alt_parse_json_table+0x478>
    5530:	cmp	ip, #7
    5534:	ble	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    5538:	mov	r3, #7
    553c:	mov	r2, r4
    5540:	mov	r1, sl
    5544:	mov	r0, r5
    5548:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    554c:	cmp	r0, sl
    5550:	beq	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    5554:	ldr	ip, [sp, #296]	; 0x128
    5558:	mov	lr, #3
    555c:	movw	r3, #0
    5560:	movt	r3, #0
    5564:	mov	r1, r0
    5568:	mov	r2, r4
    556c:	mov	r0, r5
    5570:	str	lr, [sp]
    5574:	str	ip, [sp, #4]
    5578:	str	r3, [sp, #8]
    557c:	mov	r3, #0
    5580:	bl	0 <flatcc_json_parser_union_vector>
    5584:	mov	fp, r0
    5588:	sub	r3, r4, fp
    558c:	cmp	r3, #1
    5590:	ble	55a4 <MyGame_Example_Alt_parse_json_table+0x208>
    5594:	ldrb	r3, [fp]
    5598:	cmp	r3, #32
    559c:	bhi	55b8 <MyGame_Example_Alt_parse_json_table+0x21c>
    55a0:	beq	6d0c <MyGame_Example_Alt_parse_json_table+0x1970>
    55a4:	mov	r1, fp
    55a8:	mov	r2, r4
    55ac:	mov	r0, r5
    55b0:	bl	0 <flatcc_json_parser_space_ext>
    55b4:	mov	fp, r0
    55b8:	cmp	r4, fp
    55bc:	beq	6cc4 <MyGame_Example_Alt_parse_json_table+0x1928>
    55c0:	ldrb	r3, [fp]
    55c4:	cmp	r3, #44	; 0x2c
    55c8:	beq	6d20 <MyGame_Example_Alt_parse_json_table+0x1984>
    55cc:	mov	r3, #0
    55d0:	str	r3, [sp, #292]	; 0x124
    55d4:	ldrb	r3, [fp]
    55d8:	cmp	r3, #125	; 0x7d
    55dc:	beq	57c0 <MyGame_Example_Alt_parse_json_table+0x424>
    55e0:	mov	r3, #10
    55e4:	mov	r1, fp
    55e8:	mov	r2, r4
    55ec:	mov	r0, r5
    55f0:	bl	0 <flatcc_json_parser_set_error>
    55f4:	ldr	r3, [sp, #292]	; 0x124
    55f8:	mov	sl, r0
    55fc:	cmp	r3, #0
    5600:	bne	5464 <MyGame_Example_Alt_parse_json_table+0xc8>
    5604:	mov	fp, sl
    5608:	b	6ccc <MyGame_Example_Alt_parse_json_table+0x1930>
    560c:	sub	r3, ip, #1
    5610:	cmp	r3, #7
    5614:	ldrls	pc, [pc, r3, lsl #2]
    5618:	b	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    561c:	.word	0x00005640
    5620:	.word	0x00005688
    5624:	.word	0x0000567c
    5628:	.word	0x00005670
    562c:	.word	0x00005664
    5630:	.word	0x00005658
    5634:	.word	0x000056a8
    5638:	.word	0x000054a0
    563c:	mov	sl, r4
    5640:	mov	r1, sl
    5644:	mov	r2, r4
    5648:	mov	r0, r5
    564c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5650:	mov	fp, r0
    5654:	b	5588 <MyGame_Example_Alt_parse_json_table+0x1ec>
    5658:	mov	r2, #0
    565c:	mov	lr, r2
    5660:	b	54b4 <MyGame_Example_Alt_parse_json_table+0x118>
    5664:	mov	r2, #0
    5668:	mov	lr, r2
    566c:	b	54bc <MyGame_Example_Alt_parse_json_table+0x120>
    5670:	mov	r2, #0
    5674:	mov	lr, r2
    5678:	b	54c4 <MyGame_Example_Alt_parse_json_table+0x128>
    567c:	mov	r2, #0
    5680:	mov	lr, r2
    5684:	b	54cc <MyGame_Example_Alt_parse_json_table+0x130>
    5688:	ldrb	r2, [sl, #1]
    568c:	mov	r1, #0
    5690:	ldrb	r0, [sl]
    5694:	str	r1, [sp, #32]
    5698:	lsl	r2, r2, #16
    569c:	orr	r3, r2, r0, lsl #24
    56a0:	str	r3, [sp, #36]	; 0x24
    56a4:	b	5508 <MyGame_Example_Alt_parse_json_table+0x16c>
    56a8:	mov	r2, #0
    56ac:	mov	r3, #0
    56b0:	b	54a8 <MyGame_Example_Alt_parse_json_table+0x10c>
    56b4:	add	r6, sl, #8
    56b8:	sub	ip, r4, r6
    56bc:	cmp	ip, #8
    56c0:	bhi	57a4 <MyGame_Example_Alt_parse_json_table+0x408>
    56c4:	sub	r3, ip, #2
    56c8:	cmp	r3, #6
    56cc:	ldrls	pc, [pc, r3, lsl #2]
    56d0:	b	5e34 <MyGame_Example_Alt_parse_json_table+0xa98>
    56d4:	.word	0x000057b8
    56d8:	.word	0x000057b0
    56dc:	.word	0x000056f0
    56e0:	.word	0x000056f0
    56e4:	.word	0x000056f0
    56e8:	.word	0x000057a4
    56ec:	.word	0x000057a4
    56f0:	mov	lr, #0
    56f4:	ldrb	r2, [sl, #11]
    56f8:	orr	lr, lr, r2
    56fc:	ldrb	r2, [sl, #10]
    5700:	orr	lr, lr, r2, lsl #8
    5704:	ldrb	r0, [sl, #9]
    5708:	mov	r7, #0
    570c:	str	r7, [sp, #144]	; 0x90
    5710:	add	r3, pc, #240	; 0xf0
    5714:	ldrd	r2, [r3]
    5718:	orr	lr, lr, r0, lsl #16
    571c:	ldrb	r0, [sl, #8]
    5720:	orr	r1, lr, r0, lsl #24
    5724:	str	r1, [sp, #148]	; 0x94
    5728:	ldrd	r0, [sp, #144]	; 0x90
    572c:	cmp	r1, r3
    5730:	cmpeq	r0, r2
    5734:	bne	5e34 <MyGame_Example_Alt_parse_json_table+0xa98>
    5738:	cmp	ip, #4
    573c:	ble	5e34 <MyGame_Example_Alt_parse_json_table+0xa98>
    5740:	mov	r1, r6
    5744:	mov	r3, #4
    5748:	mov	r2, r4
    574c:	mov	r0, r5
    5750:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    5754:	cmp	r6, r0
    5758:	mov	r1, r0
    575c:	beq	5e34 <MyGame_Example_Alt_parse_json_table+0xa98>
    5760:	ldr	lr, [pc, #168]	; 5810 <MyGame_Example_Alt_parse_json_table+0x474>
    5764:	movw	r0, #0
    5768:	movt	r0, #0
    576c:	movw	r2, #0
    5770:	movt	r2, #0
    5774:	ldr	ip, [sp, #296]	; 0x128
    5778:	mov	r3, r7
    577c:	str	r0, [sp, #12]
    5780:	mov	r0, #3
    5784:	str	r2, [sp, #16]
    5788:	mov	r2, r4
    578c:	str	r0, [sp]
    5790:	mov	r0, r5
    5794:	stmib	sp, {ip, lr}
    5798:	bl	0 <flatcc_json_parser_union_type_vector>
    579c:	mov	fp, r0
    57a0:	b	5588 <MyGame_Example_Alt_parse_json_table+0x1ec>
    57a4:	mov	r3, #0
    57a8:	mov	lr, r3
    57ac:	b	56f4 <MyGame_Example_Alt_parse_json_table+0x358>
    57b0:	mov	lr, #0
    57b4:	b	56fc <MyGame_Example_Alt_parse_json_table+0x360>
    57b8:	mov	lr, #0
    57bc:	b	5704 <MyGame_Example_Alt_parse_json_table+0x368>
    57c0:	add	r1, fp, #1
    57c4:	sub	r3, r4, r1
    57c8:	cmp	r3, #1
    57cc:	ble	57e0 <MyGame_Example_Alt_parse_json_table+0x444>
    57d0:	ldrb	r3, [fp, #1]
    57d4:	cmp	r3, #32
    57d8:	bhi	79dc <MyGame_Example_Alt_parse_json_table+0x2640>
    57dc:	beq	7b08 <MyGame_Example_Alt_parse_json_table+0x276c>
    57e0:	mov	r2, r4
    57e4:	mov	r0, r5
    57e8:	bl	0 <flatcc_json_parser_space_ext>
    57ec:	mov	sl, r0
    57f0:	ldr	r3, [sp, #292]	; 0x124
    57f4:	b	545c <MyGame_Example_Alt_parse_json_table+0xc0>
    57f8:	.word	0x616e795f
    57fc:	.word	0x6d616e79
    5800:	.word	0x616e7900
    5804:	.word	0x6d616e79
    5808:	.word	0x00000000
    580c:	.word	0x74797065
    5810:	.word	0x00000024
    5814:	ldrd	r0, [sp, #32]
    5818:	lsr	r3, r0, #16
    581c:	str	r3, [sp, #128]	; 0x80
    5820:	ldr	lr, [sp, #128]	; 0x80
    5824:	str	r1, [sp, #132]	; 0x84
    5828:	add	r3, pc, #1008	; 0x3f0
    582c:	ldrd	r2, [r3]
    5830:	lsl	lr, lr, #16
    5834:	str	lr, [sp, #128]	; 0x80
    5838:	ldrd	r0, [sp, #128]	; 0x80
    583c:	cmp	r1, r3
    5840:	cmpeq	r0, r2
    5844:	bne	6de4 <MyGame_Example_Alt_parse_json_table+0x1a48>
    5848:	cmp	ip, #6
    584c:	ble	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    5850:	mov	r3, #6
    5854:	mov	r2, r4
    5858:	mov	r1, sl
    585c:	mov	r0, r5
    5860:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    5864:	cmp	r0, sl
    5868:	mov	r6, r0
    586c:	beq	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    5870:	mov	r1, #3
    5874:	ldr	r0, [r5]
    5878:	bl	0 <flatcc_builder_start_table>
    587c:	cmp	r0, #0
    5880:	mov	r1, r6
    5884:	bne	5c04 <MyGame_Example_Alt_parse_json_table+0x868>
    5888:	add	r3, sp, #300	; 0x12c
    588c:	mov	r2, r4
    5890:	mov	r0, r5
    5894:	bl	dfc <flatcc_json_parser_object_start>
    5898:	ldr	r3, [sp, #300]	; 0x12c
    589c:	cmp	r3, #0
    58a0:	beq	826c <MyGame_Example_Alt_parse_json_table+0x2ed0>
    58a4:	mov	r7, r5
    58a8:	mov	r5, r4
    58ac:	cmp	r5, r0
    58b0:	beq	58dc <MyGame_Example_Alt_parse_json_table+0x540>
    58b4:	ldrb	r3, [r0]
    58b8:	cmp	r3, #34	; 0x22
    58bc:	moveq	r3, #0
    58c0:	addeq	r0, r0, #1
    58c4:	streq	r3, [r7, #12]
    58c8:	beq	58dc <MyGame_Example_Alt_parse_json_table+0x540>
    58cc:	cmp	r3, #46	; 0x2e
    58d0:	movne	r3, #1
    58d4:	strne	r3, [r7, #12]
    58d8:	beq	6d8c <MyGame_Example_Alt_parse_json_table+0x19f0>
    58dc:	sub	r3, r5, r0
    58e0:	cmp	r3, #8
    58e4:	bhi	5918 <MyGame_Example_Alt_parse_json_table+0x57c>
    58e8:	sub	r3, r3, #1
    58ec:	cmp	r3, #7
    58f0:	ldrls	pc, [pc, r3, lsl #2]
    58f4:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x924>
    58f8:	.word	0x000059e0
    58fc:	.word	0x000059d4
    5900:	.word	0x000059c8
    5904:	.word	0x000059f8
    5908:	.word	0x000059ec
    590c:	.word	0x00005a04
    5910:	.word	0x000059bc
    5914:	.word	0x00005918
    5918:	ldrb	r2, [r0, #7]
    591c:	mov	r3, #0
    5920:	mov	r1, r3
    5924:	ldrb	r8, [r0, #6]
    5928:	orr	r2, r2, r8, lsl #8
    592c:	ldrb	r8, [r0, #5]
    5930:	orr	r2, r2, r8, lsl #16
    5934:	ldrb	r8, [r0, #4]
    5938:	orr	r2, r2, r8, lsl #24
    593c:	ldrb	r8, [r0, #3]
    5940:	orr	r1, r1, r8
    5944:	ldrb	r8, [r0, #2]
    5948:	orr	r1, r1, r8, lsl #8
    594c:	ldrb	r8, [r0, #1]
    5950:	orr	r1, r1, r8, lsl #16
    5954:	str	r2, [sp, #40]	; 0x28
    5958:	ldrb	r2, [r0]
    595c:	add	r9, pc, #708	; 0x2c4
    5960:	ldrd	r8, [r9]
    5964:	orr	r3, r1, r2, lsl #24
    5968:	str	r3, [sp, #44]	; 0x2c
    596c:	ldrd	r2, [sp, #40]	; 0x28
    5970:	cmp	r3, r9
    5974:	cmpeq	r2, r8
    5978:	bne	5cc0 <MyGame_Example_Alt_parse_json_table+0x924>
    597c:	add	r1, r0, #8
    5980:	sub	r3, r5, r1
    5984:	cmp	r3, #8
    5988:	bhi	5a10 <MyGame_Example_Alt_parse_json_table+0x674>
    598c:	sub	r3, r3, #1
    5990:	cmp	r3, #7
    5994:	ldrls	pc, [pc, r3, lsl #2]
    5998:	b	5cc4 <MyGame_Example_Alt_parse_json_table+0x928>
    599c:	.word	0x00005b00
    59a0:	.word	0x00005af4
    59a4:	.word	0x00005ae8
    59a8:	.word	0x00005adc
    59ac:	.word	0x00005ad0
    59b0:	.word	0x00005ac4
    59b4:	.word	0x00005ab8
    59b8:	.word	0x00005a10
    59bc:	mov	r2, #0
    59c0:	mov	r3, #0
    59c4:	b	5920 <MyGame_Example_Alt_parse_json_table+0x584>
    59c8:	mov	r2, #0
    59cc:	mov	r1, r2
    59d0:	b	5944 <MyGame_Example_Alt_parse_json_table+0x5a8>
    59d4:	mov	r2, #0
    59d8:	mov	r1, r2
    59dc:	b	594c <MyGame_Example_Alt_parse_json_table+0x5b0>
    59e0:	mov	r2, #0
    59e4:	mov	r1, r2
    59e8:	b	5954 <MyGame_Example_Alt_parse_json_table+0x5b8>
    59ec:	mov	r2, #0
    59f0:	mov	r1, r2
    59f4:	b	5934 <MyGame_Example_Alt_parse_json_table+0x598>
    59f8:	mov	r2, #0
    59fc:	mov	r1, r2
    5a00:	b	593c <MyGame_Example_Alt_parse_json_table+0x5a0>
    5a04:	mov	r2, #0
    5a08:	mov	r1, r2
    5a0c:	b	592c <MyGame_Example_Alt_parse_json_table+0x590>
    5a10:	ldrb	r2, [r0, #15]
    5a14:	mov	r3, #0
    5a18:	mov	r8, r3
    5a1c:	ldrb	sl, [r0, #14]
    5a20:	orr	r2, r2, sl, lsl #8
    5a24:	ldrb	sl, [r0, #13]
    5a28:	orr	r2, r2, sl, lsl #16
    5a2c:	ldrb	sl, [r0, #12]
    5a30:	mov	r6, r8
    5a34:	orr	sl, r2, sl, lsl #24
    5a38:	ldrb	r8, [r0, #11]
    5a3c:	orr	r8, r6, r8
    5a40:	ldrb	r2, [r0, #10]
    5a44:	orr	r8, r8, r2, lsl #8
    5a48:	ldrb	r2, [r0, #9]
    5a4c:	orr	r6, r8, r2, lsl #16
    5a50:	ldrb	r2, [r0, #8]
    5a54:	str	sl, [sp, #72]	; 0x48
    5a58:	add	r9, pc, #464	; 0x1d0
    5a5c:	ldrd	r8, [r9]
    5a60:	orr	r3, r6, r2, lsl #24
    5a64:	str	r3, [sp, #76]	; 0x4c
    5a68:	ldrd	r2, [sp, #72]	; 0x48
    5a6c:	cmp	r3, r9
    5a70:	cmpeq	r2, r8
    5a74:	bne	5cc4 <MyGame_Example_Alt_parse_json_table+0x928>
    5a78:	add	r4, r0, #16
    5a7c:	sub	r6, r5, r4
    5a80:	cmp	r6, #8
    5a84:	bhi	5b0c <MyGame_Example_Alt_parse_json_table+0x770>
    5a88:	sub	r3, r6, #1
    5a8c:	cmp	r3, #7
    5a90:	ldrls	pc, [pc, r3, lsl #2]
    5a94:	b	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    5a98:	.word	0x00005c9c
    5a9c:	.word	0x00005c60
    5aa0:	.word	0x00005c90
    5aa4:	.word	0x00005c84
    5aa8:	.word	0x00005c78
    5aac:	.word	0x00005c6c
    5ab0:	.word	0x00005c54
    5ab4:	.word	0x00005b0c
    5ab8:	mov	r2, #0
    5abc:	mov	r3, #0
    5ac0:	b	5a18 <MyGame_Example_Alt_parse_json_table+0x67c>
    5ac4:	mov	r2, #0
    5ac8:	mov	r8, r2
    5acc:	b	5a24 <MyGame_Example_Alt_parse_json_table+0x688>
    5ad0:	mov	r2, #0
    5ad4:	mov	r8, r2
    5ad8:	b	5a2c <MyGame_Example_Alt_parse_json_table+0x690>
    5adc:	mov	sl, #0
    5ae0:	mov	r6, sl
    5ae4:	b	5a38 <MyGame_Example_Alt_parse_json_table+0x69c>
    5ae8:	mov	sl, #0
    5aec:	mov	r8, sl
    5af0:	b	5a40 <MyGame_Example_Alt_parse_json_table+0x6a4>
    5af4:	mov	sl, #0
    5af8:	mov	r8, sl
    5afc:	b	5a48 <MyGame_Example_Alt_parse_json_table+0x6ac>
    5b00:	mov	sl, #0
    5b04:	mov	r6, sl
    5b08:	b	5a50 <MyGame_Example_Alt_parse_json_table+0x6b4>
    5b0c:	ldrb	r2, [r0, #23]
    5b10:	mov	r3, #0
    5b14:	mov	lr, r3
    5b18:	ldrb	r8, [r0, #22]
    5b1c:	orr	ip, r2, r8, lsl #8
    5b20:	ldrb	sl, [r0, #21]
    5b24:	orr	ip, ip, sl, lsl #16
    5b28:	ldrb	sl, [r0, #20]
    5b2c:	orr	ip, ip, sl, lsl #24
    5b30:	ldrb	r8, [r0, #19]
    5b34:	orr	lr, lr, r8
    5b38:	ldrb	sl, [r0, #18]
    5b3c:	orr	lr, lr, sl, lsl #8
    5b40:	lsr	r3, ip, #16
    5b44:	ldrb	sl, [r0, #17]
    5b48:	ldrb	r0, [r0, #16]
    5b4c:	str	r3, [sp, #88]	; 0x58
    5b50:	ldr	r8, [sp, #88]	; 0x58
    5b54:	orr	lr, lr, sl, lsl #16
    5b58:	add	r3, pc, #216	; 0xd8
    5b5c:	ldrd	r2, [r3]
    5b60:	orr	r0, lr, r0, lsl #24
    5b64:	lsl	r8, r8, #16
    5b68:	str	r8, [sp, #88]	; 0x58
    5b6c:	str	r0, [sp, #92]	; 0x5c
    5b70:	ldrd	r8, [sp, #88]	; 0x58
    5b74:	cmp	r9, r3
    5b78:	cmpeq	r8, r2
    5b7c:	beq	66d8 <MyGame_Example_Alt_parse_json_table+0x133c>
    5b80:	and	r1, ip, #-16777216	; 0xff000000
    5b84:	add	r3, pc, #180	; 0xb4
    5b88:	ldrd	r2, [r3]
    5b8c:	str	r1, [sp, #136]	; 0x88
    5b90:	str	r0, [sp, #140]	; 0x8c
    5b94:	ldrd	r0, [sp, #136]	; 0x88
    5b98:	cmp	r1, r3
    5b9c:	cmpeq	r0, r2
    5ba0:	bne	5e4c <MyGame_Example_Alt_parse_json_table+0xab0>
    5ba4:	cmp	r6, #5
    5ba8:	ble	5e4c <MyGame_Example_Alt_parse_json_table+0xab0>
    5bac:	mov	r3, #5
    5bb0:	mov	r2, r5
    5bb4:	mov	r1, r4
    5bb8:	mov	r0, r7
    5bbc:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    5bc0:	cmp	r4, r0
    5bc4:	mov	r8, r0
    5bc8:	beq	5e4c <MyGame_Example_Alt_parse_json_table+0xab0>
    5bcc:	mov	r1, #9
    5bd0:	ldr	r0, [r7]
    5bd4:	bl	0 <flatcc_builder_start_table>
    5bd8:	cmp	r0, #0
    5bdc:	beq	6fbc <MyGame_Example_Alt_parse_json_table+0x1c20>
    5be0:	mov	r4, r5
    5be4:	mov	r1, r8
    5be8:	mov	r5, r7
    5bec:	mov	r3, #33	; 0x21
    5bf0:	mov	r2, r4
    5bf4:	mov	r0, r5
    5bf8:	bl	0 <flatcc_json_parser_set_error>
    5bfc:	mov	fp, r0
    5c00:	mov	r1, fp
    5c04:	mov	r3, #33	; 0x21
    5c08:	mov	r2, r4
    5c0c:	mov	r0, r5
    5c10:	bl	0 <flatcc_json_parser_set_error>
    5c14:	mov	fp, r0
    5c18:	b	53e4 <MyGame_Example_Alt_parse_json_table+0x48>
    5c1c:	nop	{0}
    5c20:	.word	0x69780000
    5c24:	.word	0x70726566
    5c28:	.word	0x6a736f6e
    5c2c:	.word	0x74657374
    5c30:	.word	0x69787061
    5c34:	.word	0x70726566
    5c38:	.word	0x67320000
    5c3c:	.word	0x7273696e
    5c40:	.word	0x67000000
    5c44:	.word	0x7273696e
    5c48:	.word	0x67330000
    5c4c:	.word	0x7273696e
    5c50:	.word	0x000000a0
    5c54:	mov	r2, #0
    5c58:	mov	r3, #0
    5c5c:	b	5b14 <MyGame_Example_Alt_parse_json_table+0x778>
    5c60:	mov	ip, #0
    5c64:	mov	lr, ip
    5c68:	b	5b40 <MyGame_Example_Alt_parse_json_table+0x7a4>
    5c6c:	mov	ip, #0
    5c70:	mov	lr, ip
    5c74:	b	5b20 <MyGame_Example_Alt_parse_json_table+0x784>
    5c78:	mov	ip, #0
    5c7c:	mov	lr, ip
    5c80:	b	5b28 <MyGame_Example_Alt_parse_json_table+0x78c>
    5c84:	mov	ip, #0
    5c88:	mov	lr, ip
    5c8c:	b	5b30 <MyGame_Example_Alt_parse_json_table+0x794>
    5c90:	mov	ip, #0
    5c94:	mov	lr, ip
    5c98:	b	5b38 <MyGame_Example_Alt_parse_json_table+0x79c>
    5c9c:	ldrb	r2, [r0, #16]
    5ca0:	lsl	r3, r2, #24
    5ca4:	str	r3, [sp, #92]	; 0x5c
    5ca8:	mov	r3, #0
    5cac:	str	r3, [sp, #88]	; 0x58
    5cb0:	ldrd	r2, [sp, #88]	; 0x58
    5cb4:	mov	ip, r2
    5cb8:	mov	r0, r3
    5cbc:	b	5b80 <MyGame_Example_Alt_parse_json_table+0x7e4>
    5cc0:	mov	r1, r0
    5cc4:	mov	r2, r5
    5cc8:	mov	r0, r7
    5ccc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5cd0:	mov	fp, r0
    5cd4:	sub	r3, r5, fp
    5cd8:	cmp	r3, #1
    5cdc:	ble	5cf0 <MyGame_Example_Alt_parse_json_table+0x954>
    5ce0:	ldrb	r3, [fp]
    5ce4:	cmp	r3, #32
    5ce8:	bhi	5d04 <MyGame_Example_Alt_parse_json_table+0x968>
    5cec:	beq	5dd0 <MyGame_Example_Alt_parse_json_table+0xa34>
    5cf0:	mov	r1, fp
    5cf4:	mov	r2, r5
    5cf8:	mov	r0, r7
    5cfc:	bl	0 <flatcc_json_parser_space_ext>
    5d00:	mov	fp, r0
    5d04:	cmp	r5, fp
    5d08:	beq	5d84 <MyGame_Example_Alt_parse_json_table+0x9e8>
    5d0c:	ldrb	r3, [fp]
    5d10:	cmp	r3, #44	; 0x2c
    5d14:	beq	5de4 <MyGame_Example_Alt_parse_json_table+0xa48>
    5d18:	mov	r3, #0
    5d1c:	mov	r4, r5
    5d20:	mov	r5, r7
    5d24:	str	r3, [sp, #300]	; 0x12c
    5d28:	ldrb	r3, [fp]
    5d2c:	cmp	r3, #125	; 0x7d
    5d30:	beq	5d50 <MyGame_Example_Alt_parse_json_table+0x9b4>
    5d34:	mov	r3, #10
    5d38:	mov	r1, fp
    5d3c:	mov	r2, r4
    5d40:	mov	r0, r7
    5d44:	bl	0 <flatcc_json_parser_set_error>
    5d48:	ldr	r3, [sp, #300]	; 0x12c
    5d4c:	b	589c <MyGame_Example_Alt_parse_json_table+0x500>
    5d50:	add	r1, fp, #1
    5d54:	sub	r3, r4, r1
    5d58:	cmp	r3, #1
    5d5c:	ble	5d70 <MyGame_Example_Alt_parse_json_table+0x9d4>
    5d60:	ldrb	r3, [fp, #1]
    5d64:	cmp	r3, #32
    5d68:	bhi	6dd4 <MyGame_Example_Alt_parse_json_table+0x1a38>
    5d6c:	beq	6e74 <MyGame_Example_Alt_parse_json_table+0x1ad8>
    5d70:	mov	r2, r4
    5d74:	mov	r0, r5
    5d78:	bl	0 <flatcc_json_parser_space_ext>
    5d7c:	ldr	r3, [sp, #300]	; 0x12c
    5d80:	b	589c <MyGame_Example_Alt_parse_json_table+0x500>
    5d84:	mov	r4, r5
    5d88:	mov	r3, #0
    5d8c:	mov	r5, r7
    5d90:	str	r3, [sp, #300]	; 0x12c
    5d94:	ldr	r1, [r5, #24]
    5d98:	cmp	r1, #0
    5d9c:	bne	5c00 <MyGame_Example_Alt_parse_json_table+0x864>
    5da0:	ldr	r0, [r5]
    5da4:	str	r1, [sp, #276]	; 0x114
    5da8:	bl	0 <flatcc_builder_end_table>
    5dac:	subs	r6, r0, #0
    5db0:	ldr	r1, [sp, #276]	; 0x114
    5db4:	beq	5c00 <MyGame_Example_Alt_parse_json_table+0x864>
    5db8:	ldr	r0, [r5]
    5dbc:	bl	0 <flatcc_builder_table_add_offset>
    5dc0:	cmp	r0, #0
    5dc4:	beq	53e4 <MyGame_Example_Alt_parse_json_table+0x48>
    5dc8:	str	r6, [r0]
    5dcc:	b	5588 <MyGame_Example_Alt_parse_json_table+0x1ec>
    5dd0:	ldrb	r3, [fp, #1]
    5dd4:	cmp	r3, #32
    5dd8:	addhi	fp, fp, #1
    5ddc:	bls	5cf0 <MyGame_Example_Alt_parse_json_table+0x954>
    5de0:	b	5d04 <MyGame_Example_Alt_parse_json_table+0x968>
    5de4:	add	r0, fp, #1
    5de8:	sub	r3, r5, r0
    5dec:	cmp	r3, #1
    5df0:	ble	5e04 <MyGame_Example_Alt_parse_json_table+0xa68>
    5df4:	ldrb	r3, [fp, #1]
    5df8:	cmp	r3, #32
    5dfc:	bhi	5e14 <MyGame_Example_Alt_parse_json_table+0xa78>
    5e00:	beq	75f8 <MyGame_Example_Alt_parse_json_table+0x225c>
    5e04:	mov	r1, r0
    5e08:	mov	r2, r5
    5e0c:	mov	r0, r7
    5e10:	bl	0 <flatcc_json_parser_space_ext>
    5e14:	cmp	r5, r0
    5e18:	beq	7610 <MyGame_Example_Alt_parse_json_table+0x2274>
    5e1c:	ldrb	r3, [r0]
    5e20:	cmp	r3, #125	; 0x7d
    5e24:	beq	7b5c <MyGame_Example_Alt_parse_json_table+0x27c0>
    5e28:	mov	r3, #1
    5e2c:	str	r3, [sp, #300]	; 0x12c
    5e30:	b	58ac <MyGame_Example_Alt_parse_json_table+0x510>
    5e34:	mov	r1, r6
    5e38:	mov	r2, r4
    5e3c:	mov	r0, r5
    5e40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5e44:	mov	fp, r0
    5e48:	b	5588 <MyGame_Example_Alt_parse_json_table+0x1ec>
    5e4c:	sub	r3, pc, #524	; 0x20c
    5e50:	ldrd	r2, [r3]
    5e54:	ldrd	r0, [sp, #88]	; 0x58
    5e58:	cmp	r1, r3
    5e5c:	cmpeq	r0, r2
    5e60:	bne	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    5e64:	cmp	r6, #6
    5e68:	ble	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    5e6c:	mov	r3, #6
    5e70:	mov	r2, r5
    5e74:	mov	r1, r4
    5e78:	mov	r0, r7
    5e7c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    5e80:	cmp	r4, r0
    5e84:	mov	r6, r0
    5e88:	beq	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    5e8c:	mov	r1, #2
    5e90:	ldr	r0, [r7]
    5e94:	bl	0 <flatcc_builder_start_table>
    5e98:	cmp	r0, #0
    5e9c:	bne	6dc4 <MyGame_Example_Alt_parse_json_table+0x1a28>
    5ea0:	add	r3, sp, #304	; 0x130
    5ea4:	mov	r1, r6
    5ea8:	mov	r2, r5
    5eac:	mov	r0, r7
    5eb0:	bl	dfc <flatcc_json_parser_object_start>
    5eb4:	ldr	r3, [sp, #304]	; 0x130
    5eb8:	cmp	r3, #0
    5ebc:	beq	8264 <MyGame_Example_Alt_parse_json_table+0x2ec8>
    5ec0:	ldr	r6, [pc, #-632]	; 5c50 <MyGame_Example_Alt_parse_json_table+0x8b4>
    5ec4:	mov	r1, r0
    5ec8:	cmp	r5, r1
    5ecc:	beq	5ef8 <MyGame_Example_Alt_parse_json_table+0xb5c>
    5ed0:	ldrb	r3, [r1]
    5ed4:	cmp	r3, #34	; 0x22
    5ed8:	moveq	r3, #0
    5edc:	addeq	r1, r1, #1
    5ee0:	streq	r3, [r7, #12]
    5ee4:	beq	5ef8 <MyGame_Example_Alt_parse_json_table+0xb5c>
    5ee8:	cmp	r3, #46	; 0x2e
    5eec:	movne	r3, #1
    5ef0:	strne	r3, [r7, #12]
    5ef4:	beq	6dac <MyGame_Example_Alt_parse_json_table+0x1a10>
    5ef8:	sub	r3, r5, r1
    5efc:	cmp	r3, #8
    5f00:	bhi	5f34 <MyGame_Example_Alt_parse_json_table+0xb98>
    5f04:	sub	r3, r3, #1
    5f08:	cmp	r3, #7
    5f0c:	ldrls	pc, [pc, r3, lsl #2]
    5f10:	b	6270 <MyGame_Example_Alt_parse_json_table+0xed4>
    5f14:	.word	0x0000601c
    5f18:	.word	0x00006010
    5f1c:	.word	0x00006004
    5f20:	.word	0x00005ff8
    5f24:	.word	0x00005fec
    5f28:	.word	0x00005fe0
    5f2c:	.word	0x00005fd4
    5f30:	.word	0x00005f34
    5f34:	ldrb	sl, [r1, #7]
    5f38:	mov	fp, #0
    5f3c:	mov	r3, fp
    5f40:	ldrb	r8, [r1, #6]
    5f44:	orr	r2, sl, r8, lsl #8
    5f48:	ldrb	r8, [r1, #5]
    5f4c:	orr	r2, r2, r8, lsl #16
    5f50:	ldrb	r8, [r1, #4]
    5f54:	orr	r2, r2, r8, lsl #24
    5f58:	ldrb	sl, [r1, #3]
    5f5c:	orr	r3, r3, sl
    5f60:	ldrb	sl, [r1, #2]
    5f64:	orr	r3, r3, sl, lsl #8
    5f68:	ldrb	sl, [r1, #1]
    5f6c:	orr	sl, r3, sl, lsl #16
    5f70:	str	r2, [sp, #56]	; 0x38
    5f74:	ldrb	r2, [r1]
    5f78:	add	r9, pc, #912	; 0x390
    5f7c:	ldrd	r8, [r9]
    5f80:	orr	r3, sl, r2, lsl #24
    5f84:	str	r3, [sp, #60]	; 0x3c
    5f88:	ldrd	r2, [sp, #56]	; 0x38
    5f8c:	cmp	r3, r9
    5f90:	cmpeq	r2, r8
    5f94:	bne	6270 <MyGame_Example_Alt_parse_json_table+0xed4>
    5f98:	add	r4, r1, #8
    5f9c:	sub	r0, r5, r4
    5fa0:	cmp	r0, #8
    5fa4:	bhi	6028 <MyGame_Example_Alt_parse_json_table+0xc8c>
    5fa8:	sub	r3, r0, #2
    5fac:	cmp	r3, #6
    5fb0:	ldrls	pc, [pc, r3, lsl #2]
    5fb4:	b	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    5fb8:	.word	0x00006250
    5fbc:	.word	0x0000622c
    5fc0:	.word	0x00006220
    5fc4:	.word	0x00006244
    5fc8:	.word	0x00006214
    5fcc:	.word	0x00006238
    5fd0:	.word	0x00006028
    5fd4:	mov	sl, #0
    5fd8:	mov	fp, #0
    5fdc:	b	5f3c <MyGame_Example_Alt_parse_json_table+0xba0>
    5fe0:	mov	r2, #0
    5fe4:	mov	r3, r2
    5fe8:	b	5f48 <MyGame_Example_Alt_parse_json_table+0xbac>
    5fec:	mov	r2, #0
    5ff0:	mov	r3, r2
    5ff4:	b	5f50 <MyGame_Example_Alt_parse_json_table+0xbb4>
    5ff8:	mov	r2, #0
    5ffc:	mov	r3, r2
    6000:	b	5f58 <MyGame_Example_Alt_parse_json_table+0xbbc>
    6004:	mov	r2, #0
    6008:	mov	r3, r2
    600c:	b	5f60 <MyGame_Example_Alt_parse_json_table+0xbc4>
    6010:	mov	r2, #0
    6014:	mov	r3, r2
    6018:	b	5f68 <MyGame_Example_Alt_parse_json_table+0xbcc>
    601c:	mov	r2, #0
    6020:	mov	sl, r2
    6024:	b	5f70 <MyGame_Example_Alt_parse_json_table+0xbd4>
    6028:	ldrb	r2, [r1, #15]
    602c:	mov	r3, #0
    6030:	mov	ip, r3
    6034:	ldrb	r8, [r1, #14]
    6038:	orr	r2, r2, r8, lsl #8
    603c:	ldrb	sl, [r1, #13]
    6040:	orr	r2, r2, sl, lsl #16
    6044:	ldrb	sl, [r1, #12]
    6048:	orr	r2, r2, sl, lsl #24
    604c:	ldrb	sl, [r1, #11]
    6050:	orr	ip, ip, sl
    6054:	ldrb	sl, [r1, #8]
    6058:	str	r2, [sp, #64]	; 0x40
    605c:	ldrb	r8, [r1, #10]
    6060:	ldrb	r2, [r1, #9]
    6064:	lsl	sl, sl, #24
    6068:	orr	r8, ip, r8, lsl #8
    606c:	orr	sl, sl, r2, lsl #16
    6070:	orr	r3, sl, r8
    6074:	add	r9, pc, #668	; 0x29c
    6078:	ldrd	r8, [r9]
    607c:	str	r3, [sp, #68]	; 0x44
    6080:	ldrd	r2, [sp, #64]	; 0x40
    6084:	cmp	r3, r9
    6088:	cmpeq	r2, r8
    608c:	beq	6490 <MyGame_Example_Alt_parse_json_table+0x10f4>
    6090:	ldrd	r2, [sp, #64]	; 0x40
    6094:	add	r9, pc, #644	; 0x284
    6098:	ldrd	r8, [r9]
    609c:	bic	r1, r2, #255	; 0xff
    60a0:	str	r1, [sp, #104]	; 0x68
    60a4:	str	r3, [sp, #108]	; 0x6c
    60a8:	ldrd	r2, [sp, #104]	; 0x68
    60ac:	cmp	r3, r9
    60b0:	cmpeq	r2, r8
    60b4:	bne	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    60b8:	cmp	r0, #7
    60bc:	ble	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    60c0:	mov	r3, #7
    60c4:	mov	r2, r5
    60c8:	mov	r1, r4
    60cc:	mov	r0, r7
    60d0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    60d4:	cmp	r4, r0
    60d8:	mov	r8, r0
    60dc:	beq	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    60e0:	mov	r1, #0
    60e4:	add	r2, sp, #312	; 0x138
    60e8:	cmp	r5, r0
    60ec:	mov	r0, #0
    60f0:	mov	r3, #0
    60f4:	strd	r0, [r2]
    60f8:	add	r2, sp, #320	; 0x140
    60fc:	str	r3, [sp, #308]	; 0x134
    6100:	strd	r0, [r2]
    6104:	beq	6e88 <MyGame_Example_Alt_parse_json_table+0x1aec>
    6108:	mov	r0, r2
    610c:	add	r3, sp, #308	; 0x134
    6110:	mov	r2, r5
    6114:	mov	r1, r8
    6118:	str	r0, [sp]
    611c:	mov	r0, r7
    6120:	bl	0 <flatcc_json_parser_integer>
    6124:	cmp	r8, r0
    6128:	mov	fp, r0
    612c:	bne	6f88 <MyGame_Example_Alt_parse_json_table+0x1bec>
    6130:	add	r0, sp, #312	; 0x138
    6134:	mov	r3, r6
    6138:	mov	r2, r5
    613c:	mov	r1, fp
    6140:	str	r0, [sp]
    6144:	mov	r0, r7
    6148:	bl	2600 <flatcc_json_parser_symbolic_int64>
    614c:	cmp	r5, r0
    6150:	cmpne	r0, fp
    6154:	beq	823c <MyGame_Example_Alt_parse_json_table+0x2ea0>
    6158:	add	r3, sp, #312	; 0x138
    615c:	mov	fp, r0
    6160:	ldrd	r2, [r3]
    6164:	orrs	r3, r2, r3
    6168:	bne	6178 <MyGame_Example_Alt_parse_json_table+0xddc>
    616c:	ldr	r3, [r7, #8]
    6170:	tst	r3, #2
    6174:	beq	61a0 <MyGame_Example_Alt_parse_json_table+0xe04>
    6178:	mov	r3, #8
    617c:	mov	r1, #0
    6180:	ldr	r0, [r7]
    6184:	mov	r2, r3
    6188:	bl	0 <flatcc_builder_table_add>
    618c:	cmp	r0, #0
    6190:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    6194:	add	r3, sp, #312	; 0x138
    6198:	ldrd	r2, [r3]
    619c:	strd	r2, [r0]
    61a0:	sub	r3, r5, fp
    61a4:	cmp	r3, #1
    61a8:	ble	61bc <MyGame_Example_Alt_parse_json_table+0xe20>
    61ac:	ldrb	r3, [fp]
    61b0:	cmp	r3, #32
    61b4:	bhi	61d0 <MyGame_Example_Alt_parse_json_table+0xe34>
    61b8:	beq	665c <MyGame_Example_Alt_parse_json_table+0x12c0>
    61bc:	mov	r1, fp
    61c0:	mov	r2, r5
    61c4:	mov	r0, r7
    61c8:	bl	0 <flatcc_json_parser_space_ext>
    61cc:	mov	fp, r0
    61d0:	cmp	r5, fp
    61d4:	beq	62d0 <MyGame_Example_Alt_parse_json_table+0xf34>
    61d8:	ldrb	r3, [fp]
    61dc:	cmp	r3, #44	; 0x2c
    61e0:	beq	6670 <MyGame_Example_Alt_parse_json_table+0x12d4>
    61e4:	mov	r3, #0
    61e8:	str	r3, [sp, #304]	; 0x130
    61ec:	ldrb	r3, [fp]
    61f0:	cmp	r3, #125	; 0x7d
    61f4:	beq	629c <MyGame_Example_Alt_parse_json_table+0xf00>
    61f8:	mov	r3, #10
    61fc:	mov	r1, fp
    6200:	mov	r2, r5
    6204:	mov	r0, r7
    6208:	bl	0 <flatcc_json_parser_set_error>
    620c:	ldr	r3, [sp, #304]	; 0x130
    6210:	b	5eb8 <MyGame_Example_Alt_parse_json_table+0xb1c>
    6214:	mov	r2, #0
    6218:	mov	ip, r2
    621c:	b	603c <MyGame_Example_Alt_parse_json_table+0xca0>
    6220:	mov	r2, #0
    6224:	mov	ip, r2
    6228:	b	604c <MyGame_Example_Alt_parse_json_table+0xcb0>
    622c:	mov	r2, #0
    6230:	mov	ip, r2
    6234:	b	6054 <MyGame_Example_Alt_parse_json_table+0xcb8>
    6238:	mov	r2, #0
    623c:	mov	r3, #0
    6240:	b	6030 <MyGame_Example_Alt_parse_json_table+0xc94>
    6244:	mov	r2, #0
    6248:	mov	ip, r2
    624c:	b	6044 <MyGame_Example_Alt_parse_json_table+0xca8>
    6250:	ldrb	r2, [r1, #8]
    6254:	mov	ip, #0
    6258:	ldrb	r8, [r1, #9]
    625c:	str	ip, [sp, #64]	; 0x40
    6260:	lsl	r2, r2, #24
    6264:	orr	r3, r2, r8, lsl #16
    6268:	str	r3, [sp, #68]	; 0x44
    626c:	b	6090 <MyGame_Example_Alt_parse_json_table+0xcf4>
    6270:	mov	r2, r5
    6274:	mov	r0, r7
    6278:	bl	0 <flatcc_json_parser_unmatched_symbol>
    627c:	mov	fp, r0
    6280:	b	61a0 <MyGame_Example_Alt_parse_json_table+0xe04>
    6284:	mov	r1, r4
    6288:	mov	r2, r5
    628c:	mov	r0, r7
    6290:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6294:	mov	fp, r0
    6298:	b	61a0 <MyGame_Example_Alt_parse_json_table+0xe04>
    629c:	add	r1, fp, #1
    62a0:	sub	r3, r5, r1
    62a4:	cmp	r3, #1
    62a8:	ble	62bc <MyGame_Example_Alt_parse_json_table+0xf20>
    62ac:	ldrb	r3, [fp, #1]
    62b0:	cmp	r3, #32
    62b4:	bhi	6ddc <MyGame_Example_Alt_parse_json_table+0x1a40>
    62b8:	beq	6e90 <MyGame_Example_Alt_parse_json_table+0x1af4>
    62bc:	mov	r2, r5
    62c0:	mov	r0, r7
    62c4:	bl	0 <flatcc_json_parser_space_ext>
    62c8:	ldr	r3, [sp, #304]	; 0x130
    62cc:	b	5eb8 <MyGame_Example_Alt_parse_json_table+0xb1c>
    62d0:	mov	r3, #0
    62d4:	str	r3, [sp, #304]	; 0x130
    62d8:	ldr	r3, [r7, #24]
    62dc:	cmp	r3, #0
    62e0:	bne	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    62e4:	ldr	r0, [r7]
    62e8:	bl	0 <flatcc_builder_end_table>
    62ec:	subs	r4, r0, #0
    62f0:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    62f4:	mov	r1, #2
    62f8:	ldr	r0, [r7]
    62fc:	bl	0 <flatcc_builder_table_add_offset>
    6300:	cmp	r0, #0
    6304:	beq	6b48 <MyGame_Example_Alt_parse_json_table+0x17ac>
    6308:	str	r4, [r0]
    630c:	b	5cd4 <MyGame_Example_Alt_parse_json_table+0x938>
    6310:	.word	0x5f626262
    6314:	.word	0x61616161
    6318:	.word	0x6172745f
    631c:	.word	0x625f7374
    6320:	.word	0x65707300
    6324:	.word	0x625f7374
    6328:	.word	0xffffffff
    632c:	.word	0x63636362
    6330:	.word	0x31323334
    6334:	.word	0x61616161
    6338:	.word	0x73000000
    633c:	.word	0x73746570
    6340:	.word	0x00000094
    6344:	ldrb	r2, [fp, #7]
    6348:	mov	r3, #0
    634c:	mov	lr, r3
    6350:	ldrb	r0, [fp, #6]
    6354:	orr	r2, r2, r0, lsl #8
    6358:	ldrb	r0, [fp, #5]
    635c:	orr	r2, r2, r0, lsl #16
    6360:	ldrb	r0, [fp, #4]
    6364:	orr	r2, r2, r0, lsl #24
    6368:	ldrb	r8, [fp, #3]
    636c:	orr	lr, lr, r8
    6370:	ldrb	r0, [fp]
    6374:	mov	r4, r2
    6378:	mov	r9, #0
    637c:	ldrb	r2, [fp, #1]
    6380:	ldrb	r8, [fp, #2]
    6384:	lsl	r0, r0, #24
    6388:	orr	r0, r0, r2, lsl #16
    638c:	sub	r3, pc, #108	; 0x6c
    6390:	ldrd	r2, [r3]
    6394:	orr	r8, lr, r8, lsl #8
    6398:	orr	r5, r0, r8
    639c:	cmp	r5, r3
    63a0:	cmpeq	r4, r2
    63a4:	bhi	70d0 <MyGame_Example_Alt_parse_json_table+0x1d34>
    63a8:	sub	r3, pc, #128	; 0x80
    63ac:	ldrd	r2, [r3]
    63b0:	cmp	r5, r3
    63b4:	cmpeq	r4, r2
    63b8:	beq	71a0 <MyGame_Example_Alt_parse_json_table+0x1e04>
    63bc:	mov	r8, #0
    63c0:	movw	r3, #24929	; 0x6161
    63c4:	movt	r3, #24929	; 0x6161
    63c8:	mov	r2, #0
    63cc:	str	r8, [sp, #112]	; 0x70
    63d0:	str	r5, [sp, #116]	; 0x74
    63d4:	ldrd	r0, [sp, #112]	; 0x70
    63d8:	cmp	r1, r3
    63dc:	cmpeq	r0, r2
    63e0:	bne	7388 <MyGame_Example_Alt_parse_json_table+0x1fec>
    63e4:	cmp	ip, #4
    63e8:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    63ec:	mov	r1, fp
    63f0:	mov	r3, #4
    63f4:	mov	r2, r6
    63f8:	mov	r0, r7
    63fc:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    6400:	cmp	r0, fp
    6404:	mov	r1, r0
    6408:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    640c:	add	r3, sp, #312	; 0x138
    6410:	mov	r2, r6
    6414:	mov	r0, r7
    6418:	bl	0 <flatcc_json_parser_build_string>
    641c:	ldr	r3, [sp, #312]	; 0x138
    6420:	mov	fp, r0
    6424:	cmp	r3, #0
    6428:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    642c:	mov	r1, r8
    6430:	ldr	r0, [r7]
    6434:	bl	0 <flatcc_builder_table_add_offset>
    6438:	cmp	r0, #0
    643c:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    6440:	ldr	r3, [sp, #312]	; 0x138
    6444:	str	r3, [r0]
    6448:	mov	r1, fp
    644c:	add	r3, sp, #308	; 0x134
    6450:	mov	r2, r6
    6454:	mov	r0, r7
    6458:	bl	2f80 <flatcc_json_parser_object_end>
    645c:	ldr	r3, [sp, #308]	; 0x134
    6460:	mov	fp, r0
    6464:	cmp	r3, #0
    6468:	bne	6fe8 <MyGame_Example_Alt_parse_json_table+0x1c4c>
    646c:	strd	r4, [sp, #248]	; 0xf8
    6470:	mov	r5, r6
    6474:	ldr	r1, [r7, #24]
    6478:	cmp	r1, #0
    647c:	beq	7e3c <MyGame_Example_Alt_parse_json_table+0x2aa0>
    6480:	mov	r4, r5
    6484:	mov	r5, r7
    6488:	mov	r1, fp
    648c:	b	5bec <MyGame_Example_Alt_parse_json_table+0x850>
    6490:	add	r4, r1, #16
    6494:	sub	r0, r5, r4
    6498:	cmp	r0, #8
    649c:	bhi	64cc <MyGame_Example_Alt_parse_json_table+0x1130>
    64a0:	sub	r3, r0, #2
    64a4:	cmp	r3, #6
    64a8:	ldrls	pc, [pc, r3, lsl #2]
    64ac:	b	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    64b0:	.word	0x00006644
    64b4:	.word	0x00006638
    64b8:	.word	0x0000662c
    64bc:	.word	0x00006620
    64c0:	.word	0x00006614
    64c4:	.word	0x00006650
    64c8:	.word	0x000064cc
    64cc:	ldrb	sl, [r1, #23]
    64d0:	mov	fp, #0
    64d4:	mov	r3, fp
    64d8:	ldrb	r8, [r1, #22]
    64dc:	orr	r2, sl, r8, lsl #8
    64e0:	ldrb	r8, [r1, #21]
    64e4:	orr	r2, r2, r8, lsl #16
    64e8:	ldrb	r8, [r1, #20]
    64ec:	orr	r8, r2, r8, lsl #24
    64f0:	ldrb	sl, [r1, #19]
    64f4:	orr	r3, r3, sl
    64f8:	ldrb	sl, [r1, #18]
    64fc:	orr	r3, r3, sl, lsl #8
    6500:	and	r2, r8, #-16777216	; 0xff000000
    6504:	ldrb	sl, [r1, #17]
    6508:	mov	r8, #0
    650c:	str	r2, [sp, #152]	; 0x98
    6510:	ldrb	r2, [r1, #16]
    6514:	orr	sl, r3, sl, lsl #16
    6518:	orr	r3, sl, r2, lsl #24
    651c:	sub	fp, pc, #492	; 0x1ec
    6520:	ldrd	sl, [fp]
    6524:	str	r3, [sp, #156]	; 0x9c
    6528:	ldrd	r2, [sp, #152]	; 0x98
    652c:	cmp	r3, fp
    6530:	cmpeq	r2, sl
    6534:	bne	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    6538:	cmp	r0, #5
    653c:	ble	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    6540:	mov	r3, #5
    6544:	mov	r2, r5
    6548:	mov	r1, r4
    654c:	mov	r0, r7
    6550:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    6554:	cmp	r4, r0
    6558:	mov	r9, r0
    655c:	beq	6284 <MyGame_Example_Alt_parse_json_table+0xee8>
    6560:	mov	r2, #0
    6564:	mov	r3, #0
    6568:	str	r8, [sp, #308]	; 0x134
    656c:	add	r1, sp, #320	; 0x140
    6570:	cmp	r5, r0
    6574:	str	r8, [sp, #312]	; 0x138
    6578:	strd	r2, [r1]
    657c:	beq	7b00 <MyGame_Example_Alt_parse_json_table+0x2764>
    6580:	mov	r0, r1
    6584:	add	r3, sp, #312	; 0x138
    6588:	mov	r2, r5
    658c:	mov	r1, r9
    6590:	str	r0, [sp]
    6594:	mov	r0, r7
    6598:	bl	0 <flatcc_json_parser_integer>
    659c:	cmp	r9, r0
    65a0:	mov	r4, r0
    65a4:	bne	7c88 <MyGame_Example_Alt_parse_json_table+0x28ec>
    65a8:	add	ip, sp, #308	; 0x134
    65ac:	ldr	r3, [pc, #-628]	; 6340 <MyGame_Example_Alt_parse_json_table+0xfa4>
    65b0:	mov	r2, r5
    65b4:	mov	r1, r4
    65b8:	mov	r0, r7
    65bc:	str	ip, [sp]
    65c0:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    65c4:	cmp	r5, r0
    65c8:	cmpne	r0, r4
    65cc:	mov	fp, r0
    65d0:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    65d4:	ldr	r2, [sp, #308]	; 0x134
    65d8:	cmp	r2, #0
    65dc:	bne	65ec <MyGame_Example_Alt_parse_json_table+0x1250>
    65e0:	ldr	r3, [r7, #8]
    65e4:	tst	r3, #2
    65e8:	beq	61a0 <MyGame_Example_Alt_parse_json_table+0xe04>
    65ec:	mov	r3, #4
    65f0:	mov	r1, #1
    65f4:	ldr	r0, [r7]
    65f8:	mov	r2, r3
    65fc:	bl	0 <flatcc_builder_table_add>
    6600:	cmp	r0, #0
    6604:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    6608:	ldr	r3, [sp, #308]	; 0x134
    660c:	str	r3, [r0]
    6610:	b	61a0 <MyGame_Example_Alt_parse_json_table+0xe04>
    6614:	mov	r2, #0
    6618:	mov	r3, r2
    661c:	b	64e0 <MyGame_Example_Alt_parse_json_table+0x1144>
    6620:	mov	r2, #0
    6624:	mov	r3, r2
    6628:	b	64e8 <MyGame_Example_Alt_parse_json_table+0x114c>
    662c:	mov	r8, #0
    6630:	mov	r3, r8
    6634:	b	64f0 <MyGame_Example_Alt_parse_json_table+0x1154>
    6638:	mov	r8, #0
    663c:	mov	r3, r8
    6640:	b	64f8 <MyGame_Example_Alt_parse_json_table+0x115c>
    6644:	mov	r8, #0
    6648:	mov	r3, r8
    664c:	b	6500 <MyGame_Example_Alt_parse_json_table+0x1164>
    6650:	mov	sl, #0
    6654:	mov	fp, #0
    6658:	b	64d4 <MyGame_Example_Alt_parse_json_table+0x1138>
    665c:	ldrb	r3, [fp, #1]
    6660:	cmp	r3, #32
    6664:	addhi	fp, fp, #1
    6668:	bls	61bc <MyGame_Example_Alt_parse_json_table+0xe20>
    666c:	b	61d0 <MyGame_Example_Alt_parse_json_table+0xe34>
    6670:	add	r1, fp, #1
    6674:	sub	r3, r5, r1
    6678:	cmp	r3, #1
    667c:	ble	6690 <MyGame_Example_Alt_parse_json_table+0x12f4>
    6680:	ldrb	r3, [fp, #1]
    6684:	cmp	r3, #32
    6688:	bhi	66a0 <MyGame_Example_Alt_parse_json_table+0x1304>
    668c:	beq	79e4 <MyGame_Example_Alt_parse_json_table+0x2648>
    6690:	mov	r2, r5
    6694:	mov	r0, r7
    6698:	bl	0 <flatcc_json_parser_space_ext>
    669c:	mov	r1, r0
    66a0:	cmp	r5, r1
    66a4:	beq	79fc <MyGame_Example_Alt_parse_json_table+0x2660>
    66a8:	ldrb	r3, [r1]
    66ac:	cmp	r3, #125	; 0x7d
    66b0:	beq	7c4c <MyGame_Example_Alt_parse_json_table+0x28b0>
    66b4:	mov	r3, #1
    66b8:	str	r3, [sp, #304]	; 0x130
    66bc:	b	5ec8 <MyGame_Example_Alt_parse_json_table+0xb2c>
    66c0:	mov	r1, r4
    66c4:	mov	r2, r5
    66c8:	mov	r0, r7
    66cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    66d0:	mov	fp, r0
    66d4:	b	5cd4 <MyGame_Example_Alt_parse_json_table+0x938>
    66d8:	cmp	r6, #6
    66dc:	ble	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    66e0:	mov	r3, #6
    66e4:	mov	r2, r5
    66e8:	mov	r1, r4
    66ec:	mov	r0, r7
    66f0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    66f4:	cmp	r4, r0
    66f8:	mov	r6, r0
    66fc:	beq	66c0 <MyGame_Example_Alt_parse_json_table+0x1324>
    6700:	mov	r1, #2
    6704:	ldr	r0, [r7]
    6708:	bl	0 <flatcc_builder_start_table>
    670c:	cmp	r0, #0
    6710:	bne	6dc4 <MyGame_Example_Alt_parse_json_table+0x1a28>
    6714:	add	r3, sp, #304	; 0x130
    6718:	mov	r1, r6
    671c:	mov	r2, r5
    6720:	mov	r0, r7
    6724:	bl	dfc <flatcc_json_parser_object_start>
    6728:	ldr	r3, [sp, #304]	; 0x130
    672c:	cmp	r3, #0
    6730:	beq	825c <MyGame_Example_Alt_parse_json_table+0x2ec0>
    6734:	mov	r1, r0
    6738:	cmp	r5, r1
    673c:	beq	6768 <MyGame_Example_Alt_parse_json_table+0x13cc>
    6740:	ldrb	r3, [r1]
    6744:	cmp	r3, #34	; 0x22
    6748:	moveq	r3, #0
    674c:	addeq	r1, r1, #1
    6750:	streq	r3, [r7, #12]
    6754:	beq	6768 <MyGame_Example_Alt_parse_json_table+0x13cc>
    6758:	cmp	r3, #46	; 0x2e
    675c:	movne	r3, #1
    6760:	strne	r3, [r7, #12]
    6764:	beq	6d74 <MyGame_Example_Alt_parse_json_table+0x19d8>
    6768:	sub	r3, r5, r1
    676c:	cmp	r3, #8
    6770:	bhi	67a4 <MyGame_Example_Alt_parse_json_table+0x1408>
    6774:	sub	r3, r3, #1
    6778:	cmp	r3, #7
    677c:	ldrls	pc, [pc, r3, lsl #2]
    6780:	b	6ab0 <MyGame_Example_Alt_parse_json_table+0x1714>
    6784:	.word	0x0000687c
    6788:	.word	0x00006870
    678c:	.word	0x00006864
    6790:	.word	0x00006858
    6794:	.word	0x0000684c
    6798:	.word	0x00006888
    679c:	.word	0x00006840
    67a0:	.word	0x000067a4
    67a4:	ldrb	sl, [r1, #7]
    67a8:	mov	fp, #0
    67ac:	mov	r3, fp
    67b0:	ldrb	r8, [r1, #6]
    67b4:	orr	r2, sl, r8, lsl #8
    67b8:	ldrb	r8, [r1, #5]
    67bc:	orr	r2, r2, r8, lsl #16
    67c0:	ldrb	r8, [r1, #4]
    67c4:	orr	r2, r2, r8, lsl #24
    67c8:	ldrb	sl, [r1, #3]
    67cc:	orr	r3, r3, sl
    67d0:	ldrb	sl, [r1, #2]
    67d4:	orr	sl, r3, sl, lsl #8
    67d8:	ldrb	r8, [r1, #1]
    67dc:	orr	sl, sl, r8, lsl #16
    67e0:	str	r2, [sp, #48]	; 0x30
    67e4:	ldrb	r2, [r1]
    67e8:	add	r9, pc, #872	; 0x368
    67ec:	ldrd	r8, [r9]
    67f0:	orr	r3, sl, r2, lsl #24
    67f4:	str	r3, [sp, #52]	; 0x34
    67f8:	ldrd	r2, [sp, #48]	; 0x30
    67fc:	cmp	r3, r9
    6800:	cmpeq	r2, r8
    6804:	bne	6ab0 <MyGame_Example_Alt_parse_json_table+0x1714>
    6808:	add	r4, r1, #8
    680c:	sub	r0, r5, r4
    6810:	cmp	r0, #8
    6814:	bhi	6894 <MyGame_Example_Alt_parse_json_table+0x14f8>
    6818:	sub	r3, r0, #3
    681c:	cmp	r3, #5
    6820:	ldrls	pc, [pc, r3, lsl #2]
    6824:	b	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6828:	.word	0x00006a80
    682c:	.word	0x00006a74
    6830:	.word	0x00006a8c
    6834:	.word	0x00006a98
    6838:	.word	0x00006aa4
    683c:	.word	0x00006894
    6840:	mov	sl, #0
    6844:	mov	fp, #0
    6848:	b	67ac <MyGame_Example_Alt_parse_json_table+0x1410>
    684c:	mov	r2, #0
    6850:	mov	r3, r2
    6854:	b	67c0 <MyGame_Example_Alt_parse_json_table+0x1424>
    6858:	mov	r2, #0
    685c:	mov	r3, r2
    6860:	b	67c8 <MyGame_Example_Alt_parse_json_table+0x142c>
    6864:	mov	r2, #0
    6868:	mov	r3, r2
    686c:	b	67d0 <MyGame_Example_Alt_parse_json_table+0x1434>
    6870:	mov	r2, #0
    6874:	mov	sl, r2
    6878:	b	67d8 <MyGame_Example_Alt_parse_json_table+0x143c>
    687c:	mov	r2, #0
    6880:	mov	sl, r2
    6884:	b	67e0 <MyGame_Example_Alt_parse_json_table+0x1444>
    6888:	mov	r2, #0
    688c:	mov	r3, r2
    6890:	b	67b8 <MyGame_Example_Alt_parse_json_table+0x141c>
    6894:	ldrb	r2, [r1, #15]
    6898:	mov	r3, #0
    689c:	mov	ip, r3
    68a0:	ldrb	r8, [r1, #14]
    68a4:	orr	r2, r2, r8, lsl #8
    68a8:	ldrb	r8, [r1, #13]
    68ac:	orr	r2, r2, r8, lsl #16
    68b0:	ldrb	r8, [r1, #12]
    68b4:	orr	r2, r2, r8, lsl #24
    68b8:	ldrb	sl, [r1, #11]
    68bc:	orr	ip, ip, sl
    68c0:	ldrb	r8, [r1, #8]
    68c4:	mov	r6, #0
    68c8:	str	r2, [sp, #24]
    68cc:	ldrb	sl, [r1, #10]
    68d0:	ldrb	r2, [r1, #9]
    68d4:	lsl	r8, r8, #24
    68d8:	orr	sl, ip, sl, lsl #8
    68dc:	orr	r8, r8, r2, lsl #16
    68e0:	orr	r3, r8, sl
    68e4:	add	r9, pc, #628	; 0x274
    68e8:	ldrd	r8, [r9]
    68ec:	str	r3, [sp, #28]
    68f0:	ldrd	r2, [sp, #24]
    68f4:	bic	r1, r2, #255	; 0xff
    68f8:	str	r1, [sp, #80]	; 0x50
    68fc:	str	r3, [sp, #84]	; 0x54
    6900:	ldrd	r2, [sp, #80]	; 0x50
    6904:	cmp	r3, r9
    6908:	cmpeq	r2, r8
    690c:	beq	6b78 <MyGame_Example_Alt_parse_json_table+0x17dc>
    6910:	add	r9, pc, #592	; 0x250
    6914:	ldrd	r8, [r9]
    6918:	ldrd	r2, [sp, #24]
    691c:	cmp	r3, r9
    6920:	cmpeq	r2, r8
    6924:	bne	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6928:	cmp	r0, #8
    692c:	ble	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6930:	mov	r3, #8
    6934:	mov	r2, r5
    6938:	mov	r1, r4
    693c:	mov	r0, r7
    6940:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    6944:	cmp	r4, r0
    6948:	mov	r8, r0
    694c:	beq	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6950:	mov	r2, #0
    6954:	mov	r3, #0
    6958:	str	r6, [sp, #308]	; 0x134
    695c:	add	r1, sp, #320	; 0x140
    6960:	cmp	r5, r0
    6964:	str	r6, [sp, #312]	; 0x138
    6968:	strd	r2, [r1]
    696c:	beq	6e58 <MyGame_Example_Alt_parse_json_table+0x1abc>
    6970:	mov	r0, r1
    6974:	add	r3, sp, #312	; 0x138
    6978:	mov	r2, r5
    697c:	mov	r1, r8
    6980:	str	r0, [sp]
    6984:	mov	r0, r7
    6988:	bl	0 <flatcc_json_parser_integer>
    698c:	cmp	r8, r0
    6990:	mov	r4, r0
    6994:	bne	6ed8 <MyGame_Example_Alt_parse_json_table+0x1b3c>
    6998:	add	ip, sp, #308	; 0x134
    699c:	ldr	r3, [pc, #460]	; 6b70 <MyGame_Example_Alt_parse_json_table+0x17d4>
    69a0:	mov	r2, r5
    69a4:	mov	r1, r4
    69a8:	mov	r0, r7
    69ac:	str	ip, [sp]
    69b0:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    69b4:	cmp	r5, r0
    69b8:	cmpne	r0, r4
    69bc:	mov	fp, r0
    69c0:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    69c4:	ldr	r2, [sp, #308]	; 0x134
    69c8:	cmp	r2, #0
    69cc:	bne	69dc <MyGame_Example_Alt_parse_json_table+0x1640>
    69d0:	ldr	r3, [r7, #8]
    69d4:	tst	r3, #2
    69d8:	beq	6a00 <MyGame_Example_Alt_parse_json_table+0x1664>
    69dc:	mov	r3, #4
    69e0:	mov	r1, #1
    69e4:	ldr	r0, [r7]
    69e8:	mov	r2, r3
    69ec:	bl	0 <flatcc_builder_table_add>
    69f0:	cmp	r0, #0
    69f4:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    69f8:	ldr	r3, [sp, #308]	; 0x134
    69fc:	str	r3, [r0]
    6a00:	sub	r3, r5, fp
    6a04:	cmp	r3, #1
    6a08:	ble	6a1c <MyGame_Example_Alt_parse_json_table+0x1680>
    6a0c:	ldrb	r3, [fp]
    6a10:	cmp	r3, #32
    6a14:	bhi	6a30 <MyGame_Example_Alt_parse_json_table+0x1694>
    6a18:	beq	6c60 <MyGame_Example_Alt_parse_json_table+0x18c4>
    6a1c:	mov	r1, fp
    6a20:	mov	r2, r5
    6a24:	mov	r0, r7
    6a28:	bl	0 <flatcc_json_parser_space_ext>
    6a2c:	mov	fp, r0
    6a30:	cmp	r5, fp
    6a34:	beq	6b10 <MyGame_Example_Alt_parse_json_table+0x1774>
    6a38:	ldrb	r3, [fp]
    6a3c:	cmp	r3, #44	; 0x2c
    6a40:	beq	6c74 <MyGame_Example_Alt_parse_json_table+0x18d8>
    6a44:	mov	r3, #0
    6a48:	str	r3, [sp, #304]	; 0x130
    6a4c:	ldrb	r3, [fp]
    6a50:	cmp	r3, #125	; 0x7d
    6a54:	beq	6adc <MyGame_Example_Alt_parse_json_table+0x1740>
    6a58:	mov	r3, #10
    6a5c:	mov	r1, fp
    6a60:	mov	r2, r5
    6a64:	mov	r0, r7
    6a68:	bl	0 <flatcc_json_parser_set_error>
    6a6c:	ldr	r3, [sp, #304]	; 0x130
    6a70:	b	672c <MyGame_Example_Alt_parse_json_table+0x1390>
    6a74:	mov	r2, #0
    6a78:	mov	ip, r2
    6a7c:	b	68b8 <MyGame_Example_Alt_parse_json_table+0x151c>
    6a80:	mov	r2, #0
    6a84:	mov	ip, r2
    6a88:	b	68c0 <MyGame_Example_Alt_parse_json_table+0x1524>
    6a8c:	mov	r2, #0
    6a90:	mov	ip, r2
    6a94:	b	68b0 <MyGame_Example_Alt_parse_json_table+0x1514>
    6a98:	mov	r2, #0
    6a9c:	mov	ip, r2
    6aa0:	b	68a8 <MyGame_Example_Alt_parse_json_table+0x150c>
    6aa4:	mov	r2, #0
    6aa8:	mov	r3, #0
    6aac:	b	689c <MyGame_Example_Alt_parse_json_table+0x1500>
    6ab0:	mov	r2, r5
    6ab4:	mov	r0, r7
    6ab8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6abc:	mov	fp, r0
    6ac0:	b	6a00 <MyGame_Example_Alt_parse_json_table+0x1664>
    6ac4:	mov	r1, r4
    6ac8:	mov	r2, r5
    6acc:	mov	r0, r7
    6ad0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ad4:	mov	fp, r0
    6ad8:	b	6a00 <MyGame_Example_Alt_parse_json_table+0x1664>
    6adc:	add	r1, fp, #1
    6ae0:	sub	r3, r5, r1
    6ae4:	cmp	r3, #1
    6ae8:	ble	6afc <MyGame_Example_Alt_parse_json_table+0x1760>
    6aec:	ldrb	r3, [fp, #1]
    6af0:	cmp	r3, #32
    6af4:	bhi	6da4 <MyGame_Example_Alt_parse_json_table+0x1a08>
    6af8:	beq	6e60 <MyGame_Example_Alt_parse_json_table+0x1ac4>
    6afc:	mov	r2, r5
    6b00:	mov	r0, r7
    6b04:	bl	0 <flatcc_json_parser_space_ext>
    6b08:	ldr	r3, [sp, #304]	; 0x130
    6b0c:	b	672c <MyGame_Example_Alt_parse_json_table+0x1390>
    6b10:	mov	r3, #0
    6b14:	str	r3, [sp, #304]	; 0x130
    6b18:	ldr	r3, [r7, #24]
    6b1c:	cmp	r3, #0
    6b20:	bne	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    6b24:	ldr	r0, [r7]
    6b28:	bl	0 <flatcc_builder_end_table>
    6b2c:	subs	r4, r0, #0
    6b30:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    6b34:	mov	r1, #1
    6b38:	ldr	r0, [r7]
    6b3c:	bl	0 <flatcc_builder_table_add_offset>
    6b40:	cmp	r0, #0
    6b44:	bne	6308 <MyGame_Example_Alt_parse_json_table+0xf6c>
    6b48:	mov	r4, r5
    6b4c:	mov	r5, r7
    6b50:	b	5c00 <MyGame_Example_Alt_parse_json_table+0x864>
    6b54:	nop	{0}
    6b58:	.word	0x5f626262
    6b5c:	.word	0x61616161
    6b60:	.word	0x65707300
    6b64:	.word	0x625f7374
    6b68:	.word	0x6172745f
    6b6c:	.word	0x625f7374
    6b70:	.word	0x00000040
    6b74:	.word	0x00000034
    6b78:	cmp	r0, #7
    6b7c:	ble	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6b80:	mov	r3, #7
    6b84:	mov	r2, r5
    6b88:	mov	r1, r4
    6b8c:	mov	r0, r7
    6b90:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    6b94:	cmp	r4, r0
    6b98:	mov	r8, r0
    6b9c:	beq	6ac4 <MyGame_Example_Alt_parse_json_table+0x1728>
    6ba0:	mov	r2, #0
    6ba4:	mov	r3, #0
    6ba8:	str	r6, [sp, #308]	; 0x134
    6bac:	add	r1, sp, #312	; 0x138
    6bb0:	cmp	r5, r0
    6bb4:	strd	r2, [r1]
    6bb8:	add	r1, sp, #320	; 0x140
    6bbc:	strd	r2, [r1]
    6bc0:	beq	6e50 <MyGame_Example_Alt_parse_json_table+0x1ab4>
    6bc4:	mov	r0, r1
    6bc8:	add	r3, sp, #308	; 0x134
    6bcc:	mov	r2, r5
    6bd0:	mov	r1, r8
    6bd4:	str	r0, [sp]
    6bd8:	mov	r0, r7
    6bdc:	bl	0 <flatcc_json_parser_integer>
    6be0:	cmp	r8, r0
    6be4:	mov	fp, r0
    6be8:	bne	6ea4 <MyGame_Example_Alt_parse_json_table+0x1b08>
    6bec:	add	ip, sp, #312	; 0x138
    6bf0:	ldr	r3, [pc, #-132]	; 6b74 <MyGame_Example_Alt_parse_json_table+0x17d8>
    6bf4:	mov	r2, r5
    6bf8:	mov	r1, fp
    6bfc:	mov	r0, r7
    6c00:	str	ip, [sp]
    6c04:	bl	2600 <flatcc_json_parser_symbolic_int64>
    6c08:	cmp	r5, r0
    6c0c:	cmpne	r0, fp
    6c10:	beq	823c <MyGame_Example_Alt_parse_json_table+0x2ea0>
    6c14:	add	r3, sp, #312	; 0x138
    6c18:	mov	fp, r0
    6c1c:	ldrd	r2, [r3]
    6c20:	orrs	r3, r2, r3
    6c24:	bne	6c34 <MyGame_Example_Alt_parse_json_table+0x1898>
    6c28:	ldr	r3, [r7, #8]
    6c2c:	tst	r3, #2
    6c30:	beq	6a00 <MyGame_Example_Alt_parse_json_table+0x1664>
    6c34:	mov	r3, #8
    6c38:	mov	r1, #0
    6c3c:	ldr	r0, [r7]
    6c40:	mov	r2, r3
    6c44:	bl	0 <flatcc_builder_table_add>
    6c48:	cmp	r0, #0
    6c4c:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    6c50:	add	r3, sp, #312	; 0x138
    6c54:	ldrd	r2, [r3]
    6c58:	strd	r2, [r0]
    6c5c:	b	6a00 <MyGame_Example_Alt_parse_json_table+0x1664>
    6c60:	ldrb	r3, [fp, #1]
    6c64:	cmp	r3, #32
    6c68:	addhi	fp, fp, #1
    6c6c:	bls	6a1c <MyGame_Example_Alt_parse_json_table+0x1680>
    6c70:	b	6a30 <MyGame_Example_Alt_parse_json_table+0x1694>
    6c74:	add	r1, fp, #1
    6c78:	sub	r3, r5, r1
    6c7c:	cmp	r3, #1
    6c80:	ble	6c94 <MyGame_Example_Alt_parse_json_table+0x18f8>
    6c84:	ldrb	r3, [fp, #1]
    6c88:	cmp	r3, #32
    6c8c:	bhi	6ca4 <MyGame_Example_Alt_parse_json_table+0x1908>
    6c90:	beq	6f30 <MyGame_Example_Alt_parse_json_table+0x1b94>
    6c94:	mov	r2, r5
    6c98:	mov	r0, r7
    6c9c:	bl	0 <flatcc_json_parser_space_ext>
    6ca0:	mov	r1, r0
    6ca4:	cmp	r5, r1
    6ca8:	beq	6f48 <MyGame_Example_Alt_parse_json_table+0x1bac>
    6cac:	ldrb	r3, [r1]
    6cb0:	cmp	r3, #125	; 0x7d
    6cb4:	beq	7a20 <MyGame_Example_Alt_parse_json_table+0x2684>
    6cb8:	mov	r3, #1
    6cbc:	str	r3, [sp, #304]	; 0x130
    6cc0:	b	6738 <MyGame_Example_Alt_parse_json_table+0x139c>
    6cc4:	mov	r3, #0
    6cc8:	str	r3, [sp, #292]	; 0x124
    6ccc:	ldr	r3, [r5, #24]
    6cd0:	cmp	r3, #0
    6cd4:	bne	53e4 <MyGame_Example_Alt_parse_json_table+0x48>
    6cd8:	mov	r1, fp
    6cdc:	mov	r2, r4
    6ce0:	ldr	r3, [sp, #296]	; 0x128
    6ce4:	mov	r0, r5
    6ce8:	bl	0 <flatcc_json_parser_finalize_unions>
    6cec:	mov	fp, r0
    6cf0:	ldr	r0, [r5]
    6cf4:	bl	0 <flatcc_builder_end_table>
    6cf8:	ldr	r3, [sp, #272]	; 0x110
    6cfc:	cmp	r0, #0
    6d00:	str	r0, [r3]
    6d04:	bne	53fc <MyGame_Example_Alt_parse_json_table+0x60>
    6d08:	b	53e4 <MyGame_Example_Alt_parse_json_table+0x48>
    6d0c:	ldrb	r3, [fp, #1]
    6d10:	cmp	r3, #32
    6d14:	addhi	fp, fp, #1
    6d18:	bls	55a4 <MyGame_Example_Alt_parse_json_table+0x208>
    6d1c:	b	55b8 <MyGame_Example_Alt_parse_json_table+0x21c>
    6d20:	add	sl, fp, #1
    6d24:	sub	r3, r4, sl
    6d28:	cmp	r3, #1
    6d2c:	ble	6d40 <MyGame_Example_Alt_parse_json_table+0x19a4>
    6d30:	ldrb	r3, [fp, #1]
    6d34:	cmp	r3, #32
    6d38:	bhi	6d54 <MyGame_Example_Alt_parse_json_table+0x19b8>
    6d3c:	beq	7d10 <MyGame_Example_Alt_parse_json_table+0x2974>
    6d40:	mov	r1, sl
    6d44:	mov	r2, r4
    6d48:	mov	r0, r5
    6d4c:	bl	0 <flatcc_json_parser_space_ext>
    6d50:	mov	sl, r0
    6d54:	cmp	r4, sl
    6d58:	beq	8028 <MyGame_Example_Alt_parse_json_table+0x2c8c>
    6d5c:	ldrb	r3, [sl]
    6d60:	cmp	r3, #125	; 0x7d
    6d64:	beq	7fd4 <MyGame_Example_Alt_parse_json_table+0x2c38>
    6d68:	mov	r3, #1
    6d6c:	str	r3, [sp, #292]	; 0x124
    6d70:	b	5464 <MyGame_Example_Alt_parse_json_table+0xc8>
    6d74:	mov	r3, #5
    6d78:	mov	r2, r5
    6d7c:	mov	r0, r7
    6d80:	bl	0 <flatcc_json_parser_set_error>
    6d84:	mov	r1, r0
    6d88:	b	6768 <MyGame_Example_Alt_parse_json_table+0x13cc>
    6d8c:	mov	r1, r0
    6d90:	mov	r3, #5
    6d94:	mov	r2, r5
    6d98:	mov	r0, r7
    6d9c:	bl	0 <flatcc_json_parser_set_error>
    6da0:	b	58dc <MyGame_Example_Alt_parse_json_table+0x540>
    6da4:	mov	fp, r1
    6da8:	b	6b18 <MyGame_Example_Alt_parse_json_table+0x177c>
    6dac:	mov	r3, #5
    6db0:	mov	r2, r5
    6db4:	mov	r0, r7
    6db8:	bl	0 <flatcc_json_parser_set_error>
    6dbc:	mov	r1, r0
    6dc0:	b	5ef8 <MyGame_Example_Alt_parse_json_table+0xb5c>
    6dc4:	mov	r4, r5
    6dc8:	mov	r1, r6
    6dcc:	mov	r5, r7
    6dd0:	b	5bec <MyGame_Example_Alt_parse_json_table+0x850>
    6dd4:	mov	fp, r1
    6dd8:	b	5d94 <MyGame_Example_Alt_parse_json_table+0x9f8>
    6ddc:	mov	fp, r1
    6de0:	b	62d8 <MyGame_Example_Alt_parse_json_table+0xf3c>
    6de4:	ldrd	r0, [sp, #32]
    6de8:	add	r3, pc, #904	; 0x388
    6dec:	ldrd	r2, [r3]
    6df0:	and	lr, r0, #-16777216	; 0xff000000
    6df4:	str	lr, [sp, #176]	; 0xb0
    6df8:	str	r1, [sp, #180]	; 0xb4
    6dfc:	ldrd	r0, [sp, #176]	; 0xb0
    6e00:	cmp	r1, r3
    6e04:	cmpeq	r0, r2
    6e08:	bne	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    6e0c:	cmp	ip, #5
    6e10:	ble	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    6e14:	mov	r3, #5
    6e18:	mov	r2, r4
    6e1c:	mov	r1, sl
    6e20:	mov	r0, r5
    6e24:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    6e28:	cmp	r0, sl
    6e2c:	mov	r6, r0
    6e30:	beq	5640 <MyGame_Example_Alt_parse_json_table+0x2a4>
    6e34:	mov	r1, #10
    6e38:	ldr	r0, [r5]
    6e3c:	bl	0 <flatcc_builder_start_table>
    6e40:	cmp	r0, #0
    6e44:	beq	763c <MyGame_Example_Alt_parse_json_table+0x22a0>
    6e48:	mov	r1, r6
    6e4c:	b	5c04 <MyGame_Example_Alt_parse_json_table+0x868>
    6e50:	mov	fp, r5
    6e54:	b	6bec <MyGame_Example_Alt_parse_json_table+0x1850>
    6e58:	mov	r4, r5
    6e5c:	b	6998 <MyGame_Example_Alt_parse_json_table+0x15fc>
    6e60:	ldrb	r3, [fp, #2]
    6e64:	cmp	r3, #32
    6e68:	bls	6afc <MyGame_Example_Alt_parse_json_table+0x1760>
    6e6c:	add	fp, fp, #2
    6e70:	b	6b18 <MyGame_Example_Alt_parse_json_table+0x177c>
    6e74:	ldrb	r3, [fp, #2]
    6e78:	cmp	r3, #32
    6e7c:	bls	5d70 <MyGame_Example_Alt_parse_json_table+0x9d4>
    6e80:	add	fp, fp, #2
    6e84:	b	5d94 <MyGame_Example_Alt_parse_json_table+0x9f8>
    6e88:	mov	fp, r5
    6e8c:	b	6130 <MyGame_Example_Alt_parse_json_table+0xd94>
    6e90:	ldrb	r3, [fp, #2]
    6e94:	cmp	r3, #32
    6e98:	bls	62bc <MyGame_Example_Alt_parse_json_table+0xf20>
    6e9c:	add	fp, fp, #2
    6ea0:	b	62d8 <MyGame_Example_Alt_parse_json_table+0xf3c>
    6ea4:	ldr	r1, [sp, #308]	; 0x134
    6ea8:	add	r3, sp, #320	; 0x140
    6eac:	ldrd	r2, [r3]
    6eb0:	cmp	r1, r6
    6eb4:	beq	7b1c <MyGame_Example_Alt_parse_json_table+0x2780>
    6eb8:	cmp	r3, #-2147483648	; 0x80000000
    6ebc:	cmpeq	r2, #0
    6ec0:	bhi	8190 <MyGame_Example_Alt_parse_json_table+0x2df4>
    6ec4:	rsbs	r2, r2, #0
    6ec8:	add	r1, sp, #312	; 0x138
    6ecc:	rsc	r3, r3, #0
    6ed0:	strd	r2, [r1]
    6ed4:	b	6c20 <MyGame_Example_Alt_parse_json_table+0x1884>
    6ed8:	ldr	r3, [sp, #312]	; 0x138
    6edc:	cmp	r3, #0
    6ee0:	bne	8080 <MyGame_Example_Alt_parse_json_table+0x2ce4>
    6ee4:	add	r3, sp, #320	; 0x140
    6ee8:	mov	r1, #0
    6eec:	ldrd	r2, [r3]
    6ef0:	mvn	r0, #0
    6ef4:	cmp	r3, r1
    6ef8:	cmpeq	r2, r0
    6efc:	movls	fp, r4
    6f00:	strls	r2, [sp, #308]	; 0x134
    6f04:	bls	69c8 <MyGame_Example_Alt_parse_json_table+0x162c>
    6f08:	mov	r1, r4
    6f0c:	mov	r3, #7
    6f10:	mov	r2, r5
    6f14:	mov	r0, r7
    6f18:	bl	0 <flatcc_json_parser_set_error>
    6f1c:	mov	fp, r0
    6f20:	cmp	r8, fp
    6f24:	bne	69c4 <MyGame_Example_Alt_parse_json_table+0x1628>
    6f28:	mov	r4, r8
    6f2c:	b	6998 <MyGame_Example_Alt_parse_json_table+0x15fc>
    6f30:	ldrb	r3, [fp, #2]
    6f34:	cmp	r3, #32
    6f38:	addhi	r1, fp, #2
    6f3c:	bls	6c94 <MyGame_Example_Alt_parse_json_table+0x18f8>
    6f40:	cmp	r5, r1
    6f44:	bne	6cac <MyGame_Example_Alt_parse_json_table+0x1910>
    6f48:	mov	ip, #0
    6f4c:	mov	r3, #10
    6f50:	mov	r2, r5
    6f54:	mov	r1, r5
    6f58:	mov	r0, r7
    6f5c:	str	ip, [sp, #304]	; 0x130
    6f60:	bl	0 <flatcc_json_parser_set_error>
    6f64:	ldr	r3, [sp, #304]	; 0x130
    6f68:	b	672c <MyGame_Example_Alt_parse_json_table+0x1390>
    6f6c:	mov	r1, sl
    6f70:	mov	r3, #5
    6f74:	mov	r2, r4
    6f78:	mov	r0, r5
    6f7c:	bl	0 <flatcc_json_parser_set_error>
    6f80:	mov	sl, r0
    6f84:	b	5494 <MyGame_Example_Alt_parse_json_table+0xf8>
    6f88:	ldr	r1, [sp, #308]	; 0x134
    6f8c:	add	r3, sp, #320	; 0x140
    6f90:	ldrd	r2, [r3]
    6f94:	cmp	r1, #0
    6f98:	beq	7ce0 <MyGame_Example_Alt_parse_json_table+0x2944>
    6f9c:	cmp	r3, #-2147483648	; 0x80000000
    6fa0:	cmpeq	r2, #0
    6fa4:	bhi	81c8 <MyGame_Example_Alt_parse_json_table+0x2e2c>
    6fa8:	rsbs	r2, r2, #0
    6fac:	add	r1, sp, #312	; 0x138
    6fb0:	rsc	r3, r3, #0
    6fb4:	strd	r2, [r1]
    6fb8:	b	6164 <MyGame_Example_Alt_parse_json_table+0xdc8>
    6fbc:	add	r3, sp, #308	; 0x134
    6fc0:	mov	r1, r8
    6fc4:	mov	r2, r5
    6fc8:	mov	r0, r7
    6fcc:	bl	dfc <flatcc_json_parser_object_start>
    6fd0:	ldr	r3, [sp, #308]	; 0x134
    6fd4:	mov	fp, r0
    6fd8:	cmp	r3, #0
    6fdc:	beq	6474 <MyGame_Example_Alt_parse_json_table+0x10d8>
    6fe0:	mov	r6, r5
    6fe4:	ldrd	r4, [sp, #248]	; 0xf8
    6fe8:	cmp	r6, fp
    6fec:	beq	7018 <MyGame_Example_Alt_parse_json_table+0x1c7c>
    6ff0:	ldrb	r3, [fp]
    6ff4:	cmp	r3, #34	; 0x22
    6ff8:	moveq	r3, #0
    6ffc:	addeq	fp, fp, #1
    7000:	streq	r3, [r7, #12]
    7004:	beq	7018 <MyGame_Example_Alt_parse_json_table+0x1c7c>
    7008:	cmp	r3, #46	; 0x2e
    700c:	movne	r3, #1
    7010:	strne	r3, [r7, #12]
    7014:	beq	7538 <MyGame_Example_Alt_parse_json_table+0x219c>
    7018:	sub	ip, r6, fp
    701c:	cmp	ip, #8
    7020:	bhi	6344 <MyGame_Example_Alt_parse_json_table+0xfa8>
    7024:	sub	r3, ip, #1
    7028:	cmp	r3, #7
    702c:	ldrls	pc, [pc, r3, lsl #2]
    7030:	b	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7034:	.word	0x00007054
    7038:	.word	0x000070a8
    703c:	.word	0x00007090
    7040:	.word	0x00007084
    7044:	.word	0x00007078
    7048:	.word	0x0000706c
    704c:	.word	0x0000709c
    7050:	.word	0x00006344
    7054:	mov	r1, fp
    7058:	mov	r2, r6
    705c:	mov	r0, r7
    7060:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7064:	mov	fp, r0
    7068:	b	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    706c:	mov	r2, #0
    7070:	mov	lr, r2
    7074:	b	6358 <MyGame_Example_Alt_parse_json_table+0xfbc>
    7078:	mov	r2, #0
    707c:	mov	lr, r2
    7080:	b	6360 <MyGame_Example_Alt_parse_json_table+0xfc4>
    7084:	mov	r2, #0
    7088:	mov	lr, r2
    708c:	b	6368 <MyGame_Example_Alt_parse_json_table+0xfcc>
    7090:	mov	r2, #0
    7094:	mov	lr, r2
    7098:	b	6370 <MyGame_Example_Alt_parse_json_table+0xfd4>
    709c:	mov	r2, #0
    70a0:	mov	r3, #0
    70a4:	b	634c <MyGame_Example_Alt_parse_json_table+0xfb0>
    70a8:	ldrb	r2, [fp, #1]
    70ac:	mov	r4, #0
    70b0:	ldrb	r0, [fp]
    70b4:	lsl	r2, r2, #16
    70b8:	orr	r5, r2, r0, lsl #24
    70bc:	add	r3, pc, #188	; 0xbc
    70c0:	ldrd	r2, [r3]
    70c4:	cmp	r5, r3
    70c8:	cmpeq	r4, r2
    70cc:	bls	63bc <MyGame_Example_Alt_parse_json_table+0x1020>
    70d0:	add	r3, pc, #176	; 0xb0
    70d4:	ldrd	r2, [r3]
    70d8:	cmp	r5, r3
    70dc:	cmpeq	r4, r2
    70e0:	beq	725c <MyGame_Example_Alt_parse_json_table+0x1ec0>
    70e4:	mov	r3, #0
    70e8:	movw	r1, #25443	; 0x6363
    70ec:	movt	r1, #25443	; 0x6363
    70f0:	mov	r0, #0
    70f4:	str	r3, [sp, #120]	; 0x78
    70f8:	str	r5, [sp, #124]	; 0x7c
    70fc:	ldrd	r2, [sp, #120]	; 0x78
    7100:	cmp	r3, r1
    7104:	cmpeq	r2, r0
    7108:	bne	72f8 <MyGame_Example_Alt_parse_json_table+0x1f5c>
    710c:	cmp	ip, #4
    7110:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7114:	mov	r1, fp
    7118:	mov	r3, #4
    711c:	mov	r2, r6
    7120:	mov	r0, r7
    7124:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7128:	cmp	r0, fp
    712c:	mov	r1, r0
    7130:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7134:	add	r3, sp, #312	; 0x138
    7138:	mov	r2, r6
    713c:	mov	r0, r7
    7140:	bl	0 <flatcc_json_parser_build_string>
    7144:	ldr	r3, [sp, #312]	; 0x138
    7148:	mov	fp, r0
    714c:	cmp	r3, #0
    7150:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    7154:	mov	r1, #4
    7158:	ldr	r0, [r7]
    715c:	bl	0 <flatcc_builder_table_add_offset>
    7160:	cmp	r0, #0
    7164:	bne	6440 <MyGame_Example_Alt_parse_json_table+0x10a4>
    7168:	mov	r5, r7
    716c:	mov	r4, r6
    7170:	b	6488 <MyGame_Example_Alt_parse_json_table+0x10ec>
    7174:	nop	{0}
    7178:	.word	0x65000000
    717c:	.word	0x6d6f7669
    7180:	.word	0xffffffff
    7184:	.word	0x63636362
    7188:	.word	0x31323334
    718c:	.word	0x63636363
    7190:	.word	0x31323334
    7194:	.word	0x64646464
    7198:	.word	0x31323334
    719c:	.word	0x62626262
    71a0:	add	fp, fp, #8
    71a4:	mov	r1, r6
    71a8:	str	r9, [sp, #160]	; 0xa0
    71ac:	mov	r0, fp
    71b0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    71b4:	and	r3, r1, #-16777216	; 0xff000000
    71b8:	str	r3, [sp, #164]	; 0xa4
    71bc:	ldrd	r2, [sp, #160]	; 0xa0
    71c0:	cmp	r3, #889192448	; 0x35000000
    71c4:	cmpeq	r2, #0
    71c8:	bne	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    71cc:	sub	r3, r6, fp
    71d0:	cmp	r3, #1
    71d4:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    71d8:	mov	r3, #1
    71dc:	mov	r2, r6
    71e0:	mov	r1, fp
    71e4:	mov	r0, r7
    71e8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    71ec:	cmp	fp, r0
    71f0:	mov	r8, r0
    71f4:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    71f8:	mov	r1, r0
    71fc:	mov	r2, r6
    7200:	str	r9, [sp, #320]	; 0x140
    7204:	add	r3, sp, #320	; 0x140
    7208:	mov	r0, r7
    720c:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    7210:	cmp	r8, r0
    7214:	mov	fp, r0
    7218:	beq	7fa4 <MyGame_Example_Alt_parse_json_table+0x2c08>
    721c:	ldr	r3, [sp, #320]	; 0x140
    7220:	cmp	r3, #0
    7224:	bne	7234 <MyGame_Example_Alt_parse_json_table+0x1e98>
    7228:	ldr	r3, [r7, #8]
    722c:	tst	r3, #2
    7230:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    7234:	mov	r3, #4
    7238:	mov	r1, #1
    723c:	mov	r2, r3
    7240:	ldr	r0, [r7]
    7244:	bl	0 <flatcc_builder_table_add>
    7248:	cmp	r0, #0
    724c:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    7250:	ldr	r3, [sp, #320]	; 0x140
    7254:	str	r3, [r0]
    7258:	b	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    725c:	cmp	ip, #8
    7260:	ble	7418 <MyGame_Example_Alt_parse_json_table+0x207c>
    7264:	mov	r3, #8
    7268:	mov	r2, r6
    726c:	mov	r1, fp
    7270:	mov	r0, r7
    7274:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7278:	cmp	r0, fp
    727c:	mov	r8, r0
    7280:	beq	7418 <MyGame_Example_Alt_parse_json_table+0x207c>
    7284:	mov	fp, #0
    7288:	add	r3, sp, #320	; 0x140
    728c:	mov	sl, #0
    7290:	mov	r1, r0
    7294:	mov	r2, r6
    7298:	mov	r0, r7
    729c:	strd	sl, [r3]
    72a0:	bl	92c <flatcc_json_parser_int64>
    72a4:	cmp	r8, r0
    72a8:	mov	fp, r0
    72ac:	beq	7dc4 <MyGame_Example_Alt_parse_json_table+0x2a28>
    72b0:	add	r3, sp, #320	; 0x140
    72b4:	ldrd	r2, [r3]
    72b8:	orrs	r3, r2, r3
    72bc:	bne	72cc <MyGame_Example_Alt_parse_json_table+0x1f30>
    72c0:	ldr	r3, [r7, #8]
    72c4:	tst	r3, #2
    72c8:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    72cc:	mov	r3, #8
    72d0:	mov	r1, #5
    72d4:	mov	r2, r3
    72d8:	ldr	r0, [r7]
    72dc:	bl	0 <flatcc_builder_table_add>
    72e0:	cmp	r0, #0
    72e4:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    72e8:	add	r3, sp, #320	; 0x140
    72ec:	ldrd	r2, [r3]
    72f0:	strd	r2, [r0]
    72f4:	b	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    72f8:	sub	r3, pc, #368	; 0x170
    72fc:	ldrd	r2, [r3]
    7300:	cmp	r5, r3
    7304:	cmpeq	r4, r2
    7308:	bne	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    730c:	cmp	ip, #8
    7310:	ble	7554 <MyGame_Example_Alt_parse_json_table+0x21b8>
    7314:	mov	r3, #8
    7318:	mov	r2, r6
    731c:	mov	r1, fp
    7320:	mov	r0, r7
    7324:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7328:	cmp	r0, fp
    732c:	mov	r8, r0
    7330:	beq	7554 <MyGame_Example_Alt_parse_json_table+0x21b8>
    7334:	mov	fp, #0
    7338:	add	r3, sp, #320	; 0x140
    733c:	mov	sl, #0
    7340:	mov	r1, r0
    7344:	mov	r2, r6
    7348:	mov	r0, r7
    734c:	strd	sl, [r3]
    7350:	bl	92c <flatcc_json_parser_int64>
    7354:	cmp	r8, r0
    7358:	mov	fp, r0
    735c:	beq	7ff8 <MyGame_Example_Alt_parse_json_table+0x2c5c>
    7360:	add	r3, sp, #320	; 0x140
    7364:	ldrd	r2, [r3]
    7368:	orrs	r3, r2, r3
    736c:	bne	737c <MyGame_Example_Alt_parse_json_table+0x1fe0>
    7370:	ldr	r3, [r7, #8]
    7374:	tst	r3, #2
    7378:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    737c:	mov	r3, #8
    7380:	mov	r1, #7
    7384:	b	72d4 <MyGame_Example_Alt_parse_json_table+0x1f38>
    7388:	sub	r3, pc, #504	; 0x1f8
    738c:	ldrd	r2, [r3]
    7390:	cmp	r5, r3
    7394:	cmpeq	r4, r2
    7398:	beq	74bc <MyGame_Example_Alt_parse_json_table+0x2120>
    739c:	ldrd	r0, [sp, #112]	; 0x70
    73a0:	movw	r3, #25186	; 0x6262
    73a4:	movt	r3, #25186	; 0x6262
    73a8:	mov	r2, #0
    73ac:	cmp	r1, r3
    73b0:	cmpeq	r0, r2
    73b4:	bne	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    73b8:	cmp	ip, #4
    73bc:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    73c0:	mov	r1, fp
    73c4:	mov	r3, #4
    73c8:	mov	r2, r6
    73cc:	mov	r0, r7
    73d0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    73d4:	cmp	r0, fp
    73d8:	mov	r1, r0
    73dc:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    73e0:	add	r3, sp, #312	; 0x138
    73e4:	mov	r2, r6
    73e8:	mov	r0, r7
    73ec:	bl	0 <flatcc_json_parser_build_string>
    73f0:	ldr	r3, [sp, #312]	; 0x138
    73f4:	mov	fp, r0
    73f8:	cmp	r3, #0
    73fc:	beq	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    7400:	mov	r1, #2
    7404:	ldr	r0, [r7]
    7408:	bl	0 <flatcc_builder_table_add_offset>
    740c:	cmp	r0, #0
    7410:	bne	6440 <MyGame_Example_Alt_parse_json_table+0x10a4>
    7414:	b	7168 <MyGame_Example_Alt_parse_json_table+0x1dcc>
    7418:	add	fp, fp, #8
    741c:	mov	r1, r6
    7420:	mov	r0, fp
    7424:	mov	r8, #0
    7428:	bl	0 <flatcc_json_parser_symbol_part_ext>
    742c:	and	r3, r1, #-16777216	; 0xff000000
    7430:	str	r8, [sp, #168]	; 0xa8
    7434:	str	r3, [sp, #172]	; 0xac
    7438:	ldrd	r2, [sp, #168]	; 0xa8
    743c:	cmp	r3, #889192448	; 0x35000000
    7440:	cmpeq	r2, #0
    7444:	bne	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7448:	sub	r3, r6, fp
    744c:	cmp	r3, #1
    7450:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7454:	mov	r3, #1
    7458:	mov	r2, r6
    745c:	mov	r1, fp
    7460:	mov	r0, r7
    7464:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7468:	cmp	fp, r0
    746c:	mov	r9, r0
    7470:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7474:	mov	r1, r0
    7478:	mov	r2, r6
    747c:	str	r8, [sp, #320]	; 0x140
    7480:	add	r3, sp, #320	; 0x140
    7484:	mov	r0, r7
    7488:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    748c:	cmp	r9, r0
    7490:	mov	fp, r0
    7494:	beq	8160 <MyGame_Example_Alt_parse_json_table+0x2dc4>
    7498:	ldr	r3, [sp, #320]	; 0x140
    749c:	cmp	r3, #0
    74a0:	bne	74b0 <MyGame_Example_Alt_parse_json_table+0x2114>
    74a4:	ldr	r3, [r7, #8]
    74a8:	tst	r3, #2
    74ac:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    74b0:	mov	r3, #4
    74b4:	mov	r1, #6
    74b8:	b	723c <MyGame_Example_Alt_parse_json_table+0x1ea0>
    74bc:	cmp	ip, #8
    74c0:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    74c4:	mov	r3, #8
    74c8:	mov	r2, r6
    74cc:	mov	r1, fp
    74d0:	mov	r0, r7
    74d4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    74d8:	cmp	r0, fp
    74dc:	mov	r8, r0
    74e0:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    74e4:	mov	fp, #0
    74e8:	add	r3, sp, #320	; 0x140
    74ec:	mov	sl, #0
    74f0:	mov	r1, r0
    74f4:	mov	r2, r6
    74f8:	mov	r0, r7
    74fc:	strd	sl, [r3]
    7500:	bl	92c <flatcc_json_parser_int64>
    7504:	cmp	r8, r0
    7508:	mov	fp, r0
    750c:	beq	8050 <MyGame_Example_Alt_parse_json_table+0x2cb4>
    7510:	add	r3, sp, #320	; 0x140
    7514:	ldrd	r2, [r3]
    7518:	orrs	r3, r2, r3
    751c:	bne	752c <MyGame_Example_Alt_parse_json_table+0x2190>
    7520:	ldr	r3, [r7, #8]
    7524:	tst	r3, #2
    7528:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    752c:	mov	r3, #8
    7530:	mov	r1, #3
    7534:	b	72d4 <MyGame_Example_Alt_parse_json_table+0x1f38>
    7538:	mov	r1, fp
    753c:	mov	r3, #5
    7540:	mov	r2, r6
    7544:	mov	r0, r7
    7548:	bl	0 <flatcc_json_parser_set_error>
    754c:	mov	fp, r0
    7550:	b	7018 <MyGame_Example_Alt_parse_json_table+0x1c7c>
    7554:	add	fp, fp, #8
    7558:	mov	r1, r6
    755c:	mov	r0, fp
    7560:	mov	r8, #0
    7564:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7568:	and	r3, r1, #-16777216	; 0xff000000
    756c:	str	r8, [sp, #184]	; 0xb8
    7570:	str	r3, [sp, #188]	; 0xbc
    7574:	ldrd	r2, [sp, #184]	; 0xb8
    7578:	cmp	r3, #889192448	; 0x35000000
    757c:	cmpeq	r2, #0
    7580:	bne	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7584:	sub	r3, r6, fp
    7588:	cmp	r3, #1
    758c:	ble	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    7590:	mov	r3, #1
    7594:	mov	r2, r6
    7598:	mov	r1, fp
    759c:	mov	r0, r7
    75a0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    75a4:	cmp	fp, r0
    75a8:	mov	r9, r0
    75ac:	beq	7054 <MyGame_Example_Alt_parse_json_table+0x1cb8>
    75b0:	mov	r1, r0
    75b4:	mov	r2, r6
    75b8:	str	r8, [sp, #320]	; 0x140
    75bc:	add	r3, sp, #320	; 0x140
    75c0:	mov	r0, r7
    75c4:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    75c8:	cmp	r9, r0
    75cc:	mov	fp, r0
    75d0:	beq	81f4 <MyGame_Example_Alt_parse_json_table+0x2e58>
    75d4:	ldr	r3, [sp, #320]	; 0x140
    75d8:	cmp	r3, #0
    75dc:	bne	75ec <MyGame_Example_Alt_parse_json_table+0x2250>
    75e0:	ldr	r3, [r7, #8]
    75e4:	tst	r3, #2
    75e8:	beq	6448 <MyGame_Example_Alt_parse_json_table+0x10ac>
    75ec:	mov	r3, #4
    75f0:	mov	r1, #8
    75f4:	b	723c <MyGame_Example_Alt_parse_json_table+0x1ea0>
    75f8:	ldrb	r3, [fp, #2]
    75fc:	cmp	r3, #32
    7600:	addhi	r0, fp, #2
    7604:	bls	5e04 <MyGame_Example_Alt_parse_json_table+0xa68>
    7608:	cmp	r5, r0
    760c:	bne	5e1c <MyGame_Example_Alt_parse_json_table+0xa80>
    7610:	mov	r4, r5
    7614:	mov	ip, #0
    7618:	mov	r3, #10
    761c:	mov	r2, r4
    7620:	mov	r1, r4
    7624:	mov	r0, r7
    7628:	str	ip, [sp, #300]	; 0x12c
    762c:	mov	r5, r7
    7630:	bl	0 <flatcc_json_parser_set_error>
    7634:	ldr	r3, [sp, #300]	; 0x12c
    7638:	b	589c <MyGame_Example_Alt_parse_json_table+0x500>
    763c:	add	r0, sp, #320	; 0x140
    7640:	mov	r1, r6
    7644:	mov	r3, #5
    7648:	mov	r2, r4
    764c:	str	r0, [sp]
    7650:	mov	r0, r5
    7654:	bl	0 <flatcc_json_parser_prepare_unions>
    7658:	cmp	r4, r0
    765c:	mov	r1, r6
    7660:	beq	5c04 <MyGame_Example_Alt_parse_json_table+0x868>
    7664:	add	r3, sp, #312	; 0x138
    7668:	mov	r2, r4
    766c:	mov	r0, r5
    7670:	bl	dfc <flatcc_json_parser_object_start>
    7674:	ldr	r3, [sp, #312]	; 0x138
    7678:	mov	r8, r0
    767c:	cmp	r3, #0
    7680:	beq	7ac4 <MyGame_Example_Alt_parse_json_table+0x2728>
    7684:	mov	r9, r4
    7688:	add	r7, pc, #976	; 0x3d0
    768c:	ldrd	r6, [r7]
    7690:	mov	r4, r5
    7694:	b	7760 <MyGame_Example_Alt_parse_json_table+0x23c4>
    7698:	add	r3, pc, #968	; 0x3c8
    769c:	ldrd	r2, [r3]
    76a0:	cmp	r1, r3
    76a4:	cmpeq	r0, r2
    76a8:	beq	7890 <MyGame_Example_Alt_parse_json_table+0x24f4>
    76ac:	add	r3, pc, #956	; 0x3bc
    76b0:	ldrd	r2, [r3]
    76b4:	cmp	r1, r3
    76b8:	cmpeq	r0, r2
    76bc:	beq	7ba0 <MyGame_Example_Alt_parse_json_table+0x2804>
    76c0:	and	ip, r0, #-16777216	; 0xff000000
    76c4:	add	r3, pc, #940	; 0x3ac
    76c8:	ldrd	r2, [r3]
    76cc:	str	ip, [sp, #192]	; 0xc0
    76d0:	str	r1, [sp, #196]	; 0xc4
    76d4:	ldrd	r0, [sp, #192]	; 0xc0
    76d8:	cmp	r1, r3
    76dc:	cmpeq	r0, r2
    76e0:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    76e4:	sub	r3, r9, r8
    76e8:	cmp	r3, #5
    76ec:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    76f0:	mov	r1, r8
    76f4:	mov	r3, #5
    76f8:	mov	r2, r9
    76fc:	mov	r0, r4
    7700:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7704:	cmp	r0, r8
    7708:	mov	r1, r0
    770c:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7710:	ldr	ip, [sp, #320]	; 0x140
    7714:	movw	r3, #0
    7718:	movt	r3, #0
    771c:	mov	lr, #7
    7720:	str	r3, [sp, #8]
    7724:	mov	r3, #3
    7728:	mov	r2, r9
    772c:	mov	r0, r4
    7730:	str	lr, [sp]
    7734:	str	ip, [sp, #4]
    7738:	bl	0 <flatcc_json_parser_union>
    773c:	mov	r1, r0
    7740:	add	r3, sp, #312	; 0x138
    7744:	mov	r2, r9
    7748:	mov	r0, r4
    774c:	bl	2f80 <flatcc_json_parser_object_end>
    7750:	ldr	r3, [sp, #312]	; 0x138
    7754:	mov	r8, r0
    7758:	cmp	r3, #0
    775c:	beq	7abc <MyGame_Example_Alt_parse_json_table+0x2720>
    7760:	cmp	r9, r8
    7764:	beq	7790 <MyGame_Example_Alt_parse_json_table+0x23f4>
    7768:	ldrb	r3, [r8]
    776c:	cmp	r3, #34	; 0x22
    7770:	moveq	r3, #0
    7774:	addeq	r8, r8, #1
    7778:	streq	r3, [r4, #12]
    777c:	beq	7790 <MyGame_Example_Alt_parse_json_table+0x23f4>
    7780:	cmp	r3, #46	; 0x2e
    7784:	movne	r3, #1
    7788:	strne	r3, [r4, #12]
    778c:	beq	7f3c <MyGame_Example_Alt_parse_json_table+0x2ba0>
    7790:	mov	r1, r9
    7794:	mov	r0, r8
    7798:	bl	0 <flatcc_json_parser_symbol_part_ext>
    779c:	cmp	r1, r7
    77a0:	cmpeq	r0, r6
    77a4:	bls	7698 <MyGame_Example_Alt_parse_json_table+0x22fc>
    77a8:	add	r3, pc, #720	; 0x2d0
    77ac:	ldrd	r2, [r3]
    77b0:	cmp	r1, r3
    77b4:	cmpeq	r0, r2
    77b8:	bhi	7908 <MyGame_Example_Alt_parse_json_table+0x256c>
    77bc:	add	r3, pc, #708	; 0x2c4
    77c0:	ldrd	r2, [r3]
    77c4:	cmp	r1, r3
    77c8:	cmpeq	r0, r2
    77cc:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    77d0:	add	r8, r8, #8
    77d4:	mov	r1, r9
    77d8:	mov	r0, r8
    77dc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    77e0:	bic	r0, r0, #255	; 0xff
    77e4:	add	r3, pc, #676	; 0x2a4
    77e8:	ldrd	r2, [r3]
    77ec:	strd	r0, [sp, #240]	; 0xf0
    77f0:	ldrd	sl, [sp, #240]	; 0xf0
    77f4:	cmp	fp, r3
    77f8:	cmpeq	sl, r2
    77fc:	beq	809c <MyGame_Example_Alt_parse_json_table+0x2d00>
    7800:	lsr	r1, r1, #16
    7804:	mov	r3, #0
    7808:	mov	r2, #0
    780c:	lsl	r1, r1, #16
    7810:	str	r3, [sp, #224]	; 0xe0
    7814:	mov	r3, #0
    7818:	movt	r3, #29299	; 0x7273
    781c:	str	r1, [sp, #228]	; 0xe4
    7820:	ldrd	r0, [sp, #224]	; 0xe0
    7824:	cmp	r1, r3
    7828:	cmpeq	r0, r2
    782c:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7830:	sub	r3, r9, r8
    7834:	cmp	r3, #2
    7838:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    783c:	mov	r1, r8
    7840:	mov	r3, #2
    7844:	mov	r2, r9
    7848:	mov	r0, r4
    784c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7850:	cmp	r8, r0
    7854:	mov	r1, r0
    7858:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    785c:	ldr	ip, [sp, #320]	; 0x140
    7860:	mov	lr, #9
    7864:	movw	r3, #0
    7868:	movt	r3, #0
    786c:	mov	r2, r9
    7870:	mov	r0, r4
    7874:	str	lr, [sp]
    7878:	str	ip, [sp, #4]
    787c:	str	r3, [sp, #8]
    7880:	mov	r3, #4
    7884:	bl	0 <flatcc_json_parser_union_vector>
    7888:	mov	r1, r0
    788c:	b	7740 <MyGame_Example_Alt_parse_json_table+0x23a4>
    7890:	add	r8, r8, #8
    7894:	mov	r1, r9
    7898:	mov	r0, r8
    789c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    78a0:	bic	r0, r0, #255	; 0xff
    78a4:	add	r3, pc, #492	; 0x1ec
    78a8:	ldrd	r2, [r3]
    78ac:	strd	r0, [sp, #216]	; 0xd8
    78b0:	ldrd	sl, [sp, #216]	; 0xd8
    78b4:	cmp	fp, r3
    78b8:	cmpeq	sl, r2
    78bc:	beq	7f58 <MyGame_Example_Alt_parse_json_table+0x2bbc>
    78c0:	lsr	r1, r1, #16
    78c4:	mov	r3, #0
    78c8:	mov	r2, #0
    78cc:	lsl	r1, r1, #16
    78d0:	str	r3, [sp, #200]	; 0xc8
    78d4:	mov	r3, #0
    78d8:	movt	r3, #29556	; 0x7374
    78dc:	str	r1, [sp, #204]	; 0xcc
    78e0:	ldrd	r0, [sp, #200]	; 0xc8
    78e4:	cmp	r1, r3
    78e8:	cmpeq	r0, r2
    78ec:	beq	7df4 <MyGame_Example_Alt_parse_json_table+0x2a58>
    78f0:	mov	r1, r8
    78f4:	mov	r2, r9
    78f8:	mov	r0, r4
    78fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7900:	mov	r1, r0
    7904:	b	7740 <MyGame_Example_Alt_parse_json_table+0x23a4>
    7908:	add	r3, pc, #400	; 0x190
    790c:	ldrd	r2, [r3]
    7910:	cmp	r1, r3
    7914:	cmpeq	r0, r2
    7918:	beq	7d24 <MyGame_Example_Alt_parse_json_table+0x2988>
    791c:	add	r3, pc, #388	; 0x184
    7920:	ldrd	r2, [r3]
    7924:	cmp	r1, r3
    7928:	cmpeq	r0, r2
    792c:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7930:	add	r8, r8, #8
    7934:	mov	r1, r9
    7938:	mov	r0, r8
    793c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7940:	lsr	r3, r0, #16
    7944:	str	r3, [sp, #232]	; 0xe8
    7948:	ldr	r0, [sp, #232]	; 0xe8
    794c:	str	r1, [sp, #236]	; 0xec
    7950:	add	r3, pc, #344	; 0x158
    7954:	ldrd	r2, [r3]
    7958:	lsl	r0, r0, #16
    795c:	str	r0, [sp, #232]	; 0xe8
    7960:	ldrd	sl, [sp, #232]	; 0xe8
    7964:	cmp	fp, r3
    7968:	cmpeq	sl, r2
    796c:	beq	7e68 <MyGame_Example_Alt_parse_json_table+0x2acc>
    7970:	mov	r3, #0
    7974:	str	r3, [sp, #264]	; 0x108
    7978:	and	r3, r1, #-16777216	; 0xff000000
    797c:	str	r3, [sp, #268]	; 0x10c
    7980:	add	r3, sp, #264	; 0x108
    7984:	ldrd	r2, [r3]
    7988:	cmp	r3, #1795162112	; 0x6b000000
    798c:	cmpeq	r2, #0
    7990:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7994:	sub	r3, r9, r8
    7998:	cmp	r3, #1
    799c:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    79a0:	mov	r1, r8
    79a4:	mov	r3, #1
    79a8:	mov	r2, r9
    79ac:	mov	r0, r4
    79b0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    79b4:	cmp	r8, r0
    79b8:	mov	r1, r0
    79bc:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    79c0:	movw	r3, #0
    79c4:	movt	r3, #0
    79c8:	ldr	ip, [sp, #320]	; 0x140
    79cc:	mov	lr, #5
    79d0:	str	r3, [sp, #8]
    79d4:	mov	r3, #2
    79d8:	b	7728 <MyGame_Example_Alt_parse_json_table+0x238c>
    79dc:	mov	fp, r1
    79e0:	b	6ccc <MyGame_Example_Alt_parse_json_table+0x1930>
    79e4:	ldrb	r3, [fp, #2]
    79e8:	cmp	r3, #32
    79ec:	addhi	r1, fp, #2
    79f0:	bls	6690 <MyGame_Example_Alt_parse_json_table+0x12f4>
    79f4:	cmp	r5, r1
    79f8:	bne	66a8 <MyGame_Example_Alt_parse_json_table+0x130c>
    79fc:	mov	ip, #0
    7a00:	mov	r3, #10
    7a04:	mov	r2, r5
    7a08:	mov	r1, r5
    7a0c:	mov	r0, r7
    7a10:	str	ip, [sp, #304]	; 0x130
    7a14:	bl	0 <flatcc_json_parser_set_error>
    7a18:	ldr	r3, [sp, #304]	; 0x130
    7a1c:	b	5eb8 <MyGame_Example_Alt_parse_json_table+0xb1c>
    7a20:	add	fp, r1, #1
    7a24:	mov	r3, #0
    7a28:	sub	r2, r5, fp
    7a2c:	cmp	r2, #1
    7a30:	str	r3, [sp, #304]	; 0x130
    7a34:	ble	7a54 <MyGame_Example_Alt_parse_json_table+0x26b8>
    7a38:	ldrb	r3, [r1, #1]
    7a3c:	cmp	r3, #32
    7a40:	bhi	6b18 <MyGame_Example_Alt_parse_json_table+0x177c>
    7a44:	bne	7a54 <MyGame_Example_Alt_parse_json_table+0x26b8>
    7a48:	ldrb	r3, [r1, #2]
    7a4c:	cmp	r3, #32
    7a50:	bhi	8224 <MyGame_Example_Alt_parse_json_table+0x2e88>
    7a54:	mov	r1, fp
    7a58:	b	6afc <MyGame_Example_Alt_parse_json_table+0x1760>
    7a5c:	nop	{0}
    7a60:	.word	0x61637464
    7a64:	.word	0x63686172
    7a68:	.word	0x676f6e69
    7a6c:	.word	0x616e7461
    7a70:	.word	0x6f5f7479
    7a74:	.word	0x63616d65
    7a78:	.word	0x6f000000
    7a7c:	.word	0x63616d65
    7a80:	.word	0x5f636860
    7a84:	.word	0x6d61696e
    7a88:	.word	0x61637465
    7a8c:	.word	0x63686172
    7a90:	.word	0x79706500
    7a94:	.word	0x72735f74
    7a98:	.word	0x79706500
    7a9c:	.word	0x73745f74
    7aa0:	.word	0x5f636861
    7aa4:	.word	0x6d61696e
    7aa8:	.word	0x5f6b6963
    7aac:	.word	0x73696465
    7ab0:	.word	0x70650000
    7ab4:	.word	0x6b5f7479
    7ab8:	.word	0x000000bc
    7abc:	mov	r5, r4
    7ac0:	mov	r4, r9
    7ac4:	ldr	r3, [r5, #24]
    7ac8:	mov	r1, r8
    7acc:	cmp	r3, #0
    7ad0:	bne	5c04 <MyGame_Example_Alt_parse_json_table+0x868>
    7ad4:	mov	r2, r4
    7ad8:	mov	r0, r5
    7adc:	ldr	r3, [sp, #320]	; 0x140
    7ae0:	bl	0 <flatcc_json_parser_finalize_unions>
    7ae4:	mov	fp, r0
    7ae8:	ldr	r0, [r5]
    7aec:	bl	0 <flatcc_builder_end_table>
    7af0:	subs	r6, r0, #0
    7af4:	beq	5c00 <MyGame_Example_Alt_parse_json_table+0x864>
    7af8:	mov	r1, #1
    7afc:	b	5db8 <MyGame_Example_Alt_parse_json_table+0xa1c>
    7b00:	mov	r4, r5
    7b04:	b	65a8 <MyGame_Example_Alt_parse_json_table+0x120c>
    7b08:	ldrb	r3, [fp, #2]
    7b0c:	cmp	r3, #32
    7b10:	bls	57e0 <MyGame_Example_Alt_parse_json_table+0x444>
    7b14:	add	fp, fp, #2
    7b18:	b	6ccc <MyGame_Example_Alt_parse_json_table+0x1930>
    7b1c:	cmp	r2, #0
    7b20:	sbcs	r1, r3, #0
    7b24:	addge	r1, sp, #312	; 0x138
    7b28:	strdge	r2, [r1]
    7b2c:	bge	6c20 <MyGame_Example_Alt_parse_json_table+0x1884>
    7b30:	mov	r1, r0
    7b34:	mov	r3, #7
    7b38:	mov	r2, r5
    7b3c:	mov	r0, r7
    7b40:	bl	0 <flatcc_json_parser_set_error>
    7b44:	mov	fp, r0
    7b48:	cmp	r8, fp
    7b4c:	beq	6bec <MyGame_Example_Alt_parse_json_table+0x1850>
    7b50:	add	r3, sp, #312	; 0x138
    7b54:	ldrd	r2, [r3]
    7b58:	b	6c20 <MyGame_Example_Alt_parse_json_table+0x1884>
    7b5c:	mov	r4, r5
    7b60:	add	fp, r0, #1
    7b64:	mov	r3, #0
    7b68:	sub	r2, r4, fp
    7b6c:	cmp	r2, #1
    7b70:	mov	r5, r7
    7b74:	str	r3, [sp, #300]	; 0x12c
    7b78:	ble	7b98 <MyGame_Example_Alt_parse_json_table+0x27fc>
    7b7c:	ldrb	r3, [r0, #1]
    7b80:	cmp	r3, #32
    7b84:	bhi	5d94 <MyGame_Example_Alt_parse_json_table+0x9f8>
    7b88:	bne	7b98 <MyGame_Example_Alt_parse_json_table+0x27fc>
    7b8c:	ldrb	r3, [r0, #2]
    7b90:	cmp	r3, #32
    7b94:	bhi	822c <MyGame_Example_Alt_parse_json_table+0x2e90>
    7b98:	mov	r1, fp
    7b9c:	b	5d70 <MyGame_Example_Alt_parse_json_table+0x9d4>
    7ba0:	mov	r3, #0
    7ba4:	add	r8, r8, #8
    7ba8:	mov	r1, r9
    7bac:	mov	r0, r8
    7bb0:	str	r3, [sp, #208]	; 0xd0
    7bb4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7bb8:	lsr	r3, r1, #16
    7bbc:	mov	r2, #0
    7bc0:	str	r3, [sp, #212]	; 0xd4
    7bc4:	mov	r3, #0
    7bc8:	movt	r3, #28773	; 0x7065
    7bcc:	ldr	r1, [sp, #212]	; 0xd4
    7bd0:	lsl	r1, r1, #16
    7bd4:	str	r1, [sp, #212]	; 0xd4
    7bd8:	ldrd	r0, [sp, #208]	; 0xd0
    7bdc:	cmp	r1, r3
    7be0:	cmpeq	r0, r2
    7be4:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7be8:	sub	r3, r9, r8
    7bec:	cmp	r3, #2
    7bf0:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7bf4:	mov	r1, r8
    7bf8:	mov	r3, #2
    7bfc:	mov	r2, r9
    7c00:	mov	r0, r4
    7c04:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7c08:	cmp	r8, r0
    7c0c:	mov	r1, r0
    7c10:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7c14:	ldr	lr, [pc, #-356]	; 7ab8 <MyGame_Example_Alt_parse_json_table+0x271c>
    7c18:	mov	r3, #7
    7c1c:	movw	r2, #0
    7c20:	movt	r2, #0
    7c24:	ldr	ip, [sp, #320]	; 0x140
    7c28:	str	r3, [sp]
    7c2c:	mov	r3, #3
    7c30:	mov	r0, r4
    7c34:	stmib	sp, {ip, lr}
    7c38:	str	r2, [sp, #12]
    7c3c:	mov	r2, r9
    7c40:	bl	0 <flatcc_json_parser_union_type>
    7c44:	mov	r1, r0
    7c48:	b	7740 <MyGame_Example_Alt_parse_json_table+0x23a4>
    7c4c:	add	fp, r1, #1
    7c50:	mov	r3, #0
    7c54:	sub	r2, r5, fp
    7c58:	cmp	r2, #1
    7c5c:	str	r3, [sp, #304]	; 0x130
    7c60:	ble	7c80 <MyGame_Example_Alt_parse_json_table+0x28e4>
    7c64:	ldrb	r3, [r1, #1]
    7c68:	cmp	r3, #32
    7c6c:	bhi	62d8 <MyGame_Example_Alt_parse_json_table+0xf3c>
    7c70:	bne	7c80 <MyGame_Example_Alt_parse_json_table+0x28e4>
    7c74:	ldrb	r3, [r1, #2]
    7c78:	cmp	r3, #32
    7c7c:	bhi	8234 <MyGame_Example_Alt_parse_json_table+0x2e98>
    7c80:	mov	r1, fp
    7c84:	b	62bc <MyGame_Example_Alt_parse_json_table+0xf20>
    7c88:	ldr	r3, [sp, #312]	; 0x138
    7c8c:	cmp	r3, r8
    7c90:	bne	81ac <MyGame_Example_Alt_parse_json_table+0x2e10>
    7c94:	add	r3, sp, #320	; 0x140
    7c98:	mov	r1, #0
    7c9c:	ldrd	r2, [r3]
    7ca0:	mvn	r0, #0
    7ca4:	cmp	r3, r1
    7ca8:	cmpeq	r2, r0
    7cac:	movls	fp, r4
    7cb0:	strls	r2, [sp, #308]	; 0x134
    7cb4:	bls	65d8 <MyGame_Example_Alt_parse_json_table+0x123c>
    7cb8:	mov	r1, r4
    7cbc:	mov	r3, #7
    7cc0:	mov	r2, r5
    7cc4:	mov	r0, r7
    7cc8:	bl	0 <flatcc_json_parser_set_error>
    7ccc:	mov	fp, r0
    7cd0:	cmp	r9, fp
    7cd4:	bne	65d4 <MyGame_Example_Alt_parse_json_table+0x1238>
    7cd8:	mov	r4, r9
    7cdc:	b	65a8 <MyGame_Example_Alt_parse_json_table+0x120c>
    7ce0:	cmp	r2, #0
    7ce4:	sbcs	r1, r3, #0
    7ce8:	addge	r1, sp, #312	; 0x138
    7cec:	strdge	r2, [r1]
    7cf0:	bge	6164 <MyGame_Example_Alt_parse_json_table+0xdc8>
    7cf4:	mov	r1, r0
    7cf8:	mov	r3, #7
    7cfc:	mov	r2, r5
    7d00:	mov	r0, r7
    7d04:	bl	0 <flatcc_json_parser_set_error>
    7d08:	mov	fp, r0
    7d0c:	b	81e0 <MyGame_Example_Alt_parse_json_table+0x2e44>
    7d10:	ldrb	r3, [fp, #2]
    7d14:	cmp	r3, #32
    7d18:	addhi	sl, fp, #2
    7d1c:	bls	6d40 <MyGame_Example_Alt_parse_json_table+0x19a4>
    7d20:	b	6d54 <MyGame_Example_Alt_parse_json_table+0x19b8>
    7d24:	add	r5, r8, #8
    7d28:	mov	r1, r9
    7d2c:	mov	r0, r5
    7d30:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7d34:	add	r3, pc, #996	; 0x3e4
    7d38:	ldrd	r2, [r3]
    7d3c:	cmp	r1, r3
    7d40:	cmpeq	r0, r2
    7d44:	beq	7eb4 <MyGame_Example_Alt_parse_json_table+0x2b18>
    7d48:	lsr	r3, r0, #16
    7d4c:	str	r3, [sp, #256]	; 0x100
    7d50:	ldr	ip, [sp, #256]	; 0x100
    7d54:	str	r1, [sp, #260]	; 0x104
    7d58:	add	r1, sp, #256	; 0x100
    7d5c:	add	r3, pc, #964	; 0x3c4
    7d60:	ldrd	r2, [r3]
    7d64:	lsl	ip, ip, #16
    7d68:	str	ip, [sp, #256]	; 0x100
    7d6c:	ldrd	r0, [r1]
    7d70:	cmp	r1, r3
    7d74:	cmpeq	r0, r2
    7d78:	bne	8108 <MyGame_Example_Alt_parse_json_table+0x2d6c>
    7d7c:	sub	r3, r9, r5
    7d80:	cmp	r3, #6
    7d84:	ble	8108 <MyGame_Example_Alt_parse_json_table+0x2d6c>
    7d88:	mov	r1, r5
    7d8c:	mov	r3, #6
    7d90:	mov	r2, r9
    7d94:	mov	r0, r4
    7d98:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7d9c:	cmp	r5, r0
    7da0:	mov	r1, r0
    7da4:	beq	8108 <MyGame_Example_Alt_parse_json_table+0x2d6c>
    7da8:	movw	r3, #0
    7dac:	movt	r3, #0
    7db0:	ldr	ip, [sp, #320]	; 0x140
    7db4:	mov	lr, #1
    7db8:	str	r3, [sp, #8]
    7dbc:	mov	r3, #0
    7dc0:	b	7728 <MyGame_Example_Alt_parse_json_table+0x238c>
    7dc4:	mov	r1, r0
    7dc8:	add	r0, sp, #320	; 0x140
    7dcc:	ldr	r3, [pc, #868]	; 8138 <MyGame_Example_Alt_parse_json_table+0x2d9c>
    7dd0:	mov	r2, r6
    7dd4:	str	r0, [sp]
    7dd8:	mov	r0, r7
    7ddc:	bl	2600 <flatcc_json_parser_symbolic_int64>
    7de0:	cmp	r6, r0
    7de4:	cmpne	fp, r0
    7de8:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    7dec:	mov	fp, r0
    7df0:	b	72b0 <MyGame_Example_Alt_parse_json_table+0x1f14>
    7df4:	sub	r3, r9, r8
    7df8:	cmp	r3, #2
    7dfc:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7e00:	mov	r1, r8
    7e04:	mov	r3, #2
    7e08:	mov	r2, r9
    7e0c:	mov	r0, r4
    7e10:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7e14:	cmp	r8, r0
    7e18:	mov	r1, r0
    7e1c:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7e20:	movw	r3, #0
    7e24:	movt	r3, #0
    7e28:	ldr	ip, [sp, #320]	; 0x140
    7e2c:	mov	lr, #3
    7e30:	str	r3, [sp, #8]
    7e34:	mov	r3, #1
    7e38:	b	7728 <MyGame_Example_Alt_parse_json_table+0x238c>
    7e3c:	ldr	r0, [r7]
    7e40:	str	r1, [sp, #276]	; 0x114
    7e44:	bl	0 <flatcc_builder_end_table>
    7e48:	subs	r4, r0, #0
    7e4c:	ldr	r1, [sp, #276]	; 0x114
    7e50:	beq	6480 <MyGame_Example_Alt_parse_json_table+0x10e4>
    7e54:	ldr	r0, [r7]
    7e58:	bl	0 <flatcc_builder_table_add_offset>
    7e5c:	cmp	r0, #0
    7e60:	bne	6308 <MyGame_Example_Alt_parse_json_table+0xf6c>
    7e64:	b	6b48 <MyGame_Example_Alt_parse_json_table+0x17ac>
    7e68:	sub	r3, r9, r8
    7e6c:	cmp	r3, #6
    7e70:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7e74:	mov	r1, r8
    7e78:	mov	r3, #6
    7e7c:	mov	r2, r9
    7e80:	mov	r0, r4
    7e84:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7e88:	cmp	r8, r0
    7e8c:	mov	r1, r0
    7e90:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7e94:	mov	r3, #5
    7e98:	movw	r2, #0
    7e9c:	movt	r2, #0
    7ea0:	ldr	lr, [pc, #660]	; 813c <MyGame_Example_Alt_parse_json_table+0x2da0>
    7ea4:	str	r3, [sp]
    7ea8:	mov	r3, #2
    7eac:	ldr	ip, [sp, #320]	; 0x140
    7eb0:	b	7c30 <MyGame_Example_Alt_parse_json_table+0x2894>
    7eb4:	add	r8, r8, #16
    7eb8:	mov	r1, r9
    7ebc:	mov	r0, r8
    7ec0:	mov	r5, #0
    7ec4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7ec8:	bic	r1, r1, #255	; 0xff
    7ecc:	add	r3, pc, #604	; 0x25c
    7ed0:	ldrd	r2, [r3]
    7ed4:	str	r5, [sp, #280]	; 0x118
    7ed8:	str	r1, [sp, #284]	; 0x11c
    7edc:	add	r1, sp, #280	; 0x118
    7ee0:	ldrd	r0, [r1]
    7ee4:	cmp	r1, r3
    7ee8:	cmpeq	r0, r2
    7eec:	bne	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7ef0:	sub	r3, r9, r8
    7ef4:	cmp	r3, #3
    7ef8:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7efc:	mov	r1, r8
    7f00:	mov	r3, #3
    7f04:	mov	r2, r9
    7f08:	mov	r0, r4
    7f0c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7f10:	cmp	r8, r0
    7f14:	mov	r1, r0
    7f18:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7f1c:	mov	r8, #1
    7f20:	movw	r2, #0
    7f24:	movt	r2, #0
    7f28:	ldr	lr, [pc, #528]	; 8140 <MyGame_Example_Alt_parse_json_table+0x2da4>
    7f2c:	mov	r3, r5
    7f30:	str	r8, [sp]
    7f34:	ldr	ip, [sp, #320]	; 0x140
    7f38:	b	7c30 <MyGame_Example_Alt_parse_json_table+0x2894>
    7f3c:	mov	r1, r8
    7f40:	mov	r3, #5
    7f44:	mov	r2, r9
    7f48:	mov	r0, r4
    7f4c:	bl	0 <flatcc_json_parser_set_error>
    7f50:	mov	r8, r0
    7f54:	b	7790 <MyGame_Example_Alt_parse_json_table+0x23f4>
    7f58:	sub	r3, r9, r8
    7f5c:	cmp	r3, #7
    7f60:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7f64:	mov	r1, r8
    7f68:	mov	r3, #7
    7f6c:	mov	r2, r9
    7f70:	mov	r0, r4
    7f74:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    7f78:	cmp	r8, r0
    7f7c:	mov	r1, r0
    7f80:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    7f84:	mov	r3, #3
    7f88:	movw	r2, #0
    7f8c:	movt	r2, #0
    7f90:	ldr	lr, [pc, #428]	; 8144 <MyGame_Example_Alt_parse_json_table+0x2da8>
    7f94:	str	r3, [sp]
    7f98:	mov	r3, #1
    7f9c:	ldr	ip, [sp, #320]	; 0x140
    7fa0:	b	7c30 <MyGame_Example_Alt_parse_json_table+0x2894>
    7fa4:	mov	r1, r0
    7fa8:	add	r0, sp, #320	; 0x140
    7fac:	ldr	r3, [pc, #404]	; 8148 <MyGame_Example_Alt_parse_json_table+0x2dac>
    7fb0:	mov	r2, r6
    7fb4:	str	r0, [sp]
    7fb8:	mov	r0, r7
    7fbc:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    7fc0:	cmp	r6, r0
    7fc4:	cmpne	fp, r0
    7fc8:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    7fcc:	mov	fp, r0
    7fd0:	b	721c <MyGame_Example_Alt_parse_json_table+0x1e80>
    7fd4:	mov	r3, #0
    7fd8:	add	r1, sl, #1
    7fdc:	mov	r2, r4
    7fe0:	mov	r0, r5
    7fe4:	str	r3, [sp, #292]	; 0x124
    7fe8:	bl	8f0 <flatcc_json_parser_space>
    7fec:	mov	sl, r0
    7ff0:	ldr	r3, [sp, #292]	; 0x124
    7ff4:	b	545c <MyGame_Example_Alt_parse_json_table+0xc0>
    7ff8:	mov	r1, r0
    7ffc:	add	r0, sp, #320	; 0x140
    8000:	ldr	r3, [pc, #324]	; 814c <MyGame_Example_Alt_parse_json_table+0x2db0>
    8004:	mov	r2, r6
    8008:	str	r0, [sp]
    800c:	mov	r0, r7
    8010:	bl	2600 <flatcc_json_parser_symbolic_int64>
    8014:	cmp	r6, r0
    8018:	cmpne	fp, r0
    801c:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    8020:	mov	fp, r0
    8024:	b	7360 <MyGame_Example_Alt_parse_json_table+0x1fc4>
    8028:	mov	ip, #0
    802c:	mov	r3, #10
    8030:	mov	r2, r4
    8034:	mov	r1, r4
    8038:	mov	r0, r5
    803c:	str	ip, [sp, #292]	; 0x124
    8040:	bl	0 <flatcc_json_parser_set_error>
    8044:	mov	sl, r0
    8048:	ldr	r3, [sp, #292]	; 0x124
    804c:	b	545c <MyGame_Example_Alt_parse_json_table+0xc0>
    8050:	mov	r1, r0
    8054:	add	r0, sp, #320	; 0x140
    8058:	ldr	r3, [pc, #240]	; 8150 <MyGame_Example_Alt_parse_json_table+0x2db4>
    805c:	mov	r2, r6
    8060:	str	r0, [sp]
    8064:	mov	r0, r7
    8068:	bl	2600 <flatcc_json_parser_symbolic_int64>
    806c:	cmp	r6, r0
    8070:	cmpne	fp, r0
    8074:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    8078:	mov	fp, r0
    807c:	b	7510 <MyGame_Example_Alt_parse_json_table+0x2174>
    8080:	mov	r1, r0
    8084:	mov	r3, #8
    8088:	mov	r2, r5
    808c:	mov	r0, r7
    8090:	bl	0 <flatcc_json_parser_set_error>
    8094:	mov	fp, r0
    8098:	b	6f20 <MyGame_Example_Alt_parse_json_table+0x1b84>
    809c:	sub	r3, r9, r8
    80a0:	cmp	r3, #7
    80a4:	ble	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    80a8:	mov	r1, r8
    80ac:	mov	r3, #7
    80b0:	mov	r2, r9
    80b4:	mov	r0, r4
    80b8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    80bc:	cmp	r8, r0
    80c0:	mov	r1, r0
    80c4:	beq	78f0 <MyGame_Example_Alt_parse_json_table+0x2554>
    80c8:	ldr	r2, [pc, #132]	; 8154 <MyGame_Example_Alt_parse_json_table+0x2db8>
    80cc:	movw	ip, #0
    80d0:	movt	ip, #0
    80d4:	movw	r3, #0
    80d8:	movt	r3, #0
    80dc:	ldr	lr, [sp, #320]	; 0x140
    80e0:	mov	r8, #9
    80e4:	mov	r0, r4
    80e8:	stm	sp, {r8, lr}
    80ec:	strd	r2, [sp, #8]
    80f0:	mov	r3, #4
    80f4:	mov	r2, r9
    80f8:	str	ip, [sp, #16]
    80fc:	bl	0 <flatcc_json_parser_union_type_vector>
    8100:	mov	r1, r0
    8104:	b	7740 <MyGame_Example_Alt_parse_json_table+0x23a4>
    8108:	mov	r1, r5
    810c:	mov	r2, r9
    8110:	mov	r0, r4
    8114:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8118:	mov	r1, r0
    811c:	b	7740 <MyGame_Example_Alt_parse_json_table+0x23a4>
    8120:	.word	0x65725f74
    8124:	.word	0x72616374
    8128:	.word	0x65720000
    812c:	.word	0x72616374
    8130:	.word	0x00000000
    8134:	.word	0x79706500
    8138:	.word	0x00000064
    813c:	.word	0x000000ec
    8140:	.word	0x000000dc
    8144:	.word	0x000000ac
    8148:	.word	0x0000004c
    814c:	.word	0x0000007c
    8150:	.word	0x00000058
    8154:	.word	0x000000cc
    8158:	.word	0x00000070
    815c:	.word	0x00000088
    8160:	mov	r1, r0
    8164:	add	r0, sp, #320	; 0x140
    8168:	ldr	r3, [pc, #-24]	; 8158 <MyGame_Example_Alt_parse_json_table+0x2dbc>
    816c:	mov	r2, r6
    8170:	str	r0, [sp]
    8174:	mov	r0, r7
    8178:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    817c:	cmp	r6, r0
    8180:	cmpne	fp, r0
    8184:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    8188:	mov	fp, r0
    818c:	b	7498 <MyGame_Example_Alt_parse_json_table+0x20fc>
    8190:	mov	r1, r0
    8194:	mov	r3, #8
    8198:	mov	r2, r5
    819c:	mov	r0, r7
    81a0:	bl	0 <flatcc_json_parser_set_error>
    81a4:	mov	fp, r0
    81a8:	b	7b48 <MyGame_Example_Alt_parse_json_table+0x27ac>
    81ac:	mov	r1, r0
    81b0:	mov	r3, #8
    81b4:	mov	r2, r5
    81b8:	mov	r0, r7
    81bc:	bl	0 <flatcc_json_parser_set_error>
    81c0:	mov	fp, r0
    81c4:	b	7cd0 <MyGame_Example_Alt_parse_json_table+0x2934>
    81c8:	mov	r1, r0
    81cc:	mov	r3, #8
    81d0:	mov	r2, r5
    81d4:	mov	r0, r7
    81d8:	bl	0 <flatcc_json_parser_set_error>
    81dc:	mov	fp, r0
    81e0:	cmp	r8, fp
    81e4:	beq	6130 <MyGame_Example_Alt_parse_json_table+0xd94>
    81e8:	add	r3, sp, #312	; 0x138
    81ec:	ldrd	r2, [r3]
    81f0:	b	6164 <MyGame_Example_Alt_parse_json_table+0xdc8>
    81f4:	mov	r1, r0
    81f8:	add	r0, sp, #320	; 0x140
    81fc:	ldr	r3, [pc, #-168]	; 815c <MyGame_Example_Alt_parse_json_table+0x2dc0>
    8200:	mov	r2, r6
    8204:	str	r0, [sp]
    8208:	mov	r0, r7
    820c:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    8210:	cmp	r6, r0
    8214:	cmpne	fp, r0
    8218:	beq	824c <MyGame_Example_Alt_parse_json_table+0x2eb0>
    821c:	mov	fp, r0
    8220:	b	75d4 <MyGame_Example_Alt_parse_json_table+0x2238>
    8224:	add	fp, r1, #2
    8228:	b	6b18 <MyGame_Example_Alt_parse_json_table+0x177c>
    822c:	add	fp, r0, #2
    8230:	b	5d94 <MyGame_Example_Alt_parse_json_table+0x9f8>
    8234:	add	fp, r1, #2
    8238:	b	62d8 <MyGame_Example_Alt_parse_json_table+0xf3c>
    823c:	mov	r4, r5
    8240:	mov	fp, r0
    8244:	mov	r5, r7
    8248:	b	6488 <MyGame_Example_Alt_parse_json_table+0x10ec>
    824c:	mov	r5, r7
    8250:	mov	r4, r6
    8254:	mov	fp, r0
    8258:	b	6488 <MyGame_Example_Alt_parse_json_table+0x10ec>
    825c:	mov	fp, r0
    8260:	b	6b18 <MyGame_Example_Alt_parse_json_table+0x177c>
    8264:	mov	fp, r0
    8268:	b	62d8 <MyGame_Example_Alt_parse_json_table+0xf3c>
    826c:	mov	fp, r0
    8270:	b	5d94 <MyGame_Example_Alt_parse_json_table+0x9f8>

00008274 <Fantasy_Character_parse_json_union>:
    8274:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8278:	mov	ip, #0
    827c:	cmp	r3, #9
    8280:	strd	r6, [sp, #8]
    8284:	mov	r4, r1
    8288:	mov	r5, r2
    828c:	strd	r8, [sp, #16]
    8290:	strd	sl, [sp, #24]
    8294:	mov	sl, r0
    8298:	str	lr, [sp, #32]
    829c:	sub	sp, sp, #60	; 0x3c
    82a0:	ldr	fp, [sp, #96]	; 0x60
    82a4:	str	ip, [fp]
    82a8:	beq	8368 <Fantasy_Character_parse_json_union+0xf4>
    82ac:	bhi	830c <Fantasy_Character_parse_json_union+0x98>
    82b0:	cmp	r3, #2
    82b4:	beq	869c <Fantasy_Character_parse_json_union+0x428>
    82b8:	cmp	r3, #8
    82bc:	beq	839c <Fantasy_Character_parse_json_union+0x128>
    82c0:	cmp	r3, ip
    82c4:	beq	8668 <Fantasy_Character_parse_json_union+0x3f4>
    82c8:	ldr	r3, [sl, #8]
    82cc:	mov	r2, r5
    82d0:	mov	r1, r4
    82d4:	mov	r0, sl
    82d8:	tst	r3, #1
    82dc:	bne	8390 <Fantasy_Character_parse_json_union+0x11c>
    82e0:	mov	r3, #15
    82e4:	bl	0 <flatcc_json_parser_set_error>
    82e8:	mov	r1, r0
    82ec:	mov	r0, r1
    82f0:	add	sp, sp, #60	; 0x3c
    82f4:	ldrd	r4, [sp]
    82f8:	ldrd	r6, [sp, #8]
    82fc:	ldrd	r8, [sp, #16]
    8300:	ldrd	sl, [sp, #24]
    8304:	add	sp, sp, #32
    8308:	pop	{pc}		; (ldr pc, [sp], #4)
    830c:	cmp	r3, #11
    8310:	beq	8320 <Fantasy_Character_parse_json_union+0xac>
    8314:	bcc	8368 <Fantasy_Character_parse_json_union+0xf4>
    8318:	cmp	r3, #255	; 0xff
    831c:	bne	82c8 <Fantasy_Character_parse_json_union+0x54>
    8320:	mov	r1, r4
    8324:	mov	r3, fp
    8328:	mov	r2, r5
    832c:	mov	r0, sl
    8330:	bl	0 <flatcc_json_parser_build_string>
    8334:	mov	r1, r0
    8338:	ldr	r3, [sl, #24]
    833c:	cmp	r3, #0
    8340:	bne	82ec <Fantasy_Character_parse_json_union+0x78>
    8344:	ldr	r3, [fp]
    8348:	cmp	r3, #0
    834c:	bne	82ec <Fantasy_Character_parse_json_union+0x78>
    8350:	mov	r2, r5
    8354:	mov	r0, sl
    8358:	mov	r3, #33	; 0x21
    835c:	bl	0 <flatcc_json_parser_set_error>
    8360:	mov	r1, r0
    8364:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    8368:	mov	r1, r4
    836c:	mov	r3, fp
    8370:	mov	r2, r5
    8374:	mov	r0, sl
    8378:	bl	2870 <Fantasy_BookReader_parse_json_struct>
    837c:	ldr	r3, [sl, #24]
    8380:	mov	r1, r0
    8384:	cmp	r3, #0
    8388:	beq	8344 <Fantasy_Character_parse_json_union+0xd0>
    838c:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    8390:	bl	0 <flatcc_json_parser_generic_json>
    8394:	mov	r1, r0
    8398:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    839c:	mov	r2, #2
    83a0:	ldr	r0, [r0]
    83a4:	mov	r1, r2
    83a8:	bl	0 <flatcc_builder_start_struct>
    83ac:	subs	r3, r0, #0
    83b0:	mov	r1, r4
    83b4:	str	r3, [sp, #20]
    83b8:	beq	85dc <Fantasy_Character_parse_json_union+0x368>
    83bc:	add	r3, sp, #40	; 0x28
    83c0:	mov	r2, r5
    83c4:	mov	r0, sl
    83c8:	bl	dfc <flatcc_json_parser_object_start>
    83cc:	ldr	r3, [sp, #40]	; 0x28
    83d0:	mov	r1, r0
    83d4:	cmp	r3, #0
    83d8:	beq	85b8 <Fantasy_Character_parse_json_union+0x344>
    83dc:	mov	r4, r0
    83e0:	str	fp, [sp, #96]	; 0x60
    83e4:	cmp	r5, r4
    83e8:	beq	8414 <Fantasy_Character_parse_json_union+0x1a0>
    83ec:	ldrb	r3, [r4]
    83f0:	cmp	r3, #34	; 0x22
    83f4:	moveq	r3, #0
    83f8:	addeq	r4, r4, #1
    83fc:	streq	r3, [sl, #12]
    8400:	beq	8414 <Fantasy_Character_parse_json_union+0x1a0>
    8404:	cmp	r3, #46	; 0x2e
    8408:	movne	r3, #1
    840c:	strne	r3, [sl, #12]
    8410:	beq	89c8 <Fantasy_Character_parse_json_union+0x754>
    8414:	sub	r3, r5, r4
    8418:	cmp	r3, #8
    841c:	bhi	8450 <Fantasy_Character_parse_json_union+0x1dc>
    8420:	sub	r3, r3, #1
    8424:	cmp	r3, #7
    8428:	ldrls	pc, [pc, r3, lsl #2]
    842c:	b	8654 <Fantasy_Character_parse_json_union+0x3e0>
    8430:	.word	0x0000863c
    8434:	.word	0x00008630
    8438:	.word	0x00008624
    843c:	.word	0x00008618
    8440:	.word	0x0000860c
    8444:	.word	0x00008648
    8448:	.word	0x00008600
    844c:	.word	0x00008450
    8450:	ldrb	r2, [r4, #7]
    8454:	mov	r3, #0
    8458:	mov	ip, r3
    845c:	ldrb	r0, [r4, #6]
    8460:	orr	r1, r2, r0, lsl #8
    8464:	ldrb	r2, [r4, #5]
    8468:	mov	r0, ip
    846c:	orr	r1, r1, r2, lsl #16
    8470:	ldrb	r2, [r4, #4]
    8474:	mov	ip, r0
    8478:	orr	r2, r1, r2, lsl #24
    847c:	ldrb	r0, [r4, #3]
    8480:	orr	r3, ip, r0
    8484:	ldrb	r0, [r4, #2]
    8488:	orr	r3, r3, r0, lsl #8
    848c:	ldrb	r0, [r4, #1]
    8490:	orr	r0, r3, r0, lsl #16
    8494:	mov	r6, r2
    8498:	ldrb	r2, [r4]
    849c:	mov	fp, #0
    84a0:	orr	r7, r0, r2, lsl #24
    84a4:	add	r3, pc, #668	; 0x29c
    84a8:	ldrd	r2, [r3]
    84ac:	cmp	r7, r3
    84b0:	cmpeq	r6, r2
    84b4:	bne	8654 <Fantasy_Character_parse_json_union+0x3e0>
    84b8:	add	r4, r4, #8
    84bc:	mov	r1, r5
    84c0:	mov	r0, r4
    84c4:	mov	r8, fp
    84c8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    84cc:	add	r3, pc, #636	; 0x27c
    84d0:	ldrd	r2, [r3]
    84d4:	bic	r9, r1, #255	; 0xff
    84d8:	cmp	r9, r3
    84dc:	cmpeq	fp, r2
    84e0:	bne	8654 <Fantasy_Character_parse_json_union+0x3e0>
    84e4:	sub	r3, r5, r4
    84e8:	cmp	r3, #3
    84ec:	ble	8654 <Fantasy_Character_parse_json_union+0x3e0>
    84f0:	mov	r1, r4
    84f4:	mov	r3, #3
    84f8:	mov	r2, r5
    84fc:	mov	r0, sl
    8500:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    8504:	cmp	r4, r0
    8508:	mov	r1, r0
    850c:	str	r0, [sp, #8]
    8510:	beq	8654 <Fantasy_Character_parse_json_union+0x3e0>
    8514:	mov	r2, #0
    8518:	mov	r3, #0
    851c:	strh	fp, [sp, #36]	; 0x24
    8520:	cmp	r5, r0
    8524:	str	fp, [sp, #44]	; 0x2c
    8528:	strd	r2, [sp, #48]	; 0x30
    852c:	beq	89e4 <Fantasy_Character_parse_json_union+0x770>
    8530:	add	r0, sp, #48	; 0x30
    8534:	add	r3, sp, #44	; 0x2c
    8538:	mov	r2, r5
    853c:	mov	fp, r1
    8540:	str	r0, [sp]
    8544:	mov	r0, sl
    8548:	bl	0 <flatcc_json_parser_integer>
    854c:	cmp	fp, r0
    8550:	mov	r4, r0
    8554:	bne	89ec <Fantasy_Character_parse_json_union+0x778>
    8558:	add	ip, sp, #36	; 0x24
    855c:	ldr	r3, [pc, #500]	; 8758 <Fantasy_Character_parse_json_union+0x4e4>
    8560:	mov	r2, r5
    8564:	mov	r1, r4
    8568:	mov	r0, sl
    856c:	str	ip, [sp]
    8570:	bl	2174 <flatcc_json_parser_symbolic_uint16>
    8574:	cmp	r5, r0
    8578:	cmpne	r0, r4
    857c:	beq	8a5c <Fantasy_Character_parse_json_union+0x7e8>
    8580:	ldrh	r2, [sp, #36]	; 0x24
    8584:	ldr	r3, [sp, #20]
    8588:	strh	r2, [r3]
    858c:	mov	r1, r0
    8590:	add	r3, sp, #40	; 0x28
    8594:	mov	r2, r5
    8598:	mov	r0, sl
    859c:	bl	2f80 <flatcc_json_parser_object_end>
    85a0:	ldr	r3, [sp, #40]	; 0x28
    85a4:	mov	r4, r0
    85a8:	cmp	r3, #0
    85ac:	bne	83e4 <Fantasy_Character_parse_json_union+0x170>
    85b0:	ldr	fp, [sp, #96]	; 0x60
    85b4:	mov	r1, r0
    85b8:	cmp	r5, r1
    85bc:	beq	85dc <Fantasy_Character_parse_json_union+0x368>
    85c0:	ldr	r0, [sl]
    85c4:	str	r1, [sp, #8]
    85c8:	bl	0 <flatcc_builder_end_struct>
    85cc:	cmp	r0, #0
    85d0:	str	r0, [fp]
    85d4:	ldr	r1, [sp, #8]
    85d8:	bne	82ec <Fantasy_Character_parse_json_union+0x78>
    85dc:	mov	r3, #33	; 0x21
    85e0:	mov	r2, r5
    85e4:	mov	r0, sl
    85e8:	bl	0 <flatcc_json_parser_set_error>
    85ec:	ldr	r3, [sl, #24]
    85f0:	mov	r1, r0
    85f4:	cmp	r3, #0
    85f8:	beq	8344 <Fantasy_Character_parse_json_union+0xd0>
    85fc:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    8600:	mov	r2, #0
    8604:	mov	r3, #0
    8608:	b	8458 <Fantasy_Character_parse_json_union+0x1e4>
    860c:	mov	r1, #0
    8610:	mov	r0, r1
    8614:	b	8470 <Fantasy_Character_parse_json_union+0x1fc>
    8618:	mov	r2, #0
    861c:	mov	ip, r2
    8620:	b	847c <Fantasy_Character_parse_json_union+0x208>
    8624:	mov	r2, #0
    8628:	mov	r3, r2
    862c:	b	8484 <Fantasy_Character_parse_json_union+0x210>
    8630:	mov	r2, #0
    8634:	mov	r3, r2
    8638:	b	848c <Fantasy_Character_parse_json_union+0x218>
    863c:	mov	r2, #0
    8640:	mov	r0, r2
    8644:	b	8494 <Fantasy_Character_parse_json_union+0x220>
    8648:	mov	r1, #0
    864c:	mov	ip, r1
    8650:	b	8464 <Fantasy_Character_parse_json_union+0x1f0>
    8654:	mov	r1, r4
    8658:	mov	r2, r5
    865c:	mov	r0, sl
    8660:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8664:	b	858c <Fantasy_Character_parse_json_union+0x318>
    8668:	sub	r3, r2, r1
    866c:	cmp	r3, #3
    8670:	ble	8680 <Fantasy_Character_parse_json_union+0x40c>
    8674:	ldrb	r3, [r1]
    8678:	cmp	r3, #110	; 0x6e
    867c:	beq	8adc <Fantasy_Character_parse_json_union+0x868>
    8680:	mov	r1, r4
    8684:	mov	r2, r5
    8688:	mov	r0, sl
    868c:	mov	r3, #26
    8690:	bl	0 <flatcc_json_parser_set_error>
    8694:	mov	r1, r0
    8698:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    869c:	mov	r1, #1
    86a0:	ldr	r0, [r0]
    86a4:	bl	0 <flatcc_builder_start_table>
    86a8:	cmp	r0, #0
    86ac:	bne	898c <Fantasy_Character_parse_json_union+0x718>
    86b0:	mov	r1, r4
    86b4:	add	r3, sp, #36	; 0x24
    86b8:	mov	r2, r5
    86bc:	mov	r0, sl
    86c0:	bl	dfc <flatcc_json_parser_object_start>
    86c4:	ldr	r3, [sp, #36]	; 0x24
    86c8:	mov	r4, r0
    86cc:	cmp	r3, #0
    86d0:	beq	8980 <Fantasy_Character_parse_json_union+0x70c>
    86d4:	str	fp, [sp, #96]	; 0x60
    86d8:	cmp	r5, r4
    86dc:	beq	8708 <Fantasy_Character_parse_json_union+0x494>
    86e0:	ldrb	r3, [r4]
    86e4:	cmp	r3, #34	; 0x22
    86e8:	moveq	r3, #0
    86ec:	addeq	r4, r4, #1
    86f0:	streq	r3, [sl, #12]
    86f4:	beq	8708 <Fantasy_Character_parse_json_union+0x494>
    86f8:	cmp	r3, #46	; 0x2e
    86fc:	movne	r3, #1
    8700:	strne	r3, [sl, #12]
    8704:	beq	89ac <Fantasy_Character_parse_json_union+0x738>
    8708:	sub	r3, r5, r4
    870c:	cmp	r3, #8
    8710:	bhi	875c <Fantasy_Character_parse_json_union+0x4e8>
    8714:	sub	r3, r3, #1
    8718:	cmp	r3, #7
    871c:	ldrls	pc, [pc, r3, lsl #2]
    8720:	b	8944 <Fantasy_Character_parse_json_union+0x6d0>
    8724:	.word	0x00008914
    8728:	.word	0x00008908
    872c:	.word	0x000088fc
    8730:	.word	0x0000892c
    8734:	.word	0x00008920
    8738:	.word	0x00008938
    873c:	.word	0x000088f0
    8740:	.word	0x0000875c
    8744:	nop	{0}
    8748:	.word	0x5f6c656e
    874c:	.word	0x68616972
    8750:	.word	0x00000000
    8754:	.word	0x67746800
    8758:	.word	0x00000108
    875c:	ldrb	r6, [r4, #7]
    8760:	mov	r7, #0
    8764:	mov	r3, r7
    8768:	ldrb	r0, [r4, #6]
    876c:	orr	r2, r6, r0, lsl #8
    8770:	ldrb	r0, [r4, #5]
    8774:	orr	r2, r2, r0, lsl #16
    8778:	ldrb	r0, [r4, #4]
    877c:	orr	r2, r2, r0, lsl #24
    8780:	ldrb	r0, [r4, #3]
    8784:	orr	r3, r3, r0
    8788:	ldrb	r0, [r4, #2]
    878c:	orr	r3, r3, r0, lsl #8
    8790:	ldrb	r0, [r4, #1]
    8794:	orr	r3, r3, r0, lsl #16
    8798:	ldrb	r0, [r4]
    879c:	mov	r8, r2
    87a0:	mov	fp, #0
    87a4:	orr	r9, r3, r0, lsl #24
    87a8:	add	r3, pc, #944	; 0x3b0
    87ac:	ldrd	r2, [r3]
    87b0:	cmp	r9, r3
    87b4:	cmpeq	r8, r2
    87b8:	bne	8944 <Fantasy_Character_parse_json_union+0x6d0>
    87bc:	add	r6, r4, #8
    87c0:	mov	r1, r5
    87c4:	mov	r0, r6
    87c8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    87cc:	add	r3, pc, #916	; 0x394
    87d0:	ldrd	r2, [r3]
    87d4:	cmp	r1, r3
    87d8:	cmpeq	r0, r2
    87dc:	bne	8994 <Fantasy_Character_parse_json_union+0x720>
    87e0:	add	r4, r4, #16
    87e4:	mov	r1, r5
    87e8:	str	fp, [sp, #8]
    87ec:	mov	r0, r4
    87f0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    87f4:	bic	r3, r1, #255	; 0xff
    87f8:	add	r1, pc, #880	; 0x370
    87fc:	ldrd	r0, [r1]
    8800:	str	r3, [sp, #12]
    8804:	ldrd	r2, [sp, #8]
    8808:	cmp	r3, r1
    880c:	cmpeq	r2, r0
    8810:	bne	8944 <Fantasy_Character_parse_json_union+0x6d0>
    8814:	sub	r3, r5, r4
    8818:	cmp	r3, #3
    881c:	ble	8944 <Fantasy_Character_parse_json_union+0x6d0>
    8820:	mov	r3, #3
    8824:	mov	r2, r5
    8828:	mov	r1, r4
    882c:	mov	r0, sl
    8830:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    8834:	cmp	r4, r0
    8838:	mov	r6, r0
    883c:	beq	8944 <Fantasy_Character_parse_json_union+0x6d0>
    8840:	mov	r2, #0
    8844:	mov	r3, #0
    8848:	str	fp, [sp, #40]	; 0x28
    884c:	cmp	r5, r0
    8850:	str	fp, [sp, #44]	; 0x2c
    8854:	strd	r2, [sp, #48]	; 0x30
    8858:	beq	8a88 <Fantasy_Character_parse_json_union+0x814>
    885c:	add	r0, sp, #48	; 0x30
    8860:	add	r3, sp, #44	; 0x2c
    8864:	mov	r2, r5
    8868:	mov	r1, r6
    886c:	str	r0, [sp]
    8870:	mov	r0, sl
    8874:	bl	0 <flatcc_json_parser_integer>
    8878:	cmp	r6, r0
    887c:	mov	r4, r0
    8880:	bne	8a90 <Fantasy_Character_parse_json_union+0x81c>
    8884:	add	ip, sp, #40	; 0x28
    8888:	ldr	r3, [pc, #744]	; 8b78 <Fantasy_Character_parse_json_union+0x904>
    888c:	mov	r2, r5
    8890:	mov	r1, r4
    8894:	mov	r0, sl
    8898:	str	ip, [sp]
    889c:	bl	1cb8 <flatcc_json_parser_symbolic_int32>
    88a0:	cmp	r5, r0
    88a4:	cmpne	r0, r4
    88a8:	beq	8a7c <Fantasy_Character_parse_json_union+0x808>
    88ac:	ldr	r2, [sp, #40]	; 0x28
    88b0:	mov	r4, r0
    88b4:	cmp	r2, #0
    88b8:	bne	88c8 <Fantasy_Character_parse_json_union+0x654>
    88bc:	ldr	r3, [sl, #8]
    88c0:	tst	r3, #2
    88c4:	beq	8958 <Fantasy_Character_parse_json_union+0x6e4>
    88c8:	mov	r3, #4
    88cc:	mov	r1, #0
    88d0:	ldr	r0, [sl]
    88d4:	mov	r2, r3
    88d8:	bl	0 <flatcc_builder_table_add>
    88dc:	cmp	r0, #0
    88e0:	beq	8b58 <Fantasy_Character_parse_json_union+0x8e4>
    88e4:	ldr	r3, [sp, #40]	; 0x28
    88e8:	str	r3, [r0]
    88ec:	b	8958 <Fantasy_Character_parse_json_union+0x6e4>
    88f0:	mov	r6, #0
    88f4:	mov	r7, #0
    88f8:	b	8764 <Fantasy_Character_parse_json_union+0x4f0>
    88fc:	mov	r2, #0
    8900:	mov	r3, r2
    8904:	b	8788 <Fantasy_Character_parse_json_union+0x514>
    8908:	mov	r2, #0
    890c:	mov	r3, r2
    8910:	b	8790 <Fantasy_Character_parse_json_union+0x51c>
    8914:	mov	r2, #0
    8918:	mov	r3, r2
    891c:	b	8798 <Fantasy_Character_parse_json_union+0x524>
    8920:	mov	r2, #0
    8924:	mov	r3, r2
    8928:	b	8778 <Fantasy_Character_parse_json_union+0x504>
    892c:	mov	r2, #0
    8930:	mov	r3, r2
    8934:	b	8780 <Fantasy_Character_parse_json_union+0x50c>
    8938:	mov	r2, #0
    893c:	mov	r3, r2
    8940:	b	8770 <Fantasy_Character_parse_json_union+0x4fc>
    8944:	mov	r1, r4
    8948:	mov	r2, r5
    894c:	mov	r0, sl
    8950:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8954:	mov	r4, r0
    8958:	mov	r1, r4
    895c:	add	r3, sp, #36	; 0x24
    8960:	mov	r2, r5
    8964:	mov	r0, sl
    8968:	bl	2f80 <flatcc_json_parser_object_end>
    896c:	ldr	r3, [sp, #36]	; 0x24
    8970:	mov	r4, r0
    8974:	cmp	r3, #0
    8978:	bne	86d8 <Fantasy_Character_parse_json_union+0x464>
    897c:	ldr	fp, [sp, #96]	; 0x60
    8980:	ldr	r3, [sl, #24]
    8984:	cmp	r3, #0
    8988:	beq	8a40 <Fantasy_Character_parse_json_union+0x7cc>
    898c:	mov	r1, r4
    8990:	b	85dc <Fantasy_Character_parse_json_union+0x368>
    8994:	mov	r1, r6
    8998:	mov	r2, r5
    899c:	mov	r0, sl
    89a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    89a4:	mov	r4, r0
    89a8:	b	8958 <Fantasy_Character_parse_json_union+0x6e4>
    89ac:	mov	r1, r4
    89b0:	mov	r3, #5
    89b4:	mov	r2, r5
    89b8:	mov	r0, sl
    89bc:	bl	0 <flatcc_json_parser_set_error>
    89c0:	mov	r4, r0
    89c4:	b	8708 <Fantasy_Character_parse_json_union+0x494>
    89c8:	mov	r1, r4
    89cc:	mov	r3, #5
    89d0:	mov	r2, r5
    89d4:	mov	r0, sl
    89d8:	bl	0 <flatcc_json_parser_set_error>
    89dc:	mov	r4, r0
    89e0:	b	8414 <Fantasy_Character_parse_json_union+0x1a0>
    89e4:	mov	r4, r5
    89e8:	b	8558 <Fantasy_Character_parse_json_union+0x2e4>
    89ec:	ldr	r3, [sp, #44]	; 0x2c
    89f0:	cmp	r3, r8
    89f4:	bne	8b40 <Fantasy_Character_parse_json_union+0x8cc>
    89f8:	ldrd	r2, [sp, #48]	; 0x30
    89fc:	mov	r1, #0
    8a00:	movw	r0, #65535	; 0xffff
    8a04:	cmp	r3, r1
    8a08:	cmpeq	r2, r0
    8a0c:	uxthls	r2, r2
    8a10:	movls	r0, r4
    8a14:	bls	8584 <Fantasy_Character_parse_json_union+0x310>
    8a18:	mov	r1, r4
    8a1c:	mov	r3, #7
    8a20:	mov	r2, r5
    8a24:	mov	r0, sl
    8a28:	bl	0 <flatcc_json_parser_set_error>
    8a2c:	ldr	r3, [sp, #8]
    8a30:	cmp	r3, r0
    8a34:	bne	8580 <Fantasy_Character_parse_json_union+0x30c>
    8a38:	mov	r4, r3
    8a3c:	b	8558 <Fantasy_Character_parse_json_union+0x2e4>
    8a40:	ldr	r0, [sl]
    8a44:	bl	0 <flatcc_builder_end_table>
    8a48:	cmp	r0, #0
    8a4c:	str	r0, [fp]
    8a50:	movne	r1, r4
    8a54:	bne	8338 <Fantasy_Character_parse_json_union+0xc4>
    8a58:	b	898c <Fantasy_Character_parse_json_union+0x718>
    8a5c:	mov	r1, r0
    8a60:	mov	r3, #33	; 0x21
    8a64:	ldr	fp, [sp, #96]	; 0x60
    8a68:	mov	r2, r5
    8a6c:	mov	r0, sl
    8a70:	bl	0 <flatcc_json_parser_set_error>
    8a74:	mov	r1, r0
    8a78:	b	85b8 <Fantasy_Character_parse_json_union+0x344>
    8a7c:	mov	r4, r0
    8a80:	ldr	fp, [sp, #96]	; 0x60
    8a84:	b	898c <Fantasy_Character_parse_json_union+0x718>
    8a88:	mov	r4, r5
    8a8c:	b	8884 <Fantasy_Character_parse_json_union+0x610>
    8a90:	ldr	r1, [sp, #44]	; 0x2c
    8a94:	ldrd	r2, [sp, #48]	; 0x30
    8a98:	cmp	r1, fp
    8a9c:	beq	8b0c <Fantasy_Character_parse_json_union+0x898>
    8aa0:	cmp	r3, #0
    8aa4:	cmpeq	r2, #-2147483648	; 0x80000000
    8aa8:	rsbls	r2, r2, #0
    8aac:	strls	r2, [sp, #40]	; 0x28
    8ab0:	bls	88b4 <Fantasy_Character_parse_json_union+0x640>
    8ab4:	mov	r1, r0
    8ab8:	mov	r3, #8
    8abc:	mov	r2, r5
    8ac0:	mov	r0, sl
    8ac4:	bl	0 <flatcc_json_parser_set_error>
    8ac8:	mov	r4, r0
    8acc:	cmp	r6, r4
    8ad0:	beq	8884 <Fantasy_Character_parse_json_union+0x610>
    8ad4:	ldr	r2, [sp, #40]	; 0x28
    8ad8:	b	88b4 <Fantasy_Character_parse_json_union+0x640>
    8adc:	ldrb	r3, [r1, #1]
    8ae0:	add	r2, r1, #1
    8ae4:	cmp	r3, #117	; 0x75
    8ae8:	bne	8680 <Fantasy_Character_parse_json_union+0x40c>
    8aec:	ldrb	r3, [r2, #1]!
    8af0:	cmp	r3, #108	; 0x6c
    8af4:	bne	8680 <Fantasy_Character_parse_json_union+0x40c>
    8af8:	ldrb	r3, [r2, #1]
    8afc:	cmp	r3, #108	; 0x6c
    8b00:	addeq	r1, r1, #4
    8b04:	bne	8680 <Fantasy_Character_parse_json_union+0x40c>
    8b08:	b	82ec <Fantasy_Character_parse_json_union+0x78>
    8b0c:	mov	r1, #0
    8b10:	mvn	r0, #-2147483648	; 0x80000000
    8b14:	cmp	r3, r1
    8b18:	cmpeq	r2, r0
    8b1c:	strls	r2, [sp, #40]	; 0x28
    8b20:	bls	88b4 <Fantasy_Character_parse_json_union+0x640>
    8b24:	mov	r1, r4
    8b28:	mov	r3, #7
    8b2c:	mov	r2, r5
    8b30:	mov	r0, sl
    8b34:	bl	0 <flatcc_json_parser_set_error>
    8b38:	mov	r4, r0
    8b3c:	b	8acc <Fantasy_Character_parse_json_union+0x858>
    8b40:	mov	r1, r0
    8b44:	mov	r3, #8
    8b48:	mov	r2, r5
    8b4c:	mov	r0, sl
    8b50:	bl	0 <flatcc_json_parser_set_error>
    8b54:	b	8a2c <Fantasy_Character_parse_json_union+0x7b8>
    8b58:	ldr	fp, [sp, #96]	; 0x60
    8b5c:	b	898c <Fantasy_Character_parse_json_union+0x718>
    8b60:	.word	0x645f6174
    8b64:	.word	0x73776f72
    8b68:	.word	0x5f64616d
    8b6c:	.word	0x7461636b
    8b70:	.word	0x00000000
    8b74:	.word	0x61676500
    8b78:	.word	0x000000fc

00008b7c <monster_test_local_Fantasy_json_parser_enum>:
    8b7c:	sub	ip, r2, r1
    8b80:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8b84:	cmp	ip, #8
    8b88:	strd	r6, [sp, #8]
    8b8c:	strd	r8, [sp, #16]
    8b90:	strd	sl, [sp, #24]
    8b94:	str	lr, [sp, #32]
    8b98:	ldrd	sl, [sp, #36]	; 0x24
    8b9c:	bhi	8bd0 <monster_test_local_Fantasy_json_parser_enum+0x54>
    8ba0:	sub	ip, ip, #1
    8ba4:	cmp	ip, #7
    8ba8:	ldrls	pc, [pc, ip, lsl #2]
    8bac:	b	8c90 <monster_test_local_Fantasy_json_parser_enum+0x114>
    8bb0:	.word	0x00008d60
    8bb4:	.word	0x00008d48
    8bb8:	.word	0x00008d54
    8bbc:	.word	0x00008d18
    8bc0:	.word	0x00008d24
    8bc4:	.word	0x00008d30
    8bc8:	.word	0x00008d3c
    8bcc:	.word	0x00008bd0
    8bd0:	ldrb	r4, [r1, #7]
    8bd4:	mov	r5, #0
    8bd8:	mov	lr, r5
    8bdc:	ldrb	r6, [r1, #6]
    8be0:	orr	ip, r4, r6, lsl #8
    8be4:	ldrb	r6, [r1, #5]
    8be8:	orr	ip, ip, r6, lsl #16
    8bec:	ldrb	r6, [r1, #4]
    8bf0:	orr	ip, ip, r6, lsl #24
    8bf4:	ldrb	r8, [r1, #3]
    8bf8:	orr	lr, lr, r8
    8bfc:	ldrb	r8, [r1, #2]
    8c00:	orr	lr, lr, r8, lsl #8
    8c04:	ldrb	r8, [r1, #1]
    8c08:	orr	lr, lr, r8, lsl #16
    8c0c:	ldrb	r8, [r1]
    8c10:	add	r7, pc, #384	; 0x180
    8c14:	ldrd	r6, [r7]
    8c18:	orr	r5, lr, r8, lsl #24
    8c1c:	cmp	r5, r7
    8c20:	cmpeq	ip, r6
    8c24:	bne	8c90 <monster_test_local_Fantasy_json_parser_enum+0x114>
    8c28:	add	lr, r1, #8
    8c2c:	sub	ip, r2, lr
    8c30:	cmp	ip, #8
    8c34:	bls	8cac <monster_test_local_Fantasy_json_parser_enum+0x130>
    8c38:	mov	r5, #0
    8c3c:	mov	r6, r5
    8c40:	mov	r4, r6
    8c44:	ldrb	r6, [r1, #11]
    8c48:	orr	r6, r4, r6
    8c4c:	ldrb	r4, [r1, #10]
    8c50:	orr	r6, r6, r4, lsl #8
    8c54:	ldrb	r4, [r1, #9]
    8c58:	orr	r6, r6, r4, lsl #16
    8c5c:	ldrb	r4, [r1, #8]
    8c60:	orr	r6, r6, r4, lsl #24
    8c64:	mov	r4, #0
    8c68:	and	r5, r6, #-16777216	; 0xff000000
    8c6c:	cmp	r5, #1912602624	; 0x72000000
    8c70:	cmpeq	r4, #0
    8c74:	movne	r4, #1
    8c78:	moveq	r4, #0
    8c7c:	cmp	ip, #1
    8c80:	movgt	ip, r4
    8c84:	orrle	ip, r4, #1
    8c88:	cmp	ip, #0
    8c8c:	beq	8cdc <monster_test_local_Fantasy_json_parser_enum+0x160>
    8c90:	ldrd	r4, [sp]
    8c94:	mov	r0, r1
    8c98:	ldrd	r6, [sp, #8]
    8c9c:	ldrd	r8, [sp, #16]
    8ca0:	ldrd	sl, [sp, #24]
    8ca4:	add	sp, sp, #32
    8ca8:	pop	{pc}		; (ldr pc, [sp], #4)
    8cac:	sub	r4, ip, #1
    8cb0:	cmp	r4, #7
    8cb4:	ldrls	pc, [pc, r4, lsl #2]
    8cb8:	b	8c90 <monster_test_local_Fantasy_json_parser_enum+0x114>
    8cbc:	.word	0x00008d7c
    8cc0:	.word	0x00008d84
    8cc4:	.word	0x00008d8c
    8cc8:	.word	0x00008d74
    8ccc:	.word	0x00008d6c
    8cd0:	.word	0x00008d6c
    8cd4:	.word	0x00008c38
    8cd8:	.word	0x00008c38
    8cdc:	ldrb	ip, [r1, #9]
    8ce0:	cmp	ip, #46	; 0x2e
    8ce4:	bne	8c90 <monster_test_local_Fantasy_json_parser_enum+0x114>
    8ce8:	add	ip, r1, #10
    8cec:	cmp	lr, ip
    8cf0:	beq	8c90 <monster_test_local_Fantasy_json_parser_enum+0x114>
    8cf4:	mov	r1, ip
    8cf8:	strd	sl, [sp, #36]	; 0x24
    8cfc:	ldrd	r4, [sp]
    8d00:	ldrd	r6, [sp, #8]
    8d04:	ldrd	r8, [sp, #16]
    8d08:	ldrd	sl, [sp, #24]
    8d0c:	ldr	lr, [sp, #32]
    8d10:	add	sp, sp, #36	; 0x24
    8d14:	b	144 <Fantasy_Character_parse_json_enum>
    8d18:	mov	ip, #0
    8d1c:	mov	lr, ip
    8d20:	b	8bf4 <monster_test_local_Fantasy_json_parser_enum+0x78>
    8d24:	mov	ip, #0
    8d28:	mov	lr, ip
    8d2c:	b	8bec <monster_test_local_Fantasy_json_parser_enum+0x70>
    8d30:	mov	ip, #0
    8d34:	mov	lr, ip
    8d38:	b	8be4 <monster_test_local_Fantasy_json_parser_enum+0x68>
    8d3c:	mov	r4, #0
    8d40:	mov	r5, #0
    8d44:	b	8bd8 <monster_test_local_Fantasy_json_parser_enum+0x5c>
    8d48:	mov	ip, #0
    8d4c:	mov	lr, ip
    8d50:	b	8c04 <monster_test_local_Fantasy_json_parser_enum+0x88>
    8d54:	mov	ip, #0
    8d58:	mov	lr, ip
    8d5c:	b	8bfc <monster_test_local_Fantasy_json_parser_enum+0x80>
    8d60:	mov	ip, #0
    8d64:	mov	lr, ip
    8d68:	b	8c0c <monster_test_local_Fantasy_json_parser_enum+0x90>
    8d6c:	mov	r6, #0
    8d70:	b	8c40 <monster_test_local_Fantasy_json_parser_enum+0xc4>
    8d74:	mov	r4, #0
    8d78:	b	8c44 <monster_test_local_Fantasy_json_parser_enum+0xc8>
    8d7c:	mov	r6, #0
    8d80:	b	8c5c <monster_test_local_Fantasy_json_parser_enum+0xe0>
    8d84:	mov	r6, #0
    8d88:	b	8c54 <monster_test_local_Fantasy_json_parser_enum+0xd8>
    8d8c:	mov	r6, #0
    8d90:	b	8c4c <monster_test_local_Fantasy_json_parser_enum+0xd0>
    8d94:	nop	{0}
    8d98:	.word	0x61637465
    8d9c:	.word	0x43686172

00008da0 <MyGame_Example_Monster_parse_json_table>:
    8da0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8da4:	mov	ip, r3
    8da8:	strd	r6, [sp, #8]
    8dac:	strd	r8, [sp, #16]
    8db0:	mov	r9, r2
    8db4:	strd	sl, [sp, #24]
    8db8:	mov	fp, r0
    8dbc:	mov	sl, r1
    8dc0:	str	lr, [sp, #32]
    8dc4:	mov	r1, #36	; 0x24
    8dc8:	vpush	{d8-d9}
    8dcc:	sub	sp, sp, #356	; 0x164
    8dd0:	ldr	r0, [r0]
    8dd4:	str	r3, [sp, #68]	; 0x44
    8dd8:	mov	r3, #0
    8ddc:	str	r3, [ip]
    8de0:	bl	0 <flatcc_builder_start_table>
    8de4:	cmp	r0, #0
    8de8:	beq	8e28 <MyGame_Example_Monster_parse_json_table+0x88>
    8dec:	mov	r2, r9
    8df0:	mov	r1, sl
    8df4:	mov	r0, fp
    8df8:	mov	r3, #33	; 0x21
    8dfc:	bl	0 <flatcc_json_parser_set_error>
    8e00:	mov	r4, r0
    8e04:	mov	r0, r4
    8e08:	add	sp, sp, #356	; 0x164
    8e0c:	vpop	{d8-d9}
    8e10:	ldrd	r4, [sp]
    8e14:	ldrd	r6, [sp, #8]
    8e18:	ldrd	r8, [sp, #16]
    8e1c:	ldrd	sl, [sp, #24]
    8e20:	add	sp, sp, #32
    8e24:	pop	{pc}		; (ldr pc, [sp], #4)
    8e28:	add	r0, sp, #328	; 0x148
    8e2c:	mov	r3, #1
    8e30:	mov	r2, r9
    8e34:	mov	r1, sl
    8e38:	str	r0, [sp]
    8e3c:	mov	r0, fp
    8e40:	bl	0 <flatcc_json_parser_prepare_unions>
    8e44:	cmp	r9, r0
    8e48:	beq	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    8e4c:	mov	r1, sl
    8e50:	add	r3, sp, #320	; 0x140
    8e54:	mov	r2, r9
    8e58:	mov	r0, fp
    8e5c:	bl	dfc <flatcc_json_parser_object_start>
    8e60:	ldr	r3, [sp, #320]	; 0x140
    8e64:	mov	sl, r0
    8e68:	cmp	r3, #0
    8e6c:	beq	96c4 <MyGame_Example_Monster_parse_json_table+0x924>
    8e70:	mov	r8, r9
    8e74:	mov	r9, fp
    8e78:	cmp	sl, r8
    8e7c:	beq	8ea8 <MyGame_Example_Monster_parse_json_table+0x108>
    8e80:	ldrb	r3, [sl]
    8e84:	cmp	r3, #34	; 0x22
    8e88:	moveq	r3, #0
    8e8c:	addeq	sl, sl, #1
    8e90:	streq	r3, [r9, #12]
    8e94:	beq	8ea8 <MyGame_Example_Monster_parse_json_table+0x108>
    8e98:	cmp	r3, #46	; 0x2e
    8e9c:	movne	r3, #1
    8ea0:	strne	r3, [r9, #12]
    8ea4:	beq	9d48 <MyGame_Example_Monster_parse_json_table+0xfa8>
    8ea8:	mov	r1, r8
    8eac:	mov	r0, sl
    8eb0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8eb4:	add	r3, pc, #820	; 0x334
    8eb8:	ldrd	r2, [r3]
    8ebc:	mov	r4, r0
    8ec0:	mov	r5, r1
    8ec4:	strd	r4, [sp, #16]
    8ec8:	cmp	r1, r3
    8ecc:	cmpeq	r0, r2
    8ed0:	bhi	9024 <MyGame_Example_Monster_parse_json_table+0x284>
    8ed4:	add	r3, pc, #796	; 0x31c
    8ed8:	ldrd	r2, [r3]
    8edc:	cmp	r1, r3
    8ee0:	cmpeq	r0, r2
    8ee4:	bhi	9130 <MyGame_Example_Monster_parse_json_table+0x390>
    8ee8:	add	r3, pc, #784	; 0x310
    8eec:	ldrd	r2, [r3]
    8ef0:	cmp	r1, r3
    8ef4:	cmpeq	r0, r2
    8ef8:	bhi	948c <MyGame_Example_Monster_parse_json_table+0x6ec>
    8efc:	and	r1, r0, #-16777216	; 0xff000000
    8f00:	add	r3, pc, #768	; 0x300
    8f04:	ldrd	r2, [r3]
    8f08:	str	r1, [sp, #40]	; 0x28
    8f0c:	str	r5, [sp, #44]	; 0x2c
    8f10:	ldrd	r0, [sp, #40]	; 0x28
    8f14:	cmp	r1, r3
    8f18:	cmpeq	r0, r2
    8f1c:	beq	a0c8 <MyGame_Example_Monster_parse_json_table+0x1328>
    8f20:	add	r3, pc, #744	; 0x2e8
    8f24:	ldrd	r2, [r3]
    8f28:	ldrd	r0, [sp, #40]	; 0x28
    8f2c:	cmp	r1, r3
    8f30:	cmpeq	r0, r2
    8f34:	bne	b1e8 <MyGame_Example_Monster_parse_json_table+0x2448>
    8f38:	sub	r3, r8, sl
    8f3c:	cmp	r3, #5
    8f40:	ble	ad24 <MyGame_Example_Monster_parse_json_table+0x1f84>
    8f44:	mov	r3, #5
    8f48:	mov	r2, r8
    8f4c:	mov	r1, sl
    8f50:	mov	r0, r9
    8f54:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    8f58:	cmp	r0, sl
    8f5c:	mov	r4, r0
    8f60:	beq	ad24 <MyGame_Example_Monster_parse_json_table+0x1f84>
    8f64:	mov	r3, #0
    8f68:	mov	r0, #0
    8f6c:	mov	r1, #0
    8f70:	cmp	r8, r4
    8f74:	strb	r3, [sp, #336]	; 0x150
    8f78:	str	r3, [sp, #340]	; 0x154
    8f7c:	add	r3, sp, #344	; 0x158
    8f80:	strd	r0, [r3]
    8f84:	beq	c36c <MyGame_Example_Monster_parse_json_table+0x35cc>
    8f88:	mov	r0, r3
    8f8c:	mov	r2, r8
    8f90:	add	r3, sp, #340	; 0x154
    8f94:	mov	r1, r4
    8f98:	str	r0, [sp]
    8f9c:	mov	r0, r9
    8fa0:	bl	0 <flatcc_json_parser_integer>
    8fa4:	cmp	r4, r0
    8fa8:	mov	sl, r0
    8fac:	bne	c3ac <MyGame_Example_Monster_parse_json_table+0x360c>
    8fb0:	add	ip, sp, #336	; 0x150
    8fb4:	ldr	r3, [pc, #668]	; 9258 <MyGame_Example_Monster_parse_json_table+0x4b8>
    8fb8:	mov	r2, r8
    8fbc:	mov	r1, sl
    8fc0:	mov	r0, r9
    8fc4:	str	ip, [sp]
    8fc8:	bl	1f10 <flatcc_json_parser_symbolic_int8>
    8fcc:	cmp	r8, r0
    8fd0:	cmpne	r0, sl
    8fd4:	beq	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    8fd8:	add	r3, sp, #336	; 0x150
    8fdc:	mov	sl, r0
    8fe0:	ldrsb	r2, [r3]
    8fe4:	cmp	r2, #8
    8fe8:	bne	8ff8 <MyGame_Example_Monster_parse_json_table+0x258>
    8fec:	ldr	r3, [r9, #8]
    8ff0:	tst	r3, #2
    8ff4:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    8ff8:	mov	r3, #1
    8ffc:	mov	r1, #6
    9000:	ldr	r0, [r9]
    9004:	mov	r2, r3
    9008:	bl	0 <flatcc_builder_table_add>
    900c:	cmp	r0, #0
    9010:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9014:	add	r3, sp, #336	; 0x150
    9018:	ldrsb	r3, [r3]
    901c:	strb	r3, [r0]
    9020:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9024:	add	r3, pc, #492	; 0x1ec
    9028:	ldrd	r2, [r3]
    902c:	ldrd	r0, [sp, #16]
    9030:	cmp	r1, r3
    9034:	cmpeq	r0, r2
    9038:	bhi	925c <MyGame_Example_Monster_parse_json_table+0x4bc>
    903c:	add	r3, pc, #476	; 0x1dc
    9040:	ldrd	r2, [r3]
    9044:	cmp	r1, r3
    9048:	cmpeq	r0, r2
    904c:	beq	971c <MyGame_Example_Monster_parse_json_table+0x97c>
    9050:	add	r3, pc, #464	; 0x1d0
    9054:	ldrd	r2, [r3]
    9058:	ldrd	r0, [sp, #16]
    905c:	cmp	r1, r3
    9060:	cmpeq	r0, r2
    9064:	bhi	98c0 <MyGame_Example_Monster_parse_json_table+0xb20>
    9068:	add	r3, pc, #448	; 0x1c0
    906c:	ldrd	r2, [r3]
    9070:	cmp	r1, r3
    9074:	cmpeq	r0, r2
    9078:	beq	b360 <MyGame_Example_Monster_parse_json_table+0x25c0>
    907c:	add	r3, pc, #436	; 0x1b4
    9080:	ldrd	r2, [r3]
    9084:	ldrd	r0, [sp, #16]
    9088:	cmp	r1, r3
    908c:	cmpeq	r0, r2
    9090:	bne	a4d4 <MyGame_Example_Monster_parse_json_table+0x1734>
    9094:	sub	r3, r8, sl
    9098:	cmp	r3, #8
    909c:	ble	c33c <MyGame_Example_Monster_parse_json_table+0x359c>
    90a0:	mov	r3, #8
    90a4:	mov	r2, r8
    90a8:	mov	r1, sl
    90ac:	mov	r0, r9
    90b0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    90b4:	cmp	r0, sl
    90b8:	mov	r4, r0
    90bc:	beq	c33c <MyGame_Example_Monster_parse_json_table+0x359c>
    90c0:	mov	r2, #0
    90c4:	sub	r3, r8, r0
    90c8:	cmp	r3, #3
    90cc:	strb	r2, [sp, #336]	; 0x150
    90d0:	ble	add4 <MyGame_Example_Monster_parse_json_table+0x2034>
    90d4:	ldrb	r2, [r0]
    90d8:	cmp	r2, #116	; 0x74
    90dc:	beq	c918 <MyGame_Example_Monster_parse_json_table+0x3b78>
    90e0:	cmp	r3, #4
    90e4:	beq	add4 <MyGame_Example_Monster_parse_json_table+0x2034>
    90e8:	movw	r1, #0
    90ec:	movt	r1, #0
    90f0:	mov	r2, #5
    90f4:	mov	r0, r4
    90f8:	bl	0 <memcmp>
    90fc:	cmp	r0, #0
    9100:	addeq	sl, r4, #5
    9104:	bne	add4 <MyGame_Example_Monster_parse_json_table+0x2034>
    9108:	mov	r3, #1
    910c:	mov	r1, #15
    9110:	ldr	r0, [r9]
    9114:	mov	r2, r3
    9118:	bl	0 <flatcc_builder_table_add>
    911c:	cmp	r0, #0
    9120:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9124:	ldrb	r3, [sp, #336]	; 0x150
    9128:	strb	r3, [r0]
    912c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9130:	add	r3, pc, #264	; 0x108
    9134:	ldrd	r2, [r3]
    9138:	ldrd	r4, [sp, #16]
    913c:	cmp	r5, r3
    9140:	cmpeq	r4, r2
    9144:	bhi	9614 <MyGame_Example_Monster_parse_json_table+0x874>
    9148:	add	r3, pc, #248	; 0xf8
    914c:	ldrd	r2, [r3]
    9150:	cmp	r5, r3
    9154:	cmpeq	r4, r2
    9158:	bhi	9c18 <MyGame_Example_Monster_parse_json_table+0xe78>
    915c:	mov	r1, #0
    9160:	add	r3, pc, #232	; 0xe8
    9164:	ldrd	r2, [r3]
    9168:	str	r1, [sp, #104]	; 0x68
    916c:	str	r5, [sp, #108]	; 0x6c
    9170:	ldrd	r0, [sp, #104]	; 0x68
    9174:	cmp	r1, r3
    9178:	cmpeq	r0, r2
    917c:	bne	a4a4 <MyGame_Example_Monster_parse_json_table+0x1704>
    9180:	sub	r3, r8, sl
    9184:	cmp	r3, #4
    9188:	ble	b998 <MyGame_Example_Monster_parse_json_table+0x2bf8>
    918c:	mov	r1, sl
    9190:	mov	r3, #4
    9194:	mov	r2, r8
    9198:	mov	r0, r9
    919c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    91a0:	cmp	r0, sl
    91a4:	mov	r1, r0
    91a8:	beq	b998 <MyGame_Example_Monster_parse_json_table+0x2bf8>
    91ac:	add	r3, sp, #324	; 0x144
    91b0:	mov	r2, r8
    91b4:	mov	r0, r9
    91b8:	bl	0 <flatcc_json_parser_build_string>
    91bc:	ldr	r3, [sp, #324]	; 0x144
    91c0:	mov	sl, r0
    91c4:	cmp	r3, #0
    91c8:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    91cc:	mov	r1, #3
    91d0:	ldr	r0, [r9]
    91d4:	bl	0 <flatcc_builder_table_add_offset>
    91d8:	cmp	r0, #0
    91dc:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    91e0:	ldr	r3, [sp, #324]	; 0x144
    91e4:	str	r3, [r0]
    91e8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    91ec:	nop	{0}
    91f0:	.word	0x61727260
    91f4:	.word	0x74657374
    91f8:	.word	0xffffffff
    91fc:	.word	0x6e616d64
    9200:	.word	0xffffffff
    9204:	.word	0x666c6577
    9208:	.word	0x79000000
    920c:	.word	0x656e656d
    9210:	.word	0x72000000
    9214:	.word	0x636f6c6f
    9218:	.word	0x6632ffff
    921c:	.word	0x74657374
    9220:	.word	0x61727261
    9224:	.word	0x74657374
    9228:	.word	0x656d7073
    922c:	.word	0x74657374
    9230:	.word	0x62617365
    9234:	.word	0x74657374
    9238:	.word	0x626f6f6c
    923c:	.word	0x74657374
    9240:	.word	0xffffffff
    9244:	.word	0x74657373
    9248:	.word	0x6e745f6d
    924c:	.word	0x70617265
    9250:	.word	0x00000000
    9254:	.word	0x6e616d65
    9258:	.word	0x00000114
    925c:	add	r3, pc, #876	; 0x36c
    9260:	ldrd	r2, [r3]
    9264:	ldrd	r4, [sp, #16]
    9268:	cmp	r5, r3
    926c:	cmpeq	r4, r2
    9270:	bhi	933c <MyGame_Example_Monster_parse_json_table+0x59c>
    9274:	lsr	r3, r4, #16
    9278:	str	r3, [sp, #24]
    927c:	ldr	r1, [sp, #24]
    9280:	str	r5, [sp, #28]
    9284:	add	r3, pc, #844	; 0x34c
    9288:	ldrd	r2, [r3]
    928c:	lsl	r1, r1, #16
    9290:	str	r1, [sp, #24]
    9294:	ldrd	r0, [sp, #24]
    9298:	cmp	r1, r3
    929c:	cmpeq	r0, r2
    92a0:	bne	9e88 <MyGame_Example_Monster_parse_json_table+0x10e8>
    92a4:	sub	r3, r8, sl
    92a8:	cmp	r3, #6
    92ac:	ble	b73c <MyGame_Example_Monster_parse_json_table+0x299c>
    92b0:	mov	r3, #6
    92b4:	mov	r2, r8
    92b8:	mov	r1, sl
    92bc:	mov	r0, r9
    92c0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    92c4:	cmp	r0, sl
    92c8:	mov	r4, r0
    92cc:	beq	b73c <MyGame_Example_Monster_parse_json_table+0x299c>
    92d0:	mov	ip, #0
    92d4:	mov	r1, r0
    92d8:	mov	r2, r8
    92dc:	add	r3, sp, #344	; 0x158
    92e0:	mov	r0, r9
    92e4:	str	ip, [sp, #344]	; 0x158
    92e8:	bl	0 <flatcc_json_parser_float>
    92ec:	cmp	r0, r4
    92f0:	mov	sl, r0
    92f4:	beq	bc9c <MyGame_Example_Monster_parse_json_table+0x2efc>
    92f8:	vldr	s15, [sp, #344]	; 0x158
    92fc:	vcmp.f32	s15, #0.0
    9300:	vmrs	APSR_nzcv, fpscr
    9304:	bne	9314 <MyGame_Example_Monster_parse_json_table+0x574>
    9308:	ldr	r3, [r9, #8]
    930c:	tst	r3, #2
    9310:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9314:	mov	r3, #4
    9318:	mov	r1, #27
    931c:	ldr	r0, [r9]
    9320:	mov	r2, r3
    9324:	bl	0 <flatcc_builder_table_add>
    9328:	cmp	r0, #0
    932c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9330:	ldr	r3, [sp, #344]	; 0x158
    9334:	str	r3, [r0]
    9338:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    933c:	add	r3, pc, #668	; 0x29c
    9340:	ldrd	r2, [r3]
    9344:	ldrd	r0, [sp, #16]
    9348:	cmp	r1, r3
    934c:	cmpeq	r0, r2
    9350:	beq	9ea0 <MyGame_Example_Monster_parse_json_table+0x1100>
    9354:	add	r3, pc, #652	; 0x28c
    9358:	ldrd	r2, [r3]
    935c:	ldrd	r0, [sp, #16]
    9360:	cmp	r1, r3
    9364:	cmpeq	r0, r2
    9368:	bhi	a17c <MyGame_Example_Monster_parse_json_table+0x13dc>
    936c:	add	r3, pc, #636	; 0x27c
    9370:	ldrd	r2, [r3]
    9374:	cmp	r1, r3
    9378:	cmpeq	r0, r2
    937c:	bne	ab80 <MyGame_Example_Monster_parse_json_table+0x1de0>
    9380:	add	r4, sl, #8
    9384:	mov	r1, r8
    9388:	mov	r0, r4
    938c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9390:	add	r3, pc, #608	; 0x260
    9394:	ldrd	r2, [r3]
    9398:	cmp	r1, r3
    939c:	cmpeq	r0, r2
    93a0:	bne	bc3c <MyGame_Example_Monster_parse_json_table+0x2e9c>
    93a4:	mov	r3, #0
    93a8:	add	r4, sl, #16
    93ac:	mov	r1, r8
    93b0:	mov	r0, r4
    93b4:	str	r3, [sp, #240]	; 0xf0
    93b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    93bc:	str	r1, [sp, #244]	; 0xf4
    93c0:	add	r3, pc, #568	; 0x238
    93c4:	ldrd	r2, [r3]
    93c8:	ldrd	r0, [sp, #240]	; 0xf0
    93cc:	cmp	r1, r3
    93d0:	cmpeq	r0, r2
    93d4:	bne	bd14 <MyGame_Example_Monster_parse_json_table+0x2f74>
    93d8:	sub	r3, r8, r4
    93dc:	cmp	r3, #4
    93e0:	ble	cfcc <MyGame_Example_Monster_parse_json_table+0x422c>
    93e4:	mov	r3, #4
    93e8:	mov	r2, r8
    93ec:	mov	r1, r4
    93f0:	mov	r0, r9
    93f4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    93f8:	cmp	r4, r0
    93fc:	mov	sl, r0
    9400:	beq	cfc8 <MyGame_Example_Monster_parse_json_table+0x4228>
    9404:	cmp	r8, r0
    9408:	ldr	r0, [r9]
    940c:	beq	941c <MyGame_Example_Monster_parse_json_table+0x67c>
    9410:	ldrb	r3, [sl]
    9414:	cmp	r3, #91	; 0x5b
    9418:	beq	d258 <MyGame_Example_Monster_parse_json_table+0x44b8>
    941c:	mov	r3, #0
    9420:	mov	r2, r3
    9424:	mov	r1, r3
    9428:	bl	0 <flatcc_builder_start_buffer>
    942c:	cmp	r0, #0
    9430:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9434:	mov	r1, sl
    9438:	add	r3, sp, #324	; 0x144
    943c:	mov	r2, r8
    9440:	mov	r0, r9
    9444:	bl	8da0 <MyGame_Example_Monster_parse_json_table>
    9448:	ldr	r1, [sp, #324]	; 0x144
    944c:	mov	sl, r0
    9450:	cmp	r1, #0
    9454:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9458:	ldr	r0, [r9]
    945c:	bl	0 <flatcc_builder_end_buffer>
    9460:	str	r0, [sp, #324]	; 0x144
    9464:	cmp	r0, #0
    9468:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    946c:	mov	r1, #13
    9470:	ldr	r0, [r9]
    9474:	bl	0 <flatcc_builder_table_add_offset>
    9478:	cmp	r0, #0
    947c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9480:	ldr	r3, [sp, #324]	; 0x144
    9484:	str	r3, [r0]
    9488:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    948c:	ldrd	r4, [sp, #16]
    9490:	movw	r3, #65535	; 0xffff
    9494:	movt	r3, #26735	; 0x686f
    9498:	mvn	r2, #0
    949c:	cmp	r5, r3
    94a0:	cmpeq	r4, r2
    94a4:	bhi	9da0 <MyGame_Example_Monster_parse_json_table+0x1000>
    94a8:	mov	r1, #0
    94ac:	add	r3, pc, #340	; 0x154
    94b0:	ldrd	r2, [r3]
    94b4:	str	r1, [sp, #96]	; 0x60
    94b8:	str	r5, [sp, #100]	; 0x64
    94bc:	ldrd	r0, [sp, #96]	; 0x60
    94c0:	cmp	r1, r3
    94c4:	cmpeq	r0, r2
    94c8:	bne	a4bc <MyGame_Example_Monster_parse_json_table+0x171c>
    94cc:	sub	r3, r8, sl
    94d0:	cmp	r3, #4
    94d4:	ble	b87c <MyGame_Example_Monster_parse_json_table+0x2adc>
    94d8:	mov	r3, #4
    94dc:	mov	r2, r8
    94e0:	mov	r1, sl
    94e4:	mov	r0, r9
    94e8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    94ec:	cmp	r0, sl
    94f0:	mov	r4, r0
    94f4:	beq	b87c <MyGame_Example_Monster_parse_json_table+0x2adc>
    94f8:	mov	r2, #1
    94fc:	mvn	r3, #0
    9500:	ldr	r0, [r9]
    9504:	mov	r1, r2
    9508:	bl	0 <flatcc_builder_start_vector>
    950c:	subs	r5, r0, #0
    9510:	bne	cfe4 <MyGame_Example_Monster_parse_json_table+0x4244>
    9514:	add	r3, sp, #320	; 0x140
    9518:	mov	r1, r4
    951c:	mov	r2, r8
    9520:	mov	r0, r9
    9524:	bl	ed0 <flatcc_json_parser_array_start>
    9528:	ldr	r3, [sp, #320]	; 0x140
    952c:	mov	sl, r0
    9530:	cmp	r3, #0
    9534:	beq	c614 <MyGame_Example_Monster_parse_json_table+0x3874>
    9538:	ldr	fp, [pc, #208]	; 9610 <MyGame_Example_Monster_parse_json_table+0x870>
    953c:	b	956c <MyGame_Example_Monster_parse_json_table+0x7cc>
    9540:	ldrb	ip, [sp, #344]	; 0x158
    9544:	mov	r1, r0
    9548:	add	r3, sp, #320	; 0x140
    954c:	mov	r2, r8
    9550:	mov	r0, r9
    9554:	strb	ip, [r4]
    9558:	bl	3144 <flatcc_json_parser_array_end>
    955c:	ldr	r3, [sp, #320]	; 0x140
    9560:	mov	sl, r0
    9564:	cmp	r3, #0
    9568:	beq	c614 <MyGame_Example_Monster_parse_json_table+0x3874>
    956c:	mov	r1, #1
    9570:	ldr	r0, [r9]
    9574:	strb	r5, [sp, #344]	; 0x158
    9578:	bl	0 <flatcc_builder_extend_vector>
    957c:	subs	r4, r0, #0
    9580:	mov	r1, sl
    9584:	add	r3, sp, #344	; 0x158
    9588:	mov	r2, r8
    958c:	mov	r0, r9
    9590:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9594:	bl	aa4 <flatcc_json_parser_uint8>
    9598:	cmp	r0, sl
    959c:	bne	9540 <MyGame_Example_Monster_parse_json_table+0x7a0>
    95a0:	add	r1, sp, #344	; 0x158
    95a4:	mov	r3, fp
    95a8:	mov	r2, r8
    95ac:	mov	r0, r9
    95b0:	str	r1, [sp]
    95b4:	mov	r1, sl
    95b8:	bl	180c <flatcc_json_parser_symbolic_uint8>
    95bc:	cmp	r8, r0
    95c0:	cmpne	r0, sl
    95c4:	bne	9540 <MyGame_Example_Monster_parse_json_table+0x7a0>
    95c8:	b	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    95cc:	nop	{0}
    95d0:	.word	0x68617367
    95d4:	.word	0x74657374
    95d8:	.word	0x66330000
    95dc:	.word	0x74657374
    95e0:	.word	0x68617368
    95e4:	.word	0x74657374
    95e8:	.word	0x6f725f6e
    95ec:	.word	0x76656374
    95f0:	.word	0x6e657374
    95f4:	.word	0x74657374
    95f8:	.word	0x61746275
    95fc:	.word	0x6564666c
    9600:	.word	0x00000000
    9604:	.word	0x66666572
    9608:	.word	0x00000000
    960c:	.word	0x666c6578
    9610:	.word	0x00000124
    9614:	ldrd	r4, [sp, #16]
    9618:	sub	fp, r8, sl
    961c:	add	r3, pc, #892	; 0x37c
    9620:	ldrd	r2, [r3]
    9624:	and	r1, r4, #-16777216	; 0xff000000
    9628:	str	r1, [sp, #48]	; 0x30
    962c:	str	r5, [sp, #52]	; 0x34
    9630:	ldrd	r0, [sp, #48]	; 0x30
    9634:	cmp	r1, r3
    9638:	cmpeq	r0, r2
    963c:	beq	9f6c <MyGame_Example_Monster_parse_json_table+0x11cc>
    9640:	cmp	fp, #4
    9644:	ble	b20c <MyGame_Example_Monster_parse_json_table+0x246c>
    9648:	mov	r3, #4
    964c:	mov	r2, r8
    9650:	mov	r1, sl
    9654:	mov	r0, r9
    9658:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    965c:	cmp	r0, sl
    9660:	beq	b20c <MyGame_Example_Monster_parse_json_table+0x246c>
    9664:	ldr	ip, [sp, #328]	; 0x148
    9668:	mov	lr, #8
    966c:	movw	r3, #0
    9670:	movt	r3, #0
    9674:	mov	r1, r0
    9678:	mov	r2, r8
    967c:	mov	r0, r9
    9680:	str	lr, [sp]
    9684:	str	ip, [sp, #4]
    9688:	str	r3, [sp, #8]
    968c:	mov	r3, #0
    9690:	bl	0 <flatcc_json_parser_union>
    9694:	mov	sl, r0
    9698:	mov	r1, sl
    969c:	add	r3, sp, #320	; 0x140
    96a0:	mov	r2, r8
    96a4:	mov	r0, r9
    96a8:	bl	2f80 <flatcc_json_parser_object_end>
    96ac:	ldr	r3, [sp, #320]	; 0x140
    96b0:	mov	sl, r0
    96b4:	cmp	r3, #0
    96b8:	bne	8e78 <MyGame_Example_Monster_parse_json_table+0xd8>
    96bc:	mov	fp, r9
    96c0:	mov	r9, r8
    96c4:	ldr	r3, [fp, #24]
    96c8:	cmp	r3, #0
    96cc:	bne	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    96d0:	mov	r1, #3
    96d4:	ldr	r0, [fp]
    96d8:	bl	0 <flatcc_builder_check_required_field>
    96dc:	cmp	r0, #0
    96e0:	mov	r1, sl
    96e4:	beq	c888 <MyGame_Example_Monster_parse_json_table+0x3ae8>
    96e8:	mov	r2, r9
    96ec:	mov	r0, fp
    96f0:	ldr	r3, [sp, #328]	; 0x148
    96f4:	bl	0 <flatcc_json_parser_finalize_unions>
    96f8:	mov	r4, r0
    96fc:	ldr	r0, [fp]
    9700:	bl	0 <flatcc_builder_end_table>
    9704:	ldr	r3, [sp, #68]	; 0x44
    9708:	cmp	r0, #0
    970c:	str	r0, [r3]
    9710:	bne	8e04 <MyGame_Example_Monster_parse_json_table+0x64>
    9714:	mov	sl, r4
    9718:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    971c:	add	r4, sl, #8
    9720:	mov	r1, r8
    9724:	mov	r0, r4
    9728:	bl	0 <flatcc_json_parser_symbol_part_ext>
    972c:	add	r3, pc, #628	; 0x274
    9730:	ldrd	r2, [r3]
    9734:	cmp	r1, r3
    9738:	cmpeq	r0, r2
    973c:	bhi	a02c <MyGame_Example_Monster_parse_json_table+0x128c>
    9740:	add	r3, pc, #616	; 0x268
    9744:	ldrd	r2, [r3]
    9748:	cmp	r1, r3
    974c:	cmpeq	r0, r2
    9750:	bne	a4ec <MyGame_Example_Monster_parse_json_table+0x174c>
    9754:	sub	r3, r8, r4
    9758:	cmp	r3, #8
    975c:	ble	b898 <MyGame_Example_Monster_parse_json_table+0x2af8>
    9760:	mov	r3, #8
    9764:	mov	r2, r8
    9768:	mov	r1, r4
    976c:	mov	r0, r9
    9770:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9774:	cmp	r4, r0
    9778:	mov	sl, r0
    977c:	beq	b894 <MyGame_Example_Monster_parse_json_table+0x2af4>
    9780:	mov	r2, #1
    9784:	mvn	r3, #0
    9788:	ldr	r0, [r9]
    978c:	mov	r1, r2
    9790:	bl	0 <flatcc_builder_start_vector>
    9794:	subs	r4, r0, #0
    9798:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    979c:	mov	r1, sl
    97a0:	add	r3, sp, #320	; 0x140
    97a4:	mov	r2, r8
    97a8:	mov	r0, r9
    97ac:	bl	ed0 <flatcc_json_parser_array_start>
    97b0:	ldr	r3, [sp, #320]	; 0x140
    97b4:	mov	sl, r0
    97b8:	cmp	r3, #0
    97bc:	beq	c700 <MyGame_Example_Monster_parse_json_table+0x3960>
    97c0:	movw	r3, #0
    97c4:	movt	r3, #0
    97c8:	strd	r6, [sp, #16]
    97cc:	mov	fp, r4
    97d0:	mov	r7, r3
    97d4:	b	9804 <MyGame_Example_Monster_parse_json_table+0xa64>
    97d8:	ldrb	ip, [sp, #340]	; 0x154
    97dc:	add	r3, sp, #320	; 0x140
    97e0:	mov	r1, r4
    97e4:	mov	r2, r8
    97e8:	mov	r0, r9
    97ec:	strb	ip, [r5]
    97f0:	bl	3144 <flatcc_json_parser_array_end>
    97f4:	ldr	r3, [sp, #320]	; 0x140
    97f8:	mov	sl, r0
    97fc:	cmp	r3, #0
    9800:	beq	c6fc <MyGame_Example_Monster_parse_json_table+0x395c>
    9804:	mov	r1, #1
    9808:	ldr	r0, [r9]
    980c:	strb	fp, [sp, #340]	; 0x154
    9810:	bl	0 <flatcc_builder_extend_vector>
    9814:	subs	r5, r0, #0
    9818:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    981c:	sub	r3, r8, sl
    9820:	cmp	r3, #3
    9824:	ble	985c <MyGame_Example_Monster_parse_json_table+0xabc>
    9828:	ldrb	r2, [sl]
    982c:	cmp	r2, #116	; 0x74
    9830:	beq	c288 <MyGame_Example_Monster_parse_json_table+0x34e8>
    9834:	cmp	r3, #4
    9838:	beq	985c <MyGame_Example_Monster_parse_json_table+0xabc>
    983c:	mov	r2, #5
    9840:	mov	r1, r7
    9844:	mov	r0, sl
    9848:	bl	0 <memcmp>
    984c:	cmp	r0, #0
    9850:	addeq	r4, sl, #5
    9854:	strbeq	r0, [sp, #340]	; 0x154
    9858:	beq	9884 <MyGame_Example_Monster_parse_json_table+0xae4>
    985c:	add	r3, sp, #344	; 0x158
    9860:	mov	r2, r8
    9864:	mov	r1, sl
    9868:	mov	r0, r9
    986c:	bl	aa4 <flatcc_json_parser_uint8>
    9870:	ldrb	r3, [sp, #344]	; 0x158
    9874:	mov	r4, r0
    9878:	adds	r3, r3, #0
    987c:	movne	r3, #1
    9880:	strb	r3, [sp, #340]	; 0x154
    9884:	cmp	sl, r4
    9888:	bne	97d8 <MyGame_Example_Monster_parse_json_table+0xa38>
    988c:	add	r0, sp, #340	; 0x154
    9890:	ldr	r3, [pc, #304]	; 99c8 <MyGame_Example_Monster_parse_json_table+0xc28>
    9894:	mov	r2, r8
    9898:	mov	r1, r4
    989c:	str	r0, [sp]
    98a0:	mov	r0, r9
    98a4:	bl	13a8 <flatcc_json_parser_symbolic_bool>
    98a8:	cmp	r8, r0
    98ac:	cmpne	r0, r4
    98b0:	mov	sl, r0
    98b4:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    98b8:	mov	r4, r0
    98bc:	b	97d8 <MyGame_Example_Monster_parse_json_table+0xa38>
    98c0:	add	r3, pc, #240	; 0xf0
    98c4:	ldrd	r2, [r3]
    98c8:	ldrd	r0, [sp, #16]
    98cc:	cmp	r1, r3
    98d0:	cmpeq	r0, r2
    98d4:	bhi	a2f8 <MyGame_Example_Monster_parse_json_table+0x1558>
    98d8:	add	r3, pc, #224	; 0xe0
    98dc:	ldrd	r2, [r3]
    98e0:	cmp	r1, r3
    98e4:	cmpeq	r0, r2
    98e8:	bne	abb0 <MyGame_Example_Monster_parse_json_table+0x1e10>
    98ec:	add	r4, sl, #8
    98f0:	mov	r1, r8
    98f4:	mov	r0, r4
    98f8:	mov	r5, #0
    98fc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9900:	and	r3, r1, #-16777216	; 0xff000000
    9904:	str	r5, [sp, #192]	; 0xc0
    9908:	str	r3, [sp, #196]	; 0xc4
    990c:	ldrd	r2, [sp, #192]	; 0xc0
    9910:	cmp	r3, #2030043136	; 0x79000000
    9914:	cmpeq	r2, #0
    9918:	bne	bc24 <MyGame_Example_Monster_parse_json_table+0x2e84>
    991c:	sub	r3, r8, r4
    9920:	cmp	r3, #1
    9924:	ble	bf44 <MyGame_Example_Monster_parse_json_table+0x31a4>
    9928:	mov	r3, #1
    992c:	mov	r2, r8
    9930:	mov	r1, r4
    9934:	mov	r0, r9
    9938:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    993c:	cmp	r4, r0
    9940:	mov	sl, r0
    9944:	beq	bf40 <MyGame_Example_Monster_parse_json_table+0x31a0>
    9948:	mov	r1, #3
    994c:	ldr	r0, [r9]
    9950:	str	r5, [sp, #324]	; 0x144
    9954:	bl	0 <flatcc_builder_start_table>
    9958:	cmp	r0, r5
    995c:	bne	c5d0 <MyGame_Example_Monster_parse_json_table+0x3830>
    9960:	mov	r1, sl
    9964:	add	r3, sp, #332	; 0x14c
    9968:	mov	r2, r8
    996c:	mov	r0, r9
    9970:	bl	dfc <flatcc_json_parser_object_start>
    9974:	ldr	r3, [sp, #332]	; 0x14c
    9978:	mov	sl, r0
    997c:	cmp	r3, r5
    9980:	beq	cb4c <MyGame_Example_Monster_parse_json_table+0x3dac>
    9984:	mov	fp, r5
    9988:	add	r3, sp, #272	; 0x110
    998c:	strd	r6, [sp, #16]
    9990:	movt	fp, #65535	; 0xffff
    9994:	ldrd	r4, [r3]
    9998:	mov	r6, fp
    999c:	b	9b10 <MyGame_Example_Monster_parse_json_table+0xd70>
    99a0:	.word	0x34000000
    99a4:	.word	0x74657374
    99a8:	.word	0x7472696d
    99ac:	.word	0x796f6673
    99b0:	.word	0x6f6f6c73
    99b4:	.word	0x796f6662
    99b8:	.word	0x65ffffff
    99bc:	.word	0x74657374
    99c0:	.word	0x656d7074
    99c4:	.word	0x74657374
    99c8:	.word	0x000001a4
    99cc:	and	r3, r0, #-16777216	; 0xff000000
    99d0:	str	r3, [sp, #112]	; 0x70
    99d4:	str	r1, [sp, #116]	; 0x74
    99d8:	add	r1, pc, #904	; 0x388
    99dc:	ldrd	r0, [r1]
    99e0:	ldrd	r2, [sp, #112]	; 0x70
    99e4:	cmp	r3, r1
    99e8:	cmpeq	r2, r0
    99ec:	bne	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    99f0:	sub	r3, r8, sl
    99f4:	cmp	r3, #5
    99f8:	ble	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    99fc:	mov	r3, #5
    9a00:	mov	r2, r8
    9a04:	mov	r1, sl
    9a08:	mov	r0, r9
    9a0c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9a10:	cmp	r0, sl
    9a14:	mov	fp, r0
    9a18:	beq	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    9a1c:	add	r2, sp, #344	; 0x158
    9a20:	cmp	r8, r0
    9a24:	mov	r1, #0
    9a28:	mov	r0, #0
    9a2c:	mov	r3, #0
    9a30:	strd	r0, [r2]
    9a34:	add	r2, sp, #316	; 0x13c
    9a38:	add	r2, r2, #2
    9a3c:	str	r3, [sp, #340]	; 0x154
    9a40:	strh	r3, [r2]
    9a44:	beq	c5b4 <MyGame_Example_Monster_parse_json_table+0x3814>
    9a48:	add	r0, sp, #344	; 0x158
    9a4c:	add	r3, sp, #340	; 0x154
    9a50:	mov	r2, r8
    9a54:	mov	r1, fp
    9a58:	str	r0, [sp]
    9a5c:	mov	r0, r9
    9a60:	bl	0 <flatcc_json_parser_integer>
    9a64:	cmp	fp, r0
    9a68:	mov	r7, r0
    9a6c:	bne	c648 <MyGame_Example_Monster_parse_json_table+0x38a8>
    9a70:	add	ip, sp, #316	; 0x13c
    9a74:	ldr	r3, [pc, #800]	; 9d9c <MyGame_Example_Monster_parse_json_table+0xffc>
    9a78:	mov	r2, r8
    9a7c:	add	ip, ip, #2
    9a80:	mov	r1, r7
    9a84:	mov	r0, r9
    9a88:	str	ip, [sp]
    9a8c:	bl	2174 <flatcc_json_parser_symbolic_uint16>
    9a90:	cmp	r8, r0
    9a94:	cmpne	r0, r7
    9a98:	mov	sl, r0
    9a9c:	beq	cff0 <MyGame_Example_Monster_parse_json_table+0x4250>
    9aa0:	add	r3, sp, #316	; 0x13c
    9aa4:	add	r3, r3, #2
    9aa8:	ldrh	r2, [r3]
    9aac:	cmp	r2, #0
    9ab0:	bne	9ac0 <MyGame_Example_Monster_parse_json_table+0xd20>
    9ab4:	ldr	r3, [r9, #8]
    9ab8:	tst	r3, #2
    9abc:	beq	9aec <MyGame_Example_Monster_parse_json_table+0xd4c>
    9ac0:	mov	r3, #2
    9ac4:	ldr	r0, [r9]
    9ac8:	mov	r2, r3
    9acc:	mov	r1, r3
    9ad0:	bl	0 <flatcc_builder_table_add>
    9ad4:	cmp	r0, #0
    9ad8:	beq	cff0 <MyGame_Example_Monster_parse_json_table+0x4250>
    9adc:	add	r3, sp, #316	; 0x13c
    9ae0:	add	r3, r3, #2
    9ae4:	ldrh	r3, [r3]
    9ae8:	strh	r3, [r0]
    9aec:	mov	r1, sl
    9af0:	add	r3, sp, #332	; 0x14c
    9af4:	mov	r2, r8
    9af8:	mov	r0, r9
    9afc:	bl	2f80 <flatcc_json_parser_object_end>
    9b00:	ldr	r3, [sp, #332]	; 0x14c
    9b04:	mov	sl, r0
    9b08:	cmp	r3, #0
    9b0c:	beq	cb40 <MyGame_Example_Monster_parse_json_table+0x3da0>
    9b10:	cmp	r8, sl
    9b14:	beq	9b40 <MyGame_Example_Monster_parse_json_table+0xda0>
    9b18:	ldrb	r3, [sl]
    9b1c:	cmp	r3, #34	; 0x22
    9b20:	moveq	r3, #0
    9b24:	addeq	sl, sl, #1
    9b28:	streq	r3, [r9, #12]
    9b2c:	beq	9b40 <MyGame_Example_Monster_parse_json_table+0xda0>
    9b30:	cmp	r3, #46	; 0x2e
    9b34:	movne	r3, #1
    9b38:	strne	r3, [r9, #12]
    9b3c:	beq	c390 <MyGame_Example_Monster_parse_json_table+0x35f0>
    9b40:	mov	r1, r8
    9b44:	mov	r0, sl
    9b48:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9b4c:	movw	r3, #65535	; 0xffff
    9b50:	movt	r3, #26979	; 0x6963
    9b54:	mvn	r2, #0
    9b58:	cmp	r1, r3
    9b5c:	cmpeq	r0, r2
    9b60:	bls	99cc <MyGame_Example_Monster_parse_json_table+0xc2c>
    9b64:	add	r3, pc, #516	; 0x204
    9b68:	ldrd	r2, [r3]
    9b6c:	bic	r5, r1, #255	; 0xff
    9b70:	mov	fp, #0
    9b74:	mov	r4, fp
    9b78:	cmp	r5, r3
    9b7c:	cmpeq	fp, r2
    9b80:	beq	c1e8 <MyGame_Example_Monster_parse_json_table+0x3448>
    9b84:	and	r3, r1, r6
    9b88:	str	fp, [sp, #160]	; 0xa0
    9b8c:	mov	r1, #0
    9b90:	movt	r1, #26980	; 0x6964
    9b94:	mov	r0, #0
    9b98:	str	r3, [sp, #164]	; 0xa4
    9b9c:	ldrd	r2, [sp, #160]	; 0xa0
    9ba0:	cmp	r3, r1
    9ba4:	cmpeq	r2, r0
    9ba8:	bne	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    9bac:	sub	r3, r8, sl
    9bb0:	cmp	r3, #2
    9bb4:	ble	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    9bb8:	mov	r1, sl
    9bbc:	mov	r3, #2
    9bc0:	mov	r2, r8
    9bc4:	mov	r0, r9
    9bc8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9bcc:	cmp	r0, sl
    9bd0:	mov	r1, r0
    9bd4:	beq	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    9bd8:	add	r3, sp, #336	; 0x150
    9bdc:	mov	r2, r8
    9be0:	mov	r0, r9
    9be4:	bl	0 <flatcc_json_parser_build_string>
    9be8:	ldr	r3, [sp, #336]	; 0x150
    9bec:	mov	sl, r0
    9bf0:	cmp	r3, #0
    9bf4:	beq	cff0 <MyGame_Example_Monster_parse_json_table+0x4250>
    9bf8:	mov	r1, fp
    9bfc:	ldr	r0, [r9]
    9c00:	bl	0 <flatcc_builder_table_add_offset>
    9c04:	cmp	r0, #0
    9c08:	beq	cff0 <MyGame_Example_Monster_parse_json_table+0x4250>
    9c0c:	ldr	r3, [sp, #336]	; 0x150
    9c10:	str	r3, [r0]
    9c14:	b	9aec <MyGame_Example_Monster_parse_json_table+0xd4c>
    9c18:	add	r3, pc, #344	; 0x158
    9c1c:	ldrd	r2, [r3]
    9c20:	ldrd	r0, [sp, #16]
    9c24:	cmp	r1, r3
    9c28:	cmpeq	r0, r2
    9c2c:	beq	b754 <MyGame_Example_Monster_parse_json_table+0x29b4>
    9c30:	ldr	r1, [sp, #20]
    9c34:	mov	r4, #0
    9c38:	str	r4, [sp, #152]	; 0x98
    9c3c:	add	r3, pc, #316	; 0x13c
    9c40:	ldrd	r2, [r3]
    9c44:	bic	r1, r1, #255	; 0xff
    9c48:	str	r1, [sp, #156]	; 0x9c
    9c4c:	ldrd	r0, [sp, #152]	; 0x98
    9c50:	cmp	r1, r3
    9c54:	cmpeq	r0, r2
    9c58:	bne	ab68 <MyGame_Example_Monster_parse_json_table+0x1dc8>
    9c5c:	sub	r3, r8, sl
    9c60:	cmp	r3, #3
    9c64:	ble	c418 <MyGame_Example_Monster_parse_json_table+0x3678>
    9c68:	mov	r3, #3
    9c6c:	mov	r2, r8
    9c70:	mov	r1, sl
    9c74:	mov	r0, r9
    9c78:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9c7c:	cmp	r0, sl
    9c80:	mov	r5, r0
    9c84:	beq	c418 <MyGame_Example_Monster_parse_json_table+0x3678>
    9c88:	mov	r3, #16
    9c8c:	mov	r1, r4
    9c90:	ldr	r0, [r9]
    9c94:	mov	r2, #32
    9c98:	bl	0 <flatcc_builder_table_add>
    9c9c:	subs	r3, r0, #0
    9ca0:	str	r3, [sp, #16]
    9ca4:	beq	d1b0 <MyGame_Example_Monster_parse_json_table+0x4410>
    9ca8:	add	r3, sp, #336	; 0x150
    9cac:	mov	r1, r5
    9cb0:	vldr	s16, [pc, #224]	; 9d98 <MyGame_Example_Monster_parse_json_table+0xff8>
    9cb4:	mov	r2, r8
    9cb8:	mov	r0, r9
    9cbc:	vldr	d9, [pc, #196]	; 9d88 <MyGame_Example_Monster_parse_json_table+0xfe8>
    9cc0:	bl	dfc <flatcc_json_parser_object_start>
    9cc4:	ldr	r3, [sp, #336]	; 0x150
    9cc8:	mov	fp, r0
    9ccc:	cmp	r3, #0
    9cd0:	beq	d3f4 <MyGame_Example_Monster_parse_json_table+0x4654>
    9cd4:	add	r5, pc, #180	; 0xb4
    9cd8:	ldrd	r4, [r5]
    9cdc:	cmp	r8, fp
    9ce0:	beq	9d0c <MyGame_Example_Monster_parse_json_table+0xf6c>
    9ce4:	ldrb	r3, [fp]
    9ce8:	cmp	r3, #34	; 0x22
    9cec:	moveq	r3, #0
    9cf0:	addeq	fp, fp, #1
    9cf4:	streq	r3, [r9, #12]
    9cf8:	beq	9d0c <MyGame_Example_Monster_parse_json_table+0xf6c>
    9cfc:	cmp	r3, #46	; 0x2e
    9d00:	movne	r3, #1
    9d04:	strne	r3, [r9, #12]
    9d08:	beq	b1cc <MyGame_Example_Monster_parse_json_table+0x242c>
    9d0c:	sub	ip, r8, fp
    9d10:	cmp	ip, #8
    9d14:	bhi	a844 <MyGame_Example_Monster_parse_json_table+0x1aa4>
    9d18:	sub	r3, ip, #1
    9d1c:	cmp	r3, #7
    9d20:	ldrls	pc, [pc, r3, lsl #2]
    9d24:	b	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    9d28:	.word	0x0000aa70
    9d2c:	.word	0x0000aa4c
    9d30:	.word	0x0000aa40
    9d34:	.word	0x0000aa64
    9d38:	.word	0x0000aa58
    9d3c:	.word	0x0000aa04
    9d40:	.word	0x0000a9f8
    9d44:	.word	0x0000a844
    9d48:	mov	r1, sl
    9d4c:	mov	r3, #5
    9d50:	mov	r2, r8
    9d54:	mov	r0, r9
    9d58:	bl	0 <flatcc_json_parser_set_error>
    9d5c:	mov	sl, r0
    9d60:	b	8ea8 <MyGame_Example_Monster_parse_json_table+0x108>
    9d64:	nop	{0}
    9d68:	.word	0x74000000
    9d6c:	.word	0x636f756e
    9d70:	.word	0x00000000
    9d74:	.word	0x76616c00
    9d78:	.word	0x6e745f6e
    9d7c:	.word	0x70617265
    9d80:	.word	0x00000000
    9d84:	.word	0x706f7300
	...
    9d90:	.word	0x32ffffff
    9d94:	.word	0x74657374
    9d98:	.word	0x00000000
    9d9c:	.word	0x000001d4
    9da0:	add	r3, pc, #912	; 0x390
    9da4:	ldrd	r2, [r3]
    9da8:	ldrd	r0, [sp, #16]
    9dac:	cmp	r1, r3
    9db0:	cmpeq	r0, r2
    9db4:	bhi	a3c8 <MyGame_Example_Monster_parse_json_table+0x1628>
    9db8:	lsr	r3, r1, #16
    9dbc:	mov	r4, #0
    9dc0:	mov	r2, #0
    9dc4:	str	r4, [sp, #128]	; 0x80
    9dc8:	str	r3, [sp, #132]	; 0x84
    9dcc:	mov	r3, #0
    9dd0:	movt	r3, #26736	; 0x6870
    9dd4:	ldr	r1, [sp, #132]	; 0x84
    9dd8:	lsl	r1, r1, #16
    9ddc:	str	r1, [sp, #132]	; 0x84
    9de0:	ldrd	r0, [sp, #128]	; 0x80
    9de4:	cmp	r1, r3
    9de8:	cmpeq	r0, r2
    9dec:	bne	b8b0 <MyGame_Example_Monster_parse_json_table+0x2b10>
    9df0:	sub	r3, r8, sl
    9df4:	cmp	r3, #2
    9df8:	ble	c688 <MyGame_Example_Monster_parse_json_table+0x38e8>
    9dfc:	mov	r3, #2
    9e00:	mov	r2, r8
    9e04:	mov	r1, sl
    9e08:	mov	r0, r9
    9e0c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9e10:	cmp	r0, sl
    9e14:	mov	r5, r0
    9e18:	beq	c688 <MyGame_Example_Monster_parse_json_table+0x38e8>
    9e1c:	add	r3, sp, #344	; 0x158
    9e20:	mov	r1, r0
    9e24:	mov	r2, r8
    9e28:	mov	r0, r9
    9e2c:	strh	r4, [r3]
    9e30:	bl	d18 <flatcc_json_parser_int16.constprop.25>
    9e34:	cmp	r0, r5
    9e38:	mov	sl, r0
    9e3c:	beq	c00c <MyGame_Example_Monster_parse_json_table+0x326c>
    9e40:	add	r3, sp, #344	; 0x158
    9e44:	ldrsh	r3, [r3]
    9e48:	cmp	r3, #100	; 0x64
    9e4c:	bne	9e5c <MyGame_Example_Monster_parse_json_table+0x10bc>
    9e50:	ldr	r3, [r9, #8]
    9e54:	tst	r3, #2
    9e58:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9e5c:	mov	r3, #2
    9e60:	ldr	r0, [r9]
    9e64:	mov	r2, r3
    9e68:	mov	r1, r3
    9e6c:	bl	0 <flatcc_builder_table_add>
    9e70:	cmp	r0, #0
    9e74:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    9e78:	add	r3, sp, #344	; 0x158
    9e7c:	ldrsh	r3, [r3]
    9e80:	strh	r3, [r0]
    9e84:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9e88:	mov	r1, sl
    9e8c:	mov	r2, r8
    9e90:	mov	r0, r9
    9e94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e98:	mov	sl, r0
    9e9c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9ea0:	add	sl, sl, #8
    9ea4:	mov	r1, r8
    9ea8:	mov	r0, sl
    9eac:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9eb0:	add	r3, pc, #648	; 0x288
    9eb4:	ldrd	r2, [r3]
    9eb8:	cmp	r1, r3
    9ebc:	cmpeq	r0, r2
    9ec0:	bhi	a774 <MyGame_Example_Monster_parse_json_table+0x19d4>
    9ec4:	add	r3, pc, #636	; 0x27c
    9ec8:	ldrd	r2, [r3]
    9ecc:	cmp	r1, r3
    9ed0:	cmpeq	r0, r2
    9ed4:	bne	bbf4 <MyGame_Example_Monster_parse_json_table+0x2e54>
    9ed8:	sub	r3, r8, sl
    9edc:	cmp	r3, #8
    9ee0:	ble	be78 <MyGame_Example_Monster_parse_json_table+0x30d8>
    9ee4:	mov	r3, #8
    9ee8:	mov	r2, r8
    9eec:	mov	r1, sl
    9ef0:	mov	r0, r9
    9ef4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9ef8:	cmp	sl, r0
    9efc:	mov	r4, r0
    9f00:	beq	be78 <MyGame_Example_Monster_parse_json_table+0x30d8>
    9f04:	mov	ip, #0
    9f08:	mov	r1, r0
    9f0c:	add	r3, sp, #344	; 0x158
    9f10:	mov	r2, r8
    9f14:	mov	r0, r9
    9f18:	str	ip, [sp, #344]	; 0x158
    9f1c:	bl	c34 <flatcc_json_parser_int32.constprop.26>
    9f20:	cmp	r0, r4
    9f24:	mov	sl, r0
    9f28:	beq	cf60 <MyGame_Example_Monster_parse_json_table+0x41c0>
    9f2c:	ldr	r3, [sp, #344]	; 0x158
    9f30:	cmp	r3, #0
    9f34:	bne	9f44 <MyGame_Example_Monster_parse_json_table+0x11a4>
    9f38:	ldr	r3, [r9, #8]
    9f3c:	tst	r3, #2
    9f40:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9f44:	mov	r3, #4
    9f48:	mov	r1, #16
    9f4c:	ldr	r0, [r9]
    9f50:	mov	r2, r3
    9f54:	bl	0 <flatcc_builder_table_add>
    9f58:	cmp	r0, #0
    9f5c:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    9f60:	ldr	r3, [sp, #344]	; 0x158
    9f64:	str	r3, [r0]
    9f68:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    9f6c:	cmp	fp, #5
    9f70:	ble	abc8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    9f74:	mov	r3, #5
    9f78:	mov	r2, r8
    9f7c:	mov	r1, sl
    9f80:	mov	r0, r9
    9f84:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    9f88:	cmp	r0, sl
    9f8c:	mov	r4, r0
    9f90:	beq	abc8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    9f94:	mvn	r3, #-1073741824	; 0xc0000000
    9f98:	mov	r2, #2
    9f9c:	ldr	r0, [r9]
    9fa0:	mov	r1, #4
    9fa4:	bl	0 <flatcc_builder_start_vector>
    9fa8:	cmp	r0, #0
    9fac:	bne	cfe4 <MyGame_Example_Monster_parse_json_table+0x4244>
    9fb0:	add	r3, sp, #320	; 0x140
    9fb4:	mov	r1, r4
    9fb8:	mov	r2, r8
    9fbc:	mov	r0, r9
    9fc0:	bl	ed0 <flatcc_json_parser_array_start>
    9fc4:	ldr	r3, [sp, #320]	; 0x140
    9fc8:	mov	sl, r0
    9fcc:	cmp	r3, #0
    9fd0:	bne	a000 <MyGame_Example_Monster_parse_json_table+0x1260>
    9fd4:	b	c308 <MyGame_Example_Monster_parse_json_table+0x3568>
    9fd8:	bl	3308 <MyGame_Example_Test_parse_json_struct_inline>
    9fdc:	mov	r1, r0
    9fe0:	add	r3, sp, #320	; 0x140
    9fe4:	mov	r2, r8
    9fe8:	mov	r0, r9
    9fec:	bl	3144 <flatcc_json_parser_array_end>
    9ff0:	ldr	r3, [sp, #320]	; 0x140
    9ff4:	mov	sl, r0
    9ff8:	cmp	r3, #0
    9ffc:	beq	c308 <MyGame_Example_Monster_parse_json_table+0x3568>
    a000:	mov	r1, #1
    a004:	ldr	r0, [r9]
    a008:	bl	0 <flatcc_builder_extend_vector>
    a00c:	subs	r3, r0, #0
    a010:	mov	r1, sl
    a014:	mov	r2, r8
    a018:	mov	r0, r9
    a01c:	bne	9fd8 <MyGame_Example_Monster_parse_json_table+0x1238>
    a020:	mov	fp, r9
    a024:	mov	r9, r8
    a028:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    a02c:	add	r3, pc, #284	; 0x11c
    a030:	ldrd	r2, [r3]
    a034:	cmp	r1, r3
    a038:	cmpeq	r0, r2
    a03c:	beq	abf8 <MyGame_Example_Monster_parse_json_table+0x1e58>
    a040:	add	r3, pc, #272	; 0x110
    a044:	ldrd	r2, [r3]
    a048:	cmp	r1, r3
    a04c:	cmpeq	r0, r2
    a050:	bne	b910 <MyGame_Example_Monster_parse_json_table+0x2b70>
    a054:	mov	r3, #0
    a058:	add	r4, sl, #16
    a05c:	mov	r1, r8
    a060:	mov	r0, r4
    a064:	str	r3, [sp, #208]	; 0xd0
    a068:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a06c:	and	r3, r1, #-16777216	; 0xff000000
    a070:	str	r3, [sp, #212]	; 0xd4
    a074:	ldrd	r2, [sp, #208]	; 0xd0
    a078:	cmp	r3, #1929379840	; 0x73000000
    a07c:	cmpeq	r2, #0
    a080:	bne	bccc <MyGame_Example_Monster_parse_json_table+0x2f2c>
    a084:	sub	r3, r8, r4
    a088:	cmp	r3, #1
    a08c:	ble	cb88 <MyGame_Example_Monster_parse_json_table+0x3de8>
    a090:	mov	r3, #1
    a094:	mov	r2, r8
    a098:	mov	r1, r4
    a09c:	mov	r0, r9
    a0a0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a0a4:	cmp	r4, r0
    a0a8:	mov	sl, r0
    a0ac:	bne	cb90 <MyGame_Example_Monster_parse_json_table+0x3df0>
    a0b0:	mov	r1, sl
    a0b4:	mov	r2, r8
    a0b8:	mov	r0, r9
    a0bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a0c0:	mov	sl, r0
    a0c4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a0c8:	sub	r3, r8, sl
    a0cc:	cmp	r3, #5
    a0d0:	ble	abe0 <MyGame_Example_Monster_parse_json_table+0x1e40>
    a0d4:	mov	r1, sl
    a0d8:	mov	r3, #5
    a0dc:	mov	r2, r8
    a0e0:	mov	r0, r9
    a0e4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a0e8:	cmp	r0, sl
    a0ec:	mov	r1, r0
    a0f0:	beq	abe0 <MyGame_Example_Monster_parse_json_table+0x1e40>
    a0f4:	add	r3, sp, #324	; 0x144
    a0f8:	mov	r2, r8
    a0fc:	mov	r0, r9
    a100:	bl	8da0 <MyGame_Example_Monster_parse_json_table>
    a104:	ldr	r3, [sp, #324]	; 0x144
    a108:	mov	sl, r0
    a10c:	cmp	r3, #0
    a110:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a114:	mov	r1, #12
    a118:	ldr	r0, [r9]
    a11c:	bl	0 <flatcc_builder_table_add_offset>
    a120:	cmp	r0, #0
    a124:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a128:	ldr	r3, [sp, #324]	; 0x144
    a12c:	str	r3, [r0]
    a130:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a134:	nop	{0}
    a138:	.word	0x6e746f71
    a13c:	.word	0x696e7665
    a140:	.word	0x666e7630
    a144:	.word	0x7336345f
    a148:	.word	0x666e7631
    a14c:	.word	0x7333325f
    a150:	.word	0x7472696e
    a154:	.word	0x796f6673
    a158:	.word	0x61626c65
    a15c:	.word	0x796f6674
    a160:	.word	0x6f725f6f
    a164:	.word	0x76656374
    a168:	.word	0x75626c65
    a16c:	.word	0x665f646f
    a170:	.word	0x6e677300
    a174:	.word	0x665f6c6f
    a178:	.word	0x00000288
    a17c:	sub	r3, pc, #36	; 0x24
    a180:	ldrd	r2, [r3]
    a184:	ldrd	r0, [sp, #16]
    a188:	cmp	r1, r3
    a18c:	cmpeq	r0, r2
    a190:	bne	ab98 <MyGame_Example_Monster_parse_json_table+0x1df8>
    a194:	add	r4, sl, #8
    a198:	mov	r1, r8
    a19c:	mov	r0, r4
    a1a0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a1a4:	sub	r3, pc, #68	; 0x44
    a1a8:	ldrd	r2, [r3]
    a1ac:	cmp	r1, r3
    a1b0:	cmpeq	r0, r2
    a1b4:	beq	c444 <MyGame_Example_Monster_parse_json_table+0x36a4>
    a1b8:	bic	ip, r0, #255	; 0xff
    a1bc:	sub	r3, pc, #84	; 0x54
    a1c0:	ldrd	r2, [r3]
    a1c4:	str	ip, [sp, #216]	; 0xd8
    a1c8:	str	r1, [sp, #220]	; 0xdc
    a1cc:	ldrd	r0, [sp, #216]	; 0xd8
    a1d0:	cmp	r1, r3
    a1d4:	cmpeq	r0, r2
    a1d8:	bne	bce4 <MyGame_Example_Monster_parse_json_table+0x2f44>
    a1dc:	sub	r3, r8, r4
    a1e0:	cmp	r3, #7
    a1e4:	ble	c7e0 <MyGame_Example_Monster_parse_json_table+0x3a40>
    a1e8:	mov	r3, #7
    a1ec:	mov	r2, r8
    a1f0:	mov	r1, r4
    a1f4:	mov	r0, r9
    a1f8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a1fc:	cmp	r4, r0
    a200:	mov	sl, r0
    a204:	beq	c7dc <MyGame_Example_Monster_parse_json_table+0x3a3c>
    a208:	mov	r2, #8
    a20c:	mvn	r3, #-536870912	; 0xe0000000
    a210:	ldr	r0, [r9]
    a214:	mov	r1, r2
    a218:	bl	0 <flatcc_builder_start_vector>
    a21c:	cmp	r0, #0
    a220:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a224:	mov	r1, sl
    a228:	add	r3, sp, #320	; 0x140
    a22c:	mov	r2, r8
    a230:	mov	r0, r9
    a234:	bl	ed0 <flatcc_json_parser_array_start>
    a238:	ldr	r3, [sp, #320]	; 0x140
    a23c:	mov	sl, r0
    a240:	cmp	r3, #0
    a244:	beq	ce8c <MyGame_Example_Monster_parse_json_table+0x40ec>
    a248:	ldr	r5, [pc, #-216]	; a178 <MyGame_Example_Monster_parse_json_table+0x13d8>
    a24c:	b	a280 <MyGame_Example_Monster_parse_json_table+0x14e0>
    a250:	add	r3, sp, #344	; 0x158
    a254:	mov	r1, r0
    a258:	ldrd	sl, [r3]
    a25c:	mov	r2, r8
    a260:	add	r3, sp, #320	; 0x140
    a264:	mov	r0, r9
    a268:	strd	sl, [r4]
    a26c:	bl	3144 <flatcc_json_parser_array_end>
    a270:	ldr	r3, [sp, #320]	; 0x140
    a274:	mov	sl, r0
    a278:	cmp	r3, #0
    a27c:	beq	ce8c <MyGame_Example_Monster_parse_json_table+0x40ec>
    a280:	mov	r2, #0
    a284:	mov	r3, #0
    a288:	ldr	r0, [r9]
    a28c:	add	ip, sp, #344	; 0x158
    a290:	mov	r1, #1
    a294:	strd	r2, [ip]
    a298:	bl	0 <flatcc_builder_extend_vector>
    a29c:	subs	r4, r0, #0
    a2a0:	mov	r1, sl
    a2a4:	add	r3, sp, #344	; 0x158
    a2a8:	mov	r2, r8
    a2ac:	mov	r0, r9
    a2b0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a2b4:	bl	92c <flatcc_json_parser_int64>
    a2b8:	cmp	r0, sl
    a2bc:	bne	a250 <MyGame_Example_Monster_parse_json_table+0x14b0>
    a2c0:	add	r1, sp, #344	; 0x158
    a2c4:	mov	r3, r5
    a2c8:	mov	r2, r8
    a2cc:	mov	r0, r9
    a2d0:	str	r1, [sp]
    a2d4:	mov	r1, sl
    a2d8:	bl	2600 <flatcc_json_parser_symbolic_int64>
    a2dc:	cmp	r8, r0
    a2e0:	cmpne	r0, sl
    a2e4:	bne	a250 <MyGame_Example_Monster_parse_json_table+0x14b0>
    a2e8:	mov	fp, r9
    a2ec:	mov	sl, r0
    a2f0:	mov	r9, r8
    a2f4:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    a2f8:	ldrd	r4, [sp, #16]
    a2fc:	lsr	r3, r4, #16
    a300:	str	r3, [sp, #72]	; 0x48
    a304:	ldr	r1, [sp, #72]	; 0x48
    a308:	str	r5, [sp, #76]	; 0x4c
    a30c:	add	r3, pc, #740	; 0x2e4
    a310:	ldrd	r2, [r3]
    a314:	lsl	r1, r1, #16
    a318:	str	r1, [sp, #72]	; 0x48
    a31c:	sub	r1, r8, sl
    a320:	ldrd	r4, [sp, #72]	; 0x48
    a324:	cmp	r5, r3
    a328:	cmpeq	r4, r2
    a32c:	beq	ad3c <MyGame_Example_Monster_parse_json_table+0x1f9c>
    a330:	cmp	r1, #5
    a334:	ble	c354 <MyGame_Example_Monster_parse_json_table+0x35b4>
    a338:	mov	r3, #5
    a33c:	mov	r2, r8
    a340:	mov	r1, sl
    a344:	mov	r0, r9
    a348:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a34c:	cmp	r0, sl
    a350:	mov	r4, r0
    a354:	beq	c354 <MyGame_Example_Monster_parse_json_table+0x35b4>
    a358:	mov	ip, #0
    a35c:	mov	r1, r0
    a360:	mov	r2, r8
    a364:	add	r3, sp, #344	; 0x158
    a368:	mov	r0, r9
    a36c:	str	ip, [sp, #344]	; 0x158
    a370:	bl	0 <flatcc_json_parser_float>
    a374:	cmp	r0, r4
    a378:	mov	sl, r0
    a37c:	beq	c8a0 <MyGame_Example_Monster_parse_json_table+0x3b00>
    a380:	vldr	s15, [pc, #664]	; a620 <MyGame_Example_Monster_parse_json_table+0x1880>
    a384:	vldr	s14, [sp, #344]	; 0x158
    a388:	vcmp.f32	s14, s15
    a38c:	vmrs	APSR_nzcv, fpscr
    a390:	bne	a3a0 <MyGame_Example_Monster_parse_json_table+0x1600>
    a394:	ldr	r3, [r9, #8]
    a398:	tst	r3, #2
    a39c:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a3a0:	mov	r3, #4
    a3a4:	mov	r1, #25
    a3a8:	ldr	r0, [r9]
    a3ac:	mov	r2, r3
    a3b0:	bl	0 <flatcc_builder_table_add>
    a3b4:	cmp	r0, #0
    a3b8:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a3bc:	ldr	r3, [sp, #344]	; 0x158
    a3c0:	str	r3, [r0]
    a3c4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a3c8:	add	r3, pc, #560	; 0x230
    a3cc:	ldrd	r2, [r3]
    a3d0:	ldrd	r0, [sp, #16]
    a3d4:	cmp	r1, r3
    a3d8:	cmpeq	r0, r2
    a3dc:	beq	ba7c <MyGame_Example_Monster_parse_json_table+0x2cdc>
    a3e0:	ldr	r1, [sp, #20]
    a3e4:	mov	r4, #0
    a3e8:	str	r4, [sp, #184]	; 0xb8
    a3ec:	add	r3, pc, #532	; 0x214
    a3f0:	ldrd	r2, [r3]
    a3f4:	str	r1, [sp, #188]	; 0xbc
    a3f8:	ldrd	r0, [sp, #184]	; 0xb8
    a3fc:	cmp	r1, r3
    a400:	cmpeq	r0, r2
    a404:	bne	c2c0 <MyGame_Example_Monster_parse_json_table+0x3520>
    a408:	sub	r3, r8, sl
    a40c:	cmp	r3, #4
    a410:	ble	bff4 <MyGame_Example_Monster_parse_json_table+0x3254>
    a414:	mov	r3, #4
    a418:	mov	r2, r8
    a41c:	mov	r1, sl
    a420:	mov	r0, r9
    a424:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a428:	cmp	r0, sl
    a42c:	mov	r5, r0
    a430:	beq	bff4 <MyGame_Example_Monster_parse_json_table+0x3254>
    a434:	add	fp, sp, #344	; 0x158
    a438:	mov	r1, r0
    a43c:	mov	r2, r8
    a440:	mov	r3, fp
    a444:	mov	r0, r9
    a448:	strh	r4, [fp]
    a44c:	bl	d18 <flatcc_json_parser_int16.constprop.25>
    a450:	cmp	r5, r0
    a454:	mov	sl, r0
    a458:	beq	cec0 <MyGame_Example_Monster_parse_json_table+0x4120>
    a45c:	add	r3, sp, #344	; 0x158
    a460:	ldrsh	r3, [r3]
    a464:	cmp	r3, #150	; 0x96
    a468:	bne	a478 <MyGame_Example_Monster_parse_json_table+0x16d8>
    a46c:	ldr	r3, [r9, #8]
    a470:	tst	r3, #2
    a474:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a478:	mov	r3, #2
    a47c:	mov	r1, #1
    a480:	ldr	r0, [r9]
    a484:	mov	r2, r3
    a488:	bl	0 <flatcc_builder_table_add>
    a48c:	cmp	r0, #0
    a490:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a494:	add	r3, sp, #344	; 0x158
    a498:	ldrsh	r3, [r3]
    a49c:	strh	r3, [r0]
    a4a0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a4a4:	mov	r1, sl
    a4a8:	mov	r2, r8
    a4ac:	mov	r0, r9
    a4b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a4b4:	mov	sl, r0
    a4b8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a4bc:	mov	r1, sl
    a4c0:	mov	r2, r8
    a4c4:	mov	r0, r9
    a4c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a4cc:	mov	sl, r0
    a4d0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a4d4:	mov	r1, sl
    a4d8:	mov	r2, r8
    a4dc:	mov	r0, r9
    a4e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a4e4:	mov	sl, r0
    a4e8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a4ec:	add	r3, pc, #284	; 0x11c
    a4f0:	ldrd	r2, [r3]
    a4f4:	cmp	r1, r3
    a4f8:	cmpeq	r0, r2
    a4fc:	bne	b898 <MyGame_Example_Monster_parse_json_table+0x2af8>
    a500:	add	r4, sl, #16
    a504:	mov	r1, r8
    a508:	mov	r0, r4
    a50c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a510:	bic	r0, r0, #255	; 0xff
    a514:	add	r3, pc, #252	; 0xfc
    a518:	ldrd	r2, [r3]
    a51c:	strd	r0, [sp, #200]	; 0xc8
    a520:	ldrd	r0, [sp, #200]	; 0xc8
    a524:	cmp	r1, r3
    a528:	cmpeq	r0, r2
    a52c:	bne	bc84 <MyGame_Example_Monster_parse_json_table+0x2ee4>
    a530:	sub	r3, r8, r4
    a534:	cmp	r3, #7
    a538:	ble	c6e4 <MyGame_Example_Monster_parse_json_table+0x3944>
    a53c:	mov	r3, #7
    a540:	mov	r2, r8
    a544:	mov	r1, r4
    a548:	mov	r0, r9
    a54c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a550:	cmp	r4, r0
    a554:	mov	sl, r0
    a558:	beq	c6e0 <MyGame_Example_Monster_parse_json_table+0x3940>
    a55c:	mvn	r3, #-536870912	; 0xe0000000
    a560:	mov	r2, #4
    a564:	ldr	r0, [r9]
    a568:	mov	r1, #8
    a56c:	bl	0 <flatcc_builder_start_vector>
    a570:	cmp	r0, #0
    a574:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    a578:	mov	r1, sl
    a57c:	add	r3, sp, #320	; 0x140
    a580:	mov	r2, r8
    a584:	mov	r0, r9
    a588:	bl	ed0 <flatcc_json_parser_array_start>
    a58c:	ldr	r3, [sp, #320]	; 0x140
    a590:	mov	sl, r0
    a594:	cmp	r3, #0
    a598:	beq	c14c <MyGame_Example_Monster_parse_json_table+0x33ac>
    a59c:	add	r3, sp, #288	; 0x120
    a5a0:	mov	r4, r0
    a5a4:	strd	r6, [sp, #120]	; 0x78
    a5a8:	ldrd	sl, [r3]
    a5ac:	mov	r1, #1
    a5b0:	ldr	r0, [r9]
    a5b4:	bl	0 <flatcc_builder_extend_vector>
    a5b8:	subs	r3, r0, #0
    a5bc:	str	r3, [sp, #16]
    a5c0:	beq	cc60 <MyGame_Example_Monster_parse_json_table+0x3ec0>
    a5c4:	add	r7, sp, #340	; 0x154
    a5c8:	mov	r1, r4
    a5cc:	mov	r3, r7
    a5d0:	mov	r2, r8
    a5d4:	mov	r0, r9
    a5d8:	bl	dfc <flatcc_json_parser_object_start>
    a5dc:	ldr	r3, [sp, #340]	; 0x154
    a5e0:	mov	r4, r0
    a5e4:	cmp	r3, #0
    a5e8:	beq	c118 <MyGame_Example_Monster_parse_json_table+0x3378>
    a5ec:	mov	r5, #0
    a5f0:	b	a6b8 <MyGame_Example_Monster_parse_json_table+0x1918>
    a5f4:	nop	{0}
    a5f8:	.word	0x66320000
    a5fc:	.word	0x74657374
    a600:	.word	0x6e746f72
    a604:	.word	0x696e7665
    a608:	.word	0x00000000
    a60c:	.word	0x6d616e61
    a610:	.word	0x6f727465
    a614:	.word	0x796f6673
    a618:	.word	0x75637400
    a61c:	.word	0x64737472
    a620:	.word	0x489965e0
    a624:	add	r3, pc, #996	; 0x3e4
    a628:	ldrd	r2, [r3]
    a62c:	cmp	r1, r3
    a630:	cmpeq	r0, r2
    a634:	bne	c03c <MyGame_Example_Monster_parse_json_table+0x329c>
    a638:	sub	r3, r8, r4
    a63c:	cmp	r3, #8
    a640:	ble	c03c <MyGame_Example_Monster_parse_json_table+0x329c>
    a644:	mov	r3, #8
    a648:	mov	r2, r8
    a64c:	mov	r1, r4
    a650:	mov	r0, r9
    a654:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a658:	cmp	r0, r4
    a65c:	mov	r6, r0
    a660:	beq	c03c <MyGame_Example_Monster_parse_json_table+0x329c>
    a664:	mov	r1, r0
    a668:	mov	r2, r8
    a66c:	str	r5, [sp, #344]	; 0x158
    a670:	add	r3, sp, #344	; 0x158
    a674:	mov	r0, r9
    a678:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    a67c:	cmp	r6, r0
    a680:	mov	r4, r0
    a684:	beq	c0d0 <MyGame_Example_Monster_parse_json_table+0x3330>
    a688:	ldr	r2, [sp, #16]
    a68c:	ldr	r3, [sp, #344]	; 0x158
    a690:	str	r3, [r2, #4]
    a694:	mov	r1, r4
    a698:	mov	r3, r7
    a69c:	mov	r2, r8
    a6a0:	mov	r0, r9
    a6a4:	bl	2f80 <flatcc_json_parser_object_end>
    a6a8:	ldr	r3, [sp, #340]	; 0x154
    a6ac:	mov	r4, r0
    a6b0:	cmp	r3, #0
    a6b4:	beq	c118 <MyGame_Example_Monster_parse_json_table+0x3378>
    a6b8:	cmp	r8, r4
    a6bc:	beq	a6e4 <MyGame_Example_Monster_parse_json_table+0x1944>
    a6c0:	ldrb	r3, [r4]
    a6c4:	cmp	r3, #34	; 0x22
    a6c8:	addeq	r4, r4, #1
    a6cc:	streq	r5, [r9, #12]
    a6d0:	beq	a6e4 <MyGame_Example_Monster_parse_json_table+0x1944>
    a6d4:	cmp	r3, #46	; 0x2e
    a6d8:	movne	r3, #1
    a6dc:	strne	r3, [r9, #12]
    a6e0:	beq	c084 <MyGame_Example_Monster_parse_json_table+0x32e4>
    a6e4:	mov	r1, r8
    a6e8:	mov	r0, r4
    a6ec:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a6f0:	lsr	fp, r1, #16
    a6f4:	mov	r3, #0
    a6f8:	movt	r3, #26980	; 0x6964
    a6fc:	mov	r2, #0
    a700:	mov	sl, r5
    a704:	lsl	fp, fp, #16
    a708:	cmp	fp, r3
    a70c:	cmpeq	r5, r2
    a710:	bne	a624 <MyGame_Example_Monster_parse_json_table+0x1884>
    a714:	sub	r3, r8, r4
    a718:	cmp	r3, #2
    a71c:	ble	c03c <MyGame_Example_Monster_parse_json_table+0x329c>
    a720:	mov	r3, #2
    a724:	mov	r2, r8
    a728:	mov	r1, r4
    a72c:	mov	r0, r9
    a730:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a734:	cmp	r0, r4
    a738:	mov	r6, r0
    a73c:	beq	c03c <MyGame_Example_Monster_parse_json_table+0x329c>
    a740:	mov	r1, r0
    a744:	mov	r2, r8
    a748:	str	r5, [sp, #344]	; 0x158
    a74c:	add	r3, sp, #344	; 0x158
    a750:	mov	r0, r9
    a754:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    a758:	cmp	r6, r0
    a75c:	mov	r4, r0
    a760:	beq	c0a0 <MyGame_Example_Monster_parse_json_table+0x3300>
    a764:	ldr	r2, [sp, #16]
    a768:	ldr	r3, [sp, #344]	; 0x158
    a76c:	str	r3, [r2]
    a770:	b	a694 <MyGame_Example_Monster_parse_json_table+0x18f4>
    a774:	add	r3, pc, #668	; 0x29c
    a778:	ldrd	r2, [r3]
    a77c:	cmp	r1, r3
    a780:	cmpeq	r0, r2
    a784:	bhi	b9b0 <MyGame_Example_Monster_parse_json_table+0x2c10>
    a788:	add	r3, pc, #656	; 0x290
    a78c:	ldrd	r2, [r3]
    a790:	cmp	r1, r3
    a794:	cmpeq	r0, r2
    a798:	bne	bd2c <MyGame_Example_Monster_parse_json_table+0x2f8c>
    a79c:	sub	r3, r8, sl
    a7a0:	cmp	r3, #8
    a7a4:	ble	ca38 <MyGame_Example_Monster_parse_json_table+0x3c98>
    a7a8:	mov	r1, sl
    a7ac:	mov	r3, #8
    a7b0:	mov	r2, r8
    a7b4:	mov	r0, r9
    a7b8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    a7bc:	cmp	sl, r0
    a7c0:	mov	r1, r0
    a7c4:	beq	ca38 <MyGame_Example_Monster_parse_json_table+0x3c98>
    a7c8:	add	fp, sp, #344	; 0x158
    a7cc:	mov	r4, #0
    a7d0:	str	r1, [sp, #16]
    a7d4:	mov	r5, #0
    a7d8:	mov	r3, fp
    a7dc:	mov	r2, r8
    a7e0:	mov	r0, r9
    a7e4:	strd	r4, [fp]
    a7e8:	bl	92c <flatcc_json_parser_int64>
    a7ec:	ldr	r1, [sp, #16]
    a7f0:	mov	sl, r0
    a7f4:	cmp	r0, r1
    a7f8:	beq	d16c <MyGame_Example_Monster_parse_json_table+0x43cc>
    a7fc:	add	r3, sp, #344	; 0x158
    a800:	ldrd	r2, [r3]
    a804:	orrs	r3, r2, r3
    a808:	bne	a818 <MyGame_Example_Monster_parse_json_table+0x1a78>
    a80c:	ldr	r3, [r9, #8]
    a810:	tst	r3, #2
    a814:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a818:	mov	r3, #8
    a81c:	mov	r1, #18
    a820:	ldr	r0, [r9]
    a824:	mov	r2, r3
    a828:	bl	0 <flatcc_builder_table_add>
    a82c:	cmp	r0, #0
    a830:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    a834:	add	r3, sp, #344	; 0x158
    a838:	ldrd	r2, [r3]
    a83c:	strd	r2, [r0]
    a840:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a844:	ldrb	r2, [fp, #7]
    a848:	mov	r3, #0
    a84c:	mov	lr, r3
    a850:	ldrb	r0, [fp, #6]
    a854:	orr	r1, r2, r0, lsl #8
    a858:	ldrb	r2, [fp, #5]
    a85c:	mov	r0, lr
    a860:	orr	r1, r1, r2, lsl #16
    a864:	ldrb	r2, [fp, #4]
    a868:	mov	lr, r0
    a86c:	orr	r2, r1, r2, lsl #24
    a870:	ldrb	r0, [fp, #3]
    a874:	orr	r3, lr, r0
    a878:	ldrb	r0, [fp, #2]
    a87c:	orr	r3, r3, r0, lsl #8
    a880:	ldrb	r0, [fp, #1]
    a884:	mov	r6, r2
    a888:	ldrb	r2, [fp]
    a88c:	orr	r0, r3, r0, lsl #16
    a890:	orr	r7, r0, r2, lsl #24
    a894:	cmp	r7, r5
    a898:	cmpeq	r6, r4
    a89c:	bls	ae84 <MyGame_Example_Monster_parse_json_table+0x20e4>
    a8a0:	mvn	r3, #-2013265920	; 0x88000000
    a8a4:	mvn	r2, #0
    a8a8:	cmp	r7, r3
    a8ac:	cmpeq	r6, r2
    a8b0:	bhi	afc4 <MyGame_Example_Monster_parse_json_table+0x2224>
    a8b4:	and	r3, r6, #-16777216	; 0xff000000
    a8b8:	add	r1, pc, #360	; 0x168
    a8bc:	ldrd	r0, [r1]
    a8c0:	str	r3, [sp, #32]
    a8c4:	str	r7, [sp, #36]	; 0x24
    a8c8:	ldrd	r2, [sp, #32]
    a8cc:	cmp	r3, r1
    a8d0:	cmpeq	r2, r0
    a8d4:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    a8d8:	cmp	ip, #5
    a8dc:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    a8e0:	ldr	r2, [r9, #12]
    a8e4:	ldrb	r3, [fp, #5]
    a8e8:	cmp	r2, #0
    a8ec:	beq	b658 <MyGame_Example_Monster_parse_json_table+0x28b8>
    a8f0:	cmp	r3, #58	; 0x3a
    a8f4:	cmpne	r3, #32
    a8f8:	movhi	r3, #1
    a8fc:	movls	r3, #0
    a900:	bhi	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    a904:	add	r1, fp, #5
    a908:	str	r3, [r9, #12]
    a90c:	sub	r3, r8, r1
    a910:	cmp	r3, #1
    a914:	ble	a928 <MyGame_Example_Monster_parse_json_table+0x1b88>
    a918:	ldrb	r3, [r1]
    a91c:	cmp	r3, #32
    a920:	bhi	a938 <MyGame_Example_Monster_parse_json_table+0x1b98>
    a924:	beq	c6a0 <MyGame_Example_Monster_parse_json_table+0x3900>
    a928:	mov	r2, r8
    a92c:	mov	r0, r9
    a930:	bl	0 <flatcc_json_parser_space_ext>
    a934:	mov	r1, r0
    a938:	cmp	r8, r1
    a93c:	beq	a94c <MyGame_Example_Monster_parse_json_table+0x1bac>
    a940:	ldrb	r3, [r1]
    a944:	cmp	r3, #58	; 0x3a
    a948:	beq	c9a4 <MyGame_Example_Monster_parse_json_table+0x3c04>
    a94c:	mov	r3, #4
    a950:	mov	r2, r8
    a954:	mov	r0, r9
    a958:	bl	0 <flatcc_json_parser_set_error>
    a95c:	mov	r1, r0
    a960:	cmp	r1, fp
    a964:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    a968:	ldr	r3, [sp, #16]
    a96c:	mov	r2, r8
    a970:	mov	r0, r9
    a974:	add	r3, r3, #26
    a978:	bl	3308 <MyGame_Example_Test_parse_json_struct_inline>
    a97c:	mov	sl, r0
    a980:	sub	r3, r8, sl
    a984:	cmp	r3, #1
    a988:	ble	a99c <MyGame_Example_Monster_parse_json_table+0x1bfc>
    a98c:	ldrb	r3, [sl]
    a990:	cmp	r3, #32
    a994:	bhi	a9b0 <MyGame_Example_Monster_parse_json_table+0x1c10>
    a998:	beq	b0d8 <MyGame_Example_Monster_parse_json_table+0x2338>
    a99c:	mov	r1, sl
    a9a0:	mov	r2, r8
    a9a4:	mov	r0, r9
    a9a8:	bl	0 <flatcc_json_parser_space_ext>
    a9ac:	mov	sl, r0
    a9b0:	cmp	r8, sl
    a9b4:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    a9b8:	ldrb	r3, [sl]
    a9bc:	cmp	r3, #44	; 0x2c
    a9c0:	beq	b0ec <MyGame_Example_Monster_parse_json_table+0x234c>
    a9c4:	mov	r3, #0
    a9c8:	str	r3, [sp, #336]	; 0x150
    a9cc:	ldrb	r3, [sl]
    a9d0:	cmp	r3, #125	; 0x7d
    a9d4:	beq	b0a0 <MyGame_Example_Monster_parse_json_table+0x2300>
    a9d8:	mov	r3, #10
    a9dc:	mov	r1, sl
    a9e0:	mov	r2, r8
    a9e4:	mov	r0, r9
    a9e8:	bl	0 <flatcc_json_parser_set_error>
    a9ec:	mov	fp, r0
    a9f0:	ldr	r3, [sp, #336]	; 0x150
    a9f4:	b	9ccc <MyGame_Example_Monster_parse_json_table+0xf2c>
    a9f8:	mov	r2, #0
    a9fc:	mov	r3, #0
    aa00:	b	a84c <MyGame_Example_Monster_parse_json_table+0x1aac>
    aa04:	mov	r1, #0
    aa08:	mov	lr, r1
    aa0c:	b	a858 <MyGame_Example_Monster_parse_json_table+0x1ab8>
    aa10:	.word	0x616e6365
    aa14:	.word	0x64697374
    aa18:	.word	0x666e7630
    aa1c:	.word	0x7533325f
    aa20:	.word	0x666e7631
    aa24:	.word	0x7336345f
    aa28:	.word	0x33000000
    aa2c:	.word	0x74657374
    aa30:	.word	0x31000000
    aa34:	.word	0x74657374
    aa38:	.word	0x000001c8
    aa3c:	.word	0x40400000
    aa40:	mov	r2, #0
    aa44:	mov	r3, r2
    aa48:	b	a878 <MyGame_Example_Monster_parse_json_table+0x1ad8>
    aa4c:	mov	r2, #0
    aa50:	mov	r3, r2
    aa54:	b	a880 <MyGame_Example_Monster_parse_json_table+0x1ae0>
    aa58:	mov	r1, #0
    aa5c:	mov	r0, r1
    aa60:	b	a864 <MyGame_Example_Monster_parse_json_table+0x1ac4>
    aa64:	mov	r2, #0
    aa68:	mov	lr, r2
    aa6c:	b	a870 <MyGame_Example_Monster_parse_json_table+0x1ad0>
    aa70:	ldrb	r2, [fp]
    aa74:	mov	r6, #0
    aa78:	lsl	r7, r2, #24
    aa7c:	cmp	r7, r5
    aa80:	cmpeq	r6, r4
    aa84:	bhi	a8a0 <MyGame_Example_Monster_parse_json_table+0x1b00>
    aa88:	sub	r3, pc, #96	; 0x60
    aa8c:	ldrd	r2, [r3]
    aa90:	cmp	r7, r3
    aa94:	cmpeq	r6, r2
    aa98:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    aa9c:	cmp	ip, #5
    aaa0:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    aaa4:	ldr	r2, [r9, #12]
    aaa8:	ldrb	r3, [fp, #5]
    aaac:	cmp	r2, #0
    aab0:	beq	b2f4 <MyGame_Example_Monster_parse_json_table+0x2554>
    aab4:	cmp	r3, #58	; 0x3a
    aab8:	cmpne	r3, #32
    aabc:	movhi	r3, #1
    aac0:	movls	r3, #0
    aac4:	bhi	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    aac8:	add	r1, fp, #5
    aacc:	str	r3, [r9, #12]
    aad0:	sub	r3, r8, r1
    aad4:	cmp	r3, #1
    aad8:	ble	aaec <MyGame_Example_Monster_parse_json_table+0x1d4c>
    aadc:	ldrb	r3, [r1]
    aae0:	cmp	r3, #32
    aae4:	bhi	aafc <MyGame_Example_Monster_parse_json_table+0x1d5c>
    aae8:	beq	c430 <MyGame_Example_Monster_parse_json_table+0x3690>
    aaec:	mov	r2, r8
    aaf0:	mov	r0, r9
    aaf4:	bl	0 <flatcc_json_parser_space_ext>
    aaf8:	mov	r1, r0
    aafc:	cmp	r8, r1
    ab00:	beq	ab10 <MyGame_Example_Monster_parse_json_table+0x1d70>
    ab04:	ldrb	r3, [r1]
    ab08:	cmp	r3, #58	; 0x3a
    ab0c:	beq	c770 <MyGame_Example_Monster_parse_json_table+0x39d0>
    ab10:	mov	r2, r8
    ab14:	mov	r3, #4
    ab18:	mov	r0, r9
    ab1c:	bl	0 <flatcc_json_parser_set_error>
    ab20:	mov	r2, r0
    ab24:	cmp	r2, fp
    ab28:	mov	r1, r2
    ab2c:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    ab30:	mov	r2, r8
    ab34:	add	r3, sp, #344	; 0x158
    ab38:	vstr	d9, [sp, #344]	; 0x158
    ab3c:	mov	r0, r9
    ab40:	mov	fp, r1
    ab44:	bl	0 <flatcc_json_parser_double>
    ab48:	cmp	fp, r0
    ab4c:	mov	sl, r0
    ab50:	beq	b8c8 <MyGame_Example_Monster_parse_json_table+0x2b28>
    ab54:	ldr	r1, [sp, #16]
    ab58:	add	r3, sp, #344	; 0x158
    ab5c:	ldrd	r2, [r3]
    ab60:	strd	r2, [r1, #16]
    ab64:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    ab68:	mov	r1, sl
    ab6c:	mov	r2, r8
    ab70:	mov	r0, r9
    ab74:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab78:	mov	sl, r0
    ab7c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ab80:	mov	r1, sl
    ab84:	mov	r2, r8
    ab88:	mov	r0, r9
    ab8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab90:	mov	sl, r0
    ab94:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ab98:	mov	r1, sl
    ab9c:	mov	r2, r8
    aba0:	mov	r0, r9
    aba4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aba8:	mov	sl, r0
    abac:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    abb0:	mov	r1, sl
    abb4:	mov	r2, r8
    abb8:	mov	r0, r9
    abbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abc0:	mov	sl, r0
    abc4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    abc8:	mov	r1, sl
    abcc:	mov	r2, r8
    abd0:	mov	r0, r9
    abd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abd8:	mov	sl, r0
    abdc:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    abe0:	mov	r1, sl
    abe4:	mov	r2, r8
    abe8:	mov	r0, r9
    abec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abf0:	mov	sl, r0
    abf4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    abf8:	add	r4, sl, #16
    abfc:	mov	r1, r8
    ac00:	mov	r0, r4
    ac04:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ac08:	lsr	ip, r1, #16
    ac0c:	mov	r0, #0
    ac10:	mov	r3, #0
    ac14:	movt	r3, #26418	; 0x6732
    ac18:	mov	r2, #0
    ac1c:	lsl	ip, ip, #16
    ac20:	str	r0, [sp, #168]	; 0xa8
    ac24:	str	ip, [sp, #172]	; 0xac
    ac28:	ldrd	sl, [sp, #168]	; 0xa8
    ac2c:	cmp	fp, r3
    ac30:	cmpeq	sl, r2
    ac34:	beq	bd5c <MyGame_Example_Monster_parse_json_table+0x2fbc>
    ac38:	and	r3, r1, #-16777216	; 0xff000000
    ac3c:	str	r0, [sp, #248]	; 0xf8
    ac40:	str	r3, [sp, #252]	; 0xfc
    ac44:	ldrd	r2, [sp, #248]	; 0xf8
    ac48:	cmp	r3, #1728053248	; 0x67000000
    ac4c:	cmpeq	r2, #0
    ac50:	bne	c6c8 <MyGame_Example_Monster_parse_json_table+0x3928>
    ac54:	sub	r3, r8, r4
    ac58:	cmp	r3, #1
    ac5c:	ble	ca20 <MyGame_Example_Monster_parse_json_table+0x3c80>
    ac60:	mov	r3, #1
    ac64:	mov	r2, r8
    ac68:	mov	r1, r4
    ac6c:	mov	r0, r9
    ac70:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    ac74:	cmp	r4, r0
    ac78:	mov	sl, r0
    ac7c:	beq	ca1c <MyGame_Example_Monster_parse_json_table+0x3c7c>
    ac80:	ldr	r0, [r9]
    ac84:	bl	0 <flatcc_builder_start_offset_vector>
    ac88:	cmp	r0, #0
    ac8c:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    ac90:	mov	r1, sl
    ac94:	add	r3, sp, #320	; 0x140
    ac98:	mov	r2, r8
    ac9c:	mov	r0, r9
    aca0:	bl	ed0 <flatcc_json_parser_array_start>
    aca4:	ldr	r3, [sp, #320]	; 0x140
    aca8:	mov	sl, r0
    acac:	cmp	r3, #0
    acb0:	beq	d07c <MyGame_Example_Monster_parse_json_table+0x42dc>
    acb4:	add	r4, sp, #324	; 0x144
    acb8:	b	acf8 <MyGame_Example_Monster_parse_json_table+0x1f58>
    acbc:	ldr	r0, [r9]
    acc0:	bl	0 <flatcc_builder_extend_offset_vector>
    acc4:	subs	ip, r0, #0
    acc8:	add	r3, sp, #320	; 0x140
    accc:	mov	r2, r8
    acd0:	mov	r1, sl
    acd4:	mov	r0, r9
    acd8:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    acdc:	ldr	lr, [sp, #324]	; 0x144
    ace0:	str	lr, [ip]
    ace4:	bl	3144 <flatcc_json_parser_array_end>
    ace8:	ldr	r3, [sp, #320]	; 0x140
    acec:	mov	sl, r0
    acf0:	cmp	r3, #0
    acf4:	beq	d07c <MyGame_Example_Monster_parse_json_table+0x42dc>
    acf8:	mov	r1, sl
    acfc:	mov	r3, r4
    ad00:	mov	r2, r8
    ad04:	mov	r0, r9
    ad08:	bl	0 <flatcc_json_parser_build_string>
    ad0c:	ldr	r3, [sp, #324]	; 0x144
    ad10:	mov	sl, r0
    ad14:	mov	r1, #1
    ad18:	cmp	r3, #0
    ad1c:	bne	acbc <MyGame_Example_Monster_parse_json_table+0x1f1c>
    ad20:	b	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    ad24:	mov	r1, sl
    ad28:	mov	r2, r8
    ad2c:	mov	r0, r9
    ad30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad34:	mov	sl, r0
    ad38:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ad3c:	cmp	r1, #6
    ad40:	ble	be48 <MyGame_Example_Monster_parse_json_table+0x30a8>
    ad44:	mov	r3, #6
    ad48:	mov	r2, r8
    ad4c:	mov	r1, sl
    ad50:	mov	r0, r9
    ad54:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    ad58:	cmp	r0, sl
    ad5c:	mov	r4, r0
    ad60:	beq	be48 <MyGame_Example_Monster_parse_json_table+0x30a8>
    ad64:	mov	ip, #0
    ad68:	mov	r1, r0
    ad6c:	mov	r2, r8
    ad70:	add	r3, sp, #344	; 0x158
    ad74:	mov	r0, r9
    ad78:	str	ip, [sp, #344]	; 0x158
    ad7c:	bl	0 <flatcc_json_parser_float>
    ad80:	cmp	r0, r4
    ad84:	mov	sl, r0
    ad88:	beq	cca0 <MyGame_Example_Monster_parse_json_table+0x3f00>
    ad8c:	vldr	s15, [pc, #-856]	; aa3c <MyGame_Example_Monster_parse_json_table+0x1c9c>
    ad90:	vldr	s14, [sp, #344]	; 0x158
    ad94:	vcmp.f32	s14, s15
    ad98:	vmrs	APSR_nzcv, fpscr
    ad9c:	bne	adac <MyGame_Example_Monster_parse_json_table+0x200c>
    ada0:	ldr	r3, [r9, #8]
    ada4:	tst	r3, #2
    ada8:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    adac:	mov	r3, #4
    adb0:	mov	r1, #26
    adb4:	ldr	r0, [r9]
    adb8:	mov	r2, r3
    adbc:	bl	0 <flatcc_builder_table_add>
    adc0:	cmp	r0, #0
    adc4:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    adc8:	ldr	r3, [sp, #344]	; 0x158
    adcc:	str	r3, [r0]
    add0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    add4:	mov	r2, #0
    add8:	mov	r3, #0
    addc:	mov	fp, #0
    ade0:	add	r1, sp, #344	; 0x158
    ade4:	cmp	r8, r4
    ade8:	moveq	r5, r8
    adec:	strd	r2, [r1]
    adf0:	str	fp, [sp, #340]	; 0x154
    adf4:	beq	ae24 <MyGame_Example_Monster_parse_json_table+0x2084>
    adf8:	add	r0, sp, #344	; 0x158
    adfc:	add	r3, sp, #340	; 0x154
    ae00:	mov	r2, r8
    ae04:	mov	r1, r4
    ae08:	str	r0, [sp]
    ae0c:	mov	r0, r9
    ae10:	bl	0 <flatcc_json_parser_integer>
    ae14:	cmp	r4, r0
    ae18:	mov	r5, r0
    ae1c:	strbeq	fp, [sp, #336]	; 0x150
    ae20:	bne	c950 <MyGame_Example_Monster_parse_json_table+0x3bb0>
    ae24:	add	ip, sp, #336	; 0x150
    ae28:	ldr	r3, [pc, #-1016]	; aa38 <MyGame_Example_Monster_parse_json_table+0x1c98>
    ae2c:	mov	r2, r8
    ae30:	mov	r1, r5
    ae34:	mov	r0, r9
    ae38:	str	ip, [sp]
    ae3c:	bl	13a8 <flatcc_json_parser_symbolic_bool>
    ae40:	cmp	r8, r0
    ae44:	cmpne	r0, r5
    ae48:	mov	sl, r0
    ae4c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    ae50:	ldrb	r3, [sp, #336]	; 0x150
    ae54:	cmp	r3, #1
    ae58:	bne	9108 <MyGame_Example_Monster_parse_json_table+0x368>
    ae5c:	ldr	r3, [r9, #8]
    ae60:	tst	r3, #2
    ae64:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ae68:	b	9108 <MyGame_Example_Monster_parse_json_table+0x368>
    ae6c:	mov	r1, fp
    ae70:	mov	r2, r8
    ae74:	mov	r0, r9
    ae78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ae7c:	mov	sl, r0
    ae80:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    ae84:	and	r2, r6, #-16777216	; 0xff000000
    ae88:	mov	r6, r2
    ae8c:	add	r3, pc, #876	; 0x36c
    ae90:	ldrd	r2, [r3]
    ae94:	cmp	r7, r3
    ae98:	cmpeq	r6, r2
    ae9c:	bne	aa88 <MyGame_Example_Monster_parse_json_table+0x1ce8>
    aea0:	cmp	ip, #5
    aea4:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    aea8:	ldr	r2, [r9, #12]
    aeac:	ldrb	r3, [fp, #5]
    aeb0:	cmp	r2, #0
    aeb4:	beq	b2e4 <MyGame_Example_Monster_parse_json_table+0x2544>
    aeb8:	cmp	r3, #58	; 0x3a
    aebc:	cmpne	r3, #32
    aec0:	movhi	r3, #1
    aec4:	movls	r3, #0
    aec8:	bhi	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    aecc:	add	r1, fp, #5
    aed0:	str	r3, [r9, #12]
    aed4:	sub	r3, r8, r1
    aed8:	cmp	r3, #1
    aedc:	ble	aef0 <MyGame_Example_Monster_parse_json_table+0x2150>
    aee0:	ldrb	r3, [r1]
    aee4:	cmp	r3, #32
    aee8:	bhi	af00 <MyGame_Example_Monster_parse_json_table+0x2160>
    aeec:	beq	c404 <MyGame_Example_Monster_parse_json_table+0x3664>
    aef0:	mov	r2, r8
    aef4:	mov	r0, r9
    aef8:	bl	0 <flatcc_json_parser_space_ext>
    aefc:	mov	r1, r0
    af00:	cmp	r8, r1
    af04:	beq	af14 <MyGame_Example_Monster_parse_json_table+0x2174>
    af08:	ldrb	r3, [r1]
    af0c:	cmp	r3, #58	; 0x3a
    af10:	beq	c734 <MyGame_Example_Monster_parse_json_table+0x3994>
    af14:	mov	r3, #4
    af18:	mov	r2, r8
    af1c:	mov	r0, r9
    af20:	bl	0 <flatcc_json_parser_set_error>
    af24:	str	r0, [sp, #120]	; 0x78
    af28:	ldr	r2, [sp, #120]	; 0x78
    af2c:	cmp	r2, fp
    af30:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    af34:	mov	r3, #0
    af38:	mov	r0, #0
    af3c:	mov	r1, #0
    af40:	cmp	r8, r2
    af44:	strb	r3, [sp, #332]	; 0x14c
    af48:	mov	fp, r2
    af4c:	str	r3, [sp, #340]	; 0x154
    af50:	add	r3, sp, #344	; 0x158
    af54:	strd	r0, [r3]
    af58:	beq	b734 <MyGame_Example_Monster_parse_json_table+0x2994>
    af5c:	mov	r0, r3
    af60:	mov	r2, r8
    af64:	add	r3, sp, #340	; 0x154
    af68:	mov	r1, fp
    af6c:	str	r0, [sp]
    af70:	mov	r0, r9
    af74:	bl	0 <flatcc_json_parser_integer>
    af78:	cmp	fp, r0
    af7c:	mov	sl, r0
    af80:	bne	b814 <MyGame_Example_Monster_parse_json_table+0x2a74>
    af84:	add	ip, sp, #332	; 0x14c
    af88:	ldr	r3, [pc, #632]	; b208 <MyGame_Example_Monster_parse_json_table+0x2468>
    af8c:	mov	r2, r8
    af90:	mov	r1, sl
    af94:	mov	r0, r9
    af98:	str	ip, [sp]
    af9c:	bl	1f10 <flatcc_json_parser_symbolic_int8>
    afa0:	cmp	r8, r0
    afa4:	cmpne	r0, sl
    afa8:	beq	cf90 <MyGame_Example_Monster_parse_json_table+0x41f0>
    afac:	add	r3, sp, #332	; 0x14c
    afb0:	mov	sl, r0
    afb4:	ldrsb	r2, [r3]
    afb8:	ldr	r3, [sp, #16]
    afbc:	strb	r2, [r3, #24]
    afc0:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    afc4:	mvn	r3, #-2030043136	; 0x87000000
    afc8:	mvn	r2, #0
    afcc:	cmp	r7, r3
    afd0:	cmpeq	r6, r2
    afd4:	bhi	b140 <MyGame_Example_Monster_parse_json_table+0x23a0>
    afd8:	cmp	ip, #1
    afdc:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    afe0:	ldr	r2, [r9, #12]
    afe4:	ldrb	r3, [fp, #1]
    afe8:	cmp	r2, #0
    afec:	beq	b668 <MyGame_Example_Monster_parse_json_table+0x28c8>
    aff0:	cmp	r3, #58	; 0x3a
    aff4:	cmpne	r3, #32
    aff8:	movhi	r3, #1
    affc:	movls	r3, #0
    b000:	bhi	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b004:	add	r1, fp, #1
    b008:	str	r3, [r9, #12]
    b00c:	sub	r3, r8, r1
    b010:	cmp	r3, #1
    b014:	ble	b028 <MyGame_Example_Monster_parse_json_table+0x2288>
    b018:	ldrb	r3, [r1]
    b01c:	cmp	r3, #32
    b020:	bhi	b038 <MyGame_Example_Monster_parse_json_table+0x2298>
    b024:	beq	c6b4 <MyGame_Example_Monster_parse_json_table+0x3914>
    b028:	mov	r2, r8
    b02c:	mov	r0, r9
    b030:	bl	0 <flatcc_json_parser_space_ext>
    b034:	mov	r1, r0
    b038:	cmp	r8, r1
    b03c:	beq	b04c <MyGame_Example_Monster_parse_json_table+0x22ac>
    b040:	ldrb	r3, [r1]
    b044:	cmp	r3, #58	; 0x3a
    b048:	beq	c98c <MyGame_Example_Monster_parse_json_table+0x3bec>
    b04c:	mov	r3, #4
    b050:	mov	r2, r8
    b054:	mov	r0, r9
    b058:	bl	0 <flatcc_json_parser_set_error>
    b05c:	mov	r3, r0
    b060:	cmp	r3, fp
    b064:	mov	r1, r3
    b068:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b06c:	mov	r2, r8
    b070:	add	r3, sp, #344	; 0x158
    b074:	vstr	s16, [sp, #344]	; 0x158
    b078:	mov	r0, r9
    b07c:	mov	fp, r1
    b080:	bl	0 <flatcc_json_parser_float>
    b084:	cmp	fp, r0
    b088:	mov	sl, r0
    b08c:	beq	c2d8 <MyGame_Example_Monster_parse_json_table+0x3538>
    b090:	ldr	r2, [sp, #16]
    b094:	ldr	r3, [sp, #344]	; 0x158
    b098:	str	r3, [r2]
    b09c:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    b0a0:	add	r1, sl, #1
    b0a4:	sub	r3, r8, r1
    b0a8:	cmp	r3, #1
    b0ac:	ble	b0c0 <MyGame_Example_Monster_parse_json_table+0x2320>
    b0b0:	ldrb	r3, [sl, #1]
    b0b4:	cmp	r3, #32
    b0b8:	bhi	b2dc <MyGame_Example_Monster_parse_json_table+0x253c>
    b0bc:	beq	b678 <MyGame_Example_Monster_parse_json_table+0x28d8>
    b0c0:	mov	r2, r8
    b0c4:	mov	r0, r9
    b0c8:	bl	0 <flatcc_json_parser_space_ext>
    b0cc:	mov	fp, r0
    b0d0:	ldr	r3, [sp, #336]	; 0x150
    b0d4:	b	9ccc <MyGame_Example_Monster_parse_json_table+0xf2c>
    b0d8:	ldrb	r3, [sl, #1]
    b0dc:	cmp	r3, #32
    b0e0:	addhi	sl, sl, #1
    b0e4:	bls	a99c <MyGame_Example_Monster_parse_json_table+0x1bfc>
    b0e8:	b	a9b0 <MyGame_Example_Monster_parse_json_table+0x1c10>
    b0ec:	add	fp, sl, #1
    b0f0:	sub	r3, r8, fp
    b0f4:	cmp	r3, #1
    b0f8:	ble	b10c <MyGame_Example_Monster_parse_json_table+0x236c>
    b0fc:	ldrb	r3, [sl, #1]
    b100:	cmp	r3, #32
    b104:	bhi	b120 <MyGame_Example_Monster_parse_json_table+0x2380>
    b108:	beq	b868 <MyGame_Example_Monster_parse_json_table+0x2ac8>
    b10c:	mov	r1, fp
    b110:	mov	r2, r8
    b114:	mov	r0, r9
    b118:	bl	0 <flatcc_json_parser_space_ext>
    b11c:	mov	fp, r0
    b120:	cmp	r8, fp
    b124:	beq	b970 <MyGame_Example_Monster_parse_json_table+0x2bd0>
    b128:	ldrb	r3, [fp]
    b12c:	cmp	r3, #125	; 0x7d
    b130:	beq	b940 <MyGame_Example_Monster_parse_json_table+0x2ba0>
    b134:	mov	r3, #1
    b138:	str	r3, [sp, #336]	; 0x150
    b13c:	b	9cdc <MyGame_Example_Monster_parse_json_table+0xf3c>
    b140:	mov	r3, #0
    b144:	str	r3, [sp, #56]	; 0x38
    b148:	and	r3, r7, #-16777216	; 0xff000000
    b14c:	str	r3, [sp, #60]	; 0x3c
    b150:	ldrd	r2, [sp, #56]	; 0x38
    b154:	cmp	r3, #2046820352	; 0x7a000000
    b158:	cmpeq	r2, #0
    b15c:	beq	b304 <MyGame_Example_Monster_parse_json_table+0x2564>
    b160:	ldrd	r2, [sp, #56]	; 0x38
    b164:	cmp	r3, #2030043136	; 0x79000000
    b168:	cmpeq	r2, #0
    b16c:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b170:	cmp	ip, #1
    b174:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b178:	mov	r1, fp
    b17c:	mov	r3, #1
    b180:	mov	r2, r8
    b184:	mov	r0, r9
    b188:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b18c:	cmp	r0, fp
    b190:	mov	r1, r0
    b194:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b198:	mov	fp, r0
    b19c:	mov	r2, r8
    b1a0:	vstr	s16, [sp, #344]	; 0x158
    b1a4:	add	r3, sp, #344	; 0x158
    b1a8:	mov	r0, r9
    b1ac:	bl	0 <flatcc_json_parser_float>
    b1b0:	cmp	fp, r0
    b1b4:	mov	sl, r0
    b1b8:	beq	c858 <MyGame_Example_Monster_parse_json_table+0x3ab8>
    b1bc:	ldr	r2, [sp, #16]
    b1c0:	ldr	r3, [sp, #344]	; 0x158
    b1c4:	str	r3, [r2, #4]
    b1c8:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    b1cc:	mov	r1, fp
    b1d0:	mov	r3, #5
    b1d4:	mov	r2, r8
    b1d8:	mov	r0, r9
    b1dc:	bl	0 <flatcc_json_parser_set_error>
    b1e0:	mov	fp, r0
    b1e4:	b	9d0c <MyGame_Example_Monster_parse_json_table+0xf6c>
    b1e8:	mov	r1, sl
    b1ec:	mov	r2, r8
    b1f0:	mov	r0, r9
    b1f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b1f8:	mov	sl, r0
    b1fc:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b200:	.word	0x32000000
    b204:	.word	0x74657374
    b208:	.word	0x00000154
    b20c:	add	r3, pc, #532	; 0x214
    b210:	ldrd	r2, [r3]
    b214:	ldrd	r0, [sp, #48]	; 0x30
    b218:	cmp	r1, r3
    b21c:	cmpeq	r0, r2
    b220:	bne	b68c <MyGame_Example_Monster_parse_json_table+0x28ec>
    b224:	cmp	fp, #5
    b228:	ble	abc8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    b22c:	mov	r3, #5
    b230:	mov	r2, r8
    b234:	mov	r1, sl
    b238:	mov	r0, r9
    b23c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b240:	cmp	r0, sl
    b244:	mov	r4, r0
    b248:	beq	abc8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    b24c:	mvn	r3, #-1073741824	; 0xc0000000
    b250:	mov	r2, #2
    b254:	ldr	r0, [r9]
    b258:	mov	r1, #4
    b25c:	bl	0 <flatcc_builder_start_vector>
    b260:	cmp	r0, #0
    b264:	bne	cfe4 <MyGame_Example_Monster_parse_json_table+0x4244>
    b268:	add	r3, sp, #320	; 0x140
    b26c:	mov	r1, r4
    b270:	mov	r2, r8
    b274:	mov	r0, r9
    b278:	bl	ed0 <flatcc_json_parser_array_start>
    b27c:	ldr	r3, [sp, #320]	; 0x140
    b280:	mov	sl, r0
    b284:	cmp	r3, #0
    b288:	bne	b2b8 <MyGame_Example_Monster_parse_json_table+0x2518>
    b28c:	b	c580 <MyGame_Example_Monster_parse_json_table+0x37e0>
    b290:	bl	3308 <MyGame_Example_Test_parse_json_struct_inline>
    b294:	mov	r1, r0
    b298:	add	r3, sp, #320	; 0x140
    b29c:	mov	r2, r8
    b2a0:	mov	r0, r9
    b2a4:	bl	3144 <flatcc_json_parser_array_end>
    b2a8:	ldr	r3, [sp, #320]	; 0x140
    b2ac:	mov	sl, r0
    b2b0:	cmp	r3, #0
    b2b4:	beq	c580 <MyGame_Example_Monster_parse_json_table+0x37e0>
    b2b8:	mov	r1, #1
    b2bc:	ldr	r0, [r9]
    b2c0:	bl	0 <flatcc_builder_extend_vector>
    b2c4:	subs	r3, r0, #0
    b2c8:	mov	r1, sl
    b2cc:	mov	r2, r8
    b2d0:	mov	r0, r9
    b2d4:	bne	b290 <MyGame_Example_Monster_parse_json_table+0x24f0>
    b2d8:	b	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    b2dc:	mov	sl, r1
    b2e0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b2e4:	cmp	r3, #34	; 0x22
    b2e8:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b2ec:	add	r1, fp, #6
    b2f0:	b	aed4 <MyGame_Example_Monster_parse_json_table+0x2134>
    b2f4:	cmp	r3, #34	; 0x22
    b2f8:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b2fc:	add	r1, fp, #6
    b300:	b	aad0 <MyGame_Example_Monster_parse_json_table+0x1d30>
    b304:	cmp	ip, #1
    b308:	ble	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b30c:	mov	r1, fp
    b310:	mov	r3, #1
    b314:	mov	r2, r8
    b318:	mov	r0, r9
    b31c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b320:	cmp	r0, fp
    b324:	mov	r1, r0
    b328:	beq	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b32c:	mov	fp, r0
    b330:	mov	r2, r8
    b334:	vstr	s16, [sp, #344]	; 0x158
    b338:	add	r3, sp, #344	; 0x158
    b33c:	mov	r0, r9
    b340:	bl	0 <flatcc_json_parser_float>
    b344:	cmp	fp, r0
    b348:	mov	sl, r0
    b34c:	beq	c828 <MyGame_Example_Monster_parse_json_table+0x3a88>
    b350:	ldr	r2, [sp, #16]
    b354:	ldr	r3, [sp, #344]	; 0x158
    b358:	str	r3, [r2, #8]
    b35c:	b	a980 <MyGame_Example_Monster_parse_json_table+0x1be0>
    b360:	add	r4, sl, #8
    b364:	mov	r1, r8
    b368:	mov	r0, r4
    b36c:	mov	r5, #0
    b370:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b374:	lsr	r1, r1, #16
    b378:	str	r5, [sp, #136]	; 0x88
    b37c:	mov	r3, #0
    b380:	movt	r3, #13876	; 0x3634
    b384:	mov	r2, #0
    b388:	lsl	r1, r1, #16
    b38c:	str	r1, [sp, #140]	; 0x8c
    b390:	ldrd	r0, [sp, #136]	; 0x88
    b394:	cmp	r1, r3
    b398:	cmpeq	r0, r2
    b39c:	bne	b8f8 <MyGame_Example_Monster_parse_json_table+0x2b58>
    b3a0:	sub	r3, r8, r4
    b3a4:	cmp	r3, #2
    b3a8:	ble	be30 <MyGame_Example_Monster_parse_json_table+0x3090>
    b3ac:	mov	r3, #2
    b3b0:	mov	r2, r8
    b3b4:	mov	r1, r4
    b3b8:	mov	r0, r9
    b3bc:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b3c0:	cmp	r4, r0
    b3c4:	mov	sl, r0
    b3c8:	beq	be2c <MyGame_Example_Monster_parse_json_table+0x308c>
    b3cc:	mov	r1, #3
    b3d0:	ldr	r0, [r9]
    b3d4:	str	r5, [sp, #324]	; 0x144
    b3d8:	bl	0 <flatcc_builder_start_table>
    b3dc:	cmp	r0, r5
    b3e0:	bne	b614 <MyGame_Example_Monster_parse_json_table+0x2874>
    b3e4:	add	r5, sp, #340	; 0x154
    b3e8:	mov	r1, sl
    b3ec:	mov	r3, r5
    b3f0:	mov	r2, r8
    b3f4:	mov	r0, r9
    b3f8:	bl	dfc <flatcc_json_parser_object_start>
    b3fc:	ldr	r3, [sp, #340]	; 0x154
    b400:	mov	sl, r0
    b404:	cmp	r3, #0
    b408:	beq	c9dc <MyGame_Example_Monster_parse_json_table+0x3c3c>
    b40c:	mov	r3, #0
    b410:	movt	r3, #65535	; 0xffff
    b414:	mov	fp, #1
    b418:	str	r3, [sp, #16]
    b41c:	strd	r6, [sp, #120]	; 0x78
    b420:	b	b510 <MyGame_Example_Monster_parse_json_table+0x2770>
    b424:	nop	{0}
    b428:	.word	0x35000000
    b42c:	.word	0x74657374
    b430:	.word	0x00000000
    b434:	.word	0x64617461
    b438:	.word	0x6563ffff
    b43c:	.word	0x6e657374
    b440:	.word	0x61746100
    b444:	.word	0x75726c64
    b448:	.word	0x65640000
    b44c:	.word	0x6e657374
    b450:	.word	0x5f747970
    b454:	.word	0x74657374
    b458:	.word	0x00000194
    b45c:	mov	r4, #0
    b460:	str	r4, [sp, #80]	; 0x50
    b464:	str	r1, [sp, #84]	; 0x54
    b468:	sub	r1, pc, #64	; 0x40
    b46c:	ldrd	r0, [r1]
    b470:	ldrd	r2, [sp, #80]	; 0x50
    b474:	cmp	r3, r1
    b478:	cmpeq	r2, r0
    b47c:	bne	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b480:	sub	r3, r8, sl
    b484:	cmp	r3, #4
    b488:	ble	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b48c:	mov	r1, sl
    b490:	mov	r3, #4
    b494:	mov	r2, r8
    b498:	mov	r0, r9
    b49c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b4a0:	cmp	r0, sl
    b4a4:	mov	r1, r0
    b4a8:	beq	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b4ac:	add	r3, sp, #344	; 0x158
    b4b0:	mov	r2, r8
    b4b4:	str	r4, [sp]
    b4b8:	mov	r0, r9
    b4bc:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    b4c0:	ldr	r3, [sp, #344]	; 0x158
    b4c4:	mov	sl, r0
    b4c8:	cmp	r3, r4
    b4cc:	beq	b610 <MyGame_Example_Monster_parse_json_table+0x2870>
    b4d0:	mov	r1, r4
    b4d4:	ldr	r0, [r9]
    b4d8:	bl	0 <flatcc_builder_table_add_offset>
    b4dc:	cmp	r0, #0
    b4e0:	beq	b610 <MyGame_Example_Monster_parse_json_table+0x2870>
    b4e4:	ldr	r3, [sp, #344]	; 0x158
    b4e8:	str	r3, [r0]
    b4ec:	mov	r1, sl
    b4f0:	mov	r3, r5
    b4f4:	mov	r2, r8
    b4f8:	mov	r0, r9
    b4fc:	bl	2f80 <flatcc_json_parser_object_end>
    b500:	ldr	r3, [sp, #340]	; 0x154
    b504:	mov	sl, r0
    b508:	cmp	r3, #0
    b50c:	beq	c9d8 <MyGame_Example_Monster_parse_json_table+0x3c38>
    b510:	cmp	r8, sl
    b514:	beq	b53c <MyGame_Example_Monster_parse_json_table+0x279c>
    b518:	ldrb	r3, [sl]
    b51c:	cmp	r3, #34	; 0x22
    b520:	moveq	r3, #0
    b524:	addeq	sl, sl, #1
    b528:	streq	r3, [r9, #12]
    b52c:	beq	b53c <MyGame_Example_Monster_parse_json_table+0x279c>
    b530:	cmp	r3, #46	; 0x2e
    b534:	strne	fp, [r9, #12]
    b538:	beq	c374 <MyGame_Example_Monster_parse_json_table+0x35d4>
    b53c:	mov	r1, r8
    b540:	mov	r0, sl
    b544:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b548:	sub	r3, pc, #280	; 0x118
    b54c:	ldrd	r2, [r3]
    b550:	cmp	r1, r3
    b554:	cmpeq	r0, r2
    b558:	bls	b45c <MyGame_Example_Monster_parse_json_table+0x26bc>
    b55c:	bic	r3, r0, #255	; 0xff
    b560:	sub	r7, pc, #296	; 0x128
    b564:	ldrd	r6, [r7]
    b568:	str	r3, [sp, #88]	; 0x58
    b56c:	str	r1, [sp, #92]	; 0x5c
    b570:	ldrd	r2, [sp, #88]	; 0x58
    b574:	cmp	r3, r7
    b578:	cmpeq	r2, r6
    b57c:	beq	c180 <MyGame_Example_Monster_parse_json_table+0x33e0>
    b580:	ldr	r3, [sp, #16]
    b584:	str	r1, [sp, #148]	; 0x94
    b588:	and	r3, r0, r3
    b58c:	sub	r1, pc, #332	; 0x14c
    b590:	ldrd	r0, [r1]
    b594:	str	r3, [sp, #144]	; 0x90
    b598:	ldrd	r2, [sp, #144]	; 0x90
    b59c:	cmp	r3, r1
    b5a0:	cmpeq	r2, r0
    b5a4:	bne	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b5a8:	sub	r3, r8, sl
    b5ac:	cmp	r3, #6
    b5b0:	ble	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b5b4:	mov	r1, sl
    b5b8:	mov	r3, #6
    b5bc:	mov	r2, r8
    b5c0:	mov	r0, r9
    b5c4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b5c8:	cmp	r0, sl
    b5cc:	mov	r1, r0
    b5d0:	beq	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    b5d4:	mov	r0, #0
    b5d8:	add	r3, sp, #344	; 0x158
    b5dc:	mov	r2, r8
    b5e0:	str	r0, [sp]
    b5e4:	mov	r0, r9
    b5e8:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    b5ec:	ldr	r3, [sp, #344]	; 0x158
    b5f0:	mov	sl, r0
    b5f4:	cmp	r3, #0
    b5f8:	beq	b610 <MyGame_Example_Monster_parse_json_table+0x2870>
    b5fc:	mov	r1, #2
    b600:	ldr	r0, [r9]
    b604:	bl	0 <flatcc_builder_table_add_offset>
    b608:	cmp	r0, #0
    b60c:	bne	b4e4 <MyGame_Example_Monster_parse_json_table+0x2744>
    b610:	ldrd	r6, [sp, #120]	; 0x78
    b614:	mov	r1, sl
    b618:	mov	r3, #33	; 0x21
    b61c:	mov	r2, r8
    b620:	mov	r0, r9
    b624:	bl	0 <flatcc_json_parser_set_error>
    b628:	ldr	r3, [sp, #324]	; 0x144
    b62c:	mov	sl, r0
    b630:	cmp	r3, #0
    b634:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    b638:	mov	r1, #35	; 0x23
    b63c:	ldr	r0, [r9]
    b640:	bl	0 <flatcc_builder_table_add_offset>
    b644:	cmp	r0, #0
    b648:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    b64c:	ldr	r3, [sp, #324]	; 0x144
    b650:	str	r3, [r0]
    b654:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b658:	cmp	r3, #34	; 0x22
    b65c:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b660:	add	r1, fp, #6
    b664:	b	a90c <MyGame_Example_Monster_parse_json_table+0x1b6c>
    b668:	cmp	r3, #34	; 0x22
    b66c:	bne	ae6c <MyGame_Example_Monster_parse_json_table+0x20cc>
    b670:	add	r1, fp, #2
    b674:	b	b00c <MyGame_Example_Monster_parse_json_table+0x226c>
    b678:	ldrb	r3, [sl, #2]
    b67c:	cmp	r3, #32
    b680:	bls	b0c0 <MyGame_Example_Monster_parse_json_table+0x2320>
    b684:	add	sl, sl, #2
    b688:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b68c:	sub	r3, pc, #580	; 0x244
    b690:	ldrd	r2, [r3]
    b694:	ldrd	r0, [sp, #16]
    b698:	cmp	r1, r3
    b69c:	cmpeq	r0, r2
    b6a0:	bne	abc8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    b6a4:	add	sl, sl, #8
    b6a8:	mov	r1, r8
    b6ac:	mov	r0, sl
    b6b0:	mov	r4, #0
    b6b4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b6b8:	and	r3, r1, #-16777216	; 0xff000000
    b6bc:	str	r4, [sp, #176]	; 0xb0
    b6c0:	str	r3, [sp, #180]	; 0xb4
    b6c4:	ldrd	r2, [sp, #176]	; 0xb0
    b6c8:	cmp	r3, #1694498816	; 0x65000000
    b6cc:	cmpeq	r2, #0
    b6d0:	bne	b928 <MyGame_Example_Monster_parse_json_table+0x2b88>
    b6d4:	sub	r3, r8, sl
    b6d8:	cmp	r3, #1
    b6dc:	ble	be60 <MyGame_Example_Monster_parse_json_table+0x30c0>
    b6e0:	mov	r1, sl
    b6e4:	mov	r3, #1
    b6e8:	mov	r2, r8
    b6ec:	mov	r0, r9
    b6f0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b6f4:	cmp	sl, r0
    b6f8:	mov	r1, r0
    b6fc:	beq	be60 <MyGame_Example_Monster_parse_json_table+0x30c0>
    b700:	ldr	lr, [pc, #-688]	; b458 <MyGame_Example_Monster_parse_json_table+0x26b8>
    b704:	movw	r2, #0
    b708:	movt	r2, #0
    b70c:	mov	r5, #8
    b710:	mov	r3, r4
    b714:	ldr	ip, [sp, #328]	; 0x148
    b718:	mov	r0, r9
    b71c:	stm	sp, {r5, ip, lr}
    b720:	str	r2, [sp, #12]
    b724:	mov	r2, r8
    b728:	bl	0 <flatcc_json_parser_union_type>
    b72c:	mov	sl, r0
    b730:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b734:	mov	sl, r8
    b738:	b	af84 <MyGame_Example_Monster_parse_json_table+0x21e4>
    b73c:	mov	r1, sl
    b740:	mov	r2, r8
    b744:	mov	r0, r9
    b748:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b74c:	mov	sl, r0
    b750:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b754:	add	r4, sl, #8
    b758:	mov	r1, r8
    b75c:	mov	r0, r4
    b760:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b764:	add	r3, pc, #948	; 0x3b4
    b768:	ldrd	r2, [r3]
    b76c:	cmp	r1, r3
    b770:	cmpeq	r0, r2
    b774:	bne	bc0c <MyGame_Example_Monster_parse_json_table+0x2e6c>
    b778:	add	sl, sl, #16
    b77c:	mov	r1, r8
    b780:	mov	r0, sl
    b784:	bl	0 <flatcc_json_parser_symbol_part_ext>
    b788:	and	r0, r0, #-16777216	; 0xff000000
    b78c:	add	r3, pc, #916	; 0x394
    b790:	ldrd	r2, [r3]
    b794:	strd	r0, [sp, #232]	; 0xe8
    b798:	ldrd	r0, [sp, #232]	; 0xe8
    b79c:	cmp	r1, r3
    b7a0:	cmpeq	r0, r2
    b7a4:	bne	bcfc <MyGame_Example_Monster_parse_json_table+0x2f5c>
    b7a8:	sub	r3, r8, sl
    b7ac:	cmp	r3, #5
    b7b0:	ble	cdac <MyGame_Example_Monster_parse_json_table+0x400c>
    b7b4:	mov	r1, sl
    b7b8:	mov	r3, #5
    b7bc:	mov	r2, r8
    b7c0:	mov	r0, r9
    b7c4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b7c8:	cmp	sl, r0
    b7cc:	mov	r1, r0
    b7d0:	beq	cdac <MyGame_Example_Monster_parse_json_table+0x400c>
    b7d4:	add	r3, sp, #324	; 0x144
    b7d8:	mov	r2, r8
    b7dc:	mov	r0, r9
    b7e0:	bl	4f50 <MyGame_Example2_Monster_parse_json_table>
    b7e4:	ldr	r3, [sp, #324]	; 0x144
    b7e8:	mov	sl, r0
    b7ec:	cmp	r3, #0
    b7f0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    b7f4:	mov	r1, #34	; 0x22
    b7f8:	ldr	r0, [r9]
    b7fc:	bl	0 <flatcc_builder_table_add_offset>
    b800:	cmp	r0, #0
    b804:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    b808:	ldr	r3, [sp, #324]	; 0x144
    b80c:	str	r3, [r0]
    b810:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b814:	ldr	r1, [sp, #340]	; 0x154
    b818:	add	r3, sp, #344	; 0x158
    b81c:	ldrd	r2, [r3]
    b820:	cmp	r1, #0
    b824:	bne	bc54 <MyGame_Example_Monster_parse_json_table+0x2eb4>
    b828:	cmp	r3, #0
    b82c:	cmpeq	r2, #127	; 0x7f
    b830:	sxtbls	r2, r2
    b834:	bls	afb8 <MyGame_Example_Monster_parse_json_table+0x2218>
    b838:	mov	r1, r0
    b83c:	mov	r3, #7
    b840:	mov	r2, r8
    b844:	mov	r0, r9
    b848:	bl	0 <flatcc_json_parser_set_error>
    b84c:	mov	sl, r0
    b850:	ldr	r3, [sp, #120]	; 0x78
    b854:	cmp	r3, sl
    b858:	beq	af84 <MyGame_Example_Monster_parse_json_table+0x21e4>
    b85c:	add	r3, sp, #332	; 0x14c
    b860:	ldrsb	r2, [r3]
    b864:	b	afb8 <MyGame_Example_Monster_parse_json_table+0x2218>
    b868:	ldrb	r3, [sl, #2]
    b86c:	cmp	r3, #32
    b870:	addhi	fp, sl, #2
    b874:	bls	b10c <MyGame_Example_Monster_parse_json_table+0x236c>
    b878:	b	b120 <MyGame_Example_Monster_parse_json_table+0x2380>
    b87c:	mov	r1, sl
    b880:	mov	r2, r8
    b884:	mov	r0, r9
    b888:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b88c:	mov	sl, r0
    b890:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b894:	mov	r4, r0
    b898:	mov	r1, r4
    b89c:	mov	r2, r8
    b8a0:	mov	r0, r9
    b8a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b8a8:	mov	sl, r0
    b8ac:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b8b0:	mov	r1, sl
    b8b4:	mov	r2, r8
    b8b8:	mov	r0, r9
    b8bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b8c0:	mov	sl, r0
    b8c4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b8c8:	mov	r1, r0
    b8cc:	add	r0, sp, #344	; 0x158
    b8d0:	ldr	r3, [pc, #616]	; bb40 <MyGame_Example_Monster_parse_json_table+0x2da0>
    b8d4:	mov	r2, r8
    b8d8:	str	r0, [sp]
    b8dc:	mov	r0, r9
    b8e0:	bl	11a4 <flatcc_json_parser_symbolic_double>
    b8e4:	cmp	r8, r0
    b8e8:	cmpne	sl, r0
    b8ec:	beq	cf90 <MyGame_Example_Monster_parse_json_table+0x41f0>
    b8f0:	mov	sl, r0
    b8f4:	b	ab54 <MyGame_Example_Monster_parse_json_table+0x1db4>
    b8f8:	mov	r1, r4
    b8fc:	mov	r2, r8
    b900:	mov	r0, r9
    b904:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b908:	mov	sl, r0
    b90c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b910:	mov	r1, r4
    b914:	mov	r2, r8
    b918:	mov	r0, r9
    b91c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b920:	mov	sl, r0
    b924:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b928:	mov	r1, sl
    b92c:	mov	r2, r8
    b930:	mov	r0, r9
    b934:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b938:	mov	sl, r0
    b93c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b940:	add	sl, fp, #1
    b944:	mov	r3, #0
    b948:	sub	r2, r8, sl
    b94c:	cmp	r2, #1
    b950:	str	r3, [sp, #336]	; 0x150
    b954:	ble	b968 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    b958:	ldrb	r3, [fp, #1]
    b95c:	cmp	r3, #32
    b960:	bhi	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b964:	beq	cc70 <MyGame_Example_Monster_parse_json_table+0x3ed0>
    b968:	mov	r1, sl
    b96c:	b	b0c0 <MyGame_Example_Monster_parse_json_table+0x2320>
    b970:	mov	ip, #0
    b974:	mov	r3, #10
    b978:	mov	r2, r8
    b97c:	mov	r1, r8
    b980:	mov	r0, r9
    b984:	str	ip, [sp, #336]	; 0x150
    b988:	bl	0 <flatcc_json_parser_set_error>
    b98c:	mov	fp, r0
    b990:	ldr	r3, [sp, #336]	; 0x150
    b994:	b	9ccc <MyGame_Example_Monster_parse_json_table+0xf2c>
    b998:	mov	r1, sl
    b99c:	mov	r2, r8
    b9a0:	mov	r0, r9
    b9a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b9a8:	mov	sl, r0
    b9ac:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    b9b0:	add	r3, pc, #376	; 0x178
    b9b4:	ldrd	r2, [r3]
    b9b8:	cmp	r1, r3
    b9bc:	cmpeq	r0, r2
    b9c0:	beq	bf5c <MyGame_Example_Monster_parse_json_table+0x31bc>
    b9c4:	add	r3, pc, #364	; 0x16c
    b9c8:	ldrd	r2, [r3]
    b9cc:	cmp	r1, r3
    b9d0:	cmpeq	r0, r2
    b9d4:	bne	c810 <MyGame_Example_Monster_parse_json_table+0x3a70>
    b9d8:	sub	r3, r8, sl
    b9dc:	cmp	r3, #8
    b9e0:	ble	ccd4 <MyGame_Example_Monster_parse_json_table+0x3f34>
    b9e4:	mov	r3, #8
    b9e8:	mov	r2, r8
    b9ec:	mov	r1, sl
    b9f0:	mov	r0, r9
    b9f4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    b9f8:	cmp	sl, r0
    b9fc:	mov	r4, r0
    ba00:	beq	ccd0 <MyGame_Example_Monster_parse_json_table+0x3f30>
    ba04:	mov	sl, #0
    ba08:	add	r5, sp, #344	; 0x158
    ba0c:	mov	fp, #0
    ba10:	mov	r1, r0
    ba14:	mov	r3, r5
    ba18:	mov	r2, r8
    ba1c:	mov	r0, r9
    ba20:	strd	sl, [r5]
    ba24:	bl	a08 <flatcc_json_parser_uint64.constprop.29>
    ba28:	cmp	r0, r4
    ba2c:	mov	sl, r0
    ba30:	beq	d22c <MyGame_Example_Monster_parse_json_table+0x448c>
    ba34:	add	r3, sp, #344	; 0x158
    ba38:	ldrd	r2, [r3]
    ba3c:	orrs	r3, r2, r3
    ba40:	bne	ba50 <MyGame_Example_Monster_parse_json_table+0x2cb0>
    ba44:	ldr	r3, [r9, #8]
    ba48:	tst	r3, #2
    ba4c:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ba50:	mov	r3, #8
    ba54:	mov	r1, #19
    ba58:	ldr	r0, [r9]
    ba5c:	mov	r2, r3
    ba60:	bl	0 <flatcc_builder_table_add>
    ba64:	cmp	r0, #0
    ba68:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    ba6c:	add	r3, sp, #344	; 0x158
    ba70:	ldrd	r2, [r3]
    ba74:	strd	r2, [r0]
    ba78:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ba7c:	mov	r3, #0
    ba80:	add	r4, sl, #8
    ba84:	mov	r1, r8
    ba88:	mov	r0, r4
    ba8c:	str	r3, [sp, #224]	; 0xe0
    ba90:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ba94:	and	r3, r1, #-16777216	; 0xff000000
    ba98:	str	r3, [sp, #228]	; 0xe4
    ba9c:	ldrd	r2, [sp, #224]	; 0xe0
    baa0:	cmp	r3, #2030043136	; 0x79000000
    baa4:	cmpeq	r2, #0
    baa8:	bne	bd44 <MyGame_Example_Monster_parse_json_table+0x2fa4>
    baac:	sub	r3, r8, r4
    bab0:	cmp	r3, #1
    bab4:	ble	c9c0 <MyGame_Example_Monster_parse_json_table+0x3c20>
    bab8:	mov	r3, #1
    babc:	mov	r2, r8
    bac0:	mov	r1, r4
    bac4:	mov	r0, r9
    bac8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    bacc:	cmp	r4, r0
    bad0:	mov	sl, r0
    bad4:	beq	c9bc <MyGame_Example_Monster_parse_json_table+0x3c1c>
    bad8:	mov	r2, #1
    badc:	mvn	r3, #0
    bae0:	ldr	r0, [r9]
    bae4:	mov	r1, r2
    bae8:	bl	0 <flatcc_builder_start_vector>
    baec:	cmp	r0, #0
    baf0:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    baf4:	mov	r1, sl
    baf8:	add	r3, sp, #320	; 0x140
    bafc:	mov	r2, r8
    bb00:	mov	r0, r9
    bb04:	bl	ed0 <flatcc_json_parser_array_start>
    bb08:	ldr	r3, [sp, #320]	; 0x140
    bb0c:	mov	sl, r0
    bb10:	cmp	r3, #0
    bb14:	beq	cf04 <MyGame_Example_Monster_parse_json_table+0x4164>
    bb18:	mov	fp, #0
    bb1c:	b	bb88 <MyGame_Example_Monster_parse_json_table+0x2de8>
    bb20:	.word	0x70616365
    bb24:	.word	0x616d6573
    bb28:	.word	0x74000000
    bb2c:	.word	0x5f746573
    bb30:	.word	0x666e7631
    bb34:	.word	0x7533325f
    bb38:	.word	0x666e7631
    bb3c:	.word	0x7536345f
    bb40:	.word	0x00000164
    bb44:	.word	0x0000013c
    bb48:	.word	0x00000204
    bb4c:	.word	0x00000130
    bb50:	.word	0x000001b0
    bb54:	.word	0x000001bc
    bb58:	.word	0x00000170
    bb5c:	ldrb	ip, [sp, #344]	; 0x158
    bb60:	add	r3, sp, #320	; 0x140
    bb64:	mov	r1, r4
    bb68:	mov	r2, r8
    bb6c:	mov	r0, r9
    bb70:	strb	ip, [r5]
    bb74:	bl	3144 <flatcc_json_parser_array_end>
    bb78:	ldr	r3, [sp, #320]	; 0x140
    bb7c:	mov	sl, r0
    bb80:	cmp	r3, #0
    bb84:	beq	cf04 <MyGame_Example_Monster_parse_json_table+0x4164>
    bb88:	mov	r1, #1
    bb8c:	ldr	r0, [r9]
    bb90:	strb	fp, [sp, #344]	; 0x158
    bb94:	bl	0 <flatcc_builder_extend_vector>
    bb98:	subs	r5, r0, #0
    bb9c:	mov	r1, sl
    bba0:	add	r3, sp, #344	; 0x158
    bba4:	mov	r2, r8
    bba8:	mov	r0, r9
    bbac:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    bbb0:	bl	aa4 <flatcc_json_parser_uint8>
    bbb4:	cmp	sl, r0
    bbb8:	mov	r4, r0
    bbbc:	bne	bb5c <MyGame_Example_Monster_parse_json_table+0x2dbc>
    bbc0:	add	r1, sp, #344	; 0x158
    bbc4:	ldr	r3, [pc, #-136]	; bb44 <MyGame_Example_Monster_parse_json_table+0x2da4>
    bbc8:	mov	r2, r8
    bbcc:	mov	r0, r9
    bbd0:	str	r1, [sp]
    bbd4:	mov	r1, r4
    bbd8:	bl	180c <flatcc_json_parser_symbolic_uint8>
    bbdc:	cmp	r8, r0
    bbe0:	cmpne	r4, r0
    bbe4:	mov	sl, r0
    bbe8:	mov	r4, r0
    bbec:	bne	bb5c <MyGame_Example_Monster_parse_json_table+0x2dbc>
    bbf0:	b	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    bbf4:	mov	r1, sl
    bbf8:	mov	r2, r8
    bbfc:	mov	r0, r9
    bc00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc04:	mov	sl, r0
    bc08:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bc0c:	mov	r1, r4
    bc10:	mov	r2, r8
    bc14:	mov	r0, r9
    bc18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc1c:	mov	sl, r0
    bc20:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bc24:	mov	r1, r4
    bc28:	mov	r2, r8
    bc2c:	mov	r0, r9
    bc30:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc34:	mov	sl, r0
    bc38:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bc3c:	mov	r1, r4
    bc40:	mov	r2, r8
    bc44:	mov	r0, r9
    bc48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc4c:	mov	sl, r0
    bc50:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bc54:	cmp	r3, #0
    bc58:	cmpeq	r2, #128	; 0x80
    bc5c:	rsbls	r2, r2, #0
    bc60:	sxtbls	r2, r2
    bc64:	bls	afb8 <MyGame_Example_Monster_parse_json_table+0x2218>
    bc68:	mov	r1, r0
    bc6c:	mov	r3, #8
    bc70:	mov	r2, r8
    bc74:	mov	r0, r9
    bc78:	bl	0 <flatcc_json_parser_set_error>
    bc7c:	mov	sl, r0
    bc80:	b	b850 <MyGame_Example_Monster_parse_json_table+0x2ab0>
    bc84:	mov	r1, r4
    bc88:	mov	r2, r8
    bc8c:	mov	r0, r9
    bc90:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc94:	mov	sl, r0
    bc98:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bc9c:	mov	r1, r0
    bca0:	add	r0, sp, #344	; 0x158
    bca4:	ldr	r3, [pc, #-356]	; bb48 <MyGame_Example_Monster_parse_json_table+0x2da8>
    bca8:	mov	r2, r8
    bcac:	str	r0, [sp]
    bcb0:	mov	r0, r9
    bcb4:	bl	fa4 <flatcc_json_parser_symbolic_float>
    bcb8:	cmp	r8, r0
    bcbc:	cmpne	sl, r0
    bcc0:	beq	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    bcc4:	mov	sl, r0
    bcc8:	b	92f8 <MyGame_Example_Monster_parse_json_table+0x558>
    bccc:	mov	r1, r4
    bcd0:	mov	r2, r8
    bcd4:	mov	r0, r9
    bcd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bcdc:	mov	sl, r0
    bce0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bce4:	mov	r1, r4
    bce8:	mov	r2, r8
    bcec:	mov	r0, r9
    bcf0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bcf4:	mov	sl, r0
    bcf8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bcfc:	mov	r1, sl
    bd00:	mov	r2, r8
    bd04:	mov	r0, r9
    bd08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd0c:	mov	sl, r0
    bd10:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bd14:	mov	r1, r4
    bd18:	mov	r2, r8
    bd1c:	mov	r0, r9
    bd20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd24:	mov	sl, r0
    bd28:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bd2c:	mov	r1, sl
    bd30:	mov	r2, r8
    bd34:	mov	r0, r9
    bd38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd3c:	mov	sl, r0
    bd40:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bd44:	mov	r1, r4
    bd48:	mov	r2, r8
    bd4c:	mov	r0, r9
    bd50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bd54:	mov	sl, r0
    bd58:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bd5c:	sub	r3, r8, r4
    bd60:	cmp	r3, #2
    bd64:	ble	ca04 <MyGame_Example_Monster_parse_json_table+0x3c64>
    bd68:	mov	r3, #2
    bd6c:	mov	r2, r8
    bd70:	mov	r1, r4
    bd74:	mov	r0, r9
    bd78:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    bd7c:	cmp	r4, r0
    bd80:	mov	sl, r0
    bd84:	beq	ca00 <MyGame_Example_Monster_parse_json_table+0x3c60>
    bd88:	ldr	r0, [r9]
    bd8c:	bl	0 <flatcc_builder_start_offset_vector>
    bd90:	cmp	r0, #0
    bd94:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    bd98:	mov	r1, sl
    bd9c:	add	r3, sp, #320	; 0x140
    bda0:	mov	r2, r8
    bda4:	mov	r0, r9
    bda8:	bl	ed0 <flatcc_json_parser_array_start>
    bdac:	ldr	r3, [sp, #320]	; 0x140
    bdb0:	mov	sl, r0
    bdb4:	cmp	r3, #0
    bdb8:	beq	d000 <MyGame_Example_Monster_parse_json_table+0x4260>
    bdbc:	add	r4, sp, #324	; 0x144
    bdc0:	b	be00 <MyGame_Example_Monster_parse_json_table+0x3060>
    bdc4:	ldr	r0, [r9]
    bdc8:	bl	0 <flatcc_builder_extend_offset_vector>
    bdcc:	subs	ip, r0, #0
    bdd0:	add	r3, sp, #320	; 0x140
    bdd4:	mov	r2, r8
    bdd8:	mov	r1, sl
    bddc:	mov	r0, r9
    bde0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    bde4:	ldr	lr, [sp, #324]	; 0x144
    bde8:	str	lr, [ip]
    bdec:	bl	3144 <flatcc_json_parser_array_end>
    bdf0:	ldr	r3, [sp, #320]	; 0x140
    bdf4:	mov	sl, r0
    bdf8:	cmp	r3, #0
    bdfc:	beq	d000 <MyGame_Example_Monster_parse_json_table+0x4260>
    be00:	mov	r1, sl
    be04:	mov	r3, r4
    be08:	mov	r2, r8
    be0c:	mov	r0, r9
    be10:	bl	0 <flatcc_json_parser_build_string>
    be14:	ldr	r3, [sp, #324]	; 0x144
    be18:	mov	sl, r0
    be1c:	mov	r1, #1
    be20:	cmp	r3, #0
    be24:	bne	bdc4 <MyGame_Example_Monster_parse_json_table+0x3024>
    be28:	b	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    be2c:	mov	r4, r0
    be30:	mov	r1, r4
    be34:	mov	r2, r8
    be38:	mov	r0, r9
    be3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be40:	mov	sl, r0
    be44:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    be48:	mov	r1, sl
    be4c:	mov	r2, r8
    be50:	mov	r0, r9
    be54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be58:	mov	sl, r0
    be5c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    be60:	mov	r1, sl
    be64:	mov	r2, r8
    be68:	mov	r0, r9
    be6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    be70:	mov	sl, r0
    be74:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    be78:	add	sl, sl, #8
    be7c:	mov	r1, r8
    be80:	mov	r0, sl
    be84:	mov	fp, #0
    be88:	bl	0 <flatcc_json_parser_symbol_part_ext>
    be8c:	and	r3, r1, #-16777216	; 0xff000000
    be90:	str	fp, [sp, #264]	; 0x108
    be94:	str	r3, [sp, #268]	; 0x10c
    be98:	add	r3, sp, #264	; 0x108
    be9c:	ldrd	r2, [r3]
    bea0:	cmp	r3, #1627389952	; 0x61000000
    bea4:	cmpeq	r2, #0
    bea8:	bne	cb70 <MyGame_Example_Monster_parse_json_table+0x3dd0>
    beac:	sub	r3, r8, sl
    beb0:	cmp	r3, #1
    beb4:	ble	d064 <MyGame_Example_Monster_parse_json_table+0x42c4>
    beb8:	mov	r3, #1
    bebc:	mov	r2, r8
    bec0:	mov	r1, sl
    bec4:	mov	r0, r9
    bec8:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    becc:	cmp	sl, r0
    bed0:	mov	r4, r0
    bed4:	beq	d064 <MyGame_Example_Monster_parse_json_table+0x42c4>
    bed8:	add	r5, sp, #344	; 0x158
    bedc:	mov	r1, r0
    bee0:	str	fp, [sp, #344]	; 0x158
    bee4:	mov	r2, r8
    bee8:	mov	r3, r5
    beec:	mov	r0, r9
    bef0:	bl	c34 <flatcc_json_parser_int32.constprop.26>
    bef4:	cmp	r0, r4
    bef8:	mov	sl, r0
    befc:	beq	d200 <MyGame_Example_Monster_parse_json_table+0x4460>
    bf00:	ldr	r3, [sp, #344]	; 0x158
    bf04:	cmp	r3, #0
    bf08:	bne	bf18 <MyGame_Example_Monster_parse_json_table+0x3178>
    bf0c:	ldr	r3, [r9, #8]
    bf10:	tst	r3, #2
    bf14:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf18:	mov	r3, #4
    bf1c:	mov	r1, #20
    bf20:	ldr	r0, [r9]
    bf24:	mov	r2, r3
    bf28:	bl	0 <flatcc_builder_table_add>
    bf2c:	cmp	r0, #0
    bf30:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    bf34:	ldr	r3, [sp, #344]	; 0x158
    bf38:	str	r3, [r0]
    bf3c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf40:	mov	r4, r0
    bf44:	mov	r1, r4
    bf48:	mov	r2, r8
    bf4c:	mov	r0, r9
    bf50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf54:	mov	sl, r0
    bf58:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bf5c:	sub	r3, r8, sl
    bf60:	cmp	r3, #8
    bf64:	ble	cdc4 <MyGame_Example_Monster_parse_json_table+0x4024>
    bf68:	mov	r3, #8
    bf6c:	mov	r2, r8
    bf70:	mov	r1, sl
    bf74:	mov	r0, r9
    bf78:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    bf7c:	cmp	sl, r0
    bf80:	mov	r4, r0
    bf84:	beq	cdc4 <MyGame_Example_Monster_parse_json_table+0x4024>
    bf88:	mov	ip, #0
    bf8c:	add	fp, sp, #344	; 0x158
    bf90:	mov	r1, r0
    bf94:	mov	r3, fp
    bf98:	mov	r2, r8
    bf9c:	mov	r0, r9
    bfa0:	str	ip, [sp, #344]	; 0x158
    bfa4:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    bfa8:	cmp	r0, r4
    bfac:	mov	sl, r0
    bfb0:	beq	d328 <MyGame_Example_Monster_parse_json_table+0x4588>
    bfb4:	ldr	r3, [sp, #344]	; 0x158
    bfb8:	cmp	r3, #0
    bfbc:	bne	bfcc <MyGame_Example_Monster_parse_json_table+0x322c>
    bfc0:	ldr	r3, [r9, #8]
    bfc4:	tst	r3, #2
    bfc8:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bfcc:	mov	r3, #4
    bfd0:	mov	r1, #17
    bfd4:	ldr	r0, [r9]
    bfd8:	mov	r2, r3
    bfdc:	bl	0 <flatcc_builder_table_add>
    bfe0:	cmp	r0, #0
    bfe4:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    bfe8:	ldr	r3, [sp, #344]	; 0x158
    bfec:	str	r3, [r0]
    bff0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    bff4:	mov	r1, sl
    bff8:	mov	r2, r8
    bffc:	mov	r0, r9
    c000:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c004:	mov	sl, r0
    c008:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c00c:	mov	r1, r0
    c010:	add	r0, sp, #344	; 0x158
    c014:	ldr	r3, [pc, #-1232]	; bb4c <MyGame_Example_Monster_parse_json_table+0x2dac>
    c018:	mov	r2, r8
    c01c:	str	r0, [sp]
    c020:	mov	r0, r9
    c024:	bl	1a4c <flatcc_json_parser_symbolic_int16>
    c028:	cmp	r8, r0
    c02c:	cmpne	sl, r0
    c030:	beq	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    c034:	mov	sl, r0
    c038:	b	9e40 <MyGame_Example_Monster_parse_json_table+0x10a0>
    c03c:	mov	r1, r4
    c040:	mov	r2, r8
    c044:	mov	r0, r9
    c048:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c04c:	mov	r4, r0
    c050:	b	a694 <MyGame_Example_Monster_parse_json_table+0x18f4>
    c054:	mov	r1, sl
    c058:	mov	r2, r8
    c05c:	mov	r0, r9
    c060:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c064:	mov	sl, r0
    c068:	b	b4ec <MyGame_Example_Monster_parse_json_table+0x274c>
    c06c:	mov	r1, sl
    c070:	mov	r2, r8
    c074:	mov	r0, r9
    c078:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c07c:	mov	sl, r0
    c080:	b	9aec <MyGame_Example_Monster_parse_json_table+0xd4c>
    c084:	mov	r1, r4
    c088:	mov	r3, #5
    c08c:	mov	r2, r8
    c090:	mov	r0, r9
    c094:	bl	0 <flatcc_json_parser_set_error>
    c098:	mov	r4, r0
    c09c:	b	a6e4 <MyGame_Example_Monster_parse_json_table+0x1944>
    c0a0:	mov	r1, r0
    c0a4:	add	r0, sp, #344	; 0x158
    c0a8:	ldr	r3, [pc, #-1376]	; bb50 <MyGame_Example_Monster_parse_json_table+0x2db0>
    c0ac:	mov	r2, r8
    c0b0:	str	r0, [sp]
    c0b4:	mov	r0, r9
    c0b8:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    c0bc:	cmp	r8, r0
    c0c0:	cmpne	r4, r0
    c0c4:	beq	c100 <MyGame_Example_Monster_parse_json_table+0x3360>
    c0c8:	mov	r4, r0
    c0cc:	b	a764 <MyGame_Example_Monster_parse_json_table+0x19c4>
    c0d0:	mov	r1, r0
    c0d4:	add	r0, sp, #344	; 0x158
    c0d8:	ldr	r3, [pc, #-1420]	; bb54 <MyGame_Example_Monster_parse_json_table+0x2db4>
    c0dc:	mov	r2, r8
    c0e0:	str	r0, [sp]
    c0e4:	mov	r0, r9
    c0e8:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    c0ec:	cmp	r8, r0
    c0f0:	cmpne	r4, r0
    c0f4:	beq	c100 <MyGame_Example_Monster_parse_json_table+0x3360>
    c0f8:	mov	r4, r0
    c0fc:	b	a688 <MyGame_Example_Monster_parse_json_table+0x18e8>
    c100:	mov	r1, r0
    c104:	mov	r3, #33	; 0x21
    c108:	mov	r2, r8
    c10c:	mov	r0, r9
    c110:	bl	0 <flatcc_json_parser_set_error>
    c114:	mov	r4, r0
    c118:	mov	r1, r4
    c11c:	add	r3, sp, #320	; 0x140
    c120:	mov	r2, r8
    c124:	mov	r0, r9
    c128:	bl	3144 <flatcc_json_parser_array_end>
    c12c:	ldr	r3, [sp, #320]	; 0x140
    c130:	mov	r4, r0
    c134:	cmp	r3, #0
    c138:	bne	a5ac <MyGame_Example_Monster_parse_json_table+0x180c>
    c13c:	ldrd	r6, [sp, #120]	; 0x78
    c140:	add	r3, sp, #288	; 0x120
    c144:	strd	sl, [r3]
    c148:	mov	sl, r0
    c14c:	ldr	r0, [r9]
    c150:	bl	0 <flatcc_builder_end_vector>
    c154:	cmp	r0, #0
    c158:	str	r0, [sp, #324]	; 0x144
    c15c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c160:	mov	r1, #29
    c164:	ldr	r0, [r9]
    c168:	bl	0 <flatcc_builder_table_add_offset>
    c16c:	cmp	r0, #0
    c170:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c174:	ldr	r3, [sp, #324]	; 0x144
    c178:	str	r3, [r0]
    c17c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c180:	sub	r3, r8, sl
    c184:	cmp	r3, #7
    c188:	ble	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    c18c:	mov	r1, sl
    c190:	mov	r3, #7
    c194:	mov	r2, r8
    c198:	mov	r0, r9
    c19c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    c1a0:	cmp	r0, sl
    c1a4:	mov	r1, r0
    c1a8:	beq	c054 <MyGame_Example_Monster_parse_json_table+0x32b4>
    c1ac:	add	r3, sp, #344	; 0x158
    c1b0:	mov	r2, r8
    c1b4:	str	fp, [sp]
    c1b8:	mov	r0, r9
    c1bc:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    c1c0:	ldr	r3, [sp, #344]	; 0x158
    c1c4:	mov	sl, r0
    c1c8:	cmp	r3, #0
    c1cc:	beq	b610 <MyGame_Example_Monster_parse_json_table+0x2870>
    c1d0:	mov	r1, #1
    c1d4:	ldr	r0, [r9]
    c1d8:	bl	0 <flatcc_builder_table_add_offset>
    c1dc:	cmp	r0, #0
    c1e0:	bne	b4e4 <MyGame_Example_Monster_parse_json_table+0x2744>
    c1e4:	b	b610 <MyGame_Example_Monster_parse_json_table+0x2870>
    c1e8:	sub	r3, r8, sl
    c1ec:	cmp	r3, #3
    c1f0:	ble	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    c1f4:	mov	r3, #3
    c1f8:	mov	r2, r8
    c1fc:	mov	r1, sl
    c200:	mov	r0, r9
    c204:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    c208:	cmp	r0, sl
    c20c:	mov	fp, r0
    c210:	beq	c06c <MyGame_Example_Monster_parse_json_table+0x32cc>
    c214:	mov	r0, #0
    c218:	mov	r1, #0
    c21c:	add	r3, sp, #344	; 0x158
    c220:	mov	r2, r8
    c224:	strd	r0, [r3]
    c228:	mov	r1, fp
    c22c:	mov	r0, r9
    c230:	bl	92c <flatcc_json_parser_int64>
    c234:	cmp	fp, r0
    c238:	mov	sl, r0
    c23c:	beq	cb10 <MyGame_Example_Monster_parse_json_table+0x3d70>
    c240:	add	r3, sp, #344	; 0x158
    c244:	ldrd	r2, [r3]
    c248:	orrs	r3, r2, r3
    c24c:	bne	c25c <MyGame_Example_Monster_parse_json_table+0x34bc>
    c250:	ldr	r3, [r9, #8]
    c254:	tst	r3, #2
    c258:	beq	9aec <MyGame_Example_Monster_parse_json_table+0xd4c>
    c25c:	mov	r3, #8
    c260:	mov	r1, #1
    c264:	ldr	r0, [r9]
    c268:	mov	r2, r3
    c26c:	bl	0 <flatcc_builder_table_add>
    c270:	cmp	r0, #0
    c274:	beq	c5bc <MyGame_Example_Monster_parse_json_table+0x381c>
    c278:	add	r3, sp, #344	; 0x158
    c27c:	ldrd	r2, [r3]
    c280:	strd	r2, [r0]
    c284:	b	9aec <MyGame_Example_Monster_parse_json_table+0xd4c>
    c288:	ldrb	r2, [sl, #1]
    c28c:	add	r1, sl, #1
    c290:	cmp	r2, #114	; 0x72
    c294:	bne	9834 <MyGame_Example_Monster_parse_json_table+0xa94>
    c298:	ldrb	r2, [r1, #1]!
    c29c:	cmp	r2, #117	; 0x75
    c2a0:	bne	9834 <MyGame_Example_Monster_parse_json_table+0xa94>
    c2a4:	ldrb	r2, [r1, #1]
    c2a8:	cmp	r2, #101	; 0x65
    c2ac:	moveq	r3, #1
    c2b0:	addeq	r4, sl, #4
    c2b4:	strbeq	r3, [sp, #340]	; 0x154
    c2b8:	bne	9834 <MyGame_Example_Monster_parse_json_table+0xa94>
    c2bc:	b	9884 <MyGame_Example_Monster_parse_json_table+0xae4>
    c2c0:	mov	r1, sl
    c2c4:	mov	r2, r8
    c2c8:	mov	r0, r9
    c2cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c2d0:	mov	sl, r0
    c2d4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c2d8:	mov	r1, r0
    c2dc:	add	r0, sp, #344	; 0x158
    c2e0:	ldr	r3, [pc, #-1936]	; bb58 <MyGame_Example_Monster_parse_json_table+0x2db8>
    c2e4:	mov	r2, r8
    c2e8:	str	r0, [sp]
    c2ec:	mov	r0, r9
    c2f0:	bl	fa4 <flatcc_json_parser_symbolic_float>
    c2f4:	cmp	r8, r0
    c2f8:	cmpne	sl, r0
    c2fc:	beq	cf90 <MyGame_Example_Monster_parse_json_table+0x41f0>
    c300:	mov	sl, r0
    c304:	b	b090 <MyGame_Example_Monster_parse_json_table+0x22f0>
    c308:	ldr	r0, [r9]
    c30c:	bl	0 <flatcc_builder_end_vector>
    c310:	cmp	r0, #0
    c314:	str	r0, [sp, #324]	; 0x144
    c318:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c31c:	mov	r1, #9
    c320:	ldr	r0, [r9]
    c324:	bl	0 <flatcc_builder_table_add_offset>
    c328:	cmp	r0, #0
    c32c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c330:	ldr	r3, [sp, #324]	; 0x144
    c334:	str	r3, [r0]
    c338:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c33c:	mov	r1, sl
    c340:	mov	r2, r8
    c344:	mov	r0, r9
    c348:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c34c:	mov	sl, r0
    c350:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c354:	mov	r1, sl
    c358:	mov	r2, r8
    c35c:	mov	r0, r9
    c360:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c364:	mov	sl, r0
    c368:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c36c:	mov	sl, r8
    c370:	b	8fb0 <MyGame_Example_Monster_parse_json_table+0x210>
    c374:	mov	r1, sl
    c378:	mov	r3, #5
    c37c:	mov	r2, r8
    c380:	mov	r0, r9
    c384:	bl	0 <flatcc_json_parser_set_error>
    c388:	mov	sl, r0
    c38c:	b	b53c <MyGame_Example_Monster_parse_json_table+0x279c>
    c390:	mov	r1, sl
    c394:	mov	r3, #5
    c398:	mov	r2, r8
    c39c:	mov	r0, r9
    c3a0:	bl	0 <flatcc_json_parser_set_error>
    c3a4:	mov	sl, r0
    c3a8:	b	9b40 <MyGame_Example_Monster_parse_json_table+0xda0>
    c3ac:	ldr	r1, [sp, #340]	; 0x154
    c3b0:	add	r3, sp, #344	; 0x158
    c3b4:	ldrd	r2, [r3]
    c3b8:	cmp	r1, #0
    c3bc:	beq	c7ac <MyGame_Example_Monster_parse_json_table+0x3a0c>
    c3c0:	cmp	r3, #0
    c3c4:	cmpeq	r2, #128	; 0x80
    c3c8:	rsbls	r2, r2, #0
    c3cc:	sxtbls	r2, r2
    c3d0:	strbls	r2, [sp, #336]	; 0x150
    c3d4:	bls	8fe4 <MyGame_Example_Monster_parse_json_table+0x244>
    c3d8:	mov	r1, r0
    c3dc:	mov	r3, #8
    c3e0:	mov	r2, r8
    c3e4:	mov	r0, r9
    c3e8:	bl	0 <flatcc_json_parser_set_error>
    c3ec:	mov	sl, r0
    c3f0:	cmp	r4, sl
    c3f4:	beq	8fb0 <MyGame_Example_Monster_parse_json_table+0x210>
    c3f8:	add	r3, sp, #336	; 0x150
    c3fc:	ldrsb	r2, [r3]
    c400:	b	8fe4 <MyGame_Example_Monster_parse_json_table+0x244>
    c404:	ldrb	r3, [r1, #1]
    c408:	cmp	r3, #32
    c40c:	addhi	r1, r1, #1
    c410:	bls	aef0 <MyGame_Example_Monster_parse_json_table+0x2150>
    c414:	b	af00 <MyGame_Example_Monster_parse_json_table+0x2160>
    c418:	mov	r1, sl
    c41c:	mov	r2, r8
    c420:	mov	r0, r9
    c424:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c428:	mov	sl, r0
    c42c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c430:	ldrb	r3, [r1, #1]
    c434:	cmp	r3, #32
    c438:	addhi	r1, r1, #1
    c43c:	bls	aaec <MyGame_Example_Monster_parse_json_table+0x1d4c>
    c440:	b	aafc <MyGame_Example_Monster_parse_json_table+0x1d5c>
    c444:	mov	r3, #0
    c448:	add	r4, sl, #16
    c44c:	mov	r1, r8
    c450:	mov	r0, r4
    c454:	str	r3, [sp, #256]	; 0x100
    c458:	bl	0 <flatcc_json_parser_symbol_part_ext>
    c45c:	and	r3, r1, #-16777216	; 0xff000000
    c460:	str	r3, [sp, #260]	; 0x104
    c464:	add	r3, sp, #256	; 0x100
    c468:	ldrd	r2, [r3]
    c46c:	cmp	r3, #1929379840	; 0x73000000
    c470:	cmpeq	r2, #0
    c474:	bne	c7f8 <MyGame_Example_Monster_parse_json_table+0x3a58>
    c478:	sub	r3, r8, r4
    c47c:	cmp	r3, #1
    c480:	ble	cc88 <MyGame_Example_Monster_parse_json_table+0x3ee8>
    c484:	mov	r3, #1
    c488:	mov	r2, r8
    c48c:	mov	r1, r4
    c490:	mov	r0, r9
    c494:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    c498:	cmp	r4, r0
    c49c:	mov	sl, r0
    c4a0:	beq	cc84 <MyGame_Example_Monster_parse_json_table+0x3ee4>
    c4a4:	mov	r2, #8
    c4a8:	mvn	r3, #-536870912	; 0xe0000000
    c4ac:	ldr	r0, [r9]
    c4b0:	mov	r1, r2
    c4b4:	bl	0 <flatcc_builder_start_vector>
    c4b8:	cmp	r0, #0
    c4bc:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c4c0:	mov	r1, sl
    c4c4:	add	r3, sp, #320	; 0x140
    c4c8:	mov	r2, r8
    c4cc:	mov	r0, r9
    c4d0:	bl	ed0 <flatcc_json_parser_array_start>
    c4d4:	ldr	r3, [sp, #320]	; 0x140
    c4d8:	mov	sl, r0
    c4dc:	cmp	r3, #0
    c4e0:	beq	d0c8 <MyGame_Example_Monster_parse_json_table+0x4328>
    c4e4:	vldr	d8, [pc, #996]	; c8d0 <MyGame_Example_Monster_parse_json_table+0x3b30>
    c4e8:	ldr	r5, [pc, #1000]	; c8d8 <MyGame_Example_Monster_parse_json_table+0x3b38>
    c4ec:	b	c520 <MyGame_Example_Monster_parse_json_table+0x3780>
    c4f0:	add	fp, sp, #344	; 0x158
    c4f4:	ldrd	sl, [fp]
    c4f8:	mov	r1, r0
    c4fc:	add	r3, sp, #320	; 0x140
    c500:	mov	r2, r8
    c504:	mov	r0, r9
    c508:	strd	sl, [r4]
    c50c:	bl	3144 <flatcc_json_parser_array_end>
    c510:	ldr	r3, [sp, #320]	; 0x140
    c514:	mov	sl, r0
    c518:	cmp	r3, #0
    c51c:	beq	d0c8 <MyGame_Example_Monster_parse_json_table+0x4328>
    c520:	mov	r1, #1
    c524:	ldr	r0, [r9]
    c528:	vstr	d8, [sp, #344]	; 0x158
    c52c:	bl	0 <flatcc_builder_extend_vector>
    c530:	subs	r4, r0, #0
    c534:	mov	r1, sl
    c538:	add	r3, sp, #344	; 0x158
    c53c:	mov	r2, r8
    c540:	mov	r0, r9
    c544:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c548:	bl	0 <flatcc_json_parser_double>
    c54c:	cmp	r0, sl
    c550:	bne	c4f0 <MyGame_Example_Monster_parse_json_table+0x3750>
    c554:	add	r1, sp, #344	; 0x158
    c558:	mov	r3, r5
    c55c:	mov	r2, r8
    c560:	mov	r0, r9
    c564:	str	r1, [sp]
    c568:	mov	r1, sl
    c56c:	bl	11a4 <flatcc_json_parser_symbolic_double>
    c570:	cmp	r8, r0
    c574:	cmpne	r0, sl
    c578:	bne	c4f0 <MyGame_Example_Monster_parse_json_table+0x3750>
    c57c:	b	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    c580:	ldr	r0, [r9]
    c584:	bl	0 <flatcc_builder_end_vector>
    c588:	cmp	r0, #0
    c58c:	str	r0, [sp, #324]	; 0x144
    c590:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c594:	mov	r1, #31
    c598:	ldr	r0, [r9]
    c59c:	bl	0 <flatcc_builder_table_add_offset>
    c5a0:	cmp	r0, #0
    c5a4:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c5a8:	ldr	r3, [sp, #324]	; 0x144
    c5ac:	str	r3, [r0]
    c5b0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c5b4:	mov	r7, r8
    c5b8:	b	9a70 <MyGame_Example_Monster_parse_json_table+0xcd0>
    c5bc:	ldrd	r6, [sp, #16]
    c5c0:	add	r3, sp, #272	; 0x110
    c5c4:	mov	r0, sl
    c5c8:	strd	r4, [r3]
    c5cc:	mov	sl, r0
    c5d0:	mov	r1, sl
    c5d4:	mov	r3, #33	; 0x21
    c5d8:	mov	r2, r8
    c5dc:	mov	r0, r9
    c5e0:	bl	0 <flatcc_json_parser_set_error>
    c5e4:	ldr	r3, [sp, #324]	; 0x144
    c5e8:	mov	sl, r0
    c5ec:	cmp	r3, #0
    c5f0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c5f4:	mov	r1, #14
    c5f8:	ldr	r0, [r9]
    c5fc:	bl	0 <flatcc_builder_table_add_offset>
    c600:	cmp	r0, #0
    c604:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c608:	ldr	r3, [sp, #324]	; 0x144
    c60c:	str	r3, [r0]
    c610:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c614:	ldr	r0, [r9]
    c618:	bl	0 <flatcc_builder_end_vector>
    c61c:	cmp	r0, #0
    c620:	str	r0, [sp, #324]	; 0x144
    c624:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c628:	mov	r1, #30
    c62c:	ldr	r0, [r9]
    c630:	bl	0 <flatcc_builder_table_add_offset>
    c634:	cmp	r0, #0
    c638:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c63c:	ldr	r3, [sp, #324]	; 0x144
    c640:	str	r3, [r0]
    c644:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c648:	ldr	r3, [sp, #340]	; 0x154
    c64c:	cmp	r3, #0
    c650:	bne	cf38 <MyGame_Example_Monster_parse_json_table+0x4198>
    c654:	add	r3, sp, #344	; 0x158
    c658:	mov	r1, #0
    c65c:	ldrd	r2, [r3]
    c660:	movw	r0, #65535	; 0xffff
    c664:	cmp	r3, r1
    c668:	cmpeq	r2, r0
    c66c:	bhi	cfac <MyGame_Example_Monster_parse_json_table+0x420c>
    c670:	add	r3, sp, #316	; 0x13c
    c674:	uxth	r2, r2
    c678:	add	r3, r3, #2
    c67c:	mov	sl, r7
    c680:	strh	r2, [r3]
    c684:	b	9aac <MyGame_Example_Monster_parse_json_table+0xd0c>
    c688:	mov	r1, sl
    c68c:	mov	r2, r8
    c690:	mov	r0, r9
    c694:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c698:	mov	sl, r0
    c69c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c6a0:	ldrb	r3, [r1, #1]
    c6a4:	cmp	r3, #32
    c6a8:	addhi	r1, r1, #1
    c6ac:	bls	a928 <MyGame_Example_Monster_parse_json_table+0x1b88>
    c6b0:	b	a938 <MyGame_Example_Monster_parse_json_table+0x1b98>
    c6b4:	ldrb	r3, [r1, #1]
    c6b8:	cmp	r3, #32
    c6bc:	addhi	r1, r1, #1
    c6c0:	bls	b028 <MyGame_Example_Monster_parse_json_table+0x2288>
    c6c4:	b	b038 <MyGame_Example_Monster_parse_json_table+0x2298>
    c6c8:	mov	r1, r4
    c6cc:	mov	r2, r8
    c6d0:	mov	r0, r9
    c6d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6d8:	mov	sl, r0
    c6dc:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c6e0:	mov	r4, r0
    c6e4:	mov	r1, r4
    c6e8:	mov	r2, r8
    c6ec:	mov	r0, r9
    c6f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c6f4:	mov	sl, r0
    c6f8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c6fc:	ldrd	r6, [sp, #16]
    c700:	ldr	r0, [r9]
    c704:	bl	0 <flatcc_builder_end_vector>
    c708:	cmp	r0, #0
    c70c:	str	r0, [sp, #324]	; 0x144
    c710:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c714:	mov	r1, #24
    c718:	ldr	r0, [r9]
    c71c:	bl	0 <flatcc_builder_table_add_offset>
    c720:	cmp	r0, #0
    c724:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    c728:	ldr	r3, [sp, #324]	; 0x144
    c72c:	str	r3, [r0]
    c730:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c734:	add	r3, r1, #1
    c738:	str	r3, [sp, #120]	; 0x78
    c73c:	sub	r3, r8, r3
    c740:	cmp	r3, #1
    c744:	ble	c758 <MyGame_Example_Monster_parse_json_table+0x39b8>
    c748:	ldrb	r3, [r1, #1]
    c74c:	cmp	r3, #32
    c750:	bhi	af28 <MyGame_Example_Monster_parse_json_table+0x2188>
    c754:	beq	d0fc <MyGame_Example_Monster_parse_json_table+0x435c>
    c758:	mov	r2, r8
    c75c:	mov	r0, r9
    c760:	ldr	r1, [sp, #120]	; 0x78
    c764:	bl	0 <flatcc_json_parser_space_ext>
    c768:	str	r0, [sp, #120]	; 0x78
    c76c:	b	af28 <MyGame_Example_Monster_parse_json_table+0x2188>
    c770:	add	r3, r1, #1
    c774:	mov	r2, r3
    c778:	sub	r3, r8, r3
    c77c:	cmp	r3, #1
    c780:	ble	c794 <MyGame_Example_Monster_parse_json_table+0x39f4>
    c784:	ldrb	r3, [r1, #1]
    c788:	cmp	r3, #32
    c78c:	bhi	ab24 <MyGame_Example_Monster_parse_json_table+0x1d84>
    c790:	beq	d0b0 <MyGame_Example_Monster_parse_json_table+0x4310>
    c794:	mov	r1, r2
    c798:	mov	r0, r9
    c79c:	mov	r2, r8
    c7a0:	bl	0 <flatcc_json_parser_space_ext>
    c7a4:	mov	r2, r0
    c7a8:	b	ab24 <MyGame_Example_Monster_parse_json_table+0x1d84>
    c7ac:	cmp	r3, #0
    c7b0:	cmpeq	r2, #127	; 0x7f
    c7b4:	sxtbls	r2, r2
    c7b8:	strbls	r2, [sp, #336]	; 0x150
    c7bc:	bls	8fe4 <MyGame_Example_Monster_parse_json_table+0x244>
    c7c0:	mov	r1, r0
    c7c4:	mov	r3, #7
    c7c8:	mov	r2, r8
    c7cc:	mov	r0, r9
    c7d0:	bl	0 <flatcc_json_parser_set_error>
    c7d4:	mov	sl, r0
    c7d8:	b	c3f0 <MyGame_Example_Monster_parse_json_table+0x3650>
    c7dc:	mov	r4, r0
    c7e0:	mov	r1, r4
    c7e4:	mov	r2, r8
    c7e8:	mov	r0, r9
    c7ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c7f0:	mov	sl, r0
    c7f4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c7f8:	mov	r1, r4
    c7fc:	mov	r2, r8
    c800:	mov	r0, r9
    c804:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c808:	mov	sl, r0
    c80c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c810:	mov	r1, sl
    c814:	mov	r2, r8
    c818:	mov	r0, r9
    c81c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c820:	mov	sl, r0
    c824:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c828:	mov	r1, r0
    c82c:	add	r0, sp, #344	; 0x158
    c830:	ldr	r3, [pc, #164]	; c8dc <MyGame_Example_Monster_parse_json_table+0x3b3c>
    c834:	mov	r2, r8
    c838:	str	r0, [sp]
    c83c:	mov	r0, r9
    c840:	bl	fa4 <flatcc_json_parser_symbolic_float>
    c844:	cmp	r8, r0
    c848:	cmpne	sl, r0
    c84c:	beq	cf90 <MyGame_Example_Monster_parse_json_table+0x41f0>
    c850:	mov	sl, r0
    c854:	b	b350 <MyGame_Example_Monster_parse_json_table+0x25b0>
    c858:	mov	r1, r0
    c85c:	add	r0, sp, #344	; 0x158
    c860:	ldr	r3, [pc, #120]	; c8e0 <MyGame_Example_Monster_parse_json_table+0x3b40>
    c864:	mov	r2, r8
    c868:	str	r0, [sp]
    c86c:	mov	r0, r9
    c870:	bl	fa4 <flatcc_json_parser_symbolic_float>
    c874:	cmp	r8, r0
    c878:	cmpne	sl, r0
    c87c:	beq	cf90 <MyGame_Example_Monster_parse_json_table+0x41f0>
    c880:	mov	sl, r0
    c884:	b	b1bc <MyGame_Example_Monster_parse_json_table+0x241c>
    c888:	mov	r3, #29
    c88c:	mov	r2, r9
    c890:	mov	r0, fp
    c894:	bl	0 <flatcc_json_parser_set_error>
    c898:	mov	sl, r0
    c89c:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    c8a0:	mov	r1, r0
    c8a4:	add	r0, sp, #344	; 0x158
    c8a8:	ldr	r3, [pc, #52]	; c8e4 <MyGame_Example_Monster_parse_json_table+0x3b44>
    c8ac:	mov	r2, r8
    c8b0:	str	r0, [sp]
    c8b4:	mov	r0, r9
    c8b8:	bl	fa4 <flatcc_json_parser_symbolic_float>
    c8bc:	cmp	r8, r0
    c8c0:	cmpne	sl, r0
    c8c4:	beq	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    c8c8:	mov	sl, r0
    c8cc:	b	a380 <MyGame_Example_Monster_parse_json_table+0x15e0>
	...
    c8d8:	.word	0x0000027c
    c8dc:	.word	0x0000017c
    c8e0:	.word	0x00000188
    c8e4:	.word	0x000001f8
    c8e8:	.word	0x000001e0
    c8ec:	.word	0x000001ec
    c8f0:	.word	0x00000148
    c8f4:	.word	0x00000210
    c8f8:	.word	0x00000228
    c8fc:	.word	0x0000021c
    c900:	.word	0x00000258
    c904:	.word	0x00000270
    c908:	.word	0x00000240
    c90c:	.word	0x00000234
    c910:	.word	0x00000264
    c914:	.word	0x0000024c
    c918:	ldrb	r1, [r0, #1]
    c91c:	add	r2, r0, #1
    c920:	cmp	r1, #114	; 0x72
    c924:	bne	90e0 <MyGame_Example_Monster_parse_json_table+0x340>
    c928:	ldrb	r1, [r2, #1]!
    c92c:	cmp	r1, #117	; 0x75
    c930:	bne	90e0 <MyGame_Example_Monster_parse_json_table+0x340>
    c934:	ldrb	r2, [r2, #1]
    c938:	cmp	r2, #101	; 0x65
    c93c:	moveq	r3, #1
    c940:	addeq	sl, r0, #4
    c944:	strbeq	r3, [sp, #336]	; 0x150
    c948:	bne	90e0 <MyGame_Example_Monster_parse_json_table+0x340>
    c94c:	b	ae5c <MyGame_Example_Monster_parse_json_table+0x20bc>
    c950:	ldr	r3, [sp, #340]	; 0x154
    c954:	cmp	r3, #0
    c958:	str	r3, [sp, #16]
    c95c:	bne	d114 <MyGame_Example_Monster_parse_json_table+0x4374>
    c960:	add	r3, sp, #344	; 0x158
    c964:	ldrd	r2, [r3]
    c968:	cmp	r3, #0
    c96c:	cmpeq	r2, #255	; 0xff
    c970:	bhi	d140 <MyGame_Example_Monster_parse_json_table+0x43a0>
    c974:	uxtb	r3, r2
    c978:	mov	sl, r0
    c97c:	adds	r3, r3, #0
    c980:	movne	r3, #1
    c984:	strb	r3, [sp, #336]	; 0x150
    c988:	b	ae54 <MyGame_Example_Monster_parse_json_table+0x20b4>
    c98c:	add	r1, r1, #1
    c990:	mov	r2, r8
    c994:	mov	r0, r9
    c998:	bl	8f0 <flatcc_json_parser_space>
    c99c:	mov	r3, r0
    c9a0:	b	b060 <MyGame_Example_Monster_parse_json_table+0x22c0>
    c9a4:	add	r1, r1, #1
    c9a8:	mov	r2, r8
    c9ac:	mov	r0, r9
    c9b0:	bl	8f0 <flatcc_json_parser_space>
    c9b4:	mov	r1, r0
    c9b8:	b	a960 <MyGame_Example_Monster_parse_json_table+0x1bc0>
    c9bc:	mov	r4, r0
    c9c0:	mov	r1, r4
    c9c4:	mov	r2, r8
    c9c8:	mov	r0, r9
    c9cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c9d0:	mov	sl, r0
    c9d4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    c9d8:	ldrd	r6, [sp, #120]	; 0x78
    c9dc:	ldr	r3, [r9, #24]
    c9e0:	cmp	r3, #0
    c9e4:	bne	b614 <MyGame_Example_Monster_parse_json_table+0x2874>
    c9e8:	ldr	r0, [r9]
    c9ec:	bl	0 <flatcc_builder_end_table>
    c9f0:	cmp	r0, #0
    c9f4:	str	r0, [sp, #324]	; 0x144
    c9f8:	bne	b638 <MyGame_Example_Monster_parse_json_table+0x2898>
    c9fc:	b	b614 <MyGame_Example_Monster_parse_json_table+0x2874>
    ca00:	mov	r4, r0
    ca04:	mov	r1, r4
    ca08:	mov	r2, r8
    ca0c:	mov	r0, r9
    ca10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca14:	mov	sl, r0
    ca18:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ca1c:	mov	r4, r0
    ca20:	mov	r1, r4
    ca24:	mov	r2, r8
    ca28:	mov	r0, r9
    ca2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca30:	mov	sl, r0
    ca34:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ca38:	mov	r3, #0
    ca3c:	add	sl, sl, #8
    ca40:	mov	r1, r8
    ca44:	mov	r0, sl
    ca48:	str	r3, [sp, #280]	; 0x118
    ca4c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ca50:	and	r3, r1, #-16777216	; 0xff000000
    ca54:	str	r3, [sp, #284]	; 0x11c
    ca58:	add	r3, sp, #280	; 0x118
    ca5c:	ldrd	r2, [r3]
    ca60:	cmp	r3, #1627389952	; 0x61000000
    ca64:	cmpeq	r2, #0
    ca68:	bne	ceec <MyGame_Example_Monster_parse_json_table+0x414c>
    ca6c:	sub	r3, r8, sl
    ca70:	cmp	r3, #1
    ca74:	ble	d198 <MyGame_Example_Monster_parse_json_table+0x43f8>
    ca78:	mov	r3, #1
    ca7c:	mov	r2, r8
    ca80:	mov	r1, sl
    ca84:	mov	r0, r9
    ca88:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    ca8c:	cmp	sl, r0
    ca90:	mov	r4, r0
    ca94:	beq	d198 <MyGame_Example_Monster_parse_json_table+0x43f8>
    ca98:	mov	sl, #0
    ca9c:	add	r5, sp, #344	; 0x158
    caa0:	mov	fp, #0
    caa4:	mov	r1, r0
    caa8:	mov	r3, r5
    caac:	mov	r2, r8
    cab0:	mov	r0, r9
    cab4:	strd	sl, [r5]
    cab8:	bl	92c <flatcc_json_parser_int64>
    cabc:	cmp	r0, r4
    cac0:	mov	sl, r0
    cac4:	beq	d354 <MyGame_Example_Monster_parse_json_table+0x45b4>
    cac8:	add	r3, sp, #344	; 0x158
    cacc:	ldrd	r2, [r3]
    cad0:	orrs	r3, r2, r3
    cad4:	bne	cae4 <MyGame_Example_Monster_parse_json_table+0x3d44>
    cad8:	ldr	r3, [r9, #8]
    cadc:	tst	r3, #2
    cae0:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cae4:	mov	r3, #8
    cae8:	mov	r1, #22
    caec:	ldr	r0, [r9]
    caf0:	mov	r2, r3
    caf4:	bl	0 <flatcc_builder_table_add>
    caf8:	cmp	r0, #0
    cafc:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    cb00:	add	r3, sp, #344	; 0x158
    cb04:	ldrd	r2, [r3]
    cb08:	strd	r2, [r0]
    cb0c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cb10:	mov	r1, r0
    cb14:	add	r0, sp, #344	; 0x158
    cb18:	ldr	r3, [pc, #-568]	; c8e8 <MyGame_Example_Monster_parse_json_table+0x3b48>
    cb1c:	mov	r2, r8
    cb20:	str	r0, [sp]
    cb24:	mov	r0, r9
    cb28:	bl	2600 <flatcc_json_parser_symbolic_int64>
    cb2c:	cmp	r8, r0
    cb30:	cmpne	sl, r0
    cb34:	beq	d3fc <MyGame_Example_Monster_parse_json_table+0x465c>
    cb38:	mov	sl, r0
    cb3c:	b	c240 <MyGame_Example_Monster_parse_json_table+0x34a0>
    cb40:	ldrd	r6, [sp, #16]
    cb44:	add	r3, sp, #272	; 0x110
    cb48:	strd	r4, [r3]
    cb4c:	ldr	r3, [r9, #24]
    cb50:	cmp	r3, #0
    cb54:	bne	c5d0 <MyGame_Example_Monster_parse_json_table+0x3830>
    cb58:	ldr	r0, [r9]
    cb5c:	bl	0 <flatcc_builder_end_table>
    cb60:	cmp	r0, #0
    cb64:	str	r0, [sp, #324]	; 0x144
    cb68:	bne	c5f4 <MyGame_Example_Monster_parse_json_table+0x3854>
    cb6c:	b	c5d0 <MyGame_Example_Monster_parse_json_table+0x3830>
    cb70:	mov	r1, sl
    cb74:	mov	r2, r8
    cb78:	mov	r0, r9
    cb7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb80:	mov	sl, r0
    cb84:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cb88:	mov	sl, r4
    cb8c:	b	a0b0 <MyGame_Example_Monster_parse_json_table+0x1310>
    cb90:	ldr	r0, [r9]
    cb94:	bl	0 <flatcc_builder_start_offset_vector>
    cb98:	cmp	r0, #0
    cb9c:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cba0:	mov	r1, sl
    cba4:	add	r3, sp, #320	; 0x140
    cba8:	mov	r2, r8
    cbac:	mov	r0, r9
    cbb0:	bl	ed0 <flatcc_json_parser_array_start>
    cbb4:	ldr	r3, [sp, #320]	; 0x140
    cbb8:	mov	sl, r0
    cbbc:	cmp	r3, #0
    cbc0:	beq	cc2c <MyGame_Example_Monster_parse_json_table+0x3e8c>
    cbc4:	add	r4, sp, #324	; 0x144
    cbc8:	mov	r1, sl
    cbcc:	mov	r3, r4
    cbd0:	mov	r2, r8
    cbd4:	mov	r0, r9
    cbd8:	bl	8da0 <MyGame_Example_Monster_parse_json_table>
    cbdc:	ldr	r3, [sp, #324]	; 0x144
    cbe0:	mov	sl, r0
    cbe4:	mov	r1, #1
    cbe8:	cmp	r3, #0
    cbec:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cbf0:	ldr	r0, [r9]
    cbf4:	bl	0 <flatcc_builder_extend_offset_vector>
    cbf8:	subs	ip, r0, #0
    cbfc:	add	r3, sp, #320	; 0x140
    cc00:	mov	r2, r8
    cc04:	mov	r1, sl
    cc08:	mov	r0, r9
    cc0c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cc10:	ldr	lr, [sp, #324]	; 0x144
    cc14:	str	lr, [ip]
    cc18:	bl	3144 <flatcc_json_parser_array_end>
    cc1c:	ldr	r3, [sp, #320]	; 0x140
    cc20:	mov	sl, r0
    cc24:	cmp	r3, #0
    cc28:	bne	cbc8 <MyGame_Example_Monster_parse_json_table+0x3e28>
    cc2c:	ldr	r0, [r9]
    cc30:	bl	0 <flatcc_builder_end_offset_vector>
    cc34:	cmp	r0, #0
    cc38:	str	r0, [sp, #324]	; 0x144
    cc3c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cc40:	mov	r1, #11
    cc44:	ldr	r0, [r9]
    cc48:	bl	0 <flatcc_builder_table_add_offset>
    cc4c:	cmp	r0, #0
    cc50:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cc54:	ldr	r3, [sp, #324]	; 0x144
    cc58:	str	r3, [r0]
    cc5c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cc60:	mov	fp, r9
    cc64:	mov	sl, r4
    cc68:	mov	r9, r8
    cc6c:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    cc70:	ldrb	r3, [fp, #2]
    cc74:	cmp	r3, #32
    cc78:	bls	b968 <MyGame_Example_Monster_parse_json_table+0x2bc8>
    cc7c:	add	sl, fp, #2
    cc80:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cc84:	mov	r4, r0
    cc88:	mov	r1, r4
    cc8c:	mov	r2, r8
    cc90:	mov	r0, r9
    cc94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc98:	mov	sl, r0
    cc9c:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cca0:	mov	r1, r0
    cca4:	add	r0, sp, #344	; 0x158
    cca8:	ldr	r3, [pc, #-964]	; c8ec <MyGame_Example_Monster_parse_json_table+0x3b4c>
    ccac:	mov	r2, r8
    ccb0:	str	r0, [sp]
    ccb4:	mov	r0, r9
    ccb8:	bl	fa4 <flatcc_json_parser_symbolic_float>
    ccbc:	cmp	r8, r0
    ccc0:	cmpne	sl, r0
    ccc4:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    ccc8:	mov	sl, r0
    cccc:	b	ad8c <MyGame_Example_Monster_parse_json_table+0x1fec>
    ccd0:	mov	sl, r0
    ccd4:	mov	r3, #0
    ccd8:	add	sl, sl, #8
    ccdc:	mov	r1, r8
    cce0:	mov	r0, sl
    cce4:	str	r3, [sp, #304]	; 0x130
    cce8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ccec:	and	r3, r1, #-16777216	; 0xff000000
    ccf0:	str	r3, [sp, #308]	; 0x134
    ccf4:	add	r3, sp, #304	; 0x130
    ccf8:	ldrd	r2, [r3]
    ccfc:	cmp	r3, #1627389952	; 0x61000000
    cd00:	cmpeq	r2, #0
    cd04:	bne	d034 <MyGame_Example_Monster_parse_json_table+0x4294>
    cd08:	sub	r3, r8, sl
    cd0c:	cmp	r3, #1
    cd10:	ble	d1d0 <MyGame_Example_Monster_parse_json_table+0x4430>
    cd14:	mov	r3, #1
    cd18:	mov	r2, r8
    cd1c:	mov	r1, sl
    cd20:	mov	r0, r9
    cd24:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    cd28:	cmp	sl, r0
    cd2c:	mov	r4, r0
    cd30:	beq	d1d0 <MyGame_Example_Monster_parse_json_table+0x4430>
    cd34:	mov	sl, #0
    cd38:	add	r5, sp, #344	; 0x158
    cd3c:	mov	fp, #0
    cd40:	mov	r1, r0
    cd44:	mov	r3, r5
    cd48:	mov	r2, r8
    cd4c:	mov	r0, r9
    cd50:	strd	sl, [r5]
    cd54:	bl	a08 <flatcc_json_parser_uint64.constprop.29>
    cd58:	cmp	r0, r4
    cd5c:	mov	sl, r0
    cd60:	beq	d380 <MyGame_Example_Monster_parse_json_table+0x45e0>
    cd64:	add	r3, sp, #344	; 0x158
    cd68:	ldrd	r2, [r3]
    cd6c:	orrs	r3, r2, r3
    cd70:	bne	cd80 <MyGame_Example_Monster_parse_json_table+0x3fe0>
    cd74:	ldr	r3, [r9, #8]
    cd78:	tst	r3, #2
    cd7c:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cd80:	mov	r3, #8
    cd84:	mov	r1, #23
    cd88:	ldr	r0, [r9]
    cd8c:	mov	r2, r3
    cd90:	bl	0 <flatcc_builder_table_add>
    cd94:	cmp	r0, #0
    cd98:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    cd9c:	add	r3, sp, #344	; 0x158
    cda0:	ldrd	r2, [r3]
    cda4:	strd	r2, [r0]
    cda8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cdac:	mov	r1, sl
    cdb0:	mov	r2, r8
    cdb4:	mov	r0, r9
    cdb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cdbc:	mov	sl, r0
    cdc0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cdc4:	add	sl, sl, #8
    cdc8:	mov	r1, r8
    cdcc:	mov	r0, sl
    cdd0:	mov	fp, #0
    cdd4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    cdd8:	and	r3, r1, #-16777216	; 0xff000000
    cddc:	str	fp, [sp, #296]	; 0x128
    cde0:	str	r3, [sp, #300]	; 0x12c
    cde4:	add	r3, sp, #296	; 0x128
    cde8:	ldrd	r2, [r3]
    cdec:	cmp	r3, #1627389952	; 0x61000000
    cdf0:	cmpeq	r2, #0
    cdf4:	bne	d04c <MyGame_Example_Monster_parse_json_table+0x42ac>
    cdf8:	sub	r3, r8, sl
    cdfc:	cmp	r3, #1
    ce00:	ble	d1e8 <MyGame_Example_Monster_parse_json_table+0x4448>
    ce04:	mov	r3, #1
    ce08:	mov	r2, r8
    ce0c:	mov	r1, sl
    ce10:	mov	r0, r9
    ce14:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    ce18:	cmp	sl, r0
    ce1c:	mov	r4, r0
    ce20:	beq	d1e8 <MyGame_Example_Monster_parse_json_table+0x4448>
    ce24:	add	r5, sp, #344	; 0x158
    ce28:	mov	r1, r0
    ce2c:	str	fp, [sp, #344]	; 0x158
    ce30:	mov	r2, r8
    ce34:	mov	r3, r5
    ce38:	mov	r0, r9
    ce3c:	bl	b64 <flatcc_json_parser_uint32.constprop.28>
    ce40:	cmp	r0, r4
    ce44:	mov	sl, r0
    ce48:	beq	d3c8 <MyGame_Example_Monster_parse_json_table+0x4628>
    ce4c:	ldr	r3, [sp, #344]	; 0x158
    ce50:	cmp	r3, #0
    ce54:	bne	ce64 <MyGame_Example_Monster_parse_json_table+0x40c4>
    ce58:	ldr	r3, [r9, #8]
    ce5c:	tst	r3, #2
    ce60:	beq	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ce64:	mov	r3, #4
    ce68:	mov	r1, #21
    ce6c:	ldr	r0, [r9]
    ce70:	mov	r2, r3
    ce74:	bl	0 <flatcc_builder_table_add>
    ce78:	cmp	r0, #0
    ce7c:	beq	d1c0 <MyGame_Example_Monster_parse_json_table+0x4420>
    ce80:	ldr	r3, [sp, #344]	; 0x158
    ce84:	str	r3, [r0]
    ce88:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    ce8c:	ldr	r0, [r9]
    ce90:	bl	0 <flatcc_builder_end_vector>
    ce94:	cmp	r0, #0
    ce98:	str	r0, [sp, #324]	; 0x144
    ce9c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cea0:	mov	r1, #32
    cea4:	ldr	r0, [r9]
    cea8:	bl	0 <flatcc_builder_table_add_offset>
    ceac:	cmp	r0, #0
    ceb0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    ceb4:	ldr	r3, [sp, #324]	; 0x144
    ceb8:	str	r3, [r0]
    cebc:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cec0:	mov	r1, r0
    cec4:	ldr	r3, [pc, #-1500]	; c8f0 <MyGame_Example_Monster_parse_json_table+0x3b50>
    cec8:	mov	r2, r8
    cecc:	mov	r0, r9
    ced0:	str	fp, [sp]
    ced4:	bl	1a4c <flatcc_json_parser_symbolic_int16>
    ced8:	cmp	r8, r0
    cedc:	cmpne	sl, r0
    cee0:	beq	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    cee4:	mov	sl, r0
    cee8:	b	a45c <MyGame_Example_Monster_parse_json_table+0x16bc>
    ceec:	mov	r1, sl
    cef0:	mov	r2, r8
    cef4:	mov	r0, r9
    cef8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cefc:	mov	sl, r0
    cf00:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf04:	ldr	r0, [r9]
    cf08:	bl	0 <flatcc_builder_end_vector>
    cf0c:	cmp	r0, #0
    cf10:	str	r0, [sp, #324]	; 0x144
    cf14:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cf18:	mov	r1, #5
    cf1c:	ldr	r0, [r9]
    cf20:	bl	0 <flatcc_builder_table_add_offset>
    cf24:	cmp	r0, #0
    cf28:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    cf2c:	ldr	r3, [sp, #324]	; 0x144
    cf30:	str	r3, [r0]
    cf34:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cf38:	mov	r1, r0
    cf3c:	mov	r3, #8
    cf40:	mov	r2, r8
    cf44:	mov	r0, r9
    cf48:	bl	0 <flatcc_json_parser_set_error>
    cf4c:	mov	sl, r0
    cf50:	cmp	fp, sl
    cf54:	bne	9aa0 <MyGame_Example_Monster_parse_json_table+0xd00>
    cf58:	mov	r7, fp
    cf5c:	b	9a70 <MyGame_Example_Monster_parse_json_table+0xcd0>
    cf60:	mov	r1, r0
    cf64:	add	r0, sp, #344	; 0x158
    cf68:	ldr	r3, [pc, #-1660]	; c8f4 <MyGame_Example_Monster_parse_json_table+0x3b54>
    cf6c:	mov	r2, r8
    cf70:	str	r0, [sp]
    cf74:	mov	r0, r9
    cf78:	bl	1cb8 <flatcc_json_parser_symbolic_int32>
    cf7c:	cmp	r8, r0
    cf80:	cmpne	sl, r0
    cf84:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    cf88:	mov	sl, r0
    cf8c:	b	9f2c <MyGame_Example_Monster_parse_json_table+0x118c>
    cf90:	mov	r1, r0
    cf94:	mov	r3, #33	; 0x21
    cf98:	mov	r2, r8
    cf9c:	mov	r0, r9
    cfa0:	bl	0 <flatcc_json_parser_set_error>
    cfa4:	mov	sl, r0
    cfa8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cfac:	mov	r1, r7
    cfb0:	mov	r3, #7
    cfb4:	mov	r2, r8
    cfb8:	mov	r0, r9
    cfbc:	bl	0 <flatcc_json_parser_set_error>
    cfc0:	mov	sl, r0
    cfc4:	b	cf50 <MyGame_Example_Monster_parse_json_table+0x41b0>
    cfc8:	mov	r4, r0
    cfcc:	mov	r1, r4
    cfd0:	mov	r2, r8
    cfd4:	mov	r0, r9
    cfd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cfdc:	mov	sl, r0
    cfe0:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    cfe4:	mov	fp, r9
    cfe8:	mov	r9, r8
    cfec:	b	9714 <MyGame_Example_Monster_parse_json_table+0x974>
    cff0:	add	r3, sp, #272	; 0x110
    cff4:	ldrd	r6, [sp, #16]
    cff8:	strd	r4, [r3]
    cffc:	b	c5d0 <MyGame_Example_Monster_parse_json_table+0x3830>
    d000:	ldr	r0, [r9]
    d004:	bl	0 <flatcc_builder_end_offset_vector>
    d008:	cmp	r0, #0
    d00c:	str	r0, [sp, #324]	; 0x144
    d010:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d014:	mov	r1, #28
    d018:	ldr	r0, [r9]
    d01c:	bl	0 <flatcc_builder_table_add_offset>
    d020:	cmp	r0, #0
    d024:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d028:	ldr	r3, [sp, #324]	; 0x144
    d02c:	str	r3, [r0]
    d030:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d034:	mov	r1, sl
    d038:	mov	r2, r8
    d03c:	mov	r0, r9
    d040:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d044:	mov	sl, r0
    d048:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d04c:	mov	r1, sl
    d050:	mov	r2, r8
    d054:	mov	r0, r9
    d058:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d05c:	mov	sl, r0
    d060:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d064:	mov	r1, sl
    d068:	mov	r2, r8
    d06c:	mov	r0, r9
    d070:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d074:	mov	sl, r0
    d078:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d07c:	ldr	r0, [r9]
    d080:	bl	0 <flatcc_builder_end_offset_vector>
    d084:	cmp	r0, #0
    d088:	str	r0, [sp, #324]	; 0x144
    d08c:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d090:	mov	r1, #10
    d094:	ldr	r0, [r9]
    d098:	bl	0 <flatcc_builder_table_add_offset>
    d09c:	cmp	r0, #0
    d0a0:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d0a4:	ldr	r3, [sp, #324]	; 0x144
    d0a8:	str	r3, [r0]
    d0ac:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d0b0:	ldrb	r3, [r1, #2]
    d0b4:	cmp	r3, #32
    d0b8:	addhi	r3, r1, #2
    d0bc:	movhi	r2, r3
    d0c0:	bls	c794 <MyGame_Example_Monster_parse_json_table+0x39f4>
    d0c4:	b	ab24 <MyGame_Example_Monster_parse_json_table+0x1d84>
    d0c8:	ldr	r0, [r9]
    d0cc:	bl	0 <flatcc_builder_end_vector>
    d0d0:	cmp	r0, #0
    d0d4:	str	r0, [sp, #324]	; 0x144
    d0d8:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d0dc:	mov	r1, #33	; 0x21
    d0e0:	ldr	r0, [r9]
    d0e4:	bl	0 <flatcc_builder_table_add_offset>
    d0e8:	cmp	r0, #0
    d0ec:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d0f0:	ldr	r3, [sp, #324]	; 0x144
    d0f4:	str	r3, [r0]
    d0f8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d0fc:	ldrb	r3, [r1, #2]
    d100:	cmp	r3, #32
    d104:	addhi	r3, r1, #2
    d108:	strhi	r3, [sp, #120]	; 0x78
    d10c:	bls	c758 <MyGame_Example_Monster_parse_json_table+0x39b8>
    d110:	b	af28 <MyGame_Example_Monster_parse_json_table+0x2188>
    d114:	mov	r1, r0
    d118:	mov	r3, #8
    d11c:	mov	r2, r8
    d120:	mov	r0, r9
    d124:	bl	0 <flatcc_json_parser_set_error>
    d128:	cmp	r4, r0
    d12c:	mov	sl, r0
    d130:	strb	fp, [sp, #336]	; 0x150
    d134:	bne	9108 <MyGame_Example_Monster_parse_json_table+0x368>
    d138:	mov	r5, r4
    d13c:	b	ae24 <MyGame_Example_Monster_parse_json_table+0x2084>
    d140:	mov	r1, r0
    d144:	mov	r3, #7
    d148:	mov	r2, r8
    d14c:	mov	r0, r9
    d150:	bl	0 <flatcc_json_parser_set_error>
    d154:	ldr	r3, [sp, #16]
    d158:	cmp	r4, r0
    d15c:	mov	sl, r0
    d160:	strb	r3, [sp, #336]	; 0x150
    d164:	bne	9108 <MyGame_Example_Monster_parse_json_table+0x368>
    d168:	b	d138 <MyGame_Example_Monster_parse_json_table+0x4398>
    d16c:	mov	r1, r0
    d170:	ldr	r3, [pc, #-2176]	; c8f8 <MyGame_Example_Monster_parse_json_table+0x3b58>
    d174:	mov	r2, r8
    d178:	mov	r0, r9
    d17c:	str	fp, [sp]
    d180:	bl	2600 <flatcc_json_parser_symbolic_int64>
    d184:	cmp	r8, r0
    d188:	cmpne	sl, r0
    d18c:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d190:	mov	sl, r0
    d194:	b	a7fc <MyGame_Example_Monster_parse_json_table+0x1a5c>
    d198:	mov	r1, sl
    d19c:	mov	r2, r8
    d1a0:	mov	r0, r9
    d1a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1a8:	mov	sl, r0
    d1ac:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d1b0:	mov	fp, r9
    d1b4:	mov	sl, r5
    d1b8:	mov	r9, r8
    d1bc:	b	8dec <MyGame_Example_Monster_parse_json_table+0x4c>
    d1c0:	mov	fp, r9
    d1c4:	mov	r0, sl
    d1c8:	mov	r9, r8
    d1cc:	b	c898 <MyGame_Example_Monster_parse_json_table+0x3af8>
    d1d0:	mov	r1, sl
    d1d4:	mov	r2, r8
    d1d8:	mov	r0, r9
    d1dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1e0:	mov	sl, r0
    d1e4:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d1e8:	mov	r1, sl
    d1ec:	mov	r2, r8
    d1f0:	mov	r0, r9
    d1f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1f8:	mov	sl, r0
    d1fc:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d200:	mov	r1, r0
    d204:	ldr	r3, [pc, #-2320]	; c8fc <MyGame_Example_Monster_parse_json_table+0x3b5c>
    d208:	mov	r2, r8
    d20c:	mov	r0, r9
    d210:	str	r5, [sp]
    d214:	bl	1cb8 <flatcc_json_parser_symbolic_int32>
    d218:	cmp	r8, r0
    d21c:	cmpne	sl, r0
    d220:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d224:	mov	sl, r0
    d228:	b	bf00 <MyGame_Example_Monster_parse_json_table+0x3160>
    d22c:	ldr	r3, [pc, #-2356]	; c900 <MyGame_Example_Monster_parse_json_table+0x3b60>
    d230:	mov	r2, r8
    d234:	mov	r1, r4
    d238:	mov	r0, r9
    d23c:	str	r5, [sp]
    d240:	bl	15cc <flatcc_json_parser_symbolic_uint64>
    d244:	cmp	r8, r0
    d248:	cmpne	r4, r0
    d24c:	mov	sl, r0
    d250:	bne	ba34 <MyGame_Example_Monster_parse_json_table+0x2c94>
    d254:	b	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d258:	mov	r2, #1
    d25c:	mvn	r3, #0
    d260:	mov	r1, r2
    d264:	bl	0 <flatcc_builder_start_vector>
    d268:	subs	r5, r0, #0
    d26c:	bne	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d270:	mov	r1, sl
    d274:	add	r3, sp, #320	; 0x140
    d278:	mov	r2, r8
    d27c:	mov	r0, r9
    d280:	bl	ed0 <flatcc_json_parser_array_start>
    d284:	ldr	r3, [sp, #320]	; 0x140
    d288:	mov	sl, r0
    d28c:	cmp	r3, #0
    d290:	beq	d3ac <MyGame_Example_Monster_parse_json_table+0x460c>
    d294:	ldr	fp, [pc, #-2456]	; c904 <MyGame_Example_Monster_parse_json_table+0x3b64>
    d298:	b	d2c8 <MyGame_Example_Monster_parse_json_table+0x4528>
    d29c:	ldrb	ip, [sp, #344]	; 0x158
    d2a0:	mov	r1, r0
    d2a4:	add	r3, sp, #320	; 0x140
    d2a8:	mov	r2, r8
    d2ac:	mov	r0, r9
    d2b0:	strb	ip, [r4]
    d2b4:	bl	3144 <flatcc_json_parser_array_end>
    d2b8:	ldr	r3, [sp, #320]	; 0x140
    d2bc:	mov	sl, r0
    d2c0:	cmp	r3, #0
    d2c4:	beq	d3ac <MyGame_Example_Monster_parse_json_table+0x460c>
    d2c8:	mov	r1, #1
    d2cc:	ldr	r0, [r9]
    d2d0:	strb	r5, [sp, #344]	; 0x158
    d2d4:	bl	0 <flatcc_builder_extend_vector>
    d2d8:	subs	r4, r0, #0
    d2dc:	mov	r1, sl
    d2e0:	add	r3, sp, #344	; 0x158
    d2e4:	mov	r2, r8
    d2e8:	mov	r0, r9
    d2ec:	beq	a020 <MyGame_Example_Monster_parse_json_table+0x1280>
    d2f0:	bl	aa4 <flatcc_json_parser_uint8>
    d2f4:	cmp	r0, sl
    d2f8:	bne	d29c <MyGame_Example_Monster_parse_json_table+0x44fc>
    d2fc:	add	r1, sp, #344	; 0x158
    d300:	mov	r3, fp
    d304:	mov	r2, r8
    d308:	mov	r0, r9
    d30c:	str	r1, [sp]
    d310:	mov	r1, sl
    d314:	bl	180c <flatcc_json_parser_symbolic_uint8>
    d318:	cmp	r8, r0
    d31c:	cmpne	r0, sl
    d320:	bne	d29c <MyGame_Example_Monster_parse_json_table+0x44fc>
    d324:	b	a2e8 <MyGame_Example_Monster_parse_json_table+0x1548>
    d328:	mov	r1, r0
    d32c:	ldr	r3, [pc, #-2604]	; c908 <MyGame_Example_Monster_parse_json_table+0x3b68>
    d330:	mov	r2, r8
    d334:	mov	r0, r9
    d338:	str	fp, [sp]
    d33c:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    d340:	cmp	r8, r0
    d344:	cmpne	sl, r0
    d348:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d34c:	mov	sl, r0
    d350:	b	bfb4 <MyGame_Example_Monster_parse_json_table+0x3214>
    d354:	mov	r1, r0
    d358:	ldr	r3, [pc, #-2644]	; c90c <MyGame_Example_Monster_parse_json_table+0x3b6c>
    d35c:	mov	r2, r8
    d360:	mov	r0, r9
    d364:	str	r5, [sp]
    d368:	bl	2600 <flatcc_json_parser_symbolic_int64>
    d36c:	cmp	r8, r0
    d370:	cmpne	sl, r0
    d374:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d378:	mov	sl, r0
    d37c:	b	cac8 <MyGame_Example_Monster_parse_json_table+0x3d28>
    d380:	mov	r1, r0
    d384:	ldr	r3, [pc, #-2684]	; c910 <MyGame_Example_Monster_parse_json_table+0x3b70>
    d388:	mov	r2, r8
    d38c:	mov	r0, r9
    d390:	str	r5, [sp]
    d394:	bl	15cc <flatcc_json_parser_symbolic_uint64>
    d398:	cmp	r8, r0
    d39c:	cmpne	sl, r0
    d3a0:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d3a4:	mov	sl, r0
    d3a8:	b	cd64 <MyGame_Example_Monster_parse_json_table+0x3fc4>
    d3ac:	ldr	r0, [r9]
    d3b0:	bl	0 <flatcc_builder_end_vector>
    d3b4:	str	r0, [sp, #324]	; 0x144
    d3b8:	b	9464 <MyGame_Example_Monster_parse_json_table+0x6c4>
    d3bc:	mov	fp, r9
    d3c0:	mov	r9, r8
    d3c4:	b	c898 <MyGame_Example_Monster_parse_json_table+0x3af8>
    d3c8:	mov	r1, r0
    d3cc:	ldr	r3, [pc, #-2752]	; c914 <MyGame_Example_Monster_parse_json_table+0x3b74>
    d3d0:	mov	r2, r8
    d3d4:	mov	r0, r9
    d3d8:	str	r5, [sp]
    d3dc:	bl	23bc <flatcc_json_parser_symbolic_uint32>
    d3e0:	cmp	r8, r0
    d3e4:	cmpne	sl, r0
    d3e8:	beq	d3bc <MyGame_Example_Monster_parse_json_table+0x461c>
    d3ec:	mov	sl, r0
    d3f0:	b	ce4c <MyGame_Example_Monster_parse_json_table+0x40ac>
    d3f4:	mov	sl, fp
    d3f8:	b	9698 <MyGame_Example_Monster_parse_json_table+0x8f8>
    d3fc:	add	r3, sp, #272	; 0x110
    d400:	ldrd	r6, [sp, #16]
    d404:	strd	r4, [r3]
    d408:	b	c5cc <MyGame_Example_Monster_parse_json_table+0x382c>

0000d40c <MyGame_Example_Any_parse_json_union>:
    d40c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d410:	mov	ip, #0
    d414:	mov	r5, r0
    d418:	strd	r6, [sp, #8]
    d41c:	mov	r4, r1
    d420:	mov	r6, r2
    d424:	strd	r8, [sp, #16]
    d428:	strd	sl, [sp, #24]
    d42c:	str	lr, [sp, #32]
    d430:	sub	sp, sp, #68	; 0x44
    d434:	ldr	r7, [sp, #104]	; 0x68
    d438:	str	ip, [r7]
    d43c:	cmp	r3, #4
    d440:	ldrls	pc, [pc, r3, lsl #2]
    d444:	b	dd20 <MyGame_Example_Any_parse_json_union+0x914>
    d448:	.word	0x0000d498
    d44c:	.word	0x0000d4c8
    d450:	.word	0x0000d4d4
    d454:	.word	0x0000d588
    d458:	.word	0x0000d45c
    d45c:	mov	r3, r7
    d460:	bl	539c <MyGame_Example_Alt_parse_json_table>
    d464:	ldr	r3, [r5, #24]
    d468:	cmp	r3, #0
    d46c:	bne	d47c <MyGame_Example_Any_parse_json_union+0x70>
    d470:	ldr	r3, [r7]
    d474:	cmp	r3, #0
    d478:	beq	db7c <MyGame_Example_Any_parse_json_union+0x770>
    d47c:	add	sp, sp, #68	; 0x44
    d480:	ldrd	r4, [sp]
    d484:	ldrd	r6, [sp, #8]
    d488:	ldrd	r8, [sp, #16]
    d48c:	ldrd	sl, [sp, #24]
    d490:	add	sp, sp, #32
    d494:	pop	{pc}		; (ldr pc, [sp], #4)
    d498:	sub	r3, r2, r1
    d49c:	cmp	r3, #3
    d4a0:	ble	d4b0 <MyGame_Example_Any_parse_json_union+0xa4>
    d4a4:	ldrb	r3, [r1]
    d4a8:	cmp	r3, #110	; 0x6e
    d4ac:	beq	dcac <MyGame_Example_Any_parse_json_union+0x8a0>
    d4b0:	mov	r2, r6
    d4b4:	mov	r1, r4
    d4b8:	mov	r0, r5
    d4bc:	mov	r3, #26
    d4c0:	bl	0 <flatcc_json_parser_set_error>
    d4c4:	b	d47c <MyGame_Example_Any_parse_json_union+0x70>
    d4c8:	mov	r3, r7
    d4cc:	bl	8da0 <MyGame_Example_Monster_parse_json_table>
    d4d0:	b	d464 <MyGame_Example_Any_parse_json_union+0x58>
    d4d4:	mov	r1, #4
    d4d8:	ldr	r0, [r0]
    d4dc:	bl	0 <flatcc_builder_start_table>
    d4e0:	cmp	r0, #0
    d4e4:	bne	d748 <MyGame_Example_Any_parse_json_union+0x33c>
    d4e8:	mov	r1, r4
    d4ec:	add	r3, sp, #48	; 0x30
    d4f0:	mov	r2, r6
    d4f4:	mov	r0, r5
    d4f8:	bl	dfc <flatcc_json_parser_object_start>
    d4fc:	ldr	r3, [sp, #48]	; 0x30
    d500:	mov	r4, r0
    d504:	cmp	r3, #0
    d508:	beq	d724 <MyGame_Example_Any_parse_json_union+0x318>
    d50c:	mov	r9, #0
    d510:	movt	r9, #65535	; 0xffff
    d514:	str	r9, [sp, #28]
    d518:	str	r7, [sp, #104]	; 0x68
    d51c:	cmp	r6, r4
    d520:	beq	d54c <MyGame_Example_Any_parse_json_union+0x140>
    d524:	ldrb	r3, [r4]
    d528:	cmp	r3, #34	; 0x22
    d52c:	moveq	r3, #0
    d530:	addeq	r4, r4, #1
    d534:	streq	r3, [r5, #12]
    d538:	beq	d54c <MyGame_Example_Any_parse_json_union+0x140>
    d53c:	cmp	r3, #46	; 0x2e
    d540:	movne	r3, #1
    d544:	strne	r3, [r5, #12]
    d548:	beq	dac8 <MyGame_Example_Any_parse_json_union+0x6bc>
    d54c:	sub	ip, r6, r4
    d550:	cmp	ip, #8
    d554:	bhi	d594 <MyGame_Example_Any_parse_json_union+0x188>
    d558:	sub	r3, ip, #1
    d55c:	cmp	r3, #7
    d560:	ldrls	pc, [pc, r3, lsl #2]
    d564:	b	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d568:	.word	0x0000d7a8
    d56c:	.word	0x0000d76c
    d570:	.word	0x0000d79c
    d574:	.word	0x0000d790
    d578:	.word	0x0000d784
    d57c:	.word	0x0000d778
    d580:	.word	0x0000d760
    d584:	.word	0x0000d594
    d588:	mov	r3, r7
    d58c:	bl	4f50 <MyGame_Example2_Monster_parse_json_table>
    d590:	b	d464 <MyGame_Example_Any_parse_json_union+0x58>
    d594:	ldrb	r8, [r4, #7]
    d598:	mov	r9, #0
    d59c:	mov	r3, r9
    d5a0:	ldrb	r0, [r4, #6]
    d5a4:	orr	r2, r8, r0, lsl #8
    d5a8:	ldrb	r0, [r4, #5]
    d5ac:	mov	lr, r3
    d5b0:	orr	r1, r2, r0, lsl #16
    d5b4:	ldrb	r2, [r4, #4]
    d5b8:	orr	r2, r1, r2, lsl #24
    d5bc:	ldrb	r0, [r4, #3]
    d5c0:	orr	r3, lr, r0
    d5c4:	ldrb	r0, [r4, #2]
    d5c8:	orr	r3, r3, r0, lsl #8
    d5cc:	ldrb	r0, [r4, #1]
    d5d0:	mov	r8, #0
    d5d4:	ldr	lr, [sp, #28]
    d5d8:	orr	r3, r3, r0, lsl #16
    d5dc:	ldrb	r0, [r4]
    d5e0:	and	sl, r2, lr
    d5e4:	mov	lr, r2
    d5e8:	orr	r0, r3, r0, lsl #24
    d5ec:	add	r3, pc, #948	; 0x3b4
    d5f0:	ldrd	r2, [r3]
    d5f4:	cmp	r0, r3
    d5f8:	cmpeq	sl, r2
    d5fc:	beq	d7b8 <MyGame_Example_Any_parse_json_union+0x3ac>
    d600:	and	r3, lr, #-16777216	; 0xff000000
    d604:	add	r9, pc, #932	; 0x3a4
    d608:	ldrd	r8, [r9]
    d60c:	str	r3, [sp, #8]
    d610:	str	r0, [sp, #12]
    d614:	ldrd	r2, [sp, #8]
    d618:	cmp	r3, r9
    d61c:	cmpeq	r2, r8
    d620:	bne	d8a4 <MyGame_Example_Any_parse_json_union+0x498>
    d624:	cmp	ip, #5
    d628:	ble	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d62c:	mov	r3, #5
    d630:	mov	r2, r6
    d634:	mov	r1, r4
    d638:	mov	r0, r5
    d63c:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    d640:	cmp	r0, r4
    d644:	mov	r7, r0
    d648:	beq	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d64c:	mov	r3, #0
    d650:	cmp	r6, r0
    d654:	mov	r1, #0
    d658:	mov	r0, #0
    d65c:	strb	r3, [sp, #47]	; 0x2f
    d660:	str	r3, [sp, #52]	; 0x34
    d664:	strd	r0, [sp, #56]	; 0x38
    d668:	beq	dac0 <MyGame_Example_Any_parse_json_union+0x6b4>
    d66c:	add	r0, sp, #56	; 0x38
    d670:	add	r3, sp, #52	; 0x34
    d674:	mov	r2, r6
    d678:	mov	r1, r7
    d67c:	str	r0, [sp]
    d680:	mov	r0, r5
    d684:	bl	0 <flatcc_json_parser_integer>
    d688:	cmp	r7, r0
    d68c:	mov	r4, r0
    d690:	bne	db28 <MyGame_Example_Any_parse_json_union+0x71c>
    d694:	add	ip, sp, #47	; 0x2f
    d698:	ldr	r3, [pc, #800]	; d9c0 <MyGame_Example_Any_parse_json_union+0x5b4>
    d69c:	mov	r2, r6
    d6a0:	mov	r1, r4
    d6a4:	mov	r0, r5
    d6a8:	str	ip, [sp]
    d6ac:	bl	1f10 <flatcc_json_parser_symbolic_int8>
    d6b0:	cmp	r6, r0
    d6b4:	cmpne	r0, r4
    d6b8:	beq	dd14 <MyGame_Example_Any_parse_json_union+0x908>
    d6bc:	ldrsb	r2, [sp, #47]	; 0x2f
    d6c0:	mov	r4, r0
    d6c4:	cmp	r2, #2
    d6c8:	bne	d6d8 <MyGame_Example_Any_parse_json_union+0x2cc>
    d6cc:	ldr	r3, [r5, #8]
    d6d0:	tst	r3, #2
    d6d4:	beq	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    d6d8:	mov	r3, #1
    d6dc:	mov	r1, #0
    d6e0:	ldr	r0, [r5]
    d6e4:	mov	r2, r3
    d6e8:	bl	0 <flatcc_builder_table_add>
    d6ec:	cmp	r0, #0
    d6f0:	beq	d884 <MyGame_Example_Any_parse_json_union+0x478>
    d6f4:	ldrsb	r3, [sp, #47]	; 0x2f
    d6f8:	strb	r3, [r0]
    d6fc:	mov	r1, r4
    d700:	add	r3, sp, #48	; 0x30
    d704:	mov	r2, r6
    d708:	mov	r0, r5
    d70c:	bl	2f80 <flatcc_json_parser_object_end>
    d710:	ldr	r3, [sp, #48]	; 0x30
    d714:	mov	r4, r0
    d718:	cmp	r3, #0
    d71c:	bne	d51c <MyGame_Example_Any_parse_json_union+0x110>
    d720:	ldr	r7, [sp, #104]	; 0x68
    d724:	ldr	r3, [r5, #24]
    d728:	cmp	r3, #0
    d72c:	bne	d748 <MyGame_Example_Any_parse_json_union+0x33c>
    d730:	ldr	r0, [r5]
    d734:	bl	0 <flatcc_builder_end_table>
    d738:	cmp	r0, #0
    d73c:	str	r0, [r7]
    d740:	movne	r0, r4
    d744:	bne	d464 <MyGame_Example_Any_parse_json_union+0x58>
    d748:	mov	r1, r4
    d74c:	mov	r3, #33	; 0x21
    d750:	mov	r2, r6
    d754:	mov	r0, r5
    d758:	bl	0 <flatcc_json_parser_set_error>
    d75c:	b	d464 <MyGame_Example_Any_parse_json_union+0x58>
    d760:	mov	r8, #0
    d764:	mov	r9, #0
    d768:	b	d59c <MyGame_Example_Any_parse_json_union+0x190>
    d76c:	mov	r2, #0
    d770:	mov	r3, r2
    d774:	b	d5cc <MyGame_Example_Any_parse_json_union+0x1c0>
    d778:	mov	r2, #0
    d77c:	mov	r3, r2
    d780:	b	d5a8 <MyGame_Example_Any_parse_json_union+0x19c>
    d784:	mov	r1, #0
    d788:	mov	lr, r1
    d78c:	b	d5b4 <MyGame_Example_Any_parse_json_union+0x1a8>
    d790:	mov	r2, #0
    d794:	mov	lr, r2
    d798:	b	d5bc <MyGame_Example_Any_parse_json_union+0x1b0>
    d79c:	mov	r2, #0
    d7a0:	mov	r3, r2
    d7a4:	b	d5c4 <MyGame_Example_Any_parse_json_union+0x1b8>
    d7a8:	ldrb	r0, [r4]
    d7ac:	mov	lr, #0
    d7b0:	lsl	r0, r0, #24
    d7b4:	b	d600 <MyGame_Example_Any_parse_json_union+0x1f4>
    d7b8:	cmp	ip, #6
    d7bc:	ble	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d7c0:	mov	r3, #6
    d7c4:	mov	r2, r6
    d7c8:	mov	r1, r4
    d7cc:	mov	r0, r5
    d7d0:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    d7d4:	cmp	r0, r4
    d7d8:	mov	r7, r0
    d7dc:	beq	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d7e0:	mov	r2, #0
    d7e4:	mov	r3, #0
    d7e8:	strb	r8, [sp, #47]	; 0x2f
    d7ec:	cmp	r6, r0
    d7f0:	str	r8, [sp, #52]	; 0x34
    d7f4:	strd	r2, [sp, #56]	; 0x38
    d7f8:	beq	dab8 <MyGame_Example_Any_parse_json_union+0x6ac>
    d7fc:	add	r0, sp, #56	; 0x38
    d800:	add	r3, sp, #52	; 0x34
    d804:	mov	r2, r6
    d808:	mov	r1, r7
    d80c:	str	r0, [sp]
    d810:	mov	r0, r5
    d814:	bl	0 <flatcc_json_parser_integer>
    d818:	cmp	r7, r0
    d81c:	mov	r4, r0
    d820:	bne	dae4 <MyGame_Example_Any_parse_json_union+0x6d8>
    d824:	add	ip, sp, #47	; 0x2f
    d828:	ldr	r3, [pc, #404]	; d9c4 <MyGame_Example_Any_parse_json_union+0x5b8>
    d82c:	mov	r2, r6
    d830:	mov	r1, r4
    d834:	mov	r0, r5
    d838:	str	ip, [sp]
    d83c:	bl	1f10 <flatcc_json_parser_symbolic_int8>
    d840:	cmp	r6, r0
    d844:	cmpne	r0, r4
    d848:	beq	dd14 <MyGame_Example_Any_parse_json_union+0x908>
    d84c:	ldrsb	r2, [sp, #47]	; 0x2f
    d850:	mov	r4, r0
    d854:	cmp	r2, #2
    d858:	bne	d868 <MyGame_Example_Any_parse_json_union+0x45c>
    d85c:	ldr	r3, [r5, #8]
    d860:	tst	r3, #2
    d864:	beq	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    d868:	mov	r3, #1
    d86c:	ldr	r0, [r5]
    d870:	mov	r2, r3
    d874:	mov	r1, r3
    d878:	bl	0 <flatcc_builder_table_add>
    d87c:	cmp	r0, #0
    d880:	bne	d6f4 <MyGame_Example_Any_parse_json_union+0x2e8>
    d884:	ldr	r7, [sp, #104]	; 0x68
    d888:	b	d748 <MyGame_Example_Any_parse_json_union+0x33c>
    d88c:	mov	r1, r4
    d890:	mov	r2, r6
    d894:	mov	r0, r5
    d898:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d89c:	mov	r4, r0
    d8a0:	b	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    d8a4:	bic	r3, r0, #255	; 0xff
    d8a8:	mov	r7, #0
    d8ac:	add	r9, pc, #260	; 0x104
    d8b0:	ldrd	r8, [r9]
    d8b4:	str	r7, [sp, #16]
    d8b8:	str	r3, [sp, #20]
    d8bc:	ldrd	r2, [sp, #16]
    d8c0:	cmp	r3, r9
    d8c4:	cmpeq	r2, r8
    d8c8:	bne	d9d0 <MyGame_Example_Any_parse_json_union+0x5c4>
    d8cc:	cmp	ip, #3
    d8d0:	ble	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d8d4:	mov	r3, #3
    d8d8:	mov	r2, r6
    d8dc:	mov	r1, r4
    d8e0:	mov	r0, r5
    d8e4:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    d8e8:	cmp	r0, r4
    d8ec:	mov	r8, r0
    d8f0:	beq	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d8f4:	mov	r2, #0
    d8f8:	mov	r3, #0
    d8fc:	strb	r7, [sp, #47]	; 0x2f
    d900:	cmp	r6, r0
    d904:	str	r7, [sp, #52]	; 0x34
    d908:	strd	r2, [sp, #56]	; 0x38
    d90c:	beq	db6c <MyGame_Example_Any_parse_json_union+0x760>
    d910:	add	r0, sp, #56	; 0x38
    d914:	add	r3, sp, #52	; 0x34
    d918:	mov	r2, r6
    d91c:	mov	r1, r8
    d920:	str	r0, [sp]
    d924:	mov	r0, r5
    d928:	bl	0 <flatcc_json_parser_integer>
    d92c:	cmp	r8, r0
    d930:	mov	r7, r0
    d934:	bne	db94 <MyGame_Example_Any_parse_json_union+0x788>
    d938:	add	ip, sp, #47	; 0x2f
    d93c:	ldr	r3, [pc, #132]	; d9c8 <MyGame_Example_Any_parse_json_union+0x5bc>
    d940:	mov	r2, r6
    d944:	mov	r1, r7
    d948:	mov	r0, r5
    d94c:	str	ip, [sp]
    d950:	bl	180c <flatcc_json_parser_symbolic_uint8>
    d954:	cmp	r6, r0
    d958:	cmpne	r0, r7
    d95c:	mov	r4, r0
    d960:	beq	d884 <MyGame_Example_Any_parse_json_union+0x478>
    d964:	ldrb	r2, [sp, #47]	; 0x2f
    d968:	cmp	r2, #2
    d96c:	bne	d97c <MyGame_Example_Any_parse_json_union+0x570>
    d970:	ldr	r3, [r5, #8]
    d974:	tst	r3, #2
    d978:	beq	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    d97c:	mov	r3, #1
    d980:	mov	r1, #3
    d984:	mov	r2, r3
    d988:	ldr	r0, [r5]
    d98c:	bl	0 <flatcc_builder_table_add>
    d990:	cmp	r0, #0
    d994:	beq	d884 <MyGame_Example_Any_parse_json_union+0x478>
    d998:	ldrb	r3, [sp, #47]	; 0x2f
    d99c:	strb	r3, [r0]
    d9a0:	b	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    d9a4:	nop	{0}
    d9a8:	.word	0x72320000
    d9ac:	.word	0x636f6c6f
    d9b0:	.word	0x72000000
    d9b4:	.word	0x636f6c6f
    d9b8:	.word	0x00000000
    d9bc:	.word	0x75633200
    d9c0:	.word	0x000002a4
    d9c4:	.word	0x00000294
    d9c8:	.word	0x000002b4
    d9cc:	.word	0x000002c0
    d9d0:	ldr	r3, [sp, #28]
    d9d4:	mov	r1, #0
    d9d8:	movt	r1, #30051	; 0x7563
    d9dc:	str	r7, [sp, #32]
    d9e0:	and	r3, r0, r3
    d9e4:	mov	r0, #0
    d9e8:	str	r3, [sp, #36]	; 0x24
    d9ec:	ldrd	r2, [sp, #32]
    d9f0:	cmp	r3, r1
    d9f4:	cmpeq	r2, r0
    d9f8:	bne	d88c <MyGame_Example_Any_parse_json_union+0x480>
    d9fc:	cmp	ip, #2
    da00:	ble	d88c <MyGame_Example_Any_parse_json_union+0x480>
    da04:	mov	r3, #2
    da08:	mov	r2, r6
    da0c:	mov	r1, r4
    da10:	mov	r0, r5
    da14:	bl	5264 <flatcc_json_parser_match_symbol.part.18>
    da18:	cmp	r0, r4
    da1c:	mov	r8, r0
    da20:	beq	d88c <MyGame_Example_Any_parse_json_union+0x480>
    da24:	mov	r2, #0
    da28:	mov	r3, #0
    da2c:	strb	r7, [sp, #47]	; 0x2f
    da30:	cmp	r6, r0
    da34:	str	r7, [sp, #52]	; 0x34
    da38:	strd	r2, [sp, #56]	; 0x38
    da3c:	beq	db74 <MyGame_Example_Any_parse_json_union+0x768>
    da40:	add	r0, sp, #56	; 0x38
    da44:	add	r3, sp, #52	; 0x34
    da48:	mov	r2, r6
    da4c:	mov	r1, r8
    da50:	str	r0, [sp]
    da54:	mov	r0, r5
    da58:	bl	0 <flatcc_json_parser_integer>
    da5c:	cmp	r8, r0
    da60:	mov	r7, r0
    da64:	bne	dbe4 <MyGame_Example_Any_parse_json_union+0x7d8>
    da68:	add	ip, sp, #47	; 0x2f
    da6c:	ldr	r3, [pc, #-168]	; d9cc <MyGame_Example_Any_parse_json_union+0x5c0>
    da70:	mov	r2, r6
    da74:	mov	r1, r7
    da78:	mov	r0, r5
    da7c:	str	ip, [sp]
    da80:	bl	180c <flatcc_json_parser_symbolic_uint8>
    da84:	cmp	r6, r0
    da88:	cmpne	r0, r7
    da8c:	mov	r4, r0
    da90:	beq	d884 <MyGame_Example_Any_parse_json_union+0x478>
    da94:	ldrb	r2, [sp, #47]	; 0x2f
    da98:	cmp	r2, #2
    da9c:	bne	daac <MyGame_Example_Any_parse_json_union+0x6a0>
    daa0:	ldr	r3, [r5, #8]
    daa4:	tst	r3, #2
    daa8:	beq	d6fc <MyGame_Example_Any_parse_json_union+0x2f0>
    daac:	mov	r3, #1
    dab0:	mov	r1, #2
    dab4:	b	d984 <MyGame_Example_Any_parse_json_union+0x578>
    dab8:	mov	r4, r6
    dabc:	b	d824 <MyGame_Example_Any_parse_json_union+0x418>
    dac0:	mov	r4, r6
    dac4:	b	d694 <MyGame_Example_Any_parse_json_union+0x288>
    dac8:	mov	r1, r4
    dacc:	mov	r3, #5
    dad0:	mov	r2, r6
    dad4:	mov	r0, r5
    dad8:	bl	0 <flatcc_json_parser_set_error>
    dadc:	mov	r4, r0
    dae0:	b	d54c <MyGame_Example_Any_parse_json_union+0x140>
    dae4:	ldr	r1, [sp, #52]	; 0x34
    dae8:	ldrd	r2, [sp, #56]	; 0x38
    daec:	cmp	r1, #0
    daf0:	beq	dc34 <MyGame_Example_Any_parse_json_union+0x828>
    daf4:	cmp	r3, #0
    daf8:	cmpeq	r2, #128	; 0x80
    dafc:	rsbls	r2, r2, #0
    db00:	sxtbls	r2, r2
    db04:	strbls	r2, [sp, #47]	; 0x2f
    db08:	bls	d854 <MyGame_Example_Any_parse_json_union+0x448>
    db0c:	mov	r1, r0
    db10:	mov	r3, #8
    db14:	mov	r2, r6
    db18:	mov	r0, r5
    db1c:	bl	0 <flatcc_json_parser_set_error>
    db20:	mov	r4, r0
    db24:	b	dc60 <MyGame_Example_Any_parse_json_union+0x854>
    db28:	ldr	r1, [sp, #52]	; 0x34
    db2c:	ldrd	r2, [sp, #56]	; 0x38
    db30:	cmp	r1, #0
    db34:	beq	dc70 <MyGame_Example_Any_parse_json_union+0x864>
    db38:	cmp	r3, #0
    db3c:	cmpeq	r2, #128	; 0x80
    db40:	rsbls	r2, r2, #0
    db44:	sxtbls	r2, r2
    db48:	strbls	r2, [sp, #47]	; 0x2f
    db4c:	bls	d6c4 <MyGame_Example_Any_parse_json_union+0x2b8>
    db50:	mov	r1, r0
    db54:	mov	r3, #8
    db58:	mov	r2, r6
    db5c:	mov	r0, r5
    db60:	bl	0 <flatcc_json_parser_set_error>
    db64:	mov	r4, r0
    db68:	b	dc9c <MyGame_Example_Any_parse_json_union+0x890>
    db6c:	mov	r7, r6
    db70:	b	d938 <MyGame_Example_Any_parse_json_union+0x52c>
    db74:	mov	r7, r6
    db78:	b	da68 <MyGame_Example_Any_parse_json_union+0x65c>
    db7c:	mov	r1, r0
    db80:	mov	r2, r6
    db84:	mov	r0, r5
    db88:	mov	r3, #33	; 0x21
    db8c:	bl	0 <flatcc_json_parser_set_error>
    db90:	b	d47c <MyGame_Example_Any_parse_json_union+0x70>
    db94:	ldr	r3, [sp, #52]	; 0x34
    db98:	cmp	r3, #0
    db9c:	bne	dcdc <MyGame_Example_Any_parse_json_union+0x8d0>
    dba0:	ldrd	r2, [sp, #56]	; 0x38
    dba4:	cmp	r3, #0
    dba8:	cmpeq	r2, #255	; 0xff
    dbac:	uxtbls	r2, r2
    dbb0:	movls	r4, r0
    dbb4:	strbls	r2, [sp, #47]	; 0x2f
    dbb8:	bls	d968 <MyGame_Example_Any_parse_json_union+0x55c>
    dbbc:	mov	r1, r0
    dbc0:	mov	r3, #7
    dbc4:	mov	r2, r6
    dbc8:	mov	r0, r5
    dbcc:	bl	0 <flatcc_json_parser_set_error>
    dbd0:	mov	r4, r0
    dbd4:	cmp	r8, r4
    dbd8:	bne	d964 <MyGame_Example_Any_parse_json_union+0x558>
    dbdc:	mov	r7, r8
    dbe0:	b	d938 <MyGame_Example_Any_parse_json_union+0x52c>
    dbe4:	ldr	r3, [sp, #52]	; 0x34
    dbe8:	cmp	r3, #0
    dbec:	bne	dcf8 <MyGame_Example_Any_parse_json_union+0x8ec>
    dbf0:	ldrd	r2, [sp, #56]	; 0x38
    dbf4:	cmp	r3, #0
    dbf8:	cmpeq	r2, #255	; 0xff
    dbfc:	uxtbls	r2, r2
    dc00:	movls	r4, r0
    dc04:	strbls	r2, [sp, #47]	; 0x2f
    dc08:	bls	da98 <MyGame_Example_Any_parse_json_union+0x68c>
    dc0c:	mov	r1, r0
    dc10:	mov	r3, #7
    dc14:	mov	r2, r6
    dc18:	mov	r0, r5
    dc1c:	bl	0 <flatcc_json_parser_set_error>
    dc20:	mov	r4, r0
    dc24:	cmp	r8, r4
    dc28:	bne	da94 <MyGame_Example_Any_parse_json_union+0x688>
    dc2c:	mov	r7, r8
    dc30:	b	da68 <MyGame_Example_Any_parse_json_union+0x65c>
    dc34:	cmp	r3, #0
    dc38:	cmpeq	r2, #127	; 0x7f
    dc3c:	sxtbls	r2, r2
    dc40:	strbls	r2, [sp, #47]	; 0x2f
    dc44:	bls	d854 <MyGame_Example_Any_parse_json_union+0x448>
    dc48:	mov	r1, r0
    dc4c:	mov	r3, #7
    dc50:	mov	r2, r6
    dc54:	mov	r0, r5
    dc58:	bl	0 <flatcc_json_parser_set_error>
    dc5c:	mov	r4, r0
    dc60:	cmp	r7, r4
    dc64:	beq	d824 <MyGame_Example_Any_parse_json_union+0x418>
    dc68:	ldrsb	r2, [sp, #47]	; 0x2f
    dc6c:	b	d854 <MyGame_Example_Any_parse_json_union+0x448>
    dc70:	cmp	r3, #0
    dc74:	cmpeq	r2, #127	; 0x7f
    dc78:	sxtbls	r2, r2
    dc7c:	strbls	r2, [sp, #47]	; 0x2f
    dc80:	bls	d6c4 <MyGame_Example_Any_parse_json_union+0x2b8>
    dc84:	mov	r1, r0
    dc88:	mov	r3, #7
    dc8c:	mov	r2, r6
    dc90:	mov	r0, r5
    dc94:	bl	0 <flatcc_json_parser_set_error>
    dc98:	mov	r4, r0
    dc9c:	cmp	r7, r4
    dca0:	beq	d694 <MyGame_Example_Any_parse_json_union+0x288>
    dca4:	ldrsb	r2, [sp, #47]	; 0x2f
    dca8:	b	d6c4 <MyGame_Example_Any_parse_json_union+0x2b8>
    dcac:	ldrb	r3, [r1, #1]
    dcb0:	add	r2, r1, #1
    dcb4:	cmp	r3, #117	; 0x75
    dcb8:	bne	d4b0 <MyGame_Example_Any_parse_json_union+0xa4>
    dcbc:	ldrb	r3, [r2, #1]!
    dcc0:	cmp	r3, #108	; 0x6c
    dcc4:	bne	d4b0 <MyGame_Example_Any_parse_json_union+0xa4>
    dcc8:	ldrb	r3, [r2, #1]
    dccc:	cmp	r3, #108	; 0x6c
    dcd0:	addeq	r0, r1, #4
    dcd4:	bne	d4b0 <MyGame_Example_Any_parse_json_union+0xa4>
    dcd8:	b	d47c <MyGame_Example_Any_parse_json_union+0x70>
    dcdc:	mov	r1, r0
    dce0:	mov	r3, #8
    dce4:	mov	r2, r6
    dce8:	mov	r0, r5
    dcec:	bl	0 <flatcc_json_parser_set_error>
    dcf0:	mov	r4, r0
    dcf4:	b	dbd4 <MyGame_Example_Any_parse_json_union+0x7c8>
    dcf8:	mov	r1, r0
    dcfc:	mov	r3, #8
    dd00:	mov	r2, r6
    dd04:	mov	r0, r5
    dd08:	bl	0 <flatcc_json_parser_set_error>
    dd0c:	mov	r4, r0
    dd10:	b	dc24 <MyGame_Example_Any_parse_json_union+0x818>
    dd14:	mov	r4, r0
    dd18:	ldr	r7, [sp, #104]	; 0x68
    dd1c:	b	d748 <MyGame_Example_Any_parse_json_union+0x33c>
    dd20:	ldr	r3, [r0, #8]
    dd24:	tst	r3, #1
    dd28:	bne	dd38 <MyGame_Example_Any_parse_json_union+0x92c>
    dd2c:	mov	r3, #15
    dd30:	bl	0 <flatcc_json_parser_set_error>
    dd34:	b	d47c <MyGame_Example_Any_parse_json_union+0x70>
    dd38:	bl	0 <flatcc_json_parser_generic_json>
    dd3c:	b	d47c <MyGame_Example_Any_parse_json_union+0x70>

0000dd40 <verify_parse>:
    dd40:	cmp	r0, #0
    dd44:	str	r4, [sp, #-8]!
    dd48:	str	lr, [sp, #4]
    dd4c:	beq	dd64 <verify_parse+0x24>
    dd50:	ldr	r2, [r0, #4]
    dd54:	movw	r3, #20301	; 0x4f4d
    dd58:	movt	r3, #21326	; 0x534e
    dd5c:	cmp	r2, r3
    dd60:	beq	dd84 <verify_parse+0x44>
    dd64:	movw	r3, #0
    dd68:	movt	r3, #0
    dd6c:	movw	r1, #0
    dd70:	movt	r1, #0
    dd74:	movw	r0, #0
    dd78:	movt	r0, #0
    dd7c:	mov	r2, #696	; 0x2b8
    dd80:	bl	0 <__assert_fail>
    dd84:	ldr	r2, [r0]
    dd88:	adds	r3, r0, r2
    dd8c:	beq	dd64 <verify_parse+0x24>
    dd90:	ldr	r2, [r0, r2]
    dd94:	sub	r2, r3, r2
    dd98:	ldrh	r1, [r2]
    dd9c:	cmp	r1, #5
    dda0:	bls	de3c <verify_parse+0xfc>
    dda4:	ldrh	r2, [r2, #4]
    dda8:	cmp	r2, #0
    ddac:	beq	de3c <verify_parse+0xfc>
    ddb0:	adds	r3, r3, r2
    ddb4:	beq	de3c <verify_parse+0xfc>
    ddb8:	vldr	s15, [pc, #360]	; df28 <verify_parse+0x1e8>
    ddbc:	vldr	s14, [r3]
    ddc0:	vcmp.f32	s14, s15
    ddc4:	vmrs	APSR_nzcv, fpscr
    ddc8:	bne	deac <verify_parse+0x16c>
    ddcc:	vldr	s15, [pc, #344]	; df2c <verify_parse+0x1ec>
    ddd0:	vldr	s14, [r3, #4]
    ddd4:	vcmp.f32	s14, s15
    ddd8:	vmrs	APSR_nzcv, fpscr
    dddc:	bne	dec8 <verify_parse+0x188>
    dde0:	vldr	s15, [pc, #328]	; df30 <verify_parse+0x1f0>
    dde4:	vldr	s14, [r3, #8]
    dde8:	vcmp.f32	s14, s15
    ddec:	vmrs	APSR_nzcv, fpscr
    ddf0:	bne	dee4 <verify_parse+0x1a4>
    ddf4:	vldr	d7, [pc, #292]	; df20 <verify_parse+0x1e0>
    ddf8:	vldr	d6, [r3, #16]
    ddfc:	vcmp.f64	d6, d7
    de00:	vmrs	APSR_nzcv, fpscr
    de04:	bne	df00 <verify_parse+0x1c0>
    de08:	ldrsb	r2, [r3, #24]
    de0c:	cmp	r2, #2
    de10:	bne	de74 <verify_parse+0x134>
    de14:	ldrsh	r2, [r3, #26]
    de18:	cmp	r2, #5
    de1c:	bne	de90 <verify_parse+0x150>
    de20:	ldrsb	r3, [r3, #28]
    de24:	cmp	r3, #6
    de28:	bne	de58 <verify_parse+0x118>
    de2c:	ldr	r4, [sp]
    de30:	add	sp, sp, #4
    de34:	mov	r0, #0
    de38:	pop	{pc}		; (ldr pc, [sp], #4)
    de3c:	movw	r1, #0
    de40:	movt	r1, #0
    de44:	ldr	r3, [pc, #232]	; df34 <verify_parse+0x1f4>
    de48:	movw	r0, #0
    de4c:	movt	r0, #0
    de50:	mov	r2, #45	; 0x2d
    de54:	bl	0 <__assert_fail>
    de58:	movw	r1, #0
    de5c:	movt	r1, #0
    de60:	ldr	r3, [pc, #204]	; df34 <verify_parse+0x1f4>
    de64:	movw	r0, #0
    de68:	movt	r0, #0
    de6c:	mov	r2, #54	; 0x36
    de70:	bl	0 <__assert_fail>
    de74:	movw	r1, #0
    de78:	movt	r1, #0
    de7c:	ldr	r3, [pc, #176]	; df34 <verify_parse+0x1f4>
    de80:	movw	r0, #0
    de84:	movt	r0, #0
    de88:	mov	r2, #50	; 0x32
    de8c:	bl	0 <__assert_fail>
    de90:	movw	r1, #0
    de94:	movt	r1, #0
    de98:	ldr	r3, [pc, #148]	; df34 <verify_parse+0x1f4>
    de9c:	movw	r0, #0
    dea0:	movt	r0, #0
    dea4:	mov	r2, #53	; 0x35
    dea8:	bl	0 <__assert_fail>
    deac:	movw	r1, #0
    deb0:	movt	r1, #0
    deb4:	ldr	r3, [pc, #120]	; df34 <verify_parse+0x1f4>
    deb8:	movw	r0, #0
    debc:	movt	r0, #0
    dec0:	mov	r2, #46	; 0x2e
    dec4:	bl	0 <__assert_fail>
    dec8:	movw	r1, #0
    decc:	movt	r1, #0
    ded0:	ldr	r3, [pc, #92]	; df34 <verify_parse+0x1f4>
    ded4:	movw	r0, #0
    ded8:	movt	r0, #0
    dedc:	mov	r2, #47	; 0x2f
    dee0:	bl	0 <__assert_fail>
    dee4:	movw	r1, #0
    dee8:	movt	r1, #0
    deec:	ldr	r3, [pc, #64]	; df34 <verify_parse+0x1f4>
    def0:	movw	r0, #0
    def4:	movt	r0, #0
    def8:	mov	r2, #48	; 0x30
    defc:	bl	0 <__assert_fail>
    df00:	movw	r1, #0
    df04:	movt	r1, #0
    df08:	ldr	r3, [pc, #36]	; df34 <verify_parse+0x1f4>
    df0c:	movw	r0, #0
    df10:	movt	r0, #0
    df14:	mov	r2, #49	; 0x31
    df18:	bl	0 <__assert_fail>
    df1c:	nop	{0}
    df20:	.word	0x00000000
    df24:	.word	0x40080000
    df28:	.word	0x3f800000
    df2c:	.word	0x40000000
    df30:	.word	0x40400000
    df34:	.word	0x0000001c

0000df38 <test_parse>:
    df38:	strd	r4, [sp, #-36]!	; 0xffffffdc
    df3c:	strd	r6, [sp, #8]
    df40:	movw	r7, #0
    df44:	movt	r7, #0
    df48:	strd	r8, [sp, #16]
    df4c:	strd	sl, [sp, #24]
    df50:	str	lr, [sp, #32]
    df54:	sub	sp, sp, #340	; 0x154
    df58:	add	r0, sp, #104	; 0x68
    df5c:	bl	0 <flatcc_builder_init>
    df60:	movw	r1, #0
    df64:	movt	r1, #0
    df68:	ldr	r0, [r7, #716]	; 0x2cc
    df6c:	bl	0 <fopen>
    df70:	subs	r6, r0, #0
    df74:	beq	e240 <test_parse+0x308>
    df78:	mov	r2, #2
    df7c:	mov	r1, #0
    df80:	bl	0 <fseek>
    df84:	mov	r0, r6
    df88:	bl	0 <ftell>
    df8c:	mov	r8, r0
    df90:	mov	r0, r6
    df94:	cmp	r8, #10240	; 0x2800
    df98:	bhi	e3bc <test_parse+0x484>
    df9c:	bl	0 <rewind>
    dfa0:	cmp	r8, #0
    dfa4:	movne	r0, r8
    dfa8:	moveq	r0, #1
    dfac:	bl	0 <malloc>
    dfb0:	subs	r4, r0, #0
    dfb4:	beq	e3c4 <test_parse+0x48c>
    dfb8:	mov	r9, #0
    dfbc:	b	dfc4 <test_parse+0x8c>
    dfc0:	add	r9, r9, r0
    dfc4:	add	sl, r4, r9
    dfc8:	mov	r3, r6
    dfcc:	mov	r0, sl
    dfd0:	sub	r2, r8, r9
    dfd4:	mov	r1, #1
    dfd8:	bl	0 <fread>
    dfdc:	cmp	r0, #0
    dfe0:	bne	dfc0 <test_parse+0x88>
    dfe4:	cmp	r8, r9
    dfe8:	mov	r5, r0
    dfec:	str	sl, [sp, #8]
    dff0:	mov	r0, r6
    dff4:	bne	e234 <test_parse+0x2fc>
    dff8:	bl	0 <fclose>
    dffc:	ldr	r0, [sp, #8]
    e000:	mov	sl, #0
    e004:	mov	fp, #0
    e008:	add	r3, sp, #104	; 0x68
    e00c:	mov	r2, #1
    e010:	movw	r1, #0
    e014:	movt	r1, #0
    e018:	str	r3, [sp, #60]	; 0x3c
    e01c:	mov	r3, r5
    e020:	strd	r4, [sp, #64]	; 0x40
    e024:	strd	sl, [sp, #72]	; 0x48
    e028:	str	r2, [sp, #76]	; 0x4c
    e02c:	mov	r2, r5
    e030:	strd	sl, [sp, #80]	; 0x50
    e034:	str	r0, [sp, #92]	; 0x5c
    e038:	add	r0, sp, #104	; 0x68
    e03c:	str	r4, [sp, #88]	; 0x58
    e040:	strd	sl, [sp, #96]	; 0x60
    e044:	str	r4, [sp, #96]	; 0x60
    e048:	bl	0 <flatcc_builder_start_buffer>
    e04c:	cmp	r0, #0
    e050:	bne	e3d0 <test_parse+0x498>
    e054:	add	r3, sp, #40	; 0x28
    e058:	add	r0, sp, #60	; 0x3c
    e05c:	ldr	r2, [sp, #8]
    e060:	mov	r1, r4
    e064:	bl	8da0 <MyGame_Example_Monster_parse_json_table>
    e068:	ldr	r3, [sp, #84]	; 0x54
    e06c:	cmp	r3, #0
    e070:	str	r3, [sp, #12]
    e074:	beq	e0fc <test_parse+0x1c4>
    e078:	movw	r3, #0
    e07c:	movt	r3, #0
    e080:	ldr	r7, [r7, #716]	; 0x2cc
    e084:	mvn	r1, #0
    e088:	ldr	r2, [sp, #64]	; 0x40
    e08c:	ldr	r5, [sp, #96]	; 0x60
    e090:	ldr	r8, [r3]
    e094:	ldr	r6, [sp, #76]	; 0x4c
    e098:	sub	r5, r5, r2
    e09c:	add	r5, r5, #1
    e0a0:	ldr	r0, [sp, #12]
    e0a4:	str	r1, [sp, #12]
    e0a8:	bl	0 <flatcc_json_parser_error_string>
    e0ac:	movw	r1, #0
    e0b0:	movt	r1, #0
    e0b4:	str	r5, [sp]
    e0b8:	mov	r2, r7
    e0bc:	mov	r3, r6
    e0c0:	str	r0, [sp, #4]
    e0c4:	mov	r0, r8
    e0c8:	bl	0 <fprintf>
    e0cc:	mov	r0, r4
    e0d0:	bl	0 <free>
    e0d4:	add	r0, sp, #104	; 0x68
    e0d8:	bl	0 <flatcc_builder_clear>
    e0dc:	ldr	r0, [sp, #12]
    e0e0:	add	sp, sp, #340	; 0x154
    e0e4:	ldrd	r4, [sp]
    e0e8:	ldrd	r6, [sp, #8]
    e0ec:	ldrd	r8, [sp, #16]
    e0f0:	ldrd	sl, [sp, #24]
    e0f4:	add	sp, sp, #32
    e0f8:	pop	{pc}		; (ldr pc, [sp], #4)
    e0fc:	add	r0, sp, #104	; 0x68
    e100:	ldr	r1, [sp, #40]	; 0x28
    e104:	bl	0 <flatcc_builder_end_buffer>
    e108:	cmp	r0, #0
    e10c:	beq	e3d0 <test_parse+0x498>
    e110:	movw	r3, #0
    e114:	movt	r3, #0
    e118:	str	r4, [sp, #100]	; 0x64
    e11c:	mov	r2, r3
    e120:	movw	r1, #0
    e124:	movt	r1, #0
    e128:	ldr	r0, [r3]
    e12c:	movw	fp, #0
    e130:	movt	fp, #0
    e134:	str	r2, [sp, #28]
    e138:	ldr	r3, [sp, #76]	; 0x4c
    e13c:	ldr	r2, [r7, #716]	; 0x2cc
    e140:	bl	0 <fprintf>
    e144:	add	r1, sp, #36	; 0x24
    e148:	add	r0, sp, #104	; 0x68
    e14c:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    e150:	ldr	r6, [fp]
    e154:	movw	r2, #0
    e158:	movt	r2, #0
    e15c:	movw	r1, #0
    e160:	movt	r1, #0
    e164:	str	r0, [sp, #8]
    e168:	ldr	r7, [sp, #36]	; 0x24
    e16c:	mov	r0, r6
    e170:	bl	0 <fprintf>
    e174:	cmp	r7, #0
    e178:	beq	e298 <test_parse+0x360>
    e17c:	movw	r3, #0
    e180:	movt	r3, #0
    e184:	str	r3, [sp, #16]
    e188:	movw	r3, #0
    e18c:	movt	r3, #0
    e190:	str	r3, [sp, #20]
    e194:	movw	r3, #0
    e198:	movt	r3, #0
    e19c:	str	r3, [sp, #24]
    e1a0:	ldr	r3, [sp, #8]
    e1a4:	sub	sl, r3, #1
    e1a8:	b	e214 <test_parse+0x2dc>
    e1ac:	cmp	r5, #0
    e1b0:	add	r2, sp, #40	; 0x28
    e1b4:	ldr	r1, [sp, #20]
    e1b8:	mov	r0, r6
    e1bc:	beq	e1c4 <test_parse+0x28c>
    e1c0:	bl	0 <fprintf>
    e1c4:	mov	r2, r5
    e1c8:	mov	r0, r6
    e1cc:	ldr	r1, [sp, #16]
    e1d0:	bl	0 <fprintf>
    e1d4:	ldrb	r2, [sl, #1]!
    e1d8:	mov	r0, r6
    e1dc:	add	r5, r5, #1
    e1e0:	ldr	r1, [sp, #24]
    e1e4:	bl	0 <fprintf>
    e1e8:	add	r3, sp, #336	; 0x150
    e1ec:	mov	r2, #0
    e1f0:	add	r9, r3, r9
    e1f4:	ldrb	r3, [sl]
    e1f8:	strb	r2, [r9, #-295]	; 0xfffffed9
    e1fc:	sub	r2, r3, #32
    e200:	cmp	r2, #94	; 0x5e
    e204:	movhi	r3, #46	; 0x2e
    e208:	cmp	r7, r5
    e20c:	strb	r3, [r9, #-296]	; 0xfffffed8
    e210:	beq	e268 <test_parse+0x330>
    e214:	ands	r9, r5, #15
    e218:	beq	e1ac <test_parse+0x274>
    e21c:	tst	r5, #7
    e220:	bne	e1d4 <test_parse+0x29c>
    e224:	mov	r1, r6
    e228:	mov	r0, #32
    e22c:	bl	0 <fputc>
    e230:	b	e1d4 <test_parse+0x29c>
    e234:	bl	0 <fclose>
    e238:	mov	r0, r4
    e23c:	bl	0 <free>
    e240:	movw	r3, #0
    e244:	movt	r3, #0
    e248:	ldr	r2, [r7, #716]	; 0x2cc
    e24c:	movw	r1, #0
    e250:	movt	r1, #0
    e254:	ldr	r0, [r3]
    e258:	mvn	r3, #0
    e25c:	str	r3, [sp, #12]
    e260:	bl	0 <fprintf>
    e264:	b	e0dc <test_parse+0x1a4>
    e268:	tst	r7, #15
    e26c:	beq	e298 <test_parse+0x360>
    e270:	movw	r5, #0
    e274:	movt	r5, #0
    e278:	add	r7, r7, #1
    e27c:	mov	r3, r6
    e280:	mov	r2, #3
    e284:	mov	r1, #1
    e288:	mov	r0, r5
    e28c:	bl	0 <fwrite>
    e290:	tst	r7, #15
    e294:	bne	e278 <test_parse+0x340>
    e298:	add	r2, sp, #40	; 0x28
    e29c:	mov	r0, r6
    e2a0:	movw	r1, #0
    e2a4:	movt	r1, #0
    e2a8:	bl	0 <fprintf>
    e2ac:	ldr	r0, [sp, #28]
    e2b0:	mov	r2, r8
    e2b4:	movw	r1, #0
    e2b8:	movt	r1, #0
    e2bc:	ldr	r3, [sp, #36]	; 0x24
    e2c0:	ldr	r0, [r0]
    e2c4:	bl	0 <fprintf>
    e2c8:	ldr	r0, [sp, #8]
    e2cc:	bl	dd40 <verify_parse>
    e2d0:	ldr	r5, [fp]
    e2d4:	movw	r2, #0
    e2d8:	movt	r2, #0
    e2dc:	movw	r1, #0
    e2e0:	movt	r1, #0
    e2e4:	ldr	r6, [sp, #36]	; 0x24
    e2e8:	mov	r0, r5
    e2ec:	bl	0 <fprintf>
    e2f0:	cmp	r6, #0
    e2f4:	beq	e384 <test_parse+0x44c>
    e2f8:	ldr	r3, [sp, #8]
    e2fc:	sub	r6, r6, #1
    e300:	movw	sl, #0
    e304:	movt	sl, #0
    e308:	movw	r9, #0
    e30c:	movt	r9, #0
    e310:	movw	r8, #0
    e314:	movt	r8, #0
    e318:	add	r6, r6, r3
    e31c:	sub	r7, r3, #1
    e320:	rsb	fp, r3, #1
    e324:	b	e348 <test_parse+0x410>
    e328:	tst	r3, #7
    e32c:	beq	e36c <test_parse+0x434>
    e330:	ldrb	r2, [r7, #1]!
    e334:	mov	r1, r8
    e338:	mov	r0, r5
    e33c:	bl	0 <fprintf>
    e340:	cmp	r6, r7
    e344:	beq	e384 <test_parse+0x44c>
    e348:	add	r3, fp, r7
    e34c:	tst	r3, #15
    e350:	bne	e328 <test_parse+0x3f0>
    e354:	mov	r3, r5
    e358:	mov	r2, #4
    e35c:	mov	r1, #1
    e360:	mov	r0, r9
    e364:	bl	0 <fwrite>
    e368:	b	e330 <test_parse+0x3f8>
    e36c:	mov	r3, r5
    e370:	mov	r2, #3
    e374:	mov	r1, #1
    e378:	mov	r0, sl
    e37c:	bl	0 <fwrite>
    e380:	b	e330 <test_parse+0x3f8>
    e384:	mov	r3, r5
    e388:	mov	r2, #4
    e38c:	mov	r1, #1
    e390:	movw	r0, #0
    e394:	movt	r0, #0
    e398:	bl	0 <fwrite>
    e39c:	add	r0, sp, #104	; 0x68
    e3a0:	bl	0 <flatcc_builder_reset>
    e3a4:	ldr	r3, [sp, #8]
    e3a8:	cmp	r3, #0
    e3ac:	beq	e0cc <test_parse+0x194>
    e3b0:	ldr	r0, [sp, #8]
    e3b4:	bl	0 <flatcc_builder_aligned_free>
    e3b8:	b	e0cc <test_parse+0x194>
    e3bc:	bl	0 <fclose>
    e3c0:	b	e240 <test_parse+0x308>
    e3c4:	mov	r0, r6
    e3c8:	bl	0 <fclose>
    e3cc:	b	e240 <test_parse+0x308>
    e3d0:	ldr	r3, [sp, #84]	; 0x54
    e3d4:	str	r3, [sp, #12]
    e3d8:	b	e078 <test_parse+0x140>

Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-16]!
   4:	movw	r4, #0
   8:	movt	r4, #0
   c:	mov	r5, r0
  10:	mov	r2, #16
  14:	str	r6, [sp, #8]
  18:	movw	r0, #0
  1c:	movt	r0, #0
  20:	ldr	r3, [r4]
  24:	mov	r6, r1
  28:	mov	r1, #1
  2c:	str	lr, [sp, #12]
  30:	bl	0 <fwrite>
  34:	sub	r3, r5, #1
  38:	cmp	r3, #1
  3c:	bhi	6c <main+0x6c>
  40:	cmp	r5, #2
  44:	bne	58 <main+0x58>
  48:	ldr	r2, [r6, #4]
  4c:	movw	r3, #0
  50:	movt	r3, #0
  54:	str	r2, [r3, #716]	; 0x2cc
  58:	ldrd	r4, [sp]
  5c:	ldr	r6, [sp, #8]
  60:	ldr	lr, [sp, #12]
  64:	add	sp, sp, #16
  68:	b	df38 <test_parse>
  6c:	movw	r0, #0
  70:	movt	r0, #0
  74:	ldr	r3, [r4]
  78:	mov	r2, #63	; 0x3f
  7c:	mov	r1, #1
  80:	bl	0 <fwrite>
  84:	mov	r0, #1
  88:	bl	0 <exit>
