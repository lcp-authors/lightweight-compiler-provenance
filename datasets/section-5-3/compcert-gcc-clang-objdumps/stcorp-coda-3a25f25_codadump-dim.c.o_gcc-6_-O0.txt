
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-dim.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dim_info_init>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	ldr	r3, [pc, #44]	; 3c <dim_info_init+0x3c>
       c:	mov	r2, #0
      10:	str	r2, [r3]
      14:	ldr	r3, [pc, #32]	; 3c <dim_info_init+0x3c>
      18:	mov	r2, #0
      1c:	str	r2, [r3, #68]	; 0x44
      20:	ldr	r3, [pc, #20]	; 3c <dim_info_init+0x3c>
      24:	mvn	r2, #0
      28:	str	r2, [r3, #104]	; 0x68
      2c:	nop			; (mov r0, r0)
      30:	add	sp, fp, #0
      34:	pop	{fp}		; (ldr fp, [sp], #4)
      38:	bx	lr
      3c:	.word	0x00000000

00000040 <dim_info_done>:
      40:	push	{fp}		; (str fp, [sp, #-4]!)
      44:	add	fp, sp, #0
      48:	nop			; (mov r0, r0)
      4c:	add	sp, fp, #0
      50:	pop	{fp}		; (ldr fp, [sp], #4)
      54:	bx	lr

00000058 <print_all_distinct_dims>:
      58:	push	{fp, lr}
      5c:	add	fp, sp, #4
      60:	sub	sp, sp, #24
      64:	str	r0, [fp, #-16]
      68:	ldr	r3, [pc, #812]	; 39c <print_all_distinct_dims+0x344>
      6c:	ldr	r2, [r3]
      70:	ldr	r3, [fp, #-16]
      74:	cmp	r2, r3
      78:	bgt	90 <print_all_distinct_dims+0x38>
      7c:	ldr	r3, [pc, #796]	; 3a0 <print_all_distinct_dims+0x348>
      80:	mov	r2, #50	; 0x32
      84:	ldr	r1, [pc, #792]	; 3a4 <print_all_distinct_dims+0x34c>
      88:	ldr	r0, [pc, #792]	; 3a8 <print_all_distinct_dims+0x350>
      8c:	bl	0 <__assert_fail>
      90:	ldr	r2, [pc, #772]	; 39c <print_all_distinct_dims+0x344>
      94:	ldr	r3, [fp, #-16]
      98:	add	r3, r3, #18
      9c:	ldr	r3, [r2, r3, lsl #2]
      a0:	cmp	r3, #0
      a4:	beq	390 <print_all_distinct_dims+0x338>
      a8:	ldr	r2, [pc, #748]	; 39c <print_all_distinct_dims+0x344>
      ac:	ldr	r3, [fp, #-16]
      b0:	lsl	r3, r3, #2
      b4:	add	r3, r2, r3
      b8:	ldr	r3, [r3, #4]
      bc:	add	r3, r3, #1
      c0:	lsl	r3, r3, #2
      c4:	mov	r0, r3
      c8:	bl	0 <malloc>
      cc:	mov	r3, r0
      d0:	str	r3, [fp, #-12]
      d4:	ldr	r3, [fp, #-12]
      d8:	cmp	r3, #0
      dc:	bne	118 <print_all_distinct_dims+0xc0>
      e0:	ldr	r2, [pc, #692]	; 39c <print_all_distinct_dims+0x344>
      e4:	ldr	r3, [fp, #-16]
      e8:	lsl	r3, r3, #2
      ec:	add	r3, r2, r3
      f0:	ldr	r3, [r3, #4]
      f4:	add	r3, r3, #1
      f8:	lsl	r2, r3, #2
      fc:	mov	r3, #61	; 0x3d
     100:	str	r3, [sp]
     104:	ldr	r3, [pc, #664]	; 3a4 <print_all_distinct_dims+0x34c>
     108:	ldr	r1, [pc, #668]	; 3ac <print_all_distinct_dims+0x354>
     10c:	mvn	r0, #0
     110:	bl	0 <coda_set_error>
     114:	bl	0 <handle_coda_error>
     118:	ldr	r2, [pc, #636]	; 39c <print_all_distinct_dims+0x344>
     11c:	ldr	r3, [fp, #-16]
     120:	lsl	r3, r3, #2
     124:	add	r3, r2, r3
     128:	ldr	r3, [r3, #4]
     12c:	add	r3, r3, #1
     130:	lsl	r3, r3, #2
     134:	mov	r2, r3
     138:	mov	r1, #0
     13c:	ldr	r0, [fp, #-12]
     140:	bl	0 <memset>
     144:	mov	r3, #0
     148:	str	r3, [fp, #-8]
     14c:	b	1cc <print_all_distinct_dims+0x174>
     150:	ldr	r2, [pc, #580]	; 39c <print_all_distinct_dims+0x344>
     154:	ldr	r3, [fp, #-16]
     158:	add	r3, r3, #26
     15c:	lsl	r3, r3, #2
     160:	add	r3, r2, r3
     164:	ldr	r2, [r3, #4]
     168:	ldr	r3, [fp, #-8]
     16c:	lsl	r3, r3, #2
     170:	add	r3, r2, r3
     174:	ldr	r3, [r3]
     178:	cmp	r3, #0
     17c:	blt	1c0 <print_all_distinct_dims+0x168>
     180:	ldr	r2, [pc, #532]	; 39c <print_all_distinct_dims+0x344>
     184:	ldr	r3, [fp, #-16]
     188:	add	r3, r3, #26
     18c:	lsl	r3, r3, #2
     190:	add	r3, r2, r3
     194:	ldr	r2, [r3, #4]
     198:	ldr	r3, [fp, #-8]
     19c:	lsl	r3, r3, #2
     1a0:	add	r3, r2, r3
     1a4:	ldr	r3, [r3]
     1a8:	lsl	r3, r3, #2
     1ac:	ldr	r2, [fp, #-12]
     1b0:	add	r3, r2, r3
     1b4:	ldr	r2, [r3]
     1b8:	add	r2, r2, #1
     1bc:	str	r2, [r3]
     1c0:	ldr	r3, [fp, #-8]
     1c4:	add	r3, r3, #1
     1c8:	str	r3, [fp, #-8]
     1cc:	ldr	r3, [fp, #-8]
     1d0:	mov	r0, r3
     1d4:	asr	r1, r0, #31
     1d8:	ldr	r2, [pc, #444]	; 39c <print_all_distinct_dims+0x344>
     1dc:	ldr	r3, [fp, #-16]
     1e0:	add	r3, r3, #34	; 0x22
     1e4:	lsl	r3, r3, #2
     1e8:	add	r3, r2, r3
     1ec:	ldr	r3, [r3, #4]
     1f0:	sub	r3, r3, #1
     1f4:	ldr	r2, [pc, #416]	; 39c <print_all_distinct_dims+0x344>
     1f8:	add	r3, r3, #30
     1fc:	lsl	r3, r3, #3
     200:	add	r3, r2, r3
     204:	ldrd	r2, [r3]
     208:	cmp	r0, r2
     20c:	sbcs	r3, r1, r3
     210:	blt	150 <print_all_distinct_dims+0xf8>
     214:	ldr	r3, [fp, #-16]
     218:	add	r3, r3, #1
     21c:	mov	r1, r3
     220:	ldr	r0, [pc, #392]	; 3b0 <print_all_distinct_dims+0x358>
     224:	bl	0 <printf>
     228:	ldr	r2, [pc, #364]	; 39c <print_all_distinct_dims+0x344>
     22c:	ldr	r3, [fp, #-16]
     230:	add	r3, r3, #8
     234:	lsl	r3, r3, #2
     238:	add	r3, r2, r3
     23c:	ldr	r3, [r3, #4]
     240:	str	r3, [fp, #-8]
     244:	b	27c <print_all_distinct_dims+0x224>
     248:	ldr	r3, [fp, #-8]
     24c:	lsl	r3, r3, #2
     250:	ldr	r2, [fp, #-12]
     254:	add	r3, r2, r3
     258:	ldr	r3, [r3]
     25c:	cmp	r3, #0
     260:	ble	270 <print_all_distinct_dims+0x218>
     264:	ldr	r1, [fp, #-8]
     268:	ldr	r0, [pc, #324]	; 3b4 <print_all_distinct_dims+0x35c>
     26c:	bl	0 <printf>
     270:	ldr	r3, [fp, #-8]
     274:	add	r3, r3, #1
     278:	str	r3, [fp, #-8]
     27c:	ldr	r2, [pc, #280]	; 39c <print_all_distinct_dims+0x344>
     280:	ldr	r3, [fp, #-16]
     284:	lsl	r3, r3, #2
     288:	add	r3, r2, r3
     28c:	ldr	r2, [r3, #4]
     290:	ldr	r3, [fp, #-8]
     294:	cmp	r2, r3
     298:	bgt	248 <print_all_distinct_dims+0x1f0>
     29c:	ldr	r2, [pc, #248]	; 39c <print_all_distinct_dims+0x344>
     2a0:	ldr	r3, [fp, #-16]
     2a4:	lsl	r3, r3, #2
     2a8:	add	r3, r2, r3
     2ac:	ldr	r3, [r3, #4]
     2b0:	mov	r1, r3
     2b4:	ldr	r0, [pc, #252]	; 3b8 <print_all_distinct_dims+0x360>
     2b8:	bl	0 <printf>
     2bc:	ldr	r0, [pc, #248]	; 3bc <print_all_distinct_dims+0x364>
     2c0:	bl	0 <printf>
     2c4:	ldr	r2, [pc, #208]	; 39c <print_all_distinct_dims+0x344>
     2c8:	ldr	r3, [fp, #-16]
     2cc:	add	r3, r3, #8
     2d0:	lsl	r3, r3, #2
     2d4:	add	r3, r2, r3
     2d8:	ldr	r3, [r3, #4]
     2dc:	str	r3, [fp, #-8]
     2e0:	b	32c <print_all_distinct_dims+0x2d4>
     2e4:	ldr	r3, [fp, #-8]
     2e8:	lsl	r3, r3, #2
     2ec:	ldr	r2, [fp, #-12]
     2f0:	add	r3, r2, r3
     2f4:	ldr	r3, [r3]
     2f8:	cmp	r3, #0
     2fc:	ble	320 <print_all_distinct_dims+0x2c8>
     300:	ldr	r3, [fp, #-8]
     304:	lsl	r3, r3, #2
     308:	ldr	r2, [fp, #-12]
     30c:	add	r3, r2, r3
     310:	ldr	r3, [r3]
     314:	mov	r1, r3
     318:	ldr	r0, [pc, #148]	; 3b4 <print_all_distinct_dims+0x35c>
     31c:	bl	0 <printf>
     320:	ldr	r3, [fp, #-8]
     324:	add	r3, r3, #1
     328:	str	r3, [fp, #-8]
     32c:	ldr	r2, [pc, #104]	; 39c <print_all_distinct_dims+0x344>
     330:	ldr	r3, [fp, #-16]
     334:	lsl	r3, r3, #2
     338:	add	r3, r2, r3
     33c:	ldr	r2, [r3, #4]
     340:	ldr	r3, [fp, #-8]
     344:	cmp	r2, r3
     348:	bgt	2e4 <print_all_distinct_dims+0x28c>
     34c:	ldr	r2, [pc, #72]	; 39c <print_all_distinct_dims+0x344>
     350:	ldr	r3, [fp, #-16]
     354:	lsl	r3, r3, #2
     358:	add	r3, r2, r3
     35c:	ldr	r3, [r3, #4]
     360:	lsl	r3, r3, #2
     364:	ldr	r2, [fp, #-12]
     368:	add	r3, r2, r3
     36c:	ldr	r3, [r3]
     370:	mov	r1, r3
     374:	ldr	r0, [pc, #60]	; 3b8 <print_all_distinct_dims+0x360>
     378:	bl	0 <printf>
     37c:	mov	r0, #10
     380:	bl	0 <putchar>
     384:	ldr	r0, [fp, #-12]
     388:	bl	0 <free>
     38c:	b	394 <print_all_distinct_dims+0x33c>
     390:	nop			; (mov r0, r0)
     394:	sub	sp, fp, #4
     398:	pop	{fp, pc}
     39c:	.word	0x00000000
     3a0:	.word	0x00000198
     3a4:	.word	0x00000000
     3a8:	.word	0x00000054
     3ac:	.word	0x00000070
     3b0:	.word	0x000000a8
     3b4:	.word	0x000000b4
     3b8:	.word	0x000000b8
     3bc:	.word	0x000000bc

000003c0 <get_all_dims_for_array>:
     3c0:	push	{fp, lr}
     3c4:	add	fp, sp, #4
     3c8:	sub	sp, sp, #120	; 0x78
     3cc:	str	r0, [fp, #-112]	; 0xffffff90
     3d0:	str	r1, [fp, #-116]	; 0xffffff8c
     3d4:	str	r2, [fp, #-120]	; 0xffffff88
     3d8:	sub	r3, fp, #52	; 0x34
     3dc:	mov	r1, r3
     3e0:	ldr	r0, [pc, #2168]	; c60 <get_all_dims_for_array+0x8a0>
     3e4:	bl	0 <coda_cursor_get_type_class>
     3e8:	mov	r3, r0
     3ec:	cmp	r3, #0
     3f0:	beq	3f8 <get_all_dims_for_array+0x38>
     3f4:	bl	0 <handle_coda_error>
     3f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     3fc:	cmp	r3, #5
     400:	ldrls	pc, [pc, r3, lsl #2]
     404:	b	c34 <get_all_dims_for_array+0x874>
     408:	.word	0x00000894
     40c:	.word	0x00000420
     410:	.word	0x00000c34
     414:	.word	0x00000c34
     418:	.word	0x00000a50
     41c:	.word	0x00000a50
     420:	ldr	r2, [fp, #-116]	; 0xffffff8c
     424:	mov	r3, r2
     428:	lsl	r3, r3, #2
     42c:	add	r3, r3, r2
     430:	lsl	r3, r3, #4
     434:	add	r3, r3, #800	; 0x320
     438:	ldr	r2, [pc, #2084]	; c64 <get_all_dims_for_array+0x8a4>
     43c:	add	r3, r3, r2
     440:	str	r3, [fp, #-28]	; 0xffffffe4
     444:	ldr	r3, [fp, #-28]	; 0xffffffe4
     448:	ldr	r3, [r3]
     44c:	str	r3, [fp, #-32]	; 0xffffffe0
     450:	ldr	r3, [pc, #2060]	; c64 <get_all_dims_for_array+0x8a4>
     454:	ldr	r2, [r3, #3360]	; 0xd20
     458:	ldr	r3, [fp, #-116]	; 0xffffff8c
     45c:	cmp	r2, r3
     460:	bne	6a4 <get_all_dims_for_array+0x2e4>
     464:	sub	r2, fp, #104	; 0x68
     468:	sub	r3, fp, #56	; 0x38
     46c:	mov	r1, r3
     470:	ldr	r0, [pc, #2024]	; c60 <get_all_dims_for_array+0x8a0>
     474:	bl	0 <coda_cursor_get_array_dim>
     478:	mov	r3, r0
     47c:	cmp	r3, #0
     480:	beq	488 <get_all_dims_for_array+0xc8>
     484:	bl	0 <handle_coda_error>
     488:	ldr	r3, [fp, #-28]	; 0xffffffe4
     48c:	ldr	r2, [r3, #4]
     490:	ldr	r3, [fp, #-56]	; 0xffffffc8
     494:	cmp	r2, r3
     498:	beq	4b0 <get_all_dims_for_array+0xf0>
     49c:	ldr	r3, [pc, #1988]	; c68 <get_all_dims_for_array+0x8a8>
     4a0:	mov	r2, #125	; 0x7d
     4a4:	ldr	r1, [pc, #1984]	; c6c <get_all_dims_for_array+0x8ac>
     4a8:	ldr	r0, [pc, #1984]	; c70 <get_all_dims_for_array+0x8b0>
     4ac:	bl	0 <__assert_fail>
     4b0:	mov	r3, #0
     4b4:	str	r3, [fp, #-8]
     4b8:	b	68c <get_all_dims_for_array+0x2cc>
     4bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4c0:	ldr	r2, [fp, #-8]
     4c4:	add	r2, r2, #2
     4c8:	ldr	r3, [r3, r2, lsl #2]
     4cc:	cmn	r3, #1
     4d0:	bne	680 <get_all_dims_for_array+0x2c0>
     4d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
     4d8:	ldr	r3, [fp, #-8]
     4dc:	add	r3, r2, r3
     4e0:	ldr	r2, [pc, #1932]	; c74 <get_all_dims_for_array+0x8b4>
     4e4:	add	r3, r3, #26
     4e8:	lsl	r3, r3, #2
     4ec:	add	r3, r2, r3
     4f0:	ldr	r2, [r3, #4]
     4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4f8:	ldr	r3, [r3, #44]	; 0x2c
     4fc:	lsl	r3, r3, #2
     500:	add	r2, r2, r3
     504:	ldr	r3, [fp, #-8]
     508:	lsl	r3, r3, #2
     50c:	sub	r1, fp, #4
     510:	add	r3, r1, r3
     514:	ldr	r3, [r3, #-100]	; 0xffffff9c
     518:	str	r3, [r2]
     51c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     520:	ldr	r3, [fp, #-8]
     524:	add	r3, r2, r3
     528:	ldr	r2, [pc, #1860]	; c74 <get_all_dims_for_array+0x8b4>
     52c:	lsl	r3, r3, #2
     530:	add	r3, r2, r3
     534:	ldr	r3, [r3, #4]
     538:	cmn	r3, #1
     53c:	bne	5a8 <get_all_dims_for_array+0x1e8>
     540:	ldr	r2, [fp, #-32]	; 0xffffffe0
     544:	ldr	r3, [fp, #-8]
     548:	add	r1, r2, r3
     54c:	ldr	r3, [fp, #-8]
     550:	lsl	r3, r3, #2
     554:	sub	r2, fp, #4
     558:	add	r3, r2, r3
     55c:	ldr	r2, [r3, #-100]	; 0xffffff9c
     560:	ldr	r0, [pc, #1804]	; c74 <get_all_dims_for_array+0x8b4>
     564:	lsl	r3, r1, #2
     568:	add	r3, r0, r3
     56c:	str	r2, [r3, #4]
     570:	ldr	r2, [fp, #-32]	; 0xffffffe0
     574:	ldr	r3, [fp, #-8]
     578:	add	r1, r2, r3
     57c:	ldr	r3, [fp, #-8]
     580:	lsl	r3, r3, #2
     584:	sub	r2, fp, #4
     588:	add	r3, r2, r3
     58c:	ldr	r2, [r3, #-100]	; 0xffffff9c
     590:	ldr	r0, [pc, #1756]	; c74 <get_all_dims_for_array+0x8b4>
     594:	add	r3, r1, #8
     598:	lsl	r3, r3, #2
     59c:	add	r3, r0, r3
     5a0:	str	r2, [r3, #4]
     5a4:	b	680 <get_all_dims_for_array+0x2c0>
     5a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r2, r3
     5b4:	ldr	r2, [pc, #1720]	; c74 <get_all_dims_for_array+0x8b4>
     5b8:	lsl	r3, r3, #2
     5bc:	add	r3, r2, r3
     5c0:	ldr	r2, [r3, #4]
     5c4:	ldr	r3, [fp, #-8]
     5c8:	lsl	r3, r3, #2
     5cc:	sub	r1, fp, #4
     5d0:	add	r3, r1, r3
     5d4:	ldr	r3, [r3, #-100]	; 0xffffff9c
     5d8:	cmp	r2, r3
     5dc:	bge	610 <get_all_dims_for_array+0x250>
     5e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5e4:	ldr	r3, [fp, #-8]
     5e8:	add	r1, r2, r3
     5ec:	ldr	r3, [fp, #-8]
     5f0:	lsl	r3, r3, #2
     5f4:	sub	r2, fp, #4
     5f8:	add	r3, r2, r3
     5fc:	ldr	r2, [r3, #-100]	; 0xffffff9c
     600:	ldr	r0, [pc, #1644]	; c74 <get_all_dims_for_array+0x8b4>
     604:	lsl	r3, r1, #2
     608:	add	r3, r0, r3
     60c:	str	r2, [r3, #4]
     610:	ldr	r2, [fp, #-32]	; 0xffffffe0
     614:	ldr	r3, [fp, #-8]
     618:	add	r3, r2, r3
     61c:	ldr	r2, [pc, #1616]	; c74 <get_all_dims_for_array+0x8b4>
     620:	add	r3, r3, #8
     624:	lsl	r3, r3, #2
     628:	add	r3, r2, r3
     62c:	ldr	r2, [r3, #4]
     630:	ldr	r3, [fp, #-8]
     634:	lsl	r3, r3, #2
     638:	sub	r1, fp, #4
     63c:	add	r3, r1, r3
     640:	ldr	r3, [r3, #-100]	; 0xffffff9c
     644:	cmp	r2, r3
     648:	ble	680 <get_all_dims_for_array+0x2c0>
     64c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     650:	ldr	r3, [fp, #-8]
     654:	add	r1, r2, r3
     658:	ldr	r3, [fp, #-8]
     65c:	lsl	r3, r3, #2
     660:	sub	r2, fp, #4
     664:	add	r3, r2, r3
     668:	ldr	r2, [r3, #-100]	; 0xffffff9c
     66c:	ldr	r0, [pc, #1536]	; c74 <get_all_dims_for_array+0x8b4>
     670:	add	r3, r1, #8
     674:	lsl	r3, r3, #2
     678:	add	r3, r0, r3
     67c:	str	r2, [r3, #4]
     680:	ldr	r3, [fp, #-8]
     684:	add	r3, r3, #1
     688:	str	r3, [fp, #-8]
     68c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     690:	ldr	r2, [r3, #4]
     694:	ldr	r3, [fp, #-8]
     698:	cmp	r2, r3
     69c:	bgt	4bc <get_all_dims_for_array+0xfc>
     6a0:	b	c48 <get_all_dims_for_array+0x888>
     6a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
     6a8:	cmp	r3, #0
     6ac:	bne	6bc <get_all_dims_for_array+0x2fc>
     6b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6b4:	mov	r2, #0
     6b8:	str	r2, [r3, #44]	; 0x2c
     6bc:	ldr	r3, [fp, #-116]	; 0xffffff8c
     6c0:	add	r2, r3, #1
     6c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6c8:	ldr	r3, [r3, #44]	; 0x2c
     6cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     6d0:	ldr	r1, [r1, #40]	; 0x28
     6d4:	mul	r1, r1, r3
     6d8:	ldr	r0, [pc, #1412]	; c64 <get_all_dims_for_array+0x8a4>
     6dc:	mov	r3, r2
     6e0:	lsl	r3, r3, #2
     6e4:	add	r3, r3, r2
     6e8:	lsl	r3, r3, #4
     6ec:	add	r3, r0, r3
     6f0:	add	r3, r3, #844	; 0x34c
     6f4:	str	r1, [r3]
     6f8:	mov	r3, #1
     6fc:	str	r3, [fp, #-12]
     700:	ldr	r3, [fp, #-32]	; 0xffffffe0
     704:	str	r3, [fp, #-16]
     708:	b	78c <get_all_dims_for_array+0x3cc>
     70c:	ldr	r2, [pc, #1376]	; c74 <get_all_dims_for_array+0x8b4>
     710:	ldr	r3, [fp, #-16]
     714:	add	r3, r3, #18
     718:	ldr	r3, [r2, r3, lsl #2]
     71c:	cmp	r3, #0
     720:	beq	760 <get_all_dims_for_array+0x3a0>
     724:	ldr	r2, [pc, #1352]	; c74 <get_all_dims_for_array+0x8b4>
     728:	ldr	r3, [fp, #-16]
     72c:	add	r3, r3, #26
     730:	lsl	r3, r3, #2
     734:	add	r3, r2, r3
     738:	ldr	r2, [r3, #4]
     73c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     740:	ldr	r3, [r3, #44]	; 0x2c
     744:	lsl	r3, r3, #2
     748:	add	r3, r2, r3
     74c:	ldr	r2, [r3]
     750:	ldr	r3, [fp, #-12]
     754:	mul	r3, r2, r3
     758:	str	r3, [fp, #-12]
     75c:	b	780 <get_all_dims_for_array+0x3c0>
     760:	ldr	r2, [pc, #1292]	; c74 <get_all_dims_for_array+0x8b4>
     764:	ldr	r3, [fp, #-16]
     768:	lsl	r3, r3, #2
     76c:	add	r3, r2, r3
     770:	ldr	r2, [r3, #4]
     774:	ldr	r3, [fp, #-12]
     778:	mul	r3, r2, r3
     77c:	str	r3, [fp, #-12]
     780:	ldr	r3, [fp, #-16]
     784:	add	r3, r3, #1
     788:	str	r3, [fp, #-16]
     78c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     790:	ldr	r2, [r3, #4]
     794:	ldr	r3, [fp, #-32]	; 0xffffffe0
     798:	add	r2, r2, r3
     79c:	ldr	r3, [fp, #-16]
     7a0:	cmp	r2, r3
     7a4:	bgt	70c <get_all_dims_for_array+0x34c>
     7a8:	ldr	r3, [fp, #-12]
     7ac:	cmp	r3, #0
     7b0:	ble	c48 <get_all_dims_for_array+0x888>
     7b4:	ldr	r0, [pc, #1188]	; c60 <get_all_dims_for_array+0x8a0>
     7b8:	bl	0 <coda_cursor_goto_first_array_element>
     7bc:	mov	r3, r0
     7c0:	cmp	r3, #0
     7c4:	beq	7cc <get_all_dims_for_array+0x40c>
     7c8:	bl	0 <handle_coda_error>
     7cc:	mov	r3, #0
     7d0:	str	r3, [fp, #-20]	; 0xffffffec
     7d4:	b	878 <get_all_dims_for_array+0x4b8>
     7d8:	ldr	r3, [fp, #-112]	; 0xffffff90
     7dc:	add	r0, r3, #1
     7e0:	ldr	r3, [fp, #-116]	; 0xffffff8c
     7e4:	add	r3, r3, #1
     7e8:	ldr	r2, [fp, #-120]	; 0xffffff88
     7ec:	mov	r1, r3
     7f0:	bl	3c0 <get_all_dims_for_array>
     7f4:	ldr	r3, [fp, #-12]
     7f8:	sub	r2, r3, #1
     7fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     800:	cmp	r2, r3
     804:	ble	86c <get_all_dims_for_array+0x4ac>
     808:	ldr	r0, [pc, #1104]	; c60 <get_all_dims_for_array+0x8a0>
     80c:	bl	0 <coda_cursor_goto_next_array_element>
     810:	mov	r3, r0
     814:	cmp	r3, #0
     818:	beq	820 <get_all_dims_for_array+0x460>
     81c:	bl	0 <handle_coda_error>
     820:	ldr	r3, [fp, #-116]	; 0xffffff8c
     824:	add	r2, r3, #1
     828:	ldr	r1, [pc, #1076]	; c64 <get_all_dims_for_array+0x8a4>
     82c:	mov	r3, r2
     830:	lsl	r3, r3, #2
     834:	add	r3, r3, r2
     838:	lsl	r3, r3, #4
     83c:	add	r3, r1, r3
     840:	add	r3, r3, #844	; 0x34c
     844:	ldr	r3, [r3]
     848:	add	r1, r3, #1
     84c:	ldr	r0, [pc, #1040]	; c64 <get_all_dims_for_array+0x8a4>
     850:	mov	r3, r2
     854:	lsl	r3, r3, #2
     858:	add	r3, r3, r2
     85c:	lsl	r3, r3, #4
     860:	add	r3, r0, r3
     864:	add	r3, r3, #844	; 0x34c
     868:	str	r1, [r3]
     86c:	ldr	r3, [fp, #-20]	; 0xffffffec
     870:	add	r3, r3, #1
     874:	str	r3, [fp, #-20]	; 0xffffffec
     878:	ldr	r2, [fp, #-20]	; 0xffffffec
     87c:	ldr	r3, [fp, #-12]
     880:	cmp	r2, r3
     884:	blt	7d8 <get_all_dims_for_array+0x418>
     888:	ldr	r0, [pc, #976]	; c60 <get_all_dims_for_array+0x8a0>
     88c:	bl	0 <coda_cursor_goto_parent>
     890:	b	c48 <get_all_dims_for_array+0x888>
     894:	ldr	r2, [pc, #968]	; c64 <get_all_dims_for_array+0x8a4>
     898:	ldr	r3, [fp, #-120]	; 0xffffff88
     89c:	add	r3, r3, #872	; 0x368
     8a0:	lsl	r3, r3, #2
     8a4:	add	r3, r2, r3
     8a8:	ldr	r3, [r3, #4]
     8ac:	sub	r2, fp, #60	; 0x3c
     8b0:	mov	r1, r3
     8b4:	ldr	r0, [pc, #932]	; c60 <get_all_dims_for_array+0x8a0>
     8b8:	bl	0 <coda_cursor_get_record_field_available_status>
     8bc:	mov	r3, r0
     8c0:	cmp	r3, #0
     8c4:	beq	8cc <get_all_dims_for_array+0x50c>
     8c8:	bl	0 <handle_coda_error>
     8cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
     8d0:	cmp	r3, #0
     8d4:	beq	934 <get_all_dims_for_array+0x574>
     8d8:	ldr	r2, [pc, #900]	; c64 <get_all_dims_for_array+0x8a4>
     8dc:	ldr	r3, [fp, #-120]	; 0xffffff88
     8e0:	add	r3, r3, #872	; 0x368
     8e4:	lsl	r3, r3, #2
     8e8:	add	r3, r2, r3
     8ec:	ldr	r3, [r3, #4]
     8f0:	mov	r1, r3
     8f4:	ldr	r0, [pc, #868]	; c60 <get_all_dims_for_array+0x8a0>
     8f8:	bl	0 <coda_cursor_goto_record_field_by_index>
     8fc:	mov	r3, r0
     900:	cmp	r3, #0
     904:	beq	90c <get_all_dims_for_array+0x54c>
     908:	bl	0 <handle_coda_error>
     90c:	ldr	r3, [fp, #-112]	; 0xffffff90
     910:	add	r0, r3, #1
     914:	ldr	r3, [fp, #-120]	; 0xffffff88
     918:	add	r3, r3, #1
     91c:	mov	r2, r3
     920:	ldr	r1, [fp, #-116]	; 0xffffff8c
     924:	bl	3c0 <get_all_dims_for_array>
     928:	ldr	r0, [pc, #816]	; c60 <get_all_dims_for_array+0x8a0>
     92c:	bl	0 <coda_cursor_goto_parent>
     930:	b	c54 <get_all_dims_for_array+0x894>
     934:	ldr	r3, [pc, #808]	; c64 <get_all_dims_for_array+0x8a4>
     938:	ldr	r2, [r3, #3360]	; 0xd20
     93c:	mov	r3, r2
     940:	lsl	r3, r3, #2
     944:	add	r3, r3, r2
     948:	lsl	r3, r3, #4
     94c:	add	r3, r3, #800	; 0x320
     950:	ldr	r2, [pc, #780]	; c64 <get_all_dims_for_array+0x8a4>
     954:	add	r3, r3, r2
     958:	str	r3, [fp, #-36]	; 0xffffffdc
     95c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     960:	ldr	r3, [r3]
     964:	str	r3, [fp, #-40]	; 0xffffffd8
     968:	mov	r3, #0
     96c:	str	r3, [fp, #-24]	; 0xffffffe8
     970:	b	a38 <get_all_dims_for_array+0x678>
     974:	ldr	r3, [fp, #-36]	; 0xffffffdc
     978:	ldr	r2, [fp, #-24]	; 0xffffffe8
     97c:	add	r2, r2, #2
     980:	ldr	r3, [r3, r2, lsl #2]
     984:	cmn	r3, #1
     988:	bne	a2c <get_all_dims_for_array+0x66c>
     98c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     990:	ldr	r3, [fp, #-24]	; 0xffffffe8
     994:	add	r3, r2, r3
     998:	ldr	r2, [pc, #724]	; c74 <get_all_dims_for_array+0x8b4>
     99c:	add	r3, r3, #26
     9a0:	lsl	r3, r3, #2
     9a4:	add	r3, r2, r3
     9a8:	ldr	r2, [r3, #4]
     9ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
     9b0:	ldr	r3, [r3, #44]	; 0x2c
     9b4:	lsl	r3, r3, #2
     9b8:	add	r3, r2, r3
     9bc:	mov	r2, #0
     9c0:	str	r2, [r3]
     9c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
     9c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9cc:	add	r3, r2, r3
     9d0:	ldr	r2, [pc, #668]	; c74 <get_all_dims_for_array+0x8b4>
     9d4:	lsl	r3, r3, #2
     9d8:	add	r3, r2, r3
     9dc:	ldr	r3, [r3, #4]
     9e0:	cmn	r3, #1
     9e4:	bne	a08 <get_all_dims_for_array+0x648>
     9e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
     9ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9f0:	add	r3, r2, r3
     9f4:	ldr	r2, [pc, #632]	; c74 <get_all_dims_for_array+0x8b4>
     9f8:	lsl	r3, r3, #2
     9fc:	add	r3, r2, r3
     a00:	mov	r2, #0
     a04:	str	r2, [r3, #4]
     a08:	ldr	r2, [fp, #-40]	; 0xffffffd8
     a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a10:	add	r3, r2, r3
     a14:	ldr	r2, [pc, #600]	; c74 <get_all_dims_for_array+0x8b4>
     a18:	add	r3, r3, #8
     a1c:	lsl	r3, r3, #2
     a20:	add	r3, r2, r3
     a24:	mov	r2, #0
     a28:	str	r2, [r3, #4]
     a2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a30:	add	r3, r3, #1
     a34:	str	r3, [fp, #-24]	; 0xffffffe8
     a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
     a3c:	ldr	r2, [r3, #4]
     a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a44:	cmp	r2, r3
     a48:	bgt	974 <get_all_dims_for_array+0x5b4>
     a4c:	b	c54 <get_all_dims_for_array+0x894>
     a50:	ldr	r3, [pc, #524]	; c64 <get_all_dims_for_array+0x8a4>
     a54:	ldr	r2, [r3, #3360]	; 0xd20
     a58:	ldr	r3, [fp, #-116]	; 0xffffff8c
     a5c:	cmp	r2, r3
     a60:	beq	a78 <get_all_dims_for_array+0x6b8>
     a64:	ldr	r3, [pc, #508]	; c68 <get_all_dims_for_array+0x8a8>
     a68:	mov	r2, #252	; 0xfc
     a6c:	ldr	r1, [pc, #504]	; c6c <get_all_dims_for_array+0x8ac>
     a70:	ldr	r0, [pc, #512]	; c78 <get_all_dims_for_array+0x8b8>
     a74:	bl	0 <__assert_fail>
     a78:	ldr	r3, [fp, #-52]	; 0xffffffcc
     a7c:	cmp	r3, #4
     a80:	bne	ab8 <get_all_dims_for_array+0x6f8>
     a84:	sub	r3, fp, #72	; 0x48
     a88:	mov	r1, r3
     a8c:	ldr	r0, [pc, #460]	; c60 <get_all_dims_for_array+0x8a0>
     a90:	bl	0 <coda_cursor_get_string_length>
     a94:	mov	r3, r0
     a98:	cmp	r3, #0
     a9c:	beq	aa4 <get_all_dims_for_array+0x6e4>
     aa0:	bl	0 <handle_coda_error>
     aa4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     aa8:	mov	r2, r3
     aac:	asr	r3, r2, #31
     ab0:	strd	r2, [fp, #-68]	; 0xffffffbc
     ab4:	b	ad8 <get_all_dims_for_array+0x718>
     ab8:	sub	r3, fp, #68	; 0x44
     abc:	mov	r1, r3
     ac0:	ldr	r0, [pc, #408]	; c60 <get_all_dims_for_array+0x8a0>
     ac4:	bl	0 <coda_cursor_get_byte_size>
     ac8:	mov	r3, r0
     acc:	cmp	r3, #0
     ad0:	beq	ad8 <get_all_dims_for_array+0x718>
     ad4:	bl	0 <handle_coda_error>
     ad8:	ldr	r2, [fp, #-116]	; 0xffffff8c
     adc:	mov	r3, r2
     ae0:	lsl	r3, r3, #2
     ae4:	add	r3, r3, r2
     ae8:	lsl	r3, r3, #4
     aec:	add	r3, r3, #800	; 0x320
     af0:	ldr	r2, [pc, #364]	; c64 <get_all_dims_for_array+0x8a4>
     af4:	add	r3, r3, r2
     af8:	str	r3, [fp, #-44]	; 0xffffffd4
     afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b00:	ldr	r3, [r3]
     b04:	str	r3, [fp, #-48]	; 0xffffffd0
     b08:	ldr	r2, [pc, #356]	; c74 <get_all_dims_for_array+0x8b4>
     b0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     b10:	add	r3, r3, #26
     b14:	lsl	r3, r3, #2
     b18:	add	r3, r2, r3
     b1c:	ldr	r2, [r3, #4]
     b20:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b24:	ldr	r3, [r3, #44]	; 0x2c
     b28:	lsl	r3, r3, #2
     b2c:	add	r1, r2, r3
     b30:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     b34:	mov	r3, r2
     b38:	str	r3, [r1]
     b3c:	ldr	r2, [pc, #304]	; c74 <get_all_dims_for_array+0x8b4>
     b40:	ldr	r3, [fp, #-48]	; 0xffffffd0
     b44:	lsl	r3, r3, #2
     b48:	add	r3, r2, r3
     b4c:	ldr	r3, [r3, #4]
     b50:	cmn	r3, #1
     b54:	bne	b98 <get_all_dims_for_array+0x7d8>
     b58:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     b5c:	mov	r1, r2
     b60:	ldr	r2, [pc, #268]	; c74 <get_all_dims_for_array+0x8b4>
     b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
     b68:	lsl	r3, r3, #2
     b6c:	add	r3, r2, r3
     b70:	str	r1, [r3, #4]
     b74:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     b78:	mov	r1, r2
     b7c:	ldr	r2, [pc, #240]	; c74 <get_all_dims_for_array+0x8b4>
     b80:	ldr	r3, [fp, #-48]	; 0xffffffd0
     b84:	add	r3, r3, #8
     b88:	lsl	r3, r3, #2
     b8c:	add	r3, r2, r3
     b90:	str	r1, [r3, #4]
     b94:	b	c50 <get_all_dims_for_array+0x890>
     b98:	ldr	r2, [pc, #212]	; c74 <get_all_dims_for_array+0x8b4>
     b9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     ba0:	lsl	r3, r3, #2
     ba4:	add	r3, r2, r3
     ba8:	ldr	r3, [r3, #4]
     bac:	mov	r0, r3
     bb0:	asr	r1, r0, #31
     bb4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     bb8:	cmp	r0, r2
     bbc:	sbcs	r3, r1, r3
     bc0:	bge	be0 <get_all_dims_for_array+0x820>
     bc4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     bc8:	mov	r1, r2
     bcc:	ldr	r2, [pc, #160]	; c74 <get_all_dims_for_array+0x8b4>
     bd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     bd4:	lsl	r3, r3, #2
     bd8:	add	r3, r2, r3
     bdc:	str	r1, [r3, #4]
     be0:	ldr	r2, [pc, #140]	; c74 <get_all_dims_for_array+0x8b4>
     be4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     be8:	add	r3, r3, #8
     bec:	lsl	r3, r3, #2
     bf0:	add	r3, r2, r3
     bf4:	ldr	r3, [r3, #4]
     bf8:	mov	r2, r3
     bfc:	asr	r3, r2, #31
     c00:	ldrd	r0, [fp, #-68]	; 0xffffffbc
     c04:	cmp	r0, r2
     c08:	sbcs	r3, r1, r3
     c0c:	bge	c50 <get_all_dims_for_array+0x890>
     c10:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     c14:	mov	r1, r2
     c18:	ldr	r2, [pc, #84]	; c74 <get_all_dims_for_array+0x8b4>
     c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     c20:	add	r3, r3, #8
     c24:	lsl	r3, r3, #2
     c28:	add	r3, r2, r3
     c2c:	str	r1, [r3, #4]
     c30:	b	c50 <get_all_dims_for_array+0x890>
     c34:	ldr	r3, [pc, #44]	; c68 <get_all_dims_for_array+0x8a8>
     c38:	ldr	r2, [pc, #60]	; c7c <get_all_dims_for_array+0x8bc>
     c3c:	ldr	r1, [pc, #40]	; c6c <get_all_dims_for_array+0x8ac>
     c40:	ldr	r0, [pc, #56]	; c80 <get_all_dims_for_array+0x8c0>
     c44:	bl	0 <__assert_fail>
     c48:	nop			; (mov r0, r0)
     c4c:	b	c54 <get_all_dims_for_array+0x894>
     c50:	nop			; (mov r0, r0)
     c54:	nop			; (mov r0, r0)
     c58:	sub	sp, fp, #4
     c5c:	pop	{fp, pc}
     c60:	.word	0x00000090
     c64:	.word	0x00000000
     c68:	.word	0x000001b0
     c6c:	.word	0x00000000
     c70:	.word	0x000000c4
     c74:	.word	0x00000000
     c78:	.word	0x000000e8
     c7c:	.word	0x00000126
     c80:	.word	0x00000110

00000c84 <dim_enter_array>:
     c84:	push	{r4, r5, fp, lr}
     c88:	add	fp, sp, #12
     c8c:	sub	sp, sp, #112	; 0x70
     c90:	ldr	r3, [pc, #3556]	; 1a7c <dim_enter_array+0xdf8>
     c94:	ldr	r2, [r3, #3360]	; 0xd20
     c98:	mov	r3, r2
     c9c:	lsl	r3, r3, #2
     ca0:	add	r3, r3, r2
     ca4:	lsl	r3, r3, #4
     ca8:	add	r3, r3, #800	; 0x320
     cac:	ldr	r2, [pc, #3528]	; 1a7c <dim_enter_array+0xdf8>
     cb0:	add	r3, r3, r2
     cb4:	str	r3, [fp, #-56]	; 0xffffffc8
     cb8:	ldr	r3, [pc, #3516]	; 1a7c <dim_enter_array+0xdf8>
     cbc:	ldr	r3, [r3, #136]	; 0x88
     cc0:	ldr	r2, [pc, #3508]	; 1a7c <dim_enter_array+0xdf8>
     cc4:	add	r3, r3, #2
     cc8:	ldr	r3, [r2, r3, lsl #2]
     ccc:	sub	r2, fp, #64	; 0x40
     cd0:	mov	r1, r2
     cd4:	mov	r0, r3
     cd8:	bl	0 <coda_type_get_class>
     cdc:	mov	r3, r0
     ce0:	cmp	r3, #0
     ce4:	beq	cec <dim_enter_array+0x68>
     ce8:	bl	0 <handle_coda_error>
     cec:	ldr	r3, [fp, #-64]	; 0xffffffc0
     cf0:	sub	r3, r3, #1
     cf4:	cmp	r3, #5
     cf8:	ldrls	pc, [pc, r3, lsl #2]
     cfc:	b	f1c <dim_enter_array+0x298>
     d00:	.word	0x00000d18
     d04:	.word	0x00000f1c
     d08:	.word	0x00000f1c
     d0c:	.word	0x00000e1c
     d10:	.word	0x00000e6c
     d14:	.word	0x00000da8
     d18:	ldr	r3, [pc, #3420]	; 1a7c <dim_enter_array+0xdf8>
     d1c:	ldr	r3, [r3, #136]	; 0x88
     d20:	ldr	r2, [pc, #3412]	; 1a7c <dim_enter_array+0xdf8>
     d24:	add	r3, r3, #2
     d28:	ldr	r3, [r2, r3, lsl #2]
     d2c:	sub	r2, fp, #116	; 0x74
     d30:	sub	r1, fp, #68	; 0x44
     d34:	mov	r0, r3
     d38:	bl	0 <coda_type_get_array_dim>
     d3c:	mov	r3, r0
     d40:	cmp	r3, #0
     d44:	beq	d4c <dim_enter_array+0xc8>
     d48:	bl	0 <handle_coda_error>
     d4c:	ldr	r2, [fp, #-68]	; 0xffffffbc
     d50:	ldr	r3, [fp, #-56]	; 0xffffffc8
     d54:	str	r2, [r3, #4]
     d58:	mov	r3, #0
     d5c:	str	r3, [fp, #-40]	; 0xffffffd8
     d60:	b	d94 <dim_enter_array+0x110>
     d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d68:	lsl	r3, r3, #2
     d6c:	sub	r2, fp, #12
     d70:	add	r3, r2, r3
     d74:	ldr	r1, [r3, #-104]	; 0xffffff98
     d78:	ldr	r3, [fp, #-56]	; 0xffffffc8
     d7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d80:	add	r2, r2, #2
     d84:	str	r1, [r3, r2, lsl #2]
     d88:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d8c:	add	r3, r3, #1
     d90:	str	r3, [fp, #-40]	; 0xffffffd8
     d94:	ldr	r3, [fp, #-68]	; 0xffffffbc
     d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d9c:	cmp	r2, r3
     da0:	blt	d64 <dim_enter_array+0xe0>
     da4:	b	f30 <dim_enter_array+0x2ac>
     da8:	ldr	r3, [pc, #3276]	; 1a7c <dim_enter_array+0xdf8>
     dac:	ldr	r3, [r3, #136]	; 0x88
     db0:	ldr	r2, [pc, #3268]	; 1a7c <dim_enter_array+0xdf8>
     db4:	add	r3, r3, #2
     db8:	ldr	r3, [r2, r3, lsl #2]
     dbc:	sub	r2, fp, #72	; 0x48
     dc0:	mov	r1, r2
     dc4:	mov	r0, r3
     dc8:	bl	0 <coda_type_get_special_type>
     dcc:	mov	r3, r0
     dd0:	cmp	r3, #0
     dd4:	beq	ddc <dim_enter_array+0x158>
     dd8:	bl	0 <handle_coda_error>
     ddc:	ldr	r3, [fp, #-72]	; 0xffffffb8
     de0:	cmp	r3, #3
     de4:	bne	e08 <dim_enter_array+0x184>
     de8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     dec:	mov	r2, #1
     df0:	str	r2, [r3, #4]
     df4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     df8:	mov	r2, #2
     dfc:	str	r2, [r3, #8]
     e00:	nop			; (mov r0, r0)
     e04:	b	f30 <dim_enter_array+0x2ac>
     e08:	ldr	r3, [pc, #3184]	; 1a80 <dim_enter_array+0xdfc>
     e0c:	ldr	r2, [pc, #3184]	; 1a84 <dim_enter_array+0xe00>
     e10:	ldr	r1, [pc, #3184]	; 1a88 <dim_enter_array+0xe04>
     e14:	ldr	r0, [pc, #3184]	; 1a8c <dim_enter_array+0xe08>
     e18:	bl	0 <__assert_fail>
     e1c:	ldr	r3, [pc, #3160]	; 1a7c <dim_enter_array+0xdf8>
     e20:	ldr	r3, [r3, #136]	; 0x88
     e24:	ldr	r2, [pc, #3152]	; 1a7c <dim_enter_array+0xdf8>
     e28:	add	r3, r3, #2
     e2c:	ldr	r3, [r2, r3, lsl #2]
     e30:	sub	r2, fp, #76	; 0x4c
     e34:	mov	r1, r2
     e38:	mov	r0, r3
     e3c:	bl	0 <coda_type_get_string_length>
     e40:	mov	r3, r0
     e44:	cmp	r3, #0
     e48:	beq	e50 <dim_enter_array+0x1cc>
     e4c:	bl	0 <handle_coda_error>
     e50:	ldr	r3, [fp, #-56]	; 0xffffffc8
     e54:	mov	r2, #1
     e58:	str	r2, [r3, #4]
     e5c:	ldr	r2, [fp, #-76]	; 0xffffffb4
     e60:	ldr	r3, [fp, #-56]	; 0xffffffc8
     e64:	str	r2, [r3, #8]
     e68:	b	f30 <dim_enter_array+0x2ac>
     e6c:	ldr	r3, [pc, #3080]	; 1a7c <dim_enter_array+0xdf8>
     e70:	ldr	r3, [r3, #136]	; 0x88
     e74:	ldr	r2, [pc, #3072]	; 1a7c <dim_enter_array+0xdf8>
     e78:	add	r3, r3, #2
     e7c:	ldr	r3, [r2, r3, lsl #2]
     e80:	sub	r2, fp, #84	; 0x54
     e84:	mov	r1, r2
     e88:	mov	r0, r3
     e8c:	bl	0 <coda_type_get_bit_size>
     e90:	mov	r3, r0
     e94:	cmp	r3, #0
     e98:	beq	ea0 <dim_enter_array+0x21c>
     e9c:	bl	0 <handle_coda_error>
     ea0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     ea4:	mov	r2, #1
     ea8:	str	r2, [r3, #4]
     eac:	ldrd	r2, [fp, #-84]	; 0xffffffac
     eb0:	cmp	r2, #0
     eb4:	sbcs	r3, r3, #0
     eb8:	blt	f0c <dim_enter_array+0x288>
     ebc:	ldrd	r2, [fp, #-84]	; 0xffffffac
     ec0:	lsr	r4, r2, #3
     ec4:	orr	r4, r4, r3, lsl #29
     ec8:	asr	r5, r3, #3
     ecc:	mov	ip, r4
     ed0:	ldrd	r2, [fp, #-84]	; 0xffffffac
     ed4:	mov	r0, #7
     ed8:	mov	r1, #0
     edc:	and	r2, r2, r0
     ee0:	and	r3, r3, r1
     ee4:	orrs	r3, r2, r3
     ee8:	beq	ef4 <dim_enter_array+0x270>
     eec:	mov	r3, #1
     ef0:	b	ef8 <dim_enter_array+0x274>
     ef4:	mov	r3, #0
     ef8:	add	r3, ip, r3
     efc:	mov	r2, r3
     f00:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f04:	str	r2, [r3, #8]
     f08:	b	f30 <dim_enter_array+0x2ac>
     f0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f10:	mvn	r2, #0
     f14:	str	r2, [r3, #8]
     f18:	b	f30 <dim_enter_array+0x2ac>
     f1c:	ldr	r3, [pc, #2908]	; 1a80 <dim_enter_array+0xdfc>
     f20:	ldr	r2, [pc, #2920]	; 1a90 <dim_enter_array+0xe0c>
     f24:	ldr	r1, [pc, #2908]	; 1a88 <dim_enter_array+0xe04>
     f28:	ldr	r0, [pc, #2908]	; 1a8c <dim_enter_array+0xe08>
     f2c:	bl	0 <__assert_fail>
     f30:	ldr	r3, [pc, #2908]	; 1a94 <dim_enter_array+0xe10>
     f34:	ldr	r3, [r3]
     f38:	cmp	r3, #0
     f3c:	bne	f68 <dim_enter_array+0x2e4>
     f40:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f44:	mvn	r2, #0
     f48:	str	r2, [r3]
     f4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f50:	mov	r2, #0
     f54:	str	r2, [r3, #40]	; 0x28
     f58:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f5c:	mov	r2, #0
     f60:	str	r2, [r3, #44]	; 0x2c
     f64:	b	1a74 <dim_enter_array+0xdf0>
     f68:	ldr	r3, [pc, #2856]	; 1a98 <dim_enter_array+0xe14>
     f6c:	ldr	r3, [r3]
     f70:	str	r3, [fp, #-60]	; 0xffffffc4
     f74:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f78:	ldr	r2, [fp, #-60]	; 0xffffffc4
     f7c:	str	r2, [r3]
     f80:	ldr	r3, [pc, #2832]	; 1a98 <dim_enter_array+0xe14>
     f84:	ldr	r2, [r3]
     f88:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f8c:	ldr	r3, [r3, #4]
     f90:	add	r3, r2, r3
     f94:	cmp	r3, #8
     f98:	ble	fb0 <dim_enter_array+0x32c>
     f9c:	ldr	r3, [pc, #2780]	; 1a80 <dim_enter_array+0xdfc>
     fa0:	ldr	r2, [pc, #2804]	; 1a9c <dim_enter_array+0xe18>
     fa4:	ldr	r1, [pc, #2780]	; 1a88 <dim_enter_array+0xe04>
     fa8:	ldr	r0, [pc, #2800]	; 1aa0 <dim_enter_array+0xe1c>
     fac:	bl	0 <__assert_fail>
     fb0:	ldr	r3, [pc, #2784]	; 1a98 <dim_enter_array+0xe14>
     fb4:	ldr	r2, [r3]
     fb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     fbc:	ldr	r3, [r3, #4]
     fc0:	add	r3, r2, r3
     fc4:	ldr	r2, [pc, #2764]	; 1a98 <dim_enter_array+0xe14>
     fc8:	str	r3, [r2]
     fcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
     fd0:	cmp	r3, #0
     fd4:	ble	101c <dim_enter_array+0x398>
     fd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
     fdc:	sub	r3, r3, #1
     fe0:	ldr	r2, [pc, #2736]	; 1a98 <dim_enter_array+0xe14>
     fe4:	add	r3, r3, #30
     fe8:	lsl	r3, r3, #3
     fec:	add	r3, r2, r3
     ff0:	ldrd	r2, [r3]
     ff4:	strd	r2, [fp, #-20]	; 0xffffffec
     ff8:	ldr	r3, [fp, #-60]	; 0xffffffc4
     ffc:	sub	r3, r3, #1
    1000:	ldr	r2, [pc, #2704]	; 1a98 <dim_enter_array+0xe14>
    1004:	add	r3, r3, #38	; 0x26
    1008:	lsl	r3, r3, #3
    100c:	add	r3, r2, r3
    1010:	ldrd	r2, [r3]
    1014:	strd	r2, [fp, #-28]	; 0xffffffe4
    1018:	b	1034 <dim_enter_array+0x3b0>
    101c:	mov	r2, #1
    1020:	mov	r3, #0
    1024:	strd	r2, [fp, #-20]	; 0xffffffec
    1028:	mov	r2, #1
    102c:	mov	r3, #0
    1030:	strd	r2, [fp, #-28]	; 0xffffffe4
    1034:	mov	r3, #0
    1038:	str	r3, [fp, #-32]	; 0xffffffe0
    103c:	mov	r3, #0
    1040:	str	r3, [fp, #-36]	; 0xffffffdc
    1044:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    1048:	cmp	r2, #1
    104c:	sbcs	r3, r3, #0
    1050:	blt	10ec <dim_enter_array+0x468>
    1054:	mov	r3, #0
    1058:	str	r3, [fp, #-40]	; 0xffffffd8
    105c:	b	10d4 <dim_enter_array+0x450>
    1060:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1064:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1068:	add	r3, r2, r3
    106c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1070:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1074:	add	r1, r1, #2
    1078:	ldr	r2, [r2, r1, lsl #2]
    107c:	ldr	r1, [pc, #2580]	; 1a98 <dim_enter_array+0xe14>
    1080:	lsl	r3, r3, #2
    1084:	add	r3, r1, r3
    1088:	str	r2, [r3, #4]
    108c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1090:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1094:	add	r3, r2, r3
    1098:	ldr	r2, [pc, #2552]	; 1a98 <dim_enter_array+0xe14>
    109c:	add	r3, r3, #18
    10a0:	mov	r1, #0
    10a4:	str	r1, [r2, r3, lsl #2]
    10a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    10b0:	add	r2, r2, #2
    10b4:	ldr	r3, [r3, r2, lsl #2]
    10b8:	cmn	r3, #1
    10bc:	bne	10c8 <dim_enter_array+0x444>
    10c0:	mov	r3, #1
    10c4:	str	r3, [fp, #-32]	; 0xffffffe0
    10c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    10cc:	add	r3, r3, #1
    10d0:	str	r3, [fp, #-40]	; 0xffffffd8
    10d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10d8:	ldr	r2, [r3, #4]
    10dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    10e0:	cmp	r2, r3
    10e4:	bgt	1060 <dim_enter_array+0x3dc>
    10e8:	b	1154 <dim_enter_array+0x4d0>
    10ec:	mov	r3, #0
    10f0:	str	r3, [fp, #-40]	; 0xffffffd8
    10f4:	b	1140 <dim_enter_array+0x4bc>
    10f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    10fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1100:	add	r3, r2, r3
    1104:	ldr	r2, [pc, #2444]	; 1a98 <dim_enter_array+0xe14>
    1108:	lsl	r3, r3, #2
    110c:	add	r3, r2, r3
    1110:	mov	r2, #0
    1114:	str	r2, [r3, #4]
    1118:	ldr	r2, [fp, #-60]	; 0xffffffc4
    111c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1120:	add	r3, r2, r3
    1124:	ldr	r2, [pc, #2412]	; 1a98 <dim_enter_array+0xe14>
    1128:	add	r3, r3, #18
    112c:	mov	r1, #0
    1130:	str	r1, [r2, r3, lsl #2]
    1134:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1138:	add	r3, r3, #1
    113c:	str	r3, [fp, #-40]	; 0xffffffd8
    1140:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1144:	ldr	r2, [r3, #4]
    1148:	ldr	r3, [fp, #-40]	; 0xffffffd8
    114c:	cmp	r2, r3
    1150:	bgt	10f8 <dim_enter_array+0x474>
    1154:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1158:	cmp	r3, #0
    115c:	beq	1458 <dim_enter_array+0x7d4>
    1160:	mov	r3, #0
    1164:	str	r3, [fp, #-40]	; 0xffffffd8
    1168:	b	12ec <dim_enter_array+0x668>
    116c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1170:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1174:	add	r2, r2, #2
    1178:	ldr	r3, [r3, r2, lsl #2]
    117c:	cmn	r3, #1
    1180:	bne	1298 <dim_enter_array+0x614>
    1184:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1188:	ldr	r3, [fp, #-40]	; 0xffffffd8
    118c:	add	r3, r2, r3
    1190:	ldr	r2, [pc, #2304]	; 1a98 <dim_enter_array+0xe14>
    1194:	add	r3, r3, #34	; 0x22
    1198:	lsl	r3, r3, #2
    119c:	add	r3, r2, r3
    11a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    11a4:	str	r2, [r3, #4]
    11a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    11ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    11b0:	add	r4, r2, r3
    11b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    11b8:	lsl	r3, r3, #2
    11bc:	mov	r0, r3
    11c0:	bl	0 <malloc>
    11c4:	mov	r3, r0
    11c8:	mov	r1, r3
    11cc:	ldr	r2, [pc, #2244]	; 1a98 <dim_enter_array+0xe14>
    11d0:	add	r3, r4, #26
    11d4:	lsl	r3, r3, #2
    11d8:	add	r3, r2, r3
    11dc:	str	r1, [r3, #4]
    11e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    11e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    11e8:	add	r3, r2, r3
    11ec:	ldr	r2, [pc, #2212]	; 1a98 <dim_enter_array+0xe14>
    11f0:	add	r3, r3, #26
    11f4:	lsl	r3, r3, #2
    11f8:	add	r3, r2, r3
    11fc:	ldr	r3, [r3, #4]
    1200:	cmp	r3, #0
    1204:	bne	122c <dim_enter_array+0x5a8>
    1208:	ldr	r3, [fp, #-20]	; 0xffffffec
    120c:	lsl	r2, r3, #2
    1210:	mov	r3, #456	; 0x1c8
    1214:	str	r3, [sp]
    1218:	ldr	r3, [pc, #2152]	; 1a88 <dim_enter_array+0xe04>
    121c:	ldr	r1, [pc, #2176]	; 1aa4 <dim_enter_array+0xe20>
    1220:	mvn	r0, #0
    1224:	bl	0 <coda_set_error>
    1228:	bl	0 <handle_coda_error>
    122c:	mov	r3, #0
    1230:	str	r3, [fp, #-44]	; 0xffffffd4
    1234:	b	1278 <dim_enter_array+0x5f4>
    1238:	ldr	r2, [fp, #-60]	; 0xffffffc4
    123c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1240:	add	r3, r2, r3
    1244:	ldr	r2, [pc, #2124]	; 1a98 <dim_enter_array+0xe14>
    1248:	add	r3, r3, #26
    124c:	lsl	r3, r3, #2
    1250:	add	r3, r2, r3
    1254:	ldr	r2, [r3, #4]
    1258:	ldr	r3, [fp, #-44]	; 0xffffffd4
    125c:	lsl	r3, r3, #2
    1260:	add	r3, r2, r3
    1264:	mvn	r2, #0
    1268:	str	r2, [r3]
    126c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1270:	add	r3, r3, #1
    1274:	str	r3, [fp, #-44]	; 0xffffffd4
    1278:	ldr	r3, [fp, #-44]	; 0xffffffd4
    127c:	mov	r0, r3
    1280:	asr	r1, r0, #31
    1284:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1288:	cmp	r0, r2
    128c:	sbcs	r3, r1, r3
    1290:	blt	1238 <dim_enter_array+0x5b4>
    1294:	b	12e0 <dim_enter_array+0x65c>
    1298:	ldr	r2, [fp, #-60]	; 0xffffffc4
    129c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    12a0:	add	r3, r2, r3
    12a4:	ldr	r2, [pc, #2028]	; 1a98 <dim_enter_array+0xe14>
    12a8:	add	r3, r3, #34	; 0x22
    12ac:	lsl	r3, r3, #2
    12b0:	add	r3, r2, r3
    12b4:	mov	r2, #0
    12b8:	str	r2, [r3, #4]
    12bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    12c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    12c4:	add	r3, r2, r3
    12c8:	ldr	r2, [pc, #1992]	; 1a98 <dim_enter_array+0xe14>
    12cc:	add	r3, r3, #26
    12d0:	lsl	r3, r3, #2
    12d4:	add	r3, r2, r3
    12d8:	mov	r2, #0
    12dc:	str	r2, [r3, #4]
    12e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    12e4:	add	r3, r3, #1
    12e8:	str	r3, [fp, #-40]	; 0xffffffd8
    12ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12f0:	ldr	r2, [r3, #4]
    12f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    12f8:	cmp	r2, r3
    12fc:	bgt	116c <dim_enter_array+0x4e8>
    1300:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1304:	mov	r2, #0
    1308:	str	r2, [r3, #44]	; 0x2c
    130c:	mov	r2, #0
    1310:	mov	r1, #0
    1314:	mov	r0, #0
    1318:	bl	3c0 <get_all_dims_for_array>
    131c:	mov	r3, #0
    1320:	str	r3, [fp, #-40]	; 0xffffffd8
    1324:	b	1444 <dim_enter_array+0x7c0>
    1328:	ldr	r3, [fp, #-56]	; 0xffffffc8
    132c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1330:	add	r2, r2, #2
    1334:	ldr	r3, [r3, r2, lsl #2]
    1338:	cmn	r3, #1
    133c:	bne	1438 <dim_enter_array+0x7b4>
    1340:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1344:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1348:	add	r3, r2, r3
    134c:	ldr	r2, [pc, #1860]	; 1a98 <dim_enter_array+0xe14>
    1350:	lsl	r3, r3, #2
    1354:	add	r3, r2, r3
    1358:	ldr	r2, [r3, #4]
    135c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1360:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1364:	add	r3, r1, r3
    1368:	ldr	r1, [pc, #1832]	; 1a98 <dim_enter_array+0xe14>
    136c:	add	r3, r3, #8
    1370:	lsl	r3, r3, #2
    1374:	add	r3, r1, r3
    1378:	ldr	r3, [r3, #4]
    137c:	cmp	r2, r3
    1380:	beq	13ac <dim_enter_array+0x728>
    1384:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1388:	ldr	r3, [fp, #-40]	; 0xffffffd8
    138c:	add	r3, r2, r3
    1390:	ldr	r2, [pc, #1792]	; 1a98 <dim_enter_array+0xe14>
    1394:	add	r3, r3, #18
    1398:	mov	r1, #1
    139c:	str	r1, [r2, r3, lsl #2]
    13a0:	mov	r3, #1
    13a4:	str	r3, [fp, #-36]	; 0xffffffdc
    13a8:	b	1438 <dim_enter_array+0x7b4>
    13ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
    13b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    13b4:	add	r3, r2, r3
    13b8:	ldr	r2, [pc, #1752]	; 1a98 <dim_enter_array+0xe14>
    13bc:	add	r3, r3, #18
    13c0:	mov	r1, #0
    13c4:	str	r1, [r2, r3, lsl #2]
    13c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    13cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    13d0:	add	r3, r2, r3
    13d4:	ldr	r2, [pc, #1724]	; 1a98 <dim_enter_array+0xe14>
    13d8:	add	r3, r3, #26
    13dc:	lsl	r3, r3, #2
    13e0:	add	r3, r2, r3
    13e4:	ldr	r3, [r3, #4]
    13e8:	mov	r0, r3
    13ec:	bl	0 <free>
    13f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    13f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    13f8:	add	r3, r2, r3
    13fc:	ldr	r2, [pc, #1684]	; 1a98 <dim_enter_array+0xe14>
    1400:	add	r3, r3, #26
    1404:	lsl	r3, r3, #2
    1408:	add	r3, r2, r3
    140c:	mov	r2, #0
    1410:	str	r2, [r3, #4]
    1414:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1418:	ldr	r3, [fp, #-40]	; 0xffffffd8
    141c:	add	r3, r2, r3
    1420:	ldr	r2, [pc, #1648]	; 1a98 <dim_enter_array+0xe14>
    1424:	add	r3, r3, #34	; 0x22
    1428:	lsl	r3, r3, #2
    142c:	add	r3, r2, r3
    1430:	mov	r2, #0
    1434:	str	r2, [r3, #4]
    1438:	ldr	r3, [fp, #-40]	; 0xffffffd8
    143c:	add	r3, r3, #1
    1440:	str	r3, [fp, #-40]	; 0xffffffd8
    1444:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1448:	ldr	r2, [r3, #4]
    144c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1450:	cmp	r2, r3
    1454:	bgt	1328 <dim_enter_array+0x6a4>
    1458:	ldr	r3, [pc, #1592]	; 1a98 <dim_enter_array+0xe14>
    145c:	mov	r2, #0
    1460:	str	r2, [r3, #68]	; 0x44
    1464:	ldr	r3, [pc, #1580]	; 1a98 <dim_enter_array+0xe14>
    1468:	mvn	r2, #0
    146c:	str	r2, [r3, #104]	; 0x68
    1470:	mov	r3, #0
    1474:	str	r3, [fp, #-40]	; 0xffffffd8
    1478:	b	14b8 <dim_enter_array+0x834>
    147c:	ldr	r2, [pc, #1556]	; 1a98 <dim_enter_array+0xe14>
    1480:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1484:	add	r3, r3, #18
    1488:	ldr	r3, [r2, r3, lsl #2]
    148c:	cmp	r3, #0
    1490:	beq	14ac <dim_enter_array+0x828>
    1494:	ldr	r3, [pc, #1532]	; 1a98 <dim_enter_array+0xe14>
    1498:	mov	r2, #1
    149c:	str	r2, [r3, #68]	; 0x44
    14a0:	ldr	r2, [pc, #1520]	; 1a98 <dim_enter_array+0xe14>
    14a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14a8:	str	r3, [r2, #104]	; 0x68
    14ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14b0:	add	r3, r3, #1
    14b4:	str	r3, [fp, #-40]	; 0xffffffd8
    14b8:	ldr	r3, [pc, #1496]	; 1a98 <dim_enter_array+0xe14>
    14bc:	ldr	r2, [r3]
    14c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14c4:	cmp	r2, r3
    14c8:	bgt	147c <dim_enter_array+0x7f8>
    14cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14d0:	mov	r2, #1
    14d4:	str	r2, [r3, #40]	; 0x28
    14d8:	mov	r3, #0
    14dc:	str	r3, [fp, #-40]	; 0xffffffd8
    14e0:	b	1608 <dim_enter_array+0x984>
    14e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    14e8:	ldr	r2, [r3, #40]	; 0x28
    14ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    14f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14f4:	add	r3, r1, r3
    14f8:	ldr	r1, [pc, #1432]	; 1a98 <dim_enter_array+0xe14>
    14fc:	lsl	r3, r3, #2
    1500:	add	r3, r1, r3
    1504:	ldr	r3, [r3, #4]
    1508:	mul	r2, r3, r2
    150c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1510:	str	r2, [r3, #40]	; 0x28
    1514:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1518:	cmp	r3, #0
    151c:	bne	157c <dim_enter_array+0x8f8>
    1520:	ldr	r2, [pc, #1392]	; 1a98 <dim_enter_array+0xe14>
    1524:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1528:	lsl	r3, r3, #2
    152c:	add	r3, r2, r3
    1530:	ldr	r3, [r3, #4]
    1534:	mov	r2, r3
    1538:	asr	r3, r2, #31
    153c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1540:	mul	r0, r3, r1
    1544:	ldr	r1, [fp, #-16]
    1548:	mul	r1, r2, r1
    154c:	add	r1, r0, r1
    1550:	ldr	r0, [fp, #-20]	; 0xffffffec
    1554:	umull	r2, r3, r0, r2
    1558:	add	r1, r1, r3
    155c:	mov	r3, r1
    1560:	ldr	r0, [pc, #1328]	; 1a98 <dim_enter_array+0xe14>
    1564:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1568:	add	r1, r1, #30
    156c:	lsl	r1, r1, #3
    1570:	add	r1, r0, r1
    1574:	strd	r2, [r1]
    1578:	b	15fc <dim_enter_array+0x978>
    157c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1580:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1584:	add	ip, r2, r3
    1588:	ldr	r2, [fp, #-60]	; 0xffffffc4
    158c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1590:	add	r3, r2, r3
    1594:	sub	r3, r3, #1
    1598:	ldr	r2, [pc, #1272]	; 1a98 <dim_enter_array+0xe14>
    159c:	add	r3, r3, #30
    15a0:	lsl	r3, r3, #3
    15a4:	add	r3, r2, r3
    15a8:	ldrd	r0, [r3]
    15ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
    15b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    15b4:	add	r3, r2, r3
    15b8:	ldr	r2, [pc, #1240]	; 1a98 <dim_enter_array+0xe14>
    15bc:	lsl	r3, r3, #2
    15c0:	add	r3, r2, r3
    15c4:	ldr	r3, [r3, #4]
    15c8:	mov	r2, r3
    15cc:	asr	r3, r2, #31
    15d0:	mul	r4, r2, r1
    15d4:	mul	lr, r0, r3
    15d8:	add	lr, r4, lr
    15dc:	umull	r2, r3, r0, r2
    15e0:	add	r1, lr, r3
    15e4:	mov	r3, r1
    15e8:	ldr	r0, [pc, #1192]	; 1a98 <dim_enter_array+0xe14>
    15ec:	add	r1, ip, #30
    15f0:	lsl	r1, r1, #3
    15f4:	add	r1, r0, r1
    15f8:	strd	r2, [r1]
    15fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1600:	add	r3, r3, #1
    1604:	str	r3, [fp, #-40]	; 0xffffffd8
    1608:	ldr	r3, [fp, #-56]	; 0xffffffc8
    160c:	ldr	r2, [r3, #4]
    1610:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1614:	cmp	r2, r3
    1618:	bgt	14e4 <dim_enter_array+0x860>
    161c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1620:	cmp	r3, #0
    1624:	beq	17c4 <dim_enter_array+0xb40>
    1628:	mov	r3, #0
    162c:	str	r3, [fp, #-40]	; 0xffffffd8
    1630:	b	1668 <dim_enter_array+0x9e4>
    1634:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1638:	ldr	r3, [fp, #-40]	; 0xffffffd8
    163c:	add	r3, r2, r3
    1640:	ldr	r2, [pc, #1104]	; 1a98 <dim_enter_array+0xe14>
    1644:	add	r3, r3, #38	; 0x26
    1648:	lsl	r3, r3, #3
    164c:	add	r1, r2, r3
    1650:	mov	r2, #0
    1654:	mov	r3, #0
    1658:	strd	r2, [r1]
    165c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1660:	add	r3, r3, #1
    1664:	str	r3, [fp, #-40]	; 0xffffffd8
    1668:	ldr	r3, [fp, #-56]	; 0xffffffc8
    166c:	ldr	r2, [r3, #4]
    1670:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1674:	cmp	r2, r3
    1678:	bgt	1634 <dim_enter_array+0x9b0>
    167c:	mov	r3, #0
    1680:	str	r3, [fp, #-48]	; 0xffffffd0
    1684:	b	17a4 <dim_enter_array+0xb20>
    1688:	mov	r3, #1
    168c:	str	r3, [fp, #-52]	; 0xffffffcc
    1690:	mov	r3, #0
    1694:	str	r3, [fp, #-40]	; 0xffffffd8
    1698:	b	1784 <dim_enter_array+0xb00>
    169c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    16a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    16a4:	add	r3, r2, r3
    16a8:	ldr	r2, [pc, #1000]	; 1a98 <dim_enter_array+0xe14>
    16ac:	add	r3, r3, #18
    16b0:	ldr	r3, [r2, r3, lsl #2]
    16b4:	cmp	r3, #0
    16b8:	beq	16fc <dim_enter_array+0xa78>
    16bc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    16c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    16c4:	add	r3, r2, r3
    16c8:	ldr	r2, [pc, #968]	; 1a98 <dim_enter_array+0xe14>
    16cc:	add	r3, r3, #26
    16d0:	lsl	r3, r3, #2
    16d4:	add	r3, r2, r3
    16d8:	ldr	r2, [r3, #4]
    16dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    16e0:	lsl	r3, r3, #2
    16e4:	add	r3, r2, r3
    16e8:	ldr	r2, [r3]
    16ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16f0:	mul	r3, r2, r3
    16f4:	str	r3, [fp, #-52]	; 0xffffffcc
    16f8:	b	1724 <dim_enter_array+0xaa0>
    16fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1700:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1704:	add	r3, r2, r3
    1708:	ldr	r2, [pc, #904]	; 1a98 <dim_enter_array+0xe14>
    170c:	lsl	r3, r3, #2
    1710:	add	r3, r2, r3
    1714:	ldr	r2, [r3, #4]
    1718:	ldr	r3, [fp, #-52]	; 0xffffffcc
    171c:	mul	r3, r2, r3
    1720:	str	r3, [fp, #-52]	; 0xffffffcc
    1724:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1728:	ldr	r3, [fp, #-40]	; 0xffffffd8
    172c:	add	ip, r2, r3
    1730:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1734:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1738:	add	r3, r2, r3
    173c:	ldr	r2, [pc, #852]	; 1a98 <dim_enter_array+0xe14>
    1740:	add	r3, r3, #38	; 0x26
    1744:	lsl	r3, r3, #3
    1748:	add	r3, r2, r3
    174c:	ldrd	r0, [r3]
    1750:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1754:	mov	r2, r3
    1758:	asr	r3, r2, #31
    175c:	adds	r2, r2, r0
    1760:	adc	r3, r3, r1
    1764:	ldr	r0, [pc, #812]	; 1a98 <dim_enter_array+0xe14>
    1768:	add	r1, ip, #38	; 0x26
    176c:	lsl	r1, r1, #3
    1770:	add	r1, r0, r1
    1774:	strd	r2, [r1]
    1778:	ldr	r3, [fp, #-40]	; 0xffffffd8
    177c:	add	r3, r3, #1
    1780:	str	r3, [fp, #-40]	; 0xffffffd8
    1784:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1788:	ldr	r2, [r3, #4]
    178c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1790:	cmp	r2, r3
    1794:	bgt	169c <dim_enter_array+0xa18>
    1798:	ldr	r3, [fp, #-48]	; 0xffffffd0
    179c:	add	r3, r3, #1
    17a0:	str	r3, [fp, #-48]	; 0xffffffd0
    17a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    17a8:	mov	r0, r3
    17ac:	asr	r1, r0, #31
    17b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    17b4:	cmp	r0, r2
    17b8:	sbcs	r3, r1, r3
    17bc:	blt	1688 <dim_enter_array+0xa04>
    17c0:	b	18c8 <dim_enter_array+0xc44>
    17c4:	ldr	r2, [pc, #716]	; 1a98 <dim_enter_array+0xe14>
    17c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17cc:	lsl	r3, r3, #2
    17d0:	add	r3, r2, r3
    17d4:	ldr	r3, [r3, #4]
    17d8:	mov	r2, r3
    17dc:	asr	r3, r2, #31
    17e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    17e4:	mul	r0, r3, r1
    17e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17ec:	mul	r1, r2, r1
    17f0:	add	r1, r0, r1
    17f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    17f8:	umull	r2, r3, r0, r2
    17fc:	add	r1, r1, r3
    1800:	mov	r3, r1
    1804:	ldr	r0, [pc, #652]	; 1a98 <dim_enter_array+0xe14>
    1808:	ldr	r1, [fp, #-60]	; 0xffffffc4
    180c:	add	r1, r1, #38	; 0x26
    1810:	lsl	r1, r1, #3
    1814:	add	r1, r0, r1
    1818:	strd	r2, [r1]
    181c:	mov	r3, #1
    1820:	str	r3, [fp, #-40]	; 0xffffffd8
    1824:	b	18b4 <dim_enter_array+0xc30>
    1828:	ldr	r2, [fp, #-60]	; 0xffffffc4
    182c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1830:	add	ip, r2, r3
    1834:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1838:	ldr	r3, [fp, #-40]	; 0xffffffd8
    183c:	add	r3, r2, r3
    1840:	sub	r3, r3, #1
    1844:	ldr	r2, [pc, #588]	; 1a98 <dim_enter_array+0xe14>
    1848:	add	r3, r3, #38	; 0x26
    184c:	lsl	r3, r3, #3
    1850:	add	r3, r2, r3
    1854:	ldrd	r0, [r3]
    1858:	ldr	r2, [fp, #-60]	; 0xffffffc4
    185c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1860:	add	r3, r2, r3
    1864:	ldr	r2, [pc, #556]	; 1a98 <dim_enter_array+0xe14>
    1868:	lsl	r3, r3, #2
    186c:	add	r3, r2, r3
    1870:	ldr	r3, [r3, #4]
    1874:	mov	r2, r3
    1878:	asr	r3, r2, #31
    187c:	mul	r4, r2, r1
    1880:	mul	lr, r0, r3
    1884:	add	lr, r4, lr
    1888:	umull	r2, r3, r0, r2
    188c:	add	r1, lr, r3
    1890:	mov	r3, r1
    1894:	ldr	r0, [pc, #508]	; 1a98 <dim_enter_array+0xe14>
    1898:	add	r1, ip, #38	; 0x26
    189c:	lsl	r1, r1, #3
    18a0:	add	r1, r0, r1
    18a4:	strd	r2, [r1]
    18a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    18ac:	add	r3, r3, #1
    18b0:	str	r3, [fp, #-40]	; 0xffffffd8
    18b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    18b8:	ldr	r2, [r3, #4]
    18bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    18c0:	cmp	r2, r3
    18c4:	bgt	1828 <dim_enter_array+0xba4>
    18c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    18cc:	ldr	r2, [r3, #4]
    18d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    18d4:	add	r3, r2, r3
    18d8:	sub	r3, r3, #1
    18dc:	ldr	r2, [pc, #436]	; 1a98 <dim_enter_array+0xe14>
    18e0:	add	r3, r3, #38	; 0x26
    18e4:	lsl	r3, r3, #3
    18e8:	add	r3, r2, r3
    18ec:	ldrd	r2, [r3]
    18f0:	cmp	r2, #1
    18f4:	sbcs	r3, r3, #0
    18f8:	blt	1a74 <dim_enter_array+0xdf0>
    18fc:	ldr	r3, [pc, #404]	; 1a98 <dim_enter_array+0xe14>
    1900:	ldr	r3, [r3]
    1904:	sub	r1, r3, #1
    1908:	ldr	r3, [pc, #392]	; 1a98 <dim_enter_array+0xe14>
    190c:	ldr	r3, [r3]
    1910:	sub	r3, r3, #1
    1914:	ldr	r2, [pc, #380]	; 1a98 <dim_enter_array+0xe14>
    1918:	lsl	r3, r3, #2
    191c:	add	r3, r2, r3
    1920:	ldr	r3, [r3, #4]
    1924:	mov	r2, r3
    1928:	asr	r3, r2, #31
    192c:	ldr	r0, [pc, #356]	; 1a98 <dim_enter_array+0xe14>
    1930:	add	r1, r1, #22
    1934:	lsl	r1, r1, #3
    1938:	add	r1, r0, r1
    193c:	strd	r2, [r1]
    1940:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1944:	ldr	r3, [r3, #4]
    1948:	sub	r3, r3, #2
    194c:	str	r3, [fp, #-40]	; 0xffffffd8
    1950:	b	19e0 <dim_enter_array+0xd5c>
    1954:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1958:	ldr	r3, [fp, #-40]	; 0xffffffd8
    195c:	add	ip, r2, r3
    1960:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1964:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1968:	add	r3, r2, r3
    196c:	ldr	r2, [pc, #292]	; 1a98 <dim_enter_array+0xe14>
    1970:	lsl	r3, r3, #2
    1974:	add	r3, r2, r3
    1978:	ldr	r3, [r3, #4]
    197c:	mov	r0, r3
    1980:	asr	r1, r0, #31
    1984:	ldr	r2, [fp, #-60]	; 0xffffffc4
    1988:	ldr	r3, [fp, #-40]	; 0xffffffd8
    198c:	add	r3, r2, r3
    1990:	add	r3, r3, #1
    1994:	ldr	r2, [pc, #252]	; 1a98 <dim_enter_array+0xe14>
    1998:	add	r3, r3, #22
    199c:	lsl	r3, r3, #3
    19a0:	add	r3, r2, r3
    19a4:	ldrd	r2, [r3]
    19a8:	mul	r4, r2, r1
    19ac:	mul	lr, r0, r3
    19b0:	add	lr, r4, lr
    19b4:	umull	r2, r3, r0, r2
    19b8:	add	r1, lr, r3
    19bc:	mov	r3, r1
    19c0:	ldr	r0, [pc, #208]	; 1a98 <dim_enter_array+0xe14>
    19c4:	add	r1, ip, #22
    19c8:	lsl	r1, r1, #3
    19cc:	add	r1, r0, r1
    19d0:	strd	r2, [r1]
    19d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    19d8:	sub	r3, r3, #1
    19dc:	str	r3, [fp, #-40]	; 0xffffffd8
    19e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    19e4:	cmp	r3, #0
    19e8:	bge	1954 <dim_enter_array+0xcd0>
    19ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19f0:	sub	r3, r3, #1
    19f4:	str	r3, [fp, #-40]	; 0xffffffd8
    19f8:	b	1a68 <dim_enter_array+0xde4>
    19fc:	ldr	r2, [pc, #148]	; 1a98 <dim_enter_array+0xe14>
    1a00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1a04:	add	r3, r3, #22
    1a08:	lsl	r3, r3, #3
    1a0c:	add	r3, r2, r3
    1a10:	ldrd	r0, [r3]
    1a14:	ldr	r2, [pc, #124]	; 1a98 <dim_enter_array+0xe14>
    1a18:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a1c:	add	r3, r3, #22
    1a20:	lsl	r3, r3, #3
    1a24:	add	r3, r2, r3
    1a28:	ldrd	r2, [r3]
    1a2c:	mul	lr, r2, r1
    1a30:	mul	ip, r0, r3
    1a34:	add	ip, lr, ip
    1a38:	umull	r2, r3, r0, r2
    1a3c:	add	r1, ip, r3
    1a40:	mov	r3, r1
    1a44:	ldr	r0, [pc, #76]	; 1a98 <dim_enter_array+0xe14>
    1a48:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1a4c:	add	r1, r1, #22
    1a50:	lsl	r1, r1, #3
    1a54:	add	r1, r0, r1
    1a58:	strd	r2, [r1]
    1a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1a60:	sub	r3, r3, #1
    1a64:	str	r3, [fp, #-40]	; 0xffffffd8
    1a68:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1a6c:	cmp	r3, #0
    1a70:	bge	19fc <dim_enter_array+0xd78>
    1a74:	sub	sp, fp, #12
    1a78:	pop	{r4, r5, fp, pc}
    1a7c:	.word	0x00000000
    1a80:	.word	0x000001c8
    1a84:	.word	0x0000015d
    1a88:	.word	0x00000000
    1a8c:	.word	0x00000110
    1a90:	.word	0x00000182
	...
    1a9c:	.word	0x00000192
    1aa0:	.word	0x00000114
    1aa4:	.word	0x00000070

00001aa8 <dim_leave_array>:
    1aa8:	push	{fp, lr}
    1aac:	add	fp, sp, #4
    1ab0:	sub	sp, sp, #16
    1ab4:	ldr	r3, [pc, #528]	; 1ccc <dim_leave_array+0x224>
    1ab8:	ldr	r3, [r3, #3360]	; 0xd20
    1abc:	cmp	r3, #0
    1ac0:	bge	1ad8 <dim_leave_array+0x30>
    1ac4:	ldr	r3, [pc, #516]	; 1cd0 <dim_leave_array+0x228>
    1ac8:	ldr	r2, [pc, #516]	; 1cd4 <dim_leave_array+0x22c>
    1acc:	ldr	r1, [pc, #516]	; 1cd8 <dim_leave_array+0x230>
    1ad0:	ldr	r0, [pc, #516]	; 1cdc <dim_leave_array+0x234>
    1ad4:	bl	0 <__assert_fail>
    1ad8:	ldr	r3, [pc, #492]	; 1ccc <dim_leave_array+0x224>
    1adc:	ldr	r2, [r3, #3360]	; 0xd20
    1ae0:	mov	r3, r2
    1ae4:	lsl	r3, r3, #2
    1ae8:	add	r3, r3, r2
    1aec:	lsl	r3, r3, #4
    1af0:	add	r3, r3, #800	; 0x320
    1af4:	ldr	r2, [pc, #464]	; 1ccc <dim_leave_array+0x224>
    1af8:	add	r3, r3, r2
    1afc:	str	r3, [fp, #-12]
    1b00:	ldr	r3, [fp, #-12]
    1b04:	ldr	r3, [r3]
    1b08:	str	r3, [fp, #-16]
    1b0c:	ldr	r3, [pc, #460]	; 1ce0 <dim_leave_array+0x238>
    1b10:	ldr	r2, [r3]
    1b14:	ldr	r3, [fp, #-12]
    1b18:	ldr	r3, [r3, #4]
    1b1c:	sub	r3, r2, r3
    1b20:	ldr	r2, [pc, #440]	; 1ce0 <dim_leave_array+0x238>
    1b24:	str	r3, [r2]
    1b28:	mov	r3, #0
    1b2c:	str	r3, [fp, #-8]
    1b30:	b	1b88 <dim_leave_array+0xe0>
    1b34:	ldr	r2, [fp, #-16]
    1b38:	ldr	r3, [fp, #-8]
    1b3c:	add	r3, r2, r3
    1b40:	ldr	r2, [pc, #408]	; 1ce0 <dim_leave_array+0x238>
    1b44:	add	r3, r3, #18
    1b48:	ldr	r3, [r2, r3, lsl #2]
    1b4c:	cmp	r3, #0
    1b50:	beq	1b7c <dim_leave_array+0xd4>
    1b54:	ldr	r2, [fp, #-16]
    1b58:	ldr	r3, [fp, #-8]
    1b5c:	add	r3, r2, r3
    1b60:	ldr	r2, [pc, #376]	; 1ce0 <dim_leave_array+0x238>
    1b64:	add	r3, r3, #26
    1b68:	lsl	r3, r3, #2
    1b6c:	add	r3, r2, r3
    1b70:	ldr	r3, [r3, #4]
    1b74:	mov	r0, r3
    1b78:	bl	0 <free>
    1b7c:	ldr	r3, [fp, #-8]
    1b80:	add	r3, r3, #1
    1b84:	str	r3, [fp, #-8]
    1b88:	ldr	r3, [fp, #-12]
    1b8c:	ldr	r2, [r3, #4]
    1b90:	ldr	r3, [fp, #-8]
    1b94:	cmp	r2, r3
    1b98:	bgt	1b34 <dim_leave_array+0x8c>
    1b9c:	ldr	r3, [pc, #316]	; 1ce0 <dim_leave_array+0x238>
    1ba0:	mov	r2, #0
    1ba4:	str	r2, [r3, #68]	; 0x44
    1ba8:	ldr	r3, [pc, #304]	; 1ce0 <dim_leave_array+0x238>
    1bac:	mvn	r2, #0
    1bb0:	str	r2, [r3, #104]	; 0x68
    1bb4:	mov	r3, #0
    1bb8:	str	r3, [fp, #-8]
    1bbc:	b	1bfc <dim_leave_array+0x154>
    1bc0:	ldr	r2, [pc, #280]	; 1ce0 <dim_leave_array+0x238>
    1bc4:	ldr	r3, [fp, #-8]
    1bc8:	add	r3, r3, #18
    1bcc:	ldr	r3, [r2, r3, lsl #2]
    1bd0:	cmp	r3, #0
    1bd4:	beq	1bf0 <dim_leave_array+0x148>
    1bd8:	ldr	r3, [pc, #256]	; 1ce0 <dim_leave_array+0x238>
    1bdc:	mov	r2, #1
    1be0:	str	r2, [r3, #68]	; 0x44
    1be4:	ldr	r2, [pc, #244]	; 1ce0 <dim_leave_array+0x238>
    1be8:	ldr	r3, [fp, #-8]
    1bec:	str	r3, [r2, #104]	; 0x68
    1bf0:	ldr	r3, [fp, #-8]
    1bf4:	add	r3, r3, #1
    1bf8:	str	r3, [fp, #-8]
    1bfc:	ldr	r3, [pc, #220]	; 1ce0 <dim_leave_array+0x238>
    1c00:	ldr	r2, [r3]
    1c04:	ldr	r3, [fp, #-8]
    1c08:	cmp	r2, r3
    1c0c:	bgt	1bc0 <dim_leave_array+0x118>
    1c10:	ldr	r3, [fp, #-12]
    1c14:	ldr	r2, [r3, #4]
    1c18:	ldr	r3, [fp, #-16]
    1c1c:	add	r3, r2, r3
    1c20:	sub	r3, r3, #1
    1c24:	ldr	r2, [pc, #180]	; 1ce0 <dim_leave_array+0x238>
    1c28:	add	r3, r3, #38	; 0x26
    1c2c:	lsl	r3, r3, #3
    1c30:	add	r3, r2, r3
    1c34:	ldrd	r2, [r3]
    1c38:	cmp	r2, #1
    1c3c:	sbcs	r3, r3, #0
    1c40:	blt	1cc0 <dim_leave_array+0x218>
    1c44:	ldr	r3, [fp, #-16]
    1c48:	sub	r3, r3, #1
    1c4c:	str	r3, [fp, #-8]
    1c50:	b	1cb4 <dim_leave_array+0x20c>
    1c54:	ldr	r2, [pc, #132]	; 1ce0 <dim_leave_array+0x238>
    1c58:	ldr	r3, [fp, #-8]
    1c5c:	add	r3, r3, #22
    1c60:	lsl	r3, r3, #3
    1c64:	add	r3, r2, r3
    1c68:	ldrd	r0, [r3]
    1c6c:	ldr	r2, [pc, #108]	; 1ce0 <dim_leave_array+0x238>
    1c70:	ldr	r3, [fp, #-16]
    1c74:	add	r3, r3, #22
    1c78:	lsl	r3, r3, #3
    1c7c:	add	r3, r2, r3
    1c80:	ldrd	r2, [r3]
    1c84:	bl	0 <__aeabi_ldivmod>
    1c88:	mov	r2, r0
    1c8c:	mov	r3, r1
    1c90:	ldr	r0, [pc, #72]	; 1ce0 <dim_leave_array+0x238>
    1c94:	ldr	r1, [fp, #-8]
    1c98:	add	r1, r1, #22
    1c9c:	lsl	r1, r1, #3
    1ca0:	add	r1, r0, r1
    1ca4:	strd	r2, [r1]
    1ca8:	ldr	r3, [fp, #-8]
    1cac:	sub	r3, r3, #1
    1cb0:	str	r3, [fp, #-8]
    1cb4:	ldr	r3, [fp, #-8]
    1cb8:	cmp	r3, #0
    1cbc:	bge	1c54 <dim_leave_array+0x1ac>
    1cc0:	nop			; (mov r0, r0)
    1cc4:	sub	sp, fp, #4
    1cc8:	pop	{fp, pc}
    1ccc:	.word	0x00000000
    1cd0:	.word	0x000001d8
    1cd4:	.word	0x00000243
    1cd8:	.word	0x00000000
    1cdc:	.word	0x00000150
    1ce0:	.word	0x00000000

00001ce4 <get_record_field_available_status>:
    1ce4:	push	{fp, lr}
    1ce8:	add	fp, sp, #4
    1cec:	sub	sp, sp, #48	; 0x30
    1cf0:	str	r0, [fp, #-40]	; 0xffffffd8
    1cf4:	str	r1, [fp, #-44]	; 0xffffffd4
    1cf8:	str	r2, [fp, #-48]	; 0xffffffd0
    1cfc:	sub	r3, fp, #28
    1d00:	mov	r1, r3
    1d04:	ldr	r0, [pc, #932]	; 20b0 <get_record_field_available_status+0x3cc>
    1d08:	bl	0 <coda_cursor_get_type_class>
    1d0c:	mov	r3, r0
    1d10:	cmp	r3, #0
    1d14:	beq	1d1c <get_record_field_available_status+0x38>
    1d18:	bl	0 <handle_coda_error>
    1d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1d20:	cmp	r3, #0
    1d24:	beq	1fa8 <get_record_field_available_status+0x2c4>
    1d28:	cmp	r3, #1
    1d2c:	bne	2080 <get_record_field_available_status+0x39c>
    1d30:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1d34:	mov	r3, r2
    1d38:	lsl	r3, r3, #2
    1d3c:	add	r3, r3, r2
    1d40:	lsl	r3, r3, #4
    1d44:	add	r3, r3, #800	; 0x320
    1d48:	ldr	r2, [pc, #868]	; 20b4 <get_record_field_available_status+0x3d0>
    1d4c:	add	r3, r3, r2
    1d50:	str	r3, [fp, #-20]	; 0xffffffec
    1d54:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d58:	ldr	r3, [r3]
    1d5c:	str	r3, [fp, #-24]	; 0xffffffe8
    1d60:	ldr	r3, [pc, #844]	; 20b4 <get_record_field_available_status+0x3d0>
    1d64:	ldr	r2, [r3, #3360]	; 0xd20
    1d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1d6c:	cmp	r2, r3
    1d70:	bgt	1d88 <get_record_field_available_status+0xa4>
    1d74:	ldr	r3, [pc, #828]	; 20b8 <get_record_field_available_status+0x3d4>
    1d78:	ldr	r2, [pc, #828]	; 20bc <get_record_field_available_status+0x3d8>
    1d7c:	ldr	r1, [pc, #828]	; 20c0 <get_record_field_available_status+0x3dc>
    1d80:	ldr	r0, [pc, #828]	; 20c4 <get_record_field_available_status+0x3e0>
    1d84:	bl	0 <__assert_fail>
    1d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1d8c:	cmp	r3, #0
    1d90:	bne	1da0 <get_record_field_available_status+0xbc>
    1d94:	ldr	r3, [fp, #-20]	; 0xffffffec
    1d98:	mov	r2, #0
    1d9c:	str	r2, [r3, #44]	; 0x2c
    1da0:	ldr	r3, [pc, #780]	; 20b4 <get_record_field_available_status+0x3d0>
    1da4:	ldr	r2, [r3, #3360]	; 0xd20
    1da8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1dac:	cmp	r2, r3
    1db0:	ble	1df0 <get_record_field_available_status+0x10c>
    1db4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1db8:	add	r2, r3, #1
    1dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1dc0:	ldr	r3, [r3, #44]	; 0x2c
    1dc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    1dc8:	ldr	r1, [r1, #40]	; 0x28
    1dcc:	mul	r1, r1, r3
    1dd0:	ldr	r0, [pc, #732]	; 20b4 <get_record_field_available_status+0x3d0>
    1dd4:	mov	r3, r2
    1dd8:	lsl	r3, r3, #2
    1ddc:	add	r3, r3, r2
    1de0:	lsl	r3, r3, #4
    1de4:	add	r3, r0, r3
    1de8:	add	r3, r3, #844	; 0x34c
    1dec:	str	r1, [r3]
    1df0:	mov	r3, #1
    1df4:	str	r3, [fp, #-8]
    1df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dfc:	str	r3, [fp, #-12]
    1e00:	b	1e84 <get_record_field_available_status+0x1a0>
    1e04:	ldr	r2, [pc, #700]	; 20c8 <get_record_field_available_status+0x3e4>
    1e08:	ldr	r3, [fp, #-12]
    1e0c:	add	r3, r3, #18
    1e10:	ldr	r3, [r2, r3, lsl #2]
    1e14:	cmp	r3, #0
    1e18:	beq	1e58 <get_record_field_available_status+0x174>
    1e1c:	ldr	r2, [pc, #676]	; 20c8 <get_record_field_available_status+0x3e4>
    1e20:	ldr	r3, [fp, #-12]
    1e24:	add	r3, r3, #26
    1e28:	lsl	r3, r3, #2
    1e2c:	add	r3, r2, r3
    1e30:	ldr	r2, [r3, #4]
    1e34:	ldr	r3, [fp, #-20]	; 0xffffffec
    1e38:	ldr	r3, [r3, #44]	; 0x2c
    1e3c:	lsl	r3, r3, #2
    1e40:	add	r3, r2, r3
    1e44:	ldr	r2, [r3]
    1e48:	ldr	r3, [fp, #-8]
    1e4c:	mul	r3, r2, r3
    1e50:	str	r3, [fp, #-8]
    1e54:	b	1e78 <get_record_field_available_status+0x194>
    1e58:	ldr	r2, [pc, #616]	; 20c8 <get_record_field_available_status+0x3e4>
    1e5c:	ldr	r3, [fp, #-12]
    1e60:	lsl	r3, r3, #2
    1e64:	add	r3, r2, r3
    1e68:	ldr	r2, [r3, #4]
    1e6c:	ldr	r3, [fp, #-8]
    1e70:	mul	r3, r2, r3
    1e74:	str	r3, [fp, #-8]
    1e78:	ldr	r3, [fp, #-12]
    1e7c:	add	r3, r3, #1
    1e80:	str	r3, [fp, #-12]
    1e84:	ldr	r3, [fp, #-20]	; 0xffffffec
    1e88:	ldr	r2, [r3, #4]
    1e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e90:	add	r2, r2, r3
    1e94:	ldr	r3, [fp, #-12]
    1e98:	cmp	r2, r3
    1e9c:	bgt	1e04 <get_record_field_available_status+0x120>
    1ea0:	ldr	r3, [fp, #-8]
    1ea4:	cmp	r3, #0
    1ea8:	ble	2094 <get_record_field_available_status+0x3b0>
    1eac:	ldr	r0, [pc, #508]	; 20b0 <get_record_field_available_status+0x3cc>
    1eb0:	bl	0 <coda_cursor_goto_first_array_element>
    1eb4:	mov	r3, r0
    1eb8:	cmp	r3, #0
    1ebc:	beq	1ec4 <get_record_field_available_status+0x1e0>
    1ec0:	bl	0 <handle_coda_error>
    1ec4:	mov	r3, #0
    1ec8:	str	r3, [fp, #-16]
    1ecc:	b	1f8c <get_record_field_available_status+0x2a8>
    1ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1ed4:	add	r0, r3, #1
    1ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1edc:	add	r3, r3, #1
    1ee0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1ee4:	mov	r1, r3
    1ee8:	bl	1ce4 <get_record_field_available_status>
    1eec:	mov	r3, r0
    1ef0:	cmp	r3, #0
    1ef4:	beq	1f08 <get_record_field_available_status+0x224>
    1ef8:	ldr	r0, [pc, #432]	; 20b0 <get_record_field_available_status+0x3cc>
    1efc:	bl	0 <coda_cursor_goto_parent>
    1f00:	mov	r3, #1
    1f04:	b	20a4 <get_record_field_available_status+0x3c0>
    1f08:	ldr	r3, [fp, #-8]
    1f0c:	sub	r2, r3, #1
    1f10:	ldr	r3, [fp, #-16]
    1f14:	cmp	r2, r3
    1f18:	ble	1f80 <get_record_field_available_status+0x29c>
    1f1c:	ldr	r0, [pc, #396]	; 20b0 <get_record_field_available_status+0x3cc>
    1f20:	bl	0 <coda_cursor_goto_next_array_element>
    1f24:	mov	r3, r0
    1f28:	cmp	r3, #0
    1f2c:	beq	1f34 <get_record_field_available_status+0x250>
    1f30:	bl	0 <handle_coda_error>
    1f34:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1f38:	add	r2, r3, #1
    1f3c:	ldr	r1, [pc, #368]	; 20b4 <get_record_field_available_status+0x3d0>
    1f40:	mov	r3, r2
    1f44:	lsl	r3, r3, #2
    1f48:	add	r3, r3, r2
    1f4c:	lsl	r3, r3, #4
    1f50:	add	r3, r1, r3
    1f54:	add	r3, r3, #844	; 0x34c
    1f58:	ldr	r3, [r3]
    1f5c:	add	r1, r3, #1
    1f60:	ldr	r0, [pc, #332]	; 20b4 <get_record_field_available_status+0x3d0>
    1f64:	mov	r3, r2
    1f68:	lsl	r3, r3, #2
    1f6c:	add	r3, r3, r2
    1f70:	lsl	r3, r3, #4
    1f74:	add	r3, r0, r3
    1f78:	add	r3, r3, #844	; 0x34c
    1f7c:	str	r1, [r3]
    1f80:	ldr	r3, [fp, #-16]
    1f84:	add	r3, r3, #1
    1f88:	str	r3, [fp, #-16]
    1f8c:	ldr	r2, [fp, #-16]
    1f90:	ldr	r3, [fp, #-8]
    1f94:	cmp	r2, r3
    1f98:	blt	1ed0 <get_record_field_available_status+0x1ec>
    1f9c:	ldr	r0, [pc, #268]	; 20b0 <get_record_field_available_status+0x3cc>
    1fa0:	bl	0 <coda_cursor_goto_parent>
    1fa4:	b	2094 <get_record_field_available_status+0x3b0>
    1fa8:	ldr	r2, [pc, #260]	; 20b4 <get_record_field_available_status+0x3d0>
    1fac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1fb0:	add	r3, r3, #872	; 0x368
    1fb4:	lsl	r3, r3, #2
    1fb8:	add	r3, r2, r3
    1fbc:	ldr	r3, [r3, #4]
    1fc0:	sub	r2, fp, #32
    1fc4:	mov	r1, r3
    1fc8:	ldr	r0, [pc, #224]	; 20b0 <get_record_field_available_status+0x3cc>
    1fcc:	bl	0 <coda_cursor_get_record_field_available_status>
    1fd0:	mov	r3, r0
    1fd4:	cmp	r3, #0
    1fd8:	beq	1fe0 <get_record_field_available_status+0x2fc>
    1fdc:	bl	0 <handle_coda_error>
    1fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1fe4:	cmp	r3, #0
    1fe8:	beq	209c <get_record_field_available_status+0x3b8>
    1fec:	ldr	r3, [pc, #192]	; 20b4 <get_record_field_available_status+0x3d0>
    1ff0:	ldr	r3, [r3, #3748]	; 0xea4
    1ff4:	sub	r2, r3, #1
    1ff8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ffc:	cmp	r2, r3
    2000:	bne	200c <get_record_field_available_status+0x328>
    2004:	mov	r3, #1
    2008:	b	20a4 <get_record_field_available_status+0x3c0>
    200c:	ldr	r2, [pc, #160]	; 20b4 <get_record_field_available_status+0x3d0>
    2010:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2014:	add	r3, r3, #872	; 0x368
    2018:	lsl	r3, r3, #2
    201c:	add	r3, r2, r3
    2020:	ldr	r3, [r3, #4]
    2024:	mov	r1, r3
    2028:	ldr	r0, [pc, #128]	; 20b0 <get_record_field_available_status+0x3cc>
    202c:	bl	0 <coda_cursor_goto_record_field_by_index>
    2030:	mov	r3, r0
    2034:	cmp	r3, #0
    2038:	beq	2040 <get_record_field_available_status+0x35c>
    203c:	bl	0 <handle_coda_error>
    2040:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2044:	add	r0, r3, #1
    2048:	ldr	r3, [fp, #-48]	; 0xffffffd0
    204c:	add	r3, r3, #1
    2050:	mov	r2, r3
    2054:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2058:	bl	1ce4 <get_record_field_available_status>
    205c:	mov	r3, r0
    2060:	str	r3, [fp, #-32]	; 0xffffffe0
    2064:	ldr	r0, [pc, #68]	; 20b0 <get_record_field_available_status+0x3cc>
    2068:	bl	0 <coda_cursor_goto_parent>
    206c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2070:	cmp	r3, #0
    2074:	beq	209c <get_record_field_available_status+0x3b8>
    2078:	mov	r3, #1
    207c:	b	20a4 <get_record_field_available_status+0x3c0>
    2080:	ldr	r3, [pc, #48]	; 20b8 <get_record_field_available_status+0x3d4>
    2084:	ldr	r2, [pc, #64]	; 20cc <get_record_field_available_status+0x3e8>
    2088:	ldr	r1, [pc, #48]	; 20c0 <get_record_field_available_status+0x3dc>
    208c:	ldr	r0, [pc, #60]	; 20d0 <get_record_field_available_status+0x3ec>
    2090:	bl	0 <__assert_fail>
    2094:	nop			; (mov r0, r0)
    2098:	b	20a0 <get_record_field_available_status+0x3bc>
    209c:	nop			; (mov r0, r0)
    20a0:	mov	r3, #0
    20a4:	mov	r0, r3
    20a8:	sub	sp, fp, #4
    20ac:	pop	{fp, pc}
    20b0:	.word	0x00000090
    20b4:	.word	0x00000000
    20b8:	.word	0x000001e8
    20bc:	.word	0x0000027e
    20c0:	.word	0x00000000
    20c4:	.word	0x00000170
    20c8:	.word	0x00000000
    20cc:	.word	0x000002d9
    20d0:	.word	0x00000110

000020d4 <dim_record_field_available>:
    20d4:	push	{fp, lr}
    20d8:	add	fp, sp, #4
    20dc:	mov	r2, #0
    20e0:	mov	r1, #0
    20e4:	mov	r0, #0
    20e8:	bl	1ce4 <get_record_field_available_status>
    20ec:	mov	r3, r0
    20f0:	mov	r0, r3
    20f4:	pop	{fp, pc}
