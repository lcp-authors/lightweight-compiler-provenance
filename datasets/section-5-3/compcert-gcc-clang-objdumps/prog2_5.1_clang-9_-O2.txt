
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010b50 <.init>:
   10b50:	push	{r3, lr}
   10b54:	bl	10c30 <_start@@Base+0x3c>
   10b58:	pop	{r3, pc}

Disassembly of section .plt:

00010b5c <calloc@plt-0x14>:
   10b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b60:	ldr	lr, [pc, #4]	; 10b6c <calloc@plt-0x4>
   10b64:	add	lr, pc, lr
   10b68:	ldr	pc, [lr, #8]!
   10b6c:	muleq	r1, r4, r4

00010b70 <calloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1172]!	; 0x494

00010b7c <printf@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1164]!	; 0x48c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1156]!	; 0x484

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1148]!	; 0x47c

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1140]!	; 0x474

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1124]!	; 0x464

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1108]!	; 0x454

00010bdc <putchar@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1100]!	; 0x44c

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010bf4 <_start@@Base>:
   10bf4:	mov	fp, #0
   10bf8:	mov	lr, #0
   10bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10c00:	mov	r2, sp
   10c04:	push	{r2}		; (str r2, [sp, #-4]!)
   10c08:	push	{r0}		; (str r0, [sp, #-4]!)
   10c0c:	ldr	ip, [pc, #16]	; 10c24 <_start@@Base+0x30>
   10c10:	push	{ip}		; (str ip, [sp, #-4]!)
   10c14:	ldr	r0, [pc, #12]	; 10c28 <_start@@Base+0x34>
   10c18:	ldr	r3, [pc, #12]	; 10c2c <_start@@Base+0x38>
   10c1c:	bl	10bb8 <__libc_start_main@plt>
   10c20:	bl	10be8 <abort@plt>
   10c24:			; <UNDEFINED> instruction: 0x00011ab4
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	andeq	r1, r1, r4, asr sl
   10c30:	ldr	r3, [pc, #20]	; 10c4c <_start@@Base+0x58>
   10c34:	ldr	r2, [pc, #20]	; 10c50 <_start@@Base+0x5c>
   10c38:	add	r3, pc, r3
   10c3c:	ldr	r2, [r3, r2]
   10c40:	cmp	r2, #0
   10c44:	bxeq	lr
   10c48:	b	10bc4 <__gmon_start__@plt>
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:	andeq	r0, r0, r8, lsr r0
   10c54:	ldr	r0, [pc, #24]	; 10c74 <_start@@Base+0x80>
   10c58:	ldr	r3, [pc, #24]	; 10c78 <_start@@Base+0x84>
   10c5c:	cmp	r3, r0
   10c60:	bxeq	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x88>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r2, r2, r4, asr #32
   10c78:	andeq	r2, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r0, [pc, #36]	; 10cac <_start@@Base+0xb8>
   10c84:	ldr	r1, [pc, #36]	; 10cb0 <_start@@Base+0xbc>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc0>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r2, r2, r4, asr #32
   10cb0:	andeq	r2, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xe8>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c54 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r2, r2, r4, asr #32
   10ce0:	b	10c80 <_start@@Base+0x8c>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #4
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #40	; 0x28
   10cf8:	mov	r0, #4
   10cfc:	mov	r1, #3
   10d00:	bl	113d4 <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	movw	r0, #7077	; 0x1ba5
   10d0c:	movt	r0, #1
   10d10:	bl	10ba0 <puts@plt>
   10d14:	vldr	s0, [pc, #312]	; 10e54 <main@@Base+0x170>
   10d18:	movw	r0, #6852	; 0x1ac4
   10d1c:	movt	r0, #1
   10d20:	bl	11604 <contentor_novo@@Base>
   10d24:	vldr	s0, [pc, #300]	; 10e58 <main@@Base+0x174>
   10d28:	mov	r8, r0
   10d2c:	movw	r0, #6859	; 0x1acb
   10d30:	movt	r0, #1
   10d34:	bl	11604 <contentor_novo@@Base>
   10d38:	vldr	s0, [pc, #284]	; 10e5c <main@@Base+0x178>
   10d3c:	mov	sl, r0
   10d40:	movw	r0, #6862	; 0x1ace
   10d44:	movt	r0, #1
   10d48:	bl	11604 <contentor_novo@@Base>
   10d4c:	vldr	s0, [pc, #268]	; 10e60 <main@@Base+0x17c>
   10d50:	str	r0, [sp, #24]
   10d54:	movw	r0, #6869	; 0x1ad5
   10d58:	movt	r0, #1
   10d5c:	bl	11604 <contentor_novo@@Base>
   10d60:	vldr	s16, [pc, #252]	; 10e64 <main@@Base+0x180>
   10d64:	mov	r5, r0
   10d68:	movw	r0, #6875	; 0x1adb
   10d6c:	movt	r0, #1
   10d70:	vmov.f32	s0, s16
   10d74:	bl	11604 <contentor_novo@@Base>
   10d78:	vldr	s0, [pc, #232]	; 10e68 <main@@Base+0x184>
   10d7c:	str	r0, [sp, #8]
   10d80:	movw	r0, #6881	; 0x1ae1
   10d84:	movt	r0, #1
   10d88:	bl	11604 <contentor_novo@@Base>
   10d8c:	vldr	s0, [pc, #216]	; 10e6c <main@@Base+0x188>
   10d90:	str	r0, [sp, #16]
   10d94:	movw	r0, #6889	; 0x1ae9
   10d98:	movt	r0, #1
   10d9c:	bl	11604 <contentor_novo@@Base>
   10da0:	vldr	s0, [pc, #200]	; 10e70 <main@@Base+0x18c>
   10da4:	str	r0, [sp, #20]
   10da8:	movw	r0, #6899	; 0x1af3
   10dac:	movt	r0, #1
   10db0:	bl	11604 <contentor_novo@@Base>
   10db4:	str	r0, [sp, #12]
   10db8:	movw	r0, #6906	; 0x1afa
   10dbc:	vmov.f32	s0, s16
   10dc0:	movt	r0, #1
   10dc4:	bl	11604 <contentor_novo@@Base>
   10dc8:	vldr	s0, [pc, #164]	; 10e74 <main@@Base+0x190>
   10dcc:	mov	r9, r0
   10dd0:	movw	r0, #6918	; 0x1b06
   10dd4:	movt	r0, #1
   10dd8:	bl	11604 <contentor_novo@@Base>
   10ddc:	vldr	s0, [pc, #148]	; 10e78 <main@@Base+0x194>
   10de0:	mov	r7, r0
   10de4:	movw	r0, #6926	; 0x1b0e
   10de8:	movt	r0, #1
   10dec:	bl	11604 <contentor_novo@@Base>
   10df0:	vldr	s0, [pc, #132]	; 10e7c <main@@Base+0x198>
   10df4:	str	r0, [sp, #28]
   10df8:	movw	r0, #6935	; 0x1b17
   10dfc:	movt	r0, #1
   10e00:	bl	11604 <contentor_novo@@Base>
   10e04:	vldr	s0, [pc, #116]	; 10e80 <main@@Base+0x19c>
   10e08:	str	r0, [sp, #32]
   10e0c:	movw	r0, #6941	; 0x1b1d
   10e10:	movt	r0, #1
   10e14:	bl	11604 <contentor_novo@@Base>
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	movw	r0, #7096	; 0x1bb8
   10e20:	movt	r0, #1
   10e24:	bl	10ba0 <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	1129c <imprimeArmazem@@Base>
   10e30:	movw	r0, #7123	; 0x1bd3
   10e34:	movt	r0, #1
   10e38:	bl	10ba0 <puts@plt>
   10e3c:	mov	r0, r4
   10e40:	mov	r1, r8
   10e44:	bl	1149c <armazenar_contentor@@Base>
   10e48:	cmp	r0, #0
   10e4c:	beq	10e94 <main@@Base+0x1b0>
   10e50:	b	10e84 <main@@Base+0x1a0>
   10e54:	cmnmi	r6, #0
   10e58:	cmnmi	sl, #0
   10e5c:	strmi	r8, [r4], #-0
   10e60:	ldrtmi	r8, [r1], #-0
   10e64:			; <UNDEFINED> instruction: 0x43be0000
   10e68:	bicmi	r0, r3, #0
   10e6c:	sbcmi	r0, r8, #0
   10e70:	adcmi	r0, r0, #0
   10e74:	tstmi	r6, #0
   10e78:	orrmi	r0, r7, #0
   10e7c:	bicsmi	r0, r7, #0
   10e80:	movtmi	r0, #32768	; 0x8000
   10e84:	ldr	r1, [r8]
   10e88:	movw	r0, #6949	; 0x1b25
   10e8c:	movt	r0, #1
   10e90:	bl	10b7c <printf@plt>
   10e94:	mov	r0, r4
   10e98:	mov	r1, sl
   10e9c:	bl	1149c <armazenar_contentor@@Base>
   10ea0:	cmp	r0, #0
   10ea4:	beq	10eb8 <main@@Base+0x1d4>
   10ea8:	ldr	r1, [sl]
   10eac:	movw	r0, #6949	; 0x1b25
   10eb0:	movt	r0, #1
   10eb4:	bl	10b7c <printf@plt>
   10eb8:	ldr	r8, [sp, #24]
   10ebc:	mov	r0, r4
   10ec0:	mov	r1, r8
   10ec4:	bl	1149c <armazenar_contentor@@Base>
   10ec8:	cmp	r0, #0
   10ecc:	str	r7, [sp, #4]
   10ed0:	beq	10ee4 <main@@Base+0x200>
   10ed4:	ldr	r1, [r8]
   10ed8:	movw	r0, #6949	; 0x1b25
   10edc:	movt	r0, #1
   10ee0:	bl	10b7c <printf@plt>
   10ee4:	mov	r0, r4
   10ee8:	mov	r1, r5
   10eec:	bl	1149c <armazenar_contentor@@Base>
   10ef0:	ldr	r7, [sp, #12]
   10ef4:	cmp	r0, #0
   10ef8:	beq	10f0c <main@@Base+0x228>
   10efc:	ldr	r1, [r5]
   10f00:	movw	r0, #6949	; 0x1b25
   10f04:	movt	r0, #1
   10f08:	bl	10b7c <printf@plt>
   10f0c:	movw	r0, #7156	; 0x1bf4
   10f10:	movt	r0, #1
   10f14:	bl	10ba0 <puts@plt>
   10f18:	mov	r0, r4
   10f1c:	bl	1129c <imprimeArmazem@@Base>
   10f20:	movw	r0, #7183	; 0x1c0f
   10f24:	movt	r0, #1
   10f28:	bl	10ba0 <puts@plt>
   10f2c:	ldr	r5, [sp, #8]
   10f30:	mov	r0, r4
   10f34:	mov	r1, r5
   10f38:	bl	1149c <armazenar_contentor@@Base>
   10f3c:	ldr	r6, [sp, #20]
   10f40:	cmp	r0, #0
   10f44:	beq	10f58 <main@@Base+0x274>
   10f48:	ldr	r1, [r5]
   10f4c:	movw	r0, #6949	; 0x1b25
   10f50:	movt	r0, #1
   10f54:	bl	10b7c <printf@plt>
   10f58:	ldr	sl, [sp, #16]
   10f5c:	mov	r0, r4
   10f60:	mov	r1, sl
   10f64:	bl	1149c <armazenar_contentor@@Base>
   10f68:	ldr	r5, [sp, #32]
   10f6c:	cmp	r0, #0
   10f70:	beq	10f84 <main@@Base+0x2a0>
   10f74:	ldr	r1, [sl]
   10f78:	movw	r0, #6949	; 0x1b25
   10f7c:	movt	r0, #1
   10f80:	bl	10b7c <printf@plt>
   10f84:	mov	r0, r4
   10f88:	mov	r1, r6
   10f8c:	bl	1149c <armazenar_contentor@@Base>
   10f90:	cmp	r0, #0
   10f94:	mov	r0, r6
   10f98:	ldr	r6, [sp, #28]
   10f9c:	beq	10fb0 <main@@Base+0x2cc>
   10fa0:	ldr	r1, [r0]
   10fa4:	movw	r0, #6949	; 0x1b25
   10fa8:	movt	r0, #1
   10fac:	bl	10b7c <printf@plt>
   10fb0:	mov	r0, r4
   10fb4:	mov	r1, r7
   10fb8:	bl	1149c <armazenar_contentor@@Base>
   10fbc:	cmp	r0, #0
   10fc0:	beq	10fd4 <main@@Base+0x2f0>
   10fc4:	ldr	r1, [r7]
   10fc8:	movw	r0, #6949	; 0x1b25
   10fcc:	movt	r0, #1
   10fd0:	bl	10b7c <printf@plt>
   10fd4:	mov	r0, r4
   10fd8:	mov	r1, r9
   10fdc:	bl	1149c <armazenar_contentor@@Base>
   10fe0:	cmp	r0, #0
   10fe4:	beq	10ff8 <main@@Base+0x314>
   10fe8:	ldr	r1, [r9]
   10fec:	movw	r0, #6949	; 0x1b25
   10ff0:	movt	r0, #1
   10ff4:	bl	10b7c <printf@plt>
   10ff8:	ldr	r7, [sp, #4]
   10ffc:	mov	r0, r4
   11000:	mov	r1, r7
   11004:	bl	1149c <armazenar_contentor@@Base>
   11008:	cmp	r0, #0
   1100c:	beq	11020 <main@@Base+0x33c>
   11010:	ldr	r1, [r7]
   11014:	movw	r0, #6949	; 0x1b25
   11018:	movt	r0, #1
   1101c:	bl	10b7c <printf@plt>
   11020:	mov	r0, r4
   11024:	mov	r1, r6
   11028:	bl	1149c <armazenar_contentor@@Base>
   1102c:	cmp	r0, #0
   11030:	beq	11044 <main@@Base+0x360>
   11034:	ldr	r1, [r6]
   11038:	movw	r0, #6949	; 0x1b25
   1103c:	movt	r0, #1
   11040:	bl	10b7c <printf@plt>
   11044:	mov	r0, r4
   11048:	mov	r1, r5
   1104c:	bl	1149c <armazenar_contentor@@Base>
   11050:	cmp	r0, #0
   11054:	beq	11068 <main@@Base+0x384>
   11058:	ldr	r1, [r5]
   1105c:	movw	r0, #6949	; 0x1b25
   11060:	movt	r0, #1
   11064:	bl	10b7c <printf@plt>
   11068:	movw	r0, #7216	; 0x1c30
   1106c:	movt	r0, #1
   11070:	bl	10ba0 <puts@plt>
   11074:	mov	r0, r4
   11078:	bl	1129c <imprimeArmazem@@Base>
   1107c:	mov	r0, r4
   11080:	bl	11430 <armazem_cheio@@Base>
   11084:	movw	r2, #7243	; 0x1c4b
   11088:	movw	r1, #7481	; 0x1d39
   1108c:	cmp	r0, #0
   11090:	movt	r2, #1
   11094:	movt	r1, #1
   11098:	moveq	r1, r2
   1109c:	mov	r0, r1
   110a0:	bl	10ba0 <puts@plt>
   110a4:	ldr	r1, [sp, #36]	; 0x24
   110a8:	mov	r0, r4
   110ac:	bl	1149c <armazenar_contentor@@Base>
   110b0:	cmp	r0, #0
   110b4:	beq	110c8 <main@@Base+0x3e4>
   110b8:	ldr	r1, [r8]
   110bc:	movw	r0, #6987	; 0x1b4b
   110c0:	movt	r0, #1
   110c4:	bl	10b7c <printf@plt>
   110c8:	movw	r0, #7280	; 0x1c70
   110cc:	movt	r0, #1
   110d0:	bl	10ba0 <puts@plt>
   110d4:	mov	r0, r4
   110d8:	bl	11564 <expedir_contentor@@Base>
   110dc:	movw	r5, #7451	; 0x1d1b
   110e0:	mov	r6, r0
   110e4:	movt	r5, #1
   110e8:	mov	r0, r5
   110ec:	bl	10ba0 <puts@plt>
   110f0:	mov	r0, r6
   110f4:	bl	11670 <contentor_imprime@@Base>
   110f8:	mov	r0, r4
   110fc:	bl	11564 <expedir_contentor@@Base>
   11100:	mov	r6, r0
   11104:	mov	r0, r5
   11108:	bl	10ba0 <puts@plt>
   1110c:	mov	r0, r6
   11110:	bl	11670 <contentor_imprime@@Base>
   11114:	mov	r0, r4
   11118:	bl	11564 <expedir_contentor@@Base>
   1111c:	mov	r6, r0
   11120:	mov	r0, r5
   11124:	bl	10ba0 <puts@plt>
   11128:	mov	r0, r6
   1112c:	bl	11670 <contentor_imprime@@Base>
   11130:	mov	r0, r4
   11134:	bl	11564 <expedir_contentor@@Base>
   11138:	mov	r6, r0
   1113c:	mov	r0, r5
   11140:	bl	10ba0 <puts@plt>
   11144:	mov	r0, r6
   11148:	bl	11670 <contentor_imprime@@Base>
   1114c:	mov	r0, r4
   11150:	bl	11564 <expedir_contentor@@Base>
   11154:	mov	r6, r0
   11158:	mov	r0, r5
   1115c:	bl	10ba0 <puts@plt>
   11160:	mov	r0, r6
   11164:	bl	11670 <contentor_imprime@@Base>
   11168:	mov	r0, r4
   1116c:	bl	11564 <expedir_contentor@@Base>
   11170:	mov	r6, r0
   11174:	mov	r0, r5
   11178:	bl	10ba0 <puts@plt>
   1117c:	mov	r0, r6
   11180:	bl	11670 <contentor_imprime@@Base>
   11184:	mov	r0, r4
   11188:	bl	11564 <expedir_contentor@@Base>
   1118c:	mov	r6, r0
   11190:	mov	r0, r5
   11194:	bl	10ba0 <puts@plt>
   11198:	mov	r0, r6
   1119c:	bl	11670 <contentor_imprime@@Base>
   111a0:	mov	r0, r4
   111a4:	bl	11564 <expedir_contentor@@Base>
   111a8:	mov	r6, r0
   111ac:	mov	r0, r5
   111b0:	bl	10ba0 <puts@plt>
   111b4:	mov	r0, r6
   111b8:	bl	11670 <contentor_imprime@@Base>
   111bc:	movw	r0, #7313	; 0x1c91
   111c0:	movt	r0, #1
   111c4:	bl	10ba0 <puts@plt>
   111c8:	mov	r0, r4
   111cc:	bl	1129c <imprimeArmazem@@Base>
   111d0:	movw	r0, #7340	; 0x1cac
   111d4:	movt	r0, #1
   111d8:	bl	10ba0 <puts@plt>
   111dc:	mov	r0, r4
   111e0:	bl	11564 <expedir_contentor@@Base>
   111e4:	mov	r6, r0
   111e8:	mov	r0, r5
   111ec:	bl	10ba0 <puts@plt>
   111f0:	mov	r0, r6
   111f4:	bl	11670 <contentor_imprime@@Base>
   111f8:	mov	r0, r4
   111fc:	bl	11564 <expedir_contentor@@Base>
   11200:	mov	r6, r0
   11204:	mov	r0, r5
   11208:	bl	10ba0 <puts@plt>
   1120c:	mov	r0, r6
   11210:	bl	11670 <contentor_imprime@@Base>
   11214:	mov	r0, r4
   11218:	bl	11564 <expedir_contentor@@Base>
   1121c:	mov	r6, r0
   11220:	mov	r0, r5
   11224:	bl	10ba0 <puts@plt>
   11228:	mov	r0, r6
   1122c:	bl	11670 <contentor_imprime@@Base>
   11230:	mov	r0, r4
   11234:	bl	11564 <expedir_contentor@@Base>
   11238:	mov	r6, r0
   1123c:	mov	r0, r5
   11240:	bl	10ba0 <puts@plt>
   11244:	mov	r0, r6
   11248:	bl	11670 <contentor_imprime@@Base>
   1124c:	movw	r0, #7373	; 0x1ccd
   11250:	movt	r0, #1
   11254:	bl	10ba0 <puts@plt>
   11258:	mov	r0, r4
   1125c:	bl	1129c <imprimeArmazem@@Base>
   11260:	mov	r0, r4
   11264:	bl	11408 <armazem_vazio@@Base>
   11268:	movw	r2, #7400	; 0x1ce8
   1126c:	movw	r1, #7437	; 0x1d0d
   11270:	cmp	r0, #0
   11274:	movt	r2, #1
   11278:	movt	r1, #1
   1127c:	moveq	r1, r2
   11280:	mov	r0, r1
   11284:	bl	10ba0 <puts@plt>
   11288:	mov	r0, #0
   1128c:	sub	sp, fp, #40	; 0x28
   11290:	vpop	{d8}
   11294:	add	sp, sp, #4
   11298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001129c <imprimeArmazem@@Base>:
   1129c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a0:	add	fp, sp, #28
   112a4:	sub	sp, sp, #4
   112a8:	cmp	r0, #0
   112ac:	beq	11374 <imprimeArmazem@@Base+0xd8>
   112b0:	ldr	r4, [r0, #8]
   112b4:	mov	sl, r0
   112b8:	cmp	r4, #0
   112bc:	beq	11374 <imprimeArmazem@@Base+0xd8>
   112c0:	ldr	r9, [r4, #4]
   112c4:	mov	r1, #4
   112c8:	mov	r0, r9
   112cc:	bl	10b70 <calloc@plt>
   112d0:	str	r0, [sp]
   112d4:	ldr	r0, [r4]
   112d8:	cmp	r0, #0
   112dc:	beq	112fc <imprimeArmazem@@Base+0x60>
   112e0:	ldr	r1, [sp]
   112e4:	ldr	r2, [r0]
   112e8:	ldr	r2, [r2, #4]
   112ec:	str	r2, [r1], #4
   112f0:	ldr	r0, [r0, #4]
   112f4:	cmp	r0, #0
   112f8:	bne	112e4 <imprimeArmazem@@Base+0x48>
   112fc:	mov	r0, #10
   11300:	bl	10bdc <putchar@plt>
   11304:	ldr	r5, [sl, #4]
   11308:	cmp	r5, #1
   1130c:	blt	1137c <imprimeArmazem@@Base+0xe0>
   11310:	movw	r7, #7067	; 0x1b9b
   11314:	movw	r4, #7062	; 0x1b96
   11318:	movt	r7, #1
   1131c:	movt	r4, #1
   11320:	b	11338 <imprimeArmazem@@Base+0x9c>
   11324:	mov	r0, #10
   11328:	bl	10bdc <putchar@plt>
   1132c:	sub	r5, r5, #1
   11330:	cmp	r5, #0
   11334:	ble	1137c <imprimeArmazem@@Base+0xe0>
   11338:	movw	r0, #7069	; 0x1b9d
   1133c:	movt	r0, #1
   11340:	bl	10b7c <printf@plt>
   11344:	cmp	r9, #1
   11348:	blt	11324 <imprimeArmazem@@Base+0x88>
   1134c:	ldr	r8, [sp]
   11350:	mov	r6, r9
   11354:	ldr	r0, [r8], #4
   11358:	cmp	r0, r5
   1135c:	mov	r0, r4
   11360:	movlt	r0, r7
   11364:	bl	10b7c <printf@plt>
   11368:	subs	r6, r6, #1
   1136c:	bne	11354 <imprimeArmazem@@Base+0xb8>
   11370:	b	11324 <imprimeArmazem@@Base+0x88>
   11374:	sub	sp, fp, #28
   11378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1137c:	movw	r0, #7074	; 0x1ba2
   11380:	movt	r0, #1
   11384:	bl	10b7c <printf@plt>
   11388:	ldr	r0, [sl]
   1138c:	cmp	r0, #1
   11390:	blt	113b8 <imprimeArmazem@@Base+0x11c>
   11394:	movw	r6, #7072	; 0x1ba0
   11398:	mov	r4, #0
   1139c:	movt	r6, #1
   113a0:	mov	r0, r6
   113a4:	bl	10b7c <printf@plt>
   113a8:	ldr	r0, [sl]
   113ac:	add	r4, r4, #1
   113b0:	cmp	r4, r0
   113b4:	blt	113a0 <imprimeArmazem@@Base+0x104>
   113b8:	movw	r0, #6985	; 0x1b49
   113bc:	movt	r0, #1
   113c0:	bl	10ba0 <puts@plt>
   113c4:	ldr	r0, [sp]
   113c8:	sub	sp, fp, #28
   113cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d0:	b	10b88 <free@plt>

000113d4 <armazem_novo@@Base>:
   113d4:	push	{r4, r5, r6, sl, fp, lr}
   113d8:	add	fp, sp, #16
   113dc:	mov	r5, r0
   113e0:	mov	r0, #12
   113e4:	mov	r4, r1
   113e8:	bl	10bac <malloc@plt>
   113ec:	str	r5, [r0]
   113f0:	mov	r6, r0
   113f4:	str	r4, [r0, #4]
   113f8:	bl	116ec <fila_nova@@Base>
   113fc:	str	r0, [r6, #8]
   11400:	mov	r0, r6
   11404:	pop	{r4, r5, r6, sl, fp, pc}

00011408 <armazem_vazio@@Base>:
   11408:	cmp	r0, #0
   1140c:	moveq	r0, #1
   11410:	bxeq	lr
   11414:	push	{fp, lr}
   11418:	mov	fp, sp
   1141c:	ldr	r0, [r0, #8]
   11420:	bl	1175c <fila_tamanho@@Base>
   11424:	clz	r0, r0
   11428:	lsr	r0, r0, #5
   1142c:	pop	{fp, pc}

00011430 <armazem_cheio@@Base>:
   11430:	push	{r4, r5, fp, lr}
   11434:	add	fp, sp, #8
   11438:	mov	r5, #0
   1143c:	cmp	r0, #0
   11440:	beq	11488 <armazem_cheio@@Base+0x58>
   11444:	mov	r4, r0
   11448:	ldr	r0, [r0, #8]
   1144c:	bl	1175c <fila_tamanho@@Base>
   11450:	cmp	r0, #0
   11454:	beq	11488 <armazem_cheio@@Base+0x58>
   11458:	ldr	r0, [r4, #8]
   1145c:	bl	1175c <fila_tamanho@@Base>
   11460:	ldr	r1, [r4]
   11464:	cmp	r0, r1
   11468:	bne	11490 <armazem_cheio@@Base+0x60>
   1146c:	ldr	r0, [r4, #8]
   11470:	bl	11794 <fila_back@@Base>
   11474:	ldr	r1, [r4, #4]
   11478:	ldr	r0, [r0, #4]
   1147c:	mov	r5, #1
   11480:	cmp	r0, r1
   11484:	movne	r5, #0
   11488:	mov	r0, r5
   1148c:	pop	{r4, r5, fp, pc}
   11490:	mov	r5, #0
   11494:	mov	r0, r5
   11498:	pop	{r4, r5, fp, pc}

0001149c <armazenar_contentor@@Base>:
   1149c:	push	{r4, r5, r6, r7, fp, lr}
   114a0:	add	fp, sp, #16
   114a4:	mov	r4, r1
   114a8:	mov	r5, r0
   114ac:	bl	118f0 <pilha_nova@@Base>
   114b0:	cmp	r5, #0
   114b4:	mov	r7, #0
   114b8:	cmpne	r4, #0
   114bc:	beq	1155c <armazenar_contentor@@Base+0xc0>
   114c0:	mov	r6, r0
   114c4:	ldr	r0, [r5, #8]
   114c8:	bl	1175c <fila_tamanho@@Base>
   114cc:	cmp	r0, #0
   114d0:	beq	11500 <armazenar_contentor@@Base+0x64>
   114d4:	ldr	r0, [r5, #8]
   114d8:	bl	1175c <fila_tamanho@@Base>
   114dc:	ldr	r1, [r5]
   114e0:	cmp	r0, r1
   114e4:	bne	11500 <armazenar_contentor@@Base+0x64>
   114e8:	ldr	r0, [r5, #8]
   114ec:	bl	11794 <fila_back@@Base>
   114f0:	ldr	r1, [r5, #4]
   114f4:	ldr	r0, [r0, #4]
   114f8:	cmp	r0, r1
   114fc:	beq	1155c <armazenar_contentor@@Base+0xc0>
   11500:	ldr	r0, [r5, #8]
   11504:	bl	1175c <fila_tamanho@@Base>
   11508:	cmp	r0, #0
   1150c:	bne	11524 <armazenar_contentor@@Base+0x88>
   11510:	ldr	r7, [r5, #8]
   11514:	bl	118f0 <pilha_nova@@Base>
   11518:	mov	r1, r0
   1151c:	mov	r0, r7
   11520:	bl	117cc <fila_push@@Base>
   11524:	ldr	r0, [r5, #8]
   11528:	bl	11794 <fila_back@@Base>
   1152c:	ldr	r1, [r5, #4]
   11530:	ldr	r0, [r0, #4]
   11534:	cmp	r0, r1
   11538:	bne	11548 <armazenar_contentor@@Base+0xac>
   1153c:	ldr	r0, [r5, #8]
   11540:	mov	r1, r6
   11544:	bl	117cc <fila_push@@Base>
   11548:	ldr	r0, [r5, #8]
   1154c:	bl	11794 <fila_back@@Base>
   11550:	mov	r1, r4
   11554:	bl	11998 <pilha_push@@Base>
   11558:	mov	r7, #1
   1155c:	mov	r0, r7
   11560:	pop	{r4, r5, r6, r7, fp, pc}

00011564 <expedir_contentor@@Base>:
   11564:	push	{r4, r5, fp, lr}
   11568:	add	fp, sp, #8
   1156c:	mov	r4, #0
   11570:	cmp	r0, #0
   11574:	beq	115fc <expedir_contentor@@Base+0x98>
   11578:	mov	r5, r0
   1157c:	ldr	r0, [r0, #8]
   11580:	bl	1175c <fila_tamanho@@Base>
   11584:	cmp	r0, #0
   11588:	beq	115fc <expedir_contentor@@Base+0x98>
   1158c:	ldr	r0, [r5, #8]
   11590:	bl	1176c <fila_front@@Base>
   11594:	bl	11970 <pilha_top@@Base>
   11598:	cmp	r0, #0
   1159c:	beq	115fc <expedir_contentor@@Base+0x98>
   115a0:	ldr	r0, [r5, #8]
   115a4:	bl	1176c <fila_front@@Base>
   115a8:	bl	11970 <pilha_top@@Base>
   115ac:	ldr	r4, [r0]
   115b0:	ldr	r0, [r5, #8]
   115b4:	bl	1176c <fila_front@@Base>
   115b8:	bl	11970 <pilha_top@@Base>
   115bc:	vldr	s0, [r0, #4]
   115c0:	mov	r0, r4
   115c4:	bl	11604 <contentor_novo@@Base>
   115c8:	mov	r4, r0
   115cc:	ldr	r0, [r5, #8]
   115d0:	bl	1176c <fila_front@@Base>
   115d4:	mov	r1, r0
   115d8:	ldr	r0, [r5, #8]
   115dc:	ldr	r1, [r1, #4]
   115e0:	cmp	r1, #1
   115e4:	bgt	115f4 <expedir_contentor@@Base+0x90>
   115e8:	bl	11848 <fila_pop@@Base>
   115ec:	mov	r0, r4
   115f0:	pop	{r4, r5, fp, pc}
   115f4:	bl	1176c <fila_front@@Base>
   115f8:	bl	11a0c <pilha_pop@@Base>
   115fc:	mov	r0, r4
   11600:	pop	{r4, r5, fp, pc}

00011604 <contentor_novo@@Base>:
   11604:	push	{r4, r5, fp, lr}
   11608:	add	fp, sp, #8
   1160c:	vpush	{d8}
   11610:	mov	r4, r0
   11614:	mov	r0, #8
   11618:	vmov.f32	s16, s0
   1161c:	bl	10bac <malloc@plt>
   11620:	mov	r5, r0
   11624:	mov	r0, r4
   11628:	bl	10bd0 <strlen@plt>
   1162c:	add	r0, r0, #1
   11630:	bl	10bac <malloc@plt>
   11634:	mov	r1, r4
   11638:	str	r0, [r5]
   1163c:	bl	10b94 <strcpy@plt>
   11640:	vstr	s16, [r5, #4]
   11644:	mov	r0, r5
   11648:	vpop	{d8}
   1164c:	pop	{r4, r5, fp, pc}

00011650 <contentor_apaga@@Base>:
   11650:	push	{r4, sl, fp, lr}
   11654:	add	fp, sp, #8
   11658:	mov	r4, r0
   1165c:	ldr	r0, [r0]
   11660:	bl	10b88 <free@plt>
   11664:	mov	r0, r4
   11668:	pop	{r4, sl, fp, lr}
   1166c:	b	10b88 <free@plt>

00011670 <contentor_imprime@@Base>:
   11670:	cmp	r0, #0
   11674:	beq	11694 <contentor_imprime@@Base+0x24>
   11678:	vldr	s0, [r0, #4]
   1167c:	ldr	r1, [r0]
   11680:	movw	r0, #7495	; 0x1d47
   11684:	movt	r0, #1
   11688:	vcvt.f64.f32	d16, s0
   1168c:	vmov	r2, r3, d16
   11690:	b	10b7c <printf@plt>
   11694:	movw	r0, #7538	; 0x1d72
   11698:	movt	r0, #1
   1169c:	b	10ba0 <puts@plt>

000116a0 <fila_novo_elemento@@Base>:
   116a0:	push	{r4, r5, fp, lr}
   116a4:	add	fp, sp, #8
   116a8:	mov	r5, r0
   116ac:	mov	r0, #8
   116b0:	bl	10bac <malloc@plt>
   116b4:	mov	r4, #0
   116b8:	cmp	r0, #0
   116bc:	beq	116d8 <fila_novo_elemento@@Base+0x38>
   116c0:	cmp	r5, #0
   116c4:	str	r5, [r0]
   116c8:	beq	116e0 <fila_novo_elemento@@Base+0x40>
   116cc:	mov	r1, #0
   116d0:	mov	r4, r0
   116d4:	str	r1, [r0, #4]
   116d8:	mov	r0, r4
   116dc:	pop	{r4, r5, fp, pc}
   116e0:	bl	10b88 <free@plt>
   116e4:	mov	r0, r4
   116e8:	pop	{r4, r5, fp, pc}

000116ec <fila_nova@@Base>:
   116ec:	push	{fp, lr}
   116f0:	mov	fp, sp
   116f4:	mov	r0, #8
   116f8:	bl	10bac <malloc@plt>
   116fc:	cmp	r0, #0
   11700:	moveq	r0, #0
   11704:	movne	r1, #0
   11708:	strne	r1, [r0]
   1170c:	strne	r1, [r0, #4]
   11710:	pop	{fp, pc}

00011714 <fila_apaga@@Base>:
   11714:	cmp	r0, #0
   11718:	bxeq	lr
   1171c:	push	{r4, r5, fp, lr}
   11720:	add	fp, sp, #8
   11724:	mov	r4, r0
   11728:	ldr	r5, [r4]
   1172c:	cmp	r5, #0
   11730:	beq	11750 <fila_apaga@@Base+0x3c>
   11734:	ldr	r0, [r5, #4]
   11738:	str	r0, [r4]
   1173c:	ldr	r0, [r5]
   11740:	bl	11918 <pilha_apaga@@Base>
   11744:	mov	r0, r5
   11748:	bl	10b88 <free@plt>
   1174c:	b	11728 <fila_apaga@@Base+0x14>
   11750:	mov	r0, r4
   11754:	pop	{r4, r5, fp, lr}
   11758:	b	10b88 <free@plt>

0001175c <fila_tamanho@@Base>:
   1175c:	cmp	r0, #0
   11760:	ldrne	r0, [r0, #4]
   11764:	mvneq	r0, #0
   11768:	bx	lr

0001176c <fila_front@@Base>:
   1176c:	mov	r1, r0
   11770:	mov	r0, #0
   11774:	cmp	r1, #0
   11778:	beq	11790 <fila_front@@Base+0x24>
   1177c:	ldr	r2, [r1, #4]
   11780:	cmp	r2, #0
   11784:	bxeq	lr
   11788:	ldr	r0, [r1]
   1178c:	ldr	r0, [r0]
   11790:	bx	lr

00011794 <fila_back@@Base>:
   11794:	mov	r1, r0
   11798:	mov	r0, #0
   1179c:	cmp	r1, #0
   117a0:	beq	117c8 <fila_back@@Base+0x34>
   117a4:	ldr	r2, [r1, #4]
   117a8:	cmp	r2, #0
   117ac:	bxeq	lr
   117b0:	ldr	r0, [r1]
   117b4:	mov	r1, r0
   117b8:	ldr	r0, [r0, #4]
   117bc:	cmp	r0, #0
   117c0:	bne	117b4 <fila_back@@Base+0x20>
   117c4:	ldr	r0, [r1]
   117c8:	bx	lr

000117cc <fila_push@@Base>:
   117cc:	push	{r4, r5, r6, sl, fp, lr}
   117d0:	add	fp, sp, #16
   117d4:	cmp	r0, #0
   117d8:	beq	11834 <fila_push@@Base+0x68>
   117dc:	ldr	r6, [r0]
   117e0:	mov	r4, r0
   117e4:	mov	r0, #8
   117e8:	mov	r5, r1
   117ec:	bl	10bac <malloc@plt>
   117f0:	cmp	r0, #0
   117f4:	beq	11834 <fila_push@@Base+0x68>
   117f8:	cmp	r5, #0
   117fc:	str	r5, [r0]
   11800:	beq	11838 <fila_push@@Base+0x6c>
   11804:	mov	r1, #0
   11808:	cmp	r6, #0
   1180c:	str	r1, [r0, #4]
   11810:	ldr	r1, [r4, #4]
   11814:	add	r1, r1, #1
   11818:	str	r1, [r4, #4]
   1181c:	beq	11840 <fila_push@@Base+0x74>
   11820:	mov	r1, r6
   11824:	ldr	r6, [r6, #4]
   11828:	cmp	r6, #0
   1182c:	bne	11820 <fila_push@@Base+0x54>
   11830:	str	r0, [r1, #4]
   11834:	pop	{r4, r5, r6, sl, fp, pc}
   11838:	pop	{r4, r5, r6, sl, fp, lr}
   1183c:	b	10b88 <free@plt>
   11840:	str	r0, [r4]
   11844:	pop	{r4, r5, r6, sl, fp, pc}

00011848 <fila_pop@@Base>:
   11848:	push	{r4, sl, fp, lr}
   1184c:	add	fp, sp, #8
   11850:	cmp	r0, #0
   11854:	popeq	{r4, sl, fp, pc}
   11858:	ldr	r1, [r0, #4]
   1185c:	cmp	r1, #0
   11860:	beq	1188c <fila_pop@@Base+0x44>
   11864:	sub	r1, r1, #1
   11868:	str	r1, [r0, #4]
   1186c:	ldr	r4, [r0]
   11870:	ldr	r1, [r4, #4]
   11874:	str	r1, [r0]
   11878:	ldr	r0, [r4]
   1187c:	bl	11918 <pilha_apaga@@Base>
   11880:	mov	r0, r4
   11884:	pop	{r4, sl, fp, lr}
   11888:	b	10b88 <free@plt>
   1188c:	pop	{r4, sl, fp, pc}

00011890 <pilha_novo_elemento@@Base>:
   11890:	push	{r4, r5, r6, sl, fp, lr}
   11894:	add	fp, sp, #16
   11898:	mov	r6, r0
   1189c:	mov	r0, #8
   118a0:	bl	10bac <malloc@plt>
   118a4:	mov	r4, #0
   118a8:	cmp	r0, #0
   118ac:	beq	118d8 <pilha_novo_elemento@@Base+0x48>
   118b0:	vldr	s0, [r6, #4]
   118b4:	mov	r5, r0
   118b8:	ldr	r0, [r6]
   118bc:	bl	11604 <contentor_novo@@Base>
   118c0:	cmp	r0, #0
   118c4:	str	r0, [r5]
   118c8:	beq	118e0 <pilha_novo_elemento@@Base+0x50>
   118cc:	mov	r0, #0
   118d0:	mov	r4, r5
   118d4:	str	r0, [r5, #4]
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, r6, sl, fp, pc}
   118e0:	mov	r0, r5
   118e4:	bl	10b88 <free@plt>
   118e8:	mov	r0, r4
   118ec:	pop	{r4, r5, r6, sl, fp, pc}

000118f0 <pilha_nova@@Base>:
   118f0:	push	{fp, lr}
   118f4:	mov	fp, sp
   118f8:	mov	r0, #8
   118fc:	bl	10bac <malloc@plt>
   11900:	cmp	r0, #0
   11904:	moveq	r0, #0
   11908:	movne	r1, #0
   1190c:	strne	r1, [r0]
   11910:	strne	r1, [r0, #4]
   11914:	pop	{fp, pc}

00011918 <pilha_apaga@@Base>:
   11918:	cmp	r0, #0
   1191c:	bxeq	lr
   11920:	push	{r4, r5, fp, lr}
   11924:	add	fp, sp, #8
   11928:	mov	r4, r0
   1192c:	ldr	r5, [r4]
   11930:	cmp	r5, #0
   11934:	beq	11954 <pilha_apaga@@Base+0x3c>
   11938:	ldr	r0, [r5, #4]
   1193c:	str	r0, [r4]
   11940:	ldr	r0, [r5]
   11944:	bl	11650 <contentor_apaga@@Base>
   11948:	mov	r0, r5
   1194c:	bl	10b88 <free@plt>
   11950:	b	1192c <pilha_apaga@@Base+0x14>
   11954:	mov	r0, r4
   11958:	pop	{r4, r5, fp, lr}
   1195c:	b	10b88 <free@plt>

00011960 <pilha_tamanho@@Base>:
   11960:	cmp	r0, #0
   11964:	ldrne	r0, [r0, #4]
   11968:	mvneq	r0, #0
   1196c:	bx	lr

00011970 <pilha_top@@Base>:
   11970:	mov	r1, r0
   11974:	mov	r0, #0
   11978:	cmp	r1, #0
   1197c:	beq	11994 <pilha_top@@Base+0x24>
   11980:	ldr	r2, [r1, #4]
   11984:	cmp	r2, #0
   11988:	bxeq	lr
   1198c:	ldr	r0, [r1]
   11990:	ldr	r0, [r0]
   11994:	bx	lr

00011998 <pilha_push@@Base>:
   11998:	push	{r4, r5, r6, sl, fp, lr}
   1199c:	add	fp, sp, #16
   119a0:	cmp	r0, #0
   119a4:	beq	119fc <pilha_push@@Base+0x64>
   119a8:	mov	r4, r0
   119ac:	mov	r0, #8
   119b0:	mov	r6, r1
   119b4:	bl	10bac <malloc@plt>
   119b8:	cmp	r0, #0
   119bc:	beq	119fc <pilha_push@@Base+0x64>
   119c0:	vldr	s0, [r6, #4]
   119c4:	mov	r5, r0
   119c8:	ldr	r0, [r6]
   119cc:	bl	11604 <contentor_novo@@Base>
   119d0:	cmp	r0, #0
   119d4:	str	r0, [r5]
   119d8:	beq	11a00 <pilha_push@@Base+0x68>
   119dc:	mov	r0, #0
   119e0:	str	r0, [r5, #4]
   119e4:	ldm	r4, {r0, r1}
   119e8:	add	r1, r1, #1
   119ec:	str	r1, [r4, #4]
   119f0:	cmp	r0, #0
   119f4:	strne	r0, [r5, #4]
   119f8:	str	r5, [r4]
   119fc:	pop	{r4, r5, r6, sl, fp, pc}
   11a00:	mov	r0, r5
   11a04:	pop	{r4, r5, r6, sl, fp, lr}
   11a08:	b	10b88 <free@plt>

00011a0c <pilha_pop@@Base>:
   11a0c:	push	{r4, sl, fp, lr}
   11a10:	add	fp, sp, #8
   11a14:	cmp	r0, #0
   11a18:	popeq	{r4, sl, fp, pc}
   11a1c:	ldr	r1, [r0, #4]
   11a20:	cmp	r1, #0
   11a24:	beq	11a50 <pilha_pop@@Base+0x44>
   11a28:	ldr	r4, [r0]
   11a2c:	sub	r1, r1, #1
   11a30:	ldr	r2, [r4, #4]
   11a34:	str	r2, [r0]
   11a38:	str	r1, [r0, #4]
   11a3c:	ldr	r0, [r4]
   11a40:	bl	11650 <contentor_apaga@@Base>
   11a44:	mov	r0, r4
   11a48:	pop	{r4, sl, fp, lr}
   11a4c:	b	10b88 <free@plt>
   11a50:	pop	{r4, sl, fp, pc}

00011a54 <__libc_csu_init@@Base>:
   11a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a58:	mov	r7, r0
   11a5c:	ldr	r6, [pc, #72]	; 11aac <__libc_csu_init@@Base+0x58>
   11a60:	ldr	r5, [pc, #72]	; 11ab0 <__libc_csu_init@@Base+0x5c>
   11a64:	add	r6, pc, r6
   11a68:	add	r5, pc, r5
   11a6c:	sub	r6, r6, r5
   11a70:	mov	r8, r1
   11a74:	mov	r9, r2
   11a78:	bl	10b50 <calloc@plt-0x20>
   11a7c:	asrs	r6, r6, #2
   11a80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a84:	mov	r4, #0
   11a88:	add	r4, r4, #1
   11a8c:	ldr	r3, [r5], #4
   11a90:	mov	r2, r9
   11a94:	mov	r1, r8
   11a98:	mov	r0, r7
   11a9c:	blx	r3
   11aa0:	cmp	r6, r4
   11aa4:	bne	11a88 <__libc_csu_init@@Base+0x34>
   11aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11aac:	andeq	r0, r1, r0, lsr #9
   11ab0:	muleq	r1, r8, r4

00011ab4 <__libc_csu_fini@@Base>:
   11ab4:	bx	lr

Disassembly of section .fini:

00011ab8 <.fini>:
   11ab8:	push	{r3, lr}
   11abc:	pop	{r3, pc}
