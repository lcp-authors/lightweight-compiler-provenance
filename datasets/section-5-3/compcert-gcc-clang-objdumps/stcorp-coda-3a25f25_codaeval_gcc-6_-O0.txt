
../compcert-repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010ca8 <.init>:
   10ca8:	push	{r3, lr}
   10cac:	bl	10ecc <_start@@Base+0x3c>
   10cb0:	pop	{r3, pc}

Disassembly of section .plt:

00010cb4 <coda_match_filefilter@plt-0x14>:
   10cb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cb8:	ldr	lr, [pc, #4]	; 10cc4 <coda_match_filefilter@plt-0x4>
   10cbc:	add	lr, pc, lr
   10cc0:	ldr	pc, [lr, #8]!
   10cc4:	andeq	r2, r1, ip, lsr r3

00010cc8 <coda_match_filefilter@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #828]!	; 0x33c

00010cd4 <coda_expression_eval_integer@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #820]!	; 0x334

00010ce0 <strcmp@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #812]!	; 0x32c

00010cec <printf@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #804]!	; 0x324

00010cf8 <coda_set_error@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #796]!	; 0x31c

00010d04 <coda_open@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #788]!	; 0x314

00010d10 <free@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #780]!	; 0x30c

00010d1c <coda_set_definition_path_conditional@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #772]!	; 0x304

00010d28 <coda_set_definition_path@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #764]!	; 0x2fc

00010d34 <fwrite@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d40 <coda_expression_eval_bool@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #748]!	; 0x2ec

00010d4c <coda_cursor_set_product@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #740]!	; 0x2e4

00010d58 <coda_done@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #732]!	; 0x2dc

00010d64 <puts@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d70 <__libc_start_main@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #716]!	; 0x2cc

00010d7c <coda_expression_delete@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #708]!	; 0x2c4

00010d88 <__gmon_start__@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #700]!	; 0x2bc

00010d94 <__ctype_b_loc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #692]!	; 0x2b4

00010da0 <exit@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #684]!	; 0x2ac

00010dac <strlen@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #676]!	; 0x2a4

00010db8 <fprintf@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #668]!	; 0x29c

00010dc4 <coda_init@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #660]!	; 0x294

00010dd0 <coda_set_option_perform_conversions@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #652]!	; 0x28c

00010ddc <coda_expression_eval_string@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #644]!	; 0x284

00010de8 <putchar@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #636]!	; 0x27c

00010df4 <coda_expression_get_type@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #628]!	; 0x274

00010e00 <coda_close@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #620]!	; 0x26c

00010e0c <coda_expression_is_constant@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #612]!	; 0x264

00010e18 <coda_expression_eval_float@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #604]!	; 0x25c

00010e24 <coda_expression_eval_node@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #596]!	; 0x254

00010e30 <coda_errno_to_string@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #588]!	; 0x24c

00010e3c <coda_expression_get_type_name@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #580]!	; 0x244

00010e48 <coda_expression_from_string@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #572]!	; 0x23c

00010e54 <coda_get_libcoda_version@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #564]!	; 0x234

00010e60 <coda_get_errno@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #556]!	; 0x22c

00010e6c <abort@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #548]!	; 0x224

00010e78 <coda_str64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #540]!	; 0x21c

00010e84 <__assert_fail@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #532]!	; 0x214

Disassembly of section .text:

00010e90 <_start@@Base>:
   10e90:	mov	fp, #0
   10e94:	mov	lr, #0
   10e98:	pop	{r1}		; (ldr r1, [sp], #4)
   10e9c:	mov	r2, sp
   10ea0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ea4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ea8:	ldr	ip, [pc, #16]	; 10ec0 <_start@@Base+0x30>
   10eac:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb0:	ldr	r0, [pc, #12]	; 10ec4 <_start@@Base+0x34>
   10eb4:	ldr	r3, [pc, #12]	; 10ec8 <_start@@Base+0x38>
   10eb8:	bl	10d70 <__libc_start_main@plt>
   10ebc:	bl	10e6c <abort@plt>
   10ec0:	andeq	r2, r1, ip, asr r1
   10ec4:	andeq	r1, r1, r4, ror r9
   10ec8:	strdeq	r2, [r1], -ip
   10ecc:	ldr	r3, [pc, #20]	; 10ee8 <_start@@Base+0x58>
   10ed0:	ldr	r2, [pc, #20]	; 10eec <_start@@Base+0x5c>
   10ed4:	add	r3, pc, r3
   10ed8:	ldr	r2, [r3, r2]
   10edc:	cmp	r2, #0
   10ee0:	bxeq	lr
   10ee4:	b	10d88 <__gmon_start__@plt>
   10ee8:	andeq	r2, r1, r4, lsr #2
   10eec:	andeq	r0, r0, r4, lsr #1
   10ef0:	ldr	r3, [pc, #28]	; 10f14 <_start@@Base+0x84>
   10ef4:	ldr	r0, [pc, #28]	; 10f18 <_start@@Base+0x88>
   10ef8:	sub	r3, r3, r0
   10efc:	cmp	r3, #6
   10f00:	bxls	lr
   10f04:	ldr	r3, [pc, #16]	; 10f1c <_start@@Base+0x8c>
   10f08:	cmp	r3, #0
   10f0c:	bxeq	lr
   10f10:	bx	r3
   10f14:	strheq	r3, [r2], -r3	; <UNPREDICTABLE>
   10f18:	strheq	r3, [r2], -r0
   10f1c:	andeq	r0, r0, r0
   10f20:	ldr	r1, [pc, #36]	; 10f4c <_start@@Base+0xbc>
   10f24:	ldr	r0, [pc, #36]	; 10f50 <_start@@Base+0xc0>
   10f28:	sub	r1, r1, r0
   10f2c:	asr	r1, r1, #2
   10f30:	add	r1, r1, r1, lsr #31
   10f34:	asrs	r1, r1, #1
   10f38:	bxeq	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <_start@@Base+0xc4>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	strheq	r3, [r2], -r0
   10f50:	strheq	r3, [r2], -r0
   10f54:	andeq	r0, r0, r0
   10f58:	push	{r4, lr}
   10f5c:	ldr	r4, [pc, #24]	; 10f7c <_start@@Base+0xec>
   10f60:	ldrb	r3, [r4]
   10f64:	cmp	r3, #0
   10f68:	popne	{r4, pc}
   10f6c:	bl	10ef0 <_start@@Base+0x60>
   10f70:	mov	r3, #1
   10f74:	strb	r3, [r4]
   10f78:	pop	{r4, pc}
   10f7c:	strheq	r3, [r2], -r4
   10f80:	ldr	r0, [pc, #40]	; 10fb0 <_start@@Base+0x120>
   10f84:	ldr	r3, [r0]
   10f88:	cmp	r3, #0
   10f8c:	bne	10f94 <_start@@Base+0x104>
   10f90:	b	10f20 <_start@@Base+0x90>
   10f94:	ldr	r3, [pc, #24]	; 10fb4 <_start@@Base+0x124>
   10f98:	cmp	r3, #0
   10f9c:	beq	10f90 <_start@@Base+0x100>
   10fa0:	push	{r4, lr}
   10fa4:	blx	r3
   10fa8:	pop	{r4, lr}
   10fac:	b	10f20 <_start@@Base+0x90>
   10fb0:	strdeq	r2, [r2], -ip
   10fb4:	andeq	r0, r0, r0
   10fb8:	push	{fp, lr}
   10fbc:	add	fp, sp, #4
   10fc0:	sub	sp, sp, #16
   10fc4:	str	r0, [fp, #-16]
   10fc8:	str	r1, [fp, #-20]	; 0xffffffec
   10fcc:	mov	r3, #0
   10fd0:	str	r3, [fp, #-8]
   10fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fd8:	cmp	r3, #0
   10fdc:	beq	1128c <_start@@Base+0x3fc>
   10fe0:	ldr	r3, [fp, #-16]
   10fe4:	cmp	r3, #0
   10fe8:	beq	1128c <_start@@Base+0x3fc>
   10fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ff0:	cmp	r3, #0
   10ff4:	bge	11278 <_start@@Base+0x3e8>
   10ff8:	ldr	r0, [fp, #-16]
   10ffc:	bl	10dac <strlen@plt>
   11000:	mov	r3, r0
   11004:	str	r3, [fp, #-20]	; 0xffffffec
   11008:	b	11278 <_start@@Base+0x3e8>
   1100c:	ldr	r3, [fp, #-8]
   11010:	ldr	r2, [fp, #-16]
   11014:	add	r3, r2, r3
   11018:	ldrb	r3, [r3]
   1101c:	sub	r3, r3, #7
   11020:	cmp	r3, #85	; 0x55
   11024:	ldrls	pc, [pc, r3, lsl #2]
   11028:	b	111fc <_start@@Base+0x36c>
   1102c:	muleq	r1, r0, r1
   11030:	muleq	r1, ip, r1
   11034:	andeq	r1, r1, ip, asr #3
   11038:			; <UNDEFINED> instruction: 0x000111b4
   1103c:	ldrdeq	r1, [r1], -r8
   11040:	andeq	r1, r1, r8, lsr #3
   11044:	andeq	r1, r1, r0, asr #3
   11048:	strdeq	r1, [r1], -ip
   1104c:	strdeq	r1, [r1], -ip
   11050:	strdeq	r1, [r1], -ip
   11054:	strdeq	r1, [r1], -ip
   11058:	strdeq	r1, [r1], -ip
   1105c:	strdeq	r1, [r1], -ip
   11060:	strdeq	r1, [r1], -ip
   11064:	strdeq	r1, [r1], -ip
   11068:	strdeq	r1, [r1], -ip
   1106c:	strdeq	r1, [r1], -ip
   11070:	strdeq	r1, [r1], -ip
   11074:	strdeq	r1, [r1], -ip
   11078:	strdeq	r1, [r1], -ip
   1107c:	andeq	r1, r1, r4, lsl #3
   11080:	strdeq	r1, [r1], -ip
   11084:	strdeq	r1, [r1], -ip
   11088:	strdeq	r1, [r1], -ip
   1108c:	strdeq	r1, [r1], -ip
   11090:	strdeq	r1, [r1], -ip
   11094:	strdeq	r1, [r1], -ip
   11098:	strdeq	r1, [r1], -r0
   1109c:	strdeq	r1, [r1], -ip
   110a0:	strdeq	r1, [r1], -ip
   110a4:	strdeq	r1, [r1], -ip
   110a8:	strdeq	r1, [r1], -ip
   110ac:	strdeq	r1, [r1], -ip
   110b0:	strdeq	r1, [r1], -ip
   110b4:	strdeq	r1, [r1], -ip
   110b8:	strdeq	r1, [r1], -ip
   110bc:	strdeq	r1, [r1], -ip
   110c0:	strdeq	r1, [r1], -ip
   110c4:	strdeq	r1, [r1], -ip
   110c8:	strdeq	r1, [r1], -ip
   110cc:	strdeq	r1, [r1], -ip
   110d0:	strdeq	r1, [r1], -ip
   110d4:	strdeq	r1, [r1], -ip
   110d8:	strdeq	r1, [r1], -ip
   110dc:	strdeq	r1, [r1], -ip
   110e0:	strdeq	r1, [r1], -ip
   110e4:	strdeq	r1, [r1], -ip
   110e8:	strdeq	r1, [r1], -ip
   110ec:	strdeq	r1, [r1], -ip
   110f0:	strdeq	r1, [r1], -ip
   110f4:	strdeq	r1, [r1], -ip
   110f8:	strdeq	r1, [r1], -ip
   110fc:	strdeq	r1, [r1], -ip
   11100:	strdeq	r1, [r1], -ip
   11104:	strdeq	r1, [r1], -ip
   11108:	strdeq	r1, [r1], -ip
   1110c:	strdeq	r1, [r1], -ip
   11110:	strdeq	r1, [r1], -ip
   11114:	strdeq	r1, [r1], -ip
   11118:	strdeq	r1, [r1], -ip
   1111c:	strdeq	r1, [r1], -ip
   11120:	strdeq	r1, [r1], -ip
   11124:	strdeq	r1, [r1], -ip
   11128:	strdeq	r1, [r1], -ip
   1112c:	strdeq	r1, [r1], -ip
   11130:	strdeq	r1, [r1], -ip
   11134:	strdeq	r1, [r1], -ip
   11138:	strdeq	r1, [r1], -ip
   1113c:	strdeq	r1, [r1], -ip
   11140:	strdeq	r1, [r1], -ip
   11144:	strdeq	r1, [r1], -ip
   11148:	strdeq	r1, [r1], -ip
   1114c:	strdeq	r1, [r1], -ip
   11150:	strdeq	r1, [r1], -ip
   11154:	strdeq	r1, [r1], -ip
   11158:	strdeq	r1, [r1], -ip
   1115c:	strdeq	r1, [r1], -ip
   11160:	strdeq	r1, [r1], -ip
   11164:	strdeq	r1, [r1], -ip
   11168:	strdeq	r1, [r1], -ip
   1116c:	strdeq	r1, [r1], -ip
   11170:	strdeq	r1, [r1], -ip
   11174:	strdeq	r1, [r1], -ip
   11178:	strdeq	r1, [r1], -ip
   1117c:	strdeq	r1, [r1], -ip
   11180:	andeq	r1, r1, r4, ror #3
   11184:	ldr	r0, [pc, #268]	; 11298 <_start@@Base+0x408>
   11188:	bl	10cec <printf@plt>
   1118c:	b	1126c <_start@@Base+0x3dc>
   11190:	ldr	r0, [pc, #260]	; 1129c <_start@@Base+0x40c>
   11194:	bl	10cec <printf@plt>
   11198:	b	1126c <_start@@Base+0x3dc>
   1119c:	ldr	r0, [pc, #252]	; 112a0 <_start@@Base+0x410>
   111a0:	bl	10cec <printf@plt>
   111a4:	b	1126c <_start@@Base+0x3dc>
   111a8:	ldr	r0, [pc, #244]	; 112a4 <_start@@Base+0x414>
   111ac:	bl	10cec <printf@plt>
   111b0:	b	1126c <_start@@Base+0x3dc>
   111b4:	ldr	r0, [pc, #236]	; 112a8 <_start@@Base+0x418>
   111b8:	bl	10cec <printf@plt>
   111bc:	b	1126c <_start@@Base+0x3dc>
   111c0:	ldr	r0, [pc, #228]	; 112ac <_start@@Base+0x41c>
   111c4:	bl	10cec <printf@plt>
   111c8:	b	1126c <_start@@Base+0x3dc>
   111cc:	ldr	r0, [pc, #220]	; 112b0 <_start@@Base+0x420>
   111d0:	bl	10cec <printf@plt>
   111d4:	b	1126c <_start@@Base+0x3dc>
   111d8:	ldr	r0, [pc, #212]	; 112b4 <_start@@Base+0x424>
   111dc:	bl	10cec <printf@plt>
   111e0:	b	1126c <_start@@Base+0x3dc>
   111e4:	ldr	r0, [pc, #204]	; 112b8 <_start@@Base+0x428>
   111e8:	bl	10cec <printf@plt>
   111ec:	b	1126c <_start@@Base+0x3dc>
   111f0:	ldr	r0, [pc, #196]	; 112bc <_start@@Base+0x42c>
   111f4:	bl	10cec <printf@plt>
   111f8:	b	1126c <_start@@Base+0x3dc>
   111fc:	bl	10d94 <__ctype_b_loc@plt>
   11200:	mov	r3, r0
   11204:	ldr	r2, [r3]
   11208:	ldr	r3, [fp, #-8]
   1120c:	ldr	r1, [fp, #-16]
   11210:	add	r3, r1, r3
   11214:	ldrb	r3, [r3]
   11218:	lsl	r3, r3, #1
   1121c:	add	r3, r2, r3
   11220:	ldrh	r3, [r3]
   11224:	and	r3, r3, #16384	; 0x4000
   11228:	cmp	r3, #0
   1122c:	bne	11250 <_start@@Base+0x3c0>
   11230:	ldr	r3, [fp, #-8]
   11234:	ldr	r2, [fp, #-16]
   11238:	add	r3, r2, r3
   1123c:	ldrb	r3, [r3]
   11240:	mov	r1, r3
   11244:	ldr	r0, [pc, #116]	; 112c0 <_start@@Base+0x430>
   11248:	bl	10cec <printf@plt>
   1124c:	b	11268 <_start@@Base+0x3d8>
   11250:	ldr	r3, [fp, #-8]
   11254:	ldr	r2, [fp, #-16]
   11258:	add	r3, r2, r3
   1125c:	ldrb	r3, [r3]
   11260:	mov	r0, r3
   11264:	bl	10de8 <putchar@plt>
   11268:	nop			; (mov r0, r0)
   1126c:	ldr	r3, [fp, #-8]
   11270:	add	r3, r3, #1
   11274:	str	r3, [fp, #-8]
   11278:	ldr	r2, [fp, #-8]
   1127c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11280:	cmp	r2, r3
   11284:	blt	1100c <_start@@Base+0x17c>
   11288:	b	11290 <_start@@Base+0x400>
   1128c:	nop			; (mov r0, r0)
   11290:	sub	sp, fp, #4
   11294:	pop	{fp, pc}
   11298:	andeq	r2, r1, ip, ror #2
   1129c:	andeq	r2, r1, r0, ror r1
   112a0:	andeq	r2, r1, r4, ror r1
   112a4:	andeq	r2, r1, r8, ror r1
   112a8:	andeq	r2, r1, ip, ror r1
   112ac:	andeq	r2, r1, r0, lsl #3
   112b0:	andeq	r2, r1, r4, lsl #3
   112b4:	andeq	r2, r1, r8, lsl #3
   112b8:	andeq	r2, r1, ip, lsl #3
   112bc:	muleq	r1, r0, r1
   112c0:	muleq	r1, r4, r1
   112c4:	push	{fp, lr}
   112c8:	add	fp, sp, #4
   112cc:	bl	10e54 <coda_get_libcoda_version@plt>
   112d0:	mov	r3, r0
   112d4:	mov	r1, r3
   112d8:	ldr	r0, [pc, #24]	; 112f8 <_start@@Base+0x468>
   112dc:	bl	10cec <printf@plt>
   112e0:	ldr	r0, [pc, #20]	; 112fc <_start@@Base+0x46c>
   112e4:	bl	10d64 <puts@plt>
   112e8:	mov	r0, #10
   112ec:	bl	10de8 <putchar@plt>
   112f0:	nop			; (mov r0, r0)
   112f4:	pop	{fp, pc}
   112f8:	muleq	r1, ip, r1
   112fc:	andeq	r2, r1, ip, lsr #3
   11300:	push	{fp, lr}
   11304:	add	fp, sp, #4
   11308:	ldr	r0, [pc, #304]	; 11440 <_start@@Base+0x5b0>
   1130c:	bl	10d64 <puts@plt>
   11310:	ldr	r0, [pc, #300]	; 11444 <_start@@Base+0x5b4>
   11314:	bl	10d64 <puts@plt>
   11318:	ldr	r0, [pc, #296]	; 11448 <_start@@Base+0x5b8>
   1131c:	bl	10d64 <puts@plt>
   11320:	ldr	r0, [pc, #292]	; 1144c <_start@@Base+0x5bc>
   11324:	bl	10d64 <puts@plt>
   11328:	ldr	r0, [pc, #288]	; 11450 <_start@@Base+0x5c0>
   1132c:	bl	10d64 <puts@plt>
   11330:	ldr	r0, [pc, #284]	; 11454 <_start@@Base+0x5c4>
   11334:	bl	10d64 <puts@plt>
   11338:	ldr	r0, [pc, #280]	; 11458 <_start@@Base+0x5c8>
   1133c:	bl	10d64 <puts@plt>
   11340:	mov	r0, #10
   11344:	bl	10de8 <putchar@plt>
   11348:	ldr	r0, [pc, #268]	; 1145c <_start@@Base+0x5cc>
   1134c:	bl	10d64 <puts@plt>
   11350:	ldr	r0, [pc, #264]	; 11460 <_start@@Base+0x5d0>
   11354:	bl	10d64 <puts@plt>
   11358:	ldr	r0, [pc, #260]	; 11464 <_start@@Base+0x5d4>
   1135c:	bl	10d64 <puts@plt>
   11360:	ldr	r0, [pc, #256]	; 11468 <_start@@Base+0x5d8>
   11364:	bl	10d64 <puts@plt>
   11368:	ldr	r0, [pc, #252]	; 1146c <_start@@Base+0x5dc>
   1136c:	bl	10d64 <puts@plt>
   11370:	ldr	r0, [pc, #248]	; 11470 <_start@@Base+0x5e0>
   11374:	bl	10d64 <puts@plt>
   11378:	ldr	r0, [pc, #244]	; 11474 <_start@@Base+0x5e4>
   1137c:	bl	10d64 <puts@plt>
   11380:	ldr	r0, [pc, #240]	; 11478 <_start@@Base+0x5e8>
   11384:	bl	10d64 <puts@plt>
   11388:	ldr	r0, [pc, #236]	; 1147c <_start@@Base+0x5ec>
   1138c:	bl	10d64 <puts@plt>
   11390:	ldr	r0, [pc, #232]	; 11480 <_start@@Base+0x5f0>
   11394:	bl	10d64 <puts@plt>
   11398:	ldr	r0, [pc, #228]	; 11484 <_start@@Base+0x5f4>
   1139c:	bl	10d64 <puts@plt>
   113a0:	ldr	r0, [pc, #224]	; 11488 <_start@@Base+0x5f8>
   113a4:	bl	10d64 <puts@plt>
   113a8:	mov	r0, #10
   113ac:	bl	10de8 <putchar@plt>
   113b0:	ldr	r0, [pc, #212]	; 1148c <_start@@Base+0x5fc>
   113b4:	bl	10d64 <puts@plt>
   113b8:	ldr	r0, [pc, #208]	; 11490 <_start@@Base+0x600>
   113bc:	bl	10d64 <puts@plt>
   113c0:	mov	r0, #10
   113c4:	bl	10de8 <putchar@plt>
   113c8:	ldr	r0, [pc, #196]	; 11494 <_start@@Base+0x604>
   113cc:	bl	10d64 <puts@plt>
   113d0:	ldr	r0, [pc, #192]	; 11498 <_start@@Base+0x608>
   113d4:	bl	10d64 <puts@plt>
   113d8:	mov	r0, #10
   113dc:	bl	10de8 <putchar@plt>
   113e0:	ldr	r0, [pc, #180]	; 1149c <_start@@Base+0x60c>
   113e4:	bl	10d64 <puts@plt>
   113e8:	ldr	r0, [pc, #176]	; 114a0 <_start@@Base+0x610>
   113ec:	bl	10d64 <puts@plt>
   113f0:	mov	r0, #10
   113f4:	bl	10de8 <putchar@plt>
   113f8:	ldr	r0, [pc, #164]	; 114a4 <_start@@Base+0x614>
   113fc:	bl	10d64 <puts@plt>
   11400:	ldr	r0, [pc, #160]	; 114a8 <_start@@Base+0x618>
   11404:	bl	10d64 <puts@plt>
   11408:	ldr	r0, [pc, #156]	; 114ac <_start@@Base+0x61c>
   1140c:	bl	10d64 <puts@plt>
   11410:	ldr	r0, [pc, #152]	; 114b0 <_start@@Base+0x620>
   11414:	bl	10d64 <puts@plt>
   11418:	ldr	r0, [pc, #148]	; 114b4 <_start@@Base+0x624>
   1141c:	bl	10d64 <puts@plt>
   11420:	ldr	r0, [pc, #144]	; 114b8 <_start@@Base+0x628>
   11424:	bl	10d64 <puts@plt>
   11428:	ldr	r0, [pc, #140]	; 114bc <_start@@Base+0x62c>
   1142c:	bl	10d64 <puts@plt>
   11430:	mov	r0, #10
   11434:	bl	10de8 <putchar@plt>
   11438:	nop			; (mov r0, r0)
   1143c:	pop	{fp, pc}
   11440:	ldrdeq	r2, [r1], -ip
   11444:	andeq	r2, r1, r4, ror #3
   11448:	andeq	r2, r1, r4, lsr r2
   1144c:	andeq	r2, r1, r4, lsl #5
   11450:	andeq	r2, r1, r8, lsr #5
   11454:	strdeq	r2, [r1], -r4
   11458:	andeq	r2, r1, r0, asr #6
   1145c:	andeq	r2, r1, r0, ror r3
   11460:	andeq	r2, r1, r4, lsl #7
   11464:	muleq	r1, ip, r3
   11468:	andeq	r2, r1, ip, ror #7
   1146c:	andeq	r2, r1, ip, lsr r4
   11470:	andeq	r2, r1, r4, ror #8
   11474:	andeq	r2, r1, r0, lsr #9
   11478:			; <UNDEFINED> instruction: 0x000124b8
   1147c:	andeq	r2, r1, r4, lsl #10
   11480:	andeq	r2, r1, r0, asr r5
   11484:	andeq	r2, r1, r0, ror r5
   11488:			; <UNDEFINED> instruction: 0x000125bc
   1148c:	andeq	r2, r1, ip, ror #11
   11490:	andeq	r2, r1, ip, lsr r6
   11494:	andeq	r2, r1, r4, asr r6
   11498:	andeq	r2, r1, ip, ror #12
   1149c:	andeq	r2, r1, ip, lsl #13
   114a0:	andeq	r2, r1, r8, lsr #13
   114a4:	ldrdeq	r2, [r1], -ip
   114a8:	andeq	r2, r1, r8, lsr #14
   114ac:	andeq	r2, r1, r4, ror r7
   114b0:	andeq	r2, r1, r4, lsr #15
   114b4:	strdeq	r2, [r1], -r0
   114b8:	andeq	r2, r1, ip, lsr r8
   114bc:	andeq	r2, r1, ip, ror r8
   114c0:	push	{fp, lr}
   114c4:	add	fp, sp, #4
   114c8:	sub	sp, sp, #64	; 0x40
   114cc:	str	r0, [fp, #-64]	; 0xffffffc0
   114d0:	ldr	r3, [pc, #560]	; 11708 <_start@@Base+0x878>
   114d4:	ldr	r3, [r3]
   114d8:	cmp	r3, #5
   114dc:	ldrls	pc, [pc, r3, lsl #2]
   114e0:	b	116f8 <_start@@Base+0x868>
   114e4:	strdeq	r1, [r1], -ip
   114e8:	andeq	r1, r1, r4, ror r5
   114ec:	andeq	r1, r1, r8, ror #11
   114f0:	andeq	r1, r1, ip, asr #12
   114f4:	andeq	r1, r1, r0, ror #13
   114f8:	andeq	r1, r1, r0, ror #13
   114fc:	ldr	r3, [pc, #520]	; 1170c <_start@@Base+0x87c>
   11500:	ldr	r3, [r3]
   11504:	sub	r2, fp, #8
   11508:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1150c:	mov	r0, r3
   11510:	bl	10d40 <coda_expression_eval_bool@plt>
   11514:	mov	r3, r0
   11518:	cmp	r3, #0
   1151c:	beq	11550 <_start@@Base+0x6c0>
   11520:	bl	10e60 <coda_get_errno@plt>
   11524:	mov	r3, r0
   11528:	ldr	r3, [r3]
   1152c:	mov	r0, r3
   11530:	bl	10e30 <coda_errno_to_string@plt>
   11534:	mov	r3, r0
   11538:	mov	r2, r3
   1153c:	ldr	r1, [pc, #460]	; 11710 <_start@@Base+0x880>
   11540:	mvn	r0, #400	; 0x190
   11544:	bl	10cf8 <coda_set_error@plt>
   11548:	mvn	r3, #0
   1154c:	b	116fc <_start@@Base+0x86c>
   11550:	ldr	r3, [fp, #-8]
   11554:	cmp	r3, #0
   11558:	beq	11564 <_start@@Base+0x6d4>
   1155c:	ldr	r3, [pc, #432]	; 11714 <_start@@Base+0x884>
   11560:	b	11568 <_start@@Base+0x6d8>
   11564:	ldr	r3, [pc, #428]	; 11718 <_start@@Base+0x888>
   11568:	mov	r0, r3
   1156c:	bl	10d64 <puts@plt>
   11570:	b	116f8 <_start@@Base+0x868>
   11574:	ldr	r3, [pc, #400]	; 1170c <_start@@Base+0x87c>
   11578:	ldr	r3, [r3]
   1157c:	sub	r2, fp, #20
   11580:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11584:	mov	r0, r3
   11588:	bl	10cd4 <coda_expression_eval_integer@plt>
   1158c:	mov	r3, r0
   11590:	cmp	r3, #0
   11594:	beq	115c8 <_start@@Base+0x738>
   11598:	bl	10e60 <coda_get_errno@plt>
   1159c:	mov	r3, r0
   115a0:	ldr	r3, [r3]
   115a4:	mov	r0, r3
   115a8:	bl	10e30 <coda_errno_to_string@plt>
   115ac:	mov	r3, r0
   115b0:	mov	r2, r3
   115b4:	ldr	r1, [pc, #352]	; 1171c <_start@@Base+0x88c>
   115b8:	mvn	r0, #400	; 0x190
   115bc:	bl	10cf8 <coda_set_error@plt>
   115c0:	mvn	r3, #0
   115c4:	b	116fc <_start@@Base+0x86c>
   115c8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   115cc:	sub	r3, fp, #44	; 0x2c
   115d0:	mov	r2, r3
   115d4:	bl	10e78 <coda_str64@plt>
   115d8:	sub	r3, fp, #44	; 0x2c
   115dc:	mov	r0, r3
   115e0:	bl	10d64 <puts@plt>
   115e4:	b	116f8 <_start@@Base+0x868>
   115e8:	ldr	r3, [pc, #284]	; 1170c <_start@@Base+0x87c>
   115ec:	ldr	r3, [r3]
   115f0:	sub	r2, fp, #52	; 0x34
   115f4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   115f8:	mov	r0, r3
   115fc:	bl	10e18 <coda_expression_eval_float@plt>
   11600:	mov	r3, r0
   11604:	cmp	r3, #0
   11608:	beq	1163c <_start@@Base+0x7ac>
   1160c:	bl	10e60 <coda_get_errno@plt>
   11610:	mov	r3, r0
   11614:	ldr	r3, [r3]
   11618:	mov	r0, r3
   1161c:	bl	10e30 <coda_errno_to_string@plt>
   11620:	mov	r3, r0
   11624:	mov	r2, r3
   11628:	ldr	r1, [pc, #240]	; 11720 <_start@@Base+0x890>
   1162c:	mvn	r0, #400	; 0x190
   11630:	bl	10cf8 <coda_set_error@plt>
   11634:	mvn	r3, #0
   11638:	b	116fc <_start@@Base+0x86c>
   1163c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11640:	ldr	r0, [pc, #220]	; 11724 <_start@@Base+0x894>
   11644:	bl	10cec <printf@plt>
   11648:	b	116f8 <_start@@Base+0x868>
   1164c:	mov	r3, #0
   11650:	str	r3, [fp, #-56]	; 0xffffffc8
   11654:	ldr	r3, [pc, #176]	; 1170c <_start@@Base+0x87c>
   11658:	ldr	r0, [r3]
   1165c:	sub	r3, fp, #60	; 0x3c
   11660:	sub	r2, fp, #56	; 0x38
   11664:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11668:	bl	10ddc <coda_expression_eval_string@plt>
   1166c:	mov	r3, r0
   11670:	cmp	r3, #0
   11674:	beq	116a8 <_start@@Base+0x818>
   11678:	bl	10e60 <coda_get_errno@plt>
   1167c:	mov	r3, r0
   11680:	ldr	r3, [r3]
   11684:	mov	r0, r3
   11688:	bl	10e30 <coda_errno_to_string@plt>
   1168c:	mov	r3, r0
   11690:	mov	r2, r3
   11694:	ldr	r1, [pc, #140]	; 11728 <_start@@Base+0x898>
   11698:	mvn	r0, #400	; 0x190
   1169c:	bl	10cf8 <coda_set_error@plt>
   116a0:	mvn	r3, #0
   116a4:	b	116fc <_start@@Base+0x86c>
   116a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   116b0:	mov	r1, r2
   116b4:	mov	r0, r3
   116b8:	bl	10fb8 <_start@@Base+0x128>
   116bc:	mov	r0, #10
   116c0:	bl	10de8 <putchar@plt>
   116c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116c8:	cmp	r3, #0
   116cc:	beq	116f4 <_start@@Base+0x864>
   116d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116d4:	mov	r0, r3
   116d8:	bl	10d10 <free@plt>
   116dc:	b	116f4 <_start@@Base+0x864>
   116e0:	ldr	r3, [pc, #68]	; 1172c <_start@@Base+0x89c>
   116e4:	mov	r2, #230	; 0xe6
   116e8:	ldr	r1, [pc, #64]	; 11730 <_start@@Base+0x8a0>
   116ec:	ldr	r0, [pc, #64]	; 11734 <_start@@Base+0x8a4>
   116f0:	bl	10e84 <__assert_fail@plt>
   116f4:	nop			; (mov r0, r0)
   116f8:	mov	r3, #0
   116fc:	mov	r0, r3
   11700:	sub	sp, fp, #4
   11704:	pop	{fp, pc}
   11708:	strheq	r3, [r2], -ip
   1170c:	strheq	r3, [r2], -r8
   11710:			; <UNDEFINED> instruction: 0x000128bc
   11714:	andeq	r2, r1, r4, ror #17
   11718:	andeq	r2, r1, ip, ror #17
   1171c:	strdeq	r2, [r1], -r4
   11720:	andeq	r2, r1, ip, lsl r9
   11724:	andeq	r2, r1, ip, asr #18
   11728:	andeq	r2, r1, r4, asr r9
   1172c:	andeq	r2, r1, ip, lsr ip
   11730:	andeq	r2, r1, ip, ror r9
   11734:	andeq	r2, r1, ip, asr #19
   11738:	push	{r4, fp, lr}
   1173c:	add	fp, sp, #8
   11740:	sub	sp, sp, #540	; 0x21c
   11744:	str	r0, [fp, #-544]	; 0xfffffde0
   11748:	mov	r3, #0
   1174c:	str	r3, [fp, #-16]
   11750:	sub	r3, fp, #16
   11754:	mov	r1, r3
   11758:	ldr	r0, [fp, #-544]	; 0xfffffde0
   1175c:	bl	10d04 <coda_open@plt>
   11760:	mov	r3, r0
   11764:	cmp	r3, #0
   11768:	beq	11774 <_start@@Base+0x8e4>
   1176c:	mov	r3, #1
   11770:	b	1188c <_start@@Base+0x9fc>
   11774:	ldr	r2, [fp, #-16]
   11778:	sub	r3, fp, #540	; 0x21c
   1177c:	mov	r1, r2
   11780:	mov	r0, r3
   11784:	bl	10d4c <coda_cursor_set_product@plt>
   11788:	mov	r3, r0
   1178c:	cmp	r3, #0
   11790:	beq	117a8 <_start@@Base+0x918>
   11794:	ldr	r3, [fp, #-16]
   11798:	mov	r0, r3
   1179c:	bl	10e00 <coda_close@plt>
   117a0:	mov	r3, #1
   117a4:	b	1188c <_start@@Base+0x9fc>
   117a8:	ldr	r3, [pc, #232]	; 11898 <_start@@Base+0xa08>
   117ac:	ldr	r3, [r3]
   117b0:	cmp	r3, #0
   117b4:	beq	11820 <_start@@Base+0x990>
   117b8:	ldr	r3, [pc, #216]	; 11898 <_start@@Base+0xa08>
   117bc:	ldr	r3, [r3]
   117c0:	sub	r2, fp, #540	; 0x21c
   117c4:	mov	r1, r2
   117c8:	mov	r0, r3
   117cc:	bl	10e24 <coda_expression_eval_node@plt>
   117d0:	mov	r3, r0
   117d4:	cmp	r3, #0
   117d8:	beq	11820 <_start@@Base+0x990>
   117dc:	ldr	r3, [pc, #184]	; 1189c <_start@@Base+0xa0c>
   117e0:	ldr	r4, [r3]
   117e4:	bl	10e60 <coda_get_errno@plt>
   117e8:	mov	r3, r0
   117ec:	ldr	r3, [r3]
   117f0:	mov	r0, r3
   117f4:	bl	10e30 <coda_errno_to_string@plt>
   117f8:	mov	r3, r0
   117fc:	mov	r2, r3
   11800:	ldr	r1, [pc, #152]	; 118a0 <_start@@Base+0xa10>
   11804:	mov	r0, r4
   11808:	bl	10db8 <fprintf@plt>
   1180c:	ldr	r3, [fp, #-16]
   11810:	mov	r0, r3
   11814:	bl	10e00 <coda_close@plt>
   11818:	mov	r3, #0
   1181c:	b	1188c <_start@@Base+0x9fc>
   11820:	sub	r3, fp, #540	; 0x21c
   11824:	mov	r0, r3
   11828:	bl	114c0 <_start@@Base+0x630>
   1182c:	mov	r3, r0
   11830:	cmp	r3, #0
   11834:	beq	11868 <_start@@Base+0x9d8>
   11838:	ldr	r3, [pc, #92]	; 1189c <_start@@Base+0xa0c>
   1183c:	ldr	r4, [r3]
   11840:	bl	10e60 <coda_get_errno@plt>
   11844:	mov	r3, r0
   11848:	ldr	r3, [r3]
   1184c:	mov	r0, r3
   11850:	bl	10e30 <coda_errno_to_string@plt>
   11854:	mov	r2, r0
   11858:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1185c:	ldr	r1, [pc, #64]	; 118a4 <_start@@Base+0xa14>
   11860:	mov	r0, r4
   11864:	bl	10db8 <fprintf@plt>
   11868:	ldr	r3, [fp, #-16]
   1186c:	mov	r0, r3
   11870:	bl	10e00 <coda_close@plt>
   11874:	mov	r3, r0
   11878:	cmp	r3, #0
   1187c:	beq	11888 <_start@@Base+0x9f8>
   11880:	mov	r3, #1
   11884:	b	1188c <_start@@Base+0x9fc>
   11888:	mov	r3, #0
   1188c:	mov	r0, r3
   11890:	sub	sp, fp, #8
   11894:	pop	{r4, fp, pc}
   11898:	andeq	r3, r2, r0, asr #1
   1189c:	strheq	r3, [r2], -r0
   118a0:	ldrdeq	r2, [r1], -r0
   118a4:	andeq	r2, r1, r0, lsl #20

000118a8 <callback@@Base>:
   118a8:	push	{fp, lr}
   118ac:	add	fp, sp, #4
   118b0:	sub	sp, sp, #16
   118b4:	str	r0, [fp, #-8]
   118b8:	str	r1, [fp, #-12]
   118bc:	str	r2, [fp, #-16]
   118c0:	str	r3, [fp, #-20]	; 0xffffffec
   118c4:	ldr	r3, [fp, #-12]
   118c8:	cmp	r3, #0
   118cc:	bne	118ec <callback@@Base+0x44>
   118d0:	ldr	r3, [pc, #140]	; 11964 <callback@@Base+0xbc>
   118d4:	ldr	r0, [r3]
   118d8:	ldr	r3, [fp, #-8]
   118dc:	ldr	r2, [fp, #-16]
   118e0:	ldr	r1, [pc, #128]	; 11968 <callback@@Base+0xc0>
   118e4:	bl	10db8 <fprintf@plt>
   118e8:	b	11938 <callback@@Base+0x90>
   118ec:	ldr	r3, [fp, #-12]
   118f0:	cmp	r3, #2
   118f4:	bne	11914 <callback@@Base+0x6c>
   118f8:	ldr	r3, [pc, #100]	; 11964 <callback@@Base+0xbc>
   118fc:	ldr	r3, [r3]
   11900:	ldr	r2, [fp, #-8]
   11904:	ldr	r1, [pc, #96]	; 1196c <callback@@Base+0xc4>
   11908:	mov	r0, r3
   1190c:	bl	10db8 <fprintf@plt>
   11910:	b	11938 <callback@@Base+0x90>
   11914:	ldr	r3, [fp, #-12]
   11918:	cmp	r3, #1
   1191c:	bne	11938 <callback@@Base+0x90>
   11920:	ldr	r3, [pc, #60]	; 11964 <callback@@Base+0xbc>
   11924:	ldr	r0, [r3]
   11928:	ldr	r3, [fp, #-16]
   1192c:	ldr	r2, [fp, #-8]
   11930:	ldr	r1, [pc, #56]	; 11970 <callback@@Base+0xc8>
   11934:	bl	10db8 <fprintf@plt>
   11938:	ldr	r3, [fp, #-12]
   1193c:	cmp	r3, #4
   11940:	bne	11954 <callback@@Base+0xac>
   11944:	ldr	r0, [fp, #-8]
   11948:	bl	11738 <_start@@Base+0x8a8>
   1194c:	mov	r3, r0
   11950:	b	11958 <callback@@Base+0xb0>
   11954:	mov	r3, #0
   11958:	mov	r0, r3
   1195c:	sub	sp, fp, #4
   11960:	pop	{fp, pc}
   11964:	strheq	r3, [r2], -r0
   11968:	andeq	r2, r1, r0, lsl #20
   1196c:	andeq	r2, r1, r4, lsl sl
   11970:	andeq	r2, r1, ip, lsr sl

00011974 <main@@Base>:
   11974:	push	{r4, fp, lr}
   11978:	add	fp, sp, #8
   1197c:	sub	sp, sp, #36	; 0x24
   11980:	str	r0, [fp, #-32]	; 0xffffffe0
   11984:	str	r1, [fp, #-36]	; 0xffffffdc
   11988:	mov	r3, #1
   1198c:	str	r3, [fp, #-16]
   11990:	mov	r3, #0
   11994:	str	r3, [fp, #-20]	; 0xffffffec
   11998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1199c:	cmp	r3, #1
   119a0:	beq	119ec <main@@Base+0x78>
   119a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119a8:	add	r3, r3, #4
   119ac:	ldr	r3, [r3]
   119b0:	ldr	r1, [pc, #1768]	; 120a0 <main@@Base+0x72c>
   119b4:	mov	r0, r3
   119b8:	bl	10ce0 <strcmp@plt>
   119bc:	mov	r3, r0
   119c0:	cmp	r3, #0
   119c4:	beq	119ec <main@@Base+0x78>
   119c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119cc:	add	r3, r3, #4
   119d0:	ldr	r3, [r3]
   119d4:	ldr	r1, [pc, #1736]	; 120a4 <main@@Base+0x730>
   119d8:	mov	r0, r3
   119dc:	bl	10ce0 <strcmp@plt>
   119e0:	mov	r3, r0
   119e4:	cmp	r3, #0
   119e8:	bne	119f8 <main@@Base+0x84>
   119ec:	bl	11300 <_start@@Base+0x470>
   119f0:	mov	r0, #0
   119f4:	bl	10da0 <exit@plt>
   119f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119fc:	add	r3, r3, #4
   11a00:	ldr	r3, [r3]
   11a04:	ldr	r1, [pc, #1692]	; 120a8 <main@@Base+0x734>
   11a08:	mov	r0, r3
   11a0c:	bl	10ce0 <strcmp@plt>
   11a10:	mov	r3, r0
   11a14:	cmp	r3, #0
   11a18:	beq	11a40 <main@@Base+0xcc>
   11a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a20:	add	r3, r3, #4
   11a24:	ldr	r3, [r3]
   11a28:	ldr	r1, [pc, #1660]	; 120ac <main@@Base+0x738>
   11a2c:	mov	r0, r3
   11a30:	bl	10ce0 <strcmp@plt>
   11a34:	mov	r3, r0
   11a38:	cmp	r3, #0
   11a3c:	bne	11a4c <main@@Base+0xd8>
   11a40:	bl	112c4 <_start@@Base+0x434>
   11a44:	mov	r0, #0
   11a48:	bl	10da0 <exit@plt>
   11a4c:	mov	r3, #1
   11a50:	str	r3, [fp, #-24]	; 0xffffffe8
   11a54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a58:	add	r2, r3, #1
   11a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a60:	cmp	r2, r3
   11a64:	bge	11ac4 <main@@Base+0x150>
   11a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a6c:	lsl	r3, r3, #2
   11a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11a74:	add	r3, r2, r3
   11a78:	ldr	r3, [r3]
   11a7c:	ldr	r1, [pc, #1580]	; 120b0 <main@@Base+0x73c>
   11a80:	mov	r0, r3
   11a84:	bl	10ce0 <strcmp@plt>
   11a88:	mov	r3, r0
   11a8c:	cmp	r3, #0
   11a90:	bne	11ac4 <main@@Base+0x150>
   11a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a98:	add	r3, r3, #1
   11a9c:	lsl	r3, r3, #2
   11aa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11aa4:	add	r3, r2, r3
   11aa8:	ldr	r3, [r3]
   11aac:	mov	r0, r3
   11ab0:	bl	10d28 <coda_set_definition_path@plt>
   11ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ab8:	add	r3, r3, #2
   11abc:	str	r3, [fp, #-24]	; 0xffffffe8
   11ac0:	b	11b28 <main@@Base+0x1b4>
   11ac4:	ldr	r3, [pc, #1512]	; 120b4 <main@@Base+0x740>
   11ac8:	str	r3, [fp, #-28]	; 0xffffffe4
   11acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ad0:	ldr	r3, [r3]
   11ad4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ad8:	mov	r1, #0
   11adc:	mov	r0, r3
   11ae0:	bl	10d1c <coda_set_definition_path_conditional@plt>
   11ae4:	mov	r3, r0
   11ae8:	cmp	r3, #0
   11aec:	beq	11d20 <main@@Base+0x3ac>
   11af0:	ldr	r3, [pc, #1472]	; 120b8 <main@@Base+0x744>
   11af4:	ldr	r4, [r3]
   11af8:	bl	10e60 <coda_get_errno@plt>
   11afc:	mov	r3, r0
   11b00:	ldr	r3, [r3]
   11b04:	mov	r0, r3
   11b08:	bl	10e30 <coda_errno_to_string@plt>
   11b0c:	mov	r3, r0
   11b10:	mov	r2, r3
   11b14:	ldr	r1, [pc, #1440]	; 120bc <main@@Base+0x748>
   11b18:	mov	r0, r4
   11b1c:	bl	10db8 <fprintf@plt>
   11b20:	mov	r0, #1
   11b24:	bl	10da0 <exit@plt>
   11b28:	b	11d20 <main@@Base+0x3ac>
   11b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b30:	lsl	r3, r3, #2
   11b34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b38:	add	r3, r2, r3
   11b3c:	ldr	r3, [r3]
   11b40:	ldr	r1, [pc, #1400]	; 120c0 <main@@Base+0x74c>
   11b44:	mov	r0, r3
   11b48:	bl	10ce0 <strcmp@plt>
   11b4c:	mov	r3, r0
   11b50:	cmp	r3, #0
   11b54:	beq	11b84 <main@@Base+0x210>
   11b58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b5c:	lsl	r3, r3, #2
   11b60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b64:	add	r3, r2, r3
   11b68:	ldr	r3, [r3]
   11b6c:	ldr	r1, [pc, #1360]	; 120c4 <main@@Base+0x750>
   11b70:	mov	r0, r3
   11b74:	bl	10ce0 <strcmp@plt>
   11b78:	mov	r3, r0
   11b7c:	cmp	r3, #0
   11b80:	bne	11b90 <main@@Base+0x21c>
   11b84:	mov	r3, #1
   11b88:	str	r3, [fp, #-20]	; 0xffffffec
   11b8c:	b	11d14 <main@@Base+0x3a0>
   11b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b94:	lsl	r3, r3, #2
   11b98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b9c:	add	r3, r2, r3
   11ba0:	ldr	r3, [r3]
   11ba4:	ldr	r1, [pc, #1308]	; 120c8 <main@@Base+0x754>
   11ba8:	mov	r0, r3
   11bac:	bl	10ce0 <strcmp@plt>
   11bb0:	mov	r3, r0
   11bb4:	cmp	r3, #0
   11bb8:	beq	11be8 <main@@Base+0x274>
   11bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bc0:	lsl	r3, r3, #2
   11bc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11bc8:	add	r3, r2, r3
   11bcc:	ldr	r3, [r3]
   11bd0:	ldr	r1, [pc, #1268]	; 120cc <main@@Base+0x758>
   11bd4:	mov	r0, r3
   11bd8:	bl	10ce0 <strcmp@plt>
   11bdc:	mov	r3, r0
   11be0:	cmp	r3, #0
   11be4:	bne	11bf4 <main@@Base+0x280>
   11be8:	mov	r3, #0
   11bec:	str	r3, [fp, #-16]
   11bf0:	b	11d14 <main@@Base+0x3a0>
   11bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bf8:	lsl	r3, r3, #2
   11bfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c00:	add	r3, r2, r3
   11c04:	ldr	r3, [r3]
   11c08:	ldr	r1, [pc, #1216]	; 120d0 <main@@Base+0x75c>
   11c0c:	mov	r0, r3
   11c10:	bl	10ce0 <strcmp@plt>
   11c14:	mov	r3, r0
   11c18:	cmp	r3, #0
   11c1c:	bne	11cd0 <main@@Base+0x35c>
   11c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c24:	add	r2, r3, #1
   11c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c2c:	cmp	r2, r3
   11c30:	bge	11cd0 <main@@Base+0x35c>
   11c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c38:	add	r3, r3, #1
   11c3c:	lsl	r3, r3, #2
   11c40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c44:	add	r3, r2, r3
   11c48:	ldr	r3, [r3]
   11c4c:	ldrb	r3, [r3]
   11c50:	cmp	r3, #45	; 0x2d
   11c54:	beq	11cd0 <main@@Base+0x35c>
   11c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c5c:	add	r3, r3, #1
   11c60:	lsl	r3, r3, #2
   11c64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c68:	add	r3, r2, r3
   11c6c:	ldr	r3, [r3]
   11c70:	ldr	r1, [pc, #1116]	; 120d4 <main@@Base+0x760>
   11c74:	mov	r0, r3
   11c78:	bl	10e48 <coda_expression_from_string@plt>
   11c7c:	mov	r3, r0
   11c80:	cmp	r3, #0
   11c84:	beq	11cc0 <main@@Base+0x34c>
   11c88:	ldr	r3, [pc, #1064]	; 120b8 <main@@Base+0x744>
   11c8c:	ldr	r4, [r3]
   11c90:	bl	10e60 <coda_get_errno@plt>
   11c94:	mov	r3, r0
   11c98:	ldr	r3, [r3]
   11c9c:	mov	r0, r3
   11ca0:	bl	10e30 <coda_errno_to_string@plt>
   11ca4:	mov	r3, r0
   11ca8:	mov	r2, r3
   11cac:	ldr	r1, [pc, #1060]	; 120d8 <main@@Base+0x764>
   11cb0:	mov	r0, r4
   11cb4:	bl	10db8 <fprintf@plt>
   11cb8:	mov	r0, #1
   11cbc:	bl	10da0 <exit@plt>
   11cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cc4:	add	r3, r3, #1
   11cc8:	str	r3, [fp, #-24]	; 0xffffffe8
   11ccc:	b	11d14 <main@@Base+0x3a0>
   11cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cd4:	lsl	r3, r3, #2
   11cd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11cdc:	add	r3, r2, r3
   11ce0:	ldr	r3, [r3]
   11ce4:	ldrb	r3, [r3]
   11ce8:	cmp	r3, #45	; 0x2d
   11cec:	bne	11d34 <main@@Base+0x3c0>
   11cf0:	ldr	r3, [pc, #960]	; 120b8 <main@@Base+0x744>
   11cf4:	ldr	r3, [r3]
   11cf8:	mov	r2, #25
   11cfc:	mov	r1, #1
   11d00:	ldr	r0, [pc, #980]	; 120dc <main@@Base+0x768>
   11d04:	bl	10d34 <fwrite@plt>
   11d08:	bl	11300 <_start@@Base+0x470>
   11d0c:	mov	r0, #1
   11d10:	bl	10da0 <exit@plt>
   11d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d18:	add	r3, r3, #1
   11d1c:	str	r3, [fp, #-24]	; 0xffffffe8
   11d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d28:	cmp	r2, r3
   11d2c:	blt	11b2c <main@@Base+0x1b8>
   11d30:	b	11d38 <main@@Base+0x3c4>
   11d34:	nop			; (mov r0, r0)
   11d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d40:	cmp	r2, r3
   11d44:	blt	11d6c <main@@Base+0x3f8>
   11d48:	ldr	r3, [pc, #872]	; 120b8 <main@@Base+0x744>
   11d4c:	ldr	r3, [r3]
   11d50:	mov	r2, #25
   11d54:	mov	r1, #1
   11d58:	ldr	r0, [pc, #892]	; 120dc <main@@Base+0x768>
   11d5c:	bl	10d34 <fwrite@plt>
   11d60:	bl	11300 <_start@@Base+0x470>
   11d64:	mov	r0, #1
   11d68:	bl	10da0 <exit@plt>
   11d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d70:	lsl	r3, r3, #2
   11d74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11d78:	add	r3, r2, r3
   11d7c:	ldr	r3, [r3]
   11d80:	ldr	r1, [pc, #856]	; 120e0 <main@@Base+0x76c>
   11d84:	mov	r0, r3
   11d88:	bl	10e48 <coda_expression_from_string@plt>
   11d8c:	mov	r3, r0
   11d90:	cmp	r3, #0
   11d94:	beq	11dd0 <main@@Base+0x45c>
   11d98:	ldr	r3, [pc, #792]	; 120b8 <main@@Base+0x744>
   11d9c:	ldr	r4, [r3]
   11da0:	bl	10e60 <coda_get_errno@plt>
   11da4:	mov	r3, r0
   11da8:	ldr	r3, [r3]
   11dac:	mov	r0, r3
   11db0:	bl	10e30 <coda_errno_to_string@plt>
   11db4:	mov	r3, r0
   11db8:	mov	r2, r3
   11dbc:	ldr	r1, [pc, #800]	; 120e4 <main@@Base+0x770>
   11dc0:	mov	r0, r4
   11dc4:	bl	10db8 <fprintf@plt>
   11dc8:	mov	r0, #1
   11dcc:	bl	10da0 <exit@plt>
   11dd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dd4:	add	r3, r3, #1
   11dd8:	str	r3, [fp, #-24]	; 0xffffffe8
   11ddc:	ldr	r3, [pc, #764]	; 120e0 <main@@Base+0x76c>
   11de0:	ldr	r3, [r3]
   11de4:	ldr	r1, [pc, #764]	; 120e8 <main@@Base+0x774>
   11de8:	mov	r0, r3
   11dec:	bl	10df4 <coda_expression_get_type@plt>
   11df0:	mov	r3, r0
   11df4:	cmp	r3, #0
   11df8:	beq	11e34 <main@@Base+0x4c0>
   11dfc:	ldr	r3, [pc, #692]	; 120b8 <main@@Base+0x744>
   11e00:	ldr	r4, [r3]
   11e04:	bl	10e60 <coda_get_errno@plt>
   11e08:	mov	r3, r0
   11e0c:	ldr	r3, [r3]
   11e10:	mov	r0, r3
   11e14:	bl	10e30 <coda_errno_to_string@plt>
   11e18:	mov	r3, r0
   11e1c:	mov	r2, r3
   11e20:	ldr	r1, [pc, #660]	; 120bc <main@@Base+0x748>
   11e24:	mov	r0, r4
   11e28:	bl	10db8 <fprintf@plt>
   11e2c:	mov	r0, #1
   11e30:	bl	10da0 <exit@plt>
   11e34:	ldr	r3, [pc, #684]	; 120e8 <main@@Base+0x774>
   11e38:	ldr	r3, [r3]
   11e3c:	cmp	r3, #4
   11e40:	beq	11e54 <main@@Base+0x4e0>
   11e44:	ldr	r3, [pc, #668]	; 120e8 <main@@Base+0x774>
   11e48:	ldr	r3, [r3]
   11e4c:	cmp	r3, #5
   11e50:	bne	11e88 <main@@Base+0x514>
   11e54:	ldr	r3, [pc, #604]	; 120b8 <main@@Base+0x744>
   11e58:	ldr	r4, [r3]
   11e5c:	ldr	r3, [pc, #644]	; 120e8 <main@@Base+0x774>
   11e60:	ldr	r3, [r3]
   11e64:	mov	r0, r3
   11e68:	bl	10e3c <coda_expression_get_type_name@plt>
   11e6c:	mov	r3, r0
   11e70:	mov	r2, r3
   11e74:	ldr	r1, [pc, #624]	; 120ec <main@@Base+0x778>
   11e78:	mov	r0, r4
   11e7c:	bl	10db8 <fprintf@plt>
   11e80:	mov	r0, #1
   11e84:	bl	10da0 <exit@plt>
   11e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e8c:	cmp	r3, #0
   11e90:	beq	11ecc <main@@Base+0x558>
   11e94:	ldr	r3, [pc, #580]	; 120e0 <main@@Base+0x76c>
   11e98:	ldr	r3, [r3]
   11e9c:	mov	r0, r3
   11ea0:	bl	10d7c <coda_expression_delete@plt>
   11ea4:	ldr	r3, [pc, #552]	; 120d4 <main@@Base+0x760>
   11ea8:	ldr	r3, [r3]
   11eac:	cmp	r3, #0
   11eb0:	beq	11ec4 <main@@Base+0x550>
   11eb4:	ldr	r3, [pc, #536]	; 120d4 <main@@Base+0x760>
   11eb8:	ldr	r3, [r3]
   11ebc:	mov	r0, r3
   11ec0:	bl	10d7c <coda_expression_delete@plt>
   11ec4:	mov	r3, #0
   11ec8:	b	12094 <main@@Base+0x720>
   11ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ed4:	cmp	r2, r3
   11ed8:	bge	11fa8 <main@@Base+0x634>
   11edc:	bl	10dc4 <coda_init@plt>
   11ee0:	mov	r3, r0
   11ee4:	cmp	r3, #0
   11ee8:	beq	11f24 <main@@Base+0x5b0>
   11eec:	ldr	r3, [pc, #452]	; 120b8 <main@@Base+0x744>
   11ef0:	ldr	r4, [r3]
   11ef4:	bl	10e60 <coda_get_errno@plt>
   11ef8:	mov	r3, r0
   11efc:	ldr	r3, [r3]
   11f00:	mov	r0, r3
   11f04:	bl	10e30 <coda_errno_to_string@plt>
   11f08:	mov	r3, r0
   11f0c:	mov	r2, r3
   11f10:	ldr	r1, [pc, #420]	; 120bc <main@@Base+0x748>
   11f14:	mov	r0, r4
   11f18:	bl	10db8 <fprintf@plt>
   11f1c:	mov	r0, #1
   11f20:	bl	10da0 <exit@plt>
   11f24:	ldr	r0, [fp, #-16]
   11f28:	bl	10dd0 <coda_set_option_perform_conversions@plt>
   11f2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f34:	sub	r1, r2, r3
   11f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f3c:	lsl	r3, r3, #2
   11f40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11f44:	add	r2, r2, r3
   11f48:	mov	r3, #0
   11f4c:	str	r3, [sp]
   11f50:	ldr	r3, [pc, #408]	; 120f0 <main@@Base+0x77c>
   11f54:	mov	r0, #0
   11f58:	bl	10cc8 <coda_match_filefilter@plt>
   11f5c:	mov	r3, r0
   11f60:	cmp	r3, #0
   11f64:	beq	11fa0 <main@@Base+0x62c>
   11f68:	ldr	r3, [pc, #328]	; 120b8 <main@@Base+0x744>
   11f6c:	ldr	r4, [r3]
   11f70:	bl	10e60 <coda_get_errno@plt>
   11f74:	mov	r3, r0
   11f78:	ldr	r3, [r3]
   11f7c:	mov	r0, r3
   11f80:	bl	10e30 <coda_errno_to_string@plt>
   11f84:	mov	r3, r0
   11f88:	mov	r2, r3
   11f8c:	ldr	r1, [pc, #296]	; 120bc <main@@Base+0x748>
   11f90:	mov	r0, r4
   11f94:	bl	10db8 <fprintf@plt>
   11f98:	mov	r0, #1
   11f9c:	bl	10da0 <exit@plt>
   11fa0:	bl	10d58 <coda_done@plt>
   11fa4:	b	12060 <main@@Base+0x6ec>
   11fa8:	ldr	r3, [pc, #292]	; 120d4 <main@@Base+0x760>
   11fac:	ldr	r3, [r3]
   11fb0:	cmp	r3, #0
   11fb4:	beq	11fd8 <main@@Base+0x664>
   11fb8:	ldr	r3, [pc, #248]	; 120b8 <main@@Base+0x744>
   11fbc:	ldr	r3, [r3]
   11fc0:	mov	r2, #96	; 0x60
   11fc4:	mov	r1, #1
   11fc8:	ldr	r0, [pc, #292]	; 120f4 <main@@Base+0x780>
   11fcc:	bl	10d34 <fwrite@plt>
   11fd0:	mov	r0, #1
   11fd4:	bl	10da0 <exit@plt>
   11fd8:	ldr	r3, [pc, #256]	; 120e0 <main@@Base+0x76c>
   11fdc:	ldr	r3, [r3]
   11fe0:	mov	r0, r3
   11fe4:	bl	10e0c <coda_expression_is_constant@plt>
   11fe8:	mov	r3, r0
   11fec:	cmp	r3, #0
   11ff0:	bne	12014 <main@@Base+0x6a0>
   11ff4:	ldr	r3, [pc, #188]	; 120b8 <main@@Base+0x744>
   11ff8:	ldr	r3, [r3]
   11ffc:	mov	r2, #111	; 0x6f
   12000:	mov	r1, #1
   12004:	ldr	r0, [pc, #236]	; 120f8 <main@@Base+0x784>
   12008:	bl	10d34 <fwrite@plt>
   1200c:	mov	r0, #1
   12010:	bl	10da0 <exit@plt>
   12014:	mov	r0, #0
   12018:	bl	114c0 <_start@@Base+0x630>
   1201c:	mov	r3, r0
   12020:	cmp	r3, #0
   12024:	beq	12060 <main@@Base+0x6ec>
   12028:	ldr	r3, [pc, #136]	; 120b8 <main@@Base+0x744>
   1202c:	ldr	r4, [r3]
   12030:	bl	10e60 <coda_get_errno@plt>
   12034:	mov	r3, r0
   12038:	ldr	r3, [r3]
   1203c:	mov	r0, r3
   12040:	bl	10e30 <coda_errno_to_string@plt>
   12044:	mov	r3, r0
   12048:	mov	r2, r3
   1204c:	ldr	r1, [pc, #104]	; 120bc <main@@Base+0x748>
   12050:	mov	r0, r4
   12054:	bl	10db8 <fprintf@plt>
   12058:	mov	r0, #1
   1205c:	bl	10da0 <exit@plt>
   12060:	ldr	r3, [pc, #120]	; 120e0 <main@@Base+0x76c>
   12064:	ldr	r3, [r3]
   12068:	mov	r0, r3
   1206c:	bl	10d7c <coda_expression_delete@plt>
   12070:	ldr	r3, [pc, #92]	; 120d4 <main@@Base+0x760>
   12074:	ldr	r3, [r3]
   12078:	cmp	r3, #0
   1207c:	beq	12090 <main@@Base+0x71c>
   12080:	ldr	r3, [pc, #76]	; 120d4 <main@@Base+0x760>
   12084:	ldr	r3, [r3]
   12088:	mov	r0, r3
   1208c:	bl	10d7c <coda_expression_delete@plt>
   12090:	mov	r3, #0
   12094:	mov	r0, r3
   12098:	sub	sp, fp, #8
   1209c:	pop	{r4, fp, pc}
   120a0:	andeq	r2, r1, r0, ror #20
   120a4:	andeq	r2, r1, r4, ror #20
   120a8:	andeq	r2, r1, ip, ror #20
   120ac:	andeq	r2, r1, r0, ror sl
   120b0:	andeq	r2, r1, ip, ror sl
   120b4:	andeq	r2, r1, r0, lsl #21
   120b8:	strheq	r3, [r2], -r0
   120bc:	muleq	r1, ip, sl
   120c0:	andeq	r2, r1, r8, lsr #21
   120c4:	andeq	r2, r1, ip, lsr #21
   120c8:			; <UNDEFINED> instruction: 0x00012ab4
   120cc:			; <UNDEFINED> instruction: 0x00012ab8
   120d0:	ldrdeq	r2, [r1], -r0
   120d4:	andeq	r3, r2, r0, asr #1
   120d8:	ldrdeq	r2, [r1], -r4
   120dc:	strdeq	r2, [r1], -ip
   120e0:	strheq	r3, [r2], -r8
   120e4:	andeq	r2, r1, r8, lsl fp
   120e8:	strheq	r3, [r2], -ip
   120ec:	andeq	r2, r1, r8, lsr fp
   120f0:	andeq	r1, r1, r8, lsr #17
   120f4:	andeq	r2, r1, r8, ror #22
   120f8:	andeq	r2, r1, ip, asr #23

000120fc <__libc_csu_init@@Base>:
   120fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12100:	mov	r7, r0
   12104:	ldr	r6, [pc, #72]	; 12154 <__libc_csu_init@@Base+0x58>
   12108:	ldr	r5, [pc, #72]	; 12158 <__libc_csu_init@@Base+0x5c>
   1210c:	add	r6, pc, r6
   12110:	add	r5, pc, r5
   12114:	sub	r6, r6, r5
   12118:	mov	r8, r1
   1211c:	mov	r9, r2
   12120:	bl	10ca8 <coda_match_filefilter@plt-0x20>
   12124:	asrs	r6, r6, #2
   12128:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1212c:	mov	r4, #0
   12130:	add	r4, r4, #1
   12134:	ldr	r3, [r5], #4
   12138:	mov	r2, r9
   1213c:	mov	r1, r8
   12140:	mov	r0, r7
   12144:	blx	r3
   12148:	cmp	r6, r4
   1214c:	bne	12130 <__libc_csu_init@@Base+0x34>
   12150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12154:	andeq	r0, r1, r4, ror #27
   12158:	ldrdeq	r0, [r1], -ip

0001215c <__libc_csu_fini@@Base>:
   1215c:	bx	lr

Disassembly of section .fini:

00012160 <.fini>:
   12160:	push	{r3, lr}
   12164:	pop	{r3, pc}
