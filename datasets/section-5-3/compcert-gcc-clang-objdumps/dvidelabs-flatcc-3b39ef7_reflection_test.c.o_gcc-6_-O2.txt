
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/CMakeFiles/reflection_test.dir/reflection_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <reflection_Object_vec_at.part.1>:
   0:	push	{r4, lr}
   4:	mov	r2, #215	; 0xd7
   8:	ldr	r3, [pc, #8]	; 18 <reflection_Object_vec_at.part.1+0x18>
   c:	ldr	r1, [pc, #8]	; 1c <reflection_Object_vec_at.part.1+0x1c>
  10:	ldr	r0, [pc, #8]	; 20 <reflection_Object_vec_at.part.1+0x20>
  14:	bl	0 <__assert_fail>
	...
  20:	.word	0x00000068

00000024 <reflection_Field_vec_at.part.5>:
  24:	push	{r4, lr}
  28:	mov	r2, #192	; 0xc0
  2c:	ldr	r3, [pc, #8]	; 3c <reflection_Field_vec_at.part.5+0x18>
  30:	ldr	r1, [pc, #8]	; 40 <reflection_Field_vec_at.part.5+0x1c>
  34:	ldr	r0, [pc, #8]	; 44 <reflection_Field_vec_at.part.5+0x20>
  38:	bl	0 <__assert_fail>
  3c:	.word	0x00000070
  40:	.word	0x00000000
  44:	.word	0x00000068

00000048 <test_schema>:
  48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4c:	sub	sp, sp, #20
  50:	ldr	r1, [pc, #2620]	; a94 <test_schema+0xa4c>
  54:	bl	0 <fopen>
  58:	subs	r5, r0, #0
  5c:	beq	110 <test_schema+0xc8>
  60:	mov	r2, #2
  64:	mov	r1, #0
  68:	bl	0 <fseek>
  6c:	mov	r0, r5
  70:	bl	0 <ftell>
  74:	ldr	r3, [pc, #2588]	; a98 <test_schema+0xa50>
  78:	cmp	r0, r3
  7c:	mov	r7, r0
  80:	bhi	108 <test_schema+0xc0>
  84:	mov	r0, r5
  88:	bl	0 <rewind>
  8c:	cmp	r7, #0
  90:	movne	r0, r7
  94:	moveq	r0, #1
  98:	bl	0 <malloc>
  9c:	subs	r8, r0, #0
  a0:	beq	108 <test_schema+0xc0>
  a4:	mov	r4, #0
  a8:	mov	r9, #1
  ac:	b	b4 <test_schema+0x6c>
  b0:	add	r4, r4, r0
  b4:	mov	r3, r5
  b8:	sub	r2, r7, r4
  bc:	mov	r1, r9
  c0:	add	r0, r8, r4
  c4:	bl	0 <fread>
  c8:	cmp	r0, #0
  cc:	bne	b0 <test_schema+0x68>
  d0:	cmp	r7, r4
  d4:	mov	r6, r0
  d8:	mov	r0, r5
  dc:	bne	128 <test_schema+0xe0>
  e0:	bl	0 <fclose>
  e4:	ldr	r3, [pc, #2480]	; a9c <test_schema+0xa54>
  e8:	ldr	r2, [r8, #4]
  ec:	cmp	r2, r3
  f0:	beq	138 <test_schema+0xf0>
  f4:	ldr	r3, [pc, #2468]	; aa0 <test_schema+0xa58>
  f8:	mov	r2, #237	; 0xed
  fc:	ldr	r1, [pc, #2464]	; aa4 <test_schema+0xa5c>
 100:	ldr	r0, [pc, #2464]	; aa8 <test_schema+0xa60>
 104:	bl	0 <__assert_fail>
 108:	mov	r0, r5
 10c:	bl	0 <fclose>
 110:	ldr	r0, [pc, #2452]	; aac <test_schema+0xa64>
 114:	bl	0 <puts>
 118:	mvn	r6, #0
 11c:	mov	r0, r6
 120:	add	sp, sp, #20
 124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 128:	bl	0 <fclose>
 12c:	mov	r0, r8
 130:	bl	0 <free>
 134:	b	110 <test_schema+0xc8>
 138:	ldr	r2, [r8]
 13c:	adds	r3, r8, r2
 140:	beq	f4 <test_schema+0xac>
 144:	ldr	r2, [r8, r2]
 148:	sub	r2, r3, r2
 14c:	ldrh	r1, [r2]
 150:	cmp	r1, #5
 154:	bhi	16c <test_schema+0x124>
 158:	ldr	r3, [pc, #2368]	; aa0 <test_schema+0xa58>
 15c:	mov	r2, #237	; 0xed
 160:	ldr	r1, [pc, #2364]	; aa4 <test_schema+0xa5c>
 164:	ldr	r0, [pc, #2372]	; ab0 <test_schema+0xa68>
 168:	bl	0 <__assert_fail>
 16c:	ldrh	r1, [r2, #4]
 170:	cmp	r1, #0
 174:	beq	158 <test_schema+0x110>
 178:	ldr	r2, [r3, r1]
 17c:	add	r3, r3, r1
 180:	add	r2, r2, #4
 184:	adds	r4, r3, r2
 188:	beq	254 <test_schema+0x20c>
 18c:	ldr	r1, [r4, #-4]
 190:	cmp	r1, #0
 194:	beq	254 <test_schema+0x20c>
 198:	ldr	r3, [r3, r2]
 19c:	adds	r0, r4, r3
 1a0:	beq	a70 <test_schema+0xa28>
 1a4:	ldr	r3, [r4, r3]
 1a8:	sub	r3, r0, r3
 1ac:	ldrh	r2, [r3]
 1b0:	cmp	r2, #5
 1b4:	bls	234 <test_schema+0x1ec>
 1b8:	ldrh	r2, [r3, #4]
 1bc:	cmp	r2, #0
 1c0:	beq	234 <test_schema+0x1ec>
 1c4:	ldr	r7, [pc, #2280]	; ab4 <test_schema+0xa6c>
 1c8:	add	r9, r4, #4
 1cc:	mov	r5, r6
 1d0:	mov	r3, r2
 1d4:	ldr	r2, [r0, r3]
 1d8:	add	r0, r0, r3
 1dc:	add	r2, r2, #4
 1e0:	add	r2, r0, r2
 1e4:	mov	r1, r5
 1e8:	mov	r0, r7
 1ec:	bl	0 <printf>
 1f0:	ldr	fp, [r4, #-4]
 1f4:	add	r5, r5, #1
 1f8:	cmp	r5, fp
 1fc:	bcs	274 <test_schema+0x22c>
 200:	mov	r3, r9
 204:	add	r9, r9, #4
 208:	ldr	r2, [r3]
 20c:	adds	r0, r3, r2
 210:	beq	a70 <test_schema+0xa28>
 214:	ldr	r3, [r3, r2]
 218:	sub	r3, r0, r3
 21c:	ldrh	r2, [r3]
 220:	cmp	r2, #5
 224:	bls	234 <test_schema+0x1ec>
 228:	ldrh	r3, [r3, #4]
 22c:	cmp	r3, #0
 230:	bne	1d4 <test_schema+0x18c>
 234:	ldr	r3, [pc, #2172]	; ab8 <test_schema+0xa70>
 238:	mov	r2, #218	; 0xda
 23c:	ldr	r1, [pc, #2144]	; aa4 <test_schema+0xa5c>
 240:	ldr	r0, [pc, #2152]	; ab0 <test_schema+0xa68>
 244:	bl	0 <__assert_fail>
 248:	mov	sl, r9
 24c:	cmp	r5, sl
 250:	beq	344 <test_schema+0x2fc>
 254:	ldr	r0, [pc, #2144]	; abc <test_schema+0xa74>
 258:	bl	0 <puts>
 25c:	mvn	r6, #0
 260:	mov	r0, r8
 264:	bl	0 <free>
 268:	mov	r0, r6
 26c:	add	sp, sp, #20
 270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 274:	cmp	fp, #0
 278:	beq	254 <test_schema+0x20c>
 27c:	ldr	r7, [pc, #2108]	; ac0 <test_schema+0xa78>
 280:	sub	r9, fp, #1
 284:	mov	r5, r6
 288:	cmp	r5, r9
 28c:	bcs	248 <test_schema+0x200>
 290:	sub	sl, r9, r5
 294:	add	sl, r5, sl, lsr #1
 298:	cmp	fp, sl
 29c:	add	r2, r4, sl, lsl #2
 2a0:	bls	a74 <test_schema+0xa2c>
 2a4:	ldr	r3, [r4, sl, lsl #2]
 2a8:	adds	r1, r2, r3
 2ac:	beq	a70 <test_schema+0xa28>
 2b0:	ldr	r2, [r2, r3]
 2b4:	sub	r2, r1, r2
 2b8:	ldrh	r3, [r2]
 2bc:	cmp	r3, #5
 2c0:	bhi	2d0 <test_schema+0x288>
 2c4:	b	234 <test_schema+0x1ec>
 2c8:	mov	r9, sl
 2cc:	mov	sl, r3
 2d0:	ldrh	r0, [r2, #4]
 2d4:	cmp	r0, #0
 2d8:	beq	234 <test_schema+0x1ec>
 2dc:	ldr	r3, [r1, r0]
 2e0:	add	r0, r1, r0
 2e4:	add	r3, r3, #4
 2e8:	add	r0, r0, r3
 2ec:	mov	r1, r7
 2f0:	bl	0 <strcmp>
 2f4:	cmp	r0, #0
 2f8:	blt	33c <test_schema+0x2f4>
 2fc:	cmp	r5, sl
 300:	bcs	24c <test_schema+0x204>
 304:	sub	r3, sl, r5
 308:	add	r3, r5, r3, lsr #1
 30c:	cmp	fp, r3
 310:	add	r0, r4, r3, lsl #2
 314:	bls	a74 <test_schema+0xa2c>
 318:	ldr	r2, [r4, r3, lsl #2]
 31c:	adds	r1, r0, r2
 320:	beq	a70 <test_schema+0xa28>
 324:	ldr	r2, [r0, r2]
 328:	sub	r2, r1, r2
 32c:	ldrh	r0, [r2]
 330:	cmp	r0, #5
 334:	bls	234 <test_schema+0x1ec>
 338:	b	2c8 <test_schema+0x280>
 33c:	add	r5, sl, #1
 340:	b	288 <test_schema+0x240>
 344:	cmp	fp, r5
 348:	add	r2, r4, r5, lsl #2
 34c:	bls	a8c <test_schema+0xa44>
 350:	ldr	r3, [r4, r5, lsl #2]
 354:	adds	r7, r2, r3
 358:	beq	a70 <test_schema+0xa28>
 35c:	ldr	r9, [r2, r3]
 360:	sub	r9, r7, r9
 364:	ldrh	r4, [r9]
 368:	cmp	r4, #5
 36c:	bls	234 <test_schema+0x1ec>
 370:	ldrh	r3, [r9, #4]
 374:	cmp	r3, #0
 378:	beq	234 <test_schema+0x1ec>
 37c:	ldr	r0, [r7, r3]
 380:	add	r3, r7, r3
 384:	add	r0, r0, #4
 388:	add	r0, r3, r0
 38c:	ldr	r1, [pc, #1836]	; ac0 <test_schema+0xa78>
 390:	bl	0 <strcmp>
 394:	cmp	r0, #0
 398:	bne	254 <test_schema+0x20c>
 39c:	cmp	r4, #7
 3a0:	bhi	3b8 <test_schema+0x370>
 3a4:	ldr	r3, [pc, #1816]	; ac4 <test_schema+0xa7c>
 3a8:	mov	r2, #224	; 0xe0
 3ac:	ldr	r1, [pc, #1776]	; aa4 <test_schema+0xa5c>
 3b0:	ldr	r0, [pc, #1784]	; ab0 <test_schema+0xa68>
 3b4:	bl	0 <__assert_fail>
 3b8:	ldrh	r4, [r9, #6]
 3bc:	cmp	r4, #0
 3c0:	beq	3a4 <test_schema+0x35c>
 3c4:	ldr	r3, [r7, r4]
 3c8:	add	r4, r7, r4
 3cc:	add	r3, r3, #4
 3d0:	adds	r4, r4, r3
 3d4:	beq	4d8 <test_schema+0x490>
 3d8:	ldr	r7, [r4, #-4]
 3dc:	cmp	r7, #0
 3e0:	beq	4d8 <test_schema+0x490>
 3e4:	sub	r3, r7, #1
 3e8:	ldr	sl, [pc, #1752]	; ac8 <test_schema+0xa80>
 3ec:	str	r5, [sp, #8]
 3f0:	mov	fp, r6
 3f4:	mov	r5, r4
 3f8:	mov	r4, r3
 3fc:	str	r3, [sp, #4]
 400:	cmp	fp, r4
 404:	bcs	4c4 <test_schema+0x47c>
 408:	sub	r9, r4, fp
 40c:	add	r9, fp, r9, lsr #1
 410:	cmp	r7, r9
 414:	add	r1, r5, r9, lsl #2
 418:	bls	a5c <test_schema+0xa14>
 41c:	ldr	r3, [r5, r9, lsl #2]
 420:	adds	ip, r1, r3
 424:	beq	a58 <test_schema+0xa10>
 428:	ldr	r1, [r1, r3]
 42c:	sub	r1, ip, r1
 430:	ldrh	r3, [r1]
 434:	cmp	r3, #5
 438:	bhi	448 <test_schema+0x400>
 43c:	b	4b0 <test_schema+0x468>
 440:	mov	r4, r9
 444:	mov	r9, r3
 448:	ldrh	r0, [r1, #4]
 44c:	cmp	r0, #0
 450:	beq	4b0 <test_schema+0x468>
 454:	ldr	r3, [ip, r0]
 458:	add	r0, ip, r0
 45c:	add	r3, r3, #4
 460:	add	r0, r0, r3
 464:	mov	r1, sl
 468:	bl	0 <strcmp>
 46c:	cmp	r0, #0
 470:	blt	4e8 <test_schema+0x4a0>
 474:	cmp	fp, r9
 478:	bcs	4c8 <test_schema+0x480>
 47c:	sub	r3, r9, fp
 480:	add	r3, fp, r3, lsr #1
 484:	cmp	r7, r3
 488:	add	r0, r5, r3, lsl #2
 48c:	bls	a5c <test_schema+0xa14>
 490:	ldr	r1, [r5, r3, lsl #2]
 494:	adds	ip, r0, r1
 498:	beq	a58 <test_schema+0xa10>
 49c:	ldr	r1, [r0, r1]
 4a0:	sub	r1, ip, r1
 4a4:	ldrh	r0, [r1]
 4a8:	cmp	r0, #5
 4ac:	bhi	440 <test_schema+0x3f8>
 4b0:	ldr	r3, [pc, #1556]	; acc <test_schema+0xa84>
 4b4:	mov	r2, #195	; 0xc3
 4b8:	ldr	r1, [pc, #1508]	; aa4 <test_schema+0xa5c>
 4bc:	ldr	r0, [pc, #1516]	; ab0 <test_schema+0xa68>
 4c0:	bl	0 <__assert_fail>
 4c4:	mov	r9, r4
 4c8:	cmp	r9, fp
 4cc:	mov	r4, r5
 4d0:	ldr	r5, [sp, #8]
 4d4:	beq	4f0 <test_schema+0x4a8>
 4d8:	ldr	r0, [pc, #1520]	; ad0 <test_schema+0xa88>
 4dc:	bl	0 <puts>
 4e0:	mvn	r6, #0
 4e4:	b	260 <test_schema+0x218>
 4e8:	add	fp, r9, #1
 4ec:	b	400 <test_schema+0x3b8>
 4f0:	cmp	r7, r9
 4f4:	add	r2, r4, r9, lsl #2
 4f8:	bls	a88 <test_schema+0xa40>
 4fc:	ldr	r9, [r4, r9, lsl #2]
 500:	adds	sl, r2, r9
 504:	beq	a58 <test_schema+0xa10>
 508:	ldr	fp, [r2, r9]
 50c:	str	r2, [sp, #12]
 510:	sub	fp, sl, fp
 514:	ldrh	r3, [fp]
 518:	cmp	r3, #5
 51c:	str	r3, [sp, #8]
 520:	bls	4b0 <test_schema+0x468>
 524:	ldrh	r1, [fp, #4]
 528:	cmp	r1, #0
 52c:	beq	4b0 <test_schema+0x468>
 530:	ldr	r0, [sl, r1]
 534:	add	r1, sl, r1
 538:	add	r0, r0, #4
 53c:	add	r0, r1, r0
 540:	ldr	r1, [pc, #1408]	; ac8 <test_schema+0xa80>
 544:	bl	0 <strcmp>
 548:	ldr	r3, [sp, #8]
 54c:	ldr	r2, [sp, #12]
 550:	cmp	r0, #0
 554:	bne	4d8 <test_schema+0x490>
 558:	cmp	r3, #13
 55c:	bhi	5e0 <test_schema+0x598>
 560:	ldr	r0, [pc, #1388]	; ad4 <test_schema+0xa8c>
 564:	str	r2, [sp, #4]
 568:	bl	0 <puts>
 56c:	ldr	r2, [sp, #4]
 570:	ldr	r3, [r2, r9]
 574:	sub	r3, sl, r3
 578:	ldrh	r1, [r3]
 57c:	cmp	r1, #5
 580:	bls	4b0 <test_schema+0x468>
 584:	ldrh	r3, [r3, #4]
 588:	cmp	r3, #0
 58c:	beq	4b0 <test_schema+0x468>
 590:	ldr	r1, [sl, r3]
 594:	add	r3, sl, r3
 598:	add	r1, r1, #4
 59c:	add	r1, r3, r1
 5a0:	ldr	r0, [pc, #1328]	; ad8 <test_schema+0xa90>
 5a4:	bl	0 <printf>
 5a8:	ldr	r2, [sp, #4]
 5ac:	ldr	r3, [r2, r9]
 5b0:	sub	r3, sl, r3
 5b4:	ldrh	r2, [r3]
 5b8:	cmp	r2, #13
 5bc:	bls	a4c <test_schema+0xa04>
 5c0:	ldrh	r3, [r3, #12]
 5c4:	cmp	r3, #0
 5c8:	beq	a4c <test_schema+0xa04>
 5cc:	ldrd	r2, [r3, sl]
 5d0:	ldr	r0, [pc, #1284]	; adc <test_schema+0xa94>
 5d4:	bl	0 <printf>
 5d8:	mvn	r6, #0
 5dc:	b	260 <test_schema+0x218>
 5e0:	ldrh	r3, [fp, #12]
 5e4:	cmp	r3, #0
 5e8:	beq	560 <test_schema+0x518>
 5ec:	ldrd	r0, [sl, r3]
 5f0:	cmp	r1, #0
 5f4:	cmpeq	r0, #150	; 0x96
 5f8:	bne	560 <test_schema+0x518>
 5fc:	ldrh	r2, [fp, #6]
 600:	cmp	r2, #0
 604:	beq	7b4 <test_schema+0x76c>
 608:	ldr	r3, [sl, r2]
 60c:	add	sl, sl, r2
 610:	adds	r2, sl, r3
 614:	beq	a90 <test_schema+0xa48>
 618:	ldr	r3, [sl, r3]
 61c:	sub	r3, r2, r3
 620:	ldrh	r1, [r3]
 624:	cmp	r1, #5
 628:	bhi	63c <test_schema+0x5f4>
 62c:	ldr	r0, [pc, #1196]	; ae0 <test_schema+0xa98>
 630:	bl	0 <puts>
 634:	mvn	r6, #0
 638:	b	260 <test_schema+0x218>
 63c:	ldrh	r3, [r3, #4]
 640:	cmp	r3, #0
 644:	beq	62c <test_schema+0x5e4>
 648:	ldrsb	r3, [r2, r3]
 64c:	cmp	r3, #5
 650:	bne	62c <test_schema+0x5e4>
 654:	ldr	r3, [sp, #4]
 658:	ldr	sl, [pc, #1156]	; ae4 <test_schema+0xa9c>
 65c:	str	r5, [sp, #8]
 660:	mov	r9, r6
 664:	mov	r5, r4
 668:	mov	r4, r3
 66c:	cmp	r9, r4
 670:	bcs	720 <test_schema+0x6d8>
 674:	sub	fp, r4, r9
 678:	add	fp, r9, fp, lsr #1
 67c:	cmp	r7, fp
 680:	add	r1, r5, fp, lsl #2
 684:	bls	a5c <test_schema+0xa14>
 688:	ldr	r3, [r5, fp, lsl #2]
 68c:	adds	ip, r1, r3
 690:	beq	a58 <test_schema+0xa10>
 694:	ldr	r1, [r1, r3]
 698:	sub	r1, ip, r1
 69c:	ldrh	r3, [r1]
 6a0:	cmp	r3, #5
 6a4:	bhi	6b4 <test_schema+0x66c>
 6a8:	b	4b0 <test_schema+0x468>
 6ac:	mov	r4, fp
 6b0:	mov	fp, r3
 6b4:	ldrh	r0, [r1, #4]
 6b8:	cmp	r0, #0
 6bc:	beq	4b0 <test_schema+0x468>
 6c0:	ldr	r3, [ip, r0]
 6c4:	add	r0, ip, r0
 6c8:	add	r3, r3, #4
 6cc:	add	r0, r0, r3
 6d0:	mov	r1, sl
 6d4:	bl	0 <strcmp>
 6d8:	cmp	r0, #0
 6dc:	blt	744 <test_schema+0x6fc>
 6e0:	cmp	fp, r9
 6e4:	bls	724 <test_schema+0x6dc>
 6e8:	sub	r3, fp, r9
 6ec:	add	r3, r9, r3, lsr #1
 6f0:	cmp	r7, r3
 6f4:	add	r1, r5, r3, lsl #2
 6f8:	bls	a5c <test_schema+0xa14>
 6fc:	ldr	r0, [r5, r3, lsl #2]
 700:	adds	ip, r1, r0
 704:	beq	a58 <test_schema+0xa10>
 708:	ldr	r1, [r1, r0]
 70c:	sub	r1, ip, r1
 710:	ldrh	r0, [r1]
 714:	cmp	r0, #5
 718:	bls	4b0 <test_schema+0x468>
 71c:	b	6ac <test_schema+0x664>
 720:	mov	fp, r4
 724:	cmp	r9, fp
 728:	mov	r4, r5
 72c:	ldr	r5, [sp, #8]
 730:	beq	74c <test_schema+0x704>
 734:	ldr	r0, [pc, #940]	; ae8 <test_schema+0xaa0>
 738:	bl	0 <puts>
 73c:	mvn	r6, #0
 740:	b	260 <test_schema+0x218>
 744:	add	r9, fp, #1
 748:	b	66c <test_schema+0x624>
 74c:	cmp	r7, r9
 750:	add	r1, r4, r9, lsl #2
 754:	bls	a88 <test_schema+0xa40>
 758:	ldr	r3, [r4, r9, lsl #2]
 75c:	adds	sl, r1, r3
 760:	beq	a58 <test_schema+0xa10>
 764:	ldr	r3, [r1, r3]
 768:	sub	r3, sl, r3
 76c:	ldrh	fp, [r3]
 770:	cmp	fp, #5
 774:	bls	4b0 <test_schema+0x468>
 778:	ldrh	r2, [r3, #4]
 77c:	str	r3, [sp, #8]
 780:	cmp	r2, #0
 784:	beq	4b0 <test_schema+0x468>
 788:	ldr	r0, [sl, r2]
 78c:	add	r2, sl, r2
 790:	add	r0, r0, #4
 794:	add	r0, r2, r0
 798:	ldr	r1, [pc, #836]	; ae4 <test_schema+0xa9c>
 79c:	bl	0 <strcmp>
 7a0:	ldr	r3, [sp, #8]
 7a4:	cmp	r0, #0
 7a8:	bne	734 <test_schema+0x6ec>
 7ac:	cmp	fp, #7
 7b0:	bhi	7c8 <test_schema+0x780>
 7b4:	ldr	r3, [pc, #816]	; aec <test_schema+0xaa4>
 7b8:	mov	r2, #201	; 0xc9
 7bc:	ldr	r1, [pc, #736]	; aa4 <test_schema+0xa5c>
 7c0:	ldr	r0, [pc, #744]	; ab0 <test_schema+0xa68>
 7c4:	bl	0 <__assert_fail>
 7c8:	ldrh	r3, [r3, #6]
 7cc:	cmp	r3, #0
 7d0:	beq	7b4 <test_schema+0x76c>
 7d4:	ldr	r2, [sl, r3]
 7d8:	add	r3, sl, r3
 7dc:	adds	r1, r3, r2
 7e0:	beq	a90 <test_schema+0xa48>
 7e4:	ldr	r3, [r3, r2]
 7e8:	sub	r3, r1, r3
 7ec:	ldrh	r2, [r3]
 7f0:	cmp	r2, #5
 7f4:	bhi	808 <test_schema+0x7c0>
 7f8:	ldr	r0, [pc, #752]	; af0 <test_schema+0xaa8>
 7fc:	bl	0 <puts>
 800:	mvn	r6, #0
 804:	b	260 <test_schema+0x218>
 808:	ldrh	r0, [r3, #4]
 80c:	cmp	r0, #0
 810:	beq	7f8 <test_schema+0x7b0>
 814:	ldrsb	r0, [r1, r0]
 818:	cmp	r0, #15
 81c:	bne	7f8 <test_schema+0x7b0>
 820:	cmp	r2, #9
 824:	bhi	838 <test_schema+0x7f0>
 828:	ldr	r0, [pc, #708]	; af4 <test_schema+0xaac>
 82c:	bl	0 <puts>
 830:	mvn	r6, #0
 834:	b	260 <test_schema+0x218>
 838:	ldrh	r3, [r3, #8]
 83c:	cmp	r3, #0
 840:	beq	828 <test_schema+0x7e0>
 844:	ldr	r3, [r1, r3]
 848:	cmp	r5, r3
 84c:	bne	828 <test_schema+0x7e0>
 850:	ldr	sl, [pc, #672]	; af8 <test_schema+0xab0>
 854:	ldr	r9, [sp, #4]
 858:	cmp	r6, r9
 85c:	bcs	90c <test_schema+0x8c4>
 860:	sub	fp, r9, r6
 864:	add	fp, r6, fp, lsr #1
 868:	cmp	r7, fp
 86c:	add	r2, r4, fp, lsl #2
 870:	bls	a5c <test_schema+0xa14>
 874:	ldr	r3, [r4, fp, lsl #2]
 878:	adds	r1, r2, r3
 87c:	beq	a58 <test_schema+0xa10>
 880:	ldr	r2, [r2, r3]
 884:	sub	r2, r1, r2
 888:	ldrh	r3, [r2]
 88c:	cmp	r3, #5
 890:	bhi	8a0 <test_schema+0x858>
 894:	b	4b0 <test_schema+0x468>
 898:	mov	r9, fp
 89c:	mov	fp, r3
 8a0:	ldrh	r0, [r2, #4]
 8a4:	cmp	r0, #0
 8a8:	beq	4b0 <test_schema+0x468>
 8ac:	ldr	r3, [r1, r0]
 8b0:	add	r0, r1, r0
 8b4:	add	r3, r3, #4
 8b8:	add	r0, r0, r3
 8bc:	mov	r1, sl
 8c0:	bl	0 <strcmp>
 8c4:	cmp	r0, #0
 8c8:	blt	928 <test_schema+0x8e0>
 8cc:	cmp	r6, fp
 8d0:	bcs	910 <test_schema+0x8c8>
 8d4:	sub	r3, fp, r6
 8d8:	add	r3, r6, r3, lsr #1
 8dc:	cmp	r7, r3
 8e0:	add	r0, r4, r3, lsl #2
 8e4:	bls	a5c <test_schema+0xa14>
 8e8:	ldr	r2, [r4, r3, lsl #2]
 8ec:	adds	r1, r0, r2
 8f0:	beq	a58 <test_schema+0xa10>
 8f4:	ldr	r2, [r0, r2]
 8f8:	sub	r2, r1, r2
 8fc:	ldrh	r0, [r2]
 900:	cmp	r0, #5
 904:	bls	4b0 <test_schema+0x468>
 908:	b	898 <test_schema+0x850>
 90c:	mov	fp, r9
 910:	cmp	fp, r6
 914:	beq	930 <test_schema+0x8e8>
 918:	ldr	r0, [pc, #476]	; afc <test_schema+0xab4>
 91c:	bl	0 <puts>
 920:	mvn	r6, #0
 924:	b	260 <test_schema+0x218>
 928:	add	r6, fp, #1
 92c:	b	858 <test_schema+0x810>
 930:	cmp	r7, fp
 934:	add	r2, r4, fp, lsl #2
 938:	bls	a88 <test_schema+0xa40>
 93c:	ldr	r3, [r4, fp, lsl #2]
 940:	adds	r4, r2, r3
 944:	beq	a58 <test_schema+0xa10>
 948:	ldr	r9, [r2, r3]
 94c:	sub	r9, r4, r9
 950:	ldrh	r7, [r9]
 954:	cmp	r7, #5
 958:	bls	4b0 <test_schema+0x468>
 95c:	ldrh	r3, [r9, #4]
 960:	cmp	r3, #0
 964:	beq	4b0 <test_schema+0x468>
 968:	ldr	r0, [r4, r3]
 96c:	add	r3, r4, r3
 970:	add	r0, r0, #4
 974:	add	r0, r3, r0
 978:	ldr	r1, [pc, #376]	; af8 <test_schema+0xab0>
 97c:	bl	0 <strcmp>
 980:	subs	r6, r0, #0
 984:	bne	918 <test_schema+0x8d0>
 988:	cmp	r7, #7
 98c:	bls	7b4 <test_schema+0x76c>
 990:	ldrh	r3, [r9, #6]
 994:	cmp	r3, #0
 998:	beq	7b4 <test_schema+0x76c>
 99c:	ldr	r2, [r4, r3]
 9a0:	add	r3, r4, r3
 9a4:	adds	r1, r3, r2
 9a8:	beq	a90 <test_schema+0xa48>
 9ac:	ldr	r3, [r3, r2]
 9b0:	sub	r3, r1, r3
 9b4:	ldrh	r2, [r3]
 9b8:	cmp	r2, #5
 9bc:	bhi	9d0 <test_schema+0x988>
 9c0:	ldr	r0, [pc, #312]	; b00 <test_schema+0xab8>
 9c4:	bl	0 <puts>
 9c8:	mvn	r6, #0
 9cc:	b	260 <test_schema+0x218>
 9d0:	ldrh	r0, [r3, #4]
 9d4:	cmp	r0, #0
 9d8:	beq	9c0 <test_schema+0x978>
 9dc:	ldrsb	r0, [r1, r0]
 9e0:	cmp	r0, #14
 9e4:	bne	9c0 <test_schema+0x978>
 9e8:	cmp	r2, #7
 9ec:	bhi	a00 <test_schema+0x9b8>
 9f0:	ldr	r0, [pc, #268]	; b04 <test_schema+0xabc>
 9f4:	bl	0 <puts>
 9f8:	mvn	r6, #0
 9fc:	b	260 <test_schema+0x218>
 a00:	ldrh	r0, [r3, #6]
 a04:	cmp	r0, #0
 a08:	beq	9f0 <test_schema+0x9a8>
 a0c:	ldrsb	r0, [r1, r0]
 a10:	cmp	r0, #15
 a14:	bne	9f0 <test_schema+0x9a8>
 a18:	cmp	r2, #9
 a1c:	bhi	a30 <test_schema+0x9e8>
 a20:	ldr	r0, [pc, #224]	; b08 <test_schema+0xac0>
 a24:	bl	0 <puts>
 a28:	mvn	r6, #0
 a2c:	b	260 <test_schema+0x218>
 a30:	ldrh	r3, [r3, #8]
 a34:	cmp	r3, #0
 a38:	beq	a20 <test_schema+0x9d8>
 a3c:	ldr	r3, [r1, r3]
 a40:	cmp	r5, r3
 a44:	beq	260 <test_schema+0x218>
 a48:	b	a20 <test_schema+0x9d8>
 a4c:	mov	r2, #0
 a50:	mov	r3, #0
 a54:	b	5d0 <test_schema+0x588>
 a58:	bl	24 <reflection_Field_vec_at.part.5>
 a5c:	ldr	r3, [pc, #168]	; b0c <test_schema+0xac4>
 a60:	mov	r2, #192	; 0xc0
 a64:	ldr	r1, [pc, #56]	; aa4 <test_schema+0xa5c>
 a68:	ldr	r0, [pc, #160]	; b10 <test_schema+0xac8>
 a6c:	bl	0 <__assert_fail>
 a70:	bl	0 <reflection_Object_vec_at.part.1>
 a74:	ldr	r3, [pc, #152]	; b14 <test_schema+0xacc>
 a78:	mov	r2, #215	; 0xd7
 a7c:	ldr	r1, [pc, #32]	; aa4 <test_schema+0xa5c>
 a80:	ldr	r0, [pc, #136]	; b10 <test_schema+0xac8>
 a84:	bl	0 <__assert_fail>
 a88:	bl	24 <reflection_Field_vec_at.part.5>
 a8c:	bl	0 <reflection_Object_vec_at.part.1>
 a90:	bl	90 <test_schema+0x48>
 a94:	.word	0x000000c8
 a98:	.word	0x00002710
 a9c:	.word	0x53424642
 aa0:	.word	0x000000d4
 aa4:	.word	0x00000000
 aa8:	.word	0x000000a0
 aac:	.word	0x000002a8
 ab0:	.word	0x000000cc
 ab4:	.word	0x000000f0
 ab8:	.word	0x0000001c
 abc:	.word	0x000002c8
 ac0:	.word	0x00000104
 ac4:	.word	0x000000f0
 ac8:	.word	0x0000011c
 acc:	.word	0x00000034
 ad0:	.word	0x00000124
 ad4:	.word	0x00000150
 ad8:	.word	0x00000174
 adc:	.word	0x00000184
 ae0:	.word	0x0000018c
 ae4:	.word	0x000001a8
 ae8:	.word	0x000001b0
 aec:	.word	0x00000088
 af0:	.word	0x000001c8
 af4:	.word	0x000001e0
 af8:	.word	0x000001f8
 afc:	.word	0x0000020c
 b00:	.word	0x00000228
 b04:	.word	0x00000250
 b08:	.word	0x00000280
 b0c:	.word	0x00000070
 b10:	.word	0x00000068
 b14:	.word	0x00000000

Disassembly of section .text.unlikely:

00000000 <reflection_Object_name.part.2>:
   0:	push	{r4, lr}
   4:	mov	r2, #218	; 0xda
   8:	ldr	r3, [pc, #8]	; 18 <reflection_Object_name.part.2+0x18>
   c:	ldr	r1, [pc, #8]	; 1c <reflection_Object_name.part.2+0x1c>
  10:	ldr	r0, [pc, #8]	; 20 <reflection_Object_name.part.2+0x20>
  14:	bl	0 <__assert_fail>
  18:	.word	0x0000001c
  1c:	.word	0x00000000
  20:	.word	0x000000a0

00000024 <reflection_Field_name.part.3>:
  24:	push	{r4, lr}
  28:	mov	r2, #195	; 0xc3
  2c:	ldr	r3, [pc, #8]	; 3c <reflection_Field_name.part.3+0x18>
  30:	ldr	r1, [pc, #8]	; 40 <reflection_Field_name.part.3+0x1c>
  34:	ldr	r0, [pc, #8]	; 44 <reflection_Field_name.part.3+0x20>
  38:	bl	0 <__assert_fail>
  3c:	.word	0x00000034
  40:	.word	0x00000000
  44:	.word	0x000000a0

00000048 <reflection_Field_default_integer.part.4>:
  48:	push	{r4, lr}
  4c:	mov	r2, #204	; 0xcc
  50:	ldr	r3, [pc, #8]	; 60 <reflection_Field_default_integer.part.4+0x18>
  54:	ldr	r1, [pc, #8]	; 64 <reflection_Field_default_integer.part.4+0x1c>
  58:	ldr	r0, [pc, #8]	; 68 <reflection_Field_default_integer.part.4+0x20>
  5c:	bl	0 <__assert_fail>
  60:	.word	0x0000004c
  64:	.word	0x00000000
  68:	.word	0x000000a0

0000006c <reflection_Field_type.part.6>:
  6c:	push	{r4, lr}
  70:	mov	r2, #201	; 0xc9
  74:	ldr	r3, [pc, #8]	; 84 <reflection_Field_type.part.6+0x18>
  78:	ldr	r1, [pc, #8]	; 88 <reflection_Field_type.part.6+0x1c>
  7c:	ldr	r0, [pc, #8]	; 8c <reflection_Field_type.part.6+0x20>
  80:	bl	0 <__assert_fail>
  84:	.word	0x00000088
  88:	.word	0x00000000
  8c:	.word	0x000000a0

00000090 <reflection_Type_base_type.part.7>:
  90:	push	{r4, lr}
  94:	mov	r2, #147	; 0x93
  98:	ldr	r3, [pc, #8]	; a8 <reflection_Type_base_type.part.7+0x18>
  9c:	ldr	r1, [pc, #8]	; ac <reflection_Type_base_type.part.7+0x1c>
  a0:	ldr	r0, [pc, #8]	; b0 <reflection_Type_base_type.part.7+0x20>
  a4:	bl	0 <__assert_fail>
  a8:	.word	0x000000a0
  ac:	.word	0x00000000
  b0:	.word	0x000000a0

000000b4 <reflection_Type_index.part.8>:
  b4:	push	{r4, lr}
  b8:	mov	r2, #149	; 0x95
  bc:	ldr	r3, [pc, #8]	; cc <reflection_Type_index.part.8+0x18>
  c0:	ldr	r1, [pc, #8]	; d0 <reflection_Type_index.part.8+0x1c>
  c4:	ldr	r0, [pc, #8]	; d4 <reflection_Type_index.part.8+0x20>
  c8:	bl	0 <__assert_fail>
  cc:	.word	0x000000bc
  d0:	.word	0x00000000
  d4:	.word	0x000000a0

Disassembly of section .text.startup:

00000000 <main>:
   0:	sub	r3, r0, #1
   4:	cmp	r3, #1
   8:	bhi	24 <main+0x24>
   c:	cmp	r0, #2
  10:	ldr	r3, [pc, #48]	; 48 <main+0x48>
  14:	ldreq	r2, [r1, #4]
  18:	streq	r2, [r3]
  1c:	ldr	r0, [r3]
  20:	b	48 <main+0x48>
  24:	ldr	r3, [pc, #32]	; 4c <main+0x4c>
  28:	push	{r4, lr}
  2c:	mov	r2, #64	; 0x40
  30:	mov	r1, #1
  34:	ldr	r3, [r3]
  38:	ldr	r0, [pc, #16]	; 50 <main+0x50>
  3c:	bl	0 <fwrite>
  40:	mov	r0, #1
  44:	bl	0 <exit>
	...
  50:	.word	0x000002ec
