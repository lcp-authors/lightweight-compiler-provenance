
../compcert-repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

0001075c <.init>:
   1075c:	push	{r3, lr}
   10760:	bl	1080c <_start@@Base+0x3c>
   10764:	pop	{r3, pc}

Disassembly of section .plt:

00010768 <printf@plt-0x14>:
   10768:	push	{lr}		; (str lr, [sp, #-4]!)
   1076c:	ldr	lr, [pc, #4]	; 10778 <printf@plt-0x4>
   10770:	add	lr, pc, lr
   10774:	ldr	pc, [lr, #8]!
   10778:	andeq	r1, r1, r8, lsl #17

0001077c <printf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2184]!	; 0x888

00010788 <puts@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2176]!	; 0x880

00010794 <__libc_start_main@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2168]!	; 0x878

000107a0 <__gmon_start__@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2160]!	; 0x870

000107ac <strlen@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2152]!	; 0x868

000107b8 <putchar@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2144]!	; 0x860

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

000107d0 <_start@@Base>:
   107d0:	mov	fp, #0
   107d4:	mov	lr, #0
   107d8:	pop	{r1}		; (ldr r1, [sp], #4)
   107dc:	mov	r2, sp
   107e0:	push	{r2}		; (str r2, [sp, #-4]!)
   107e4:	push	{r0}		; (str r0, [sp, #-4]!)
   107e8:	ldr	ip, [pc, #16]	; 10800 <_start@@Base+0x30>
   107ec:	push	{ip}		; (str ip, [sp, #-4]!)
   107f0:	ldr	r0, [pc, #12]	; 10804 <_start@@Base+0x34>
   107f4:	ldr	r3, [pc, #12]	; 10808 <_start@@Base+0x38>
   107f8:	bl	10794 <__libc_start_main@plt>
   107fc:	bl	107c4 <abort@plt>
   10800:	andeq	r1, r1, r8, lsr #10
   10804:	andeq	r0, r1, r8, lsr #25
   10808:	andeq	r1, r1, r8, asr #9
   1080c:	ldr	r3, [pc, #20]	; 10828 <_start@@Base+0x58>
   10810:	ldr	r2, [pc, #20]	; 1082c <_start@@Base+0x5c>
   10814:	add	r3, pc, r3
   10818:	ldr	r2, [r3, r2]
   1081c:	cmp	r2, #0
   10820:	bxeq	lr
   10824:	b	107a0 <__gmon_start__@plt>
   10828:	andeq	r1, r1, r4, ror #15
   1082c:	andeq	r0, r0, r8, lsr #32
   10830:	ldr	r0, [pc, #24]	; 10850 <_start@@Base+0x80>
   10834:	ldr	r3, [pc, #24]	; 10854 <_start@@Base+0x84>
   10838:	cmp	r3, r0
   1083c:	bxeq	lr
   10840:	ldr	r3, [pc, #16]	; 10858 <_start@@Base+0x88>
   10844:	cmp	r3, #0
   10848:	bxeq	lr
   1084c:	bx	r3
   10850:	andeq	r2, r2, r4, lsr r0
   10854:	andeq	r2, r2, r4, lsr r0
   10858:	andeq	r0, r0, r0
   1085c:	ldr	r0, [pc, #36]	; 10888 <_start@@Base+0xb8>
   10860:	ldr	r1, [pc, #36]	; 1088c <_start@@Base+0xbc>
   10864:	sub	r1, r1, r0
   10868:	asr	r1, r1, #2
   1086c:	add	r1, r1, r1, lsr #31
   10870:	asrs	r1, r1, #1
   10874:	bxeq	lr
   10878:	ldr	r3, [pc, #16]	; 10890 <_start@@Base+0xc0>
   1087c:	cmp	r3, #0
   10880:	bxeq	lr
   10884:	bx	r3
   10888:	andeq	r2, r2, r4, lsr r0
   1088c:	andeq	r2, r2, r4, lsr r0
   10890:	andeq	r0, r0, r0
   10894:	push	{r4, lr}
   10898:	ldr	r4, [pc, #24]	; 108b8 <_start@@Base+0xe8>
   1089c:	ldrb	r3, [r4]
   108a0:	cmp	r3, #0
   108a4:	popne	{r4, pc}
   108a8:	bl	10830 <_start@@Base+0x60>
   108ac:	mov	r3, #1
   108b0:	strb	r3, [r4]
   108b4:	pop	{r4, pc}
   108b8:	andeq	r2, r2, r4, lsr r0
   108bc:	b	1085c <_start@@Base+0x8c>

000108c0 <comp_int_asc@@Base>:
   108c0:	ldr	r2, [r0]
   108c4:	ldr	r1, [r1]
   108c8:	mov	r0, #0
   108cc:	cmp	r2, r1
   108d0:	movwgt	r0, #1
   108d4:	cmp	r1, r2
   108d8:	mvngt	r0, #0
   108dc:	bx	lr

000108e0 <get_elem@@Base>:
   108e0:	mla	r0, r2, r1, r0
   108e4:	bx	lr

000108e8 <swap@@Base>:
   108e8:	push	{r4, sl, fp, lr}
   108ec:	add	fp, sp, #8
   108f0:	cmp	r2, #1
   108f4:	blt	1096c <swap@@Base+0x84>
   108f8:	mov	ip, #0
   108fc:	cmp	r2, #16
   10900:	bcc	10948 <swap@@Base+0x60>
   10904:	add	r3, r1, r2
   10908:	cmp	r3, r0
   1090c:	addhi	r3, r0, r2
   10910:	cmphi	r3, r1
   10914:	bhi	10948 <swap@@Base+0x60>
   10918:	bic	ip, r2, #15
   1091c:	mov	r3, r1
   10920:	mov	r4, r0
   10924:	mov	lr, ip
   10928:	vld1.8	{d16-d17}, [r3]
   1092c:	vld1.8	{d18-d19}, [r4]
   10930:	subs	lr, lr, #16
   10934:	vst1.8	{d16-d17}, [r4]!
   10938:	vst1.8	{d18-d19}, [r3]!
   1093c:	bne	10928 <swap@@Base+0x40>
   10940:	cmp	ip, r2
   10944:	popeq	{r4, sl, fp, pc}
   10948:	sub	r2, r2, ip
   1094c:	add	r1, r1, ip
   10950:	add	r0, r0, ip
   10954:	ldrb	r3, [r0]
   10958:	ldrb	r4, [r1]
   1095c:	subs	r2, r2, #1
   10960:	strb	r4, [r0], #1
   10964:	strb	r3, [r1], #1
   10968:	bne	10954 <swap@@Base+0x6c>
   1096c:	pop	{r4, sl, fp, pc}

00010970 <sort@@Base>:
   10970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10974:	add	fp, sp, #28
   10978:	sub	sp, sp, #28
   1097c:	cmp	r1, #1
   10980:	str	r0, [sp, #12]
   10984:	blt	10a94 <sort@@Base+0x124>
   10988:	ldr	r9, [sp, #12]
   1098c:	bic	r0, r2, #15
   10990:	mov	r4, r3
   10994:	mov	r5, r2
   10998:	sub	r8, r1, #1
   1099c:	mov	sl, #0
   109a0:	str	r1, [sp, #4]
   109a4:	str	r0, [sp]
   109a8:	add	r6, r9, r2
   109ac:	ldr	r0, [sp, #12]
   109b0:	str	r6, [sp, #24]
   109b4:	str	r8, [sp, #20]
   109b8:	mla	r7, sl, r5, r0
   109bc:	add	r0, sl, #1
   109c0:	cmp	r0, r1
   109c4:	str	r0, [sp, #16]
   109c8:	str	r7, [sp, #8]
   109cc:	bge	109f0 <sort@@Base+0x80>
   109d0:	mov	r0, r6
   109d4:	mov	r1, r7
   109d8:	blx	r4
   109dc:	cmp	r0, #0
   109e0:	movlt	r7, r6
   109e4:	add	r6, r6, r5
   109e8:	subs	r8, r8, #1
   109ec:	bne	109d0 <sort@@Base+0x60>
   109f0:	ldr	r6, [sp, #24]
   109f4:	ldr	r8, [sp, #20]
   109f8:	cmp	r5, #1
   109fc:	blt	10a78 <sort@@Base+0x108>
   10a00:	mov	r0, #0
   10a04:	cmp	r5, #16
   10a08:	bcc	10a5c <sort@@Base+0xec>
   10a0c:	ldr	r2, [sp, #12]
   10a10:	mla	r1, sl, r5, r5
   10a14:	add	r1, r2, r1
   10a18:	cmp	r7, r1
   10a1c:	ldrcc	r2, [sp, #8]
   10a20:	addcc	r1, r7, r5
   10a24:	cmpcc	r2, r1
   10a28:	bcc	10a5c <sort@@Base+0xec>
   10a2c:	ldr	r0, [sp]
   10a30:	mov	r1, r9
   10a34:	mov	r2, r7
   10a38:	vld1.8	{d16-d17}, [r1]
   10a3c:	vld1.8	{d18-d19}, [r2]
   10a40:	subs	r0, r0, #16
   10a44:	vst1.8	{d16-d17}, [r2]!
   10a48:	vst1.8	{d18-d19}, [r1]!
   10a4c:	bne	10a38 <sort@@Base+0xc8>
   10a50:	ldr	r0, [sp]
   10a54:	cmp	r0, r5
   10a58:	beq	10a78 <sort@@Base+0x108>
   10a5c:	ldrb	r1, [r7, r0]
   10a60:	ldrb	r2, [r9, r0]
   10a64:	strb	r2, [r7, r0]
   10a68:	strb	r1, [r9, r0]
   10a6c:	add	r0, r0, #1
   10a70:	cmp	r5, r0
   10a74:	bne	10a5c <sort@@Base+0xec>
   10a78:	ldr	r1, [sp, #4]
   10a7c:	ldr	sl, [sp, #16]
   10a80:	add	r9, r9, r5
   10a84:	add	r6, r6, r5
   10a88:	sub	r8, r8, #1
   10a8c:	cmp	sl, r1
   10a90:	bne	109ac <sort@@Base+0x3c>
   10a94:	sub	sp, fp, #28
   10a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010a9c <linear_search@@Base>:
   10a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10aa0:	add	fp, sp, #28
   10aa4:	sub	sp, sp, #4
   10aa8:	cmp	r2, #1
   10aac:	blt	10af4 <linear_search@@Base+0x58>
   10ab0:	ldr	r9, [fp, #8]
   10ab4:	mov	r8, r3
   10ab8:	mov	r6, r2
   10abc:	mov	r7, r1
   10ac0:	mov	sl, r0
   10ac4:	mov	r4, #0
   10ac8:	mov	r5, r1
   10acc:	mov	r0, r7
   10ad0:	mov	r1, sl
   10ad4:	blx	r9
   10ad8:	cmp	r0, #0
   10adc:	beq	10af8 <linear_search@@Base+0x5c>
   10ae0:	add	r4, r4, #1
   10ae4:	add	r7, r7, r6
   10ae8:	add	r5, r5, r8
   10aec:	cmp	r4, r6
   10af0:	blt	10acc <linear_search@@Base+0x30>
   10af4:	mov	r5, #0
   10af8:	mov	r0, r5
   10afc:	sub	sp, fp, #28
   10b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010b04 <binary_search@@Base>:
   10b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b08:	add	fp, sp, #28
   10b0c:	push	{r3}		; (str r3, [sp, #-4]!)
   10b10:	cmp	r2, #1
   10b14:	blt	10b74 <binary_search@@Base+0x70>
   10b18:	ldr	r9, [fp, #8]
   10b1c:	mov	sl, r1
   10b20:	mov	r6, r0
   10b24:	sub	r4, r2, #1
   10b28:	mov	r5, #0
   10b2c:	add	r0, r4, r5
   10b30:	add	r0, r0, r0, lsr #31
   10b34:	asr	r8, r0, #1
   10b38:	ldr	r0, [sp]
   10b3c:	mla	r7, r8, r0, sl
   10b40:	mov	r0, r6
   10b44:	mov	r1, r7
   10b48:	blx	r9
   10b4c:	cmp	r0, #0
   10b50:	bne	10b78 <binary_search@@Base+0x74>
   10b54:	mov	r0, r6
   10b58:	mov	r1, r7
   10b5c:	blx	r9
   10b60:	cmn	r0, #1
   10b64:	subeq	r4, r8, #1
   10b68:	addne	r5, r8, #1
   10b6c:	cmp	r5, r4
   10b70:	ble	10b2c <binary_search@@Base+0x28>
   10b74:	mov	r7, #0
   10b78:	mov	r0, r7
   10b7c:	sub	sp, fp, #28
   10b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010b84 <insertion_sort@@Base>:
   10b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b88:	add	fp, sp, #28
   10b8c:	sub	sp, sp, #28
   10b90:	cmp	r1, #2
   10b94:	str	r3, [sp, #24]
   10b98:	str	r1, [sp, #4]
   10b9c:	blt	10c84 <insertion_sort@@Base+0x100>
   10ba0:	mov	r7, r0
   10ba4:	add	r8, r0, r2
   10ba8:	bic	r0, r2, #15
   10bac:	mov	r5, r2
   10bb0:	rsb	r6, r2, #0
   10bb4:	mov	r4, #1
   10bb8:	mov	r9, r7
   10bbc:	str	r0, [sp, #20]
   10bc0:	str	r9, [sp, #8]
   10bc4:	str	r8, [sp, #16]
   10bc8:	str	r4, [sp, #12]
   10bcc:	ldr	r2, [sp, #24]
   10bd0:	mov	sl, r4
   10bd4:	mla	r0, r4, r5, r7
   10bd8:	sub	r4, r4, #1
   10bdc:	mla	r1, r4, r5, r7
   10be0:	blx	r2
   10be4:	cmn	r0, #1
   10be8:	bne	10c60 <insertion_sort@@Base+0xdc>
   10bec:	cmp	r5, #1
   10bf0:	blt	10c50 <insertion_sort@@Base+0xcc>
   10bf4:	mov	r0, #0
   10bf8:	cmp	r5, #16
   10bfc:	bcc	10c30 <insertion_sort@@Base+0xac>
   10c00:	ldr	r0, [sp, #20]
   10c04:	mov	r1, r9
   10c08:	mov	r2, r8
   10c0c:	vld1.8	{d16-d17}, [r1]
   10c10:	vld1.8	{d18-d19}, [r2]
   10c14:	subs	r0, r0, #16
   10c18:	vst1.8	{d16-d17}, [r2]!
   10c1c:	vst1.8	{d18-d19}, [r1]!
   10c20:	bne	10c0c <insertion_sort@@Base+0x88>
   10c24:	ldr	r0, [sp, #20]
   10c28:	cmp	r0, r5
   10c2c:	beq	10c50 <insertion_sort@@Base+0xcc>
   10c30:	add	r1, r9, r5
   10c34:	ldrb	r2, [r1, r0]
   10c38:	ldrb	r3, [r9, r0]
   10c3c:	strb	r3, [r1, r0]
   10c40:	strb	r2, [r9, r0]
   10c44:	add	r0, r0, #1
   10c48:	cmp	r5, r0
   10c4c:	bne	10c34 <insertion_sort@@Base+0xb0>
   10c50:	add	r9, r9, r6
   10c54:	add	r8, r8, r6
   10c58:	cmp	sl, #1
   10c5c:	bgt	10bcc <insertion_sort@@Base+0x48>
   10c60:	ldr	r4, [sp, #12]
   10c64:	ldr	r9, [sp, #8]
   10c68:	ldr	r8, [sp, #16]
   10c6c:	ldr	r0, [sp, #4]
   10c70:	add	r4, r4, #1
   10c74:	add	r9, r9, r5
   10c78:	add	r8, r8, r5
   10c7c:	cmp	r4, r0
   10c80:	bne	10bc0 <insertion_sort@@Base+0x3c>
   10c84:	sub	sp, fp, #28
   10c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010c8c <comp_char_desc@@Base>:
   10c8c:	ldrb	r2, [r0]
   10c90:	ldrb	r1, [r1]
   10c94:	mov	r0, #0
   10c98:	cmp	r2, r1
   10c9c:	mvnhi	r0, #0
   10ca0:	movwcc	r0, #1
   10ca4:	bx	lr

00010ca8 <main@@Base>:
   10ca8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10cac:	add	fp, sp, #24
   10cb0:	vpush	{d8-d10}
   10cb4:	sub	sp, sp, #32
   10cb8:	movw	r0, #5440	; 0x1540
   10cbc:	add	r8, sp, #8
   10cc0:	movt	r0, #1
   10cc4:	vld1.64	{d8-d9}, [r0]!
   10cc8:	vldr	d10, [r0]
   10ccc:	mov	r0, r8
   10cd0:	vst1.64	{d8-d9}, [r0]!
   10cd4:	vstr	d10, [r0]
   10cd8:	movw	r0, #5464	; 0x1558
   10cdc:	movt	r0, #1
   10ce0:	bl	10788 <puts@plt>
   10ce4:	movw	r0, #5478	; 0x1566
   10ce8:	movt	r0, #1
   10cec:	bl	1077c <printf@plt>
   10cf0:	movw	r4, #5485	; 0x156d
   10cf4:	mov	r1, #3
   10cf8:	movt	r4, #1
   10cfc:	mov	r0, r4
   10d00:	bl	1077c <printf@plt>
   10d04:	mov	r0, r4
   10d08:	mvn	r1, #1
   10d0c:	bl	1077c <printf@plt>
   10d10:	mov	r0, r4
   10d14:	mov	r1, #4
   10d18:	bl	1077c <printf@plt>
   10d1c:	mov	r0, r4
   10d20:	mov	r1, #5
   10d24:	bl	1077c <printf@plt>
   10d28:	mov	r0, r4
   10d2c:	mov	r1, #9
   10d30:	bl	1077c <printf@plt>
   10d34:	mov	r0, r4
   10d38:	mov	r1, #1
   10d3c:	bl	1077c <printf@plt>
   10d40:	mov	r0, #10
   10d44:	bl	107b8 <putchar@plt>
   10d48:	orr	lr, r8, #4
   10d4c:	mov	r3, #0
   10d50:	add	r4, r8, r3, lsl #2
   10d54:	add	ip, r3, #1
   10d58:	cmp	ip, #5
   10d5c:	mov	r2, r4
   10d60:	bhi	10d94 <main@@Base+0xec>
   10d64:	mov	r6, #5
   10d68:	mov	r0, lr
   10d6c:	mov	r2, r4
   10d70:	mov	r7, lr
   10d74:	ldr	r1, [r7], #4
   10d78:	ldr	r5, [r2]
   10d7c:	sub	r6, r6, #1
   10d80:	cmp	r5, r1
   10d84:	movgt	r2, r0
   10d88:	cmp	r3, r6
   10d8c:	mov	r0, r7
   10d90:	bne	10d74 <main@@Base+0xcc>
   10d94:	ldrb	r0, [r2]
   10d98:	ldrb	r1, [r4]
   10d9c:	add	lr, lr, #4
   10da0:	cmp	ip, #6
   10da4:	mov	r3, ip
   10da8:	strb	r1, [r2]
   10dac:	strb	r0, [r4]
   10db0:	ldrb	r0, [r2, #1]
   10db4:	ldrb	r1, [r4, #1]
   10db8:	strb	r1, [r2, #1]
   10dbc:	strb	r0, [r4, #1]
   10dc0:	ldrb	r0, [r2, #2]
   10dc4:	ldrb	r1, [r4, #2]
   10dc8:	strb	r1, [r2, #2]
   10dcc:	strb	r0, [r4, #2]
   10dd0:	ldrb	r0, [r2, #3]
   10dd4:	ldrb	r1, [r4, #3]
   10dd8:	strb	r1, [r2, #3]
   10ddc:	strb	r0, [r4, #3]
   10de0:	bne	10d50 <main@@Base+0xa8>
   10de4:	movw	r0, #5489	; 0x1571
   10de8:	movt	r0, #1
   10dec:	bl	1077c <printf@plt>
   10df0:	ldr	r1, [sp, #8]
   10df4:	movw	r4, #5485	; 0x156d
   10df8:	movt	r4, #1
   10dfc:	mov	r0, r4
   10e00:	bl	1077c <printf@plt>
   10e04:	ldr	r1, [sp, #12]
   10e08:	mov	r0, r4
   10e0c:	bl	1077c <printf@plt>
   10e10:	ldr	r1, [sp, #16]
   10e14:	mov	r0, r4
   10e18:	bl	1077c <printf@plt>
   10e1c:	ldr	r1, [sp, #20]
   10e20:	mov	r0, r4
   10e24:	bl	1077c <printf@plt>
   10e28:	ldr	r1, [sp, #24]
   10e2c:	mov	r0, r4
   10e30:	bl	1077c <printf@plt>
   10e34:	ldr	r1, [sp, #28]
   10e38:	mov	r0, r4
   10e3c:	bl	1077c <printf@plt>
   10e40:	mov	r0, #10
   10e44:	bl	107b8 <putchar@plt>
   10e48:	mov	r0, #24
   10e4c:	mov	r4, r8
   10e50:	vstr	d10, [sp, #24]
   10e54:	vst1.64	{d8-d9}, [r4], r0
   10e58:	movw	r0, #5497	; 0x1579
   10e5c:	movt	r0, #1
   10e60:	bl	10788 <puts@plt>
   10e64:	ldr	r0, [r4]
   10e68:	mov	r2, #4
   10e6c:	cmp	r0, #4
   10e70:	beq	10e84 <main@@Base+0x1dc>
   10e74:	ldr	r0, [sp, #38]	; 0x26
   10e78:	mov	r2, #5
   10e7c:	cmp	r0, #4
   10e80:	bne	10e98 <main@@Base+0x1f0>
   10e84:	movw	r0, #5507	; 0x1583
   10e88:	mov	r1, #4
   10e8c:	movt	r0, #1
   10e90:	bl	1077c <printf@plt>
   10e94:	b	10ea8 <main@@Base+0x200>
   10e98:	movw	r0, #5552	; 0x15b0
   10e9c:	mov	r1, #4
   10ea0:	movt	r0, #1
   10ea4:	bl	1077c <printf@plt>
   10ea8:	mov	r0, r8
   10eac:	orr	lr, r8, #4
   10eb0:	mov	r3, #0
   10eb4:	vst1.64	{d8-d9}, [r0]!
   10eb8:	vstr	d10, [r0]
   10ebc:	add	r4, r8, r3, lsl #2
   10ec0:	add	ip, r3, #1
   10ec4:	cmp	ip, #5
   10ec8:	mov	r2, r4
   10ecc:	bhi	10f00 <main@@Base+0x258>
   10ed0:	mov	r6, #5
   10ed4:	mov	r0, lr
   10ed8:	mov	r2, r4
   10edc:	mov	r7, lr
   10ee0:	ldr	r1, [r7], #4
   10ee4:	ldr	r5, [r2]
   10ee8:	sub	r6, r6, #1
   10eec:	cmp	r5, r1
   10ef0:	movgt	r2, r0
   10ef4:	cmp	r3, r6
   10ef8:	mov	r0, r7
   10efc:	bne	10ee0 <main@@Base+0x238>
   10f00:	ldrb	r0, [r2]
   10f04:	ldrb	r1, [r4]
   10f08:	add	lr, lr, #4
   10f0c:	cmp	ip, #6
   10f10:	mov	r3, ip
   10f14:	strb	r1, [r2]
   10f18:	strb	r0, [r4]
   10f1c:	ldrb	r0, [r2, #1]
   10f20:	ldrb	r1, [r4, #1]
   10f24:	strb	r1, [r2, #1]
   10f28:	strb	r0, [r4, #1]
   10f2c:	ldrb	r0, [r2, #2]
   10f30:	ldrb	r1, [r4, #2]
   10f34:	strb	r1, [r2, #2]
   10f38:	strb	r0, [r4, #2]
   10f3c:	ldrb	r0, [r2, #3]
   10f40:	ldrb	r1, [r4, #3]
   10f44:	strb	r1, [r2, #3]
   10f48:	strb	r0, [r4, #3]
   10f4c:	bne	10ebc <main@@Base+0x214>
   10f50:	movw	r0, #5586	; 0x15d2
   10f54:	movt	r0, #1
   10f58:	bl	10788 <puts@plt>
   10f5c:	mov	r0, #0
   10f60:	mov	r1, #5
   10f64:	add	r2, r0, r1
   10f68:	mov	r7, #0
   10f6c:	mov	r6, #0
   10f70:	add	r2, r2, r2, lsr #31
   10f74:	asr	r2, r2, #1
   10f78:	ldr	r3, [r8, r2, lsl #2]
   10f7c:	cmp	r3, #3
   10f80:	movwgt	r7, #1
   10f84:	cmp	r3, #4
   10f88:	movwgt	r6, #1
   10f8c:	cmp	r6, r7
   10f90:	beq	10fbc <main@@Base+0x314>
   10f94:	cmp	r3, #4
   10f98:	subgt	r1, r2, #1
   10f9c:	addle	r0, r2, #1
   10fa0:	cmp	r0, r1
   10fa4:	ble	10f64 <main@@Base+0x2bc>
   10fa8:	movw	r0, #5552	; 0x15b0
   10fac:	mov	r1, #4
   10fb0:	movt	r0, #1
   10fb4:	bl	1077c <printf@plt>
   10fb8:	b	10fd0 <main@@Base+0x328>
   10fbc:	movw	r0, #5507	; 0x1583
   10fc0:	sbfx	r2, r2, #0, #30
   10fc4:	mov	r1, #4
   10fc8:	movt	r0, #1
   10fcc:	bl	1077c <printf@plt>
   10fd0:	movw	r0, #5596	; 0x15dc
   10fd4:	vst1.64	{d8-d9}, [r8]!
   10fd8:	movt	r0, #1
   10fdc:	vstr	d10, [r8]
   10fe0:	bl	10788 <puts@plt>
   10fe4:	movw	r0, #5478	; 0x1566
   10fe8:	movt	r0, #1
   10fec:	bl	1077c <printf@plt>
   10ff0:	movw	r4, #5485	; 0x156d
   10ff4:	mov	r1, #3
   10ff8:	movt	r4, #1
   10ffc:	mov	r0, r4
   11000:	bl	1077c <printf@plt>
   11004:	mov	r0, r4
   11008:	mvn	r1, #1
   1100c:	bl	1077c <printf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, #4
   11018:	bl	1077c <printf@plt>
   1101c:	mov	r0, r4
   11020:	mov	r1, #5
   11024:	bl	1077c <printf@plt>
   11028:	mov	r0, r4
   1102c:	mov	r1, #9
   11030:	bl	1077c <printf@plt>
   11034:	mov	r0, r4
   11038:	mov	r1, #1
   1103c:	bl	1077c <printf@plt>
   11040:	mov	r0, #10
   11044:	bl	107b8 <putchar@plt>
   11048:	ldr	r0, [sp, #8]
   1104c:	cmn	r0, #1
   11050:	blt	11080 <main@@Base+0x3d8>
   11054:	ldrb	r1, [sp, #9]
   11058:	ldrb	r2, [sp, #12]
   1105c:	ldrb	r3, [sp, #13]
   11060:	strb	r0, [sp, #12]
   11064:	strb	r2, [sp, #8]
   11068:	strb	r1, [sp, #13]
   1106c:	strb	r3, [sp, #9]
   11070:	ldrh	r0, [sp, #14]
   11074:	ldrh	r1, [sp, #10]
   11078:	strh	r1, [sp, #14]
   1107c:	strh	r0, [sp, #10]
   11080:	ldr	r0, [sp, #12]
   11084:	ldr	r1, [sp, #16]
   11088:	cmp	r0, r1
   1108c:	ble	110f0 <main@@Base+0x448>
   11090:	strb	r1, [sp, #12]
   11094:	ldrb	r2, [sp, #17]
   11098:	ldrb	r1, [sp, #13]
   1109c:	strb	r2, [sp, #13]
   110a0:	ldrh	r2, [sp, #14]
   110a4:	ldrh	r3, [sp, #18]
   110a8:	strh	r3, [sp, #14]
   110ac:	strb	r0, [sp, #16]
   110b0:	strb	r1, [sp, #17]
   110b4:	strh	r2, [sp, #18]
   110b8:	ldr	r0, [sp, #8]
   110bc:	ldr	r1, [sp, #12]
   110c0:	cmp	r0, r1
   110c4:	ble	110f0 <main@@Base+0x448>
   110c8:	strb	r1, [sp, #8]
   110cc:	strb	r0, [sp, #12]
   110d0:	ldrb	r0, [sp, #9]
   110d4:	ldrb	r1, [sp, #13]
   110d8:	strb	r0, [sp, #13]
   110dc:	strb	r1, [sp, #9]
   110e0:	ldrh	r0, [sp, #14]
   110e4:	ldrh	r1, [sp, #10]
   110e8:	strh	r1, [sp, #14]
   110ec:	strh	r0, [sp, #10]
   110f0:	ldr	r0, [sp, #16]
   110f4:	ldr	r1, [sp, #20]
   110f8:	cmp	r0, r1
   110fc:	ble	11198 <main@@Base+0x4f0>
   11100:	strb	r1, [sp, #16]
   11104:	ldrb	r2, [sp, #21]
   11108:	ldrb	r1, [sp, #17]
   1110c:	strb	r2, [sp, #17]
   11110:	ldrh	r2, [sp, #18]
   11114:	ldrh	r3, [sp, #22]
   11118:	strh	r3, [sp, #18]
   1111c:	strb	r0, [sp, #20]
   11120:	strb	r1, [sp, #21]
   11124:	strh	r2, [sp, #22]
   11128:	ldr	r0, [sp, #12]
   1112c:	ldr	r1, [sp, #16]
   11130:	cmp	r0, r1
   11134:	ble	11198 <main@@Base+0x4f0>
   11138:	strb	r1, [sp, #12]
   1113c:	ldrb	r2, [sp, #17]
   11140:	ldrb	r1, [sp, #13]
   11144:	strb	r2, [sp, #13]
   11148:	ldrh	r2, [sp, #14]
   1114c:	ldrh	r3, [sp, #18]
   11150:	strh	r3, [sp, #14]
   11154:	strb	r0, [sp, #16]
   11158:	strb	r1, [sp, #17]
   1115c:	strh	r2, [sp, #18]
   11160:	ldr	r0, [sp, #8]
   11164:	ldr	r1, [sp, #12]
   11168:	cmp	r0, r1
   1116c:	ble	11198 <main@@Base+0x4f0>
   11170:	strb	r1, [sp, #8]
   11174:	strb	r0, [sp, #12]
   11178:	ldrb	r0, [sp, #9]
   1117c:	ldrb	r1, [sp, #13]
   11180:	strb	r0, [sp, #13]
   11184:	strb	r1, [sp, #9]
   11188:	ldrh	r0, [sp, #14]
   1118c:	ldrh	r1, [sp, #10]
   11190:	strh	r1, [sp, #14]
   11194:	strh	r0, [sp, #10]
   11198:	ldr	r0, [sp, #20]
   1119c:	ldr	r1, [sp, #24]
   111a0:	cmp	r0, r1
   111a4:	ble	11278 <main@@Base+0x5d0>
   111a8:	strb	r1, [sp, #20]
   111ac:	ldrb	r2, [sp, #25]
   111b0:	ldrb	r1, [sp, #21]
   111b4:	strb	r2, [sp, #21]
   111b8:	ldrh	r2, [sp, #22]
   111bc:	ldrh	r3, [sp, #26]
   111c0:	strh	r3, [sp, #22]
   111c4:	strb	r0, [sp, #24]
   111c8:	strb	r1, [sp, #25]
   111cc:	strh	r2, [sp, #26]
   111d0:	ldr	r0, [sp, #16]
   111d4:	ldr	r1, [sp, #20]
   111d8:	cmp	r0, r1
   111dc:	ble	11278 <main@@Base+0x5d0>
   111e0:	strb	r1, [sp, #16]
   111e4:	ldrb	r2, [sp, #21]
   111e8:	ldrb	r1, [sp, #17]
   111ec:	strb	r2, [sp, #17]
   111f0:	ldrh	r2, [sp, #18]
   111f4:	ldrh	r3, [sp, #22]
   111f8:	strh	r3, [sp, #18]
   111fc:	strb	r0, [sp, #20]
   11200:	strb	r1, [sp, #21]
   11204:	strh	r2, [sp, #22]
   11208:	ldr	r0, [sp, #12]
   1120c:	ldr	r1, [sp, #16]
   11210:	cmp	r0, r1
   11214:	ble	11278 <main@@Base+0x5d0>
   11218:	strb	r1, [sp, #12]
   1121c:	ldrb	r2, [sp, #17]
   11220:	ldrb	r1, [sp, #13]
   11224:	strb	r2, [sp, #13]
   11228:	ldrh	r2, [sp, #14]
   1122c:	ldrh	r3, [sp, #18]
   11230:	strh	r3, [sp, #14]
   11234:	strb	r0, [sp, #16]
   11238:	strb	r1, [sp, #17]
   1123c:	strh	r2, [sp, #18]
   11240:	ldr	r0, [sp, #8]
   11244:	ldr	r1, [sp, #12]
   11248:	cmp	r0, r1
   1124c:	ble	11278 <main@@Base+0x5d0>
   11250:	strb	r1, [sp, #8]
   11254:	strb	r0, [sp, #12]
   11258:	ldrb	r0, [sp, #9]
   1125c:	ldrb	r1, [sp, #13]
   11260:	strb	r0, [sp, #13]
   11264:	strb	r1, [sp, #9]
   11268:	ldrh	r0, [sp, #14]
   1126c:	ldrh	r1, [sp, #10]
   11270:	strh	r1, [sp, #14]
   11274:	strh	r0, [sp, #10]
   11278:	ldr	r0, [sp, #24]
   1127c:	ldr	r1, [sp, #28]
   11280:	cmp	r0, r1
   11284:	ble	11390 <main@@Base+0x6e8>
   11288:	strb	r1, [sp, #24]
   1128c:	ldrb	r2, [sp, #29]
   11290:	ldrb	r1, [sp, #25]
   11294:	strb	r2, [sp, #25]
   11298:	ldrh	r2, [sp, #26]
   1129c:	ldrh	r3, [sp, #30]
   112a0:	strh	r3, [sp, #26]
   112a4:	strb	r0, [sp, #28]
   112a8:	strb	r1, [sp, #29]
   112ac:	strh	r2, [sp, #30]
   112b0:	ldr	r0, [sp, #20]
   112b4:	ldr	r1, [sp, #24]
   112b8:	cmp	r0, r1
   112bc:	ble	11390 <main@@Base+0x6e8>
   112c0:	strb	r1, [sp, #20]
   112c4:	ldrb	r2, [sp, #25]
   112c8:	ldrb	r1, [sp, #21]
   112cc:	strb	r2, [sp, #21]
   112d0:	ldrh	r2, [sp, #22]
   112d4:	ldrh	r3, [sp, #26]
   112d8:	strh	r3, [sp, #22]
   112dc:	strb	r0, [sp, #24]
   112e0:	strb	r1, [sp, #25]
   112e4:	strh	r2, [sp, #26]
   112e8:	ldr	r0, [sp, #16]
   112ec:	ldr	r1, [sp, #20]
   112f0:	cmp	r0, r1
   112f4:	ble	11390 <main@@Base+0x6e8>
   112f8:	strb	r1, [sp, #16]
   112fc:	ldrb	r2, [sp, #21]
   11300:	ldrb	r1, [sp, #17]
   11304:	strb	r2, [sp, #17]
   11308:	ldrh	r2, [sp, #18]
   1130c:	ldrh	r3, [sp, #22]
   11310:	strh	r3, [sp, #18]
   11314:	strb	r0, [sp, #20]
   11318:	strb	r1, [sp, #21]
   1131c:	strh	r2, [sp, #22]
   11320:	ldr	r0, [sp, #12]
   11324:	ldr	r1, [sp, #16]
   11328:	cmp	r0, r1
   1132c:	ble	11390 <main@@Base+0x6e8>
   11330:	strb	r1, [sp, #12]
   11334:	ldrb	r2, [sp, #17]
   11338:	ldrb	r1, [sp, #13]
   1133c:	strb	r2, [sp, #13]
   11340:	ldrh	r2, [sp, #14]
   11344:	ldrh	r3, [sp, #18]
   11348:	strh	r3, [sp, #14]
   1134c:	strb	r0, [sp, #16]
   11350:	strb	r1, [sp, #17]
   11354:	strh	r2, [sp, #18]
   11358:	ldr	r0, [sp, #8]
   1135c:	ldr	r1, [sp, #12]
   11360:	cmp	r0, r1
   11364:	ble	11390 <main@@Base+0x6e8>
   11368:	strb	r1, [sp, #8]
   1136c:	strb	r0, [sp, #12]
   11370:	ldrb	r0, [sp, #9]
   11374:	ldrb	r1, [sp, #13]
   11378:	strb	r0, [sp, #13]
   1137c:	strb	r1, [sp, #9]
   11380:	ldrh	r0, [sp, #14]
   11384:	ldrh	r1, [sp, #10]
   11388:	strh	r1, [sp, #14]
   1138c:	strh	r0, [sp, #10]
   11390:	movw	r0, #5489	; 0x1571
   11394:	movt	r0, #1
   11398:	bl	1077c <printf@plt>
   1139c:	ldr	r1, [sp, #8]
   113a0:	movw	r4, #5485	; 0x156d
   113a4:	movt	r4, #1
   113a8:	mov	r0, r4
   113ac:	bl	1077c <printf@plt>
   113b0:	ldr	r1, [sp, #12]
   113b4:	mov	r0, r4
   113b8:	bl	1077c <printf@plt>
   113bc:	ldr	r1, [sp, #16]
   113c0:	mov	r0, r4
   113c4:	bl	1077c <printf@plt>
   113c8:	ldr	r1, [sp, #20]
   113cc:	mov	r0, r4
   113d0:	bl	1077c <printf@plt>
   113d4:	ldr	r1, [sp, #24]
   113d8:	mov	r0, r4
   113dc:	bl	1077c <printf@plt>
   113e0:	ldr	r1, [sp, #28]
   113e4:	mov	r0, r4
   113e8:	bl	1077c <printf@plt>
   113ec:	mov	r0, #10
   113f0:	bl	107b8 <putchar@plt>
   113f4:	movw	r0, #5606	; 0x15e6
   113f8:	movt	r0, #1
   113fc:	bl	10788 <puts@plt>
   11400:	movw	r0, #25153	; 0x6241
   11404:	mov	r9, #0
   11408:	movt	r0, #24922	; 0x615a
   1140c:	strb	r9, [sp, #4]
   11410:	str	r0, [sp]
   11414:	movw	r0, #5478	; 0x1566
   11418:	movt	r0, #1
   1141c:	bl	1077c <printf@plt>
   11420:	mov	r8, sp
   11424:	mov	r0, r8
   11428:	bl	10788 <puts@plt>
   1142c:	mov	r0, r8
   11430:	bl	107ac <strlen@plt>
   11434:	cmp	r0, #1
   11438:	blt	114a4 <main@@Base+0x7fc>
   1143c:	sub	lr, r0, #1
   11440:	orr	r5, r8, #1
   11444:	add	ip, r8, r9
   11448:	add	r9, r9, #1
   1144c:	cmp	r9, r0
   11450:	mov	r3, ip
   11454:	bge	11484 <main@@Base+0x7dc>
   11458:	mov	r1, lr
   1145c:	mov	r2, r5
   11460:	mov	r3, ip
   11464:	mov	r7, r5
   11468:	ldrb	r4, [r3]
   1146c:	ldrb	r6, [r7], #1
   11470:	cmp	r6, r4
   11474:	movhi	r3, r2
   11478:	subs	r1, r1, #1
   1147c:	mov	r2, r7
   11480:	bne	11468 <main@@Base+0x7c0>
   11484:	ldrb	r1, [r3]
   11488:	ldrb	r2, [ip]
   1148c:	sub	lr, lr, #1
   11490:	add	r5, r5, #1
   11494:	cmp	r9, r0
   11498:	strb	r2, [r3]
   1149c:	strb	r1, [ip]
   114a0:	bne	11444 <main@@Base+0x79c>
   114a4:	movw	r0, #5489	; 0x1571
   114a8:	movt	r0, #1
   114ac:	bl	1077c <printf@plt>
   114b0:	mov	r0, sp
   114b4:	bl	10788 <puts@plt>
   114b8:	mov	r0, #0
   114bc:	sub	sp, fp, #48	; 0x30
   114c0:	vpop	{d8-d10}
   114c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000114c8 <__libc_csu_init@@Base>:
   114c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114cc:	mov	r7, r0
   114d0:	ldr	r6, [pc, #72]	; 11520 <__libc_csu_init@@Base+0x58>
   114d4:	ldr	r5, [pc, #72]	; 11524 <__libc_csu_init@@Base+0x5c>
   114d8:	add	r6, pc, r6
   114dc:	add	r5, pc, r5
   114e0:	sub	r6, r6, r5
   114e4:	mov	r8, r1
   114e8:	mov	r9, r2
   114ec:	bl	1075c <printf@plt-0x20>
   114f0:	asrs	r6, r6, #2
   114f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114f8:	mov	r4, #0
   114fc:	add	r4, r4, #1
   11500:	ldr	r3, [r5], #4
   11504:	mov	r2, r9
   11508:	mov	r1, r8
   1150c:	mov	r0, r7
   11510:	blx	r3
   11514:	cmp	r6, r4
   11518:	bne	114fc <__libc_csu_init@@Base+0x34>
   1151c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11520:	andeq	r0, r1, ip, lsr #20
   11524:	andeq	r0, r1, r4, lsr #20

00011528 <__libc_csu_fini@@Base>:
   11528:	bx	lr

Disassembly of section .fini:

0001152c <.fini>:
   1152c:	push	{r3, lr}
   11530:	pop	{r3, pc}
