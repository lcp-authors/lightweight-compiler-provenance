
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/fileio.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pstrnlen>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	str	r1, [fp, #-20]	; 0xffffffec
  18:	ldr	r2, [fp, #-20]	; 0xffffffec
  1c:	mov	r1, #0
  20:	ldr	r0, [fp, #-16]
  24:	bl	0 <memchr>
  28:	str	r0, [fp, #-8]
  2c:	ldr	r3, [fp, #-8]
  30:	cmp	r3, #0
  34:	beq	48 <pstrnlen+0x48>
  38:	ldr	r2, [fp, #-8]
  3c:	ldr	r3, [fp, #-16]
  40:	sub	r3, r2, r3
  44:	b	4c <pstrnlen+0x4c>
  48:	ldr	r3, [fp, #-20]	; 0xffffffec
  4c:	mov	r0, r3
  50:	sub	sp, fp, #4
  54:	ldr	fp, [sp]
  58:	add	sp, sp, #4
  5c:	pop	{pc}		; (ldr pc, [sp], #4)

00000060 <__flatcc_fb_copy_path_n>:
  60:	str	fp, [sp, #-8]!
  64:	str	lr, [sp, #4]
  68:	add	fp, sp, #4
  6c:	sub	sp, sp, #16
  70:	str	r0, [fp, #-16]
  74:	str	r1, [fp, #-20]	; 0xffffffec
  78:	ldr	r1, [fp, #-20]	; 0xffffffec
  7c:	ldr	r0, [fp, #-16]
  80:	bl	0 <pstrnlen>
  84:	str	r0, [fp, #-8]
  88:	ldr	r3, [fp, #-8]
  8c:	add	r3, r3, #1
  90:	mov	r0, r3
  94:	bl	0 <malloc>
  98:	mov	r3, r0
  9c:	str	r3, [fp, #-12]
  a0:	ldr	r3, [fp, #-12]
  a4:	cmp	r3, #0
  a8:	beq	d0 <__flatcc_fb_copy_path_n+0x70>
  ac:	ldr	r2, [fp, #-8]
  b0:	ldr	r1, [fp, #-16]
  b4:	ldr	r0, [fp, #-12]
  b8:	bl	0 <memcpy>
  bc:	ldr	r2, [fp, #-12]
  c0:	ldr	r3, [fp, #-8]
  c4:	add	r3, r2, r3
  c8:	mov	r2, #0
  cc:	strb	r2, [r3]
  d0:	ldr	r3, [fp, #-12]
  d4:	mov	r0, r3
  d8:	sub	sp, fp, #4
  dc:	ldr	fp, [sp]
  e0:	add	sp, sp, #4
  e4:	pop	{pc}		; (ldr pc, [sp], #4)

000000e8 <__flatcc_fb_copy_path>:
  e8:	str	fp, [sp, #-8]!
  ec:	str	lr, [sp, #4]
  f0:	add	fp, sp, #4
  f4:	sub	sp, sp, #16
  f8:	str	r0, [fp, #-16]
  fc:	ldr	r0, [fp, #-16]
 100:	bl	0 <strlen>
 104:	str	r0, [fp, #-8]
 108:	ldr	r3, [fp, #-8]
 10c:	add	r3, r3, #1
 110:	mov	r0, r3
 114:	bl	0 <malloc>
 118:	mov	r3, r0
 11c:	str	r3, [fp, #-12]
 120:	ldr	r3, [fp, #-12]
 124:	cmp	r3, #0
 128:	beq	150 <__flatcc_fb_copy_path+0x68>
 12c:	ldr	r2, [fp, #-8]
 130:	ldr	r1, [fp, #-16]
 134:	ldr	r0, [fp, #-12]
 138:	bl	0 <memcpy>
 13c:	ldr	r2, [fp, #-12]
 140:	ldr	r3, [fp, #-8]
 144:	add	r3, r2, r3
 148:	mov	r2, #0
 14c:	strb	r2, [r3]
 150:	ldr	r3, [fp, #-12]
 154:	mov	r0, r3
 158:	sub	sp, fp, #4
 15c:	ldr	fp, [sp]
 160:	add	sp, sp, #4
 164:	pop	{pc}		; (ldr pc, [sp], #4)

00000168 <__flatcc_fb_chomp>:
 168:	str	fp, [sp, #-8]!
 16c:	str	lr, [sp, #4]
 170:	add	fp, sp, #4
 174:	sub	sp, sp, #24
 178:	str	r0, [fp, #-16]
 17c:	str	r1, [fp, #-20]	; 0xffffffec
 180:	str	r2, [fp, #-24]	; 0xffffffe8
 184:	ldr	r3, [fp, #-24]	; 0xffffffe8
 188:	cmp	r3, #0
 18c:	beq	1a0 <__flatcc_fb_chomp+0x38>
 190:	ldr	r0, [fp, #-24]	; 0xffffffe8
 194:	bl	0 <strlen>
 198:	mov	r3, r0
 19c:	b	1a4 <__flatcc_fb_chomp+0x3c>
 1a0:	mov	r3, #0
 1a4:	str	r3, [fp, #-8]
 1a8:	ldr	r2, [fp, #-20]	; 0xffffffec
 1ac:	ldr	r3, [fp, #-8]
 1b0:	cmp	r2, r3
 1b4:	bls	1f8 <__flatcc_fb_chomp+0x90>
 1b8:	ldr	r2, [fp, #-20]	; 0xffffffec
 1bc:	ldr	r3, [fp, #-8]
 1c0:	sub	r3, r2, r3
 1c4:	ldr	r2, [fp, #-16]
 1c8:	add	r3, r2, r3
 1cc:	ldr	r2, [fp, #-8]
 1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 1d4:	mov	r0, r3
 1d8:	bl	0 <strncmp>
 1dc:	mov	r3, r0
 1e0:	cmp	r3, #0
 1e4:	bne	1f8 <__flatcc_fb_chomp+0x90>
 1e8:	ldr	r2, [fp, #-20]	; 0xffffffec
 1ec:	ldr	r3, [fp, #-8]
 1f0:	sub	r3, r2, r3
 1f4:	str	r3, [fp, #-20]	; 0xffffffec
 1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
 1fc:	mov	r0, r3
 200:	sub	sp, fp, #4
 204:	ldr	fp, [sp]
 208:	add	sp, sp, #4
 20c:	pop	{pc}		; (ldr pc, [sp], #4)

00000210 <__flatcc_fb_create_join_path_n>:
 210:	str	fp, [sp, #-8]!
 214:	str	lr, [sp, #4]
 218:	add	fp, sp, #4
 21c:	sub	sp, sp, #32
 220:	str	r0, [fp, #-24]	; 0xffffffe8
 224:	str	r1, [fp, #-28]	; 0xffffffe4
 228:	str	r2, [fp, #-32]	; 0xffffffe0
 22c:	str	r3, [fp, #-36]	; 0xffffffdc
 230:	ldr	r3, [fp, #4]
 234:	cmp	r3, #0
 238:	beq	24c <__flatcc_fb_create_join_path_n+0x3c>
 23c:	ldr	r0, [fp, #4]
 240:	bl	0 <strlen>
 244:	mov	r3, r0
 248:	b	250 <__flatcc_fb_create_join_path_n+0x40>
 24c:	mov	r3, #0
 250:	str	r3, [fp, #-12]
 254:	ldr	r3, [fp, #-24]	; 0xffffffe8
 258:	cmp	r3, #0
 25c:	beq	2ac <__flatcc_fb_create_join_path_n+0x9c>
 260:	ldr	r3, [fp, #-36]	; 0xffffffdc
 264:	cmp	r3, #0
 268:	beq	28c <__flatcc_fb_create_join_path_n+0x7c>
 26c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 270:	ldrb	r3, [r3]
 274:	cmp	r3, #47	; 0x2f
 278:	beq	2ac <__flatcc_fb_create_join_path_n+0x9c>
 27c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 280:	ldrb	r3, [r3]
 284:	cmp	r3, #92	; 0x5c
 288:	beq	2ac <__flatcc_fb_create_join_path_n+0x9c>
 28c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 290:	cmp	r3, #1
 294:	bls	2b4 <__flatcc_fb_create_join_path_n+0xa4>
 298:	ldr	r3, [fp, #-32]	; 0xffffffe0
 29c:	add	r3, r3, #1
 2a0:	ldrb	r3, [r3]
 2a4:	cmp	r3, #58	; 0x3a
 2a8:	bne	2b4 <__flatcc_fb_create_join_path_n+0xa4>
 2ac:	mov	r3, #0
 2b0:	str	r3, [fp, #-28]	; 0xffffffe4
 2b4:	ldr	r3, [fp, #8]
 2b8:	cmp	r3, #0
 2bc:	beq	30c <__flatcc_fb_create_join_path_n+0xfc>
 2c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2c4:	cmp	r3, #0
 2c8:	beq	304 <__flatcc_fb_create_join_path_n+0xf4>
 2cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2d0:	sub	r3, r3, #1
 2d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 2d8:	add	r3, r2, r3
 2dc:	ldrb	r3, [r3]
 2e0:	cmp	r3, #47	; 0x2f
 2e4:	beq	304 <__flatcc_fb_create_join_path_n+0xf4>
 2e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2ec:	sub	r3, r3, #1
 2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
 2f4:	add	r3, r2, r3
 2f8:	ldrb	r3, [r3]
 2fc:	cmp	r3, #92	; 0x5c
 300:	bne	30c <__flatcc_fb_create_join_path_n+0xfc>
 304:	mov	r3, #0
 308:	str	r3, [fp, #8]
 30c:	ldr	r2, [fp, #8]
 310:	ldr	r3, [fp, #-28]	; 0xffffffe4
 314:	add	r2, r2, r3
 318:	ldr	r3, [fp, #-36]	; 0xffffffdc
 31c:	add	r2, r2, r3
 320:	ldr	r3, [fp, #-12]
 324:	add	r3, r2, r3
 328:	add	r3, r3, #1
 32c:	mov	r0, r3
 330:	bl	0 <malloc>
 334:	mov	r3, r0
 338:	str	r3, [fp, #-16]
 33c:	ldr	r3, [fp, #-16]
 340:	cmp	r3, #0
 344:	bne	350 <__flatcc_fb_create_join_path_n+0x140>
 348:	mov	r3, #0
 34c:	b	410 <__flatcc_fb_create_join_path_n+0x200>
 350:	mov	r3, #0
 354:	str	r3, [fp, #-8]
 358:	ldr	r2, [fp, #-28]	; 0xffffffe4
 35c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 360:	ldr	r0, [fp, #-16]
 364:	bl	0 <memcpy>
 368:	ldr	r2, [fp, #-8]
 36c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 370:	add	r3, r2, r3
 374:	str	r3, [fp, #-8]
 378:	ldr	r3, [fp, #8]
 37c:	cmp	r3, #0
 380:	beq	3a0 <__flatcc_fb_create_join_path_n+0x190>
 384:	ldr	r3, [fp, #-8]
 388:	add	r2, r3, #1
 38c:	str	r2, [fp, #-8]
 390:	ldr	r2, [fp, #-16]
 394:	add	r3, r2, r3
 398:	mov	r2, #47	; 0x2f
 39c:	strb	r2, [r3]
 3a0:	ldr	r2, [fp, #-16]
 3a4:	ldr	r3, [fp, #-8]
 3a8:	add	r3, r2, r3
 3ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
 3b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
 3b4:	mov	r0, r3
 3b8:	bl	0 <memcpy>
 3bc:	ldr	r2, [fp, #-8]
 3c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
 3c4:	add	r3, r2, r3
 3c8:	str	r3, [fp, #-8]
 3cc:	ldr	r2, [fp, #-16]
 3d0:	ldr	r3, [fp, #-8]
 3d4:	add	r3, r2, r3
 3d8:	ldr	r2, [fp, #-12]
 3dc:	ldr	r1, [fp, #4]
 3e0:	mov	r0, r3
 3e4:	bl	0 <memcpy>
 3e8:	ldr	r2, [fp, #-8]
 3ec:	ldr	r3, [fp, #-12]
 3f0:	add	r3, r2, r3
 3f4:	str	r3, [fp, #-8]
 3f8:	ldr	r2, [fp, #-16]
 3fc:	ldr	r3, [fp, #-8]
 400:	add	r3, r2, r3
 404:	mov	r2, #0
 408:	strb	r2, [r3]
 40c:	ldr	r3, [fp, #-16]
 410:	mov	r0, r3
 414:	sub	sp, fp, #4
 418:	ldr	fp, [sp]
 41c:	add	sp, sp, #4
 420:	pop	{pc}		; (ldr pc, [sp], #4)

00000424 <__flatcc_fb_create_join_path>:
 424:	str	r4, [sp, #-12]!
 428:	str	fp, [sp, #4]
 42c:	str	lr, [sp, #8]
 430:	add	fp, sp, #8
 434:	sub	sp, sp, #28
 438:	str	r0, [fp, #-16]
 43c:	str	r1, [fp, #-20]	; 0xffffffec
 440:	str	r2, [fp, #-24]	; 0xffffffe8
 444:	str	r3, [fp, #-28]	; 0xffffffe4
 448:	ldr	r3, [fp, #-16]
 44c:	cmp	r3, #0
 450:	beq	464 <__flatcc_fb_create_join_path+0x40>
 454:	ldr	r0, [fp, #-16]
 458:	bl	0 <strlen>
 45c:	mov	r4, r0
 460:	b	468 <__flatcc_fb_create_join_path+0x44>
 464:	mov	r4, #0
 468:	ldr	r3, [fp, #-20]	; 0xffffffec
 46c:	cmp	r3, #0
 470:	beq	484 <__flatcc_fb_create_join_path+0x60>
 474:	ldr	r0, [fp, #-20]	; 0xffffffec
 478:	bl	0 <strlen>
 47c:	mov	r2, r0
 480:	b	488 <__flatcc_fb_create_join_path+0x64>
 484:	mov	r2, #0
 488:	ldr	r3, [fp, #-28]	; 0xffffffe4
 48c:	str	r3, [sp, #4]
 490:	ldr	r3, [fp, #-24]	; 0xffffffe8
 494:	str	r3, [sp]
 498:	mov	r3, r2
 49c:	ldr	r2, [fp, #-20]	; 0xffffffec
 4a0:	mov	r1, r4
 4a4:	ldr	r0, [fp, #-16]
 4a8:	bl	210 <__flatcc_fb_create_join_path_n>
 4ac:	mov	r3, r0
 4b0:	mov	r0, r3
 4b4:	sub	sp, fp, #8
 4b8:	ldr	r4, [sp]
 4bc:	ldr	fp, [sp, #4]
 4c0:	add	sp, sp, #8
 4c4:	pop	{pc}		; (ldr pc, [sp], #4)

000004c8 <__flatcc_fb_create_path_ext_n>:
 4c8:	str	fp, [sp, #-8]!
 4cc:	str	lr, [sp, #4]
 4d0:	add	fp, sp, #4
 4d4:	sub	sp, sp, #24
 4d8:	str	r0, [fp, #-8]
 4dc:	str	r1, [fp, #-12]
 4e0:	str	r2, [fp, #-16]
 4e4:	mov	r3, #0
 4e8:	str	r3, [sp, #4]
 4ec:	ldr	r3, [fp, #-16]
 4f0:	str	r3, [sp]
 4f4:	ldr	r3, [fp, #-12]
 4f8:	ldr	r2, [fp, #-8]
 4fc:	mov	r1, #0
 500:	mov	r0, #0
 504:	bl	210 <__flatcc_fb_create_join_path_n>
 508:	mov	r3, r0
 50c:	mov	r0, r3
 510:	sub	sp, fp, #4
 514:	ldr	fp, [sp]
 518:	add	sp, sp, #4
 51c:	pop	{pc}		; (ldr pc, [sp], #4)

00000520 <__flatcc_fb_create_path_ext>:
 520:	str	fp, [sp, #-8]!
 524:	str	lr, [sp, #4]
 528:	add	fp, sp, #4
 52c:	sub	sp, sp, #8
 530:	str	r0, [fp, #-8]
 534:	str	r1, [fp, #-12]
 538:	mov	r3, #0
 53c:	ldr	r2, [fp, #-12]
 540:	ldr	r1, [fp, #-8]
 544:	mov	r0, #0
 548:	bl	424 <__flatcc_fb_create_join_path>
 54c:	mov	r3, r0
 550:	mov	r0, r3
 554:	sub	sp, fp, #4
 558:	ldr	fp, [sp]
 55c:	add	sp, sp, #4
 560:	pop	{pc}		; (ldr pc, [sp], #4)

00000564 <__flatcc_fb_create_make_path_n>:
 564:	str	fp, [sp, #-8]!
 568:	str	lr, [sp, #4]
 56c:	add	fp, sp, #4
 570:	sub	sp, sp, #24
 574:	str	r0, [fp, #-24]	; 0xffffffe8
 578:	str	r1, [fp, #-28]	; 0xffffffe4
 57c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 580:	cmp	r3, #1
 584:	bne	604 <__flatcc_fb_create_make_path_n+0xa0>
 588:	ldr	r3, [fp, #-24]	; 0xffffffe8
 58c:	ldrb	r3, [r3]
 590:	cmp	r3, #32
 594:	beq	5a8 <__flatcc_fb_create_make_path_n+0x44>
 598:	ldr	r3, [fp, #-24]	; 0xffffffe8
 59c:	ldrb	r3, [r3]
 5a0:	cmp	r3, #92	; 0x5c
 5a4:	bne	604 <__flatcc_fb_create_make_path_n+0xa0>
 5a8:	mov	r0, #3
 5ac:	bl	0 <malloc>
 5b0:	mov	r3, r0
 5b4:	str	r3, [fp, #-20]	; 0xffffffec
 5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
 5bc:	cmp	r3, #0
 5c0:	bne	5cc <__flatcc_fb_create_make_path_n+0x68>
 5c4:	mov	r3, #0
 5c8:	b	87c <__flatcc_fb_create_make_path_n+0x318>
 5cc:	ldr	r3, [fp, #-20]	; 0xffffffec
 5d0:	mov	r2, #92	; 0x5c
 5d4:	strb	r2, [r3]
 5d8:	ldr	r3, [fp, #-20]	; 0xffffffec
 5dc:	add	r3, r3, #1
 5e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
 5e4:	ldrb	r2, [r2]
 5e8:	strb	r2, [r3]
 5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
 5f0:	add	r3, r3, #2
 5f4:	mov	r2, #0
 5f8:	strb	r2, [r3]
 5fc:	ldr	r3, [fp, #-20]	; 0xffffffec
 600:	b	87c <__flatcc_fb_create_make_path_n+0x318>
 604:	ldr	r3, [fp, #-28]	; 0xffffffe4
 608:	cmp	r3, #1
 60c:	bhi	624 <__flatcc_fb_create_make_path_n+0xc0>
 610:	ldr	r1, [fp, #-28]	; 0xffffffe4
 614:	ldr	r0, [fp, #-24]	; 0xffffffe8
 618:	bl	60 <__flatcc_fb_copy_path_n>
 61c:	mov	r3, r0
 620:	b	87c <__flatcc_fb_create_make_path_n+0x318>
 624:	mov	r3, #0
 628:	str	r3, [fp, #-8]
 62c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 630:	str	r3, [fp, #-16]
 634:	b	6b4 <__flatcc_fb_create_make_path_n+0x150>
 638:	ldr	r2, [fp, #-24]	; 0xffffffe8
 63c:	ldr	r3, [fp, #-8]
 640:	add	r3, r2, r3
 644:	ldrb	r3, [r3]
 648:	cmp	r3, #92	; 0x5c
 64c:	bne	678 <__flatcc_fb_create_make_path_n+0x114>
 650:	ldr	r3, [fp, #-8]
 654:	add	r3, r3, #1
 658:	ldr	r2, [fp, #-24]	; 0xffffffe8
 65c:	add	r3, r2, r3
 660:	ldrb	r3, [r3]
 664:	cmp	r3, #32
 668:	bne	678 <__flatcc_fb_create_make_path_n+0x114>
 66c:	ldr	r3, [fp, #-16]
 670:	add	r3, r3, #1
 674:	str	r3, [fp, #-16]
 678:	ldr	r2, [fp, #-24]	; 0xffffffe8
 67c:	ldr	r3, [fp, #-8]
 680:	add	r3, r2, r3
 684:	ldrb	r3, [r3]
 688:	cmp	r3, #32
 68c:	moveq	r3, #1
 690:	movne	r3, #0
 694:	uxtb	r3, r3
 698:	mov	r2, r3
 69c:	ldr	r3, [fp, #-16]
 6a0:	add	r3, r3, r2
 6a4:	str	r3, [fp, #-16]
 6a8:	ldr	r3, [fp, #-8]
 6ac:	add	r3, r3, #1
 6b0:	str	r3, [fp, #-8]
 6b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 6b8:	sub	r3, r3, #1
 6bc:	ldr	r2, [fp, #-8]
 6c0:	cmp	r2, r3
 6c4:	bcc	638 <__flatcc_fb_create_make_path_n+0xd4>
 6c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 6cc:	ldr	r3, [fp, #-8]
 6d0:	add	r3, r2, r3
 6d4:	ldrb	r3, [r3]
 6d8:	cmp	r3, #32
 6dc:	moveq	r3, #1
 6e0:	movne	r3, #0
 6e4:	uxtb	r3, r3
 6e8:	mov	r2, r3
 6ec:	ldr	r3, [fp, #-16]
 6f0:	add	r3, r3, r2
 6f4:	str	r3, [fp, #-16]
 6f8:	ldr	r3, [fp, #-16]
 6fc:	add	r3, r3, #1
 700:	mov	r0, r3
 704:	bl	0 <malloc>
 708:	mov	r3, r0
 70c:	str	r3, [fp, #-20]	; 0xffffffec
 710:	ldr	r3, [fp, #-20]	; 0xffffffec
 714:	cmp	r3, #0
 718:	bne	724 <__flatcc_fb_create_make_path_n+0x1c0>
 71c:	mov	r3, #0
 720:	b	87c <__flatcc_fb_create_make_path_n+0x318>
 724:	mov	r3, #0
 728:	str	r3, [fp, #-8]
 72c:	mov	r3, #0
 730:	str	r3, [fp, #-12]
 734:	b	7f4 <__flatcc_fb_create_make_path_n+0x290>
 738:	ldr	r2, [fp, #-24]	; 0xffffffe8
 73c:	ldr	r3, [fp, #-8]
 740:	add	r3, r2, r3
 744:	ldrb	r3, [r3]
 748:	cmp	r3, #92	; 0x5c
 74c:	bne	788 <__flatcc_fb_create_make_path_n+0x224>
 750:	ldr	r3, [fp, #-8]
 754:	add	r3, r3, #1
 758:	ldr	r2, [fp, #-24]	; 0xffffffe8
 75c:	add	r3, r2, r3
 760:	ldrb	r3, [r3]
 764:	cmp	r3, #32
 768:	bne	788 <__flatcc_fb_create_make_path_n+0x224>
 76c:	ldr	r3, [fp, #-12]
 770:	add	r2, r3, #1
 774:	str	r2, [fp, #-12]
 778:	ldr	r2, [fp, #-20]	; 0xffffffec
 77c:	add	r3, r2, r3
 780:	mov	r2, #92	; 0x5c
 784:	strb	r2, [r3]
 788:	ldr	r2, [fp, #-24]	; 0xffffffe8
 78c:	ldr	r3, [fp, #-8]
 790:	add	r3, r2, r3
 794:	ldrb	r3, [r3]
 798:	cmp	r3, #32
 79c:	bne	7bc <__flatcc_fb_create_make_path_n+0x258>
 7a0:	ldr	r3, [fp, #-12]
 7a4:	add	r2, r3, #1
 7a8:	str	r2, [fp, #-12]
 7ac:	ldr	r2, [fp, #-20]	; 0xffffffec
 7b0:	add	r3, r2, r3
 7b4:	mov	r2, #92	; 0x5c
 7b8:	strb	r2, [r3]
 7bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 7c0:	ldr	r3, [fp, #-8]
 7c4:	add	r2, r2, r3
 7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
 7cc:	ldr	r3, [fp, #-12]
 7d0:	add	r3, r1, r3
 7d4:	ldrb	r2, [r2]
 7d8:	strb	r2, [r3]
 7dc:	ldr	r3, [fp, #-8]
 7e0:	add	r3, r3, #1
 7e4:	str	r3, [fp, #-8]
 7e8:	ldr	r3, [fp, #-12]
 7ec:	add	r3, r3, #1
 7f0:	str	r3, [fp, #-12]
 7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7f8:	sub	r3, r3, #1
 7fc:	ldr	r2, [fp, #-8]
 800:	cmp	r2, r3
 804:	bcc	738 <__flatcc_fb_create_make_path_n+0x1d4>
 808:	ldr	r2, [fp, #-24]	; 0xffffffe8
 80c:	ldr	r3, [fp, #-8]
 810:	add	r3, r2, r3
 814:	ldrb	r3, [r3]
 818:	cmp	r3, #32
 81c:	bne	83c <__flatcc_fb_create_make_path_n+0x2d8>
 820:	ldr	r3, [fp, #-12]
 824:	add	r2, r3, #1
 828:	str	r2, [fp, #-12]
 82c:	ldr	r2, [fp, #-20]	; 0xffffffec
 830:	add	r3, r2, r3
 834:	mov	r2, #92	; 0x5c
 838:	strb	r2, [r3]
 83c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 840:	ldr	r3, [fp, #-8]
 844:	add	r2, r2, r3
 848:	ldr	r3, [fp, #-12]
 84c:	add	r1, r3, #1
 850:	str	r1, [fp, #-12]
 854:	ldr	r1, [fp, #-20]	; 0xffffffec
 858:	add	r3, r1, r3
 85c:	ldrb	r2, [r2]
 860:	strb	r2, [r3]
 864:	ldr	r2, [fp, #-20]	; 0xffffffec
 868:	ldr	r3, [fp, #-12]
 86c:	add	r3, r2, r3
 870:	mov	r2, #0
 874:	strb	r2, [r3]
 878:	ldr	r3, [fp, #-20]	; 0xffffffec
 87c:	mov	r0, r3
 880:	sub	sp, fp, #4
 884:	ldr	fp, [sp]
 888:	add	sp, sp, #4
 88c:	pop	{pc}		; (ldr pc, [sp], #4)

00000890 <__flatcc_fb_create_make_path>:
 890:	str	fp, [sp, #-8]!
 894:	str	lr, [sp, #4]
 898:	add	fp, sp, #4
 89c:	sub	sp, sp, #8
 8a0:	str	r0, [fp, #-8]
 8a4:	ldr	r0, [fp, #-8]
 8a8:	bl	0 <strlen>
 8ac:	mov	r3, r0
 8b0:	mov	r1, r3
 8b4:	ldr	r0, [fp, #-8]
 8b8:	bl	564 <__flatcc_fb_create_make_path_n>
 8bc:	mov	r3, r0
 8c0:	mov	r0, r3
 8c4:	sub	sp, fp, #4
 8c8:	ldr	fp, [sp]
 8cc:	add	sp, sp, #4
 8d0:	pop	{pc}		; (ldr pc, [sp], #4)

000008d4 <__flatcc_fb_find_basename>:
 8d4:	push	{fp}		; (str fp, [sp, #-4]!)
 8d8:	add	fp, sp, #0
 8dc:	sub	sp, sp, #20
 8e0:	str	r0, [fp, #-16]
 8e4:	str	r1, [fp, #-20]	; 0xffffffec
 8e8:	ldr	r3, [fp, #-16]
 8ec:	str	r3, [fp, #-8]
 8f0:	ldr	r2, [fp, #-8]
 8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 8f8:	add	r3, r2, r3
 8fc:	str	r3, [fp, #-8]
 900:	b	940 <__flatcc_fb_find_basename+0x6c>
 904:	ldr	r3, [fp, #-8]
 908:	sub	r3, r3, #1
 90c:	str	r3, [fp, #-8]
 910:	ldr	r3, [fp, #-8]
 914:	ldrb	r3, [r3]
 918:	cmp	r3, #47	; 0x2f
 91c:	beq	930 <__flatcc_fb_find_basename+0x5c>
 920:	ldr	r3, [fp, #-8]
 924:	ldrb	r3, [r3]
 928:	cmp	r3, #92	; 0x5c
 92c:	bne	940 <__flatcc_fb_find_basename+0x6c>
 930:	ldr	r3, [fp, #-8]
 934:	add	r3, r3, #1
 938:	str	r3, [fp, #-8]
 93c:	b	950 <__flatcc_fb_find_basename+0x7c>
 940:	ldr	r2, [fp, #-8]
 944:	ldr	r3, [fp, #-16]
 948:	cmp	r2, r3
 94c:	bne	904 <__flatcc_fb_find_basename+0x30>
 950:	ldr	r2, [fp, #-8]
 954:	ldr	r3, [fp, #-16]
 958:	sub	r3, r2, r3
 95c:	mov	r0, r3
 960:	add	sp, fp, #0
 964:	pop	{fp}		; (ldr fp, [sp], #4)
 968:	bx	lr

0000096c <__flatcc_fb_create_basename>:
 96c:	str	fp, [sp, #-8]!
 970:	str	lr, [sp, #4]
 974:	add	fp, sp, #4
 978:	sub	sp, sp, #24
 97c:	str	r0, [fp, #-16]
 980:	str	r1, [fp, #-20]	; 0xffffffec
 984:	str	r2, [fp, #-24]	; 0xffffffe8
 988:	ldr	r1, [fp, #-20]	; 0xffffffec
 98c:	ldr	r0, [fp, #-16]
 990:	bl	8d4 <__flatcc_fb_find_basename>
 994:	str	r0, [fp, #-8]
 998:	ldr	r2, [fp, #-16]
 99c:	ldr	r3, [fp, #-8]
 9a0:	add	r3, r2, r3
 9a4:	str	r3, [fp, #-16]
 9a8:	ldr	r2, [fp, #-20]	; 0xffffffec
 9ac:	ldr	r3, [fp, #-8]
 9b0:	sub	r3, r2, r3
 9b4:	str	r3, [fp, #-20]	; 0xffffffec
 9b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 9bc:	ldr	r1, [fp, #-20]	; 0xffffffec
 9c0:	ldr	r0, [fp, #-16]
 9c4:	bl	168 <__flatcc_fb_chomp>
 9c8:	str	r0, [fp, #-20]	; 0xffffffec
 9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
 9d0:	add	r3, r3, #1
 9d4:	mov	r0, r3
 9d8:	bl	0 <malloc>
 9dc:	mov	r3, r0
 9e0:	str	r3, [fp, #-12]
 9e4:	ldr	r3, [fp, #-12]
 9e8:	cmp	r3, #0
 9ec:	beq	a14 <__flatcc_fb_create_basename+0xa8>
 9f0:	ldr	r2, [fp, #-20]	; 0xffffffec
 9f4:	ldr	r1, [fp, #-16]
 9f8:	ldr	r0, [fp, #-12]
 9fc:	bl	0 <memcpy>
 a00:	ldr	r2, [fp, #-12]
 a04:	ldr	r3, [fp, #-20]	; 0xffffffec
 a08:	add	r3, r2, r3
 a0c:	mov	r2, #0
 a10:	strb	r2, [r3]
 a14:	ldr	r3, [fp, #-12]
 a18:	mov	r0, r3
 a1c:	sub	sp, fp, #4
 a20:	ldr	fp, [sp]
 a24:	add	sp, sp, #4
 a28:	pop	{pc}		; (ldr pc, [sp], #4)

00000a2c <__flatcc_fb_read_file>:
 a2c:	str	fp, [sp, #-8]!
 a30:	str	lr, [sp, #4]
 a34:	add	fp, sp, #4
 a38:	sub	sp, sp, #40	; 0x28
 a3c:	str	r0, [fp, #-32]	; 0xffffffe0
 a40:	str	r1, [fp, #-36]	; 0xffffffdc
 a44:	str	r2, [fp, #-40]	; 0xffffffd8
 a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a4c:	cmp	r3, #0
 a50:	bne	a5c <__flatcc_fb_read_file+0x30>
 a54:	sub	r3, fp, #28
 a58:	b	a60 <__flatcc_fb_read_file+0x34>
 a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a60:	str	r3, [fp, #-40]	; 0xffffffd8
 a64:	movw	r1, #0
 a68:	movt	r1, #0
 a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 a70:	bl	0 <fopen>
 a74:	str	r0, [fp, #-20]	; 0xffffffec
 a78:	mov	r3, #0
 a7c:	str	r3, [fp, #-8]
 a80:	mov	r3, #0
 a84:	str	r3, [fp, #-16]
 a88:	ldr	r3, [fp, #-20]	; 0xffffffec
 a8c:	cmp	r3, #0
 a90:	beq	b94 <__flatcc_fb_read_file+0x168>
 a94:	mov	r2, #2
 a98:	mov	r1, #0
 a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
 aa0:	bl	0 <fseek>
 aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
 aa8:	bl	0 <ftell>
 aac:	mov	r3, r0
 ab0:	str	r3, [fp, #-8]
 ab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 ab8:	ldr	r2, [fp, #-8]
 abc:	str	r2, [r3]
 ac0:	ldr	r3, [fp, #-36]	; 0xffffffdc
 ac4:	cmp	r3, #0
 ac8:	beq	adc <__flatcc_fb_read_file+0xb0>
 acc:	ldr	r2, [fp, #-8]
 ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
 ad4:	cmp	r2, r3
 ad8:	bhi	b9c <__flatcc_fb_read_file+0x170>
 adc:	ldr	r0, [fp, #-20]	; 0xffffffec
 ae0:	bl	0 <rewind>
 ae4:	ldr	r3, [fp, #-8]
 ae8:	cmp	r3, #0
 aec:	beq	af8 <__flatcc_fb_read_file+0xcc>
 af0:	ldr	r3, [fp, #-8]
 af4:	b	afc <__flatcc_fb_read_file+0xd0>
 af8:	mov	r3, #1
 afc:	mov	r0, r3
 b00:	bl	0 <malloc>
 b04:	mov	r3, r0
 b08:	str	r3, [fp, #-16]
 b0c:	ldr	r3, [fp, #-16]
 b10:	cmp	r3, #0
 b14:	beq	ba4 <__flatcc_fb_read_file+0x178>
 b18:	mov	r3, #0
 b1c:	str	r3, [fp, #-12]
 b20:	b	b34 <__flatcc_fb_read_file+0x108>
 b24:	ldr	r2, [fp, #-12]
 b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b2c:	add	r3, r2, r3
 b30:	str	r3, [fp, #-12]
 b34:	ldr	r2, [fp, #-16]
 b38:	ldr	r3, [fp, #-12]
 b3c:	add	r0, r2, r3
 b40:	ldr	r2, [fp, #-8]
 b44:	ldr	r3, [fp, #-12]
 b48:	sub	r2, r2, r3
 b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
 b50:	mov	r1, #1
 b54:	bl	0 <fread>
 b58:	str	r0, [fp, #-24]	; 0xffffffe8
 b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 b60:	cmp	r3, #0
 b64:	bne	b24 <__flatcc_fb_read_file+0xf8>
 b68:	ldr	r2, [fp, #-12]
 b6c:	ldr	r3, [fp, #-8]
 b70:	cmp	r2, r3
 b74:	bne	bac <__flatcc_fb_read_file+0x180>
 b78:	ldr	r0, [fp, #-20]	; 0xffffffec
 b7c:	bl	0 <fclose>
 b80:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b84:	ldr	r2, [fp, #-8]
 b88:	str	r2, [r3]
 b8c:	ldr	r3, [fp, #-16]
 b90:	b	be8 <__flatcc_fb_read_file+0x1bc>
 b94:	nop	{0}
 b98:	b	bb0 <__flatcc_fb_read_file+0x184>
 b9c:	nop	{0}
 ba0:	b	bb0 <__flatcc_fb_read_file+0x184>
 ba4:	nop	{0}
 ba8:	b	bb0 <__flatcc_fb_read_file+0x184>
 bac:	nop	{0}
 bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
 bb4:	cmp	r3, #0
 bb8:	beq	bc4 <__flatcc_fb_read_file+0x198>
 bbc:	ldr	r0, [fp, #-20]	; 0xffffffec
 bc0:	bl	0 <fclose>
 bc4:	ldr	r3, [fp, #-16]
 bc8:	cmp	r3, #0
 bcc:	beq	bd8 <__flatcc_fb_read_file+0x1ac>
 bd0:	ldr	r0, [fp, #-16]
 bd4:	bl	0 <free>
 bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 bdc:	ldr	r2, [fp, #-8]
 be0:	str	r2, [r3]
 be4:	mov	r3, #0
 be8:	mov	r0, r3
 bec:	sub	sp, fp, #4
 bf0:	ldr	fp, [sp]
 bf4:	add	sp, sp, #4
 bf8:	pop	{pc}		; (ldr pc, [sp], #4)
