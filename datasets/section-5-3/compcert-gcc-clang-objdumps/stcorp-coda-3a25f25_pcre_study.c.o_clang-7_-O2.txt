
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_pcre_study>:
       0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
       4:	add	fp, sp, #24
       8:	sub	sp, sp, #200	; 0xc8
       c:	mov	r7, #0
      10:	mov	r4, r2
      14:	cmp	r0, #0
      18:	str	r7, [fp, #-28]	; 0xffffffe4
      1c:	str	r7, [r2]
      20:	beq	58 <coda_pcre_study+0x58>
      24:	mov	r6, r0
      28:	ldr	r0, [r0]
      2c:	mov	r5, r1
      30:	movw	r1, #21061	; 0x5245
      34:	movt	r1, #20547	; 0x5043
      38:	cmp	r0, r1
      3c:	bne	58 <coda_pcre_study+0x58>
      40:	ldr	r0, [r6, #12]
      44:	tst	r0, #1
      48:	bne	68 <coda_pcre_study+0x68>
      4c:	movw	r0, #0
      50:	movt	r0, #0
      54:	b	16c <coda_pcre_study+0x16c>
      58:	movw	r0, #0
      5c:	movt	r0, #0
      60:	str	r0, [r4]
      64:	b	174 <coda_pcre_study+0x174>
      68:	cmp	r5, #16
      6c:	bcc	7c <coda_pcre_study+0x7c>
      70:	movw	r0, #0
      74:	movt	r0, #0
      78:	b	16c <coda_pcre_study+0x16c>
      7c:	ldrh	r1, [r6, #34]	; 0x22
      80:	ldrh	r2, [r6, #38]	; 0x26
      84:	ldrh	r3, [r6, #36]	; 0x24
      88:	and	r0, r0, #272	; 0x110
      8c:	mov	r8, #0
      90:	mov	r9, #0
      94:	add	r1, r6, r1
      98:	mla	r7, r3, r2, r1
      9c:	ldr	r3, [r6, #8]
      a0:	and	r1, r3, #16
      a4:	orrs	r0, r1, r0
      a8:	bne	128 <coda_pcre_study+0x128>
      ac:	ldr	r0, [r6, #48]	; 0x30
      b0:	cmp	r0, #0
      b4:	str	r0, [fp, #-68]	; 0xffffffbc
      b8:	bne	d4 <coda_pcre_study+0xd4>
      bc:	sub	r3, fp, #68	; 0x44
      c0:	mov	r0, r6
      c4:	mov	r1, #0
      c8:	mov	r2, #11
      cc:	bl	0 <coda_pcre_fullinfo>
      d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
      d4:	sub	r1, fp, #64	; 0x40
      d8:	vmov.i32	q8, #0	; 0x00000000
      dc:	str	r0, [sp, #12]
      e0:	mov	r2, r1
      e4:	vst1.64	{d16-d17}, [r2]!
      e8:	vst1.64	{d16-d17}, [r2]
      ec:	add	r2, r0, #256	; 0x100
      f0:	str	r2, [sp, #16]
      f4:	add	r2, r0, #512	; 0x200
      f8:	add	r0, r0, #832	; 0x340
      fc:	str	r2, [sp, #20]
     100:	str	r0, [sp, #24]
     104:	add	r2, sp, #12
     108:	mov	r0, r7
     10c:	bl	258 <set_start_bits>
     110:	cmp	r0, #3
     114:	beq	164 <coda_pcre_study+0x164>
     118:	ldr	r3, [r6, #8]
     11c:	sub	r0, r0, #1
     120:	clz	r0, r0
     124:	lsr	r9, r0, #5
     128:	sub	r0, fp, #28
     12c:	mov	r1, r7
     130:	mov	r2, r7
     134:	str	r8, [sp]
     138:	str	r0, [sp, #4]
     13c:	mov	r0, r6
     140:	bl	be8 <find_minlength>
     144:	cmn	r0, #3
     148:	beq	164 <coda_pcre_study+0x164>
     14c:	mov	r6, r0
     150:	cmn	r0, #2
     154:	bne	180 <coda_pcre_study+0x180>
     158:	movw	r0, #0
     15c:	movt	r0, #0
     160:	b	16c <coda_pcre_study+0x16c>
     164:	movw	r0, #0
     168:	movt	r0, #0
     16c:	str	r0, [r4]
     170:	mov	r7, #0
     174:	mov	r0, r7
     178:	sub	sp, fp, #24
     17c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     180:	tst	r5, #8
     184:	mov	r7, #0
     188:	cmpeq	r9, #0
     18c:	beq	200 <coda_pcre_study+0x200>
     190:	movw	r0, #0
     194:	movt	r0, #0
     198:	ldr	r1, [r0]
     19c:	mov	r0, #76	; 0x4c
     1a0:	blx	r1
     1a4:	cmp	r0, #0
     1a8:	beq	20c <coda_pcre_study+0x20c>
     1ac:	mov	r2, #0
     1b0:	mov	r3, r0
     1b4:	mov	r1, #1
     1b8:	cmp	r9, #0
     1bc:	str	r2, [r0, #36]	; 0x24
     1c0:	mov	r2, #44	; 0x2c
     1c4:	str	r2, [r3, #32]!
     1c8:	stm	r0, {r1, r3}
     1cc:	beq	21c <coda_pcre_study+0x21c>
     1d0:	str	r1, [r0, #36]	; 0x24
     1d4:	sub	r1, fp, #64	; 0x40
     1d8:	add	r2, r0, #40	; 0x28
     1dc:	vld1.64	{d16-d17}, [r1]!
     1e0:	vld1.64	{d18-d19}, [r1]
     1e4:	add	r1, r0, #56	; 0x38
     1e8:	vst1.32	{d16-d17}, [r2]
     1ec:	vst1.32	{d18-d19}, [r1]
     1f0:	mov	r1, #3
     1f4:	cmp	r6, #1
     1f8:	bge	23c <coda_pcre_study+0x23c>
     1fc:	b	248 <coda_pcre_study+0x248>
     200:	cmp	r6, #1
     204:	blt	174 <coda_pcre_study+0x174>
     208:	b	190 <coda_pcre_study+0x190>
     20c:	movw	r0, #0
     210:	movt	r0, #0
     214:	str	r0, [r4]
     218:	b	174 <coda_pcre_study+0x174>
     21c:	vmov.i32	q8, #0	; 0x00000000
     220:	add	r1, r0, #56	; 0x38
     224:	vst1.32	{d16-d17}, [r1]
     228:	add	r1, r0, #40	; 0x28
     22c:	vst1.32	{d16-d17}, [r1]
     230:	mov	r1, #2
     234:	cmp	r6, #1
     238:	blt	248 <coda_pcre_study+0x248>
     23c:	str	r6, [r0, #72]	; 0x48
     240:	str	r1, [r0, #36]	; 0x24
     244:	b	250 <coda_pcre_study+0x250>
     248:	mov	r1, #0
     24c:	str	r1, [r0, #72]	; 0x48
     250:	mov	r7, r0
     254:	b	174 <coda_pcre_study+0x174>

00000258 <set_start_bits>:
     258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     25c:	add	fp, sp, #28
     260:	sub	sp, sp, #4
     264:	mov	r6, r0
     268:	mov	r4, r2
     26c:	add	r0, r1, #31
     270:	mov	r5, r1
     274:	add	r8, r1, #16
     278:	add	r9, r1, #32
     27c:	mov	r1, #1
     280:	ldrb	r2, [r6]
     284:	str	r0, [sp]
     288:	mvn	r0, #132	; 0x84
     28c:	mov	sl, r1
     290:	add	r7, r6, #3
     294:	uxtab	r0, r0, r2
     298:	cmp	r0, #6
     29c:	bhi	2b8 <set_start_bits+0x60>
     2a0:	mov	r1, #1
     2a4:	mov	r2, #99	; 0x63
     2a8:	tst	r2, r1, lsl r0
     2ac:	addne	r7, r6, #5
     2b0:	b	2b8 <set_start_bits+0x60>
     2b4:	add	r7, r7, #3
     2b8:	ldrb	r2, [r7]
     2bc:	mov	r0, #3
     2c0:	cmp	r2, #161	; 0xa1
     2c4:	bhi	be0 <set_start_bits+0x988>
     2c8:	add	r3, pc, #4
     2cc:	mov	r1, #2
     2d0:	ldr	pc, [r3, r2, lsl #2]
     2d4:	.word	0x00000bd0
     2d8:	.word	0x00000bd0
     2dc:	.word	0x00000bd0
     2e0:	.word	0x00000bd0
     2e4:	.word	0x00000758
     2e8:	.word	0x00000758
     2ec:	.word	0x000009a0
     2f0:	.word	0x000009d0
     2f4:	.word	0x000009fc
     2f8:	.word	0x00000a28
     2fc:	.word	0x00000a50
     300:	.word	0x00000a80
     304:	.word	0x00000bd0
     308:	.word	0x00000bd0
     30c:	.word	0x00000bd0
     310:	.word	0x00000bd0
     314:	.word	0x00000aac
     318:	.word	0x00000984
     31c:	.word	0x00000bd0
     320:	.word	0x00000b20
     324:	.word	0x00000bd0
     328:	.word	0x00000984
     32c:	.word	0x00000bd0
     330:	.word	0x00000bd0
     334:	.word	0x00000bd0
     338:	.word	0x00000bd0
     33c:	.word	0x00000bd0
     340:	.word	0x00000bd0
     344:	.word	0x00000bd0
     348:	.word	0x00000b4c
     34c:	.word	0x00000b68
     350:	.word	0x00000bd0
     354:	.word	0x00000bd0
     358:	.word	0x000005c0
     35c:	.word	0x000005c0
     360:	.word	0x00000b4c
     364:	.word	0x00000b4c
     368:	.word	0x000005c0
     36c:	.word	0x000005c0
     370:	.word	0x00000628
     374:	.word	0x00000628
     378:	.word	0x00000b48
     37c:	.word	0x000005c0
     380:	.word	0x00000b4c
     384:	.word	0x000005c0
     388:	.word	0x00000628
     38c:	.word	0x000005e0
     390:	.word	0x000005e0
     394:	.word	0x00000b68
     398:	.word	0x00000b68
     39c:	.word	0x000005e0
     3a0:	.word	0x000005e0
     3a4:	.word	0x00000648
     3a8:	.word	0x00000648
     3ac:	.word	0x00000b64
     3b0:	.word	0x000005e0
     3b4:	.word	0x00000b68
     3b8:	.word	0x000005e0
     3bc:	.word	0x00000648
     3c0:	.word	0x00000bd0
     3c4:	.word	0x00000bd0
     3c8:	.word	0x00000bd0
     3cc:	.word	0x00000bd0
     3d0:	.word	0x00000bd0
     3d4:	.word	0x00000bd0
     3d8:	.word	0x00000bd0
     3dc:	.word	0x00000bd0
     3e0:	.word	0x00000bd0
     3e4:	.word	0x00000bd0
     3e8:	.word	0x00000bd0
     3ec:	.word	0x00000bd0
     3f0:	.word	0x00000bd0
     3f4:	.word	0x00000bd0
     3f8:	.word	0x00000bd0
     3fc:	.word	0x00000bd0
     400:	.word	0x00000bd0
     404:	.word	0x00000bd0
     408:	.word	0x00000bd0
     40c:	.word	0x00000bd0
     410:	.word	0x00000bd0
     414:	.word	0x00000bd0
     418:	.word	0x00000bd0
     41c:	.word	0x00000bd0
     420:	.word	0x00000bd0
     424:	.word	0x00000bd0
     428:	.word	0x0000069c
     42c:	.word	0x0000069c
     430:	.word	0x00000690
     434:	.word	0x00000690
     438:	.word	0x0000069c
     43c:	.word	0x0000069c
     440:	.word	0x00000698
     444:	.word	0x00000698
     448:	.word	0x0000079c
     44c:	.word	0x0000069c
     450:	.word	0x00000690
     454:	.word	0x0000069c
     458:	.word	0x00000698
     45c:	.word	0x00000be0
     460:	.word	0x00000be0
     464:	.word	0x00000be0
     468:	.word	0x00000be0
     46c:	.word	0x00000be0
     470:	.word	0x00000be0
     474:	.word	0x00000be0
     478:	.word	0x00000be0
     47c:	.word	0x00000be0
     480:	.word	0x00000be0
     484:	.word	0x00000be0
     488:	.word	0x00000be0
     48c:	.word	0x00000760
     490:	.word	0x00000760
     494:	.word	0x00000be0
     498:	.word	0x00000bd0
     49c:	.word	0x00000bd0
     4a0:	.word	0x00000bd0
     4a4:	.word	0x00000bd0
     4a8:	.word	0x00000bd0
     4ac:	.word	0x000007a4
     4b0:	.word	0x00000bac
     4b4:	.word	0x00000bdc
     4b8:	.word	0x00000bdc
     4bc:	.word	0x00000bdc
     4c0:	.word	0x00000bdc
     4c4:	.word	0x00000bd0
     4c8:	.word	0x0000055c
     4cc:	.word	0x000005a0
     4d0:	.word	0x000005a0
     4d4:	.word	0x000005a0
     4d8:	.word	0x0000055c
     4dc:	.word	0x0000055c
     4e0:	.word	0x0000055c
     4e4:	.word	0x0000055c
     4e8:	.word	0x0000055c
     4ec:	.word	0x0000055c
     4f0:	.word	0x00000bd0
     4f4:	.word	0x0000055c
     4f8:	.word	0x0000055c
     4fc:	.word	0x0000055c
     500:	.word	0x0000055c
     504:	.word	0x00000bd0
     508:	.word	0x00000bd0
     50c:	.word	0x00000bd0
     510:	.word	0x00000bd0
     514:	.word	0x00000bd0
     518:	.word	0x00000bd0
     51c:	.word	0x00000718
     520:	.word	0x00000718
     524:	.word	0x00000718
     528:	.word	0x00000bd0
     52c:	.word	0x00000bd0
     530:	.word	0x00000bd0
     534:	.word	0x00000bd0
     538:	.word	0x00000bd0
     53c:	.word	0x00000bd0
     540:	.word	0x00000bd0
     544:	.word	0x00000bd0
     548:	.word	0x00000bd0
     54c:	.word	0x00000bd0
     550:	.word	0x00000bd0
     554:	.word	0x00000bd0
     558:	.word	0x000007ac
     55c:	mov	r0, r7
     560:	mov	r1, r5
     564:	mov	r2, r4
     568:	bl	258 <set_start_bits>
     56c:	cmp	r0, #0
     570:	beq	be0 <set_start_bits+0x988>
     574:	cmp	r0, #1
     578:	beq	ba8 <set_start_bits+0x950>
     57c:	cmp	r0, #3
     580:	beq	be0 <set_start_bits+0x988>
     584:	ldrb	r0, [r7, #1]
     588:	ldrb	r1, [r7, #2]
     58c:	orr	r0, r1, r0, lsl #8
     590:	ldrb	r0, [r7, r0]!
     594:	cmp	r0, #119	; 0x77
     598:	beq	584 <set_start_bits+0x32c>
     59c:	b	2b4 <set_start_bits+0x5c>
     5a0:	ldrb	r0, [r7, #1]
     5a4:	ldrb	r1, [r7, #2]
     5a8:	orr	r0, r1, r0, lsl #8
     5ac:	ldrb	r0, [r7, r0]!
     5b0:	cmp	r0, #119	; 0x77
     5b4:	beq	5a0 <set_start_bits+0x348>
     5b8:	add	r7, r7, #3
     5bc:	b	2b8 <set_start_bits+0x60>
     5c0:	ldrb	r0, [r7, #1]
     5c4:	mov	r3, #1
     5c8:	add	r7, r7, #2
     5cc:	ldrb	r1, [r5, r0, lsr #3]
     5d0:	and	r2, r0, #7
     5d4:	orr	r1, r1, r3, lsl r2
     5d8:	strb	r1, [r5, r0, lsr #3]
     5dc:	b	2b8 <set_start_bits+0x60>
     5e0:	ldrb	r0, [r7, #1]
     5e4:	mov	r1, #1
     5e8:	ldrb	r2, [r5, r0, lsr #3]
     5ec:	and	r3, r0, #7
     5f0:	orr	r2, r2, r1, lsl r3
     5f4:	strb	r2, [r5, r0, lsr #3]
     5f8:	ldr	r2, [r4, #12]
     5fc:	ldrb	r2, [r2, r0]
     600:	tst	r2, #2
     604:	beq	620 <set_start_bits+0x3c8>
     608:	ldr	r2, [r4, #4]
     60c:	ldrb	r0, [r2, r0]
     610:	ldrb	r2, [r5, r0, lsr #3]
     614:	and	r3, r0, #7
     618:	orr	r1, r2, r1, lsl r3
     61c:	strb	r1, [r5, r0, lsr #3]
     620:	add	r7, r7, #2
     624:	b	2b8 <set_start_bits+0x60>
     628:	ldrb	r0, [r7, #3]
     62c:	mov	r3, #1
     630:	add	r7, r7, #4
     634:	ldrb	r1, [r5, r0, lsr #3]
     638:	and	r2, r0, #7
     63c:	orr	r1, r1, r3, lsl r2
     640:	strb	r1, [r5, r0, lsr #3]
     644:	b	2b8 <set_start_bits+0x60>
     648:	ldrb	r0, [r7, #3]
     64c:	mov	r1, #1
     650:	ldrb	r2, [r5, r0, lsr #3]
     654:	and	r3, r0, #7
     658:	orr	r2, r2, r1, lsl r3
     65c:	strb	r2, [r5, r0, lsr #3]
     660:	ldr	r2, [r4, #12]
     664:	ldrb	r2, [r2, r0]
     668:	tst	r2, #2
     66c:	beq	688 <set_start_bits+0x430>
     670:	ldr	r2, [r4, #4]
     674:	ldrb	r0, [r2, r0]
     678:	ldrb	r2, [r5, r0, lsr #3]
     67c:	and	r3, r0, #7
     680:	orr	r1, r2, r1, lsl r3
     684:	strb	r1, [r5, r0, lsr #3]
     688:	add	r7, r7, #4
     68c:	b	2b8 <set_start_bits+0x60>
     690:	add	r7, r7, #1
     694:	b	2b8 <set_start_bits+0x60>
     698:	add	r7, r7, #2
     69c:	ldrb	r0, [r7, #1]
     6a0:	sub	r1, r0, #6
     6a4:	mov	r0, #0
     6a8:	cmp	r1, #15
     6ac:	bhi	be0 <set_start_bits+0x988>
     6b0:	add	r2, pc, #0
     6b4:	ldr	pc, [r2, r1, lsl #2]
     6b8:	.word	0x0000081c
     6bc:	.word	0x0000084c
     6c0:	.word	0x00000878
     6c4:	.word	0x000008a4
     6c8:	.word	0x000008cc
     6cc:	.word	0x000008fc
     6d0:	.word	0x00000be0
     6d4:	.word	0x00000be0
     6d8:	.word	0x00000be0
     6dc:	.word	0x00000be0
     6e0:	.word	0x00000be0
     6e4:	.word	0x000006f8
     6e8:	.word	0x00000be0
     6ec:	.word	0x0000092c
     6f0:	.word	0x00000be0
     6f4:	.word	0x000006f8
     6f8:	ldrb	r0, [r5, #1]
     6fc:	ldrb	r1, [r5, #16]
     700:	add	r7, r7, #2
     704:	orr	r0, r0, #60	; 0x3c
     708:	strb	r0, [r5, #1]
     70c:	orr	r0, r1, #32
     710:	strb	r0, [r5, #16]
     714:	b	2b8 <set_start_bits+0x60>
     718:	add	r7, r7, #1
     71c:	mov	r1, r5
     720:	mov	r2, r4
     724:	mov	r0, r7
     728:	bl	258 <set_start_bits>
     72c:	cmp	r0, #0
     730:	cmpne	r0, #3
     734:	beq	be0 <set_start_bits+0x988>
     738:	ldrb	r0, [r7, #1]
     73c:	ldrb	r1, [r7, #2]
     740:	orr	r0, r1, r0, lsl #8
     744:	ldrb	r0, [r7, r0]!
     748:	cmp	r0, #119	; 0x77
     74c:	beq	738 <set_start_bits+0x4e0>
     750:	add	r7, r7, #3
     754:	b	2b8 <set_start_bits+0x60>
     758:	add	r7, r7, #1
     75c:	b	2b8 <set_start_bits+0x60>
     760:	add	r1, r7, #33	; 0x21
     764:	add	r0, r7, #1
     768:	cmp	r1, r5
     76c:	bls	7d0 <set_start_bits+0x578>
     770:	cmp	r0, r9
     774:	bcs	7d0 <set_start_bits+0x578>
     778:	mov	r1, #0
     77c:	ldrb	r2, [r0, r1]
     780:	ldrb	r3, [r5, r1]
     784:	orr	r2, r3, r2
     788:	strb	r2, [r5, r1]
     78c:	add	r1, r1, #1
     790:	cmp	r1, #32
     794:	bne	77c <set_start_bits+0x524>
     798:	b	7f4 <set_start_bits+0x59c>
     79c:	add	r7, r7, #3
     7a0:	b	2b8 <set_start_bits+0x60>
     7a4:	add	r7, r7, #6
     7a8:	b	2b8 <set_start_bits+0x60>
     7ac:	add	r0, r7, #1
     7b0:	ldrb	r1, [r0, #1]
     7b4:	ldrb	r2, [r0, #2]
     7b8:	orr	r1, r2, r1, lsl #8
     7bc:	ldrb	r1, [r0, r1]!
     7c0:	cmp	r1, #119	; 0x77
     7c4:	beq	7b0 <set_start_bits+0x558>
     7c8:	add	r7, r0, #3
     7cc:	b	2b8 <set_start_bits+0x60>
     7d0:	vld1.8	{d16-d17}, [r0]
     7d4:	vld1.8	{d18-d19}, [r5]
     7d8:	add	r0, r7, #17
     7dc:	vorr	q8, q9, q8
     7e0:	vst1.8	{d16-d17}, [r5]
     7e4:	vld1.8	{d16-d17}, [r0]
     7e8:	vld1.8	{d18-d19}, [r8]
     7ec:	vorr	q8, q9, q8
     7f0:	vst1.8	{d16-d17}, [r8]
     7f4:	ldrb	r0, [r7, #33]	; 0x21
     7f8:	sub	r0, r0, #98	; 0x62
     7fc:	cmp	r0, #11
     800:	bhi	ba8 <set_start_bits+0x950>
     804:	mov	r1, #1
     808:	movw	r2, #1331	; 0x533
     80c:	tst	r2, r1, lsl r0
     810:	beq	958 <set_start_bits+0x700>
     814:	add	r7, r7, #34	; 0x22
     818:	b	2b8 <set_start_bits+0x60>
     81c:	mov	r0, #0
     820:	ldr	r2, [r4, #8]
     824:	ldrb	r1, [r5, r0]
     828:	add	r2, r2, r0
     82c:	ldrb	r2, [r2, #64]	; 0x40
     830:	mvn	r2, r2
     834:	orr	r1, r1, r2
     838:	strb	r1, [r5, r0]
     83c:	add	r0, r0, #1
     840:	cmp	r0, #32
     844:	bne	820 <set_start_bits+0x5c8>
     848:	b	924 <set_start_bits+0x6cc>
     84c:	mov	r0, #0
     850:	ldr	r2, [r4, #8]
     854:	ldrb	r1, [r5, r0]
     858:	add	r2, r2, r0
     85c:	ldrb	r2, [r2, #64]	; 0x40
     860:	orr	r1, r1, r2
     864:	strb	r1, [r5, r0]
     868:	add	r0, r0, #1
     86c:	cmp	r0, #32
     870:	bne	850 <set_start_bits+0x5f8>
     874:	b	924 <set_start_bits+0x6cc>
     878:	mov	r0, #0
     87c:	ldr	r2, [r4, #8]
     880:	ldrb	r1, [r5, r0]
     884:	ldrb	r2, [r2, r0]
     888:	mvn	r2, r2
     88c:	orr	r1, r1, r2
     890:	strb	r1, [r5, r0]
     894:	add	r0, r0, #1
     898:	cmp	r0, #32
     89c:	bne	87c <set_start_bits+0x624>
     8a0:	b	924 <set_start_bits+0x6cc>
     8a4:	mov	r0, #0
     8a8:	ldr	r2, [r4, #8]
     8ac:	ldrb	r1, [r5, r0]
     8b0:	ldrb	r2, [r2, r0]
     8b4:	orr	r1, r1, r2
     8b8:	strb	r1, [r5, r0]
     8bc:	add	r0, r0, #1
     8c0:	cmp	r0, #32
     8c4:	bne	8a8 <set_start_bits+0x650>
     8c8:	b	924 <set_start_bits+0x6cc>
     8cc:	mov	r0, #0
     8d0:	ldr	r2, [r4, #8]
     8d4:	ldrb	r1, [r5, r0]
     8d8:	add	r2, r2, r0
     8dc:	ldrb	r2, [r2, #160]	; 0xa0
     8e0:	mvn	r2, r2
     8e4:	orr	r1, r1, r2
     8e8:	strb	r1, [r5, r0]
     8ec:	add	r0, r0, #1
     8f0:	cmp	r0, #32
     8f4:	bne	8d0 <set_start_bits+0x678>
     8f8:	b	924 <set_start_bits+0x6cc>
     8fc:	mov	r0, #0
     900:	ldr	r2, [r4, #8]
     904:	ldrb	r1, [r5, r0]
     908:	add	r2, r2, r0
     90c:	ldrb	r2, [r2, #160]	; 0xa0
     910:	orr	r1, r1, r2
     914:	strb	r1, [r5, r0]
     918:	add	r0, r0, #1
     91c:	cmp	r0, #32
     920:	bne	900 <set_start_bits+0x6a8>
     924:	add	r7, r7, #2
     928:	b	2b8 <set_start_bits+0x60>
     92c:	ldrb	r0, [r5, #1]
     930:	ldrb	r1, [r5, #4]
     934:	ldrb	r2, [r5, #20]
     938:	add	r7, r7, #2
     93c:	orr	r0, r0, #2
     940:	strb	r0, [r5, #1]
     944:	orr	r0, r1, #1
     948:	strb	r0, [r5, #4]
     94c:	orr	r0, r2, #1
     950:	strb	r0, [r5, #20]
     954:	b	2b8 <set_start_bits+0x60>
     958:	mov	r2, #2240	; 0x8c0
     95c:	tst	r2, r1, lsl r0
     960:	beq	ba8 <set_start_bits+0x950>
     964:	ldrb	r1, [r7, #34]	; 0x22
     968:	ldrb	r2, [r7, #35]	; 0x23
     96c:	add	r0, r7, #38	; 0x26
     970:	mov	r7, r0
     974:	orr	r1, r2, r1, lsl #8
     978:	cmp	r1, #0
     97c:	beq	2b8 <set_start_bits+0x60>
     980:	b	ba8 <set_start_bits+0x950>
     984:	ldrb	r0, [r5, #1]
     988:	ldrb	r1, [r5, #16]
     98c:	orr	r0, r0, #60	; 0x3c
     990:	strb	r0, [r5, #1]
     994:	orr	r0, r1, #32
     998:	strb	r0, [r5, #16]
     99c:	b	ba8 <set_start_bits+0x950>
     9a0:	mov	r0, #0
     9a4:	ldr	r2, [r4, #8]
     9a8:	ldrb	r1, [r5, r0]
     9ac:	add	r2, r2, r0
     9b0:	ldrb	r2, [r2, #64]	; 0x40
     9b4:	mvn	r2, r2
     9b8:	orr	r1, r1, r2
     9bc:	strb	r1, [r5, r0]
     9c0:	add	r0, r0, #1
     9c4:	cmp	r0, #32
     9c8:	bne	9a4 <set_start_bits+0x74c>
     9cc:	b	ba8 <set_start_bits+0x950>
     9d0:	mov	r0, #0
     9d4:	ldr	r2, [r4, #8]
     9d8:	ldrb	r1, [r5, r0]
     9dc:	add	r2, r2, r0
     9e0:	ldrb	r2, [r2, #64]	; 0x40
     9e4:	orr	r1, r1, r2
     9e8:	strb	r1, [r5, r0]
     9ec:	add	r0, r0, #1
     9f0:	cmp	r0, #32
     9f4:	bne	9d4 <set_start_bits+0x77c>
     9f8:	b	ba8 <set_start_bits+0x950>
     9fc:	mov	r0, #0
     a00:	ldr	r2, [r4, #8]
     a04:	ldrb	r1, [r5, r0]
     a08:	ldrb	r2, [r2, r0]
     a0c:	mvn	r2, r2
     a10:	orr	r1, r1, r2
     a14:	strb	r1, [r5, r0]
     a18:	add	r0, r0, #1
     a1c:	cmp	r0, #32
     a20:	bne	a00 <set_start_bits+0x7a8>
     a24:	b	ba8 <set_start_bits+0x950>
     a28:	mov	r0, #0
     a2c:	ldr	r2, [r4, #8]
     a30:	ldrb	r1, [r5, r0]
     a34:	ldrb	r2, [r2, r0]
     a38:	orr	r1, r1, r2
     a3c:	strb	r1, [r5, r0]
     a40:	add	r0, r0, #1
     a44:	cmp	r0, #32
     a48:	bne	a2c <set_start_bits+0x7d4>
     a4c:	b	ba8 <set_start_bits+0x950>
     a50:	mov	r0, #0
     a54:	ldr	r2, [r4, #8]
     a58:	ldrb	r1, [r5, r0]
     a5c:	add	r2, r2, r0
     a60:	ldrb	r2, [r2, #160]	; 0xa0
     a64:	mvn	r2, r2
     a68:	orr	r1, r1, r2
     a6c:	strb	r1, [r5, r0]
     a70:	add	r0, r0, #1
     a74:	cmp	r0, #32
     a78:	bne	a54 <set_start_bits+0x7fc>
     a7c:	b	ba8 <set_start_bits+0x950>
     a80:	mov	r0, #0
     a84:	ldr	r2, [r4, #8]
     a88:	ldrb	r1, [r5, r0]
     a8c:	add	r2, r2, r0
     a90:	ldrb	r2, [r2, #160]	; 0xa0
     a94:	orr	r1, r1, r2
     a98:	strb	r1, [r5, r0]
     a9c:	add	r0, r0, #1
     aa0:	cmp	r0, #32
     aa4:	bne	a84 <set_start_bits+0x82c>
     aa8:	b	ba8 <set_start_bits+0x950>
     aac:	ldrb	r0, [r7, #1]
     ab0:	cmp	r0, #9
     ab4:	bne	bd0 <set_start_bits+0x978>
     ab8:	ldrb	r0, [r7, #2]
     abc:	movw	r2, #0
     ac0:	movt	r2, #0
     ac4:	ldr	r1, [r2, r0, lsl #2]
     ac8:	cmn	r1, #1
     acc:	beq	ba8 <set_start_bits+0x950>
     ad0:	add	r0, r2, r0, lsl #2
     ad4:	add	r0, r0, #4
     ad8:	cmp	r1, #256	; 0x100
     adc:	bcc	af8 <set_start_bits+0x8a0>
     ae0:	ldr	r3, [sp]
     ae4:	mvn	r2, #127	; 0x7f
     ae8:	ldrb	r1, [r3]
     aec:	orr	r1, r1, r2
     af0:	mov	r2, r3
     af4:	b	b0c <set_start_bits+0x8b4>
     af8:	mov	r2, r5
     afc:	mov	r7, #1
     b00:	ldrb	r3, [r2, r1, lsr #3]!
     b04:	and	r1, r1, #7
     b08:	orr	r1, r3, r7, lsl r1
     b0c:	strb	r1, [r2]
     b10:	ldr	r1, [r0], #4
     b14:	cmn	r1, #1
     b18:	bne	ad8 <set_start_bits+0x880>
     b1c:	b	ba8 <set_start_bits+0x950>
     b20:	ldrb	r0, [r5, #1]
     b24:	ldrb	r1, [r5, #4]
     b28:	ldrb	r2, [r5, #20]
     b2c:	orr	r0, r0, #2
     b30:	strb	r0, [r5, #1]
     b34:	orr	r0, r1, #1
     b38:	strb	r0, [r5, #4]
     b3c:	orr	r0, r2, #1
     b40:	strb	r0, [r5, #20]
     b44:	b	ba8 <set_start_bits+0x950>
     b48:	add	r7, r7, #2
     b4c:	ldrb	r0, [r7, #1]
     b50:	mov	r3, #1
     b54:	ldrb	r1, [r5, r0, lsr #3]
     b58:	and	r2, r0, #7
     b5c:	orr	r1, r1, r3, lsl r2
     b60:	b	ba4 <set_start_bits+0x94c>
     b64:	add	r7, r7, #2
     b68:	ldrb	r0, [r7, #1]
     b6c:	mov	r1, #1
     b70:	ldrb	r2, [r5, r0, lsr #3]
     b74:	and	r3, r0, #7
     b78:	orr	r2, r2, r1, lsl r3
     b7c:	strb	r2, [r5, r0, lsr #3]
     b80:	ldr	r2, [r4, #12]
     b84:	ldrb	r2, [r2, r0]
     b88:	tst	r2, #2
     b8c:	beq	ba8 <set_start_bits+0x950>
     b90:	ldr	r2, [r4, #4]
     b94:	ldrb	r0, [r2, r0]
     b98:	ldrb	r2, [r5, r0, lsr #3]
     b9c:	and	r3, r0, #7
     ba0:	orr	r1, r2, r1, lsl r3
     ba4:	strb	r1, [r5, r0, lsr #3]
     ba8:	mov	r1, sl
     bac:	ldrb	r0, [r6, #1]
     bb0:	ldrb	r2, [r6, #2]
     bb4:	orr	r0, r2, r0, lsl #8
     bb8:	mov	r2, #119	; 0x77
     bbc:	ldrb	r0, [r6, r0]!
     bc0:	cmp	r0, #119	; 0x77
     bc4:	mov	r0, r1
     bc8:	beq	288 <set_start_bits+0x30>
     bcc:	b	be0 <set_start_bits+0x988>
     bd0:	mov	r0, #0
     bd4:	sub	sp, fp, #28
     bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     bdc:	mov	r0, #2
     be0:	sub	sp, fp, #28
     be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000be8 <find_minlength>:
     be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     bec:	add	fp, sp, #28
     bf0:	sub	sp, sp, #52	; 0x34
     bf4:	ldr	r5, [fp, #12]
     bf8:	mov	r9, r2
     bfc:	mov	r6, r0
     c00:	ldr	r2, [r5]
     c04:	add	r0, r2, #1
     c08:	cmp	r2, #1000	; 0x3e8
     c0c:	str	r0, [r5]
     c10:	ubfx	sl, r3, #11, #1
     c14:	mvn	r0, #0
     c18:	bgt	14bc <find_minlength+0x8d4>
     c1c:	mov	r7, r1
     c20:	mov	r4, r3
     c24:	ldrb	r0, [r7], #3
     c28:	sub	r0, r0, #133	; 0x85
     c2c:	cmp	r0, #6
     c30:	bhi	c44 <find_minlength+0x5c>
     c34:	mov	r2, #1
     c38:	mov	r3, #99	; 0x63
     c3c:	tst	r3, r2, lsl r0
     c40:	addne	r7, r1, #5
     c44:	and	r0, r4, #33554432	; 0x2000000
     c48:	mov	r8, #0
     c4c:	str	r0, [sp, #32]
     c50:	mvn	r0, #0
     c54:	str	r0, [sp, #40]	; 0x28
     c58:	mov	r0, #0
     c5c:	str	r0, [sp, #36]	; 0x24
     c60:	b	c74 <find_minlength+0x8c>
     c64:	movw	r0, #0
     c68:	movt	r0, #0
     c6c:	ldrb	r0, [r0, r1]
     c70:	add	r7, r7, r0
     c74:	ldrb	r1, [r7]
     c78:	cmp	r1, #161	; 0xa1
     c7c:	bhi	14b8 <find_minlength+0x8d0>
     c80:	add	r2, pc, #4
     c84:	mvn	r0, #0
     c88:	ldr	pc, [r2, r1, lsl #2]
     c8c:	.word	0x00000f3c
     c90:	.word	0x00000c64
     c94:	.word	0x00000c64
     c98:	.word	0x00000c64
     c9c:	.word	0x00000c64
     ca0:	.word	0x00000c64
     ca4:	.word	0x00001030
     ca8:	.word	0x00001030
     cac:	.word	0x00001030
     cb0:	.word	0x00001030
     cb4:	.word	0x00001030
     cb8:	.word	0x00001030
     cbc:	.word	0x00001030
     cc0:	.word	0x00001030
     cc4:	.word	0x00001030
     cc8:	.word	0x0000102c
     ccc:	.word	0x0000102c
     cd0:	.word	0x00001030
     cd4:	.word	0x00001030
     cd8:	.word	0x00001030
     cdc:	.word	0x00001030
     ce0:	.word	0x00001030
     ce4:	.word	0x00001030
     ce8:	.word	0x00000c64
     cec:	.word	0x00000c64
     cf0:	.word	0x00000c64
     cf4:	.word	0x00000c64
     cf8:	.word	0x00000c64
     cfc:	.word	0x00000c64
     d00:	.word	0x00000f14
     d04:	.word	0x00000f14
     d08:	.word	0x00000f14
     d0c:	.word	0x00000f14
     d10:	.word	0x00000c64
     d14:	.word	0x00000c64
     d18:	.word	0x00000f14
     d1c:	.word	0x00000f14
     d20:	.word	0x00000c64
     d24:	.word	0x00000c64
     d28:	.word	0x00000c64
     d2c:	.word	0x00000c64
     d30:	.word	0x00000f68
     d34:	.word	0x00000c64
     d38:	.word	0x00000f14
     d3c:	.word	0x00000c64
     d40:	.word	0x00000c64
     d44:	.word	0x00000c64
     d48:	.word	0x00000c64
     d4c:	.word	0x00000f14
     d50:	.word	0x00000f14
     d54:	.word	0x00000c64
     d58:	.word	0x00000c64
     d5c:	.word	0x00000c64
     d60:	.word	0x00000c64
     d64:	.word	0x00000f68
     d68:	.word	0x00000c64
     d6c:	.word	0x00000f14
     d70:	.word	0x00000c64
     d74:	.word	0x00000c64
     d78:	.word	0x00000c64
     d7c:	.word	0x00000c64
     d80:	.word	0x00000f14
     d84:	.word	0x00000f14
     d88:	.word	0x00000c64
     d8c:	.word	0x00000c64
     d90:	.word	0x00000c64
     d94:	.word	0x00000c64
     d98:	.word	0x00000f68
     d9c:	.word	0x00000c64
     da0:	.word	0x00000f14
     da4:	.word	0x00000c64
     da8:	.word	0x00000c64
     dac:	.word	0x00000c64
     db0:	.word	0x00000c64
     db4:	.word	0x00000f14
     db8:	.word	0x00000f14
     dbc:	.word	0x00000c64
     dc0:	.word	0x00000c64
     dc4:	.word	0x00000c64
     dc8:	.word	0x00000c64
     dcc:	.word	0x00000f68
     dd0:	.word	0x00000c64
     dd4:	.word	0x00000f14
     dd8:	.word	0x00000c64
     ddc:	.word	0x00000c64
     de0:	.word	0x00000f60
     de4:	.word	0x00000f60
     de8:	.word	0x00000fcc
     dec:	.word	0x00000fcc
     df0:	.word	0x00000f60
     df4:	.word	0x00000f60
     df8:	.word	0x00000ff0
     dfc:	.word	0x00000ff0
     e00:	.word	0x000012b0
     e04:	.word	0x00000f60
     e08:	.word	0x00000fcc
     e0c:	.word	0x00000f60
     e10:	.word	0x00000ff0
     e14:	.word	0x000014b8
     e18:	.word	0x000014b8
     e1c:	.word	0x000014b8
     e20:	.word	0x000014b8
     e24:	.word	0x000014b8
     e28:	.word	0x000014b8
     e2c:	.word	0x000014b8
     e30:	.word	0x000014b8
     e34:	.word	0x000014b8
     e38:	.word	0x000014b8
     e3c:	.word	0x000014b8
     e40:	.word	0x000014b8
     e44:	.word	0x0000103c
     e48:	.word	0x0000103c
     e4c:	.word	0x000014b8
     e50:	.word	0x00001080
     e54:	.word	0x00001080
     e58:	.word	0x000010ec
     e5c:	.word	0x000010ec
     e60:	.word	0x000012e0
     e64:	.word	0x00000c64
     e68:	.word	0x00000f3c
     e6c:	.word	0x00000f3c
     e70:	.word	0x00000f3c
     e74:	.word	0x00000f3c
     e78:	.word	0x00000f3c
     e7c:	.word	0x00000c64
     e80:	.word	0x00000f20
     e84:	.word	0x00000f20
     e88:	.word	0x00000f20
     e8c:	.word	0x00000f20
     e90:	.word	0x00001268
     e94:	.word	0x00001268
     e98:	.word	0x00001268
     e9c:	.word	0x00001268
     ea0:	.word	0x00001268
     ea4:	.word	0x00001268
     ea8:	.word	0x0000124c
     eac:	.word	0x00001268
     eb0:	.word	0x00001268
     eb4:	.word	0x00001268
     eb8:	.word	0x00001268
     ebc:	.word	0x0000124c
     ec0:	.word	0x00000c64
     ec4:	.word	0x00000c64
     ec8:	.word	0x00000c64
     ecc:	.word	0x00000c64
     ed0:	.word	0x00000c64
     ed4:	.word	0x00000f80
     ed8:	.word	0x00000f80
     edc:	.word	0x00000f80
     ee0:	.word	0x00000fb0
     ee4:	.word	0x00000c64
     ee8:	.word	0x00000fb0
     eec:	.word	0x00000c64
     ef0:	.word	0x00000fb0
     ef4:	.word	0x00000c64
     ef8:	.word	0x00000fb0
     efc:	.word	0x00000c64
     f00:	.word	0x00000c64
     f04:	.word	0x000014bc
     f08:	.word	0x000014bc
     f0c:	.word	0x00000c64
     f10:	.word	0x00000f80
     f14:	add	r7, r7, #2
     f18:	add	r8, r8, #1
     f1c:	b	c74 <find_minlength+0x8c>
     f20:	ldrb	r0, [r7, #1]
     f24:	ldrb	r1, [r7, #2]
     f28:	orr	r0, r1, r0, lsl #8
     f2c:	ldrb	r1, [r7, r0]!
     f30:	cmp	r1, #119	; 0x77
     f34:	beq	f20 <find_minlength+0x338>
     f38:	b	c64 <find_minlength+0x7c>
     f3c:	ldr	r0, [sp, #40]	; 0x28
     f40:	cmp	r0, #0
     f44:	blt	1008 <find_minlength+0x420>
     f48:	ldr	r2, [sp, #36]	; 0x24
     f4c:	cmp	r2, #0
     f50:	bne	100c <find_minlength+0x424>
     f54:	cmp	r8, r0
     f58:	movlt	r0, r8
     f5c:	b	100c <find_minlength+0x424>
     f60:	ldrb	r0, [r7, #1]
     f64:	b	ff4 <find_minlength+0x40c>
     f68:	ldrb	r0, [r7, #1]
     f6c:	ldrb	r1, [r7, #2]
     f70:	add	r7, r7, #4
     f74:	orr	r0, r1, r0, lsl #8
     f78:	add	r8, r0, r8
     f7c:	b	c74 <find_minlength+0x8c>
     f80:	movw	r0, #0
     f84:	movt	r0, #0
     f88:	ldrb	r0, [r0, r1]
     f8c:	add	r0, r7, r0
     f90:	ldrb	r1, [r0, #1]
     f94:	ldrb	r2, [r0, #2]
     f98:	orr	r1, r2, r1, lsl #8
     f9c:	ldrb	r1, [r0, r1]!
     fa0:	cmp	r1, #119	; 0x77
     fa4:	beq	f90 <find_minlength+0x3a8>
     fa8:	add	r7, r0, #3
     fac:	b	c74 <find_minlength+0x8c>
     fb0:	movw	r0, #0
     fb4:	movt	r0, #0
     fb8:	ldrb	r0, [r0, r1]
     fbc:	ldrb	r1, [r7, #1]
     fc0:	add	r0, r1, r0
     fc4:	add	r7, r7, r0
     fc8:	b	c74 <find_minlength+0x8c>
     fcc:	ldrb	r0, [r7, #1]
     fd0:	mov	r1, #2
     fd4:	add	r8, r8, #1
     fd8:	sub	r0, r0, #15
     fdc:	uxtb	r0, r0
     fe0:	cmp	r0, #2
     fe4:	movwcc	r1, #4
     fe8:	add	r7, r7, r1
     fec:	b	c74 <find_minlength+0x8c>
     ff0:	ldrb	r0, [r7, #3]
     ff4:	sub	r0, r0, #15
     ff8:	uxtb	r0, r0
     ffc:	cmp	r0, #2
    1000:	addcc	r7, r7, #2
    1004:	b	c64 <find_minlength+0x7c>
    1008:	mov	r0, r8
    100c:	cmp	r1, #119	; 0x77
    1010:	mov	r1, #0
    1014:	add	r7, r7, #3
    1018:	mov	r8, #0
    101c:	str	r0, [sp, #40]	; 0x28
    1020:	str	r1, [sp, #36]	; 0x24
    1024:	beq	c74 <find_minlength+0x8c>
    1028:	b	14bc <find_minlength+0x8d4>
    102c:	add	r7, r7, #2
    1030:	add	r7, r7, #1
    1034:	add	r8, r8, #1
    1038:	b	c74 <find_minlength+0x8c>
    103c:	movw	r0, #0
    1040:	movt	r0, #0
    1044:	ldrb	r0, [r0, #110]	; 0x6e
    1048:	ldrb	r0, [r7, r0]!
    104c:	sub	r0, r0, #98	; 0x62
    1050:	cmp	r0, #11
    1054:	bhi	1420 <find_minlength+0x838>
    1058:	mov	r1, #1
    105c:	movw	r2, #1331	; 0x533
    1060:	tst	r2, r1, lsl r0
    1064:	bne	1078 <find_minlength+0x490>
    1068:	mov	r2, #524	; 0x20c
    106c:	tst	r2, r1, lsl r0
    1070:	beq	1400 <find_minlength+0x818>
    1074:	add	r8, r8, #1
    1078:	add	r7, r7, #1
    107c:	b	c74 <find_minlength+0x8c>
    1080:	ldr	r0, [sp, #32]
    1084:	mov	r3, #0
    1088:	mov	r2, #3
    108c:	cmp	r0, #0
    1090:	bne	1434 <find_minlength+0x84c>
    1094:	ldrb	r0, [r7, #1]
    1098:	ldrb	r1, [r7, #2]
    109c:	orr	r2, r1, r0, lsl #8
    10a0:	mov	r0, r9
    10a4:	mov	r1, sl
    10a8:	bl	0 <coda__pcre_find_bracket>
    10ac:	cmp	r0, #0
    10b0:	beq	14c4 <find_minlength+0x8dc>
    10b4:	mov	r1, r0
    10b8:	ldrb	r2, [r0, #1]
    10bc:	ldrb	r3, [r0, #2]
    10c0:	orr	r2, r3, r2, lsl #8
    10c4:	ldrb	r2, [r0, r2]!
    10c8:	cmp	r2, #119	; 0x77
    10cc:	beq	10b8 <find_minlength+0x4d0>
    10d0:	cmp	r7, r1
    10d4:	bls	13a8 <find_minlength+0x7c0>
    10d8:	cmp	r7, r0
    10dc:	bcs	13a8 <find_minlength+0x7c0>
    10e0:	mov	r0, #1
    10e4:	mov	r3, #0
    10e8:	b	142c <find_minlength+0x844>
    10ec:	ldr	r0, [sp, #32]
    10f0:	mov	r3, #0
    10f4:	mov	r2, #5
    10f8:	cmp	r0, #0
    10fc:	bne	1434 <find_minlength+0x84c>
    1100:	ldrb	r0, [r7, #3]
    1104:	ldrb	r1, [r7, #4]
    1108:	orr	r0, r1, r0, lsl #8
    110c:	cmp	r0, #0
    1110:	str	r0, [sp, #28]
    1114:	beq	1418 <find_minlength+0x830>
    1118:	ldrh	r0, [r6, #34]	; 0x22
    111c:	ldrb	r2, [r7, #1]
    1120:	ldrb	r3, [r7, #2]
    1124:	ldrh	r1, [r6, #36]	; 0x24
    1128:	str	r6, [sp, #24]
    112c:	mov	r5, r9
    1130:	str	r4, [sp, #20]
    1134:	str	sl, [sp, #16]
    1138:	add	r0, r6, r0
    113c:	orr	r2, r3, r2, lsl #8
    1140:	mvn	r6, #-2147483648	; 0x80000000
    1144:	mla	r9, r2, r1, r0
    1148:	ldrb	r0, [r9]
    114c:	ldrb	r1, [r9, #1]
    1150:	mov	r4, r5
    1154:	orr	r2, r1, r0, lsl #8
    1158:	mov	r0, r5
    115c:	mov	r1, sl
    1160:	bl	0 <coda__pcre_find_bracket>
    1164:	cmp	r0, #0
    1168:	beq	14c4 <find_minlength+0x8dc>
    116c:	mov	r1, r0
    1170:	ldr	r0, [sp, #28]
    1174:	sub	ip, r0, #1
    1178:	mov	r0, r1
    117c:	ldrb	r2, [r0, #1]
    1180:	ldrb	r3, [r0, #2]
    1184:	orr	r2, r3, r2, lsl #8
    1188:	ldrb	r2, [r0, r2]!
    118c:	cmp	r2, #119	; 0x77
    1190:	beq	117c <find_minlength+0x594>
    1194:	cmp	r7, r1
    1198:	bls	11a4 <find_minlength+0x5bc>
    119c:	cmp	r7, r0
    11a0:	bcc	149c <find_minlength+0x8b4>
    11a4:	ldr	r0, [fp, #8]
    11a8:	mov	r3, #0
    11ac:	cmp	r0, #0
    11b0:	beq	11d0 <find_minlength+0x5e8>
    11b4:	ldr	r0, [fp, #8]
    11b8:	ldr	r2, [r0, #4]
    11bc:	cmp	r2, r1
    11c0:	beq	1384 <find_minlength+0x79c>
    11c4:	ldr	r0, [r0]
    11c8:	cmp	r0, #0
    11cc:	bne	11b8 <find_minlength+0x5d0>
    11d0:	ldr	r0, [fp, #8]
    11d4:	str	r1, [fp, #-32]	; 0xffffffe0
    11d8:	ldr	sl, [sp, #24]
    11dc:	mov	r5, r4
    11e0:	mov	r2, r4
    11e4:	ldr	r4, [sp, #20]
    11e8:	str	ip, [sp, #12]
    11ec:	str	r0, [fp, #-36]	; 0xffffffdc
    11f0:	sub	r0, fp, #36	; 0x24
    11f4:	mov	r3, r4
    11f8:	str	r0, [sp]
    11fc:	ldr	r0, [fp, #12]
    1200:	str	r0, [sp, #4]
    1204:	mov	r0, sl
    1208:	bl	be8 <find_minlength>
    120c:	cmp	r0, r6
    1210:	movlt	r6, r0
    1214:	ldrh	r0, [sl, #36]	; 0x24
    1218:	ldr	sl, [sp, #16]
    121c:	add	r9, r9, r0
    1220:	ldr	r0, [sp, #28]
    1224:	cmp	r0, #1
    1228:	ldr	r0, [sp, #12]
    122c:	str	r0, [sp, #28]
    1230:	bgt	1148 <find_minlength+0x560>
    1234:	mov	r3, r6
    1238:	mov	r9, r5
    123c:	ldr	r6, [sp, #24]
    1240:	ldr	r5, [fp, #12]
    1244:	mov	r2, #5
    1248:	b	1434 <find_minlength+0x84c>
    124c:	ldrb	r0, [r7, #1]
    1250:	ldrb	r1, [r7, #2]
    1254:	orr	r1, r1, r0, lsl #8
    1258:	mov	r0, r7
    125c:	ldrb	r1, [r0, r1]!
    1260:	cmp	r1, #119	; 0x77
    1264:	bne	136c <find_minlength+0x784>
    1268:	ldr	r0, [fp, #8]
    126c:	mov	r1, r7
    1270:	mov	r2, r9
    1274:	mov	r3, r4
    1278:	stm	sp, {r0, r5}
    127c:	mov	r0, r6
    1280:	bl	be8 <find_minlength>
    1284:	cmp	r0, #0
    1288:	blt	14bc <find_minlength+0x8d4>
    128c:	ldrb	r1, [r7, #1]
    1290:	ldrb	r2, [r7, #2]
    1294:	orr	r1, r2, r1, lsl #8
    1298:	ldrb	r1, [r7, r1]!
    129c:	cmp	r1, #119	; 0x77
    12a0:	beq	128c <find_minlength+0x6a4>
    12a4:	add	r8, r0, r8
    12a8:	add	r7, r7, #3
    12ac:	b	c74 <find_minlength+0x8c>
    12b0:	ldrb	r0, [r7, #1]
    12b4:	ldrb	r1, [r7, #2]
    12b8:	ldrb	r2, [r7, #3]
    12bc:	orr	r0, r1, r0, lsl #8
    12c0:	mov	r1, #4
    12c4:	add	r8, r0, r8
    12c8:	sub	r0, r2, #15
    12cc:	uxtb	r0, r0
    12d0:	cmp	r0, #2
    12d4:	movwcc	r1, #6
    12d8:	add	r7, r7, r1
    12dc:	b	c74 <find_minlength+0x8c>
    12e0:	ldrb	r0, [r7, #1]
    12e4:	ldrb	r1, [r7, #2]
    12e8:	orr	r0, r1, r0, lsl #8
    12ec:	add	r1, r9, r0
    12f0:	mov	r0, r1
    12f4:	ldrb	r2, [r0, #1]
    12f8:	ldrb	r3, [r0, #2]
    12fc:	orr	r2, r3, r2, lsl #8
    1300:	ldrb	r2, [r0, r2]!
    1304:	cmp	r2, #119	; 0x77
    1308:	beq	12f4 <find_minlength+0x70c>
    130c:	cmp	r7, r1
    1310:	bls	131c <find_minlength+0x734>
    1314:	cmp	r7, r0
    1318:	bcc	1374 <find_minlength+0x78c>
    131c:	ldr	r0, [fp, #8]
    1320:	cmp	r0, #0
    1324:	beq	1344 <find_minlength+0x75c>
    1328:	ldr	r0, [fp, #8]
    132c:	ldr	r2, [r0, #4]
    1330:	cmp	r2, r1
    1334:	beq	1374 <find_minlength+0x78c>
    1338:	ldr	r0, [r0]
    133c:	cmp	r0, #0
    1340:	bne	132c <find_minlength+0x744>
    1344:	ldr	r0, [fp, #8]
    1348:	str	r1, [fp, #-32]	; 0xffffffe0
    134c:	mov	r2, r9
    1350:	mov	r3, r4
    1354:	str	r0, [fp, #-36]	; 0xffffffdc
    1358:	sub	r0, fp, #36	; 0x24
    135c:	stm	sp, {r0, r5}
    1360:	mov	r0, r6
    1364:	bl	be8 <find_minlength>
    1368:	b	12a4 <find_minlength+0x6bc>
    136c:	add	r7, r0, #3
    1370:	b	c74 <find_minlength+0x8c>
    1374:	mov	r0, #1
    1378:	add	r7, r7, #3
    137c:	str	r0, [sp, #36]	; 0x24
    1380:	b	c74 <find_minlength+0x8c>
    1384:	mov	r9, r4
    1388:	ldr	r4, [sp, #20]
    138c:	ldr	r6, [sp, #24]
    1390:	ldr	r5, [fp, #12]
    1394:	ldr	sl, [sp, #16]
    1398:	mov	r0, #1
    139c:	mov	r2, #5
    13a0:	str	r0, [sp, #36]	; 0x24
    13a4:	b	1434 <find_minlength+0x84c>
    13a8:	ldr	r0, [fp, #8]
    13ac:	mov	r3, #0
    13b0:	cmp	r0, #0
    13b4:	beq	13d4 <find_minlength+0x7ec>
    13b8:	ldr	r0, [fp, #8]
    13bc:	ldr	r2, [r0, #4]
    13c0:	cmp	r2, r1
    13c4:	beq	1428 <find_minlength+0x840>
    13c8:	ldr	r0, [r0]
    13cc:	cmp	r0, #0
    13d0:	bne	13bc <find_minlength+0x7d4>
    13d4:	ldr	r0, [fp, #8]
    13d8:	str	r1, [fp, #-32]	; 0xffffffe0
    13dc:	mov	r2, r9
    13e0:	mov	r3, r4
    13e4:	str	r0, [fp, #-36]	; 0xffffffdc
    13e8:	sub	r0, fp, #36	; 0x24
    13ec:	stm	sp, {r0, r5}
    13f0:	mov	r0, r6
    13f4:	bl	be8 <find_minlength>
    13f8:	mov	r3, r0
    13fc:	b	1430 <find_minlength+0x848>
    1400:	ldrb	r0, [r7, #1]
    1404:	ldrb	r1, [r7, #2]
    1408:	add	r7, r7, #5
    140c:	orr	r0, r1, r0, lsl #8
    1410:	add	r8, r0, r8
    1414:	b	c74 <find_minlength+0x8c>
    1418:	mvn	r3, #-2147483648	; 0x80000000
    141c:	b	1434 <find_minlength+0x84c>
    1420:	add	r8, r8, #1
    1424:	b	c74 <find_minlength+0x8c>
    1428:	mov	r0, #1
    142c:	str	r0, [sp, #36]	; 0x24
    1430:	mov	r2, #3
    1434:	ldrb	r0, [r7, r2]!
    1438:	sub	r0, r0, #98	; 0x62
    143c:	cmp	r0, #11
    1440:	bhi	1474 <find_minlength+0x88c>
    1444:	mov	r1, #1
    1448:	movw	r2, #1331	; 0x533
    144c:	tst	r2, r1, lsl r0
    1450:	beq	1464 <find_minlength+0x87c>
    1454:	mov	r0, #0
    1458:	add	r7, r7, #1
    145c:	mla	r8, r0, r3, r8
    1460:	b	c74 <find_minlength+0x8c>
    1464:	mov	r2, #524	; 0x20c
    1468:	tst	r2, r1, lsl r0
    146c:	beq	1480 <find_minlength+0x898>
    1470:	add	r7, r7, #1
    1474:	mov	r0, #1
    1478:	mla	r8, r0, r3, r8
    147c:	b	c74 <find_minlength+0x8c>
    1480:	ldrb	r0, [r7, #1]
    1484:	ldrb	r2, [r7, #2]
    1488:	add	r1, r7, #5
    148c:	mov	r7, r1
    1490:	orr	r0, r2, r0, lsl #8
    1494:	mla	r8, r0, r3, r8
    1498:	b	c74 <find_minlength+0x8c>
    149c:	mov	r9, r4
    14a0:	ldr	r4, [sp, #20]
    14a4:	ldr	r6, [sp, #24]
    14a8:	ldr	r5, [fp, #12]
    14ac:	mov	r0, #1
    14b0:	mov	r3, #0
    14b4:	b	139c <find_minlength+0x7b4>
    14b8:	mvn	r0, #2
    14bc:	sub	sp, fp, #28
    14c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14c4:	mvn	r0, #1
    14c8:	sub	sp, fp, #28
    14cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000014d0 <coda_pcre_free_study>:
    14d0:	cmp	r0, #0
    14d4:	bxeq	lr
    14d8:	movw	r1, #0
    14dc:	movt	r1, #0
    14e0:	ldr	r1, [r1]
    14e4:	bx	r1
