
../compcert-repos/prog2/CMakeFiles/1.1.1.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.1.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	str	r2, [fp, #-24]	; 0xffffffe8
  18:	mov	r3, #0
  1c:	str	r3, [fp, #-8]
  20:	mov	r3, #0
  24:	str	r3, [fp, #-8]
  28:	b	60 <in_array+0x60>
  2c:	ldr	r3, [fp, #-8]
  30:	lsl	r3, r3, #2
  34:	ldr	r2, [fp, #-20]	; 0xffffffec
  38:	add	r3, r2, r3
  3c:	ldr	r3, [r3]
  40:	ldr	r2, [fp, #-16]
  44:	cmp	r2, r3
  48:	bne	54 <in_array+0x54>
  4c:	mov	r3, #1
  50:	b	74 <in_array+0x74>
  54:	ldr	r3, [fp, #-8]
  58:	add	r3, r3, #1
  5c:	str	r3, [fp, #-8]
  60:	ldr	r2, [fp, #-8]
  64:	ldr	r3, [fp, #-24]	; 0xffffffe8
  68:	cmp	r2, r3
  6c:	ble	2c <in_array+0x2c>
  70:	mov	r3, #0
  74:	mov	r0, r3
  78:	add	sp, fp, #0
  7c:	pop	{fp}		; (ldr fp, [sp], #4)
  80:	bx	lr

00000084 <main>:
  84:	str	fp, [sp, #-8]!
  88:	str	lr, [sp, #4]
  8c:	add	fp, sp, #4
  90:	sub	sp, sp, #216	; 0xd8
  94:	movw	r2, #0
  98:	movt	r2, #0
  9c:	sub	r3, fp, #52	; 0x34
  a0:	ldrd	r0, [r2]
  a4:	strd	r0, [r3]
  a8:	ldrd	r0, [r2, #8]
  ac:	strd	r0, [r3, #8]
  b0:	ldrd	r0, [r2, #16]
  b4:	strd	r0, [r3, #16]
  b8:	ldrd	r0, [r2, #24]
  bc:	strd	r0, [r3, #24]
  c0:	movw	r3, #0
  c4:	movt	r3, #0
  c8:	sub	r1, fp, #68	; 0x44
  cc:	mov	r0, r3
  d0:	ldrd	r2, [r0]
  d4:	strd	r2, [r1]
  d8:	ldrd	r2, [r0, #8]
  dc:	strd	r2, [r1, #8]
  e0:	movw	r3, #0
  e4:	movt	r3, #0
  e8:	sub	r1, fp, #76	; 0x4c
  ec:	ldrd	r2, [r3]
  f0:	strd	r2, [r1]
  f4:	movw	r2, #0
  f8:	movt	r2, #0
  fc:	sub	r3, fp, #100	; 0x64
 100:	ldrd	r0, [r2]
 104:	strd	r0, [r3]
 108:	ldrd	r0, [r2, #8]
 10c:	strd	r0, [r3, #8]
 110:	ldrd	r0, [r2, #16]
 114:	strd	r0, [r3, #16]
 118:	movw	r3, #0
 11c:	movt	r3, #0
 120:	sub	r1, fp, #108	; 0x6c
 124:	ldrd	r2, [r3]
 128:	strd	r2, [r1]
 12c:	movw	r3, #0
 130:	movt	r3, #0
 134:	sub	r1, fp, #116	; 0x74
 138:	ldrd	r2, [r3]
 13c:	strd	r2, [r1]
 140:	movw	r1, #0
 144:	movt	r1, #0
 148:	movw	r0, #0
 14c:	movt	r0, #0
 150:	bl	0 <fopen>
 154:	str	r0, [fp, #-16]
 158:	mov	r3, #0
 15c:	str	r3, [fp, #-12]
 160:	sub	r3, fp, #220	; 0xdc
 164:	mov	r2, #104	; 0x68
 168:	mov	r1, #0
 16c:	mov	r0, r3
 170:	bl	0 <memset>
 174:	ldr	r0, [fp, #-16]
 178:	bl	0 <getc>
 17c:	str	r0, [fp, #-8]
 180:	ldr	r3, [fp, #-8]
 184:	cmn	r3, #1
 188:	beq	2fc <main+0x278>
 18c:	sub	r3, fp, #52	; 0x34
 190:	mov	r2, #8
 194:	mov	r1, r3
 198:	ldr	r0, [fp, #-8]
 19c:	bl	0 <in_array>
 1a0:	mov	r3, r0
 1a4:	cmp	r3, #0
 1a8:	beq	1b8 <main+0x134>
 1ac:	mov	r3, #97	; 0x61
 1b0:	str	r3, [fp, #-8]
 1b4:	b	290 <main+0x20c>
 1b8:	sub	r3, fp, #68	; 0x44
 1bc:	mov	r2, #4
 1c0:	mov	r1, r3
 1c4:	ldr	r0, [fp, #-8]
 1c8:	bl	0 <in_array>
 1cc:	mov	r3, r0
 1d0:	cmp	r3, #0
 1d4:	beq	1e4 <main+0x160>
 1d8:	mov	r3, #101	; 0x65
 1dc:	str	r3, [fp, #-8]
 1e0:	b	290 <main+0x20c>
 1e4:	sub	r3, fp, #76	; 0x4c
 1e8:	mov	r2, #2
 1ec:	mov	r1, r3
 1f0:	ldr	r0, [fp, #-8]
 1f4:	bl	0 <in_array>
 1f8:	mov	r3, r0
 1fc:	cmp	r3, #0
 200:	beq	210 <main+0x18c>
 204:	mov	r3, #105	; 0x69
 208:	str	r3, [fp, #-8]
 20c:	b	290 <main+0x20c>
 210:	sub	r3, fp, #100	; 0x64
 214:	mov	r2, #6
 218:	mov	r1, r3
 21c:	ldr	r0, [fp, #-8]
 220:	bl	0 <in_array>
 224:	mov	r3, r0
 228:	cmp	r3, #0
 22c:	beq	23c <main+0x1b8>
 230:	mov	r3, #111	; 0x6f
 234:	str	r3, [fp, #-8]
 238:	b	290 <main+0x20c>
 23c:	sub	r3, fp, #108	; 0x6c
 240:	mov	r2, #2
 244:	mov	r1, r3
 248:	ldr	r0, [fp, #-8]
 24c:	bl	0 <in_array>
 250:	mov	r3, r0
 254:	cmp	r3, #0
 258:	beq	268 <main+0x1e4>
 25c:	mov	r3, #117	; 0x75
 260:	str	r3, [fp, #-8]
 264:	b	290 <main+0x20c>
 268:	sub	r3, fp, #116	; 0x74
 26c:	mov	r2, #2
 270:	mov	r1, r3
 274:	ldr	r0, [fp, #-8]
 278:	bl	0 <in_array>
 27c:	mov	r3, r0
 280:	cmp	r3, #0
 284:	beq	290 <main+0x20c>
 288:	mov	r3, #99	; 0x63
 28c:	str	r3, [fp, #-8]
 290:	ldr	r0, [fp, #-8]
 294:	bl	0 <tolower>
 298:	str	r0, [fp, #-8]
 29c:	ldr	r3, [fp, #-8]
 2a0:	sub	r3, r3, #97	; 0x61
 2a4:	str	r3, [fp, #-8]
 2a8:	ldr	r3, [fp, #-8]
 2ac:	cmp	r3, #25
 2b0:	bgt	174 <main+0xf0>
 2b4:	ldr	r3, [fp, #-8]
 2b8:	cmp	r3, #0
 2bc:	blt	174 <main+0xf0>
 2c0:	ldr	r3, [fp, #-8]
 2c4:	lsl	r3, r3, #2
 2c8:	sub	r2, fp, #4
 2cc:	add	r3, r2, r3
 2d0:	ldr	r3, [r3, #-216]	; 0xffffff28
 2d4:	add	r2, r3, #1
 2d8:	ldr	r3, [fp, #-8]
 2dc:	lsl	r3, r3, #2
 2e0:	sub	r1, fp, #4
 2e4:	add	r3, r1, r3
 2e8:	str	r2, [r3, #-216]	; 0xffffff28
 2ec:	ldr	r3, [fp, #-12]
 2f0:	add	r3, r3, #1
 2f4:	str	r3, [fp, #-12]
 2f8:	b	174 <main+0xf0>
 2fc:	nop	{0}
 300:	ldr	r3, [fp, #-12]
 304:	str	r3, [fp, #-20]	; 0xffffffec
 308:	ldr	r0, [fp, #-16]
 30c:	bl	0 <fclose>
 310:	movw	r0, #0
 314:	movt	r0, #0
 318:	bl	0 <puts>
 31c:	ldr	r1, [fp, #-12]
 320:	movw	r0, #0
 324:	movt	r0, #0
 328:	bl	0 <printf>
 32c:	mov	r3, #0
 330:	str	r3, [fp, #-12]
 334:	b	394 <main+0x310>
 338:	ldr	r3, [fp, #-12]
 33c:	add	r1, r3, #97	; 0x61
 340:	ldr	r3, [fp, #-12]
 344:	lsl	r3, r3, #2
 348:	sub	r2, fp, #4
 34c:	add	r3, r2, r3
 350:	ldr	r3, [r3, #-216]	; 0xffffff28
 354:	vmov	s15, r3
 358:	vcvt.f32.s32	s13, s15
 35c:	ldr	r3, [fp, #-20]	; 0xffffffec
 360:	vmov	s15, r3
 364:	vcvt.f32.s32	s14, s15
 368:	vdiv.f32	s15, s13, s14
 36c:	vldr	s14, [pc, #68]	; 3b8 <main+0x334>
 370:	vmul.f32	s15, s15, s14
 374:	vcvt.f64.f32	d7, s15
 378:	vmov	r2, r3, d7
 37c:	movw	r0, #0
 380:	movt	r0, #0
 384:	bl	0 <printf>
 388:	ldr	r3, [fp, #-12]
 38c:	add	r3, r3, #1
 390:	str	r3, [fp, #-12]
 394:	ldr	r3, [fp, #-12]
 398:	cmp	r3, #25
 39c:	ble	338 <main+0x2b4>
 3a0:	mov	r3, #0
 3a4:	mov	r0, r3
 3a8:	sub	sp, fp, #4
 3ac:	ldr	fp, [sp]
 3b0:	add	sp, sp, #4
 3b4:	pop	{pc}		; (ldr pc, [sp], #4)
 3b8:	.word	0x42c80000
