
../compcert-repos/prog2/CMakeFiles/1.5.dir/Aula01_Ficheiros_e_Formatos_de_dados/05.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	movw	r0, #0
   c:	movw	r1, #0
  10:	movt	r0, #0
  14:	movt	r1, #0
  18:	bl	0 <fopen>
  1c:	movw	r5, #0
  20:	movw	r6, #0
  24:	mov	r4, r0
  28:	mov	r7, #0
  2c:	movt	r5, #0
  30:	movt	r6, #0
  34:	b	44 <main+0x44>
  38:	mov	r0, r5
  3c:	mov	r1, r4
  40:	bl	d0 <IsIOFunction>
  44:	mov	r0, r4
  48:	bl	0 <fgetc_unlocked>
  4c:	uxtb	r0, r0
  50:	cmp	r0, #111	; 0x6f
  54:	ble	70 <main+0x70>
  58:	cmp	r0, #112	; 0x70
  5c:	beq	38 <main+0x38>
  60:	cmp	r0, #115	; 0x73
  64:	bne	44 <main+0x44>
  68:	mov	r0, r6
  6c:	b	3c <main+0x3c>
  70:	cmp	r0, #42	; 0x2a
  74:	beq	9c <main+0x9c>
  78:	cmp	r0, #47	; 0x2f
  7c:	bne	44 <main+0x44>
  80:	mov	r0, r4
  84:	bl	0 <fgetc_unlocked>
  88:	cmp	r7, #0
  8c:	cmpeq	r0, #42	; 0x2a
  90:	bne	b4 <main+0xb4>
  94:	mov	r7, #1
  98:	b	44 <main+0x44>
  9c:	mov	r0, r4
  a0:	bl	0 <fgetc_unlocked>
  a4:	cmp	r7, #0
  a8:	beq	b4 <main+0xb4>
  ac:	cmp	r0, #47	; 0x2f
  b0:	beq	c8 <main+0xc8>
  b4:	mov	r0, r4
  b8:	mvn	r1, #0
  bc:	mov	r2, #1
  c0:	bl	0 <fseek>
  c4:	b	44 <main+0x44>
  c8:	mov	r7, #0
  cc:	b	44 <main+0x44>

000000d0 <IsIOFunction>:
  d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
  d4:	add	fp, sp, #24
  d8:	sub	sp, sp, #8
  dc:	mov	r9, r0
  e0:	mov	r5, r1
  e4:	mov	r0, r1
  e8:	mvn	r1, #0
  ec:	mov	r2, #1
  f0:	bl	0 <fseek>
  f4:	mov	r0, r9
  f8:	bl	0 <strlen>
  fc:	mov	r8, #0
 100:	mov	r4, r0
 104:	cmp	r0, #1
 108:	mov	r0, #0
 10c:	str	r8, [sp, #3]
 110:	str	r8, [sp]
 114:	blt	138 <IsIOFunction+0x68>
 118:	mov	r7, sp
 11c:	mov	r6, r4
 120:	mov	r0, r5
 124:	bl	0 <fgetc>
 128:	strb	r0, [r7], #1
 12c:	subs	r6, r6, #1
 130:	bne	120 <IsIOFunction+0x50>
 134:	mov	r0, r4
 138:	mov	r7, sp
 13c:	rsb	r1, r4, #1
 140:	mov	r2, #1
 144:	strb	r8, [r7, r0]
 148:	mov	r0, r5
 14c:	bl	0 <fseek>
 150:	mov	r0, r9
 154:	mov	r1, r7
 158:	bl	0 <strcmp>
 15c:	clz	r0, r0
 160:	lsr	r0, r0, #5
 164:	sub	sp, fp, #24
 168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
