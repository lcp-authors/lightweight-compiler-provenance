
../repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <armazem_novo>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r5, r1
  20:	mov	r6, r0
  24:	mov	r0, #12
  28:	bl	0 <malloc>
  2c:	mov	r4, r0
  30:	str	r6, [r4]
  34:	str	r5, [r4, #4]
  38:	bl	0 <fila_nova>
  3c:	str	r0, [r4, #8]
  40:	mov	r0, r4
  44:	ldr	r4, [sp, #8]
  48:	ldr	r5, [sp, #12]
  4c:	ldr	r6, [sp, #16]
  50:	ldr	lr, [sp, #4]
  54:	add	sp, sp, #24
  58:	bx	lr

0000005c <armazem_vazio>:
  5c:	mov	ip, sp
  60:	sub	sp, sp, #8
  64:	str	ip, [sp]
  68:	str	lr, [sp, #4]
  6c:	cmp	r0, #0
  70:	beq	8c <armazem_vazio+0x30>
  74:	ldr	r0, [r0, #8]
  78:	bl	0 <fila_tamanho>
  7c:	cmp	r0, #0
  80:	moveq	r0, #1
  84:	movne	r0, #0
  88:	b	90 <armazem_vazio+0x34>
  8c:	mov	r0, #1
  90:	cmp	r0, #0
  94:	beq	a0 <armazem_vazio+0x44>
  98:	mov	r0, #1
  9c:	b	a4 <armazem_vazio+0x48>
  a0:	mov	r0, #0
  a4:	ldr	lr, [sp, #4]
  a8:	add	sp, sp, #8
  ac:	bx	lr

000000b0 <armazem_cheio>:
  b0:	mov	ip, sp
  b4:	sub	sp, sp, #16
  b8:	str	ip, [sp]
  bc:	str	lr, [sp, #4]
  c0:	str	r4, [sp, #8]
  c4:	mov	r4, r0
  c8:	mov	r0, r4
  cc:	bl	5c <armazem_vazio>
  d0:	cmp	r0, #0
  d4:	beq	e0 <armazem_cheio+0x30>
  d8:	mov	r0, #0
  dc:	b	12c <armazem_cheio+0x7c>
  e0:	ldr	r0, [r4, #8]
  e4:	bl	0 <fila_tamanho>
  e8:	ldr	r1, [r4]
  ec:	cmp	r0, r1
  f0:	bne	114 <armazem_cheio+0x64>
  f4:	ldr	r0, [r4, #8]
  f8:	bl	0 <fila_back>
  fc:	ldr	r2, [r0, #4]
 100:	ldr	r1, [r4, #4]
 104:	cmp	r2, r1
 108:	moveq	r0, #1
 10c:	movne	r0, #0
 110:	b	118 <armazem_cheio+0x68>
 114:	mov	r0, #0
 118:	cmp	r0, #0
 11c:	beq	128 <armazem_cheio+0x78>
 120:	mov	r0, #1
 124:	b	12c <armazem_cheio+0x7c>
 128:	mov	r0, #0
 12c:	ldr	r4, [sp, #8]
 130:	ldr	lr, [sp, #4]
 134:	add	sp, sp, #16
 138:	bx	lr

0000013c <armazenar_contentor>:
 13c:	mov	ip, sp
 140:	sub	sp, sp, #24
 144:	str	ip, [sp]
 148:	str	lr, [sp, #4]
 14c:	str	r4, [sp, #8]
 150:	str	r5, [sp, #12]
 154:	str	r6, [sp, #16]
 158:	mov	r6, r1
 15c:	mov	r5, r0
 160:	bl	0 <pilha_nova>
 164:	mov	r4, r0
 168:	cmp	r5, #0
 16c:	beq	180 <armazenar_contentor+0x44>
 170:	cmp	r6, #0
 174:	moveq	ip, #1
 178:	movne	ip, #0
 17c:	b	184 <armazenar_contentor+0x48>
 180:	mov	ip, #1
 184:	cmp	ip, #0
 188:	bne	1a4 <armazenar_contentor+0x68>
 18c:	mov	r0, r5
 190:	bl	b0 <armazem_cheio>
 194:	cmp	r0, #0
 198:	movne	r2, #1
 19c:	moveq	r2, #0
 1a0:	b	1a8 <armazenar_contentor+0x6c>
 1a4:	mov	r2, #1
 1a8:	cmp	r2, #0
 1ac:	beq	1b8 <armazenar_contentor+0x7c>
 1b0:	mov	r0, #0
 1b4:	b	218 <armazenar_contentor+0xdc>
 1b8:	mov	r0, r5
 1bc:	bl	5c <armazem_vazio>
 1c0:	cmp	r0, #0
 1c4:	beq	1e0 <armazenar_contentor+0xa4>
 1c8:	bl	0 <pilha_nova>
 1cc:	ldr	r1, [r5, #8]
 1d0:	mov	r2, r0
 1d4:	mov	r0, r1
 1d8:	mov	r1, r2
 1dc:	bl	0 <fila_push>
 1e0:	ldr	r0, [r5, #8]
 1e4:	bl	0 <fila_back>
 1e8:	ldr	r3, [r0, #4]
 1ec:	ldr	r0, [r5, #4]
 1f0:	cmp	r3, r0
 1f4:	bne	204 <armazenar_contentor+0xc8>
 1f8:	ldr	r0, [r5, #8]
 1fc:	mov	r1, r4
 200:	bl	0 <fila_push>
 204:	ldr	r0, [r5, #8]
 208:	bl	0 <fila_back>
 20c:	mov	r1, r6
 210:	bl	0 <pilha_push>
 214:	mov	r0, #1
 218:	ldr	r4, [sp, #8]
 21c:	ldr	r5, [sp, #12]
 220:	ldr	r6, [sp, #16]
 224:	ldr	lr, [sp, #4]
 228:	add	sp, sp, #24
 22c:	bx	lr

00000230 <expedir_contentor>:
 230:	mov	ip, sp
 234:	sub	sp, sp, #16
 238:	str	ip, [sp]
 23c:	str	lr, [sp, #4]
 240:	str	r4, [sp, #8]
 244:	str	r5, [sp, #12]
 248:	mov	r5, r0
 24c:	mov	r0, r5
 250:	bl	5c <armazem_vazio>
 254:	cmp	r0, #0
 258:	bne	278 <expedir_contentor+0x48>
 25c:	ldr	r0, [r5, #8]
 260:	bl	0 <fila_front>
 264:	bl	0 <pilha_top>
 268:	cmp	r0, #0
 26c:	moveq	r1, #1
 270:	movne	r1, #0
 274:	b	27c <expedir_contentor+0x4c>
 278:	mov	r1, #1
 27c:	cmp	r1, #0
 280:	beq	28c <expedir_contentor+0x5c>
 284:	mov	r0, #0
 288:	b	2f0 <expedir_contentor+0xc0>
 28c:	ldr	r0, [r5, #8]
 290:	bl	0 <fila_front>
 294:	bl	0 <pilha_top>
 298:	mov	r4, r0
 29c:	ldr	r0, [r5, #8]
 2a0:	bl	0 <fila_front>
 2a4:	bl	0 <pilha_top>
 2a8:	mov	r1, r0
 2ac:	ldr	r0, [r4]
 2b0:	vldr	s0, [r1, #4]
 2b4:	vmov.f32	s0, s0
 2b8:	bl	0 <contentor_novo>
 2bc:	mov	r4, r0
 2c0:	ldr	r0, [r5, #8]
 2c4:	bl	0 <fila_front>
 2c8:	ldr	r2, [r0, #4]
 2cc:	cmp	r2, #1
 2d0:	ble	2e4 <expedir_contentor+0xb4>
 2d4:	ldr	r0, [r5, #8]
 2d8:	bl	0 <fila_front>
 2dc:	bl	0 <pilha_pop>
 2e0:	b	2ec <expedir_contentor+0xbc>
 2e4:	ldr	r0, [r5, #8]
 2e8:	bl	0 <fila_pop>
 2ec:	mov	r0, r4
 2f0:	ldr	r4, [sp, #8]
 2f4:	ldr	r5, [sp, #12]
 2f8:	ldr	lr, [sp, #4]
 2fc:	add	sp, sp, #16
 300:	bx	lr
