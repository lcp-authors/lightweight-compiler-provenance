
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-ascbin-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_relative_field_bit_offset_by_index>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #576	; 0x240
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	str	r6, [sp, #16]
      1c:	str	r7, [sp, #20]
      20:	str	r8, [sp, #24]
      24:	str	r9, [sp, #28]
      28:	mov	r4, r2
      2c:	mov	r6, r1
      30:	mov	r5, r0
      34:	ldr	r3, [r5, #4]
      38:	lsl	r0, r3, #4
      3c:	add	r1, r5, r0
      40:	sub	lr, r1, #4096	; 0x1000
      44:	ldr	r7, [lr, #4088]	; 0xff8
      48:	ldr	r0, [r7, #52]	; 0x34
      4c:	ldr	r8, [r0, r6, lsl #2]
      50:	ldr	r2, [r8, #28]
      54:	cmp	r2, #0
      58:	blt	74 <get_relative_field_bit_offset_by_index+0x74>
      5c:	ldr	ip, [r8, #24]
      60:	ldr	r2, [r8, #28]
      64:	str	ip, [r4]
      68:	str	r2, [r4, #4]
      6c:	mov	r0, #0
      70:	b	394 <get_relative_field_bit_offset_by_index+0x394>
      74:	ldr	r1, [r8, #32]
      78:	cmp	r1, #0
      7c:	beq	134 <get_relative_field_bit_offset_by_index+0x134>
      80:	ldr	ip, [r8, #20]
      84:	cmp	ip, #0
      88:	beq	fc <get_relative_field_bit_offset_by_index+0xfc>
      8c:	ldr	r0, [r8, #20]
      90:	add	r2, sp, #36	; 0x24
      94:	mov	r1, r5
      98:	bl	0 <coda_expression_eval_bool>
      9c:	cmp	r0, #0
      a0:	beq	bc <get_relative_field_bit_offset_by_index+0xbc>
      a4:	ldr	r0, [pc, #780]	; 3b8 <get_relative_field_bit_offset_by_index+0x3b8>
      a8:	bl	0 <coda_add_error_message>
      ac:	mov	r0, r5
      b0:	bl	0 <coda_cursor_add_to_error_message>
      b4:	mvn	r0, #0
      b8:	b	394 <get_relative_field_bit_offset_by_index+0x394>
      bc:	ldr	r3, [sp, #36]	; 0x24
      c0:	cmp	r3, #0
      c4:	bne	fc <get_relative_field_bit_offset_by_index+0xfc>
      c8:	cmp	r6, #0
      cc:	beq	e4 <get_relative_field_bit_offset_by_index+0xe4>
      d0:	sub	r1, r6, #1
      d4:	mov	r2, r4
      d8:	mov	r0, r5
      dc:	bl	0 <get_relative_field_bit_offset_by_index>
      e0:	b	394 <get_relative_field_bit_offset_by_index+0x394>
      e4:	mov	r3, #0
      e8:	mov	r2, #0
      ec:	str	r2, [r4]
      f0:	str	r3, [r4, #4]
      f4:	mov	r0, #0
      f8:	b	394 <get_relative_field_bit_offset_by_index+0x394>
      fc:	ldr	r0, [r8, #32]
     100:	mov	r2, r4
     104:	mov	r1, r5
     108:	bl	0 <coda_expression_eval_integer>
     10c:	cmp	r0, #0
     110:	beq	12c <get_relative_field_bit_offset_by_index+0x12c>
     114:	ldr	r0, [pc, #676]	; 3c0 <get_relative_field_bit_offset_by_index+0x3c0>
     118:	bl	0 <coda_add_error_message>
     11c:	mov	r0, r5
     120:	bl	0 <coda_cursor_add_to_error_message>
     124:	mvn	r0, #0
     128:	b	394 <get_relative_field_bit_offset_by_index+0x394>
     12c:	mov	r0, #0
     130:	b	394 <get_relative_field_bit_offset_by_index+0x394>
     134:	cmp	r6, #0
     138:	bne	150 <get_relative_field_bit_offset_by_index+0x150>
     13c:	ldr	r0, [pc, #648]	; 3cc <get_relative_field_bit_offset_by_index+0x3cc>
     140:	ldr	r1, [pc, #636]	; 3c4 <get_relative_field_bit_offset_by_index+0x3c4>
     144:	mov	r2, #99	; 0x63
     148:	ldr	r3, [pc, #620]	; 3bc <get_relative_field_bit_offset_by_index+0x3bc>
     14c:	bl	0 <__assert_fail>
     150:	sub	r8, r6, #1
     154:	ldr	r3, [r7, #52]	; 0x34
     158:	ldr	ip, [r3, r8, lsl #2]
     15c:	ldr	r1, [ip, #24]
     160:	ldr	r0, [ip, #28]
     164:	mvn	ip, r0
     168:	mvn	r0, r1
     16c:	orr	r3, ip, r0
     170:	cmp	r3, #0
     174:	bne	194 <get_relative_field_bit_offset_by_index+0x194>
     178:	ldr	r1, [r7, #52]	; 0x34
     17c:	ldr	r0, [r1, r8, lsl #2]
     180:	ldr	r1, [r0, #32]
     184:	cmp	r1, #0
     188:	moveq	r1, #1
     18c:	movne	r1, #0
     190:	b	198 <get_relative_field_bit_offset_by_index+0x198>
     194:	mov	r1, #0
     198:	cmp	r1, #0
     19c:	beq	1c4 <get_relative_field_bit_offset_by_index+0x1c4>
     1a0:	sub	r8, r8, #1
     1a4:	cmp	r8, #0
     1a8:	bge	154 <get_relative_field_bit_offset_by_index+0x154>
     1ac:	ldr	r0, [pc, #532]	; 3c8 <get_relative_field_bit_offset_by_index+0x3c8>
     1b0:	ldr	r1, [pc, #524]	; 3c4 <get_relative_field_bit_offset_by_index+0x3c4>
     1b4:	mov	r2, #110	; 0x6e
     1b8:	ldr	r3, [pc, #508]	; 3bc <get_relative_field_bit_offset_by_index+0x3bc>
     1bc:	bl	0 <__assert_fail>
     1c0:	b	154 <get_relative_field_bit_offset_by_index+0x154>
     1c4:	add	r2, sp, #40	; 0x28
     1c8:	mov	r1, r8
     1cc:	mov	r0, r5
     1d0:	bl	0 <get_relative_field_bit_offset_by_index>
     1d4:	cmp	r0, #0
     1d8:	beq	1e4 <get_relative_field_bit_offset_by_index+0x1e4>
     1dc:	mvn	r0, #0
     1e0:	b	394 <get_relative_field_bit_offset_by_index+0x394>
     1e4:	mov	r2, r5
     1e8:	add	r3, sp, #56	; 0x38
     1ec:	mov	lr, #130	; 0x82
     1f0:	ldr	ip, [r2], #4
     1f4:	subs	lr, lr, #1
     1f8:	str	ip, [r3], #4
     1fc:	bne	1f0 <get_relative_field_bit_offset_by_index+0x1f0>
     200:	ldr	r2, [sp, #60]	; 0x3c
     204:	add	r2, r2, #1
     208:	str	r2, [sp, #60]	; 0x3c
     20c:	add	r2, sp, #64	; 0x40
     210:	ldr	r1, [sp, #60]	; 0x3c
     214:	lsl	r0, r1, #4
     218:	add	r9, r2, r0
     21c:	ldr	r3, [r5, #4]
     220:	lsl	ip, r3, #4
     224:	add	r2, r5, ip
     228:	ldr	r1, [r2]
     22c:	ldr	r0, [r2, #4]
     230:	ldr	r2, [sp, #40]	; 0x28
     234:	ldr	r3, [sp, #44]	; 0x2c
     238:	adds	ip, r1, r2
     23c:	adc	r0, r0, r3
     240:	sub	lr, r9, #4096	; 0x1000
     244:	str	ip, [lr, #4088]	; 0xff8
     248:	sub	lr, r9, #4096	; 0x1000
     24c:	str	r0, [lr, #4092]	; 0xffc
     250:	cmp	r8, r6
     254:	bge	380 <get_relative_field_bit_offset_by_index+0x380>
     258:	mov	ip, #1
     25c:	str	ip, [sp, #32]
     260:	ldr	ip, [r7, #52]	; 0x34
     264:	ldr	r3, [ip, r8, lsl #2]
     268:	ldr	r3, [r3, #20]
     26c:	cmp	r3, #0
     270:	beq	2a4 <get_relative_field_bit_offset_by_index+0x2a4>
     274:	ldr	ip, [r7, #52]	; 0x34
     278:	ldr	r1, [ip, r8, lsl #2]
     27c:	ldr	r0, [r1, #20]
     280:	add	r2, sp, #32
     284:	mov	r1, r5
     288:	bl	0 <coda_expression_eval_bool>
     28c:	cmp	r0, #0
     290:	beq	2a4 <get_relative_field_bit_offset_by_index+0x2a4>
     294:	ldr	r0, [pc, #284]	; 3b8 <get_relative_field_bit_offset_by_index+0x3b8>
     298:	bl	0 <coda_add_error_message>
     29c:	mvn	r0, #0
     2a0:	b	394 <get_relative_field_bit_offset_by_index+0x394>
     2a4:	ldr	r0, [sp, #32]
     2a8:	cmp	r0, #0
     2ac:	beq	378 <get_relative_field_bit_offset_by_index+0x378>
     2b0:	add	r0, sp, #64	; 0x40
     2b4:	ldr	r3, [sp, #60]	; 0x3c
     2b8:	lsl	r2, r3, #4
     2bc:	add	r1, r0, r2
     2c0:	ldr	ip, [r7, #52]	; 0x34
     2c4:	ldr	r2, [ip, r8, lsl #2]
     2c8:	ldr	r3, [r2, #8]
     2cc:	sub	lr, r1, #4096	; 0x1000
     2d0:	str	r3, [lr, #4080]	; 0xff0
     2d4:	add	ip, sp, #64	; 0x40
     2d8:	ldr	r3, [sp, #60]	; 0x3c
     2dc:	lsl	r0, r3, #4
     2e0:	add	r0, ip, r0
     2e4:	sub	lr, r0, #4096	; 0x1000
     2e8:	str	r8, [lr, #4084]	; 0xff4
     2ec:	add	r0, sp, #56	; 0x38
     2f0:	add	r1, sp, #48	; 0x30
     2f4:	bl	0 <coda_cursor_get_bit_size>
     2f8:	cmp	r0, #0
     2fc:	beq	308 <get_relative_field_bit_offset_by_index+0x308>
     300:	mvn	r0, #0
     304:	b	394 <get_relative_field_bit_offset_by_index+0x394>
     308:	ldr	r1, [sp, #40]	; 0x28
     30c:	ldr	r2, [sp, #44]	; 0x2c
     310:	ldr	r0, [sp, #48]	; 0x30
     314:	ldr	r3, [sp, #52]	; 0x34
     318:	adds	r1, r1, r0
     31c:	adc	r0, r2, r3
     320:	str	r1, [sp, #40]	; 0x28
     324:	str	r0, [sp, #44]	; 0x2c
     328:	add	r3, sp, #64	; 0x40
     32c:	ldr	r2, [sp, #60]	; 0x3c
     330:	lsl	r2, r2, #4
     334:	add	r3, r3, r2
     338:	add	r2, sp, #64	; 0x40
     33c:	ldr	ip, [sp, #60]	; 0x3c
     340:	lsl	ip, ip, #4
     344:	add	ip, r2, ip
     348:	sub	lr, ip, #4096	; 0x1000
     34c:	ldr	r0, [lr, #4088]	; 0xff8
     350:	sub	lr, ip, #4096	; 0x1000
     354:	ldr	ip, [lr, #4092]	; 0xffc
     358:	ldr	r2, [sp, #48]	; 0x30
     35c:	ldr	r1, [sp, #52]	; 0x34
     360:	adds	r2, r0, r2
     364:	adc	ip, ip, r1
     368:	sub	lr, r3, #4096	; 0x1000
     36c:	str	r2, [lr, #4088]	; 0xff8
     370:	sub	lr, r3, #4096	; 0x1000
     374:	str	ip, [lr, #4092]	; 0xffc
     378:	add	r8, r8, #1
     37c:	b	250 <get_relative_field_bit_offset_by_index+0x250>
     380:	ldr	r3, [sp, #40]	; 0x28
     384:	ldr	ip, [sp, #44]	; 0x2c
     388:	str	r3, [r4]
     38c:	str	ip, [r4, #4]
     390:	mov	r0, #0
     394:	ldr	r4, [sp, #8]
     398:	ldr	r5, [sp, #12]
     39c:	ldr	r6, [sp, #16]
     3a0:	ldr	r7, [sp, #20]
     3a4:	ldr	r8, [sp, #24]
     3a8:	ldr	r9, [sp, #28]
     3ac:	ldr	lr, [sp, #4]
     3b0:	add	sp, sp, #576	; 0x240
     3b4:	bx	lr
     3b8:	.word	0x00000316
     3bc:	.word	0x00000330
     3c0:	.word	0x00000062
     3c4:	.word	0x00000000
     3c8:	.word	0x000000ef
     3cc:	.word	0x000002bf

000003d0 <get_next_relative_field_bit_offset>:
     3d0:	mov	ip, sp
     3d4:	sub	sp, sp, #568	; 0x238
     3d8:	str	ip, [sp]
     3dc:	str	lr, [sp, #4]
     3e0:	str	r4, [sp, #8]
     3e4:	str	r5, [sp, #12]
     3e8:	str	r6, [sp, #16]
     3ec:	str	r7, [sp, #20]
     3f0:	str	r8, [sp, #24]
     3f4:	str	r9, [sp, #28]
     3f8:	mov	r5, r2
     3fc:	mov	r6, r1
     400:	mov	r4, r0
     404:	ldr	r3, [r4, #4]
     408:	lsl	r0, r3, #4
     40c:	add	r1, r4, r0
     410:	sub	lr, r1, #4096	; 0x1000
     414:	ldr	r8, [lr, #4072]	; 0xfe8
     418:	ldr	r2, [r4, #4]
     41c:	lsl	ip, r2, #4
     420:	add	ip, r4, ip
     424:	sub	lr, ip, #4096	; 0x1000
     428:	ldr	r2, [lr, #4092]	; 0xffc
     42c:	add	r7, r2, #1
     430:	ldr	r0, [r8, #48]	; 0x30
     434:	cmp	r7, r0
     438:	blt	450 <get_next_relative_field_bit_offset+0x80>
     43c:	ldr	r0, [pc, #492]	; 630 <get_next_relative_field_bit_offset+0x260>
     440:	ldr	r1, [pc, #484]	; 62c <get_next_relative_field_bit_offset+0x25c>
     444:	mov	r2, #161	; 0xa1
     448:	ldr	r3, [pc, #468]	; 624 <get_next_relative_field_bit_offset+0x254>
     44c:	bl	0 <__assert_fail>
     450:	ldr	r3, [r8, #52]	; 0x34
     454:	ldr	r7, [r3, r7, lsl #2]
     458:	ldr	r0, [r7, #28]
     45c:	cmp	r0, #0
     460:	blt	494 <get_next_relative_field_bit_offset+0xc4>
     464:	ldr	r0, [r7, #24]
     468:	ldr	r3, [r7, #28]
     46c:	str	r0, [r6]
     470:	str	r3, [r6, #4]
     474:	cmp	r5, #0
     478:	beq	48c <get_next_relative_field_bit_offset+0xbc>
     47c:	mvn	r0, #0
     480:	mvn	ip, #0
     484:	str	ip, [r5]
     488:	str	r0, [r5, #4]
     48c:	mov	r0, #0
     490:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     494:	ldr	r0, [r4, #4]
     498:	lsl	ip, r0, #4
     49c:	add	ip, r4, ip
     4a0:	ldr	r2, [ip]
     4a4:	ldr	ip, [ip, #4]
     4a8:	ldr	r0, [r4, #4]
     4ac:	lsl	r1, r0, #4
     4b0:	add	r3, r4, r1
     4b4:	sub	lr, r3, #4096	; 0x1000
     4b8:	ldr	r1, [lr, #4080]	; 0xff0
     4bc:	sub	lr, r3, #4096	; 0x1000
     4c0:	ldr	r0, [lr, #4084]	; 0xff4
     4c4:	subs	r8, r2, r1
     4c8:	sbc	r9, ip, r0
     4cc:	ldr	r3, [r7, #32]
     4d0:	cmp	r3, #0
     4d4:	beq	5a8 <get_next_relative_field_bit_offset+0x1d8>
     4d8:	mov	r2, r4
     4dc:	add	r3, sp, #48	; 0x30
     4e0:	mov	lr, #130	; 0x82
     4e4:	ldr	ip, [r2], #4
     4e8:	subs	lr, lr, #1
     4ec:	str	ip, [r3], #4
     4f0:	bne	4e4 <get_next_relative_field_bit_offset+0x114>
     4f4:	ldr	r2, [sp, #52]	; 0x34
     4f8:	sub	r1, r2, #1
     4fc:	str	r1, [sp, #52]	; 0x34
     500:	cmp	r5, #0
     504:	beq	518 <get_next_relative_field_bit_offset+0x148>
     508:	mvn	r3, #0
     50c:	mvn	r2, #0
     510:	str	r2, [r5]
     514:	str	r3, [r5, #4]
     518:	ldr	r1, [r7, #20]
     51c:	cmp	r1, #0
     520:	beq	570 <get_next_relative_field_bit_offset+0x1a0>
     524:	ldr	r0, [r7, #20]
     528:	add	r1, sp, #48	; 0x30
     52c:	add	r2, sp, #32
     530:	bl	0 <coda_expression_eval_bool>
     534:	cmp	r0, #0
     538:	beq	554 <get_next_relative_field_bit_offset+0x184>
     53c:	ldr	r0, [pc, #220]	; 620 <get_next_relative_field_bit_offset+0x250>
     540:	bl	0 <coda_add_error_message>
     544:	mov	r0, r4
     548:	bl	0 <coda_cursor_add_to_error_message>
     54c:	mvn	r0, #0
     550:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     554:	ldr	r1, [sp, #32]
     558:	cmp	r1, #0
     55c:	bne	570 <get_next_relative_field_bit_offset+0x1a0>
     560:	str	r8, [r6]
     564:	str	r9, [r6, #4]
     568:	mov	r0, #0
     56c:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     570:	ldr	r0, [r7, #32]
     574:	add	r1, sp, #48	; 0x30
     578:	mov	r2, r6
     57c:	bl	0 <coda_expression_eval_integer>
     580:	cmp	r0, #0
     584:	beq	5a0 <get_next_relative_field_bit_offset+0x1d0>
     588:	ldr	r0, [pc, #152]	; 628 <get_next_relative_field_bit_offset+0x258>
     58c:	bl	0 <coda_add_error_message>
     590:	mov	r0, r4
     594:	bl	0 <coda_cursor_add_to_error_message>
     598:	mvn	r0, #0
     59c:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     5a0:	mov	r0, #0
     5a4:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     5a8:	add	r1, sp, #40	; 0x28
     5ac:	mov	r0, r4
     5b0:	bl	0 <coda_cursor_get_bit_size>
     5b4:	cmp	r0, #0
     5b8:	beq	5c4 <get_next_relative_field_bit_offset+0x1f4>
     5bc:	mvn	r0, #0
     5c0:	b	5fc <get_next_relative_field_bit_offset+0x22c>
     5c4:	ldr	r0, [sp, #40]	; 0x28
     5c8:	ldr	r2, [sp, #44]	; 0x2c
     5cc:	adds	lr, r8, r0
     5d0:	adc	r3, r9, r2
     5d4:	mov	r2, lr
     5d8:	str	r2, [r6]
     5dc:	str	r3, [r6, #4]
     5e0:	cmp	r5, #0
     5e4:	beq	5f8 <get_next_relative_field_bit_offset+0x228>
     5e8:	ldr	r1, [sp, #40]	; 0x28
     5ec:	ldr	r3, [sp, #44]	; 0x2c
     5f0:	str	r1, [r5]
     5f4:	str	r3, [r5, #4]
     5f8:	mov	r0, #0
     5fc:	ldr	r4, [sp, #8]
     600:	ldr	r5, [sp, #12]
     604:	ldr	r6, [sp, #16]
     608:	ldr	r7, [sp, #20]
     60c:	ldr	r8, [sp, #24]
     610:	ldr	r9, [sp, #28]
     614:	ldr	lr, [sp, #4]
     618:	add	sp, sp, #568	; 0x238
     61c:	bx	lr
     620:	.word	0x00000316
     624:	.word	0x00000357
     628:	.word	0x00000062
     62c:	.word	0x00000000
     630:	.word	0x00000111

00000634 <coda_ascbin_cursor_set_product>:
     634:	mov	ip, sp
     638:	sub	sp, sp, #16
     63c:	str	ip, [sp]
     640:	str	lr, [sp, #4]
     644:	str	r4, [sp, #8]
     648:	str	r5, [sp, #12]
     64c:	mov	r4, r1
     650:	mov	r5, r0
     654:	str	r4, [r5]
     658:	mov	r3, #1
     65c:	str	r3, [r5, #4]
     660:	ldr	r2, [r4, #20]
     664:	cmp	r2, #0
     668:	bne	680 <coda_ascbin_cursor_set_product+0x4c>
     66c:	ldr	r0, [pc, #76]	; 6c0 <coda_ascbin_cursor_set_product+0x8c>
     670:	ldr	r1, [pc, #68]	; 6bc <coda_ascbin_cursor_set_product+0x88>
     674:	mov	r2, #234	; 0xea
     678:	ldr	r3, [pc, #56]	; 6b8 <coda_ascbin_cursor_set_product+0x84>
     67c:	bl	0 <__assert_fail>
     680:	ldr	r0, [r4, #20]
     684:	str	r0, [r5, #8]
     688:	mvn	ip, #0
     68c:	str	ip, [r5, #12]
     690:	mov	r1, #0
     694:	mov	r0, #0
     698:	str	r0, [r5, #16]
     69c:	str	r1, [r5, #20]
     6a0:	mov	r0, #0
     6a4:	ldr	r4, [sp, #8]
     6a8:	ldr	r5, [sp, #12]
     6ac:	ldr	lr, [sp, #4]
     6b0:	add	sp, sp, #16
     6b4:	bx	lr
     6b8:	.word	0x0000037a
     6bc:	.word	0x00000000
     6c0:	.word	0x0000017c

000006c4 <coda_ascbin_cursor_goto_record_field_by_index>:
     6c4:	mov	ip, sp
     6c8:	sub	sp, sp, #48	; 0x30
     6cc:	str	ip, [sp]
     6d0:	str	lr, [sp, #4]
     6d4:	str	r4, [sp, #8]
     6d8:	str	r5, [sp, #12]
     6dc:	str	r6, [sp, #16]
     6e0:	str	r7, [sp, #20]
     6e4:	str	r8, [sp, #24]
     6e8:	mov	r4, r1
     6ec:	mov	r5, r0
     6f0:	mov	r2, #1
     6f4:	str	r2, [sp, #32]
     6f8:	ldr	r1, [r5, #4]
     6fc:	lsl	r3, r1, #4
     700:	add	r2, r5, r3
     704:	sub	lr, r2, #4096	; 0x1000
     708:	ldr	ip, [lr, #4088]	; 0xff8
     70c:	ldr	r2, [ip]
     710:	cmp	r2, #100	; 0x64
     714:	blt	734 <coda_ascbin_cursor_goto_record_field_by_index+0x70>
     718:	ldr	r2, [r5, #4]
     71c:	lsl	r2, r2, #4
     720:	add	r3, r5, r2
     724:	sub	lr, r3, #4096	; 0x1000
     728:	ldr	r1, [lr, #4088]	; 0xff8
     72c:	ldr	r6, [r1, #4]
     730:	b	748 <coda_ascbin_cursor_goto_record_field_by_index+0x84>
     734:	ldr	ip, [r5, #4]
     738:	lsl	r0, ip, #4
     73c:	add	r1, r5, r0
     740:	sub	lr, r1, #4096	; 0x1000
     744:	ldr	r6, [lr, #4088]	; 0xff8
     748:	cmp	r4, #0
     74c:	blt	764 <coda_ascbin_cursor_goto_record_field_by_index+0xa0>
     750:	ldr	r3, [r6, #48]	; 0x30
     754:	cmp	r4, r3
     758:	movge	r1, #1
     75c:	movlt	r1, #0
     760:	b	768 <coda_ascbin_cursor_goto_record_field_by_index+0xa4>
     764:	mov	r1, #1
     768:	cmp	r1, #0
     76c:	beq	78c <coda_ascbin_cursor_goto_record_field_by_index+0xc8>
     770:	mvn	r0, #100	; 0x64
     774:	ldr	r1, [pc, #388]	; 900 <coda_ascbin_cursor_goto_record_field_by_index+0x23c>
     778:	ldr	r3, [r6, #48]	; 0x30
     77c:	mov	r2, r4
     780:	bl	0 <coda_set_error>
     784:	mvn	r0, #0
     788:	b	8dc <coda_ascbin_cursor_goto_record_field_by_index+0x218>
     78c:	ldr	ip, [r5, #4]
     790:	lsl	r3, ip, #4
     794:	add	r0, r5, r3
     798:	ldr	r8, [r0]
     79c:	ldr	r7, [r0, #4]
     7a0:	ldr	r1, [r6, #68]	; 0x44
     7a4:	cmp	r1, #0
     7a8:	bne	828 <coda_ascbin_cursor_goto_record_field_by_index+0x164>
     7ac:	add	r2, sp, #40	; 0x28
     7b0:	mov	r1, r4
     7b4:	mov	r0, r5
     7b8:	bl	0 <get_relative_field_bit_offset_by_index>
     7bc:	cmp	r0, #0
     7c0:	beq	7cc <coda_ascbin_cursor_goto_record_field_by_index+0x108>
     7c4:	mvn	r0, #0
     7c8:	b	8dc <coda_ascbin_cursor_goto_record_field_by_index+0x218>
     7cc:	ldr	r0, [sp, #40]	; 0x28
     7d0:	ldr	r2, [sp, #44]	; 0x2c
     7d4:	adds	r8, r8, r0
     7d8:	adc	r7, r7, r2
     7dc:	ldr	r1, [r6, #52]	; 0x34
     7e0:	ldr	r2, [r1, r4, lsl #2]
     7e4:	ldr	ip, [r2, #20]
     7e8:	cmp	ip, #0
     7ec:	beq	858 <coda_ascbin_cursor_goto_record_field_by_index+0x194>
     7f0:	ldr	r1, [r6, #52]	; 0x34
     7f4:	ldr	r0, [r1, r4, lsl #2]
     7f8:	ldr	r0, [r0, #20]
     7fc:	add	r2, sp, #32
     800:	mov	r1, r5
     804:	bl	0 <coda_expression_eval_bool>
     808:	cmp	r0, #0
     80c:	beq	858 <coda_ascbin_cursor_goto_record_field_by_index+0x194>
     810:	ldr	r0, [pc, #228]	; 8fc <coda_ascbin_cursor_goto_record_field_by_index+0x238>
     814:	bl	0 <coda_add_error_message>
     818:	mov	r0, r5
     81c:	bl	0 <coda_cursor_add_to_error_message>
     820:	mvn	r0, #0
     824:	b	8dc <coda_ascbin_cursor_goto_record_field_by_index+0x218>
     828:	add	r1, sp, #36	; 0x24
     82c:	mov	r0, r5
     830:	bl	0 <coda_cursor_get_available_union_field_index>
     834:	cmp	r0, #0
     838:	beq	844 <coda_ascbin_cursor_goto_record_field_by_index+0x180>
     83c:	mvn	r0, #0
     840:	b	8dc <coda_ascbin_cursor_goto_record_field_by_index+0x218>
     844:	ldr	r3, [sp, #36]	; 0x24
     848:	cmp	r4, r3
     84c:	beq	858 <coda_ascbin_cursor_goto_record_field_by_index+0x194>
     850:	mov	r0, #0
     854:	str	r0, [sp, #32]
     858:	ldr	r0, [r5, #4]
     85c:	add	r3, r0, #1
     860:	str	r3, [r5, #4]
     864:	ldr	r0, [sp, #32]
     868:	cmp	r0, #0
     86c:	bne	890 <coda_ascbin_cursor_goto_record_field_by_index+0x1cc>
     870:	ldr	r0, [r6]
     874:	bl	0 <coda_no_data_singleton>
     878:	ldr	r1, [r5, #4]
     87c:	lsl	r1, r1, #4
     880:	add	ip, r5, r1
     884:	sub	lr, ip, #4096	; 0x1000
     888:	str	r0, [lr, #4088]	; 0xff8
     88c:	b	8b0 <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     890:	ldr	r1, [r5, #4]
     894:	lsl	r2, r1, #4
     898:	add	r0, r5, r2
     89c:	ldr	r3, [r6, #52]	; 0x34
     8a0:	ldr	r3, [r3, r4, lsl #2]
     8a4:	ldr	r3, [r3, #8]
     8a8:	sub	lr, r0, #4096	; 0x1000
     8ac:	str	r3, [lr, #4088]	; 0xff8
     8b0:	ldr	r2, [r5, #4]
     8b4:	lsl	r1, r2, #4
     8b8:	add	ip, r5, r1
     8bc:	sub	lr, ip, #4096	; 0x1000
     8c0:	str	r4, [lr, #4092]	; 0xffc
     8c4:	ldr	ip, [r5, #4]
     8c8:	lsl	r2, ip, #4
     8cc:	add	r0, r5, r2
     8d0:	str	r8, [r0]
     8d4:	str	r7, [r0, #4]
     8d8:	mov	r0, #0
     8dc:	ldr	r4, [sp, #8]
     8e0:	ldr	r5, [sp, #12]
     8e4:	ldr	r6, [sp, #16]
     8e8:	ldr	r7, [sp, #20]
     8ec:	ldr	r8, [sp, #24]
     8f0:	ldr	lr, [sp, #4]
     8f4:	add	sp, sp, #48	; 0x30
     8f8:	bx	lr
     8fc:	.word	0x00000316
     900:	.word	0x0000014e

00000904 <coda_ascbin_cursor_goto_next_record_field>:
     904:	mov	ip, sp
     908:	sub	sp, sp, #1088	; 0x440
     90c:	str	ip, [sp]
     910:	str	lr, [sp, #4]
     914:	str	r4, [sp, #8]
     918:	str	r5, [sp, #12]
     91c:	str	r6, [sp, #16]
     920:	str	r7, [sp, #20]
     924:	str	r8, [sp, #24]
     928:	mov	r5, r0
     92c:	mov	r1, #1
     930:	str	r1, [sp, #32]
     934:	ldr	r3, [r5, #4]
     938:	lsl	r3, r3, #4
     93c:	add	r2, r5, r3
     940:	sub	lr, r2, #4096	; 0x1000
     944:	ldr	ip, [lr, #4072]	; 0xfe8
     948:	ldr	r0, [ip]
     94c:	cmp	r0, #100	; 0x64
     950:	blt	970 <coda_ascbin_cursor_goto_next_record_field+0x6c>
     954:	ldr	r2, [r5, #4]
     958:	lsl	r1, r2, #4
     95c:	add	r0, r5, r1
     960:	sub	lr, r0, #4096	; 0x1000
     964:	ldr	r0, [lr, #4072]	; 0xfe8
     968:	ldr	r6, [r0, #4]
     96c:	b	984 <coda_ascbin_cursor_goto_next_record_field+0x80>
     970:	ldr	ip, [r5, #4]
     974:	lsl	r2, ip, #4
     978:	add	r3, r5, r2
     97c:	sub	lr, r3, #4096	; 0x1000
     980:	ldr	r6, [lr, #4072]	; 0xfe8
     984:	ldr	r3, [r5, #4]
     988:	lsl	ip, r3, #4
     98c:	add	r2, r5, ip
     990:	sub	lr, r2, #4096	; 0x1000
     994:	ldr	r0, [lr, #4092]	; 0xffc
     998:	add	r4, r0, #1
     99c:	cmp	r4, #0
     9a0:	blt	9b8 <coda_ascbin_cursor_goto_next_record_field+0xb4>
     9a4:	ldr	ip, [r6, #48]	; 0x30
     9a8:	cmp	r4, ip
     9ac:	movge	ip, #1
     9b0:	movlt	ip, #0
     9b4:	b	9bc <coda_ascbin_cursor_goto_next_record_field+0xb8>
     9b8:	mov	ip, #1
     9bc:	cmp	ip, #0
     9c0:	beq	9e0 <coda_ascbin_cursor_goto_next_record_field+0xdc>
     9c4:	mvn	r0, #100	; 0x64
     9c8:	ldr	r1, [pc, #464]	; ba0 <coda_ascbin_cursor_goto_next_record_field+0x29c>
     9cc:	ldr	r3, [r6, #48]	; 0x30
     9d0:	mov	r2, r4
     9d4:	bl	0 <coda_set_error>
     9d8:	mvn	r0, #0
     9dc:	b	b7c <coda_ascbin_cursor_goto_next_record_field+0x278>
     9e0:	ldr	r2, [r5, #4]
     9e4:	lsl	r1, r2, #4
     9e8:	add	r2, r5, r1
     9ec:	sub	lr, r2, #4096	; 0x1000
     9f0:	ldr	r7, [lr, #4080]	; 0xff0
     9f4:	sub	lr, r2, #4096	; 0x1000
     9f8:	ldr	r8, [lr, #4084]	; 0xff4
     9fc:	ldr	r1, [r6, #68]	; 0x44
     a00:	cmp	r1, #0
     a04:	bne	aac <coda_ascbin_cursor_goto_next_record_field+0x1a8>
     a08:	add	r1, sp, #40	; 0x28
     a0c:	mov	r2, #0
     a10:	mov	r0, r5
     a14:	bl	3d0 <get_next_relative_field_bit_offset>
     a18:	cmp	r0, #0
     a1c:	beq	a28 <coda_ascbin_cursor_goto_next_record_field+0x124>
     a20:	mvn	r0, #0
     a24:	b	b7c <coda_ascbin_cursor_goto_next_record_field+0x278>
     a28:	ldr	r3, [sp, #40]	; 0x28
     a2c:	ldr	r0, [sp, #44]	; 0x2c
     a30:	adds	r7, r7, r3
     a34:	adc	r8, r8, r0
     a38:	ldr	r1, [r6, #52]	; 0x34
     a3c:	ldr	ip, [r1, r4, lsl #2]
     a40:	ldr	r0, [ip, #20]
     a44:	cmp	r0, #0
     a48:	beq	b04 <coda_ascbin_cursor_goto_next_record_field+0x200>
     a4c:	mov	r2, r5
     a50:	add	r3, sp, #48	; 0x30
     a54:	mov	lr, #130	; 0x82
     a58:	ldr	ip, [r2], #4
     a5c:	subs	lr, lr, #1
     a60:	str	ip, [r3], #4
     a64:	bne	a58 <coda_ascbin_cursor_goto_next_record_field+0x154>
     a68:	ldr	ip, [sp, #52]	; 0x34
     a6c:	sub	r0, ip, #1
     a70:	str	r0, [sp, #52]	; 0x34
     a74:	ldr	r2, [r6, #52]	; 0x34
     a78:	ldr	r3, [r2, r4, lsl #2]
     a7c:	ldr	r0, [r3, #20]
     a80:	add	r1, sp, #48	; 0x30
     a84:	add	r2, sp, #32
     a88:	bl	0 <coda_expression_eval_bool>
     a8c:	cmp	r0, #0
     a90:	beq	b04 <coda_ascbin_cursor_goto_next_record_field+0x200>
     a94:	ldr	r0, [pc, #256]	; b9c <coda_ascbin_cursor_goto_next_record_field+0x298>
     a98:	bl	0 <coda_add_error_message>
     a9c:	mov	r0, r5
     aa0:	bl	0 <coda_cursor_add_to_error_message>
     aa4:	mvn	r0, #0
     aa8:	b	b7c <coda_ascbin_cursor_goto_next_record_field+0x278>
     aac:	mov	r2, r5
     ab0:	add	r3, sp, #568	; 0x238
     ab4:	mov	lr, #130	; 0x82
     ab8:	ldr	ip, [r2], #4
     abc:	subs	lr, lr, #1
     ac0:	str	ip, [r3], #4
     ac4:	bne	ab8 <coda_ascbin_cursor_goto_next_record_field+0x1b4>
     ac8:	ldr	r1, [sp, #572]	; 0x23c
     acc:	sub	r3, r1, #1
     ad0:	str	r3, [sp, #572]	; 0x23c
     ad4:	add	r0, sp, #568	; 0x238
     ad8:	add	r1, sp, #36	; 0x24
     adc:	bl	0 <coda_cursor_get_available_union_field_index>
     ae0:	cmp	r0, #0
     ae4:	beq	af0 <coda_ascbin_cursor_goto_next_record_field+0x1ec>
     ae8:	mvn	r0, #0
     aec:	b	b7c <coda_ascbin_cursor_goto_next_record_field+0x278>
     af0:	ldr	r3, [sp, #36]	; 0x24
     af4:	cmp	r4, r3
     af8:	beq	b04 <coda_ascbin_cursor_goto_next_record_field+0x200>
     afc:	mov	r3, #0
     b00:	str	r3, [sp, #32]
     b04:	ldr	r2, [sp, #32]
     b08:	cmp	r2, #0
     b0c:	bne	b30 <coda_ascbin_cursor_goto_next_record_field+0x22c>
     b10:	ldr	r0, [r6]
     b14:	bl	0 <coda_no_data_singleton>
     b18:	ldr	r3, [r5, #4]
     b1c:	lsl	r1, r3, #4
     b20:	add	r1, r5, r1
     b24:	sub	lr, r1, #4096	; 0x1000
     b28:	str	r0, [lr, #4088]	; 0xff8
     b2c:	b	b50 <coda_ascbin_cursor_goto_next_record_field+0x24c>
     b30:	ldr	ip, [r5, #4]
     b34:	lsl	r0, ip, #4
     b38:	add	r2, r5, r0
     b3c:	ldr	r3, [r6, #52]	; 0x34
     b40:	ldr	ip, [r3, r4, lsl #2]
     b44:	ldr	r0, [ip, #8]
     b48:	sub	lr, r2, #4096	; 0x1000
     b4c:	str	r0, [lr, #4088]	; 0xff8
     b50:	ldr	r1, [r5, #4]
     b54:	lsl	r1, r1, #4
     b58:	add	ip, r5, r1
     b5c:	sub	lr, ip, #4096	; 0x1000
     b60:	str	r4, [lr, #4092]	; 0xffc
     b64:	ldr	r1, [r5, #4]
     b68:	lsl	r0, r1, #4
     b6c:	add	ip, r5, r0
     b70:	str	r7, [ip]
     b74:	str	r8, [ip, #4]
     b78:	mov	r0, #0
     b7c:	ldr	r4, [sp, #8]
     b80:	ldr	r5, [sp, #12]
     b84:	ldr	r6, [sp, #16]
     b88:	ldr	r7, [sp, #20]
     b8c:	ldr	r8, [sp, #24]
     b90:	ldr	lr, [sp, #4]
     b94:	add	sp, sp, #1088	; 0x440
     b98:	bx	lr
     b9c:	.word	0x00000316
     ba0:	.word	0x0000014e

00000ba4 <coda_ascbin_cursor_goto_available_union_field>:
     ba4:	mov	ip, sp
     ba8:	sub	sp, sp, #24
     bac:	str	ip, [sp]
     bb0:	str	lr, [sp, #4]
     bb4:	str	r4, [sp, #8]
     bb8:	str	r5, [sp, #12]
     bbc:	mov	r5, r0
     bc0:	ldr	r2, [r5, #4]
     bc4:	lsl	r3, r2, #4
     bc8:	add	ip, r5, r3
     bcc:	sub	lr, ip, #4096	; 0x1000
     bd0:	ldr	r0, [lr, #4088]	; 0xff8
     bd4:	ldr	r3, [r0]
     bd8:	cmp	r3, #100	; 0x64
     bdc:	blt	bfc <coda_ascbin_cursor_goto_available_union_field+0x58>
     be0:	ldr	r1, [r5, #4]
     be4:	lsl	ip, r1, #4
     be8:	add	r2, r5, ip
     bec:	sub	lr, r2, #4096	; 0x1000
     bf0:	ldr	r1, [lr, #4088]	; 0xff8
     bf4:	ldr	r4, [r1, #4]
     bf8:	b	c10 <coda_ascbin_cursor_goto_available_union_field+0x6c>
     bfc:	ldr	r3, [r5, #4]
     c00:	lsl	r0, r3, #4
     c04:	add	r1, r5, r0
     c08:	sub	lr, r1, #4096	; 0x1000
     c0c:	ldr	r4, [lr, #4088]	; 0xff8
     c10:	ldr	r2, [r4, #68]	; 0x44
     c14:	cmp	r2, #0
     c18:	bne	c30 <coda_ascbin_cursor_goto_available_union_field+0x8c>
     c1c:	mvn	r0, #104	; 0x68
     c20:	ldr	r1, [pc, #180]	; cdc <coda_ascbin_cursor_goto_available_union_field+0x138>
     c24:	bl	0 <coda_set_error>
     c28:	mvn	r0, #0
     c2c:	b	cc8 <coda_ascbin_cursor_goto_available_union_field+0x124>
     c30:	add	r1, sp, #16
     c34:	mov	r0, r5
     c38:	bl	1f0c <coda_ascbin_cursor_get_available_union_field_index>
     c3c:	cmp	r0, #0
     c40:	beq	c4c <coda_ascbin_cursor_goto_available_union_field+0xa8>
     c44:	mvn	r0, #0
     c48:	b	cc8 <coda_ascbin_cursor_goto_available_union_field+0x124>
     c4c:	ldr	r3, [r5, #4]
     c50:	add	ip, r3, #1
     c54:	str	ip, [r5, #4]
     c58:	ldr	r2, [r5, #4]
     c5c:	lsl	r0, r2, #4
     c60:	add	ip, r5, r0
     c64:	ldr	r0, [r4, #52]	; 0x34
     c68:	ldr	r3, [sp, #16]
     c6c:	ldr	r3, [r0, r3, lsl #2]
     c70:	ldr	r0, [r3, #8]
     c74:	sub	lr, ip, #4096	; 0x1000
     c78:	str	r0, [lr, #4088]	; 0xff8
     c7c:	ldr	r0, [r5, #4]
     c80:	lsl	r2, r0, #4
     c84:	add	ip, r5, r2
     c88:	ldr	r2, [sp, #16]
     c8c:	sub	lr, ip, #4096	; 0x1000
     c90:	str	r2, [lr, #4092]	; 0xffc
     c94:	ldr	ip, [r5, #4]
     c98:	lsl	r2, ip, #4
     c9c:	add	r3, r5, r2
     ca0:	ldr	r0, [r5, #4]
     ca4:	lsl	r0, r0, #4
     ca8:	add	r0, r5, r0
     cac:	sub	lr, r0, #4096	; 0x1000
     cb0:	ldr	r1, [lr, #4080]	; 0xff0
     cb4:	sub	lr, r0, #4096	; 0x1000
     cb8:	ldr	r2, [lr, #4084]	; 0xff4
     cbc:	str	r1, [r3]
     cc0:	str	r2, [r3, #4]
     cc4:	mov	r0, #0
     cc8:	ldr	r4, [sp, #8]
     ccc:	ldr	r5, [sp, #12]
     cd0:	ldr	lr, [sp, #4]
     cd4:	add	sp, sp, #24
     cd8:	bx	lr
     cdc:	.word	0x000000a0

00000ce0 <coda_ascbin_cursor_goto_array_element>:
     ce0:	mov	ip, sp
     ce4:	sub	sp, sp, #56	; 0x38
     ce8:	str	ip, [sp]
     cec:	str	lr, [sp, #4]
     cf0:	str	r4, [sp, #8]
     cf4:	str	r5, [sp, #12]
     cf8:	str	r6, [sp, #16]
     cfc:	str	r7, [sp, #20]
     d00:	str	r8, [sp, #24]
     d04:	str	r9, [sp, #28]
     d08:	str	sl, [sp, #32]
     d0c:	mov	r7, r2
     d10:	mov	r2, r1
     d14:	mov	r5, r0
     d18:	ldr	r3, [r5, #4]
     d1c:	lsl	r3, r3, #4
     d20:	add	r3, r5, r3
     d24:	sub	lr, r3, #4096	; 0x1000
     d28:	ldr	ip, [lr, #4088]	; 0xff8
     d2c:	ldr	r0, [ip]
     d30:	cmp	r0, #100	; 0x64
     d34:	blt	d54 <coda_ascbin_cursor_goto_array_element+0x74>
     d38:	ldr	r3, [r5, #4]
     d3c:	lsl	ip, r3, #4
     d40:	add	r0, r5, ip
     d44:	sub	lr, r0, #4096	; 0x1000
     d48:	ldr	ip, [lr, #4088]	; 0xff8
     d4c:	ldr	r4, [ip, #4]
     d50:	b	d68 <coda_ascbin_cursor_goto_array_element+0x88>
     d54:	ldr	r0, [r5, #4]
     d58:	lsl	ip, r0, #4
     d5c:	add	r0, r5, ip
     d60:	sub	lr, r0, #4096	; 0x1000
     d64:	ldr	r4, [lr, #4088]	; 0xff8
     d68:	ldr	r3, [r4, #48]	; 0x30
     d6c:	cmp	r2, r3
     d70:	beq	d8c <coda_ascbin_cursor_goto_array_element+0xac>
     d74:	mvn	r0, #105	; 0x69
     d78:	ldr	r1, [pc, #640]	; 1000 <coda_ascbin_cursor_goto_array_element+0x320>
     d7c:	ldr	r3, [r4, #48]	; 0x30
     d80:	bl	0 <coda_set_error>
     d84:	mvn	r0, #0
     d88:	b	fd4 <coda_ascbin_cursor_goto_array_element+0x2f4>
     d8c:	mov	r6, #0
     d90:	mov	r8, #0
     d94:	ldr	r1, [r4, #48]	; 0x30
     d98:	cmp	r8, r1
     d9c:	bge	e64 <coda_ascbin_cursor_goto_array_element+0x184>
     da0:	lsl	r2, r8, #2
     da4:	add	r0, r4, r2
     da8:	ldr	r2, [r0, #52]	; 0x34
     dac:	cmn	r2, #1
     db0:	bne	df8 <coda_ascbin_cursor_goto_array_element+0x118>
     db4:	lsl	r2, r8, #2
     db8:	add	r3, r4, r2
     dbc:	ldr	r0, [r3, #84]	; 0x54
     dc0:	add	r2, sp, #40	; 0x28
     dc4:	mov	r1, r5
     dc8:	bl	0 <coda_expression_eval_integer>
     dcc:	cmp	r0, #0
     dd0:	beq	df0 <coda_ascbin_cursor_goto_array_element+0x110>
     dd4:	ldr	r0, [pc, #544]	; ffc <coda_ascbin_cursor_goto_array_element+0x31c>
     dd8:	mov	r1, r8
     ddc:	bl	0 <coda_add_error_message>
     de0:	mov	r0, r5
     de4:	bl	0 <coda_cursor_add_to_error_message>
     de8:	mvn	r0, #0
     dec:	b	fd4 <coda_ascbin_cursor_goto_array_element+0x2f4>
     df0:	ldr	r3, [sp, #40]	; 0x28
     df4:	b	e04 <coda_ascbin_cursor_goto_array_element+0x124>
     df8:	lsl	r0, r8, #2
     dfc:	add	r0, r4, r0
     e00:	ldr	r3, [r0, #52]	; 0x34
     e04:	ldr	r0, [r7, r8, lsl #2]
     e08:	cmp	r0, #0
     e0c:	blt	e24 <coda_ascbin_cursor_goto_array_element+0x144>
     e10:	ldr	r2, [r7, r8, lsl #2]
     e14:	cmp	r2, r3
     e18:	movge	r2, #1
     e1c:	movlt	r2, #0
     e20:	b	e28 <coda_ascbin_cursor_goto_array_element+0x148>
     e24:	mov	r2, #1
     e28:	cmp	r2, #0
     e2c:	beq	e48 <coda_ascbin_cursor_goto_array_element+0x168>
     e30:	mvn	r0, #106	; 0x6a
     e34:	ldr	r1, [pc, #456]	; 1004 <coda_ascbin_cursor_goto_array_element+0x324>
     e38:	ldr	r2, [r7, r8, lsl #2]
     e3c:	bl	0 <coda_set_error>
     e40:	mvn	r0, #0
     e44:	b	fd4 <coda_ascbin_cursor_goto_array_element+0x2f4>
     e48:	cmp	r8, #0
     e4c:	ble	e54 <coda_ascbin_cursor_goto_array_element+0x174>
     e50:	mul	r6, r6, r3
     e54:	ldr	r2, [r7, r8, lsl #2]
     e58:	add	r6, r6, r2
     e5c:	add	r8, r8, #1
     e60:	b	d94 <coda_ascbin_cursor_goto_array_element+0xb4>
     e64:	ldr	r2, [r5, #4]
     e68:	add	r1, r2, #1
     e6c:	str	r1, [r5, #4]
     e70:	ldr	ip, [r5, #4]
     e74:	lsl	r2, ip, #4
     e78:	add	ip, r5, r2
     e7c:	ldr	r1, [r5, #4]
     e80:	lsl	r1, r1, #4
     e84:	add	r1, r5, r1
     e88:	sub	lr, r1, #4096	; 0x1000
     e8c:	ldr	r0, [lr, #4080]	; 0xff0
     e90:	sub	lr, r1, #4096	; 0x1000
     e94:	ldr	r3, [lr, #4084]	; 0xff4
     e98:	str	r0, [ip]
     e9c:	str	r3, [ip, #4]
     ea0:	ldr	r3, [r4, #40]	; 0x28
     ea4:	ldr	r0, [r3, #28]
     ea8:	cmp	r0, #0
     eac:	bge	f54 <coda_ascbin_cursor_goto_array_element+0x274>
     eb0:	mov	r7, #0
     eb4:	cmp	r7, r6
     eb8:	bge	fa4 <coda_ascbin_cursor_goto_array_element+0x2c4>
     ebc:	ldr	r3, [r5, #4]
     ec0:	lsl	r1, r3, #4
     ec4:	add	r0, r5, r1
     ec8:	ldr	r1, [r4, #40]	; 0x28
     ecc:	sub	lr, r0, #4096	; 0x1000
     ed0:	str	r1, [lr, #4088]	; 0xff8
     ed4:	ldr	r1, [r5, #4]
     ed8:	lsl	r3, r1, #4
     edc:	add	r2, r5, r3
     ee0:	sub	lr, r2, #4096	; 0x1000
     ee4:	str	r7, [lr, #4092]	; 0xffc
     ee8:	add	r1, sp, #48	; 0x30
     eec:	mov	r0, r5
     ef0:	bl	0 <coda_cursor_get_bit_size>
     ef4:	cmp	r0, #0
     ef8:	beq	f10 <coda_ascbin_cursor_goto_array_element+0x230>
     efc:	ldr	ip, [r5, #4]
     f00:	sub	ip, ip, #1
     f04:	str	ip, [r5, #4]
     f08:	mvn	r0, #0
     f0c:	b	fd4 <coda_ascbin_cursor_goto_array_element+0x2f4>
     f10:	ldr	r0, [r5, #4]
     f14:	lsl	r1, r0, #4
     f18:	add	r2, r5, r1
     f1c:	ldr	ip, [r5, #4]
     f20:	lsl	r0, ip, #4
     f24:	add	ip, r5, r0
     f28:	ldr	r1, [ip]
     f2c:	ldr	r3, [ip, #4]
     f30:	ldr	ip, [sp, #48]	; 0x30
     f34:	ldr	r0, [sp, #52]	; 0x34
     f38:	adds	lr, r1, ip
     f3c:	adc	ip, r3, r0
     f40:	mov	r3, lr
     f44:	str	r3, [r2]
     f48:	str	ip, [r2, #4]
     f4c:	add	r7, r7, #1
     f50:	b	eb4 <coda_ascbin_cursor_goto_array_element+0x1d4>
     f54:	ldr	ip, [r5, #4]
     f58:	lsl	r0, ip, #4
     f5c:	add	r7, r5, r0
     f60:	ldr	r1, [r5, #4]
     f64:	lsl	ip, r1, #4
     f68:	add	r0, r5, ip
     f6c:	ldr	ip, [r0]
     f70:	ldr	r8, [r0, #4]
     f74:	asr	r2, r6, #31
     f78:	mov	r1, r6
     f7c:	ldr	r3, [r4, #40]	; 0x28
     f80:	ldr	r0, [r3, #24]
     f84:	ldr	r9, [r3, #28]
     f88:	umull	r3, sl, r1, r0
     f8c:	mla	r1, r1, r9, sl
     f90:	mla	r1, r2, r0, r1
     f94:	adds	r3, ip, r3
     f98:	adc	r2, r8, r1
     f9c:	str	r3, [r7]
     fa0:	str	r2, [r7, #4]
     fa4:	ldr	r1, [r5, #4]
     fa8:	lsl	r1, r1, #4
     fac:	add	r0, r5, r1
     fb0:	ldr	ip, [r4, #40]	; 0x28
     fb4:	sub	lr, r0, #4096	; 0x1000
     fb8:	str	ip, [lr, #4088]	; 0xff8
     fbc:	ldr	r3, [r5, #4]
     fc0:	lsl	r3, r3, #4
     fc4:	add	r1, r5, r3
     fc8:	sub	lr, r1, #4096	; 0x1000
     fcc:	str	r6, [lr, #4092]	; 0xffc
     fd0:	mov	r0, #0
     fd4:	ldr	r4, [sp, #8]
     fd8:	ldr	r5, [sp, #12]
     fdc:	ldr	r6, [sp, #16]
     fe0:	ldr	r7, [sp, #20]
     fe4:	ldr	r8, [sp, #24]
     fe8:	ldr	r9, [sp, #28]
     fec:	ldr	sl, [sp, #32]
     ff0:	ldr	lr, [sp, #4]
     ff4:	add	sp, sp, #56	; 0x38
     ff8:	bx	lr
     ffc:	.word	0x0000025c
    1000:	.word	0x000002d0
    1004:	.word	0x000000c1

00001008 <coda_ascbin_cursor_goto_array_element_by_index>:
    1008:	mov	ip, sp
    100c:	sub	sp, sp, #56	; 0x38
    1010:	str	ip, [sp]
    1014:	str	lr, [sp, #4]
    1018:	str	r4, [sp, #8]
    101c:	str	r5, [sp, #12]
    1020:	str	r6, [sp, #16]
    1024:	str	r7, [sp, #20]
    1028:	str	r8, [sp, #24]
    102c:	str	r9, [sp, #28]
    1030:	str	sl, [sp, #32]
    1034:	mov	r6, r1
    1038:	mov	r4, r0
    103c:	ldr	ip, [r4, #4]
    1040:	lsl	r1, ip, #4
    1044:	add	r3, r4, r1
    1048:	sub	lr, r3, #4096	; 0x1000
    104c:	ldr	ip, [lr, #4088]	; 0xff8
    1050:	ldr	r0, [ip]
    1054:	cmp	r0, #100	; 0x64
    1058:	blt	1078 <coda_ascbin_cursor_goto_array_element_by_index+0x70>
    105c:	ldr	r3, [r4, #4]
    1060:	lsl	r2, r3, #4
    1064:	add	r3, r4, r2
    1068:	sub	lr, r3, #4096	; 0x1000
    106c:	ldr	r3, [lr, #4088]	; 0xff8
    1070:	ldr	r5, [r3, #4]
    1074:	b	108c <coda_ascbin_cursor_goto_array_element_by_index+0x84>
    1078:	ldr	r2, [r4, #4]
    107c:	lsl	r1, r2, #4
    1080:	add	r3, r4, r1
    1084:	sub	lr, r3, #4096	; 0x1000
    1088:	ldr	r5, [lr, #4088]	; 0xff8
    108c:	ldr	r1, [pc, #508]	; 1290 <coda_ascbin_cursor_goto_array_element_by_index+0x288>
    1090:	ldr	ip, [r1]
    1094:	cmp	ip, #0
    1098:	beq	10fc <coda_ascbin_cursor_goto_array_element_by_index+0xf4>
    109c:	add	r1, sp, #40	; 0x28
    10a0:	mov	r0, r4
    10a4:	bl	0 <coda_cursor_get_num_elements>
    10a8:	cmp	r0, #0
    10ac:	beq	10b8 <coda_ascbin_cursor_goto_array_element_by_index+0xb0>
    10b0:	mvn	r0, #0
    10b4:	b	1268 <coda_ascbin_cursor_goto_array_element_by_index+0x260>
    10b8:	cmp	r6, #0
    10bc:	blt	10d4 <coda_ascbin_cursor_goto_array_element_by_index+0xcc>
    10c0:	ldr	r2, [sp, #40]	; 0x28
    10c4:	cmp	r6, r2
    10c8:	movge	r1, #1
    10cc:	movlt	r1, #0
    10d0:	b	10d8 <coda_ascbin_cursor_goto_array_element_by_index+0xd0>
    10d4:	mov	r1, #1
    10d8:	cmp	r1, #0
    10dc:	beq	10fc <coda_ascbin_cursor_goto_array_element_by_index+0xf4>
    10e0:	mvn	r0, #106	; 0x6a
    10e4:	ldr	r1, [pc, #424]	; 1294 <coda_ascbin_cursor_goto_array_element_by_index+0x28c>
    10e8:	ldr	r3, [sp, #40]	; 0x28
    10ec:	mov	r2, r6
    10f0:	bl	0 <coda_set_error>
    10f4:	mvn	r0, #0
    10f8:	b	1268 <coda_ascbin_cursor_goto_array_element_by_index+0x260>
    10fc:	ldr	r1, [r4, #4]
    1100:	add	r2, r1, #1
    1104:	str	r2, [r4, #4]
    1108:	ldr	r3, [r4, #4]
    110c:	lsl	r3, r3, #4
    1110:	add	ip, r4, r3
    1114:	ldr	r2, [r4, #4]
    1118:	lsl	r2, r2, #4
    111c:	add	r0, r4, r2
    1120:	sub	lr, r0, #4096	; 0x1000
    1124:	ldr	r1, [lr, #4080]	; 0xff0
    1128:	sub	lr, r0, #4096	; 0x1000
    112c:	ldr	r0, [lr, #4084]	; 0xff4
    1130:	str	r1, [ip]
    1134:	str	r0, [ip, #4]
    1138:	ldr	r0, [r5, #40]	; 0x28
    113c:	ldr	r0, [r0, #28]
    1140:	cmp	r0, #0
    1144:	bge	11e8 <coda_ascbin_cursor_goto_array_element_by_index+0x1e0>
    1148:	mov	r7, #0
    114c:	cmp	r7, r6
    1150:	bge	1238 <coda_ascbin_cursor_goto_array_element_by_index+0x230>
    1154:	ldr	ip, [r4, #4]
    1158:	lsl	r1, ip, #4
    115c:	add	ip, r4, r1
    1160:	ldr	r3, [r5, #40]	; 0x28
    1164:	sub	lr, ip, #4096	; 0x1000
    1168:	str	r3, [lr, #4088]	; 0xff8
    116c:	ldr	r1, [r4, #4]
    1170:	lsl	r0, r1, #4
    1174:	add	r3, r4, r0
    1178:	sub	lr, r3, #4096	; 0x1000
    117c:	str	r7, [lr, #4092]	; 0xffc
    1180:	add	r1, sp, #48	; 0x30
    1184:	mov	r0, r4
    1188:	bl	0 <coda_cursor_get_bit_size>
    118c:	cmp	r0, #0
    1190:	beq	11a8 <coda_ascbin_cursor_goto_array_element_by_index+0x1a0>
    1194:	ldr	r1, [r4, #4]
    1198:	sub	r0, r1, #1
    119c:	str	r0, [r4, #4]
    11a0:	mvn	r0, #0
    11a4:	b	1268 <coda_ascbin_cursor_goto_array_element_by_index+0x260>
    11a8:	ldr	r0, [r4, #4]
    11ac:	lsl	ip, r0, #4
    11b0:	add	r8, r4, ip
    11b4:	ldr	r2, [r4, #4]
    11b8:	lsl	r0, r2, #4
    11bc:	add	r3, r4, r0
    11c0:	ldr	r0, [r3]
    11c4:	ldr	r3, [r3, #4]
    11c8:	ldr	ip, [sp, #48]	; 0x30
    11cc:	ldr	r2, [sp, #52]	; 0x34
    11d0:	adds	ip, r0, ip
    11d4:	adc	r1, r3, r2
    11d8:	str	ip, [r8]
    11dc:	str	r1, [r8, #4]
    11e0:	add	r7, r7, #1
    11e4:	b	114c <coda_ascbin_cursor_goto_array_element_by_index+0x144>
    11e8:	ldr	ip, [r4, #4]
    11ec:	lsl	r0, ip, #4
    11f0:	add	ip, r4, r0
    11f4:	ldr	r2, [r4, #4]
    11f8:	lsl	r1, r2, #4
    11fc:	add	r2, r4, r1
    1200:	ldr	r7, [r2]
    1204:	ldr	r8, [r2, #4]
    1208:	asr	r2, r6, #31
    120c:	mov	r1, r6
    1210:	ldr	r3, [r5, #40]	; 0x28
    1214:	ldr	r0, [r3, #24]
    1218:	ldr	r9, [r3, #28]
    121c:	umull	r3, sl, r1, r0
    1220:	mla	r1, r1, r9, sl
    1224:	mla	r1, r2, r0, r1
    1228:	adds	r3, r7, r3
    122c:	adc	r2, r8, r1
    1230:	str	r3, [ip]
    1234:	str	r2, [ip, #4]
    1238:	ldr	r1, [r4, #4]
    123c:	lsl	ip, r1, #4
    1240:	add	r3, r4, ip
    1244:	ldr	ip, [r5, #40]	; 0x28
    1248:	sub	lr, r3, #4096	; 0x1000
    124c:	str	ip, [lr, #4088]	; 0xff8
    1250:	ldr	r2, [r4, #4]
    1254:	lsl	r1, r2, #4
    1258:	add	r0, r4, r1
    125c:	sub	lr, r0, #4096	; 0x1000
    1260:	str	r6, [lr, #4092]	; 0xffc
    1264:	mov	r0, #0
    1268:	ldr	r4, [sp, #8]
    126c:	ldr	r5, [sp, #12]
    1270:	ldr	r6, [sp, #16]
    1274:	ldr	r7, [sp, #20]
    1278:	ldr	r8, [sp, #24]
    127c:	ldr	r9, [sp, #28]
    1280:	ldr	sl, [sp, #32]
    1284:	ldr	lr, [sp, #4]
    1288:	add	sp, sp, #56	; 0x38
    128c:	bx	lr
    1290:	.word	0x00000000
    1294:	.word	0x000000c1

00001298 <coda_ascbin_cursor_goto_next_array_element>:
    1298:	mov	ip, sp
    129c:	sub	sp, sp, #40	; 0x28
    12a0:	str	ip, [sp]
    12a4:	str	lr, [sp, #4]
    12a8:	str	r4, [sp, #8]
    12ac:	str	r5, [sp, #12]
    12b0:	str	r6, [sp, #16]
    12b4:	mov	r4, r0
    12b8:	ldr	ip, [r4, #4]
    12bc:	lsl	r2, ip, #4
    12c0:	add	r3, r4, r2
    12c4:	sub	lr, r3, #4096	; 0x1000
    12c8:	ldr	r3, [lr, #4072]	; 0xfe8
    12cc:	ldr	r1, [r3]
    12d0:	cmp	r1, #100	; 0x64
    12d4:	blt	12f4 <coda_ascbin_cursor_goto_next_array_element+0x5c>
    12d8:	ldr	ip, [r4, #4]
    12dc:	lsl	r1, ip, #4
    12e0:	add	r0, r4, r1
    12e4:	sub	lr, r0, #4096	; 0x1000
    12e8:	ldr	r3, [lr, #4072]	; 0xfe8
    12ec:	ldr	r5, [r3, #4]
    12f0:	b	1308 <coda_ascbin_cursor_goto_next_array_element+0x70>
    12f4:	ldr	r2, [r4, #4]
    12f8:	lsl	r1, r2, #4
    12fc:	add	r1, r4, r1
    1300:	sub	lr, r1, #4096	; 0x1000
    1304:	ldr	r5, [lr, #4072]	; 0xfe8
    1308:	ldr	r2, [r4, #4]
    130c:	lsl	r1, r2, #4
    1310:	add	r2, r4, r1
    1314:	sub	lr, r2, #4096	; 0x1000
    1318:	ldr	ip, [lr, #4092]	; 0xffc
    131c:	add	r6, ip, #1
    1320:	ldr	r0, [pc, #296]	; 1450 <coda_ascbin_cursor_goto_next_array_element+0x1b8>
    1324:	ldr	r0, [r0]
    1328:	cmp	r0, #0
    132c:	beq	13b4 <coda_ascbin_cursor_goto_next_array_element+0x11c>
    1330:	ldr	ip, [r4, #4]
    1334:	sub	r2, ip, #1
    1338:	str	r2, [r4, #4]
    133c:	add	r1, sp, #24
    1340:	mov	r0, r4
    1344:	bl	0 <coda_cursor_get_num_elements>
    1348:	cmp	r0, #0
    134c:	beq	1364 <coda_ascbin_cursor_goto_next_array_element+0xcc>
    1350:	ldr	ip, [r4, #4]
    1354:	add	ip, ip, #1
    1358:	str	ip, [r4, #4]
    135c:	mvn	r0, #0
    1360:	b	1438 <coda_ascbin_cursor_goto_next_array_element+0x1a0>
    1364:	ldr	r3, [r4, #4]
    1368:	add	r3, r3, #1
    136c:	str	r3, [r4, #4]
    1370:	cmp	r6, #0
    1374:	blt	138c <coda_ascbin_cursor_goto_next_array_element+0xf4>
    1378:	ldr	ip, [sp, #24]
    137c:	cmp	r6, ip
    1380:	movge	r0, #1
    1384:	movlt	r0, #0
    1388:	b	1390 <coda_ascbin_cursor_goto_next_array_element+0xf8>
    138c:	mov	r0, #1
    1390:	cmp	r0, #0
    1394:	beq	13b4 <coda_ascbin_cursor_goto_next_array_element+0x11c>
    1398:	mvn	r0, #106	; 0x6a
    139c:	ldr	r1, [pc, #176]	; 1454 <coda_ascbin_cursor_goto_next_array_element+0x1bc>
    13a0:	ldr	r3, [sp, #24]
    13a4:	mov	r2, r6
    13a8:	bl	0 <coda_set_error>
    13ac:	mvn	r0, #0
    13b0:	b	1438 <coda_ascbin_cursor_goto_next_array_element+0x1a0>
    13b4:	add	r1, sp, #32
    13b8:	mov	r0, r4
    13bc:	bl	0 <coda_cursor_get_bit_size>
    13c0:	cmp	r0, #0
    13c4:	beq	13d0 <coda_ascbin_cursor_goto_next_array_element+0x138>
    13c8:	mvn	r0, #0
    13cc:	b	1438 <coda_ascbin_cursor_goto_next_array_element+0x1a0>
    13d0:	ldr	ip, [r4, #4]
    13d4:	lsl	r0, ip, #4
    13d8:	add	r2, r4, r0
    13dc:	ldr	r1, [r5, #40]	; 0x28
    13e0:	sub	lr, r2, #4096	; 0x1000
    13e4:	str	r1, [lr, #4088]	; 0xff8
    13e8:	ldr	r0, [r4, #4]
    13ec:	lsl	r2, r0, #4
    13f0:	add	r2, r4, r2
    13f4:	sub	lr, r2, #4096	; 0x1000
    13f8:	str	r6, [lr, #4092]	; 0xffc
    13fc:	ldr	r3, [r4, #4]
    1400:	lsl	r0, r3, #4
    1404:	add	ip, r4, r0
    1408:	ldr	r3, [r4, #4]
    140c:	lsl	r2, r3, #4
    1410:	add	r3, r4, r2
    1414:	ldr	r2, [r3]
    1418:	ldr	r0, [r3, #4]
    141c:	ldr	r1, [sp, #32]
    1420:	ldr	r3, [sp, #36]	; 0x24
    1424:	adds	r1, r2, r1
    1428:	adc	r0, r0, r3
    142c:	str	r1, [ip]
    1430:	str	r0, [ip, #4]
    1434:	mov	r0, #0
    1438:	ldr	r4, [sp, #8]
    143c:	ldr	r5, [sp, #12]
    1440:	ldr	r6, [sp, #16]
    1444:	ldr	lr, [sp, #4]
    1448:	add	sp, sp, #40	; 0x28
    144c:	bx	lr
    1450:	.word	0x00000000
    1454:	.word	0x000000c1

00001458 <coda_ascbin_cursor_goto_attributes>:
    1458:	mov	ip, sp
    145c:	sub	sp, sp, #16
    1460:	str	ip, [sp]
    1464:	str	lr, [sp, #4]
    1468:	str	r4, [sp, #8]
    146c:	mov	r4, r0
    1470:	ldr	ip, [r4, #4]
    1474:	lsl	r2, ip, #4
    1478:	add	r3, r4, r2
    147c:	sub	lr, r3, #4096	; 0x1000
    1480:	ldr	r2, [lr, #4088]	; 0xff8
    1484:	ldr	r2, [r2]
    1488:	cmp	r2, #100	; 0x64
    148c:	blt	14ac <coda_ascbin_cursor_goto_attributes+0x54>
    1490:	ldr	r1, [r4, #4]
    1494:	lsl	r0, r1, #4
    1498:	add	r0, r4, r0
    149c:	sub	lr, r0, #4096	; 0x1000
    14a0:	ldr	ip, [lr, #4088]	; 0xff8
    14a4:	ldr	ip, [ip, #4]
    14a8:	b	14c0 <coda_ascbin_cursor_goto_attributes+0x68>
    14ac:	ldr	r1, [r4, #4]
    14b0:	lsl	r2, r1, #4
    14b4:	add	r3, r4, r2
    14b8:	sub	lr, r3, #4096	; 0x1000
    14bc:	ldr	ip, [lr, #4088]	; 0xff8
    14c0:	ldr	r0, [ip]
    14c4:	ldr	r1, [r4, #4]
    14c8:	add	r1, r1, #1
    14cc:	str	r1, [r4, #4]
    14d0:	bl	0 <coda_type_empty_record>
    14d4:	ldr	r3, [r4, #4]
    14d8:	lsl	r1, r3, #4
    14dc:	add	ip, r4, r1
    14e0:	sub	lr, ip, #4096	; 0x1000
    14e4:	str	r0, [lr, #4088]	; 0xff8
    14e8:	ldr	r3, [r4, #4]
    14ec:	lsl	ip, r3, #4
    14f0:	add	r1, r4, ip
    14f4:	mvn	r2, #0
    14f8:	sub	lr, r1, #4096	; 0x1000
    14fc:	str	r2, [lr, #4092]	; 0xffc
    1500:	ldr	r0, [r4, #4]
    1504:	lsl	r3, r0, #4
    1508:	add	r2, r4, r3
    150c:	mvn	r1, #0
    1510:	mvn	r0, #0
    1514:	str	r0, [r2]
    1518:	str	r1, [r2, #4]
    151c:	mov	r0, #0
    1520:	ldr	r4, [sp, #8]
    1524:	ldr	lr, [sp, #4]
    1528:	add	sp, sp, #16
    152c:	bx	lr

00001530 <coda_ascbin_cursor_use_base_type_of_special_type>:
    1530:	mov	ip, sp
    1534:	sub	sp, sp, #8
    1538:	str	ip, [sp]
    153c:	str	lr, [sp, #4]
    1540:	ldr	r3, [r0, #4]
    1544:	lsl	r3, r3, #4
    1548:	add	r2, r0, r3
    154c:	sub	lr, r2, #4096	; 0x1000
    1550:	ldr	r1, [lr, #4088]	; 0xff8
    1554:	ldr	r1, [r1]
    1558:	cmp	r1, #100	; 0x64
    155c:	blt	157c <coda_ascbin_cursor_use_base_type_of_special_type+0x4c>
    1560:	ldr	r2, [r0, #4]
    1564:	lsl	ip, r2, #4
    1568:	add	ip, r0, ip
    156c:	sub	lr, ip, #4096	; 0x1000
    1570:	ldr	r1, [lr, #4088]	; 0xff8
    1574:	ldr	r1, [r1, #4]
    1578:	b	1590 <coda_ascbin_cursor_use_base_type_of_special_type+0x60>
    157c:	ldr	ip, [r0, #4]
    1580:	lsl	r1, ip, #4
    1584:	add	r1, r0, r1
    1588:	sub	lr, r1, #4096	; 0x1000
    158c:	ldr	r1, [lr, #4088]	; 0xff8
    1590:	ldr	r2, [r0, #4]
    1594:	lsl	r2, r2, #4
    1598:	add	r3, r0, r2
    159c:	ldr	r0, [r1, #44]	; 0x2c
    15a0:	sub	lr, r3, #4096	; 0x1000
    15a4:	str	r0, [lr, #4088]	; 0xff8
    15a8:	mov	r0, #0
    15ac:	ldr	lr, [sp, #4]
    15b0:	add	sp, sp, #8
    15b4:	bx	lr

000015b8 <coda_ascbin_cursor_get_bit_size>:
    15b8:	mov	ip, sp
    15bc:	sub	sp, sp, #600	; 0x258
    15c0:	sub	sp, sp, #1024	; 0x400
    15c4:	str	ip, [sp]
    15c8:	str	lr, [sp, #4]
    15cc:	str	r4, [sp, #8]
    15d0:	str	r5, [sp, #12]
    15d4:	str	r6, [sp, #16]
    15d8:	str	r7, [sp, #20]
    15dc:	str	r8, [sp, #24]
    15e0:	str	r9, [sp, #28]
    15e4:	mov	r6, r1
    15e8:	mov	r5, r0
    15ec:	ldr	r0, [r5, #4]
    15f0:	lsl	r2, r0, #4
    15f4:	add	r3, r5, r2
    15f8:	sub	lr, r3, #4096	; 0x1000
    15fc:	ldr	r0, [lr, #4088]	; 0xff8
    1600:	ldr	r1, [r0]
    1604:	cmp	r1, #100	; 0x64
    1608:	blt	1628 <coda_ascbin_cursor_get_bit_size+0x70>
    160c:	ldr	ip, [r5, #4]
    1610:	lsl	r1, ip, #4
    1614:	add	r2, r5, r1
    1618:	sub	lr, r2, #4096	; 0x1000
    161c:	ldr	r0, [lr, #4088]	; 0xff8
    1620:	ldr	r4, [r0, #4]
    1624:	b	163c <coda_ascbin_cursor_get_bit_size+0x84>
    1628:	ldr	r3, [r5, #4]
    162c:	lsl	ip, r3, #4
    1630:	add	r2, r5, ip
    1634:	sub	lr, r2, #4096	; 0x1000
    1638:	ldr	r4, [lr, #4088]	; 0xff8
    163c:	ldr	r2, [r4, #28]
    1640:	cmp	r2, #0
    1644:	bge	1b88 <coda_ascbin_cursor_get_bit_size+0x5d0>
    1648:	ldr	r1, [r4, #8]
    164c:	cmp	r1, #0
    1650:	beq	1854 <coda_ascbin_cursor_get_bit_size+0x29c>
    1654:	cmp	r1, #1
    1658:	bne	1834 <coda_ascbin_cursor_get_bit_size+0x27c>
    165c:	add	r1, sp, #36	; 0x24
    1660:	mov	r0, r5
    1664:	bl	0 <coda_cursor_get_num_elements>
    1668:	cmp	r0, #0
    166c:	beq	1678 <coda_ascbin_cursor_get_bit_size+0xc0>
    1670:	mvn	r0, #0
    1674:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1678:	ldr	r3, [sp, #36]	; 0x24
    167c:	cmp	r3, #0
    1680:	beq	1820 <coda_ascbin_cursor_get_bit_size+0x268>
    1684:	ldr	r1, [r4, #40]	; 0x28
    1688:	ldr	ip, [r1, #28]
    168c:	cmp	ip, #0
    1690:	bge	17f4 <coda_ascbin_cursor_get_bit_size+0x23c>
    1694:	mov	r7, #0
    1698:	mov	r8, #0
    169c:	mov	r2, r5
    16a0:	add	r3, sp, #1104	; 0x450
    16a4:	mov	lr, #130	; 0x82
    16a8:	ldr	ip, [r2], #4
    16ac:	subs	lr, lr, #1
    16b0:	str	ip, [r3], #4
    16b4:	bne	16a8 <coda_ascbin_cursor_get_bit_size+0xf0>
    16b8:	ldr	r0, [sp, #1108]	; 0x454
    16bc:	add	r3, r0, #1
    16c0:	str	r3, [sp, #1108]	; 0x454
    16c4:	add	ip, sp, #88	; 0x58
    16c8:	add	ip, ip, #1024	; 0x400
    16cc:	ldr	r1, [sp, #1108]	; 0x454
    16d0:	lsl	r0, r1, #4
    16d4:	add	r2, ip, r0
    16d8:	add	r0, sp, #88	; 0x58
    16dc:	add	r0, r0, #1024	; 0x400
    16e0:	ldr	r3, [sp, #1108]	; 0x454
    16e4:	lsl	ip, r3, #4
    16e8:	add	r1, r0, ip
    16ec:	sub	lr, r1, #4096	; 0x1000
    16f0:	ldr	ip, [lr, #4072]	; 0xfe8
    16f4:	sub	lr, r1, #4096	; 0x1000
    16f8:	ldr	r3, [lr, #4076]	; 0xfec
    16fc:	sub	lr, r2, #4096	; 0x1000
    1700:	str	ip, [lr, #4088]	; 0xff8
    1704:	sub	lr, r2, #4096	; 0x1000
    1708:	str	r3, [lr, #4092]	; 0xffc
    170c:	mov	r5, #0
    1710:	ldr	r0, [sp, #36]	; 0x24
    1714:	cmp	r5, r0
    1718:	bge	17e8 <coda_ascbin_cursor_get_bit_size+0x230>
    171c:	add	ip, sp, #88	; 0x58
    1720:	add	ip, ip, #1024	; 0x400
    1724:	ldr	r0, [sp, #1108]	; 0x454
    1728:	lsl	r2, r0, #4
    172c:	add	r1, ip, r2
    1730:	ldr	r3, [r4, #40]	; 0x28
    1734:	sub	lr, r1, #4096	; 0x1000
    1738:	str	r3, [lr, #4080]	; 0xff0
    173c:	add	r3, sp, #88	; 0x58
    1740:	add	r3, r3, #1024	; 0x400
    1744:	ldr	r2, [sp, #1108]	; 0x454
    1748:	lsl	r0, r2, #4
    174c:	add	r0, r3, r0
    1750:	sub	lr, r0, #4096	; 0x1000
    1754:	str	r5, [lr, #4084]	; 0xff4
    1758:	add	r0, sp, #1104	; 0x450
    175c:	add	r1, sp, #56	; 0x38
    1760:	bl	0 <coda_cursor_get_bit_size>
    1764:	cmp	r0, #0
    1768:	beq	1774 <coda_ascbin_cursor_get_bit_size+0x1bc>
    176c:	mvn	r0, #0
    1770:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1774:	ldr	ip, [sp, #56]	; 0x38
    1778:	ldr	r3, [sp, #60]	; 0x3c
    177c:	adds	r8, r8, ip
    1780:	adc	r7, r7, r3
    1784:	add	r1, sp, #88	; 0x58
    1788:	add	r1, r1, #1024	; 0x400
    178c:	ldr	r2, [sp, #1108]	; 0x454
    1790:	lsl	r0, r2, #4
    1794:	add	r9, r1, r0
    1798:	add	r2, sp, #88	; 0x58
    179c:	add	r2, r2, #1024	; 0x400
    17a0:	ldr	r0, [sp, #1108]	; 0x454
    17a4:	lsl	r1, r0, #4
    17a8:	add	ip, r2, r1
    17ac:	sub	lr, ip, #4096	; 0x1000
    17b0:	ldr	r3, [lr, #4088]	; 0xff8
    17b4:	sub	lr, ip, #4096	; 0x1000
    17b8:	ldr	r1, [lr, #4092]	; 0xffc
    17bc:	ldr	r2, [sp, #56]	; 0x38
    17c0:	ldr	ip, [sp, #60]	; 0x3c
    17c4:	adds	lr, r3, r2
    17c8:	adc	r0, r1, ip
    17cc:	mov	r1, lr
    17d0:	sub	lr, r9, #4096	; 0x1000
    17d4:	str	r1, [lr, #4088]	; 0xff8
    17d8:	sub	lr, r9, #4096	; 0x1000
    17dc:	str	r0, [lr, #4092]	; 0xffc
    17e0:	add	r5, r5, #1
    17e4:	b	1710 <coda_ascbin_cursor_get_bit_size+0x158>
    17e8:	str	r8, [r6]
    17ec:	str	r7, [r6, #4]
    17f0:	b	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    17f4:	ldr	r2, [sp, #36]	; 0x24
    17f8:	asr	r3, r2, #31
    17fc:	ldr	r0, [r4, #40]	; 0x28
    1800:	ldr	ip, [r0, #24]
    1804:	ldr	r4, [r0, #28]
    1808:	umull	r0, r1, r2, ip
    180c:	mla	r2, r2, r4, r1
    1810:	mla	r1, r3, ip, r2
    1814:	str	r0, [r6]
    1818:	str	r1, [r6, #4]
    181c:	b	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1820:	mov	r3, #0
    1824:	mov	r2, #0
    1828:	str	r2, [r6]
    182c:	str	r3, [r6, #4]
    1830:	b	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1834:	ldr	r0, [pc, #908]	; 1bc8 <coda_ascbin_cursor_get_bit_size+0x610>
    1838:	ldr	r1, [pc, #912]	; 1bd0 <coda_ascbin_cursor_get_bit_size+0x618>
    183c:	mov	r2, #768	; 0x300
    1840:	ldr	r3, [pc, #908]	; 1bd4 <coda_ascbin_cursor_get_bit_size+0x61c>
    1844:	bl	0 <__assert_fail>
    1848:	mov	r0, #1
    184c:	bl	0 <exit>
    1850:	b	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1854:	ldr	ip, [pc, #880]	; 1bcc <coda_ascbin_cursor_get_bit_size+0x614>
    1858:	ldr	r3, [ip]
    185c:	cmp	r3, #0
    1860:	beq	1878 <coda_ascbin_cursor_get_bit_size+0x2c0>
    1864:	ldr	r1, [r4, #32]
    1868:	cmp	r1, #0
    186c:	movne	ip, #1
    1870:	moveq	ip, #0
    1874:	b	187c <coda_ascbin_cursor_get_bit_size+0x2c4>
    1878:	mov	ip, #0
    187c:	cmp	ip, #0
    1880:	bne	1ae4 <coda_ascbin_cursor_get_bit_size+0x52c>
    1884:	ldr	ip, [r4, #68]	; 0x44
    1888:	cmp	ip, #0
    188c:	bne	1a94 <coda_ascbin_cursor_get_bit_size+0x4dc>
    1890:	mov	r8, #0
    1894:	mov	r7, #0
    1898:	ldr	r3, [r4, #48]	; 0x30
    189c:	cmp	r3, #0
    18a0:	ble	1a88 <coda_ascbin_cursor_get_bit_size+0x4d0>
    18a4:	mov	r2, r5
    18a8:	add	r3, sp, #584	; 0x248
    18ac:	mov	lr, #130	; 0x82
    18b0:	ldr	ip, [r2], #4
    18b4:	subs	lr, lr, #1
    18b8:	str	ip, [r3], #4
    18bc:	bne	18b0 <coda_ascbin_cursor_get_bit_size+0x2f8>
    18c0:	add	r0, sp, #584	; 0x248
    18c4:	bl	0 <coda_cursor_goto_first_record_field>
    18c8:	cmp	r0, #0
    18cc:	beq	18d8 <coda_ascbin_cursor_get_bit_size+0x320>
    18d0:	mvn	r0, #0
    18d4:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    18d8:	mov	r9, #0
    18dc:	ldr	r3, [r4, #48]	; 0x30
    18e0:	cmp	r9, r3
    18e4:	bge	1a88 <coda_ascbin_cursor_get_bit_size+0x4d0>
    18e8:	mvn	ip, #0
    18ec:	mvn	r3, #0
    18f0:	str	r3, [sp, #48]	; 0x30
    18f4:	str	ip, [sp, #52]	; 0x34
    18f8:	ldr	r2, [r4, #48]	; 0x30
    18fc:	sub	r0, r2, #1
    1900:	cmp	r9, r0
    1904:	bge	1928 <coda_ascbin_cursor_get_bit_size+0x370>
    1908:	add	r0, sp, #584	; 0x248
    190c:	add	r1, sp, #40	; 0x28
    1910:	add	r2, sp, #48	; 0x30
    1914:	bl	3d0 <get_next_relative_field_bit_offset>
    1918:	cmp	r0, #0
    191c:	beq	1928 <coda_ascbin_cursor_get_bit_size+0x370>
    1920:	mvn	r0, #0
    1924:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1928:	ldr	r0, [sp, #52]	; 0x34
    192c:	cmp	r0, #0
    1930:	bge	1950 <coda_ascbin_cursor_get_bit_size+0x398>
    1934:	add	r0, sp, #584	; 0x248
    1938:	add	r1, sp, #48	; 0x30
    193c:	bl	0 <coda_cursor_get_bit_size>
    1940:	cmp	r0, #0
    1944:	beq	1950 <coda_ascbin_cursor_get_bit_size+0x398>
    1948:	mvn	r0, #0
    194c:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1950:	ldr	r3, [sp, #48]	; 0x30
    1954:	ldr	r1, [sp, #52]	; 0x34
    1958:	adds	r7, r7, r3
    195c:	adc	r8, r8, r1
    1960:	ldr	r0, [r4, #48]	; 0x30
    1964:	sub	r2, r0, #1
    1968:	cmp	r9, r2
    196c:	bge	1a80 <coda_ascbin_cursor_get_bit_size+0x4c8>
    1970:	mov	r1, #1
    1974:	str	r1, [sp, #32]
    1978:	ldr	ip, [r4, #52]	; 0x34
    197c:	lsl	r0, r9, #2
    1980:	add	r2, ip, r0
    1984:	ldr	r3, [r2, #4]
    1988:	ldr	ip, [r3, #20]
    198c:	cmp	ip, #0
    1990:	beq	19c4 <coda_ascbin_cursor_get_bit_size+0x40c>
    1994:	ldr	ip, [r4, #52]	; 0x34
    1998:	lsl	r3, r9, #2
    199c:	add	r0, ip, r3
    19a0:	ldr	ip, [r0, #4]
    19a4:	ldr	r0, [ip, #20]
    19a8:	add	r2, sp, #32
    19ac:	mov	r1, r5
    19b0:	bl	0 <coda_expression_eval_bool>
    19b4:	cmp	r0, #0
    19b8:	beq	19c4 <coda_ascbin_cursor_get_bit_size+0x40c>
    19bc:	mvn	r0, #0
    19c0:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    19c4:	ldr	r0, [sp, #32]
    19c8:	cmp	r0, #0
    19cc:	bne	19f4 <coda_ascbin_cursor_get_bit_size+0x43c>
    19d0:	ldr	r0, [r4]
    19d4:	bl	0 <coda_no_data_singleton>
    19d8:	add	r1, sp, #592	; 0x250
    19dc:	ldr	r2, [sp, #588]	; 0x24c
    19e0:	lsl	r2, r2, #4
    19e4:	add	ip, r1, r2
    19e8:	sub	lr, ip, #4096	; 0x1000
    19ec:	str	r0, [lr, #4080]	; 0xff0
    19f0:	b	1a20 <coda_ascbin_cursor_get_bit_size+0x468>
    19f4:	add	r1, sp, #592	; 0x250
    19f8:	ldr	r0, [sp, #588]	; 0x24c
    19fc:	lsl	ip, r0, #4
    1a00:	add	r3, r1, ip
    1a04:	ldr	r2, [r4, #52]	; 0x34
    1a08:	lsl	ip, r9, #2
    1a0c:	add	ip, r2, ip
    1a10:	ldr	ip, [ip, #4]
    1a14:	ldr	ip, [ip, #8]
    1a18:	sub	lr, r3, #4096	; 0x1000
    1a1c:	str	ip, [lr, #4080]	; 0xff0
    1a20:	add	r1, sp, #592	; 0x250
    1a24:	ldr	ip, [sp, #588]	; 0x24c
    1a28:	lsl	r2, ip, #4
    1a2c:	add	r2, r1, r2
    1a30:	add	r3, r9, #1
    1a34:	sub	lr, r2, #4096	; 0x1000
    1a38:	str	r3, [lr, #4084]	; 0xff4
    1a3c:	add	ip, sp, #592	; 0x250
    1a40:	ldr	r0, [sp, #588]	; 0x24c
    1a44:	lsl	r2, r0, #4
    1a48:	add	r3, ip, r2
    1a4c:	ldr	r1, [r5, #4]
    1a50:	lsl	r0, r1, #4
    1a54:	add	r0, r5, r0
    1a58:	ldr	ip, [r0]
    1a5c:	ldr	r1, [r0, #4]
    1a60:	ldr	r2, [sp, #40]	; 0x28
    1a64:	ldr	r0, [sp, #44]	; 0x2c
    1a68:	adds	r2, ip, r2
    1a6c:	adc	ip, r1, r0
    1a70:	sub	lr, r3, #4096	; 0x1000
    1a74:	str	r2, [lr, #4088]	; 0xff8
    1a78:	sub	lr, r3, #4096	; 0x1000
    1a7c:	str	ip, [lr, #4092]	; 0xffc
    1a80:	add	r9, r9, #1
    1a84:	b	18dc <coda_ascbin_cursor_get_bit_size+0x324>
    1a88:	str	r7, [r6]
    1a8c:	str	r8, [r6, #4]
    1a90:	b	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1a94:	mov	r2, r5
    1a98:	add	r3, sp, #64	; 0x40
    1a9c:	mov	lr, #130	; 0x82
    1aa0:	ldr	ip, [r2], #4
    1aa4:	subs	lr, lr, #1
    1aa8:	str	ip, [r3], #4
    1aac:	bne	1aa0 <coda_ascbin_cursor_get_bit_size+0x4e8>
    1ab0:	add	r0, sp, #64	; 0x40
    1ab4:	bl	0 <coda_cursor_goto_available_union_field>
    1ab8:	cmp	r0, #0
    1abc:	beq	1ac8 <coda_ascbin_cursor_get_bit_size+0x510>
    1ac0:	mvn	r0, #0
    1ac4:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1ac8:	add	r0, sp, #64	; 0x40
    1acc:	mov	r1, r6
    1ad0:	bl	0 <coda_cursor_get_bit_size>
    1ad4:	cmp	r0, #0
    1ad8:	beq	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1adc:	mvn	r0, #0
    1ae0:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1ae4:	ldr	r0, [r4, #32]
    1ae8:	mov	r2, r6
    1aec:	mov	r1, r5
    1af0:	bl	0 <coda_expression_eval_integer>
    1af4:	cmp	r0, #0
    1af8:	beq	1b14 <coda_ascbin_cursor_get_bit_size+0x55c>
    1afc:	ldr	r0, [pc, #188]	; 1bc0 <coda_ascbin_cursor_get_bit_size+0x608>
    1b00:	bl	0 <coda_add_error_message>
    1b04:	mov	r0, r5
    1b08:	bl	0 <coda_cursor_add_to_error_message>
    1b0c:	mvn	r0, #0
    1b10:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1b14:	ldr	r1, [r4, #24]
    1b18:	ldr	r0, [r4, #28]
    1b1c:	mvn	r2, r0
    1b20:	eor	r1, r1, #1016	; 0x3f8
    1b24:	eor	r1, r1, #261120	; 0x3fc00
    1b28:	eor	r1, r1, #66846720	; 0x3fc0000
    1b2c:	eor	r1, r1, #-67108864	; 0xfc000000
    1b30:	orr	ip, r2, r1
    1b34:	cmp	ip, #0
    1b38:	bne	1b58 <coda_ascbin_cursor_get_bit_size+0x5a0>
    1b3c:	ldr	ip, [r6]
    1b40:	ldr	r0, [r6, #4]
    1b44:	lsl	r2, r0, #3
    1b48:	orr	r2, r2, ip, lsr #29
    1b4c:	lsl	r1, ip, #3
    1b50:	str	r1, [r6]
    1b54:	str	r2, [r6, #4]
    1b58:	ldr	r1, [r6, #4]
    1b5c:	cmp	r1, #0
    1b60:	bge	1b98 <coda_ascbin_cursor_get_bit_size+0x5e0>
    1b64:	movw	r0, #65236	; 0xfed4
    1b68:	movt	r0, #65535	; 0xffff
    1b6c:	ldr	r1, [pc, #80]	; 1bc4 <coda_ascbin_cursor_get_bit_size+0x60c>
    1b70:	ldr	r2, [r6]
    1b74:	bl	0 <coda_set_error>
    1b78:	mov	r0, r5
    1b7c:	bl	0 <coda_cursor_add_to_error_message>
    1b80:	mvn	r0, #0
    1b84:	b	1b9c <coda_ascbin_cursor_get_bit_size+0x5e4>
    1b88:	ldr	r3, [r4, #24]
    1b8c:	ldr	ip, [r4, #28]
    1b90:	str	r3, [r6]
    1b94:	str	ip, [r6, #4]
    1b98:	mov	r0, #0
    1b9c:	ldr	r4, [sp, #8]
    1ba0:	ldr	r5, [sp, #12]
    1ba4:	ldr	r6, [sp, #16]
    1ba8:	ldr	r7, [sp, #20]
    1bac:	ldr	r8, [sp, #24]
    1bb0:	ldr	r9, [sp, #28]
    1bb4:	ldr	lr, [sp, #4]
    1bb8:	ldr	sp, [sp]
    1bbc:	bx	lr
    1bc0:	.word	0x00000216
    1bc4:	.word	0x00000079
    1bc8:	.word	0x000002bd
	...
    1bd4:	.word	0x00000399

00001bd8 <coda_ascbin_cursor_get_num_elements>:
    1bd8:	mov	ip, sp
    1bdc:	sub	sp, sp, #64	; 0x40
    1be0:	str	ip, [sp]
    1be4:	str	lr, [sp, #4]
    1be8:	str	r4, [sp, #8]
    1bec:	str	r5, [sp, #12]
    1bf0:	str	r6, [sp, #16]
    1bf4:	str	r7, [sp, #20]
    1bf8:	str	r8, [sp, #24]
    1bfc:	mov	r7, r1
    1c00:	mov	r5, r0
    1c04:	ldr	r3, [r5, #4]
    1c08:	lsl	r3, r3, #4
    1c0c:	add	r1, r5, r3
    1c10:	sub	lr, r1, #4096	; 0x1000
    1c14:	ldr	r0, [lr, #4088]	; 0xff8
    1c18:	ldr	r3, [r0]
    1c1c:	cmp	r3, #100	; 0x64
    1c20:	blt	1c40 <coda_ascbin_cursor_get_num_elements+0x68>
    1c24:	ldr	ip, [r5, #4]
    1c28:	lsl	r0, ip, #4
    1c2c:	add	r2, r5, r0
    1c30:	sub	lr, r2, #4096	; 0x1000
    1c34:	ldr	r2, [lr, #4088]	; 0xff8
    1c38:	ldr	r6, [r2, #4]
    1c3c:	b	1c54 <coda_ascbin_cursor_get_num_elements+0x7c>
    1c40:	ldr	r0, [r5, #4]
    1c44:	lsl	r1, r0, #4
    1c48:	add	r2, r5, r1
    1c4c:	sub	lr, r2, #4096	; 0x1000
    1c50:	ldr	r6, [lr, #4088]	; 0xff8
    1c54:	ldr	ip, [r6, #8]
    1c58:	cmp	ip, #0
    1c5c:	beq	1d70 <coda_ascbin_cursor_get_num_elements+0x198>
    1c60:	cmp	ip, #1
    1c64:	bne	1d50 <coda_ascbin_cursor_get_num_elements+0x178>
    1c68:	ldr	r0, [r6, #44]	; 0x2c
    1c6c:	cmn	r0, #1
    1c70:	bne	1d44 <coda_ascbin_cursor_get_num_elements+0x16c>
    1c74:	mov	r8, #1
    1c78:	mov	r4, #0
    1c7c:	ldr	ip, [r6, #48]	; 0x30
    1c80:	cmp	r4, ip
    1c84:	bge	1d3c <coda_ascbin_cursor_get_num_elements+0x164>
    1c88:	lsl	ip, r4, #2
    1c8c:	add	r3, r6, ip
    1c90:	ldr	r2, [r3, #52]	; 0x34
    1c94:	cmn	r2, #1
    1c98:	bne	1d24 <coda_ascbin_cursor_get_num_elements+0x14c>
    1c9c:	lsl	r3, r4, #2
    1ca0:	add	ip, r6, r3
    1ca4:	ldr	r0, [ip, #84]	; 0x54
    1ca8:	add	r2, sp, #32
    1cac:	mov	r1, r5
    1cb0:	bl	0 <coda_expression_eval_integer>
    1cb4:	cmp	r0, #0
    1cb8:	beq	1cd8 <coda_ascbin_cursor_get_num_elements+0x100>
    1cbc:	ldr	r0, [pc, #216]	; 1d9c <coda_ascbin_cursor_get_num_elements+0x1c4>
    1cc0:	mov	r1, r4
    1cc4:	bl	0 <coda_add_error_message>
    1cc8:	mov	r0, r5
    1ccc:	bl	0 <coda_cursor_add_to_error_message>
    1cd0:	mvn	r0, #0
    1cd4:	b	1d7c <coda_ascbin_cursor_get_num_elements+0x1a4>
    1cd8:	ldr	r0, [sp, #36]	; 0x24
    1cdc:	cmp	r0, #0
    1ce0:	bge	1d18 <coda_ascbin_cursor_get_num_elements+0x140>
    1ce4:	ldr	r0, [sp, #32]
    1ce8:	ldr	r1, [sp, #36]	; 0x24
    1cec:	add	r2, sp, #40	; 0x28
    1cf0:	bl	0 <coda_str64>
    1cf4:	movw	r0, #65236	; 0xfed4
    1cf8:	movt	r0, #65535	; 0xffff
    1cfc:	ldr	r1, [pc, #164]	; 1da8 <coda_ascbin_cursor_get_num_elements+0x1d0>
    1d00:	add	r2, sp, #40	; 0x28
    1d04:	bl	0 <coda_set_error>
    1d08:	mov	r0, r5
    1d0c:	bl	0 <coda_cursor_add_to_error_message>
    1d10:	mvn	r0, #0
    1d14:	b	1d7c <coda_ascbin_cursor_get_num_elements+0x1a4>
    1d18:	ldr	r1, [sp, #32]
    1d1c:	mul	r8, r8, r1
    1d20:	b	1d34 <coda_ascbin_cursor_get_num_elements+0x15c>
    1d24:	lsl	r2, r4, #2
    1d28:	add	r0, r6, r2
    1d2c:	ldr	r1, [r0, #52]	; 0x34
    1d30:	mul	r8, r8, r1
    1d34:	add	r4, r4, #1
    1d38:	b	1c7c <coda_ascbin_cursor_get_num_elements+0xa4>
    1d3c:	str	r8, [r7]
    1d40:	b	1d78 <coda_ascbin_cursor_get_num_elements+0x1a0>
    1d44:	ldr	ip, [r6, #44]	; 0x2c
    1d48:	str	ip, [r7]
    1d4c:	b	1d78 <coda_ascbin_cursor_get_num_elements+0x1a0>
    1d50:	ldr	r0, [pc, #76]	; 1da4 <coda_ascbin_cursor_get_num_elements+0x1cc>
    1d54:	ldr	r1, [pc, #80]	; 1dac <coda_ascbin_cursor_get_num_elements+0x1d4>
    1d58:	movw	r2, #835	; 0x343
    1d5c:	ldr	r3, [pc, #60]	; 1da0 <coda_ascbin_cursor_get_num_elements+0x1c8>
    1d60:	bl	0 <__assert_fail>
    1d64:	mov	r0, #1
    1d68:	bl	0 <exit>
    1d6c:	b	1d78 <coda_ascbin_cursor_get_num_elements+0x1a0>
    1d70:	ldr	r1, [r6, #48]	; 0x30
    1d74:	str	r1, [r7]
    1d78:	mov	r0, #0
    1d7c:	ldr	r4, [sp, #8]
    1d80:	ldr	r5, [sp, #12]
    1d84:	ldr	r6, [sp, #16]
    1d88:	ldr	r7, [sp, #20]
    1d8c:	ldr	r8, [sp, #24]
    1d90:	ldr	lr, [sp, #4]
    1d94:	add	sp, sp, #64	; 0x40
    1d98:	bx	lr
    1d9c:	.word	0x0000025c
    1da0:	.word	0x000003b9
    1da4:	.word	0x000002bd
    1da8:	.word	0x00000274
    1dac:	.word	0x00000000

00001db0 <coda_ascbin_cursor_get_record_field_available_status>:
    1db0:	mov	ip, sp
    1db4:	sub	sp, sp, #24
    1db8:	str	ip, [sp]
    1dbc:	str	lr, [sp, #4]
    1dc0:	str	r4, [sp, #8]
    1dc4:	str	r5, [sp, #12]
    1dc8:	mov	r4, r2
    1dcc:	mov	r5, r1
    1dd0:	mov	r1, r0
    1dd4:	ldr	r3, [r1, #4]
    1dd8:	lsl	ip, r3, #4
    1ddc:	add	ip, r1, ip
    1de0:	sub	lr, ip, #4096	; 0x1000
    1de4:	ldr	r2, [lr, #4088]	; 0xff8
    1de8:	ldr	r0, [r2]
    1dec:	cmp	r0, #100	; 0x64
    1df0:	blt	1e10 <coda_ascbin_cursor_get_record_field_available_status+0x60>
    1df4:	ldr	ip, [r1, #4]
    1df8:	lsl	r3, ip, #4
    1dfc:	add	r2, r1, r3
    1e00:	sub	lr, r2, #4096	; 0x1000
    1e04:	ldr	r2, [lr, #4088]	; 0xff8
    1e08:	ldr	r2, [r2, #4]
    1e0c:	b	1e24 <coda_ascbin_cursor_get_record_field_available_status+0x74>
    1e10:	ldr	r2, [r1, #4]
    1e14:	lsl	r2, r2, #4
    1e18:	add	r0, r1, r2
    1e1c:	sub	lr, r0, #4096	; 0x1000
    1e20:	ldr	r2, [lr, #4088]	; 0xff8
    1e24:	cmp	r5, #0
    1e28:	blt	1e40 <coda_ascbin_cursor_get_record_field_available_status+0x90>
    1e2c:	ldr	ip, [r2, #48]	; 0x30
    1e30:	cmp	r5, ip
    1e34:	movge	r0, #1
    1e38:	movlt	r0, #0
    1e3c:	b	1e44 <coda_ascbin_cursor_get_record_field_available_status+0x94>
    1e40:	mov	r0, #1
    1e44:	cmp	r0, #0
    1e48:	beq	1e68 <coda_ascbin_cursor_get_record_field_available_status+0xb8>
    1e4c:	mvn	r0, #100	; 0x64
    1e50:	ldr	r1, [pc, #176]	; 1f08 <coda_ascbin_cursor_get_record_field_available_status+0x158>
    1e54:	ldr	r3, [r2, #48]	; 0x30
    1e58:	mov	r2, r5
    1e5c:	bl	0 <coda_set_error>
    1e60:	mvn	r0, #0
    1e64:	b	1ef4 <coda_ascbin_cursor_get_record_field_available_status+0x144>
    1e68:	ldr	r3, [r2, #68]	; 0x44
    1e6c:	cmp	r3, #0
    1e70:	bne	1eb8 <coda_ascbin_cursor_get_record_field_available_status+0x108>
    1e74:	ldr	r3, [r2, #52]	; 0x34
    1e78:	ldr	r3, [r3, r5, lsl #2]
    1e7c:	ldr	r0, [r3, #20]
    1e80:	cmp	r0, #0
    1e84:	beq	1eac <coda_ascbin_cursor_get_record_field_available_status+0xfc>
    1e88:	ldr	r2, [r2, #52]	; 0x34
    1e8c:	ldr	ip, [r2, r5, lsl #2]
    1e90:	ldr	r0, [ip, #20]
    1e94:	mov	r2, r4
    1e98:	bl	0 <coda_expression_eval_bool>
    1e9c:	cmp	r0, #0
    1ea0:	beq	1ef0 <coda_ascbin_cursor_get_record_field_available_status+0x140>
    1ea4:	mvn	r0, #0
    1ea8:	b	1ef4 <coda_ascbin_cursor_get_record_field_available_status+0x144>
    1eac:	mov	r1, #1
    1eb0:	str	r1, [r4]
    1eb4:	b	1ef0 <coda_ascbin_cursor_get_record_field_available_status+0x140>
    1eb8:	add	r0, sp, #16
    1ebc:	mov	r3, r0
    1ec0:	mov	r0, r1
    1ec4:	mov	r1, r3
    1ec8:	bl	0 <coda_cursor_get_available_union_field_index>
    1ecc:	cmp	r0, #0
    1ed0:	beq	1edc <coda_ascbin_cursor_get_record_field_available_status+0x12c>
    1ed4:	mvn	r0, #0
    1ed8:	b	1ef4 <coda_ascbin_cursor_get_record_field_available_status+0x144>
    1edc:	ldr	r3, [sp, #16]
    1ee0:	cmp	r5, r3
    1ee4:	moveq	r0, #1
    1ee8:	movne	r0, #0
    1eec:	str	r0, [r4]
    1ef0:	mov	r0, #0
    1ef4:	ldr	r4, [sp, #8]
    1ef8:	ldr	r5, [sp, #12]
    1efc:	ldr	lr, [sp, #4]
    1f00:	add	sp, sp, #24
    1f04:	bx	lr
    1f08:	.word	0x0000014e

00001f0c <coda_ascbin_cursor_get_available_union_field_index>:
    1f0c:	mov	ip, sp
    1f10:	sub	sp, sp, #608	; 0x260
    1f14:	str	ip, [sp, #8]
    1f18:	str	lr, [sp, #12]
    1f1c:	str	r4, [sp, #16]
    1f20:	str	r5, [sp, #20]
    1f24:	str	r6, [sp, #24]
    1f28:	mov	r6, r1
    1f2c:	mov	r4, r0
    1f30:	ldr	r3, [r4, #4]
    1f34:	lsl	ip, r3, #4
    1f38:	add	ip, r4, ip
    1f3c:	sub	lr, ip, #4096	; 0x1000
    1f40:	ldr	r2, [lr, #4088]	; 0xff8
    1f44:	ldr	r3, [r2]
    1f48:	cmp	r3, #100	; 0x64
    1f4c:	blt	1f6c <coda_ascbin_cursor_get_available_union_field_index+0x60>
    1f50:	ldr	r1, [r4, #4]
    1f54:	lsl	r3, r1, #4
    1f58:	add	ip, r4, r3
    1f5c:	sub	lr, ip, #4096	; 0x1000
    1f60:	ldr	r1, [lr, #4088]	; 0xff8
    1f64:	ldr	r5, [r1, #4]
    1f68:	b	1f80 <coda_ascbin_cursor_get_available_union_field_index+0x74>
    1f6c:	ldr	r1, [r4, #4]
    1f70:	lsl	r0, r1, #4
    1f74:	add	r1, r4, r0
    1f78:	sub	lr, r1, #4096	; 0x1000
    1f7c:	ldr	r5, [lr, #4088]	; 0xff8
    1f80:	ldr	r3, [r5, #68]	; 0x44
    1f84:	cmp	r3, #0
    1f88:	bne	1fa0 <coda_ascbin_cursor_get_available_union_field_index+0x94>
    1f8c:	mvn	r0, #104	; 0x68
    1f90:	ldr	r1, [pc, #504]	; 2190 <coda_ascbin_cursor_get_available_union_field_index+0x284>
    1f94:	bl	0 <coda_set_error>
    1f98:	mvn	r0, #0
    1f9c:	b	2174 <coda_ascbin_cursor_get_available_union_field_index+0x268>
    1fa0:	ldr	ip, [r5, #48]	; 0x30
    1fa4:	cmp	ip, #0
    1fa8:	bgt	1fc0 <coda_ascbin_cursor_get_available_union_field_index+0xb4>
    1fac:	ldr	r0, [pc, #492]	; 21a0 <coda_ascbin_cursor_get_available_union_field_index+0x294>
    1fb0:	ldr	r1, [pc, #480]	; 2198 <coda_ascbin_cursor_get_available_union_field_index+0x28c>
    1fb4:	movw	r2, #889	; 0x379
    1fb8:	ldr	r3, [pc, #460]	; 218c <coda_ascbin_cursor_get_available_union_field_index+0x280>
    1fbc:	bl	0 <__assert_fail>
    1fc0:	mov	r2, r4
    1fc4:	add	r3, sp, #88	; 0x58
    1fc8:	mov	lr, #130	; 0x82
    1fcc:	ldr	ip, [r2], #4
    1fd0:	subs	lr, lr, #1
    1fd4:	str	ip, [r3], #4
    1fd8:	bne	1fcc <coda_ascbin_cursor_get_available_union_field_index+0xc0>
    1fdc:	ldr	r2, [sp, #92]	; 0x5c
    1fe0:	add	ip, r2, #1
    1fe4:	str	ip, [sp, #92]	; 0x5c
    1fe8:	add	r0, sp, #96	; 0x60
    1fec:	ldr	r3, [sp, #92]	; 0x5c
    1ff0:	lsl	r1, r3, #4
    1ff4:	add	r1, r0, r1
    1ff8:	ldr	r3, [r5, #52]	; 0x34
    1ffc:	ldr	ip, [r3]
    2000:	ldr	r0, [ip, #8]
    2004:	sub	lr, r1, #4096	; 0x1000
    2008:	str	r0, [lr, #4080]	; 0xff0
    200c:	add	r3, sp, #96	; 0x60
    2010:	ldr	r0, [sp, #92]	; 0x5c
    2014:	lsl	r2, r0, #4
    2018:	add	r2, r3, r2
    201c:	mvn	r3, #0
    2020:	sub	lr, r2, #4096	; 0x1000
    2024:	str	r3, [lr, #4084]	; 0xff4
    2028:	add	r1, sp, #96	; 0x60
    202c:	ldr	r0, [sp, #92]	; 0x5c
    2030:	lsl	r2, r0, #4
    2034:	add	r2, r1, r2
    2038:	add	r0, sp, #96	; 0x60
    203c:	ldr	r1, [sp, #92]	; 0x5c
    2040:	lsl	r3, r1, #4
    2044:	add	r3, r0, r3
    2048:	sub	lr, r3, #4096	; 0x1000
    204c:	ldr	ip, [lr, #4072]	; 0xfe8
    2050:	sub	lr, r3, #4096	; 0x1000
    2054:	ldr	r1, [lr, #4076]	; 0xfec
    2058:	sub	lr, r2, #4096	; 0x1000
    205c:	str	ip, [lr, #4088]	; 0xff8
    2060:	sub	lr, r2, #4096	; 0x1000
    2064:	str	r1, [lr, #4092]	; 0xffc
    2068:	ldr	r0, [r5, #68]	; 0x44
    206c:	add	r1, sp, #88	; 0x58
    2070:	add	r2, sp, #32
    2074:	bl	0 <coda_expression_eval_integer>
    2078:	cmp	r0, #0
    207c:	beq	2098 <coda_ascbin_cursor_get_available_union_field_index+0x18c>
    2080:	ldr	r0, [pc, #268]	; 2194 <coda_ascbin_cursor_get_available_union_field_index+0x288>
    2084:	bl	0 <coda_add_error_message>
    2088:	mov	r0, r4
    208c:	bl	0 <coda_cursor_add_to_error_message>
    2090:	mvn	r0, #0
    2094:	b	2174 <coda_ascbin_cursor_get_available_union_field_index+0x268>
    2098:	ldr	ip, [sp, #36]	; 0x24
    209c:	cmp	ip, #0
    20a0:	blt	20dc <coda_ascbin_cursor_get_available_union_field_index+0x1d0>
    20a4:	ldr	r1, [sp, #32]
    20a8:	ldr	r2, [sp, #36]	; 0x24
    20ac:	ldr	r3, [r5, #48]	; 0x30
    20b0:	asr	r0, r3, #31
    20b4:	cmp	r2, r0
    20b8:	bne	20cc <coda_ascbin_cursor_get_available_union_field_index+0x1c0>
    20bc:	cmp	r1, r3
    20c0:	movcs	r1, #1
    20c4:	movcc	r1, #0
    20c8:	b	20e0 <coda_ascbin_cursor_get_available_union_field_index+0x1d4>
    20cc:	cmp	r2, r0
    20d0:	movgt	r1, #1
    20d4:	movle	r1, #0
    20d8:	b	20e0 <coda_ascbin_cursor_get_available_union_field_index+0x1d4>
    20dc:	mov	r1, #1
    20e0:	cmp	r1, #0
    20e4:	beq	2168 <coda_ascbin_cursor_get_available_union_field_index+0x25c>
    20e8:	ldr	r0, [sp, #32]
    20ec:	ldr	r1, [sp, #36]	; 0x24
    20f0:	add	r2, sp, #40	; 0x28
    20f4:	bl	0 <coda_str64>
    20f8:	ldr	r1, [r4, #4]
    20fc:	lsl	ip, r1, #4
    2100:	add	r3, r4, ip
    2104:	ldr	r2, [r3]
    2108:	ldr	r3, [r3, #4]
    210c:	asr	r1, r3, #3
    2110:	lsr	ip, r2, #3
    2114:	orr	r0, ip, r3, lsl #29
    2118:	add	r2, sp, #64	; 0x40
    211c:	bl	0 <coda_str64>
    2120:	movw	r0, #65236	; 0xfed4
    2124:	movt	r0, #65535	; 0xffff
    2128:	ldr	r1, [pc, #108]	; 219c <coda_ascbin_cursor_get_available_union_field_index+0x290>
    212c:	add	r2, sp, #40	; 0x28
    2130:	ldr	r3, [r5, #48]	; 0x30
    2134:	add	r6, sp, #64	; 0x40
    2138:	ldr	ip, [r4, #4]
    213c:	lsl	ip, ip, #4
    2140:	add	ip, r4, ip
    2144:	ldr	ip, [ip]
    2148:	and	ip, ip, #7
    214c:	str	ip, [sp, #4]
    2150:	str	r6, [sp]
    2154:	bl	0 <coda_set_error>
    2158:	mov	r0, r4
    215c:	bl	0 <coda_cursor_add_to_error_message>
    2160:	mvn	r0, #0
    2164:	b	2174 <coda_ascbin_cursor_get_available_union_field_index+0x268>
    2168:	ldr	r1, [sp, #32]
    216c:	str	r1, [r6]
    2170:	mov	r0, #0
    2174:	ldr	r4, [sp, #16]
    2178:	ldr	r5, [sp, #20]
    217c:	ldr	r6, [sp, #24]
    2180:	ldr	lr, [sp, #12]
    2184:	add	sp, sp, #608	; 0x260
    2188:	bx	lr
    218c:	.word	0x000003dd
    2190:	.word	0x000000a0
    2194:	.word	0x00000132
    2198:	.word	0x00000000
    219c:	.word	0x00000197
    21a0:	.word	0x000000fa

000021a4 <coda_ascbin_cursor_get_array_dim>:
    21a4:	mov	ip, sp
    21a8:	sub	sp, sp, #56	; 0x38
    21ac:	str	ip, [sp]
    21b0:	str	lr, [sp, #4]
    21b4:	str	r4, [sp, #8]
    21b8:	str	r5, [sp, #12]
    21bc:	str	r6, [sp, #16]
    21c0:	str	r7, [sp, #20]
    21c4:	mov	r5, r2
    21c8:	mov	r6, r0
    21cc:	ldr	r0, [r6, #4]
    21d0:	lsl	r3, r0, #4
    21d4:	add	r0, r6, r3
    21d8:	sub	lr, r0, #4096	; 0x1000
    21dc:	ldr	ip, [lr, #4088]	; 0xff8
    21e0:	ldr	ip, [ip]
    21e4:	cmp	ip, #100	; 0x64
    21e8:	blt	2208 <coda_ascbin_cursor_get_array_dim+0x64>
    21ec:	ldr	r3, [r6, #4]
    21f0:	lsl	r0, r3, #4
    21f4:	add	r3, r6, r0
    21f8:	sub	lr, r3, #4096	; 0x1000
    21fc:	ldr	ip, [lr, #4088]	; 0xff8
    2200:	ldr	r4, [ip, #4]
    2204:	b	221c <coda_ascbin_cursor_get_array_dim+0x78>
    2208:	ldr	ip, [r6, #4]
    220c:	lsl	r0, ip, #4
    2210:	add	r3, r6, r0
    2214:	sub	lr, r3, #4096	; 0x1000
    2218:	ldr	r4, [lr, #4088]	; 0xff8
    221c:	ldr	r2, [r4, #48]	; 0x30
    2220:	str	r2, [r1]
    2224:	mov	r7, #0
    2228:	ldr	r3, [r4, #48]	; 0x30
    222c:	cmp	r7, r3
    2230:	bge	22e8 <coda_ascbin_cursor_get_array_dim+0x144>
    2234:	lsl	r2, r7, #2
    2238:	add	r2, r4, r2
    223c:	ldr	r1, [r2, #52]	; 0x34
    2240:	cmn	r1, #1
    2244:	bne	22d0 <coda_ascbin_cursor_get_array_dim+0x12c>
    2248:	lsl	r1, r7, #2
    224c:	add	ip, r4, r1
    2250:	ldr	r0, [ip, #84]	; 0x54
    2254:	add	r2, sp, #24
    2258:	mov	r1, r6
    225c:	bl	0 <coda_expression_eval_integer>
    2260:	cmp	r0, #0
    2264:	beq	2284 <coda_ascbin_cursor_get_array_dim+0xe0>
    2268:	ldr	r0, [pc, #152]	; 2308 <coda_ascbin_cursor_get_array_dim+0x164>
    226c:	mov	r1, r7
    2270:	bl	0 <coda_add_error_message>
    2274:	mov	r0, r6
    2278:	bl	0 <coda_cursor_add_to_error_message>
    227c:	mvn	r0, #0
    2280:	b	22ec <coda_ascbin_cursor_get_array_dim+0x148>
    2284:	ldr	r1, [sp, #28]
    2288:	cmp	r1, #0
    228c:	bge	22c4 <coda_ascbin_cursor_get_array_dim+0x120>
    2290:	ldr	r0, [sp, #24]
    2294:	ldr	r1, [sp, #28]
    2298:	add	r2, sp, #32
    229c:	bl	0 <coda_str64>
    22a0:	movw	r0, #65236	; 0xfed4
    22a4:	movt	r0, #65535	; 0xffff
    22a8:	ldr	r1, [pc, #92]	; 230c <coda_ascbin_cursor_get_array_dim+0x168>
    22ac:	add	r2, sp, #32
    22b0:	bl	0 <coda_set_error>
    22b4:	mov	r0, r6
    22b8:	bl	0 <coda_cursor_add_to_error_message>
    22bc:	mvn	r0, #0
    22c0:	b	22ec <coda_ascbin_cursor_get_array_dim+0x148>
    22c4:	ldr	r0, [sp, #24]
    22c8:	str	r0, [r5, r7, lsl #2]
    22cc:	b	22e0 <coda_ascbin_cursor_get_array_dim+0x13c>
    22d0:	lsl	r2, r7, #2
    22d4:	add	r3, r4, r2
    22d8:	ldr	r2, [r3, #52]	; 0x34
    22dc:	str	r2, [r5, r7, lsl #2]
    22e0:	add	r7, r7, #1
    22e4:	b	2228 <coda_ascbin_cursor_get_array_dim+0x84>
    22e8:	mov	r0, #0
    22ec:	ldr	r4, [sp, #8]
    22f0:	ldr	r5, [sp, #12]
    22f4:	ldr	r6, [sp, #16]
    22f8:	ldr	r7, [sp, #20]
    22fc:	ldr	lr, [sp, #4]
    2300:	add	sp, sp, #56	; 0x38
    2304:	bx	lr
    2308:	.word	0x0000025c
    230c:	.word	0x0000022b
