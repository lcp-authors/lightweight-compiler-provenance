
../compcert-repos/prog2/1.1.1:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	107a8 <_start@@Base+0x3c>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <printf@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <printf@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r0, r1, r0, lsl r9

000106f4 <printf@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #16, 20	; 0x10000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <fopen@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #16, 20	; 0x10000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <memcpy@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #16, 20	; 0x10000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <tolower@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <__libc_start_main@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <__gmon_start__@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <memset@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <fclose@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <abort@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <getc@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

Disassembly of section .text:

0001076c <_start@@Base>:
   1076c:	mov	fp, #0
   10770:	mov	lr, #0
   10774:	pop	{r1}		; (ldr r1, [sp], #4)
   10778:	mov	r2, sp
   1077c:	push	{r2}		; (str r2, [sp, #-4]!)
   10780:	push	{r0}		; (str r0, [sp, #-4]!)
   10784:	ldr	ip, [pc, #16]	; 1079c <_start@@Base+0x30>
   10788:	push	{ip}		; (str ip, [sp, #-4]!)
   1078c:	ldr	r0, [pc, #12]	; 107a0 <_start@@Base+0x34>
   10790:	ldr	r3, [pc, #12]	; 107a4 <_start@@Base+0x38>
   10794:	bl	10724 <__libc_start_main@plt>
   10798:	bl	10754 <abort@plt>
   1079c:	andeq	r0, r1, r0, asr #24
   107a0:	ldrdeq	r0, [r1], -r8
   107a4:	andeq	r0, r1, r0, ror #23
   107a8:	ldr	r3, [pc, #20]	; 107c4 <_start@@Base+0x58>
   107ac:	ldr	r2, [pc, #20]	; 107c8 <_start@@Base+0x5c>
   107b0:	add	r3, pc, r3
   107b4:	ldr	r2, [r3, r2]
   107b8:	cmp	r2, #0
   107bc:	bxeq	lr
   107c0:	b	10730 <__gmon_start__@plt>
   107c4:	andeq	r0, r1, r8, asr #16
   107c8:	andeq	r0, r0, r4, lsr r0
   107cc:	ldr	r0, [pc, #24]	; 107ec <_start@@Base+0x80>
   107d0:	ldr	r3, [pc, #24]	; 107f0 <_start@@Base+0x84>
   107d4:	cmp	r3, r0
   107d8:	bxeq	lr
   107dc:	ldr	r3, [pc, #16]	; 107f4 <_start@@Base+0x88>
   107e0:	cmp	r3, #0
   107e4:	bxeq	lr
   107e8:	bx	r3
   107ec:	andeq	r1, r2, r0, asr #32
   107f0:	andeq	r1, r2, r0, asr #32
   107f4:	andeq	r0, r0, r0
   107f8:	ldr	r0, [pc, #36]	; 10824 <_start@@Base+0xb8>
   107fc:	ldr	r1, [pc, #36]	; 10828 <_start@@Base+0xbc>
   10800:	sub	r1, r1, r0
   10804:	asr	r1, r1, #2
   10808:	add	r1, r1, r1, lsr #31
   1080c:	asrs	r1, r1, #1
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0xc0>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, r0, asr #32
   10828:	andeq	r1, r2, r0, asr #32
   1082c:	andeq	r0, r0, r0
   10830:	push	{r4, lr}
   10834:	ldr	r4, [pc, #24]	; 10854 <_start@@Base+0xe8>
   10838:	ldrb	r3, [r4]
   1083c:	cmp	r3, #0
   10840:	popne	{r4, pc}
   10844:	bl	107cc <_start@@Base+0x60>
   10848:	mov	r3, #1
   1084c:	strb	r3, [r4]
   10850:	pop	{r4, pc}
   10854:	andeq	r1, r2, r0, asr #32
   10858:	b	107f8 <_start@@Base+0x8c>

0001085c <in_array@@Base>:
   1085c:	sub	sp, sp, #20
   10860:	str	r0, [sp, #12]
   10864:	str	r1, [sp, #8]
   10868:	str	r2, [sp, #4]
   1086c:	movw	r0, #0
   10870:	str	r0, [sp]
   10874:	str	r0, [sp]
   10878:	ldr	r0, [sp]
   1087c:	ldr	r1, [sp, #4]
   10880:	cmp	r0, r1
   10884:	bgt	108c4 <in_array@@Base+0x68>
   10888:	ldr	r0, [sp, #8]
   1088c:	ldr	r1, [sp]
   10890:	add	r0, r0, r1, lsl #2
   10894:	ldr	r0, [r0]
   10898:	ldr	r1, [sp, #12]
   1089c:	cmp	r0, r1
   108a0:	bne	108b0 <in_array@@Base+0x54>
   108a4:	movw	r0, #1
   108a8:	str	r0, [sp, #16]
   108ac:	b	108cc <in_array@@Base+0x70>
   108b0:	b	108b4 <in_array@@Base+0x58>
   108b4:	ldr	r0, [sp]
   108b8:	add	r0, r0, #1
   108bc:	str	r0, [sp]
   108c0:	b	10878 <in_array@@Base+0x1c>
   108c4:	movw	r0, #0
   108c8:	str	r0, [sp, #16]
   108cc:	ldr	r0, [sp, #16]
   108d0:	add	sp, sp, #20
   108d4:	bx	lr

000108d8 <main@@Base>:
   108d8:	push	{r4, r5, fp, lr}
   108dc:	add	fp, sp, #8
   108e0:	sub	sp, sp, #240	; 0xf0
   108e4:	movw	r0, #3224	; 0xc98
   108e8:	movt	r0, #1
   108ec:	movw	r1, #3152	; 0xc50
   108f0:	movt	r1, #1
   108f4:	movw	r2, #0
   108f8:	str	r2, [fp, #-12]
   108fc:	sub	r2, fp, #48	; 0x30
   10900:	str	r0, [sp, #16]
   10904:	mov	r0, r2
   10908:	movw	r2, #32
   1090c:	bl	1070c <memcpy@plt>
   10910:	movw	r0, #3184	; 0xc70
   10914:	movt	r0, #1
   10918:	ldr	r1, [r0]
   1091c:	str	r1, [fp, #-64]	; 0xffffffc0
   10920:	ldr	r1, [r0, #4]
   10924:	str	r1, [fp, #-60]	; 0xffffffc4
   10928:	ldr	r1, [r0, #8]
   1092c:	str	r1, [fp, #-56]	; 0xffffffc8
   10930:	ldr	r0, [r0, #12]
   10934:	str	r0, [fp, #-52]	; 0xffffffcc
   10938:	movw	r0, #3200	; 0xc80
   1093c:	movt	r0, #1
   10940:	ldr	r1, [r0]
   10944:	str	r1, [fp, #-72]	; 0xffffffb8
   10948:	ldr	r0, [r0, #4]
   1094c:	str	r0, [fp, #-68]	; 0xffffffbc
   10950:	sub	r0, fp, #96	; 0x60
   10954:	ldr	r1, [sp, #16]
   10958:	movw	r2, #24
   1095c:	bl	1070c <memcpy@plt>
   10960:	movw	r0, #3208	; 0xc88
   10964:	movt	r0, #1
   10968:	ldr	r1, [r0]
   1096c:	str	r1, [fp, #-104]	; 0xffffff98
   10970:	ldr	r0, [r0, #4]
   10974:	str	r0, [fp, #-100]	; 0xffffff9c
   10978:	movw	r0, #3216	; 0xc90
   1097c:	movt	r0, #1
   10980:	ldr	r1, [r0]
   10984:	str	r1, [fp, #-112]	; 0xffffff90
   10988:	ldr	r0, [r0, #4]
   1098c:	str	r0, [fp, #-108]	; 0xffffff94
   10990:	movw	r0, #3248	; 0xcb0
   10994:	movt	r0, #1
   10998:	movw	r1, #3271	; 0xcc7
   1099c:	movt	r1, #1
   109a0:	bl	10700 <fopen@plt>
   109a4:	str	r0, [fp, #-16]
   109a8:	movw	r0, #0
   109ac:	str	r0, [fp, #-120]	; 0xffffff88
   109b0:	add	r0, sp, #24
   109b4:	movw	r1, #0
   109b8:	and	r1, r1, #255	; 0xff
   109bc:	movw	r2, #104	; 0x68
   109c0:	bl	1073c <memset@plt>
   109c4:	ldr	r0, [fp, #-16]
   109c8:	bl	10760 <getc@plt>
   109cc:	str	r0, [fp, #-116]	; 0xffffff8c
   109d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   109d4:	cmn	r0, #1
   109d8:	bne	109e0 <main@@Base+0x108>
   109dc:	b	10b20 <main@@Base+0x248>
   109e0:	sub	r1, fp, #48	; 0x30
   109e4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   109e8:	movw	r2, #8
   109ec:	bl	1085c <in_array@@Base>
   109f0:	cmp	r0, #0
   109f4:	beq	10a04 <main@@Base+0x12c>
   109f8:	movw	r0, #97	; 0x61
   109fc:	str	r0, [fp, #-116]	; 0xffffff8c
   10a00:	b	10ac8 <main@@Base+0x1f0>
   10a04:	sub	r1, fp, #64	; 0x40
   10a08:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10a0c:	movw	r2, #4
   10a10:	bl	1085c <in_array@@Base>
   10a14:	cmp	r0, #0
   10a18:	beq	10a28 <main@@Base+0x150>
   10a1c:	movw	r0, #101	; 0x65
   10a20:	str	r0, [fp, #-116]	; 0xffffff8c
   10a24:	b	10ac4 <main@@Base+0x1ec>
   10a28:	sub	r1, fp, #72	; 0x48
   10a2c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10a30:	movw	r2, #2
   10a34:	bl	1085c <in_array@@Base>
   10a38:	cmp	r0, #0
   10a3c:	beq	10a4c <main@@Base+0x174>
   10a40:	movw	r0, #105	; 0x69
   10a44:	str	r0, [fp, #-116]	; 0xffffff8c
   10a48:	b	10ac0 <main@@Base+0x1e8>
   10a4c:	sub	r1, fp, #96	; 0x60
   10a50:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10a54:	movw	r2, #6
   10a58:	bl	1085c <in_array@@Base>
   10a5c:	cmp	r0, #0
   10a60:	beq	10a70 <main@@Base+0x198>
   10a64:	movw	r0, #111	; 0x6f
   10a68:	str	r0, [fp, #-116]	; 0xffffff8c
   10a6c:	b	10abc <main@@Base+0x1e4>
   10a70:	sub	r1, fp, #104	; 0x68
   10a74:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10a78:	movw	r2, #2
   10a7c:	bl	1085c <in_array@@Base>
   10a80:	cmp	r0, #0
   10a84:	beq	10a94 <main@@Base+0x1bc>
   10a88:	movw	r0, #117	; 0x75
   10a8c:	str	r0, [fp, #-116]	; 0xffffff8c
   10a90:	b	10ab8 <main@@Base+0x1e0>
   10a94:	sub	r1, fp, #112	; 0x70
   10a98:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10a9c:	movw	r2, #2
   10aa0:	bl	1085c <in_array@@Base>
   10aa4:	cmp	r0, #0
   10aa8:	beq	10ab4 <main@@Base+0x1dc>
   10aac:	movw	r0, #99	; 0x63
   10ab0:	str	r0, [fp, #-116]	; 0xffffff8c
   10ab4:	b	10ab8 <main@@Base+0x1e0>
   10ab8:	b	10abc <main@@Base+0x1e4>
   10abc:	b	10ac0 <main@@Base+0x1e8>
   10ac0:	b	10ac4 <main@@Base+0x1ec>
   10ac4:	b	10ac8 <main@@Base+0x1f0>
   10ac8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10acc:	bl	10718 <tolower@plt>
   10ad0:	str	r0, [fp, #-116]	; 0xffffff8c
   10ad4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10ad8:	sub	r0, r0, #97	; 0x61
   10adc:	str	r0, [fp, #-116]	; 0xffffff8c
   10ae0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10ae4:	cmp	r0, #25
   10ae8:	bgt	10b1c <main@@Base+0x244>
   10aec:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10af0:	cmp	r0, #0
   10af4:	blt	10b1c <main@@Base+0x244>
   10af8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   10afc:	add	r1, sp, #24
   10b00:	add	r0, r1, r0, lsl #2
   10b04:	ldr	r1, [r0]
   10b08:	add	r1, r1, #1
   10b0c:	str	r1, [r0]
   10b10:	ldr	r0, [fp, #-120]	; 0xffffff88
   10b14:	add	r0, r0, #1
   10b18:	str	r0, [fp, #-120]	; 0xffffff88
   10b1c:	b	109c4 <main@@Base+0xec>
   10b20:	ldr	r0, [fp, #-120]	; 0xffffff88
   10b24:	str	r0, [sp, #20]
   10b28:	ldr	r0, [fp, #-16]
   10b2c:	bl	10748 <fclose@plt>
   10b30:	movw	lr, #3273	; 0xcc9
   10b34:	movt	lr, #1
   10b38:	str	r0, [sp, #12]
   10b3c:	mov	r0, lr
   10b40:	bl	106f4 <printf@plt>
   10b44:	ldr	r1, [fp, #-120]	; 0xffffff88
   10b48:	movw	lr, #3276	; 0xccc
   10b4c:	movt	lr, #1
   10b50:	str	r0, [sp, #8]
   10b54:	mov	r0, lr
   10b58:	bl	106f4 <printf@plt>
   10b5c:	movw	r1, #0
   10b60:	str	r1, [fp, #-120]	; 0xffffff88
   10b64:	str	r0, [sp, #4]
   10b68:	ldr	r0, [fp, #-120]	; 0xffffff88
   10b6c:	cmp	r0, #25
   10b70:	bgt	10bd0 <main@@Base+0x2f8>
   10b74:	vldr	s0, [pc, #96]	; 10bdc <main@@Base+0x304>
   10b78:	ldr	r0, [fp, #-120]	; 0xffffff88
   10b7c:	add	r1, r0, #97	; 0x61
   10b80:	add	r2, sp, #24
   10b84:	add	r0, r2, r0, lsl #2
   10b88:	ldr	r0, [r0]
   10b8c:	vmov	s2, r0
   10b90:	vcvt.f32.s32	s2, s2
   10b94:	ldr	r0, [sp, #20]
   10b98:	vmov	s4, r0
   10b9c:	vcvt.f32.s32	s4, s4
   10ba0:	vdiv.f32	s2, s2, s4
   10ba4:	vmul.f32	s0, s2, s0
   10ba8:	vcvt.f64.f32	d16, s0
   10bac:	movw	r0, #3308	; 0xcec
   10bb0:	movt	r0, #1
   10bb4:	vmov	r2, r3, d16
   10bb8:	bl	106f4 <printf@plt>
   10bbc:	str	r0, [sp]
   10bc0:	ldr	r0, [fp, #-120]	; 0xffffff88
   10bc4:	add	r0, r0, #1
   10bc8:	str	r0, [fp, #-120]	; 0xffffff88
   10bcc:	b	10b68 <main@@Base+0x290>
   10bd0:	movw	r0, #0
   10bd4:	sub	sp, fp, #8
   10bd8:	pop	{r4, r5, fp, pc}
   10bdc:	sbcmi	r0, r8, #0

00010be0 <__libc_csu_init@@Base>:
   10be0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10be4:	mov	r7, r0
   10be8:	ldr	r6, [pc, #72]	; 10c38 <__libc_csu_init@@Base+0x58>
   10bec:	ldr	r5, [pc, #72]	; 10c3c <__libc_csu_init@@Base+0x5c>
   10bf0:	add	r6, pc, r6
   10bf4:	add	r5, pc, r5
   10bf8:	sub	r6, r6, r5
   10bfc:	mov	r8, r1
   10c00:	mov	r9, r2
   10c04:	bl	106d4 <printf@plt-0x20>
   10c08:	asrs	r6, r6, #2
   10c0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c10:	mov	r4, #0
   10c14:	add	r4, r4, #1
   10c18:	ldr	r3, [r5], #4
   10c1c:	mov	r2, r9
   10c20:	mov	r1, r8
   10c24:	mov	r0, r7
   10c28:	blx	r3
   10c2c:	cmp	r6, r4
   10c30:	bne	10c14 <__libc_csu_init@@Base+0x34>
   10c34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c38:	andeq	r0, r1, r4, lsl r3
   10c3c:	andeq	r0, r1, ip, lsl #6

00010c40 <__libc_csu_fini@@Base>:
   10c40:	bx	lr

Disassembly of section .fini:

00010c44 <.fini>:
   10c44:	push	{r3, lr}
   10c48:	pop	{r3, pc}
