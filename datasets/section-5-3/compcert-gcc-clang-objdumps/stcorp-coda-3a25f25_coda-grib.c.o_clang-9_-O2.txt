
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_grib_done>:
       0:	push	{r4, r5, r6, sl, fp, lr}
       4:	add	fp, sp, #16
       8:	ldr	r4, [pc, #92]	; 6c <coda_grib_done+0x6c>
       c:	bl	0 <__aeabi_read_tp>
      10:	ldr	r0, [r0, r4]
      14:	cmp	r0, #0
      18:	beq	68 <coda_grib_done+0x68>
      1c:	mov	r5, #0
      20:	mov	r6, #0
      24:	b	34 <coda_grib_done+0x34>
      28:	sub	r6, r6, #1
      2c:	cmn	r6, #143	; 0x8f
      30:	beq	58 <coda_grib_done+0x58>
      34:	ldr	r1, [r0, -r6, lsl #2]
      38:	cmp	r1, #0
      3c:	beq	28 <coda_grib_done+0x28>
      40:	mov	r0, r1
      44:	bl	0 <coda_type_release>
      48:	bl	0 <__aeabi_read_tp>
      4c:	ldr	r0, [r0, r4]
      50:	str	r5, [r0, -r6, lsl #2]
      54:	b	28 <coda_grib_done+0x28>
      58:	bl	0 <free>
      5c:	mov	r1, #0
      60:	bl	0 <__aeabi_read_tp>
      64:	str	r1, [r0, r4]
      68:	pop	{r4, r5, r6, sl, fp, pc}
      6c:	.word	0x00000000

00000070 <coda_grib_reopen>:
      70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      74:	add	fp, sp, #28
      78:	sub	sp, sp, #4
      7c:	vpush	{d8-d12}
      80:	sub	sp, sp, #328	; 0x148
      84:	mov	r5, r0
      88:	bl	37a0 <grib_init>
      8c:	cmp	r0, #0
      90:	beq	a0 <coda_grib_reopen+0x30>
      94:	ldr	r0, [r5]
      98:	bl	0 <coda_close>
      9c:	b	321c <coda_grib_reopen+0x31ac>
      a0:	mov	r0, #56	; 0x38
      a4:	bl	0 <malloc>
      a8:	cmp	r0, #0
      ac:	beq	3180 <coda_grib_reopen+0x3110>
      b0:	mov	sl, r0
      b4:	add	r6, r0, #8
      b8:	mov	r0, #0
      bc:	vmov.i32	q8, #0	; 0x00000000
      c0:	str	r0, [sl]
      c4:	add	r4, sl, #20
      c8:	ldr	r1, [r5]
      cc:	ldrd	r2, [r1, #8]
      d0:	strd	r2, [r6]
      d4:	mov	r2, #7
      d8:	str	r2, [sl, #16]
      dc:	str	r0, [r6, #32]
      e0:	str	r0, [r6, #36]	; 0x24
      e4:	vst1.32	{d16-d17}, [r4]
      e8:	str	r0, [sl, #48]	; 0x30
      ec:	mov	r0, sl
      f0:	str	r1, [r0, #52]!	; 0x34
      f4:	str	r0, [sp, #188]	; 0xbc
      f8:	ldr	r0, [r1]
      fc:	bl	0 <strdup>
     100:	cmp	r0, #0
     104:	str	r0, [sl]
     108:	beq	31b4 <coda_grib_reopen+0x3144>
     10c:	ldr	r1, [pc, #3644]	; f50 <coda_grib_reopen+0xee0>
     110:	str	r5, [sp, #164]	; 0xa4
     114:	bl	0 <__aeabi_read_tp>
     118:	ldr	r0, [r0, r1]
     11c:	mov	r1, #0
     120:	ldr	r0, [r0, #568]	; 0x238
     124:	bl	0 <coda_mem_array_new>
     128:	str	r0, [r4]
     12c:	str	r4, [sp, #168]	; 0xa8
     130:	str	r6, [sp, #184]	; 0xb8
     134:	ldrd	r0, [r6]
     138:	subs	r0, r0, #2
     13c:	sbcs	r0, r1, #0
     140:	blt	3170 <coda_grib_reopen+0x3100>
     144:	ldr	r0, [sp, #184]	; 0xb8
     148:	vldr	s22, [pc, #92]	; 1ac <coda_grib_reopen+0x13c>
     14c:	vmov.f64	d12, #36	; 0x41200000  10.0
     150:	mov	r7, #0
     154:	mov	r5, #0
     158:	mov	r2, #0
     15c:	mov	r3, #0
     160:	str	sl, [sp, #172]	; 0xac
     164:	str	r7, [sp, #152]	; 0x98
     168:	ldrd	r0, [r0]
     16c:	subs	r7, r0, #1
     170:	strb	r5, [fp, #-193]	; 0xffffff3f
     174:	sbc	r6, r1, #0
     178:	subs	r7, r2, r7
     17c:	sbcs	r7, r3, r6
     180:	bge	3170 <coda_grib_reopen+0x3100>
     184:	mov	r9, r2
     188:	ldr	r2, [sp, #188]	; 0xbc
     18c:	mov	r8, r3
     190:	ldr	r2, [r2]
     194:	ldr	r3, [r2, #48]	; 0x30
     198:	cmp	r3, #0
     19c:	beq	1b0 <coda_grib_reopen+0x140>
     1a0:	ldrb	r7, [r3, r9]
     1a4:	strb	r7, [fp, #-193]	; 0xffffff3f
     1a8:	b	1e4 <coda_grib_reopen+0x174>
     1ac:	.word	0x00000000
     1b0:	ldr	r0, [r2, #16]
     1b4:	cmp	r0, #2
     1b8:	bcs	377c <coda_grib_reopen+0x370c>
     1bc:	ldr	r0, [r2, #56]	; 0x38
     1c0:	sub	r1, fp, #193	; 0xc1
     1c4:	mov	r2, #1
     1c8:	mov	r3, r9
     1cc:	bl	0 <pread>
     1d0:	cmp	r0, #0
     1d4:	bmi	3250 <coda_grib_reopen+0x31e0>
     1d8:	ldr	r0, [sp, #184]	; 0xb8
     1dc:	ldrb	r7, [fp, #-193]	; 0xffffff3f
     1e0:	ldrd	r0, [r0]
     1e4:	subs	r6, r0, #1
     1e8:	sbc	r5, r1, #0
     1ec:	adds	r2, r9, #1
     1f0:	adc	r3, r8, #0
     1f4:	subs	r4, r2, r6
     1f8:	sbcs	r4, r3, r5
     1fc:	bge	208 <coda_grib_reopen+0x198>
     200:	cmp	r7, #71	; 0x47
     204:	bne	184 <coda_grib_reopen+0x114>
     208:	subs	r0, r2, r6
     20c:	sbcs	r0, r3, r5
     210:	bge	3170 <coda_grib_reopen+0x3100>
     214:	ldr	r0, [sp, #188]	; 0xbc
     218:	mov	r1, #8
     21c:	mov	r7, #0
     220:	mov	r2, r9
     224:	mov	r3, r8
     228:	str	r1, [sp]
     22c:	sub	r1, fp, #193	; 0xc1
     230:	str	r7, [sp, #4]
     234:	str	r1, [sp, #8]
     238:	ldr	r0, [r0]
     23c:	bl	7798 <read_bytes>
     240:	cmn	r0, #1
     244:	ble	3710 <coda_grib_reopen+0x36a0>
     248:	ldrb	r0, [fp, #-193]	; 0xffffff3f
     24c:	cmp	r0, #71	; 0x47
     250:	bne	3234 <coda_grib_reopen+0x31c4>
     254:	ldrb	r0, [fp, #-192]	; 0xffffff40
     258:	cmp	r0, #82	; 0x52
     25c:	ldrbeq	r0, [fp, #-191]	; 0xffffff41
     260:	cmpeq	r0, #73	; 0x49
     264:	bne	3234 <coda_grib_reopen+0x31c4>
     268:	ldrb	r0, [fp, #-190]	; 0xffffff42
     26c:	cmp	r0, #66	; 0x42
     270:	bne	3234 <coda_grib_reopen+0x31c4>
     274:	ldrb	r5, [fp, #-186]	; 0xffffff46
     278:	sub	r0, r5, #1
     27c:	uxtb	r0, r0
     280:	cmp	r0, #2
     284:	bcs	32b4 <coda_grib_reopen+0x3244>
     288:	bl	0 <__aeabi_read_tp>
     28c:	ldr	r6, [pc, #3260]	; f50 <coda_grib_reopen+0xee0>
     290:	mov	r1, #0
     294:	ldr	r0, [r0, r6]
     298:	ldr	r0, [r0, #564]	; 0x234
     29c:	bl	0 <coda_mem_record_new>
     2a0:	mov	r4, r0
     2a4:	cmp	r5, #1
     2a8:	str	r0, [sp, #148]	; 0x94
     2ac:	bne	878 <coda_grib_reopen+0x808>
     2b0:	ldrb	r0, [fp, #-189]	; 0xffffff43
     2b4:	ldrb	r1, [fp, #-188]	; 0xffffff44
     2b8:	ldrb	r2, [fp, #-187]	; 0xffffff45
     2bc:	str	r7, [sp, #196]	; 0xc4
     2c0:	orr	r0, r1, r0, lsl #8
     2c4:	orr	r0, r2, r0, lsl #8
     2c8:	str	r0, [sp, #192]	; 0xc0
     2cc:	bl	0 <__aeabi_read_tp>
     2d0:	mov	r5, r0
     2d4:	ldr	r0, [r0, r6]
     2d8:	mov	r1, #0
     2dc:	ldr	r0, [r0, #272]	; 0x110
     2e0:	bl	0 <coda_mem_record_new>
     2e4:	str	r8, [sp, #180]	; 0xb4
     2e8:	mov	r8, r0
     2ec:	ldr	r0, [r4, #20]
     2f0:	mov	r1, #0
     2f4:	mov	r2, sl
     2f8:	mov	r3, #1
     2fc:	str	r8, [r0]
     300:	ldr	r0, [r5, r6]
     304:	ldr	r0, [r0, #12]
     308:	bl	0 <coda_mem_uint8_new>
     30c:	movw	r1, #0
     310:	mov	r2, r0
     314:	str	r8, [sp, #156]	; 0x9c
     318:	mov	r0, r8
     31c:	ldr	r8, [sp, #180]	; 0xb4
     320:	mov	r3, #0
     324:	movt	r1, #0
     328:	bl	0 <coda_mem_record_add_field>
     32c:	ldr	r0, [sl, #52]	; 0x34
     330:	mov	r1, #28
     334:	adds	r2, r9, #8
     338:	stm	sp, {r1, r7}
     33c:	sub	r1, fp, #144	; 0x90
     340:	adc	r3, r8, #0
     344:	str	r1, [sp, #8]
     348:	bl	7798 <read_bytes>
     34c:	cmp	r0, #0
     350:	bmi	3708 <coda_grib_reopen+0x3698>
     354:	bl	0 <__aeabi_read_tp>
     358:	ldrb	r1, [fp, #-144]	; 0xffffff70
     35c:	mov	r5, r0
     360:	ldr	r0, [r0, r6]
     364:	ldrb	r3, [fp, #-141]	; 0xffffff73
     368:	mov	r2, sl
     36c:	str	r1, [sp, #176]	; 0xb0
     370:	ldrb	r1, [fp, #-143]	; 0xffffff71
     374:	ldr	r0, [r0, #8]
     378:	str	r1, [sp, #160]	; 0xa0
     37c:	ldrb	r1, [fp, #-142]	; 0xffffff72
     380:	str	r1, [sp, #144]	; 0x90
     384:	mov	r1, #0
     388:	bl	0 <coda_mem_uint8_new>
     38c:	ldr	r7, [sp, #156]	; 0x9c
     390:	movw	r1, #0
     394:	mov	r2, r0
     398:	mov	r3, #0
     39c:	movt	r1, #0
     3a0:	mov	r0, r7
     3a4:	bl	0 <coda_mem_record_add_field>
     3a8:	ldr	r0, [r5, r6]
     3ac:	ldrb	r3, [fp, #-140]	; 0xffffff74
     3b0:	mov	r1, #0
     3b4:	mov	r2, sl
     3b8:	ldr	r0, [r0, #16]
     3bc:	bl	0 <coda_mem_uint8_new>
     3c0:	movw	r1, #0
     3c4:	mov	r2, r0
     3c8:	mov	r0, r7
     3cc:	mov	r3, #0
     3d0:	movt	r1, #0
     3d4:	bl	0 <coda_mem_record_add_field>
     3d8:	ldr	r0, [r5, r6]
     3dc:	ldrb	r3, [fp, #-139]	; 0xffffff75
     3e0:	mov	r1, #0
     3e4:	mov	r2, sl
     3e8:	ldr	r0, [r0, #20]
     3ec:	bl	0 <coda_mem_uint8_new>
     3f0:	movw	r1, #0
     3f4:	mov	r2, r0
     3f8:	mov	r0, r7
     3fc:	mov	r3, #0
     400:	movt	r1, #0
     404:	bl	0 <coda_mem_record_add_field>
     408:	ldr	r0, [r5, r6]
     40c:	mov	r4, sl
     410:	ldrb	sl, [fp, #-138]	; 0xffffff76
     414:	mov	r1, #0
     418:	mov	r2, r4
     41c:	ldr	r0, [r0, #24]
     420:	mov	r3, sl
     424:	bl	0 <coda_mem_uint8_new>
     428:	movw	r1, #0
     42c:	mov	r2, r0
     430:	mov	r0, r7
     434:	mov	r3, #0
     438:	movt	r1, #0
     43c:	bl	0 <coda_mem_record_add_field>
     440:	ldr	r0, [r5, r6]
     444:	ldrb	r1, [fp, #-137]	; 0xffffff77
     448:	ldrb	r3, [fp, #-136]	; 0xffffff78
     44c:	mov	r2, r4
     450:	ldr	r0, [r0, #28]
     454:	str	r1, [sp, #140]	; 0x8c
     458:	mov	r1, #0
     45c:	bl	0 <coda_mem_uint8_new>
     460:	movw	r1, #0
     464:	mov	r2, r0
     468:	mov	r0, r7
     46c:	mov	r3, #0
     470:	movt	r1, #0
     474:	bl	0 <coda_mem_record_add_field>
     478:	ldr	r0, [r5, r6]
     47c:	ldrb	r3, [fp, #-135]	; 0xffffff79
     480:	mov	r1, #0
     484:	mov	r2, r4
     488:	ldr	r0, [r0, #32]
     48c:	bl	0 <coda_mem_uint8_new>
     490:	movw	r1, #0
     494:	mov	r2, r0
     498:	mov	r0, r7
     49c:	mov	r3, #0
     4a0:	movt	r1, #0
     4a4:	bl	0 <coda_mem_record_add_field>
     4a8:	ldr	r0, [r5, r6]
     4ac:	ldrh	r1, [fp, #-134]	; 0xffffff7a
     4b0:	mov	r2, r4
     4b4:	ldr	r0, [r0, #36]	; 0x24
     4b8:	rev16	r3, r1
     4bc:	mov	r1, #0
     4c0:	bl	0 <coda_mem_uint16_new>
     4c4:	movw	r1, #0
     4c8:	mov	r2, r0
     4cc:	mov	r0, r7
     4d0:	mov	r3, #0
     4d4:	movt	r1, #0
     4d8:	bl	0 <coda_mem_record_add_field>
     4dc:	ldr	r0, [r5, r6]
     4e0:	ldrb	r3, [fp, #-132]	; 0xffffff7c
     4e4:	mov	r1, #0
     4e8:	mov	r2, r4
     4ec:	ldr	r0, [r0, #40]	; 0x28
     4f0:	bl	0 <coda_mem_uint8_new>
     4f4:	movw	r1, #0
     4f8:	mov	r2, r0
     4fc:	mov	r0, r7
     500:	mov	r3, #0
     504:	movt	r1, #0
     508:	bl	0 <coda_mem_record_add_field>
     50c:	ldr	r0, [r5, r6]
     510:	ldrb	r3, [fp, #-131]	; 0xffffff7d
     514:	mov	r1, #0
     518:	mov	r2, r4
     51c:	ldr	r0, [r0, #48]	; 0x30
     520:	bl	0 <coda_mem_uint8_new>
     524:	movw	r1, #0
     528:	mov	r2, r0
     52c:	mov	r0, r7
     530:	mov	r3, #0
     534:	movt	r1, #0
     538:	bl	0 <coda_mem_record_add_field>
     53c:	ldr	r0, [r5, r6]
     540:	ldrb	r3, [fp, #-130]	; 0xffffff7e
     544:	mov	r1, #0
     548:	mov	r2, r4
     54c:	ldr	r0, [r0, #52]	; 0x34
     550:	bl	0 <coda_mem_uint8_new>
     554:	movw	r1, #0
     558:	mov	r2, r0
     55c:	mov	r0, r7
     560:	mov	r3, #0
     564:	movt	r1, #0
     568:	bl	0 <coda_mem_record_add_field>
     56c:	ldr	r0, [r5, r6]
     570:	ldrb	r3, [fp, #-129]	; 0xffffff7f
     574:	mov	r1, #0
     578:	mov	r2, r4
     57c:	ldr	r0, [r0, #56]	; 0x38
     580:	bl	0 <coda_mem_uint8_new>
     584:	movw	r1, #0
     588:	mov	r2, r0
     58c:	mov	r0, r7
     590:	mov	r3, #0
     594:	movt	r1, #0
     598:	bl	0 <coda_mem_record_add_field>
     59c:	ldr	r0, [r5, r6]
     5a0:	ldrb	r3, [fp, #-128]	; 0xffffff80
     5a4:	mov	r1, #0
     5a8:	mov	r2, r4
     5ac:	ldr	r0, [r0, #60]	; 0x3c
     5b0:	bl	0 <coda_mem_uint8_new>
     5b4:	movw	r1, #0
     5b8:	mov	r2, r0
     5bc:	mov	r0, r7
     5c0:	mov	r3, #0
     5c4:	movt	r1, #0
     5c8:	bl	0 <coda_mem_record_add_field>
     5cc:	ldr	r0, [r5, r6]
     5d0:	ldrb	r3, [fp, #-127]	; 0xffffff81
     5d4:	mov	r1, #0
     5d8:	mov	r2, r4
     5dc:	ldr	r0, [r0, #68]	; 0x44
     5e0:	bl	0 <coda_mem_uint8_new>
     5e4:	movw	r1, #0
     5e8:	mov	r2, r0
     5ec:	mov	r0, r7
     5f0:	mov	r3, #0
     5f4:	movt	r1, #0
     5f8:	bl	0 <coda_mem_record_add_field>
     5fc:	ldr	r0, [r5, r6]
     600:	ldrb	r3, [fp, #-126]	; 0xffffff82
     604:	mov	r1, #0
     608:	mov	r2, r4
     60c:	ldr	r0, [r0, #72]	; 0x48
     610:	bl	0 <coda_mem_uint8_new>
     614:	movw	r1, #0
     618:	mov	r2, r0
     61c:	mov	r0, r7
     620:	mov	r3, #0
     624:	movt	r1, #0
     628:	bl	0 <coda_mem_record_add_field>
     62c:	ldr	r0, [r5, r6]
     630:	ldrb	r3, [fp, #-125]	; 0xffffff83
     634:	mov	r1, #0
     638:	mov	r2, r4
     63c:	ldr	r0, [r0, #76]	; 0x4c
     640:	bl	0 <coda_mem_uint8_new>
     644:	movw	r1, #0
     648:	mov	r2, r0
     64c:	mov	r0, r7
     650:	mov	r3, #0
     654:	movt	r1, #0
     658:	bl	0 <coda_mem_record_add_field>
     65c:	ldr	r0, [r5, r6]
     660:	ldrb	r3, [fp, #-124]	; 0xffffff84
     664:	mov	r1, #0
     668:	mov	r2, r4
     66c:	ldr	r0, [r0, #80]	; 0x50
     670:	bl	0 <coda_mem_uint8_new>
     674:	movw	r1, #0
     678:	mov	r2, r0
     67c:	mov	r0, r7
     680:	mov	r3, #0
     684:	movt	r1, #0
     688:	bl	0 <coda_mem_record_add_field>
     68c:	ldr	r0, [r5, r6]
     690:	ldrh	r1, [fp, #-123]	; 0xffffff85
     694:	mov	r2, r4
     698:	ldr	r0, [r0, #84]	; 0x54
     69c:	rev16	r3, r1
     6a0:	mov	r1, #0
     6a4:	bl	0 <coda_mem_uint16_new>
     6a8:	movw	r1, #0
     6ac:	mov	r2, r0
     6b0:	mov	r0, r7
     6b4:	mov	r3, #0
     6b8:	movt	r1, #0
     6bc:	bl	0 <coda_mem_record_add_field>
     6c0:	ldr	r0, [r5, r6]
     6c4:	ldrb	r3, [fp, #-121]	; 0xffffff87
     6c8:	mov	r1, #0
     6cc:	mov	r2, r4
     6d0:	ldr	r0, [r0, #88]	; 0x58
     6d4:	bl	0 <coda_mem_uint8_new>
     6d8:	movw	r1, #0
     6dc:	mov	r2, r0
     6e0:	mov	r0, r7
     6e4:	mov	r3, #0
     6e8:	movt	r1, #0
     6ec:	bl	0 <coda_mem_record_add_field>
     6f0:	ldr	r0, [r5, r6]
     6f4:	ldrb	r3, [fp, #-120]	; 0xffffff88
     6f8:	mov	r1, #0
     6fc:	mov	r2, r4
     700:	ldr	r0, [r0, #92]	; 0x5c
     704:	bl	0 <coda_mem_uint8_new>
     708:	movw	r1, #0
     70c:	mov	r2, r0
     710:	mov	r0, r7
     714:	mov	r3, #0
     718:	movt	r1, #0
     71c:	bl	0 <coda_mem_record_add_field>
     720:	ldr	r0, [r5, r6]
     724:	ldrb	r3, [fp, #-119]	; 0xffffff89
     728:	mov	r1, #0
     72c:	mov	r2, r4
     730:	ldr	r0, [r0, #96]	; 0x60
     734:	bl	0 <coda_mem_uint8_new>
     738:	movw	r1, #0
     73c:	mov	r2, r0
     740:	mov	r0, r7
     744:	mov	r3, #0
     748:	movt	r1, #0
     74c:	bl	0 <coda_mem_record_add_field>
     750:	ldrb	r1, [fp, #-118]	; 0xffffff8a
     754:	ldrb	r2, [fp, #-117]	; 0xffffff8b
     758:	ldr	r0, [r5, r6]
     75c:	mvn	r3, #0
     760:	tst	r1, #128	; 0x80
     764:	bfi	r2, r1, #8, #7
     768:	ldr	r0, [r0, #100]	; 0x64
     76c:	movweq	r3, #1
     770:	mul	r1, r3, r2
     774:	mov	r2, r4
     778:	sxth	r3, r1
     77c:	mov	r1, #0
     780:	str	r3, [sp, #136]	; 0x88
     784:	bl	0 <coda_mem_int16_new>
     788:	movw	r1, #0
     78c:	mov	r2, r0
     790:	mov	r0, r7
     794:	mov	r3, #0
     798:	movt	r1, #0
     79c:	bl	0 <coda_mem_record_add_field>
     7a0:	ldr	r0, [sp, #176]	; 0xb0
     7a4:	ldr	r1, [sp, #160]	; 0xa0
     7a8:	adds	r2, r9, #36	; 0x24
     7ac:	adc	r4, r8, #0
     7b0:	orr	r0, r1, r0, lsl #8
     7b4:	ldr	r1, [sp, #144]	; 0x90
     7b8:	orr	r6, r1, r0, lsl #8
     7bc:	cmp	r6, #29
     7c0:	bcc	2284 <coda_grib_reopen+0x2214>
     7c4:	ldr	r8, [sp, #180]	; 0xb4
     7c8:	cmp	r6, #41	; 0x29
     7cc:	bcc	868 <coda_grib_reopen+0x7f8>
     7d0:	sub	r5, r6, #40	; 0x28
     7d4:	str	sl, [sp, #176]	; 0xb0
     7d8:	mov	sl, r2
     7dc:	mov	r0, r5
     7e0:	bl	0 <malloc>
     7e4:	cmp	r0, #0
     7e8:	beq	3640 <coda_grib_reopen+0x35d0>
     7ec:	mov	r7, r0
     7f0:	ldr	r0, [sp, #188]	; 0xbc
     7f4:	adds	r2, r9, #48	; 0x30
     7f8:	asr	r1, r5, #31
     7fc:	str	r5, [sp]
     800:	adc	r3, r8, #0
     804:	stmib	sp, {r1, r7}
     808:	ldr	r0, [r0]
     80c:	bl	7798 <read_bytes>
     810:	cmn	r0, #1
     814:	ble	366c <coda_grib_reopen+0x35fc>
     818:	bl	0 <__aeabi_read_tp>
     81c:	ldr	r1, [pc, #1836]	; f50 <coda_grib_reopen+0xee0>
     820:	ldr	r2, [sp, #172]	; 0xac
     824:	mov	r3, r5
     828:	ldr	r0, [r0, r1]
     82c:	mov	r1, #0
     830:	ldr	r0, [r0, #128]	; 0x80
     834:	str	r7, [sp]
     838:	bl	0 <coda_mem_raw_new>
     83c:	mov	r5, r0
     840:	mov	r0, r7
     844:	bl	0 <free>
     848:	ldr	r0, [sp, #156]	; 0x9c
     84c:	movw	r1, #0
     850:	mov	r2, r5
     854:	mov	r3, #0
     858:	movt	r1, #0
     85c:	bl	0 <coda_mem_record_add_field>
     860:	mov	r2, sl
     864:	ldr	sl, [sp, #176]	; 0xb0
     868:	sub	r0, r6, #28
     86c:	adds	r2, r2, r0
     870:	adc	r4, r4, r0, asr #31
     874:	b	2288 <coda_grib_reopen+0x2218>
     878:	ldr	r0, [sp, #188]	; 0xbc
     87c:	mov	r1, #8
     880:	adds	r2, r9, #8
     884:	stm	sp, {r1, r7}
     888:	add	r1, sp, #192	; 0xc0
     88c:	adc	r3, r8, #0
     890:	str	r1, [sp, #8]
     894:	ldr	r0, [r0]
     898:	bl	7798 <read_bytes>
     89c:	cmn	r0, #1
     8a0:	ble	3710 <coda_grib_reopen+0x36a0>
     8a4:	ldrb	r0, [sp, #199]	; 0xc7
     8a8:	ldrb	r1, [sp, #192]	; 0xc0
     8ac:	ldrb	r2, [sp, #193]	; 0xc1
     8b0:	ldrb	r3, [sp, #194]	; 0xc2
     8b4:	ldrb	r7, [sp, #195]	; 0xc3
     8b8:	strb	r1, [sp, #199]	; 0xc7
     8bc:	strb	r0, [sp, #192]	; 0xc0
     8c0:	ldrb	r0, [sp, #198]	; 0xc6
     8c4:	strb	r0, [sp, #193]	; 0xc1
     8c8:	strb	r2, [sp, #198]	; 0xc6
     8cc:	ldrb	r0, [sp, #197]	; 0xc5
     8d0:	strb	r0, [sp, #194]	; 0xc2
     8d4:	strb	r3, [sp, #197]	; 0xc5
     8d8:	ldrb	r0, [sp, #196]	; 0xc4
     8dc:	strb	r0, [sp, #195]	; 0xc3
     8e0:	strb	r7, [sp, #196]	; 0xc4
     8e4:	bl	0 <__aeabi_read_tp>
     8e8:	mov	r5, r0
     8ec:	ldr	r0, [pc, #1628]	; f50 <coda_grib_reopen+0xee0>
     8f0:	mov	r1, #0
     8f4:	mov	r6, r0
     8f8:	ldr	r0, [r5, r0]
     8fc:	ldr	r0, [r0, #560]	; 0x230
     900:	bl	0 <coda_mem_record_new>
     904:	mov	r7, r0
     908:	ldr	r0, [r4, #20]
     90c:	mov	r1, #0
     910:	mov	r2, sl
     914:	mov	r3, #2
     918:	str	r7, [r0, #4]
     91c:	ldr	r0, [r5, r6]
     920:	ldr	r0, [r0, #284]	; 0x11c
     924:	bl	0 <coda_mem_uint8_new>
     928:	movw	r1, #0
     92c:	mov	r2, r0
     930:	mov	r0, r7
     934:	mov	r3, #0
     938:	movt	r1, #0
     93c:	bl	0 <coda_mem_record_add_field>
     940:	ldr	r0, [r5, r6]
     944:	ldrb	r3, [fp, #-187]	; 0xffffff45
     948:	mov	r1, #0
     94c:	mov	r2, sl
     950:	ldr	r0, [r0, #324]	; 0x144
     954:	bl	0 <coda_mem_uint8_new>
     958:	movw	r1, #0
     95c:	mov	r2, r0
     960:	mov	r0, r7
     964:	mov	r3, #0
     968:	str	r7, [sp, #156]	; 0x9c
     96c:	movt	r1, #0
     970:	bl	0 <coda_mem_record_add_field>
     974:	ldr	r0, [sl, #52]	; 0x34
     978:	adds	r5, r9, #16
     97c:	mov	r2, #0
     980:	mov	r1, #21
     984:	mov	r4, #0
     988:	adc	r6, r8, #0
     98c:	str	r1, [sp]
     990:	sub	r1, fp, #144	; 0x90
     994:	str	r2, [fp, #-80]	; 0xffffffb0
     998:	str	r2, [sp, #4]
     99c:	mov	r2, r5
     9a0:	mov	r3, r6
     9a4:	str	r1, [sp, #8]
     9a8:	bl	7798 <read_bytes>
     9ac:	cmp	r0, #0
     9b0:	bmi	3708 <coda_grib_reopen+0x3698>
     9b4:	ldrb	r0, [fp, #-140]	; 0xffffff74
     9b8:	cmp	r0, #1
     9bc:	bne	3320 <coda_grib_reopen+0x32b0>
     9c0:	ldr	r0, [fp, #-144]	; 0xffffff70
     9c4:	rev	r0, r0
     9c8:	str	r0, [sp, #180]	; 0xb4
     9cc:	bl	0 <__aeabi_read_tp>
     9d0:	ldr	r7, [pc, #1400]	; f50 <coda_grib_reopen+0xee0>
     9d4:	mov	r5, r0
     9d8:	ldrh	r1, [fp, #-139]	; 0xffffff75
     9dc:	mov	r2, sl
     9e0:	ldr	r0, [r0, r7]
     9e4:	rev16	r3, r1
     9e8:	mov	r1, #0
     9ec:	ldr	r0, [r0, #288]	; 0x120
     9f0:	bl	0 <coda_mem_uint16_new>
     9f4:	ldr	r6, [sp, #156]	; 0x9c
     9f8:	movw	r1, #0
     9fc:	mov	r2, r0
     a00:	mov	r3, #0
     a04:	movt	r1, #0
     a08:	mov	r0, r6
     a0c:	bl	0 <coda_mem_record_add_field>
     a10:	ldr	r0, [r5, r7]
     a14:	ldrh	r1, [fp, #-137]	; 0xffffff77
     a18:	mov	r2, sl
     a1c:	ldr	r0, [r0, #316]	; 0x13c
     a20:	rev16	r3, r1
     a24:	mov	r1, #0
     a28:	bl	0 <coda_mem_uint16_new>
     a2c:	movw	r1, #0
     a30:	mov	r2, r0
     a34:	mov	r0, r6
     a38:	mov	r3, #0
     a3c:	movt	r1, #0
     a40:	bl	0 <coda_mem_record_add_field>
     a44:	ldr	r0, [r5, r7]
     a48:	ldrb	r3, [fp, #-135]	; 0xffffff79
     a4c:	mov	r1, #0
     a50:	mov	r2, sl
     a54:	ldr	r0, [r0, #328]	; 0x148
     a58:	bl	0 <coda_mem_uint8_new>
     a5c:	movw	r1, #0
     a60:	mov	r2, r0
     a64:	mov	r0, r6
     a68:	mov	r3, #0
     a6c:	movt	r1, #0
     a70:	bl	0 <coda_mem_record_add_field>
     a74:	ldr	r0, [r5, r7]
     a78:	ldrb	r3, [fp, #-134]	; 0xffffff7a
     a7c:	mov	r1, #0
     a80:	mov	r2, sl
     a84:	ldr	r0, [r0, #332]	; 0x14c
     a88:	bl	0 <coda_mem_uint8_new>
     a8c:	movw	r1, #0
     a90:	mov	r2, r0
     a94:	mov	r0, r6
     a98:	mov	r3, #0
     a9c:	movt	r1, #0
     aa0:	bl	0 <coda_mem_record_add_field>
     aa4:	ldr	r0, [r5, r7]
     aa8:	ldrb	r3, [fp, #-133]	; 0xffffff7b
     aac:	mov	r1, #0
     ab0:	mov	r2, sl
     ab4:	ldr	r0, [r0, #336]	; 0x150
     ab8:	bl	0 <coda_mem_uint8_new>
     abc:	movw	r1, #0
     ac0:	mov	r2, r0
     ac4:	mov	r0, r6
     ac8:	mov	r3, #0
     acc:	movt	r1, #0
     ad0:	bl	0 <coda_mem_record_add_field>
     ad4:	ldr	r0, [r5, r7]
     ad8:	ldrh	r1, [fp, #-132]	; 0xffffff7c
     adc:	mov	r2, sl
     ae0:	ldr	r0, [r0, #292]	; 0x124
     ae4:	rev16	r3, r1
     ae8:	mov	r1, #0
     aec:	bl	0 <coda_mem_uint16_new>
     af0:	movw	r1, #0
     af4:	mov	r2, r0
     af8:	mov	r0, r6
     afc:	mov	r3, #0
     b00:	movt	r1, #0
     b04:	bl	0 <coda_mem_record_add_field>
     b08:	ldr	r0, [r5, r7]
     b0c:	ldrb	r3, [fp, #-130]	; 0xffffff7e
     b10:	mov	r1, #0
     b14:	mov	r2, sl
     b18:	ldr	r0, [r0, #296]	; 0x128
     b1c:	bl	0 <coda_mem_uint8_new>
     b20:	movw	r1, #0
     b24:	mov	r2, r0
     b28:	mov	r0, r6
     b2c:	mov	r3, #0
     b30:	movt	r1, #0
     b34:	bl	0 <coda_mem_record_add_field>
     b38:	ldr	r0, [r5, r7]
     b3c:	ldrb	r3, [fp, #-129]	; 0xffffff7f
     b40:	mov	r1, #0
     b44:	mov	r2, sl
     b48:	ldr	r0, [r0, #300]	; 0x12c
     b4c:	bl	0 <coda_mem_uint8_new>
     b50:	movw	r1, #0
     b54:	mov	r2, r0
     b58:	mov	r0, r6
     b5c:	mov	r3, #0
     b60:	movt	r1, #0
     b64:	bl	0 <coda_mem_record_add_field>
     b68:	ldr	r0, [r5, r7]
     b6c:	ldrb	r3, [fp, #-128]	; 0xffffff80
     b70:	mov	r1, #0
     b74:	mov	r2, sl
     b78:	ldr	r0, [r0, #304]	; 0x130
     b7c:	bl	0 <coda_mem_uint8_new>
     b80:	movw	r1, #0
     b84:	mov	r2, r0
     b88:	mov	r0, r6
     b8c:	mov	r3, #0
     b90:	movt	r1, #0
     b94:	bl	0 <coda_mem_record_add_field>
     b98:	ldr	r0, [r5, r7]
     b9c:	ldrb	r3, [fp, #-127]	; 0xffffff81
     ba0:	mov	r1, #0
     ba4:	mov	r2, sl
     ba8:	ldr	r0, [r0, #308]	; 0x134
     bac:	bl	0 <coda_mem_uint8_new>
     bb0:	movw	r1, #0
     bb4:	mov	r2, r0
     bb8:	mov	r0, r6
     bbc:	mov	r3, #0
     bc0:	movt	r1, #0
     bc4:	bl	0 <coda_mem_record_add_field>
     bc8:	ldr	r0, [r5, r7]
     bcc:	ldrb	r3, [fp, #-126]	; 0xffffff82
     bd0:	mov	r1, #0
     bd4:	mov	r2, sl
     bd8:	ldr	r0, [r0, #312]	; 0x138
     bdc:	bl	0 <coda_mem_uint8_new>
     be0:	movw	r1, #0
     be4:	mov	r2, r0
     be8:	mov	r0, r6
     bec:	mov	r3, #0
     bf0:	movt	r1, #0
     bf4:	bl	0 <coda_mem_record_add_field>
     bf8:	ldr	r0, [r5, r7]
     bfc:	ldrb	r3, [fp, #-125]	; 0xffffff83
     c00:	mov	r1, #0
     c04:	mov	r2, sl
     c08:	ldr	r0, [r0, #340]	; 0x154
     c0c:	bl	0 <coda_mem_uint8_new>
     c10:	movw	r1, #0
     c14:	mov	r2, r0
     c18:	mov	r0, r6
     c1c:	mov	r3, #0
     c20:	movt	r1, #0
     c24:	bl	0 <coda_mem_record_add_field>
     c28:	ldr	r0, [r5, r7]
     c2c:	ldrb	r3, [fp, #-124]	; 0xffffff84
     c30:	mov	r1, #0
     c34:	mov	r2, sl
     c38:	ldr	r0, [r0, #344]	; 0x158
     c3c:	bl	0 <coda_mem_uint8_new>
     c40:	movw	r1, #0
     c44:	mov	r2, r0
     c48:	mov	r0, r6
     c4c:	mov	r3, #0
     c50:	movt	r1, #0
     c54:	bl	0 <coda_mem_record_add_field>
     c58:	ldr	r0, [r5, r7]
     c5c:	mov	r1, #0
     c60:	ldr	r0, [r0, #548]	; 0x224
     c64:	bl	0 <coda_mem_array_new>
     c68:	movw	r1, #0
     c6c:	mov	r2, r0
     c70:	mov	r0, r6
     c74:	mov	r3, #0
     c78:	movt	r1, #0
     c7c:	str	r2, [sp, #32]
     c80:	bl	0 <coda_mem_record_add_field>
     c84:	ldr	r0, [r5, r7]
     c88:	mov	r1, #0
     c8c:	ldr	r0, [r0, #552]	; 0x228
     c90:	bl	0 <coda_mem_array_new>
     c94:	movw	r1, #0
     c98:	mov	r2, r0
     c9c:	mov	r0, r6
     ca0:	mov	r3, #0
     ca4:	movt	r1, #0
     ca8:	str	r2, [sp, #36]	; 0x24
     cac:	bl	0 <coda_mem_record_add_field>
     cb0:	ldr	r0, [r5, r7]
     cb4:	mov	r1, #0
     cb8:	ldr	r0, [r0, #556]	; 0x22c
     cbc:	bl	0 <coda_mem_array_new>
     cc0:	movw	r1, #0
     cc4:	mov	r2, r0
     cc8:	mov	r0, r6
     ccc:	mov	r3, #0
     cd0:	movt	r1, #0
     cd4:	str	r2, [sp, #48]	; 0x30
     cd8:	bl	0 <coda_mem_record_add_field>
     cdc:	ldr	r0, [sp, #180]	; 0xb4
     ce0:	adds	r2, r9, #37	; 0x25
     ce4:	adc	r3, r8, #0
     ce8:	cmp	r0, #22
     cec:	bcc	cfc <coda_grib_reopen+0xc8c>
     cf0:	sub	r0, r0, #21
     cf4:	adds	r2, r2, r0
     cf8:	adc	r3, r3, #0
     cfc:	ldr	r0, [sp, #188]	; 0xbc
     d00:	mov	r1, #4
     d04:	str	r2, [sp, #180]	; 0xb4
     d08:	str	r3, [sp, #176]	; 0xb0
     d0c:	stm	sp, {r1, r4}
     d10:	sub	r1, fp, #144	; 0x90
     d14:	str	r1, [sp, #8]
     d18:	ldr	r0, [r0]
     d1c:	bl	7798 <read_bytes>
     d20:	cmp	r0, #0
     d24:	bmi	3708 <coda_grib_reopen+0x3698>
     d28:	mov	r0, #0
     d2c:	vmov.i32	d8, #0	; 0x00000000
     d30:	vmov.i32	d9, #0	; 0x00000000
     d34:	str	r0, [sp, #132]	; 0x84
     d38:	mov	r0, #1
     d3c:	str	r0, [sp, #160]	; 0xa0
     d40:	mov	r0, #0
     d44:	str	r0, [sp, #124]	; 0x7c
     d48:	mov	r0, #0
     d4c:	str	r0, [sp, #108]	; 0x6c
     d50:	mov	r0, #0
     d54:	str	r0, [sp, #128]	; 0x80
     d58:	mov	r0, #0
     d5c:	str	r0, [sp, #92]	; 0x5c
     d60:	mov	r0, #0
     d64:	str	r0, [sp, #120]	; 0x78
     d68:	mov	r0, #0
     d6c:	str	r0, [sp, #116]	; 0x74
     d70:	mov	r0, #0
     d74:	str	r0, [sp, #88]	; 0x58
     d78:	mov	r0, #0
     d7c:	str	r0, [sp, #112]	; 0x70
     d80:	mov	r0, #0
     d84:	str	r0, [sp, #100]	; 0x64
     d88:	mov	r0, #0
     d8c:	str	r0, [sp, #76]	; 0x4c
     d90:	mov	r0, #0
     d94:	str	r0, [sp, #72]	; 0x48
     d98:	mov	r0, #0
     d9c:	str	r0, [sp, #84]	; 0x54
     da0:	mov	r0, #0
     da4:	str	r0, [sp, #68]	; 0x44
     da8:	mov	r0, #0
     dac:	str	r0, [sp, #104]	; 0x68
     db0:	mvn	r0, #0
     db4:	str	r0, [sp, #64]	; 0x40
     db8:	mvn	r0, #0
     dbc:	str	r0, [sp, #60]	; 0x3c
     dc0:	mov	r0, #0
     dc4:	str	r0, [sp, #96]	; 0x60
     dc8:	mvn	r0, #0
     dcc:	str	r0, [sp, #140]	; 0x8c
     dd0:	mvn	r0, #0
     dd4:	str	r0, [sp, #80]	; 0x50
     dd8:	mov	r0, #0
     ddc:	str	r0, [sp, #44]	; 0x2c
     de0:	mov	r0, #0
     de4:	str	r0, [sp, #40]	; 0x28
     de8:	mvn	r0, #0
     dec:	str	r0, [sp, #56]	; 0x38
     df0:	mvn	r0, #0
     df4:	str	r0, [sp, #52]	; 0x34
     df8:	mov	r0, #0
     dfc:	str	r0, [sp, #136]	; 0x88
     e00:	movw	r1, #0
     e04:	sub	r5, fp, #144	; 0x90
     e08:	mov	r2, #4
     e0c:	movt	r1, #0
     e10:	mov	r0, r5
     e14:	bl	0 <bcmp>
     e18:	ldr	r1, [sp, #180]	; 0xb4
     e1c:	adds	r2, r1, #4
     e20:	ldr	r1, [sp, #176]	; 0xb0
     e24:	adc	r3, r1, #0
     e28:	cmp	r0, #0
     e2c:	beq	2aa4 <coda_grib_reopen+0x2a34>
     e30:	ldr	r0, [sp, #188]	; 0xbc
     e34:	ldr	r7, [fp, #-144]	; 0xffffff70
     e38:	mov	r1, #1
     e3c:	stm	sp, {r1, r4, r5}
     e40:	ldr	r0, [r0]
     e44:	bl	7798 <read_bytes>
     e48:	cmp	r0, #0
     e4c:	bmi	3708 <coda_grib_reopen+0x3698>
     e50:	ldr	r0, [sp, #180]	; 0xb4
     e54:	adds	r6, r0, #5
     e58:	ldr	r0, [sp, #176]	; 0xb0
     e5c:	adc	r4, r0, #0
     e60:	ldrb	r0, [fp, #-144]	; 0xffffff70
     e64:	sub	r0, r0, #2
     e68:	cmp	r0, #5
     e6c:	bhi	3274 <coda_grib_reopen+0x3204>
     e70:	add	r1, pc, #4
     e74:	rev	r7, r7
     e78:	ldr	pc, [r1, r0, lsl #2]
     e7c:	.word	0x00000e94
     e80:	.word	0x00000f54
     e84:	.word	0x000015e0
     e88:	.word	0x0000171c
     e8c:	.word	0x0000188c
     e90:	.word	0x00001924
     e94:	ldr	r0, [sp, #160]	; 0xa0
     e98:	mov	r5, #0
     e9c:	uxtb	r3, r0
     ea0:	cmp	r3, #1
     ea4:	cmpne	r3, #7
     ea8:	bne	34b4 <coda_grib_reopen+0x3444>
     eac:	mov	r0, #2
     eb0:	cmp	r7, #6
     eb4:	str	r0, [sp, #160]	; 0xa0
     eb8:	bcc	1e50 <coda_grib_reopen+0x1de0>
     ebc:	sub	r0, r7, #5
     ec0:	mov	r5, r4
     ec4:	mov	r4, #0
     ec8:	str	r0, [sp, #180]	; 0xb4
     ecc:	bl	0 <malloc>
     ed0:	cmp	r0, #0
     ed4:	beq	3618 <coda_grib_reopen+0x35a8>
     ed8:	mov	r7, r0
     edc:	ldr	r0, [sp, #188]	; 0xbc
     ee0:	ldr	r1, [sp, #180]	; 0xb4
     ee4:	mov	r2, r6
     ee8:	mov	r3, r5
     eec:	ldr	r0, [r0]
     ef0:	stm	sp, {r1, r4, r7}
     ef4:	mov	r4, r5
     ef8:	bl	7798 <read_bytes>
     efc:	cmn	r0, #1
     f00:	ble	3450 <coda_grib_reopen+0x33e0>
     f04:	bl	0 <__aeabi_read_tp>
     f08:	ldr	r1, [pc, #64]	; f50 <coda_grib_reopen+0xee0>
     f0c:	ldr	r5, [sp, #180]	; 0xb4
     f10:	mov	r2, sl
     f14:	ldr	r0, [r0, r1]
     f18:	mov	r1, #0
     f1c:	mov	r3, r5
     f20:	ldr	r0, [r0, #348]	; 0x15c
     f24:	str	r7, [sp]
     f28:	bl	0 <coda_mem_raw_new>
     f2c:	mov	r1, r0
     f30:	ldr	r0, [sp, #32]
     f34:	bl	0 <coda_mem_array_add_element>
     f38:	ldr	r0, [sp, #80]	; 0x50
     f3c:	adds	r6, r6, r5
     f40:	adc	r3, r4, #0
     f44:	add	r0, r0, #1
     f48:	str	r0, [sp, #80]	; 0x50
     f4c:	b	2244 <coda_grib_reopen+0x21d4>
     f50:	.word	0x00000000
     f54:	ldr	r0, [sp, #160]	; 0xa0
     f58:	mov	r1, #0
     f5c:	uxtb	r3, r0
     f60:	cmp	r3, #7
     f64:	bhi	345c <coda_grib_reopen+0x33ec>
     f68:	mov	r0, #1
     f6c:	mov	r2, #134	; 0x86
     f70:	tst	r2, r0, lsl r3
     f74:	beq	345c <coda_grib_reopen+0x33ec>
     f78:	ldr	r0, [sp, #188]	; 0xbc
     f7c:	mov	r2, #9
     f80:	str	r1, [sp, #4]
     f84:	sub	r1, fp, #144	; 0x90
     f88:	mov	r3, r4
     f8c:	str	r7, [sp, #144]	; 0x90
     f90:	str	r2, [sp]
     f94:	mov	r2, r6
     f98:	str	r1, [sp, #8]
     f9c:	ldr	r0, [r0]
     fa0:	bl	7798 <read_bytes>
     fa4:	cmp	r0, #0
     fa8:	bmi	3708 <coda_grib_reopen+0x3698>
     fac:	bl	0 <__aeabi_read_tp>
     fb0:	ldr	r4, [pc, #-104]	; f50 <coda_grib_reopen+0xee0>
     fb4:	mov	r7, r0
     fb8:	mov	r1, #0
     fbc:	ldr	r0, [r0, r4]
     fc0:	ldr	r0, [r0, #540]	; 0x21c
     fc4:	bl	0 <coda_mem_record_new>
     fc8:	mov	r6, r0
     fcc:	ldr	r0, [r7, r4]
     fd0:	ldr	r3, [sp, #80]	; 0x50
     fd4:	mov	r1, #0
     fd8:	mov	r2, sl
     fdc:	ldr	r0, [r0, #276]	; 0x114
     fe0:	bl	0 <coda_mem_int32_new>
     fe4:	movw	r1, #0
     fe8:	mov	r2, r0
     fec:	mov	r0, r6
     ff0:	mov	r3, #0
     ff4:	movt	r1, #0
     ff8:	bl	0 <coda_mem_record_add_field>
     ffc:	ldr	r0, [r7, r4]
    1000:	ldrb	r5, [fp, #-144]	; 0xffffff70
    1004:	mov	r1, #0
    1008:	mov	r2, sl
    100c:	ldr	r0, [r0, #448]	; 0x1c0
    1010:	mov	r3, r5
    1014:	bl	0 <coda_mem_uint8_new>
    1018:	movw	r1, #0
    101c:	mov	r2, r0
    1020:	mov	r0, r6
    1024:	mov	r3, #0
    1028:	movt	r1, #0
    102c:	bl	0 <coda_mem_record_add_field>
    1030:	ldr	r0, [r7, r4]
    1034:	ldr	r1, [fp, #-143]	; 0xffffff71
    1038:	mov	r2, sl
    103c:	ldr	r0, [r0, #452]	; 0x1c4
    1040:	rev	r3, r1
    1044:	mov	r1, #0
    1048:	bl	0 <coda_mem_uint32_new>
    104c:	movw	r1, #0
    1050:	mov	r2, r0
    1054:	mov	r0, r6
    1058:	mov	r3, #0
    105c:	movt	r1, #0
    1060:	bl	0 <coda_mem_record_add_field>
    1064:	ldr	r0, [r7, r4]
    1068:	ldrb	r1, [fp, #-139]	; 0xffffff75
    106c:	ldrb	r3, [fp, #-138]	; 0xffffff76
    1070:	mov	r2, sl
    1074:	ldr	r0, [r0, #456]	; 0x1c8
    1078:	str	r1, [sp, #160]	; 0xa0
    107c:	mov	r1, #0
    1080:	str	r3, [sp, #28]
    1084:	bl	0 <coda_mem_uint8_new>
    1088:	movw	r1, #0
    108c:	mov	r2, r0
    1090:	mov	r0, r6
    1094:	mov	r3, #0
    1098:	movt	r1, #0
    109c:	bl	0 <coda_mem_record_add_field>
    10a0:	ldr	r0, [r7, r4]
    10a4:	ldrh	r1, [fp, #-137]	; 0xffffff77
    10a8:	mov	r2, sl
    10ac:	ldr	r0, [r0, #520]	; 0x208
    10b0:	rev16	r7, r1
    10b4:	mov	r1, #0
    10b8:	mov	r3, r7
    10bc:	bl	0 <coda_mem_uint16_new>
    10c0:	movw	r1, #0
    10c4:	mov	r2, r0
    10c8:	mov	r0, r6
    10cc:	mov	r3, #0
    10d0:	movt	r1, #0
    10d4:	bl	0 <coda_mem_record_add_field>
    10d8:	ldr	r0, [sp, #180]	; 0xb4
    10dc:	adds	r2, r0, #14
    10e0:	ldr	r0, [sp, #176]	; 0xb0
    10e4:	adc	r3, r0, #0
    10e8:	cmp	r5, #0
    10ec:	bne	32f8 <coda_grib_reopen+0x3288>
    10f0:	cmp	r7, #4
    10f4:	bcc	1104 <coda_grib_reopen+0x1094>
    10f8:	bic	r0, r7, #3
    10fc:	cmp	r0, #40	; 0x28
    1100:	bne	32f8 <coda_grib_reopen+0x3288>
    1104:	ldr	r0, [sp, #188]	; 0xbc
    1108:	mov	r1, #58	; 0x3a
    110c:	str	r1, [sp]
    1110:	mov	r1, #0
    1114:	str	r1, [sp, #4]
    1118:	sub	r1, fp, #144	; 0x90
    111c:	str	r1, [sp, #8]
    1120:	ldr	r0, [r0]
    1124:	bl	7798 <read_bytes>
    1128:	cmn	r0, #1
    112c:	ble	3314 <coda_grib_reopen+0x32a4>
    1130:	bl	0 <__aeabi_read_tp>
    1134:	str	r7, [sp, #24]
    1138:	mov	r7, r0
    113c:	ldr	r0, [r0, r4]
    1140:	ldrb	r3, [fp, #-144]	; 0xffffff70
    1144:	mov	r1, #0
    1148:	mov	r2, sl
    114c:	ldr	r0, [r0, #360]	; 0x168
    1150:	bl	0 <coda_mem_uint8_new>
    1154:	movw	r1, #0
    1158:	mov	r2, r0
    115c:	mov	r0, r6
    1160:	mov	r3, #0
    1164:	movt	r1, #0
    1168:	bl	0 <coda_mem_record_add_field>
    116c:	ldr	r0, [r7, r4]
    1170:	ldrb	r3, [fp, #-143]	; 0xffffff71
    1174:	mov	r1, #0
    1178:	mov	r2, sl
    117c:	ldr	r0, [r0, #364]	; 0x16c
    1180:	bl	0 <coda_mem_uint8_new>
    1184:	movw	r1, #0
    1188:	mov	r2, r0
    118c:	mov	r0, r6
    1190:	mov	r3, #0
    1194:	movt	r1, #0
    1198:	bl	0 <coda_mem_record_add_field>
    119c:	ldr	r0, [r7, r4]
    11a0:	ldr	r1, [fp, #-142]	; 0xffffff72
    11a4:	mov	r2, sl
    11a8:	ldr	r0, [r0, #368]	; 0x170
    11ac:	rev	r3, r1
    11b0:	mov	r1, #0
    11b4:	bl	0 <coda_mem_uint32_new>
    11b8:	movw	r1, #0
    11bc:	mov	r2, r0
    11c0:	mov	r0, r6
    11c4:	mov	r3, #0
    11c8:	movt	r1, #0
    11cc:	bl	0 <coda_mem_record_add_field>
    11d0:	ldr	r0, [r7, r4]
    11d4:	ldrb	r3, [fp, #-138]	; 0xffffff76
    11d8:	mov	r1, #0
    11dc:	mov	r2, sl
    11e0:	ldr	r0, [r0, #372]	; 0x174
    11e4:	bl	0 <coda_mem_uint8_new>
    11e8:	movw	r1, #0
    11ec:	mov	r2, r0
    11f0:	mov	r0, r6
    11f4:	mov	r3, #0
    11f8:	movt	r1, #0
    11fc:	bl	0 <coda_mem_record_add_field>
    1200:	ldr	r0, [r7, r4]
    1204:	ldr	r1, [fp, #-137]	; 0xffffff77
    1208:	mov	r2, sl
    120c:	ldr	r0, [r0, #376]	; 0x178
    1210:	rev	r3, r1
    1214:	mov	r1, #0
    1218:	bl	0 <coda_mem_uint32_new>
    121c:	movw	r1, #0
    1220:	mov	r2, r0
    1224:	mov	r0, r6
    1228:	mov	r3, #0
    122c:	movt	r1, #0
    1230:	bl	0 <coda_mem_record_add_field>
    1234:	ldr	r0, [r7, r4]
    1238:	ldrb	r3, [fp, #-133]	; 0xffffff7b
    123c:	mov	r1, #0
    1240:	mov	r2, sl
    1244:	ldr	r0, [r0, #380]	; 0x17c
    1248:	bl	0 <coda_mem_uint8_new>
    124c:	movw	r1, #0
    1250:	mov	r2, r0
    1254:	mov	r0, r6
    1258:	mov	r3, #0
    125c:	movt	r1, #0
    1260:	bl	0 <coda_mem_record_add_field>
    1264:	ldr	r0, [r7, r4]
    1268:	ldr	r1, [fp, #-132]	; 0xffffff7c
    126c:	mov	r2, sl
    1270:	ldr	r0, [r0, #384]	; 0x180
    1274:	rev	r3, r1
    1278:	mov	r1, #0
    127c:	bl	0 <coda_mem_uint32_new>
    1280:	movw	r1, #0
    1284:	mov	r2, r0
    1288:	mov	r0, r6
    128c:	mov	r3, #0
    1290:	movt	r1, #0
    1294:	bl	0 <coda_mem_record_add_field>
    1298:	ldr	r0, [r7, r4]
    129c:	ldr	r1, [fp, #-128]	; 0xffffff80
    12a0:	mov	r2, sl
    12a4:	ldr	r0, [r0, #388]	; 0x184
    12a8:	rev	r5, r1
    12ac:	mov	r1, #0
    12b0:	mov	r3, r5
    12b4:	bl	0 <coda_mem_uint32_new>
    12b8:	movw	r1, #0
    12bc:	mov	r2, r0
    12c0:	mov	r0, r6
    12c4:	mov	r3, #0
    12c8:	movt	r1, #0
    12cc:	bl	0 <coda_mem_record_add_field>
    12d0:	ldr	r0, [r7, r4]
    12d4:	ldr	r1, [fp, #-124]	; 0xffffff84
    12d8:	mov	r2, sl
    12dc:	ldr	r0, [r0, #392]	; 0x188
    12e0:	rev	r3, r1
    12e4:	mov	r1, #0
    12e8:	str	r3, [sp, #20]
    12ec:	bl	0 <coda_mem_uint32_new>
    12f0:	movw	r1, #0
    12f4:	mov	r2, r0
    12f8:	mov	r0, r6
    12fc:	mov	r3, #0
    1300:	movt	r1, #0
    1304:	bl	0 <coda_mem_record_add_field>
    1308:	ldr	r0, [r7, r4]
    130c:	ldr	r1, [fp, #-120]	; 0xffffff88
    1310:	mov	r2, sl
    1314:	ldr	r0, [r0, #396]	; 0x18c
    1318:	rev	r3, r1
    131c:	mov	r1, #0
    1320:	bl	0 <coda_mem_uint32_new>
    1324:	movw	r1, #0
    1328:	mov	r2, r0
    132c:	mov	r0, r6
    1330:	mov	r3, #0
    1334:	movt	r1, #0
    1338:	bl	0 <coda_mem_record_add_field>
    133c:	ldr	r0, [r7, r4]
    1340:	ldr	r1, [fp, #-116]	; 0xffffff8c
    1344:	mov	r2, sl
    1348:	ldr	r0, [r0, #400]	; 0x190
    134c:	rev	r3, r1
    1350:	mov	r1, #0
    1354:	bl	0 <coda_mem_uint32_new>
    1358:	movw	r1, #0
    135c:	mov	r2, r0
    1360:	mov	r0, r6
    1364:	mov	r3, #0
    1368:	movt	r1, #0
    136c:	bl	0 <coda_mem_record_add_field>
    1370:	ldrb	r0, [fp, #-112]	; 0xffffff90
    1374:	ldrb	r1, [fp, #-111]	; 0xffffff91
    1378:	ldrb	r2, [fp, #-110]	; 0xffffff92
    137c:	ldrb	r3, [fp, #-109]	; 0xffffff93
    1380:	orr	r1, r1, r0, lsl #8
    1384:	tst	r0, #128	; 0x80
    1388:	ldr	r0, [r7, r4]
    138c:	orr	r1, r2, r1, lsl #8
    1390:	mov	r2, sl
    1394:	ldr	r0, [r0, #404]	; 0x194
    1398:	orr	r3, r3, r1, lsl #8
    139c:	mov	r1, #0
    13a0:	rsbne	r3, r3, #-2147483648	; 0x80000000
    13a4:	bl	0 <coda_mem_int32_new>
    13a8:	movw	r1, #0
    13ac:	mov	r2, r0
    13b0:	mov	r0, r6
    13b4:	mov	r3, #0
    13b8:	movt	r1, #0
    13bc:	bl	0 <coda_mem_record_add_field>
    13c0:	ldrb	r0, [fp, #-108]	; 0xffffff94
    13c4:	ldrb	r1, [fp, #-107]	; 0xffffff95
    13c8:	ldrb	r2, [fp, #-106]	; 0xffffff96
    13cc:	ldrb	r3, [fp, #-105]	; 0xffffff97
    13d0:	orr	r1, r1, r0, lsl #8
    13d4:	tst	r0, #128	; 0x80
    13d8:	ldr	r0, [r7, r4]
    13dc:	orr	r1, r2, r1, lsl #8
    13e0:	mov	r2, sl
    13e4:	ldr	r0, [r0, #408]	; 0x198
    13e8:	orr	r3, r3, r1, lsl #8
    13ec:	mov	r1, #0
    13f0:	rsbne	r3, r3, #-2147483648	; 0x80000000
    13f4:	bl	0 <coda_mem_int32_new>
    13f8:	movw	r1, #0
    13fc:	mov	r2, r0
    1400:	mov	r0, r6
    1404:	mov	r3, #0
    1408:	movt	r1, #0
    140c:	bl	0 <coda_mem_record_add_field>
    1410:	ldr	r0, [r7, r4]
    1414:	ldrb	r3, [fp, #-104]	; 0xffffff98
    1418:	mov	r1, #0
    141c:	mov	r2, sl
    1420:	ldr	r0, [r0, #412]	; 0x19c
    1424:	bl	0 <coda_mem_uint8_new>
    1428:	movw	r1, #0
    142c:	mov	r2, r0
    1430:	mov	r0, r6
    1434:	mov	r3, #0
    1438:	movt	r1, #0
    143c:	bl	0 <coda_mem_record_add_field>
    1440:	ldrb	r0, [fp, #-103]	; 0xffffff99
    1444:	ldrb	r1, [fp, #-102]	; 0xffffff9a
    1448:	ldrb	r2, [fp, #-101]	; 0xffffff9b
    144c:	ldrb	r3, [fp, #-100]	; 0xffffff9c
    1450:	orr	r1, r1, r0, lsl #8
    1454:	tst	r0, #128	; 0x80
    1458:	ldr	r0, [r7, r4]
    145c:	orr	r1, r2, r1, lsl #8
    1460:	mov	r2, sl
    1464:	ldr	r0, [r0, #416]	; 0x1a0
    1468:	orr	r3, r3, r1, lsl #8
    146c:	mov	r1, #0
    1470:	rsbne	r3, r3, #-2147483648	; 0x80000000
    1474:	bl	0 <coda_mem_int32_new>
    1478:	movw	r1, #0
    147c:	mov	r2, r0
    1480:	mov	r0, r6
    1484:	mov	r3, #0
    1488:	movt	r1, #0
    148c:	bl	0 <coda_mem_record_add_field>
    1490:	ldrb	r0, [fp, #-99]	; 0xffffff9d
    1494:	ldrb	r1, [fp, #-98]	; 0xffffff9e
    1498:	ldrb	r2, [fp, #-97]	; 0xffffff9f
    149c:	ldrb	r3, [fp, #-96]	; 0xffffffa0
    14a0:	orr	r1, r1, r0, lsl #8
    14a4:	tst	r0, #128	; 0x80
    14a8:	ldr	r0, [r7, r4]
    14ac:	orr	r1, r2, r1, lsl #8
    14b0:	mov	r2, sl
    14b4:	ldr	r0, [r0, #420]	; 0x1a4
    14b8:	orr	r3, r3, r1, lsl #8
    14bc:	mov	r1, #0
    14c0:	rsbne	r3, r3, #-2147483648	; 0x80000000
    14c4:	bl	0 <coda_mem_int32_new>
    14c8:	movw	r1, #0
    14cc:	mov	r2, r0
    14d0:	mov	r0, r6
    14d4:	mov	r3, #0
    14d8:	movt	r1, #0
    14dc:	bl	0 <coda_mem_record_add_field>
    14e0:	ldr	r0, [r7, r4]
    14e4:	ldr	r1, [fp, #-95]	; 0xffffffa1
    14e8:	mov	r2, sl
    14ec:	ldr	r0, [r0, #424]	; 0x1a8
    14f0:	rev	r3, r1
    14f4:	mov	r1, #0
    14f8:	bl	0 <coda_mem_uint32_new>
    14fc:	movw	r1, #0
    1500:	mov	r2, r0
    1504:	mov	r0, r6
    1508:	mov	r3, #0
    150c:	movt	r1, #0
    1510:	bl	0 <coda_mem_record_add_field>
    1514:	ldr	r1, [pc, #-1484]	; f50 <coda_grib_reopen+0xee0>
    1518:	ldr	r4, [sp, #24]
    151c:	mov	r0, #428	; 0x1ac
    1520:	mov	r2, sl
    1524:	ldr	r1, [r7, r1]
    1528:	cmp	r4, #39	; 0x27
    152c:	movwhi	r0, #432	; 0x1b0
    1530:	ldr	r0, [r1, r0]
    1534:	ldr	r1, [fp, #-91]	; 0xffffffa5
    1538:	rev	r3, r1
    153c:	mov	r1, #0
    1540:	bl	0 <coda_mem_uint32_new>
    1544:	mov	r2, r0
    1548:	movw	r0, #0
    154c:	cmp	r4, #39	; 0x27
    1550:	ldr	r4, [pc, #-1544]	; f50 <coda_grib_reopen+0xee0>
    1554:	movw	r1, #0
    1558:	mov	r3, #0
    155c:	movt	r0, #0
    1560:	movt	r1, #0
    1564:	movhi	r1, r0
    1568:	mov	r0, r6
    156c:	bl	0 <coda_mem_record_add_field>
    1570:	ldr	r0, [r7, r4]
    1574:	ldrb	r3, [fp, #-87]	; 0xffffffa9
    1578:	mov	r1, #0
    157c:	mov	r2, sl
    1580:	ldr	r0, [r0, #436]	; 0x1b4
    1584:	bl	0 <coda_mem_uint8_new>
    1588:	movw	r1, #0
    158c:	mov	r2, r0
    1590:	mov	r0, r6
    1594:	mov	r3, #0
    1598:	str	r6, [sp, #24]
    159c:	movt	r1, #0
    15a0:	bl	0 <coda_mem_record_add_field>
    15a4:	ldr	r6, [sp, #180]	; 0xb4
    15a8:	ldr	r1, [sp, #176]	; 0xb0
    15ac:	ldr	r0, [sp, #28]
    15b0:	adds	r6, r6, #72	; 0x48
    15b4:	adc	r1, r1, #0
    15b8:	cmp	r0, #0
    15bc:	beq	1e78 <coda_grib_reopen+0x1e08>
    15c0:	ldr	r0, [sp, #144]	; 0x90
    15c4:	cmn	r5, #1
    15c8:	beq	1f68 <coda_grib_reopen+0x1ef8>
    15cc:	ldr	r2, [sp, #20]
    15d0:	cmn	r2, #1
    15d4:	ldr	r2, [sp, #160]	; 0xa0
    15d8:	beq	1f70 <coda_grib_reopen+0x1f00>
    15dc:	b	367c <coda_grib_reopen+0x360c>
    15e0:	ldr	r2, [sp, #160]	; 0xa0
    15e4:	mov	r1, #0
    15e8:	orr	r0, r2, #4
    15ec:	uxtb	r0, r0
    15f0:	cmp	r0, #7
    15f4:	bne	346c <coda_grib_reopen+0x33fc>
    15f8:	ldr	r0, [sp, #188]	; 0xbc
    15fc:	mov	r2, #4
    1600:	str	r1, [sp, #4]
    1604:	sub	r1, fp, #144	; 0x90
    1608:	mov	r3, r4
    160c:	mov	r5, #0
    1610:	str	r2, [sp]
    1614:	mov	r2, r6
    1618:	str	r1, [sp, #8]
    161c:	ldr	r0, [r0]
    1620:	bl	7798 <read_bytes>
    1624:	cmp	r0, #0
    1628:	bmi	3708 <coda_grib_reopen+0x3698>
    162c:	ldrb	r0, [fp, #-142]	; 0xffffff72
    1630:	ldrb	r1, [fp, #-141]	; 0xffffff73
    1634:	ldrh	r4, [fp, #-144]	; 0xffffff70
    1638:	orr	r2, r1, r0, lsl #8
    163c:	cmp	r2, #7
    1640:	bcc	1650 <coda_grib_reopen+0x15e0>
    1644:	cmp	r2, #15
    1648:	cmpne	r2, #51	; 0x33
    164c:	bne	21a8 <coda_grib_reopen+0x2138>
    1650:	mov	r1, #25
    1654:	ldr	r0, [sp, #188]	; 0xbc
    1658:	stm	sp, {r1, r5}
    165c:	sub	r1, fp, #144	; 0x90
    1660:	str	r1, [sp, #8]
    1664:	ldr	r1, [sp, #180]	; 0xb4
    1668:	ldr	r0, [r0]
    166c:	adds	r2, r1, #9
    1670:	ldr	r1, [sp, #176]	; 0xb0
    1674:	adc	r3, r1, #0
    1678:	bl	7798 <read_bytes>
    167c:	cmp	r0, #0
    1680:	bmi	3708 <coda_grib_reopen+0x3698>
    1684:	ldrb	r0, [fp, #-136]	; 0xffffff78
    1688:	ldrb	r1, [fp, #-131]	; 0xffffff7d
    168c:	ldr	sl, [fp, #-135]	; 0xffffff79
    1690:	ldrh	r5, [fp, #-139]	; 0xffffff75
    1694:	str	r0, [sp, #116]	; 0x74
    1698:	ldrb	r0, [fp, #-137]	; 0xffffff77
    169c:	cmp	r1, #255	; 0xff
    16a0:	str	r1, [sp, #112]	; 0x70
    16a4:	str	r0, [sp, #120]	; 0x78
    16a8:	ldrb	r0, [fp, #-140]	; 0xffffff74
    16ac:	str	r0, [sp, #128]	; 0x80
    16b0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    16b4:	str	r0, [sp, #104]	; 0x68
    16b8:	ldrb	r0, [fp, #-143]	; 0xffffff71
    16bc:	str	r0, [sp, #132]	; 0x84
    16c0:	ldrb	r0, [fp, #-142]	; 0xffffff72
    16c4:	str	r0, [sp, #124]	; 0x7c
    16c8:	ldrb	r0, [fp, #-141]	; 0xffffff73
    16cc:	str	r0, [sp, #108]	; 0x6c
    16d0:	beq	1e64 <coda_grib_reopen+0x1df4>
    16d4:	ldr	r2, [fp, #-129]	; 0xffffff7f
    16d8:	ldrsb	r1, [fp, #-130]	; 0xffffff7e
    16dc:	rev	r2, r2
    16e0:	uxtb	r0, r1
    16e4:	cmn	r1, #1
    16e8:	vmov	s0, r2
    16ec:	vcvt.f64.s32	d8, s0
    16f0:	ble	1f10 <coda_grib_reopen+0x1ea0>
    16f4:	ldr	r6, [sp, #180]	; 0xb4
    16f8:	ldr	r3, [sp, #176]	; 0xb0
    16fc:	cmp	r0, #0
    1700:	beq	20ec <coda_grib_reopen+0x207c>
    1704:	tst	r0, #1
    1708:	bne	20c4 <coda_grib_reopen+0x2054>
    170c:	mov	r1, r0
    1710:	cmp	r0, #1
    1714:	bne	20d4 <coda_grib_reopen+0x2064>
    1718:	b	20ec <coda_grib_reopen+0x207c>
    171c:	ldr	r0, [sp, #160]	; 0xa0
    1720:	mov	r1, #0
    1724:	uxtb	r3, r0
    1728:	cmp	r3, #4
    172c:	bne	3480 <coda_grib_reopen+0x3410>
    1730:	ldr	r0, [sp, #188]	; 0xbc
    1734:	mov	r2, #6
    1738:	str	r1, [sp, #4]
    173c:	sub	r1, fp, #144	; 0x90
    1740:	mov	r3, r4
    1744:	str	r7, [sp, #144]	; 0x90
    1748:	mov	r7, #0
    174c:	str	r2, [sp]
    1750:	mov	r2, r6
    1754:	str	r1, [sp, #8]
    1758:	ldr	r0, [r0]
    175c:	bl	7798 <read_bytes>
    1760:	cmp	r0, #0
    1764:	bmi	3708 <coda_grib_reopen+0x3698>
    1768:	ldrb	r0, [fp, #-140]	; 0xffffff74
    176c:	ldrb	r1, [fp, #-139]	; 0xffffff75
    1770:	orr	r2, r1, r0, lsl #8
    1774:	cmp	r2, #1
    1778:	bhi	34e8 <coda_grib_reopen+0x3478>
    177c:	mov	r1, #4
    1780:	ldr	r0, [sp, #188]	; 0xbc
    1784:	ldr	r5, [fp, #-144]	; 0xffffff70
    1788:	stm	sp, {r1, r7}
    178c:	sub	r1, fp, #80	; 0x50
    1790:	str	r1, [sp, #8]
    1794:	ldr	r1, [sp, #180]	; 0xb4
    1798:	ldr	r0, [r0]
    179c:	adds	r2, r1, #11
    17a0:	ldr	r1, [sp, #176]	; 0xb0
    17a4:	adc	r3, r1, #0
    17a8:	bl	7798 <read_bytes>
    17ac:	cmp	r0, #0
    17b0:	bmi	3708 <coda_grib_reopen+0x3698>
    17b4:	ldrb	r0, [fp, #-80]	; 0xffffffb0
    17b8:	ldrb	r1, [fp, #-79]	; 0xffffffb1
    17bc:	ldrb	r2, [fp, #-78]	; 0xffffffb2
    17c0:	ldrb	r3, [fp, #-77]	; 0xffffffb3
    17c4:	strb	r0, [fp, #-77]	; 0xffffffb3
    17c8:	strb	r3, [fp, #-80]	; 0xffffffb0
    17cc:	strb	r2, [fp, #-79]	; 0xffffffb1
    17d0:	strb	r1, [fp, #-78]	; 0xffffffb2
    17d4:	mov	r1, #5
    17d8:	ldr	r0, [sp, #188]	; 0xbc
    17dc:	stm	sp, {r1, r7}
    17e0:	sub	r1, fp, #144	; 0x90
    17e4:	str	r1, [sp, #8]
    17e8:	ldr	r1, [sp, #180]	; 0xb4
    17ec:	ldr	r0, [r0]
    17f0:	adds	r2, r1, #15
    17f4:	ldr	r1, [sp, #176]	; 0xb0
    17f8:	adc	r3, r1, #0
    17fc:	bl	7798 <read_bytes>
    1800:	cmp	r0, #0
    1804:	bmi	3708 <coda_grib_reopen+0x3698>
    1808:	ldrb	r1, [fp, #-142]	; 0xffffff72
    180c:	ldrb	r0, [fp, #-144]	; 0xffffff70
    1810:	ldrb	r7, [fp, #-140]	; 0xffffff74
    1814:	mvn	r2, #0
    1818:	mvn	r3, #0
    181c:	tst	r1, #128	; 0x80
    1820:	str	r7, [sp, #84]	; 0x54
    1824:	movweq	r2, #1
    1828:	tst	r0, #128	; 0x80
    182c:	movweq	r3, #1
    1830:	cmp	r7, #64	; 0x40
    1834:	bcs	3538 <coda_grib_reopen+0x34c8>
    1838:	rev	r7, r5
    183c:	ldrb	r5, [fp, #-141]	; 0xffffff73
    1840:	ldr	r6, [sp, #180]	; 0xb4
    1844:	str	r7, [sp, #68]	; 0x44
    1848:	ldrb	r7, [fp, #-143]	; 0xffffff71
    184c:	bfi	r5, r1, #8, #7
    1850:	adds	r6, r6, #20
    1854:	bfi	r7, r0, #8, #7
    1858:	mul	r1, r2, r5
    185c:	mul	r0, r3, r7
    1860:	ldr	r3, [sp, #176]	; 0xb0
    1864:	str	r1, [sp, #76]	; 0x4c
    1868:	str	r0, [sp, #72]	; 0x48
    186c:	mov	r0, #5
    1870:	str	r0, [sp, #160]	; 0xa0
    1874:	ldr	r0, [sp, #144]	; 0x90
    1878:	adc	r3, r3, #0
    187c:	cmp	r0, #20
    1880:	bls	2244 <coda_grib_reopen+0x21d4>
    1884:	sub	r0, r0, #20
    1888:	b	2234 <coda_grib_reopen+0x21c4>
    188c:	ldr	r0, [sp, #160]	; 0xa0
    1890:	mov	r1, #0
    1894:	uxtb	r3, r0
    1898:	cmp	r3, #5
    189c:	bne	3490 <coda_grib_reopen+0x3420>
    18a0:	ldr	r0, [sp, #188]	; 0xbc
    18a4:	mov	r2, #1
    18a8:	str	r1, [sp, #4]
    18ac:	sub	r1, fp, #144	; 0x90
    18b0:	mov	r3, r4
    18b4:	str	r2, [sp]
    18b8:	mov	r2, r6
    18bc:	str	r1, [sp, #8]
    18c0:	ldr	r0, [r0]
    18c4:	bl	7798 <read_bytes>
    18c8:	cmp	r0, #0
    18cc:	bmi	3708 <coda_grib_reopen+0x3698>
    18d0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    18d4:	cmp	r0, #255	; 0xff
    18d8:	beq	1eac <coda_grib_reopen+0x1e3c>
    18dc:	ldr	r6, [sp, #180]	; 0xb4
    18e0:	ldr	r3, [sp, #176]	; 0xb0
    18e4:	cmp	r0, #254	; 0xfe
    18e8:	mov	r5, #0
    18ec:	beq	1ec4 <coda_grib_reopen+0x1e54>
    18f0:	cmp	r0, #0
    18f4:	bne	34d0 <coda_grib_reopen+0x3460>
    18f8:	adds	r0, r6, #6
    18fc:	str	r0, [sp, #56]	; 0x38
    1900:	adc	r0, r3, #0
    1904:	str	r0, [sp, #52]	; 0x34
    1908:	sub	r0, r7, #6
    190c:	str	r0, [sp, #44]	; 0x2c
    1910:	mov	r0, #0
    1914:	str	r0, [sp, #40]	; 0x28
    1918:	mov	r0, #1
    191c:	str	r0, [sp, #136]	; 0x88
    1920:	b	1ee8 <coda_grib_reopen+0x1e78>
    1924:	ldr	r1, [sp, #160]	; 0xa0
    1928:	ldr	r5, [pc, #-2528]	; f50 <coda_grib_reopen+0xee0>
    192c:	sub	r0, r1, #5
    1930:	uxtb	r0, r0
    1934:	cmp	r0, #2
    1938:	bcs	34a0 <coda_grib_reopen+0x3430>
    193c:	str	r6, [sp, #176]	; 0xb0
    1940:	str	r4, [sp, #180]	; 0xb4
    1944:	str	r7, [sp, #144]	; 0x90
    1948:	bl	0 <__aeabi_read_tp>
    194c:	mov	r7, r0
    1950:	ldr	r0, [r0, r5]
    1954:	mov	r1, #0
    1958:	ldr	r0, [r0, #544]	; 0x220
    195c:	bl	0 <coda_mem_record_new>
    1960:	mov	r6, r0
    1964:	ldr	r0, [r7, r5]
    1968:	ldr	r3, [sp, #140]	; 0x8c
    196c:	mov	r1, #0
    1970:	mov	r2, sl
    1974:	ldr	r0, [r0, #280]	; 0x118
    1978:	bl	0 <coda_mem_uint32_new>
    197c:	movw	r1, #0
    1980:	mov	r2, r0
    1984:	mov	r0, r6
    1988:	mov	r3, #0
    198c:	movt	r1, #0
    1990:	bl	0 <coda_mem_record_add_field>
    1994:	ldr	r0, [r7, r5]
    1998:	ldr	r1, [sp, #104]	; 0x68
    199c:	mov	r2, sl
    19a0:	ldr	r0, [r0, #460]	; 0x1cc
    19a4:	uxtb	r3, r1
    19a8:	mov	r1, #0
    19ac:	bl	0 <coda_mem_uint8_new>
    19b0:	movw	r1, #0
    19b4:	mov	r2, r0
    19b8:	mov	r0, r6
    19bc:	mov	r3, #0
    19c0:	movt	r1, #0
    19c4:	bl	0 <coda_mem_record_add_field>
    19c8:	ldr	r0, [r7, r5]
    19cc:	ldr	r1, [sp, #132]	; 0x84
    19d0:	mov	r2, sl
    19d4:	ldr	r0, [r0, #464]	; 0x1d0
    19d8:	uxtb	r3, r1
    19dc:	mov	r1, #0
    19e0:	bl	0 <coda_mem_uint8_new>
    19e4:	movw	r1, #0
    19e8:	mov	r2, r0
    19ec:	mov	r0, r6
    19f0:	mov	r3, #0
    19f4:	movt	r1, #0
    19f8:	bl	0 <coda_mem_record_add_field>
    19fc:	ldr	r0, [r7, r5]
    1a00:	ldr	r1, [sp, #124]	; 0x7c
    1a04:	mov	r2, sl
    1a08:	ldr	r0, [r0, #468]	; 0x1d4
    1a0c:	uxtb	r3, r1
    1a10:	mov	r1, #0
    1a14:	bl	0 <coda_mem_uint8_new>
    1a18:	movw	r1, #0
    1a1c:	mov	r2, r0
    1a20:	mov	r0, r6
    1a24:	mov	r3, #0
    1a28:	movt	r1, #0
    1a2c:	bl	0 <coda_mem_record_add_field>
    1a30:	ldr	r0, [r7, r5]
    1a34:	ldr	r1, [sp, #108]	; 0x6c
    1a38:	mov	r2, sl
    1a3c:	ldr	r0, [r0, #472]	; 0x1d8
    1a40:	uxtb	r3, r1
    1a44:	mov	r1, #0
    1a48:	bl	0 <coda_mem_uint8_new>
    1a4c:	movw	r1, #0
    1a50:	mov	r2, r0
    1a54:	mov	r0, r6
    1a58:	mov	r3, #0
    1a5c:	movt	r1, #0
    1a60:	bl	0 <coda_mem_record_add_field>
    1a64:	ldr	r0, [r7, r5]
    1a68:	ldr	r1, [sp, #128]	; 0x80
    1a6c:	mov	r2, sl
    1a70:	ldr	r0, [r0, #476]	; 0x1dc
    1a74:	uxtb	r3, r1
    1a78:	mov	r1, #0
    1a7c:	bl	0 <coda_mem_uint8_new>
    1a80:	movw	r1, #0
    1a84:	mov	r2, r0
    1a88:	mov	r0, r6
    1a8c:	mov	r3, #0
    1a90:	movt	r1, #0
    1a94:	bl	0 <coda_mem_record_add_field>
    1a98:	ldr	r0, [r7, r5]
    1a9c:	ldr	r1, [sp, #92]	; 0x5c
    1aa0:	mov	r2, sl
    1aa4:	ldr	r0, [r0, #480]	; 0x1e0
    1aa8:	uxth	r3, r1
    1aac:	mov	r1, #0
    1ab0:	bl	0 <coda_mem_uint16_new>
    1ab4:	movw	r1, #0
    1ab8:	mov	r2, r0
    1abc:	mov	r0, r6
    1ac0:	mov	r3, #0
    1ac4:	movt	r1, #0
    1ac8:	bl	0 <coda_mem_record_add_field>
    1acc:	ldr	r0, [r7, r5]
    1ad0:	ldr	r1, [sp, #120]	; 0x78
    1ad4:	mov	r2, sl
    1ad8:	ldr	r0, [r0, #484]	; 0x1e4
    1adc:	uxtb	r3, r1
    1ae0:	mov	r1, #0
    1ae4:	bl	0 <coda_mem_uint8_new>
    1ae8:	movw	r1, #0
    1aec:	mov	r2, r0
    1af0:	mov	r0, r6
    1af4:	mov	r3, #0
    1af8:	movt	r1, #0
    1afc:	bl	0 <coda_mem_record_add_field>
    1b00:	ldr	r0, [r7, r5]
    1b04:	ldr	r1, [sp, #116]	; 0x74
    1b08:	mov	r2, sl
    1b0c:	ldr	r0, [r0, #488]	; 0x1e8
    1b10:	uxtb	r3, r1
    1b14:	mov	r1, #0
    1b18:	bl	0 <coda_mem_uint8_new>
    1b1c:	movw	r1, #0
    1b20:	mov	r2, r0
    1b24:	mov	r0, r6
    1b28:	mov	r3, #0
    1b2c:	movt	r1, #0
    1b30:	bl	0 <coda_mem_record_add_field>
    1b34:	ldr	r0, [r7, r5]
    1b38:	ldr	r3, [sp, #88]	; 0x58
    1b3c:	mov	r1, #0
    1b40:	mov	r2, sl
    1b44:	ldr	r0, [r0, #492]	; 0x1ec
    1b48:	bl	0 <coda_mem_uint32_new>
    1b4c:	movw	r1, #0
    1b50:	mov	r2, r0
    1b54:	mov	r0, r6
    1b58:	mov	r3, #0
    1b5c:	movt	r1, #0
    1b60:	bl	0 <coda_mem_record_add_field>
    1b64:	ldr	r0, [r7, r5]
    1b68:	ldr	r1, [sp, #112]	; 0x70
    1b6c:	mov	r2, sl
    1b70:	ldr	r0, [r0, #496]	; 0x1f0
    1b74:	uxtb	r3, r1
    1b78:	mov	r1, #0
    1b7c:	bl	0 <coda_mem_uint8_new>
    1b80:	movw	r1, #0
    1b84:	mov	r2, r0
    1b88:	mov	r0, r6
    1b8c:	mov	r3, #0
    1b90:	movt	r1, #0
    1b94:	bl	0 <coda_mem_record_add_field>
    1b98:	ldr	r0, [r7, r5]
    1b9c:	vorr	d0, d8, d8
    1ba0:	mov	r1, #0
    1ba4:	mov	r2, sl
    1ba8:	ldr	r0, [r0, #500]	; 0x1f4
    1bac:	bl	0 <coda_mem_double_new>
    1bb0:	movw	r1, #0
    1bb4:	mov	r2, r0
    1bb8:	mov	r0, r6
    1bbc:	mov	r3, #0
    1bc0:	movt	r1, #0
    1bc4:	bl	0 <coda_mem_record_add_field>
    1bc8:	ldr	r0, [r7, r5]
    1bcc:	ldr	r1, [sp, #100]	; 0x64
    1bd0:	mov	r2, sl
    1bd4:	ldr	r0, [r0, #504]	; 0x1f8
    1bd8:	uxtb	r3, r1
    1bdc:	mov	r1, #0
    1be0:	bl	0 <coda_mem_uint8_new>
    1be4:	movw	r1, #0
    1be8:	mov	r2, r0
    1bec:	mov	r0, r6
    1bf0:	mov	r3, #0
    1bf4:	movt	r1, #0
    1bf8:	bl	0 <coda_mem_record_add_field>
    1bfc:	ldr	r0, [r7, r5]
    1c00:	vorr	d0, d9, d9
    1c04:	mov	r1, #0
    1c08:	mov	r2, sl
    1c0c:	ldr	r0, [r0, #508]	; 0x1fc
    1c10:	bl	0 <coda_mem_double_new>
    1c14:	movw	r1, #0
    1c18:	mov	r2, r0
    1c1c:	mov	r0, r6
    1c20:	mov	r3, #0
    1c24:	movt	r1, #0
    1c28:	bl	0 <coda_mem_record_add_field>
    1c2c:	ldr	r1, [sp, #96]	; 0x60
    1c30:	movw	r0, #65535	; 0xffff
    1c34:	tst	r1, r0
    1c38:	beq	1c70 <coda_grib_reopen+0x1c00>
    1c3c:	bl	0 <__aeabi_read_tp>
    1c40:	ldr	r0, [r0, r5]
    1c44:	ldr	r2, [sp, #64]	; 0x40
    1c48:	ldr	r3, [sp, #60]	; 0x3c
    1c4c:	uxth	r1, r1
    1c50:	ldr	r0, [r0, #516]	; 0x204
    1c54:	bl	0 <coda_grib_value_array_new>
    1c58:	movw	r1, #0
    1c5c:	mov	r2, r0
    1c60:	mov	r0, r6
    1c64:	mov	r3, #0
    1c68:	movt	r1, #0
    1c6c:	bl	0 <coda_mem_record_add_field>
    1c70:	bl	0 <__aeabi_read_tp>
    1c74:	mov	sl, r0
    1c78:	ldr	r0, [r0, r5]
    1c7c:	ldr	r1, [sp, #84]	; 0x54
    1c80:	ldr	r4, [sp, #172]	; 0xac
    1c84:	mov	r7, #0
    1c88:	ldr	r0, [r0, #524]	; 0x20c
    1c8c:	uxtb	r3, r1
    1c90:	mov	r1, #0
    1c94:	mov	r2, r4
    1c98:	str	r3, [sp, #160]	; 0xa0
    1c9c:	bl	0 <coda_mem_uint8_new>
    1ca0:	movw	r1, #0
    1ca4:	mov	r2, r0
    1ca8:	mov	r0, r6
    1cac:	mov	r3, #0
    1cb0:	movt	r1, #0
    1cb4:	bl	0 <coda_mem_record_add_field>
    1cb8:	ldr	r0, [sl, r5]
    1cbc:	ldr	r1, [sp, #76]	; 0x4c
    1cc0:	mov	r2, r4
    1cc4:	ldr	r0, [r0, #320]	; 0x140
    1cc8:	sxth	r3, r1
    1ccc:	mov	r1, #0
    1cd0:	str	r3, [sp, #28]
    1cd4:	bl	0 <coda_mem_int16_new>
    1cd8:	movw	r1, #0
    1cdc:	mov	r2, r0
    1ce0:	mov	r0, r6
    1ce4:	mov	r3, #0
    1ce8:	movt	r1, #0
    1cec:	bl	0 <coda_mem_record_add_field>
    1cf0:	ldr	r0, [sl, r5]
    1cf4:	ldr	r1, [sp, #72]	; 0x48
    1cf8:	mov	r2, r4
    1cfc:	ldr	r0, [r0, #528]	; 0x210
    1d00:	sxth	r3, r1
    1d04:	mov	r1, #0
    1d08:	str	r3, [sp, #24]
    1d0c:	bl	0 <coda_mem_int16_new>
    1d10:	movw	r1, #0
    1d14:	mov	r2, r0
    1d18:	mov	r0, r6
    1d1c:	mov	r3, #0
    1d20:	movt	r1, #0
    1d24:	bl	0 <coda_mem_record_add_field>
    1d28:	ldr	r0, [sl, r5]
    1d2c:	vldr	s20, [fp, #-80]	; 0xffffffb0
    1d30:	mov	r1, #0
    1d34:	mov	r2, r4
    1d38:	mov	sl, r4
    1d3c:	ldr	r0, [r0, #532]	; 0x214
    1d40:	vmov.f32	s0, s20
    1d44:	bl	0 <coda_mem_float_new>
    1d48:	movw	r1, #0
    1d4c:	mov	r2, r0
    1d50:	mov	r0, r6
    1d54:	mov	r3, #0
    1d58:	movt	r1, #0
    1d5c:	bl	0 <coda_mem_record_add_field>
    1d60:	ldr	r0, [sp, #136]	; 0x88
    1d64:	cmp	r0, #0
    1d68:	beq	1dac <coda_grib_reopen+0x1d3c>
    1d6c:	ldr	r4, [sp, #44]	; 0x2c
    1d70:	mov	r0, r4
    1d74:	bl	0 <malloc>
    1d78:	cmp	r0, #0
    1d7c:	beq	35ec <coda_grib_reopen+0x357c>
    1d80:	mov	r7, r0
    1d84:	ldr	r0, [sp, #188]	; 0xbc
    1d88:	ldr	r1, [sp, #40]	; 0x28
    1d8c:	ldr	r2, [sp, #56]	; 0x38
    1d90:	ldr	r3, [sp, #52]	; 0x34
    1d94:	str	r4, [sp]
    1d98:	ldr	r0, [r0]
    1d9c:	stmib	sp, {r1, r7}
    1da0:	bl	7798 <read_bytes>
    1da4:	cmn	r0, #1
    1da8:	ble	3450 <coda_grib_reopen+0x33e0>
    1dac:	bl	0 <__aeabi_read_tp>
    1db0:	ldr	r4, [pc, #-3688]	; f50 <coda_grib_reopen+0xee0>
    1db4:	ldr	r1, [sp, #160]	; 0xa0
    1db8:	ldr	r2, [sp, #176]	; 0xb0
    1dbc:	ldr	r3, [sp, #180]	; 0xb4
    1dc0:	vmov.f32	s0, s20
    1dc4:	ldr	r0, [r0, r4]
    1dc8:	ldr	r0, [r0, #536]	; 0x218
    1dcc:	str	r1, [sp]
    1dd0:	ldr	r1, [sp, #28]
    1dd4:	str	r7, [sp, #12]
    1dd8:	str	r1, [sp, #4]
    1ddc:	ldr	r1, [sp, #24]
    1de0:	str	r1, [sp, #8]
    1de4:	ldr	r1, [sp, #68]	; 0x44
    1de8:	bl	0 <coda_grib_value_array_simple_packing_new>
    1dec:	mov	r5, r0
    1df0:	cmp	r7, #0
    1df4:	beq	1e00 <coda_grib_reopen+0x1d90>
    1df8:	mov	r0, r7
    1dfc:	bl	0 <free>
    1e00:	movw	r1, #0
    1e04:	mov	r0, r6
    1e08:	mov	r2, r5
    1e0c:	mov	r3, #0
    1e10:	movt	r1, #0
    1e14:	bl	0 <coda_mem_record_add_field>
    1e18:	ldr	r0, [sp, #48]	; 0x30
    1e1c:	mov	r1, r6
    1e20:	bl	0 <coda_mem_array_add_element>
    1e24:	mov	r0, #7
    1e28:	str	r0, [sp, #160]	; 0xa0
    1e2c:	ldr	r0, [sp, #144]	; 0x90
    1e30:	cmp	r0, #6
    1e34:	bcc	1e58 <coda_grib_reopen+0x1de8>
    1e38:	ldr	r1, [sp, #176]	; 0xb0
    1e3c:	sub	r0, r0, #5
    1e40:	adds	r6, r1, r0
    1e44:	ldr	r0, [sp, #180]	; 0xb4
    1e48:	adc	r3, r0, #0
    1e4c:	b	2244 <coda_grib_reopen+0x21d4>
    1e50:	mov	r3, r4
    1e54:	b	2248 <coda_grib_reopen+0x21d8>
    1e58:	ldr	r6, [sp, #176]	; 0xb0
    1e5c:	ldr	r3, [sp, #180]	; 0xb4
    1e60:	b	2244 <coda_grib_reopen+0x21d4>
    1e64:	bl	0 <coda_NaN>
    1e68:	ldr	r6, [sp, #180]	; 0xb4
    1e6c:	ldr	r3, [sp, #176]	; 0xb0
    1e70:	vmov.f64	d8, d0
    1e74:	b	20ec <coda_grib_reopen+0x207c>
    1e78:	cmn	r5, #1
    1e7c:	ldr	r0, [sp, #144]	; 0x90
    1e80:	ldrne	r2, [sp, #20]
    1e84:	cmnne	r2, #1
    1e88:	beq	3694 <coda_grib_reopen+0x3624>
    1e8c:	cmp	r0, #73	; 0x49
    1e90:	bcc	2088 <coda_grib_reopen+0x2018>
    1e94:	sub	r0, r0, #72	; 0x48
    1e98:	adds	r6, r6, r0
    1e9c:	adc	r1, r1, #0
    1ea0:	mov	r4, r6
    1ea4:	mov	r7, r1
    1ea8:	b	2090 <coda_grib_reopen+0x2020>
    1eac:	ldr	r6, [sp, #180]	; 0xb4
    1eb0:	ldr	r3, [sp, #176]	; 0xb0
    1eb4:	mov	r0, #0
    1eb8:	mov	r5, #0
    1ebc:	str	r0, [sp, #136]	; 0x88
    1ec0:	b	1ee8 <coda_grib_reopen+0x1e78>
    1ec4:	ldr	r0, [sp, #56]	; 0x38
    1ec8:	ldr	r2, [sp, #52]	; 0x34
    1ecc:	mvn	r1, #0
    1ed0:	eor	r0, r0, r1
    1ed4:	eor	r1, r2, r1
    1ed8:	orrs	r0, r0, r1
    1edc:	mov	r0, #1
    1ee0:	str	r0, [sp, #136]	; 0x88
    1ee4:	beq	36ac <coda_grib_reopen+0x363c>
    1ee8:	adds	r6, r6, #6
    1eec:	mov	r0, #6
    1ef0:	adc	r3, r3, #0
    1ef4:	cmp	r7, #7
    1ef8:	str	r0, [sp, #160]	; 0xa0
    1efc:	bcc	2248 <coda_grib_reopen+0x21d8>
    1f00:	sub	r0, r7, #6
    1f04:	adds	r6, r6, r0
    1f08:	adc	r3, r3, #0
    1f0c:	b	2248 <coda_grib_reopen+0x21d8>
    1f10:	ldr	r6, [sp, #180]	; 0xb4
    1f14:	ldr	r3, [sp, #176]	; 0xb0
    1f18:	rsb	r1, r0, #0
    1f1c:	ands	r2, r1, #3
    1f20:	mov	r1, r0
    1f24:	beq	1f3c <coda_grib_reopen+0x1ecc>
    1f28:	vmul.f64	d8, d8, d12
    1f2c:	sub	r2, r2, #1
    1f30:	add	r1, r1, #1
    1f34:	tst	r2, #255	; 0xff
    1f38:	bne	1f28 <coda_grib_reopen+0x1eb8>
    1f3c:	cmp	r0, #252	; 0xfc
    1f40:	bhi	20ec <coda_grib_reopen+0x207c>
    1f44:	vmul.f64	d16, d8, d12
    1f48:	add	r0, r1, #4
    1f4c:	sxtb	r1, r0
    1f50:	cmp	r1, #0
    1f54:	vmul.f64	d16, d16, d12
    1f58:	vmul.f64	d16, d16, d12
    1f5c:	vmul.f64	d8, d16, d12
    1f60:	bmi	1f44 <coda_grib_reopen+0x1ed4>
    1f64:	b	20ec <coda_grib_reopen+0x207c>
    1f68:	ldr	r5, [sp, #20]
    1f6c:	ldr	r2, [sp, #160]	; 0xa0
    1f70:	mul	r3, r5, r2
    1f74:	sub	r2, r0, #72	; 0x48
    1f78:	cmp	r2, r3
    1f7c:	bne	3600 <coda_grib_reopen+0x3590>
    1f80:	mov	r7, r1
    1f84:	bl	0 <__aeabi_read_tp>
    1f88:	ldr	r0, [r0, r4]
    1f8c:	mov	r1, #0
    1f90:	ldr	r0, [r0, #444]	; 0x1bc
    1f94:	bl	0 <coda_mem_array_new>
    1f98:	mov	r2, r6
    1f9c:	mov	r3, r7
    1fa0:	cmp	r5, #1
    1fa4:	str	r0, [sp, #180]	; 0xb4
    1fa8:	bge	1ffc <coda_grib_reopen+0x1f8c>
    1fac:	b	2060 <coda_grib_reopen+0x1ff0>
    1fb0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    1fb4:	ldrb	r1, [fp, #-143]	; 0xffffff71
    1fb8:	orr	r3, r1, r0, lsl #8
    1fbc:	bl	0 <__aeabi_read_tp>
    1fc0:	ldr	r0, [r0, r4]
    1fc4:	mov	r1, #0
    1fc8:	mov	r2, sl
    1fcc:	ldr	r0, [r0, #440]	; 0x1b8
    1fd0:	bl	0 <coda_mem_uint32_new>
    1fd4:	mov	r1, r0
    1fd8:	ldr	r0, [sp, #180]	; 0xb4
    1fdc:	bl	0 <coda_mem_array_add_element>
    1fe0:	ldr	r0, [sp, #160]	; 0xa0
    1fe4:	mov	r2, r6
    1fe8:	mov	r3, r7
    1fec:	adds	r2, r6, r0
    1ff0:	adc	r3, r7, #0
    1ff4:	subs	r5, r5, #1
    1ff8:	beq	2060 <coda_grib_reopen+0x1ff0>
    1ffc:	ldr	r0, [sp, #188]	; 0xbc
    2000:	mov	r1, #2
    2004:	mov	r6, r2
    2008:	mov	r7, r3
    200c:	str	r1, [sp]
    2010:	mov	r1, #0
    2014:	str	r1, [sp, #4]
    2018:	sub	r1, fp, #144	; 0x90
    201c:	str	r1, [sp, #8]
    2020:	ldr	r0, [r0]
    2024:	bl	7798 <read_bytes>
    2028:	cmn	r0, #1
    202c:	ble	32e4 <coda_grib_reopen+0x3274>
    2030:	ldr	r2, [sp, #160]	; 0xa0
    2034:	cmp	r2, #4
    2038:	beq	2054 <coda_grib_reopen+0x1fe4>
    203c:	cmp	r2, #2
    2040:	beq	1fb0 <coda_grib_reopen+0x1f40>
    2044:	cmp	r2, #1
    2048:	bne	32d0 <coda_grib_reopen+0x3260>
    204c:	ldrb	r3, [fp, #-144]	; 0xffffff70
    2050:	b	1fbc <coda_grib_reopen+0x1f4c>
    2054:	ldr	r0, [fp, #-144]	; 0xffffff70
    2058:	rev	r3, r0
    205c:	b	1fbc <coda_grib_reopen+0x1f4c>
    2060:	ldr	r6, [sp, #24]
    2064:	mov	r4, r2
    2068:	ldr	r2, [sp, #180]	; 0xb4
    206c:	movw	r1, #0
    2070:	mov	r7, r3
    2074:	mov	r3, #0
    2078:	movt	r1, #0
    207c:	mov	r0, r6
    2080:	bl	0 <coda_mem_record_add_field>
    2084:	b	2094 <coda_grib_reopen+0x2024>
    2088:	mov	r7, r1
    208c:	mov	r4, r6
    2090:	ldr	r6, [sp, #24]
    2094:	mov	r5, #0
    2098:	ldr	r0, [sp, #36]	; 0x24
    209c:	mov	r1, r6
    20a0:	bl	0 <coda_mem_array_add_element>
    20a4:	ldr	r0, [sp, #140]	; 0x8c
    20a8:	mov	r6, r4
    20ac:	mov	r3, r7
    20b0:	add	r0, r0, #1
    20b4:	str	r0, [sp, #140]	; 0x8c
    20b8:	mov	r0, #3
    20bc:	str	r0, [sp, #160]	; 0xa0
    20c0:	b	2248 <coda_grib_reopen+0x21d8>
    20c4:	vdiv.f64	d8, d8, d12
    20c8:	sub	r1, r0, #1
    20cc:	cmp	r0, #1
    20d0:	beq	20ec <coda_grib_reopen+0x207c>
    20d4:	vdiv.f64	d16, d8, d12
    20d8:	sub	r0, r1, #2
    20dc:	sxtb	r1, r0
    20e0:	cmp	r1, #0
    20e4:	vdiv.f64	d8, d16, d12
    20e8:	bgt	20d4 <coda_grib_reopen+0x2064>
    20ec:	ldrb	r0, [fp, #-125]	; 0xffffff83
    20f0:	rev16	r4, r4
    20f4:	cmp	r0, #255	; 0xff
    20f8:	str	r0, [sp, #100]	; 0x64
    20fc:	beq	2140 <coda_grib_reopen+0x20d0>
    2100:	ldr	r2, [fp, #-123]	; 0xffffff85
    2104:	ldrsb	r1, [fp, #-124]	; 0xffffff84
    2108:	rev	r2, r2
    210c:	uxtb	r0, r1
    2110:	cmn	r1, #1
    2114:	vmov	s0, r2
    2118:	vcvt.f64.s32	d9, s0
    211c:	ble	2154 <coda_grib_reopen+0x20e4>
    2120:	cmp	r0, #0
    2124:	beq	21e0 <coda_grib_reopen+0x2170>
    2128:	tst	r0, #1
    212c:	bne	217c <coda_grib_reopen+0x210c>
    2130:	mov	r1, r0
    2134:	cmp	r0, #1
    2138:	bne	218c <coda_grib_reopen+0x211c>
    213c:	b	21e0 <coda_grib_reopen+0x2170>
    2140:	bl	0 <coda_NaN>
    2144:	ldr	r3, [sp, #176]	; 0xb0
    2148:	ldr	r6, [sp, #180]	; 0xb4
    214c:	vmov.f64	d9, d0
    2150:	b	21e0 <coda_grib_reopen+0x2170>
    2154:	rsb	r1, r0, #0
    2158:	ands	r2, r1, #3
    215c:	beq	21b4 <coda_grib_reopen+0x2144>
    2160:	mov	r1, r0
    2164:	vmul.f64	d9, d9, d12
    2168:	sub	r2, r2, #1
    216c:	add	r1, r1, #1
    2170:	tst	r2, #255	; 0xff
    2174:	bne	2164 <coda_grib_reopen+0x20f4>
    2178:	b	21b8 <coda_grib_reopen+0x2148>
    217c:	vdiv.f64	d9, d9, d12
    2180:	sub	r1, r0, #1
    2184:	cmp	r0, #1
    2188:	beq	21e0 <coda_grib_reopen+0x2170>
    218c:	vdiv.f64	d16, d9, d12
    2190:	sub	r0, r1, #2
    2194:	sxtb	r1, r0
    2198:	cmp	r1, #0
    219c:	vdiv.f64	d9, d16, d12
    21a0:	bgt	218c <coda_grib_reopen+0x211c>
    21a4:	b	21e0 <coda_grib_reopen+0x2170>
    21a8:	cmp	r2, #40	; 0x28
    21ac:	beq	1650 <coda_grib_reopen+0x15e0>
    21b0:	b	35b0 <coda_grib_reopen+0x3540>
    21b4:	mov	r1, r0
    21b8:	cmp	r0, #252	; 0xfc
    21bc:	bhi	21e0 <coda_grib_reopen+0x2170>
    21c0:	vmul.f64	d16, d9, d12
    21c4:	add	r0, r1, #4
    21c8:	sxtb	r1, r0
    21cc:	cmp	r1, #0
    21d0:	vmul.f64	d16, d16, d12
    21d4:	vmul.f64	d16, d16, d12
    21d8:	vmul.f64	d9, d16, d12
    21dc:	bmi	21c0 <coda_grib_reopen+0x2150>
    21e0:	rev	r0, sl
    21e4:	adds	r6, r6, #34	; 0x22
    21e8:	str	r4, [sp, #96]	; 0x60
    21ec:	str	r0, [sp, #88]	; 0x58
    21f0:	rev16	r0, r5
    21f4:	adc	r3, r3, #0
    21f8:	cmp	r4, #0
    21fc:	mov	r1, r6
    2200:	str	r0, [sp, #92]	; 0x5c
    2204:	mvn	r0, #0
    2208:	moveq	r1, r0
    220c:	str	r1, [sp, #64]	; 0x40
    2210:	mov	r1, r3
    2214:	moveq	r1, r0
    2218:	mov	r0, #4
    221c:	cmp	r7, #34	; 0x22
    2220:	str	r1, [sp, #60]	; 0x3c
    2224:	str	r0, [sp, #160]	; 0xa0
    2228:	bls	2240 <coda_grib_reopen+0x21d0>
    222c:	ldr	sl, [sp, #172]	; 0xac
    2230:	sub	r0, r7, #34	; 0x22
    2234:	adds	r6, r6, r0
    2238:	adc	r3, r3, #0
    223c:	b	2244 <coda_grib_reopen+0x21d4>
    2240:	ldr	sl, [sp, #172]	; 0xac
    2244:	mov	r5, #0
    2248:	ldr	r0, [sp, #188]	; 0xbc
    224c:	mov	r1, #4
    2250:	mov	r2, r6
    2254:	mov	r4, #0
    2258:	str	r5, [sp, #4]
    225c:	str	r6, [sp, #180]	; 0xb4
    2260:	str	r3, [sp, #176]	; 0xb0
    2264:	str	r1, [sp]
    2268:	sub	r1, fp, #144	; 0x90
    226c:	str	r1, [sp, #8]
    2270:	ldr	r0, [r0]
    2274:	bl	7798 <read_bytes>
    2278:	cmp	r0, #0
    227c:	bpl	e00 <coda_grib_reopen+0xd90>
    2280:	b	3708 <coda_grib_reopen+0x3698>
    2284:	ldr	r8, [sp, #180]	; 0xb4
    2288:	ldr	r0, [sp, #140]	; 0x8c
    228c:	mov	r7, #0
    2290:	sub	r6, fp, #144	; 0x90
    2294:	ands	r0, r0, #128	; 0x80
    2298:	bne	246c <coda_grib_reopen+0x23fc>
    229c:	sub	r0, sl, #1
    22a0:	cmp	r0, #106	; 0x6a
    22a4:	bhi	34fc <coda_grib_reopen+0x348c>
    22a8:	movw	r1, #1679	; 0x68f
    22ac:	str	r1, [sp, #180]	; 0xb4
    22b0:	add	r1, pc, #0
    22b4:	ldr	pc, [r1, r0, lsl #2]
    22b8:	.word	0x00002d5c
    22bc:	.word	0x00002ca8
    22c0:	.word	0x00002cb0
    22c4:	.word	0x00002cb8
    22c8:	.word	0x00002c68
    22cc:	.word	0x00002c68
    22d0:	.word	0x000034fc
    22d4:	.word	0x00002cc4
    22d8:	.word	0x000034fc
    22dc:	.word	0x000034fc
    22e0:	.word	0x000034fc
    22e4:	.word	0x000034fc
    22e8:	.word	0x000034fc
    22ec:	.word	0x000034fc
    22f0:	.word	0x000034fc
    22f4:	.word	0x000034fc
    22f8:	.word	0x000034fc
    22fc:	.word	0x000034fc
    2300:	.word	0x000034fc
    2304:	.word	0x000034fc
    2308:	.word	0x00002464
    230c:	.word	0x00002464
    2310:	.word	0x00002464
    2314:	.word	0x00002464
    2318:	.word	0x00002c70
    231c:	.word	0x00002c70
    2320:	.word	0x00002c78
    2324:	.word	0x00002c78
    2328:	.word	0x00002c80
    232c:	.word	0x00002c80
    2330:	.word	0x000034fc
    2334:	.word	0x000034fc
    2338:	.word	0x00002c88
    233c:	.word	0x00002c88
    2340:	.word	0x000034fc
    2344:	.word	0x000034fc
    2348:	.word	0x000034fc
    234c:	.word	0x000034fc
    2350:	.word	0x000034fc
    2354:	.word	0x000034fc
    2358:	.word	0x000034fc
    235c:	.word	0x000034fc
    2360:	.word	0x000034fc
    2364:	.word	0x000034fc
    2368:	.word	0x000034fc
    236c:	.word	0x000034fc
    2370:	.word	0x000034fc
    2374:	.word	0x000034fc
    2378:	.word	0x000034fc
    237c:	.word	0x00002ccc
    2380:	.word	0x000034fc
    2384:	.word	0x000034fc
    2388:	.word	0x00002cd4
    238c:	.word	0x000034fc
    2390:	.word	0x00002c90
    2394:	.word	0x00002c90
    2398:	.word	0x000034fc
    239c:	.word	0x000034fc
    23a0:	.word	0x000034fc
    23a4:	.word	0x000034fc
    23a8:	.word	0x00002c0c
    23ac:	.word	0x00002c0c
    23b0:	.word	0x00002c0c
    23b4:	.word	0x00002c0c
    23b8:	.word	0x000034fc
    23bc:	.word	0x000034fc
    23c0:	.word	0x000034fc
    23c4:	.word	0x000034fc
    23c8:	.word	0x000034fc
    23cc:	.word	0x000034fc
    23d0:	.word	0x000034fc
    23d4:	.word	0x000034fc
    23d8:	.word	0x000034fc
    23dc:	.word	0x000034fc
    23e0:	.word	0x00002c60
    23e4:	.word	0x00002c60
    23e8:	.word	0x00002c60
    23ec:	.word	0x000034fc
    23f0:	.word	0x000034fc
    23f4:	.word	0x000034fc
    23f8:	.word	0x000034fc
    23fc:	.word	0x000034fc
    2400:	.word	0x000034fc
    2404:	.word	0x000034fc
    2408:	.word	0x00002c98
    240c:	.word	0x00002c98
    2410:	.word	0x00002cdc
    2414:	.word	0x000034fc
    2418:	.word	0x000034fc
    241c:	.word	0x00002ce4
    2420:	.word	0x00002cec
    2424:	.word	0x00002cf4
    2428:	.word	0x00002d00
    242c:	.word	0x00002d0c
    2430:	.word	0x00002d14
    2434:	.word	0x00002d20
    2438:	.word	0x00002d28
    243c:	.word	0x000034fc
    2440:	.word	0x000034fc
    2444:	.word	0x00002ca0
    2448:	.word	0x00002d34
    244c:	.word	0x000034fc
    2450:	.word	0x00002d3c
    2454:	.word	0x00002d44
    2458:	.word	0x00002ca0
    245c:	.word	0x00002d4c
    2460:	.word	0x00002d54
    2464:	movw	r0, #1333	; 0x535
    2468:	b	2d58 <coda_grib_reopen+0x2ce8>
    246c:	ldr	r0, [sp, #188]	; 0xbc
    2470:	mov	r1, #6
    2474:	mov	r3, r4
    2478:	mov	r5, r2
    247c:	stm	sp, {r1, r7}
    2480:	str	r6, [sp, #8]
    2484:	ldr	r0, [r0]
    2488:	bl	7798 <read_bytes>
    248c:	ldr	sl, [sp, #172]	; 0xac
    2490:	cmp	r0, #0
    2494:	bmi	3708 <coda_grib_reopen+0x3698>
    2498:	ldrb	r6, [fp, #-139]	; 0xffffff75
    249c:	adds	r3, r5, #6
    24a0:	str	r5, [sp, #160]	; 0xa0
    24a4:	adc	r7, r4, #0
    24a8:	lsr	r0, r6, #1
    24ac:	orr	r0, r0, r6, lsl #7
    24b0:	uxtb	r0, r0
    24b4:	cmp	r0, #17
    24b8:	bhi	3520 <coda_grib_reopen+0x34b0>
    24bc:	movw	r2, #38053	; 0x94a5
    24c0:	mov	r1, #1
    24c4:	movt	r2, #2
    24c8:	tst	r2, r1, lsl r0
    24cc:	beq	3520 <coda_grib_reopen+0x34b0>
    24d0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    24d4:	mov	r1, #0
    24d8:	str	r7, [sp, #128]	; 0x80
    24dc:	str	r3, [sp, #180]	; 0xb4
    24e0:	str	r4, [sp, #144]	; 0x90
    24e4:	str	r0, [sp, #112]	; 0x70
    24e8:	ldrb	r0, [fp, #-143]	; 0xffffff71
    24ec:	str	r0, [sp, #108]	; 0x6c
    24f0:	ldrb	r0, [fp, #-142]	; 0xffffff72
    24f4:	str	r0, [sp, #104]	; 0x68
    24f8:	sub	r0, r6, #4
    24fc:	uxtb	r0, r0
    2500:	cmp	r0, #30
    2504:	bhi	2518 <coda_grib_reopen+0x24a8>
    2508:	movw	r2, #1025	; 0x401
    250c:	mov	r1, #1
    2510:	movt	r2, #16400	; 0x4010
    2514:	and	r1, r1, r2, lsr r0
    2518:	str	r1, [sp, #116]	; 0x74
    251c:	bl	0 <__aeabi_read_tp>
    2520:	ldr	sl, [pc, #4084]	; 351c <coda_grib_reopen+0x34ac>
    2524:	mov	r5, r0
    2528:	mov	r1, #0
    252c:	ldr	r0, [r0, sl]
    2530:	ldr	r0, [r0, #264]	; 0x108
    2534:	bl	0 <coda_mem_record_new>
    2538:	mov	r7, r0
    253c:	ldr	r0, [r5, sl]
    2540:	ldr	r4, [sp, #172]	; 0xac
    2544:	ldrb	r3, [fp, #-141]	; 0xffffff73
    2548:	mov	r1, #0
    254c:	ldr	r0, [r0, #132]	; 0x84
    2550:	mov	r2, r4
    2554:	str	r3, [sp, #176]	; 0xb0
    2558:	bl	0 <coda_mem_uint8_new>
    255c:	movw	r1, #0
    2560:	mov	r2, r0
    2564:	mov	r0, r7
    2568:	mov	r3, #0
    256c:	movt	r1, #0
    2570:	bl	0 <coda_mem_record_add_field>
    2574:	ldr	r0, [r5, sl]
    2578:	ldrb	r1, [fp, #-140]	; 0xffffff74
    257c:	mov	r2, r4
    2580:	mov	r3, r6
    2584:	ldr	r0, [r0, #136]	; 0x88
    2588:	str	r1, [sp, #120]	; 0x78
    258c:	mov	r1, #0
    2590:	bl	0 <coda_mem_uint8_new>
    2594:	movw	r1, #0
    2598:	mov	r2, r0
    259c:	mov	r0, r7
    25a0:	mov	r3, #0
    25a4:	str	r7, [sp, #132]	; 0x84
    25a8:	movt	r1, #0
    25ac:	bl	0 <coda_mem_record_add_field>
    25b0:	ldr	r0, [r4, #52]	; 0x34
    25b4:	ldr	r2, [sp, #180]	; 0xb4
    25b8:	ldr	r3, [sp, #128]	; 0x80
    25bc:	mov	r1, #26
    25c0:	sub	r6, fp, #144	; 0x90
    25c4:	str	r1, [sp]
    25c8:	mov	r1, #0
    25cc:	str	r6, [sp, #8]
    25d0:	str	r1, [sp, #4]
    25d4:	bl	7798 <read_bytes>
    25d8:	cmn	r0, #1
    25dc:	ble	3550 <coda_grib_reopen+0x34e0>
    25e0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    25e4:	ldrb	r1, [fp, #-143]	; 0xffffff71
    25e8:	ldrb	r2, [fp, #-142]	; 0xffffff72
    25ec:	ldrb	r3, [fp, #-141]	; 0xffffff73
    25f0:	orr	r5, r3, r2, lsl #8
    25f4:	orr	r3, r1, r0, lsl #8
    25f8:	movw	r0, #65535	; 0xffff
    25fc:	cmp	r3, r0
    2600:	cmpeq	r5, r0
    2604:	beq	3560 <coda_grib_reopen+0x34f0>
    2608:	ldr	r0, [sp, #112]	; 0x70
    260c:	ldr	r1, [sp, #108]	; 0x6c
    2610:	orr	r0, r1, r0, lsl #8
    2614:	ldr	r1, [sp, #104]	; 0x68
    2618:	orr	r0, r1, r0, lsl #8
    261c:	str	r0, [sp, #112]	; 0x70
    2620:	bl	0 <__aeabi_read_tp>
    2624:	ldr	r4, [pc, #3824]	; 351c <coda_grib_reopen+0x34ac>
    2628:	mov	r7, r0
    262c:	ldr	sl, [sp, #172]	; 0xac
    2630:	mov	r1, #0
    2634:	str	r3, [sp, #124]	; 0x7c
    2638:	ldr	r0, [r0, r4]
    263c:	mov	r2, sl
    2640:	ldr	r0, [r0, #168]	; 0xa8
    2644:	bl	0 <coda_mem_uint16_new>
    2648:	ldr	r4, [sp, #132]	; 0x84
    264c:	movw	r1, #0
    2650:	mov	r2, r0
    2654:	mov	r3, #0
    2658:	str	r5, [sp, #128]	; 0x80
    265c:	movt	r1, #0
    2660:	mov	r0, r4
    2664:	bl	0 <coda_mem_record_add_field>
    2668:	ldr	r5, [pc, #3756]	; 351c <coda_grib_reopen+0x34ac>
    266c:	ldr	r3, [sp, #128]	; 0x80
    2670:	mov	r1, #0
    2674:	mov	r2, sl
    2678:	ldr	r0, [r7, r5]
    267c:	ldr	r0, [r0, #172]	; 0xac
    2680:	bl	0 <coda_mem_uint16_new>
    2684:	movw	r1, #0
    2688:	mov	r2, r0
    268c:	mov	r0, r4
    2690:	mov	r3, #0
    2694:	movt	r1, #0
    2698:	bl	0 <coda_mem_record_add_field>
    269c:	ldrb	r0, [fp, #-140]	; 0xffffff74
    26a0:	ldrb	r1, [fp, #-139]	; 0xffffff75
    26a4:	ldrb	r2, [fp, #-138]	; 0xffffff76
    26a8:	mvn	r3, #0
    26ac:	bfi	r1, r0, #8, #7
    26b0:	tst	r0, #128	; 0x80
    26b4:	movweq	r3, #1
    26b8:	orr	r0, r2, r1, lsl #8
    26bc:	mov	r1, #0
    26c0:	mov	r2, sl
    26c4:	mul	r3, r0, r3
    26c8:	ldr	r0, [r7, r5]
    26cc:	ldr	r0, [r0, #184]	; 0xb8
    26d0:	bl	0 <coda_mem_int32_new>
    26d4:	movw	r1, #0
    26d8:	mov	r2, r0
    26dc:	mov	r0, r4
    26e0:	mov	r3, #0
    26e4:	movt	r1, #0
    26e8:	bl	0 <coda_mem_record_add_field>
    26ec:	ldrb	r0, [fp, #-137]	; 0xffffff77
    26f0:	ldrb	r1, [fp, #-136]	; 0xffffff78
    26f4:	ldrb	r2, [fp, #-135]	; 0xffffff79
    26f8:	mvn	r3, #0
    26fc:	bfi	r1, r0, #8, #7
    2700:	tst	r0, #128	; 0x80
    2704:	movweq	r3, #1
    2708:	orr	r0, r2, r1, lsl #8
    270c:	mov	r1, #0
    2710:	mov	r2, sl
    2714:	mul	r3, r0, r3
    2718:	ldr	r0, [r7, r5]
    271c:	ldr	r0, [r0, #188]	; 0xbc
    2720:	bl	0 <coda_mem_int32_new>
    2724:	movw	r1, #0
    2728:	mov	r2, r0
    272c:	mov	r0, r4
    2730:	mov	r3, #0
    2734:	movt	r1, #0
    2738:	bl	0 <coda_mem_record_add_field>
    273c:	ldr	r0, [r7, r5]
    2740:	ldrb	r3, [fp, #-134]	; 0xffffff7a
    2744:	mov	r1, #0
    2748:	mov	r2, sl
    274c:	ldr	r0, [r0, #192]	; 0xc0
    2750:	bl	0 <coda_mem_uint8_new>
    2754:	movw	r1, #0
    2758:	mov	r2, r0
    275c:	mov	r0, r4
    2760:	mov	r3, #0
    2764:	movt	r1, #0
    2768:	bl	0 <coda_mem_record_add_field>
    276c:	ldrb	r0, [fp, #-133]	; 0xffffff7b
    2770:	ldrb	r1, [fp, #-132]	; 0xffffff7c
    2774:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    2778:	mvn	r3, #0
    277c:	bfi	r1, r0, #8, #7
    2780:	tst	r0, #128	; 0x80
    2784:	movweq	r3, #1
    2788:	orr	r0, r2, r1, lsl #8
    278c:	mov	r1, #0
    2790:	mov	r2, sl
    2794:	mul	r3, r0, r3
    2798:	ldr	r0, [r7, r5]
    279c:	ldr	r0, [r0, #196]	; 0xc4
    27a0:	bl	0 <coda_mem_int32_new>
    27a4:	movw	r1, #0
    27a8:	mov	r2, r0
    27ac:	mov	r0, r4
    27b0:	mov	r3, #0
    27b4:	movt	r1, #0
    27b8:	bl	0 <coda_mem_record_add_field>
    27bc:	ldrb	r0, [fp, #-130]	; 0xffffff7e
    27c0:	ldrb	r1, [fp, #-129]	; 0xffffff7f
    27c4:	ldrb	r2, [fp, #-128]	; 0xffffff80
    27c8:	mvn	r3, #0
    27cc:	bfi	r1, r0, #8, #7
    27d0:	tst	r0, #128	; 0x80
    27d4:	movweq	r3, #1
    27d8:	orr	r0, r2, r1, lsl #8
    27dc:	mov	r1, #0
    27e0:	mov	r2, sl
    27e4:	mul	r3, r0, r3
    27e8:	ldr	r0, [r7, r5]
    27ec:	ldr	r0, [r0, #200]	; 0xc8
    27f0:	bl	0 <coda_mem_int32_new>
    27f4:	movw	r1, #0
    27f8:	mov	r2, r0
    27fc:	mov	r0, r4
    2800:	mov	r3, #0
    2804:	movt	r1, #0
    2808:	bl	0 <coda_mem_record_add_field>
    280c:	ldr	r0, [r7, r5]
    2810:	ldrh	r1, [fp, #-127]	; 0xffffff81
    2814:	mov	r2, sl
    2818:	ldr	r0, [r0, #204]	; 0xcc
    281c:	rev16	r3, r1
    2820:	mov	r1, #0
    2824:	bl	0 <coda_mem_uint16_new>
    2828:	movw	r1, #0
    282c:	mov	r2, r0
    2830:	mov	r0, r4
    2834:	mov	r3, #0
    2838:	movt	r1, #0
    283c:	bl	0 <coda_mem_record_add_field>
    2840:	ldr	r1, [pc, #3924]	; 379c <coda_grib_reopen+0x372c>
    2844:	ldr	r5, [sp, #116]	; 0x74
    2848:	mov	r0, #208	; 0xd0
    284c:	mov	r2, sl
    2850:	ldr	r1, [r7, r1]
    2854:	cmp	r5, #0
    2858:	movwne	r0, #212	; 0xd4
    285c:	ldr	r0, [r1, r0]
    2860:	ldrh	r1, [fp, #-125]	; 0xffffff83
    2864:	rev16	r3, r1
    2868:	mov	r1, #0
    286c:	bl	0 <coda_mem_uint16_new>
    2870:	mov	r2, r0
    2874:	movw	r0, #0
    2878:	movw	r1, #0
    287c:	cmp	r5, #0
    2880:	mov	r3, #0
    2884:	movt	r0, #0
    2888:	movt	r1, #0
    288c:	movne	r1, r0
    2890:	mov	r0, r4
    2894:	bl	0 <coda_mem_record_add_field>
    2898:	ldr	r0, [pc, #3836]	; 379c <coda_grib_reopen+0x372c>
    289c:	ldrb	r3, [fp, #-123]	; 0xffffff85
    28a0:	mov	r1, #0
    28a4:	mov	r2, sl
    28a8:	ldr	r0, [r7, r0]
    28ac:	ldr	r0, [r0, #216]	; 0xd8
    28b0:	bl	0 <coda_mem_uint8_new>
    28b4:	movw	r1, #0
    28b8:	ldr	r5, [sp, #128]	; 0x80
    28bc:	mov	r2, r0
    28c0:	mov	r0, r4
    28c4:	mov	r3, #0
    28c8:	movt	r1, #0
    28cc:	bl	0 <coda_mem_record_add_field>
    28d0:	ldr	r2, [sp, #124]	; 0x7c
    28d4:	movw	r3, #65535	; 0xffff
    28d8:	ldr	r4, [sp, #144]	; 0x90
    28dc:	subs	r0, r5, r3
    28e0:	mulne	r0, r5, r2
    28e4:	subs	r1, r2, r3
    28e8:	movne	r1, r0
    28ec:	ldr	r0, [sp, #120]	; 0x78
    28f0:	str	r1, [sp, #180]	; 0xb4
    28f4:	ldr	r1, [sp, #160]	; 0xa0
    28f8:	adds	r1, r1, #32
    28fc:	adc	r4, r4, #0
    2900:	cmp	r0, #255	; 0xff
    2904:	beq	2a74 <coda_grib_reopen+0x2a04>
    2908:	sub	r2, r0, #1
    290c:	mvn	r0, #31
    2910:	uxtab	r0, r0, r2
    2914:	adds	r1, r1, r0
    2918:	adc	r4, r4, r0, asr #31
    291c:	ldr	r0, [sp, #176]	; 0xb0
    2920:	str	r1, [sp, #160]	; 0xa0
    2924:	cmp	r0, #0
    2928:	beq	2ae0 <coda_grib_reopen+0x2a70>
    292c:	str	r2, [sp, #120]	; 0x78
    2930:	bl	0 <__aeabi_read_tp>
    2934:	ldr	r1, [pc, #3680]	; 379c <coda_grib_reopen+0x372c>
    2938:	mov	r5, #0
    293c:	ldr	r0, [r0, r1]
    2940:	mov	r1, #0
    2944:	ldr	r0, [r0, #224]	; 0xe0
    2948:	bl	0 <coda_mem_array_new>
    294c:	ldr	r2, [sp, #160]	; 0xa0
    2950:	str	r0, [sp, #144]	; 0x90
    2954:	b	29a0 <coda_grib_reopen+0x2930>
    2958:	bl	0 <coda_PlusInf>
    295c:	vcvt.f32.f64	s0, d0
    2960:	ldr	r2, [sp, #172]	; 0xac
    2964:	mov	r0, r6
    2968:	mov	r1, #0
    296c:	bl	0 <coda_mem_float_new>
    2970:	mov	r1, r0
    2974:	ldr	r0, [sp, #144]	; 0x90
    2978:	bl	0 <coda_mem_array_add_element>
    297c:	ldr	r0, [sp, #176]	; 0xb0
    2980:	mov	r2, sl
    2984:	adds	r2, sl, #4
    2988:	add	r5, r5, #1
    298c:	mov	r4, r7
    2990:	sub	r6, fp, #144	; 0x90
    2994:	adc	r4, r7, #0
    2998:	cmp	r5, r0
    299c:	beq	2ab8 <coda_grib_reopen+0x2a48>
    29a0:	ldr	r0, [sp, #188]	; 0xbc
    29a4:	mov	r1, #4
    29a8:	mov	r3, r4
    29ac:	mov	sl, r2
    29b0:	mov	r7, r4
    29b4:	str	r1, [sp]
    29b8:	mov	r1, #0
    29bc:	stmib	sp, {r1, r6}
    29c0:	ldr	r0, [r0]
    29c4:	bl	7798 <read_bytes>
    29c8:	cmp	r0, #0
    29cc:	bmi	329c <coda_grib_reopen+0x322c>
    29d0:	ldrb	r0, [fp, #-143]	; 0xffffff71
    29d4:	ldrb	r1, [fp, #-142]	; 0xffffff72
    29d8:	ldrb	r3, [fp, #-141]	; 0xffffff73
    29dc:	ldrb	r2, [fp, #-144]	; 0xffffff70
    29e0:	orr	r0, r1, r0, lsl #8
    29e4:	orr	r1, r3, r0, lsl #8
    29e8:	bl	0 <__aeabi_read_tp>
    29ec:	ldr	r3, [pc, #3496]	; 379c <coda_grib_reopen+0x372c>
    29f0:	vmov.f32	s0, s22
    29f4:	cmp	r1, #0
    29f8:	ldr	r0, [r0, r3]
    29fc:	ldr	r6, [r0, #220]	; 0xdc
    2a00:	beq	2960 <coda_grib_reopen+0x28f0>
    2a04:	mov	r0, #508	; 0x1fc
    2a08:	mov	r3, #0
    2a0c:	and	r0, r0, r2, lsl #2
    2a10:	cmp	r3, r1, lsr #23
    2a14:	sub	r0, r0, #130	; 0x82
    2a18:	bne	2a2c <coda_grib_reopen+0x29bc>
    2a1c:	lsl	r1, r1, #1
    2a20:	sub	r0, r0, #1
    2a24:	cmp	r1, #8388608	; 0x800000
    2a28:	bcc	2a1c <coda_grib_reopen+0x29ac>
    2a2c:	cmp	r0, #255	; 0xff
    2a30:	bge	2958 <coda_grib_reopen+0x28e8>
    2a34:	lsr	r2, r2, #7
    2a38:	cmp	r0, #0
    2a3c:	bgt	2a54 <coda_grib_reopen+0x29e4>
    2a40:	rsb	r3, r0, #0
    2a44:	cmn	r0, #24
    2a48:	mov	r0, #0
    2a4c:	lsr	r1, r1, r3
    2a50:	movwlt	r1, #0
    2a54:	movw	r3, #65535	; 0xffff
    2a58:	lsl	r0, r0, #23
    2a5c:	movt	r3, #127	; 0x7f
    2a60:	orr	r0, r0, r2, lsl #31
    2a64:	and	r1, r1, r3
    2a68:	orr	r0, r0, r1
    2a6c:	vmov	s0, r0
    2a70:	b	2960 <coda_grib_reopen+0x28f0>
    2a74:	cmp	r2, r3
    2a78:	cmpne	r5, r3
    2a7c:	beq	36c4 <coda_grib_reopen+0x3654>
    2a80:	ldr	r0, [sp, #112]	; 0x70
    2a84:	cmp	r0, #33	; 0x21
    2a88:	bcc	2a98 <coda_grib_reopen+0x2a28>
    2a8c:	sub	r0, r0, #32
    2a90:	adds	r1, r1, r0
    2a94:	adc	r4, r4, r0, asr #31
    2a98:	str	r1, [sp, #160]	; 0xa0
    2a9c:	mov	r7, #0
    2aa0:	b	2c40 <coda_grib_reopen+0x2bd0>
    2aa4:	ldr	r0, [sp, #160]	; 0xa0
    2aa8:	uxtb	r0, r0
    2aac:	cmp	r0, #7
    2ab0:	beq	311c <coda_grib_reopen+0x30ac>
    2ab4:	b	36dc <coda_grib_reopen+0x366c>
    2ab8:	str	r2, [sp, #160]	; 0xa0
    2abc:	ldr	r0, [sp, #132]	; 0x84
    2ac0:	ldr	r2, [sp, #144]	; 0x90
    2ac4:	movw	r1, #0
    2ac8:	mov	r3, #0
    2acc:	movt	r1, #0
    2ad0:	bl	0 <coda_mem_record_add_field>
    2ad4:	ldr	r5, [sp, #128]	; 0x80
    2ad8:	ldr	r2, [sp, #120]	; 0x78
    2adc:	movw	r3, #65535	; 0xffff
    2ae0:	ldr	r7, [sp, #124]	; 0x7c
    2ae4:	sub	r1, r5, r3
    2ae8:	uxtb	r0, r2
    2aec:	clz	r1, r1
    2af0:	lsr	r1, r1, #5
    2af4:	sub	r2, r7, r3
    2af8:	clz	r2, r2
    2afc:	lsr	r2, r2, #5
    2b00:	orr	r1, r2, r1
    2b04:	ldr	r2, [sp, #176]	; 0xb0
    2b08:	add	r0, r0, r2, lsl #2
    2b0c:	ldr	r2, [sp, #112]	; 0x70
    2b10:	cmp	r2, r0
    2b14:	bls	2bfc <coda_grib_reopen+0x2b8c>
    2b18:	cmp	r7, r3
    2b1c:	movne	r5, r7
    2b20:	cmp	r1, #0
    2b24:	beq	3734 <coda_grib_reopen+0x36c4>
    2b28:	ldr	sl, [sp, #172]	; 0xac
    2b2c:	sub	r2, r2, r0
    2b30:	cmp	r2, r5, lsl #1
    2b34:	bne	3760 <coda_grib_reopen+0x36f0>
    2b38:	bl	0 <__aeabi_read_tp>
    2b3c:	ldr	r1, [pc, #3160]	; 379c <coda_grib_reopen+0x372c>
    2b40:	ldr	r0, [r0, r1]
    2b44:	mov	r1, #0
    2b48:	ldr	r0, [r0, #232]	; 0xe8
    2b4c:	bl	0 <coda_mem_array_new>
    2b50:	str	r0, [sp, #176]	; 0xb0
    2b54:	mov	r0, #0
    2b58:	cmp	r5, #0
    2b5c:	beq	2c14 <coda_grib_reopen+0x2ba4>
    2b60:	ldr	r6, [sp, #160]	; 0xa0
    2b64:	str	r0, [sp, #180]	; 0xb4
    2b68:	ldr	r0, [sp, #188]	; 0xbc
    2b6c:	mov	r1, #2
    2b70:	mov	r2, r6
    2b74:	mov	r3, r4
    2b78:	str	r1, [sp]
    2b7c:	mov	r1, #0
    2b80:	str	r1, [sp, #4]
    2b84:	sub	r1, fp, #144	; 0x90
    2b88:	str	r1, [sp, #8]
    2b8c:	ldr	r0, [r0]
    2b90:	bl	7798 <read_bytes>
    2b94:	cmn	r0, #1
    2b98:	ble	3358 <coda_grib_reopen+0x32e8>
    2b9c:	bl	0 <__aeabi_read_tp>
    2ba0:	ldr	r1, [pc, #3060]	; 379c <coda_grib_reopen+0x372c>
    2ba4:	ldrb	r2, [fp, #-143]	; 0xffffff71
    2ba8:	mov	r7, r5
    2bac:	ldr	r0, [r0, r1]
    2bb0:	ldrb	r1, [fp, #-144]	; 0xffffff70
    2bb4:	ldr	r0, [r0, #228]	; 0xe4
    2bb8:	orr	r5, r2, r1, lsl #8
    2bbc:	mov	r1, #0
    2bc0:	mov	r2, sl
    2bc4:	mov	r3, r5
    2bc8:	bl	0 <coda_mem_uint16_new>
    2bcc:	mov	r1, r0
    2bd0:	ldr	r0, [sp, #176]	; 0xb0
    2bd4:	bl	0 <coda_mem_array_add_element>
    2bd8:	ldr	r0, [sp, #180]	; 0xb4
    2bdc:	adds	r6, r6, #2
    2be0:	adc	r4, r4, #0
    2be4:	add	r0, r5, r0
    2be8:	mov	r5, r7
    2bec:	subs	r5, r7, #1
    2bf0:	str	r0, [sp, #180]	; 0xb4
    2bf4:	bne	2b68 <coda_grib_reopen+0x2af8>
    2bf8:	b	2c1c <coda_grib_reopen+0x2bac>
    2bfc:	cmp	r1, #0
    2c00:	mov	r7, #0
    2c04:	beq	2c40 <coda_grib_reopen+0x2bd0>
    2c08:	b	3748 <coda_grib_reopen+0x36d8>
    2c0c:	mov	r0, #4096	; 0x1000
    2c10:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c14:	ldr	r6, [sp, #160]	; 0xa0
    2c18:	str	r0, [sp, #180]	; 0xb4
    2c1c:	ldr	r0, [sp, #132]	; 0x84
    2c20:	ldr	r2, [sp, #176]	; 0xb0
    2c24:	movw	r1, #0
    2c28:	mov	r3, #0
    2c2c:	str	r6, [sp, #160]	; 0xa0
    2c30:	movt	r1, #0
    2c34:	bl	0 <coda_mem_record_add_field>
    2c38:	mov	r7, #0
    2c3c:	sub	r6, fp, #144	; 0x90
    2c40:	ldr	r0, [sp, #156]	; 0x9c
    2c44:	ldr	r2, [sp, #132]	; 0x84
    2c48:	movw	r1, #0
    2c4c:	mov	r3, #0
    2c50:	movt	r1, #0
    2c54:	bl	0 <coda_mem_record_add_field>
    2c58:	ldr	r2, [sp, #160]	; 0xa0
    2c5c:	b	2d5c <coda_grib_reopen+0x2cec>
    2c60:	movw	r0, #12321	; 0x3021
    2c64:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c68:	movw	r0, #2385	; 0x951
    2c6c:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c70:	movw	r0, #1297	; 0x511
    2c74:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c78:	movw	r0, #4225	; 0x1081
    2c7c:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c80:	movw	r0, #5365	; 0x14f5
    2c84:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c88:	movw	r0, #8326	; 0x2086
    2c8c:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c90:	movw	r0, #6177	; 0x1821
    2c94:	b	2d58 <coda_grib_reopen+0x2ce8>
    2c98:	movw	r0, #32400	; 0x7e90
    2c9c:	b	2d58 <coda_grib_reopen+0x2ce8>
    2ca0:	movw	r0, #6889	; 0x1ae9
    2ca4:	b	2d58 <coda_grib_reopen+0x2ce8>
    2ca8:	movw	r0, #10512	; 0x2910
    2cac:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cb0:	movw	r0, #65160	; 0xfe88
    2cb4:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cb8:	movw	r0, #63312	; 0xf750
    2cbc:	movt	r0, #3
    2cc0:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cc4:	movw	r0, #5104	; 0x13f0
    2cc8:	b	2d58 <coda_grib_reopen+0x2ce8>
    2ccc:	mov	r0, #964	; 0x3c4
    2cd0:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cd4:	movw	r0, #5967	; 0x174f
    2cd8:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cdc:	movw	r0, #5022	; 0x139e
    2ce0:	b	2d58 <coda_grib_reopen+0x2ce8>
    2ce4:	movw	r0, #12902	; 0x3266
    2ce8:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cec:	movw	r0, #25803	; 0x64cb
    2cf0:	b	2d58 <coda_grib_reopen+0x2ce8>
    2cf4:	movw	r0, #15677	; 0x3d3d
    2cf8:	movt	r0, #1
    2cfc:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d00:	movw	r0, #31353	; 0x7a79
    2d04:	movt	r0, #2
    2d08:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d0c:	movw	r0, #48916	; 0xbf14
    2d10:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d14:	movw	r0, #32295	; 0x7e27
    2d18:	movt	r0, #1
    2d1c:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d20:	movw	r0, #41630	; 0xa29e
    2d24:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d28:	movw	r0, #17723	; 0x453b
    2d2c:	movt	r0, #1
    2d30:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d34:	movw	r0, #10283	; 0x282b
    2d38:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d3c:	movw	r0, #3640	; 0xe38
    2d40:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d44:	movw	r0, #16170	; 0x3f2a
    2d48:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d4c:	movw	r0, #19305	; 0x4b69
    2d50:	b	2d58 <coda_grib_reopen+0x2ce8>
    2d54:	movw	r0, #11040	; 0x2b20
    2d58:	str	r0, [sp, #180]	; 0xb4
    2d5c:	ldr	r0, [sp, #140]	; 0x8c
    2d60:	mov	r5, #0
    2d64:	ands	r0, r0, #64	; 0x40
    2d68:	bne	2d74 <coda_grib_reopen+0x2d04>
    2d6c:	ldr	sl, [sp, #172]	; 0xac
    2d70:	b	2e40 <coda_grib_reopen+0x2dd0>
    2d74:	ldr	r0, [sp, #188]	; 0xbc
    2d78:	mov	r1, #6
    2d7c:	mov	r3, r4
    2d80:	stm	sp, {r1, r7}
    2d84:	str	r6, [sp, #8]
    2d88:	mov	r7, r2
    2d8c:	ldr	r0, [r0]
    2d90:	bl	7798 <read_bytes>
    2d94:	ldr	sl, [sp, #172]	; 0xac
    2d98:	cmp	r0, #0
    2d9c:	bmi	3708 <coda_grib_reopen+0x3698>
    2da0:	ldrb	r0, [fp, #-140]	; 0xffffff74
    2da4:	ldrb	r1, [fp, #-139]	; 0xffffff75
    2da8:	orr	r0, r1, r0, lsl #8
    2dac:	cmp	r0, #0
    2db0:	bne	357c <coda_grib_reopen+0x350c>
    2db4:	ldrb	r0, [fp, #-144]	; 0xffffff70
    2db8:	ldrb	r1, [fp, #-143]	; 0xffffff71
    2dbc:	ldrb	r2, [fp, #-142]	; 0xffffff72
    2dc0:	orr	r0, r1, r0, lsl #8
    2dc4:	ldr	r1, [sp, #180]	; 0xb4
    2dc8:	orr	r6, r2, r0, lsl #8
    2dcc:	mov	r0, #1
    2dd0:	tst	r1, #7
    2dd4:	asr	r3, r1, #3
    2dd8:	sub	r5, r6, #6
    2ddc:	addne	r3, r0, r1, asr #3
    2de0:	cmp	r5, r3
    2de4:	blt	3594 <coda_grib_reopen+0x3524>
    2de8:	mov	r0, r5
    2dec:	bl	0 <malloc>
    2df0:	cmp	r0, #0
    2df4:	beq	35c4 <coda_grib_reopen+0x3554>
    2df8:	mov	r2, r0
    2dfc:	ldr	r0, [sp, #188]	; 0xbc
    2e00:	asr	r1, r5, #31
    2e04:	str	r5, [sp]
    2e08:	mov	r5, r2
    2e0c:	str	r2, [sp, #8]
    2e10:	adds	r2, r7, #6
    2e14:	str	r1, [sp, #4]
    2e18:	adc	r3, r4, #0
    2e1c:	ldr	r0, [r0]
    2e20:	bl	7798 <read_bytes>
    2e24:	cmn	r0, #1
    2e28:	ble	3374 <coda_grib_reopen+0x3304>
    2e2c:	adds	r7, r7, r6
    2e30:	sub	r6, fp, #144	; 0x90
    2e34:	mov	r2, r7
    2e38:	adc	r4, r4, #0
    2e3c:	mov	r7, #0
    2e40:	ldr	r0, [sp, #188]	; 0xbc
    2e44:	mov	r1, #11
    2e48:	mov	r3, r4
    2e4c:	str	r2, [sp, #160]	; 0xa0
    2e50:	str	r4, [sp, #144]	; 0x90
    2e54:	stm	sp, {r1, r7}
    2e58:	str	r6, [sp, #8]
    2e5c:	ldr	r0, [r0]
    2e60:	bl	7798 <read_bytes>
    2e64:	cmn	r0, #1
    2e68:	ble	336c <coda_grib_reopen+0x32fc>
    2e6c:	ldrb	r0, [fp, #-141]	; 0xffffff73
    2e70:	tst	r0, #128	; 0x80
    2e74:	bne	3380 <coda_grib_reopen+0x3310>
    2e78:	tst	r0, #64	; 0x40
    2e7c:	bne	33b0 <coda_grib_reopen+0x3340>
    2e80:	tst	r0, #16
    2e84:	bne	33d8 <coda_grib_reopen+0x3368>
    2e88:	ldrb	r0, [fp, #-137]	; 0xffffff77
    2e8c:	ldrb	r1, [fp, #-136]	; 0xffffff78
    2e90:	ldrb	r6, [fp, #-140]	; 0xffffff74
    2e94:	str	r5, [sp, #176]	; 0xb0
    2e98:	ldrb	ip, [fp, #-144]	; 0xffffff70
    2e9c:	ldrb	lr, [fp, #-143]	; 0xffffff71
    2ea0:	ldrb	r4, [fp, #-142]	; 0xffffff72
    2ea4:	ldrb	r5, [fp, #-139]	; 0xffffff75
    2ea8:	vmov.f32	s16, s22
    2eac:	mvn	sl, #0
    2eb0:	orr	r0, r1, r0, lsl #8
    2eb4:	ldrb	r1, [fp, #-135]	; 0xffffff79
    2eb8:	tst	r6, #128	; 0x80
    2ebc:	movweq	sl, #1
    2ec0:	orr	r0, r1, r0, lsl #8
    2ec4:	cmp	r0, #0
    2ec8:	beq	2f4c <coda_grib_reopen+0x2edc>
    2ecc:	ldrb	r2, [fp, #-138]	; 0xffffff76
    2ed0:	mov	r1, #508	; 0x1fc
    2ed4:	cmp	r7, r0, lsr #23
    2ed8:	and	r1, r1, r2, lsl #2
    2edc:	sub	r1, r1, #130	; 0x82
    2ee0:	bne	2ef4 <coda_grib_reopen+0x2e84>
    2ee4:	lsl	r0, r0, #1
    2ee8:	sub	r1, r1, #1
    2eec:	cmp	r0, #8388608	; 0x800000
    2ef0:	bcc	2ee4 <coda_grib_reopen+0x2e74>
    2ef4:	cmp	r1, #255	; 0xff
    2ef8:	blt	2f18 <coda_grib_reopen+0x2ea8>
    2efc:	mov	r7, ip
    2f00:	str	lr, [sp, #140]	; 0x8c
    2f04:	bl	0 <coda_PlusInf>
    2f08:	ldr	lr, [sp, #140]	; 0x8c
    2f0c:	mov	ip, r7
    2f10:	vcvt.f32.f64	s16, d0
    2f14:	b	2f4c <coda_grib_reopen+0x2edc>
    2f18:	lsr	r2, r2, #7
    2f1c:	cmp	r1, #0
    2f20:	bgt	2f38 <coda_grib_reopen+0x2ec8>
    2f24:	rsb	r3, r1, #0
    2f28:	cmn	r1, #24
    2f2c:	mov	r1, #0
    2f30:	lsr	r0, r0, r3
    2f34:	movwlt	r0, #0
    2f38:	lsl	r1, r1, #23
    2f3c:	bfc	r0, #23, #9
    2f40:	orr	r1, r1, r2, lsl #31
    2f44:	orr	r0, r1, r0
    2f48:	vmov	s16, r0
    2f4c:	ldrb	r7, [fp, #-134]	; 0xffffff7a
    2f50:	cmp	r7, #64	; 0x40
    2f54:	bcs	3400 <coda_grib_reopen+0x3390>
    2f58:	orr	r0, lr, ip, lsl #8
    2f5c:	bfi	r5, r6, #8, #7
    2f60:	orr	r0, r4, r0, lsl #8
    2f64:	mul	sl, sl, r5
    2f68:	str	r0, [sp, #140]	; 0x8c
    2f6c:	bl	0 <__aeabi_read_tp>
    2f70:	mov	r5, r0
    2f74:	ldr	r0, [pc, #2080]	; 379c <coda_grib_reopen+0x372c>
    2f78:	mov	r1, #0
    2f7c:	mov	r4, r0
    2f80:	ldr	r0, [r5, r0]
    2f84:	ldr	r0, [r0, #268]	; 0x10c
    2f88:	bl	0 <coda_mem_record_new>
    2f8c:	mov	r6, r0
    2f90:	ldr	r0, [r5, r4]
    2f94:	ldr	r4, [sp, #172]	; 0xac
    2f98:	mov	r1, #0
    2f9c:	mov	r3, r7
    2fa0:	ldr	r0, [r0, #248]	; 0xf8
    2fa4:	mov	r2, r4
    2fa8:	bl	0 <coda_mem_uint8_new>
    2fac:	movw	r1, #0
    2fb0:	mov	r2, r0
    2fb4:	mov	r0, r6
    2fb8:	mov	r3, #0
    2fbc:	movt	r1, #0
    2fc0:	bl	0 <coda_mem_record_add_field>
    2fc4:	ldr	r0, [pc, #2000]	; 379c <coda_grib_reopen+0x372c>
    2fc8:	sxth	sl, sl
    2fcc:	mov	r1, #0
    2fd0:	mov	r2, r4
    2fd4:	mov	r3, sl
    2fd8:	ldr	r0, [r5, r0]
    2fdc:	ldr	r0, [r0, #252]	; 0xfc
    2fe0:	bl	0 <coda_mem_int16_new>
    2fe4:	movw	r1, #0
    2fe8:	mov	r2, r0
    2fec:	mov	r0, r6
    2ff0:	mov	r3, #0
    2ff4:	movt	r1, #0
    2ff8:	bl	0 <coda_mem_record_add_field>
    2ffc:	ldr	r0, [pc, #1944]	; 379c <coda_grib_reopen+0x372c>
    3000:	mov	r2, r4
    3004:	ldr	r4, [sp, #176]	; 0xb0
    3008:	vmov.f32	s0, s16
    300c:	mov	r1, #0
    3010:	ldr	r0, [r5, r0]
    3014:	ldr	r0, [r0, #256]	; 0x100
    3018:	bl	0 <coda_mem_float_new>
    301c:	movw	r1, #0
    3020:	mov	r2, r0
    3024:	mov	r0, r6
    3028:	mov	r3, #0
    302c:	movt	r1, #0
    3030:	bl	0 <coda_mem_record_add_field>
    3034:	ldr	r0, [pc, #1888]	; 379c <coda_grib_reopen+0x372c>
    3038:	ldr	r1, [sp, #136]	; 0x88
    303c:	vmov.f32	s0, s16
    3040:	ldr	r0, [r5, r0]
    3044:	ldr	r0, [r0, #260]	; 0x104
    3048:	str	r7, [sp]
    304c:	stmib	sp, {r1, sl}
    3050:	ldr	r1, [sp, #160]	; 0xa0
    3054:	str	r4, [sp, #12]
    3058:	adds	sl, r1, #11
    305c:	ldr	r1, [sp, #144]	; 0x90
    3060:	mov	r2, sl
    3064:	adc	r7, r1, #0
    3068:	ldr	r1, [sp, #180]	; 0xb4
    306c:	mov	r3, r7
    3070:	bl	0 <coda_grib_value_array_simple_packing_new>
    3074:	mov	r5, r0
    3078:	cmp	r4, #0
    307c:	beq	3088 <coda_grib_reopen+0x3018>
    3080:	mov	r0, r4
    3084:	bl	0 <free>
    3088:	movw	r1, #0
    308c:	mov	r0, r6
    3090:	mov	r2, r5
    3094:	mov	r3, #0
    3098:	movt	r1, #0
    309c:	bl	0 <coda_mem_record_add_field>
    30a0:	ldr	r0, [sp, #156]	; 0x9c
    30a4:	movw	r1, #0
    30a8:	mov	r2, r6
    30ac:	mov	r3, #0
    30b0:	movt	r1, #0
    30b4:	bl	0 <coda_mem_record_add_field>
    30b8:	mov	r1, #4
    30bc:	ldr	r0, [sp, #188]	; 0xbc
    30c0:	str	r1, [sp]
    30c4:	mov	r1, #0
    30c8:	str	r1, [sp, #4]
    30cc:	sub	r1, fp, #144	; 0x90
    30d0:	str	r1, [sp, #8]
    30d4:	ldr	r1, [sp, #140]	; 0x8c
    30d8:	ldr	r0, [r0]
    30dc:	sub	r1, r1, #11
    30e0:	adds	r5, sl, r1
    30e4:	adc	r6, r7, r1, asr #31
    30e8:	mov	r2, r5
    30ec:	mov	r3, r6
    30f0:	bl	7798 <read_bytes>
    30f4:	ldr	sl, [sp, #172]	; 0xac
    30f8:	cmp	r0, #0
    30fc:	bmi	3708 <coda_grib_reopen+0x3698>
    3100:	movw	r1, #0
    3104:	sub	r0, fp, #144	; 0x90
    3108:	mov	r2, #4
    310c:	movt	r1, #0
    3110:	bl	0 <bcmp>
    3114:	cmp	r0, #0
    3118:	bne	3428 <coda_grib_reopen+0x33b8>
    311c:	ldr	r0, [sp, #168]	; 0xa8
    3120:	ldr	r1, [sp, #148]	; 0x94
    3124:	ldr	r0, [r0]
    3128:	bl	0 <coda_mem_array_add_element>
    312c:	cmp	r0, #0
    3130:	bne	33a8 <coda_grib_reopen+0x3338>
    3134:	ldr	r0, [sp, #192]	; 0xc0
    3138:	ldr	r1, [sp, #196]	; 0xc4
    313c:	ldr	r4, [sp, #152]	; 0x98
    3140:	mov	r5, #0
    3144:	adds	r2, r0, r9
    3148:	ldr	r0, [sp, #184]	; 0xb8
    314c:	add	r4, r4, #1
    3150:	adc	r3, r1, r8
    3154:	str	r4, [sp, #152]	; 0x98
    3158:	ldrd	r0, [r0]
    315c:	subs	r7, r0, #1
    3160:	sbc	r6, r1, #0
    3164:	subs	r7, r2, r7
    3168:	sbcs	r7, r3, r6
    316c:	blt	16c <coda_grib_reopen+0xfc>
    3170:	ldr	r0, [sp, #164]	; 0xa4
    3174:	mov	r4, #0
    3178:	str	sl, [r0]
    317c:	b	3220 <coda_grib_reopen+0x31b0>
    3180:	movw	r1, #0
    3184:	movw	r3, #0
    3188:	movw	r0, #3019	; 0xbcb
    318c:	mov	r2, #56	; 0x38
    3190:	mvn	r4, #0
    3194:	movt	r1, #0
    3198:	movt	r3, #0
    319c:	str	r0, [sp]
    31a0:	mvn	r0, #0
    31a4:	bl	0 <coda_set_error>
    31a8:	ldr	r0, [r5]
    31ac:	bl	0 <coda_close>
    31b0:	b	3220 <coda_grib_reopen+0x31b0>
    31b4:	movw	r1, #0
    31b8:	movw	r2, #0
    31bc:	mvn	r0, #0
    31c0:	movw	r3, #3039	; 0xbdf
    31c4:	movt	r1, #0
    31c8:	movt	r2, #0
    31cc:	bl	0 <coda_set_error>
    31d0:	ldr	r0, [sl]
    31d4:	cmp	r0, #0
    31d8:	beq	31e0 <coda_grib_reopen+0x3170>
    31dc:	bl	0 <free>
    31e0:	ldr	r0, [r4]
    31e4:	cmp	r0, #0
    31e8:	beq	31f0 <coda_grib_reopen+0x3180>
    31ec:	bl	0 <coda_dynamic_type_delete>
    31f0:	ldr	r0, [sl, #48]	; 0x30
    31f4:	cmp	r0, #0
    31f8:	beq	3200 <coda_grib_reopen+0x3190>
    31fc:	bl	0 <free>
    3200:	ldr	r0, [sp, #188]	; 0xbc
    3204:	ldr	r0, [r0]
    3208:	cmp	r0, #0
    320c:	beq	3214 <coda_grib_reopen+0x31a4>
    3210:	bl	0 <coda_bin_close>
    3214:	mov	r0, sl
    3218:	bl	0 <free>
    321c:	mvn	r4, #0
    3220:	mov	r0, r4
    3224:	sub	sp, fp, #72	; 0x48
    3228:	vpop	{d8-d12}
    322c:	add	sp, sp, #4
    3230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3234:	ldr	r2, [sp, #152]	; 0x98
    3238:	movw	r0, #65236	; 0xfed4
    323c:	movw	r1, #0
    3240:	movt	r0, #65535	; 0xffff
    3244:	movt	r1, #0
    3248:	bl	0 <coda_set_error>
    324c:	b	3710 <coda_grib_reopen+0x36a0>
    3250:	bl	0 <__errno_location>
    3254:	ldr	r0, [r0]
    3258:	bl	0 <strerror>
    325c:	movw	r1, #0
    3260:	mov	r2, r0
    3264:	mvn	r0, #21
    3268:	movt	r1, #0
    326c:	bl	0 <coda_set_error>
    3270:	b	3710 <coda_grib_reopen+0x36a0>
    3274:	sub	r5, fp, #165	; 0xa5
    3278:	mov	r0, r6
    327c:	mov	r1, r4
    3280:	mov	r2, r5
    3284:	bl	0 <coda_str64>
    3288:	ldrb	r0, [fp, #-144]	; 0xffffff70
    328c:	movw	r1, #0
    3290:	mov	r3, r5
    3294:	movt	r1, #0
    3298:	b	3344 <coda_grib_reopen+0x32d4>
    329c:	ldr	r0, [sp, #144]	; 0x90
    32a0:	bl	0 <coda_dynamic_type_delete>
    32a4:	ldr	r0, [sp, #132]	; 0x84
    32a8:	bl	0 <coda_dynamic_type_delete>
    32ac:	ldr	sl, [sp, #172]	; 0xac
    32b0:	b	3708 <coda_grib_reopen+0x3698>
    32b4:	ldr	r3, [sp, #152]	; 0x98
    32b8:	movw	r1, #0
    32bc:	mvn	r0, #199	; 0xc7
    32c0:	mov	r2, r5
    32c4:	movt	r1, #0
    32c8:	bl	0 <coda_set_error>
    32cc:	b	3710 <coda_grib_reopen+0x36a0>
    32d0:	movw	r0, #65236	; 0xfed4
    32d4:	movw	r1, #0
    32d8:	movt	r0, #65535	; 0xffff
    32dc:	movt	r1, #0
    32e0:	bl	0 <coda_set_error>
    32e4:	ldr	r0, [sp, #180]	; 0xb4
    32e8:	bl	0 <coda_dynamic_type_delete>
    32ec:	ldr	r0, [sp, #24]
    32f0:	bl	0 <coda_dynamic_type_delete>
    32f4:	b	3708 <coda_grib_reopen+0x3698>
    32f8:	movw	r0, #65236	; 0xfed4
    32fc:	movw	r1, #0
    3300:	mov	r2, r5
    3304:	mov	r3, r7
    3308:	movt	r0, #65535	; 0xffff
    330c:	movt	r1, #0
    3310:	bl	0 <coda_set_error>
    3314:	mov	r0, r6
    3318:	bl	0 <coda_dynamic_type_delete>
    331c:	b	3708 <coda_grib_reopen+0x3698>
    3320:	sub	r7, fp, #165	; 0xa5
    3324:	mov	r0, r5
    3328:	mov	r1, r6
    332c:	mov	r2, r7
    3330:	bl	0 <coda_str64>
    3334:	ldrb	r0, [fp, #-140]	; 0xffffff74
    3338:	movw	r1, #0
    333c:	mov	r3, r7
    3340:	movt	r1, #0
    3344:	sub	r2, r0, #48	; 0x30
    3348:	movw	r0, #65236	; 0xfed4
    334c:	movt	r0, #65535	; 0xffff
    3350:	bl	0 <coda_set_error>
    3354:	b	3708 <coda_grib_reopen+0x3698>
    3358:	ldr	r0, [sp, #176]	; 0xb0
    335c:	bl	0 <coda_dynamic_type_delete>
    3360:	ldr	r0, [sp, #132]	; 0x84
    3364:	bl	0 <coda_dynamic_type_delete>
    3368:	b	3708 <coda_grib_reopen+0x3698>
    336c:	cmp	r5, #0
    3370:	beq	3708 <coda_grib_reopen+0x3698>
    3374:	mov	r0, r5
    3378:	bl	0 <free>
    337c:	b	3708 <coda_grib_reopen+0x3698>
    3380:	cmp	r5, #0
    3384:	beq	3390 <coda_grib_reopen+0x3320>
    3388:	mov	r0, r5
    338c:	bl	0 <free>
    3390:	movw	r0, #65236	; 0xfed4
    3394:	movw	r1, #0
    3398:	movt	r0, #65535	; 0xffff
    339c:	movt	r1, #0
    33a0:	bl	0 <coda_set_error>
    33a4:	b	3708 <coda_grib_reopen+0x3698>
    33a8:	ldr	r0, [sp, #156]	; 0x9c
    33ac:	b	370c <coda_grib_reopen+0x369c>
    33b0:	cmp	r5, #0
    33b4:	beq	33c0 <coda_grib_reopen+0x3350>
    33b8:	mov	r0, r5
    33bc:	bl	0 <free>
    33c0:	movw	r0, #65236	; 0xfed4
    33c4:	movw	r1, #0
    33c8:	movt	r0, #65535	; 0xffff
    33cc:	movt	r1, #0
    33d0:	bl	0 <coda_set_error>
    33d4:	b	3708 <coda_grib_reopen+0x3698>
    33d8:	cmp	r5, #0
    33dc:	beq	33e8 <coda_grib_reopen+0x3378>
    33e0:	mov	r0, r5
    33e4:	bl	0 <free>
    33e8:	movw	r0, #65236	; 0xfed4
    33ec:	movw	r1, #0
    33f0:	movt	r0, #65535	; 0xffff
    33f4:	movt	r1, #0
    33f8:	bl	0 <coda_set_error>
    33fc:	b	3708 <coda_grib_reopen+0x3698>
    3400:	ldr	r0, [sp, #176]	; 0xb0
    3404:	cmp	r0, #0
    3408:	beq	3410 <coda_grib_reopen+0x33a0>
    340c:	bl	0 <free>
    3410:	movw	r0, #65236	; 0xfed4
    3414:	movw	r1, #0
    3418:	mov	r2, r7
    341c:	movt	r0, #65535	; 0xffff
    3420:	movt	r1, #0
    3424:	b	3510 <coda_grib_reopen+0x34a0>
    3428:	sub	r7, fp, #165	; 0xa5
    342c:	mov	r0, r5
    3430:	mov	r1, r6
    3434:	mov	r2, r7
    3438:	bl	0 <coda_str64>
    343c:	movw	r1, #0
    3440:	mvn	r0, #21
    3444:	mov	r2, r7
    3448:	movt	r1, #0
    344c:	b	3704 <coda_grib_reopen+0x3694>
    3450:	mov	r0, r7
    3454:	bl	0 <free>
    3458:	b	3708 <coda_grib_reopen+0x3698>
    345c:	movw	r0, #65236	; 0xfed4
    3460:	movw	r1, #0
    3464:	mvn	r2, #44	; 0x2c
    3468:	b	34c0 <coda_grib_reopen+0x3450>
    346c:	movw	r0, #65236	; 0xfed4
    3470:	movw	r1, #0
    3474:	uxtb	r3, r2
    3478:	mvn	r2, #43	; 0x2b
    347c:	b	34c0 <coda_grib_reopen+0x3450>
    3480:	movw	r0, #65236	; 0xfed4
    3484:	movw	r1, #0
    3488:	mvn	r2, #42	; 0x2a
    348c:	b	34c0 <coda_grib_reopen+0x3450>
    3490:	movw	r0, #65236	; 0xfed4
    3494:	movw	r1, #0
    3498:	mvn	r2, #41	; 0x29
    349c:	b	34c0 <coda_grib_reopen+0x3450>
    34a0:	movw	r0, #65236	; 0xfed4
    34a4:	uxtb	r3, r1
    34a8:	movw	r1, #0
    34ac:	mvn	r2, #40	; 0x28
    34b0:	b	34c0 <coda_grib_reopen+0x3450>
    34b4:	movw	r0, #65236	; 0xfed4
    34b8:	movw	r1, #0
    34bc:	mvn	r2, #45	; 0x2d
    34c0:	movt	r0, #65535	; 0xffff
    34c4:	movt	r1, #0
    34c8:	bl	0 <coda_set_error>
    34cc:	b	3708 <coda_grib_reopen+0x3698>
    34d0:	movw	r0, #65236	; 0xfed4
    34d4:	movw	r1, #0
    34d8:	movt	r0, #65535	; 0xffff
    34dc:	movt	r1, #0
    34e0:	bl	0 <coda_set_error>
    34e4:	b	3708 <coda_grib_reopen+0x3698>
    34e8:	movw	r0, #65236	; 0xfed4
    34ec:	movw	r1, #0
    34f0:	movt	r0, #65535	; 0xffff
    34f4:	movt	r1, #0
    34f8:	b	3704 <coda_grib_reopen+0x3694>
    34fc:	movw	r0, #65236	; 0xfed4
    3500:	movw	r1, #0
    3504:	mov	r2, sl
    3508:	movt	r0, #65535	; 0xffff
    350c:	movt	r1, #0
    3510:	bl	0 <coda_set_error>
    3514:	ldr	sl, [sp, #172]	; 0xac
    3518:	b	3708 <coda_grib_reopen+0x3698>
    351c:	.word	0x00000000
    3520:	movw	r0, #65236	; 0xfed4
    3524:	movw	r1, #0
    3528:	mov	r2, r6
    352c:	movt	r0, #65535	; 0xffff
    3530:	movt	r1, #0
    3534:	b	3704 <coda_grib_reopen+0x3694>
    3538:	ldr	r2, [sp, #84]	; 0x54
    353c:	movw	r0, #65236	; 0xfed4
    3540:	movw	r1, #0
    3544:	movt	r0, #65535	; 0xffff
    3548:	movt	r1, #0
    354c:	b	3704 <coda_grib_reopen+0x3694>
    3550:	ldr	r0, [sp, #132]	; 0x84
    3554:	bl	0 <coda_grib_type_delete>
    3558:	ldr	sl, [sp, #172]	; 0xac
    355c:	b	3708 <coda_grib_reopen+0x3698>
    3560:	movw	r0, #65236	; 0xfed4
    3564:	movw	r1, #0
    3568:	movt	r0, #65535	; 0xffff
    356c:	movt	r1, #0
    3570:	bl	0 <coda_set_error>
    3574:	ldr	sl, [sp, #172]	; 0xac
    3578:	b	3708 <coda_grib_reopen+0x3698>
    357c:	movw	r0, #65236	; 0xfed4
    3580:	movw	r1, #0
    3584:	movt	r0, #65535	; 0xffff
    3588:	movt	r1, #0
    358c:	bl	0 <coda_set_error>
    3590:	b	3708 <coda_grib_reopen+0x3698>
    3594:	ldr	r0, [sp, #180]	; 0xb4
    3598:	movw	r1, #0
    359c:	movt	r1, #0
    35a0:	str	r0, [sp]
    35a4:	movw	r0, #65236	; 0xfed4
    35a8:	movt	r0, #65535	; 0xffff
    35ac:	b	35e0 <coda_grib_reopen+0x3570>
    35b0:	movw	r0, #65236	; 0xfed4
    35b4:	movw	r1, #0
    35b8:	movt	r0, #65535	; 0xffff
    35bc:	movt	r1, #0
    35c0:	b	3704 <coda_grib_reopen+0x3694>
    35c4:	movw	r1, #0
    35c8:	movw	r3, #0
    35cc:	movw	r0, #2063	; 0x80f
    35d0:	str	r0, [sp]
    35d4:	movt	r1, #0
    35d8:	movt	r3, #0
    35dc:	mvn	r0, #0
    35e0:	mov	r2, r5
    35e4:	bl	0 <coda_set_error>
    35e8:	b	3708 <coda_grib_reopen+0x3698>
    35ec:	movw	r1, #0
    35f0:	movw	r3, #0
    35f4:	movw	r0, #2940	; 0xb7c
    35f8:	mov	r2, r4
    35fc:	b	3628 <coda_grib_reopen+0x35b8>
    3600:	movw	r0, #65236	; 0xfed4
    3604:	movw	r1, #0
    3608:	movt	r0, #65535	; 0xffff
    360c:	movt	r1, #0
    3610:	bl	0 <coda_set_error>
    3614:	b	32ec <coda_grib_reopen+0x327c>
    3618:	ldr	r2, [sp, #180]	; 0xb4
    361c:	movw	r1, #0
    3620:	movw	r3, #0
    3624:	movw	r0, #2332	; 0x91c
    3628:	movt	r1, #0
    362c:	movt	r3, #0
    3630:	str	r0, [sp]
    3634:	mvn	r0, #0
    3638:	bl	0 <coda_set_error>
    363c:	b	3708 <coda_grib_reopen+0x3698>
    3640:	movw	r1, #0
    3644:	movw	r3, #0
    3648:	movw	r0, #1662	; 0x67e
    364c:	mov	r2, r5
    3650:	movt	r1, #0
    3654:	movt	r3, #0
    3658:	str	r0, [sp]
    365c:	mvn	r0, #0
    3660:	bl	0 <coda_set_error>
    3664:	ldr	sl, [sp, #172]	; 0xac
    3668:	b	3708 <coda_grib_reopen+0x3698>
    366c:	mov	r0, r7
    3670:	bl	0 <free>
    3674:	ldr	sl, [sp, #172]	; 0xac
    3678:	b	3708 <coda_grib_reopen+0x3698>
    367c:	movw	r0, #65236	; 0xfed4
    3680:	movw	r1, #0
    3684:	movt	r0, #65535	; 0xffff
    3688:	movt	r1, #0
    368c:	bl	0 <coda_set_error>
    3690:	b	3708 <coda_grib_reopen+0x3698>
    3694:	movw	r0, #65236	; 0xfed4
    3698:	movw	r1, #0
    369c:	movt	r0, #65535	; 0xffff
    36a0:	movt	r1, #0
    36a4:	bl	0 <coda_set_error>
    36a8:	b	32ec <coda_grib_reopen+0x327c>
    36ac:	movw	r0, #65236	; 0xfed4
    36b0:	movw	r1, #0
    36b4:	movt	r0, #65535	; 0xffff
    36b8:	movt	r1, #0
    36bc:	bl	0 <coda_set_error>
    36c0:	b	3708 <coda_grib_reopen+0x3698>
    36c4:	movw	r0, #65236	; 0xfed4
    36c8:	movw	r1, #0
    36cc:	movt	r0, #65535	; 0xffff
    36d0:	movt	r1, #0
    36d4:	bl	0 <coda_set_error>
    36d8:	b	3360 <coda_grib_reopen+0x32f0>
    36dc:	sub	r5, fp, #165	; 0xa5
    36e0:	mov	r0, r2
    36e4:	mov	r1, r3
    36e8:	mov	r2, r5
    36ec:	bl	0 <coda_str64>
    36f0:	movw	r0, #65236	; 0xfed4
    36f4:	movw	r1, #0
    36f8:	mov	r2, r5
    36fc:	movt	r0, #65535	; 0xffff
    3700:	movt	r1, #0
    3704:	bl	0 <coda_set_error>
    3708:	ldr	r0, [sp, #148]	; 0x94
    370c:	bl	0 <coda_dynamic_type_delete>
    3710:	ldr	r0, [sl]
    3714:	cmp	r0, #0
    3718:	beq	3720 <coda_grib_reopen+0x36b0>
    371c:	bl	0 <free>
    3720:	ldr	r0, [sp, #168]	; 0xa8
    3724:	ldr	r0, [r0]
    3728:	cmp	r0, #0
    372c:	bne	31ec <coda_grib_reopen+0x317c>
    3730:	b	31f0 <coda_grib_reopen+0x3180>
    3734:	movw	r0, #65236	; 0xfed4
    3738:	movw	r1, #0
    373c:	movt	r0, #65535	; 0xffff
    3740:	movt	r1, #0
    3744:	b	3758 <coda_grib_reopen+0x36e8>
    3748:	movw	r0, #65236	; 0xfed4
    374c:	movw	r1, #0
    3750:	movt	r0, #65535	; 0xffff
    3754:	movt	r1, #0
    3758:	bl	0 <coda_set_error>
    375c:	b	32a4 <coda_grib_reopen+0x3234>
    3760:	movw	r0, #65236	; 0xfed4
    3764:	movw	r1, #0
    3768:	lsl	r3, r5, #1
    376c:	movt	r0, #65535	; 0xffff
    3770:	movt	r1, #0
    3774:	bl	0 <coda_set_error>
    3778:	b	3360 <coda_grib_reopen+0x32f0>
    377c:	movw	r0, #0
    3780:	movw	r1, #0
    3784:	movw	r3, #0
    3788:	mov	r2, #62	; 0x3e
    378c:	movt	r0, #0
    3790:	movt	r1, #0
    3794:	movt	r3, #0
    3798:	bl	0 <__assert_fail>
    379c:	.word	0x00000000

000037a0 <grib_init>:
    37a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    37a4:	add	fp, sp, #28
    37a8:	sub	sp, sp, #4
    37ac:	ldr	sl, [pc, #20]	; 37c8 <grib_init+0x28>
    37b0:	bl	0 <__aeabi_read_tp>
    37b4:	ldr	r0, [r0, sl]
    37b8:	mov	r4, #0
    37bc:	cmp	r0, #0
    37c0:	bne	7730 <grib_init+0x3f90>
    37c4:	b	37cc <grib_init+0x2c>
    37c8:	.word	0x00000000
    37cc:	mov	r0, #572	; 0x23c
    37d0:	bl	0 <malloc>
    37d4:	mov	r1, r0
    37d8:	bl	0 <__aeabi_read_tp>
    37dc:	cmp	r1, #0
    37e0:	str	r1, [r0, sl]
    37e4:	beq	7708 <grib_init+0x3f68>
    37e8:	mov	r0, r1
    37ec:	mov	r1, #0
    37f0:	mov	r2, #572	; 0x23c
    37f4:	mov	r4, #0
    37f8:	bl	0 <memset>
    37fc:	mov	r0, #7
    3800:	mov	r1, #2
    3804:	bl	0 <coda_type_number_new>
    3808:	mov	r1, r0
    380c:	bl	0 <__aeabi_read_tp>
    3810:	mov	r5, r0
    3814:	ldr	r0, [r0, sl]
    3818:	str	r1, [r0]
    381c:	mov	r0, r1
    3820:	mov	r1, #1
    3824:	bl	0 <coda_type_number_set_endianness>
    3828:	ldr	r0, [r5, sl]
    382c:	mov	r1, #4
    3830:	ldr	r0, [r0]
    3834:	bl	0 <coda_type_set_read_type>
    3838:	ldr	r0, [r5, sl]
    383c:	mov	r2, #32
    3840:	mov	r3, #0
    3844:	ldr	r0, [r0]
    3848:	bl	0 <coda_type_set_bit_size>
    384c:	mov	r0, #7
    3850:	mov	r1, #2
    3854:	bl	0 <coda_type_number_new>
    3858:	ldr	r1, [r5, sl]
    385c:	str	r0, [r1, #4]
    3860:	mov	r1, #1
    3864:	bl	0 <coda_type_number_set_endianness>
    3868:	ldr	r0, [r5, sl]
    386c:	mov	r1, #5
    3870:	ldr	r0, [r0, #4]
    3874:	bl	0 <coda_type_set_read_type>
    3878:	ldr	r0, [r5, sl]
    387c:	mov	r2, #32
    3880:	mov	r3, #0
    3884:	ldr	r0, [r0, #4]
    3888:	bl	0 <coda_type_set_bit_size>
    388c:	mov	r0, #7
    3890:	mov	r1, #2
    3894:	bl	0 <coda_type_number_new>
    3898:	ldr	r1, [r5, sl]
    389c:	str	r0, [r1, #8]
    38a0:	mov	r1, #1
    38a4:	bl	0 <coda_type_number_set_endianness>
    38a8:	ldr	r0, [r5, sl]
    38ac:	mov	r1, #1
    38b0:	ldr	r0, [r0, #8]
    38b4:	bl	0 <coda_type_set_read_type>
    38b8:	ldr	r0, [r5, sl]
    38bc:	mov	r2, #8
    38c0:	mov	r3, #0
    38c4:	ldr	r0, [r0, #8]
    38c8:	bl	0 <coda_type_set_bit_size>
    38cc:	ldr	r0, [r5, sl]
    38d0:	movw	r1, #0
    38d4:	movt	r1, #0
    38d8:	ldr	r0, [r0, #8]
    38dc:	bl	0 <coda_type_set_description>
    38e0:	mov	r0, #7
    38e4:	mov	r1, #2
    38e8:	bl	0 <coda_type_number_new>
    38ec:	ldr	r1, [r5, sl]
    38f0:	str	r0, [r1, #12]
    38f4:	mov	r1, #1
    38f8:	bl	0 <coda_type_number_set_endianness>
    38fc:	ldr	r0, [r5, sl]
    3900:	mov	r1, #1
    3904:	ldr	r0, [r0, #12]
    3908:	bl	0 <coda_type_set_read_type>
    390c:	ldr	r0, [r5, sl]
    3910:	mov	r2, #8
    3914:	mov	r3, #0
    3918:	ldr	r0, [r0, #12]
    391c:	bl	0 <coda_type_set_bit_size>
    3920:	ldr	r0, [r5, sl]
    3924:	movw	r1, #0
    3928:	movt	r1, #0
    392c:	ldr	r0, [r0, #12]
    3930:	bl	0 <coda_type_set_description>
    3934:	mov	r0, #7
    3938:	mov	r1, #2
    393c:	bl	0 <coda_type_number_new>
    3940:	ldr	r1, [r5, sl]
    3944:	str	r0, [r1, #16]
    3948:	mov	r1, #1
    394c:	bl	0 <coda_type_number_set_endianness>
    3950:	ldr	r0, [r5, sl]
    3954:	mov	r1, #1
    3958:	ldr	r0, [r0, #16]
    395c:	bl	0 <coda_type_set_read_type>
    3960:	ldr	r0, [r5, sl]
    3964:	mov	r2, #8
    3968:	mov	r3, #0
    396c:	ldr	r0, [r0, #16]
    3970:	bl	0 <coda_type_set_bit_size>
    3974:	ldr	r0, [r5, sl]
    3978:	movw	r1, #0
    397c:	movt	r1, #0
    3980:	ldr	r0, [r0, #16]
    3984:	bl	0 <coda_type_set_description>
    3988:	mov	r0, #7
    398c:	mov	r1, #2
    3990:	bl	0 <coda_type_number_new>
    3994:	ldr	r1, [r5, sl]
    3998:	str	r0, [r1, #20]
    399c:	mov	r1, #1
    39a0:	bl	0 <coda_type_number_set_endianness>
    39a4:	ldr	r0, [r5, sl]
    39a8:	mov	r1, #1
    39ac:	ldr	r0, [r0, #20]
    39b0:	bl	0 <coda_type_set_read_type>
    39b4:	ldr	r0, [r5, sl]
    39b8:	mov	r2, #8
    39bc:	mov	r3, #0
    39c0:	ldr	r0, [r0, #20]
    39c4:	bl	0 <coda_type_set_bit_size>
    39c8:	ldr	r0, [r5, sl]
    39cc:	movw	r1, #0
    39d0:	movt	r1, #0
    39d4:	ldr	r0, [r0, #20]
    39d8:	bl	0 <coda_type_set_description>
    39dc:	mov	r0, #7
    39e0:	mov	r1, #2
    39e4:	bl	0 <coda_type_number_new>
    39e8:	ldr	r1, [r5, sl]
    39ec:	str	r0, [r1, #24]
    39f0:	mov	r1, #1
    39f4:	bl	0 <coda_type_number_set_endianness>
    39f8:	ldr	r0, [r5, sl]
    39fc:	mov	r1, #1
    3a00:	ldr	r0, [r0, #24]
    3a04:	bl	0 <coda_type_set_read_type>
    3a08:	ldr	r0, [r5, sl]
    3a0c:	mov	r2, #8
    3a10:	mov	r3, #0
    3a14:	ldr	r0, [r0, #24]
    3a18:	bl	0 <coda_type_set_bit_size>
    3a1c:	ldr	r0, [r5, sl]
    3a20:	movw	r1, #0
    3a24:	movt	r1, #0
    3a28:	ldr	r0, [r0, #24]
    3a2c:	bl	0 <coda_type_set_description>
    3a30:	mov	r0, #7
    3a34:	mov	r1, #2
    3a38:	bl	0 <coda_type_number_new>
    3a3c:	ldr	r1, [r5, sl]
    3a40:	str	r0, [r1, #28]
    3a44:	mov	r1, #1
    3a48:	bl	0 <coda_type_number_set_endianness>
    3a4c:	ldr	r0, [r5, sl]
    3a50:	mov	r1, #1
    3a54:	ldr	r0, [r0, #28]
    3a58:	bl	0 <coda_type_set_read_type>
    3a5c:	ldr	r0, [r5, sl]
    3a60:	mov	r2, #8
    3a64:	mov	r3, #0
    3a68:	ldr	r0, [r0, #28]
    3a6c:	bl	0 <coda_type_set_bit_size>
    3a70:	ldr	r0, [r5, sl]
    3a74:	movw	r1, #0
    3a78:	movt	r1, #0
    3a7c:	ldr	r0, [r0, #28]
    3a80:	bl	0 <coda_type_set_description>
    3a84:	mov	r0, #7
    3a88:	mov	r1, #2
    3a8c:	bl	0 <coda_type_number_new>
    3a90:	ldr	r1, [r5, sl]
    3a94:	str	r0, [r1, #32]
    3a98:	mov	r1, #1
    3a9c:	bl	0 <coda_type_number_set_endianness>
    3aa0:	ldr	r0, [r5, sl]
    3aa4:	mov	r1, #1
    3aa8:	ldr	r0, [r0, #32]
    3aac:	bl	0 <coda_type_set_read_type>
    3ab0:	ldr	r0, [r5, sl]
    3ab4:	mov	r2, #8
    3ab8:	mov	r3, #0
    3abc:	ldr	r0, [r0, #32]
    3ac0:	bl	0 <coda_type_set_bit_size>
    3ac4:	ldr	r0, [r5, sl]
    3ac8:	movw	r1, #0
    3acc:	movt	r1, #0
    3ad0:	ldr	r0, [r0, #32]
    3ad4:	bl	0 <coda_type_set_description>
    3ad8:	mov	r0, #7
    3adc:	mov	r1, #2
    3ae0:	bl	0 <coda_type_number_new>
    3ae4:	ldr	r1, [r5, sl]
    3ae8:	str	r0, [r1, #36]	; 0x24
    3aec:	mov	r1, #1
    3af0:	bl	0 <coda_type_number_set_endianness>
    3af4:	ldr	r0, [r5, sl]
    3af8:	mov	r1, #3
    3afc:	ldr	r0, [r0, #36]	; 0x24
    3b00:	bl	0 <coda_type_set_read_type>
    3b04:	ldr	r0, [r5, sl]
    3b08:	mov	r2, #16
    3b0c:	mov	r3, #0
    3b10:	ldr	r0, [r0, #36]	; 0x24
    3b14:	bl	0 <coda_type_set_bit_size>
    3b18:	ldr	r0, [r5, sl]
    3b1c:	movw	r1, #0
    3b20:	movt	r1, #0
    3b24:	ldr	r0, [r0, #36]	; 0x24
    3b28:	bl	0 <coda_type_set_description>
    3b2c:	mov	r0, #7
    3b30:	mov	r1, #2
    3b34:	bl	0 <coda_type_number_new>
    3b38:	ldr	r1, [r5, sl]
    3b3c:	str	r0, [r1, #40]	; 0x28
    3b40:	mov	r1, #1
    3b44:	bl	0 <coda_type_number_set_endianness>
    3b48:	ldr	r0, [r5, sl]
    3b4c:	mov	r1, #1
    3b50:	ldr	r0, [r0, #40]	; 0x28
    3b54:	bl	0 <coda_type_set_read_type>
    3b58:	ldr	r0, [r5, sl]
    3b5c:	mov	r2, #8
    3b60:	mov	r3, #0
    3b64:	ldr	r0, [r0, #40]	; 0x28
    3b68:	bl	0 <coda_type_set_bit_size>
    3b6c:	ldr	r0, [r5, sl]
    3b70:	movw	r1, #0
    3b74:	movt	r1, #0
    3b78:	ldr	r0, [r0, #40]	; 0x28
    3b7c:	bl	0 <coda_type_set_description>
    3b80:	mov	r0, #7
    3b84:	mov	r1, #2
    3b88:	bl	0 <coda_type_number_new>
    3b8c:	ldr	r1, [r5, sl]
    3b90:	str	r0, [r1, #44]	; 0x2c
    3b94:	mov	r1, #1
    3b98:	bl	0 <coda_type_number_set_endianness>
    3b9c:	ldr	r0, [r5, sl]
    3ba0:	mov	r1, #3
    3ba4:	ldr	r0, [r0, #44]	; 0x2c
    3ba8:	bl	0 <coda_type_set_read_type>
    3bac:	ldr	r0, [r5, sl]
    3bb0:	mov	r2, #16
    3bb4:	mov	r3, #0
    3bb8:	ldr	r0, [r0, #44]	; 0x2c
    3bbc:	bl	0 <coda_type_set_bit_size>
    3bc0:	ldr	r0, [r5, sl]
    3bc4:	movw	r1, #0
    3bc8:	movt	r1, #0
    3bcc:	ldr	r0, [r0, #44]	; 0x2c
    3bd0:	bl	0 <coda_type_set_description>
    3bd4:	mov	r0, #7
    3bd8:	mov	r1, #2
    3bdc:	bl	0 <coda_type_number_new>
    3be0:	ldr	r1, [r5, sl]
    3be4:	str	r0, [r1, #48]	; 0x30
    3be8:	mov	r1, #1
    3bec:	bl	0 <coda_type_number_set_endianness>
    3bf0:	ldr	r0, [r5, sl]
    3bf4:	mov	r1, #1
    3bf8:	ldr	r0, [r0, #48]	; 0x30
    3bfc:	bl	0 <coda_type_set_read_type>
    3c00:	ldr	r0, [r5, sl]
    3c04:	mov	r2, #8
    3c08:	mov	r3, #0
    3c0c:	ldr	r0, [r0, #48]	; 0x30
    3c10:	bl	0 <coda_type_set_bit_size>
    3c14:	ldr	r0, [r5, sl]
    3c18:	movw	r1, #0
    3c1c:	movt	r1, #0
    3c20:	ldr	r0, [r0, #48]	; 0x30
    3c24:	bl	0 <coda_type_set_description>
    3c28:	mov	r0, #7
    3c2c:	mov	r1, #2
    3c30:	bl	0 <coda_type_number_new>
    3c34:	ldr	r1, [r5, sl]
    3c38:	str	r0, [r1, #52]	; 0x34
    3c3c:	mov	r1, #1
    3c40:	bl	0 <coda_type_number_set_endianness>
    3c44:	ldr	r0, [r5, sl]
    3c48:	mov	r1, #1
    3c4c:	ldr	r0, [r0, #52]	; 0x34
    3c50:	bl	0 <coda_type_set_read_type>
    3c54:	ldr	r0, [r5, sl]
    3c58:	mov	r2, #8
    3c5c:	mov	r3, #0
    3c60:	ldr	r0, [r0, #52]	; 0x34
    3c64:	bl	0 <coda_type_set_bit_size>
    3c68:	ldr	r0, [r5, sl]
    3c6c:	movw	r1, #0
    3c70:	movt	r1, #0
    3c74:	ldr	r0, [r0, #52]	; 0x34
    3c78:	bl	0 <coda_type_set_description>
    3c7c:	mov	r0, #7
    3c80:	mov	r1, #2
    3c84:	bl	0 <coda_type_number_new>
    3c88:	ldr	r1, [r5, sl]
    3c8c:	str	r0, [r1, #56]	; 0x38
    3c90:	mov	r1, #1
    3c94:	bl	0 <coda_type_number_set_endianness>
    3c98:	ldr	r0, [r5, sl]
    3c9c:	mov	r1, #1
    3ca0:	ldr	r0, [r0, #56]	; 0x38
    3ca4:	bl	0 <coda_type_set_read_type>
    3ca8:	ldr	r0, [r5, sl]
    3cac:	mov	r2, #8
    3cb0:	mov	r3, #0
    3cb4:	ldr	r0, [r0, #56]	; 0x38
    3cb8:	bl	0 <coda_type_set_bit_size>
    3cbc:	ldr	r0, [r5, sl]
    3cc0:	movw	r1, #0
    3cc4:	movt	r1, #0
    3cc8:	ldr	r0, [r0, #56]	; 0x38
    3ccc:	bl	0 <coda_type_set_description>
    3cd0:	mov	r0, #7
    3cd4:	mov	r1, #2
    3cd8:	bl	0 <coda_type_number_new>
    3cdc:	ldr	r1, [r5, sl]
    3ce0:	str	r0, [r1, #60]	; 0x3c
    3ce4:	mov	r1, #1
    3ce8:	bl	0 <coda_type_number_set_endianness>
    3cec:	ldr	r0, [r5, sl]
    3cf0:	mov	r1, #1
    3cf4:	ldr	r0, [r0, #60]	; 0x3c
    3cf8:	bl	0 <coda_type_set_read_type>
    3cfc:	ldr	r0, [r5, sl]
    3d00:	mov	r2, #8
    3d04:	mov	r3, #0
    3d08:	ldr	r0, [r0, #60]	; 0x3c
    3d0c:	bl	0 <coda_type_set_bit_size>
    3d10:	ldr	r0, [r5, sl]
    3d14:	movw	r1, #0
    3d18:	movt	r1, #0
    3d1c:	ldr	r0, [r0, #60]	; 0x3c
    3d20:	bl	0 <coda_type_set_description>
    3d24:	mov	r0, #7
    3d28:	mov	r1, #2
    3d2c:	bl	0 <coda_type_number_new>
    3d30:	ldr	r1, [r5, sl]
    3d34:	str	r0, [r1, #64]	; 0x40
    3d38:	mov	r1, #1
    3d3c:	bl	0 <coda_type_number_set_endianness>
    3d40:	ldr	r0, [r5, sl]
    3d44:	mov	r1, #1
    3d48:	ldr	r0, [r0, #64]	; 0x40
    3d4c:	bl	0 <coda_type_set_read_type>
    3d50:	ldr	r0, [r5, sl]
    3d54:	mov	r2, #8
    3d58:	mov	r3, #0
    3d5c:	ldr	r0, [r0, #64]	; 0x40
    3d60:	bl	0 <coda_type_set_bit_size>
    3d64:	ldr	r0, [r5, sl]
    3d68:	movw	r1, #0
    3d6c:	movt	r1, #0
    3d70:	ldr	r0, [r0, #64]	; 0x40
    3d74:	bl	0 <coda_type_set_description>
    3d78:	mov	r0, #7
    3d7c:	mov	r1, #2
    3d80:	bl	0 <coda_type_number_new>
    3d84:	ldr	r1, [r5, sl]
    3d88:	str	r0, [r1, #68]	; 0x44
    3d8c:	mov	r1, #1
    3d90:	bl	0 <coda_type_number_set_endianness>
    3d94:	ldr	r0, [r5, sl]
    3d98:	mov	r1, #1
    3d9c:	ldr	r0, [r0, #68]	; 0x44
    3da0:	bl	0 <coda_type_set_read_type>
    3da4:	ldr	r0, [r5, sl]
    3da8:	mov	r2, #8
    3dac:	mov	r3, #0
    3db0:	ldr	r0, [r0, #68]	; 0x44
    3db4:	bl	0 <coda_type_set_bit_size>
    3db8:	ldr	r0, [r5, sl]
    3dbc:	movw	r1, #0
    3dc0:	movt	r1, #0
    3dc4:	ldr	r0, [r0, #68]	; 0x44
    3dc8:	bl	0 <coda_type_set_description>
    3dcc:	mov	r0, #7
    3dd0:	mov	r1, #2
    3dd4:	bl	0 <coda_type_number_new>
    3dd8:	ldr	r1, [r5, sl]
    3ddc:	str	r0, [r1, #72]	; 0x48
    3de0:	mov	r1, #1
    3de4:	bl	0 <coda_type_number_set_endianness>
    3de8:	ldr	r0, [r5, sl]
    3dec:	mov	r1, #1
    3df0:	ldr	r0, [r0, #72]	; 0x48
    3df4:	bl	0 <coda_type_set_read_type>
    3df8:	ldr	r0, [r5, sl]
    3dfc:	mov	r2, #8
    3e00:	mov	r3, #0
    3e04:	ldr	r0, [r0, #72]	; 0x48
    3e08:	bl	0 <coda_type_set_bit_size>
    3e0c:	ldr	r0, [r5, sl]
    3e10:	movw	r6, #0
    3e14:	movt	r6, #0
    3e18:	mov	r1, r6
    3e1c:	ldr	r0, [r0, #72]	; 0x48
    3e20:	bl	0 <coda_type_set_description>
    3e24:	mov	r0, #7
    3e28:	mov	r1, #2
    3e2c:	bl	0 <coda_type_number_new>
    3e30:	ldr	r1, [r5, sl]
    3e34:	str	r0, [r1, #76]	; 0x4c
    3e38:	mov	r1, #1
    3e3c:	bl	0 <coda_type_number_set_endianness>
    3e40:	ldr	r0, [r5, sl]
    3e44:	mov	r1, #1
    3e48:	ldr	r0, [r0, #76]	; 0x4c
    3e4c:	bl	0 <coda_type_set_read_type>
    3e50:	ldr	r0, [r5, sl]
    3e54:	mov	r2, #8
    3e58:	mov	r3, #0
    3e5c:	ldr	r0, [r0, #76]	; 0x4c
    3e60:	bl	0 <coda_type_set_bit_size>
    3e64:	ldr	r0, [r5, sl]
    3e68:	mov	r1, r6
    3e6c:	ldr	r0, [r0, #76]	; 0x4c
    3e70:	bl	0 <coda_type_set_description>
    3e74:	mov	r0, #7
    3e78:	mov	r1, #2
    3e7c:	bl	0 <coda_type_number_new>
    3e80:	ldr	r1, [r5, sl]
    3e84:	str	r0, [r1, #80]	; 0x50
    3e88:	mov	r1, #1
    3e8c:	bl	0 <coda_type_number_set_endianness>
    3e90:	ldr	r0, [r5, sl]
    3e94:	mov	r1, #1
    3e98:	ldr	r0, [r0, #80]	; 0x50
    3e9c:	bl	0 <coda_type_set_read_type>
    3ea0:	ldr	r0, [r5, sl]
    3ea4:	mov	r2, #8
    3ea8:	mov	r3, #0
    3eac:	ldr	r0, [r0, #80]	; 0x50
    3eb0:	bl	0 <coda_type_set_bit_size>
    3eb4:	ldr	r0, [r5, sl]
    3eb8:	movw	r1, #0
    3ebc:	movt	r1, #0
    3ec0:	ldr	r0, [r0, #80]	; 0x50
    3ec4:	bl	0 <coda_type_set_description>
    3ec8:	mov	r0, #7
    3ecc:	mov	r1, #2
    3ed0:	bl	0 <coda_type_number_new>
    3ed4:	ldr	r1, [r5, sl]
    3ed8:	str	r0, [r1, #84]	; 0x54
    3edc:	mov	r1, #1
    3ee0:	bl	0 <coda_type_number_set_endianness>
    3ee4:	ldr	r0, [r5, sl]
    3ee8:	mov	r1, #3
    3eec:	ldr	r0, [r0, #84]	; 0x54
    3ef0:	bl	0 <coda_type_set_read_type>
    3ef4:	ldr	r0, [r5, sl]
    3ef8:	mov	r2, #16
    3efc:	mov	r3, #0
    3f00:	ldr	r0, [r0, #84]	; 0x54
    3f04:	bl	0 <coda_type_set_bit_size>
    3f08:	ldr	r0, [r5, sl]
    3f0c:	movw	r1, #0
    3f10:	movt	r1, #0
    3f14:	ldr	r0, [r0, #84]	; 0x54
    3f18:	bl	0 <coda_type_set_description>
    3f1c:	mov	r0, #7
    3f20:	mov	r1, #2
    3f24:	bl	0 <coda_type_number_new>
    3f28:	ldr	r1, [r5, sl]
    3f2c:	str	r0, [r1, #88]	; 0x58
    3f30:	mov	r1, #1
    3f34:	bl	0 <coda_type_number_set_endianness>
    3f38:	ldr	r0, [r5, sl]
    3f3c:	mov	r1, #1
    3f40:	ldr	r0, [r0, #88]	; 0x58
    3f44:	bl	0 <coda_type_set_read_type>
    3f48:	ldr	r0, [r5, sl]
    3f4c:	mov	r2, #8
    3f50:	mov	r3, #0
    3f54:	ldr	r0, [r0, #88]	; 0x58
    3f58:	bl	0 <coda_type_set_bit_size>
    3f5c:	ldr	r0, [r5, sl]
    3f60:	movw	r1, #0
    3f64:	movt	r1, #0
    3f68:	ldr	r0, [r0, #88]	; 0x58
    3f6c:	bl	0 <coda_type_set_description>
    3f70:	mov	r0, #7
    3f74:	mov	r1, #2
    3f78:	bl	0 <coda_type_number_new>
    3f7c:	ldr	r1, [r5, sl]
    3f80:	str	r0, [r1, #92]	; 0x5c
    3f84:	mov	r1, #1
    3f88:	bl	0 <coda_type_number_set_endianness>
    3f8c:	ldr	r0, [r5, sl]
    3f90:	mov	r1, #1
    3f94:	ldr	r0, [r0, #92]	; 0x5c
    3f98:	bl	0 <coda_type_set_read_type>
    3f9c:	ldr	r0, [r5, sl]
    3fa0:	mov	r2, #8
    3fa4:	mov	r3, #0
    3fa8:	ldr	r0, [r0, #92]	; 0x5c
    3fac:	bl	0 <coda_type_set_bit_size>
    3fb0:	ldr	r0, [r5, sl]
    3fb4:	movw	r1, #0
    3fb8:	movt	r1, #0
    3fbc:	ldr	r0, [r0, #92]	; 0x5c
    3fc0:	bl	0 <coda_type_set_description>
    3fc4:	mov	r0, #7
    3fc8:	mov	r1, #2
    3fcc:	bl	0 <coda_type_number_new>
    3fd0:	ldr	r1, [r5, sl]
    3fd4:	str	r0, [r1, #96]	; 0x60
    3fd8:	mov	r1, #1
    3fdc:	bl	0 <coda_type_number_set_endianness>
    3fe0:	ldr	r0, [r5, sl]
    3fe4:	mov	r1, #1
    3fe8:	ldr	r0, [r0, #96]	; 0x60
    3fec:	bl	0 <coda_type_set_read_type>
    3ff0:	ldr	r0, [r5, sl]
    3ff4:	mov	r2, #8
    3ff8:	mov	r3, #0
    3ffc:	ldr	r0, [r0, #96]	; 0x60
    4000:	bl	0 <coda_type_set_bit_size>
    4004:	ldr	r0, [r5, sl]
    4008:	movw	r1, #0
    400c:	movt	r1, #0
    4010:	ldr	r0, [r0, #96]	; 0x60
    4014:	bl	0 <coda_type_set_description>
    4018:	mov	r0, #7
    401c:	mov	r1, #2
    4020:	bl	0 <coda_type_number_new>
    4024:	ldr	r1, [r5, sl]
    4028:	str	r0, [r1, #100]	; 0x64
    402c:	mov	r1, #1
    4030:	bl	0 <coda_type_number_set_endianness>
    4034:	ldr	r0, [r5, sl]
    4038:	mov	r1, #2
    403c:	ldr	r0, [r0, #100]	; 0x64
    4040:	bl	0 <coda_type_set_read_type>
    4044:	ldr	r0, [r5, sl]
    4048:	mov	r2, #16
    404c:	mov	r3, #0
    4050:	ldr	r0, [r0, #100]	; 0x64
    4054:	bl	0 <coda_type_set_bit_size>
    4058:	ldr	r0, [r5, sl]
    405c:	movw	r1, #0
    4060:	movt	r1, #0
    4064:	ldr	r0, [r0, #100]	; 0x64
    4068:	bl	0 <coda_type_set_description>
    406c:	mov	r0, #7
    4070:	mov	r1, #2
    4074:	bl	0 <coda_type_number_new>
    4078:	ldr	r1, [r5, sl]
    407c:	str	r0, [r1, #104]	; 0x68
    4080:	mov	r1, #1
    4084:	bl	0 <coda_type_number_set_endianness>
    4088:	ldr	r0, [r5, sl]
    408c:	mov	r1, #1
    4090:	ldr	r0, [r0, #104]	; 0x68
    4094:	bl	0 <coda_type_set_read_type>
    4098:	ldr	r0, [r5, sl]
    409c:	mov	r2, #8
    40a0:	mov	r3, #0
    40a4:	ldr	r0, [r0, #104]	; 0x68
    40a8:	bl	0 <coda_type_set_bit_size>
    40ac:	ldr	r0, [r5, sl]
    40b0:	movw	r1, #0
    40b4:	movt	r1, #0
    40b8:	ldr	r0, [r0, #104]	; 0x68
    40bc:	bl	0 <coda_type_set_description>
    40c0:	mov	r0, #7
    40c4:	mov	r1, #2
    40c8:	bl	0 <coda_type_number_new>
    40cc:	ldr	r1, [r5, sl]
    40d0:	str	r0, [r1, #108]	; 0x6c
    40d4:	mov	r1, #1
    40d8:	bl	0 <coda_type_number_set_endianness>
    40dc:	ldr	r0, [r5, sl]
    40e0:	mov	r1, #1
    40e4:	ldr	r0, [r0, #108]	; 0x6c
    40e8:	bl	0 <coda_type_set_read_type>
    40ec:	ldr	r0, [r5, sl]
    40f0:	mov	r2, #8
    40f4:	mov	r3, #0
    40f8:	ldr	r0, [r0, #108]	; 0x6c
    40fc:	bl	0 <coda_type_set_bit_size>
    4100:	ldr	r0, [r5, sl]
    4104:	movw	r1, #0
    4108:	movt	r1, #0
    410c:	ldr	r0, [r0, #108]	; 0x6c
    4110:	bl	0 <coda_type_set_description>
    4114:	mov	r0, #7
    4118:	mov	r1, #2
    411c:	bl	0 <coda_type_number_new>
    4120:	ldr	r1, [r5, sl]
    4124:	str	r0, [r1, #112]	; 0x70
    4128:	mov	r1, #1
    412c:	bl	0 <coda_type_number_set_endianness>
    4130:	ldr	r0, [r5, sl]
    4134:	mov	r1, #1
    4138:	ldr	r0, [r0, #112]	; 0x70
    413c:	bl	0 <coda_type_set_read_type>
    4140:	ldr	r0, [r5, sl]
    4144:	mov	r2, #8
    4148:	mov	r3, #0
    414c:	ldr	r0, [r0, #112]	; 0x70
    4150:	bl	0 <coda_type_set_bit_size>
    4154:	ldr	r0, [r5, sl]
    4158:	movw	r1, #0
    415c:	movt	r1, #0
    4160:	ldr	r0, [r0, #112]	; 0x70
    4164:	bl	0 <coda_type_set_description>
    4168:	mov	r0, #7
    416c:	mov	r1, #2
    4170:	bl	0 <coda_type_number_new>
    4174:	ldr	r1, [r5, sl]
    4178:	str	r0, [r1, #116]	; 0x74
    417c:	mov	r1, #1
    4180:	bl	0 <coda_type_number_set_endianness>
    4184:	ldr	r0, [r5, sl]
    4188:	mov	r1, #1
    418c:	ldr	r0, [r0, #116]	; 0x74
    4190:	bl	0 <coda_type_set_read_type>
    4194:	ldr	r0, [r5, sl]
    4198:	mov	r2, #8
    419c:	mov	r3, #0
    41a0:	ldr	r0, [r0, #116]	; 0x74
    41a4:	bl	0 <coda_type_set_bit_size>
    41a8:	ldr	r0, [r5, sl]
    41ac:	movw	r1, #0
    41b0:	movt	r1, #0
    41b4:	ldr	r0, [r0, #116]	; 0x74
    41b8:	bl	0 <coda_type_set_description>
    41bc:	mov	r0, #7
    41c0:	mov	r1, #2
    41c4:	bl	0 <coda_type_number_new>
    41c8:	ldr	r1, [r5, sl]
    41cc:	str	r0, [r1, #120]	; 0x78
    41d0:	mov	r1, #1
    41d4:	bl	0 <coda_type_number_set_endianness>
    41d8:	ldr	r0, [r5, sl]
    41dc:	mov	r1, #1
    41e0:	ldr	r0, [r0, #120]	; 0x78
    41e4:	bl	0 <coda_type_set_read_type>
    41e8:	ldr	r0, [r5, sl]
    41ec:	mov	r2, #8
    41f0:	mov	r3, #0
    41f4:	ldr	r0, [r0, #120]	; 0x78
    41f8:	bl	0 <coda_type_set_bit_size>
    41fc:	ldr	r0, [r5, sl]
    4200:	movw	r1, #0
    4204:	movt	r1, #0
    4208:	ldr	r0, [r0, #120]	; 0x78
    420c:	bl	0 <coda_type_set_description>
    4210:	mov	r0, #7
    4214:	mov	r1, #2
    4218:	bl	0 <coda_type_number_new>
    421c:	ldr	r1, [r5, sl]
    4220:	str	r0, [r1, #124]	; 0x7c
    4224:	mov	r1, #1
    4228:	bl	0 <coda_type_number_set_endianness>
    422c:	ldr	r0, [r5, sl]
    4230:	mov	r1, #1
    4234:	ldr	r0, [r0, #124]	; 0x7c
    4238:	bl	0 <coda_type_set_read_type>
    423c:	ldr	r0, [r5, sl]
    4240:	mov	r2, #8
    4244:	mov	r3, #0
    4248:	ldr	r0, [r0, #124]	; 0x7c
    424c:	bl	0 <coda_type_set_bit_size>
    4250:	ldr	r0, [r5, sl]
    4254:	movw	r1, #0
    4258:	movt	r1, #0
    425c:	ldr	r0, [r0, #124]	; 0x7c
    4260:	bl	0 <coda_type_set_description>
    4264:	mov	r0, #7
    4268:	bl	0 <coda_type_raw_new>
    426c:	ldr	r1, [r5, sl]
    4270:	str	r0, [r1, #128]	; 0x80
    4274:	movw	r1, #0
    4278:	movt	r1, #0
    427c:	bl	0 <coda_type_set_description>
    4280:	mov	r0, #7
    4284:	mov	r1, #2
    4288:	bl	0 <coda_type_number_new>
    428c:	ldr	r1, [r5, sl]
    4290:	str	r0, [r1, #132]	; 0x84
    4294:	mov	r1, #1
    4298:	bl	0 <coda_type_number_set_endianness>
    429c:	ldr	r0, [r5, sl]
    42a0:	mov	r1, #1
    42a4:	ldr	r0, [r0, #132]	; 0x84
    42a8:	bl	0 <coda_type_set_read_type>
    42ac:	ldr	r0, [r5, sl]
    42b0:	mov	r2, #8
    42b4:	mov	r3, #0
    42b8:	ldr	r0, [r0, #132]	; 0x84
    42bc:	bl	0 <coda_type_set_bit_size>
    42c0:	ldr	r0, [r5, sl]
    42c4:	movw	r1, #0
    42c8:	movt	r1, #0
    42cc:	ldr	r0, [r0, #132]	; 0x84
    42d0:	bl	0 <coda_type_set_description>
    42d4:	mov	r0, #7
    42d8:	mov	r1, #2
    42dc:	bl	0 <coda_type_number_new>
    42e0:	ldr	r1, [r5, sl]
    42e4:	str	r0, [r1, #136]	; 0x88
    42e8:	mov	r1, #1
    42ec:	bl	0 <coda_type_number_set_endianness>
    42f0:	ldr	r0, [r5, sl]
    42f4:	mov	r1, #1
    42f8:	ldr	r0, [r0, #136]	; 0x88
    42fc:	bl	0 <coda_type_set_read_type>
    4300:	ldr	r0, [r5, sl]
    4304:	mov	r2, #8
    4308:	mov	r3, #0
    430c:	ldr	r0, [r0, #136]	; 0x88
    4310:	bl	0 <coda_type_set_bit_size>
    4314:	ldr	r0, [r5, sl]
    4318:	movw	r1, #0
    431c:	movt	r1, #0
    4320:	ldr	r0, [r0, #136]	; 0x88
    4324:	bl	0 <coda_type_set_description>
    4328:	mov	r0, #7
    432c:	mov	r1, #2
    4330:	bl	0 <coda_type_number_new>
    4334:	ldr	r1, [r5, sl]
    4338:	str	r0, [r1, #140]	; 0x8c
    433c:	mov	r1, #1
    4340:	bl	0 <coda_type_number_set_endianness>
    4344:	ldr	r0, [r5, sl]
    4348:	mov	r1, #1
    434c:	ldr	r0, [r0, #140]	; 0x8c
    4350:	bl	0 <coda_type_set_read_type>
    4354:	ldr	r0, [r5, sl]
    4358:	mov	r2, #8
    435c:	mov	r3, #0
    4360:	ldr	r0, [r0, #140]	; 0x8c
    4364:	bl	0 <coda_type_set_bit_size>
    4368:	mov	r0, #7
    436c:	mov	r1, #2
    4370:	bl	0 <coda_type_number_new>
    4374:	ldr	r1, [r5, sl]
    4378:	str	r0, [r1, #144]	; 0x90
    437c:	mov	r1, #1
    4380:	bl	0 <coda_type_number_set_endianness>
    4384:	ldr	r0, [r5, sl]
    4388:	mov	r1, #1
    438c:	ldr	r0, [r0, #144]	; 0x90
    4390:	bl	0 <coda_type_set_read_type>
    4394:	ldr	r0, [r5, sl]
    4398:	mov	r2, #8
    439c:	mov	r3, #0
    43a0:	ldr	r0, [r0, #144]	; 0x90
    43a4:	bl	0 <coda_type_set_bit_size>
    43a8:	mov	r0, #7
    43ac:	mov	r1, #2
    43b0:	bl	0 <coda_type_number_new>
    43b4:	ldr	r1, [r5, sl]
    43b8:	str	r0, [r1, #148]	; 0x94
    43bc:	mov	r1, #1
    43c0:	bl	0 <coda_type_number_set_endianness>
    43c4:	ldr	r0, [r5, sl]
    43c8:	mov	r1, #5
    43cc:	ldr	r0, [r0, #148]	; 0x94
    43d0:	bl	0 <coda_type_set_read_type>
    43d4:	ldr	r0, [r5, sl]
    43d8:	mov	r2, #32
    43dc:	mov	r3, #0
    43e0:	ldr	r0, [r0, #148]	; 0x94
    43e4:	bl	0 <coda_type_set_bit_size>
    43e8:	mov	r0, #7
    43ec:	mov	r1, #2
    43f0:	bl	0 <coda_type_number_new>
    43f4:	ldr	r1, [r5, sl]
    43f8:	str	r0, [r1, #152]	; 0x98
    43fc:	mov	r1, #1
    4400:	bl	0 <coda_type_number_set_endianness>
    4404:	ldr	r0, [r5, sl]
    4408:	mov	r1, #1
    440c:	ldr	r0, [r0, #152]	; 0x98
    4410:	bl	0 <coda_type_set_read_type>
    4414:	ldr	r0, [r5, sl]
    4418:	mov	r2, #8
    441c:	mov	r3, #0
    4420:	ldr	r0, [r0, #152]	; 0x98
    4424:	bl	0 <coda_type_set_bit_size>
    4428:	mov	r0, #7
    442c:	mov	r1, #2
    4430:	bl	0 <coda_type_number_new>
    4434:	ldr	r1, [r5, sl]
    4438:	str	r0, [r1, #156]	; 0x9c
    443c:	mov	r1, #1
    4440:	bl	0 <coda_type_number_set_endianness>
    4444:	ldr	r0, [r5, sl]
    4448:	mov	r1, #5
    444c:	ldr	r0, [r0, #156]	; 0x9c
    4450:	bl	0 <coda_type_set_read_type>
    4454:	ldr	r0, [r5, sl]
    4458:	mov	r2, #32
    445c:	mov	r3, #0
    4460:	ldr	r0, [r0, #156]	; 0x9c
    4464:	bl	0 <coda_type_set_bit_size>
    4468:	mov	r0, #7
    446c:	mov	r1, #2
    4470:	bl	0 <coda_type_number_new>
    4474:	ldr	r1, [r5, sl]
    4478:	str	r0, [r1, #160]	; 0xa0
    447c:	mov	r1, #1
    4480:	bl	0 <coda_type_number_set_endianness>
    4484:	ldr	r0, [r5, sl]
    4488:	mov	r1, #1
    448c:	ldr	r0, [r0, #160]	; 0xa0
    4490:	bl	0 <coda_type_set_read_type>
    4494:	ldr	r0, [r5, sl]
    4498:	mov	r2, #8
    449c:	mov	r3, #0
    44a0:	ldr	r0, [r0, #160]	; 0xa0
    44a4:	bl	0 <coda_type_set_bit_size>
    44a8:	mov	r0, #7
    44ac:	mov	r1, #2
    44b0:	bl	0 <coda_type_number_new>
    44b4:	ldr	r1, [r5, sl]
    44b8:	str	r0, [r1, #164]	; 0xa4
    44bc:	mov	r1, #1
    44c0:	bl	0 <coda_type_number_set_endianness>
    44c4:	ldr	r0, [r5, sl]
    44c8:	mov	r1, #5
    44cc:	ldr	r0, [r0, #164]	; 0xa4
    44d0:	bl	0 <coda_type_set_read_type>
    44d4:	ldr	r0, [r5, sl]
    44d8:	mov	r2, #32
    44dc:	mov	r3, #0
    44e0:	ldr	r0, [r0, #164]	; 0xa4
    44e4:	bl	0 <coda_type_set_bit_size>
    44e8:	mov	r0, #7
    44ec:	mov	r1, #2
    44f0:	bl	0 <coda_type_number_new>
    44f4:	ldr	r1, [r5, sl]
    44f8:	str	r0, [r1, #168]	; 0xa8
    44fc:	mov	r1, #1
    4500:	bl	0 <coda_type_number_set_endianness>
    4504:	ldr	r0, [r5, sl]
    4508:	mov	r1, #3
    450c:	ldr	r0, [r0, #168]	; 0xa8
    4510:	bl	0 <coda_type_set_read_type>
    4514:	ldr	r0, [r5, sl]
    4518:	mov	r2, #16
    451c:	mov	r3, #0
    4520:	ldr	r0, [r0, #168]	; 0xa8
    4524:	bl	0 <coda_type_set_bit_size>
    4528:	ldr	r0, [r5, sl]
    452c:	movw	r1, #0
    4530:	movt	r1, #0
    4534:	ldr	r0, [r0, #168]	; 0xa8
    4538:	bl	0 <coda_type_set_description>
    453c:	mov	r0, #7
    4540:	mov	r1, #2
    4544:	bl	0 <coda_type_number_new>
    4548:	ldr	r1, [r5, sl]
    454c:	str	r0, [r1, #172]	; 0xac
    4550:	mov	r1, #1
    4554:	bl	0 <coda_type_number_set_endianness>
    4558:	ldr	r0, [r5, sl]
    455c:	mov	r1, #3
    4560:	ldr	r0, [r0, #172]	; 0xac
    4564:	bl	0 <coda_type_set_read_type>
    4568:	ldr	r0, [r5, sl]
    456c:	mov	r2, #16
    4570:	mov	r3, #0
    4574:	ldr	r0, [r0, #172]	; 0xac
    4578:	bl	0 <coda_type_set_bit_size>
    457c:	ldr	r0, [r5, sl]
    4580:	movw	r1, #0
    4584:	movt	r1, #0
    4588:	ldr	r0, [r0, #172]	; 0xac
    458c:	bl	0 <coda_type_set_description>
    4590:	mov	r0, #7
    4594:	mov	r1, #2
    4598:	bl	0 <coda_type_number_new>
    459c:	ldr	r1, [r5, sl]
    45a0:	str	r0, [r1, #176]	; 0xb0
    45a4:	mov	r1, #1
    45a8:	bl	0 <coda_type_number_set_endianness>
    45ac:	ldr	r0, [r5, sl]
    45b0:	mov	r1, #5
    45b4:	ldr	r0, [r0, #176]	; 0xb0
    45b8:	bl	0 <coda_type_set_read_type>
    45bc:	ldr	r0, [r5, sl]
    45c0:	mov	r2, #32
    45c4:	mov	r3, #0
    45c8:	ldr	r0, [r0, #176]	; 0xb0
    45cc:	bl	0 <coda_type_set_bit_size>
    45d0:	mov	r0, #7
    45d4:	mov	r1, #2
    45d8:	bl	0 <coda_type_number_new>
    45dc:	ldr	r1, [r5, sl]
    45e0:	str	r0, [r1, #180]	; 0xb4
    45e4:	mov	r1, #1
    45e8:	bl	0 <coda_type_number_set_endianness>
    45ec:	ldr	r0, [r5, sl]
    45f0:	mov	r1, #5
    45f4:	ldr	r0, [r0, #180]	; 0xb4
    45f8:	bl	0 <coda_type_set_read_type>
    45fc:	ldr	r0, [r5, sl]
    4600:	mov	r2, #32
    4604:	mov	r3, #0
    4608:	ldr	r0, [r0, #180]	; 0xb4
    460c:	bl	0 <coda_type_set_bit_size>
    4610:	mov	r0, #7
    4614:	mov	r1, #2
    4618:	bl	0 <coda_type_number_new>
    461c:	ldr	r1, [r5, sl]
    4620:	str	r0, [r1, #184]	; 0xb8
    4624:	mov	r1, #1
    4628:	bl	0 <coda_type_number_set_endianness>
    462c:	ldr	r0, [r5, sl]
    4630:	mov	r1, #4
    4634:	ldr	r0, [r0, #184]	; 0xb8
    4638:	bl	0 <coda_type_set_read_type>
    463c:	ldr	r0, [r5, sl]
    4640:	mov	r2, #32
    4644:	mov	r3, #0
    4648:	ldr	r0, [r0, #184]	; 0xb8
    464c:	bl	0 <coda_type_set_bit_size>
    4650:	ldr	r0, [r5, sl]
    4654:	movw	r1, #0
    4658:	movt	r1, #0
    465c:	ldr	r0, [r0, #184]	; 0xb8
    4660:	bl	0 <coda_type_set_description>
    4664:	mov	r0, #7
    4668:	mov	r1, #2
    466c:	bl	0 <coda_type_number_new>
    4670:	ldr	r1, [r5, sl]
    4674:	str	r0, [r1, #188]	; 0xbc
    4678:	mov	r1, #1
    467c:	bl	0 <coda_type_number_set_endianness>
    4680:	ldr	r0, [r5, sl]
    4684:	mov	r1, #4
    4688:	ldr	r0, [r0, #188]	; 0xbc
    468c:	bl	0 <coda_type_set_read_type>
    4690:	ldr	r0, [r5, sl]
    4694:	mov	r2, #32
    4698:	mov	r3, #0
    469c:	ldr	r0, [r0, #188]	; 0xbc
    46a0:	bl	0 <coda_type_set_bit_size>
    46a4:	ldr	r0, [r5, sl]
    46a8:	movw	r1, #0
    46ac:	movt	r1, #0
    46b0:	ldr	r0, [r0, #188]	; 0xbc
    46b4:	bl	0 <coda_type_set_description>
    46b8:	mov	r0, #7
    46bc:	mov	r1, #2
    46c0:	bl	0 <coda_type_number_new>
    46c4:	ldr	r1, [r5, sl]
    46c8:	str	r0, [r1, #192]	; 0xc0
    46cc:	mov	r1, #1
    46d0:	bl	0 <coda_type_number_set_endianness>
    46d4:	ldr	r0, [r5, sl]
    46d8:	mov	r1, #1
    46dc:	ldr	r0, [r0, #192]	; 0xc0
    46e0:	bl	0 <coda_type_set_read_type>
    46e4:	ldr	r0, [r5, sl]
    46e8:	mov	r2, #8
    46ec:	mov	r3, #0
    46f0:	ldr	r0, [r0, #192]	; 0xc0
    46f4:	bl	0 <coda_type_set_bit_size>
    46f8:	ldr	r0, [r5, sl]
    46fc:	movw	r1, #0
    4700:	movt	r1, #0
    4704:	ldr	r0, [r0, #192]	; 0xc0
    4708:	bl	0 <coda_type_set_description>
    470c:	mov	r0, #7
    4710:	mov	r1, #2
    4714:	bl	0 <coda_type_number_new>
    4718:	ldr	r1, [r5, sl]
    471c:	str	r0, [r1, #196]	; 0xc4
    4720:	mov	r1, #1
    4724:	bl	0 <coda_type_number_set_endianness>
    4728:	ldr	r0, [r5, sl]
    472c:	mov	r1, #4
    4730:	ldr	r0, [r0, #196]	; 0xc4
    4734:	bl	0 <coda_type_set_read_type>
    4738:	ldr	r0, [r5, sl]
    473c:	mov	r2, #32
    4740:	mov	r3, #0
    4744:	ldr	r0, [r0, #196]	; 0xc4
    4748:	bl	0 <coda_type_set_bit_size>
    474c:	ldr	r0, [r5, sl]
    4750:	movw	r1, #0
    4754:	movt	r1, #0
    4758:	ldr	r0, [r0, #196]	; 0xc4
    475c:	bl	0 <coda_type_set_description>
    4760:	mov	r0, #7
    4764:	mov	r1, #2
    4768:	bl	0 <coda_type_number_new>
    476c:	ldr	r1, [r5, sl]
    4770:	str	r0, [r1, #200]	; 0xc8
    4774:	mov	r1, #1
    4778:	bl	0 <coda_type_number_set_endianness>
    477c:	ldr	r0, [r5, sl]
    4780:	mov	r1, #4
    4784:	ldr	r0, [r0, #200]	; 0xc8
    4788:	bl	0 <coda_type_set_read_type>
    478c:	ldr	r0, [r5, sl]
    4790:	mov	r2, #32
    4794:	mov	r3, #0
    4798:	ldr	r0, [r0, #200]	; 0xc8
    479c:	bl	0 <coda_type_set_bit_size>
    47a0:	ldr	r0, [r5, sl]
    47a4:	movw	r1, #0
    47a8:	movt	r1, #0
    47ac:	ldr	r0, [r0, #200]	; 0xc8
    47b0:	bl	0 <coda_type_set_description>
    47b4:	mov	r0, #7
    47b8:	mov	r1, #2
    47bc:	bl	0 <coda_type_number_new>
    47c0:	ldr	r1, [r5, sl]
    47c4:	str	r0, [r1, #204]	; 0xcc
    47c8:	mov	r1, #1
    47cc:	bl	0 <coda_type_number_set_endianness>
    47d0:	ldr	r0, [r5, sl]
    47d4:	mov	r1, #3
    47d8:	ldr	r0, [r0, #204]	; 0xcc
    47dc:	bl	0 <coda_type_set_read_type>
    47e0:	ldr	r0, [r5, sl]
    47e4:	mov	r2, #16
    47e8:	mov	r3, #0
    47ec:	ldr	r0, [r0, #204]	; 0xcc
    47f0:	bl	0 <coda_type_set_bit_size>
    47f4:	ldr	r0, [r5, sl]
    47f8:	movw	r1, #0
    47fc:	movt	r1, #0
    4800:	ldr	r0, [r0, #204]	; 0xcc
    4804:	bl	0 <coda_type_set_description>
    4808:	mov	r0, #7
    480c:	mov	r1, #2
    4810:	bl	0 <coda_type_number_new>
    4814:	ldr	r1, [r5, sl]
    4818:	str	r0, [r1, #208]	; 0xd0
    481c:	mov	r1, #1
    4820:	bl	0 <coda_type_number_set_endianness>
    4824:	ldr	r0, [r5, sl]
    4828:	mov	r1, #3
    482c:	ldr	r0, [r0, #208]	; 0xd0
    4830:	bl	0 <coda_type_set_read_type>
    4834:	ldr	r0, [r5, sl]
    4838:	mov	r2, #16
    483c:	mov	r3, #0
    4840:	ldr	r0, [r0, #208]	; 0xd0
    4844:	bl	0 <coda_type_set_bit_size>
    4848:	ldr	r0, [r5, sl]
    484c:	movw	r1, #0
    4850:	movt	r1, #0
    4854:	ldr	r0, [r0, #208]	; 0xd0
    4858:	bl	0 <coda_type_set_description>
    485c:	mov	r0, #7
    4860:	mov	r1, #2
    4864:	bl	0 <coda_type_number_new>
    4868:	ldr	r1, [r5, sl]
    486c:	str	r0, [r1, #212]	; 0xd4
    4870:	mov	r1, #1
    4874:	bl	0 <coda_type_number_set_endianness>
    4878:	ldr	r0, [r5, sl]
    487c:	mov	r1, #3
    4880:	ldr	r0, [r0, #212]	; 0xd4
    4884:	bl	0 <coda_type_set_read_type>
    4888:	ldr	r0, [r5, sl]
    488c:	mov	r2, #16
    4890:	mov	r3, #0
    4894:	ldr	r0, [r0, #212]	; 0xd4
    4898:	bl	0 <coda_type_set_bit_size>
    489c:	ldr	r0, [r5, sl]
    48a0:	movw	r1, #0
    48a4:	movt	r1, #0
    48a8:	ldr	r0, [r0, #212]	; 0xd4
    48ac:	bl	0 <coda_type_set_description>
    48b0:	mov	r0, #7
    48b4:	mov	r1, #2
    48b8:	bl	0 <coda_type_number_new>
    48bc:	ldr	r1, [r5, sl]
    48c0:	str	r0, [r1, #216]	; 0xd8
    48c4:	mov	r1, #1
    48c8:	bl	0 <coda_type_number_set_endianness>
    48cc:	ldr	r0, [r5, sl]
    48d0:	mov	r1, #1
    48d4:	ldr	r0, [r0, #216]	; 0xd8
    48d8:	bl	0 <coda_type_set_read_type>
    48dc:	ldr	r0, [r5, sl]
    48e0:	mov	r2, #8
    48e4:	mov	r3, #0
    48e8:	ldr	r0, [r0, #216]	; 0xd8
    48ec:	bl	0 <coda_type_set_bit_size>
    48f0:	ldr	r0, [r5, sl]
    48f4:	movw	r1, #0
    48f8:	movt	r1, #0
    48fc:	ldr	r0, [r0, #216]	; 0xd8
    4900:	bl	0 <coda_type_set_description>
    4904:	mov	r0, #7
    4908:	mov	r1, #3
    490c:	bl	0 <coda_type_number_new>
    4910:	ldr	r1, [r5, sl]
    4914:	str	r0, [r1, #220]	; 0xdc
    4918:	mov	r1, #1
    491c:	bl	0 <coda_type_number_set_endianness>
    4920:	ldr	r0, [r5, sl]
    4924:	mov	r1, #8
    4928:	ldr	r0, [r0, #220]	; 0xdc
    492c:	bl	0 <coda_type_set_read_type>
    4930:	ldr	r0, [r5, sl]
    4934:	mov	r2, #32
    4938:	mov	r3, #0
    493c:	ldr	r0, [r0, #220]	; 0xdc
    4940:	bl	0 <coda_type_set_bit_size>
    4944:	mov	r0, #7
    4948:	bl	0 <coda_type_array_new>
    494c:	ldr	r1, [r5, sl]
    4950:	str	r0, [r1, #224]	; 0xe0
    4954:	movw	r1, #0
    4958:	movt	r1, #0
    495c:	bl	0 <coda_type_set_description>
    4960:	ldr	r0, [r5, sl]
    4964:	ldr	r1, [r0, #220]	; 0xdc
    4968:	ldr	r0, [r0, #224]	; 0xe0
    496c:	bl	0 <coda_type_array_set_base_type>
    4970:	ldr	r0, [r5, sl]
    4974:	mov	r1, #0
    4978:	ldr	r0, [r0, #224]	; 0xe0
    497c:	bl	0 <coda_type_array_add_variable_dimension>
    4980:	mov	r0, #7
    4984:	mov	r1, #2
    4988:	bl	0 <coda_type_number_new>
    498c:	ldr	r1, [r5, sl]
    4990:	str	r0, [r1, #228]	; 0xe4
    4994:	mov	r1, #1
    4998:	bl	0 <coda_type_number_set_endianness>
    499c:	ldr	r0, [r5, sl]
    49a0:	mov	r1, #3
    49a4:	ldr	r0, [r0, #228]	; 0xe4
    49a8:	bl	0 <coda_type_set_read_type>
    49ac:	ldr	r0, [r5, sl]
    49b0:	mov	r2, #16
    49b4:	mov	r3, #0
    49b8:	ldr	r0, [r0, #228]	; 0xe4
    49bc:	bl	0 <coda_type_set_bit_size>
    49c0:	mov	r0, #7
    49c4:	bl	0 <coda_type_array_new>
    49c8:	ldr	r1, [r5, sl]
    49cc:	str	r0, [r1, #232]	; 0xe8
    49d0:	movw	r1, #0
    49d4:	movt	r1, #0
    49d8:	bl	0 <coda_type_set_description>
    49dc:	ldr	r0, [r5, sl]
    49e0:	ldr	r1, [r0, #228]	; 0xe4
    49e4:	ldr	r0, [r0, #232]	; 0xe8
    49e8:	bl	0 <coda_type_array_set_base_type>
    49ec:	ldr	r0, [r5, sl]
    49f0:	mov	r1, #0
    49f4:	ldr	r0, [r0, #232]	; 0xe8
    49f8:	bl	0 <coda_type_array_add_variable_dimension>
    49fc:	mov	r0, #7
    4a00:	mov	r1, #2
    4a04:	bl	0 <coda_type_number_new>
    4a08:	ldr	r1, [r5, sl]
    4a0c:	str	r0, [r1, #236]	; 0xec
    4a10:	mov	r1, #1
    4a14:	bl	0 <coda_type_number_set_endianness>
    4a18:	ldr	r0, [r5, sl]
    4a1c:	mov	r1, #1
    4a20:	ldr	r0, [r0, #236]	; 0xec
    4a24:	bl	0 <coda_type_set_read_type>
    4a28:	ldr	r0, [r5, sl]
    4a2c:	mov	r2, #8
    4a30:	mov	r3, #0
    4a34:	ldr	r0, [r0, #236]	; 0xec
    4a38:	bl	0 <coda_type_set_bit_size>
    4a3c:	ldr	r0, [r5, sl]
    4a40:	movw	r9, #0
    4a44:	movt	r9, #0
    4a48:	mov	r1, r9
    4a4c:	ldr	r0, [r0, #236]	; 0xec
    4a50:	bl	0 <coda_type_set_description>
    4a54:	mov	r0, #7
    4a58:	mov	r1, #2
    4a5c:	bl	0 <coda_type_number_new>
    4a60:	ldr	r1, [r5, sl]
    4a64:	str	r0, [r1, #240]	; 0xf0
    4a68:	mov	r1, #1
    4a6c:	bl	0 <coda_type_number_set_endianness>
    4a70:	ldr	r0, [r5, sl]
    4a74:	mov	r1, #5
    4a78:	ldr	r0, [r0, #240]	; 0xf0
    4a7c:	bl	0 <coda_type_set_read_type>
    4a80:	ldr	r0, [r5, sl]
    4a84:	mov	r2, #32
    4a88:	mov	r3, #0
    4a8c:	ldr	r0, [r0, #240]	; 0xf0
    4a90:	bl	0 <coda_type_set_bit_size>
    4a94:	ldr	r0, [r5, sl]
    4a98:	movw	r6, #0
    4a9c:	movt	r6, #0
    4aa0:	mov	r1, r6
    4aa4:	ldr	r0, [r0, #240]	; 0xf0
    4aa8:	bl	0 <coda_type_set_description>
    4aac:	mov	r0, #7
    4ab0:	mov	r1, #2
    4ab4:	bl	0 <coda_type_number_new>
    4ab8:	ldr	r1, [r5, sl]
    4abc:	str	r0, [r1, #244]	; 0xf4
    4ac0:	mov	r1, #1
    4ac4:	bl	0 <coda_type_number_set_endianness>
    4ac8:	ldr	r0, [r5, sl]
    4acc:	mov	r1, #3
    4ad0:	ldr	r0, [r0, #244]	; 0xf4
    4ad4:	bl	0 <coda_type_set_read_type>
    4ad8:	ldr	r0, [r5, sl]
    4adc:	mov	r2, #16
    4ae0:	mov	r3, #0
    4ae4:	ldr	r0, [r0, #244]	; 0xf4
    4ae8:	bl	0 <coda_type_set_bit_size>
    4aec:	ldr	r0, [r5, sl]
    4af0:	movw	r1, #0
    4af4:	movt	r1, #0
    4af8:	ldr	r0, [r0, #244]	; 0xf4
    4afc:	bl	0 <coda_type_set_description>
    4b00:	mov	r0, #7
    4b04:	mov	r1, #2
    4b08:	bl	0 <coda_type_number_new>
    4b0c:	ldr	r1, [r5, sl]
    4b10:	str	r0, [r1, #248]	; 0xf8
    4b14:	mov	r1, #1
    4b18:	bl	0 <coda_type_number_set_endianness>
    4b1c:	ldr	r0, [r5, sl]
    4b20:	mov	r1, #1
    4b24:	ldr	r0, [r0, #248]	; 0xf8
    4b28:	bl	0 <coda_type_set_read_type>
    4b2c:	ldr	r0, [r5, sl]
    4b30:	mov	r2, #8
    4b34:	mov	r3, #0
    4b38:	ldr	r0, [r0, #248]	; 0xf8
    4b3c:	bl	0 <coda_type_set_bit_size>
    4b40:	ldr	r0, [r5, sl]
    4b44:	movw	r1, #0
    4b48:	movt	r1, #0
    4b4c:	ldr	r0, [r0, #248]	; 0xf8
    4b50:	bl	0 <coda_type_set_description>
    4b54:	mov	r0, #7
    4b58:	mov	r1, #2
    4b5c:	bl	0 <coda_type_number_new>
    4b60:	ldr	r1, [r5, sl]
    4b64:	str	r0, [r1, #252]	; 0xfc
    4b68:	mov	r1, #1
    4b6c:	bl	0 <coda_type_number_set_endianness>
    4b70:	ldr	r0, [r5, sl]
    4b74:	mov	r1, #2
    4b78:	ldr	r0, [r0, #252]	; 0xfc
    4b7c:	bl	0 <coda_type_set_read_type>
    4b80:	ldr	r0, [r5, sl]
    4b84:	mov	r2, #16
    4b88:	mov	r3, #0
    4b8c:	ldr	r0, [r0, #252]	; 0xfc
    4b90:	bl	0 <coda_type_set_bit_size>
    4b94:	ldr	r0, [r5, sl]
    4b98:	movw	r1, #0
    4b9c:	movt	r1, #0
    4ba0:	ldr	r0, [r0, #252]	; 0xfc
    4ba4:	bl	0 <coda_type_set_description>
    4ba8:	mov	r0, #7
    4bac:	mov	r1, #3
    4bb0:	bl	0 <coda_type_number_new>
    4bb4:	ldr	r1, [r5, sl]
    4bb8:	str	r0, [r1, #256]	; 0x100
    4bbc:	mov	r1, #1
    4bc0:	bl	0 <coda_type_number_set_endianness>
    4bc4:	ldr	r0, [r5, sl]
    4bc8:	mov	r1, #8
    4bcc:	ldr	r0, [r0, #256]	; 0x100
    4bd0:	bl	0 <coda_type_set_read_type>
    4bd4:	ldr	r0, [r5, sl]
    4bd8:	mov	r2, #32
    4bdc:	mov	r3, #0
    4be0:	ldr	r0, [r0, #256]	; 0x100
    4be4:	bl	0 <coda_type_set_bit_size>
    4be8:	ldr	r0, [r5, sl]
    4bec:	movw	r1, #0
    4bf0:	movt	r1, #0
    4bf4:	ldr	r0, [r0, #256]	; 0x100
    4bf8:	bl	0 <coda_type_set_description>
    4bfc:	mov	r0, #7
    4c00:	bl	0 <coda_type_array_new>
    4c04:	ldr	r1, [r5, sl]
    4c08:	str	r0, [r1, #260]	; 0x104
    4c0c:	mov	r0, #7
    4c10:	mov	r1, #3
    4c14:	bl	0 <coda_type_number_new>
    4c18:	mov	r1, #1
    4c1c:	mov	r8, r0
    4c20:	bl	0 <coda_type_number_set_endianness>
    4c24:	mov	r0, r8
    4c28:	mov	r1, #8
    4c2c:	bl	0 <coda_type_set_read_type>
    4c30:	mov	r0, r8
    4c34:	mov	r2, #32
    4c38:	mov	r3, #0
    4c3c:	bl	0 <coda_type_set_bit_size>
    4c40:	ldr	r0, [r5, sl]
    4c44:	mov	r1, r8
    4c48:	ldr	r0, [r0, #260]	; 0x104
    4c4c:	bl	0 <coda_type_array_set_base_type>
    4c50:	mov	r0, r8
    4c54:	bl	0 <coda_type_release>
    4c58:	ldr	r0, [r5, sl]
    4c5c:	mov	r1, #0
    4c60:	ldr	r0, [r0, #260]	; 0x104
    4c64:	bl	0 <coda_type_array_add_variable_dimension>
    4c68:	mov	r0, #7
    4c6c:	bl	0 <coda_type_record_new>
    4c70:	ldr	r1, [r5, sl]
    4c74:	str	r0, [r1, #264]	; 0x108
    4c78:	movw	r0, #0
    4c7c:	movt	r0, #0
    4c80:	bl	0 <coda_type_record_field_new>
    4c84:	mov	r7, r0
    4c88:	ldr	r0, [r5, sl]
    4c8c:	ldr	r1, [r0, #132]	; 0x84
    4c90:	mov	r0, r7
    4c94:	bl	0 <coda_type_record_field_set_type>
    4c98:	ldr	r0, [r5, sl]
    4c9c:	mov	r1, r7
    4ca0:	ldr	r0, [r0, #264]	; 0x108
    4ca4:	bl	0 <coda_type_record_add_field>
    4ca8:	movw	r0, #0
    4cac:	movt	r0, #0
    4cb0:	bl	0 <coda_type_record_field_new>
    4cb4:	mov	r7, r0
    4cb8:	ldr	r0, [r5, sl]
    4cbc:	ldr	r1, [r0, #136]	; 0x88
    4cc0:	mov	r0, r7
    4cc4:	bl	0 <coda_type_record_field_set_type>
    4cc8:	ldr	r0, [r5, sl]
    4ccc:	mov	r1, r7
    4cd0:	ldr	r0, [r0, #264]	; 0x108
    4cd4:	bl	0 <coda_type_record_add_field>
    4cd8:	movw	r0, #0
    4cdc:	movt	r0, #0
    4ce0:	bl	0 <coda_type_record_field_new>
    4ce4:	mov	r7, r0
    4ce8:	ldr	r0, [r5, sl]
    4cec:	ldr	r1, [r0, #168]	; 0xa8
    4cf0:	mov	r0, r7
    4cf4:	bl	0 <coda_type_record_field_set_type>
    4cf8:	ldr	r0, [r5, sl]
    4cfc:	mov	r1, r7
    4d00:	ldr	r0, [r0, #264]	; 0x108
    4d04:	bl	0 <coda_type_record_add_field>
    4d08:	movw	r0, #0
    4d0c:	movt	r0, #0
    4d10:	bl	0 <coda_type_record_field_new>
    4d14:	mov	r7, r0
    4d18:	ldr	r0, [r5, sl]
    4d1c:	ldr	r1, [r0, #172]	; 0xac
    4d20:	mov	r0, r7
    4d24:	bl	0 <coda_type_record_field_set_type>
    4d28:	ldr	r0, [r5, sl]
    4d2c:	mov	r1, r7
    4d30:	ldr	r0, [r0, #264]	; 0x108
    4d34:	bl	0 <coda_type_record_add_field>
    4d38:	movw	r0, #0
    4d3c:	movt	r0, #0
    4d40:	bl	0 <coda_type_record_field_new>
    4d44:	mov	r7, r0
    4d48:	ldr	r0, [r5, sl]
    4d4c:	ldr	r1, [r0, #184]	; 0xb8
    4d50:	mov	r0, r7
    4d54:	bl	0 <coda_type_record_field_set_type>
    4d58:	ldr	r0, [r5, sl]
    4d5c:	mov	r1, r7
    4d60:	ldr	r0, [r0, #264]	; 0x108
    4d64:	bl	0 <coda_type_record_add_field>
    4d68:	movw	r0, #0
    4d6c:	movt	r0, #0
    4d70:	bl	0 <coda_type_record_field_new>
    4d74:	mov	r7, r0
    4d78:	ldr	r0, [r5, sl]
    4d7c:	ldr	r1, [r0, #188]	; 0xbc
    4d80:	mov	r0, r7
    4d84:	bl	0 <coda_type_record_field_set_type>
    4d88:	ldr	r0, [r5, sl]
    4d8c:	mov	r1, r7
    4d90:	ldr	r0, [r0, #264]	; 0x108
    4d94:	bl	0 <coda_type_record_add_field>
    4d98:	movw	r0, #0
    4d9c:	movt	r0, #0
    4da0:	bl	0 <coda_type_record_field_new>
    4da4:	mov	r7, r0
    4da8:	ldr	r0, [r5, sl]
    4dac:	ldr	r1, [r0, #192]	; 0xc0
    4db0:	mov	r0, r7
    4db4:	bl	0 <coda_type_record_field_set_type>
    4db8:	ldr	r0, [r5, sl]
    4dbc:	mov	r1, r7
    4dc0:	ldr	r0, [r0, #264]	; 0x108
    4dc4:	bl	0 <coda_type_record_add_field>
    4dc8:	movw	r0, #0
    4dcc:	movt	r0, #0
    4dd0:	bl	0 <coda_type_record_field_new>
    4dd4:	mov	r7, r0
    4dd8:	ldr	r0, [r5, sl]
    4ddc:	ldr	r1, [r0, #196]	; 0xc4
    4de0:	mov	r0, r7
    4de4:	bl	0 <coda_type_record_field_set_type>
    4de8:	ldr	r0, [r5, sl]
    4dec:	mov	r1, r7
    4df0:	ldr	r0, [r0, #264]	; 0x108
    4df4:	bl	0 <coda_type_record_add_field>
    4df8:	movw	r0, #0
    4dfc:	movt	r0, #0
    4e00:	bl	0 <coda_type_record_field_new>
    4e04:	mov	r7, r0
    4e08:	ldr	r0, [r5, sl]
    4e0c:	ldr	r1, [r0, #200]	; 0xc8
    4e10:	mov	r0, r7
    4e14:	bl	0 <coda_type_record_field_set_type>
    4e18:	ldr	r0, [r5, sl]
    4e1c:	mov	r1, r7
    4e20:	ldr	r0, [r0, #264]	; 0x108
    4e24:	bl	0 <coda_type_record_add_field>
    4e28:	movw	r0, #0
    4e2c:	movt	r0, #0
    4e30:	bl	0 <coda_type_record_field_new>
    4e34:	mov	r7, r0
    4e38:	ldr	r0, [r5, sl]
    4e3c:	ldr	r1, [r0, #204]	; 0xcc
    4e40:	mov	r0, r7
    4e44:	bl	0 <coda_type_record_field_set_type>
    4e48:	ldr	r0, [r5, sl]
    4e4c:	mov	r1, r7
    4e50:	ldr	r0, [r0, #264]	; 0x108
    4e54:	bl	0 <coda_type_record_add_field>
    4e58:	movw	r0, #0
    4e5c:	movt	r0, #0
    4e60:	bl	0 <coda_type_record_field_new>
    4e64:	mov	r7, r0
    4e68:	ldr	r0, [r5, sl]
    4e6c:	ldr	r1, [r0, #208]	; 0xd0
    4e70:	mov	r0, r7
    4e74:	bl	0 <coda_type_record_field_set_type>
    4e78:	mov	r0, r7
    4e7c:	bl	0 <coda_type_record_field_set_optional>
    4e80:	ldr	r0, [r5, sl]
    4e84:	mov	r1, r7
    4e88:	ldr	r0, [r0, #264]	; 0x108
    4e8c:	bl	0 <coda_type_record_add_field>
    4e90:	movw	r0, #0
    4e94:	movt	r0, #0
    4e98:	bl	0 <coda_type_record_field_new>
    4e9c:	mov	r7, r0
    4ea0:	ldr	r0, [r5, sl]
    4ea4:	ldr	r1, [r0, #212]	; 0xd4
    4ea8:	mov	r0, r7
    4eac:	bl	0 <coda_type_record_field_set_type>
    4eb0:	mov	r0, r7
    4eb4:	bl	0 <coda_type_record_field_set_optional>
    4eb8:	ldr	r0, [r5, sl]
    4ebc:	mov	r1, r7
    4ec0:	ldr	r0, [r0, #264]	; 0x108
    4ec4:	bl	0 <coda_type_record_add_field>
    4ec8:	movw	r0, #0
    4ecc:	movt	r0, #0
    4ed0:	bl	0 <coda_type_record_field_new>
    4ed4:	mov	r7, r0
    4ed8:	ldr	r0, [r5, sl]
    4edc:	ldr	r1, [r0, #216]	; 0xd8
    4ee0:	mov	r0, r7
    4ee4:	bl	0 <coda_type_record_field_set_type>
    4ee8:	ldr	r0, [r5, sl]
    4eec:	mov	r1, r7
    4ef0:	ldr	r0, [r0, #264]	; 0x108
    4ef4:	bl	0 <coda_type_record_add_field>
    4ef8:	movw	r0, #0
    4efc:	movt	r0, #0
    4f00:	bl	0 <coda_type_record_field_new>
    4f04:	mov	r7, r0
    4f08:	ldr	r0, [r5, sl]
    4f0c:	ldr	r1, [r0, #224]	; 0xe0
    4f10:	mov	r0, r7
    4f14:	bl	0 <coda_type_record_field_set_type>
    4f18:	mov	r0, r7
    4f1c:	bl	0 <coda_type_record_field_set_optional>
    4f20:	ldr	r0, [r5, sl]
    4f24:	mov	r1, r7
    4f28:	ldr	r0, [r0, #264]	; 0x108
    4f2c:	bl	0 <coda_type_record_add_field>
    4f30:	movw	r0, #0
    4f34:	movt	r0, #0
    4f38:	bl	0 <coda_type_record_field_new>
    4f3c:	mov	r7, r0
    4f40:	ldr	r0, [r5, sl]
    4f44:	ldr	r1, [r0, #232]	; 0xe8
    4f48:	mov	r0, r7
    4f4c:	bl	0 <coda_type_record_field_set_type>
    4f50:	mov	r0, r7
    4f54:	bl	0 <coda_type_record_field_set_optional>
    4f58:	ldr	r0, [r5, sl]
    4f5c:	mov	r1, r7
    4f60:	ldr	r0, [r0, #264]	; 0x108
    4f64:	bl	0 <coda_type_record_add_field>
    4f68:	mov	r0, #7
    4f6c:	bl	0 <coda_type_record_new>
    4f70:	ldr	r1, [r5, sl]
    4f74:	str	r0, [r1, #268]	; 0x10c
    4f78:	movw	r0, #0
    4f7c:	movt	r0, #0
    4f80:	bl	0 <coda_type_record_field_new>
    4f84:	mov	r7, r0
    4f88:	ldr	r0, [r5, sl]
    4f8c:	ldr	r1, [r0, #248]	; 0xf8
    4f90:	mov	r0, r7
    4f94:	bl	0 <coda_type_record_field_set_type>
    4f98:	mov	r0, r7
    4f9c:	bl	0 <coda_type_record_field_set_hidden>
    4fa0:	ldr	r0, [r5, sl]
    4fa4:	mov	r1, r7
    4fa8:	ldr	r0, [r0, #268]	; 0x10c
    4fac:	bl	0 <coda_type_record_add_field>
    4fb0:	movw	r0, #0
    4fb4:	movt	r0, #0
    4fb8:	bl	0 <coda_type_record_field_new>
    4fbc:	mov	r7, r0
    4fc0:	ldr	r0, [r5, sl]
    4fc4:	ldr	r1, [r0, #252]	; 0xfc
    4fc8:	mov	r0, r7
    4fcc:	bl	0 <coda_type_record_field_set_type>
    4fd0:	mov	r0, r7
    4fd4:	bl	0 <coda_type_record_field_set_hidden>
    4fd8:	ldr	r0, [r5, sl]
    4fdc:	mov	r1, r7
    4fe0:	ldr	r0, [r0, #268]	; 0x10c
    4fe4:	bl	0 <coda_type_record_add_field>
    4fe8:	movw	r0, #0
    4fec:	movt	r0, #0
    4ff0:	bl	0 <coda_type_record_field_new>
    4ff4:	mov	r7, r0
    4ff8:	ldr	r0, [r5, sl]
    4ffc:	ldr	r1, [r0, #256]	; 0x100
    5000:	mov	r0, r7
    5004:	bl	0 <coda_type_record_field_set_type>
    5008:	mov	r0, r7
    500c:	bl	0 <coda_type_record_field_set_hidden>
    5010:	ldr	r0, [r5, sl]
    5014:	mov	r1, r7
    5018:	ldr	r0, [r0, #268]	; 0x10c
    501c:	bl	0 <coda_type_record_add_field>
    5020:	movw	r0, #0
    5024:	movt	r0, #0
    5028:	bl	0 <coda_type_record_field_new>
    502c:	mov	r7, r0
    5030:	ldr	r0, [r5, sl]
    5034:	ldr	r1, [r0, #260]	; 0x104
    5038:	mov	r0, r7
    503c:	bl	0 <coda_type_record_field_set_type>
    5040:	ldr	r0, [r5, sl]
    5044:	mov	r1, r7
    5048:	ldr	r0, [r0, #268]	; 0x10c
    504c:	bl	0 <coda_type_record_add_field>
    5050:	mov	r0, #7
    5054:	bl	0 <coda_type_record_new>
    5058:	ldr	r1, [r5, sl]
    505c:	movw	r8, #0
    5060:	movt	r8, #0
    5064:	str	r0, [r1, #272]	; 0x110
    5068:	mov	r0, r8
    506c:	bl	0 <coda_type_record_field_new>
    5070:	mov	r7, r0
    5074:	ldr	r0, [r5, sl]
    5078:	ldr	r1, [r0, #12]
    507c:	mov	r0, r7
    5080:	bl	0 <coda_type_record_field_set_type>
    5084:	ldr	r0, [r5, sl]
    5088:	mov	r1, r7
    508c:	ldr	r0, [r0, #272]	; 0x110
    5090:	bl	0 <coda_type_record_add_field>
    5094:	movw	r0, #0
    5098:	movt	r0, #0
    509c:	bl	0 <coda_type_record_field_new>
    50a0:	mov	r7, r0
    50a4:	ldr	r0, [r5, sl]
    50a8:	ldr	r1, [r0, #8]
    50ac:	mov	r0, r7
    50b0:	bl	0 <coda_type_record_field_set_type>
    50b4:	ldr	r0, [r5, sl]
    50b8:	mov	r1, r7
    50bc:	ldr	r0, [r0, #272]	; 0x110
    50c0:	bl	0 <coda_type_record_add_field>
    50c4:	movw	r0, #0
    50c8:	movt	r0, #0
    50cc:	bl	0 <coda_type_record_field_new>
    50d0:	mov	r7, r0
    50d4:	ldr	r0, [r5, sl]
    50d8:	ldr	r1, [r0, #16]
    50dc:	mov	r0, r7
    50e0:	bl	0 <coda_type_record_field_set_type>
    50e4:	ldr	r0, [r5, sl]
    50e8:	mov	r1, r7
    50ec:	ldr	r0, [r0, #272]	; 0x110
    50f0:	bl	0 <coda_type_record_add_field>
    50f4:	movw	r0, #0
    50f8:	movt	r0, #0
    50fc:	bl	0 <coda_type_record_field_new>
    5100:	mov	r7, r0
    5104:	ldr	r0, [r5, sl]
    5108:	ldr	r1, [r0, #20]
    510c:	mov	r0, r7
    5110:	bl	0 <coda_type_record_field_set_type>
    5114:	ldr	r0, [r5, sl]
    5118:	mov	r1, r7
    511c:	ldr	r0, [r0, #272]	; 0x110
    5120:	bl	0 <coda_type_record_add_field>
    5124:	movw	r0, #0
    5128:	movt	r0, #0
    512c:	bl	0 <coda_type_record_field_new>
    5130:	mov	r7, r0
    5134:	ldr	r0, [r5, sl]
    5138:	ldr	r1, [r0, #24]
    513c:	mov	r0, r7
    5140:	bl	0 <coda_type_record_field_set_type>
    5144:	ldr	r0, [r5, sl]
    5148:	mov	r1, r7
    514c:	ldr	r0, [r0, #272]	; 0x110
    5150:	bl	0 <coda_type_record_add_field>
    5154:	movw	r0, #0
    5158:	movt	r0, #0
    515c:	bl	0 <coda_type_record_field_new>
    5160:	mov	r7, r0
    5164:	ldr	r0, [r5, sl]
    5168:	ldr	r1, [r0, #28]
    516c:	mov	r0, r7
    5170:	bl	0 <coda_type_record_field_set_type>
    5174:	ldr	r0, [r5, sl]
    5178:	mov	r1, r7
    517c:	ldr	r0, [r0, #272]	; 0x110
    5180:	bl	0 <coda_type_record_add_field>
    5184:	movw	r0, #0
    5188:	movt	r0, #0
    518c:	bl	0 <coda_type_record_field_new>
    5190:	mov	r7, r0
    5194:	ldr	r0, [r5, sl]
    5198:	ldr	r1, [r0, #32]
    519c:	mov	r0, r7
    51a0:	bl	0 <coda_type_record_field_set_type>
    51a4:	ldr	r0, [r5, sl]
    51a8:	mov	r1, r7
    51ac:	ldr	r0, [r0, #272]	; 0x110
    51b0:	bl	0 <coda_type_record_add_field>
    51b4:	movw	r0, #0
    51b8:	movt	r0, #0
    51bc:	bl	0 <coda_type_record_field_new>
    51c0:	mov	r7, r0
    51c4:	ldr	r0, [r5, sl]
    51c8:	ldr	r1, [r0, #36]	; 0x24
    51cc:	mov	r0, r7
    51d0:	bl	0 <coda_type_record_field_set_type>
    51d4:	ldr	r0, [r5, sl]
    51d8:	mov	r1, r7
    51dc:	ldr	r0, [r0, #272]	; 0x110
    51e0:	bl	0 <coda_type_record_add_field>
    51e4:	movw	r0, #0
    51e8:	movt	r0, #0
    51ec:	bl	0 <coda_type_record_field_new>
    51f0:	mov	r7, r0
    51f4:	ldr	r0, [r5, sl]
    51f8:	ldr	r1, [r0, #40]	; 0x28
    51fc:	mov	r0, r7
    5200:	bl	0 <coda_type_record_field_set_type>
    5204:	ldr	r0, [r5, sl]
    5208:	mov	r1, r7
    520c:	ldr	r0, [r0, #272]	; 0x110
    5210:	bl	0 <coda_type_record_add_field>
    5214:	movw	r0, #0
    5218:	movt	r0, #0
    521c:	bl	0 <coda_type_record_field_new>
    5220:	mov	r7, r0
    5224:	ldr	r0, [r5, sl]
    5228:	ldr	r1, [r0, #48]	; 0x30
    522c:	mov	r0, r7
    5230:	bl	0 <coda_type_record_field_set_type>
    5234:	ldr	r0, [r5, sl]
    5238:	mov	r1, r7
    523c:	ldr	r0, [r0, #272]	; 0x110
    5240:	bl	0 <coda_type_record_add_field>
    5244:	movw	r0, #0
    5248:	movt	r0, #0
    524c:	bl	0 <coda_type_record_field_new>
    5250:	mov	r7, r0
    5254:	ldr	r0, [r5, sl]
    5258:	ldr	r1, [r0, #52]	; 0x34
    525c:	mov	r0, r7
    5260:	bl	0 <coda_type_record_field_set_type>
    5264:	ldr	r0, [r5, sl]
    5268:	mov	r1, r7
    526c:	ldr	r0, [r0, #272]	; 0x110
    5270:	bl	0 <coda_type_record_add_field>
    5274:	movw	r0, #0
    5278:	movt	r0, #0
    527c:	bl	0 <coda_type_record_field_new>
    5280:	mov	r7, r0
    5284:	ldr	r0, [r5, sl]
    5288:	ldr	r1, [r0, #56]	; 0x38
    528c:	mov	r0, r7
    5290:	bl	0 <coda_type_record_field_set_type>
    5294:	ldr	r0, [r5, sl]
    5298:	mov	r1, r7
    529c:	ldr	r0, [r0, #272]	; 0x110
    52a0:	bl	0 <coda_type_record_add_field>
    52a4:	movw	r0, #0
    52a8:	movt	r0, #0
    52ac:	bl	0 <coda_type_record_field_new>
    52b0:	mov	r7, r0
    52b4:	ldr	r0, [r5, sl]
    52b8:	ldr	r1, [r0, #60]	; 0x3c
    52bc:	mov	r0, r7
    52c0:	bl	0 <coda_type_record_field_set_type>
    52c4:	ldr	r0, [r5, sl]
    52c8:	mov	r1, r7
    52cc:	ldr	r0, [r0, #272]	; 0x110
    52d0:	bl	0 <coda_type_record_add_field>
    52d4:	movw	r0, #0
    52d8:	movt	r0, #0
    52dc:	bl	0 <coda_type_record_field_new>
    52e0:	mov	r7, r0
    52e4:	ldr	r0, [r5, sl]
    52e8:	ldr	r1, [r0, #68]	; 0x44
    52ec:	mov	r0, r7
    52f0:	bl	0 <coda_type_record_field_set_type>
    52f4:	ldr	r0, [r5, sl]
    52f8:	mov	r1, r7
    52fc:	ldr	r0, [r0, #272]	; 0x110
    5300:	bl	0 <coda_type_record_add_field>
    5304:	movw	r0, #0
    5308:	movt	r0, #0
    530c:	bl	0 <coda_type_record_field_new>
    5310:	mov	r7, r0
    5314:	ldr	r0, [r5, sl]
    5318:	ldr	r1, [r0, #72]	; 0x48
    531c:	mov	r0, r7
    5320:	bl	0 <coda_type_record_field_set_type>
    5324:	ldr	r0, [r5, sl]
    5328:	mov	r1, r7
    532c:	ldr	r0, [r0, #272]	; 0x110
    5330:	bl	0 <coda_type_record_add_field>
    5334:	movw	r0, #0
    5338:	movt	r0, #0
    533c:	bl	0 <coda_type_record_field_new>
    5340:	mov	r7, r0
    5344:	ldr	r0, [r5, sl]
    5348:	ldr	r1, [r0, #76]	; 0x4c
    534c:	mov	r0, r7
    5350:	bl	0 <coda_type_record_field_set_type>
    5354:	ldr	r0, [r5, sl]
    5358:	mov	r1, r7
    535c:	ldr	r0, [r0, #272]	; 0x110
    5360:	bl	0 <coda_type_record_add_field>
    5364:	movw	r0, #0
    5368:	movt	r0, #0
    536c:	bl	0 <coda_type_record_field_new>
    5370:	mov	r7, r0
    5374:	ldr	r0, [r5, sl]
    5378:	ldr	r1, [r0, #80]	; 0x50
    537c:	mov	r0, r7
    5380:	bl	0 <coda_type_record_field_set_type>
    5384:	ldr	r0, [r5, sl]
    5388:	mov	r1, r7
    538c:	ldr	r0, [r0, #272]	; 0x110
    5390:	bl	0 <coda_type_record_add_field>
    5394:	movw	r0, #0
    5398:	movt	r0, #0
    539c:	bl	0 <coda_type_record_field_new>
    53a0:	mov	r7, r0
    53a4:	ldr	r0, [r5, sl]
    53a8:	ldr	r1, [r0, #84]	; 0x54
    53ac:	mov	r0, r7
    53b0:	bl	0 <coda_type_record_field_set_type>
    53b4:	ldr	r0, [r5, sl]
    53b8:	mov	r1, r7
    53bc:	ldr	r0, [r0, #272]	; 0x110
    53c0:	bl	0 <coda_type_record_add_field>
    53c4:	movw	r0, #0
    53c8:	movt	r0, #0
    53cc:	bl	0 <coda_type_record_field_new>
    53d0:	mov	r7, r0
    53d4:	ldr	r0, [r5, sl]
    53d8:	ldr	r1, [r0, #88]	; 0x58
    53dc:	mov	r0, r7
    53e0:	bl	0 <coda_type_record_field_set_type>
    53e4:	ldr	r0, [r5, sl]
    53e8:	mov	r1, r7
    53ec:	ldr	r0, [r0, #272]	; 0x110
    53f0:	bl	0 <coda_type_record_add_field>
    53f4:	movw	r0, #0
    53f8:	movt	r0, #0
    53fc:	bl	0 <coda_type_record_field_new>
    5400:	mov	r7, r0
    5404:	ldr	r0, [r5, sl]
    5408:	ldr	r1, [r0, #92]	; 0x5c
    540c:	mov	r0, r7
    5410:	bl	0 <coda_type_record_field_set_type>
    5414:	ldr	r0, [r5, sl]
    5418:	mov	r1, r7
    541c:	ldr	r0, [r0, #272]	; 0x110
    5420:	bl	0 <coda_type_record_add_field>
    5424:	movw	r0, #0
    5428:	movt	r0, #0
    542c:	bl	0 <coda_type_record_field_new>
    5430:	mov	r7, r0
    5434:	ldr	r0, [r5, sl]
    5438:	ldr	r1, [r0, #96]	; 0x60
    543c:	mov	r0, r7
    5440:	bl	0 <coda_type_record_field_set_type>
    5444:	ldr	r0, [r5, sl]
    5448:	mov	r1, r7
    544c:	ldr	r0, [r0, #272]	; 0x110
    5450:	bl	0 <coda_type_record_add_field>
    5454:	movw	r0, #0
    5458:	movt	r0, #0
    545c:	bl	0 <coda_type_record_field_new>
    5460:	mov	r7, r0
    5464:	ldr	r0, [r5, sl]
    5468:	ldr	r1, [r0, #100]	; 0x64
    546c:	mov	r0, r7
    5470:	bl	0 <coda_type_record_field_set_type>
    5474:	mov	r0, r7
    5478:	bl	0 <coda_type_record_field_set_hidden>
    547c:	ldr	r0, [r5, sl]
    5480:	mov	r1, r7
    5484:	ldr	r0, [r0, #272]	; 0x110
    5488:	bl	0 <coda_type_record_add_field>
    548c:	movw	r0, #0
    5490:	movt	r0, #0
    5494:	bl	0 <coda_type_record_field_new>
    5498:	mov	r7, r0
    549c:	ldr	r0, [r5, sl]
    54a0:	ldr	r1, [r0, #128]	; 0x80
    54a4:	mov	r0, r7
    54a8:	bl	0 <coda_type_record_field_set_type>
    54ac:	mov	r0, r7
    54b0:	bl	0 <coda_type_record_field_set_optional>
    54b4:	ldr	r0, [r5, sl]
    54b8:	mov	r1, r7
    54bc:	ldr	r0, [r0, #272]	; 0x110
    54c0:	bl	0 <coda_type_record_add_field>
    54c4:	movw	r0, #0
    54c8:	movt	r0, #0
    54cc:	bl	0 <coda_type_record_field_new>
    54d0:	mov	r7, r0
    54d4:	ldr	r0, [r5, sl]
    54d8:	ldr	r1, [r0, #264]	; 0x108
    54dc:	mov	r0, r7
    54e0:	bl	0 <coda_type_record_field_set_type>
    54e4:	mov	r0, r7
    54e8:	bl	0 <coda_type_record_field_set_optional>
    54ec:	ldr	r0, [r5, sl]
    54f0:	mov	r1, r7
    54f4:	ldr	r0, [r0, #272]	; 0x110
    54f8:	bl	0 <coda_type_record_add_field>
    54fc:	movw	r0, #0
    5500:	movt	r0, #0
    5504:	bl	0 <coda_type_record_field_new>
    5508:	mov	r7, r0
    550c:	ldr	r0, [r5, sl]
    5510:	ldr	r1, [r0, #268]	; 0x10c
    5514:	mov	r0, r7
    5518:	bl	0 <coda_type_record_field_set_type>
    551c:	ldr	r0, [r5, sl]
    5520:	mov	r1, r7
    5524:	ldr	r0, [r0, #272]	; 0x110
    5528:	bl	0 <coda_type_record_add_field>
    552c:	mov	r0, #7
    5530:	mov	r1, #2
    5534:	bl	0 <coda_type_number_new>
    5538:	ldr	r1, [r5, sl]
    553c:	str	r0, [r1, #276]	; 0x114
    5540:	mov	r1, #1
    5544:	bl	0 <coda_type_number_set_endianness>
    5548:	ldr	r0, [r5, sl]
    554c:	mov	r1, #4
    5550:	ldr	r0, [r0, #276]	; 0x114
    5554:	bl	0 <coda_type_set_read_type>
    5558:	ldr	r0, [r5, sl]
    555c:	mov	r2, #32
    5560:	mov	r3, #0
    5564:	ldr	r0, [r0, #276]	; 0x114
    5568:	bl	0 <coda_type_set_bit_size>
    556c:	mov	r0, #7
    5570:	mov	r1, #2
    5574:	bl	0 <coda_type_number_new>
    5578:	ldr	r1, [r5, sl]
    557c:	str	r0, [r1, #280]	; 0x118
    5580:	mov	r1, #1
    5584:	bl	0 <coda_type_number_set_endianness>
    5588:	ldr	r0, [r5, sl]
    558c:	mov	r1, #5
    5590:	ldr	r0, [r0, #280]	; 0x118
    5594:	bl	0 <coda_type_set_read_type>
    5598:	ldr	r0, [r5, sl]
    559c:	mov	r2, #32
    55a0:	mov	r3, #0
    55a4:	ldr	r0, [r0, #280]	; 0x118
    55a8:	bl	0 <coda_type_set_bit_size>
    55ac:	mov	r0, #7
    55b0:	mov	r1, #2
    55b4:	bl	0 <coda_type_number_new>
    55b8:	ldr	r1, [r5, sl]
    55bc:	str	r0, [r1, #284]	; 0x11c
    55c0:	mov	r1, #1
    55c4:	bl	0 <coda_type_number_set_endianness>
    55c8:	ldr	r0, [r5, sl]
    55cc:	mov	r1, #1
    55d0:	ldr	r0, [r0, #284]	; 0x11c
    55d4:	bl	0 <coda_type_set_read_type>
    55d8:	ldr	r0, [r5, sl]
    55dc:	mov	r2, #8
    55e0:	mov	r3, #0
    55e4:	ldr	r0, [r0, #284]	; 0x11c
    55e8:	bl	0 <coda_type_set_bit_size>
    55ec:	ldr	r0, [r5, sl]
    55f0:	movw	r1, #0
    55f4:	movt	r1, #0
    55f8:	ldr	r0, [r0, #284]	; 0x11c
    55fc:	bl	0 <coda_type_set_description>
    5600:	mov	r0, #7
    5604:	mov	r1, #2
    5608:	bl	0 <coda_type_number_new>
    560c:	ldr	r1, [r5, sl]
    5610:	str	r0, [r1, #288]	; 0x120
    5614:	mov	r1, #1
    5618:	bl	0 <coda_type_number_set_endianness>
    561c:	ldr	r0, [r5, sl]
    5620:	mov	r1, #3
    5624:	ldr	r0, [r0, #288]	; 0x120
    5628:	bl	0 <coda_type_set_read_type>
    562c:	ldr	r0, [r5, sl]
    5630:	mov	r2, #16
    5634:	mov	r3, #0
    5638:	ldr	r0, [r0, #288]	; 0x120
    563c:	bl	0 <coda_type_set_bit_size>
    5640:	ldr	r0, [r5, sl]
    5644:	movw	r1, #0
    5648:	movt	r1, #0
    564c:	ldr	r0, [r0, #288]	; 0x120
    5650:	bl	0 <coda_type_set_description>
    5654:	mov	r0, #7
    5658:	mov	r1, #2
    565c:	bl	0 <coda_type_number_new>
    5660:	ldr	r1, [r5, sl]
    5664:	str	r0, [r1, #292]	; 0x124
    5668:	mov	r1, #1
    566c:	bl	0 <coda_type_number_set_endianness>
    5670:	ldr	r0, [r5, sl]
    5674:	mov	r1, #3
    5678:	ldr	r0, [r0, #292]	; 0x124
    567c:	bl	0 <coda_type_set_read_type>
    5680:	ldr	r0, [r5, sl]
    5684:	mov	r2, #16
    5688:	mov	r3, #0
    568c:	ldr	r0, [r0, #292]	; 0x124
    5690:	bl	0 <coda_type_set_bit_size>
    5694:	ldr	r0, [r5, sl]
    5698:	movw	r1, #0
    569c:	movt	r1, #0
    56a0:	ldr	r0, [r0, #292]	; 0x124
    56a4:	bl	0 <coda_type_set_description>
    56a8:	mov	r0, #7
    56ac:	mov	r1, #2
    56b0:	bl	0 <coda_type_number_new>
    56b4:	ldr	r1, [r5, sl]
    56b8:	str	r0, [r1, #296]	; 0x128
    56bc:	mov	r1, #1
    56c0:	bl	0 <coda_type_number_set_endianness>
    56c4:	ldr	r0, [r5, sl]
    56c8:	mov	r1, #1
    56cc:	ldr	r0, [r0, #296]	; 0x128
    56d0:	bl	0 <coda_type_set_read_type>
    56d4:	ldr	r0, [r5, sl]
    56d8:	mov	r2, #8
    56dc:	mov	r3, #0
    56e0:	ldr	r0, [r0, #296]	; 0x128
    56e4:	bl	0 <coda_type_set_bit_size>
    56e8:	ldr	r0, [r5, sl]
    56ec:	movw	r1, #0
    56f0:	movt	r1, #0
    56f4:	ldr	r0, [r0, #296]	; 0x128
    56f8:	bl	0 <coda_type_set_description>
    56fc:	mov	r0, #7
    5700:	mov	r1, #2
    5704:	bl	0 <coda_type_number_new>
    5708:	ldr	r1, [r5, sl]
    570c:	str	r0, [r1, #300]	; 0x12c
    5710:	mov	r1, #1
    5714:	bl	0 <coda_type_number_set_endianness>
    5718:	ldr	r0, [r5, sl]
    571c:	mov	r1, #1
    5720:	ldr	r0, [r0, #300]	; 0x12c
    5724:	bl	0 <coda_type_set_read_type>
    5728:	ldr	r0, [r5, sl]
    572c:	mov	r2, #8
    5730:	mov	r3, #0
    5734:	ldr	r0, [r0, #300]	; 0x12c
    5738:	bl	0 <coda_type_set_bit_size>
    573c:	ldr	r0, [r5, sl]
    5740:	movw	r1, #0
    5744:	movt	r1, #0
    5748:	ldr	r0, [r0, #300]	; 0x12c
    574c:	bl	0 <coda_type_set_description>
    5750:	mov	r0, #7
    5754:	mov	r1, #2
    5758:	bl	0 <coda_type_number_new>
    575c:	ldr	r1, [r5, sl]
    5760:	str	r0, [r1, #304]	; 0x130
    5764:	mov	r1, #1
    5768:	bl	0 <coda_type_number_set_endianness>
    576c:	ldr	r0, [r5, sl]
    5770:	mov	r1, #1
    5774:	ldr	r0, [r0, #304]	; 0x130
    5778:	bl	0 <coda_type_set_read_type>
    577c:	ldr	r0, [r5, sl]
    5780:	mov	r2, #8
    5784:	mov	r3, #0
    5788:	ldr	r0, [r0, #304]	; 0x130
    578c:	bl	0 <coda_type_set_bit_size>
    5790:	ldr	r0, [r5, sl]
    5794:	movw	r1, #0
    5798:	movt	r1, #0
    579c:	ldr	r0, [r0, #304]	; 0x130
    57a0:	bl	0 <coda_type_set_description>
    57a4:	mov	r0, #7
    57a8:	mov	r1, #2
    57ac:	bl	0 <coda_type_number_new>
    57b0:	ldr	r1, [r5, sl]
    57b4:	str	r0, [r1, #308]	; 0x134
    57b8:	mov	r1, #1
    57bc:	bl	0 <coda_type_number_set_endianness>
    57c0:	ldr	r0, [r5, sl]
    57c4:	mov	r1, #1
    57c8:	ldr	r0, [r0, #308]	; 0x134
    57cc:	bl	0 <coda_type_set_read_type>
    57d0:	ldr	r0, [r5, sl]
    57d4:	mov	r2, #8
    57d8:	mov	r3, #0
    57dc:	ldr	r0, [r0, #308]	; 0x134
    57e0:	bl	0 <coda_type_set_bit_size>
    57e4:	ldr	r0, [r5, sl]
    57e8:	movw	r1, #0
    57ec:	movt	r1, #0
    57f0:	ldr	r0, [r0, #308]	; 0x134
    57f4:	bl	0 <coda_type_set_description>
    57f8:	mov	r0, #7
    57fc:	mov	r1, #2
    5800:	bl	0 <coda_type_number_new>
    5804:	ldr	r1, [r5, sl]
    5808:	str	r0, [r1, #312]	; 0x138
    580c:	mov	r1, #1
    5810:	bl	0 <coda_type_number_set_endianness>
    5814:	ldr	r0, [r5, sl]
    5818:	mov	r1, #1
    581c:	ldr	r0, [r0, #312]	; 0x138
    5820:	bl	0 <coda_type_set_read_type>
    5824:	ldr	r0, [r5, sl]
    5828:	mov	r2, #8
    582c:	mov	r3, #0
    5830:	ldr	r0, [r0, #312]	; 0x138
    5834:	bl	0 <coda_type_set_bit_size>
    5838:	ldr	r0, [r5, sl]
    583c:	movw	r1, #0
    5840:	movt	r1, #0
    5844:	ldr	r0, [r0, #312]	; 0x138
    5848:	bl	0 <coda_type_set_description>
    584c:	mov	r0, #7
    5850:	mov	r1, #2
    5854:	bl	0 <coda_type_number_new>
    5858:	ldr	r1, [r5, sl]
    585c:	str	r0, [r1, #316]	; 0x13c
    5860:	mov	r1, #1
    5864:	bl	0 <coda_type_number_set_endianness>
    5868:	ldr	r0, [r5, sl]
    586c:	mov	r1, #3
    5870:	ldr	r0, [r0, #316]	; 0x13c
    5874:	bl	0 <coda_type_set_read_type>
    5878:	ldr	r0, [r5, sl]
    587c:	mov	r2, #16
    5880:	mov	r3, #0
    5884:	ldr	r0, [r0, #316]	; 0x13c
    5888:	bl	0 <coda_type_set_bit_size>
    588c:	ldr	r0, [r5, sl]
    5890:	movw	r1, #0
    5894:	movt	r1, #0
    5898:	ldr	r0, [r0, #316]	; 0x13c
    589c:	bl	0 <coda_type_set_description>
    58a0:	mov	r0, #7
    58a4:	mov	r1, #2
    58a8:	bl	0 <coda_type_number_new>
    58ac:	ldr	r1, [r5, sl]
    58b0:	str	r0, [r1, #320]	; 0x140
    58b4:	mov	r1, #1
    58b8:	bl	0 <coda_type_number_set_endianness>
    58bc:	ldr	r0, [r5, sl]
    58c0:	mov	r1, #2
    58c4:	ldr	r0, [r0, #320]	; 0x140
    58c8:	bl	0 <coda_type_set_read_type>
    58cc:	ldr	r0, [r5, sl]
    58d0:	mov	r2, #16
    58d4:	mov	r3, #0
    58d8:	ldr	r0, [r0, #320]	; 0x140
    58dc:	bl	0 <coda_type_set_bit_size>
    58e0:	ldr	r0, [r5, sl]
    58e4:	movw	r1, #0
    58e8:	movt	r1, #0
    58ec:	ldr	r0, [r0, #320]	; 0x140
    58f0:	bl	0 <coda_type_set_description>
    58f4:	mov	r0, #7
    58f8:	mov	r1, #2
    58fc:	bl	0 <coda_type_number_new>
    5900:	ldr	r1, [r5, sl]
    5904:	str	r0, [r1, #324]	; 0x144
    5908:	mov	r1, #1
    590c:	bl	0 <coda_type_number_set_endianness>
    5910:	ldr	r0, [r5, sl]
    5914:	mov	r1, #1
    5918:	ldr	r0, [r0, #324]	; 0x144
    591c:	bl	0 <coda_type_set_read_type>
    5920:	ldr	r0, [r5, sl]
    5924:	mov	r2, #8
    5928:	mov	r3, #0
    592c:	ldr	r0, [r0, #324]	; 0x144
    5930:	bl	0 <coda_type_set_bit_size>
    5934:	ldr	r0, [r5, sl]
    5938:	movw	r1, #0
    593c:	movt	r1, #0
    5940:	ldr	r0, [r0, #324]	; 0x144
    5944:	bl	0 <coda_type_set_description>
    5948:	mov	r0, #7
    594c:	mov	r1, #2
    5950:	bl	0 <coda_type_number_new>
    5954:	ldr	r1, [r5, sl]
    5958:	str	r0, [r1, #328]	; 0x148
    595c:	mov	r1, #1
    5960:	bl	0 <coda_type_number_set_endianness>
    5964:	ldr	r0, [r5, sl]
    5968:	mov	r1, #1
    596c:	ldr	r0, [r0, #328]	; 0x148
    5970:	bl	0 <coda_type_set_read_type>
    5974:	ldr	r0, [r5, sl]
    5978:	mov	r2, #8
    597c:	mov	r3, #0
    5980:	ldr	r0, [r0, #328]	; 0x148
    5984:	bl	0 <coda_type_set_bit_size>
    5988:	ldr	r0, [r5, sl]
    598c:	movw	r1, #0
    5990:	movt	r1, #0
    5994:	ldr	r0, [r0, #328]	; 0x148
    5998:	bl	0 <coda_type_set_description>
    599c:	mov	r0, #7
    59a0:	mov	r1, #2
    59a4:	bl	0 <coda_type_number_new>
    59a8:	ldr	r1, [r5, sl]
    59ac:	str	r0, [r1, #332]	; 0x14c
    59b0:	mov	r1, #1
    59b4:	bl	0 <coda_type_number_set_endianness>
    59b8:	ldr	r0, [r5, sl]
    59bc:	mov	r1, #1
    59c0:	ldr	r0, [r0, #332]	; 0x14c
    59c4:	bl	0 <coda_type_set_read_type>
    59c8:	ldr	r0, [r5, sl]
    59cc:	mov	r2, #8
    59d0:	mov	r3, #0
    59d4:	ldr	r0, [r0, #332]	; 0x14c
    59d8:	bl	0 <coda_type_set_bit_size>
    59dc:	ldr	r0, [r5, sl]
    59e0:	movw	r1, #0
    59e4:	movt	r1, #0
    59e8:	ldr	r0, [r0, #332]	; 0x14c
    59ec:	bl	0 <coda_type_set_description>
    59f0:	mov	r0, #7
    59f4:	mov	r1, #2
    59f8:	bl	0 <coda_type_number_new>
    59fc:	ldr	r1, [r5, sl]
    5a00:	str	r0, [r1, #336]	; 0x150
    5a04:	mov	r1, #1
    5a08:	bl	0 <coda_type_number_set_endianness>
    5a0c:	ldr	r0, [r5, sl]
    5a10:	mov	r1, #1
    5a14:	ldr	r0, [r0, #336]	; 0x150
    5a18:	bl	0 <coda_type_set_read_type>
    5a1c:	ldr	r0, [r5, sl]
    5a20:	mov	r2, #8
    5a24:	mov	r3, #0
    5a28:	ldr	r0, [r0, #336]	; 0x150
    5a2c:	bl	0 <coda_type_set_bit_size>
    5a30:	ldr	r0, [r5, sl]
    5a34:	movw	r1, #0
    5a38:	movt	r1, #0
    5a3c:	ldr	r0, [r0, #336]	; 0x150
    5a40:	bl	0 <coda_type_set_description>
    5a44:	mov	r0, #7
    5a48:	mov	r1, #2
    5a4c:	bl	0 <coda_type_number_new>
    5a50:	ldr	r1, [r5, sl]
    5a54:	str	r0, [r1, #340]	; 0x154
    5a58:	mov	r1, #1
    5a5c:	bl	0 <coda_type_number_set_endianness>
    5a60:	ldr	r0, [r5, sl]
    5a64:	mov	r1, #1
    5a68:	ldr	r0, [r0, #340]	; 0x154
    5a6c:	bl	0 <coda_type_set_read_type>
    5a70:	ldr	r0, [r5, sl]
    5a74:	mov	r2, #8
    5a78:	mov	r3, #0
    5a7c:	ldr	r0, [r0, #340]	; 0x154
    5a80:	bl	0 <coda_type_set_bit_size>
    5a84:	ldr	r0, [r5, sl]
    5a88:	movw	r1, #0
    5a8c:	movt	r1, #0
    5a90:	ldr	r0, [r0, #340]	; 0x154
    5a94:	bl	0 <coda_type_set_description>
    5a98:	mov	r0, #7
    5a9c:	mov	r1, #2
    5aa0:	bl	0 <coda_type_number_new>
    5aa4:	ldr	r1, [r5, sl]
    5aa8:	str	r0, [r1, #344]	; 0x158
    5aac:	mov	r1, #1
    5ab0:	bl	0 <coda_type_number_set_endianness>
    5ab4:	ldr	r0, [r5, sl]
    5ab8:	mov	r1, #1
    5abc:	ldr	r0, [r0, #344]	; 0x158
    5ac0:	bl	0 <coda_type_set_read_type>
    5ac4:	ldr	r0, [r5, sl]
    5ac8:	mov	r2, #8
    5acc:	mov	r3, #0
    5ad0:	ldr	r0, [r0, #344]	; 0x158
    5ad4:	bl	0 <coda_type_set_bit_size>
    5ad8:	ldr	r0, [r5, sl]
    5adc:	movw	r1, #0
    5ae0:	movt	r1, #0
    5ae4:	ldr	r0, [r0, #344]	; 0x158
    5ae8:	bl	0 <coda_type_set_description>
    5aec:	mov	r0, #7
    5af0:	bl	0 <coda_type_raw_new>
    5af4:	ldr	r1, [r5, sl]
    5af8:	str	r0, [r1, #348]	; 0x15c
    5afc:	movw	r1, #0
    5b00:	movt	r1, #0
    5b04:	bl	0 <coda_type_set_description>
    5b08:	mov	r0, #7
    5b0c:	mov	r1, #2
    5b10:	bl	0 <coda_type_number_new>
    5b14:	ldr	r1, [r5, sl]
    5b18:	str	r0, [r1, #352]	; 0x160
    5b1c:	mov	r1, #1
    5b20:	bl	0 <coda_type_number_set_endianness>
    5b24:	ldr	r0, [r5, sl]
    5b28:	mov	r1, #1
    5b2c:	ldr	r0, [r0, #352]	; 0x160
    5b30:	bl	0 <coda_type_set_read_type>
    5b34:	ldr	r0, [r5, sl]
    5b38:	mov	r2, #8
    5b3c:	mov	r3, #0
    5b40:	ldr	r0, [r0, #352]	; 0x160
    5b44:	bl	0 <coda_type_set_bit_size>
    5b48:	ldr	r0, [r5, sl]
    5b4c:	movw	r1, #0
    5b50:	movt	r1, #0
    5b54:	ldr	r0, [r0, #352]	; 0x160
    5b58:	bl	0 <coda_type_set_description>
    5b5c:	mov	r0, #7
    5b60:	mov	r1, #2
    5b64:	bl	0 <coda_type_number_new>
    5b68:	ldr	r1, [r5, sl]
    5b6c:	str	r0, [r1, #356]	; 0x164
    5b70:	mov	r1, #1
    5b74:	bl	0 <coda_type_number_set_endianness>
    5b78:	ldr	r0, [r5, sl]
    5b7c:	mov	r1, #1
    5b80:	ldr	r0, [r0, #356]	; 0x164
    5b84:	bl	0 <coda_type_set_read_type>
    5b88:	ldr	r0, [r5, sl]
    5b8c:	mov	r2, #8
    5b90:	mov	r3, #0
    5b94:	ldr	r0, [r0, #356]	; 0x164
    5b98:	bl	0 <coda_type_set_bit_size>
    5b9c:	ldr	r0, [r5, sl]
    5ba0:	movw	r1, #0
    5ba4:	movt	r1, #0
    5ba8:	ldr	r0, [r0, #356]	; 0x164
    5bac:	bl	0 <coda_type_set_description>
    5bb0:	mov	r0, #7
    5bb4:	mov	r1, #2
    5bb8:	bl	0 <coda_type_number_new>
    5bbc:	ldr	r1, [r5, sl]
    5bc0:	str	r0, [r1, #360]	; 0x168
    5bc4:	mov	r1, #1
    5bc8:	bl	0 <coda_type_number_set_endianness>
    5bcc:	ldr	r0, [r5, sl]
    5bd0:	mov	r1, #1
    5bd4:	ldr	r0, [r0, #360]	; 0x168
    5bd8:	bl	0 <coda_type_set_read_type>
    5bdc:	ldr	r0, [r5, sl]
    5be0:	mov	r2, #8
    5be4:	mov	r3, #0
    5be8:	ldr	r0, [r0, #360]	; 0x168
    5bec:	bl	0 <coda_type_set_bit_size>
    5bf0:	mov	r0, #7
    5bf4:	mov	r1, #2
    5bf8:	bl	0 <coda_type_number_new>
    5bfc:	ldr	r1, [r5, sl]
    5c00:	str	r0, [r1, #364]	; 0x16c
    5c04:	mov	r1, #1
    5c08:	bl	0 <coda_type_number_set_endianness>
    5c0c:	ldr	r0, [r5, sl]
    5c10:	mov	r1, #1
    5c14:	ldr	r0, [r0, #364]	; 0x16c
    5c18:	bl	0 <coda_type_set_read_type>
    5c1c:	ldr	r0, [r5, sl]
    5c20:	mov	r2, #8
    5c24:	mov	r3, #0
    5c28:	ldr	r0, [r0, #364]	; 0x16c
    5c2c:	bl	0 <coda_type_set_bit_size>
    5c30:	mov	r0, #7
    5c34:	mov	r1, #2
    5c38:	bl	0 <coda_type_number_new>
    5c3c:	ldr	r1, [r5, sl]
    5c40:	str	r0, [r1, #368]	; 0x170
    5c44:	mov	r1, #1
    5c48:	bl	0 <coda_type_number_set_endianness>
    5c4c:	ldr	r0, [r5, sl]
    5c50:	mov	r1, #5
    5c54:	ldr	r0, [r0, #368]	; 0x170
    5c58:	bl	0 <coda_type_set_read_type>
    5c5c:	ldr	r0, [r5, sl]
    5c60:	mov	r2, #32
    5c64:	mov	r3, #0
    5c68:	ldr	r0, [r0, #368]	; 0x170
    5c6c:	bl	0 <coda_type_set_bit_size>
    5c70:	mov	r0, #7
    5c74:	mov	r1, #2
    5c78:	bl	0 <coda_type_number_new>
    5c7c:	ldr	r1, [r5, sl]
    5c80:	str	r0, [r1, #372]	; 0x174
    5c84:	mov	r1, #1
    5c88:	bl	0 <coda_type_number_set_endianness>
    5c8c:	ldr	r0, [r5, sl]
    5c90:	mov	r1, #1
    5c94:	ldr	r0, [r0, #372]	; 0x174
    5c98:	bl	0 <coda_type_set_read_type>
    5c9c:	ldr	r0, [r5, sl]
    5ca0:	mov	r2, #8
    5ca4:	mov	r3, #0
    5ca8:	ldr	r0, [r0, #372]	; 0x174
    5cac:	bl	0 <coda_type_set_bit_size>
    5cb0:	mov	r0, #7
    5cb4:	mov	r1, #2
    5cb8:	bl	0 <coda_type_number_new>
    5cbc:	ldr	r1, [r5, sl]
    5cc0:	str	r0, [r1, #376]	; 0x178
    5cc4:	mov	r1, #1
    5cc8:	bl	0 <coda_type_number_set_endianness>
    5ccc:	ldr	r0, [r5, sl]
    5cd0:	mov	r1, #5
    5cd4:	ldr	r0, [r0, #376]	; 0x178
    5cd8:	bl	0 <coda_type_set_read_type>
    5cdc:	ldr	r0, [r5, sl]
    5ce0:	mov	r2, #32
    5ce4:	mov	r3, #0
    5ce8:	ldr	r0, [r0, #376]	; 0x178
    5cec:	bl	0 <coda_type_set_bit_size>
    5cf0:	mov	r0, #7
    5cf4:	mov	r1, #2
    5cf8:	bl	0 <coda_type_number_new>
    5cfc:	ldr	r1, [r5, sl]
    5d00:	str	r0, [r1, #380]	; 0x17c
    5d04:	mov	r1, #1
    5d08:	bl	0 <coda_type_number_set_endianness>
    5d0c:	ldr	r0, [r5, sl]
    5d10:	mov	r1, #1
    5d14:	ldr	r0, [r0, #380]	; 0x17c
    5d18:	bl	0 <coda_type_set_read_type>
    5d1c:	ldr	r0, [r5, sl]
    5d20:	mov	r2, #8
    5d24:	mov	r3, #0
    5d28:	ldr	r0, [r0, #380]	; 0x17c
    5d2c:	bl	0 <coda_type_set_bit_size>
    5d30:	mov	r0, #7
    5d34:	mov	r1, #2
    5d38:	bl	0 <coda_type_number_new>
    5d3c:	ldr	r1, [r5, sl]
    5d40:	str	r0, [r1, #384]	; 0x180
    5d44:	mov	r1, #1
    5d48:	bl	0 <coda_type_number_set_endianness>
    5d4c:	ldr	r0, [r5, sl]
    5d50:	mov	r1, #5
    5d54:	ldr	r0, [r0, #384]	; 0x180
    5d58:	bl	0 <coda_type_set_read_type>
    5d5c:	ldr	r0, [r5, sl]
    5d60:	mov	r2, #32
    5d64:	mov	r3, #0
    5d68:	ldr	r0, [r0, #384]	; 0x180
    5d6c:	bl	0 <coda_type_set_bit_size>
    5d70:	mov	r0, #7
    5d74:	mov	r1, #2
    5d78:	bl	0 <coda_type_number_new>
    5d7c:	ldr	r1, [r5, sl]
    5d80:	str	r0, [r1, #388]	; 0x184
    5d84:	mov	r1, #1
    5d88:	bl	0 <coda_type_number_set_endianness>
    5d8c:	ldr	r0, [r5, sl]
    5d90:	mov	r1, #5
    5d94:	ldr	r0, [r0, #388]	; 0x184
    5d98:	bl	0 <coda_type_set_read_type>
    5d9c:	ldr	r0, [r5, sl]
    5da0:	mov	r2, #32
    5da4:	mov	r3, #0
    5da8:	ldr	r0, [r0, #388]	; 0x184
    5dac:	bl	0 <coda_type_set_bit_size>
    5db0:	ldr	r0, [r5, sl]
    5db4:	movw	r1, #0
    5db8:	movt	r1, #0
    5dbc:	ldr	r0, [r0, #388]	; 0x184
    5dc0:	bl	0 <coda_type_set_description>
    5dc4:	mov	r0, #7
    5dc8:	mov	r1, #2
    5dcc:	bl	0 <coda_type_number_new>
    5dd0:	ldr	r1, [r5, sl]
    5dd4:	str	r0, [r1, #392]	; 0x188
    5dd8:	mov	r1, #1
    5ddc:	bl	0 <coda_type_number_set_endianness>
    5de0:	ldr	r0, [r5, sl]
    5de4:	mov	r1, #5
    5de8:	ldr	r0, [r0, #392]	; 0x188
    5dec:	bl	0 <coda_type_set_read_type>
    5df0:	ldr	r0, [r5, sl]
    5df4:	mov	r2, #32
    5df8:	mov	r3, #0
    5dfc:	ldr	r0, [r0, #392]	; 0x188
    5e00:	bl	0 <coda_type_set_bit_size>
    5e04:	ldr	r0, [r5, sl]
    5e08:	movw	r1, #0
    5e0c:	movt	r1, #0
    5e10:	ldr	r0, [r0, #392]	; 0x188
    5e14:	bl	0 <coda_type_set_description>
    5e18:	mov	r0, #7
    5e1c:	mov	r1, #2
    5e20:	bl	0 <coda_type_number_new>
    5e24:	ldr	r1, [r5, sl]
    5e28:	str	r0, [r1, #396]	; 0x18c
    5e2c:	mov	r1, #1
    5e30:	bl	0 <coda_type_number_set_endianness>
    5e34:	ldr	r0, [r5, sl]
    5e38:	mov	r1, #5
    5e3c:	ldr	r0, [r0, #396]	; 0x18c
    5e40:	bl	0 <coda_type_set_read_type>
    5e44:	ldr	r0, [r5, sl]
    5e48:	mov	r2, #32
    5e4c:	mov	r3, #0
    5e50:	ldr	r0, [r0, #396]	; 0x18c
    5e54:	bl	0 <coda_type_set_bit_size>
    5e58:	mov	r0, #7
    5e5c:	mov	r1, #2
    5e60:	bl	0 <coda_type_number_new>
    5e64:	ldr	r1, [r5, sl]
    5e68:	str	r0, [r1, #400]	; 0x190
    5e6c:	mov	r1, #1
    5e70:	bl	0 <coda_type_number_set_endianness>
    5e74:	ldr	r0, [r5, sl]
    5e78:	mov	r1, #5
    5e7c:	ldr	r0, [r0, #400]	; 0x190
    5e80:	bl	0 <coda_type_set_read_type>
    5e84:	ldr	r0, [r5, sl]
    5e88:	mov	r2, #32
    5e8c:	mov	r3, #0
    5e90:	ldr	r0, [r0, #400]	; 0x190
    5e94:	bl	0 <coda_type_set_bit_size>
    5e98:	mov	r0, #7
    5e9c:	mov	r1, #2
    5ea0:	bl	0 <coda_type_number_new>
    5ea4:	ldr	r1, [r5, sl]
    5ea8:	str	r0, [r1, #404]	; 0x194
    5eac:	mov	r1, #1
    5eb0:	bl	0 <coda_type_number_set_endianness>
    5eb4:	ldr	r0, [r5, sl]
    5eb8:	mov	r1, #4
    5ebc:	ldr	r0, [r0, #404]	; 0x194
    5ec0:	bl	0 <coda_type_set_read_type>
    5ec4:	ldr	r0, [r5, sl]
    5ec8:	mov	r2, #32
    5ecc:	mov	r3, #0
    5ed0:	ldr	r0, [r0, #404]	; 0x194
    5ed4:	bl	0 <coda_type_set_bit_size>
    5ed8:	ldr	r0, [r5, sl]
    5edc:	movw	r1, #0
    5ee0:	movt	r1, #0
    5ee4:	ldr	r0, [r0, #404]	; 0x194
    5ee8:	bl	0 <coda_type_set_description>
    5eec:	mov	r0, #7
    5ef0:	mov	r1, #2
    5ef4:	bl	0 <coda_type_number_new>
    5ef8:	ldr	r1, [r5, sl]
    5efc:	str	r0, [r1, #408]	; 0x198
    5f00:	mov	r1, #1
    5f04:	bl	0 <coda_type_number_set_endianness>
    5f08:	ldr	r0, [r5, sl]
    5f0c:	mov	r1, #4
    5f10:	ldr	r0, [r0, #408]	; 0x198
    5f14:	bl	0 <coda_type_set_read_type>
    5f18:	ldr	r0, [r5, sl]
    5f1c:	mov	r2, #32
    5f20:	mov	r3, #0
    5f24:	ldr	r0, [r0, #408]	; 0x198
    5f28:	bl	0 <coda_type_set_bit_size>
    5f2c:	ldr	r0, [r5, sl]
    5f30:	movw	r1, #0
    5f34:	movt	r1, #0
    5f38:	ldr	r0, [r0, #408]	; 0x198
    5f3c:	bl	0 <coda_type_set_description>
    5f40:	mov	r0, #7
    5f44:	mov	r1, #2
    5f48:	bl	0 <coda_type_number_new>
    5f4c:	ldr	r1, [r5, sl]
    5f50:	str	r0, [r1, #412]	; 0x19c
    5f54:	mov	r1, #1
    5f58:	bl	0 <coda_type_number_set_endianness>
    5f5c:	ldr	r0, [r5, sl]
    5f60:	mov	r1, #1
    5f64:	ldr	r0, [r0, #412]	; 0x19c
    5f68:	bl	0 <coda_type_set_read_type>
    5f6c:	ldr	r0, [r5, sl]
    5f70:	mov	r2, #8
    5f74:	mov	r3, #0
    5f78:	ldr	r0, [r0, #412]	; 0x19c
    5f7c:	bl	0 <coda_type_set_bit_size>
    5f80:	ldr	r0, [r5, sl]
    5f84:	movw	r1, #0
    5f88:	movt	r1, #0
    5f8c:	ldr	r0, [r0, #412]	; 0x19c
    5f90:	bl	0 <coda_type_set_description>
    5f94:	mov	r0, #7
    5f98:	mov	r1, #2
    5f9c:	bl	0 <coda_type_number_new>
    5fa0:	ldr	r1, [r5, sl]
    5fa4:	str	r0, [r1, #416]	; 0x1a0
    5fa8:	mov	r1, #1
    5fac:	bl	0 <coda_type_number_set_endianness>
    5fb0:	ldr	r0, [r5, sl]
    5fb4:	mov	r1, #4
    5fb8:	ldr	r0, [r0, #416]	; 0x1a0
    5fbc:	bl	0 <coda_type_set_read_type>
    5fc0:	ldr	r0, [r5, sl]
    5fc4:	mov	r2, #32
    5fc8:	mov	r3, #0
    5fcc:	ldr	r0, [r0, #416]	; 0x1a0
    5fd0:	bl	0 <coda_type_set_bit_size>
    5fd4:	ldr	r0, [r5, sl]
    5fd8:	movw	r1, #0
    5fdc:	movt	r1, #0
    5fe0:	ldr	r0, [r0, #416]	; 0x1a0
    5fe4:	bl	0 <coda_type_set_description>
    5fe8:	mov	r0, #7
    5fec:	mov	r1, #2
    5ff0:	bl	0 <coda_type_number_new>
    5ff4:	ldr	r1, [r5, sl]
    5ff8:	str	r0, [r1, #420]	; 0x1a4
    5ffc:	mov	r1, #1
    6000:	bl	0 <coda_type_number_set_endianness>
    6004:	ldr	r0, [r5, sl]
    6008:	mov	r1, #4
    600c:	ldr	r0, [r0, #420]	; 0x1a4
    6010:	bl	0 <coda_type_set_read_type>
    6014:	ldr	r0, [r5, sl]
    6018:	mov	r2, #32
    601c:	mov	r3, #0
    6020:	ldr	r0, [r0, #420]	; 0x1a4
    6024:	bl	0 <coda_type_set_bit_size>
    6028:	ldr	r0, [r5, sl]
    602c:	movw	r1, #0
    6030:	movt	r1, #0
    6034:	ldr	r0, [r0, #420]	; 0x1a4
    6038:	bl	0 <coda_type_set_description>
    603c:	mov	r0, #7
    6040:	mov	r1, #2
    6044:	bl	0 <coda_type_number_new>
    6048:	ldr	r1, [r5, sl]
    604c:	str	r0, [r1, #424]	; 0x1a8
    6050:	mov	r1, #1
    6054:	bl	0 <coda_type_number_set_endianness>
    6058:	ldr	r0, [r5, sl]
    605c:	mov	r1, #5
    6060:	ldr	r0, [r0, #424]	; 0x1a8
    6064:	bl	0 <coda_type_set_read_type>
    6068:	ldr	r0, [r5, sl]
    606c:	mov	r2, #32
    6070:	mov	r3, #0
    6074:	ldr	r0, [r0, #424]	; 0x1a8
    6078:	bl	0 <coda_type_set_bit_size>
    607c:	ldr	r0, [r5, sl]
    6080:	movw	r1, #0
    6084:	movt	r1, #0
    6088:	ldr	r0, [r0, #424]	; 0x1a8
    608c:	bl	0 <coda_type_set_description>
    6090:	mov	r0, #7
    6094:	mov	r1, #2
    6098:	bl	0 <coda_type_number_new>
    609c:	ldr	r1, [r5, sl]
    60a0:	str	r0, [r1, #428]	; 0x1ac
    60a4:	mov	r1, #1
    60a8:	bl	0 <coda_type_number_set_endianness>
    60ac:	ldr	r0, [r5, sl]
    60b0:	mov	r1, #5
    60b4:	ldr	r0, [r0, #428]	; 0x1ac
    60b8:	bl	0 <coda_type_set_read_type>
    60bc:	ldr	r0, [r5, sl]
    60c0:	mov	r2, #32
    60c4:	mov	r3, #0
    60c8:	ldr	r0, [r0, #428]	; 0x1ac
    60cc:	bl	0 <coda_type_set_bit_size>
    60d0:	ldr	r0, [r5, sl]
    60d4:	movw	r1, #0
    60d8:	movt	r1, #0
    60dc:	ldr	r0, [r0, #428]	; 0x1ac
    60e0:	bl	0 <coda_type_set_description>
    60e4:	mov	r0, #7
    60e8:	mov	r1, #2
    60ec:	bl	0 <coda_type_number_new>
    60f0:	ldr	r1, [r5, sl]
    60f4:	str	r0, [r1, #432]	; 0x1b0
    60f8:	mov	r1, #1
    60fc:	bl	0 <coda_type_number_set_endianness>
    6100:	ldr	r0, [r5, sl]
    6104:	mov	r1, #5
    6108:	ldr	r0, [r0, #432]	; 0x1b0
    610c:	bl	0 <coda_type_set_read_type>
    6110:	ldr	r0, [r5, sl]
    6114:	mov	r2, #32
    6118:	mov	r3, #0
    611c:	ldr	r0, [r0, #432]	; 0x1b0
    6120:	bl	0 <coda_type_set_bit_size>
    6124:	ldr	r0, [r5, sl]
    6128:	movw	r1, #0
    612c:	movt	r1, #0
    6130:	ldr	r0, [r0, #432]	; 0x1b0
    6134:	bl	0 <coda_type_set_description>
    6138:	mov	r0, #7
    613c:	mov	r1, #2
    6140:	bl	0 <coda_type_number_new>
    6144:	ldr	r1, [r5, sl]
    6148:	str	r0, [r1, #436]	; 0x1b4
    614c:	mov	r1, #1
    6150:	bl	0 <coda_type_number_set_endianness>
    6154:	ldr	r0, [r5, sl]
    6158:	mov	r1, #1
    615c:	ldr	r0, [r0, #436]	; 0x1b4
    6160:	bl	0 <coda_type_set_read_type>
    6164:	ldr	r0, [r5, sl]
    6168:	mov	r2, #8
    616c:	mov	r3, #0
    6170:	ldr	r0, [r0, #436]	; 0x1b4
    6174:	bl	0 <coda_type_set_bit_size>
    6178:	ldr	r0, [r5, sl]
    617c:	movw	r1, #0
    6180:	movt	r1, #0
    6184:	ldr	r0, [r0, #436]	; 0x1b4
    6188:	bl	0 <coda_type_set_description>
    618c:	mov	r0, #7
    6190:	mov	r1, #2
    6194:	bl	0 <coda_type_number_new>
    6198:	ldr	r1, [r5, sl]
    619c:	str	r0, [r1, #440]	; 0x1b8
    61a0:	mov	r1, #1
    61a4:	bl	0 <coda_type_number_set_endianness>
    61a8:	ldr	r0, [r5, sl]
    61ac:	mov	r1, #5
    61b0:	ldr	r0, [r0, #440]	; 0x1b8
    61b4:	bl	0 <coda_type_set_read_type>
    61b8:	ldr	r0, [r5, sl]
    61bc:	mov	r2, #32
    61c0:	mov	r3, #0
    61c4:	ldr	r0, [r0, #440]	; 0x1b8
    61c8:	bl	0 <coda_type_set_bit_size>
    61cc:	mov	r0, #7
    61d0:	bl	0 <coda_type_array_new>
    61d4:	ldr	r1, [r5, sl]
    61d8:	str	r0, [r1, #444]	; 0x1bc
    61dc:	movw	r1, #0
    61e0:	movt	r1, #0
    61e4:	bl	0 <coda_type_set_description>
    61e8:	ldr	r0, [r5, sl]
    61ec:	ldr	r1, [r0, #440]	; 0x1b8
    61f0:	ldr	r0, [r0, #444]	; 0x1bc
    61f4:	bl	0 <coda_type_array_set_base_type>
    61f8:	ldr	r0, [r5, sl]
    61fc:	mov	r1, #0
    6200:	ldr	r0, [r0, #444]	; 0x1bc
    6204:	bl	0 <coda_type_array_add_variable_dimension>
    6208:	mov	r0, #7
    620c:	mov	r1, #2
    6210:	bl	0 <coda_type_number_new>
    6214:	ldr	r1, [r5, sl]
    6218:	str	r0, [r1, #448]	; 0x1c0
    621c:	mov	r1, #1
    6220:	bl	0 <coda_type_number_set_endianness>
    6224:	ldr	r0, [r5, sl]
    6228:	mov	r1, #1
    622c:	ldr	r0, [r0, #448]	; 0x1c0
    6230:	bl	0 <coda_type_set_read_type>
    6234:	ldr	r0, [r5, sl]
    6238:	mov	r2, #8
    623c:	mov	r3, #0
    6240:	ldr	r0, [r0, #448]	; 0x1c0
    6244:	bl	0 <coda_type_set_bit_size>
    6248:	ldr	r0, [r5, sl]
    624c:	mov	r1, r9
    6250:	ldr	r0, [r0, #448]	; 0x1c0
    6254:	bl	0 <coda_type_set_description>
    6258:	mov	r0, #7
    625c:	mov	r1, #2
    6260:	bl	0 <coda_type_number_new>
    6264:	ldr	r1, [r5, sl]
    6268:	str	r0, [r1, #452]	; 0x1c4
    626c:	mov	r1, #1
    6270:	bl	0 <coda_type_number_set_endianness>
    6274:	ldr	r0, [r5, sl]
    6278:	mov	r1, #5
    627c:	ldr	r0, [r0, #452]	; 0x1c4
    6280:	bl	0 <coda_type_set_read_type>
    6284:	ldr	r0, [r5, sl]
    6288:	mov	r2, #32
    628c:	mov	r3, #0
    6290:	ldr	r0, [r0, #452]	; 0x1c4
    6294:	bl	0 <coda_type_set_bit_size>
    6298:	ldr	r0, [r5, sl]
    629c:	mov	r1, r6
    62a0:	ldr	r0, [r0, #452]	; 0x1c4
    62a4:	bl	0 <coda_type_set_description>
    62a8:	mov	r0, #7
    62ac:	mov	r1, #2
    62b0:	bl	0 <coda_type_number_new>
    62b4:	ldr	r1, [r5, sl]
    62b8:	str	r0, [r1, #456]	; 0x1c8
    62bc:	mov	r1, #1
    62c0:	bl	0 <coda_type_number_set_endianness>
    62c4:	ldr	r0, [r5, sl]
    62c8:	mov	r1, #1
    62cc:	ldr	r0, [r0, #456]	; 0x1c8
    62d0:	bl	0 <coda_type_set_read_type>
    62d4:	ldr	r0, [r5, sl]
    62d8:	mov	r2, #8
    62dc:	mov	r3, #0
    62e0:	ldr	r0, [r0, #456]	; 0x1c8
    62e4:	bl	0 <coda_type_set_bit_size>
    62e8:	ldr	r0, [r5, sl]
    62ec:	movw	r1, #0
    62f0:	movt	r1, #0
    62f4:	ldr	r0, [r0, #456]	; 0x1c8
    62f8:	bl	0 <coda_type_set_description>
    62fc:	mov	r0, #7
    6300:	mov	r1, #2
    6304:	bl	0 <coda_type_number_new>
    6308:	ldr	r1, [r5, sl]
    630c:	str	r0, [r1, #460]	; 0x1cc
    6310:	mov	r1, #1
    6314:	bl	0 <coda_type_number_set_endianness>
    6318:	ldr	r0, [r5, sl]
    631c:	mov	r1, #1
    6320:	ldr	r0, [r0, #460]	; 0x1cc
    6324:	bl	0 <coda_type_set_read_type>
    6328:	ldr	r0, [r5, sl]
    632c:	mov	r2, #8
    6330:	mov	r3, #0
    6334:	ldr	r0, [r0, #460]	; 0x1cc
    6338:	bl	0 <coda_type_set_bit_size>
    633c:	ldr	r0, [r5, sl]
    6340:	movw	r1, #0
    6344:	movt	r1, #0
    6348:	ldr	r0, [r0, #460]	; 0x1cc
    634c:	bl	0 <coda_type_set_description>
    6350:	mov	r0, #7
    6354:	mov	r1, #2
    6358:	bl	0 <coda_type_number_new>
    635c:	ldr	r1, [r5, sl]
    6360:	str	r0, [r1, #464]	; 0x1d0
    6364:	mov	r1, #1
    6368:	bl	0 <coda_type_number_set_endianness>
    636c:	ldr	r0, [r5, sl]
    6370:	mov	r1, #1
    6374:	ldr	r0, [r0, #464]	; 0x1d0
    6378:	bl	0 <coda_type_set_read_type>
    637c:	ldr	r0, [r5, sl]
    6380:	mov	r2, #8
    6384:	mov	r3, #0
    6388:	ldr	r0, [r0, #464]	; 0x1d0
    638c:	bl	0 <coda_type_set_bit_size>
    6390:	ldr	r0, [r5, sl]
    6394:	movw	r1, #0
    6398:	movt	r1, #0
    639c:	ldr	r0, [r0, #464]	; 0x1d0
    63a0:	bl	0 <coda_type_set_description>
    63a4:	mov	r0, #7
    63a8:	mov	r1, #2
    63ac:	bl	0 <coda_type_number_new>
    63b0:	ldr	r1, [r5, sl]
    63b4:	str	r0, [r1, #468]	; 0x1d4
    63b8:	mov	r1, #1
    63bc:	bl	0 <coda_type_number_set_endianness>
    63c0:	ldr	r0, [r5, sl]
    63c4:	mov	r1, #1
    63c8:	ldr	r0, [r0, #468]	; 0x1d4
    63cc:	bl	0 <coda_type_set_read_type>
    63d0:	ldr	r0, [r5, sl]
    63d4:	mov	r2, #8
    63d8:	mov	r3, #0
    63dc:	ldr	r0, [r0, #468]	; 0x1d4
    63e0:	bl	0 <coda_type_set_bit_size>
    63e4:	ldr	r0, [r5, sl]
    63e8:	movw	r1, #0
    63ec:	movt	r1, #0
    63f0:	ldr	r0, [r0, #468]	; 0x1d4
    63f4:	bl	0 <coda_type_set_description>
    63f8:	mov	r0, #7
    63fc:	mov	r1, #2
    6400:	bl	0 <coda_type_number_new>
    6404:	ldr	r1, [r5, sl]
    6408:	str	r0, [r1, #472]	; 0x1d8
    640c:	mov	r1, #1
    6410:	bl	0 <coda_type_number_set_endianness>
    6414:	ldr	r0, [r5, sl]
    6418:	mov	r1, #1
    641c:	ldr	r0, [r0, #472]	; 0x1d8
    6420:	bl	0 <coda_type_set_read_type>
    6424:	ldr	r0, [r5, sl]
    6428:	mov	r2, #8
    642c:	mov	r3, #0
    6430:	ldr	r0, [r0, #472]	; 0x1d8
    6434:	bl	0 <coda_type_set_bit_size>
    6438:	ldr	r0, [r5, sl]
    643c:	movw	r1, #0
    6440:	movt	r1, #0
    6444:	ldr	r0, [r0, #472]	; 0x1d8
    6448:	bl	0 <coda_type_set_description>
    644c:	mov	r0, #7
    6450:	mov	r1, #2
    6454:	bl	0 <coda_type_number_new>
    6458:	ldr	r1, [r5, sl]
    645c:	str	r0, [r1, #476]	; 0x1dc
    6460:	mov	r1, #1
    6464:	bl	0 <coda_type_number_set_endianness>
    6468:	ldr	r0, [r5, sl]
    646c:	mov	r1, #1
    6470:	ldr	r0, [r0, #476]	; 0x1dc
    6474:	bl	0 <coda_type_set_read_type>
    6478:	ldr	r0, [r5, sl]
    647c:	mov	r2, #8
    6480:	mov	r3, #0
    6484:	ldr	r0, [r0, #476]	; 0x1dc
    6488:	bl	0 <coda_type_set_bit_size>
    648c:	ldr	r0, [r5, sl]
    6490:	movw	r1, #0
    6494:	movt	r1, #0
    6498:	ldr	r0, [r0, #476]	; 0x1dc
    649c:	bl	0 <coda_type_set_description>
    64a0:	mov	r0, #7
    64a4:	mov	r1, #2
    64a8:	bl	0 <coda_type_number_new>
    64ac:	ldr	r1, [r5, sl]
    64b0:	str	r0, [r1, #480]	; 0x1e0
    64b4:	mov	r1, #1
    64b8:	bl	0 <coda_type_number_set_endianness>
    64bc:	ldr	r0, [r5, sl]
    64c0:	mov	r1, #3
    64c4:	ldr	r0, [r0, #480]	; 0x1e0
    64c8:	bl	0 <coda_type_set_read_type>
    64cc:	ldr	r0, [r5, sl]
    64d0:	mov	r2, #16
    64d4:	mov	r3, #0
    64d8:	ldr	r0, [r0, #480]	; 0x1e0
    64dc:	bl	0 <coda_type_set_bit_size>
    64e0:	ldr	r0, [r5, sl]
    64e4:	movw	r1, #0
    64e8:	movt	r1, #0
    64ec:	ldr	r0, [r0, #480]	; 0x1e0
    64f0:	bl	0 <coda_type_set_description>
    64f4:	mov	r0, #7
    64f8:	mov	r1, #2
    64fc:	bl	0 <coda_type_number_new>
    6500:	ldr	r1, [r5, sl]
    6504:	str	r0, [r1, #484]	; 0x1e4
    6508:	mov	r1, #1
    650c:	bl	0 <coda_type_number_set_endianness>
    6510:	ldr	r0, [r5, sl]
    6514:	mov	r1, #1
    6518:	ldr	r0, [r0, #484]	; 0x1e4
    651c:	bl	0 <coda_type_set_read_type>
    6520:	ldr	r0, [r5, sl]
    6524:	mov	r2, #8
    6528:	mov	r3, #0
    652c:	ldr	r0, [r0, #484]	; 0x1e4
    6530:	bl	0 <coda_type_set_bit_size>
    6534:	ldr	r0, [r5, sl]
    6538:	movw	r1, #0
    653c:	movt	r1, #0
    6540:	ldr	r0, [r0, #484]	; 0x1e4
    6544:	bl	0 <coda_type_set_description>
    6548:	mov	r0, #7
    654c:	mov	r1, #2
    6550:	bl	0 <coda_type_number_new>
    6554:	ldr	r1, [r5, sl]
    6558:	str	r0, [r1, #488]	; 0x1e8
    655c:	mov	r1, #1
    6560:	bl	0 <coda_type_number_set_endianness>
    6564:	ldr	r0, [r5, sl]
    6568:	mov	r1, #1
    656c:	ldr	r0, [r0, #488]	; 0x1e8
    6570:	bl	0 <coda_type_set_read_type>
    6574:	ldr	r0, [r5, sl]
    6578:	mov	r2, #8
    657c:	mov	r3, #0
    6580:	ldr	r0, [r0, #488]	; 0x1e8
    6584:	bl	0 <coda_type_set_bit_size>
    6588:	ldr	r0, [r5, sl]
    658c:	movw	r1, #0
    6590:	movt	r1, #0
    6594:	ldr	r0, [r0, #488]	; 0x1e8
    6598:	bl	0 <coda_type_set_description>
    659c:	mov	r0, #7
    65a0:	mov	r1, #2
    65a4:	bl	0 <coda_type_number_new>
    65a8:	ldr	r1, [r5, sl]
    65ac:	str	r0, [r1, #492]	; 0x1ec
    65b0:	mov	r1, #1
    65b4:	bl	0 <coda_type_number_set_endianness>
    65b8:	ldr	r0, [r5, sl]
    65bc:	mov	r1, #5
    65c0:	ldr	r0, [r0, #492]	; 0x1ec
    65c4:	bl	0 <coda_type_set_read_type>
    65c8:	ldr	r0, [r5, sl]
    65cc:	mov	r2, #32
    65d0:	mov	r3, #0
    65d4:	ldr	r0, [r0, #492]	; 0x1ec
    65d8:	bl	0 <coda_type_set_bit_size>
    65dc:	ldr	r0, [r5, sl]
    65e0:	movw	r1, #0
    65e4:	movt	r1, #0
    65e8:	ldr	r0, [r0, #492]	; 0x1ec
    65ec:	bl	0 <coda_type_set_description>
    65f0:	mov	r0, #7
    65f4:	mov	r1, #2
    65f8:	bl	0 <coda_type_number_new>
    65fc:	ldr	r1, [r5, sl]
    6600:	str	r0, [r1, #496]	; 0x1f0
    6604:	mov	r1, #1
    6608:	bl	0 <coda_type_number_set_endianness>
    660c:	ldr	r0, [r5, sl]
    6610:	mov	r1, #1
    6614:	ldr	r0, [r0, #496]	; 0x1f0
    6618:	bl	0 <coda_type_set_read_type>
    661c:	ldr	r0, [r5, sl]
    6620:	mov	r2, #8
    6624:	mov	r3, #0
    6628:	ldr	r0, [r0, #496]	; 0x1f0
    662c:	bl	0 <coda_type_set_bit_size>
    6630:	ldr	r0, [r5, sl]
    6634:	movw	r1, #0
    6638:	movt	r1, #0
    663c:	ldr	r0, [r0, #496]	; 0x1f0
    6640:	bl	0 <coda_type_set_description>
    6644:	mov	r0, #7
    6648:	mov	r1, #3
    664c:	bl	0 <coda_type_number_new>
    6650:	ldr	r1, [r5, sl]
    6654:	str	r0, [r1, #500]	; 0x1f4
    6658:	mov	r1, #1
    665c:	bl	0 <coda_type_number_set_endianness>
    6660:	ldr	r0, [r5, sl]
    6664:	mov	r1, #9
    6668:	ldr	r0, [r0, #500]	; 0x1f4
    666c:	bl	0 <coda_type_set_read_type>
    6670:	ldr	r0, [r5, sl]
    6674:	mov	r2, #64	; 0x40
    6678:	mov	r3, #0
    667c:	ldr	r0, [r0, #500]	; 0x1f4
    6680:	bl	0 <coda_type_set_bit_size>
    6684:	ldr	r0, [r5, sl]
    6688:	movw	r1, #0
    668c:	movt	r1, #0
    6690:	ldr	r0, [r0, #500]	; 0x1f4
    6694:	bl	0 <coda_type_set_description>
    6698:	mov	r0, #7
    669c:	mov	r1, #2
    66a0:	bl	0 <coda_type_number_new>
    66a4:	ldr	r1, [r5, sl]
    66a8:	str	r0, [r1, #504]	; 0x1f8
    66ac:	mov	r1, #1
    66b0:	bl	0 <coda_type_number_set_endianness>
    66b4:	ldr	r0, [r5, sl]
    66b8:	mov	r1, #1
    66bc:	ldr	r0, [r0, #504]	; 0x1f8
    66c0:	bl	0 <coda_type_set_read_type>
    66c4:	ldr	r0, [r5, sl]
    66c8:	mov	r2, #8
    66cc:	mov	r3, #0
    66d0:	ldr	r0, [r0, #504]	; 0x1f8
    66d4:	bl	0 <coda_type_set_bit_size>
    66d8:	ldr	r0, [r5, sl]
    66dc:	movw	r1, #0
    66e0:	movt	r1, #0
    66e4:	ldr	r0, [r0, #504]	; 0x1f8
    66e8:	bl	0 <coda_type_set_description>
    66ec:	mov	r0, #7
    66f0:	mov	r1, #3
    66f4:	bl	0 <coda_type_number_new>
    66f8:	ldr	r1, [r5, sl]
    66fc:	str	r0, [r1, #508]	; 0x1fc
    6700:	mov	r1, #1
    6704:	bl	0 <coda_type_number_set_endianness>
    6708:	ldr	r0, [r5, sl]
    670c:	mov	r1, #9
    6710:	ldr	r0, [r0, #508]	; 0x1fc
    6714:	bl	0 <coda_type_set_read_type>
    6718:	ldr	r0, [r5, sl]
    671c:	mov	r2, #64	; 0x40
    6720:	mov	r3, #0
    6724:	ldr	r0, [r0, #508]	; 0x1fc
    6728:	bl	0 <coda_type_set_bit_size>
    672c:	ldr	r0, [r5, sl]
    6730:	movw	r1, #0
    6734:	movt	r1, #0
    6738:	ldr	r0, [r0, #508]	; 0x1fc
    673c:	bl	0 <coda_type_set_description>
    6740:	mov	r0, #7
    6744:	mov	r1, #3
    6748:	bl	0 <coda_type_number_new>
    674c:	ldr	r1, [r5, sl]
    6750:	str	r0, [r1, #512]	; 0x200
    6754:	mov	r1, #1
    6758:	bl	0 <coda_type_number_set_endianness>
    675c:	ldr	r0, [r5, sl]
    6760:	mov	r1, #8
    6764:	ldr	r0, [r0, #512]	; 0x200
    6768:	bl	0 <coda_type_set_read_type>
    676c:	ldr	r0, [r5, sl]
    6770:	mov	r2, #32
    6774:	mov	r3, #0
    6778:	ldr	r0, [r0, #512]	; 0x200
    677c:	bl	0 <coda_type_set_bit_size>
    6780:	mov	r0, #7
    6784:	bl	0 <coda_type_array_new>
    6788:	ldr	r1, [r5, sl]
    678c:	str	r0, [r1, #516]	; 0x204
    6790:	movw	r1, #0
    6794:	movt	r1, #0
    6798:	bl	0 <coda_type_set_description>
    679c:	ldr	r0, [r5, sl]
    67a0:	ldr	r1, [r0, #512]	; 0x200
    67a4:	ldr	r0, [r0, #516]	; 0x204
    67a8:	bl	0 <coda_type_array_set_base_type>
    67ac:	ldr	r0, [r5, sl]
    67b0:	mov	r1, #0
    67b4:	ldr	r0, [r0, #516]	; 0x204
    67b8:	bl	0 <coda_type_array_add_variable_dimension>
    67bc:	mov	r0, #7
    67c0:	mov	r1, #2
    67c4:	bl	0 <coda_type_number_new>
    67c8:	ldr	r1, [r5, sl]
    67cc:	str	r0, [r1, #520]	; 0x208
    67d0:	mov	r1, #1
    67d4:	bl	0 <coda_type_number_set_endianness>
    67d8:	ldr	r0, [r5, sl]
    67dc:	mov	r1, #3
    67e0:	ldr	r0, [r0, #520]	; 0x208
    67e4:	bl	0 <coda_type_set_read_type>
    67e8:	ldr	r0, [r5, sl]
    67ec:	mov	r2, #16
    67f0:	mov	r3, #0
    67f4:	ldr	r0, [r0, #520]	; 0x208
    67f8:	bl	0 <coda_type_set_bit_size>
    67fc:	ldr	r0, [r5, sl]
    6800:	movw	r1, #0
    6804:	movt	r1, #0
    6808:	ldr	r0, [r0, #520]	; 0x208
    680c:	bl	0 <coda_type_set_description>
    6810:	mov	r0, #7
    6814:	mov	r1, #2
    6818:	bl	0 <coda_type_number_new>
    681c:	ldr	r1, [r5, sl]
    6820:	str	r0, [r1, #524]	; 0x20c
    6824:	mov	r1, #1
    6828:	bl	0 <coda_type_number_set_endianness>
    682c:	ldr	r0, [r5, sl]
    6830:	mov	r1, #1
    6834:	ldr	r0, [r0, #524]	; 0x20c
    6838:	bl	0 <coda_type_set_read_type>
    683c:	ldr	r0, [r5, sl]
    6840:	mov	r2, #8
    6844:	mov	r3, #0
    6848:	ldr	r0, [r0, #524]	; 0x20c
    684c:	bl	0 <coda_type_set_bit_size>
    6850:	ldr	r0, [r5, sl]
    6854:	movw	r1, #0
    6858:	movt	r1, #0
    685c:	ldr	r0, [r0, #524]	; 0x20c
    6860:	bl	0 <coda_type_set_description>
    6864:	mov	r0, #7
    6868:	mov	r1, #2
    686c:	bl	0 <coda_type_number_new>
    6870:	ldr	r1, [r5, sl]
    6874:	str	r0, [r1, #528]	; 0x210
    6878:	mov	r1, #1
    687c:	bl	0 <coda_type_number_set_endianness>
    6880:	ldr	r0, [r5, sl]
    6884:	mov	r1, #2
    6888:	ldr	r0, [r0, #528]	; 0x210
    688c:	bl	0 <coda_type_set_read_type>
    6890:	ldr	r0, [r5, sl]
    6894:	mov	r2, #16
    6898:	mov	r3, #0
    689c:	ldr	r0, [r0, #528]	; 0x210
    68a0:	bl	0 <coda_type_set_bit_size>
    68a4:	ldr	r0, [r5, sl]
    68a8:	movw	r1, #0
    68ac:	movt	r1, #0
    68b0:	ldr	r0, [r0, #528]	; 0x210
    68b4:	bl	0 <coda_type_set_description>
    68b8:	mov	r0, #7
    68bc:	mov	r1, #3
    68c0:	bl	0 <coda_type_number_new>
    68c4:	ldr	r1, [r5, sl]
    68c8:	str	r0, [r1, #532]	; 0x214
    68cc:	mov	r1, #1
    68d0:	bl	0 <coda_type_number_set_endianness>
    68d4:	ldr	r0, [r5, sl]
    68d8:	mov	r1, #8
    68dc:	ldr	r0, [r0, #532]	; 0x214
    68e0:	bl	0 <coda_type_set_read_type>
    68e4:	ldr	r0, [r5, sl]
    68e8:	mov	r2, #32
    68ec:	mov	r3, #0
    68f0:	ldr	r0, [r0, #532]	; 0x214
    68f4:	bl	0 <coda_type_set_bit_size>
    68f8:	ldr	r0, [r5, sl]
    68fc:	movw	r1, #0
    6900:	movt	r1, #0
    6904:	ldr	r0, [r0, #532]	; 0x214
    6908:	bl	0 <coda_type_set_description>
    690c:	mov	r0, #7
    6910:	bl	0 <coda_type_array_new>
    6914:	ldr	r1, [r5, sl]
    6918:	str	r0, [r1, #536]	; 0x218
    691c:	mov	r0, #7
    6920:	mov	r1, #3
    6924:	bl	0 <coda_type_number_new>
    6928:	mov	r1, #1
    692c:	mov	r6, r0
    6930:	bl	0 <coda_type_number_set_endianness>
    6934:	mov	r0, r6
    6938:	mov	r1, #8
    693c:	bl	0 <coda_type_set_read_type>
    6940:	mov	r0, r6
    6944:	mov	r2, #32
    6948:	mov	r3, #0
    694c:	bl	0 <coda_type_set_bit_size>
    6950:	ldr	r0, [r5, sl]
    6954:	mov	r1, r6
    6958:	ldr	r0, [r0, #536]	; 0x218
    695c:	bl	0 <coda_type_array_set_base_type>
    6960:	mov	r0, r6
    6964:	bl	0 <coda_type_release>
    6968:	ldr	r0, [r5, sl]
    696c:	mov	r1, #0
    6970:	ldr	r0, [r0, #536]	; 0x218
    6974:	bl	0 <coda_type_array_add_variable_dimension>
    6978:	mov	r0, #7
    697c:	bl	0 <coda_type_record_new>
    6980:	ldr	r1, [r5, sl]
    6984:	str	r0, [r1, #540]	; 0x21c
    6988:	movw	r0, #0
    698c:	movt	r0, #0
    6990:	bl	0 <coda_type_record_field_new>
    6994:	mov	r6, r0
    6998:	ldr	r0, [r5, sl]
    699c:	ldr	r1, [r0, #276]	; 0x114
    69a0:	mov	r0, r6
    69a4:	bl	0 <coda_type_record_field_set_type>
    69a8:	ldr	r0, [r5, sl]
    69ac:	mov	r1, r6
    69b0:	ldr	r0, [r0, #540]	; 0x21c
    69b4:	bl	0 <coda_type_record_add_field>
    69b8:	movw	r0, #0
    69bc:	movt	r0, #0
    69c0:	bl	0 <coda_type_record_field_new>
    69c4:	mov	r6, r0
    69c8:	ldr	r0, [r5, sl]
    69cc:	ldr	r1, [r0, #448]	; 0x1c0
    69d0:	mov	r0, r6
    69d4:	bl	0 <coda_type_record_field_set_type>
    69d8:	ldr	r0, [r5, sl]
    69dc:	mov	r1, r6
    69e0:	ldr	r0, [r0, #540]	; 0x21c
    69e4:	bl	0 <coda_type_record_add_field>
    69e8:	movw	r0, #0
    69ec:	movt	r0, #0
    69f0:	bl	0 <coda_type_record_field_new>
    69f4:	mov	r6, r0
    69f8:	ldr	r0, [r5, sl]
    69fc:	ldr	r1, [r0, #452]	; 0x1c4
    6a00:	mov	r0, r6
    6a04:	bl	0 <coda_type_record_field_set_type>
    6a08:	ldr	r0, [r5, sl]
    6a0c:	mov	r1, r6
    6a10:	ldr	r0, [r0, #540]	; 0x21c
    6a14:	bl	0 <coda_type_record_add_field>
    6a18:	movw	r0, #0
    6a1c:	movt	r0, #0
    6a20:	bl	0 <coda_type_record_field_new>
    6a24:	mov	r6, r0
    6a28:	ldr	r0, [r5, sl]
    6a2c:	ldr	r1, [r0, #456]	; 0x1c8
    6a30:	mov	r0, r6
    6a34:	bl	0 <coda_type_record_field_set_type>
    6a38:	ldr	r0, [r5, sl]
    6a3c:	mov	r1, r6
    6a40:	ldr	r0, [r0, #540]	; 0x21c
    6a44:	bl	0 <coda_type_record_add_field>
    6a48:	movw	r0, #0
    6a4c:	movt	r0, #0
    6a50:	bl	0 <coda_type_record_field_new>
    6a54:	mov	r6, r0
    6a58:	ldr	r0, [r5, sl]
    6a5c:	ldr	r1, [r0, #520]	; 0x208
    6a60:	mov	r0, r6
    6a64:	bl	0 <coda_type_record_field_set_type>
    6a68:	ldr	r0, [r5, sl]
    6a6c:	mov	r1, r6
    6a70:	ldr	r0, [r0, #540]	; 0x21c
    6a74:	bl	0 <coda_type_record_add_field>
    6a78:	movw	r0, #0
    6a7c:	movt	r0, #0
    6a80:	bl	0 <coda_type_record_field_new>
    6a84:	mov	r6, r0
    6a88:	ldr	r0, [r5, sl]
    6a8c:	ldr	r1, [r0, #360]	; 0x168
    6a90:	mov	r0, r6
    6a94:	bl	0 <coda_type_record_field_set_type>
    6a98:	ldr	r0, [r5, sl]
    6a9c:	mov	r1, r6
    6aa0:	ldr	r0, [r0, #540]	; 0x21c
    6aa4:	bl	0 <coda_type_record_add_field>
    6aa8:	movw	r0, #0
    6aac:	movt	r0, #0
    6ab0:	bl	0 <coda_type_record_field_new>
    6ab4:	mov	r6, r0
    6ab8:	ldr	r0, [r5, sl]
    6abc:	ldr	r1, [r0, #364]	; 0x16c
    6ac0:	mov	r0, r6
    6ac4:	bl	0 <coda_type_record_field_set_type>
    6ac8:	ldr	r0, [r5, sl]
    6acc:	mov	r1, r6
    6ad0:	ldr	r0, [r0, #540]	; 0x21c
    6ad4:	bl	0 <coda_type_record_add_field>
    6ad8:	movw	r0, #0
    6adc:	movt	r0, #0
    6ae0:	bl	0 <coda_type_record_field_new>
    6ae4:	mov	r6, r0
    6ae8:	ldr	r0, [r5, sl]
    6aec:	ldr	r1, [r0, #368]	; 0x170
    6af0:	mov	r0, r6
    6af4:	bl	0 <coda_type_record_field_set_type>
    6af8:	ldr	r0, [r5, sl]
    6afc:	mov	r1, r6
    6b00:	ldr	r0, [r0, #540]	; 0x21c
    6b04:	bl	0 <coda_type_record_add_field>
    6b08:	movw	r0, #0
    6b0c:	movt	r0, #0
    6b10:	bl	0 <coda_type_record_field_new>
    6b14:	mov	r6, r0
    6b18:	ldr	r0, [r5, sl]
    6b1c:	ldr	r1, [r0, #372]	; 0x174
    6b20:	mov	r0, r6
    6b24:	bl	0 <coda_type_record_field_set_type>
    6b28:	ldr	r0, [r5, sl]
    6b2c:	mov	r1, r6
    6b30:	ldr	r0, [r0, #540]	; 0x21c
    6b34:	bl	0 <coda_type_record_add_field>
    6b38:	movw	r0, #0
    6b3c:	movt	r0, #0
    6b40:	bl	0 <coda_type_record_field_new>
    6b44:	mov	r6, r0
    6b48:	ldr	r0, [r5, sl]
    6b4c:	ldr	r1, [r0, #376]	; 0x178
    6b50:	mov	r0, r6
    6b54:	bl	0 <coda_type_record_field_set_type>
    6b58:	ldr	r0, [r5, sl]
    6b5c:	mov	r1, r6
    6b60:	ldr	r0, [r0, #540]	; 0x21c
    6b64:	bl	0 <coda_type_record_add_field>
    6b68:	movw	r0, #0
    6b6c:	movt	r0, #0
    6b70:	bl	0 <coda_type_record_field_new>
    6b74:	mov	r6, r0
    6b78:	ldr	r0, [r5, sl]
    6b7c:	ldr	r1, [r0, #380]	; 0x17c
    6b80:	mov	r0, r6
    6b84:	bl	0 <coda_type_record_field_set_type>
    6b88:	ldr	r0, [r5, sl]
    6b8c:	mov	r1, r6
    6b90:	ldr	r0, [r0, #540]	; 0x21c
    6b94:	bl	0 <coda_type_record_add_field>
    6b98:	movw	r0, #0
    6b9c:	movt	r0, #0
    6ba0:	bl	0 <coda_type_record_field_new>
    6ba4:	mov	r6, r0
    6ba8:	ldr	r0, [r5, sl]
    6bac:	ldr	r1, [r0, #384]	; 0x180
    6bb0:	mov	r0, r6
    6bb4:	bl	0 <coda_type_record_field_set_type>
    6bb8:	ldr	r0, [r5, sl]
    6bbc:	mov	r1, r6
    6bc0:	ldr	r0, [r0, #540]	; 0x21c
    6bc4:	bl	0 <coda_type_record_add_field>
    6bc8:	movw	r0, #0
    6bcc:	movt	r0, #0
    6bd0:	bl	0 <coda_type_record_field_new>
    6bd4:	mov	r6, r0
    6bd8:	ldr	r0, [r5, sl]
    6bdc:	ldr	r1, [r0, #388]	; 0x184
    6be0:	mov	r0, r6
    6be4:	bl	0 <coda_type_record_field_set_type>
    6be8:	ldr	r0, [r5, sl]
    6bec:	mov	r1, r6
    6bf0:	ldr	r0, [r0, #540]	; 0x21c
    6bf4:	bl	0 <coda_type_record_add_field>
    6bf8:	movw	r0, #0
    6bfc:	movt	r0, #0
    6c00:	bl	0 <coda_type_record_field_new>
    6c04:	mov	r6, r0
    6c08:	ldr	r0, [r5, sl]
    6c0c:	ldr	r1, [r0, #392]	; 0x188
    6c10:	mov	r0, r6
    6c14:	bl	0 <coda_type_record_field_set_type>
    6c18:	ldr	r0, [r5, sl]
    6c1c:	mov	r1, r6
    6c20:	ldr	r0, [r0, #540]	; 0x21c
    6c24:	bl	0 <coda_type_record_add_field>
    6c28:	movw	r0, #0
    6c2c:	movt	r0, #0
    6c30:	bl	0 <coda_type_record_field_new>
    6c34:	mov	r6, r0
    6c38:	ldr	r0, [r5, sl]
    6c3c:	ldr	r1, [r0, #396]	; 0x18c
    6c40:	mov	r0, r6
    6c44:	bl	0 <coda_type_record_field_set_type>
    6c48:	ldr	r0, [r5, sl]
    6c4c:	mov	r1, r6
    6c50:	ldr	r0, [r0, #540]	; 0x21c
    6c54:	bl	0 <coda_type_record_add_field>
    6c58:	movw	r0, #0
    6c5c:	movt	r0, #0
    6c60:	bl	0 <coda_type_record_field_new>
    6c64:	mov	r6, r0
    6c68:	ldr	r0, [r5, sl]
    6c6c:	ldr	r1, [r0, #400]	; 0x190
    6c70:	mov	r0, r6
    6c74:	bl	0 <coda_type_record_field_set_type>
    6c78:	ldr	r0, [r5, sl]
    6c7c:	mov	r1, r6
    6c80:	ldr	r0, [r0, #540]	; 0x21c
    6c84:	bl	0 <coda_type_record_add_field>
    6c88:	movw	r0, #0
    6c8c:	movt	r0, #0
    6c90:	bl	0 <coda_type_record_field_new>
    6c94:	mov	r6, r0
    6c98:	ldr	r0, [r5, sl]
    6c9c:	ldr	r1, [r0, #404]	; 0x194
    6ca0:	mov	r0, r6
    6ca4:	bl	0 <coda_type_record_field_set_type>
    6ca8:	ldr	r0, [r5, sl]
    6cac:	mov	r1, r6
    6cb0:	ldr	r0, [r0, #540]	; 0x21c
    6cb4:	bl	0 <coda_type_record_add_field>
    6cb8:	movw	r0, #0
    6cbc:	movt	r0, #0
    6cc0:	bl	0 <coda_type_record_field_new>
    6cc4:	mov	r6, r0
    6cc8:	ldr	r0, [r5, sl]
    6ccc:	ldr	r1, [r0, #408]	; 0x198
    6cd0:	mov	r0, r6
    6cd4:	bl	0 <coda_type_record_field_set_type>
    6cd8:	ldr	r0, [r5, sl]
    6cdc:	mov	r1, r6
    6ce0:	ldr	r0, [r0, #540]	; 0x21c
    6ce4:	bl	0 <coda_type_record_add_field>
    6ce8:	movw	r0, #0
    6cec:	movt	r0, #0
    6cf0:	bl	0 <coda_type_record_field_new>
    6cf4:	mov	r6, r0
    6cf8:	ldr	r0, [r5, sl]
    6cfc:	ldr	r1, [r0, #412]	; 0x19c
    6d00:	mov	r0, r6
    6d04:	bl	0 <coda_type_record_field_set_type>
    6d08:	ldr	r0, [r5, sl]
    6d0c:	mov	r1, r6
    6d10:	ldr	r0, [r0, #540]	; 0x21c
    6d14:	bl	0 <coda_type_record_add_field>
    6d18:	movw	r0, #0
    6d1c:	movt	r0, #0
    6d20:	bl	0 <coda_type_record_field_new>
    6d24:	mov	r6, r0
    6d28:	ldr	r0, [r5, sl]
    6d2c:	ldr	r1, [r0, #416]	; 0x1a0
    6d30:	mov	r0, r6
    6d34:	bl	0 <coda_type_record_field_set_type>
    6d38:	ldr	r0, [r5, sl]
    6d3c:	mov	r1, r6
    6d40:	ldr	r0, [r0, #540]	; 0x21c
    6d44:	bl	0 <coda_type_record_add_field>
    6d48:	movw	r0, #0
    6d4c:	movt	r0, #0
    6d50:	bl	0 <coda_type_record_field_new>
    6d54:	mov	r6, r0
    6d58:	ldr	r0, [r5, sl]
    6d5c:	ldr	r1, [r0, #420]	; 0x1a4
    6d60:	mov	r0, r6
    6d64:	bl	0 <coda_type_record_field_set_type>
    6d68:	ldr	r0, [r5, sl]
    6d6c:	mov	r1, r6
    6d70:	ldr	r0, [r0, #540]	; 0x21c
    6d74:	bl	0 <coda_type_record_add_field>
    6d78:	movw	r0, #0
    6d7c:	movt	r0, #0
    6d80:	bl	0 <coda_type_record_field_new>
    6d84:	mov	r6, r0
    6d88:	ldr	r0, [r5, sl]
    6d8c:	ldr	r1, [r0, #424]	; 0x1a8
    6d90:	mov	r0, r6
    6d94:	bl	0 <coda_type_record_field_set_type>
    6d98:	ldr	r0, [r5, sl]
    6d9c:	mov	r1, r6
    6da0:	ldr	r0, [r0, #540]	; 0x21c
    6da4:	bl	0 <coda_type_record_add_field>
    6da8:	movw	r0, #0
    6dac:	movt	r0, #0
    6db0:	bl	0 <coda_type_record_field_new>
    6db4:	mov	r6, r0
    6db8:	ldr	r0, [r5, sl]
    6dbc:	ldr	r1, [r0, #428]	; 0x1ac
    6dc0:	mov	r0, r6
    6dc4:	bl	0 <coda_type_record_field_set_type>
    6dc8:	mov	r0, r6
    6dcc:	bl	0 <coda_type_record_field_set_optional>
    6dd0:	ldr	r0, [r5, sl]
    6dd4:	mov	r1, r6
    6dd8:	ldr	r0, [r0, #540]	; 0x21c
    6ddc:	bl	0 <coda_type_record_add_field>
    6de0:	movw	r0, #0
    6de4:	movt	r0, #0
    6de8:	bl	0 <coda_type_record_field_new>
    6dec:	mov	r6, r0
    6df0:	ldr	r0, [r5, sl]
    6df4:	ldr	r1, [r0, #432]	; 0x1b0
    6df8:	mov	r0, r6
    6dfc:	bl	0 <coda_type_record_field_set_type>
    6e00:	mov	r0, r6
    6e04:	bl	0 <coda_type_record_field_set_optional>
    6e08:	ldr	r0, [r5, sl]
    6e0c:	mov	r1, r6
    6e10:	ldr	r0, [r0, #540]	; 0x21c
    6e14:	bl	0 <coda_type_record_add_field>
    6e18:	movw	r0, #0
    6e1c:	movt	r0, #0
    6e20:	bl	0 <coda_type_record_field_new>
    6e24:	mov	r6, r0
    6e28:	ldr	r0, [r5, sl]
    6e2c:	ldr	r1, [r0, #436]	; 0x1b4
    6e30:	mov	r0, r6
    6e34:	bl	0 <coda_type_record_field_set_type>
    6e38:	ldr	r0, [r5, sl]
    6e3c:	mov	r1, r6
    6e40:	ldr	r0, [r0, #540]	; 0x21c
    6e44:	bl	0 <coda_type_record_add_field>
    6e48:	movw	r0, #0
    6e4c:	movt	r0, #0
    6e50:	bl	0 <coda_type_record_field_new>
    6e54:	mov	r6, r0
    6e58:	ldr	r0, [r5, sl]
    6e5c:	ldr	r1, [r0, #444]	; 0x1bc
    6e60:	mov	r0, r6
    6e64:	bl	0 <coda_type_record_field_set_type>
    6e68:	mov	r0, r6
    6e6c:	bl	0 <coda_type_record_field_set_optional>
    6e70:	ldr	r0, [r5, sl]
    6e74:	mov	r1, r6
    6e78:	ldr	r0, [r0, #540]	; 0x21c
    6e7c:	bl	0 <coda_type_record_add_field>
    6e80:	mov	r0, #7
    6e84:	bl	0 <coda_type_record_new>
    6e88:	ldr	r1, [r5, sl]
    6e8c:	str	r0, [r1, #544]	; 0x220
    6e90:	movw	r0, #0
    6e94:	movt	r0, #0
    6e98:	bl	0 <coda_type_record_field_new>
    6e9c:	mov	r6, r0
    6ea0:	ldr	r0, [r5, sl]
    6ea4:	ldr	r1, [r0, #280]	; 0x118
    6ea8:	mov	r0, r6
    6eac:	bl	0 <coda_type_record_field_set_type>
    6eb0:	ldr	r0, [r5, sl]
    6eb4:	mov	r1, r6
    6eb8:	ldr	r0, [r0, #544]	; 0x220
    6ebc:	bl	0 <coda_type_record_add_field>
    6ec0:	movw	r0, #0
    6ec4:	movt	r0, #0
    6ec8:	bl	0 <coda_type_record_field_new>
    6ecc:	mov	r6, r0
    6ed0:	ldr	r0, [r5, sl]
    6ed4:	ldr	r1, [r0, #460]	; 0x1cc
    6ed8:	mov	r0, r6
    6edc:	bl	0 <coda_type_record_field_set_type>
    6ee0:	ldr	r0, [r5, sl]
    6ee4:	mov	r1, r6
    6ee8:	ldr	r0, [r0, #544]	; 0x220
    6eec:	bl	0 <coda_type_record_add_field>
    6ef0:	movw	r0, #0
    6ef4:	movt	r0, #0
    6ef8:	bl	0 <coda_type_record_field_new>
    6efc:	mov	r6, r0
    6f00:	ldr	r0, [r5, sl]
    6f04:	ldr	r1, [r0, #464]	; 0x1d0
    6f08:	mov	r0, r6
    6f0c:	bl	0 <coda_type_record_field_set_type>
    6f10:	ldr	r0, [r5, sl]
    6f14:	mov	r1, r6
    6f18:	ldr	r0, [r0, #544]	; 0x220
    6f1c:	bl	0 <coda_type_record_add_field>
    6f20:	movw	r0, #0
    6f24:	movt	r0, #0
    6f28:	bl	0 <coda_type_record_field_new>
    6f2c:	mov	r6, r0
    6f30:	ldr	r0, [r5, sl]
    6f34:	ldr	r1, [r0, #468]	; 0x1d4
    6f38:	mov	r0, r6
    6f3c:	bl	0 <coda_type_record_field_set_type>
    6f40:	ldr	r0, [r5, sl]
    6f44:	mov	r1, r6
    6f48:	ldr	r0, [r0, #544]	; 0x220
    6f4c:	bl	0 <coda_type_record_add_field>
    6f50:	movw	r0, #0
    6f54:	movt	r0, #0
    6f58:	bl	0 <coda_type_record_field_new>
    6f5c:	mov	r6, r0
    6f60:	ldr	r0, [r5, sl]
    6f64:	ldr	r1, [r0, #472]	; 0x1d8
    6f68:	mov	r0, r6
    6f6c:	bl	0 <coda_type_record_field_set_type>
    6f70:	ldr	r0, [r5, sl]
    6f74:	mov	r1, r6
    6f78:	ldr	r0, [r0, #544]	; 0x220
    6f7c:	bl	0 <coda_type_record_add_field>
    6f80:	movw	r0, #0
    6f84:	movt	r0, #0
    6f88:	bl	0 <coda_type_record_field_new>
    6f8c:	mov	r6, r0
    6f90:	ldr	r0, [r5, sl]
    6f94:	ldr	r1, [r0, #476]	; 0x1dc
    6f98:	mov	r0, r6
    6f9c:	bl	0 <coda_type_record_field_set_type>
    6fa0:	ldr	r0, [r5, sl]
    6fa4:	mov	r1, r6
    6fa8:	ldr	r0, [r0, #544]	; 0x220
    6fac:	bl	0 <coda_type_record_add_field>
    6fb0:	movw	r0, #0
    6fb4:	movt	r0, #0
    6fb8:	bl	0 <coda_type_record_field_new>
    6fbc:	mov	r6, r0
    6fc0:	ldr	r0, [r5, sl]
    6fc4:	ldr	r1, [r0, #480]	; 0x1e0
    6fc8:	mov	r0, r6
    6fcc:	bl	0 <coda_type_record_field_set_type>
    6fd0:	ldr	r0, [r5, sl]
    6fd4:	mov	r1, r6
    6fd8:	ldr	r0, [r0, #544]	; 0x220
    6fdc:	bl	0 <coda_type_record_add_field>
    6fe0:	movw	r0, #0
    6fe4:	movt	r0, #0
    6fe8:	bl	0 <coda_type_record_field_new>
    6fec:	mov	r6, r0
    6ff0:	ldr	r0, [r5, sl]
    6ff4:	ldr	r1, [r0, #484]	; 0x1e4
    6ff8:	mov	r0, r6
    6ffc:	bl	0 <coda_type_record_field_set_type>
    7000:	ldr	r0, [r5, sl]
    7004:	mov	r1, r6
    7008:	ldr	r0, [r0, #544]	; 0x220
    700c:	bl	0 <coda_type_record_add_field>
    7010:	movw	r0, #0
    7014:	movt	r0, #0
    7018:	bl	0 <coda_type_record_field_new>
    701c:	mov	r6, r0
    7020:	ldr	r0, [r5, sl]
    7024:	ldr	r1, [r0, #488]	; 0x1e8
    7028:	mov	r0, r6
    702c:	bl	0 <coda_type_record_field_set_type>
    7030:	ldr	r0, [r5, sl]
    7034:	mov	r1, r6
    7038:	ldr	r0, [r0, #544]	; 0x220
    703c:	bl	0 <coda_type_record_add_field>
    7040:	movw	r0, #0
    7044:	movt	r0, #0
    7048:	bl	0 <coda_type_record_field_new>
    704c:	mov	r6, r0
    7050:	ldr	r0, [r5, sl]
    7054:	ldr	r1, [r0, #492]	; 0x1ec
    7058:	mov	r0, r6
    705c:	bl	0 <coda_type_record_field_set_type>
    7060:	ldr	r0, [r5, sl]
    7064:	mov	r1, r6
    7068:	ldr	r0, [r0, #544]	; 0x220
    706c:	bl	0 <coda_type_record_add_field>
    7070:	movw	r0, #0
    7074:	movt	r0, #0
    7078:	bl	0 <coda_type_record_field_new>
    707c:	mov	r6, r0
    7080:	ldr	r0, [r5, sl]
    7084:	ldr	r1, [r0, #496]	; 0x1f0
    7088:	mov	r0, r6
    708c:	bl	0 <coda_type_record_field_set_type>
    7090:	ldr	r0, [r5, sl]
    7094:	mov	r1, r6
    7098:	ldr	r0, [r0, #544]	; 0x220
    709c:	bl	0 <coda_type_record_add_field>
    70a0:	movw	r0, #0
    70a4:	movt	r0, #0
    70a8:	bl	0 <coda_type_record_field_new>
    70ac:	mov	r6, r0
    70b0:	ldr	r0, [r5, sl]
    70b4:	ldr	r1, [r0, #500]	; 0x1f4
    70b8:	mov	r0, r6
    70bc:	bl	0 <coda_type_record_field_set_type>
    70c0:	ldr	r0, [r5, sl]
    70c4:	mov	r1, r6
    70c8:	ldr	r0, [r0, #544]	; 0x220
    70cc:	bl	0 <coda_type_record_add_field>
    70d0:	movw	r0, #0
    70d4:	movt	r0, #0
    70d8:	bl	0 <coda_type_record_field_new>
    70dc:	mov	r6, r0
    70e0:	ldr	r0, [r5, sl]
    70e4:	ldr	r1, [r0, #504]	; 0x1f8
    70e8:	mov	r0, r6
    70ec:	bl	0 <coda_type_record_field_set_type>
    70f0:	ldr	r0, [r5, sl]
    70f4:	mov	r1, r6
    70f8:	ldr	r0, [r0, #544]	; 0x220
    70fc:	bl	0 <coda_type_record_add_field>
    7100:	movw	r0, #0
    7104:	movt	r0, #0
    7108:	bl	0 <coda_type_record_field_new>
    710c:	mov	r6, r0
    7110:	ldr	r0, [r5, sl]
    7114:	ldr	r1, [r0, #508]	; 0x1fc
    7118:	mov	r0, r6
    711c:	bl	0 <coda_type_record_field_set_type>
    7120:	ldr	r0, [r5, sl]
    7124:	mov	r1, r6
    7128:	ldr	r0, [r0, #544]	; 0x220
    712c:	bl	0 <coda_type_record_add_field>
    7130:	movw	r0, #0
    7134:	movt	r0, #0
    7138:	bl	0 <coda_type_record_field_new>
    713c:	mov	r6, r0
    7140:	ldr	r0, [r5, sl]
    7144:	ldr	r1, [r0, #516]	; 0x204
    7148:	mov	r0, r6
    714c:	bl	0 <coda_type_record_field_set_type>
    7150:	mov	r0, r6
    7154:	bl	0 <coda_type_record_field_set_optional>
    7158:	ldr	r0, [r5, sl]
    715c:	mov	r1, r6
    7160:	ldr	r0, [r0, #544]	; 0x220
    7164:	bl	0 <coda_type_record_add_field>
    7168:	movw	r0, #0
    716c:	movt	r0, #0
    7170:	bl	0 <coda_type_record_field_new>
    7174:	mov	r6, r0
    7178:	ldr	r0, [r5, sl]
    717c:	ldr	r1, [r0, #524]	; 0x20c
    7180:	mov	r0, r6
    7184:	bl	0 <coda_type_record_field_set_type>
    7188:	mov	r0, r6
    718c:	bl	0 <coda_type_record_field_set_hidden>
    7190:	ldr	r0, [r5, sl]
    7194:	mov	r1, r6
    7198:	ldr	r0, [r0, #544]	; 0x220
    719c:	bl	0 <coda_type_record_add_field>
    71a0:	movw	r0, #0
    71a4:	movt	r0, #0
    71a8:	bl	0 <coda_type_record_field_new>
    71ac:	mov	r6, r0
    71b0:	ldr	r0, [r5, sl]
    71b4:	ldr	r1, [r0, #320]	; 0x140
    71b8:	mov	r0, r6
    71bc:	bl	0 <coda_type_record_field_set_type>
    71c0:	mov	r0, r6
    71c4:	bl	0 <coda_type_record_field_set_hidden>
    71c8:	ldr	r0, [r5, sl]
    71cc:	mov	r1, r6
    71d0:	ldr	r0, [r0, #544]	; 0x220
    71d4:	bl	0 <coda_type_record_add_field>
    71d8:	movw	r0, #0
    71dc:	movt	r0, #0
    71e0:	bl	0 <coda_type_record_field_new>
    71e4:	mov	r6, r0
    71e8:	ldr	r0, [r5, sl]
    71ec:	ldr	r1, [r0, #528]	; 0x210
    71f0:	mov	r0, r6
    71f4:	bl	0 <coda_type_record_field_set_type>
    71f8:	mov	r0, r6
    71fc:	bl	0 <coda_type_record_field_set_hidden>
    7200:	ldr	r0, [r5, sl]
    7204:	mov	r1, r6
    7208:	ldr	r0, [r0, #544]	; 0x220
    720c:	bl	0 <coda_type_record_add_field>
    7210:	movw	r0, #0
    7214:	movt	r0, #0
    7218:	bl	0 <coda_type_record_field_new>
    721c:	mov	r6, r0
    7220:	ldr	r0, [r5, sl]
    7224:	ldr	r1, [r0, #532]	; 0x214
    7228:	mov	r0, r6
    722c:	bl	0 <coda_type_record_field_set_type>
    7230:	mov	r0, r6
    7234:	bl	0 <coda_type_record_field_set_hidden>
    7238:	ldr	r0, [r5, sl]
    723c:	mov	r1, r6
    7240:	ldr	r0, [r0, #544]	; 0x220
    7244:	bl	0 <coda_type_record_add_field>
    7248:	movw	r0, #0
    724c:	movt	r0, #0
    7250:	bl	0 <coda_type_record_field_new>
    7254:	mov	r6, r0
    7258:	ldr	r0, [r5, sl]
    725c:	ldr	r1, [r0, #536]	; 0x218
    7260:	mov	r0, r6
    7264:	bl	0 <coda_type_record_field_set_type>
    7268:	ldr	r0, [r5, sl]
    726c:	mov	r1, r6
    7270:	ldr	r0, [r0, #544]	; 0x220
    7274:	bl	0 <coda_type_record_add_field>
    7278:	mov	r0, #7
    727c:	bl	0 <coda_type_array_new>
    7280:	ldr	r1, [r5, sl]
    7284:	str	r0, [r1, #548]	; 0x224
    7288:	ldr	r1, [r1, #348]	; 0x15c
    728c:	bl	0 <coda_type_array_set_base_type>
    7290:	ldr	r0, [r5, sl]
    7294:	mov	r1, #0
    7298:	ldr	r0, [r0, #548]	; 0x224
    729c:	bl	0 <coda_type_array_add_variable_dimension>
    72a0:	mov	r0, #7
    72a4:	bl	0 <coda_type_array_new>
    72a8:	ldr	r1, [r5, sl]
    72ac:	str	r0, [r1, #552]	; 0x228
    72b0:	ldr	r1, [r1, #540]	; 0x21c
    72b4:	bl	0 <coda_type_array_set_base_type>
    72b8:	ldr	r0, [r5, sl]
    72bc:	mov	r1, #0
    72c0:	ldr	r0, [r0, #552]	; 0x228
    72c4:	bl	0 <coda_type_array_add_variable_dimension>
    72c8:	mov	r0, #7
    72cc:	bl	0 <coda_type_array_new>
    72d0:	ldr	r1, [r5, sl]
    72d4:	str	r0, [r1, #556]	; 0x22c
    72d8:	ldr	r1, [r1, #544]	; 0x220
    72dc:	bl	0 <coda_type_array_set_base_type>
    72e0:	ldr	r0, [r5, sl]
    72e4:	mov	r1, #0
    72e8:	ldr	r0, [r0, #556]	; 0x22c
    72ec:	bl	0 <coda_type_array_add_variable_dimension>
    72f0:	mov	r0, #7
    72f4:	bl	0 <coda_type_record_new>
    72f8:	ldr	r1, [r5, sl]
    72fc:	str	r0, [r1, #560]	; 0x230
    7300:	mov	r0, r8
    7304:	bl	0 <coda_type_record_field_new>
    7308:	mov	r6, r0
    730c:	ldr	r0, [r5, sl]
    7310:	ldr	r1, [r0, #284]	; 0x11c
    7314:	mov	r0, r6
    7318:	bl	0 <coda_type_record_field_set_type>
    731c:	ldr	r0, [r5, sl]
    7320:	mov	r1, r6
    7324:	ldr	r0, [r0, #560]	; 0x230
    7328:	bl	0 <coda_type_record_add_field>
    732c:	movw	r0, #0
    7330:	movt	r0, #0
    7334:	bl	0 <coda_type_record_field_new>
    7338:	mov	r6, r0
    733c:	ldr	r0, [r5, sl]
    7340:	ldr	r1, [r0, #324]	; 0x144
    7344:	mov	r0, r6
    7348:	bl	0 <coda_type_record_field_set_type>
    734c:	ldr	r0, [r5, sl]
    7350:	mov	r1, r6
    7354:	ldr	r0, [r0, #560]	; 0x230
    7358:	bl	0 <coda_type_record_add_field>
    735c:	movw	r0, #0
    7360:	movt	r0, #0
    7364:	bl	0 <coda_type_record_field_new>
    7368:	mov	r6, r0
    736c:	ldr	r0, [r5, sl]
    7370:	ldr	r1, [r0, #288]	; 0x120
    7374:	mov	r0, r6
    7378:	bl	0 <coda_type_record_field_set_type>
    737c:	ldr	r0, [r5, sl]
    7380:	mov	r1, r6
    7384:	ldr	r0, [r0, #560]	; 0x230
    7388:	bl	0 <coda_type_record_add_field>
    738c:	movw	r0, #0
    7390:	movt	r0, #0
    7394:	bl	0 <coda_type_record_field_new>
    7398:	mov	r6, r0
    739c:	ldr	r0, [r5, sl]
    73a0:	ldr	r1, [r0, #316]	; 0x13c
    73a4:	mov	r0, r6
    73a8:	bl	0 <coda_type_record_field_set_type>
    73ac:	ldr	r0, [r5, sl]
    73b0:	mov	r1, r6
    73b4:	ldr	r0, [r0, #560]	; 0x230
    73b8:	bl	0 <coda_type_record_add_field>
    73bc:	movw	r0, #0
    73c0:	movt	r0, #0
    73c4:	bl	0 <coda_type_record_field_new>
    73c8:	mov	r6, r0
    73cc:	ldr	r0, [r5, sl]
    73d0:	ldr	r1, [r0, #328]	; 0x148
    73d4:	mov	r0, r6
    73d8:	bl	0 <coda_type_record_field_set_type>
    73dc:	ldr	r0, [r5, sl]
    73e0:	mov	r1, r6
    73e4:	ldr	r0, [r0, #560]	; 0x230
    73e8:	bl	0 <coda_type_record_add_field>
    73ec:	movw	r0, #0
    73f0:	movt	r0, #0
    73f4:	bl	0 <coda_type_record_field_new>
    73f8:	mov	r6, r0
    73fc:	ldr	r0, [r5, sl]
    7400:	ldr	r1, [r0, #332]	; 0x14c
    7404:	mov	r0, r6
    7408:	bl	0 <coda_type_record_field_set_type>
    740c:	ldr	r0, [r5, sl]
    7410:	mov	r1, r6
    7414:	ldr	r0, [r0, #560]	; 0x230
    7418:	bl	0 <coda_type_record_add_field>
    741c:	movw	r0, #0
    7420:	movt	r0, #0
    7424:	bl	0 <coda_type_record_field_new>
    7428:	mov	r6, r0
    742c:	ldr	r0, [r5, sl]
    7430:	ldr	r1, [r0, #336]	; 0x150
    7434:	mov	r0, r6
    7438:	bl	0 <coda_type_record_field_set_type>
    743c:	ldr	r0, [r5, sl]
    7440:	mov	r1, r6
    7444:	ldr	r0, [r0, #560]	; 0x230
    7448:	bl	0 <coda_type_record_add_field>
    744c:	movw	r0, #0
    7450:	movt	r0, #0
    7454:	bl	0 <coda_type_record_field_new>
    7458:	mov	r6, r0
    745c:	ldr	r0, [r5, sl]
    7460:	ldr	r1, [r0, #292]	; 0x124
    7464:	mov	r0, r6
    7468:	bl	0 <coda_type_record_field_set_type>
    746c:	ldr	r0, [r5, sl]
    7470:	mov	r1, r6
    7474:	ldr	r0, [r0, #560]	; 0x230
    7478:	bl	0 <coda_type_record_add_field>
    747c:	movw	r0, #0
    7480:	movt	r0, #0
    7484:	bl	0 <coda_type_record_field_new>
    7488:	mov	r6, r0
    748c:	ldr	r0, [r5, sl]
    7490:	ldr	r1, [r0, #296]	; 0x128
    7494:	mov	r0, r6
    7498:	bl	0 <coda_type_record_field_set_type>
    749c:	ldr	r0, [r5, sl]
    74a0:	mov	r1, r6
    74a4:	ldr	r0, [r0, #560]	; 0x230
    74a8:	bl	0 <coda_type_record_add_field>
    74ac:	movw	r0, #0
    74b0:	movt	r0, #0
    74b4:	bl	0 <coda_type_record_field_new>
    74b8:	mov	r6, r0
    74bc:	ldr	r0, [r5, sl]
    74c0:	ldr	r1, [r0, #300]	; 0x12c
    74c4:	mov	r0, r6
    74c8:	bl	0 <coda_type_record_field_set_type>
    74cc:	ldr	r0, [r5, sl]
    74d0:	mov	r1, r6
    74d4:	ldr	r0, [r0, #560]	; 0x230
    74d8:	bl	0 <coda_type_record_add_field>
    74dc:	movw	r0, #0
    74e0:	movt	r0, #0
    74e4:	bl	0 <coda_type_record_field_new>
    74e8:	mov	r6, r0
    74ec:	ldr	r0, [r5, sl]
    74f0:	ldr	r1, [r0, #304]	; 0x130
    74f4:	mov	r0, r6
    74f8:	bl	0 <coda_type_record_field_set_type>
    74fc:	ldr	r0, [r5, sl]
    7500:	mov	r1, r6
    7504:	ldr	r0, [r0, #560]	; 0x230
    7508:	bl	0 <coda_type_record_add_field>
    750c:	movw	r0, #0
    7510:	movt	r0, #0
    7514:	bl	0 <coda_type_record_field_new>
    7518:	mov	r6, r0
    751c:	ldr	r0, [r5, sl]
    7520:	ldr	r1, [r0, #308]	; 0x134
    7524:	mov	r0, r6
    7528:	bl	0 <coda_type_record_field_set_type>
    752c:	ldr	r0, [r5, sl]
    7530:	mov	r1, r6
    7534:	ldr	r0, [r0, #560]	; 0x230
    7538:	bl	0 <coda_type_record_add_field>
    753c:	movw	r0, #0
    7540:	movt	r0, #0
    7544:	bl	0 <coda_type_record_field_new>
    7548:	mov	r6, r0
    754c:	ldr	r0, [r5, sl]
    7550:	ldr	r1, [r0, #312]	; 0x138
    7554:	mov	r0, r6
    7558:	bl	0 <coda_type_record_field_set_type>
    755c:	ldr	r0, [r5, sl]
    7560:	mov	r1, r6
    7564:	ldr	r0, [r0, #560]	; 0x230
    7568:	bl	0 <coda_type_record_add_field>
    756c:	movw	r0, #0
    7570:	movt	r0, #0
    7574:	bl	0 <coda_type_record_field_new>
    7578:	mov	r6, r0
    757c:	ldr	r0, [r5, sl]
    7580:	ldr	r1, [r0, #340]	; 0x154
    7584:	mov	r0, r6
    7588:	bl	0 <coda_type_record_field_set_type>
    758c:	ldr	r0, [r5, sl]
    7590:	mov	r1, r6
    7594:	ldr	r0, [r0, #560]	; 0x230
    7598:	bl	0 <coda_type_record_add_field>
    759c:	movw	r0, #0
    75a0:	movt	r0, #0
    75a4:	bl	0 <coda_type_record_field_new>
    75a8:	mov	r6, r0
    75ac:	ldr	r0, [r5, sl]
    75b0:	ldr	r1, [r0, #344]	; 0x158
    75b4:	mov	r0, r6
    75b8:	bl	0 <coda_type_record_field_set_type>
    75bc:	ldr	r0, [r5, sl]
    75c0:	mov	r1, r6
    75c4:	ldr	r0, [r0, #560]	; 0x230
    75c8:	bl	0 <coda_type_record_add_field>
    75cc:	movw	r0, #0
    75d0:	movt	r0, #0
    75d4:	bl	0 <coda_type_record_field_new>
    75d8:	mov	r6, r0
    75dc:	ldr	r0, [r5, sl]
    75e0:	ldr	r1, [r0, #548]	; 0x224
    75e4:	mov	r0, r6
    75e8:	bl	0 <coda_type_record_field_set_type>
    75ec:	ldr	r0, [r5, sl]
    75f0:	mov	r1, r6
    75f4:	ldr	r0, [r0, #560]	; 0x230
    75f8:	bl	0 <coda_type_record_add_field>
    75fc:	movw	r0, #0
    7600:	movt	r0, #0
    7604:	bl	0 <coda_type_record_field_new>
    7608:	mov	r6, r0
    760c:	ldr	r0, [r5, sl]
    7610:	ldr	r1, [r0, #552]	; 0x228
    7614:	mov	r0, r6
    7618:	bl	0 <coda_type_record_field_set_type>
    761c:	ldr	r0, [r5, sl]
    7620:	mov	r1, r6
    7624:	ldr	r0, [r0, #560]	; 0x230
    7628:	bl	0 <coda_type_record_add_field>
    762c:	movw	r0, #0
    7630:	movt	r0, #0
    7634:	bl	0 <coda_type_record_field_new>
    7638:	mov	r6, r0
    763c:	ldr	r0, [r5, sl]
    7640:	ldr	r1, [r0, #556]	; 0x22c
    7644:	mov	r0, r6
    7648:	bl	0 <coda_type_record_field_set_type>
    764c:	ldr	r0, [r5, sl]
    7650:	mov	r1, r6
    7654:	ldr	r0, [r0, #560]	; 0x230
    7658:	bl	0 <coda_type_record_add_field>
    765c:	mov	r0, #7
    7660:	bl	0 <coda_type_union_new>
    7664:	ldr	r1, [r5, sl]
    7668:	str	r0, [r1, #564]	; 0x234
    766c:	movw	r0, #0
    7670:	movt	r0, #0
    7674:	bl	0 <coda_type_record_field_new>
    7678:	mov	r6, r0
    767c:	ldr	r0, [r5, sl]
    7680:	ldr	r1, [r0, #272]	; 0x110
    7684:	mov	r0, r6
    7688:	bl	0 <coda_type_record_field_set_type>
    768c:	mov	r0, r6
    7690:	bl	0 <coda_type_record_field_set_optional>
    7694:	ldr	r0, [r5, sl]
    7698:	mov	r1, r6
    769c:	ldr	r0, [r0, #564]	; 0x234
    76a0:	bl	0 <coda_type_record_add_field>
    76a4:	movw	r0, #0
    76a8:	movt	r0, #0
    76ac:	bl	0 <coda_type_record_field_new>
    76b0:	mov	r6, r0
    76b4:	ldr	r0, [r5, sl]
    76b8:	ldr	r1, [r0, #560]	; 0x230
    76bc:	mov	r0, r6
    76c0:	bl	0 <coda_type_record_field_set_type>
    76c4:	mov	r0, r6
    76c8:	bl	0 <coda_type_record_field_set_optional>
    76cc:	ldr	r0, [r5, sl]
    76d0:	mov	r1, r6
    76d4:	ldr	r0, [r0, #564]	; 0x234
    76d8:	bl	0 <coda_type_record_add_field>
    76dc:	mov	r0, #7
    76e0:	bl	0 <coda_type_array_new>
    76e4:	ldr	r1, [r5, sl]
    76e8:	str	r0, [r1, #568]	; 0x238
    76ec:	ldr	r1, [r1, #564]	; 0x234
    76f0:	bl	0 <coda_type_array_set_base_type>
    76f4:	ldr	r0, [r5, sl]
    76f8:	mov	r1, #0
    76fc:	ldr	r0, [r0, #568]	; 0x238
    7700:	bl	0 <coda_type_array_add_variable_dimension>
    7704:	b	7730 <grib_init+0x3f90>
    7708:	movw	r1, #0
    770c:	movw	r3, #0
    7710:	mov	r0, #227	; 0xe3
    7714:	mov	r2, #572	; 0x23c
    7718:	mvn	r4, #0
    771c:	movt	r1, #0
    7720:	movt	r3, #0
    7724:	str	r0, [sp]
    7728:	mvn	r0, #0
    772c:	bl	0 <coda_set_error>
    7730:	mov	r0, r4
    7734:	sub	sp, fp, #28
    7738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000773c <coda_grib_close>:
    773c:	push	{r4, sl, fp, lr}
    7740:	add	fp, sp, #8
    7744:	mov	r4, r0
    7748:	ldr	r0, [r0]
    774c:	cmp	r0, #0
    7750:	beq	7758 <coda_grib_close+0x1c>
    7754:	bl	0 <free>
    7758:	ldr	r0, [r4, #20]
    775c:	cmp	r0, #0
    7760:	beq	7768 <coda_grib_close+0x2c>
    7764:	bl	0 <coda_dynamic_type_delete>
    7768:	ldr	r0, [r4, #48]	; 0x30
    776c:	cmp	r0, #0
    7770:	beq	7778 <coda_grib_close+0x3c>
    7774:	bl	0 <free>
    7778:	ldr	r0, [r4, #52]	; 0x34
    777c:	cmp	r0, #0
    7780:	beq	7788 <coda_grib_close+0x4c>
    7784:	bl	0 <coda_bin_close>
    7788:	mov	r0, r4
    778c:	bl	0 <free>
    7790:	mov	r0, #0
    7794:	pop	{r4, sl, fp, pc}

00007798 <read_bytes>:
    7798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    779c:	add	fp, sp, #28
    77a0:	sub	sp, sp, #68	; 0x44
    77a4:	ldr	r7, [r0, #48]	; 0x30
    77a8:	mov	r4, r2
    77ac:	ldr	r1, [fp, #12]
    77b0:	ldr	r2, [fp, #8]
    77b4:	ldr	ip, [fp, #16]
    77b8:	mov	sl, r3
    77bc:	cmp	r7, #0
    77c0:	beq	7844 <read_bytes+0xac>
    77c4:	add	r9, r0, #40	; 0x28
    77c8:	adds	r5, r2, r4
    77cc:	ldr	r8, [r9]
    77d0:	ldr	r3, [r9, #4]
    77d4:	adc	r6, r1, sl
    77d8:	subs	r5, r8, r5
    77dc:	sbcs	r3, r3, r6
    77e0:	bcs	788c <read_bytes+0xf4>
    77e4:	ldr	r0, [r0, #16]
    77e8:	cmp	r0, #1
    77ec:	bls	7870 <read_bytes+0xd8>
    77f0:	add	r8, sp, #47	; 0x2f
    77f4:	mov	r0, r2
    77f8:	mov	r2, r8
    77fc:	bl	0 <coda_str64>
    7800:	add	r7, sp, #26
    7804:	mov	r0, r4
    7808:	mov	r1, sl
    780c:	mov	r2, r7
    7810:	bl	0 <coda_str64>
    7814:	ldrd	r0, [r9]
    7818:	add	r4, sp, #5
    781c:	mov	r2, r4
    7820:	bl	0 <coda_str64>
    7824:	movw	r1, #0
    7828:	mvn	r0, #300	; 0x12c
    782c:	mov	r2, r8
    7830:	mov	r3, r7
    7834:	str	r4, [sp]
    7838:	movt	r1, #0
    783c:	bl	0 <coda_set_error>
    7840:	b	7880 <read_bytes+0xe8>
    7844:	ldr	r3, [r0, #16]
    7848:	cmp	r3, #2
    784c:	bcs	78e8 <read_bytes+0x150>
    7850:	add	r3, r0, #8
    7854:	adds	r7, r2, r4
    7858:	ldr	r6, [r3]
    785c:	ldr	r3, [r3, #4]
    7860:	adc	r1, r1, sl
    7864:	subs	r7, r6, r7
    7868:	sbcs	r1, r3, r1
    786c:	bcs	78a4 <read_bytes+0x10c>
    7870:	movw	r1, #0
    7874:	mvn	r0, #300	; 0x12c
    7878:	movt	r1, #0
    787c:	bl	0 <coda_set_error>
    7880:	mvn	r0, #0
    7884:	sub	sp, fp, #28
    7888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    788c:	add	r1, r7, r4
    7890:	mov	r0, ip
    7894:	bl	0 <memcpy>
    7898:	mov	r0, #0
    789c:	sub	sp, fp, #28
    78a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    78a4:	ldr	r0, [r0, #56]	; 0x38
    78a8:	mov	r1, ip
    78ac:	mov	r3, r4
    78b0:	bl	0 <pread>
    78b4:	mov	r1, r0
    78b8:	mov	r0, #0
    78bc:	cmn	r1, #1
    78c0:	bgt	7884 <read_bytes+0xec>
    78c4:	bl	0 <__errno_location>
    78c8:	ldr	r0, [r0]
    78cc:	bl	0 <strerror>
    78d0:	movw	r1, #0
    78d4:	mov	r2, r0
    78d8:	mvn	r0, #21
    78dc:	movt	r1, #0
    78e0:	bl	0 <coda_set_error>
    78e4:	b	7880 <read_bytes+0xe8>
    78e8:	movw	r0, #0
    78ec:	movw	r1, #0
    78f0:	movw	r3, #0
    78f4:	mov	r2, #83	; 0x53
    78f8:	movt	r0, #0
    78fc:	movt	r1, #0
    7900:	movt	r3, #0
    7904:	bl	0 <__assert_fail>
