
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_XML_ParserCreate>:
       0:	mov	r1, #0
       4:	mov	r2, #0
       8:	mov	r3, #0
       c:	b	40 <parserCreate>

00000010 <coda_XML_ParserCreate_MM>:
      10:	mov	r3, #0
      14:	b	40 <parserCreate>

00000018 <coda_XML_ParserCreateNS>:
      18:	push	{fp, lr}
      1c:	mov	fp, sp
      20:	sub	sp, sp, #8
      24:	strb	r1, [fp, #-2]
      28:	sub	r2, fp, #2
      2c:	mov	r1, #0
      30:	mov	r3, #0
      34:	bl	40 <parserCreate>
      38:	mov	sp, fp
      3c:	pop	{fp, pc}

00000040 <parserCreate>:
      40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
      44:	add	fp, sp, #24
      48:	mov	r7, r3
      4c:	mov	r8, r2
      50:	mov	r9, r0
      54:	cmp	r1, #0
      58:	beq	98 <parserCreate+0x58>
      5c:	mov	r5, r1
      60:	ldr	r1, [r1]
      64:	mov	r0, #520	; 0x208
      68:	blx	r1
      6c:	cmp	r0, #0
      70:	beq	2d0 <parserCreate+0x290>
      74:	ldr	r1, [r5]
      78:	mov	r6, r0
      7c:	mov	r4, r0
      80:	str	r1, [r6, #12]!
      84:	ldr	r0, [r5, #4]
      88:	str	r0, [r6, #4]
      8c:	ldr	r0, [r5, #8]
      90:	str	r0, [r6, #8]
      94:	b	d0 <parserCreate+0x90>
      98:	mov	r0, #520	; 0x208
      9c:	bl	0 <malloc>
      a0:	cmp	r0, #0
      a4:	beq	2d0 <parserCreate+0x290>
      a8:	movw	r1, #0
      ac:	movw	r2, #0
      b0:	mov	r4, r0
      b4:	mov	r6, r0
      b8:	movw	r0, #0
      bc:	movt	r1, #0
      c0:	movt	r0, #0
      c4:	movt	r2, #0
      c8:	str	r1, [r6, #12]!
      cc:	stmib	r6, {r0, r2}
      d0:	mov	r5, #0
      d4:	mov	r0, #16
      d8:	str	r5, [r4, #32]
      dc:	str	r5, [r4, #8]
      e0:	str	r0, [r4, #388]	; 0x184
      e4:	mov	r0, #256	; 0x100
      e8:	blx	r1
      ec:	cmp	r0, #0
      f0:	str	r0, [r4, #400]	; 0x190
      f4:	beq	2fc <parserCreate+0x2bc>
      f8:	ldr	r1, [r6]
      fc:	mov	r0, #1024	; 0x400
     100:	blx	r1
     104:	cmp	r0, #0
     108:	str	r0, [r4, #52]	; 0x34
     10c:	beq	128 <parserCreate+0xe8>
     110:	add	r0, r0, #1024	; 0x400
     114:	cmp	r7, #0
     118:	str	r0, [r4, #56]	; 0x38
     11c:	beq	144 <parserCreate+0x104>
     120:	str	r7, [r4, #364]	; 0x16c
     124:	b	214 <parserCreate+0x1d4>
     128:	ldr	r1, [r4, #20]
     12c:	ldr	r0, [r4, #400]	; 0x190
     130:	blx	r1
     134:	ldr	r1, [r4, #20]
     138:	mov	r0, r4
     13c:	blx	r1
     140:	b	2d0 <parserCreate+0x290>
     144:	ldr	r1, [r6]
     148:	mov	r0, #188	; 0xbc
     14c:	blx	r1
     150:	cmp	r0, #0
     154:	beq	2dc <parserCreate+0x29c>
     158:	mov	r1, #0
     15c:	vmov.i32	q8, #0	; 0x00000000
     160:	add	r2, r0, #80	; 0x50
     164:	str	r1, [r0, #96]	; 0x60
     168:	str	r6, [r0, #100]	; 0x64
     16c:	str	r1, [r0, #120]	; 0x78
     170:	str	r6, [r0, #124]	; 0x7c
     174:	strb	r1, [r0, #4]
     178:	str	r1, [r0]
     17c:	strb	r1, [r0, #24]
     180:	str	r1, [r0, #8]
     184:	str	r1, [r0, #12]
     188:	str	r6, [r0, #16]
     18c:	str	r1, [r0, #20]
     190:	strb	r1, [r0, #44]	; 0x2c
     194:	vst1.32	{d16-d17}, [r2]
     198:	add	r2, r0, #104	; 0x68
     19c:	vst1.32	{d16-d17}, [r2]
     1a0:	add	r2, r0, #164	; 0xa4
     1a4:	str	r1, [r0, #28]
     1a8:	str	r1, [r0, #32]
     1ac:	str	r6, [r0, #36]	; 0x24
     1b0:	str	r1, [r0, #40]	; 0x28
     1b4:	strb	r1, [r0, #64]	; 0x40
     1b8:	str	r1, [r0, #48]	; 0x30
     1bc:	str	r1, [r0, #52]	; 0x34
     1c0:	str	r6, [r0, #56]	; 0x38
     1c4:	str	r1, [r0, #60]	; 0x3c
     1c8:	str	r1, [r0, #68]	; 0x44
     1cc:	str	r1, [r0, #72]	; 0x48
     1d0:	str	r6, [r0, #76]	; 0x4c
     1d4:	strb	r1, [r0, #131]	; 0x83
     1d8:	strb	r1, [r0, #136]	; 0x88
     1dc:	str	r1, [r0, #132]	; 0x84
     1e0:	str	r1, [r0, #140]	; 0x8c
     1e4:	str	r1, [r0, #144]	; 0x90
     1e8:	str	r6, [r0, #148]	; 0x94
     1ec:	str	r1, [r0, #152]	; 0x98
     1f0:	str	r1, [r0, #156]	; 0x9c
     1f4:	strb	r1, [r0, #160]	; 0xa0
     1f8:	str	r1, [r0, #180]	; 0xb4
     1fc:	str	r1, [r0, #184]	; 0xb8
     200:	vst1.32	{d16-d17}, [r2]
     204:	mov	r2, #1
     208:	strh	r2, [r0, #128]	; 0x80
     20c:	strb	r1, [r0, #130]	; 0x82
     210:	str	r0, [r4, #364]	; 0x16c
     214:	mov	r0, #0
     218:	mov	r1, #33	; 0x21
     21c:	vmov.i32	q8, #0	; 0x00000000
     220:	str	r0, [r4, #376]	; 0x178
     224:	str	r0, [r4, #384]	; 0x180
     228:	str	r0, [r4, #312]	; 0x138
     22c:	str	r0, [r4, #484]	; 0x1e4
     230:	str	r0, [r4, #480]	; 0x1e0
     234:	str	r0, [r4, #132]	; 0x84
     238:	str	r0, [r4, #256]	; 0x100
     23c:	strb	r1, [r4, #488]	; 0x1e8
     240:	strh	r0, [r4, #244]	; 0xf4
     244:	str	r0, [r4, #404]	; 0x194
     248:	str	r0, [r4, #408]	; 0x198
     24c:	strb	r0, [r4, #412]	; 0x19c
     250:	str	r0, [r4, #448]	; 0x1c0
     254:	str	r6, [r4, #452]	; 0x1c4
     258:	str	r0, [r4, #472]	; 0x1d8
     25c:	add	r0, r4, #432	; 0x1b0
     260:	mov	r1, r9
     264:	vst1.32	{d16-d17}, [r0]
     268:	add	r0, r4, #456	; 0x1c8
     26c:	vst1.32	{d16-d17}, [r0]
     270:	mov	r0, r4
     274:	str	r6, [r4, #476]	; 0x1dc
     278:	bl	758 <parserInit>
     27c:	cmp	r9, #0
     280:	beq	290 <parserCreate+0x250>
     284:	ldr	r0, [r4, #240]	; 0xf0
     288:	cmp	r0, #0
     28c:	beq	2c8 <parserCreate+0x288>
     290:	cmp	r8, #0
     294:	beq	2b8 <parserCreate+0x278>
     298:	mov	r0, #1
     29c:	strb	r0, [r4, #244]	; 0xf4
     2a0:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
     2a4:	str	r0, [r4, #236]	; 0xec
     2a8:	ldrb	r0, [r8]
     2ac:	strb	r0, [r4, #488]	; 0x1e8
     2b0:	mov	r0, r4
     2b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2b8:	bl	0 <coda_XmlGetUtf8InternalEncoding>
     2bc:	str	r0, [r4, #236]	; 0xec
     2c0:	mov	r0, r4
     2c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2c8:	mov	r0, r4
     2cc:	bl	17f0 <coda_XML_ParserFree>
     2d0:	mov	r5, #0
     2d4:	mov	r0, r5
     2d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2dc:	mov	r5, #0
     2e0:	str	r5, [r4, #364]	; 0x16c
     2e4:	ldr	r1, [r4, #20]
     2e8:	ldr	r0, [r4, #52]	; 0x34
     2ec:	blx	r1
     2f0:	ldr	r1, [r4, #20]
     2f4:	ldr	r0, [r4, #400]	; 0x190
     2f8:	blx	r1
     2fc:	ldr	r1, [r4, #20]
     300:	mov	r0, r4
     304:	blx	r1
     308:	mov	r0, r5
     30c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000310 <coda_XML_ParserReset>:
     310:	push	{r4, r5, r6, r7, fp, lr}
     314:	add	fp, sp, #16
     318:	mov	r5, r1
     31c:	ldr	r1, [r0, #492]	; 0x1ec
     320:	mov	r4, r0
     324:	mov	r0, #0
     328:	cmp	r1, #0
     32c:	popne	{r4, r5, r6, r7, fp, pc}
     330:	ldr	r7, [r4, #372]	; 0x174
     334:	cmp	r7, #0
     338:	beq	390 <coda_XML_ParserReset+0x80>
     33c:	ldr	r2, [r4, #376]	; 0x178
     340:	mov	r1, #0
     344:	mov	r0, r7
     348:	ldr	r7, [r7]
     34c:	ldr	r3, [r0, #44]	; 0x2c
     350:	str	r2, [r0]
     354:	cmp	r3, #0
     358:	beq	37c <coda_XML_ParserReset+0x6c>
     35c:	ldr	r6, [r4, #384]	; 0x180
     360:	mov	r2, r3
     364:	ldr	r3, [r3, #4]
     368:	str	r6, [r2, #4]
     36c:	mov	r6, r2
     370:	cmp	r3, #0
     374:	bne	360 <coda_XML_ParserReset+0x50>
     378:	str	r2, [r4, #384]	; 0x180
     37c:	cmp	r7, #0
     380:	mov	r2, r0
     384:	str	r1, [r0, #44]	; 0x2c
     388:	bne	344 <coda_XML_ParserReset+0x34>
     38c:	str	r0, [r4, #376]	; 0x178
     390:	ldr	r0, [r4, #308]	; 0x134
     394:	cmp	r0, #0
     398:	beq	3bc <coda_XML_ParserReset+0xac>
     39c:	ldr	r2, [r4, #312]	; 0x138
     3a0:	mov	r1, r0
     3a4:	ldr	r0, [r0, #8]
     3a8:	str	r2, [r1, #8]
     3ac:	mov	r2, r1
     3b0:	cmp	r0, #0
     3b4:	bne	3a0 <coda_XML_ParserReset+0x90>
     3b8:	str	r1, [r4, #312]	; 0x138
     3bc:	ldr	r0, [r4, #380]	; 0x17c
     3c0:	cmp	r0, #0
     3c4:	beq	3e8 <coda_XML_ParserReset+0xd8>
     3c8:	ldr	r2, [r4, #384]	; 0x180
     3cc:	mov	r1, r0
     3d0:	ldr	r0, [r0, #4]
     3d4:	str	r2, [r1, #4]
     3d8:	mov	r2, r1
     3dc:	cmp	r0, #0
     3e0:	bne	3cc <coda_XML_ParserReset+0xbc>
     3e4:	str	r1, [r4, #384]	; 0x180
     3e8:	ldr	r1, [r4, #20]
     3ec:	ldr	r0, [r4, #248]	; 0xf8
     3f0:	blx	r1
     3f4:	ldr	r1, [r4, #260]	; 0x104
     3f8:	cmp	r1, #0
     3fc:	beq	408 <coda_XML_ParserReset+0xf8>
     400:	ldr	r0, [r4, #252]	; 0xfc
     404:	blx	r1
     408:	ldr	r0, [r4, #436]	; 0x1b4
     40c:	cmp	r0, #0
     410:	beq	440 <coda_XML_ParserReset+0x130>
     414:	ldr	r1, [r4, #432]	; 0x1b0
     418:	cmp	r1, #0
     41c:	beq	448 <coda_XML_ParserReset+0x138>
     420:	mov	r2, r1
     424:	ldr	r1, [r1]
     428:	str	r0, [r2]
     42c:	mov	r0, r2
     430:	cmp	r1, #0
     434:	bne	420 <coda_XML_ParserReset+0x110>
     438:	str	r2, [r4, #436]	; 0x1b4
     43c:	b	448 <coda_XML_ParserReset+0x138>
     440:	ldr	r0, [r4, #432]	; 0x1b0
     444:	str	r0, [r4, #436]	; 0x1b4
     448:	mov	r0, #0
     44c:	str	r0, [r4, #432]	; 0x1b0
     450:	str	r0, [r4, #440]	; 0x1b8
     454:	str	r0, [r4, #444]	; 0x1bc
     458:	str	r0, [r4, #448]	; 0x1c0
     45c:	ldr	r0, [r4, #460]	; 0x1cc
     460:	cmp	r0, #0
     464:	beq	494 <coda_XML_ParserReset+0x184>
     468:	ldr	r1, [r4, #456]	; 0x1c8
     46c:	cmp	r1, #0
     470:	beq	49c <coda_XML_ParserReset+0x18c>
     474:	mov	r2, r1
     478:	ldr	r1, [r1]
     47c:	str	r0, [r2]
     480:	mov	r0, r2
     484:	cmp	r1, #0
     488:	bne	474 <coda_XML_ParserReset+0x164>
     48c:	str	r2, [r4, #460]	; 0x1cc
     490:	b	49c <coda_XML_ParserReset+0x18c>
     494:	ldr	r0, [r4, #456]	; 0x1c8
     498:	str	r0, [r4, #460]	; 0x1cc
     49c:	mov	r0, #0
     4a0:	mov	r1, r5
     4a4:	str	r0, [r4, #456]	; 0x1c8
     4a8:	str	r0, [r4, #464]	; 0x1d0
     4ac:	str	r0, [r4, #468]	; 0x1d4
     4b0:	str	r0, [r4, #472]	; 0x1d8
     4b4:	mov	r0, r4
     4b8:	bl	758 <parserInit>
     4bc:	ldr	r5, [r4, #364]	; 0x16c
     4c0:	ldr	r0, [r5, #28]
     4c4:	ldr	r6, [r5, #20]
     4c8:	lsl	r7, r0, #2
     4cc:	cmp	r7, #0
     4d0:	bne	4e4 <coda_XML_ParserReset+0x1d4>
     4d4:	b	510 <coda_XML_ParserReset+0x200>
     4d8:	sub	r7, r7, #4
     4dc:	cmp	r7, #0
     4e0:	beq	510 <coda_XML_ParserReset+0x200>
     4e4:	ldr	r0, [r6], #4
     4e8:	cmp	r0, #0
     4ec:	ldrne	r1, [r0, #16]
     4f0:	cmpne	r1, #0
     4f4:	beq	4d8 <coda_XML_ParserReset+0x1c8>
     4f8:	ldr	r0, [r0, #20]
     4fc:	ldr	r1, [r4, #20]
     500:	blx	r1
     504:	sub	r7, r7, #4
     508:	cmp	r7, #0
     50c:	bne	4e4 <coda_XML_ParserReset+0x1d4>
     510:	ldr	r0, [r5, #8]
     514:	cmp	r0, #0
     518:	beq	550 <coda_XML_ParserReset+0x240>
     51c:	mov	r6, #0
     520:	mov	r7, #0
     524:	ldr	r0, [r5]
     528:	ldr	r1, [r5, #16]
     52c:	ldr	r0, [r0, r7, lsl #2]
     530:	ldr	r1, [r1, #8]
     534:	blx	r1
     538:	ldr	r0, [r5]
     53c:	str	r6, [r0, r7, lsl #2]
     540:	add	r7, r7, #1
     544:	ldr	r0, [r5, #8]
     548:	cmp	r7, r0
     54c:	bcc	524 <coda_XML_ParserReset+0x214>
     550:	mov	r6, #0
     554:	strb	r6, [r5, #131]	; 0x83
     558:	str	r6, [r5, #12]
     55c:	ldr	r0, [r5, #140]	; 0x8c
     560:	cmp	r0, #0
     564:	beq	598 <coda_XML_ParserReset+0x288>
     568:	mov	r7, #0
     56c:	ldr	r0, [r5, #132]	; 0x84
     570:	ldr	r1, [r5, #148]	; 0x94
     574:	ldr	r0, [r0, r7, lsl #2]
     578:	ldr	r1, [r1, #8]
     57c:	blx	r1
     580:	ldr	r0, [r5, #132]	; 0x84
     584:	str	r6, [r0, r7, lsl #2]
     588:	add	r7, r7, #1
     58c:	ldr	r0, [r5, #140]	; 0x8c
     590:	cmp	r7, r0
     594:	bcc	56c <coda_XML_ParserReset+0x25c>
     598:	mov	r6, #0
     59c:	str	r6, [r5, #144]	; 0x90
     5a0:	ldr	r0, [r5, #28]
     5a4:	cmp	r0, #0
     5a8:	beq	5dc <coda_XML_ParserReset+0x2cc>
     5ac:	mov	r7, #0
     5b0:	ldr	r0, [r5, #20]
     5b4:	ldr	r1, [r5, #36]	; 0x24
     5b8:	ldr	r0, [r0, r7, lsl #2]
     5bc:	ldr	r1, [r1, #8]
     5c0:	blx	r1
     5c4:	ldr	r0, [r5, #20]
     5c8:	str	r6, [r0, r7, lsl #2]
     5cc:	add	r7, r7, #1
     5d0:	ldr	r0, [r5, #28]
     5d4:	cmp	r7, r0
     5d8:	bcc	5b0 <coda_XML_ParserReset+0x2a0>
     5dc:	mov	r6, #0
     5e0:	str	r6, [r5, #32]
     5e4:	ldr	r0, [r5, #48]	; 0x30
     5e8:	cmp	r0, #0
     5ec:	beq	620 <coda_XML_ParserReset+0x310>
     5f0:	mov	r7, #0
     5f4:	ldr	r0, [r5, #40]	; 0x28
     5f8:	ldr	r1, [r5, #56]	; 0x38
     5fc:	ldr	r0, [r0, r7, lsl #2]
     600:	ldr	r1, [r1, #8]
     604:	blx	r1
     608:	ldr	r0, [r5, #40]	; 0x28
     60c:	str	r6, [r0, r7, lsl #2]
     610:	add	r7, r7, #1
     614:	ldr	r0, [r5, #48]	; 0x30
     618:	cmp	r7, r0
     61c:	bcc	5f4 <coda_XML_ParserReset+0x2e4>
     620:	mov	r6, #0
     624:	str	r6, [r5, #52]	; 0x34
     628:	ldr	r0, [r5, #68]	; 0x44
     62c:	cmp	r0, #0
     630:	beq	664 <coda_XML_ParserReset+0x354>
     634:	mov	r7, #0
     638:	ldr	r0, [r5, #60]	; 0x3c
     63c:	ldr	r1, [r5, #76]	; 0x4c
     640:	ldr	r0, [r0, r7, lsl #2]
     644:	ldr	r1, [r1, #8]
     648:	blx	r1
     64c:	ldr	r0, [r5, #60]	; 0x3c
     650:	str	r6, [r0, r7, lsl #2]
     654:	add	r7, r7, #1
     658:	ldr	r0, [r5, #68]	; 0x44
     65c:	cmp	r7, r0
     660:	bcc	638 <coda_XML_ParserReset+0x328>
     664:	mov	r0, #0
     668:	str	r0, [r5, #72]	; 0x48
     66c:	ldr	r0, [r5, #84]	; 0x54
     670:	cmp	r0, #0
     674:	beq	6a4 <coda_XML_ParserReset+0x394>
     678:	ldr	r1, [r5, #80]	; 0x50
     67c:	cmp	r1, #0
     680:	beq	6ac <coda_XML_ParserReset+0x39c>
     684:	mov	r2, r1
     688:	ldr	r1, [r1]
     68c:	str	r0, [r2]
     690:	mov	r0, r2
     694:	cmp	r1, #0
     698:	bne	684 <coda_XML_ParserReset+0x374>
     69c:	str	r2, [r5, #84]	; 0x54
     6a0:	b	6ac <coda_XML_ParserReset+0x39c>
     6a4:	ldr	r0, [r5, #80]	; 0x50
     6a8:	str	r0, [r5, #84]	; 0x54
     6ac:	mov	r0, #0
     6b0:	str	r0, [r5, #80]	; 0x50
     6b4:	str	r0, [r5, #88]	; 0x58
     6b8:	str	r0, [r5, #92]	; 0x5c
     6bc:	str	r0, [r5, #96]	; 0x60
     6c0:	ldr	r0, [r5, #108]	; 0x6c
     6c4:	cmp	r0, #0
     6c8:	beq	6f8 <coda_XML_ParserReset+0x3e8>
     6cc:	ldr	r1, [r5, #104]	; 0x68
     6d0:	cmp	r1, #0
     6d4:	beq	700 <coda_XML_ParserReset+0x3f0>
     6d8:	mov	r2, r1
     6dc:	ldr	r1, [r1]
     6e0:	str	r0, [r2]
     6e4:	mov	r0, r2
     6e8:	cmp	r1, #0
     6ec:	bne	6d8 <coda_XML_ParserReset+0x3c8>
     6f0:	str	r2, [r5, #108]	; 0x6c
     6f4:	b	700 <coda_XML_ParserReset+0x3f0>
     6f8:	ldr	r0, [r5, #104]	; 0x68
     6fc:	str	r0, [r5, #108]	; 0x6c
     700:	mov	r6, #0
     704:	str	r6, [r5, #104]	; 0x68
     708:	str	r6, [r5, #112]	; 0x70
     70c:	str	r6, [r5, #116]	; 0x74
     710:	str	r6, [r5, #120]	; 0x78
     714:	str	r6, [r5, #152]	; 0x98
     718:	str	r6, [r5, #156]	; 0x9c
     71c:	strb	r6, [r5, #160]	; 0xa0
     720:	ldr	r0, [r5, #184]	; 0xb8
     724:	ldr	r1, [r4, #20]
     728:	blx	r1
     72c:	str	r6, [r5, #184]	; 0xb8
     730:	ldr	r0, [r5, #164]!	; 0xa4
     734:	ldr	r1, [r4, #20]
     738:	blx	r1
     73c:	vmov.i32	q8, #0	; 0x00000000
     740:	mov	r0, #1
     744:	str	r6, [r5, #16]
     748:	vst1.32	{d16-d17}, [r5]
     74c:	strh	r0, [r5, #-36]	; 0xffffffdc
     750:	strb	r6, [r5, #-34]	; 0xffffffde
     754:	pop	{r4, r5, r6, r7, fp, pc}

00000758 <parserInit>:
     758:	push	{r4, r5, r6, r7, fp, lr}
     75c:	add	fp, sp, #16
     760:	mov	r4, r0
     764:	movw	r0, #0
     768:	mov	r5, r1
     76c:	movt	r0, #0
     770:	str	r0, [r4, #288]	; 0x120
     774:	add	r0, r4, #264	; 0x108
     778:	bl	0 <coda_XmlPrologStateInit>
     77c:	mov	r7, #0
     780:	cmp	r5, #0
     784:	mov	r0, #0
     788:	beq	7e4 <parserInit+0x8c>
     78c:	add	r6, r4, #432	; 0x1b0
     790:	ldr	r1, [r4, #440]	; 0x1b8
     794:	ldr	r0, [r4, #444]	; 0x1bc
     798:	cmp	r0, r1
     79c:	bne	7b4 <parserInit+0x5c>
     7a0:	mov	r0, r6
     7a4:	bl	65e4 <poolGrow>
     7a8:	cmp	r0, #0
     7ac:	beq	7e0 <parserInit+0x88>
     7b0:	ldr	r0, [r4, #444]	; 0x1bc
     7b4:	ldrb	r1, [r5]
     7b8:	add	r2, r0, #1
     7bc:	str	r2, [r4, #444]	; 0x1bc
     7c0:	strb	r1, [r0]
     7c4:	ldrb	r0, [r5], #1
     7c8:	cmp	r0, #0
     7cc:	bne	790 <parserInit+0x38>
     7d0:	ldr	r0, [r4, #448]	; 0x1c0
     7d4:	ldr	r1, [r4, #444]	; 0x1bc
     7d8:	str	r1, [r4, #448]	; 0x1c0
     7dc:	b	7e4 <parserInit+0x8c>
     7e0:	mov	r0, #0
     7e4:	str	r7, [r4, #368]	; 0x170
     7e8:	str	r0, [r4, #240]	; 0xf0
     7ec:	add	r0, r4, #156	; 0x9c
     7f0:	add	r1, r4, #152	; 0x98
     7f4:	mov	r2, #0
     7f8:	bl	0 <coda_XmlInitEncoding>
     7fc:	vmov.i32	q8, #0	; 0x00000000
     800:	add	r0, r4, #108	; 0x6c
     804:	str	r7, [r4]
     808:	str	r7, [r4, #4]
     80c:	vst1.32	{d16-d17}, [r0]
     810:	add	r0, r4, #92	; 0x5c
     814:	vst1.32	{d16-d17}, [r0]
     818:	add	r0, r4, #76	; 0x4c
     81c:	vst1.32	{d16-d17}, [r0]
     820:	add	r0, r4, #60	; 0x3c
     824:	vst1.32	{d16-d17}, [r0]
     828:	add	r0, r4, #136	; 0x88
     82c:	str	r7, [r4, #128]	; 0x80
     830:	vst1.64	{d16-d17}, [r0]
     834:	add	r0, r4, #416	; 0x1a0
     838:	str	r7, [r4, #40]	; 0x28
     83c:	str	r7, [r4, #44]	; 0x2c
     840:	str	r7, [r4, #48]	; 0x30
     844:	vst1.64	{d16-d17}, [r0]
     848:	ldr	r0, [r4, #8]
     84c:	str	r0, [r4, #24]
     850:	str	r0, [r4, #28]
     854:	add	r0, r4, #292	; 0x124
     858:	str	r7, [r4, #308]	; 0x134
     85c:	vst1.32	{d16-d17}, [r0]
     860:	add	r0, r4, #340	; 0x154
     864:	str	r4, [r4, #124]	; 0x7c
     868:	str	r7, [r4, #358]	; 0x166
     86c:	vst1.32	{d16-d17}, [r0]
     870:	add	r0, r4, #324	; 0x144
     874:	str	r7, [r4, #354]	; 0x162
     878:	vst1.32	{d16-d17}, [r0]
     87c:	mov	r0, #1
     880:	strb	r0, [r4, #316]	; 0x13c
     884:	str	r7, [r4, #320]	; 0x140
     888:	str	r7, [r4, #372]	; 0x174
     88c:	str	r7, [r4, #380]	; 0x17c
     890:	str	r7, [r4, #392]	; 0x188
     894:	str	r7, [r4, #260]	; 0x104
     898:	str	r7, [r4, #248]	; 0xf8
     89c:	str	r7, [r4, #252]	; 0xfc
     8a0:	str	r7, [r4, #492]	; 0x1ec
     8a4:	str	r7, [r4, #496]	; 0x1f0
     8a8:	strb	r7, [r4, #504]	; 0x1f8
     8ac:	strb	r7, [r4, #505]	; 0x1f9
     8b0:	str	r7, [r4, #508]	; 0x1fc
     8b4:	str	r7, [r4, #512]	; 0x200
     8b8:	pop	{r4, r5, r6, r7, fp, pc}

000008bc <coda_XML_SetEncoding>:
     8bc:	push	{r4, r5, r6, r7, fp, lr}
     8c0:	add	fp, sp, #16
     8c4:	mov	r5, r0
     8c8:	ldr	r0, [r0, #496]	; 0x1f0
     8cc:	mov	r4, #0
     8d0:	orr	r0, r0, #2
     8d4:	cmp	r0, #3
     8d8:	bne	8e4 <coda_XML_SetEncoding+0x28>
     8dc:	mov	r0, r4
     8e0:	pop	{r4, r5, r6, r7, fp, pc}
     8e4:	mov	r6, r1
     8e8:	cmp	r1, #0
     8ec:	beq	954 <coda_XML_SetEncoding+0x98>
     8f0:	add	r7, r5, #432	; 0x1b0
     8f4:	ldr	r1, [r5, #440]	; 0x1b8
     8f8:	ldr	r0, [r5, #444]	; 0x1bc
     8fc:	cmp	r0, r1
     900:	bne	918 <coda_XML_SetEncoding+0x5c>
     904:	mov	r0, r7
     908:	bl	65e4 <poolGrow>
     90c:	cmp	r0, #0
     910:	beq	968 <coda_XML_SetEncoding+0xac>
     914:	ldr	r0, [r5, #444]	; 0x1bc
     918:	ldrb	r1, [r6]
     91c:	add	r2, r0, #1
     920:	str	r2, [r5, #444]	; 0x1bc
     924:	strb	r1, [r0]
     928:	ldrb	r0, [r6], #1
     92c:	cmp	r0, #0
     930:	bne	8f4 <coda_XML_SetEncoding+0x38>
     934:	ldr	r1, [r5, #448]	; 0x1c0
     938:	ldr	r0, [r5, #444]	; 0x1bc
     93c:	cmp	r1, #0
     940:	str	r0, [r5, #448]	; 0x1c0
     944:	str	r1, [r5, #240]	; 0xf0
     948:	movne	r4, #1
     94c:	mov	r0, r4
     950:	pop	{r4, r5, r6, r7, fp, pc}
     954:	mov	r0, #0
     958:	mov	r4, #1
     95c:	str	r0, [r5, #240]	; 0xf0
     960:	mov	r0, r4
     964:	pop	{r4, r5, r6, r7, fp, pc}
     968:	mov	r4, #0
     96c:	mov	r0, r4
     970:	str	r4, [r5, #240]	; 0xf0
     974:	pop	{r4, r5, r6, r7, fp, pc}

00000978 <coda_XML_ExternalEntityParserCreate>:
     978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     97c:	add	fp, sp, #28
     980:	sub	sp, sp, #4
     984:	vpush	{d8-d15}
     988:	sub	sp, sp, #64	; 0x40
     98c:	mov	sl, r0
     990:	ldr	r0, [r0, #512]	; 0x200
     994:	mov	r6, r2
     998:	str	r1, [sp, #56]	; 0x38
     99c:	cmp	r1, #0
     9a0:	ldr	r3, [sl, #364]	; 0x16c
     9a4:	add	r7, sl, #76	; 0x4c
     9a8:	add	r2, sl, #136	; 0x88
     9ac:	ldr	r8, [sl, #128]	; 0x80
     9b0:	ldr	r9, [sl, #132]	; 0x84
     9b4:	vld1.32	{d12-d13}, [r7]
     9b8:	vld1.64	{d8-d9}, [r2]
     9bc:	ldr	r7, [sl, #116]	; 0x74
     9c0:	str	r0, [sp, #44]	; 0x2c
     9c4:	add	r0, sl, #60	; 0x3c
     9c8:	vld1.32	{d10-d11}, [r0]
     9cc:	ldrb	r0, [sl, #245]	; 0xf5
     9d0:	str	r3, [sp, #20]
     9d4:	movwne	r3, #0
     9d8:	str	r0, [sp, #32]
     9dc:	ldr	r0, [sl, #284]	; 0x11c
     9e0:	str	r0, [sp, #40]	; 0x28
     9e4:	ldr	r0, [sl, #508]	; 0x1fc
     9e8:	str	r0, [sp, #36]	; 0x24
     9ec:	add	r0, sl, #100	; 0x64
     9f0:	vld1.32	{d14-d15}, [r0]
     9f4:	ldr	r0, [sl, #120]	; 0x78
     9f8:	str	r0, [sp, #48]	; 0x30
     9fc:	ldr	r0, [sl, #124]	; 0x7c
     a00:	str	r0, [sp, #28]
     a04:	ldrb	r0, [sl, #316]	; 0x13c
     a08:	str	r0, [sp, #24]
     a0c:	ldr	r4, [sl]
     a10:	ldr	r0, [sl, #4]
     a14:	ldr	r5, [sl, #352]	; 0x160
     a18:	str	r0, [sp, #52]	; 0x34
     a1c:	ldrb	r0, [sl, #244]	; 0xf4
     a20:	cmp	r0, #0
     a24:	beq	a40 <coda_XML_ExternalEntityParserCreate+0xc8>
     a28:	ldrb	r0, [sl, #488]	; 0x1e8
     a2c:	add	r1, sl, #12
     a30:	add	r2, sp, #62	; 0x3e
     a34:	strb	r0, [sp, #62]	; 0x3e
     a38:	mov	r0, r6
     a3c:	b	a4c <coda_XML_ExternalEntityParserCreate+0xd4>
     a40:	add	r1, sl, #12
     a44:	mov	r0, r6
     a48:	mov	r2, #0
     a4c:	bl	40 <parserCreate>
     a50:	mov	r1, r0
     a54:	mov	r0, #0
     a58:	cmp	r1, #0
     a5c:	beq	1344 <coda_XML_ExternalEntityParserCreate+0x9cc>
     a60:	ldr	r0, [sp, #48]	; 0x30
     a64:	str	r7, [r1, #116]	; 0x74
     a68:	add	r7, sp, #24
     a6c:	str	r0, [r1, #120]	; 0x78
     a70:	add	r0, r1, #76	; 0x4c
     a74:	strd	r8, [r1, #128]	; 0x80
     a78:	str	r5, [r1, #352]	; 0x160
     a7c:	str	r4, [r1]
     a80:	vst1.32	{d12-d13}, [r0]
     a84:	add	r0, r1, #60	; 0x3c
     a88:	ldr	r2, [sp, #40]	; 0x28
     a8c:	ldr	r3, [sp, #36]	; 0x24
     a90:	vst1.32	{d10-d11}, [r0]
     a94:	add	r0, r1, #100	; 0x64
     a98:	vst1.32	{d14-d15}, [r0]
     a9c:	add	r0, r1, #136	; 0x88
     aa0:	vst1.64	{d8-d9}, [r0]
     aa4:	ldr	r0, [sp, #52]	; 0x34
     aa8:	cmp	r4, r0
     aac:	ldr	r0, [sp, #44]	; 0x2c
     ab0:	strne	r1, [r1, #4]
     ab4:	streq	r4, [r1, #4]
     ab8:	ldm	r7, {r5, r6, r7}
     abc:	cmp	r6, sl
     ac0:	strne	r6, [r1, #124]	; 0x7c
     ac4:	strb	r7, [r1, #245]	; 0xf5
     ac8:	strb	r5, [r1, #316]	; 0x13c
     acc:	str	sl, [r1, #492]	; 0x1ec
     ad0:	str	r3, [r1, #508]	; 0x1fc
     ad4:	str	r0, [r1, #512]	; 0x200
     ad8:	ldr	r0, [sp, #56]	; 0x38
     adc:	str	r2, [r1, #284]	; 0x11c
     ae0:	cmp	r0, #0
     ae4:	beq	b90 <coda_XML_ExternalEntityParserCreate+0x218>
     ae8:	ldr	r0, [sp, #20]
     aec:	ldr	r4, [r1, #364]	; 0x16c
     af0:	str	r1, [sp, #52]	; 0x34
     af4:	ldr	r5, [r0, #60]	; 0x3c
     af8:	ldr	r0, [r0, #68]	; 0x44
     afc:	add	r8, r4, #60	; 0x3c
     b00:	add	r9, r4, #80	; 0x50
     b04:	add	r6, r5, r0, lsl #2
     b08:	cmp	r5, r6
     b0c:	beq	bb8 <coda_XML_ExternalEntityParserCreate+0x240>
     b10:	ldr	r0, [r5], #4
     b14:	cmp	r0, #0
     b18:	beq	b08 <coda_XML_ExternalEntityParserCreate+0x190>
     b1c:	ldr	r7, [r0]
     b20:	ldr	r1, [r4, #88]	; 0x58
     b24:	ldr	r0, [r4, #92]	; 0x5c
     b28:	cmp	r0, r1
     b2c:	bne	b44 <coda_XML_ExternalEntityParserCreate+0x1cc>
     b30:	mov	r0, r9
     b34:	bl	65e4 <poolGrow>
     b38:	cmp	r0, #0
     b3c:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     b40:	ldr	r0, [r4, #92]	; 0x5c
     b44:	ldrb	r1, [r7]
     b48:	add	r2, r0, #1
     b4c:	str	r2, [r4, #92]	; 0x5c
     b50:	strb	r1, [r0]
     b54:	ldrb	r0, [r7], #1
     b58:	cmp	r0, #0
     b5c:	bne	b20 <coda_XML_ExternalEntityParserCreate+0x1a8>
     b60:	ldr	r2, [r4, #96]	; 0x60
     b64:	ldr	r0, [r4, #92]	; 0x5c
     b68:	cmp	r2, #0
     b6c:	str	r0, [r4, #96]	; 0x60
     b70:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     b74:	mov	r0, sl
     b78:	mov	r1, r8
     b7c:	mov	r3, #8
     b80:	bl	5d0c <lookup>
     b84:	cmp	r0, #0
     b88:	bne	b08 <coda_XML_ExternalEntityParserCreate+0x190>
     b8c:	b	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     b90:	mov	r0, #1
     b94:	mov	r4, r1
     b98:	strb	r0, [r1, #504]	; 0x1f8
     b9c:	add	r0, r1, #264	; 0x108
     ba0:	bl	0 <coda_XmlPrologStateInitExternalEntity>
     ba4:	movw	r0, #0
     ba8:	movt	r0, #0
     bac:	str	r0, [r4, #288]	; 0x120
     bb0:	mov	r0, r4
     bb4:	b	1344 <coda_XML_ExternalEntityParserCreate+0x9cc>
     bb8:	ldr	r0, [sp, #20]
     bbc:	add	r7, r4, #152	; 0x98
     bc0:	add	r1, r0, #152	; 0x98
     bc4:	ldr	r8, [r0, #40]	; 0x28
     bc8:	ldr	r0, [r0, #48]	; 0x30
     bcc:	str	r1, [sp, #40]	; 0x28
     bd0:	add	r1, r4, #40	; 0x28
     bd4:	str	r1, [sp, #44]	; 0x2c
     bd8:	add	r3, r8, r0, lsl #2
     bdc:	str	r3, [sp, #48]	; 0x30
     be0:	b	bf0 <coda_XML_ExternalEntityParserCreate+0x278>
     be4:	ldr	r7, [sp, #32]
     be8:	ldr	r3, [sp, #48]	; 0x30
     bec:	str	r6, [r0, #4]
     bf0:	cmp	r8, r3
     bf4:	beq	dfc <coda_XML_ExternalEntityParserCreate+0x484>
     bf8:	ldr	r5, [r8], #4
     bfc:	cmp	r5, #0
     c00:	beq	bf0 <coda_XML_ExternalEntityParserCreate+0x278>
     c04:	ldr	r1, [r4, #88]	; 0x58
     c08:	ldr	r0, [r4, #92]	; 0x5c
     c0c:	cmp	r0, r1
     c10:	bne	c28 <coda_XML_ExternalEntityParserCreate+0x2b0>
     c14:	mov	r0, r9
     c18:	bl	65e4 <poolGrow>
     c1c:	cmp	r0, #0
     c20:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     c24:	ldr	r0, [r4, #92]	; 0x5c
     c28:	add	r1, r0, #1
     c2c:	str	r1, [r4, #92]	; 0x5c
     c30:	mov	r1, #0
     c34:	strb	r1, [r0]
     c38:	ldr	r6, [r5]
     c3c:	ldr	r1, [r4, #88]	; 0x58
     c40:	ldr	r0, [r4, #92]	; 0x5c
     c44:	cmp	r0, r1
     c48:	bne	c60 <coda_XML_ExternalEntityParserCreate+0x2e8>
     c4c:	mov	r0, r9
     c50:	bl	65e4 <poolGrow>
     c54:	cmp	r0, #0
     c58:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     c5c:	ldr	r0, [r4, #92]	; 0x5c
     c60:	ldrb	r1, [r6]
     c64:	add	r2, r0, #1
     c68:	str	r2, [r4, #92]	; 0x5c
     c6c:	strb	r1, [r0]
     c70:	ldrb	r0, [r6], #1
     c74:	cmp	r0, #0
     c78:	bne	c3c <coda_XML_ExternalEntityParserCreate+0x2c4>
     c7c:	ldr	r0, [r4, #96]	; 0x60
     c80:	ldr	r1, [r4, #92]	; 0x5c
     c84:	cmp	r0, #0
     c88:	str	r1, [r4, #96]	; 0x60
     c8c:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     c90:	ldr	r1, [sp, #44]	; 0x2c
     c94:	add	r2, r0, #1
     c98:	mov	r0, sl
     c9c:	mov	r3, #12
     ca0:	bl	5d0c <lookup>
     ca4:	cmp	r0, #0
     ca8:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     cac:	ldrb	r1, [r5, #8]
     cb0:	ldr	r3, [sp, #48]	; 0x30
     cb4:	strb	r1, [r0, #8]
     cb8:	ldr	r2, [r5, #4]
     cbc:	cmp	r2, #0
     cc0:	beq	bf0 <coda_XML_ExternalEntityParserCreate+0x278>
     cc4:	ldrb	r1, [r5, #9]
     cc8:	strb	r1, [r0, #9]
     ccc:	ldr	r1, [sp, #40]	; 0x28
     cd0:	cmp	r2, r1
     cd4:	beq	dec <coda_XML_ExternalEntityParserCreate+0x474>
     cd8:	ldr	r1, [r4, #68]	; 0x44
     cdc:	mov	r6, #0
     ce0:	str	r7, [sp, #32]
     ce4:	cmp	r1, #0
     ce8:	beq	be4 <coda_XML_ExternalEntityParserCreate+0x26c>
     cec:	ldr	lr, [r2]
     cf0:	ldr	r2, [sl, #512]	; 0x200
     cf4:	ldrb	ip, [lr]
     cf8:	cmp	ip, #0
     cfc:	beq	d28 <coda_XML_ExternalEntityParserCreate+0x3b0>
     d00:	movw	r5, #16963	; 0x4243
     d04:	add	r3, lr, #1
     d08:	mov	r7, ip
     d0c:	movt	r5, #15
     d10:	mul	r2, r2, r5
     d14:	uxtb	r7, r7
     d18:	eor	r2, r2, r7
     d1c:	ldrb	r7, [r3], #1
     d20:	cmp	r7, #0
     d24:	bne	d10 <coda_XML_ExternalEntityParserCreate+0x398>
     d28:	ldr	r5, [r4, #60]	; 0x3c
     d2c:	sub	r7, r1, #1
     d30:	and	r3, r2, r7
     d34:	str	r5, [sp, #28]
     d38:	ldr	r5, [r5, r3, lsl #2]
     d3c:	cmp	r5, #0
     d40:	beq	be4 <coda_XML_ExternalEntityParserCreate+0x26c>
     d44:	rsb	r6, r1, #0
     d48:	and	r2, r2, r6
     d4c:	mov	r6, #0
     d50:	str	r2, [sp, #16]
     d54:	add	r2, lr, #1
     d58:	str	r2, [sp, #24]
     d5c:	lsr	r2, r7, #2
     d60:	str	r2, [sp, #12]
     d64:	ldr	r2, [r5]
     d68:	mov	lr, ip
     d6c:	str	r6, [sp, #36]	; 0x24
     d70:	ldrb	r7, [r2]
     d74:	cmp	ip, r7
     d78:	bne	da0 <coda_XML_ExternalEntityParserCreate+0x428>
     d7c:	add	r6, r2, #1
     d80:	ldr	r2, [sp, #24]
     d84:	mov	ip, lr
     d88:	tst	ip, #255	; 0xff
     d8c:	beq	df4 <coda_XML_ExternalEntityParserCreate+0x47c>
     d90:	ldrb	ip, [r2], #1
     d94:	ldrb	r7, [r6], #1
     d98:	cmp	ip, r7
     d9c:	beq	d88 <coda_XML_ExternalEntityParserCreate+0x410>
     da0:	ldr	r6, [sp, #36]	; 0x24
     da4:	tst	r6, #255	; 0xff
     da8:	bne	dc4 <coda_XML_ExternalEntityParserCreate+0x44c>
     dac:	ldrb	r2, [r4, #64]	; 0x40
     db0:	ldr	r7, [sp, #16]
     db4:	ldr	r6, [sp, #12]
     db8:	sub	r2, r2, #1
     dbc:	and	r2, r6, r7, lsr r2
     dc0:	orr	r6, r2, #1
     dc4:	uxtb	r2, r6
     dc8:	mov	ip, lr
     dcc:	subs	r3, r3, r2
     dd0:	ldr	r2, [sp, #28]
     dd4:	addcc	r3, r3, r1
     dd8:	ldr	r5, [r2, r3, lsl #2]
     ddc:	cmp	r5, #0
     de0:	bne	d64 <coda_XML_ExternalEntityParserCreate+0x3ec>
     de4:	mov	r6, #0
     de8:	b	be4 <coda_XML_ExternalEntityParserCreate+0x26c>
     dec:	str	r7, [r0, #4]
     df0:	b	bf0 <coda_XML_ExternalEntityParserCreate+0x278>
     df4:	mov	r6, r5
     df8:	b	be4 <coda_XML_ExternalEntityParserCreate+0x26c>
     dfc:	add	r0, r4, #20
     e00:	str	r0, [sp, #8]
     e04:	ldr	r0, [sp, #20]
     e08:	ldr	r1, [r0, #20]
     e0c:	ldr	r0, [r0, #28]
     e10:	add	r0, r1, r0, lsl #2
     e14:	str	r0, [sp, #12]
     e18:	b	e24 <coda_XML_ExternalEntityParserCreate+0x4ac>
     e1c:	ldr	r1, [sp, #16]
     e20:	ldr	r0, [sp, #12]
     e24:	cmp	r1, r0
     e28:	beq	1354 <coda_XML_ExternalEntityParserCreate+0x9dc>
     e2c:	ldr	r6, [r1], #4
     e30:	cmp	r6, #0
     e34:	beq	e24 <coda_XML_ExternalEntityParserCreate+0x4ac>
     e38:	ldr	r5, [r6]
     e3c:	str	r1, [sp, #16]
     e40:	ldr	r1, [r4, #88]	; 0x58
     e44:	ldr	r0, [r4, #92]	; 0x5c
     e48:	cmp	r0, r1
     e4c:	bne	e64 <coda_XML_ExternalEntityParserCreate+0x4ec>
     e50:	mov	r0, r9
     e54:	bl	65e4 <poolGrow>
     e58:	cmp	r0, #0
     e5c:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     e60:	ldr	r0, [r4, #92]	; 0x5c
     e64:	ldrb	r1, [r5]
     e68:	add	r2, r0, #1
     e6c:	str	r2, [r4, #92]	; 0x5c
     e70:	strb	r1, [r0]
     e74:	ldrb	r0, [r5], #1
     e78:	cmp	r0, #0
     e7c:	bne	e40 <coda_XML_ExternalEntityParserCreate+0x4c8>
     e80:	ldr	r2, [r4, #96]	; 0x60
     e84:	ldr	r0, [r4, #92]	; 0x5c
     e88:	cmp	r2, #0
     e8c:	str	r0, [r4, #96]	; 0x60
     e90:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     e94:	ldr	r1, [sp, #8]
     e98:	mov	r0, sl
     e9c:	mov	r3, #24
     ea0:	bl	5d0c <lookup>
     ea4:	cmp	r0, #0
     ea8:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
     eac:	mov	r7, r0
     eb0:	ldr	r0, [r6, #12]
     eb4:	cmp	r0, #0
     eb8:	beq	edc <coda_XML_ExternalEntityParserCreate+0x564>
     ebc:	ldr	r1, [sp, #52]	; 0x34
     ec0:	add	r0, r0, r0, lsl #1
     ec4:	lsl	r0, r0, #2
     ec8:	ldr	r1, [r1, #12]
     ecc:	blx	r1
     ed0:	cmp	r0, #0
     ed4:	str	r0, [r7, #20]
     ed8:	beq	1410 <coda_XML_ExternalEntityParserCreate+0xa98>
     edc:	ldr	r1, [r6, #8]
     ee0:	str	r6, [sp, #40]	; 0x28
     ee4:	str	r7, [sp, #36]	; 0x24
     ee8:	cmp	r1, #0
     eec:	beq	ffc <coda_XML_ExternalEntityParserCreate+0x684>
     ef0:	ldr	r0, [r4, #48]	; 0x30
     ef4:	mov	r5, #0
     ef8:	cmp	r0, #0
     efc:	beq	ff0 <coda_XML_ExternalEntityParserCreate+0x678>
     f00:	ldr	lr, [r1]
     f04:	ldr	r3, [sl, #512]	; 0x200
     f08:	ldrb	r7, [lr]
     f0c:	cmp	r7, #0
     f10:	beq	f3c <coda_XML_ExternalEntityParserCreate+0x5c4>
     f14:	movw	r6, #16963	; 0x4243
     f18:	add	r2, lr, #1
     f1c:	mov	r1, r7
     f20:	movt	r6, #15
     f24:	mul	r3, r3, r6
     f28:	uxtb	r1, r1
     f2c:	eor	r3, r3, r1
     f30:	ldrb	r1, [r2], #1
     f34:	cmp	r1, #0
     f38:	bne	f24 <coda_XML_ExternalEntityParserCreate+0x5ac>
     f3c:	ldr	r6, [r4, #40]	; 0x28
     f40:	sub	r1, r0, #1
     f44:	and	r2, r3, r1
     f48:	str	r6, [sp, #48]	; 0x30
     f4c:	ldr	r6, [r6, r2, lsl #2]
     f50:	cmp	r6, #0
     f54:	beq	ff0 <coda_XML_ExternalEntityParserCreate+0x678>
     f58:	rsb	r5, r0, #0
     f5c:	lsr	r1, r1, #2
     f60:	add	lr, lr, #1
     f64:	and	r3, r3, r5
     f68:	mov	r5, #0
     f6c:	str	r1, [sp, #32]
     f70:	str	r3, [sp, #44]	; 0x2c
     f74:	ldr	r1, [r6]
     f78:	ldrb	r3, [r1]
     f7c:	cmp	r7, r3
     f80:	bne	fa8 <coda_XML_ExternalEntityParserCreate+0x630>
     f84:	add	r3, r1, #1
     f88:	mov	r8, lr
     f8c:	mov	ip, r7
     f90:	tst	ip, #255	; 0xff
     f94:	beq	fec <coda_XML_ExternalEntityParserCreate+0x674>
     f98:	ldrb	ip, [r8], #1
     f9c:	ldrb	r1, [r3], #1
     fa0:	cmp	ip, r1
     fa4:	beq	f90 <coda_XML_ExternalEntityParserCreate+0x618>
     fa8:	tst	r5, #255	; 0xff
     fac:	bne	fc8 <coda_XML_ExternalEntityParserCreate+0x650>
     fb0:	ldrb	r1, [r4, #44]	; 0x2c
     fb4:	ldr	r3, [sp, #44]	; 0x2c
     fb8:	ldr	r6, [sp, #32]
     fbc:	sub	r1, r1, #1
     fc0:	and	r1, r6, r3, lsr r1
     fc4:	orr	r5, r1, #1
     fc8:	uxtb	r1, r5
     fcc:	subs	r2, r2, r1
     fd0:	ldr	r1, [sp, #48]	; 0x30
     fd4:	addcc	r2, r2, r0
     fd8:	ldr	r6, [r1, r2, lsl #2]
     fdc:	cmp	r6, #0
     fe0:	bne	f74 <coda_XML_ExternalEntityParserCreate+0x5fc>
     fe4:	mov	r5, #0
     fe8:	b	ff0 <coda_XML_ExternalEntityParserCreate+0x678>
     fec:	mov	r5, r6
     ff0:	ldr	r7, [sp, #36]	; 0x24
     ff4:	ldr	r6, [sp, #40]	; 0x28
     ff8:	str	r5, [r7, #8]
     ffc:	ldr	ip, [r6, #12]
    1000:	str	ip, [r7, #12]
    1004:	str	ip, [r7, #16]
    1008:	ldr	r0, [r6, #4]
    100c:	cmp	r0, #0
    1010:	beq	1124 <coda_XML_ExternalEntityParserCreate+0x7ac>
    1014:	ldr	r1, [r4, #68]	; 0x44
    1018:	mov	r5, #0
    101c:	str	ip, [sp, #28]
    1020:	cmp	r1, #0
    1024:	beq	1114 <coda_XML_ExternalEntityParserCreate+0x79c>
    1028:	ldr	r8, [r0]
    102c:	ldr	r6, [sl, #512]	; 0x200
    1030:	ldrb	lr, [r8]
    1034:	cmp	lr, #0
    1038:	beq	1064 <coda_XML_ExternalEntityParserCreate+0x6ec>
    103c:	movw	r7, #16963	; 0x4243
    1040:	add	r0, r8, #1
    1044:	mov	r3, lr
    1048:	movt	r7, #15
    104c:	mul	r2, r6, r7
    1050:	uxtb	r3, r3
    1054:	eor	r6, r2, r3
    1058:	ldrb	r3, [r0], #1
    105c:	cmp	r3, #0
    1060:	bne	104c <coda_XML_ExternalEntityParserCreate+0x6d4>
    1064:	ldr	ip, [r4, #60]	; 0x3c
    1068:	sub	r2, r1, #1
    106c:	and	r3, r6, r2
    1070:	ldr	r0, [ip, r3, lsl #2]
    1074:	cmp	r0, #0
    1078:	beq	1114 <coda_XML_ExternalEntityParserCreate+0x79c>
    107c:	rsb	r5, r1, #0
    1080:	lsr	r2, r2, #2
    1084:	and	r5, r6, r5
    1088:	str	r2, [sp, #32]
    108c:	str	r5, [sp, #44]	; 0x2c
    1090:	add	r5, r8, #1
    1094:	str	r5, [sp, #48]	; 0x30
    1098:	mov	r5, #0
    109c:	ldr	r2, [r0]
    10a0:	ldrb	r6, [r2]
    10a4:	cmp	lr, r6
    10a8:	bne	10d0 <coda_XML_ExternalEntityParserCreate+0x758>
    10ac:	ldr	r7, [sp, #48]	; 0x30
    10b0:	add	r6, r2, #1
    10b4:	mov	r2, lr
    10b8:	tst	r2, #255	; 0xff
    10bc:	beq	1110 <coda_XML_ExternalEntityParserCreate+0x798>
    10c0:	ldrb	r2, [r7], #1
    10c4:	ldrb	r8, [r6], #1
    10c8:	cmp	r2, r8
    10cc:	beq	10b8 <coda_XML_ExternalEntityParserCreate+0x740>
    10d0:	tst	r5, #255	; 0xff
    10d4:	bne	10f0 <coda_XML_ExternalEntityParserCreate+0x778>
    10d8:	ldrb	r0, [r4, #64]	; 0x40
    10dc:	ldr	r2, [sp, #44]	; 0x2c
    10e0:	ldr	r5, [sp, #32]
    10e4:	sub	r0, r0, #1
    10e8:	and	r0, r5, r2, lsr r0
    10ec:	orr	r5, r0, #1
    10f0:	uxtb	r0, r5
    10f4:	subs	r3, r3, r0
    10f8:	addcc	r3, r3, r1
    10fc:	ldr	r0, [ip, r3, lsl #2]
    1100:	cmp	r0, #0
    1104:	bne	109c <coda_XML_ExternalEntityParserCreate+0x724>
    1108:	mov	r5, #0
    110c:	b	1114 <coda_XML_ExternalEntityParserCreate+0x79c>
    1110:	mov	r5, r0
    1114:	ldr	r0, [sp, #36]	; 0x24
    1118:	ldr	r6, [sp, #40]	; 0x28
    111c:	ldr	ip, [sp, #28]
    1120:	str	r5, [r0, #4]
    1124:	ldr	r1, [sp, #16]
    1128:	ldr	r0, [sp, #12]
    112c:	cmp	ip, #1
    1130:	blt	e24 <coda_XML_ExternalEntityParserCreate+0x4ac>
    1134:	mov	r8, #0
    1138:	ldr	r0, [r6, #20]
    113c:	ldr	r2, [r4, #48]	; 0x30
    1140:	mov	r3, #0
    1144:	str	r0, [sp, #44]	; 0x2c
    1148:	add	r0, r8, r8, lsl #1
    114c:	cmp	r2, #0
    1150:	str	r0, [sp, #48]	; 0x30
    1154:	beq	1264 <coda_XML_ExternalEntityParserCreate+0x8ec>
    1158:	ldr	r0, [sp, #48]	; 0x30
    115c:	ldr	r1, [sp, #44]	; 0x2c
    1160:	ldr	r0, [r1, r0, lsl #2]
    1164:	ldr	r1, [sl, #512]	; 0x200
    1168:	ldr	r0, [r0]
    116c:	ldrb	lr, [r0]
    1170:	cmp	lr, #0
    1174:	beq	11a0 <coda_XML_ExternalEntityParserCreate+0x828>
    1178:	movw	r6, #16963	; 0x4243
    117c:	add	r7, r0, #1
    1180:	mov	r3, lr
    1184:	movt	r6, #15
    1188:	mul	r1, r1, r6
    118c:	uxtb	r3, r3
    1190:	eor	r1, r1, r3
    1194:	ldrb	r3, [r7], #1
    1198:	cmp	r3, #0
    119c:	bne	1188 <coda_XML_ExternalEntityParserCreate+0x810>
    11a0:	ldr	r3, [r4, #40]	; 0x28
    11a4:	sub	r5, r2, #1
    11a8:	and	r6, r1, r5
    11ac:	ldr	r7, [r3, r6, lsl #2]
    11b0:	str	r3, [sp, #32]
    11b4:	mov	r3, #0
    11b8:	cmp	r7, #0
    11bc:	beq	1264 <coda_XML_ExternalEntityParserCreate+0x8ec>
    11c0:	rsb	r3, r2, #0
    11c4:	add	r0, r0, #1
    11c8:	str	ip, [sp, #28]
    11cc:	mov	ip, #0
    11d0:	and	r1, r1, r3
    11d4:	str	r0, [sp, #24]
    11d8:	lsr	r0, r5, #2
    11dc:	str	r1, [sp, #4]
    11e0:	str	r0, [sp]
    11e4:	ldr	r0, [r7]
    11e8:	ldrb	r1, [r0]
    11ec:	cmp	lr, r1
    11f0:	bne	1218 <coda_XML_ExternalEntityParserCreate+0x8a0>
    11f4:	add	r1, r0, #1
    11f8:	ldr	r0, [sp, #24]
    11fc:	mov	r3, lr
    1200:	tst	r3, #255	; 0xff
    1204:	beq	125c <coda_XML_ExternalEntityParserCreate+0x8e4>
    1208:	ldrb	r3, [r0], #1
    120c:	ldrb	r5, [r1], #1
    1210:	cmp	r3, r5
    1214:	beq	1200 <coda_XML_ExternalEntityParserCreate+0x888>
    1218:	tst	ip, #255	; 0xff
    121c:	bne	1238 <coda_XML_ExternalEntityParserCreate+0x8c0>
    1220:	ldrb	r0, [r4, #44]	; 0x2c
    1224:	ldr	r1, [sp, #4]
    1228:	ldr	r3, [sp]
    122c:	sub	r0, r0, #1
    1230:	and	r0, r3, r1, lsr r0
    1234:	orr	ip, r0, #1
    1238:	uxtb	r0, ip
    123c:	subs	r6, r6, r0
    1240:	ldr	r0, [sp, #32]
    1244:	addcc	r6, r6, r2
    1248:	ldr	r7, [r0, r6, lsl #2]
    124c:	cmp	r7, #0
    1250:	bne	11e4 <coda_XML_ExternalEntityParserCreate+0x86c>
    1254:	mov	r3, #0
    1258:	b	1260 <coda_XML_ExternalEntityParserCreate+0x8e8>
    125c:	mov	r3, r7
    1260:	ldr	ip, [sp, #28]
    1264:	ldr	r7, [sp, #36]	; 0x24
    1268:	ldr	r6, [sp, #48]	; 0x30
    126c:	ldr	r0, [r7, #20]
    1270:	mov	r1, r0
    1274:	str	r3, [r1, r6, lsl #2]!
    1278:	ldr	r2, [sp, #44]	; 0x2c
    127c:	add	r2, r2, r6, lsl #2
    1280:	ldrb	r3, [r2, #4]
    1284:	strb	r3, [r1, #4]
    1288:	ldr	r5, [r2, #8]
    128c:	cmp	r5, #0
    1290:	beq	1304 <coda_XML_ExternalEntityParserCreate+0x98c>
    1294:	ldr	r6, [sp, #40]	; 0x28
    1298:	ldr	r1, [r4, #88]	; 0x58
    129c:	ldr	r0, [r4, #92]	; 0x5c
    12a0:	cmp	r0, r1
    12a4:	bne	12bc <coda_XML_ExternalEntityParserCreate+0x944>
    12a8:	mov	r0, r9
    12ac:	bl	65e4 <poolGrow>
    12b0:	cmp	r0, #0
    12b4:	beq	1324 <coda_XML_ExternalEntityParserCreate+0x9ac>
    12b8:	ldr	r0, [r4, #92]	; 0x5c
    12bc:	ldrb	r1, [r5]
    12c0:	add	r2, r0, #1
    12c4:	str	r2, [r4, #92]	; 0x5c
    12c8:	strb	r1, [r0]
    12cc:	ldrb	r0, [r5], #1
    12d0:	cmp	r0, #0
    12d4:	bne	1298 <coda_XML_ExternalEntityParserCreate+0x920>
    12d8:	ldr	r0, [r4, #92]	; 0x5c
    12dc:	ldr	r1, [r4, #96]	; 0x60
    12e0:	ldr	r2, [sp, #48]	; 0x30
    12e4:	str	r0, [r4, #96]	; 0x60
    12e8:	cmp	r1, #0
    12ec:	ldr	r0, [r7, #20]
    12f0:	add	r0, r0, r2, lsl #2
    12f4:	str	r1, [r0, #8]
    12f8:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
    12fc:	ldr	ip, [r7, #12]
    1300:	b	1314 <coda_XML_ExternalEntityParserCreate+0x99c>
    1304:	add	r0, r0, r6, lsl #2
    1308:	ldr	r6, [sp, #40]	; 0x28
    130c:	mov	r1, #0
    1310:	str	r1, [r0, #8]
    1314:	add	r8, r8, #1
    1318:	cmp	r8, ip
    131c:	blt	1138 <coda_XML_ExternalEntityParserCreate+0x7c0>
    1320:	b	e1c <coda_XML_ExternalEntityParserCreate+0x4a4>
    1324:	ldr	r0, [r7, #20]
    1328:	ldr	r1, [sp, #48]	; 0x30
    132c:	add	r0, r0, r1, lsl #2
    1330:	mov	r1, #0
    1334:	str	r1, [r0, #8]
    1338:	ldr	r0, [sp, #52]	; 0x34
    133c:	bl	17f0 <coda_XML_ParserFree>
    1340:	mov	r0, #0
    1344:	sub	sp, fp, #96	; 0x60
    1348:	vpop	{d8-d15}
    134c:	add	sp, sp, #4
    1350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1354:	ldr	r3, [sp, #20]
    1358:	mov	r0, sl
    135c:	mov	r1, r4
    1360:	mov	r2, r9
    1364:	bl	c138 <copyEntityTable>
    1368:	cmp	r0, #0
    136c:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
    1370:	ldr	r0, [sp, #20]
    1374:	add	r1, r4, #132	; 0x84
    1378:	mov	r2, r9
    137c:	add	r3, r0, #132	; 0x84
    1380:	mov	r0, sl
    1384:	bl	c138 <copyEntityTable>
    1388:	cmp	r0, #0
    138c:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
    1390:	ldr	r1, [sp, #20]
    1394:	ldrb	r0, [r1, #131]	; 0x83
    1398:	strb	r0, [r4, #131]	; 0x83
    139c:	ldrb	r0, [r1, #128]	; 0x80
    13a0:	strb	r0, [r4, #128]	; 0x80
    13a4:	ldrb	r0, [r1, #129]	; 0x81
    13a8:	strb	r0, [r4, #129]	; 0x81
    13ac:	ldrb	r0, [r1, #130]	; 0x82
    13b0:	strb	r0, [r4, #130]	; 0x82
    13b4:	ldrb	r0, [r1, #160]	; 0xa0
    13b8:	strb	r0, [r4, #160]	; 0xa0
    13bc:	ldr	r0, [r1, #164]	; 0xa4
    13c0:	str	r0, [r4, #164]	; 0xa4
    13c4:	ldr	r0, [r1, #168]	; 0xa8
    13c8:	str	r0, [r4, #168]	; 0xa8
    13cc:	ldr	r0, [r1, #172]	; 0xac
    13d0:	str	r0, [r4, #172]	; 0xac
    13d4:	ldr	r0, [r1, #180]	; 0xb4
    13d8:	str	r0, [r4, #180]	; 0xb4
    13dc:	ldr	r0, [r1, #184]	; 0xb8
    13e0:	ldr	r1, [sp, #56]	; 0x38
    13e4:	str	r0, [r4, #184]	; 0xb8
    13e8:	ldr	r0, [sp, #52]	; 0x34
    13ec:	bl	1424 <setContext>
    13f0:	cmp	r0, #0
    13f4:	beq	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>
    13f8:	ldr	r1, [sp, #52]	; 0x34
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	str	r0, [r1, #288]	; 0x120
    1408:	mov	r0, r1
    140c:	b	1344 <coda_XML_ExternalEntityParserCreate+0x9cc>
    1410:	ldr	r0, [sp, #52]	; 0x34
    1414:	ldr	r1, [r0, #20]
    1418:	mov	r0, r7
    141c:	blx	r1
    1420:	b	1338 <coda_XML_ExternalEntityParserCreate+0x9c0>

00001424 <setContext>:
    1424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1428:	add	fp, sp, #28
    142c:	sub	sp, sp, #44	; 0x2c
    1430:	mov	r4, r0
    1434:	ldrb	r0, [r1]
    1438:	cmp	r0, #0
    143c:	beq	17cc <setContext+0x3a8>
    1440:	ldr	r8, [r4, #364]	; 0x16c
    1444:	mov	r6, r1
    1448:	add	r9, r4, #432	; 0x1b0
    144c:	mov	r5, r6
    1450:	str	r9, [sp, #36]	; 0x24
    1454:	add	r1, r8, #80	; 0x50
    1458:	str	r1, [sp, #28]
    145c:	add	r1, r4, #380	; 0x17c
    1460:	str	r1, [sp, #16]
    1464:	add	r1, r8, #60	; 0x3c
    1468:	str	r1, [sp, #8]
    146c:	add	r1, r8, #152	; 0x98
    1470:	str	r1, [sp, #12]
    1474:	b	147c <setContext+0x58>
    1478:	ldrb	r0, [r6]
    147c:	uxtb	r1, r0
    1480:	cmp	r1, #0
    1484:	beq	1498 <setContext+0x74>
    1488:	cmp	r1, #61	; 0x3d
    148c:	beq	15c0 <setContext+0x19c>
    1490:	cmp	r1, #12
    1494:	bne	15d8 <setContext+0x1b4>
    1498:	ldr	r1, [r4, #440]	; 0x1b8
    149c:	ldr	r0, [r4, #444]	; 0x1bc
    14a0:	cmp	r0, r1
    14a4:	bne	14bc <setContext+0x98>
    14a8:	mov	r0, r9
    14ac:	bl	65e4 <poolGrow>
    14b0:	cmp	r0, #0
    14b4:	beq	17dc <setContext+0x3b8>
    14b8:	ldr	r0, [r4, #444]	; 0x1bc
    14bc:	add	r1, r0, #1
    14c0:	str	r6, [fp, #-32]	; 0xffffffe0
    14c4:	str	r1, [r4, #444]	; 0x1bc
    14c8:	mov	r1, #0
    14cc:	strb	r1, [r0]
    14d0:	ldr	r1, [r8, #8]
    14d4:	ldr	r0, [r4, #448]	; 0x1c0
    14d8:	cmp	r1, #0
    14dc:	beq	1620 <setContext+0x1fc>
    14e0:	ldrb	r9, [r0]
    14e4:	ldr	r7, [r4, #512]	; 0x200
    14e8:	cmp	r9, #0
    14ec:	beq	1518 <setContext+0xf4>
    14f0:	movw	r6, #16963	; 0x4243
    14f4:	add	r3, r0, #1
    14f8:	mov	r2, r9
    14fc:	movt	r6, #15
    1500:	mul	r7, r7, r6
    1504:	uxtb	r2, r2
    1508:	eor	r7, r7, r2
    150c:	ldrb	r2, [r3], #1
    1510:	cmp	r2, #0
    1514:	bne	1500 <setContext+0xdc>
    1518:	ldr	r5, [r8]
    151c:	sub	r2, r1, #1
    1520:	and	r3, r7, r2
    1524:	ldr	ip, [r5, r3, lsl #2]
    1528:	cmp	ip, #0
    152c:	beq	1620 <setContext+0x1fc>
    1530:	rsb	r6, r1, #0
    1534:	lsr	r2, r2, #2
    1538:	mov	lr, #0
    153c:	and	r7, r7, r6
    1540:	str	r2, [sp, #20]
    1544:	str	r7, [sp, #24]
    1548:	add	r7, r0, #1
    154c:	str	r7, [sp, #32]
    1550:	ldr	r2, [ip]
    1554:	ldrb	r6, [r2]
    1558:	cmp	r9, r6
    155c:	bne	1584 <setContext+0x160>
    1560:	ldr	r7, [sp, #32]
    1564:	add	sl, r2, #1
    1568:	mov	r2, r9
    156c:	tst	r2, #255	; 0xff
    1570:	beq	1614 <setContext+0x1f0>
    1574:	ldrb	r2, [r7], #1
    1578:	ldrb	r6, [sl], #1
    157c:	cmp	r2, r6
    1580:	beq	156c <setContext+0x148>
    1584:	tst	lr, #255	; 0xff
    1588:	bne	15a4 <setContext+0x180>
    158c:	ldrb	r2, [r8, #4]
    1590:	ldr	r7, [sp, #24]
    1594:	ldr	r6, [sp, #20]
    1598:	sub	r2, r2, #1
    159c:	and	r2, r6, r7, lsr r2
    15a0:	orr	lr, r2, #1
    15a4:	uxtb	r2, lr
    15a8:	subs	r3, r3, r2
    15ac:	addcc	r3, r3, r1
    15b0:	ldr	ip, [r5, r3, lsl #2]
    15b4:	cmp	ip, #0
    15b8:	bne	1550 <setContext+0x12c>
    15bc:	b	1620 <setContext+0x1fc>
    15c0:	ldr	r0, [r4, #444]	; 0x1bc
    15c4:	ldr	r1, [r4, #448]	; 0x1c0
    15c8:	cmp	r1, r0
    15cc:	bne	1640 <setContext+0x21c>
    15d0:	ldr	sl, [sp, #12]
    15d4:	b	1700 <setContext+0x2dc>
    15d8:	ldr	r2, [r4, #440]	; 0x1b8
    15dc:	ldr	r1, [r4, #444]	; 0x1bc
    15e0:	cmp	r1, r2
    15e4:	bne	1600 <setContext+0x1dc>
    15e8:	mov	r0, r9
    15ec:	bl	65e4 <poolGrow>
    15f0:	cmp	r0, #0
    15f4:	beq	17dc <setContext+0x3b8>
    15f8:	ldr	r1, [r4, #444]	; 0x1bc
    15fc:	ldrb	r0, [r6]
    1600:	add	r2, r1, #1
    1604:	add	r6, r6, #1
    1608:	str	r2, [r4, #444]	; 0x1bc
    160c:	strb	r0, [r1]
    1610:	b	17c0 <setContext+0x39c>
    1614:	cmp	ip, #0
    1618:	movne	r1, #1
    161c:	strbne	r1, [ip, #32]
    1620:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1624:	ldr	r9, [sp, #36]	; 0x24
    1628:	mov	r5, r2
    162c:	ldrb	r1, [r5], #1
    1630:	str	r0, [r4, #444]	; 0x1bc
    1634:	cmp	r1, #0
    1638:	moveq	r5, r2
    163c:	b	17bc <setContext+0x398>
    1640:	ldr	r1, [r4, #440]	; 0x1b8
    1644:	cmp	r0, r1
    1648:	bne	1660 <setContext+0x23c>
    164c:	mov	r0, r9
    1650:	bl	65e4 <poolGrow>
    1654:	cmp	r0, #0
    1658:	beq	17dc <setContext+0x3b8>
    165c:	ldr	r0, [r4, #444]	; 0x1bc
    1660:	add	r1, r0, #1
    1664:	mov	r5, #0
    1668:	mov	r3, #8
    166c:	str	r1, [r4, #444]	; 0x1bc
    1670:	strb	r5, [r0]
    1674:	ldr	r1, [sp, #8]
    1678:	mov	r0, r4
    167c:	ldr	r2, [r4, #448]	; 0x1c0
    1680:	bl	5d0c <lookup>
    1684:	cmp	r0, #0
    1688:	beq	17d0 <setContext+0x3ac>
    168c:	mov	sl, r0
    1690:	ldr	r0, [r4, #448]	; 0x1c0
    1694:	ldr	r7, [sl]
    1698:	cmp	r7, r0
    169c:	bne	16fc <setContext+0x2d8>
    16a0:	ldr	r1, [r8, #88]	; 0x58
    16a4:	ldr	r0, [r8, #92]	; 0x5c
    16a8:	cmp	r0, r1
    16ac:	bne	16c4 <setContext+0x2a0>
    16b0:	ldr	r0, [sp, #28]
    16b4:	bl	65e4 <poolGrow>
    16b8:	cmp	r0, #0
    16bc:	beq	17e4 <setContext+0x3c0>
    16c0:	ldr	r0, [r8, #92]	; 0x5c
    16c4:	ldrb	r1, [r7]
    16c8:	add	r2, r0, #1
    16cc:	str	r2, [r8, #92]	; 0x5c
    16d0:	strb	r1, [r0]
    16d4:	ldrb	r0, [r7], #1
    16d8:	cmp	r0, #0
    16dc:	bne	16a0 <setContext+0x27c>
    16e0:	ldr	r1, [r8, #96]	; 0x60
    16e4:	ldr	r0, [r8, #92]	; 0x5c
    16e8:	cmp	r1, #0
    16ec:	str	r0, [r8, #96]	; 0x60
    16f0:	str	r1, [sl]
    16f4:	beq	17d0 <setContext+0x3ac>
    16f8:	ldr	r0, [r4, #448]	; 0x1c0
    16fc:	str	r0, [r4, #444]	; 0x1bc
    1700:	add	r6, r6, #1
    1704:	b	171c <setContext+0x2f8>
    1708:	add	r2, r0, #1
    170c:	add	r6, r6, #1
    1710:	str	r2, [r4, #444]	; 0x1bc
    1714:	strb	r1, [r0]
    1718:	ldr	r0, [r4, #444]	; 0x1bc
    171c:	ldrb	r1, [r6]
    1720:	ldr	r2, [r4, #440]	; 0x1b8
    1724:	cmp	r1, #0
    1728:	cmpne	r1, #12
    172c:	beq	1754 <setContext+0x330>
    1730:	cmp	r0, r2
    1734:	bne	1708 <setContext+0x2e4>
    1738:	mov	r0, r9
    173c:	bl	65e4 <poolGrow>
    1740:	cmp	r0, #0
    1744:	beq	17dc <setContext+0x3b8>
    1748:	ldr	r0, [r4, #444]	; 0x1bc
    174c:	ldrb	r1, [r6]
    1750:	b	1708 <setContext+0x2e4>
    1754:	cmp	r0, r2
    1758:	bne	1770 <setContext+0x34c>
    175c:	mov	r0, r9
    1760:	bl	65e4 <poolGrow>
    1764:	cmp	r0, #0
    1768:	beq	17dc <setContext+0x3b8>
    176c:	ldr	r0, [r4, #444]	; 0x1bc
    1770:	add	r1, r0, #1
    1774:	mov	r5, #0
    1778:	mov	r2, #0
    177c:	str	r1, [r4, #444]	; 0x1bc
    1780:	strb	r5, [r0]
    1784:	ldr	r0, [sp, #16]
    1788:	mov	r1, sl
    178c:	ldr	r3, [r4, #448]	; 0x1c0
    1790:	str	r0, [sp]
    1794:	mov	r0, r4
    1798:	bl	ae0c <addBinding>
    179c:	cmp	r0, #0
    17a0:	bne	17d0 <setContext+0x3ac>
    17a4:	ldr	r0, [r4, #448]	; 0x1c0
    17a8:	mov	r5, r6
    17ac:	str	r0, [r4, #444]	; 0x1bc
    17b0:	ldrb	r0, [r5], #1
    17b4:	cmp	r0, #0
    17b8:	moveq	r5, r6
    17bc:	mov	r6, r5
    17c0:	ldrb	r0, [r5]
    17c4:	cmp	r0, #0
    17c8:	bne	1478 <setContext+0x54>
    17cc:	mov	r5, #1
    17d0:	mov	r0, r5
    17d4:	sub	sp, fp, #28
    17d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17dc:	mov	r5, #0
    17e0:	b	17d0 <setContext+0x3ac>
    17e4:	mov	r5, #0
    17e8:	str	r5, [sl]
    17ec:	b	17d0 <setContext+0x3ac>

000017f0 <coda_XML_ParserFree>:
    17f0:	cmp	r0, #0
    17f4:	bxeq	lr
    17f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    17fc:	add	fp, sp, #24
    1800:	ldr	r5, [r0, #372]	; 0x174
    1804:	mov	r4, r0
    1808:	mov	r8, #0
    180c:	cmp	r5, #0
    1810:	bne	1840 <coda_XML_ParserFree+0x50>
    1814:	b	1830 <coda_XML_ParserFree+0x40>
    1818:	ldr	r1, [r4, #20]
    181c:	mov	r0, r5
    1820:	blx	r1
    1824:	mov	r5, r9
    1828:	cmp	r5, #0
    182c:	bne	1840 <coda_XML_ParserFree+0x50>
    1830:	ldr	r5, [r4, #376]	; 0x178
    1834:	cmp	r5, #0
    1838:	beq	1888 <coda_XML_ParserFree+0x98>
    183c:	str	r8, [r4, #376]	; 0x178
    1840:	ldr	r1, [r4, #20]
    1844:	ldr	r0, [r5, #36]	; 0x24
    1848:	ldr	r9, [r5]
    184c:	blx	r1
    1850:	ldr	r6, [r5, #44]	; 0x2c
    1854:	cmp	r6, #0
    1858:	beq	1818 <coda_XML_ParserFree+0x28>
    185c:	ldr	r1, [r4, #20]
    1860:	ldr	r0, [r6, #16]
    1864:	ldr	r7, [r6, #4]
    1868:	blx	r1
    186c:	ldr	r1, [r4, #20]
    1870:	mov	r0, r6
    1874:	blx	r1
    1878:	cmp	r7, #0
    187c:	mov	r6, r7
    1880:	bne	185c <coda_XML_ParserFree+0x6c>
    1884:	b	1818 <coda_XML_ParserFree+0x28>
    1888:	ldr	r0, [r4, #308]	; 0x134
    188c:	mov	r5, #0
    1890:	cmp	r0, #0
    1894:	beq	18b0 <coda_XML_ParserFree+0xc0>
    1898:	ldr	r1, [r4, #20]
    189c:	ldr	r6, [r0, #8]
    18a0:	blx	r1
    18a4:	mov	r0, r6
    18a8:	cmp	r0, #0
    18ac:	bne	1898 <coda_XML_ParserFree+0xa8>
    18b0:	ldr	r0, [r4, #312]	; 0x138
    18b4:	cmp	r0, #0
    18b8:	beq	18c4 <coda_XML_ParserFree+0xd4>
    18bc:	str	r5, [r4, #312]	; 0x138
    18c0:	b	1898 <coda_XML_ParserFree+0xa8>
    18c4:	ldr	r5, [r4, #384]	; 0x180
    18c8:	cmp	r5, #0
    18cc:	beq	18f8 <coda_XML_ParserFree+0x108>
    18d0:	ldr	r1, [r4, #20]
    18d4:	ldr	r0, [r5, #16]
    18d8:	ldr	r6, [r5, #4]
    18dc:	blx	r1
    18e0:	ldr	r1, [r4, #20]
    18e4:	mov	r0, r5
    18e8:	blx	r1
    18ec:	cmp	r6, #0
    18f0:	mov	r5, r6
    18f4:	bne	18d0 <coda_XML_ParserFree+0xe0>
    18f8:	ldr	r5, [r4, #380]	; 0x17c
    18fc:	cmp	r5, #0
    1900:	beq	192c <coda_XML_ParserFree+0x13c>
    1904:	ldr	r1, [r4, #20]
    1908:	ldr	r0, [r5, #16]
    190c:	ldr	r6, [r5, #4]
    1910:	blx	r1
    1914:	ldr	r1, [r4, #20]
    1918:	mov	r0, r5
    191c:	blx	r1
    1920:	cmp	r6, #0
    1924:	mov	r5, r6
    1928:	bne	1904 <coda_XML_ParserFree+0x114>
    192c:	ldr	r0, [r4, #432]	; 0x1b0
    1930:	cmp	r0, #0
    1934:	beq	1954 <coda_XML_ParserFree+0x164>
    1938:	ldr	r1, [r4, #452]	; 0x1c4
    193c:	ldr	r5, [r0]
    1940:	ldr	r1, [r1, #8]
    1944:	blx	r1
    1948:	cmp	r5, #0
    194c:	mov	r0, r5
    1950:	bne	1938 <coda_XML_ParserFree+0x148>
    1954:	ldr	r0, [r4, #436]	; 0x1b4
    1958:	cmp	r0, #0
    195c:	beq	197c <coda_XML_ParserFree+0x18c>
    1960:	ldr	r1, [r4, #452]	; 0x1c4
    1964:	ldr	r5, [r0]
    1968:	ldr	r1, [r1, #8]
    196c:	blx	r1
    1970:	cmp	r5, #0
    1974:	mov	r0, r5
    1978:	bne	1960 <coda_XML_ParserFree+0x170>
    197c:	ldr	r0, [r4, #456]	; 0x1c8
    1980:	cmp	r0, #0
    1984:	beq	19a4 <coda_XML_ParserFree+0x1b4>
    1988:	ldr	r1, [r4, #476]	; 0x1dc
    198c:	ldr	r5, [r0]
    1990:	ldr	r1, [r1, #8]
    1994:	blx	r1
    1998:	cmp	r5, #0
    199c:	mov	r0, r5
    19a0:	bne	1988 <coda_XML_ParserFree+0x198>
    19a4:	ldr	r0, [r4, #460]	; 0x1cc
    19a8:	cmp	r0, #0
    19ac:	beq	19cc <coda_XML_ParserFree+0x1dc>
    19b0:	ldr	r1, [r4, #476]	; 0x1dc
    19b4:	ldr	r5, [r0]
    19b8:	ldr	r1, [r1, #8]
    19bc:	blx	r1
    19c0:	cmp	r5, #0
    19c4:	mov	r0, r5
    19c8:	bne	19b0 <coda_XML_ParserFree+0x1c0>
    19cc:	ldrb	r0, [r4, #504]	; 0x1f8
    19d0:	cmp	r0, #0
    19d4:	bne	1c58 <coda_XML_ParserFree+0x468>
    19d8:	ldr	r5, [r4, #364]	; 0x16c
    19dc:	cmp	r5, #0
    19e0:	beq	1c58 <coda_XML_ParserFree+0x468>
    19e4:	ldr	r0, [r5, #28]
    19e8:	ldr	r8, [r4, #492]	; 0x1ec
    19ec:	ldr	r7, [r5, #20]
    19f0:	lsl	r6, r0, #2
    19f4:	cmp	r6, #0
    19f8:	bne	1a0c <coda_XML_ParserFree+0x21c>
    19fc:	b	1a38 <coda_XML_ParserFree+0x248>
    1a00:	sub	r6, r6, #4
    1a04:	cmp	r6, #0
    1a08:	beq	1a38 <coda_XML_ParserFree+0x248>
    1a0c:	ldr	r0, [r7], #4
    1a10:	cmp	r0, #0
    1a14:	ldrne	r1, [r0, #16]
    1a18:	cmpne	r1, #0
    1a1c:	beq	1a00 <coda_XML_ParserFree+0x210>
    1a20:	ldr	r0, [r0, #20]
    1a24:	ldr	r1, [r4, #20]
    1a28:	blx	r1
    1a2c:	sub	r6, r6, #4
    1a30:	cmp	r6, #0
    1a34:	bne	1a0c <coda_XML_ParserFree+0x21c>
    1a38:	ldr	r1, [r5, #16]
    1a3c:	ldr	r2, [r5, #8]
    1a40:	ldr	r0, [r5]
    1a44:	ldr	r1, [r1, #8]
    1a48:	cmp	r2, #0
    1a4c:	beq	1a78 <coda_XML_ParserFree+0x288>
    1a50:	mov	r6, #0
    1a54:	ldr	r0, [r0, r6, lsl #2]
    1a58:	blx	r1
    1a5c:	ldr	r1, [r5, #16]
    1a60:	ldr	r2, [r5, #8]
    1a64:	ldr	r0, [r5]
    1a68:	add	r6, r6, #1
    1a6c:	ldr	r1, [r1, #8]
    1a70:	cmp	r6, r2
    1a74:	bcc	1a54 <coda_XML_ParserFree+0x264>
    1a78:	blx	r1
    1a7c:	ldr	r1, [r5, #148]	; 0x94
    1a80:	ldr	r2, [r5, #140]	; 0x8c
    1a84:	ldr	r0, [r5, #132]	; 0x84
    1a88:	ldr	r1, [r1, #8]
    1a8c:	cmp	r2, #0
    1a90:	beq	1abc <coda_XML_ParserFree+0x2cc>
    1a94:	mov	r6, #0
    1a98:	ldr	r0, [r0, r6, lsl #2]
    1a9c:	blx	r1
    1aa0:	ldr	r1, [r5, #148]	; 0x94
    1aa4:	ldr	r2, [r5, #140]	; 0x8c
    1aa8:	ldr	r0, [r5, #132]	; 0x84
    1aac:	add	r6, r6, #1
    1ab0:	ldr	r1, [r1, #8]
    1ab4:	cmp	r6, r2
    1ab8:	bcc	1a98 <coda_XML_ParserFree+0x2a8>
    1abc:	blx	r1
    1ac0:	ldr	r1, [r5, #36]	; 0x24
    1ac4:	ldr	r2, [r5, #28]
    1ac8:	ldr	r0, [r5, #20]
    1acc:	ldr	r1, [r1, #8]
    1ad0:	cmp	r2, #0
    1ad4:	beq	1b00 <coda_XML_ParserFree+0x310>
    1ad8:	mov	r6, #0
    1adc:	ldr	r0, [r0, r6, lsl #2]
    1ae0:	blx	r1
    1ae4:	ldr	r1, [r5, #36]	; 0x24
    1ae8:	ldr	r2, [r5, #28]
    1aec:	ldr	r0, [r5, #20]
    1af0:	add	r6, r6, #1
    1af4:	ldr	r1, [r1, #8]
    1af8:	cmp	r6, r2
    1afc:	bcc	1adc <coda_XML_ParserFree+0x2ec>
    1b00:	blx	r1
    1b04:	ldr	r1, [r5, #56]	; 0x38
    1b08:	ldr	r2, [r5, #48]	; 0x30
    1b0c:	ldr	r0, [r5, #40]	; 0x28
    1b10:	ldr	r1, [r1, #8]
    1b14:	cmp	r2, #0
    1b18:	beq	1b44 <coda_XML_ParserFree+0x354>
    1b1c:	mov	r6, #0
    1b20:	ldr	r0, [r0, r6, lsl #2]
    1b24:	blx	r1
    1b28:	ldr	r1, [r5, #56]	; 0x38
    1b2c:	ldr	r2, [r5, #48]	; 0x30
    1b30:	ldr	r0, [r5, #40]	; 0x28
    1b34:	add	r6, r6, #1
    1b38:	ldr	r1, [r1, #8]
    1b3c:	cmp	r6, r2
    1b40:	bcc	1b20 <coda_XML_ParserFree+0x330>
    1b44:	blx	r1
    1b48:	ldr	r1, [r5, #76]	; 0x4c
    1b4c:	ldr	r2, [r5, #68]	; 0x44
    1b50:	ldr	r0, [r5, #60]	; 0x3c
    1b54:	ldr	r1, [r1, #8]
    1b58:	cmp	r2, #0
    1b5c:	beq	1b88 <coda_XML_ParserFree+0x398>
    1b60:	mov	r6, #0
    1b64:	ldr	r0, [r0, r6, lsl #2]
    1b68:	blx	r1
    1b6c:	ldr	r1, [r5, #76]	; 0x4c
    1b70:	ldr	r2, [r5, #68]	; 0x44
    1b74:	ldr	r0, [r5, #60]	; 0x3c
    1b78:	add	r6, r6, #1
    1b7c:	ldr	r1, [r1, #8]
    1b80:	cmp	r6, r2
    1b84:	bcc	1b64 <coda_XML_ParserFree+0x374>
    1b88:	blx	r1
    1b8c:	ldr	r0, [r5, #80]	; 0x50
    1b90:	cmp	r0, #0
    1b94:	beq	1bb4 <coda_XML_ParserFree+0x3c4>
    1b98:	ldr	r1, [r5, #100]	; 0x64
    1b9c:	ldr	r6, [r0]
    1ba0:	ldr	r1, [r1, #8]
    1ba4:	blx	r1
    1ba8:	cmp	r6, #0
    1bac:	mov	r0, r6
    1bb0:	bne	1b98 <coda_XML_ParserFree+0x3a8>
    1bb4:	ldr	r0, [r5, #84]	; 0x54
    1bb8:	cmp	r0, #0
    1bbc:	beq	1bdc <coda_XML_ParserFree+0x3ec>
    1bc0:	ldr	r1, [r5, #100]	; 0x64
    1bc4:	ldr	r6, [r0]
    1bc8:	ldr	r1, [r1, #8]
    1bcc:	blx	r1
    1bd0:	cmp	r6, #0
    1bd4:	mov	r0, r6
    1bd8:	bne	1bc0 <coda_XML_ParserFree+0x3d0>
    1bdc:	ldr	r0, [r5, #104]	; 0x68
    1be0:	cmp	r0, #0
    1be4:	beq	1c04 <coda_XML_ParserFree+0x414>
    1be8:	ldr	r1, [r5, #124]	; 0x7c
    1bec:	ldr	r6, [r0]
    1bf0:	ldr	r1, [r1, #8]
    1bf4:	blx	r1
    1bf8:	cmp	r6, #0
    1bfc:	mov	r0, r6
    1c00:	bne	1be8 <coda_XML_ParserFree+0x3f8>
    1c04:	ldr	r0, [r5, #108]	; 0x6c
    1c08:	cmp	r0, #0
    1c0c:	beq	1c2c <coda_XML_ParserFree+0x43c>
    1c10:	ldr	r1, [r5, #124]	; 0x7c
    1c14:	ldr	r6, [r0]
    1c18:	ldr	r1, [r1, #8]
    1c1c:	blx	r1
    1c20:	cmp	r6, #0
    1c24:	mov	r0, r6
    1c28:	bne	1c10 <coda_XML_ParserFree+0x420>
    1c2c:	cmp	r8, #0
    1c30:	bne	1c4c <coda_XML_ParserFree+0x45c>
    1c34:	ldr	r0, [r5, #184]	; 0xb8
    1c38:	ldr	r1, [r4, #20]
    1c3c:	blx	r1
    1c40:	ldr	r0, [r5, #164]	; 0xa4
    1c44:	ldr	r1, [r4, #20]
    1c48:	blx	r1
    1c4c:	ldr	r1, [r4, #20]
    1c50:	mov	r0, r5
    1c54:	blx	r1
    1c58:	ldr	r1, [r4, #20]
    1c5c:	ldr	r0, [r4, #400]	; 0x190
    1c60:	blx	r1
    1c64:	ldr	r1, [r4, #20]
    1c68:	ldr	r0, [r4, #480]	; 0x1e0
    1c6c:	blx	r1
    1c70:	ldr	r0, [r4, #8]
    1c74:	ldr	r1, [r4, #20]
    1c78:	blx	r1
    1c7c:	ldr	r1, [r4, #20]
    1c80:	ldr	r0, [r4, #52]	; 0x34
    1c84:	blx	r1
    1c88:	ldr	r1, [r4, #20]
    1c8c:	ldr	r0, [r4, #404]	; 0x194
    1c90:	blx	r1
    1c94:	ldr	r1, [r4, #20]
    1c98:	ldr	r0, [r4, #248]	; 0xf8
    1c9c:	blx	r1
    1ca0:	ldr	r1, [r4, #260]	; 0x104
    1ca4:	cmp	r1, #0
    1ca8:	beq	1cb4 <coda_XML_ParserFree+0x4c4>
    1cac:	ldr	r0, [r4, #252]	; 0xfc
    1cb0:	blx	r1
    1cb4:	ldr	r1, [r4, #20]
    1cb8:	mov	r0, r4
    1cbc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1cc0:	bx	r1

00001cc4 <externalEntityInitProcessor>:
    1cc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1cc8:	add	fp, sp, #24
    1ccc:	sub	sp, sp, #8
    1cd0:	mov	r5, r0
    1cd4:	ldrb	r0, [r0, #244]	; 0xf4
    1cd8:	mov	r7, r2
    1cdc:	mov	r8, r3
    1ce0:	movw	r3, #0
    1ce4:	mov	r6, r1
    1ce8:	movw	r1, #0
    1cec:	ldr	r2, [r5, #240]	; 0xf0
    1cf0:	movt	r1, #0
    1cf4:	movt	r3, #0
    1cf8:	cmp	r0, #0
    1cfc:	add	r0, r5, #156	; 0x9c
    1d00:	moveq	r3, r1
    1d04:	add	r1, r5, #152	; 0x98
    1d08:	blx	r3
    1d0c:	cmp	r0, #0
    1d10:	beq	1d84 <externalEntityInitProcessor+0xc0>
    1d14:	movw	r0, #0
    1d18:	add	r3, sp, #4
    1d1c:	mov	r1, r6
    1d20:	mov	r2, r7
    1d24:	movt	r0, #0
    1d28:	str	r0, [r5, #288]	; 0x120
    1d2c:	str	r6, [sp, #4]
    1d30:	ldr	r0, [r5, #152]	; 0x98
    1d34:	ldr	r4, [r0, #4]
    1d38:	blx	r4
    1d3c:	cmn	r0, #2
    1d40:	beq	1da0 <externalEntityInitProcessor+0xdc>
    1d44:	cmn	r0, #1
    1d48:	beq	1db4 <externalEntityInitProcessor+0xf0>
    1d4c:	cmp	r0, #14
    1d50:	ldreq	r6, [sp, #4]
    1d54:	cmpeq	r6, r7
    1d58:	beq	1ddc <externalEntityInitProcessor+0x118>
    1d5c:	movw	r0, #0
    1d60:	mov	r1, r6
    1d64:	mov	r2, r7
    1d68:	mov	r3, r8
    1d6c:	movt	r0, #0
    1d70:	str	r0, [r5, #288]	; 0x120
    1d74:	mov	r0, r5
    1d78:	bl	bcdc <externalEntityInitProcessor3>
    1d7c:	sub	sp, fp, #24
    1d80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1d84:	ldr	r1, [r5, #240]	; 0xf0
    1d88:	mov	r0, r5
    1d8c:	bl	2c18 <handleUnknownEncoding>
    1d90:	cmp	r0, #0
    1d94:	beq	1d14 <externalEntityInitProcessor+0x50>
    1d98:	sub	sp, fp, #24
    1d9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1da0:	ldrb	r0, [r5, #500]	; 0x1f4
    1da4:	cmp	r0, #0
    1da8:	strne	r6, [r5, #296]	; 0x128
    1dac:	movne	r0, #6
    1db0:	b	1dc4 <externalEntityInitProcessor+0x100>
    1db4:	ldrb	r0, [r5, #500]	; 0x1f4
    1db8:	cmp	r0, #0
    1dbc:	strne	r6, [r5, #296]	; 0x128
    1dc0:	movne	r0, #5
    1dc4:	subne	sp, fp, #24
    1dc8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    1dcc:	str	r6, [r8]
    1dd0:	mov	r0, #0
    1dd4:	sub	sp, fp, #24
    1dd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1ddc:	ldrb	r0, [r5, #500]	; 0x1f4
    1de0:	mov	r6, r7
    1de4:	cmp	r0, #0
    1de8:	bne	1d5c <externalEntityInitProcessor+0x98>
    1dec:	str	r7, [r8]
    1df0:	b	1dd0 <externalEntityInitProcessor+0x10c>

00001df4 <externalParEntInitProcessor>:
    1df4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1df8:	add	fp, sp, #24
    1dfc:	sub	sp, sp, #24
    1e00:	mov	r7, r0
    1e04:	ldrb	r0, [r0, #244]	; 0xf4
    1e08:	mov	r9, r2
    1e0c:	mov	r8, r3
    1e10:	movw	r3, #0
    1e14:	mov	r6, r1
    1e18:	movw	r1, #0
    1e1c:	ldr	r2, [r7, #240]	; 0xf0
    1e20:	movt	r1, #0
    1e24:	movt	r3, #0
    1e28:	add	r5, r7, #152	; 0x98
    1e2c:	cmp	r0, #0
    1e30:	add	r0, r7, #156	; 0x9c
    1e34:	moveq	r3, r1
    1e38:	mov	r1, r5
    1e3c:	blx	r3
    1e40:	cmp	r0, #0
    1e44:	beq	1e88 <externalParEntInitProcessor+0x94>
    1e48:	ldr	r0, [r7, #364]	; 0x16c
    1e4c:	mov	r1, #1
    1e50:	strb	r1, [r0, #131]	; 0x83
    1e54:	ldr	r0, [r7, #284]	; 0x11c
    1e58:	cmp	r0, #0
    1e5c:	beq	1ea4 <externalParEntInitProcessor+0xb0>
    1e60:	movw	r0, #0
    1e64:	mov	r1, r6
    1e68:	mov	r2, r9
    1e6c:	mov	r3, r8
    1e70:	movt	r0, #0
    1e74:	str	r0, [r7, #288]	; 0x120
    1e78:	mov	r0, r7
    1e7c:	sub	sp, fp, #24
    1e80:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1e84:	b	bddc <entityValueInitProcessor>
    1e88:	ldr	r1, [r7, #240]	; 0xf0
    1e8c:	mov	r0, r7
    1e90:	bl	2c18 <handleUnknownEncoding>
    1e94:	cmp	r0, #0
    1e98:	beq	1e48 <externalParEntInitProcessor+0x54>
    1e9c:	sub	sp, fp, #24
    1ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1ea4:	movw	r0, #0
    1ea8:	add	r3, sp, #20
    1eac:	mov	r1, r6
    1eb0:	mov	r2, r9
    1eb4:	movt	r0, #0
    1eb8:	str	r0, [r7, #288]	; 0x120
    1ebc:	str	r6, [sp, #20]
    1ec0:	ldr	r0, [r7, #152]	; 0x98
    1ec4:	ldr	r4, [r0]
    1ec8:	blx	r4
    1ecc:	cmp	r0, #0
    1ed0:	ble	1efc <externalParEntInitProcessor+0x108>
    1ed4:	cmp	r0, #14
    1ed8:	bne	1f30 <externalParEntInitProcessor+0x13c>
    1edc:	ldr	r0, [r5]
    1ee0:	ldr	r6, [sp, #20]
    1ee4:	add	r3, sp, #20
    1ee8:	mov	r2, r9
    1eec:	ldr	r5, [r0]
    1ef0:	mov	r1, r6
    1ef4:	blx	r5
    1ef8:	b	1f30 <externalParEntInitProcessor+0x13c>
    1efc:	beq	1f18 <externalParEntInitProcessor+0x124>
    1f00:	ldrb	r1, [r7, #500]	; 0x1f4
    1f04:	cmp	r1, #0
    1f08:	moveq	r0, #0
    1f0c:	streq	r6, [r8]
    1f10:	subeq	sp, fp, #24
    1f14:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1f18:	add	r1, r0, #2
    1f1c:	cmp	r1, #3
    1f20:	bcs	1f30 <externalParEntInitProcessor+0x13c>
    1f24:	rsb	r0, r0, #4
    1f28:	sub	sp, fp, #24
    1f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1f30:	movw	r1, #0
    1f34:	movt	r1, #0
    1f38:	str	r1, [r7, #288]	; 0x120
    1f3c:	ldrb	r2, [r7, #500]	; 0x1f4
    1f40:	ldr	r3, [sp, #20]
    1f44:	ldr	r1, [r7, #152]	; 0x98
    1f48:	clz	r2, r2
    1f4c:	stm	sp, {r0, r3, r8}
    1f50:	mov	r0, r7
    1f54:	mov	r3, r9
    1f58:	lsr	r2, r2, #5
    1f5c:	str	r2, [sp, #12]
    1f60:	mov	r2, r6
    1f64:	bl	2d04 <doProlog>
    1f68:	sub	sp, fp, #24
    1f6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00001f70 <coda_XML_UseParserAsHandlerArg>:
    1f70:	str	r0, [r0, #4]
    1f74:	bx	lr

00001f78 <coda_XML_UseForeignDTD>:
    1f78:	ldr	r2, [r0, #496]	; 0x1f0
    1f7c:	orr	r3, r2, #2
    1f80:	mov	r2, #26
    1f84:	cmp	r3, #3
    1f88:	movne	r2, #0
    1f8c:	strbne	r1, [r0, #505]	; 0x1f9
    1f90:	mov	r0, r2
    1f94:	bx	lr

00001f98 <coda_XML_SetReturnNSTriplet>:
    1f98:	ldr	r2, [r0, #496]	; 0x1f0
    1f9c:	orr	r2, r2, #2
    1fa0:	cmp	r2, #3
    1fa4:	bxeq	lr
    1fa8:	cmp	r1, #0
    1fac:	movwne	r1, #1
    1fb0:	strb	r1, [r0, #245]	; 0xf5
    1fb4:	bx	lr

00001fb8 <coda_XML_SetUserData>:
    1fb8:	ldrd	r2, [r0]
    1fbc:	str	r1, [r0]
    1fc0:	cmp	r3, r2
    1fc4:	streq	r1, [r0, #4]
    1fc8:	bx	lr

00001fcc <coda_XML_SetBase>:
    1fcc:	push	{r4, r5, r6, r7, fp, lr}
    1fd0:	add	fp, sp, #16
    1fd4:	mov	r4, r0
    1fd8:	cmp	r1, #0
    1fdc:	beq	204c <coda_XML_SetBase+0x80>
    1fe0:	ldr	r7, [r4, #364]	; 0x16c
    1fe4:	mov	r5, r1
    1fe8:	add	r6, r7, #80	; 0x50
    1fec:	ldr	r1, [r7, #88]	; 0x58
    1ff0:	ldr	r0, [r7, #92]	; 0x5c
    1ff4:	cmp	r0, r1
    1ff8:	bne	2014 <coda_XML_SetBase+0x48>
    1ffc:	mov	r0, r6
    2000:	bl	65e4 <poolGrow>
    2004:	cmp	r0, #0
    2008:	moveq	r0, #0
    200c:	popeq	{r4, r5, r6, r7, fp, pc}
    2010:	ldr	r0, [r7, #92]	; 0x5c
    2014:	ldrb	r1, [r5]
    2018:	add	r2, r0, #1
    201c:	str	r2, [r7, #92]	; 0x5c
    2020:	strb	r1, [r0]
    2024:	ldrb	r0, [r5], #1
    2028:	cmp	r0, #0
    202c:	bne	1fec <coda_XML_SetBase+0x20>
    2030:	ldr	r0, [r7, #96]	; 0x60
    2034:	ldr	r1, [r7, #92]	; 0x5c
    2038:	cmp	r0, #0
    203c:	str	r1, [r7, #96]	; 0x60
    2040:	moveq	r0, #0
    2044:	popeq	{r4, r5, r6, r7, fp, pc}
    2048:	b	2050 <coda_XML_SetBase+0x84>
    204c:	mov	r0, #0
    2050:	str	r0, [r4, #368]	; 0x170
    2054:	mov	r0, #1
    2058:	pop	{r4, r5, r6, r7, fp, pc}

0000205c <coda_XML_GetBase>:
    205c:	ldr	r0, [r0, #368]	; 0x170
    2060:	bx	lr

00002064 <coda_XML_GetSpecifiedAttributeCount>:
    2064:	ldr	r0, [r0, #392]	; 0x188
    2068:	bx	lr

0000206c <coda_XML_GetIdAttributeIndex>:
    206c:	ldr	r0, [r0, #396]	; 0x18c
    2070:	bx	lr

00002074 <coda_XML_SetElementHandler>:
    2074:	str	r1, [r0, #60]	; 0x3c
    2078:	str	r2, [r0, #64]	; 0x40
    207c:	bx	lr

00002080 <coda_XML_SetStartElementHandler>:
    2080:	str	r1, [r0, #60]	; 0x3c
    2084:	bx	lr

00002088 <coda_XML_SetEndElementHandler>:
    2088:	str	r1, [r0, #64]	; 0x40
    208c:	bx	lr

00002090 <coda_XML_SetCharacterDataHandler>:
    2090:	str	r1, [r0, #68]	; 0x44
    2094:	bx	lr

00002098 <coda_XML_SetProcessingInstructionHandler>:
    2098:	str	r1, [r0, #72]	; 0x48
    209c:	bx	lr

000020a0 <coda_XML_SetCommentHandler>:
    20a0:	str	r1, [r0, #76]	; 0x4c
    20a4:	bx	lr

000020a8 <coda_XML_SetCdataSectionHandler>:
    20a8:	mov	r3, r2
    20ac:	mov	r2, r1
    20b0:	strd	r2, [r0, #80]	; 0x50
    20b4:	bx	lr

000020b8 <coda_XML_SetStartCdataSectionHandler>:
    20b8:	str	r1, [r0, #80]	; 0x50
    20bc:	bx	lr

000020c0 <coda_XML_SetEndCdataSectionHandler>:
    20c0:	str	r1, [r0, #84]	; 0x54
    20c4:	bx	lr

000020c8 <coda_XML_SetDefaultHandler>:
    20c8:	mov	r2, #0
    20cc:	strb	r2, [r0, #316]	; 0x13c
    20d0:	str	r1, [r0, #88]	; 0x58
    20d4:	bx	lr

000020d8 <coda_XML_SetDefaultHandlerExpand>:
    20d8:	mov	r2, #1
    20dc:	strb	r2, [r0, #316]	; 0x13c
    20e0:	str	r1, [r0, #88]	; 0x58
    20e4:	bx	lr

000020e8 <coda_XML_SetDoctypeDeclHandler>:
    20e8:	str	r1, [r0, #92]	; 0x5c
    20ec:	str	r2, [r0, #96]	; 0x60
    20f0:	bx	lr

000020f4 <coda_XML_SetStartDoctypeDeclHandler>:
    20f4:	str	r1, [r0, #92]	; 0x5c
    20f8:	bx	lr

000020fc <coda_XML_SetEndDoctypeDeclHandler>:
    20fc:	str	r1, [r0, #96]	; 0x60
    2100:	bx	lr

00002104 <coda_XML_SetUnparsedEntityDeclHandler>:
    2104:	str	r1, [r0, #100]	; 0x64
    2108:	bx	lr

0000210c <coda_XML_SetNotationDeclHandler>:
    210c:	str	r1, [r0, #104]	; 0x68
    2110:	bx	lr

00002114 <coda_XML_SetNamespaceDeclHandler>:
    2114:	str	r1, [r0, #108]	; 0x6c
    2118:	str	r2, [r0, #112]	; 0x70
    211c:	bx	lr

00002120 <coda_XML_SetStartNamespaceDeclHandler>:
    2120:	str	r1, [r0, #108]	; 0x6c
    2124:	bx	lr

00002128 <coda_XML_SetEndNamespaceDeclHandler>:
    2128:	str	r1, [r0, #112]	; 0x70
    212c:	bx	lr

00002130 <coda_XML_SetNotStandaloneHandler>:
    2130:	str	r1, [r0, #116]	; 0x74
    2134:	bx	lr

00002138 <coda_XML_SetExternalEntityRefHandler>:
    2138:	str	r1, [r0, #120]	; 0x78
    213c:	bx	lr

00002140 <coda_XML_SetExternalEntityRefHandlerArg>:
    2140:	cmp	r1, #0
    2144:	streq	r0, [r0, #124]	; 0x7c
    2148:	strne	r1, [r0, #124]	; 0x7c
    214c:	bx	lr

00002150 <coda_XML_SetSkippedEntityHandler>:
    2150:	str	r1, [r0, #128]	; 0x80
    2154:	bx	lr

00002158 <coda_XML_SetUnknownEncodingHandler>:
    2158:	str	r2, [r0, #256]	; 0x100
    215c:	str	r1, [r0, #132]	; 0x84
    2160:	bx	lr

00002164 <coda_XML_SetElementDeclHandler>:
    2164:	str	r1, [r0, #136]	; 0x88
    2168:	bx	lr

0000216c <coda_XML_SetAttlistDeclHandler>:
    216c:	str	r1, [r0, #140]	; 0x8c
    2170:	bx	lr

00002174 <coda_XML_SetEntityDeclHandler>:
    2174:	str	r1, [r0, #144]	; 0x90
    2178:	bx	lr

0000217c <coda_XML_SetXmlDeclHandler>:
    217c:	str	r1, [r0, #148]	; 0x94
    2180:	bx	lr

00002184 <coda_XML_SetParamEntityParsing>:
    2184:	ldr	r2, [r0, #496]	; 0x1f0
    2188:	orr	r3, r2, #2
    218c:	mov	r2, #0
    2190:	cmp	r3, #3
    2194:	movne	r2, #1
    2198:	strne	r1, [r0, #508]	; 0x1fc
    219c:	mov	r0, r2
    21a0:	bx	lr

000021a4 <coda_XML_SetHashSalt>:
    21a4:	ldr	r2, [r0, #496]	; 0x1f0
    21a8:	orr	r3, r2, #2
    21ac:	mov	r2, #0
    21b0:	cmp	r3, #3
    21b4:	movne	r2, #1
    21b8:	strne	r1, [r0, #512]	; 0x200
    21bc:	mov	r0, r2
    21c0:	bx	lr

000021c4 <coda_XML_Parse>:
    21c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    21c8:	add	fp, sp, #24
    21cc:	mov	r4, r0
    21d0:	ldr	r0, [r0, #496]	; 0x1f0
    21d4:	mov	r5, r3
    21d8:	mov	r6, r2
    21dc:	mov	r8, r1
    21e0:	cmp	r0, #0
    21e4:	beq	2200 <coda_XML_Parse+0x3c>
    21e8:	cmp	r0, #2
    21ec:	beq	2250 <coda_XML_Parse+0x8c>
    21f0:	cmp	r0, #3
    21f4:	bne	220c <coda_XML_Parse+0x48>
    21f8:	mov	r0, #33	; 0x21
    21fc:	b	2254 <coda_XML_Parse+0x90>
    2200:	ldr	r0, [r4, #492]	; 0x1ec
    2204:	cmp	r0, #0
    2208:	beq	22b4 <coda_XML_Parse+0xf0>
    220c:	mov	r7, #1
    2210:	cmp	r6, #0
    2214:	str	r7, [r4, #496]	; 0x1f0
    2218:	beq	2264 <coda_XML_Parse+0xa0>
    221c:	mov	r0, r4
    2220:	mov	r1, r6
    2224:	bl	2364 <coda_XML_GetBuffer>
    2228:	cmp	r0, #0
    222c:	beq	2258 <coda_XML_Parse+0x94>
    2230:	mov	r1, r8
    2234:	mov	r2, r6
    2238:	bl	0 <memcpy>
    223c:	mov	r0, r4
    2240:	mov	r1, r6
    2244:	mov	r2, r5
    2248:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    224c:	b	24f0 <coda_XML_ParseBuffer>
    2250:	mov	r0, #36	; 0x24
    2254:	str	r0, [r4, #292]	; 0x124
    2258:	mov	r7, #0
    225c:	mov	r0, r7
    2260:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2264:	cmp	r5, #0
    2268:	strb	r5, [r4, #500]	; 0x1f4
    226c:	beq	2354 <coda_XML_Parse+0x190>
    2270:	mov	r3, r4
    2274:	mov	r0, r4
    2278:	ldr	r1, [r3, #24]!
    227c:	str	r1, [r4, #304]	; 0x130
    2280:	ldr	r2, [r4, #28]
    2284:	ldr	r6, [r4, #288]	; 0x120
    2288:	str	r2, [r4, #48]	; 0x30
    228c:	blx	r6
    2290:	cmp	r0, #0
    2294:	str	r0, [r4, #292]	; 0x124
    2298:	beq	2308 <coda_XML_Parse+0x144>
    229c:	movw	r0, #0
    22a0:	movt	r0, #0
    22a4:	str	r0, [r4, #288]	; 0x120
    22a8:	ldr	r0, [r4, #296]	; 0x128
    22ac:	str	r0, [r4, #300]	; 0x12c
    22b0:	b	2258 <coda_XML_Parse+0x94>
    22b4:	ldr	r0, [r4, #512]	; 0x200
    22b8:	cmp	r0, #0
    22bc:	bne	22dc <coda_XML_Parse+0x118>
    22c0:	mov	r0, #0
    22c4:	bl	0 <time>
    22c8:	cmn	r0, #1
    22cc:	addeq	r0, r0, #1
    22d0:	bl	0 <srand>
    22d4:	bl	0 <rand>
    22d8:	str	r0, [r4, #512]	; 0x200
    22dc:	ldrb	r0, [r4, #244]	; 0xf4
    22e0:	cmp	r0, #0
    22e4:	beq	220c <coda_XML_Parse+0x48>
    22e8:	movw	r1, #0
    22ec:	mov	r0, r4
    22f0:	movt	r1, #0
    22f4:	bl	1424 <setContext>
    22f8:	cmp	r0, #0
    22fc:	bne	220c <coda_XML_Parse+0x48>
    2300:	mov	r0, #1
    2304:	b	2254 <coda_XML_Parse+0x90>
    2308:	ldr	r0, [r4, #496]	; 0x1f0
    230c:	cmp	r0, #2
    2310:	bcs	2320 <coda_XML_Parse+0x15c>
    2314:	mov	r0, #2
    2318:	str	r0, [r4, #496]	; 0x1f0
    231c:	b	2354 <coda_XML_Parse+0x190>
    2320:	cmp	r0, #3
    2324:	bne	2354 <coda_XML_Parse+0x190>
    2328:	ldr	r0, [r4, #152]	; 0x98
    232c:	ldr	r2, [r4, #24]
    2330:	ldr	r1, [r4, #304]	; 0x130
    2334:	add	r3, r4, #416	; 0x1a0
    2338:	ldr	r7, [r0, #52]	; 0x34
    233c:	blx	r7
    2340:	ldr	r0, [r4, #24]
    2344:	mov	r7, #2
    2348:	str	r0, [r4, #304]	; 0x130
    234c:	mov	r0, r7
    2350:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2354:	mov	r0, r7
    2358:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000235c <errorProcessor>:
    235c:	ldr	r0, [r0, #292]	; 0x124
    2360:	bx	lr

00002364 <coda_XML_GetBuffer>:
    2364:	push	{r4, r5, r6, r7, fp, lr}
    2368:	add	fp, sp, #16
    236c:	mov	r4, r0
    2370:	cmn	r1, #1
    2374:	ble	248c <coda_XML_GetBuffer+0x128>
    2378:	ldr	r0, [r4, #496]	; 0x1f0
    237c:	cmp	r0, #2
    2380:	beq	2394 <coda_XML_GetBuffer+0x30>
    2384:	cmp	r0, #3
    2388:	bne	239c <coda_XML_GetBuffer+0x38>
    238c:	mov	r0, #33	; 0x21
    2390:	b	2490 <coda_XML_GetBuffer+0x12c>
    2394:	mov	r0, #36	; 0x24
    2398:	b	2490 <coda_XML_GetBuffer+0x12c>
    239c:	ldr	r0, [r4, #28]
    23a0:	ldr	r2, [r4, #32]
    23a4:	sub	r3, r2, r0
    23a8:	cmp	r3, r1
    23ac:	popge	{r4, r5, r6, r7, fp, pc}
    23b0:	ldr	r5, [r4, #24]
    23b4:	sub	ip, r0, r5
    23b8:	add	r1, ip, r1
    23bc:	cmn	r1, #1
    23c0:	ble	248c <coda_XML_GetBuffer+0x128>
    23c4:	ldr	lr, [r4, #8]
    23c8:	sub	r3, r5, lr
    23cc:	sub	r7, r2, lr
    23d0:	cmp	r3, #1024	; 0x400
    23d4:	mov	r6, r3
    23d8:	movge	r6, #1024	; 0x400
    23dc:	add	r1, r6, r1
    23e0:	cmp	r1, r7
    23e4:	ble	249c <coda_XML_GetBuffer+0x138>
    23e8:	subs	r6, r2, r5
    23ec:	movweq	r6, #1024	; 0x400
    23f0:	mov	r0, r6
    23f4:	lsl	r6, r6, #1
    23f8:	cmp	r0, #1
    23fc:	blt	2408 <coda_XML_GetBuffer+0xa4>
    2400:	cmp	r6, r1
    2404:	blt	23f0 <coda_XML_GetBuffer+0x8c>
    2408:	cmp	r0, #0
    240c:	ble	248c <coda_XML_GetBuffer+0x128>
    2410:	ldr	r1, [r4, #12]
    2414:	mov	r0, r6
    2418:	blx	r1
    241c:	cmp	r0, #0
    2420:	beq	248c <coda_XML_GetBuffer+0x128>
    2424:	mov	r5, r0
    2428:	add	r0, r0, r6
    242c:	str	r0, [r4, #32]
    2430:	ldr	r0, [r4, #24]
    2434:	cmp	r0, #0
    2438:	beq	24c8 <coda_XML_GetBuffer+0x164>
    243c:	ldr	r1, [r4, #8]
    2440:	ldr	r2, [r4, #28]
    2444:	sub	r6, r0, r1
    2448:	sub	r2, r2, r0
    244c:	cmp	r6, #1024	; 0x400
    2450:	movge	r6, #1024	; 0x400
    2454:	sub	r1, r0, r6
    2458:	add	r2, r2, r6
    245c:	mov	r0, r5
    2460:	bl	0 <memcpy>
    2464:	ldr	r0, [r4, #8]
    2468:	ldr	r1, [r4, #20]
    246c:	blx	r1
    2470:	str	r5, [r4, #8]
    2474:	ldrd	r0, [r4, #24]
    2478:	sub	r0, r1, r0
    247c:	add	r0, r5, r0
    2480:	add	r5, r5, r6
    2484:	add	r0, r0, r6
    2488:	b	24d4 <coda_XML_GetBuffer+0x170>
    248c:	mov	r0, #1
    2490:	str	r0, [r4, #292]	; 0x124
    2494:	mov	r0, #0
    2498:	pop	{r4, r5, r6, r7, fp, pc}
    249c:	cmp	r3, #1024	; 0x400
    24a0:	ble	24dc <coda_XML_GetBuffer+0x178>
    24a4:	sub	r5, r3, r6
    24a8:	add	r2, r6, ip
    24ac:	mov	r0, lr
    24b0:	add	r1, lr, r5
    24b4:	bl	0 <memmove>
    24b8:	ldrd	r2, [r4, #24]
    24bc:	sub	r0, r3, r5
    24c0:	sub	r5, r2, r5
    24c4:	b	24d4 <coda_XML_GetBuffer+0x170>
    24c8:	str	r5, [r4, #8]
    24cc:	ldr	r0, [r4, #28]
    24d0:	add	r0, r5, r0
    24d4:	str	r0, [r4, #28]
    24d8:	str	r5, [r4, #24]
    24dc:	mov	r1, #0
    24e0:	str	r1, [r4, #296]	; 0x128
    24e4:	str	r1, [r4, #300]	; 0x12c
    24e8:	str	r1, [r4, #304]	; 0x130
    24ec:	pop	{r4, r5, r6, r7, fp, pc}

000024f0 <coda_XML_ParseBuffer>:
    24f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    24f4:	add	fp, sp, #24
    24f8:	mov	r4, r0
    24fc:	ldr	r0, [r0, #496]	; 0x1f0
    2500:	mov	r8, r2
    2504:	mov	r7, r1
    2508:	cmp	r0, #0
    250c:	beq	2528 <coda_XML_ParseBuffer+0x38>
    2510:	cmp	r0, #2
    2514:	beq	25a4 <coda_XML_ParseBuffer+0xb4>
    2518:	cmp	r0, #3
    251c:	bne	2534 <coda_XML_ParseBuffer+0x44>
    2520:	mov	r0, #33	; 0x21
    2524:	b	25a8 <coda_XML_ParseBuffer+0xb8>
    2528:	ldr	r0, [r4, #492]	; 0x1ec
    252c:	cmp	r0, #0
    2530:	beq	25e0 <coda_XML_ParseBuffer+0xf0>
    2534:	mov	r6, #1
    2538:	mov	r3, r4
    253c:	str	r6, [r4, #496]	; 0x1f0
    2540:	strb	r8, [r4, #500]	; 0x1f4
    2544:	ldr	r1, [r3, #24]!
    2548:	str	r1, [r4, #304]	; 0x130
    254c:	ldr	r0, [r4, #28]
    2550:	ldr	r2, [r4, #40]	; 0x28
    2554:	ldr	r9, [r4, #44]	; 0x2c
    2558:	ldr	ip, [r4, #288]	; 0x120
    255c:	adds	r5, r2, r7
    2560:	add	r2, r0, r7
    2564:	adc	r0, r9, r7, asr #31
    2568:	str	r2, [r4, #28]
    256c:	str	r5, [r4, #40]	; 0x28
    2570:	str	r0, [r4, #44]	; 0x2c
    2574:	mov	r0, r4
    2578:	str	r2, [r4, #48]	; 0x30
    257c:	blx	ip
    2580:	cmp	r0, #0
    2584:	str	r0, [r4, #292]	; 0x124
    2588:	beq	25b8 <coda_XML_ParseBuffer+0xc8>
    258c:	movw	r0, #0
    2590:	movt	r0, #0
    2594:	str	r0, [r4, #288]	; 0x120
    2598:	ldr	r0, [r4, #296]	; 0x128
    259c:	str	r0, [r4, #300]	; 0x12c
    25a0:	b	25ac <coda_XML_ParseBuffer+0xbc>
    25a4:	mov	r0, #36	; 0x24
    25a8:	str	r0, [r4, #292]	; 0x124
    25ac:	mov	r6, #0
    25b0:	mov	r0, r6
    25b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    25b8:	ldr	r0, [r4, #496]	; 0x1f0
    25bc:	cmp	r0, #2
    25c0:	bcs	2634 <coda_XML_ParseBuffer+0x144>
    25c4:	cmp	r8, #0
    25c8:	movne	r0, #2
    25cc:	movne	r6, #1
    25d0:	strne	r0, [r4, #496]	; 0x1f0
    25d4:	movne	r0, r6
    25d8:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    25dc:	b	263c <coda_XML_ParseBuffer+0x14c>
    25e0:	ldr	r0, [r4, #512]	; 0x200
    25e4:	cmp	r0, #0
    25e8:	bne	2608 <coda_XML_ParseBuffer+0x118>
    25ec:	mov	r0, #0
    25f0:	bl	0 <time>
    25f4:	cmn	r0, #1
    25f8:	addeq	r0, r0, #1
    25fc:	bl	0 <srand>
    2600:	bl	0 <rand>
    2604:	str	r0, [r4, #512]	; 0x200
    2608:	ldrb	r0, [r4, #244]	; 0xf4
    260c:	cmp	r0, #0
    2610:	beq	2534 <coda_XML_ParseBuffer+0x44>
    2614:	movw	r1, #0
    2618:	mov	r0, r4
    261c:	movt	r1, #0
    2620:	bl	1424 <setContext>
    2624:	cmp	r0, #0
    2628:	bne	2534 <coda_XML_ParseBuffer+0x44>
    262c:	mov	r0, #1
    2630:	b	25a8 <coda_XML_ParseBuffer+0xb8>
    2634:	cmp	r0, #3
    2638:	moveq	r6, #2
    263c:	ldr	r0, [r4, #152]	; 0x98
    2640:	ldr	r2, [r4, #24]
    2644:	ldr	r1, [r4, #304]	; 0x130
    2648:	add	r3, r4, #416	; 0x1a0
    264c:	ldr	r7, [r0, #52]	; 0x34
    2650:	blx	r7
    2654:	ldr	r0, [r4, #24]
    2658:	str	r0, [r4, #304]	; 0x130
    265c:	mov	r0, r6
    2660:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00002664 <coda_XML_StopParser>:
    2664:	ldr	r2, [r0, #496]	; 0x1f0
    2668:	cmp	r2, #2
    266c:	beq	2688 <coda_XML_StopParser+0x24>
    2670:	cmp	r2, #3
    2674:	bne	2690 <coda_XML_StopParser+0x2c>
    2678:	cmp	r1, #0
    267c:	beq	26b4 <coda_XML_StopParser+0x50>
    2680:	mov	r1, #33	; 0x21
    2684:	b	26a8 <coda_XML_StopParser+0x44>
    2688:	mov	r1, #36	; 0x24
    268c:	b	26a8 <coda_XML_StopParser+0x44>
    2690:	cmp	r1, #0
    2694:	beq	26b4 <coda_XML_StopParser+0x50>
    2698:	ldrb	r1, [r0, #504]	; 0x1f8
    269c:	cmp	r1, #0
    26a0:	beq	26bc <coda_XML_StopParser+0x58>
    26a4:	mov	r1, #37	; 0x25
    26a8:	str	r1, [r0, #292]	; 0x124
    26ac:	mov	r0, #0
    26b0:	bx	lr
    26b4:	mov	r1, #2
    26b8:	b	26c0 <coda_XML_StopParser+0x5c>
    26bc:	mov	r1, #3
    26c0:	str	r1, [r0, #496]	; 0x1f0
    26c4:	mov	r0, #1
    26c8:	bx	lr

000026cc <coda_XML_ResumeParser>:
    26cc:	push	{r4, r5, fp, lr}
    26d0:	add	fp, sp, #8
    26d4:	mov	r4, r0
    26d8:	ldr	r0, [r0, #496]	; 0x1f0
    26dc:	cmp	r0, #3
    26e0:	bne	2728 <coda_XML_ResumeParser+0x5c>
    26e4:	mov	r5, #1
    26e8:	mov	r3, r4
    26ec:	mov	r0, r4
    26f0:	str	r5, [r4, #496]	; 0x1f0
    26f4:	ldr	r1, [r3, #24]!
    26f8:	ldr	r2, [r4, #48]	; 0x30
    26fc:	ldr	ip, [r4, #288]	; 0x120
    2700:	blx	ip
    2704:	cmp	r0, #0
    2708:	str	r0, [r4, #292]	; 0x124
    270c:	beq	273c <coda_XML_ResumeParser+0x70>
    2710:	movw	r0, #0
    2714:	movt	r0, #0
    2718:	str	r0, [r4, #288]	; 0x120
    271c:	ldr	r0, [r4, #296]	; 0x128
    2720:	str	r0, [r4, #300]	; 0x12c
    2724:	b	2730 <coda_XML_ResumeParser+0x64>
    2728:	mov	r0, #34	; 0x22
    272c:	str	r0, [r4, #292]	; 0x124
    2730:	mov	r5, #0
    2734:	mov	r0, r5
    2738:	pop	{r4, r5, fp, pc}
    273c:	ldr	r0, [r4, #496]	; 0x1f0
    2740:	cmp	r0, #2
    2744:	bcs	2768 <coda_XML_ResumeParser+0x9c>
    2748:	ldrb	r0, [r4, #500]	; 0x1f4
    274c:	cmp	r0, #0
    2750:	movne	r0, #2
    2754:	movne	r5, #1
    2758:	strne	r0, [r4, #496]	; 0x1f0
    275c:	movne	r0, r5
    2760:	popne	{r4, r5, fp, pc}
    2764:	b	2770 <coda_XML_ResumeParser+0xa4>
    2768:	cmp	r0, #3
    276c:	moveq	r5, #2
    2770:	ldr	r0, [r4, #152]	; 0x98
    2774:	ldr	r2, [r4, #24]
    2778:	ldr	r1, [r4, #304]	; 0x130
    277c:	add	r3, r4, #416	; 0x1a0
    2780:	ldr	ip, [r0, #52]	; 0x34
    2784:	blx	ip
    2788:	ldr	r0, [r4, #24]
    278c:	str	r0, [r4, #304]	; 0x130
    2790:	mov	r0, r5
    2794:	pop	{r4, r5, fp, pc}

00002798 <coda_XML_GetParsingStatus>:
    2798:	cmp	r1, #0
    279c:	ldrne	r2, [r0, #496]	; 0x1f0
    27a0:	ldrne	r0, [r0, #500]	; 0x1f4
    27a4:	strne	r2, [r1]
    27a8:	strne	r0, [r1, #4]
    27ac:	bxne	lr
    27b0:	push	{fp, lr}
    27b4:	mov	fp, sp
    27b8:	movw	r0, #0
    27bc:	movw	r1, #0
    27c0:	movw	r3, #0
    27c4:	movw	r2, #1835	; 0x72b
    27c8:	movt	r0, #0
    27cc:	movt	r1, #0
    27d0:	movt	r3, #0
    27d4:	bl	0 <__assert_fail>

000027d8 <coda_XML_GetErrorCode>:
    27d8:	ldr	r0, [r0, #292]	; 0x124
    27dc:	bx	lr

000027e0 <coda_XML_GetCurrentByteIndex>:
    27e0:	ldr	r1, [r0, #296]	; 0x128
    27e4:	cmp	r1, #0
    27e8:	mvneq	r0, #0
    27ec:	mvneq	r1, #0
    27f0:	bxeq	lr
    27f4:	ldr	r2, [r0, #40]	; 0x28
    27f8:	ldr	r3, [r0, #44]	; 0x2c
    27fc:	ldr	r0, [r0, #48]	; 0x30
    2800:	sub	r1, r0, r1
    2804:	subs	r0, r2, r1
    2808:	sbc	r1, r3, r1, asr #31
    280c:	bx	lr

00002810 <coda_XML_GetCurrentByteCount>:
    2810:	ldr	r2, [r0, #300]	; 0x12c
    2814:	mov	r1, r0
    2818:	mov	r0, #0
    281c:	cmp	r2, #0
    2820:	ldrne	r1, [r1, #296]	; 0x128
    2824:	cmpne	r1, #0
    2828:	subne	r0, r2, r1
    282c:	bx	lr

00002830 <coda_XML_GetInputContext>:
    2830:	push	{fp, lr}
    2834:	mov	fp, sp
    2838:	ldr	ip, [r0, #296]	; 0x128
    283c:	mov	r3, r0
    2840:	mov	r0, #0
    2844:	cmp	ip, #0
    2848:	ldrne	lr, [r3, #8]
    284c:	cmpne	lr, #0
    2850:	bne	2858 <coda_XML_GetInputContext+0x28>
    2854:	pop	{fp, pc}
    2858:	sub	r0, ip, lr
    285c:	str	r0, [r1]
    2860:	ldr	r0, [r3, #28]
    2864:	sub	r0, r0, lr
    2868:	str	r0, [r2]
    286c:	mov	r0, lr
    2870:	pop	{fp, pc}

00002874 <coda_XML_GetCurrentLineNumber>:
    2874:	push	{r4, sl, fp, lr}
    2878:	add	fp, sp, #8
    287c:	ldr	r2, [r0, #296]	; 0x128
    2880:	mov	r4, r0
    2884:	cmp	r2, #0
    2888:	beq	28b0 <coda_XML_GetCurrentLineNumber+0x3c>
    288c:	ldr	r1, [r4, #304]	; 0x130
    2890:	cmp	r2, r1
    2894:	bcc	28b0 <coda_XML_GetCurrentLineNumber+0x3c>
    2898:	ldr	r0, [r4, #152]	; 0x98
    289c:	add	r3, r4, #416	; 0x1a0
    28a0:	ldr	ip, [r0, #52]	; 0x34
    28a4:	blx	ip
    28a8:	ldr	r0, [r4, #296]	; 0x128
    28ac:	str	r0, [r4, #304]	; 0x130
    28b0:	ldr	r0, [r4, #416]	; 0x1a0
    28b4:	ldr	r1, [r4, #420]	; 0x1a4
    28b8:	adds	r0, r0, #1
    28bc:	adc	r1, r1, #0
    28c0:	pop	{r4, sl, fp, pc}

000028c4 <coda_XML_GetCurrentColumnNumber>:
    28c4:	push	{r4, sl, fp, lr}
    28c8:	add	fp, sp, #8
    28cc:	ldr	r2, [r0, #296]	; 0x128
    28d0:	mov	r4, r0
    28d4:	cmp	r2, #0
    28d8:	beq	2900 <coda_XML_GetCurrentColumnNumber+0x3c>
    28dc:	ldr	r1, [r4, #304]	; 0x130
    28e0:	cmp	r2, r1
    28e4:	bcc	2900 <coda_XML_GetCurrentColumnNumber+0x3c>
    28e8:	ldr	r0, [r4, #152]	; 0x98
    28ec:	add	r3, r4, #416	; 0x1a0
    28f0:	ldr	ip, [r0, #52]	; 0x34
    28f4:	blx	ip
    28f8:	ldr	r0, [r4, #296]	; 0x128
    28fc:	str	r0, [r4, #304]	; 0x130
    2900:	ldr	r0, [r4, #424]	; 0x1a8
    2904:	ldr	r1, [r4, #428]	; 0x1ac
    2908:	pop	{r4, sl, fp, pc}

0000290c <coda_XML_FreeContentModel>:
    290c:	ldr	r2, [r0, #20]
    2910:	mov	r0, r1
    2914:	bx	r2

00002918 <coda_XML_MemMalloc>:
    2918:	ldr	r2, [r0, #12]
    291c:	mov	r0, r1
    2920:	bx	r2

00002924 <coda_XML_MemRealloc>:
    2924:	ldr	r3, [r0, #16]
    2928:	mov	r0, r1
    292c:	mov	r1, r2
    2930:	bx	r3

00002934 <coda_XML_MemFree>:
    2934:	ldr	r2, [r0, #20]
    2938:	mov	r0, r1
    293c:	bx	r2

00002940 <coda_XML_DefaultCurrent>:
    2940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2944:	add	fp, sp, #28
    2948:	sub	sp, sp, #12
    294c:	ldr	r3, [r0, #88]	; 0x58
    2950:	cmp	r3, #0
    2954:	beq	2a94 <coda_XML_DefaultCurrent+0x154>
    2958:	ldr	sl, [r0, #308]	; 0x134
    295c:	mov	r4, r0
    2960:	cmp	sl, #0
    2964:	beq	2990 <coda_XML_DefaultCurrent+0x50>
    2968:	ldr	r1, [sl]
    296c:	ldr	r6, [r4, #236]	; 0xec
    2970:	mov	r8, sl
    2974:	ldr	r5, [r8, #4]!
    2978:	str	r1, [sp, #8]
    297c:	ldrb	r0, [r6, #72]	; 0x48
    2980:	cmp	r0, #0
    2984:	beq	29c0 <coda_XML_DefaultCurrent+0x80>
    2988:	sub	r2, r5, r1
    298c:	b	29b0 <coda_XML_DefaultCurrent+0x70>
    2990:	ldr	r1, [r4, #296]	; 0x128
    2994:	ldr	r5, [r4, #152]	; 0x98
    2998:	ldr	r6, [r4, #300]	; 0x12c
    299c:	str	r1, [sp, #8]
    29a0:	ldrb	r0, [r5, #72]	; 0x48
    29a4:	cmp	r0, #0
    29a8:	beq	2a34 <coda_XML_DefaultCurrent+0xf4>
    29ac:	sub	r2, r6, r1
    29b0:	ldr	r0, [r4, #4]
    29b4:	blx	r3
    29b8:	sub	sp, fp, #28
    29bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    29c0:	ldr	r0, [r4, #152]	; 0x98
    29c4:	add	r9, sp, #4
    29c8:	cmp	r0, r6
    29cc:	addeq	r8, r4, #300	; 0x12c
    29d0:	addeq	sl, r4, #296	; 0x128
    29d4:	ldr	r0, [r4, #52]	; 0x34
    29d8:	ldr	r1, [r4, #56]	; 0x38
    29dc:	mov	r2, r5
    29e0:	mov	r3, r9
    29e4:	str	r0, [sp, #4]
    29e8:	mov	r0, r6
    29ec:	ldr	r7, [r6, #60]	; 0x3c
    29f0:	str	r1, [sp]
    29f4:	add	r1, sp, #8
    29f8:	blx	r7
    29fc:	ldr	r0, [sp, #8]
    2a00:	str	r0, [r8]
    2a04:	ldr	r1, [r4, #52]	; 0x34
    2a08:	ldr	r2, [sp, #4]
    2a0c:	ldr	r0, [r4, #4]
    2a10:	ldr	r3, [r4, #88]	; 0x58
    2a14:	sub	r2, r2, r1
    2a18:	blx	r3
    2a1c:	ldr	r0, [sp, #8]
    2a20:	str	r0, [sl]
    2a24:	ldr	r0, [sp, #8]
    2a28:	cmp	r0, r5
    2a2c:	bne	29d4 <coda_XML_DefaultCurrent+0x94>
    2a30:	b	2a94 <coda_XML_DefaultCurrent+0x154>
    2a34:	add	r8, sp, #8
    2a38:	add	r9, sp, #4
    2a3c:	ldr	r0, [r4, #52]	; 0x34
    2a40:	ldr	r1, [r4, #56]	; 0x38
    2a44:	mov	r2, r6
    2a48:	mov	r3, r9
    2a4c:	str	r0, [sp, #4]
    2a50:	mov	r0, r5
    2a54:	ldr	r7, [r5, #60]	; 0x3c
    2a58:	str	r1, [sp]
    2a5c:	mov	r1, r8
    2a60:	blx	r7
    2a64:	ldr	r0, [sp, #8]
    2a68:	str	r0, [r4, #300]	; 0x12c
    2a6c:	ldr	r1, [r4, #52]	; 0x34
    2a70:	ldr	r2, [sp, #4]
    2a74:	ldr	r0, [r4, #4]
    2a78:	ldr	r3, [r4, #88]	; 0x58
    2a7c:	sub	r2, r2, r1
    2a80:	blx	r3
    2a84:	ldr	r0, [sp, #8]
    2a88:	cmp	r6, r0
    2a8c:	str	r0, [r4, #296]	; 0x128
    2a90:	bne	2a3c <coda_XML_DefaultCurrent+0xfc>
    2a94:	sub	sp, fp, #28
    2a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00002a9c <coda_XML_ErrorString>:
    2a9c:	sub	r2, r0, #1
    2aa0:	mov	r1, #0
    2aa4:	cmp	r2, #39	; 0x27
    2aa8:	movwls	r1, #0
    2aac:	movtls	r1, #0
    2ab0:	ldrls	r1, [r1, r0, lsl #2]
    2ab4:	mov	r0, r1
    2ab8:	bx	lr

00002abc <coda_XML_ExpatVersion>:
    2abc:	movw	r0, #0
    2ac0:	movt	r0, #0
    2ac4:	bx	lr

00002ac8 <coda_XML_ExpatVersionInfo>:
    2ac8:	mov	r2, #2
    2acc:	mov	r1, #1
    2ad0:	str	r2, [r0]
    2ad4:	str	r1, [r0, #4]
    2ad8:	str	r1, [r0, #8]
    2adc:	bx	lr

00002ae0 <coda_XML_GetFeatureList>:
    2ae0:	movw	r0, #0
    2ae4:	movt	r0, #0
    2ae8:	bx	lr

00002aec <prologInitProcessor>:
    2aec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2af0:	add	fp, sp, #24
    2af4:	sub	sp, sp, #24
    2af8:	mov	r7, r0
    2afc:	ldrb	r0, [r0, #244]	; 0xf4
    2b00:	mov	r4, r2
    2b04:	mov	r8, r3
    2b08:	movw	r3, #0
    2b0c:	mov	r5, r1
    2b10:	movw	r1, #0
    2b14:	ldr	r2, [r7, #240]	; 0xf0
    2b18:	movt	r1, #0
    2b1c:	movt	r3, #0
    2b20:	cmp	r0, #0
    2b24:	add	r0, r7, #156	; 0x9c
    2b28:	moveq	r3, r1
    2b2c:	add	r1, r7, #152	; 0x98
    2b30:	blx	r3
    2b34:	cmp	r0, #0
    2b38:	bne	2b58 <prologInitProcessor+0x6c>
    2b3c:	ldr	r1, [r7, #240]	; 0xf0
    2b40:	mov	r0, r7
    2b44:	bl	2c18 <handleUnknownEncoding>
    2b48:	cmp	r0, #0
    2b4c:	beq	2b58 <prologInitProcessor+0x6c>
    2b50:	sub	sp, fp, #24
    2b54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2b58:	movw	r0, #0
    2b5c:	add	r3, sp, #20
    2b60:	mov	r1, r5
    2b64:	mov	r2, r4
    2b68:	movt	r0, #0
    2b6c:	str	r0, [r7, #288]	; 0x120
    2b70:	str	r5, [sp, #20]
    2b74:	ldr	r0, [r7, #152]	; 0x98
    2b78:	ldr	r6, [r0]
    2b7c:	blx	r6
    2b80:	ldrb	r2, [r7, #500]	; 0x1f4
    2b84:	ldr	r3, [sp, #20]
    2b88:	ldr	r1, [r7, #152]	; 0x98
    2b8c:	clz	r2, r2
    2b90:	stm	sp, {r0, r3, r8}
    2b94:	mov	r0, r7
    2b98:	mov	r3, r4
    2b9c:	lsr	r2, r2, #5
    2ba0:	str	r2, [sp, #12]
    2ba4:	mov	r2, r5
    2ba8:	bl	2d04 <doProlog>
    2bac:	sub	sp, fp, #24
    2bb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002bb4 <prologProcessor>:
    2bb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2bb8:	add	fp, sp, #24
    2bbc:	sub	sp, sp, #24
    2bc0:	str	r1, [sp, #20]
    2bc4:	mov	r7, r0
    2bc8:	mov	r8, r3
    2bcc:	add	r3, sp, #20
    2bd0:	mov	r5, r2
    2bd4:	mov	r6, r1
    2bd8:	ldr	r0, [r0, #152]	; 0x98
    2bdc:	ldr	r4, [r0]
    2be0:	blx	r4
    2be4:	ldrb	r2, [r7, #500]	; 0x1f4
    2be8:	ldr	r3, [sp, #20]
    2bec:	ldr	r1, [r7, #152]	; 0x98
    2bf0:	clz	r2, r2
    2bf4:	stm	sp, {r0, r3, r8}
    2bf8:	mov	r0, r7
    2bfc:	mov	r3, r5
    2c00:	lsr	r2, r2, #5
    2c04:	str	r2, [sp, #12]
    2c08:	mov	r2, r6
    2c0c:	bl	2d04 <doProlog>
    2c10:	sub	sp, fp, #24
    2c14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002c18 <handleUnknownEncoding>:
    2c18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2c1c:	add	fp, sp, #24
    2c20:	sub	sp, sp, #1040	; 0x410
    2c24:	ldr	r4, [r0, #132]	; 0x84
    2c28:	mov	r8, #18
    2c2c:	cmp	r4, #0
    2c30:	beq	2cf8 <handleUnknownEncoding+0xe0>
    2c34:	mov	r7, sp
    2c38:	mov	r6, r1
    2c3c:	mov	r5, r0
    2c40:	mov	r1, #255	; 0xff
    2c44:	mov	r2, #1024	; 0x400
    2c48:	mov	r0, r7
    2c4c:	bl	0 <memset>
    2c50:	mov	r0, #0
    2c54:	mov	r1, r6
    2c58:	mov	r2, r7
    2c5c:	str	r0, [sp, #1028]	; 0x404
    2c60:	str	r0, [sp, #1024]	; 0x400
    2c64:	str	r0, [sp, #1032]	; 0x408
    2c68:	ldr	r0, [r5, #256]	; 0x100
    2c6c:	blx	r4
    2c70:	cmp	r0, #0
    2c74:	beq	2ce4 <handleUnknownEncoding+0xcc>
    2c78:	ldr	r4, [r5, #12]
    2c7c:	bl	0 <coda_XmlSizeOfUnknownEncoding>
    2c80:	blx	r4
    2c84:	cmp	r0, #0
    2c88:	str	r0, [r5, #248]	; 0xf8
    2c8c:	beq	2ce0 <handleUnknownEncoding+0xc8>
    2c90:	ldrb	r1, [r5, #244]	; 0xf4
    2c94:	movw	r2, #0
    2c98:	movw	r7, #0
    2c9c:	ldr	r3, [sp, #1024]	; 0x400
    2ca0:	movt	r2, #0
    2ca4:	movt	r7, #0
    2ca8:	cmp	r1, #0
    2cac:	mov	r1, sp
    2cb0:	moveq	r7, r2
    2cb4:	ldr	r2, [sp, #1028]	; 0x404
    2cb8:	blx	r7
    2cbc:	cmp	r0, #0
    2cc0:	beq	2ce4 <handleUnknownEncoding+0xcc>
    2cc4:	ldr	r1, [sp, #1024]	; 0x400
    2cc8:	mov	r8, #0
    2ccc:	str	r1, [r5, #252]	; 0xfc
    2cd0:	ldr	r1, [sp, #1032]	; 0x408
    2cd4:	str	r0, [r5, #152]	; 0x98
    2cd8:	str	r1, [r5, #260]	; 0x104
    2cdc:	b	2cf8 <handleUnknownEncoding+0xe0>
    2ce0:	mov	r8, #1
    2ce4:	ldr	r1, [sp, #1032]	; 0x408
    2ce8:	cmp	r1, #0
    2cec:	beq	2cf8 <handleUnknownEncoding+0xe0>
    2cf0:	ldr	r0, [sp, #1024]	; 0x400
    2cf4:	blx	r1
    2cf8:	mov	r0, r8
    2cfc:	sub	sp, fp, #24
    2d00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002d04 <doProlog>:
    2d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2d08:	add	fp, sp, #28
    2d0c:	sub	sp, sp, #116	; 0x74
    2d10:	mov	r8, r0
    2d14:	ldr	r0, [r0, #152]	; 0x98
    2d18:	mov	r5, r1
    2d1c:	mov	r6, r2
    2d20:	str	r3, [fp, #-60]	; 0xffffffc4
    2d24:	ldr	r1, [r8, #364]	; 0x16c
    2d28:	cmp	r0, r5
    2d2c:	beq	2d58 <doProlog+0x54>
    2d30:	mov	r0, r8
    2d34:	ldr	r3, [r0, #308]!	; 0x134
    2d38:	sub	r2, r0, #8
    2d3c:	str	r0, [sp, #48]	; 0x30
    2d40:	sub	r0, r0, #12
    2d44:	str	r3, [fp, #-56]	; 0xffffffc8
    2d48:	str	r0, [sp, #56]	; 0x38
    2d4c:	add	r0, r3, #4
    2d50:	str	r2, [sp, #60]	; 0x3c
    2d54:	b	2d74 <doProlog+0x70>
    2d58:	add	r0, r8, #308	; 0x134
    2d5c:	add	r2, r8, #296	; 0x128
    2d60:	str	r0, [sp, #48]	; 0x30
    2d64:	add	r0, r8, #300	; 0x12c
    2d68:	str	r2, [sp, #56]	; 0x38
    2d6c:	str	r2, [fp, #-56]	; 0xffffffc8
    2d70:	str	r0, [sp, #60]	; 0x3c
    2d74:	str	r0, [fp, #-52]	; 0xffffffcc
    2d78:	add	r2, r1, #92	; 0x5c
    2d7c:	ldr	r0, [fp, #8]
    2d80:	str	r1, [fp, #-48]	; 0xffffffd0
    2d84:	str	r2, [sp, #72]	; 0x48
    2d88:	add	r2, r1, #96	; 0x60
    2d8c:	str	r2, [sp, #52]	; 0x34
    2d90:	add	r2, r1, #80	; 0x50
    2d94:	str	r2, [fp, #-68]	; 0xffffffbc
    2d98:	add	r2, r8, #444	; 0x1bc
    2d9c:	str	r2, [sp, #64]	; 0x40
    2da0:	add	r2, r8, #432	; 0x1b0
    2da4:	str	r2, [sp, #68]	; 0x44
    2da8:	add	r2, r1, #132	; 0x84
    2dac:	str	r2, [sp, #44]	; 0x2c
    2db0:	add	r2, r8, #264	; 0x108
    2db4:	str	r2, [fp, #-64]	; 0xffffffc0
    2db8:	b	2dd8 <doProlog+0xd4>
    2dbc:	ldr	r6, [fp, #12]
    2dc0:	ldr	r7, [r5]
    2dc4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2dc8:	mov	r0, r5
    2dcc:	add	r3, fp, #12
    2dd0:	mov	r1, r6
    2dd4:	blx	r7
    2dd8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    2ddc:	cmp	r0, #0
    2de0:	str	r5, [fp, #-40]	; 0xffffffd8
    2de4:	str	r6, [r1]
    2de8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2dec:	ldr	r3, [fp, #12]
    2df0:	str	r3, [r1]
    2df4:	ble	2e00 <doProlog+0xfc>
    2df8:	mov	r4, r0
    2dfc:	b	2e78 <doProlog+0x174>
    2e00:	ldr	r1, [fp, #20]
    2e04:	cmp	r1, #0
    2e08:	cmpne	r0, #0
    2e0c:	bne	56fc <doProlog+0x29f8>
    2e10:	add	r1, r0, #15
    2e14:	cmp	r1, #15
    2e18:	bhi	2e6c <doProlog+0x168>
    2e1c:	add	r2, pc, #8
    2e20:	mov	r4, #15
    2e24:	mov	r9, #5
    2e28:	ldr	pc, [r2, r1, lsl #2]
    2e2c:	.word	0x00002e78
    2e30:	.word	0x00002e6c
    2e34:	.word	0x00002e6c
    2e38:	.word	0x00002e6c
    2e3c:	.word	0x00002e6c
    2e40:	.word	0x00002e6c
    2e44:	.word	0x00002e6c
    2e48:	.word	0x00002e6c
    2e4c:	.word	0x00002e6c
    2e50:	.word	0x00002e6c
    2e54:	.word	0x00002e6c
    2e58:	.word	0x000055c4
    2e5c:	.word	0x00002e6c
    2e60:	.word	0x000055ec
    2e64:	.word	0x00005708
    2e68:	.word	0x000055f4
    2e6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2e70:	rsb	r4, r0, #0
    2e74:	str	r3, [fp, #12]
    2e78:	ldr	r1, [fp, #-64]	; 0xffffffc0
    2e7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2e80:	mov	r2, r6
    2e84:	str	r6, [fp, #-44]	; 0xffffffd4
    2e88:	ldr	r7, [r1]
    2e8c:	str	r0, [sp]
    2e90:	mov	r0, r1
    2e94:	mov	r1, r4
    2e98:	blx	r7
    2e9c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    2ea0:	mov	sl, r0
    2ea4:	add	r0, r0, #1
    2ea8:	cmp	r0, #61	; 0x3d
    2eac:	bhi	4d00 <doProlog+0x1ffc>
    2eb0:	add	r1, pc, #8
    2eb4:	mov	r7, #0
    2eb8:	mov	r6, #1
    2ebc:	ldr	pc, [r1, r0, lsl #2]
    2ec0:	.word	0x000054e8
    2ec4:	.word	0x00003294
    2ec8:	.word	0x000032a0
    2ecc:	.word	0x00005500
    2ed0:	.word	0x000032b4
    2ed4:	.word	0x000032c4
    2ed8:	.word	0x000032f8
    2edc:	.word	0x00003394
    2ee0:	.word	0x00003528
    2ee4:	.word	0x00003590
    2ee8:	.word	0x000035f4
    2eec:	.word	0x00003640
    2ef0:	.word	0x00003670
    2ef4:	.word	0x00003688
    2ef8:	.word	0x0000420c
    2efc:	.word	0x00003474
    2f00:	.word	0x0000372c
    2f04:	.word	0x0000379c
    2f08:	.word	0x000037d4
    2f0c:	.word	0x000037e4
    2f10:	.word	0x00003820
    2f14:	.word	0x000038b8
    2f18:	.word	0x0000390c
    2f1c:	.word	0x000039b8
    2f20:	.word	0x000039ec
    2f24:	.word	0x00003a04
    2f28:	.word	0x00003a1c
    2f2c:	.word	0x00003a28
    2f30:	.word	0x00003a34
    2f34:	.word	0x00003a40
    2f38:	.word	0x00003a4c
    2f3c:	.word	0x00003a58
    2f40:	.word	0x00002fb8
    2f44:	.word	0x00002fb8
    2f48:	.word	0x00003a64
    2f4c:	.word	0x00003a7c
    2f50:	.word	0x00003084
    2f54:	.word	0x00003084
    2f58:	.word	0x00003130
    2f5c:	.word	0x00003130
    2f60:	.word	0x000053d8
    2f64:	.word	0x00003aa4
    2f68:	.word	0x00003190
    2f6c:	.word	0x00003190
    2f70:	.word	0x00003ad8
    2f74:	.word	0x00003b08
    2f78:	.word	0x00003b8c
    2f7c:	.word	0x00003b78
    2f80:	.word	0x00003b80
    2f84:	.word	0x00003b88
    2f88:	.word	0x00003c60
    2f8c:	.word	0x00003cd8
    2f90:	.word	0x00003d20
    2f94:	.word	0x00003d0c
    2f98:	.word	0x00003d14
    2f9c:	.word	0x00003d1c
    2fa0:	.word	0x00003d94
    2fa4:	.word	0x00003db8
    2fa8:	.word	0x00003ddc
    2fac:	.word	0x00003e00
    2fb0:	.word	0x00003204
    2fb4:	.word	0x00003204
    2fb8:	ldrb	r0, [r9, #128]	; 0x80
    2fbc:	cmp	r0, #0
    2fc0:	ldrne	r0, [r8, #140]	; 0x8c
    2fc4:	cmpne	r0, #0
    2fc8:	beq	4d00 <doProlog+0x1ffc>
    2fcc:	movw	r0, #0
    2fd0:	movw	r2, #0
    2fd4:	cmp	sl, #32
    2fd8:	movw	r1, #0
    2fdc:	ldr	r5, [fp, #-40]	; 0xffffffd8
    2fe0:	ldr	r6, [sp, #64]	; 0x40
    2fe4:	ldr	sl, [sp, #68]	; 0x44
    2fe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2fec:	movt	r0, #0
    2ff0:	movt	r2, #0
    2ff4:	movt	r1, #0
    2ff8:	moveq	r2, r0
    2ffc:	ldr	r0, [r8, #340]	; 0x154
    3000:	cmp	r0, #0
    3004:	moveq	r1, r2
    3008:	ldrb	r0, [r1]
    300c:	cmp	r0, #0
    3010:	beq	305c <doProlog+0x358>
    3014:	add	r4, r1, #1
    3018:	ldr	r2, [r8, #440]	; 0x1b8
    301c:	ldr	r1, [r8, #444]	; 0x1bc
    3020:	cmp	r1, r2
    3024:	bne	3044 <doProlog+0x340>
    3028:	mov	r0, sl
    302c:	bl	65e4 <poolGrow>
    3030:	cmp	r0, #0
    3034:	beq	56a0 <doProlog+0x299c>
    3038:	ldr	r1, [r6]
    303c:	ldrb	r0, [r4, #-1]
    3040:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3044:	add	r2, r1, #1
    3048:	str	r2, [r6]
    304c:	strb	r0, [r1]
    3050:	ldrb	r0, [r4], #1
    3054:	cmp	r0, #0
    3058:	bne	3018 <doProlog+0x314>
    305c:	ldr	r0, [r8, #448]	; 0x1c0
    3060:	mov	r9, #1
    3064:	cmp	r0, #0
    3068:	beq	5708 <doProlog+0x2a04>
    306c:	str	r3, [fp, #-32]	; 0xffffffe0
    3070:	ldr	r4, [fp, #12]
    3074:	ldr	r0, [r6]
    3078:	cmp	r0, #0
    307c:	bne	4c14 <doProlog+0x1f10>
    3080:	b	4c04 <doProlog+0x1f00>
    3084:	ldrb	r0, [r9, #128]	; 0x80
    3088:	cmp	r0, #0
    308c:	beq	4d00 <doProlog+0x1ffc>
    3090:	ldr	r4, [r8, #352]	; 0x160
    3094:	ldrb	r0, [r8, #361]	; 0x169
    3098:	ldrb	r9, [r8, #360]	; 0x168
    309c:	ldr	r6, [r8, #356]	; 0x164
    30a0:	ldr	r7, [r4, #12]
    30a4:	cmp	r0, #0
    30a8:	beq	30f0 <doProlog+0x3ec>
    30ac:	cmp	r7, #1
    30b0:	blt	30d8 <doProlog+0x3d4>
    30b4:	ldr	r0, [r4, #20]
    30b8:	mov	r1, #0
    30bc:	ldr	r2, [r0]
    30c0:	cmp	r2, r6
    30c4:	beq	47e0 <doProlog+0x1adc>
    30c8:	add	r1, r1, #1
    30cc:	add	r0, r0, #12
    30d0:	cmp	r1, r7
    30d4:	blt	30bc <doProlog+0x3b8>
    30d8:	ldr	r0, [r4, #8]
    30dc:	cmp	r0, #0
    30e0:	bne	30f0 <doProlog+0x3ec>
    30e4:	ldrb	r0, [r6, #9]
    30e8:	cmp	r0, #0
    30ec:	streq	r6, [r4, #8]
    30f0:	ldr	r0, [r4, #16]
    30f4:	cmp	r7, r0
    30f8:	bne	3fd0 <doProlog+0x12cc>
    30fc:	cmp	r7, #0
    3100:	beq	4794 <doProlog+0x1a90>
    3104:	ldr	r0, [r4, #20]
    3108:	ldr	r2, [r8, #16]
    310c:	add	r1, r7, r7, lsl #1
    3110:	lsl	r1, r1, #3
    3114:	blx	r2
    3118:	cmp	r0, #0
    311c:	beq	56a0 <doProlog+0x299c>
    3120:	lsl	r1, r7, #1
    3124:	str	r1, [r4, #16]
    3128:	str	r0, [r4, #20]
    312c:	b	47b4 <doProlog+0x1ab0>
    3130:	ldrb	r0, [r9, #128]	; 0x80
    3134:	cmp	r0, #0
    3138:	beq	4d00 <doProlog+0x1ffc>
    313c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3140:	ldr	r2, [fp, #12]
    3144:	ldrb	r4, [r8, #360]	; 0x168
    3148:	ldr	r0, [r1, #68]	; 0x44
    314c:	sub	r2, r2, r0
    3150:	str	r2, [sp]
    3154:	ldr	r2, [fp, #-68]	; 0xffffffbc
    3158:	str	r2, [sp, #4]
    315c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3160:	add	r3, r2, r0
    3164:	mov	r0, r8
    3168:	mov	r2, r4
    316c:	bl	b1fc <appendAttributeValue>
    3170:	cmp	r0, #0
    3174:	bne	56a8 <doProlog+0x29a4>
    3178:	ldr	r0, [sp, #72]	; 0x48
    317c:	cmp	r4, #0
    3180:	ldr	r0, [r0]
    3184:	beq	3ff0 <doProlog+0x12ec>
    3188:	ldr	r3, [fp, #-48]	; 0xffffffd0
    318c:	b	401c <doProlog+0x1318>
    3190:	ldrb	r0, [r9, #160]	; 0xa0
    3194:	cmp	r0, #0
    3198:	beq	4d00 <doProlog+0x1ffc>
    319c:	ldr	r0, [r8, #136]	; 0x88
    31a0:	cmp	r0, #0
    31a4:	beq	3fd8 <doProlog+0x12d4>
    31a8:	ldr	r1, [r8, #12]
    31ac:	mov	r0, #20
    31b0:	blx	r1
    31b4:	cmp	r0, #0
    31b8:	beq	56a0 <doProlog+0x299c>
    31bc:	mov	r2, r0
    31c0:	mov	r0, #1
    31c4:	cmp	sl, #41	; 0x29
    31c8:	vmov.i32	q8, #0	; 0x00000000
    31cc:	movweq	r0, #2
    31d0:	mov	r1, r2
    31d4:	str	r0, [r1], #4
    31d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    31dc:	vst1.32	{d16-d17}, [r1]
    31e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    31e4:	str	r1, [r0]
    31e8:	ldr	r1, [r8, #352]	; 0x160
    31ec:	ldr	r0, [r8, #4]
    31f0:	ldr	r3, [r8, #136]	; 0x88
    31f4:	ldr	r1, [r1]
    31f8:	blx	r3
    31fc:	mov	r6, #0
    3200:	b	3fdc <doProlog+0x12d8>
    3204:	mov	r6, #1
    3208:	strb	r6, [r9, #129]	; 0x81
    320c:	ldr	r0, [r8, #508]	; 0x1fc
    3210:	cmp	r0, #0
    3214:	beq	3e38 <doProlog+0x1134>
    3218:	ldr	r0, [fp, #-40]	; 0xffffffd8
    321c:	ldr	r6, [fp, #12]
    3220:	ldr	r4, [r0, #68]	; 0x44
    3224:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3228:	add	r0, r0, r4
    322c:	str	r0, [fp, #-32]	; 0xffffffe0
    3230:	ldr	r0, [sp, #72]	; 0x48
    3234:	ldr	r0, [r0]
    3238:	cmp	r0, #0
    323c:	bne	3250 <doProlog+0x54c>
    3240:	ldr	r0, [fp, #-68]	; 0xffffffbc
    3244:	bl	65e4 <poolGrow>
    3248:	cmp	r0, #0
    324c:	beq	56a0 <doProlog+0x299c>
    3250:	sub	r4, r6, r4
    3254:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3258:	ldr	r1, [r9, #88]	; 0x58
    325c:	ldr	r3, [sp, #72]	; 0x48
    3260:	mov	r2, r4
    3264:	ldr	r7, [r0, #60]	; 0x3c
    3268:	str	r1, [sp]
    326c:	sub	r1, fp, #32
    3270:	blx	r7
    3274:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3278:	cmp	r0, r4
    327c:	beq	3e68 <doProlog+0x1164>
    3280:	ldr	r0, [fp, #-68]	; 0xffffffbc
    3284:	bl	65e4 <poolGrow>
    3288:	cmp	r0, #0
    328c:	bne	3254 <doProlog+0x550>
    3290:	b	56a0 <doProlog+0x299c>
    3294:	cmp	r4, #14
    3298:	beq	53e4 <doProlog+0x26e0>
    329c:	b	4d00 <doProlog+0x1ffc>
    32a0:	ldr	r3, [fp, #12]
    32a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    32a8:	mov	r0, r8
    32ac:	mov	r1, #0
    32b0:	b	3dec <doProlog+0x10e8>
    32b4:	ldr	r0, [r8, #92]	; 0x5c
    32b8:	cmp	r0, #0
    32bc:	bne	53e4 <doProlog+0x26e0>
    32c0:	b	4d00 <doProlog+0x1ffc>
    32c4:	ldr	r0, [r8, #92]	; 0x5c
    32c8:	ldr	r6, [sp, #68]	; 0x44
    32cc:	cmp	r0, #0
    32d0:	beq	40f0 <doProlog+0x13ec>
    32d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    32d8:	ldr	r9, [sp, #64]	; 0x40
    32dc:	ldr	r4, [fp, #12]
    32e0:	ldr	r5, [fp, #-40]	; 0xffffffd8
    32e4:	str	r0, [fp, #-32]	; 0xffffffe0
    32e8:	ldr	r0, [r9]
    32ec:	cmp	r0, #0
    32f0:	bne	4c68 <doProlog+0x1f64>
    32f4:	b	4c58 <doProlog+0x1f54>
    32f8:	mov	r0, #0
    32fc:	mov	r6, #1
    3300:	ldr	sl, [sp, #68]	; 0x44
    3304:	strb	r0, [r8, #505]	; 0x1f9
    3308:	strb	r6, [r9, #129]	; 0x81
    330c:	ldr	r0, [r8, #92]	; 0x5c
    3310:	cmp	r0, #0
    3314:	beq	40f8 <doProlog+0x13f4>
    3318:	ldr	r5, [fp, #-40]	; 0xffffffd8
    331c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3320:	ldr	r6, [sp, #64]	; 0x40
    3324:	ldr	r7, [fp, #12]
    3328:	ldr	r4, [r5, #68]	; 0x44
    332c:	add	r0, r0, r4
    3330:	str	r0, [fp, #-32]	; 0xffffffe0
    3334:	ldr	r0, [r6]
    3338:	cmp	r0, #0
    333c:	bne	3350 <doProlog+0x64c>
    3340:	mov	r0, sl
    3344:	bl	65e4 <poolGrow>
    3348:	cmp	r0, #0
    334c:	beq	55a0 <doProlog+0x289c>
    3350:	sub	r4, r7, r4
    3354:	ldr	r0, [r8, #440]	; 0x1b8
    3358:	ldr	r7, [r5, #60]	; 0x3c
    335c:	sub	r1, fp, #32
    3360:	mov	r2, r4
    3364:	mov	r3, r6
    3368:	str	r0, [sp]
    336c:	mov	r0, r5
    3370:	blx	r7
    3374:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3378:	cmp	r0, r4
    337c:	beq	4148 <doProlog+0x1444>
    3380:	mov	r0, sl
    3384:	bl	65e4 <poolGrow>
    3388:	cmp	r0, #0
    338c:	bne	3354 <doProlog+0x650>
    3390:	b	55a0 <doProlog+0x289c>
    3394:	ldr	r1, [sp, #44]	; 0x2c
    3398:	movw	r2, #0
    339c:	mov	r0, #0
    33a0:	mov	r3, #36	; 0x24
    33a4:	strb	r0, [r8, #505]	; 0x1f9
    33a8:	movt	r2, #0
    33ac:	mov	r0, r8
    33b0:	bl	5d0c <lookup>
    33b4:	cmp	r0, #0
    33b8:	str	r0, [r8, #324]	; 0x144
    33bc:	beq	56a0 <doProlog+0x299c>
    33c0:	mov	r0, #1
    33c4:	strb	r0, [r9, #129]	; 0x81
    33c8:	ldr	r0, [r8, #92]	; 0x5c
    33cc:	cmp	r0, #0
    33d0:	beq	3474 <doProlog+0x770>
    33d4:	ldr	r5, [fp, #-40]	; 0xffffffd8
    33d8:	ldr	r7, [fp, #-44]	; 0xffffffd4
    33dc:	ldr	r2, [fp, #12]
    33e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    33e4:	ldr	r6, [r5, #56]	; 0x38
    33e8:	mov	r0, r5
    33ec:	mov	r1, r7
    33f0:	blx	r6
    33f4:	ldr	r6, [sp, #68]	; 0x44
    33f8:	cmp	r0, #0
    33fc:	beq	56b0 <doProlog+0x29ac>
    3400:	ldr	r4, [r5, #68]	; 0x44
    3404:	ldr	sl, [sp, #64]	; 0x40
    3408:	add	r0, r7, r4
    340c:	ldr	r7, [fp, #12]
    3410:	str	r0, [fp, #-32]	; 0xffffffe0
    3414:	ldr	r0, [sl]
    3418:	cmp	r0, #0
    341c:	bne	3430 <doProlog+0x72c>
    3420:	mov	r0, r6
    3424:	bl	65e4 <poolGrow>
    3428:	cmp	r0, #0
    342c:	beq	56a0 <doProlog+0x299c>
    3430:	sub	r4, r7, r4
    3434:	ldr	r0, [r8, #440]	; 0x1b8
    3438:	ldr	r7, [r5, #60]	; 0x3c
    343c:	sub	r1, fp, #32
    3440:	mov	r2, r4
    3444:	mov	r3, sl
    3448:	str	r0, [sp]
    344c:	mov	r0, r5
    3450:	blx	r7
    3454:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3458:	cmp	r0, r4
    345c:	beq	4300 <doProlog+0x15fc>
    3460:	mov	r0, r6
    3464:	bl	65e4 <poolGrow>
    3468:	cmp	r0, #0
    346c:	bne	3434 <doProlog+0x730>
    3470:	b	56a0 <doProlog+0x299c>
    3474:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3478:	ldr	r2, [fp, #12]
    347c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3480:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3484:	ldr	r7, [r5, #56]	; 0x38
    3488:	mov	r0, r5
    348c:	blx	r7
    3490:	mov	r6, #1
    3494:	cmp	r0, #0
    3498:	beq	56b0 <doProlog+0x29ac>
    349c:	ldrb	r0, [r9, #128]	; 0x80
    34a0:	cmp	r0, #0
    34a4:	ldrne	r0, [r8, #324]	; 0x144
    34a8:	cmpne	r0, #0
    34ac:	beq	4cf8 <doProlog+0x1ff4>
    34b0:	ldr	r4, [r5, #68]	; 0x44
    34b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    34b8:	ldr	sl, [sp, #72]	; 0x48
    34bc:	ldr	r7, [fp, #12]
    34c0:	add	r0, r0, r4
    34c4:	str	r0, [fp, #-32]	; 0xffffffe0
    34c8:	ldr	r0, [sl]
    34cc:	cmp	r0, #0
    34d0:	bne	34e4 <doProlog+0x7e0>
    34d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    34d8:	bl	65e4 <poolGrow>
    34dc:	cmp	r0, #0
    34e0:	beq	56a0 <doProlog+0x299c>
    34e4:	sub	r4, r7, r4
    34e8:	ldr	r0, [r9, #88]	; 0x58
    34ec:	ldr	r7, [r5, #60]	; 0x3c
    34f0:	sub	r1, fp, #32
    34f4:	mov	r2, r4
    34f8:	mov	r3, sl
    34fc:	str	r0, [sp]
    3500:	mov	r0, r5
    3504:	blx	r7
    3508:	ldr	r0, [fp, #-32]	; 0xffffffe0
    350c:	cmp	r0, r4
    3510:	beq	45bc <doProlog+0x18b8>
    3514:	ldr	r0, [fp, #-68]	; 0xffffffbc
    3518:	bl	65e4 <poolGrow>
    351c:	cmp	r0, #0
    3520:	bne	34e8 <doProlog+0x7e4>
    3524:	b	56a0 <doProlog+0x299c>
    3528:	ldr	r7, [r8, #92]	; 0x5c
    352c:	cmp	r7, #0
    3530:	beq	4d00 <doProlog+0x1ffc>
    3534:	add	r3, r8, #328	; 0x148
    3538:	ldr	r0, [r8, #4]
    353c:	mov	r6, #1
    3540:	ldm	r3, {r1, r2, r3}
    3544:	str	r6, [sp]
    3548:	blx	r7
    354c:	mov	r0, #0
    3550:	str	r0, [r8, #328]	; 0x148
    3554:	ldr	r0, [r8, #436]	; 0x1b4
    3558:	cmp	r0, #0
    355c:	beq	4b0c <doProlog+0x1e08>
    3560:	ldr	r1, [sp, #68]	; 0x44
    3564:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3568:	ldr	r1, [r1]
    356c:	cmp	r1, #0
    3570:	beq	4b18 <doProlog+0x1e14>
    3574:	mov	r2, r1
    3578:	ldr	r1, [r1]
    357c:	str	r0, [r2]
    3580:	mov	r0, r2
    3584:	cmp	r1, #0
    3588:	bne	3574 <doProlog+0x870>
    358c:	b	4b04 <doProlog+0x1e00>
    3590:	ldr	r1, [r8, #328]	; 0x148
    3594:	ldr	r4, [sp, #68]	; 0x44
    3598:	cmp	r1, #0
    359c:	beq	4108 <doProlog+0x1404>
    35a0:	ldr	r0, [r8, #4]
    35a4:	ldr	r7, [r8, #92]	; 0x5c
    35a8:	ldr	r2, [r8, #332]	; 0x14c
    35ac:	ldr	r3, [r8, #336]	; 0x150
    35b0:	mov	r6, #0
    35b4:	str	r6, [sp]
    35b8:	blx	r7
    35bc:	ldr	r0, [r8, #436]	; 0x1b4
    35c0:	cmp	r0, #0
    35c4:	beq	4370 <doProlog+0x166c>
    35c8:	ldr	r1, [r4]
    35cc:	cmp	r1, #0
    35d0:	beq	4378 <doProlog+0x1674>
    35d4:	mov	r2, r1
    35d8:	ldr	r1, [r1]
    35dc:	str	r0, [r2]
    35e0:	mov	r0, r2
    35e4:	cmp	r1, #0
    35e8:	bne	35d4 <doProlog+0x8d0>
    35ec:	str	r2, [r8, #436]	; 0x1b4
    35f0:	b	4378 <doProlog+0x1674>
    35f4:	ldr	r5, [fp, #-40]	; 0xffffffd8
    35f8:	ldr	r2, [fp, #12]
    35fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3600:	ldr	r3, [r5, #48]	; 0x30
    3604:	mov	r0, r5
    3608:	blx	r3
    360c:	cmp	r0, #0
    3610:	bne	4fb8 <doProlog+0x22b4>
    3614:	ldrb	r0, [r9, #128]	; 0x80
    3618:	cmp	r0, #0
    361c:	beq	4fa8 <doProlog+0x22a4>
    3620:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3624:	ldr	r6, [sp, #72]	; 0x48
    3628:	ldr	r4, [fp, #12]
    362c:	str	r0, [fp, #-32]	; 0xffffffe0
    3630:	ldr	r0, [r6]
    3634:	cmp	r0, #0
    3638:	bne	4ddc <doProlog+0x20d8>
    363c:	b	4dcc <doProlog+0x20c8>
    3640:	ldrb	r0, [r9, #128]	; 0x80
    3644:	cmp	r0, #0
    3648:	beq	4fa8 <doProlog+0x22a4>
    364c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3650:	ldr	r6, [sp, #72]	; 0x48
    3654:	ldr	r4, [fp, #12]
    3658:	ldr	r5, [fp, #-40]	; 0xffffffd8
    365c:	str	r0, [fp, #-32]	; 0xffffffe0
    3660:	ldr	r0, [r6]
    3664:	cmp	r0, #0
    3668:	bne	4ef4 <doProlog+0x21f0>
    366c:	b	4ee4 <doProlog+0x21e0>
    3670:	ldrb	r0, [r9, #128]	; 0x80
    3674:	cmp	r0, #0
    3678:	ldrne	r0, [r8, #144]	; 0x90
    367c:	cmpne	r0, #0
    3680:	beq	4d00 <doProlog+0x1ffc>
    3684:	b	53e4 <doProlog+0x26e0>
    3688:	ldrb	r0, [r9, #128]	; 0x80
    368c:	cmp	r0, #0
    3690:	beq	4d00 <doProlog+0x1ffc>
    3694:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3698:	ldr	r2, [fp, #-44]	; 0xffffffd4
    369c:	ldr	r3, [fp, #12]
    36a0:	ldr	r0, [r1, #68]	; 0x44
    36a4:	add	r2, r2, r0
    36a8:	sub	r3, r3, r0
    36ac:	mov	r0, r8
    36b0:	bl	679c <storeEntityValue>
    36b4:	mov	r5, r9
    36b8:	ldr	r1, [r8, #324]	; 0x144
    36bc:	mov	r9, r0
    36c0:	ldr	r0, [r5, #120]	; 0x78
    36c4:	cmp	r1, #0
    36c8:	beq	4484 <doProlog+0x1780>
    36cc:	str	r0, [r1, #4]
    36d0:	ldr	r2, [r5, #116]	; 0x74
    36d4:	sub	r0, r2, r0
    36d8:	str	r0, [r1, #8]
    36dc:	str	r2, [r5, #120]	; 0x78
    36e0:	ldr	r0, [r8, #144]	; 0x90
    36e4:	cmp	r0, #0
    36e8:	beq	4488 <doProlog+0x1784>
    36ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
    36f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    36f4:	str	r1, [r0]
    36f8:	ldr	r6, [r8, #324]	; 0x144
    36fc:	ldr	r0, [r8, #4]
    3700:	ldr	ip, [r8, #144]	; 0x90
    3704:	ldr	r4, [r8, #368]	; 0x170
    3708:	ldrb	r2, [r6, #33]	; 0x21
    370c:	ldm	r6, {r1, r3, r7}
    3710:	mov	r6, #0
    3714:	str	r7, [sp]
    3718:	stmib	sp, {r4, r6}
    371c:	str	r6, [sp, #12]
    3720:	str	r6, [sp, #16]
    3724:	blx	ip
    3728:	b	448c <doProlog+0x1788>
    372c:	ldrb	r0, [r9, #128]	; 0x80
    3730:	cmp	r0, #0
    3734:	beq	4d00 <doProlog+0x1ffc>
    3738:	ldr	r0, [r8, #324]	; 0x144
    373c:	cmp	r0, #0
    3740:	ldrne	r0, [r8, #144]	; 0x90
    3744:	cmpne	r0, #0
    3748:	beq	4d00 <doProlog+0x1ffc>
    374c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3750:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3754:	mov	r7, #0
    3758:	str	r1, [r0]
    375c:	ldr	r3, [r8, #324]	; 0x144
    3760:	ldr	r0, [r8, #4]
    3764:	ldr	ip, [r8, #144]	; 0x90
    3768:	ldrb	r2, [r3, #33]	; 0x21
    376c:	ldr	r1, [r3]
    3770:	ldr	r6, [r3, #16]
    3774:	ldr	r4, [r3, #20]
    3778:	ldr	r3, [r3, #24]
    377c:	str	r7, [sp]
    3780:	stmib	sp, {r4, r6}
    3784:	str	r3, [sp, #12]
    3788:	str	r7, [sp, #16]
    378c:	mov	r3, #0
    3790:	blx	ip
    3794:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3798:	b	53e8 <doProlog+0x26e4>
    379c:	ldrb	r0, [r9, #128]	; 0x80
    37a0:	cmp	r0, #0
    37a4:	ldrne	r0, [r8, #324]	; 0x144
    37a8:	cmpne	r0, #0
    37ac:	beq	4d00 <doProlog+0x1ffc>
    37b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    37b4:	ldr	r4, [fp, #12]
    37b8:	ldr	r5, [fp, #-40]	; 0xffffffd8
    37bc:	str	r0, [fp, #-32]	; 0xffffffe0
    37c0:	ldr	r0, [sp, #72]	; 0x48
    37c4:	ldr	r0, [r0]
    37c8:	cmp	r0, #0
    37cc:	bne	4ff8 <doProlog+0x22f4>
    37d0:	b	4fe8 <doProlog+0x22e4>
    37d4:	ldr	r0, [r8, #104]	; 0x68
    37d8:	cmp	r0, #0
    37dc:	bne	53e4 <doProlog+0x26e0>
    37e0:	b	4d00 <doProlog+0x1ffc>
    37e4:	mov	r0, #0
    37e8:	str	r0, [r8, #344]	; 0x158
    37ec:	str	r0, [r8, #348]	; 0x15c
    37f0:	ldr	r0, [r8, #104]	; 0x68
    37f4:	cmp	r0, #0
    37f8:	beq	4d00 <doProlog+0x1ffc>
    37fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3800:	ldr	r4, [fp, #12]
    3804:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3808:	str	r0, [fp, #-32]	; 0xffffffe0
    380c:	ldr	r0, [sp, #64]	; 0x40
    3810:	ldr	r0, [r0]
    3814:	cmp	r0, #0
    3818:	bne	5138 <doProlog+0x2434>
    381c:	b	5128 <doProlog+0x2424>
    3820:	ldr	r0, [r8, #344]	; 0x158
    3824:	mov	r6, #1
    3828:	cmp	r0, #0
    382c:	beq	4730 <doProlog+0x1a2c>
    3830:	ldr	r0, [r8, #104]	; 0x68
    3834:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3838:	ldr	sl, [sp, #64]	; 0x40
    383c:	cmp	r0, #0
    3840:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3844:	beq	4730 <doProlog+0x1a2c>
    3848:	ldr	r4, [r5, #68]	; 0x44
    384c:	ldr	r6, [fp, #12]
    3850:	add	r0, r0, r4
    3854:	str	r0, [fp, #-32]	; 0xffffffe0
    3858:	ldr	r0, [sl]
    385c:	cmp	r0, #0
    3860:	bne	3874 <doProlog+0xb70>
    3864:	ldr	r0, [sp, #68]	; 0x44
    3868:	bl	65e4 <poolGrow>
    386c:	cmp	r0, #0
    3870:	beq	56a0 <doProlog+0x299c>
    3874:	sub	r4, r6, r4
    3878:	ldr	r0, [r8, #440]	; 0x1b8
    387c:	ldr	r7, [r5, #60]	; 0x3c
    3880:	sub	r1, fp, #32
    3884:	mov	r2, r4
    3888:	mov	r3, sl
    388c:	str	r0, [sp]
    3890:	mov	r0, r5
    3894:	blx	r7
    3898:	ldr	r0, [fp, #-32]	; 0xffffffe0
    389c:	cmp	r0, r4
    38a0:	beq	46b8 <doProlog+0x19b4>
    38a4:	ldr	r0, [sp, #68]	; 0x44
    38a8:	bl	65e4 <poolGrow>
    38ac:	cmp	r0, #0
    38b0:	bne	3878 <doProlog+0xb74>
    38b4:	b	56a0 <doProlog+0x299c>
    38b8:	ldr	r0, [r8, #348]	; 0x15c
    38bc:	mov	r6, #1
    38c0:	cmp	r0, #0
    38c4:	beq	4110 <doProlog+0x140c>
    38c8:	ldr	r0, [r8, #104]	; 0x68
    38cc:	ldr	r4, [sp, #68]	; 0x44
    38d0:	cmp	r0, #0
    38d4:	beq	4114 <doProlog+0x1410>
    38d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    38dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    38e0:	mov	r6, #0
    38e4:	str	r1, [r0]
    38e8:	ldr	r3, [r8, #348]	; 0x15c
    38ec:	ldr	r2, [r8, #368]	; 0x170
    38f0:	ldr	r0, [r8, #4]
    38f4:	ldr	r7, [r8, #104]	; 0x68
    38f8:	ldr	r1, [r8, #344]	; 0x158
    38fc:	str	r3, [sp]
    3900:	mov	r3, #0
    3904:	blx	r7
    3908:	b	4114 <doProlog+0x1410>
    390c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3910:	ldr	r2, [fp, #12]
    3914:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3918:	ldr	r3, [fp, #-56]	; 0xffffffc8
    391c:	ldr	r7, [r0, #56]	; 0x38
    3920:	blx	r7
    3924:	cmp	r0, #0
    3928:	beq	56b0 <doProlog+0x29ac>
    392c:	ldr	r0, [r8, #344]	; 0x158
    3930:	cmp	r0, #0
    3934:	beq	4d00 <doProlog+0x1ffc>
    3938:	ldr	r5, [fp, #-40]	; 0xffffffd8
    393c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3940:	ldr	sl, [sp, #64]	; 0x40
    3944:	ldr	r7, [fp, #12]
    3948:	ldr	r6, [sp, #68]	; 0x44
    394c:	ldr	r4, [r5, #68]	; 0x44
    3950:	add	r0, r0, r4
    3954:	str	r0, [fp, #-32]	; 0xffffffe0
    3958:	ldr	r0, [sl]
    395c:	cmp	r0, #0
    3960:	bne	3974 <doProlog+0xc70>
    3964:	mov	r0, r6
    3968:	bl	65e4 <poolGrow>
    396c:	cmp	r0, #0
    3970:	beq	56a0 <doProlog+0x299c>
    3974:	sub	r4, r7, r4
    3978:	ldr	r0, [r8, #440]	; 0x1b8
    397c:	ldr	r7, [r5, #60]	; 0x3c
    3980:	sub	r1, fp, #32
    3984:	mov	r2, r4
    3988:	mov	r3, sl
    398c:	str	r0, [sp]
    3990:	mov	r0, r5
    3994:	blx	r7
    3998:	ldr	r0, [fp, #-32]	; 0xffffffe0
    399c:	cmp	r0, r4
    39a0:	beq	429c <doProlog+0x1598>
    39a4:	mov	r0, r6
    39a8:	bl	65e4 <poolGrow>
    39ac:	cmp	r0, #0
    39b0:	bne	3978 <doProlog+0xc74>
    39b4:	b	56a0 <doProlog+0x299c>
    39b8:	ldr	r3, [fp, #12]
    39bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    39c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    39c4:	mov	r0, r8
    39c8:	bl	62f8 <getAttributeId>
    39cc:	cmp	r0, #0
    39d0:	str	r0, [r8, #356]	; 0x164
    39d4:	beq	56a0 <doProlog+0x299c>
    39d8:	mov	r0, #360	; 0x168
    39dc:	mov	r1, #0
    39e0:	strh	r1, [r8, r0]
    39e4:	str	r1, [r8, #340]	; 0x154
    39e8:	b	3a64 <doProlog+0xd60>
    39ec:	movw	r0, #0
    39f0:	movt	r0, #0
    39f4:	str	r0, [r8, #340]	; 0x154
    39f8:	mov	r0, #1
    39fc:	strb	r0, [r8, #360]	; 0x168
    3a00:	b	3a64 <doProlog+0xd60>
    3a04:	movw	r0, #0
    3a08:	movt	r0, #0
    3a0c:	str	r0, [r8, #340]	; 0x154
    3a10:	mov	r0, #1
    3a14:	strb	r0, [r8, #361]	; 0x169
    3a18:	b	3a64 <doProlog+0xd60>
    3a1c:	movw	r0, #0
    3a20:	movt	r0, #0
    3a24:	b	3a60 <doProlog+0xd5c>
    3a28:	movw	r0, #0
    3a2c:	movt	r0, #0
    3a30:	b	3a60 <doProlog+0xd5c>
    3a34:	movw	r0, #0
    3a38:	movt	r0, #0
    3a3c:	b	3a60 <doProlog+0xd5c>
    3a40:	movw	r0, #0
    3a44:	movt	r0, #0
    3a48:	b	3a60 <doProlog+0xd5c>
    3a4c:	movw	r0, #0
    3a50:	movt	r0, #0
    3a54:	b	3a60 <doProlog+0xd5c>
    3a58:	movw	r0, #0
    3a5c:	movt	r0, #0
    3a60:	str	r0, [r8, #340]	; 0x154
    3a64:	ldrb	r0, [r9, #128]	; 0x80
    3a68:	cmp	r0, #0
    3a6c:	ldrne	r0, [r8, #140]	; 0x8c
    3a70:	cmpne	r0, #0
    3a74:	beq	4d00 <doProlog+0x1ffc>
    3a78:	b	53e4 <doProlog+0x26e0>
    3a7c:	ldr	r9, [r8, #364]	; 0x16c
    3a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3a84:	ldr	r6, [fp, #12]
    3a88:	str	r0, [fp, #-32]	; 0xffffffe0
    3a8c:	mov	r4, r9
    3a90:	add	sl, r9, #80	; 0x50
    3a94:	ldr	r0, [r4, #92]!	; 0x5c
    3a98:	cmp	r0, #0
    3a9c:	bne	5410 <doProlog+0x270c>
    3aa0:	b	5400 <doProlog+0x26fc>
    3aa4:	ldr	r0, [r8, #136]	; 0x88
    3aa8:	cmp	r0, #0
    3aac:	beq	4d00 <doProlog+0x1ffc>
    3ab0:	ldr	r9, [r8, #364]	; 0x16c
    3ab4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3ab8:	ldr	r6, [fp, #12]
    3abc:	str	r0, [fp, #-32]	; 0xffffffe0
    3ac0:	mov	r4, r9
    3ac4:	add	sl, r9, #80	; 0x50
    3ac8:	ldr	r0, [r4, #92]!	; 0x5c
    3acc:	cmp	r0, #0
    3ad0:	bne	51d4 <doProlog+0x24d0>
    3ad4:	b	51c4 <doProlog+0x24c0>
    3ad8:	ldrb	r0, [r9, #160]	; 0xa0
    3adc:	cmp	r0, #0
    3ae0:	beq	4d00 <doProlog+0x1ffc>
    3ae4:	ldr	r1, [r9, #180]	; 0xb4
    3ae8:	ldr	r2, [r9, #184]	; 0xb8
    3aec:	ldr	r0, [r9, #164]	; 0xa4
    3af0:	add	r1, r2, r1, lsl #2
    3af4:	mov	r2, #3
    3af8:	ldr	r1, [r1, #-4]
    3afc:	rsb	r1, r1, r1, lsl #3
    3b00:	str	r2, [r0, r1, lsl #2]
    3b04:	b	53d8 <doProlog+0x26d4>
    3b08:	ldr	r1, [r8, #268]	; 0x10c
    3b0c:	ldr	r0, [r8, #484]	; 0x1e4
    3b10:	cmp	r1, r0
    3b14:	bcc	4934 <doProlog+0x1c30>
    3b18:	cmp	r0, #0
    3b1c:	beq	4914 <doProlog+0x1c10>
    3b20:	lsl	r1, r0, #1
    3b24:	str	r1, [r8, #484]	; 0x1e4
    3b28:	ldr	r2, [r8, #16]
    3b2c:	ldr	r0, [r8, #480]	; 0x1e0
    3b30:	blx	r2
    3b34:	mov	r9, #1
    3b38:	cmp	r0, #0
    3b3c:	beq	5708 <doProlog+0x2a04>
    3b40:	str	r0, [r8, #480]	; 0x1e0
    3b44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3b48:	ldr	r0, [r0, #184]	; 0xb8
    3b4c:	cmp	r0, #0
    3b50:	beq	4934 <doProlog+0x1c30>
    3b54:	ldr	r1, [r8, #484]	; 0x1e4
    3b58:	ldr	r2, [r8, #16]
    3b5c:	lsl	r1, r1, #2
    3b60:	blx	r2
    3b64:	cmp	r0, #0
    3b68:	beq	5708 <doProlog+0x2a04>
    3b6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3b70:	str	r0, [r1, #184]	; 0xb8
    3b74:	b	4934 <doProlog+0x1c30>
    3b78:	mov	r7, #2
    3b7c:	b	3b8c <doProlog+0xe88>
    3b80:	mov	r7, #1
    3b84:	b	3b8c <doProlog+0xe88>
    3b88:	mov	r7, #3
    3b8c:	ldrb	r0, [r9, #160]	; 0xa0
    3b90:	cmp	r0, #0
    3b94:	beq	4d00 <doProlog+0x1ffc>
    3b98:	ldr	r2, [r9, #180]	; 0xb4
    3b9c:	ldr	r3, [r9, #184]	; 0xb8
    3ba0:	ldr	r0, [r8, #136]	; 0x88
    3ba4:	ldr	r1, [r9, #164]	; 0xa4
    3ba8:	subs	r2, r2, #1
    3bac:	str	r2, [r9, #180]	; 0xb4
    3bb0:	ldr	r2, [r3, r2, lsl #2]
    3bb4:	rsb	r2, r2, r2, lsl #3
    3bb8:	add	r1, r1, r2, lsl #2
    3bbc:	str	r7, [r1, #4]
    3bc0:	clz	r1, r0
    3bc4:	lsr	r6, r1, #5
    3bc8:	bne	4cf8 <doProlog+0x1ff4>
    3bcc:	cmp	r0, #0
    3bd0:	beq	3c54 <doProlog+0xf50>
    3bd4:	ldr	r7, [r8, #364]	; 0x16c
    3bd8:	ldr	r1, [r7, #176]	; 0xb0
    3bdc:	ldr	r0, [r7, #168]	; 0xa8
    3be0:	add	r1, r1, r1, lsl #2
    3be4:	add	r0, r0, r1, lsl #2
    3be8:	ldr	r1, [r8, #12]
    3bec:	blx	r1
    3bf0:	cmp	r0, #0
    3bf4:	beq	56a0 <doProlog+0x299c>
    3bf8:	mov	r4, r0
    3bfc:	ldr	r0, [r7, #176]	; 0xb0
    3c00:	sub	r3, fp, #32
    3c04:	add	r1, r4, #20
    3c08:	mov	r2, r4
    3c0c:	str	r1, [fp, #-32]	; 0xffffffe0
    3c10:	mov	r1, #0
    3c14:	add	r0, r0, r0, lsl #2
    3c18:	add	r0, r4, r0, lsl #2
    3c1c:	str	r0, [fp, #-36]	; 0xffffffdc
    3c20:	sub	r0, fp, #36	; 0x24
    3c24:	str	r0, [sp]
    3c28:	mov	r0, r8
    3c2c:	bl	baf0 <build_node>
    3c30:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3c34:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3c38:	mov	r2, r4
    3c3c:	str	r1, [r0]
    3c40:	ldr	r1, [r8, #352]	; 0x160
    3c44:	ldr	r0, [r8, #4]
    3c48:	ldr	r3, [r8, #136]	; 0x88
    3c4c:	ldr	r1, [r1]
    3c50:	blx	r3
    3c54:	mov	r0, #0
    3c58:	str	r0, [r9, #168]	; 0xa8
    3c5c:	b	3fe0 <doProlog+0x12dc>
    3c60:	ldr	r0, [r8, #268]	; 0x10c
    3c64:	ldr	r1, [r8, #480]	; 0x1e0
    3c68:	ldrb	r2, [r1, r0]
    3c6c:	cmp	r2, #44	; 0x2c
    3c70:	beq	5714 <doProlog+0x2a10>
    3c74:	mov	r6, #1
    3c78:	cmp	r2, #0
    3c7c:	bne	3cc4 <doProlog+0xfc0>
    3c80:	ldrb	r2, [r9, #160]	; 0xa0
    3c84:	cmp	r2, #0
    3c88:	beq	3cc4 <doProlog+0xfc0>
    3c8c:	ldr	r3, [r9, #180]	; 0xb4
    3c90:	ldr	r7, [r9, #184]	; 0xb8
    3c94:	ldr	r2, [r9, #164]	; 0xa4
    3c98:	add	r3, r7, r3, lsl #2
    3c9c:	ldr	r3, [r3, #-4]
    3ca0:	rsb	r3, r3, r3, lsl #3
    3ca4:	ldr	r3, [r2, r3, lsl #2]!
    3ca8:	cmp	r3, #3
    3cac:	beq	3cc4 <doProlog+0xfc0>
    3cb0:	mov	r3, #5
    3cb4:	str	r3, [r2]
    3cb8:	ldr	r2, [r8, #136]	; 0x88
    3cbc:	clz	r2, r2
    3cc0:	lsr	r6, r2, #5
    3cc4:	mov	r2, #124	; 0x7c
    3cc8:	strb	r2, [r1, r0]
    3ccc:	cmp	r6, #0
    3cd0:	bne	4d00 <doProlog+0x1ffc>
    3cd4:	b	53e4 <doProlog+0x26e0>
    3cd8:	ldr	r0, [r8, #268]	; 0x10c
    3cdc:	ldr	r1, [r8, #480]	; 0x1e0
    3ce0:	ldrb	r2, [r1, r0]
    3ce4:	cmp	r2, #124	; 0x7c
    3ce8:	beq	5714 <doProlog+0x2a10>
    3cec:	mov	r2, #44	; 0x2c
    3cf0:	strb	r2, [r1, r0]
    3cf4:	ldrb	r0, [r9, #160]	; 0xa0
    3cf8:	cmp	r0, #0
    3cfc:	ldrne	r0, [r8, #136]	; 0x88
    3d00:	cmpne	r0, #0
    3d04:	beq	4d00 <doProlog+0x1ffc>
    3d08:	b	53e4 <doProlog+0x26e0>
    3d0c:	mov	r7, #2
    3d10:	b	3d20 <doProlog+0x101c>
    3d14:	mov	r7, #1
    3d18:	b	3d20 <doProlog+0x101c>
    3d1c:	mov	r7, #3
    3d20:	ldrb	r0, [r9, #160]	; 0xa0
    3d24:	cmp	r0, #0
    3d28:	beq	4d00 <doProlog+0x1ffc>
    3d2c:	cmp	r7, #0
    3d30:	ldr	r4, [fp, #12]
    3d34:	ldrne	r0, [fp, #-40]	; 0xffffffd8
    3d38:	ldrne	r0, [r0, #68]	; 0x44
    3d3c:	subne	r4, r4, r0
    3d40:	mov	r0, r8
    3d44:	bl	70e4 <nextScaffoldPart>
    3d48:	mov	r9, #1
    3d4c:	cmp	r0, #0
    3d50:	blt	5708 <doProlog+0x2a04>
    3d54:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d58:	rsb	r2, r0, r0, lsl #3
    3d5c:	mov	r0, #4
    3d60:	str	r2, [sp, #40]	; 0x28
    3d64:	ldr	r1, [r1, #164]	; 0xa4
    3d68:	str	r0, [r1, r2, lsl #2]!
    3d6c:	str	r7, [r1, #4]
    3d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3d74:	ldr	sl, [r8, #364]	; 0x16c
    3d78:	str	r0, [fp, #-32]	; 0xffffffe0
    3d7c:	mov	r7, sl
    3d80:	add	r6, sl, #80	; 0x50
    3d84:	ldr	r0, [r7, #92]!	; 0x5c
    3d88:	cmp	r0, #0
    3d8c:	bne	52d4 <doProlog+0x25d0>
    3d90:	b	52c4 <doProlog+0x25c0>
    3d94:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3d98:	ldr	r3, [fp, #12]
    3d9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3da0:	mov	r0, r8
    3da4:	mov	r1, r5
    3da8:	bl	7380 <reportProcessingInstruction>
    3dac:	cmp	r0, #0
    3db0:	bne	53e8 <doProlog+0x26e4>
    3db4:	b	56a0 <doProlog+0x299c>
    3db8:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3dbc:	ldr	r3, [fp, #12]
    3dc0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3dc4:	mov	r0, r8
    3dc8:	mov	r1, r5
    3dcc:	bl	7700 <reportComment>
    3dd0:	cmp	r0, #0
    3dd4:	bne	53e8 <doProlog+0x26e4>
    3dd8:	b	56a0 <doProlog+0x299c>
    3ddc:	ldr	r3, [fp, #12]
    3de0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3de4:	mov	r0, r8
    3de8:	mov	r1, #1
    3dec:	bl	5760 <processXmlDecl>
    3df0:	cmp	r0, #0
    3df4:	bne	56a8 <doProlog+0x29a4>
    3df8:	ldr	r5, [r8, #152]	; 0x98
    3dfc:	b	53e8 <doProlog+0x26e4>
    3e00:	ldr	r3, [r8, #88]	; 0x58
    3e04:	ldr	r5, [fp, #-40]	; 0xffffffd8
    3e08:	cmp	r3, #0
    3e0c:	beq	4510 <doProlog+0x180c>
    3e10:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3e14:	ldr	r4, [fp, #12]
    3e18:	str	r1, [fp, #-32]	; 0xffffffe0
    3e1c:	ldrb	r0, [r5, #72]	; 0x48
    3e20:	cmp	r0, #0
    3e24:	beq	4498 <doProlog+0x1794>
    3e28:	ldr	r0, [r8, #4]
    3e2c:	sub	r2, r4, r1
    3e30:	blx	r3
    3e34:	b	4510 <doProlog+0x180c>
    3e38:	ldrb	r0, [r9, #130]	; 0x82
    3e3c:	strb	r0, [r9, #128]	; 0x80
    3e40:	cmp	r0, #0
    3e44:	bne	4cf8 <doProlog+0x1ff4>
    3e48:	ldr	r1, [r8, #116]	; 0x74
    3e4c:	cmp	r1, #0
    3e50:	beq	4cf8 <doProlog+0x1ff4>
    3e54:	ldr	r0, [r8, #4]
    3e58:	blx	r1
    3e5c:	cmp	r0, #0
    3e60:	bne	4cf8 <doProlog+0x1ff4>
    3e64:	b	568c <doProlog+0x2988>
    3e68:	ldr	r3, [sp, #52]	; 0x34
    3e6c:	mov	r9, #1
    3e70:	ldr	r0, [r3]
    3e74:	cmp	r0, #0
    3e78:	beq	5708 <doProlog+0x2a04>
    3e7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3e80:	ldr	r1, [r0, #88]	; 0x58
    3e84:	ldr	r0, [r0, #92]	; 0x5c
    3e88:	cmp	r0, r1
    3e8c:	bne	3eac <doProlog+0x11a8>
    3e90:	ldr	r0, [fp, #-68]	; 0xffffffbc
    3e94:	bl	65e4 <poolGrow>
    3e98:	cmp	r0, #0
    3e9c:	beq	5708 <doProlog+0x2a04>
    3ea0:	ldr	r0, [sp, #72]	; 0x48
    3ea4:	ldr	r3, [sp, #52]	; 0x34
    3ea8:	ldr	r0, [r0]
    3eac:	ldr	r2, [sp, #72]	; 0x48
    3eb0:	add	r1, r0, #1
    3eb4:	str	r1, [r2]
    3eb8:	mov	r1, #0
    3ebc:	strb	r1, [r0]
    3ec0:	ldr	r1, [r3]
    3ec4:	cmp	r1, #0
    3ec8:	beq	5708 <doProlog+0x2a04>
    3ecc:	ldr	r5, [fp, #-48]	; 0xffffffd0
    3ed0:	ldr	r0, [r5, #140]	; 0x8c
    3ed4:	cmp	r0, #0
    3ed8:	beq	3fc8 <doProlog+0x12c4>
    3edc:	ldrb	r2, [r1]
    3ee0:	ldr	r6, [r8, #512]	; 0x200
    3ee4:	mov	r7, #0
    3ee8:	cmp	r2, #0
    3eec:	str	r2, [sp, #40]	; 0x28
    3ef0:	beq	3f18 <doProlog+0x1214>
    3ef4:	add	r3, r1, #1
    3ef8:	movw	r4, #16963	; 0x4243
    3efc:	uxtb	r2, r2
    3f00:	movt	r4, #15
    3f04:	mul	r6, r6, r4
    3f08:	eor	r6, r6, r2
    3f0c:	ldrb	r2, [r3], #1
    3f10:	cmp	r2, #0
    3f14:	bne	3ef8 <doProlog+0x11f4>
    3f18:	ldr	r4, [r5, #132]	; 0x84
    3f1c:	sub	r2, r0, #1
    3f20:	and	r3, r6, r2
    3f24:	str	r4, [sp, #36]	; 0x24
    3f28:	ldr	r4, [r4, r3, lsl #2]
    3f2c:	cmp	r4, #0
    3f30:	beq	4650 <doProlog+0x194c>
    3f34:	rsb	r7, r0, #0
    3f38:	lsr	r2, r2, #2
    3f3c:	and	r7, r6, r7
    3f40:	mov	r6, #0
    3f44:	str	r2, [sp, #24]
    3f48:	str	r7, [sp, #28]
    3f4c:	add	r7, r1, #1
    3f50:	str	r7, [sp, #32]
    3f54:	ldr	r2, [r4]
    3f58:	ldr	lr, [sp, #40]	; 0x28
    3f5c:	ldrb	r7, [r2]
    3f60:	cmp	lr, r7
    3f64:	bne	3f88 <doProlog+0x1284>
    3f68:	ldr	r9, [sp, #32]
    3f6c:	add	ip, r2, #1
    3f70:	tst	lr, #255	; 0xff
    3f74:	beq	4648 <doProlog+0x1944>
    3f78:	ldrb	lr, [r9], #1
    3f7c:	ldrb	r2, [ip], #1
    3f80:	cmp	lr, r2
    3f84:	beq	3f70 <doProlog+0x126c>
    3f88:	ldr	r5, [fp, #-48]	; 0xffffffd0
    3f8c:	tst	r6, #255	; 0xff
    3f90:	bne	3fac <doProlog+0x12a8>
    3f94:	ldrb	r2, [r5, #136]	; 0x88
    3f98:	ldr	r7, [sp, #28]
    3f9c:	ldr	r6, [sp, #24]
    3fa0:	sub	r2, r2, #1
    3fa4:	and	r2, r6, r7, lsr r2
    3fa8:	orr	r6, r2, #1
    3fac:	uxtb	r2, r6
    3fb0:	subs	r3, r3, r2
    3fb4:	ldr	r2, [sp, #36]	; 0x24
    3fb8:	addcc	r3, r3, r0
    3fbc:	ldr	r4, [r2, r3, lsl #2]
    3fc0:	cmp	r4, #0
    3fc4:	bne	3f54 <doProlog+0x1250>
    3fc8:	mov	r7, #0
    3fcc:	b	4650 <doProlog+0x194c>
    3fd0:	ldr	r0, [r4, #20]
    3fd4:	b	47b4 <doProlog+0x1ab0>
    3fd8:	mov	r6, #1
    3fdc:	mov	r0, #0
    3fe0:	strb	r0, [r9, #160]	; 0xa0
    3fe4:	cmp	r6, #0
    3fe8:	bne	4d00 <doProlog+0x1ffc>
    3fec:	b	53e4 <doProlog+0x26e0>
    3ff0:	ldr	r1, [sp, #52]	; 0x34
    3ff4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3ff8:	ldr	r1, [r1]
    3ffc:	cmp	r1, r0
    4000:	beq	401c <doProlog+0x1318>
    4004:	mov	r1, r0
    4008:	ldrb	r2, [r1, #-1]!
    400c:	cmp	r2, #32
    4010:	ldreq	r0, [sp, #72]	; 0x48
    4014:	streq	r1, [r0]
    4018:	moveq	r0, r1
    401c:	ldr	r1, [r3, #88]	; 0x58
    4020:	cmp	r0, r1
    4024:	bne	4040 <doProlog+0x133c>
    4028:	ldr	r0, [fp, #-68]	; 0xffffffbc
    402c:	bl	65e4 <poolGrow>
    4030:	cmp	r0, #0
    4034:	beq	56a0 <doProlog+0x299c>
    4038:	ldr	r0, [sp, #72]	; 0x48
    403c:	ldr	r0, [r0]
    4040:	ldr	r2, [sp, #72]	; 0x48
    4044:	add	r1, r0, #1
    4048:	str	r1, [r2]
    404c:	mov	r1, #0
    4050:	strb	r1, [r0]
    4054:	ldr	r1, [sp, #52]	; 0x34
    4058:	ldr	r0, [r2]
    405c:	ldr	r5, [r1]
    4060:	str	r0, [r1]
    4064:	ldr	r6, [r8, #352]	; 0x160
    4068:	ldrb	r4, [r8, #360]	; 0x168
    406c:	ldr	r7, [r8, #356]	; 0x164
    4070:	cmp	r5, #0
    4074:	ldr	r9, [r6, #12]
    4078:	beq	40a8 <doProlog+0x13a4>
    407c:	cmp	r9, #1
    4080:	blt	40a8 <doProlog+0x13a4>
    4084:	ldr	r0, [r6, #20]
    4088:	mov	r1, #0
    408c:	ldr	r2, [r0]
    4090:	cmp	r2, r7
    4094:	beq	49d8 <doProlog+0x1cd4>
    4098:	add	r1, r1, #1
    409c:	add	r0, r0, #12
    40a0:	cmp	r1, r9
    40a4:	blt	408c <doProlog+0x1388>
    40a8:	ldr	r0, [r6, #16]
    40ac:	cmp	r9, r0
    40b0:	bne	40e8 <doProlog+0x13e4>
    40b4:	cmp	r9, #0
    40b8:	beq	4990 <doProlog+0x1c8c>
    40bc:	ldr	r0, [r6, #20]
    40c0:	ldr	r2, [r8, #16]
    40c4:	add	r1, r9, r9, lsl #1
    40c8:	lsl	r1, r1, #3
    40cc:	blx	r2
    40d0:	cmp	r0, #0
    40d4:	beq	56a0 <doProlog+0x299c>
    40d8:	lsl	r1, r9, #1
    40dc:	str	r1, [r6, #16]
    40e0:	str	r0, [r6, #20]
    40e4:	b	49b0 <doProlog+0x1cac>
    40e8:	ldr	r0, [r6, #20]
    40ec:	b	49b0 <doProlog+0x1cac>
    40f0:	mov	r6, #1
    40f4:	b	4cf0 <doProlog+0x1fec>
    40f8:	movw	r0, #0
    40fc:	movt	r0, #0
    4100:	str	r0, [r8, #332]	; 0x14c
    4104:	b	41a0 <doProlog+0x149c>
    4108:	mov	r6, #1
    410c:	b	438c <doProlog+0x1688>
    4110:	ldr	r4, [sp, #68]	; 0x44
    4114:	ldr	r0, [r8, #436]	; 0x1b4
    4118:	cmp	r0, #0
    411c:	beq	476c <doProlog+0x1a68>
    4120:	ldr	r1, [r4]
    4124:	cmp	r1, #0
    4128:	beq	4774 <doProlog+0x1a70>
    412c:	mov	r2, r1
    4130:	ldr	r1, [r1]
    4134:	str	r0, [r2]
    4138:	mov	r0, r2
    413c:	cmp	r1, #0
    4140:	bne	412c <doProlog+0x1428>
    4144:	b	4764 <doProlog+0x1a60>
    4148:	ldr	r0, [r8, #448]	; 0x1c0
    414c:	cmp	r0, #0
    4150:	beq	55a0 <doProlog+0x289c>
    4154:	ldr	r1, [r8, #440]	; 0x1b8
    4158:	ldr	r0, [r8, #444]	; 0x1bc
    415c:	cmp	r0, r1
    4160:	bne	4178 <doProlog+0x1474>
    4164:	mov	r0, sl
    4168:	bl	65e4 <poolGrow>
    416c:	cmp	r0, #0
    4170:	beq	55a0 <doProlog+0x289c>
    4174:	ldr	r0, [r6]
    4178:	add	r1, r0, #1
    417c:	mov	r6, #0
    4180:	str	r1, [r8, #444]	; 0x1bc
    4184:	strb	r6, [r0]
    4188:	ldr	r0, [r8, #448]	; 0x1c0
    418c:	cmp	r0, #0
    4190:	str	r0, [r8, #332]	; 0x14c
    4194:	beq	56a0 <doProlog+0x299c>
    4198:	ldr	r0, [r8, #444]	; 0x1bc
    419c:	str	r0, [r8, #448]	; 0x1c0
    41a0:	ldrb	r0, [r9, #130]	; 0x82
    41a4:	cmp	r0, #0
    41a8:	bne	41d4 <doProlog+0x14d0>
    41ac:	ldr	r0, [r8, #508]	; 0x1fc
    41b0:	cmp	r0, #0
    41b4:	bne	41d4 <doProlog+0x14d0>
    41b8:	ldr	r1, [r8, #116]	; 0x74
    41bc:	cmp	r1, #0
    41c0:	beq	41d4 <doProlog+0x14d0>
    41c4:	ldr	r0, [r8, #4]
    41c8:	blx	r1
    41cc:	cmp	r0, #0
    41d0:	beq	568c <doProlog+0x2988>
    41d4:	ldr	r0, [r8, #324]	; 0x144
    41d8:	cmp	r0, #0
    41dc:	bne	420c <doProlog+0x1508>
    41e0:	ldr	r1, [sp, #44]	; 0x2c
    41e4:	movw	r2, #0
    41e8:	mov	r0, r8
    41ec:	mov	r3, #36	; 0x24
    41f0:	movt	r2, #0
    41f4:	bl	5d0c <lookup>
    41f8:	cmp	r0, #0
    41fc:	str	r0, [r8, #324]	; 0x144
    4200:	beq	56a0 <doProlog+0x299c>
    4204:	mov	r1, #0
    4208:	str	r1, [r0, #24]
    420c:	ldrb	r0, [r9, #128]	; 0x80
    4210:	cmp	r0, #0
    4214:	ldrne	r0, [r8, #324]	; 0x144
    4218:	cmpne	r0, #0
    421c:	beq	4cf8 <doProlog+0x1ff4>
    4220:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4224:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4228:	ldr	sl, [sp, #72]	; 0x48
    422c:	ldr	r7, [fp, #12]
    4230:	ldr	r4, [r5, #68]	; 0x44
    4234:	add	r0, r0, r4
    4238:	str	r0, [fp, #-32]	; 0xffffffe0
    423c:	ldr	r0, [sl]
    4240:	cmp	r0, #0
    4244:	bne	4258 <doProlog+0x1554>
    4248:	ldr	r0, [fp, #-68]	; 0xffffffbc
    424c:	bl	65e4 <poolGrow>
    4250:	cmp	r0, #0
    4254:	beq	55b0 <doProlog+0x28ac>
    4258:	sub	r4, r7, r4
    425c:	ldr	r0, [r9, #88]	; 0x58
    4260:	ldr	r7, [r5, #60]	; 0x3c
    4264:	sub	r1, fp, #32
    4268:	mov	r2, r4
    426c:	mov	r3, sl
    4270:	str	r0, [sp]
    4274:	mov	r0, r5
    4278:	blx	r7
    427c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4280:	cmp	r0, r4
    4284:	beq	454c <doProlog+0x1848>
    4288:	ldr	r0, [fp, #-68]	; 0xffffffbc
    428c:	bl	65e4 <poolGrow>
    4290:	cmp	r0, #0
    4294:	bne	425c <doProlog+0x1558>
    4298:	b	55b0 <doProlog+0x28ac>
    429c:	ldr	r0, [r8, #448]	; 0x1c0
    42a0:	mov	r9, #1
    42a4:	cmp	r0, #0
    42a8:	beq	5708 <doProlog+0x2a04>
    42ac:	ldr	r1, [r8, #440]	; 0x1b8
    42b0:	ldr	r0, [r8, #444]	; 0x1bc
    42b4:	cmp	r0, r1
    42b8:	bne	42d0 <doProlog+0x15cc>
    42bc:	mov	r0, r6
    42c0:	bl	65e4 <poolGrow>
    42c4:	cmp	r0, #0
    42c8:	beq	5708 <doProlog+0x2a04>
    42cc:	ldr	r0, [sl]
    42d0:	add	r1, r0, #1
    42d4:	str	r1, [r8, #444]	; 0x1bc
    42d8:	mov	r1, #0
    42dc:	strb	r1, [r0]
    42e0:	ldr	r4, [r8, #448]	; 0x1c0
    42e4:	cmp	r4, #0
    42e8:	beq	5708 <doProlog+0x2a04>
    42ec:	mov	r0, r4
    42f0:	bl	60ec <normalizePublicId>
    42f4:	str	r4, [r8, #348]	; 0x15c
    42f8:	ldr	r5, [fp, #-40]	; 0xffffffd8
    42fc:	b	51b8 <doProlog+0x24b4>
    4300:	ldr	r0, [r8, #448]	; 0x1c0
    4304:	mov	r9, #1
    4308:	cmp	r0, #0
    430c:	beq	5708 <doProlog+0x2a04>
    4310:	ldr	r1, [r8, #440]	; 0x1b8
    4314:	ldr	r0, [r8, #444]	; 0x1bc
    4318:	cmp	r0, r1
    431c:	bne	4334 <doProlog+0x1630>
    4320:	mov	r0, r6
    4324:	bl	65e4 <poolGrow>
    4328:	cmp	r0, #0
    432c:	beq	5708 <doProlog+0x2a04>
    4330:	ldr	r0, [sl]
    4334:	add	r1, r0, #1
    4338:	mov	r6, #0
    433c:	str	r1, [r8, #444]	; 0x1bc
    4340:	strb	r6, [r0]
    4344:	ldr	r4, [r8, #448]	; 0x1c0
    4348:	cmp	r4, #0
    434c:	beq	5708 <doProlog+0x2a04>
    4350:	mov	r0, r4
    4354:	bl	60ec <normalizePublicId>
    4358:	str	r4, [r8, #336]	; 0x150
    435c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    4360:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4364:	ldr	r0, [r8, #444]	; 0x1bc
    4368:	str	r0, [r8, #448]	; 0x1c0
    436c:	b	349c <doProlog+0x798>
    4370:	ldr	r0, [r8, #432]	; 0x1b0
    4374:	str	r0, [r8, #436]	; 0x1b4
    4378:	mov	r6, #0
    437c:	str	r6, [r8, #432]	; 0x1b0
    4380:	str	r6, [r8, #440]	; 0x1b8
    4384:	str	r6, [r8, #444]	; 0x1bc
    4388:	str	r6, [r8, #448]	; 0x1c0
    438c:	ldr	r0, [r8, #332]	; 0x14c
    4390:	cmp	r0, #0
    4394:	bne	43a4 <doProlog+0x16a0>
    4398:	ldrb	r0, [r8, #505]	; 0x1f9
    439c:	cmp	r0, #0
    43a0:	beq	43cc <doProlog+0x16c8>
    43a4:	mov	r0, #1
    43a8:	ldrb	r7, [r9, #129]	; 0x81
    43ac:	strb	r0, [r9, #129]	; 0x81
    43b0:	ldr	r0, [r8, #508]	; 0x1fc
    43b4:	cmp	r0, #0
    43b8:	ldrne	r0, [r8, #120]	; 0x78
    43bc:	cmpne	r0, #0
    43c0:	bne	43e8 <doProlog+0x16e4>
    43c4:	mov	r0, #0
    43c8:	strb	r0, [r8, #505]	; 0x1f9
    43cc:	ldr	r1, [r8, #96]	; 0x60
    43d0:	cmp	r1, #0
    43d4:	beq	4cf8 <doProlog+0x1ff4>
    43d8:	ldr	r0, [r8, #4]
    43dc:	blx	r1
    43e0:	ldr	r5, [fp, #-40]	; 0xffffffd8
    43e4:	b	53e8 <doProlog+0x26e4>
    43e8:	ldr	r1, [sp, #44]	; 0x2c
    43ec:	movw	r2, #0
    43f0:	mov	r0, r8
    43f4:	mov	r3, #36	; 0x24
    43f8:	movt	r2, #0
    43fc:	bl	5d0c <lookup>
    4400:	cmp	r0, #0
    4404:	beq	56a0 <doProlog+0x299c>
    4408:	ldrb	r1, [r8, #505]	; 0x1f9
    440c:	cmp	r1, #0
    4410:	mov	r1, #0
    4414:	ldrne	r2, [r8, #368]	; 0x170
    4418:	strne	r2, [r0, #20]
    441c:	ldreq	r2, [r0, #20]
    4420:	strb	r1, [r9, #131]	; 0x83
    4424:	ldr	r4, [r8, #120]	; 0x78
    4428:	ldr	r1, [r8, #124]	; 0x7c
    442c:	ldr	r3, [r0, #16]
    4430:	ldr	r0, [r0, #24]
    4434:	str	r0, [sp]
    4438:	mov	r0, r1
    443c:	mov	r1, #0
    4440:	blx	r4
    4444:	cmp	r0, #0
    4448:	beq	571c <doProlog+0x2a18>
    444c:	ldrb	r0, [r9, #131]	; 0x83
    4450:	cmp	r0, #0
    4454:	beq	4be8 <doProlog+0x1ee4>
    4458:	ldrb	r0, [r9, #130]	; 0x82
    445c:	cmp	r0, #0
    4460:	bne	43c4 <doProlog+0x16c0>
    4464:	ldr	r1, [r8, #116]	; 0x74
    4468:	cmp	r1, #0
    446c:	beq	43c4 <doProlog+0x16c0>
    4470:	ldr	r0, [r8, #4]
    4474:	blx	r1
    4478:	cmp	r0, #0
    447c:	bne	43c4 <doProlog+0x16c0>
    4480:	b	568c <doProlog+0x2988>
    4484:	str	r0, [r5, #116]	; 0x74
    4488:	mov	r6, #1
    448c:	cmp	r9, #0
    4490:	beq	4cf8 <doProlog+0x1ff4>
    4494:	b	5708 <doProlog+0x2a04>
    4498:	ldr	r0, [r8, #152]	; 0x98
    449c:	ldr	r9, [sp, #56]	; 0x38
    44a0:	ldr	r7, [sp, #60]	; 0x3c
    44a4:	cmp	r0, r5
    44a8:	ldrne	r0, [sp, #48]	; 0x30
    44ac:	ldrne	r9, [r0]
    44b0:	addne	r7, r9, #4
    44b4:	ldr	r0, [r8, #52]	; 0x34
    44b8:	ldr	r1, [r8, #56]	; 0x38
    44bc:	sub	r3, fp, #36	; 0x24
    44c0:	mov	r2, r4
    44c4:	str	r0, [fp, #-36]	; 0xffffffdc
    44c8:	mov	r0, r5
    44cc:	ldr	r6, [r5, #60]	; 0x3c
    44d0:	str	r1, [sp]
    44d4:	sub	r1, fp, #32
    44d8:	blx	r6
    44dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    44e0:	str	r0, [r7]
    44e4:	ldr	r1, [r8, #52]	; 0x34
    44e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    44ec:	ldr	r0, [r8, #4]
    44f0:	ldr	r3, [r8, #88]	; 0x58
    44f4:	sub	r2, r2, r1
    44f8:	blx	r3
    44fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4500:	str	r0, [r9]
    4504:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4508:	cmp	r0, r4
    450c:	bne	44b4 <doProlog+0x17b0>
    4510:	ldr	r0, [fp, #16]
    4514:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4518:	add	r2, fp, #12
    451c:	mov	r1, r5
    4520:	str	r0, [sp]
    4524:	ldr	r0, [fp, #20]
    4528:	str	r0, [sp, #4]
    452c:	mov	r0, r8
    4530:	bl	6dcc <doIgnoreSection>
    4534:	cmp	r0, #0
    4538:	bne	56a8 <doProlog+0x29a4>
    453c:	ldr	r0, [fp, #12]
    4540:	cmp	r0, #0
    4544:	bne	53e8 <doProlog+0x26e4>
    4548:	b	572c <doProlog+0x2a28>
    454c:	ldr	r2, [sp, #52]	; 0x34
    4550:	ldr	r0, [r2]
    4554:	cmp	r0, #0
    4558:	beq	55b0 <doProlog+0x28ac>
    455c:	ldr	r1, [r9, #88]	; 0x58
    4560:	ldr	r0, [r9, #92]	; 0x5c
    4564:	cmp	r0, r1
    4568:	bne	4584 <doProlog+0x1880>
    456c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4570:	bl	65e4 <poolGrow>
    4574:	ldr	r2, [sp, #52]	; 0x34
    4578:	cmp	r0, #0
    457c:	beq	55b0 <doProlog+0x28ac>
    4580:	ldr	r0, [sl]
    4584:	add	r1, r0, #1
    4588:	str	r1, [sl]
    458c:	mov	r1, #0
    4590:	strb	r1, [r0]
    4594:	ldr	r1, [r2]
    4598:	ldr	r0, [r8, #324]	; 0x144
    459c:	cmp	r1, #0
    45a0:	str	r1, [r0, #16]
    45a4:	beq	56a0 <doProlog+0x299c>
    45a8:	ldr	r1, [r8, #368]	; 0x170
    45ac:	str	r1, [r0, #20]
    45b0:	ldr	r0, [sl]
    45b4:	str	r0, [r2]
    45b8:	b	4638 <doProlog+0x1934>
    45bc:	ldr	r2, [sp, #52]	; 0x34
    45c0:	mov	r9, #1
    45c4:	ldr	r0, [r2]
    45c8:	cmp	r0, #0
    45cc:	beq	5708 <doProlog+0x2a04>
    45d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    45d4:	ldr	r1, [r0, #88]	; 0x58
    45d8:	ldr	r0, [r0, #92]	; 0x5c
    45dc:	cmp	r0, r1
    45e0:	bne	45fc <doProlog+0x18f8>
    45e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    45e8:	bl	65e4 <poolGrow>
    45ec:	cmp	r0, #0
    45f0:	beq	5708 <doProlog+0x2a04>
    45f4:	ldr	r0, [sl]
    45f8:	ldr	r2, [sp, #52]	; 0x34
    45fc:	add	r1, r0, #1
    4600:	str	r1, [sl]
    4604:	mov	r1, #0
    4608:	strb	r1, [r0]
    460c:	ldr	r4, [r2]
    4610:	cmp	r4, #0
    4614:	beq	5708 <doProlog+0x2a04>
    4618:	mov	r0, r4
    461c:	bl	60ec <normalizePublicId>
    4620:	ldr	r0, [r8, #324]	; 0x144
    4624:	ldr	r1, [sp, #52]	; 0x34
    4628:	str	r4, [r0, #24]
    462c:	ldr	r0, [sp, #72]	; 0x48
    4630:	ldr	r0, [r0]
    4634:	str	r0, [r1]
    4638:	ldr	r0, [r8, #144]	; 0x90
    463c:	cmp	r0, #0
    4640:	bne	53e4 <doProlog+0x26e0>
    4644:	b	4cf8 <doProlog+0x1ff4>
    4648:	ldr	r5, [fp, #-48]	; 0xffffffd0
    464c:	mov	r7, r4
    4650:	ldr	r0, [sp, #72]	; 0x48
    4654:	str	r1, [r0]
    4658:	ldr	r0, [r8, #280]	; 0x118
    465c:	cmp	r0, #0
    4660:	beq	4680 <doProlog+0x197c>
    4664:	ldrb	r0, [r5, #130]	; 0x82
    4668:	cmp	r0, #0
    466c:	ldrbeq	r0, [r5, #129]	; 0x81
    4670:	ldrne	r0, [sp, #48]	; 0x30
    4674:	ldrne	r0, [r0]
    4678:	cmp	r0, #0
    467c:	beq	4b30 <doProlog+0x1e2c>
    4680:	cmp	r7, #0
    4684:	bne	4b44 <doProlog+0x1e40>
    4688:	ldrb	r0, [r5, #130]	; 0x82
    468c:	cmp	sl, #60	; 0x3c
    4690:	strb	r0, [r5, #128]	; 0x80
    4694:	bne	4d00 <doProlog+0x1ffc>
    4698:	ldr	r3, [r8, #128]	; 0x80
    469c:	cmp	r3, #0
    46a0:	beq	4d00 <doProlog+0x1ffc>
    46a4:	ldr	r0, [r8, #4]
    46a8:	mov	r2, #1
    46ac:	blx	r3
    46b0:	ldr	r5, [fp, #-40]	; 0xffffffd8
    46b4:	b	53e8 <doProlog+0x26e4>
    46b8:	ldr	r0, [r8, #448]	; 0x1c0
    46bc:	mov	r9, #1
    46c0:	cmp	r0, #0
    46c4:	beq	5708 <doProlog+0x2a04>
    46c8:	ldr	r1, [r8, #440]	; 0x1b8
    46cc:	ldr	r0, [r8, #444]	; 0x1bc
    46d0:	cmp	r0, r1
    46d4:	bne	46ec <doProlog+0x19e8>
    46d8:	ldr	r0, [sp, #68]	; 0x44
    46dc:	bl	65e4 <poolGrow>
    46e0:	cmp	r0, #0
    46e4:	beq	5708 <doProlog+0x2a04>
    46e8:	ldr	r0, [sl]
    46ec:	add	r1, r0, #1
    46f0:	mov	r6, #0
    46f4:	str	r1, [r8, #444]	; 0x1bc
    46f8:	strb	r6, [r0]
    46fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4700:	ldr	r3, [r8, #448]	; 0x1c0
    4704:	cmp	r3, #0
    4708:	beq	5708 <doProlog+0x2a04>
    470c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4710:	str	r1, [r0]
    4714:	ldr	r2, [r8, #368]	; 0x170
    4718:	ldr	r0, [r8, #4]
    471c:	ldr	r7, [r8, #104]	; 0x68
    4720:	ldr	r1, [r8, #344]	; 0x158
    4724:	ldr	r4, [r8, #348]	; 0x15c
    4728:	str	r4, [sp]
    472c:	blx	r7
    4730:	ldr	r0, [r8, #436]	; 0x1b4
    4734:	cmp	r0, #0
    4738:	beq	476c <doProlog+0x1a68>
    473c:	ldr	r1, [sp, #68]	; 0x44
    4740:	ldr	r1, [r1]
    4744:	cmp	r1, #0
    4748:	beq	4774 <doProlog+0x1a70>
    474c:	mov	r2, r1
    4750:	ldr	r1, [r1]
    4754:	str	r0, [r2]
    4758:	mov	r0, r2
    475c:	cmp	r1, #0
    4760:	bne	474c <doProlog+0x1a48>
    4764:	str	r2, [r8, #436]	; 0x1b4
    4768:	b	4774 <doProlog+0x1a70>
    476c:	ldr	r0, [r8, #432]	; 0x1b0
    4770:	str	r0, [r8, #436]	; 0x1b4
    4774:	mov	r0, #0
    4778:	str	r0, [r8, #432]	; 0x1b0
    477c:	str	r0, [r8, #440]	; 0x1b8
    4780:	str	r0, [r8, #444]	; 0x1bc
    4784:	str	r0, [r8, #448]	; 0x1c0
    4788:	cmp	r6, #0
    478c:	bne	4d00 <doProlog+0x1ffc>
    4790:	b	53e4 <doProlog+0x26e0>
    4794:	mov	r0, #8
    4798:	str	r0, [r4, #16]
    479c:	mov	r0, #96	; 0x60
    47a0:	ldr	r1, [r8, #12]
    47a4:	blx	r1
    47a8:	cmp	r0, #0
    47ac:	str	r0, [r4, #20]
    47b0:	beq	56a0 <doProlog+0x299c>
    47b4:	ldr	r1, [r4, #12]
    47b8:	cmp	r9, #0
    47bc:	add	r2, r1, r1, lsl #1
    47c0:	str	r6, [r0, r2, lsl #2]!
    47c4:	mov	r2, #0
    47c8:	str	r2, [r0, #8]
    47cc:	strb	r9, [r0, #4]
    47d0:	moveq	r0, #1
    47d4:	strbeq	r0, [r6, #8]
    47d8:	add	r0, r1, #1
    47dc:	str	r0, [r4, #12]
    47e0:	ldr	r0, [r8, #140]	; 0x8c
    47e4:	cmp	r0, #0
    47e8:	ldrne	r0, [r8, #340]	; 0x154
    47ec:	cmpne	r0, #0
    47f0:	beq	4d00 <doProlog+0x1ffc>
    47f4:	ldrb	r1, [r0]
    47f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    47fc:	cmp	r1, #40	; 0x28
    4800:	beq	4814 <doProlog+0x1b10>
    4804:	cmp	r1, #78	; 0x4e
    4808:	ldrbeq	r0, [r0, #1]
    480c:	cmpeq	r0, #79	; 0x4f
    4810:	bne	489c <doProlog+0x1b98>
    4814:	ldr	r1, [r8, #440]	; 0x1b8
    4818:	ldr	r0, [r8, #444]	; 0x1bc
    481c:	cmp	r0, r1
    4820:	bne	4840 <doProlog+0x1b3c>
    4824:	ldr	r0, [sp, #68]	; 0x44
    4828:	bl	65e4 <poolGrow>
    482c:	cmp	r0, #0
    4830:	beq	56a0 <doProlog+0x299c>
    4834:	ldr	r0, [sp, #64]	; 0x40
    4838:	ldr	r2, [fp, #-44]	; 0xffffffd4
    483c:	ldr	r0, [r0]
    4840:	add	r1, r0, #1
    4844:	str	r1, [r8, #444]	; 0x1bc
    4848:	mov	r1, #41	; 0x29
    484c:	strb	r1, [r0]
    4850:	ldr	r1, [r8, #440]	; 0x1b8
    4854:	ldr	r0, [r8, #444]	; 0x1bc
    4858:	cmp	r0, r1
    485c:	bne	487c <doProlog+0x1b78>
    4860:	ldr	r0, [sp, #68]	; 0x44
    4864:	bl	65e4 <poolGrow>
    4868:	cmp	r0, #0
    486c:	beq	56a0 <doProlog+0x299c>
    4870:	ldr	r0, [sp, #64]	; 0x40
    4874:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4878:	ldr	r0, [r0]
    487c:	add	r1, r0, #1
    4880:	str	r1, [r8, #444]	; 0x1bc
    4884:	mov	r1, #0
    4888:	strb	r1, [r0]
    488c:	ldr	r0, [r8, #444]	; 0x1bc
    4890:	ldr	r1, [r8, #448]	; 0x1c0
    4894:	str	r1, [r8, #340]	; 0x154
    4898:	str	r0, [r8, #448]	; 0x1c0
    489c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    48a0:	sub	r6, sl, #36	; 0x24
    48a4:	mov	r4, #0
    48a8:	clz	r6, r6
    48ac:	lsr	r6, r6, #5
    48b0:	str	r2, [r0]
    48b4:	ldr	r1, [r8, #352]	; 0x160
    48b8:	ldr	r0, [r8, #356]	; 0x164
    48bc:	ldr	r7, [r8, #140]	; 0x8c
    48c0:	ldr	r3, [r8, #340]	; 0x154
    48c4:	ldr	r2, [r0]
    48c8:	ldr	r0, [r8, #4]
    48cc:	ldr	r1, [r1]
    48d0:	stm	sp, {r4, r6}
    48d4:	blx	r7
    48d8:	ldr	r0, [r8, #436]	; 0x1b4
    48dc:	cmp	r0, #0
    48e0:	beq	4b0c <doProlog+0x1e08>
    48e4:	ldr	r1, [sp, #68]	; 0x44
    48e8:	ldr	r5, [fp, #-40]	; 0xffffffd8
    48ec:	ldr	r1, [r1]
    48f0:	cmp	r1, #0
    48f4:	beq	4b18 <doProlog+0x1e14>
    48f8:	mov	r2, r1
    48fc:	ldr	r1, [r1]
    4900:	str	r0, [r2]
    4904:	mov	r0, r2
    4908:	cmp	r1, #0
    490c:	bne	48f8 <doProlog+0x1bf4>
    4910:	b	4b04 <doProlog+0x1e00>
    4914:	mov	r0, #32
    4918:	str	r0, [r8, #484]	; 0x1e4
    491c:	mov	r0, #32
    4920:	ldr	r1, [r8, #12]
    4924:	blx	r1
    4928:	cmp	r0, #0
    492c:	str	r0, [r8, #480]	; 0x1e0
    4930:	beq	56a0 <doProlog+0x299c>
    4934:	ldr	r0, [r8, #268]	; 0x10c
    4938:	ldr	r1, [r8, #480]	; 0x1e0
    493c:	ldr	r4, [fp, #-48]	; 0xffffffd0
    4940:	mov	r2, #0
    4944:	strb	r2, [r1, r0]
    4948:	ldrb	r0, [r4, #160]	; 0xa0
    494c:	cmp	r0, #0
    4950:	beq	4d00 <doProlog+0x1ffc>
    4954:	mov	r0, r8
    4958:	bl	70e4 <nextScaffoldPart>
    495c:	cmp	r0, #0
    4960:	blt	56a0 <doProlog+0x299c>
    4964:	ldr	r1, [r4, #180]	; 0xb4
    4968:	ldr	r2, [r4, #184]	; 0xb8
    496c:	str	r0, [r2, r1, lsl #2]
    4970:	rsb	r0, r0, r0, lsl #3
    4974:	ldr	r2, [r4, #180]	; 0xb4
    4978:	ldr	r1, [r4, #164]	; 0xa4
    497c:	add	r2, r2, #1
    4980:	str	r2, [r4, #180]	; 0xb4
    4984:	mov	r2, #6
    4988:	str	r2, [r1, r0, lsl #2]
    498c:	b	53d8 <doProlog+0x26d4>
    4990:	mov	r0, #8
    4994:	str	r0, [r6, #16]
    4998:	mov	r0, #96	; 0x60
    499c:	ldr	r1, [r8, #12]
    49a0:	blx	r1
    49a4:	cmp	r0, #0
    49a8:	str	r0, [r6, #20]
    49ac:	beq	56a0 <doProlog+0x299c>
    49b0:	ldr	r1, [r6, #12]
    49b4:	cmp	r4, #0
    49b8:	add	r2, r1, r1, lsl #1
    49bc:	str	r7, [r0, r2, lsl #2]!
    49c0:	str	r5, [r0, #8]
    49c4:	strb	r4, [r0, #4]
    49c8:	moveq	r0, #1
    49cc:	strbeq	r0, [r7, #8]
    49d0:	add	r0, r1, #1
    49d4:	str	r0, [r6, #12]
    49d8:	ldr	r0, [r8, #140]	; 0x8c
    49dc:	cmp	r0, #0
    49e0:	ldrne	r0, [r8, #340]	; 0x154
    49e4:	cmpne	r0, #0
    49e8:	beq	4d00 <doProlog+0x1ffc>
    49ec:	ldrb	r1, [r0]
    49f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    49f4:	cmp	r1, #40	; 0x28
    49f8:	beq	4a0c <doProlog+0x1d08>
    49fc:	cmp	r1, #78	; 0x4e
    4a00:	ldrbeq	r0, [r0, #1]
    4a04:	cmpeq	r0, #79	; 0x4f
    4a08:	bne	4a94 <doProlog+0x1d90>
    4a0c:	ldr	r1, [r8, #440]	; 0x1b8
    4a10:	ldr	r0, [r8, #444]	; 0x1bc
    4a14:	cmp	r0, r1
    4a18:	bne	4a38 <doProlog+0x1d34>
    4a1c:	ldr	r0, [sp, #68]	; 0x44
    4a20:	bl	65e4 <poolGrow>
    4a24:	cmp	r0, #0
    4a28:	beq	56a0 <doProlog+0x299c>
    4a2c:	ldr	r0, [sp, #64]	; 0x40
    4a30:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4a34:	ldr	r0, [r0]
    4a38:	add	r1, r0, #1
    4a3c:	str	r1, [r8, #444]	; 0x1bc
    4a40:	mov	r1, #41	; 0x29
    4a44:	strb	r1, [r0]
    4a48:	ldr	r1, [r8, #440]	; 0x1b8
    4a4c:	ldr	r0, [r8, #444]	; 0x1bc
    4a50:	cmp	r0, r1
    4a54:	bne	4a74 <doProlog+0x1d70>
    4a58:	ldr	r0, [sp, #68]	; 0x44
    4a5c:	bl	65e4 <poolGrow>
    4a60:	cmp	r0, #0
    4a64:	beq	56a0 <doProlog+0x299c>
    4a68:	ldr	r0, [sp, #64]	; 0x40
    4a6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4a70:	ldr	r0, [r0]
    4a74:	add	r1, r0, #1
    4a78:	str	r1, [r8, #444]	; 0x1bc
    4a7c:	mov	r1, #0
    4a80:	strb	r1, [r0]
    4a84:	ldr	r0, [r8, #444]	; 0x1bc
    4a88:	ldr	r1, [r8, #448]	; 0x1c0
    4a8c:	str	r1, [r8, #340]	; 0x154
    4a90:	str	r0, [r8, #448]	; 0x1c0
    4a94:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4a98:	sub	r6, sl, #38	; 0x26
    4a9c:	clz	r6, r6
    4aa0:	lsr	r6, r6, #5
    4aa4:	str	r2, [r0]
    4aa8:	ldr	r1, [r8, #352]	; 0x160
    4aac:	ldr	r0, [r8, #356]	; 0x164
    4ab0:	ldr	r7, [r8, #140]	; 0x8c
    4ab4:	ldr	r3, [r8, #340]	; 0x154
    4ab8:	ldr	r2, [r0]
    4abc:	ldr	r0, [r8, #4]
    4ac0:	ldr	r1, [r1]
    4ac4:	stm	sp, {r5, r6}
    4ac8:	blx	r7
    4acc:	ldr	r0, [r8, #436]	; 0x1b4
    4ad0:	cmp	r0, #0
    4ad4:	beq	4b0c <doProlog+0x1e08>
    4ad8:	ldr	r1, [sp, #68]	; 0x44
    4adc:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4ae0:	ldr	r1, [r1]
    4ae4:	cmp	r1, #0
    4ae8:	beq	4b18 <doProlog+0x1e14>
    4aec:	mov	r2, r1
    4af0:	ldr	r1, [r1]
    4af4:	str	r0, [r2]
    4af8:	mov	r0, r2
    4afc:	cmp	r1, #0
    4b00:	bne	4aec <doProlog+0x1de8>
    4b04:	str	r2, [r8, #436]	; 0x1b4
    4b08:	b	4b18 <doProlog+0x1e14>
    4b0c:	ldr	r0, [r8, #432]	; 0x1b0
    4b10:	str	r0, [r8, #436]	; 0x1b4
    4b14:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4b18:	mov	r0, #0
    4b1c:	str	r0, [r8, #432]	; 0x1b0
    4b20:	str	r0, [r8, #440]	; 0x1b8
    4b24:	str	r0, [r8, #444]	; 0x1bc
    4b28:	str	r0, [r8, #448]	; 0x1c0
    4b2c:	b	53e8 <doProlog+0x26e4>
    4b30:	cmp	r7, #0
    4b34:	beq	5750 <doProlog+0x2a4c>
    4b38:	ldrb	r0, [r7, #34]	; 0x22
    4b3c:	cmp	r0, #0
    4b40:	beq	5758 <doProlog+0x2a54>
    4b44:	ldrb	r0, [r7, #32]
    4b48:	cmp	r0, #0
    4b4c:	bne	5748 <doProlog+0x2a44>
    4b50:	ldr	r0, [r7, #4]
    4b54:	cmp	r0, #0
    4b58:	beq	4b88 <doProlog+0x1e84>
    4b5c:	sub	r0, sl, #60	; 0x3c
    4b60:	mov	r1, r7
    4b64:	clz	r0, r0
    4b68:	lsr	r2, r0, #5
    4b6c:	mov	r0, r8
    4b70:	bl	720c <processInternalEntity>
    4b74:	cmp	r0, #0
    4b78:	mov	r6, r0
    4b7c:	movwne	r6, #1
    4b80:	beq	4cf8 <doProlog+0x1ff4>
    4b84:	b	56a8 <doProlog+0x29a4>
    4b88:	ldr	r4, [r8, #120]	; 0x78
    4b8c:	cmp	r4, #0
    4b90:	beq	4bf8 <doProlog+0x1ef4>
    4b94:	mov	r6, #0
    4b98:	mov	r0, #1
    4b9c:	strb	r6, [r5, #131]	; 0x83
    4ba0:	strb	r0, [r7, #32]
    4ba4:	ldr	r1, [r7, #24]
    4ba8:	ldr	r0, [r8, #124]	; 0x7c
    4bac:	ldr	r3, [r7, #16]
    4bb0:	ldr	r2, [r7, #20]
    4bb4:	str	r1, [sp]
    4bb8:	mov	r1, #0
    4bbc:	blx	r4
    4bc0:	cmp	r0, #0
    4bc4:	strb	r6, [r7, #32]
    4bc8:	beq	571c <doProlog+0x2a18>
    4bcc:	ldrb	r1, [r5, #131]	; 0x83
    4bd0:	ldrb	r0, [r5, #130]	; 0x82
    4bd4:	cmp	r1, #0
    4bd8:	bne	3e40 <doProlog+0x113c>
    4bdc:	strb	r0, [r5, #128]	; 0x80
    4be0:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4be4:	b	53e8 <doProlog+0x26e4>
    4be8:	ldr	r0, [r8, #332]	; 0x14c
    4bec:	cmp	r0, #0
    4bf0:	strbeq	r7, [r9, #129]	; 0x81
    4bf4:	b	43c4 <doProlog+0x16c0>
    4bf8:	ldrb	r0, [r5, #130]	; 0x82
    4bfc:	strb	r0, [r5, #128]	; 0x80
    4c00:	b	4d00 <doProlog+0x1ffc>
    4c04:	mov	r0, sl
    4c08:	bl	65e4 <poolGrow>
    4c0c:	cmp	r0, #0
    4c10:	beq	5708 <doProlog+0x2a04>
    4c14:	ldr	r0, [r8, #440]	; 0x1b8
    4c18:	ldr	r7, [r5, #60]	; 0x3c
    4c1c:	sub	r1, fp, #32
    4c20:	mov	r2, r4
    4c24:	mov	r3, r6
    4c28:	str	r0, [sp]
    4c2c:	mov	r0, r5
    4c30:	blx	r7
    4c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4c38:	cmp	r0, r4
    4c3c:	bne	4c04 <doProlog+0x1f00>
    4c40:	ldr	r0, [r8, #448]	; 0x1c0
    4c44:	cmp	r0, #0
    4c48:	beq	5708 <doProlog+0x2a04>
    4c4c:	ldr	r5, [fp, #-40]	; 0xffffffd8
    4c50:	str	r0, [r8, #340]	; 0x154
    4c54:	b	53e8 <doProlog+0x26e4>
    4c58:	mov	r0, r6
    4c5c:	bl	65e4 <poolGrow>
    4c60:	cmp	r0, #0
    4c64:	beq	5580 <doProlog+0x287c>
    4c68:	ldr	r0, [r8, #440]	; 0x1b8
    4c6c:	ldr	r7, [r5, #60]	; 0x3c
    4c70:	sub	r1, fp, #32
    4c74:	mov	r2, r4
    4c78:	mov	r3, r9
    4c7c:	str	r0, [sp]
    4c80:	mov	r0, r5
    4c84:	blx	r7
    4c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4c8c:	cmp	r0, r4
    4c90:	bne	4c58 <doProlog+0x1f54>
    4c94:	ldr	r0, [r8, #448]	; 0x1c0
    4c98:	cmp	r0, #0
    4c9c:	beq	5580 <doProlog+0x287c>
    4ca0:	ldr	r1, [r8, #440]	; 0x1b8
    4ca4:	ldr	r0, [r8, #444]	; 0x1bc
    4ca8:	cmp	r0, r1
    4cac:	bne	4cc4 <doProlog+0x1fc0>
    4cb0:	mov	r0, r6
    4cb4:	bl	65e4 <poolGrow>
    4cb8:	cmp	r0, #0
    4cbc:	beq	5580 <doProlog+0x287c>
    4cc0:	ldr	r0, [r9]
    4cc4:	add	r1, r0, #1
    4cc8:	mov	r6, #0
    4ccc:	str	r1, [r8, #444]	; 0x1bc
    4cd0:	strb	r6, [r0]
    4cd4:	ldr	r0, [r8, #448]	; 0x1c0
    4cd8:	cmp	r0, #0
    4cdc:	str	r0, [r8, #328]	; 0x148
    4ce0:	beq	56a0 <doProlog+0x299c>
    4ce4:	str	r6, [r8, #336]	; 0x150
    4ce8:	ldr	r0, [r8, #444]	; 0x1bc
    4cec:	str	r0, [r8, #448]	; 0x1c0
    4cf0:	mov	r0, #0
    4cf4:	str	r0, [r8, #332]	; 0x14c
    4cf8:	cmp	r6, #0
    4cfc:	beq	53e4 <doProlog+0x26e0>
    4d00:	ldr	r3, [r8, #88]	; 0x58
    4d04:	cmp	r3, #0
    4d08:	beq	53e4 <doProlog+0x26e0>
    4d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4d10:	ldr	r9, [fp, #-40]	; 0xffffffd8
    4d14:	ldr	r4, [fp, #12]
    4d18:	str	r1, [fp, #-32]	; 0xffffffe0
    4d1c:	ldrb	r0, [r9, #72]	; 0x48
    4d20:	cmp	r0, #0
    4d24:	beq	4d38 <doProlog+0x2034>
    4d28:	ldr	r0, [r8, #4]
    4d2c:	sub	r2, r4, r1
    4d30:	blx	r3
    4d34:	b	4dc4 <doProlog+0x20c0>
    4d38:	ldr	r0, [r8, #152]	; 0x98
    4d3c:	ldr	r6, [sp, #56]	; 0x38
    4d40:	ldr	r7, [sp, #60]	; 0x3c
    4d44:	mov	r1, r8
    4d48:	mov	r2, r9
    4d4c:	sub	sl, fp, #36	; 0x24
    4d50:	mov	r8, r1
    4d54:	cmp	r0, r9
    4d58:	mov	r9, r2
    4d5c:	ldrne	r0, [sp, #48]	; 0x30
    4d60:	ldrne	r6, [r0]
    4d64:	addne	r7, r6, #4
    4d68:	ldr	r0, [r8, #52]	; 0x34
    4d6c:	ldr	r1, [r8, #56]	; 0x38
    4d70:	mov	r2, r4
    4d74:	mov	r3, sl
    4d78:	str	r0, [fp, #-36]	; 0xffffffdc
    4d7c:	mov	r0, r9
    4d80:	ldr	r5, [r9, #60]	; 0x3c
    4d84:	str	r1, [sp]
    4d88:	sub	r1, fp, #32
    4d8c:	blx	r5
    4d90:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4d94:	str	r0, [r7]
    4d98:	ldr	r1, [r8, #52]	; 0x34
    4d9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    4da0:	ldr	r0, [r8, #4]
    4da4:	ldr	r3, [r8, #88]	; 0x58
    4da8:	sub	r2, r2, r1
    4dac:	blx	r3
    4db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4db4:	str	r0, [r6]
    4db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4dbc:	cmp	r0, r4
    4dc0:	bne	4d68 <doProlog+0x2064>
    4dc4:	mov	r5, r9
    4dc8:	b	53e8 <doProlog+0x26e4>
    4dcc:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4dd0:	bl	65e4 <poolGrow>
    4dd4:	cmp	r0, #0
    4dd8:	beq	56a0 <doProlog+0x299c>
    4ddc:	ldr	r0, [r9, #88]	; 0x58
    4de0:	ldr	r7, [r5, #60]	; 0x3c
    4de4:	sub	r1, fp, #32
    4de8:	mov	r2, r4
    4dec:	mov	r3, r6
    4df0:	str	r0, [sp]
    4df4:	mov	r0, r5
    4df8:	blx	r7
    4dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4e00:	cmp	r0, r4
    4e04:	bne	4dcc <doProlog+0x20c8>
    4e08:	ldr	r2, [sp, #52]	; 0x34
    4e0c:	mov	r9, #1
    4e10:	ldr	r0, [r2]
    4e14:	cmp	r0, #0
    4e18:	beq	5708 <doProlog+0x2a04>
    4e1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4e20:	ldr	r1, [r0, #88]	; 0x58
    4e24:	ldr	r0, [r0, #92]	; 0x5c
    4e28:	cmp	r0, r1
    4e2c:	bne	4e48 <doProlog+0x2144>
    4e30:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4e34:	bl	65e4 <poolGrow>
    4e38:	cmp	r0, #0
    4e3c:	beq	5708 <doProlog+0x2a04>
    4e40:	ldr	r0, [r6]
    4e44:	ldr	r2, [sp, #52]	; 0x34
    4e48:	add	r1, r0, #1
    4e4c:	str	r1, [r6]
    4e50:	mov	r1, #0
    4e54:	strb	r1, [r0]
    4e58:	ldr	r4, [r2]
    4e5c:	cmp	r4, #0
    4e60:	beq	5708 <doProlog+0x2a04>
    4e64:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4e68:	mov	r0, r8
    4e6c:	mov	r2, r4
    4e70:	mov	r3, #36	; 0x24
    4e74:	bl	5d0c <lookup>
    4e78:	cmp	r0, #0
    4e7c:	str	r0, [r8, #324]	; 0x144
    4e80:	beq	5708 <doProlog+0x2a04>
    4e84:	ldr	r1, [r0]
    4e88:	cmp	r1, r4
    4e8c:	bne	4fa8 <doProlog+0x22a4>
    4e90:	ldr	r1, [sp, #72]	; 0x48
    4e94:	ldr	r2, [sp, #52]	; 0x34
    4e98:	ldr	r1, [r1]
    4e9c:	str	r1, [r2]
    4ea0:	mov	r1, #0
    4ea4:	strb	r1, [r0, #33]	; 0x21
    4ea8:	str	r1, [r0, #24]
    4eac:	mov	r1, #1
    4eb0:	ldr	r2, [r8, #492]	; 0x1ec
    4eb4:	cmp	r2, #0
    4eb8:	bne	4ecc <doProlog+0x21c8>
    4ebc:	ldr	r1, [sp, #48]	; 0x30
    4ec0:	ldr	r1, [r1]
    4ec4:	cmp	r1, #0
    4ec8:	movwne	r1, #1
    4ecc:	eor	r1, r1, #1
    4ed0:	strb	r1, [r0, #34]	; 0x22
    4ed4:	ldr	r0, [r8, #144]	; 0x90
    4ed8:	cmp	r0, #0
    4edc:	bne	53e4 <doProlog+0x26e0>
    4ee0:	b	4d00 <doProlog+0x1ffc>
    4ee4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4ee8:	bl	65e4 <poolGrow>
    4eec:	cmp	r0, #0
    4ef0:	beq	56a0 <doProlog+0x299c>
    4ef4:	ldr	r0, [r9, #88]	; 0x58
    4ef8:	ldr	r7, [r5, #60]	; 0x3c
    4efc:	sub	r1, fp, #32
    4f00:	mov	r2, r4
    4f04:	mov	r3, r6
    4f08:	str	r0, [sp]
    4f0c:	mov	r0, r5
    4f10:	blx	r7
    4f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4f18:	cmp	r0, r4
    4f1c:	bne	4ee4 <doProlog+0x21e0>
    4f20:	ldr	r2, [sp, #52]	; 0x34
    4f24:	mov	r9, #1
    4f28:	ldr	r0, [r2]
    4f2c:	cmp	r0, #0
    4f30:	beq	5708 <doProlog+0x2a04>
    4f34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4f38:	ldr	r1, [r0, #88]	; 0x58
    4f3c:	ldr	r0, [r0, #92]	; 0x5c
    4f40:	cmp	r0, r1
    4f44:	bne	4f60 <doProlog+0x225c>
    4f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4f4c:	bl	65e4 <poolGrow>
    4f50:	cmp	r0, #0
    4f54:	beq	5708 <doProlog+0x2a04>
    4f58:	ldr	r0, [r6]
    4f5c:	ldr	r2, [sp, #52]	; 0x34
    4f60:	add	r1, r0, #1
    4f64:	str	r1, [r6]
    4f68:	mov	r1, #0
    4f6c:	strb	r1, [r0]
    4f70:	ldr	r4, [r2]
    4f74:	cmp	r4, #0
    4f78:	beq	5708 <doProlog+0x2a04>
    4f7c:	ldr	r1, [sp, #44]	; 0x2c
    4f80:	mov	r0, r8
    4f84:	mov	r2, r4
    4f88:	mov	r3, #36	; 0x24
    4f8c:	bl	5d0c <lookup>
    4f90:	cmp	r0, #0
    4f94:	str	r0, [r8, #324]	; 0x144
    4f98:	beq	5708 <doProlog+0x2a04>
    4f9c:	ldr	r1, [r0]
    4fa0:	cmp	r1, r4
    4fa4:	beq	4fc4 <doProlog+0x22c0>
    4fa8:	ldr	r0, [sp, #52]	; 0x34
    4fac:	ldr	r1, [sp, #72]	; 0x48
    4fb0:	ldr	r0, [r0]
    4fb4:	str	r0, [r1]
    4fb8:	mov	r0, #0
    4fbc:	str	r0, [r8, #324]	; 0x144
    4fc0:	b	4d00 <doProlog+0x1ffc>
    4fc4:	ldr	r1, [sp, #72]	; 0x48
    4fc8:	ldr	r2, [sp, #52]	; 0x34
    4fcc:	ldr	r1, [r1]
    4fd0:	str	r1, [r2]
    4fd4:	mov	r1, #1
    4fd8:	mov	r2, #0
    4fdc:	strb	r1, [r0, #33]	; 0x21
    4fe0:	str	r2, [r0, #24]
    4fe4:	b	4eb0 <doProlog+0x21ac>
    4fe8:	ldr	r0, [fp, #-68]	; 0xffffffbc
    4fec:	bl	65e4 <poolGrow>
    4ff0:	cmp	r0, #0
    4ff4:	beq	5694 <doProlog+0x2990>
    4ff8:	ldr	r0, [r9, #88]	; 0x58
    4ffc:	ldr	r7, [r5, #60]	; 0x3c
    5000:	ldr	r3, [sp, #72]	; 0x48
    5004:	sub	r1, fp, #32
    5008:	mov	r2, r4
    500c:	str	r0, [sp]
    5010:	mov	r0, r5
    5014:	blx	r7
    5018:	ldr	r0, [fp, #-32]	; 0xffffffe0
    501c:	cmp	r0, r4
    5020:	bne	4fe8 <doProlog+0x22e4>
    5024:	ldr	r3, [sp, #52]	; 0x34
    5028:	ldr	r0, [r3]
    502c:	cmp	r0, #0
    5030:	beq	5694 <doProlog+0x2990>
    5034:	ldr	r1, [r9, #88]	; 0x58
    5038:	ldr	r0, [r9, #92]	; 0x5c
    503c:	cmp	r0, r1
    5040:	bne	5060 <doProlog+0x235c>
    5044:	ldr	r0, [fp, #-68]	; 0xffffffbc
    5048:	bl	65e4 <poolGrow>
    504c:	ldr	r3, [sp, #52]	; 0x34
    5050:	cmp	r0, #0
    5054:	beq	5694 <doProlog+0x2990>
    5058:	ldr	r0, [sp, #72]	; 0x48
    505c:	ldr	r0, [r0]
    5060:	ldr	r2, [sp, #72]	; 0x48
    5064:	add	r1, r0, #1
    5068:	str	r1, [r2]
    506c:	mov	r1, #0
    5070:	strb	r1, [r0]
    5074:	ldr	r1, [r3]
    5078:	ldr	r0, [r8, #324]	; 0x144
    507c:	cmp	r1, #0
    5080:	str	r1, [r0, #28]
    5084:	beq	56a0 <doProlog+0x299c>
    5088:	ldr	r0, [r2]
    508c:	str	r0, [r3]
    5090:	ldr	r0, [r8, #100]	; 0x64
    5094:	cmp	r0, #0
    5098:	beq	50d0 <doProlog+0x23cc>
    509c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    50a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    50a4:	str	r1, [r0]
    50a8:	ldr	r6, [r8, #324]	; 0x144
    50ac:	ldr	r0, [r8, #4]
    50b0:	ldr	r7, [r8, #100]	; 0x64
    50b4:	ldr	r1, [r6]
    50b8:	ldr	r3, [r6, #16]
    50bc:	add	r6, r6, #20
    50c0:	ldm	r6, {r2, r4, r6}
    50c4:	stm	sp, {r4, r6}
    50c8:	blx	r7
    50cc:	b	53e8 <doProlog+0x26e4>
    50d0:	ldr	r0, [r8, #144]	; 0x90
    50d4:	cmp	r0, #0
    50d8:	beq	4d00 <doProlog+0x1ffc>
    50dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    50e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    50e4:	mov	r7, #0
    50e8:	str	r1, [r0]
    50ec:	ldr	r2, [r8, #324]	; 0x144
    50f0:	ldr	r0, [r8, #4]
    50f4:	ldr	ip, [r8, #144]	; 0x90
    50f8:	ldr	r1, [r2]
    50fc:	ldr	r3, [r2, #16]
    5100:	ldr	r6, [r2, #20]
    5104:	ldr	r4, [r2, #24]
    5108:	ldr	r2, [r2, #28]
    510c:	str	r7, [sp]
    5110:	str	r2, [sp, #16]
    5114:	str	r6, [sp, #4]
    5118:	str	r3, [sp, #8]
    511c:	str	r4, [sp, #12]
    5120:	mov	r2, #0
    5124:	b	378c <doProlog+0xa88>
    5128:	ldr	r0, [sp, #68]	; 0x44
    512c:	bl	65e4 <poolGrow>
    5130:	cmp	r0, #0
    5134:	beq	5590 <doProlog+0x288c>
    5138:	ldr	r0, [r8, #440]	; 0x1b8
    513c:	ldr	r7, [r5, #60]	; 0x3c
    5140:	ldr	r3, [sp, #64]	; 0x40
    5144:	sub	r1, fp, #32
    5148:	mov	r2, r4
    514c:	str	r0, [sp]
    5150:	mov	r0, r5
    5154:	blx	r7
    5158:	ldr	r0, [fp, #-32]	; 0xffffffe0
    515c:	cmp	r0, r4
    5160:	bne	5128 <doProlog+0x2424>
    5164:	ldr	r0, [r8, #448]	; 0x1c0
    5168:	cmp	r0, #0
    516c:	beq	5590 <doProlog+0x288c>
    5170:	ldr	r1, [r8, #440]	; 0x1b8
    5174:	ldr	r0, [r8, #444]	; 0x1bc
    5178:	cmp	r0, r1
    517c:	bne	5198 <doProlog+0x2494>
    5180:	ldr	r0, [sp, #68]	; 0x44
    5184:	bl	65e4 <poolGrow>
    5188:	cmp	r0, #0
    518c:	beq	5590 <doProlog+0x288c>
    5190:	ldr	r0, [sp, #64]	; 0x40
    5194:	ldr	r0, [r0]
    5198:	add	r1, r0, #1
    519c:	str	r1, [r8, #444]	; 0x1bc
    51a0:	mov	r1, #0
    51a4:	strb	r1, [r0]
    51a8:	ldr	r0, [r8, #448]	; 0x1c0
    51ac:	cmp	r0, #0
    51b0:	str	r0, [r8, #344]	; 0x158
    51b4:	beq	56a0 <doProlog+0x299c>
    51b8:	ldr	r0, [r8, #444]	; 0x1bc
    51bc:	str	r0, [r8, #448]	; 0x1c0
    51c0:	b	53e8 <doProlog+0x26e4>
    51c4:	mov	r0, sl
    51c8:	bl	65e4 <poolGrow>
    51cc:	cmp	r0, #0
    51d0:	beq	5554 <doProlog+0x2850>
    51d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    51d8:	ldr	r1, [r9, #88]	; 0x58
    51dc:	mov	r2, r6
    51e0:	mov	r3, r4
    51e4:	ldr	r7, [r0, #60]	; 0x3c
    51e8:	str	r1, [sp]
    51ec:	sub	r1, fp, #32
    51f0:	blx	r7
    51f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    51f8:	cmp	r0, r6
    51fc:	bne	51c4 <doProlog+0x24c0>
    5200:	ldr	r0, [r9, #96]	; 0x60
    5204:	cmp	r0, #0
    5208:	beq	5554 <doProlog+0x2850>
    520c:	ldr	r1, [r9, #88]	; 0x58
    5210:	ldr	r0, [r9, #92]	; 0x5c
    5214:	cmp	r0, r1
    5218:	bne	5230 <doProlog+0x252c>
    521c:	mov	r0, sl
    5220:	bl	65e4 <poolGrow>
    5224:	cmp	r0, #0
    5228:	beq	5554 <doProlog+0x2850>
    522c:	ldr	r0, [r4]
    5230:	add	r1, r0, #1
    5234:	str	r1, [r9, #92]	; 0x5c
    5238:	mov	r1, #0
    523c:	strb	r1, [r0]
    5240:	ldr	r6, [r9, #96]	; 0x60
    5244:	cmp	r6, #0
    5248:	beq	5554 <doProlog+0x2850>
    524c:	add	r1, r9, #20
    5250:	mov	r0, r8
    5254:	mov	r2, r6
    5258:	mov	r3, #24
    525c:	bl	5d0c <lookup>
    5260:	cmp	r0, #0
    5264:	beq	5554 <doProlog+0x2850>
    5268:	mov	r4, r0
    526c:	ldr	r0, [r0]
    5270:	cmp	r0, r6
    5274:	beq	5284 <doProlog+0x2580>
    5278:	ldr	r0, [r9, #96]	; 0x60
    527c:	str	r0, [r9, #92]	; 0x5c
    5280:	b	52a0 <doProlog+0x259c>
    5284:	ldr	r0, [r9, #92]	; 0x5c
    5288:	mov	r1, r4
    528c:	str	r0, [r9, #96]	; 0x60
    5290:	mov	r0, r8
    5294:	bl	acd8 <setElementTypePrefix>
    5298:	cmp	r0, #0
    529c:	beq	5554 <doProlog+0x2850>
    52a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    52a4:	ldr	r5, [fp, #-40]	; 0xffffffd8
    52a8:	mov	r0, #0
    52ac:	str	r4, [r8, #352]	; 0x160
    52b0:	str	r0, [r1, #176]	; 0xb0
    52b4:	str	r0, [r1, #180]	; 0xb4
    52b8:	mov	r0, #1
    52bc:	strb	r0, [r1, #160]	; 0xa0
    52c0:	b	53e8 <doProlog+0x26e4>
    52c4:	mov	r0, r6
    52c8:	bl	65e4 <poolGrow>
    52cc:	cmp	r0, #0
    52d0:	beq	5708 <doProlog+0x2a04>
    52d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    52d8:	ldr	r1, [sl, #88]	; 0x58
    52dc:	mov	r2, r4
    52e0:	mov	r3, r7
    52e4:	ldr	r5, [r0, #60]	; 0x3c
    52e8:	str	r1, [sp]
    52ec:	sub	r1, fp, #32
    52f0:	blx	r5
    52f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    52f8:	cmp	r0, r4
    52fc:	bne	52c4 <doProlog+0x25c0>
    5300:	ldr	r0, [sl, #96]	; 0x60
    5304:	cmp	r0, #0
    5308:	beq	5708 <doProlog+0x2a04>
    530c:	ldr	r1, [sl, #88]	; 0x58
    5310:	ldr	r0, [sl, #92]	; 0x5c
    5314:	cmp	r0, r1
    5318:	bne	5330 <doProlog+0x262c>
    531c:	mov	r0, r6
    5320:	bl	65e4 <poolGrow>
    5324:	cmp	r0, #0
    5328:	beq	5708 <doProlog+0x2a04>
    532c:	ldr	r0, [r7]
    5330:	add	r1, r0, #1
    5334:	str	r1, [sl, #92]	; 0x5c
    5338:	mov	r1, #0
    533c:	strb	r1, [r0]
    5340:	ldr	r6, [sl, #96]	; 0x60
    5344:	cmp	r6, #0
    5348:	beq	5708 <doProlog+0x2a04>
    534c:	add	r1, sl, #20
    5350:	mov	r0, r8
    5354:	mov	r2, r6
    5358:	mov	r3, #24
    535c:	bl	5d0c <lookup>
    5360:	cmp	r0, #0
    5364:	beq	5708 <doProlog+0x2a04>
    5368:	mov	r4, r0
    536c:	ldr	r0, [r0]
    5370:	cmp	r0, r6
    5374:	beq	5384 <doProlog+0x2680>
    5378:	ldr	r1, [sl, #96]	; 0x60
    537c:	str	r1, [sl, #92]	; 0x5c
    5380:	b	53a4 <doProlog+0x26a0>
    5384:	ldr	r0, [sl, #92]	; 0x5c
    5388:	mov	r1, r4
    538c:	str	r0, [sl, #96]	; 0x60
    5390:	mov	r0, r8
    5394:	bl	acd8 <setElementTypePrefix>
    5398:	cmp	r0, #0
    539c:	beq	5708 <doProlog+0x2a04>
    53a0:	ldr	r0, [r4]
    53a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    53a8:	ldr	r2, [sp, #40]	; 0x28
    53ac:	ldr	r1, [r3, #164]	; 0xa4
    53b0:	add	r1, r1, r2, lsl #2
    53b4:	str	r0, [r1, #8]
    53b8:	mov	r1, #0
    53bc:	ldrb	r2, [r0, r1]
    53c0:	add	r1, r1, #1
    53c4:	cmp	r2, #0
    53c8:	bne	53bc <doProlog+0x26b8>
    53cc:	ldr	r0, [r3, #168]	; 0xa8
    53d0:	add	r0, r0, r1
    53d4:	str	r0, [r3, #168]	; 0xa8
    53d8:	ldr	r0, [r8, #136]	; 0x88
    53dc:	cmp	r0, #0
    53e0:	beq	4d00 <doProlog+0x1ffc>
    53e4:	ldr	r5, [fp, #-40]	; 0xffffffd8
    53e8:	ldr	r0, [r8, #496]	; 0x1f0
    53ec:	cmp	r0, #2
    53f0:	beq	5564 <doProlog+0x2860>
    53f4:	cmp	r0, #3
    53f8:	bne	2dbc <doProlog+0xb8>
    53fc:	b	556c <doProlog+0x2868>
    5400:	mov	r0, sl
    5404:	bl	65e4 <poolGrow>
    5408:	cmp	r0, #0
    540c:	beq	5554 <doProlog+0x2850>
    5410:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5414:	ldr	r1, [r9, #88]	; 0x58
    5418:	mov	r2, r6
    541c:	mov	r3, r4
    5420:	ldr	r7, [r0, #60]	; 0x3c
    5424:	str	r1, [sp]
    5428:	sub	r1, fp, #32
    542c:	blx	r7
    5430:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5434:	cmp	r0, r6
    5438:	bne	5400 <doProlog+0x26fc>
    543c:	ldr	r0, [r9, #96]	; 0x60
    5440:	cmp	r0, #0
    5444:	beq	5554 <doProlog+0x2850>
    5448:	ldr	r1, [r9, #88]	; 0x58
    544c:	ldr	r0, [r9, #92]	; 0x5c
    5450:	cmp	r0, r1
    5454:	bne	546c <doProlog+0x2768>
    5458:	mov	r0, sl
    545c:	bl	65e4 <poolGrow>
    5460:	cmp	r0, #0
    5464:	beq	5554 <doProlog+0x2850>
    5468:	ldr	r0, [r4]
    546c:	add	r1, r0, #1
    5470:	str	r1, [r9, #92]	; 0x5c
    5474:	mov	r1, #0
    5478:	strb	r1, [r0]
    547c:	ldr	r6, [r9, #96]	; 0x60
    5480:	cmp	r6, #0
    5484:	beq	5554 <doProlog+0x2850>
    5488:	add	r1, r9, #20
    548c:	mov	r0, r8
    5490:	mov	r2, r6
    5494:	mov	r3, #24
    5498:	bl	5d0c <lookup>
    549c:	cmp	r0, #0
    54a0:	beq	5554 <doProlog+0x2850>
    54a4:	mov	r4, r0
    54a8:	ldr	r0, [r0]
    54ac:	cmp	r0, r6
    54b0:	beq	54c0 <doProlog+0x27bc>
    54b4:	ldr	r0, [r9, #96]	; 0x60
    54b8:	str	r0, [r9, #92]	; 0x5c
    54bc:	b	54dc <doProlog+0x27d8>
    54c0:	ldr	r0, [r9, #92]	; 0x5c
    54c4:	mov	r1, r4
    54c8:	str	r0, [r9, #96]	; 0x60
    54cc:	mov	r0, r8
    54d0:	bl	acd8 <setElementTypePrefix>
    54d4:	cmp	r0, #0
    54d8:	beq	5554 <doProlog+0x2850>
    54dc:	ldr	r9, [fp, #-48]	; 0xffffffd0
    54e0:	str	r4, [r8, #352]	; 0x160
    54e4:	b	3a64 <doProlog+0xd60>
    54e8:	mov	r9, #2
    54ec:	cmp	r4, #12
    54f0:	movweq	r9, #17
    54f4:	cmp	r4, #28
    54f8:	movweq	r9, #10
    54fc:	b	5708 <doProlog+0x2a04>
    5500:	ldrb	r0, [r8, #505]	; 0x1f9
    5504:	cmp	r0, #0
    5508:	beq	552c <doProlog+0x2828>
    550c:	mov	r0, #1
    5510:	ldrb	r4, [r9, #129]	; 0x81
    5514:	strb	r0, [r9, #129]	; 0x81
    5518:	ldr	r0, [r8, #508]	; 0x1fc
    551c:	cmp	r0, #0
    5520:	ldrne	r0, [r8, #120]	; 0x78
    5524:	cmpne	r0, #0
    5528:	bne	5604 <doProlog+0x2900>
    552c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5530:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5534:	ldr	r3, [fp, #16]
    5538:	movw	r0, #0
    553c:	movt	r0, #0
    5540:	str	r0, [r8, #288]	; 0x120
    5544:	mov	r0, r8
    5548:	bl	61f0 <contentProcessor>
    554c:	mov	r9, r0
    5550:	b	5708 <doProlog+0x2a04>
    5554:	mov	r0, #0
    5558:	mov	r9, #1
    555c:	str	r0, [r8, #352]	; 0x160
    5560:	b	5708 <doProlog+0x2a04>
    5564:	mov	r9, #35	; 0x23
    5568:	b	5708 <doProlog+0x2a04>
    556c:	ldr	r0, [fp, #12]
    5570:	ldr	r1, [fp, #16]
    5574:	mov	r9, #0
    5578:	str	r0, [r1]
    557c:	b	5708 <doProlog+0x2a04>
    5580:	mov	r0, #0
    5584:	mov	r9, #1
    5588:	str	r0, [r8, #328]	; 0x148
    558c:	b	5708 <doProlog+0x2a04>
    5590:	mov	r0, #0
    5594:	mov	r9, #1
    5598:	str	r0, [r8, #344]	; 0x158
    559c:	b	5708 <doProlog+0x2a04>
    55a0:	mov	r0, #0
    55a4:	mov	r9, #1
    55a8:	str	r0, [r8, #332]	; 0x14c
    55ac:	b	5708 <doProlog+0x2a04>
    55b0:	ldr	r0, [r8, #324]	; 0x144
    55b4:	mov	r1, #0
    55b8:	mov	r9, #1
    55bc:	str	r1, [r0, #16]
    55c0:	b	5708 <doProlog+0x2a04>
    55c4:	ldr	r0, [r8, #152]	; 0x98
    55c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    55cc:	cmp	r1, r0
    55d0:	beq	56b8 <doProlog+0x29b4>
    55d4:	ldr	r0, [sp, #48]	; 0x30
    55d8:	ldr	r0, [r0]
    55dc:	ldrb	r0, [r0, #20]
    55e0:	cmp	r0, #0
    55e4:	bne	56d0 <doProlog+0x29cc>
    55e8:	b	56fc <doProlog+0x29f8>
    55ec:	mov	r9, #6
    55f0:	b	5708 <doProlog+0x2a04>
    55f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    55f8:	mov	r9, #4
    55fc:	str	r3, [r0]
    5600:	b	5708 <doProlog+0x2a04>
    5604:	ldr	r1, [sp, #44]	; 0x2c
    5608:	movw	r2, #0
    560c:	mov	r0, r8
    5610:	mov	r3, #36	; 0x24
    5614:	movt	r2, #0
    5618:	bl	5d0c <lookup>
    561c:	cmp	r0, #0
    5620:	beq	56a0 <doProlog+0x299c>
    5624:	ldr	r2, [r8, #368]	; 0x170
    5628:	mov	r1, #0
    562c:	str	r2, [r0, #20]
    5630:	strb	r1, [r9, #131]	; 0x83
    5634:	mov	r1, #0
    5638:	ldr	r3, [r0, #16]
    563c:	ldrd	r6, [r8, #120]	; 0x78
    5640:	ldr	r0, [r0, #24]
    5644:	str	r0, [sp]
    5648:	mov	r0, r7
    564c:	blx	r6
    5650:	cmp	r0, #0
    5654:	beq	571c <doProlog+0x2a18>
    5658:	ldrb	r0, [r9, #131]	; 0x83
    565c:	cmp	r0, #0
    5660:	beq	5740 <doProlog+0x2a3c>
    5664:	ldrb	r0, [r9, #130]	; 0x82
    5668:	cmp	r0, #0
    566c:	bne	552c <doProlog+0x2828>
    5670:	ldr	r1, [r8, #116]	; 0x74
    5674:	cmp	r1, #0
    5678:	beq	552c <doProlog+0x2828>
    567c:	ldr	r0, [r8, #4]
    5680:	blx	r1
    5684:	cmp	r0, #0
    5688:	bne	552c <doProlog+0x2828>
    568c:	mov	r9, #22
    5690:	b	5708 <doProlog+0x2a04>
    5694:	ldr	r0, [r8, #324]	; 0x144
    5698:	mov	r1, #0
    569c:	str	r1, [r0, #28]
    56a0:	mov	r9, #1
    56a4:	b	5708 <doProlog+0x2a04>
    56a8:	mov	r9, r0
    56ac:	b	5708 <doProlog+0x2a04>
    56b0:	mov	r9, #32
    56b4:	b	5708 <doProlog+0x2a04>
    56b8:	ldrb	r1, [r8, #504]	; 0x1f8
    56bc:	cmp	r1, #0
    56c0:	ldreq	r1, [fp, #-40]	; 0xffffffd8
    56c4:	moveq	r9, #3
    56c8:	cmpeq	r1, r0
    56cc:	beq	5708 <doProlog+0x2a04>
    56d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    56d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    56d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    56dc:	ldr	r7, [r1]
    56e0:	str	r0, [sp]
    56e4:	mov	r0, r1
    56e8:	mvn	r1, #3
    56ec:	mov	r3, r2
    56f0:	blx	r7
    56f4:	cmn	r0, #1
    56f8:	beq	5724 <doProlog+0x2a20>
    56fc:	ldr	r0, [fp, #16]
    5700:	mov	r9, #0
    5704:	str	r6, [r0]
    5708:	mov	r0, r9
    570c:	sub	sp, fp, #28
    5710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5714:	mov	r9, #2
    5718:	b	5708 <doProlog+0x2a04>
    571c:	mov	r9, #21
    5720:	b	5708 <doProlog+0x2a04>
    5724:	mov	r9, #29
    5728:	b	5708 <doProlog+0x2a04>
    572c:	movw	r0, #0
    5730:	mov	r9, #0
    5734:	movt	r0, #0
    5738:	str	r0, [r8, #288]	; 0x120
    573c:	b	5708 <doProlog+0x2a04>
    5740:	strb	r4, [r9, #129]	; 0x81
    5744:	b	552c <doProlog+0x2828>
    5748:	mov	r9, #12
    574c:	b	5708 <doProlog+0x2a04>
    5750:	mov	r9, #11
    5754:	b	5708 <doProlog+0x2a04>
    5758:	mov	r9, #24
    575c:	b	5708 <doProlog+0x2a04>

00005760 <processXmlDecl>:
    5760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5764:	add	fp, sp, #28
    5768:	sub	sp, sp, #60	; 0x3c
    576c:	mov	r8, r0
    5770:	mov	r0, #0
    5774:	mov	r6, r3
    5778:	add	r3, sp, #40	; 0x28
    577c:	mov	r4, r2
    5780:	mov	r5, r1
    5784:	add	lr, sp, #44	; 0x2c
    5788:	sub	r7, fp, #40	; 0x28
    578c:	add	r2, sp, #36	; 0x24
    5790:	add	ip, sp, #32
    5794:	str	r0, [fp, #-40]	; 0xffffffd8
    5798:	str	r0, [sp, #44]	; 0x2c
    579c:	str	r0, [sp, #40]	; 0x28
    57a0:	mvn	r0, #0
    57a4:	add	sl, r8, #296	; 0x128
    57a8:	str	r0, [sp, #32]
    57ac:	ldrb	r0, [r8, #244]	; 0xf4
    57b0:	ldr	r1, [r8, #152]	; 0x98
    57b4:	str	r3, [sp, #4]
    57b8:	add	r3, sp, #8
    57bc:	str	sl, [sp]
    57c0:	stm	r3, {r2, r7, lr}
    57c4:	movw	r2, #0
    57c8:	movw	r7, #0
    57cc:	mov	r3, r6
    57d0:	str	ip, [sp, #20]
    57d4:	movt	r2, #0
    57d8:	movt	r7, #0
    57dc:	cmp	r0, #0
    57e0:	mov	r0, r5
    57e4:	moveq	r7, r2
    57e8:	mov	r2, r4
    57ec:	blx	r7
    57f0:	cmp	r0, #0
    57f4:	beq	58d0 <processXmlDecl+0x170>
    57f8:	ldr	r0, [sp, #32]
    57fc:	cmp	r0, #1
    5800:	cmpeq	r5, #0
    5804:	bne	5824 <processXmlDecl+0xc4>
    5808:	ldr	r0, [r8, #364]	; 0x16c
    580c:	mov	r1, #1
    5810:	strb	r1, [r0, #130]	; 0x82
    5814:	ldr	r0, [r8, #508]	; 0x1fc
    5818:	cmp	r0, #1
    581c:	moveq	r0, #0
    5820:	streq	r0, [r8, #508]	; 0x1fc
    5824:	ldr	r0, [r8, #148]	; 0x94
    5828:	cmp	r0, #0
    582c:	beq	58e0 <processXmlDecl+0x180>
    5830:	str	sl, [sp, #28]
    5834:	ldr	sl, [fp, #-40]	; 0xffffffd8
    5838:	mov	r4, #0
    583c:	mov	r5, #0
    5840:	cmp	sl, #0
    5844:	beq	5974 <processXmlDecl+0x214>
    5848:	ldr	r6, [r8, #152]	; 0x98
    584c:	mov	r1, sl
    5850:	ldr	r2, [r6, #32]
    5854:	mov	r0, r6
    5858:	blx	r2
    585c:	str	sl, [fp, #-32]	; 0xffffffe0
    5860:	mov	r5, r8
    5864:	mov	r7, r0
    5868:	ldr	r0, [r5, #468]!	; 0x1d4
    586c:	sub	r9, r5, #12
    5870:	cmp	r0, #0
    5874:	bne	5888 <processXmlDecl+0x128>
    5878:	mov	r0, r9
    587c:	bl	65e4 <poolGrow>
    5880:	cmp	r0, #0
    5884:	beq	59fc <processXmlDecl+0x29c>
    5888:	add	r7, sl, r7
    588c:	sub	sl, fp, #32
    5890:	ldr	r0, [r8, #464]	; 0x1d0
    5894:	ldr	r4, [r6, #60]	; 0x3c
    5898:	mov	r1, sl
    589c:	mov	r2, r7
    58a0:	mov	r3, r5
    58a4:	str	r0, [sp]
    58a8:	mov	r0, r6
    58ac:	blx	r4
    58b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    58b4:	cmp	r0, r7
    58b8:	beq	5918 <processXmlDecl+0x1b8>
    58bc:	mov	r0, r9
    58c0:	bl	65e4 <poolGrow>
    58c4:	cmp	r0, #0
    58c8:	bne	5890 <processXmlDecl+0x130>
    58cc:	b	59fc <processXmlDecl+0x29c>
    58d0:	mov	r6, #30
    58d4:	cmp	r5, #0
    58d8:	movwne	r6, #31
    58dc:	b	5cac <processXmlDecl+0x54c>
    58e0:	ldr	r3, [r8, #88]	; 0x58
    58e4:	mov	r5, #0
    58e8:	cmp	r3, #0
    58ec:	beq	5a04 <processXmlDecl+0x2a4>
    58f0:	ldr	r5, [r8, #152]	; 0x98
    58f4:	str	r4, [fp, #-32]	; 0xffffffe0
    58f8:	ldrb	r0, [r5, #72]	; 0x48
    58fc:	cmp	r0, #0
    5900:	beq	5a0c <processXmlDecl+0x2ac>
    5904:	ldr	r0, [r8, #4]
    5908:	sub	r2, r6, r4
    590c:	mov	r1, r4
    5910:	blx	r3
    5914:	b	5a6c <processXmlDecl+0x30c>
    5918:	ldr	r0, [r8, #472]	; 0x1d8
    591c:	mov	r6, #1
    5920:	cmp	r0, #0
    5924:	beq	5cac <processXmlDecl+0x54c>
    5928:	ldr	r1, [r8, #464]	; 0x1d0
    592c:	ldr	r0, [r8, #468]	; 0x1d4
    5930:	cmp	r0, r1
    5934:	bne	594c <processXmlDecl+0x1ec>
    5938:	mov	r0, r9
    593c:	bl	65e4 <poolGrow>
    5940:	cmp	r0, #0
    5944:	beq	5cac <processXmlDecl+0x54c>
    5948:	ldr	r0, [r5]
    594c:	add	r1, r0, #1
    5950:	mov	r4, #0
    5954:	str	r1, [r8, #468]	; 0x1d4
    5958:	mov	r1, #0
    595c:	strb	r1, [r0]
    5960:	ldr	r5, [r8, #472]	; 0x1d8
    5964:	cmp	r5, #0
    5968:	beq	5cac <processXmlDecl+0x54c>
    596c:	ldr	r0, [r8, #468]	; 0x1d4
    5970:	str	r0, [r8, #472]	; 0x1d8
    5974:	ldr	r0, [sp, #40]	; 0x28
    5978:	cmp	r0, #0
    597c:	beq	5acc <processXmlDecl+0x36c>
    5980:	ldr	r6, [r8, #152]	; 0x98
    5984:	mov	r7, r8
    5988:	str	r5, [sp, #24]
    598c:	ldr	r5, [sp, #36]	; 0x24
    5990:	ldr	sl, [r6, #68]	; 0x44
    5994:	str	r0, [fp, #-32]	; 0xffffffe0
    5998:	ldr	r0, [r7, #468]!	; 0x1d4
    599c:	sub	r9, r7, #12
    59a0:	cmp	r0, #0
    59a4:	bne	59b8 <processXmlDecl+0x258>
    59a8:	mov	r0, r9
    59ac:	bl	65e4 <poolGrow>
    59b0:	cmp	r0, #0
    59b4:	beq	59fc <processXmlDecl+0x29c>
    59b8:	sub	r5, r5, sl
    59bc:	sub	sl, fp, #32
    59c0:	ldr	r0, [r8, #464]	; 0x1d0
    59c4:	ldr	r4, [r6, #60]	; 0x3c
    59c8:	mov	r1, sl
    59cc:	mov	r2, r5
    59d0:	mov	r3, r7
    59d4:	str	r0, [sp]
    59d8:	mov	r0, r6
    59dc:	blx	r4
    59e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    59e4:	cmp	r0, r5
    59e8:	beq	5a78 <processXmlDecl+0x318>
    59ec:	mov	r0, r9
    59f0:	bl	65e4 <poolGrow>
    59f4:	cmp	r0, #0
    59f8:	bne	59c0 <processXmlDecl+0x260>
    59fc:	mov	r6, #1
    5a00:	b	5cac <processXmlDecl+0x54c>
    5a04:	mov	r4, #0
    5a08:	b	5ae8 <processXmlDecl+0x388>
    5a0c:	sub	r9, fp, #32
    5a10:	sub	r7, fp, #36	; 0x24
    5a14:	ldr	r0, [r8, #52]	; 0x34
    5a18:	ldr	r1, [r8, #56]	; 0x38
    5a1c:	mov	r2, r6
    5a20:	mov	r3, r7
    5a24:	str	r0, [fp, #-36]	; 0xffffffdc
    5a28:	mov	r0, r5
    5a2c:	ldr	r4, [r5, #60]	; 0x3c
    5a30:	str	r1, [sp]
    5a34:	mov	r1, r9
    5a38:	blx	r4
    5a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5a40:	str	r0, [r8, #300]	; 0x12c
    5a44:	ldr	r1, [r8, #52]	; 0x34
    5a48:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5a4c:	ldr	r0, [r8, #4]
    5a50:	ldr	r3, [r8, #88]	; 0x58
    5a54:	sub	r2, r2, r1
    5a58:	blx	r3
    5a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5a60:	cmp	r0, r6
    5a64:	str	r0, [r8, #296]	; 0x128
    5a68:	bne	5a14 <processXmlDecl+0x2b4>
    5a6c:	mov	r4, #0
    5a70:	mov	r5, #0
    5a74:	b	5ae8 <processXmlDecl+0x388>
    5a78:	ldr	r0, [r8, #472]	; 0x1d8
    5a7c:	mov	r6, #1
    5a80:	cmp	r0, #0
    5a84:	beq	5cac <processXmlDecl+0x54c>
    5a88:	ldr	r1, [r8, #464]	; 0x1d0
    5a8c:	ldr	r0, [r8, #468]	; 0x1d4
    5a90:	cmp	r0, r1
    5a94:	bne	5aac <processXmlDecl+0x34c>
    5a98:	mov	r0, r9
    5a9c:	bl	65e4 <poolGrow>
    5aa0:	cmp	r0, #0
    5aa4:	beq	5cac <processXmlDecl+0x54c>
    5aa8:	ldr	r0, [r7]
    5aac:	add	r1, r0, #1
    5ab0:	ldr	r5, [sp, #24]
    5ab4:	str	r1, [r8, #468]	; 0x1d4
    5ab8:	mov	r1, #0
    5abc:	strb	r1, [r0]
    5ac0:	ldr	r4, [r8, #472]	; 0x1d8
    5ac4:	cmp	r4, #0
    5ac8:	beq	5cac <processXmlDecl+0x54c>
    5acc:	ldr	r0, [r8, #4]
    5ad0:	ldr	r7, [r8, #148]	; 0x94
    5ad4:	ldr	r3, [sp, #32]
    5ad8:	mov	r1, r4
    5adc:	mov	r2, r5
    5ae0:	blx	r7
    5ae4:	ldr	sl, [sp, #28]
    5ae8:	ldr	r0, [r8, #240]	; 0xf0
    5aec:	cmp	r0, #0
    5af0:	beq	5b38 <processXmlDecl+0x3d8>
    5af4:	orrs	r0, r5, r4
    5af8:	mov	r6, #0
    5afc:	beq	5cac <processXmlDecl+0x54c>
    5b00:	ldr	r0, [r8, #460]	; 0x1cc
    5b04:	cmp	r0, #0
    5b08:	beq	5b60 <processXmlDecl+0x400>
    5b0c:	ldr	r1, [r8, #456]	; 0x1c8
    5b10:	cmp	r1, #0
    5b14:	beq	5b68 <processXmlDecl+0x408>
    5b18:	mov	r2, r1
    5b1c:	ldr	r1, [r1]
    5b20:	str	r0, [r2]
    5b24:	mov	r0, r2
    5b28:	cmp	r1, #0
    5b2c:	bne	5b18 <processXmlDecl+0x3b8>
    5b30:	str	r2, [r8, #460]	; 0x1cc
    5b34:	b	5b68 <processXmlDecl+0x408>
    5b38:	ldr	r0, [sp, #44]	; 0x2c
    5b3c:	cmp	r0, #0
    5b40:	beq	5b80 <processXmlDecl+0x420>
    5b44:	ldr	r2, [r8, #152]	; 0x98
    5b48:	ldr	r1, [r0, #68]	; 0x44
    5b4c:	ldr	r2, [r2, #68]	; 0x44
    5b50:	cmp	r1, r2
    5b54:	bne	5be0 <processXmlDecl+0x480>
    5b58:	str	r0, [r8, #152]	; 0x98
    5b5c:	b	5af4 <processXmlDecl+0x394>
    5b60:	ldr	r0, [r8, #456]	; 0x1c8
    5b64:	str	r0, [r8, #460]	; 0x1cc
    5b68:	mov	r6, #0
    5b6c:	str	r6, [r8, #456]	; 0x1c8
    5b70:	str	r6, [r8, #464]	; 0x1d0
    5b74:	str	r6, [r8, #468]	; 0x1d4
    5b78:	str	r6, [r8, #472]	; 0x1d8
    5b7c:	b	5cac <processXmlDecl+0x54c>
    5b80:	ldr	r9, [fp, #-40]	; 0xffffffd8
    5b84:	cmp	r9, #0
    5b88:	beq	5af4 <processXmlDecl+0x394>
    5b8c:	cmp	r5, #0
    5b90:	str	sl, [sp, #28]
    5b94:	beq	5bf0 <processXmlDecl+0x490>
    5b98:	mov	r0, r8
    5b9c:	mov	r1, r5
    5ba0:	bl	2c18 <handleUnknownEncoding>
    5ba4:	mov	r6, r0
    5ba8:	ldr	r0, [r8, #460]	; 0x1cc
    5bac:	cmp	r0, #0
    5bb0:	beq	5c78 <processXmlDecl+0x518>
    5bb4:	ldr	r1, [r8, #456]	; 0x1c8
    5bb8:	cmp	r1, #0
    5bbc:	beq	5c80 <processXmlDecl+0x520>
    5bc0:	mov	r2, r1
    5bc4:	ldr	r1, [r1]
    5bc8:	str	r0, [r2]
    5bcc:	mov	r0, r2
    5bd0:	cmp	r1, #0
    5bd4:	bne	5bc0 <processXmlDecl+0x460>
    5bd8:	str	r2, [r8, #460]	; 0x1cc
    5bdc:	b	5c80 <processXmlDecl+0x520>
    5be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5be4:	mov	r6, #19
    5be8:	str	r0, [sl]
    5bec:	b	5cac <processXmlDecl+0x54c>
    5bf0:	ldr	r6, [r8, #152]	; 0x98
    5bf4:	mov	r1, r9
    5bf8:	add	sl, r8, #456	; 0x1c8
    5bfc:	ldr	r2, [r6, #32]
    5c00:	mov	r0, r6
    5c04:	blx	r2
    5c08:	str	r9, [fp, #-32]	; 0xffffffe0
    5c0c:	mov	r7, r8
    5c10:	mov	r4, r0
    5c14:	ldr	r0, [r7, #468]!	; 0x1d4
    5c18:	cmp	r0, #0
    5c1c:	bne	5c30 <processXmlDecl+0x4d0>
    5c20:	mov	r0, sl
    5c24:	bl	65e4 <poolGrow>
    5c28:	cmp	r0, #0
    5c2c:	beq	59fc <processXmlDecl+0x29c>
    5c30:	add	r5, r9, r4
    5c34:	sub	r9, fp, #32
    5c38:	ldr	r0, [r8, #464]	; 0x1d0
    5c3c:	ldr	r4, [r6, #60]	; 0x3c
    5c40:	mov	r1, r9
    5c44:	mov	r2, r5
    5c48:	mov	r3, r7
    5c4c:	str	r0, [sp]
    5c50:	mov	r0, r6
    5c54:	blx	r4
    5c58:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5c5c:	cmp	r0, r5
    5c60:	beq	5cb8 <processXmlDecl+0x558>
    5c64:	mov	r0, sl
    5c68:	bl	65e4 <poolGrow>
    5c6c:	cmp	r0, #0
    5c70:	bne	5c38 <processXmlDecl+0x4d8>
    5c74:	b	59fc <processXmlDecl+0x29c>
    5c78:	ldr	r0, [r8, #456]	; 0x1c8
    5c7c:	str	r0, [r8, #460]	; 0x1cc
    5c80:	mov	r0, #0
    5c84:	cmp	r6, #18
    5c88:	str	r0, [r8, #456]	; 0x1c8
    5c8c:	str	r0, [r8, #464]	; 0x1d0
    5c90:	str	r0, [r8, #468]	; 0x1d4
    5c94:	str	r0, [r8, #472]	; 0x1d8
    5c98:	bne	5cac <processXmlDecl+0x54c>
    5c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5ca0:	ldr	r1, [sp, #28]
    5ca4:	mov	r6, #18
    5ca8:	str	r0, [r1]
    5cac:	mov	r0, r6
    5cb0:	sub	sp, fp, #28
    5cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5cb8:	ldr	r0, [r8, #472]	; 0x1d8
    5cbc:	mov	r6, #1
    5cc0:	cmp	r0, #0
    5cc4:	beq	5cac <processXmlDecl+0x54c>
    5cc8:	ldr	r1, [r8, #464]	; 0x1d0
    5ccc:	ldr	r0, [r8, #468]	; 0x1d4
    5cd0:	cmp	r0, r1
    5cd4:	bne	5cec <processXmlDecl+0x58c>
    5cd8:	mov	r0, sl
    5cdc:	bl	65e4 <poolGrow>
    5ce0:	cmp	r0, #0
    5ce4:	beq	5cac <processXmlDecl+0x54c>
    5ce8:	ldr	r0, [r7]
    5cec:	add	r1, r0, #1
    5cf0:	str	r1, [r8, #468]	; 0x1d4
    5cf4:	mov	r1, #0
    5cf8:	strb	r1, [r0]
    5cfc:	ldr	r5, [r8, #472]	; 0x1d8
    5d00:	cmp	r5, #0
    5d04:	bne	5b98 <processXmlDecl+0x438>
    5d08:	b	5cac <processXmlDecl+0x54c>

00005d0c <lookup>:
    5d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5d10:	add	fp, sp, #28
    5d14:	sub	sp, sp, #36	; 0x24
    5d18:	mov	r7, r0
    5d1c:	ldr	r0, [r1, #8]
    5d20:	mov	r5, r3
    5d24:	mov	r6, r2
    5d28:	mov	r4, r1
    5d2c:	cmp	r0, #0
    5d30:	beq	5fec <lookup+0x2e0>
    5d34:	ldrb	lr, [r6]
    5d38:	ldr	r8, [r7, #512]	; 0x200
    5d3c:	str	r5, [sp, #28]
    5d40:	str	r7, [sp, #32]
    5d44:	cmp	lr, #0
    5d48:	beq	5d74 <lookup+0x68>
    5d4c:	movw	r3, #16963	; 0x4243
    5d50:	add	r2, r6, #1
    5d54:	mov	r1, lr
    5d58:	movt	r3, #15
    5d5c:	mul	r7, r8, r3
    5d60:	uxtb	r1, r1
    5d64:	eor	r8, r7, r1
    5d68:	ldrb	r1, [r2], #1
    5d6c:	cmp	r1, #0
    5d70:	bne	5d5c <lookup+0x50>
    5d74:	ldr	r2, [r4]
    5d78:	sub	r1, r0, #1
    5d7c:	str	r6, [sp, #20]
    5d80:	and	r9, r8, r1
    5d84:	ldr	r5, [r2, r9, lsl #2]
    5d88:	cmp	r5, #0
    5d8c:	beq	5e18 <lookup+0x10c>
    5d90:	rsb	r3, r0, #0
    5d94:	lsr	r1, r1, #2
    5d98:	add	sl, r6, #1
    5d9c:	and	r3, r8, r3
    5da0:	str	r1, [sp, #16]
    5da4:	str	r3, [sp, #24]
    5da8:	mov	r3, #0
    5dac:	ldr	r7, [r5]
    5db0:	ldrb	r6, [r7]
    5db4:	cmp	lr, r6
    5db8:	bne	5de0 <lookup+0xd4>
    5dbc:	add	r7, r7, #1
    5dc0:	mov	r6, sl
    5dc4:	mov	ip, lr
    5dc8:	tst	ip, #255	; 0xff
    5dcc:	beq	60e0 <lookup+0x3d4>
    5dd0:	ldrb	ip, [r6], #1
    5dd4:	ldrb	r1, [r7], #1
    5dd8:	cmp	ip, r1
    5ddc:	beq	5dc8 <lookup+0xbc>
    5de0:	tst	r3, #255	; 0xff
    5de4:	bne	5e00 <lookup+0xf4>
    5de8:	ldrb	r1, [r4, #4]
    5dec:	ldr	r3, [sp, #24]
    5df0:	ldr	r7, [sp, #16]
    5df4:	sub	r1, r1, #1
    5df8:	and	r1, r7, r3, lsr r1
    5dfc:	orr	r3, r1, #1
    5e00:	uxtb	r1, r3
    5e04:	subs	r9, r9, r1
    5e08:	addcc	r9, r9, r0
    5e0c:	ldr	r5, [r2, r9, lsl #2]
    5e10:	cmp	r5, #0
    5e14:	bne	5dac <lookup+0xa0>
    5e18:	ldr	r0, [sp, #28]
    5e1c:	cmp	r0, #0
    5e20:	beq	60d0 <lookup+0x3c4>
    5e24:	ldrb	r0, [r4, #4]
    5e28:	ldr	r1, [r4, #12]
    5e2c:	mov	r5, #0
    5e30:	sub	r2, r0, #1
    5e34:	cmp	r5, r1, lsr r2
    5e38:	beq	6074 <lookup+0x368>
    5e3c:	ldr	r1, [r4, #16]
    5e40:	add	r0, r0, #1
    5e44:	mov	r9, #1
    5e48:	uxtb	r7, r0
    5e4c:	str	r0, [sp, #4]
    5e50:	lsl	sl, r9, r7
    5e54:	lsl	r0, sl, #2
    5e58:	ldr	r1, [r1]
    5e5c:	str	r0, [sp, #16]
    5e60:	blx	r1
    5e64:	cmp	r0, #0
    5e68:	beq	60e0 <lookup+0x3d4>
    5e6c:	ldr	r2, [sp, #16]
    5e70:	mov	r6, r0
    5e74:	mvn	r0, #0
    5e78:	mov	r1, #0
    5e7c:	str	r7, [sp]
    5e80:	add	r0, r0, r9, lsl r7
    5e84:	mov	r9, #0
    5e88:	str	r0, [sp, #24]
    5e8c:	mov	r0, r6
    5e90:	bl	0 <memset>
    5e94:	ldr	lr, [r4, #8]
    5e98:	cmp	lr, #0
    5e9c:	beq	5f78 <lookup+0x26c>
    5ea0:	ldr	r0, [sp, #24]
    5ea4:	ldr	r1, [sp]
    5ea8:	lsr	r0, r0, #2
    5eac:	str	r0, [sp, #16]
    5eb0:	sub	r0, r1, #1
    5eb4:	movw	r1, #16963	; 0x4243
    5eb8:	str	r0, [sp, #12]
    5ebc:	rsb	r0, sl, #0
    5ec0:	movt	r1, #15
    5ec4:	str	r0, [sp, #8]
    5ec8:	ldr	r2, [r4]
    5ecc:	ldr	r2, [r2, r9, lsl #2]
    5ed0:	cmp	r2, #0
    5ed4:	beq	5f6c <lookup+0x260>
    5ed8:	ldr	r3, [sp, #32]
    5edc:	ldr	r5, [r2]
    5ee0:	ldr	r7, [r3, #512]	; 0x200
    5ee4:	ldrb	r3, [r5]
    5ee8:	cmp	r3, #0
    5eec:	beq	5f14 <lookup+0x208>
    5ef0:	ldr	r0, [sp, #24]
    5ef4:	add	r5, r5, #1
    5ef8:	mul	r7, r7, r1
    5efc:	uxtb	r3, r3
    5f00:	eor	r7, r7, r3
    5f04:	ldrb	r3, [r5], #1
    5f08:	cmp	r3, #0
    5f0c:	bne	5ef8 <lookup+0x1ec>
    5f10:	b	5f18 <lookup+0x20c>
    5f14:	ldr	r0, [sp, #24]
    5f18:	and	ip, r7, r0
    5f1c:	mov	r3, r6
    5f20:	ldr	r5, [r3, ip, lsl #2]!
    5f24:	cmp	r5, #0
    5f28:	beq	5f68 <lookup+0x25c>
    5f2c:	ldr	r0, [sp, #8]
    5f30:	ldr	r5, [sp, #12]
    5f34:	and	r3, r7, r0
    5f38:	ldr	r0, [sp, #16]
    5f3c:	and	r3, r0, r3, lsr r5
    5f40:	mov	r5, #0
    5f44:	tst	r5, #255	; 0xff
    5f48:	orreq	r5, r3, #1
    5f4c:	uxtb	r7, r5
    5f50:	subs	ip, ip, r7
    5f54:	addcc	ip, ip, sl
    5f58:	ldr	r7, [r6, ip, lsl #2]
    5f5c:	cmp	r7, #0
    5f60:	bne	5f44 <lookup+0x238>
    5f64:	add	r3, r6, ip, lsl #2
    5f68:	str	r2, [r3]
    5f6c:	add	r9, r9, #1
    5f70:	cmp	r9, lr
    5f74:	bcc	5ec8 <lookup+0x1bc>
    5f78:	ldr	r1, [r4, #16]
    5f7c:	ldr	r0, [r4]
    5f80:	ldr	r1, [r1, #8]
    5f84:	blx	r1
    5f88:	ldr	r0, [sp, #4]
    5f8c:	ldr	r2, [sp, #24]
    5f90:	strb	r0, [r4, #4]
    5f94:	str	r6, [r4]
    5f98:	str	sl, [r4, #8]
    5f9c:	and	r9, r2, r8
    5fa0:	ldr	r0, [r6, r9, lsl #2]
    5fa4:	cmp	r0, #0
    5fa8:	beq	6074 <lookup+0x368>
    5fac:	ldr	r1, [sp]
    5fb0:	rsb	r0, sl, #0
    5fb4:	lsr	r2, r2, #2
    5fb8:	and	r0, r8, r0
    5fbc:	sub	r1, r1, #1
    5fc0:	and	r0, r2, r0, lsr r1
    5fc4:	mov	r1, #0
    5fc8:	tst	r1, #255	; 0xff
    5fcc:	orreq	r1, r0, #1
    5fd0:	uxtb	r2, r1
    5fd4:	subs	r9, r9, r2
    5fd8:	addcc	r9, r9, sl
    5fdc:	ldr	r2, [r6, r9, lsl #2]
    5fe0:	cmp	r2, #0
    5fe4:	bne	5fc8 <lookup+0x2bc>
    5fe8:	b	6074 <lookup+0x368>
    5fec:	cmp	r5, #0
    5ff0:	beq	60d0 <lookup+0x3c4>
    5ff4:	mov	r0, #64	; 0x40
    5ff8:	str	r0, [r4, #8]
    5ffc:	mov	r0, #6
    6000:	strb	r0, [r4, #4]
    6004:	ldr	r0, [r4, #16]
    6008:	ldr	r1, [r0]
    600c:	mov	r0, #256	; 0x100
    6010:	blx	r1
    6014:	cmp	r0, #0
    6018:	str	r0, [r4]
    601c:	beq	60d8 <lookup+0x3cc>
    6020:	mov	r1, #0
    6024:	mov	r2, #256	; 0x100
    6028:	bl	0 <memset>
    602c:	ldrb	r1, [r6]
    6030:	ldr	r0, [r7, #512]	; 0x200
    6034:	str	r6, [sp, #20]
    6038:	str	r5, [sp, #28]
    603c:	cmp	r1, #0
    6040:	beq	6068 <lookup+0x35c>
    6044:	movw	r3, #16963	; 0x4243
    6048:	add	r2, r6, #1
    604c:	movt	r3, #15
    6050:	mul	r0, r0, r3
    6054:	uxtb	r1, r1
    6058:	eor	r0, r0, r1
    605c:	ldrb	r1, [r2], #1
    6060:	cmp	r1, #0
    6064:	bne	6050 <lookup+0x344>
    6068:	ldr	r1, [r4, #8]
    606c:	sub	r1, r1, #1
    6070:	and	r9, r1, r0
    6074:	ldr	r0, [r4, #16]
    6078:	ldr	r5, [sp, #28]
    607c:	ldr	r1, [r0]
    6080:	mov	r0, r5
    6084:	blx	r1
    6088:	ldr	r1, [r4]
    608c:	str	r0, [r1, r9, lsl #2]
    6090:	ldr	r0, [r4]
    6094:	ldr	r0, [r0, r9, lsl #2]
    6098:	cmp	r0, #0
    609c:	beq	60d0 <lookup+0x3c4>
    60a0:	mov	r1, #0
    60a4:	mov	r2, r5
    60a8:	bl	0 <memset>
    60ac:	ldr	r0, [r4]
    60b0:	ldr	r2, [sp, #20]
    60b4:	ldr	r1, [r0, r9, lsl #2]
    60b8:	str	r2, [r1]
    60bc:	ldr	r1, [r4, #12]
    60c0:	add	r1, r1, #1
    60c4:	str	r1, [r4, #12]
    60c8:	ldr	r5, [r0, r9, lsl #2]
    60cc:	b	60e0 <lookup+0x3d4>
    60d0:	mov	r5, #0
    60d4:	b	60e0 <lookup+0x3d4>
    60d8:	mov	r5, #0
    60dc:	str	r5, [r4, #8]
    60e0:	mov	r0, r5
    60e4:	sub	sp, fp, #28
    60e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000060ec <normalizePublicId>:
    60ec:	push	{fp, lr}
    60f0:	mov	fp, sp
    60f4:	mov	ip, #32
    60f8:	mov	r1, r0
    60fc:	mov	lr, r0
    6100:	b	6108 <normalizePublicId+0x1c>
    6104:	add	lr, lr, #1
    6108:	mov	r3, r1
    610c:	ldrb	r1, [lr]
    6110:	cmp	r1, #32
    6114:	bhi	61c0 <normalizePublicId+0xd4>
    6118:	add	r2, pc, #0
    611c:	ldr	pc, [r2, r1, lsl #2]
    6120:	.word	0x000061cc
    6124:	.word	0x000061c0
    6128:	.word	0x000061c0
    612c:	.word	0x000061c0
    6130:	.word	0x000061c0
    6134:	.word	0x000061c0
    6138:	.word	0x000061c0
    613c:	.word	0x000061c0
    6140:	.word	0x000061c0
    6144:	.word	0x000061c0
    6148:	.word	0x000061a4
    614c:	.word	0x000061c0
    6150:	.word	0x000061c0
    6154:	.word	0x000061a4
    6158:	.word	0x000061c0
    615c:	.word	0x000061c0
    6160:	.word	0x000061c0
    6164:	.word	0x000061c0
    6168:	.word	0x000061c0
    616c:	.word	0x000061c0
    6170:	.word	0x000061c0
    6174:	.word	0x000061c0
    6178:	.word	0x000061c0
    617c:	.word	0x000061c0
    6180:	.word	0x000061c0
    6184:	.word	0x000061c0
    6188:	.word	0x000061c0
    618c:	.word	0x000061c0
    6190:	.word	0x000061c0
    6194:	.word	0x000061c0
    6198:	.word	0x000061c0
    619c:	.word	0x000061c0
    61a0:	.word	0x000061a4
    61a4:	cmp	r3, r0
    61a8:	mov	r1, r0
    61ac:	beq	6104 <normalizePublicId+0x18>
    61b0:	ldrb	r1, [r3, #-1]
    61b4:	cmp	r1, #32
    61b8:	strbne	ip, [r3], #1
    61bc:	b	61c4 <normalizePublicId+0xd8>
    61c0:	strb	r1, [r3], #1
    61c4:	mov	r1, r3
    61c8:	b	6104 <normalizePublicId+0x18>
    61cc:	cmp	r3, r0
    61d0:	beq	61e4 <normalizePublicId+0xf8>
    61d4:	mov	r0, r3
    61d8:	ldrb	r1, [r0, #-1]!
    61dc:	cmp	r1, #32
    61e0:	movne	r0, r3
    61e4:	mov	r1, #0
    61e8:	strb	r1, [r0]
    61ec:	pop	{fp, pc}

000061f0 <contentProcessor>:
    61f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    61f4:	add	fp, sp, #24
    61f8:	sub	sp, sp, #16
    61fc:	mov	r8, r0
    6200:	ldr	r5, [r0, #152]	; 0x98
    6204:	ldrb	r0, [r0, #500]	; 0x1f4
    6208:	mov	r6, r1
    620c:	stm	sp, {r2, r3}
    6210:	mov	r1, #0
    6214:	mov	r3, r6
    6218:	clz	r0, r0
    621c:	mov	r2, r5
    6220:	lsr	r0, r0, #5
    6224:	str	r0, [sp, #8]
    6228:	mov	r0, r8
    622c:	bl	798c <doContent>
    6230:	cmp	r0, #0
    6234:	beq	6240 <contentProcessor+0x50>
    6238:	sub	sp, fp, #24
    623c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6240:	ldr	r7, [r8, #372]	; 0x174
    6244:	b	6258 <contentProcessor+0x68>
    6248:	mov	r0, r6
    624c:	bl	0 <memcpy>
    6250:	str	r6, [r7, #4]
    6254:	ldr	r7, [r7]
    6258:	cmp	r7, #0
    625c:	ldrne	r2, [r7, #24]
    6260:	ldrne	r0, [r7, #36]	; 0x24
    6264:	ldrne	r1, [r7, #4]
    6268:	addne	r4, r2, #1
    626c:	addne	r6, r0, r4
    6270:	cmpne	r1, r6
    6274:	beq	62e0 <contentProcessor+0xf0>
    6278:	ldr	r3, [r7, #40]	; 0x28
    627c:	ldr	r2, [r7, #8]
    6280:	add	r5, r2, r4
    6284:	sub	r3, r3, r0
    6288:	cmp	r5, r3
    628c:	ble	6248 <contentProcessor+0x58>
    6290:	ldr	r2, [r8, #16]
    6294:	mov	r1, r5
    6298:	blx	r2
    629c:	cmp	r0, #0
    62a0:	beq	62ec <contentProcessor+0xfc>
    62a4:	ldr	r2, [r7, #12]
    62a8:	ldr	r1, [r7, #36]	; 0x24
    62ac:	add	r6, r0, r4
    62b0:	cmp	r2, r1
    62b4:	streq	r0, [r7, #12]
    62b8:	ldr	r2, [r7, #16]
    62bc:	cmp	r2, #0
    62c0:	subne	r1, r2, r1
    62c4:	addne	r1, r0, r1
    62c8:	strne	r1, [r7, #16]
    62cc:	add	r1, r0, r5
    62d0:	str	r0, [r7, #36]	; 0x24
    62d4:	str	r1, [r7, #40]	; 0x28
    62d8:	ldmib	r7, {r1, r2}
    62dc:	b	6248 <contentProcessor+0x58>
    62e0:	mov	r0, #0
    62e4:	sub	sp, fp, #24
    62e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    62ec:	mov	r0, #1
    62f0:	sub	sp, fp, #24
    62f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000062f8 <getAttributeId>:
    62f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62fc:	add	fp, sp, #28
    6300:	sub	sp, sp, #12
    6304:	ldr	sl, [r0, #364]	; 0x16c
    6308:	mov	r5, r1
    630c:	str	r0, [sp, #4]
    6310:	mov	r7, r3
    6314:	mov	r4, r2
    6318:	mov	r8, sl
    631c:	ldr	r1, [sl, #88]	; 0x58
    6320:	add	r9, sl, #80	; 0x50
    6324:	ldr	r0, [r8, #92]!	; 0x5c
    6328:	cmp	r0, r1
    632c:	bne	6344 <getAttributeId+0x4c>
    6330:	mov	r0, r9
    6334:	bl	65e4 <poolGrow>
    6338:	cmp	r0, #0
    633c:	beq	63b4 <getAttributeId+0xbc>
    6340:	ldr	r0, [r8]
    6344:	add	r1, r0, #1
    6348:	str	r1, [r8]
    634c:	mov	r1, #0
    6350:	strb	r1, [r0]
    6354:	str	r4, [sp, #8]
    6358:	ldr	r0, [r8]
    635c:	cmp	r0, #0
    6360:	bne	6374 <getAttributeId+0x7c>
    6364:	mov	r0, r9
    6368:	bl	65e4 <poolGrow>
    636c:	cmp	r0, #0
    6370:	beq	63b4 <getAttributeId+0xbc>
    6374:	add	r6, sp, #8
    6378:	ldr	r0, [sl, #88]	; 0x58
    637c:	ldr	r4, [r5, #60]	; 0x3c
    6380:	mov	r1, r6
    6384:	mov	r2, r7
    6388:	mov	r3, r8
    638c:	str	r0, [sp]
    6390:	mov	r0, r5
    6394:	blx	r4
    6398:	ldr	r0, [sp, #8]
    639c:	cmp	r0, r7
    63a0:	beq	63c4 <getAttributeId+0xcc>
    63a4:	mov	r0, r9
    63a8:	bl	65e4 <poolGrow>
    63ac:	cmp	r0, #0
    63b0:	bne	6378 <getAttributeId+0x80>
    63b4:	mov	r7, #0
    63b8:	mov	r0, r7
    63bc:	sub	sp, fp, #28
    63c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    63c4:	ldr	r0, [sl, #96]	; 0x60
    63c8:	mov	r7, #0
    63cc:	cmp	r0, #0
    63d0:	beq	63b8 <getAttributeId+0xc0>
    63d4:	ldr	r1, [sl, #88]	; 0x58
    63d8:	ldr	r0, [sl, #92]	; 0x5c
    63dc:	cmp	r0, r1
    63e0:	bne	63f8 <getAttributeId+0x100>
    63e4:	mov	r0, r9
    63e8:	bl	65e4 <poolGrow>
    63ec:	cmp	r0, #0
    63f0:	beq	63b8 <getAttributeId+0xc0>
    63f4:	ldr	r0, [r8]
    63f8:	add	r1, r0, #1
    63fc:	mov	r7, #0
    6400:	str	r1, [sl, #92]	; 0x5c
    6404:	strb	r7, [r0]
    6408:	ldr	r6, [sl, #96]	; 0x60
    640c:	cmp	r6, #0
    6410:	beq	63b8 <getAttributeId+0xc0>
    6414:	ldr	r0, [sp, #4]
    6418:	add	r5, r6, #1
    641c:	add	r1, sl, #40	; 0x28
    6420:	mov	r3, #12
    6424:	mov	r2, r5
    6428:	bl	5d0c <lookup>
    642c:	cmp	r0, #0
    6430:	beq	63b8 <getAttributeId+0xc0>
    6434:	mov	r4, r0
    6438:	ldr	r0, [r0]
    643c:	cmp	r0, r5
    6440:	beq	6454 <getAttributeId+0x15c>
    6444:	ldr	r0, [sl, #96]	; 0x60
    6448:	str	r0, [sl, #92]	; 0x5c
    644c:	mov	r7, r4
    6450:	b	63b8 <getAttributeId+0xc0>
    6454:	ldr	r0, [sl, #92]	; 0x5c
    6458:	ldr	r1, [sp, #4]
    645c:	str	r0, [sl, #96]	; 0x60
    6460:	ldrb	r1, [r1, #244]	; 0xf4
    6464:	cmp	r1, #0
    6468:	beq	644c <getAttributeId+0x154>
    646c:	ldrb	r1, [r5]
    6470:	cmp	r1, #120	; 0x78
    6474:	ldrbeq	r2, [r6, #2]
    6478:	cmpeq	r2, #109	; 0x6d
    647c:	beq	6578 <getAttributeId+0x280>
    6480:	add	r3, r6, #2
    6484:	mov	r2, #0
    6488:	b	6494 <getAttributeId+0x19c>
    648c:	ldrb	r1, [r3, -r2]
    6490:	sub	r2, r2, #1
    6494:	uxtb	r1, r1
    6498:	cmp	r1, #0
    649c:	beq	644c <getAttributeId+0x154>
    64a0:	cmp	r1, #58	; 0x3a
    64a4:	bne	648c <getAttributeId+0x194>
    64a8:	ldr	r1, [sl, #88]	; 0x58
    64ac:	cmp	r2, #0
    64b0:	sub	r1, r1, r0
    64b4:	clz	r1, r1
    64b8:	lsr	r1, r1, #5
    64bc:	beq	6514 <getAttributeId+0x21c>
    64c0:	rsb	r6, r2, #0
    64c4:	mov	r7, #0
    64c8:	tst	r1, #1
    64cc:	beq	64e4 <getAttributeId+0x1ec>
    64d0:	mov	r0, r9
    64d4:	bl	65e4 <poolGrow>
    64d8:	cmp	r0, #0
    64dc:	beq	63b4 <getAttributeId+0xbc>
    64e0:	ldr	r0, [r8]
    64e4:	ldrb	r1, [r5, r7]
    64e8:	add	r2, r0, #1
    64ec:	add	r7, r7, #1
    64f0:	str	r2, [sl, #92]	; 0x5c
    64f4:	cmp	r7, r6
    64f8:	strb	r1, [r0]
    64fc:	ldr	r1, [sl, #88]	; 0x58
    6500:	ldr	r0, [sl, #92]	; 0x5c
    6504:	sub	r1, r0, r1
    6508:	clz	r1, r1
    650c:	lsr	r1, r1, #5
    6510:	bcc	64c8 <getAttributeId+0x1d0>
    6514:	cmp	r1, #0
    6518:	beq	6530 <getAttributeId+0x238>
    651c:	mov	r0, r9
    6520:	bl	65e4 <poolGrow>
    6524:	cmp	r0, #0
    6528:	beq	63b4 <getAttributeId+0xbc>
    652c:	ldr	r0, [r8]
    6530:	add	r1, r0, #1
    6534:	mov	r7, #0
    6538:	mov	r3, #8
    653c:	str	r1, [sl, #92]	; 0x5c
    6540:	strb	r7, [r0]
    6544:	ldr	r0, [sp, #4]
    6548:	add	r1, sl, #60	; 0x3c
    654c:	ldr	r2, [sl, #96]	; 0x60
    6550:	bl	5d0c <lookup>
    6554:	cmp	r0, #0
    6558:	str	r0, [r4, #4]
    655c:	beq	63b8 <getAttributeId+0xc0>
    6560:	ldr	r1, [sl, #96]	; 0x60
    6564:	ldr	r0, [r0]
    6568:	cmp	r0, r1
    656c:	beq	65b4 <getAttributeId+0x2bc>
    6570:	str	r1, [r8]
    6574:	b	644c <getAttributeId+0x154>
    6578:	ldrb	r2, [r6, #3]
    657c:	cmp	r2, #108	; 0x6c
    6580:	bne	6480 <getAttributeId+0x188>
    6584:	ldrb	r2, [r6, #4]
    6588:	cmp	r2, #110	; 0x6e
    658c:	ldrbeq	r2, [r6, #5]
    6590:	cmpeq	r2, #115	; 0x73
    6594:	bne	6480 <getAttributeId+0x188>
    6598:	ldrb	r2, [r6, #6]
    659c:	cmp	r2, #58	; 0x3a
    65a0:	beq	65c0 <getAttributeId+0x2c8>
    65a4:	cmp	r2, #0
    65a8:	bne	6480 <getAttributeId+0x188>
    65ac:	add	r0, sl, #152	; 0x98
    65b0:	b	65d4 <getAttributeId+0x2dc>
    65b4:	ldr	r0, [sl, #92]	; 0x5c
    65b8:	str	r0, [sl, #96]	; 0x60
    65bc:	b	644c <getAttributeId+0x154>
    65c0:	ldr	r0, [sp, #4]
    65c4:	add	r1, sl, #60	; 0x3c
    65c8:	add	r2, r6, #7
    65cc:	mov	r3, #8
    65d0:	bl	5d0c <lookup>
    65d4:	str	r0, [r4, #4]
    65d8:	mov	r0, #1
    65dc:	strb	r0, [r4, #9]
    65e0:	b	644c <getAttributeId+0x154>

000065e4 <poolGrow>:
    65e4:	push	{r4, r5, r6, sl, fp, lr}
    65e8:	add	fp, sp, #16
    65ec:	ldr	r3, [r0, #4]
    65f0:	mov	r4, r0
    65f4:	cmp	r3, #0
    65f8:	beq	6660 <poolGrow+0x7c>
    65fc:	ldr	r1, [r4, #16]
    6600:	cmp	r1, #0
    6604:	beq	66dc <poolGrow+0xf8>
    6608:	ldr	r0, [r4, #8]
    660c:	sub	r2, r0, r1
    6610:	ldr	r0, [r3, #4]
    6614:	cmp	r2, r0
    6618:	bge	6660 <poolGrow+0x7c>
    661c:	ldr	r5, [r4]
    6620:	ldr	r6, [r3]
    6624:	mov	r0, r3
    6628:	str	r5, [r0], #8
    662c:	stm	r4, {r3, r6}
    6630:	bl	0 <memcpy>
    6634:	ldr	r0, [r4]
    6638:	ldr	r1, [r4, #12]
    663c:	ldr	r2, [r4, #16]
    6640:	add	r3, r0, #8
    6644:	sub	r1, r1, r2
    6648:	add	r1, r3, r1
    664c:	str	r3, [r4, #16]
    6650:	str	r1, [r4, #12]
    6654:	ldr	r0, [r0, #4]
    6658:	add	r0, r3, r0
    665c:	b	6704 <poolGrow+0x120>
    6660:	ldr	r0, [r4]
    6664:	cmp	r0, #0
    6668:	beq	6710 <poolGrow+0x12c>
    666c:	ldr	r1, [r4, #16]
    6670:	add	r2, r0, #8
    6674:	cmp	r1, r2
    6678:	bne	6714 <poolGrow+0x130>
    667c:	ldr	r2, [r4, #8]
    6680:	ldr	r3, [r4, #20]
    6684:	sub	r5, r2, r1
    6688:	ldr	r2, [r3, #4]
    668c:	mov	r1, #8
    6690:	add	r1, r1, r5, lsl #1
    6694:	blx	r2
    6698:	cmp	r0, #0
    669c:	moveq	r0, #0
    66a0:	popeq	{r4, r5, r6, sl, fp, pc}
    66a4:	lsl	r1, r5, #1
    66a8:	str	r0, [r4]
    66ac:	str	r1, [r0, #4]
    66b0:	add	r0, r0, #8
    66b4:	add	r1, r0, r1
    66b8:	str	r1, [r4, #8]
    66bc:	ldr	r1, [r4, #12]
    66c0:	ldr	r2, [r4, #16]
    66c4:	str	r0, [r4, #16]
    66c8:	sub	r1, r1, r2
    66cc:	add	r0, r0, r1
    66d0:	str	r0, [r4, #12]
    66d4:	mov	r0, #1
    66d8:	pop	{r4, r5, r6, sl, fp, pc}
    66dc:	str	r3, [r4]
    66e0:	ldr	r0, [r3]
    66e4:	str	r0, [r4, #4]
    66e8:	mov	r0, #0
    66ec:	str	r0, [r3]
    66f0:	add	r0, r3, #8
    66f4:	str	r0, [r4, #16]
    66f8:	ldr	r1, [r3, #4]
    66fc:	str	r0, [r4, #12]
    6700:	add	r0, r0, r1
    6704:	str	r0, [r4, #8]
    6708:	mov	r0, #1
    670c:	pop	{r4, r5, r6, sl, fp, pc}
    6710:	ldr	r1, [r4, #16]
    6714:	ldr	r0, [r4, #8]
    6718:	ldr	r2, [r4, #20]
    671c:	sub	r0, r0, r1
    6720:	ldr	r1, [r2]
    6724:	lsl	r6, r0, #1
    6728:	cmp	r0, #1024	; 0x400
    672c:	movwlt	r6, #1024	; 0x400
    6730:	add	r0, r6, #8
    6734:	blx	r1
    6738:	cmp	r0, #0
    673c:	moveq	r0, #0
    6740:	popeq	{r4, r5, r6, sl, fp, pc}
    6744:	str	r6, [r0, #4]
    6748:	add	r5, r0, #8
    674c:	ldr	r1, [r4]
    6750:	str	r1, [r0]
    6754:	str	r0, [r4]
    6758:	ldr	r0, [r4, #12]
    675c:	ldr	r1, [r4, #16]
    6760:	cmp	r0, r1
    6764:	beq	677c <poolGrow+0x198>
    6768:	sub	r2, r0, r1
    676c:	mov	r0, r5
    6770:	bl	0 <memcpy>
    6774:	ldr	r0, [r4, #12]
    6778:	ldr	r1, [r4, #16]
    677c:	sub	r0, r0, r1
    6780:	add	r1, r5, r6
    6784:	add	r0, r5, r0
    6788:	str	r1, [r4, #8]
    678c:	str	r0, [r4, #12]
    6790:	mov	r0, #1
    6794:	str	r5, [r4, #16]
    6798:	pop	{r4, r5, r6, sl, fp, pc}

0000679c <storeEntityValue>:
    679c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67a0:	add	fp, sp, #28
    67a4:	sub	sp, sp, #60	; 0x3c
    67a8:	ldr	r9, [r0, #364]	; 0x16c
    67ac:	mov	r4, r0
    67b0:	ldr	r5, [r0, #284]	; 0x11c
    67b4:	mov	r0, #1
    67b8:	mov	r7, r2
    67bc:	mov	r8, r1
    67c0:	str	r3, [fp, #-40]	; 0xffffffd8
    67c4:	str	r0, [r4, #284]	; 0x11c
    67c8:	mov	r6, r9
    67cc:	ldr	r0, [r6, #104]!	; 0x68
    67d0:	cmp	r0, #0
    67d4:	bne	67e8 <storeEntityValue+0x4c>
    67d8:	mov	r0, r6
    67dc:	bl	65e4 <poolGrow>
    67e0:	cmp	r0, #0
    67e4:	beq	6d18 <storeEntityValue+0x57c>
    67e8:	add	r0, r4, #444	; 0x1bc
    67ec:	str	r4, [sp, #36]	; 0x24
    67f0:	str	r6, [sp, #32]
    67f4:	str	r5, [sp, #40]	; 0x28
    67f8:	str	r0, [sp, #28]
    67fc:	add	r0, r4, #432	; 0x1b0
    6800:	sub	r4, fp, #36	; 0x24
    6804:	str	r0, [sp, #24]
    6808:	add	r0, r9, #116	; 0x74
    680c:	str	r0, [sp, #44]	; 0x2c
    6810:	b	6850 <storeEntityValue+0xb4>
    6814:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6818:	b	6850 <storeEntityValue+0xb4>
    681c:	mov	r1, #1
    6820:	strb	r1, [r4, #32]
    6824:	ldr	r1, [r0, #236]	; 0xec
    6828:	ldmib	r4, {r2, r3}
    682c:	add	r3, r2, r3
    6830:	bl	679c <storeEntityValue>
    6834:	mov	sl, r0
    6838:	mov	r0, #0
    683c:	strb	r0, [r4, #32]
    6840:	cmp	sl, #0
    6844:	sub	r4, fp, #36	; 0x24
    6848:	beq	6814 <storeEntityValue+0x78>
    684c:	b	6d04 <storeEntityValue+0x568>
    6850:	ldr	r6, [r8, #20]
    6854:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6858:	mov	r0, r8
    685c:	mov	r1, r7
    6860:	mov	r3, r4
    6864:	blx	r6
    6868:	add	r0, r0, #4
    686c:	cmp	r0, #32
    6870:	bhi	6d3c <storeEntityValue+0x5a0>
    6874:	add	r1, pc, #4
    6878:	mov	sl, #0
    687c:	ldr	pc, [r1, r0, lsl #2]
    6880:	.word	0x00006d04
    6884:	.word	0x00006928
    6888:	.word	0x00006d3c
    688c:	.word	0x00006d48
    6890:	.word	0x00006d54
    6894:	.word	0x00006d3c
    6898:	.word	0x00006d3c
    689c:	.word	0x00006d3c
    68a0:	.word	0x00006d3c
    68a4:	.word	0x00006d3c
    68a8:	.word	0x00006904
    68ac:	.word	0x00006934
    68b0:	.word	0x00006d3c
    68b4:	.word	0x00006904
    68b8:	.word	0x00006974
    68bc:	.word	0x00006d3c
    68c0:	.word	0x00006d3c
    68c4:	.word	0x00006d3c
    68c8:	.word	0x00006d3c
    68cc:	.word	0x00006d3c
    68d0:	.word	0x00006d3c
    68d4:	.word	0x00006d3c
    68d8:	.word	0x00006d3c
    68dc:	.word	0x00006d3c
    68e0:	.word	0x00006d3c
    68e4:	.word	0x00006d3c
    68e8:	.word	0x00006d3c
    68ec:	.word	0x00006d3c
    68f0:	.word	0x00006d3c
    68f4:	.word	0x00006d3c
    68f8:	.word	0x00006d3c
    68fc:	.word	0x00006d3c
    6900:	.word	0x00006a08
    6904:	str	r7, [fp, #-32]	; 0xffffffe0
    6908:	ldr	r7, [sp, #44]	; 0x2c
    690c:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6910:	ldr	sl, [sp, #32]
    6914:	sub	r5, fp, #32
    6918:	ldr	r0, [r7]
    691c:	cmp	r0, #0
    6920:	bne	6cb4 <storeEntityValue+0x518>
    6924:	b	6ca4 <storeEntityValue+0x508>
    6928:	ldr	r0, [r8, #68]	; 0x44
    692c:	add	r0, r7, r0
    6930:	str	r0, [fp, #-36]	; 0xffffffdc
    6934:	ldr	r1, [r9, #112]	; 0x70
    6938:	ldr	r0, [r9, #116]	; 0x74
    693c:	ldr	r6, [sp, #44]	; 0x2c
    6940:	cmp	r1, r0
    6944:	bne	695c <storeEntityValue+0x1c0>
    6948:	ldr	r0, [sp, #32]
    694c:	bl	65e4 <poolGrow>
    6950:	cmp	r0, #0
    6954:	beq	6cf4 <storeEntityValue+0x558>
    6958:	ldr	r0, [r6]
    695c:	add	r1, r0, #1
    6960:	str	r1, [r6]
    6964:	mov	r1, #10
    6968:	strb	r1, [r0]
    696c:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6970:	b	6850 <storeEntityValue+0xb4>
    6974:	ldr	r2, [r8, #44]	; 0x2c
    6978:	mov	r0, r8
    697c:	mov	r1, r7
    6980:	blx	r2
    6984:	cmn	r0, #1
    6988:	ble	6d70 <storeEntityValue+0x5d4>
    698c:	mov	r6, r7
    6990:	sub	r7, fp, #32
    6994:	mov	r1, r7
    6998:	bl	0 <coda_XmlUtf8Encode>
    699c:	cmp	r0, #0
    69a0:	beq	6d88 <storeEntityValue+0x5ec>
    69a4:	ldr	sl, [sp, #32]
    69a8:	ldr	r5, [sp, #44]	; 0x2c
    69ac:	mov	r4, r0
    69b0:	cmp	r0, #1
    69b4:	blt	69fc <storeEntityValue+0x260>
    69b8:	mov	r6, #0
    69bc:	ldr	r1, [r9, #112]	; 0x70
    69c0:	ldr	r0, [r9, #116]	; 0x74
    69c4:	cmp	r1, r0
    69c8:	bne	69e0 <storeEntityValue+0x244>
    69cc:	mov	r0, sl
    69d0:	bl	65e4 <poolGrow>
    69d4:	cmp	r0, #0
    69d8:	beq	6cfc <storeEntityValue+0x560>
    69dc:	ldr	r0, [r5]
    69e0:	ldrb	r1, [r7, r6]
    69e4:	add	r6, r6, #1
    69e8:	add	r2, r0, #1
    69ec:	cmp	r6, r4
    69f0:	str	r2, [r5]
    69f4:	strb	r1, [r0]
    69f8:	blt	69bc <storeEntityValue+0x220>
    69fc:	ldr	r5, [sp, #40]	; 0x28
    6a00:	sub	r4, fp, #36	; 0x24
    6a04:	b	6814 <storeEntityValue+0x78>
    6a08:	ldr	sl, [sp, #36]	; 0x24
    6a0c:	ldrb	r0, [sl, #504]	; 0x1f8
    6a10:	cmp	r0, #0
    6a14:	bne	6a24 <storeEntityValue+0x288>
    6a18:	ldr	r0, [sl, #152]	; 0x98
    6a1c:	cmp	r0, r8
    6a20:	beq	6db8 <storeEntityValue+0x61c>
    6a24:	ldr	r4, [r8, #68]	; 0x44
    6a28:	ldr	r5, [sp, #28]
    6a2c:	str	r7, [sp, #12]
    6a30:	ldr	r6, [fp, #-36]	; 0xffffffdc
    6a34:	add	r0, r7, r4
    6a38:	ldr	r7, [sp, #24]
    6a3c:	str	r0, [fp, #-32]	; 0xffffffe0
    6a40:	ldr	r0, [r5]
    6a44:	cmp	r0, #0
    6a48:	bne	6a5c <storeEntityValue+0x2c0>
    6a4c:	mov	r0, r7
    6a50:	bl	65e4 <poolGrow>
    6a54:	cmp	r0, #0
    6a58:	beq	6cfc <storeEntityValue+0x560>
    6a5c:	sub	r4, r6, r4
    6a60:	ldr	r0, [sl, #440]	; 0x1b8
    6a64:	ldr	r6, [r8, #60]	; 0x3c
    6a68:	sub	r1, fp, #32
    6a6c:	mov	r2, r4
    6a70:	mov	r3, r5
    6a74:	str	r0, [sp]
    6a78:	mov	r0, r8
    6a7c:	blx	r6
    6a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a84:	cmp	r0, r4
    6a88:	beq	6aa0 <storeEntityValue+0x304>
    6a8c:	mov	r0, r7
    6a90:	bl	65e4 <poolGrow>
    6a94:	cmp	r0, #0
    6a98:	bne	6a60 <storeEntityValue+0x2c4>
    6a9c:	b	6cfc <storeEntityValue+0x560>
    6aa0:	ldr	r0, [sl, #448]	; 0x1c0
    6aa4:	mov	r7, sl
    6aa8:	mov	sl, #1
    6aac:	cmp	r0, #0
    6ab0:	beq	6d00 <storeEntityValue+0x564>
    6ab4:	ldr	r1, [r7, #440]	; 0x1b8
    6ab8:	ldr	r0, [r7, #444]	; 0x1bc
    6abc:	cmp	r0, r1
    6ac0:	bne	6ae0 <storeEntityValue+0x344>
    6ac4:	ldr	r0, [sp, #24]
    6ac8:	bl	65e4 <poolGrow>
    6acc:	cmp	r0, #0
    6ad0:	beq	6d00 <storeEntityValue+0x564>
    6ad4:	ldr	r0, [sp, #28]
    6ad8:	ldr	r7, [sp, #36]	; 0x24
    6adc:	ldr	r0, [r0]
    6ae0:	add	r1, r0, #1
    6ae4:	ldr	r5, [sp, #40]	; 0x28
    6ae8:	str	r1, [r7, #444]	; 0x1bc
    6aec:	mov	r1, #0
    6af0:	strb	r1, [r0]
    6af4:	ldr	r7, [r7, #448]	; 0x1c0
    6af8:	cmp	r7, #0
    6afc:	beq	6d04 <storeEntityValue+0x568>
    6b00:	str	r7, [sp, #20]
    6b04:	ldr	r7, [r9, #140]	; 0x8c
    6b08:	cmp	r7, #0
    6b0c:	beq	6d20 <storeEntityValue+0x584>
    6b10:	ldr	r1, [sp, #20]
    6b14:	ldr	r0, [sp, #36]	; 0x24
    6b18:	ldrb	r5, [r1]
    6b1c:	ldr	r2, [r0, #512]	; 0x200
    6b20:	cmp	r5, #0
    6b24:	beq	6b50 <storeEntityValue+0x3b4>
    6b28:	add	r0, r1, #1
    6b2c:	movw	r1, #16963	; 0x4243
    6b30:	mov	r3, r5
    6b34:	movt	r1, #15
    6b38:	mul	r2, r2, r1
    6b3c:	uxtb	r3, r3
    6b40:	eor	r2, r2, r3
    6b44:	ldrb	r3, [r0], #1
    6b48:	cmp	r3, #0
    6b4c:	bne	6b38 <storeEntityValue+0x39c>
    6b50:	ldr	r0, [r9, #132]	; 0x84
    6b54:	sub	r6, r7, #1
    6b58:	and	r3, r2, r6
    6b5c:	ldr	r4, [r0, r3, lsl #2]
    6b60:	cmp	r4, #0
    6b64:	beq	6d20 <storeEntityValue+0x584>
    6b68:	rsb	r1, r7, #0
    6b6c:	mov	lr, #0
    6b70:	and	r1, r2, r1
    6b74:	str	r1, [sp, #8]
    6b78:	ldr	r1, [sp, #20]
    6b7c:	add	r1, r1, #1
    6b80:	str	r1, [sp, #16]
    6b84:	lsr	r1, r6, #2
    6b88:	str	r1, [sp, #4]
    6b8c:	ldr	r2, [r4]
    6b90:	mov	ip, r5
    6b94:	ldrb	r1, [r2]
    6b98:	cmp	r5, r1
    6b9c:	bne	6bc4 <storeEntityValue+0x428>
    6ba0:	add	r6, r2, #1
    6ba4:	ldr	r2, [sp, #16]
    6ba8:	mov	sl, ip
    6bac:	tst	sl, #255	; 0xff
    6bb0:	beq	6c04 <storeEntityValue+0x468>
    6bb4:	ldrb	sl, [r2], #1
    6bb8:	ldrb	r1, [r6], #1
    6bbc:	cmp	sl, r1
    6bc0:	beq	6bac <storeEntityValue+0x410>
    6bc4:	tst	lr, #255	; 0xff
    6bc8:	bne	6be4 <storeEntityValue+0x448>
    6bcc:	ldrb	r1, [r9, #136]	; 0x88
    6bd0:	ldr	r2, [sp, #8]
    6bd4:	ldr	r6, [sp, #4]
    6bd8:	sub	r1, r1, #1
    6bdc:	and	r1, r6, r2, lsr r1
    6be0:	orr	lr, r1, #1
    6be4:	uxtb	r1, lr
    6be8:	mov	r5, ip
    6bec:	subs	r3, r3, r1
    6bf0:	addcc	r3, r3, r7
    6bf4:	ldr	r4, [r0, r3, lsl #2]
    6bf8:	cmp	r4, #0
    6bfc:	bne	6b8c <storeEntityValue+0x3f0>
    6c00:	b	6d20 <storeEntityValue+0x584>
    6c04:	ldr	r0, [sp, #28]
    6c08:	ldr	r1, [sp, #20]
    6c0c:	cmp	r4, #0
    6c10:	str	r1, [r0]
    6c14:	ldr	r0, [sp, #36]	; 0x24
    6c18:	beq	6d2c <storeEntityValue+0x590>
    6c1c:	ldrb	r1, [r4, #32]
    6c20:	ldr	r5, [sp, #40]	; 0x28
    6c24:	cmp	r1, #0
    6c28:	bne	6da0 <storeEntityValue+0x604>
    6c2c:	ldr	r3, [r4, #16]
    6c30:	cmp	r3, #0
    6c34:	beq	681c <storeEntityValue+0x80>
    6c38:	ldr	r6, [r0, #120]	; 0x78
    6c3c:	cmp	r6, #0
    6c40:	beq	6c98 <storeEntityValue+0x4fc>
    6c44:	mov	r7, #0
    6c48:	mov	r1, #1
    6c4c:	strb	r7, [r9, #131]	; 0x83
    6c50:	strb	r1, [r4, #32]
    6c54:	ldr	r1, [r4, #24]
    6c58:	ldr	r0, [r0, #124]	; 0x7c
    6c5c:	ldr	r2, [r4, #20]
    6c60:	str	r1, [sp]
    6c64:	mov	r1, #0
    6c68:	blx	r6
    6c6c:	cmp	r0, #0
    6c70:	strb	r7, [r4, #32]
    6c74:	beq	6dc4 <storeEntityValue+0x628>
    6c78:	ldrb	r0, [r9, #131]	; 0x83
    6c7c:	sub	r4, fp, #36	; 0x24
    6c80:	cmp	r0, #0
    6c84:	bne	6814 <storeEntityValue+0x78>
    6c88:	ldrb	r0, [r9, #130]	; 0x82
    6c8c:	strb	r0, [r9, #128]	; 0x80
    6c90:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6c94:	b	6850 <storeEntityValue+0xb4>
    6c98:	ldrb	r0, [r9, #130]	; 0x82
    6c9c:	strb	r0, [r9, #128]	; 0x80
    6ca0:	b	6a00 <storeEntityValue+0x264>
    6ca4:	mov	r0, sl
    6ca8:	bl	65e4 <poolGrow>
    6cac:	cmp	r0, #0
    6cb0:	beq	6cfc <storeEntityValue+0x560>
    6cb4:	ldr	r0, [r9, #112]	; 0x70
    6cb8:	ldr	r6, [r8, #60]	; 0x3c
    6cbc:	mov	r1, r5
    6cc0:	mov	r2, r4
    6cc4:	mov	r3, r7
    6cc8:	str	r0, [sp]
    6ccc:	mov	r0, r8
    6cd0:	blx	r6
    6cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6cd8:	cmp	r0, r4
    6cdc:	bne	6ca4 <storeEntityValue+0x508>
    6ce0:	ldr	r0, [r9, #120]	; 0x78
    6ce4:	ldr	r5, [sp, #40]	; 0x28
    6ce8:	sub	r4, fp, #36	; 0x24
    6cec:	cmp	r0, #0
    6cf0:	bne	6814 <storeEntityValue+0x78>
    6cf4:	mov	sl, #1
    6cf8:	b	6d04 <storeEntityValue+0x568>
    6cfc:	mov	sl, #1
    6d00:	ldr	r5, [sp, #40]	; 0x28
    6d04:	ldr	r0, [sp, #36]	; 0x24
    6d08:	str	r5, [r0, #284]	; 0x11c
    6d0c:	mov	r0, sl
    6d10:	sub	sp, fp, #28
    6d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6d18:	mov	sl, #1
    6d1c:	b	6d0c <storeEntityValue+0x570>
    6d20:	ldr	r0, [sp, #28]
    6d24:	ldr	r1, [sp, #20]
    6d28:	str	r1, [r0]
    6d2c:	ldrb	r0, [r9, #130]	; 0x82
    6d30:	mov	sl, #0
    6d34:	strb	r0, [r9, #128]	; 0x80
    6d38:	b	6d00 <storeEntityValue+0x564>
    6d3c:	ldr	r1, [sp, #36]	; 0x24
    6d40:	mov	sl, #23
    6d44:	b	6d78 <storeEntityValue+0x5dc>
    6d48:	ldr	r1, [sp, #36]	; 0x24
    6d4c:	mov	sl, #4
    6d50:	b	6d78 <storeEntityValue+0x5dc>
    6d54:	ldr	r1, [sp, #36]	; 0x24
    6d58:	mov	sl, #4
    6d5c:	ldr	r0, [r1, #152]	; 0x98
    6d60:	cmp	r0, r8
    6d64:	ldreq	r0, [fp, #-36]	; 0xffffffdc
    6d68:	streq	r0, [r1, #296]	; 0x128
    6d6c:	b	6d04 <storeEntityValue+0x568>
    6d70:	ldr	r1, [sp, #36]	; 0x24
    6d74:	mov	sl, #14
    6d78:	ldr	r0, [r1, #152]	; 0x98
    6d7c:	cmp	r0, r8
    6d80:	streq	r7, [r1, #296]	; 0x128
    6d84:	b	6d04 <storeEntityValue+0x568>
    6d88:	ldr	r1, [sp, #36]	; 0x24
    6d8c:	mov	sl, #14
    6d90:	ldr	r0, [r1, #152]	; 0x98
    6d94:	cmp	r0, r8
    6d98:	streq	r6, [r1, #296]	; 0x128
    6d9c:	b	6d04 <storeEntityValue+0x568>
    6da0:	ldr	r1, [r0, #152]	; 0x98
    6da4:	mov	sl, #12
    6da8:	cmp	r1, r8
    6dac:	ldreq	r1, [sp, #12]
    6db0:	streq	r1, [r0, #296]	; 0x128
    6db4:	b	6d04 <storeEntityValue+0x568>
    6db8:	str	r7, [sl, #296]	; 0x128
    6dbc:	mov	sl, #10
    6dc0:	b	6d00 <storeEntityValue+0x564>
    6dc4:	mov	sl, #21
    6dc8:	b	6d04 <storeEntityValue+0x568>

00006dcc <doIgnoreSection>:
    6dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6dd0:	add	fp, sp, #28
    6dd4:	sub	sp, sp, #20
    6dd8:	mov	r9, r0
    6ddc:	ldr	r0, [r0, #152]	; 0x98
    6de0:	ldr	r5, [r2]
    6de4:	mov	ip, r3
    6de8:	mov	r8, r2
    6dec:	mov	r6, r1
    6df0:	cmp	r0, r1
    6df4:	beq	6e00 <doIgnoreSection+0x34>
    6df8:	ldr	r4, [r9, #308]	; 0x134
    6dfc:	b	6e08 <doIgnoreSection+0x3c>
    6e00:	mov	r4, r9
    6e04:	str	r5, [r4, #296]!	; 0x128
    6e08:	mov	r0, #0
    6e0c:	str	r5, [r4]
    6e10:	add	r3, sp, #8
    6e14:	mov	r1, r5
    6e18:	mov	r2, ip
    6e1c:	add	sl, r4, #4
    6e20:	str	r0, [r8]
    6e24:	mov	r0, r6
    6e28:	ldr	r7, [r6, #12]
    6e2c:	blx	r7
    6e30:	ldr	r7, [sp, #8]
    6e34:	add	r0, r0, #4
    6e38:	cmp	r0, #46	; 0x2e
    6e3c:	str	r7, [sl]
    6e40:	bhi	6f1c <doIgnoreSection+0x150>
    6e44:	ldr	r1, [fp, #12]
    6e48:	ldr	r3, [fp, #8]
    6e4c:	add	r2, pc, #0
    6e50:	ldr	pc, [r2, r0, lsl #2]
    6e54:	.word	0x00006f10
    6e58:	.word	0x00006f1c
    6e5c:	.word	0x00006f2c
    6e60:	.word	0x00006f10
    6e64:	.word	0x00006f4c
    6e68:	.word	0x00006f1c
    6e6c:	.word	0x00006f1c
    6e70:	.word	0x00006f1c
    6e74:	.word	0x00006f1c
    6e78:	.word	0x00006f1c
    6e7c:	.word	0x00006f1c
    6e80:	.word	0x00006f1c
    6e84:	.word	0x00006f1c
    6e88:	.word	0x00006f1c
    6e8c:	.word	0x00006f1c
    6e90:	.word	0x00006f1c
    6e94:	.word	0x00006f1c
    6e98:	.word	0x00006f1c
    6e9c:	.word	0x00006f1c
    6ea0:	.word	0x00006f1c
    6ea4:	.word	0x00006f1c
    6ea8:	.word	0x00006f1c
    6eac:	.word	0x00006f1c
    6eb0:	.word	0x00006f1c
    6eb4:	.word	0x00006f1c
    6eb8:	.word	0x00006f1c
    6ebc:	.word	0x00006f1c
    6ec0:	.word	0x00006f1c
    6ec4:	.word	0x00006f1c
    6ec8:	.word	0x00006f1c
    6ecc:	.word	0x00006f1c
    6ed0:	.word	0x00006f1c
    6ed4:	.word	0x00006f1c
    6ed8:	.word	0x00006f1c
    6edc:	.word	0x00006f1c
    6ee0:	.word	0x00006f1c
    6ee4:	.word	0x00006f1c
    6ee8:	.word	0x00006f1c
    6eec:	.word	0x00006f1c
    6ef0:	.word	0x00006f1c
    6ef4:	.word	0x00006f1c
    6ef8:	.word	0x00006f1c
    6efc:	.word	0x00006f1c
    6f00:	.word	0x00006f1c
    6f04:	.word	0x00006f1c
    6f08:	.word	0x00006f1c
    6f0c:	.word	0x00006f5c
    6f10:	cmp	r1, #0
    6f14:	moveq	r0, #2
    6f18:	b	6f34 <doIgnoreSection+0x168>
    6f1c:	str	r7, [r4]
    6f20:	mov	r0, #23
    6f24:	sub	sp, fp, #28
    6f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f2c:	cmp	r1, #0
    6f30:	moveq	r0, #6
    6f34:	subeq	sp, fp, #28
    6f38:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f3c:	str	r5, [r3]
    6f40:	mov	r0, #0
    6f44:	sub	sp, fp, #28
    6f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f4c:	str	r7, [r4]
    6f50:	mov	r0, #4
    6f54:	sub	sp, fp, #28
    6f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f5c:	ldr	r4, [r9, #88]	; 0x58
    6f60:	cmp	r4, #0
    6f64:	beq	7010 <doIgnoreSection+0x244>
    6f68:	str	r5, [sp, #16]
    6f6c:	ldrb	r0, [r6, #72]	; 0x48
    6f70:	cmp	r0, #0
    6f74:	beq	6f8c <doIgnoreSection+0x1c0>
    6f78:	ldr	r0, [r9, #4]
    6f7c:	sub	r2, r7, r5
    6f80:	mov	r1, r5
    6f84:	blx	r4
    6f88:	b	7008 <doIgnoreSection+0x23c>
    6f8c:	ldr	r0, [r9, #152]	; 0x98
    6f90:	cmp	r0, r6
    6f94:	beq	6fa4 <doIgnoreSection+0x1d8>
    6f98:	ldr	sl, [r9, #308]	; 0x134
    6f9c:	add	r4, sl, #4
    6fa0:	b	6fac <doIgnoreSection+0x1e0>
    6fa4:	add	r4, r9, #300	; 0x12c
    6fa8:	add	sl, r9, #296	; 0x128
    6fac:	ldr	r0, [r9, #52]	; 0x34
    6fb0:	ldr	r1, [r9, #56]	; 0x38
    6fb4:	mov	r2, r7
    6fb8:	add	r3, sp, #12
    6fbc:	str	r0, [sp, #12]
    6fc0:	mov	r0, r6
    6fc4:	ldr	r5, [r6, #60]	; 0x3c
    6fc8:	str	r1, [sp]
    6fcc:	add	r1, sp, #16
    6fd0:	blx	r5
    6fd4:	ldr	r0, [sp, #16]
    6fd8:	str	r0, [r4]
    6fdc:	ldr	r1, [r9, #52]	; 0x34
    6fe0:	ldr	r2, [sp, #12]
    6fe4:	ldr	r0, [r9, #4]
    6fe8:	ldr	r3, [r9, #88]	; 0x58
    6fec:	sub	r2, r2, r1
    6ff0:	blx	r3
    6ff4:	ldr	r0, [sp, #16]
    6ff8:	str	r0, [sl]
    6ffc:	ldr	r0, [sp, #16]
    7000:	cmp	r0, r7
    7004:	bne	6fac <doIgnoreSection+0x1e0>
    7008:	ldr	r7, [sp, #8]
    700c:	ldr	r3, [fp, #8]
    7010:	str	r7, [r8]
    7014:	str	r7, [r3]
    7018:	mov	r0, #0
    701c:	ldr	r1, [r9, #496]	; 0x1f0
    7020:	cmp	r1, #2
    7024:	movweq	r0, #35	; 0x23
    7028:	sub	sp, fp, #28
    702c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007030 <ignoreSectionProcessor>:
    7030:	push	{r4, r5, r6, r7, fp, lr}
    7034:	add	fp, sp, #16
    7038:	sub	sp, sp, #24
    703c:	str	r1, [sp, #16]
    7040:	mov	r6, r0
    7044:	mov	r4, r2
    7048:	mov	r5, r3
    704c:	add	r2, sp, #16
    7050:	ldr	r1, [r0, #152]	; 0x98
    7054:	ldrb	r0, [r0, #500]	; 0x1f4
    7058:	str	r3, [sp]
    705c:	mov	r3, r4
    7060:	clz	r0, r0
    7064:	lsr	r0, r0, #5
    7068:	str	r0, [sp, #4]
    706c:	mov	r0, r6
    7070:	bl	6dcc <doIgnoreSection>
    7074:	cmp	r0, #0
    7078:	bne	70dc <ignoreSectionProcessor+0xac>
    707c:	ldr	r7, [sp, #16]
    7080:	cmp	r7, #0
    7084:	beq	70dc <ignoreSectionProcessor+0xac>
    7088:	movw	r0, #0
    708c:	add	r3, sp, #20
    7090:	mov	r1, r7
    7094:	mov	r2, r4
    7098:	movt	r0, #0
    709c:	str	r0, [r6, #288]	; 0x120
    70a0:	str	r7, [sp, #20]
    70a4:	ldr	r0, [r6, #152]	; 0x98
    70a8:	ldr	ip, [r0]
    70ac:	blx	ip
    70b0:	ldrb	r2, [r6, #500]	; 0x1f4
    70b4:	ldr	r3, [sp, #20]
    70b8:	ldr	r1, [r6, #152]	; 0x98
    70bc:	clz	r2, r2
    70c0:	stm	sp, {r0, r3, r5}
    70c4:	mov	r0, r6
    70c8:	mov	r3, r4
    70cc:	lsr	r2, r2, #5
    70d0:	str	r2, [sp, #12]
    70d4:	mov	r2, r7
    70d8:	bl	2d04 <doProlog>
    70dc:	sub	sp, fp, #16
    70e0:	pop	{r4, r5, r6, r7, fp, pc}

000070e4 <nextScaffoldPart>:
    70e4:	push	{r4, r5, fp, lr}
    70e8:	add	fp, sp, #8
    70ec:	ldr	r5, [r0, #364]	; 0x16c
    70f0:	mov	r4, r0
    70f4:	ldr	r0, [r5, #184]	; 0xb8
    70f8:	cmp	r0, #0
    70fc:	bne	7124 <nextScaffoldPart+0x40>
    7100:	ldr	r0, [r4, #484]	; 0x1e4
    7104:	ldr	r1, [r4, #12]
    7108:	lsl	r0, r0, #2
    710c:	blx	r1
    7110:	cmp	r0, #0
    7114:	str	r0, [r5, #184]	; 0xb8
    7118:	beq	7200 <nextScaffoldPart+0x11c>
    711c:	mov	r1, #0
    7120:	str	r1, [r0]
    7124:	ldr	r2, [r5, #172]	; 0xac
    7128:	ldr	r1, [r5, #176]	; 0xb0
    712c:	ldr	r0, [r5, #164]	; 0xa4
    7130:	cmp	r1, r2
    7134:	bcc	7188 <nextScaffoldPart+0xa4>
    7138:	cmp	r0, #0
    713c:	beq	7164 <nextScaffoldPart+0x80>
    7140:	ldr	r3, [r4, #16]
    7144:	rsb	r1, r2, r2, lsl #3
    7148:	lsl	r1, r1, #3
    714c:	blx	r3
    7150:	cmp	r0, #0
    7154:	beq	7200 <nextScaffoldPart+0x11c>
    7158:	ldr	r1, [r5, #172]	; 0xac
    715c:	lsl	r1, r1, #1
    7160:	b	717c <nextScaffoldPart+0x98>
    7164:	ldr	r1, [r4, #12]
    7168:	mov	r0, #896	; 0x380
    716c:	blx	r1
    7170:	cmp	r0, #0
    7174:	beq	7200 <nextScaffoldPart+0x11c>
    7178:	mov	r1, #32
    717c:	str	r0, [r5, #164]	; 0xa4
    7180:	str	r1, [r5, #172]	; 0xac
    7184:	ldr	r1, [r5, #176]	; 0xb0
    7188:	add	r2, r1, #1
    718c:	str	r2, [r5, #176]	; 0xb0
    7190:	ldr	r2, [r5, #180]	; 0xb4
    7194:	cmp	r2, #0
    7198:	beq	71e4 <nextScaffoldPart+0x100>
    719c:	ldr	r3, [r5, #184]	; 0xb8
    71a0:	add	r2, r3, r2, lsl #2
    71a4:	ldr	r2, [r2, #-4]
    71a8:	rsb	r2, r2, r2, lsl #3
    71ac:	add	r5, r0, r2, lsl #2
    71b0:	mov	r2, r5
    71b4:	ldr	r3, [r2, #16]!
    71b8:	cmp	r3, #0
    71bc:	rsbne	r3, r3, r3, lsl #3
    71c0:	addne	r3, r0, r3, lsl #2
    71c4:	strne	r1, [r3, #24]
    71c8:	mov	r3, r5
    71cc:	ldr	r4, [r3, #20]!
    71d0:	cmp	r4, #0
    71d4:	streq	r1, [r5, #12]
    71d8:	str	r1, [r2]
    71dc:	add	r2, r4, #1
    71e0:	str	r2, [r3]
    71e4:	rsb	r2, r1, r1, lsl #3
    71e8:	vmov.i32	q8, #0	; 0x00000000
    71ec:	add	r0, r0, r2, lsl #2
    71f0:	add	r0, r0, #12
    71f4:	vst1.32	{d16-d17}, [r0]
    71f8:	mov	r0, r1
    71fc:	pop	{r4, r5, fp, pc}
    7200:	mvn	r1, #0
    7204:	mov	r0, r1
    7208:	pop	{r4, r5, fp, pc}

0000720c <processInternalEntity>:
    720c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7210:	add	fp, sp, #28
    7214:	sub	sp, sp, #20
    7218:	ldr	r6, [r0, #312]	; 0x138
    721c:	mov	r7, r2
    7220:	mov	r5, r1
    7224:	mov	r4, r0
    7228:	cmp	r6, #0
    722c:	beq	7240 <processInternalEntity+0x34>
    7230:	mov	sl, r6
    7234:	ldr	r0, [sl, #8]!
    7238:	str	r0, [r4, #312]	; 0x138
    723c:	b	7264 <processInternalEntity+0x58>
    7240:	ldr	r1, [r4, #12]
    7244:	mov	r0, #24
    7248:	blx	r1
    724c:	cmp	r0, #0
    7250:	moveq	r0, #1
    7254:	subeq	sp, fp, #28
    7258:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    725c:	mov	r6, r0
    7260:	add	sl, r0, #8
    7264:	mov	r9, #0
    7268:	mov	r0, #1
    726c:	str	r9, [r5, #12]
    7270:	strb	r0, [r5, #32]
    7274:	ldr	r0, [r4, #308]	; 0x134
    7278:	str	r0, [sl]
    727c:	str	r6, [r4, #308]	; 0x134
    7280:	str	r5, [r6, #12]
    7284:	ldr	r1, [r4, #320]	; 0x140
    7288:	strb	r7, [r6, #20]
    728c:	str	r9, [r6]
    7290:	str	r9, [r6, #4]
    7294:	str	r1, [r6, #16]
    7298:	ldrb	r0, [r5, #33]	; 0x21
    729c:	ldr	r7, [r5, #4]
    72a0:	ldr	r3, [r5, #8]
    72a4:	ldr	r2, [r4, #236]	; 0xec
    72a8:	add	r8, r7, r3
    72ac:	cmp	r0, #0
    72b0:	beq	7304 <processInternalEntity+0xf8>
    72b4:	ldr	ip, [r2]
    72b8:	mov	r0, r2
    72bc:	add	r3, sp, #16
    72c0:	mov	r1, r7
    72c4:	mov	r2, r8
    72c8:	blx	ip
    72cc:	ldr	r2, [sp, #16]
    72d0:	ldr	r1, [r4, #236]	; 0xec
    72d4:	mov	r3, r8
    72d8:	stm	sp, {r0, r2}
    72dc:	add	r0, sp, #16
    72e0:	mov	r2, r7
    72e4:	str	r9, [sp, #12]
    72e8:	str	r0, [sp, #8]
    72ec:	mov	r0, r4
    72f0:	bl	2d04 <doProlog>
    72f4:	cmp	r0, #0
    72f8:	beq	7324 <processInternalEntity+0x118>
    72fc:	sub	sp, fp, #28
    7300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7304:	add	r0, sp, #16
    7308:	str	r8, [sp]
    730c:	mov	r3, r7
    7310:	stmib	sp, {r0, r9}
    7314:	mov	r0, r4
    7318:	bl	798c <doContent>
    731c:	cmp	r0, #0
    7320:	bne	72fc <processInternalEntity+0xf0>
    7324:	ldr	r0, [sp, #16]
    7328:	cmp	r8, r0
    732c:	beq	735c <processInternalEntity+0x150>
    7330:	ldr	r1, [r4, #496]	; 0x1f0
    7334:	cmp	r1, #3
    7338:	bne	735c <processInternalEntity+0x150>
    733c:	sub	r0, r0, r7
    7340:	str	r0, [r5, #12]
    7344:	movw	r0, #0
    7348:	movt	r0, #0
    734c:	str	r0, [r4, #288]	; 0x120
    7350:	mov	r0, #0
    7354:	sub	sp, fp, #28
    7358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    735c:	mov	r0, #0
    7360:	strb	r0, [r5, #32]
    7364:	ldr	r1, [sl]
    7368:	str	r1, [r4, #308]	; 0x134
    736c:	ldr	r1, [r4, #312]	; 0x138
    7370:	str	r1, [sl]
    7374:	str	r6, [r4, #312]	; 0x138
    7378:	sub	sp, fp, #28
    737c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007380 <reportProcessingInstruction>:
    7380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7384:	add	fp, sp, #28
    7388:	sub	sp, sp, #20
    738c:	mov	r4, r0
    7390:	ldr	r0, [r0, #72]	; 0x48
    7394:	mov	r5, r3
    7398:	mov	r6, r1
    739c:	cmp	r0, #0
    73a0:	beq	7438 <reportProcessingInstruction+0xb8>
    73a4:	ldr	r0, [r6, #68]	; 0x44
    73a8:	ldr	r3, [r6, #32]
    73ac:	str	r5, [sp, #8]
    73b0:	add	r5, r2, r0, lsl #1
    73b4:	mov	r0, r6
    73b8:	mov	r1, r5
    73bc:	blx	r3
    73c0:	str	r5, [sp, #16]
    73c4:	mov	sl, r4
    73c8:	mov	r9, r0
    73cc:	ldr	r0, [sl, #444]!	; 0x1bc
    73d0:	sub	r8, sl, #12
    73d4:	cmp	r0, #0
    73d8:	bne	73ec <reportProcessingInstruction+0x6c>
    73dc:	mov	r0, r8
    73e0:	bl	65e4 <poolGrow>
    73e4:	cmp	r0, #0
    73e8:	beq	7430 <reportProcessingInstruction+0xb0>
    73ec:	add	r9, r5, r9
    73f0:	add	r5, sp, #16
    73f4:	ldr	r0, [r4, #440]	; 0x1b8
    73f8:	ldr	r7, [r6, #60]	; 0x3c
    73fc:	mov	r1, r5
    7400:	mov	r2, r9
    7404:	mov	r3, sl
    7408:	str	r0, [sp]
    740c:	mov	r0, r6
    7410:	blx	r7
    7414:	ldr	r0, [sp, #16]
    7418:	cmp	r0, r9
    741c:	beq	7470 <reportProcessingInstruction+0xf0>
    7420:	mov	r0, r8
    7424:	bl	65e4 <poolGrow>
    7428:	cmp	r0, #0
    742c:	bne	73f4 <reportProcessingInstruction+0x74>
    7430:	mov	r7, #0
    7434:	b	76d4 <reportProcessingInstruction+0x354>
    7438:	ldr	r3, [r4, #88]	; 0x58
    743c:	mov	r7, #1
    7440:	cmp	r3, #0
    7444:	beq	76d4 <reportProcessingInstruction+0x354>
    7448:	str	r2, [sp, #16]
    744c:	ldrb	r0, [r6, #72]	; 0x48
    7450:	cmp	r0, #0
    7454:	beq	754c <reportProcessingInstruction+0x1cc>
    7458:	ldr	r0, [r4, #4]
    745c:	sub	r7, r5, r2
    7460:	mov	r1, r2
    7464:	mov	r2, r7
    7468:	blx	r3
    746c:	b	76d0 <reportProcessingInstruction+0x350>
    7470:	ldr	r0, [r4, #448]	; 0x1c0
    7474:	mov	r7, #0
    7478:	cmp	r0, #0
    747c:	beq	76d4 <reportProcessingInstruction+0x354>
    7480:	ldr	r1, [r4, #440]	; 0x1b8
    7484:	ldr	r0, [r4, #444]	; 0x1bc
    7488:	cmp	r0, r1
    748c:	bne	74a4 <reportProcessingInstruction+0x124>
    7490:	mov	r0, r8
    7494:	bl	65e4 <poolGrow>
    7498:	cmp	r0, #0
    749c:	beq	76d4 <reportProcessingInstruction+0x354>
    74a0:	ldr	r0, [sl]
    74a4:	add	r1, r0, #1
    74a8:	mov	r7, #0
    74ac:	str	r1, [r4, #444]	; 0x1bc
    74b0:	strb	r7, [r0]
    74b4:	ldr	r0, [r4, #448]	; 0x1c0
    74b8:	cmp	r0, #0
    74bc:	beq	76d4 <reportProcessingInstruction+0x354>
    74c0:	str	r0, [sp, #4]
    74c4:	ldr	r0, [r4, #444]	; 0x1bc
    74c8:	mov	r1, r9
    74cc:	str	r0, [r4, #448]	; 0x1c0
    74d0:	mov	r0, r6
    74d4:	ldr	r2, [r6, #36]	; 0x24
    74d8:	blx	r2
    74dc:	ldr	r5, [r6, #68]	; 0x44
    74e0:	str	r0, [sp, #16]
    74e4:	ldr	r0, [r4, #444]	; 0x1bc
    74e8:	cmp	r0, #0
    74ec:	bne	7500 <reportProcessingInstruction+0x180>
    74f0:	mov	r0, r8
    74f4:	bl	65e4 <poolGrow>
    74f8:	cmp	r0, #0
    74fc:	beq	7430 <reportProcessingInstruction+0xb0>
    7500:	ldr	r0, [sp, #8]
    7504:	add	r9, sp, #16
    7508:	sub	r5, r0, r5, lsl #1
    750c:	ldr	r0, [r4, #440]	; 0x1b8
    7510:	ldr	r7, [r6, #60]	; 0x3c
    7514:	mov	r1, r9
    7518:	mov	r2, r5
    751c:	mov	r3, sl
    7520:	str	r0, [sp]
    7524:	mov	r0, r6
    7528:	blx	r7
    752c:	ldr	r0, [sp, #16]
    7530:	cmp	r0, r5
    7534:	beq	7564 <reportProcessingInstruction+0x1e4>
    7538:	mov	r0, r8
    753c:	bl	65e4 <poolGrow>
    7540:	cmp	r0, #0
    7544:	bne	750c <reportProcessingInstruction+0x18c>
    7548:	b	7430 <reportProcessingInstruction+0xb0>
    754c:	ldr	r0, [r4, #152]	; 0x98
    7550:	cmp	r0, r6
    7554:	beq	7668 <reportProcessingInstruction+0x2e8>
    7558:	ldr	sl, [r4, #308]	; 0x134
    755c:	add	r8, sl, #4
    7560:	b	7670 <reportProcessingInstruction+0x2f0>
    7564:	ldr	r0, [r4, #448]	; 0x1c0
    7568:	cmp	r0, #0
    756c:	beq	7430 <reportProcessingInstruction+0xb0>
    7570:	ldr	r1, [r4, #440]	; 0x1b8
    7574:	ldr	r0, [r4, #444]	; 0x1bc
    7578:	cmp	r0, r1
    757c:	bne	7598 <reportProcessingInstruction+0x218>
    7580:	mov	r0, r8
    7584:	bl	65e4 <poolGrow>
    7588:	cmp	r0, #0
    758c:	mov	r7, #0
    7590:	beq	76d4 <reportProcessingInstruction+0x354>
    7594:	ldr	r0, [sl]
    7598:	add	r1, r0, #1
    759c:	mov	r7, #0
    75a0:	str	r1, [r4, #444]	; 0x1bc
    75a4:	strb	r7, [r0]
    75a8:	ldr	r2, [r4, #448]	; 0x1c0
    75ac:	cmp	r2, #0
    75b0:	beq	76d4 <reportProcessingInstruction+0x354>
    75b4:	mov	r0, r2
    75b8:	b	75c0 <reportProcessingInstruction+0x240>
    75bc:	add	r0, r0, #1
    75c0:	ldrb	r6, [r0]
    75c4:	cmp	r6, #0
    75c8:	beq	7620 <reportProcessingInstruction+0x2a0>
    75cc:	cmp	r6, #13
    75d0:	bne	75bc <reportProcessingInstruction+0x23c>
    75d4:	mov	r1, #0
    75d8:	mov	r3, #10
    75dc:	mov	r7, r0
    75e0:	uxtb	r5, r6
    75e4:	cmp	r5, #13
    75e8:	bne	7600 <reportProcessingInstruction+0x280>
    75ec:	strb	r3, [r0, r1]
    75f0:	ldrb	r6, [r7, #1]!
    75f4:	cmp	r6, #10
    75f8:	addeq	r7, r7, #1
    75fc:	b	7608 <reportProcessingInstruction+0x288>
    7600:	add	r7, r7, #1
    7604:	strb	r6, [r0, r1]
    7608:	ldrb	r6, [r7]
    760c:	add	r1, r1, #1
    7610:	cmp	r6, #0
    7614:	bne	75e0 <reportProcessingInstruction+0x260>
    7618:	mov	r3, #0
    761c:	strb	r3, [r0, r1]
    7620:	ldr	r0, [r4, #4]
    7624:	ldr	r3, [r4, #72]	; 0x48
    7628:	ldr	r1, [sp, #4]
    762c:	blx	r3
    7630:	ldr	r0, [r4, #436]	; 0x1b4
    7634:	cmp	r0, #0
    7638:	beq	76e0 <reportProcessingInstruction+0x360>
    763c:	ldr	r1, [r8]
    7640:	cmp	r1, #0
    7644:	beq	76e8 <reportProcessingInstruction+0x368>
    7648:	mov	r2, r1
    764c:	ldr	r1, [r1]
    7650:	str	r0, [r2]
    7654:	mov	r0, r2
    7658:	cmp	r1, #0
    765c:	bne	7648 <reportProcessingInstruction+0x2c8>
    7660:	str	r2, [r4, #436]	; 0x1b4
    7664:	b	76e8 <reportProcessingInstruction+0x368>
    7668:	add	r8, r4, #300	; 0x12c
    766c:	add	sl, r4, #296	; 0x128
    7670:	add	r9, sp, #12
    7674:	ldr	r0, [r4, #52]	; 0x34
    7678:	ldr	r1, [r4, #56]	; 0x38
    767c:	mov	r2, r5
    7680:	mov	r3, r9
    7684:	str	r0, [sp, #12]
    7688:	mov	r0, r6
    768c:	ldr	r7, [r6, #60]	; 0x3c
    7690:	str	r1, [sp]
    7694:	add	r1, sp, #16
    7698:	blx	r7
    769c:	ldr	r0, [sp, #16]
    76a0:	str	r0, [r8]
    76a4:	ldr	r1, [r4, #52]	; 0x34
    76a8:	ldr	r2, [sp, #12]
    76ac:	ldr	r0, [r4, #4]
    76b0:	ldr	r3, [r4, #88]	; 0x58
    76b4:	sub	r2, r2, r1
    76b8:	blx	r3
    76bc:	ldr	r0, [sp, #16]
    76c0:	str	r0, [sl]
    76c4:	ldr	r0, [sp, #16]
    76c8:	cmp	r0, r5
    76cc:	bne	7674 <reportProcessingInstruction+0x2f4>
    76d0:	mov	r7, #1
    76d4:	mov	r0, r7
    76d8:	sub	sp, fp, #28
    76dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    76e0:	ldr	r0, [r4, #432]	; 0x1b0
    76e4:	str	r0, [r4, #436]	; 0x1b4
    76e8:	mov	r0, #0
    76ec:	str	r0, [r4, #432]	; 0x1b0
    76f0:	str	r0, [r4, #440]	; 0x1b8
    76f4:	str	r0, [r4, #444]	; 0x1bc
    76f8:	str	r0, [r4, #448]	; 0x1c0
    76fc:	b	76d0 <reportProcessingInstruction+0x350>

00007700 <reportComment>:
    7700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7704:	add	fp, sp, #28
    7708:	sub	sp, sp, #20
    770c:	mov	sl, r0
    7710:	ldr	r0, [r0, #76]	; 0x4c
    7714:	mov	r7, r3
    7718:	mov	r6, r1
    771c:	cmp	r0, #0
    7720:	beq	77a4 <reportComment+0xa4>
    7724:	ldr	r8, [r6, #68]	; 0x44
    7728:	mov	r4, sl
    772c:	add	r0, r2, r8, lsl #2
    7730:	str	r0, [sp, #16]
    7734:	ldr	r0, [r4, #444]!	; 0x1bc
    7738:	sub	r9, r4, #12
    773c:	cmp	r0, #0
    7740:	bne	7754 <reportComment+0x54>
    7744:	mov	r0, r9
    7748:	bl	65e4 <poolGrow>
    774c:	cmp	r0, #0
    7750:	beq	779c <reportComment+0x9c>
    7754:	sub	r0, r8, r8, lsl #2
    7758:	add	r8, sp, #16
    775c:	add	r7, r7, r0
    7760:	ldr	r0, [sl, #440]	; 0x1b8
    7764:	ldr	r5, [r6, #60]	; 0x3c
    7768:	mov	r1, r8
    776c:	mov	r2, r7
    7770:	mov	r3, r4
    7774:	str	r0, [sp]
    7778:	mov	r0, r6
    777c:	blx	r5
    7780:	ldr	r0, [sp, #16]
    7784:	cmp	r0, r7
    7788:	beq	77dc <reportComment+0xdc>
    778c:	mov	r0, r9
    7790:	bl	65e4 <poolGrow>
    7794:	cmp	r0, #0
    7798:	bne	7760 <reportComment+0x60>
    779c:	mov	r5, #0
    77a0:	b	7980 <reportComment+0x280>
    77a4:	ldr	r4, [sl, #88]	; 0x58
    77a8:	mov	r5, #1
    77ac:	cmp	r4, #0
    77b0:	beq	7980 <reportComment+0x280>
    77b4:	str	r2, [sp, #12]
    77b8:	ldrb	r0, [r6, #72]	; 0x48
    77bc:	cmp	r0, #0
    77c0:	beq	78dc <reportComment+0x1dc>
    77c4:	ldr	r0, [sl, #4]
    77c8:	sub	r3, r7, r2
    77cc:	mov	r1, r2
    77d0:	mov	r2, r3
    77d4:	blx	r4
    77d8:	b	797c <reportComment+0x27c>
    77dc:	ldr	r0, [sl, #448]	; 0x1c0
    77e0:	mov	r5, #0
    77e4:	cmp	r0, #0
    77e8:	beq	7980 <reportComment+0x280>
    77ec:	ldr	r1, [sl, #440]	; 0x1b8
    77f0:	ldr	r0, [sl, #444]	; 0x1bc
    77f4:	cmp	r0, r1
    77f8:	bne	7810 <reportComment+0x110>
    77fc:	mov	r0, r9
    7800:	bl	65e4 <poolGrow>
    7804:	cmp	r0, #0
    7808:	beq	7980 <reportComment+0x280>
    780c:	ldr	r0, [r4]
    7810:	add	r1, r0, #1
    7814:	mov	r5, #0
    7818:	str	r1, [sl, #444]	; 0x1bc
    781c:	strb	r5, [r0]
    7820:	ldr	r1, [sl, #448]	; 0x1c0
    7824:	cmp	r1, #0
    7828:	beq	7980 <reportComment+0x280>
    782c:	mov	r0, r1
    7830:	b	7838 <reportComment+0x138>
    7834:	add	r0, r0, #1
    7838:	ldrb	r6, [r0]
    783c:	cmp	r6, #0
    7840:	beq	7898 <reportComment+0x198>
    7844:	cmp	r6, #13
    7848:	bne	7834 <reportComment+0x134>
    784c:	mov	r2, #0
    7850:	mov	r3, #10
    7854:	mov	r7, r0
    7858:	uxtb	r5, r6
    785c:	cmp	r5, #13
    7860:	bne	7878 <reportComment+0x178>
    7864:	strb	r3, [r0, r2]
    7868:	ldrb	r6, [r7, #1]!
    786c:	cmp	r6, #10
    7870:	addeq	r7, r7, #1
    7874:	b	7880 <reportComment+0x180>
    7878:	add	r7, r7, #1
    787c:	strb	r6, [r0, r2]
    7880:	ldrb	r6, [r7]
    7884:	add	r2, r2, #1
    7888:	cmp	r6, #0
    788c:	bne	7858 <reportComment+0x158>
    7890:	mov	r3, #0
    7894:	strb	r3, [r0, r2]
    7898:	ldr	r0, [sl, #4]
    789c:	ldr	r2, [sl, #76]	; 0x4c
    78a0:	blx	r2
    78a4:	ldr	r0, [sl, #436]	; 0x1b4
    78a8:	cmp	r0, #0
    78ac:	beq	78f4 <reportComment+0x1f4>
    78b0:	ldr	r1, [r9]
    78b4:	cmp	r1, #0
    78b8:	beq	78fc <reportComment+0x1fc>
    78bc:	mov	r2, r1
    78c0:	ldr	r1, [r1]
    78c4:	str	r0, [r2]
    78c8:	mov	r0, r2
    78cc:	cmp	r1, #0
    78d0:	bne	78bc <reportComment+0x1bc>
    78d4:	str	r2, [sl, #436]	; 0x1b4
    78d8:	b	78fc <reportComment+0x1fc>
    78dc:	ldr	r0, [sl, #152]	; 0x98
    78e0:	cmp	r0, r6
    78e4:	beq	7914 <reportComment+0x214>
    78e8:	ldr	r9, [sl, #308]	; 0x134
    78ec:	add	r8, r9, #4
    78f0:	b	791c <reportComment+0x21c>
    78f4:	ldr	r0, [sl, #432]	; 0x1b0
    78f8:	str	r0, [sl, #436]	; 0x1b4
    78fc:	mov	r0, #0
    7900:	str	r0, [sl, #432]	; 0x1b0
    7904:	str	r0, [sl, #440]	; 0x1b8
    7908:	str	r0, [sl, #444]	; 0x1bc
    790c:	str	r0, [sl, #448]	; 0x1c0
    7910:	b	797c <reportComment+0x27c>
    7914:	add	r8, sl, #300	; 0x12c
    7918:	add	r9, sl, #296	; 0x128
    791c:	add	r5, sp, #8
    7920:	ldr	r0, [sl, #52]	; 0x34
    7924:	ldr	r1, [sl, #56]	; 0x38
    7928:	mov	r2, r7
    792c:	mov	r3, r5
    7930:	str	r0, [sp, #8]
    7934:	mov	r0, r6
    7938:	ldr	r4, [r6, #60]	; 0x3c
    793c:	str	r1, [sp]
    7940:	add	r1, sp, #12
    7944:	blx	r4
    7948:	ldr	r0, [sp, #12]
    794c:	str	r0, [r8]
    7950:	ldr	r1, [sl, #52]	; 0x34
    7954:	ldr	r2, [sp, #8]
    7958:	ldr	r0, [sl, #4]
    795c:	ldr	r3, [sl, #88]	; 0x58
    7960:	sub	r2, r2, r1
    7964:	blx	r3
    7968:	ldr	r0, [sp, #12]
    796c:	str	r0, [r9]
    7970:	ldr	r0, [sp, #12]
    7974:	cmp	r0, r7
    7978:	bne	7920 <reportComment+0x220>
    797c:	mov	r5, #1
    7980:	mov	r0, r5
    7984:	sub	sp, fp, #28
    7988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000798c <doContent>:
    798c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7990:	add	fp, sp, #28
    7994:	sub	sp, sp, #124	; 0x7c
    7998:	str	r3, [fp, #-40]	; 0xffffffd8
    799c:	mov	r9, r0
    79a0:	mov	r5, r2
    79a4:	ldr	r0, [r0, #152]	; 0x98
    79a8:	ldr	r2, [r9, #364]	; 0x16c
    79ac:	cmp	r0, r5
    79b0:	str	r2, [sp, #48]	; 0x30
    79b4:	beq	79dc <doContent+0x50>
    79b8:	mov	r2, r9
    79bc:	ldr	r4, [r2, #308]!	; 0x134
    79c0:	sub	r0, r2, #8
    79c4:	str	r2, [sp, #32]
    79c8:	sub	r2, r2, #12
    79cc:	str	r2, [sp, #36]	; 0x24
    79d0:	add	r2, r4, #4
    79d4:	str	r2, [sp, #64]	; 0x40
    79d8:	b	79f8 <doContent+0x6c>
    79dc:	add	r0, r9, #308	; 0x134
    79e0:	add	r2, r9, #296	; 0x128
    79e4:	str	r0, [sp, #32]
    79e8:	add	r0, r9, #300	; 0x12c
    79ec:	str	r2, [sp, #36]	; 0x24
    79f0:	mov	r4, r2
    79f4:	str	r0, [sp, #64]	; 0x40
    79f8:	str	r0, [sp, #40]	; 0x28
    79fc:	add	r0, r9, #4
    7a00:	ldr	r8, [fp, #8]
    7a04:	str	r1, [sp, #44]	; 0x2c
    7a08:	sub	sl, fp, #32
    7a0c:	str	r3, [r4]
    7a10:	str	r4, [sp, #60]	; 0x3c
    7a14:	str	r5, [sp, #68]	; 0x44
    7a18:	str	r0, [sp, #56]	; 0x38
    7a1c:	ldr	r0, [sp, #48]	; 0x30
    7a20:	add	r1, r0, #92	; 0x5c
    7a24:	add	r0, r0, #80	; 0x50
    7a28:	str	r0, [sp, #52]	; 0x34
    7a2c:	add	r0, r9, #444	; 0x1bc
    7a30:	str	r1, [sp, #28]
    7a34:	str	r0, [sp, #76]	; 0x4c
    7a38:	add	r0, r9, #432	; 0x1b0
    7a3c:	str	r0, [sp, #72]	; 0x48
    7a40:	b	7f98 <doContent+0x60c>
    7a44:	ldr	r3, [r9, #128]	; 0x80
    7a48:	cmp	r3, #0
    7a4c:	beq	7b20 <doContent+0x194>
    7a50:	ldr	r0, [sp, #56]	; 0x38
    7a54:	ldr	r1, [ip]
    7a58:	mov	r2, #0
    7a5c:	ldr	r0, [r0]
    7a60:	blx	r3
    7a64:	b	91ac <doContent+0x1820>
    7a68:	ldr	r3, [r9, #88]	; 0x58
    7a6c:	cmp	r3, #0
    7a70:	beq	91ac <doContent+0x1820>
    7a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7a78:	ldr	r6, [fp, #-44]	; 0xffffffd4
    7a7c:	str	r1, [fp, #-72]	; 0xffffffb8
    7a80:	ldrb	r0, [r5, #72]	; 0x48
    7a84:	cmp	r0, #0
    7a88:	bne	8990 <doContent+0x1004>
    7a8c:	ldr	r0, [r9, #152]	; 0x98
    7a90:	ldr	r8, [sp, #36]	; 0x24
    7a94:	ldr	r7, [sp, #40]	; 0x28
    7a98:	sub	sl, fp, #32
    7a9c:	cmp	r0, r5
    7aa0:	ldrne	r0, [sp, #32]
    7aa4:	ldrne	r8, [r0]
    7aa8:	addne	r7, r8, #4
    7aac:	ldr	r0, [r9, #52]	; 0x34
    7ab0:	ldr	r1, [r9, #56]	; 0x38
    7ab4:	mov	r2, r6
    7ab8:	mov	r3, sl
    7abc:	str	r0, [fp, #-32]	; 0xffffffe0
    7ac0:	mov	r0, r5
    7ac4:	ldr	r4, [r5, #60]	; 0x3c
    7ac8:	str	r1, [sp]
    7acc:	sub	r1, fp, #72	; 0x48
    7ad0:	blx	r4
    7ad4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7ad8:	str	r0, [r7]
    7adc:	ldr	r1, [r9, #52]	; 0x34
    7ae0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7ae4:	ldr	r0, [r9, #4]
    7ae8:	ldr	r3, [r9, #88]	; 0x58
    7aec:	sub	r2, r2, r1
    7af0:	blx	r3
    7af4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7af8:	str	r0, [r8]
    7afc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7b00:	cmp	r0, r6
    7b04:	bne	7aac <doContent+0x120>
    7b08:	b	89a0 <doContent+0x1014>
    7b0c:	mov	r2, #0
    7b10:	ldr	r7, [lr, #60]	; 0x3c
    7b14:	ldr	r0, [lr, #68]	; 0x44
    7b18:	add	sl, r7, r0, lsl #2
    7b1c:	b	7c80 <doContent+0x2f4>
    7b20:	ldr	r3, [r9, #88]	; 0x58
    7b24:	cmp	r3, #0
    7b28:	beq	91ac <doContent+0x1820>
    7b2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7b30:	ldr	r6, [fp, #-44]	; 0xffffffd4
    7b34:	str	r1, [fp, #-72]	; 0xffffffb8
    7b38:	ldrb	r0, [r5, #72]	; 0x48
    7b3c:	cmp	r0, #0
    7b40:	ldr	r0, [sp, #56]	; 0x38
    7b44:	beq	7bf8 <doContent+0x26c>
    7b48:	sub	r2, r6, r1
    7b4c:	b	8998 <doContent+0x100c>
    7b50:	ldr	r3, [r9, #88]	; 0x58
    7b54:	sub	sl, fp, #32
    7b58:	cmp	r3, #0
    7b5c:	beq	91ac <doContent+0x1820>
    7b60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7b64:	ldr	r6, [fp, #-44]	; 0xffffffd4
    7b68:	str	r1, [fp, #-72]	; 0xffffffb8
    7b6c:	ldrb	r0, [r5, #72]	; 0x48
    7b70:	cmp	r0, #0
    7b74:	bne	8990 <doContent+0x1004>
    7b78:	ldr	r0, [r9, #152]	; 0x98
    7b7c:	ldr	r8, [sp, #36]	; 0x24
    7b80:	ldr	r7, [sp, #40]	; 0x28
    7b84:	sub	sl, fp, #32
    7b88:	cmp	r0, r5
    7b8c:	ldrne	r0, [sp, #32]
    7b90:	ldrne	r8, [r0]
    7b94:	addne	r7, r8, #4
    7b98:	ldr	r0, [r9, #52]	; 0x34
    7b9c:	ldr	r1, [r9, #56]	; 0x38
    7ba0:	mov	r2, r6
    7ba4:	mov	r3, sl
    7ba8:	str	r0, [fp, #-32]	; 0xffffffe0
    7bac:	mov	r0, r5
    7bb0:	ldr	r4, [r5, #60]	; 0x3c
    7bb4:	str	r1, [sp]
    7bb8:	sub	r1, fp, #72	; 0x48
    7bbc:	blx	r4
    7bc0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7bc4:	str	r0, [r7]
    7bc8:	ldr	r1, [r9, #52]	; 0x34
    7bcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7bd0:	ldr	r0, [r9, #4]
    7bd4:	ldr	r3, [r9, #88]	; 0x58
    7bd8:	sub	r2, r2, r1
    7bdc:	blx	r3
    7be0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7be4:	str	r0, [r8]
    7be8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7bec:	cmp	r0, r6
    7bf0:	bne	7b98 <doContent+0x20c>
    7bf4:	b	89a0 <doContent+0x1014>
    7bf8:	ldr	r0, [r9, #152]	; 0x98
    7bfc:	ldr	r8, [sp, #36]	; 0x24
    7c00:	ldr	r7, [sp, #40]	; 0x28
    7c04:	sub	sl, fp, #32
    7c08:	cmp	r0, r5
    7c0c:	ldrne	r0, [sp, #32]
    7c10:	ldrne	r8, [r0]
    7c14:	addne	r7, r8, #4
    7c18:	ldr	r0, [r9, #52]	; 0x34
    7c1c:	ldr	r1, [r9, #56]	; 0x38
    7c20:	mov	r2, r6
    7c24:	mov	r3, sl
    7c28:	str	r0, [fp, #-32]	; 0xffffffe0
    7c2c:	mov	r0, r5
    7c30:	ldr	r4, [r5, #60]	; 0x3c
    7c34:	str	r1, [sp]
    7c38:	sub	r1, fp, #72	; 0x48
    7c3c:	blx	r4
    7c40:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7c44:	str	r0, [r7]
    7c48:	ldr	r1, [r9, #52]	; 0x34
    7c4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7c50:	ldr	r0, [r9, #4]
    7c54:	ldr	r3, [r9, #88]	; 0x58
    7c58:	sub	r2, r2, r1
    7c5c:	blx	r3
    7c60:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7c64:	str	r0, [r8]
    7c68:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7c6c:	cmp	r0, r6
    7c70:	bne	7c18 <doContent+0x28c>
    7c74:	b	89a0 <doContent+0x1014>
    7c78:	ldr	lr, [sp, #20]
    7c7c:	mov	r2, #1
    7c80:	cmp	sl, r7
    7c84:	beq	7e24 <doContent+0x498>
    7c88:	ldr	r4, [r7], #4
    7c8c:	cmp	r4, #0
    7c90:	beq	7c80 <doContent+0x2f4>
    7c94:	ldr	r0, [r4, #4]
    7c98:	cmp	r0, #0
    7c9c:	beq	7c80 <doContent+0x2f4>
    7ca0:	tst	r2, #255	; 0xff
    7ca4:	beq	7ce8 <doContent+0x35c>
    7ca8:	ldr	r1, [r9, #440]	; 0x1b8
    7cac:	ldr	r0, [r9, #444]	; 0x1bc
    7cb0:	cmp	r0, r1
    7cb4:	bne	7cd4 <doContent+0x348>
    7cb8:	ldr	r0, [sp, #72]	; 0x48
    7cbc:	bl	65e4 <poolGrow>
    7cc0:	cmp	r0, #0
    7cc4:	beq	9430 <doContent+0x1aa4>
    7cc8:	ldr	r0, [sp, #76]	; 0x4c
    7ccc:	ldr	ip, [sp, #24]
    7cd0:	ldr	r0, [r0]
    7cd4:	ldr	r2, [sp, #76]	; 0x4c
    7cd8:	add	r1, r0, #1
    7cdc:	str	r1, [r2]
    7ce0:	mov	r1, #12
    7ce4:	strb	r1, [r0]
    7ce8:	ldr	r3, [r4]
    7cec:	ldr	r2, [r9, #440]	; 0x1b8
    7cf0:	ldr	r0, [r9, #444]	; 0x1bc
    7cf4:	ldrb	r1, [r3]
    7cf8:	sub	r2, r0, r2
    7cfc:	clz	r2, r2
    7d00:	lsr	r2, r2, #5
    7d04:	cmp	r1, #0
    7d08:	beq	7d64 <doContent+0x3d8>
    7d0c:	add	r8, r3, #1
    7d10:	tst	r2, #1
    7d14:	beq	7d38 <doContent+0x3ac>
    7d18:	ldr	r0, [sp, #72]	; 0x48
    7d1c:	bl	65e4 <poolGrow>
    7d20:	cmp	r0, #0
    7d24:	beq	9430 <doContent+0x1aa4>
    7d28:	ldr	r0, [sp, #76]	; 0x4c
    7d2c:	ldrb	r1, [r8, #-1]
    7d30:	ldr	ip, [sp, #24]
    7d34:	ldr	r0, [r0]
    7d38:	add	r2, r0, #1
    7d3c:	str	r2, [r9, #444]	; 0x1bc
    7d40:	strb	r1, [r0]
    7d44:	ldr	r2, [r9, #440]	; 0x1b8
    7d48:	ldr	r0, [r9, #444]	; 0x1bc
    7d4c:	ldrb	r1, [r8], #1
    7d50:	sub	r2, r0, r2
    7d54:	cmp	r1, #0
    7d58:	clz	r2, r2
    7d5c:	lsr	r2, r2, #5
    7d60:	bne	7d10 <doContent+0x384>
    7d64:	cmp	r2, #0
    7d68:	beq	7d88 <doContent+0x3fc>
    7d6c:	ldr	r0, [sp, #72]	; 0x48
    7d70:	bl	65e4 <poolGrow>
    7d74:	cmp	r0, #0
    7d78:	beq	9430 <doContent+0x1aa4>
    7d7c:	ldr	r0, [sp, #76]	; 0x4c
    7d80:	ldr	ip, [sp, #24]
    7d84:	ldr	r0, [r0]
    7d88:	add	r1, r0, #1
    7d8c:	ldr	lr, [sp, #20]
    7d90:	mov	r2, #1
    7d94:	str	r1, [r9, #444]	; 0x1bc
    7d98:	mov	r1, #61	; 0x3d
    7d9c:	strb	r1, [r0]
    7da0:	ldr	r1, [r4, #4]
    7da4:	ldrb	r0, [r9, #488]	; 0x1e8
    7da8:	ldr	r1, [r1, #20]
    7dac:	cmp	r0, #0
    7db0:	subne	r1, r1, #1
    7db4:	cmp	r1, #1
    7db8:	str	r1, [sp, #16]
    7dbc:	blt	7c80 <doContent+0x2f4>
    7dc0:	ldr	lr, [sp, #16]
    7dc4:	mov	r8, #0
    7dc8:	ldr	r1, [r9, #440]	; 0x1b8
    7dcc:	ldr	r0, [r9, #444]	; 0x1bc
    7dd0:	cmp	r0, r1
    7dd4:	bne	7df8 <doContent+0x46c>
    7dd8:	ldr	r0, [sp, #72]	; 0x48
    7ddc:	bl	65e4 <poolGrow>
    7de0:	cmp	r0, #0
    7de4:	beq	9430 <doContent+0x1aa4>
    7de8:	ldr	r0, [sp, #76]	; 0x4c
    7dec:	ldr	ip, [sp, #24]
    7df0:	ldr	lr, [sp, #16]
    7df4:	ldr	r0, [r0]
    7df8:	ldr	r1, [r4, #4]
    7dfc:	ldr	r3, [sp, #76]	; 0x4c
    7e00:	add	r2, r0, #1
    7e04:	ldr	r1, [r1, #16]
    7e08:	ldrb	r1, [r1, r8]
    7e0c:	add	r8, r8, #1
    7e10:	str	r2, [r3]
    7e14:	cmp	r8, lr
    7e18:	strb	r1, [r0]
    7e1c:	blt	7dc8 <doContent+0x43c>
    7e20:	b	7c78 <doContent+0x2ec>
    7e24:	ldr	r4, [lr]
    7e28:	ldr	r0, [lr, #8]
    7e2c:	sub	sl, fp, #32
    7e30:	add	r8, r4, r0, lsl #2
    7e34:	b	7e40 <doContent+0x4b4>
    7e38:	sub	sl, fp, #32
    7e3c:	mov	r2, #1
    7e40:	cmp	r8, r4
    7e44:	beq	7f14 <doContent+0x588>
    7e48:	ldr	r7, [r4], #4
    7e4c:	cmp	r7, #0
    7e50:	beq	7e40 <doContent+0x4b4>
    7e54:	ldrb	r0, [r7, #32]
    7e58:	cmp	r0, #0
    7e5c:	beq	7e40 <doContent+0x4b4>
    7e60:	tst	r2, #255	; 0xff
    7e64:	beq	7eac <doContent+0x520>
    7e68:	ldr	r1, [r9, #440]	; 0x1b8
    7e6c:	ldr	r0, [r9, #444]	; 0x1bc
    7e70:	cmp	r0, r1
    7e74:	bne	7e98 <doContent+0x50c>
    7e78:	ldr	r0, [sp, #72]	; 0x48
    7e7c:	bl	65e4 <poolGrow>
    7e80:	cmp	r0, #0
    7e84:	beq	9430 <doContent+0x1aa4>
    7e88:	ldr	r0, [sp, #76]	; 0x4c
    7e8c:	ldr	ip, [sp, #24]
    7e90:	sub	sl, fp, #32
    7e94:	ldr	r0, [r0]
    7e98:	ldr	r2, [sp, #76]	; 0x4c
    7e9c:	add	r1, r0, #1
    7ea0:	str	r1, [r2]
    7ea4:	mov	r1, #12
    7ea8:	strb	r1, [r0]
    7eac:	ldr	r1, [r7]
    7eb0:	mov	r2, #1
    7eb4:	ldrb	r0, [r1]
    7eb8:	cmp	r0, #0
    7ebc:	beq	7e40 <doContent+0x4b4>
    7ec0:	add	r7, r1, #1
    7ec4:	ldr	r2, [r9, #440]	; 0x1b8
    7ec8:	ldr	r1, [r9, #444]	; 0x1bc
    7ecc:	cmp	r1, r2
    7ed0:	bne	7ef4 <doContent+0x568>
    7ed4:	ldr	r0, [sp, #72]	; 0x48
    7ed8:	bl	65e4 <poolGrow>
    7edc:	cmp	r0, #0
    7ee0:	beq	9430 <doContent+0x1aa4>
    7ee4:	ldr	r0, [sp, #76]	; 0x4c
    7ee8:	ldr	ip, [sp, #24]
    7eec:	ldr	r1, [r0]
    7ef0:	ldrb	r0, [r7, #-1]
    7ef4:	ldr	r3, [sp, #76]	; 0x4c
    7ef8:	add	r2, r1, #1
    7efc:	str	r2, [r3]
    7f00:	strb	r0, [r1]
    7f04:	ldrb	r0, [r7], #1
    7f08:	cmp	r0, #0
    7f0c:	bne	7ec4 <doContent+0x538>
    7f10:	b	7e38 <doContent+0x4ac>
    7f14:	ldr	r1, [r9, #440]	; 0x1b8
    7f18:	ldr	r0, [r9, #444]	; 0x1bc
    7f1c:	cmp	r0, r1
    7f20:	bne	7f44 <doContent+0x5b8>
    7f24:	ldr	r0, [sp, #72]	; 0x48
    7f28:	bl	65e4 <poolGrow>
    7f2c:	cmp	r0, #0
    7f30:	beq	9430 <doContent+0x1aa4>
    7f34:	ldr	r0, [sp, #76]	; 0x4c
    7f38:	ldr	ip, [sp, #24]
    7f3c:	sub	sl, fp, #32
    7f40:	ldr	r0, [r0]
    7f44:	add	r1, r0, #1
    7f48:	mov	r2, #0
    7f4c:	str	r1, [r9, #444]	; 0x1bc
    7f50:	strb	r2, [r0]
    7f54:	ldr	r1, [r9, #448]	; 0x1c0
    7f58:	strb	r2, [ip, #32]
    7f5c:	cmp	r1, #0
    7f60:	beq	92f0 <doContent+0x1964>
    7f64:	ldr	r4, [r9, #120]	; 0x78
    7f68:	ldr	r7, [r9, #124]	; 0x7c
    7f6c:	ldr	r0, [ip, #24]
    7f70:	ldr	r3, [ip, #16]
    7f74:	ldr	r2, [ip, #20]
    7f78:	str	r0, [sp]
    7f7c:	mov	r0, r7
    7f80:	blx	r4
    7f84:	cmp	r0, #0
    7f88:	beq	9598 <doContent+0x1c0c>
    7f8c:	ldr	r0, [r9, #448]	; 0x1c0
    7f90:	str	r0, [r9, #444]	; 0x1bc
    7f94:	b	89a0 <doContent+0x1014>
    7f98:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7f9c:	mov	r0, r5
    7fa0:	mov	r2, r8
    7fa4:	sub	r3, fp, #44	; 0x2c
    7fa8:	str	r1, [fp, #-44]	; 0xffffffd4
    7fac:	ldr	r7, [r5, #4]
    7fb0:	blx	r7
    7fb4:	ldr	r7, [fp, #-44]	; 0xffffffd4
    7fb8:	ldr	r1, [sp, #64]	; 0x40
    7fbc:	add	r0, r0, #5
    7fc0:	cmp	r0, #18
    7fc4:	str	r7, [r1]
    7fc8:	bhi	8184 <doContent+0x7f8>
    7fcc:	add	r1, pc, #4
    7fd0:	mov	r6, #17
    7fd4:	ldr	pc, [r1, r0, lsl #2]
    7fd8:	.word	0x000091fc
    7fdc:	.word	0x00009238
    7fe0:	.word	0x00009264
    7fe4:	.word	0x000092c0
    7fe8:	.word	0x000092d4
    7fec:	.word	0x000092fc
    7ff0:	.word	0x00008024
    7ff4:	.word	0x00008024
    7ff8:	.word	0x00008044
    7ffc:	.word	0x00008044
    8000:	.word	0x00008220
    8004:	.word	0x00008314
    8008:	.word	0x000083ac
    800c:	.word	0x000083d0
    8010:	.word	0x000083ec
    8014:	.word	0x00008438
    8018:	.word	0x00008488
    801c:	.word	0x000092f0
    8020:	.word	0x000084a8
    8024:	ldr	r7, [r9, #376]	; 0x178
    8028:	cmp	r7, #0
    802c:	beq	84c8 <doContent+0xb3c>
    8030:	ldr	r0, [r7]
    8034:	sub	r8, fp, #72	; 0x48
    8038:	sub	r5, fp, #36	; 0x24
    803c:	str	r0, [r9, #376]	; 0x178
    8040:	b	850c <doContent+0xb80>
    8044:	ldr	r0, [r5, #68]	; 0x44
    8048:	ldr	r1, [fp, #-40]	; 0xffffffd8
    804c:	mov	r2, #0
    8050:	str	r2, [fp, #-48]	; 0xffffffd0
    8054:	ldr	r2, [r5, #32]
    8058:	add	r6, r1, r0
    805c:	mov	r0, r5
    8060:	mov	r1, r6
    8064:	blx	r2
    8068:	mov	r7, r0
    806c:	ldr	r0, [sp, #76]	; 0x4c
    8070:	str	r6, [fp, #-32]	; 0xffffffe0
    8074:	ldr	r0, [r0]
    8078:	cmp	r0, #0
    807c:	bne	8090 <doContent+0x704>
    8080:	ldr	r0, [sp, #72]	; 0x48
    8084:	bl	65e4 <poolGrow>
    8088:	cmp	r0, #0
    808c:	beq	91d4 <doContent+0x1848>
    8090:	add	r6, r6, r7
    8094:	ldr	r0, [r9, #440]	; 0x1b8
    8098:	ldr	r7, [r5, #60]	; 0x3c
    809c:	ldr	r3, [sp, #76]	; 0x4c
    80a0:	mov	r1, sl
    80a4:	mov	r2, r6
    80a8:	str	r0, [sp]
    80ac:	mov	r0, r5
    80b0:	blx	r7
    80b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    80b8:	cmp	r0, r6
    80bc:	beq	80d4 <doContent+0x748>
    80c0:	ldr	r0, [sp, #72]	; 0x48
    80c4:	bl	65e4 <poolGrow>
    80c8:	cmp	r0, #0
    80cc:	bne	8094 <doContent+0x708>
    80d0:	b	91d4 <doContent+0x1848>
    80d4:	ldr	r0, [r9, #448]	; 0x1c0
    80d8:	ldr	r7, [sp, #56]	; 0x38
    80dc:	cmp	r0, #0
    80e0:	beq	91d4 <doContent+0x1848>
    80e4:	ldr	r1, [r9, #440]	; 0x1b8
    80e8:	ldr	r0, [r9, #444]	; 0x1bc
    80ec:	cmp	r0, r1
    80f0:	bne	810c <doContent+0x780>
    80f4:	ldr	r0, [sp, #72]	; 0x48
    80f8:	bl	65e4 <poolGrow>
    80fc:	cmp	r0, #0
    8100:	beq	91d4 <doContent+0x1848>
    8104:	ldr	r0, [sp, #76]	; 0x4c
    8108:	ldr	r0, [r0]
    810c:	add	r1, r0, #1
    8110:	str	r1, [r9, #444]	; 0x1bc
    8114:	mov	r1, #0
    8118:	strb	r1, [r0]
    811c:	ldr	r0, [r9, #448]	; 0x1c0
    8120:	cmp	r0, #0
    8124:	str	r0, [fp, #-72]	; 0xffffffb8
    8128:	beq	91e4 <doContent+0x1858>
    812c:	ldr	r0, [r9, #444]	; 0x1bc
    8130:	mov	r1, r5
    8134:	sub	r3, fp, #72	; 0x48
    8138:	str	r0, [r9, #448]	; 0x1c0
    813c:	sub	r0, fp, #48	; 0x30
    8140:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8144:	str	r0, [sp]
    8148:	mov	r0, r9
    814c:	bl	95a0 <storeAtts>
    8150:	cmp	r0, #0
    8154:	bne	91f4 <doContent+0x1868>
    8158:	ldr	r3, [r9, #60]	; 0x3c
    815c:	ldr	r0, [r9, #444]	; 0x1bc
    8160:	cmp	r3, #0
    8164:	str	r0, [r9, #448]	; 0x1c0
    8168:	beq	88fc <doContent+0xf70>
    816c:	ldr	r0, [r9, #4]
    8170:	ldr	r2, [r9, #400]	; 0x190
    8174:	ldr	r1, [fp, #-72]	; 0xffffffb8
    8178:	blx	r3
    817c:	mov	r0, #0
    8180:	b	8900 <doContent+0xf74>
    8184:	ldr	r3, [r9, #88]	; 0x58
    8188:	cmp	r3, #0
    818c:	beq	91ac <doContent+0x1820>
    8190:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8194:	str	r1, [fp, #-72]	; 0xffffffb8
    8198:	ldrb	r0, [r5, #72]	; 0x48
    819c:	cmp	r0, #0
    81a0:	bne	876c <doContent+0xde0>
    81a4:	ldr	r0, [r9, #152]	; 0x98
    81a8:	ldr	r8, [sp, #36]	; 0x24
    81ac:	ldr	r6, [sp, #40]	; 0x28
    81b0:	cmp	r0, r5
    81b4:	ldrne	r0, [sp, #32]
    81b8:	ldrne	r8, [r0]
    81bc:	addne	r6, r8, #4
    81c0:	ldr	r0, [r9, #52]	; 0x34
    81c4:	ldr	r1, [r9, #56]	; 0x38
    81c8:	mov	r2, r7
    81cc:	mov	r3, sl
    81d0:	str	r0, [fp, #-32]	; 0xffffffe0
    81d4:	mov	r0, r5
    81d8:	ldr	r4, [r5, #60]	; 0x3c
    81dc:	str	r1, [sp]
    81e0:	sub	r1, fp, #72	; 0x48
    81e4:	blx	r4
    81e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    81ec:	str	r0, [r6]
    81f0:	ldr	r1, [r9, #52]	; 0x34
    81f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    81f8:	ldr	r0, [r9, #4]
    81fc:	ldr	r3, [r9, #88]	; 0x58
    8200:	sub	r2, r2, r1
    8204:	blx	r3
    8208:	ldr	r0, [fp, #-72]	; 0xffffffb8
    820c:	str	r0, [r8]
    8210:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8214:	cmp	r0, r7
    8218:	bne	81c0 <doContent+0x834>
    821c:	b	89a0 <doContent+0x1014>
    8220:	ldr	r0, [r9, #320]	; 0x140
    8224:	ldr	r1, [sp, #44]	; 0x2c
    8228:	cmp	r0, r1
    822c:	beq	9334 <doContent+0x19a8>
    8230:	ldr	r4, [r9, #372]	; 0x174
    8234:	ldr	r0, [r9, #376]	; 0x178
    8238:	ldr	r1, [r4]
    823c:	str	r1, [r9, #372]	; 0x174
    8240:	str	r0, [r4]
    8244:	str	r4, [r9, #376]	; 0x178
    8248:	ldr	r0, [r5, #68]	; 0x44
    824c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8250:	ldr	r2, [r5, #32]
    8254:	add	r6, r1, r0, lsl #1
    8258:	mov	r0, r5
    825c:	mov	r1, r6
    8260:	blx	r2
    8264:	mov	r2, r0
    8268:	ldr	r0, [r4, #8]
    826c:	cmp	r2, r0
    8270:	bne	9308 <doContent+0x197c>
    8274:	ldr	r0, [r4, #4]
    8278:	mov	r1, r6
    827c:	bl	0 <memcmp>
    8280:	cmp	r0, #0
    8284:	bne	9308 <doContent+0x197c>
    8288:	ldr	r0, [r9, #320]	; 0x140
    828c:	ldr	r2, [r9, #64]	; 0x40
    8290:	sub	r0, r0, #1
    8294:	cmp	r2, #0
    8298:	str	r0, [r9, #320]	; 0x140
    829c:	beq	88c4 <doContent+0xf38>
    82a0:	ldr	r3, [r4, #16]
    82a4:	ldr	r7, [sp, #56]	; 0x38
    82a8:	cmp	r3, #0
    82ac:	ldrbne	r0, [r9, #244]	; 0xf4
    82b0:	cmpne	r0, #0
    82b4:	beq	8304 <doContent+0x978>
    82b8:	ldrb	r1, [r3]
    82bc:	ldr	r0, [r4, #12]
    82c0:	ldr	r2, [r4, #28]
    82c4:	add	r0, r0, r2
    82c8:	cmp	r1, #0
    82cc:	beq	82e4 <doContent+0x958>
    82d0:	add	r2, r3, #1
    82d4:	strb	r1, [r0], #1
    82d8:	ldrb	r1, [r2], #1
    82dc:	cmp	r1, #0
    82e0:	bne	82d4 <doContent+0x948>
    82e4:	ldr	r2, [r4, #20]
    82e8:	cmp	r2, #0
    82ec:	ldrbne	r1, [r9, #245]	; 0xf5
    82f0:	cmpne	r1, #0
    82f4:	bne	8e10 <doContent+0x1484>
    82f8:	mov	r1, #0
    82fc:	strb	r1, [r0]
    8300:	ldr	r2, [r9, #64]	; 0x40
    8304:	ldr	r1, [r4, #12]
    8308:	ldr	r0, [r7]
    830c:	blx	r2
    8310:	b	8db0 <doContent+0x1424>
    8314:	ldr	r4, [r9, #68]	; 0x44
    8318:	cmp	r4, #0
    831c:	beq	86ac <doContent+0xd20>
    8320:	ldrb	r0, [r5, #72]	; 0x48
    8324:	cmp	r0, #0
    8328:	beq	8350 <doContent+0x9c4>
    832c:	ldr	r0, [sp, #56]	; 0x38
    8330:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8334:	ldr	r0, [r0]
    8338:	sub	r2, r7, r1
    833c:	blx	r4
    8340:	b	89a4 <doContent+0x1018>
    8344:	ldr	r1, [sp, #60]	; 0x3c
    8348:	str	r0, [r1]
    834c:	ldr	r7, [fp, #-44]	; 0xffffffd4
    8350:	ldr	r0, [r9, #52]	; 0x34
    8354:	ldr	r1, [r9, #56]	; 0x38
    8358:	mov	r2, r7
    835c:	sub	r3, fp, #72	; 0x48
    8360:	str	r0, [fp, #-72]	; 0xffffffb8
    8364:	mov	r0, r5
    8368:	ldr	r6, [r5, #60]	; 0x3c
    836c:	str	r1, [sp]
    8370:	sub	r1, fp, #40	; 0x28
    8374:	blx	r6
    8378:	ldr	r0, [fp, #-40]	; 0xffffffd8
    837c:	ldr	r1, [sp, #64]	; 0x40
    8380:	str	r0, [r1]
    8384:	ldr	r1, [r9, #52]	; 0x34
    8388:	ldr	r2, [fp, #-72]	; 0xffffffb8
    838c:	ldr	r0, [r9, #4]
    8390:	sub	r2, r2, r1
    8394:	blx	r4
    8398:	ldr	r0, [fp, #-40]	; 0xffffffd8
    839c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    83a0:	cmp	r0, r1
    83a4:	bne	8344 <doContent+0x9b8>
    83a8:	b	89a4 <doContent+0x1018>
    83ac:	ldr	r3, [r9, #68]	; 0x44
    83b0:	cmp	r3, #0
    83b4:	beq	874c <doContent+0xdc0>
    83b8:	mov	r0, #10
    83bc:	sub	r1, fp, #72	; 0x48
    83c0:	strb	r0, [fp, #-72]	; 0xffffffb8
    83c4:	ldr	r0, [sp, #56]	; 0x38
    83c8:	ldr	r0, [r0]
    83cc:	b	842c <doContent+0xaa0>
    83d0:	ldr	r1, [r9, #80]	; 0x50
    83d4:	cmp	r1, #0
    83d8:	beq	8774 <doContent+0xde8>
    83dc:	ldr	r0, [sp, #56]	; 0x38
    83e0:	ldr	r0, [r0]
    83e4:	blx	r1
    83e8:	b	8cf0 <doContent+0x1364>
    83ec:	ldr	r0, [r5, #68]	; 0x44
    83f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    83f4:	ldr	r3, [r5, #48]	; 0x30
    83f8:	add	r1, r1, r0
    83fc:	sub	r2, r7, r0
    8400:	mov	r0, r5
    8404:	blx	r3
    8408:	tst	r0, #255	; 0xff
    840c:	strb	r0, [fp, #-36]	; 0xffffffdc
    8410:	beq	87a8 <doContent+0xe1c>
    8414:	ldr	r3, [r9, #68]	; 0x44
    8418:	ldr	r0, [sp, #56]	; 0x38
    841c:	cmp	r3, #0
    8420:	beq	896c <doContent+0xfe0>
    8424:	ldr	r0, [r0]
    8428:	sub	r1, fp, #36	; 0x24
    842c:	mov	r2, #1
    8430:	blx	r3
    8434:	b	91ac <doContent+0x1820>
    8438:	ldr	r2, [r5, #44]	; 0x2c
    843c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8440:	mov	r0, r5
    8444:	blx	r2
    8448:	cmp	r0, #0
    844c:	blt	933c <doContent+0x19b0>
    8450:	ldr	r6, [r9, #68]	; 0x44
    8454:	cmp	r6, #0
    8458:	beq	8824 <doContent+0xe98>
    845c:	ldr	r1, [sp, #56]	; 0x38
    8460:	sub	r7, fp, #72	; 0x48
    8464:	ldr	r4, [r1]
    8468:	mov	r1, r7
    846c:	bl	0 <coda_XmlUtf8Encode>
    8470:	mov	r2, r0
    8474:	mov	r0, r4
    8478:	ldr	r4, [sp, #60]	; 0x3c
    847c:	mov	r1, r7
    8480:	blx	r6
    8484:	b	91ac <doContent+0x1820>
    8488:	ldr	r2, [fp, #-40]	; 0xffffffd8
    848c:	mov	r0, r9
    8490:	mov	r1, r5
    8494:	mov	r3, r7
    8498:	bl	7380 <reportProcessingInstruction>
    849c:	cmp	r0, #0
    84a0:	bne	91ac <doContent+0x1820>
    84a4:	b	91e4 <doContent+0x1858>
    84a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    84ac:	mov	r0, r9
    84b0:	mov	r1, r5
    84b4:	mov	r3, r7
    84b8:	bl	7700 <reportComment>
    84bc:	cmp	r0, #0
    84c0:	bne	91ac <doContent+0x1820>
    84c4:	b	91e4 <doContent+0x1858>
    84c8:	ldr	r1, [r9, #12]
    84cc:	mov	r0, #48	; 0x30
    84d0:	blx	r1
    84d4:	mov	r6, #1
    84d8:	cmp	r0, #0
    84dc:	sub	r8, fp, #72	; 0x48
    84e0:	sub	r5, fp, #36	; 0x24
    84e4:	beq	92f0 <doContent+0x1964>
    84e8:	ldr	r1, [r9, #12]
    84ec:	mov	r7, r0
    84f0:	mov	r0, #32
    84f4:	blx	r1
    84f8:	cmp	r0, #0
    84fc:	str	r0, [r7, #36]	; 0x24
    8500:	beq	9358 <doContent+0x19cc>
    8504:	add	r0, r0, #32
    8508:	str	r0, [r7, #40]	; 0x28
    850c:	mov	sl, r7
    8510:	mov	r1, #0
    8514:	ldr	r4, [sp, #68]	; 0x44
    8518:	str	r1, [sl, #44]!	; 0x2c
    851c:	ldr	r0, [r9, #372]	; 0x174
    8520:	str	r0, [r7]
    8524:	str	r7, [r9, #372]	; 0x174
    8528:	str	r1, [r7, #16]
    852c:	str	r1, [r7, #20]
    8530:	ldr	r0, [r4, #68]	; 0x44
    8534:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8538:	add	r1, r1, r0
    853c:	mov	r0, r4
    8540:	str	r1, [r7, #4]
    8544:	ldr	r2, [r4, #32]
    8548:	blx	r2
    854c:	str	r0, [r7, #8]
    8550:	ldr	r1, [r9, #320]	; 0x140
    8554:	add	r1, r1, #1
    8558:	str	r1, [r9, #320]	; 0x140
    855c:	ldr	r1, [r7, #4]
    8560:	str	r1, [fp, #-72]	; 0xffffffb8
    8564:	add	r6, r1, r0
    8568:	mov	r0, r4
    856c:	mov	r1, r8
    8570:	ldr	r2, [r7, #36]	; 0x24
    8574:	ldr	r3, [r7, #40]	; 0x28
    8578:	str	r2, [fp, #-36]	; 0xffffffdc
    857c:	sub	r2, r3, #1
    8580:	mov	r3, r5
    8584:	ldr	ip, [r4, #60]	; 0x3c
    8588:	str	r2, [sp]
    858c:	mov	r2, r6
    8590:	blx	ip
    8594:	b	85cc <doContent+0xc40>
    8598:	add	r1, r0, r4
    859c:	str	r0, [r7, #36]	; 0x24
    85a0:	add	r0, r0, r8
    85a4:	mov	r2, r6
    85a8:	mov	r3, r5
    85ac:	str	r1, [r7, #40]	; 0x28
    85b0:	str	r0, [fp, #-36]	; 0xffffffdc
    85b4:	ldr	r0, [sp, #68]	; 0x44
    85b8:	sub	r1, r1, #1
    85bc:	ldr	r4, [r0, #60]	; 0x3c
    85c0:	str	r1, [sp]
    85c4:	sub	r1, fp, #72	; 0x48
    85c8:	blx	r4
    85cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    85d0:	ldr	r0, [r7, #36]	; 0x24
    85d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    85d8:	sub	r8, r1, r0
    85dc:	cmp	r2, r6
    85e0:	beq	8608 <doContent+0xc7c>
    85e4:	ldr	r1, [r7, #40]	; 0x28
    85e8:	ldr	r2, [r9, #16]
    85ec:	sub	r1, r1, r0
    85f0:	lsl	r4, r1, #1
    85f4:	mov	r1, r4
    85f8:	blx	r2
    85fc:	cmp	r0, #0
    8600:	bne	8598 <doContent+0xc0c>
    8604:	b	91e4 <doContent+0x1858>
    8608:	str	r8, [r7, #24]
    860c:	str	r0, [r7, #12]
    8610:	mov	r0, #0
    8614:	ldr	r5, [sp, #68]	; 0x44
    8618:	mov	r3, sl
    861c:	add	sl, r7, #12
    8620:	strb	r0, [r1]
    8624:	str	r3, [sp]
    8628:	mov	r0, r9
    862c:	mov	r3, sl
    8630:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8634:	mov	r1, r5
    8638:	bl	95a0 <storeAtts>
    863c:	cmp	r0, #0
    8640:	bne	91f4 <doContent+0x1868>
    8644:	ldr	r3, [r9, #60]	; 0x3c
    8648:	cmp	r3, #0
    864c:	beq	866c <doContent+0xce0>
    8650:	ldr	r1, [sl]
    8654:	ldr	r0, [r9, #4]
    8658:	ldr	r2, [r9, #400]	; 0x190
    865c:	blx	r3
    8660:	ldr	r8, [fp, #8]
    8664:	sub	sl, fp, #32
    8668:	b	8b90 <doContent+0x1204>
    866c:	ldr	r3, [r9, #88]	; 0x58
    8670:	ldr	r8, [fp, #8]
    8674:	sub	sl, fp, #32
    8678:	cmp	r3, #0
    867c:	beq	8b90 <doContent+0x1204>
    8680:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8684:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8688:	str	r1, [fp, #-72]	; 0xffffffb8
    868c:	ldrb	r0, [r5, #72]	; 0x48
    8690:	cmp	r0, #0
    8694:	ldr	r0, [sp, #56]	; 0x38
    8698:	beq	8b14 <doContent+0x1188>
    869c:	ldr	r0, [r0]
    86a0:	sub	r2, r6, r1
    86a4:	blx	r3
    86a8:	b	8b8c <doContent+0x1200>
    86ac:	ldr	r3, [r9, #88]	; 0x58
    86b0:	ldr	r4, [sp, #60]	; 0x3c
    86b4:	cmp	r3, #0
    86b8:	beq	91ac <doContent+0x1820>
    86bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    86c0:	str	r1, [fp, #-72]	; 0xffffffb8
    86c4:	ldrb	r0, [r5, #72]	; 0x48
    86c8:	cmp	r0, #0
    86cc:	bne	876c <doContent+0xde0>
    86d0:	ldr	r0, [r9, #152]	; 0x98
    86d4:	ldr	r8, [sp, #36]	; 0x24
    86d8:	ldr	r6, [sp, #40]	; 0x28
    86dc:	cmp	r0, r5
    86e0:	ldrne	r0, [sp, #32]
    86e4:	ldrne	r8, [r0]
    86e8:	addne	r6, r8, #4
    86ec:	ldr	r0, [r9, #52]	; 0x34
    86f0:	ldr	r1, [r9, #56]	; 0x38
    86f4:	mov	r2, r7
    86f8:	mov	r3, sl
    86fc:	str	r0, [fp, #-32]	; 0xffffffe0
    8700:	mov	r0, r5
    8704:	ldr	r4, [r5, #60]	; 0x3c
    8708:	str	r1, [sp]
    870c:	sub	r1, fp, #72	; 0x48
    8710:	blx	r4
    8714:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8718:	str	r0, [r6]
    871c:	ldr	r1, [r9, #52]	; 0x34
    8720:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8724:	ldr	r0, [r9, #4]
    8728:	ldr	r3, [r9, #88]	; 0x58
    872c:	sub	r2, r2, r1
    8730:	blx	r3
    8734:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8738:	str	r0, [r8]
    873c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8740:	cmp	r0, r7
    8744:	bne	86ec <doContent+0xd60>
    8748:	b	89a0 <doContent+0x1014>
    874c:	ldr	r3, [r9, #88]	; 0x58
    8750:	cmp	r3, #0
    8754:	beq	91ac <doContent+0x1820>
    8758:	ldr	r1, [fp, #-40]	; 0xffffffd8
    875c:	str	r1, [fp, #-72]	; 0xffffffb8
    8760:	ldrb	r0, [r5, #72]	; 0x48
    8764:	cmp	r0, #0
    8768:	beq	8bf4 <doContent+0x1268>
    876c:	sub	r2, r7, r1
    8770:	b	8994 <doContent+0x1008>
    8774:	ldr	r3, [r9, #88]	; 0x58
    8778:	cmp	r3, #0
    877c:	beq	8cf0 <doContent+0x1364>
    8780:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8784:	str	r1, [fp, #-72]	; 0xffffffb8
    8788:	ldrb	r0, [r5, #72]	; 0x48
    878c:	cmp	r0, #0
    8790:	beq	8c70 <doContent+0x12e4>
    8794:	ldr	r0, [sp, #56]	; 0x38
    8798:	sub	r2, r7, r1
    879c:	ldr	r0, [r0]
    87a0:	blx	r3
    87a4:	b	8ce8 <doContent+0x135c>
    87a8:	ldr	r7, [r5, #68]	; 0x44
    87ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    87b0:	ldr	r4, [sp, #28]
    87b4:	ldr	r6, [fp, #-44]	; 0xffffffd4
    87b8:	ldr	sl, [sp, #48]	; 0x30
    87bc:	add	r0, r0, r7
    87c0:	str	r0, [fp, #-72]	; 0xffffffb8
    87c4:	ldr	r0, [r4]
    87c8:	cmp	r0, #0
    87cc:	bne	87e0 <doContent+0xe54>
    87d0:	ldr	r0, [sp, #52]	; 0x34
    87d4:	bl	65e4 <poolGrow>
    87d8:	cmp	r0, #0
    87dc:	beq	91e4 <doContent+0x1858>
    87e0:	sub	r6, r6, r7
    87e4:	ldr	r0, [sl, #88]	; 0x58
    87e8:	ldr	r7, [r5, #60]	; 0x3c
    87ec:	sub	r1, fp, #72	; 0x48
    87f0:	mov	r2, r6
    87f4:	mov	r3, r4
    87f8:	str	r0, [sp]
    87fc:	mov	r0, r5
    8800:	blx	r7
    8804:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8808:	cmp	r0, r6
    880c:	beq	89ac <doContent+0x1020>
    8810:	ldr	r0, [sp, #52]	; 0x34
    8814:	bl	65e4 <poolGrow>
    8818:	cmp	r0, #0
    881c:	bne	87e4 <doContent+0xe58>
    8820:	b	91e4 <doContent+0x1858>
    8824:	ldr	r3, [r9, #88]	; 0x58
    8828:	cmp	r3, #0
    882c:	beq	91ac <doContent+0x1820>
    8830:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8834:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8838:	str	r1, [fp, #-72]	; 0xffffffb8
    883c:	ldrb	r0, [r5, #72]	; 0x48
    8840:	cmp	r0, #0
    8844:	bne	8990 <doContent+0x1004>
    8848:	ldr	r0, [r9, #152]	; 0x98
    884c:	ldr	r8, [sp, #36]	; 0x24
    8850:	ldr	r7, [sp, #40]	; 0x28
    8854:	cmp	r0, r5
    8858:	ldrne	r0, [sp, #32]
    885c:	ldrne	r8, [r0]
    8860:	addne	r7, r8, #4
    8864:	ldr	r0, [r9, #52]	; 0x34
    8868:	ldr	r1, [r9, #56]	; 0x38
    886c:	mov	r2, r6
    8870:	mov	r3, sl
    8874:	str	r0, [fp, #-32]	; 0xffffffe0
    8878:	mov	r0, r5
    887c:	ldr	r4, [r5, #60]	; 0x3c
    8880:	str	r1, [sp]
    8884:	sub	r1, fp, #72	; 0x48
    8888:	blx	r4
    888c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8890:	str	r0, [r7]
    8894:	ldr	r1, [r9, #52]	; 0x34
    8898:	ldr	r2, [fp, #-32]	; 0xffffffe0
    889c:	ldr	r0, [r9, #4]
    88a0:	ldr	r3, [r9, #88]	; 0x58
    88a4:	sub	r2, r2, r1
    88a8:	blx	r3
    88ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
    88b0:	str	r0, [r8]
    88b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    88b8:	cmp	r0, r6
    88bc:	bne	8864 <doContent+0xed8>
    88c0:	b	89a0 <doContent+0x1014>
    88c4:	ldr	r3, [r9, #88]	; 0x58
    88c8:	ldr	r7, [sp, #56]	; 0x38
    88cc:	cmp	r3, #0
    88d0:	beq	8db0 <doContent+0x1424>
    88d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    88d8:	ldr	r6, [fp, #-44]	; 0xffffffd4
    88dc:	str	r1, [fp, #-72]	; 0xffffffb8
    88e0:	ldrb	r0, [r5, #72]	; 0x48
    88e4:	cmp	r0, #0
    88e8:	beq	8d2c <doContent+0x13a0>
    88ec:	ldr	r0, [r7]
    88f0:	sub	r2, r6, r1
    88f4:	blx	r3
    88f8:	b	8da4 <doContent+0x1418>
    88fc:	mov	r0, #1
    8900:	ldr	r2, [r9, #64]	; 0x40
    8904:	cmp	r2, #0
    8908:	beq	8934 <doContent+0xfa8>
    890c:	ldr	r0, [r9, #60]	; 0x3c
    8910:	cmp	r0, #0
    8914:	ldrne	r0, [sp, #64]	; 0x40
    8918:	ldrne	r0, [r0]
    891c:	strne	r0, [r4]
    8920:	ldrne	r2, [r9, #64]	; 0x40
    8924:	ldr	r0, [r7]
    8928:	ldr	r1, [fp, #-72]	; 0xffffffb8
    892c:	blx	r2
    8930:	b	90f0 <doContent+0x1764>
    8934:	cmp	r0, #0
    8938:	ldrne	r3, [r9, #88]	; 0x58
    893c:	cmpne	r3, #0
    8940:	beq	90f0 <doContent+0x1764>
    8944:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8948:	ldr	r6, [fp, #-44]	; 0xffffffd4
    894c:	str	r1, [fp, #-32]	; 0xffffffe0
    8950:	ldrb	r0, [r5, #72]	; 0x48
    8954:	cmp	r0, #0
    8958:	beq	906c <doContent+0x16e0>
    895c:	ldr	r0, [r7]
    8960:	sub	r2, r6, r1
    8964:	blx	r3
    8968:	b	90e8 <doContent+0x175c>
    896c:	ldr	r3, [r9, #88]	; 0x58
    8970:	cmp	r3, #0
    8974:	beq	91ac <doContent+0x1820>
    8978:	ldr	r1, [fp, #-40]	; 0xffffffd8
    897c:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8980:	str	r1, [fp, #-72]	; 0xffffffb8
    8984:	ldrb	r0, [r5, #72]	; 0x48
    8988:	cmp	r0, #0
    898c:	beq	8ecc <doContent+0x1540>
    8990:	sub	r2, r6, r1
    8994:	ldr	r0, [sp, #56]	; 0x38
    8998:	ldr	r0, [r0]
    899c:	blx	r3
    89a0:	ldr	r8, [fp, #8]
    89a4:	ldr	r4, [sp, #60]	; 0x3c
    89a8:	b	91ac <doContent+0x1820>
    89ac:	ldr	r0, [sl, #96]	; 0x60
    89b0:	mov	r6, #1
    89b4:	cmp	r0, #0
    89b8:	beq	92f0 <doContent+0x1964>
    89bc:	ldr	r1, [sl, #88]	; 0x58
    89c0:	ldr	r0, [sl, #92]	; 0x5c
    89c4:	cmp	r0, r1
    89c8:	bne	89e0 <doContent+0x1054>
    89cc:	ldr	r0, [sp, #52]	; 0x34
    89d0:	bl	65e4 <poolGrow>
    89d4:	cmp	r0, #0
    89d8:	beq	92f0 <doContent+0x1964>
    89dc:	ldr	r0, [r4]
    89e0:	add	r1, r0, #1
    89e4:	str	r1, [sl, #92]	; 0x5c
    89e8:	mov	r1, #0
    89ec:	strb	r1, [r0]
    89f0:	ldr	r1, [sl, #96]	; 0x60
    89f4:	cmp	r1, #0
    89f8:	beq	92f0 <doContent+0x1964>
    89fc:	mov	r4, sl
    8a00:	ldr	sl, [sl, #8]
    8a04:	mov	ip, #0
    8a08:	cmp	sl, #0
    8a0c:	beq	8e44 <doContent+0x14b8>
    8a10:	ldrb	lr, [r1]
    8a14:	ldr	r4, [r9, #512]	; 0x200
    8a18:	cmp	lr, #0
    8a1c:	beq	8a48 <doContent+0x10bc>
    8a20:	movw	r0, #16963	; 0x4243
    8a24:	add	r3, r1, #1
    8a28:	mov	r2, lr
    8a2c:	movt	r0, #15
    8a30:	mul	r7, r4, r0
    8a34:	uxtb	r2, r2
    8a38:	eor	r4, r7, r2
    8a3c:	ldrb	r2, [r3], #1
    8a40:	cmp	r2, #0
    8a44:	bne	8a30 <doContent+0x10a4>
    8a48:	ldr	r0, [sp, #48]	; 0x30
    8a4c:	sub	r2, sl, #1
    8a50:	and	r3, r4, r2
    8a54:	ldr	r0, [r0]
    8a58:	ldr	r7, [r0, r3, lsl #2]
    8a5c:	str	r0, [sp, #24]
    8a60:	cmp	r7, #0
    8a64:	beq	8e44 <doContent+0x14b8>
    8a68:	rsb	r0, sl, #0
    8a6c:	str	sl, [sp, #20]
    8a70:	and	r0, r4, r0
    8a74:	mov	r4, #0
    8a78:	str	r0, [sp, #12]
    8a7c:	add	r0, r1, #1
    8a80:	str	r0, [sp, #16]
    8a84:	lsr	r0, r2, #2
    8a88:	str	r0, [sp, #8]
    8a8c:	ldr	r2, [r7]
    8a90:	mov	sl, lr
    8a94:	ldrb	r0, [r2]
    8a98:	cmp	lr, r0
    8a9c:	bne	8ac4 <doContent+0x1138>
    8aa0:	ldr	r8, [sp, #16]
    8aa4:	add	ip, r2, #1
    8aa8:	mov	lr, sl
    8aac:	tst	lr, #255	; 0xff
    8ab0:	beq	8e3c <doContent+0x14b0>
    8ab4:	ldrb	lr, [r8], #1
    8ab8:	ldrb	r0, [ip], #1
    8abc:	cmp	lr, r0
    8ac0:	beq	8aac <doContent+0x1120>
    8ac4:	tst	r4, #255	; 0xff
    8ac8:	bne	8ae8 <doContent+0x115c>
    8acc:	ldr	r0, [sp, #48]	; 0x30
    8ad0:	ldr	r2, [sp, #12]
    8ad4:	ldr	r7, [sp, #8]
    8ad8:	ldrb	r0, [r0, #4]
    8adc:	sub	r0, r0, #1
    8ae0:	and	r0, r7, r2, lsr r0
    8ae4:	orr	r4, r0, #1
    8ae8:	uxtb	r0, r4
    8aec:	mov	lr, sl
    8af0:	subs	r3, r3, r0
    8af4:	ldr	r0, [sp, #20]
    8af8:	addcc	r3, r3, r0
    8afc:	ldr	r0, [sp, #24]
    8b00:	ldr	r7, [r0, r3, lsl #2]
    8b04:	cmp	r7, #0
    8b08:	bne	8a8c <doContent+0x1100>
    8b0c:	mov	ip, #0
    8b10:	b	8e40 <doContent+0x14b4>
    8b14:	ldr	r0, [r9, #152]	; 0x98
    8b18:	ldr	r8, [sp, #36]	; 0x24
    8b1c:	ldr	r7, [sp, #40]	; 0x28
    8b20:	cmp	r0, r5
    8b24:	ldrne	r0, [sp, #32]
    8b28:	ldrne	r8, [r0]
    8b2c:	addne	r7, r8, #4
    8b30:	ldr	r0, [r9, #52]	; 0x34
    8b34:	ldr	r1, [r9, #56]	; 0x38
    8b38:	mov	r2, r6
    8b3c:	mov	r3, sl
    8b40:	str	r0, [fp, #-32]	; 0xffffffe0
    8b44:	mov	r0, r5
    8b48:	ldr	r4, [r5, #60]	; 0x3c
    8b4c:	str	r1, [sp]
    8b50:	sub	r1, fp, #72	; 0x48
    8b54:	blx	r4
    8b58:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b5c:	str	r0, [r7]
    8b60:	ldr	r1, [r9, #52]	; 0x34
    8b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8b68:	ldr	r0, [r9, #4]
    8b6c:	ldr	r3, [r9, #88]	; 0x58
    8b70:	sub	r2, r2, r1
    8b74:	blx	r3
    8b78:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b7c:	str	r0, [r8]
    8b80:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b84:	cmp	r0, r6
    8b88:	bne	8b30 <doContent+0x11a4>
    8b8c:	ldr	r8, [fp, #8]
    8b90:	ldr	r0, [r9, #436]	; 0x1b4
    8b94:	cmp	r0, #0
    8b98:	beq	8bd0 <doContent+0x1244>
    8b9c:	ldr	r1, [sp, #72]	; 0x48
    8ba0:	ldr	r4, [sp, #60]	; 0x3c
    8ba4:	ldr	r1, [r1]
    8ba8:	cmp	r1, #0
    8bac:	beq	8bdc <doContent+0x1250>
    8bb0:	mov	r2, r1
    8bb4:	ldr	r1, [r1]
    8bb8:	str	r0, [r2]
    8bbc:	mov	r0, r2
    8bc0:	cmp	r1, #0
    8bc4:	bne	8bb0 <doContent+0x1224>
    8bc8:	str	r2, [r9, #436]	; 0x1b4
    8bcc:	b	8bdc <doContent+0x1250>
    8bd0:	ldr	r0, [r9, #432]	; 0x1b0
    8bd4:	ldr	r4, [sp, #60]	; 0x3c
    8bd8:	str	r0, [r9, #436]	; 0x1b4
    8bdc:	mov	r0, #0
    8be0:	str	r0, [r9, #432]	; 0x1b0
    8be4:	str	r0, [r9, #440]	; 0x1b8
    8be8:	str	r0, [r9, #444]	; 0x1bc
    8bec:	str	r0, [r9, #448]	; 0x1c0
    8bf0:	b	91ac <doContent+0x1820>
    8bf4:	ldr	r0, [r9, #152]	; 0x98
    8bf8:	ldr	r8, [sp, #36]	; 0x24
    8bfc:	ldr	r6, [sp, #40]	; 0x28
    8c00:	cmp	r0, r5
    8c04:	ldrne	r0, [sp, #32]
    8c08:	ldrne	r8, [r0]
    8c0c:	addne	r6, r8, #4
    8c10:	ldr	r0, [r9, #52]	; 0x34
    8c14:	ldr	r1, [r9, #56]	; 0x38
    8c18:	mov	r2, r7
    8c1c:	mov	r3, sl
    8c20:	str	r0, [fp, #-32]	; 0xffffffe0
    8c24:	mov	r0, r5
    8c28:	ldr	r4, [r5, #60]	; 0x3c
    8c2c:	str	r1, [sp]
    8c30:	sub	r1, fp, #72	; 0x48
    8c34:	blx	r4
    8c38:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8c3c:	str	r0, [r6]
    8c40:	ldr	r1, [r9, #52]	; 0x34
    8c44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8c48:	ldr	r0, [r9, #4]
    8c4c:	ldr	r3, [r9, #88]	; 0x58
    8c50:	sub	r2, r2, r1
    8c54:	blx	r3
    8c58:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8c5c:	str	r0, [r8]
    8c60:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8c64:	cmp	r0, r7
    8c68:	bne	8c10 <doContent+0x1284>
    8c6c:	b	89a0 <doContent+0x1014>
    8c70:	ldr	r0, [r9, #152]	; 0x98
    8c74:	ldr	r8, [sp, #36]	; 0x24
    8c78:	ldr	r6, [sp, #40]	; 0x28
    8c7c:	cmp	r0, r5
    8c80:	ldrne	r0, [sp, #32]
    8c84:	ldrne	r8, [r0]
    8c88:	addne	r6, r8, #4
    8c8c:	ldr	r0, [r9, #52]	; 0x34
    8c90:	ldr	r1, [r9, #56]	; 0x38
    8c94:	mov	r2, r7
    8c98:	mov	r3, sl
    8c9c:	str	r0, [fp, #-32]	; 0xffffffe0
    8ca0:	mov	r0, r5
    8ca4:	ldr	r4, [r5, #60]	; 0x3c
    8ca8:	str	r1, [sp]
    8cac:	sub	r1, fp, #72	; 0x48
    8cb0:	blx	r4
    8cb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8cb8:	str	r0, [r6]
    8cbc:	ldr	r1, [r9, #52]	; 0x34
    8cc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8cc4:	ldr	r0, [r9, #4]
    8cc8:	ldr	r3, [r9, #88]	; 0x58
    8ccc:	sub	r2, r2, r1
    8cd0:	blx	r3
    8cd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8cd8:	str	r0, [r8]
    8cdc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8ce0:	cmp	r0, r7
    8ce4:	bne	8c8c <doContent+0x1300>
    8ce8:	ldr	r8, [fp, #8]
    8cec:	ldr	r4, [sp, #60]	; 0x3c
    8cf0:	ldr	r0, [fp, #12]
    8cf4:	mov	r1, r5
    8cf8:	sub	r2, fp, #44	; 0x2c
    8cfc:	mov	r3, r8
    8d00:	str	r0, [sp]
    8d04:	ldr	r0, [fp, #16]
    8d08:	str	r0, [sp, #4]
    8d0c:	mov	r0, r9
    8d10:	bl	a6fc <doCdataSection>
    8d14:	cmp	r0, #0
    8d18:	bne	91f4 <doContent+0x1868>
    8d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8d20:	cmp	r0, #0
    8d24:	bne	91ac <doContent+0x1820>
    8d28:	b	9344 <doContent+0x19b8>
    8d2c:	ldr	r0, [r9, #152]	; 0x98
    8d30:	ldr	r8, [sp, #36]	; 0x24
    8d34:	ldr	sl, [sp, #40]	; 0x28
    8d38:	cmp	r0, r5
    8d3c:	ldrne	r0, [sp, #32]
    8d40:	ldrne	r8, [r0]
    8d44:	addne	sl, r8, #4
    8d48:	ldr	r0, [r9, #52]	; 0x34
    8d4c:	ldr	r1, [r9, #56]	; 0x38
    8d50:	mov	r2, r6
    8d54:	sub	r3, fp, #32
    8d58:	str	r0, [fp, #-32]	; 0xffffffe0
    8d5c:	mov	r0, r5
    8d60:	ldr	r7, [r5, #60]	; 0x3c
    8d64:	str	r1, [sp]
    8d68:	sub	r1, fp, #72	; 0x48
    8d6c:	blx	r7
    8d70:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8d74:	str	r0, [sl]
    8d78:	ldr	r1, [r9, #52]	; 0x34
    8d7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8d80:	ldr	r0, [r9, #4]
    8d84:	ldr	r3, [r9, #88]	; 0x58
    8d88:	sub	r2, r2, r1
    8d8c:	blx	r3
    8d90:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8d94:	str	r0, [r8]
    8d98:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8d9c:	cmp	r0, r6
    8da0:	bne	8d48 <doContent+0x13bc>
    8da4:	ldr	r8, [fp, #8]
    8da8:	ldr	r7, [sp, #56]	; 0x38
    8dac:	sub	sl, fp, #32
    8db0:	ldr	r6, [r4, #44]	; 0x2c
    8db4:	cmp	r6, #0
    8db8:	beq	919c <doContent+0x1810>
    8dbc:	ldr	r2, [r9, #112]	; 0x70
    8dc0:	mov	r0, r6
    8dc4:	cmp	r2, #0
    8dc8:	beq	8de0 <doContent+0x1454>
    8dcc:	ldr	r1, [r6]
    8dd0:	ldr	r0, [r7]
    8dd4:	ldr	r1, [r1]
    8dd8:	blx	r2
    8ddc:	ldr	r0, [r4, #44]	; 0x2c
    8de0:	ldr	r0, [r0, #4]
    8de4:	str	r0, [r4, #44]	; 0x2c
    8de8:	cmp	r0, #0
    8dec:	ldr	r1, [r9, #384]	; 0x180
    8df0:	str	r1, [r6, #4]
    8df4:	str	r6, [r9, #384]	; 0x180
    8df8:	ldr	r1, [r6]
    8dfc:	ldr	r2, [r6, #8]
    8e00:	mov	r6, r0
    8e04:	str	r2, [r1, #4]
    8e08:	bne	8dbc <doContent+0x1430>
    8e0c:	b	919c <doContent+0x1810>
    8e10:	ldrb	r1, [r9, #488]	; 0x1e8
    8e14:	strb	r1, [r0], #1
    8e18:	ldrb	r1, [r2]
    8e1c:	cmp	r1, #0
    8e20:	beq	82f8 <doContent+0x96c>
    8e24:	add	r2, r2, #1
    8e28:	strb	r1, [r0], #1
    8e2c:	ldrb	r1, [r2], #1
    8e30:	cmp	r1, #0
    8e34:	bne	8e28 <doContent+0x149c>
    8e38:	b	82f8 <doContent+0x96c>
    8e3c:	mov	ip, r7
    8e40:	ldr	r8, [fp, #8]
    8e44:	ldr	r2, [sp, #48]	; 0x30
    8e48:	str	r1, [r2, #92]	; 0x5c
    8e4c:	ldrb	r0, [r2, #129]	; 0x81
    8e50:	cmp	r0, #0
    8e54:	beq	8e64 <doContent+0x14d8>
    8e58:	ldrb	r0, [r2, #130]	; 0x82
    8e5c:	cmp	r0, #0
    8e60:	beq	903c <doContent+0x16b0>
    8e64:	ldr	r4, [sp, #60]	; 0x3c
    8e68:	cmp	ip, #0
    8e6c:	beq	9440 <doContent+0x1ab4>
    8e70:	ldrb	r0, [ip, #34]	; 0x22
    8e74:	cmp	r0, #0
    8e78:	beq	9448 <doContent+0x1abc>
    8e7c:	ldrb	r0, [ip, #32]
    8e80:	cmp	r0, #0
    8e84:	bne	9420 <doContent+0x1a94>
    8e88:	ldr	r0, [ip, #28]
    8e8c:	cmp	r0, #0
    8e90:	bne	9428 <doContent+0x1a9c>
    8e94:	ldr	r0, [ip, #4]
    8e98:	cmp	r0, #0
    8e9c:	beq	8f48 <doContent+0x15bc>
    8ea0:	ldrb	r0, [r9, #316]	; 0x13c
    8ea4:	sub	sl, fp, #32
    8ea8:	cmp	r0, #0
    8eac:	beq	7a44 <doContent+0xb8>
    8eb0:	mov	r0, r9
    8eb4:	mov	r1, ip
    8eb8:	mov	r2, #0
    8ebc:	bl	720c <processInternalEntity>
    8ec0:	cmp	r0, #0
    8ec4:	beq	91ac <doContent+0x1820>
    8ec8:	b	91f4 <doContent+0x1868>
    8ecc:	ldr	r0, [r9, #152]	; 0x98
    8ed0:	ldr	r8, [sp, #36]	; 0x24
    8ed4:	ldr	r7, [sp, #40]	; 0x28
    8ed8:	cmp	r0, r5
    8edc:	ldrne	r0, [sp, #32]
    8ee0:	ldrne	r8, [r0]
    8ee4:	addne	r7, r8, #4
    8ee8:	ldr	r0, [r9, #52]	; 0x34
    8eec:	ldr	r1, [r9, #56]	; 0x38
    8ef0:	mov	r2, r6
    8ef4:	mov	r3, sl
    8ef8:	str	r0, [fp, #-32]	; 0xffffffe0
    8efc:	mov	r0, r5
    8f00:	ldr	r4, [r5, #60]	; 0x3c
    8f04:	str	r1, [sp]
    8f08:	sub	r1, fp, #72	; 0x48
    8f0c:	blx	r4
    8f10:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8f14:	str	r0, [r7]
    8f18:	ldr	r1, [r9, #52]	; 0x34
    8f1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8f20:	ldr	r0, [r9, #4]
    8f24:	ldr	r3, [r9, #88]	; 0x58
    8f28:	sub	r2, r2, r1
    8f2c:	blx	r3
    8f30:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8f34:	str	r0, [r8]
    8f38:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8f3c:	cmp	r0, r6
    8f40:	bne	8ee8 <doContent+0x155c>
    8f44:	b	89a0 <doContent+0x1014>
    8f48:	ldr	r0, [r9, #120]	; 0x78
    8f4c:	sub	sl, fp, #32
    8f50:	cmp	r0, #0
    8f54:	beq	7a68 <doContent+0xdc>
    8f58:	mov	r0, #1
    8f5c:	str	ip, [sp, #24]
    8f60:	strb	r0, [ip, #32]
    8f64:	ldr	lr, [r9, #364]	; 0x16c
    8f68:	ldr	r0, [lr, #156]	; 0x9c
    8f6c:	str	lr, [sp, #20]
    8f70:	cmp	r0, #0
    8f74:	beq	7b0c <doContent+0x180>
    8f78:	ldr	r1, [r9, #440]	; 0x1b8
    8f7c:	ldr	r0, [r9, #444]	; 0x1bc
    8f80:	cmp	r0, r1
    8f84:	bne	8fa8 <doContent+0x161c>
    8f88:	ldr	r0, [sp, #72]	; 0x48
    8f8c:	bl	65e4 <poolGrow>
    8f90:	cmp	r0, #0
    8f94:	beq	9430 <doContent+0x1aa4>
    8f98:	ldr	r0, [sp, #76]	; 0x4c
    8f9c:	ldr	ip, [sp, #24]
    8fa0:	ldr	lr, [sp, #20]
    8fa4:	ldr	r0, [r0]
    8fa8:	add	r1, r0, #1
    8fac:	mov	r2, #1
    8fb0:	str	r1, [r9, #444]	; 0x1bc
    8fb4:	mov	r1, #61	; 0x3d
    8fb8:	strb	r1, [r0]
    8fbc:	ldr	r1, [lr, #156]	; 0x9c
    8fc0:	ldrb	r0, [r9, #488]	; 0x1e8
    8fc4:	ldr	r4, [r1, #20]
    8fc8:	cmp	r0, #0
    8fcc:	subne	r4, r4, #1
    8fd0:	cmp	r4, #1
    8fd4:	blt	7b10 <doContent+0x184>
    8fd8:	mov	r7, #0
    8fdc:	ldr	r1, [r9, #440]	; 0x1b8
    8fe0:	ldr	r0, [r9, #444]	; 0x1bc
    8fe4:	cmp	r0, r1
    8fe8:	bne	900c <doContent+0x1680>
    8fec:	ldr	r0, [sp, #72]	; 0x48
    8ff0:	bl	65e4 <poolGrow>
    8ff4:	cmp	r0, #0
    8ff8:	beq	9430 <doContent+0x1aa4>
    8ffc:	ldr	r0, [sp, #76]	; 0x4c
    9000:	ldr	ip, [sp, #24]
    9004:	ldr	lr, [sp, #20]
    9008:	ldr	r0, [r0]
    900c:	ldr	r1, [lr, #156]	; 0x9c
    9010:	ldr	r3, [sp, #76]	; 0x4c
    9014:	add	r2, r0, #1
    9018:	ldr	r1, [r1, #16]
    901c:	ldrb	r1, [r1, r7]
    9020:	add	r7, r7, #1
    9024:	str	r2, [r3]
    9028:	cmp	r7, r4
    902c:	strb	r1, [r0]
    9030:	blt	8fdc <doContent+0x1650>
    9034:	mov	r2, #1
    9038:	b	7b10 <doContent+0x184>
    903c:	ldr	r4, [sp, #60]	; 0x3c
    9040:	ldr	r0, [sp, #56]	; 0x38
    9044:	cmp	ip, #0
    9048:	bne	8e7c <doContent+0x14f0>
    904c:	ldr	r3, [r9, #128]	; 0x80
    9050:	cmp	r3, #0
    9054:	beq	7b50 <doContent+0x1c4>
    9058:	ldr	r0, [r0]
    905c:	mov	r2, #0
    9060:	blx	r3
    9064:	sub	sl, fp, #32
    9068:	b	91ac <doContent+0x1820>
    906c:	ldr	r0, [r9, #152]	; 0x98
    9070:	ldr	r8, [sp, #36]	; 0x24
    9074:	ldr	r7, [sp, #40]	; 0x28
    9078:	cmp	r0, r5
    907c:	ldr	r5, [sp, #68]	; 0x44
    9080:	ldrne	r0, [sp, #32]
    9084:	ldrne	r8, [r0]
    9088:	addne	r7, r8, #4
    908c:	ldr	r0, [r9, #52]	; 0x34
    9090:	ldr	r1, [r9, #56]	; 0x38
    9094:	mov	r2, r6
    9098:	sub	r3, fp, #36	; 0x24
    909c:	str	r0, [fp, #-36]	; 0xffffffdc
    90a0:	mov	r0, r5
    90a4:	ldr	r4, [r5, #60]	; 0x3c
    90a8:	str	r1, [sp]
    90ac:	mov	r1, sl
    90b0:	blx	r4
    90b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    90b8:	str	r0, [r7]
    90bc:	ldr	r1, [r9, #52]	; 0x34
    90c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    90c4:	ldr	r0, [r9, #4]
    90c8:	ldr	r3, [r9, #88]	; 0x58
    90cc:	sub	r2, r2, r1
    90d0:	blx	r3
    90d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    90d8:	str	r0, [r8]
    90dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    90e0:	cmp	r0, r6
    90e4:	bne	908c <doContent+0x1700>
    90e8:	ldr	r8, [fp, #8]
    90ec:	ldr	r7, [sp, #56]	; 0x38
    90f0:	ldr	r0, [r9, #436]	; 0x1b4
    90f4:	cmp	r0, #0
    90f8:	beq	912c <doContent+0x17a0>
    90fc:	ldr	r1, [sp, #72]	; 0x48
    9100:	ldr	r1, [r1]
    9104:	cmp	r1, #0
    9108:	beq	9134 <doContent+0x17a8>
    910c:	mov	r2, r1
    9110:	ldr	r1, [r1]
    9114:	str	r0, [r2]
    9118:	mov	r0, r2
    911c:	cmp	r1, #0
    9120:	bne	910c <doContent+0x1780>
    9124:	str	r2, [r9, #436]	; 0x1b4
    9128:	b	9134 <doContent+0x17a8>
    912c:	ldr	r0, [r9, #432]	; 0x1b0
    9130:	str	r0, [r9, #436]	; 0x1b4
    9134:	mov	r0, #0
    9138:	str	r0, [r9, #432]	; 0x1b0
    913c:	str	r0, [r9, #440]	; 0x1b8
    9140:	str	r0, [r9, #444]	; 0x1bc
    9144:	str	r0, [r9, #448]	; 0x1c0
    9148:	ldr	r4, [fp, #-48]	; 0xffffffd0
    914c:	cmp	r4, #0
    9150:	beq	919c <doContent+0x1810>
    9154:	ldr	r2, [r9, #112]	; 0x70
    9158:	cmp	r2, #0
    915c:	beq	9170 <doContent+0x17e4>
    9160:	ldr	r1, [r4]
    9164:	ldr	r0, [r7]
    9168:	ldr	r1, [r1]
    916c:	blx	r2
    9170:	ldr	r0, [r4, #4]
    9174:	str	r0, [fp, #-48]	; 0xffffffd0
    9178:	cmp	r0, #0
    917c:	ldr	r1, [r9, #384]	; 0x180
    9180:	str	r1, [r4, #4]
    9184:	str	r4, [r9, #384]	; 0x180
    9188:	ldr	r1, [r4]
    918c:	ldr	r2, [r4, #8]
    9190:	mov	r4, r0
    9194:	str	r2, [r1, #4]
    9198:	bne	9154 <doContent+0x17c8>
    919c:	ldr	r0, [r9, #320]	; 0x140
    91a0:	ldr	r4, [sp, #60]	; 0x3c
    91a4:	cmp	r0, #0
    91a8:	beq	9318 <doContent+0x198c>
    91ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    91b0:	str	r0, [fp, #-40]	; 0xffffffd8
    91b4:	str	r0, [r4]
    91b8:	ldr	r0, [r9, #496]	; 0x1f0
    91bc:	cmp	r0, #2
    91c0:	beq	91ec <doContent+0x1860>
    91c4:	cmp	r0, #3
    91c8:	bne	7f98 <doContent+0x60c>
    91cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    91d0:	b	92e4 <doContent+0x1958>
    91d4:	mov	r0, #0
    91d8:	mov	r6, #1
    91dc:	str	r0, [fp, #-72]	; 0xffffffb8
    91e0:	b	92f0 <doContent+0x1964>
    91e4:	mov	r6, #1
    91e8:	b	92f0 <doContent+0x1964>
    91ec:	mov	r6, #35	; 0x23
    91f0:	b	92f0 <doContent+0x1964>
    91f4:	mov	r6, r0
    91f8:	b	92f0 <doContent+0x1964>
    91fc:	ldr	r0, [fp, #16]
    9200:	cmp	r0, #0
    9204:	bne	92e0 <doContent+0x1954>
    9208:	ldr	r3, [r9, #68]	; 0x44
    920c:	cmp	r3, #0
    9210:	beq	9378 <doContent+0x19ec>
    9214:	ldrb	r0, [r5, #72]	; 0x48
    9218:	cmp	r0, #0
    921c:	ldr	r0, [sp, #56]	; 0x38
    9220:	beq	93dc <doContent+0x1a50>
    9224:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9228:	ldr	r0, [r0]
    922c:	sub	r2, r8, r1
    9230:	blx	r3
    9234:	b	94d4 <doContent+0x1b48>
    9238:	ldr	r0, [fp, #16]
    923c:	cmp	r0, #0
    9240:	bne	92e0 <doContent+0x1954>
    9244:	ldr	r1, [sp, #44]	; 0x2c
    9248:	cmp	r1, #1
    924c:	blt	9370 <doContent+0x19e4>
    9250:	ldr	r0, [r9, #320]	; 0x140
    9254:	mov	r6, #13
    9258:	cmp	r0, r1
    925c:	beq	92e0 <doContent+0x1954>
    9260:	b	92f0 <doContent+0x1964>
    9264:	ldr	r0, [fp, #16]
    9268:	cmp	r0, #0
    926c:	bne	92e0 <doContent+0x1954>
    9270:	ldr	r0, [sp, #64]	; 0x40
    9274:	str	r8, [r0]
    9278:	ldr	r3, [r9, #68]	; 0x44
    927c:	cmp	r3, #0
    9280:	beq	93ac <doContent+0x1a20>
    9284:	mov	r0, #10
    9288:	sub	r1, fp, #72	; 0x48
    928c:	mov	r2, #1
    9290:	strb	r0, [fp, #-72]	; 0xffffffb8
    9294:	ldr	r0, [sp, #56]	; 0x38
    9298:	ldr	r0, [r0]
    929c:	blx	r3
    92a0:	ldr	r1, [sp, #44]	; 0x2c
    92a4:	cmp	r1, #0
    92a8:	beq	9370 <doContent+0x19e4>
    92ac:	ldr	r0, [r9, #320]	; 0x140
    92b0:	mov	r6, #13
    92b4:	cmp	r0, r1
    92b8:	bne	92f0 <doContent+0x1964>
    92bc:	b	94ec <doContent+0x1b60>
    92c0:	ldr	r0, [fp, #16]
    92c4:	cmp	r0, #0
    92c8:	bne	92e0 <doContent+0x1954>
    92cc:	mov	r6, #6
    92d0:	b	92f0 <doContent+0x1964>
    92d4:	ldr	r0, [fp, #16]
    92d8:	cmp	r0, #0
    92dc:	beq	9368 <doContent+0x19dc>
    92e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    92e4:	ldr	r1, [fp, #12]
    92e8:	mov	r6, #0
    92ec:	str	r0, [r1]
    92f0:	mov	r0, r6
    92f4:	sub	sp, fp, #28
    92f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92fc:	mov	r6, #4
    9300:	str	r7, [r4]
    9304:	b	92f0 <doContent+0x1964>
    9308:	ldr	r0, [sp, #60]	; 0x3c
    930c:	str	r6, [r0]
    9310:	mov	r6, #7
    9314:	b	92f0 <doContent+0x1964>
    9318:	ldr	r1, [fp, #-44]	; 0xffffffd4
    931c:	ldr	r3, [fp, #12]
    9320:	mov	r0, r9
    9324:	mov	r2, r8
    9328:	bl	a3fc <epilogProcessor>
    932c:	mov	r6, r0
    9330:	b	92f0 <doContent+0x1964>
    9334:	mov	r6, #13
    9338:	b	92f0 <doContent+0x1964>
    933c:	mov	r6, #14
    9340:	b	92f0 <doContent+0x1964>
    9344:	movw	r0, #0
    9348:	mov	r6, #0
    934c:	movt	r0, #0
    9350:	str	r0, [r9, #288]	; 0x120
    9354:	b	92f0 <doContent+0x1964>
    9358:	ldr	r1, [r9, #20]
    935c:	mov	r0, r7
    9360:	blx	r1
    9364:	b	92f0 <doContent+0x1964>
    9368:	mov	r6, #5
    936c:	b	92f0 <doContent+0x1964>
    9370:	mov	r6, #3
    9374:	b	92f0 <doContent+0x1964>
    9378:	ldr	r3, [r9, #88]	; 0x58
    937c:	ldr	r7, [sp, #56]	; 0x38
    9380:	cmp	r3, #0
    9384:	beq	94d4 <doContent+0x1b48>
    9388:	ldr	r1, [fp, #-40]	; 0xffffffd8
    938c:	str	r1, [fp, #-72]	; 0xffffffb8
    9390:	ldrb	r0, [r5, #72]	; 0x48
    9394:	cmp	r0, #0
    9398:	beq	9450 <doContent+0x1ac4>
    939c:	ldr	r0, [r7]
    93a0:	sub	r2, r8, r1
    93a4:	blx	r3
    93a8:	b	94d0 <doContent+0x1b44>
    93ac:	ldr	r3, [r9, #88]	; 0x58
    93b0:	ldr	r7, [sp, #56]	; 0x38
    93b4:	cmp	r3, #0
    93b8:	beq	92a0 <doContent+0x1914>
    93bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    93c0:	str	r1, [fp, #-72]	; 0xffffffb8
    93c4:	ldrb	r0, [r5, #72]	; 0x48
    93c8:	cmp	r0, #0
    93cc:	beq	9514 <doContent+0x1b88>
    93d0:	ldr	r0, [r7]
    93d4:	sub	r2, r8, r1
    93d8:	b	929c <doContent+0x1910>
    93dc:	ldr	r0, [r9, #52]	; 0x34
    93e0:	ldr	r1, [r9, #56]	; 0x38
    93e4:	sub	r3, fp, #72	; 0x48
    93e8:	mov	r2, r8
    93ec:	str	r0, [fp, #-72]	; 0xffffffb8
    93f0:	mov	r0, r5
    93f4:	ldr	r7, [r5, #60]	; 0x3c
    93f8:	str	r1, [sp]
    93fc:	sub	r1, fp, #40	; 0x28
    9400:	blx	r7
    9404:	ldr	r1, [r9, #52]	; 0x34
    9408:	ldr	r2, [fp, #-72]	; 0xffffffb8
    940c:	ldr	r0, [r9, #4]
    9410:	ldr	r3, [r9, #68]	; 0x44
    9414:	sub	r2, r2, r1
    9418:	blx	r3
    941c:	b	94d4 <doContent+0x1b48>
    9420:	mov	r6, #12
    9424:	b	92f0 <doContent+0x1964>
    9428:	mov	r6, #15
    942c:	b	92f0 <doContent+0x1964>
    9430:	ldr	r1, [sp, #24]
    9434:	mov	r0, #0
    9438:	strb	r0, [r1, #32]
    943c:	b	92f0 <doContent+0x1964>
    9440:	mov	r6, #11
    9444:	b	92f0 <doContent+0x1964>
    9448:	mov	r6, #24
    944c:	b	92f0 <doContent+0x1964>
    9450:	ldr	r0, [r9, #152]	; 0x98
    9454:	ldr	r7, [sp, #36]	; 0x24
    9458:	sub	sl, fp, #72	; 0x48
    945c:	cmp	r0, r5
    9460:	ldrne	r0, [sp, #32]
    9464:	ldrne	r7, [r0]
    9468:	addne	r0, r7, #4
    946c:	strne	r0, [sp, #40]	; 0x28
    9470:	ldr	r6, [sp, #40]	; 0x28
    9474:	ldr	r0, [r9, #52]	; 0x34
    9478:	ldr	r1, [r9, #56]	; 0x38
    947c:	mov	r2, r8
    9480:	sub	r3, fp, #32
    9484:	str	r0, [fp, #-32]	; 0xffffffe0
    9488:	mov	r0, r5
    948c:	ldr	r4, [r5, #60]	; 0x3c
    9490:	str	r1, [sp]
    9494:	mov	r1, sl
    9498:	blx	r4
    949c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    94a0:	str	r0, [r6]
    94a4:	ldr	r1, [r9, #52]	; 0x34
    94a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    94ac:	ldr	r0, [r9, #4]
    94b0:	ldr	r3, [r9, #88]	; 0x58
    94b4:	sub	r2, r2, r1
    94b8:	blx	r3
    94bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    94c0:	str	r0, [r7]
    94c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    94c8:	cmp	r0, r8
    94cc:	bne	9474 <doContent+0x1ae8>
    94d0:	ldr	r4, [sp, #60]	; 0x3c
    94d4:	ldr	r1, [sp, #44]	; 0x2c
    94d8:	cmp	r1, #0
    94dc:	beq	94fc <doContent+0x1b70>
    94e0:	ldr	r0, [r9, #320]	; 0x140
    94e4:	cmp	r0, r1
    94e8:	bne	9508 <doContent+0x1b7c>
    94ec:	ldr	r0, [fp, #12]
    94f0:	mov	r6, #0
    94f4:	str	r8, [r0]
    94f8:	b	92f0 <doContent+0x1964>
    94fc:	str	r8, [r4]
    9500:	mov	r6, #3
    9504:	b	92f0 <doContent+0x1964>
    9508:	str	r8, [r4]
    950c:	mov	r6, #13
    9510:	b	92f0 <doContent+0x1964>
    9514:	ldr	r0, [r9, #152]	; 0x98
    9518:	ldr	r7, [sp, #36]	; 0x24
    951c:	sub	sl, fp, #72	; 0x48
    9520:	cmp	r0, r5
    9524:	ldrne	r0, [sp, #32]
    9528:	ldrne	r7, [r0]
    952c:	addne	r0, r7, #4
    9530:	strne	r0, [sp, #40]	; 0x28
    9534:	ldr	r6, [sp, #40]	; 0x28
    9538:	ldr	r0, [r9, #52]	; 0x34
    953c:	ldr	r1, [r9, #56]	; 0x38
    9540:	mov	r2, r8
    9544:	sub	r3, fp, #32
    9548:	str	r0, [fp, #-32]	; 0xffffffe0
    954c:	mov	r0, r5
    9550:	ldr	r4, [r5, #60]	; 0x3c
    9554:	str	r1, [sp]
    9558:	mov	r1, sl
    955c:	blx	r4
    9560:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9564:	str	r0, [r6]
    9568:	ldr	r1, [r9, #52]	; 0x34
    956c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9570:	ldr	r0, [r9, #4]
    9574:	ldr	r3, [r9, #88]	; 0x58
    9578:	sub	r2, r2, r1
    957c:	blx	r3
    9580:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9584:	str	r0, [r7]
    9588:	ldr	r0, [fp, #-72]	; 0xffffffb8
    958c:	cmp	r0, r8
    9590:	bne	9538 <doContent+0x1bac>
    9594:	b	92a0 <doContent+0x1914>
    9598:	mov	r6, #21
    959c:	b	92f0 <doContent+0x1964>

000095a0 <storeAtts>:
    95a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    95a4:	add	fp, sp, #28
    95a8:	sub	sp, sp, #76	; 0x4c
    95ac:	ldr	sl, [r0, #364]	; 0x16c
    95b0:	mov	r5, r0
    95b4:	ldr	r4, [r3]
    95b8:	str	r2, [fp, #-48]	; 0xffffffd0
    95bc:	str	r1, [fp, #-44]	; 0xffffffd4
    95c0:	str	r3, [sp, #48]	; 0x30
    95c4:	str	r5, [fp, #-36]	; 0xffffffdc
    95c8:	add	r0, sl, #20
    95cc:	str	r0, [fp, #-40]	; 0xffffffd8
    95d0:	ldr	r0, [sl, #28]
    95d4:	cmp	r0, #0
    95d8:	beq	96d4 <storeAtts+0x134>
    95dc:	ldrb	r9, [r4]
    95e0:	ldr	r6, [r5, #512]	; 0x200
    95e4:	cmp	r9, #0
    95e8:	beq	9614 <storeAtts+0x74>
    95ec:	movw	r3, #16963	; 0x4243
    95f0:	add	r2, r4, #1
    95f4:	mov	r1, r9
    95f8:	movt	r3, #15
    95fc:	mul	r6, r6, r3
    9600:	uxtb	r1, r1
    9604:	eor	r6, r6, r1
    9608:	ldrb	r1, [r2], #1
    960c:	cmp	r1, #0
    9610:	bne	95fc <storeAtts+0x5c>
    9614:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9618:	sub	r1, r0, #1
    961c:	and	r2, r6, r1
    9620:	ldr	r3, [r3]
    9624:	ldr	r7, [r3, r2, lsl #2]
    9628:	cmp	r7, #0
    962c:	beq	96d4 <storeAtts+0x134>
    9630:	rsb	r5, r0, #0
    9634:	lsr	r1, r1, #2
    9638:	mov	r8, #0
    963c:	and	r6, r6, r5
    9640:	str	r1, [sp, #40]	; 0x28
    9644:	str	r6, [sp, #44]	; 0x2c
    9648:	add	r6, r4, #1
    964c:	str	r6, [sp, #52]	; 0x34
    9650:	ldr	r6, [r7]
    9654:	ldrb	r5, [r6]
    9658:	cmp	r9, r5
    965c:	bne	9688 <storeAtts+0xe8>
    9660:	add	r5, r6, #1
    9664:	ldr	r6, [sp, #52]	; 0x34
    9668:	mov	ip, r7
    966c:	mov	lr, r9
    9670:	tst	lr, #255	; 0xff
    9674:	beq	96c8 <storeAtts+0x128>
    9678:	ldrb	lr, [r6], #1
    967c:	ldrb	r1, [r5], #1
    9680:	cmp	lr, r1
    9684:	beq	9670 <storeAtts+0xd0>
    9688:	tst	r8, #255	; 0xff
    968c:	bne	96a8 <storeAtts+0x108>
    9690:	ldrb	r1, [sl, #24]
    9694:	ldr	r7, [sp, #44]	; 0x2c
    9698:	ldr	r6, [sp, #40]	; 0x28
    969c:	sub	r1, r1, #1
    96a0:	and	r1, r6, r7, lsr r1
    96a4:	orr	r8, r1, #1
    96a8:	uxtb	r1, r8
    96ac:	ldr	r5, [fp, #-36]	; 0xffffffdc
    96b0:	subs	r2, r2, r1
    96b4:	addcc	r2, r2, r0
    96b8:	ldr	r7, [r3, r2, lsl #2]
    96bc:	cmp	r7, #0
    96c0:	bne	9650 <storeAtts+0xb0>
    96c4:	b	96d4 <storeAtts+0x134>
    96c8:	ldr	r5, [fp, #-36]	; 0xffffffdc
    96cc:	cmp	ip, #0
    96d0:	bne	9774 <storeAtts+0x1d4>
    96d4:	add	r6, sl, #80	; 0x50
    96d8:	ldr	r1, [sl, #88]	; 0x58
    96dc:	ldr	r0, [sl, #92]	; 0x5c
    96e0:	cmp	r0, r1
    96e4:	bne	96fc <storeAtts+0x15c>
    96e8:	mov	r0, r6
    96ec:	bl	65e4 <poolGrow>
    96f0:	cmp	r0, #0
    96f4:	beq	a34c <storeAtts+0xdac>
    96f8:	ldr	r0, [sl, #92]	; 0x5c
    96fc:	ldrb	r1, [r4]
    9700:	add	r2, r0, #1
    9704:	str	r2, [sl, #92]	; 0x5c
    9708:	strb	r1, [r0]
    970c:	ldrb	r0, [r4], #1
    9710:	cmp	r0, #0
    9714:	bne	96d8 <storeAtts+0x138>
    9718:	ldr	r2, [sl, #96]	; 0x60
    971c:	ldr	r0, [sl, #92]	; 0x5c
    9720:	mov	r7, #1
    9724:	cmp	r2, #0
    9728:	str	r0, [sl, #96]	; 0x60
    972c:	beq	a350 <storeAtts+0xdb0>
    9730:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9734:	mov	r0, r5
    9738:	mov	r3, #24
    973c:	bl	5d0c <lookup>
    9740:	cmp	r0, #0
    9744:	beq	a350 <storeAtts+0xdb0>
    9748:	mov	ip, r0
    974c:	ldrb	r0, [r5, #244]	; 0xf4
    9750:	cmp	r0, #0
    9754:	beq	9774 <storeAtts+0x1d4>
    9758:	mov	r0, r5
    975c:	mov	r1, ip
    9760:	mov	r4, ip
    9764:	bl	acd8 <setElementTypePrefix>
    9768:	mov	ip, r4
    976c:	cmp	r0, #0
    9770:	beq	a350 <storeAtts+0xdb0>
    9774:	ldr	r7, [fp, #-44]	; 0xffffffd4
    9778:	ldr	r8, [fp, #-48]	; 0xffffffd0
    977c:	ldr	r2, [r5, #388]	; 0x184
    9780:	ldr	r3, [r5, #400]	; 0x190
    9784:	ldr	r4, [ip, #12]
    9788:	str	ip, [sp, #52]	; 0x34
    978c:	ldr	r6, [r7, #40]	; 0x28
    9790:	mov	r0, r7
    9794:	mov	r1, r8
    9798:	blx	r6
    979c:	mov	r6, r0
    97a0:	str	r4, [fp, #-40]	; 0xffffffd8
    97a4:	add	r0, r0, r4
    97a8:	ldr	r4, [r5, #388]	; 0x184
    97ac:	cmp	r0, r4
    97b0:	ble	97f8 <storeAtts+0x258>
    97b4:	add	r1, r0, #16
    97b8:	str	r1, [r5, #388]	; 0x184
    97bc:	lsl	r1, r1, #4
    97c0:	ldr	r2, [r5, #16]
    97c4:	ldr	r0, [r5, #400]	; 0x190
    97c8:	blx	r2
    97cc:	cmp	r0, #0
    97d0:	beq	a34c <storeAtts+0xdac>
    97d4:	mov	r3, r0
    97d8:	cmp	r6, r4
    97dc:	str	r0, [r5, #400]	; 0x190
    97e0:	ble	97f8 <storeAtts+0x258>
    97e4:	ldr	r4, [r7, #40]	; 0x28
    97e8:	mov	r0, r7
    97ec:	mov	r1, r8
    97f0:	mov	r2, r6
    97f4:	blx	r4
    97f8:	ldr	r9, [r5, #400]	; 0x190
    97fc:	cmp	r6, #1
    9800:	blt	9b5c <storeAtts+0x5bc>
    9804:	ldr	r4, [r9]
    9808:	ldr	r2, [r7, #32]
    980c:	mov	r0, r7
    9810:	mov	r1, r4
    9814:	blx	r2
    9818:	add	r3, r4, r0
    981c:	mov	r0, r5
    9820:	mov	r1, r7
    9824:	mov	r2, r4
    9828:	bl	62f8 <getAttributeId>
    982c:	cmp	r0, #0
    9830:	beq	a34c <storeAtts+0xdac>
    9834:	ldr	ip, [sp, #52]	; 0x34
    9838:	mov	r8, r0
    983c:	mov	r0, #0
    9840:	str	r6, [sp, #24]
    9844:	str	r9, [fp, #-48]	; 0xffffffd0
    9848:	add	r9, r5, #444	; 0x1bc
    984c:	add	r4, r5, #432	; 0x1b0
    9850:	mov	r6, #0
    9854:	str	r0, [sp, #20]
    9858:	mov	r0, #0
    985c:	str	r4, [sp, #28]
    9860:	str	r9, [sp, #32]
    9864:	str	r0, [sp, #44]	; 0x2c
    9868:	ldr	r0, [r8]
    986c:	ldrb	r1, [r0, #-1]
    9870:	cmp	r1, #0
    9874:	bne	a3b0 <storeAtts+0xe10>
    9878:	mov	r1, #1
    987c:	ldr	r7, [fp, #-44]	; 0xffffffd4
    9880:	add	r3, r6, #1
    9884:	strb	r1, [r0, #-1]
    9888:	ldr	r1, [fp, #-48]	; 0xffffffd0
    988c:	str	r3, [sp, #40]	; 0x28
    9890:	ldr	r0, [r8]
    9894:	str	r0, [r1, r6, lsl #2]
    9898:	ldr	r1, [sp, #44]	; 0x2c
    989c:	ldr	r0, [r5, #400]	; 0x190
    98a0:	add	lr, r0, r1, lsl #4
    98a4:	ldrb	r1, [lr, #12]
    98a8:	cmp	r1, #0
    98ac:	beq	98cc <storeAtts+0x32c>
    98b0:	str	r6, [sp, #36]	; 0x24
    98b4:	ldmib	lr, {r1, r6}
    98b8:	str	r1, [fp, #-32]	; 0xffffffe0
    98bc:	ldr	r0, [r9]
    98c0:	cmp	r0, #0
    98c4:	bne	99f0 <storeAtts+0x450>
    98c8:	b	99e0 <storeAtts+0x440>
    98cc:	ldrb	r1, [r8, #8]
    98d0:	mov	r2, #1
    98d4:	cmp	r1, #0
    98d8:	beq	991c <storeAtts+0x37c>
    98dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    98e0:	cmp	r1, #1
    98e4:	blt	991c <storeAtts+0x37c>
    98e8:	ldr	r1, [ip, #20]
    98ec:	mov	r0, #0
    98f0:	add	r1, r1, #4
    98f4:	ldr	r3, [r1, #-4]
    98f8:	cmp	r8, r3
    98fc:	beq	9918 <storeAtts+0x378>
    9900:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9904:	add	r0, r0, #1
    9908:	add	r1, r1, #12
    990c:	cmp	r0, r3
    9910:	blt	98f4 <storeAtts+0x354>
    9914:	b	991c <storeAtts+0x37c>
    9918:	ldrb	r2, [r1]
    991c:	ldr	r0, [lr, #8]
    9920:	ldr	r3, [lr, #4]
    9924:	mov	r1, r7
    9928:	stm	sp, {r0, r4}
    992c:	mov	r0, r5
    9930:	mov	r4, r2
    9934:	bl	b1fc <appendAttributeValue>
    9938:	cmp	r0, #0
    993c:	bne	a27c <storeAtts+0xcdc>
    9940:	ldr	r0, [r9]
    9944:	cmp	r4, #0
    9948:	beq	995c <storeAtts+0x3bc>
    994c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9950:	ldr	r4, [sp, #40]	; 0x28
    9954:	mov	lr, r6
    9958:	b	9994 <storeAtts+0x3f4>
    995c:	ldr	r1, [r5, #448]	; 0x1c0
    9960:	ldr	r4, [sp, #40]	; 0x28
    9964:	mov	lr, r6
    9968:	cmp	r1, r0
    996c:	bne	9978 <storeAtts+0x3d8>
    9970:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9974:	b	9994 <storeAtts+0x3f4>
    9978:	mov	r1, r0
    997c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9980:	ldrb	r2, [r1, #-1]!
    9984:	cmp	r2, #32
    9988:	ldreq	r0, [sp, #32]
    998c:	streq	r1, [r0]
    9990:	moveq	r0, r1
    9994:	ldr	r1, [r5, #440]	; 0x1b8
    9998:	cmp	r0, r1
    999c:	bne	99c4 <storeAtts+0x424>
    99a0:	ldr	r0, [sp, #28]
    99a4:	mov	r6, lr
    99a8:	bl	65e4 <poolGrow>
    99ac:	cmp	r0, #0
    99b0:	beq	a34c <storeAtts+0xdac>
    99b4:	ldr	r0, [sp, #32]
    99b8:	ldr	r9, [fp, #-48]	; 0xffffffd0
    99bc:	mov	lr, r6
    99c0:	ldr	r0, [r0]
    99c4:	add	r1, r0, #1
    99c8:	str	r1, [r5, #444]	; 0x1bc
    99cc:	mov	r1, #0
    99d0:	strb	r1, [r0]
    99d4:	ldr	r0, [r5, #448]	; 0x1c0
    99d8:	str	r0, [r9, r4, lsl #2]
    99dc:	b	9a84 <storeAtts+0x4e4>
    99e0:	mov	r0, r4
    99e4:	bl	65e4 <poolGrow>
    99e8:	cmp	r0, #0
    99ec:	beq	9bb0 <storeAtts+0x610>
    99f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    99f4:	ldr	r5, [r7, #60]	; 0x3c
    99f8:	sub	r1, fp, #32
    99fc:	mov	r2, r6
    9a00:	mov	r3, r9
    9a04:	ldr	r0, [r0, #440]	; 0x1b8
    9a08:	str	r0, [sp]
    9a0c:	mov	r0, r7
    9a10:	blx	r5
    9a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9a18:	cmp	r0, r6
    9a1c:	bne	99e0 <storeAtts+0x440>
    9a20:	ldr	r5, [fp, #-36]	; 0xffffffdc
    9a24:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9a28:	ldr	r4, [sp, #40]	; 0x28
    9a2c:	ldr	r0, [r5, #448]	; 0x1c0
    9a30:	cmp	r0, #0
    9a34:	beq	9bb8 <storeAtts+0x618>
    9a38:	ldr	r1, [r5, #440]	; 0x1b8
    9a3c:	ldr	r0, [r5, #444]	; 0x1bc
    9a40:	cmp	r0, r1
    9a44:	bne	9a60 <storeAtts+0x4c0>
    9a48:	ldr	r0, [sp, #28]
    9a4c:	bl	65e4 <poolGrow>
    9a50:	cmp	r0, #0
    9a54:	beq	9bb8 <storeAtts+0x618>
    9a58:	ldr	r0, [sp, #32]
    9a5c:	ldr	r0, [r0]
    9a60:	add	r1, r0, #1
    9a64:	ldr	lr, [sp, #36]	; 0x24
    9a68:	str	r1, [r5, #444]	; 0x1bc
    9a6c:	mov	r1, #0
    9a70:	strb	r1, [r0]
    9a74:	ldr	r0, [r5, #448]	; 0x1c0
    9a78:	cmp	r0, #0
    9a7c:	str	r0, [r9, r4, lsl #2]
    9a80:	beq	a34c <storeAtts+0xdac>
    9a84:	ldr	r0, [r5, #444]	; 0x1bc
    9a88:	str	r0, [r5, #448]	; 0x1c0
    9a8c:	ldr	r1, [r8, #4]
    9a90:	cmp	r1, #0
    9a94:	beq	9aec <storeAtts+0x54c>
    9a98:	ldrb	r0, [r8, #9]
    9a9c:	cmp	r0, #0
    9aa0:	beq	9ad4 <storeAtts+0x534>
    9aa4:	ldr	r0, [fp, #8]
    9aa8:	ldr	r3, [r9, r4, lsl #2]
    9aac:	mov	r2, r8
    9ab0:	mov	r6, lr
    9ab4:	str	r0, [sp]
    9ab8:	mov	r0, r5
    9abc:	bl	ae0c <addBinding>
    9ac0:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9ac4:	mov	lr, r6
    9ac8:	cmp	r0, #0
    9acc:	beq	9af0 <storeAtts+0x550>
    9ad0:	b	a27c <storeAtts+0xcdc>
    9ad4:	ldr	r0, [r8]
    9ad8:	mov	r1, #2
    9adc:	strb	r1, [r0, #-1]
    9ae0:	ldr	r0, [sp, #20]
    9ae4:	add	r0, r0, #1
    9ae8:	str	r0, [sp, #20]
    9aec:	add	lr, lr, #2
    9af0:	ldr	r1, [sp, #44]	; 0x2c
    9af4:	ldr	r0, [sp, #24]
    9af8:	add	r1, r1, #1
    9afc:	cmp	r1, r0
    9b00:	bge	a3d8 <storeAtts+0xe38>
    9b04:	ldr	r0, [r5, #400]	; 0x190
    9b08:	ldr	r2, [r7, #32]
    9b0c:	str	r1, [sp, #44]	; 0x2c
    9b10:	mov	r9, lr
    9b14:	ldr	r6, [r0, r1, lsl #4]
    9b18:	mov	r0, r7
    9b1c:	mov	r1, r6
    9b20:	blx	r2
    9b24:	add	r3, r6, r0
    9b28:	mov	r0, r5
    9b2c:	mov	r1, r7
    9b30:	mov	r2, r6
    9b34:	bl	62f8 <getAttributeId>
    9b38:	mov	r6, r9
    9b3c:	ldr	ip, [sp, #52]	; 0x34
    9b40:	ldr	r4, [sp, #28]
    9b44:	ldr	r9, [sp, #32]
    9b48:	mov	r8, r0
    9b4c:	mov	r7, #1
    9b50:	cmp	r0, #0
    9b54:	bne	9868 <storeAtts+0x2c8>
    9b58:	b	a350 <storeAtts+0xdb0>
    9b5c:	mov	r8, #0
    9b60:	mov	lr, #0
    9b64:	ldr	ip, [sp, #52]	; 0x34
    9b68:	str	lr, [r5, #392]	; 0x188
    9b6c:	ldr	r0, [ip, #8]
    9b70:	cmp	r0, #0
    9b74:	beq	9bc8 <storeAtts+0x628>
    9b78:	ldr	r0, [r0]
    9b7c:	ldrb	r1, [r0, #-1]
    9b80:	cmp	r1, #0
    9b84:	beq	9bc8 <storeAtts+0x628>
    9b88:	cmp	lr, #1
    9b8c:	blt	9bd0 <storeAtts+0x630>
    9b90:	mov	r1, #0
    9b94:	ldr	r2, [r9, r1, lsl #2]
    9b98:	cmp	r2, r0
    9b9c:	beq	a274 <storeAtts+0xcd4>
    9ba0:	add	r1, r1, #2
    9ba4:	cmp	r1, lr
    9ba8:	blt	9b94 <storeAtts+0x5f4>
    9bac:	b	9bd0 <storeAtts+0x630>
    9bb0:	ldr	r9, [fp, #-48]	; 0xffffffd0
    9bb4:	ldr	r4, [sp, #40]	; 0x28
    9bb8:	mov	r0, #0
    9bbc:	mov	r7, #1
    9bc0:	str	r0, [r9, r4, lsl #2]
    9bc4:	b	a350 <storeAtts+0xdb0>
    9bc8:	mvn	r0, #0
    9bcc:	str	r0, [r5, #396]	; 0x18c
    9bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9bd4:	str	r9, [fp, #-48]	; 0xffffffd0
    9bd8:	cmp	r0, #1
    9bdc:	blt	9cc0 <storeAtts+0x720>
    9be0:	mov	r4, #0
    9be4:	mov	r9, #1
    9be8:	mov	r7, #0
    9bec:	b	9c94 <storeAtts+0x6f4>
    9bf0:	add	r1, r0, r4
    9bf4:	ldr	r3, [r1, #8]
    9bf8:	cmp	r3, #0
    9bfc:	beq	9cac <storeAtts+0x70c>
    9c00:	ldr	r1, [r2, #4]
    9c04:	cmp	r1, #0
    9c08:	beq	9c44 <storeAtts+0x6a4>
    9c0c:	ldrb	r5, [r2, #9]
    9c10:	cmp	r5, #0
    9c14:	beq	9c64 <storeAtts+0x6c4>
    9c18:	ldr	r0, [fp, #8]
    9c1c:	ldr	r5, [fp, #-36]	; 0xffffffdc
    9c20:	mov	r6, lr
    9c24:	str	r0, [sp]
    9c28:	mov	r0, r5
    9c2c:	bl	ae0c <addBinding>
    9c30:	ldr	ip, [sp, #52]	; 0x34
    9c34:	mov	lr, r6
    9c38:	cmp	r0, #0
    9c3c:	beq	9cac <storeAtts+0x70c>
    9c40:	b	a27c <storeAtts+0xcdc>
    9c44:	strb	r9, [r6, #-1]
    9c48:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9c4c:	ldr	r1, [r0, r4]!
    9c50:	ldr	r1, [r1]
    9c54:	str	r1, [r2, lr, lsl #2]!
    9c58:	add	lr, lr, #2
    9c5c:	ldr	r0, [r0, #8]
    9c60:	b	9c8c <storeAtts+0x6ec>
    9c64:	mov	r1, #2
    9c68:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9c6c:	add	r8, r8, #1
    9c70:	strb	r1, [r6, #-1]
    9c74:	ldr	r1, [r0, r4]!
    9c78:	ldr	r1, [r1]
    9c7c:	str	r1, [r2, lr, lsl #2]!
    9c80:	add	lr, lr, #2
    9c84:	ldr	r0, [r0, #8]
    9c88:	ldr	r5, [fp, #-36]	; 0xffffffdc
    9c8c:	str	r0, [r2, #4]
    9c90:	b	9cac <storeAtts+0x70c>
    9c94:	ldr	r0, [ip, #20]
    9c98:	ldr	r2, [r0, r4]
    9c9c:	ldr	r6, [r2]
    9ca0:	ldrb	r1, [r6, #-1]
    9ca4:	cmp	r1, #0
    9ca8:	beq	9bf0 <storeAtts+0x650>
    9cac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9cb0:	add	r7, r7, #1
    9cb4:	add	r4, r4, #12
    9cb8:	cmp	r7, r0
    9cbc:	blt	9c94 <storeAtts+0x6f4>
    9cc0:	ldr	r6, [fp, #-48]	; 0xffffffd0
    9cc4:	mov	r4, #0
    9cc8:	cmp	r8, #0
    9ccc:	str	r4, [r6, lr, lsl #2]
    9cd0:	beq	a1a0 <storeAtts+0xc00>
    9cd4:	ldrb	r1, [r5, #412]	; 0x19c
    9cd8:	lsl	r2, r8, #1
    9cdc:	mov	r0, #0
    9ce0:	str	lr, [sp, #36]	; 0x24
    9ce4:	cmp	r0, r2, asr r1
    9ce8:	beq	9d48 <storeAtts+0x7a8>
    9cec:	add	r2, r1, #1
    9cf0:	uxtb	r1, r1
    9cf4:	cmp	r0, r8, asr r1
    9cf8:	mov	r1, r2
    9cfc:	bne	9cec <storeAtts+0x74c>
    9d00:	uxtb	r0, r2
    9d04:	cmp	r0, #3
    9d08:	mov	r0, #12
    9d0c:	movls	r2, #3
    9d10:	uxtb	r4, r2
    9d14:	strb	r2, [r5, #412]	; 0x19c
    9d18:	lsl	r1, r0, r4
    9d1c:	ldr	r2, [r5, #16]
    9d20:	ldr	r0, [r5, #404]	; 0x194
    9d24:	blx	r2
    9d28:	cmp	r0, #0
    9d2c:	beq	a34c <storeAtts+0xdac>
    9d30:	ldr	ip, [sp, #52]	; 0x34
    9d34:	ldr	lr, [sp, #36]	; 0x24
    9d38:	str	r0, [r5, #404]	; 0x194
    9d3c:	mov	r0, #1
    9d40:	lsl	r9, r0, r4
    9d44:	b	9d5c <storeAtts+0x7bc>
    9d48:	ldr	r0, [r5, #408]	; 0x198
    9d4c:	mov	r2, #1
    9d50:	lsl	r9, r2, r1
    9d54:	cmp	r0, #0
    9d58:	bne	9d80 <storeAtts+0x7e0>
    9d5c:	ldr	r0, [r5, #404]	; 0x194
    9d60:	add	r1, r9, r9, lsl #1
    9d64:	mov	r2, r9
    9d68:	add	r0, r0, r1, lsl #2
    9d6c:	sub	r1, r0, #12
    9d70:	mvn	r0, #0
    9d74:	str	r0, [r1], #-12
    9d78:	subs	r2, r2, #1
    9d7c:	bne	9d74 <storeAtts+0x7d4>
    9d80:	sub	r0, r0, #1
    9d84:	cmp	lr, #1
    9d88:	str	r0, [fp, #-44]	; 0xffffffd4
    9d8c:	str	r0, [r5, #408]	; 0x198
    9d90:	blt	a19c <storeAtts+0xbfc>
    9d94:	rsb	r0, r9, #0
    9d98:	mov	r1, #0
    9d9c:	mov	r4, #0
    9da0:	str	r9, [sp, #12]
    9da4:	str	r0, [sp, #8]
    9da8:	add	r0, r5, #432	; 0x1b0
    9dac:	str	r0, [fp, #-40]	; 0xffffffd8
    9db0:	sub	r0, r9, #1
    9db4:	str	r0, [sp, #16]
    9db8:	lsr	r0, r0, #2
    9dbc:	str	r0, [sp, #32]
    9dc0:	ldr	r7, [r6, r4, lsl #2]
    9dc4:	ldrb	r0, [r7, #-1]
    9dc8:	cmp	r0, #2
    9dcc:	bne	9ed8 <storeAtts+0x938>
    9dd0:	str	r8, [sp, #20]
    9dd4:	ldr	r8, [r5, #512]	; 0x200
    9dd8:	strb	r1, [r7, #-1]
    9ddc:	ldr	lr, [sl, #48]	; 0x30
    9de0:	cmp	lr, #0
    9de4:	beq	a34c <storeAtts+0xdac>
    9de8:	ldrb	r0, [r7]
    9dec:	ldr	r6, [r5, #512]	; 0x200
    9df0:	cmp	r0, #0
    9df4:	beq	9e20 <storeAtts+0x880>
    9df8:	movw	r5, #16963	; 0x4243
    9dfc:	add	r2, r7, #1
    9e00:	mov	r3, r0
    9e04:	movt	r5, #15
    9e08:	mul	r1, r6, r5
    9e0c:	uxtb	r3, r3
    9e10:	eor	r6, r1, r3
    9e14:	ldrb	r3, [r2], #1
    9e18:	cmp	r3, #0
    9e1c:	bne	9e08 <storeAtts+0x868>
    9e20:	ldr	r3, [sl, #40]	; 0x28
    9e24:	sub	r1, lr, #1
    9e28:	and	r2, r6, r1
    9e2c:	ldr	r9, [r3, r2, lsl #2]
    9e30:	cmp	r9, #0
    9e34:	beq	a34c <storeAtts+0xdac>
    9e38:	rsb	r5, lr, #0
    9e3c:	str	r0, [sp, #44]	; 0x2c
    9e40:	mov	ip, #0
    9e44:	and	r0, r6, r5
    9e48:	str	r0, [sp, #28]
    9e4c:	add	r0, r7, #1
    9e50:	str	r0, [sp, #40]	; 0x28
    9e54:	lsr	r0, r1, #2
    9e58:	str	r0, [sp, #24]
    9e5c:	ldr	r1, [r9]
    9e60:	ldr	r6, [sp, #44]	; 0x2c
    9e64:	mov	r0, lr
    9e68:	ldrb	r5, [r1]
    9e6c:	cmp	r6, r5
    9e70:	bne	9e98 <storeAtts+0x8f8>
    9e74:	add	r5, r1, #1
    9e78:	ldr	r6, [sp, #40]	; 0x28
    9e7c:	ldr	r1, [sp, #44]	; 0x2c
    9e80:	tst	r1, #255	; 0xff
    9e84:	beq	9ee0 <storeAtts+0x940>
    9e88:	ldrb	r1, [r6], #1
    9e8c:	ldrb	lr, [r5], #1
    9e90:	cmp	r1, lr
    9e94:	beq	9e80 <storeAtts+0x8e0>
    9e98:	tst	ip, #255	; 0xff
    9e9c:	bne	9eb8 <storeAtts+0x918>
    9ea0:	ldrb	r1, [sl, #44]	; 0x2c
    9ea4:	ldr	r6, [sp, #28]
    9ea8:	ldr	r5, [sp, #24]
    9eac:	sub	r1, r1, #1
    9eb0:	and	r1, r5, r6, lsr r1
    9eb4:	orr	ip, r1, #1
    9eb8:	uxtb	r1, ip
    9ebc:	mov	lr, r0
    9ec0:	subs	r2, r2, r1
    9ec4:	addcc	r2, r2, r0
    9ec8:	ldr	r9, [r3, r2, lsl #2]
    9ecc:	cmp	r9, #0
    9ed0:	bne	9e5c <storeAtts+0x8bc>
    9ed4:	b	a34c <storeAtts+0xdac>
    9ed8:	strb	r1, [r7, #-1]
    9edc:	b	a188 <storeAtts+0xbe8>
    9ee0:	cmp	r9, #0
    9ee4:	beq	a34c <storeAtts+0xdac>
    9ee8:	ldr	r0, [r9, #4]
    9eec:	cmp	r0, #0
    9ef0:	beq	a34c <storeAtts+0xdac>
    9ef4:	ldr	r9, [r0, #4]
    9ef8:	cmp	r9, #0
    9efc:	beq	a284 <storeAtts+0xce4>
    9f00:	ldr	r0, [r9, #20]
    9f04:	cmp	r0, #1
    9f08:	blt	9f7c <storeAtts+0x9dc>
    9f0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9f10:	movw	r3, #16963	; 0x4243
    9f14:	mov	r6, #0
    9f18:	movt	r3, #15
    9f1c:	ldr	r0, [r9, #16]
    9f20:	ldr	r1, [r2, #440]	; 0x1b8
    9f24:	ldrb	r5, [r0, r6]
    9f28:	ldr	r0, [r2, #444]	; 0x1bc
    9f2c:	cmp	r0, r1
    9f30:	bne	9f54 <storeAtts+0x9b4>
    9f34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9f38:	bl	65e4 <poolGrow>
    9f3c:	cmp	r0, #0
    9f40:	beq	a34c <storeAtts+0xdac>
    9f44:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9f48:	movw	r3, #16963	; 0x4243
    9f4c:	movt	r3, #15
    9f50:	ldr	r0, [r2, #444]	; 0x1bc
    9f54:	add	r1, r0, #1
    9f58:	add	r6, r6, #1
    9f5c:	str	r1, [r2, #444]	; 0x1bc
    9f60:	strb	r5, [r0]
    9f64:	mul	r0, r8, r3
    9f68:	eor	r8, r0, r5
    9f6c:	ldr	r0, [r9, #20]
    9f70:	cmp	r6, r0
    9f74:	blt	9f1c <storeAtts+0x97c>
    9f78:	b	9f84 <storeAtts+0x9e4>
    9f7c:	movw	r3, #16963	; 0x4243
    9f80:	movt	r3, #15
    9f84:	str	r9, [sp, #44]	; 0x2c
    9f88:	ldrb	r0, [r7], #1
    9f8c:	cmp	r0, #58	; 0x3a
    9f90:	bne	9f88 <storeAtts+0x9e8>
    9f94:	ldr	r5, [fp, #-36]	; 0xffffffdc
    9f98:	mov	r9, #0
    9f9c:	ldrb	r6, [r7, r9]
    9fa0:	ldr	r1, [r5, #440]	; 0x1b8
    9fa4:	ldr	r0, [r5, #444]	; 0x1bc
    9fa8:	cmp	r0, r1
    9fac:	mov	r1, r6
    9fb0:	bne	9fd4 <storeAtts+0xa34>
    9fb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9fb8:	bl	65e4 <poolGrow>
    9fbc:	cmp	r0, #0
    9fc0:	beq	a34c <storeAtts+0xdac>
    9fc4:	ldrb	r1, [r7, r9]
    9fc8:	ldr	r0, [r5, #444]	; 0x1bc
    9fcc:	movw	r3, #16963	; 0x4243
    9fd0:	movt	r3, #15
    9fd4:	add	r2, r0, #1
    9fd8:	str	r2, [r5, #444]	; 0x1bc
    9fdc:	strb	r1, [r0]
    9fe0:	mul	r0, r8, r3
    9fe4:	eor	r8, r0, r6
    9fe8:	ldrb	r0, [r7, r9]
    9fec:	add	r9, r9, #1
    9ff0:	cmp	r0, #0
    9ff4:	bne	9f9c <storeAtts+0x9fc>
    9ff8:	ldr	r0, [sp, #16]
    9ffc:	ldr	lr, [r5, #404]	; 0x194
    a000:	and	r7, r8, r0
    a004:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a008:	add	r1, r7, r7, lsl #1
    a00c:	ldr	r1, [lr, r1, lsl #2]
    a010:	cmp	r1, r0
    a014:	bne	a0d8 <storeAtts+0xb38>
    a018:	ldr	r0, [sp, #8]
    a01c:	ldr	r9, [sp, #12]
    a020:	mov	r2, #0
    a024:	and	ip, r8, r0
    a028:	add	r1, r7, r7, lsl #1
    a02c:	add	r5, lr, r1, lsl #2
    a030:	ldr	r1, [r5, #4]
    a034:	cmp	r8, r1
    a038:	bne	a098 <storeAtts+0xaf8>
    a03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a040:	ldr	r6, [r0, #448]	; 0x1c0
    a044:	ldrb	r1, [r6]
    a048:	clz	r3, r1
    a04c:	cmp	r1, #0
    a050:	lsr	r3, r3, #5
    a054:	beq	a090 <storeAtts+0xaf0>
    a058:	ldr	r5, [r5, #8]
    a05c:	ldrb	r0, [r5]
    a060:	cmp	r1, r0
    a064:	bne	a090 <storeAtts+0xaf0>
    a068:	add	r6, r6, #1
    a06c:	add	r5, r5, #1
    a070:	ldrb	r1, [r6], #1
    a074:	clz	r0, r1
    a078:	cmp	r1, #0
    a07c:	lsr	r3, r0, #5
    a080:	beq	a090 <storeAtts+0xaf0>
    a084:	ldrb	r0, [r5], #1
    a088:	cmp	r1, r0
    a08c:	beq	a070 <storeAtts+0xad0>
    a090:	cmp	r3, #0
    a094:	bne	a3e0 <storeAtts+0xe40>
    a098:	ldr	r5, [fp, #-36]	; 0xffffffdc
    a09c:	tst	r2, #255	; 0xff
    a0a0:	bne	a0b8 <storeAtts+0xb18>
    a0a4:	ldrb	r0, [r5, #412]	; 0x19c
    a0a8:	ldr	r1, [sp, #32]
    a0ac:	sub	r0, r0, #1
    a0b0:	and	r0, r1, ip, lsr r0
    a0b4:	orr	r2, r0, #1
    a0b8:	uxtb	r0, r2
    a0bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a0c0:	subs	r7, r7, r0
    a0c4:	addlt	r7, r7, r9
    a0c8:	add	r0, r7, r7, lsl #1
    a0cc:	ldr	r0, [lr, r0, lsl #2]
    a0d0:	cmp	r0, r1
    a0d4:	beq	a028 <storeAtts+0xa88>
    a0d8:	ldrb	r0, [r5, #245]	; 0xf5
    a0dc:	ldr	ip, [sp, #52]	; 0x34
    a0e0:	ldr	lr, [sp, #36]	; 0x24
    a0e4:	cmp	r0, #0
    a0e8:	beq	a14c <storeAtts+0xbac>
    a0ec:	ldr	r0, [r5, #444]	; 0x1bc
    a0f0:	ldrb	r1, [r5, #488]	; 0x1e8
    a0f4:	strb	r1, [r0, #-1]
    a0f8:	ldr	r0, [sp, #44]	; 0x2c
    a0fc:	ldr	r0, [r0]
    a100:	ldr	r6, [r0]
    a104:	ldr	r1, [r5, #440]	; 0x1b8
    a108:	ldr	r0, [r5, #444]	; 0x1bc
    a10c:	cmp	r0, r1
    a110:	bne	a130 <storeAtts+0xb90>
    a114:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a118:	bl	65e4 <poolGrow>
    a11c:	cmp	r0, #0
    a120:	beq	a34c <storeAtts+0xdac>
    a124:	ldr	r0, [r5, #444]	; 0x1bc
    a128:	ldr	ip, [sp, #52]	; 0x34
    a12c:	ldr	lr, [sp, #36]	; 0x24
    a130:	ldrb	r1, [r6]
    a134:	add	r2, r0, #1
    a138:	str	r2, [r5, #444]	; 0x1bc
    a13c:	strb	r1, [r0]
    a140:	ldrb	r0, [r6], #1
    a144:	cmp	r0, #0
    a148:	bne	a104 <storeAtts+0xb64>
    a14c:	ldr	r0, [r5, #444]	; 0x1bc
    a150:	ldr	r1, [r5, #448]	; 0x1c0
    a154:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a158:	add	r2, r7, r7, lsl #1
    a15c:	str	r0, [r5, #448]	; 0x1c0
    a160:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a164:	str	r1, [r0, r4, lsl #2]
    a168:	ldr	r0, [r5, #404]	; 0x194
    a16c:	str	r3, [r0, r2, lsl #2]!
    a170:	str	r8, [r0, #4]
    a174:	ldr	r8, [sp, #20]
    a178:	str	r1, [r0, #8]
    a17c:	mov	r1, #0
    a180:	subs	r8, r8, #1
    a184:	beq	a3e8 <storeAtts+0xe48>
    a188:	ldr	r6, [fp, #-48]	; 0xffffffd0
    a18c:	add	r4, r4, #2
    a190:	cmp	r4, lr
    a194:	blt	9dc0 <storeAtts+0x820>
    a198:	b	a1a0 <storeAtts+0xc00>
    a19c:	mov	r4, #0
    a1a0:	cmp	r4, lr
    a1a4:	bge	a1c0 <storeAtts+0xc20>
    a1a8:	mov	r0, #0
    a1ac:	ldr	r1, [r6, r4, lsl #2]
    a1b0:	add	r4, r4, #2
    a1b4:	cmp	r4, lr
    a1b8:	strb	r0, [r1, #-1]
    a1bc:	blt	a1ac <storeAtts+0xc0c>
    a1c0:	ldr	r0, [fp, #8]
    a1c4:	ldr	r0, [r0]
    a1c8:	cmp	r0, #0
    a1cc:	beq	a1ec <storeAtts+0xc4c>
    a1d0:	mov	r1, #0
    a1d4:	ldr	r2, [r0, #12]
    a1d8:	ldr	r2, [r2]
    a1dc:	strb	r1, [r2, #-1]
    a1e0:	ldr	r0, [r0, #4]
    a1e4:	cmp	r0, #0
    a1e8:	bne	a1d4 <storeAtts+0xc34>
    a1ec:	ldrb	r0, [r5, #244]	; 0xf4
    a1f0:	mov	r7, #0
    a1f4:	cmp	r0, #0
    a1f8:	beq	a350 <storeAtts+0xdb0>
    a1fc:	ldr	r0, [ip, #4]
    a200:	cmp	r0, #0
    a204:	beq	a22c <storeAtts+0xc8c>
    a208:	ldr	sl, [r0, #4]
    a20c:	cmp	sl, #0
    a210:	beq	a284 <storeAtts+0xce4>
    a214:	ldr	r0, [sp, #48]	; 0x30
    a218:	ldr	r4, [r0]
    a21c:	ldrb	r0, [r4], #1
    a220:	cmp	r0, #58	; 0x3a
    a224:	bne	a21c <storeAtts+0xc7c>
    a228:	b	a240 <storeAtts+0xca0>
    a22c:	ldr	sl, [sl, #156]	; 0x9c
    a230:	cmp	sl, #0
    a234:	beq	a350 <storeAtts+0xdb0>
    a238:	ldr	r0, [sp, #48]	; 0x30
    a23c:	ldr	r4, [r0]
    a240:	ldrb	r0, [r5, #245]	; 0xf5
    a244:	cmp	r0, #0
    a248:	beq	a28c <storeAtts+0xcec>
    a24c:	ldr	r0, [sl]
    a250:	mov	r6, #0
    a254:	ldr	r1, [r0]
    a258:	cmp	r1, #0
    a25c:	beq	a298 <storeAtts+0xcf8>
    a260:	ldrb	r0, [r1, r6]
    a264:	add	r6, r6, #1
    a268:	cmp	r0, #0
    a26c:	bne	a260 <storeAtts+0xcc0>
    a270:	b	a298 <storeAtts+0xcf8>
    a274:	str	r1, [r5, #396]	; 0x18c
    a278:	b	9bd0 <storeAtts+0x630>
    a27c:	mov	r7, r0
    a280:	b	a350 <storeAtts+0xdb0>
    a284:	mov	r7, #27
    a288:	b	a350 <storeAtts+0xdb0>
    a28c:	ldr	r0, [sl]
    a290:	mov	r6, #0
    a294:	ldr	r1, [r0]
    a298:	ldr	r2, [sp, #48]	; 0x30
    a29c:	mov	r7, #0
    a2a0:	str	r4, [r2, #4]
    a2a4:	ldr	r0, [sl, #20]
    a2a8:	str	r1, [r2, #8]
    a2ac:	str	r0, [r2, #16]
    a2b0:	str	r6, [r2, #20]
    a2b4:	ldrb	r1, [r4, r7]
    a2b8:	add	r7, r7, #1
    a2bc:	cmp	r1, #0
    a2c0:	bne	a2b4 <storeAtts+0xd14>
    a2c4:	ldr	r2, [sl, #24]
    a2c8:	add	r1, r0, r6
    a2cc:	add	r1, r1, r7
    a2d0:	cmp	r1, r2
    a2d4:	ble	a35c <storeAtts+0xdbc>
    a2d8:	add	r9, r1, #24
    a2dc:	ldr	r1, [r5, #12]
    a2e0:	mov	r0, r9
    a2e4:	blx	r1
    a2e8:	cmp	r0, #0
    a2ec:	beq	a34c <storeAtts+0xdac>
    a2f0:	mov	r8, r0
    a2f4:	mov	r0, r9
    a2f8:	mov	r9, sl
    a2fc:	ldr	r1, [r9, #16]!
    a300:	str	r0, [r9, #8]
    a304:	mov	r0, r8
    a308:	ldr	r2, [r9, #4]
    a30c:	bl	0 <memcpy>
    a310:	ldr	r0, [r9]
    a314:	ldr	r1, [r5, #372]	; 0x174
    a318:	cmp	r1, #0
    a31c:	beq	a338 <storeAtts+0xd98>
    a320:	ldr	r2, [r1, #12]
    a324:	cmp	r2, r0
    a328:	streq	r8, [r1, #12]
    a32c:	ldr	r1, [r1]
    a330:	cmp	r1, #0
    a334:	bne	a320 <storeAtts+0xd80>
    a338:	ldr	r1, [r5, #20]
    a33c:	blx	r1
    a340:	str	r8, [sl, #16]
    a344:	ldr	r0, [sl, #20]
    a348:	b	a364 <storeAtts+0xdc4>
    a34c:	mov	r7, #1
    a350:	mov	r0, r7
    a354:	sub	sp, fp, #28
    a358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a35c:	mov	r9, sl
    a360:	ldr	r8, [r9, #16]!
    a364:	add	r8, r8, r0
    a368:	mov	r1, r4
    a36c:	mov	r2, r7
    a370:	mov	r0, r8
    a374:	bl	0 <memcpy>
    a378:	cmp	r6, #0
    a37c:	beq	a39c <storeAtts+0xdfc>
    a380:	ldrb	r1, [r5, #488]	; 0x1e8
    a384:	add	r0, r8, r7
    a388:	mov	r2, r6
    a38c:	strb	r1, [r0, #-1]
    a390:	ldr	r1, [sl]
    a394:	ldr	r1, [r1]
    a398:	bl	0 <memcpy>
    a39c:	ldr	r0, [r9]
    a3a0:	ldr	r1, [sp, #48]	; 0x30
    a3a4:	mov	r7, #0
    a3a8:	str	r0, [r1]
    a3ac:	b	a350 <storeAtts+0xdb0>
    a3b0:	ldr	r0, [r5, #152]	; 0x98
    a3b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a3b8:	mov	r7, #8
    a3bc:	cmp	r0, r1
    a3c0:	bne	a350 <storeAtts+0xdb0>
    a3c4:	ldr	r0, [r5, #400]	; 0x190
    a3c8:	ldr	r1, [sp, #44]	; 0x2c
    a3cc:	ldr	r0, [r0, r1, lsl #4]
    a3d0:	str	r0, [r5, #296]	; 0x128
    a3d4:	b	a350 <storeAtts+0xdb0>
    a3d8:	ldr	r8, [sp, #20]
    a3dc:	b	9b64 <storeAtts+0x5c4>
    a3e0:	mov	r7, #8
    a3e4:	b	a350 <storeAtts+0xdb0>
    a3e8:	ldr	r6, [fp, #-48]	; 0xffffffd0
    a3ec:	add	r4, r4, #2
    a3f0:	cmp	r4, lr
    a3f4:	blt	a1a8 <storeAtts+0xc08>
    a3f8:	b	a1c0 <storeAtts+0xc20>

0000a3fc <epilogProcessor>:
    a3fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a400:	add	fp, sp, #28
    a404:	sub	sp, sp, #28
    a408:	mov	r5, r0
    a40c:	str	r1, [r0, #296]	; 0x128
    a410:	movw	r0, #0
    a414:	mov	r4, r2
    a418:	mov	r8, r1
    a41c:	mov	r9, #0
    a420:	add	r6, sp, #16
    a424:	add	sl, sp, #20
    a428:	str	r3, [sp, #8]
    a42c:	str	r2, [sp, #12]
    a430:	movt	r0, #0
    a434:	str	r0, [r5, #288]	; 0x120
    a438:	str	r9, [sp, #16]
    a43c:	mov	r1, r8
    a440:	mov	r2, r4
    a444:	mov	r3, r6
    a448:	ldr	r0, [r5, #152]	; 0x98
    a44c:	ldr	r7, [r0]
    a450:	blx	r7
    a454:	ldr	r7, [sp, #16]
    a458:	add	r1, r0, #15
    a45c:	mov	r0, #9
    a460:	cmp	r1, #30
    a464:	str	r7, [r5, #300]	; 0x12c
    a468:	bhi	a6e4 <epilogProcessor+0x2e8>
    a46c:	add	r2, pc, #0
    a470:	ldr	pc, [r2, r1, lsl #2]
    a474:	.word	0x0000a600
    a478:	.word	0x0000a6e4
    a47c:	.word	0x0000a6e4
    a480:	.word	0x0000a6e4
    a484:	.word	0x0000a6e4
    a488:	.word	0x0000a6e4
    a48c:	.word	0x0000a6e4
    a490:	.word	0x0000a6e4
    a494:	.word	0x0000a6e4
    a498:	.word	0x0000a6e4
    a49c:	.word	0x0000a6e4
    a4a0:	.word	0x0000a650
    a4a4:	.word	0x0000a6e4
    a4a8:	.word	0x0000a634
    a4ac:	.word	0x0000a640
    a4b0:	.word	0x0000a664
    a4b4:	.word	0x0000a6e4
    a4b8:	.word	0x0000a6e4
    a4bc:	.word	0x0000a6e4
    a4c0:	.word	0x0000a6e4
    a4c4:	.word	0x0000a6e4
    a4c8:	.word	0x0000a6e4
    a4cc:	.word	0x0000a6e4
    a4d0:	.word	0x0000a6e4
    a4d4:	.word	0x0000a6e4
    a4d8:	.word	0x0000a6e4
    a4dc:	.word	0x0000a4f0
    a4e0:	.word	0x0000a6e4
    a4e4:	.word	0x0000a510
    a4e8:	.word	0x0000a6e4
    a4ec:	.word	0x0000a530
    a4f0:	ldr	r1, [r5, #152]	; 0x98
    a4f4:	mov	r0, r5
    a4f8:	mov	r2, r8
    a4fc:	mov	r3, r7
    a500:	bl	7380 <reportProcessingInstruction>
    a504:	cmp	r0, #0
    a508:	bne	a5c8 <epilogProcessor+0x1cc>
    a50c:	b	a5e8 <epilogProcessor+0x1ec>
    a510:	ldr	r1, [r5, #152]	; 0x98
    a514:	mov	r0, r5
    a518:	mov	r2, r8
    a51c:	mov	r3, r7
    a520:	bl	7700 <reportComment>
    a524:	cmp	r0, #0
    a528:	bne	a5c8 <epilogProcessor+0x1cc>
    a52c:	b	a5e8 <epilogProcessor+0x1ec>
    a530:	ldr	r3, [r5, #88]	; 0x58
    a534:	cmp	r3, #0
    a538:	beq	a5c8 <epilogProcessor+0x1cc>
    a53c:	ldr	r9, [r5, #152]	; 0x98
    a540:	str	r8, [sp, #24]
    a544:	ldrb	r0, [r9, #72]	; 0x48
    a548:	cmp	r0, #0
    a54c:	beq	a564 <epilogProcessor+0x168>
    a550:	ldr	r0, [r5, #4]
    a554:	sub	r2, r7, r8
    a558:	mov	r1, r8
    a55c:	blx	r3
    a560:	b	a5c0 <epilogProcessor+0x1c4>
    a564:	add	r8, sp, #24
    a568:	ldr	r0, [r5, #52]	; 0x34
    a56c:	ldr	r1, [r5, #56]	; 0x38
    a570:	mov	r2, r7
    a574:	mov	r3, sl
    a578:	str	r0, [sp, #20]
    a57c:	mov	r0, r9
    a580:	ldr	r4, [r9, #60]	; 0x3c
    a584:	str	r1, [sp]
    a588:	mov	r1, r8
    a58c:	blx	r4
    a590:	ldr	r0, [sp, #24]
    a594:	str	r0, [r5, #300]	; 0x12c
    a598:	ldr	r1, [r5, #52]	; 0x34
    a59c:	ldr	r2, [sp, #20]
    a5a0:	ldr	r0, [r5, #4]
    a5a4:	ldr	r3, [r5, #88]	; 0x58
    a5a8:	sub	r2, r2, r1
    a5ac:	blx	r3
    a5b0:	ldr	r0, [sp, #24]
    a5b4:	cmp	r7, r0
    a5b8:	str	r0, [r5, #296]	; 0x128
    a5bc:	bne	a568 <epilogProcessor+0x16c>
    a5c0:	ldr	r4, [sp, #12]
    a5c4:	mov	r9, #0
    a5c8:	ldr	r8, [sp, #16]
    a5cc:	str	r8, [r5, #296]	; 0x128
    a5d0:	ldr	r0, [r5, #496]	; 0x1f0
    a5d4:	cmp	r0, #2
    a5d8:	beq	a5f4 <epilogProcessor+0x1f8>
    a5dc:	cmp	r0, #3
    a5e0:	bne	a438 <epilogProcessor+0x3c>
    a5e4:	b	a650 <epilogProcessor+0x254>
    a5e8:	mov	r0, #1
    a5ec:	sub	sp, fp, #28
    a5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a5f4:	mov	r0, #35	; 0x23
    a5f8:	sub	sp, fp, #28
    a5fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a600:	ldr	r3, [r5, #88]	; 0x58
    a604:	cmp	r3, #0
    a608:	beq	a6f0 <epilogProcessor+0x2f4>
    a60c:	ldr	r4, [r5, #152]	; 0x98
    a610:	str	r8, [sp, #24]
    a614:	ldrb	r0, [r4, #72]	; 0x48
    a618:	cmp	r0, #0
    a61c:	beq	a674 <epilogProcessor+0x278>
    a620:	ldr	r0, [r5, #4]
    a624:	sub	r2, r7, r8
    a628:	mov	r1, r8
    a62c:	blx	r3
    a630:	b	a6d4 <epilogProcessor+0x2d8>
    a634:	ldrb	r1, [r5, #500]	; 0x1f4
    a638:	mov	r0, #6
    a63c:	b	a648 <epilogProcessor+0x24c>
    a640:	ldrb	r1, [r5, #500]	; 0x1f4
    a644:	mov	r0, #5
    a648:	cmp	r1, #0
    a64c:	bne	a6e4 <epilogProcessor+0x2e8>
    a650:	ldr	r0, [sp, #8]
    a654:	str	r8, [r0]
    a658:	mov	r0, #0
    a65c:	sub	sp, fp, #28
    a660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a664:	mov	r0, #4
    a668:	str	r7, [r5, #296]	; 0x128
    a66c:	sub	sp, fp, #28
    a670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a674:	add	r8, sp, #24
    a678:	add	r9, sp, #20
    a67c:	ldr	r0, [r5, #52]	; 0x34
    a680:	ldr	r1, [r5, #56]	; 0x38
    a684:	mov	r2, r7
    a688:	mov	r3, r9
    a68c:	str	r0, [sp, #20]
    a690:	mov	r0, r4
    a694:	ldr	r6, [r4, #60]	; 0x3c
    a698:	str	r1, [sp]
    a69c:	mov	r1, r8
    a6a0:	blx	r6
    a6a4:	ldr	r0, [sp, #24]
    a6a8:	str	r0, [r5, #300]	; 0x12c
    a6ac:	ldr	r1, [r5, #52]	; 0x34
    a6b0:	ldr	r2, [sp, #20]
    a6b4:	ldr	r0, [r5, #4]
    a6b8:	ldr	r3, [r5, #88]	; 0x58
    a6bc:	sub	r2, r2, r1
    a6c0:	blx	r3
    a6c4:	ldr	r0, [sp, #24]
    a6c8:	cmp	r7, r0
    a6cc:	str	r0, [r5, #296]	; 0x128
    a6d0:	bne	a67c <epilogProcessor+0x280>
    a6d4:	ldr	r1, [r5, #496]	; 0x1f0
    a6d8:	mov	r0, #35	; 0x23
    a6dc:	cmp	r1, #2
    a6e0:	bne	a6ec <epilogProcessor+0x2f0>
    a6e4:	sub	sp, fp, #28
    a6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a6ec:	ldr	r7, [sp, #16]
    a6f0:	ldr	r0, [sp, #8]
    a6f4:	str	r7, [r0]
    a6f8:	b	a658 <epilogProcessor+0x25c>

0000a6fc <doCdataSection>:
    a6fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a700:	add	fp, sp, #28
    a704:	sub	sp, sp, #52	; 0x34
    a708:	mov	r4, r0
    a70c:	ldr	r0, [r2]
    a710:	mov	r6, r1
    a714:	str	r3, [sp, #24]
    a718:	str	r0, [sp, #40]	; 0x28
    a71c:	ldr	r1, [r4, #152]	; 0x98
    a720:	cmp	r1, r6
    a724:	beq	a74c <doCdataSection+0x50>
    a728:	mov	r1, r4
    a72c:	ldr	r5, [r1, #308]!	; 0x134
    a730:	sub	r3, r1, #8
    a734:	str	r1, [sp, #12]
    a738:	sub	r1, r1, #12
    a73c:	str	r1, [sp, #16]
    a740:	add	r1, r5, #4
    a744:	str	r1, [sp, #28]
    a748:	b	a76c <doCdataSection+0x70>
    a74c:	mov	r1, r4
    a750:	str	r0, [r1, #296]!	; 0x128
    a754:	add	r3, r1, #12
    a758:	str	r1, [sp, #16]
    a75c:	mov	r5, r1
    a760:	str	r3, [sp, #12]
    a764:	add	r3, r1, #4
    a768:	str	r3, [sp, #28]
    a76c:	str	r0, [r5]
    a770:	mov	r0, #0
    a774:	sub	r8, fp, #32
    a778:	add	sl, sp, #40	; 0x28
    a77c:	str	r2, [sp, #8]
    a780:	str	r3, [sp, #20]
    a784:	str	r5, [sp, #32]
    a788:	str	r0, [r2]
    a78c:	ldr	r7, [r6, #8]
    a790:	ldr	r1, [sp, #40]	; 0x28
    a794:	ldr	r2, [sp, #24]
    a798:	mov	r0, r6
    a79c:	add	r3, sp, #36	; 0x24
    a7a0:	blx	r7
    a7a4:	ldr	r9, [sp, #36]	; 0x24
    a7a8:	ldr	r1, [sp, #28]
    a7ac:	add	r0, r0, #4
    a7b0:	cmp	r0, #44	; 0x2c
    a7b4:	str	r9, [r1]
    a7b8:	bhi	aae4 <doCdataSection+0x3e8>
    a7bc:	add	r1, pc, #0
    a7c0:	ldr	pc, [r1, r0, lsl #2]
    a7c4:	.word	0x0000aad4
    a7c8:	.word	0x0000aae4
    a7cc:	.word	0x0000aaf4
    a7d0:	.word	0x0000aad4
    a7d4:	.word	0x0000ab20
    a7d8:	.word	0x0000aae4
    a7dc:	.word	0x0000aae4
    a7e0:	.word	0x0000aae4
    a7e4:	.word	0x0000aae4
    a7e8:	.word	0x0000aae4
    a7ec:	.word	0x0000a878
    a7f0:	.word	0x0000a8a4
    a7f4:	.word	0x0000aae4
    a7f8:	.word	0x0000aae4
    a7fc:	.word	0x0000aae4
    a800:	.word	0x0000aae4
    a804:	.word	0x0000aae4
    a808:	.word	0x0000aae4
    a80c:	.word	0x0000aae4
    a810:	.word	0x0000aae4
    a814:	.word	0x0000aae4
    a818:	.word	0x0000aae4
    a81c:	.word	0x0000aae4
    a820:	.word	0x0000aae4
    a824:	.word	0x0000aae4
    a828:	.word	0x0000aae4
    a82c:	.word	0x0000aae4
    a830:	.word	0x0000aae4
    a834:	.word	0x0000aae4
    a838:	.word	0x0000aae4
    a83c:	.word	0x0000aae4
    a840:	.word	0x0000aae4
    a844:	.word	0x0000aae4
    a848:	.word	0x0000aae4
    a84c:	.word	0x0000aae4
    a850:	.word	0x0000aae4
    a854:	.word	0x0000aae4
    a858:	.word	0x0000aae4
    a85c:	.word	0x0000aae4
    a860:	.word	0x0000aae4
    a864:	.word	0x0000aae4
    a868:	.word	0x0000aae4
    a86c:	.word	0x0000aae4
    a870:	.word	0x0000aae4
    a874:	.word	0x0000ab30
    a878:	ldr	r8, [r4, #68]	; 0x44
    a87c:	cmp	r8, #0
    a880:	beq	a8cc <doCdataSection+0x1d0>
    a884:	ldrb	r0, [r6, #72]	; 0x48
    a888:	cmp	r0, #0
    a88c:	beq	a9a8 <doCdataSection+0x2ac>
    a890:	ldr	r1, [sp, #40]	; 0x28
    a894:	ldr	r0, [r4, #4]
    a898:	sub	r2, r9, r1
    a89c:	blx	r8
    a8a0:	b	aa10 <doCdataSection+0x314>
    a8a4:	ldr	r3, [r4, #68]	; 0x44
    a8a8:	cmp	r3, #0
    a8ac:	beq	a974 <doCdataSection+0x278>
    a8b0:	mov	r0, #10
    a8b4:	mov	r1, r8
    a8b8:	mov	r2, #1
    a8bc:	strb	r0, [fp, #-32]	; 0xffffffe0
    a8c0:	ldr	r0, [r4, #4]
    a8c4:	blx	r3
    a8c8:	b	aaa0 <doCdataSection+0x3a4>
    a8cc:	ldr	r3, [r4, #88]	; 0x58
    a8d0:	ldr	r5, [sp, #32]
    a8d4:	sub	r8, fp, #32
    a8d8:	cmp	r3, #0
    a8dc:	beq	aaa0 <doCdataSection+0x3a4>
    a8e0:	ldr	r1, [sp, #40]	; 0x28
    a8e4:	str	r1, [fp, #-32]	; 0xffffffe0
    a8e8:	ldrb	r0, [r6, #72]	; 0x48
    a8ec:	cmp	r0, #0
    a8f0:	bne	a994 <doCdataSection+0x298>
    a8f4:	ldr	r0, [r4, #152]	; 0x98
    a8f8:	ldr	sl, [sp, #16]
    a8fc:	ldr	r7, [sp, #20]
    a900:	sub	r8, fp, #32
    a904:	cmp	r0, r6
    a908:	ldrne	r0, [sp, #12]
    a90c:	ldrne	sl, [r0]
    a910:	addne	r7, sl, #4
    a914:	ldr	r0, [r4, #52]	; 0x34
    a918:	ldr	r1, [r4, #56]	; 0x38
    a91c:	mov	r2, r9
    a920:	sub	r3, fp, #36	; 0x24
    a924:	str	r0, [fp, #-36]	; 0xffffffdc
    a928:	mov	r0, r6
    a92c:	ldr	r5, [r6, #60]	; 0x3c
    a930:	str	r1, [sp]
    a934:	mov	r1, r8
    a938:	blx	r5
    a93c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a940:	str	r0, [r7]
    a944:	ldr	r1, [r4, #52]	; 0x34
    a948:	ldr	r2, [fp, #-36]	; 0xffffffdc
    a94c:	ldr	r0, [r4, #4]
    a950:	ldr	r3, [r4, #88]	; 0x58
    a954:	sub	r2, r2, r1
    a958:	blx	r3
    a95c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a960:	str	r0, [sl]
    a964:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a968:	cmp	r0, r9
    a96c:	bne	a914 <doCdataSection+0x218>
    a970:	b	aa98 <doCdataSection+0x39c>
    a974:	ldr	r3, [r4, #88]	; 0x58
    a978:	cmp	r3, #0
    a97c:	beq	aaa0 <doCdataSection+0x3a4>
    a980:	ldr	r1, [sp, #40]	; 0x28
    a984:	str	r1, [fp, #-32]	; 0xffffffe0
    a988:	ldrb	r0, [r6, #72]	; 0x48
    a98c:	cmp	r0, #0
    a990:	beq	aa1c <doCdataSection+0x320>
    a994:	ldr	r0, [r4, #4]
    a998:	sub	r2, r9, r1
    a99c:	blx	r3
    a9a0:	sub	r8, fp, #32
    a9a4:	b	aa98 <doCdataSection+0x39c>
    a9a8:	ldr	r5, [sp, #28]
    a9ac:	b	a9bc <doCdataSection+0x2c0>
    a9b0:	ldr	r1, [sp, #32]
    a9b4:	str	r0, [r1]
    a9b8:	ldr	r9, [sp, #36]	; 0x24
    a9bc:	ldr	r0, [r4, #52]	; 0x34
    a9c0:	ldr	r1, [r4, #56]	; 0x38
    a9c4:	mov	r2, r9
    a9c8:	sub	r3, fp, #32
    a9cc:	str	r0, [fp, #-32]	; 0xffffffe0
    a9d0:	mov	r0, r6
    a9d4:	ldr	r7, [r6, #60]	; 0x3c
    a9d8:	str	r1, [sp]
    a9dc:	mov	r1, sl
    a9e0:	blx	r7
    a9e4:	ldr	r0, [sp, #36]	; 0x24
    a9e8:	str	r0, [r5]
    a9ec:	ldr	r1, [r4, #52]	; 0x34
    a9f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a9f4:	ldr	r0, [r4, #4]
    a9f8:	sub	r2, r2, r1
    a9fc:	blx	r8
    aa00:	ldr	r0, [sp, #40]	; 0x28
    aa04:	ldr	r1, [sp, #36]	; 0x24
    aa08:	cmp	r0, r1
    aa0c:	bne	a9b0 <doCdataSection+0x2b4>
    aa10:	ldr	r5, [sp, #32]
    aa14:	sub	r8, fp, #32
    aa18:	b	aaa0 <doCdataSection+0x3a4>
    aa1c:	ldr	r0, [r4, #152]	; 0x98
    aa20:	ldr	sl, [sp, #16]
    aa24:	ldr	r7, [sp, #20]
    aa28:	sub	r8, fp, #32
    aa2c:	cmp	r0, r6
    aa30:	ldrne	r0, [sp, #12]
    aa34:	ldrne	sl, [r0]
    aa38:	addne	r7, sl, #4
    aa3c:	ldr	r0, [r4, #52]	; 0x34
    aa40:	ldr	r1, [r4, #56]	; 0x38
    aa44:	mov	r2, r9
    aa48:	sub	r3, fp, #36	; 0x24
    aa4c:	str	r0, [fp, #-36]	; 0xffffffdc
    aa50:	mov	r0, r6
    aa54:	ldr	r5, [r6, #60]	; 0x3c
    aa58:	str	r1, [sp]
    aa5c:	mov	r1, r8
    aa60:	blx	r5
    aa64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aa68:	str	r0, [r7]
    aa6c:	ldr	r1, [r4, #52]	; 0x34
    aa70:	ldr	r2, [fp, #-36]	; 0xffffffdc
    aa74:	ldr	r0, [r4, #4]
    aa78:	ldr	r3, [r4, #88]	; 0x58
    aa7c:	sub	r2, r2, r1
    aa80:	blx	r3
    aa84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aa88:	str	r0, [sl]
    aa8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aa90:	cmp	r0, r9
    aa94:	bne	aa3c <doCdataSection+0x340>
    aa98:	ldr	r5, [sp, #32]
    aa9c:	add	sl, sp, #40	; 0x28
    aaa0:	ldr	r0, [sp, #36]	; 0x24
    aaa4:	str	r0, [sp, #40]	; 0x28
    aaa8:	str	r0, [r5]
    aaac:	ldr	r0, [r4, #496]	; 0x1f0
    aab0:	cmp	r0, #2
    aab4:	beq	aac8 <doCdataSection+0x3cc>
    aab8:	cmp	r0, #3
    aabc:	bne	a78c <doCdataSection+0x90>
    aac0:	ldr	r0, [sp, #36]	; 0x24
    aac4:	b	ab0c <doCdataSection+0x410>
    aac8:	mov	r0, #35	; 0x23
    aacc:	sub	sp, fp, #28
    aad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aad4:	ldr	r0, [fp, #12]
    aad8:	cmp	r0, #0
    aadc:	moveq	r0, #20
    aae0:	b	ab00 <doCdataSection+0x404>
    aae4:	str	r9, [r5]
    aae8:	mov	r0, #23
    aaec:	sub	sp, fp, #28
    aaf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aaf4:	ldr	r0, [fp, #12]
    aaf8:	cmp	r0, #0
    aafc:	moveq	r0, #6
    ab00:	subeq	sp, fp, #28
    ab04:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab08:	ldr	r0, [sp, #40]	; 0x28
    ab0c:	ldr	r1, [fp, #8]
    ab10:	str	r0, [r1]
    ab14:	mov	r0, #0
    ab18:	sub	sp, fp, #28
    ab1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab20:	str	r9, [r5]
    ab24:	mov	r0, #4
    ab28:	sub	sp, fp, #28
    ab2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab30:	ldr	r1, [r4, #84]	; 0x54
    ab34:	cmp	r1, #0
    ab38:	beq	ab70 <doCdataSection+0x474>
    ab3c:	ldr	r0, [r4, #4]
    ab40:	blx	r1
    ab44:	ldr	r0, [sp, #36]	; 0x24
    ab48:	ldr	r1, [sp, #8]
    ab4c:	str	r0, [r1]
    ab50:	ldr	r1, [fp, #8]
    ab54:	str	r0, [r1]
    ab58:	mov	r0, #0
    ab5c:	ldr	r1, [r4, #496]	; 0x1f0
    ab60:	cmp	r1, #2
    ab64:	movweq	r0, #35	; 0x23
    ab68:	sub	sp, fp, #28
    ab6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab70:	ldr	r3, [r4, #88]	; 0x58
    ab74:	cmp	r3, #0
    ab78:	beq	ab44 <doCdataSection+0x448>
    ab7c:	ldr	r1, [sp, #40]	; 0x28
    ab80:	str	r1, [fp, #-32]	; 0xffffffe0
    ab84:	ldrb	r0, [r6, #72]	; 0x48
    ab88:	cmp	r0, #0
    ab8c:	beq	aba0 <doCdataSection+0x4a4>
    ab90:	ldr	r0, [r4, #4]
    ab94:	sub	r2, r9, r1
    ab98:	blx	r3
    ab9c:	b	ab44 <doCdataSection+0x448>
    aba0:	ldr	r0, [r4, #152]	; 0x98
    aba4:	ldr	r7, [sp, #16]
    aba8:	sub	sl, fp, #36	; 0x24
    abac:	cmp	r0, r6
    abb0:	ldrne	r0, [sp, #12]
    abb4:	ldrne	r7, [r0]
    abb8:	addne	r0, r7, #4
    abbc:	strne	r0, [sp, #20]
    abc0:	ldr	r8, [sp, #20]
    abc4:	ldr	r0, [r4, #52]	; 0x34
    abc8:	ldr	r1, [r4, #56]	; 0x38
    abcc:	mov	r2, r9
    abd0:	mov	r3, sl
    abd4:	str	r0, [fp, #-36]	; 0xffffffdc
    abd8:	mov	r0, r6
    abdc:	ldr	r5, [r6, #60]	; 0x3c
    abe0:	str	r1, [sp]
    abe4:	sub	r1, fp, #32
    abe8:	blx	r5
    abec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    abf0:	str	r0, [r8]
    abf4:	ldr	r1, [r4, #52]	; 0x34
    abf8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    abfc:	ldr	r0, [r4, #4]
    ac00:	ldr	r3, [r4, #88]	; 0x58
    ac04:	sub	r2, r2, r1
    ac08:	blx	r3
    ac0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ac10:	str	r0, [r7]
    ac14:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ac18:	cmp	r0, r9
    ac1c:	bne	abc4 <doCdataSection+0x4c8>
    ac20:	b	ab44 <doCdataSection+0x448>

0000ac24 <cdataSectionProcessor>:
    ac24:	push	{r4, r5, r6, sl, fp, lr}
    ac28:	add	fp, sp, #16
    ac2c:	sub	sp, sp, #16
    ac30:	str	r1, [sp, #12]
    ac34:	mov	r6, r0
    ac38:	mov	r5, r2
    ac3c:	mov	r4, r3
    ac40:	add	r2, sp, #12
    ac44:	ldr	r1, [r0, #152]	; 0x98
    ac48:	ldrb	r0, [r0, #500]	; 0x1f4
    ac4c:	str	r3, [sp]
    ac50:	mov	r3, r5
    ac54:	clz	r0, r0
    ac58:	lsr	r0, r0, #5
    ac5c:	str	r0, [sp, #4]
    ac60:	mov	r0, r6
    ac64:	bl	a6fc <doCdataSection>
    ac68:	cmp	r0, #0
    ac6c:	bne	acac <cdataSectionProcessor+0x88>
    ac70:	ldr	r1, [sp, #12]
    ac74:	cmp	r1, #0
    ac78:	beq	acac <cdataSectionProcessor+0x88>
    ac7c:	ldr	r0, [r6, #492]	; 0x1ec
    ac80:	cmp	r0, #0
    ac84:	beq	acb4 <cdataSectionProcessor+0x90>
    ac88:	movw	r0, #0
    ac8c:	mov	r2, r5
    ac90:	mov	r3, r4
    ac94:	movt	r0, #0
    ac98:	str	r0, [r6, #288]	; 0x120
    ac9c:	mov	r0, r6
    aca0:	sub	sp, fp, #16
    aca4:	pop	{r4, r5, r6, sl, fp, lr}
    aca8:	b	b0fc <externalEntityContentProcessor>
    acac:	sub	sp, fp, #16
    acb0:	pop	{r4, r5, r6, sl, fp, pc}
    acb4:	movw	r0, #0
    acb8:	mov	r2, r5
    acbc:	mov	r3, r4
    acc0:	movt	r0, #0
    acc4:	str	r0, [r6, #288]	; 0x120
    acc8:	mov	r0, r6
    accc:	sub	sp, fp, #16
    acd0:	pop	{r4, r5, r6, sl, fp, lr}
    acd4:	b	61f0 <contentProcessor>

0000acd8 <setElementTypePrefix>:
    acd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    acdc:	add	fp, sp, #28
    ace0:	sub	sp, sp, #4
    ace4:	ldr	r4, [r0, #364]	; 0x16c
    ace8:	ldr	r5, [r1]
    acec:	mov	sl, r1
    acf0:	mov	r9, r0
    acf4:	add	r8, r4, #60	; 0x3c
    acf8:	add	r7, r4, #80	; 0x50
    acfc:	b	ad04 <setElementTypePrefix+0x2c>
    ad00:	add	r5, r5, #1
    ad04:	ldrb	r0, [r5]
    ad08:	cmp	r0, #58	; 0x3a
    ad0c:	beq	ad1c <setElementTypePrefix+0x44>
    ad10:	cmp	r0, #0
    ad14:	bne	ad00 <setElementTypePrefix+0x28>
    ad18:	b	adfc <setElementTypePrefix+0x124>
    ad1c:	ldr	r1, [r4, #88]	; 0x58
    ad20:	ldr	r0, [r4, #92]	; 0x5c
    ad24:	ldr	r6, [sl]
    ad28:	sub	r1, r0, r1
    ad2c:	cmp	r6, r5
    ad30:	clz	r1, r1
    ad34:	lsr	r1, r1, #5
    ad38:	beq	ad84 <setElementTypePrefix+0xac>
    ad3c:	tst	r1, #1
    ad40:	beq	ad58 <setElementTypePrefix+0x80>
    ad44:	mov	r0, r7
    ad48:	bl	65e4 <poolGrow>
    ad4c:	cmp	r0, #0
    ad50:	beq	adf4 <setElementTypePrefix+0x11c>
    ad54:	ldr	r0, [r4, #92]	; 0x5c
    ad58:	ldrb	r1, [r6], #1
    ad5c:	add	r2, r0, #1
    ad60:	str	r2, [r4, #92]	; 0x5c
    ad64:	strb	r1, [r0]
    ad68:	cmp	r5, r6
    ad6c:	ldr	r1, [r4, #88]	; 0x58
    ad70:	ldr	r0, [r4, #92]	; 0x5c
    ad74:	sub	r1, r0, r1
    ad78:	clz	r1, r1
    ad7c:	lsr	r1, r1, #5
    ad80:	bne	ad3c <setElementTypePrefix+0x64>
    ad84:	cmp	r1, #0
    ad88:	beq	ada0 <setElementTypePrefix+0xc8>
    ad8c:	mov	r0, r7
    ad90:	bl	65e4 <poolGrow>
    ad94:	cmp	r0, #0
    ad98:	beq	adf4 <setElementTypePrefix+0x11c>
    ad9c:	ldr	r0, [r4, #92]	; 0x5c
    ada0:	add	r1, r0, #1
    ada4:	mov	r6, #0
    ada8:	mov	r3, #8
    adac:	str	r1, [r4, #92]	; 0x5c
    adb0:	strb	r6, [r0]
    adb4:	mov	r0, r9
    adb8:	mov	r1, r8
    adbc:	ldr	r2, [r4, #96]	; 0x60
    adc0:	bl	5d0c <lookup>
    adc4:	cmp	r0, #0
    adc8:	beq	ae00 <setElementTypePrefix+0x128>
    adcc:	ldr	r1, [r4, #96]	; 0x60
    add0:	ldr	r2, [r0]
    add4:	cmp	r2, r1
    add8:	beq	ade4 <setElementTypePrefix+0x10c>
    addc:	str	r1, [r4, #92]	; 0x5c
    ade0:	b	adec <setElementTypePrefix+0x114>
    ade4:	ldr	r1, [r4, #92]	; 0x5c
    ade8:	str	r1, [r4, #96]	; 0x60
    adec:	str	r0, [sl, #4]
    adf0:	b	ad00 <setElementTypePrefix+0x28>
    adf4:	mov	r6, #0
    adf8:	b	ae00 <setElementTypePrefix+0x128>
    adfc:	mov	r6, #1
    ae00:	mov	r0, r6
    ae04:	sub	sp, fp, #28
    ae08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ae0c <addBinding>:
    ae0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae10:	add	fp, sp, #28
    ae14:	sub	sp, sp, #4
    ae18:	str	r2, [sp]
    ae1c:	mov	sl, r1
    ae20:	ldr	r2, [r1]
    ae24:	ldrb	r1, [r3]
    ae28:	mov	r8, r3
    ae2c:	mov	r9, r0
    ae30:	cmp	r1, #0
    ae34:	beq	afcc <addBinding+0x1c0>
    ae38:	mov	r7, #0
    ae3c:	cmp	r2, #0
    ae40:	mov	r0, #0
    ae44:	beq	aea0 <addBinding+0x94>
    ae48:	ldrb	r0, [r2]
    ae4c:	cmp	r0, #120	; 0x78
    ae50:	mov	r0, #0
    ae54:	bne	aea0 <addBinding+0x94>
    ae58:	ldrb	r0, [r2, #1]
    ae5c:	cmp	r0, #109	; 0x6d
    ae60:	mov	r0, #0
    ae64:	bne	aea0 <addBinding+0x94>
    ae68:	ldrb	r0, [r2, #2]
    ae6c:	cmp	r0, #108	; 0x6c
    ae70:	mov	r0, #0
    ae74:	bne	aea0 <addBinding+0x94>
    ae78:	ldrb	r0, [r2, #3]
    ae7c:	cmp	r0, #110	; 0x6e
    ae80:	bne	ae98 <addBinding+0x8c>
    ae84:	ldrb	r3, [r2, #4]
    ae88:	cmp	r3, #115	; 0x73
    ae8c:	ldrbeq	r2, [r2, #5]
    ae90:	cmpeq	r2, #0
    ae94:	beq	b0ec <addBinding+0x2e0>
    ae98:	clz	r0, r0
    ae9c:	lsr	r0, r0, #5
    aea0:	movw	ip, #0
    aea4:	movw	lr, #0
    aea8:	add	r3, r8, #1
    aeac:	mov	r6, #1
    aeb0:	mov	r2, #1
    aeb4:	mov	r4, #1
    aeb8:	movt	ip, #0
    aebc:	movt	lr, #0
    aec0:	tst	r6, #1
    aec4:	beq	aed0 <addBinding+0xc4>
    aec8:	cmp	r7, #36	; 0x24
    aecc:	bls	aef4 <addBinding+0xe8>
    aed0:	mov	r4, #0
    aed4:	cmp	r0, #0
    aed8:	bne	af20 <addBinding+0x114>
    aedc:	tst	r2, #255	; 0xff
    aee0:	beq	af20 <addBinding+0x114>
    aee4:	cmp	r7, #29
    aee8:	bls	af10 <addBinding+0x104>
    aeec:	mov	r2, #0
    aef0:	b	af20 <addBinding+0x114>
    aef4:	ldrb	r6, [ip, r7]
    aef8:	uxtb	r5, r1
    aefc:	cmp	r5, r6
    af00:	movne	r4, #0
    af04:	cmp	r0, #0
    af08:	beq	aedc <addBinding+0xd0>
    af0c:	b	af20 <addBinding+0x114>
    af10:	ldrb	r5, [lr, r7]
    af14:	uxtb	r1, r1
    af18:	cmp	r1, r5
    af1c:	movne	r2, #0
    af20:	ldrb	r1, [r3, r7]
    af24:	uxtb	r6, r4
    af28:	add	r7, r7, #1
    af2c:	cmp	r6, #0
    af30:	movwne	r6, #1
    af34:	cmp	r1, #0
    af38:	bne	aec0 <addBinding+0xb4>
    af3c:	sub	r1, r7, #36	; 0x24
    af40:	clz	r1, r1
    af44:	lsr	r1, r1, #5
    af48:	and	r1, r6, r1
    af4c:	cmp	r0, r1
    af50:	bne	afbc <addBinding+0x1b0>
    af54:	tst	r2, #255	; 0xff
    af58:	beq	af68 <addBinding+0x15c>
    af5c:	mov	r6, #40	; 0x28
    af60:	cmp	r7, #29
    af64:	beq	b0f0 <addBinding+0x2e4>
    af68:	ldrb	r0, [r9, #488]	; 0x1e8
    af6c:	ldr	r5, [r9, #384]	; 0x180
    af70:	cmp	r0, #0
    af74:	addne	r7, r7, #1
    af78:	cmp	r5, #0
    af7c:	beq	afec <addBinding+0x1e0>
    af80:	ldr	r0, [r5, #24]
    af84:	cmp	r7, r0
    af88:	ble	afb0 <addBinding+0x1a4>
    af8c:	ldr	r0, [r5, #16]
    af90:	ldr	r2, [r9, #16]
    af94:	add	r6, r7, #24
    af98:	mov	r1, r6
    af9c:	blx	r2
    afa0:	cmp	r0, #0
    afa4:	beq	b0cc <addBinding+0x2c0>
    afa8:	str	r6, [r5, #24]
    afac:	str	r0, [r5, #16]
    afb0:	ldr	r0, [r5, #4]
    afb4:	str	r0, [r9, #384]	; 0x180
    afb8:	b	b028 <addBinding+0x21c>
    afbc:	mov	r6, #38	; 0x26
    afc0:	cmp	r0, #0
    afc4:	movweq	r6, #40	; 0x28
    afc8:	b	b0f0 <addBinding+0x2e4>
    afcc:	mov	r6, #28
    afd0:	cmp	r2, #0
    afd4:	bne	b0f0 <addBinding+0x2e4>
    afd8:	mov	r2, #1
    afdc:	mov	r0, #0
    afe0:	mov	r7, #0
    afe4:	mov	r6, #1
    afe8:	b	af3c <addBinding+0x130>
    afec:	ldr	r1, [r9, #12]
    aff0:	mov	r0, #28
    aff4:	blx	r1
    aff8:	mov	r6, #1
    affc:	cmp	r0, #0
    b000:	beq	b0f0 <addBinding+0x2e4>
    b004:	ldr	r1, [r9, #12]
    b008:	add	r4, r7, #24
    b00c:	mov	r5, r0
    b010:	mov	r0, r4
    b014:	blx	r1
    b018:	cmp	r0, #0
    b01c:	str	r0, [r5, #16]
    b020:	beq	b0dc <addBinding+0x2d0>
    b024:	str	r4, [r5, #24]
    b028:	str	r7, [r5, #20]
    b02c:	mov	r1, r8
    b030:	mov	r2, r7
    b034:	ldr	r0, [r5, #16]
    b038:	bl	0 <memcpy>
    b03c:	ldrb	r0, [r9, #488]	; 0x1e8
    b040:	ldr	r2, [sp]
    b044:	cmp	r0, #0
    b048:	ldrne	r1, [r5, #16]
    b04c:	addne	r1, r1, r7
    b050:	strbne	r0, [r1, #-1]
    b054:	str	r2, [r5, #12]
    b058:	str	sl, [r5]
    b05c:	ldr	r0, [fp, #8]
    b060:	ldr	r1, [sl, #4]
    b064:	str	r1, [r5, #8]
    b068:	ldrb	r1, [r8]
    b06c:	cmp	r1, #0
    b070:	bne	b084 <addBinding+0x278>
    b074:	ldr	r1, [r9, #364]	; 0x16c
    b078:	add	r1, r1, #152	; 0x98
    b07c:	cmp	r1, sl
    b080:	beq	b0d4 <addBinding+0x2c8>
    b084:	mov	r1, r5
    b088:	str	r1, [sl, #4]
    b08c:	cmp	r2, #0
    b090:	mov	r6, #0
    b094:	ldr	r1, [r0]
    b098:	str	r1, [r5, #4]
    b09c:	str	r5, [r0]
    b0a0:	ldrne	r3, [r9, #108]	; 0x6c
    b0a4:	cmpne	r3, #0
    b0a8:	beq	b0f0 <addBinding+0x2e4>
    b0ac:	ldr	r0, [sl, #4]
    b0b0:	ldr	r1, [sl]
    b0b4:	cmp	r0, #0
    b0b8:	moveq	r8, r0
    b0bc:	ldr	r0, [r9, #4]
    b0c0:	mov	r2, r8
    b0c4:	blx	r3
    b0c8:	b	b0f0 <addBinding+0x2e4>
    b0cc:	mov	r6, #1
    b0d0:	b	b0f0 <addBinding+0x2e4>
    b0d4:	mov	r1, #0
    b0d8:	b	b088 <addBinding+0x27c>
    b0dc:	ldr	r1, [r9, #20]
    b0e0:	mov	r0, r5
    b0e4:	blx	r1
    b0e8:	b	b0f0 <addBinding+0x2e4>
    b0ec:	mov	r6, #39	; 0x27
    b0f0:	mov	r0, r6
    b0f4:	sub	sp, fp, #28
    b0f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b0fc <externalEntityContentProcessor>:
    b0fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b100:	add	fp, sp, #24
    b104:	sub	sp, sp, #16
    b108:	mov	r9, r0
    b10c:	ldr	r6, [r0, #152]	; 0x98
    b110:	ldrb	r0, [r0, #500]	; 0x1f4
    b114:	mov	r7, r1
    b118:	stm	sp, {r2, r3}
    b11c:	mov	r1, #1
    b120:	mov	r3, r7
    b124:	clz	r0, r0
    b128:	mov	r2, r6
    b12c:	lsr	r0, r0, #5
    b130:	str	r0, [sp, #8]
    b134:	mov	r0, r9
    b138:	bl	798c <doContent>
    b13c:	mov	r8, r0
    b140:	cmp	r0, #0
    b144:	bne	b1f0 <externalEntityContentProcessor+0xf4>
    b148:	ldr	r5, [r9, #372]	; 0x174
    b14c:	mov	r8, #0
    b150:	b	b164 <externalEntityContentProcessor+0x68>
    b154:	mov	r0, r7
    b158:	bl	0 <memcpy>
    b15c:	str	r7, [r5, #4]
    b160:	ldr	r5, [r5]
    b164:	cmp	r5, #0
    b168:	ldrne	r2, [r5, #24]
    b16c:	ldrne	r0, [r5, #36]	; 0x24
    b170:	ldrne	r1, [r5, #4]
    b174:	addne	r4, r2, #1
    b178:	addne	r7, r0, r4
    b17c:	cmpne	r1, r7
    b180:	beq	b1f0 <externalEntityContentProcessor+0xf4>
    b184:	ldr	r3, [r5, #40]	; 0x28
    b188:	ldr	r2, [r5, #8]
    b18c:	add	r6, r2, r4
    b190:	sub	r3, r3, r0
    b194:	cmp	r6, r3
    b198:	ble	b154 <externalEntityContentProcessor+0x58>
    b19c:	ldr	r2, [r9, #16]
    b1a0:	mov	r1, r6
    b1a4:	blx	r2
    b1a8:	cmp	r0, #0
    b1ac:	beq	b1ec <externalEntityContentProcessor+0xf0>
    b1b0:	ldr	r2, [r5, #12]
    b1b4:	ldr	r1, [r5, #36]	; 0x24
    b1b8:	add	r7, r0, r4
    b1bc:	cmp	r2, r1
    b1c0:	streq	r0, [r5, #12]
    b1c4:	ldr	r2, [r5, #16]
    b1c8:	cmp	r2, #0
    b1cc:	subne	r1, r2, r1
    b1d0:	addne	r1, r0, r1
    b1d4:	strne	r1, [r5, #16]
    b1d8:	add	r1, r0, r6
    b1dc:	str	r0, [r5, #36]	; 0x24
    b1e0:	str	r1, [r5, #40]	; 0x28
    b1e4:	ldmib	r5, {r1, r2}
    b1e8:	b	b154 <externalEntityContentProcessor+0x58>
    b1ec:	mov	r8, #1
    b1f0:	mov	r0, r8
    b1f4:	sub	sp, fp, #24
    b1f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000b1fc <appendAttributeValue>:
    b1fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b200:	add	fp, sp, #28
    b204:	sub	sp, sp, #76	; 0x4c
    b208:	mov	r9, r1
    b20c:	add	r1, r0, #468	; 0x1d4
    b210:	str	r0, [fp, #-40]	; 0xffffffd8
    b214:	mov	r6, r2
    b218:	str	r2, [sp, #52]	; 0x34
    b21c:	str	r1, [fp, #-44]	; 0xffffffd4
    b220:	add	r1, r0, #456	; 0x1c8
    b224:	ldr	r0, [r0, #364]	; 0x16c
    b228:	str	r1, [fp, #-48]	; 0xffffffd0
    b22c:	ldr	r1, [fp, #12]
    b230:	str	r0, [sp, #48]	; 0x30
    b234:	add	r0, r0, #80	; 0x50
    b238:	add	r8, r1, #12
    b23c:	str	r0, [sp, #44]	; 0x2c
    b240:	ldr	r4, [r9, #16]
    b244:	ldr	r2, [fp, #8]
    b248:	mov	r0, r9
    b24c:	mov	r5, r3
    b250:	mov	r1, r3
    b254:	sub	r3, fp, #36	; 0x24
    b258:	blx	r4
    b25c:	add	r0, r0, #4
    b260:	cmp	r0, #43	; 0x2b
    b264:	bhi	b894 <appendAttributeValue+0x698>
    b268:	add	r1, pc, #4
    b26c:	mov	sl, #0
    b270:	ldr	pc, [r1, r0, lsl #2]
    b274:	.word	0x0000b87c
    b278:	.word	0x0000b324
    b27c:	.word	0x0000b894
    b280:	.word	0x0000b8a0
    b284:	.word	0x0000b8b8
    b288:	.word	0x0000b894
    b28c:	.word	0x0000b894
    b290:	.word	0x0000b894
    b294:	.word	0x0000b894
    b298:	.word	0x0000b894
    b29c:	.word	0x0000b38c
    b2a0:	.word	0x0000b330
    b2a4:	.word	0x0000b894
    b2a8:	.word	0x0000b3b0
    b2ac:	.word	0x0000b418
    b2b0:	.word	0x0000b894
    b2b4:	.word	0x0000b894
    b2b8:	.word	0x0000b894
    b2bc:	.word	0x0000b894
    b2c0:	.word	0x0000b894
    b2c4:	.word	0x0000b894
    b2c8:	.word	0x0000b894
    b2cc:	.word	0x0000b894
    b2d0:	.word	0x0000b894
    b2d4:	.word	0x0000b894
    b2d8:	.word	0x0000b894
    b2dc:	.word	0x0000b894
    b2e0:	.word	0x0000b894
    b2e4:	.word	0x0000b894
    b2e8:	.word	0x0000b894
    b2ec:	.word	0x0000b894
    b2f0:	.word	0x0000b894
    b2f4:	.word	0x0000b894
    b2f8:	.word	0x0000b894
    b2fc:	.word	0x0000b894
    b300:	.word	0x0000b894
    b304:	.word	0x0000b894
    b308:	.word	0x0000b894
    b30c:	.word	0x0000b894
    b310:	.word	0x0000b894
    b314:	.word	0x0000b894
    b318:	.word	0x0000b894
    b31c:	.word	0x0000b894
    b320:	.word	0x0000b330
    b324:	ldr	r0, [r9, #68]	; 0x44
    b328:	add	r0, r5, r0
    b32c:	str	r0, [fp, #-36]	; 0xffffffdc
    b330:	ldr	r2, [r8]
    b334:	cmp	r6, #0
    b338:	beq	b370 <appendAttributeValue+0x174>
    b33c:	ldr	r0, [fp, #12]
    b340:	ldr	r1, [r0, #8]
    b344:	cmp	r2, r1
    b348:	bne	b35c <appendAttributeValue+0x160>
    b34c:	bl	65e4 <poolGrow>
    b350:	cmp	r0, #0
    b354:	beq	b878 <appendAttributeValue+0x67c>
    b358:	ldr	r2, [r8]
    b35c:	add	r1, r2, #1
    b360:	str	r1, [r8]
    b364:	mov	r1, #32
    b368:	strb	r1, [r2]
    b36c:	b	b85c <appendAttributeValue+0x660>
    b370:	ldr	r0, [fp, #12]
    b374:	ldr	r1, [r0, #16]
    b378:	cmp	r1, r2
    b37c:	ldrbne	r1, [r2, #-1]
    b380:	cmpne	r1, #32
    b384:	beq	b85c <appendAttributeValue+0x660>
    b388:	b	b33c <appendAttributeValue+0x140>
    b38c:	str	r5, [fp, #-32]	; 0xffffffe0
    b390:	ldr	r4, [fp, #-36]	; 0xffffffdc
    b394:	ldr	r5, [fp, #12]
    b398:	mov	sl, r7
    b39c:	sub	r7, fp, #32
    b3a0:	ldr	r0, [r8]
    b3a4:	cmp	r0, #0
    b3a8:	bne	b81c <appendAttributeValue+0x620>
    b3ac:	b	b80c <appendAttributeValue+0x610>
    b3b0:	ldr	r0, [r9, #68]	; 0x44
    b3b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b3b8:	ldr	r3, [r9, #48]	; 0x30
    b3bc:	mov	sl, r6
    b3c0:	mov	r6, r5
    b3c4:	add	r1, r5, r0
    b3c8:	sub	r2, r2, r0
    b3cc:	mov	r0, r9
    b3d0:	blx	r3
    b3d4:	tst	r0, #255	; 0xff
    b3d8:	beq	b4a4 <appendAttributeValue+0x2a8>
    b3dc:	mov	r4, r0
    b3e0:	ldr	r0, [fp, #12]
    b3e4:	mov	r6, sl
    b3e8:	ldr	r1, [r0, #8]
    b3ec:	ldr	r2, [r0, #12]
    b3f0:	cmp	r2, r1
    b3f4:	bne	b408 <appendAttributeValue+0x20c>
    b3f8:	bl	65e4 <poolGrow>
    b3fc:	cmp	r0, #0
    b400:	beq	b878 <appendAttributeValue+0x67c>
    b404:	ldr	r2, [r8]
    b408:	add	r1, r2, #1
    b40c:	str	r1, [r8]
    b410:	strb	r4, [r2]
    b414:	b	b85c <appendAttributeValue+0x660>
    b418:	ldr	r2, [r9, #44]	; 0x2c
    b41c:	mov	r0, r9
    b420:	mov	r1, r5
    b424:	blx	r2
    b428:	cmn	r0, #1
    b42c:	ble	b888 <appendAttributeValue+0x68c>
    b430:	cmp	r6, #0
    b434:	sub	sl, fp, #32
    b438:	cmpeq	r0, #32
    b43c:	beq	b51c <appendAttributeValue+0x320>
    b440:	mov	r1, sl
    b444:	bl	0 <coda_XmlUtf8Encode>
    b448:	cmp	r0, #0
    b44c:	beq	b888 <appendAttributeValue+0x68c>
    b450:	mov	r4, r0
    b454:	cmp	r0, #1
    b458:	blt	b53c <appendAttributeValue+0x340>
    b45c:	mov	r6, #0
    b460:	ldr	r0, [fp, #12]
    b464:	ldr	r1, [r0, #8]
    b468:	ldr	r3, [r0, #12]
    b46c:	cmp	r3, r1
    b470:	bne	b484 <appendAttributeValue+0x288>
    b474:	bl	65e4 <poolGrow>
    b478:	cmp	r0, #0
    b47c:	beq	b878 <appendAttributeValue+0x67c>
    b480:	ldr	r3, [r8]
    b484:	ldrb	r1, [sl, r6]
    b488:	add	r6, r6, #1
    b48c:	add	r2, r3, #1
    b490:	cmp	r6, r4
    b494:	str	r2, [r8]
    b498:	strb	r1, [r3]
    b49c:	blt	b460 <appendAttributeValue+0x264>
    b4a0:	b	b53c <appendAttributeValue+0x340>
    b4a4:	ldr	r4, [r9, #68]	; 0x44
    b4a8:	ldr	sl, [fp, #-36]	; 0xffffffdc
    b4ac:	add	r0, r6, r4
    b4b0:	str	r0, [fp, #-32]	; 0xffffffe0
    b4b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b4b8:	ldr	r0, [r0]
    b4bc:	cmp	r0, #0
    b4c0:	bne	b4d4 <appendAttributeValue+0x2d8>
    b4c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b4c8:	bl	65e4 <poolGrow>
    b4cc:	cmp	r0, #0
    b4d0:	beq	b878 <appendAttributeValue+0x67c>
    b4d4:	sub	r4, sl, r4
    b4d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b4dc:	ldr	r6, [r9, #60]	; 0x3c
    b4e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b4e4:	sub	r1, fp, #32
    b4e8:	mov	r2, r4
    b4ec:	ldr	r0, [r0, #464]	; 0x1d0
    b4f0:	str	r0, [sp]
    b4f4:	mov	r0, r9
    b4f8:	blx	r6
    b4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b500:	cmp	r0, r4
    b504:	beq	b544 <appendAttributeValue+0x348>
    b508:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b50c:	bl	65e4 <poolGrow>
    b510:	cmp	r0, #0
    b514:	bne	b4d8 <appendAttributeValue+0x2dc>
    b518:	b	b878 <appendAttributeValue+0x67c>
    b51c:	ldr	r1, [fp, #12]
    b520:	mov	r2, r1
    b524:	ldr	r1, [r1, #12]
    b528:	ldr	r2, [r2, #16]
    b52c:	cmp	r2, r1
    b530:	ldrbne	r1, [r1, #-1]
    b534:	cmpne	r1, #32
    b538:	bne	b440 <appendAttributeValue+0x244>
    b53c:	ldr	r6, [sp, #52]	; 0x34
    b540:	b	b85c <appendAttributeValue+0x660>
    b544:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b548:	ldr	r6, [sp, #52]	; 0x34
    b54c:	mov	sl, #1
    b550:	ldr	r0, [r2, #472]	; 0x1d8
    b554:	cmp	r0, #0
    b558:	beq	b87c <appendAttributeValue+0x680>
    b55c:	ldr	r1, [r2, #464]	; 0x1d0
    b560:	ldr	r0, [r2, #468]	; 0x1d4
    b564:	cmp	r0, r1
    b568:	bne	b588 <appendAttributeValue+0x38c>
    b56c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b570:	bl	65e4 <poolGrow>
    b574:	cmp	r0, #0
    b578:	beq	b87c <appendAttributeValue+0x680>
    b57c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b580:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b584:	ldr	r0, [r0]
    b588:	add	r1, r0, #1
    b58c:	str	r1, [r2, #468]	; 0x1d4
    b590:	mov	r1, #0
    b594:	strb	r1, [r0]
    b598:	ldr	r0, [r2, #472]	; 0x1d8
    b59c:	cmp	r0, #0
    b5a0:	beq	b87c <appendAttributeValue+0x680>
    b5a4:	ldr	ip, [sp, #48]	; 0x30
    b5a8:	mov	sl, #0
    b5ac:	ldr	r1, [ip, #8]
    b5b0:	cmp	r1, #0
    b5b4:	beq	b6d8 <appendAttributeValue+0x4dc>
    b5b8:	str	r1, [sp, #36]	; 0x24
    b5bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b5c0:	ldrb	r4, [r0]
    b5c4:	str	r7, [sp, #28]
    b5c8:	movw	r7, #16963	; 0x4243
    b5cc:	movt	r7, #15
    b5d0:	ldr	r2, [r1, #512]	; 0x200
    b5d4:	cmp	r4, #0
    b5d8:	str	r4, [sp, #40]	; 0x28
    b5dc:	beq	b5fc <appendAttributeValue+0x400>
    b5e0:	add	r3, r0, #1
    b5e4:	mul	r1, r2, r7
    b5e8:	uxtb	r2, r4
    b5ec:	ldrb	r4, [r3], #1
    b5f0:	eor	r2, r1, r2
    b5f4:	cmp	r4, #0
    b5f8:	bne	b5e4 <appendAttributeValue+0x3e8>
    b5fc:	ldr	lr, [sp, #36]	; 0x24
    b600:	ldr	r4, [ip]
    b604:	ldr	r7, [sp, #28]
    b608:	sub	r1, lr, #1
    b60c:	str	r4, [sp, #32]
    b610:	and	r3, r2, r1
    b614:	ldr	r4, [r4, r3, lsl #2]
    b618:	cmp	r4, #0
    b61c:	beq	b6d8 <appendAttributeValue+0x4dc>
    b620:	rsb	r6, lr, #0
    b624:	str	r0, [sp, #12]
    b628:	add	r0, r0, #1
    b62c:	mov	lr, #0
    b630:	and	r2, r2, r6
    b634:	ldr	r6, [sp, #52]	; 0x34
    b638:	str	r0, [sp, #24]
    b63c:	lsr	r0, r1, #2
    b640:	str	r2, [sp, #20]
    b644:	str	r0, [sp, #16]
    b648:	ldr	r1, [r4]
    b64c:	ldr	r0, [sp, #40]	; 0x28
    b650:	ldrb	r2, [r1]
    b654:	cmp	r0, r2
    b658:	bne	b680 <appendAttributeValue+0x484>
    b65c:	ldr	ip, [sp, #24]
    b660:	ldr	sl, [sp, #40]	; 0x28
    b664:	add	r2, r1, #1
    b668:	tst	sl, #255	; 0xff
    b66c:	beq	b6cc <appendAttributeValue+0x4d0>
    b670:	ldrb	sl, [ip], #1
    b674:	ldrb	r1, [r2], #1
    b678:	cmp	sl, r1
    b67c:	beq	b668 <appendAttributeValue+0x46c>
    b680:	ldr	ip, [sp, #48]	; 0x30
    b684:	tst	lr, #255	; 0xff
    b688:	bne	b6a4 <appendAttributeValue+0x4a8>
    b68c:	ldrb	r1, [ip, #4]
    b690:	ldr	r0, [sp, #20]
    b694:	ldr	r2, [sp, #16]
    b698:	sub	r1, r1, #1
    b69c:	and	r1, r2, r0, lsr r1
    b6a0:	orr	lr, r1, #1
    b6a4:	uxtb	r1, lr
    b6a8:	ldr	r0, [sp, #32]
    b6ac:	subs	r3, r3, r1
    b6b0:	ldr	r1, [sp, #36]	; 0x24
    b6b4:	addcc	r3, r3, r1
    b6b8:	ldr	r4, [r0, r3, lsl #2]
    b6bc:	cmp	r4, #0
    b6c0:	bne	b648 <appendAttributeValue+0x44c>
    b6c4:	mov	sl, #0
    b6c8:	b	b6d4 <appendAttributeValue+0x4d8>
    b6cc:	ldr	ip, [sp, #48]	; 0x30
    b6d0:	mov	sl, r4
    b6d4:	ldr	r0, [sp, #12]
    b6d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b6dc:	str	r0, [r1]
    b6e0:	ldr	r0, [sp, #44]	; 0x2c
    b6e4:	ldr	r1, [fp, #12]
    b6e8:	cmp	r0, r1
    b6ec:	beq	b724 <appendAttributeValue+0x528>
    b6f0:	ldrb	r0, [ip, #129]	; 0x81
    b6f4:	cmp	r0, #0
    b6f8:	beq	b768 <appendAttributeValue+0x56c>
    b6fc:	ldrb	r1, [ip, #130]	; 0x82
    b700:	cmp	sl, #0
    b704:	mov	r0, sl
    b708:	mov	r2, r5
    b70c:	movwne	r0, #1
    b710:	cmp	r1, #0
    b714:	beq	b75c <appendAttributeValue+0x560>
    b718:	cmp	r0, #0
    b71c:	bne	b774 <appendAttributeValue+0x578>
    b720:	b	b904 <appendAttributeValue+0x708>
    b724:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b728:	ldr	r0, [r1, #280]	; 0x118
    b72c:	cmp	r0, #0
    b730:	beq	b7fc <appendAttributeValue+0x600>
    b734:	ldrb	r0, [ip, #130]	; 0x82
    b738:	mov	r2, r5
    b73c:	cmp	r0, #0
    b740:	mov	r0, sl
    b744:	ldrne	r1, [r1, #308]	; 0x134
    b748:	ldrbeq	r1, [ip, #129]	; 0x81
    b74c:	cmp	sl, #0
    b750:	movwne	r0, #1
    b754:	cmp	r1, #0
    b758:	beq	b718 <appendAttributeValue+0x51c>
    b75c:	cmp	r0, #0
    b760:	bne	b780 <appendAttributeValue+0x584>
    b764:	b	b85c <appendAttributeValue+0x660>
    b768:	cmp	sl, #0
    b76c:	mov	r2, r5
    b770:	beq	b904 <appendAttributeValue+0x708>
    b774:	ldrb	r0, [sl, #34]	; 0x22
    b778:	cmp	r0, #0
    b77c:	beq	b90c <appendAttributeValue+0x710>
    b780:	ldrb	r0, [sl, #32]
    b784:	cmp	r0, #0
    b788:	bne	b8d4 <appendAttributeValue+0x6d8>
    b78c:	ldr	r0, [sl, #28]
    b790:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b794:	cmp	r0, #0
    b798:	bne	b8e4 <appendAttributeValue+0x6e8>
    b79c:	ldr	r3, [sl, #4]
    b7a0:	cmp	r3, #0
    b7a4:	beq	b8f0 <appendAttributeValue+0x6f4>
    b7a8:	mov	r0, #1
    b7ac:	strb	r0, [sl, #32]
    b7b0:	mov	r0, r1
    b7b4:	ldr	r2, [sl, #8]
    b7b8:	ldr	r1, [r1, #236]	; 0xec
    b7bc:	add	r2, r3, r2
    b7c0:	str	r2, [sp]
    b7c4:	ldr	r2, [fp, #12]
    b7c8:	str	r2, [sp, #4]
    b7cc:	mov	r2, r6
    b7d0:	bl	b1fc <appendAttributeValue>
    b7d4:	mov	r1, sl
    b7d8:	mov	sl, r0
    b7dc:	mov	r0, #0
    b7e0:	mov	r3, r5
    b7e4:	strb	r0, [r1, #32]
    b7e8:	cmp	sl, #0
    b7ec:	mov	r0, sl
    b7f0:	movwne	r0, #1
    b7f4:	bne	b868 <appendAttributeValue+0x66c>
    b7f8:	b	b85c <appendAttributeValue+0x660>
    b7fc:	cmp	sl, #0
    b800:	mov	r2, r5
    b804:	bne	b780 <appendAttributeValue+0x584>
    b808:	b	b85c <appendAttributeValue+0x660>
    b80c:	mov	r0, r5
    b810:	bl	65e4 <poolGrow>
    b814:	cmp	r0, #0
    b818:	beq	b878 <appendAttributeValue+0x67c>
    b81c:	ldr	r0, [r5, #8]
    b820:	ldr	r6, [r9, #60]	; 0x3c
    b824:	mov	r1, r7
    b828:	mov	r2, r4
    b82c:	mov	r3, r8
    b830:	str	r0, [sp]
    b834:	mov	r0, r9
    b838:	blx	r6
    b83c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b840:	cmp	r0, r4
    b844:	bne	b80c <appendAttributeValue+0x610>
    b848:	ldr	r0, [r5, #16]
    b84c:	ldr	r6, [sp, #52]	; 0x34
    b850:	mov	r7, sl
    b854:	cmp	r0, #0
    b858:	beq	b878 <appendAttributeValue+0x67c>
    b85c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b860:	mov	r0, #0
    b864:	mov	sl, r7
    b868:	cmp	r0, #0
    b86c:	mov	r7, sl
    b870:	beq	b240 <appendAttributeValue+0x44>
    b874:	b	b87c <appendAttributeValue+0x680>
    b878:	mov	sl, #1
    b87c:	mov	r0, sl
    b880:	sub	sp, fp, #28
    b884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b888:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b88c:	mov	sl, #14
    b890:	b	b8a8 <appendAttributeValue+0x6ac>
    b894:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b898:	mov	sl, #23
    b89c:	b	b8a8 <appendAttributeValue+0x6ac>
    b8a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b8a4:	mov	sl, #4
    b8a8:	ldr	r0, [r1, #152]	; 0x98
    b8ac:	cmp	r0, r9
    b8b0:	streq	r5, [r1, #296]	; 0x128
    b8b4:	b	b87c <appendAttributeValue+0x680>
    b8b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b8bc:	mov	sl, #4
    b8c0:	ldr	r0, [r1, #152]	; 0x98
    b8c4:	cmp	r0, r9
    b8c8:	ldreq	r0, [fp, #-36]	; 0xffffffdc
    b8cc:	streq	r0, [r1, #296]	; 0x128
    b8d0:	b	b87c <appendAttributeValue+0x680>
    b8d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b8d8:	mov	sl, #12
    b8dc:	ldr	r0, [r1, #152]	; 0x98
    b8e0:	b	b8f8 <appendAttributeValue+0x6fc>
    b8e4:	ldr	r0, [r1, #152]	; 0x98
    b8e8:	mov	sl, #15
    b8ec:	b	b8f8 <appendAttributeValue+0x6fc>
    b8f0:	ldr	r0, [r1, #152]	; 0x98
    b8f4:	mov	sl, #16
    b8f8:	cmp	r0, r9
    b8fc:	streq	r2, [r1, #296]	; 0x128
    b900:	b	b87c <appendAttributeValue+0x680>
    b904:	mov	sl, #11
    b908:	b	b87c <appendAttributeValue+0x680>
    b90c:	mov	sl, #24
    b910:	b	b87c <appendAttributeValue+0x680>

0000b914 <internalEntityProcessor>:
    b914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b918:	add	fp, sp, #28
    b91c:	sub	sp, sp, #36	; 0x24
    b920:	ldr	r9, [r0, #308]	; 0x134
    b924:	cmp	r9, #0
    b928:	moveq	r0, #23
    b92c:	subeq	sp, fp, #28
    b930:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b934:	ldr	r8, [r9, #12]
    b938:	str	r3, [sp, #20]
    b93c:	str	r2, [sp, #24]
    b940:	str	r1, [sp, #28]
    b944:	mov	r5, r0
    b948:	ldmib	r8, {r0, r1, r2}
    b94c:	add	r7, r0, r1
    b950:	ldrb	r1, [r8, #33]	; 0x21
    b954:	add	r4, r0, r2
    b958:	cmp	r1, #0
    b95c:	beq	b9b0 <internalEntityProcessor+0x9c>
    b960:	ldr	r0, [r5, #236]	; 0xec
    b964:	add	sl, sp, #32
    b968:	mov	r1, r4
    b96c:	mov	r2, r7
    b970:	mov	r3, sl
    b974:	ldr	r6, [r0]
    b978:	blx	r6
    b97c:	ldr	r2, [sp, #32]
    b980:	ldr	r1, [r5, #236]	; 0xec
    b984:	mov	r3, #0
    b988:	stm	sp, {r0, r2, sl}
    b98c:	str	r3, [sp, #12]
    b990:	mov	r0, r5
    b994:	mov	r2, r4
    b998:	mov	r3, r7
    b99c:	bl	2d04 <doProlog>
    b9a0:	cmp	r0, #0
    b9a4:	beq	b9e0 <internalEntityProcessor+0xcc>
    b9a8:	sub	sp, fp, #28
    b9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b9b0:	ldr	r2, [r5, #236]	; 0xec
    b9b4:	ldr	r1, [r9, #16]
    b9b8:	mov	r0, #0
    b9bc:	add	r3, sp, #32
    b9c0:	str	r7, [sp]
    b9c4:	str	r3, [sp, #4]
    b9c8:	str	r0, [sp, #8]
    b9cc:	mov	r0, r5
    b9d0:	mov	r3, r4
    b9d4:	bl	798c <doContent>
    b9d8:	cmp	r0, #0
    b9dc:	bne	b9a8 <internalEntityProcessor+0x94>
    b9e0:	ldr	r0, [sp, #32]
    b9e4:	cmp	r7, r0
    b9e8:	beq	ba10 <internalEntityProcessor+0xfc>
    b9ec:	ldr	r1, [r5, #496]	; 0x1f0
    b9f0:	cmp	r1, #3
    b9f4:	bne	ba10 <internalEntityProcessor+0xfc>
    b9f8:	ldr	r1, [r8, #4]
    b9fc:	sub	r0, r0, r1
    ba00:	str	r0, [r8, #12]
    ba04:	mov	r0, #0
    ba08:	sub	sp, fp, #28
    ba0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba10:	mov	r0, #0
    ba14:	strb	r0, [r8, #32]
    ba18:	ldr	r0, [r9, #8]
    ba1c:	str	r0, [r5, #308]	; 0x134
    ba20:	ldr	r0, [r5, #312]	; 0x138
    ba24:	str	r0, [r9, #8]
    ba28:	str	r9, [r5, #312]	; 0x138
    ba2c:	ldrb	r0, [r8, #33]	; 0x21
    ba30:	cmp	r0, #0
    ba34:	beq	baa0 <internalEntityProcessor+0x18c>
    ba38:	movw	r0, #0
    ba3c:	ldr	r4, [sp, #28]
    ba40:	ldr	r6, [sp, #24]
    ba44:	add	r3, sp, #32
    ba48:	movt	r0, #0
    ba4c:	str	r0, [r5, #288]	; 0x120
    ba50:	ldr	r0, [r5, #152]	; 0x98
    ba54:	mov	r1, r4
    ba58:	mov	r2, r6
    ba5c:	ldr	r7, [r0]
    ba60:	blx	r7
    ba64:	ldr	r3, [sp, #32]
    ba68:	ldrb	r2, [r5, #500]	; 0x1f4
    ba6c:	ldr	r1, [r5, #152]	; 0x98
    ba70:	stm	sp, {r0, r3}
    ba74:	clz	r2, r2
    ba78:	mov	r3, r6
    ba7c:	ldr	r0, [sp, #20]
    ba80:	lsr	r2, r2, #5
    ba84:	str	r2, [sp, #12]
    ba88:	mov	r2, r4
    ba8c:	str	r0, [sp, #8]
    ba90:	mov	r0, r5
    ba94:	bl	2d04 <doProlog>
    ba98:	sub	sp, fp, #28
    ba9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    baa0:	ldr	r3, [sp, #24]
    baa4:	movw	r0, #0
    baa8:	movt	r0, #0
    baac:	str	r0, [r5, #288]	; 0x120
    bab0:	ldrb	r0, [r5, #500]	; 0x1f4
    bab4:	ldr	r1, [r5, #492]	; 0x1ec
    bab8:	ldr	r2, [r5, #152]	; 0x98
    babc:	str	r3, [sp]
    bac0:	ldr	r3, [sp, #20]
    bac4:	clz	r0, r0
    bac8:	cmp	r1, #0
    bacc:	str	r3, [sp, #4]
    bad0:	ldr	r3, [sp, #28]
    bad4:	lsr	r0, r0, #5
    bad8:	movwne	r1, #1
    badc:	str	r0, [sp, #8]
    bae0:	mov	r0, r5
    bae4:	bl	798c <doContent>
    bae8:	sub	sp, fp, #28
    baec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000baf0 <build_node>:
    baf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    baf4:	add	fp, sp, #28
    baf8:	sub	sp, sp, #12
    bafc:	ldr	r6, [r0, #364]	; 0x16c
    bb00:	rsb	ip, r1, r1, lsl #3
    bb04:	ldr	r4, [fp, #8]
    bb08:	ldr	r7, [r6, #164]	; 0xa4
    bb0c:	mov	r1, r7
    bb10:	ldr	r5, [r1, ip, lsl #2]!
    bb14:	str	r5, [r2]
    bb18:	cmp	r5, #4
    bb1c:	ldr	r1, [r1, #4]
    bb20:	str	r1, [r2, #4]
    bb24:	bne	bb6c <build_node+0x7c>
    bb28:	ldr	r1, [r4]
    bb2c:	add	r0, r7, ip, lsl #2
    bb30:	str	r1, [r2, #8]
    bb34:	ldr	r0, [r0, #8]
    bb38:	ldr	r7, [r4]
    bb3c:	ldrb	r1, [r0]
    bb40:	add	r3, r7, #1
    bb44:	str	r3, [r4]
    bb48:	strb	r1, [r7]
    bb4c:	ldrb	r1, [r0], #1
    bb50:	cmp	r1, #0
    bb54:	bne	bb38 <build_node+0x48>
    bb58:	mov	r0, #0
    bb5c:	str	r0, [r2, #12]
    bb60:	str	r0, [r2, #16]
    bb64:	sub	sp, fp, #28
    bb68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bb6c:	add	r1, r7, ip, lsl #2
    bb70:	mov	sl, r3
    bb74:	ldr	r1, [r1, #20]
    bb78:	str	r1, [r2, #12]
    bb7c:	cmp	r1, #0
    bb80:	ldr	r7, [r3]
    bb84:	str	r7, [r2, #16]
    bb88:	add	r7, r1, r1, lsl #2
    bb8c:	ldr	r5, [r3]
    bb90:	add	r7, r5, r7, lsl #2
    bb94:	str	r7, [r3]
    bb98:	beq	bc00 <build_node+0x110>
    bb9c:	ldr	r1, [r6, #164]	; 0xa4
    bba0:	mov	r9, r0
    bba4:	mov	r5, #0
    bba8:	mov	r8, #0
    bbac:	str	r2, [sp, #8]
    bbb0:	add	r1, r1, ip, lsl #2
    bbb4:	add	r7, r1, #12
    bbb8:	ldr	r1, [r2, #16]
    bbbc:	ldr	r7, [r7]
    bbc0:	mov	r0, r9
    bbc4:	mov	r3, sl
    bbc8:	str	r4, [sp]
    bbcc:	add	r2, r1, r5
    bbd0:	mov	r1, r7
    bbd4:	bl	baf0 <build_node>
    bbd8:	ldr	ip, [r6, #164]	; 0xa4
    bbdc:	ldr	r2, [sp, #8]
    bbe0:	rsb	r1, r7, r7, lsl #3
    bbe4:	add	r8, r8, #1
    bbe8:	add	r5, r5, #20
    bbec:	add	r1, ip, r1, lsl #2
    bbf0:	add	r7, r1, #24
    bbf4:	ldr	r1, [r2, #12]
    bbf8:	cmp	r8, r1
    bbfc:	bcc	bbb8 <build_node+0xc8>
    bc00:	mov	r0, #0
    bc04:	str	r0, [r2, #8]
    bc08:	sub	sp, fp, #28
    bc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000bc10 <externalEntityInitProcessor2>:
    bc10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bc14:	add	fp, sp, #24
    bc18:	sub	sp, sp, #8
    bc1c:	str	r1, [sp, #4]
    bc20:	mov	r5, r0
    bc24:	mov	r8, r3
    bc28:	add	r3, sp, #4
    bc2c:	mov	r7, r2
    bc30:	mov	r6, r1
    bc34:	ldr	r0, [r0, #152]	; 0x98
    bc38:	ldr	r4, [r0, #4]
    bc3c:	blx	r4
    bc40:	cmn	r0, #2
    bc44:	beq	bc88 <externalEntityInitProcessor2+0x78>
    bc48:	cmn	r0, #1
    bc4c:	beq	bc9c <externalEntityInitProcessor2+0x8c>
    bc50:	cmp	r0, #14
    bc54:	ldreq	r6, [sp, #4]
    bc58:	cmpeq	r6, r7
    bc5c:	beq	bcc4 <externalEntityInitProcessor2+0xb4>
    bc60:	movw	r0, #0
    bc64:	mov	r1, r6
    bc68:	mov	r2, r7
    bc6c:	mov	r3, r8
    bc70:	movt	r0, #0
    bc74:	str	r0, [r5, #288]	; 0x120
    bc78:	mov	r0, r5
    bc7c:	bl	bcdc <externalEntityInitProcessor3>
    bc80:	sub	sp, fp, #24
    bc84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bc88:	ldrb	r0, [r5, #500]	; 0x1f4
    bc8c:	cmp	r0, #0
    bc90:	strne	r6, [r5, #296]	; 0x128
    bc94:	movne	r0, #6
    bc98:	b	bcac <externalEntityInitProcessor2+0x9c>
    bc9c:	ldrb	r0, [r5, #500]	; 0x1f4
    bca0:	cmp	r0, #0
    bca4:	strne	r6, [r5, #296]	; 0x128
    bca8:	movne	r0, #5
    bcac:	subne	sp, fp, #24
    bcb0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    bcb4:	str	r6, [r8]
    bcb8:	mov	r0, #0
    bcbc:	sub	sp, fp, #24
    bcc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bcc4:	ldrb	r0, [r5, #500]	; 0x1f4
    bcc8:	mov	r6, r7
    bccc:	cmp	r0, #0
    bcd0:	bne	bc60 <externalEntityInitProcessor2+0x50>
    bcd4:	str	r7, [r8]
    bcd8:	b	bcb8 <externalEntityInitProcessor2+0xa8>

0000bcdc <externalEntityInitProcessor3>:
    bcdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bce0:	add	fp, sp, #24
    bce4:	sub	sp, sp, #8
    bce8:	str	r1, [sp, #4]
    bcec:	str	r1, [r0, #296]	; 0x128
    bcf0:	mov	r6, r0
    bcf4:	mov	r8, r3
    bcf8:	add	r3, sp, #4
    bcfc:	mov	r5, r2
    bd00:	mov	r7, r1
    bd04:	ldr	r0, [r0, #152]	; 0x98
    bd08:	ldr	r4, [r0, #4]
    bd0c:	blx	r4
    bd10:	ldr	r3, [sp, #4]
    bd14:	cmn	r0, #2
    bd18:	str	r3, [r6, #300]	; 0x12c
    bd1c:	beq	bd70 <externalEntityInitProcessor3+0x94>
    bd20:	cmn	r0, #1
    bd24:	beq	bd88 <externalEntityInitProcessor3+0xac>
    bd28:	cmp	r0, #12
    bd2c:	bne	bdac <externalEntityInitProcessor3+0xd0>
    bd30:	mov	r0, r6
    bd34:	mov	r1, #1
    bd38:	mov	r2, r7
    bd3c:	bl	5760 <processXmlDecl>
    bd40:	cmp	r0, #0
    bd44:	bne	bd80 <externalEntityInitProcessor3+0xa4>
    bd48:	ldr	r0, [r6, #496]	; 0x1f0
    bd4c:	cmp	r0, #2
    bd50:	moveq	r0, #35	; 0x23
    bd54:	subeq	sp, fp, #24
    bd58:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    bd5c:	cmp	r0, #3
    bd60:	bne	bda8 <externalEntityInitProcessor3+0xcc>
    bd64:	ldr	r0, [sp, #4]
    bd68:	str	r0, [r8]
    bd6c:	b	bd9c <externalEntityInitProcessor3+0xc0>
    bd70:	ldrb	r1, [r6, #500]	; 0x1f4
    bd74:	mov	r0, #6
    bd78:	cmp	r1, #0
    bd7c:	beq	bd98 <externalEntityInitProcessor3+0xbc>
    bd80:	sub	sp, fp, #24
    bd84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bd88:	ldrb	r1, [r6, #500]	; 0x1f4
    bd8c:	mov	r0, #5
    bd90:	cmp	r1, #0
    bd94:	bne	bd80 <externalEntityInitProcessor3+0xa4>
    bd98:	str	r7, [r8]
    bd9c:	mov	r0, #0
    bda0:	sub	sp, fp, #24
    bda4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    bda8:	ldr	r7, [sp, #4]
    bdac:	mov	r0, #1
    bdb0:	mov	r1, r7
    bdb4:	mov	r2, r5
    bdb8:	mov	r3, r8
    bdbc:	str	r0, [r6, #320]	; 0x140
    bdc0:	movw	r0, #0
    bdc4:	movt	r0, #0
    bdc8:	str	r0, [r6, #288]	; 0x120
    bdcc:	mov	r0, r6
    bdd0:	bl	b0fc <externalEntityContentProcessor>
    bdd4:	sub	sp, fp, #24
    bdd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000bddc <entityValueInitProcessor>:
    bddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bde0:	add	fp, sp, #28
    bde4:	sub	sp, sp, #12
    bde8:	str	r1, [sp, #4]
    bdec:	str	r1, [r0, #296]	; 0x128
    bdf0:	mov	r5, r0
    bdf4:	mov	r9, r3
    bdf8:	add	r3, sp, #4
    bdfc:	mov	r4, r2
    be00:	mov	r8, r1
    be04:	ldr	r0, [r0, #152]	; 0x98
    be08:	ldr	r7, [r0]
    be0c:	blx	r7
    be10:	ldr	r1, [sp, #4]
    be14:	cmp	r0, #1
    be18:	str	r1, [r5, #300]	; 0x12c
    be1c:	blt	be84 <entityValueInitProcessor+0xa8>
    be20:	add	sl, sp, #4
    be24:	mov	r7, r8
    be28:	mov	r2, r7
    be2c:	mov	r7, r1
    be30:	cmp	r0, #14
    be34:	beq	be44 <entityValueInitProcessor+0x68>
    be38:	cmp	r0, #12
    be3c:	bne	be58 <entityValueInitProcessor+0x7c>
    be40:	b	bec0 <entityValueInitProcessor+0xe4>
    be44:	cmp	r7, r4
    be48:	bne	be58 <entityValueInitProcessor+0x7c>
    be4c:	ldrb	r0, [r5, #500]	; 0x1f4
    be50:	cmp	r0, #0
    be54:	beq	bf24 <entityValueInitProcessor+0x148>
    be58:	str	r7, [r5, #296]	; 0x128
    be5c:	mov	r1, r7
    be60:	mov	r2, r4
    be64:	mov	r3, sl
    be68:	ldr	r0, [r5, #152]	; 0x98
    be6c:	ldr	r6, [r0]
    be70:	blx	r6
    be74:	ldr	r1, [sp, #4]
    be78:	cmp	r0, #1
    be7c:	str	r1, [r5, #300]	; 0x12c
    be80:	bge	be28 <entityValueInitProcessor+0x4c>
    be84:	cmp	r0, #0
    be88:	beq	bea8 <entityValueInitProcessor+0xcc>
    be8c:	ldrb	r1, [r5, #500]	; 0x1f4
    be90:	cmp	r1, #0
    be94:	bne	bea8 <entityValueInitProcessor+0xcc>
    be98:	str	r8, [r9]
    be9c:	mov	r0, #0
    bea0:	sub	sp, fp, #28
    bea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bea8:	add	r1, r0, #2
    beac:	cmp	r1, #3
    beb0:	bcs	bee0 <entityValueInitProcessor+0x104>
    beb4:	rsb	r0, r0, #4
    beb8:	sub	sp, fp, #28
    bebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bec0:	mov	r0, r5
    bec4:	mov	r1, #0
    bec8:	mov	r3, r7
    becc:	bl	5760 <processXmlDecl>
    bed0:	cmp	r0, #0
    bed4:	beq	befc <entityValueInitProcessor+0x120>
    bed8:	sub	sp, fp, #28
    bedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bee0:	ldr	r1, [r5, #152]	; 0x98
    bee4:	mov	r0, r5
    bee8:	mov	r2, r8
    beec:	mov	r3, r4
    bef0:	bl	679c <storeEntityValue>
    bef4:	sub	sp, fp, #28
    bef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    befc:	ldr	r0, [r5, #496]	; 0x1f0
    bf00:	cmp	r0, #2
    bf04:	moveq	r0, #35	; 0x23
    bf08:	subeq	sp, fp, #28
    bf0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf10:	cmp	r0, #3
    bf14:	bne	bf2c <entityValueInitProcessor+0x150>
    bf18:	ldr	r0, [sp, #4]
    bf1c:	str	r0, [r9]
    bf20:	b	be9c <entityValueInitProcessor+0xc0>
    bf24:	str	r4, [r9]
    bf28:	b	be9c <entityValueInitProcessor+0xc0>
    bf2c:	ldr	r8, [sp, #4]
    bf30:	movw	r0, #0
    bf34:	add	r3, sp, #8
    bf38:	mov	r2, r4
    bf3c:	movt	r0, #0
    bf40:	str	r8, [r9]
    bf44:	str	r0, [r5, #288]	; 0x120
    bf48:	str	r8, [sp, #8]
    bf4c:	mov	r1, r8
    bf50:	ldr	r7, [r5, #152]	; 0x98
    bf54:	ldr	r6, [r7]
    bf58:	mov	r0, r7
    bf5c:	blx	r6
    bf60:	cmp	r0, #1
    bf64:	blt	bf8c <entityValueInitProcessor+0x1b0>
    bf68:	add	sl, sp, #8
    bf6c:	ldr	r6, [r7]
    bf70:	ldr	r1, [sp, #8]
    bf74:	mov	r0, r7
    bf78:	mov	r2, r4
    bf7c:	mov	r3, sl
    bf80:	blx	r6
    bf84:	cmp	r0, #1
    bf88:	bge	bf6c <entityValueInitProcessor+0x190>
    bf8c:	cmp	r0, #0
    bf90:	beq	bfa0 <entityValueInitProcessor+0x1c4>
    bf94:	ldrb	r1, [r5, #500]	; 0x1f4
    bf98:	cmp	r1, #0
    bf9c:	beq	be98 <entityValueInitProcessor+0xbc>
    bfa0:	add	r1, r0, #2
    bfa4:	cmp	r1, #3
    bfa8:	bcc	beb4 <entityValueInitProcessor+0xd8>
    bfac:	mov	r0, r5
    bfb0:	mov	r1, r7
    bfb4:	b	bee8 <entityValueInitProcessor+0x10c>

0000bfb8 <externalParEntProcessor>:
    bfb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bfbc:	add	fp, sp, #24
    bfc0:	sub	sp, sp, #24
    bfc4:	str	r1, [sp, #20]
    bfc8:	mov	r7, r0
    bfcc:	mov	r8, r3
    bfd0:	add	r3, sp, #20
    bfd4:	mov	r4, r2
    bfd8:	mov	r6, r1
    bfdc:	ldr	r0, [r0, #152]	; 0x98
    bfe0:	ldr	r5, [r0]
    bfe4:	blx	r5
    bfe8:	cmp	r0, #0
    bfec:	ble	c018 <externalParEntProcessor+0x60>
    bff0:	cmp	r0, #14
    bff4:	bne	c048 <externalParEntProcessor+0x90>
    bff8:	ldr	r0, [r7, #152]	; 0x98
    bffc:	ldr	r6, [sp, #20]
    c000:	add	r3, sp, #20
    c004:	mov	r2, r4
    c008:	ldr	r5, [r0]
    c00c:	mov	r1, r6
    c010:	blx	r5
    c014:	b	c048 <externalParEntProcessor+0x90>
    c018:	beq	c034 <externalParEntProcessor+0x7c>
    c01c:	ldrb	r1, [r7, #500]	; 0x1f4
    c020:	cmp	r1, #0
    c024:	moveq	r0, #0
    c028:	streq	r6, [r8]
    c02c:	subeq	sp, fp, #24
    c030:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    c034:	add	r1, r0, #2
    c038:	cmp	r1, #3
    c03c:	rsbcc	r0, r0, #4
    c040:	subcc	sp, fp, #24
    c044:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
    c048:	movw	r1, #0
    c04c:	movt	r1, #0
    c050:	str	r1, [r7, #288]	; 0x120
    c054:	ldrb	r2, [r7, #500]	; 0x1f4
    c058:	ldr	r3, [sp, #20]
    c05c:	ldr	r1, [r7, #152]	; 0x98
    c060:	clz	r2, r2
    c064:	stm	sp, {r0, r3, r8}
    c068:	mov	r0, r7
    c06c:	mov	r3, r4
    c070:	lsr	r2, r2, #5
    c074:	str	r2, [sp, #12]
    c078:	mov	r2, r6
    c07c:	bl	2d04 <doProlog>
    c080:	sub	sp, fp, #24
    c084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c088 <entityValueProcessor>:
    c088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c08c:	add	fp, sp, #28
    c090:	sub	sp, sp, #4
    c094:	str	r1, [sp]
    c098:	mov	r8, r3
    c09c:	mov	r9, r0
    c0a0:	mov	r3, sp
    c0a4:	mov	r4, r2
    c0a8:	mov	sl, r1
    c0ac:	ldr	r7, [r0, #152]	; 0x98
    c0b0:	ldr	r6, [r7]
    c0b4:	mov	r0, r7
    c0b8:	blx	r6
    c0bc:	cmp	r0, #1
    c0c0:	blt	c0e8 <entityValueProcessor+0x60>
    c0c4:	mov	r6, sp
    c0c8:	ldr	r5, [r7]
    c0cc:	ldr	r1, [sp]
    c0d0:	mov	r0, r7
    c0d4:	mov	r2, r4
    c0d8:	mov	r3, r6
    c0dc:	blx	r5
    c0e0:	cmp	r0, #1
    c0e4:	bge	c0c8 <entityValueProcessor+0x40>
    c0e8:	cmp	r0, #0
    c0ec:	beq	c108 <entityValueProcessor+0x80>
    c0f0:	ldrb	r1, [r9, #500]	; 0x1f4
    c0f4:	cmp	r1, #0
    c0f8:	moveq	r0, #0
    c0fc:	streq	sl, [r8]
    c100:	subeq	sp, fp, #28
    c104:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c108:	add	r1, r0, #2
    c10c:	cmp	r1, #3
    c110:	rsbcc	r0, r0, #4
    c114:	subcc	sp, fp, #28
    c118:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c11c:	mov	r0, r9
    c120:	mov	r1, r7
    c124:	mov	r2, sl
    c128:	mov	r3, r4
    c12c:	bl	679c <storeEntityValue>
    c130:	sub	sp, fp, #28
    c134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c138 <copyEntityTable>:
    c138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c13c:	add	fp, sp, #28
    c140:	sub	sp, sp, #20
    c144:	mov	r9, r0
    c148:	ldr	r6, [r3]
    c14c:	ldr	r0, [r3, #8]
    c150:	mov	sl, r1
    c154:	mov	r4, r2
    c158:	mov	r1, #0
    c15c:	add	r7, r6, r0, lsl #2
    c160:	mov	r0, #0
    c164:	b	c184 <copyEntityTable+0x4c>
    c168:	ldrb	r0, [r8, #33]	; 0x21
    c16c:	ldr	r1, [sp, #16]
    c170:	strb	r0, [r9, #33]	; 0x21
    c174:	ldrb	r0, [r8, #34]	; 0x22
    c178:	strb	r0, [r9, #34]	; 0x22
    c17c:	ldr	r9, [sp, #8]
    c180:	ldr	r0, [sp, #12]
    c184:	cmp	r7, r6
    c188:	beq	c488 <copyEntityTable+0x350>
    c18c:	ldr	r8, [r6], #4
    c190:	cmp	r8, #0
    c194:	beq	c184 <copyEntityTable+0x4c>
    c198:	ldr	r5, [r8]
    c19c:	str	r1, [sp, #16]
    c1a0:	str	r0, [sp, #12]
    c1a4:	ldr	r1, [r4, #8]
    c1a8:	ldr	r0, [r4, #12]
    c1ac:	cmp	r0, r1
    c1b0:	bne	c1c8 <copyEntityTable+0x90>
    c1b4:	mov	r0, r4
    c1b8:	bl	65e4 <poolGrow>
    c1bc:	cmp	r0, #0
    c1c0:	beq	c490 <copyEntityTable+0x358>
    c1c4:	ldr	r0, [r4, #12]
    c1c8:	ldrb	r1, [r5]
    c1cc:	add	r2, r0, #1
    c1d0:	str	r2, [r4, #12]
    c1d4:	strb	r1, [r0]
    c1d8:	ldrb	r0, [r5], #1
    c1dc:	cmp	r0, #0
    c1e0:	bne	c1a4 <copyEntityTable+0x6c>
    c1e4:	ldr	r2, [r4, #16]
    c1e8:	ldr	r0, [r4, #12]
    c1ec:	mov	r5, #0
    c1f0:	cmp	r2, #0
    c1f4:	str	r0, [r4, #16]
    c1f8:	beq	c494 <copyEntityTable+0x35c>
    c1fc:	mov	r0, r9
    c200:	mov	r1, sl
    c204:	mov	r3, #36	; 0x24
    c208:	str	r9, [sp, #8]
    c20c:	bl	5d0c <lookup>
    c210:	cmp	r0, #0
    c214:	beq	c494 <copyEntityTable+0x35c>
    c218:	ldr	r5, [r8, #16]
    c21c:	mov	r9, r0
    c220:	cmp	r5, #0
    c224:	beq	c300 <copyEntityTable+0x1c8>
    c228:	ldr	r1, [r4, #8]
    c22c:	ldr	r0, [r4, #12]
    c230:	cmp	r0, r1
    c234:	bne	c24c <copyEntityTable+0x114>
    c238:	mov	r0, r4
    c23c:	bl	65e4 <poolGrow>
    c240:	cmp	r0, #0
    c244:	beq	c490 <copyEntityTable+0x358>
    c248:	ldr	r0, [r4, #12]
    c24c:	ldrb	r1, [r5]
    c250:	add	r2, r0, #1
    c254:	str	r2, [r4, #12]
    c258:	strb	r1, [r0]
    c25c:	ldrb	r0, [r5], #1
    c260:	cmp	r0, #0
    c264:	bne	c228 <copyEntityTable+0xf0>
    c268:	ldr	r1, [r4, #16]
    c26c:	ldr	r0, [r4, #12]
    c270:	cmp	r1, #0
    c274:	str	r0, [r4, #16]
    c278:	beq	c490 <copyEntityTable+0x358>
    c27c:	str	r1, [r9, #16]
    c280:	ldr	r5, [r8, #20]
    c284:	cmp	r5, #0
    c288:	beq	c3a8 <copyEntityTable+0x270>
    c28c:	ldr	r2, [sp, #16]
    c290:	cmp	r5, r2
    c294:	beq	c398 <copyEntityTable+0x260>
    c298:	str	r5, [sp, #16]
    c29c:	b	c2a8 <copyEntityTable+0x170>
    c2a0:	ldr	r0, [r4, #12]
    c2a4:	add	r5, r5, #1
    c2a8:	ldr	r1, [r4, #8]
    c2ac:	cmp	r0, r1
    c2b0:	bne	c2c8 <copyEntityTable+0x190>
    c2b4:	mov	r0, r4
    c2b8:	bl	65e4 <poolGrow>
    c2bc:	cmp	r0, #0
    c2c0:	beq	c490 <copyEntityTable+0x358>
    c2c4:	ldr	r0, [r4, #12]
    c2c8:	ldrb	r1, [r5]
    c2cc:	add	r2, r0, #1
    c2d0:	str	r2, [r4, #12]
    c2d4:	strb	r1, [r0]
    c2d8:	ldrb	r0, [r5]
    c2dc:	cmp	r0, #0
    c2e0:	bne	c2a0 <copyEntityTable+0x168>
    c2e4:	ldr	r1, [r4, #16]
    c2e8:	ldr	r0, [r4, #12]
    c2ec:	cmp	r1, #0
    c2f0:	str	r0, [r4, #16]
    c2f4:	beq	c490 <copyEntityTable+0x358>
    c2f8:	ldr	r2, [sp, #16]
    c2fc:	b	c39c <copyEntityTable+0x264>
    c300:	str	sl, [sp, #4]
    c304:	ldmib	r8, {r5, sl}
    c308:	ldr	r0, [r4, #12]
    c30c:	cmp	r0, #0
    c310:	bne	c324 <copyEntityTable+0x1ec>
    c314:	mov	r0, r4
    c318:	bl	65e4 <poolGrow>
    c31c:	cmp	r0, #0
    c320:	beq	c490 <copyEntityTable+0x358>
    c324:	cmp	sl, #1
    c328:	blt	c370 <copyEntityTable+0x238>
    c32c:	add	sl, sl, #1
    c330:	ldr	r1, [r4, #8]
    c334:	ldr	r0, [r4, #12]
    c338:	cmp	r0, r1
    c33c:	bne	c354 <copyEntityTable+0x21c>
    c340:	mov	r0, r4
    c344:	bl	65e4 <poolGrow>
    c348:	cmp	r0, #0
    c34c:	beq	c490 <copyEntityTable+0x358>
    c350:	ldr	r0, [r4, #12]
    c354:	ldrb	r1, [r5], #1
    c358:	sub	sl, sl, #1
    c35c:	add	r2, r0, #1
    c360:	cmp	sl, #1
    c364:	str	r2, [r4, #12]
    c368:	strb	r1, [r0]
    c36c:	bgt	c330 <copyEntityTable+0x1f8>
    c370:	ldr	r1, [r4, #16]
    c374:	ldr	r0, [r4, #12]
    c378:	cmp	r1, #0
    c37c:	str	r0, [r4, #16]
    c380:	beq	c490 <copyEntityTable+0x358>
    c384:	str	r1, [r9, #4]
    c388:	ldr	sl, [sp, #4]
    c38c:	ldr	r1, [r8, #8]
    c390:	str	r1, [r9, #8]
    c394:	b	c414 <copyEntityTable+0x2dc>
    c398:	ldr	r1, [sp, #12]
    c39c:	str	r2, [sp, #16]
    c3a0:	str	r1, [sp, #12]
    c3a4:	str	r1, [r9, #20]
    c3a8:	ldr	r5, [r8, #24]
    c3ac:	cmp	r5, #0
    c3b0:	bne	c3c0 <copyEntityTable+0x288>
    c3b4:	b	c414 <copyEntityTable+0x2dc>
    c3b8:	ldr	r0, [r4, #12]
    c3bc:	add	r5, r5, #1
    c3c0:	ldr	r1, [r4, #8]
    c3c4:	cmp	r0, r1
    c3c8:	bne	c3e0 <copyEntityTable+0x2a8>
    c3cc:	mov	r0, r4
    c3d0:	bl	65e4 <poolGrow>
    c3d4:	cmp	r0, #0
    c3d8:	beq	c490 <copyEntityTable+0x358>
    c3dc:	ldr	r0, [r4, #12]
    c3e0:	ldrb	r1, [r5]
    c3e4:	add	r2, r0, #1
    c3e8:	str	r2, [r4, #12]
    c3ec:	strb	r1, [r0]
    c3f0:	ldrb	r0, [r5]
    c3f4:	cmp	r0, #0
    c3f8:	bne	c3b8 <copyEntityTable+0x280>
    c3fc:	ldr	r1, [r4, #16]
    c400:	ldr	r0, [r4, #12]
    c404:	cmp	r1, #0
    c408:	str	r0, [r4, #16]
    c40c:	beq	c490 <copyEntityTable+0x358>
    c410:	str	r1, [r9, #24]
    c414:	ldr	r5, [r8, #28]
    c418:	cmp	r5, #0
    c41c:	bne	c42c <copyEntityTable+0x2f4>
    c420:	b	c168 <copyEntityTable+0x30>
    c424:	ldr	r0, [r4, #12]
    c428:	add	r5, r5, #1
    c42c:	ldr	r1, [r4, #8]
    c430:	cmp	r0, r1
    c434:	bne	c44c <copyEntityTable+0x314>
    c438:	mov	r0, r4
    c43c:	bl	65e4 <poolGrow>
    c440:	cmp	r0, #0
    c444:	beq	c490 <copyEntityTable+0x358>
    c448:	ldr	r0, [r4, #12]
    c44c:	ldrb	r1, [r5]
    c450:	add	r2, r0, #1
    c454:	str	r2, [r4, #12]
    c458:	strb	r1, [r0]
    c45c:	ldrb	r0, [r5]
    c460:	cmp	r0, #0
    c464:	bne	c424 <copyEntityTable+0x2ec>
    c468:	ldr	r0, [r4, #16]
    c46c:	ldr	r1, [r4, #12]
    c470:	mov	r5, #0
    c474:	cmp	r0, #0
    c478:	str	r1, [r4, #16]
    c47c:	beq	c494 <copyEntityTable+0x35c>
    c480:	str	r0, [r9, #28]
    c484:	b	c168 <copyEntityTable+0x30>
    c488:	mov	r5, #1
    c48c:	b	c494 <copyEntityTable+0x35c>
    c490:	mov	r5, #0
    c494:	mov	r0, r5
    c498:	sub	sp, fp, #28
    c49c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
