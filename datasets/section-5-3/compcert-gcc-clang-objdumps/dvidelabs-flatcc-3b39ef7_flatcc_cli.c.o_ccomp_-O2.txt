
../repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	mov	r4, r0
  18:	ldr	r1, [pc, #64]	; 60 <usage+0x60>
  1c:	ldr	r2, [pc, #64]	; 64 <usage+0x64>
  20:	mov	r0, r4
  24:	bl	0 <fprintf>
  28:	ldr	r1, [pc, #64]	; 70 <usage+0x70>
  2c:	ldr	r2, [pc, #64]	; 74 <usage+0x74>
  30:	mov	r0, r4
  34:	bl	0 <fprintf>
  38:	ldr	r1, [pc, #44]	; 6c <usage+0x6c>
  3c:	mov	r0, r4
  40:	bl	0 <fprintf>
  44:	ldr	r1, [pc, #28]	; 68 <usage+0x68>
  48:	mov	r0, r4
  4c:	bl	0 <fprintf>
  50:	ldr	r4, [sp, #8]
  54:	ldr	lr, [sp, #4]
  58:	add	sp, sp, #16
  5c:	bx	lr
  60:	.word	0x000015e9
  64:	.word	0x00000fbc
  68:	.word	0x00001016
  6c:	.word	0x00000f74
  70:	.word	0x000000be
  74:	.word	0x00001629

00000078 <help>:
  78:	mov	ip, sp
  7c:	sub	sp, sp, #16
  80:	str	ip, [sp]
  84:	str	lr, [sp, #4]
  88:	str	r4, [sp, #8]
  8c:	mov	r4, r0
  90:	mov	r0, r4
  94:	bl	0 <usage>
  98:	ldr	r1, [pc, #20]	; b4 <help+0x3c>
  9c:	mov	r0, r4
  a0:	bl	0 <fprintf>
  a4:	ldr	r4, [sp, #8]
  a8:	ldr	lr, [sp, #4]
  ac:	add	sp, sp, #16
  b0:	bx	lr
  b4:	.word	0x00000274

000000b8 <parse_bool_arg>:
  b8:	mov	ip, sp
  bc:	sub	sp, sp, #16
  c0:	str	ip, [sp]
  c4:	str	lr, [sp, #4]
  c8:	str	r4, [sp, #8]
  cc:	mov	r4, r0
  d0:	ldr	r1, [pc, #132]	; 15c <parse_bool_arg+0xa4>
  d4:	mov	r0, r4
  d8:	bl	0 <strcmp>
  dc:	cmp	r0, #0
  e0:	beq	144 <parse_bool_arg+0x8c>
  e4:	ldr	r1, [pc, #124]	; 168 <parse_bool_arg+0xb0>
  e8:	mov	r0, r4
  ec:	bl	0 <strcmp>
  f0:	cmp	r0, #0
  f4:	beq	144 <parse_bool_arg+0x8c>
  f8:	ldr	r1, [pc, #100]	; 164 <parse_bool_arg+0xac>
  fc:	mov	r0, r4
 100:	bl	0 <strcmp>
 104:	cmp	r0, #0
 108:	beq	13c <parse_bool_arg+0x84>
 10c:	ldr	r1, [pc, #68]	; 158 <parse_bool_arg+0xa0>
 110:	mov	r0, r4
 114:	bl	0 <strcmp>
 118:	cmp	r0, #0
 11c:	beq	13c <parse_bool_arg+0x84>
 120:	ldr	r2, [pc, #56]	; 160 <parse_bool_arg+0xa8>
 124:	ldr	r0, [r2]
 128:	ldr	r1, [pc, #60]	; 16c <parse_bool_arg+0xb4>
 12c:	mov	r2, r4
 130:	bl	0 <fprintf>
 134:	mvn	r0, #0
 138:	b	148 <parse_bool_arg+0x90>
 13c:	mov	r0, #1
 140:	b	148 <parse_bool_arg+0x90>
 144:	mov	r0, #0
 148:	ldr	r4, [sp, #8]
 14c:	ldr	lr, [sp, #4]
 150:	add	sp, sp, #16
 154:	bx	lr
 158:	.word	0x000001bd
 15c:	.word	0x000015e5
 160:	.word	0x00000000
 164:	.word	0x000015e7
 168:	.word	0x0000002d
 16c:	.word	0x00000228

00000170 <match_long_arg>:
 170:	mov	ip, sp
 174:	sub	sp, sp, #16
 178:	str	ip, [sp]
 17c:	str	lr, [sp, #4]
 180:	str	r4, [sp, #8]
 184:	str	r5, [sp, #12]
 188:	mov	r4, r2
 18c:	mov	r5, r0
 190:	mov	r2, r4
 194:	mov	r0, r5
 198:	bl	0 <strncmp>
 19c:	cmp	r0, #0
 1a0:	bne	1bc <match_long_arg+0x4c>
 1a4:	mov	r0, r5
 1a8:	bl	0 <strlen>
 1ac:	cmp	r0, r4
 1b0:	moveq	r0, #1
 1b4:	movne	r0, #0
 1b8:	b	1c0 <match_long_arg+0x50>
 1bc:	mov	r0, #0
 1c0:	ldr	r4, [sp, #8]
 1c4:	ldr	r5, [sp, #12]
 1c8:	ldr	lr, [sp, #4]
 1cc:	add	sp, sp, #16
 1d0:	bx	lr

000001d4 <set_opt>:
 1d4:	mov	ip, sp
 1d8:	sub	sp, sp, #32
 1dc:	str	ip, [sp]
 1e0:	str	lr, [sp, #4]
 1e4:	str	r4, [sp, #8]
 1e8:	str	r5, [sp, #12]
 1ec:	str	r6, [sp, #16]
 1f0:	str	r7, [sp, #20]
 1f4:	str	r8, [sp, #24]
 1f8:	str	r9, [sp, #28]
 1fc:	mov	r8, r2
 200:	mov	r5, r1
 204:	mov	r7, r0
 208:	mov	r6, #0
 20c:	mov	r0, r5
 210:	bl	0 <strlen>
 214:	mov	r4, r0
 218:	mov	r1, #61	; 0x3d
 21c:	mov	r0, r5
 220:	bl	0 <strchr>
 224:	mov	r9, r0
 228:	cmp	r9, #0
 22c:	beq	238 <set_opt+0x64>
 230:	add	r8, r9, #1
 234:	sub	r4, r9, r5
 238:	ldrb	r0, [r5]
 23c:	cmp	r0, #104	; 0x68
 240:	beq	258 <set_opt+0x84>
 244:	ldr	r0, [pc, #1568]	; 86c <set_opt+0x698>
 248:	mov	r1, r5
 24c:	bl	0 <strcmp>
 250:	cmp	r0, #0
 254:	bne	26c <set_opt+0x98>
 258:	ldr	r2, [pc, #1588]	; 894 <set_opt+0x6c0>
 25c:	ldr	r0, [r2]
 260:	bl	78 <help>
 264:	mov	r0, #0
 268:	bl	0 <exit>
 26c:	ldr	r0, [pc, #1488]	; 844 <set_opt+0x670>
 270:	mov	r1, r5
 274:	bl	0 <strcmp>
 278:	cmp	r0, #0
 27c:	bne	2b0 <set_opt+0xdc>
 280:	ldr	ip, [pc, #1536]	; 888 <set_opt+0x6b4>
 284:	ldr	r0, [ip]
 288:	ldr	r1, [pc, #1428]	; 824 <set_opt+0x650>
 28c:	ldr	r2, [pc, #1428]	; 828 <set_opt+0x654>
 290:	bl	0 <fprintf>
 294:	ldr	r3, [pc, #1516]	; 888 <set_opt+0x6b4>
 298:	ldr	r0, [r3]
 29c:	ldr	r1, [pc, #1472]	; 864 <set_opt+0x690>
 2a0:	ldr	r2, [pc, #1520]	; 898 <set_opt+0x6c4>
 2a4:	bl	0 <fprintf>
 2a8:	mov	r0, #0
 2ac:	bl	0 <exit>
 2b0:	ldr	r0, [pc, #1432]	; 850 <set_opt+0x67c>
 2b4:	mov	r1, r5
 2b8:	bl	0 <strcmp>
 2bc:	cmp	r0, #0
 2c0:	bne	2d4 <set_opt+0x100>
 2c4:	mov	r3, #1
 2c8:	str	r3, [r7, #108]	; 0x6c
 2cc:	mov	r6, #0
 2d0:	b	7f0 <set_opt+0x61c>
 2d4:	ldr	r0, [pc, #1344]	; 81c <set_opt+0x648>
 2d8:	mov	r1, r5
 2dc:	bl	0 <strcmp>
 2e0:	cmp	r0, #0
 2e4:	bne	2f8 <set_opt+0x124>
 2e8:	mov	r1, #1
 2ec:	str	r1, [r7, #180]	; 0xb4
 2f0:	mov	r6, #0
 2f4:	b	7f0 <set_opt+0x61c>
 2f8:	ldr	r0, [pc, #1384]	; 868 <set_opt+0x694>
 2fc:	mov	r1, r5
 300:	bl	0 <strcmp>
 304:	cmp	r0, #0
 308:	bne	31c <set_opt+0x148>
 30c:	mov	ip, #1
 310:	str	ip, [r7, #164]	; 0xa4
 314:	mov	r6, #0
 318:	b	7f0 <set_opt+0x61c>
 31c:	ldr	r0, [pc, #1328]	; 854 <set_opt+0x680>
 320:	mov	r1, r5
 324:	bl	0 <strcmp>
 328:	cmp	r0, #0
 32c:	bne	340 <set_opt+0x16c>
 330:	mov	ip, #1
 334:	str	ip, [r7, #168]	; 0xa8
 338:	mov	r6, #0
 33c:	b	7f0 <set_opt+0x61c>
 340:	ldr	r0, [pc, #1352]	; 890 <set_opt+0x6bc>
 344:	mov	r1, r5
 348:	bl	0 <strcmp>
 34c:	cmp	r0, #0
 350:	bne	36c <set_opt+0x198>
 354:	mov	r0, #1
 358:	str	r0, [r7, #164]	; 0xa4
 35c:	mov	r2, #1
 360:	str	r2, [r7, #168]	; 0xa8
 364:	mov	r6, #0
 368:	b	7f0 <set_opt+0x61c>
 36c:	ldr	r0, [pc, #1220]	; 838 <set_opt+0x664>
 370:	mov	r2, r4
 374:	mov	r1, r5
 378:	bl	170 <match_long_arg>
 37c:	cmp	r0, #0
 380:	beq	3e8 <set_opt+0x214>
 384:	ldr	ip, [pc, #1276]	; 888 <set_opt+0x6b4>
 388:	ldr	r0, [ip]
 38c:	ldr	r1, [pc, #1248]	; 874 <set_opt+0x6a0>
 390:	bl	0 <fprintf>
 394:	cmp	r8, #0
 398:	bne	3b4 <set_opt+0x1e0>
 39c:	ldr	r2, [pc, #1252]	; 888 <set_opt+0x6b4>
 3a0:	ldr	r0, [r2]
 3a4:	ldr	r1, [pc, #1156]	; 830 <set_opt+0x65c>
 3a8:	bl	0 <fprintf>
 3ac:	mvn	r0, #0
 3b0:	bl	0 <exit>
 3b4:	mov	r0, r8
 3b8:	bl	b8 <parse_bool_arg>
 3bc:	str	r0, [r7, #184]	; 0xb8
 3c0:	cmp	r0, #0
 3c4:	bge	3d0 <set_opt+0x1fc>
 3c8:	mvn	r0, #0
 3cc:	bl	0 <exit>
 3d0:	mov	r2, #0
 3d4:	mov	ip, #2
 3d8:	cmp	r9, #0
 3dc:	movne	r6, r2
 3e0:	moveq	r6, ip
 3e4:	b	7f0 <set_opt+0x61c>
 3e8:	ldr	r0, [pc, #1152]	; 870 <set_opt+0x69c>
 3ec:	mov	r2, r4
 3f0:	mov	r1, r5
 3f4:	bl	170 <match_long_arg>
 3f8:	cmp	r0, #0
 3fc:	beq	454 <set_opt+0x280>
 400:	cmp	r8, #0
 404:	bne	420 <set_opt+0x24c>
 408:	ldr	r0, [pc, #1144]	; 888 <set_opt+0x6b4>
 40c:	ldr	r0, [r0]
 410:	ldr	r1, [pc, #1024]	; 818 <set_opt+0x644>
 414:	bl	0 <fprintf>
 418:	mvn	r0, #0
 41c:	bl	0 <exit>
 420:	mov	r0, r8
 424:	bl	b8 <parse_bool_arg>
 428:	str	r0, [r7, #188]	; 0xbc
 42c:	cmp	r0, #0
 430:	bge	43c <set_opt+0x268>
 434:	mvn	r0, #0
 438:	bl	0 <exit>
 43c:	mov	r3, #0
 440:	mov	ip, #2
 444:	cmp	r9, #0
 448:	movne	r6, r3
 44c:	moveq	r6, ip
 450:	b	7f0 <set_opt+0x61c>
 454:	ldr	r0, [pc, #1072]	; 88c <set_opt+0x6b8>
 458:	mov	r2, r4
 45c:	mov	r1, r5
 460:	bl	170 <match_long_arg>
 464:	cmp	r0, #0
 468:	beq	4b0 <set_opt+0x2dc>
 46c:	cmp	r8, #0
 470:	bne	48c <set_opt+0x2b8>
 474:	ldr	r1, [pc, #1036]	; 888 <set_opt+0x6b4>
 478:	ldr	r0, [r1]
 47c:	ldr	r1, [pc, #936]	; 82c <set_opt+0x658>
 480:	bl	0 <fprintf>
 484:	mvn	r0, #0
 488:	bl	0 <exit>
 48c:	str	r8, [r7, #116]	; 0x74
 490:	mov	ip, #1
 494:	str	ip, [r7, #112]	; 0x70
 498:	mov	ip, #0
 49c:	mov	r3, #2
 4a0:	cmp	r9, #0
 4a4:	movne	r6, ip
 4a8:	moveq	r6, r3
 4ac:	b	7f0 <set_opt+0x61c>
 4b0:	ldr	r0, [pc, #964]	; 87c <set_opt+0x6a8>
 4b4:	mov	r2, r4
 4b8:	mov	r1, r5
 4bc:	bl	170 <match_long_arg>
 4c0:	cmp	r0, #0
 4c4:	beq	504 <set_opt+0x330>
 4c8:	cmp	r8, #0
 4cc:	bne	4e8 <set_opt+0x314>
 4d0:	ldr	r2, [pc, #944]	; 888 <set_opt+0x6b4>
 4d4:	ldr	r0, [r2]
 4d8:	ldr	r1, [pc, #896]	; 860 <set_opt+0x68c>
 4dc:	bl	0 <fprintf>
 4e0:	mvn	r0, #0
 4e4:	bl	0 <exit>
 4e8:	str	r8, [r7, #120]	; 0x78
 4ec:	mov	r0, #0
 4f0:	mov	r1, #2
 4f4:	cmp	r9, #0
 4f8:	movne	r6, r0
 4fc:	moveq	r6, r1
 500:	b	7f0 <set_opt+0x61c>
 504:	ldr	r0, [pc, #832]	; 84c <set_opt+0x678>
 508:	mov	r2, r4
 50c:	mov	r1, r5
 510:	bl	170 <match_long_arg>
 514:	cmp	r0, #0
 518:	beq	558 <set_opt+0x384>
 51c:	cmp	r8, #0
 520:	bne	53c <set_opt+0x368>
 524:	ldr	ip, [pc, #860]	; 888 <set_opt+0x6b4>
 528:	ldr	r0, [ip]
 52c:	ldr	r1, [pc, #808]	; 85c <set_opt+0x688>
 530:	bl	0 <fprintf>
 534:	mvn	r0, #0
 538:	bl	0 <exit>
 53c:	str	r8, [r7, #124]	; 0x7c
 540:	mov	r0, #0
 544:	mov	r3, #2
 548:	cmp	r9, #0
 54c:	movne	r6, r0
 550:	moveq	r6, r3
 554:	b	7f0 <set_opt+0x61c>
 558:	ldr	r0, [pc, #800]	; 880 <set_opt+0x6ac>
 55c:	mov	r2, r4
 560:	mov	r1, r5
 564:	bl	170 <match_long_arg>
 568:	cmp	r0, #0
 56c:	beq	5ac <set_opt+0x3d8>
 570:	cmp	r8, #0
 574:	bne	590 <set_opt+0x3bc>
 578:	ldr	r1, [pc, #776]	; 888 <set_opt+0x6b4>
 57c:	ldr	r0, [r1]
 580:	ldr	r1, [pc, #752]	; 878 <set_opt+0x6a4>
 584:	bl	0 <fprintf>
 588:	mvn	r0, #0
 58c:	bl	0 <exit>
 590:	str	r8, [r7, #196]	; 0xc4
 594:	mov	r2, #0
 598:	mov	r3, #2
 59c:	cmp	r9, #0
 5a0:	movne	r6, r2
 5a4:	moveq	r6, r3
 5a8:	b	7f0 <set_opt+0x61c>
 5ac:	ldr	r0, [pc, #720]	; 884 <set_opt+0x6b0>
 5b0:	mov	r2, r4
 5b4:	mov	r1, r5
 5b8:	bl	170 <match_long_arg>
 5bc:	cmp	r0, #0
 5c0:	beq	600 <set_opt+0x42c>
 5c4:	cmp	r8, #0
 5c8:	bne	5e4 <set_opt+0x410>
 5cc:	ldr	ip, [pc, #692]	; 888 <set_opt+0x6b4>
 5d0:	ldr	r0, [ip]
 5d4:	ldr	r1, [pc, #620]	; 848 <set_opt+0x674>
 5d8:	bl	0 <fprintf>
 5dc:	mvn	r0, #0
 5e0:	bl	0 <exit>
 5e4:	str	r8, [r7, #192]	; 0xc0
 5e8:	mov	r0, #0
 5ec:	mov	r1, #2
 5f0:	cmp	r9, #0
 5f4:	movne	r6, r0
 5f8:	moveq	r6, r1
 5fc:	b	7f0 <set_opt+0x61c>
 600:	ldrb	r2, [r5]
 604:	cmp	r2, #100	; 0x64
 608:	bcs	6f4 <set_opt+0x520>
 60c:	cmp	r2, #97	; 0x61
 610:	bcs	69c <set_opt+0x4c8>
 614:	cmp	r2, #45	; 0x2d
 618:	beq	628 <set_opt+0x454>
 61c:	cmp	r2, #73	; 0x49
 620:	beq	644 <set_opt+0x470>
 624:	b	7b0 <set_opt+0x5dc>
 628:	ldr	r0, [pc, #600]	; 888 <set_opt+0x6b4>
 62c:	ldr	r0, [r0]
 630:	ldr	r1, [pc, #508]	; 834 <set_opt+0x660>
 634:	mov	r2, r5
 638:	bl	0 <fprintf>
 63c:	mvn	r0, #0
 640:	bl	0 <exit>
 644:	ldrb	ip, [r5, #1]
 648:	cmp	ip, #0
 64c:	bne	67c <set_opt+0x4a8>
 650:	cmp	r8, #0
 654:	bne	674 <set_opt+0x4a0>
 658:	ldr	r0, [pc, #552]	; 888 <set_opt+0x6b4>
 65c:	ldr	r0, [r0]
 660:	ldr	r1, [pc, #468]	; 83c <set_opt+0x668>
 664:	bl	0 <fprintf>
 668:	mvn	r0, #0
 66c:	bl	0 <exit>
 670:	b	684 <set_opt+0x4b0>
 674:	mov	r6, #2
 678:	b	684 <set_opt+0x4b0>
 67c:	mov	r6, #1
 680:	add	r8, r5, #1
 684:	ldr	r0, [r7, #208]	; 0xd0
 688:	add	ip, r0, #1
 68c:	str	ip, [r7, #208]	; 0xd0
 690:	ldr	r1, [r7, #200]	; 0xc8
 694:	str	r8, [r1, r0, lsl #2]
 698:	b	7f0 <set_opt+0x61c>
 69c:	cmp	r2, #97	; 0x61
 6a0:	beq	6bc <set_opt+0x4e8>
 6a4:	cmp	r2, #99	; 0x63
 6a8:	bne	7b0 <set_opt+0x5dc>
 6ac:	mov	r2, #1
 6b0:	str	r2, [r7, #144]	; 0x90
 6b4:	mov	r6, #0
 6b8:	b	7f0 <set_opt+0x61c>
 6bc:	mov	r1, #1
 6c0:	str	r1, [r7, #152]	; 0x98
 6c4:	mov	r3, #1
 6c8:	str	r3, [r7, #156]	; 0x9c
 6cc:	mov	r0, #1
 6d0:	str	r0, [r7, #160]	; 0xa0
 6d4:	mov	r3, #1
 6d8:	str	r3, [r7, #144]	; 0x90
 6dc:	mov	r2, #1
 6e0:	str	r2, [r7, #148]	; 0x94
 6e4:	mov	r1, #1
 6e8:	str	r1, [r7, #172]	; 0xac
 6ec:	mov	r6, #0
 6f0:	b	7f0 <set_opt+0x61c>
 6f4:	cmp	r2, #114	; 0x72
 6f8:	bcs	788 <set_opt+0x5b4>
 6fc:	cmp	r2, #100	; 0x64
 700:	beq	778 <set_opt+0x5a4>
 704:	cmp	r2, #111	; 0x6f
 708:	bne	7b0 <set_opt+0x5dc>
 70c:	ldr	r2, [r7, #216]	; 0xd8
 710:	cmp	r2, #0
 714:	beq	730 <set_opt+0x55c>
 718:	ldr	r3, [pc, #360]	; 888 <set_opt+0x6b4>
 71c:	ldr	r0, [r3]
 720:	ldr	r1, [pc, #248]	; 820 <set_opt+0x64c>
 724:	bl	0 <fprintf>
 728:	mvn	r0, #0
 72c:	bl	0 <exit>
 730:	ldrb	r0, [r5, #1]
 734:	cmp	r0, #0
 738:	bne	768 <set_opt+0x594>
 73c:	cmp	r8, #0
 740:	bne	760 <set_opt+0x58c>
 744:	ldr	r0, [pc, #316]	; 888 <set_opt+0x6b4>
 748:	ldr	r0, [r0]
 74c:	ldr	r1, [pc, #260]	; 858 <set_opt+0x684>
 750:	bl	0 <fprintf>
 754:	mvn	r0, #0
 758:	bl	0 <exit>
 75c:	b	770 <set_opt+0x59c>
 760:	mov	r6, #2
 764:	b	770 <set_opt+0x59c>
 768:	mov	r6, #1
 76c:	add	r8, r5, #1
 770:	str	r8, [r7, #216]	; 0xd8
 774:	b	7f0 <set_opt+0x61c>
 778:	mov	r3, #1
 77c:	str	r3, [r7, #112]	; 0x70
 780:	mov	r6, #0
 784:	b	7f0 <set_opt+0x61c>
 788:	cmp	r2, #114	; 0x72
 78c:	beq	7e4 <set_opt+0x610>
 790:	cmp	r2, #118	; 0x76
 794:	beq	7d4 <set_opt+0x600>
 798:	cmp	r2, #119	; 0x77
 79c:	bne	7b0 <set_opt+0x5dc>
 7a0:	mov	ip, #1
 7a4:	str	ip, [r7, #156]	; 0x9c
 7a8:	mov	r6, #0
 7ac:	b	7f0 <set_opt+0x61c>
 7b0:	ldr	r1, [pc, #208]	; 888 <set_opt+0x6b4>
 7b4:	ldr	r0, [r1]
 7b8:	ldr	r1, [pc, #128]	; 840 <set_opt+0x66c>
 7bc:	ldrb	r2, [r5]
 7c0:	bl	0 <fprintf>
 7c4:	mvn	r0, #0
 7c8:	bl	0 <exit>
 7cc:	mov	r6, #0
 7d0:	b	7f0 <set_opt+0x61c>
 7d4:	mov	r1, #1
 7d8:	str	r1, [r7, #160]	; 0xa0
 7dc:	mov	r6, #0
 7e0:	b	7f0 <set_opt+0x61c>
 7e4:	mov	r3, #1
 7e8:	str	r3, [r7, #172]	; 0xac
 7ec:	mov	r6, #0
 7f0:	mov	r0, r6
 7f4:	ldr	r4, [sp, #8]
 7f8:	ldr	r5, [sp, #12]
 7fc:	ldr	r6, [sp, #16]
 800:	ldr	r7, [sp, #20]
 804:	ldr	r8, [sp, #24]
 808:	ldr	r9, [sp, #28]
 80c:	ldr	lr, [sp, #4]
 810:	add	sp, sp, #32
 814:	bx	lr
 818:	.word	0x00001646
 81c:	.word	0x0000016a
 820:	.word	0x00000ec8
 824:	.word	0x000015e9
 828:	.word	0x00000fbc
 82c:	.word	0x00000ff2
 830:	.word	0x00000000
 834:	.word	0x00000067
 838:	.word	0x00000f62
 83c:	.word	0x00000ef4
 840:	.word	0x000001e7
 844:	.word	0x00000161
 848:	.word	0x000000d3
 84c:	.word	0x000015f3
 850:	.word	0x0000162f
 854:	.word	0x00000f4b
 858:	.word	0x0000020b
 85c:	.word	0x00000f98
 860:	.word	0x000001c1
 864:	.word	0x000000be
 868:	.word	0x00000030
 86c:	.word	0x00000eee
 870:	.word	0x000001fc
 874:	.word	0x000000f0
 878:	.word	0x0000003d
 87c:	.word	0x00000269
 880:	.word	0x00001637
 884:	.word	0x000000cb
 888:	.word	0x00000000
 88c:	.word	0x00000f59
 890:	.word	0x000015ed
 894:	.word	0x00000000
 898:	.word	0x00001629

0000089c <get_opt>:
 89c:	mov	ip, sp
 8a0:	sub	sp, sp, #24
 8a4:	str	ip, [sp]
 8a8:	str	lr, [sp, #4]
 8ac:	str	r4, [sp, #8]
 8b0:	str	r5, [sp, #12]
 8b4:	str	r6, [sp, #16]
 8b8:	mov	r4, r2
 8bc:	mov	r5, r0
 8c0:	ldrb	r2, [r1, #1]
 8c4:	cmp	r2, #45	; 0x2d
 8c8:	bne	8ec <get_opt+0x50>
 8cc:	add	r1, r1, #1
 8d0:	mov	r2, r4
 8d4:	mov	r0, r5
 8d8:	bl	1d4 <set_opt>
 8dc:	cmp	r0, #2
 8e0:	moveq	r0, #1
 8e4:	movne	r0, #0
 8e8:	b	964 <get_opt+0xc8>
 8ec:	add	r6, r1, #1
 8f0:	ldrb	r1, [r6]
 8f4:	cmp	r1, #0
 8f8:	bne	914 <get_opt+0x78>
 8fc:	ldr	ip, [pc, #124]	; 980 <get_opt+0xe4>
 900:	ldr	r0, [ip]
 904:	ldr	r1, [pc, #112]	; 97c <get_opt+0xe0>
 908:	bl	0 <fprintf>
 90c:	mvn	r0, #0
 910:	bl	0 <exit>
 914:	ldrb	r1, [r6]
 918:	cmp	r1, #0
 91c:	beq	960 <get_opt+0xc4>
 920:	mov	r2, r4
 924:	mov	r1, r6
 928:	mov	r0, r5
 92c:	bl	1d4 <set_opt>
 930:	cmp	r0, #0
 934:	beq	958 <get_opt+0xbc>
 938:	cmp	r0, #1
 93c:	beq	950 <get_opt+0xb4>
 940:	cmp	r0, #2
 944:	bne	914 <get_opt+0x78>
 948:	mov	r0, #1
 94c:	b	964 <get_opt+0xc8>
 950:	mov	r0, #0
 954:	b	964 <get_opt+0xc8>
 958:	add	r6, r6, #1
 95c:	b	914 <get_opt+0x78>
 960:	mov	r0, #0
 964:	ldr	r4, [sp, #8]
 968:	ldr	r5, [sp, #12]
 96c:	ldr	r6, [sp, #16]
 970:	ldr	lr, [sp, #4]
 974:	add	sp, sp, #24
 978:	bx	lr
 97c:	.word	0x000001a4
 980:	.word	0x00000000

00000984 <parse_opts>:
 984:	mov	ip, sp
 988:	sub	sp, sp, #24
 98c:	str	ip, [sp]
 990:	str	lr, [sp, #4]
 994:	str	r4, [sp, #8]
 998:	str	r5, [sp, #12]
 99c:	str	r6, [sp, #16]
 9a0:	str	r7, [sp, #20]
 9a4:	mov	r4, r2
 9a8:	mov	r5, r1
 9ac:	mov	r6, r0
 9b0:	mov	r7, #1
 9b4:	cmp	r7, r6
 9b8:	bge	a1c <parse_opts+0x98>
 9bc:	ldr	r1, [r5, r7, lsl #2]
 9c0:	ldrb	r2, [r1]
 9c4:	cmp	r2, #45	; 0x2d
 9c8:	bne	9fc <parse_opts+0x78>
 9cc:	add	r2, r7, #1
 9d0:	cmp	r2, r6
 9d4:	bge	9e8 <parse_opts+0x64>
 9d8:	lsl	r2, r7, #2
 9dc:	add	r3, r5, r2
 9e0:	ldr	r2, [r3, #4]
 9e4:	b	9ec <parse_opts+0x68>
 9e8:	mov	r2, #0
 9ec:	mov	r0, r4
 9f0:	bl	89c <get_opt>
 9f4:	add	r7, r7, r0
 9f8:	b	a14 <parse_opts+0x90>
 9fc:	ldr	r1, [r4, #212]	; 0xd4
 a00:	add	r0, r1, #1
 a04:	str	r0, [r4, #212]	; 0xd4
 a08:	ldr	r0, [r4, #204]	; 0xcc
 a0c:	ldr	ip, [r5, r7, lsl #2]
 a10:	str	ip, [r0, r1, lsl #2]
 a14:	add	r7, r7, #1
 a18:	b	9b4 <parse_opts+0x30>
 a1c:	ldr	r4, [sp, #8]
 a20:	ldr	r5, [sp, #12]
 a24:	ldr	r6, [sp, #16]
 a28:	ldr	r7, [sp, #20]
 a2c:	ldr	lr, [sp, #4]
 a30:	add	sp, sp, #24
 a34:	bx	lr

00000a38 <main>:
 a38:	mov	ip, sp
 a3c:	sub	sp, sp, #248	; 0xf8
 a40:	str	ip, [sp]
 a44:	str	lr, [sp, #4]
 a48:	str	r4, [sp, #8]
 a4c:	str	r5, [sp, #12]
 a50:	str	r6, [sp, #16]
 a54:	str	r7, [sp, #20]
 a58:	mov	r7, r1
 a5c:	mov	r6, r0
 a60:	mov	r4, #0
 a64:	mov	r5, #0
 a68:	cmp	r6, #2
 a6c:	bge	a84 <main+0x4c>
 a70:	ldr	ip, [pc, #876]	; de4 <main+0x3ac>
 a74:	ldr	r0, [ip]
 a78:	bl	0 <usage>
 a7c:	mvn	r0, #0
 a80:	bl	0 <exit>
 a84:	add	r0, sp, #24
 a88:	bl	0 <flatcc_init_options>
 a8c:	lsl	r0, r6, #2
 a90:	bl	0 <malloc>
 a94:	str	r0, [sp, #224]	; 0xe0
 a98:	cmp	r0, #0
 a9c:	bne	ab8 <main+0x80>
 aa0:	ldr	r1, [pc, #828]	; de4 <main+0x3ac>
 aa4:	ldr	r0, [r1]
 aa8:	ldr	r1, [pc, #832]	; df0 <main+0x3b8>
 aac:	bl	0 <fprintf>
 ab0:	mvn	r0, #0
 ab4:	bl	0 <exit>
 ab8:	lsl	r0, r6, #2
 abc:	bl	0 <malloc>
 ac0:	str	r0, [sp, #228]	; 0xe4
 ac4:	cmp	r0, #0
 ac8:	bne	aec <main+0xb4>
 acc:	ldr	r2, [pc, #784]	; de4 <main+0x3ac>
 ad0:	ldr	r0, [r2]
 ad4:	ldr	r1, [pc, #788]	; df0 <main+0x3b8>
 ad8:	bl	0 <fprintf>
 adc:	ldr	r0, [sp, #224]	; 0xe0
 ae0:	bl	0 <free>
 ae4:	mvn	r0, #0
 ae8:	bl	0 <exit>
 aec:	add	r2, sp, #24
 af0:	mov	r1, r7
 af4:	mov	r0, r6
 af8:	bl	984 <parse_opts>
 afc:	ldr	ip, [sp, #180]	; 0xb4
 b00:	cmp	ip, #0
 b04:	beq	b1c <main+0xe4>
 b08:	ldr	r0, [sp, #168]	; 0xa8
 b0c:	cmp	r0, #0
 b10:	movne	r0, #1
 b14:	moveq	r0, #0
 b18:	b	b20 <main+0xe8>
 b1c:	mov	r0, #0
 b20:	str	r0, [sp, #172]	; 0xac
 b24:	ldr	r2, [sp, #236]	; 0xec
 b28:	cmp	r2, #0
 b2c:	bne	bac <main+0x174>
 b30:	ldr	r1, [sp, #168]	; 0xa8
 b34:	cmp	r1, #0
 b38:	beq	b98 <main+0x160>
 b3c:	ldr	r0, [sp, #204]	; 0xcc
 b40:	cmp	r0, #0
 b44:	bne	b98 <main+0x160>
 b48:	add	r0, sp, #24
 b4c:	mov	r1, #0
 b50:	mov	r2, #0
 b54:	mov	r3, #0
 b58:	bl	0 <flatcc_create_context>
 b5c:	mov	r4, r0
 b60:	cmp	r4, #0
 b64:	bne	b7c <main+0x144>
 b68:	ldr	ip, [pc, #628]	; de4 <main+0x3ac>
 b6c:	ldr	r0, [ip]
 b70:	ldr	r1, [pc, #636]	; df4 <main+0x3bc>
 b74:	bl	0 <fprintf>
 b78:	b	d7c <main+0x344>
 b7c:	mov	r0, r4
 b80:	bl	0 <flatcc_generate_files>
 b84:	cmp	r0, #0
 b88:	bne	d7c <main+0x344>
 b8c:	mov	r0, r4
 b90:	bl	0 <flatcc_destroy_context>
 b94:	b	da8 <main+0x370>
 b98:	ldr	r1, [pc, #580]	; de4 <main+0x3ac>
 b9c:	ldr	r0, [r1]
 ba0:	ldr	r1, [pc, #568]	; de0 <main+0x3a8>
 ba4:	bl	0 <fprintf>
 ba8:	b	d7c <main+0x344>
 bac:	ldr	r1, [sp, #176]	; 0xb0
 bb0:	cmp	r1, #0
 bb4:	bne	c04 <main+0x1cc>
 bb8:	ldr	r2, [sp, #180]	; 0xb4
 bbc:	cmp	r2, #0
 bc0:	bne	c04 <main+0x1cc>
 bc4:	ldr	r1, [sp, #184]	; 0xb8
 bc8:	cmp	r1, #0
 bcc:	bne	c04 <main+0x1cc>
 bd0:	ldr	ip, [sp, #168]	; 0xa8
 bd4:	cmp	ip, #0
 bd8:	bne	c04 <main+0x1cc>
 bdc:	cmp	r0, #0
 be0:	bne	c04 <main+0x1cc>
 be4:	ldr	r1, [sp, #188]	; 0xbc
 be8:	cmp	r1, #0
 bec:	bne	c04 <main+0x1cc>
 bf0:	ldr	r2, [sp, #192]	; 0xc0
 bf4:	cmp	r2, #0
 bf8:	movne	r1, #1
 bfc:	moveq	r1, #0
 c00:	b	c08 <main+0x1d0>
 c04:	mov	r1, #1
 c08:	ldr	r2, [sp, #204]	; 0xcc
 c0c:	cmp	r2, #0
 c10:	bne	c3c <main+0x204>
 c14:	cmp	r1, #0
 c18:	beq	c34 <main+0x1fc>
 c1c:	ldr	ip, [sp, #180]	; 0xb4
 c20:	cmp	ip, #0
 c24:	bne	c34 <main+0x1fc>
 c28:	ldr	r3, [sp, #184]	; 0xb8
 c2c:	cmp	r3, #0
 c30:	beq	c3c <main+0x204>
 c34:	mov	r0, #1
 c38:	str	r0, [sp, #176]	; 0xb0
 c3c:	mov	r3, #0
 c40:	ldr	r0, [sp, #204]	; 0xcc
 c44:	cmp	r0, #0
 c48:	movne	r3, r1
 c4c:	moveq	r3, r3
 c50:	cmp	r3, #0
 c54:	beq	c98 <main+0x260>
 c58:	ldr	r1, [sp, #132]	; 0x84
 c5c:	cmp	r1, #0
 c60:	beq	c78 <main+0x240>
 c64:	ldr	r0, [pc, #376]	; de4 <main+0x3ac>
 c68:	ldr	r0, [r0]
 c6c:	ldr	r1, [pc, #376]	; dec <main+0x3b4>
 c70:	bl	0 <fprintf>
 c74:	b	d7c <main+0x344>
 c78:	ldr	r3, [sp, #148]	; 0x94
 c7c:	cmp	r3, #0
 c80:	beq	c98 <main+0x260>
 c84:	ldr	r2, [pc, #344]	; de4 <main+0x3ac>
 c88:	ldr	r0, [r2]
 c8c:	ldr	r1, [pc, #324]	; dd8 <main+0x3a0>
 c90:	bl	0 <fprintf>
 c94:	b	d7c <main+0x344>
 c98:	ldr	r1, [sp, #144]	; 0x90
 c9c:	cmp	r1, #0
 ca0:	beq	cc4 <main+0x28c>
 ca4:	ldr	r1, [sp, #140]	; 0x8c
 ca8:	cmp	r1, #0
 cac:	bne	cc4 <main+0x28c>
 cb0:	ldr	r1, [pc, #300]	; de4 <main+0x3ac>
 cb4:	ldr	r0, [r1]
 cb8:	ldr	r1, [pc, #296]	; de8 <main+0x3b0>
 cbc:	bl	0 <fprintf>
 cc0:	b	d7c <main+0x344>
 cc4:	ldr	r2, [sp, #132]	; 0x84
 cc8:	cmp	r2, #0
 ccc:	beq	cf0 <main+0x2b8>
 cd0:	ldr	r2, [sp, #148]	; 0x94
 cd4:	cmp	r2, #0
 cd8:	beq	cf0 <main+0x2b8>
 cdc:	ldr	r3, [pc, #256]	; de4 <main+0x3ac>
 ce0:	ldr	r0, [r3]
 ce4:	ldr	r1, [pc, #268]	; df8 <main+0x3c0>
 ce8:	bl	0 <fprintf>
 cec:	b	d7c <main+0x344>
 cf0:	mov	r7, #0
 cf4:	ldr	r6, [sp, #228]	; 0xe4
 cf8:	ldr	r3, [sp, #236]	; 0xec
 cfc:	cmp	r7, r3
 d00:	bge	d80 <main+0x348>
 d04:	add	r0, sp, #24
 d08:	ldr	r1, [r6]
 d0c:	mov	r2, #0
 d10:	mov	r3, #0
 d14:	bl	0 <flatcc_create_context>
 d18:	mov	r4, r0
 d1c:	cmp	r4, #0
 d20:	bne	d38 <main+0x300>
 d24:	ldr	r3, [pc, #184]	; de4 <main+0x3ac>
 d28:	ldr	r0, [r3]
 d2c:	ldr	r1, [pc, #192]	; df4 <main+0x3bc>
 d30:	bl	0 <fprintf>
 d34:	b	d7c <main+0x344>
 d38:	ldr	r1, [r6]
 d3c:	mov	r0, r4
 d40:	bl	0 <flatcc_parse_file>
 d44:	cmp	r0, #0
 d48:	bne	d7c <main+0x344>
 d4c:	mov	r0, r4
 d50:	bl	0 <flatcc_generate_files>
 d54:	cmp	r0, #0
 d58:	bne	d7c <main+0x344>
 d5c:	mov	r0, r4
 d60:	bl	0 <flatcc_destroy_context>
 d64:	mov	r4, #0
 d68:	mov	r0, #1
 d6c:	str	r0, [sp, #152]	; 0x98
 d70:	add	r7, r7, #1
 d74:	add	r6, r6, #4
 d78:	b	cf8 <main+0x2c0>
 d7c:	mvn	r5, #0
 d80:	cmp	r4, #0
 d84:	beq	d90 <main+0x358>
 d88:	mov	r0, r4
 d8c:	bl	0 <flatcc_destroy_context>
 d90:	cmp	r5, #0
 d94:	beq	da8 <main+0x370>
 d98:	ldr	r3, [pc, #68]	; de4 <main+0x3ac>
 d9c:	ldr	r0, [r3]
 da0:	ldr	r1, [pc, #52]	; ddc <main+0x3a4>
 da4:	bl	0 <fprintf>
 da8:	ldr	r0, [sp, #224]	; 0xe0
 dac:	bl	0 <free>
 db0:	ldr	r0, [sp, #228]	; 0xe4
 db4:	bl	0 <free>
 db8:	mov	r0, r5
 dbc:	ldr	r4, [sp, #8]
 dc0:	ldr	r5, [sp, #12]
 dc4:	ldr	r6, [sp, #16]
 dc8:	ldr	r7, [sp, #20]
 dcc:	ldr	lr, [sp, #4]
 dd0:	add	sp, sp, #248	; 0xf8
 dd4:	bx	lr
 dd8:	.word	0x00001598
 ddc:	.word	0x00000eb9
 de0:	.word	0x000015d3
 de4:	.word	0x00000000
 de8:	.word	0x000015fc
 dec:	.word	0x00000f11
 df0:	.word	0x000000a3
 df4:	.word	0x00000172
 df8:	.word	0x0000007c
