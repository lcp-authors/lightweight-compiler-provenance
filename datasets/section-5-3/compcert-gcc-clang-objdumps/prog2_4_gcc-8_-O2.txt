
../compcert-repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010960 <.init>:
   10960:	push	{r3, lr}
   10964:	bl	10b04 <_start@@Base+0x3c>
   10968:	pop	{r3, pc}

Disassembly of section .plt:

0001096c <strcmp@plt-0x14>:
   1096c:	push	{lr}		; (str lr, [sp, #-4]!)
   10970:	ldr	lr, [pc, #4]	; 1097c <strcmp@plt-0x4>
   10974:	add	lr, pc, lr
   10978:	ldr	pc, [lr, #8]!
   1097c:	andeq	r2, r1, r4, lsl #13

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1668]!	; 0x684

0001098c <printf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1660]!	; 0x67c

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1652]!	; 0x674

000109a4 <memcpy@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1644]!	; 0x66c

000109b0 <strdup@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1636]!	; 0x664

000109bc <strcpy@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1628]!	; 0x65c

000109c8 <puts@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1620]!	; 0x654

000109d4 <malloc@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1612]!	; 0x64c

000109e0 <__libc_start_main@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1604]!	; 0x644

000109ec <__gmon_start__@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1596]!	; 0x63c

000109f8 <strlen@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1588]!	; 0x634

00010a04 <setvbuf@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1580]!	; 0x62c

00010a10 <putchar@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1572]!	; 0x624

00010a1c <abort@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00010a28 <main@@Base>:
   10a28:	mov	r3, #0
   10a2c:	movw	r1, #12372	; 0x3054
   10a30:	movt	r1, #2
   10a34:	mov	r2, #2
   10a38:	str	r4, [sp, #-8]!
   10a3c:	ldr	r0, [r1]
   10a40:	mov	r1, r3
   10a44:	str	lr, [sp, #4]
   10a48:	bl	10a04 <setvbuf@plt>
   10a4c:	mov	r3, #0
   10a50:	movw	r1, #12368	; 0x3050
   10a54:	movt	r1, #2
   10a58:	mov	r2, #2
   10a5c:	ldr	r0, [r1]
   10a60:	mov	r1, r3
   10a64:	bl	10a04 <setvbuf@plt>
   10a68:	bl	10cf4 <teste_lista_nova@@Base>
   10a6c:	mov	r4, r0
   10a70:	bl	10d88 <teste_lista_insere@@Base>
   10a74:	add	r4, r4, r0
   10a78:	bl	110fc <teste_lista_remove@@Base>
   10a7c:	add	r4, r4, r0
   10a80:	bl	112ac <teste_lista_pesquisa@@Base>
   10a84:	add	r4, r4, r0
   10a88:	bl	11444 <teste_lista_ordena@@Base>
   10a8c:	add	r4, r4, r0
   10a90:	bl	11648 <teste_lista_inverte@@Base>
   10a94:	adds	r1, r4, r0
   10a98:	bne	10ab8 <main@@Base+0x90>
   10a9c:	movw	r0, #8728	; 0x2218
   10aa0:	movt	r0, #1
   10aa4:	bl	109c8 <puts@plt>
   10aa8:	ldr	r4, [sp]
   10aac:	add	sp, sp, #4
   10ab0:	mov	r0, #0
   10ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ab8:	movw	r0, #8752	; 0x2230
   10abc:	movt	r0, #1
   10ac0:	bl	1098c <printf@plt>
   10ac4:	b	10aa8 <main@@Base+0x80>

00010ac8 <_start@@Base>:
   10ac8:	mov	fp, #0
   10acc:	mov	lr, #0
   10ad0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad4:	mov	r2, sp
   10ad8:	push	{r2}		; (str r2, [sp, #-4]!)
   10adc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ae0:	ldr	ip, [pc, #16]	; 10af8 <_start@@Base+0x30>
   10ae4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae8:	ldr	r0, [pc, #12]	; 10afc <_start@@Base+0x34>
   10aec:	ldr	r3, [pc, #12]	; 10b00 <_start@@Base+0x38>
   10af0:	bl	109e0 <__libc_start_main@plt>
   10af4:	bl	10a1c <abort@plt>
   10af8:	andeq	r1, r1, r8, lsl #26
   10afc:	andeq	r0, r1, r8, lsr #20
   10b00:	andeq	r1, r1, r8, lsr #25
   10b04:	ldr	r3, [pc, #20]	; 10b20 <_start@@Base+0x58>
   10b08:	ldr	r2, [pc, #20]	; 10b24 <_start@@Base+0x5c>
   10b0c:	add	r3, pc, r3
   10b10:	ldr	r2, [r3, r2]
   10b14:	cmp	r2, #0
   10b18:	bxeq	lr
   10b1c:	b	109ec <__gmon_start__@plt>
   10b20:	andeq	r2, r1, ip, ror #9
   10b24:	andeq	r0, r0, r4, asr #32
   10b28:	ldr	r0, [pc, #24]	; 10b48 <_start@@Base+0x80>
   10b2c:	ldr	r3, [pc, #24]	; 10b4c <_start@@Base+0x84>
   10b30:	cmp	r3, r0
   10b34:	bxeq	lr
   10b38:	ldr	r3, [pc, #16]	; 10b50 <_start@@Base+0x88>
   10b3c:	cmp	r3, #0
   10b40:	bxeq	lr
   10b44:	bx	r3
   10b48:	andeq	r3, r2, r0, asr r0
   10b4c:	andeq	r3, r2, r0, asr r0
   10b50:	andeq	r0, r0, r0
   10b54:	ldr	r0, [pc, #36]	; 10b80 <_start@@Base+0xb8>
   10b58:	ldr	r1, [pc, #36]	; 10b84 <_start@@Base+0xbc>
   10b5c:	sub	r1, r1, r0
   10b60:	asr	r1, r1, #2
   10b64:	add	r1, r1, r1, lsr #31
   10b68:	asrs	r1, r1, #1
   10b6c:	bxeq	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <_start@@Base+0xc0>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r3, r2, r0, asr r0
   10b84:	andeq	r3, r2, r0, asr r0
   10b88:	andeq	r0, r0, r0
   10b8c:	push	{r4, lr}
   10b90:	ldr	r4, [pc, #24]	; 10bb0 <_start@@Base+0xe8>
   10b94:	ldrb	r3, [r4]
   10b98:	cmp	r3, #0
   10b9c:	popne	{r4, pc}
   10ba0:	bl	10b28 <_start@@Base+0x60>
   10ba4:	mov	r3, #1
   10ba8:	strb	r3, [r4]
   10bac:	pop	{r4, pc}
   10bb0:	andeq	r3, r2, r8, asr r0
   10bb4:	b	10b54 <_start@@Base+0x8c>

00010bb8 <_l@@Base>:
   10bb8:	push	{r0, r1, r2, r3}
   10bbc:	mov	r0, #12
   10bc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10bc4:	mov	r4, #0
   10bc8:	strd	r6, [sp, #8]
   10bcc:	str	r8, [sp, #16]
   10bd0:	str	lr, [sp, #20]
   10bd4:	sub	sp, sp, #8
   10bd8:	ldr	r7, [sp, #32]
   10bdc:	bl	109d4 <malloc@plt>
   10be0:	add	r3, sp, #36	; 0x24
   10be4:	mov	r8, r0
   10be8:	str	r4, [r0]
   10bec:	str	r3, [sp, #4]
   10bf0:	cmp	r7, r4
   10bf4:	stmib	r0, {r4, r7}
   10bf8:	bgt	10c38 <_l@@Base+0x80>
   10bfc:	b	10c68 <_l@@Base+0xb0>
   10c00:	bl	109d4 <malloc@plt>
   10c04:	str	r0, [r5, #4]
   10c08:	str	r5, [r0, #8]
   10c0c:	mov	r5, r0
   10c10:	mov	r0, r6
   10c14:	add	r4, r4, #1
   10c18:	bl	109f8 <strlen@plt>
   10c1c:	add	r0, r0, #1
   10c20:	bl	109d4 <malloc@plt>
   10c24:	mov	r1, r6
   10c28:	str	r0, [r5]
   10c2c:	bl	109bc <strcpy@plt>
   10c30:	cmp	r7, r4
   10c34:	beq	10c68 <_l@@Base+0xb0>
   10c38:	ldr	r3, [sp, #4]
   10c3c:	cmp	r4, #0
   10c40:	mov	r0, #12
   10c44:	add	r2, r3, #4
   10c48:	ldr	r6, [r3]
   10c4c:	str	r2, [sp, #4]
   10c50:	bne	10c00 <_l@@Base+0x48>
   10c54:	bl	109d4 <malloc@plt>
   10c58:	mov	r5, r0
   10c5c:	str	r0, [r8]
   10c60:	str	r4, [r0, #8]
   10c64:	b	10c10 <_l@@Base+0x58>
   10c68:	mov	r3, #0
   10c6c:	mov	r0, r8
   10c70:	str	r5, [r8, #4]
   10c74:	str	r3, [r5, #4]
   10c78:	add	sp, sp, #8
   10c7c:	ldrd	r4, [sp]
   10c80:	ldrd	r6, [sp, #8]
   10c84:	ldr	r8, [sp, #16]
   10c88:	ldr	lr, [sp, #20]
   10c8c:	add	sp, sp, #24
   10c90:	add	sp, sp, #16
   10c94:	bx	lr

00010c98 <_f@@Base>:
   10c98:	cmp	r0, #0
   10c9c:	beq	10ce8 <_f@@Base+0x50>
   10ca0:	ldr	r2, [r0]
   10ca4:	cmp	r1, #0
   10ca8:	movle	r3, #0
   10cac:	movgt	r3, #1
   10cb0:	cmp	r2, #0
   10cb4:	moveq	r3, #0
   10cb8:	cmp	r3, #0
   10cbc:	beq	10cd8 <_f@@Base+0x40>
   10cc0:	mov	r3, #0
   10cc4:	ldr	r2, [r2, #4]
   10cc8:	add	r3, r3, #1
   10ccc:	cmp	r2, #0
   10cd0:	cmpne	r1, r3
   10cd4:	bgt	10cc4 <_f@@Base+0x2c>
   10cd8:	cmp	r1, r3
   10cdc:	movwne	r0, #8420	; 0x20e4
   10ce0:	movtne	r0, #1
   10ce4:	beq	10cec <_f@@Base+0x54>
   10ce8:	bx	lr
   10cec:	ldr	r0, [r2]
   10cf0:	bx	lr

00010cf4 <teste_lista_nova@@Base>:
   10cf4:	movw	r0, #7448	; 0x1d18
   10cf8:	movt	r0, #1
   10cfc:	strd	r4, [sp, #-16]!
   10d00:	str	r6, [sp, #8]
   10d04:	str	lr, [sp, #12]
   10d08:	bl	1098c <printf@plt>
   10d0c:	bl	11868 <lista_nova@@Base>
   10d10:	subs	r5, r0, #0
   10d14:	beq	10d6c <teste_lista_nova@@Base+0x78>
   10d18:	ldr	r4, [r5, #8]
   10d1c:	cmp	r4, #0
   10d20:	bne	10d48 <teste_lista_nova@@Base+0x54>
   10d24:	bl	11890 <lista_apaga@@Base>
   10d28:	movw	r0, #7488	; 0x1d40
   10d2c:	movt	r0, #1
   10d30:	bl	109c8 <puts@plt>
   10d34:	mov	r0, r4
   10d38:	ldrd	r4, [sp]
   10d3c:	ldr	r6, [sp, #8]
   10d40:	add	sp, sp, #12
   10d44:	pop	{pc}		; (ldr pc, [sp], #4)
   10d48:	movw	r0, #7492	; 0x1d44
   10d4c:	movt	r0, #1
   10d50:	bl	1098c <printf@plt>
   10d54:	mov	r0, r5
   10d58:	mov	r4, #1
   10d5c:	bl	11890 <lista_apaga@@Base>
   10d60:	mov	r0, #10
   10d64:	bl	10a10 <putchar@plt>
   10d68:	b	10d34 <teste_lista_nova@@Base+0x40>
   10d6c:	movw	r0, #7464	; 0x1d28
   10d70:	movt	r0, #1
   10d74:	bl	1098c <printf@plt>
   10d78:	mov	r0, #10
   10d7c:	mov	r4, #1
   10d80:	bl	10a10 <putchar@plt>
   10d84:	b	10d34 <teste_lista_nova@@Base+0x40>

00010d88 <teste_lista_insere@@Base>:
   10d88:	movw	r2, #7528	; 0x1d68
   10d8c:	movt	r2, #1
   10d90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10d94:	mov	r1, r2
   10d98:	mov	r0, #2
   10d9c:	strd	r6, [sp, #8]
   10da0:	str	r8, [sp, #16]
   10da4:	str	lr, [sp, #20]
   10da8:	bl	10bb8 <_l@@Base>
   10dac:	mov	r4, r0
   10db0:	movw	r0, #7532	; 0x1d6c
   10db4:	movt	r0, #1
   10db8:	bl	1098c <printf@plt>
   10dbc:	ldr	r3, [r4]
   10dc0:	mov	r0, r4
   10dc4:	movw	r1, #7552	; 0x1d80
   10dc8:	movt	r1, #1
   10dcc:	ldr	r2, [r3, #4]
   10dd0:	bl	1193c <lista_insere@@Base>
   10dd4:	cmp	r0, #0
   10dd8:	beq	11044 <teste_lista_insere@@Base+0x2bc>
   10ddc:	ldr	r3, [r4, #8]
   10de0:	cmp	r3, #3
   10de4:	moveq	r5, #0
   10de8:	bne	10eb0 <teste_lista_insere@@Base+0x128>
   10dec:	ldr	r6, [r4]
   10df0:	movw	r1, #7528	; 0x1d68
   10df4:	movt	r1, #1
   10df8:	ldr	r0, [r6]
   10dfc:	bl	10980 <strcmp@plt>
   10e00:	cmp	r0, #0
   10e04:	bne	10e24 <teste_lista_insere@@Base+0x9c>
   10e08:	ldr	r7, [r6, #4]
   10e0c:	movw	r1, #7552	; 0x1d80
   10e10:	movt	r1, #1
   10e14:	ldr	r0, [r7]
   10e18:	bl	10980 <strcmp@plt>
   10e1c:	cmp	r0, #0
   10e20:	beq	11004 <teste_lista_insere@@Base+0x27c>
   10e24:	movw	r0, #7604	; 0x1db4
   10e28:	movt	r0, #1
   10e2c:	bl	1098c <printf@plt>
   10e30:	ldr	r6, [r4]
   10e34:	add	r5, r5, #1
   10e38:	mov	r2, r6
   10e3c:	movw	r1, #7552	; 0x1d80
   10e40:	movt	r1, #1
   10e44:	mov	r0, r4
   10e48:	bl	1193c <lista_insere@@Base>
   10e4c:	ldr	r3, [r4]
   10e50:	cmp	r3, r0
   10e54:	beq	10e68 <teste_lista_insere@@Base+0xe0>
   10e58:	movw	r0, #7660	; 0x1dec
   10e5c:	movt	r0, #1
   10e60:	add	r5, r5, #1
   10e64:	bl	1098c <printf@plt>
   10e68:	ldr	r3, [r4, #8]
   10e6c:	cmp	r3, #4
   10e70:	beq	10ed0 <teste_lista_insere@@Base+0x148>
   10e74:	movw	r0, #7708	; 0x1e1c
   10e78:	movt	r0, #1
   10e7c:	bl	1098c <printf@plt>
   10e80:	ldr	r3, [r4, #8]
   10e84:	add	r5, r5, #1
   10e88:	cmp	r3, #4
   10e8c:	beq	10ed0 <teste_lista_insere@@Base+0x148>
   10e90:	mov	r0, #10
   10e94:	bl	10a10 <putchar@plt>
   10e98:	mov	r0, r5
   10e9c:	ldrd	r4, [sp]
   10ea0:	ldrd	r6, [sp, #8]
   10ea4:	ldr	r8, [sp, #16]
   10ea8:	add	sp, sp, #20
   10eac:	pop	{pc}		; (ldr pc, [sp], #4)
   10eb0:	mov	r5, #1
   10eb4:	movw	r0, #7888	; 0x1ed0
   10eb8:	movt	r0, #1
   10ebc:	bl	1098c <printf@plt>
   10ec0:	ldr	r3, [r4, #8]
   10ec4:	cmp	r3, #3
   10ec8:	beq	10dec <teste_lista_insere@@Base+0x64>
   10ecc:	b	10e90 <teste_lista_insere@@Base+0x108>
   10ed0:	ldr	r6, [r4]
   10ed4:	movw	r1, #7552	; 0x1d80
   10ed8:	movt	r1, #1
   10edc:	ldr	r0, [r6]
   10ee0:	bl	10980 <strcmp@plt>
   10ee4:	cmp	r0, #0
   10ee8:	bne	10f24 <teste_lista_insere@@Base+0x19c>
   10eec:	ldr	r6, [r6, #4]
   10ef0:	movw	r1, #7528	; 0x1d68
   10ef4:	movt	r1, #1
   10ef8:	ldr	r0, [r6]
   10efc:	bl	10980 <strcmp@plt>
   10f00:	cmp	r0, #0
   10f04:	bne	10f24 <teste_lista_insere@@Base+0x19c>
   10f08:	ldr	r6, [r6, #4]
   10f0c:	movw	r1, #7552	; 0x1d80
   10f10:	movt	r1, #1
   10f14:	ldr	r0, [r6]
   10f18:	bl	10980 <strcmp@plt>
   10f1c:	cmp	r0, #0
   10f20:	beq	110bc <teste_lista_insere@@Base+0x334>
   10f24:	movw	r0, #7604	; 0x1db4
   10f28:	movt	r0, #1
   10f2c:	add	r5, r5, #1
   10f30:	bl	1098c <printf@plt>
   10f34:	movw	r1, #7552	; 0x1d80
   10f38:	movt	r1, #1
   10f3c:	mov	r2, #0
   10f40:	mov	r0, r4
   10f44:	bl	1193c <lista_insere@@Base>
   10f48:	ldr	r3, [r4, #8]
   10f4c:	cmp	r3, #5
   10f50:	bne	11024 <teste_lista_insere@@Base+0x29c>
   10f54:	ldr	r3, [r4]
   10f58:	movw	r1, #7552	; 0x1d80
   10f5c:	movt	r1, #1
   10f60:	ldr	r3, [r3, #4]
   10f64:	ldr	r3, [r3, #4]
   10f68:	ldr	r3, [r3, #4]
   10f6c:	ldr	r3, [r3, #4]
   10f70:	ldr	r0, [r3]
   10f74:	bl	10980 <strcmp@plt>
   10f78:	cmp	r0, #0
   10f7c:	bne	110dc <teste_lista_insere@@Base+0x354>
   10f80:	mov	r0, r4
   10f84:	bl	11890 <lista_apaga@@Base>
   10f88:	bl	11868 <lista_nova@@Base>
   10f8c:	mov	r4, r0
   10f90:	movw	r1, #7552	; 0x1d80
   10f94:	movt	r1, #1
   10f98:	mov	r2, #0
   10f9c:	bl	1193c <lista_insere@@Base>
   10fa0:	ldr	r3, [r4, #8]
   10fa4:	cmp	r3, #1
   10fa8:	beq	1106c <teste_lista_insere@@Base+0x2e4>
   10fac:	movw	r0, #7828	; 0x1e94
   10fb0:	movt	r0, #1
   10fb4:	bl	1098c <printf@plt>
   10fb8:	mov	r0, r4
   10fbc:	add	r5, r5, #1
   10fc0:	bl	11914 <lista_tamanho@@Base>
   10fc4:	cmp	r0, #1
   10fc8:	bne	10e90 <teste_lista_insere@@Base+0x108>
   10fcc:	ldr	r3, [r4]
   10fd0:	movw	r1, #7552	; 0x1d80
   10fd4:	movt	r1, #1
   10fd8:	ldr	r0, [r3]
   10fdc:	bl	10980 <strcmp@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	110f0 <teste_lista_insere@@Base+0x368>
   10fe8:	movw	r0, #7604	; 0x1db4
   10fec:	movt	r0, #1
   10ff0:	bl	1098c <printf@plt>
   10ff4:	mov	r0, r4
   10ff8:	add	r5, r5, #1
   10ffc:	bl	11890 <lista_apaga@@Base>
   11000:	b	10e90 <teste_lista_insere@@Base+0x108>
   11004:	ldr	r3, [r7, #4]
   11008:	movw	r1, #7528	; 0x1d68
   1100c:	movt	r1, #1
   11010:	ldr	r0, [r3]
   11014:	bl	10980 <strcmp@plt>
   11018:	cmp	r0, #0
   1101c:	beq	10e38 <teste_lista_insere@@Base+0xb0>
   11020:	b	10e24 <teste_lista_insere@@Base+0x9c>
   11024:	movw	r0, #7768	; 0x1e58
   11028:	movt	r0, #1
   1102c:	bl	1098c <printf@plt>
   11030:	ldr	r3, [r4, #8]
   11034:	add	r5, r5, #1
   11038:	cmp	r3, #5
   1103c:	bne	10e90 <teste_lista_insere@@Base+0x108>
   11040:	b	10f54 <teste_lista_insere@@Base+0x1cc>
   11044:	movw	r0, #7560	; 0x1d88
   11048:	movt	r0, #1
   1104c:	bl	1098c <printf@plt>
   11050:	ldr	r3, [r4, #8]
   11054:	cmp	r3, #3
   11058:	bne	11064 <teste_lista_insere@@Base+0x2dc>
   1105c:	mov	r5, #1
   11060:	b	10dec <teste_lista_insere@@Base+0x64>
   11064:	mov	r5, #2
   11068:	b	10eb4 <teste_lista_insere@@Base+0x12c>
   1106c:	mov	r0, r4
   11070:	bl	11914 <lista_tamanho@@Base>
   11074:	cmp	r0, #1
   11078:	bne	110a0 <teste_lista_insere@@Base+0x318>
   1107c:	ldr	r3, [r4]
   11080:	movw	r1, #7552	; 0x1d80
   11084:	movt	r1, #1
   11088:	ldr	r0, [r3]
   1108c:	bl	10980 <strcmp@plt>
   11090:	cmp	r0, #0
   11094:	bne	10fe8 <teste_lista_insere@@Base+0x260>
   11098:	mov	r0, r4
   1109c:	bl	11890 <lista_apaga@@Base>
   110a0:	cmp	r5, #0
   110a4:	bne	10e90 <teste_lista_insere@@Base+0x108>
   110a8:	movw	r0, #7488	; 0x1d40
   110ac:	movt	r0, #1
   110b0:	bl	109c8 <puts@plt>
   110b4:	mov	r5, #0
   110b8:	b	10e98 <teste_lista_insere@@Base+0x110>
   110bc:	ldr	r3, [r6, #4]
   110c0:	movw	r1, #7528	; 0x1d68
   110c4:	movt	r1, #1
   110c8:	ldr	r0, [r3]
   110cc:	bl	10980 <strcmp@plt>
   110d0:	cmp	r0, #0
   110d4:	beq	10f34 <teste_lista_insere@@Base+0x1ac>
   110d8:	b	10f24 <teste_lista_insere@@Base+0x19c>
   110dc:	movw	r0, #7604	; 0x1db4
   110e0:	movt	r0, #1
   110e4:	add	r5, r5, #1
   110e8:	bl	1098c <printf@plt>
   110ec:	b	10f80 <teste_lista_insere@@Base+0x1f8>
   110f0:	mov	r0, r4
   110f4:	bl	11890 <lista_apaga@@Base>
   110f8:	b	10e90 <teste_lista_insere@@Base+0x108>

000110fc <teste_lista_remove@@Base>:
   110fc:	movw	r2, #7960	; 0x1f18
   11100:	movt	r2, #1
   11104:	strd	r4, [sp, #-16]!
   11108:	movw	r1, #7964	; 0x1f1c
   1110c:	movt	r1, #1
   11110:	str	r6, [sp, #8]
   11114:	str	lr, [sp, #12]
   11118:	sub	sp, sp, #8
   1111c:	movw	r3, #7948	; 0x1f0c
   11120:	movt	r3, #1
   11124:	mov	r0, #5
   11128:	stm	sp, {r1, r2}
   1112c:	movw	r2, #7952	; 0x1f10
   11130:	movt	r2, #1
   11134:	movw	r1, #7956	; 0x1f14
   11138:	movt	r1, #1
   1113c:	bl	10bb8 <_l@@Base>
   11140:	mov	r4, r0
   11144:	movw	r0, #7968	; 0x1f20
   11148:	movt	r0, #1
   1114c:	bl	1098c <printf@plt>
   11150:	ldr	r3, [r4]
   11154:	mov	r0, r4
   11158:	ldr	r3, [r3, #4]
   1115c:	ldr	r3, [r3, #4]
   11160:	ldr	r1, [r3, #4]
   11164:	bl	11a1c <lista_remove@@Base>
   11168:	ldr	r3, [r4, #4]
   1116c:	cmp	r3, r0
   11170:	moveq	r5, #0
   11174:	beq	11188 <teste_lista_remove@@Base+0x8c>
   11178:	movw	r0, #7988	; 0x1f34
   1117c:	movt	r0, #1
   11180:	mov	r5, #1
   11184:	bl	1098c <printf@plt>
   11188:	ldr	r3, [r4, #8]
   1118c:	cmp	r3, #4
   11190:	beq	111a4 <teste_lista_remove@@Base+0xa8>
   11194:	movw	r0, #8048	; 0x1f70
   11198:	movt	r0, #1
   1119c:	add	r5, r5, #1
   111a0:	bl	1098c <printf@plt>
   111a4:	ldr	r6, [r4]
   111a8:	movw	r1, #7956	; 0x1f14
   111ac:	movt	r1, #1
   111b0:	ldr	r0, [r6]
   111b4:	bl	10980 <strcmp@plt>
   111b8:	cmp	r0, #0
   111bc:	bne	111dc <teste_lista_remove@@Base+0xe0>
   111c0:	ldr	r6, [r6, #4]
   111c4:	movw	r1, #7952	; 0x1f10
   111c8:	movt	r1, #1
   111cc:	ldr	r0, [r6]
   111d0:	bl	10980 <strcmp@plt>
   111d4:	cmp	r0, #0
   111d8:	beq	11238 <teste_lista_remove@@Base+0x13c>
   111dc:	movw	r0, #8108	; 0x1fac
   111e0:	movt	r0, #1
   111e4:	bl	1098c <printf@plt>
   111e8:	mov	r1, #0
   111ec:	mov	r0, r4
   111f0:	bl	11a1c <lista_remove@@Base>
   111f4:	cmp	r0, #0
   111f8:	add	r5, r5, #1
   111fc:	beq	112a0 <teste_lista_remove@@Base+0x1a4>
   11200:	movw	r0, #8164	; 0x1fe4
   11204:	movt	r0, #1
   11208:	bl	1098c <printf@plt>
   1120c:	mov	r0, r4
   11210:	add	r5, r5, #1
   11214:	bl	11890 <lista_apaga@@Base>
   11218:	mov	r0, #10
   1121c:	bl	10a10 <putchar@plt>
   11220:	mov	r0, r5
   11224:	add	sp, sp, #8
   11228:	ldrd	r4, [sp]
   1122c:	ldr	r6, [sp, #8]
   11230:	add	sp, sp, #12
   11234:	pop	{pc}		; (ldr pc, [sp], #4)
   11238:	ldr	r6, [r6, #4]
   1123c:	movw	r1, #7948	; 0x1f0c
   11240:	movt	r1, #1
   11244:	ldr	r0, [r6]
   11248:	bl	10980 <strcmp@plt>
   1124c:	cmp	r0, #0
   11250:	bne	111dc <teste_lista_remove@@Base+0xe0>
   11254:	ldr	r3, [r6, #4]
   11258:	movw	r1, #7960	; 0x1f18
   1125c:	movt	r1, #1
   11260:	ldr	r0, [r3]
   11264:	bl	10980 <strcmp@plt>
   11268:	subs	r1, r0, #0
   1126c:	bne	111dc <teste_lista_remove@@Base+0xe0>
   11270:	mov	r0, r4
   11274:	bl	11a1c <lista_remove@@Base>
   11278:	cmp	r0, #0
   1127c:	bne	11200 <teste_lista_remove@@Base+0x104>
   11280:	mov	r0, r4
   11284:	bl	11890 <lista_apaga@@Base>
   11288:	cmp	r5, #0
   1128c:	bne	11218 <teste_lista_remove@@Base+0x11c>
   11290:	movw	r0, #7488	; 0x1d40
   11294:	movt	r0, #1
   11298:	bl	109c8 <puts@plt>
   1129c:	b	11220 <teste_lista_remove@@Base+0x124>
   112a0:	mov	r0, r4
   112a4:	bl	11890 <lista_apaga@@Base>
   112a8:	b	11218 <teste_lista_remove@@Base+0x11c>

000112ac <teste_lista_pesquisa@@Base>:
   112ac:	movw	ip, #7528	; 0x1d68
   112b0:	movt	ip, #1
   112b4:	strd	r4, [sp, #-12]!
   112b8:	movw	r5, #8216	; 0x2018
   112bc:	movt	r5, #1
   112c0:	str	lr, [sp, #8]
   112c4:	sub	sp, sp, #20
   112c8:	mov	r3, ip
   112cc:	mov	r2, ip
   112d0:	mov	r1, ip
   112d4:	mov	r0, #7
   112d8:	str	ip, [sp]
   112dc:	stmib	sp, {r5, ip}
   112e0:	str	ip, [sp, #12]
   112e4:	bl	10bb8 <_l@@Base>
   112e8:	mov	r4, r0
   112ec:	movw	r0, #8220	; 0x201c
   112f0:	movt	r0, #1
   112f4:	bl	1098c <printf@plt>
   112f8:	mov	r1, r5
   112fc:	mov	r0, r4
   11300:	mov	r2, #0
   11304:	bl	11aa8 <lista_pesquisa@@Base>
   11308:	ldr	r3, [r4]
   1130c:	ldr	r3, [r3, #4]
   11310:	ldr	r3, [r3, #4]
   11314:	ldr	r3, [r3, #4]
   11318:	ldr	r3, [r3, #4]
   1131c:	cmp	r3, r0
   11320:	moveq	r5, #0
   11324:	beq	11338 <teste_lista_pesquisa@@Base+0x8c>
   11328:	movw	r0, #8240	; 0x2030
   1132c:	movt	r0, #1
   11330:	mov	r5, #1
   11334:	bl	1098c <printf@plt>
   11338:	movw	r1, #8312	; 0x2078
   1133c:	movt	r1, #1
   11340:	mov	r2, #0
   11344:	mov	r0, r4
   11348:	bl	11aa8 <lista_pesquisa@@Base>
   1134c:	cmp	r0, #0
   11350:	beq	11364 <teste_lista_pesquisa@@Base+0xb8>
   11354:	movw	r0, #8320	; 0x2080
   11358:	movt	r0, #1
   1135c:	add	r5, r5, #1
   11360:	bl	1098c <printf@plt>
   11364:	movw	r1, #7528	; 0x1d68
   11368:	movt	r1, #1
   1136c:	mov	r2, #1
   11370:	mov	r0, r4
   11374:	bl	11aa8 <lista_pesquisa@@Base>
   11378:	ldr	r3, [r4]
   1137c:	ldr	r3, [r3, #4]
   11380:	ldr	r3, [r3, #4]
   11384:	ldr	r3, [r3, #4]
   11388:	ldr	r3, [r3, #4]
   1138c:	ldr	r3, [r3, #4]
   11390:	ldr	r3, [r3, #4]
   11394:	cmp	r3, r0
   11398:	beq	113fc <teste_lista_pesquisa@@Base+0x150>
   1139c:	movw	r0, #8240	; 0x2030
   113a0:	movt	r0, #1
   113a4:	bl	1098c <printf@plt>
   113a8:	movw	r1, #8312	; 0x2078
   113ac:	movt	r1, #1
   113b0:	mov	r2, #1
   113b4:	mov	r0, r4
   113b8:	bl	11aa8 <lista_pesquisa@@Base>
   113bc:	cmp	r0, #0
   113c0:	add	r5, r5, #1
   113c4:	beq	11438 <teste_lista_pesquisa@@Base+0x18c>
   113c8:	movw	r0, #8320	; 0x2080
   113cc:	movt	r0, #1
   113d0:	bl	1098c <printf@plt>
   113d4:	mov	r0, r4
   113d8:	add	r5, r5, #1
   113dc:	bl	11890 <lista_apaga@@Base>
   113e0:	mov	r0, #10
   113e4:	bl	10a10 <putchar@plt>
   113e8:	mov	r0, r5
   113ec:	add	sp, sp, #20
   113f0:	ldrd	r4, [sp]
   113f4:	add	sp, sp, #8
   113f8:	pop	{pc}		; (ldr pc, [sp], #4)
   113fc:	movw	r1, #8312	; 0x2078
   11400:	movt	r1, #1
   11404:	mov	r2, #1
   11408:	mov	r0, r4
   1140c:	bl	11aa8 <lista_pesquisa@@Base>
   11410:	cmp	r0, #0
   11414:	bne	113c8 <teste_lista_pesquisa@@Base+0x11c>
   11418:	mov	r0, r4
   1141c:	bl	11890 <lista_apaga@@Base>
   11420:	cmp	r5, #0
   11424:	bne	113e0 <teste_lista_pesquisa@@Base+0x134>
   11428:	movw	r0, #7488	; 0x1d40
   1142c:	movt	r0, #1
   11430:	bl	109c8 <puts@plt>
   11434:	b	113e8 <teste_lista_pesquisa@@Base+0x13c>
   11438:	mov	r0, r4
   1143c:	bl	11890 <lista_apaga@@Base>
   11440:	b	113e0 <teste_lista_pesquisa@@Base+0x134>

00011444 <teste_lista_ordena@@Base>:
   11444:	movw	r2, #8396	; 0x20cc
   11448:	movt	r2, #1
   1144c:	strd	r4, [sp, #-16]!
   11450:	movw	r1, #8400	; 0x20d0
   11454:	movt	r1, #1
   11458:	str	r6, [sp, #8]
   1145c:	str	lr, [sp, #12]
   11460:	sub	sp, sp, #8
   11464:	movw	r3, #8384	; 0x20c0
   11468:	movt	r3, #1
   1146c:	mov	r0, #5
   11470:	stm	sp, {r1, r2}
   11474:	movw	r2, #8388	; 0x20c4
   11478:	movt	r2, #1
   1147c:	movw	r1, #8392	; 0x20c8
   11480:	movt	r1, #1
   11484:	bl	10bb8 <_l@@Base>
   11488:	mov	r5, r0
   1148c:	movw	r0, #8404	; 0x20d4
   11490:	movt	r0, #1
   11494:	bl	1098c <printf@plt>
   11498:	mov	r0, #0
   1149c:	bl	11b60 <lista_ordena@@Base>
   114a0:	cmn	r0, #1
   114a4:	moveq	r4, #0
   114a8:	beq	114bc <teste_lista_ordena@@Base+0x78>
   114ac:	movw	r0, #8424	; 0x20e8
   114b0:	movt	r0, #1
   114b4:	mov	r4, #1
   114b8:	bl	1098c <printf@plt>
   114bc:	mov	r0, r5
   114c0:	bl	11b60 <lista_ordena@@Base>
   114c4:	ldr	r6, [r5]
   114c8:	movw	r1, #8392	; 0x20c8
   114cc:	movt	r1, #1
   114d0:	ldr	r0, [r6]
   114d4:	bl	10980 <strcmp@plt>
   114d8:	cmp	r0, #0
   114dc:	bne	114fc <teste_lista_ordena@@Base+0xb8>
   114e0:	ldr	r6, [r6, #4]
   114e4:	movw	r1, #8388	; 0x20c4
   114e8:	movt	r1, #1
   114ec:	ldr	r0, [r6]
   114f0:	bl	10980 <strcmp@plt>
   114f4:	cmp	r0, #0
   114f8:	beq	115f0 <teste_lista_ordena@@Base+0x1ac>
   114fc:	movw	r0, #8472	; 0x2118
   11500:	movt	r0, #1
   11504:	add	r4, r4, #1
   11508:	bl	1098c <printf@plt>
   1150c:	ldr	r6, [r5, #4]
   11510:	movw	r1, #8384	; 0x20c0
   11514:	movt	r1, #1
   11518:	ldr	r0, [r6]
   1151c:	bl	10980 <strcmp@plt>
   11520:	cmp	r0, #0
   11524:	bne	11544 <teste_lista_ordena@@Base+0x100>
   11528:	ldr	r6, [r6, #8]
   1152c:	movw	r1, #8396	; 0x20cc
   11530:	movt	r1, #1
   11534:	ldr	r0, [r6]
   11538:	bl	10980 <strcmp@plt>
   1153c:	cmp	r0, #0
   11540:	beq	1157c <teste_lista_ordena@@Base+0x138>
   11544:	movw	r0, #8536	; 0x2158
   11548:	movt	r0, #1
   1154c:	bl	1098c <printf@plt>
   11550:	mov	r0, r5
   11554:	add	r4, r4, #1
   11558:	bl	11890 <lista_apaga@@Base>
   1155c:	mov	r0, #10
   11560:	bl	10a10 <putchar@plt>
   11564:	mov	r0, r4
   11568:	add	sp, sp, #8
   1156c:	ldrd	r4, [sp]
   11570:	ldr	r6, [sp, #8]
   11574:	add	sp, sp, #12
   11578:	pop	{pc}		; (ldr pc, [sp], #4)
   1157c:	ldr	r6, [r6, #8]
   11580:	movw	r1, #8400	; 0x20d0
   11584:	movt	r1, #1
   11588:	ldr	r0, [r6]
   1158c:	bl	10980 <strcmp@plt>
   11590:	cmp	r0, #0
   11594:	bne	11544 <teste_lista_ordena@@Base+0x100>
   11598:	ldr	r6, [r6, #8]
   1159c:	movw	r1, #8388	; 0x20c4
   115a0:	movt	r1, #1
   115a4:	ldr	r0, [r6]
   115a8:	bl	10980 <strcmp@plt>
   115ac:	cmp	r0, #0
   115b0:	bne	11544 <teste_lista_ordena@@Base+0x100>
   115b4:	ldr	r3, [r6, #8]
   115b8:	movw	r1, #8392	; 0x20c8
   115bc:	movt	r1, #1
   115c0:	ldr	r0, [r3]
   115c4:	bl	10980 <strcmp@plt>
   115c8:	cmp	r0, #0
   115cc:	bne	11544 <teste_lista_ordena@@Base+0x100>
   115d0:	mov	r0, r5
   115d4:	bl	11890 <lista_apaga@@Base>
   115d8:	cmp	r4, #0
   115dc:	bne	1155c <teste_lista_ordena@@Base+0x118>
   115e0:	movw	r0, #7488	; 0x1d40
   115e4:	movt	r0, #1
   115e8:	bl	109c8 <puts@plt>
   115ec:	b	11564 <teste_lista_ordena@@Base+0x120>
   115f0:	ldr	r6, [r6, #4]
   115f4:	movw	r1, #8400	; 0x20d0
   115f8:	movt	r1, #1
   115fc:	ldr	r0, [r6]
   11600:	bl	10980 <strcmp@plt>
   11604:	cmp	r0, #0
   11608:	bne	114fc <teste_lista_ordena@@Base+0xb8>
   1160c:	ldr	r6, [r6, #4]
   11610:	movw	r1, #8396	; 0x20cc
   11614:	movt	r1, #1
   11618:	ldr	r0, [r6]
   1161c:	bl	10980 <strcmp@plt>
   11620:	cmp	r0, #0
   11624:	bne	114fc <teste_lista_ordena@@Base+0xb8>
   11628:	ldr	r3, [r6, #4]
   1162c:	movw	r1, #8384	; 0x20c0
   11630:	movt	r1, #1
   11634:	ldr	r0, [r3]
   11638:	bl	10980 <strcmp@plt>
   1163c:	cmp	r0, #0
   11640:	beq	1150c <teste_lista_ordena@@Base+0xc8>
   11644:	b	114fc <teste_lista_ordena@@Base+0xb8>

00011648 <teste_lista_inverte@@Base>:
   11648:	movw	r2, #8396	; 0x20cc
   1164c:	movt	r2, #1
   11650:	strd	r4, [sp, #-16]!
   11654:	movw	r1, #8400	; 0x20d0
   11658:	movt	r1, #1
   1165c:	str	r6, [sp, #8]
   11660:	str	lr, [sp, #12]
   11664:	sub	sp, sp, #8
   11668:	movw	r3, #8384	; 0x20c0
   1166c:	movt	r3, #1
   11670:	mov	r0, #5
   11674:	stm	sp, {r1, r2}
   11678:	movw	r2, #8388	; 0x20c4
   1167c:	movt	r2, #1
   11680:	movw	r1, #8392	; 0x20c8
   11684:	movt	r1, #1
   11688:	bl	10bb8 <_l@@Base>
   1168c:	mov	r5, r0
   11690:	movw	r0, #8600	; 0x2198
   11694:	movt	r0, #1
   11698:	bl	1098c <printf@plt>
   1169c:	mov	r0, #0
   116a0:	bl	11c0c <lista_inverte@@Base>
   116a4:	cmn	r0, #1
   116a8:	moveq	r4, #0
   116ac:	beq	116c0 <teste_lista_inverte@@Base+0x78>
   116b0:	movw	r0, #8424	; 0x20e8
   116b4:	movt	r0, #1
   116b8:	mov	r4, #1
   116bc:	bl	1098c <printf@plt>
   116c0:	mov	r0, r5
   116c4:	bl	11c0c <lista_inverte@@Base>
   116c8:	ldr	r3, [r5, #8]
   116cc:	cmp	r3, #5
   116d0:	beq	116e4 <teste_lista_inverte@@Base+0x9c>
   116d4:	movw	r0, #8620	; 0x21ac
   116d8:	movt	r0, #1
   116dc:	add	r4, r4, #1
   116e0:	bl	1098c <printf@plt>
   116e4:	ldr	r6, [r5]
   116e8:	movw	r1, #8396	; 0x20cc
   116ec:	movt	r1, #1
   116f0:	ldr	r0, [r6]
   116f4:	bl	10980 <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	bne	1171c <teste_lista_inverte@@Base+0xd4>
   11700:	ldr	r6, [r6, #4]
   11704:	movw	r1, #8400	; 0x20d0
   11708:	movt	r1, #1
   1170c:	ldr	r0, [r6]
   11710:	bl	10980 <strcmp@plt>
   11714:	cmp	r0, #0
   11718:	beq	11810 <teste_lista_inverte@@Base+0x1c8>
   1171c:	movw	r0, #8664	; 0x21d8
   11720:	movt	r0, #1
   11724:	add	r4, r4, #1
   11728:	bl	1098c <printf@plt>
   1172c:	ldr	r6, [r5, #4]
   11730:	movw	r1, #8392	; 0x20c8
   11734:	movt	r1, #1
   11738:	ldr	r0, [r6]
   1173c:	bl	10980 <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	bne	11764 <teste_lista_inverte@@Base+0x11c>
   11748:	ldr	r6, [r6, #8]
   1174c:	movw	r1, #8388	; 0x20c4
   11750:	movt	r1, #1
   11754:	ldr	r0, [r6]
   11758:	bl	10980 <strcmp@plt>
   1175c:	cmp	r0, #0
   11760:	beq	1179c <teste_lista_inverte@@Base+0x154>
   11764:	movw	r0, #8536	; 0x2158
   11768:	movt	r0, #1
   1176c:	bl	1098c <printf@plt>
   11770:	mov	r0, r5
   11774:	add	r4, r4, #1
   11778:	bl	11890 <lista_apaga@@Base>
   1177c:	mov	r0, #10
   11780:	bl	10a10 <putchar@plt>
   11784:	mov	r0, r4
   11788:	add	sp, sp, #8
   1178c:	ldrd	r4, [sp]
   11790:	ldr	r6, [sp, #8]
   11794:	add	sp, sp, #12
   11798:	pop	{pc}		; (ldr pc, [sp], #4)
   1179c:	ldr	r6, [r6, #8]
   117a0:	movw	r1, #8384	; 0x20c0
   117a4:	movt	r1, #1
   117a8:	ldr	r0, [r6]
   117ac:	bl	10980 <strcmp@plt>
   117b0:	cmp	r0, #0
   117b4:	bne	11764 <teste_lista_inverte@@Base+0x11c>
   117b8:	ldr	r6, [r6, #8]
   117bc:	movw	r1, #8400	; 0x20d0
   117c0:	movt	r1, #1
   117c4:	ldr	r0, [r6]
   117c8:	bl	10980 <strcmp@plt>
   117cc:	cmp	r0, #0
   117d0:	bne	11764 <teste_lista_inverte@@Base+0x11c>
   117d4:	ldr	r3, [r6, #8]
   117d8:	movw	r1, #8396	; 0x20cc
   117dc:	movt	r1, #1
   117e0:	ldr	r0, [r3]
   117e4:	bl	10980 <strcmp@plt>
   117e8:	cmp	r0, #0
   117ec:	bne	11764 <teste_lista_inverte@@Base+0x11c>
   117f0:	mov	r0, r5
   117f4:	bl	11890 <lista_apaga@@Base>
   117f8:	cmp	r4, #0
   117fc:	bne	1177c <teste_lista_inverte@@Base+0x134>
   11800:	movw	r0, #7488	; 0x1d40
   11804:	movt	r0, #1
   11808:	bl	109c8 <puts@plt>
   1180c:	b	11784 <teste_lista_inverte@@Base+0x13c>
   11810:	ldr	r6, [r6, #4]
   11814:	movw	r1, #8384	; 0x20c0
   11818:	movt	r1, #1
   1181c:	ldr	r0, [r6]
   11820:	bl	10980 <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	bne	1171c <teste_lista_inverte@@Base+0xd4>
   1182c:	ldr	r6, [r6, #4]
   11830:	movw	r1, #8388	; 0x20c4
   11834:	movt	r1, #1
   11838:	ldr	r0, [r6]
   1183c:	bl	10980 <strcmp@plt>
   11840:	cmp	r0, #0
   11844:	bne	1171c <teste_lista_inverte@@Base+0xd4>
   11848:	ldr	r3, [r6, #4]
   1184c:	movw	r1, #8392	; 0x20c8
   11850:	movt	r1, #1
   11854:	ldr	r0, [r3]
   11858:	bl	10980 <strcmp@plt>
   1185c:	cmp	r0, #0
   11860:	beq	1172c <teste_lista_inverte@@Base+0xe4>
   11864:	b	1171c <teste_lista_inverte@@Base+0xd4>

00011868 <lista_nova@@Base>:
   11868:	mov	r0, #12
   1186c:	str	r4, [sp, #-8]!
   11870:	str	lr, [sp, #4]
   11874:	bl	109d4 <malloc@plt>
   11878:	cmp	r0, #0
   1187c:	ldr	r4, [sp]
   11880:	add	sp, sp, #4
   11884:	movne	r3, #0
   11888:	strne	r3, [r0, #8]
   1188c:	pop	{pc}		; (ldr pc, [sp], #4)

00011890 <lista_apaga@@Base>:
   11890:	strd	r4, [sp, #-16]!
   11894:	str	r6, [sp, #8]
   11898:	subs	r6, r0, #0
   1189c:	str	lr, [sp, #12]
   118a0:	beq	11904 <lista_apaga@@Base+0x74>
   118a4:	ldr	r3, [r6, #8]
   118a8:	cmp	r3, #0
   118ac:	beq	118ec <lista_apaga@@Base+0x5c>
   118b0:	ldr	r5, [r6]
   118b4:	cmp	r5, #0
   118b8:	beq	118ec <lista_apaga@@Base+0x5c>
   118bc:	ldr	r4, [r5, #4]
   118c0:	cmp	r4, #0
   118c4:	bne	118d0 <lista_apaga@@Base+0x40>
   118c8:	b	118ec <lista_apaga@@Base+0x5c>
   118cc:	ldr	r4, [r4, #4]
   118d0:	ldr	r0, [r5]
   118d4:	bl	10998 <free@plt>
   118d8:	mov	r0, r5
   118dc:	mov	r5, r4
   118e0:	bl	10998 <free@plt>
   118e4:	cmp	r4, #0
   118e8:	bne	118cc <lista_apaga@@Base+0x3c>
   118ec:	mov	r0, r6
   118f0:	ldrd	r4, [sp]
   118f4:	ldr	r6, [sp, #8]
   118f8:	ldr	lr, [sp, #12]
   118fc:	add	sp, sp, #16
   11900:	b	10998 <free@plt>
   11904:	ldrd	r4, [sp]
   11908:	ldr	r6, [sp, #8]
   1190c:	add	sp, sp, #12
   11910:	pop	{pc}		; (ldr pc, [sp], #4)

00011914 <lista_tamanho@@Base>:
   11914:	cmp	r0, #0
   11918:	ldrne	r0, [r0, #8]
   1191c:	mvneq	r0, #0
   11920:	bx	lr

00011924 <lista_inicio@@Base>:
   11924:	cmp	r0, #0
   11928:	ldrne	r0, [r0]
   1192c:	bx	lr

00011930 <lista_fim@@Base>:
   11930:	cmp	r0, #0
   11934:	ldrne	r0, [r0, #4]
   11938:	bx	lr

0001193c <lista_insere@@Base>:
   1193c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11940:	subs	r5, r0, #0
   11944:	moveq	r4, r5
   11948:	strd	r6, [sp, #8]
   1194c:	str	r8, [sp, #16]
   11950:	str	lr, [sp, #20]
   11954:	beq	119cc <lista_insere@@Base+0x90>
   11958:	mov	r0, #12
   1195c:	mov	r6, r1
   11960:	mov	r7, r2
   11964:	bl	109d4 <malloc@plt>
   11968:	mov	r4, r0
   1196c:	mov	r0, r6
   11970:	bl	109f8 <strlen@plt>
   11974:	add	r8, r0, #1
   11978:	mov	r0, r8
   1197c:	bl	109d4 <malloc@plt>
   11980:	mov	r2, r8
   11984:	mov	r1, r6
   11988:	str	r0, [r4]
   1198c:	bl	109a4 <memcpy@plt>
   11990:	ldr	r3, [r5, #8]
   11994:	cmp	r3, #0
   11998:	beq	119e4 <lista_insere@@Base+0xa8>
   1199c:	cmp	r7, #0
   119a0:	beq	119f8 <lista_insere@@Base+0xbc>
   119a4:	ldr	r2, [r5]
   119a8:	cmp	r2, r7
   119ac:	beq	11a10 <lista_insere@@Base+0xd4>
   119b0:	ldr	r2, [r7, #8]
   119b4:	str	r4, [r2, #4]
   119b8:	str	r7, [r4, #4]
   119bc:	str	r2, [r4, #8]
   119c0:	str	r4, [r7, #8]
   119c4:	add	r3, r3, #1
   119c8:	str	r3, [r5, #8]
   119cc:	mov	r0, r4
   119d0:	ldrd	r4, [sp]
   119d4:	ldrd	r6, [sp, #8]
   119d8:	ldr	r8, [sp, #16]
   119dc:	add	sp, sp, #20
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)
   119e4:	str	r4, [r5]
   119e8:	str	r3, [r4, #4]
   119ec:	str	r4, [r5, #4]
   119f0:	str	r3, [r4, #8]
   119f4:	b	119c4 <lista_insere@@Base+0x88>
   119f8:	ldr	r2, [r5, #4]
   119fc:	str	r7, [r4, #4]
   11a00:	str	r2, [r4, #8]
   11a04:	str	r4, [r2, #4]
   11a08:	str	r4, [r5, #4]
   11a0c:	b	119c4 <lista_insere@@Base+0x88>
   11a10:	str	r4, [r5]
   11a14:	stmib	r4, {r2, r4}
   11a18:	b	119c4 <lista_insere@@Base+0x88>

00011a1c <lista_remove@@Base>:
   11a1c:	strd	r4, [sp, #-16]!
   11a20:	subs	r4, r1, #0
   11a24:	str	r6, [sp, #8]
   11a28:	str	lr, [sp, #12]
   11a2c:	beq	11aa0 <lista_remove@@Base+0x84>
   11a30:	ldr	r3, [r0]
   11a34:	ldr	r6, [r4, #4]
   11a38:	cmp	r3, r4
   11a3c:	moveq	r3, #0
   11a40:	streq	r3, [r6, #8]
   11a44:	streq	r6, [r0]
   11a48:	beq	11a6c <lista_remove@@Base+0x50>
   11a4c:	ldr	r2, [r0, #4]
   11a50:	ldr	r3, [r4, #8]
   11a54:	cmp	r2, r4
   11a58:	moveq	r2, #0
   11a5c:	strne	r6, [r3, #4]
   11a60:	streq	r2, [r3, #4]
   11a64:	strne	r3, [r6, #8]
   11a68:	streq	r3, [r0, #4]
   11a6c:	mov	r5, r0
   11a70:	ldr	r0, [r4]
   11a74:	bl	10998 <free@plt>
   11a78:	mov	r0, r4
   11a7c:	bl	10998 <free@plt>
   11a80:	ldr	r3, [r5, #8]
   11a84:	sub	r3, r3, #1
   11a88:	str	r3, [r5, #8]
   11a8c:	mov	r0, r6
   11a90:	ldrd	r4, [sp]
   11a94:	ldr	r6, [sp, #8]
   11a98:	add	sp, sp, #12
   11a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa0:	mov	r6, r4
   11aa4:	b	11a8c <lista_remove@@Base+0x70>

00011aa8 <lista_pesquisa@@Base>:
   11aa8:	cmp	r0, #0
   11aac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ab0:	strd	r6, [sp, #8]
   11ab4:	str	r8, [sp, #16]
   11ab8:	str	lr, [sp, #20]
   11abc:	beq	11b0c <lista_pesquisa@@Base+0x64>
   11ac0:	cmp	r2, #0
   11ac4:	mov	r6, r1
   11ac8:	mov	r5, r2
   11acc:	beq	11b28 <lista_pesquisa@@Base+0x80>
   11ad0:	cmp	r2, #1
   11ad4:	bne	11b0c <lista_pesquisa@@Base+0x64>
   11ad8:	ldmib	r0, {r4, r7}
   11adc:	cmp	r7, #0
   11ae0:	ble	11b0c <lista_pesquisa@@Base+0x64>
   11ae4:	mov	r5, #0
   11ae8:	mov	r1, r6
   11aec:	ldr	r0, [r4]
   11af0:	add	r5, r5, #1
   11af4:	bl	10980 <strcmp@plt>
   11af8:	cmp	r0, #0
   11afc:	beq	11b10 <lista_pesquisa@@Base+0x68>
   11b00:	cmp	r5, r7
   11b04:	ldr	r4, [r4, #8]
   11b08:	bne	11ae8 <lista_pesquisa@@Base+0x40>
   11b0c:	mov	r4, #0
   11b10:	mov	r0, r4
   11b14:	ldrd	r4, [sp]
   11b18:	ldrd	r6, [sp, #8]
   11b1c:	ldr	r8, [sp, #16]
   11b20:	add	sp, sp, #20
   11b24:	pop	{pc}		; (ldr pc, [sp], #4)
   11b28:	ldr	r4, [r0]
   11b2c:	ldr	r7, [r0, #8]
   11b30:	cmp	r7, #0
   11b34:	ble	11b0c <lista_pesquisa@@Base+0x64>
   11b38:	mov	r1, r6
   11b3c:	ldr	r0, [r4]
   11b40:	add	r5, r5, #1
   11b44:	bl	10980 <strcmp@plt>
   11b48:	cmp	r0, #0
   11b4c:	beq	11b10 <lista_pesquisa@@Base+0x68>
   11b50:	cmp	r5, r7
   11b54:	ldr	r4, [r4, #4]
   11b58:	bne	11b38 <lista_pesquisa@@Base+0x90>
   11b5c:	b	11b0c <lista_pesquisa@@Base+0x64>

00011b60 <lista_ordena@@Base>:
   11b60:	cmp	r0, #0
   11b64:	beq	11c04 <lista_ordena@@Base+0xa4>
   11b68:	ldr	r3, [r0, #8]
   11b6c:	cmp	r3, #0
   11b70:	beq	11bfc <lista_ordena@@Base+0x9c>
   11b74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b78:	strd	r6, [sp, #8]
   11b7c:	strd	r8, [sp, #16]
   11b80:	str	sl, [sp, #24]
   11b84:	ldm	r0, {r8, sl}
   11b88:	str	lr, [sp, #28]
   11b8c:	cmp	r8, sl
   11b90:	movne	r9, r8
   11b94:	beq	11be0 <lista_ordena@@Base+0x80>
   11b98:	mov	r4, r9
   11b9c:	ldr	r7, [r9, #4]
   11ba0:	b	11bb8 <lista_ordena@@Base+0x58>
   11ba4:	cmp	r4, r8
   11ba8:	str	r5, [r4]
   11bac:	ldrne	r4, [r4, #8]
   11bb0:	str	r6, [r7]
   11bb4:	ldrne	r7, [r4, #4]
   11bb8:	ldr	r6, [r4]
   11bbc:	ldr	r5, [r7]
   11bc0:	mov	r0, r6
   11bc4:	mov	r1, r5
   11bc8:	bl	10980 <strcmp@plt>
   11bcc:	cmp	r0, #0
   11bd0:	bgt	11ba4 <lista_ordena@@Base+0x44>
   11bd4:	ldr	r9, [r9, #4]
   11bd8:	cmp	r9, sl
   11bdc:	bne	11b98 <lista_ordena@@Base+0x38>
   11be0:	ldrd	r4, [sp]
   11be4:	mov	r0, #0
   11be8:	ldrd	r6, [sp, #8]
   11bec:	ldrd	r8, [sp, #16]
   11bf0:	ldr	sl, [sp, #24]
   11bf4:	add	sp, sp, #28
   11bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bfc:	mov	r0, #0
   11c00:	bx	lr
   11c04:	mvn	r0, #0
   11c08:	bx	lr

00011c0c <lista_inverte@@Base>:
   11c0c:	cmp	r0, #0
   11c10:	beq	11ca0 <lista_inverte@@Base+0x94>
   11c14:	ldr	r3, [r0, #8]
   11c18:	cmp	r3, #0
   11c1c:	beq	11c98 <lista_inverte@@Base+0x8c>
   11c20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c24:	cmp	r3, #1
   11c28:	ldrd	r4, [r0]
   11c2c:	strd	r6, [sp, #8]
   11c30:	str	r8, [sp, #16]
   11c34:	add	r8, r3, r3, lsr #31
   11c38:	str	lr, [sp, #20]
   11c3c:	asr	r8, r8, #1
   11c40:	ble	11c80 <lista_inverte@@Base+0x74>
   11c44:	mov	r6, #0
   11c48:	ldr	r0, [r4]
   11c4c:	add	r6, r6, #1
   11c50:	bl	109b0 <strdup@plt>
   11c54:	mov	r7, r0
   11c58:	ldr	r0, [r5]
   11c5c:	bl	109b0 <strdup@plt>
   11c60:	str	r0, [r4]
   11c64:	mov	r0, r7
   11c68:	bl	109b0 <strdup@plt>
   11c6c:	cmp	r6, r8
   11c70:	ldr	r4, [r4, #4]
   11c74:	str	r0, [r5]
   11c78:	ldr	r5, [r5, #8]
   11c7c:	blt	11c48 <lista_inverte@@Base+0x3c>
   11c80:	mov	r0, #0
   11c84:	ldrd	r4, [sp]
   11c88:	ldrd	r6, [sp, #8]
   11c8c:	ldr	r8, [sp, #16]
   11c90:	add	sp, sp, #20
   11c94:	pop	{pc}		; (ldr pc, [sp], #4)
   11c98:	mov	r0, #0
   11c9c:	bx	lr
   11ca0:	mvn	r0, #0
   11ca4:	bx	lr

00011ca8 <__libc_csu_init@@Base>:
   11ca8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cac:	mov	r7, r0
   11cb0:	ldr	r6, [pc, #72]	; 11d00 <__libc_csu_init@@Base+0x58>
   11cb4:	ldr	r5, [pc, #72]	; 11d04 <__libc_csu_init@@Base+0x5c>
   11cb8:	add	r6, pc, r6
   11cbc:	add	r5, pc, r5
   11cc0:	sub	r6, r6, r5
   11cc4:	mov	r8, r1
   11cc8:	mov	r9, r2
   11ccc:	bl	10960 <strcmp@plt-0x20>
   11cd0:	asrs	r6, r6, #2
   11cd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cd8:	mov	r4, #0
   11cdc:	add	r4, r4, #1
   11ce0:	ldr	r3, [r5], #4
   11ce4:	mov	r2, r9
   11ce8:	mov	r1, r8
   11cec:	mov	r0, r7
   11cf0:	blx	r3
   11cf4:	cmp	r6, r4
   11cf8:	bne	11cdc <__libc_csu_init@@Base+0x34>
   11cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d00:	andeq	r1, r1, r4, asr r2
   11d04:	andeq	r1, r1, ip, asr #4

00011d08 <__libc_csu_fini@@Base>:
   11d08:	bx	lr

Disassembly of section .fini:

00011d0c <.fini>:
   11d0c:	push	{r3, lr}
   11d10:	pop	{r3, pc}
