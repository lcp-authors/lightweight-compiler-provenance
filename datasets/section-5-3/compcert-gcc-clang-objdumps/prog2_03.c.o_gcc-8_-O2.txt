
../compcert-repos/prog2/CMakeFiles/0.3.dir/Aula00_Conceitos_base/03.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <avg>:
   0:	vldr	s15, [pc, #28]	; 24 <avg+0x24>
   4:	add	r3, r0, #40	; 0x28
   8:	vldmia	r0!, {s14}
   c:	cmp	r0, r3
  10:	vadd.f32	s15, s15, s14
  14:	bne	8 <avg+0x8>
  18:	vldr	s0, [pc, #8]	; 28 <avg+0x28>
  1c:	vdiv.f32	s0, s15, s0
  20:	bx	lr
  24:	.word	0x00000000
  28:	.word	0x41200000

0000002c <max>:
  2c:	add	r3, r0, #40	; 0x28
  30:	vldmia	r0!, {s0}
  34:	vldmia	r0!, {s15}
  38:	vcmp.f32	s15, s0
  3c:	vmrs	APSR_nzcv, fpscr
  40:	vmovgt.f32	s0, s15
  44:	cmp	r0, r3
  48:	bne	34 <max+0x8>
  4c:	bx	lr

00000050 <min>:
  50:	add	r3, r0, #40	; 0x28
  54:	vldmia	r0!, {s0}
  58:	vldmia	r0!, {s15}
  5c:	vcmp.f32	s15, s0
  60:	vmrs	APSR_nzcv, fpscr
  64:	vmovmi.f32	s0, s15
  68:	cmp	r0, r3
  6c:	bne	58 <min+0x8>
  70:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4:	mov	r4, #0
   8:	strd	r6, [sp, #8]
   c:	movw	r7, #0
  10:	movt	r7, #0
  14:	str	r8, [sp, #16]
  18:	movw	r8, #0
  1c:	movt	r8, #0
  20:	str	lr, [sp, #20]
  24:	sub	sp, sp, #40	; 0x28
  28:	mov	r5, sp
  2c:	mov	r6, r5
  30:	add	r4, r4, #1
  34:	mov	r0, r8
  38:	mov	r1, r4
  3c:	bl	0 <printf>
  40:	mov	r1, r6
  44:	mov	r0, r7
  48:	bl	0 <__isoc99_scanf>
  4c:	cmp	r4, #10
  50:	add	r6, r6, #4
  54:	bne	30 <main+0x30>
  58:	vldr	s15, [pc, #236]	; 14c <main+0x14c>
  5c:	add	r4, r5, #40	; 0x28
  60:	mov	r3, r5
  64:	vldmia	r3!, {s14}
  68:	cmp	r3, r4
  6c:	vadd.f32	s15, s15, s14
  70:	bne	64 <main+0x64>
  74:	vldr	s13, [pc, #212]	; 150 <main+0x150>
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	add	r6, sp, #4
  84:	vdiv.f32	s14, s15, s13
  88:	vcvt.f64.f32	d7, s14
  8c:	vmov	r2, r3, d7
  90:	bl	0 <printf>
  94:	vldr	s15, [sp]
  98:	mov	r3, r6
  9c:	vldmia	r3!, {s14}
  a0:	vcmp.f32	s14, s15
  a4:	vmrs	APSR_nzcv, fpscr
  a8:	vmovgt.f32	s15, s14
  ac:	cmp	r3, r4
  b0:	bne	9c <main+0x9c>
  b4:	vcvt.f64.f32	d7, s15
  b8:	movw	r0, #0
  bc:	movt	r0, #0
  c0:	vmov	r2, r3, d7
  c4:	bl	0 <printf>
  c8:	vldr	s15, [sp]
  cc:	vldmia	r6!, {s14}
  d0:	vcmp.f32	s14, s15
  d4:	vmrs	APSR_nzcv, fpscr
  d8:	vmovmi.f32	s15, s14
  dc:	cmp	r6, r4
  e0:	bne	cc <main+0xcc>
  e4:	vcvt.f64.f32	d7, s15
  e8:	movw	r0, #0
  ec:	movt	r0, #0
  f0:	movw	r6, #0
  f4:	movt	r6, #0
  f8:	vmov	r2, r3, d7
  fc:	bl	0 <printf>
 100:	movw	r0, #0
 104:	movt	r0, #0
 108:	bl	0 <printf>
 10c:	vldmia	r5!, {s15}
 110:	mov	r0, r6
 114:	vcvt.f64.f32	d7, s15
 118:	vmov	r2, r3, d7
 11c:	bl	0 <printf>
 120:	cmp	r5, r4
 124:	bne	10c <main+0x10c>
 128:	mov	r0, #10
 12c:	bl	0 <putchar>
 130:	mov	r0, #0
 134:	add	sp, sp, #40	; 0x28
 138:	ldrd	r4, [sp]
 13c:	ldrd	r6, [sp, #8]
 140:	ldr	r8, [sp, #16]
 144:	add	sp, sp, #20
 148:	pop	{pc}		; (ldr pc, [sp], #4)
 14c:	.word	0x00000000
 150:	.word	0x41200000
