
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_symbol_part_ext>:
       0:	sub	r1, r1, r0
       4:	cmp	r1, #8
       8:	push	{r4, r5, r6, r7}
       c:	bls	a8 <flatcc_json_parser_symbol_part_ext+0xa8>
      10:	ldrb	r4, [r0, #7]
      14:	mov	r5, #0
      18:	ldrb	r6, [r0, #6]
      1c:	lsr	r3, r6, #24
      20:	lsl	r2, r6, #8
      24:	orr	r4, r4, r2
      28:	orr	r5, r5, r3
      2c:	ldrb	r6, [r0, #5]
      30:	lsr	r3, r6, #16
      34:	lsl	r2, r6, #16
      38:	orr	r4, r4, r2
      3c:	orr	r5, r5, r3
      40:	ldrb	r6, [r0, #4]
      44:	lsr	r3, r6, #8
      48:	lsl	r2, r6, #24
      4c:	orr	r4, r4, r2
      50:	orr	r5, r5, r3
      54:	ldrb	r3, [r0, #3]
      58:	mov	r2, #0
      5c:	orr	r4, r4, r2
      60:	orr	r5, r5, r3
      64:	ldrb	r6, [r0, #2]
      68:	mov	r2, #0
      6c:	orr	r4, r4, r2
      70:	lsl	r3, r6, #8
      74:	orr	r5, r5, r3
      78:	ldrb	r6, [r0, #1]
      7c:	mov	r2, #0
      80:	orr	r2, r2, r4
      84:	lsl	r3, r6, #16
      88:	orr	r3, r3, r5
      8c:	ldrb	r4, [r0]
      90:	mov	r0, #0
      94:	orr	r0, r0, r2
      98:	lsl	r1, r4, #24
      9c:	orr	r1, r1, r3
      a0:	pop	{r4, r5, r6, r7}
      a4:	bx	lr
      a8:	sub	r1, r1, #1
      ac:	cmp	r1, #7
      b0:	ldrls	pc, [pc, r1, lsl #2]
      b4:	b	12c <flatcc_json_parser_symbol_part_ext+0x12c>
      b8:	.word	0x000000e4
      bc:	.word	0x000000f0
      c0:	.word	0x000000fc
      c4:	.word	0x00000108
      c8:	.word	0x00000114
      cc:	.word	0x00000120
      d0:	.word	0x000000d8
      d4:	.word	0x00000010
      d8:	mov	r4, #0
      dc:	mov	r5, #0
      e0:	b	18 <flatcc_json_parser_symbol_part_ext+0x18>
      e4:	mov	r2, #0
      e8:	mov	r3, #0
      ec:	b	8c <flatcc_json_parser_symbol_part_ext+0x8c>
      f0:	mov	r4, #0
      f4:	mov	r5, #0
      f8:	b	78 <flatcc_json_parser_symbol_part_ext+0x78>
      fc:	mov	r4, #0
     100:	mov	r5, #0
     104:	b	64 <flatcc_json_parser_symbol_part_ext+0x64>
     108:	mov	r4, #0
     10c:	mov	r5, #0
     110:	b	54 <flatcc_json_parser_symbol_part_ext+0x54>
     114:	mov	r4, #0
     118:	mov	r5, #0
     11c:	b	40 <flatcc_json_parser_symbol_part_ext+0x40>
     120:	mov	r4, #0
     124:	mov	r5, #0
     128:	b	2c <flatcc_json_parser_symbol_part_ext+0x2c>
     12c:	mov	r0, #0
     130:	mov	r1, #0
     134:	b	a0 <flatcc_json_parser_symbol_part_ext+0xa0>

00000138 <MyGame_Example_Any_json_union_accept_type>:
     138:	cmp	r0, #4
     13c:	movhi	r0, #0
     140:	movls	r0, #1
     144:	bx	lr

00000148 <Fantasy_Character_json_union_accept_type>:
     148:	cmp	r0, #11
     14c:	bhi	170 <Fantasy_Character_json_union_accept_type+0x28>
     150:	cmp	r0, #8
     154:	bcs	178 <Fantasy_Character_json_union_accept_type+0x30>
     158:	cmp	r0, #0
     15c:	beq	178 <Fantasy_Character_json_union_accept_type+0x30>
     160:	cmp	r0, #2
     164:	beq	178 <Fantasy_Character_json_union_accept_type+0x30>
     168:	mov	r0, #0
     16c:	bx	lr
     170:	cmp	r0, #255	; 0xff
     174:	bne	168 <Fantasy_Character_json_union_accept_type+0x20>
     178:	mov	r0, #1
     17c:	bx	lr

00000180 <MyGame_Example2_Monster_print_json_table>:
     180:	bx	lr

00000184 <MyGame_Example2_Monster_verify_table>:
     184:	mov	r0, #0
     188:	bx	lr

0000018c <Fantasy_Attacker_verify_table>:
     18c:	mov	r3, #4
     190:	mov	r2, r3
     194:	mov	r1, #0
     198:	b	0 <flatcc_verify_field>

0000019c <MyGame_Example_TestJSONPrefix_print_json_table>:
     19c:	push	{r4, r5, r6, lr}
     1a0:	sub	sp, sp, #8
     1a4:	ldr	r2, [pc, #104]	; 214 <MyGame_Example_TestJSONPrefix_print_json_table+0x78>
     1a8:	mov	r3, #21
     1ac:	str	r2, [sp, #4]
     1b0:	str	r3, [sp]
     1b4:	mov	r2, #0
     1b8:	ldr	r3, [pc, #88]	; 218 <MyGame_Example_TestJSONPrefix_print_json_table+0x7c>
     1bc:	mov	r4, r0
     1c0:	mov	r5, r1
     1c4:	bl	0 <flatcc_json_printer_table_field>
     1c8:	ldr	r3, [pc, #76]	; 21c <MyGame_Example_TestJSONPrefix_print_json_table+0x80>
     1cc:	mov	r6, #22
     1d0:	mov	r1, r5
     1d4:	mov	r0, r4
     1d8:	str	r3, [sp, #4]
     1dc:	str	r6, [sp]
     1e0:	ldr	r3, [pc, #56]	; 220 <MyGame_Example_TestJSONPrefix_print_json_table+0x84>
     1e4:	mov	r2, #1
     1e8:	bl	0 <flatcc_json_printer_table_field>
     1ec:	ldr	r3, [pc, #48]	; 224 <MyGame_Example_TestJSONPrefix_print_json_table+0x88>
     1f0:	str	r6, [sp]
     1f4:	str	r3, [sp, #4]
     1f8:	mov	r1, r5
     1fc:	mov	r0, r4
     200:	ldr	r3, [pc, #32]	; 228 <MyGame_Example_TestJSONPrefix_print_json_table+0x8c>
     204:	mov	r2, #2
     208:	bl	0 <flatcc_json_printer_table_field>
     20c:	add	sp, sp, #8
     210:	pop	{r4, r5, r6, pc}
	...
     220:	.word	0x00000018
     224:	.word	0x00000000
     228:	.word	0x00000030

0000022c <Fantasy_Attacker_print_json_table>:
     22c:	push	{lr}		; (str lr, [sp, #-4]!)
     230:	sub	sp, sp, #12
     234:	mov	r2, #0
     238:	mov	r3, #19
     23c:	str	r3, [sp]
     240:	str	r2, [sp, #4]
     244:	ldr	r3, [pc, #8]	; 254 <Fantasy_Attacker_print_json_table+0x28>
     248:	bl	0 <flatcc_json_printer_int32_field>
     24c:	add	sp, sp, #12
     250:	pop	{pc}		; (ldr pc, [sp], #4)
     254:	.word	0x00000048

00000258 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
     258:	push	{r4, r5, lr}
     25c:	mov	r4, #0
     260:	sub	sp, sp, #20
     264:	mov	r5, #0
     268:	mov	r3, #15
     26c:	strd	r4, [sp, #8]
     270:	str	r3, [sp]
     274:	mov	r2, #0
     278:	ldr	r3, [pc, #52]	; 2b4 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x5c>
     27c:	mov	r4, r0
     280:	mov	r5, r1
     284:	bl	0 <flatcc_json_printer_int64_field>
     288:	mov	r2, #0
     28c:	mov	r3, #21
     290:	str	r2, [sp, #4]
     294:	str	r3, [sp]
     298:	mov	r1, r5
     29c:	mov	r0, r4
     2a0:	ldr	r3, [pc, #16]	; 2b8 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x60>
     2a4:	mov	r2, #1
     2a8:	bl	0 <flatcc_json_printer_uint32_field>
     2ac:	add	sp, sp, #20
     2b0:	pop	{r4, r5, pc}
     2b4:	.word	0x0000005c
     2b8:	.word	0x0000006c

000002bc <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
     2bc:	push	{r4, r5, lr}
     2c0:	mov	r4, #0
     2c4:	sub	sp, sp, #20
     2c8:	mov	r5, #0
     2cc:	mov	r3, #15
     2d0:	strd	r4, [sp, #8]
     2d4:	str	r3, [sp]
     2d8:	mov	r2, #0
     2dc:	ldr	r3, [pc, #52]	; 318 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x5c>
     2e0:	mov	r4, r0
     2e4:	mov	r5, r1
     2e8:	bl	0 <flatcc_json_printer_int64_field>
     2ec:	mov	r2, #0
     2f0:	mov	r3, #16
     2f4:	str	r2, [sp, #4]
     2f8:	str	r3, [sp]
     2fc:	mov	r1, r5
     300:	mov	r0, r4
     304:	ldr	r3, [pc, #16]	; 31c <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x60>
     308:	mov	r2, #1
     30c:	bl	0 <flatcc_json_printer_uint32_field>
     310:	add	sp, sp, #20
     314:	pop	{r4, r5, pc}
     318:	.word	0x0000005c
     31c:	.word	0x00000084

00000320 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
     320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     324:	mov	r2, #0
     328:	sub	sp, sp, #20
     32c:	mov	fp, r2
     330:	mov	r7, #4
     334:	mov	sl, #9
     338:	mov	r4, r0
     33c:	mov	r5, r1
     340:	str	r7, [sp]
     344:	ldr	r3, [pc, #224]	; 42c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x10c>
     348:	bl	0 <flatcc_json_printer_string_field>
     34c:	mov	r8, #0
     350:	mov	r9, #0
     354:	mov	r1, r5
     358:	mov	r0, r4
     35c:	stm	sp, {sl, fp}
     360:	ldr	r3, [pc, #200]	; 430 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x110>
     364:	mov	r2, #1
     368:	bl	0 <flatcc_json_printer_uint32_field>
     36c:	mov	r6, #8
     370:	mov	r1, r5
     374:	mov	r0, r4
     378:	str	r7, [sp]
     37c:	ldr	r3, [pc, #176]	; 434 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x114>
     380:	mov	r2, #2
     384:	bl	0 <flatcc_json_printer_string_field>
     388:	mov	r1, r5
     38c:	mov	r0, r4
     390:	strd	r8, [sp, #8]
     394:	str	r6, [sp]
     398:	ldr	r3, [pc, #152]	; 438 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x118>
     39c:	mov	r2, #3
     3a0:	bl	0 <flatcc_json_printer_int64_field>
     3a4:	mov	r2, r7
     3a8:	mov	r1, r5
     3ac:	mov	r0, r4
     3b0:	str	r7, [sp]
     3b4:	ldr	r3, [pc, #128]	; 43c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x11c>
     3b8:	bl	0 <flatcc_json_printer_string_field>
     3bc:	mov	r1, r5
     3c0:	mov	r0, r4
     3c4:	strd	r8, [sp, #8]
     3c8:	str	r6, [sp]
     3cc:	ldr	r3, [pc, #108]	; 440 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x120>
     3d0:	mov	r2, #5
     3d4:	bl	0 <flatcc_json_printer_int64_field>
     3d8:	mov	r1, r5
     3dc:	mov	r0, r4
     3e0:	stm	sp, {sl, fp}
     3e4:	ldr	r3, [pc, #88]	; 444 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x124>
     3e8:	mov	r2, #6
     3ec:	bl	0 <flatcc_json_printer_uint32_field>
     3f0:	mov	r1, r5
     3f4:	mov	r0, r4
     3f8:	strd	r8, [sp, #8]
     3fc:	str	r6, [sp]
     400:	ldr	r3, [pc, #64]	; 448 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x128>
     404:	mov	r2, #7
     408:	bl	0 <flatcc_json_printer_int64_field>
     40c:	stm	sp, {sl, fp}
     410:	mov	r2, r6
     414:	mov	r1, r5
     418:	mov	r0, r4
     41c:	ldr	r3, [pc, #40]	; 44c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x12c>
     420:	bl	0 <flatcc_json_printer_uint32_field>
     424:	add	sp, sp, #20
     428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     42c:	.word	0x00000098
     430:	.word	0x000000a0
     434:	.word	0x000000ac
     438:	.word	0x000000b4
     43c:	.word	0x000000c0
     440:	.word	0x000000c8
     444:	.word	0x000000d4
     448:	.word	0x000000e0
     44c:	.word	0x000000ec

00000450 <MyGame_Example_Monster_print_json_table>:
     450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     454:	sub	sp, sp, #20
     458:	ldr	r3, [pc, #1092]	; 8a4 <MyGame_Example_Monster_print_json_table+0x454>
     45c:	mov	r6, #3
     460:	str	r3, [sp, #4]
     464:	str	r6, [sp]
     468:	ldr	r3, [pc, #1080]	; 8a8 <MyGame_Example_Monster_print_json_table+0x458>
     46c:	mov	r2, #0
     470:	mov	r4, r0
     474:	mov	r5, r1
     478:	mov	r7, #4
     47c:	bl	0 <flatcc_json_printer_struct_field>
     480:	mov	r3, #150	; 0x96
     484:	mov	r1, r5
     488:	mov	r0, r4
     48c:	str	r3, [sp, #4]
     490:	str	r7, [sp]
     494:	ldr	r3, [pc, #1040]	; 8ac <MyGame_Example_Monster_print_json_table+0x45c>
     498:	mov	r2, #1
     49c:	bl	0 <flatcc_json_printer_int16_field>
     4a0:	mov	r2, #2
     4a4:	mov	r3, #100	; 0x64
     4a8:	mov	r1, r5
     4ac:	stm	sp, {r2, r3}
     4b0:	mov	r0, r4
     4b4:	ldr	r3, [pc, #1012]	; 8b0 <MyGame_Example_Monster_print_json_table+0x460>
     4b8:	bl	0 <flatcc_json_printer_int16_field>
     4bc:	mov	sl, #9
     4c0:	mov	r2, r6
     4c4:	mov	r1, r5
     4c8:	mov	r0, r4
     4cc:	str	r7, [sp]
     4d0:	ldr	r3, [pc, #988]	; 8b4 <MyGame_Example_Monster_print_json_table+0x464>
     4d4:	bl	0 <flatcc_json_printer_string_field>
     4d8:	mov	r1, r5
     4dc:	mov	r0, r4
     4e0:	str	sl, [sp]
     4e4:	ldr	r3, [pc, #972]	; 8b8 <MyGame_Example_Monster_print_json_table+0x468>
     4e8:	mov	r2, #5
     4ec:	bl	0 <flatcc_json_printer_uint8_vector_field>
     4f0:	mov	r8, #5
     4f4:	mov	fp, #8
     4f8:	ldr	r3, [pc, #956]	; 8bc <MyGame_Example_Monster_print_json_table+0x46c>
     4fc:	mov	r1, r5
     500:	mov	r0, r4
     504:	str	r3, [sp, #8]
     508:	stm	sp, {r8, fp}
     50c:	ldr	r3, [pc, #940]	; 8c0 <MyGame_Example_Monster_print_json_table+0x470>
     510:	mov	r2, #6
     514:	bl	0 <flatcc_json_printer_int8_enum_field>
     518:	ldr	ip, [pc, #932]	; 8c4 <MyGame_Example_Monster_print_json_table+0x474>
     51c:	ldr	r3, [pc, #932]	; 8c8 <MyGame_Example_Monster_print_json_table+0x478>
     520:	mov	r2, fp
     524:	mov	r1, r5
     528:	stmib	sp, {r3, ip}
     52c:	mov	r0, r4
     530:	str	r7, [sp]
     534:	ldr	r3, [pc, #912]	; 8cc <MyGame_Example_Monster_print_json_table+0x47c>
     538:	bl	0 <flatcc_json_printer_union_field>
     53c:	ldr	r3, [pc, #908]	; 8d0 <MyGame_Example_Monster_print_json_table+0x480>
     540:	mov	r6, #17
     544:	mov	r2, sl
     548:	mov	r1, r5
     54c:	mov	r0, r4
     550:	str	r3, [sp, #8]
     554:	str	r7, [sp, #4]
     558:	str	r8, [sp]
     55c:	ldr	r3, [pc, #880]	; 8d4 <MyGame_Example_Monster_print_json_table+0x484>
     560:	bl	0 <flatcc_json_printer_struct_vector_field>
     564:	mov	r1, r5
     568:	mov	r0, r4
     56c:	str	r6, [sp]
     570:	ldr	r3, [pc, #864]	; 8d8 <MyGame_Example_Monster_print_json_table+0x488>
     574:	mov	r2, #10
     578:	bl	0 <flatcc_json_printer_string_vector_field>
     57c:	ldr	r3, [pc, #856]	; 8dc <MyGame_Example_Monster_print_json_table+0x48c>
     580:	mov	r1, r5
     584:	mov	r0, r4
     588:	str	r3, [sp, #4]
     58c:	str	r6, [sp]
     590:	ldr	r3, [pc, #840]	; 8e0 <MyGame_Example_Monster_print_json_table+0x490>
     594:	mov	r2, #11
     598:	bl	0 <flatcc_json_printer_table_vector_field>
     59c:	ldr	r3, [pc, #824]	; 8dc <MyGame_Example_Monster_print_json_table+0x48c>
     5a0:	mov	r1, r5
     5a4:	str	r3, [sp, #4]
     5a8:	mov	r0, r4
     5ac:	str	r8, [sp]
     5b0:	ldr	r3, [pc, #812]	; 8e4 <MyGame_Example_Monster_print_json_table+0x494>
     5b4:	mov	r2, #12
     5b8:	bl	0 <flatcc_json_printer_table_field>
     5bc:	ldr	r3, [pc, #792]	; 8dc <MyGame_Example_Monster_print_json_table+0x48c>
     5c0:	mov	r9, #0
     5c4:	str	r3, [sp, #8]
     5c8:	mov	r3, #20
     5cc:	mov	r1, r5
     5d0:	mov	r0, r4
     5d4:	str	r9, [sp, #4]
     5d8:	str	r3, [sp]
     5dc:	mov	r2, #13
     5e0:	ldr	r3, [pc, #768]	; 8e8 <MyGame_Example_Monster_print_json_table+0x498>
     5e4:	bl	0 <flatcc_json_printer_table_as_nested_root>
     5e8:	ldr	r3, [pc, #764]	; 8ec <MyGame_Example_Monster_print_json_table+0x49c>
     5ec:	str	sl, [sp]
     5f0:	mov	r1, r5
     5f4:	mov	r0, r4
     5f8:	str	r3, [sp, #4]
     5fc:	mov	r2, #14
     600:	ldr	r3, [pc, #744]	; 8f0 <MyGame_Example_Monster_print_json_table+0x4a0>
     604:	bl	0 <flatcc_json_printer_table_field>
     608:	mov	r3, #1
     60c:	mov	sl, #16
     610:	mov	r1, r5
     614:	mov	r0, r4
     618:	str	r3, [sp, #4]
     61c:	str	fp, [sp]
     620:	ldr	r3, [pc, #716]	; 8f4 <MyGame_Example_Monster_print_json_table+0x4a4>
     624:	mov	r2, #15
     628:	bl	0 <flatcc_json_printer_bool_field>
     62c:	str	r9, [sp, #4]
     630:	mov	r1, r5
     634:	mov	r0, r4
     638:	mov	r2, sl
     63c:	str	sl, [sp]
     640:	ldr	r3, [pc, #688]	; 8f8 <MyGame_Example_Monster_print_json_table+0x4a8>
     644:	bl	0 <flatcc_json_printer_int32_field>
     648:	str	r9, [sp, #4]
     64c:	mov	r2, r6
     650:	mov	r1, r5
     654:	mov	r0, r4
     658:	str	sl, [sp]
     65c:	ldr	r3, [pc, #664]	; 8fc <MyGame_Example_Monster_print_json_table+0x4ac>
     660:	bl	0 <flatcc_json_printer_uint32_field>
     664:	mov	r2, #0
     668:	mov	r3, #0
     66c:	mov	r1, r5
     670:	strd	r2, [sp, #8]
     674:	mov	r0, r4
     678:	str	sl, [sp]
     67c:	ldr	r3, [pc, #636]	; 900 <MyGame_Example_Monster_print_json_table+0x4b0>
     680:	mov	r2, #18
     684:	bl	0 <flatcc_json_printer_int64_field>
     688:	mov	r2, #0
     68c:	mov	r3, #0
     690:	mov	r1, r5
     694:	strd	r2, [sp, #8]
     698:	mov	r0, r4
     69c:	str	sl, [sp]
     6a0:	ldr	r3, [pc, #604]	; 904 <MyGame_Example_Monster_print_json_table+0x4b4>
     6a4:	mov	r2, #19
     6a8:	bl	0 <flatcc_json_printer_uint64_field>
     6ac:	stm	sp, {r6, r9}
     6b0:	mov	r1, r5
     6b4:	mov	r0, r4
     6b8:	mov	r2, #20
     6bc:	ldr	r3, [pc, #580]	; 908 <MyGame_Example_Monster_print_json_table+0x4b8>
     6c0:	bl	0 <flatcc_json_printer_int32_field>
     6c4:	stm	sp, {r6, r9}
     6c8:	mov	r1, r5
     6cc:	mov	r0, r4
     6d0:	ldr	r3, [pc, #564]	; 90c <MyGame_Example_Monster_print_json_table+0x4bc>
     6d4:	mov	r2, #21
     6d8:	bl	0 <flatcc_json_printer_uint32_field>
     6dc:	mov	r2, #0
     6e0:	mov	r3, #0
     6e4:	mov	r1, r5
     6e8:	strd	r2, [sp, #8]
     6ec:	mov	r0, r4
     6f0:	str	r6, [sp]
     6f4:	ldr	r3, [pc, #532]	; 910 <MyGame_Example_Monster_print_json_table+0x4c0>
     6f8:	mov	r2, #22
     6fc:	bl	0 <flatcc_json_printer_int64_field>
     700:	mov	r2, #0
     704:	mov	r3, #0
     708:	mov	r1, r5
     70c:	strd	r2, [sp, #8]
     710:	mov	r0, r4
     714:	str	r6, [sp]
     718:	ldr	r3, [pc, #500]	; 914 <MyGame_Example_Monster_print_json_table+0x4c4>
     71c:	mov	r2, #23
     720:	bl	0 <flatcc_json_printer_uint64_field>
     724:	mov	r1, r5
     728:	mov	r0, r4
     72c:	str	sl, [sp]
     730:	ldr	r3, [pc, #480]	; 918 <MyGame_Example_Monster_print_json_table+0x4c8>
     734:	mov	r2, #24
     738:	bl	0 <flatcc_json_printer_bool_vector_field>
     73c:	mov	r9, #6
     740:	mov	r1, r5
     744:	mov	r0, r4
     748:	str	r8, [sp]
     74c:	vldr	s0, [pc, #324]	; 898 <MyGame_Example_Monster_print_json_table+0x448>
     750:	ldr	r3, [pc, #452]	; 91c <MyGame_Example_Monster_print_json_table+0x4cc>
     754:	mov	r2, #25
     758:	bl	0 <flatcc_json_printer_float_field>
     75c:	mov	r1, r5
     760:	mov	r0, r4
     764:	str	r9, [sp]
     768:	vldr	s0, [pc, #300]	; 89c <MyGame_Example_Monster_print_json_table+0x44c>
     76c:	ldr	r3, [pc, #428]	; 920 <MyGame_Example_Monster_print_json_table+0x4d0>
     770:	mov	r2, #26
     774:	bl	0 <flatcc_json_printer_float_field>
     778:	vldr	s0, [pc, #288]	; 8a0 <MyGame_Example_Monster_print_json_table+0x450>
     77c:	mov	r1, r5
     780:	mov	r0, r4
     784:	str	r9, [sp]
     788:	ldr	r3, [pc, #404]	; 924 <MyGame_Example_Monster_print_json_table+0x4d4>
     78c:	mov	r2, #27
     790:	bl	0 <flatcc_json_printer_float_field>
     794:	mov	r3, #18
     798:	mov	r1, r5
     79c:	mov	r0, r4
     7a0:	str	r3, [sp]
     7a4:	mov	r2, #28
     7a8:	ldr	r3, [pc, #376]	; 928 <MyGame_Example_Monster_print_json_table+0x4d8>
     7ac:	bl	0 <flatcc_json_printer_string_vector_field>
     7b0:	ldr	r2, [pc, #372]	; 92c <MyGame_Example_Monster_print_json_table+0x4dc>
     7b4:	mov	r3, #23
     7b8:	mov	r1, r5
     7bc:	mov	r0, r4
     7c0:	str	r2, [sp, #8]
     7c4:	str	r3, [sp]
     7c8:	str	fp, [sp, #4]
     7cc:	ldr	r3, [pc, #348]	; 930 <MyGame_Example_Monster_print_json_table+0x4e0>
     7d0:	mov	r2, #29
     7d4:	bl	0 <flatcc_json_printer_struct_vector_field>
     7d8:	mov	r1, r5
     7dc:	mov	r0, r4
     7e0:	str	r7, [sp]
     7e4:	ldr	r3, [pc, #328]	; 934 <MyGame_Example_Monster_print_json_table+0x4e4>
     7e8:	mov	r2, #30
     7ec:	bl	0 <flatcc_json_printer_uint8_vector_field>
     7f0:	ldr	r3, [pc, #216]	; 8d0 <MyGame_Example_Monster_print_json_table+0x480>
     7f4:	mov	r1, r5
     7f8:	str	r3, [sp, #8]
     7fc:	mov	r0, r4
     800:	str	r7, [sp, #4]
     804:	str	r8, [sp]
     808:	ldr	r3, [pc, #296]	; 938 <MyGame_Example_Monster_print_json_table+0x4e8>
     80c:	mov	r2, #31
     810:	bl	0 <flatcc_json_printer_struct_vector_field>
     814:	mov	r3, #15
     818:	mov	r1, r5
     81c:	mov	r0, r4
     820:	str	r3, [sp]
     824:	mov	r2, #32
     828:	ldr	r3, [pc, #268]	; 93c <MyGame_Example_Monster_print_json_table+0x4ec>
     82c:	bl	0 <flatcc_json_printer_int64_vector_field>
     830:	mov	r1, r5
     834:	mov	r0, r4
     838:	str	r6, [sp]
     83c:	ldr	r3, [pc, #252]	; 940 <MyGame_Example_Monster_print_json_table+0x4f0>
     840:	mov	r2, #33	; 0x21
     844:	bl	0 <flatcc_json_printer_double_vector_field>
     848:	ldr	r2, [pc, #244]	; 944 <MyGame_Example_Monster_print_json_table+0x4f4>
     84c:	mov	r3, #21
     850:	mov	r1, r5
     854:	mov	r0, r4
     858:	str	r2, [sp, #4]
     85c:	str	r3, [sp]
     860:	mov	r2, #34	; 0x22
     864:	ldr	r3, [pc, #220]	; 948 <MyGame_Example_Monster_print_json_table+0x4f8>
     868:	bl	0 <flatcc_json_printer_table_field>
     86c:	ldr	r2, [pc, #216]	; 94c <MyGame_Example_Monster_print_json_table+0x4fc>
     870:	mov	r3, #10
     874:	str	r2, [sp, #4]
     878:	str	r3, [sp]
     87c:	mov	r1, r5
     880:	mov	r0, r4
     884:	ldr	r3, [pc, #196]	; 950 <MyGame_Example_Monster_print_json_table+0x500>
     888:	mov	r2, #35	; 0x23
     88c:	bl	0 <flatcc_json_printer_table_field>
     890:	add	sp, sp, #20
     894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     898:	.word	0x489965e0
     89c:	.word	0x40400000
	...
     8a8:	.word	0x000000f8
     8ac:	.word	0x000000fc
     8b0:	.word	0x00000104
     8b4:	.word	0x00000108
     8b8:	.word	0x00000110
     8bc:	.word	0x00000000
     8c0:	.word	0x0000011c
	...
     8cc:	.word	0x00000124
     8d0:	.word	0x00000000
     8d4:	.word	0x0000012c
     8d8:	.word	0x00000134
     8dc:	.word	0x00000000
     8e0:	.word	0x00000148
     8e4:	.word	0x0000015c
     8e8:	.word	0x00000164
     8ec:	.word	0x00000000
     8f0:	.word	0x0000017c
     8f4:	.word	0x00000188
     8f8:	.word	0x00000194
     8fc:	.word	0x000001a8
     900:	.word	0x000001bc
     904:	.word	0x000001d0
     908:	.word	0x000001e4
     90c:	.word	0x000001f8
     910:	.word	0x0000020c
     914:	.word	0x00000220
     918:	.word	0x00000234
     91c:	.word	0x00000248
     920:	.word	0x00000250
     924:	.word	0x00000258
     928:	.word	0x00000260
     92c:	.word	0x00000000
     930:	.word	0x00000274
     934:	.word	0x0000028c
     938:	.word	0x00000294
     93c:	.word	0x0000029c
     940:	.word	0x000002ac
     944:	.word	0x00000000
     948:	.word	0x000002c0
     94c:	.word	0x00000000
     950:	.word	0x000002d8

00000954 <MyGame_Example_TestBase64_print_json_table>:
     954:	push	{r4, r5, r6, lr}
     958:	sub	sp, sp, #8
     95c:	mov	r4, #0
     960:	mov	r3, #4
     964:	mov	r2, r4
     968:	str	r3, [sp]
     96c:	str	r4, [sp, #4]
     970:	ldr	r3, [pc, #80]	; 9c8 <MyGame_Example_TestBase64_print_json_table+0x74>
     974:	mov	r5, r0
     978:	mov	r6, r1
     97c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     980:	mov	r2, #1
     984:	mov	r3, #7
     988:	mov	r1, r6
     98c:	mov	r0, r5
     990:	str	r2, [sp, #4]
     994:	str	r3, [sp]
     998:	ldr	r3, [pc, #44]	; 9cc <MyGame_Example_TestBase64_print_json_table+0x78>
     99c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     9a0:	mov	r3, #6
     9a4:	str	r3, [sp]
     9a8:	str	r4, [sp, #4]
     9ac:	mov	r1, r6
     9b0:	mov	r0, r5
     9b4:	ldr	r3, [pc, #20]	; 9d0 <MyGame_Example_TestBase64_print_json_table+0x7c>
     9b8:	mov	r2, #2
     9bc:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
     9c0:	add	sp, sp, #8
     9c4:	pop	{r4, r5, r6, pc}
     9c8:	.word	0x000002e4
     9cc:	.word	0x000002ec
     9d0:	.word	0x000002f4

000009d4 <MyGame_Example_Ability_print_json_struct>:
     9d4:	push	{r4, r5, lr}
     9d8:	sub	sp, sp, #12
     9dc:	ldr	ip, [pc, #72]	; a2c <MyGame_Example_Ability_print_json_struct+0x58>
     9e0:	mov	r4, r1
     9e4:	mov	r3, #0
     9e8:	mov	r1, #2
     9ec:	mov	r2, r4
     9f0:	str	ip, [sp]
     9f4:	str	r1, [sp, #4]
     9f8:	mov	r1, r3
     9fc:	mov	r5, r0
     a00:	bl	0 <flatcc_json_printer_uint32_struct_field>
     a04:	ldr	r1, [pc, #36]	; a30 <MyGame_Example_Ability_print_json_struct+0x5c>
     a08:	mov	r3, #8
     a0c:	mov	r2, r4
     a10:	stm	sp, {r1, r3}
     a14:	mov	r0, r5
     a18:	mov	r3, #4
     a1c:	mov	r1, #1
     a20:	bl	0 <flatcc_json_printer_uint32_struct_field>
     a24:	add	sp, sp, #12
     a28:	pop	{r4, r5, pc}
     a2c:	.word	0x000002fc
     a30:	.word	0x00000300

00000a34 <MyGame_Example_Stat_print_json_table>:
     a34:	push	{r4, r5, r6, r8, r9, lr}
     a38:	sub	sp, sp, #16
     a3c:	mov	r6, #2
     a40:	str	r6, [sp]
     a44:	ldr	r3, [pc, #92]	; aa8 <MyGame_Example_Stat_print_json_table+0x74>
     a48:	mov	r2, #0
     a4c:	mov	r8, #0
     a50:	mov	r9, #0
     a54:	mov	r4, r0
     a58:	mov	r5, r1
     a5c:	bl	0 <flatcc_json_printer_string_field>
     a60:	mov	r3, #3
     a64:	mov	r1, r5
     a68:	mov	r0, r4
     a6c:	str	r3, [sp]
     a70:	strd	r8, [sp, #8]
     a74:	ldr	r3, [pc, #48]	; aac <MyGame_Example_Stat_print_json_table+0x78>
     a78:	mov	r2, #1
     a7c:	bl	0 <flatcc_json_printer_int64_field>
     a80:	mov	ip, #0
     a84:	mov	r3, #5
     a88:	mov	r2, r6
     a8c:	stm	sp, {r3, ip}
     a90:	mov	r1, r5
     a94:	mov	r0, r4
     a98:	ldr	r3, [pc, #16]	; ab0 <MyGame_Example_Stat_print_json_table+0x7c>
     a9c:	bl	0 <flatcc_json_printer_uint16_field>
     aa0:	add	sp, sp, #16
     aa4:	pop	{r4, r5, r6, r8, r9, pc}
     aa8:	.word	0x000002fc
     aac:	.word	0x0000030c
     ab0:	.word	0x00000310

00000ab4 <MyGame_Example_Test_print_json_struct>:
     ab4:	push	{r4, r5, r6, lr}
     ab8:	sub	sp, sp, #8
     abc:	ldr	ip, [pc, #72]	; b0c <MyGame_Example_Test_print_json_struct+0x58>
     ac0:	mov	r4, #1
     ac4:	mov	r3, #0
     ac8:	mov	r5, r1
     acc:	mov	r2, r1
     ad0:	str	ip, [sp]
     ad4:	mov	r1, r3
     ad8:	str	r4, [sp, #4]
     adc:	mov	r6, r0
     ae0:	bl	0 <flatcc_json_printer_int16_struct_field>
     ae4:	ldr	r3, [pc, #36]	; b10 <MyGame_Example_Test_print_json_struct+0x5c>
     ae8:	str	r4, [sp, #4]
     aec:	str	r3, [sp]
     af0:	mov	r2, r5
     af4:	mov	r1, r4
     af8:	mov	r0, r6
     afc:	mov	r3, #2
     b00:	bl	0 <flatcc_json_printer_int8_struct_field>
     b04:	add	sp, sp, #8
     b08:	pop	{r4, r5, r6, pc}
     b0c:	.word	0x00000318
     b10:	.word	0x0000031c

00000b14 <MyGame_Example_Any_print_json_union>:
     b14:	ldrb	r3, [r1, #8]
     b18:	sub	r3, r3, #1
     b1c:	cmp	r3, #3
     b20:	ldrls	pc, [pc, r3, lsl #2]
     b24:	b	b58 <MyGame_Example_Any_print_json_union+0x44>
     b28:	.word	0x00000b50
     b2c:	.word	0x00000b48
     b30:	.word	0x00000b40
     b34:	.word	0x00000b38
     b38:	ldr	r2, [pc, #28]	; b5c <MyGame_Example_Any_print_json_union+0x48>
     b3c:	b	0 <flatcc_json_printer_union_table>
     b40:	ldr	r2, [pc, #24]	; b60 <MyGame_Example_Any_print_json_union+0x4c>
     b44:	b	0 <flatcc_json_printer_union_table>
     b48:	ldr	r2, [pc, #20]	; b64 <MyGame_Example_Any_print_json_union+0x50>
     b4c:	b	0 <flatcc_json_printer_union_table>
     b50:	ldr	r2, [pc, #16]	; b68 <MyGame_Example_Any_print_json_union+0x54>
     b54:	b	0 <flatcc_json_printer_union_table>
     b58:	bx	lr
	...

00000b6c <MyGame_Example_Alt_print_json_table>:
     b6c:	push	{r4, r5, lr}
     b70:	sub	sp, sp, #20
     b74:	ldr	r2, [pc, #112]	; bec <MyGame_Example_Alt_print_json_table+0x80>
     b78:	mov	r3, #6
     b7c:	str	r2, [sp, #4]
     b80:	str	r3, [sp]
     b84:	mov	r2, #0
     b88:	ldr	r3, [pc, #96]	; bf0 <MyGame_Example_Alt_print_json_table+0x84>
     b8c:	mov	r4, r0
     b90:	mov	r5, r1
     b94:	bl	0 <flatcc_json_printer_table_field>
     b98:	ldr	r2, [pc, #84]	; bf4 <MyGame_Example_Alt_print_json_table+0x88>
     b9c:	mov	r3, #5
     ba0:	mov	r1, r5
     ba4:	mov	r0, r4
     ba8:	str	r2, [sp, #4]
     bac:	str	r3, [sp]
     bb0:	mov	r2, #1
     bb4:	ldr	r3, [pc, #60]	; bf8 <MyGame_Example_Alt_print_json_table+0x8c>
     bb8:	bl	0 <flatcc_json_printer_table_field>
     bbc:	ldr	ip, [pc, #56]	; bfc <MyGame_Example_Alt_print_json_table+0x90>
     bc0:	ldr	r2, [pc, #56]	; c00 <MyGame_Example_Alt_print_json_table+0x94>
     bc4:	mov	r3, #7
     bc8:	str	r3, [sp]
     bcc:	stmib	sp, {r2, ip}
     bd0:	mov	r1, r5
     bd4:	mov	r0, r4
     bd8:	ldr	r3, [pc, #36]	; c04 <MyGame_Example_Alt_print_json_table+0x98>
     bdc:	mov	r2, #3
     be0:	bl	0 <flatcc_json_printer_union_vector_field>
     be4:	add	sp, sp, #20
     be8:	pop	{r4, r5, pc}
     bec:	.word	0x00000000
     bf0:	.word	0x00000320
     bf4:	.word	0x00000000
     bf8:	.word	0x00000328
	...
     c04:	.word	0x00000330

00000c08 <Fantasy_Movie_print_json_table>:
     c08:	push	{r4, r5, r6, r7, r8, r9, lr}
     c0c:	mov	r3, #14
     c10:	ldr	r5, [pc, #160]	; cb8 <Fantasy_Movie_print_json_table+0xb0>
     c14:	ldr	r4, [pc, #160]	; cbc <Fantasy_Movie_print_json_table+0xb4>
     c18:	sub	sp, sp, #20
     c1c:	mov	r6, r0
     c20:	mov	r7, r1
     c24:	stm	sp, {r3, r4, r5}
     c28:	mov	r9, #10
     c2c:	ldr	r3, [pc, #140]	; cc0 <Fantasy_Movie_print_json_table+0xb8>
     c30:	mov	r2, #1
     c34:	bl	0 <flatcc_json_printer_union_field>
     c38:	mov	r8, #9
     c3c:	mov	r1, r7
     c40:	mov	r0, r6
     c44:	stmib	sp, {r4, r5}
     c48:	str	r9, [sp]
     c4c:	ldr	r3, [pc, #112]	; cc4 <Fantasy_Movie_print_json_table+0xbc>
     c50:	mov	r2, #3
     c54:	bl	0 <flatcc_json_printer_union_field>
     c58:	mov	r1, r7
     c5c:	mov	r0, r6
     c60:	stmib	sp, {r4, r5}
     c64:	str	r8, [sp]
     c68:	ldr	r3, [pc, #88]	; cc8 <Fantasy_Movie_print_json_table+0xc0>
     c6c:	mov	r2, #5
     c70:	bl	0 <flatcc_json_printer_union_field>
     c74:	mov	r3, #5
     c78:	mov	r1, r7
     c7c:	mov	r0, r6
     c80:	str	r3, [sp]
     c84:	stmib	sp, {r4, r5}
     c88:	ldr	r3, [pc, #60]	; ccc <Fantasy_Movie_print_json_table+0xc4>
     c8c:	mov	r2, #7
     c90:	bl	0 <flatcc_json_printer_union_field>
     c94:	stmib	sp, {r4, r5}
     c98:	str	r9, [sp]
     c9c:	mov	r2, r8
     ca0:	mov	r1, r7
     ca4:	mov	r0, r6
     ca8:	ldr	r3, [pc, #32]	; cd0 <Fantasy_Movie_print_json_table+0xc8>
     cac:	bl	0 <flatcc_json_printer_union_vector_field>
     cb0:	add	sp, sp, #20
     cb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
	...
     cc0:	.word	0x00000338
     cc4:	.word	0x00000348
     cc8:	.word	0x00000354
     ccc:	.word	0x00000360
     cd0:	.word	0x00000368

00000cd4 <Fantasy_Character_print_json_union>:
     cd4:	ldrb	r3, [r1, #8]
     cd8:	cmp	r3, #9
     cdc:	beq	d14 <Fantasy_Character_print_json_union+0x40>
     ce0:	bls	cfc <Fantasy_Character_print_json_union+0x28>
     ce4:	cmp	r3, #11
     ce8:	beq	cf8 <Fantasy_Character_print_json_union+0x24>
     cec:	bcc	d14 <Fantasy_Character_print_json_union+0x40>
     cf0:	cmp	r3, #255	; 0xff
     cf4:	bne	d1c <Fantasy_Character_print_json_union+0x48>
     cf8:	b	0 <flatcc_json_printer_union_string>
     cfc:	cmp	r3, #2
     d00:	beq	d24 <Fantasy_Character_print_json_union+0x50>
     d04:	cmp	r3, #8
     d08:	bne	d20 <Fantasy_Character_print_json_union+0x4c>
     d0c:	ldr	r2, [pc, #24]	; d2c <Fantasy_Character_print_json_union+0x58>
     d10:	b	0 <flatcc_json_printer_union_struct>
     d14:	ldr	r2, [pc, #20]	; d30 <Fantasy_Character_print_json_union+0x5c>
     d18:	b	0 <flatcc_json_printer_union_struct>
     d1c:	bx	lr
     d20:	bx	lr
     d24:	ldr	r2, [pc, #8]	; d34 <Fantasy_Character_print_json_union+0x60>
     d28:	b	0 <flatcc_json_printer_union_table>
	...

00000d38 <Fantasy_BookReader_print_json_struct>:
     d38:	push	{lr}		; (str lr, [sp, #-4]!)
     d3c:	sub	sp, sp, #12
     d40:	ldr	lr, [pc, #32]	; d68 <Fantasy_BookReader_print_json_struct+0x30>
     d44:	mov	ip, #10
     d48:	mov	r3, #0
     d4c:	mov	r2, r1
     d50:	str	lr, [sp]
     d54:	str	ip, [sp, #4]
     d58:	mov	r1, r3
     d5c:	bl	0 <flatcc_json_printer_int32_struct_field>
     d60:	add	sp, sp, #12
     d64:	pop	{pc}		; (ldr pc, [sp], #4)
     d68:	.word	0x00000374

00000d6c <Fantasy_Rapunzel_print_json_struct>:
     d6c:	push	{lr}		; (str lr, [sp, #-4]!)
     d70:	sub	sp, sp, #12
     d74:	ldr	lr, [pc, #32]	; d9c <Fantasy_Rapunzel_print_json_struct+0x30>
     d78:	mov	ip, #11
     d7c:	mov	r3, #0
     d80:	mov	r2, r1
     d84:	str	lr, [sp]
     d88:	str	ip, [sp, #4]
     d8c:	mov	r1, r3
     d90:	bl	0 <flatcc_json_printer_uint16_struct_field>
     d94:	add	sp, sp, #12
     d98:	pop	{pc}		; (ldr pc, [sp], #4)
     d9c:	.word	0x00000380

00000da0 <Fantasy_Character_print_json_union_type>:
     da0:	cmp	r1, #9
     da4:	mov	r3, r0
     da8:	beq	e20 <Fantasy_Character_print_json_union_type+0x80>
     dac:	bls	dd0 <Fantasy_Character_print_json_union_type+0x30>
     db0:	cmp	r1, #11
     db4:	beq	dec <Fantasy_Character_print_json_union_type+0x4c>
     db8:	bcc	e14 <Fantasy_Character_print_json_union_type+0x74>
     dbc:	cmp	r1, #255	; 0xff
     dc0:	bne	df8 <Fantasy_Character_print_json_union_type+0x58>
     dc4:	mov	r2, #6
     dc8:	ldr	r1, [pc, #92]	; e2c <Fantasy_Character_print_json_union_type+0x8c>
     dcc:	b	0 <flatcc_json_printer_enum>
     dd0:	cmp	r1, #2
     dd4:	beq	e08 <Fantasy_Character_print_json_union_type+0x68>
     dd8:	cmp	r1, #8
     ddc:	bne	df8 <Fantasy_Character_print_json_union_type+0x58>
     de0:	mov	r2, r1
     de4:	ldr	r1, [pc, #68]	; e30 <Fantasy_Character_print_json_union_type+0x90>
     de8:	b	0 <flatcc_json_printer_enum>
     dec:	mov	r2, #5
     df0:	ldr	r1, [pc, #60]	; e34 <Fantasy_Character_print_json_union_type+0x94>
     df4:	b	0 <flatcc_json_printer_enum>
     df8:	mov	r0, r3
     dfc:	mov	r2, #4
     e00:	ldr	r1, [pc, #48]	; e38 <Fantasy_Character_print_json_union_type+0x98>
     e04:	b	0 <flatcc_json_printer_enum>
     e08:	mov	r2, #5
     e0c:	ldr	r1, [pc, #40]	; e3c <Fantasy_Character_print_json_union_type+0x9c>
     e10:	b	0 <flatcc_json_printer_enum>
     e14:	mov	r2, #7
     e18:	ldr	r1, [pc, #32]	; e40 <Fantasy_Character_print_json_union_type+0xa0>
     e1c:	b	0 <flatcc_json_printer_enum>
     e20:	mov	r2, #5
     e24:	ldr	r1, [pc, #24]	; e44 <Fantasy_Character_print_json_union_type+0xa4>
     e28:	b	0 <flatcc_json_printer_enum>
     e2c:	.word	0x000003b8
     e30:	.word	0x00000394
     e34:	.word	0x000003b0
     e38:	.word	0x000003c0
     e3c:	.word	0x0000038c
     e40:	.word	0x000003a8
     e44:	.word	0x000003a0

00000e48 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
     e48:	push	{r4, r5, r6, r7, lr}
     e4c:	mov	r3, #5
     e50:	ldr	r7, [pc, #124]	; ed4 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0x8c>
     e54:	sub	sp, sp, #20
     e58:	mov	r4, #2
     e5c:	mov	r2, #0
     e60:	stm	sp, {r3, r4, r7}
     e64:	mov	r5, r0
     e68:	ldr	r3, [pc, #104]	; ed8 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0x90>
     e6c:	mov	r6, r1
     e70:	bl	0 <flatcc_json_printer_int8_enum_field>
     e74:	mov	r3, #6
     e78:	mov	r1, r6
     e7c:	mov	r0, r5
     e80:	str	r3, [sp]
     e84:	stmib	sp, {r4, r7}
     e88:	ldr	r3, [pc, #76]	; edc <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0x94>
     e8c:	mov	r2, #1
     e90:	bl	0 <flatcc_json_printer_int8_enum_field>
     e94:	mov	r2, r4
     e98:	mov	r1, r6
     e9c:	mov	r0, r5
     ea0:	str	r4, [sp, #4]
     ea4:	str	r4, [sp]
     ea8:	ldr	r3, [pc, #48]	; ee0 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0x98>
     eac:	bl	0 <flatcc_json_printer_uint8_field>
     eb0:	mov	r2, #3
     eb4:	str	r4, [sp, #4]
     eb8:	mov	r1, r6
     ebc:	mov	r0, r5
     ec0:	str	r2, [sp]
     ec4:	ldr	r3, [pc, #24]	; ee4 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0x9c>
     ec8:	bl	0 <flatcc_json_printer_uint8_field>
     ecc:	add	sp, sp, #20
     ed0:	pop	{r4, r5, r6, r7, pc}
     ed4:	.word	0x00000000
     ed8:	.word	0x0000011c
     edc:	.word	0x000003c8
     ee0:	.word	0x000003d0
     ee4:	.word	0x000003d4

00000ee8 <MyGame_Example_Color_print_json_enum>:
     ee8:	push	{r4, r5, r6, r7, r8, lr}
     eec:	uxtb	r4, r1
     ef0:	tst	r4, #244	; 0xf4
     ef4:	movne	r5, #1
     ef8:	moveq	r5, #0
     efc:	cmp	r4, #0
     f00:	orreq	r5, r5, #1
     f04:	cmp	r5, #0
     f08:	beq	f14 <MyGame_Example_Color_print_json_enum+0x2c>
     f0c:	pop	{r4, r5, r6, r7, r8, lr}
     f10:	b	0 <flatcc_json_printer_int8>
     f14:	sub	r3, r4, #1
     f18:	tst	r3, r4
     f1c:	movne	r7, #1
     f20:	moveq	r7, #0
     f24:	mov	r1, r7
     f28:	mov	r6, r0
     f2c:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     f30:	ands	r1, r4, #1
     f34:	bne	f58 <MyGame_Example_Color_print_json_enum+0x70>
     f38:	tst	r4, #2
     f3c:	bne	f88 <MyGame_Example_Color_print_json_enum+0xa0>
     f40:	tst	r4, #8
     f44:	bne	f74 <MyGame_Example_Color_print_json_enum+0x8c>
     f48:	mov	r1, r7
     f4c:	mov	r0, r6
     f50:	pop	{r4, r5, r6, r7, r8, lr}
     f54:	b	0 <flatcc_json_printer_delimit_enum_flags>
     f58:	mov	r1, r5
     f5c:	mov	r3, #3
     f60:	ldr	r2, [pc, #60]	; fa4 <MyGame_Example_Color_print_json_enum+0xbc>
     f64:	mov	r0, r6
     f68:	bl	0 <flatcc_json_printer_enum_flag>
     f6c:	mov	r1, #1
     f70:	b	f38 <MyGame_Example_Color_print_json_enum+0x50>
     f74:	mov	r3, #4
     f78:	ldr	r2, [pc, #40]	; fa8 <MyGame_Example_Color_print_json_enum+0xc0>
     f7c:	mov	r0, r6
     f80:	bl	0 <flatcc_json_printer_enum_flag>
     f84:	b	f48 <MyGame_Example_Color_print_json_enum+0x60>
     f88:	add	r5, r1, #1
     f8c:	mov	r3, #5
     f90:	ldr	r2, [pc, #20]	; fac <MyGame_Example_Color_print_json_enum+0xc4>
     f94:	mov	r0, r6
     f98:	bl	0 <flatcc_json_printer_enum_flag>
     f9c:	mov	r1, r5
     fa0:	b	f40 <MyGame_Example_Color_print_json_enum+0x58>
     fa4:	.word	0x000003d8
     fa8:	.word	0x000003e4
     fac:	.word	0x000003dc

00000fb0 <MyGame_Example_Vec3_print_json_struct>:
     fb0:	push	{r4, r5, r6, lr}
     fb4:	sub	sp, sp, #16
     fb8:	ldr	ip, [pc, #216]	; 1098 <MyGame_Example_Vec3_print_json_struct+0xe8>
     fbc:	mov	r6, #1
     fc0:	mov	r3, #0
     fc4:	mov	r4, r1
     fc8:	str	ip, [sp]
     fcc:	mov	r2, r1
     fd0:	str	r6, [sp, #4]
     fd4:	mov	r1, r3
     fd8:	mov	r5, r0
     fdc:	bl	0 <flatcc_json_printer_float_struct_field>
     fe0:	ldr	r3, [pc, #180]	; 109c <MyGame_Example_Vec3_print_json_struct+0xec>
     fe4:	str	r6, [sp, #4]
     fe8:	mov	r2, r4
     fec:	mov	r1, r6
     ff0:	mov	r0, r5
     ff4:	str	r3, [sp]
     ff8:	mov	r3, #4
     ffc:	bl	0 <flatcc_json_printer_float_struct_field>
    1000:	ldr	r3, [pc, #152]	; 10a0 <MyGame_Example_Vec3_print_json_struct+0xf0>
    1004:	str	r6, [sp, #4]
    1008:	mov	r2, r4
    100c:	mov	r0, r5
    1010:	str	r3, [sp]
    1014:	mov	r1, #2
    1018:	mov	r3, #8
    101c:	bl	0 <flatcc_json_printer_float_struct_field>
    1020:	ldr	r3, [pc, #124]	; 10a4 <MyGame_Example_Vec3_print_json_struct+0xf4>
    1024:	mov	r6, #5
    1028:	mov	r2, r4
    102c:	mov	r0, r5
    1030:	stm	sp, {r3, r6}
    1034:	mov	r1, #3
    1038:	mov	r3, #16
    103c:	bl	0 <flatcc_json_printer_double_struct_field>
    1040:	ldr	r1, [pc, #96]	; 10a8 <MyGame_Example_Vec3_print_json_struct+0xf8>
    1044:	ldr	r3, [pc, #96]	; 10ac <MyGame_Example_Vec3_print_json_struct+0xfc>
    1048:	mov	r2, r4
    104c:	mov	r0, r5
    1050:	str	r1, [sp, #8]
    1054:	str	r3, [sp]
    1058:	str	r6, [sp, #4]
    105c:	mov	r3, #24
    1060:	mov	r1, #4
    1064:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
    1068:	ldr	ip, [pc, #64]	; 10b0 <MyGame_Example_Vec3_print_json_struct+0x100>
    106c:	ldr	r3, [pc, #64]	; 10b4 <MyGame_Example_Vec3_print_json_struct+0x104>
    1070:	str	r6, [sp, #4]
    1074:	str	r3, [sp]
    1078:	mov	r2, r4
    107c:	mov	r1, r6
    1080:	mov	r0, r5
    1084:	str	ip, [sp, #8]
    1088:	mov	r3, #26
    108c:	bl	0 <flatcc_json_printer_embedded_struct_field>
    1090:	add	sp, sp, #16
    1094:	pop	{r4, r5, r6, pc}
    1098:	.word	0x000003ec
    109c:	.word	0x000003f0
    10a0:	.word	0x000003f4
    10a4:	.word	0x000003f8
    10a8:	.word	0x00000000
    10ac:	.word	0x00000400
    10b0:	.word	0x00000000
    10b4:	.word	0x00000408

000010b8 <Fantasy_Character_parse_json_enum>:
    10b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    10bc:	mov	r4, r1
    10c0:	sub	sp, sp, #12
    10c4:	mov	r1, r2
    10c8:	mov	r5, r0
    10cc:	mov	r0, r4
    10d0:	mov	sl, r2
    10d4:	mov	fp, r3
    10d8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    10dc:	add	r3, pc, #628	; 0x274
    10e0:	ldrd	r2, [r3]
    10e4:	cmp	r1, r3
    10e8:	cmpeq	r0, r2
    10ec:	bhi	1160 <Fantasy_Character_parse_json_enum+0xa8>
    10f0:	add	r3, pc, #616	; 0x268
    10f4:	ldrd	r2, [r3]
    10f8:	cmp	r1, r3
    10fc:	cmpeq	r0, r2
    1100:	bls	1228 <Fantasy_Character_parse_json_enum+0x170>
    1104:	add	r7, pc, #604	; 0x25c
    1108:	ldrd	r6, [r7]
    110c:	and	r8, r0, #-16777216	; 0xff000000
    1110:	cmp	r1, r7
    1114:	cmpeq	r8, r6
    1118:	beq	12fc <Fantasy_Character_parse_json_enum+0x244>
    111c:	add	r3, pc, #588	; 0x24c
    1120:	ldrd	r2, [r3]
    1124:	bic	r0, r0, #255	; 0xff
    1128:	cmp	r1, r3
    112c:	cmpeq	r0, r2
    1130:	bne	118c <Fantasy_Character_parse_json_enum+0xd4>
    1134:	ldr	r3, [sp, #52]	; 0x34
    1138:	mov	r2, sl
    113c:	str	r3, [sp]
    1140:	mov	r0, r5
    1144:	mov	r3, #7
    1148:	mov	r1, r4
    114c:	bl	0 <flatcc_json_parser_match_constant>
    1150:	cmp	r4, r0
    1154:	movne	r6, #10
    1158:	bne	1268 <Fantasy_Character_parse_json_enum+0x1b0>
    115c:	b	118c <Fantasy_Character_parse_json_enum+0xd4>
    1160:	add	r3, pc, #528	; 0x210
    1164:	ldrd	r2, [r3]
    1168:	cmp	r1, r3
    116c:	cmpeq	r0, r2
    1170:	bhi	1198 <Fantasy_Character_parse_json_enum+0xe0>
    1174:	add	r3, pc, #516	; 0x204
    1178:	ldrd	r2, [r3]
    117c:	mov	r0, #0
    1180:	cmp	r1, r3
    1184:	cmpeq	r0, r2
    1188:	beq	12d0 <Fantasy_Character_parse_json_enum+0x218>
    118c:	mov	r0, r4
    1190:	add	sp, sp, #12
    1194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1198:	add	r3, pc, #488	; 0x1e8
    119c:	ldrd	r2, [r3]
    11a0:	cmp	r1, r3
    11a4:	cmpeq	r0, r2
    11a8:	bls	128c <Fantasy_Character_parse_json_enum+0x1d4>
    11ac:	add	r7, pc, #476	; 0x1dc
    11b0:	ldrd	r6, [r7]
    11b4:	ldr	r2, [pc, #500]	; 13b0 <Fantasy_Character_parse_json_enum+0x2f8>
    11b8:	mvn	r3, #0
    11bc:	and	r3, r3, r1
    11c0:	and	r2, r2, r0
    11c4:	cmp	r3, r7
    11c8:	cmpeq	r2, r6
    11cc:	beq	1328 <Fantasy_Character_parse_json_enum+0x270>
    11d0:	add	r3, pc, #448	; 0x1c0
    11d4:	ldrd	r2, [r3]
    11d8:	cmp	r1, r3
    11dc:	cmpeq	r0, r2
    11e0:	bne	118c <Fantasy_Character_parse_json_enum+0xd4>
    11e4:	ldr	r3, [sp, #52]	; 0x34
    11e8:	mov	r2, sl
    11ec:	str	r3, [sp]
    11f0:	mov	r0, r5
    11f4:	mov	r3, #8
    11f8:	mov	r1, r4
    11fc:	bl	0 <flatcc_json_parser_match_constant>
    1200:	cmp	r4, r0
    1204:	beq	118c <Fantasy_Character_parse_json_enum+0xd4>
    1208:	ldr	r2, [sp, #48]	; 0x30
    120c:	mov	r4, r0
    1210:	mov	r1, #0
    1214:	mov	r0, #8
    1218:	mov	r3, #0
    121c:	strd	r0, [r2]
    1220:	str	r3, [fp]
    1224:	b	118c <Fantasy_Character_parse_json_enum+0xd4>
    1228:	add	r3, pc, #368	; 0x170
    122c:	ldrd	r2, [r3]
    1230:	and	r0, r0, #-16777216	; 0xff000000
    1234:	cmp	r1, r3
    1238:	cmpeq	r0, r2
    123c:	bne	118c <Fantasy_Character_parse_json_enum+0xd4>
    1240:	ldr	r3, [sp, #52]	; 0x34
    1244:	mov	r2, sl
    1248:	str	r3, [sp]
    124c:	mov	r0, r5
    1250:	mov	r3, #5
    1254:	mov	r1, r4
    1258:	bl	0 <flatcc_json_parser_match_constant>
    125c:	cmp	r4, r0
    1260:	movne	r6, #9
    1264:	beq	118c <Fantasy_Character_parse_json_enum+0xd4>
    1268:	ldr	r2, [sp, #48]	; 0x30
    126c:	mov	r7, #0
    1270:	mov	r3, #0
    1274:	mov	r4, r0
    1278:	strd	r6, [r2]
    127c:	mov	r0, r4
    1280:	str	r3, [fp]
    1284:	add	sp, sp, #12
    1288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    128c:	add	r3, pc, #276	; 0x114
    1290:	ldrd	r2, [r3]
    1294:	and	r0, r0, #-16777216	; 0xff000000
    1298:	cmp	r1, r3
    129c:	cmpeq	r0, r2
    12a0:	bne	118c <Fantasy_Character_parse_json_enum+0xd4>
    12a4:	ldr	r3, [sp, #52]	; 0x34
    12a8:	mov	r2, sl
    12ac:	str	r3, [sp]
    12b0:	mov	r0, r5
    12b4:	mov	r3, #5
    12b8:	mov	r1, r4
    12bc:	bl	0 <flatcc_json_parser_match_constant>
    12c0:	cmp	r4, r0
    12c4:	beq	118c <Fantasy_Character_parse_json_enum+0xd4>
    12c8:	mov	r6, #11
    12cc:	b	1268 <Fantasy_Character_parse_json_enum+0x1b0>
    12d0:	ldr	r3, [sp, #52]	; 0x34
    12d4:	mov	r2, sl
    12d8:	str	r3, [sp]
    12dc:	mov	r0, r5
    12e0:	mov	r3, #4
    12e4:	mov	r1, r4
    12e8:	bl	0 <flatcc_json_parser_match_constant>
    12ec:	cmp	r4, r0
    12f0:	movne	r6, #0
    12f4:	bne	1268 <Fantasy_Character_parse_json_enum+0x1b0>
    12f8:	b	118c <Fantasy_Character_parse_json_enum+0xd4>
    12fc:	ldr	r3, [sp, #52]	; 0x34
    1300:	mov	r2, sl
    1304:	str	r3, [sp]
    1308:	mov	r0, r5
    130c:	mov	r3, #5
    1310:	mov	r1, r4
    1314:	bl	0 <flatcc_json_parser_match_constant>
    1318:	cmp	r4, r0
    131c:	movne	r6, #2
    1320:	bne	1268 <Fantasy_Character_parse_json_enum+0x1b0>
    1324:	b	118c <Fantasy_Character_parse_json_enum+0xd4>
    1328:	ldr	r3, [sp, #52]	; 0x34
    132c:	mov	r2, sl
    1330:	str	r3, [sp]
    1334:	mov	r0, r5
    1338:	mov	r3, #6
    133c:	mov	r1, r4
    1340:	bl	0 <flatcc_json_parser_match_constant>
    1344:	cmp	r4, r0
    1348:	movne	r6, #255	; 0xff
    134c:	bne	1268 <Fantasy_Character_parse_json_enum+0x1b0>
    1350:	b	118c <Fantasy_Character_parse_json_enum+0xd4>
    1354:	nop			; (mov r0, r0)
    1358:	.word	0xffffffff
    135c:	.word	0x4e4f4e44
    1360:	.word	0x46616dff
    1364:	.word	0x426f6f6b
    1368:	.word	0x6e000000
    136c:	.word	0x4d754c61
    1370:	.word	0x46616e00
    1374:	.word	0x426f6f6b
    1378:	.word	0x71ffffff
    137c:	.word	0x4f746865
    1380:	.word	0x00000000
    1384:	.word	0x4e4f4e45
    1388:	.word	0x6e7a656b
    138c:	.word	0x52617075
    1390:	.word	0x65640000
    1394:	.word	0x556e7573
    1398:	.word	0x6e7a656c
    139c:	.word	0x52617075
    13a0:	.word	0x65000000
    13a4:	.word	0x42656c6c
    13a8:	.word	0x72000000
    13ac:	.word	0x4f746865
    13b0:	.word	0xffff0000

000013b4 <MyGame_Example_Any_parse_json_enum>:
    13b4:	push	{r4, r5, r6, r7, r8, r9, lr}
    13b8:	mov	r6, r1
    13bc:	sub	sp, sp, #12
    13c0:	mov	r1, r2
    13c4:	mov	r8, r0
    13c8:	mov	r0, r6
    13cc:	mov	r7, r2
    13d0:	mov	r9, r3
    13d4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    13d8:	add	r3, pc, #464	; 0x1d0
    13dc:	ldrd	r2, [r3]
    13e0:	cmp	r1, r3
    13e4:	cmpeq	r0, r2
    13e8:	mov	r5, r1
    13ec:	bhi	1418 <MyGame_Example_Any_parse_json_enum+0x64>
    13f0:	add	r3, pc, #448	; 0x1c0
    13f4:	ldrd	r2, [r3]
    13f8:	bic	r5, r1, #255	; 0xff
    13fc:	mov	r4, #0
    1400:	cmp	r5, r3
    1404:	cmpeq	r4, r2
    1408:	beq	14e8 <MyGame_Example_Any_parse_json_enum+0x134>
    140c:	mov	r0, r6
    1410:	add	sp, sp, #12
    1414:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1418:	add	r3, pc, #416	; 0x1a0
    141c:	ldrd	r2, [r3]
    1420:	mov	r4, r0
    1424:	cmp	r1, r3
    1428:	cmpeq	r0, r2
    142c:	beq	152c <MyGame_Example_Any_parse_json_enum+0x178>
    1430:	add	r3, pc, #400	; 0x190
    1434:	ldrd	r2, [r3]
    1438:	bic	r0, r0, #255	; 0xff
    143c:	cmp	r1, r3
    1440:	cmpeq	r0, r2
    1444:	beq	1558 <MyGame_Example_Any_parse_json_enum+0x1a4>
    1448:	add	r3, pc, #384	; 0x180
    144c:	ldrd	r2, [r3]
    1450:	mov	r0, #0
    1454:	cmp	r5, r3
    1458:	cmpeq	r0, r2
    145c:	beq	1584 <MyGame_Example_Any_parse_json_enum+0x1d0>
    1460:	add	r3, pc, #368	; 0x170
    1464:	ldrd	r2, [r3]
    1468:	cmp	r5, r3
    146c:	cmpeq	r4, r2
    1470:	bne	140c <MyGame_Example_Any_parse_json_enum+0x58>
    1474:	mov	r1, r7
    1478:	add	r0, r6, #8
    147c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1480:	add	r3, pc, #344	; 0x158
    1484:	ldrd	r2, [r3]
    1488:	cmp	r1, r3
    148c:	cmpeq	r0, r2
    1490:	bne	140c <MyGame_Example_Any_parse_json_enum+0x58>
    1494:	add	r4, r6, #16
    1498:	mov	r0, r4
    149c:	mov	r1, r7
    14a0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    14a4:	add	r3, pc, #316	; 0x13c
    14a8:	ldrd	r2, [r3]
    14ac:	bic	r0, r0, #255	; 0xff
    14b0:	cmp	r1, r3
    14b4:	cmpeq	r0, r2
    14b8:	bne	140c <MyGame_Example_Any_parse_json_enum+0x58>
    14bc:	ldr	r3, [sp, #44]	; 0x2c
    14c0:	mov	r2, r7
    14c4:	str	r3, [sp]
    14c8:	mov	r0, r8
    14cc:	mov	r3, #7
    14d0:	mov	r1, r4
    14d4:	bl	0 <flatcc_json_parser_match_constant>
    14d8:	cmp	r4, r0
    14dc:	beq	140c <MyGame_Example_Any_parse_json_enum+0x58>
    14e0:	mov	r4, #2
    14e4:	b	1510 <MyGame_Example_Any_parse_json_enum+0x15c>
    14e8:	ldr	r3, [sp, #44]	; 0x2c
    14ec:	mov	r2, r7
    14f0:	str	r3, [sp]
    14f4:	mov	r0, r8
    14f8:	mov	r3, #3
    14fc:	mov	r1, r6
    1500:	bl	0 <flatcc_json_parser_match_constant>
    1504:	cmp	r6, r0
    1508:	movne	r4, #4
    150c:	beq	1410 <MyGame_Example_Any_parse_json_enum+0x5c>
    1510:	ldr	r2, [sp, #40]	; 0x28
    1514:	mov	r5, #0
    1518:	mov	r3, #0
    151c:	strd	r4, [r2]
    1520:	str	r3, [r9]
    1524:	add	sp, sp, #12
    1528:	pop	{r4, r5, r6, r7, r8, r9, pc}
    152c:	ldr	r3, [sp, #44]	; 0x2c
    1530:	mov	r2, r7
    1534:	str	r3, [sp]
    1538:	mov	r0, r8
    153c:	mov	r3, #8
    1540:	mov	r1, r6
    1544:	bl	0 <flatcc_json_parser_match_constant>
    1548:	cmp	r6, r0
    154c:	movne	r4, #3
    1550:	bne	1510 <MyGame_Example_Any_parse_json_enum+0x15c>
    1554:	b	140c <MyGame_Example_Any_parse_json_enum+0x58>
    1558:	ldr	r3, [sp, #44]	; 0x2c
    155c:	mov	r2, r7
    1560:	str	r3, [sp]
    1564:	mov	r1, r6
    1568:	mov	r3, #7
    156c:	mov	r0, r8
    1570:	bl	0 <flatcc_json_parser_match_constant>
    1574:	cmp	r6, r0
    1578:	movne	r4, #1
    157c:	bne	1510 <MyGame_Example_Any_parse_json_enum+0x15c>
    1580:	b	1448 <MyGame_Example_Any_parse_json_enum+0x94>
    1584:	ldr	r3, [sp, #44]	; 0x2c
    1588:	mov	r2, r7
    158c:	str	r3, [sp]
    1590:	mov	r0, r8
    1594:	mov	r3, #4
    1598:	mov	r1, r6
    159c:	bl	0 <flatcc_json_parser_match_constant>
    15a0:	cmp	r6, r0
    15a4:	movne	r4, #0
    15a8:	bne	1510 <MyGame_Example_Any_parse_json_enum+0x15c>
    15ac:	b	140c <MyGame_Example_Any_parse_json_enum+0x58>
    15b0:	.word	0x746571ff
    15b4:	.word	0x4d6f6e73
    15b8:	.word	0x00000000
    15bc:	.word	0x416c7400
    15c0:	.word	0x74657232
    15c4:	.word	0x4d6f6e73
    15c8:	.word	0x74657200
    15cc:	.word	0x4d6f6e73
    15d0:	.word	0x00000000
    15d4:	.word	0x4e4f4e45
    15d8:	.word	0x53696d70
    15dc:	.word	0x54657374
    15e0:	.word	0x626c6557
    15e4:	.word	0x6c655461
    15e8:	.word	0x6e756d00
    15ec:	.word	0x69746845

000015f0 <MyGame_Example_hex_enum_parse_json_enum>:
    15f0:	push	{r4, r5, r6, r7, r8, r9, lr}
    15f4:	mov	r4, r1
    15f8:	sub	sp, sp, #12
    15fc:	mov	r1, r2
    1600:	mov	r6, r0
    1604:	mov	r0, r4
    1608:	mov	r5, r2
    160c:	mov	r7, r3
    1610:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1614:	add	r3, pc, #316	; 0x13c
    1618:	ldrd	r2, [r3]
    161c:	cmp	r1, r3
    1620:	cmpeq	r0, r2
    1624:	bhi	164c <MyGame_Example_hex_enum_parse_json_enum+0x5c>
    1628:	add	r3, pc, #304	; 0x130
    162c:	ldrd	r2, [r3]
    1630:	mov	r0, #0
    1634:	cmp	r1, r3
    1638:	cmpeq	r0, r2
    163c:	beq	16cc <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    1640:	mov	r0, r4
    1644:	add	sp, sp, #12
    1648:	pop	{r4, r5, r6, r7, r8, r9, pc}
    164c:	add	r9, pc, #276	; 0x114
    1650:	ldrd	r8, [r9]
    1654:	ldr	r2, [pc, #292]	; 1780 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    1658:	mvn	r3, #0
    165c:	and	r3, r3, r1
    1660:	and	r2, r2, r0
    1664:	cmp	r3, r9
    1668:	cmpeq	r2, r8
    166c:	beq	1710 <MyGame_Example_hex_enum_parse_json_enum+0x120>
    1670:	add	r3, pc, #248	; 0xf8
    1674:	ldrd	r2, [r3]
    1678:	mov	r0, #0
    167c:	cmp	r1, r3
    1680:	cmpeq	r0, r2
    1684:	bne	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    1688:	ldr	r3, [sp, #44]	; 0x2c
    168c:	mov	r2, r5
    1690:	str	r3, [sp]
    1694:	mov	r0, r6
    1698:	mov	r3, #4
    169c:	mov	r1, r4
    16a0:	bl	0 <flatcc_json_parser_match_constant>
    16a4:	cmp	r4, r0
    16a8:	beq	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    16ac:	add	r9, pc, #196	; 0xc4
    16b0:	ldrd	r8, [r9]
    16b4:	ldr	r2, [sp, #40]	; 0x28
    16b8:	mov	r3, #0
    16bc:	mov	r4, r0
    16c0:	strd	r8, [r2]
    16c4:	str	r3, [r7]
    16c8:	b	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    16cc:	ldr	r3, [sp, #44]	; 0x2c
    16d0:	mov	r2, r5
    16d4:	str	r3, [sp]
    16d8:	mov	r0, r6
    16dc:	mov	r3, #4
    16e0:	mov	r1, r4
    16e4:	bl	0 <flatcc_json_parser_match_constant>
    16e8:	cmp	r4, r0
    16ec:	beq	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    16f0:	ldr	r2, [sp, #40]	; 0x28
    16f4:	mov	r8, #3
    16f8:	mov	r9, #0
    16fc:	mov	r3, #0
    1700:	strd	r8, [r2]
    1704:	mov	r4, r0
    1708:	str	r3, [r7]
    170c:	b	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    1710:	ldr	r3, [sp, #44]	; 0x2c
    1714:	mov	r2, r5
    1718:	str	r3, [sp]
    171c:	mov	r0, r6
    1720:	mov	r3, #6
    1724:	mov	r1, r4
    1728:	bl	0 <flatcc_json_parser_match_constant>
    172c:	cmp	r4, r0
    1730:	beq	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    1734:	ldr	r2, [sp, #40]	; 0x28
    1738:	mvn	r8, #1
    173c:	mvn	r9, #0
    1740:	mov	r3, #1
    1744:	strd	r8, [r2]
    1748:	mov	r4, r0
    174c:	str	r3, [r7]
    1750:	b	1640 <MyGame_Example_hex_enum_parse_json_enum+0x50>
    1754:	nop			; (mov r0, r0)
    1758:	.word	0xffffffff
    175c:	.word	0x68657831
    1760:	.word	0x00000000
    1764:	.word	0x68657831
    1768:	.word	0x65670000
    176c:	.word	0x6865786e
    1770:	.word	0x00000000
    1774:	.word	0x68657832
    1778:	.word	0x7eafbeaf
    177c:	.word	0x00000000
    1780:	.word	0xffff0000

00001784 <MyGame_Example_int_enum_parse_json_enum>:
    1784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1788:	mov	r4, r1
    178c:	sub	sp, sp, #12
    1790:	mov	r1, r2
    1794:	mov	r5, r0
    1798:	mov	r0, r4
    179c:	mov	sl, r2
    17a0:	mov	fp, r3
    17a4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    17a8:	add	r3, pc, #408	; 0x198
    17ac:	ldrd	r2, [r3]
    17b0:	cmp	r1, r3
    17b4:	cmpeq	r0, r2
    17b8:	bhi	17e0 <MyGame_Example_int_enum_parse_json_enum+0x5c>
    17bc:	add	r3, pc, #396	; 0x18c
    17c0:	ldrd	r2, [r3]
    17c4:	mov	r0, #0
    17c8:	cmp	r1, r3
    17cc:	cmpeq	r0, r2
    17d0:	beq	18b8 <MyGame_Example_int_enum_parse_json_enum+0x134>
    17d4:	mov	r0, r4
    17d8:	add	sp, sp, #12
    17dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17e0:	add	r3, pc, #368	; 0x170
    17e4:	ldrd	r2, [r3]
    17e8:	cmp	r1, r3
    17ec:	cmpeq	r0, r2
    17f0:	bls	1874 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    17f4:	add	r7, pc, #356	; 0x164
    17f8:	ldrd	r6, [r7]
    17fc:	bic	r8, r0, #255	; 0xff
    1800:	cmp	r1, r7
    1804:	cmpeq	r8, r6
    1808:	beq	1904 <MyGame_Example_int_enum_parse_json_enum+0x180>
    180c:	add	r7, pc, #340	; 0x154
    1810:	ldrd	r6, [r7]
    1814:	ldr	r2, [pc, #348]	; 1978 <MyGame_Example_int_enum_parse_json_enum+0x1f4>
    1818:	mvn	r3, #0
    181c:	and	r1, r1, r3
    1820:	and	r0, r0, r2
    1824:	cmp	r1, r7
    1828:	cmpeq	r0, r6
    182c:	bne	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    1830:	ldr	r3, [sp, #52]	; 0x34
    1834:	mov	r2, sl
    1838:	str	r3, [sp]
    183c:	mov	r0, r5
    1840:	mov	r3, #6
    1844:	mov	r1, r4
    1848:	bl	0 <flatcc_json_parser_match_constant>
    184c:	cmp	r4, r0
    1850:	beq	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    1854:	ldr	r2, [sp, #48]	; 0x30
    1858:	mov	r4, r0
    185c:	mvn	r1, #0
    1860:	mvn	r0, #1
    1864:	mov	r3, #1
    1868:	strd	r0, [r2]
    186c:	str	r3, [fp]
    1870:	b	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    1874:	add	r3, pc, #244	; 0xf4
    1878:	ldrd	r2, [r3]
    187c:	mov	r0, #0
    1880:	cmp	r1, r3
    1884:	cmpeq	r0, r2
    1888:	bne	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    188c:	ldr	r3, [sp, #52]	; 0x34
    1890:	mov	r2, sl
    1894:	str	r3, [sp]
    1898:	mov	r0, r5
    189c:	mov	r3, #4
    18a0:	mov	r1, r4
    18a4:	bl	0 <flatcc_json_parser_match_constant>
    18a8:	cmp	r4, r0
    18ac:	beq	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    18b0:	mov	r6, #42	; 0x2a
    18b4:	b	18e0 <MyGame_Example_int_enum_parse_json_enum+0x15c>
    18b8:	ldr	r3, [sp, #52]	; 0x34
    18bc:	mov	r2, sl
    18c0:	str	r3, [sp]
    18c4:	mov	r0, r5
    18c8:	mov	r3, #4
    18cc:	mov	r1, r4
    18d0:	bl	0 <flatcc_json_parser_match_constant>
    18d4:	cmp	r4, r0
    18d8:	movne	r6, #2
    18dc:	beq	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    18e0:	ldr	r2, [sp, #48]	; 0x30
    18e4:	mov	r7, #0
    18e8:	mov	r3, #0
    18ec:	mov	r4, r0
    18f0:	strd	r6, [r2]
    18f4:	mov	r0, r4
    18f8:	str	r3, [fp]
    18fc:	add	sp, sp, #12
    1900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1904:	ldr	r3, [sp, #52]	; 0x34
    1908:	mov	r2, sl
    190c:	str	r3, [sp]
    1910:	mov	r0, r5
    1914:	mov	r3, #7
    1918:	mov	r1, r4
    191c:	bl	0 <flatcc_json_parser_match_constant>
    1920:	cmp	r4, r0
    1924:	beq	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    1928:	ldr	r2, [sp, #48]	; 0x30
    192c:	mvn	r6, #0
    1930:	mvn	r7, #0
    1934:	mov	r3, #1
    1938:	strd	r6, [r2]
    193c:	mov	r4, r0
    1940:	str	r3, [fp]
    1944:	b	17d4 <MyGame_Example_int_enum_parse_json_enum+0x50>
    1948:	.word	0xffffffff
    194c:	.word	0x696e7431
    1950:	.word	0x00000000
    1954:	.word	0x696e7431
    1958:	.word	0x6566ffff
    195c:	.word	0x696e746e
    1960:	.word	0x65673200
    1964:	.word	0x696e746e
    1968:	.word	0x65670000
    196c:	.word	0x696e746e
    1970:	.word	0x00000000
    1974:	.word	0x696e7432
    1978:	.word	0xffff0000

0000197c <MyGame_Example_neg_enum_parse_json_enum>:
    197c:	push	{r4, r5, r6, r7, r8, r9, lr}
    1980:	mov	r4, r1
    1984:	sub	sp, sp, #12
    1988:	mov	r1, r2
    198c:	mov	r6, r0
    1990:	mov	r0, r4
    1994:	mov	r5, r2
    1998:	mov	r7, r3
    199c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    19a0:	add	r3, pc, #280	; 0x118
    19a4:	ldrd	r2, [r3]
    19a8:	cmp	r1, r3
    19ac:	cmpeq	r0, r2
    19b0:	bhi	19d8 <MyGame_Example_neg_enum_parse_json_enum+0x5c>
    19b4:	add	r3, pc, #268	; 0x10c
    19b8:	ldrd	r2, [r3]
    19bc:	mov	r0, #0
    19c0:	cmp	r1, r3
    19c4:	cmpeq	r0, r2
    19c8:	beq	1a48 <MyGame_Example_neg_enum_parse_json_enum+0xcc>
    19cc:	mov	r0, r4
    19d0:	add	sp, sp, #12
    19d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    19d8:	add	r3, pc, #240	; 0xf0
    19dc:	ldrd	r2, [r3]
    19e0:	mov	r0, #0
    19e4:	cmp	r1, r3
    19e8:	cmpeq	r0, r2
    19ec:	beq	1a94 <MyGame_Example_neg_enum_parse_json_enum+0x118>
    19f0:	add	r3, pc, #224	; 0xe0
    19f4:	ldrd	r2, [r3]
    19f8:	cmp	r1, r3
    19fc:	cmpeq	r0, r2
    1a00:	bne	19cc <MyGame_Example_neg_enum_parse_json_enum+0x50>
    1a04:	ldr	r3, [sp, #44]	; 0x2c
    1a08:	mov	r2, r5
    1a0c:	str	r3, [sp]
    1a10:	mov	r0, r6
    1a14:	mov	r3, #4
    1a18:	mov	r1, r4
    1a1c:	bl	0 <flatcc_json_parser_match_constant>
    1a20:	cmp	r4, r0
    1a24:	beq	19cc <MyGame_Example_neg_enum_parse_json_enum+0x50>
    1a28:	ldr	r2, [sp, #40]	; 0x28
    1a2c:	mov	r4, r0
    1a30:	mvn	r1, #0
    1a34:	mvn	r0, #10
    1a38:	mov	r3, #1
    1a3c:	strd	r0, [r2]
    1a40:	str	r3, [r7]
    1a44:	b	19cc <MyGame_Example_neg_enum_parse_json_enum+0x50>
    1a48:	ldr	r3, [sp, #44]	; 0x2c
    1a4c:	mov	r2, r5
    1a50:	str	r3, [sp]
    1a54:	mov	r0, r6
    1a58:	mov	r3, #4
    1a5c:	mov	r1, r4
    1a60:	bl	0 <flatcc_json_parser_match_constant>
    1a64:	cmp	r4, r0
    1a68:	mvnne	r8, #11
    1a6c:	beq	19cc <MyGame_Example_neg_enum_parse_json_enum+0x50>
    1a70:	ldr	r2, [sp, #40]	; 0x28
    1a74:	mvn	r9, #0
    1a78:	mov	r3, #1
    1a7c:	mov	r4, r0
    1a80:	strd	r8, [r2]
    1a84:	mov	r0, r4
    1a88:	str	r3, [r7]
    1a8c:	add	sp, sp, #12
    1a90:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1a94:	ldr	r3, [sp, #44]	; 0x2c
    1a98:	mov	r2, r5
    1a9c:	str	r3, [sp]
    1aa0:	mov	r0, r6
    1aa4:	mov	r3, #4
    1aa8:	mov	r1, r4
    1aac:	bl	0 <flatcc_json_parser_match_constant>
    1ab0:	cmp	r4, r0
    1ab4:	beq	19cc <MyGame_Example_neg_enum_parse_json_enum+0x50>
    1ab8:	mvn	r8, #9
    1abc:	b	1a70 <MyGame_Example_neg_enum_parse_json_enum+0xf4>
    1ac0:	.word	0xffffffff
    1ac4:	.word	0x6e656731
    1ac8:	.word	0x00000000
    1acc:	.word	0x6e656731
    1ad0:	.word	0x00000000
    1ad4:	.word	0x6e656733
    1ad8:	.word	0x00000000
    1adc:	.word	0x6e656732

00001ae0 <MyGame_Example_Color_parse_json_enum>:
    1ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ae4:	mov	r4, r1
    1ae8:	sub	sp, sp, #12
    1aec:	mov	r1, r2
    1af0:	mov	r5, r0
    1af4:	mov	r0, r4
    1af8:	mov	sl, r2
    1afc:	mov	fp, r3
    1b00:	bl	0 <flatcc_json_parser_symbol_part_ext>
    1b04:	add	r3, pc, #292	; 0x124
    1b08:	ldrd	r2, [r3]
    1b0c:	cmp	r1, r3
    1b10:	cmpeq	r0, r2
    1b14:	bhi	1b3c <MyGame_Example_Color_parse_json_enum+0x5c>
    1b18:	add	r3, pc, #280	; 0x118
    1b1c:	ldrd	r2, [r3]
    1b20:	mov	r0, #0
    1b24:	cmp	r1, r3
    1b28:	cmpeq	r0, r2
    1b2c:	beq	1bb4 <MyGame_Example_Color_parse_json_enum+0xd4>
    1b30:	mov	r0, r4
    1b34:	add	sp, sp, #12
    1b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b3c:	add	r7, pc, #252	; 0xfc
    1b40:	ldrd	r6, [r7]
    1b44:	bic	r9, r1, #255	; 0xff
    1b48:	mov	r8, #0
    1b4c:	cmp	r9, r7
    1b50:	cmpeq	r8, r6
    1b54:	beq	1c00 <MyGame_Example_Color_parse_json_enum+0x120>
    1b58:	add	r3, pc, #232	; 0xe8
    1b5c:	ldrd	r2, [r3]
    1b60:	and	r0, r0, #-16777216	; 0xff000000
    1b64:	cmp	r1, r3
    1b68:	cmpeq	r0, r2
    1b6c:	bne	1b30 <MyGame_Example_Color_parse_json_enum+0x50>
    1b70:	ldr	r3, [sp, #52]	; 0x34
    1b74:	mov	r2, sl
    1b78:	str	r3, [sp]
    1b7c:	mov	r0, r5
    1b80:	mov	r3, #5
    1b84:	mov	r1, r4
    1b88:	bl	0 <flatcc_json_parser_match_constant>
    1b8c:	cmp	r4, r0
    1b90:	beq	1b30 <MyGame_Example_Color_parse_json_enum+0x50>
    1b94:	ldr	r2, [sp, #48]	; 0x30
    1b98:	mov	r4, r0
    1b9c:	mov	r1, #0
    1ba0:	mov	r0, #2
    1ba4:	mov	r3, #0
    1ba8:	strd	r0, [r2]
    1bac:	str	r3, [fp]
    1bb0:	b	1b30 <MyGame_Example_Color_parse_json_enum+0x50>
    1bb4:	ldr	r3, [sp, #52]	; 0x34
    1bb8:	mov	r2, sl
    1bbc:	str	r3, [sp]
    1bc0:	mov	r0, r5
    1bc4:	mov	r3, #4
    1bc8:	mov	r1, r4
    1bcc:	bl	0 <flatcc_json_parser_match_constant>
    1bd0:	cmp	r4, r0
    1bd4:	movne	r6, #8
    1bd8:	beq	1b30 <MyGame_Example_Color_parse_json_enum+0x50>
    1bdc:	ldr	r2, [sp, #48]	; 0x30
    1be0:	mov	r7, #0
    1be4:	mov	r3, #0
    1be8:	mov	r4, r0
    1bec:	strd	r6, [r2]
    1bf0:	mov	r0, r4
    1bf4:	str	r3, [fp]
    1bf8:	add	sp, sp, #12
    1bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c00:	ldr	r3, [sp, #52]	; 0x34
    1c04:	mov	r2, sl
    1c08:	str	r3, [sp]
    1c0c:	mov	r0, r5
    1c10:	mov	r3, #3
    1c14:	mov	r1, r4
    1c18:	bl	0 <flatcc_json_parser_match_constant>
    1c1c:	cmp	r4, r0
    1c20:	beq	1b30 <MyGame_Example_Color_parse_json_enum+0x50>
    1c24:	mov	r6, #1
    1c28:	b	1bdc <MyGame_Example_Color_parse_json_enum+0xfc>
    1c2c:	nop			; (mov r0, r0)
    1c30:	.word	0x6dffffff
    1c34:	.word	0x47726565
    1c38:	.word	0x00000000
    1c3c:	.word	0x426c7565
    1c40:	.word	0x00000000
    1c44:	.word	0x52656400
    1c48:	.word	0x6e000000
    1c4c:	.word	0x47726565

00001c50 <flatcc_json_parser_space>:
    1c50:	sub	r3, r2, r1
    1c54:	cmp	r3, #1
    1c58:	ble	1c6c <flatcc_json_parser_space+0x1c>
    1c5c:	ldrb	r3, [r1]
    1c60:	cmp	r3, #32
    1c64:	bhi	1c70 <flatcc_json_parser_space+0x20>
    1c68:	beq	1c78 <flatcc_json_parser_space+0x28>
    1c6c:	b	0 <flatcc_json_parser_space_ext>
    1c70:	mov	r0, r1
    1c74:	bx	lr
    1c78:	ldrb	r3, [r1, #1]
    1c7c:	cmp	r3, #32
    1c80:	bls	1c6c <flatcc_json_parser_space+0x1c>
    1c84:	add	r0, r1, #1
    1c88:	bx	lr

00001c8c <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
    1c8c:	mov	r3, #8
    1c90:	push	{r4, lr}
    1c94:	mov	r2, r3
    1c98:	mov	r1, #0
    1c9c:	mov	r4, r0
    1ca0:	bl	0 <flatcc_verify_field>
    1ca4:	cmp	r0, #0
    1ca8:	popne	{r4, pc}
    1cac:	mov	r3, #4
    1cb0:	mov	r0, r4
    1cb4:	mov	r2, r3
    1cb8:	mov	r1, #1
    1cbc:	pop	{r4, lr}
    1cc0:	b	0 <flatcc_verify_field>

00001cc4 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
    1cc4:	mov	r3, #1
    1cc8:	push	{r4, lr}
    1ccc:	mov	r2, r3
    1cd0:	mov	r1, #0
    1cd4:	mov	r4, r0
    1cd8:	bl	0 <flatcc_verify_field>
    1cdc:	cmp	r0, #0
    1ce0:	popne	{r4, pc}
    1ce4:	mov	r3, #1
    1ce8:	mov	r2, r3
    1cec:	mov	r1, r3
    1cf0:	mov	r0, r4
    1cf4:	bl	0 <flatcc_verify_field>
    1cf8:	cmp	r0, #0
    1cfc:	popne	{r4, pc}
    1d00:	mov	r3, #1
    1d04:	mov	r2, r3
    1d08:	mov	r1, #2
    1d0c:	mov	r0, r4
    1d10:	bl	0 <flatcc_verify_field>
    1d14:	cmp	r0, #0
    1d18:	popne	{r4, pc}
    1d1c:	mov	r3, #1
    1d20:	mov	r0, r4
    1d24:	mov	r2, r3
    1d28:	mov	r1, #3
    1d2c:	pop	{r4, lr}
    1d30:	b	0 <flatcc_verify_field>

00001d34 <MyGame_Example_Stat_verify_table>:
    1d34:	mov	r2, #0
    1d38:	push	{r4, lr}
    1d3c:	mov	r1, r2
    1d40:	mov	r4, r0
    1d44:	bl	0 <flatcc_verify_string_field>
    1d48:	cmp	r0, #0
    1d4c:	popne	{r4, pc}
    1d50:	mov	r3, #8
    1d54:	mov	r2, r3
    1d58:	mov	r1, #1
    1d5c:	mov	r0, r4
    1d60:	bl	0 <flatcc_verify_field>
    1d64:	cmp	r0, #0
    1d68:	popne	{r4, pc}
    1d6c:	mov	r3, #2
    1d70:	mov	r0, r4
    1d74:	mov	r2, r3
    1d78:	mov	r1, r3
    1d7c:	pop	{r4, lr}
    1d80:	b	0 <flatcc_verify_field>

00001d84 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
    1d84:	mov	r2, #0
    1d88:	push	{r4, lr}
    1d8c:	mov	r1, r2
    1d90:	mov	r4, r0
    1d94:	bl	0 <flatcc_verify_string_field>
    1d98:	cmp	r0, #0
    1d9c:	popne	{r4, pc}
    1da0:	mov	r3, #4
    1da4:	mov	r2, r3
    1da8:	mov	r1, #1
    1dac:	mov	r0, r4
    1db0:	bl	0 <flatcc_verify_field>
    1db4:	cmp	r0, #0
    1db8:	popne	{r4, pc}
    1dbc:	mov	r2, r0
    1dc0:	mov	r1, #2
    1dc4:	mov	r0, r4
    1dc8:	bl	0 <flatcc_verify_string_field>
    1dcc:	cmp	r0, #0
    1dd0:	popne	{r4, pc}
    1dd4:	mov	r3, #8
    1dd8:	mov	r2, r3
    1ddc:	mov	r1, #3
    1de0:	mov	r0, r4
    1de4:	bl	0 <flatcc_verify_field>
    1de8:	cmp	r0, #0
    1dec:	popne	{r4, pc}
    1df0:	mov	r2, r0
    1df4:	mov	r1, #4
    1df8:	mov	r0, r4
    1dfc:	bl	0 <flatcc_verify_string_field>
    1e00:	cmp	r0, #0
    1e04:	popne	{r4, pc}
    1e08:	mov	r3, #8
    1e0c:	mov	r2, r3
    1e10:	mov	r1, #5
    1e14:	mov	r0, r4
    1e18:	bl	0 <flatcc_verify_field>
    1e1c:	cmp	r0, #0
    1e20:	popne	{r4, pc}
    1e24:	mov	r3, #4
    1e28:	mov	r2, r3
    1e2c:	mov	r1, #6
    1e30:	mov	r0, r4
    1e34:	bl	0 <flatcc_verify_field>
    1e38:	cmp	r0, #0
    1e3c:	popne	{r4, pc}
    1e40:	mov	r3, #8
    1e44:	mov	r2, r3
    1e48:	mov	r1, #7
    1e4c:	mov	r0, r4
    1e50:	bl	0 <flatcc_verify_field>
    1e54:	cmp	r0, #0
    1e58:	popne	{r4, pc}
    1e5c:	mov	r3, #4
    1e60:	mov	r0, r4
    1e64:	mov	r2, r3
    1e68:	mov	r1, #8
    1e6c:	pop	{r4, lr}
    1e70:	b	0 <flatcc_verify_field>

00001e74 <MyGame_Example_TestJSONPrefix_verify_table>:
    1e74:	mov	r2, #0
    1e78:	push	{r4, lr}
    1e7c:	mov	r1, r2
    1e80:	ldr	r3, [pc, #64]	; 1ec8 <MyGame_Example_TestJSONPrefix_verify_table+0x54>
    1e84:	mov	r4, r0
    1e88:	bl	0 <flatcc_verify_table_field>
    1e8c:	cmp	r0, #0
    1e90:	popne	{r4, pc}
    1e94:	mov	r2, r0
    1e98:	ldr	r3, [pc, #44]	; 1ecc <MyGame_Example_TestJSONPrefix_verify_table+0x58>
    1e9c:	mov	r1, #1
    1ea0:	mov	r0, r4
    1ea4:	bl	0 <flatcc_verify_table_field>
    1ea8:	cmp	r0, #0
    1eac:	popne	{r4, pc}
    1eb0:	mov	r2, r0
    1eb4:	ldr	r3, [pc, #20]	; 1ed0 <MyGame_Example_TestJSONPrefix_verify_table+0x5c>
    1eb8:	mov	r0, r4
    1ebc:	mov	r1, #2
    1ec0:	pop	{r4, lr}
    1ec4:	b	0 <flatcc_verify_table_field>
	...

00001ed4 <MyGame_Example_Monster_verify_table>:
    1ed4:	push	{r4, r5, r6, r7, r8, lr}
    1ed8:	mov	r3, #16
    1edc:	sub	sp, sp, #8
    1ee0:	mov	r2, #32
    1ee4:	mov	r1, #0
    1ee8:	mov	r4, r0
    1eec:	bl	0 <flatcc_verify_field>
    1ef0:	cmp	r0, #0
    1ef4:	beq	1f00 <MyGame_Example_Monster_verify_table+0x2c>
    1ef8:	add	sp, sp, #8
    1efc:	pop	{r4, r5, r6, r7, r8, pc}
    1f00:	mov	r3, #2
    1f04:	mov	r2, r3
    1f08:	mov	r1, r3
    1f0c:	mov	r0, r4
    1f10:	bl	0 <flatcc_verify_field>
    1f14:	cmp	r0, #0
    1f18:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1f1c:	mov	r3, #2
    1f20:	mov	r2, r3
    1f24:	mov	r1, #1
    1f28:	mov	r0, r4
    1f2c:	bl	0 <flatcc_verify_field>
    1f30:	cmp	r0, #0
    1f34:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1f38:	mov	r2, #1
    1f3c:	mov	r1, #3
    1f40:	mov	r0, r4
    1f44:	bl	0 <flatcc_verify_string_field>
    1f48:	cmp	r0, #0
    1f4c:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1f50:	mov	r3, #1
    1f54:	mov	r2, r3
    1f58:	mov	r1, #6
    1f5c:	mov	r0, r4
    1f60:	bl	0 <flatcc_verify_field>
    1f64:	cmp	r0, #0
    1f68:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1f6c:	mov	r5, #1
    1f70:	mvn	r6, #0
    1f74:	mov	r2, r0
    1f78:	stm	sp, {r5, r6}
    1f7c:	mov	r3, r5
    1f80:	mov	r1, #5
    1f84:	mov	r0, r4
    1f88:	bl	0 <flatcc_verify_vector_field>
    1f8c:	cmp	r0, #0
    1f90:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1f94:	mov	r2, r0
    1f98:	ldr	r3, [pc, #840]	; 22e8 <MyGame_Example_Monster_verify_table+0x414>
    1f9c:	mov	r1, #11
    1fa0:	mov	r0, r4
    1fa4:	bl	0 <flatcc_verify_table_vector_field>
    1fa8:	cmp	r0, #0
    1fac:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1fb0:	mov	r2, r0
    1fb4:	mov	r1, #10
    1fb8:	mov	r0, r4
    1fbc:	bl	0 <flatcc_verify_string_vector_field>
    1fc0:	cmp	r0, #0
    1fc4:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1fc8:	mov	r2, r0
    1fcc:	mov	r1, #28
    1fd0:	mov	r0, r4
    1fd4:	bl	0 <flatcc_verify_string_vector_field>
    1fd8:	cmp	r0, #0
    1fdc:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    1fe0:	mov	r2, r0
    1fe4:	stm	sp, {r5, r6}
    1fe8:	mov	r3, r5
    1fec:	mov	r1, #24
    1ff0:	mov	r0, r4
    1ff4:	bl	0 <flatcc_verify_vector_field>
    1ff8:	cmp	r0, #0
    1ffc:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2000:	mvn	r3, #-536870912	; 0xe0000000
    2004:	mov	r5, #4
    2008:	str	r3, [sp, #4]
    200c:	str	r5, [sp]
    2010:	mov	r3, #8
    2014:	mov	r2, #0
    2018:	mov	r1, #29
    201c:	mov	r0, r4
    2020:	bl	0 <flatcc_verify_vector_field>
    2024:	cmp	r0, #0
    2028:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    202c:	ldr	r7, [pc, #692]	; 22e8 <MyGame_Example_Monster_verify_table+0x414>
    2030:	mov	r2, r0
    2034:	mov	r3, r7
    2038:	mov	r1, #12
    203c:	mov	r0, r4
    2040:	bl	0 <flatcc_verify_table_field>
    2044:	cmp	r0, #0
    2048:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    204c:	mov	r2, r0
    2050:	ldr	r3, [pc, #660]	; 22ec <MyGame_Example_Monster_verify_table+0x418>
    2054:	mov	r1, #8
    2058:	mov	r0, r4
    205c:	bl	0 <flatcc_verify_union_field>
    2060:	cmp	r0, #0
    2064:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2068:	mvn	r8, #-1073741824	; 0xc0000000
    206c:	mov	r6, #2
    2070:	mov	r2, r0
    2074:	stm	sp, {r6, r8}
    2078:	mov	r3, r5
    207c:	mov	r1, #9
    2080:	mov	r0, r4
    2084:	bl	0 <flatcc_verify_vector_field>
    2088:	cmp	r0, #0
    208c:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2090:	mov	r2, r0
    2094:	stm	sp, {r6, r8}
    2098:	mov	r3, r5
    209c:	mov	r1, #31
    20a0:	mov	r0, r4
    20a4:	bl	0 <flatcc_verify_vector_field>
    20a8:	cmp	r0, #0
    20ac:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    20b0:	mov	r6, #1
    20b4:	mov	r3, r0
    20b8:	mov	r2, r0
    20bc:	stm	sp, {r6, r7}
    20c0:	mov	r1, #13
    20c4:	mov	r0, r4
    20c8:	bl	0 <flatcc_verify_table_as_nested_root>
    20cc:	cmp	r0, #0
    20d0:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    20d4:	mov	r2, r0
    20d8:	ldr	r3, [pc, #528]	; 22f0 <MyGame_Example_Monster_verify_table+0x41c>
    20dc:	mov	r1, #14
    20e0:	mov	r0, r4
    20e4:	bl	0 <flatcc_verify_table_field>
    20e8:	cmp	r0, #0
    20ec:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    20f0:	mov	r3, r6
    20f4:	mov	r2, r6
    20f8:	mov	r1, #15
    20fc:	mov	r0, r4
    2100:	bl	0 <flatcc_verify_field>
    2104:	cmp	r0, #0
    2108:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    210c:	mov	r3, r5
    2110:	mov	r2, r5
    2114:	mov	r1, #16
    2118:	mov	r0, r4
    211c:	bl	0 <flatcc_verify_field>
    2120:	cmp	r0, #0
    2124:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2128:	mov	r3, r5
    212c:	mov	r2, r5
    2130:	mov	r1, #17
    2134:	mov	r0, r4
    2138:	bl	0 <flatcc_verify_field>
    213c:	cmp	r0, #0
    2140:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2144:	mov	r3, #8
    2148:	mov	r2, r3
    214c:	mov	r1, #18
    2150:	mov	r0, r4
    2154:	bl	0 <flatcc_verify_field>
    2158:	cmp	r0, #0
    215c:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2160:	mov	r3, #8
    2164:	mov	r2, r3
    2168:	mov	r1, #19
    216c:	mov	r0, r4
    2170:	bl	0 <flatcc_verify_field>
    2174:	cmp	r0, #0
    2178:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    217c:	mov	r3, r5
    2180:	mov	r2, r5
    2184:	mov	r1, #20
    2188:	mov	r0, r4
    218c:	bl	0 <flatcc_verify_field>
    2190:	cmp	r0, #0
    2194:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2198:	mov	r3, r5
    219c:	mov	r2, r5
    21a0:	mov	r1, #21
    21a4:	mov	r0, r4
    21a8:	bl	0 <flatcc_verify_field>
    21ac:	cmp	r0, #0
    21b0:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    21b4:	mov	r3, #8
    21b8:	mov	r2, r3
    21bc:	mov	r1, #22
    21c0:	mov	r0, r4
    21c4:	bl	0 <flatcc_verify_field>
    21c8:	cmp	r0, #0
    21cc:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    21d0:	mov	r3, #8
    21d4:	mov	r2, r3
    21d8:	mov	r1, #23
    21dc:	mov	r0, r4
    21e0:	bl	0 <flatcc_verify_field>
    21e4:	cmp	r0, #0
    21e8:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    21ec:	mov	r3, r5
    21f0:	mov	r2, r5
    21f4:	mov	r1, #25
    21f8:	mov	r0, r4
    21fc:	bl	0 <flatcc_verify_field>
    2200:	cmp	r0, #0
    2204:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2208:	mov	r3, r5
    220c:	mov	r2, r5
    2210:	mov	r1, #26
    2214:	mov	r0, r4
    2218:	bl	0 <flatcc_verify_field>
    221c:	cmp	r0, #0
    2220:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2224:	mov	r3, r5
    2228:	mov	r2, r5
    222c:	mov	r1, #27
    2230:	mov	r0, r4
    2234:	bl	0 <flatcc_verify_field>
    2238:	cmp	r0, #0
    223c:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2240:	mvn	r1, #0
    2244:	mov	r2, r0
    2248:	str	r1, [sp, #4]
    224c:	mov	r3, r6
    2250:	str	r6, [sp]
    2254:	mov	r1, #30
    2258:	mov	r0, r4
    225c:	bl	0 <flatcc_verify_vector_field>
    2260:	cmp	r0, #0
    2264:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2268:	mov	r5, #8
    226c:	mvn	r6, #-536870912	; 0xe0000000
    2270:	mov	r3, r5
    2274:	stm	sp, {r5, r6}
    2278:	mov	r2, #0
    227c:	mov	r1, #32
    2280:	mov	r0, r4
    2284:	bl	0 <flatcc_verify_vector_field>
    2288:	cmp	r0, #0
    228c:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    2290:	mov	r2, r0
    2294:	stm	sp, {r5, r6}
    2298:	mov	r3, r5
    229c:	mov	r1, #33	; 0x21
    22a0:	mov	r0, r4
    22a4:	bl	0 <flatcc_verify_vector_field>
    22a8:	cmp	r0, #0
    22ac:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    22b0:	mov	r2, r0
    22b4:	ldr	r3, [pc, #56]	; 22f4 <MyGame_Example_Monster_verify_table+0x420>
    22b8:	mov	r1, #34	; 0x22
    22bc:	mov	r0, r4
    22c0:	bl	0 <flatcc_verify_table_field>
    22c4:	cmp	r0, #0
    22c8:	bne	1ef8 <MyGame_Example_Monster_verify_table+0x24>
    22cc:	mov	r2, r0
    22d0:	ldr	r3, [pc, #32]	; 22f8 <MyGame_Example_Monster_verify_table+0x424>
    22d4:	mov	r0, r4
    22d8:	mov	r1, #35	; 0x23
    22dc:	add	sp, sp, #8
    22e0:	pop	{r4, r5, r6, r7, r8, lr}
    22e4:	b	0 <flatcc_verify_table_field>
	...

000022fc <MyGame_Example_TestBase64_verify_table>:
    22fc:	push	{r4, r5, r6, lr}
    2300:	mov	r4, #1
    2304:	sub	sp, sp, #8
    2308:	mvn	r5, #0
    230c:	mov	r2, #0
    2310:	mov	r1, r2
    2314:	stm	sp, {r4, r5}
    2318:	mov	r3, r4
    231c:	mov	r6, r0
    2320:	bl	0 <flatcc_verify_vector_field>
    2324:	subs	r2, r0, #0
    2328:	beq	2338 <MyGame_Example_TestBase64_verify_table+0x3c>
    232c:	mov	r0, r2
    2330:	add	sp, sp, #8
    2334:	pop	{r4, r5, r6, pc}
    2338:	stm	sp, {r4, r5}
    233c:	mov	r3, r4
    2340:	mov	r1, r4
    2344:	mov	r0, r6
    2348:	bl	0 <flatcc_verify_vector_field>
    234c:	subs	r2, r0, #0
    2350:	bne	232c <MyGame_Example_TestBase64_verify_table+0x30>
    2354:	ldr	r3, [pc, #36]	; 2380 <MyGame_Example_TestBase64_verify_table+0x84>
    2358:	str	r4, [sp]
    235c:	str	r3, [sp, #4]
    2360:	mov	r0, r6
    2364:	mov	r3, r2
    2368:	mov	r1, #2
    236c:	bl	0 <flatcc_verify_table_as_nested_root>
    2370:	mov	r2, r0
    2374:	mov	r0, r2
    2378:	add	sp, sp, #8
    237c:	pop	{r4, r5, r6, pc}
    2380:	.word	0x00000000

00002384 <MyGame_Example_Any_union_verifier>:
    2384:	ldrb	r3, [r0, #12]
    2388:	sub	r3, r3, #1
    238c:	cmp	r3, #3
    2390:	ldrls	pc, [pc, r3, lsl #2]
    2394:	b	23c8 <MyGame_Example_Any_union_verifier+0x44>
    2398:	.word	0x000023c0
    239c:	.word	0x000023b8
    23a0:	.word	0x000023b0
    23a4:	.word	0x000023a8
    23a8:	ldr	r1, [pc, #32]	; 23d0 <MyGame_Example_Any_union_verifier+0x4c>
    23ac:	b	0 <flatcc_verify_union_table>
    23b0:	ldr	r1, [pc, #28]	; 23d4 <MyGame_Example_Any_union_verifier+0x50>
    23b4:	b	0 <flatcc_verify_union_table>
    23b8:	ldr	r1, [pc, #24]	; 23d8 <MyGame_Example_Any_union_verifier+0x54>
    23bc:	b	0 <flatcc_verify_union_table>
    23c0:	ldr	r1, [pc, #20]	; 23dc <MyGame_Example_Any_union_verifier+0x58>
    23c4:	b	0 <flatcc_verify_union_table>
    23c8:	mov	r0, #0
    23cc:	bx	lr
	...

000023e0 <MyGame_Example_Alt_verify_table>:
    23e0:	mov	r2, #0
    23e4:	push	{r4, lr}
    23e8:	mov	r1, r2
    23ec:	ldr	r3, [pc, #64]	; 2434 <MyGame_Example_Alt_verify_table+0x54>
    23f0:	mov	r4, r0
    23f4:	bl	0 <flatcc_verify_table_field>
    23f8:	cmp	r0, #0
    23fc:	popne	{r4, pc}
    2400:	mov	r2, r0
    2404:	ldr	r3, [pc, #44]	; 2438 <MyGame_Example_Alt_verify_table+0x58>
    2408:	mov	r1, #1
    240c:	mov	r0, r4
    2410:	bl	0 <flatcc_verify_table_field>
    2414:	cmp	r0, #0
    2418:	popne	{r4, pc}
    241c:	mov	r2, r0
    2420:	ldr	r3, [pc, #20]	; 243c <MyGame_Example_Alt_verify_table+0x5c>
    2424:	mov	r0, r4
    2428:	mov	r1, #3
    242c:	pop	{r4, lr}
    2430:	b	0 <flatcc_verify_union_vector_field>
	...

00002440 <Fantasy_Movie_verify_table>:
    2440:	push	{r4, lr}
    2444:	mov	r2, #0
    2448:	ldr	r3, [pc, #124]	; 24cc <Fantasy_Movie_verify_table+0x8c>
    244c:	mov	r1, #1
    2450:	mov	r4, r0
    2454:	bl	0 <flatcc_verify_union_field>
    2458:	cmp	r0, #0
    245c:	popne	{r4, pc}
    2460:	mov	r2, r0
    2464:	ldr	r3, [pc, #96]	; 24cc <Fantasy_Movie_verify_table+0x8c>
    2468:	mov	r1, #3
    246c:	mov	r0, r4
    2470:	bl	0 <flatcc_verify_union_field>
    2474:	cmp	r0, #0
    2478:	popne	{r4, pc}
    247c:	mov	r2, r0
    2480:	ldr	r3, [pc, #68]	; 24cc <Fantasy_Movie_verify_table+0x8c>
    2484:	mov	r1, #5
    2488:	mov	r0, r4
    248c:	bl	0 <flatcc_verify_union_field>
    2490:	cmp	r0, #0
    2494:	popne	{r4, pc}
    2498:	mov	r2, r0
    249c:	ldr	r3, [pc, #40]	; 24cc <Fantasy_Movie_verify_table+0x8c>
    24a0:	mov	r1, #7
    24a4:	mov	r0, r4
    24a8:	bl	0 <flatcc_verify_union_field>
    24ac:	cmp	r0, #0
    24b0:	popne	{r4, pc}
    24b4:	mov	r2, r0
    24b8:	ldr	r3, [pc, #12]	; 24cc <Fantasy_Movie_verify_table+0x8c>
    24bc:	mov	r0, r4
    24c0:	mov	r1, #9
    24c4:	pop	{r4, lr}
    24c8:	b	0 <flatcc_verify_union_vector_field>
    24cc:	.word	0x00000000

000024d0 <Fantasy_Character_union_verifier>:
    24d0:	ldrb	r3, [r0, #12]
    24d4:	cmp	r3, #9
    24d8:	beq	2514 <Fantasy_Character_union_verifier+0x44>
    24dc:	bls	24f8 <Fantasy_Character_union_verifier+0x28>
    24e0:	cmp	r3, #11
    24e4:	beq	24f4 <Fantasy_Character_union_verifier+0x24>
    24e8:	bcc	2514 <Fantasy_Character_union_verifier+0x44>
    24ec:	cmp	r3, #255	; 0xff
    24f0:	bne	2520 <Fantasy_Character_union_verifier+0x50>
    24f4:	b	0 <flatcc_verify_union_string>
    24f8:	cmp	r3, #2
    24fc:	beq	2528 <Fantasy_Character_union_verifier+0x58>
    2500:	cmp	r3, #8
    2504:	bne	2520 <Fantasy_Character_union_verifier+0x50>
    2508:	mov	r2, #2
    250c:	mov	r1, r2
    2510:	b	0 <flatcc_verify_union_struct>
    2514:	mov	r2, #4
    2518:	mov	r1, r2
    251c:	b	0 <flatcc_verify_union_struct>
    2520:	mov	r0, #0
    2524:	bx	lr
    2528:	ldr	r1, [pc]	; 2530 <Fantasy_Character_union_verifier+0x60>
    252c:	b	0 <flatcc_verify_union_table>
    2530:	.word	0x00000000

00002534 <MyGame_Example_Any_print_json_union_type>:
    2534:	sub	r1, r1, #1
    2538:	cmp	r1, #3
    253c:	ldrls	pc, [pc, r1, lsl #2]
    2540:	b	2584 <MyGame_Example_Any_print_json_union_type+0x50>
    2544:	.word	0x00002578
    2548:	.word	0x0000256c
    254c:	.word	0x00002560
    2550:	.word	0x00002554
    2554:	mov	r2, #3
    2558:	ldr	r1, [pc, #48]	; 2590 <MyGame_Example_Any_print_json_union_type+0x5c>
    255c:	b	0 <flatcc_json_printer_enum>
    2560:	mov	r2, #8
    2564:	ldr	r1, [pc, #40]	; 2594 <MyGame_Example_Any_print_json_union_type+0x60>
    2568:	b	0 <flatcc_json_printer_enum>
    256c:	mov	r2, #23
    2570:	ldr	r1, [pc, #32]	; 2598 <MyGame_Example_Any_print_json_union_type+0x64>
    2574:	b	0 <flatcc_json_printer_enum>
    2578:	mov	r2, #7
    257c:	ldr	r1, [pc, #24]	; 259c <MyGame_Example_Any_print_json_union_type+0x68>
    2580:	b	0 <flatcc_json_printer_enum>
    2584:	mov	r2, #4
    2588:	ldr	r1, [pc, #16]	; 25a0 <MyGame_Example_Any_print_json_union_type+0x6c>
    258c:	b	0 <flatcc_json_printer_enum>
    2590:	.word	0x0000043c
    2594:	.word	0x00000430
    2598:	.word	0x00000418
    259c:	.word	0x00000410
    25a0:	.word	0x000003c0

000025a4 <flatcc_json_parser_uint64.constprop.42>:
    25a4:	push	{r4, r5, r6, r7, lr}
    25a8:	mov	r4, #0
    25ac:	sub	sp, sp, #28
    25b0:	mov	r5, #0
    25b4:	cmp	r1, r2
    25b8:	strd	r4, [r3]
    25bc:	strd	r4, [sp, #16]
    25c0:	str	r4, [sp, #12]
    25c4:	moveq	r0, r1
    25c8:	beq	2608 <flatcc_json_parser_uint64.constprop.42+0x64>
    25cc:	mov	r5, r3
    25d0:	add	r3, sp, #16
    25d4:	str	r3, [sp]
    25d8:	add	r3, sp, #12
    25dc:	mov	r4, r1
    25e0:	mov	r6, r2
    25e4:	mov	r7, r0
    25e8:	bl	0 <flatcc_json_parser_integer>
    25ec:	cmp	r4, r0
    25f0:	beq	2608 <flatcc_json_parser_uint64.constprop.42+0x64>
    25f4:	ldr	r3, [sp, #12]
    25f8:	cmp	r3, #0
    25fc:	bne	2610 <flatcc_json_parser_uint64.constprop.42+0x6c>
    2600:	ldrd	r2, [sp, #16]
    2604:	strd	r2, [r5]
    2608:	add	sp, sp, #28
    260c:	pop	{r4, r5, r6, r7, pc}
    2610:	mov	r1, r0
    2614:	mov	r2, r6
    2618:	mov	r0, r7
    261c:	mov	r3, #8
    2620:	bl	0 <flatcc_json_parser_set_error>
    2624:	add	sp, sp, #28
    2628:	pop	{r4, r5, r6, r7, pc}

0000262c <MyGame_InParentNamespace_verify_table>:
    262c:	mov	r0, #0
    2630:	bx	lr

00002634 <MyGame_InParentNamespace_print_json_table>:
    2634:	bx	lr

00002638 <flatcc_json_parser_uint32.constprop.41>:
    2638:	push	{r4, r5, r6, r7, r8, r9, lr}
    263c:	mov	r6, #0
    2640:	sub	sp, sp, #28
    2644:	mov	r7, #0
    2648:	mov	lr, #0
    264c:	cmp	r1, r2
    2650:	str	lr, [r3]
    2654:	str	lr, [sp, #12]
    2658:	strd	r6, [sp, #16]
    265c:	moveq	r0, r1
    2660:	beq	26b4 <flatcc_json_parser_uint32.constprop.41+0x7c>
    2664:	mov	r5, r3
    2668:	add	r3, sp, #16
    266c:	str	r3, [sp]
    2670:	add	r3, sp, #12
    2674:	mov	r4, r1
    2678:	mov	r7, r0
    267c:	mov	r6, r2
    2680:	bl	0 <flatcc_json_parser_integer>
    2684:	cmp	r4, r0
    2688:	beq	26b4 <flatcc_json_parser_uint32.constprop.41+0x7c>
    268c:	ldr	r3, [sp, #12]
    2690:	cmp	r3, #0
    2694:	bne	26bc <flatcc_json_parser_uint32.constprop.41+0x84>
    2698:	ldrd	r2, [sp, #16]
    269c:	mov	r9, #0
    26a0:	mvn	r8, #0
    26a4:	cmp	r3, r9
    26a8:	cmpeq	r2, r8
    26ac:	strls	r2, [r5]
    26b0:	bhi	26d8 <flatcc_json_parser_uint32.constprop.41+0xa0>
    26b4:	add	sp, sp, #28
    26b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    26bc:	mov	r1, r0
    26c0:	mov	r2, r6
    26c4:	mov	r0, r7
    26c8:	mov	r3, #8
    26cc:	bl	0 <flatcc_json_parser_set_error>
    26d0:	add	sp, sp, #28
    26d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    26d8:	mov	r1, r0
    26dc:	mov	r2, r6
    26e0:	mov	r0, r7
    26e4:	mov	r3, #7
    26e8:	bl	0 <flatcc_json_parser_set_error>
    26ec:	add	sp, sp, #28
    26f0:	pop	{r4, r5, r6, r7, r8, r9, pc}

000026f4 <flatcc_json_parser_uint8>:
    26f4:	push	{r4, r5, r6, r7, lr}
    26f8:	mov	r6, #0
    26fc:	sub	sp, sp, #28
    2700:	mov	r7, #0
    2704:	mov	lr, #0
    2708:	cmp	r1, r2
    270c:	strb	lr, [r3]
    2710:	str	lr, [sp, #12]
    2714:	strd	r6, [sp, #16]
    2718:	moveq	r0, r1
    271c:	beq	2768 <flatcc_json_parser_uint8+0x74>
    2720:	mov	r5, r3
    2724:	add	r3, sp, #16
    2728:	str	r3, [sp]
    272c:	add	r3, sp, #12
    2730:	mov	r4, r1
    2734:	mov	r7, r0
    2738:	mov	r6, r2
    273c:	bl	0 <flatcc_json_parser_integer>
    2740:	cmp	r4, r0
    2744:	beq	2768 <flatcc_json_parser_uint8+0x74>
    2748:	ldr	r3, [sp, #12]
    274c:	cmp	r3, #0
    2750:	bne	2770 <flatcc_json_parser_uint8+0x7c>
    2754:	ldrd	r2, [sp, #16]
    2758:	cmp	r3, #0
    275c:	cmpeq	r2, #255	; 0xff
    2760:	strbls	r2, [r5]
    2764:	bhi	278c <flatcc_json_parser_uint8+0x98>
    2768:	add	sp, sp, #28
    276c:	pop	{r4, r5, r6, r7, pc}
    2770:	mov	r1, r0
    2774:	mov	r2, r6
    2778:	mov	r0, r7
    277c:	mov	r3, #8
    2780:	bl	0 <flatcc_json_parser_set_error>
    2784:	add	sp, sp, #28
    2788:	pop	{r4, r5, r6, r7, pc}
    278c:	mov	r1, r0
    2790:	mov	r2, r6
    2794:	mov	r0, r7
    2798:	mov	r3, #7
    279c:	bl	0 <flatcc_json_parser_set_error>
    27a0:	add	sp, sp, #28
    27a4:	pop	{r4, r5, r6, r7, pc}

000027a8 <flatcc_json_parser_int32.constprop.39>:
    27a8:	push	{r4, r5, r6, r7, r8, r9, lr}
    27ac:	mov	r6, #0
    27b0:	sub	sp, sp, #28
    27b4:	mov	r7, #0
    27b8:	mov	lr, #0
    27bc:	cmp	r1, r2
    27c0:	str	lr, [r3]
    27c4:	str	lr, [sp, #12]
    27c8:	strd	r6, [sp, #16]
    27cc:	moveq	r0, r1
    27d0:	beq	2820 <flatcc_json_parser_int32.constprop.39+0x78>
    27d4:	mov	r5, r3
    27d8:	add	r3, sp, #16
    27dc:	str	r3, [sp]
    27e0:	add	r3, sp, #12
    27e4:	mov	r4, r1
    27e8:	mov	r7, r0
    27ec:	mov	r6, r2
    27f0:	bl	0 <flatcc_json_parser_integer>
    27f4:	cmp	r4, r0
    27f8:	beq	2820 <flatcc_json_parser_int32.constprop.39+0x78>
    27fc:	ldr	r1, [sp, #12]
    2800:	ldrd	r2, [sp, #16]
    2804:	cmp	r1, #0
    2808:	beq	2828 <flatcc_json_parser_int32.constprop.39+0x80>
    280c:	cmp	r3, #0
    2810:	cmpeq	r2, #-2147483648	; 0x80000000
    2814:	rsbls	r2, r2, #0
    2818:	strls	r2, [r5]
    281c:	bhi	2858 <flatcc_json_parser_int32.constprop.39+0xb0>
    2820:	add	sp, sp, #28
    2824:	pop	{r4, r5, r6, r7, r8, r9, pc}
    2828:	mov	r9, #0
    282c:	cmp	r3, r9
    2830:	mvn	r8, #-2147483648	; 0x80000000
    2834:	cmpeq	r2, r8
    2838:	strls	r2, [r5]
    283c:	bls	2820 <flatcc_json_parser_int32.constprop.39+0x78>
    2840:	mov	r1, r0
    2844:	mov	r2, r6
    2848:	mov	r0, r7
    284c:	mov	r3, #7
    2850:	bl	0 <flatcc_json_parser_set_error>
    2854:	b	2820 <flatcc_json_parser_int32.constprop.39+0x78>
    2858:	mov	r1, r0
    285c:	mov	r2, r6
    2860:	mov	r0, r7
    2864:	mov	r3, #8
    2868:	bl	0 <flatcc_json_parser_set_error>
    286c:	b	2820 <flatcc_json_parser_int32.constprop.39+0x78>

00002870 <flatcc_json_parser_int16.constprop.38>:
    2870:	push	{r4, r5, r6, r7, r8, r9, lr}
    2874:	mov	r6, #0
    2878:	sub	sp, sp, #28
    287c:	mov	r7, #0
    2880:	mov	lr, #0
    2884:	cmp	r1, r2
    2888:	strh	lr, [r3]
    288c:	str	lr, [sp, #12]
    2890:	strd	r6, [sp, #16]
    2894:	moveq	r0, r1
    2898:	beq	28e8 <flatcc_json_parser_int16.constprop.38+0x78>
    289c:	mov	r5, r3
    28a0:	add	r3, sp, #16
    28a4:	str	r3, [sp]
    28a8:	add	r3, sp, #12
    28ac:	mov	r4, r1
    28b0:	mov	r7, r0
    28b4:	mov	r6, r2
    28b8:	bl	0 <flatcc_json_parser_integer>
    28bc:	cmp	r4, r0
    28c0:	beq	28e8 <flatcc_json_parser_int16.constprop.38+0x78>
    28c4:	ldr	r1, [sp, #12]
    28c8:	ldrd	r2, [sp, #16]
    28cc:	cmp	r1, #0
    28d0:	beq	28f0 <flatcc_json_parser_int16.constprop.38+0x80>
    28d4:	cmp	r3, #0
    28d8:	cmpeq	r2, #32768	; 0x8000
    28dc:	rsbls	r2, r2, #0
    28e0:	strhls	r2, [r5]
    28e4:	bhi	2920 <flatcc_json_parser_int16.constprop.38+0xb0>
    28e8:	add	sp, sp, #28
    28ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
    28f0:	ldr	r8, [pc, #64]	; 2938 <flatcc_json_parser_int16.constprop.38+0xc8>
    28f4:	mov	r9, #0
    28f8:	cmp	r3, r9
    28fc:	cmpeq	r2, r8
    2900:	strhls	r2, [r5]
    2904:	bls	28e8 <flatcc_json_parser_int16.constprop.38+0x78>
    2908:	mov	r1, r0
    290c:	mov	r2, r6
    2910:	mov	r0, r7
    2914:	mov	r3, #7
    2918:	bl	0 <flatcc_json_parser_set_error>
    291c:	b	28e8 <flatcc_json_parser_int16.constprop.38+0x78>
    2920:	mov	r1, r0
    2924:	mov	r2, r6
    2928:	mov	r0, r7
    292c:	mov	r3, #8
    2930:	bl	0 <flatcc_json_parser_set_error>
    2934:	b	28e8 <flatcc_json_parser_int16.constprop.38+0x78>
    2938:	.word	0x00007fff

0000293c <flatcc_json_parser_int64>:
    293c:	push	{r4, r5, r6, r7, lr}
    2940:	mov	r4, #0
    2944:	sub	sp, sp, #28
    2948:	mov	r5, #0
    294c:	cmp	r1, r2
    2950:	strd	r4, [r3]
    2954:	strd	r4, [sp, #16]
    2958:	str	r4, [sp, #12]
    295c:	moveq	r0, r1
    2960:	beq	29b4 <flatcc_json_parser_int64+0x78>
    2964:	mov	r5, r3
    2968:	add	r3, sp, #16
    296c:	str	r3, [sp]
    2970:	add	r3, sp, #12
    2974:	mov	r4, r1
    2978:	mov	r6, r2
    297c:	mov	r7, r0
    2980:	bl	0 <flatcc_json_parser_integer>
    2984:	cmp	r4, r0
    2988:	beq	29b4 <flatcc_json_parser_int64+0x78>
    298c:	ldr	r1, [sp, #12]
    2990:	ldrd	r2, [sp, #16]
    2994:	cmp	r1, #0
    2998:	beq	29bc <flatcc_json_parser_int64+0x80>
    299c:	cmp	r3, #-2147483648	; 0x80000000
    29a0:	cmpeq	r2, #0
    29a4:	bhi	29d4 <flatcc_json_parser_int64+0x98>
    29a8:	rsbs	r2, r2, #0
    29ac:	rsc	r3, r3, #0
    29b0:	strd	r2, [r5]
    29b4:	add	sp, sp, #28
    29b8:	pop	{r4, r5, r6, r7, pc}
    29bc:	cmp	r2, #0
    29c0:	sbcs	r1, r3, #0
    29c4:	blt	29ec <flatcc_json_parser_int64+0xb0>
    29c8:	strd	r2, [r5]
    29cc:	add	sp, sp, #28
    29d0:	pop	{r4, r5, r6, r7, pc}
    29d4:	mov	r1, r0
    29d8:	mov	r2, r6
    29dc:	mov	r0, r7
    29e0:	mov	r3, #8
    29e4:	bl	0 <flatcc_json_parser_set_error>
    29e8:	b	29b4 <flatcc_json_parser_int64+0x78>
    29ec:	mov	r1, r0
    29f0:	mov	r2, r6
    29f4:	mov	r0, r7
    29f8:	mov	r3, #7
    29fc:	bl	0 <flatcc_json_parser_set_error>
    2a00:	b	29b4 <flatcc_json_parser_int64+0x78>

00002a04 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
    2a04:	mov	r3, #8
    2a08:	push	{r4, lr}
    2a0c:	mov	r2, r3
    2a10:	mov	r1, #0
    2a14:	mov	r4, r0
    2a18:	bl	0 <flatcc_verify_field>
    2a1c:	cmp	r0, #0
    2a20:	popne	{r4, pc}
    2a24:	mov	r3, #4
    2a28:	mov	r0, r4
    2a2c:	mov	r2, r3
    2a30:	mov	r1, #1
    2a34:	pop	{r4, lr}
    2a38:	b	0 <flatcc_verify_field>

00002a3c <flatcc_json_parser_object_start>:
    2a3c:	cmp	r1, r2
    2a40:	beq	2a50 <flatcc_json_parser_object_start+0x14>
    2a44:	ldrb	ip, [r1]
    2a48:	cmp	ip, #123	; 0x7b
    2a4c:	beq	2a60 <flatcc_json_parser_object_start+0x24>
    2a50:	mov	ip, #0
    2a54:	str	ip, [r3]
    2a58:	mov	r3, #21
    2a5c:	b	0 <flatcc_json_parser_set_error>
    2a60:	push	{r4, r5, r6, lr}
    2a64:	mov	r5, r0
    2a68:	add	r0, r1, #1
    2a6c:	mov	r6, r3
    2a70:	sub	r3, r2, r0
    2a74:	cmp	r3, #1
    2a78:	mov	r4, r2
    2a7c:	ble	2a90 <flatcc_json_parser_object_start+0x54>
    2a80:	ldrb	r3, [r1, #1]
    2a84:	cmp	r3, #32
    2a88:	bhi	2aa0 <flatcc_json_parser_object_start+0x64>
    2a8c:	beq	2ac0 <flatcc_json_parser_object_start+0x84>
    2a90:	mov	r1, r0
    2a94:	mov	r2, r4
    2a98:	mov	r0, r5
    2a9c:	bl	0 <flatcc_json_parser_space_ext>
    2aa0:	cmp	r4, r0
    2aa4:	beq	2ab4 <flatcc_json_parser_object_start+0x78>
    2aa8:	ldrb	r3, [r0]
    2aac:	cmp	r3, #125	; 0x7d
    2ab0:	beq	2ad4 <flatcc_json_parser_object_start+0x98>
    2ab4:	mov	r3, #1
    2ab8:	str	r3, [r6]
    2abc:	pop	{r4, r5, r6, pc}
    2ac0:	ldrb	r3, [r1, #2]
    2ac4:	cmp	r3, #32
    2ac8:	addhi	r0, r1, #2
    2acc:	bls	2a90 <flatcc_json_parser_object_start+0x54>
    2ad0:	b	2aa0 <flatcc_json_parser_object_start+0x64>
    2ad4:	mov	r3, #0
    2ad8:	mov	r2, r4
    2adc:	add	r1, r0, #1
    2ae0:	str	r3, [r6]
    2ae4:	mov	r0, r5
    2ae8:	pop	{r4, r5, r6, lr}
    2aec:	b	1c50 <flatcc_json_parser_space>

00002af0 <flatcc_json_parser_match_symbol.part.34>:
    2af0:	ldr	ip, [r0, #12]
    2af4:	cmp	ip, #0
    2af8:	ldrb	ip, [r1, r3]
    2afc:	beq	2b84 <flatcc_json_parser_match_symbol.part.34+0x94>
    2b00:	cmp	ip, #58	; 0x3a
    2b04:	cmpne	ip, #32
    2b08:	movls	ip, #0
    2b0c:	add	r3, r1, r3
    2b10:	movhi	ip, #1
    2b14:	strls	ip, [r0, #12]
    2b18:	bhi	2b8c <flatcc_json_parser_match_symbol.part.34+0x9c>
    2b1c:	push	{r4, r5, r6, lr}
    2b20:	mov	r5, r2
    2b24:	sub	r2, r2, r3
    2b28:	cmp	r2, #1
    2b2c:	mov	r4, r0
    2b30:	ble	2b44 <flatcc_json_parser_match_symbol.part.34+0x54>
    2b34:	ldrb	r2, [r3]
    2b38:	cmp	r2, #32
    2b3c:	bhi	2b58 <flatcc_json_parser_match_symbol.part.34+0x68>
    2b40:	beq	2ba0 <flatcc_json_parser_match_symbol.part.34+0xb0>
    2b44:	mov	r1, r3
    2b48:	mov	r2, r5
    2b4c:	mov	r0, r4
    2b50:	bl	0 <flatcc_json_parser_space_ext>
    2b54:	mov	r3, r0
    2b58:	cmp	r5, r3
    2b5c:	beq	2b6c <flatcc_json_parser_match_symbol.part.34+0x7c>
    2b60:	ldrb	r2, [r3]
    2b64:	cmp	r2, #58	; 0x3a
    2b68:	beq	2bb4 <flatcc_json_parser_match_symbol.part.34+0xc4>
    2b6c:	mov	r2, r5
    2b70:	mov	r1, r3
    2b74:	mov	r0, r4
    2b78:	mov	r3, #4
    2b7c:	pop	{r4, r5, r6, lr}
    2b80:	b	0 <flatcc_json_parser_set_error>
    2b84:	cmp	ip, #34	; 0x22
    2b88:	beq	2b94 <flatcc_json_parser_match_symbol.part.34+0xa4>
    2b8c:	mov	r0, r1
    2b90:	bx	lr
    2b94:	add	r3, r3, #1
    2b98:	add	r3, r1, r3
    2b9c:	b	2b1c <flatcc_json_parser_match_symbol.part.34+0x2c>
    2ba0:	ldrb	r2, [r3, #1]
    2ba4:	cmp	r2, #32
    2ba8:	addhi	r3, r3, #1
    2bac:	bls	2b44 <flatcc_json_parser_match_symbol.part.34+0x54>
    2bb0:	b	2b58 <flatcc_json_parser_match_symbol.part.34+0x68>
    2bb4:	mov	r2, r5
    2bb8:	mov	r0, r4
    2bbc:	add	r1, r3, #1
    2bc0:	pop	{r4, r5, r6, lr}
    2bc4:	b	1c50 <flatcc_json_parser_space>

00002bc8 <flatcc_json_parser_array_start>:
    2bc8:	cmp	r1, r2
    2bcc:	beq	2bdc <flatcc_json_parser_array_start+0x14>
    2bd0:	ldrb	ip, [r1]
    2bd4:	cmp	ip, #91	; 0x5b
    2bd8:	beq	2bec <flatcc_json_parser_array_start+0x24>
    2bdc:	mov	ip, #0
    2be0:	str	ip, [r3]
    2be4:	mov	r3, #22
    2be8:	b	0 <flatcc_json_parser_set_error>
    2bec:	push	{r4, r5, r6, lr}
    2bf0:	mov	r5, r0
    2bf4:	add	r0, r1, #1
    2bf8:	mov	r6, r3
    2bfc:	sub	r3, r2, r0
    2c00:	cmp	r3, #1
    2c04:	mov	r4, r2
    2c08:	ble	2c1c <flatcc_json_parser_array_start+0x54>
    2c0c:	ldrb	r3, [r1, #1]
    2c10:	cmp	r3, #32
    2c14:	bhi	2c2c <flatcc_json_parser_array_start+0x64>
    2c18:	beq	2c4c <flatcc_json_parser_array_start+0x84>
    2c1c:	mov	r1, r0
    2c20:	mov	r2, r4
    2c24:	mov	r0, r5
    2c28:	bl	0 <flatcc_json_parser_space_ext>
    2c2c:	cmp	r4, r0
    2c30:	beq	2c40 <flatcc_json_parser_array_start+0x78>
    2c34:	ldrb	r3, [r0]
    2c38:	cmp	r3, #93	; 0x5d
    2c3c:	beq	2c60 <flatcc_json_parser_array_start+0x98>
    2c40:	mov	r3, #1
    2c44:	str	r3, [r6]
    2c48:	pop	{r4, r5, r6, pc}
    2c4c:	ldrb	r3, [r1, #2]
    2c50:	cmp	r3, #32
    2c54:	addhi	r0, r1, #2
    2c58:	bls	2c1c <flatcc_json_parser_array_start+0x54>
    2c5c:	b	2c2c <flatcc_json_parser_array_start+0x64>
    2c60:	mov	r3, #0
    2c64:	mov	r2, r4
    2c68:	add	r1, r0, #1
    2c6c:	str	r3, [r6]
    2c70:	mov	r0, r5
    2c74:	pop	{r4, r5, r6, lr}
    2c78:	b	1c50 <flatcc_json_parser_space>

00002c7c <flatcc_json_parser_symbolic_float>:
    2c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2c80:	sub	sp, sp, #36	; 0x24
    2c84:	mov	fp, r3
    2c88:	ldr	r3, [sp, #72]	; 0x48
    2c8c:	mov	ip, #0
    2c90:	cmp	r1, r2
    2c94:	mov	r5, r1
    2c98:	mov	r6, r2
    2c9c:	str	ip, [r3]
    2ca0:	mov	r8, r0
    2ca4:	beq	2e0c <flatcc_json_parser_symbolic_float+0x190>
    2ca8:	ldrb	r3, [r1]
    2cac:	cmp	r3, #34	; 0x22
    2cb0:	beq	2dbc <flatcc_json_parser_symbolic_float+0x140>
    2cb4:	cmp	r3, #46	; 0x2e
    2cb8:	movne	r3, #1
    2cbc:	strne	r3, [r0, #12]
    2cc0:	beq	2e1c <flatcc_json_parser_symbolic_float+0x1a0>
    2cc4:	add	sl, sp, #20
    2cc8:	add	r9, sp, #24
    2ccc:	mov	r3, #0
    2cd0:	str	r3, [sp, #12]
    2cd4:	ldr	r4, [fp]
    2cd8:	mov	r7, fp
    2cdc:	b	2cf4 <flatcc_json_parser_symbolic_float+0x78>
    2ce0:	cmp	r5, r0
    2ce4:	bne	2d20 <flatcc_json_parser_symbolic_float+0xa4>
    2ce8:	ldr	r4, [r7, #4]!
    2cec:	cmp	r4, #0
    2cf0:	beq	2d8c <flatcc_json_parser_symbolic_float+0x110>
    2cf4:	stm	sp, {r9, sl}
    2cf8:	add	r3, sp, #16
    2cfc:	mov	r2, r6
    2d00:	mov	r1, r5
    2d04:	mov	r0, r8
    2d08:	blx	r4
    2d0c:	cmp	r6, r0
    2d10:	bne	2ce0 <flatcc_json_parser_symbolic_float+0x64>
    2d14:	mov	r0, r6
    2d18:	add	sp, sp, #36	; 0x24
    2d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2d20:	ldr	r3, [sp, #12]
    2d24:	mov	r4, r0
    2d28:	cmp	r3, #0
    2d2c:	beq	2d3c <flatcc_json_parser_symbolic_float+0xc0>
    2d30:	ldr	r3, [r8, #12]
    2d34:	cmp	r3, #0
    2d38:	bne	2e58 <flatcc_json_parser_symbolic_float+0x1dc>
    2d3c:	ldr	r3, [sp, #16]
    2d40:	ldrd	r0, [sp, #24]
    2d44:	cmp	r3, #0
    2d48:	beq	2db0 <flatcc_json_parser_symbolic_float+0x134>
    2d4c:	bl	0 <__aeabi_ul2f>
    2d50:	vmov	s15, r0
    2d54:	vneg.f32	s14, s15
    2d58:	ldr	r3, [sp, #72]	; 0x48
    2d5c:	ldr	r2, [sp, #12]
    2d60:	vldr	s15, [r3]
    2d64:	ldr	r3, [sp, #20]
    2d68:	add	r2, r2, #1
    2d6c:	cmp	r3, #0
    2d70:	vadd.f32	s15, s15, s14
    2d74:	ldr	r3, [sp, #72]	; 0x48
    2d78:	str	r2, [sp, #12]
    2d7c:	vstr	s15, [r3]
    2d80:	beq	2e50 <flatcc_json_parser_symbolic_float+0x1d4>
    2d84:	mov	r5, r4
    2d88:	b	2cd4 <flatcc_json_parser_symbolic_float+0x58>
    2d8c:	mov	r2, r6
    2d90:	mov	r1, r5
    2d94:	mov	r0, r8
    2d98:	mov	r3, #23
    2d9c:	bl	0 <flatcc_json_parser_set_error>
    2da0:	mov	r6, r0
    2da4:	mov	r0, r6
    2da8:	add	sp, sp, #36	; 0x24
    2dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2db0:	bl	0 <__aeabi_ul2f>
    2db4:	vmov	s14, r0
    2db8:	b	2d58 <flatcc_json_parser_symbolic_float+0xdc>
    2dbc:	add	r5, r1, #1
    2dc0:	sub	r3, r6, r5
    2dc4:	mov	r2, #0
    2dc8:	str	r2, [r0, #12]
    2dcc:	cmp	r3, #1
    2dd0:	ble	2de4 <flatcc_json_parser_symbolic_float+0x168>
    2dd4:	ldrb	r3, [r5]
    2dd8:	cmp	r3, #32
    2ddc:	bhi	2df8 <flatcc_json_parser_symbolic_float+0x17c>
    2de0:	beq	2e3c <flatcc_json_parser_symbolic_float+0x1c0>
    2de4:	mov	r1, r5
    2de8:	mov	r2, r6
    2dec:	mov	r0, r8
    2df0:	bl	0 <flatcc_json_parser_space_ext>
    2df4:	mov	r5, r0
    2df8:	cmp	r6, r5
    2dfc:	bne	2cc4 <flatcc_json_parser_symbolic_float+0x48>
    2e00:	mov	r0, r6
    2e04:	add	sp, sp, #36	; 0x24
    2e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2e0c:	ldr	r3, [r0, #12]
    2e10:	cmp	r3, #0
    2e14:	beq	2de4 <flatcc_json_parser_symbolic_float+0x168>
    2e18:	b	2d14 <flatcc_json_parser_symbolic_float+0x98>
    2e1c:	mov	r3, #5
    2e20:	bl	0 <flatcc_json_parser_set_error>
    2e24:	ldr	r3, [r8, #12]
    2e28:	cmp	r3, #0
    2e2c:	mov	r5, r0
    2e30:	subeq	r3, r6, r0
    2e34:	beq	2dcc <flatcc_json_parser_symbolic_float+0x150>
    2e38:	b	2df8 <flatcc_json_parser_symbolic_float+0x17c>
    2e3c:	ldrb	r3, [r5, #1]
    2e40:	cmp	r3, #32
    2e44:	addhi	r5, r5, #1
    2e48:	bls	2de4 <flatcc_json_parser_symbolic_float+0x168>
    2e4c:	b	2df8 <flatcc_json_parser_symbolic_float+0x17c>
    2e50:	mov	r6, r4
    2e54:	b	2d14 <flatcc_json_parser_symbolic_float+0x98>
    2e58:	mov	r2, r6
    2e5c:	mov	r1, r4
    2e60:	mov	r0, r8
    2e64:	mov	r3, #14
    2e68:	bl	0 <flatcc_json_parser_set_error>
    2e6c:	mov	r6, r0
    2e70:	b	2d14 <flatcc_json_parser_symbolic_float+0x98>

00002e74 <flatcc_json_parser_symbolic_double>:
    2e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2e78:	sub	sp, sp, #36	; 0x24
    2e7c:	mov	fp, r3
    2e80:	ldr	r3, [sp, #72]	; 0x48
    2e84:	mov	r8, #0
    2e88:	mov	r9, #0
    2e8c:	cmp	r1, r2
    2e90:	strd	r8, [r3]
    2e94:	mov	r5, r1
    2e98:	mov	r6, r2
    2e9c:	mov	r8, r0
    2ea0:	beq	3008 <flatcc_json_parser_symbolic_double+0x194>
    2ea4:	ldrb	r3, [r1]
    2ea8:	cmp	r3, #34	; 0x22
    2eac:	beq	2fb8 <flatcc_json_parser_symbolic_double+0x144>
    2eb0:	cmp	r3, #46	; 0x2e
    2eb4:	movne	r3, #1
    2eb8:	strne	r3, [r0, #12]
    2ebc:	beq	3018 <flatcc_json_parser_symbolic_double+0x1a4>
    2ec0:	add	sl, sp, #20
    2ec4:	add	r9, sp, #24
    2ec8:	mov	r3, #0
    2ecc:	str	r3, [sp, #12]
    2ed0:	ldr	r4, [fp]
    2ed4:	mov	r7, fp
    2ed8:	b	2ef0 <flatcc_json_parser_symbolic_double+0x7c>
    2edc:	cmp	r5, r0
    2ee0:	bne	2f1c <flatcc_json_parser_symbolic_double+0xa8>
    2ee4:	ldr	r4, [r7, #4]!
    2ee8:	cmp	r4, #0
    2eec:	beq	2f88 <flatcc_json_parser_symbolic_double+0x114>
    2ef0:	stm	sp, {r9, sl}
    2ef4:	add	r3, sp, #16
    2ef8:	mov	r2, r6
    2efc:	mov	r1, r5
    2f00:	mov	r0, r8
    2f04:	blx	r4
    2f08:	cmp	r6, r0
    2f0c:	bne	2edc <flatcc_json_parser_symbolic_double+0x68>
    2f10:	mov	r0, r6
    2f14:	add	sp, sp, #36	; 0x24
    2f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2f1c:	ldr	r3, [sp, #12]
    2f20:	mov	r4, r0
    2f24:	cmp	r3, #0
    2f28:	beq	2f38 <flatcc_json_parser_symbolic_double+0xc4>
    2f2c:	ldr	r3, [r8, #12]
    2f30:	cmp	r3, #0
    2f34:	bne	3054 <flatcc_json_parser_symbolic_double+0x1e0>
    2f38:	ldr	r3, [sp, #16]
    2f3c:	ldrd	r0, [sp, #24]
    2f40:	cmp	r3, #0
    2f44:	beq	2fac <flatcc_json_parser_symbolic_double+0x138>
    2f48:	bl	0 <__aeabi_ul2d>
    2f4c:	vmov	d7, r0, r1
    2f50:	vneg.f64	d6, d7
    2f54:	ldr	r3, [sp, #72]	; 0x48
    2f58:	ldr	r2, [sp, #12]
    2f5c:	vldr	d7, [r3]
    2f60:	ldr	r3, [sp, #20]
    2f64:	add	r2, r2, #1
    2f68:	cmp	r3, #0
    2f6c:	vadd.f64	d7, d7, d6
    2f70:	ldr	r3, [sp, #72]	; 0x48
    2f74:	str	r2, [sp, #12]
    2f78:	vstr	d7, [r3]
    2f7c:	beq	304c <flatcc_json_parser_symbolic_double+0x1d8>
    2f80:	mov	r5, r4
    2f84:	b	2ed0 <flatcc_json_parser_symbolic_double+0x5c>
    2f88:	mov	r2, r6
    2f8c:	mov	r1, r5
    2f90:	mov	r0, r8
    2f94:	mov	r3, #23
    2f98:	bl	0 <flatcc_json_parser_set_error>
    2f9c:	mov	r6, r0
    2fa0:	mov	r0, r6
    2fa4:	add	sp, sp, #36	; 0x24
    2fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2fac:	bl	0 <__aeabi_ul2d>
    2fb0:	vmov	d6, r0, r1
    2fb4:	b	2f54 <flatcc_json_parser_symbolic_double+0xe0>
    2fb8:	add	r5, r1, #1
    2fbc:	sub	r3, r6, r5
    2fc0:	mov	r2, #0
    2fc4:	str	r2, [r0, #12]
    2fc8:	cmp	r3, #1
    2fcc:	ble	2fe0 <flatcc_json_parser_symbolic_double+0x16c>
    2fd0:	ldrb	r3, [r5]
    2fd4:	cmp	r3, #32
    2fd8:	bhi	2ff4 <flatcc_json_parser_symbolic_double+0x180>
    2fdc:	beq	3038 <flatcc_json_parser_symbolic_double+0x1c4>
    2fe0:	mov	r1, r5
    2fe4:	mov	r2, r6
    2fe8:	mov	r0, r8
    2fec:	bl	0 <flatcc_json_parser_space_ext>
    2ff0:	mov	r5, r0
    2ff4:	cmp	r6, r5
    2ff8:	bne	2ec0 <flatcc_json_parser_symbolic_double+0x4c>
    2ffc:	mov	r0, r6
    3000:	add	sp, sp, #36	; 0x24
    3004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3008:	ldr	r3, [r0, #12]
    300c:	cmp	r3, #0
    3010:	beq	2fe0 <flatcc_json_parser_symbolic_double+0x16c>
    3014:	b	2f10 <flatcc_json_parser_symbolic_double+0x9c>
    3018:	mov	r3, #5
    301c:	bl	0 <flatcc_json_parser_set_error>
    3020:	ldr	r3, [r8, #12]
    3024:	cmp	r3, #0
    3028:	mov	r5, r0
    302c:	subeq	r3, r6, r0
    3030:	beq	2fc8 <flatcc_json_parser_symbolic_double+0x154>
    3034:	b	2ff4 <flatcc_json_parser_symbolic_double+0x180>
    3038:	ldrb	r3, [r5, #1]
    303c:	cmp	r3, #32
    3040:	addhi	r5, r5, #1
    3044:	bls	2fe0 <flatcc_json_parser_symbolic_double+0x16c>
    3048:	b	2ff4 <flatcc_json_parser_symbolic_double+0x180>
    304c:	mov	r6, r4
    3050:	b	2f10 <flatcc_json_parser_symbolic_double+0x9c>
    3054:	mov	r2, r6
    3058:	mov	r1, r4
    305c:	mov	r0, r8
    3060:	mov	r3, #14
    3064:	bl	0 <flatcc_json_parser_set_error>
    3068:	mov	r6, r0
    306c:	b	2f10 <flatcc_json_parser_symbolic_double+0x9c>

00003070 <flatcc_json_parser_symbolic_bool>:
    3070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3074:	sub	sp, sp, #36	; 0x24
    3078:	mov	ip, #0
    307c:	str	r3, [sp, #12]
    3080:	ldr	r3, [sp, #72]	; 0x48
    3084:	cmp	r1, r2
    3088:	mov	r6, r1
    308c:	mov	r5, r2
    3090:	strb	ip, [r3]
    3094:	mov	r8, r0
    3098:	beq	3214 <flatcc_json_parser_symbolic_bool+0x1a4>
    309c:	ldrb	r3, [r1]
    30a0:	cmp	r3, #34	; 0x22
    30a4:	beq	31c8 <flatcc_json_parser_symbolic_bool+0x158>
    30a8:	cmp	r3, #46	; 0x2e
    30ac:	movne	r3, #1
    30b0:	strne	r3, [r0, #12]
    30b4:	beq	3224 <flatcc_json_parser_symbolic_bool+0x1b4>
    30b8:	add	sl, sp, #20
    30bc:	add	r9, sp, #24
    30c0:	mov	fp, #0
    30c4:	str	fp, [sp, #8]
    30c8:	ldr	r3, [sp, #12]
    30cc:	mov	r7, r3
    30d0:	ldr	r4, [r3]
    30d4:	b	30ec <flatcc_json_parser_symbolic_bool+0x7c>
    30d8:	cmp	r6, r0
    30dc:	bne	3118 <flatcc_json_parser_symbolic_bool+0xa8>
    30e0:	ldr	r4, [r7, #4]!
    30e4:	cmp	r4, #0
    30e8:	beq	3184 <flatcc_json_parser_symbolic_bool+0x114>
    30ec:	stm	sp, {r9, sl}
    30f0:	add	r3, sp, #16
    30f4:	mov	r2, r5
    30f8:	mov	r1, r6
    30fc:	mov	r0, r8
    3100:	blx	r4
    3104:	cmp	r5, r0
    3108:	bne	30d8 <flatcc_json_parser_symbolic_bool+0x68>
    310c:	mov	r0, r5
    3110:	add	sp, sp, #36	; 0x24
    3114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3118:	cmp	fp, #0
    311c:	mov	r4, r0
    3120:	beq	3130 <flatcc_json_parser_symbolic_bool+0xc0>
    3124:	ldr	r3, [r8, #12]
    3128:	cmp	r3, #0
    312c:	bne	3260 <flatcc_json_parser_symbolic_bool+0x1f0>
    3130:	ldr	r3, [sp, #16]
    3134:	cmp	r3, #0
    3138:	bne	31a8 <flatcc_json_parser_symbolic_bool+0x138>
    313c:	ldr	r3, [sp, #28]
    3140:	ldr	r2, [sp, #24]
    3144:	orrs	r3, r2, r3
    3148:	movne	r3, #1
    314c:	moveq	r3, #0
    3150:	str	r3, [sp, #8]
    3154:	ldr	r3, [sp, #72]	; 0x48
    3158:	ldr	r2, [sp, #20]
    315c:	ldr	r1, [sp, #8]
    3160:	ldrb	r3, [r3]
    3164:	cmp	r2, #0
    3168:	ldr	r2, [sp, #72]	; 0x48
    316c:	add	r3, r1, r3
    3170:	add	fp, fp, #1
    3174:	strb	r3, [r2]
    3178:	beq	3258 <flatcc_json_parser_symbolic_bool+0x1e8>
    317c:	mov	r6, r4
    3180:	b	30c8 <flatcc_json_parser_symbolic_bool+0x58>
    3184:	mov	r2, r5
    3188:	mov	r1, r6
    318c:	mov	r0, r8
    3190:	mov	r3, #23
    3194:	bl	0 <flatcc_json_parser_set_error>
    3198:	mov	r5, r0
    319c:	mov	r0, r5
    31a0:	add	sp, sp, #36	; 0x24
    31a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    31a8:	mov	r3, #8
    31ac:	mov	r2, r5
    31b0:	mov	r1, r4
    31b4:	mov	r0, r8
    31b8:	bl	0 <flatcc_json_parser_set_error>
    31bc:	cmp	r5, r0
    31c0:	bne	3154 <flatcc_json_parser_symbolic_bool+0xe4>
    31c4:	b	310c <flatcc_json_parser_symbolic_bool+0x9c>
    31c8:	add	r6, r1, #1
    31cc:	sub	r3, r2, r6
    31d0:	str	ip, [r0, #12]
    31d4:	cmp	r3, #1
    31d8:	ble	31ec <flatcc_json_parser_symbolic_bool+0x17c>
    31dc:	ldrb	r3, [r6]
    31e0:	cmp	r3, #32
    31e4:	bhi	3200 <flatcc_json_parser_symbolic_bool+0x190>
    31e8:	beq	3244 <flatcc_json_parser_symbolic_bool+0x1d4>
    31ec:	mov	r1, r6
    31f0:	mov	r2, r5
    31f4:	mov	r0, r8
    31f8:	bl	0 <flatcc_json_parser_space_ext>
    31fc:	mov	r6, r0
    3200:	cmp	r5, r6
    3204:	bne	30b8 <flatcc_json_parser_symbolic_bool+0x48>
    3208:	mov	r0, r5
    320c:	add	sp, sp, #36	; 0x24
    3210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3214:	ldr	r3, [r0, #12]
    3218:	cmp	r3, #0
    321c:	beq	31ec <flatcc_json_parser_symbolic_bool+0x17c>
    3220:	b	310c <flatcc_json_parser_symbolic_bool+0x9c>
    3224:	mov	r3, #5
    3228:	bl	0 <flatcc_json_parser_set_error>
    322c:	ldr	r3, [r8, #12]
    3230:	cmp	r3, #0
    3234:	mov	r6, r0
    3238:	subeq	r3, r5, r0
    323c:	beq	31d4 <flatcc_json_parser_symbolic_bool+0x164>
    3240:	b	3200 <flatcc_json_parser_symbolic_bool+0x190>
    3244:	ldrb	r3, [r6, #1]
    3248:	cmp	r3, #32
    324c:	addhi	r6, r6, #1
    3250:	bls	31ec <flatcc_json_parser_symbolic_bool+0x17c>
    3254:	b	3200 <flatcc_json_parser_symbolic_bool+0x190>
    3258:	mov	r5, r4
    325c:	b	310c <flatcc_json_parser_symbolic_bool+0x9c>
    3260:	mov	r2, r5
    3264:	mov	r1, r4
    3268:	mov	r0, r8
    326c:	mov	r3, #14
    3270:	bl	0 <flatcc_json_parser_set_error>
    3274:	mov	r5, r0
    3278:	b	310c <flatcc_json_parser_symbolic_bool+0x9c>

0000327c <flatcc_json_parser_symbolic_uint16>:
    327c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3280:	sub	sp, sp, #36	; 0x24
    3284:	mov	ip, #0
    3288:	str	r3, [sp, #8]
    328c:	ldr	r3, [sp, #72]	; 0x48
    3290:	cmp	r1, r2
    3294:	mov	r6, r1
    3298:	mov	r5, r2
    329c:	strh	ip, [r3]
    32a0:	mov	r8, r0
    32a4:	beq	343c <flatcc_json_parser_symbolic_uint16+0x1c0>
    32a8:	ldrb	r3, [r1]
    32ac:	cmp	r3, #34	; 0x22
    32b0:	beq	33f0 <flatcc_json_parser_symbolic_uint16+0x174>
    32b4:	cmp	r3, #46	; 0x2e
    32b8:	movne	r3, #1
    32bc:	strne	r3, [r0, #12]
    32c0:	beq	344c <flatcc_json_parser_symbolic_uint16+0x1d0>
    32c4:	add	sl, sp, #20
    32c8:	add	r9, sp, #24
    32cc:	mov	fp, #0
    32d0:	str	fp, [sp, #12]
    32d4:	ldr	r7, [sp, #8]
    32d8:	ldr	r4, [r7]
    32dc:	b	32f4 <flatcc_json_parser_symbolic_uint16+0x78>
    32e0:	cmp	r6, r0
    32e4:	bne	3320 <flatcc_json_parser_symbolic_uint16+0xa4>
    32e8:	ldr	r4, [r7, #4]!
    32ec:	cmp	r4, #0
    32f0:	beq	3394 <flatcc_json_parser_symbolic_uint16+0x118>
    32f4:	stm	sp, {r9, sl}
    32f8:	add	r3, sp, #16
    32fc:	mov	r2, r5
    3300:	mov	r1, r6
    3304:	mov	r0, r8
    3308:	blx	r4
    330c:	cmp	r5, r0
    3310:	bne	32e0 <flatcc_json_parser_symbolic_uint16+0x64>
    3314:	mov	r0, r5
    3318:	add	sp, sp, #36	; 0x24
    331c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3320:	cmp	fp, #0
    3324:	mov	r4, r0
    3328:	beq	3338 <flatcc_json_parser_symbolic_uint16+0xbc>
    332c:	ldr	r3, [r8, #12]
    3330:	cmp	r3, #0
    3334:	bne	3488 <flatcc_json_parser_symbolic_uint16+0x20c>
    3338:	ldr	r3, [sp, #16]
    333c:	cmp	r3, #0
    3340:	bne	33b8 <flatcc_json_parser_symbolic_uint16+0x13c>
    3344:	ldrd	r2, [sp, #24]
    3348:	ldr	r0, [pc, #340]	; 34a4 <flatcc_json_parser_symbolic_uint16+0x228>
    334c:	mov	r1, #0
    3350:	cmp	r3, r1
    3354:	cmpeq	r2, r0
    3358:	uxthls	r3, r2
    335c:	strls	r3, [sp, #12]
    3360:	bhi	33d8 <flatcc_json_parser_symbolic_uint16+0x15c>
    3364:	ldr	r3, [sp, #72]	; 0x48
    3368:	ldr	r2, [sp, #20]
    336c:	ldr	r1, [sp, #12]
    3370:	ldrh	r3, [r3]
    3374:	cmp	r2, #0
    3378:	ldr	r2, [sp, #72]	; 0x48
    337c:	add	r3, r1, r3
    3380:	add	fp, fp, #1
    3384:	strh	r3, [r2]
    3388:	beq	3480 <flatcc_json_parser_symbolic_uint16+0x204>
    338c:	mov	r6, r4
    3390:	b	32d4 <flatcc_json_parser_symbolic_uint16+0x58>
    3394:	mov	r2, r5
    3398:	mov	r1, r6
    339c:	mov	r0, r8
    33a0:	mov	r3, #23
    33a4:	bl	0 <flatcc_json_parser_set_error>
    33a8:	mov	r5, r0
    33ac:	mov	r0, r5
    33b0:	add	sp, sp, #36	; 0x24
    33b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33b8:	mov	r3, #8
    33bc:	mov	r2, r5
    33c0:	mov	r1, r4
    33c4:	mov	r0, r8
    33c8:	bl	0 <flatcc_json_parser_set_error>
    33cc:	cmp	r5, r0
    33d0:	bne	3364 <flatcc_json_parser_symbolic_uint16+0xe8>
    33d4:	b	3314 <flatcc_json_parser_symbolic_uint16+0x98>
    33d8:	mov	r3, #7
    33dc:	mov	r2, r5
    33e0:	mov	r1, r4
    33e4:	mov	r0, r8
    33e8:	bl	0 <flatcc_json_parser_set_error>
    33ec:	b	33cc <flatcc_json_parser_symbolic_uint16+0x150>
    33f0:	add	r6, r1, #1
    33f4:	sub	r3, r2, r6
    33f8:	str	ip, [r0, #12]
    33fc:	cmp	r3, #1
    3400:	ble	3414 <flatcc_json_parser_symbolic_uint16+0x198>
    3404:	ldrb	r3, [r6]
    3408:	cmp	r3, #32
    340c:	bhi	3428 <flatcc_json_parser_symbolic_uint16+0x1ac>
    3410:	beq	346c <flatcc_json_parser_symbolic_uint16+0x1f0>
    3414:	mov	r1, r6
    3418:	mov	r2, r5
    341c:	mov	r0, r8
    3420:	bl	0 <flatcc_json_parser_space_ext>
    3424:	mov	r6, r0
    3428:	cmp	r5, r6
    342c:	bne	32c4 <flatcc_json_parser_symbolic_uint16+0x48>
    3430:	mov	r0, r5
    3434:	add	sp, sp, #36	; 0x24
    3438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    343c:	ldr	r3, [r0, #12]
    3440:	cmp	r3, #0
    3444:	beq	3414 <flatcc_json_parser_symbolic_uint16+0x198>
    3448:	b	3314 <flatcc_json_parser_symbolic_uint16+0x98>
    344c:	mov	r3, #5
    3450:	bl	0 <flatcc_json_parser_set_error>
    3454:	ldr	r3, [r8, #12]
    3458:	cmp	r3, #0
    345c:	mov	r6, r0
    3460:	subeq	r3, r5, r0
    3464:	beq	33fc <flatcc_json_parser_symbolic_uint16+0x180>
    3468:	b	3428 <flatcc_json_parser_symbolic_uint16+0x1ac>
    346c:	ldrb	r3, [r6, #1]
    3470:	cmp	r3, #32
    3474:	addhi	r6, r6, #1
    3478:	bls	3414 <flatcc_json_parser_symbolic_uint16+0x198>
    347c:	b	3428 <flatcc_json_parser_symbolic_uint16+0x1ac>
    3480:	mov	r5, r4
    3484:	b	3314 <flatcc_json_parser_symbolic_uint16+0x98>
    3488:	mov	r2, r5
    348c:	mov	r1, r4
    3490:	mov	r0, r8
    3494:	mov	r3, #14
    3498:	bl	0 <flatcc_json_parser_set_error>
    349c:	mov	r5, r0
    34a0:	b	3314 <flatcc_json_parser_symbolic_uint16+0x98>
    34a4:	.word	0x0000ffff

000034a8 <flatcc_json_parser_symbolic_int32>:
    34a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    34ac:	sub	sp, sp, #36	; 0x24
    34b0:	mov	ip, #0
    34b4:	str	r3, [sp, #12]
    34b8:	ldr	r3, [sp, #72]	; 0x48
    34bc:	cmp	r1, r2
    34c0:	mov	r6, r1
    34c4:	mov	r5, r2
    34c8:	str	ip, [r3]
    34cc:	mov	r8, r0
    34d0:	beq	3674 <flatcc_json_parser_symbolic_int32+0x1cc>
    34d4:	ldrb	r3, [r1]
    34d8:	cmp	r3, #34	; 0x22
    34dc:	beq	3630 <flatcc_json_parser_symbolic_int32+0x188>
    34e0:	cmp	r3, #46	; 0x2e
    34e4:	movne	r3, #1
    34e8:	strne	r3, [r0, #12]
    34ec:	beq	3684 <flatcc_json_parser_symbolic_int32+0x1dc>
    34f0:	add	sl, sp, #20
    34f4:	add	r9, sp, #24
    34f8:	mov	fp, #0
    34fc:	str	fp, [sp, #8]
    3500:	ldr	r3, [sp, #12]
    3504:	mov	r7, r3
    3508:	ldr	r4, [r3]
    350c:	b	3524 <flatcc_json_parser_symbolic_int32+0x7c>
    3510:	cmp	r6, r0
    3514:	bne	3550 <flatcc_json_parser_symbolic_int32+0xa8>
    3518:	ldr	r4, [r7, #4]!
    351c:	cmp	r4, #0
    3520:	beq	35bc <flatcc_json_parser_symbolic_int32+0x114>
    3524:	stm	sp, {r9, sl}
    3528:	add	r3, sp, #16
    352c:	mov	r2, r5
    3530:	mov	r1, r6
    3534:	mov	r0, r8
    3538:	blx	r4
    353c:	cmp	r5, r0
    3540:	bne	3510 <flatcc_json_parser_symbolic_int32+0x68>
    3544:	mov	r0, r5
    3548:	add	sp, sp, #36	; 0x24
    354c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3550:	cmp	fp, #0
    3554:	mov	r4, r0
    3558:	beq	3568 <flatcc_json_parser_symbolic_int32+0xc0>
    355c:	ldr	r3, [r8, #12]
    3560:	cmp	r3, #0
    3564:	bne	36c0 <flatcc_json_parser_symbolic_int32+0x218>
    3568:	ldr	r1, [sp, #16]
    356c:	ldrd	r2, [sp, #24]
    3570:	cmp	r1, #0
    3574:	beq	35e0 <flatcc_json_parser_symbolic_int32+0x138>
    3578:	cmp	r3, #0
    357c:	cmpeq	r2, #-2147483648	; 0x80000000
    3580:	rsbls	r3, r2, #0
    3584:	strls	r3, [sp, #8]
    3588:	bhi	3610 <flatcc_json_parser_symbolic_int32+0x168>
    358c:	ldr	r3, [sp, #72]	; 0x48
    3590:	ldr	r2, [sp, #20]
    3594:	ldr	r1, [sp, #8]
    3598:	ldr	r3, [r3]
    359c:	cmp	r2, #0
    35a0:	ldr	r2, [sp, #72]	; 0x48
    35a4:	add	r3, r3, r1
    35a8:	add	fp, fp, #1
    35ac:	str	r3, [r2]
    35b0:	beq	36b8 <flatcc_json_parser_symbolic_int32+0x210>
    35b4:	mov	r6, r4
    35b8:	b	3500 <flatcc_json_parser_symbolic_int32+0x58>
    35bc:	mov	r2, r5
    35c0:	mov	r1, r6
    35c4:	mov	r0, r8
    35c8:	mov	r3, #23
    35cc:	bl	0 <flatcc_json_parser_set_error>
    35d0:	mov	r5, r0
    35d4:	mov	r0, r5
    35d8:	add	sp, sp, #36	; 0x24
    35dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    35e0:	mov	r1, #0
    35e4:	cmp	r3, r1
    35e8:	mvn	r0, #-2147483648	; 0x80000000
    35ec:	cmpeq	r2, r0
    35f0:	strls	r2, [sp, #8]
    35f4:	bls	358c <flatcc_json_parser_symbolic_int32+0xe4>
    35f8:	mov	r3, #7
    35fc:	mov	r2, r5
    3600:	mov	r1, r4
    3604:	mov	r0, r8
    3608:	bl	0 <flatcc_json_parser_set_error>
    360c:	b	3624 <flatcc_json_parser_symbolic_int32+0x17c>
    3610:	mov	r3, #8
    3614:	mov	r2, r5
    3618:	mov	r1, r4
    361c:	mov	r0, r8
    3620:	bl	0 <flatcc_json_parser_set_error>
    3624:	cmp	r5, r0
    3628:	bne	358c <flatcc_json_parser_symbolic_int32+0xe4>
    362c:	b	3544 <flatcc_json_parser_symbolic_int32+0x9c>
    3630:	add	r6, r1, #1
    3634:	sub	r3, r2, r6
    3638:	str	ip, [r0, #12]
    363c:	cmp	r3, #1
    3640:	ble	3654 <flatcc_json_parser_symbolic_int32+0x1ac>
    3644:	ldrb	r3, [r6]
    3648:	cmp	r3, #32
    364c:	bhi	3668 <flatcc_json_parser_symbolic_int32+0x1c0>
    3650:	beq	36a4 <flatcc_json_parser_symbolic_int32+0x1fc>
    3654:	mov	r1, r6
    3658:	mov	r2, r5
    365c:	mov	r0, r8
    3660:	bl	0 <flatcc_json_parser_space_ext>
    3664:	mov	r6, r0
    3668:	cmp	r5, r6
    366c:	bne	34f0 <flatcc_json_parser_symbolic_int32+0x48>
    3670:	b	3544 <flatcc_json_parser_symbolic_int32+0x9c>
    3674:	ldr	r3, [r0, #12]
    3678:	cmp	r3, #0
    367c:	bne	3544 <flatcc_json_parser_symbolic_int32+0x9c>
    3680:	b	3654 <flatcc_json_parser_symbolic_int32+0x1ac>
    3684:	mov	r3, #5
    3688:	bl	0 <flatcc_json_parser_set_error>
    368c:	ldr	r3, [r8, #12]
    3690:	cmp	r3, #0
    3694:	mov	r6, r0
    3698:	subeq	r3, r5, r0
    369c:	beq	363c <flatcc_json_parser_symbolic_int32+0x194>
    36a0:	b	3668 <flatcc_json_parser_symbolic_int32+0x1c0>
    36a4:	ldrb	r3, [r6, #1]
    36a8:	cmp	r3, #32
    36ac:	addhi	r6, r6, #1
    36b0:	bls	3654 <flatcc_json_parser_symbolic_int32+0x1ac>
    36b4:	b	3668 <flatcc_json_parser_symbolic_int32+0x1c0>
    36b8:	mov	r5, r4
    36bc:	b	3544 <flatcc_json_parser_symbolic_int32+0x9c>
    36c0:	mov	r2, r5
    36c4:	mov	r1, r4
    36c8:	mov	r0, r8
    36cc:	mov	r3, #14
    36d0:	bl	0 <flatcc_json_parser_set_error>
    36d4:	mov	r5, r0
    36d8:	b	3544 <flatcc_json_parser_symbolic_int32+0x9c>

000036dc <flatcc_json_parser_symbolic_int8>:
    36dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    36e0:	sub	sp, sp, #36	; 0x24
    36e4:	mov	ip, #0
    36e8:	str	r3, [sp, #12]
    36ec:	ldr	r3, [sp, #72]	; 0x48
    36f0:	cmp	r1, r2
    36f4:	mov	r6, r1
    36f8:	mov	r5, r2
    36fc:	strb	ip, [r3]
    3700:	mov	r8, r0
    3704:	beq	38a8 <flatcc_json_parser_symbolic_int8+0x1cc>
    3708:	ldrb	r3, [r1]
    370c:	cmp	r3, #34	; 0x22
    3710:	beq	3864 <flatcc_json_parser_symbolic_int8+0x188>
    3714:	cmp	r3, #46	; 0x2e
    3718:	movne	r3, #1
    371c:	strne	r3, [r0, #12]
    3720:	beq	38b8 <flatcc_json_parser_symbolic_int8+0x1dc>
    3724:	add	sl, sp, #20
    3728:	add	r9, sp, #24
    372c:	mov	fp, #0
    3730:	str	fp, [sp, #8]
    3734:	ldr	r3, [sp, #12]
    3738:	mov	r7, r3
    373c:	ldr	r4, [r3]
    3740:	b	3758 <flatcc_json_parser_symbolic_int8+0x7c>
    3744:	cmp	r6, r0
    3748:	bne	3784 <flatcc_json_parser_symbolic_int8+0xa8>
    374c:	ldr	r4, [r7, #4]!
    3750:	cmp	r4, #0
    3754:	beq	37f4 <flatcc_json_parser_symbolic_int8+0x118>
    3758:	stm	sp, {r9, sl}
    375c:	add	r3, sp, #16
    3760:	mov	r2, r5
    3764:	mov	r1, r6
    3768:	mov	r0, r8
    376c:	blx	r4
    3770:	cmp	r5, r0
    3774:	bne	3744 <flatcc_json_parser_symbolic_int8+0x68>
    3778:	mov	r0, r5
    377c:	add	sp, sp, #36	; 0x24
    3780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3784:	cmp	fp, #0
    3788:	mov	r4, r0
    378c:	beq	379c <flatcc_json_parser_symbolic_int8+0xc0>
    3790:	ldr	r3, [r8, #12]
    3794:	cmp	r3, #0
    3798:	bne	38f4 <flatcc_json_parser_symbolic_int8+0x218>
    379c:	ldr	r1, [sp, #16]
    37a0:	ldrd	r2, [sp, #24]
    37a4:	cmp	r1, #0
    37a8:	beq	3818 <flatcc_json_parser_symbolic_int8+0x13c>
    37ac:	cmp	r3, #0
    37b0:	cmpeq	r2, #128	; 0x80
    37b4:	rsbls	r2, r2, #0
    37b8:	sxtbls	r3, r2
    37bc:	strls	r3, [sp, #8]
    37c0:	bhi	3844 <flatcc_json_parser_symbolic_int8+0x168>
    37c4:	ldr	r3, [sp, #72]	; 0x48
    37c8:	ldr	r2, [sp, #20]
    37cc:	ldr	r1, [sp, #8]
    37d0:	ldrb	r3, [r3]
    37d4:	cmp	r2, #0
    37d8:	ldr	r2, [sp, #72]	; 0x48
    37dc:	add	r3, r3, r1
    37e0:	add	fp, fp, #1
    37e4:	strb	r3, [r2]
    37e8:	beq	38ec <flatcc_json_parser_symbolic_int8+0x210>
    37ec:	mov	r6, r4
    37f0:	b	3734 <flatcc_json_parser_symbolic_int8+0x58>
    37f4:	mov	r2, r5
    37f8:	mov	r1, r6
    37fc:	mov	r0, r8
    3800:	mov	r3, #23
    3804:	bl	0 <flatcc_json_parser_set_error>
    3808:	mov	r5, r0
    380c:	mov	r0, r5
    3810:	add	sp, sp, #36	; 0x24
    3814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3818:	cmp	r3, #0
    381c:	cmpeq	r2, #127	; 0x7f
    3820:	sxtbls	r3, r2
    3824:	strls	r3, [sp, #8]
    3828:	bls	37c4 <flatcc_json_parser_symbolic_int8+0xe8>
    382c:	mov	r3, #7
    3830:	mov	r2, r5
    3834:	mov	r1, r4
    3838:	mov	r0, r8
    383c:	bl	0 <flatcc_json_parser_set_error>
    3840:	b	3858 <flatcc_json_parser_symbolic_int8+0x17c>
    3844:	mov	r3, #8
    3848:	mov	r2, r5
    384c:	mov	r1, r4
    3850:	mov	r0, r8
    3854:	bl	0 <flatcc_json_parser_set_error>
    3858:	cmp	r5, r0
    385c:	bne	37c4 <flatcc_json_parser_symbolic_int8+0xe8>
    3860:	b	3778 <flatcc_json_parser_symbolic_int8+0x9c>
    3864:	add	r6, r1, #1
    3868:	sub	r3, r2, r6
    386c:	str	ip, [r0, #12]
    3870:	cmp	r3, #1
    3874:	ble	3888 <flatcc_json_parser_symbolic_int8+0x1ac>
    3878:	ldrb	r3, [r6]
    387c:	cmp	r3, #32
    3880:	bhi	389c <flatcc_json_parser_symbolic_int8+0x1c0>
    3884:	beq	38d8 <flatcc_json_parser_symbolic_int8+0x1fc>
    3888:	mov	r1, r6
    388c:	mov	r2, r5
    3890:	mov	r0, r8
    3894:	bl	0 <flatcc_json_parser_space_ext>
    3898:	mov	r6, r0
    389c:	cmp	r5, r6
    38a0:	bne	3724 <flatcc_json_parser_symbolic_int8+0x48>
    38a4:	b	3778 <flatcc_json_parser_symbolic_int8+0x9c>
    38a8:	ldr	r3, [r0, #12]
    38ac:	cmp	r3, #0
    38b0:	bne	3778 <flatcc_json_parser_symbolic_int8+0x9c>
    38b4:	b	3888 <flatcc_json_parser_symbolic_int8+0x1ac>
    38b8:	mov	r3, #5
    38bc:	bl	0 <flatcc_json_parser_set_error>
    38c0:	ldr	r3, [r8, #12]
    38c4:	cmp	r3, #0
    38c8:	mov	r6, r0
    38cc:	subeq	r3, r5, r0
    38d0:	beq	3870 <flatcc_json_parser_symbolic_int8+0x194>
    38d4:	b	389c <flatcc_json_parser_symbolic_int8+0x1c0>
    38d8:	ldrb	r3, [r6, #1]
    38dc:	cmp	r3, #32
    38e0:	addhi	r6, r6, #1
    38e4:	bls	3888 <flatcc_json_parser_symbolic_int8+0x1ac>
    38e8:	b	389c <flatcc_json_parser_symbolic_int8+0x1c0>
    38ec:	mov	r5, r4
    38f0:	b	3778 <flatcc_json_parser_symbolic_int8+0x9c>
    38f4:	mov	r2, r5
    38f8:	mov	r1, r4
    38fc:	mov	r0, r8
    3900:	mov	r3, #14
    3904:	bl	0 <flatcc_json_parser_set_error>
    3908:	mov	r5, r0
    390c:	b	3778 <flatcc_json_parser_symbolic_int8+0x9c>

00003910 <flatcc_json_parser_symbolic_int16>:
    3910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3914:	sub	sp, sp, #36	; 0x24
    3918:	mov	ip, #0
    391c:	str	r3, [sp, #12]
    3920:	ldr	r3, [sp, #72]	; 0x48
    3924:	cmp	r1, r2
    3928:	mov	r6, r1
    392c:	mov	r5, r2
    3930:	strh	ip, [r3]
    3934:	mov	r8, r0
    3938:	beq	3ae0 <flatcc_json_parser_symbolic_int16+0x1d0>
    393c:	ldrb	r3, [r1]
    3940:	cmp	r3, #34	; 0x22
    3944:	beq	3a9c <flatcc_json_parser_symbolic_int16+0x18c>
    3948:	cmp	r3, #46	; 0x2e
    394c:	movne	r3, #1
    3950:	strne	r3, [r0, #12]
    3954:	beq	3af0 <flatcc_json_parser_symbolic_int16+0x1e0>
    3958:	add	sl, sp, #20
    395c:	add	r9, sp, #24
    3960:	mov	fp, #0
    3964:	str	fp, [sp, #8]
    3968:	ldr	r7, [sp, #12]
    396c:	ldr	r4, [r7]
    3970:	b	3988 <flatcc_json_parser_symbolic_int16+0x78>
    3974:	cmp	r6, r0
    3978:	bne	39b4 <flatcc_json_parser_symbolic_int16+0xa4>
    397c:	ldr	r4, [r7, #4]!
    3980:	cmp	r4, #0
    3984:	beq	3a24 <flatcc_json_parser_symbolic_int16+0x114>
    3988:	stm	sp, {r9, sl}
    398c:	add	r3, sp, #16
    3990:	mov	r2, r5
    3994:	mov	r1, r6
    3998:	mov	r0, r8
    399c:	blx	r4
    39a0:	cmp	r5, r0
    39a4:	bne	3974 <flatcc_json_parser_symbolic_int16+0x64>
    39a8:	mov	r0, r5
    39ac:	add	sp, sp, #36	; 0x24
    39b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    39b4:	cmp	fp, #0
    39b8:	mov	r4, r0
    39bc:	beq	39cc <flatcc_json_parser_symbolic_int16+0xbc>
    39c0:	ldr	r3, [r8, #12]
    39c4:	cmp	r3, #0
    39c8:	bne	3b2c <flatcc_json_parser_symbolic_int16+0x21c>
    39cc:	ldr	r1, [sp, #16]
    39d0:	ldrd	r2, [sp, #24]
    39d4:	cmp	r1, #0
    39d8:	beq	3a48 <flatcc_json_parser_symbolic_int16+0x138>
    39dc:	cmp	r3, #0
    39e0:	cmpeq	r2, #32768	; 0x8000
    39e4:	rsbls	r2, r2, #0
    39e8:	sxthls	r3, r2
    39ec:	strls	r3, [sp, #8]
    39f0:	bhi	3a7c <flatcc_json_parser_symbolic_int16+0x16c>
    39f4:	ldr	r3, [sp, #72]	; 0x48
    39f8:	ldr	r2, [sp, #20]
    39fc:	ldr	r1, [sp, #8]
    3a00:	ldrh	r3, [r3]
    3a04:	cmp	r2, #0
    3a08:	ldr	r2, [sp, #72]	; 0x48
    3a0c:	add	r3, r3, r1
    3a10:	add	fp, fp, #1
    3a14:	strh	r3, [r2]
    3a18:	beq	3b24 <flatcc_json_parser_symbolic_int16+0x214>
    3a1c:	mov	r6, r4
    3a20:	b	3968 <flatcc_json_parser_symbolic_int16+0x58>
    3a24:	mov	r2, r5
    3a28:	mov	r1, r6
    3a2c:	mov	r0, r8
    3a30:	mov	r3, #23
    3a34:	bl	0 <flatcc_json_parser_set_error>
    3a38:	mov	r5, r0
    3a3c:	mov	r0, r5
    3a40:	add	sp, sp, #36	; 0x24
    3a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3a48:	ldr	r0, [pc, #248]	; 3b48 <flatcc_json_parser_symbolic_int16+0x238>
    3a4c:	mov	r1, #0
    3a50:	cmp	r3, r1
    3a54:	cmpeq	r2, r0
    3a58:	sxthls	r3, r2
    3a5c:	strls	r3, [sp, #8]
    3a60:	bls	39f4 <flatcc_json_parser_symbolic_int16+0xe4>
    3a64:	mov	r3, #7
    3a68:	mov	r2, r5
    3a6c:	mov	r1, r4
    3a70:	mov	r0, r8
    3a74:	bl	0 <flatcc_json_parser_set_error>
    3a78:	b	3a90 <flatcc_json_parser_symbolic_int16+0x180>
    3a7c:	mov	r3, #8
    3a80:	mov	r2, r5
    3a84:	mov	r1, r4
    3a88:	mov	r0, r8
    3a8c:	bl	0 <flatcc_json_parser_set_error>
    3a90:	cmp	r5, r0
    3a94:	bne	39f4 <flatcc_json_parser_symbolic_int16+0xe4>
    3a98:	b	39a8 <flatcc_json_parser_symbolic_int16+0x98>
    3a9c:	add	r6, r1, #1
    3aa0:	sub	r3, r2, r6
    3aa4:	str	ip, [r0, #12]
    3aa8:	cmp	r3, #1
    3aac:	ble	3ac0 <flatcc_json_parser_symbolic_int16+0x1b0>
    3ab0:	ldrb	r3, [r6]
    3ab4:	cmp	r3, #32
    3ab8:	bhi	3ad4 <flatcc_json_parser_symbolic_int16+0x1c4>
    3abc:	beq	3b10 <flatcc_json_parser_symbolic_int16+0x200>
    3ac0:	mov	r1, r6
    3ac4:	mov	r2, r5
    3ac8:	mov	r0, r8
    3acc:	bl	0 <flatcc_json_parser_space_ext>
    3ad0:	mov	r6, r0
    3ad4:	cmp	r5, r6
    3ad8:	bne	3958 <flatcc_json_parser_symbolic_int16+0x48>
    3adc:	b	39a8 <flatcc_json_parser_symbolic_int16+0x98>
    3ae0:	ldr	r3, [r0, #12]
    3ae4:	cmp	r3, #0
    3ae8:	bne	39a8 <flatcc_json_parser_symbolic_int16+0x98>
    3aec:	b	3ac0 <flatcc_json_parser_symbolic_int16+0x1b0>
    3af0:	mov	r3, #5
    3af4:	bl	0 <flatcc_json_parser_set_error>
    3af8:	ldr	r3, [r8, #12]
    3afc:	cmp	r3, #0
    3b00:	mov	r6, r0
    3b04:	subeq	r3, r5, r0
    3b08:	beq	3aa8 <flatcc_json_parser_symbolic_int16+0x198>
    3b0c:	b	3ad4 <flatcc_json_parser_symbolic_int16+0x1c4>
    3b10:	ldrb	r3, [r6, #1]
    3b14:	cmp	r3, #32
    3b18:	addhi	r6, r6, #1
    3b1c:	bls	3ac0 <flatcc_json_parser_symbolic_int16+0x1b0>
    3b20:	b	3ad4 <flatcc_json_parser_symbolic_int16+0x1c4>
    3b24:	mov	r5, r4
    3b28:	b	39a8 <flatcc_json_parser_symbolic_int16+0x98>
    3b2c:	mov	r2, r5
    3b30:	mov	r1, r4
    3b34:	mov	r0, r8
    3b38:	mov	r3, #14
    3b3c:	bl	0 <flatcc_json_parser_set_error>
    3b40:	mov	r5, r0
    3b44:	b	39a8 <flatcc_json_parser_symbolic_int16+0x98>
    3b48:	.word	0x00007fff

00003b4c <flatcc_json_parser_symbolic_uint32>:
    3b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3b50:	sub	sp, sp, #36	; 0x24
    3b54:	mov	ip, #0
    3b58:	str	r3, [sp, #8]
    3b5c:	ldr	r3, [sp, #72]	; 0x48
    3b60:	cmp	r1, r2
    3b64:	mov	r6, r1
    3b68:	mov	r5, r2
    3b6c:	str	ip, [r3]
    3b70:	mov	r8, r0
    3b74:	beq	3d08 <flatcc_json_parser_symbolic_uint32+0x1bc>
    3b78:	ldrb	r3, [r1]
    3b7c:	cmp	r3, #34	; 0x22
    3b80:	beq	3cbc <flatcc_json_parser_symbolic_uint32+0x170>
    3b84:	cmp	r3, #46	; 0x2e
    3b88:	movne	r3, #1
    3b8c:	strne	r3, [r0, #12]
    3b90:	beq	3d18 <flatcc_json_parser_symbolic_uint32+0x1cc>
    3b94:	add	sl, sp, #20
    3b98:	add	r9, sp, #24
    3b9c:	mov	fp, #0
    3ba0:	str	fp, [sp, #12]
    3ba4:	ldr	r7, [sp, #8]
    3ba8:	ldr	r4, [r7]
    3bac:	b	3bc4 <flatcc_json_parser_symbolic_uint32+0x78>
    3bb0:	cmp	r6, r0
    3bb4:	bne	3bf0 <flatcc_json_parser_symbolic_uint32+0xa4>
    3bb8:	ldr	r4, [r7, #4]!
    3bbc:	cmp	r4, #0
    3bc0:	beq	3c60 <flatcc_json_parser_symbolic_uint32+0x114>
    3bc4:	stm	sp, {r9, sl}
    3bc8:	add	r3, sp, #16
    3bcc:	mov	r2, r5
    3bd0:	mov	r1, r6
    3bd4:	mov	r0, r8
    3bd8:	blx	r4
    3bdc:	cmp	r5, r0
    3be0:	bne	3bb0 <flatcc_json_parser_symbolic_uint32+0x64>
    3be4:	mov	r0, r5
    3be8:	add	sp, sp, #36	; 0x24
    3bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3bf0:	cmp	fp, #0
    3bf4:	mov	r4, r0
    3bf8:	beq	3c08 <flatcc_json_parser_symbolic_uint32+0xbc>
    3bfc:	ldr	r3, [r8, #12]
    3c00:	cmp	r3, #0
    3c04:	bne	3d54 <flatcc_json_parser_symbolic_uint32+0x208>
    3c08:	ldr	r3, [sp, #16]
    3c0c:	cmp	r3, #0
    3c10:	bne	3c84 <flatcc_json_parser_symbolic_uint32+0x138>
    3c14:	ldrd	r2, [sp, #24]
    3c18:	mov	r1, #0
    3c1c:	mvn	r0, #0
    3c20:	cmp	r3, r1
    3c24:	cmpeq	r2, r0
    3c28:	strls	r2, [sp, #12]
    3c2c:	bhi	3ca4 <flatcc_json_parser_symbolic_uint32+0x158>
    3c30:	ldr	r3, [sp, #72]	; 0x48
    3c34:	ldr	r2, [sp, #20]
    3c38:	ldr	r1, [sp, #12]
    3c3c:	ldr	r3, [r3]
    3c40:	cmp	r2, #0
    3c44:	ldr	r2, [sp, #72]	; 0x48
    3c48:	add	r3, r3, r1
    3c4c:	add	fp, fp, #1
    3c50:	str	r3, [r2]
    3c54:	beq	3d4c <flatcc_json_parser_symbolic_uint32+0x200>
    3c58:	mov	r6, r4
    3c5c:	b	3ba4 <flatcc_json_parser_symbolic_uint32+0x58>
    3c60:	mov	r2, r5
    3c64:	mov	r1, r6
    3c68:	mov	r0, r8
    3c6c:	mov	r3, #23
    3c70:	bl	0 <flatcc_json_parser_set_error>
    3c74:	mov	r5, r0
    3c78:	mov	r0, r5
    3c7c:	add	sp, sp, #36	; 0x24
    3c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3c84:	mov	r3, #8
    3c88:	mov	r2, r5
    3c8c:	mov	r1, r4
    3c90:	mov	r0, r8
    3c94:	bl	0 <flatcc_json_parser_set_error>
    3c98:	cmp	r5, r0
    3c9c:	bne	3c30 <flatcc_json_parser_symbolic_uint32+0xe4>
    3ca0:	b	3be4 <flatcc_json_parser_symbolic_uint32+0x98>
    3ca4:	mov	r3, #7
    3ca8:	mov	r2, r5
    3cac:	mov	r1, r4
    3cb0:	mov	r0, r8
    3cb4:	bl	0 <flatcc_json_parser_set_error>
    3cb8:	b	3c98 <flatcc_json_parser_symbolic_uint32+0x14c>
    3cbc:	add	r6, r1, #1
    3cc0:	sub	r3, r2, r6
    3cc4:	str	ip, [r0, #12]
    3cc8:	cmp	r3, #1
    3ccc:	ble	3ce0 <flatcc_json_parser_symbolic_uint32+0x194>
    3cd0:	ldrb	r3, [r6]
    3cd4:	cmp	r3, #32
    3cd8:	bhi	3cf4 <flatcc_json_parser_symbolic_uint32+0x1a8>
    3cdc:	beq	3d38 <flatcc_json_parser_symbolic_uint32+0x1ec>
    3ce0:	mov	r1, r6
    3ce4:	mov	r2, r5
    3ce8:	mov	r0, r8
    3cec:	bl	0 <flatcc_json_parser_space_ext>
    3cf0:	mov	r6, r0
    3cf4:	cmp	r5, r6
    3cf8:	bne	3b94 <flatcc_json_parser_symbolic_uint32+0x48>
    3cfc:	mov	r0, r5
    3d00:	add	sp, sp, #36	; 0x24
    3d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3d08:	ldr	r3, [r0, #12]
    3d0c:	cmp	r3, #0
    3d10:	beq	3ce0 <flatcc_json_parser_symbolic_uint32+0x194>
    3d14:	b	3be4 <flatcc_json_parser_symbolic_uint32+0x98>
    3d18:	mov	r3, #5
    3d1c:	bl	0 <flatcc_json_parser_set_error>
    3d20:	ldr	r3, [r8, #12]
    3d24:	cmp	r3, #0
    3d28:	mov	r6, r0
    3d2c:	subeq	r3, r5, r0
    3d30:	beq	3cc8 <flatcc_json_parser_symbolic_uint32+0x17c>
    3d34:	b	3cf4 <flatcc_json_parser_symbolic_uint32+0x1a8>
    3d38:	ldrb	r3, [r6, #1]
    3d3c:	cmp	r3, #32
    3d40:	addhi	r6, r6, #1
    3d44:	bls	3ce0 <flatcc_json_parser_symbolic_uint32+0x194>
    3d48:	b	3cf4 <flatcc_json_parser_symbolic_uint32+0x1a8>
    3d4c:	mov	r5, r4
    3d50:	b	3be4 <flatcc_json_parser_symbolic_uint32+0x98>
    3d54:	mov	r2, r5
    3d58:	mov	r1, r4
    3d5c:	mov	r0, r8
    3d60:	mov	r3, #14
    3d64:	bl	0 <flatcc_json_parser_set_error>
    3d68:	mov	r5, r0
    3d6c:	b	3be4 <flatcc_json_parser_symbolic_uint32+0x98>

00003d70 <flatcc_json_parser_symbolic_uint8>:
    3d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3d74:	sub	sp, sp, #36	; 0x24
    3d78:	mov	ip, #0
    3d7c:	str	r3, [sp, #8]
    3d80:	ldr	r3, [sp, #72]	; 0x48
    3d84:	cmp	r1, r2
    3d88:	mov	r6, r1
    3d8c:	mov	r5, r2
    3d90:	strb	ip, [r3]
    3d94:	mov	r8, r0
    3d98:	beq	3f2c <flatcc_json_parser_symbolic_uint8+0x1bc>
    3d9c:	ldrb	r3, [r1]
    3da0:	cmp	r3, #34	; 0x22
    3da4:	beq	3ee0 <flatcc_json_parser_symbolic_uint8+0x170>
    3da8:	cmp	r3, #46	; 0x2e
    3dac:	movne	r3, #1
    3db0:	strne	r3, [r0, #12]
    3db4:	beq	3f3c <flatcc_json_parser_symbolic_uint8+0x1cc>
    3db8:	add	sl, sp, #20
    3dbc:	add	r9, sp, #24
    3dc0:	mov	fp, #0
    3dc4:	str	fp, [sp, #12]
    3dc8:	ldr	r3, [sp, #8]
    3dcc:	mov	r7, r3
    3dd0:	ldr	r4, [r3]
    3dd4:	b	3dec <flatcc_json_parser_symbolic_uint8+0x7c>
    3dd8:	cmp	r6, r0
    3ddc:	bne	3e18 <flatcc_json_parser_symbolic_uint8+0xa8>
    3de0:	ldr	r4, [r7, #4]!
    3de4:	cmp	r4, #0
    3de8:	beq	3e84 <flatcc_json_parser_symbolic_uint8+0x114>
    3dec:	stm	sp, {r9, sl}
    3df0:	add	r3, sp, #16
    3df4:	mov	r2, r5
    3df8:	mov	r1, r6
    3dfc:	mov	r0, r8
    3e00:	blx	r4
    3e04:	cmp	r5, r0
    3e08:	bne	3dd8 <flatcc_json_parser_symbolic_uint8+0x68>
    3e0c:	mov	r0, r5
    3e10:	add	sp, sp, #36	; 0x24
    3e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3e18:	cmp	fp, #0
    3e1c:	mov	r4, r0
    3e20:	beq	3e30 <flatcc_json_parser_symbolic_uint8+0xc0>
    3e24:	ldr	r3, [r8, #12]
    3e28:	cmp	r3, #0
    3e2c:	bne	3f78 <flatcc_json_parser_symbolic_uint8+0x208>
    3e30:	ldr	r3, [sp, #16]
    3e34:	cmp	r3, #0
    3e38:	bne	3ea8 <flatcc_json_parser_symbolic_uint8+0x138>
    3e3c:	ldrd	r2, [sp, #24]
    3e40:	cmp	r3, #0
    3e44:	cmpeq	r2, #255	; 0xff
    3e48:	uxtbls	r3, r2
    3e4c:	strls	r3, [sp, #12]
    3e50:	bhi	3ec8 <flatcc_json_parser_symbolic_uint8+0x158>
    3e54:	ldr	r3, [sp, #72]	; 0x48
    3e58:	ldr	r2, [sp, #20]
    3e5c:	ldr	r1, [sp, #12]
    3e60:	ldrb	r3, [r3]
    3e64:	cmp	r2, #0
    3e68:	ldr	r2, [sp, #72]	; 0x48
    3e6c:	add	r3, r1, r3
    3e70:	add	fp, fp, #1
    3e74:	strb	r3, [r2]
    3e78:	beq	3f70 <flatcc_json_parser_symbolic_uint8+0x200>
    3e7c:	mov	r6, r4
    3e80:	b	3dc8 <flatcc_json_parser_symbolic_uint8+0x58>
    3e84:	mov	r2, r5
    3e88:	mov	r1, r6
    3e8c:	mov	r0, r8
    3e90:	mov	r3, #23
    3e94:	bl	0 <flatcc_json_parser_set_error>
    3e98:	mov	r5, r0
    3e9c:	mov	r0, r5
    3ea0:	add	sp, sp, #36	; 0x24
    3ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3ea8:	mov	r3, #8
    3eac:	mov	r2, r5
    3eb0:	mov	r1, r4
    3eb4:	mov	r0, r8
    3eb8:	bl	0 <flatcc_json_parser_set_error>
    3ebc:	cmp	r5, r0
    3ec0:	bne	3e54 <flatcc_json_parser_symbolic_uint8+0xe4>
    3ec4:	b	3e0c <flatcc_json_parser_symbolic_uint8+0x9c>
    3ec8:	mov	r3, #7
    3ecc:	mov	r2, r5
    3ed0:	mov	r1, r4
    3ed4:	mov	r0, r8
    3ed8:	bl	0 <flatcc_json_parser_set_error>
    3edc:	b	3ebc <flatcc_json_parser_symbolic_uint8+0x14c>
    3ee0:	add	r6, r1, #1
    3ee4:	sub	r3, r2, r6
    3ee8:	str	ip, [r0, #12]
    3eec:	cmp	r3, #1
    3ef0:	ble	3f04 <flatcc_json_parser_symbolic_uint8+0x194>
    3ef4:	ldrb	r3, [r6]
    3ef8:	cmp	r3, #32
    3efc:	bhi	3f18 <flatcc_json_parser_symbolic_uint8+0x1a8>
    3f00:	beq	3f5c <flatcc_json_parser_symbolic_uint8+0x1ec>
    3f04:	mov	r1, r6
    3f08:	mov	r2, r5
    3f0c:	mov	r0, r8
    3f10:	bl	0 <flatcc_json_parser_space_ext>
    3f14:	mov	r6, r0
    3f18:	cmp	r5, r6
    3f1c:	bne	3db8 <flatcc_json_parser_symbolic_uint8+0x48>
    3f20:	mov	r0, r5
    3f24:	add	sp, sp, #36	; 0x24
    3f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3f2c:	ldr	r3, [r0, #12]
    3f30:	cmp	r3, #0
    3f34:	beq	3f04 <flatcc_json_parser_symbolic_uint8+0x194>
    3f38:	b	3e0c <flatcc_json_parser_symbolic_uint8+0x9c>
    3f3c:	mov	r3, #5
    3f40:	bl	0 <flatcc_json_parser_set_error>
    3f44:	ldr	r3, [r8, #12]
    3f48:	cmp	r3, #0
    3f4c:	mov	r6, r0
    3f50:	subeq	r3, r5, r0
    3f54:	beq	3eec <flatcc_json_parser_symbolic_uint8+0x17c>
    3f58:	b	3f18 <flatcc_json_parser_symbolic_uint8+0x1a8>
    3f5c:	ldrb	r3, [r6, #1]
    3f60:	cmp	r3, #32
    3f64:	addhi	r6, r6, #1
    3f68:	bls	3f04 <flatcc_json_parser_symbolic_uint8+0x194>
    3f6c:	b	3f18 <flatcc_json_parser_symbolic_uint8+0x1a8>
    3f70:	mov	r5, r4
    3f74:	b	3e0c <flatcc_json_parser_symbolic_uint8+0x9c>
    3f78:	mov	r2, r5
    3f7c:	mov	r1, r4
    3f80:	mov	r0, r8
    3f84:	mov	r3, #14
    3f88:	bl	0 <flatcc_json_parser_set_error>
    3f8c:	mov	r5, r0
    3f90:	b	3e0c <flatcc_json_parser_symbolic_uint8+0x9c>

00003f94 <flatcc_json_parser_symbolic_int64>:
    3f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3f98:	sub	sp, sp, #44	; 0x2c
    3f9c:	mov	fp, r3
    3fa0:	ldr	r3, [sp, #80]	; 0x50
    3fa4:	mov	r8, #0
    3fa8:	mov	r9, #0
    3fac:	cmp	r1, r2
    3fb0:	strd	r8, [r3]
    3fb4:	mov	r5, r1
    3fb8:	mov	r6, r2
    3fbc:	mov	r8, r0
    3fc0:	beq	4178 <flatcc_json_parser_symbolic_int64+0x1e4>
    3fc4:	ldrb	r3, [r1]
    3fc8:	cmp	r3, #34	; 0x22
    3fcc:	beq	4128 <flatcc_json_parser_symbolic_int64+0x194>
    3fd0:	cmp	r3, #46	; 0x2e
    3fd4:	movne	r3, #1
    3fd8:	strne	r3, [r0, #12]
    3fdc:	beq	4188 <flatcc_json_parser_symbolic_int64+0x1f4>
    3fe0:	mov	r3, #0
    3fe4:	str	r3, [sp, #12]
    3fe8:	mov	r2, #0
    3fec:	mov	r3, #0
    3ff0:	add	sl, sp, #28
    3ff4:	add	r9, sp, #32
    3ff8:	strd	r2, [sp, #16]
    3ffc:	ldr	r4, [fp]
    4000:	mov	r7, fp
    4004:	b	401c <flatcc_json_parser_symbolic_int64+0x88>
    4008:	cmp	r5, r0
    400c:	bne	4048 <flatcc_json_parser_symbolic_int64+0xb4>
    4010:	ldr	r4, [r7, #4]!
    4014:	cmp	r4, #0
    4018:	beq	40d0 <flatcc_json_parser_symbolic_int64+0x13c>
    401c:	stm	sp, {r9, sl}
    4020:	add	r3, sp, #24
    4024:	mov	r2, r6
    4028:	mov	r1, r5
    402c:	mov	r0, r8
    4030:	blx	r4
    4034:	cmp	r6, r0
    4038:	bne	4008 <flatcc_json_parser_symbolic_int64+0x74>
    403c:	mov	r0, r6
    4040:	add	sp, sp, #44	; 0x2c
    4044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4048:	ldr	r3, [sp, #12]
    404c:	mov	r4, r0
    4050:	cmp	r3, #0
    4054:	beq	4064 <flatcc_json_parser_symbolic_int64+0xd0>
    4058:	ldr	r3, [r8, #12]
    405c:	cmp	r3, #0
    4060:	bne	41dc <flatcc_json_parser_symbolic_int64+0x248>
    4064:	ldr	r1, [sp, #24]
    4068:	ldrd	r2, [sp, #32]
    406c:	cmp	r1, #0
    4070:	beq	40f4 <flatcc_json_parser_symbolic_int64+0x160>
    4074:	cmp	r3, #-2147483648	; 0x80000000
    4078:	cmpeq	r2, #0
    407c:	bhi	4108 <flatcc_json_parser_symbolic_int64+0x174>
    4080:	rsbs	r2, r2, #0
    4084:	rsc	r3, r3, #0
    4088:	strd	r2, [sp, #16]
    408c:	ldr	r1, [sp, #12]
    4090:	ldr	r3, [sp, #80]	; 0x50
    4094:	add	r1, r1, #1
    4098:	str	r1, [sp, #12]
    409c:	ldrd	r2, [r3]
    40a0:	ldrd	r0, [sp, #16]
    40a4:	ldr	ip, [sp, #28]
    40a8:	adds	r0, r0, r2
    40ac:	adc	r1, r1, r3
    40b0:	mov	r3, r1
    40b4:	ldr	r1, [sp, #80]	; 0x50
    40b8:	mov	r2, r0
    40bc:	cmp	ip, #0
    40c0:	strd	r2, [r1]
    40c4:	beq	41d4 <flatcc_json_parser_symbolic_int64+0x240>
    40c8:	mov	r5, r4
    40cc:	b	3ffc <flatcc_json_parser_symbolic_int64+0x68>
    40d0:	mov	r2, r6
    40d4:	mov	r1, r5
    40d8:	mov	r0, r8
    40dc:	mov	r3, #23
    40e0:	bl	0 <flatcc_json_parser_set_error>
    40e4:	mov	r6, r0
    40e8:	mov	r0, r6
    40ec:	add	sp, sp, #44	; 0x2c
    40f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    40f4:	cmp	r2, #0
    40f8:	sbcs	r1, r3, #0
    40fc:	blt	41a8 <flatcc_json_parser_symbolic_int64+0x214>
    4100:	strd	r2, [sp, #16]
    4104:	b	408c <flatcc_json_parser_symbolic_int64+0xf8>
    4108:	mov	r3, #8
    410c:	mov	r2, r6
    4110:	mov	r1, r4
    4114:	mov	r0, r8
    4118:	bl	0 <flatcc_json_parser_set_error>
    411c:	cmp	r6, r0
    4120:	bne	408c <flatcc_json_parser_symbolic_int64+0xf8>
    4124:	b	403c <flatcc_json_parser_symbolic_int64+0xa8>
    4128:	add	r5, r1, #1
    412c:	sub	r3, r6, r5
    4130:	mov	r2, #0
    4134:	str	r2, [r0, #12]
    4138:	cmp	r3, #1
    413c:	ble	4150 <flatcc_json_parser_symbolic_int64+0x1bc>
    4140:	ldrb	r3, [r5]
    4144:	cmp	r3, #32
    4148:	bhi	4164 <flatcc_json_parser_symbolic_int64+0x1d0>
    414c:	beq	41c0 <flatcc_json_parser_symbolic_int64+0x22c>
    4150:	mov	r1, r5
    4154:	mov	r2, r6
    4158:	mov	r0, r8
    415c:	bl	0 <flatcc_json_parser_space_ext>
    4160:	mov	r5, r0
    4164:	cmp	r6, r5
    4168:	bne	3fe0 <flatcc_json_parser_symbolic_int64+0x4c>
    416c:	mov	r0, r6
    4170:	add	sp, sp, #44	; 0x2c
    4174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4178:	ldr	r3, [r0, #12]
    417c:	cmp	r3, #0
    4180:	beq	4150 <flatcc_json_parser_symbolic_int64+0x1bc>
    4184:	b	403c <flatcc_json_parser_symbolic_int64+0xa8>
    4188:	mov	r3, #5
    418c:	bl	0 <flatcc_json_parser_set_error>
    4190:	ldr	r3, [r8, #12]
    4194:	cmp	r3, #0
    4198:	mov	r5, r0
    419c:	subeq	r3, r6, r0
    41a0:	beq	4138 <flatcc_json_parser_symbolic_int64+0x1a4>
    41a4:	b	4164 <flatcc_json_parser_symbolic_int64+0x1d0>
    41a8:	mov	r3, #7
    41ac:	mov	r2, r6
    41b0:	mov	r1, r4
    41b4:	mov	r0, r8
    41b8:	bl	0 <flatcc_json_parser_set_error>
    41bc:	b	411c <flatcc_json_parser_symbolic_int64+0x188>
    41c0:	ldrb	r3, [r5, #1]
    41c4:	cmp	r3, #32
    41c8:	addhi	r5, r5, #1
    41cc:	bls	4150 <flatcc_json_parser_symbolic_int64+0x1bc>
    41d0:	b	4164 <flatcc_json_parser_symbolic_int64+0x1d0>
    41d4:	mov	r6, r4
    41d8:	b	403c <flatcc_json_parser_symbolic_int64+0xa8>
    41dc:	mov	r2, r6
    41e0:	mov	r1, r4
    41e4:	mov	r0, r8
    41e8:	mov	r3, #14
    41ec:	bl	0 <flatcc_json_parser_set_error>
    41f0:	mov	r6, r0
    41f4:	b	403c <flatcc_json_parser_symbolic_int64+0xa8>

000041f8 <Fantasy_BookReader_parse_json_struct>:
    41f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    41fc:	sub	sp, sp, #148	; 0x94
    4200:	mov	r8, r0
    4204:	mov	r0, r3
    4208:	str	r3, [sp, #124]	; 0x7c
    420c:	mov	r4, r2
    4210:	mov	r3, #0
    4214:	mov	r2, #4
    4218:	str	r3, [r0]
    421c:	mov	r5, r1
    4220:	ldr	r0, [r8]
    4224:	mov	r1, r2
    4228:	bl	0 <flatcc_builder_start_struct>
    422c:	subs	r3, r0, #0
    4230:	str	r3, [sp, #116]	; 0x74
    4234:	beq	4980 <Fantasy_BookReader_parse_json_struct+0x788>
    4238:	cmp	r5, r4
    423c:	beq	424c <Fantasy_BookReader_parse_json_struct+0x54>
    4240:	ldrb	r3, [r5]
    4244:	cmp	r3, #123	; 0x7b
    4248:	beq	42ac <Fantasy_BookReader_parse_json_struct+0xb4>
    424c:	mov	r1, r5
    4250:	mov	r3, #21
    4254:	mov	r2, r4
    4258:	mov	r0, r8
    425c:	bl	0 <flatcc_json_parser_set_error>
    4260:	mov	r1, r0
    4264:	cmp	r4, r1
    4268:	beq	428c <Fantasy_BookReader_parse_json_struct+0x94>
    426c:	ldr	r0, [r8]
    4270:	str	r1, [sp, #8]
    4274:	bl	0 <flatcc_builder_end_struct>
    4278:	ldr	r3, [sp, #124]	; 0x7c
    427c:	ldr	r1, [sp, #8]
    4280:	cmp	r0, #0
    4284:	str	r0, [r3]
    4288:	bne	42a0 <Fantasy_BookReader_parse_json_struct+0xa8>
    428c:	mov	r2, r4
    4290:	mov	r0, r8
    4294:	mov	r3, #33	; 0x21
    4298:	bl	0 <flatcc_json_parser_set_error>
    429c:	mov	r1, r0
    42a0:	mov	r0, r1
    42a4:	add	sp, sp, #148	; 0x94
    42a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    42ac:	add	r3, r5, #1
    42b0:	sub	r2, r4, r3
    42b4:	cmp	r2, #1
    42b8:	ble	42cc <Fantasy_BookReader_parse_json_struct+0xd4>
    42bc:	ldrb	r2, [r5, #1]
    42c0:	cmp	r2, #32
    42c4:	bhi	42e0 <Fantasy_BookReader_parse_json_struct+0xe8>
    42c8:	beq	49a4 <Fantasy_BookReader_parse_json_struct+0x7ac>
    42cc:	mov	r1, r3
    42d0:	mov	r2, r4
    42d4:	mov	r0, r8
    42d8:	bl	0 <flatcc_json_parser_space_ext>
    42dc:	mov	r3, r0
    42e0:	cmp	r4, r3
    42e4:	beq	42f4 <Fantasy_BookReader_parse_json_struct+0xfc>
    42e8:	ldrb	r2, [r3]
    42ec:	cmp	r2, #125	; 0x7d
    42f0:	beq	49b8 <Fantasy_BookReader_parse_json_struct+0x7c0>
    42f4:	mov	r9, #0
    42f8:	mov	r1, r3
    42fc:	cmp	r4, r1
    4300:	beq	4610 <Fantasy_BookReader_parse_json_struct+0x418>
    4304:	ldrb	r3, [r1]
    4308:	cmp	r3, #34	; 0x22
    430c:	moveq	r3, #0
    4310:	addeq	r1, r1, #1
    4314:	streq	r3, [r8, #12]
    4318:	beq	432c <Fantasy_BookReader_parse_json_struct+0x134>
    431c:	cmp	r3, #46	; 0x2e
    4320:	movne	r3, #1
    4324:	strne	r3, [r8, #12]
    4328:	beq	48a0 <Fantasy_BookReader_parse_json_struct+0x6a8>
    432c:	sub	r3, r4, r1
    4330:	cmp	r3, #8
    4334:	bls	4620 <Fantasy_BookReader_parse_json_struct+0x428>
    4338:	ldrb	r6, [r1, #7]
    433c:	mov	r7, #0
    4340:	ldrb	r2, [r1, #6]
    4344:	lsr	r0, r2, #24
    4348:	lsl	r3, r2, #8
    434c:	str	r0, [sp, #76]	; 0x4c
    4350:	str	r3, [sp, #72]	; 0x48
    4354:	ldrd	r2, [sp, #72]	; 0x48
    4358:	orr	r2, r2, r6
    435c:	orr	r3, r3, r7
    4360:	ldrb	r6, [r1, #5]
    4364:	lsr	r0, r6, #16
    4368:	str	r0, [sp, #52]	; 0x34
    436c:	lsl	r0, r6, #16
    4370:	str	r0, [sp, #48]	; 0x30
    4374:	ldrd	r6, [sp, #48]	; 0x30
    4378:	orr	r6, r6, r2
    437c:	orr	r7, r7, r3
    4380:	mov	r2, r6
    4384:	mov	r3, r7
    4388:	ldrb	r6, [r1, #4]
    438c:	lsr	r0, r6, #8
    4390:	str	r0, [sp, #28]
    4394:	lsl	r0, r6, #24
    4398:	str	r0, [sp, #24]
    439c:	ldrd	r6, [sp, #24]
    43a0:	orr	r6, r6, r2
    43a4:	orr	r7, r7, r3
    43a8:	mov	r2, r6
    43ac:	mov	r3, r7
    43b0:	ldrb	r0, [r1, #3]
    43b4:	str	r0, [sp, #36]	; 0x24
    43b8:	mov	r0, #0
    43bc:	str	r0, [sp, #32]
    43c0:	ldrd	r6, [sp, #32]
    43c4:	orr	r6, r6, r2
    43c8:	orr	r7, r7, r3
    43cc:	mov	r2, r6
    43d0:	mov	r3, r7
    43d4:	ldrb	r6, [r1, #2]
    43d8:	lsl	r0, r6, #8
    43dc:	str	r0, [sp, #20]
    43e0:	mov	r0, #0
    43e4:	str	r0, [sp, #16]
    43e8:	ldrd	r6, [sp, #16]
    43ec:	orr	r6, r6, r2
    43f0:	orr	r7, r7, r3
    43f4:	mov	r2, r6
    43f8:	mov	r3, r7
    43fc:	ldrb	r6, [r1, #1]
    4400:	lsl	r0, r6, #16
    4404:	str	r0, [sp, #12]
    4408:	mov	r0, #0
    440c:	str	r0, [sp, #8]
    4410:	ldrd	r6, [sp, #8]
    4414:	orr	r6, r6, r2
    4418:	orr	r7, r7, r3
    441c:	mov	r2, r6
    4420:	mov	r3, r7
    4424:	ldrb	r6, [r1]
    4428:	mov	sl, #0
    442c:	orr	r2, r2, sl
    4430:	lsl	fp, r6, #24
    4434:	add	r7, pc, #956	; 0x3bc
    4438:	ldrd	r6, [r7]
    443c:	orr	r3, r3, fp
    4440:	cmp	r3, r7
    4444:	cmpeq	r2, r6
    4448:	bne	4610 <Fantasy_BookReader_parse_json_struct+0x418>
    444c:	add	r5, r1, #8
    4450:	sub	r0, r4, r5
    4454:	cmp	r0, #8
    4458:	bls	46a4 <Fantasy_BookReader_parse_json_struct+0x4ac>
    445c:	ldrb	r6, [r1, #15]
    4460:	mov	r7, #0
    4464:	ldrb	r2, [r1, #14]
    4468:	lsr	ip, r2, #24
    446c:	lsl	r3, r2, #8
    4470:	str	ip, [sp, #108]	; 0x6c
    4474:	str	r3, [sp, #104]	; 0x68
    4478:	ldrd	r2, [sp, #104]	; 0x68
    447c:	orr	r2, r2, r6
    4480:	orr	r3, r3, r7
    4484:	mov	r6, r2
    4488:	mov	r7, r3
    448c:	ldrb	r2, [r1, #13]
    4490:	lsr	ip, r2, #16
    4494:	lsl	r3, r2, #16
    4498:	str	ip, [sp, #100]	; 0x64
    449c:	str	r3, [sp, #96]	; 0x60
    44a0:	ldrd	r2, [sp, #96]	; 0x60
    44a4:	orr	r2, r2, r6
    44a8:	orr	r3, r3, r7
    44ac:	mov	r6, r2
    44b0:	mov	r7, r3
    44b4:	ldrb	r2, [r1, #12]
    44b8:	lsr	ip, r2, #8
    44bc:	lsl	r3, r2, #24
    44c0:	str	ip, [sp, #84]	; 0x54
    44c4:	str	r3, [sp, #80]	; 0x50
    44c8:	ldrd	r2, [sp, #80]	; 0x50
    44cc:	orr	r2, r2, r6
    44d0:	orr	r3, r3, r7
    44d4:	ldrb	ip, [r1, #11]
    44d8:	str	ip, [sp, #92]	; 0x5c
    44dc:	mov	ip, #0
    44e0:	str	ip, [sp, #88]	; 0x58
    44e4:	ldrd	r6, [sp, #88]	; 0x58
    44e8:	orr	r6, r6, r2
    44ec:	orr	r7, r7, r3
    44f0:	mov	r2, r6
    44f4:	mov	r3, r7
    44f8:	ldrb	r6, [r1, #10]
    44fc:	lsl	ip, r6, #8
    4500:	str	ip, [sp, #68]	; 0x44
    4504:	mov	ip, #0
    4508:	str	ip, [sp, #64]	; 0x40
    450c:	ldrd	r6, [sp, #64]	; 0x40
    4510:	orr	r6, r6, r2
    4514:	orr	r7, r7, r3
    4518:	mov	r2, r6
    451c:	mov	r3, r7
    4520:	ldrb	r6, [r1, #9]
    4524:	lsl	ip, r6, #16
    4528:	str	ip, [sp, #60]	; 0x3c
    452c:	mov	ip, #0
    4530:	str	ip, [sp, #56]	; 0x38
    4534:	ldrd	r6, [sp, #56]	; 0x38
    4538:	orr	r6, r6, r2
    453c:	orr	r7, r7, r3
    4540:	mov	r2, r6
    4544:	mov	r3, r7
    4548:	ldrb	r6, [r1, #8]
    454c:	lsl	r1, r6, #24
    4550:	str	r1, [sp, #44]	; 0x2c
    4554:	mov	r1, #0
    4558:	str	r1, [sp, #40]	; 0x28
    455c:	ldrd	r6, [sp, #40]	; 0x28
    4560:	orr	r7, r7, r3
    4564:	mov	r3, r7
    4568:	ldr	r7, [pc, #656]	; 4800 <Fantasy_BookReader_parse_json_struct+0x608>
    456c:	orr	r6, r6, r2
    4570:	and	r3, r3, r7
    4574:	ldr	r7, [pc, #648]	; 4804 <Fantasy_BookReader_parse_json_struct+0x60c>
    4578:	mov	r2, r6
    457c:	mov	r6, #0
    4580:	and	r2, r2, r6
    4584:	cmp	r3, r7
    4588:	mov	r6, #0
    458c:	cmpeq	r2, r6
    4590:	bne	459c <Fantasy_BookReader_parse_json_struct+0x3a4>
    4594:	cmp	r0, #2
    4598:	bgt	480c <Fantasy_BookReader_parse_json_struct+0x614>
    459c:	mov	r1, r5
    45a0:	mov	r2, r4
    45a4:	mov	r0, r8
    45a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    45ac:	sub	r3, r4, r0
    45b0:	cmp	r3, #1
    45b4:	ble	45c8 <Fantasy_BookReader_parse_json_struct+0x3d0>
    45b8:	ldrb	r3, [r0]
    45bc:	cmp	r3, #32
    45c0:	bhi	45d8 <Fantasy_BookReader_parse_json_struct+0x3e0>
    45c4:	beq	475c <Fantasy_BookReader_parse_json_struct+0x564>
    45c8:	mov	r1, r0
    45cc:	mov	r2, r4
    45d0:	mov	r0, r8
    45d4:	bl	0 <flatcc_json_parser_space_ext>
    45d8:	cmp	r4, r0
    45dc:	beq	4774 <Fantasy_BookReader_parse_json_struct+0x57c>
    45e0:	ldrb	r3, [r0]
    45e4:	cmp	r3, #44	; 0x2c
    45e8:	beq	477c <Fantasy_BookReader_parse_json_struct+0x584>
    45ec:	cmp	r3, #125	; 0x7d
    45f0:	beq	4728 <Fantasy_BookReader_parse_json_struct+0x530>
    45f4:	mov	r1, r0
    45f8:	mov	r3, #10
    45fc:	mov	r2, r4
    4600:	mov	r0, r8
    4604:	bl	0 <flatcc_json_parser_set_error>
    4608:	mov	r1, r0
    460c:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    4610:	mov	r2, r4
    4614:	mov	r0, r8
    4618:	bl	0 <flatcc_json_parser_unmatched_symbol>
    461c:	b	45ac <Fantasy_BookReader_parse_json_struct+0x3b4>
    4620:	sub	r3, r3, #1
    4624:	cmp	r3, #7
    4628:	ldrls	pc, [pc, r3, lsl #2]
    462c:	b	4610 <Fantasy_BookReader_parse_json_struct+0x418>
    4630:	.word	0x00004698
    4634:	.word	0x0000468c
    4638:	.word	0x00004680
    463c:	.word	0x00004674
    4640:	.word	0x00004668
    4644:	.word	0x0000465c
    4648:	.word	0x00004650
    464c:	.word	0x00004338
    4650:	mov	r6, r9
    4654:	mov	r7, #0
    4658:	b	4340 <Fantasy_BookReader_parse_json_struct+0x148>
    465c:	mov	r2, r9
    4660:	mov	r3, #0
    4664:	b	4360 <Fantasy_BookReader_parse_json_struct+0x168>
    4668:	mov	r2, r9
    466c:	mov	r3, #0
    4670:	b	4388 <Fantasy_BookReader_parse_json_struct+0x190>
    4674:	mov	r2, r9
    4678:	mov	r3, #0
    467c:	b	43b0 <Fantasy_BookReader_parse_json_struct+0x1b8>
    4680:	mov	r2, r9
    4684:	mov	r3, #0
    4688:	b	43d4 <Fantasy_BookReader_parse_json_struct+0x1dc>
    468c:	mov	r2, r9
    4690:	mov	r3, #0
    4694:	b	43fc <Fantasy_BookReader_parse_json_struct+0x204>
    4698:	mov	r2, r9
    469c:	mov	r3, #0
    46a0:	b	4424 <Fantasy_BookReader_parse_json_struct+0x22c>
    46a4:	sub	r3, r0, #1
    46a8:	cmp	r3, #7
    46ac:	ldrls	pc, [pc, r3, lsl #2]
    46b0:	b	459c <Fantasy_BookReader_parse_json_struct+0x3a4>
    46b4:	.word	0x0000471c
    46b8:	.word	0x00004710
    46bc:	.word	0x00004704
    46c0:	.word	0x000046f8
    46c4:	.word	0x000046ec
    46c8:	.word	0x000046e0
    46cc:	.word	0x000046d4
    46d0:	.word	0x0000445c
    46d4:	mov	r6, r9
    46d8:	mov	r7, #0
    46dc:	b	4464 <Fantasy_BookReader_parse_json_struct+0x26c>
    46e0:	mov	r6, r9
    46e4:	mov	r7, #0
    46e8:	b	448c <Fantasy_BookReader_parse_json_struct+0x294>
    46ec:	mov	r6, r9
    46f0:	mov	r7, #0
    46f4:	b	44b4 <Fantasy_BookReader_parse_json_struct+0x2bc>
    46f8:	mov	r2, r9
    46fc:	mov	r3, #0
    4700:	b	44d4 <Fantasy_BookReader_parse_json_struct+0x2dc>
    4704:	mov	r2, r9
    4708:	mov	r3, #0
    470c:	b	44f8 <Fantasy_BookReader_parse_json_struct+0x300>
    4710:	mov	r2, r9
    4714:	mov	r3, #0
    4718:	b	4520 <Fantasy_BookReader_parse_json_struct+0x328>
    471c:	mov	r2, r9
    4720:	mov	r3, #0
    4724:	b	4548 <Fantasy_BookReader_parse_json_struct+0x350>
    4728:	add	r1, r0, #1
    472c:	sub	r3, r4, r1
    4730:	cmp	r3, #1
    4734:	ble	4748 <Fantasy_BookReader_parse_json_struct+0x550>
    4738:	ldrb	r3, [r0, #1]
    473c:	cmp	r3, #32
    4740:	bhi	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    4744:	beq	48f8 <Fantasy_BookReader_parse_json_struct+0x700>
    4748:	mov	r2, r4
    474c:	mov	r0, r8
    4750:	bl	0 <flatcc_json_parser_space_ext>
    4754:	mov	r1, r0
    4758:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    475c:	ldrb	r3, [r0, #1]
    4760:	cmp	r3, #32
    4764:	addhi	r0, r0, #1
    4768:	bls	45c8 <Fantasy_BookReader_parse_json_struct+0x3d0>
    476c:	cmp	r4, r0
    4770:	bne	45e0 <Fantasy_BookReader_parse_json_struct+0x3e8>
    4774:	mov	r1, r4
    4778:	b	428c <Fantasy_BookReader_parse_json_struct+0x94>
    477c:	add	r1, r0, #1
    4780:	sub	r3, r4, r1
    4784:	cmp	r3, #1
    4788:	ble	479c <Fantasy_BookReader_parse_json_struct+0x5a4>
    478c:	ldrb	r3, [r0, #1]
    4790:	cmp	r3, #32
    4794:	bhi	47ac <Fantasy_BookReader_parse_json_struct+0x5b4>
    4798:	beq	490c <Fantasy_BookReader_parse_json_struct+0x714>
    479c:	mov	r2, r4
    47a0:	mov	r0, r8
    47a4:	bl	0 <flatcc_json_parser_space_ext>
    47a8:	mov	r1, r0
    47ac:	cmp	r4, r1
    47b0:	beq	4988 <Fantasy_BookReader_parse_json_struct+0x790>
    47b4:	ldrb	r3, [r1]
    47b8:	cmp	r3, #125	; 0x7d
    47bc:	bne	42fc <Fantasy_BookReader_parse_json_struct+0x104>
    47c0:	mov	r3, r1
    47c4:	add	r1, r1, #1
    47c8:	sub	r2, r4, r1
    47cc:	cmp	r2, #1
    47d0:	ble	4748 <Fantasy_BookReader_parse_json_struct+0x550>
    47d4:	ldrb	r2, [r3, #1]
    47d8:	cmp	r2, #32
    47dc:	bhi	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    47e0:	bne	4748 <Fantasy_BookReader_parse_json_struct+0x550>
    47e4:	ldrb	r2, [r3, #2]
    47e8:	cmp	r2, #32
    47ec:	addhi	r1, r3, #2
    47f0:	bls	4748 <Fantasy_BookReader_parse_json_struct+0x550>
    47f4:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    47f8:	.word	0x735f7265
    47fc:	.word	0x626f6f6b
    4800:	.word	0xffff0000
    4804:	.word	0x61640000
    4808:	.word	0x00000000
    480c:	mov	r3, #2
    4810:	mov	r2, r4
    4814:	mov	r1, r5
    4818:	mov	r0, r8
    481c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    4820:	cmp	r5, r0
    4824:	str	r0, [sp, #120]	; 0x78
    4828:	beq	459c <Fantasy_BookReader_parse_json_struct+0x3a4>
    482c:	ldrd	r2, [sp, #40]	; 0x28
    4830:	mov	r1, #0
    4834:	cmp	r4, r0
    4838:	mov	r5, r0
    483c:	str	r2, [sp, #128]	; 0x80
    4840:	str	r9, [sp, #136]	; 0x88
    4844:	str	r1, [sp, #140]	; 0x8c
    4848:	str	r2, [sp, #132]	; 0x84
    484c:	beq	4938 <Fantasy_BookReader_parse_json_struct+0x740>
    4850:	add	r3, sp, #136	; 0x88
    4854:	str	r3, [sp]
    4858:	mov	r1, r0
    485c:	add	r3, sp, #132	; 0x84
    4860:	mov	r2, r4
    4864:	mov	r0, r8
    4868:	bl	0 <flatcc_json_parser_integer>
    486c:	cmp	r5, r0
    4870:	beq	4938 <Fantasy_BookReader_parse_json_struct+0x740>
    4874:	ldr	r1, [sp, #132]	; 0x84
    4878:	ldrd	r2, [sp, #136]	; 0x88
    487c:	cmp	r1, #0
    4880:	beq	48b8 <Fantasy_BookReader_parse_json_struct+0x6c0>
    4884:	cmp	r3, #0
    4888:	cmpeq	r2, #-2147483648	; 0x80000000
    488c:	rsbls	r3, r2, #0
    4890:	bhi	4920 <Fantasy_BookReader_parse_json_struct+0x728>
    4894:	ldr	r2, [sp, #116]	; 0x74
    4898:	str	r3, [r2]
    489c:	b	45ac <Fantasy_BookReader_parse_json_struct+0x3b4>
    48a0:	mov	r3, #5
    48a4:	mov	r2, r4
    48a8:	mov	r0, r8
    48ac:	bl	0 <flatcc_json_parser_set_error>
    48b0:	mov	r1, r0
    48b4:	b	432c <Fantasy_BookReader_parse_json_struct+0x134>
    48b8:	mov	r7, #0
    48bc:	cmp	r3, r7
    48c0:	mvn	r6, #-2147483648	; 0x80000000
    48c4:	cmpeq	r2, r6
    48c8:	movls	r3, r2
    48cc:	bls	4894 <Fantasy_BookReader_parse_json_struct+0x69c>
    48d0:	mov	r1, r0
    48d4:	mov	r3, #7
    48d8:	mov	r2, r4
    48dc:	mov	r0, r8
    48e0:	bl	0 <flatcc_json_parser_set_error>
    48e4:	ldr	r3, [sp, #120]	; 0x78
    48e8:	cmp	r3, r0
    48ec:	beq	4938 <Fantasy_BookReader_parse_json_struct+0x740>
    48f0:	ldr	r3, [sp, #128]	; 0x80
    48f4:	b	4894 <Fantasy_BookReader_parse_json_struct+0x69c>
    48f8:	ldrb	r3, [r0, #2]
    48fc:	cmp	r3, #32
    4900:	addhi	r1, r0, #2
    4904:	bls	4748 <Fantasy_BookReader_parse_json_struct+0x550>
    4908:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    490c:	ldrb	r3, [r0, #2]
    4910:	cmp	r3, #32
    4914:	addhi	r1, r0, #2
    4918:	bls	479c <Fantasy_BookReader_parse_json_struct+0x5a4>
    491c:	b	47ac <Fantasy_BookReader_parse_json_struct+0x5b4>
    4920:	mov	r1, r0
    4924:	mov	r3, #8
    4928:	mov	r2, r4
    492c:	mov	r0, r8
    4930:	bl	0 <flatcc_json_parser_set_error>
    4934:	b	48e4 <Fantasy_BookReader_parse_json_struct+0x6ec>
    4938:	ldr	r5, [sp, #120]	; 0x78
    493c:	add	r3, sp, #128	; 0x80
    4940:	str	r3, [sp]
    4944:	mov	r2, r4
    4948:	ldr	r3, [pc, #-328]	; 4808 <Fantasy_BookReader_parse_json_struct+0x610>
    494c:	mov	r1, r5
    4950:	mov	r0, r8
    4954:	bl	34a8 <flatcc_json_parser_symbolic_int32>
    4958:	cmp	r4, r0
    495c:	cmpne	r0, r5
    4960:	bne	48f0 <Fantasy_BookReader_parse_json_struct+0x6f8>
    4964:	mov	r1, r0
    4968:	mov	r3, #33	; 0x21
    496c:	mov	r2, r4
    4970:	mov	r0, r8
    4974:	bl	0 <flatcc_json_parser_set_error>
    4978:	mov	r1, r0
    497c:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    4980:	mov	r1, r5
    4984:	b	428c <Fantasy_BookReader_parse_json_struct+0x94>
    4988:	mov	r1, r4
    498c:	mov	r3, #10
    4990:	mov	r2, r4
    4994:	mov	r0, r8
    4998:	bl	0 <flatcc_json_parser_set_error>
    499c:	mov	r1, r0
    49a0:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>
    49a4:	ldrb	r2, [r5, #2]
    49a8:	cmp	r2, #32
    49ac:	addhi	r3, r5, #2
    49b0:	bls	42cc <Fantasy_BookReader_parse_json_struct+0xd4>
    49b4:	b	42e0 <Fantasy_BookReader_parse_json_struct+0xe8>
    49b8:	add	r1, r3, #1
    49bc:	mov	r2, r4
    49c0:	mov	r0, r8
    49c4:	bl	1c50 <flatcc_json_parser_space>
    49c8:	mov	r1, r0
    49cc:	b	4264 <Fantasy_BookReader_parse_json_struct+0x6c>

000049d0 <monster_test_local_Fantasy_json_parser_enum>:
    49d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    49d4:	sub	sp, sp, #12
    49d8:	mov	sl, r2
    49dc:	str	r3, [sp]
    49e0:	sub	r2, r2, r1
    49e4:	ldr	r3, [sp, #48]	; 0x30
    49e8:	cmp	r2, #8
    49ec:	mov	r4, r1
    49f0:	mov	r5, r0
    49f4:	str	r3, [sp, #4]
    49f8:	ldr	fp, [sp, #52]	; 0x34
    49fc:	bls	4ad4 <monster_test_local_Fantasy_json_parser_enum+0x104>
    4a00:	ldrb	r6, [r4, #7]
    4a04:	mov	r7, #0
    4a08:	ldrb	r0, [r4, #6]
    4a0c:	lsr	r3, r0, #24
    4a10:	lsl	r2, r0, #8
    4a14:	orr	r6, r6, r2
    4a18:	orr	r7, r7, r3
    4a1c:	ldrb	r0, [r4, #5]
    4a20:	lsr	r3, r0, #16
    4a24:	lsl	r2, r0, #16
    4a28:	orr	r6, r6, r2
    4a2c:	orr	r7, r7, r3
    4a30:	ldrb	r0, [r4, #4]
    4a34:	lsr	r3, r0, #8
    4a38:	lsl	r2, r0, #24
    4a3c:	orr	r6, r6, r2
    4a40:	orr	r7, r7, r3
    4a44:	ldrb	r3, [r4, #3]
    4a48:	mov	r2, #0
    4a4c:	orr	r2, r2, r6
    4a50:	orr	r3, r3, r7
    4a54:	ldrb	r0, [r4, #2]
    4a58:	mov	r6, #0
    4a5c:	orr	r2, r2, r6
    4a60:	lsl	r7, r0, #8
    4a64:	orr	r3, r3, r7
    4a68:	ldrb	r0, [r4, #1]
    4a6c:	mov	r6, #0
    4a70:	orr	r6, r6, r2
    4a74:	lsl	r7, r0, #16
    4a78:	orr	r7, r7, r3
    4a7c:	ldrb	r2, [r4]
    4a80:	add	r9, pc, #280	; 0x118
    4a84:	ldrd	r8, [r9]
    4a88:	mov	r0, #0
    4a8c:	orr	r0, r0, r6
    4a90:	lsl	r1, r2, #24
    4a94:	orr	r1, r1, r7
    4a98:	cmp	r1, r9
    4a9c:	cmpeq	r0, r8
    4aa0:	bne	4ac8 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    4aa4:	add	r6, r4, #8
    4aa8:	mov	r0, r6
    4aac:	mov	r1, sl
    4ab0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4ab4:	mov	r0, #0
    4ab8:	and	r1, r1, #-16777216	; 0xff000000
    4abc:	cmp	r1, #1912602624	; 0x72000000
    4ac0:	cmpeq	r0, #0
    4ac4:	beq	4b04 <monster_test_local_Fantasy_json_parser_enum+0x134>
    4ac8:	mov	r0, r4
    4acc:	add	sp, sp, #12
    4ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ad4:	sub	r2, r2, #1
    4ad8:	cmp	r2, #7
    4adc:	ldrls	pc, [pc, r2, lsl #2]
    4ae0:	b	4ac8 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    4ae4:	.word	0x00004b4c
    4ae8:	.word	0x00004b58
    4aec:	.word	0x00004b64
    4af0:	.word	0x00004b70
    4af4:	.word	0x00004b7c
    4af8:	.word	0x00004b88
    4afc:	.word	0x00004b94
    4b00:	.word	0x00004a00
    4b04:	sub	r3, sl, r6
    4b08:	cmp	r3, #1
    4b0c:	ble	4ac8 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    4b10:	ldrb	r3, [r4, #9]
    4b14:	cmp	r3, #46	; 0x2e
    4b18:	bne	4ac8 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    4b1c:	add	r1, r4, #10
    4b20:	cmp	r6, r1
    4b24:	beq	4ac8 <monster_test_local_Fantasy_json_parser_enum+0xf8>
    4b28:	ldr	r3, [sp, #4]
    4b2c:	str	fp, [sp, #52]	; 0x34
    4b30:	str	r3, [sp, #48]	; 0x30
    4b34:	mov	r2, sl
    4b38:	ldr	r3, [sp]
    4b3c:	mov	r0, r5
    4b40:	add	sp, sp, #12
    4b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4b48:	b	10b8 <Fantasy_Character_parse_json_enum>
    4b4c:	mov	r6, #0
    4b50:	mov	r7, #0
    4b54:	b	4a7c <monster_test_local_Fantasy_json_parser_enum+0xac>
    4b58:	mov	r2, #0
    4b5c:	mov	r3, #0
    4b60:	b	4a68 <monster_test_local_Fantasy_json_parser_enum+0x98>
    4b64:	mov	r2, #0
    4b68:	mov	r3, #0
    4b6c:	b	4a54 <monster_test_local_Fantasy_json_parser_enum+0x84>
    4b70:	mov	r6, #0
    4b74:	mov	r7, #0
    4b78:	b	4a44 <monster_test_local_Fantasy_json_parser_enum+0x74>
    4b7c:	mov	r6, #0
    4b80:	mov	r7, #0
    4b84:	b	4a30 <monster_test_local_Fantasy_json_parser_enum+0x60>
    4b88:	mov	r6, #0
    4b8c:	mov	r7, #0
    4b90:	b	4a1c <monster_test_local_Fantasy_json_parser_enum+0x4c>
    4b94:	mov	r6, #0
    4b98:	mov	r7, #0
    4b9c:	b	4a08 <monster_test_local_Fantasy_json_parser_enum+0x38>
    4ba0:	.word	0x61637465
    4ba4:	.word	0x43686172

00004ba8 <flatcc_json_parser_object_end>:
    4ba8:	push	{r4, r5, r6, lr}
    4bac:	mov	r4, r2
    4bb0:	sub	r2, r2, r1
    4bb4:	cmp	r2, #1
    4bb8:	mov	r5, r0
    4bbc:	mov	r6, r3
    4bc0:	ble	4bd4 <flatcc_json_parser_object_end+0x2c>
    4bc4:	ldrb	r3, [r1]
    4bc8:	cmp	r3, #32
    4bcc:	bhi	4be4 <flatcc_json_parser_object_end+0x3c>
    4bd0:	beq	4c54 <flatcc_json_parser_object_end+0xac>
    4bd4:	mov	r2, r4
    4bd8:	mov	r0, r5
    4bdc:	bl	0 <flatcc_json_parser_space_ext>
    4be0:	mov	r1, r0
    4be4:	cmp	r4, r1
    4be8:	beq	4cb8 <flatcc_json_parser_object_end+0x110>
    4bec:	ldrb	r3, [r1]
    4bf0:	cmp	r3, #44	; 0x2c
    4bf4:	beq	4c68 <flatcc_json_parser_object_end+0xc0>
    4bf8:	mov	r3, #0
    4bfc:	str	r3, [r6]
    4c00:	ldrb	r3, [r1]
    4c04:	cmp	r3, #125	; 0x7d
    4c08:	beq	4c20 <flatcc_json_parser_object_end+0x78>
    4c0c:	mov	r2, r4
    4c10:	mov	r0, r5
    4c14:	mov	r3, #10
    4c18:	pop	{r4, r5, r6, lr}
    4c1c:	b	0 <flatcc_json_parser_set_error>
    4c20:	add	r0, r1, #1
    4c24:	sub	r3, r4, r0
    4c28:	cmp	r3, #1
    4c2c:	ble	4c40 <flatcc_json_parser_object_end+0x98>
    4c30:	ldrb	r3, [r1, #1]
    4c34:	cmp	r3, #32
    4c38:	pophi	{r4, r5, r6, pc}
    4c3c:	beq	4cdc <flatcc_json_parser_object_end+0x134>
    4c40:	mov	r2, r4
    4c44:	mov	r1, r0
    4c48:	mov	r0, r5
    4c4c:	pop	{r4, r5, r6, lr}
    4c50:	b	0 <flatcc_json_parser_space_ext>
    4c54:	ldrb	r3, [r1, #1]
    4c58:	cmp	r3, #32
    4c5c:	addhi	r1, r1, #1
    4c60:	bls	4bd4 <flatcc_json_parser_object_end+0x2c>
    4c64:	b	4be4 <flatcc_json_parser_object_end+0x3c>
    4c68:	add	r0, r1, #1
    4c6c:	sub	r3, r4, r0
    4c70:	cmp	r3, #1
    4c74:	ble	4c88 <flatcc_json_parser_object_end+0xe0>
    4c78:	ldrb	r3, [r1, #1]
    4c7c:	cmp	r3, #32
    4c80:	bhi	4c98 <flatcc_json_parser_object_end+0xf0>
    4c84:	beq	4cc8 <flatcc_json_parser_object_end+0x120>
    4c88:	mov	r1, r0
    4c8c:	mov	r2, r4
    4c90:	mov	r0, r5
    4c94:	bl	0 <flatcc_json_parser_space_ext>
    4c98:	cmp	r4, r0
    4c9c:	beq	4d0c <flatcc_json_parser_object_end+0x164>
    4ca0:	ldrb	r3, [r0]
    4ca4:	cmp	r3, #125	; 0x7d
    4ca8:	beq	4cf0 <flatcc_json_parser_object_end+0x148>
    4cac:	mov	r3, #1
    4cb0:	str	r3, [r6]
    4cb4:	pop	{r4, r5, r6, pc}
    4cb8:	mov	r3, #0
    4cbc:	mov	r0, r4
    4cc0:	str	r3, [r6]
    4cc4:	pop	{r4, r5, r6, pc}
    4cc8:	ldrb	r3, [r1, #2]
    4ccc:	cmp	r3, #32
    4cd0:	addhi	r0, r1, #2
    4cd4:	bls	4c88 <flatcc_json_parser_object_end+0xe0>
    4cd8:	b	4c98 <flatcc_json_parser_object_end+0xf0>
    4cdc:	ldrb	r3, [r1, #2]
    4ce0:	cmp	r3, #32
    4ce4:	bls	4c40 <flatcc_json_parser_object_end+0x98>
    4ce8:	add	r0, r1, #2
    4cec:	pop	{r4, r5, r6, pc}
    4cf0:	mov	r3, #0
    4cf4:	mov	r2, r4
    4cf8:	add	r1, r0, #1
    4cfc:	str	r3, [r6]
    4d00:	mov	r0, r5
    4d04:	pop	{r4, r5, r6, lr}
    4d08:	b	1c50 <flatcc_json_parser_space>
    4d0c:	mov	r3, #0
    4d10:	str	r3, [r6]
    4d14:	mov	r0, r5
    4d18:	mov	r2, r4
    4d1c:	mov	r1, r4
    4d20:	mov	r3, #10
    4d24:	pop	{r4, r5, r6, lr}
    4d28:	b	0 <flatcc_json_parser_set_error>

00004d2c <Fantasy_Movie_parse_json_table>:
    4d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4d30:	mov	fp, r3
    4d34:	mov	r3, #0
    4d38:	sub	sp, sp, #36	; 0x24
    4d3c:	mov	sl, r0
    4d40:	mov	r4, r1
    4d44:	str	r3, [fp]
    4d48:	ldr	r0, [r0]
    4d4c:	mov	r1, #10
    4d50:	mov	r5, r2
    4d54:	bl	0 <flatcc_builder_start_table>
    4d58:	cmp	r0, #0
    4d5c:	bne	4f50 <Fantasy_Movie_parse_json_table+0x224>
    4d60:	add	r3, sp, #28
    4d64:	str	r3, [sp]
    4d68:	mov	r2, r5
    4d6c:	mov	r3, #5
    4d70:	mov	r1, r4
    4d74:	mov	r0, sl
    4d78:	bl	0 <flatcc_json_parser_prepare_unions>
    4d7c:	cmp	r5, r0
    4d80:	beq	4f50 <Fantasy_Movie_parse_json_table+0x224>
    4d84:	mov	r1, r4
    4d88:	add	r3, sp, #24
    4d8c:	mov	r2, r5
    4d90:	mov	r0, sl
    4d94:	bl	2a3c <flatcc_json_parser_object_start>
    4d98:	ldr	r3, [sp, #24]
    4d9c:	cmp	r3, #0
    4da0:	mov	r4, r0
    4da4:	beq	4f44 <Fantasy_Movie_parse_json_table+0x218>
    4da8:	add	r9, pc, #952	; 0x3b8
    4dac:	ldrd	r8, [r9]
    4db0:	b	4e34 <Fantasy_Movie_parse_json_table+0x108>
    4db4:	add	r3, pc, #948	; 0x3b4
    4db8:	ldrd	r2, [r3]
    4dbc:	cmp	r1, r3
    4dc0:	cmpeq	r0, r2
    4dc4:	beq	503c <Fantasy_Movie_parse_json_table+0x310>
    4dc8:	add	r3, pc, #936	; 0x3a8
    4dcc:	ldrd	r2, [r3]
    4dd0:	cmp	r1, r3
    4dd4:	cmpeq	r0, r2
    4dd8:	beq	50dc <Fantasy_Movie_parse_json_table+0x3b0>
    4ddc:	add	r3, pc, #924	; 0x39c
    4de0:	ldrd	r2, [r3]
    4de4:	and	r0, r0, #-16777216	; 0xff000000
    4de8:	cmp	r1, r3
    4dec:	cmpeq	r0, r2
    4df0:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4df4:	sub	r3, r5, r4
    4df8:	cmp	r3, #5
    4dfc:	bgt	5374 <Fantasy_Movie_parse_json_table+0x648>
    4e00:	mov	r1, r4
    4e04:	mov	r2, r5
    4e08:	mov	r0, sl
    4e0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4e10:	mov	r1, r0
    4e14:	add	r3, sp, #24
    4e18:	mov	r2, r5
    4e1c:	mov	r0, sl
    4e20:	bl	4ba8 <flatcc_json_parser_object_end>
    4e24:	ldr	r3, [sp, #24]
    4e28:	cmp	r3, #0
    4e2c:	mov	r4, r0
    4e30:	beq	4f44 <Fantasy_Movie_parse_json_table+0x218>
    4e34:	cmp	r5, r4
    4e38:	beq	4e64 <Fantasy_Movie_parse_json_table+0x138>
    4e3c:	ldrb	r3, [r4]
    4e40:	cmp	r3, #34	; 0x22
    4e44:	moveq	r3, #0
    4e48:	addeq	r4, r4, #1
    4e4c:	streq	r3, [sl, #12]
    4e50:	beq	4e64 <Fantasy_Movie_parse_json_table+0x138>
    4e54:	cmp	r3, #46	; 0x2e
    4e58:	movne	r3, #1
    4e5c:	strne	r3, [sl, #12]
    4e60:	beq	5248 <Fantasy_Movie_parse_json_table+0x51c>
    4e64:	mov	r1, r5
    4e68:	mov	r0, r4
    4e6c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4e70:	cmp	r1, r9
    4e74:	cmpeq	r0, r8
    4e78:	bls	4db4 <Fantasy_Movie_parse_json_table+0x88>
    4e7c:	add	r3, pc, #772	; 0x304
    4e80:	ldrd	r2, [r3]
    4e84:	cmp	r1, r3
    4e88:	cmpeq	r0, r2
    4e8c:	bhi	4f6c <Fantasy_Movie_parse_json_table+0x240>
    4e90:	add	r3, pc, #760	; 0x2f8
    4e94:	ldrd	r2, [r3]
    4e98:	cmp	r1, r3
    4e9c:	cmpeq	r0, r2
    4ea0:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4ea4:	add	r4, r4, #8
    4ea8:	mov	r0, r4
    4eac:	mov	r1, r5
    4eb0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4eb4:	add	r3, pc, #732	; 0x2dc
    4eb8:	ldrd	r2, [r3]
    4ebc:	bic	r6, r0, #255	; 0xff
    4ec0:	cmp	r1, r3
    4ec4:	cmpeq	r6, r2
    4ec8:	beq	53bc <Fantasy_Movie_parse_json_table+0x690>
    4ecc:	ldr	r3, [pc, #748]	; 51c0 <Fantasy_Movie_parse_json_table+0x494>
    4ed0:	mov	r2, #0
    4ed4:	and	r1, r1, r3
    4ed8:	ldr	r3, [pc, #740]	; 51c4 <Fantasy_Movie_parse_json_table+0x498>
    4edc:	and	r0, r0, r2
    4ee0:	cmp	r1, r3
    4ee4:	mov	r2, #0
    4ee8:	cmpeq	r0, r2
    4eec:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4ef0:	sub	r3, r5, r4
    4ef4:	cmp	r3, #2
    4ef8:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4efc:	mov	r1, r4
    4f00:	mov	r3, #2
    4f04:	mov	r2, r5
    4f08:	mov	r0, sl
    4f0c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    4f10:	cmp	r4, r0
    4f14:	mov	r1, r0
    4f18:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4f1c:	ldr	r2, [sp, #28]
    4f20:	ldr	ip, [pc, #672]	; 51c8 <Fantasy_Movie_parse_json_table+0x49c>
    4f24:	mov	r3, #9
    4f28:	str	r3, [sp]
    4f2c:	stmib	sp, {r2, ip}
    4f30:	mov	r3, #4
    4f34:	mov	r2, r5
    4f38:	mov	r0, sl
    4f3c:	bl	0 <flatcc_json_parser_union_vector>
    4f40:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    4f44:	ldr	r3, [sl, #24]
    4f48:	cmp	r3, #0
    4f4c:	beq	5264 <Fantasy_Movie_parse_json_table+0x538>
    4f50:	mov	r2, r5
    4f54:	mov	r1, r4
    4f58:	mov	r0, sl
    4f5c:	mov	r3, #33	; 0x21
    4f60:	bl	0 <flatcc_json_parser_set_error>
    4f64:	add	sp, sp, #36	; 0x24
    4f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4f6c:	add	r3, pc, #556	; 0x22c
    4f70:	ldrd	r2, [r3]
    4f74:	cmp	r1, r3
    4f78:	cmpeq	r0, r2
    4f7c:	beq	51d8 <Fantasy_Movie_parse_json_table+0x4ac>
    4f80:	add	r3, pc, #544	; 0x220
    4f84:	ldrd	r2, [r3]
    4f88:	cmp	r1, r3
    4f8c:	cmpeq	r0, r2
    4f90:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4f94:	add	r4, r4, #8
    4f98:	mov	r0, r4
    4f9c:	mov	r1, r5
    4fa0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    4fa4:	ldr	r2, [pc, #532]	; 51c0 <Fantasy_Movie_parse_json_table+0x494>
    4fa8:	mvn	r3, #0
    4fac:	mov	r6, r0
    4fb0:	mov	r7, r1
    4fb4:	add	r1, pc, #500	; 0x1f4
    4fb8:	ldrd	r0, [r1]
    4fbc:	and	r3, r3, r7
    4fc0:	and	r2, r2, r6
    4fc4:	cmp	r3, r1
    4fc8:	cmpeq	r2, r0
    4fcc:	beq	541c <Fantasy_Movie_parse_json_table+0x6f0>
    4fd0:	and	r7, r7, #-16777216	; 0xff000000
    4fd4:	mov	r6, #0
    4fd8:	cmp	r7, #1795162112	; 0x6b000000
    4fdc:	cmpeq	r6, #0
    4fe0:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4fe4:	sub	r3, r5, r4
    4fe8:	cmp	r3, #1
    4fec:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    4ff0:	mov	r1, r4
    4ff4:	mov	r3, #1
    4ff8:	mov	r2, r5
    4ffc:	mov	r0, sl
    5000:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5004:	cmp	r4, r0
    5008:	mov	r1, r0
    500c:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5010:	ldr	r2, [sp, #28]
    5014:	ldr	r0, [pc, #428]	; 51c8 <Fantasy_Movie_parse_json_table+0x49c>
    5018:	mov	r3, #5
    501c:	str	r0, [sp, #8]
    5020:	str	r2, [sp, #4]
    5024:	str	r3, [sp]
    5028:	mov	r2, r5
    502c:	mov	r3, #2
    5030:	mov	r0, sl
    5034:	bl	0 <flatcc_json_parser_union>
    5038:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    503c:	add	r4, r4, #8
    5040:	mov	r0, r4
    5044:	mov	r1, r5
    5048:	bl	0 <flatcc_json_parser_symbol_part_ext>
    504c:	add	r3, pc, #356	; 0x164
    5050:	ldrd	r2, [r3]
    5054:	bic	r6, r0, #255	; 0xff
    5058:	cmp	r1, r3
    505c:	cmpeq	r6, r2
    5060:	beq	531c <Fantasy_Movie_parse_json_table+0x5f0>
    5064:	ldr	r3, [pc, #340]	; 51c0 <Fantasy_Movie_parse_json_table+0x494>
    5068:	mov	r2, #0
    506c:	and	r1, r1, r3
    5070:	ldr	r3, [pc, #340]	; 51cc <Fantasy_Movie_parse_json_table+0x4a0>
    5074:	and	r0, r0, r2
    5078:	cmp	r1, r3
    507c:	mov	r2, #0
    5080:	cmpeq	r0, r2
    5084:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5088:	sub	r3, r5, r4
    508c:	cmp	r3, #2
    5090:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5094:	mov	r1, r4
    5098:	mov	r3, #2
    509c:	mov	r2, r5
    50a0:	mov	r0, sl
    50a4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    50a8:	cmp	r4, r0
    50ac:	mov	r1, r0
    50b0:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    50b4:	ldr	r2, [sp, #28]
    50b8:	ldr	ip, [pc, #264]	; 51c8 <Fantasy_Movie_parse_json_table+0x49c>
    50bc:	mov	r3, #3
    50c0:	str	r3, [sp]
    50c4:	stmib	sp, {r2, ip}
    50c8:	mov	r3, #1
    50cc:	mov	r2, r5
    50d0:	mov	r0, sl
    50d4:	bl	0 <flatcc_json_parser_union>
    50d8:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    50dc:	add	r4, r4, #8
    50e0:	mov	r0, r4
    50e4:	mov	r1, r5
    50e8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    50ec:	ldr	r3, [pc, #204]	; 51c0 <Fantasy_Movie_parse_json_table+0x494>
    50f0:	ldr	r7, [pc, #216]	; 51d0 <Fantasy_Movie_parse_json_table+0x4a4>
    50f4:	mov	r2, #0
    50f8:	mov	r6, #0
    50fc:	and	r1, r1, r3
    5100:	and	r0, r0, r2
    5104:	cmp	r1, r7
    5108:	cmpeq	r0, r6
    510c:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5110:	sub	r3, r5, r4
    5114:	cmp	r3, #2
    5118:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    511c:	mov	r1, r4
    5120:	mov	r3, #2
    5124:	mov	r2, r5
    5128:	mov	r0, sl
    512c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5130:	cmp	r4, r0
    5134:	mov	r1, r0
    5138:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    513c:	ldr	r2, [sp, #28]
    5140:	ldr	lr, [pc, #128]	; 51c8 <Fantasy_Movie_parse_json_table+0x49c>
    5144:	ldr	ip, [pc, #136]	; 51d4 <Fantasy_Movie_parse_json_table+0x4a8>
    5148:	mov	r3, #7
    514c:	str	r3, [sp]
    5150:	stmib	sp, {r2, ip, lr}
    5154:	mov	r3, #3
    5158:	mov	r2, r5
    515c:	mov	r0, sl
    5160:	bl	0 <flatcc_json_parser_union_type>
    5164:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    5168:	.word	0x61637464
    516c:	.word	0x63686172
    5170:	.word	0x676f6e69
    5174:	.word	0x616e7461
    5178:	.word	0x6f5f7479
    517c:	.word	0x63616d65
    5180:	.word	0x6f000000
    5184:	.word	0x63616d65
    5188:	.word	0x5f636860
    518c:	.word	0x6d61696e
    5190:	.word	0x61637465
    5194:	.word	0x63686172
    5198:	.word	0x79706500
    519c:	.word	0x72735f74
    51a0:	.word	0x5f636861
    51a4:	.word	0x6d61696e
    51a8:	.word	0x5f6b6963
    51ac:	.word	0x73696465
    51b0:	.word	0x70650000
    51b4:	.word	0x6b5f7479
    51b8:	.word	0x79706500
    51bc:	.word	0x73745f74
    51c0:	.word	0xffff0000
    51c4:	.word	0x72730000
    51c8:	.word	0x00000000
    51cc:	.word	0x73740000
    51d0:	.word	0x70650000
    51d4:	.word	0x0000001c
    51d8:	add	r6, r4, #8
    51dc:	mov	r0, r6
    51e0:	mov	r1, r5
    51e4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    51e8:	add	r3, pc, #720	; 0x2d0
    51ec:	ldrd	r2, [r3]
    51f0:	cmp	r1, r3
    51f4:	cmpeq	r0, r2
    51f8:	beq	5298 <Fantasy_Movie_parse_json_table+0x56c>
    51fc:	ldr	r2, [pc, #724]	; 54d8 <Fantasy_Movie_parse_json_table+0x7ac>
    5200:	mvn	r3, #0
    5204:	and	r2, r2, r0
    5208:	and	r3, r3, r1
    520c:	mov	r0, r2
    5210:	mov	r1, r3
    5214:	add	r3, pc, #684	; 0x2ac
    5218:	ldrd	r2, [r3]
    521c:	cmp	r1, r3
    5220:	cmpeq	r0, r2
    5224:	bne	5234 <Fantasy_Movie_parse_json_table+0x508>
    5228:	sub	r3, r5, r6
    522c:	cmp	r3, #6
    5230:	bgt	5474 <Fantasy_Movie_parse_json_table+0x748>
    5234:	mov	r1, r6
    5238:	mov	r2, r5
    523c:	mov	r0, sl
    5240:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5244:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    5248:	mov	r1, r4
    524c:	mov	r3, #5
    5250:	mov	r2, r5
    5254:	mov	r0, sl
    5258:	bl	0 <flatcc_json_parser_set_error>
    525c:	mov	r4, r0
    5260:	b	4e64 <Fantasy_Movie_parse_json_table+0x138>
    5264:	mov	r1, r4
    5268:	ldr	r3, [sp, #28]
    526c:	mov	r2, r5
    5270:	mov	r0, sl
    5274:	bl	0 <flatcc_json_parser_finalize_unions>
    5278:	mov	r4, r0
    527c:	ldr	r0, [sl]
    5280:	bl	0 <flatcc_builder_end_table>
    5284:	cmp	r0, #0
    5288:	str	r0, [fp]
    528c:	movne	r0, r4
    5290:	beq	4f50 <Fantasy_Movie_parse_json_table+0x224>
    5294:	b	4f64 <Fantasy_Movie_parse_json_table+0x238>
    5298:	add	r4, r4, #16
    529c:	mov	r0, r4
    52a0:	mov	r1, r5
    52a4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    52a8:	add	r3, pc, #544	; 0x220
    52ac:	ldrd	r2, [r3]
    52b0:	mov	r0, #0
    52b4:	bic	r1, r1, #255	; 0xff
    52b8:	cmp	r1, r3
    52bc:	cmpeq	r0, r2
    52c0:	bne	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    52c4:	sub	r3, r5, r4
    52c8:	cmp	r3, #3
    52cc:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    52d0:	mov	r1, r4
    52d4:	mov	r3, #3
    52d8:	mov	r2, r5
    52dc:	mov	r0, sl
    52e0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    52e4:	cmp	r4, r0
    52e8:	mov	r1, r0
    52ec:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    52f0:	ldr	r2, [sp, #28]
    52f4:	ldr	lr, [pc, #480]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    52f8:	ldr	ip, [pc, #480]	; 54e0 <Fantasy_Movie_parse_json_table+0x7b4>
    52fc:	mov	r3, #1
    5300:	str	r3, [sp]
    5304:	stmib	sp, {r2, ip, lr}
    5308:	mov	r3, #0
    530c:	mov	r2, r5
    5310:	mov	r0, sl
    5314:	bl	0 <flatcc_json_parser_union_type>
    5318:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    531c:	sub	r3, r5, r4
    5320:	cmp	r3, #7
    5324:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5328:	mov	r1, r4
    532c:	mov	r3, #7
    5330:	mov	r2, r5
    5334:	mov	r0, sl
    5338:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    533c:	cmp	r4, r0
    5340:	mov	r1, r0
    5344:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5348:	ldr	r2, [sp, #28]
    534c:	ldr	lr, [pc, #392]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    5350:	ldr	ip, [pc, #396]	; 54e4 <Fantasy_Movie_parse_json_table+0x7b8>
    5354:	mov	r3, #3
    5358:	str	r3, [sp]
    535c:	stmib	sp, {r2, ip, lr}
    5360:	mov	r3, #1
    5364:	mov	r2, r5
    5368:	mov	r0, sl
    536c:	bl	0 <flatcc_json_parser_union_type>
    5370:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    5374:	mov	r1, r4
    5378:	mov	r3, #5
    537c:	mov	r2, r5
    5380:	mov	r0, sl
    5384:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5388:	cmp	r0, r4
    538c:	mov	r1, r0
    5390:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5394:	ldr	r2, [sp, #28]
    5398:	ldr	ip, [pc, #316]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    539c:	mov	r3, #7
    53a0:	str	r3, [sp]
    53a4:	stmib	sp, {r2, ip}
    53a8:	mov	r3, #3
    53ac:	mov	r2, r5
    53b0:	mov	r0, sl
    53b4:	bl	0 <flatcc_json_parser_union>
    53b8:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    53bc:	sub	r3, r5, r4
    53c0:	cmp	r3, #7
    53c4:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    53c8:	mov	r1, r4
    53cc:	mov	r3, #7
    53d0:	mov	r2, r5
    53d4:	mov	r0, sl
    53d8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    53dc:	cmp	r4, r0
    53e0:	mov	r1, r0
    53e4:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    53e8:	ldr	r2, [sp, #28]
    53ec:	ldr	r3, [pc, #244]	; 54e8 <Fantasy_Movie_parse_json_table+0x7bc>
    53f0:	ldr	lr, [pc, #228]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    53f4:	ldr	ip, [pc, #240]	; 54ec <Fantasy_Movie_parse_json_table+0x7c0>
    53f8:	str	r3, [sp, #16]
    53fc:	mov	r3, #9
    5400:	stmib	sp, {r2, ip, lr}
    5404:	mov	r0, sl
    5408:	str	r3, [sp]
    540c:	mov	r2, r5
    5410:	mov	r3, #4
    5414:	bl	0 <flatcc_json_parser_union_type_vector>
    5418:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    541c:	sub	r3, r5, r4
    5420:	cmp	r3, #6
    5424:	ble	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5428:	mov	r1, r4
    542c:	mov	r3, #6
    5430:	mov	r2, r5
    5434:	mov	r0, sl
    5438:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    543c:	cmp	r4, r0
    5440:	mov	r1, r0
    5444:	beq	4e00 <Fantasy_Movie_parse_json_table+0xd4>
    5448:	ldr	r2, [sp, #28]
    544c:	ldr	lr, [pc, #136]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    5450:	ldr	ip, [pc, #152]	; 54f0 <Fantasy_Movie_parse_json_table+0x7c4>
    5454:	mov	r3, #5
    5458:	str	r3, [sp]
    545c:	stmib	sp, {r2, ip, lr}
    5460:	mov	r3, #2
    5464:	mov	r2, r5
    5468:	mov	r0, sl
    546c:	bl	0 <flatcc_json_parser_union_type>
    5470:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    5474:	mov	r1, r6
    5478:	mov	r3, #6
    547c:	mov	r2, r5
    5480:	mov	r0, sl
    5484:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5488:	cmp	r6, r0
    548c:	mov	r1, r0
    5490:	beq	5234 <Fantasy_Movie_parse_json_table+0x508>
    5494:	ldr	r2, [sp, #28]
    5498:	ldr	ip, [pc, #60]	; 54dc <Fantasy_Movie_parse_json_table+0x7b0>
    549c:	mov	r3, #1
    54a0:	str	r3, [sp]
    54a4:	stmib	sp, {r2, ip}
    54a8:	mov	r3, #0
    54ac:	mov	r2, r5
    54b0:	mov	r0, sl
    54b4:	bl	0 <flatcc_json_parser_union>
    54b8:	b	4e10 <Fantasy_Movie_parse_json_table+0xe4>
    54bc:	nop			; (mov r0, r0)
    54c0:	.word	0x65725f74
    54c4:	.word	0x72616374
    54c8:	.word	0x65720000
    54cc:	.word	0x72616374
    54d0:	.word	0x00000000
    54d4:	.word	0x79706500
    54d8:	.word	0xffff0000
    54dc:	.word	0x00000000
    54e0:	.word	0x0000003c
    54e4:	.word	0x0000000c
    54e8:	.word	0x00000000
    54ec:	.word	0x0000002c
    54f0:	.word	0x0000004c

000054f4 <flatcc_json_parser_array_end>:
    54f4:	push	{r4, r5, r6, lr}
    54f8:	mov	r4, r2
    54fc:	sub	r2, r2, r1
    5500:	cmp	r2, #1
    5504:	mov	r5, r0
    5508:	mov	r6, r3
    550c:	ble	5520 <flatcc_json_parser_array_end+0x2c>
    5510:	ldrb	r3, [r1]
    5514:	cmp	r3, #32
    5518:	bhi	5530 <flatcc_json_parser_array_end+0x3c>
    551c:	beq	55a0 <flatcc_json_parser_array_end+0xac>
    5520:	mov	r2, r4
    5524:	mov	r0, r5
    5528:	bl	0 <flatcc_json_parser_space_ext>
    552c:	mov	r1, r0
    5530:	cmp	r4, r1
    5534:	beq	5604 <flatcc_json_parser_array_end+0x110>
    5538:	ldrb	r3, [r1]
    553c:	cmp	r3, #44	; 0x2c
    5540:	beq	55b4 <flatcc_json_parser_array_end+0xc0>
    5544:	mov	r3, #0
    5548:	str	r3, [r6]
    554c:	ldrb	r3, [r1]
    5550:	cmp	r3, #93	; 0x5d
    5554:	beq	556c <flatcc_json_parser_array_end+0x78>
    5558:	mov	r2, r4
    555c:	mov	r0, r5
    5560:	mov	r3, #9
    5564:	pop	{r4, r5, r6, lr}
    5568:	b	0 <flatcc_json_parser_set_error>
    556c:	add	r0, r1, #1
    5570:	sub	r3, r4, r0
    5574:	cmp	r3, #1
    5578:	ble	558c <flatcc_json_parser_array_end+0x98>
    557c:	ldrb	r3, [r1, #1]
    5580:	cmp	r3, #32
    5584:	pophi	{r4, r5, r6, pc}
    5588:	beq	5628 <flatcc_json_parser_array_end+0x134>
    558c:	mov	r2, r4
    5590:	mov	r1, r0
    5594:	mov	r0, r5
    5598:	pop	{r4, r5, r6, lr}
    559c:	b	0 <flatcc_json_parser_space_ext>
    55a0:	ldrb	r3, [r1, #1]
    55a4:	cmp	r3, #32
    55a8:	addhi	r1, r1, #1
    55ac:	bls	5520 <flatcc_json_parser_array_end+0x2c>
    55b0:	b	5530 <flatcc_json_parser_array_end+0x3c>
    55b4:	add	r0, r1, #1
    55b8:	sub	r3, r4, r0
    55bc:	cmp	r3, #1
    55c0:	ble	55d4 <flatcc_json_parser_array_end+0xe0>
    55c4:	ldrb	r3, [r1, #1]
    55c8:	cmp	r3, #32
    55cc:	bhi	55e4 <flatcc_json_parser_array_end+0xf0>
    55d0:	beq	5614 <flatcc_json_parser_array_end+0x120>
    55d4:	mov	r1, r0
    55d8:	mov	r2, r4
    55dc:	mov	r0, r5
    55e0:	bl	0 <flatcc_json_parser_space_ext>
    55e4:	cmp	r4, r0
    55e8:	beq	5658 <flatcc_json_parser_array_end+0x164>
    55ec:	ldrb	r3, [r0]
    55f0:	cmp	r3, #93	; 0x5d
    55f4:	beq	563c <flatcc_json_parser_array_end+0x148>
    55f8:	mov	r3, #1
    55fc:	str	r3, [r6]
    5600:	pop	{r4, r5, r6, pc}
    5604:	mov	r3, #0
    5608:	mov	r0, r4
    560c:	str	r3, [r6]
    5610:	pop	{r4, r5, r6, pc}
    5614:	ldrb	r3, [r1, #2]
    5618:	cmp	r3, #32
    561c:	addhi	r0, r1, #2
    5620:	bls	55d4 <flatcc_json_parser_array_end+0xe0>
    5624:	b	55e4 <flatcc_json_parser_array_end+0xf0>
    5628:	ldrb	r3, [r1, #2]
    562c:	cmp	r3, #32
    5630:	bls	558c <flatcc_json_parser_array_end+0x98>
    5634:	add	r0, r1, #2
    5638:	pop	{r4, r5, r6, pc}
    563c:	mov	r3, #0
    5640:	mov	r2, r4
    5644:	add	r1, r0, #1
    5648:	str	r3, [r6]
    564c:	mov	r0, r5
    5650:	pop	{r4, r5, r6, lr}
    5654:	b	1c50 <flatcc_json_parser_space>
    5658:	mov	r3, #0
    565c:	str	r3, [r6]
    5660:	mov	r0, r5
    5664:	mov	r2, r4
    5668:	mov	r1, r4
    566c:	mov	r3, #9
    5670:	pop	{r4, r5, r6, lr}
    5674:	b	0 <flatcc_json_parser_set_error>

00005678 <Fantasy_Character_parse_json_union>:
    5678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    567c:	sub	sp, sp, #132	; 0x84
    5680:	mov	ip, #0
    5684:	ldr	lr, [sp, #168]	; 0xa8
    5688:	cmp	r3, #9
    568c:	mov	r5, r0
    5690:	str	ip, [lr]
    5694:	mov	r4, r2
    5698:	beq	5744 <Fantasy_Character_parse_json_union+0xcc>
    569c:	mov	r6, r1
    56a0:	bls	56e8 <Fantasy_Character_parse_json_union+0x70>
    56a4:	cmp	r3, #11
    56a8:	beq	578c <Fantasy_Character_parse_json_union+0x114>
    56ac:	bcc	5744 <Fantasy_Character_parse_json_union+0xcc>
    56b0:	cmp	r3, #255	; 0xff
    56b4:	beq	578c <Fantasy_Character_parse_json_union+0x114>
    56b8:	ldr	r3, [r5, #8]
    56bc:	mov	r2, r4
    56c0:	tst	r3, #1
    56c4:	mov	r1, r6
    56c8:	mov	r0, r5
    56cc:	bne	5f4c <Fantasy_Character_parse_json_union+0x8d4>
    56d0:	mov	r3, #15
    56d4:	bl	0 <flatcc_json_parser_set_error>
    56d8:	mov	r1, r0
    56dc:	mov	r0, r1
    56e0:	add	sp, sp, #132	; 0x84
    56e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    56e8:	cmp	r3, #2
    56ec:	beq	5b14 <Fantasy_Character_parse_json_union+0x49c>
    56f0:	cmp	r3, #8
    56f4:	beq	579c <Fantasy_Character_parse_json_union+0x124>
    56f8:	cmp	r3, ip
    56fc:	bne	56b8 <Fantasy_Character_parse_json_union+0x40>
    5700:	sub	r3, r2, r1
    5704:	cmp	r3, #3
    5708:	ble	5728 <Fantasy_Character_parse_json_union+0xb0>
    570c:	ldr	r1, [pc, #1108]	; 5b68 <Fantasy_Character_parse_json_union+0x4f0>
    5710:	mov	r2, #4
    5714:	mov	r0, r6
    5718:	bl	0 <memcmp>
    571c:	cmp	r0, #0
    5720:	addeq	r1, r6, #4
    5724:	beq	56dc <Fantasy_Character_parse_json_union+0x64>
    5728:	mov	r1, r6
    572c:	mov	r2, r4
    5730:	mov	r0, r5
    5734:	mov	r3, #26
    5738:	bl	0 <flatcc_json_parser_set_error>
    573c:	mov	r1, r0
    5740:	b	56dc <Fantasy_Character_parse_json_union+0x64>
    5744:	ldr	r3, [sp, #168]	; 0xa8
    5748:	bl	41f8 <Fantasy_BookReader_parse_json_struct>
    574c:	mov	r1, r0
    5750:	ldr	r3, [r5, #24]
    5754:	cmp	r3, #0
    5758:	bne	56dc <Fantasy_Character_parse_json_union+0x64>
    575c:	ldr	r3, [sp, #168]	; 0xa8
    5760:	ldr	r3, [r3]
    5764:	cmp	r3, #0
    5768:	bne	56dc <Fantasy_Character_parse_json_union+0x64>
    576c:	mov	r2, r4
    5770:	mov	r0, r5
    5774:	mov	r3, #33	; 0x21
    5778:	bl	0 <flatcc_json_parser_set_error>
    577c:	mov	r1, r0
    5780:	mov	r0, r1
    5784:	add	sp, sp, #132	; 0x84
    5788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    578c:	ldr	r3, [sp, #168]	; 0xa8
    5790:	bl	0 <flatcc_json_parser_build_string>
    5794:	mov	r1, r0
    5798:	b	5750 <Fantasy_Character_parse_json_union+0xd8>
    579c:	mov	r2, #2
    57a0:	mov	r1, r2
    57a4:	ldr	r0, [r0]
    57a8:	bl	0 <flatcc_builder_start_struct>
    57ac:	mov	r1, r6
    57b0:	subs	r3, r0, #0
    57b4:	str	r3, [sp, #24]
    57b8:	beq	5a4c <Fantasy_Character_parse_json_union+0x3d4>
    57bc:	add	r3, sp, #112	; 0x70
    57c0:	mov	r2, r4
    57c4:	mov	r0, r5
    57c8:	bl	2a3c <flatcc_json_parser_object_start>
    57cc:	ldr	r3, [sp, #112]	; 0x70
    57d0:	cmp	r3, #0
    57d4:	mov	r1, r0
    57d8:	beq	5e58 <Fantasy_Character_parse_json_union+0x7e0>
    57dc:	mov	sl, #0
    57e0:	mov	fp, sl
    57e4:	b	5850 <Fantasy_Character_parse_json_union+0x1d8>
    57e8:	add	r7, r0, #8
    57ec:	mov	r0, r7
    57f0:	mov	r1, r4
    57f4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    57f8:	add	r3, pc, #856	; 0x358
    57fc:	ldrd	r2, [r3]
    5800:	mov	r0, #0
    5804:	bic	r1, r1, #255	; 0xff
    5808:	cmp	r1, r3
    580c:	cmpeq	r0, r2
    5810:	bne	5820 <Fantasy_Character_parse_json_union+0x1a8>
    5814:	sub	r3, r4, r7
    5818:	cmp	r3, #3
    581c:	bgt	5a64 <Fantasy_Character_parse_json_union+0x3ec>
    5820:	mov	r1, r7
    5824:	mov	r2, r4
    5828:	mov	r0, r5
    582c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5830:	mov	r1, r0
    5834:	add	r3, sp, #112	; 0x70
    5838:	mov	r2, r4
    583c:	mov	r0, r5
    5840:	bl	4ba8 <flatcc_json_parser_object_end>
    5844:	ldr	r3, [sp, #112]	; 0x70
    5848:	cmp	r3, #0
    584c:	beq	5e84 <Fantasy_Character_parse_json_union+0x80c>
    5850:	cmp	r4, r0
    5854:	beq	59a0 <Fantasy_Character_parse_json_union+0x328>
    5858:	ldrb	r3, [r0]
    585c:	cmp	r3, #34	; 0x22
    5860:	moveq	r3, #0
    5864:	addeq	r0, r0, #1
    5868:	streq	r3, [r5, #12]
    586c:	beq	5880 <Fantasy_Character_parse_json_union+0x208>
    5870:	cmp	r3, #46	; 0x2e
    5874:	movne	r3, #1
    5878:	strne	r3, [r5, #12]
    587c:	beq	5afc <Fantasy_Character_parse_json_union+0x484>
    5880:	sub	r3, r4, r0
    5884:	cmp	r3, #8
    5888:	bls	59b8 <Fantasy_Character_parse_json_union+0x340>
    588c:	ldrb	r6, [r0, #7]
    5890:	mov	r7, #0
    5894:	ldrb	r2, [r0, #6]
    5898:	lsr	r1, r2, #24
    589c:	lsl	r3, r2, #8
    58a0:	str	r1, [sp, #92]	; 0x5c
    58a4:	str	r3, [sp, #88]	; 0x58
    58a8:	ldrd	r2, [sp, #88]	; 0x58
    58ac:	orr	r2, r2, r6
    58b0:	orr	r3, r3, r7
    58b4:	mov	r6, r2
    58b8:	mov	r7, r3
    58bc:	ldrb	r2, [r0, #5]
    58c0:	lsr	r1, r2, #16
    58c4:	lsl	r3, r2, #16
    58c8:	str	r1, [sp, #76]	; 0x4c
    58cc:	str	r3, [sp, #72]	; 0x48
    58d0:	ldrd	r2, [sp, #72]	; 0x48
    58d4:	orr	r2, r2, r6
    58d8:	orr	r3, r3, r7
    58dc:	ldrb	r6, [r0, #4]
    58e0:	lsr	r1, r6, #8
    58e4:	str	r1, [sp, #36]	; 0x24
    58e8:	lsl	r1, r6, #24
    58ec:	str	r1, [sp, #32]
    58f0:	ldrd	r6, [sp, #32]
    58f4:	orr	r6, r6, r2
    58f8:	orr	r7, r7, r3
    58fc:	mov	r2, r6
    5900:	mov	r3, r7
    5904:	ldrb	r1, [r0, #3]
    5908:	str	r1, [sp, #52]	; 0x34
    590c:	mov	r1, #0
    5910:	str	r1, [sp, #48]	; 0x30
    5914:	ldrd	r6, [sp, #48]	; 0x30
    5918:	orr	r6, r6, r2
    591c:	orr	r7, r7, r3
    5920:	mov	r2, r6
    5924:	mov	r3, r7
    5928:	ldrb	r6, [r0, #2]
    592c:	lsl	r1, r6, #8
    5930:	str	r1, [sp, #20]
    5934:	mov	r1, #0
    5938:	str	r1, [sp, #16]
    593c:	ldrd	r6, [sp, #16]
    5940:	orr	r6, r6, r2
    5944:	orr	r7, r7, r3
    5948:	mov	r2, r6
    594c:	mov	r3, r7
    5950:	ldrb	r6, [r0, #1]
    5954:	lsl	r1, r6, #16
    5958:	str	r1, [sp, #12]
    595c:	mov	r1, #0
    5960:	str	r1, [sp, #8]
    5964:	ldrd	r6, [sp, #8]
    5968:	orr	r6, r6, r2
    596c:	orr	r7, r7, r3
    5970:	mov	r2, r6
    5974:	mov	r3, r7
    5978:	ldrb	r6, [r0]
    597c:	mov	r8, #0
    5980:	orr	r2, r2, r8
    5984:	lsl	r9, r6, #24
    5988:	add	r7, pc, #464	; 0x1d0
    598c:	ldrd	r6, [r7]
    5990:	orr	r3, r3, r9
    5994:	cmp	r3, r7
    5998:	cmpeq	r2, r6
    599c:	beq	57e8 <Fantasy_Character_parse_json_union+0x170>
    59a0:	mov	r1, r0
    59a4:	mov	r2, r4
    59a8:	mov	r0, r5
    59ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    59b0:	mov	r1, r0
    59b4:	b	5834 <Fantasy_Character_parse_json_union+0x1bc>
    59b8:	sub	r3, r3, #1
    59bc:	cmp	r3, #7
    59c0:	ldrls	pc, [pc, r3, lsl #2]
    59c4:	b	59a0 <Fantasy_Character_parse_json_union+0x328>
    59c8:	.word	0x00005a30
    59cc:	.word	0x00005a24
    59d0:	.word	0x00005a18
    59d4:	.word	0x00005a0c
    59d8:	.word	0x00005a00
    59dc:	.word	0x000059f4
    59e0:	.word	0x000059e8
    59e4:	.word	0x0000588c
    59e8:	mov	r6, sl
    59ec:	mov	r7, fp
    59f0:	b	5894 <Fantasy_Character_parse_json_union+0x21c>
    59f4:	mov	r6, sl
    59f8:	mov	r7, fp
    59fc:	b	58bc <Fantasy_Character_parse_json_union+0x244>
    5a00:	mov	r2, sl
    5a04:	mov	r3, fp
    5a08:	b	58dc <Fantasy_Character_parse_json_union+0x264>
    5a0c:	mov	r2, sl
    5a10:	mov	r3, fp
    5a14:	b	5904 <Fantasy_Character_parse_json_union+0x28c>
    5a18:	mov	r2, sl
    5a1c:	mov	r3, fp
    5a20:	b	5928 <Fantasy_Character_parse_json_union+0x2b0>
    5a24:	mov	r2, sl
    5a28:	mov	r3, fp
    5a2c:	b	5950 <Fantasy_Character_parse_json_union+0x2d8>
    5a30:	mov	r2, sl
    5a34:	mov	r3, fp
    5a38:	b	5978 <Fantasy_Character_parse_json_union+0x300>
    5a3c:	ldr	r3, [r5, #24]
    5a40:	cmp	r3, #0
    5a44:	beq	5fb4 <Fantasy_Character_parse_json_union+0x93c>
    5a48:	mov	r1, r6
    5a4c:	mov	r3, #33	; 0x21
    5a50:	mov	r2, r4
    5a54:	mov	r0, r5
    5a58:	bl	0 <flatcc_json_parser_set_error>
    5a5c:	mov	r1, r0
    5a60:	b	5750 <Fantasy_Character_parse_json_union+0xd8>
    5a64:	mov	r3, #3
    5a68:	mov	r2, r4
    5a6c:	mov	r1, r7
    5a70:	mov	r0, r5
    5a74:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5a78:	cmp	r7, r0
    5a7c:	mov	r6, r0
    5a80:	str	r0, [sp, #40]	; 0x28
    5a84:	beq	5820 <Fantasy_Character_parse_json_union+0x1a8>
    5a88:	cmp	r4, r0
    5a8c:	strh	r8, [sp, #108]	; 0x6c
    5a90:	str	sl, [sp, #120]	; 0x78
    5a94:	str	fp, [sp, #124]	; 0x7c
    5a98:	str	r8, [sp, #116]	; 0x74
    5a9c:	beq	5e14 <Fantasy_Character_parse_json_union+0x79c>
    5aa0:	add	r3, sp, #120	; 0x78
    5aa4:	mov	r1, r0
    5aa8:	str	r3, [sp]
    5aac:	mov	r2, r4
    5ab0:	add	r3, sp, #116	; 0x74
    5ab4:	mov	r0, r5
    5ab8:	bl	0 <flatcc_json_parser_integer>
    5abc:	cmp	r6, r0
    5ac0:	mov	r1, r0
    5ac4:	beq	5e14 <Fantasy_Character_parse_json_union+0x79c>
    5ac8:	ldr	r3, [sp, #116]	; 0x74
    5acc:	cmp	r3, r8
    5ad0:	bne	5f8c <Fantasy_Character_parse_json_union+0x914>
    5ad4:	ldrd	r2, [sp, #120]	; 0x78
    5ad8:	ldr	r6, [pc, #140]	; 5b6c <Fantasy_Character_parse_json_union+0x4f4>
    5adc:	mov	r7, #0
    5ae0:	cmp	r3, r7
    5ae4:	cmpeq	r2, r6
    5ae8:	uxthls	r2, r2
    5aec:	bhi	5ffc <Fantasy_Character_parse_json_union+0x984>
    5af0:	ldr	r3, [sp, #24]
    5af4:	strh	r2, [r3]
    5af8:	b	5834 <Fantasy_Character_parse_json_union+0x1bc>
    5afc:	mov	r1, r0
    5b00:	mov	r3, #5
    5b04:	mov	r2, r4
    5b08:	mov	r0, r5
    5b0c:	bl	0 <flatcc_json_parser_set_error>
    5b10:	b	5880 <Fantasy_Character_parse_json_union+0x208>
    5b14:	mov	r1, #1
    5b18:	ldr	r0, [r0]
    5b1c:	bl	0 <flatcc_builder_start_table>
    5b20:	cmp	r0, #0
    5b24:	bne	5a48 <Fantasy_Character_parse_json_union+0x3d0>
    5b28:	mov	r1, r6
    5b2c:	add	r3, sp, #108	; 0x6c
    5b30:	mov	r2, r4
    5b34:	mov	r0, r5
    5b38:	bl	2a3c <flatcc_json_parser_object_start>
    5b3c:	ldr	r3, [sp, #108]	; 0x6c
    5b40:	cmp	r3, #0
    5b44:	mov	r6, r0
    5b48:	beq	5a3c <Fantasy_Character_parse_json_union+0x3c4>
    5b4c:	mov	r8, #0
    5b50:	mov	r9, r8
    5b54:	b	5d20 <Fantasy_Character_parse_json_union+0x6a8>
    5b58:	.word	0x00000000
    5b5c:	.word	0x67746800
    5b60:	.word	0x5f6c656e
    5b64:	.word	0x68616972
    5b68:	.word	0x00000440
    5b6c:	.word	0x0000ffff
    5b70:	ldrb	r2, [r6, #7]
    5b74:	mov	r3, #0
    5b78:	ldrb	r0, [r6, #6]
    5b7c:	lsr	ip, r0, #24
    5b80:	lsl	r1, r0, #8
    5b84:	str	ip, [sp, #100]	; 0x64
    5b88:	str	r1, [sp, #96]	; 0x60
    5b8c:	ldrd	r0, [sp, #96]	; 0x60
    5b90:	orr	r0, r0, r2
    5b94:	orr	r1, r1, r3
    5b98:	mov	r2, r0
    5b9c:	mov	r3, r1
    5ba0:	ldrb	r0, [r6, #5]
    5ba4:	lsr	ip, r0, #16
    5ba8:	lsl	r1, r0, #16
    5bac:	str	ip, [sp, #84]	; 0x54
    5bb0:	str	r1, [sp, #80]	; 0x50
    5bb4:	ldrd	r0, [sp, #80]	; 0x50
    5bb8:	orr	r0, r0, r2
    5bbc:	orr	r1, r1, r3
    5bc0:	mov	r2, r0
    5bc4:	mov	r3, r1
    5bc8:	ldrb	r0, [r6, #4]
    5bcc:	lsr	ip, r0, #8
    5bd0:	lsl	r1, r0, #24
    5bd4:	str	ip, [sp, #60]	; 0x3c
    5bd8:	str	r1, [sp, #56]	; 0x38
    5bdc:	ldrd	r0, [sp, #56]	; 0x38
    5be0:	orr	r0, r0, r2
    5be4:	orr	r1, r1, r3
    5be8:	mov	r2, r0
    5bec:	mov	r3, r1
    5bf0:	ldrb	r1, [r6, #3]
    5bf4:	str	r1, [sp, #68]	; 0x44
    5bf8:	mov	r1, #0
    5bfc:	str	r1, [sp, #64]	; 0x40
    5c00:	ldrd	r0, [sp, #64]	; 0x40
    5c04:	orr	r0, r0, r2
    5c08:	orr	r1, r1, r3
    5c0c:	mov	r2, r0
    5c10:	mov	r3, r1
    5c14:	ldrb	r0, [r6, #2]
    5c18:	lsl	r1, r0, #8
    5c1c:	str	r1, [sp, #44]	; 0x2c
    5c20:	mov	r1, #0
    5c24:	str	r1, [sp, #40]	; 0x28
    5c28:	ldrd	r0, [sp, #40]	; 0x28
    5c2c:	orr	r0, r0, r2
    5c30:	orr	r1, r1, r3
    5c34:	mov	r2, r0
    5c38:	mov	r3, r1
    5c3c:	ldrb	r0, [r6, #1]
    5c40:	lsl	r1, r0, #16
    5c44:	str	r1, [sp, #28]
    5c48:	mov	r1, #0
    5c4c:	str	r1, [sp, #24]
    5c50:	ldrd	r0, [sp, #24]
    5c54:	orr	r0, r0, r2
    5c58:	orr	r1, r1, r3
    5c5c:	mov	r2, r0
    5c60:	mov	r3, r1
    5c64:	ldrb	r0, [r6]
    5c68:	mov	sl, #0
    5c6c:	orr	r2, r2, sl
    5c70:	lsl	fp, r0, #24
    5c74:	add	r1, pc, #972	; 0x3cc
    5c78:	ldrd	r0, [r1]
    5c7c:	orr	r3, r3, fp
    5c80:	cmp	r3, r1
    5c84:	cmpeq	r2, r0
    5c88:	bne	5ce8 <Fantasy_Character_parse_json_union+0x670>
    5c8c:	add	r7, r6, #8
    5c90:	mov	r0, r7
    5c94:	mov	r1, r4
    5c98:	bl	0 <flatcc_json_parser_symbol_part_ext>
    5c9c:	add	r3, pc, #940	; 0x3ac
    5ca0:	ldrd	r2, [r3]
    5ca4:	cmp	r1, r3
    5ca8:	cmpeq	r0, r2
    5cac:	bne	5de0 <Fantasy_Character_parse_json_union+0x768>
    5cb0:	add	r6, r6, #16
    5cb4:	mov	r0, r6
    5cb8:	mov	r1, r4
    5cbc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    5cc0:	add	r3, pc, #912	; 0x390
    5cc4:	ldrd	r2, [r3]
    5cc8:	mov	r0, #0
    5ccc:	bic	r1, r1, #255	; 0xff
    5cd0:	cmp	r1, r3
    5cd4:	cmpeq	r0, r2
    5cd8:	bne	5ce8 <Fantasy_Character_parse_json_union+0x670>
    5cdc:	sub	r3, r4, r6
    5ce0:	cmp	r3, #3
    5ce4:	bgt	5e8c <Fantasy_Character_parse_json_union+0x814>
    5ce8:	mov	r1, r6
    5cec:	mov	r2, r4
    5cf0:	mov	r0, r5
    5cf4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5cf8:	mov	r6, r0
    5cfc:	mov	r1, r6
    5d00:	add	r3, sp, #108	; 0x6c
    5d04:	mov	r2, r4
    5d08:	mov	r0, r5
    5d0c:	bl	4ba8 <flatcc_json_parser_object_end>
    5d10:	ldr	r3, [sp, #108]	; 0x6c
    5d14:	cmp	r3, #0
    5d18:	mov	r6, r0
    5d1c:	beq	5a3c <Fantasy_Character_parse_json_union+0x3c4>
    5d20:	cmp	r4, r6
    5d24:	beq	5ce8 <Fantasy_Character_parse_json_union+0x670>
    5d28:	ldrb	r3, [r6]
    5d2c:	cmp	r3, #34	; 0x22
    5d30:	moveq	r3, #0
    5d34:	addeq	r6, r6, #1
    5d38:	streq	r3, [r5, #12]
    5d3c:	beq	5d50 <Fantasy_Character_parse_json_union+0x6d8>
    5d40:	cmp	r3, #46	; 0x2e
    5d44:	movne	r3, #1
    5d48:	strne	r3, [r5, #12]
    5d4c:	beq	5df8 <Fantasy_Character_parse_json_union+0x780>
    5d50:	sub	r3, r4, r6
    5d54:	cmp	r3, #8
    5d58:	bhi	5b70 <Fantasy_Character_parse_json_union+0x4f8>
    5d5c:	sub	r3, r3, #1
    5d60:	cmp	r3, #7
    5d64:	ldrls	pc, [pc, r3, lsl #2]
    5d68:	b	5ce8 <Fantasy_Character_parse_json_union+0x670>
    5d6c:	.word	0x00005dd4
    5d70:	.word	0x00005dc8
    5d74:	.word	0x00005dbc
    5d78:	.word	0x00005db0
    5d7c:	.word	0x00005da4
    5d80:	.word	0x00005d98
    5d84:	.word	0x00005d8c
    5d88:	.word	0x00005b70
    5d8c:	mov	r2, r8
    5d90:	mov	r3, r9
    5d94:	b	5b78 <Fantasy_Character_parse_json_union+0x500>
    5d98:	mov	r2, r8
    5d9c:	mov	r3, r9
    5da0:	b	5ba0 <Fantasy_Character_parse_json_union+0x528>
    5da4:	mov	r2, r8
    5da8:	mov	r3, r9
    5dac:	b	5bc8 <Fantasy_Character_parse_json_union+0x550>
    5db0:	mov	r2, r8
    5db4:	mov	r3, r9
    5db8:	b	5bf0 <Fantasy_Character_parse_json_union+0x578>
    5dbc:	mov	r2, r8
    5dc0:	mov	r3, r9
    5dc4:	b	5c14 <Fantasy_Character_parse_json_union+0x59c>
    5dc8:	mov	r2, r8
    5dcc:	mov	r3, r9
    5dd0:	b	5c3c <Fantasy_Character_parse_json_union+0x5c4>
    5dd4:	mov	r2, r8
    5dd8:	mov	r3, r9
    5ddc:	b	5c64 <Fantasy_Character_parse_json_union+0x5ec>
    5de0:	mov	r1, r7
    5de4:	mov	r2, r4
    5de8:	mov	r0, r5
    5dec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5df0:	mov	r6, r0
    5df4:	b	5cfc <Fantasy_Character_parse_json_union+0x684>
    5df8:	mov	r1, r6
    5dfc:	mov	r3, #5
    5e00:	mov	r2, r4
    5e04:	mov	r0, r5
    5e08:	bl	0 <flatcc_json_parser_set_error>
    5e0c:	mov	r6, r0
    5e10:	b	5d50 <Fantasy_Character_parse_json_union+0x6d8>
    5e14:	ldr	r6, [sp, #40]	; 0x28
    5e18:	add	r3, sp, #108	; 0x6c
    5e1c:	str	r3, [sp]
    5e20:	mov	r1, r6
    5e24:	ldr	r3, [pc, #564]	; 6060 <Fantasy_Character_parse_json_union+0x9e8>
    5e28:	mov	r2, r4
    5e2c:	mov	r0, r5
    5e30:	bl	327c <flatcc_json_parser_symbolic_uint16>
    5e34:	cmp	r4, r0
    5e38:	cmpne	r0, r6
    5e3c:	mov	r1, r0
    5e40:	bne	5fac <Fantasy_Character_parse_json_union+0x934>
    5e44:	mov	r3, #33	; 0x21
    5e48:	mov	r2, r4
    5e4c:	mov	r0, r5
    5e50:	bl	0 <flatcc_json_parser_set_error>
    5e54:	mov	r1, r0
    5e58:	cmp	r4, r1
    5e5c:	beq	5a4c <Fantasy_Character_parse_json_union+0x3d4>
    5e60:	ldr	r0, [r5]
    5e64:	str	r1, [sp, #8]
    5e68:	bl	0 <flatcc_builder_end_struct>
    5e6c:	ldr	r3, [sp, #168]	; 0xa8
    5e70:	ldr	r1, [sp, #8]
    5e74:	cmp	r0, #0
    5e78:	str	r0, [r3]
    5e7c:	beq	5a4c <Fantasy_Character_parse_json_union+0x3d4>
    5e80:	b	56dc <Fantasy_Character_parse_json_union+0x64>
    5e84:	mov	r1, r0
    5e88:	b	5e58 <Fantasy_Character_parse_json_union+0x7e0>
    5e8c:	mov	r3, #3
    5e90:	mov	r2, r4
    5e94:	mov	r1, r6
    5e98:	mov	r0, r5
    5e9c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    5ea0:	cmp	r6, r0
    5ea4:	mov	r7, r0
    5ea8:	beq	5ce8 <Fantasy_Character_parse_json_union+0x670>
    5eac:	cmp	r4, r0
    5eb0:	str	sl, [sp, #112]	; 0x70
    5eb4:	str	r8, [sp, #120]	; 0x78
    5eb8:	str	r9, [sp, #124]	; 0x7c
    5ebc:	str	sl, [sp, #116]	; 0x74
    5ec0:	beq	6018 <Fantasy_Character_parse_json_union+0x9a0>
    5ec4:	add	r3, sp, #120	; 0x78
    5ec8:	str	r3, [sp]
    5ecc:	mov	r1, r0
    5ed0:	add	r3, sp, #116	; 0x74
    5ed4:	mov	r2, r4
    5ed8:	mov	r0, r5
    5edc:	bl	0 <flatcc_json_parser_integer>
    5ee0:	cmp	r7, r0
    5ee4:	mov	r6, r0
    5ee8:	beq	6014 <Fantasy_Character_parse_json_union+0x99c>
    5eec:	ldr	r1, [sp, #116]	; 0x74
    5ef0:	ldrd	r2, [sp, #120]	; 0x78
    5ef4:	cmp	r1, sl
    5ef8:	beq	5f58 <Fantasy_Character_parse_json_union+0x8e0>
    5efc:	cmp	r3, #0
    5f00:	cmpeq	r2, #-2147483648	; 0x80000000
    5f04:	rsbls	r2, r2, #0
    5f08:	strls	r2, [sp, #112]	; 0x70
    5f0c:	bhi	5fd4 <Fantasy_Character_parse_json_union+0x95c>
    5f10:	cmp	r2, #0
    5f14:	bne	5f24 <Fantasy_Character_parse_json_union+0x8ac>
    5f18:	ldr	r3, [r5, #8]
    5f1c:	tst	r3, #2
    5f20:	beq	5cfc <Fantasy_Character_parse_json_union+0x684>
    5f24:	mov	r3, #4
    5f28:	mov	r2, r3
    5f2c:	mov	r1, #0
    5f30:	ldr	r0, [r5]
    5f34:	bl	0 <flatcc_builder_table_add>
    5f38:	cmp	r0, #0
    5f3c:	beq	5a48 <Fantasy_Character_parse_json_union+0x3d0>
    5f40:	ldr	r3, [sp, #112]	; 0x70
    5f44:	str	r3, [r0]
    5f48:	b	5cfc <Fantasy_Character_parse_json_union+0x684>
    5f4c:	bl	0 <flatcc_json_parser_generic_json>
    5f50:	mov	r1, r0
    5f54:	b	56dc <Fantasy_Character_parse_json_union+0x64>
    5f58:	mov	r1, #0
    5f5c:	cmp	r3, r1
    5f60:	mvn	r0, #-2147483648	; 0x80000000
    5f64:	cmpeq	r2, r0
    5f68:	strls	r2, [sp, #112]	; 0x70
    5f6c:	bls	5f10 <Fantasy_Character_parse_json_union+0x898>
    5f70:	mov	r1, r6
    5f74:	mov	r3, #7
    5f78:	mov	r2, r4
    5f7c:	mov	r0, r5
    5f80:	bl	0 <flatcc_json_parser_set_error>
    5f84:	mov	r6, r0
    5f88:	b	5fec <Fantasy_Character_parse_json_union+0x974>
    5f8c:	mov	r3, #8
    5f90:	mov	r2, r4
    5f94:	mov	r0, r5
    5f98:	bl	0 <flatcc_json_parser_set_error>
    5f9c:	mov	r1, r0
    5fa0:	ldr	r3, [sp, #40]	; 0x28
    5fa4:	cmp	r3, r1
    5fa8:	beq	5e14 <Fantasy_Character_parse_json_union+0x79c>
    5fac:	ldrh	r2, [sp, #108]	; 0x6c
    5fb0:	b	5af0 <Fantasy_Character_parse_json_union+0x478>
    5fb4:	ldr	r0, [r5]
    5fb8:	bl	0 <flatcc_builder_end_table>
    5fbc:	ldr	r3, [sp, #168]	; 0xa8
    5fc0:	cmp	r0, #0
    5fc4:	str	r0, [r3]
    5fc8:	movne	r1, r6
    5fcc:	beq	5a48 <Fantasy_Character_parse_json_union+0x3d0>
    5fd0:	b	5750 <Fantasy_Character_parse_json_union+0xd8>
    5fd4:	mov	r1, r0
    5fd8:	mov	r3, #8
    5fdc:	mov	r2, r4
    5fe0:	mov	r0, r5
    5fe4:	bl	0 <flatcc_json_parser_set_error>
    5fe8:	mov	r6, r0
    5fec:	cmp	r7, r6
    5ff0:	beq	6018 <Fantasy_Character_parse_json_union+0x9a0>
    5ff4:	ldr	r2, [sp, #112]	; 0x70
    5ff8:	b	5f10 <Fantasy_Character_parse_json_union+0x898>
    5ffc:	mov	r3, #7
    6000:	mov	r2, r4
    6004:	mov	r0, r5
    6008:	bl	0 <flatcc_json_parser_set_error>
    600c:	mov	r1, r0
    6010:	b	5fa0 <Fantasy_Character_parse_json_union+0x928>
    6014:	mov	r7, r0
    6018:	add	r3, sp, #112	; 0x70
    601c:	str	r3, [sp]
    6020:	mov	r2, r4
    6024:	ldr	r3, [pc, #56]	; 6064 <Fantasy_Character_parse_json_union+0x9ec>
    6028:	mov	r1, r7
    602c:	mov	r0, r5
    6030:	bl	34a8 <flatcc_json_parser_symbolic_int32>
    6034:	cmp	r4, r0
    6038:	cmpne	r0, r7
    603c:	mov	r6, r0
    6040:	bne	5ff4 <Fantasy_Character_parse_json_union+0x97c>
    6044:	b	5a48 <Fantasy_Character_parse_json_union+0x3d0>
    6048:	.word	0x645f6174
    604c:	.word	0x73776f72
    6050:	.word	0x5f64616d
    6054:	.word	0x7461636b
    6058:	.word	0x00000000
    605c:	.word	0x61676500
    6060:	.word	0x00000068
    6064:	.word	0x0000005c

00006068 <MyGame_Example2_Monster_parse_json_table>:
    6068:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    606c:	mov	r7, r3
    6070:	mov	r3, #0
    6074:	mov	r5, r0
    6078:	mov	r6, r1
    607c:	str	r3, [r7]
    6080:	mov	r1, r3
    6084:	ldr	r0, [r0]
    6088:	mov	r4, r2
    608c:	bl	0 <flatcc_builder_start_table>
    6090:	cmp	r0, #0
    6094:	bne	60d0 <MyGame_Example2_Monster_parse_json_table+0x68>
    6098:	cmp	r6, r4
    609c:	beq	60ac <MyGame_Example2_Monster_parse_json_table+0x44>
    60a0:	ldrb	r3, [r6]
    60a4:	cmp	r3, #123	; 0x7b
    60a8:	beq	6104 <MyGame_Example2_Monster_parse_json_table+0x9c>
    60ac:	mov	r1, r6
    60b0:	mov	r3, #21
    60b4:	mov	r2, r4
    60b8:	mov	r0, r5
    60bc:	bl	0 <flatcc_json_parser_set_error>
    60c0:	mov	r6, r0
    60c4:	ldr	r3, [r5, #24]
    60c8:	cmp	r3, #0
    60cc:	beq	60e8 <MyGame_Example2_Monster_parse_json_table+0x80>
    60d0:	mov	r2, r4
    60d4:	mov	r1, r6
    60d8:	mov	r0, r5
    60dc:	mov	r3, #33	; 0x21
    60e0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    60e4:	b	0 <flatcc_json_parser_set_error>
    60e8:	ldr	r0, [r5]
    60ec:	bl	0 <flatcc_builder_end_table>
    60f0:	cmp	r0, #0
    60f4:	str	r0, [r7]
    60f8:	beq	60d0 <MyGame_Example2_Monster_parse_json_table+0x68>
    60fc:	mov	r0, r6
    6100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6104:	add	r1, r6, #1
    6108:	sub	r3, r4, r1
    610c:	cmp	r3, #1
    6110:	ble	6124 <MyGame_Example2_Monster_parse_json_table+0xbc>
    6114:	ldrb	r3, [r6, #1]
    6118:	cmp	r3, #32
    611c:	bhi	6134 <MyGame_Example2_Monster_parse_json_table+0xcc>
    6120:	beq	62e0 <MyGame_Example2_Monster_parse_json_table+0x278>
    6124:	mov	r2, r4
    6128:	mov	r0, r5
    612c:	bl	0 <flatcc_json_parser_space_ext>
    6130:	mov	r1, r0
    6134:	cmp	r4, r1
    6138:	beq	6148 <MyGame_Example2_Monster_parse_json_table+0xe0>
    613c:	ldrb	r3, [r1]
    6140:	cmp	r3, #125	; 0x7d
    6144:	beq	6288 <MyGame_Example2_Monster_parse_json_table+0x220>
    6148:	mov	r6, #1
    614c:	mov	r9, #5
    6150:	mov	r8, #0
    6154:	cmp	r4, r1
    6158:	beq	617c <MyGame_Example2_Monster_parse_json_table+0x114>
    615c:	ldrb	r3, [r1]
    6160:	cmp	r3, #34	; 0x22
    6164:	addeq	r1, r1, #1
    6168:	streq	r8, [r5, #12]
    616c:	beq	617c <MyGame_Example2_Monster_parse_json_table+0x114>
    6170:	cmp	r3, #46	; 0x2e
    6174:	strne	r6, [r5, #12]
    6178:	beq	62a0 <MyGame_Example2_Monster_parse_json_table+0x238>
    617c:	mov	r2, r4
    6180:	mov	r0, r5
    6184:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6188:	sub	r3, r4, r0
    618c:	cmp	r3, #1
    6190:	ble	61a4 <MyGame_Example2_Monster_parse_json_table+0x13c>
    6194:	ldrb	r3, [r0]
    6198:	cmp	r3, #32
    619c:	bhi	61b4 <MyGame_Example2_Monster_parse_json_table+0x14c>
    61a0:	beq	6224 <MyGame_Example2_Monster_parse_json_table+0x1bc>
    61a4:	mov	r1, r0
    61a8:	mov	r2, r4
    61ac:	mov	r0, r5
    61b0:	bl	0 <flatcc_json_parser_space_ext>
    61b4:	cmp	r4, r0
    61b8:	beq	623c <MyGame_Example2_Monster_parse_json_table+0x1d4>
    61bc:	ldrb	r3, [r0]
    61c0:	cmp	r3, #44	; 0x2c
    61c4:	beq	6244 <MyGame_Example2_Monster_parse_json_table+0x1dc>
    61c8:	cmp	r3, #125	; 0x7d
    61cc:	beq	61ec <MyGame_Example2_Monster_parse_json_table+0x184>
    61d0:	mov	r1, r0
    61d4:	mov	r3, #10
    61d8:	mov	r2, r4
    61dc:	mov	r0, r5
    61e0:	bl	0 <flatcc_json_parser_set_error>
    61e4:	mov	r6, r0
    61e8:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    61ec:	add	r6, r0, #1
    61f0:	sub	r3, r4, r6
    61f4:	cmp	r3, #1
    61f8:	ble	620c <MyGame_Example2_Monster_parse_json_table+0x1a4>
    61fc:	ldrb	r3, [r0, #1]
    6200:	cmp	r3, #32
    6204:	bhi	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    6208:	beq	62b8 <MyGame_Example2_Monster_parse_json_table+0x250>
    620c:	mov	r1, r6
    6210:	mov	r2, r4
    6214:	mov	r0, r5
    6218:	bl	0 <flatcc_json_parser_space_ext>
    621c:	mov	r6, r0
    6220:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    6224:	ldrb	r3, [r0, #1]
    6228:	cmp	r3, #32
    622c:	addhi	r0, r0, #1
    6230:	bls	61a4 <MyGame_Example2_Monster_parse_json_table+0x13c>
    6234:	cmp	r4, r0
    6238:	bne	61bc <MyGame_Example2_Monster_parse_json_table+0x154>
    623c:	mov	r6, r4
    6240:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    6244:	add	r1, r0, #1
    6248:	sub	r3, r4, r1
    624c:	cmp	r3, #1
    6250:	ble	6264 <MyGame_Example2_Monster_parse_json_table+0x1fc>
    6254:	ldrb	r3, [r0, #1]
    6258:	cmp	r3, #32
    625c:	bhi	6274 <MyGame_Example2_Monster_parse_json_table+0x20c>
    6260:	beq	62cc <MyGame_Example2_Monster_parse_json_table+0x264>
    6264:	mov	r2, r4
    6268:	mov	r0, r5
    626c:	bl	0 <flatcc_json_parser_space_ext>
    6270:	mov	r1, r0
    6274:	cmp	r4, r1
    6278:	beq	62f4 <MyGame_Example2_Monster_parse_json_table+0x28c>
    627c:	ldrb	r3, [r1]
    6280:	cmp	r3, #125	; 0x7d
    6284:	bne	6154 <MyGame_Example2_Monster_parse_json_table+0xec>
    6288:	add	r1, r1, #1
    628c:	mov	r2, r4
    6290:	mov	r0, r5
    6294:	bl	1c50 <flatcc_json_parser_space>
    6298:	mov	r6, r0
    629c:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    62a0:	mov	r3, r9
    62a4:	mov	r2, r4
    62a8:	mov	r0, r5
    62ac:	bl	0 <flatcc_json_parser_set_error>
    62b0:	mov	r1, r0
    62b4:	b	617c <MyGame_Example2_Monster_parse_json_table+0x114>
    62b8:	ldrb	r3, [r0, #2]
    62bc:	cmp	r3, #32
    62c0:	addhi	r6, r0, #2
    62c4:	bls	620c <MyGame_Example2_Monster_parse_json_table+0x1a4>
    62c8:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>
    62cc:	ldrb	r3, [r0, #2]
    62d0:	cmp	r3, #32
    62d4:	addhi	r1, r0, #2
    62d8:	bls	6264 <MyGame_Example2_Monster_parse_json_table+0x1fc>
    62dc:	b	6274 <MyGame_Example2_Monster_parse_json_table+0x20c>
    62e0:	ldrb	r3, [r6, #2]
    62e4:	cmp	r3, #32
    62e8:	addhi	r1, r6, #2
    62ec:	bls	6124 <MyGame_Example2_Monster_parse_json_table+0xbc>
    62f0:	b	6134 <MyGame_Example2_Monster_parse_json_table+0xcc>
    62f4:	mov	r3, #10
    62f8:	mov	r2, r4
    62fc:	mov	r1, r4
    6300:	mov	r0, r5
    6304:	bl	0 <flatcc_json_parser_set_error>
    6308:	mov	r6, r0
    630c:	b	60c4 <MyGame_Example2_Monster_parse_json_table+0x5c>

00006310 <MyGame_Example_Test_parse_json_struct_inline>:
    6310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6314:	sub	sp, sp, #92	; 0x5c
    6318:	cmp	r1, r2
    631c:	mov	r5, r2
    6320:	mov	r6, r0
    6324:	str	r3, [sp, #64]	; 0x40
    6328:	beq	6338 <MyGame_Example_Test_parse_json_struct_inline+0x28>
    632c:	ldrb	r3, [r1]
    6330:	cmp	r3, #123	; 0x7b
    6334:	beq	6358 <MyGame_Example_Test_parse_json_struct_inline+0x48>
    6338:	mov	r2, r5
    633c:	mov	r0, r6
    6340:	mov	r3, #21
    6344:	bl	0 <flatcc_json_parser_set_error>
    6348:	mov	r5, r0
    634c:	mov	r0, r5
    6350:	add	sp, sp, #92	; 0x5c
    6354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6358:	add	r4, r1, #1
    635c:	sub	r3, r2, r4
    6360:	cmp	r3, #1
    6364:	ble	6378 <MyGame_Example_Test_parse_json_struct_inline+0x68>
    6368:	ldrb	r3, [r1, #1]
    636c:	cmp	r3, #32
    6370:	bhi	638c <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    6374:	beq	6b34 <MyGame_Example_Test_parse_json_struct_inline+0x824>
    6378:	mov	r1, r4
    637c:	mov	r2, r5
    6380:	mov	r0, r6
    6384:	bl	0 <flatcc_json_parser_space_ext>
    6388:	mov	r4, r0
    638c:	cmp	r5, r4
    6390:	beq	63a0 <MyGame_Example_Test_parse_json_struct_inline+0x90>
    6394:	ldrb	r3, [r4]
    6398:	cmp	r3, #125	; 0x7d
    639c:	beq	6b48 <MyGame_Example_Test_parse_json_struct_inline+0x838>
    63a0:	mov	r7, #0
    63a4:	strd	r8, [sp, #32]
    63a8:	cmp	r5, r4
    63ac:	beq	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    63b0:	ldrb	r3, [r4]
    63b4:	cmp	r3, #34	; 0x22
    63b8:	beq	681c <MyGame_Example_Test_parse_json_struct_inline+0x50c>
    63bc:	cmp	r3, #46	; 0x2e
    63c0:	movne	r3, #1
    63c4:	subne	ip, r5, r4
    63c8:	strne	r3, [r6, #12]
    63cc:	beq	6958 <MyGame_Example_Test_parse_json_struct_inline+0x648>
    63d0:	cmp	ip, #8
    63d4:	bls	6670 <MyGame_Example_Test_parse_json_struct_inline+0x360>
    63d8:	mov	r9, #0
    63dc:	ldrb	r2, [r4, #6]
    63e0:	lsr	r1, r2, #24
    63e4:	lsl	r3, r2, #8
    63e8:	str	r1, [sp, #60]	; 0x3c
    63ec:	str	r3, [sp, #56]	; 0x38
    63f0:	ldrd	r2, [sp, #56]	; 0x38
    63f4:	orr	r3, r3, r9
    63f8:	mov	r9, r3
    63fc:	ldrb	r2, [r4, #5]
    6400:	lsr	r1, r2, #16
    6404:	lsl	r3, r2, #16
    6408:	str	r1, [sp, #52]	; 0x34
    640c:	str	r3, [sp, #48]	; 0x30
    6410:	ldrd	r2, [sp, #48]	; 0x30
    6414:	orr	r3, r3, r9
    6418:	mov	r9, r3
    641c:	ldrb	r2, [r4, #4]
    6420:	lsr	r1, r2, #8
    6424:	lsl	r3, r2, #24
    6428:	str	r1, [sp, #28]
    642c:	str	r3, [sp, #24]
    6430:	ldrd	r2, [sp, #24]
    6434:	orr	r3, r3, r9
    6438:	mov	r9, r3
    643c:	ldrb	r3, [r4, #3]
    6440:	str	r3, [sp, #44]	; 0x2c
    6444:	mov	r3, #0
    6448:	str	r3, [sp, #40]	; 0x28
    644c:	ldrd	r2, [sp, #40]	; 0x28
    6450:	orr	r3, r3, r9
    6454:	mov	r9, r3
    6458:	ldrb	r2, [r4, #2]
    645c:	lsl	r3, r2, #8
    6460:	str	r3, [sp, #20]
    6464:	mov	r3, #0
    6468:	str	r3, [sp, #16]
    646c:	ldrd	r2, [sp, #16]
    6470:	orr	r3, r3, r9
    6474:	mov	r9, r3
    6478:	ldrb	r2, [r4]
    647c:	ldrb	r0, [r4, #1]
    6480:	mov	sl, #0
    6484:	str	sl, [sp, #8]
    6488:	lsl	r3, r2, #24
    648c:	str	r3, [sp, #12]
    6490:	ldrd	r2, [sp, #8]
    6494:	lsl	fp, r0, #16
    6498:	orr	r9, r9, fp
    649c:	orr	r3, r3, r9
    64a0:	and	r3, r3, #-16777216	; 0xff000000
    64a4:	mov	r2, #0
    64a8:	cmp	r3, #1644167168	; 0x62000000
    64ac:	cmpeq	r2, #0
    64b0:	strd	r2, [sp, #32]
    64b4:	beq	66e8 <MyGame_Example_Test_parse_json_struct_inline+0x3d8>
    64b8:	ldrd	r2, [sp, #32]
    64bc:	cmp	r3, #1627389952	; 0x61000000
    64c0:	cmpeq	r2, #0
    64c4:	bne	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    64c8:	cmp	ip, #1
    64cc:	ble	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    64d0:	ldr	r3, [r6, #12]
    64d4:	cmp	r3, #0
    64d8:	ldrb	r3, [r4, #1]
    64dc:	beq	68bc <MyGame_Example_Test_parse_json_struct_inline+0x5ac>
    64e0:	cmp	r3, #58	; 0x3a
    64e4:	cmpne	r3, #32
    64e8:	movls	r3, #0
    64ec:	movhi	r3, #1
    64f0:	strls	r3, [r6, #12]
    64f4:	addls	r1, r4, #1
    64f8:	bhi	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    64fc:	sub	r3, r5, r1
    6500:	cmp	r3, #1
    6504:	ble	6518 <MyGame_Example_Test_parse_json_struct_inline+0x208>
    6508:	ldrb	r3, [r1]
    650c:	cmp	r3, #32
    6510:	bhi	6528 <MyGame_Example_Test_parse_json_struct_inline+0x218>
    6514:	beq	6a64 <MyGame_Example_Test_parse_json_struct_inline+0x754>
    6518:	mov	r2, r5
    651c:	mov	r0, r6
    6520:	bl	0 <flatcc_json_parser_space_ext>
    6524:	mov	r1, r0
    6528:	cmp	r5, r1
    652c:	beq	653c <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    6530:	ldrb	r3, [r1]
    6534:	cmp	r3, #58	; 0x3a
    6538:	beq	6a8c <MyGame_Example_Test_parse_json_struct_inline+0x77c>
    653c:	mov	r3, #4
    6540:	mov	r2, r5
    6544:	mov	r0, r6
    6548:	bl	0 <flatcc_json_parser_set_error>
    654c:	str	r0, [sp, #68]	; 0x44
    6550:	ldr	r3, [sp, #68]	; 0x44
    6554:	cmp	r3, r4
    6558:	beq	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    655c:	mov	r4, r3
    6560:	cmp	r5, r3
    6564:	mov	r3, #0
    6568:	strh	r7, [sp, #74]	; 0x4a
    656c:	str	r3, [sp, #80]	; 0x50
    6570:	str	r3, [sp, #84]	; 0x54
    6574:	str	r7, [sp, #76]	; 0x4c
    6578:	beq	69bc <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    657c:	add	r3, sp, #80	; 0x50
    6580:	str	r3, [sp]
    6584:	mov	r2, r5
    6588:	add	r3, sp, #76	; 0x4c
    658c:	mov	r1, r4
    6590:	mov	r0, r6
    6594:	bl	0 <flatcc_json_parser_integer>
    6598:	cmp	r4, r0
    659c:	beq	69bc <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    65a0:	ldr	r1, [sp, #76]	; 0x4c
    65a4:	ldrd	r2, [sp, #80]	; 0x50
    65a8:	cmp	r1, #0
    65ac:	beq	68cc <MyGame_Example_Test_parse_json_struct_inline+0x5bc>
    65b0:	cmp	r3, #0
    65b4:	cmpeq	r2, #32768	; 0x8000
    65b8:	rsbls	r2, r2, #0
    65bc:	sxthls	r2, r2
    65c0:	bhi	698c <MyGame_Example_Test_parse_json_struct_inline+0x67c>
    65c4:	ldr	r3, [sp, #64]	; 0x40
    65c8:	strh	r2, [r3]
    65cc:	sub	r3, r5, r0
    65d0:	cmp	r3, #1
    65d4:	ble	65e8 <MyGame_Example_Test_parse_json_struct_inline+0x2d8>
    65d8:	ldrb	r3, [r0]
    65dc:	cmp	r3, #32
    65e0:	bhi	65f8 <MyGame_Example_Test_parse_json_struct_inline+0x2e8>
    65e4:	beq	682c <MyGame_Example_Test_parse_json_struct_inline+0x51c>
    65e8:	mov	r1, r0
    65ec:	mov	r2, r5
    65f0:	mov	r0, r6
    65f4:	bl	0 <flatcc_json_parser_space_ext>
    65f8:	cmp	r5, r0
    65fc:	beq	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    6600:	ldrb	r3, [r0]
    6604:	cmp	r3, #44	; 0x2c
    6608:	beq	6840 <MyGame_Example_Test_parse_json_struct_inline+0x530>
    660c:	cmp	r3, #125	; 0x7d
    6610:	beq	67e8 <MyGame_Example_Test_parse_json_struct_inline+0x4d8>
    6614:	mov	r2, r5
    6618:	mov	r1, r0
    661c:	mov	r3, #10
    6620:	mov	r0, r6
    6624:	bl	0 <flatcc_json_parser_set_error>
    6628:	mov	r5, r0
    662c:	mov	r0, r5
    6630:	add	sp, sp, #92	; 0x5c
    6634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6638:	ldrb	r2, [r4]
    663c:	lsl	r3, r2, #24
    6640:	str	r3, [sp, #36]	; 0x24
    6644:	mov	r3, #0
    6648:	str	r3, [sp, #32]
    664c:	ldrd	r2, [sp, #32]
    6650:	cmp	r3, #1644167168	; 0x62000000
    6654:	cmpeq	r2, #0
    6658:	bne	64b8 <MyGame_Example_Test_parse_json_struct_inline+0x1a8>
    665c:	mov	r1, r4
    6660:	mov	r2, r5
    6664:	mov	r0, r6
    6668:	bl	0 <flatcc_json_parser_unmatched_symbol>
    666c:	b	65cc <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    6670:	sub	r3, ip, #1
    6674:	cmp	r3, #7
    6678:	ldrls	pc, [pc, r3, lsl #2]
    667c:	b	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    6680:	.word	0x00006638
    6684:	.word	0x000066dc
    6688:	.word	0x000066d0
    668c:	.word	0x000066c4
    6690:	.word	0x000066b8
    6694:	.word	0x000066ac
    6698:	.word	0x000066a0
    669c:	.word	0x000063d8
    66a0:	mov	r8, #0
    66a4:	mov	r9, r8
    66a8:	b	63dc <MyGame_Example_Test_parse_json_struct_inline+0xcc>
    66ac:	mov	r8, #0
    66b0:	mov	r9, r8
    66b4:	b	63fc <MyGame_Example_Test_parse_json_struct_inline+0xec>
    66b8:	mov	r8, #0
    66bc:	mov	r9, r8
    66c0:	b	641c <MyGame_Example_Test_parse_json_struct_inline+0x10c>
    66c4:	mov	r8, #0
    66c8:	mov	r9, r8
    66cc:	b	643c <MyGame_Example_Test_parse_json_struct_inline+0x12c>
    66d0:	mov	r8, #0
    66d4:	mov	r9, r8
    66d8:	b	6458 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    66dc:	mov	r8, #0
    66e0:	mov	r9, r8
    66e4:	b	6478 <MyGame_Example_Test_parse_json_struct_inline+0x168>
    66e8:	cmp	ip, #1
    66ec:	ble	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    66f0:	ldr	r3, [r6, #12]
    66f4:	cmp	r3, sl
    66f8:	ldrb	r3, [r4, #1]
    66fc:	beq	6914 <MyGame_Example_Test_parse_json_struct_inline+0x604>
    6700:	cmp	r3, #58	; 0x3a
    6704:	cmpne	r3, #32
    6708:	movls	r3, #0
    670c:	movhi	r3, #1
    6710:	strls	r3, [r6, #12]
    6714:	addls	r1, r4, #1
    6718:	bhi	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    671c:	sub	r3, r5, r1
    6720:	cmp	r3, #1
    6724:	ble	6738 <MyGame_Example_Test_parse_json_struct_inline+0x428>
    6728:	ldrb	r3, [r1]
    672c:	cmp	r3, #32
    6730:	bhi	6748 <MyGame_Example_Test_parse_json_struct_inline+0x438>
    6734:	beq	6a78 <MyGame_Example_Test_parse_json_struct_inline+0x768>
    6738:	mov	r2, r5
    673c:	mov	r0, r6
    6740:	bl	0 <flatcc_json_parser_space_ext>
    6744:	mov	r1, r0
    6748:	cmp	r5, r1
    674c:	beq	675c <MyGame_Example_Test_parse_json_struct_inline+0x44c>
    6750:	ldrb	r3, [r1]
    6754:	cmp	r3, #58	; 0x3a
    6758:	beq	6ac8 <MyGame_Example_Test_parse_json_struct_inline+0x7b8>
    675c:	mov	r3, #4
    6760:	mov	r2, r5
    6764:	mov	r0, r6
    6768:	bl	0 <flatcc_json_parser_set_error>
    676c:	mov	r8, r0
    6770:	cmp	r8, r4
    6774:	beq	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    6778:	mov	r3, #0
    677c:	cmp	r5, r8
    6780:	strb	r7, [sp, #74]	; 0x4a
    6784:	str	r3, [sp, #80]	; 0x50
    6788:	str	r3, [sp, #84]	; 0x54
    678c:	str	r7, [sp, #76]	; 0x4c
    6790:	beq	6a38 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    6794:	add	r3, sp, #80	; 0x50
    6798:	str	r3, [sp]
    679c:	mov	r2, r5
    67a0:	add	r3, sp, #76	; 0x4c
    67a4:	mov	r1, r8
    67a8:	mov	r0, r6
    67ac:	bl	0 <flatcc_json_parser_integer>
    67b0:	cmp	r8, r0
    67b4:	beq	6a38 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    67b8:	ldr	r1, [sp, #76]	; 0x4c
    67bc:	ldrd	r2, [sp, #80]	; 0x50
    67c0:	cmp	r1, #0
    67c4:	beq	6924 <MyGame_Example_Test_parse_json_struct_inline+0x614>
    67c8:	cmp	r3, #0
    67cc:	cmpeq	r2, #128	; 0x80
    67d0:	rsbls	r2, r2, #0
    67d4:	sxtbls	r2, r2
    67d8:	bhi	69a4 <MyGame_Example_Test_parse_json_struct_inline+0x694>
    67dc:	ldr	r3, [sp, #64]	; 0x40
    67e0:	strb	r2, [r3, #2]
    67e4:	b	65cc <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    67e8:	add	r1, r0, #1
    67ec:	sub	r3, r5, r1
    67f0:	cmp	r3, #1
    67f4:	ble	6808 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    67f8:	ldrb	r3, [r0, #1]
    67fc:	cmp	r3, #32
    6800:	bhi	690c <MyGame_Example_Test_parse_json_struct_inline+0x5fc>
    6804:	beq	6978 <MyGame_Example_Test_parse_json_struct_inline+0x668>
    6808:	mov	r2, r5
    680c:	mov	r0, r6
    6810:	bl	0 <flatcc_json_parser_space_ext>
    6814:	mov	r5, r0
    6818:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    681c:	add	r4, r4, #1
    6820:	str	r7, [r6, #12]
    6824:	sub	ip, r5, r4
    6828:	b	63d0 <MyGame_Example_Test_parse_json_struct_inline+0xc0>
    682c:	ldrb	r3, [r0, #1]
    6830:	cmp	r3, #32
    6834:	addhi	r0, r0, #1
    6838:	bls	65e8 <MyGame_Example_Test_parse_json_struct_inline+0x2d8>
    683c:	b	65f8 <MyGame_Example_Test_parse_json_struct_inline+0x2e8>
    6840:	add	r4, r0, #1
    6844:	sub	r3, r5, r4
    6848:	cmp	r3, #1
    684c:	ble	6860 <MyGame_Example_Test_parse_json_struct_inline+0x550>
    6850:	ldrb	r3, [r0, #1]
    6854:	cmp	r3, #32
    6858:	bhi	6874 <MyGame_Example_Test_parse_json_struct_inline+0x564>
    685c:	beq	6a04 <MyGame_Example_Test_parse_json_struct_inline+0x6f4>
    6860:	mov	r1, r4
    6864:	mov	r2, r5
    6868:	mov	r0, r6
    686c:	bl	0 <flatcc_json_parser_space_ext>
    6870:	mov	r4, r0
    6874:	cmp	r5, r4
    6878:	beq	6a1c <MyGame_Example_Test_parse_json_struct_inline+0x70c>
    687c:	ldrb	r3, [r4]
    6880:	cmp	r3, #125	; 0x7d
    6884:	bne	63a8 <MyGame_Example_Test_parse_json_struct_inline+0x98>
    6888:	add	r1, r4, #1
    688c:	sub	r3, r5, r1
    6890:	cmp	r3, #1
    6894:	ble	6808 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    6898:	ldrb	r3, [r4, #1]
    689c:	cmp	r3, #32
    68a0:	bhi	690c <MyGame_Example_Test_parse_json_struct_inline+0x5fc>
    68a4:	bne	6808 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    68a8:	ldrb	r3, [r4, #2]
    68ac:	cmp	r3, #32
    68b0:	addhi	r5, r4, #2
    68b4:	bls	6808 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    68b8:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    68bc:	cmp	r3, #34	; 0x22
    68c0:	bne	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    68c4:	add	r1, r4, #2
    68c8:	b	64fc <MyGame_Example_Test_parse_json_struct_inline+0x1ec>
    68cc:	ldr	r8, [pc, #652]	; 6b60 <MyGame_Example_Test_parse_json_struct_inline+0x850>
    68d0:	mov	r9, #0
    68d4:	cmp	r3, r9
    68d8:	cmpeq	r2, r8
    68dc:	sxthls	r2, r2
    68e0:	bls	65c4 <MyGame_Example_Test_parse_json_struct_inline+0x2b4>
    68e4:	mov	r1, r0
    68e8:	mov	r3, #7
    68ec:	mov	r2, r5
    68f0:	mov	r0, r6
    68f4:	bl	0 <flatcc_json_parser_set_error>
    68f8:	ldr	r3, [sp, #68]	; 0x44
    68fc:	cmp	r3, r0
    6900:	beq	69bc <MyGame_Example_Test_parse_json_struct_inline+0x6ac>
    6904:	ldrsh	r2, [sp, #74]	; 0x4a
    6908:	b	65c4 <MyGame_Example_Test_parse_json_struct_inline+0x2b4>
    690c:	mov	r5, r1
    6910:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    6914:	cmp	r3, #34	; 0x22
    6918:	bne	665c <MyGame_Example_Test_parse_json_struct_inline+0x34c>
    691c:	add	r1, r4, #2
    6920:	b	671c <MyGame_Example_Test_parse_json_struct_inline+0x40c>
    6924:	cmp	r3, #0
    6928:	cmpeq	r2, #127	; 0x7f
    692c:	sxtbls	r2, r2
    6930:	bls	67dc <MyGame_Example_Test_parse_json_struct_inline+0x4cc>
    6934:	mov	r1, r0
    6938:	mov	r3, #7
    693c:	mov	r2, r5
    6940:	mov	r0, r6
    6944:	bl	0 <flatcc_json_parser_set_error>
    6948:	cmp	r8, r0
    694c:	beq	6a38 <MyGame_Example_Test_parse_json_struct_inline+0x728>
    6950:	ldrsb	r2, [sp, #74]	; 0x4a
    6954:	b	67dc <MyGame_Example_Test_parse_json_struct_inline+0x4cc>
    6958:	mov	r1, r4
    695c:	mov	r3, #5
    6960:	mov	r2, r5
    6964:	mov	r0, r6
    6968:	bl	0 <flatcc_json_parser_set_error>
    696c:	mov	r4, r0
    6970:	sub	ip, r5, r0
    6974:	b	63d0 <MyGame_Example_Test_parse_json_struct_inline+0xc0>
    6978:	ldrb	r3, [r0, #2]
    697c:	cmp	r3, #32
    6980:	addhi	r5, r0, #2
    6984:	bls	6808 <MyGame_Example_Test_parse_json_struct_inline+0x4f8>
    6988:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    698c:	mov	r1, r0
    6990:	mov	r3, #8
    6994:	mov	r2, r5
    6998:	mov	r0, r6
    699c:	bl	0 <flatcc_json_parser_set_error>
    69a0:	b	68f8 <MyGame_Example_Test_parse_json_struct_inline+0x5e8>
    69a4:	mov	r1, r0
    69a8:	mov	r3, #8
    69ac:	mov	r2, r5
    69b0:	mov	r0, r6
    69b4:	bl	0 <flatcc_json_parser_set_error>
    69b8:	b	6948 <MyGame_Example_Test_parse_json_struct_inline+0x638>
    69bc:	ldr	r4, [sp, #68]	; 0x44
    69c0:	add	r3, sp, #74	; 0x4a
    69c4:	str	r3, [sp]
    69c8:	mov	r2, r5
    69cc:	ldr	r3, [pc, #400]	; 6b64 <MyGame_Example_Test_parse_json_struct_inline+0x854>
    69d0:	mov	r1, r4
    69d4:	mov	r0, r6
    69d8:	bl	3910 <flatcc_json_parser_symbolic_int16>
    69dc:	cmp	r5, r0
    69e0:	cmpne	r0, r4
    69e4:	bne	6904 <MyGame_Example_Test_parse_json_struct_inline+0x5f4>
    69e8:	mov	r2, r5
    69ec:	mov	r1, r0
    69f0:	mov	r3, #33	; 0x21
    69f4:	mov	r0, r6
    69f8:	bl	0 <flatcc_json_parser_set_error>
    69fc:	mov	r5, r0
    6a00:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    6a04:	ldrb	r3, [r0, #2]
    6a08:	cmp	r3, #32
    6a0c:	addhi	r4, r0, #2
    6a10:	bls	6860 <MyGame_Example_Test_parse_json_struct_inline+0x550>
    6a14:	cmp	r5, r4
    6a18:	bne	687c <MyGame_Example_Test_parse_json_struct_inline+0x56c>
    6a1c:	mov	r2, r5
    6a20:	mov	r1, r5
    6a24:	mov	r0, r6
    6a28:	mov	r3, #10
    6a2c:	bl	0 <flatcc_json_parser_set_error>
    6a30:	mov	r5, r0
    6a34:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    6a38:	add	r3, sp, #74	; 0x4a
    6a3c:	str	r3, [sp]
    6a40:	mov	r2, r5
    6a44:	ldr	r3, [pc, #284]	; 6b68 <MyGame_Example_Test_parse_json_struct_inline+0x858>
    6a48:	mov	r1, r8
    6a4c:	mov	r0, r6
    6a50:	bl	36dc <flatcc_json_parser_symbolic_int8>
    6a54:	cmp	r5, r0
    6a58:	cmpne	r0, r8
    6a5c:	bne	6950 <MyGame_Example_Test_parse_json_struct_inline+0x640>
    6a60:	b	69e8 <MyGame_Example_Test_parse_json_struct_inline+0x6d8>
    6a64:	ldrb	r3, [r1, #1]
    6a68:	cmp	r3, #32
    6a6c:	addhi	r1, r1, #1
    6a70:	bls	6518 <MyGame_Example_Test_parse_json_struct_inline+0x208>
    6a74:	b	6528 <MyGame_Example_Test_parse_json_struct_inline+0x218>
    6a78:	ldrb	r3, [r1, #1]
    6a7c:	cmp	r3, #32
    6a80:	addhi	r1, r1, #1
    6a84:	bls	6738 <MyGame_Example_Test_parse_json_struct_inline+0x428>
    6a88:	b	6748 <MyGame_Example_Test_parse_json_struct_inline+0x438>
    6a8c:	add	r3, r1, #1
    6a90:	str	r3, [sp, #68]	; 0x44
    6a94:	sub	r3, r5, r3
    6a98:	cmp	r3, #1
    6a9c:	ble	6ab0 <MyGame_Example_Test_parse_json_struct_inline+0x7a0>
    6aa0:	ldrb	r3, [r1, #1]
    6aa4:	cmp	r3, #32
    6aa8:	bhi	6550 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    6aac:	beq	6b04 <MyGame_Example_Test_parse_json_struct_inline+0x7f4>
    6ab0:	ldr	r1, [sp, #68]	; 0x44
    6ab4:	mov	r2, r5
    6ab8:	mov	r0, r6
    6abc:	bl	0 <flatcc_json_parser_space_ext>
    6ac0:	str	r0, [sp, #68]	; 0x44
    6ac4:	b	6550 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    6ac8:	add	r3, r1, #1
    6acc:	mov	r8, r3
    6ad0:	sub	r3, r5, r3
    6ad4:	cmp	r3, #1
    6ad8:	ble	6aec <MyGame_Example_Test_parse_json_struct_inline+0x7dc>
    6adc:	ldrb	r3, [r1, #1]
    6ae0:	cmp	r3, #32
    6ae4:	bhi	6770 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    6ae8:	beq	6b1c <MyGame_Example_Test_parse_json_struct_inline+0x80c>
    6aec:	mov	r1, r8
    6af0:	mov	r2, r5
    6af4:	mov	r0, r6
    6af8:	bl	0 <flatcc_json_parser_space_ext>
    6afc:	mov	r8, r0
    6b00:	b	6770 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    6b04:	ldrb	r3, [r1, #2]
    6b08:	cmp	r3, #32
    6b0c:	addhi	r3, r1, #2
    6b10:	strhi	r3, [sp, #68]	; 0x44
    6b14:	bls	6ab0 <MyGame_Example_Test_parse_json_struct_inline+0x7a0>
    6b18:	b	6550 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    6b1c:	ldrb	r3, [r1, #2]
    6b20:	cmp	r3, #32
    6b24:	addhi	r3, r1, #2
    6b28:	movhi	r8, r3
    6b2c:	bls	6aec <MyGame_Example_Test_parse_json_struct_inline+0x7dc>
    6b30:	b	6770 <MyGame_Example_Test_parse_json_struct_inline+0x460>
    6b34:	ldrb	r3, [r1, #2]
    6b38:	cmp	r3, #32
    6b3c:	addhi	r4, r1, #2
    6b40:	bls	6378 <MyGame_Example_Test_parse_json_struct_inline+0x68>
    6b44:	b	638c <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    6b48:	mov	r2, r5
    6b4c:	add	r1, r4, #1
    6b50:	mov	r0, r6
    6b54:	bl	1c50 <flatcc_json_parser_space>
    6b58:	mov	r5, r0
    6b5c:	b	634c <MyGame_Example_Test_parse_json_struct_inline+0x3c>
    6b60:	.word	0x00007fff
    6b64:	.word	0x00000080
    6b68:	.word	0x00000074

00006b6c <MyGame_Example_Monster_parse_json_table>:
    6b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6b70:	vpush	{d8-d9}
    6b74:	mov	sl, r0
    6b78:	mov	r0, r3
    6b7c:	mov	fp, r1
    6b80:	sub	sp, sp, #124	; 0x7c
    6b84:	mov	r1, #36	; 0x24
    6b88:	str	r3, [sp, #68]	; 0x44
    6b8c:	mov	r3, #0
    6b90:	str	r3, [r0]
    6b94:	ldr	r0, [sl]
    6b98:	mov	r9, r2
    6b9c:	bl	0 <flatcc_builder_start_table>
    6ba0:	cmp	r0, #0
    6ba4:	bne	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6ba8:	add	r3, sp, #96	; 0x60
    6bac:	str	r3, [sp]
    6bb0:	mov	r2, r9
    6bb4:	mov	r3, #1
    6bb8:	mov	r1, fp
    6bbc:	mov	r0, sl
    6bc0:	bl	0 <flatcc_json_parser_prepare_unions>
    6bc4:	cmp	r9, r0
    6bc8:	beq	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6bcc:	mov	r1, fp
    6bd0:	add	r3, sp, #88	; 0x58
    6bd4:	mov	r2, r9
    6bd8:	mov	r0, sl
    6bdc:	bl	2a3c <flatcc_json_parser_object_start>
    6be0:	ldr	r3, [sp, #88]	; 0x58
    6be4:	cmp	r3, #0
    6be8:	mov	fp, r0
    6bec:	beq	6d04 <MyGame_Example_Monster_parse_json_table+0x198>
    6bf0:	mov	r3, r9
    6bf4:	mov	r9, sl
    6bf8:	mov	sl, r3
    6bfc:	cmp	sl, fp
    6c00:	beq	6c2c <MyGame_Example_Monster_parse_json_table+0xc0>
    6c04:	ldrb	r3, [fp]
    6c08:	cmp	r3, #34	; 0x22
    6c0c:	moveq	r3, #0
    6c10:	addeq	fp, fp, #1
    6c14:	streq	r3, [r9, #12]
    6c18:	beq	6c2c <MyGame_Example_Monster_parse_json_table+0xc0>
    6c1c:	cmp	r3, #46	; 0x2e
    6c20:	movne	r3, #1
    6c24:	strne	r3, [r9, #12]
    6c28:	beq	71c8 <MyGame_Example_Monster_parse_json_table+0x65c>
    6c2c:	mov	r1, sl
    6c30:	mov	r0, fp
    6c34:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6c38:	add	r3, pc, #872	; 0x368
    6c3c:	ldrd	r2, [r3]
    6c40:	cmp	r1, r3
    6c44:	cmpeq	r0, r2
    6c48:	mov	r4, r0
    6c4c:	mov	r5, r1
    6c50:	bhi	6d5c <MyGame_Example_Monster_parse_json_table+0x1f0>
    6c54:	add	r3, pc, #852	; 0x354
    6c58:	ldrd	r2, [r3]
    6c5c:	cmp	r1, r3
    6c60:	cmpeq	r0, r2
    6c64:	bhi	6dd8 <MyGame_Example_Monster_parse_json_table+0x26c>
    6c68:	add	r3, pc, #840	; 0x348
    6c6c:	ldrd	r2, [r3]
    6c70:	cmp	r1, r3
    6c74:	cmpeq	r0, r2
    6c78:	bhi	6e8c <MyGame_Example_Monster_parse_json_table+0x320>
    6c7c:	add	r3, pc, #828	; 0x33c
    6c80:	ldrd	r2, [r3]
    6c84:	and	r4, r0, #-16777216	; 0xff000000
    6c88:	cmp	r1, r3
    6c8c:	cmpeq	r4, r2
    6c90:	beq	778c <MyGame_Example_Monster_parse_json_table+0xc20>
    6c94:	add	r3, pc, #812	; 0x32c
    6c98:	ldrd	r2, [r3]
    6c9c:	cmp	r1, r3
    6ca0:	cmpeq	r4, r2
    6ca4:	beq	7334 <MyGame_Example_Monster_parse_json_table+0x7c8>
    6ca8:	mov	r1, fp
    6cac:	mov	r2, sl
    6cb0:	mov	r0, r9
    6cb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6cb8:	mov	fp, r0
    6cbc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6cc0:	mov	r1, fp
    6cc4:	mov	r2, sl
    6cc8:	mov	r0, r9
    6ccc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6cd0:	mov	fp, r0
    6cd4:	mov	r1, fp
    6cd8:	add	r3, sp, #88	; 0x58
    6cdc:	mov	r2, sl
    6ce0:	mov	r0, r9
    6ce4:	bl	4ba8 <flatcc_json_parser_object_end>
    6ce8:	ldr	r3, [sp, #88]	; 0x58
    6cec:	cmp	r3, #0
    6cf0:	mov	fp, r0
    6cf4:	bne	6bfc <MyGame_Example_Monster_parse_json_table+0x90>
    6cf8:	mov	r3, sl
    6cfc:	mov	sl, r9
    6d00:	mov	r9, r3
    6d04:	ldr	r3, [sl, #24]
    6d08:	cmp	r3, #0
    6d0c:	bne	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    6d10:	mov	r1, #3
    6d14:	ldr	r0, [sl]
    6d18:	bl	0 <flatcc_builder_check_required_field>
    6d1c:	mov	r1, fp
    6d20:	cmp	r0, #0
    6d24:	bne	9a7c <MyGame_Example_Monster_parse_json_table+0x2f10>
    6d28:	mov	r3, #29
    6d2c:	mov	r2, r9
    6d30:	mov	r0, sl
    6d34:	bl	0 <flatcc_json_parser_set_error>
    6d38:	mov	fp, r0
    6d3c:	mov	r2, r9
    6d40:	mov	r1, fp
    6d44:	mov	r0, sl
    6d48:	mov	r3, #33	; 0x21
    6d4c:	bl	0 <flatcc_json_parser_set_error>
    6d50:	add	sp, sp, #124	; 0x7c
    6d54:	vpop	{d8-d9}
    6d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6d5c:	add	r3, pc, #620	; 0x26c
    6d60:	ldrd	r2, [r3]
    6d64:	cmp	r1, r3
    6d68:	cmpeq	r0, r2
    6d6c:	bhi	6e30 <MyGame_Example_Monster_parse_json_table+0x2c4>
    6d70:	add	r3, pc, #608	; 0x260
    6d74:	ldrd	r2, [r3]
    6d78:	cmp	r1, r3
    6d7c:	cmpeq	r0, r2
    6d80:	beq	713c <MyGame_Example_Monster_parse_json_table+0x5d0>
    6d84:	add	r3, pc, #596	; 0x254
    6d88:	ldrd	r2, [r3]
    6d8c:	cmp	r1, r3
    6d90:	cmpeq	r0, r2
    6d94:	bhi	70e0 <MyGame_Example_Monster_parse_json_table+0x574>
    6d98:	add	r3, pc, #584	; 0x248
    6d9c:	ldrd	r2, [r3]
    6da0:	cmp	r1, r3
    6da4:	cmpeq	r0, r2
    6da8:	beq	7800 <MyGame_Example_Monster_parse_json_table+0xc94>
    6dac:	add	r3, pc, #572	; 0x23c
    6db0:	ldrd	r2, [r3]
    6db4:	cmp	r1, r3
    6db8:	cmpeq	r0, r2
    6dbc:	beq	73bc <MyGame_Example_Monster_parse_json_table+0x850>
    6dc0:	mov	r1, fp
    6dc4:	mov	r2, sl
    6dc8:	mov	r0, r9
    6dcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6dd0:	mov	fp, r0
    6dd4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6dd8:	add	r3, pc, #536	; 0x218
    6ddc:	ldrd	r2, [r3]
    6de0:	cmp	r1, r3
    6de4:	cmpeq	r0, r2
    6de8:	bhi	6ed0 <MyGame_Example_Monster_parse_json_table+0x364>
    6dec:	add	r3, pc, #524	; 0x20c
    6df0:	ldrd	r2, [r3]
    6df4:	cmp	r1, r3
    6df8:	cmpeq	r0, r2
    6dfc:	bhi	71e4 <MyGame_Example_Monster_parse_json_table+0x678>
    6e00:	add	r3, pc, #512	; 0x200
    6e04:	ldrd	r2, [r3]
    6e08:	mov	r4, #0
    6e0c:	cmp	r1, r3
    6e10:	cmpeq	r4, r2
    6e14:	beq	74d8 <MyGame_Example_Monster_parse_json_table+0x96c>
    6e18:	mov	r1, fp
    6e1c:	mov	r2, sl
    6e20:	mov	r0, r9
    6e24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6e28:	mov	fp, r0
    6e2c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6e30:	add	r3, pc, #472	; 0x1d8
    6e34:	ldrd	r2, [r3]
    6e38:	cmp	r1, r3
    6e3c:	cmpeq	r0, r2
    6e40:	bhi	7050 <MyGame_Example_Monster_parse_json_table+0x4e4>
    6e44:	add	r3, pc, #460	; 0x1cc
    6e48:	ldrd	r2, [r3]
    6e4c:	ldr	r0, [pc, #492]	; 7040 <MyGame_Example_Monster_parse_json_table+0x4d4>
    6e50:	mvn	r1, #0
    6e54:	and	r5, r5, r1
    6e58:	and	r4, r4, r0
    6e5c:	cmp	r5, r3
    6e60:	cmpeq	r4, r2
    6e64:	bne	6cc0 <MyGame_Example_Monster_parse_json_table+0x154>
    6e68:	sub	r3, sl, fp
    6e6c:	cmp	r3, #6
    6e70:	bgt	7520 <MyGame_Example_Monster_parse_json_table+0x9b4>
    6e74:	mov	r1, fp
    6e78:	mov	r2, sl
    6e7c:	mov	r0, r9
    6e80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6e84:	mov	fp, r0
    6e88:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6e8c:	ldr	r3, [pc, #432]	; 7044 <MyGame_Example_Monster_parse_json_table+0x4d8>
    6e90:	mvn	r2, #0
    6e94:	cmp	r1, r3
    6e98:	cmpeq	r0, r2
    6e9c:	bhi	7238 <MyGame_Example_Monster_parse_json_table+0x6cc>
    6ea0:	add	r3, pc, #376	; 0x178
    6ea4:	ldrd	r2, [r3]
    6ea8:	mov	r4, #0
    6eac:	cmp	r1, r3
    6eb0:	cmpeq	r4, r2
    6eb4:	beq	74fc <MyGame_Example_Monster_parse_json_table+0x990>
    6eb8:	mov	r1, fp
    6ebc:	mov	r2, sl
    6ec0:	mov	r0, r9
    6ec4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ec8:	mov	fp, r0
    6ecc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6ed0:	add	r3, pc, #336	; 0x150
    6ed4:	ldrd	r2, [r3]
    6ed8:	and	r6, r0, #-16777216	; 0xff000000
    6edc:	mov	r7, r1
    6ee0:	cmp	r1, r3
    6ee4:	cmpeq	r6, r2
    6ee8:	beq	76cc <MyGame_Example_Monster_parse_json_table+0xb60>
    6eec:	sub	r8, sl, fp
    6ef0:	cmp	r8, #4
    6ef4:	bgt	8eac <MyGame_Example_Monster_parse_json_table+0x2340>
    6ef8:	add	r3, pc, #304	; 0x130
    6efc:	ldrd	r2, [r3]
    6f00:	cmp	r7, r3
    6f04:	cmpeq	r6, r2
    6f08:	beq	75ec <MyGame_Example_Monster_parse_json_table+0xa80>
    6f0c:	add	r3, pc, #292	; 0x124
    6f10:	ldrd	r2, [r3]
    6f14:	cmp	r5, r3
    6f18:	cmpeq	r4, r2
    6f1c:	bne	75f4 <MyGame_Example_Monster_parse_json_table+0xa88>
    6f20:	add	fp, fp, #8
    6f24:	mov	r0, fp
    6f28:	mov	r1, sl
    6f2c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    6f30:	mov	r0, #0
    6f34:	and	r1, r1, #-16777216	; 0xff000000
    6f38:	cmp	r1, #1694498816	; 0x65000000
    6f3c:	cmpeq	r0, #0
    6f40:	bne	79e0 <MyGame_Example_Monster_parse_json_table+0xe74>
    6f44:	sub	r3, sl, fp
    6f48:	cmp	r3, #1
    6f4c:	ble	8000 <MyGame_Example_Monster_parse_json_table+0x1494>
    6f50:	mov	r1, fp
    6f54:	mov	r3, #1
    6f58:	mov	r2, sl
    6f5c:	mov	r0, r9
    6f60:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    6f64:	cmp	fp, r0
    6f68:	mov	r1, r0
    6f6c:	beq	8000 <MyGame_Example_Monster_parse_json_table+0x1494>
    6f70:	ldr	r2, [sp, #96]	; 0x60
    6f74:	ldr	ip, [pc, #204]	; 7048 <MyGame_Example_Monster_parse_json_table+0x4dc>
    6f78:	ldr	r0, [pc, #204]	; 704c <MyGame_Example_Monster_parse_json_table+0x4e0>
    6f7c:	mov	r3, #8
    6f80:	str	r0, [sp, #8]
    6f84:	str	r2, [sp, #4]
    6f88:	str	r3, [sp]
    6f8c:	str	ip, [sp, #12]
    6f90:	mov	r3, #0
    6f94:	mov	r2, sl
    6f98:	mov	r0, r9
    6f9c:	bl	0 <flatcc_json_parser_union_type>
    6fa0:	mov	fp, r0
    6fa4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    6fa8:	.word	0x61727260
    6fac:	.word	0x74657374
    6fb0:	.word	0xffffffff
    6fb4:	.word	0x6e616d64
    6fb8:	.word	0xffffffff
    6fbc:	.word	0x666c6577
    6fc0:	.word	0x79000000
    6fc4:	.word	0x656e656d
    6fc8:	.word	0x72000000
    6fcc:	.word	0x636f6c6f
    6fd0:	.word	0x6632ffff
    6fd4:	.word	0x74657374
    6fd8:	.word	0x61727261
    6fdc:	.word	0x74657374
    6fe0:	.word	0x656d7073
    6fe4:	.word	0x74657374
    6fe8:	.word	0x62617365
    6fec:	.word	0x74657374
    6ff0:	.word	0x626f6f6c
    6ff4:	.word	0x74657374
    6ff8:	.word	0xffffffff
    6ffc:	.word	0x74657373
    7000:	.word	0x6e745f6d
    7004:	.word	0x70617265
    7008:	.word	0x00000000
    700c:	.word	0x6e616d65
    7010:	.word	0x68617367
    7014:	.word	0x74657374
    7018:	.word	0x66330000
    701c:	.word	0x74657374
    7020:	.word	0x00000000
    7024:	.word	0x666c6578
    7028:	.word	0x34000000
    702c:	.word	0x74657374
    7030:	.word	0x35000000
    7034:	.word	0x74657374
    7038:	.word	0x5f747970
    703c:	.word	0x74657374
    7040:	.word	0xffff0000
    7044:	.word	0x686fffff
    7048:	.word	0x00000000
    704c:	.word	0x0000010c
    7050:	add	r3, pc, #976	; 0x3d0
    7054:	ldrd	r2, [r3]
    7058:	cmp	r1, r3
    705c:	cmpeq	r0, r2
    7060:	beq	77b0 <MyGame_Example_Monster_parse_json_table+0xc44>
    7064:	add	r3, pc, #964	; 0x3c4
    7068:	ldrd	r2, [r3]
    706c:	cmp	r1, r3
    7070:	cmpeq	r0, r2
    7074:	bls	72e4 <MyGame_Example_Monster_parse_json_table+0x778>
    7078:	add	r3, pc, #952	; 0x3b8
    707c:	ldrd	r2, [r3]
    7080:	cmp	r1, r3
    7084:	cmpeq	r0, r2
    7088:	bne	7858 <MyGame_Example_Monster_parse_json_table+0xcec>
    708c:	add	r4, fp, #8
    7090:	mov	r0, r4
    7094:	mov	r1, sl
    7098:	bl	0 <flatcc_json_parser_symbol_part_ext>
    709c:	add	r3, pc, #924	; 0x39c
    70a0:	ldrd	r2, [r3]
    70a4:	cmp	r1, r3
    70a8:	cmpeq	r0, r2
    70ac:	beq	95e4 <MyGame_Example_Monster_parse_json_table+0x2a78>
    70b0:	add	r3, pc, #912	; 0x390
    70b4:	ldrd	r2, [r3]
    70b8:	bic	r0, r0, #255	; 0xff
    70bc:	cmp	r1, r3
    70c0:	cmpeq	r0, r2
    70c4:	beq	7fdc <MyGame_Example_Monster_parse_json_table+0x1470>
    70c8:	mov	r1, r4
    70cc:	mov	r2, sl
    70d0:	mov	r0, r9
    70d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70d8:	mov	fp, r0
    70dc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    70e0:	add	r3, pc, #872	; 0x368
    70e4:	ldrd	r2, [r3]
    70e8:	cmp	r1, r3
    70ec:	cmpeq	r0, r2
    70f0:	bls	7294 <MyGame_Example_Monster_parse_json_table+0x728>
    70f4:	add	r3, pc, #860	; 0x35c
    70f8:	ldrd	r2, [r3]
    70fc:	ldr	r0, [pc, #972]	; 74d0 <MyGame_Example_Monster_parse_json_table+0x964>
    7100:	mvn	r1, #0
    7104:	and	r5, r5, r1
    7108:	cmp	r5, r3
    710c:	and	r4, r4, r0
    7110:	cmpeq	r4, r2
    7114:	sub	r3, sl, fp
    7118:	beq	7a5c <MyGame_Example_Monster_parse_json_table+0xef0>
    711c:	cmp	r3, #5
    7120:	bgt	97b8 <MyGame_Example_Monster_parse_json_table+0x2c4c>
    7124:	mov	r1, fp
    7128:	mov	r2, sl
    712c:	mov	r0, r9
    7130:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7134:	mov	fp, r0
    7138:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    713c:	add	r4, fp, #8
    7140:	mov	r0, r4
    7144:	mov	r1, sl
    7148:	bl	0 <flatcc_json_parser_symbol_part_ext>
    714c:	add	r3, pc, #780	; 0x30c
    7150:	ldrd	r2, [r3]
    7154:	cmp	r1, r3
    7158:	cmpeq	r0, r2
    715c:	bhi	7358 <MyGame_Example_Monster_parse_json_table+0x7ec>
    7160:	add	r3, pc, #768	; 0x300
    7164:	ldrd	r2, [r3]
    7168:	cmp	r1, r3
    716c:	cmpeq	r0, r2
    7170:	beq	8838 <MyGame_Example_Monster_parse_json_table+0x1ccc>
    7174:	add	r3, pc, #756	; 0x2f4
    7178:	ldrd	r2, [r3]
    717c:	cmp	r1, r3
    7180:	cmpeq	r0, r2
    7184:	bne	7a14 <MyGame_Example_Monster_parse_json_table+0xea8>
    7188:	add	r4, fp, #16
    718c:	mov	r0, r4
    7190:	mov	r1, sl
    7194:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7198:	add	r3, pc, #728	; 0x2d8
    719c:	ldrd	r2, [r3]
    71a0:	bic	r0, r0, #255	; 0xff
    71a4:	cmp	r1, r3
    71a8:	cmpeq	r0, r2
    71ac:	beq	8018 <MyGame_Example_Monster_parse_json_table+0x14ac>
    71b0:	mov	r1, r4
    71b4:	mov	r2, sl
    71b8:	mov	r0, r9
    71bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    71c0:	mov	fp, r0
    71c4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    71c8:	mov	r1, fp
    71cc:	mov	r3, #5
    71d0:	mov	r2, sl
    71d4:	mov	r0, r9
    71d8:	bl	0 <flatcc_json_parser_set_error>
    71dc:	mov	fp, r0
    71e0:	b	6c2c <MyGame_Example_Monster_parse_json_table+0xc0>
    71e4:	add	r3, pc, #660	; 0x294
    71e8:	ldrd	r2, [r3]
    71ec:	cmp	r1, r3
    71f0:	cmpeq	r0, r2
    71f4:	beq	75b0 <MyGame_Example_Monster_parse_json_table+0xa44>
    71f8:	add	r3, pc, #648	; 0x288
    71fc:	ldrd	r2, [r3]
    7200:	bic	r5, r1, #255	; 0xff
    7204:	mov	r4, #0
    7208:	cmp	r5, r3
    720c:	cmpeq	r4, r2
    7210:	bne	78a0 <MyGame_Example_Monster_parse_json_table+0xd34>
    7214:	sub	r3, sl, fp
    7218:	cmp	r3, #3
    721c:	bgt	8ef8 <MyGame_Example_Monster_parse_json_table+0x238c>
    7220:	mov	r1, fp
    7224:	mov	r2, sl
    7228:	mov	r0, r9
    722c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7230:	mov	fp, r0
    7234:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7238:	add	r3, pc, #592	; 0x250
    723c:	ldrd	r2, [r3]
    7240:	cmp	r1, r3
    7244:	cmpeq	r0, r2
    7248:	bhi	73e0 <MyGame_Example_Monster_parse_json_table+0x874>
    724c:	ldr	r3, [pc, #636]	; 74d0 <MyGame_Example_Monster_parse_json_table+0x964>
    7250:	mov	r2, #0
    7254:	and	r5, r5, r3
    7258:	ldr	r3, [pc, #628]	; 74d4 <MyGame_Example_Monster_parse_json_table+0x968>
    725c:	and	r4, r4, r2
    7260:	cmp	r5, r3
    7264:	mov	r2, #0
    7268:	cmpeq	r4, r2
    726c:	bne	79f8 <MyGame_Example_Monster_parse_json_table+0xe8c>
    7270:	sub	r3, sl, fp
    7274:	cmp	r3, #2
    7278:	bgt	813c <MyGame_Example_Monster_parse_json_table+0x15d0>
    727c:	mov	r1, fp
    7280:	mov	r2, sl
    7284:	mov	r0, r9
    7288:	bl	0 <flatcc_json_parser_unmatched_symbol>
    728c:	mov	fp, r0
    7290:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7294:	add	r3, pc, #508	; 0x1fc
    7298:	ldrd	r2, [r3]
    729c:	cmp	r1, r3
    72a0:	cmpeq	r0, r2
    72a4:	bne	7888 <MyGame_Example_Monster_parse_json_table+0xd1c>
    72a8:	add	r4, fp, #8
    72ac:	mov	r0, r4
    72b0:	mov	r1, sl
    72b4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    72b8:	mov	r0, #0
    72bc:	and	r1, r1, #-16777216	; 0xff000000
    72c0:	cmp	r1, #2030043136	; 0x79000000
    72c4:	cmpeq	r0, #0
    72c8:	beq	7ba8 <MyGame_Example_Monster_parse_json_table+0x103c>
    72cc:	mov	r1, r4
    72d0:	mov	r2, sl
    72d4:	mov	r0, r9
    72d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    72dc:	mov	fp, r0
    72e0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    72e4:	add	r3, pc, #436	; 0x1b4
    72e8:	ldrd	r2, [r3]
    72ec:	cmp	r1, r3
    72f0:	cmpeq	r0, r2
    72f4:	bne	7870 <MyGame_Example_Monster_parse_json_table+0xd04>
    72f8:	add	r4, fp, #8
    72fc:	mov	r0, r4
    7300:	mov	r1, sl
    7304:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7308:	add	r3, pc, #408	; 0x198
    730c:	ldrd	r2, [r3]
    7310:	cmp	r1, r3
    7314:	cmpeq	r0, r2
    7318:	beq	7d9c <MyGame_Example_Monster_parse_json_table+0x1230>
    731c:	mov	r1, r4
    7320:	mov	r2, sl
    7324:	mov	r0, r9
    7328:	bl	0 <flatcc_json_parser_unmatched_symbol>
    732c:	mov	fp, r0
    7330:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7334:	sub	r3, sl, fp
    7338:	cmp	r3, #5
    733c:	bgt	7a7c <MyGame_Example_Monster_parse_json_table+0xf10>
    7340:	mov	r1, fp
    7344:	mov	r2, sl
    7348:	mov	r0, r9
    734c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7350:	mov	fp, r0
    7354:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7358:	add	r3, pc, #336	; 0x150
    735c:	ldrd	r2, [r3]
    7360:	cmp	r1, r3
    7364:	cmpeq	r0, r2
    7368:	beq	8718 <MyGame_Example_Monster_parse_json_table+0x1bac>
    736c:	add	r3, pc, #324	; 0x144
    7370:	ldrd	r2, [r3]
    7374:	cmp	r1, r3
    7378:	cmpeq	r0, r2
    737c:	bne	7a2c <MyGame_Example_Monster_parse_json_table+0xec0>
    7380:	add	r4, fp, #16
    7384:	mov	r0, r4
    7388:	mov	r1, sl
    738c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7390:	mov	r0, #0
    7394:	and	r1, r1, #-16777216	; 0xff000000
    7398:	cmp	r1, #1929379840	; 0x73000000
    739c:	cmpeq	r0, #0
    73a0:	beq	803c <MyGame_Example_Monster_parse_json_table+0x14d0>
    73a4:	mov	r1, r4
    73a8:	mov	r2, sl
    73ac:	mov	r0, r9
    73b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73b4:	mov	fp, r0
    73b8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    73bc:	sub	r3, sl, fp
    73c0:	cmp	r3, #8
    73c4:	bgt	8a30 <MyGame_Example_Monster_parse_json_table+0x1ec4>
    73c8:	mov	r1, fp
    73cc:	mov	r2, sl
    73d0:	mov	r0, r9
    73d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    73d8:	mov	fp, r0
    73dc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    73e0:	add	r3, pc, #216	; 0xd8
    73e4:	ldrd	r2, [r3]
    73e8:	cmp	r1, r3
    73ec:	cmpeq	r0, r2
    73f0:	beq	8d00 <MyGame_Example_Monster_parse_json_table+0x2194>
    73f4:	add	r3, pc, #204	; 0xcc
    73f8:	ldrd	r2, [r3]
    73fc:	mov	r4, #0
    7400:	cmp	r1, r3
    7404:	cmpeq	r4, r2
    7408:	beq	7b84 <MyGame_Example_Monster_parse_json_table+0x1018>
    740c:	mov	r1, fp
    7410:	mov	r2, sl
    7414:	mov	r0, r9
    7418:	bl	0 <flatcc_json_parser_unmatched_symbol>
    741c:	mov	fp, r0
    7420:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7424:	nop			; (mov r0, r0)
    7428:	.word	0x68617368
    742c:	.word	0x74657374
    7430:	.word	0x6f725f6e
    7434:	.word	0x76656374
    7438:	.word	0x6f725f6f
    743c:	.word	0x76656374
    7440:	.word	0x75626c65
    7444:	.word	0x665f646f
    7448:	.word	0x6e677300
    744c:	.word	0x665f6c6f
    7450:	.word	0x65ffffff
    7454:	.word	0x74657374
    7458:	.word	0x66320000
    745c:	.word	0x74657374
    7460:	.word	0x7472696d
    7464:	.word	0x796f6673
    7468:	.word	0x6f6f6c73
    746c:	.word	0x796f6662
    7470:	.word	0x6f727465
    7474:	.word	0x796f6673
    7478:	.word	0x75637400
    747c:	.word	0x64737472
    7480:	.word	0x6e745f6e
    7484:	.word	0x70617265
    7488:	.word	0x00000000
    748c:	.word	0x706f7300
    7490:	.word	0x6e746f71
    7494:	.word	0x696e7665
    7498:	.word	0x656d7074
    749c:	.word	0x74657374
    74a0:	.word	0x6e657374
    74a4:	.word	0x74657374
    74a8:	.word	0x61746275
    74ac:	.word	0x6564666c
    74b0:	.word	0x7472696e
    74b4:	.word	0x796f6673
    74b8:	.word	0x61626c65
    74bc:	.word	0x796f6674
    74c0:	.word	0x6e746f72
    74c4:	.word	0x696e7665
    74c8:	.word	0x00000000
    74cc:	.word	0x6d616e61
    74d0:	.word	0xffff0000
    74d4:	.word	0x68700000
    74d8:	sub	r3, sl, fp
    74dc:	cmp	r3, #4
    74e0:	bgt	8c84 <MyGame_Example_Monster_parse_json_table+0x2118>
    74e4:	mov	r1, fp
    74e8:	mov	r2, sl
    74ec:	mov	r0, r9
    74f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    74f4:	mov	fp, r0
    74f8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    74fc:	sub	r3, sl, fp
    7500:	cmp	r3, #4
    7504:	bgt	8b48 <MyGame_Example_Monster_parse_json_table+0x1fdc>
    7508:	mov	r1, fp
    750c:	mov	r2, sl
    7510:	mov	r0, r9
    7514:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7518:	mov	fp, r0
    751c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7520:	mov	r3, #6
    7524:	mov	r2, sl
    7528:	mov	r1, fp
    752c:	mov	r0, r9
    7530:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7534:	cmp	r0, fp
    7538:	mov	r5, r0
    753c:	beq	6e74 <MyGame_Example_Monster_parse_json_table+0x308>
    7540:	add	r4, sp, #120	; 0x78
    7544:	mov	r3, #0
    7548:	mov	r1, r0
    754c:	str	r3, [r4, #-8]!
    7550:	mov	r2, sl
    7554:	mov	r0, r9
    7558:	mov	r3, r4
    755c:	bl	0 <flatcc_json_parser_float>
    7560:	cmp	r0, r5
    7564:	mov	fp, r0
    7568:	beq	98d0 <MyGame_Example_Monster_parse_json_table+0x2d64>
    756c:	vldr	s15, [sp, #112]	; 0x70
    7570:	vcmp.f32	s15, #0.0
    7574:	vmrs	APSR_nzcv, fpscr
    7578:	bne	7588 <MyGame_Example_Monster_parse_json_table+0xa1c>
    757c:	ldr	r3, [r9, #8]
    7580:	tst	r3, #2
    7584:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7588:	mov	r3, #4
    758c:	mov	r2, r3
    7590:	mov	r1, #27
    7594:	ldr	r0, [r9]
    7598:	bl	0 <flatcc_builder_table_add>
    759c:	cmp	r0, #0
    75a0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    75a4:	ldr	r3, [sp, #112]	; 0x70
    75a8:	str	r3, [r0]
    75ac:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    75b0:	add	r4, fp, #8
    75b4:	mov	r0, r4
    75b8:	mov	r1, sl
    75bc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    75c0:	add	r3, pc, #752	; 0x2f0
    75c4:	ldrd	r2, [r3]
    75c8:	cmp	r1, r3
    75cc:	cmpeq	r0, r2
    75d0:	beq	7f90 <MyGame_Example_Monster_parse_json_table+0x1424>
    75d4:	mov	r1, r4
    75d8:	mov	r2, sl
    75dc:	mov	r0, r9
    75e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    75e4:	mov	fp, r0
    75e8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    75ec:	cmp	r8, #5
    75f0:	bgt	760c <MyGame_Example_Monster_parse_json_table+0xaa0>
    75f4:	mov	r1, fp
    75f8:	mov	r2, sl
    75fc:	mov	r0, r9
    7600:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7604:	mov	fp, r0
    7608:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    760c:	mov	r3, #5
    7610:	mov	r2, sl
    7614:	mov	r1, fp
    7618:	mov	r0, r9
    761c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7620:	cmp	r0, fp
    7624:	mov	r4, r0
    7628:	beq	75f4 <MyGame_Example_Monster_parse_json_table+0xa88>
    762c:	mvn	r3, #-1073741824	; 0xc0000000
    7630:	mov	r2, #2
    7634:	mov	r1, #4
    7638:	ldr	r0, [r9]
    763c:	bl	0 <flatcc_builder_start_vector>
    7640:	cmp	r0, #0
    7644:	bne	a1d4 <MyGame_Example_Monster_parse_json_table+0x3668>
    7648:	add	r3, sp, #88	; 0x58
    764c:	mov	r1, r4
    7650:	mov	r2, sl
    7654:	mov	r0, r9
    7658:	bl	2bc8 <flatcc_json_parser_array_start>
    765c:	ldr	r3, [sp, #88]	; 0x58
    7660:	cmp	r3, #0
    7664:	mov	fp, r0
    7668:	beq	8e78 <MyGame_Example_Monster_parse_json_table+0x230c>
    766c:	mov	r4, #1
    7670:	b	769c <MyGame_Example_Monster_parse_json_table+0xb30>
    7674:	bl	6310 <MyGame_Example_Test_parse_json_struct_inline>
    7678:	add	r3, sp, #88	; 0x58
    767c:	mov	r2, sl
    7680:	mov	r1, r0
    7684:	mov	r0, r9
    7688:	bl	54f4 <flatcc_json_parser_array_end>
    768c:	ldr	r3, [sp, #88]	; 0x58
    7690:	cmp	r3, #0
    7694:	mov	fp, r0
    7698:	beq	8e78 <MyGame_Example_Monster_parse_json_table+0x230c>
    769c:	mov	r1, r4
    76a0:	ldr	r0, [r9]
    76a4:	bl	0 <flatcc_builder_extend_vector>
    76a8:	mov	r1, fp
    76ac:	mov	r2, sl
    76b0:	subs	r3, r0, #0
    76b4:	mov	r0, r9
    76b8:	bne	7674 <MyGame_Example_Monster_parse_json_table+0xb08>
    76bc:	mov	r3, sl
    76c0:	mov	sl, r9
    76c4:	mov	r9, r3
    76c8:	b	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    76cc:	sub	r3, sl, fp
    76d0:	cmp	r3, #5
    76d4:	ble	75f4 <MyGame_Example_Monster_parse_json_table+0xa88>
    76d8:	mov	r3, #5
    76dc:	mov	r2, sl
    76e0:	mov	r1, fp
    76e4:	mov	r0, r9
    76e8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    76ec:	cmp	r0, fp
    76f0:	mov	r4, r0
    76f4:	beq	75f4 <MyGame_Example_Monster_parse_json_table+0xa88>
    76f8:	mvn	r3, #-1073741824	; 0xc0000000
    76fc:	mov	r2, #2
    7700:	mov	r1, #4
    7704:	ldr	r0, [r9]
    7708:	bl	0 <flatcc_builder_start_vector>
    770c:	cmp	r0, #0
    7710:	bne	a1d4 <MyGame_Example_Monster_parse_json_table+0x3668>
    7714:	add	r3, sp, #88	; 0x58
    7718:	mov	r1, r4
    771c:	mov	r2, sl
    7720:	mov	r0, r9
    7724:	bl	2bc8 <flatcc_json_parser_array_start>
    7728:	ldr	r3, [sp, #88]	; 0x58
    772c:	cmp	r3, #0
    7730:	mov	fp, r0
    7734:	beq	8570 <MyGame_Example_Monster_parse_json_table+0x1a04>
    7738:	mov	r4, #1
    773c:	b	7768 <MyGame_Example_Monster_parse_json_table+0xbfc>
    7740:	bl	6310 <MyGame_Example_Test_parse_json_struct_inline>
    7744:	add	r3, sp, #88	; 0x58
    7748:	mov	r2, sl
    774c:	mov	r1, r0
    7750:	mov	r0, r9
    7754:	bl	54f4 <flatcc_json_parser_array_end>
    7758:	ldr	r3, [sp, #88]	; 0x58
    775c:	cmp	r3, #0
    7760:	mov	fp, r0
    7764:	beq	8570 <MyGame_Example_Monster_parse_json_table+0x1a04>
    7768:	mov	r1, r4
    776c:	ldr	r0, [r9]
    7770:	bl	0 <flatcc_builder_extend_vector>
    7774:	mov	r1, fp
    7778:	mov	r2, sl
    777c:	subs	r3, r0, #0
    7780:	mov	r0, r9
    7784:	bne	7740 <MyGame_Example_Monster_parse_json_table+0xbd4>
    7788:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    778c:	sub	r3, sl, fp
    7790:	cmp	r3, #5
    7794:	bgt	86b8 <MyGame_Example_Monster_parse_json_table+0x1b4c>
    7798:	mov	r1, fp
    779c:	mov	r2, sl
    77a0:	mov	r0, r9
    77a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77a8:	mov	fp, r0
    77ac:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    77b0:	add	fp, fp, #8
    77b4:	mov	r0, fp
    77b8:	mov	r1, sl
    77bc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    77c0:	add	r3, pc, #248	; 0xf8
    77c4:	ldrd	r2, [r3]
    77c8:	cmp	r1, r3
    77cc:	cmpeq	r0, r2
    77d0:	bhi	78d8 <MyGame_Example_Monster_parse_json_table+0xd6c>
    77d4:	add	r3, pc, #236	; 0xec
    77d8:	ldrd	r2, [r3]
    77dc:	cmp	r1, r3
    77e0:	cmpeq	r0, r2
    77e4:	beq	7ec8 <MyGame_Example_Monster_parse_json_table+0x135c>
    77e8:	mov	r1, fp
    77ec:	mov	r2, sl
    77f0:	mov	r0, r9
    77f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77f8:	mov	fp, r0
    77fc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7800:	add	r4, fp, #8
    7804:	mov	r0, r4
    7808:	mov	r1, sl
    780c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7810:	ldr	r3, [pc, #184]	; 78d0 <MyGame_Example_Monster_parse_json_table+0xd64>
    7814:	ldr	r7, [pc, #184]	; 78d4 <MyGame_Example_Monster_parse_json_table+0xd68>
    7818:	mov	r2, #0
    781c:	mov	r6, #0
    7820:	and	r3, r3, r1
    7824:	and	r2, r2, r0
    7828:	cmp	r3, r7
    782c:	cmpeq	r2, r6
    7830:	bne	7a44 <MyGame_Example_Monster_parse_json_table+0xed8>
    7834:	sub	r3, sl, r4
    7838:	cmp	r3, #2
    783c:	bgt	825c <MyGame_Example_Monster_parse_json_table+0x16f0>
    7840:	mov	r1, r4
    7844:	mov	r2, sl
    7848:	mov	r0, r9
    784c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7850:	mov	fp, r0
    7854:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7858:	mov	r1, fp
    785c:	mov	r2, sl
    7860:	mov	r0, r9
    7864:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7868:	mov	fp, r0
    786c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7870:	mov	r1, fp
    7874:	mov	r2, sl
    7878:	mov	r0, r9
    787c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7880:	mov	fp, r0
    7884:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7888:	mov	r1, fp
    788c:	mov	r2, sl
    7890:	mov	r0, r9
    7894:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7898:	mov	fp, r0
    789c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    78a0:	mov	r1, fp
    78a4:	mov	r2, sl
    78a8:	mov	r0, r9
    78ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    78b0:	mov	fp, r0
    78b4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    78b8:	.word	0x70616365
    78bc:	.word	0x616d6573
    78c0:	.word	0x666e7630
    78c4:	.word	0x7336345f
    78c8:	.word	0x666e7631
    78cc:	.word	0x7333325f
    78d0:	.word	0xffff0000
    78d4:	.word	0x36340000
    78d8:	add	r3, pc, #840	; 0x348
    78dc:	ldrd	r2, [r3]
    78e0:	cmp	r1, r3
    78e4:	cmpeq	r0, r2
    78e8:	bls	7de8 <MyGame_Example_Monster_parse_json_table+0x127c>
    78ec:	add	r3, pc, #828	; 0x33c
    78f0:	ldrd	r2, [r3]
    78f4:	cmp	r1, r3
    78f8:	cmpeq	r0, r2
    78fc:	beq	9b84 <MyGame_Example_Monster_parse_json_table+0x3018>
    7900:	add	r3, pc, #816	; 0x330
    7904:	ldrd	r2, [r3]
    7908:	cmp	r1, r3
    790c:	cmpeq	r0, r2
    7910:	bne	9988 <MyGame_Example_Monster_parse_json_table+0x2e1c>
    7914:	sub	r3, sl, fp
    7918:	cmp	r3, #8
    791c:	bgt	a4b4 <MyGame_Example_Monster_parse_json_table+0x3948>
    7920:	add	fp, fp, #8
    7924:	mov	r0, fp
    7928:	mov	r1, sl
    792c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7930:	mov	r0, #0
    7934:	and	r1, r1, #-16777216	; 0xff000000
    7938:	cmp	r1, #1627389952	; 0x61000000
    793c:	cmpeq	r0, #0
    7940:	bne	a848 <MyGame_Example_Monster_parse_json_table+0x3cdc>
    7944:	sub	r3, sl, fp
    7948:	cmp	r3, #1
    794c:	ble	a9e4 <MyGame_Example_Monster_parse_json_table+0x3e78>
    7950:	mov	r3, #1
    7954:	mov	r2, sl
    7958:	mov	r1, fp
    795c:	mov	r0, r9
    7960:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7964:	cmp	fp, r0
    7968:	mov	r4, r0
    796c:	beq	a9e8 <MyGame_Example_Monster_parse_json_table+0x3e7c>
    7970:	mov	r0, #0
    7974:	mov	r1, #0
    7978:	add	r5, sp, #120	; 0x78
    797c:	mov	r2, sl
    7980:	strd	r0, [r5, #-8]!
    7984:	mov	r1, r4
    7988:	mov	r3, r5
    798c:	mov	r0, r9
    7990:	bl	25a4 <flatcc_json_parser_uint64.constprop.42>
    7994:	cmp	r0, r4
    7998:	mov	fp, r0
    799c:	beq	aa54 <MyGame_Example_Monster_parse_json_table+0x3ee8>
    79a0:	ldrd	r2, [sp, #112]	; 0x70
    79a4:	orrs	r3, r2, r3
    79a8:	bne	79b8 <MyGame_Example_Monster_parse_json_table+0xe4c>
    79ac:	ldr	r3, [r9, #8]
    79b0:	tst	r3, #2
    79b4:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    79b8:	mov	r3, #8
    79bc:	mov	r2, r3
    79c0:	mov	r1, #23
    79c4:	ldr	r0, [r9]
    79c8:	bl	0 <flatcc_builder_table_add>
    79cc:	cmp	r0, #0
    79d0:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    79d4:	ldrd	r2, [sp, #112]	; 0x70
    79d8:	strd	r2, [r0]
    79dc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    79e0:	mov	r1, fp
    79e4:	mov	r2, sl
    79e8:	mov	r0, r9
    79ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    79f0:	mov	fp, r0
    79f4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    79f8:	mov	r1, fp
    79fc:	mov	r2, sl
    7a00:	mov	r0, r9
    7a04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a08:	mov	fp, r0
    7a0c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7a10:	mov	r4, r0
    7a14:	mov	r1, r4
    7a18:	mov	r2, sl
    7a1c:	mov	r0, r9
    7a20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a24:	mov	fp, r0
    7a28:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7a2c:	mov	r1, r4
    7a30:	mov	r2, sl
    7a34:	mov	r0, r9
    7a38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a3c:	mov	fp, r0
    7a40:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7a44:	mov	r1, r4
    7a48:	mov	r2, sl
    7a4c:	mov	r0, r9
    7a50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a54:	mov	fp, r0
    7a58:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7a5c:	cmp	r3, #6
    7a60:	bgt	81c8 <MyGame_Example_Monster_parse_json_table+0x165c>
    7a64:	mov	r1, fp
    7a68:	mov	r2, sl
    7a6c:	mov	r0, r9
    7a70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a74:	mov	fp, r0
    7a78:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7a7c:	mov	r3, #5
    7a80:	mov	r2, sl
    7a84:	mov	r1, fp
    7a88:	mov	r0, r9
    7a8c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7a90:	cmp	r0, fp
    7a94:	mov	r4, r0
    7a98:	beq	7340 <MyGame_Example_Monster_parse_json_table+0x7d4>
    7a9c:	mov	r0, #0
    7aa0:	mov	r1, #0
    7aa4:	mov	r3, #0
    7aa8:	cmp	sl, r4
    7aac:	strd	r0, [sp, #112]	; 0x70
    7ab0:	strb	r3, [sp, #104]	; 0x68
    7ab4:	str	r3, [sp, #108]	; 0x6c
    7ab8:	beq	95b4 <MyGame_Example_Monster_parse_json_table+0x2a48>
    7abc:	add	r3, sp, #112	; 0x70
    7ac0:	str	r3, [sp]
    7ac4:	mov	r2, sl
    7ac8:	add	r3, sp, #108	; 0x6c
    7acc:	mov	r1, r4
    7ad0:	mov	r0, r9
    7ad4:	bl	0 <flatcc_json_parser_integer>
    7ad8:	cmp	r4, r0
    7adc:	mov	fp, r0
    7ae0:	beq	95b0 <MyGame_Example_Monster_parse_json_table+0x2a44>
    7ae4:	ldr	r1, [sp, #108]	; 0x6c
    7ae8:	ldrd	r2, [sp, #112]	; 0x70
    7aec:	cmp	r1, #0
    7af0:	bne	7b44 <MyGame_Example_Monster_parse_json_table+0xfd8>
    7af4:	cmp	r3, #0
    7af8:	cmpeq	r2, #127	; 0x7f
    7afc:	sxtbls	r2, r2
    7b00:	strbls	r2, [sp, #104]	; 0x68
    7b04:	bhi	9c4c <MyGame_Example_Monster_parse_json_table+0x30e0>
    7b08:	cmp	r2, #8
    7b0c:	bne	7b1c <MyGame_Example_Monster_parse_json_table+0xfb0>
    7b10:	ldr	r3, [r9, #8]
    7b14:	tst	r3, #2
    7b18:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7b1c:	mov	r3, #1
    7b20:	mov	r2, r3
    7b24:	mov	r1, #6
    7b28:	ldr	r0, [r9]
    7b2c:	bl	0 <flatcc_builder_table_add>
    7b30:	cmp	r0, #0
    7b34:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    7b38:	ldrsb	r3, [sp, #104]	; 0x68
    7b3c:	strb	r3, [r0]
    7b40:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7b44:	cmp	r3, #0
    7b48:	cmpeq	r2, #128	; 0x80
    7b4c:	rsbls	r2, r2, #0
    7b50:	sxtbls	r2, r2
    7b54:	strbls	r2, [sp, #104]	; 0x68
    7b58:	bls	7b08 <MyGame_Example_Monster_parse_json_table+0xf9c>
    7b5c:	mov	r1, r0
    7b60:	mov	r3, #8
    7b64:	mov	r2, sl
    7b68:	mov	r0, r9
    7b6c:	bl	0 <flatcc_json_parser_set_error>
    7b70:	mov	fp, r0
    7b74:	cmp	r4, fp
    7b78:	beq	95b4 <MyGame_Example_Monster_parse_json_table+0x2a48>
    7b7c:	ldrsb	r2, [sp, #104]	; 0x68
    7b80:	b	7b08 <MyGame_Example_Monster_parse_json_table+0xf9c>
    7b84:	sub	r3, sl, fp
    7b88:	cmp	r3, #4
    7b8c:	bgt	98fc <MyGame_Example_Monster_parse_json_table+0x2d90>
    7b90:	mov	r1, fp
    7b94:	mov	r2, sl
    7b98:	mov	r0, r9
    7b9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7ba0:	mov	fp, r0
    7ba4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7ba8:	sub	r3, sl, r4
    7bac:	cmp	r3, #1
    7bb0:	ble	a190 <MyGame_Example_Monster_parse_json_table+0x3624>
    7bb4:	mov	r3, #1
    7bb8:	mov	r2, sl
    7bbc:	mov	r1, r4
    7bc0:	mov	r0, r9
    7bc4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7bc8:	cmp	r4, r0
    7bcc:	mov	fp, r0
    7bd0:	beq	a18c <MyGame_Example_Monster_parse_json_table+0x3620>
    7bd4:	mov	r3, #0
    7bd8:	mov	r1, #3
    7bdc:	ldr	r0, [r9]
    7be0:	str	r3, [sp, #92]	; 0x5c
    7be4:	bl	0 <flatcc_builder_start_table>
    7be8:	cmp	r0, #0
    7bec:	bne	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    7bf0:	mov	r1, fp
    7bf4:	add	r3, sp, #100	; 0x64
    7bf8:	mov	r2, sl
    7bfc:	mov	r0, r9
    7c00:	bl	2a3c <flatcc_json_parser_object_start>
    7c04:	ldr	r3, [sp, #100]	; 0x64
    7c08:	cmp	r3, #0
    7c0c:	mov	fp, r0
    7c10:	beq	99ec <MyGame_Example_Monster_parse_json_table+0x2e80>
    7c14:	mov	r6, #1
    7c18:	mov	r8, #5
    7c1c:	mov	r7, #0
    7c20:	b	7ca8 <MyGame_Example_Monster_parse_json_table+0x113c>
    7c24:	nop			; (mov r0, r0)
    7c28:	.word	0x666e7630
    7c2c:	.word	0x7533325f
    7c30:	.word	0x666e7631
    7c34:	.word	0x7533325f
    7c38:	.word	0x666e7631
    7c3c:	.word	0x7536345f
    7c40:	.word	0x74000000
    7c44:	.word	0x636f756e
    7c48:	.word	0x6963ffff
    7c4c:	sub	r3, pc, #20
    7c50:	ldrd	r2, [r3]
    7c54:	and	r0, r0, #-16777216	; 0xff000000
    7c58:	cmp	r1, r3
    7c5c:	cmpeq	r0, r2
    7c60:	bne	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    7c64:	sub	r3, sl, fp
    7c68:	cmp	r3, #5
    7c6c:	bgt	85a4 <MyGame_Example_Monster_parse_json_table+0x1a38>
    7c70:	mov	r1, fp
    7c74:	mov	r2, sl
    7c78:	mov	r0, r9
    7c7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7c80:	mov	fp, r0
    7c84:	mov	r1, fp
    7c88:	add	r3, sp, #100	; 0x64
    7c8c:	mov	r2, sl
    7c90:	mov	r0, r9
    7c94:	bl	4ba8 <flatcc_json_parser_object_end>
    7c98:	ldr	r3, [sp, #100]	; 0x64
    7c9c:	cmp	r3, #0
    7ca0:	mov	fp, r0
    7ca4:	beq	99ec <MyGame_Example_Monster_parse_json_table+0x2e80>
    7ca8:	cmp	sl, fp
    7cac:	beq	7cd0 <MyGame_Example_Monster_parse_json_table+0x1164>
    7cb0:	ldrb	r3, [fp]
    7cb4:	cmp	r3, #34	; 0x22
    7cb8:	addeq	fp, fp, #1
    7cbc:	streq	r7, [r9, #12]
    7cc0:	beq	7cd0 <MyGame_Example_Monster_parse_json_table+0x1164>
    7cc4:	cmp	r3, #46	; 0x2e
    7cc8:	strne	r6, [r9, #12]
    7ccc:	beq	89b4 <MyGame_Example_Monster_parse_json_table+0x1e48>
    7cd0:	mov	r1, sl
    7cd4:	mov	r0, fp
    7cd8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7cdc:	ldr	r3, [pc, #-156]	; 7c48 <MyGame_Example_Monster_parse_json_table+0x10dc>
    7ce0:	mvn	r2, #0
    7ce4:	cmp	r1, r3
    7ce8:	cmpeq	r0, r2
    7cec:	bls	7c4c <MyGame_Example_Monster_parse_json_table+0x10e0>
    7cf0:	add	r3, pc, #944	; 0x3b0
    7cf4:	ldrd	r2, [r3]
    7cf8:	bic	r5, r1, #255	; 0xff
    7cfc:	mov	r4, #0
    7d00:	cmp	r5, r3
    7d04:	cmpeq	r4, r2
    7d08:	beq	8428 <MyGame_Example_Monster_parse_json_table+0x18bc>
    7d0c:	ldr	r3, [pc, #948]	; 80c8 <MyGame_Example_Monster_parse_json_table+0x155c>
    7d10:	mov	r2, #0
    7d14:	and	r1, r1, r3
    7d18:	ldr	r3, [pc, #940]	; 80cc <MyGame_Example_Monster_parse_json_table+0x1560>
    7d1c:	and	r0, r0, r2
    7d20:	cmp	r1, r3
    7d24:	mov	r2, #0
    7d28:	cmpeq	r0, r2
    7d2c:	bne	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    7d30:	sub	r3, sl, fp
    7d34:	cmp	r3, #2
    7d38:	ble	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    7d3c:	mov	r1, fp
    7d40:	mov	r3, #2
    7d44:	mov	r2, sl
    7d48:	mov	r0, r9
    7d4c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7d50:	cmp	r0, fp
    7d54:	mov	r1, r0
    7d58:	beq	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    7d5c:	add	r3, sp, #104	; 0x68
    7d60:	mov	r2, sl
    7d64:	mov	r0, r9
    7d68:	bl	0 <flatcc_json_parser_build_string>
    7d6c:	ldr	r3, [sp, #104]	; 0x68
    7d70:	cmp	r3, #0
    7d74:	mov	fp, r0
    7d78:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    7d7c:	mov	r1, r7
    7d80:	ldr	r0, [r9]
    7d84:	bl	0 <flatcc_builder_table_add_offset>
    7d88:	cmp	r0, #0
    7d8c:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    7d90:	ldr	r3, [sp, #104]	; 0x68
    7d94:	str	r3, [r0]
    7d98:	b	7c84 <MyGame_Example_Monster_parse_json_table+0x1118>
    7d9c:	add	r4, fp, #16
    7da0:	mov	r0, r4
    7da4:	mov	r1, sl
    7da8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7dac:	add	r3, pc, #764	; 0x2fc
    7db0:	ldrd	r2, [r3]
    7db4:	mov	r0, #0
    7db8:	cmp	r1, r3
    7dbc:	cmpeq	r0, r2
    7dc0:	bne	9758 <MyGame_Example_Monster_parse_json_table+0x2bec>
    7dc4:	sub	r3, sl, r4
    7dc8:	cmp	r3, #4
    7dcc:	bgt	a25c <MyGame_Example_Monster_parse_json_table+0x36f0>
    7dd0:	mov	r1, r4
    7dd4:	mov	r2, sl
    7dd8:	mov	r0, r9
    7ddc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7de0:	mov	fp, r0
    7de4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7de8:	add	r3, pc, #712	; 0x2c8
    7dec:	ldrd	r2, [r3]
    7df0:	cmp	r1, r3
    7df4:	cmpeq	r0, r2
    7df8:	bne	9864 <MyGame_Example_Monster_parse_json_table+0x2cf8>
    7dfc:	sub	r3, sl, fp
    7e00:	cmp	r3, #8
    7e04:	bgt	a31c <MyGame_Example_Monster_parse_json_table+0x37b0>
    7e08:	add	fp, fp, #8
    7e0c:	mov	r0, fp
    7e10:	mov	r1, sl
    7e14:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7e18:	mov	r0, #0
    7e1c:	and	r1, r1, #-16777216	; 0xff000000
    7e20:	cmp	r1, #1627389952	; 0x61000000
    7e24:	cmpeq	r0, #0
    7e28:	bne	a66c <MyGame_Example_Monster_parse_json_table+0x3b00>
    7e2c:	sub	r3, sl, fp
    7e30:	cmp	r3, #1
    7e34:	ble	a9c8 <MyGame_Example_Monster_parse_json_table+0x3e5c>
    7e38:	mov	r3, #1
    7e3c:	mov	r2, sl
    7e40:	mov	r1, fp
    7e44:	mov	r0, r9
    7e48:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7e4c:	cmp	fp, r0
    7e50:	mov	r4, r0
    7e54:	beq	a9cc <MyGame_Example_Monster_parse_json_table+0x3e60>
    7e58:	mov	r0, #0
    7e5c:	mov	r1, #0
    7e60:	add	r5, sp, #120	; 0x78
    7e64:	mov	r2, sl
    7e68:	strd	r0, [r5, #-8]!
    7e6c:	mov	r1, r4
    7e70:	mov	r3, r5
    7e74:	mov	r0, r9
    7e78:	bl	293c <flatcc_json_parser_int64>
    7e7c:	cmp	r0, r4
    7e80:	mov	fp, r0
    7e84:	beq	aa98 <MyGame_Example_Monster_parse_json_table+0x3f2c>
    7e88:	ldrd	r2, [sp, #112]	; 0x70
    7e8c:	orrs	r3, r2, r3
    7e90:	bne	7ea0 <MyGame_Example_Monster_parse_json_table+0x1334>
    7e94:	ldr	r3, [r9, #8]
    7e98:	tst	r3, #2
    7e9c:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7ea0:	mov	r3, #8
    7ea4:	mov	r2, r3
    7ea8:	mov	r1, #22
    7eac:	ldr	r0, [r9]
    7eb0:	bl	0 <flatcc_builder_table_add>
    7eb4:	cmp	r0, #0
    7eb8:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    7ebc:	ldrd	r2, [sp, #112]	; 0x70
    7ec0:	strd	r2, [r0]
    7ec4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7ec8:	sub	r3, sl, fp
    7ecc:	cmp	r3, #8
    7ed0:	bgt	9af8 <MyGame_Example_Monster_parse_json_table+0x2f8c>
    7ed4:	add	fp, fp, #8
    7ed8:	mov	r0, fp
    7edc:	mov	r1, sl
    7ee0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7ee4:	mov	r0, #0
    7ee8:	and	r1, r1, #-16777216	; 0xff000000
    7eec:	cmp	r1, #1627389952	; 0x61000000
    7ef0:	cmpeq	r0, #0
    7ef4:	bne	a304 <MyGame_Example_Monster_parse_json_table+0x3798>
    7ef8:	sub	r3, sl, fp
    7efc:	cmp	r3, #1
    7f00:	ble	aa2c <MyGame_Example_Monster_parse_json_table+0x3ec0>
    7f04:	mov	r3, #1
    7f08:	mov	r2, sl
    7f0c:	mov	r1, fp
    7f10:	mov	r0, r9
    7f14:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    7f18:	cmp	fp, r0
    7f1c:	mov	r5, r0
    7f20:	beq	aa2c <MyGame_Example_Monster_parse_json_table+0x3ec0>
    7f24:	add	r4, sp, #120	; 0x78
    7f28:	mov	r3, #0
    7f2c:	str	r3, [r4, #-8]!
    7f30:	mov	r1, r0
    7f34:	mov	r2, sl
    7f38:	mov	r3, r4
    7f3c:	mov	r0, r9
    7f40:	bl	27a8 <flatcc_json_parser_int32.constprop.39>
    7f44:	cmp	r0, r5
    7f48:	mov	fp, r0
    7f4c:	beq	aaf0 <MyGame_Example_Monster_parse_json_table+0x3f84>
    7f50:	ldr	r3, [sp, #112]	; 0x70
    7f54:	cmp	r3, #0
    7f58:	bne	7f68 <MyGame_Example_Monster_parse_json_table+0x13fc>
    7f5c:	ldr	r3, [r9, #8]
    7f60:	tst	r3, #2
    7f64:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7f68:	mov	r3, #4
    7f6c:	mov	r2, r3
    7f70:	mov	r1, #20
    7f74:	ldr	r0, [r9]
    7f78:	bl	0 <flatcc_builder_table_add>
    7f7c:	cmp	r0, #0
    7f80:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    7f84:	ldr	r3, [sp, #112]	; 0x70
    7f88:	str	r3, [r0]
    7f8c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7f90:	add	fp, fp, #16
    7f94:	mov	r0, fp
    7f98:	mov	r1, sl
    7f9c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    7fa0:	add	r3, pc, #280	; 0x118
    7fa4:	ldrd	r2, [r3]
    7fa8:	and	r0, r0, #-16777216	; 0xff000000
    7fac:	cmp	r1, r3
    7fb0:	cmpeq	r0, r2
    7fb4:	bne	987c <MyGame_Example_Monster_parse_json_table+0x2d10>
    7fb8:	sub	r3, sl, fp
    7fbc:	cmp	r3, #5
    7fc0:	bgt	a3ac <MyGame_Example_Monster_parse_json_table+0x3840>
    7fc4:	mov	r1, fp
    7fc8:	mov	r2, sl
    7fcc:	mov	r0, r9
    7fd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7fd4:	mov	fp, r0
    7fd8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    7fdc:	sub	r3, sl, r4
    7fe0:	cmp	r3, #7
    7fe4:	bgt	9c94 <MyGame_Example_Monster_parse_json_table+0x3128>
    7fe8:	mov	r1, r4
    7fec:	mov	r2, sl
    7ff0:	mov	r0, r9
    7ff4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7ff8:	mov	fp, r0
    7ffc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8000:	mov	r1, fp
    8004:	mov	r2, sl
    8008:	mov	r0, r9
    800c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8010:	mov	fp, r0
    8014:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8018:	sub	r3, sl, r4
    801c:	cmp	r3, #7
    8020:	bgt	9df0 <MyGame_Example_Monster_parse_json_table+0x3284>
    8024:	mov	r1, r4
    8028:	mov	r2, sl
    802c:	mov	r0, r9
    8030:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8034:	mov	fp, r0
    8038:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    803c:	sub	r3, sl, r4
    8040:	cmp	r3, #1
    8044:	ble	a470 <MyGame_Example_Monster_parse_json_table+0x3904>
    8048:	mov	r3, #1
    804c:	mov	r2, sl
    8050:	mov	r1, r4
    8054:	mov	r0, r9
    8058:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    805c:	cmp	r4, r0
    8060:	mov	fp, r0
    8064:	beq	a46c <MyGame_Example_Monster_parse_json_table+0x3900>
    8068:	ldr	r0, [r9]
    806c:	bl	0 <flatcc_builder_start_offset_vector>
    8070:	cmp	r0, #0
    8074:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8078:	mov	r1, fp
    807c:	add	r3, sp, #88	; 0x58
    8080:	mov	r2, sl
    8084:	mov	r0, r9
    8088:	bl	2bc8 <flatcc_json_parser_array_start>
    808c:	ldr	r3, [sp, #88]	; 0x58
    8090:	cmp	r3, #0
    8094:	mov	fp, r0
    8098:	beq	a124 <MyGame_Example_Monster_parse_json_table+0x35b8>
    809c:	add	r4, sp, #92	; 0x5c
    80a0:	mov	r5, #1
    80a4:	b	8110 <MyGame_Example_Monster_parse_json_table+0x15a4>
    80a8:	.word	0x00000000
    80ac:	.word	0x76616c00
    80b0:	.word	0x00000000
    80b4:	.word	0x66666572
    80b8:	.word	0x666e7631
    80bc:	.word	0x7336345f
    80c0:	.word	0x74000000
    80c4:	.word	0x5f746573
    80c8:	.word	0xffff0000
    80cc:	.word	0x69640000
    80d0:	.word	0x40400000
    80d4:	ldr	r0, [r9]
    80d8:	bl	0 <flatcc_builder_extend_offset_vector>
    80dc:	add	r3, sp, #88	; 0x58
    80e0:	mov	r2, sl
    80e4:	mov	r1, fp
    80e8:	subs	ip, r0, #0
    80ec:	mov	r0, r9
    80f0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    80f4:	ldr	lr, [sp, #92]	; 0x5c
    80f8:	str	lr, [ip]
    80fc:	bl	54f4 <flatcc_json_parser_array_end>
    8100:	ldr	r3, [sp, #88]	; 0x58
    8104:	cmp	r3, #0
    8108:	mov	fp, r0
    810c:	beq	a124 <MyGame_Example_Monster_parse_json_table+0x35b8>
    8110:	mov	r1, fp
    8114:	mov	r3, r4
    8118:	mov	r2, sl
    811c:	mov	r0, r9
    8120:	bl	6b6c <MyGame_Example_Monster_parse_json_table>
    8124:	ldr	r3, [sp, #92]	; 0x5c
    8128:	mov	r1, r5
    812c:	cmp	r3, #0
    8130:	mov	fp, r0
    8134:	bne	80d4 <MyGame_Example_Monster_parse_json_table+0x1568>
    8138:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    813c:	mov	r3, #2
    8140:	mov	r2, sl
    8144:	mov	r1, fp
    8148:	mov	r0, r9
    814c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8150:	cmp	r0, fp
    8154:	mov	r5, r0
    8158:	beq	727c <MyGame_Example_Monster_parse_json_table+0x710>
    815c:	add	r4, sp, #120	; 0x78
    8160:	mov	r3, #0
    8164:	strh	r3, [r4, #-8]!
    8168:	mov	r1, r0
    816c:	mov	r2, sl
    8170:	mov	r3, r4
    8174:	mov	r0, r9
    8178:	bl	2870 <flatcc_json_parser_int16.constprop.38>
    817c:	cmp	r5, r0
    8180:	mov	fp, r0
    8184:	beq	a488 <MyGame_Example_Monster_parse_json_table+0x391c>
    8188:	ldrsh	r3, [sp, #112]	; 0x70
    818c:	cmp	r3, #100	; 0x64
    8190:	bne	81a0 <MyGame_Example_Monster_parse_json_table+0x1634>
    8194:	ldr	r3, [r9, #8]
    8198:	tst	r3, #2
    819c:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    81a0:	mov	r3, #2
    81a4:	mov	r2, r3
    81a8:	mov	r1, r3
    81ac:	ldr	r0, [r9]
    81b0:	bl	0 <flatcc_builder_table_add>
    81b4:	cmp	r0, #0
    81b8:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    81bc:	ldrsh	r3, [sp, #112]	; 0x70
    81c0:	strh	r3, [r0]
    81c4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    81c8:	mov	r3, #6
    81cc:	mov	r2, sl
    81d0:	mov	r1, fp
    81d4:	mov	r0, r9
    81d8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    81dc:	cmp	r0, fp
    81e0:	mov	r5, r0
    81e4:	beq	7a64 <MyGame_Example_Monster_parse_json_table+0xef8>
    81e8:	add	r4, sp, #120	; 0x78
    81ec:	mov	r3, #0
    81f0:	mov	r1, r0
    81f4:	str	r3, [r4, #-8]!
    81f8:	mov	r2, sl
    81fc:	mov	r0, r9
    8200:	mov	r3, r4
    8204:	bl	0 <flatcc_json_parser_float>
    8208:	cmp	r0, r5
    820c:	mov	fp, r0
    8210:	beq	a684 <MyGame_Example_Monster_parse_json_table+0x3b18>
    8214:	vldr	s15, [pc, #-332]	; 80d0 <MyGame_Example_Monster_parse_json_table+0x1564>
    8218:	vldr	s14, [sp, #112]	; 0x70
    821c:	vcmp.f32	s14, s15
    8220:	vmrs	APSR_nzcv, fpscr
    8224:	bne	8234 <MyGame_Example_Monster_parse_json_table+0x16c8>
    8228:	ldr	r3, [r9, #8]
    822c:	tst	r3, #2
    8230:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8234:	mov	r3, #4
    8238:	mov	r2, r3
    823c:	mov	r1, #26
    8240:	ldr	r0, [r9]
    8244:	bl	0 <flatcc_builder_table_add>
    8248:	cmp	r0, #0
    824c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8250:	ldr	r3, [sp, #112]	; 0x70
    8254:	str	r3, [r0]
    8258:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    825c:	mov	r3, #2
    8260:	mov	r2, sl
    8264:	mov	r1, r4
    8268:	mov	r0, r9
    826c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8270:	cmp	r4, r0
    8274:	mov	fp, r0
    8278:	beq	aa4c <MyGame_Example_Monster_parse_json_table+0x3ee0>
    827c:	mov	r3, #0
    8280:	mov	r1, #3
    8284:	ldr	r0, [r9]
    8288:	str	r3, [sp, #92]	; 0x5c
    828c:	bl	0 <flatcc_builder_start_table>
    8290:	cmp	r0, #0
    8294:	bne	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    8298:	mov	r1, fp
    829c:	add	r3, sp, #108	; 0x6c
    82a0:	mov	r2, sl
    82a4:	mov	r0, r9
    82a8:	bl	2a3c <flatcc_json_parser_object_start>
    82ac:	ldr	r3, [sp, #108]	; 0x6c
    82b0:	cmp	r3, #0
    82b4:	mov	fp, r0
    82b8:	beq	9ad4 <MyGame_Example_Monster_parse_json_table+0x2f68>
    82bc:	add	r7, pc, #940	; 0x3ac
    82c0:	ldrd	r6, [r7]
    82c4:	mov	r8, #5
    82c8:	b	8328 <MyGame_Example_Monster_parse_json_table+0x17bc>
    82cc:	add	r3, pc, #932	; 0x3a4
    82d0:	ldrd	r2, [r3]
    82d4:	mov	r0, #0
    82d8:	cmp	r1, r3
    82dc:	cmpeq	r0, r2
    82e0:	bne	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    82e4:	sub	r3, sl, fp
    82e8:	cmp	r3, #4
    82ec:	bgt	89d0 <MyGame_Example_Monster_parse_json_table+0x1e64>
    82f0:	mov	r1, fp
    82f4:	mov	r2, sl
    82f8:	mov	r0, r9
    82fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8300:	mov	fp, r0
    8304:	mov	r1, fp
    8308:	add	r3, sp, #108	; 0x6c
    830c:	mov	r2, sl
    8310:	mov	r0, r9
    8314:	bl	4ba8 <flatcc_json_parser_object_end>
    8318:	ldr	r3, [sp, #108]	; 0x6c
    831c:	cmp	r3, #0
    8320:	mov	fp, r0
    8324:	beq	9ad4 <MyGame_Example_Monster_parse_json_table+0x2f68>
    8328:	cmp	sl, fp
    832c:	beq	8358 <MyGame_Example_Monster_parse_json_table+0x17ec>
    8330:	ldrb	r3, [fp]
    8334:	cmp	r3, #34	; 0x22
    8338:	moveq	r3, #0
    833c:	addeq	fp, fp, #1
    8340:	streq	r3, [r9, #12]
    8344:	beq	8358 <MyGame_Example_Monster_parse_json_table+0x17ec>
    8348:	cmp	r3, #46	; 0x2e
    834c:	movne	r3, #1
    8350:	strne	r3, [r9, #12]
    8354:	beq	8ce4 <MyGame_Example_Monster_parse_json_table+0x2178>
    8358:	mov	r1, sl
    835c:	mov	r0, fp
    8360:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8364:	cmp	r1, r7
    8368:	cmpeq	r0, r6
    836c:	bls	82cc <MyGame_Example_Monster_parse_json_table+0x1760>
    8370:	add	r5, pc, #776	; 0x308
    8374:	ldrd	r4, [r5]
    8378:	bic	r2, r0, #255	; 0xff
    837c:	cmp	r1, r5
    8380:	cmpeq	r2, r4
    8384:	beq	84c4 <MyGame_Example_Monster_parse_json_table+0x1958>
    8388:	ldr	r2, [pc, #772]	; 8694 <MyGame_Example_Monster_parse_json_table+0x1b28>
    838c:	mvn	r3, #0
    8390:	and	r2, r2, r0
    8394:	and	r3, r3, r1
    8398:	mov	r0, r2
    839c:	mov	r1, r3
    83a0:	add	r3, pc, #736	; 0x2e0
    83a4:	ldrd	r2, [r3]
    83a8:	cmp	r1, r3
    83ac:	cmpeq	r0, r2
    83b0:	bne	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    83b4:	sub	r3, sl, fp
    83b8:	cmp	r3, #6
    83bc:	ble	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    83c0:	mov	r1, fp
    83c4:	mov	r3, #6
    83c8:	mov	r2, sl
    83cc:	mov	r0, r9
    83d0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    83d4:	cmp	r0, fp
    83d8:	mov	r1, r0
    83dc:	beq	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    83e0:	mov	r3, #0
    83e4:	str	r3, [sp]
    83e8:	mov	r2, sl
    83ec:	add	r3, sp, #112	; 0x70
    83f0:	mov	r0, r9
    83f4:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    83f8:	ldr	r3, [sp, #112]	; 0x70
    83fc:	cmp	r3, #0
    8400:	mov	fp, r0
    8404:	beq	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    8408:	mov	r1, #2
    840c:	ldr	r0, [r9]
    8410:	bl	0 <flatcc_builder_table_add_offset>
    8414:	cmp	r0, #0
    8418:	beq	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    841c:	ldr	r3, [sp, #112]	; 0x70
    8420:	str	r3, [r0]
    8424:	b	8304 <MyGame_Example_Monster_parse_json_table+0x1798>
    8428:	sub	r3, sl, fp
    842c:	cmp	r3, #3
    8430:	ble	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    8434:	mov	r3, #3
    8438:	mov	r2, sl
    843c:	mov	r1, fp
    8440:	mov	r0, r9
    8444:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8448:	cmp	r0, fp
    844c:	mov	r5, r0
    8450:	beq	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    8454:	mov	r0, #0
    8458:	mov	r1, #0
    845c:	add	r4, sp, #120	; 0x78
    8460:	mov	r2, sl
    8464:	strd	r0, [r4, #-8]!
    8468:	mov	r1, r5
    846c:	mov	r3, r4
    8470:	mov	r0, r9
    8474:	bl	293c <flatcc_json_parser_int64>
    8478:	cmp	r5, r0
    847c:	mov	fp, r0
    8480:	beq	a440 <MyGame_Example_Monster_parse_json_table+0x38d4>
    8484:	ldrd	r2, [sp, #112]	; 0x70
    8488:	orrs	r3, r2, r3
    848c:	bne	849c <MyGame_Example_Monster_parse_json_table+0x1930>
    8490:	ldr	r3, [r9, #8]
    8494:	tst	r3, #2
    8498:	beq	7c84 <MyGame_Example_Monster_parse_json_table+0x1118>
    849c:	mov	r3, #8
    84a0:	mov	r2, r3
    84a4:	mov	r1, r6
    84a8:	ldr	r0, [r9]
    84ac:	bl	0 <flatcc_builder_table_add>
    84b0:	cmp	r0, #0
    84b4:	beq	8e2c <MyGame_Example_Monster_parse_json_table+0x22c0>
    84b8:	ldrd	r2, [sp, #112]	; 0x70
    84bc:	strd	r2, [r0]
    84c0:	b	7c84 <MyGame_Example_Monster_parse_json_table+0x1118>
    84c4:	sub	r3, sl, fp
    84c8:	cmp	r3, #7
    84cc:	ble	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    84d0:	mov	r1, fp
    84d4:	mov	r3, #7
    84d8:	mov	r2, sl
    84dc:	mov	r0, r9
    84e0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    84e4:	cmp	r0, fp
    84e8:	mov	r1, r0
    84ec:	beq	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    84f0:	mov	r3, #1
    84f4:	str	r3, [sp]
    84f8:	mov	r2, sl
    84fc:	add	r3, sp, #112	; 0x70
    8500:	mov	r0, r9
    8504:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8508:	ldr	r3, [sp, #112]	; 0x70
    850c:	cmp	r3, #0
    8510:	mov	fp, r0
    8514:	beq	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    8518:	mov	r1, #1
    851c:	ldr	r0, [r9]
    8520:	bl	0 <flatcc_builder_table_add_offset>
    8524:	cmp	r0, #0
    8528:	bne	841c <MyGame_Example_Monster_parse_json_table+0x18b0>
    852c:	mov	r1, fp
    8530:	mov	r3, #33	; 0x21
    8534:	mov	r2, sl
    8538:	mov	r0, r9
    853c:	bl	0 <flatcc_json_parser_set_error>
    8540:	ldr	r3, [sp, #92]	; 0x5c
    8544:	cmp	r3, #0
    8548:	mov	fp, r0
    854c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8550:	mov	r1, #35	; 0x23
    8554:	ldr	r0, [r9]
    8558:	bl	0 <flatcc_builder_table_add_offset>
    855c:	cmp	r0, #0
    8560:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8564:	ldr	r3, [sp, #92]	; 0x5c
    8568:	str	r3, [r0]
    856c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8570:	ldr	r0, [r9]
    8574:	bl	0 <flatcc_builder_end_vector>
    8578:	cmp	r0, #0
    857c:	str	r0, [sp, #92]	; 0x5c
    8580:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8584:	mov	r1, #9
    8588:	ldr	r0, [r9]
    858c:	bl	0 <flatcc_builder_table_add_offset>
    8590:	cmp	r0, #0
    8594:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8598:	ldr	r3, [sp, #92]	; 0x5c
    859c:	str	r3, [r0]
    85a0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    85a4:	mov	r3, r8
    85a8:	mov	r2, sl
    85ac:	mov	r1, fp
    85b0:	mov	r0, r9
    85b4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    85b8:	cmp	r0, fp
    85bc:	mov	r4, r0
    85c0:	beq	7c70 <MyGame_Example_Monster_parse_json_table+0x1104>
    85c4:	mov	r2, #0
    85c8:	mov	r3, #0
    85cc:	cmp	sl, r0
    85d0:	strh	r7, [sp, #86]	; 0x56
    85d4:	str	r7, [sp, #108]	; 0x6c
    85d8:	strd	r2, [sp, #112]	; 0x70
    85dc:	beq	9784 <MyGame_Example_Monster_parse_json_table+0x2c18>
    85e0:	add	r3, sp, #112	; 0x70
    85e4:	str	r3, [sp]
    85e8:	mov	r1, r0
    85ec:	add	r3, sp, #108	; 0x6c
    85f0:	mov	r2, sl
    85f4:	mov	r0, r9
    85f8:	bl	0 <flatcc_json_parser_integer>
    85fc:	cmp	r4, r0
    8600:	mov	fp, r0
    8604:	beq	9780 <MyGame_Example_Monster_parse_json_table+0x2c14>
    8608:	ldr	r3, [sp, #108]	; 0x6c
    860c:	cmp	r3, #0
    8610:	bne	9894 <MyGame_Example_Monster_parse_json_table+0x2d28>
    8614:	ldrd	r2, [sp, #112]	; 0x70
    8618:	ldr	r0, [pc, #112]	; 8690 <MyGame_Example_Monster_parse_json_table+0x1b24>
    861c:	mov	r1, #0
    8620:	cmp	r3, r1
    8624:	cmpeq	r2, r0
    8628:	uxthls	r2, r2
    862c:	strhls	r2, [sp, #86]	; 0x56
    8630:	bhi	9a3c <MyGame_Example_Monster_parse_json_table+0x2ed0>
    8634:	cmp	r2, #0
    8638:	bne	8648 <MyGame_Example_Monster_parse_json_table+0x1adc>
    863c:	ldr	r3, [r9, #8]
    8640:	tst	r3, #2
    8644:	beq	7c84 <MyGame_Example_Monster_parse_json_table+0x1118>
    8648:	mov	r3, #2
    864c:	mov	r2, r3
    8650:	mov	r1, r3
    8654:	ldr	r0, [r9]
    8658:	bl	0 <flatcc_builder_table_add>
    865c:	cmp	r0, #0
    8660:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    8664:	ldrh	r3, [sp, #86]	; 0x56
    8668:	strh	r3, [r0]
    866c:	b	7c84 <MyGame_Example_Monster_parse_json_table+0x1118>
    8670:	.word	0x6563ffff
    8674:	.word	0x6e657374
    8678:	.word	0x00000000
    867c:	.word	0x64617461
    8680:	.word	0x61746100
    8684:	.word	0x75726c64
    8688:	.word	0x65640000
    868c:	.word	0x6e657374
    8690:	.word	0x0000ffff
    8694:	.word	0xffff0000
    8698:	.word	0x67320000
    869c:	.word	0x0000011c
    86a0:	.word	0x00000448
    86a4:	.word	0x00000450
    86a8:	.word	0x0000009c
    86ac:	.word	0x000000b4
    86b0:	.word	0x00000000
    86b4:	.word	0x00000100
    86b8:	mov	r1, fp
    86bc:	mov	r3, #5
    86c0:	mov	r2, sl
    86c4:	mov	r0, r9
    86c8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    86cc:	cmp	r0, fp
    86d0:	mov	r1, r0
    86d4:	beq	7798 <MyGame_Example_Monster_parse_json_table+0xc2c>
    86d8:	add	r3, sp, #92	; 0x5c
    86dc:	mov	r2, sl
    86e0:	mov	r0, r9
    86e4:	bl	6b6c <MyGame_Example_Monster_parse_json_table>
    86e8:	ldr	r3, [sp, #92]	; 0x5c
    86ec:	cmp	r3, #0
    86f0:	mov	fp, r0
    86f4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    86f8:	mov	r1, #12
    86fc:	ldr	r0, [r9]
    8700:	bl	0 <flatcc_builder_table_add_offset>
    8704:	cmp	r0, #0
    8708:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    870c:	ldr	r3, [sp, #92]	; 0x5c
    8710:	str	r3, [r0]
    8714:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8718:	add	r4, fp, #16
    871c:	mov	r0, r4
    8720:	mov	r1, sl
    8724:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8728:	ldr	r3, [pc, #-156]	; 8694 <MyGame_Example_Monster_parse_json_table+0x1b28>
    872c:	mov	r2, #0
    8730:	and	r3, r3, r1
    8734:	mov	r7, r1
    8738:	ldr	r1, [pc, #-168]	; 8698 <MyGame_Example_Monster_parse_json_table+0x1b2c>
    873c:	and	r2, r2, r0
    8740:	cmp	r3, r1
    8744:	mov	r0, #0
    8748:	cmpeq	r2, r0
    874c:	beq	9ab0 <MyGame_Example_Monster_parse_json_table+0x2f44>
    8750:	and	r7, r7, #-16777216	; 0xff000000
    8754:	mov	r6, #0
    8758:	cmp	r7, #1728053248	; 0x67000000
    875c:	cmpeq	r6, #0
    8760:	bne	98b8 <MyGame_Example_Monster_parse_json_table+0x2d4c>
    8764:	sub	r3, sl, r4
    8768:	cmp	r3, #1
    876c:	ble	a8ac <MyGame_Example_Monster_parse_json_table+0x3d40>
    8770:	mov	r3, #1
    8774:	mov	r2, sl
    8778:	mov	r1, r4
    877c:	mov	r0, r9
    8780:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8784:	cmp	r4, r0
    8788:	mov	fp, r0
    878c:	beq	a8a8 <MyGame_Example_Monster_parse_json_table+0x3d3c>
    8790:	ldr	r0, [r9]
    8794:	bl	0 <flatcc_builder_start_offset_vector>
    8798:	cmp	r0, #0
    879c:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    87a0:	mov	r1, fp
    87a4:	add	r3, sp, #88	; 0x58
    87a8:	mov	r2, sl
    87ac:	mov	r0, r9
    87b0:	bl	2bc8 <flatcc_json_parser_array_start>
    87b4:	ldr	r3, [sp, #88]	; 0x58
    87b8:	cmp	r3, #0
    87bc:	mov	fp, r0
    87c0:	beq	a544 <MyGame_Example_Monster_parse_json_table+0x39d8>
    87c4:	add	r4, sp, #92	; 0x5c
    87c8:	mov	r5, #1
    87cc:	b	880c <MyGame_Example_Monster_parse_json_table+0x1ca0>
    87d0:	ldr	r0, [r9]
    87d4:	bl	0 <flatcc_builder_extend_offset_vector>
    87d8:	add	r3, sp, #88	; 0x58
    87dc:	mov	r2, sl
    87e0:	mov	r1, fp
    87e4:	subs	ip, r0, #0
    87e8:	mov	r0, r9
    87ec:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    87f0:	ldr	lr, [sp, #92]	; 0x5c
    87f4:	str	lr, [ip]
    87f8:	bl	54f4 <flatcc_json_parser_array_end>
    87fc:	ldr	r3, [sp, #88]	; 0x58
    8800:	cmp	r3, #0
    8804:	mov	fp, r0
    8808:	beq	a544 <MyGame_Example_Monster_parse_json_table+0x39d8>
    880c:	mov	r1, fp
    8810:	mov	r3, r4
    8814:	mov	r2, sl
    8818:	mov	r0, r9
    881c:	bl	0 <flatcc_json_parser_build_string>
    8820:	ldr	r3, [sp, #92]	; 0x5c
    8824:	mov	r1, r5
    8828:	cmp	r3, #0
    882c:	mov	fp, r0
    8830:	bne	87d0 <MyGame_Example_Monster_parse_json_table+0x1c64>
    8834:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8838:	sub	r3, sl, r4
    883c:	cmp	r3, #8
    8840:	ble	7a14 <MyGame_Example_Monster_parse_json_table+0xea8>
    8844:	mov	r3, #8
    8848:	mov	r2, sl
    884c:	mov	r1, r4
    8850:	mov	r0, r9
    8854:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8858:	cmp	r4, r0
    885c:	mov	fp, r0
    8860:	beq	7a10 <MyGame_Example_Monster_parse_json_table+0xea4>
    8864:	mov	r2, #1
    8868:	mov	r1, r2
    886c:	mvn	r3, #0
    8870:	ldr	r0, [r9]
    8874:	bl	0 <flatcc_builder_start_vector>
    8878:	subs	r6, r0, #0
    887c:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8880:	mov	r1, fp
    8884:	add	r3, sp, #88	; 0x58
    8888:	mov	r2, sl
    888c:	mov	r0, r9
    8890:	bl	2bc8 <flatcc_json_parser_array_start>
    8894:	ldr	r3, [sp, #88]	; 0x58
    8898:	cmp	r3, #0
    889c:	mov	fp, r0
    88a0:	beq	99a0 <MyGame_Example_Monster_parse_json_table+0x2e34>
    88a4:	ldr	r7, [pc, #-520]	; 86a4 <MyGame_Example_Monster_parse_json_table+0x1b38>
    88a8:	mov	r5, #1
    88ac:	b	88d8 <MyGame_Example_Monster_parse_json_table+0x1d6c>
    88b0:	ldrb	r2, [sp, #108]	; 0x6c
    88b4:	add	r3, sp, #88	; 0x58
    88b8:	mov	r0, r9
    88bc:	strb	r2, [r4]
    88c0:	mov	r2, sl
    88c4:	bl	54f4 <flatcc_json_parser_array_end>
    88c8:	ldr	r3, [sp, #88]	; 0x58
    88cc:	cmp	r3, #0
    88d0:	mov	fp, r0
    88d4:	beq	99a0 <MyGame_Example_Monster_parse_json_table+0x2e34>
    88d8:	mov	r1, r5
    88dc:	ldr	r0, [r9]
    88e0:	strb	r6, [sp, #108]	; 0x6c
    88e4:	bl	0 <flatcc_builder_extend_vector>
    88e8:	subs	r4, r0, #0
    88ec:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    88f0:	sub	r8, sl, fp
    88f4:	cmp	r8, #3
    88f8:	ble	8944 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    88fc:	ldr	r1, [pc, #-612]	; 86a0 <MyGame_Example_Monster_parse_json_table+0x1b34>
    8900:	mov	r2, #4
    8904:	mov	r0, fp
    8908:	bl	0 <memcmp>
    890c:	cmp	r0, #0
    8910:	strbeq	r5, [sp, #108]	; 0x6c
    8914:	addeq	r1, fp, #4
    8918:	beq	896c <MyGame_Example_Monster_parse_json_table+0x1e00>
    891c:	cmp	r8, #4
    8920:	beq	8944 <MyGame_Example_Monster_parse_json_table+0x1dd8>
    8924:	mov	r1, r7
    8928:	mov	r2, #5
    892c:	mov	r0, fp
    8930:	bl	0 <memcmp>
    8934:	cmp	r0, #0
    8938:	strbeq	r0, [sp, #108]	; 0x6c
    893c:	addeq	r1, fp, #5
    8940:	beq	896c <MyGame_Example_Monster_parse_json_table+0x1e00>
    8944:	add	r3, sp, #112	; 0x70
    8948:	mov	r1, fp
    894c:	mov	r2, sl
    8950:	mov	r0, r9
    8954:	bl	26f4 <flatcc_json_parser_uint8>
    8958:	ldrb	r3, [sp, #112]	; 0x70
    895c:	adds	r3, r3, #0
    8960:	movne	r3, #1
    8964:	strb	r3, [sp, #108]	; 0x6c
    8968:	mov	r1, r0
    896c:	cmp	r1, fp
    8970:	bne	88b0 <MyGame_Example_Monster_parse_json_table+0x1d44>
    8974:	add	r3, sp, #108	; 0x6c
    8978:	str	r3, [sp]
    897c:	mov	r1, fp
    8980:	ldr	r3, [pc, #-748]	; 869c <MyGame_Example_Monster_parse_json_table+0x1b30>
    8984:	mov	r2, sl
    8988:	mov	r0, r9
    898c:	bl	3070 <flatcc_json_parser_symbolic_bool>
    8990:	cmp	sl, r0
    8994:	cmpne	r0, fp
    8998:	mov	r1, r0
    899c:	bne	88b0 <MyGame_Example_Monster_parse_json_table+0x1d44>
    89a0:	mov	r3, sl
    89a4:	mov	fp, r0
    89a8:	mov	sl, r9
    89ac:	mov	r9, r3
    89b0:	b	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    89b4:	mov	r1, fp
    89b8:	mov	r3, r8
    89bc:	mov	r2, sl
    89c0:	mov	r0, r9
    89c4:	bl	0 <flatcc_json_parser_set_error>
    89c8:	mov	fp, r0
    89cc:	b	7cd0 <MyGame_Example_Monster_parse_json_table+0x1164>
    89d0:	mov	r1, fp
    89d4:	mov	r3, #4
    89d8:	mov	r2, sl
    89dc:	mov	r0, r9
    89e0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    89e4:	cmp	r0, fp
    89e8:	mov	r1, r0
    89ec:	beq	82f0 <MyGame_Example_Monster_parse_json_table+0x1784>
    89f0:	mov	r5, #0
    89f4:	add	r3, sp, #112	; 0x70
    89f8:	str	r5, [sp]
    89fc:	mov	r2, sl
    8a00:	mov	r0, r9
    8a04:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    8a08:	ldr	r3, [sp, #112]	; 0x70
    8a0c:	cmp	r3, r5
    8a10:	mov	fp, r0
    8a14:	beq	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    8a18:	mov	r1, r5
    8a1c:	ldr	r0, [r9]
    8a20:	bl	0 <flatcc_builder_table_add_offset>
    8a24:	cmp	r0, #0
    8a28:	bne	841c <MyGame_Example_Monster_parse_json_table+0x18b0>
    8a2c:	b	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    8a30:	mov	r3, #8
    8a34:	mov	r2, sl
    8a38:	mov	r1, fp
    8a3c:	mov	r0, r9
    8a40:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8a44:	cmp	r0, fp
    8a48:	mov	r4, r0
    8a4c:	beq	73c8 <MyGame_Example_Monster_parse_json_table+0x85c>
    8a50:	sub	r5, sl, r0
    8a54:	mov	r3, #0
    8a58:	cmp	r5, #3
    8a5c:	strb	r3, [sp, #104]	; 0x68
    8a60:	ble	8a9c <MyGame_Example_Monster_parse_json_table+0x1f30>
    8a64:	mov	r2, #4
    8a68:	ldr	r1, [pc, #-976]	; 86a0 <MyGame_Example_Monster_parse_json_table+0x1b34>
    8a6c:	bl	0 <memcmp>
    8a70:	cmp	r0, #0
    8a74:	beq	9770 <MyGame_Example_Monster_parse_json_table+0x2c04>
    8a78:	cmp	r5, #4
    8a7c:	beq	8a9c <MyGame_Example_Monster_parse_json_table+0x1f30>
    8a80:	mov	r2, #5
    8a84:	ldr	r1, [pc, #-1000]	; 86a4 <MyGame_Example_Monster_parse_json_table+0x1b38>
    8a88:	mov	r0, r4
    8a8c:	bl	0 <memcmp>
    8a90:	cmp	r0, #0
    8a94:	addeq	fp, r4, #5
    8a98:	beq	8b20 <MyGame_Example_Monster_parse_json_table+0x1fb4>
    8a9c:	mov	r0, #0
    8aa0:	mov	r1, #0
    8aa4:	mov	r3, #0
    8aa8:	cmp	sl, r4
    8aac:	strd	r0, [sp, #112]	; 0x70
    8ab0:	str	r3, [sp, #108]	; 0x6c
    8ab4:	beq	971c <MyGame_Example_Monster_parse_json_table+0x2bb0>
    8ab8:	add	r3, sp, #112	; 0x70
    8abc:	str	r3, [sp]
    8ac0:	mov	r2, sl
    8ac4:	add	r3, sp, #108	; 0x6c
    8ac8:	mov	r1, r4
    8acc:	mov	r0, r9
    8ad0:	bl	0 <flatcc_json_parser_integer>
    8ad4:	cmp	r4, r0
    8ad8:	mov	fp, r0
    8adc:	beq	971c <MyGame_Example_Monster_parse_json_table+0x2bb0>
    8ae0:	ldr	r3, [sp, #108]	; 0x6c
    8ae4:	cmp	r3, #0
    8ae8:	bne	9dc4 <MyGame_Example_Monster_parse_json_table+0x3258>
    8aec:	ldrd	r2, [sp, #112]	; 0x70
    8af0:	cmp	r3, #0
    8af4:	cmpeq	r2, #255	; 0xff
    8af8:	bhi	a1e8 <MyGame_Example_Monster_parse_json_table+0x367c>
    8afc:	tst	r2, #255	; 0xff
    8b00:	movne	r3, #1
    8b04:	moveq	r3, #0
    8b08:	strb	r3, [sp, #104]	; 0x68
    8b0c:	cmp	r3, #1
    8b10:	bne	8b20 <MyGame_Example_Monster_parse_json_table+0x1fb4>
    8b14:	ldr	r3, [r9, #8]
    8b18:	tst	r3, #2
    8b1c:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8b20:	mov	r3, #1
    8b24:	mov	r2, r3
    8b28:	mov	r1, #15
    8b2c:	ldr	r0, [r9]
    8b30:	bl	0 <flatcc_builder_table_add>
    8b34:	cmp	r0, #0
    8b38:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8b3c:	ldrb	r3, [sp, #104]	; 0x68
    8b40:	strb	r3, [r0]
    8b44:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8b48:	mov	r3, #4
    8b4c:	mov	r2, sl
    8b50:	mov	r1, fp
    8b54:	mov	r0, r9
    8b58:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8b5c:	cmp	r0, fp
    8b60:	mov	r4, r0
    8b64:	beq	7508 <MyGame_Example_Monster_parse_json_table+0x99c>
    8b68:	mov	r2, #1
    8b6c:	mov	r1, r2
    8b70:	mvn	r3, #0
    8b74:	ldr	r0, [r9]
    8b78:	bl	0 <flatcc_builder_start_vector>
    8b7c:	subs	r6, r0, #0
    8b80:	bne	a1d4 <MyGame_Example_Monster_parse_json_table+0x3668>
    8b84:	add	r3, sp, #88	; 0x58
    8b88:	mov	r1, r4
    8b8c:	mov	r2, sl
    8b90:	mov	r0, r9
    8b94:	bl	2bc8 <flatcc_json_parser_array_start>
    8b98:	ldr	r3, [sp, #88]	; 0x58
    8b9c:	cmp	r3, #0
    8ba0:	mov	fp, r0
    8ba4:	beq	8c50 <MyGame_Example_Monster_parse_json_table+0x20e4>
    8ba8:	ldr	r8, [pc, #-1288]	; 86a8 <MyGame_Example_Monster_parse_json_table+0x1b3c>
    8bac:	mov	r7, #1
    8bb0:	add	r5, sp, #112	; 0x70
    8bb4:	b	8be4 <MyGame_Example_Monster_parse_json_table+0x2078>
    8bb8:	ldrb	r2, [sp, #112]	; 0x70
    8bbc:	mov	r1, r0
    8bc0:	add	r3, sp, #88	; 0x58
    8bc4:	strb	r2, [r4]
    8bc8:	mov	r0, r9
    8bcc:	mov	r2, sl
    8bd0:	bl	54f4 <flatcc_json_parser_array_end>
    8bd4:	ldr	r3, [sp, #88]	; 0x58
    8bd8:	cmp	r3, #0
    8bdc:	mov	fp, r0
    8be0:	beq	8c50 <MyGame_Example_Monster_parse_json_table+0x20e4>
    8be4:	mov	r1, r7
    8be8:	ldr	r0, [r9]
    8bec:	strb	r6, [sp, #112]	; 0x70
    8bf0:	bl	0 <flatcc_builder_extend_vector>
    8bf4:	mov	r1, fp
    8bf8:	mov	r3, r5
    8bfc:	mov	r2, sl
    8c00:	subs	r4, r0, #0
    8c04:	mov	r0, r9
    8c08:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8c0c:	bl	26f4 <flatcc_json_parser_uint8>
    8c10:	cmp	r0, fp
    8c14:	bne	8bb8 <MyGame_Example_Monster_parse_json_table+0x204c>
    8c18:	str	r5, [sp]
    8c1c:	mov	r3, r8
    8c20:	mov	r2, sl
    8c24:	mov	r1, fp
    8c28:	mov	r0, r9
    8c2c:	bl	3d70 <flatcc_json_parser_symbolic_uint8>
    8c30:	cmp	sl, r0
    8c34:	cmpne	r0, fp
    8c38:	bne	8bb8 <MyGame_Example_Monster_parse_json_table+0x204c>
    8c3c:	mov	r3, sl
    8c40:	mov	fp, r0
    8c44:	mov	sl, r9
    8c48:	mov	r9, r3
    8c4c:	b	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    8c50:	ldr	r0, [r9]
    8c54:	bl	0 <flatcc_builder_end_vector>
    8c58:	cmp	r0, #0
    8c5c:	str	r0, [sp, #92]	; 0x5c
    8c60:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8c64:	mov	r1, #30
    8c68:	ldr	r0, [r9]
    8c6c:	bl	0 <flatcc_builder_table_add_offset>
    8c70:	cmp	r0, #0
    8c74:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8c78:	ldr	r3, [sp, #92]	; 0x5c
    8c7c:	str	r3, [r0]
    8c80:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8c84:	mov	r1, fp
    8c88:	mov	r3, #4
    8c8c:	mov	r2, sl
    8c90:	mov	r0, r9
    8c94:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8c98:	cmp	r0, fp
    8c9c:	mov	r1, r0
    8ca0:	beq	74e4 <MyGame_Example_Monster_parse_json_table+0x978>
    8ca4:	add	r3, sp, #92	; 0x5c
    8ca8:	mov	r2, sl
    8cac:	mov	r0, r9
    8cb0:	bl	0 <flatcc_json_parser_build_string>
    8cb4:	ldr	r3, [sp, #92]	; 0x5c
    8cb8:	cmp	r3, #0
    8cbc:	mov	fp, r0
    8cc0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8cc4:	mov	r1, #3
    8cc8:	ldr	r0, [r9]
    8ccc:	bl	0 <flatcc_builder_table_add_offset>
    8cd0:	cmp	r0, #0
    8cd4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8cd8:	ldr	r3, [sp, #92]	; 0x5c
    8cdc:	str	r3, [r0]
    8ce0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8ce4:	mov	r1, fp
    8ce8:	mov	r3, r8
    8cec:	mov	r2, sl
    8cf0:	mov	r0, r9
    8cf4:	bl	0 <flatcc_json_parser_set_error>
    8cf8:	mov	fp, r0
    8cfc:	b	8358 <MyGame_Example_Monster_parse_json_table+0x17ec>
    8d00:	add	r4, fp, #8
    8d04:	mov	r0, r4
    8d08:	mov	r1, sl
    8d0c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    8d10:	mov	r0, #0
    8d14:	and	r1, r1, #-16777216	; 0xff000000
    8d18:	cmp	r1, #2030043136	; 0x79000000
    8d1c:	cmpeq	r0, #0
    8d20:	bne	984c <MyGame_Example_Monster_parse_json_table+0x2ce0>
    8d24:	sub	r3, sl, r4
    8d28:	cmp	r3, #1
    8d2c:	ble	a890 <MyGame_Example_Monster_parse_json_table+0x3d24>
    8d30:	mov	r3, #1
    8d34:	mov	r2, sl
    8d38:	mov	r1, r4
    8d3c:	mov	r0, r9
    8d40:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8d44:	cmp	r4, r0
    8d48:	mov	fp, r0
    8d4c:	beq	a88c <MyGame_Example_Monster_parse_json_table+0x3d20>
    8d50:	mov	r2, #1
    8d54:	mov	r1, r2
    8d58:	mvn	r3, #0
    8d5c:	ldr	r0, [r9]
    8d60:	bl	0 <flatcc_builder_start_vector>
    8d64:	cmp	r0, #0
    8d68:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8d6c:	mov	r1, fp
    8d70:	add	r3, sp, #88	; 0x58
    8d74:	mov	r2, sl
    8d78:	mov	r0, r9
    8d7c:	bl	2bc8 <flatcc_json_parser_array_start>
    8d80:	ldr	r3, [sp, #88]	; 0x58
    8d84:	cmp	r3, #0
    8d88:	mov	fp, r0
    8d8c:	beq	a158 <MyGame_Example_Monster_parse_json_table+0x35ec>
    8d90:	ldr	r8, [pc, #-1772]	; 86ac <MyGame_Example_Monster_parse_json_table+0x1b40>
    8d94:	mov	r7, #0
    8d98:	mov	r6, #1
    8d9c:	add	r5, sp, #112	; 0x70
    8da0:	b	8dd0 <MyGame_Example_Monster_parse_json_table+0x2264>
    8da4:	ldrb	r2, [sp, #112]	; 0x70
    8da8:	mov	r1, r0
    8dac:	add	r3, sp, #88	; 0x58
    8db0:	strb	r2, [r4]
    8db4:	mov	r0, r9
    8db8:	mov	r2, sl
    8dbc:	bl	54f4 <flatcc_json_parser_array_end>
    8dc0:	ldr	r3, [sp, #88]	; 0x58
    8dc4:	cmp	r3, #0
    8dc8:	mov	fp, r0
    8dcc:	beq	a158 <MyGame_Example_Monster_parse_json_table+0x35ec>
    8dd0:	mov	r1, r6
    8dd4:	ldr	r0, [r9]
    8dd8:	strb	r7, [sp, #112]	; 0x70
    8ddc:	bl	0 <flatcc_builder_extend_vector>
    8de0:	mov	r1, fp
    8de4:	mov	r3, r5
    8de8:	mov	r2, sl
    8dec:	subs	r4, r0, #0
    8df0:	mov	r0, r9
    8df4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8df8:	bl	26f4 <flatcc_json_parser_uint8>
    8dfc:	cmp	r0, fp
    8e00:	bne	8da4 <MyGame_Example_Monster_parse_json_table+0x2238>
    8e04:	str	r5, [sp]
    8e08:	mov	r3, r8
    8e0c:	mov	r2, sl
    8e10:	mov	r1, fp
    8e14:	mov	r0, r9
    8e18:	bl	3d70 <flatcc_json_parser_symbolic_uint8>
    8e1c:	cmp	sl, r0
    8e20:	cmpne	r0, fp
    8e24:	bne	8da4 <MyGame_Example_Monster_parse_json_table+0x2238>
    8e28:	b	8c3c <MyGame_Example_Monster_parse_json_table+0x20d0>
    8e2c:	mov	r0, fp
    8e30:	mov	fp, r0
    8e34:	mov	r1, fp
    8e38:	mov	r3, #33	; 0x21
    8e3c:	mov	r2, sl
    8e40:	mov	r0, r9
    8e44:	bl	0 <flatcc_json_parser_set_error>
    8e48:	ldr	r3, [sp, #92]	; 0x5c
    8e4c:	cmp	r3, #0
    8e50:	mov	fp, r0
    8e54:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8e58:	mov	r1, #14
    8e5c:	ldr	r0, [r9]
    8e60:	bl	0 <flatcc_builder_table_add_offset>
    8e64:	cmp	r0, #0
    8e68:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8e6c:	ldr	r3, [sp, #92]	; 0x5c
    8e70:	str	r3, [r0]
    8e74:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8e78:	ldr	r0, [r9]
    8e7c:	bl	0 <flatcc_builder_end_vector>
    8e80:	cmp	r0, #0
    8e84:	str	r0, [sp, #92]	; 0x5c
    8e88:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8e8c:	mov	r1, #31
    8e90:	ldr	r0, [r9]
    8e94:	bl	0 <flatcc_builder_table_add_offset>
    8e98:	cmp	r0, #0
    8e9c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    8ea0:	ldr	r3, [sp, #92]	; 0x5c
    8ea4:	str	r3, [r0]
    8ea8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8eac:	mov	r1, fp
    8eb0:	mov	r3, #4
    8eb4:	mov	r2, sl
    8eb8:	mov	r0, r9
    8ebc:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8ec0:	cmp	r0, fp
    8ec4:	mov	r1, r0
    8ec8:	beq	6ef8 <MyGame_Example_Monster_parse_json_table+0x38c>
    8ecc:	ldr	r2, [sp, #96]	; 0x60
    8ed0:	ldr	ip, [pc, #-2088]	; 86b0 <MyGame_Example_Monster_parse_json_table+0x1b44>
    8ed4:	mov	r3, #8
    8ed8:	str	r3, [sp]
    8edc:	stmib	sp, {r2, ip}
    8ee0:	mov	r3, #0
    8ee4:	mov	r2, sl
    8ee8:	mov	r0, r9
    8eec:	bl	0 <flatcc_json_parser_union>
    8ef0:	mov	fp, r0
    8ef4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8ef8:	mov	r3, #3
    8efc:	mov	r2, sl
    8f00:	mov	r1, fp
    8f04:	mov	r0, r9
    8f08:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    8f0c:	cmp	r0, fp
    8f10:	mov	r5, r0
    8f14:	beq	7220 <MyGame_Example_Monster_parse_json_table+0x6b4>
    8f18:	mov	r3, #16
    8f1c:	mov	r2, #32
    8f20:	mov	r1, #0
    8f24:	ldr	r0, [r9]
    8f28:	bl	0 <flatcc_builder_table_add>
    8f2c:	subs	r6, r0, #0
    8f30:	beq	a934 <MyGame_Example_Monster_parse_json_table+0x3dc8>
    8f34:	add	r3, sp, #104	; 0x68
    8f38:	mov	r1, r5
    8f3c:	mov	r2, sl
    8f40:	mov	r0, r9
    8f44:	bl	2a3c <flatcc_json_parser_object_start>
    8f48:	ldr	r3, [sp, #104]	; 0x68
    8f4c:	cmp	r3, #0
    8f50:	mov	fp, r0
    8f54:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    8f58:	str	r6, [sp, #64]	; 0x40
    8f5c:	ldr	r8, [pc, #-2224]	; 86b4 <MyGame_Example_Monster_parse_json_table+0x1b48>
    8f60:	vldr	s18, [pc, #896]	; 92e8 <MyGame_Example_Monster_parse_json_table+0x277c>
    8f64:	vldr	d8, [pc, #852]	; 92c0 <MyGame_Example_Monster_parse_json_table+0x2754>
    8f68:	ldrd	r6, [sp, #72]	; 0x48
    8f6c:	b	90f8 <MyGame_Example_Monster_parse_json_table+0x258c>
    8f70:	ldrb	r2, [fp, #7]
    8f74:	mov	r3, #0
    8f78:	ldrb	r0, [fp, #6]
    8f7c:	lsr	lr, r0, #24
    8f80:	lsl	r1, r0, #8
    8f84:	str	lr, [sp, #60]	; 0x3c
    8f88:	str	r1, [sp, #56]	; 0x38
    8f8c:	ldrd	r0, [sp, #56]	; 0x38
    8f90:	orr	r0, r0, r2
    8f94:	orr	r1, r1, r3
    8f98:	mov	r2, r0
    8f9c:	mov	r3, r1
    8fa0:	ldrb	r0, [fp, #5]
    8fa4:	lsr	lr, r0, #16
    8fa8:	lsl	r1, r0, #16
    8fac:	str	lr, [sp, #52]	; 0x34
    8fb0:	str	r1, [sp, #48]	; 0x30
    8fb4:	ldrd	r0, [sp, #48]	; 0x30
    8fb8:	orr	r0, r0, r2
    8fbc:	orr	r1, r1, r3
    8fc0:	mov	r2, r0
    8fc4:	mov	r3, r1
    8fc8:	ldrb	r0, [fp, #4]
    8fcc:	lsr	lr, r0, #8
    8fd0:	lsl	r1, r0, #24
    8fd4:	str	lr, [sp, #36]	; 0x24
    8fd8:	str	r1, [sp, #32]
    8fdc:	ldrd	r0, [sp, #32]
    8fe0:	orr	r0, r0, r2
    8fe4:	orr	r1, r1, r3
    8fe8:	mov	r2, r0
    8fec:	mov	r3, r1
    8ff0:	ldrb	r1, [fp, #3]
    8ff4:	str	r1, [sp, #44]	; 0x2c
    8ff8:	mov	r1, #0
    8ffc:	str	r1, [sp, #40]	; 0x28
    9000:	ldrd	r0, [sp, #40]	; 0x28
    9004:	orr	r0, r0, r2
    9008:	orr	r1, r1, r3
    900c:	mov	r2, r0
    9010:	mov	r3, r1
    9014:	ldrb	r0, [fp, #2]
    9018:	lsl	r1, r0, #8
    901c:	str	r1, [sp, #28]
    9020:	mov	r1, #0
    9024:	str	r1, [sp, #24]
    9028:	ldrd	r0, [sp, #24]
    902c:	orr	r0, r0, r2
    9030:	orr	r1, r1, r3
    9034:	mov	r2, r0
    9038:	mov	r3, r1
    903c:	ldrb	r0, [fp, #1]
    9040:	lsl	r1, r0, #16
    9044:	str	r1, [sp, #20]
    9048:	mov	r1, #0
    904c:	str	r1, [sp, #16]
    9050:	ldrd	r0, [sp, #16]
    9054:	orr	r0, r0, r2
    9058:	orr	r1, r1, r3
    905c:	mov	r2, r0
    9060:	mov	r3, r1
    9064:	ldrb	r4, [fp]
    9068:	add	r1, pc, #600	; 0x258
    906c:	ldrd	r0, [r1]
    9070:	mov	r6, #0
    9074:	orr	r2, r2, r6
    9078:	lsl	r7, r4, #24
    907c:	orr	r3, r3, r7
    9080:	cmp	r3, r1
    9084:	cmpeq	r2, r0
    9088:	bls	91b8 <MyGame_Example_Monster_parse_json_table+0x264c>
    908c:	mvn	r1, #-2013265920	; 0x88000000
    9090:	mvn	r0, #0
    9094:	cmp	r3, r1
    9098:	cmpeq	r2, r0
    909c:	bhi	9244 <MyGame_Example_Monster_parse_json_table+0x26d8>
    90a0:	add	r1, pc, #552	; 0x228
    90a4:	ldrd	r0, [r1]
    90a8:	and	r2, r2, #-16777216	; 0xff000000
    90ac:	cmp	r3, r1
    90b0:	cmpeq	r2, r0
    90b4:	bne	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    90b8:	cmp	ip, #5
    90bc:	bgt	9474 <MyGame_Example_Monster_parse_json_table+0x2908>
    90c0:	mov	r1, fp
    90c4:	mov	r2, sl
    90c8:	mov	r0, r9
    90cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    90d0:	mov	r4, r0
    90d4:	add	r3, sp, #104	; 0x68
    90d8:	mov	r1, r4
    90dc:	mov	r2, sl
    90e0:	mov	r0, r9
    90e4:	bl	4ba8 <flatcc_json_parser_object_end>
    90e8:	ldr	r3, [sp, #104]	; 0x68
    90ec:	cmp	r3, #0
    90f0:	mov	fp, r0
    90f4:	beq	9514 <MyGame_Example_Monster_parse_json_table+0x29a8>
    90f8:	cmp	sl, fp
    90fc:	beq	9418 <MyGame_Example_Monster_parse_json_table+0x28ac>
    9100:	ldrb	r3, [fp]
    9104:	cmp	r3, #34	; 0x22
    9108:	moveq	r3, #0
    910c:	addeq	fp, fp, #1
    9110:	streq	r3, [r9, #12]
    9114:	beq	9128 <MyGame_Example_Monster_parse_json_table+0x25bc>
    9118:	cmp	r3, #46	; 0x2e
    911c:	movne	r3, #1
    9120:	strne	r3, [r9, #12]
    9124:	beq	9420 <MyGame_Example_Monster_parse_json_table+0x28b4>
    9128:	sub	ip, sl, fp
    912c:	cmp	ip, #8
    9130:	bhi	8f70 <MyGame_Example_Monster_parse_json_table+0x2404>
    9134:	sub	r3, ip, #1
    9138:	cmp	r3, #7
    913c:	ldrls	pc, [pc, r3, lsl #2]
    9140:	b	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9144:	.word	0x000091ac
    9148:	.word	0x000091a0
    914c:	.word	0x00009194
    9150:	.word	0x00009188
    9154:	.word	0x0000917c
    9158:	.word	0x00009170
    915c:	.word	0x00009164
    9160:	.word	0x00008f70
    9164:	mov	r2, #0
    9168:	mov	r3, #0
    916c:	b	8f78 <MyGame_Example_Monster_parse_json_table+0x240c>
    9170:	mov	r2, #0
    9174:	mov	r3, #0
    9178:	b	8fa0 <MyGame_Example_Monster_parse_json_table+0x2434>
    917c:	mov	r2, #0
    9180:	mov	r3, #0
    9184:	b	8fc8 <MyGame_Example_Monster_parse_json_table+0x245c>
    9188:	mov	r2, #0
    918c:	mov	r3, #0
    9190:	b	8ff0 <MyGame_Example_Monster_parse_json_table+0x2484>
    9194:	mov	r2, #0
    9198:	mov	r3, #0
    919c:	b	9014 <MyGame_Example_Monster_parse_json_table+0x24a8>
    91a0:	mov	r2, #0
    91a4:	mov	r3, #0
    91a8:	b	903c <MyGame_Example_Monster_parse_json_table+0x24d0>
    91ac:	mov	r2, #0
    91b0:	mov	r3, #0
    91b4:	b	9064 <MyGame_Example_Monster_parse_json_table+0x24f8>
    91b8:	add	r1, pc, #280	; 0x118
    91bc:	ldrd	r0, [r1]
    91c0:	and	r2, r2, #-16777216	; 0xff000000
    91c4:	cmp	r3, r1
    91c8:	cmpeq	r2, r0
    91cc:	beq	92f8 <MyGame_Example_Monster_parse_json_table+0x278c>
    91d0:	add	r1, pc, #264	; 0x108
    91d4:	ldrd	r0, [r1]
    91d8:	cmp	r3, r1
    91dc:	cmpeq	r2, r0
    91e0:	bne	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    91e4:	cmp	ip, #5
    91e8:	ble	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    91ec:	mov	r3, #5
    91f0:	mov	r2, sl
    91f4:	mov	r1, fp
    91f8:	mov	r0, r9
    91fc:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9200:	cmp	r0, fp
    9204:	mov	r5, r0
    9208:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    920c:	add	fp, sp, #120	; 0x78
    9210:	mov	r1, r0
    9214:	vstmdb	fp!, {d8}
    9218:	mov	r2, sl
    921c:	mov	r0, r9
    9220:	mov	r3, fp
    9224:	bl	0 <flatcc_json_parser_double>
    9228:	cmp	r5, r0
    922c:	mov	r4, r0
    9230:	beq	9538 <MyGame_Example_Monster_parse_json_table+0x29cc>
    9234:	ldrd	r2, [sp, #112]	; 0x70
    9238:	ldr	r1, [sp, #64]	; 0x40
    923c:	strd	r2, [r1, #16]
    9240:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    9244:	mvn	r1, #-2030043136	; 0x87000000
    9248:	mvn	r0, #0
    924c:	cmp	r3, r1
    9250:	cmpeq	r2, r0
    9254:	bhi	9394 <MyGame_Example_Monster_parse_json_table+0x2828>
    9258:	cmp	ip, #1
    925c:	ble	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9260:	mov	r3, #1
    9264:	mov	r2, sl
    9268:	mov	r1, fp
    926c:	mov	r0, r9
    9270:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9274:	cmp	r0, fp
    9278:	mov	r5, r0
    927c:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9280:	vmov	r3, s18
    9284:	add	fp, sp, #120	; 0x78
    9288:	mov	r1, r0
    928c:	mov	r2, sl
    9290:	str	r3, [fp, #-8]!
    9294:	mov	r0, r9
    9298:	mov	r3, fp
    929c:	bl	0 <flatcc_json_parser_float>
    92a0:	cmp	r5, r0
    92a4:	mov	r4, r0
    92a8:	beq	9a10 <MyGame_Example_Monster_parse_json_table+0x2ea4>
    92ac:	ldr	r2, [sp, #64]	; 0x40
    92b0:	ldr	r3, [sp, #112]	; 0x70
    92b4:	str	r3, [r2]
    92b8:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    92bc:	nop			; (mov r0, r0)
	...
    92c8:	.word	0x32ffffff
    92cc:	.word	0x74657374
    92d0:	.word	0x33000000
    92d4:	.word	0x74657374
    92d8:	.word	0x32000000
    92dc:	.word	0x74657374
    92e0:	.word	0x31000000
    92e4:	.word	0x74657374
    92e8:	.word	0x00000000
    92ec:	.word	0x000000dc
    92f0:	.word	0x000000cc
    92f4:	.word	0x0000008c
    92f8:	cmp	ip, #5
    92fc:	ble	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9300:	mov	r3, #5
    9304:	mov	r2, sl
    9308:	mov	r1, fp
    930c:	mov	r0, r9
    9310:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9314:	cmp	r0, fp
    9318:	mov	r5, r0
    931c:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9320:	mov	r2, #0
    9324:	mov	r3, #0
    9328:	cmp	sl, r0
    932c:	strb	r6, [sp, #100]	; 0x64
    9330:	str	r6, [sp, #108]	; 0x6c
    9334:	strd	r2, [sp, #112]	; 0x70
    9338:	beq	9564 <MyGame_Example_Monster_parse_json_table+0x29f8>
    933c:	add	r3, sp, #112	; 0x70
    9340:	str	r3, [sp]
    9344:	mov	r1, r0
    9348:	add	r3, sp, #108	; 0x6c
    934c:	mov	r2, sl
    9350:	mov	r0, r9
    9354:	bl	0 <flatcc_json_parser_integer>
    9358:	cmp	r5, r0
    935c:	mov	r4, r0
    9360:	beq	9564 <MyGame_Example_Monster_parse_json_table+0x29f8>
    9364:	ldr	r1, [sp, #108]	; 0x6c
    9368:	ldrd	r2, [sp, #112]	; 0x70
    936c:	cmp	r1, r6
    9370:	beq	943c <MyGame_Example_Monster_parse_json_table+0x28d0>
    9374:	cmp	r3, #0
    9378:	cmpeq	r2, #128	; 0x80
    937c:	rsbls	r2, r2, #0
    9380:	sxtbls	r2, r2
    9384:	bhi	951c <MyGame_Example_Monster_parse_json_table+0x29b0>
    9388:	ldr	r3, [sp, #64]	; 0x40
    938c:	strb	r2, [r3, #24]
    9390:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    9394:	and	r3, r3, #-16777216	; 0xff000000
    9398:	mov	r2, #0
    939c:	cmp	r3, #2046820352	; 0x7a000000
    93a0:	cmpeq	r2, #0
    93a4:	beq	94b0 <MyGame_Example_Monster_parse_json_table+0x2944>
    93a8:	cmp	r3, #2030043136	; 0x79000000
    93ac:	cmpeq	r2, #0
    93b0:	bne	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    93b4:	cmp	ip, #1
    93b8:	ble	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    93bc:	mov	r3, #1
    93c0:	mov	r2, sl
    93c4:	mov	r1, fp
    93c8:	mov	r0, r9
    93cc:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    93d0:	cmp	r0, fp
    93d4:	mov	r5, r0
    93d8:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    93dc:	vmov	r3, s18
    93e0:	add	fp, sp, #120	; 0x78
    93e4:	mov	r1, r0
    93e8:	mov	r2, sl
    93ec:	str	r3, [fp, #-8]!
    93f0:	mov	r0, r9
    93f4:	mov	r3, fp
    93f8:	bl	0 <flatcc_json_parser_float>
    93fc:	cmp	r5, r0
    9400:	mov	r4, r0
    9404:	beq	9c68 <MyGame_Example_Monster_parse_json_table+0x30fc>
    9408:	ldr	r2, [sp, #64]	; 0x40
    940c:	ldr	r3, [sp, #112]	; 0x70
    9410:	str	r3, [r2, #4]
    9414:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    9418:	mov	fp, sl
    941c:	b	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9420:	mov	r1, fp
    9424:	mov	r3, #5
    9428:	mov	r2, sl
    942c:	mov	r0, r9
    9430:	bl	0 <flatcc_json_parser_set_error>
    9434:	mov	fp, r0
    9438:	b	9128 <MyGame_Example_Monster_parse_json_table+0x25bc>
    943c:	cmp	r3, #0
    9440:	cmpeq	r2, #127	; 0x7f
    9444:	sxtbls	r2, r2
    9448:	bls	9388 <MyGame_Example_Monster_parse_json_table+0x281c>
    944c:	mov	r1, r0
    9450:	mov	r3, #7
    9454:	mov	r2, sl
    9458:	mov	r0, r9
    945c:	bl	0 <flatcc_json_parser_set_error>
    9460:	mov	r4, r0
    9464:	cmp	r5, r4
    9468:	beq	9564 <MyGame_Example_Monster_parse_json_table+0x29f8>
    946c:	ldrsb	r2, [sp, #100]	; 0x64
    9470:	b	9388 <MyGame_Example_Monster_parse_json_table+0x281c>
    9474:	mov	r1, fp
    9478:	mov	r3, #5
    947c:	mov	r2, sl
    9480:	mov	r0, r9
    9484:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9488:	cmp	r0, fp
    948c:	mov	r1, r0
    9490:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    9494:	ldr	r3, [sp, #64]	; 0x40
    9498:	mov	r2, sl
    949c:	add	r3, r3, #26
    94a0:	mov	r0, r9
    94a4:	bl	6310 <MyGame_Example_Test_parse_json_struct_inline>
    94a8:	mov	r4, r0
    94ac:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    94b0:	cmp	ip, #1
    94b4:	ble	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    94b8:	mov	r3, #1
    94bc:	mov	r2, sl
    94c0:	mov	r1, fp
    94c4:	mov	r0, r9
    94c8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    94cc:	cmp	r0, fp
    94d0:	mov	r5, r0
    94d4:	beq	90c0 <MyGame_Example_Monster_parse_json_table+0x2554>
    94d8:	vmov	r3, s18
    94dc:	add	fp, sp, #120	; 0x78
    94e0:	mov	r1, r0
    94e4:	mov	r2, sl
    94e8:	str	r3, [fp, #-8]!
    94ec:	mov	r0, r9
    94f0:	mov	r3, fp
    94f4:	bl	0 <flatcc_json_parser_float>
    94f8:	cmp	r5, r0
    94fc:	mov	r4, r0
    9500:	beq	a1a8 <MyGame_Example_Monster_parse_json_table+0x363c>
    9504:	ldr	r2, [sp, #64]	; 0x40
    9508:	ldr	r3, [sp, #112]	; 0x70
    950c:	str	r3, [r2, #8]
    9510:	b	90d4 <MyGame_Example_Monster_parse_json_table+0x2568>
    9514:	strd	r6, [sp, #72]	; 0x48
    9518:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    951c:	mov	r1, r0
    9520:	mov	r3, #8
    9524:	mov	r2, sl
    9528:	mov	r0, r9
    952c:	bl	0 <flatcc_json_parser_set_error>
    9530:	mov	r4, r0
    9534:	b	9464 <MyGame_Example_Monster_parse_json_table+0x28f8>
    9538:	mov	r1, r0
    953c:	str	fp, [sp]
    9540:	ldr	r3, [pc, #-604]	; 92ec <MyGame_Example_Monster_parse_json_table+0x2780>
    9544:	mov	r2, sl
    9548:	mov	r0, r9
    954c:	bl	2e74 <flatcc_json_parser_symbolic_double>
    9550:	cmp	sl, r0
    9554:	cmpne	r4, r0
    9558:	beq	a974 <MyGame_Example_Monster_parse_json_table+0x3e08>
    955c:	mov	r4, r0
    9560:	b	9234 <MyGame_Example_Monster_parse_json_table+0x26c8>
    9564:	add	r3, sp, #100	; 0x64
    9568:	str	r3, [sp]
    956c:	mov	r2, sl
    9570:	ldr	r3, [pc, #-648]	; 92f0 <MyGame_Example_Monster_parse_json_table+0x2784>
    9574:	mov	r1, r5
    9578:	mov	r0, r9
    957c:	bl	36dc <flatcc_json_parser_symbolic_int8>
    9580:	cmp	sl, r0
    9584:	cmpne	r0, r5
    9588:	mov	r4, r0
    958c:	bne	946c <MyGame_Example_Monster_parse_json_table+0x2900>
    9590:	strd	r6, [sp, #72]	; 0x48
    9594:	mov	r1, r4
    9598:	mov	r3, #33	; 0x21
    959c:	mov	r2, sl
    95a0:	mov	r0, r9
    95a4:	bl	0 <flatcc_json_parser_set_error>
    95a8:	mov	fp, r0
    95ac:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    95b0:	mov	r4, r0
    95b4:	add	r3, sp, #104	; 0x68
    95b8:	str	r3, [sp]
    95bc:	mov	r2, sl
    95c0:	ldr	r3, [pc, #-724]	; 92f4 <MyGame_Example_Monster_parse_json_table+0x2788>
    95c4:	mov	r1, r4
    95c8:	mov	r0, r9
    95cc:	bl	36dc <flatcc_json_parser_symbolic_int8>
    95d0:	cmp	sl, r0
    95d4:	cmpne	r0, r4
    95d8:	mov	fp, r0
    95dc:	bne	7b7c <MyGame_Example_Monster_parse_json_table+0x1010>
    95e0:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    95e4:	add	r4, fp, #16
    95e8:	mov	r0, r4
    95ec:	mov	r1, sl
    95f0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    95f4:	mov	r0, #0
    95f8:	and	r1, r1, #-16777216	; 0xff000000
    95fc:	cmp	r1, #1929379840	; 0x73000000
    9600:	cmpeq	r0, #0
    9604:	bne	99d4 <MyGame_Example_Monster_parse_json_table+0x2e68>
    9608:	sub	r3, sl, r4
    960c:	cmp	r3, #1
    9610:	ble	a904 <MyGame_Example_Monster_parse_json_table+0x3d98>
    9614:	mov	r3, #1
    9618:	mov	r2, sl
    961c:	mov	r1, r4
    9620:	mov	r0, r9
    9624:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9628:	cmp	r4, r0
    962c:	mov	fp, r0
    9630:	beq	a900 <MyGame_Example_Monster_parse_json_table+0x3d94>
    9634:	mov	r2, #8
    9638:	mov	r1, r2
    963c:	mvn	r3, #-536870912	; 0xe0000000
    9640:	ldr	r0, [r9]
    9644:	bl	0 <flatcc_builder_start_vector>
    9648:	cmp	r0, #0
    964c:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9650:	mov	r1, fp
    9654:	add	r3, sp, #88	; 0x58
    9658:	mov	r2, sl
    965c:	mov	r0, r9
    9660:	bl	2bc8 <flatcc_json_parser_array_start>
    9664:	ldr	r3, [sp, #88]	; 0x58
    9668:	cmp	r3, #0
    966c:	mov	fp, r0
    9670:	beq	a40c <MyGame_Example_Monster_parse_json_table+0x38a0>
    9674:	vldr	d8, [pc, #988]	; 9a58 <MyGame_Example_Monster_parse_json_table+0x2eec>
    9678:	ldr	r7, [pc, #996]	; 9a64 <MyGame_Example_Monster_parse_json_table+0x2ef8>
    967c:	mov	r6, #1
    9680:	add	r5, sp, #112	; 0x70
    9684:	b	96b4 <MyGame_Example_Monster_parse_json_table+0x2b48>
    9688:	vldr	d7, [sp, #112]	; 0x70
    968c:	mov	r1, r0
    9690:	add	r3, sp, #88	; 0x58
    9694:	mov	r2, sl
    9698:	vstr	d7, [r4]
    969c:	mov	r0, r9
    96a0:	bl	54f4 <flatcc_json_parser_array_end>
    96a4:	ldr	r3, [sp, #88]	; 0x58
    96a8:	cmp	r3, #0
    96ac:	mov	fp, r0
    96b0:	beq	a40c <MyGame_Example_Monster_parse_json_table+0x38a0>
    96b4:	mov	r1, r6
    96b8:	ldr	r0, [r9]
    96bc:	vstr	d8, [sp, #112]	; 0x70
    96c0:	bl	0 <flatcc_builder_extend_vector>
    96c4:	mov	r1, fp
    96c8:	mov	r3, r5
    96cc:	mov	r2, sl
    96d0:	subs	r4, r0, #0
    96d4:	mov	r0, r9
    96d8:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    96dc:	bl	0 <flatcc_json_parser_double>
    96e0:	cmp	r0, fp
    96e4:	bne	9688 <MyGame_Example_Monster_parse_json_table+0x2b1c>
    96e8:	str	r5, [sp]
    96ec:	mov	r3, r7
    96f0:	mov	r2, sl
    96f4:	mov	r1, fp
    96f8:	mov	r0, r9
    96fc:	bl	2e74 <flatcc_json_parser_symbolic_double>
    9700:	cmp	sl, r0
    9704:	cmpne	r0, fp
    9708:	bne	9688 <MyGame_Example_Monster_parse_json_table+0x2b1c>
    970c:	mov	r3, sl
    9710:	mov	sl, r9
    9714:	mov	r9, r3
    9718:	b	6d38 <MyGame_Example_Monster_parse_json_table+0x1cc>
    971c:	mov	r3, #0
    9720:	strb	r3, [sp, #104]	; 0x68
    9724:	add	r3, sp, #104	; 0x68
    9728:	str	r3, [sp]
    972c:	mov	r2, sl
    9730:	ldr	r3, [pc, #816]	; 9a68 <MyGame_Example_Monster_parse_json_table+0x2efc>
    9734:	mov	r1, r4
    9738:	mov	r0, r9
    973c:	bl	3070 <flatcc_json_parser_symbolic_bool>
    9740:	cmp	sl, r0
    9744:	cmpne	r0, r4
    9748:	mov	fp, r0
    974c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9750:	ldrb	r3, [sp, #104]	; 0x68
    9754:	b	8b0c <MyGame_Example_Monster_parse_json_table+0x1fa0>
    9758:	mov	r1, r4
    975c:	mov	r2, sl
    9760:	mov	r0, r9
    9764:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9768:	mov	fp, r0
    976c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9770:	mov	r3, #1
    9774:	add	fp, r4, #4
    9778:	strb	r3, [sp, #104]	; 0x68
    977c:	b	8b14 <MyGame_Example_Monster_parse_json_table+0x1fa8>
    9780:	mov	r4, r0
    9784:	add	r3, sp, #86	; 0x56
    9788:	str	r3, [sp]
    978c:	mov	r2, sl
    9790:	ldr	r3, [pc, #724]	; 9a6c <MyGame_Example_Monster_parse_json_table+0x2f00>
    9794:	mov	r1, r4
    9798:	mov	r0, r9
    979c:	bl	327c <flatcc_json_parser_symbolic_uint16>
    97a0:	cmp	sl, r0
    97a4:	cmpne	r0, r4
    97a8:	mov	fp, r0
    97ac:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    97b0:	ldrh	r2, [sp, #86]	; 0x56
    97b4:	b	8634 <MyGame_Example_Monster_parse_json_table+0x1ac8>
    97b8:	mov	r3, #5
    97bc:	mov	r2, sl
    97c0:	mov	r1, fp
    97c4:	mov	r0, r9
    97c8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    97cc:	cmp	r0, fp
    97d0:	mov	r5, r0
    97d4:	beq	7124 <MyGame_Example_Monster_parse_json_table+0x5b8>
    97d8:	add	r4, sp, #120	; 0x78
    97dc:	mov	r3, #0
    97e0:	mov	r1, r0
    97e4:	str	r3, [r4, #-8]!
    97e8:	mov	r2, sl
    97ec:	mov	r0, r9
    97f0:	mov	r3, r4
    97f4:	bl	0 <flatcc_json_parser_float>
    97f8:	cmp	r0, r5
    97fc:	mov	fp, r0
    9800:	beq	a578 <MyGame_Example_Monster_parse_json_table+0x3a0c>
    9804:	vldr	s15, [pc, #596]	; 9a60 <MyGame_Example_Monster_parse_json_table+0x2ef4>
    9808:	vldr	s14, [sp, #112]	; 0x70
    980c:	vcmp.f32	s14, s15
    9810:	vmrs	APSR_nzcv, fpscr
    9814:	bne	9824 <MyGame_Example_Monster_parse_json_table+0x2cb8>
    9818:	ldr	r3, [r9, #8]
    981c:	tst	r3, #2
    9820:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9824:	mov	r3, #4
    9828:	mov	r2, r3
    982c:	mov	r1, #25
    9830:	ldr	r0, [r9]
    9834:	bl	0 <flatcc_builder_table_add>
    9838:	cmp	r0, #0
    983c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9840:	ldr	r3, [sp, #112]	; 0x70
    9844:	str	r3, [r0]
    9848:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    984c:	mov	r1, r4
    9850:	mov	r2, sl
    9854:	mov	r0, r9
    9858:	bl	0 <flatcc_json_parser_unmatched_symbol>
    985c:	mov	fp, r0
    9860:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9864:	mov	r1, fp
    9868:	mov	r2, sl
    986c:	mov	r0, r9
    9870:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9874:	mov	fp, r0
    9878:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    987c:	mov	r1, fp
    9880:	mov	r2, sl
    9884:	mov	r0, r9
    9888:	bl	0 <flatcc_json_parser_unmatched_symbol>
    988c:	mov	fp, r0
    9890:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9894:	mov	r1, r0
    9898:	mov	r3, #8
    989c:	mov	r2, sl
    98a0:	mov	r0, r9
    98a4:	bl	0 <flatcc_json_parser_set_error>
    98a8:	mov	fp, r0
    98ac:	cmp	r4, fp
    98b0:	bne	97b0 <MyGame_Example_Monster_parse_json_table+0x2c44>
    98b4:	b	9784 <MyGame_Example_Monster_parse_json_table+0x2c18>
    98b8:	mov	r1, r4
    98bc:	mov	r2, sl
    98c0:	mov	r0, r9
    98c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    98c8:	mov	fp, r0
    98cc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    98d0:	mov	r1, r0
    98d4:	str	r4, [sp]
    98d8:	ldr	r3, [pc, #400]	; 9a70 <MyGame_Example_Monster_parse_json_table+0x2f04>
    98dc:	mov	r2, sl
    98e0:	mov	r0, r9
    98e4:	bl	2c7c <flatcc_json_parser_symbolic_float>
    98e8:	cmp	sl, r0
    98ec:	cmpne	fp, r0
    98f0:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    98f4:	mov	fp, r0
    98f8:	b	756c <MyGame_Example_Monster_parse_json_table+0xa00>
    98fc:	mov	r3, #4
    9900:	mov	r2, sl
    9904:	mov	r1, fp
    9908:	mov	r0, r9
    990c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9910:	cmp	r0, fp
    9914:	mov	r5, r0
    9918:	beq	7b90 <MyGame_Example_Monster_parse_json_table+0x1024>
    991c:	add	r4, sp, #120	; 0x78
    9920:	mov	r3, #0
    9924:	strh	r3, [r4, #-8]!
    9928:	mov	r1, r0
    992c:	mov	r2, sl
    9930:	mov	r3, r4
    9934:	mov	r0, r9
    9938:	bl	2870 <flatcc_json_parser_int16.constprop.38>
    993c:	cmp	r0, r5
    9940:	mov	fp, r0
    9944:	beq	a860 <MyGame_Example_Monster_parse_json_table+0x3cf4>
    9948:	ldrsh	r3, [sp, #112]	; 0x70
    994c:	cmp	r3, #150	; 0x96
    9950:	bne	9960 <MyGame_Example_Monster_parse_json_table+0x2df4>
    9954:	ldr	r3, [r9, #8]
    9958:	tst	r3, #2
    995c:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9960:	mov	r3, #2
    9964:	mov	r2, r3
    9968:	mov	r1, #1
    996c:	ldr	r0, [r9]
    9970:	bl	0 <flatcc_builder_table_add>
    9974:	cmp	r0, #0
    9978:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    997c:	ldrsh	r3, [sp, #112]	; 0x70
    9980:	strh	r3, [r0]
    9984:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9988:	mov	r1, fp
    998c:	mov	r2, sl
    9990:	mov	r0, r9
    9994:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9998:	mov	fp, r0
    999c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    99a0:	ldr	r0, [r9]
    99a4:	bl	0 <flatcc_builder_end_vector>
    99a8:	cmp	r0, #0
    99ac:	str	r0, [sp, #92]	; 0x5c
    99b0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    99b4:	mov	r1, #24
    99b8:	ldr	r0, [r9]
    99bc:	bl	0 <flatcc_builder_table_add_offset>
    99c0:	cmp	r0, #0
    99c4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    99c8:	ldr	r3, [sp, #92]	; 0x5c
    99cc:	str	r3, [r0]
    99d0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    99d4:	mov	r1, r4
    99d8:	mov	r2, sl
    99dc:	mov	r0, r9
    99e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99e4:	mov	fp, r0
    99e8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    99ec:	ldr	r3, [r9, #24]
    99f0:	cmp	r3, #0
    99f4:	bne	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    99f8:	ldr	r0, [r9]
    99fc:	bl	0 <flatcc_builder_end_table>
    9a00:	cmp	r0, #0
    9a04:	str	r0, [sp, #92]	; 0x5c
    9a08:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x22c8>
    9a0c:	b	8e58 <MyGame_Example_Monster_parse_json_table+0x22ec>
    9a10:	mov	r1, r0
    9a14:	str	fp, [sp]
    9a18:	ldr	r3, [pc, #84]	; 9a74 <MyGame_Example_Monster_parse_json_table+0x2f08>
    9a1c:	mov	r2, sl
    9a20:	mov	r0, r9
    9a24:	bl	2c7c <flatcc_json_parser_symbolic_float>
    9a28:	cmp	sl, r0
    9a2c:	cmpne	r4, r0
    9a30:	beq	a974 <MyGame_Example_Monster_parse_json_table+0x3e08>
    9a34:	mov	r4, r0
    9a38:	b	92ac <MyGame_Example_Monster_parse_json_table+0x2740>
    9a3c:	mov	r1, fp
    9a40:	mov	r3, #7
    9a44:	mov	r2, sl
    9a48:	mov	r0, r9
    9a4c:	bl	0 <flatcc_json_parser_set_error>
    9a50:	mov	fp, r0
    9a54:	b	98ac <MyGame_Example_Monster_parse_json_table+0x2d40>
	...
    9a60:	.word	0x489965e0
    9a64:	.word	0x000001f4
    9a68:	.word	0x00000140
    9a6c:	.word	0x0000014c
    9a70:	.word	0x0000017c
    9a74:	.word	0x000000e8
    9a78:	.word	0x00000200
    9a7c:	ldr	r3, [sp, #96]	; 0x60
    9a80:	mov	r2, r9
    9a84:	mov	r0, sl
    9a88:	bl	0 <flatcc_json_parser_finalize_unions>
    9a8c:	mov	fp, r0
    9a90:	ldr	r0, [sl]
    9a94:	bl	0 <flatcc_builder_end_table>
    9a98:	ldr	r3, [sp, #68]	; 0x44
    9a9c:	cmp	r0, #0
    9aa0:	str	r0, [r3]
    9aa4:	beq	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    9aa8:	mov	r0, fp
    9aac:	b	6d50 <MyGame_Example_Monster_parse_json_table+0x1e4>
    9ab0:	sub	r3, sl, r4
    9ab4:	cmp	r3, #2
    9ab8:	bgt	a5a4 <MyGame_Example_Monster_parse_json_table+0x3a38>
    9abc:	mov	r1, r4
    9ac0:	mov	r2, sl
    9ac4:	mov	r0, r9
    9ac8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9acc:	mov	fp, r0
    9ad0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9ad4:	ldr	r3, [r9, #24]
    9ad8:	cmp	r3, #0
    9adc:	bne	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    9ae0:	ldr	r0, [r9]
    9ae4:	bl	0 <flatcc_builder_end_table>
    9ae8:	cmp	r0, #0
    9aec:	str	r0, [sp, #92]	; 0x5c
    9af0:	beq	852c <MyGame_Example_Monster_parse_json_table+0x19c0>
    9af4:	b	8550 <MyGame_Example_Monster_parse_json_table+0x19e4>
    9af8:	mov	r3, #8
    9afc:	mov	r2, sl
    9b00:	mov	r1, fp
    9b04:	mov	r0, r9
    9b08:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9b0c:	cmp	fp, r0
    9b10:	mov	r5, r0
    9b14:	beq	7ed4 <MyGame_Example_Monster_parse_json_table+0x1368>
    9b18:	add	r4, sp, #120	; 0x78
    9b1c:	mov	r3, #0
    9b20:	str	r3, [r4, #-8]!
    9b24:	mov	r1, r0
    9b28:	mov	r2, sl
    9b2c:	mov	r3, r4
    9b30:	mov	r0, r9
    9b34:	bl	27a8 <flatcc_json_parser_int32.constprop.39>
    9b38:	cmp	r0, r5
    9b3c:	mov	fp, r0
    9b40:	beq	a8d4 <MyGame_Example_Monster_parse_json_table+0x3d68>
    9b44:	ldr	r3, [sp, #112]	; 0x70
    9b48:	cmp	r3, #0
    9b4c:	bne	9b5c <MyGame_Example_Monster_parse_json_table+0x2ff0>
    9b50:	ldr	r3, [r9, #8]
    9b54:	tst	r3, #2
    9b58:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9b5c:	mov	r3, #4
    9b60:	mov	r2, r3
    9b64:	mov	r1, #16
    9b68:	ldr	r0, [r9]
    9b6c:	bl	0 <flatcc_builder_table_add>
    9b70:	cmp	r0, #0
    9b74:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    9b78:	ldr	r3, [sp, #112]	; 0x70
    9b7c:	str	r3, [r0]
    9b80:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9b84:	sub	r3, sl, fp
    9b88:	cmp	r3, #8
    9b8c:	bgt	a6b0 <MyGame_Example_Monster_parse_json_table+0x3b44>
    9b90:	add	fp, fp, #8
    9b94:	mov	r0, fp
    9b98:	mov	r1, sl
    9b9c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9ba0:	mov	r0, #0
    9ba4:	and	r1, r1, #-16777216	; 0xff000000
    9ba8:	cmp	r1, #1627389952	; 0x61000000
    9bac:	cmpeq	r0, #0
    9bb0:	bne	a91c <MyGame_Example_Monster_parse_json_table+0x3db0>
    9bb4:	sub	r3, sl, fp
    9bb8:	cmp	r3, #1
    9bbc:	ble	a980 <MyGame_Example_Monster_parse_json_table+0x3e14>
    9bc0:	mov	r3, #1
    9bc4:	mov	r2, sl
    9bc8:	mov	r1, fp
    9bcc:	mov	r0, r9
    9bd0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9bd4:	cmp	fp, r0
    9bd8:	mov	r4, r0
    9bdc:	beq	a984 <MyGame_Example_Monster_parse_json_table+0x3e18>
    9be0:	add	r5, sp, #120	; 0x78
    9be4:	mov	r3, #0
    9be8:	str	r3, [r5, #-8]!
    9bec:	mov	r1, r0
    9bf0:	mov	r2, sl
    9bf4:	mov	r3, r5
    9bf8:	mov	r0, r9
    9bfc:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    9c00:	cmp	r0, r4
    9c04:	mov	fp, r0
    9c08:	beq	aac4 <MyGame_Example_Monster_parse_json_table+0x3f58>
    9c0c:	ldr	r3, [sp, #112]	; 0x70
    9c10:	cmp	r3, #0
    9c14:	bne	9c24 <MyGame_Example_Monster_parse_json_table+0x30b8>
    9c18:	ldr	r3, [r9, #8]
    9c1c:	tst	r3, #2
    9c20:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9c24:	mov	r3, #4
    9c28:	mov	r2, r3
    9c2c:	mov	r1, #21
    9c30:	ldr	r0, [r9]
    9c34:	bl	0 <flatcc_builder_table_add>
    9c38:	cmp	r0, #0
    9c3c:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    9c40:	ldr	r3, [sp, #112]	; 0x70
    9c44:	str	r3, [r0]
    9c48:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9c4c:	mov	r1, r0
    9c50:	mov	r3, #7
    9c54:	mov	r2, sl
    9c58:	mov	r0, r9
    9c5c:	bl	0 <flatcc_json_parser_set_error>
    9c60:	mov	fp, r0
    9c64:	b	7b74 <MyGame_Example_Monster_parse_json_table+0x1008>
    9c68:	mov	r1, r0
    9c6c:	str	fp, [sp]
    9c70:	mov	r3, r8
    9c74:	mov	r2, sl
    9c78:	mov	r0, r9
    9c7c:	bl	2c7c <flatcc_json_parser_symbolic_float>
    9c80:	cmp	sl, r0
    9c84:	cmpne	r4, r0
    9c88:	beq	a974 <MyGame_Example_Monster_parse_json_table+0x3e08>
    9c8c:	mov	r4, r0
    9c90:	b	9408 <MyGame_Example_Monster_parse_json_table+0x289c>
    9c94:	mov	r3, #7
    9c98:	mov	r2, sl
    9c9c:	mov	r1, r4
    9ca0:	mov	r0, r9
    9ca4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9ca8:	cmp	r4, r0
    9cac:	mov	fp, r0
    9cb0:	beq	aa90 <MyGame_Example_Monster_parse_json_table+0x3f24>
    9cb4:	mov	r2, #8
    9cb8:	mov	r1, r2
    9cbc:	mvn	r3, #-536870912	; 0xe0000000
    9cc0:	ldr	r0, [r9]
    9cc4:	bl	0 <flatcc_builder_start_vector>
    9cc8:	cmp	r0, #0
    9ccc:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9cd0:	mov	r1, fp
    9cd4:	add	r3, sp, #88	; 0x58
    9cd8:	mov	r2, sl
    9cdc:	mov	r0, r9
    9ce0:	bl	2bc8 <flatcc_json_parser_array_start>
    9ce4:	ldr	r3, [sp, #88]	; 0x58
    9ce8:	cmp	r3, #0
    9cec:	mov	fp, r0
    9cf0:	beq	9d90 <MyGame_Example_Monster_parse_json_table+0x3224>
    9cf4:	mov	r8, #1
    9cf8:	add	r7, sp, #112	; 0x70
    9cfc:	b	9d2c <MyGame_Example_Monster_parse_json_table+0x31c0>
    9d00:	ldrd	r4, [sp, #112]	; 0x70
    9d04:	mov	r1, r0
    9d08:	add	r3, sp, #88	; 0x58
    9d0c:	strd	r4, [r6]
    9d10:	mov	r2, sl
    9d14:	mov	r0, r9
    9d18:	bl	54f4 <flatcc_json_parser_array_end>
    9d1c:	ldr	r3, [sp, #88]	; 0x58
    9d20:	cmp	r3, #0
    9d24:	mov	fp, r0
    9d28:	beq	9d90 <MyGame_Example_Monster_parse_json_table+0x3224>
    9d2c:	mov	r2, #0
    9d30:	mov	r3, #0
    9d34:	mov	r1, r8
    9d38:	ldr	r0, [r9]
    9d3c:	strd	r2, [sp, #112]	; 0x70
    9d40:	bl	0 <flatcc_builder_extend_vector>
    9d44:	mov	r1, fp
    9d48:	mov	r3, r7
    9d4c:	mov	r2, sl
    9d50:	subs	r6, r0, #0
    9d54:	mov	r0, r9
    9d58:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9d5c:	bl	293c <flatcc_json_parser_int64>
    9d60:	cmp	r0, fp
    9d64:	bne	9d00 <MyGame_Example_Monster_parse_json_table+0x3194>
    9d68:	str	r7, [sp]
    9d6c:	ldr	r3, [pc, #-764]	; 9a78 <MyGame_Example_Monster_parse_json_table+0x2f0c>
    9d70:	mov	r2, sl
    9d74:	mov	r1, fp
    9d78:	mov	r0, r9
    9d7c:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    9d80:	cmp	sl, r0
    9d84:	cmpne	r0, fp
    9d88:	bne	9d00 <MyGame_Example_Monster_parse_json_table+0x3194>
    9d8c:	b	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    9d90:	ldr	r0, [r9]
    9d94:	bl	0 <flatcc_builder_end_vector>
    9d98:	cmp	r0, #0
    9d9c:	str	r0, [sp, #92]	; 0x5c
    9da0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9da4:	mov	r1, #32
    9da8:	ldr	r0, [r9]
    9dac:	bl	0 <flatcc_builder_table_add_offset>
    9db0:	cmp	r0, #0
    9db4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9db8:	ldr	r3, [sp, #92]	; 0x5c
    9dbc:	str	r3, [r0]
    9dc0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    9dc4:	mov	r1, r0
    9dc8:	mov	r3, #8
    9dcc:	mov	r2, sl
    9dd0:	mov	r0, r9
    9dd4:	bl	0 <flatcc_json_parser_set_error>
    9dd8:	mov	fp, r0
    9ddc:	mov	r3, #0
    9de0:	cmp	r4, fp
    9de4:	strb	r3, [sp, #104]	; 0x68
    9de8:	bne	8b20 <MyGame_Example_Monster_parse_json_table+0x1fb4>
    9dec:	b	9724 <MyGame_Example_Monster_parse_json_table+0x2bb8>
    9df0:	mov	r3, #7
    9df4:	mov	r2, sl
    9df8:	mov	r1, r4
    9dfc:	mov	r0, r9
    9e00:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9e04:	cmp	r4, r0
    9e08:	mov	fp, r0
    9e0c:	beq	ab30 <MyGame_Example_Monster_parse_json_table+0x3fc4>
    9e10:	mvn	r3, #-536870912	; 0xe0000000
    9e14:	mov	r2, #4
    9e18:	mov	r1, #8
    9e1c:	ldr	r0, [r9]
    9e20:	bl	0 <flatcc_builder_start_vector>
    9e24:	cmp	r0, #0
    9e28:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9e2c:	mov	r1, fp
    9e30:	add	r3, sp, #88	; 0x58
    9e34:	mov	r2, sl
    9e38:	mov	r0, r9
    9e3c:	bl	2bc8 <flatcc_json_parser_array_start>
    9e40:	ldr	r3, [sp, #88]	; 0x58
    9e44:	cmp	r3, #0
    9e48:	mov	fp, r0
    9e4c:	beq	a090 <MyGame_Example_Monster_parse_json_table+0x3524>
    9e50:	mov	r8, #1
    9e54:	mov	r1, r8
    9e58:	ldr	r0, [r9]
    9e5c:	bl	0 <flatcc_builder_extend_vector>
    9e60:	subs	r5, r0, #0
    9e64:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    9e68:	add	r3, sp, #108	; 0x6c
    9e6c:	mov	r1, fp
    9e70:	mov	r2, sl
    9e74:	mov	r0, r9
    9e78:	bl	2a3c <flatcc_json_parser_object_start>
    9e7c:	ldr	r3, [sp, #108]	; 0x6c
    9e80:	cmp	r3, #0
    9e84:	mov	r4, r0
    9e88:	beq	a06c <MyGame_Example_Monster_parse_json_table+0x3500>
    9e8c:	mov	fp, #0
    9e90:	b	9eec <MyGame_Example_Monster_parse_json_table+0x3380>
    9e94:	add	r3, pc, #876	; 0x36c
    9e98:	ldrd	r2, [r3]
    9e9c:	cmp	r7, r3
    9ea0:	cmpeq	r6, r2
    9ea4:	bne	9eb4 <MyGame_Example_Monster_parse_json_table+0x3348>
    9ea8:	sub	r3, sl, r4
    9eac:	cmp	r3, #8
    9eb0:	bgt	9fa8 <MyGame_Example_Monster_parse_json_table+0x343c>
    9eb4:	mov	r1, r4
    9eb8:	mov	r2, sl
    9ebc:	mov	r0, r9
    9ec0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ec4:	mov	r4, r0
    9ec8:	mov	r1, r4
    9ecc:	add	r3, sp, #108	; 0x6c
    9ed0:	mov	r2, sl
    9ed4:	mov	r0, r9
    9ed8:	bl	4ba8 <flatcc_json_parser_object_end>
    9edc:	ldr	r3, [sp, #108]	; 0x6c
    9ee0:	cmp	r3, #0
    9ee4:	mov	r4, r0
    9ee8:	beq	a06c <MyGame_Example_Monster_parse_json_table+0x3500>
    9eec:	cmp	sl, r4
    9ef0:	beq	9ff8 <MyGame_Example_Monster_parse_json_table+0x348c>
    9ef4:	ldrb	r3, [r4]
    9ef8:	cmp	r3, #34	; 0x22
    9efc:	addeq	r4, r4, #1
    9f00:	streq	fp, [r9, #12]
    9f04:	beq	9f14 <MyGame_Example_Monster_parse_json_table+0x33a8>
    9f08:	cmp	r3, #46	; 0x2e
    9f0c:	strne	r8, [r9, #12]
    9f10:	beq	a038 <MyGame_Example_Monster_parse_json_table+0x34cc>
    9f14:	mov	r1, sl
    9f18:	mov	r0, r4
    9f1c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    9f20:	ldr	r3, [pc, #744]	; a210 <MyGame_Example_Monster_parse_json_table+0x36a4>
    9f24:	mov	r2, #0
    9f28:	and	r3, r3, r1
    9f2c:	mov	r7, r1
    9f30:	ldr	r1, [pc, #732]	; a214 <MyGame_Example_Monster_parse_json_table+0x36a8>
    9f34:	and	r2, r2, r0
    9f38:	mov	r6, r0
    9f3c:	cmp	r3, r1
    9f40:	mov	r0, #0
    9f44:	cmpeq	r2, r0
    9f48:	bne	9e94 <MyGame_Example_Monster_parse_json_table+0x3328>
    9f4c:	sub	r3, sl, r4
    9f50:	cmp	r3, #2
    9f54:	ble	9eb4 <MyGame_Example_Monster_parse_json_table+0x3348>
    9f58:	mov	r3, #2
    9f5c:	mov	r2, sl
    9f60:	mov	r1, r4
    9f64:	mov	r0, r9
    9f68:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9f6c:	cmp	r0, r4
    9f70:	mov	r6, r0
    9f74:	beq	9eb4 <MyGame_Example_Monster_parse_json_table+0x3348>
    9f78:	mov	r1, r0
    9f7c:	add	r3, sp, #112	; 0x70
    9f80:	mov	r2, sl
    9f84:	mov	r0, r9
    9f88:	str	fp, [sp, #112]	; 0x70
    9f8c:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    9f90:	cmp	r6, r0
    9f94:	mov	r4, r0
    9f98:	beq	a0f4 <MyGame_Example_Monster_parse_json_table+0x3588>
    9f9c:	ldr	r3, [sp, #112]	; 0x70
    9fa0:	str	r3, [r5]
    9fa4:	b	9ec8 <MyGame_Example_Monster_parse_json_table+0x335c>
    9fa8:	mov	r3, #8
    9fac:	mov	r2, sl
    9fb0:	mov	r1, r4
    9fb4:	mov	r0, r9
    9fb8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    9fbc:	cmp	r4, r0
    9fc0:	mov	r6, r0
    9fc4:	beq	9eb4 <MyGame_Example_Monster_parse_json_table+0x3348>
    9fc8:	mov	r1, r0
    9fcc:	add	r3, sp, #112	; 0x70
    9fd0:	mov	r2, sl
    9fd4:	mov	r0, r9
    9fd8:	str	fp, [sp, #112]	; 0x70
    9fdc:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    9fe0:	cmp	r6, r0
    9fe4:	mov	r4, r0
    9fe8:	beq	a0c4 <MyGame_Example_Monster_parse_json_table+0x3558>
    9fec:	ldr	r3, [sp, #112]	; 0x70
    9ff0:	str	r3, [r5, #4]
    9ff4:	b	9ec8 <MyGame_Example_Monster_parse_json_table+0x335c>
    9ff8:	mov	r1, sl
    9ffc:	mov	r0, sl
    a000:	bl	0 <flatcc_json_parser_symbol_part_ext>
    a004:	ldr	r3, [pc, #516]	; a210 <MyGame_Example_Monster_parse_json_table+0x36a4>
    a008:	mov	r2, #0
    a00c:	mov	r4, sl
    a010:	and	r3, r3, r1
    a014:	mov	r7, r1
    a018:	ldr	r1, [pc, #500]	; a214 <MyGame_Example_Monster_parse_json_table+0x36a8>
    a01c:	and	r2, r2, r0
    a020:	mov	r6, r0
    a024:	cmp	r3, r1
    a028:	mov	r0, #0
    a02c:	cmpeq	r2, r0
    a030:	bne	9e94 <MyGame_Example_Monster_parse_json_table+0x3328>
    a034:	b	9eb4 <MyGame_Example_Monster_parse_json_table+0x3348>
    a038:	mov	r1, r4
    a03c:	mov	r3, #5
    a040:	mov	r2, sl
    a044:	mov	r0, r9
    a048:	bl	0 <flatcc_json_parser_set_error>
    a04c:	mov	r4, r0
    a050:	b	9f14 <MyGame_Example_Monster_parse_json_table+0x33a8>
    a054:	mov	r1, r0
    a058:	mov	r3, #33	; 0x21
    a05c:	mov	r2, sl
    a060:	mov	r0, r9
    a064:	bl	0 <flatcc_json_parser_set_error>
    a068:	mov	r4, r0
    a06c:	add	r3, sp, #88	; 0x58
    a070:	mov	r1, r4
    a074:	mov	r2, sl
    a078:	mov	r0, r9
    a07c:	bl	54f4 <flatcc_json_parser_array_end>
    a080:	ldr	r3, [sp, #88]	; 0x58
    a084:	cmp	r3, #0
    a088:	mov	fp, r0
    a08c:	bne	9e54 <MyGame_Example_Monster_parse_json_table+0x32e8>
    a090:	ldr	r0, [r9]
    a094:	bl	0 <flatcc_builder_end_vector>
    a098:	cmp	r0, #0
    a09c:	str	r0, [sp, #92]	; 0x5c
    a0a0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a0a4:	mov	r1, #29
    a0a8:	ldr	r0, [r9]
    a0ac:	bl	0 <flatcc_builder_table_add_offset>
    a0b0:	cmp	r0, #0
    a0b4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a0b8:	ldr	r3, [sp, #92]	; 0x5c
    a0bc:	str	r3, [r0]
    a0c0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a0c4:	add	r3, sp, #112	; 0x70
    a0c8:	str	r3, [sp]
    a0cc:	mov	r1, r0
    a0d0:	ldr	r3, [pc, #320]	; a218 <MyGame_Example_Monster_parse_json_table+0x36ac>
    a0d4:	mov	r2, sl
    a0d8:	mov	r0, r9
    a0dc:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    a0e0:	cmp	sl, r0
    a0e4:	cmpne	r4, r0
    a0e8:	beq	a054 <MyGame_Example_Monster_parse_json_table+0x34e8>
    a0ec:	mov	r4, r0
    a0f0:	b	9fec <MyGame_Example_Monster_parse_json_table+0x3480>
    a0f4:	add	r3, sp, #112	; 0x70
    a0f8:	str	r3, [sp]
    a0fc:	mov	r1, r0
    a100:	ldr	r3, [pc, #276]	; a21c <MyGame_Example_Monster_parse_json_table+0x36b0>
    a104:	mov	r2, sl
    a108:	mov	r0, r9
    a10c:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    a110:	cmp	sl, r0
    a114:	cmpne	r4, r0
    a118:	beq	a054 <MyGame_Example_Monster_parse_json_table+0x34e8>
    a11c:	mov	r4, r0
    a120:	b	9f9c <MyGame_Example_Monster_parse_json_table+0x3430>
    a124:	ldr	r0, [r9]
    a128:	bl	0 <flatcc_builder_end_offset_vector>
    a12c:	cmp	r0, #0
    a130:	str	r0, [sp, #92]	; 0x5c
    a134:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a138:	mov	r1, #11
    a13c:	ldr	r0, [r9]
    a140:	bl	0 <flatcc_builder_table_add_offset>
    a144:	cmp	r0, #0
    a148:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a14c:	ldr	r3, [sp, #92]	; 0x5c
    a150:	str	r3, [r0]
    a154:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a158:	ldr	r0, [r9]
    a15c:	bl	0 <flatcc_builder_end_vector>
    a160:	cmp	r0, #0
    a164:	str	r0, [sp, #92]	; 0x5c
    a168:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a16c:	mov	r1, #5
    a170:	ldr	r0, [r9]
    a174:	bl	0 <flatcc_builder_table_add_offset>
    a178:	cmp	r0, #0
    a17c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a180:	ldr	r3, [sp, #92]	; 0x5c
    a184:	str	r3, [r0]
    a188:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a18c:	mov	r4, r0
    a190:	mov	r1, r4
    a194:	mov	r2, sl
    a198:	mov	r0, r9
    a19c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a1a0:	mov	fp, r0
    a1a4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a1a8:	mov	r1, r0
    a1ac:	str	fp, [sp]
    a1b0:	ldr	r3, [pc, #104]	; a220 <MyGame_Example_Monster_parse_json_table+0x36b4>
    a1b4:	mov	r2, sl
    a1b8:	mov	r0, r9
    a1bc:	bl	2c7c <flatcc_json_parser_symbolic_float>
    a1c0:	cmp	sl, r0
    a1c4:	cmpne	r4, r0
    a1c8:	beq	a974 <MyGame_Example_Monster_parse_json_table+0x3e08>
    a1cc:	mov	r4, r0
    a1d0:	b	9504 <MyGame_Example_Monster_parse_json_table+0x2998>
    a1d4:	mov	r3, sl
    a1d8:	mov	fp, r4
    a1dc:	mov	sl, r9
    a1e0:	mov	r9, r3
    a1e4:	b	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    a1e8:	mov	r1, r0
    a1ec:	mov	r3, #7
    a1f0:	mov	r2, sl
    a1f4:	mov	r0, r9
    a1f8:	bl	0 <flatcc_json_parser_set_error>
    a1fc:	mov	fp, r0
    a200:	b	9ddc <MyGame_Example_Monster_parse_json_table+0x3270>
    a204:	nop			; (mov r0, r0)
    a208:	.word	0x616e6365
    a20c:	.word	0x64697374
    a210:	.word	0xffff0000
    a214:	.word	0x69640000
    a218:	.word	0x00000134
    a21c:	.word	0x00000128
    a220:	.word	0x000000f4
    a224:	.word	0x00000158
    a228:	.word	0x000000a8
    a22c:	.word	0x00000170
    a230:	.word	0x00000164
    a234:	.word	0x000001e8
    a238:	.word	0x000000c0
    a23c:	.word	0x00000188
    a240:	.word	0x000001b8
    a244:	.word	0x000001a0
    a248:	.word	0x000001d0
    a24c:	.word	0x000001dc
    a250:	.word	0x000001ac
    a254:	.word	0x000001c4
    a258:	.word	0x00000194
    a25c:	mov	r3, #4
    a260:	mov	r2, sl
    a264:	mov	r1, r4
    a268:	mov	r0, r9
    a26c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a270:	cmp	r4, r0
    a274:	mov	fp, r0
    a278:	beq	aa44 <MyGame_Example_Monster_parse_json_table+0x3ed8>
    a27c:	cmp	sl, r0
    a280:	beq	a290 <MyGame_Example_Monster_parse_json_table+0x3724>
    a284:	ldrb	r3, [r0]
    a288:	cmp	r3, #91	; 0x5b
    a28c:	beq	a770 <MyGame_Example_Monster_parse_json_table+0x3c04>
    a290:	mov	r3, #0
    a294:	mov	r2, r3
    a298:	mov	r1, r3
    a29c:	ldr	r0, [r9]
    a2a0:	bl	0 <flatcc_builder_start_buffer>
    a2a4:	cmp	r0, #0
    a2a8:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a2ac:	mov	r1, fp
    a2b0:	add	r3, sp, #92	; 0x5c
    a2b4:	mov	r2, sl
    a2b8:	mov	r0, r9
    a2bc:	bl	6b6c <MyGame_Example_Monster_parse_json_table>
    a2c0:	ldr	r1, [sp, #92]	; 0x5c
    a2c4:	cmp	r1, #0
    a2c8:	mov	fp, r0
    a2cc:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a2d0:	ldr	r0, [r9]
    a2d4:	bl	0 <flatcc_builder_end_buffer>
    a2d8:	str	r0, [sp, #92]	; 0x5c
    a2dc:	cmp	r0, #0
    a2e0:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a2e4:	mov	r1, #13
    a2e8:	ldr	r0, [r9]
    a2ec:	bl	0 <flatcc_builder_table_add_offset>
    a2f0:	cmp	r0, #0
    a2f4:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a2f8:	ldr	r3, [sp, #92]	; 0x5c
    a2fc:	str	r3, [r0]
    a300:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a304:	mov	r1, fp
    a308:	mov	r2, sl
    a30c:	mov	r0, r9
    a310:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a314:	mov	fp, r0
    a318:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a31c:	mov	r3, #8
    a320:	mov	r2, sl
    a324:	mov	r1, fp
    a328:	mov	r0, r9
    a32c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a330:	cmp	fp, r0
    a334:	mov	r5, r0
    a338:	beq	7e08 <MyGame_Example_Monster_parse_json_table+0x129c>
    a33c:	mov	r0, #0
    a340:	mov	r1, #0
    a344:	add	r4, sp, #120	; 0x78
    a348:	mov	r2, sl
    a34c:	strd	r0, [r4, #-8]!
    a350:	mov	r1, r5
    a354:	mov	r3, r4
    a358:	mov	r0, r9
    a35c:	bl	293c <flatcc_json_parser_int64>
    a360:	cmp	r0, r5
    a364:	mov	fp, r0
    a368:	beq	a99c <MyGame_Example_Monster_parse_json_table+0x3e30>
    a36c:	ldrd	r2, [sp, #112]	; 0x70
    a370:	orrs	r3, r2, r3
    a374:	bne	a384 <MyGame_Example_Monster_parse_json_table+0x3818>
    a378:	ldr	r3, [r9, #8]
    a37c:	tst	r3, #2
    a380:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a384:	mov	r3, #8
    a388:	mov	r2, r3
    a38c:	mov	r1, #18
    a390:	ldr	r0, [r9]
    a394:	bl	0 <flatcc_builder_table_add>
    a398:	cmp	r0, #0
    a39c:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    a3a0:	ldrd	r2, [sp, #112]	; 0x70
    a3a4:	strd	r2, [r0]
    a3a8:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a3ac:	mov	r1, fp
    a3b0:	mov	r3, #5
    a3b4:	mov	r2, sl
    a3b8:	mov	r0, r9
    a3bc:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a3c0:	cmp	fp, r0
    a3c4:	mov	r1, r0
    a3c8:	beq	7fc4 <MyGame_Example_Monster_parse_json_table+0x1458>
    a3cc:	add	r3, sp, #92	; 0x5c
    a3d0:	mov	r2, sl
    a3d4:	mov	r0, r9
    a3d8:	bl	6068 <MyGame_Example2_Monster_parse_json_table>
    a3dc:	ldr	r3, [sp, #92]	; 0x5c
    a3e0:	cmp	r3, #0
    a3e4:	mov	fp, r0
    a3e8:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a3ec:	mov	r1, #34	; 0x22
    a3f0:	ldr	r0, [r9]
    a3f4:	bl	0 <flatcc_builder_table_add_offset>
    a3f8:	cmp	r0, #0
    a3fc:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a400:	ldr	r3, [sp, #92]	; 0x5c
    a404:	str	r3, [r0]
    a408:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a40c:	ldr	r0, [r9]
    a410:	bl	0 <flatcc_builder_end_vector>
    a414:	cmp	r0, #0
    a418:	str	r0, [sp, #92]	; 0x5c
    a41c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a420:	mov	r1, #33	; 0x21
    a424:	ldr	r0, [r9]
    a428:	bl	0 <flatcc_builder_table_add_offset>
    a42c:	cmp	r0, #0
    a430:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a434:	ldr	r3, [sp, #92]	; 0x5c
    a438:	str	r3, [r0]
    a43c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a440:	mov	r1, r0
    a444:	str	r4, [sp]
    a448:	ldr	r3, [pc, #-556]	; a224 <MyGame_Example_Monster_parse_json_table+0x36b8>
    a44c:	mov	r2, sl
    a450:	mov	r0, r9
    a454:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    a458:	cmp	sl, r0
    a45c:	cmpne	fp, r0
    a460:	beq	8e30 <MyGame_Example_Monster_parse_json_table+0x22c4>
    a464:	mov	fp, r0
    a468:	b	8484 <MyGame_Example_Monster_parse_json_table+0x1918>
    a46c:	mov	r4, r0
    a470:	mov	r1, r4
    a474:	mov	r2, sl
    a478:	mov	r0, r9
    a47c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a480:	mov	fp, r0
    a484:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a488:	mov	r1, r0
    a48c:	str	r4, [sp]
    a490:	ldr	r3, [pc, #-624]	; a228 <MyGame_Example_Monster_parse_json_table+0x36bc>
    a494:	mov	r2, sl
    a498:	mov	r0, r9
    a49c:	bl	3910 <flatcc_json_parser_symbolic_int16>
    a4a0:	cmp	sl, r0
    a4a4:	cmpne	fp, r0
    a4a8:	beq	8c3c <MyGame_Example_Monster_parse_json_table+0x20d0>
    a4ac:	mov	fp, r0
    a4b0:	b	8188 <MyGame_Example_Monster_parse_json_table+0x161c>
    a4b4:	mov	r3, #8
    a4b8:	mov	r2, sl
    a4bc:	mov	r1, fp
    a4c0:	mov	r0, r9
    a4c4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a4c8:	cmp	fp, r0
    a4cc:	mov	r4, r0
    a4d0:	beq	aa80 <MyGame_Example_Monster_parse_json_table+0x3f14>
    a4d4:	mov	r0, #0
    a4d8:	mov	r1, #0
    a4dc:	add	r5, sp, #120	; 0x78
    a4e0:	mov	r2, sl
    a4e4:	strd	r0, [r5, #-8]!
    a4e8:	mov	r1, r4
    a4ec:	mov	r3, r5
    a4f0:	mov	r0, r9
    a4f4:	bl	25a4 <flatcc_json_parser_uint64.constprop.42>
    a4f8:	cmp	r0, r4
    a4fc:	mov	fp, r0
    a500:	beq	aa00 <MyGame_Example_Monster_parse_json_table+0x3e94>
    a504:	ldrd	r2, [sp, #112]	; 0x70
    a508:	orrs	r3, r2, r3
    a50c:	bne	a51c <MyGame_Example_Monster_parse_json_table+0x39b0>
    a510:	ldr	r3, [r9, #8]
    a514:	tst	r3, #2
    a518:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a51c:	mov	r3, #8
    a520:	mov	r2, r3
    a524:	mov	r1, #19
    a528:	ldr	r0, [r9]
    a52c:	bl	0 <flatcc_builder_table_add>
    a530:	cmp	r0, #0
    a534:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a538:	ldrd	r2, [sp, #112]	; 0x70
    a53c:	strd	r2, [r0]
    a540:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a544:	ldr	r0, [r9]
    a548:	bl	0 <flatcc_builder_end_offset_vector>
    a54c:	cmp	r0, #0
    a550:	str	r0, [sp, #92]	; 0x5c
    a554:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a558:	mov	r1, #10
    a55c:	ldr	r0, [r9]
    a560:	bl	0 <flatcc_builder_table_add_offset>
    a564:	cmp	r0, #0
    a568:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a56c:	ldr	r3, [sp, #92]	; 0x5c
    a570:	str	r3, [r0]
    a574:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a578:	mov	r1, r0
    a57c:	str	r4, [sp]
    a580:	ldr	r3, [pc, #-860]	; a22c <MyGame_Example_Monster_parse_json_table+0x36c0>
    a584:	mov	r2, sl
    a588:	mov	r0, r9
    a58c:	bl	2c7c <flatcc_json_parser_symbolic_float>
    a590:	cmp	sl, r0
    a594:	cmpne	fp, r0
    a598:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a59c:	mov	fp, r0
    a5a0:	b	9804 <MyGame_Example_Monster_parse_json_table+0x2c98>
    a5a4:	mov	r3, #2
    a5a8:	mov	r2, sl
    a5ac:	mov	r1, r4
    a5b0:	mov	r0, r9
    a5b4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a5b8:	cmp	r4, r0
    a5bc:	mov	fp, r0
    a5c0:	beq	aa88 <MyGame_Example_Monster_parse_json_table+0x3f1c>
    a5c4:	ldr	r0, [r9]
    a5c8:	bl	0 <flatcc_builder_start_offset_vector>
    a5cc:	cmp	r0, #0
    a5d0:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a5d4:	mov	r1, fp
    a5d8:	add	r3, sp, #88	; 0x58
    a5dc:	mov	r2, sl
    a5e0:	mov	r0, r9
    a5e4:	bl	2bc8 <flatcc_json_parser_array_start>
    a5e8:	ldr	r3, [sp, #88]	; 0x58
    a5ec:	cmp	r3, #0
    a5f0:	mov	fp, r0
    a5f4:	beq	a73c <MyGame_Example_Monster_parse_json_table+0x3bd0>
    a5f8:	add	r4, sp, #92	; 0x5c
    a5fc:	mov	r5, #1
    a600:	b	a640 <MyGame_Example_Monster_parse_json_table+0x3ad4>
    a604:	ldr	r0, [r9]
    a608:	bl	0 <flatcc_builder_extend_offset_vector>
    a60c:	add	r3, sp, #88	; 0x58
    a610:	mov	r2, sl
    a614:	mov	r1, fp
    a618:	subs	ip, r0, #0
    a61c:	mov	r0, r9
    a620:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a624:	ldr	lr, [sp, #92]	; 0x5c
    a628:	str	lr, [ip]
    a62c:	bl	54f4 <flatcc_json_parser_array_end>
    a630:	ldr	r3, [sp, #88]	; 0x58
    a634:	cmp	r3, #0
    a638:	mov	fp, r0
    a63c:	beq	a73c <MyGame_Example_Monster_parse_json_table+0x3bd0>
    a640:	mov	r1, fp
    a644:	mov	r3, r4
    a648:	mov	r2, sl
    a64c:	mov	r0, r9
    a650:	bl	0 <flatcc_json_parser_build_string>
    a654:	ldr	r3, [sp, #92]	; 0x5c
    a658:	mov	r1, r5
    a65c:	cmp	r3, #0
    a660:	mov	fp, r0
    a664:	bne	a604 <MyGame_Example_Monster_parse_json_table+0x3a98>
    a668:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a66c:	mov	r1, fp
    a670:	mov	r2, sl
    a674:	mov	r0, r9
    a678:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a67c:	mov	fp, r0
    a680:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a684:	mov	r1, r0
    a688:	str	r4, [sp]
    a68c:	ldr	r3, [pc, #-1124]	; a230 <MyGame_Example_Monster_parse_json_table+0x36c4>
    a690:	mov	r2, sl
    a694:	mov	r0, r9
    a698:	bl	2c7c <flatcc_json_parser_symbolic_float>
    a69c:	cmp	sl, r0
    a6a0:	cmpne	fp, r0
    a6a4:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a6a8:	mov	fp, r0
    a6ac:	b	8214 <MyGame_Example_Monster_parse_json_table+0x16a8>
    a6b0:	mov	r3, #8
    a6b4:	mov	r2, sl
    a6b8:	mov	r1, fp
    a6bc:	mov	r0, r9
    a6c0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    a6c4:	cmp	fp, r0
    a6c8:	mov	r5, r0
    a6cc:	beq	9b90 <MyGame_Example_Monster_parse_json_table+0x3024>
    a6d0:	add	r4, sp, #120	; 0x78
    a6d4:	mov	r3, #0
    a6d8:	str	r3, [r4, #-8]!
    a6dc:	mov	r1, r0
    a6e0:	mov	r2, sl
    a6e4:	mov	r3, r4
    a6e8:	mov	r0, r9
    a6ec:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    a6f0:	cmp	r0, r5
    a6f4:	mov	fp, r0
    a6f8:	beq	a948 <MyGame_Example_Monster_parse_json_table+0x3ddc>
    a6fc:	ldr	r3, [sp, #112]	; 0x70
    a700:	cmp	r3, #0
    a704:	bne	a714 <MyGame_Example_Monster_parse_json_table+0x3ba8>
    a708:	ldr	r3, [r9, #8]
    a70c:	tst	r3, #2
    a710:	beq	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a714:	mov	r3, #4
    a718:	mov	r2, r3
    a71c:	mov	r1, #17
    a720:	ldr	r0, [r9]
    a724:	bl	0 <flatcc_builder_table_add>
    a728:	cmp	r0, #0
    a72c:	beq	ab1c <MyGame_Example_Monster_parse_json_table+0x3fb0>
    a730:	ldr	r3, [sp, #112]	; 0x70
    a734:	str	r3, [r0]
    a738:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a73c:	ldr	r0, [r9]
    a740:	bl	0 <flatcc_builder_end_offset_vector>
    a744:	cmp	r0, #0
    a748:	str	r0, [sp, #92]	; 0x5c
    a74c:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a750:	mov	r1, #28
    a754:	ldr	r0, [r9]
    a758:	bl	0 <flatcc_builder_table_add_offset>
    a75c:	cmp	r0, #0
    a760:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a764:	ldr	r3, [sp, #92]	; 0x5c
    a768:	str	r3, [r0]
    a76c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a770:	mov	r2, #1
    a774:	mov	r1, r2
    a778:	mvn	r3, #0
    a77c:	ldr	r0, [r9]
    a780:	bl	0 <flatcc_builder_start_vector>
    a784:	subs	r6, r0, #0
    a788:	bne	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a78c:	mov	r1, fp
    a790:	add	r3, sp, #88	; 0x58
    a794:	mov	r2, sl
    a798:	mov	r0, r9
    a79c:	bl	2bc8 <flatcc_json_parser_array_start>
    a7a0:	ldr	r3, [sp, #88]	; 0x58
    a7a4:	cmp	r3, #0
    a7a8:	mov	fp, r0
    a7ac:	beq	a8c4 <MyGame_Example_Monster_parse_json_table+0x3d58>
    a7b0:	ldr	r8, [pc, #-1412]	; a234 <MyGame_Example_Monster_parse_json_table+0x36c8>
    a7b4:	mov	r7, #1
    a7b8:	add	r5, sp, #112	; 0x70
    a7bc:	b	a7ec <MyGame_Example_Monster_parse_json_table+0x3c80>
    a7c0:	ldrb	r2, [sp, #112]	; 0x70
    a7c4:	mov	r1, r0
    a7c8:	add	r3, sp, #88	; 0x58
    a7cc:	strb	r2, [r4]
    a7d0:	mov	r0, r9
    a7d4:	mov	r2, sl
    a7d8:	bl	54f4 <flatcc_json_parser_array_end>
    a7dc:	ldr	r3, [sp, #88]	; 0x58
    a7e0:	cmp	r3, #0
    a7e4:	mov	fp, r0
    a7e8:	beq	a8c4 <MyGame_Example_Monster_parse_json_table+0x3d58>
    a7ec:	mov	r1, r7
    a7f0:	ldr	r0, [r9]
    a7f4:	strb	r6, [sp, #112]	; 0x70
    a7f8:	bl	0 <flatcc_builder_extend_vector>
    a7fc:	mov	r1, fp
    a800:	mov	r3, r5
    a804:	mov	r2, sl
    a808:	subs	r4, r0, #0
    a80c:	mov	r0, r9
    a810:	beq	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    a814:	bl	26f4 <flatcc_json_parser_uint8>
    a818:	cmp	r0, fp
    a81c:	bne	a7c0 <MyGame_Example_Monster_parse_json_table+0x3c54>
    a820:	str	r5, [sp]
    a824:	mov	r3, r8
    a828:	mov	r2, sl
    a82c:	mov	r1, fp
    a830:	mov	r0, r9
    a834:	bl	3d70 <flatcc_json_parser_symbolic_uint8>
    a838:	cmp	sl, r0
    a83c:	cmpne	r0, fp
    a840:	bne	a7c0 <MyGame_Example_Monster_parse_json_table+0x3c54>
    a844:	b	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a848:	mov	r1, fp
    a84c:	mov	r2, sl
    a850:	mov	r0, r9
    a854:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a858:	mov	fp, r0
    a85c:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a860:	mov	r1, r0
    a864:	str	r4, [sp]
    a868:	ldr	r3, [pc, #-1592]	; a238 <MyGame_Example_Monster_parse_json_table+0x36cc>
    a86c:	mov	r2, sl
    a870:	mov	r0, r9
    a874:	bl	3910 <flatcc_json_parser_symbolic_int16>
    a878:	cmp	sl, r0
    a87c:	cmpne	fp, r0
    a880:	beq	8c3c <MyGame_Example_Monster_parse_json_table+0x20d0>
    a884:	mov	fp, r0
    a888:	b	9948 <MyGame_Example_Monster_parse_json_table+0x2ddc>
    a88c:	mov	r4, r0
    a890:	mov	r1, r4
    a894:	mov	r2, sl
    a898:	mov	r0, r9
    a89c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a8a0:	mov	fp, r0
    a8a4:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a8a8:	mov	r4, r0
    a8ac:	mov	r1, r4
    a8b0:	mov	r2, sl
    a8b4:	mov	r0, r9
    a8b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a8bc:	mov	fp, r0
    a8c0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a8c4:	ldr	r0, [r9]
    a8c8:	bl	0 <flatcc_builder_end_vector>
    a8cc:	str	r0, [sp, #92]	; 0x5c
    a8d0:	b	a2dc <MyGame_Example_Monster_parse_json_table+0x3770>
    a8d4:	mov	r1, r0
    a8d8:	str	r4, [sp]
    a8dc:	ldr	r3, [pc, #-1704]	; a23c <MyGame_Example_Monster_parse_json_table+0x36d0>
    a8e0:	mov	r2, sl
    a8e4:	mov	r0, r9
    a8e8:	bl	34a8 <flatcc_json_parser_symbolic_int32>
    a8ec:	cmp	sl, r0
    a8f0:	cmpne	fp, r0
    a8f4:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a8f8:	mov	fp, r0
    a8fc:	b	9b44 <MyGame_Example_Monster_parse_json_table+0x2fd8>
    a900:	mov	r4, r0
    a904:	mov	r1, r4
    a908:	mov	r2, sl
    a90c:	mov	r0, r9
    a910:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a914:	mov	fp, r0
    a918:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a91c:	mov	r1, fp
    a920:	mov	r2, sl
    a924:	mov	r0, r9
    a928:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a92c:	mov	fp, r0
    a930:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a934:	mov	r3, sl
    a938:	mov	fp, r5
    a93c:	mov	sl, r9
    a940:	mov	r9, r3
    a944:	b	6d3c <MyGame_Example_Monster_parse_json_table+0x1d0>
    a948:	mov	r1, r0
    a94c:	str	r4, [sp]
    a950:	ldr	r3, [pc, #-1816]	; a240 <MyGame_Example_Monster_parse_json_table+0x36d4>
    a954:	mov	r2, sl
    a958:	mov	r0, r9
    a95c:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    a960:	cmp	sl, r0
    a964:	cmpne	fp, r0
    a968:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a96c:	mov	fp, r0
    a970:	b	a6fc <MyGame_Example_Monster_parse_json_table+0x3b90>
    a974:	strd	r6, [sp, #72]	; 0x48
    a978:	mov	r4, r0
    a97c:	b	9594 <MyGame_Example_Monster_parse_json_table+0x2a28>
    a980:	mov	r4, fp
    a984:	mov	r1, r4
    a988:	mov	r2, sl
    a98c:	mov	r0, r9
    a990:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a994:	mov	fp, r0
    a998:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a99c:	mov	r1, r0
    a9a0:	str	r4, [sp]
    a9a4:	ldr	r3, [pc, #-1896]	; a244 <MyGame_Example_Monster_parse_json_table+0x36d8>
    a9a8:	mov	r2, sl
    a9ac:	mov	r0, r9
    a9b0:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    a9b4:	cmp	sl, r0
    a9b8:	cmpne	fp, r0
    a9bc:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    a9c0:	mov	fp, r0
    a9c4:	b	a36c <MyGame_Example_Monster_parse_json_table+0x3800>
    a9c8:	mov	r4, fp
    a9cc:	mov	r1, r4
    a9d0:	mov	r2, sl
    a9d4:	mov	r0, r9
    a9d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a9dc:	mov	fp, r0
    a9e0:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    a9e4:	mov	r4, fp
    a9e8:	mov	r1, r4
    a9ec:	mov	r2, sl
    a9f0:	mov	r0, r9
    a9f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a9f8:	mov	fp, r0
    a9fc:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    aa00:	str	r5, [sp]
    aa04:	ldr	r3, [pc, #-1988]	; a248 <MyGame_Example_Monster_parse_json_table+0x36dc>
    aa08:	mov	r2, sl
    aa0c:	mov	r1, r4
    aa10:	mov	r0, r9
    aa14:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aa18:	cmp	sl, r0
    aa1c:	cmpne	r4, r0
    aa20:	mov	fp, r0
    aa24:	bne	a504 <MyGame_Example_Monster_parse_json_table+0x3998>
    aa28:	b	76bc <MyGame_Example_Monster_parse_json_table+0xb50>
    aa2c:	mov	r1, fp
    aa30:	mov	r2, sl
    aa34:	mov	r0, r9
    aa38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa3c:	mov	fp, r0
    aa40:	b	6cd4 <MyGame_Example_Monster_parse_json_table+0x168>
    aa44:	mov	r4, r0
    aa48:	b	7dd0 <MyGame_Example_Monster_parse_json_table+0x1264>
    aa4c:	mov	r4, r0
    aa50:	b	7840 <MyGame_Example_Monster_parse_json_table+0xcd4>
    aa54:	mov	r1, r0
    aa58:	str	r5, [sp]
    aa5c:	ldr	r3, [pc, #-2072]	; a24c <MyGame_Example_Monster_parse_json_table+0x36e0>
    aa60:	mov	r2, sl
    aa64:	mov	r0, r9
    aa68:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aa6c:	cmp	sl, r0
    aa70:	cmpne	fp, r0
    aa74:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    aa78:	mov	fp, r0
    aa7c:	b	79a0 <MyGame_Example_Monster_parse_json_table+0xe34>
    aa80:	mov	fp, r0
    aa84:	b	7920 <MyGame_Example_Monster_parse_json_table+0xdb4>
    aa88:	mov	r4, r0
    aa8c:	b	9abc <MyGame_Example_Monster_parse_json_table+0x2f50>
    aa90:	mov	r4, r0
    aa94:	b	7fe8 <MyGame_Example_Monster_parse_json_table+0x147c>
    aa98:	mov	r1, r0
    aa9c:	str	r5, [sp]
    aaa0:	ldr	r3, [pc, #-2136]	; a250 <MyGame_Example_Monster_parse_json_table+0x36e4>
    aaa4:	mov	r2, sl
    aaa8:	mov	r0, r9
    aaac:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    aab0:	cmp	sl, r0
    aab4:	cmpne	fp, r0
    aab8:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    aabc:	mov	fp, r0
    aac0:	b	7e88 <MyGame_Example_Monster_parse_json_table+0x131c>
    aac4:	mov	r1, r0
    aac8:	str	r5, [sp]
    aacc:	ldr	r3, [pc, #-2176]	; a254 <MyGame_Example_Monster_parse_json_table+0x36e8>
    aad0:	mov	r2, sl
    aad4:	mov	r0, r9
    aad8:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    aadc:	cmp	sl, r0
    aae0:	cmpne	fp, r0
    aae4:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    aae8:	mov	fp, r0
    aaec:	b	9c0c <MyGame_Example_Monster_parse_json_table+0x30a0>
    aaf0:	mov	r1, r0
    aaf4:	str	r4, [sp]
    aaf8:	ldr	r3, [pc, #-2216]	; a258 <MyGame_Example_Monster_parse_json_table+0x36ec>
    aafc:	mov	r2, sl
    ab00:	mov	r0, r9
    ab04:	bl	34a8 <flatcc_json_parser_symbolic_int32>
    ab08:	cmp	sl, r0
    ab0c:	cmpne	fp, r0
    ab10:	beq	970c <MyGame_Example_Monster_parse_json_table+0x2ba0>
    ab14:	mov	fp, r0
    ab18:	b	7f50 <MyGame_Example_Monster_parse_json_table+0x13e4>
    ab1c:	mov	r3, sl
    ab20:	mov	r0, fp
    ab24:	mov	sl, r9
    ab28:	mov	r9, r3
    ab2c:	b	6d38 <MyGame_Example_Monster_parse_json_table+0x1cc>
    ab30:	mov	r4, r0
    ab34:	b	8024 <MyGame_Example_Monster_parse_json_table+0x14b8>

0000ab38 <MyGame_Example_Foo_parse_json_enum>:
    ab38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ab3c:	mov	r5, r2
    ab40:	sub	r2, r2, r1
    ab44:	cmp	r2, #8
    ab48:	sub	sp, sp, #8
    ab4c:	mov	r4, r1
    ab50:	mov	r8, r0
    ab54:	mov	r9, r3
    ab58:	bls	ac24 <MyGame_Example_Foo_parse_json_enum+0xec>
    ab5c:	ldrb	r6, [r4, #7]
    ab60:	mov	r7, #0
    ab64:	ldrb	r2, [r4, #6]
    ab68:	lsr	r1, r2, #24
    ab6c:	lsl	r0, r2, #8
    ab70:	orr	r6, r6, r0
    ab74:	orr	r7, r7, r1
    ab78:	ldrb	r2, [r4, #5]
    ab7c:	lsr	r1, r2, #16
    ab80:	lsl	r0, r2, #16
    ab84:	orr	r0, r0, r6
    ab88:	orr	r1, r1, r7
    ab8c:	ldrb	r2, [r4, #4]
    ab90:	lsr	r7, r2, #8
    ab94:	lsl	r6, r2, #24
    ab98:	orr	r6, r6, r0
    ab9c:	orr	r7, r7, r1
    aba0:	ldrb	r1, [r4, #3]
    aba4:	mov	r0, #0
    aba8:	orr	r6, r6, r0
    abac:	orr	r7, r7, r1
    abb0:	ldrb	r2, [r4, #2]
    abb4:	mov	r0, #0
    abb8:	orr	r6, r6, r0
    abbc:	lsl	r1, r2, #8
    abc0:	orr	r7, r7, r1
    abc4:	ldrb	r2, [r4, #1]
    abc8:	mov	r0, #0
    abcc:	orr	r0, r0, r6
    abd0:	lsl	r1, r2, #16
    abd4:	orr	r1, r1, r7
    abd8:	ldrb	r2, [r4]
    abdc:	mov	r6, #0
    abe0:	orr	r0, r0, r6
    abe4:	lsl	r7, r2, #24
    abe8:	add	r3, pc, #376	; 0x178
    abec:	ldrd	r2, [r3]
    abf0:	orr	r1, r1, r7
    abf4:	cmp	r1, r3
    abf8:	cmpeq	r0, r2
    abfc:	beq	ac54 <MyGame_Example_Foo_parse_json_enum+0x11c>
    ac00:	add	r3, pc, #360	; 0x168
    ac04:	ldrd	r2, [r3]
    ac08:	mov	r0, #0
    ac0c:	cmp	r1, r3
    ac10:	cmpeq	r0, r2
    ac14:	beq	acd4 <MyGame_Example_Foo_parse_json_enum+0x19c>
    ac18:	mov	r0, r4
    ac1c:	add	sp, sp, #8
    ac20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ac24:	sub	r2, r2, #1
    ac28:	cmp	r2, #7
    ac2c:	ldrls	pc, [pc, r2, lsl #2]
    ac30:	b	ac18 <MyGame_Example_Foo_parse_json_enum+0xe0>
    ac34:	.word	0x0000ad14
    ac38:	.word	0x0000ad20
    ac3c:	.word	0x0000ad2c
    ac40:	.word	0x0000ad38
    ac44:	.word	0x0000ad44
    ac48:	.word	0x0000ad50
    ac4c:	.word	0x0000ad5c
    ac50:	.word	0x0000ab5c
    ac54:	mov	r1, r5
    ac58:	add	r0, r4, #8
    ac5c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ac60:	add	r3, pc, #272	; 0x110
    ac64:	ldrd	r2, [r3]
    ac68:	cmp	r1, r3
    ac6c:	cmpeq	r0, r2
    ac70:	bne	ac18 <MyGame_Example_Foo_parse_json_enum+0xe0>
    ac74:	add	sl, r4, #16
    ac78:	mov	r0, sl
    ac7c:	mov	r1, r5
    ac80:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ac84:	mov	r0, #0
    ac88:	and	r1, r1, #-16777216	; 0xff000000
    ac8c:	cmp	r1, #1694498816	; 0x65000000
    ac90:	cmpeq	r0, #0
    ac94:	bne	ac18 <MyGame_Example_Foo_parse_json_enum+0xe0>
    ac98:	ldr	r3, [sp, #44]	; 0x2c
    ac9c:	mov	r2, r5
    aca0:	str	r3, [sp]
    aca4:	mov	r0, r8
    aca8:	mov	r3, #1
    acac:	mov	r1, sl
    acb0:	bl	0 <flatcc_json_parser_match_constant>
    acb4:	cmp	sl, r0
    acb8:	beq	ac18 <MyGame_Example_Foo_parse_json_enum+0xe0>
    acbc:	ldr	r1, [sp, #40]	; 0x28
    acc0:	mov	r2, #1
    acc4:	mov	r3, #0
    acc8:	strd	r2, [r1]
    accc:	str	r6, [r9]
    acd0:	b	ac1c <MyGame_Example_Foo_parse_json_enum+0xe4>
    acd4:	ldr	r3, [sp, #44]	; 0x2c
    acd8:	mov	r2, r5
    acdc:	str	r3, [sp]
    ace0:	mov	r0, r8
    ace4:	mov	r3, #4
    ace8:	mov	r1, r4
    acec:	bl	0 <flatcc_json_parser_match_constant>
    acf0:	cmp	r4, r0
    acf4:	beq	ac1c <MyGame_Example_Foo_parse_json_enum+0xe4>
    acf8:	ldr	r1, [sp, #40]	; 0x28
    acfc:	mov	r2, #0
    ad00:	mov	r3, #0
    ad04:	strd	r2, [r1]
    ad08:	str	r6, [r9]
    ad0c:	add	sp, sp, #8
    ad10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ad14:	mov	r0, #0
    ad18:	mov	r1, #0
    ad1c:	b	abd8 <MyGame_Example_Foo_parse_json_enum+0xa0>
    ad20:	mov	r6, #0
    ad24:	mov	r7, #0
    ad28:	b	abc4 <MyGame_Example_Foo_parse_json_enum+0x8c>
    ad2c:	mov	r6, #0
    ad30:	mov	r7, #0
    ad34:	b	abb0 <MyGame_Example_Foo_parse_json_enum+0x78>
    ad38:	mov	r6, #0
    ad3c:	mov	r7, #0
    ad40:	b	aba0 <MyGame_Example_Foo_parse_json_enum+0x68>
    ad44:	mov	r0, #0
    ad48:	mov	r1, #0
    ad4c:	b	ab8c <MyGame_Example_Foo_parse_json_enum+0x54>
    ad50:	mov	r6, #0
    ad54:	mov	r7, #0
    ad58:	b	ab78 <MyGame_Example_Foo_parse_json_enum+0x40>
    ad5c:	mov	r6, #0
    ad60:	mov	r7, #0
    ad64:	b	ab64 <MyGame_Example_Foo_parse_json_enum+0x2c>
    ad68:	.word	0x72656e74
    ad6c:	.word	0x496e5061
    ad70:	.word	0x00000000
    ad74:	.word	0x4e4f4e45
    ad78:	.word	0x73706163
    ad7c:	.word	0x4e616d65

0000ad80 <monster_test_local_MyGame_Example_json_parser_enum>:
    ad80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad84:	mov	r4, r1
    ad88:	sub	sp, sp, #12
    ad8c:	mov	r1, r2
    ad90:	mov	r5, r0
    ad94:	mov	r0, r4
    ad98:	mov	sl, r2
    ad9c:	mov	fp, r3
    ada0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ada4:	add	r3, pc, #780	; 0x30c
    ada8:	ldrd	r2, [r3]
    adac:	ldr	r8, [sp, #48]	; 0x30
    adb0:	ldr	r9, [sp, #52]	; 0x34
    adb4:	cmp	r1, r3
    adb8:	cmpeq	r0, r2
    adbc:	bhi	adfc <monster_test_local_MyGame_Example_json_parser_enum+0x7c>
    adc0:	add	r3, pc, #760	; 0x2f8
    adc4:	ldrd	r2, [r3]
    adc8:	cmp	r1, r3
    adcc:	cmpeq	r0, r2
    add0:	bhi	af48 <monster_test_local_MyGame_Example_json_parser_enum+0x1c8>
    add4:	add	r3, pc, #748	; 0x2ec
    add8:	ldrd	r2, [r3]
    addc:	bic	r1, r1, #255	; 0xff
    ade0:	mov	r0, #0
    ade4:	cmp	r1, r3
    ade8:	cmpeq	r0, r2
    adec:	beq	b008 <monster_test_local_MyGame_Example_json_parser_enum+0x288>
    adf0:	mov	r0, r4
    adf4:	add	sp, sp, #12
    adf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    adfc:	add	r3, pc, #716	; 0x2cc
    ae00:	ldrd	r2, [r3]
    ae04:	cmp	r1, r3
    ae08:	cmpeq	r0, r2
    ae0c:	bhi	ae60 <monster_test_local_MyGame_Example_json_parser_enum+0xe0>
    ae10:	add	r3, pc, #704	; 0x2c0
    ae14:	ldrd	r2, [r3]
    ae18:	cmp	r1, r3
    ae1c:	cmpeq	r0, r2
    ae20:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    ae24:	sub	r3, sl, r4
    ae28:	cmp	r3, #8
    ae2c:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    ae30:	ldrb	r3, [r4, #8]
    ae34:	cmp	r3, #46	; 0x2e
    ae38:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    ae3c:	str	r9, [sp, #52]	; 0x34
    ae40:	str	r8, [sp, #48]	; 0x30
    ae44:	mov	r3, fp
    ae48:	mov	r2, sl
    ae4c:	add	r1, r4, #9
    ae50:	mov	r0, r5
    ae54:	add	sp, sp, #12
    ae58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae5c:	b	15f0 <MyGame_Example_hex_enum_parse_json_enum>
    ae60:	add	r3, pc, #632	; 0x278
    ae64:	ldrd	r2, [r3]
    ae68:	cmp	r1, r3
    ae6c:	cmpeq	r0, r2
    ae70:	bls	afb8 <monster_test_local_MyGame_Example_json_parser_enum+0x238>
    ae74:	add	r3, pc, #620	; 0x26c
    ae78:	ldrd	r2, [r3]
    ae7c:	cmp	r1, r3
    ae80:	cmpeq	r0, r2
    ae84:	beq	b078 <monster_test_local_MyGame_Example_json_parser_enum+0x2f8>
    ae88:	add	r3, pc, #608	; 0x260
    ae8c:	ldrd	r2, [r3]
    ae90:	cmp	r1, r3
    ae94:	cmpeq	r0, r2
    ae98:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    ae9c:	add	r6, r4, #8
    aea0:	mov	r0, r6
    aea4:	mov	r1, sl
    aea8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aeac:	add	r3, pc, #580	; 0x244
    aeb0:	ldrd	r2, [r3]
    aeb4:	mov	r0, #0
    aeb8:	cmp	r1, r3
    aebc:	cmpeq	r0, r2
    aec0:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    aec4:	sub	r3, sl, r6
    aec8:	cmp	r3, #4
    aecc:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    aed0:	ldrb	r3, [r4, #12]
    aed4:	cmp	r3, #46	; 0x2e
    aed8:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    aedc:	add	r7, r4, #13
    aee0:	cmp	r6, r7
    aee4:	beq	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    aee8:	mov	r1, sl
    aeec:	mov	r0, r7
    aef0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    aef4:	mov	r0, #0
    aef8:	and	r1, r1, #-16777216	; 0xff000000
    aefc:	cmp	r1, #2013265920	; 0x78000000
    af00:	cmpeq	r0, #0
    af04:	movne	r4, r7
    af08:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af0c:	str	r9, [sp]
    af10:	mov	r2, sl
    af14:	mov	r0, r5
    af18:	mov	r3, #1
    af1c:	mov	r1, r7
    af20:	bl	0 <flatcc_json_parser_match_constant>
    af24:	cmp	r7, r0
    af28:	mov	r4, r0
    af2c:	beq	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af30:	mov	r0, #0
    af34:	mov	r1, #0
    af38:	mov	r3, #0
    af3c:	strd	r0, [r8]
    af40:	str	r3, [fp]
    af44:	b	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af48:	add	r7, pc, #432	; 0x1b0
    af4c:	ldrd	r6, [r7]
    af50:	bic	r3, r1, #255	; 0xff
    af54:	mov	r2, #0
    af58:	cmp	r3, r7
    af5c:	cmpeq	r2, r6
    af60:	beq	b03c <monster_test_local_MyGame_Example_json_parser_enum+0x2bc>
    af64:	add	r3, pc, #412	; 0x19c
    af68:	ldrd	r2, [r3]
    af6c:	and	r0, r0, #-16777216	; 0xff000000
    af70:	cmp	r1, r3
    af74:	cmpeq	r0, r2
    af78:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af7c:	sub	r3, sl, r4
    af80:	cmp	r3, #5
    af84:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af88:	ldrb	r3, [r4, #5]
    af8c:	cmp	r3, #46	; 0x2e
    af90:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    af94:	str	r9, [sp, #52]	; 0x34
    af98:	str	r8, [sp, #48]	; 0x30
    af9c:	mov	r3, fp
    afa0:	mov	r2, sl
    afa4:	add	r1, r4, #6
    afa8:	mov	r0, r5
    afac:	add	sp, sp, #12
    afb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    afb4:	b	1ae0 <MyGame_Example_Color_parse_json_enum>
    afb8:	add	r3, pc, #336	; 0x150
    afbc:	ldrd	r2, [r3]
    afc0:	cmp	r1, r3
    afc4:	cmpeq	r0, r2
    afc8:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    afcc:	sub	r3, sl, r4
    afd0:	cmp	r3, #8
    afd4:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    afd8:	ldrb	r3, [r4, #8]
    afdc:	cmp	r3, #46	; 0x2e
    afe0:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    afe4:	str	r9, [sp, #52]	; 0x34
    afe8:	str	r8, [sp, #48]	; 0x30
    afec:	mov	r3, fp
    aff0:	mov	r2, sl
    aff4:	add	r1, r4, #9
    aff8:	mov	r0, r5
    affc:	add	sp, sp, #12
    b000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b004:	b	1784 <MyGame_Example_int_enum_parse_json_enum>
    b008:	sub	r3, sl, r4
    b00c:	cmp	r3, #3
    b010:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b014:	ldrb	r3, [r4, #3]
    b018:	cmp	r3, #46	; 0x2e
    b01c:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b020:	mov	r3, fp
    b024:	mov	r2, sl
    b028:	add	r1, r4, #4
    b02c:	mov	r0, r5
    b030:	add	sp, sp, #12
    b034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b038:	b	13b4 <MyGame_Example_Any_parse_json_enum>
    b03c:	sub	r3, sl, r4
    b040:	cmp	r3, #3
    b044:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b048:	ldrb	r3, [r4, #3]
    b04c:	cmp	r3, #46	; 0x2e
    b050:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b054:	str	r9, [sp, #52]	; 0x34
    b058:	str	r8, [sp, #48]	; 0x30
    b05c:	mov	r3, fp
    b060:	mov	r2, sl
    b064:	add	r1, r4, #4
    b068:	mov	r0, r5
    b06c:	add	sp, sp, #12
    b070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b074:	b	ab38 <MyGame_Example_Foo_parse_json_enum>
    b078:	sub	r3, sl, r4
    b07c:	cmp	r3, #8
    b080:	ble	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b084:	ldrb	r3, [r4, #8]
    b088:	cmp	r3, #46	; 0x2e
    b08c:	bne	adf0 <monster_test_local_MyGame_Example_json_parser_enum+0x70>
    b090:	str	r9, [sp, #52]	; 0x34
    b094:	str	r8, [sp, #48]	; 0x30
    b098:	mov	r3, fp
    b09c:	mov	r2, sl
    b0a0:	add	r1, r4, #9
    b0a4:	mov	r0, r5
    b0a8:	add	sp, sp, #12
    b0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b0b0:	b	197c <MyGame_Example_neg_enum_parse_json_enum>
    b0b4:	nop			; (mov r0, r0)
    b0b8:	.word	0x656e756c
    b0bc:	.word	0x6865785f
    b0c0:	.word	0x71ffffff
    b0c4:	.word	0x436f6c6f
    b0c8:	.word	0x00000000
    b0cc:	.word	0x416e7900
    b0d0:	.word	0x656e756c
    b0d4:	.word	0x696e745f
    b0d8:	.word	0x656e756d
    b0dc:	.word	0x6865785f
    b0e0:	.word	0x656e756c
    b0e4:	.word	0x6e65675f
    b0e8:	.word	0x656e756d
    b0ec:	.word	0x6e65675f
    b0f0:	.word	0x6d707479
    b0f4:	.word	0x6e6f7465
    b0f8:	.word	0x00000000
    b0fc:	.word	0x656e756d
    b100:	.word	0x00000000
    b104:	.word	0x466f6f00
    b108:	.word	0x72000000
    b10c:	.word	0x436f6c6f
    b110:	.word	0x656e756d
    b114:	.word	0x696e745f

0000b118 <MyGame_Example_Alt_parse_json_table>:
    b118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b11c:	sub	sp, sp, #700	; 0x2bc
    b120:	mov	sl, r0
    b124:	mov	r0, r3
    b128:	str	r3, [sp, #652]	; 0x28c
    b12c:	mov	r3, #0
    b130:	str	r3, [r0]
    b134:	mov	r4, r1
    b138:	ldr	r0, [sl]
    b13c:	mov	r1, #4
    b140:	mov	fp, r2
    b144:	bl	0 <flatcc_builder_start_table>
    b148:	subs	r3, r0, #0
    b14c:	str	r3, [sp, #648]	; 0x288
    b150:	bne	b440 <MyGame_Example_Alt_parse_json_table+0x328>
    b154:	add	r3, sp, #664	; 0x298
    b158:	str	r3, [sp]
    b15c:	mov	r2, fp
    b160:	mov	r3, #1
    b164:	mov	r1, r4
    b168:	mov	r0, sl
    b16c:	bl	0 <flatcc_json_parser_prepare_unions>
    b170:	cmp	fp, r0
    b174:	beq	b440 <MyGame_Example_Alt_parse_json_table+0x328>
    b178:	mov	r1, r4
    b17c:	add	r3, sp, #656	; 0x290
    b180:	mov	r2, fp
    b184:	mov	r0, sl
    b188:	bl	2a3c <flatcc_json_parser_object_start>
    b18c:	ldr	r3, [sp, #656]	; 0x290
    b190:	mov	r4, r0
    b194:	cmp	r3, #0
    b198:	beq	b434 <MyGame_Example_Alt_parse_json_table+0x31c>
    b19c:	mov	r3, fp
    b1a0:	mov	fp, sl
    b1a4:	mov	sl, r3
    b1a8:	cmp	sl, r4
    b1ac:	ldreq	r5, [sp, #648]	; 0x288
    b1b0:	beq	c7e4 <MyGame_Example_Alt_parse_json_table+0x16cc>
    b1b4:	ldrb	r3, [r4]
    b1b8:	cmp	r3, #34	; 0x22
    b1bc:	beq	b65c <MyGame_Example_Alt_parse_json_table+0x544>
    b1c0:	cmp	r3, #46	; 0x2e
    b1c4:	movne	r3, #1
    b1c8:	subne	r5, sl, r4
    b1cc:	strne	r3, [fp, #12]
    b1d0:	beq	c838 <MyGame_Example_Alt_parse_json_table+0x1720>
    b1d4:	cmp	r5, #8
    b1d8:	bls	b45c <MyGame_Example_Alt_parse_json_table+0x344>
    b1dc:	ldrb	r6, [r4, #7]
    b1e0:	mov	r7, #0
    b1e4:	ldrb	r2, [r4, #6]
    b1e8:	lsl	r3, r2, #8
    b1ec:	str	r3, [sp, #544]	; 0x220
    b1f0:	add	r3, sp, #544	; 0x220
    b1f4:	lsr	r1, r2, #24
    b1f8:	str	r1, [sp, #548]	; 0x224
    b1fc:	ldrd	r2, [r3]
    b200:	orr	r2, r2, r6
    b204:	orr	r3, r3, r7
    b208:	mov	r6, r2
    b20c:	mov	r7, r3
    b210:	ldrb	r2, [r4, #5]
    b214:	lsl	r3, r2, #16
    b218:	str	r3, [sp, #464]	; 0x1d0
    b21c:	add	r3, sp, #464	; 0x1d0
    b220:	lsr	r1, r2, #16
    b224:	str	r1, [sp, #468]	; 0x1d4
    b228:	ldrd	r2, [r3]
    b22c:	orr	r2, r2, r6
    b230:	orr	r3, r3, r7
    b234:	mov	r6, r2
    b238:	mov	r7, r3
    b23c:	ldrb	r2, [r4, #4]
    b240:	lsl	r3, r2, #24
    b244:	str	r3, [sp, #392]	; 0x188
    b248:	add	r3, sp, #392	; 0x188
    b24c:	lsr	r1, r2, #8
    b250:	str	r1, [sp, #396]	; 0x18c
    b254:	ldrd	r2, [r3]
    b258:	orr	r2, r2, r6
    b25c:	orr	r3, r3, r7
    b260:	mov	r6, r2
    b264:	mov	r7, r3
    b268:	ldrb	r3, [r4, #3]
    b26c:	str	r3, [sp, #420]	; 0x1a4
    b270:	mov	r3, #0
    b274:	str	r3, [sp, #416]	; 0x1a0
    b278:	add	r3, sp, #416	; 0x1a0
    b27c:	ldrd	r2, [r3]
    b280:	orr	r2, r2, r6
    b284:	orr	r3, r3, r7
    b288:	mov	r6, r2
    b28c:	mov	r7, r3
    b290:	ldrb	r2, [r4, #2]
    b294:	lsl	r3, r2, #8
    b298:	str	r3, [sp, #380]	; 0x17c
    b29c:	mov	r3, #0
    b2a0:	str	r3, [sp, #376]	; 0x178
    b2a4:	add	r3, sp, #376	; 0x178
    b2a8:	ldrd	r2, [r3]
    b2ac:	orr	r2, r2, r6
    b2b0:	orr	r3, r3, r7
    b2b4:	mov	r6, r2
    b2b8:	mov	r7, r3
    b2bc:	ldrb	r2, [r4, #1]
    b2c0:	lsl	r3, r2, #16
    b2c4:	str	r3, [sp, #308]	; 0x134
    b2c8:	mov	r3, #0
    b2cc:	str	r3, [sp, #304]	; 0x130
    b2d0:	add	r3, sp, #304	; 0x130
    b2d4:	ldrd	r2, [r3]
    b2d8:	orr	r2, r2, r6
    b2dc:	orr	r3, r3, r7
    b2e0:	mov	r6, r2
    b2e4:	mov	r7, r3
    b2e8:	ldrb	r2, [r4]
    b2ec:	lsl	r3, r2, #24
    b2f0:	str	r3, [sp, #268]	; 0x10c
    b2f4:	mov	r3, #0
    b2f8:	str	r3, [sp, #264]	; 0x108
    b2fc:	add	r3, sp, #264	; 0x108
    b300:	ldrd	r2, [r3]
    b304:	orr	r2, r2, r6
    b308:	orr	r3, r3, r7
    b30c:	mov	r6, r2
    b310:	mov	r7, r3
    b314:	add	r3, pc, #852	; 0x354
    b318:	ldrd	r2, [r3]
    b31c:	cmp	r7, r3
    b320:	cmpeq	r6, r2
    b324:	beq	b4e0 <MyGame_Example_Alt_parse_json_table+0x3c8>
    b328:	add	r3, pc, #840	; 0x348
    b32c:	ldrd	r2, [r3]
    b330:	bic	r0, r6, #255	; 0xff
    b334:	cmp	r7, r3
    b338:	cmpeq	r0, r2
    b33c:	movne	r8, #1
    b340:	moveq	r8, #0
    b344:	cmp	r5, #7
    b348:	orrle	r8, r8, #1
    b34c:	cmp	r8, #0
    b350:	beq	c8c0 <MyGame_Example_Alt_parse_json_table+0x17a8>
    b354:	add	r1, pc, #804	; 0x324
    b358:	ldrd	r0, [r1]
    b35c:	ldr	r2, [pc, #820]	; b698 <MyGame_Example_Alt_parse_json_table+0x580>
    b360:	mvn	r3, #0
    b364:	and	r3, r3, r7
    b368:	and	r2, r2, r6
    b36c:	cmp	r3, r1
    b370:	cmpeq	r2, r0
    b374:	beq	b69c <MyGame_Example_Alt_parse_json_table+0x584>
    b378:	add	r3, pc, #776	; 0x308
    b37c:	ldrd	r2, [r3]
    b380:	and	r6, r6, #-16777216	; 0xff000000
    b384:	cmp	r7, r3
    b388:	cmpeq	r6, r2
    b38c:	bne	b398 <MyGame_Example_Alt_parse_json_table+0x280>
    b390:	cmp	r5, #5
    b394:	bgt	c858 <MyGame_Example_Alt_parse_json_table+0x1740>
    b398:	mov	r1, r4
    b39c:	mov	r2, sl
    b3a0:	mov	r0, fp
    b3a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b3a8:	mov	r6, r0
    b3ac:	sub	r3, sl, r6
    b3b0:	cmp	r3, #1
    b3b4:	ble	b3c8 <MyGame_Example_Alt_parse_json_table+0x2b0>
    b3b8:	ldrb	r3, [r6]
    b3bc:	cmp	r3, #32
    b3c0:	bhi	b3dc <MyGame_Example_Alt_parse_json_table+0x2c4>
    b3c4:	beq	c64c <MyGame_Example_Alt_parse_json_table+0x1534>
    b3c8:	mov	r1, r6
    b3cc:	mov	r2, sl
    b3d0:	mov	r0, fp
    b3d4:	bl	0 <flatcc_json_parser_space_ext>
    b3d8:	mov	r6, r0
    b3dc:	cmp	sl, r6
    b3e0:	beq	c664 <MyGame_Example_Alt_parse_json_table+0x154c>
    b3e4:	ldrb	r3, [r6]
    b3e8:	cmp	r3, #44	; 0x2c
    b3ec:	beq	c788 <MyGame_Example_Alt_parse_json_table+0x1670>
    b3f0:	mov	r3, sl
    b3f4:	mov	sl, fp
    b3f8:	mov	fp, r3
    b3fc:	mov	r3, #0
    b400:	str	r3, [sp, #656]	; 0x290
    b404:	ldrb	r3, [r6]
    b408:	cmp	r3, #125	; 0x7d
    b40c:	beq	b620 <MyGame_Example_Alt_parse_json_table+0x508>
    b410:	mov	r3, #10
    b414:	mov	r1, r6
    b418:	mov	r2, fp
    b41c:	mov	r0, sl
    b420:	bl	0 <flatcc_json_parser_set_error>
    b424:	ldr	r3, [sp, #656]	; 0x290
    b428:	cmp	r3, #0
    b42c:	mov	r4, r0
    b430:	bne	b19c <MyGame_Example_Alt_parse_json_table+0x84>
    b434:	ldr	r3, [sl, #24]
    b438:	cmp	r3, #0
    b43c:	beq	def4 <MyGame_Example_Alt_parse_json_table+0x2ddc>
    b440:	mov	r2, fp
    b444:	mov	r1, r4
    b448:	mov	r0, sl
    b44c:	mov	r3, #33	; 0x21
    b450:	bl	0 <flatcc_json_parser_set_error>
    b454:	add	sp, sp, #700	; 0x2bc
    b458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b45c:	sub	r3, r5, #1
    b460:	cmp	r3, #7
    b464:	ldrls	pc, [pc, r3, lsl #2]
    b468:	b	c7e4 <MyGame_Example_Alt_parse_json_table+0x16cc>
    b46c:	.word	0x0000b4d4
    b470:	.word	0x0000b4c8
    b474:	.word	0x0000b4bc
    b478:	.word	0x0000b4b0
    b47c:	.word	0x0000b4a4
    b480:	.word	0x0000b498
    b484:	.word	0x0000b48c
    b488:	.word	0x0000b1dc
    b48c:	mov	r6, #0
    b490:	mov	r7, #0
    b494:	b	b1e4 <MyGame_Example_Alt_parse_json_table+0xcc>
    b498:	mov	r6, #0
    b49c:	mov	r7, #0
    b4a0:	b	b210 <MyGame_Example_Alt_parse_json_table+0xf8>
    b4a4:	mov	r6, #0
    b4a8:	mov	r7, #0
    b4ac:	b	b23c <MyGame_Example_Alt_parse_json_table+0x124>
    b4b0:	mov	r6, #0
    b4b4:	mov	r7, #0
    b4b8:	b	b268 <MyGame_Example_Alt_parse_json_table+0x150>
    b4bc:	mov	r6, #0
    b4c0:	mov	r7, #0
    b4c4:	b	b290 <MyGame_Example_Alt_parse_json_table+0x178>
    b4c8:	mov	r6, #0
    b4cc:	mov	r7, #0
    b4d0:	b	b2bc <MyGame_Example_Alt_parse_json_table+0x1a4>
    b4d4:	mov	r6, #0
    b4d8:	mov	r7, #0
    b4dc:	b	b2e8 <MyGame_Example_Alt_parse_json_table+0x1d0>
    b4e0:	add	r5, r4, #8
    b4e4:	sub	ip, sl, r5
    b4e8:	cmp	ip, #8
    b4ec:	bls	c68c <MyGame_Example_Alt_parse_json_table+0x1574>
    b4f0:	ldrb	r0, [r4, #14]
    b4f4:	mov	r3, #0
    b4f8:	lsl	r1, r0, #8
    b4fc:	str	r1, [sp, #640]	; 0x280
    b500:	add	r1, sp, #640	; 0x280
    b504:	lsr	lr, r0, #24
    b508:	str	lr, [sp, #644]	; 0x284
    b50c:	ldrd	r0, [r1]
    b510:	orr	r1, r1, r3
    b514:	mov	r3, r1
    b518:	ldrb	r0, [r4, #13]
    b51c:	lsl	r1, r0, #16
    b520:	str	r1, [sp, #632]	; 0x278
    b524:	add	r1, sp, #632	; 0x278
    b528:	lsr	lr, r0, #16
    b52c:	str	lr, [sp, #636]	; 0x27c
    b530:	ldrd	r0, [r1]
    b534:	orr	r1, r1, r3
    b538:	mov	r3, r1
    b53c:	ldrb	r0, [r4, #12]
    b540:	lsl	r1, r0, #24
    b544:	str	r1, [sp, #608]	; 0x260
    b548:	add	r1, sp, #608	; 0x260
    b54c:	lsr	lr, r0, #8
    b550:	str	lr, [sp, #612]	; 0x264
    b554:	ldrd	r0, [r1]
    b558:	orr	r1, r1, r3
    b55c:	mov	r3, r1
    b560:	ldrb	r1, [r4, #11]
    b564:	str	r1, [sp, #620]	; 0x26c
    b568:	mov	r1, #0
    b56c:	str	r1, [sp, #616]	; 0x268
    b570:	add	r1, sp, #616	; 0x268
    b574:	ldrd	r0, [r1]
    b578:	orr	r1, r1, r3
    b57c:	mov	r3, r1
    b580:	ldrb	r0, [r4, #10]
    b584:	lsl	r1, r0, #8
    b588:	str	r1, [sp, #596]	; 0x254
    b58c:	mov	r1, #0
    b590:	str	r1, [sp, #592]	; 0x250
    b594:	add	r1, sp, #592	; 0x250
    b598:	ldrd	r0, [r1]
    b59c:	orr	r1, r1, r3
    b5a0:	mov	r3, r1
    b5a4:	ldrb	r0, [r4, #9]
    b5a8:	lsl	r1, r0, #16
    b5ac:	str	r1, [sp, #580]	; 0x244
    b5b0:	mov	r1, #0
    b5b4:	str	r1, [sp, #576]	; 0x240
    b5b8:	add	r1, sp, #576	; 0x240
    b5bc:	ldrd	r0, [r1]
    b5c0:	orr	r1, r1, r3
    b5c4:	mov	r3, r1
    b5c8:	ldrb	r0, [r4, #8]
    b5cc:	add	lr, sp, #536	; 0x218
    b5d0:	mov	r2, #0
    b5d4:	lsl	r1, r0, #24
    b5d8:	str	r1, [sp, #540]	; 0x21c
    b5dc:	mov	r1, #0
    b5e0:	str	r1, [sp, #536]	; 0x218
    b5e4:	ldrd	r6, [lr]
    b5e8:	add	r1, pc, #160	; 0xa0
    b5ec:	ldrd	r0, [r1]
    b5f0:	orr	r7, r7, r3
    b5f4:	cmp	r7, r1
    b5f8:	cmpeq	r2, r0
    b5fc:	bne	b608 <MyGame_Example_Alt_parse_json_table+0x4f0>
    b600:	cmp	ip, #4
    b604:	bgt	d3f4 <MyGame_Example_Alt_parse_json_table+0x22dc>
    b608:	mov	r1, r5
    b60c:	mov	r2, sl
    b610:	mov	r0, fp
    b614:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b618:	mov	r6, r0
    b61c:	b	b3ac <MyGame_Example_Alt_parse_json_table+0x294>
    b620:	add	r4, r6, #1
    b624:	sub	r3, fp, r4
    b628:	cmp	r3, #1
    b62c:	ble	b640 <MyGame_Example_Alt_parse_json_table+0x528>
    b630:	ldrb	r3, [r6, #1]
    b634:	cmp	r3, #32
    b638:	bhi	b434 <MyGame_Example_Alt_parse_json_table+0x31c>
    b63c:	beq	ddd0 <MyGame_Example_Alt_parse_json_table+0x2cb8>
    b640:	mov	r1, r4
    b644:	mov	r2, fp
    b648:	mov	r0, sl
    b64c:	bl	0 <flatcc_json_parser_space_ext>
    b650:	ldr	r3, [sp, #656]	; 0x290
    b654:	mov	r4, r0
    b658:	b	b194 <MyGame_Example_Alt_parse_json_table+0x7c>
    b65c:	add	r4, r4, #1
    b660:	mov	r3, #0
    b664:	sub	r5, sl, r4
    b668:	str	r3, [fp, #12]
    b66c:	b	b1d4 <MyGame_Example_Alt_parse_json_table+0xbc>
    b670:	.word	0x616e795f
    b674:	.word	0x6d616e79
    b678:	.word	0x616e7900
    b67c:	.word	0x6d616e79
    b680:	.word	0x69780000
    b684:	.word	0x70726566
    b688:	.word	0x65000000
    b68c:	.word	0x6d6f7669
    b690:	.word	0x00000000
    b694:	.word	0x74797065
    b698:	.word	0xffff0000
    b69c:	cmp	r5, #6
    b6a0:	ble	b398 <MyGame_Example_Alt_parse_json_table+0x280>
    b6a4:	mov	r3, #6
    b6a8:	mov	r2, sl
    b6ac:	mov	r1, r4
    b6b0:	mov	r0, fp
    b6b4:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    b6b8:	cmp	r0, r4
    b6bc:	mov	r6, r0
    b6c0:	beq	b398 <MyGame_Example_Alt_parse_json_table+0x280>
    b6c4:	mov	r3, #0
    b6c8:	mov	r1, #3
    b6cc:	ldr	r0, [fp]
    b6d0:	str	r3, [sp, #660]	; 0x294
    b6d4:	bl	0 <flatcc_builder_start_table>
    b6d8:	cmp	r0, #0
    b6dc:	bne	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    b6e0:	add	r3, sp, #668	; 0x29c
    b6e4:	mov	r1, r6
    b6e8:	mov	r2, sl
    b6ec:	mov	r0, fp
    b6f0:	bl	2a3c <flatcc_json_parser_object_start>
    b6f4:	ldr	r3, [sp, #668]	; 0x29c
    b6f8:	cmp	r3, #0
    b6fc:	beq	bc04 <MyGame_Example_Alt_parse_json_table+0xaec>
    b700:	cmp	sl, r0
    b704:	beq	bc8c <MyGame_Example_Alt_parse_json_table+0xb74>
    b708:	ldrb	r3, [r0]
    b70c:	cmp	r3, #34	; 0x22
    b710:	moveq	r3, #0
    b714:	addeq	r0, r0, #1
    b718:	streq	r3, [fp, #12]
    b71c:	beq	b730 <MyGame_Example_Alt_parse_json_table+0x618>
    b720:	cmp	r3, #46	; 0x2e
    b724:	movne	r3, #1
    b728:	strne	r3, [fp, #12]
    b72c:	beq	c61c <MyGame_Example_Alt_parse_json_table+0x1504>
    b730:	sub	r3, sl, r0
    b734:	cmp	r3, #8
    b738:	bls	bca4 <MyGame_Example_Alt_parse_json_table+0xb8c>
    b73c:	ldrb	r2, [r0, #7]
    b740:	mov	r3, #0
    b744:	ldrb	r4, [r0, #6]
    b748:	lsr	r1, r4, #24
    b74c:	str	r1, [sp, #316]	; 0x13c
    b750:	lsl	r1, r4, #8
    b754:	str	r1, [sp, #312]	; 0x138
    b758:	add	r1, sp, #312	; 0x138
    b75c:	ldrd	r4, [r1]
    b760:	orr	r4, r4, r2
    b764:	orr	r5, r5, r3
    b768:	mov	r2, r4
    b76c:	mov	r3, r5
    b770:	ldrb	r4, [r0, #5]
    b774:	lsr	r1, r4, #16
    b778:	str	r1, [sp, #196]	; 0xc4
    b77c:	lsl	r1, r4, #16
    b780:	str	r1, [sp, #192]	; 0xc0
    b784:	ldrd	r4, [sp, #192]	; 0xc0
    b788:	orr	r4, r4, r2
    b78c:	orr	r5, r5, r3
    b790:	mov	r2, r4
    b794:	mov	r3, r5
    b798:	ldrb	r4, [r0, #4]
    b79c:	lsr	r1, r4, #8
    b7a0:	str	r1, [sp, #132]	; 0x84
    b7a4:	lsl	r1, r4, #24
    b7a8:	str	r1, [sp, #128]	; 0x80
    b7ac:	ldrd	r4, [sp, #128]	; 0x80
    b7b0:	orr	r4, r4, r2
    b7b4:	orr	r5, r5, r3
    b7b8:	mov	r2, r4
    b7bc:	mov	r3, r5
    b7c0:	ldrb	r1, [r0, #3]
    b7c4:	str	r1, [sp, #148]	; 0x94
    b7c8:	mov	r1, #0
    b7cc:	str	r1, [sp, #144]	; 0x90
    b7d0:	ldrd	r4, [sp, #144]	; 0x90
    b7d4:	orr	r4, r4, r2
    b7d8:	orr	r5, r5, r3
    b7dc:	mov	r2, r4
    b7e0:	mov	r3, r5
    b7e4:	ldrb	r4, [r0, #2]
    b7e8:	lsl	r1, r4, #8
    b7ec:	str	r1, [sp, #108]	; 0x6c
    b7f0:	mov	r1, #0
    b7f4:	str	r1, [sp, #104]	; 0x68
    b7f8:	ldrd	r4, [sp, #104]	; 0x68
    b7fc:	orr	r4, r4, r2
    b800:	orr	r5, r5, r3
    b804:	mov	r2, r4
    b808:	mov	r3, r5
    b80c:	ldrb	r4, [r0, #1]
    b810:	lsl	r1, r4, #16
    b814:	str	r1, [sp, #76]	; 0x4c
    b818:	mov	r1, #0
    b81c:	str	r1, [sp, #72]	; 0x48
    b820:	ldrd	r4, [sp, #72]	; 0x48
    b824:	orr	r4, r4, r2
    b828:	orr	r5, r5, r3
    b82c:	mov	r2, r4
    b830:	mov	r3, r5
    b834:	ldrb	r4, [r0]
    b838:	lsl	r1, r4, #24
    b83c:	str	r1, [sp, #52]	; 0x34
    b840:	mov	r1, #0
    b844:	str	r1, [sp, #48]	; 0x30
    b848:	ldrd	r4, [sp, #48]	; 0x30
    b84c:	orr	r4, r4, r2
    b850:	orr	r5, r5, r3
    b854:	mov	r2, r4
    b858:	mov	r3, r5
    b85c:	add	r5, pc, #948	; 0x3b4
    b860:	ldrd	r4, [r5]
    b864:	cmp	r3, r5
    b868:	cmpeq	r2, r4
    b86c:	bne	bc8c <MyGame_Example_Alt_parse_json_table+0xb74>
    b870:	add	r1, r0, #8
    b874:	sub	r3, sl, r1
    b878:	cmp	r3, #8
    b87c:	bls	bd28 <MyGame_Example_Alt_parse_json_table+0xc10>
    b880:	ldrb	r2, [r0, #15]
    b884:	mov	r3, #0
    b888:	ldrb	r4, [r0, #14]
    b88c:	lsr	ip, r4, #24
    b890:	str	ip, [sp, #492]	; 0x1ec
    b894:	lsl	ip, r4, #8
    b898:	str	ip, [sp, #488]	; 0x1e8
    b89c:	add	ip, sp, #488	; 0x1e8
    b8a0:	ldrd	r4, [ip]
    b8a4:	orr	r4, r4, r2
    b8a8:	orr	r5, r5, r3
    b8ac:	mov	r2, r4
    b8b0:	mov	r3, r5
    b8b4:	ldrb	r4, [r0, #13]
    b8b8:	lsr	ip, r4, #16
    b8bc:	str	ip, [sp, #412]	; 0x19c
    b8c0:	lsl	ip, r4, #16
    b8c4:	str	ip, [sp, #408]	; 0x198
    b8c8:	add	ip, sp, #408	; 0x198
    b8cc:	ldrd	r4, [ip]
    b8d0:	orr	r4, r4, r2
    b8d4:	orr	r5, r5, r3
    b8d8:	mov	r2, r4
    b8dc:	mov	r3, r5
    b8e0:	ldrb	r4, [r0, #12]
    b8e4:	lsr	ip, r4, #8
    b8e8:	str	ip, [sp, #324]	; 0x144
    b8ec:	lsl	ip, r4, #24
    b8f0:	str	ip, [sp, #320]	; 0x140
    b8f4:	add	ip, sp, #320	; 0x140
    b8f8:	ldrd	r4, [ip]
    b8fc:	orr	r4, r4, r2
    b900:	orr	r5, r5, r3
    b904:	mov	r2, r4
    b908:	mov	r3, r5
    b90c:	ldrb	ip, [r0, #11]
    b910:	str	ip, [sp, #356]	; 0x164
    b914:	mov	ip, #0
    b918:	str	ip, [sp, #352]	; 0x160
    b91c:	add	ip, sp, #352	; 0x160
    b920:	ldrd	r4, [ip]
    b924:	orr	r4, r4, r2
    b928:	orr	r5, r5, r3
    b92c:	mov	r2, r4
    b930:	mov	r3, r5
    b934:	ldrb	r4, [r0, #10]
    b938:	lsl	ip, r4, #8
    b93c:	str	ip, [sp, #276]	; 0x114
    b940:	mov	ip, #0
    b944:	str	ip, [sp, #272]	; 0x110
    b948:	add	ip, sp, #272	; 0x110
    b94c:	ldrd	r4, [ip]
    b950:	orr	r4, r4, r2
    b954:	orr	r5, r5, r3
    b958:	mov	r2, r4
    b95c:	mov	r3, r5
    b960:	ldrb	r4, [r0, #9]
    b964:	lsl	ip, r4, #16
    b968:	str	ip, [sp, #236]	; 0xec
    b96c:	mov	ip, #0
    b970:	str	ip, [sp, #232]	; 0xe8
    b974:	ldrd	r4, [sp, #232]	; 0xe8
    b978:	orr	r4, r4, r2
    b97c:	orr	r5, r5, r3
    b980:	mov	r2, r4
    b984:	mov	r3, r5
    b988:	ldrb	r4, [r0, #8]
    b98c:	lsl	ip, r4, #24
    b990:	str	ip, [sp, #204]	; 0xcc
    b994:	mov	ip, #0
    b998:	str	ip, [sp, #200]	; 0xc8
    b99c:	ldrd	r4, [sp, #200]	; 0xc8
    b9a0:	orr	r4, r4, r2
    b9a4:	orr	r5, r5, r3
    b9a8:	mov	r2, r4
    b9ac:	mov	r3, r5
    b9b0:	add	r5, pc, #616	; 0x268
    b9b4:	ldrd	r4, [r5]
    b9b8:	cmp	r3, r5
    b9bc:	cmpeq	r2, r4
    b9c0:	bne	bc90 <MyGame_Example_Alt_parse_json_table+0xb78>
    b9c4:	add	r5, r0, #16
    b9c8:	sub	r4, sl, r5
    b9cc:	cmp	r4, #8
    b9d0:	bls	be7c <MyGame_Example_Alt_parse_json_table+0xd64>
    b9d4:	ldrb	r2, [r0, #23]
    b9d8:	mov	r3, #0
    b9dc:	ldrb	r6, [r0, #22]
    b9e0:	lsr	r1, r6, #24
    b9e4:	str	r1, [sp, #604]	; 0x25c
    b9e8:	lsl	r1, r6, #8
    b9ec:	str	r1, [sp, #600]	; 0x258
    b9f0:	add	r1, sp, #600	; 0x258
    b9f4:	ldrd	r6, [r1]
    b9f8:	orr	r6, r6, r2
    b9fc:	orr	r7, r7, r3
    ba00:	mov	r2, r6
    ba04:	mov	r3, r7
    ba08:	ldrb	r6, [r0, #21]
    ba0c:	lsr	r1, r6, #16
    ba10:	str	r1, [sp, #572]	; 0x23c
    ba14:	lsl	r1, r6, #16
    ba18:	str	r1, [sp, #568]	; 0x238
    ba1c:	add	r1, sp, #568	; 0x238
    ba20:	ldrd	r6, [r1]
    ba24:	orr	r6, r6, r2
    ba28:	orr	r7, r7, r3
    ba2c:	mov	r2, r6
    ba30:	mov	r3, r7
    ba34:	ldrb	r6, [r0, #20]
    ba38:	lsr	r1, r6, #8
    ba3c:	str	r1, [sp, #508]	; 0x1fc
    ba40:	lsl	r1, r6, #24
    ba44:	str	r1, [sp, #504]	; 0x1f8
    ba48:	add	r1, sp, #504	; 0x1f8
    ba4c:	ldrd	r6, [r1]
    ba50:	orr	r6, r6, r2
    ba54:	orr	r7, r7, r3
    ba58:	mov	r2, r6
    ba5c:	mov	r3, r7
    ba60:	ldrb	r1, [r0, #19]
    ba64:	str	r1, [sp, #524]	; 0x20c
    ba68:	mov	r1, #0
    ba6c:	str	r1, [sp, #520]	; 0x208
    ba70:	add	r1, sp, #520	; 0x208
    ba74:	ldrd	r6, [r1]
    ba78:	orr	r6, r6, r2
    ba7c:	orr	r7, r7, r3
    ba80:	mov	r2, r6
    ba84:	mov	r3, r7
    ba88:	ldrb	r6, [r0, #18]
    ba8c:	lsl	r1, r6, #8
    ba90:	str	r1, [sp, #476]	; 0x1dc
    ba94:	mov	r1, #0
    ba98:	str	r1, [sp, #472]	; 0x1d8
    ba9c:	add	r1, sp, #472	; 0x1d8
    baa0:	ldrd	r6, [r1]
    baa4:	orr	r6, r6, r2
    baa8:	orr	r7, r7, r3
    baac:	mov	r2, r6
    bab0:	mov	r3, r7
    bab4:	ldrb	r6, [r0, #17]
    bab8:	lsl	r1, r6, #16
    babc:	str	r1, [sp, #460]	; 0x1cc
    bac0:	mov	r1, #0
    bac4:	str	r1, [sp, #456]	; 0x1c8
    bac8:	add	r1, sp, #456	; 0x1c8
    bacc:	ldrd	r6, [r1]
    bad0:	orr	r6, r6, r2
    bad4:	orr	r7, r7, r3
    bad8:	mov	r2, r6
    badc:	mov	r3, r7
    bae0:	ldrb	r6, [r0, #16]
    bae4:	add	r1, pc, #316	; 0x13c
    bae8:	ldrd	r0, [r1]
    baec:	lsl	ip, r6, #24
    baf0:	str	ip, [sp, #404]	; 0x194
    baf4:	mov	ip, #0
    baf8:	str	ip, [sp, #400]	; 0x190
    bafc:	add	ip, sp, #400	; 0x190
    bb00:	ldrd	r6, [ip]
    bb04:	orr	r6, r6, r2
    bb08:	orr	r7, r7, r3
    bb0c:	mov	r2, r6
    bb10:	mov	r3, r7
    bb14:	ldr	r6, [pc, #292]	; bc40 <MyGame_Example_Alt_parse_json_table+0xb28>
    bb18:	mvn	r7, #0
    bb1c:	and	r7, r7, r3
    bb20:	and	r6, r6, r2
    bb24:	cmp	r7, r1
    bb28:	cmpeq	r6, r0
    bb2c:	beq	bf00 <MyGame_Example_Alt_parse_json_table+0xde8>
    bb30:	add	r1, pc, #248	; 0xf8
    bb34:	ldrd	r0, [r1]
    bb38:	and	r2, r2, #-16777216	; 0xff000000
    bb3c:	cmp	r3, r1
    bb40:	cmpeq	r2, r0
    bb44:	movne	r3, #1
    bb48:	moveq	r3, #0
    bb4c:	cmp	r4, #5
    bb50:	orrle	r3, r3, #1
    bb54:	cmp	r3, #0
    bb58:	beq	d4a8 <MyGame_Example_Alt_parse_json_table+0x2390>
    bb5c:	add	r3, pc, #212	; 0xd4
    bb60:	ldrd	r2, [r3]
    bb64:	cmp	r7, r3
    bb68:	cmpeq	r6, r2
    bb6c:	bne	bb78 <MyGame_Example_Alt_parse_json_table+0xa60>
    bb70:	cmp	r4, #6
    bb74:	bgt	c908 <MyGame_Example_Alt_parse_json_table+0x17f0>
    bb78:	mov	r1, r5
    bb7c:	mov	r2, sl
    bb80:	mov	r0, fp
    bb84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bb88:	mov	r9, r0
    bb8c:	sub	r3, sl, r9
    bb90:	cmp	r3, #1
    bb94:	ble	bba8 <MyGame_Example_Alt_parse_json_table+0xa90>
    bb98:	ldrb	r3, [r9]
    bb9c:	cmp	r3, #32
    bba0:	bhi	bbbc <MyGame_Example_Alt_parse_json_table+0xaa4>
    bba4:	beq	bde4 <MyGame_Example_Alt_parse_json_table+0xccc>
    bba8:	mov	r1, r9
    bbac:	mov	r2, sl
    bbb0:	mov	r0, fp
    bbb4:	bl	0 <flatcc_json_parser_space_ext>
    bbb8:	mov	r9, r0
    bbbc:	cmp	sl, r9
    bbc0:	beq	bdfc <MyGame_Example_Alt_parse_json_table+0xce4>
    bbc4:	ldrb	r3, [r9]
    bbc8:	cmp	r3, #44	; 0x2c
    bbcc:	beq	be2c <MyGame_Example_Alt_parse_json_table+0xd14>
    bbd0:	mov	r3, #0
    bbd4:	str	r3, [sp, #668]	; 0x29c
    bbd8:	ldrb	r3, [r9]
    bbdc:	cmp	r3, #125	; 0x7d
    bbe0:	beq	bdac <MyGame_Example_Alt_parse_json_table+0xc94>
    bbe4:	mov	r3, #10
    bbe8:	mov	r1, r9
    bbec:	mov	r2, sl
    bbf0:	mov	r0, fp
    bbf4:	bl	0 <flatcc_json_parser_set_error>
    bbf8:	ldr	r3, [sp, #668]	; 0x29c
    bbfc:	cmp	r3, #0
    bc00:	bne	b700 <MyGame_Example_Alt_parse_json_table+0x5e8>
    bc04:	mov	r6, r0
    bc08:	ldr	r3, [fp, #24]
    bc0c:	cmp	r3, #0
    bc10:	beq	be14 <MyGame_Example_Alt_parse_json_table+0xcfc>
    bc14:	b	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    bc18:	.word	0x6a736f6e
    bc1c:	.word	0x74657374
    bc20:	.word	0x69787061
    bc24:	.word	0x70726566
    bc28:	.word	0x67320000
    bc2c:	.word	0x7273696e
    bc30:	.word	0x67000000
    bc34:	.word	0x7273696e
    bc38:	.word	0x67330000
    bc3c:	.word	0x7273696e
    bc40:	.word	0xffff0000
    bc44:	.word	0x00000228
    bc48:	mov	r1, r6
    bc4c:	mov	r3, #33	; 0x21
    bc50:	mov	r2, sl
    bc54:	mov	r0, fp
    bc58:	bl	0 <flatcc_json_parser_set_error>
    bc5c:	ldr	r3, [sp, #660]	; 0x294
    bc60:	cmp	r3, #0
    bc64:	mov	r6, r0
    bc68:	beq	c8ac <MyGame_Example_Alt_parse_json_table+0x1794>
    bc6c:	mov	r1, #0
    bc70:	ldr	r0, [fp]
    bc74:	bl	0 <flatcc_builder_table_add_offset>
    bc78:	cmp	r0, #0
    bc7c:	beq	c8ac <MyGame_Example_Alt_parse_json_table+0x1794>
    bc80:	ldr	r3, [sp, #660]	; 0x294
    bc84:	str	r3, [r0]
    bc88:	b	b3ac <MyGame_Example_Alt_parse_json_table+0x294>
    bc8c:	mov	r1, r0
    bc90:	mov	r2, sl
    bc94:	mov	r0, fp
    bc98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc9c:	mov	r9, r0
    bca0:	b	bb8c <MyGame_Example_Alt_parse_json_table+0xa74>
    bca4:	sub	r3, r3, #1
    bca8:	cmp	r3, #7
    bcac:	ldrls	pc, [pc, r3, lsl #2]
    bcb0:	b	bc8c <MyGame_Example_Alt_parse_json_table+0xb74>
    bcb4:	.word	0x0000bd1c
    bcb8:	.word	0x0000bd10
    bcbc:	.word	0x0000bd04
    bcc0:	.word	0x0000bcf8
    bcc4:	.word	0x0000bcec
    bcc8:	.word	0x0000bce0
    bccc:	.word	0x0000bcd4
    bcd0:	.word	0x0000b73c
    bcd4:	mov	r2, #0
    bcd8:	mov	r3, #0
    bcdc:	b	b744 <MyGame_Example_Alt_parse_json_table+0x62c>
    bce0:	mov	r2, #0
    bce4:	mov	r3, #0
    bce8:	b	b770 <MyGame_Example_Alt_parse_json_table+0x658>
    bcec:	mov	r2, #0
    bcf0:	mov	r3, #0
    bcf4:	b	b798 <MyGame_Example_Alt_parse_json_table+0x680>
    bcf8:	mov	r2, #0
    bcfc:	mov	r3, #0
    bd00:	b	b7c0 <MyGame_Example_Alt_parse_json_table+0x6a8>
    bd04:	mov	r2, #0
    bd08:	mov	r3, #0
    bd0c:	b	b7e4 <MyGame_Example_Alt_parse_json_table+0x6cc>
    bd10:	mov	r2, #0
    bd14:	mov	r3, #0
    bd18:	b	b80c <MyGame_Example_Alt_parse_json_table+0x6f4>
    bd1c:	mov	r2, #0
    bd20:	mov	r3, #0
    bd24:	b	b834 <MyGame_Example_Alt_parse_json_table+0x71c>
    bd28:	sub	r3, r3, #1
    bd2c:	cmp	r3, #7
    bd30:	ldrls	pc, [pc, r3, lsl #2]
    bd34:	b	bc90 <MyGame_Example_Alt_parse_json_table+0xb78>
    bd38:	.word	0x0000bda0
    bd3c:	.word	0x0000bd94
    bd40:	.word	0x0000bd88
    bd44:	.word	0x0000bd7c
    bd48:	.word	0x0000bd70
    bd4c:	.word	0x0000bd64
    bd50:	.word	0x0000bd58
    bd54:	.word	0x0000b880
    bd58:	mov	r2, #0
    bd5c:	mov	r3, #0
    bd60:	b	b888 <MyGame_Example_Alt_parse_json_table+0x770>
    bd64:	mov	r2, #0
    bd68:	mov	r3, #0
    bd6c:	b	b8b4 <MyGame_Example_Alt_parse_json_table+0x79c>
    bd70:	mov	r2, #0
    bd74:	mov	r3, #0
    bd78:	b	b8e0 <MyGame_Example_Alt_parse_json_table+0x7c8>
    bd7c:	mov	r2, #0
    bd80:	mov	r3, #0
    bd84:	b	b90c <MyGame_Example_Alt_parse_json_table+0x7f4>
    bd88:	mov	r2, #0
    bd8c:	mov	r3, #0
    bd90:	b	b934 <MyGame_Example_Alt_parse_json_table+0x81c>
    bd94:	mov	r2, #0
    bd98:	mov	r3, #0
    bd9c:	b	b960 <MyGame_Example_Alt_parse_json_table+0x848>
    bda0:	mov	r2, #0
    bda4:	mov	r3, #0
    bda8:	b	b988 <MyGame_Example_Alt_parse_json_table+0x870>
    bdac:	add	r0, r9, #1
    bdb0:	sub	r3, sl, r0
    bdb4:	cmp	r3, #1
    bdb8:	ble	bdcc <MyGame_Example_Alt_parse_json_table+0xcb4>
    bdbc:	ldrb	r3, [r9, #1]
    bdc0:	cmp	r3, #32
    bdc4:	bhi	bc04 <MyGame_Example_Alt_parse_json_table+0xaec>
    bdc8:	beq	c808 <MyGame_Example_Alt_parse_json_table+0x16f0>
    bdcc:	mov	r1, r0
    bdd0:	mov	r2, sl
    bdd4:	mov	r0, fp
    bdd8:	bl	0 <flatcc_json_parser_space_ext>
    bddc:	ldr	r3, [sp, #668]	; 0x29c
    bde0:	b	b6f8 <MyGame_Example_Alt_parse_json_table+0x5e0>
    bde4:	ldrb	r3, [r9, #1]
    bde8:	cmp	r3, #32
    bdec:	addhi	r9, r9, #1
    bdf0:	bls	bba8 <MyGame_Example_Alt_parse_json_table+0xa90>
    bdf4:	cmp	sl, r9
    bdf8:	bne	bbc4 <MyGame_Example_Alt_parse_json_table+0xaac>
    bdfc:	mov	r3, #0
    be00:	str	r3, [sp, #668]	; 0x29c
    be04:	ldr	r3, [fp, #24]
    be08:	mov	r6, sl
    be0c:	cmp	r3, #0
    be10:	bne	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    be14:	ldr	r0, [fp]
    be18:	bl	0 <flatcc_builder_end_table>
    be1c:	cmp	r0, #0
    be20:	str	r0, [sp, #660]	; 0x294
    be24:	beq	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    be28:	b	bc6c <MyGame_Example_Alt_parse_json_table+0xb54>
    be2c:	add	r0, r9, #1
    be30:	sub	r3, sl, r0
    be34:	cmp	r3, #1
    be38:	ble	be4c <MyGame_Example_Alt_parse_json_table+0xd34>
    be3c:	ldrb	r3, [r9, #1]
    be40:	cmp	r3, #32
    be44:	bhi	be5c <MyGame_Example_Alt_parse_json_table+0xd44>
    be48:	beq	d328 <MyGame_Example_Alt_parse_json_table+0x2210>
    be4c:	mov	r1, r0
    be50:	mov	r2, sl
    be54:	mov	r0, fp
    be58:	bl	0 <flatcc_json_parser_space_ext>
    be5c:	cmp	sl, r0
    be60:	beq	d340 <MyGame_Example_Alt_parse_json_table+0x2228>
    be64:	ldrb	r3, [r0]
    be68:	cmp	r3, #125	; 0x7d
    be6c:	beq	dde4 <MyGame_Example_Alt_parse_json_table+0x2ccc>
    be70:	mov	r3, #1
    be74:	str	r3, [sp, #668]	; 0x29c
    be78:	b	b700 <MyGame_Example_Alt_parse_json_table+0x5e8>
    be7c:	sub	r3, r4, #1
    be80:	cmp	r3, #7
    be84:	ldrls	pc, [pc, r3, lsl #2]
    be88:	b	bb78 <MyGame_Example_Alt_parse_json_table+0xa60>
    be8c:	.word	0x0000bef4
    be90:	.word	0x0000bee8
    be94:	.word	0x0000bedc
    be98:	.word	0x0000bed0
    be9c:	.word	0x0000bec4
    bea0:	.word	0x0000beb8
    bea4:	.word	0x0000beac
    bea8:	.word	0x0000b9d4
    beac:	mov	r2, #0
    beb0:	mov	r3, #0
    beb4:	b	b9dc <MyGame_Example_Alt_parse_json_table+0x8c4>
    beb8:	mov	r2, #0
    bebc:	mov	r3, #0
    bec0:	b	ba08 <MyGame_Example_Alt_parse_json_table+0x8f0>
    bec4:	mov	r2, #0
    bec8:	mov	r3, #0
    becc:	b	ba34 <MyGame_Example_Alt_parse_json_table+0x91c>
    bed0:	mov	r2, #0
    bed4:	mov	r3, #0
    bed8:	b	ba60 <MyGame_Example_Alt_parse_json_table+0x948>
    bedc:	mov	r2, #0
    bee0:	mov	r3, #0
    bee4:	b	ba88 <MyGame_Example_Alt_parse_json_table+0x970>
    bee8:	mov	r2, #0
    beec:	mov	r3, #0
    bef0:	b	bab4 <MyGame_Example_Alt_parse_json_table+0x99c>
    bef4:	mov	r2, #0
    bef8:	mov	r3, #0
    befc:	b	bae0 <MyGame_Example_Alt_parse_json_table+0x9c8>
    bf00:	cmp	r4, #6
    bf04:	ble	bb78 <MyGame_Example_Alt_parse_json_table+0xa60>
    bf08:	mov	r3, #6
    bf0c:	mov	r2, sl
    bf10:	mov	r1, r5
    bf14:	mov	r0, fp
    bf18:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    bf1c:	cmp	r5, r0
    bf20:	mov	r9, r0
    bf24:	beq	bb78 <MyGame_Example_Alt_parse_json_table+0xa60>
    bf28:	mov	r1, #2
    bf2c:	ldr	r0, [fp]
    bf30:	bl	0 <flatcc_builder_start_table>
    bf34:	cmp	r0, #0
    bf38:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    bf3c:	mov	r1, r9
    bf40:	add	r3, sp, #672	; 0x2a0
    bf44:	mov	r2, sl
    bf48:	mov	r0, fp
    bf4c:	bl	2a3c <flatcc_json_parser_object_start>
    bf50:	mov	r6, #0
    bf54:	ldr	r8, [pc, #-792]	; bc44 <MyGame_Example_Alt_parse_json_table+0xb2c>
    bf58:	ldr	r3, [sp, #672]	; 0x2a0
    bf5c:	mov	r5, r6
    bf60:	mov	r9, fp
    bf64:	mov	r7, sl
    bf68:	cmp	r3, #0
    bf6c:	beq	c2e0 <MyGame_Example_Alt_parse_json_table+0x11c8>
    bf70:	mov	r1, r0
    bf74:	cmp	r7, r1
    bf78:	beq	c314 <MyGame_Example_Alt_parse_json_table+0x11fc>
    bf7c:	ldrb	r3, [r1]
    bf80:	cmp	r3, #34	; 0x22
    bf84:	moveq	r3, #0
    bf88:	addeq	r1, r1, #1
    bf8c:	streq	r3, [r9, #12]
    bf90:	beq	bfa4 <MyGame_Example_Alt_parse_json_table+0xe8c>
    bf94:	cmp	r3, #46	; 0x2e
    bf98:	movne	r3, #1
    bf9c:	strne	r3, [r9, #12]
    bfa0:	beq	c634 <MyGame_Example_Alt_parse_json_table+0x151c>
    bfa4:	sub	r3, r7, r1
    bfa8:	cmp	r3, #8
    bfac:	bls	c328 <MyGame_Example_Alt_parse_json_table+0x1210>
    bfb0:	ldrb	sl, [r1, #7]
    bfb4:	mov	fp, #0
    bfb8:	ldrb	r2, [r1, #6]
    bfbc:	lsl	r3, r2, #8
    bfc0:	str	r3, [sp, #336]	; 0x150
    bfc4:	add	r3, sp, #336	; 0x150
    bfc8:	lsr	r0, r2, #24
    bfcc:	str	r0, [sp, #340]	; 0x154
    bfd0:	ldrd	r2, [r3]
    bfd4:	orr	r2, r2, sl
    bfd8:	orr	r3, r3, fp
    bfdc:	ldrb	sl, [r1, #5]
    bfe0:	lsr	r0, sl, #16
    bfe4:	str	r0, [sp, #212]	; 0xd4
    bfe8:	lsl	r0, sl, #16
    bfec:	str	r0, [sp, #208]	; 0xd0
    bff0:	ldrd	sl, [sp, #208]	; 0xd0
    bff4:	orr	sl, sl, r2
    bff8:	orr	fp, fp, r3
    bffc:	mov	r2, sl
    c000:	mov	r3, fp
    c004:	ldrb	sl, [r1, #4]
    c008:	lsr	r0, sl, #8
    c00c:	str	r0, [sp, #140]	; 0x8c
    c010:	lsl	r0, sl, #24
    c014:	str	r0, [sp, #136]	; 0x88
    c018:	ldrd	sl, [sp, #136]	; 0x88
    c01c:	orr	sl, sl, r2
    c020:	orr	fp, fp, r3
    c024:	mov	r2, sl
    c028:	mov	r3, fp
    c02c:	ldrb	r0, [r1, #3]
    c030:	str	r0, [sp, #156]	; 0x9c
    c034:	mov	r0, #0
    c038:	str	r0, [sp, #152]	; 0x98
    c03c:	ldrd	sl, [sp, #152]	; 0x98
    c040:	orr	sl, sl, r2
    c044:	orr	fp, fp, r3
    c048:	mov	r2, sl
    c04c:	mov	r3, fp
    c050:	ldrb	sl, [r1, #2]
    c054:	lsl	r0, sl, #8
    c058:	str	r0, [sp, #116]	; 0x74
    c05c:	mov	r0, #0
    c060:	str	r0, [sp, #112]	; 0x70
    c064:	ldrd	sl, [sp, #112]	; 0x70
    c068:	orr	sl, sl, r2
    c06c:	orr	fp, fp, r3
    c070:	mov	r2, sl
    c074:	mov	r3, fp
    c078:	ldrb	sl, [r1, #1]
    c07c:	lsl	r0, sl, #16
    c080:	str	r0, [sp, #92]	; 0x5c
    c084:	mov	r0, #0
    c088:	str	r0, [sp, #88]	; 0x58
    c08c:	ldrd	sl, [sp, #88]	; 0x58
    c090:	orr	sl, sl, r2
    c094:	orr	fp, fp, r3
    c098:	mov	r2, sl
    c09c:	mov	r3, fp
    c0a0:	ldrb	sl, [r1]
    c0a4:	lsl	r0, sl, #24
    c0a8:	str	r0, [sp, #60]	; 0x3c
    c0ac:	mov	r0, #0
    c0b0:	str	r0, [sp, #56]	; 0x38
    c0b4:	ldrd	sl, [sp, #56]	; 0x38
    c0b8:	orr	sl, sl, r2
    c0bc:	orr	fp, fp, r3
    c0c0:	mov	r2, sl
    c0c4:	mov	r3, fp
    c0c8:	add	fp, pc, #920	; 0x398
    c0cc:	ldrd	sl, [fp]
    c0d0:	cmp	r3, fp
    c0d4:	cmpeq	r2, sl
    c0d8:	bne	c314 <MyGame_Example_Alt_parse_json_table+0x11fc>
    c0dc:	add	r4, r1, #8
    c0e0:	sub	r0, r7, r4
    c0e4:	cmp	r0, #8
    c0e8:	bls	c3ac <MyGame_Example_Alt_parse_json_table+0x1294>
    c0ec:	ldrb	sl, [r1, #15]
    c0f0:	mov	fp, #0
    c0f4:	ldrb	r2, [r1, #14]
    c0f8:	lsl	r3, r2, #8
    c0fc:	str	r3, [sp, #512]	; 0x200
    c100:	add	r3, sp, #512	; 0x200
    c104:	lsr	ip, r2, #24
    c108:	str	ip, [sp, #516]	; 0x204
    c10c:	ldrd	r2, [r3]
    c110:	orr	r2, r2, sl
    c114:	orr	r3, r3, fp
    c118:	mov	sl, r2
    c11c:	mov	fp, r3
    c120:	ldrb	r2, [r1, #13]
    c124:	lsl	r3, r2, #16
    c128:	str	r3, [sp, #432]	; 0x1b0
    c12c:	add	r3, sp, #432	; 0x1b0
    c130:	lsr	ip, r2, #16
    c134:	str	ip, [sp, #436]	; 0x1b4
    c138:	ldrd	r2, [r3]
    c13c:	orr	r2, r2, sl
    c140:	orr	r3, r3, fp
    c144:	mov	sl, r2
    c148:	mov	fp, r3
    c14c:	ldrb	r2, [r1, #12]
    c150:	lsl	r3, r2, #24
    c154:	str	r3, [sp, #344]	; 0x158
    c158:	add	r3, sp, #344	; 0x158
    c15c:	lsr	ip, r2, #8
    c160:	str	ip, [sp, #348]	; 0x15c
    c164:	ldrd	r2, [r3]
    c168:	orr	r2, r2, sl
    c16c:	orr	r3, r3, fp
    c170:	ldrb	ip, [r1, #11]
    c174:	str	ip, [sp, #372]	; 0x174
    c178:	mov	ip, #0
    c17c:	str	ip, [sp, #368]	; 0x170
    c180:	add	ip, sp, #368	; 0x170
    c184:	ldrd	sl, [ip]
    c188:	orr	sl, sl, r2
    c18c:	orr	fp, fp, r3
    c190:	mov	r2, sl
    c194:	mov	r3, fp
    c198:	ldrb	sl, [r1, #10]
    c19c:	lsl	ip, sl, #8
    c1a0:	str	ip, [sp, #292]	; 0x124
    c1a4:	mov	ip, #0
    c1a8:	str	ip, [sp, #288]	; 0x120
    c1ac:	add	ip, sp, #288	; 0x120
    c1b0:	ldrd	sl, [ip]
    c1b4:	orr	sl, sl, r2
    c1b8:	orr	fp, fp, r3
    c1bc:	mov	r2, sl
    c1c0:	mov	r3, fp
    c1c4:	ldrb	sl, [r1, #9]
    c1c8:	lsl	ip, sl, #16
    c1cc:	str	ip, [sp, #260]	; 0x104
    c1d0:	mov	ip, #0
    c1d4:	str	ip, [sp, #256]	; 0x100
    c1d8:	add	ip, sp, #256	; 0x100
    c1dc:	ldrd	sl, [ip]
    c1e0:	orr	sl, sl, r2
    c1e4:	orr	fp, fp, r3
    c1e8:	mov	r2, sl
    c1ec:	mov	r3, fp
    c1f0:	ldrb	sl, [r1, #8]
    c1f4:	lsl	r1, sl, #24
    c1f8:	str	r1, [sp, #172]	; 0xac
    c1fc:	mov	r1, #0
    c200:	str	r1, [sp, #168]	; 0xa8
    c204:	ldrd	sl, [sp, #168]	; 0xa8
    c208:	orr	sl, sl, r2
    c20c:	orr	fp, fp, r3
    c210:	add	r3, sp, #384	; 0x180
    c214:	strd	sl, [r3]
    c218:	add	r3, pc, #592	; 0x250
    c21c:	ldrd	r2, [r3]
    c220:	bic	sl, sl, #255	; 0xff
    c224:	cmp	fp, r3
    c228:	cmpeq	sl, r2
    c22c:	beq	c4ec <MyGame_Example_Alt_parse_json_table+0x13d4>
    c230:	add	r1, sp, #384	; 0x180
    c234:	add	r3, pc, #572	; 0x23c
    c238:	ldrd	r2, [r3]
    c23c:	ldrd	sl, [r1]
    c240:	cmp	fp, r3
    c244:	cmpeq	sl, r2
    c248:	bne	c254 <MyGame_Example_Alt_parse_json_table+0x113c>
    c24c:	cmp	r0, #8
    c250:	bgt	c6bc <MyGame_Example_Alt_parse_json_table+0x15a4>
    c254:	mov	r1, r4
    c258:	mov	r2, r7
    c25c:	mov	r0, r9
    c260:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c264:	mov	r4, r0
    c268:	sub	r3, r7, r4
    c26c:	cmp	r3, #1
    c270:	ble	c284 <MyGame_Example_Alt_parse_json_table+0x116c>
    c274:	ldrb	r3, [r4]
    c278:	cmp	r3, #32
    c27c:	bhi	c298 <MyGame_Example_Alt_parse_json_table+0x1180>
    c280:	beq	c488 <MyGame_Example_Alt_parse_json_table+0x1370>
    c284:	mov	r1, r4
    c288:	mov	r2, r7
    c28c:	mov	r0, r9
    c290:	bl	0 <flatcc_json_parser_space_ext>
    c294:	mov	r4, r0
    c298:	cmp	r7, r4
    c29c:	beq	c4a0 <MyGame_Example_Alt_parse_json_table+0x1388>
    c2a0:	ldrb	r3, [r4]
    c2a4:	cmp	r3, #44	; 0x2c
    c2a8:	beq	c5cc <MyGame_Example_Alt_parse_json_table+0x14b4>
    c2ac:	mov	r3, #0
    c2b0:	str	r3, [sp, #672]	; 0x2a0
    c2b4:	ldrb	r3, [r4]
    c2b8:	cmp	r3, #125	; 0x7d
    c2bc:	beq	c430 <MyGame_Example_Alt_parse_json_table+0x1318>
    c2c0:	mov	r3, #10
    c2c4:	mov	r1, r4
    c2c8:	mov	r2, r7
    c2cc:	mov	r0, r9
    c2d0:	bl	0 <flatcc_json_parser_set_error>
    c2d4:	ldr	r3, [sp, #672]	; 0x2a0
    c2d8:	cmp	r3, #0
    c2dc:	bne	bf70 <MyGame_Example_Alt_parse_json_table+0xe58>
    c2e0:	mov	fp, r9
    c2e4:	mov	sl, r7
    c2e8:	mov	r9, r0
    c2ec:	ldr	r3, [fp, #24]
    c2f0:	cmp	r3, #0
    c2f4:	beq	c4c0 <MyGame_Example_Alt_parse_json_table+0x13a8>
    c2f8:	mov	r1, r9
    c2fc:	mov	r3, #33	; 0x21
    c300:	mov	r2, sl
    c304:	mov	r0, fp
    c308:	bl	0 <flatcc_json_parser_set_error>
    c30c:	mov	r6, r0
    c310:	b	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    c314:	mov	r2, r7
    c318:	mov	r0, r9
    c31c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c320:	mov	r4, r0
    c324:	b	c268 <MyGame_Example_Alt_parse_json_table+0x1150>
    c328:	sub	r3, r3, #1
    c32c:	cmp	r3, #7
    c330:	ldrls	pc, [pc, r3, lsl #2]
    c334:	b	c314 <MyGame_Example_Alt_parse_json_table+0x11fc>
    c338:	.word	0x0000c3a0
    c33c:	.word	0x0000c394
    c340:	.word	0x0000c388
    c344:	.word	0x0000c37c
    c348:	.word	0x0000c370
    c34c:	.word	0x0000c364
    c350:	.word	0x0000c358
    c354:	.word	0x0000bfb0
    c358:	mov	sl, r6
    c35c:	mov	fp, r5
    c360:	b	bfb8 <MyGame_Example_Alt_parse_json_table+0xea0>
    c364:	mov	r2, r6
    c368:	mov	r3, r5
    c36c:	b	bfdc <MyGame_Example_Alt_parse_json_table+0xec4>
    c370:	mov	r2, r6
    c374:	mov	r3, r5
    c378:	b	c004 <MyGame_Example_Alt_parse_json_table+0xeec>
    c37c:	mov	r2, r6
    c380:	mov	r3, r5
    c384:	b	c02c <MyGame_Example_Alt_parse_json_table+0xf14>
    c388:	mov	r2, r6
    c38c:	mov	r3, r5
    c390:	b	c050 <MyGame_Example_Alt_parse_json_table+0xf38>
    c394:	mov	r2, r6
    c398:	mov	r3, r5
    c39c:	b	c078 <MyGame_Example_Alt_parse_json_table+0xf60>
    c3a0:	mov	r2, r6
    c3a4:	mov	r3, r5
    c3a8:	b	c0a0 <MyGame_Example_Alt_parse_json_table+0xf88>
    c3ac:	sub	r3, r0, #1
    c3b0:	cmp	r3, #7
    c3b4:	ldrls	pc, [pc, r3, lsl #2]
    c3b8:	b	c254 <MyGame_Example_Alt_parse_json_table+0x113c>
    c3bc:	.word	0x0000c424
    c3c0:	.word	0x0000c418
    c3c4:	.word	0x0000c40c
    c3c8:	.word	0x0000c400
    c3cc:	.word	0x0000c3f4
    c3d0:	.word	0x0000c3e8
    c3d4:	.word	0x0000c3dc
    c3d8:	.word	0x0000c0ec
    c3dc:	mov	sl, r6
    c3e0:	mov	fp, r5
    c3e4:	b	c0f4 <MyGame_Example_Alt_parse_json_table+0xfdc>
    c3e8:	mov	sl, r6
    c3ec:	mov	fp, r5
    c3f0:	b	c120 <MyGame_Example_Alt_parse_json_table+0x1008>
    c3f4:	mov	sl, r6
    c3f8:	mov	fp, r5
    c3fc:	b	c14c <MyGame_Example_Alt_parse_json_table+0x1034>
    c400:	mov	r2, r6
    c404:	mov	r3, r5
    c408:	b	c170 <MyGame_Example_Alt_parse_json_table+0x1058>
    c40c:	mov	r2, r6
    c410:	mov	r3, r5
    c414:	b	c198 <MyGame_Example_Alt_parse_json_table+0x1080>
    c418:	mov	r2, r6
    c41c:	mov	r3, r5
    c420:	b	c1c4 <MyGame_Example_Alt_parse_json_table+0x10ac>
    c424:	mov	r2, r6
    c428:	mov	r3, r5
    c42c:	b	c1f0 <MyGame_Example_Alt_parse_json_table+0x10d8>
    c430:	add	r0, r4, #1
    c434:	sub	r3, r7, r0
    c438:	cmp	r3, #1
    c43c:	ble	c450 <MyGame_Example_Alt_parse_json_table+0x1338>
    c440:	ldrb	r3, [r4, #1]
    c444:	cmp	r3, #32
    c448:	bhi	c2e0 <MyGame_Example_Alt_parse_json_table+0x11c8>
    c44c:	beq	c81c <MyGame_Example_Alt_parse_json_table+0x1704>
    c450:	mov	r1, r0
    c454:	mov	r2, r7
    c458:	mov	r0, r9
    c45c:	bl	0 <flatcc_json_parser_space_ext>
    c460:	ldr	r3, [sp, #672]	; 0x2a0
    c464:	b	bf68 <MyGame_Example_Alt_parse_json_table+0xe50>
    c468:	.word	0x5f626262
    c46c:	.word	0x61616161
    c470:	.word	0x65707300
    c474:	.word	0x625f7374
    c478:	.word	0x6172745f
    c47c:	.word	0x625f7374
    c480:	.word	0x00000000
    c484:	.word	0x00000288
    c488:	ldrb	r3, [r4, #1]
    c48c:	cmp	r3, #32
    c490:	addhi	r4, r4, #1
    c494:	bls	c284 <MyGame_Example_Alt_parse_json_table+0x116c>
    c498:	cmp	r7, r4
    c49c:	bne	c2a0 <MyGame_Example_Alt_parse_json_table+0x1188>
    c4a0:	mov	fp, r9
    c4a4:	mov	r3, #0
    c4a8:	str	r3, [sp, #672]	; 0x2a0
    c4ac:	ldr	r3, [fp, #24]
    c4b0:	mov	sl, r7
    c4b4:	cmp	r3, #0
    c4b8:	mov	r9, r7
    c4bc:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    c4c0:	ldr	r0, [fp]
    c4c4:	bl	0 <flatcc_builder_end_table>
    c4c8:	subs	r4, r0, #0
    c4cc:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    c4d0:	mov	r1, #1
    c4d4:	ldr	r0, [fp]
    c4d8:	bl	0 <flatcc_builder_table_add_offset>
    c4dc:	cmp	r0, #0
    c4e0:	bne	cd00 <MyGame_Example_Alt_parse_json_table+0x1be8>
    c4e4:	mov	r6, r9
    c4e8:	b	bc48 <MyGame_Example_Alt_parse_json_table+0xb30>
    c4ec:	cmp	r0, #7
    c4f0:	ble	c254 <MyGame_Example_Alt_parse_json_table+0x113c>
    c4f4:	mov	r3, #7
    c4f8:	mov	r2, r7
    c4fc:	mov	r1, r4
    c500:	mov	r0, r9
    c504:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    c508:	cmp	r4, r0
    c50c:	mov	sl, r0
    c510:	beq	c254 <MyGame_Example_Alt_parse_json_table+0x113c>
    c514:	ldr	r3, [sp, #168]	; 0xa8
    c518:	cmp	r7, r0
    c51c:	str	r6, [sp, #680]	; 0x2a8
    c520:	str	r5, [sp, #684]	; 0x2ac
    c524:	str	r6, [sp, #688]	; 0x2b0
    c528:	str	r5, [sp, #692]	; 0x2b4
    c52c:	str	r3, [sp, #676]	; 0x2a4
    c530:	beq	df48 <MyGame_Example_Alt_parse_json_table+0x2e30>
    c534:	add	r3, sp, #688	; 0x2b0
    c538:	str	r3, [sp]
    c53c:	mov	r1, r0
    c540:	add	r3, sp, #676	; 0x2a4
    c544:	mov	r2, r7
    c548:	mov	r0, r9
    c54c:	bl	0 <flatcc_json_parser_integer>
    c550:	cmp	sl, r0
    c554:	mov	r4, r0
    c558:	beq	df48 <MyGame_Example_Alt_parse_json_table+0x2e30>
    c55c:	ldr	r1, [sp, #676]	; 0x2a4
    c560:	add	r3, sp, #688	; 0x2b0
    c564:	cmp	r1, #0
    c568:	ldrd	r2, [r3]
    c56c:	beq	c7f0 <MyGame_Example_Alt_parse_json_table+0x16d8>
    c570:	cmp	r3, #-2147483648	; 0x80000000
    c574:	cmpeq	r2, #0
    c578:	bhi	de4c <MyGame_Example_Alt_parse_json_table+0x2d34>
    c57c:	rsbs	r2, r2, #0
    c580:	rsc	r3, r3, #0
    c584:	add	r1, sp, #680	; 0x2a8
    c588:	strd	r2, [r1]
    c58c:	orrs	r3, r2, r3
    c590:	bne	c5a0 <MyGame_Example_Alt_parse_json_table+0x1488>
    c594:	ldr	r3, [r9, #8]
    c598:	tst	r3, #2
    c59c:	beq	c268 <MyGame_Example_Alt_parse_json_table+0x1150>
    c5a0:	mov	r3, #8
    c5a4:	mov	r2, r3
    c5a8:	mov	r1, #0
    c5ac:	ldr	r0, [r9]
    c5b0:	bl	0 <flatcc_builder_table_add>
    c5b4:	cmp	r0, #0
    c5b8:	beq	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    c5bc:	add	r3, sp, #680	; 0x2a8
    c5c0:	ldrd	r2, [r3]
    c5c4:	strd	r2, [r0]
    c5c8:	b	c268 <MyGame_Example_Alt_parse_json_table+0x1150>
    c5cc:	add	r1, r4, #1
    c5d0:	sub	r3, r7, r1
    c5d4:	cmp	r3, #1
    c5d8:	ble	c5ec <MyGame_Example_Alt_parse_json_table+0x14d4>
    c5dc:	ldrb	r3, [r4, #1]
    c5e0:	cmp	r3, #32
    c5e4:	bhi	c5fc <MyGame_Example_Alt_parse_json_table+0x14e4>
    c5e8:	beq	d3b8 <MyGame_Example_Alt_parse_json_table+0x22a0>
    c5ec:	mov	r2, r7
    c5f0:	mov	r0, r9
    c5f4:	bl	0 <flatcc_json_parser_space_ext>
    c5f8:	mov	r1, r0
    c5fc:	cmp	r7, r1
    c600:	beq	d3d0 <MyGame_Example_Alt_parse_json_table+0x22b8>
    c604:	ldrb	r3, [r1]
    c608:	cmp	r3, #125	; 0x7d
    c60c:	beq	de04 <MyGame_Example_Alt_parse_json_table+0x2cec>
    c610:	mov	r3, #1
    c614:	str	r3, [sp, #672]	; 0x2a0
    c618:	b	bf74 <MyGame_Example_Alt_parse_json_table+0xe5c>
    c61c:	mov	r1, r0
    c620:	mov	r3, #5
    c624:	mov	r2, sl
    c628:	mov	r0, fp
    c62c:	bl	0 <flatcc_json_parser_set_error>
    c630:	b	b730 <MyGame_Example_Alt_parse_json_table+0x618>
    c634:	mov	r3, #5
    c638:	mov	r2, r7
    c63c:	mov	r0, r9
    c640:	bl	0 <flatcc_json_parser_set_error>
    c644:	mov	r1, r0
    c648:	b	bfa4 <MyGame_Example_Alt_parse_json_table+0xe8c>
    c64c:	ldrb	r3, [r6, #1]
    c650:	cmp	r3, #32
    c654:	addhi	r6, r6, #1
    c658:	bls	b3c8 <MyGame_Example_Alt_parse_json_table+0x2b0>
    c65c:	cmp	sl, r6
    c660:	bne	b3e4 <MyGame_Example_Alt_parse_json_table+0x2cc>
    c664:	mov	r3, sl
    c668:	mov	sl, fp
    c66c:	mov	fp, r3
    c670:	mov	r3, #0
    c674:	str	r3, [sp, #656]	; 0x290
    c678:	ldr	r3, [sl, #24]
    c67c:	mov	r4, fp
    c680:	cmp	r3, #0
    c684:	bne	b440 <MyGame_Example_Alt_parse_json_table+0x328>
    c688:	b	def4 <MyGame_Example_Alt_parse_json_table+0x2ddc>
    c68c:	sub	r3, ip, #1
    c690:	cmp	r3, #7
    c694:	ldrls	pc, [pc, r3, lsl #2]
    c698:	b	b608 <MyGame_Example_Alt_parse_json_table+0x4f0>
    c69c:	.word	0x0000deec
    c6a0:	.word	0x0000dee4
    c6a4:	.word	0x0000dedc
    c6a8:	.word	0x0000ded4
    c6ac:	.word	0x0000decc
    c6b0:	.word	0x0000dec4
    c6b4:	.word	0x0000b4f0
    c6b8:	.word	0x0000b4f0
    c6bc:	mov	r3, #8
    c6c0:	mov	r2, r7
    c6c4:	mov	r1, r4
    c6c8:	mov	r0, r9
    c6cc:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    c6d0:	cmp	r4, r0
    c6d4:	mov	sl, r0
    c6d8:	beq	c254 <MyGame_Example_Alt_parse_json_table+0x113c>
    c6dc:	ldrd	r2, [sp, #168]	; 0xa8
    c6e0:	cmp	r7, r0
    c6e4:	str	r6, [sp, #688]	; 0x2b0
    c6e8:	str	r2, [sp, #676]	; 0x2a4
    c6ec:	str	r5, [sp, #692]	; 0x2b4
    c6f0:	str	r2, [sp, #680]	; 0x2a8
    c6f4:	beq	de78 <MyGame_Example_Alt_parse_json_table+0x2d60>
    c6f8:	add	r3, sp, #688	; 0x2b0
    c6fc:	str	r3, [sp]
    c700:	mov	r1, r0
    c704:	add	r3, sp, #680	; 0x2a8
    c708:	mov	r2, r7
    c70c:	mov	r0, r9
    c710:	bl	0 <flatcc_json_parser_integer>
    c714:	cmp	sl, r0
    c718:	mov	r4, r0
    c71c:	beq	de78 <MyGame_Example_Alt_parse_json_table+0x2d60>
    c720:	ldr	r3, [sp, #680]	; 0x2a8
    c724:	cmp	r3, #0
    c728:	bne	d390 <MyGame_Example_Alt_parse_json_table+0x2278>
    c72c:	add	r3, sp, #688	; 0x2b0
    c730:	mov	r1, #0
    c734:	ldrd	r2, [r3]
    c738:	mvn	r0, #0
    c73c:	cmp	r3, r1
    c740:	cmpeq	r2, r0
    c744:	strls	r2, [sp, #676]	; 0x2a4
    c748:	bhi	d48c <MyGame_Example_Alt_parse_json_table+0x2374>
    c74c:	cmp	r2, #0
    c750:	bne	c760 <MyGame_Example_Alt_parse_json_table+0x1648>
    c754:	ldr	r3, [r9, #8]
    c758:	tst	r3, #2
    c75c:	beq	c268 <MyGame_Example_Alt_parse_json_table+0x1150>
    c760:	mov	r3, #4
    c764:	mov	r2, r3
    c768:	mov	r1, #1
    c76c:	ldr	r0, [r9]
    c770:	bl	0 <flatcc_builder_table_add>
    c774:	cmp	r0, #0
    c778:	beq	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    c77c:	ldr	r3, [sp, #676]	; 0x2a4
    c780:	str	r3, [r0]
    c784:	b	c268 <MyGame_Example_Alt_parse_json_table+0x1150>
    c788:	add	r4, r6, #1
    c78c:	sub	r3, sl, r4
    c790:	cmp	r3, #1
    c794:	ble	c7a8 <MyGame_Example_Alt_parse_json_table+0x1690>
    c798:	ldrb	r3, [r6, #1]
    c79c:	cmp	r3, #32
    c7a0:	bhi	c7bc <MyGame_Example_Alt_parse_json_table+0x16a4>
    c7a4:	beq	df78 <MyGame_Example_Alt_parse_json_table+0x2e60>
    c7a8:	mov	r1, r4
    c7ac:	mov	r2, sl
    c7b0:	mov	r0, fp
    c7b4:	bl	0 <flatcc_json_parser_space_ext>
    c7b8:	mov	r4, r0
    c7bc:	cmp	sl, r4
    c7c0:	beq	e0b8 <MyGame_Example_Alt_parse_json_table+0x2fa0>
    c7c4:	ldrb	r3, [r4]
    c7c8:	cmp	r3, #125	; 0x7d
    c7cc:	beq	dfe8 <MyGame_Example_Alt_parse_json_table+0x2ed0>
    c7d0:	cmp	sl, r4
    c7d4:	mov	r3, #1
    c7d8:	str	r3, [sp, #656]	; 0x290
    c7dc:	ldreq	r5, [sp, #648]	; 0x288
    c7e0:	bne	b1b4 <MyGame_Example_Alt_parse_json_table+0x9c>
    c7e4:	mov	r6, #0
    c7e8:	mov	r7, #0
    c7ec:	b	b378 <MyGame_Example_Alt_parse_json_table+0x260>
    c7f0:	cmp	r2, #0
    c7f4:	sbcs	r1, r3, #0
    c7f8:	blt	e070 <MyGame_Example_Alt_parse_json_table+0x2f58>
    c7fc:	add	r1, sp, #680	; 0x2a8
    c800:	strd	r2, [r1]
    c804:	b	c58c <MyGame_Example_Alt_parse_json_table+0x1474>
    c808:	ldrb	r3, [r9, #2]
    c80c:	cmp	r3, #32
    c810:	bls	bdcc <MyGame_Example_Alt_parse_json_table+0xcb4>
    c814:	add	r6, r9, #2
    c818:	b	bc08 <MyGame_Example_Alt_parse_json_table+0xaf0>
    c81c:	ldrb	r3, [r4, #2]
    c820:	cmp	r3, #32
    c824:	bls	c450 <MyGame_Example_Alt_parse_json_table+0x1338>
    c828:	mov	fp, r9
    c82c:	mov	sl, r7
    c830:	add	r9, r4, #2
    c834:	b	c2ec <MyGame_Example_Alt_parse_json_table+0x11d4>
    c838:	mov	r1, r4
    c83c:	mov	r3, #5
    c840:	mov	r2, sl
    c844:	mov	r0, fp
    c848:	bl	0 <flatcc_json_parser_set_error>
    c84c:	mov	r4, r0
    c850:	sub	r5, sl, r0
    c854:	b	b1d4 <MyGame_Example_Alt_parse_json_table+0xbc>
    c858:	mov	r1, r4
    c85c:	mov	r3, #5
    c860:	mov	r2, sl
    c864:	mov	r0, fp
    c868:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    c86c:	cmp	r0, r4
    c870:	mov	r1, r0
    c874:	beq	b398 <MyGame_Example_Alt_parse_json_table+0x280>
    c878:	add	r3, sp, #660	; 0x294
    c87c:	mov	r2, sl
    c880:	mov	r0, fp
    c884:	bl	4d2c <Fantasy_Movie_parse_json_table>
    c888:	ldr	r3, [sp, #660]	; 0x294
    c88c:	cmp	r3, #0
    c890:	mov	r6, r0
    c894:	beq	c8ac <MyGame_Example_Alt_parse_json_table+0x1794>
    c898:	mov	r1, #1
    c89c:	ldr	r0, [fp]
    c8a0:	bl	0 <flatcc_builder_table_add_offset>
    c8a4:	cmp	r0, #0
    c8a8:	bne	bc80 <MyGame_Example_Alt_parse_json_table+0xb68>
    c8ac:	mov	r3, sl
    c8b0:	mov	r4, r6
    c8b4:	mov	sl, fp
    c8b8:	mov	fp, r3
    c8bc:	b	b440 <MyGame_Example_Alt_parse_json_table+0x328>
    c8c0:	mov	r1, r4
    c8c4:	mov	r3, #7
    c8c8:	mov	r2, sl
    c8cc:	mov	r0, fp
    c8d0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    c8d4:	cmp	r0, r4
    c8d8:	mov	r1, r0
    c8dc:	beq	b354 <MyGame_Example_Alt_parse_json_table+0x23c>
    c8e0:	ldr	lr, [pc, #-1128]	; c480 <MyGame_Example_Alt_parse_json_table+0x1368>
    c8e4:	ldr	ip, [sp, #664]	; 0x298
    c8e8:	mov	r2, #3
    c8ec:	mov	r3, r8
    c8f0:	stm	sp, {r2, ip, lr}
    c8f4:	mov	r0, fp
    c8f8:	mov	r2, sl
    c8fc:	bl	0 <flatcc_json_parser_union_vector>
    c900:	mov	r6, r0
    c904:	b	b3ac <MyGame_Example_Alt_parse_json_table+0x294>
    c908:	mov	r3, #6
    c90c:	mov	r2, sl
    c910:	mov	r1, r5
    c914:	mov	r0, fp
    c918:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    c91c:	cmp	r5, r0
    c920:	mov	r9, r0
    c924:	beq	bb78 <MyGame_Example_Alt_parse_json_table+0xa60>
    c928:	mov	r1, #2
    c92c:	ldr	r0, [fp]
    c930:	bl	0 <flatcc_builder_start_table>
    c934:	cmp	r0, #0
    c938:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    c93c:	mov	r1, r9
    c940:	add	r3, sp, #672	; 0x2a0
    c944:	mov	r2, sl
    c948:	mov	r0, fp
    c94c:	bl	2a3c <flatcc_json_parser_object_start>
    c950:	mov	r6, #0
    c954:	ldr	r8, [pc, #-1240]	; c484 <MyGame_Example_Alt_parse_json_table+0x136c>
    c958:	ldr	r3, [sp, #672]	; 0x2a0
    c95c:	mov	r5, r6
    c960:	mov	r9, fp
    c964:	mov	r7, sl
    c968:	cmp	r3, #0
    c96c:	beq	ccc4 <MyGame_Example_Alt_parse_json_table+0x1bac>
    c970:	mov	r1, r0
    c974:	cmp	r7, r1
    c978:	beq	cd08 <MyGame_Example_Alt_parse_json_table+0x1bf0>
    c97c:	ldrb	r3, [r1]
    c980:	cmp	r3, #34	; 0x22
    c984:	moveq	r3, #0
    c988:	addeq	r1, r1, #1
    c98c:	streq	r3, [r9, #12]
    c990:	beq	c9a4 <MyGame_Example_Alt_parse_json_table+0x188c>
    c994:	cmp	r3, #46	; 0x2e
    c998:	movne	r3, #1
    c99c:	strne	r3, [r9, #12]
    c9a0:	beq	d1c8 <MyGame_Example_Alt_parse_json_table+0x20b0>
    c9a4:	sub	r3, r7, r1
    c9a8:	cmp	r3, #8
    c9ac:	bls	cd1c <MyGame_Example_Alt_parse_json_table+0x1c04>
    c9b0:	ldrb	sl, [r1, #7]
    c9b4:	mov	fp, #0
    c9b8:	ldrb	r2, [r1, #6]
    c9bc:	lsr	r0, r2, #24
    c9c0:	lsl	r3, r2, #8
    c9c4:	str	r0, [sp, #220]	; 0xdc
    c9c8:	str	r3, [sp, #216]	; 0xd8
    c9cc:	ldrd	r2, [sp, #216]	; 0xd8
    c9d0:	orr	r2, r2, sl
    c9d4:	orr	r3, r3, fp
    c9d8:	ldrb	sl, [r1, #5]
    c9dc:	lsr	r0, sl, #16
    c9e0:	str	r0, [sp, #124]	; 0x7c
    c9e4:	lsl	r0, sl, #16
    c9e8:	str	r0, [sp, #120]	; 0x78
    c9ec:	ldrd	sl, [sp, #120]	; 0x78
    c9f0:	orr	sl, sl, r2
    c9f4:	orr	fp, fp, r3
    c9f8:	mov	r2, sl
    c9fc:	mov	r3, fp
    ca00:	ldrb	sl, [r1, #4]
    ca04:	lsr	r0, sl, #8
    ca08:	str	r0, [sp, #68]	; 0x44
    ca0c:	lsl	r0, sl, #24
    ca10:	str	r0, [sp, #64]	; 0x40
    ca14:	ldrd	sl, [sp, #64]	; 0x40
    ca18:	orr	sl, sl, r2
    ca1c:	orr	fp, fp, r3
    ca20:	mov	r2, sl
    ca24:	mov	r3, fp
    ca28:	ldrb	r0, [r1, #3]
    ca2c:	str	r0, [sp, #84]	; 0x54
    ca30:	mov	r0, #0
    ca34:	str	r0, [sp, #80]	; 0x50
    ca38:	ldrd	sl, [sp, #80]	; 0x50
    ca3c:	orr	sl, sl, r2
    ca40:	orr	fp, fp, r3
    ca44:	mov	r2, sl
    ca48:	mov	r3, fp
    ca4c:	ldrb	sl, [r1, #2]
    ca50:	lsl	r0, sl, #8
    ca54:	str	r0, [sp, #44]	; 0x2c
    ca58:	mov	r0, #0
    ca5c:	str	r0, [sp, #40]	; 0x28
    ca60:	ldrd	sl, [sp, #40]	; 0x28
    ca64:	orr	sl, sl, r2
    ca68:	orr	fp, fp, r3
    ca6c:	mov	r2, sl
    ca70:	mov	r3, fp
    ca74:	ldrb	sl, [r1, #1]
    ca78:	lsl	r0, sl, #16
    ca7c:	str	r0, [sp, #36]	; 0x24
    ca80:	mov	r0, #0
    ca84:	str	r0, [sp, #32]
    ca88:	ldrd	sl, [sp, #32]
    ca8c:	orr	sl, sl, r2
    ca90:	orr	fp, fp, r3
    ca94:	mov	r2, sl
    ca98:	mov	r3, fp
    ca9c:	ldrb	sl, [r1]
    caa0:	lsl	r0, sl, #24
    caa4:	str	r0, [sp, #28]
    caa8:	mov	r0, #0
    caac:	str	r0, [sp, #24]
    cab0:	ldrd	sl, [sp, #24]
    cab4:	orr	sl, sl, r2
    cab8:	orr	fp, fp, r3
    cabc:	mov	r2, sl
    cac0:	mov	r3, fp
    cac4:	add	fp, pc, #964	; 0x3c4
    cac8:	ldrd	sl, [fp]
    cacc:	cmp	r3, fp
    cad0:	cmpeq	r2, sl
    cad4:	bne	cd08 <MyGame_Example_Alt_parse_json_table+0x1bf0>
    cad8:	add	r4, r1, #8
    cadc:	sub	r0, r7, r4
    cae0:	cmp	r0, #8
    cae4:	bls	cda0 <MyGame_Example_Alt_parse_json_table+0x1c88>
    cae8:	ldrb	sl, [r1, #15]
    caec:	mov	fp, #0
    caf0:	ldrb	r2, [r1, #14]
    caf4:	lsl	r3, r2, #8
    caf8:	str	r3, [sp, #448]	; 0x1c0
    cafc:	add	r3, sp, #448	; 0x1c0
    cb00:	lsr	ip, r2, #24
    cb04:	str	ip, [sp, #452]	; 0x1c4
    cb08:	ldrd	r2, [r3]
    cb0c:	orr	r2, r2, sl
    cb10:	orr	r3, r3, fp
    cb14:	mov	sl, r2
    cb18:	mov	fp, r3
    cb1c:	ldrb	r2, [r1, #13]
    cb20:	lsl	r3, r2, #16
    cb24:	str	r3, [sp, #296]	; 0x128
    cb28:	add	r3, sp, #296	; 0x128
    cb2c:	lsr	ip, r2, #16
    cb30:	str	ip, [sp, #300]	; 0x12c
    cb34:	ldrd	r2, [r3]
    cb38:	orr	r2, r2, sl
    cb3c:	orr	r3, r3, fp
    cb40:	mov	sl, r2
    cb44:	mov	fp, r3
    cb48:	ldrb	r2, [r1, #12]
    cb4c:	lsr	ip, r2, #8
    cb50:	lsl	r3, r2, #24
    cb54:	str	ip, [sp, #228]	; 0xe4
    cb58:	str	r3, [sp, #224]	; 0xe0
    cb5c:	ldrd	r2, [sp, #224]	; 0xe0
    cb60:	orr	r2, r2, sl
    cb64:	orr	r3, r3, fp
    cb68:	mov	sl, r2
    cb6c:	mov	fp, r3
    cb70:	ldrb	r3, [r1, #11]
    cb74:	str	r3, [sp, #244]	; 0xf4
    cb78:	mov	r3, #0
    cb7c:	str	r3, [sp, #240]	; 0xf0
    cb80:	ldrd	r2, [sp, #240]	; 0xf0
    cb84:	orr	r2, r2, sl
    cb88:	orr	r3, r3, fp
    cb8c:	mov	sl, r2
    cb90:	mov	fp, r3
    cb94:	ldrb	r2, [r1, #10]
    cb98:	lsl	r3, r2, #8
    cb9c:	str	r3, [sp, #180]	; 0xb4
    cba0:	mov	r3, #0
    cba4:	str	r3, [sp, #176]	; 0xb0
    cba8:	ldrd	r2, [sp, #176]	; 0xb0
    cbac:	orr	r2, r2, sl
    cbb0:	orr	r3, r3, fp
    cbb4:	ldrb	sl, [r1, #9]
    cbb8:	lsl	ip, sl, #16
    cbbc:	str	ip, [sp, #164]	; 0xa4
    cbc0:	mov	ip, #0
    cbc4:	str	ip, [sp, #160]	; 0xa0
    cbc8:	ldrd	sl, [sp, #160]	; 0xa0
    cbcc:	orr	sl, sl, r2
    cbd0:	orr	fp, fp, r3
    cbd4:	mov	r2, sl
    cbd8:	mov	r3, fp
    cbdc:	ldrb	sl, [r1, #8]
    cbe0:	lsl	ip, sl, #24
    cbe4:	str	ip, [sp, #100]	; 0x64
    cbe8:	mov	ip, #0
    cbec:	str	ip, [sp, #96]	; 0x60
    cbf0:	ldrd	sl, [sp, #96]	; 0x60
    cbf4:	orr	sl, sl, r2
    cbf8:	orr	fp, fp, r3
    cbfc:	mov	r2, sl
    cc00:	mov	r3, fp
    cc04:	add	fp, pc, #652	; 0x28c
    cc08:	ldrd	sl, [fp]
    cc0c:	cmp	r3, fp
    cc10:	cmpeq	r2, sl
    cc14:	beq	cec0 <MyGame_Example_Alt_parse_json_table+0x1da8>
    cc18:	add	fp, pc, #640	; 0x280
    cc1c:	ldrd	sl, [fp]
    cc20:	bic	r2, r2, #255	; 0xff
    cc24:	cmp	r3, fp
    cc28:	cmpeq	r2, sl
    cc2c:	bne	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    cc30:	cmp	r0, #7
    cc34:	bgt	d1e0 <MyGame_Example_Alt_parse_json_table+0x20c8>
    cc38:	mov	r1, r4
    cc3c:	mov	r2, r7
    cc40:	mov	r0, r9
    cc44:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cc48:	mov	r4, r0
    cc4c:	sub	r3, r7, r4
    cc50:	cmp	r3, #1
    cc54:	ble	cc68 <MyGame_Example_Alt_parse_json_table+0x1b50>
    cc58:	ldrb	r3, [r4]
    cc5c:	cmp	r3, #32
    cc60:	bhi	cc7c <MyGame_Example_Alt_parse_json_table+0x1b64>
    cc64:	beq	ce5c <MyGame_Example_Alt_parse_json_table+0x1d44>
    cc68:	mov	r1, r4
    cc6c:	mov	r2, r7
    cc70:	mov	r0, r9
    cc74:	bl	0 <flatcc_json_parser_space_ext>
    cc78:	mov	r4, r0
    cc7c:	cmp	r7, r4
    cc80:	beq	ce74 <MyGame_Example_Alt_parse_json_table+0x1d5c>
    cc84:	ldrb	r3, [r4]
    cc88:	cmp	r3, #44	; 0x2c
    cc8c:	beq	d0f4 <MyGame_Example_Alt_parse_json_table+0x1fdc>
    cc90:	mov	r3, #0
    cc94:	str	r3, [sp, #672]	; 0x2a0
    cc98:	ldrb	r3, [r4]
    cc9c:	cmp	r3, #125	; 0x7d
    cca0:	beq	ce24 <MyGame_Example_Alt_parse_json_table+0x1d0c>
    cca4:	mov	r3, #10
    cca8:	mov	r1, r4
    ccac:	mov	r2, r7
    ccb0:	mov	r0, r9
    ccb4:	bl	0 <flatcc_json_parser_set_error>
    ccb8:	ldr	r3, [sp, #672]	; 0x2a0
    ccbc:	cmp	r3, #0
    ccc0:	bne	c970 <MyGame_Example_Alt_parse_json_table+0x1858>
    ccc4:	mov	fp, r9
    ccc8:	mov	sl, r7
    cccc:	mov	r9, r0
    ccd0:	ldr	r3, [fp, #24]
    ccd4:	cmp	r3, #0
    ccd8:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    ccdc:	ldr	r0, [fp]
    cce0:	bl	0 <flatcc_builder_end_table>
    cce4:	subs	r4, r0, #0
    cce8:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    ccec:	mov	r1, #2
    ccf0:	ldr	r0, [fp]
    ccf4:	bl	0 <flatcc_builder_table_add_offset>
    ccf8:	cmp	r0, #0
    ccfc:	beq	c4e4 <MyGame_Example_Alt_parse_json_table+0x13cc>
    cd00:	str	r4, [r0]
    cd04:	b	bb8c <MyGame_Example_Alt_parse_json_table+0xa74>
    cd08:	mov	r2, r7
    cd0c:	mov	r0, r9
    cd10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cd14:	mov	r4, r0
    cd18:	b	cc4c <MyGame_Example_Alt_parse_json_table+0x1b34>
    cd1c:	sub	r3, r3, #1
    cd20:	cmp	r3, #7
    cd24:	ldrls	pc, [pc, r3, lsl #2]
    cd28:	b	cd08 <MyGame_Example_Alt_parse_json_table+0x1bf0>
    cd2c:	.word	0x0000cd94
    cd30:	.word	0x0000cd88
    cd34:	.word	0x0000cd7c
    cd38:	.word	0x0000cd70
    cd3c:	.word	0x0000cd64
    cd40:	.word	0x0000cd58
    cd44:	.word	0x0000cd4c
    cd48:	.word	0x0000c9b0
    cd4c:	mov	sl, r6
    cd50:	mov	fp, r5
    cd54:	b	c9b8 <MyGame_Example_Alt_parse_json_table+0x18a0>
    cd58:	mov	r2, r6
    cd5c:	mov	r3, r5
    cd60:	b	c9d8 <MyGame_Example_Alt_parse_json_table+0x18c0>
    cd64:	mov	r2, r6
    cd68:	mov	r3, r5
    cd6c:	b	ca00 <MyGame_Example_Alt_parse_json_table+0x18e8>
    cd70:	mov	r2, r6
    cd74:	mov	r3, r5
    cd78:	b	ca28 <MyGame_Example_Alt_parse_json_table+0x1910>
    cd7c:	mov	r2, r6
    cd80:	mov	r3, r5
    cd84:	b	ca4c <MyGame_Example_Alt_parse_json_table+0x1934>
    cd88:	mov	r2, r6
    cd8c:	mov	r3, r5
    cd90:	b	ca74 <MyGame_Example_Alt_parse_json_table+0x195c>
    cd94:	mov	r2, r6
    cd98:	mov	r3, r5
    cd9c:	b	ca9c <MyGame_Example_Alt_parse_json_table+0x1984>
    cda0:	sub	r3, r0, #1
    cda4:	cmp	r3, #7
    cda8:	ldrls	pc, [pc, r3, lsl #2]
    cdac:	b	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    cdb0:	.word	0x0000ce18
    cdb4:	.word	0x0000ce0c
    cdb8:	.word	0x0000ce00
    cdbc:	.word	0x0000cdf4
    cdc0:	.word	0x0000cde8
    cdc4:	.word	0x0000cddc
    cdc8:	.word	0x0000cdd0
    cdcc:	.word	0x0000cae8
    cdd0:	mov	sl, r6
    cdd4:	mov	fp, r5
    cdd8:	b	caf0 <MyGame_Example_Alt_parse_json_table+0x19d8>
    cddc:	mov	sl, r6
    cde0:	mov	fp, r5
    cde4:	b	cb1c <MyGame_Example_Alt_parse_json_table+0x1a04>
    cde8:	mov	sl, r6
    cdec:	mov	fp, r5
    cdf0:	b	cb48 <MyGame_Example_Alt_parse_json_table+0x1a30>
    cdf4:	mov	sl, r6
    cdf8:	mov	fp, r5
    cdfc:	b	cb70 <MyGame_Example_Alt_parse_json_table+0x1a58>
    ce00:	mov	sl, r6
    ce04:	mov	fp, r5
    ce08:	b	cb94 <MyGame_Example_Alt_parse_json_table+0x1a7c>
    ce0c:	mov	r2, r6
    ce10:	mov	r3, r5
    ce14:	b	cbb4 <MyGame_Example_Alt_parse_json_table+0x1a9c>
    ce18:	mov	r2, r6
    ce1c:	mov	r3, r5
    ce20:	b	cbdc <MyGame_Example_Alt_parse_json_table+0x1ac4>
    ce24:	add	r0, r4, #1
    ce28:	sub	r3, r7, r0
    ce2c:	cmp	r3, #1
    ce30:	ble	ce44 <MyGame_Example_Alt_parse_json_table+0x1d2c>
    ce34:	ldrb	r3, [r4, #1]
    ce38:	cmp	r3, #32
    ce3c:	bhi	ccc4 <MyGame_Example_Alt_parse_json_table+0x1bac>
    ce40:	beq	d2d0 <MyGame_Example_Alt_parse_json_table+0x21b8>
    ce44:	mov	r1, r0
    ce48:	mov	r2, r7
    ce4c:	mov	r0, r9
    ce50:	bl	0 <flatcc_json_parser_space_ext>
    ce54:	ldr	r3, [sp, #672]	; 0x2a0
    ce58:	b	c968 <MyGame_Example_Alt_parse_json_table+0x1850>
    ce5c:	ldrb	r3, [r4, #1]
    ce60:	cmp	r3, #32
    ce64:	addhi	r4, r4, #1
    ce68:	bls	cc68 <MyGame_Example_Alt_parse_json_table+0x1b50>
    ce6c:	cmp	r7, r4
    ce70:	bne	cc84 <MyGame_Example_Alt_parse_json_table+0x1b6c>
    ce74:	mov	r3, #0
    ce78:	mov	fp, r9
    ce7c:	mov	sl, r7
    ce80:	str	r3, [sp, #672]	; 0x2a0
    ce84:	mov	r9, r7
    ce88:	b	ccd0 <MyGame_Example_Alt_parse_json_table+0x1bb8>
    ce8c:	nop			; (mov r0, r0)
    ce90:	.word	0x5f626262
    ce94:	.word	0x61616161
    ce98:	.word	0x6172745f
    ce9c:	.word	0x625f7374
    cea0:	.word	0x65707300
    cea4:	.word	0x625f7374
    cea8:	.word	0x73000000
    ceac:	.word	0x73746570
    ceb0:	.word	0x00000270
    ceb4:	.word	0x0000020c
	...
    cec0:	add	r4, r1, #16
    cec4:	sub	r0, r7, r4
    cec8:	cmp	r0, #8
    cecc:	bls	d144 <MyGame_Example_Alt_parse_json_table+0x202c>
    ced0:	ldrb	sl, [r1, #23]
    ced4:	mov	fp, #0
    ced8:	ldrb	r2, [r1, #22]
    cedc:	lsl	r3, r2, #8
    cee0:	str	r3, [sp, #624]	; 0x270
    cee4:	add	r3, sp, #624	; 0x270
    cee8:	lsr	ip, r2, #24
    ceec:	str	ip, [sp, #628]	; 0x274
    cef0:	ldrd	r2, [r3]
    cef4:	orr	r2, r2, sl
    cef8:	orr	r3, r3, fp
    cefc:	mov	sl, r2
    cf00:	mov	fp, r3
    cf04:	ldrb	r2, [r1, #21]
    cf08:	lsl	r3, r2, #16
    cf0c:	str	r3, [sp, #584]	; 0x248
    cf10:	add	r3, sp, #584	; 0x248
    cf14:	lsr	ip, r2, #16
    cf18:	str	ip, [sp, #588]	; 0x24c
    cf1c:	ldrd	r2, [r3]
    cf20:	orr	r2, r2, sl
    cf24:	orr	r3, r3, fp
    cf28:	mov	sl, r2
    cf2c:	mov	fp, r3
    cf30:	ldrb	r2, [r1, #20]
    cf34:	lsl	r3, r2, #24
    cf38:	str	r3, [sp, #552]	; 0x228
    cf3c:	add	r3, sp, #552	; 0x228
    cf40:	lsr	ip, r2, #8
    cf44:	str	ip, [sp, #556]	; 0x22c
    cf48:	ldrd	r2, [r3]
    cf4c:	orr	r2, r2, sl
    cf50:	orr	r3, r3, fp
    cf54:	mov	sl, r2
    cf58:	mov	fp, r3
    cf5c:	ldrb	r3, [r1, #19]
    cf60:	str	r3, [sp, #564]	; 0x234
    cf64:	mov	r3, #0
    cf68:	str	r3, [sp, #560]	; 0x230
    cf6c:	add	r3, sp, #560	; 0x230
    cf70:	ldrd	r2, [r3]
    cf74:	orr	r2, r2, sl
    cf78:	orr	r3, r3, fp
    cf7c:	mov	sl, r2
    cf80:	mov	fp, r3
    cf84:	ldrb	r2, [r1, #18]
    cf88:	lsl	r3, r2, #8
    cf8c:	str	r3, [sp, #532]	; 0x214
    cf90:	mov	r3, #0
    cf94:	str	r3, [sp, #528]	; 0x210
    cf98:	add	r3, sp, #528	; 0x210
    cf9c:	ldrd	r2, [r3]
    cfa0:	orr	r2, r2, sl
    cfa4:	orr	r3, r3, fp
    cfa8:	mov	sl, r2
    cfac:	mov	fp, r3
    cfb0:	ldrb	r2, [r1, #17]
    cfb4:	lsl	r3, r2, #16
    cfb8:	str	r3, [sp, #484]	; 0x1e4
    cfbc:	mov	r3, #0
    cfc0:	str	r3, [sp, #480]	; 0x1e0
    cfc4:	add	r3, sp, #480	; 0x1e0
    cfc8:	ldrd	r2, [r3]
    cfcc:	orr	r2, r2, sl
    cfd0:	orr	r3, r3, fp
    cfd4:	mov	sl, r2
    cfd8:	mov	fp, r3
    cfdc:	ldrb	r2, [r1, #16]
    cfe0:	lsl	r3, r2, #24
    cfe4:	str	r3, [sp, #444]	; 0x1bc
    cfe8:	mov	r3, #0
    cfec:	str	r3, [sp, #440]	; 0x1b8
    cff0:	add	r3, sp, #440	; 0x1b8
    cff4:	ldrd	r2, [r3]
    cff8:	orr	r2, r2, sl
    cffc:	orr	r3, r3, fp
    d000:	mov	fp, r3
    d004:	and	sl, r2, #-16777216	; 0xff000000
    d008:	sub	r3, pc, #360	; 0x168
    d00c:	ldrd	r2, [r3]
    d010:	cmp	fp, r3
    d014:	cmpeq	sl, r2
    d018:	bne	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    d01c:	cmp	r0, #5
    d020:	ble	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    d024:	mov	r3, #5
    d028:	mov	r2, r7
    d02c:	mov	r1, r4
    d030:	mov	r0, r9
    d034:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d038:	cmp	r4, r0
    d03c:	mov	sl, r0
    d040:	beq	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    d044:	add	r3, sp, #440	; 0x1b8
    d048:	cmp	r7, r0
    d04c:	ldrd	r2, [r3]
    d050:	str	r6, [sp, #688]	; 0x2b0
    d054:	str	r5, [sp, #692]	; 0x2b4
    d058:	str	r2, [sp, #676]	; 0x2a4
    d05c:	str	r2, [sp, #680]	; 0x2a8
    d060:	beq	dfa8 <MyGame_Example_Alt_parse_json_table+0x2e90>
    d064:	add	r3, sp, #688	; 0x2b0
    d068:	str	r3, [sp]
    d06c:	mov	r1, r0
    d070:	add	r3, sp, #680	; 0x2a8
    d074:	mov	r2, r7
    d078:	mov	r0, r9
    d07c:	bl	0 <flatcc_json_parser_integer>
    d080:	cmp	sl, r0
    d084:	mov	r4, r0
    d088:	beq	dfa8 <MyGame_Example_Alt_parse_json_table+0x2e90>
    d08c:	ldr	r3, [sp, #680]	; 0x2a8
    d090:	cmp	r3, #0
    d094:	bne	de24 <MyGame_Example_Alt_parse_json_table+0x2d0c>
    d098:	add	r3, sp, #688	; 0x2b0
    d09c:	mov	r1, #0
    d0a0:	ldrd	r2, [r3]
    d0a4:	mvn	r0, #0
    d0a8:	cmp	r3, r1
    d0ac:	cmpeq	r2, r0
    d0b0:	strls	r2, [sp, #676]	; 0x2a4
    d0b4:	bhi	dea8 <MyGame_Example_Alt_parse_json_table+0x2d90>
    d0b8:	cmp	r2, #0
    d0bc:	bne	d0cc <MyGame_Example_Alt_parse_json_table+0x1fb4>
    d0c0:	ldr	r3, [r9, #8]
    d0c4:	tst	r3, #2
    d0c8:	beq	cc4c <MyGame_Example_Alt_parse_json_table+0x1b34>
    d0cc:	mov	r3, #4
    d0d0:	mov	r2, r3
    d0d4:	mov	r1, #1
    d0d8:	ldr	r0, [r9]
    d0dc:	bl	0 <flatcc_builder_table_add>
    d0e0:	cmp	r0, #0
    d0e4:	beq	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    d0e8:	ldr	r3, [sp, #676]	; 0x2a4
    d0ec:	str	r3, [r0]
    d0f0:	b	cc4c <MyGame_Example_Alt_parse_json_table+0x1b34>
    d0f4:	add	r1, r4, #1
    d0f8:	sub	r3, r7, r1
    d0fc:	cmp	r3, #1
    d100:	ble	d114 <MyGame_Example_Alt_parse_json_table+0x1ffc>
    d104:	ldrb	r3, [r4, #1]
    d108:	cmp	r3, #32
    d10c:	bhi	d124 <MyGame_Example_Alt_parse_json_table+0x200c>
    d110:	beq	d2ec <MyGame_Example_Alt_parse_json_table+0x21d4>
    d114:	mov	r2, r7
    d118:	mov	r0, r9
    d11c:	bl	0 <flatcc_json_parser_space_ext>
    d120:	mov	r1, r0
    d124:	cmp	r7, r1
    d128:	beq	d304 <MyGame_Example_Alt_parse_json_table+0x21ec>
    d12c:	ldrb	r3, [r1]
    d130:	cmp	r3, #125	; 0x7d
    d134:	beq	d44c <MyGame_Example_Alt_parse_json_table+0x2334>
    d138:	mov	r3, #1
    d13c:	str	r3, [sp, #672]	; 0x2a0
    d140:	b	c974 <MyGame_Example_Alt_parse_json_table+0x185c>
    d144:	sub	r3, r0, #1
    d148:	cmp	r3, #7
    d14c:	ldrls	pc, [pc, r3, lsl #2]
    d150:	b	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    d154:	.word	0x0000d1bc
    d158:	.word	0x0000d1b0
    d15c:	.word	0x0000d1a4
    d160:	.word	0x0000d198
    d164:	.word	0x0000d18c
    d168:	.word	0x0000d180
    d16c:	.word	0x0000d174
    d170:	.word	0x0000ced0
    d174:	mov	sl, r6
    d178:	mov	fp, r5
    d17c:	b	ced8 <MyGame_Example_Alt_parse_json_table+0x1dc0>
    d180:	mov	sl, r6
    d184:	mov	fp, r5
    d188:	b	cf04 <MyGame_Example_Alt_parse_json_table+0x1dec>
    d18c:	mov	sl, r6
    d190:	mov	fp, r5
    d194:	b	cf30 <MyGame_Example_Alt_parse_json_table+0x1e18>
    d198:	mov	sl, r6
    d19c:	mov	fp, r5
    d1a0:	b	cf5c <MyGame_Example_Alt_parse_json_table+0x1e44>
    d1a4:	mov	sl, r6
    d1a8:	mov	fp, r5
    d1ac:	b	cf84 <MyGame_Example_Alt_parse_json_table+0x1e6c>
    d1b0:	mov	sl, r6
    d1b4:	mov	fp, r5
    d1b8:	b	cfb0 <MyGame_Example_Alt_parse_json_table+0x1e98>
    d1bc:	mov	sl, r6
    d1c0:	mov	fp, r5
    d1c4:	b	cfdc <MyGame_Example_Alt_parse_json_table+0x1ec4>
    d1c8:	mov	r3, #5
    d1cc:	mov	r2, r7
    d1d0:	mov	r0, r9
    d1d4:	bl	0 <flatcc_json_parser_set_error>
    d1d8:	mov	r1, r0
    d1dc:	b	c9a4 <MyGame_Example_Alt_parse_json_table+0x188c>
    d1e0:	mov	r3, #7
    d1e4:	mov	r2, r7
    d1e8:	mov	r1, r4
    d1ec:	mov	r0, r9
    d1f0:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d1f4:	cmp	r4, r0
    d1f8:	mov	sl, r0
    d1fc:	beq	cc38 <MyGame_Example_Alt_parse_json_table+0x1b20>
    d200:	ldr	r3, [sp, #96]	; 0x60
    d204:	cmp	r7, r0
    d208:	str	r6, [sp, #680]	; 0x2a8
    d20c:	str	r5, [sp, #684]	; 0x2ac
    d210:	str	r6, [sp, #688]	; 0x2b0
    d214:	str	r5, [sp, #692]	; 0x2b4
    d218:	str	r3, [sp, #676]	; 0x2a4
    d21c:	beq	dd94 <MyGame_Example_Alt_parse_json_table+0x2c7c>
    d220:	add	r3, sp, #688	; 0x2b0
    d224:	str	r3, [sp]
    d228:	mov	r1, r0
    d22c:	add	r3, sp, #676	; 0x2a4
    d230:	mov	r2, r7
    d234:	mov	r0, r9
    d238:	bl	0 <flatcc_json_parser_integer>
    d23c:	cmp	sl, r0
    d240:	mov	r4, r0
    d244:	beq	dd94 <MyGame_Example_Alt_parse_json_table+0x2c7c>
    d248:	ldr	r1, [sp, #676]	; 0x2a4
    d24c:	add	r3, sp, #688	; 0x2b0
    d250:	cmp	r1, #0
    d254:	ldrd	r2, [r3]
    d258:	beq	d2b8 <MyGame_Example_Alt_parse_json_table+0x21a0>
    d25c:	cmp	r3, #-2147483648	; 0x80000000
    d260:	cmpeq	r2, #0
    d264:	bhi	d364 <MyGame_Example_Alt_parse_json_table+0x224c>
    d268:	rsbs	r2, r2, #0
    d26c:	rsc	r3, r3, #0
    d270:	add	r1, sp, #680	; 0x2a8
    d274:	strd	r2, [r1]
    d278:	orrs	r3, r2, r3
    d27c:	bne	d28c <MyGame_Example_Alt_parse_json_table+0x2174>
    d280:	ldr	r3, [r9, #8]
    d284:	tst	r3, #2
    d288:	beq	cc4c <MyGame_Example_Alt_parse_json_table+0x1b34>
    d28c:	mov	r3, #8
    d290:	mov	r2, r3
    d294:	mov	r1, #0
    d298:	ldr	r0, [r9]
    d29c:	bl	0 <flatcc_builder_table_add>
    d2a0:	cmp	r0, #0
    d2a4:	beq	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    d2a8:	add	r3, sp, #680	; 0x2a8
    d2ac:	ldrd	r2, [r3]
    d2b0:	strd	r2, [r0]
    d2b4:	b	cc4c <MyGame_Example_Alt_parse_json_table+0x1b34>
    d2b8:	cmp	r2, #0
    d2bc:	sbcs	r1, r3, #0
    d2c0:	blt	df8c <MyGame_Example_Alt_parse_json_table+0x2e74>
    d2c4:	add	r1, sp, #680	; 0x2a8
    d2c8:	strd	r2, [r1]
    d2cc:	b	d278 <MyGame_Example_Alt_parse_json_table+0x2160>
    d2d0:	ldrb	r3, [r4, #2]
    d2d4:	cmp	r3, #32
    d2d8:	bls	ce44 <MyGame_Example_Alt_parse_json_table+0x1d2c>
    d2dc:	mov	fp, r9
    d2e0:	mov	sl, r7
    d2e4:	add	r9, r4, #2
    d2e8:	b	ccd0 <MyGame_Example_Alt_parse_json_table+0x1bb8>
    d2ec:	ldrb	r3, [r4, #2]
    d2f0:	cmp	r3, #32
    d2f4:	addhi	r1, r4, #2
    d2f8:	bls	d114 <MyGame_Example_Alt_parse_json_table+0x1ffc>
    d2fc:	cmp	r7, r1
    d300:	bne	d12c <MyGame_Example_Alt_parse_json_table+0x2014>
    d304:	mov	ip, #0
    d308:	mov	r3, #10
    d30c:	mov	r2, r7
    d310:	mov	r1, r7
    d314:	mov	r0, r9
    d318:	str	ip, [sp, #672]	; 0x2a0
    d31c:	bl	0 <flatcc_json_parser_set_error>
    d320:	ldr	r3, [sp, #672]	; 0x2a0
    d324:	b	c968 <MyGame_Example_Alt_parse_json_table+0x1850>
    d328:	ldrb	r3, [r9, #2]
    d32c:	cmp	r3, #32
    d330:	addhi	r0, r9, #2
    d334:	bls	be4c <MyGame_Example_Alt_parse_json_table+0xd34>
    d338:	cmp	sl, r0
    d33c:	bne	be64 <MyGame_Example_Alt_parse_json_table+0xd4c>
    d340:	mov	ip, #0
    d344:	mov	r3, #10
    d348:	mov	r2, sl
    d34c:	mov	r1, sl
    d350:	mov	r0, fp
    d354:	str	ip, [sp, #668]	; 0x29c
    d358:	bl	0 <flatcc_json_parser_set_error>
    d35c:	ldr	r3, [sp, #668]	; 0x29c
    d360:	b	b6f8 <MyGame_Example_Alt_parse_json_table+0x5e0>
    d364:	mov	r1, r0
    d368:	mov	r3, #8
    d36c:	mov	r2, r7
    d370:	mov	r0, r9
    d374:	bl	0 <flatcc_json_parser_set_error>
    d378:	mov	r4, r0
    d37c:	cmp	sl, r4
    d380:	beq	dd94 <MyGame_Example_Alt_parse_json_table+0x2c7c>
    d384:	add	r3, sp, #680	; 0x2a8
    d388:	ldrd	r2, [r3]
    d38c:	b	d278 <MyGame_Example_Alt_parse_json_table+0x2160>
    d390:	mov	r1, r0
    d394:	mov	r3, #8
    d398:	mov	r2, r7
    d39c:	mov	r0, r9
    d3a0:	bl	0 <flatcc_json_parser_set_error>
    d3a4:	mov	r4, r0
    d3a8:	cmp	sl, r4
    d3ac:	beq	de78 <MyGame_Example_Alt_parse_json_table+0x2d60>
    d3b0:	ldr	r2, [sp, #676]	; 0x2a4
    d3b4:	b	c74c <MyGame_Example_Alt_parse_json_table+0x1634>
    d3b8:	ldrb	r3, [r4, #2]
    d3bc:	cmp	r3, #32
    d3c0:	addhi	r1, r4, #2
    d3c4:	bls	c5ec <MyGame_Example_Alt_parse_json_table+0x14d4>
    d3c8:	cmp	r7, r1
    d3cc:	bne	c604 <MyGame_Example_Alt_parse_json_table+0x14ec>
    d3d0:	mov	ip, #0
    d3d4:	mov	r3, #10
    d3d8:	mov	r2, r7
    d3dc:	mov	r1, r7
    d3e0:	mov	r0, r9
    d3e4:	str	ip, [sp, #672]	; 0x2a0
    d3e8:	bl	0 <flatcc_json_parser_set_error>
    d3ec:	ldr	r3, [sp, #672]	; 0x2a0
    d3f0:	b	bf68 <MyGame_Example_Alt_parse_json_table+0xe50>
    d3f4:	mov	r1, r5
    d3f8:	mov	r3, #4
    d3fc:	mov	r2, sl
    d400:	mov	r0, fp
    d404:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d408:	cmp	r5, r0
    d40c:	mov	r1, r0
    d410:	beq	b608 <MyGame_Example_Alt_parse_json_table+0x4f0>
    d414:	ldr	r2, [sp, #664]	; 0x298
    d418:	ldr	r3, [pc, #-1380]	; cebc <MyGame_Example_Alt_parse_json_table+0x1da4>
    d41c:	ldr	lr, [pc, #-1388]	; ceb8 <MyGame_Example_Alt_parse_json_table+0x1da0>
    d420:	ldr	ip, [pc, #-1396]	; ceb4 <MyGame_Example_Alt_parse_json_table+0x1d9c>
    d424:	str	r3, [sp, #16]
    d428:	mov	r3, #3
    d42c:	stmib	sp, {r2, ip, lr}
    d430:	mov	r0, fp
    d434:	str	r3, [sp]
    d438:	mov	r2, sl
    d43c:	ldr	r3, [sp, #536]	; 0x218
    d440:	bl	0 <flatcc_json_parser_union_type_vector>
    d444:	mov	r6, r0
    d448:	b	b3ac <MyGame_Example_Alt_parse_json_table+0x294>
    d44c:	mov	r0, r1
    d450:	add	r1, r1, #1
    d454:	sub	r3, r7, r1
    d458:	cmp	r3, #1
    d45c:	mov	r3, #0
    d460:	str	r3, [sp, #672]	; 0x2a0
    d464:	ble	d478 <MyGame_Example_Alt_parse_json_table+0x2360>
    d468:	ldrb	r3, [r0, #1]
    d46c:	cmp	r3, #32
    d470:	bhi	dfd8 <MyGame_Example_Alt_parse_json_table+0x2ec0>
    d474:	beq	df2c <MyGame_Example_Alt_parse_json_table+0x2e14>
    d478:	mov	r2, r7
    d47c:	mov	r0, r9
    d480:	bl	0 <flatcc_json_parser_space_ext>
    d484:	ldr	r3, [sp, #672]	; 0x2a0
    d488:	b	c968 <MyGame_Example_Alt_parse_json_table+0x1850>
    d48c:	mov	r1, r4
    d490:	mov	r3, #7
    d494:	mov	r2, r7
    d498:	mov	r0, r9
    d49c:	bl	0 <flatcc_json_parser_set_error>
    d4a0:	mov	r4, r0
    d4a4:	b	d3a8 <MyGame_Example_Alt_parse_json_table+0x2290>
    d4a8:	mov	r3, #5
    d4ac:	mov	r2, sl
    d4b0:	mov	r1, r5
    d4b4:	mov	r0, fp
    d4b8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d4bc:	cmp	r5, r0
    d4c0:	mov	r9, r0
    d4c4:	beq	bb5c <MyGame_Example_Alt_parse_json_table+0xa44>
    d4c8:	mov	r1, #9
    d4cc:	ldr	r0, [fp]
    d4d0:	bl	0 <flatcc_builder_start_table>
    d4d4:	cmp	r0, #0
    d4d8:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d4dc:	mov	r1, r9
    d4e0:	add	r3, sp, #676	; 0x2a4
    d4e4:	mov	r2, sl
    d4e8:	mov	r0, fp
    d4ec:	bl	2a3c <flatcc_json_parser_object_start>
    d4f0:	ldr	r3, [sp, #676]	; 0x2a4
    d4f4:	cmp	r3, #0
    d4f8:	mov	r9, r0
    d4fc:	beq	d7c8 <MyGame_Example_Alt_parse_json_table+0x26b0>
    d500:	ldr	r8, [pc, #-1624]	; ceb0 <MyGame_Example_Alt_parse_json_table+0x1d98>
    d504:	add	r7, pc, #972	; 0x3cc
    d508:	ldrd	r6, [r7]
    d50c:	cmp	sl, r9
    d510:	beq	d78c <MyGame_Example_Alt_parse_json_table+0x2674>
    d514:	ldrb	r3, [r9]
    d518:	cmp	r3, #34	; 0x22
    d51c:	moveq	r3, #0
    d520:	addeq	r9, r9, #1
    d524:	streq	r3, [fp, #12]
    d528:	beq	d53c <MyGame_Example_Alt_parse_json_table+0x2424>
    d52c:	cmp	r3, #46	; 0x2e
    d530:	movne	r3, #1
    d534:	strne	r3, [fp, #12]
    d538:	beq	dc60 <MyGame_Example_Alt_parse_json_table+0x2b48>
    d53c:	sub	ip, sl, r9
    d540:	cmp	ip, #8
    d544:	bls	d8a4 <MyGame_Example_Alt_parse_json_table+0x278c>
    d548:	ldrb	r2, [r9, #7]
    d54c:	mov	r3, #0
    d550:	ldrb	r0, [r9, #6]
    d554:	lsl	r1, r0, #8
    d558:	str	r1, [sp, #496]	; 0x1f0
    d55c:	add	r1, sp, #496	; 0x1f0
    d560:	lsr	lr, r0, #24
    d564:	str	lr, [sp, #500]	; 0x1f4
    d568:	ldrd	r0, [r1]
    d56c:	orr	r0, r0, r2
    d570:	orr	r1, r1, r3
    d574:	mov	r2, r0
    d578:	mov	r3, r1
    d57c:	ldrb	r0, [r9, #5]
    d580:	lsl	r1, r0, #16
    d584:	str	r1, [sp, #424]	; 0x1a8
    d588:	add	r1, sp, #424	; 0x1a8
    d58c:	lsr	lr, r0, #16
    d590:	str	lr, [sp, #428]	; 0x1ac
    d594:	ldrd	r0, [r1]
    d598:	orr	r0, r0, r2
    d59c:	orr	r1, r1, r3
    d5a0:	mov	r2, r0
    d5a4:	mov	r3, r1
    d5a8:	ldrb	r0, [r9, #4]
    d5ac:	lsl	r1, r0, #24
    d5b0:	str	r1, [sp, #328]	; 0x148
    d5b4:	add	r1, sp, #328	; 0x148
    d5b8:	lsr	lr, r0, #8
    d5bc:	str	lr, [sp, #332]	; 0x14c
    d5c0:	ldrd	r0, [r1]
    d5c4:	orr	r0, r0, r2
    d5c8:	orr	r1, r1, r3
    d5cc:	mov	r2, r0
    d5d0:	mov	r3, r1
    d5d4:	ldrb	r1, [r9, #3]
    d5d8:	str	r1, [sp, #364]	; 0x16c
    d5dc:	mov	r1, #0
    d5e0:	str	r1, [sp, #360]	; 0x168
    d5e4:	add	r1, sp, #360	; 0x168
    d5e8:	ldrd	r0, [r1]
    d5ec:	orr	r0, r0, r2
    d5f0:	orr	r1, r1, r3
    d5f4:	mov	r2, r0
    d5f8:	mov	r3, r1
    d5fc:	ldrb	r0, [r9, #2]
    d600:	lsl	r1, r0, #8
    d604:	str	r1, [sp, #284]	; 0x11c
    d608:	mov	r1, #0
    d60c:	str	r1, [sp, #280]	; 0x118
    d610:	add	r1, sp, #280	; 0x118
    d614:	ldrd	r0, [r1]
    d618:	orr	r0, r0, r2
    d61c:	orr	r1, r1, r3
    d620:	mov	r2, r0
    d624:	mov	r3, r1
    d628:	ldrb	r0, [r9, #1]
    d62c:	lsl	r1, r0, #16
    d630:	str	r1, [sp, #252]	; 0xfc
    d634:	mov	r1, #0
    d638:	str	r1, [sp, #248]	; 0xf8
    d63c:	ldrd	r0, [sp, #248]	; 0xf8
    d640:	orr	r0, r0, r2
    d644:	orr	r1, r1, r3
    d648:	mov	r2, r0
    d64c:	mov	r3, r1
    d650:	ldrb	r4, [r9]
    d654:	add	r1, pc, #644	; 0x284
    d658:	ldrd	r0, [r1]
    d65c:	lsl	lr, r4, #24
    d660:	str	lr, [sp, #188]	; 0xbc
    d664:	mov	lr, #0
    d668:	str	lr, [sp, #184]	; 0xb8
    d66c:	ldrd	r4, [sp, #184]	; 0xb8
    d670:	orr	r5, r5, r3
    d674:	orr	r4, r4, r2
    d678:	cmp	r5, r1
    d67c:	cmpeq	r4, r0
    d680:	mov	r2, r4
    d684:	bls	d7f0 <MyGame_Example_Alt_parse_json_table+0x26d8>
    d688:	add	r1, pc, #600	; 0x258
    d68c:	ldrd	r0, [r1]
    d690:	cmp	r5, r1
    d694:	cmpeq	r4, r0
    d698:	beq	da44 <MyGame_Example_Alt_parse_json_table+0x292c>
    d69c:	add	r1, pc, #588	; 0x24c
    d6a0:	ldrd	r0, [r1]
    d6a4:	mov	r4, #0
    d6a8:	cmp	r5, r1
    d6ac:	cmpeq	r4, r0
    d6b0:	beq	db60 <MyGame_Example_Alt_parse_json_table+0x2a48>
    d6b4:	add	r1, pc, #572	; 0x23c
    d6b8:	ldrd	r0, [r1]
    d6bc:	cmp	r5, r1
    d6c0:	cmpeq	r2, r0
    d6c4:	bne	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d6c8:	cmp	ip, #8
    d6cc:	bgt	dc7c <MyGame_Example_Alt_parse_json_table+0x2b64>
    d6d0:	add	r9, r9, #8
    d6d4:	mov	r0, r9
    d6d8:	mov	r1, sl
    d6dc:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d6e0:	mov	r0, #0
    d6e4:	and	r1, r1, #-16777216	; 0xff000000
    d6e8:	cmp	r1, #889192448	; 0x35000000
    d6ec:	cmpeq	r0, #0
    d6f0:	bne	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d6f4:	sub	r3, sl, r9
    d6f8:	cmp	r3, #1
    d6fc:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d700:	mov	r3, #1
    d704:	mov	r2, sl
    d708:	mov	r1, r9
    d70c:	mov	r0, fp
    d710:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d714:	cmp	r9, r0
    d718:	mov	r5, r0
    d71c:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d720:	add	r4, sp, #696	; 0x2b8
    d724:	mov	r3, #0
    d728:	str	r3, [r4, #-8]!
    d72c:	mov	r1, r0
    d730:	mov	r2, sl
    d734:	mov	r3, r4
    d738:	mov	r0, fp
    d73c:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    d740:	cmp	r5, r0
    d744:	mov	r9, r0
    d748:	beq	e118 <MyGame_Example_Alt_parse_json_table+0x3000>
    d74c:	ldr	r3, [sp, #688]	; 0x2b0
    d750:	cmp	r3, #0
    d754:	bne	d764 <MyGame_Example_Alt_parse_json_table+0x264c>
    d758:	ldr	r3, [fp, #8]
    d75c:	tst	r3, #2
    d760:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    d764:	mov	r3, #4
    d768:	mov	r2, r3
    d76c:	mov	r1, #8
    d770:	ldr	r0, [fp]
    d774:	bl	0 <flatcc_builder_table_add>
    d778:	cmp	r0, #0
    d77c:	bne	da38 <MyGame_Example_Alt_parse_json_table+0x2920>
    d780:	mov	r0, r9
    d784:	mov	r9, r0
    d788:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d78c:	mov	r9, sl
    d790:	mov	r1, r9
    d794:	mov	r2, sl
    d798:	mov	r0, fp
    d79c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d7a0:	mov	r9, r0
    d7a4:	mov	r1, r9
    d7a8:	add	r3, sp, #676	; 0x2a4
    d7ac:	mov	r2, sl
    d7b0:	mov	r0, fp
    d7b4:	bl	4ba8 <flatcc_json_parser_object_end>
    d7b8:	ldr	r3, [sp, #676]	; 0x2a4
    d7bc:	cmp	r3, #0
    d7c0:	mov	r9, r0
    d7c4:	bne	d50c <MyGame_Example_Alt_parse_json_table+0x23f4>
    d7c8:	ldr	r1, [fp, #24]
    d7cc:	cmp	r1, #0
    d7d0:	bne	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d7d4:	ldr	r0, [fp]
    d7d8:	str	r1, [sp, #384]	; 0x180
    d7dc:	bl	0 <flatcc_builder_end_table>
    d7e0:	ldr	r1, [sp, #384]	; 0x180
    d7e4:	subs	r4, r0, #0
    d7e8:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d7ec:	b	ccf0 <MyGame_Example_Alt_parse_json_table+0x1bd8>
    d7f0:	cmp	r5, r7
    d7f4:	cmpeq	r4, r6
    d7f8:	beq	d988 <MyGame_Example_Alt_parse_json_table+0x2870>
    d7fc:	add	r1, pc, #252	; 0xfc
    d800:	ldrd	r0, [r1]
    d804:	mov	r4, #0
    d808:	cmp	r5, r1
    d80c:	cmpeq	r4, r0
    d810:	beq	db00 <MyGame_Example_Alt_parse_json_table+0x29e8>
    d814:	add	r1, pc, #236	; 0xec
    d818:	ldrd	r0, [r1]
    d81c:	cmp	r5, r1
    d820:	cmpeq	r2, r0
    d824:	beq	dbc0 <MyGame_Example_Alt_parse_json_table+0x2aa8>
    d828:	add	r3, pc, #224	; 0xe0
    d82c:	ldrd	r2, [r3]
    d830:	cmp	r5, r3
    d834:	cmpeq	r4, r2
    d838:	bne	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d83c:	cmp	ip, #4
    d840:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d844:	mov	r1, r9
    d848:	mov	r3, #4
    d84c:	mov	r2, sl
    d850:	mov	r0, fp
    d854:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d858:	cmp	r0, r9
    d85c:	mov	r1, r0
    d860:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d864:	add	r3, sp, #680	; 0x2a8
    d868:	mov	r2, sl
    d86c:	mov	r0, fp
    d870:	bl	0 <flatcc_json_parser_build_string>
    d874:	ldr	r3, [sp, #680]	; 0x2a8
    d878:	cmp	r3, #0
    d87c:	mov	r9, r0
    d880:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d884:	mov	r1, #2
    d888:	ldr	r0, [fp]
    d88c:	bl	0 <flatcc_builder_table_add_offset>
    d890:	cmp	r0, #0
    d894:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    d898:	ldr	r3, [sp, #680]	; 0x2a8
    d89c:	str	r3, [r0]
    d8a0:	b	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    d8a4:	sub	r3, ip, #1
    d8a8:	cmp	r3, #7
    d8ac:	ldrls	pc, [pc, r3, lsl #2]
    d8b0:	b	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d8b4:	.word	0x0000d97c
    d8b8:	.word	0x0000d970
    d8bc:	.word	0x0000d964
    d8c0:	.word	0x0000d958
    d8c4:	.word	0x0000d94c
    d8c8:	.word	0x0000d940
    d8cc:	.word	0x0000d934
    d8d0:	.word	0x0000d548
    d8d4:	nop			; (mov r0, r0)
    d8d8:	.word	0x31323334
    d8dc:	.word	0x61616161
    d8e0:	.word	0xffffffff
    d8e4:	.word	0x63636362
    d8e8:	.word	0x31323334
    d8ec:	.word	0x63636363
    d8f0:	.word	0x00000000
    d8f4:	.word	0x63636363
    d8f8:	.word	0x31323334
    d8fc:	.word	0x64646464
    d900:	.word	0x00000000
    d904:	.word	0x61616161
    d908:	.word	0x31323334
    d90c:	.word	0x62626262
    d910:	.word	0x00000000
    d914:	.word	0x62626262
    d918:	.word	0x0000021c
    d91c:	.word	0x0000027c
    d920:	.word	0x00000264
    d924:	.word	0x0000024c
    d928:	.word	0x00000240
    d92c:	.word	0x00000234
    d930:	.word	0x00000258
    d934:	mov	r2, #0
    d938:	mov	r3, #0
    d93c:	b	d550 <MyGame_Example_Alt_parse_json_table+0x2438>
    d940:	mov	r2, #0
    d944:	mov	r3, #0
    d948:	b	d57c <MyGame_Example_Alt_parse_json_table+0x2464>
    d94c:	mov	r2, #0
    d950:	mov	r3, #0
    d954:	b	d5a8 <MyGame_Example_Alt_parse_json_table+0x2490>
    d958:	mov	r2, #0
    d95c:	mov	r3, #0
    d960:	b	d5d4 <MyGame_Example_Alt_parse_json_table+0x24bc>
    d964:	mov	r2, #0
    d968:	mov	r3, #0
    d96c:	b	d5fc <MyGame_Example_Alt_parse_json_table+0x24e4>
    d970:	mov	r2, #0
    d974:	mov	r3, #0
    d978:	b	d628 <MyGame_Example_Alt_parse_json_table+0x2510>
    d97c:	mov	r2, #0
    d980:	mov	r3, #0
    d984:	b	d650 <MyGame_Example_Alt_parse_json_table+0x2538>
    d988:	add	r9, r9, #8
    d98c:	mov	r0, r9
    d990:	mov	r1, sl
    d994:	bl	0 <flatcc_json_parser_symbol_part_ext>
    d998:	mov	r0, #0
    d99c:	and	r1, r1, #-16777216	; 0xff000000
    d9a0:	cmp	r1, #889192448	; 0x35000000
    d9a4:	cmpeq	r0, #0
    d9a8:	bne	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d9ac:	sub	r3, sl, r9
    d9b0:	cmp	r3, #1
    d9b4:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d9b8:	mov	r3, #1
    d9bc:	mov	r2, sl
    d9c0:	mov	r1, r9
    d9c4:	mov	r0, fp
    d9c8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    d9cc:	cmp	r9, r0
    d9d0:	mov	r5, r0
    d9d4:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    d9d8:	ldr	r3, [sp, #184]	; 0xb8
    d9dc:	add	r4, sp, #696	; 0x2b8
    d9e0:	mov	r1, r0
    d9e4:	str	r3, [r4, #-8]!
    d9e8:	mov	r2, sl
    d9ec:	mov	r3, r4
    d9f0:	mov	r0, fp
    d9f4:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    d9f8:	cmp	r5, r0
    d9fc:	mov	r9, r0
    da00:	beq	e0ec <MyGame_Example_Alt_parse_json_table+0x2fd4>
    da04:	ldr	r3, [sp, #688]	; 0x2b0
    da08:	cmp	r3, #0
    da0c:	bne	da1c <MyGame_Example_Alt_parse_json_table+0x2904>
    da10:	ldr	r3, [fp, #8]
    da14:	tst	r3, #2
    da18:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    da1c:	mov	r3, #4
    da20:	mov	r2, r3
    da24:	mov	r1, #1
    da28:	ldr	r0, [fp]
    da2c:	bl	0 <flatcc_builder_table_add>
    da30:	cmp	r0, #0
    da34:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    da38:	ldr	r3, [sp, #688]	; 0x2b0
    da3c:	str	r3, [r0]
    da40:	b	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    da44:	cmp	ip, #8
    da48:	bgt	dd08 <MyGame_Example_Alt_parse_json_table+0x2bf0>
    da4c:	add	r9, r9, #8
    da50:	mov	r0, r9
    da54:	mov	r1, sl
    da58:	bl	0 <flatcc_json_parser_symbol_part_ext>
    da5c:	mov	r0, #0
    da60:	and	r1, r1, #-16777216	; 0xff000000
    da64:	cmp	r1, #889192448	; 0x35000000
    da68:	cmpeq	r0, #0
    da6c:	bne	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    da70:	sub	r3, sl, r9
    da74:	cmp	r3, #1
    da78:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    da7c:	mov	r3, #1
    da80:	mov	r2, sl
    da84:	mov	r1, r9
    da88:	mov	r0, fp
    da8c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    da90:	cmp	r9, r0
    da94:	mov	r5, r0
    da98:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    da9c:	add	r4, sp, #696	; 0x2b8
    daa0:	mov	r3, #0
    daa4:	str	r3, [r4, #-8]!
    daa8:	mov	r1, r0
    daac:	mov	r2, sl
    dab0:	mov	r3, r4
    dab4:	mov	r0, fp
    dab8:	bl	2638 <flatcc_json_parser_uint32.constprop.41>
    dabc:	cmp	r5, r0
    dac0:	mov	r9, r0
    dac4:	beq	e144 <MyGame_Example_Alt_parse_json_table+0x302c>
    dac8:	ldr	r3, [sp, #688]	; 0x2b0
    dacc:	cmp	r3, #0
    dad0:	bne	dae0 <MyGame_Example_Alt_parse_json_table+0x29c8>
    dad4:	ldr	r3, [fp, #8]
    dad8:	tst	r3, #2
    dadc:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    dae0:	mov	r3, #4
    dae4:	mov	r2, r3
    dae8:	mov	r1, #6
    daec:	ldr	r0, [fp]
    daf0:	bl	0 <flatcc_builder_table_add>
    daf4:	cmp	r0, #0
    daf8:	bne	da38 <MyGame_Example_Alt_parse_json_table+0x2920>
    dafc:	b	d780 <MyGame_Example_Alt_parse_json_table+0x2668>
    db00:	cmp	ip, #4
    db04:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    db08:	mov	r1, r9
    db0c:	mov	r3, #4
    db10:	mov	r2, sl
    db14:	mov	r0, fp
    db18:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    db1c:	cmp	r0, r9
    db20:	mov	r1, r0
    db24:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    db28:	add	r3, sp, #680	; 0x2a8
    db2c:	mov	r2, sl
    db30:	mov	r0, fp
    db34:	bl	0 <flatcc_json_parser_build_string>
    db38:	ldr	r3, [sp, #680]	; 0x2a8
    db3c:	cmp	r3, #0
    db40:	mov	r9, r0
    db44:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    db48:	ldr	r1, [sp, #184]	; 0xb8
    db4c:	ldr	r0, [fp]
    db50:	bl	0 <flatcc_builder_table_add_offset>
    db54:	cmp	r0, #0
    db58:	bne	d898 <MyGame_Example_Alt_parse_json_table+0x2780>
    db5c:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    db60:	cmp	ip, #4
    db64:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    db68:	mov	r1, r9
    db6c:	mov	r3, #4
    db70:	mov	r2, sl
    db74:	mov	r0, fp
    db78:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    db7c:	cmp	r0, r9
    db80:	mov	r1, r0
    db84:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    db88:	add	r3, sp, #680	; 0x2a8
    db8c:	mov	r2, sl
    db90:	mov	r0, fp
    db94:	bl	0 <flatcc_json_parser_build_string>
    db98:	ldr	r3, [sp, #680]	; 0x2a8
    db9c:	cmp	r3, #0
    dba0:	mov	r9, r0
    dba4:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    dba8:	mov	r1, #4
    dbac:	ldr	r0, [fp]
    dbb0:	bl	0 <flatcc_builder_table_add_offset>
    dbb4:	cmp	r0, #0
    dbb8:	bne	d898 <MyGame_Example_Alt_parse_json_table+0x2780>
    dbbc:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    dbc0:	cmp	ip, #8
    dbc4:	ble	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    dbc8:	mov	r3, #8
    dbcc:	mov	r2, sl
    dbd0:	mov	r1, r9
    dbd4:	mov	r0, fp
    dbd8:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    dbdc:	cmp	r0, r9
    dbe0:	mov	r5, r0
    dbe4:	beq	d790 <MyGame_Example_Alt_parse_json_table+0x2678>
    dbe8:	mov	r0, #0
    dbec:	mov	r1, #0
    dbf0:	add	r4, sp, #696	; 0x2b8
    dbf4:	mov	r2, sl
    dbf8:	strd	r0, [r4, #-8]!
    dbfc:	mov	r1, r5
    dc00:	mov	r3, r4
    dc04:	mov	r0, fp
    dc08:	bl	293c <flatcc_json_parser_int64>
    dc0c:	cmp	r5, r0
    dc10:	mov	r9, r0
    dc14:	beq	e08c <MyGame_Example_Alt_parse_json_table+0x2f74>
    dc18:	add	r3, sp, #688	; 0x2b0
    dc1c:	ldrd	r2, [r3]
    dc20:	orrs	r3, r2, r3
    dc24:	bne	dc34 <MyGame_Example_Alt_parse_json_table+0x2b1c>
    dc28:	ldr	r3, [fp, #8]
    dc2c:	tst	r3, #2
    dc30:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    dc34:	mov	r3, #8
    dc38:	mov	r2, r3
    dc3c:	mov	r1, #3
    dc40:	ldr	r0, [fp]
    dc44:	bl	0 <flatcc_builder_table_add>
    dc48:	cmp	r0, #0
    dc4c:	beq	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    dc50:	add	r3, sp, #688	; 0x2b0
    dc54:	ldrd	r2, [r3]
    dc58:	strd	r2, [r0]
    dc5c:	b	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    dc60:	mov	r1, r9
    dc64:	mov	r3, #5
    dc68:	mov	r2, sl
    dc6c:	mov	r0, fp
    dc70:	bl	0 <flatcc_json_parser_set_error>
    dc74:	mov	r9, r0
    dc78:	b	d53c <MyGame_Example_Alt_parse_json_table+0x2424>
    dc7c:	mov	r3, #8
    dc80:	mov	r2, sl
    dc84:	mov	r1, r9
    dc88:	mov	r0, fp
    dc8c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    dc90:	cmp	r0, r9
    dc94:	mov	r5, r0
    dc98:	beq	d6d0 <MyGame_Example_Alt_parse_json_table+0x25b8>
    dc9c:	mov	r0, #0
    dca0:	mov	r1, #0
    dca4:	add	r4, sp, #696	; 0x2b8
    dca8:	mov	r2, sl
    dcac:	strd	r0, [r4, #-8]!
    dcb0:	mov	r1, r5
    dcb4:	mov	r3, r4
    dcb8:	mov	r0, fp
    dcbc:	bl	293c <flatcc_json_parser_int64>
    dcc0:	cmp	r5, r0
    dcc4:	mov	r9, r0
    dcc8:	beq	e018 <MyGame_Example_Alt_parse_json_table+0x2f00>
    dccc:	add	r3, sp, #688	; 0x2b0
    dcd0:	ldrd	r2, [r3]
    dcd4:	orrs	r3, r2, r3
    dcd8:	bne	dce8 <MyGame_Example_Alt_parse_json_table+0x2bd0>
    dcdc:	ldr	r3, [fp, #8]
    dce0:	tst	r3, #2
    dce4:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    dce8:	mov	r3, #8
    dcec:	mov	r2, r3
    dcf0:	mov	r1, #7
    dcf4:	ldr	r0, [fp]
    dcf8:	bl	0 <flatcc_builder_table_add>
    dcfc:	cmp	r0, #0
    dd00:	bne	dc50 <MyGame_Example_Alt_parse_json_table+0x2b38>
    dd04:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    dd08:	mov	r3, #8
    dd0c:	mov	r2, sl
    dd10:	mov	r1, r9
    dd14:	mov	r0, fp
    dd18:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    dd1c:	cmp	r0, r9
    dd20:	mov	r5, r0
    dd24:	beq	da4c <MyGame_Example_Alt_parse_json_table+0x2934>
    dd28:	mov	r0, #0
    dd2c:	mov	r1, #0
    dd30:	add	r4, sp, #696	; 0x2b8
    dd34:	mov	r2, sl
    dd38:	strd	r0, [r4, #-8]!
    dd3c:	mov	r1, r5
    dd40:	mov	r3, r4
    dd44:	mov	r0, fp
    dd48:	bl	293c <flatcc_json_parser_int64>
    dd4c:	cmp	r5, r0
    dd50:	mov	r9, r0
    dd54:	beq	e044 <MyGame_Example_Alt_parse_json_table+0x2f2c>
    dd58:	add	r3, sp, #688	; 0x2b0
    dd5c:	ldrd	r2, [r3]
    dd60:	orrs	r3, r2, r3
    dd64:	bne	dd74 <MyGame_Example_Alt_parse_json_table+0x2c5c>
    dd68:	ldr	r3, [fp, #8]
    dd6c:	tst	r3, #2
    dd70:	beq	d7a4 <MyGame_Example_Alt_parse_json_table+0x268c>
    dd74:	mov	r3, #8
    dd78:	mov	r2, r3
    dd7c:	mov	r1, #5
    dd80:	ldr	r0, [fp]
    dd84:	bl	0 <flatcc_builder_table_add>
    dd88:	cmp	r0, #0
    dd8c:	bne	dc50 <MyGame_Example_Alt_parse_json_table+0x2b38>
    dd90:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    dd94:	add	r3, sp, #680	; 0x2a8
    dd98:	str	r3, [sp]
    dd9c:	mov	r2, r7
    dda0:	mov	r3, r8
    dda4:	mov	r1, sl
    dda8:	mov	r0, r9
    ddac:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    ddb0:	cmp	r7, r0
    ddb4:	cmpne	r0, sl
    ddb8:	mov	r4, r0
    ddbc:	bne	d384 <MyGame_Example_Alt_parse_json_table+0x226c>
    ddc0:	mov	fp, r9
    ddc4:	mov	sl, r7
    ddc8:	mov	r9, r4
    ddcc:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    ddd0:	ldrb	r3, [r6, #2]
    ddd4:	cmp	r3, #32
    ddd8:	bls	b640 <MyGame_Example_Alt_parse_json_table+0x528>
    dddc:	add	r4, r6, #2
    dde0:	b	b434 <MyGame_Example_Alt_parse_json_table+0x31c>
    dde4:	mov	r3, #0
    dde8:	add	r1, r0, #1
    ddec:	mov	r2, sl
    ddf0:	mov	r0, fp
    ddf4:	str	r3, [sp, #668]	; 0x29c
    ddf8:	bl	1c50 <flatcc_json_parser_space>
    ddfc:	ldr	r3, [sp, #668]	; 0x29c
    de00:	b	b6f8 <MyGame_Example_Alt_parse_json_table+0x5e0>
    de04:	mov	r3, #0
    de08:	add	r1, r1, #1
    de0c:	mov	r2, r7
    de10:	mov	r0, r9
    de14:	str	r3, [sp, #672]	; 0x2a0
    de18:	bl	1c50 <flatcc_json_parser_space>
    de1c:	ldr	r3, [sp, #672]	; 0x2a0
    de20:	b	bf68 <MyGame_Example_Alt_parse_json_table+0xe50>
    de24:	mov	r1, r0
    de28:	mov	r3, #8
    de2c:	mov	r2, r7
    de30:	mov	r0, r9
    de34:	bl	0 <flatcc_json_parser_set_error>
    de38:	mov	r4, r0
    de3c:	cmp	sl, r4
    de40:	beq	dfa8 <MyGame_Example_Alt_parse_json_table+0x2e90>
    de44:	ldr	r2, [sp, #676]	; 0x2a4
    de48:	b	d0b8 <MyGame_Example_Alt_parse_json_table+0x1fa0>
    de4c:	mov	r1, r0
    de50:	mov	r3, #8
    de54:	mov	r2, r7
    de58:	mov	r0, r9
    de5c:	bl	0 <flatcc_json_parser_set_error>
    de60:	mov	r4, r0
    de64:	cmp	sl, r4
    de68:	beq	df48 <MyGame_Example_Alt_parse_json_table+0x2e30>
    de6c:	add	r3, sp, #680	; 0x2a8
    de70:	ldrd	r2, [r3]
    de74:	b	c58c <MyGame_Example_Alt_parse_json_table+0x1474>
    de78:	add	r3, sp, #676	; 0x2a4
    de7c:	str	r3, [sp]
    de80:	mov	r2, r7
    de84:	mov	r3, r8
    de88:	mov	r1, sl
    de8c:	mov	r0, r9
    de90:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    de94:	cmp	r7, r0
    de98:	cmpne	r0, sl
    de9c:	mov	r4, r0
    dea0:	bne	d3b0 <MyGame_Example_Alt_parse_json_table+0x2298>
    dea4:	b	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    dea8:	mov	r1, r4
    deac:	mov	r3, #7
    deb0:	mov	r2, r7
    deb4:	mov	r0, r9
    deb8:	bl	0 <flatcc_json_parser_set_error>
    debc:	mov	r4, r0
    dec0:	b	de3c <MyGame_Example_Alt_parse_json_table+0x2d24>
    dec4:	mov	r3, #0
    dec8:	b	b518 <MyGame_Example_Alt_parse_json_table+0x400>
    decc:	mov	r3, #0
    ded0:	b	b53c <MyGame_Example_Alt_parse_json_table+0x424>
    ded4:	mov	r3, #0
    ded8:	b	b560 <MyGame_Example_Alt_parse_json_table+0x448>
    dedc:	mov	r3, #0
    dee0:	b	b580 <MyGame_Example_Alt_parse_json_table+0x468>
    dee4:	mov	r3, #0
    dee8:	b	b5a4 <MyGame_Example_Alt_parse_json_table+0x48c>
    deec:	mov	r3, #0
    def0:	b	b5c8 <MyGame_Example_Alt_parse_json_table+0x4b0>
    def4:	mov	r1, r4
    def8:	ldr	r3, [sp, #664]	; 0x298
    defc:	mov	r2, fp
    df00:	mov	r0, sl
    df04:	bl	0 <flatcc_json_parser_finalize_unions>
    df08:	mov	r4, r0
    df0c:	ldr	r0, [sl]
    df10:	bl	0 <flatcc_builder_end_table>
    df14:	ldr	r3, [sp, #652]	; 0x28c
    df18:	cmp	r0, #0
    df1c:	str	r0, [r3]
    df20:	beq	b440 <MyGame_Example_Alt_parse_json_table+0x328>
    df24:	mov	r0, r4
    df28:	b	b454 <MyGame_Example_Alt_parse_json_table+0x33c>
    df2c:	ldrb	r3, [r0, #2]
    df30:	cmp	r3, #32
    df34:	bls	d478 <MyGame_Example_Alt_parse_json_table+0x2360>
    df38:	mov	fp, r9
    df3c:	mov	sl, r7
    df40:	add	r9, r0, #2
    df44:	b	ccd0 <MyGame_Example_Alt_parse_json_table+0x1bb8>
    df48:	add	r3, sp, #680	; 0x2a8
    df4c:	str	r3, [sp]
    df50:	mov	r2, r7
    df54:	ldr	r3, [pc, #-1604]	; d918 <MyGame_Example_Alt_parse_json_table+0x2800>
    df58:	mov	r1, sl
    df5c:	mov	r0, r9
    df60:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    df64:	cmp	r7, r0
    df68:	cmpne	r0, sl
    df6c:	mov	r4, r0
    df70:	bne	de6c <MyGame_Example_Alt_parse_json_table+0x2d54>
    df74:	b	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    df78:	ldrb	r3, [r6, #2]
    df7c:	cmp	r3, #32
    df80:	addhi	r4, r6, #2
    df84:	bls	c7a8 <MyGame_Example_Alt_parse_json_table+0x1690>
    df88:	b	c7bc <MyGame_Example_Alt_parse_json_table+0x16a4>
    df8c:	mov	r1, r0
    df90:	mov	r3, #7
    df94:	mov	r2, r7
    df98:	mov	r0, r9
    df9c:	bl	0 <flatcc_json_parser_set_error>
    dfa0:	mov	r4, r0
    dfa4:	b	d37c <MyGame_Example_Alt_parse_json_table+0x2264>
    dfa8:	add	r3, sp, #676	; 0x2a4
    dfac:	str	r3, [sp]
    dfb0:	mov	r2, r7
    dfb4:	ldr	r3, [pc, #-1696]	; d91c <MyGame_Example_Alt_parse_json_table+0x2804>
    dfb8:	mov	r1, sl
    dfbc:	mov	r0, r9
    dfc0:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    dfc4:	cmp	r7, r0
    dfc8:	cmpne	r0, sl
    dfcc:	mov	r4, r0
    dfd0:	bne	de44 <MyGame_Example_Alt_parse_json_table+0x2d2c>
    dfd4:	b	ddc0 <MyGame_Example_Alt_parse_json_table+0x2ca8>
    dfd8:	mov	fp, r9
    dfdc:	mov	sl, r7
    dfe0:	mov	r9, r1
    dfe4:	b	ccd0 <MyGame_Example_Alt_parse_json_table+0x1bb8>
    dfe8:	mov	r3, sl
    dfec:	mov	sl, fp
    dff0:	mov	fp, r3
    dff4:	add	r1, r4, #1
    dff8:	mov	r3, #0
    dffc:	mov	r2, fp
    e000:	mov	r0, sl
    e004:	str	r3, [sp, #656]	; 0x290
    e008:	bl	1c50 <flatcc_json_parser_space>
    e00c:	ldr	r3, [sp, #656]	; 0x290
    e010:	mov	r4, r0
    e014:	b	b194 <MyGame_Example_Alt_parse_json_table+0x7c>
    e018:	mov	r1, r0
    e01c:	str	r4, [sp]
    e020:	ldr	r3, [pc, #-1800]	; d920 <MyGame_Example_Alt_parse_json_table+0x2808>
    e024:	mov	r2, sl
    e028:	mov	r0, fp
    e02c:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    e030:	cmp	sl, r0
    e034:	cmpne	r9, r0
    e038:	mov	r9, r0
    e03c:	bne	dccc <MyGame_Example_Alt_parse_json_table+0x2bb4>
    e040:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    e044:	mov	r1, r0
    e048:	str	r4, [sp]
    e04c:	ldr	r3, [pc, #-1840]	; d924 <MyGame_Example_Alt_parse_json_table+0x280c>
    e050:	mov	r2, sl
    e054:	mov	r0, fp
    e058:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    e05c:	cmp	sl, r0
    e060:	cmpne	r9, r0
    e064:	mov	r9, r0
    e068:	bne	dd58 <MyGame_Example_Alt_parse_json_table+0x2c40>
    e06c:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    e070:	mov	r1, r0
    e074:	mov	r3, #7
    e078:	mov	r2, r7
    e07c:	mov	r0, r9
    e080:	bl	0 <flatcc_json_parser_set_error>
    e084:	mov	r4, r0
    e088:	b	de64 <MyGame_Example_Alt_parse_json_table+0x2d4c>
    e08c:	mov	r1, r0
    e090:	str	r4, [sp]
    e094:	ldr	r3, [pc, #-1908]	; d928 <MyGame_Example_Alt_parse_json_table+0x2810>
    e098:	mov	r2, sl
    e09c:	mov	r0, fp
    e0a0:	bl	3f94 <flatcc_json_parser_symbolic_int64>
    e0a4:	cmp	sl, r0
    e0a8:	cmpne	r9, r0
    e0ac:	mov	r9, r0
    e0b0:	bne	dc18 <MyGame_Example_Alt_parse_json_table+0x2b00>
    e0b4:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    e0b8:	mov	r3, sl
    e0bc:	mov	sl, fp
    e0c0:	mov	fp, r3
    e0c4:	mov	ip, #0
    e0c8:	mov	r3, #10
    e0cc:	mov	r2, fp
    e0d0:	mov	r1, fp
    e0d4:	mov	r0, sl
    e0d8:	str	ip, [sp, #656]	; 0x290
    e0dc:	bl	0 <flatcc_json_parser_set_error>
    e0e0:	ldr	r3, [sp, #656]	; 0x290
    e0e4:	mov	r4, r0
    e0e8:	b	b194 <MyGame_Example_Alt_parse_json_table+0x7c>
    e0ec:	mov	r1, r0
    e0f0:	str	r4, [sp]
    e0f4:	ldr	r3, [pc, #-2000]	; d92c <MyGame_Example_Alt_parse_json_table+0x2814>
    e0f8:	mov	r2, sl
    e0fc:	mov	r0, fp
    e100:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    e104:	cmp	sl, r0
    e108:	cmpne	r9, r0
    e10c:	mov	r9, r0
    e110:	bne	da04 <MyGame_Example_Alt_parse_json_table+0x28ec>
    e114:	b	c2f8 <MyGame_Example_Alt_parse_json_table+0x11e0>
    e118:	mov	r1, r0
    e11c:	str	r4, [sp]
    e120:	mov	r3, r8
    e124:	mov	r2, sl
    e128:	mov	r0, fp
    e12c:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    e130:	cmp	sl, r0
    e134:	cmpne	r9, r0
    e138:	beq	d784 <MyGame_Example_Alt_parse_json_table+0x266c>
    e13c:	mov	r9, r0
    e140:	b	d74c <MyGame_Example_Alt_parse_json_table+0x2634>
    e144:	mov	r1, r0
    e148:	str	r4, [sp]
    e14c:	ldr	r3, [pc, #-2084]	; d930 <MyGame_Example_Alt_parse_json_table+0x2818>
    e150:	mov	r2, sl
    e154:	mov	r0, fp
    e158:	bl	3b4c <flatcc_json_parser_symbolic_uint32>
    e15c:	cmp	sl, r0
    e160:	cmpne	r9, r0
    e164:	beq	d784 <MyGame_Example_Alt_parse_json_table+0x266c>
    e168:	mov	r9, r0
    e16c:	b	dac8 <MyGame_Example_Alt_parse_json_table+0x29b0>

0000e170 <MyGame_Example_Any_parse_json_union>:
    e170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e174:	sub	sp, sp, #92	; 0x5c
    e178:	mov	r5, r2
    e17c:	ldr	r2, [sp, #128]	; 0x80
    e180:	mov	ip, #0
    e184:	mov	r8, r0
    e188:	mov	r4, r1
    e18c:	str	ip, [r2]
    e190:	cmp	r3, #4
    e194:	ldrls	pc, [pc, r3, lsl #2]
    e198:	b	e81c <MyGame_Example_Any_parse_json_union+0x6ac>
    e19c:	.word	0x0000e1f4
    e1a0:	.word	0x0000e238
    e1a4:	.word	0x0000e248
    e1a8:	.word	0x0000e4dc
    e1ac:	.word	0x0000e1b0
    e1b0:	ldr	r3, [sp, #128]	; 0x80
    e1b4:	mov	r2, r5
    e1b8:	bl	b118 <MyGame_Example_Alt_parse_json_table>
    e1bc:	ldr	r3, [r8, #24]
    e1c0:	cmp	r3, #0
    e1c4:	bne	e1ec <MyGame_Example_Any_parse_json_union+0x7c>
    e1c8:	ldr	r3, [sp, #128]	; 0x80
    e1cc:	ldr	r3, [r3]
    e1d0:	cmp	r3, #0
    e1d4:	bne	e1ec <MyGame_Example_Any_parse_json_union+0x7c>
    e1d8:	mov	r1, r0
    e1dc:	mov	r2, r5
    e1e0:	mov	r0, r8
    e1e4:	mov	r3, #33	; 0x21
    e1e8:	bl	0 <flatcc_json_parser_set_error>
    e1ec:	add	sp, sp, #92	; 0x5c
    e1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1f4:	sub	r3, r5, r1
    e1f8:	cmp	r3, #3
    e1fc:	ble	e21c <MyGame_Example_Any_parse_json_union+0xac>
    e200:	mov	r2, #4
    e204:	ldr	r1, [pc, #1284]	; e710 <MyGame_Example_Any_parse_json_union+0x5a0>
    e208:	mov	r0, r4
    e20c:	bl	0 <memcmp>
    e210:	cmp	r0, #0
    e214:	addeq	r0, r4, #4
    e218:	beq	e1ec <MyGame_Example_Any_parse_json_union+0x7c>
    e21c:	mov	r2, r5
    e220:	mov	r1, r4
    e224:	mov	r0, r8
    e228:	mov	r3, #26
    e22c:	bl	0 <flatcc_json_parser_set_error>
    e230:	add	sp, sp, #92	; 0x5c
    e234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e238:	ldr	r3, [sp, #128]	; 0x80
    e23c:	mov	r2, r5
    e240:	bl	6b6c <MyGame_Example_Monster_parse_json_table>
    e244:	b	e1bc <MyGame_Example_Any_parse_json_union+0x4c>
    e248:	mov	r1, #4
    e24c:	ldr	r0, [r0]
    e250:	bl	0 <flatcc_builder_start_table>
    e254:	cmp	r0, #0
    e258:	bne	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e25c:	mov	r1, r4
    e260:	add	r3, sp, #72	; 0x48
    e264:	mov	r2, r5
    e268:	mov	r0, r8
    e26c:	bl	2a3c <flatcc_json_parser_object_start>
    e270:	ldr	r3, [sp, #72]	; 0x48
    e274:	cmp	r3, #0
    e278:	mov	r4, r0
    e27c:	bne	e470 <MyGame_Example_Any_parse_json_union+0x300>
    e280:	b	ea78 <MyGame_Example_Any_parse_json_union+0x908>
    e284:	ldrb	r6, [r4, #7]
    e288:	mov	r7, #0
    e28c:	ldrb	r2, [r4, #6]
    e290:	lsr	r1, r2, #24
    e294:	lsl	r3, r2, #8
    e298:	str	r1, [sp, #60]	; 0x3c
    e29c:	str	r3, [sp, #56]	; 0x38
    e2a0:	ldrd	r2, [sp, #56]	; 0x38
    e2a4:	orr	r2, r2, r6
    e2a8:	orr	r3, r3, r7
    e2ac:	mov	r6, r2
    e2b0:	mov	r7, r3
    e2b4:	ldrb	r2, [r4, #5]
    e2b8:	lsr	r1, r2, #16
    e2bc:	lsl	r3, r2, #16
    e2c0:	str	r1, [sp, #52]	; 0x34
    e2c4:	str	r3, [sp, #48]	; 0x30
    e2c8:	ldrd	r2, [sp, #48]	; 0x30
    e2cc:	orr	r2, r2, r6
    e2d0:	orr	r3, r3, r7
    e2d4:	mov	r6, r2
    e2d8:	mov	r7, r3
    e2dc:	ldrb	r2, [r4, #4]
    e2e0:	lsr	r1, r2, #8
    e2e4:	lsl	r3, r2, #24
    e2e8:	str	r1, [sp, #36]	; 0x24
    e2ec:	str	r3, [sp, #32]
    e2f0:	ldrd	r2, [sp, #32]
    e2f4:	orr	r2, r2, r6
    e2f8:	orr	r3, r3, r7
    e2fc:	mov	r6, r2
    e300:	mov	r7, r3
    e304:	ldrb	r3, [r4, #3]
    e308:	str	r3, [sp, #44]	; 0x2c
    e30c:	mov	r3, #0
    e310:	str	r3, [sp, #40]	; 0x28
    e314:	ldrd	r2, [sp, #40]	; 0x28
    e318:	orr	r2, r2, r6
    e31c:	orr	r3, r3, r7
    e320:	mov	r6, r2
    e324:	mov	r7, r3
    e328:	ldrb	r2, [r4, #2]
    e32c:	lsl	r3, r2, #8
    e330:	str	r3, [sp, #28]
    e334:	mov	r3, #0
    e338:	str	r3, [sp, #24]
    e33c:	ldrd	r2, [sp, #24]
    e340:	orr	r2, r2, r6
    e344:	orr	r3, r3, r7
    e348:	mov	r6, r2
    e34c:	mov	r7, r3
    e350:	ldrb	r2, [r4, #1]
    e354:	lsl	r3, r2, #16
    e358:	str	r3, [sp, #20]
    e35c:	mov	r3, #0
    e360:	str	r3, [sp, #16]
    e364:	ldrd	r2, [sp, #16]
    e368:	orr	r2, r2, r6
    e36c:	orr	r3, r3, r7
    e370:	mov	r6, r2
    e374:	mov	r7, r3
    e378:	ldrb	r2, [r4]
    e37c:	add	r1, pc, #884	; 0x374
    e380:	ldrd	r0, [r1]
    e384:	lsl	r3, r2, #24
    e388:	str	r3, [sp, #12]
    e38c:	mov	r3, #0
    e390:	str	r3, [sp, #8]
    e394:	ldrd	r2, [sp, #8]
    e398:	orr	r2, r2, r6
    e39c:	orr	r3, r3, r7
    e3a0:	mov	r6, r2
    e3a4:	mov	r7, r3
    e3a8:	ldr	r2, [pc, #868]	; e714 <MyGame_Example_Any_parse_json_union+0x5a4>
    e3ac:	mvn	r3, #0
    e3b0:	and	r3, r3, r7
    e3b4:	and	r2, r2, r6
    e3b8:	cmp	r3, r1
    e3bc:	cmpeq	r2, r0
    e3c0:	beq	e540 <MyGame_Example_Any_parse_json_union+0x3d0>
    e3c4:	add	r3, pc, #820	; 0x334
    e3c8:	ldrd	r2, [r3]
    e3cc:	and	r0, r6, #-16777216	; 0xff000000
    e3d0:	cmp	r7, r3
    e3d4:	cmpeq	r0, r2
    e3d8:	movne	sl, #1
    e3dc:	moveq	sl, #0
    e3e0:	cmp	r9, #5
    e3e4:	orrle	sl, sl, #1
    e3e8:	cmp	sl, #0
    e3ec:	beq	e874 <MyGame_Example_Any_parse_json_union+0x704>
    e3f0:	add	r3, pc, #784	; 0x310
    e3f4:	ldrd	r2, [r3]
    e3f8:	bic	r1, r7, #255	; 0xff
    e3fc:	mov	r0, #0
    e400:	cmp	r1, r3
    e404:	cmpeq	r0, r2
    e408:	beq	e614 <MyGame_Example_Any_parse_json_union+0x4a4>
    e40c:	ldr	r3, [pc, #768]	; e714 <MyGame_Example_Any_parse_json_union+0x5a4>
    e410:	mov	r2, #0
    e414:	and	r7, r7, r3
    e418:	ldr	r3, [pc, #760]	; e718 <MyGame_Example_Any_parse_json_union+0x5a8>
    e41c:	and	r6, r6, r2
    e420:	cmp	r7, r3
    e424:	mov	r2, #0
    e428:	cmpeq	r6, r2
    e42c:	bne	e438 <MyGame_Example_Any_parse_json_union+0x2c8>
    e430:	cmp	r9, #2
    e434:	bgt	e72c <MyGame_Example_Any_parse_json_union+0x5bc>
    e438:	mov	r1, r4
    e43c:	mov	r2, r5
    e440:	mov	r0, r8
    e444:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e448:	mov	r4, r0
    e44c:	mov	r1, r4
    e450:	add	r3, sp, #72	; 0x48
    e454:	mov	r2, r5
    e458:	mov	r0, r8
    e45c:	bl	4ba8 <flatcc_json_parser_object_end>
    e460:	ldr	r3, [sp, #72]	; 0x48
    e464:	cmp	r3, #0
    e468:	mov	r4, r0
    e46c:	beq	ea78 <MyGame_Example_Any_parse_json_union+0x908>
    e470:	cmp	r5, r4
    e474:	beq	e6e4 <MyGame_Example_Any_parse_json_union+0x574>
    e478:	ldrb	r3, [r4]
    e47c:	cmp	r3, #34	; 0x22
    e480:	moveq	r3, #0
    e484:	addeq	r4, r4, #1
    e488:	streq	r3, [r8, #12]
    e48c:	beq	e4a0 <MyGame_Example_Any_parse_json_union+0x330>
    e490:	cmp	r3, #46	; 0x2e
    e494:	movne	r3, #1
    e498:	strne	r3, [r8, #12]
    e49c:	beq	e800 <MyGame_Example_Any_parse_json_union+0x690>
    e4a0:	sub	r9, r5, r4
    e4a4:	cmp	r9, #8
    e4a8:	bhi	e284 <MyGame_Example_Any_parse_json_union+0x114>
    e4ac:	sub	r3, r9, #1
    e4b0:	cmp	r3, #7
    e4b4:	ldrls	pc, [pc, r3, lsl #2]
    e4b8:	b	e6e8 <MyGame_Example_Any_parse_json_union+0x578>
    e4bc:	.word	0x0000e534
    e4c0:	.word	0x0000e528
    e4c4:	.word	0x0000e51c
    e4c8:	.word	0x0000e510
    e4cc:	.word	0x0000e504
    e4d0:	.word	0x0000e4f8
    e4d4:	.word	0x0000e4ec
    e4d8:	.word	0x0000e284
    e4dc:	ldr	r3, [sp, #128]	; 0x80
    e4e0:	mov	r2, r5
    e4e4:	bl	6068 <MyGame_Example2_Monster_parse_json_table>
    e4e8:	b	e1bc <MyGame_Example_Any_parse_json_union+0x4c>
    e4ec:	mov	r6, #0
    e4f0:	mov	r7, #0
    e4f4:	b	e28c <MyGame_Example_Any_parse_json_union+0x11c>
    e4f8:	mov	r6, #0
    e4fc:	mov	r7, #0
    e500:	b	e2b4 <MyGame_Example_Any_parse_json_union+0x144>
    e504:	mov	r6, #0
    e508:	mov	r7, #0
    e50c:	b	e2dc <MyGame_Example_Any_parse_json_union+0x16c>
    e510:	mov	r6, #0
    e514:	mov	r7, #0
    e518:	b	e304 <MyGame_Example_Any_parse_json_union+0x194>
    e51c:	mov	r6, #0
    e520:	mov	r7, #0
    e524:	b	e328 <MyGame_Example_Any_parse_json_union+0x1b8>
    e528:	mov	r6, #0
    e52c:	mov	r7, #0
    e530:	b	e350 <MyGame_Example_Any_parse_json_union+0x1e0>
    e534:	mov	r6, #0
    e538:	mov	r7, #0
    e53c:	b	e378 <MyGame_Example_Any_parse_json_union+0x208>
    e540:	cmp	r9, #6
    e544:	ble	e40c <MyGame_Example_Any_parse_json_union+0x29c>
    e548:	mov	r3, #6
    e54c:	mov	r2, r5
    e550:	mov	r1, r4
    e554:	mov	r0, r8
    e558:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    e55c:	cmp	r0, r4
    e560:	mov	sl, r0
    e564:	beq	e40c <MyGame_Example_Any_parse_json_union+0x29c>
    e568:	cmp	r5, r0
    e56c:	ldrd	r0, [sp, #8]
    e570:	mov	r2, #0
    e574:	mov	r3, #0
    e578:	strb	r0, [sp, #71]	; 0x47
    e57c:	str	r0, [sp, #76]	; 0x4c
    e580:	strd	r2, [sp, #80]	; 0x50
    e584:	beq	e9ac <MyGame_Example_Any_parse_json_union+0x83c>
    e588:	add	r3, sp, #80	; 0x50
    e58c:	str	r3, [sp]
    e590:	mov	r2, r5
    e594:	add	r3, sp, #76	; 0x4c
    e598:	mov	r1, sl
    e59c:	mov	r0, r8
    e5a0:	bl	0 <flatcc_json_parser_integer>
    e5a4:	cmp	sl, r0
    e5a8:	mov	r4, r0
    e5ac:	beq	e9a8 <MyGame_Example_Any_parse_json_union+0x838>
    e5b0:	ldr	r1, [sp, #76]	; 0x4c
    e5b4:	ldrd	r2, [sp, #80]	; 0x50
    e5b8:	cmp	r1, #0
    e5bc:	beq	e838 <MyGame_Example_Any_parse_json_union+0x6c8>
    e5c0:	cmp	r3, #0
    e5c4:	cmpeq	r2, #128	; 0x80
    e5c8:	rsbls	r2, r2, #0
    e5cc:	sxtbls	r2, r2
    e5d0:	strbls	r2, [sp, #71]	; 0x47
    e5d4:	bhi	eae4 <MyGame_Example_Any_parse_json_union+0x974>
    e5d8:	cmp	r2, #2
    e5dc:	bne	e5ec <MyGame_Example_Any_parse_json_union+0x47c>
    e5e0:	ldr	r3, [r8, #8]
    e5e4:	tst	r3, #2
    e5e8:	beq	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e5ec:	mov	r3, #1
    e5f0:	mov	r2, r3
    e5f4:	mov	r1, r3
    e5f8:	ldr	r0, [r8]
    e5fc:	bl	0 <flatcc_builder_table_add>
    e600:	cmp	r0, #0
    e604:	beq	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e608:	ldrsb	r3, [sp, #71]	; 0x47
    e60c:	strb	r3, [r0]
    e610:	b	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e614:	cmp	r9, #3
    e618:	ble	e438 <MyGame_Example_Any_parse_json_union+0x2c8>
    e61c:	mov	r3, #3
    e620:	mov	r2, r5
    e624:	mov	r1, r4
    e628:	mov	r0, r8
    e62c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    e630:	cmp	r0, r4
    e634:	mov	r6, r0
    e638:	beq	e438 <MyGame_Example_Any_parse_json_union+0x2c8>
    e63c:	mov	r0, #0
    e640:	mov	r1, #0
    e644:	mov	r3, #0
    e648:	cmp	r5, r6
    e64c:	strd	r0, [sp, #80]	; 0x50
    e650:	strb	r3, [sp, #71]	; 0x47
    e654:	str	r3, [sp, #76]	; 0x4c
    e658:	beq	e9e8 <MyGame_Example_Any_parse_json_union+0x878>
    e65c:	add	r3, sp, #80	; 0x50
    e660:	str	r3, [sp]
    e664:	mov	r2, r5
    e668:	add	r3, sp, #76	; 0x4c
    e66c:	mov	r1, r6
    e670:	mov	r0, r8
    e674:	bl	0 <flatcc_json_parser_integer>
    e678:	cmp	r6, r0
    e67c:	mov	r4, r0
    e680:	beq	e9e4 <MyGame_Example_Any_parse_json_union+0x874>
    e684:	ldr	r3, [sp, #76]	; 0x4c
    e688:	cmp	r3, #0
    e68c:	bne	eaa4 <MyGame_Example_Any_parse_json_union+0x934>
    e690:	ldrd	r2, [sp, #80]	; 0x50
    e694:	cmp	r3, #0
    e698:	cmpeq	r2, #255	; 0xff
    e69c:	uxtbls	r2, r2
    e6a0:	strbls	r2, [sp, #71]	; 0x47
    e6a4:	bhi	eb00 <MyGame_Example_Any_parse_json_union+0x990>
    e6a8:	cmp	r2, #2
    e6ac:	bne	e6bc <MyGame_Example_Any_parse_json_union+0x54c>
    e6b0:	ldr	r3, [r8, #8]
    e6b4:	tst	r3, #2
    e6b8:	beq	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e6bc:	mov	r3, #1
    e6c0:	mov	r2, r3
    e6c4:	mov	r1, #3
    e6c8:	ldr	r0, [r8]
    e6cc:	bl	0 <flatcc_builder_table_add>
    e6d0:	cmp	r0, #0
    e6d4:	beq	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e6d8:	ldrb	r3, [sp, #71]	; 0x47
    e6dc:	strb	r3, [r0]
    e6e0:	b	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e6e4:	mov	r9, #0
    e6e8:	mov	r6, #0
    e6ec:	mov	r7, #0
    e6f0:	b	e40c <MyGame_Example_Any_parse_json_union+0x29c>
    e6f4:	nop			; (mov r0, r0)
    e6f8:	.word	0x72320000
    e6fc:	.word	0x636f6c6f
    e700:	.word	0x72000000
    e704:	.word	0x636f6c6f
    e708:	.word	0x00000000
    e70c:	.word	0x75633200
    e710:	.word	0x00000440
    e714:	.word	0xffff0000
    e718:	.word	0x75630000
    e71c:	.word	0x000002c0
    e720:	.word	0x00000294
    e724:	.word	0x000002b4
    e728:	.word	0x000002a4
    e72c:	mov	r3, #2
    e730:	mov	r2, r5
    e734:	mov	r1, r4
    e738:	mov	r0, r8
    e73c:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    e740:	cmp	r0, r4
    e744:	mov	r6, r0
    e748:	beq	e438 <MyGame_Example_Any_parse_json_union+0x2c8>
    e74c:	mov	r0, #0
    e750:	mov	r1, #0
    e754:	mov	r3, #0
    e758:	cmp	r5, r6
    e75c:	strd	r0, [sp, #80]	; 0x50
    e760:	strb	r3, [sp, #71]	; 0x47
    e764:	str	r3, [sp, #76]	; 0x4c
    e768:	beq	e974 <MyGame_Example_Any_parse_json_union+0x804>
    e76c:	add	r3, sp, #80	; 0x50
    e770:	str	r3, [sp]
    e774:	mov	r2, r5
    e778:	add	r3, sp, #76	; 0x4c
    e77c:	mov	r1, r6
    e780:	mov	r0, r8
    e784:	bl	0 <flatcc_json_parser_integer>
    e788:	cmp	r6, r0
    e78c:	mov	r4, r0
    e790:	beq	e970 <MyGame_Example_Any_parse_json_union+0x800>
    e794:	ldr	r3, [sp, #76]	; 0x4c
    e798:	cmp	r3, #0
    e79c:	bne	ea1c <MyGame_Example_Any_parse_json_union+0x8ac>
    e7a0:	ldrd	r2, [sp, #80]	; 0x50
    e7a4:	cmp	r3, #0
    e7a8:	cmpeq	r2, #255	; 0xff
    e7ac:	uxtbls	r2, r2
    e7b0:	strbls	r2, [sp, #71]	; 0x47
    e7b4:	bhi	eac8 <MyGame_Example_Any_parse_json_union+0x958>
    e7b8:	cmp	r2, #2
    e7bc:	bne	e7cc <MyGame_Example_Any_parse_json_union+0x65c>
    e7c0:	ldr	r3, [r8, #8]
    e7c4:	tst	r3, #2
    e7c8:	beq	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e7cc:	mov	r3, #1
    e7d0:	mov	r2, r3
    e7d4:	mov	r1, #2
    e7d8:	ldr	r0, [r8]
    e7dc:	bl	0 <flatcc_builder_table_add>
    e7e0:	cmp	r0, #0
    e7e4:	bne	e6d8 <MyGame_Example_Any_parse_json_union+0x568>
    e7e8:	mov	r1, r4
    e7ec:	mov	r3, #33	; 0x21
    e7f0:	mov	r2, r5
    e7f4:	mov	r0, r8
    e7f8:	bl	0 <flatcc_json_parser_set_error>
    e7fc:	b	e1bc <MyGame_Example_Any_parse_json_union+0x4c>
    e800:	mov	r1, r4
    e804:	mov	r3, #5
    e808:	mov	r2, r5
    e80c:	mov	r0, r8
    e810:	bl	0 <flatcc_json_parser_set_error>
    e814:	mov	r4, r0
    e818:	b	e4a0 <MyGame_Example_Any_parse_json_union+0x330>
    e81c:	ldr	r3, [r0, #8]
    e820:	mov	r2, r5
    e824:	tst	r3, #1
    e828:	bne	e9dc <MyGame_Example_Any_parse_json_union+0x86c>
    e82c:	mov	r3, #15
    e830:	bl	0 <flatcc_json_parser_set_error>
    e834:	b	e1ec <MyGame_Example_Any_parse_json_union+0x7c>
    e838:	cmp	r3, #0
    e83c:	cmpeq	r2, #127	; 0x7f
    e840:	sxtbls	r2, r2
    e844:	strbls	r2, [sp, #71]	; 0x47
    e848:	bls	e5d8 <MyGame_Example_Any_parse_json_union+0x468>
    e84c:	mov	r1, r0
    e850:	mov	r3, #7
    e854:	mov	r2, r5
    e858:	mov	r0, r8
    e85c:	bl	0 <flatcc_json_parser_set_error>
    e860:	mov	r4, r0
    e864:	cmp	sl, r4
    e868:	beq	e9ac <MyGame_Example_Any_parse_json_union+0x83c>
    e86c:	ldrsb	r2, [sp, #71]	; 0x47
    e870:	b	e5d8 <MyGame_Example_Any_parse_json_union+0x468>
    e874:	mov	r3, #5
    e878:	mov	r2, r5
    e87c:	mov	r1, r4
    e880:	mov	r0, r8
    e884:	bl	2af0 <flatcc_json_parser_match_symbol.part.34>
    e888:	cmp	r0, r4
    e88c:	mov	fp, r0
    e890:	beq	e3f0 <MyGame_Example_Any_parse_json_union+0x280>
    e894:	mov	r2, #0
    e898:	mov	r3, #0
    e89c:	cmp	r5, r0
    e8a0:	strb	sl, [sp, #71]	; 0x47
    e8a4:	str	sl, [sp, #76]	; 0x4c
    e8a8:	strd	r2, [sp, #80]	; 0x50
    e8ac:	beq	ea48 <MyGame_Example_Any_parse_json_union+0x8d8>
    e8b0:	add	r3, sp, #80	; 0x50
    e8b4:	str	r3, [sp]
    e8b8:	mov	r1, r0
    e8bc:	add	r3, sp, #76	; 0x4c
    e8c0:	mov	r2, r5
    e8c4:	mov	r0, r8
    e8c8:	bl	0 <flatcc_json_parser_integer>
    e8cc:	cmp	fp, r0
    e8d0:	mov	r4, r0
    e8d4:	beq	ea44 <MyGame_Example_Any_parse_json_union+0x8d4>
    e8d8:	ldr	r1, [sp, #76]	; 0x4c
    e8dc:	ldrd	r2, [sp, #80]	; 0x50
    e8e0:	cmp	r1, #0
    e8e4:	beq	e934 <MyGame_Example_Any_parse_json_union+0x7c4>
    e8e8:	cmp	r3, #0
    e8ec:	cmpeq	r2, #128	; 0x80
    e8f0:	rsbls	r2, r2, #0
    e8f4:	sxtbls	r2, r2
    e8f8:	strbls	r2, [sp, #71]	; 0x47
    e8fc:	bhi	eb1c <MyGame_Example_Any_parse_json_union+0x9ac>
    e900:	cmp	r2, #2
    e904:	bne	e914 <MyGame_Example_Any_parse_json_union+0x7a4>
    e908:	ldr	r3, [r8, #8]
    e90c:	tst	r3, #2
    e910:	beq	e44c <MyGame_Example_Any_parse_json_union+0x2dc>
    e914:	mov	r3, #1
    e918:	mov	r2, r3
    e91c:	mov	r1, #0
    e920:	ldr	r0, [r8]
    e924:	bl	0 <flatcc_builder_table_add>
    e928:	cmp	r0, #0
    e92c:	bne	e608 <MyGame_Example_Any_parse_json_union+0x498>
    e930:	b	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e934:	cmp	r3, #0
    e938:	cmpeq	r2, #127	; 0x7f
    e93c:	sxtbls	r2, r2
    e940:	strbls	r2, [sp, #71]	; 0x47
    e944:	bls	e900 <MyGame_Example_Any_parse_json_union+0x790>
    e948:	mov	r1, r0
    e94c:	mov	r3, #7
    e950:	mov	r2, r5
    e954:	mov	r0, r8
    e958:	bl	0 <flatcc_json_parser_set_error>
    e95c:	mov	r4, r0
    e960:	cmp	fp, r4
    e964:	beq	ea48 <MyGame_Example_Any_parse_json_union+0x8d8>
    e968:	ldrsb	r2, [sp, #71]	; 0x47
    e96c:	b	e900 <MyGame_Example_Any_parse_json_union+0x790>
    e970:	mov	r6, r0
    e974:	add	r3, sp, #71	; 0x47
    e978:	str	r3, [sp]
    e97c:	mov	r2, r5
    e980:	ldr	r3, [pc, #-620]	; e71c <MyGame_Example_Any_parse_json_union+0x5ac>
    e984:	mov	r1, r6
    e988:	mov	r0, r8
    e98c:	bl	3d70 <flatcc_json_parser_symbolic_uint8>
    e990:	cmp	r5, r0
    e994:	cmpne	r0, r6
    e998:	mov	r4, r0
    e99c:	beq	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e9a0:	ldrb	r2, [sp, #71]	; 0x47
    e9a4:	b	e7b8 <MyGame_Example_Any_parse_json_union+0x648>
    e9a8:	mov	sl, r0
    e9ac:	add	r3, sp, #71	; 0x47
    e9b0:	str	r3, [sp]
    e9b4:	mov	r2, r5
    e9b8:	ldr	r3, [pc, #-672]	; e720 <MyGame_Example_Any_parse_json_union+0x5b0>
    e9bc:	mov	r1, sl
    e9c0:	mov	r0, r8
    e9c4:	bl	36dc <flatcc_json_parser_symbolic_int8>
    e9c8:	cmp	r5, r0
    e9cc:	cmpne	r0, sl
    e9d0:	mov	r4, r0
    e9d4:	bne	e86c <MyGame_Example_Any_parse_json_union+0x6fc>
    e9d8:	b	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    e9dc:	bl	0 <flatcc_json_parser_generic_json>
    e9e0:	b	e1ec <MyGame_Example_Any_parse_json_union+0x7c>
    e9e4:	mov	r6, r0
    e9e8:	add	r3, sp, #71	; 0x47
    e9ec:	str	r3, [sp]
    e9f0:	mov	r2, r5
    e9f4:	ldr	r3, [pc, #-728]	; e724 <MyGame_Example_Any_parse_json_union+0x5b4>
    e9f8:	mov	r1, r6
    e9fc:	mov	r0, r8
    ea00:	bl	3d70 <flatcc_json_parser_symbolic_uint8>
    ea04:	cmp	r5, r0
    ea08:	cmpne	r0, r6
    ea0c:	mov	r4, r0
    ea10:	beq	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    ea14:	ldrb	r2, [sp, #71]	; 0x47
    ea18:	b	e6a8 <MyGame_Example_Any_parse_json_union+0x538>
    ea1c:	mov	r1, r0
    ea20:	mov	r3, #8
    ea24:	mov	r2, r5
    ea28:	mov	r0, r8
    ea2c:	bl	0 <flatcc_json_parser_set_error>
    ea30:	mov	r4, r0
    ea34:	cmp	r6, r4
    ea38:	beq	e974 <MyGame_Example_Any_parse_json_union+0x804>
    ea3c:	ldrb	r2, [sp, #71]	; 0x47
    ea40:	b	e7b8 <MyGame_Example_Any_parse_json_union+0x648>
    ea44:	mov	fp, r0
    ea48:	add	r3, sp, #71	; 0x47
    ea4c:	str	r3, [sp]
    ea50:	mov	r2, r5
    ea54:	ldr	r3, [pc, #-820]	; e728 <MyGame_Example_Any_parse_json_union+0x5b8>
    ea58:	mov	r1, fp
    ea5c:	mov	r0, r8
    ea60:	bl	36dc <flatcc_json_parser_symbolic_int8>
    ea64:	cmp	r5, r0
    ea68:	cmpne	r0, fp
    ea6c:	mov	r4, r0
    ea70:	bne	e968 <MyGame_Example_Any_parse_json_union+0x7f8>
    ea74:	b	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    ea78:	ldr	r3, [r8, #24]
    ea7c:	cmp	r3, #0
    ea80:	bne	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    ea84:	ldr	r0, [r8]
    ea88:	bl	0 <flatcc_builder_end_table>
    ea8c:	ldr	r3, [sp, #128]	; 0x80
    ea90:	cmp	r0, #0
    ea94:	str	r0, [r3]
    ea98:	movne	r0, r4
    ea9c:	beq	e7e8 <MyGame_Example_Any_parse_json_union+0x678>
    eaa0:	b	e1bc <MyGame_Example_Any_parse_json_union+0x4c>
    eaa4:	mov	r1, r0
    eaa8:	mov	r3, #8
    eaac:	mov	r2, r5
    eab0:	mov	r0, r8
    eab4:	bl	0 <flatcc_json_parser_set_error>
    eab8:	mov	r4, r0
    eabc:	cmp	r6, r4
    eac0:	bne	ea14 <MyGame_Example_Any_parse_json_union+0x8a4>
    eac4:	b	e9e8 <MyGame_Example_Any_parse_json_union+0x878>
    eac8:	mov	r1, r0
    eacc:	mov	r3, #7
    ead0:	mov	r2, r5
    ead4:	mov	r0, r8
    ead8:	bl	0 <flatcc_json_parser_set_error>
    eadc:	mov	r4, r0
    eae0:	b	ea34 <MyGame_Example_Any_parse_json_union+0x8c4>
    eae4:	mov	r1, r0
    eae8:	mov	r3, #8
    eaec:	mov	r2, r5
    eaf0:	mov	r0, r8
    eaf4:	bl	0 <flatcc_json_parser_set_error>
    eaf8:	mov	r4, r0
    eafc:	b	e864 <MyGame_Example_Any_parse_json_union+0x6f4>
    eb00:	mov	r1, r0
    eb04:	mov	r3, #7
    eb08:	mov	r2, r5
    eb0c:	mov	r0, r8
    eb10:	bl	0 <flatcc_json_parser_set_error>
    eb14:	mov	r4, r0
    eb18:	b	eabc <MyGame_Example_Any_parse_json_union+0x94c>
    eb1c:	mov	r1, r0
    eb20:	mov	r3, #8
    eb24:	mov	r2, r5
    eb28:	mov	r0, r8
    eb2c:	bl	0 <flatcc_json_parser_set_error>
    eb30:	mov	r4, r0
    eb34:	b	e960 <MyGame_Example_Any_parse_json_union+0x7f0>

0000eb38 <monster_test_global_json_parser_enum>:
    eb38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eb3c:	mov	r4, r1
    eb40:	sub	sp, sp, #28
    eb44:	mov	r1, r2
    eb48:	mov	r8, r0
    eb4c:	mov	r0, r4
    eb50:	mov	r5, r2
    eb54:	mov	sl, r3
    eb58:	bl	0 <flatcc_json_parser_symbol_part_ext>
    eb5c:	add	r3, pc, #956	; 0x3bc
    eb60:	ldrd	r2, [r3]
    eb64:	ldr	r7, [sp, #64]	; 0x40
    eb68:	ldr	fp, [sp, #68]	; 0x44
    eb6c:	cmp	r1, r3
    eb70:	cmpeq	r0, r2
    eb74:	bhi	eb98 <monster_test_global_json_parser_enum+0x60>
    eb78:	add	r3, pc, #936	; 0x3a8
    eb7c:	ldrd	r2, [r3]
    eb80:	cmp	r1, r3
    eb84:	cmpeq	r0, r2
    eb88:	beq	ecac <monster_test_global_json_parser_enum+0x174>
    eb8c:	mov	r0, r4
    eb90:	add	sp, sp, #28
    eb94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb98:	add	r3, pc, #912	; 0x390
    eb9c:	ldrd	r2, [r3]
    eba0:	cmp	r1, r3
    eba4:	cmpeq	r0, r2
    eba8:	beq	ed2c <monster_test_global_json_parser_enum+0x1f4>
    ebac:	add	r3, pc, #900	; 0x384
    ebb0:	ldrd	r2, [r3]
    ebb4:	cmp	r1, r3
    ebb8:	cmpeq	r0, r2
    ebbc:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ebc0:	mov	r1, r5
    ebc4:	add	r0, r4, #8
    ebc8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ebcc:	add	r3, pc, #876	; 0x36c
    ebd0:	ldrd	r2, [r3]
    ebd4:	cmp	r1, r3
    ebd8:	cmpeq	r0, r2
    ebdc:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ebe0:	mov	r1, r5
    ebe4:	add	r0, r4, #16
    ebe8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ebec:	add	r3, pc, #852	; 0x354
    ebf0:	ldrd	r2, [r3]
    ebf4:	cmp	r1, r3
    ebf8:	cmpeq	r0, r2
    ebfc:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ec00:	mov	r1, r5
    ec04:	add	r0, r4, #24
    ec08:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ec0c:	add	r3, pc, #828	; 0x33c
    ec10:	ldrd	r2, [r3]
    ec14:	cmp	r1, r3
    ec18:	cmpeq	r0, r2
    ec1c:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ec20:	add	r6, r4, #32
    ec24:	mov	r0, r6
    ec28:	mov	r1, r5
    ec2c:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ec30:	mov	r0, #0
    ec34:	and	r1, r1, #-16777216	; 0xff000000
    ec38:	cmp	r1, #1694498816	; 0x65000000
    ec3c:	cmpeq	r0, #0
    ec40:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ec44:	sub	r6, r5, r6
    ec48:	cmp	r6, #1
    ec4c:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    ec50:	ldrb	r3, [r4, #33]	; 0x21
    ec54:	cmp	r3, #46	; 0x2e
    ec58:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ec5c:	add	r9, r4, #34	; 0x22
    ec60:	mov	r0, r9
    ec64:	mov	r1, r5
    ec68:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ec6c:	mov	r2, #0
    ec70:	bic	r3, r1, #255	; 0xff
    ec74:	strd	r0, [sp, #8]
    ec78:	add	r1, pc, #728	; 0x2d8
    ec7c:	ldrd	r0, [r1]
    ec80:	cmp	r3, r1
    ec84:	cmpeq	r2, r0
    ec88:	beq	f2bc <monster_test_global_json_parser_enum+0x784>
    ec8c:	add	r3, pc, #716	; 0x2cc
    ec90:	ldrd	r2, [r3]
    ec94:	ldrd	r0, [sp, #8]
    ec98:	cmp	r1, r3
    ec9c:	cmpeq	r0, r2
    eca0:	beq	f24c <monster_test_global_json_parser_enum+0x714>
    eca4:	mov	r4, r9
    eca8:	b	eb8c <monster_test_global_json_parser_enum+0x54>
    ecac:	mov	r1, r5
    ecb0:	add	r0, r4, #8
    ecb4:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ecb8:	add	r3, pc, #680	; 0x2a8
    ecbc:	ldrd	r2, [r3]
    ecc0:	cmp	r1, r3
    ecc4:	cmpeq	r0, r2
    ecc8:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    eccc:	add	r6, r4, #16
    ecd0:	mov	r0, r6
    ecd4:	mov	r1, r5
    ecd8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ecdc:	mov	r0, #0
    ece0:	and	r1, r1, #-16777216	; 0xff000000
    ece4:	cmp	r1, #1912602624	; 0x72000000
    ece8:	cmpeq	r0, #0
    ecec:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ecf0:	sub	r6, r5, r6
    ecf4:	cmp	r6, #1
    ecf8:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    ecfc:	ldrb	r3, [r4, #17]
    ed00:	cmp	r3, #46	; 0x2e
    ed04:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ed08:	str	fp, [sp, #68]	; 0x44
    ed0c:	str	r7, [sp, #64]	; 0x40
    ed10:	mov	r3, sl
    ed14:	mov	r2, r5
    ed18:	add	r1, r4, #18
    ed1c:	mov	r0, r8
    ed20:	add	sp, sp, #28
    ed24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed28:	b	10b8 <Fantasy_Character_parse_json_enum>
    ed2c:	mov	r1, r5
    ed30:	add	r0, r4, #8
    ed34:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ed38:	add	r3, pc, #560	; 0x230
    ed3c:	ldrd	r2, [r3]
    ed40:	cmp	r1, r3
    ed44:	cmpeq	r0, r2
    ed48:	bhi	edf8 <monster_test_global_json_parser_enum+0x2c0>
    ed4c:	add	r3, pc, #548	; 0x224
    ed50:	ldrd	r2, [r3]
    ed54:	cmp	r1, r3
    ed58:	cmpeq	r0, r2
    ed5c:	bls	ee98 <monster_test_global_json_parser_enum+0x360>
    ed60:	add	r3, pc, #536	; 0x218
    ed64:	ldrd	r2, [r3]
    ed68:	cmp	r1, r3
    ed6c:	cmpeq	r0, r2
    ed70:	beq	f1ac <monster_test_global_json_parser_enum+0x674>
    ed74:	add	r3, pc, #524	; 0x20c
    ed78:	ldrd	r2, [r3]
    ed7c:	cmp	r1, r3
    ed80:	cmpeq	r0, r2
    ed84:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ed88:	add	r6, r4, #16
    ed8c:	mov	r0, r6
    ed90:	mov	r1, r5
    ed94:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ed98:	ldr	r3, [pc, #536]	; efb8 <monster_test_global_json_parser_enum+0x480>
    ed9c:	mov	r2, #0
    eda0:	and	r3, r3, r1
    eda4:	ldr	r1, [pc, #528]	; efbc <monster_test_global_json_parser_enum+0x484>
    eda8:	and	r2, r2, r0
    edac:	cmp	r3, r1
    edb0:	mov	r0, #0
    edb4:	cmpeq	r2, r0
    edb8:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    edbc:	sub	r6, r5, r6
    edc0:	cmp	r6, #2
    edc4:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    edc8:	ldrb	r3, [r4, #18]
    edcc:	cmp	r3, #46	; 0x2e
    edd0:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    edd4:	str	fp, [sp, #68]	; 0x44
    edd8:	str	r7, [sp, #64]	; 0x40
    eddc:	mov	r3, sl
    ede0:	mov	r2, r5
    ede4:	add	r1, r4, #19
    ede8:	mov	r0, r8
    edec:	add	sp, sp, #28
    edf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    edf4:	b	ab38 <MyGame_Example_Foo_parse_json_enum>
    edf8:	add	r3, pc, #400	; 0x190
    edfc:	ldrd	r2, [r3]
    ee00:	cmp	r1, r3
    ee04:	cmpeq	r0, r2
    ee08:	beq	efc4 <monster_test_global_json_parser_enum+0x48c>
    ee0c:	add	r3, pc, #388	; 0x184
    ee10:	ldrd	r2, [r3]
    ee14:	cmp	r1, r3
    ee18:	cmpeq	r0, r2
    ee1c:	bhi	f028 <monster_test_global_json_parser_enum+0x4f0>
    ee20:	add	r3, pc, #376	; 0x178
    ee24:	ldrd	r2, [r3]
    ee28:	cmp	r1, r3
    ee2c:	cmpeq	r0, r2
    ee30:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ee34:	add	r6, r4, #16
    ee38:	mov	r0, r6
    ee3c:	mov	r1, r5
    ee40:	bl	0 <flatcc_json_parser_symbol_part_ext>
    ee44:	add	r3, pc, #348	; 0x15c
    ee48:	ldrd	r2, [r3]
    ee4c:	bic	r0, r0, #255	; 0xff
    ee50:	cmp	r1, r3
    ee54:	cmpeq	r0, r2
    ee58:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ee5c:	sub	r6, r5, r6
    ee60:	cmp	r6, #7
    ee64:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    ee68:	ldrb	r3, [r4, #23]
    ee6c:	cmp	r3, #46	; 0x2e
    ee70:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    ee74:	str	fp, [sp, #68]	; 0x44
    ee78:	str	r7, [sp, #64]	; 0x40
    ee7c:	mov	r3, sl
    ee80:	mov	r2, r5
    ee84:	add	r1, r4, #24
    ee88:	mov	r0, r8
    ee8c:	add	sp, sp, #28
    ee90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee94:	b	1784 <MyGame_Example_int_enum_parse_json_enum>
    ee98:	add	r3, pc, #272	; 0x110
    ee9c:	ldrd	r2, [r3]
    eea0:	cmp	r1, r3
    eea4:	cmpeq	r0, r2
    eea8:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    eeac:	add	r6, r4, #16
    eeb0:	mov	r0, r6
    eeb4:	mov	r1, r5
    eeb8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    eebc:	ldr	r3, [pc, #244]	; efb8 <monster_test_global_json_parser_enum+0x480>
    eec0:	mov	r2, #0
    eec4:	and	r3, r3, r1
    eec8:	ldr	r1, [pc, #240]	; efc0 <monster_test_global_json_parser_enum+0x488>
    eecc:	and	r2, r2, r0
    eed0:	cmp	r3, r1
    eed4:	mov	r0, #0
    eed8:	cmpeq	r2, r0
    eedc:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    eee0:	sub	r6, r5, r6
    eee4:	cmp	r6, #2
    eee8:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    eeec:	ldrb	r3, [r4, #18]
    eef0:	cmp	r3, #46	; 0x2e
    eef4:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    eef8:	str	fp, [sp, #68]	; 0x44
    eefc:	str	r7, [sp, #64]	; 0x40
    ef00:	mov	r3, sl
    ef04:	mov	r2, r5
    ef08:	add	r1, r4, #19
    ef0c:	mov	r0, r8
    ef10:	add	sp, sp, #28
    ef14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef18:	b	13b4 <MyGame_Example_Any_parse_json_enum>
    ef1c:	nop			; (mov r0, r0)
    ef20:	.word	0x6d652e44
    ef24:	.word	0x4d794761
    ef28:	.word	0x6173792e
    ef2c:	.word	0x46616e74
    ef30:	.word	0x6d652e45
    ef34:	.word	0x4d794761
    ef38:	.word	0x6d652e4f
    ef3c:	.word	0x4d794761
    ef40:	.word	0x4e616d65
    ef44:	.word	0x74686572
    ef48:	.word	0x652e4672
    ef4c:	.word	0x53706163
    ef50:	.word	0x636c7564
    ef54:	.word	0x6f6d496e
    ef58:	.word	0x00000000
    ef5c:	.word	0x466f6f00
    ef60:	.word	0x75646556
    ef64:	.word	0x496e636c
    ef68:	.word	0x61637465
    ef6c:	.word	0x43686172
    ef70:	.word	0x6c652e67
    ef74:	.word	0x78616d70
    ef78:	.word	0x6c652e42
    ef7c:	.word	0x78616d70
    ef80:	.word	0x6c652e43
    ef84:	.word	0x78616d70
    ef88:	.word	0x6c652e46
    ef8c:	.word	0x78616d70
    ef90:	.word	0x6c652e68
    ef94:	.word	0x78616d70
    ef98:	.word	0x6c652e6d
    ef9c:	.word	0x78616d70
    efa0:	.word	0x6c652e69
    efa4:	.word	0x78616d70
    efa8:	.word	0x6e756d00
    efac:	.word	0x6e745f65
    efb0:	.word	0x6c652e41
    efb4:	.word	0x78616d70
    efb8:	.word	0xffff0000
    efbc:	.word	0x6f6f0000
    efc0:	.word	0x6e790000
    efc4:	add	r6, r4, #16
    efc8:	mov	r0, r6
    efcc:	mov	r1, r5
    efd0:	bl	0 <flatcc_json_parser_symbol_part_ext>
    efd4:	add	r3, pc, #940	; 0x3ac
    efd8:	ldrd	r2, [r3]
    efdc:	bic	r0, r0, #255	; 0xff
    efe0:	cmp	r1, r3
    efe4:	cmpeq	r0, r2
    efe8:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    efec:	sub	r6, r5, r6
    eff0:	cmp	r6, #7
    eff4:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    eff8:	ldrb	r3, [r4, #23]
    effc:	cmp	r3, #46	; 0x2e
    f000:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f004:	str	fp, [sp, #68]	; 0x44
    f008:	str	r7, [sp, #64]	; 0x40
    f00c:	mov	r3, sl
    f010:	mov	r2, r5
    f014:	add	r1, r4, #24
    f018:	mov	r0, r8
    f01c:	add	sp, sp, #28
    f020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f024:	b	15f0 <MyGame_Example_hex_enum_parse_json_enum>
    f028:	add	r3, pc, #864	; 0x360
    f02c:	ldrd	r2, [r3]
    f030:	cmp	r1, r3
    f034:	cmpeq	r0, r2
    f038:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f03c:	add	r9, r4, #16
    f040:	mov	r0, r9
    f044:	mov	r1, r5
    f048:	bl	0 <flatcc_json_parser_symbol_part_ext>
    f04c:	mov	r3, r1
    f050:	bic	r2, r0, #255	; 0xff
    f054:	strd	r0, [sp, #8]
    f058:	add	r1, pc, #824	; 0x338
    f05c:	ldrd	r0, [r1]
    f060:	cmp	r3, r1
    f064:	cmpeq	r2, r0
    f068:	beq	f210 <monster_test_global_json_parser_enum+0x6d8>
    f06c:	add	r3, pc, #812	; 0x32c
    f070:	ldrd	r2, [r3]
    f074:	ldrd	r0, [sp, #8]
    f078:	cmp	r1, r3
    f07c:	cmpeq	r0, r2
    f080:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f084:	add	r6, r4, #24
    f088:	mov	r0, r6
    f08c:	mov	r1, r5
    f090:	bl	0 <flatcc_json_parser_symbol_part_ext>
    f094:	add	r3, pc, #780	; 0x30c
    f098:	ldrd	r2, [r3]
    f09c:	mov	r0, #0
    f0a0:	bic	r1, r1, #255	; 0xff
    f0a4:	cmp	r1, r3
    f0a8:	cmpeq	r0, r2
    f0ac:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f0b0:	sub	r6, r5, r6
    f0b4:	cmp	r6, #3
    f0b8:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    f0bc:	ldrb	r3, [r4, #27]
    f0c0:	cmp	r3, #46	; 0x2e
    f0c4:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f0c8:	add	r6, r4, #28
    f0cc:	sub	r3, r5, r6
    f0d0:	cmp	r3, #8
    f0d4:	bls	f2f8 <monster_test_global_json_parser_enum+0x7c0>
    f0d8:	ldrb	r2, [r4, #35]	; 0x23
    f0dc:	mov	r3, #0
    f0e0:	strd	r2, [sp, #8]
    f0e4:	ldrb	r0, [r4, #34]	; 0x22
    f0e8:	lsr	r3, r0, #24
    f0ec:	lsl	r2, r0, #8
    f0f0:	ldrd	r0, [sp, #8]
    f0f4:	orr	r0, r0, r2
    f0f8:	orr	r1, r1, r3
    f0fc:	strd	r0, [sp, #8]
    f100:	ldrb	r0, [r4, #33]	; 0x21
    f104:	lsr	r3, r0, #16
    f108:	lsl	r2, r0, #16
    f10c:	ldrd	r0, [sp, #8]
    f110:	orr	r0, r0, r2
    f114:	orr	r1, r1, r3
    f118:	strd	r0, [sp, #8]
    f11c:	ldrb	r0, [r4, #32]
    f120:	lsr	r3, r0, #8
    f124:	ldrd	r0, [sp, #8]
    f128:	orr	r1, r1, r3
    f12c:	mov	r3, r1
    f130:	ldrb	r1, [r4, #31]
    f134:	orr	r1, r1, r3
    f138:	ldrb	r2, [r4, #30]
    f13c:	mov	r3, #0
    f140:	strd	r2, [sp, #8]
    f144:	ldr	ip, [sp, #8]
    f148:	lsl	r3, ip, #8
    f14c:	orr	r3, r3, r1
    f150:	ldrb	r0, [r4, #29]
    f154:	mov	r1, #0
    f158:	strd	r0, [sp, #8]
    f15c:	ldr	ip, [sp, #8]
    f160:	lsl	r1, ip, #16
    f164:	orr	r3, r3, r1
    f168:	ldrb	r0, [r4, #28]
    f16c:	mov	r1, #0
    f170:	mov	r2, #0
    f174:	strd	r0, [sp, #16]
    f178:	ldr	r1, [sp, #16]
    f17c:	lsl	r1, r1, #24
    f180:	str	r1, [sp, #12]
    f184:	mov	r1, #0
    f188:	str	r1, [sp, #8]
    f18c:	ldrd	r0, [sp, #8]
    f190:	orr	r1, r1, r3
    f194:	and	r3, r1, #-16777216	; 0xff000000
    f198:	cmp	r3, #2013265920	; 0x78000000
    f19c:	cmpeq	r2, #0
    f1a0:	beq	f328 <monster_test_global_json_parser_enum+0x7f0>
    f1a4:	mov	r4, r6
    f1a8:	b	eb8c <monster_test_global_json_parser_enum+0x54>
    f1ac:	add	r6, r4, #16
    f1b0:	mov	r0, r6
    f1b4:	mov	r1, r5
    f1b8:	bl	0 <flatcc_json_parser_symbol_part_ext>
    f1bc:	add	r3, pc, #492	; 0x1ec
    f1c0:	ldrd	r2, [r3]
    f1c4:	mov	r0, #0
    f1c8:	cmp	r1, r3
    f1cc:	cmpeq	r0, r2
    f1d0:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f1d4:	sub	r6, r5, r6
    f1d8:	cmp	r6, #4
    f1dc:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    f1e0:	ldrb	r3, [r4, #20]
    f1e4:	cmp	r3, #46	; 0x2e
    f1e8:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f1ec:	str	fp, [sp, #68]	; 0x44
    f1f0:	str	r7, [sp, #64]	; 0x40
    f1f4:	mov	r3, sl
    f1f8:	mov	r2, r5
    f1fc:	add	r1, r4, #21
    f200:	mov	r0, r8
    f204:	add	sp, sp, #28
    f208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f20c:	b	1ae0 <MyGame_Example_Color_parse_json_enum>
    f210:	sub	r9, r5, r9
    f214:	cmp	r9, #7
    f218:	ble	eb8c <monster_test_global_json_parser_enum+0x54>
    f21c:	ldrb	r3, [r4, #23]
    f220:	cmp	r3, #46	; 0x2e
    f224:	bne	eb8c <monster_test_global_json_parser_enum+0x54>
    f228:	str	fp, [sp, #68]	; 0x44
    f22c:	str	r7, [sp, #64]	; 0x40
    f230:	mov	r3, sl
    f234:	mov	r2, r5
    f238:	add	r1, r4, #24
    f23c:	mov	r0, r8
    f240:	add	sp, sp, #28
    f244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f248:	b	197c <MyGame_Example_neg_enum_parse_json_enum>
    f24c:	add	r6, r4, #42	; 0x2a
    f250:	mov	r0, r6
    f254:	mov	r1, r5
    f258:	bl	0 <flatcc_json_parser_symbol_part_ext>
    f25c:	ldr	r3, [pc, #340]	; f3b8 <monster_test_global_json_parser_enum+0x880>
    f260:	mov	r2, #0
    f264:	and	r3, r3, r1
    f268:	ldr	r1, [pc, #332]	; f3bc <monster_test_global_json_parser_enum+0x884>
    f26c:	and	r2, r2, r0
    f270:	cmp	r3, r1
    f274:	mov	r0, #0
    f278:	cmpeq	r2, r0
    f27c:	bne	eca4 <monster_test_global_json_parser_enum+0x16c>
    f280:	str	fp, [sp]
    f284:	mov	r2, r5
    f288:	mov	r0, r8
    f28c:	mov	r3, #2
    f290:	mov	r1, r6
    f294:	bl	0 <flatcc_json_parser_match_constant>
    f298:	cmp	r6, r0
    f29c:	mov	r4, r0
    f2a0:	beq	eca4 <monster_test_global_json_parser_enum+0x16c>
    f2a4:	mov	r0, #0
    f2a8:	mov	r1, #0
    f2ac:	mov	r3, #0
    f2b0:	strd	r0, [r7]
    f2b4:	str	r3, [sl]
    f2b8:	b	eb8c <monster_test_global_json_parser_enum+0x54>
    f2bc:	str	fp, [sp]
    f2c0:	mov	r2, r5
    f2c4:	mov	r0, r8
    f2c8:	mov	r3, #3
    f2cc:	mov	r1, r9
    f2d0:	bl	0 <flatcc_json_parser_match_constant>
    f2d4:	cmp	r9, r0
    f2d8:	mov	r4, r0
    f2dc:	beq	eb8c <monster_test_global_json_parser_enum+0x54>
    f2e0:	mov	r0, #17
    f2e4:	mov	r1, #0
    f2e8:	mov	r3, #0
    f2ec:	strd	r0, [r7]
    f2f0:	str	r3, [sl]
    f2f4:	b	eb8c <monster_test_global_json_parser_enum+0x54>
    f2f8:	sub	r3, r3, #1
    f2fc:	cmp	r3, #7
    f300:	ldrls	pc, [pc, r3, lsl #2]
    f304:	b	f1a4 <monster_test_global_json_parser_enum+0x66c>
    f308:	.word	0x0000f3e8
    f30c:	.word	0x0000f3e0
    f310:	.word	0x0000f3d8
    f314:	.word	0x0000f3d0
    f318:	.word	0x0000f3c0
    f31c:	.word	0x0000f374
    f320:	.word	0x0000f364
    f324:	.word	0x0000f0d8
    f328:	str	fp, [sp]
    f32c:	mov	r2, r5
    f330:	mov	r0, r8
    f334:	mov	r3, #1
    f338:	mov	r1, r6
    f33c:	bl	0 <flatcc_json_parser_match_constant>
    f340:	cmp	r6, r0
    f344:	mov	r4, r0
    f348:	beq	eb8c <monster_test_global_json_parser_enum+0x54>
    f34c:	mov	r3, #0
    f350:	mov	r2, #0
    f354:	strd	r2, [r7]
    f358:	ldr	r3, [sp, #8]
    f35c:	str	r3, [sl]
    f360:	b	eb8c <monster_test_global_json_parser_enum+0x54>
    f364:	mov	r2, #0
    f368:	mov	r3, #0
    f36c:	strd	r2, [sp, #8]
    f370:	b	f0e4 <monster_test_global_json_parser_enum+0x5ac>
    f374:	mov	r2, #0
    f378:	mov	r3, #0
    f37c:	strd	r2, [sp, #8]
    f380:	b	f100 <monster_test_global_json_parser_enum+0x5c8>
    f384:	nop			; (mov r0, r0)
    f388:	.word	0x6e756d00
    f38c:	.word	0x65785f65
    f390:	.word	0x6c652e6e
    f394:	.word	0x78616d70
    f398:	.word	0x6e756d00
    f39c:	.word	0x65675f65
    f3a0:	.word	0x70747965
    f3a4:	.word	0x6f74656d
    f3a8:	.word	0x00000000
    f3ac:	.word	0x6e756d00
    f3b0:	.word	0x00000000
    f3b4:	.word	0x6f6c6f72
    f3b8:	.word	0xffff0000
    f3bc:	.word	0x616c0000
    f3c0:	mov	r2, #0
    f3c4:	mov	r3, #0
    f3c8:	strd	r2, [sp, #8]
    f3cc:	b	f11c <monster_test_global_json_parser_enum+0x5e4>
    f3d0:	mov	r3, #0
    f3d4:	b	f130 <monster_test_global_json_parser_enum+0x5f8>
    f3d8:	mov	r1, #0
    f3dc:	b	f138 <monster_test_global_json_parser_enum+0x600>
    f3e0:	mov	r3, #0
    f3e4:	b	f150 <monster_test_global_json_parser_enum+0x618>
    f3e8:	mov	r3, #0
    f3ec:	b	f168 <monster_test_global_json_parser_enum+0x630>

0000f3f0 <test_json>:
    f3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f3f4:	sub	sp, sp, #380	; 0x17c
    f3f8:	mov	r5, r0
    f3fc:	ldr	r4, [sp, #420]	; 0x1a4
    f400:	add	r0, sp, #144	; 0x90
    f404:	mov	r8, r2
    f408:	mov	r7, r3
    f40c:	mov	r6, r1
    f410:	ldr	r9, [sp, #416]	; 0x1a0
    f414:	bl	0 <flatcc_builder_init>
    f418:	mov	r1, #0
    f41c:	add	r0, sp, #96	; 0x60
    f420:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
    f424:	lsr	r3, r4, #3
    f428:	tst	r4, #16
    f42c:	and	r3, r3, #1
    f430:	lsr	r1, r4, #1
    f434:	and	r1, r1, #1
    f438:	lsr	r2, r4, #2
    f43c:	strb	r3, [sp, #125]	; 0x7d
    f440:	movne	r3, #2
    f444:	and	r2, r2, #1
    f448:	strb	r1, [sp, #123]	; 0x7b
    f44c:	strbne	r3, [sp, #121]	; 0x79
    f450:	and	r1, r4, #1
    f454:	tst	r4, #32
    f458:	strb	r2, [sp, #124]	; 0x7c
    f45c:	strb	r1, [sp, #122]	; 0x7a
    f460:	beq	f47c <test_json+0x8c>
    f464:	mov	r3, #2
    f468:	mov	r2, #1
    f46c:	strb	r3, [sp, #121]	; 0x79
    f470:	mov	r3, #0
    f474:	strb	r2, [sp, #122]	; 0x7a
    f478:	strb	r3, [sp, #123]	; 0x7b
    f47c:	mov	r0, r6
    f480:	bl	0 <strlen>
    f484:	ldr	r2, [r5, #4]
    f488:	ldr	r3, [r5]
    f48c:	add	r1, sp, #52	; 0x34
    f490:	str	r2, [sp, #8]
    f494:	str	r3, [sp, #4]
    f498:	str	r9, [sp]
    f49c:	mov	r2, r6
    f4a0:	mov	r3, r0
    f4a4:	add	r0, sp, #144	; 0x90
    f4a8:	bl	0 <flatcc_json_parser_table_as_root>
    f4ac:	cmp	r0, r7
    f4b0:	beq	f5bc <test_json+0x1cc>
    f4b4:	cmp	r7, #0
    f4b8:	ldr	r5, [pc, #840]	; f808 <test_json+0x418>
    f4bc:	beq	f5d4 <test_json+0x1e4>
    f4c0:	cmp	r0, #0
    f4c4:	bne	f570 <test_json+0x180>
    f4c8:	mov	r0, r7
    f4cc:	ldr	r4, [r5]
    f4d0:	bl	0 <flatcc_json_parser_error_string>
    f4d4:	ldr	r2, [sp, #424]	; 0x1a8
    f4d8:	ldr	r1, [pc, #812]	; f80c <test_json+0x41c>
    f4dc:	mov	r3, r0
    f4e0:	mov	r0, r4
    f4e4:	bl	0 <fprintf>
    f4e8:	mov	r2, r6
    f4ec:	ldr	r0, [r5]
    f4f0:	ldr	r1, [pc, #792]	; f810 <test_json+0x420>
    f4f4:	bl	0 <fprintf>
    f4f8:	ldr	r3, [sp, #72]	; 0x48
    f4fc:	cmp	r3, #1
    f500:	movgt	r4, #0
    f504:	movgt	r6, #32
    f508:	ble	f52c <test_json+0x13c>
    f50c:	ldr	r1, [r5]
    f510:	mov	r0, r6
    f514:	bl	0 <fputc>
    f518:	ldr	r3, [sp, #72]	; 0x48
    f51c:	add	r4, r4, #1
    f520:	sub	r3, r3, #1
    f524:	cmp	r3, r4
    f528:	bgt	f50c <test_json+0x11c>
    f52c:	ldr	r3, [r5]
    f530:	mov	r2, #2
    f534:	mov	r1, #1
    f538:	ldr	r0, [pc, #724]	; f814 <test_json+0x424>
    f53c:	mvn	r4, #0
    f540:	bl	0 <fwrite>
    f544:	mov	r3, #0
    f548:	str	r3, [sp, #20]
    f54c:	ldr	r0, [sp, #20]
    f550:	bl	0 <flatcc_builder_aligned_free>
    f554:	add	r0, sp, #144	; 0x90
    f558:	bl	0 <flatcc_builder_clear>
    f55c:	add	r0, sp, #96	; 0x60
    f560:	bl	0 <flatcc_json_printer_clear>
    f564:	mov	r0, r4
    f568:	add	sp, sp, #380	; 0x17c
    f56c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f570:	ldr	r4, [r5]
    f574:	bl	0 <flatcc_json_parser_error_string>
    f578:	ldr	r2, [sp, #424]	; 0x1a8
    f57c:	ldr	r1, [pc, #660]	; f818 <test_json+0x428>
    f580:	mov	r3, r0
    f584:	mov	r0, r4
    f588:	bl	0 <fprintf>
    f58c:	mov	r0, r7
    f590:	ldr	r4, [r5]
    f594:	bl	0 <flatcc_json_parser_error_string>
    f598:	ldr	r1, [pc, #636]	; f81c <test_json+0x42c>
    f59c:	mov	r2, r0
    f5a0:	mov	r0, r4
    f5a4:	bl	0 <fprintf>
    f5a8:	mov	r2, r6
    f5ac:	ldr	r0, [r5]
    f5b0:	ldr	r1, [pc, #600]	; f810 <test_json+0x420>
    f5b4:	bl	0 <fprintf>
    f5b8:	b	f4f8 <test_json+0x108>
    f5bc:	cmp	r7, #0
    f5c0:	beq	f5f0 <test_json+0x200>
    f5c4:	mov	r3, #0
    f5c8:	str	r3, [sp, #20]
    f5cc:	mov	r4, r3
    f5d0:	b	f54c <test_json+0x15c>
    f5d4:	ldr	r4, [r5]
    f5d8:	bl	0 <flatcc_json_parser_error_string>
    f5dc:	ldr	r2, [sp, #424]	; 0x1a8
    f5e0:	ldr	r1, [pc, #568]	; f820 <test_json+0x430>
    f5e4:	mov	r3, r0
    f5e8:	mov	r0, r4
    f5ec:	b	f4e4 <test_json+0xf4>
    f5f0:	add	r1, sp, #24
    f5f4:	add	r0, sp, #144	; 0x90
    f5f8:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    f5fc:	ldr	r3, [r5, #12]
    f600:	ldr	r2, [r5]
    f604:	ldr	r1, [sp, #24]
    f608:	str	r0, [sp, #20]
    f60c:	bl	0 <flatcc_verify_table_as_root>
    f610:	cmp	r0, #0
    f614:	beq	f778 <test_json+0x388>
    f618:	ldr	r5, [pc, #488]	; f808 <test_json+0x418>
    f61c:	ldr	r4, [r5]
    f620:	bl	0 <flatcc_verify_error_string>
    f624:	ldr	r3, [sp, #424]	; 0x1a8
    f628:	ldr	r2, [pc, #500]	; f824 <test_json+0x434>
    f62c:	ldr	r1, [pc, #500]	; f828 <test_json+0x438>
    f630:	str	r0, [sp]
    f634:	mov	r0, r4
    f638:	bl	0 <fprintf>
    f63c:	ldr	r3, [sp, #20]
    f640:	cmp	r3, #0
    f644:	beq	f728 <test_json+0x338>
    f648:	ldr	r5, [r5]
    f64c:	ldr	r9, [sp, #24]
    f650:	mov	r0, r5
    f654:	ldr	r2, [pc, #464]	; f82c <test_json+0x43c>
    f658:	ldr	r1, [pc, #464]	; f830 <test_json+0x440>
    f65c:	bl	0 <fprintf>
    f660:	cmp	r9, #0
    f664:	beq	f714 <test_json+0x324>
    f668:	ldr	r3, [sp, #20]
    f66c:	mov	r4, #0
    f670:	ldr	fp, [pc, #444]	; f834 <test_json+0x444>
    f674:	ldr	sl, [pc, #444]	; f838 <test_json+0x448>
    f678:	sub	r6, r3, #1
    f67c:	add	r8, sp, #32
    f680:	b	f6e8 <test_json+0x2f8>
    f684:	cmp	r4, #0
    f688:	beq	f690 <test_json+0x2a0>
    f68c:	bl	0 <fprintf>
    f690:	mov	r2, r4
    f694:	ldr	r1, [pc, #416]	; f83c <test_json+0x44c>
    f698:	mov	r0, r5
    f69c:	bl	0 <fprintf>
    f6a0:	ldrb	r2, [r6, #1]
    f6a4:	mov	r1, sl
    f6a8:	mov	r0, r5
    f6ac:	bl	0 <fprintf>
    f6b0:	ldrb	r2, [r6, #1]!
    f6b4:	add	r3, sp, #376	; 0x178
    f6b8:	add	r3, r3, r7
    f6bc:	sub	r1, r2, #32
    f6c0:	cmp	r1, #94	; 0x5e
    f6c4:	addls	r3, sp, #376	; 0x178
    f6c8:	addls	r3, r3, r7
    f6cc:	movhi	r2, #46	; 0x2e
    f6d0:	add	r4, r4, #1
    f6d4:	strb	r2, [r3, #-344]	; 0xfffffea8
    f6d8:	cmp	r9, r4
    f6dc:	mov	r2, #0
    f6e0:	strb	r2, [r3, #-343]	; 0xfffffea9
    f6e4:	beq	f730 <test_json+0x340>
    f6e8:	ands	r7, r4, #15
    f6ec:	mov	r2, r8
    f6f0:	mov	r1, fp
    f6f4:	mov	r0, r5
    f6f8:	beq	f684 <test_json+0x294>
    f6fc:	tst	r4, #7
    f700:	bne	f6a0 <test_json+0x2b0>
    f704:	mov	r1, r5
    f708:	mov	r0, #32
    f70c:	bl	0 <fputc>
    f710:	b	f6a0 <test_json+0x2b0>
    f714:	add	r8, sp, #32
    f718:	mov	r2, r8
    f71c:	mov	r0, r5
    f720:	ldr	r1, [pc, #268]	; f834 <test_json+0x444>
    f724:	bl	0 <fprintf>
    f728:	mvn	r4, #0
    f72c:	b	f54c <test_json+0x15c>
    f730:	tst	r4, #15
    f734:	beq	f718 <test_json+0x328>
    f738:	ldr	r9, [pc, #256]	; f840 <test_json+0x450>
    f73c:	mov	r7, #3
    f740:	mov	r6, #1
    f744:	add	r4, r4, #1
    f748:	mov	r3, r5
    f74c:	mov	r2, r7
    f750:	mov	r1, r6
    f754:	mov	r0, r9
    f758:	bl	0 <fwrite>
    f75c:	tst	r4, #15
    f760:	bne	f744 <test_json+0x354>
    f764:	mov	r2, r8
    f768:	mov	r0, r5
    f76c:	ldr	r1, [pc, #192]	; f834 <test_json+0x444>
    f770:	bl	0 <fprintf>
    f774:	b	f728 <test_json+0x338>
    f778:	ldr	r1, [r5, #8]
    f77c:	ldr	r3, [r5]
    f780:	ldr	r2, [sp, #24]
    f784:	str	r1, [sp]
    f788:	add	r0, sp, #96	; 0x60
    f78c:	ldr	r1, [sp, #20]
    f790:	bl	0 <flatcc_json_printer_table_as_root>
    f794:	add	r1, sp, #28
    f798:	add	r0, sp, #96	; 0x60
    f79c:	bl	0 <flatcc_json_printer_get_buffer>
    f7a0:	subs	r6, r0, #0
    f7a4:	beq	f7bc <test_json+0x3cc>
    f7a8:	mov	r1, r6
    f7ac:	mov	r0, r8
    f7b0:	bl	0 <strcmp>
    f7b4:	subs	r4, r0, #0
    f7b8:	beq	f54c <test_json+0x15c>
    f7bc:	ldr	r5, [pc, #68]	; f808 <test_json+0x418>
    f7c0:	ldr	r2, [sp, #424]	; 0x1a8
    f7c4:	ldr	r1, [pc, #120]	; f844 <test_json+0x454>
    f7c8:	ldr	r0, [r5]
    f7cc:	bl	0 <fprintf>
    f7d0:	mov	r2, r6
    f7d4:	ldr	r0, [r5]
    f7d8:	ldr	r1, [pc, #48]	; f810 <test_json+0x420>
    f7dc:	bl	0 <fprintf>
    f7e0:	ldr	r3, [r5]
    f7e4:	mov	r2, #10
    f7e8:	mov	r1, #1
    f7ec:	ldr	r0, [pc, #84]	; f848 <test_json+0x458>
    f7f0:	bl	0 <fwrite>
    f7f4:	mov	r2, r8
    f7f8:	ldr	r0, [r5]
    f7fc:	ldr	r1, [pc, #12]	; f810 <test_json+0x420>
    f800:	bl	0 <fprintf>
    f804:	b	f63c <test_json+0x24c>
    f808:	.word	0x00000000
    f80c:	.word	0x000004a4
    f810:	.word	0x000004a0
    f814:	.word	0x00000508
    f818:	.word	0x00000458
    f81c:	.word	0x00000480
    f820:	.word	0x000004e4
    f824:	.word	0x0000050c
    f828:	.word	0x00000560
    f82c:	.word	0x000005cc
    f830:	.word	0x000005dc
    f834:	.word	0x000005e4
    f838:	.word	0x000005f4
    f83c:	.word	0x000005ec
    f840:	.word	0x000005fc
    f844:	.word	0x00000588
    f848:	.word	0x000005c0

0000f84c <edge_case_tests>:
    f84c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f850:	sub	sp, sp, #20
    f854:	ldr	r6, [pc, #720]	; fb2c <edge_case_tests+0x2e0>
    f858:	mov	r5, #0
    f85c:	mov	r3, #155	; 0x9b
    f860:	str	r3, [sp, #8]
    f864:	mov	r0, r6
    f868:	mov	r3, r5
    f86c:	str	r5, [sp, #4]
    f870:	str	r5, [sp]
    f874:	ldr	r2, [pc, #692]	; fb30 <edge_case_tests+0x2e4>
    f878:	ldr	r1, [pc, #692]	; fb34 <edge_case_tests+0x2e8>
    f87c:	bl	f3f0 <test_json>
    f880:	ldr	r9, [pc, #688]	; fb38 <edge_case_tests+0x2ec>
    f884:	ldr	sl, [pc, #688]	; fb3c <edge_case_tests+0x2f0>
    f888:	mov	r8, #2
    f88c:	mov	ip, #168	; 0xa8
    f890:	str	ip, [sp, #8]
    f894:	mov	r3, r5
    f898:	mov	r2, r9
    f89c:	mov	r1, sl
    f8a0:	str	r5, [sp, #4]
    f8a4:	str	r8, [sp]
    f8a8:	ldr	fp, [pc, #656]	; fb40 <edge_case_tests+0x2f4>
    f8ac:	mov	r7, #1
    f8b0:	mov	r4, r0
    f8b4:	mov	r0, r6
    f8b8:	bl	f3f0 <test_json>
    f8bc:	mov	r1, #172	; 0xac
    f8c0:	mov	r3, r5
    f8c4:	str	r1, [sp, #8]
    f8c8:	stm	sp, {r5, r8}
    f8cc:	ldr	r2, [pc, #624]	; fb44 <edge_case_tests+0x2f8>
    f8d0:	ldr	r1, [pc, #624]	; fb48 <edge_case_tests+0x2fc>
    f8d4:	orr	r4, r4, r0
    f8d8:	mov	r0, r6
    f8dc:	bl	f3f0 <test_json>
    f8e0:	mov	ip, #176	; 0xb0
    f8e4:	str	ip, [sp, #8]
    f8e8:	mov	ip, #4
    f8ec:	str	ip, [sp, #4]
    f8f0:	mov	r1, sl
    f8f4:	mov	r3, r5
    f8f8:	str	r8, [sp]
    f8fc:	ldr	r2, [pc, #584]	; fb4c <edge_case_tests+0x300>
    f900:	ldr	sl, [pc, #584]	; fb50 <edge_case_tests+0x304>
    f904:	orr	r4, r4, r0
    f908:	mov	r0, r6
    f90c:	bl	f3f0 <test_json>
    f910:	mov	r2, #180	; 0xb4
    f914:	str	r2, [sp, #8]
    f918:	mov	r2, #8
    f91c:	mov	r3, r5
    f920:	str	r2, [sp, #4]
    f924:	str	r5, [sp]
    f928:	ldr	r2, [pc, #548]	; fb54 <edge_case_tests+0x308>
    f92c:	ldr	r1, [pc, #548]	; fb58 <edge_case_tests+0x30c>
    f930:	orr	r4, r4, r0
    f934:	mov	r0, r6
    f938:	bl	f3f0 <test_json>
    f93c:	mov	r1, #195	; 0xc3
    f940:	mov	r3, r5
    f944:	mov	r2, r9
    f948:	str	r1, [sp, #8]
    f94c:	str	r5, [sp, #4]
    f950:	str	r8, [sp]
    f954:	ldr	r1, [pc, #512]	; fb5c <edge_case_tests+0x310>
    f958:	orr	r4, r4, r0
    f95c:	mov	r0, r6
    f960:	bl	f3f0 <test_json>
    f964:	mov	ip, #199	; 0xc7
    f968:	mov	r3, r5
    f96c:	mov	r2, fp
    f970:	str	ip, [sp, #8]
    f974:	str	r5, [sp, #4]
    f978:	ldr	r1, [pc, #480]	; fb60 <edge_case_tests+0x314>
    f97c:	str	r7, [sp]
    f980:	orr	r4, r4, r0
    f984:	mov	r0, r6
    f988:	bl	f3f0 <test_json>
    f98c:	mov	ip, #203	; 0xcb
    f990:	str	ip, [sp, #8]
    f994:	mov	r3, r5
    f998:	str	r7, [sp, #4]
    f99c:	str	r7, [sp]
    f9a0:	ldr	r1, [pc, #440]	; fb60 <edge_case_tests+0x314>
    f9a4:	ldr	r2, [pc, #440]	; fb64 <edge_case_tests+0x318>
    f9a8:	orr	r4, r4, r0
    f9ac:	mov	r0, r6
    f9b0:	bl	f3f0 <test_json>
    f9b4:	mov	r1, #209	; 0xd1
    f9b8:	mov	r3, r5
    f9bc:	mov	r2, fp
    f9c0:	str	r1, [sp, #8]
    f9c4:	str	r5, [sp, #4]
    f9c8:	str	r7, [sp]
    f9cc:	ldr	r1, [pc, #404]	; fb68 <edge_case_tests+0x31c>
    f9d0:	orr	r4, r4, r0
    f9d4:	mov	r0, r6
    f9d8:	bl	f3f0 <test_json>
    f9dc:	mov	ip, #217	; 0xd9
    f9e0:	str	ip, [sp, #8]
    f9e4:	mov	r3, r5
    f9e8:	mov	r2, r9
    f9ec:	str	r5, [sp, #4]
    f9f0:	str	r8, [sp]
    f9f4:	ldr	r1, [pc, #368]	; fb6c <edge_case_tests+0x320>
    f9f8:	orr	r4, r4, r0
    f9fc:	mov	r0, r6
    fa00:	bl	f3f0 <test_json>
    fa04:	mov	r1, #221	; 0xdd
    fa08:	mov	r3, r5
    fa0c:	str	r1, [sp, #8]
    fa10:	stm	sp, {r5, r8}
    fa14:	ldr	r2, [pc, #296]	; fb44 <edge_case_tests+0x2f8>
    fa18:	ldr	r1, [pc, #336]	; fb70 <edge_case_tests+0x324>
    fa1c:	orr	r4, r4, r0
    fa20:	mov	r0, r6
    fa24:	bl	f3f0 <test_json>
    fa28:	mov	ip, #225	; 0xe1
    fa2c:	mov	r3, #4
    fa30:	str	ip, [sp, #8]
    fa34:	str	r3, [sp, #4]
    fa38:	str	r8, [sp]
    fa3c:	mov	r3, r5
    fa40:	ldr	r2, [pc, #260]	; fb4c <edge_case_tests+0x300>
    fa44:	ldr	r1, [pc, #288]	; fb6c <edge_case_tests+0x320>
    fa48:	orr	r4, r4, r0
    fa4c:	mov	r0, r6
    fa50:	bl	f3f0 <test_json>
    fa54:	mov	r2, #229	; 0xe5
    fa58:	mov	r3, #8
    fa5c:	str	r3, [sp, #4]
    fa60:	str	r2, [sp, #8]
    fa64:	mov	r3, r5
    fa68:	str	r5, [sp]
    fa6c:	ldr	r2, [pc, #256]	; fb74 <edge_case_tests+0x328>
    fa70:	ldr	r1, [pc, #256]	; fb78 <edge_case_tests+0x32c>
    fa74:	orr	r4, r4, r0
    fa78:	mov	r0, r6
    fa7c:	bl	f3f0 <test_json>
    fa80:	mov	r1, #233	; 0xe9
    fa84:	mov	r2, r9
    fa88:	mov	r3, r5
    fa8c:	str	r1, [sp, #8]
    fa90:	str	r5, [sp, #4]
    fa94:	str	r8, [sp]
    fa98:	ldr	r1, [pc, #220]	; fb7c <edge_case_tests+0x330>
    fa9c:	orr	r4, r4, r0
    faa0:	mov	r0, r6
    faa4:	bl	f3f0 <test_json>
    faa8:	mov	ip, #237	; 0xed
    faac:	mov	r3, r5
    fab0:	mov	r2, fp
    fab4:	mov	r1, sl
    fab8:	str	ip, [sp, #8]
    fabc:	str	r5, [sp, #4]
    fac0:	str	r7, [sp]
    fac4:	orr	r4, r4, r0
    fac8:	mov	r0, r6
    facc:	bl	f3f0 <test_json>
    fad0:	mov	ip, #241	; 0xf1
    fad4:	mov	r1, sl
    fad8:	mov	r3, r5
    fadc:	str	ip, [sp, #8]
    fae0:	str	r7, [sp, #4]
    fae4:	str	r7, [sp]
    fae8:	ldr	r2, [pc, #116]	; fb64 <edge_case_tests+0x318>
    faec:	orr	r4, r4, r0
    faf0:	mov	r0, r6
    faf4:	bl	f3f0 <test_json>
    faf8:	mov	r1, #247	; 0xf7
    fafc:	str	r1, [sp, #8]
    fb00:	str	r5, [sp, #4]
    fb04:	str	r7, [sp]
    fb08:	mov	r3, r5
    fb0c:	mov	r2, fp
    fb10:	ldr	r1, [pc, #104]	; fb80 <edge_case_tests+0x334>
    fb14:	orr	r4, r4, r0
    fb18:	mov	r0, r6
    fb1c:	bl	f3f0 <test_json>
    fb20:	orr	r0, r4, r0
    fb24:	add	sp, sp, #20
    fb28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fb2c:	.word	0x00000000
    fb30:	.word	0x00000600
    fb34:	.word	0x00000620
    fb38:	.word	0x00000654
    fb3c:	.word	0x00000678
    fb40:	.word	0x00000858
    fb44:	.word	0x0000069c
    fb48:	.word	0x000006bc
    fb4c:	.word	0x000006e4
    fb50:	.word	0x00000ac4
    fb54:	.word	0x000006f8
    fb58:	.word	0x0000080c
    fb5c:	.word	0x00000830
    fb60:	.word	0x00000874
    fb64:	.word	0x000008a8
    fb68:	.word	0x000008c0
    fb6c:	.word	0x00000934
    fb70:	.word	0x00000954
    fb74:	.word	0x00000978
    fb78:	.word	0x00000a90
    fb7c:	.word	0x00000aa4
    fb80:	.word	0x00000af0

0000fb84 <error_case_tests>:
    fb84:	push	{r4, r5, r6, lr}
    fb88:	sub	sp, sp, #16
    fb8c:	ldr	r6, [pc, #728]	; fe6c <error_case_tests+0x2e8>
    fb90:	ldr	r3, [pc, #728]	; fe70 <error_case_tests+0x2ec>
    fb94:	mov	r4, #0
    fb98:	str	r3, [sp, #8]
    fb9c:	mov	r2, r4
    fba0:	mov	r0, r6
    fba4:	str	r4, [sp, #4]
    fba8:	str	r4, [sp]
    fbac:	mov	r3, #13
    fbb0:	ldr	r1, [pc, #700]	; fe74 <error_case_tests+0x2f0>
    fbb4:	bl	f3f0 <test_json>
    fbb8:	ldr	r3, [pc, #696]	; fe78 <error_case_tests+0x2f4>
    fbbc:	mov	r2, r4
    fbc0:	str	r3, [sp, #8]
    fbc4:	str	r4, [sp, #4]
    fbc8:	str	r4, [sp]
    fbcc:	mov	r3, #13
    fbd0:	ldr	r1, [pc, #676]	; fe7c <error_case_tests+0x2f8>
    fbd4:	mov	r5, r0
    fbd8:	mov	r0, r6
    fbdc:	bl	f3f0 <test_json>
    fbe0:	ldr	r3, [pc, #664]	; fe80 <error_case_tests+0x2fc>
    fbe4:	mov	r2, r4
    fbe8:	str	r3, [sp, #8]
    fbec:	str	r4, [sp, #4]
    fbf0:	str	r4, [sp]
    fbf4:	mov	r3, #13
    fbf8:	ldr	r1, [pc, #644]	; fe84 <error_case_tests+0x300>
    fbfc:	orr	r5, r5, r0
    fc00:	mov	r0, r6
    fc04:	bl	f3f0 <test_json>
    fc08:	ldr	r3, [pc, #632]	; fe88 <error_case_tests+0x304>
    fc0c:	mov	r2, r4
    fc10:	str	r3, [sp, #8]
    fc14:	str	r4, [sp, #4]
    fc18:	str	r4, [sp]
    fc1c:	mov	r3, #13
    fc20:	ldr	r1, [pc, #612]	; fe8c <error_case_tests+0x308>
    fc24:	orr	r5, r5, r0
    fc28:	mov	r0, r6
    fc2c:	bl	f3f0 <test_json>
    fc30:	ldr	r3, [pc, #600]	; fe90 <error_case_tests+0x30c>
    fc34:	mov	r2, r4
    fc38:	str	r3, [sp, #8]
    fc3c:	str	r4, [sp, #4]
    fc40:	str	r4, [sp]
    fc44:	mov	r3, #13
    fc48:	ldr	r1, [pc, #580]	; fe94 <error_case_tests+0x310>
    fc4c:	orr	r5, r5, r0
    fc50:	mov	r0, r6
    fc54:	bl	f3f0 <test_json>
    fc58:	mov	r3, #296	; 0x128
    fc5c:	mov	r2, r4
    fc60:	str	r3, [sp, #8]
    fc64:	str	r4, [sp, #4]
    fc68:	str	r4, [sp]
    fc6c:	mov	r3, #13
    fc70:	ldr	r1, [pc, #544]	; fe98 <error_case_tests+0x314>
    fc74:	orr	r5, r5, r0
    fc78:	mov	r0, r6
    fc7c:	bl	f3f0 <test_json>
    fc80:	ldr	r3, [pc, #532]	; fe9c <error_case_tests+0x318>
    fc84:	mov	r2, r4
    fc88:	str	r3, [sp, #8]
    fc8c:	str	r4, [sp, #4]
    fc90:	str	r4, [sp]
    fc94:	mov	r3, #13
    fc98:	ldr	r1, [pc, #512]	; fea0 <error_case_tests+0x31c>
    fc9c:	orr	r5, r5, r0
    fca0:	mov	r0, r6
    fca4:	bl	f3f0 <test_json>
    fca8:	ldr	r3, [pc, #500]	; fea4 <error_case_tests+0x320>
    fcac:	mov	r2, r4
    fcb0:	str	r3, [sp, #8]
    fcb4:	str	r4, [sp, #4]
    fcb8:	str	r4, [sp]
    fcbc:	mov	r3, #13
    fcc0:	ldr	r1, [pc, #480]	; fea8 <error_case_tests+0x324>
    fcc4:	orr	r5, r5, r0
    fcc8:	mov	r0, r6
    fccc:	bl	f3f0 <test_json>
    fcd0:	ldr	r3, [pc, #468]	; feac <error_case_tests+0x328>
    fcd4:	mov	r2, r4
    fcd8:	str	r3, [sp, #8]
    fcdc:	str	r4, [sp, #4]
    fce0:	str	r4, [sp]
    fce4:	mov	r3, #13
    fce8:	ldr	r1, [pc, #448]	; feb0 <error_case_tests+0x32c>
    fcec:	orr	r5, r5, r0
    fcf0:	mov	r0, r6
    fcf4:	bl	f3f0 <test_json>
    fcf8:	ldr	r3, [pc, #436]	; feb4 <error_case_tests+0x330>
    fcfc:	mov	r2, r4
    fd00:	str	r3, [sp, #8]
    fd04:	str	r4, [sp, #4]
    fd08:	str	r4, [sp]
    fd0c:	mov	r3, #13
    fd10:	ldr	r1, [pc, #416]	; feb8 <error_case_tests+0x334>
    fd14:	orr	r5, r5, r0
    fd18:	mov	r0, r6
    fd1c:	bl	f3f0 <test_json>
    fd20:	mov	r3, #324	; 0x144
    fd24:	mov	r2, r4
    fd28:	str	r3, [sp, #8]
    fd2c:	str	r4, [sp, #4]
    fd30:	str	r4, [sp]
    fd34:	mov	r3, #13
    fd38:	ldr	r1, [pc, #380]	; febc <error_case_tests+0x338>
    fd3c:	orr	r5, r5, r0
    fd40:	mov	r0, r6
    fd44:	bl	f3f0 <test_json>
    fd48:	ldr	r3, [pc, #368]	; fec0 <error_case_tests+0x33c>
    fd4c:	mov	r2, r4
    fd50:	str	r3, [sp, #8]
    fd54:	str	r4, [sp, #4]
    fd58:	str	r4, [sp]
    fd5c:	mov	r3, #13
    fd60:	ldr	r1, [pc, #348]	; fec4 <error_case_tests+0x340>
    fd64:	orr	r5, r5, r0
    fd68:	mov	r0, r6
    fd6c:	bl	f3f0 <test_json>
    fd70:	mov	r3, #328	; 0x148
    fd74:	mov	r2, r4
    fd78:	str	r3, [sp, #8]
    fd7c:	str	r4, [sp, #4]
    fd80:	str	r4, [sp]
    fd84:	mov	r3, #13
    fd88:	ldr	r1, [pc, #312]	; fec8 <error_case_tests+0x344>
    fd8c:	orr	r5, r5, r0
    fd90:	mov	r0, r6
    fd94:	bl	f3f0 <test_json>
    fd98:	ldr	r3, [pc, #300]	; fecc <error_case_tests+0x348>
    fd9c:	mov	r2, r4
    fda0:	str	r3, [sp, #8]
    fda4:	str	r4, [sp, #4]
    fda8:	str	r4, [sp]
    fdac:	mov	r3, #13
    fdb0:	ldr	r1, [pc, #280]	; fed0 <error_case_tests+0x34c>
    fdb4:	orr	r5, r5, r0
    fdb8:	mov	r0, r6
    fdbc:	bl	f3f0 <test_json>
    fdc0:	ldr	r3, [pc, #268]	; fed4 <error_case_tests+0x350>
    fdc4:	mov	r2, r4
    fdc8:	str	r3, [sp, #8]
    fdcc:	str	r4, [sp, #4]
    fdd0:	str	r4, [sp]
    fdd4:	mov	r3, #13
    fdd8:	ldr	r1, [pc, #248]	; fed8 <error_case_tests+0x354>
    fddc:	orr	r5, r5, r0
    fde0:	mov	r0, r6
    fde4:	bl	f3f0 <test_json>
    fde8:	mov	r3, #336	; 0x150
    fdec:	mov	r2, r4
    fdf0:	str	r3, [sp, #8]
    fdf4:	str	r4, [sp, #4]
    fdf8:	str	r4, [sp]
    fdfc:	mov	r3, #13
    fe00:	ldr	r1, [pc, #212]	; fedc <error_case_tests+0x358>
    fe04:	orr	r5, r5, r0
    fe08:	mov	r0, r6
    fe0c:	bl	f3f0 <test_json>
    fe10:	mov	r3, #340	; 0x154
    fe14:	mov	r2, r4
    fe18:	str	r3, [sp, #8]
    fe1c:	str	r4, [sp, #4]
    fe20:	str	r4, [sp]
    fe24:	mov	r3, #13
    fe28:	ldr	r1, [pc, #176]	; fee0 <error_case_tests+0x35c>
    fe2c:	orr	r5, r5, r0
    fe30:	mov	r0, r6
    fe34:	bl	f3f0 <test_json>
    fe38:	mov	r3, #344	; 0x158
    fe3c:	str	r3, [sp, #8]
    fe40:	str	r4, [sp, #4]
    fe44:	str	r4, [sp]
    fe48:	mov	r2, r4
    fe4c:	mov	r3, #13
    fe50:	ldr	r1, [pc, #140]	; fee4 <error_case_tests+0x360>
    fe54:	orr	r5, r5, r0
    fe58:	mov	r0, r6
    fe5c:	bl	f3f0 <test_json>
    fe60:	orr	r0, r5, r0
    fe64:	add	sp, sp, #16
    fe68:	pop	{r4, r5, r6, pc}
    fe6c:	.word	0x00000000
    fe70:	.word	0x0000011d
    fe74:	.word	0x00000b50
    fe78:	.word	0x0000011f
    fe7c:	.word	0x00000b6c
    fe80:	.word	0x00000121
    fe84:	.word	0x00000bd0
    fe88:	.word	0x00000123
    fe8c:	.word	0x00000c30
    fe90:	.word	0x00000125
    fe94:	.word	0x00000c88
    fe98:	.word	0x00000ce0
    fe9c:	.word	0x0000012b
    fea0:	.word	0x00000d80
    fea4:	.word	0x0000012f
    fea8:	.word	0x00000e1c
    feac:	.word	0x00000133
    feb0:	.word	0x00000ee4
    feb4:	.word	0x00000142
    feb8:	.word	0x00000fac
    febc:	.word	0x00000fc4
    fec0:	.word	0x00000146
    fec4:	.word	0x0000101c
    fec8:	.word	0x00001070
    fecc:	.word	0x0000014a
    fed0:	.word	0x000010c0
    fed4:	.word	0x0000014d
    fed8:	.word	0x00001110
    fedc:	.word	0x0000119c
    fee0:	.word	0x00001228
    fee4:	.word	0x000012d8

0000fee8 <base64_tests>:
    fee8:	push	{r4, r5, r6, r7, r8, r9, lr}
    feec:	sub	sp, sp, #20
    fef0:	ldr	r6, [pc, #420]	; 1009c <base64_tests+0x1b4>
    fef4:	ldr	r3, [pc, #420]	; 100a0 <base64_tests+0x1b8>
    fef8:	mov	r4, #0
    fefc:	str	r3, [sp, #8]
    ff00:	mov	r0, r6
    ff04:	mov	r3, r4
    ff08:	str	r4, [sp, #4]
    ff0c:	str	r4, [sp]
    ff10:	ldr	r2, [pc, #396]	; 100a4 <base64_tests+0x1bc>
    ff14:	ldr	r1, [pc, #396]	; 100a8 <base64_tests+0x1c0>
    ff18:	bl	f3f0 <test_json>
    ff1c:	mov	r2, #372	; 0x174
    ff20:	mov	r3, r4
    ff24:	str	r2, [sp, #8]
    ff28:	str	r4, [sp, #4]
    ff2c:	str	r4, [sp]
    ff30:	ldr	r2, [pc, #372]	; 100ac <base64_tests+0x1c4>
    ff34:	ldr	r1, [pc, #372]	; 100b0 <base64_tests+0x1c8>
    ff38:	ldr	r9, [pc, #372]	; 100b4 <base64_tests+0x1cc>
    ff3c:	ldr	r8, [pc, #372]	; 100b8 <base64_tests+0x1d0>
    ff40:	ldr	r7, [pc, #372]	; 100bc <base64_tests+0x1d4>
    ff44:	mov	r5, r0
    ff48:	mov	r0, r6
    ff4c:	bl	f3f0 <test_json>
    ff50:	mov	r1, #376	; 0x178
    ff54:	mov	r3, r4
    ff58:	mov	r2, r9
    ff5c:	str	r1, [sp, #8]
    ff60:	str	r4, [sp, #4]
    ff64:	str	r4, [sp]
    ff68:	ldr	r1, [pc, #336]	; 100c0 <base64_tests+0x1d8>
    ff6c:	orr	r5, r5, r0
    ff70:	mov	r0, r6
    ff74:	bl	f3f0 <test_json>
    ff78:	ldr	r1, [pc, #324]	; 100c4 <base64_tests+0x1dc>
    ff7c:	mov	r3, r4
    ff80:	mov	r2, r8
    ff84:	str	r1, [sp, #8]
    ff88:	str	r4, [sp, #4]
    ff8c:	str	r4, [sp]
    ff90:	ldr	r1, [pc, #304]	; 100c8 <base64_tests+0x1e0>
    ff94:	orr	r5, r5, r0
    ff98:	mov	r0, r6
    ff9c:	bl	f3f0 <test_json>
    ffa0:	ldr	r1, [pc, #292]	; 100cc <base64_tests+0x1e4>
    ffa4:	mov	r2, r9
    ffa8:	mov	r3, r4
    ffac:	str	r1, [sp, #8]
    ffb0:	str	r4, [sp, #4]
    ffb4:	str	r4, [sp]
    ffb8:	ldr	r1, [pc, #272]	; 100d0 <base64_tests+0x1e8>
    ffbc:	orr	r5, r5, r0
    ffc0:	mov	r0, r6
    ffc4:	bl	f3f0 <test_json>
    ffc8:	ldr	r1, [pc, #260]	; 100d4 <base64_tests+0x1ec>
    ffcc:	mov	r2, r8
    ffd0:	mov	r3, r4
    ffd4:	str	r1, [sp, #8]
    ffd8:	str	r4, [sp, #4]
    ffdc:	str	r4, [sp]
    ffe0:	ldr	r1, [pc, #240]	; 100d8 <base64_tests+0x1f0>
    ffe4:	orr	r5, r5, r0
    ffe8:	mov	r0, r6
    ffec:	bl	f3f0 <test_json>
    fff0:	mov	r3, #388	; 0x184
    fff4:	mov	r2, r4
    fff8:	str	r3, [sp, #8]
    fffc:	str	r4, [sp, #4]
   10000:	str	r4, [sp]
   10004:	mov	r3, #31
   10008:	ldr	r1, [pc, #204]	; 100dc <base64_tests+0x1f4>
   1000c:	orr	r5, r5, r0
   10010:	mov	r0, r6
   10014:	bl	f3f0 <test_json>
   10018:	ldr	r3, [pc, #192]	; 100e0 <base64_tests+0x1f8>
   1001c:	mov	r2, r4
   10020:	str	r3, [sp, #8]
   10024:	str	r4, [sp, #4]
   10028:	str	r4, [sp]
   1002c:	mov	r3, #32
   10030:	ldr	r1, [pc, #172]	; 100e4 <base64_tests+0x1fc>
   10034:	orr	r5, r5, r0
   10038:	mov	r0, r6
   1003c:	bl	f3f0 <test_json>
   10040:	ldr	r1, [pc, #160]	; 100e8 <base64_tests+0x200>
   10044:	mov	r3, r4
   10048:	mov	r2, r7
   1004c:	str	r1, [sp, #8]
   10050:	str	r4, [sp, #4]
   10054:	str	r4, [sp]
   10058:	ldr	r1, [pc, #140]	; 100ec <base64_tests+0x204>
   1005c:	orr	r5, r5, r0
   10060:	mov	r0, r6
   10064:	bl	f3f0 <test_json>
   10068:	ldr	r1, [pc, #128]	; 100f0 <base64_tests+0x208>
   1006c:	str	r4, [sp, #4]
   10070:	str	r1, [sp, #8]
   10074:	str	r4, [sp]
   10078:	mov	r3, r4
   1007c:	mov	r2, r7
   10080:	ldr	r1, [pc, #108]	; 100f4 <base64_tests+0x20c>
   10084:	orr	r5, r5, r0
   10088:	mov	r0, r6
   1008c:	bl	f3f0 <test_json>
   10090:	orr	r0, r5, r0
   10094:	add	sp, sp, #20
   10098:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1009c:	.word	0x00000000
   100a0:	.word	0x00000171
   100a4:	.word	0x000006e4
   100a8:	.word	0x00001388
   100ac:	.word	0x000013a0
   100b0:	.word	0x000013c4
   100b4:	.word	0x000013ec
   100b8:	.word	0x0000155c
   100bc:	.word	0x000019bc
   100c0:	.word	0x000014a0
   100c4:	.word	0x0000017b
   100c8:	.word	0x00001614
   100cc:	.word	0x0000017e
   100d0:	.word	0x000016d0
   100d4:	.word	0x00000181
   100d8:	.word	0x00001788
   100dc:	.word	0x00001844
   100e0:	.word	0x00000187
   100e4:	.word	0x00001900
   100e8:	.word	0x00000196
   100ec:	.word	0x00001a94
   100f0:	.word	0x000001a3
   100f4:	.word	0x00001b64

000100f8 <mixed_type_union_tests>:
   100f8:	push	{r4, r5, r6, r7, lr}
   100fc:	sub	sp, sp, #20
   10100:	ldr	r6, [pc, #292]	; 1022c <mixed_type_union_tests+0x134>
   10104:	mov	r4, #0
   10108:	mov	r3, #432	; 0x1b0
   1010c:	str	r3, [sp, #8]
   10110:	mov	r0, r6
   10114:	mov	r3, r4
   10118:	str	r4, [sp, #4]
   1011c:	str	r4, [sp]
   10120:	ldr	r2, [pc, #264]	; 10230 <mixed_type_union_tests+0x138>
   10124:	ldr	r1, [pc, #264]	; 10234 <mixed_type_union_tests+0x13c>
   10128:	bl	f3f0 <test_json>
   1012c:	ldr	r7, [pc, #260]	; 10238 <mixed_type_union_tests+0x140>
   10130:	ldr	r1, [pc, #260]	; 1023c <mixed_type_union_tests+0x144>
   10134:	mov	r3, r4
   10138:	mov	r2, r7
   1013c:	str	r1, [sp, #8]
   10140:	str	r4, [sp, #4]
   10144:	str	r4, [sp]
   10148:	ldr	r1, [pc, #240]	; 10240 <mixed_type_union_tests+0x148>
   1014c:	mov	r5, r0
   10150:	mov	r0, r6
   10154:	bl	f3f0 <test_json>
   10158:	ldr	r1, [pc, #228]	; 10244 <mixed_type_union_tests+0x14c>
   1015c:	mov	r3, r4
   10160:	mov	r2, r7
   10164:	str	r1, [sp, #8]
   10168:	str	r4, [sp, #4]
   1016c:	str	r4, [sp]
   10170:	ldr	r1, [pc, #208]	; 10248 <mixed_type_union_tests+0x150>
   10174:	orr	r5, r5, r0
   10178:	mov	r0, r6
   1017c:	bl	f3f0 <test_json>
   10180:	ldr	r2, [pc, #196]	; 1024c <mixed_type_union_tests+0x154>
   10184:	mov	r3, r4
   10188:	str	r2, [sp, #8]
   1018c:	str	r4, [sp, #4]
   10190:	str	r4, [sp]
   10194:	ldr	r2, [pc, #180]	; 10250 <mixed_type_union_tests+0x158>
   10198:	ldr	r1, [pc, #180]	; 10254 <mixed_type_union_tests+0x15c>
   1019c:	orr	r5, r5, r0
   101a0:	mov	r0, r6
   101a4:	bl	f3f0 <test_json>
   101a8:	ldr	r2, [pc, #168]	; 10258 <mixed_type_union_tests+0x160>
   101ac:	mov	r3, r4
   101b0:	str	r2, [sp, #8]
   101b4:	str	r4, [sp, #4]
   101b8:	str	r4, [sp]
   101bc:	ldr	r2, [pc, #152]	; 1025c <mixed_type_union_tests+0x164>
   101c0:	ldr	r1, [pc, #152]	; 10260 <mixed_type_union_tests+0x168>
   101c4:	orr	r5, r5, r0
   101c8:	mov	r0, r6
   101cc:	bl	f3f0 <test_json>
   101d0:	ldr	r2, [pc, #140]	; 10264 <mixed_type_union_tests+0x16c>
   101d4:	mov	r3, r4
   101d8:	str	r2, [sp, #8]
   101dc:	str	r4, [sp, #4]
   101e0:	str	r4, [sp]
   101e4:	ldr	r2, [pc, #124]	; 10268 <mixed_type_union_tests+0x170>
   101e8:	ldr	r1, [pc, #124]	; 1026c <mixed_type_union_tests+0x174>
   101ec:	orr	r5, r5, r0
   101f0:	mov	r0, r6
   101f4:	bl	f3f0 <test_json>
   101f8:	ldr	r1, [pc, #112]	; 10270 <mixed_type_union_tests+0x178>
   101fc:	str	r4, [sp, #4]
   10200:	str	r1, [sp, #8]
   10204:	str	r4, [sp]
   10208:	mov	r3, r4
   1020c:	mov	r2, r7
   10210:	ldr	r1, [pc, #92]	; 10274 <mixed_type_union_tests+0x17c>
   10214:	orr	r5, r5, r0
   10218:	mov	r0, r6
   1021c:	bl	f3f0 <test_json>
   10220:	orr	r0, r5, r0
   10224:	add	sp, sp, #20
   10228:	pop	{r4, r5, r6, r7, pc}
   1022c:	.word	0x00000010
   10230:	.word	0x00001c30
   10234:	.word	0x00001c78
   10238:	.word	0x00001cc8
   1023c:	.word	0x000001b5
   10240:	.word	0x00001d40
   10244:	.word	0x000001ba
   10248:	.word	0x00001dc4
   1024c:	.word	0x000001c1
   10250:	.word	0x00001e5c
   10254:	.word	0x00001f18
   10258:	.word	0x000001ca
   1025c:	.word	0x00001ff8
   10260:	.word	0x000020d8
   10264:	.word	0x000001d5
   10268:	.word	0x000021e0
   1026c:	.word	0x00002328
   10270:	.word	0x000001da
   10274:	.word	0x000024ac

00010278 <union_vector_tests>:
   10278:	push	{r4, r5, r6, r7, lr}
   1027c:	sub	sp, sp, #20
   10280:	ldr	r6, [pc, #252]	; 10384 <union_vector_tests+0x10c>
   10284:	ldr	r7, [pc, #252]	; 10388 <union_vector_tests+0x110>
   10288:	ldr	r3, [pc, #252]	; 1038c <union_vector_tests+0x114>
   1028c:	mov	r4, #0
   10290:	mov	r2, r7
   10294:	str	r3, [sp, #8]
   10298:	mov	r0, r6
   1029c:	mov	r3, r4
   102a0:	str	r4, [sp, #4]
   102a4:	str	r4, [sp]
   102a8:	ldr	r1, [pc, #224]	; 10390 <union_vector_tests+0x118>
   102ac:	bl	f3f0 <test_json>
   102b0:	mov	r2, #488	; 0x1e8
   102b4:	mov	r3, r4
   102b8:	str	r2, [sp, #8]
   102bc:	str	r4, [sp, #4]
   102c0:	str	r4, [sp]
   102c4:	ldr	r2, [pc, #200]	; 10394 <union_vector_tests+0x11c>
   102c8:	ldr	r1, [pc, #200]	; 10398 <union_vector_tests+0x120>
   102cc:	mov	r5, r0
   102d0:	mov	r0, r6
   102d4:	bl	f3f0 <test_json>
   102d8:	ldr	r2, [pc, #188]	; 1039c <union_vector_tests+0x124>
   102dc:	mov	r3, r4
   102e0:	str	r2, [sp, #8]
   102e4:	str	r4, [sp, #4]
   102e8:	str	r4, [sp]
   102ec:	ldr	r2, [pc, #172]	; 103a0 <union_vector_tests+0x128>
   102f0:	ldr	r1, [pc, #172]	; 103a4 <union_vector_tests+0x12c>
   102f4:	orr	r5, r5, r0
   102f8:	mov	r0, r6
   102fc:	bl	f3f0 <test_json>
   10300:	ldr	r2, [pc, #160]	; 103a8 <union_vector_tests+0x130>
   10304:	mov	r3, r4
   10308:	str	r2, [sp, #8]
   1030c:	str	r4, [sp, #4]
   10310:	str	r4, [sp]
   10314:	ldr	r2, [pc, #144]	; 103ac <union_vector_tests+0x134>
   10318:	ldr	r1, [pc, #144]	; 103b0 <union_vector_tests+0x138>
   1031c:	orr	r5, r5, r0
   10320:	mov	r0, r6
   10324:	bl	f3f0 <test_json>
   10328:	ldr	r1, [pc, #132]	; 103b4 <union_vector_tests+0x13c>
   1032c:	mov	r2, r7
   10330:	mov	r3, r4
   10334:	str	r1, [sp, #8]
   10338:	str	r4, [sp, #4]
   1033c:	str	r4, [sp]
   10340:	ldr	r1, [pc, #112]	; 103b8 <union_vector_tests+0x140>
   10344:	orr	r5, r5, r0
   10348:	mov	r0, r6
   1034c:	bl	f3f0 <test_json>
   10350:	mov	r2, #500	; 0x1f4
   10354:	str	r2, [sp, #8]
   10358:	str	r4, [sp, #4]
   1035c:	str	r4, [sp]
   10360:	mov	r3, r4
   10364:	ldr	r2, [pc, #80]	; 103bc <union_vector_tests+0x144>
   10368:	ldr	r1, [pc, #80]	; 103c0 <union_vector_tests+0x148>
   1036c:	orr	r5, r5, r0
   10370:	mov	r0, r6
   10374:	bl	f3f0 <test_json>
   10378:	orr	r0, r5, r0
   1037c:	add	sp, sp, #20
   10380:	pop	{r4, r5, r6, r7, pc}
   10384:	.word	0x00000020
   10388:	.word	0x0000253c
   1038c:	.word	0x000001e5
   10390:	.word	0x00002574
   10394:	.word	0x000025b4
   10398:	.word	0x000025e0
   1039c:	.word	0x000001eb
   103a0:	.word	0x00002614
   103a4:	.word	0x00002658
   103a8:	.word	0x000001ee
   103ac:	.word	0x000026a8
   103b0:	.word	0x00002714
   103b4:	.word	0x000001f1
   103b8:	.word	0x00002794
   103bc:	.word	0x000027d4
   103c0:	.word	0x00002830

Disassembly of section .text.unlikely:

00000000 <flatcc_json_parser_symbolic_uint64>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	sub	sp, sp, #36	; 0x24
   8:	mov	r6, #0
   c:	ldr	r8, [sp, #72]	; 0x48
  10:	mov	r7, #0
  14:	cmp	r1, r2
  18:	strd	r6, [r8]
  1c:	mov	r5, r1
  20:	mov	r4, r2
  24:	mov	r9, r3
  28:	mov	r6, r0
  2c:	beq	64 <flatcc_json_parser_symbolic_uint64+0x64>
  30:	ldrb	r3, [r1]
  34:	cmp	r3, #34	; 0x22
  38:	moveq	r3, #0
  3c:	addeq	r5, r1, #1
  40:	streq	r3, [r0, #12]
  44:	beq	64 <flatcc_json_parser_symbolic_uint64+0x64>
  48:	cmp	r3, #46	; 0x2e
  4c:	movne	r3, #1
  50:	strne	r3, [r0, #12]
  54:	bne	64 <flatcc_json_parser_symbolic_uint64+0x64>
  58:	mov	r3, #5
  5c:	bl	0 <flatcc_json_parser_set_error>
  60:	mov	r5, r0
  64:	ldr	r3, [r6, #12]
  68:	cmp	r3, #0
  6c:	bne	84 <flatcc_json_parser_symbolic_uint64+0x84>
  70:	mov	r1, r5
  74:	mov	r2, r4
  78:	mov	r0, r6
  7c:	bl	1c50 <flatcc_json_parser_space>
  80:	mov	r5, r0
  84:	cmp	r4, r5
  88:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
  8c:	mov	r2, #0
  90:	mov	r3, #0
  94:	mov	sl, #0
  98:	strd	r2, [sp, #8]
  9c:	mov	fp, r9
  a0:	add	r3, sp, #20
  a4:	str	r3, [sp, #4]
  a8:	add	r3, sp, #24
  ac:	str	r3, [sp]
  b0:	ldr	r7, [fp]
  b4:	add	r3, sp, #16
  b8:	mov	r2, r4
  bc:	mov	r1, r5
  c0:	mov	r0, r6
  c4:	blx	r7
  c8:	cmp	r4, r0
  cc:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
  d0:	cmp	r5, r0
  d4:	bne	100 <flatcc_json_parser_symbolic_uint64+0x100>
  d8:	ldr	r3, [fp, #4]!
  dc:	cmp	r3, #0
  e0:	bne	a0 <flatcc_json_parser_symbolic_uint64+0xa0>
  e4:	mov	r2, r4
  e8:	mov	r1, r5
  ec:	mov	r0, r6
  f0:	mov	r3, #23
  f4:	bl	0 <flatcc_json_parser_set_error>
  f8:	mov	r4, r0
  fc:	b	198 <flatcc_json_parser_symbolic_uint64+0x198>
 100:	cmp	sl, #0
 104:	mov	r7, r0
 108:	beq	134 <flatcc_json_parser_symbolic_uint64+0x134>
 10c:	ldr	r3, [r6, #12]
 110:	cmp	r3, #0
 114:	beq	134 <flatcc_json_parser_symbolic_uint64+0x134>
 118:	mov	r2, r4
 11c:	mov	r1, r7
 120:	mov	r0, r6
 124:	mov	r3, #14
 128:	bl	0 <flatcc_json_parser_set_error>
 12c:	mov	r4, r0
 130:	b	198 <flatcc_json_parser_symbolic_uint64+0x198>
 134:	ldr	r3, [sp, #16]
 138:	cmp	r3, #0
 13c:	ldrdeq	r2, [sp, #24]
 140:	strdeq	r2, [sp, #8]
 144:	beq	164 <flatcc_json_parser_symbolic_uint64+0x164>
 148:	mov	r3, #8
 14c:	mov	r2, r4
 150:	mov	r1, r7
 154:	mov	r0, r6
 158:	bl	0 <flatcc_json_parser_set_error>
 15c:	cmp	r4, r0
 160:	beq	198 <flatcc_json_parser_symbolic_uint64+0x198>
 164:	ldrd	r2, [r8]
 168:	ldrd	r0, [sp, #8]
 16c:	ldr	ip, [sp, #20]
 170:	add	sl, sl, #1
 174:	adds	r0, r0, r2
 178:	adc	r1, r1, r3
 17c:	mov	r2, r0
 180:	mov	r3, r1
 184:	cmp	ip, #0
 188:	strd	r2, [r8]
 18c:	movne	r5, r7
 190:	bne	9c <flatcc_json_parser_symbolic_uint64+0x9c>
 194:	mov	r4, r7
 198:	mov	r0, r4
 19c:	add	sp, sp, #36	; 0x24
 1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	sub	sp, sp, #20
   8:	bl	f84c <edge_case_tests>
   c:	ldr	r6, [pc, #2640]	; a64 <main+0xa64>
  10:	ldr	r7, [pc, #2640]	; a68 <main+0xa68>
  14:	mov	r4, #0
  18:	ldr	r8, [pc, #2636]	; a6c <main+0xa6c>
  1c:	ldr	sl, [pc, #2636]	; a70 <main+0xa70>
  20:	ldr	r9, [pc, #2636]	; a74 <main+0xa74>
  24:	ldr	fp, [pc, #2636]	; a78 <main+0xa78>
  28:	mov	r5, r0
  2c:	bl	fb84 <error_case_tests>
  30:	orr	r5, r5, r0
  34:	bl	10278 <union_vector_tests>
  38:	orr	r5, r5, r0
  3c:	bl	fee8 <base64_tests>
  40:	orr	r5, r5, r0
  44:	bl	100f8 <mixed_type_union_tests>
  48:	ldr	r3, [pc, #2604]	; a7c <main+0xa7c>
  4c:	mov	r2, r7
  50:	str	r3, [sp, #8]
  54:	str	r4, [sp, #4]
  58:	mov	r3, r4
  5c:	str	r4, [sp]
  60:	ldr	r1, [pc, #2584]	; a80 <main+0xa80>
  64:	orr	r5, r5, r0
  68:	mov	r0, r6
  6c:	bl	f3f0 <test_json>
  70:	mov	r1, #528	; 0x210
  74:	mov	r3, r4
  78:	mov	r2, r8
  7c:	str	r1, [sp, #8]
  80:	str	r4, [sp, #4]
  84:	str	r4, [sp]
  88:	ldr	r1, [pc, #2548]	; a84 <main+0xa84>
  8c:	orr	r5, r5, r0
  90:	mov	r0, r6
  94:	bl	f3f0 <test_json>
  98:	ldr	r1, [pc, #2536]	; a88 <main+0xa88>
  9c:	mov	r3, r4
  a0:	mov	r2, sl
  a4:	str	r1, [sp, #8]
  a8:	str	r4, [sp, #4]
  ac:	str	r4, [sp]
  b0:	ldr	r1, [pc, #2516]	; a8c <main+0xa8c>
  b4:	orr	r5, r5, r0
  b8:	mov	r0, r6
  bc:	bl	f3f0 <test_json>
  c0:	ldr	r1, [pc, #2504]	; a90 <main+0xa90>
  c4:	mov	r3, r4
  c8:	mov	r2, r9
  cc:	str	r1, [sp, #8]
  d0:	str	r4, [sp, #4]
  d4:	str	r4, [sp]
  d8:	ldr	r1, [pc, #2484]	; a94 <main+0xa94>
  dc:	orr	r5, r5, r0
  e0:	mov	r0, r6
  e4:	bl	f3f0 <test_json>
  e8:	ldr	r1, [pc, #2472]	; a98 <main+0xa98>
  ec:	mov	r3, r4
  f0:	mov	r2, r9
  f4:	str	r1, [sp, #8]
  f8:	str	r4, [sp, #4]
  fc:	str	r4, [sp]
 100:	ldr	r1, [pc, #2452]	; a9c <main+0xa9c>
 104:	orr	r5, r5, r0
 108:	mov	r0, r6
 10c:	bl	f3f0 <test_json>
 110:	mov	r1, #540	; 0x21c
 114:	mov	r3, r4
 118:	mov	r2, r8
 11c:	str	r1, [sp, #8]
 120:	str	r4, [sp, #4]
 124:	str	r4, [sp]
 128:	ldr	r1, [pc, #2416]	; aa0 <main+0xaa0>
 12c:	orr	r5, r5, r0
 130:	mov	r0, r6
 134:	bl	f3f0 <test_json>
 138:	ldr	r1, [pc, #2404]	; aa4 <main+0xaa4>
 13c:	mov	r3, r4
 140:	mov	r2, sl
 144:	str	r1, [sp, #8]
 148:	str	r4, [sp, #4]
 14c:	str	r4, [sp]
 150:	ldr	r1, [pc, #2384]	; aa8 <main+0xaa8>
 154:	orr	r5, r5, r0
 158:	mov	r0, r6
 15c:	bl	f3f0 <test_json>
 160:	ldr	r1, [pc, #2372]	; aac <main+0xaac>
 164:	mov	r3, r4
 168:	mov	r2, r7
 16c:	str	r1, [sp, #8]
 170:	str	r4, [sp, #4]
 174:	str	r4, [sp]
 178:	ldr	r1, [pc, #2352]	; ab0 <main+0xab0>
 17c:	orr	r5, r5, r0
 180:	mov	r0, r6
 184:	bl	f3f0 <test_json>
 188:	ldr	r1, [pc, #2340]	; ab4 <main+0xab4>
 18c:	mov	r3, r4
 190:	mov	r2, r7
 194:	str	r1, [sp, #8]
 198:	str	r4, [sp, #4]
 19c:	str	r4, [sp]
 1a0:	ldr	r1, [pc, #2320]	; ab8 <main+0xab8>
 1a4:	orr	r5, r5, r0
 1a8:	mov	r0, r6
 1ac:	bl	f3f0 <test_json>
 1b0:	ldr	r1, [pc, #2308]	; abc <main+0xabc>
 1b4:	mov	r3, r4
 1b8:	mov	r2, r7
 1bc:	str	r1, [sp, #8]
 1c0:	str	r4, [sp, #4]
 1c4:	str	r4, [sp]
 1c8:	ldr	r1, [pc, #2288]	; ac0 <main+0xac0>
 1cc:	orr	r5, r5, r0
 1d0:	mov	r0, r6
 1d4:	bl	f3f0 <test_json>
 1d8:	ldr	r1, [pc, #2276]	; ac4 <main+0xac4>
 1dc:	mov	r3, r4
 1e0:	mov	r2, r8
 1e4:	str	r1, [sp, #8]
 1e8:	str	r4, [sp, #4]
 1ec:	str	r4, [sp]
 1f0:	ldr	r1, [pc, #2256]	; ac8 <main+0xac8>
 1f4:	orr	r5, r5, r0
 1f8:	mov	r0, r6
 1fc:	bl	f3f0 <test_json>
 200:	ldr	r1, [pc, #2244]	; acc <main+0xacc>
 204:	mov	r3, r4
 208:	mov	r2, sl
 20c:	str	r1, [sp, #8]
 210:	str	r4, [sp, #4]
 214:	str	r4, [sp]
 218:	ldr	r1, [pc, #2224]	; ad0 <main+0xad0>
 21c:	orr	r5, r5, r0
 220:	mov	r0, r6
 224:	bl	f3f0 <test_json>
 228:	mov	r1, #564	; 0x234
 22c:	mov	r3, r4
 230:	mov	r2, r9
 234:	str	r1, [sp, #8]
 238:	str	r4, [sp, #4]
 23c:	str	r4, [sp]
 240:	ldr	r1, [pc, #2188]	; ad4 <main+0xad4>
 244:	orr	r5, r5, r0
 248:	mov	r0, r6
 24c:	bl	f3f0 <test_json>
 250:	ldr	r1, [pc, #2176]	; ad8 <main+0xad8>
 254:	mov	r3, r4
 258:	mov	r2, r9
 25c:	str	r1, [sp, #8]
 260:	str	r4, [sp, #4]
 264:	str	r4, [sp]
 268:	ldr	r1, [pc, #2156]	; adc <main+0xadc>
 26c:	orr	r5, r5, r0
 270:	mov	r0, r6
 274:	bl	f3f0 <test_json>
 278:	ldr	r1, [pc, #2144]	; ae0 <main+0xae0>
 27c:	mov	r3, r4
 280:	mov	r2, r8
 284:	str	r1, [sp, #8]
 288:	str	r4, [sp, #4]
 28c:	str	r4, [sp]
 290:	ldr	r1, [pc, #2124]	; ae4 <main+0xae4>
 294:	orr	r5, r5, r0
 298:	mov	r0, r6
 29c:	bl	f3f0 <test_json>
 2a0:	ldr	r1, [pc, #2112]	; ae8 <main+0xae8>
 2a4:	mov	r3, r4
 2a8:	mov	r2, sl
 2ac:	str	r1, [sp, #8]
 2b0:	str	r4, [sp, #4]
 2b4:	str	r4, [sp]
 2b8:	ldr	r1, [pc, #2092]	; aec <main+0xaec>
 2bc:	orr	r5, r5, r0
 2c0:	mov	r0, r6
 2c4:	bl	f3f0 <test_json>
 2c8:	ldr	r1, [pc, #2080]	; af0 <main+0xaf0>
 2cc:	mov	r3, r4
 2d0:	mov	r2, r7
 2d4:	str	r1, [sp, #8]
 2d8:	str	r4, [sp, #4]
 2dc:	str	r4, [sp]
 2e0:	ldr	r1, [pc, #2060]	; af4 <main+0xaf4>
 2e4:	orr	r5, r5, r0
 2e8:	mov	r0, r6
 2ec:	bl	f3f0 <test_json>
 2f0:	ldr	r1, [pc, #2048]	; af8 <main+0xaf8>
 2f4:	mov	r3, r4
 2f8:	mov	r2, r7
 2fc:	str	r1, [sp, #8]
 300:	str	r4, [sp, #4]
 304:	str	r4, [sp]
 308:	ldr	r1, [pc, #2028]	; afc <main+0xafc>
 30c:	orr	r5, r5, r0
 310:	mov	r0, r6
 314:	bl	f3f0 <test_json>
 318:	ldr	r1, [pc, #2016]	; b00 <main+0xb00>
 31c:	mov	r3, r4
 320:	mov	r2, r8
 324:	str	r1, [sp, #8]
 328:	str	r4, [sp, #4]
 32c:	str	r4, [sp]
 330:	ldr	r1, [pc, #1996]	; b04 <main+0xb04>
 334:	orr	r5, r5, r0
 338:	mov	r0, r6
 33c:	bl	f3f0 <test_json>
 340:	mov	r1, #604	; 0x25c
 344:	mov	r3, r4
 348:	mov	r2, sl
 34c:	str	r1, [sp, #8]
 350:	str	r4, [sp, #4]
 354:	str	r4, [sp]
 358:	ldr	r1, [pc, #1960]	; b08 <main+0xb08>
 35c:	orr	r5, r5, r0
 360:	mov	r0, r6
 364:	bl	f3f0 <test_json>
 368:	ldr	r1, [pc, #1948]	; b0c <main+0xb0c>
 36c:	mov	r3, r4
 370:	str	r1, [sp, #8]
 374:	str	r4, [sp, #4]
 378:	str	r4, [sp]
 37c:	ldr	r2, [pc, #1932]	; b10 <main+0xb10>
 380:	ldr	r1, [pc, #1932]	; b14 <main+0xb14>
 384:	orr	r5, r5, r0
 388:	mov	r0, r6
 38c:	bl	f3f0 <test_json>
 390:	ldr	r1, [pc, #1920]	; b18 <main+0xb18>
 394:	mov	r3, r4
 398:	mov	r2, r9
 39c:	str	r1, [sp, #8]
 3a0:	str	r4, [sp, #4]
 3a4:	str	r4, [sp]
 3a8:	ldr	r1, [pc, #1900]	; b1c <main+0xb1c>
 3ac:	orr	r5, r5, r0
 3b0:	mov	r0, r6
 3b4:	bl	f3f0 <test_json>
 3b8:	ldr	r1, [pc, #1888]	; b20 <main+0xb20>
 3bc:	mov	r3, r4
 3c0:	str	r1, [sp, #8]
 3c4:	str	r4, [sp, #4]
 3c8:	str	r4, [sp]
 3cc:	ldr	r2, [pc, #1872]	; b24 <main+0xb24>
 3d0:	ldr	r1, [pc, #1872]	; b28 <main+0xb28>
 3d4:	orr	r5, r5, r0
 3d8:	mov	r0, r6
 3dc:	bl	f3f0 <test_json>
 3e0:	mov	r1, #616	; 0x268
 3e4:	mov	r3, r4
 3e8:	str	r1, [sp, #8]
 3ec:	str	r4, [sp, #4]
 3f0:	str	r4, [sp]
 3f4:	ldr	r2, [pc, #1840]	; b2c <main+0xb2c>
 3f8:	ldr	r1, [pc, #1840]	; b30 <main+0xb30>
 3fc:	orr	r5, r5, r0
 400:	mov	r0, r6
 404:	bl	f3f0 <test_json>
 408:	ldr	r1, [pc, #1828]	; b34 <main+0xb34>
 40c:	mov	r3, r4
 410:	str	r1, [sp, #8]
 414:	str	r4, [sp, #4]
 418:	str	r4, [sp]
 41c:	ldr	r2, [pc, #1812]	; b38 <main+0xb38>
 420:	ldr	r1, [pc, #1812]	; b3c <main+0xb3c>
 424:	orr	r5, r5, r0
 428:	mov	r0, r6
 42c:	bl	f3f0 <test_json>
 430:	ldr	r1, [pc, #1800]	; b40 <main+0xb40>
 434:	mov	r3, r4
 438:	mov	r2, r8
 43c:	str	r1, [sp, #8]
 440:	str	r4, [sp, #4]
 444:	str	r4, [sp]
 448:	ldr	r1, [pc, #1780]	; b44 <main+0xb44>
 44c:	orr	r5, r5, r0
 450:	mov	r0, r6
 454:	bl	f3f0 <test_json>
 458:	ldr	r1, [pc, #1768]	; b48 <main+0xb48>
 45c:	mov	r3, r4
 460:	mov	r2, r8
 464:	str	r1, [sp, #8]
 468:	str	r4, [sp, #4]
 46c:	str	r4, [sp]
 470:	ldr	r1, [pc, #1748]	; b4c <main+0xb4c>
 474:	orr	r5, r5, r0
 478:	mov	r0, r6
 47c:	bl	f3f0 <test_json>
 480:	mov	ip, #628	; 0x274
 484:	mov	r3, r4
 488:	mov	r1, fp
 48c:	str	ip, [sp, #8]
 490:	str	r4, [sp, #4]
 494:	str	r4, [sp]
 498:	ldr	r2, [pc, #1712]	; b50 <main+0xb50>
 49c:	orr	r5, r5, r0
 4a0:	mov	r0, r6
 4a4:	bl	f3f0 <test_json>
 4a8:	ldr	ip, [pc, #1700]	; b54 <main+0xb54>
 4ac:	mov	r1, fp
 4b0:	str	ip, [sp, #8]
 4b4:	mov	r3, r4
 4b8:	str	r4, [sp, #4]
 4bc:	str	r4, [sp]
 4c0:	ldr	r2, [pc, #1672]	; b50 <main+0xb50>
 4c4:	ldr	fp, [pc, #1676]	; b58 <main+0xb58>
 4c8:	orr	r5, r5, r0
 4cc:	mov	r0, r6
 4d0:	bl	f3f0 <test_json>
 4d4:	ldr	r1, [pc, #1664]	; b5c <main+0xb5c>
 4d8:	mov	r3, r4
 4dc:	str	r1, [sp, #8]
 4e0:	str	r4, [sp, #4]
 4e4:	str	r4, [sp]
 4e8:	ldr	r2, [pc, #1648]	; b60 <main+0xb60>
 4ec:	ldr	r1, [pc, #1648]	; b64 <main+0xb64>
 4f0:	orr	r5, r5, r0
 4f4:	mov	r0, r6
 4f8:	bl	f3f0 <test_json>
 4fc:	ldr	r1, [pc, #1636]	; b68 <main+0xb68>
 500:	mov	r3, r4
 504:	str	r1, [sp, #8]
 508:	str	r4, [sp, #4]
 50c:	str	r4, [sp]
 510:	ldr	r2, [pc, #1620]	; b6c <main+0xb6c>
 514:	ldr	r1, [pc, #1620]	; b70 <main+0xb70>
 518:	orr	r5, r5, r0
 51c:	mov	r0, r6
 520:	bl	f3f0 <test_json>
 524:	ldr	r1, [pc, #1608]	; b74 <main+0xb74>
 528:	mov	r3, r4
 52c:	str	r1, [sp, #8]
 530:	str	r4, [sp, #4]
 534:	str	r4, [sp]
 538:	ldr	r2, [pc, #1592]	; b78 <main+0xb78>
 53c:	ldr	r1, [pc, #1592]	; b7c <main+0xb7c>
 540:	orr	r5, r5, r0
 544:	mov	r0, r6
 548:	bl	f3f0 <test_json>
 54c:	ldr	r1, [pc, #1580]	; b80 <main+0xb80>
 550:	mov	r3, r4
 554:	mov	r2, r7
 558:	str	r1, [sp, #8]
 55c:	str	r4, [sp, #4]
 560:	str	r4, [sp]
 564:	ldr	r1, [pc, #1560]	; b84 <main+0xb84>
 568:	orr	r5, r5, r0
 56c:	mov	r0, r6
 570:	bl	f3f0 <test_json>
 574:	ldr	r1, [pc, #1548]	; b88 <main+0xb88>
 578:	mov	r3, r4
 57c:	mov	r2, r7
 580:	str	r1, [sp, #8]
 584:	str	r4, [sp, #4]
 588:	str	r4, [sp]
 58c:	ldr	r1, [pc, #1528]	; b8c <main+0xb8c>
 590:	orr	r5, r5, r0
 594:	mov	r0, r6
 598:	bl	f3f0 <test_json>
 59c:	ldr	r1, [pc, #1516]	; b90 <main+0xb90>
 5a0:	mov	r3, r4
 5a4:	mov	r2, r8
 5a8:	str	r1, [sp, #8]
 5ac:	str	r4, [sp, #4]
 5b0:	str	r4, [sp]
 5b4:	ldr	r1, [pc, #1496]	; b94 <main+0xb94>
 5b8:	orr	r5, r5, r0
 5bc:	mov	r0, r6
 5c0:	bl	f3f0 <test_json>
 5c4:	mov	r1, #656	; 0x290
 5c8:	mov	r2, sl
 5cc:	mov	r3, r4
 5d0:	str	r1, [sp, #8]
 5d4:	str	r4, [sp, #4]
 5d8:	str	r4, [sp]
 5dc:	ldr	r1, [pc, #1460]	; b98 <main+0xb98>
 5e0:	orr	r5, r5, r0
 5e4:	mov	r0, r6
 5e8:	bl	f3f0 <test_json>
 5ec:	ldr	r1, [pc, #1448]	; b9c <main+0xb9c>
 5f0:	mov	r3, r4
 5f4:	str	r1, [sp, #8]
 5f8:	ldr	r2, [pc, #1296]	; b10 <main+0xb10>
 5fc:	str	r4, [sp, #4]
 600:	str	r4, [sp]
 604:	ldr	r1, [pc, #1428]	; ba0 <main+0xba0>
 608:	orr	r5, r5, r0
 60c:	mov	r0, r6
 610:	bl	f3f0 <test_json>
 614:	ldr	r1, [pc, #1416]	; ba4 <main+0xba4>
 618:	mov	r2, r9
 61c:	mov	r3, r4
 620:	str	r1, [sp, #8]
 624:	str	r4, [sp, #4]
 628:	str	r4, [sp]
 62c:	ldr	r1, [pc, #1396]	; ba8 <main+0xba8>
 630:	orr	r5, r5, r0
 634:	mov	r0, r6
 638:	bl	f3f0 <test_json>
 63c:	ldr	r1, [pc, #1384]	; bac <main+0xbac>
 640:	mov	r3, r4
 644:	str	r1, [sp, #8]
 648:	ldr	r2, [pc, #1236]	; b24 <main+0xb24>
 64c:	str	r4, [sp, #4]
 650:	str	r4, [sp]
 654:	ldr	r1, [pc, #1364]	; bb0 <main+0xbb0>
 658:	orr	r5, r5, r0
 65c:	mov	r0, r6
 660:	bl	f3f0 <test_json>
 664:	mov	r1, #668	; 0x29c
 668:	mov	r3, r4
 66c:	str	r1, [sp, #8]
 670:	ldr	r2, [pc, #1204]	; b2c <main+0xb2c>
 674:	str	r4, [sp, #4]
 678:	str	r4, [sp]
 67c:	ldr	r1, [pc, #1328]	; bb4 <main+0xbb4>
 680:	orr	r5, r5, r0
 684:	mov	r0, r6
 688:	bl	f3f0 <test_json>
 68c:	ldr	r1, [pc, #1316]	; bb8 <main+0xbb8>
 690:	mov	r3, r4
 694:	str	r1, [sp, #8]
 698:	ldr	r2, [pc, #1176]	; b38 <main+0xb38>
 69c:	str	r4, [sp, #4]
 6a0:	str	r4, [sp]
 6a4:	ldr	r1, [pc, #1296]	; bbc <main+0xbbc>
 6a8:	orr	r5, r5, r0
 6ac:	mov	r0, r6
 6b0:	bl	f3f0 <test_json>
 6b4:	ldr	r1, [pc, #1284]	; bc0 <main+0xbc0>
 6b8:	mov	r3, r4
 6bc:	mov	r2, r8
 6c0:	str	r1, [sp, #8]
 6c4:	str	r4, [sp, #4]
 6c8:	str	r4, [sp]
 6cc:	ldr	r1, [pc, #1264]	; bc4 <main+0xbc4>
 6d0:	orr	r5, r5, r0
 6d4:	mov	r0, r6
 6d8:	bl	f3f0 <test_json>
 6dc:	ldr	r1, [pc, #1252]	; bc8 <main+0xbc8>
 6e0:	mov	r2, r8
 6e4:	mov	r3, r4
 6e8:	str	r1, [sp, #8]
 6ec:	str	r4, [sp, #4]
 6f0:	str	r4, [sp]
 6f4:	ldr	r1, [pc, #1232]	; bcc <main+0xbcc>
 6f8:	ldr	r8, [pc, #1232]	; bd0 <main+0xbd0>
 6fc:	orr	r5, r5, r0
 700:	mov	r0, r6
 704:	bl	f3f0 <test_json>
 708:	mov	ip, #680	; 0x2a8
 70c:	mov	r3, r4
 710:	mov	r1, fp
 714:	str	ip, [sp, #8]
 718:	str	r4, [sp, #4]
 71c:	str	r4, [sp]
 720:	ldr	r2, [pc, #1064]	; b50 <main+0xb50>
 724:	orr	r5, r5, r0
 728:	mov	r0, r6
 72c:	bl	f3f0 <test_json>
 730:	ldr	ip, [pc, #1180]	; bd4 <main+0xbd4>
 734:	mov	r1, fp
 738:	str	ip, [sp, #8]
 73c:	mov	r3, r4
 740:	str	r4, [sp, #4]
 744:	str	r4, [sp]
 748:	ldr	r2, [pc, #1024]	; b50 <main+0xb50>
 74c:	orr	r5, r5, r0
 750:	mov	r0, r6
 754:	bl	f3f0 <test_json>
 758:	ldr	r1, [pc, #1144]	; bd8 <main+0xbd8>
 75c:	mov	r3, r4
 760:	str	r1, [sp, #8]
 764:	str	r4, [sp, #4]
 768:	str	r4, [sp]
 76c:	ldr	r2, [pc, #1004]	; b60 <main+0xb60>
 770:	ldr	r1, [pc, #1124]	; bdc <main+0xbdc>
 774:	orr	r5, r5, r0
 778:	mov	r0, r6
 77c:	bl	f3f0 <test_json>
 780:	ldr	r1, [pc, #1112]	; be0 <main+0xbe0>
 784:	mov	r3, r4
 788:	str	r1, [sp, #8]
 78c:	str	r4, [sp, #4]
 790:	str	r4, [sp]
 794:	ldr	r2, [pc, #976]	; b6c <main+0xb6c>
 798:	ldr	r1, [pc, #1092]	; be4 <main+0xbe4>
 79c:	orr	r5, r5, r0
 7a0:	mov	r0, r6
 7a4:	bl	f3f0 <test_json>
 7a8:	ldr	r1, [pc, #1080]	; be8 <main+0xbe8>
 7ac:	mov	r3, r4
 7b0:	str	r1, [sp, #8]
 7b4:	str	r4, [sp, #4]
 7b8:	str	r4, [sp]
 7bc:	ldr	r2, [pc, #948]	; b78 <main+0xb78>
 7c0:	ldr	r1, [pc, #1060]	; bec <main+0xbec>
 7c4:	orr	r5, r5, r0
 7c8:	mov	r0, r6
 7cc:	bl	f3f0 <test_json>
 7d0:	ldr	r1, [pc, #1048]	; bf0 <main+0xbf0>
 7d4:	mov	r3, r4
 7d8:	mov	r2, r7
 7dc:	str	r1, [sp, #8]
 7e0:	str	r4, [sp, #4]
 7e4:	str	r4, [sp]
 7e8:	ldr	r1, [pc, #1028]	; bf4 <main+0xbf4>
 7ec:	orr	r5, r5, r0
 7f0:	mov	r0, r6
 7f4:	bl	f3f0 <test_json>
 7f8:	ldr	r1, [pc, #1016]	; bf8 <main+0xbf8>
 7fc:	mov	r3, r4
 800:	mov	r2, r7
 804:	str	r1, [sp, #8]
 808:	str	r4, [sp, #4]
 80c:	str	r4, [sp]
 810:	ldr	r1, [pc, #996]	; bfc <main+0xbfc>
 814:	orr	r5, r5, r0
 818:	mov	r0, r6
 81c:	bl	f3f0 <test_json>
 820:	mov	r2, #716	; 0x2cc
 824:	mov	r3, r4
 828:	str	r2, [sp, #8]
 82c:	str	r4, [sp, #4]
 830:	str	r4, [sp]
 834:	ldr	r2, [pc, #964]	; c00 <main+0xc00>
 838:	ldr	r1, [pc, #964]	; c04 <main+0xc04>
 83c:	orr	r5, r5, r0
 840:	mov	r0, r6
 844:	bl	f3f0 <test_json>
 848:	ldr	r2, [pc, #952]	; c08 <main+0xc08>
 84c:	mov	r3, r4
 850:	str	r2, [sp, #8]
 854:	str	r4, [sp, #4]
 858:	str	r4, [sp]
 85c:	ldr	r2, [pc, #936]	; c0c <main+0xc0c>
 860:	ldr	r1, [pc, #936]	; c10 <main+0xc10>
 864:	orr	r5, r5, r0
 868:	mov	r0, r6
 86c:	bl	f3f0 <test_json>
 870:	ldr	r2, [pc, #924]	; c14 <main+0xc14>
 874:	mov	r3, r4
 878:	str	r2, [sp, #8]
 87c:	str	r4, [sp, #4]
 880:	str	r4, [sp]
 884:	ldr	r2, [pc, #908]	; c18 <main+0xc18>
 888:	ldr	r1, [pc, #908]	; c1c <main+0xc1c>
 88c:	orr	r5, r5, r0
 890:	mov	r0, r6
 894:	bl	f3f0 <test_json>
 898:	ldr	r1, [pc, #896]	; c20 <main+0xc20>
 89c:	mov	r3, r4
 8a0:	mov	r2, r8
 8a4:	str	r1, [sp, #8]
 8a8:	str	r4, [sp, #4]
 8ac:	str	r4, [sp]
 8b0:	ldr	r1, [pc, #876]	; c24 <main+0xc24>
 8b4:	orr	r5, r5, r0
 8b8:	mov	r0, r6
 8bc:	bl	f3f0 <test_json>
 8c0:	ldr	r1, [pc, #864]	; c28 <main+0xc28>
 8c4:	mov	r2, r8
 8c8:	mov	r3, r4
 8cc:	str	r1, [sp, #8]
 8d0:	str	r4, [sp, #4]
 8d4:	str	r4, [sp]
 8d8:	ldr	r1, [pc, #844]	; c2c <main+0xc2c>
 8dc:	orr	r5, r5, r0
 8e0:	mov	r0, r6
 8e4:	bl	f3f0 <test_json>
 8e8:	ldr	r2, [pc, #832]	; c30 <main+0xc30>
 8ec:	mov	r3, r4
 8f0:	str	r2, [sp, #8]
 8f4:	str	r4, [sp, #4]
 8f8:	str	r4, [sp]
 8fc:	ldr	r2, [pc, #816]	; c34 <main+0xc34>
 900:	ldr	r1, [pc, #816]	; c38 <main+0xc38>
 904:	orr	r5, r5, r0
 908:	mov	r0, r6
 90c:	bl	f3f0 <test_json>
 910:	ldr	r2, [pc, #804]	; c3c <main+0xc3c>
 914:	mov	r3, r4
 918:	str	r2, [sp, #8]
 91c:	str	r4, [sp, #4]
 920:	str	r4, [sp]
 924:	ldr	r2, [pc, #788]	; c40 <main+0xc40>
 928:	ldr	r1, [pc, #788]	; c44 <main+0xc44>
 92c:	orr	r5, r5, r0
 930:	mov	r0, r6
 934:	bl	f3f0 <test_json>
 938:	mov	r2, #776	; 0x308
 93c:	mov	r3, r4
 940:	str	r2, [sp, #8]
 944:	str	r4, [sp, #4]
 948:	str	r4, [sp]
 94c:	ldr	r2, [pc, #756]	; c48 <main+0xc48>
 950:	ldr	r1, [pc, #756]	; c4c <main+0xc4c>
 954:	orr	r5, r5, r0
 958:	mov	r0, r6
 95c:	bl	f3f0 <test_json>
 960:	ldr	r1, [pc, #744]	; c50 <main+0xc50>
 964:	mov	r2, r7
 968:	mov	r3, r4
 96c:	str	r1, [sp, #8]
 970:	str	r4, [sp, #4]
 974:	str	r4, [sp]
 978:	ldr	r1, [pc, #724]	; c54 <main+0xc54>
 97c:	orr	r5, r5, r0
 980:	mov	r0, r6
 984:	bl	f3f0 <test_json>
 988:	ldr	r2, [pc, #712]	; c58 <main+0xc58>
 98c:	mov	r3, r4
 990:	str	r2, [sp, #8]
 994:	str	r4, [sp, #4]
 998:	str	r4, [sp]
 99c:	ldr	r2, [pc, #696]	; c5c <main+0xc5c>
 9a0:	ldr	r1, [pc, #696]	; c60 <main+0xc60>
 9a4:	orr	r5, r5, r0
 9a8:	mov	r0, r6
 9ac:	bl	f3f0 <test_json>
 9b0:	ldr	r2, [pc, #684]	; c64 <main+0xc64>
 9b4:	mov	r3, r4
 9b8:	str	r2, [sp, #8]
 9bc:	str	r4, [sp, #4]
 9c0:	str	r4, [sp]
 9c4:	ldr	r2, [pc, #668]	; c68 <main+0xc68>
 9c8:	ldr	r1, [pc, #668]	; c6c <main+0xc6c>
 9cc:	orr	r5, r5, r0
 9d0:	mov	r0, r6
 9d4:	bl	f3f0 <test_json>
 9d8:	mov	r2, #796	; 0x31c
 9dc:	mov	r3, r4
 9e0:	str	r2, [sp, #8]
 9e4:	str	r4, [sp, #4]
 9e8:	str	r4, [sp]
 9ec:	ldr	r2, [pc, #636]	; c70 <main+0xc70>
 9f0:	ldr	r1, [pc, #636]	; c74 <main+0xc74>
 9f4:	orr	r5, r5, r0
 9f8:	mov	r0, r6
 9fc:	bl	f3f0 <test_json>
 a00:	ldr	r2, [pc, #624]	; c78 <main+0xc78>
 a04:	mov	r3, r4
 a08:	str	r2, [sp, #8]
 a0c:	str	r4, [sp, #4]
 a10:	str	r4, [sp]
 a14:	ldr	r2, [pc, #608]	; c7c <main+0xc7c>
 a18:	ldr	r1, [pc, #608]	; c80 <main+0xc80>
 a1c:	orr	r5, r5, r0
 a20:	mov	r0, r6
 a24:	bl	f3f0 <test_json>
 a28:	ldr	r2, [pc, #596]	; c84 <main+0xc84>
 a2c:	mov	r3, r4
 a30:	str	r2, [sp, #8]
 a34:	str	r4, [sp, #4]
 a38:	str	r4, [sp]
 a3c:	ldr	r2, [pc, #580]	; c88 <main+0xc88>
 a40:	ldr	r1, [pc, #580]	; c8c <main+0xc8c>
 a44:	orr	r5, r5, r0
 a48:	mov	r0, r6
 a4c:	bl	f3f0 <test_json>
 a50:	orrs	r3, r5, r0
 a54:	mvnne	r0, #0
 a58:	moveq	r0, r4
 a5c:	add	sp, sp, #20
 a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a64:	.word	0x00000000
 a68:	.word	0x000006e4
 a6c:	.word	0x000028b0
 a70:	.word	0x000028fc
 a74:	.word	0x00002948
 a78:	.word	0x00002d98
 a7c:	.word	0x0000020d
 a80:	.word	0x00002898
 a84:	.word	0x000028d4
 a88:	.word	0x00000213
 a8c:	.word	0x00002920
 a90:	.word	0x00000216
 a94:	.word	0x00002974
 a98:	.word	0x00000219
 a9c:	.word	0x000029a8
 aa0:	.word	0x000029e4
 aa4:	.word	0x0000021f
 aa8:	.word	0x00002a0c
 aac:	.word	0x00000223
 ab0:	.word	0x00002a38
 ab4:	.word	0x00000227
 ab8:	.word	0x00000678
 abc:	.word	0x0000022b
 ac0:	.word	0x00002a60
 ac4:	.word	0x0000022e
 ac8:	.word	0x00002a78
 acc:	.word	0x00000231
 ad0:	.word	0x00002a9c
 ad4:	.word	0x00002ac0
 ad8:	.word	0x00000237
 adc:	.word	0x00002af0
 ae0:	.word	0x0000023a
 ae4:	.word	0x00002b28
 ae8:	.word	0x0000023d
 aec:	.word	0x00002b48
 af0:	.word	0x00000241
 af4:	.word	0x00002b6c
 af8:	.word	0x00000245
 afc:	.word	0x00000934
 b00:	.word	0x00000259
 b04:	.word	0x00002b90
 b08:	.word	0x00002bb4
 b0c:	.word	0x0000025f
 b10:	.word	0x00002bd8
 b14:	.word	0x00002c00
 b18:	.word	0x00000262
 b1c:	.word	0x00002c24
 b20:	.word	0x00000265
 b24:	.word	0x00002c48
 b28:	.word	0x00002c68
 b2c:	.word	0x00002c8c
 b30:	.word	0x00002cac
 b34:	.word	0x0000026b
 b38:	.word	0x00002cd0
 b3c:	.word	0x00002cf0
 b40:	.word	0x0000026e
 b44:	.word	0x00002d14
 b48:	.word	0x00000271
 b4c:	.word	0x00002d40
 b50:	.word	0x00002d7c
 b54:	.word	0x00000277
 b58:	.word	0x00003168
 b5c:	.word	0x0000027a
 b60:	.word	0x00002dc4
 b64:	.word	0x00002e0c
 b68:	.word	0x0000027e
 b6c:	.word	0x00002e60
 b70:	.word	0x00002eac
 b74:	.word	0x00000282
 b78:	.word	0x00002f04
 b7c:	.word	0x00002f68
 b80:	.word	0x00000286
 b84:	.word	0x00002fd8
 b88:	.word	0x00000289
 b8c:	.word	0x00003004
 b90:	.word	0x0000028d
 b94:	.word	0x0000302c
 b98:	.word	0x0000304c
 b9c:	.word	0x00000293
 ba0:	.word	0x0000306c
 ba4:	.word	0x00000296
 ba8:	.word	0x0000308c
 bac:	.word	0x00000299
 bb0:	.word	0x000030ac
 bb4:	.word	0x000030cc
 bb8:	.word	0x0000029f
 bbc:	.word	0x000030ec
 bc0:	.word	0x000002a2
 bc4:	.word	0x0000310c
 bc8:	.word	0x000002a5
 bcc:	.word	0x00003134
 bd0:	.word	0x0000343c
 bd4:	.word	0x000002ab
 bd8:	.word	0x000002ae
 bdc:	.word	0x0000318c
 be0:	.word	0x000002b2
 be4:	.word	0x000031d4
 be8:	.word	0x000002b6
 bec:	.word	0x00003220
 bf0:	.word	0x000002ba
 bf4:	.word	0x00003280
 bf8:	.word	0x000002bd
 bfc:	.word	0x000032a8
 c00:	.word	0x000032cc
 c04:	.word	0x0000332c
 c08:	.word	0x000002db
 c0c:	.word	0x0000339c
 c10:	.word	0x000033cc
 c14:	.word	0x000002de
 c18:	.word	0x0000340c
 c1c:	.word	0x00003420
 c20:	.word	0x000002e2
 c24:	.word	0x00003480
 c28:	.word	0x000002ee
 c2c:	.word	0x000034c8
 c30:	.word	0x000002fe
 c34:	.word	0x00003568
 c38:	.word	0x0000358c
 c3c:	.word	0x00000302
 c40:	.word	0x000035b4
 c44:	.word	0x000035e0
 c48:	.word	0x00003610
 c4c:	.word	0x00003680
 c50:	.word	0x0000030d
 c54:	.word	0x000036fc
 c58:	.word	0x00000312
 c5c:	.word	0x00003774
 c60:	.word	0x000037e4
 c64:	.word	0x00000317
 c68:	.word	0x00003860
 c6c:	.word	0x000038e0
 c70:	.word	0x0000396c
 c74:	.word	0x000039dc
 c78:	.word	0x00000321
 c7c:	.word	0x00003a58
 c80:	.word	0x00003ad8
 c84:	.word	0x00000326
 c88:	.word	0x00003b64
 c8c:	.word	0x00003be8
