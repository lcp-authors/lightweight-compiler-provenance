
../repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-dim.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dim_info_init>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldr	r0, [pc, #40]	; 40 <dim_info_init+0x40>
      14:	mov	r3, #0
      18:	str	r3, [r0]
      1c:	ldr	ip, [pc, #32]	; 44 <dim_info_init+0x44>
      20:	mov	r2, #0
      24:	str	r2, [ip]
      28:	ldr	r0, [pc, #24]	; 48 <dim_info_init+0x48>
      2c:	mvn	r1, #0
      30:	str	r1, [r0]
      34:	ldr	lr, [sp, #4]
      38:	add	sp, sp, #8
      3c:	bx	lr
      40:	.word	0x00000000
      44:	.word	0x00000044
      48:	.word	0x00000068

0000004c <dim_info_done>:
      4c:	mov	ip, sp
      50:	sub	sp, sp, #8
      54:	str	ip, [sp]
      58:	str	lr, [sp, #4]
      5c:	ldr	lr, [sp, #4]
      60:	add	sp, sp, #8
      64:	bx	lr

00000068 <print_all_distinct_dims>:
      68:	mov	ip, sp
      6c:	sub	sp, sp, #32
      70:	str	ip, [sp, #4]
      74:	str	lr, [sp, #8]
      78:	str	r4, [sp, #16]
      7c:	str	r5, [sp, #20]
      80:	str	r6, [sp, #24]
      84:	mov	r5, r0
      88:	ldr	r2, [pc, #496]	; 280 <print_all_distinct_dims+0x218>
      8c:	ldr	r3, [r2]
      90:	cmp	r5, r3
      94:	blt	ac <print_all_distinct_dims+0x44>
      98:	ldr	r0, [pc, #512]	; 2a0 <print_all_distinct_dims+0x238>
      9c:	ldr	r1, [pc, #532]	; 2b8 <print_all_distinct_dims+0x250>
      a0:	mov	r2, #50	; 0x32
      a4:	ldr	r3, [pc, #480]	; 28c <print_all_distinct_dims+0x224>
      a8:	bl	0 <__assert_fail>
      ac:	ldr	r0, [pc, #488]	; 29c <print_all_distinct_dims+0x234>
      b0:	ldr	r1, [r0, r5, lsl #2]
      b4:	cmp	r1, #0
      b8:	beq	268 <print_all_distinct_dims+0x200>
      bc:	ldr	r1, [pc, #460]	; 290 <print_all_distinct_dims+0x228>
      c0:	ldr	ip, [r1, r5, lsl #2]
      c4:	lsl	ip, ip, #2
      c8:	add	r0, ip, #4
      cc:	bl	0 <malloc>
      d0:	mov	r4, r0
      d4:	cmp	r4, #0
      d8:	bne	108 <print_all_distinct_dims+0xa0>
      dc:	mvn	r0, #0
      e0:	ldr	r1, [pc, #448]	; 2a8 <print_all_distinct_dims+0x240>
      e4:	ldr	r2, [pc, #420]	; 290 <print_all_distinct_dims+0x228>
      e8:	ldr	r3, [r2, r5, lsl #2]
      ec:	lsl	r2, r3, #2
      f0:	add	r2, r2, #4
      f4:	ldr	r3, [pc, #444]	; 2b8 <print_all_distinct_dims+0x250>
      f8:	mov	r6, #61	; 0x3d
      fc:	str	r6, [sp]
     100:	bl	0 <coda_set_error>
     104:	bl	0 <handle_coda_error>
     108:	mov	r1, #0
     10c:	ldr	r2, [pc, #380]	; 290 <print_all_distinct_dims+0x228>
     110:	ldr	r0, [r2, r5, lsl #2]
     114:	lsl	r2, r0, #2
     118:	add	r2, r2, #4
     11c:	mov	r0, r4
     120:	bl	0 <memset>
     124:	mov	r1, #0
     128:	mov	r0, r1
     12c:	asr	r3, r0, #31
     130:	ldr	ip, [pc, #376]	; 2b0 <print_all_distinct_dims+0x248>
     134:	ldr	r2, [pc, #360]	; 2a4 <print_all_distinct_dims+0x23c>
     138:	ldr	r2, [r2, r5, lsl #2]
     13c:	lsl	r2, r2, #3
     140:	add	r2, ip, r2
     144:	sub	lr, r2, #4096	; 0x1000
     148:	ldr	ip, [lr, #4088]	; 0xff8
     14c:	sub	lr, r2, #4096	; 0x1000
     150:	ldr	r2, [lr, #4092]	; 0xffc
     154:	cmp	r3, r2
     158:	bne	168 <print_all_distinct_dims+0x100>
     15c:	cmp	r0, ip
     160:	bcc	170 <print_all_distinct_dims+0x108>
     164:	b	1b0 <print_all_distinct_dims+0x148>
     168:	cmp	r3, r2
     16c:	bge	1b0 <print_all_distinct_dims+0x148>
     170:	ldr	ip, [pc, #308]	; 2ac <print_all_distinct_dims+0x244>
     174:	ldr	r0, [ip, r5, lsl #2]
     178:	ldr	ip, [r0, r1, lsl #2]
     17c:	cmp	ip, #0
     180:	blt	1a8 <print_all_distinct_dims+0x140>
     184:	ldr	r0, [pc, #288]	; 2ac <print_all_distinct_dims+0x244>
     188:	ldr	r3, [r0, r5, lsl #2]
     18c:	ldr	r3, [r3, r1, lsl #2]
     190:	ldr	r2, [pc, #276]	; 2ac <print_all_distinct_dims+0x244>
     194:	ldr	r2, [r2, r5, lsl #2]
     198:	ldr	r0, [r2, r1, lsl #2]
     19c:	ldr	ip, [r4, r0, lsl #2]
     1a0:	add	r2, ip, #1
     1a4:	str	r2, [r4, r3, lsl #2]
     1a8:	add	r1, r1, #1
     1ac:	b	128 <print_all_distinct_dims+0xc0>
     1b0:	ldr	r0, [pc, #260]	; 2bc <print_all_distinct_dims+0x254>
     1b4:	add	r1, r5, #1
     1b8:	bl	0 <printf>
     1bc:	ldr	ip, [pc, #208]	; 294 <print_all_distinct_dims+0x22c>
     1c0:	ldr	r6, [ip, r5, lsl #2]
     1c4:	ldr	ip, [pc, #196]	; 290 <print_all_distinct_dims+0x228>
     1c8:	ldr	r1, [ip, r5, lsl #2]
     1cc:	cmp	r6, r1
     1d0:	bge	1f4 <print_all_distinct_dims+0x18c>
     1d4:	ldr	r1, [r4, r6, lsl #2]
     1d8:	cmp	r1, #0
     1dc:	ble	1ec <print_all_distinct_dims+0x184>
     1e0:	ldr	r0, [pc, #176]	; 298 <print_all_distinct_dims+0x230>
     1e4:	mov	r1, r6
     1e8:	bl	0 <printf>
     1ec:	add	r6, r6, #1
     1f0:	b	1c4 <print_all_distinct_dims+0x15c>
     1f4:	ldr	r0, [pc, #136]	; 284 <print_all_distinct_dims+0x21c>
     1f8:	ldr	r1, [pc, #144]	; 290 <print_all_distinct_dims+0x228>
     1fc:	ldr	r1, [r1, r5, lsl #2]
     200:	bl	0 <printf>
     204:	ldr	r0, [pc, #168]	; 2b4 <print_all_distinct_dims+0x24c>
     208:	bl	0 <printf>
     20c:	ldr	r0, [pc, #128]	; 294 <print_all_distinct_dims+0x22c>
     210:	ldr	r6, [r0, r5, lsl #2]
     214:	ldr	ip, [pc, #116]	; 290 <print_all_distinct_dims+0x228>
     218:	ldr	r3, [ip, r5, lsl #2]
     21c:	cmp	r6, r3
     220:	bge	244 <print_all_distinct_dims+0x1dc>
     224:	ldr	r3, [r4, r6, lsl #2]
     228:	cmp	r3, #0
     22c:	ble	23c <print_all_distinct_dims+0x1d4>
     230:	ldr	r0, [pc, #96]	; 298 <print_all_distinct_dims+0x230>
     234:	ldr	r1, [r4, r6, lsl #2]
     238:	bl	0 <printf>
     23c:	add	r6, r6, #1
     240:	b	214 <print_all_distinct_dims+0x1ac>
     244:	ldr	r0, [pc, #56]	; 284 <print_all_distinct_dims+0x21c>
     248:	ldr	r1, [pc, #64]	; 290 <print_all_distinct_dims+0x228>
     24c:	ldr	r1, [r1, r5, lsl #2]
     250:	ldr	r1, [r4, r1, lsl #2]
     254:	bl	0 <printf>
     258:	ldr	r0, [pc, #40]	; 288 <print_all_distinct_dims+0x220>
     25c:	bl	0 <printf>
     260:	mov	r0, r4
     264:	bl	0 <free>
     268:	ldr	r4, [sp, #16]
     26c:	ldr	r5, [sp, #20]
     270:	ldr	r6, [sp, #24]
     274:	ldr	lr, [sp, #8]
     278:	add	sp, sp, #32
     27c:	bx	lr
     280:	.word	0x00000000
     284:	.word	0x0000012c
     288:	.word	0x00000134
     28c:	.word	0x0000019a
     290:	.word	0x00000004
     294:	.word	0x00000024
     298:	.word	0x00000130
     29c:	.word	0x00000048
     2a0:	.word	0x000000eb
     2a4:	.word	0x0000008c
     2a8:	.word	0x00000165
     2ac:	.word	0x0000006c
     2b0:	.word	0x000000f0
     2b4:	.word	0x00000106
     2b8:	.word	0x00000000
     2bc:	.word	0x00000157

000002c0 <get_all_dims_for_array>:
     2c0:	mov	ip, sp
     2c4:	sub	sp, sp, #88	; 0x58
     2c8:	str	ip, [sp]
     2cc:	str	lr, [sp, #4]
     2d0:	str	r4, [sp, #8]
     2d4:	str	r5, [sp, #12]
     2d8:	str	r6, [sp, #16]
     2dc:	str	r7, [sp, #20]
     2e0:	str	r8, [sp, #24]
     2e4:	str	r9, [sp, #28]
     2e8:	mov	r5, r2
     2ec:	mov	r4, r1
     2f0:	mov	r6, r0
     2f4:	ldr	r0, [pc, #1340]	; 838 <get_all_dims_for_array+0x578>
     2f8:	add	r1, sp, #36	; 0x24
     2fc:	bl	0 <coda_cursor_get_type_class>
     300:	cmp	r0, #0
     304:	beq	30c <get_all_dims_for_array+0x4c>
     308:	bl	0 <handle_coda_error>
     30c:	ldr	r3, [sp, #36]	; 0x24
     310:	cmp	r3, #4
     314:	bcs	688 <get_all_dims_for_array+0x3c8>
     318:	cmp	r3, #0
     31c:	beq	590 <get_all_dims_for_array+0x2d0>
     320:	cmp	r3, #1
     324:	bne	698 <get_all_dims_for_array+0x3d8>
     328:	ldr	r1, [pc, #1300]	; 844 <get_all_dims_for_array+0x584>
     32c:	lsl	r2, r4, #6
     330:	add	r2, r2, r4, lsl #4
     334:	add	r7, r1, r2
     338:	ldr	r8, [r7]
     33c:	ldr	r0, [pc, #1240]	; 81c <get_all_dims_for_array+0x55c>
     340:	ldr	r1, [r0]
     344:	cmp	r4, r1
     348:	beq	468 <get_all_dims_for_array+0x1a8>
     34c:	cmp	r4, #0
     350:	bne	35c <get_all_dims_for_array+0x9c>
     354:	mov	r2, #0
     358:	str	r2, [r7, #44]	; 0x2c
     35c:	ldr	r2, [pc, #1248]	; 844 <get_all_dims_for_array+0x584>
     360:	lsl	r1, r4, #6
     364:	add	r1, r1, r4, lsl #4
     368:	add	ip, r2, r1
     36c:	ldr	r1, [r7, #44]	; 0x2c
     370:	ldr	r0, [r7, #40]	; 0x28
     374:	mul	r3, r1, r0
     378:	str	r3, [ip, #124]	; 0x7c
     37c:	mov	r9, #1
     380:	mov	ip, r8
     384:	ldr	r0, [r7, #4]
     388:	add	r0, r8, r0
     38c:	cmp	ip, r0
     390:	bge	3d0 <get_all_dims_for_array+0x110>
     394:	ldr	r0, [pc, #1172]	; 830 <get_all_dims_for_array+0x570>
     398:	ldr	r0, [r0, ip, lsl #2]
     39c:	cmp	r0, #0
     3a0:	beq	3bc <get_all_dims_for_array+0xfc>
     3a4:	ldr	r0, [pc, #1172]	; 840 <get_all_dims_for_array+0x580>
     3a8:	ldr	r2, [r0, ip, lsl #2]
     3ac:	ldr	r1, [r7, #44]	; 0x2c
     3b0:	ldr	r0, [r2, r1, lsl #2]
     3b4:	mul	r9, r9, r0
     3b8:	b	3c8 <get_all_dims_for_array+0x108>
     3bc:	ldr	r2, [pc, #1124]	; 828 <get_all_dims_for_array+0x568>
     3c0:	ldr	r2, [r2, ip, lsl #2]
     3c4:	mul	r9, r9, r2
     3c8:	add	ip, ip, #1
     3cc:	b	384 <get_all_dims_for_array+0xc4>
     3d0:	cmp	r9, #0
     3d4:	ble	7f8 <get_all_dims_for_array+0x538>
     3d8:	ldr	r0, [pc, #1112]	; 838 <get_all_dims_for_array+0x578>
     3dc:	bl	0 <coda_cursor_goto_first_array_element>
     3e0:	cmp	r0, #0
     3e4:	beq	3ec <get_all_dims_for_array+0x12c>
     3e8:	bl	0 <handle_coda_error>
     3ec:	mov	r7, #0
     3f0:	cmp	r7, r9
     3f4:	bge	45c <get_all_dims_for_array+0x19c>
     3f8:	add	r0, r6, #1
     3fc:	add	r1, r4, #1
     400:	mov	r2, r5
     404:	bl	2c0 <get_all_dims_for_array>
     408:	sub	r3, r9, #1
     40c:	cmp	r7, r3
     410:	bge	454 <get_all_dims_for_array+0x194>
     414:	ldr	r0, [pc, #1052]	; 838 <get_all_dims_for_array+0x578>
     418:	bl	0 <coda_cursor_goto_next_array_element>
     41c:	cmp	r0, #0
     420:	beq	428 <get_all_dims_for_array+0x168>
     424:	bl	0 <handle_coda_error>
     428:	ldr	r1, [pc, #1044]	; 844 <get_all_dims_for_array+0x584>
     42c:	lsl	ip, r4, #6
     430:	add	r2, ip, r4, lsl #4
     434:	add	r2, r1, r2
     438:	ldr	ip, [pc, #1028]	; 844 <get_all_dims_for_array+0x584>
     43c:	lsl	r0, r4, #6
     440:	add	r1, r0, r4, lsl #4
     444:	add	r3, ip, r1
     448:	ldr	ip, [r3, #124]	; 0x7c
     44c:	add	r3, ip, #1
     450:	str	r3, [r2, #124]	; 0x7c
     454:	add	r7, r7, #1
     458:	b	3f0 <get_all_dims_for_array+0x130>
     45c:	ldr	r0, [pc, #980]	; 838 <get_all_dims_for_array+0x578>
     460:	bl	0 <coda_cursor_goto_parent>
     464:	b	7f8 <get_all_dims_for_array+0x538>
     468:	ldr	r0, [pc, #968]	; 838 <get_all_dims_for_array+0x578>
     46c:	add	r1, sp, #40	; 0x28
     470:	add	r2, sp, #56	; 0x38
     474:	bl	0 <coda_cursor_get_array_dim>
     478:	cmp	r0, #0
     47c:	beq	484 <get_all_dims_for_array+0x1c4>
     480:	bl	0 <handle_coda_error>
     484:	ldr	ip, [sp, #40]	; 0x28
     488:	ldr	r0, [r7, #4]
     48c:	cmp	ip, r0
     490:	beq	4a8 <get_all_dims_for_array+0x1e8>
     494:	ldr	r0, [pc, #900]	; 820 <get_all_dims_for_array+0x560>
     498:	ldr	r1, [pc, #936]	; 848 <get_all_dims_for_array+0x588>
     49c:	mov	r2, #125	; 0x7d
     4a0:	ldr	r3, [pc, #908]	; 834 <get_all_dims_for_array+0x574>
     4a4:	bl	0 <__assert_fail>
     4a8:	mov	r4, #0
     4ac:	ldr	ip, [r7, #4]
     4b0:	cmp	r4, ip
     4b4:	bge	7f8 <get_all_dims_for_array+0x538>
     4b8:	lsl	r2, r4, #2
     4bc:	add	ip, r7, r2
     4c0:	ldr	r1, [ip, #8]
     4c4:	cmn	r1, #1
     4c8:	bne	588 <get_all_dims_for_array+0x2c8>
     4cc:	ldr	r2, [pc, #876]	; 840 <get_all_dims_for_array+0x580>
     4d0:	add	r3, r8, r4
     4d4:	ldr	r3, [r2, r3, lsl #2]
     4d8:	ldr	r2, [r7, #44]	; 0x2c
     4dc:	add	r1, sp, #56	; 0x38
     4e0:	ldr	r0, [r1, r4, lsl #2]
     4e4:	str	r0, [r3, r2, lsl #2]
     4e8:	ldr	r3, [pc, #824]	; 828 <get_all_dims_for_array+0x568>
     4ec:	add	ip, r8, r4
     4f0:	ldr	ip, [r3, ip, lsl #2]
     4f4:	cmn	ip, #1
     4f8:	beq	560 <get_all_dims_for_array+0x2a0>
     4fc:	ldr	r1, [pc, #804]	; 828 <get_all_dims_for_array+0x568>
     500:	add	r2, r8, r4
     504:	ldr	r3, [r1, r2, lsl #2]
     508:	add	ip, sp, #56	; 0x38
     50c:	ldr	r0, [ip, r4, lsl #2]
     510:	cmp	r3, r0
     514:	bge	52c <get_all_dims_for_array+0x26c>
     518:	ldr	r2, [pc, #776]	; 828 <get_all_dims_for_array+0x568>
     51c:	add	ip, r8, r4
     520:	add	r0, sp, #56	; 0x38
     524:	ldr	r1, [r0, r4, lsl #2]
     528:	str	r1, [r2, ip, lsl #2]
     52c:	ldr	r3, [pc, #760]	; 82c <get_all_dims_for_array+0x56c>
     530:	add	r1, r8, r4
     534:	ldr	r2, [r3, r1, lsl #2]
     538:	add	r0, sp, #56	; 0x38
     53c:	ldr	ip, [r0, r4, lsl #2]
     540:	cmp	r2, ip
     544:	ble	588 <get_all_dims_for_array+0x2c8>
     548:	ldr	r1, [pc, #732]	; 82c <get_all_dims_for_array+0x56c>
     54c:	add	r2, r8, r4
     550:	add	r3, sp, #56	; 0x38
     554:	ldr	r0, [r3, r4, lsl #2]
     558:	str	r0, [r1, r2, lsl #2]
     55c:	b	588 <get_all_dims_for_array+0x2c8>
     560:	ldr	r1, [pc, #704]	; 828 <get_all_dims_for_array+0x568>
     564:	add	ip, r8, r4
     568:	add	r2, sp, #56	; 0x38
     56c:	ldr	r2, [r2, r4, lsl #2]
     570:	str	r2, [r1, ip, lsl #2]
     574:	ldr	ip, [pc, #688]	; 82c <get_all_dims_for_array+0x56c>
     578:	add	r0, r8, r4
     57c:	add	r3, sp, #56	; 0x38
     580:	ldr	r1, [r3, r4, lsl #2]
     584:	str	r1, [ip, r0, lsl #2]
     588:	add	r4, r4, #1
     58c:	b	4ac <get_all_dims_for_array+0x1ec>
     590:	ldr	r0, [pc, #672]	; 838 <get_all_dims_for_array+0x578>
     594:	ldr	r1, [pc, #648]	; 824 <get_all_dims_for_array+0x564>
     598:	ldr	r1, [r1, r5, lsl #2]
     59c:	add	r2, sp, #44	; 0x2c
     5a0:	bl	0 <coda_cursor_get_record_field_available_status>
     5a4:	cmp	r0, #0
     5a8:	beq	5b0 <get_all_dims_for_array+0x2f0>
     5ac:	bl	0 <handle_coda_error>
     5b0:	ldr	r3, [sp, #44]	; 0x2c
     5b4:	cmp	r3, #0
     5b8:	bne	650 <get_all_dims_for_array+0x390>
     5bc:	ldr	r0, [pc, #640]	; 844 <get_all_dims_for_array+0x584>
     5c0:	ldr	r3, [pc, #596]	; 81c <get_all_dims_for_array+0x55c>
     5c4:	ldr	r3, [r3]
     5c8:	lsl	ip, r3, #6
     5cc:	add	r3, ip, r3, lsl #4
     5d0:	add	r5, r0, r3
     5d4:	ldr	r4, [r5]
     5d8:	mov	r6, #0
     5dc:	ldr	ip, [r5, #4]
     5e0:	cmp	r6, ip
     5e4:	bge	7f8 <get_all_dims_for_array+0x538>
     5e8:	lsl	r2, r6, #2
     5ec:	add	r0, r5, r2
     5f0:	ldr	r0, [r0, #8]
     5f4:	cmn	r0, #1
     5f8:	bne	648 <get_all_dims_for_array+0x388>
     5fc:	ldr	r3, [pc, #572]	; 840 <get_all_dims_for_array+0x580>
     600:	add	r1, r4, r6
     604:	ldr	r2, [r3, r1, lsl #2]
     608:	ldr	r1, [r5, #44]	; 0x2c
     60c:	mov	r3, #0
     610:	str	r3, [r2, r1, lsl #2]
     614:	ldr	r1, [pc, #524]	; 828 <get_all_dims_for_array+0x568>
     618:	add	r3, r4, r6
     61c:	ldr	r3, [r1, r3, lsl #2]
     620:	cmn	r3, #1
     624:	bne	638 <get_all_dims_for_array+0x378>
     628:	ldr	r1, [pc, #504]	; 828 <get_all_dims_for_array+0x568>
     62c:	add	r2, r4, r6
     630:	mov	r0, #0
     634:	str	r0, [r1, r2, lsl #2]
     638:	ldr	r1, [pc, #492]	; 82c <get_all_dims_for_array+0x56c>
     63c:	add	r0, r4, r6
     640:	mov	r2, #0
     644:	str	r2, [r1, r0, lsl #2]
     648:	add	r6, r6, #1
     64c:	b	5dc <get_all_dims_for_array+0x31c>
     650:	ldr	r0, [pc, #480]	; 838 <get_all_dims_for_array+0x578>
     654:	ldr	ip, [pc, #456]	; 824 <get_all_dims_for_array+0x564>
     658:	ldr	r1, [ip, r5, lsl #2]
     65c:	bl	0 <coda_cursor_goto_record_field_by_index>
     660:	cmp	r0, #0
     664:	beq	66c <get_all_dims_for_array+0x3ac>
     668:	bl	0 <handle_coda_error>
     66c:	add	r0, r6, #1
     670:	add	r2, r5, #1
     674:	mov	r1, r4
     678:	bl	2c0 <get_all_dims_for_array>
     67c:	ldr	r0, [pc, #436]	; 838 <get_all_dims_for_array+0x578>
     680:	bl	0 <coda_cursor_goto_parent>
     684:	b	7f8 <get_all_dims_for_array+0x538>
     688:	cmp	r3, #4
     68c:	beq	6b8 <get_all_dims_for_array+0x3f8>
     690:	cmp	r3, #5
     694:	beq	6b8 <get_all_dims_for_array+0x3f8>
     698:	ldr	r0, [pc, #412]	; 83c <get_all_dims_for_array+0x57c>
     69c:	ldr	r1, [pc, #420]	; 848 <get_all_dims_for_array+0x588>
     6a0:	movw	r2, #294	; 0x126
     6a4:	ldr	r3, [pc, #392]	; 834 <get_all_dims_for_array+0x574>
     6a8:	bl	0 <__assert_fail>
     6ac:	mov	r0, #1
     6b0:	bl	0 <exit>
     6b4:	b	7f8 <get_all_dims_for_array+0x538>
     6b8:	ldr	r0, [pc, #348]	; 81c <get_all_dims_for_array+0x55c>
     6bc:	ldr	r3, [r0]
     6c0:	cmp	r4, r3
     6c4:	beq	6dc <get_all_dims_for_array+0x41c>
     6c8:	ldr	r0, [pc, #380]	; 84c <get_all_dims_for_array+0x58c>
     6cc:	ldr	r1, [pc, #372]	; 848 <get_all_dims_for_array+0x588>
     6d0:	mov	r2, #252	; 0xfc
     6d4:	ldr	r3, [pc, #344]	; 834 <get_all_dims_for_array+0x574>
     6d8:	bl	0 <__assert_fail>
     6dc:	ldr	r0, [sp, #36]	; 0x24
     6e0:	cmp	r0, #4
     6e4:	bne	714 <get_all_dims_for_array+0x454>
     6e8:	ldr	r0, [pc, #328]	; 838 <get_all_dims_for_array+0x578>
     6ec:	add	r1, sp, #32
     6f0:	bl	0 <coda_cursor_get_string_length>
     6f4:	cmp	r0, #0
     6f8:	beq	700 <get_all_dims_for_array+0x440>
     6fc:	bl	0 <handle_coda_error>
     700:	ldr	r1, [sp, #32]
     704:	asr	r2, r1, #31
     708:	str	r1, [sp, #48]	; 0x30
     70c:	str	r2, [sp, #52]	; 0x34
     710:	b	72c <get_all_dims_for_array+0x46c>
     714:	ldr	r0, [pc, #284]	; 838 <get_all_dims_for_array+0x578>
     718:	add	r1, sp, #48	; 0x30
     71c:	bl	0 <coda_cursor_get_byte_size>
     720:	cmp	r0, #0
     724:	beq	72c <get_all_dims_for_array+0x46c>
     728:	bl	0 <handle_coda_error>
     72c:	ldr	r1, [pc, #272]	; 844 <get_all_dims_for_array+0x584>
     730:	lsl	ip, r4, #6
     734:	add	r0, ip, r4, lsl #4
     738:	add	ip, r1, r0
     73c:	ldr	r4, [ip]
     740:	ldr	r1, [pc, #248]	; 840 <get_all_dims_for_array+0x580>
     744:	ldr	r2, [r1, r4, lsl #2]
     748:	ldr	r1, [ip, #44]	; 0x2c
     74c:	ldr	r0, [sp, #48]	; 0x30
     750:	str	r0, [r2, r1, lsl #2]
     754:	ldr	r3, [pc, #204]	; 828 <get_all_dims_for_array+0x568>
     758:	ldr	r1, [r3, r4, lsl #2]
     75c:	cmn	r1, #1
     760:	beq	7e0 <get_all_dims_for_array+0x520>
     764:	ldr	r0, [pc, #188]	; 828 <get_all_dims_for_array+0x568>
     768:	ldr	r2, [r0, r4, lsl #2]
     76c:	asr	r1, r2, #31
     770:	ldr	r3, [sp, #48]	; 0x30
     774:	ldr	ip, [sp, #52]	; 0x34
     778:	cmp	r1, ip
     77c:	bne	78c <get_all_dims_for_array+0x4cc>
     780:	cmp	r2, r3
     784:	bcc	794 <get_all_dims_for_array+0x4d4>
     788:	b	7a0 <get_all_dims_for_array+0x4e0>
     78c:	cmp	r1, ip
     790:	bge	7a0 <get_all_dims_for_array+0x4e0>
     794:	ldr	r3, [pc, #140]	; 828 <get_all_dims_for_array+0x568>
     798:	ldr	ip, [sp, #48]	; 0x30
     79c:	str	ip, [r3, r4, lsl #2]
     7a0:	ldr	r2, [pc, #132]	; 82c <get_all_dims_for_array+0x56c>
     7a4:	ldr	r2, [r2, r4, lsl #2]
     7a8:	asr	r0, r2, #31
     7ac:	ldr	ip, [sp, #48]	; 0x30
     7b0:	ldr	r3, [sp, #52]	; 0x34
     7b4:	cmp	r0, r3
     7b8:	bne	7c8 <get_all_dims_for_array+0x508>
     7bc:	cmp	r2, ip
     7c0:	bhi	7d0 <get_all_dims_for_array+0x510>
     7c4:	b	7f8 <get_all_dims_for_array+0x538>
     7c8:	cmp	r0, r3
     7cc:	ble	7f8 <get_all_dims_for_array+0x538>
     7d0:	ldr	r1, [pc, #84]	; 82c <get_all_dims_for_array+0x56c>
     7d4:	ldr	r3, [sp, #48]	; 0x30
     7d8:	str	r3, [r1, r4, lsl #2]
     7dc:	b	7f8 <get_all_dims_for_array+0x538>
     7e0:	ldr	r3, [pc, #64]	; 828 <get_all_dims_for_array+0x568>
     7e4:	ldr	r0, [sp, #48]	; 0x30
     7e8:	str	r0, [r3, r4, lsl #2]
     7ec:	ldr	r2, [pc, #56]	; 82c <get_all_dims_for_array+0x56c>
     7f0:	ldr	r0, [sp, #48]	; 0x30
     7f4:	str	r0, [r2, r4, lsl #2]
     7f8:	ldr	r4, [sp, #8]
     7fc:	ldr	r5, [sp, #12]
     800:	ldr	r6, [sp, #16]
     804:	ldr	r7, [sp, #20]
     808:	ldr	r8, [sp, #24]
     80c:	ldr	r9, [sp, #28]
     810:	ldr	lr, [sp, #4]
     814:	add	sp, sp, #88	; 0x58
     818:	bx	lr
     81c:	.word	0x00000d20
     820:	.word	0x00000136
     824:	.word	0x00000da4
     828:	.word	0x00000004
     82c:	.word	0x00000024
     830:	.word	0x00000048
     834:	.word	0x000001b2
     838:	.word	0x00000090
     83c:	.word	0x00000163
     840:	.word	0x0000006c
     844:	.word	0x00000320
     848:	.word	0x00000000
     84c:	.word	0x000000c3

00000850 <dim_enter_array>:
     850:	mov	ip, sp
     854:	sub	sp, sp, #112	; 0x70
     858:	str	ip, [sp, #4]
     85c:	str	lr, [sp, #8]
     860:	str	r4, [sp, #24]
     864:	str	r5, [sp, #28]
     868:	str	r6, [sp, #32]
     86c:	str	r7, [sp, #36]	; 0x24
     870:	str	r8, [sp, #40]	; 0x28
     874:	str	r9, [sp, #44]	; 0x2c
     878:	str	sl, [sp, #48]	; 0x30
     87c:	str	fp, [sp, #52]	; 0x34
     880:	ldr	r0, [pc, #2496]	; 1248 <dim_enter_array+0x9f8>
     884:	ldr	r2, [pc, #2448]	; 121c <dim_enter_array+0x9cc>
     888:	ldr	r1, [r2]
     88c:	lsl	ip, r1, #6
     890:	add	r2, ip, r1, lsl #4
     894:	add	r8, r0, r2
     898:	ldr	r0, [pc, #2424]	; 1218 <dim_enter_array+0x9c8>
     89c:	ldr	r1, [pc, #2436]	; 1228 <dim_enter_array+0x9d8>
     8a0:	ldr	r2, [r1]
     8a4:	ldr	r0, [r0, r2, lsl #2]
     8a8:	add	r1, sp, #60	; 0x3c
     8ac:	bl	0 <coda_type_get_class>
     8b0:	cmp	r0, #0
     8b4:	beq	8bc <dim_enter_array+0x6c>
     8b8:	bl	0 <handle_coda_error>
     8bc:	ldr	r2, [sp, #60]	; 0x3c
     8c0:	cmp	r2, #5
     8c4:	bcs	96c <dim_enter_array+0x11c>
     8c8:	cmp	r2, #1
     8cc:	beq	910 <dim_enter_array+0xc0>
     8d0:	cmp	r2, #4
     8d4:	bne	9e0 <dim_enter_array+0x190>
     8d8:	ldr	r3, [pc, #2360]	; 1218 <dim_enter_array+0x9c8>
     8dc:	ldr	r0, [pc, #2372]	; 1228 <dim_enter_array+0x9d8>
     8e0:	ldr	ip, [r0]
     8e4:	ldr	r0, [r3, ip, lsl #2]
     8e8:	add	r1, sp, #56	; 0x38
     8ec:	bl	0 <coda_type_get_string_length>
     8f0:	cmp	r0, #0
     8f4:	beq	8fc <dim_enter_array+0xac>
     8f8:	bl	0 <handle_coda_error>
     8fc:	mov	ip, #1
     900:	str	ip, [r8, #4]
     904:	ldr	ip, [sp, #56]	; 0x38
     908:	str	ip, [r8, #8]
     90c:	b	a90 <dim_enter_array+0x240>
     910:	ldr	r2, [pc, #2304]	; 1218 <dim_enter_array+0x9c8>
     914:	ldr	r3, [pc, #2316]	; 1228 <dim_enter_array+0x9d8>
     918:	ldr	ip, [r3]
     91c:	ldr	r0, [r2, ip, lsl #2]
     920:	add	r1, sp, #64	; 0x40
     924:	add	r2, sp, #80	; 0x50
     928:	bl	0 <coda_type_get_array_dim>
     92c:	cmp	r0, #0
     930:	beq	938 <dim_enter_array+0xe8>
     934:	bl	0 <handle_coda_error>
     938:	ldr	r1, [sp, #64]	; 0x40
     93c:	str	r1, [r8, #4]
     940:	mov	ip, #0
     944:	ldr	r3, [sp, #64]	; 0x40
     948:	cmp	ip, r3
     94c:	bge	a90 <dim_enter_array+0x240>
     950:	lsl	r1, ip, #2
     954:	add	r0, r8, r1
     958:	add	r2, sp, #80	; 0x50
     95c:	ldr	r3, [r2, ip, lsl #2]
     960:	str	r3, [r0, #8]
     964:	add	ip, ip, #1
     968:	b	944 <dim_enter_array+0xf4>
     96c:	cmp	r2, #5
     970:	beq	a00 <dim_enter_array+0x1b0>
     974:	cmp	r2, #6
     978:	bne	9e0 <dim_enter_array+0x190>
     97c:	ldr	r1, [pc, #2196]	; 1218 <dim_enter_array+0x9c8>
     980:	ldr	r2, [pc, #2208]	; 1228 <dim_enter_array+0x9d8>
     984:	ldr	r0, [r2]
     988:	ldr	r0, [r1, r0, lsl #2]
     98c:	add	r1, sp, #68	; 0x44
     990:	bl	0 <coda_type_get_special_type>
     994:	cmp	r0, #0
     998:	beq	9a0 <dim_enter_array+0x150>
     99c:	bl	0 <handle_coda_error>
     9a0:	ldr	r3, [sp, #68]	; 0x44
     9a4:	cmp	r3, #3
     9a8:	bne	9c0 <dim_enter_array+0x170>
     9ac:	mov	r1, #1
     9b0:	str	r1, [r8, #4]
     9b4:	mov	r0, #2
     9b8:	str	r0, [r8, #8]
     9bc:	b	a90 <dim_enter_array+0x240>
     9c0:	ldr	r0, [pc, #2168]	; 1240 <dim_enter_array+0x9f0>
     9c4:	ldr	r1, [pc, #2180]	; 1250 <dim_enter_array+0xa00>
     9c8:	movw	r2, #349	; 0x15d
     9cc:	ldr	r3, [pc, #2152]	; 123c <dim_enter_array+0x9ec>
     9d0:	bl	0 <__assert_fail>
     9d4:	mov	r0, #1
     9d8:	bl	0 <exit>
     9dc:	b	a90 <dim_enter_array+0x240>
     9e0:	ldr	r0, [pc, #2136]	; 1240 <dim_enter_array+0x9f0>
     9e4:	ldr	r1, [pc, #2148]	; 1250 <dim_enter_array+0xa00>
     9e8:	movw	r2, #386	; 0x182
     9ec:	ldr	r3, [pc, #2120]	; 123c <dim_enter_array+0x9ec>
     9f0:	bl	0 <__assert_fail>
     9f4:	mov	r0, #1
     9f8:	bl	0 <exit>
     9fc:	b	a90 <dim_enter_array+0x240>
     a00:	ldr	r1, [pc, #2064]	; 1218 <dim_enter_array+0x9c8>
     a04:	ldr	r3, [pc, #2076]	; 1228 <dim_enter_array+0x9d8>
     a08:	ldr	r0, [r3]
     a0c:	ldr	r0, [r1, r0, lsl #2]
     a10:	add	r1, sp, #72	; 0x48
     a14:	bl	0 <coda_type_get_bit_size>
     a18:	cmp	r0, #0
     a1c:	beq	a24 <dim_enter_array+0x1d4>
     a20:	bl	0 <handle_coda_error>
     a24:	mov	ip, #1
     a28:	str	ip, [r8, #4]
     a2c:	ldr	r1, [sp, #76]	; 0x4c
     a30:	cmp	r1, #0
     a34:	blt	a88 <dim_enter_array+0x238>
     a38:	ldr	r0, [sp, #72]	; 0x48
     a3c:	mov	ip, #0
     a40:	and	r3, r0, #7
     a44:	orr	r1, ip, r3
     a48:	cmp	r1, #0
     a4c:	bne	a58 <dim_enter_array+0x208>
     a50:	mov	r2, #0
     a54:	b	a5c <dim_enter_array+0x20c>
     a58:	mov	r2, #1
     a5c:	ldr	r0, [sp, #72]	; 0x48
     a60:	ldr	ip, [sp, #76]	; 0x4c
     a64:	asr	r1, ip, #3
     a68:	lsr	r3, r0, #3
     a6c:	orr	r0, r3, ip, lsl #29
     a70:	asr	ip, r2, #31
     a74:	adds	lr, r0, r2
     a78:	adc	r1, r1, ip
     a7c:	mov	ip, lr
     a80:	str	ip, [r8, #8]
     a84:	b	a90 <dim_enter_array+0x240>
     a88:	mvn	r1, #0
     a8c:	str	r1, [r8, #8]
     a90:	ldr	r3, [pc, #1980]	; 1254 <dim_enter_array+0xa04>
     a94:	ldr	r0, [r3]
     a98:	cmp	r0, #0
     a9c:	bne	abc <dim_enter_array+0x26c>
     aa0:	mvn	ip, #0
     aa4:	str	ip, [r8]
     aa8:	mov	r1, #0
     aac:	str	r1, [r8, #40]	; 0x28
     ab0:	mov	r3, #0
     ab4:	str	r3, [r8, #44]	; 0x2c
     ab8:	b	11e0 <dim_enter_array+0x990>
     abc:	ldr	r0, [pc, #1864]	; 120c <dim_enter_array+0x9bc>
     ac0:	ldr	r7, [r0]
     ac4:	str	r7, [r8]
     ac8:	ldr	r2, [pc, #1852]	; 120c <dim_enter_array+0x9bc>
     acc:	ldr	r2, [r2]
     ad0:	ldr	r0, [r8, #4]
     ad4:	add	r0, r2, r0
     ad8:	cmp	r0, #8
     adc:	ble	af4 <dim_enter_array+0x2a4>
     ae0:	ldr	r0, [pc, #1836]	; 1214 <dim_enter_array+0x9c4>
     ae4:	ldr	r1, [pc, #1892]	; 1250 <dim_enter_array+0xa00>
     ae8:	movw	r2, #402	; 0x192
     aec:	ldr	r3, [pc, #1864]	; 123c <dim_enter_array+0x9ec>
     af0:	bl	0 <__assert_fail>
     af4:	ldr	r1, [pc, #1808]	; 120c <dim_enter_array+0x9bc>
     af8:	ldr	r0, [pc, #1804]	; 120c <dim_enter_array+0x9bc>
     afc:	ldr	ip, [r0]
     b00:	ldr	r3, [r8, #4]
     b04:	add	r0, ip, r3
     b08:	str	r0, [r1]
     b0c:	cmp	r7, #0
     b10:	ble	b54 <dim_enter_array+0x304>
     b14:	ldr	ip, [pc, #1840]	; 124c <dim_enter_array+0x9fc>
     b18:	lsl	r2, r7, #3
     b1c:	add	r1, ip, r2
     b20:	sub	lr, r1, #4096	; 0x1000
     b24:	ldr	r4, [lr, #4088]	; 0xff8
     b28:	sub	lr, r1, #4096	; 0x1000
     b2c:	ldr	r0, [lr, #4092]	; 0xffc
     b30:	str	r0, [sp, #16]
     b34:	ldr	r0, [pc, #1820]	; 1258 <dim_enter_array+0xa08>
     b38:	lsl	r1, r7, #3
     b3c:	add	r1, r0, r1
     b40:	sub	lr, r1, #4096	; 0x1000
     b44:	ldr	r5, [lr, #4088]	; 0xff8
     b48:	sub	lr, r1, #4096	; 0x1000
     b4c:	ldr	r6, [lr, #4092]	; 0xffc
     b50:	b	b68 <dim_enter_array+0x318>
     b54:	mov	ip, #0
     b58:	mov	r4, #1
     b5c:	str	ip, [sp, #16]
     b60:	mov	r6, #0
     b64:	mov	r5, #1
     b68:	mov	ip, #0
     b6c:	mov	r3, #0
     b70:	str	r3, [sp, #20]
     b74:	mov	r2, r6
     b78:	mov	r0, #0
     b7c:	cmp	r2, r0
     b80:	bne	b98 <dim_enter_array+0x348>
     b84:	mov	r3, r5
     b88:	mov	r0, #0
     b8c:	cmp	r3, r0
     b90:	bhi	ba4 <dim_enter_array+0x354>
     b94:	b	bfc <dim_enter_array+0x3ac>
     b98:	mov	r0, #0
     b9c:	cmp	r2, r0
     ba0:	ble	bfc <dim_enter_array+0x3ac>
     ba4:	mov	r2, #0
     ba8:	ldr	r0, [r8, #4]
     bac:	cmp	r2, r0
     bb0:	bge	c34 <dim_enter_array+0x3e4>
     bb4:	ldr	r1, [pc, #1640]	; 1224 <dim_enter_array+0x9d4>
     bb8:	add	r3, r7, r2
     bbc:	lsl	r0, r2, #2
     bc0:	add	r0, r8, r0
     bc4:	ldr	r0, [r0, #8]
     bc8:	str	r0, [r1, r3, lsl #2]
     bcc:	ldr	r1, [pc, #1628]	; 1230 <dim_enter_array+0x9e0>
     bd0:	add	r0, r7, r2
     bd4:	mov	r3, #0
     bd8:	str	r3, [r1, r0, lsl #2]
     bdc:	lsl	r3, r2, #2
     be0:	add	r3, r8, r3
     be4:	ldr	r1, [r3, #8]
     be8:	cmn	r1, #1
     bec:	bne	bf4 <dim_enter_array+0x3a4>
     bf0:	mov	ip, #1
     bf4:	add	r2, r2, #1
     bf8:	b	ba8 <dim_enter_array+0x358>
     bfc:	mov	r2, #0
     c00:	ldr	r3, [r8, #4]
     c04:	cmp	r2, r3
     c08:	bge	c34 <dim_enter_array+0x3e4>
     c0c:	ldr	r1, [pc, #1552]	; 1224 <dim_enter_array+0x9d4>
     c10:	add	r0, r7, r2
     c14:	mov	r3, #0
     c18:	str	r3, [r1, r0, lsl #2]
     c1c:	ldr	r1, [pc, #1548]	; 1230 <dim_enter_array+0x9e0>
     c20:	add	r0, r7, r2
     c24:	mov	r3, #0
     c28:	str	r3, [r1, r0, lsl #2]
     c2c:	add	r2, r2, #1
     c30:	b	c00 <dim_enter_array+0x3b0>
     c34:	cmp	ip, #0
     c38:	beq	de8 <dim_enter_array+0x598>
     c3c:	mov	r9, #0
     c40:	ldr	r2, [r8, #4]
     c44:	cmp	r9, r2
     c48:	bge	d28 <dim_enter_array+0x4d8>
     c4c:	lsl	r2, r9, #2
     c50:	add	r1, r8, r2
     c54:	ldr	r3, [r1, #8]
     c58:	cmn	r3, #1
     c5c:	bne	d00 <dim_enter_array+0x4b0>
     c60:	ldr	r0, [pc, #1484]	; 1234 <dim_enter_array+0x9e4>
     c64:	add	r1, r7, r9
     c68:	str	r7, [r0, r1, lsl #2]
     c6c:	lsl	r0, r4, #2
     c70:	bl	0 <malloc>
     c74:	ldr	r1, [pc, #1480]	; 1244 <dim_enter_array+0x9f4>
     c78:	add	ip, r7, r9
     c7c:	str	r0, [r1, ip, lsl #2]
     c80:	ldr	r3, [pc, #1468]	; 1244 <dim_enter_array+0x9f4>
     c84:	add	r2, r7, r9
     c88:	ldr	r3, [r3, r2, lsl #2]
     c8c:	cmp	r3, #0
     c90:	bne	cb4 <dim_enter_array+0x464>
     c94:	mvn	r0, #0
     c98:	ldr	r1, [pc, #1432]	; 1238 <dim_enter_array+0x9e8>
     c9c:	lsl	r2, r4, #2
     ca0:	ldr	r3, [pc, #1448]	; 1250 <dim_enter_array+0xa00>
     ca4:	mov	sl, #456	; 0x1c8
     ca8:	str	sl, [sp]
     cac:	bl	0 <coda_set_error>
     cb0:	bl	0 <handle_coda_error>
     cb4:	mov	r2, #0
     cb8:	asr	r1, r2, #31
     cbc:	mov	r3, r2
     cc0:	ldr	r0, [sp, #16]
     cc4:	mov	ip, r4
     cc8:	cmp	r1, r0
     ccc:	bne	cdc <dim_enter_array+0x48c>
     cd0:	cmp	r3, ip
     cd4:	bcc	ce4 <dim_enter_array+0x494>
     cd8:	b	d20 <dim_enter_array+0x4d0>
     cdc:	cmp	r1, r0
     ce0:	bge	d20 <dim_enter_array+0x4d0>
     ce4:	ldr	r3, [pc, #1368]	; 1244 <dim_enter_array+0x9f4>
     ce8:	add	r0, r7, r9
     cec:	ldr	r1, [r3, r0, lsl #2]
     cf0:	mvn	ip, #0
     cf4:	str	ip, [r1, r2, lsl #2]
     cf8:	add	r2, r2, #1
     cfc:	b	cb8 <dim_enter_array+0x468>
     d00:	ldr	r2, [pc, #1324]	; 1234 <dim_enter_array+0x9e4>
     d04:	add	r3, r7, r9
     d08:	mov	ip, #0
     d0c:	str	ip, [r2, r3, lsl #2]
     d10:	ldr	r0, [pc, #1324]	; 1244 <dim_enter_array+0x9f4>
     d14:	add	r1, r7, r9
     d18:	mov	r2, #0
     d1c:	str	r2, [r0, r1, lsl #2]
     d20:	add	r9, r9, #1
     d24:	b	c40 <dim_enter_array+0x3f0>
     d28:	mov	r1, #0
     d2c:	str	r1, [r8, #44]	; 0x2c
     d30:	mov	r0, #0
     d34:	mov	r1, #0
     d38:	mov	r2, #0
     d3c:	bl	2c0 <get_all_dims_for_array>
     d40:	mov	r9, #0
     d44:	ldr	r3, [r8, #4]
     d48:	cmp	r9, r3
     d4c:	bge	de8 <dim_enter_array+0x598>
     d50:	lsl	r2, r9, #2
     d54:	add	ip, r8, r2
     d58:	ldr	r2, [ip, #8]
     d5c:	cmn	r2, #1
     d60:	bne	de0 <dim_enter_array+0x590>
     d64:	ldr	r1, [pc, #1208]	; 1224 <dim_enter_array+0x9d4>
     d68:	add	r2, r7, r9
     d6c:	ldr	r1, [r1, r2, lsl #2]
     d70:	ldr	ip, [pc, #1204]	; 122c <dim_enter_array+0x9dc>
     d74:	add	r0, r7, r9
     d78:	ldr	r2, [ip, r0, lsl #2]
     d7c:	cmp	r1, r2
     d80:	bne	dc8 <dim_enter_array+0x578>
     d84:	ldr	r0, [pc, #1188]	; 1230 <dim_enter_array+0x9e0>
     d88:	add	r2, r7, r9
     d8c:	mov	r3, #0
     d90:	str	r3, [r0, r2, lsl #2]
     d94:	ldr	r3, [pc, #1192]	; 1244 <dim_enter_array+0x9f4>
     d98:	add	r1, r7, r9
     d9c:	ldr	r0, [r3, r1, lsl #2]
     da0:	bl	0 <free>
     da4:	ldr	r1, [pc, #1176]	; 1244 <dim_enter_array+0x9f4>
     da8:	add	ip, r7, r9
     dac:	mov	r3, #0
     db0:	str	r3, [r1, ip, lsl #2]
     db4:	ldr	ip, [pc, #1144]	; 1234 <dim_enter_array+0x9e4>
     db8:	add	r0, r7, r9
     dbc:	mov	r1, #0
     dc0:	str	r1, [ip, r0, lsl #2]
     dc4:	b	de0 <dim_enter_array+0x590>
     dc8:	ldr	r0, [pc, #1120]	; 1230 <dim_enter_array+0x9e0>
     dcc:	add	ip, r7, r9
     dd0:	mov	r1, #1
     dd4:	str	r1, [r0, ip, lsl #2]
     dd8:	mov	r2, #1
     ddc:	str	r2, [sp, #20]
     de0:	add	r9, r9, #1
     de4:	b	d44 <dim_enter_array+0x4f4>
     de8:	ldr	ip, [pc, #1072]	; 1220 <dim_enter_array+0x9d0>
     dec:	mov	r0, #0
     df0:	str	r0, [ip]
     df4:	ldr	r2, [pc, #1120]	; 125c <dim_enter_array+0xa0c>
     df8:	mvn	ip, #0
     dfc:	str	ip, [r2]
     e00:	mov	r3, #0
     e04:	ldr	r1, [pc, #1024]	; 120c <dim_enter_array+0x9bc>
     e08:	ldr	r1, [r1]
     e0c:	cmp	r3, r1
     e10:	bge	e40 <dim_enter_array+0x5f0>
     e14:	ldr	r0, [pc, #1044]	; 1230 <dim_enter_array+0x9e0>
     e18:	ldr	r2, [r0, r3, lsl #2]
     e1c:	cmp	r2, #0
     e20:	beq	e38 <dim_enter_array+0x5e8>
     e24:	ldr	r2, [pc, #1012]	; 1220 <dim_enter_array+0x9d0>
     e28:	mov	r1, #1
     e2c:	str	r1, [r2]
     e30:	ldr	ip, [pc, #1060]	; 125c <dim_enter_array+0xa0c>
     e34:	str	r3, [ip]
     e38:	add	r3, r3, #1
     e3c:	b	e04 <dim_enter_array+0x5b4>
     e40:	mov	ip, #1
     e44:	str	ip, [r8, #40]	; 0x28
     e48:	mov	r9, #0
     e4c:	ldr	r1, [r8, #4]
     e50:	cmp	r9, r1
     e54:	bge	f08 <dim_enter_array+0x6b8>
     e58:	ldr	r1, [r8, #40]	; 0x28
     e5c:	ldr	r2, [pc, #960]	; 1224 <dim_enter_array+0x9d4>
     e60:	add	r3, r7, r9
     e64:	ldr	ip, [r2, r3, lsl #2]
     e68:	mul	r2, r1, ip
     e6c:	str	r2, [r8, #40]	; 0x28
     e70:	cmp	r9, #0
     e74:	beq	ecc <dim_enter_array+0x67c>
     e78:	ldr	r3, [pc, #972]	; 124c <dim_enter_array+0x9fc>
     e7c:	add	r2, r7, r9
     e80:	add	sl, r3, r2, lsl #3
     e84:	ldr	r1, [pc, #960]	; 124c <dim_enter_array+0x9fc>
     e88:	add	ip, r7, r9
     e8c:	lsl	r2, ip, #3
     e90:	add	r2, r1, r2
     e94:	sub	lr, r2, #4096	; 0x1000
     e98:	ldr	fp, [lr, #4088]	; 0xff8
     e9c:	sub	lr, r2, #4096	; 0x1000
     ea0:	ldr	r1, [lr, #4092]	; 0xffc
     ea4:	ldr	ip, [pc, #888]	; 1224 <dim_enter_array+0x9d4>
     ea8:	add	r2, r7, r9
     eac:	ldr	r0, [ip, r2, lsl #2]
     eb0:	asr	r2, r0, #31
     eb4:	umull	ip, r3, fp, r0
     eb8:	mla	r2, fp, r2, r3
     ebc:	mla	r0, r1, r0, r2
     ec0:	str	ip, [sl]
     ec4:	str	r0, [sl, #4]
     ec8:	b	f00 <dim_enter_array+0x6b0>
     ecc:	ldr	r3, [pc, #888]	; 124c <dim_enter_array+0x9fc>
     ed0:	add	fp, r3, r7, lsl #3
     ed4:	ldr	r2, [pc, #840]	; 1224 <dim_enter_array+0x9d4>
     ed8:	ldr	r1, [r2, r7, lsl #2]
     edc:	asr	r3, r1, #31
     ee0:	mov	r2, r4
     ee4:	umull	ip, sl, r2, r1
     ee8:	ldr	r0, [sp, #16]
     eec:	mov	r2, r4
     ef0:	mla	r2, r2, r3, sl
     ef4:	mla	r1, r0, r1, r2
     ef8:	str	ip, [fp]
     efc:	str	r1, [fp, #4]
     f00:	add	r9, r9, #1
     f04:	b	e4c <dim_enter_array+0x5fc>
     f08:	ldr	r1, [sp, #20]
     f0c:	cmp	r1, #0
     f10:	beq	1010 <dim_enter_array+0x7c0>
     f14:	mov	r1, #0
     f18:	ldr	ip, [r8, #4]
     f1c:	cmp	r1, ip
     f20:	bge	f48 <dim_enter_array+0x6f8>
     f24:	ldr	r3, [pc, #812]	; 1258 <dim_enter_array+0xa08>
     f28:	add	r2, r7, r1
     f2c:	add	ip, r3, r2, lsl #3
     f30:	mov	r3, #0
     f34:	mov	r2, #0
     f38:	str	r2, [ip]
     f3c:	str	r3, [ip, #4]
     f40:	add	r1, r1, #1
     f44:	b	f18 <dim_enter_array+0x6c8>
     f48:	mov	r0, #0
     f4c:	asr	ip, r0, #31
     f50:	mov	r1, r0
     f54:	ldr	r2, [sp, #16]
     f58:	mov	r3, r4
     f5c:	cmp	ip, r2
     f60:	bne	f70 <dim_enter_array+0x720>
     f64:	cmp	r1, r3
     f68:	bcc	f78 <dim_enter_array+0x728>
     f6c:	b	10a0 <dim_enter_array+0x850>
     f70:	cmp	ip, r2
     f74:	bge	10a0 <dim_enter_array+0x850>
     f78:	mov	r1, #1
     f7c:	mov	ip, #0
     f80:	ldr	r3, [r8, #4]
     f84:	cmp	ip, r3
     f88:	bge	1008 <dim_enter_array+0x7b8>
     f8c:	ldr	r2, [pc, #668]	; 1230 <dim_enter_array+0x9e0>
     f90:	add	r3, r7, ip
     f94:	ldr	r2, [r2, r3, lsl #2]
     f98:	cmp	r2, #0
     f9c:	beq	fb8 <dim_enter_array+0x768>
     fa0:	ldr	r3, [pc, #668]	; 1244 <dim_enter_array+0x9f4>
     fa4:	add	r2, r7, ip
     fa8:	ldr	r2, [r3, r2, lsl #2]
     fac:	ldr	r3, [r2, r0, lsl #2]
     fb0:	mul	r1, r1, r3
     fb4:	b	fc8 <dim_enter_array+0x778>
     fb8:	ldr	r2, [pc, #612]	; 1224 <dim_enter_array+0x9d4>
     fbc:	add	r3, r7, ip
     fc0:	ldr	r2, [r2, r3, lsl #2]
     fc4:	mul	r1, r1, r2
     fc8:	ldr	r3, [pc, #648]	; 1258 <dim_enter_array+0xa08>
     fcc:	add	r2, r7, ip
     fd0:	add	r6, r3, r2, lsl #3
     fd4:	ldr	r3, [pc, #636]	; 1258 <dim_enter_array+0xa08>
     fd8:	add	r2, r7, ip
     fdc:	add	r2, r3, r2, lsl #3
     fe0:	ldr	r5, [r2]
     fe4:	ldr	r3, [r2, #4]
     fe8:	mov	r2, r1
     fec:	asr	r9, r2, #31
     ff0:	adds	r2, r5, r2
     ff4:	adc	r3, r3, r9
     ff8:	str	r2, [r6]
     ffc:	str	r3, [r6, #4]
    1000:	add	ip, ip, #1
    1004:	b	f80 <dim_enter_array+0x730>
    1008:	add	r0, r0, #1
    100c:	b	f4c <dim_enter_array+0x6fc>
    1010:	ldr	r0, [pc, #576]	; 1258 <dim_enter_array+0xa08>
    1014:	add	ip, r0, r7, lsl #3
    1018:	ldr	r1, [pc, #516]	; 1224 <dim_enter_array+0x9d4>
    101c:	ldr	r0, [r1, r7, lsl #2]
    1020:	asr	r2, r0, #31
    1024:	umull	r3, r1, r5, r0
    1028:	mla	r2, r5, r2, r1
    102c:	mla	r0, r6, r0, r2
    1030:	str	r3, [ip]
    1034:	str	r0, [ip, #4]
    1038:	mov	r5, #1
    103c:	ldr	r3, [r8, #4]
    1040:	cmp	r5, r3
    1044:	bge	10a0 <dim_enter_array+0x850>
    1048:	ldr	r0, [pc, #520]	; 1258 <dim_enter_array+0xa08>
    104c:	add	r3, r7, r5
    1050:	add	ip, r0, r3, lsl #3
    1054:	ldr	r2, [pc, #508]	; 1258 <dim_enter_array+0xa08>
    1058:	add	r3, r7, r5
    105c:	lsl	r1, r3, #3
    1060:	add	r0, r2, r1
    1064:	sub	lr, r0, #4096	; 0x1000
    1068:	ldr	r4, [lr, #4088]	; 0xff8
    106c:	sub	lr, r0, #4096	; 0x1000
    1070:	ldr	r3, [lr, #4092]	; 0xffc
    1074:	ldr	r2, [pc, #424]	; 1224 <dim_enter_array+0x9d4>
    1078:	add	r1, r7, r5
    107c:	ldr	r0, [r2, r1, lsl #2]
    1080:	asr	r1, r0, #31
    1084:	umull	r6, r2, r4, r0
    1088:	mla	r1, r4, r1, r2
    108c:	mla	r1, r3, r0, r1
    1090:	str	r6, [ip]
    1094:	str	r1, [ip, #4]
    1098:	add	r5, r5, #1
    109c:	b	103c <dim_enter_array+0x7ec>
    10a0:	ldr	ip, [pc, #432]	; 1258 <dim_enter_array+0xa08>
    10a4:	ldr	r0, [r8, #4]
    10a8:	add	r3, r7, r0
    10ac:	lsl	r0, r3, #3
    10b0:	add	r3, ip, r0
    10b4:	sub	lr, r3, #4096	; 0x1000
    10b8:	ldr	r0, [lr, #4088]	; 0xff8
    10bc:	sub	lr, r3, #4096	; 0x1000
    10c0:	ldr	ip, [lr, #4092]	; 0xffc
    10c4:	mov	r1, #0
    10c8:	cmp	ip, r1
    10cc:	bne	10e0 <dim_enter_array+0x890>
    10d0:	mov	ip, #0
    10d4:	cmp	r0, ip
    10d8:	bhi	10ec <dim_enter_array+0x89c>
    10dc:	b	11e0 <dim_enter_array+0x990>
    10e0:	mov	r2, #0
    10e4:	cmp	ip, r2
    10e8:	ble	11e0 <dim_enter_array+0x990>
    10ec:	ldr	ip, [pc, #284]	; 1210 <dim_enter_array+0x9c0>
    10f0:	ldr	r3, [pc, #276]	; 120c <dim_enter_array+0x9bc>
    10f4:	ldr	r0, [r3]
    10f8:	lsl	r0, r0, #3
    10fc:	add	ip, ip, r0
    1100:	ldr	r1, [pc, #284]	; 1224 <dim_enter_array+0x9d4>
    1104:	ldr	r0, [pc, #256]	; 120c <dim_enter_array+0x9bc>
    1108:	ldr	r0, [r0]
    110c:	lsl	r2, r0, #2
    1110:	add	r1, r1, r2
    1114:	sub	lr, r1, #4096	; 0x1000
    1118:	ldr	r2, [lr, #4092]	; 0xffc
    111c:	asr	r3, r2, #31
    1120:	sub	lr, ip, #4096	; 0x1000
    1124:	str	r2, [lr, #4088]	; 0xff8
    1128:	sub	lr, ip, #4096	; 0x1000
    112c:	str	r3, [lr, #4092]	; 0xffc
    1130:	ldr	r2, [r8, #4]
    1134:	sub	ip, r2, #2
    1138:	cmp	ip, #0
    113c:	blt	1190 <dim_enter_array+0x940>
    1140:	ldr	r0, [pc, #200]	; 1210 <dim_enter_array+0x9c0>
    1144:	add	r2, r7, ip
    1148:	add	r4, r0, r2, lsl #3
    114c:	ldr	r3, [pc, #208]	; 1224 <dim_enter_array+0x9d4>
    1150:	add	r0, r7, ip
    1154:	ldr	r0, [r3, r0, lsl #2]
    1158:	asr	r2, r0, #31
    115c:	ldr	r3, [pc, #172]	; 1210 <dim_enter_array+0x9c0>
    1160:	add	r1, r7, ip
    1164:	lsl	r1, r1, #3
    1168:	add	r3, r3, r1
    116c:	ldr	r5, [r3, #8]
    1170:	ldr	r3, [r3, #12]
    1174:	umull	r1, r6, r0, r5
    1178:	mla	r0, r0, r3, r6
    117c:	mla	r2, r2, r5, r0
    1180:	str	r1, [r4]
    1184:	str	r2, [r4, #4]
    1188:	sub	ip, ip, #1
    118c:	b	1138 <dim_enter_array+0x8e8>
    1190:	sub	r5, r7, #1
    1194:	cmp	r5, #0
    1198:	blt	11e0 <dim_enter_array+0x990>
    119c:	ldr	r3, [pc, #108]	; 1210 <dim_enter_array+0x9c0>
    11a0:	add	r4, r3, r5, lsl #3
    11a4:	ldr	r3, [pc, #100]	; 1210 <dim_enter_array+0x9c0>
    11a8:	add	r2, r3, r5, lsl #3
    11ac:	ldr	ip, [r2]
    11b0:	ldr	r6, [r2, #4]
    11b4:	ldr	r0, [pc, #84]	; 1210 <dim_enter_array+0x9c0>
    11b8:	add	r0, r0, r7, lsl #3
    11bc:	ldr	r3, [r0]
    11c0:	ldr	r0, [r0, #4]
    11c4:	umull	r1, r2, ip, r3
    11c8:	mla	r2, ip, r0, r2
    11cc:	mla	r3, r6, r3, r2
    11d0:	str	r1, [r4]
    11d4:	str	r3, [r4, #4]
    11d8:	sub	r5, r5, #1
    11dc:	b	1194 <dim_enter_array+0x944>
    11e0:	ldr	r4, [sp, #24]
    11e4:	ldr	r5, [sp, #28]
    11e8:	ldr	r6, [sp, #32]
    11ec:	ldr	r7, [sp, #36]	; 0x24
    11f0:	ldr	r8, [sp, #40]	; 0x28
    11f4:	ldr	r9, [sp, #44]	; 0x2c
    11f8:	ldr	sl, [sp, #48]	; 0x30
    11fc:	ldr	fp, [sp, #52]	; 0x34
    1200:	ldr	lr, [sp, #8]
    1204:	add	sp, sp, #112	; 0x70
    1208:	bx	lr
    120c:	.word	0x00000000
    1210:	.word	0x000000b0
    1214:	.word	0x00000063
    1218:	.word	0x00000008
    121c:	.word	0x00000d20
    1220:	.word	0x00000044
    1224:	.word	0x00000004
    1228:	.word	0x00000088
    122c:	.word	0x00000024
    1230:	.word	0x00000048
    1234:	.word	0x0000008c
    1238:	.word	0x00000165
    123c:	.word	0x000001c9
    1240:	.word	0x00000163
    1244:	.word	0x0000006c
    1248:	.word	0x00000320
    124c:	.word	0x000000f0
	...
    1258:	.word	0x00000130
    125c:	.word	0x00000068

00001260 <dim_leave_array>:
    1260:	mov	ip, sp
    1264:	sub	sp, sp, #24
    1268:	str	ip, [sp]
    126c:	str	lr, [sp, #4]
    1270:	str	r4, [sp, #8]
    1274:	str	r5, [sp, #12]
    1278:	str	r6, [sp, #16]
    127c:	ldr	r0, [pc, #408]	; 141c <dim_leave_array+0x1bc>
    1280:	ldr	r0, [r0]
    1284:	cmp	r0, #0
    1288:	bge	12a0 <dim_leave_array+0x40>
    128c:	ldr	r0, [pc, #404]	; 1428 <dim_leave_array+0x1c8>
    1290:	ldr	r1, [pc, #416]	; 1438 <dim_leave_array+0x1d8>
    1294:	movw	r2, #579	; 0x243
    1298:	ldr	r3, [pc, #388]	; 1424 <dim_leave_array+0x1c4>
    129c:	bl	0 <__assert_fail>
    12a0:	ldr	r0, [pc, #396]	; 1434 <dim_leave_array+0x1d4>
    12a4:	ldr	ip, [pc, #368]	; 141c <dim_leave_array+0x1bc>
    12a8:	ldr	ip, [ip]
    12ac:	lsl	r1, ip, #6
    12b0:	add	r3, r1, ip, lsl #4
    12b4:	add	r5, r0, r3
    12b8:	ldr	r4, [r5]
    12bc:	ldr	r3, [pc, #336]	; 1414 <dim_leave_array+0x1b4>
    12c0:	ldr	r0, [pc, #332]	; 1414 <dim_leave_array+0x1b4>
    12c4:	ldr	r0, [r0]
    12c8:	ldr	ip, [r5, #4]
    12cc:	sub	r2, r0, ip
    12d0:	str	r2, [r3]
    12d4:	mov	r6, #0
    12d8:	ldr	r2, [r5, #4]
    12dc:	cmp	r6, r2
    12e0:	bge	1310 <dim_leave_array+0xb0>
    12e4:	ldr	r3, [pc, #320]	; 142c <dim_leave_array+0x1cc>
    12e8:	add	ip, r4, r6
    12ec:	ldr	r2, [r3, ip, lsl #2]
    12f0:	cmp	r2, #0
    12f4:	beq	1308 <dim_leave_array+0xa8>
    12f8:	ldr	r2, [pc, #304]	; 1430 <dim_leave_array+0x1d0>
    12fc:	add	ip, r4, r6
    1300:	ldr	r0, [r2, ip, lsl #2]
    1304:	bl	0 <free>
    1308:	add	r6, r6, #1
    130c:	b	12d8 <dim_leave_array+0x78>
    1310:	ldr	r3, [pc, #264]	; 1420 <dim_leave_array+0x1c0>
    1314:	mov	ip, #0
    1318:	str	ip, [r3]
    131c:	ldr	r1, [pc, #280]	; 143c <dim_leave_array+0x1dc>
    1320:	mvn	r2, #0
    1324:	str	r2, [r1]
    1328:	mov	r3, #0
    132c:	ldr	r1, [pc, #224]	; 1414 <dim_leave_array+0x1b4>
    1330:	ldr	r2, [r1]
    1334:	cmp	r3, r2
    1338:	bge	1368 <dim_leave_array+0x108>
    133c:	ldr	ip, [pc, #232]	; 142c <dim_leave_array+0x1cc>
    1340:	ldr	r1, [ip, r3, lsl #2]
    1344:	cmp	r1, #0
    1348:	beq	1360 <dim_leave_array+0x100>
    134c:	ldr	r0, [pc, #204]	; 1420 <dim_leave_array+0x1c0>
    1350:	mov	r1, #1
    1354:	str	r1, [r0]
    1358:	ldr	ip, [pc, #220]	; 143c <dim_leave_array+0x1dc>
    135c:	str	r3, [ip]
    1360:	add	r3, r3, #1
    1364:	b	132c <dim_leave_array+0xcc>
    1368:	ldr	r1, [pc, #208]	; 1440 <dim_leave_array+0x1e0>
    136c:	ldr	r3, [r5, #4]
    1370:	add	r0, r4, r3
    1374:	lsl	r0, r0, #3
    1378:	add	r1, r1, r0
    137c:	sub	lr, r1, #4096	; 0x1000
    1380:	ldr	r0, [lr, #4088]	; 0xff8
    1384:	sub	lr, r1, #4096	; 0x1000
    1388:	ldr	r1, [lr, #4092]	; 0xffc
    138c:	mov	r2, #0
    1390:	cmp	r1, r2
    1394:	bne	13a8 <dim_leave_array+0x148>
    1398:	mov	r2, #0
    139c:	cmp	r0, r2
    13a0:	bhi	13b4 <dim_leave_array+0x154>
    13a4:	b	13fc <dim_leave_array+0x19c>
    13a8:	mov	ip, #0
    13ac:	cmp	r1, ip
    13b0:	ble	13fc <dim_leave_array+0x19c>
    13b4:	sub	r6, r4, #1
    13b8:	cmp	r6, #0
    13bc:	blt	13fc <dim_leave_array+0x19c>
    13c0:	ldr	r3, [pc, #80]	; 1418 <dim_leave_array+0x1b8>
    13c4:	add	r5, r3, r6, lsl #3
    13c8:	ldr	r2, [pc, #72]	; 1418 <dim_leave_array+0x1b8>
    13cc:	add	r2, r2, r6, lsl #3
    13d0:	ldr	r0, [r2]
    13d4:	ldr	r1, [r2, #4]
    13d8:	ldr	r2, [pc, #56]	; 1418 <dim_leave_array+0x1b8>
    13dc:	add	ip, r2, r4, lsl #3
    13e0:	ldr	r2, [ip]
    13e4:	ldr	r3, [ip, #4]
    13e8:	bl	0 <__compcert_i64_sdiv>
    13ec:	str	r0, [r5]
    13f0:	str	r1, [r5, #4]
    13f4:	sub	r6, r6, #1
    13f8:	b	13b8 <dim_leave_array+0x158>
    13fc:	ldr	r4, [sp, #8]
    1400:	ldr	r5, [sp, #12]
    1404:	ldr	r6, [sp, #16]
    1408:	ldr	lr, [sp, #4]
    140c:	add	sp, sp, #24
    1410:	bx	lr
    1414:	.word	0x00000000
    1418:	.word	0x000000b0
    141c:	.word	0x00000d20
    1420:	.word	0x00000044
    1424:	.word	0x000001d9
    1428:	.word	0x0000010e
    142c:	.word	0x00000048
    1430:	.word	0x0000006c
    1434:	.word	0x00000320
    1438:	.word	0x00000000
    143c:	.word	0x00000068
    1440:	.word	0x00000130

00001444 <get_record_field_available_status>:
    1444:	mov	ip, sp
    1448:	sub	sp, sp, #40	; 0x28
    144c:	str	ip, [sp]
    1450:	str	lr, [sp, #4]
    1454:	str	r4, [sp, #8]
    1458:	str	r5, [sp, #12]
    145c:	str	r6, [sp, #16]
    1460:	str	r7, [sp, #20]
    1464:	str	r8, [sp, #24]
    1468:	str	r9, [sp, #28]
    146c:	mov	r4, r2
    1470:	mov	r5, r1
    1474:	mov	r6, r0
    1478:	ldr	r0, [pc, #660]	; 1714 <get_record_field_available_status+0x2d0>
    147c:	add	r1, sp, #32
    1480:	bl	0 <coda_cursor_get_type_class>
    1484:	cmp	r0, #0
    1488:	beq	1490 <get_record_field_available_status+0x4c>
    148c:	bl	0 <handle_coda_error>
    1490:	ldr	r1, [sp, #32]
    1494:	cmp	r1, #0
    1498:	beq	1640 <get_record_field_available_status+0x1fc>
    149c:	cmp	r1, #1
    14a0:	bne	1620 <get_record_field_available_status+0x1dc>
    14a4:	ldr	r2, [pc, #628]	; 1720 <get_record_field_available_status+0x2dc>
    14a8:	lsl	ip, r5, #6
    14ac:	add	r1, ip, r5, lsl #4
    14b0:	add	r9, r2, r1
    14b4:	ldr	r8, [r9]
    14b8:	ldr	r3, [pc, #576]	; 1700 <get_record_field_available_status+0x2bc>
    14bc:	ldr	r1, [r3]
    14c0:	cmp	r5, r1
    14c4:	blt	14dc <get_record_field_available_status+0x98>
    14c8:	ldr	r0, [pc, #556]	; 16fc <get_record_field_available_status+0x2b8>
    14cc:	ldr	r1, [pc, #596]	; 1728 <get_record_field_available_status+0x2e4>
    14d0:	movw	r2, #638	; 0x27e
    14d4:	ldr	r3, [pc, #584]	; 1724 <get_record_field_available_status+0x2e0>
    14d8:	bl	0 <__assert_fail>
    14dc:	cmp	r5, #0
    14e0:	bne	14ec <get_record_field_available_status+0xa8>
    14e4:	mov	r1, #0
    14e8:	str	r1, [r9, #44]	; 0x2c
    14ec:	ldr	r2, [pc, #524]	; 1700 <get_record_field_available_status+0x2bc>
    14f0:	ldr	ip, [r2]
    14f4:	cmp	r5, ip
    14f8:	bge	151c <get_record_field_available_status+0xd8>
    14fc:	ldr	r2, [pc, #540]	; 1720 <get_record_field_available_status+0x2dc>
    1500:	lsl	r1, r5, #6
    1504:	add	r0, r1, r5, lsl #4
    1508:	add	r3, r2, r0
    150c:	ldr	r0, [r9, #44]	; 0x2c
    1510:	ldr	r2, [r9, #40]	; 0x28
    1514:	mul	r2, r0, r2
    1518:	str	r2, [r3, #124]	; 0x7c
    151c:	mov	r7, #1
    1520:	mov	r0, r8
    1524:	ldr	r1, [r9, #4]
    1528:	add	ip, r8, r1
    152c:	cmp	r0, ip
    1530:	bge	1570 <get_record_field_available_status+0x12c>
    1534:	ldr	r2, [pc, #468]	; 1710 <get_record_field_available_status+0x2cc>
    1538:	ldr	r2, [r2, r0, lsl #2]
    153c:	cmp	r2, #0
    1540:	beq	155c <get_record_field_available_status+0x118>
    1544:	ldr	r3, [pc, #464]	; 171c <get_record_field_available_status+0x2d8>
    1548:	ldr	ip, [r3, r0, lsl #2]
    154c:	ldr	r2, [r9, #44]	; 0x2c
    1550:	ldr	r1, [ip, r2, lsl #2]
    1554:	mul	r7, r7, r1
    1558:	b	1568 <get_record_field_available_status+0x124>
    155c:	ldr	r3, [pc, #424]	; 170c <get_record_field_available_status+0x2c8>
    1560:	ldr	ip, [r3, r0, lsl #2]
    1564:	mul	r7, r7, ip
    1568:	add	r0, r0, #1
    156c:	b	1524 <get_record_field_available_status+0xe0>
    1570:	cmp	r7, #0
    1574:	ble	16d4 <get_record_field_available_status+0x290>
    1578:	ldr	r0, [pc, #404]	; 1714 <get_record_field_available_status+0x2d0>
    157c:	bl	0 <coda_cursor_goto_first_array_element>
    1580:	cmp	r0, #0
    1584:	beq	158c <get_record_field_available_status+0x148>
    1588:	bl	0 <handle_coda_error>
    158c:	mov	r8, #0
    1590:	cmp	r8, r7
    1594:	bge	1614 <get_record_field_available_status+0x1d0>
    1598:	add	r0, r6, #1
    159c:	add	r1, r5, #1
    15a0:	mov	r2, r4
    15a4:	bl	1444 <get_record_field_available_status>
    15a8:	cmp	r0, #0
    15ac:	beq	15c0 <get_record_field_available_status+0x17c>
    15b0:	ldr	r0, [pc, #348]	; 1714 <get_record_field_available_status+0x2d0>
    15b4:	bl	0 <coda_cursor_goto_parent>
    15b8:	mov	r0, #1
    15bc:	b	16d8 <get_record_field_available_status+0x294>
    15c0:	sub	r2, r7, #1
    15c4:	cmp	r8, r2
    15c8:	bge	160c <get_record_field_available_status+0x1c8>
    15cc:	ldr	r0, [pc, #320]	; 1714 <get_record_field_available_status+0x2d0>
    15d0:	bl	0 <coda_cursor_goto_next_array_element>
    15d4:	cmp	r0, #0
    15d8:	beq	15e0 <get_record_field_available_status+0x19c>
    15dc:	bl	0 <handle_coda_error>
    15e0:	ldr	r1, [pc, #312]	; 1720 <get_record_field_available_status+0x2dc>
    15e4:	lsl	r3, r5, #6
    15e8:	add	r0, r3, r5, lsl #4
    15ec:	add	r0, r1, r0
    15f0:	ldr	ip, [pc, #296]	; 1720 <get_record_field_available_status+0x2dc>
    15f4:	lsl	r3, r5, #6
    15f8:	add	r1, r3, r5, lsl #4
    15fc:	add	r3, ip, r1
    1600:	ldr	r1, [r3, #124]	; 0x7c
    1604:	add	r1, r1, #1
    1608:	str	r1, [r0, #124]	; 0x7c
    160c:	add	r8, r8, #1
    1610:	b	1590 <get_record_field_available_status+0x14c>
    1614:	ldr	r0, [pc, #248]	; 1714 <get_record_field_available_status+0x2d0>
    1618:	bl	0 <coda_cursor_goto_parent>
    161c:	b	16d4 <get_record_field_available_status+0x290>
    1620:	ldr	r0, [pc, #240]	; 1718 <get_record_field_available_status+0x2d4>
    1624:	ldr	r1, [pc, #252]	; 1728 <get_record_field_available_status+0x2e4>
    1628:	movw	r2, #729	; 0x2d9
    162c:	ldr	r3, [pc, #240]	; 1724 <get_record_field_available_status+0x2e0>
    1630:	bl	0 <__assert_fail>
    1634:	mov	r0, #1
    1638:	bl	0 <exit>
    163c:	b	16d4 <get_record_field_available_status+0x290>
    1640:	ldr	r0, [pc, #204]	; 1714 <get_record_field_available_status+0x2d0>
    1644:	ldr	ip, [pc, #184]	; 1704 <get_record_field_available_status+0x2c0>
    1648:	ldr	r1, [ip, r4, lsl #2]
    164c:	add	r2, sp, #36	; 0x24
    1650:	bl	0 <coda_cursor_get_record_field_available_status>
    1654:	cmp	r0, #0
    1658:	beq	1660 <get_record_field_available_status+0x21c>
    165c:	bl	0 <handle_coda_error>
    1660:	ldr	ip, [sp, #36]	; 0x24
    1664:	cmp	ip, #0
    1668:	beq	16d4 <get_record_field_available_status+0x290>
    166c:	ldr	r2, [pc, #148]	; 1708 <get_record_field_available_status+0x2c4>
    1670:	ldr	r0, [r2]
    1674:	sub	r0, r0, #1
    1678:	cmp	r4, r0
    167c:	beq	16cc <get_record_field_available_status+0x288>
    1680:	ldr	r0, [pc, #140]	; 1714 <get_record_field_available_status+0x2d0>
    1684:	ldr	r3, [pc, #120]	; 1704 <get_record_field_available_status+0x2c0>
    1688:	ldr	r1, [r3, r4, lsl #2]
    168c:	bl	0 <coda_cursor_goto_record_field_by_index>
    1690:	cmp	r0, #0
    1694:	beq	169c <get_record_field_available_status+0x258>
    1698:	bl	0 <handle_coda_error>
    169c:	add	r0, r6, #1
    16a0:	add	r2, r4, #1
    16a4:	mov	r1, r5
    16a8:	bl	1444 <get_record_field_available_status>
    16ac:	str	r0, [sp, #36]	; 0x24
    16b0:	ldr	r0, [pc, #92]	; 1714 <get_record_field_available_status+0x2d0>
    16b4:	bl	0 <coda_cursor_goto_parent>
    16b8:	ldr	r0, [sp, #36]	; 0x24
    16bc:	cmp	r0, #0
    16c0:	beq	16d4 <get_record_field_available_status+0x290>
    16c4:	mov	r0, #1
    16c8:	b	16d8 <get_record_field_available_status+0x294>
    16cc:	mov	r0, #1
    16d0:	b	16d8 <get_record_field_available_status+0x294>
    16d4:	mov	r0, #0
    16d8:	ldr	r4, [sp, #8]
    16dc:	ldr	r5, [sp, #12]
    16e0:	ldr	r6, [sp, #16]
    16e4:	ldr	r7, [sp, #20]
    16e8:	ldr	r8, [sp, #24]
    16ec:	ldr	r9, [sp, #28]
    16f0:	ldr	lr, [sp, #4]
    16f4:	add	sp, sp, #40	; 0x28
    16f8:	bx	lr
    16fc:	.word	0x0000009c
    1700:	.word	0x00000d20
    1704:	.word	0x00000da4
    1708:	.word	0x00000ea4
    170c:	.word	0x00000004
    1710:	.word	0x00000048
    1714:	.word	0x00000090
    1718:	.word	0x00000163
    171c:	.word	0x0000006c
    1720:	.word	0x00000320
    1724:	.word	0x000001e9
    1728:	.word	0x00000000

0000172c <dim_record_field_available>:
    172c:	mov	ip, sp
    1730:	sub	sp, sp, #8
    1734:	str	ip, [sp]
    1738:	str	lr, [sp, #4]
    173c:	mov	r0, #0
    1740:	mov	r1, #0
    1744:	mov	r2, #0
    1748:	bl	1444 <get_record_field_available_status>
    174c:	ldr	lr, [sp, #4]
    1750:	add	sp, sp, #8
    1754:	bx	lr
