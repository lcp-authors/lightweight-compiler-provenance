
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <find_minlength>:
       0:	strd	r4, [sp, #-36]!	; 0xffffffdc
       4:	ubfx	ip, r3, #11, #1
       8:	strd	r6, [sp, #8]
       c:	strd	r8, [sp, #16]
      10:	strd	sl, [sp, #24]
      14:	str	lr, [sp, #32]
      18:	sub	sp, sp, #52	; 0x34
      1c:	ldr	fp, [sp, #92]	; 0x5c
      20:	str	ip, [sp, #20]
      24:	ldr	ip, [fp]
      28:	cmp	ip, #1000	; 0x3e8
      2c:	add	ip, ip, #1
      30:	str	ip, [fp]
      34:	bgt	3c0 <find_minlength+0x3c0>
      38:	ldrb	ip, [r1]
      3c:	mov	r9, r3
      40:	mov	r7, r2
      44:	mov	r5, #0
      48:	movw	r6, #0
      4c:	movt	r6, #0
      50:	mvn	r2, #0
      54:	mov	sl, r0
      58:	str	r5, [sp, #12]
      5c:	str	r2, [sp, #16]
      60:	add	lr, ip, #118	; 0x76
      64:	add	ip, ip, #123	; 0x7b
      68:	uxtb	lr, lr
      6c:	uxtb	ip, ip
      70:	cmp	ip, #1
      74:	cmphi	lr, #1
      78:	addhi	r4, r1, #3
      7c:	addls	r4, r1, #5
      80:	ldrb	r3, [r4]
      84:	mov	r2, r3
      88:	cmp	r3, #161	; 0xa1
      8c:	ldrls	pc, [pc, r3, lsl #2]
      90:	b	670 <find_minlength+0x670>
      94:	.word	0x00000428
      98:	.word	0x00000334
      9c:	.word	0x00000334
      a0:	.word	0x00000354
      a4:	.word	0x00000334
      a8:	.word	0x00000334
      ac:	.word	0x000003e0
      b0:	.word	0x000003e0
      b4:	.word	0x000003e0
      b8:	.word	0x000003e0
      bc:	.word	0x000003e0
      c0:	.word	0x000003e0
      c4:	.word	0x000003e0
      c8:	.word	0x000003e0
      cc:	.word	0x00000360
      d0:	.word	0x00000420
      d4:	.word	0x00000420
      d8:	.word	0x00000360
      dc:	.word	0x000003e0
      e0:	.word	0x000003e0
      e4:	.word	0x000003e0
      e8:	.word	0x000003e0
      ec:	.word	0x000003e0
      f0:	.word	0x00000334
      f4:	.word	0x00000334
      f8:	.word	0x00000334
      fc:	.word	0x00000334
     100:	.word	0x00000334
     104:	.word	0x00000334
     108:	.word	0x000004b8
     10c:	.word	0x000004b8
     110:	.word	0x000004b8
     114:	.word	0x000004b8
     118:	.word	0x00000354
     11c:	.word	0x00000354
     120:	.word	0x000004b8
     124:	.word	0x000004b8
     128:	.word	0x00000354
     12c:	.word	0x00000354
     130:	.word	0x00000354
     134:	.word	0x00000354
     138:	.word	0x0000048c
     13c:	.word	0x00000354
     140:	.word	0x000004b8
     144:	.word	0x00000354
     148:	.word	0x00000354
     14c:	.word	0x00000354
     150:	.word	0x00000354
     154:	.word	0x000004b8
     158:	.word	0x000004b8
     15c:	.word	0x00000354
     160:	.word	0x00000354
     164:	.word	0x00000354
     168:	.word	0x00000354
     16c:	.word	0x0000048c
     170:	.word	0x00000354
     174:	.word	0x000004b8
     178:	.word	0x00000354
     17c:	.word	0x00000354
     180:	.word	0x00000354
     184:	.word	0x00000354
     188:	.word	0x000004b8
     18c:	.word	0x000004b8
     190:	.word	0x00000354
     194:	.word	0x00000354
     198:	.word	0x00000354
     19c:	.word	0x00000354
     1a0:	.word	0x0000048c
     1a4:	.word	0x00000354
     1a8:	.word	0x000004b8
     1ac:	.word	0x00000354
     1b0:	.word	0x00000354
     1b4:	.word	0x00000354
     1b8:	.word	0x00000354
     1bc:	.word	0x000004b8
     1c0:	.word	0x000004b8
     1c4:	.word	0x00000354
     1c8:	.word	0x00000354
     1cc:	.word	0x00000354
     1d0:	.word	0x00000354
     1d4:	.word	0x0000048c
     1d8:	.word	0x00000354
     1dc:	.word	0x000004b8
     1e0:	.word	0x00000354
     1e4:	.word	0x00000354
     1e8:	.word	0x00000470
     1ec:	.word	0x00000470
     1f0:	.word	0x000005e8
     1f4:	.word	0x000005e8
     1f8:	.word	0x00000470
     1fc:	.word	0x00000470
     200:	.word	0x00000340
     204:	.word	0x00000340
     208:	.word	0x0000061c
     20c:	.word	0x00000470
     210:	.word	0x000005e8
     214:	.word	0x00000470
     218:	.word	0x00000340
     21c:	.word	0x00000670
     220:	.word	0x00000670
     224:	.word	0x00000670
     228:	.word	0x00000670
     22c:	.word	0x00000670
     230:	.word	0x00000670
     234:	.word	0x00000670
     238:	.word	0x00000670
     23c:	.word	0x00000670
     240:	.word	0x00000670
     244:	.word	0x00000670
     248:	.word	0x00000670
     24c:	.word	0x0000059c
     250:	.word	0x0000059c
     254:	.word	0x00000670
     258:	.word	0x00000608
     25c:	.word	0x00000608
     260:	.word	0x00000548
     264:	.word	0x00000548
     268:	.word	0x000004f0
     26c:	.word	0x00000334
     270:	.word	0x00000428
     274:	.word	0x00000428
     278:	.word	0x00000428
     27c:	.word	0x00000428
     280:	.word	0x00000428
     284:	.word	0x00000334
     288:	.word	0x0000031c
     28c:	.word	0x0000031c
     290:	.word	0x0000031c
     294:	.word	0x0000031c
     298:	.word	0x00000370
     29c:	.word	0x00000370
     2a0:	.word	0x00000370
     2a4:	.word	0x00000370
     2a8:	.word	0x00000370
     2ac:	.word	0x00000370
     2b0:	.word	0x000004c8
     2b4:	.word	0x00000370
     2b8:	.word	0x00000370
     2bc:	.word	0x00000370
     2c0:	.word	0x00000370
     2c4:	.word	0x000004c8
     2c8:	.word	0x00000334
     2cc:	.word	0x00000334
     2d0:	.word	0x00000334
     2d4:	.word	0x00000334
     2d8:	.word	0x00000334
     2dc:	.word	0x000003f4
     2e0:	.word	0x000003f4
     2e4:	.word	0x000003f4
     2e8:	.word	0x000004a4
     2ec:	.word	0x00000354
     2f0:	.word	0x000004a4
     2f4:	.word	0x00000354
     2f8:	.word	0x000004a4
     2fc:	.word	0x00000354
     300:	.word	0x000004a4
     304:	.word	0x00000354
     308:	.word	0x00000354
     30c:	.word	0x000003c0
     310:	.word	0x000003c0
     314:	.word	0x00000354
     318:	.word	0x000003f4
     31c:	ldrh	r3, [r4, #1]
     320:	rev16	r3, r3
     324:	uxth	r3, r3
     328:	ldrb	r2, [r4, r3]!
     32c:	cmp	r2, #119	; 0x77
     330:	beq	31c <find_minlength+0x31c>
     334:	ldrb	r3, [r6, r2]
     338:	ldrb	r3, [r4, r3]!
     33c:	b	84 <find_minlength+0x84>
     340:	ldrb	r2, [r4, #3]
     344:	sub	r2, r2, #15
     348:	cmp	r2, #1
     34c:	bhi	354 <find_minlength+0x354>
     350:	add	r4, r4, #2
     354:	ldrb	r3, [r6, r3]
     358:	ldrb	r3, [r4, r3]!
     35c:	b	84 <find_minlength+0x84>
     360:	ldrb	r3, [r4, #1]
     364:	add	r5, r5, #1
     368:	add	r4, r4, #1
     36c:	b	84 <find_minlength+0x84>
     370:	ldr	r1, [sp, #88]	; 0x58
     374:	mov	r3, r9
     378:	mov	r2, r7
     37c:	mov	r0, sl
     380:	stm	sp, {r1, fp}
     384:	mov	r1, r4
     388:	bl	0 <find_minlength>
     38c:	cmp	r0, #0
     390:	blt	3c4 <find_minlength+0x3c4>
     394:	add	r5, r5, r0
     398:	mov	r2, r4
     39c:	ldrh	r3, [r2, #1]
     3a0:	rev16	r3, r3
     3a4:	uxth	r3, r3
     3a8:	ldrb	r3, [r2, r3]!
     3ac:	cmp	r3, #119	; 0x77
     3b0:	beq	39c <find_minlength+0x39c>
     3b4:	add	r4, r2, #3
     3b8:	ldrb	r3, [r2, #3]
     3bc:	b	84 <find_minlength+0x84>
     3c0:	mvn	r0, #0
     3c4:	add	sp, sp, #52	; 0x34
     3c8:	ldrd	r4, [sp]
     3cc:	ldrd	r6, [sp, #8]
     3d0:	ldrd	r8, [sp, #16]
     3d4:	ldrd	sl, [sp, #24]
     3d8:	add	sp, sp, #32
     3dc:	pop	{pc}		; (ldr pc, [sp], #4)
     3e0:	mov	r3, r4
     3e4:	add	r4, r3, #1
     3e8:	add	r5, r5, #1
     3ec:	ldrb	r3, [r3, #1]
     3f0:	b	84 <find_minlength+0x84>
     3f4:	ldrb	r2, [r6, r3]
     3f8:	add	r2, r4, r2
     3fc:	ldrh	r3, [r2, #1]
     400:	rev16	r3, r3
     404:	uxth	r3, r3
     408:	ldrb	r3, [r2, r3]!
     40c:	cmp	r3, #119	; 0x77
     410:	beq	3fc <find_minlength+0x3fc>
     414:	add	r4, r2, #3
     418:	ldrb	r3, [r2, #3]
     41c:	b	84 <find_minlength+0x84>
     420:	add	r3, r4, #2
     424:	b	3e4 <find_minlength+0x3e4>
     428:	ldr	r1, [sp, #16]
     42c:	cmp	r1, #0
     430:	blt	450 <find_minlength+0x450>
     434:	ldr	r2, [sp, #12]
     438:	eor	r2, r2, #1
     43c:	cmp	r1, r5
     440:	movle	r2, #0
     444:	andgt	r2, r2, #1
     448:	cmp	r2, #0
     44c:	moveq	r5, r1
     450:	cmp	r3, #119	; 0x77
     454:	bne	928 <find_minlength+0x928>
     458:	str	r5, [sp, #16]
     45c:	mov	r5, #0
     460:	add	r4, r4, #3
     464:	ldrb	r3, [r4]
     468:	str	r5, [sp, #12]
     46c:	b	84 <find_minlength+0x84>
     470:	ldrb	r2, [r4, #1]
     474:	sub	r2, r2, #15
     478:	cmp	r2, #1
     47c:	bls	350 <find_minlength+0x350>
     480:	ldrb	r3, [r6, r3]
     484:	ldrb	r3, [r4, r3]!
     488:	b	84 <find_minlength+0x84>
     48c:	ldrh	r2, [r4, #1]
     490:	add	r4, r4, #4
     494:	ldrb	r3, [r4]
     498:	rev16	r2, r2
     49c:	uxtah	r5, r5, r2
     4a0:	b	84 <find_minlength+0x84>
     4a4:	ldrb	r2, [r4, #1]
     4a8:	ldrb	r3, [r6, r3]
     4ac:	add	r3, r3, r2
     4b0:	ldrb	r3, [r4, r3]!
     4b4:	b	84 <find_minlength+0x84>
     4b8:	ldrb	r3, [r4, #2]
     4bc:	add	r5, r5, #1
     4c0:	add	r4, r4, #2
     4c4:	b	84 <find_minlength+0x84>
     4c8:	ldrh	r3, [r4, #1]
     4cc:	rev16	r3, r3
     4d0:	uxth	r3, r3
     4d4:	ldrb	r2, [r4, r3]
     4d8:	add	r3, r4, r3
     4dc:	cmp	r2, #119	; 0x77
     4e0:	beq	370 <find_minlength+0x370>
     4e4:	add	r4, r3, #3
     4e8:	ldrb	r3, [r3, #3]
     4ec:	b	84 <find_minlength+0x84>
     4f0:	ldrh	ip, [r4, #1]
     4f4:	rev16	ip, ip
     4f8:	uxtah	ip, r7, ip
     4fc:	mov	r2, ip
     500:	ldrh	r3, [r2, #1]
     504:	rev16	r3, r3
     508:	uxth	r3, r3
     50c:	ldrb	r3, [r2, r3]!
     510:	cmp	r3, #119	; 0x77
     514:	beq	500 <find_minlength+0x500>
     518:	cmp	r4, ip
     51c:	movls	r3, #0
     520:	movhi	r3, #1
     524:	cmp	r4, r2
     528:	movcs	r3, #0
     52c:	cmp	r3, #0
     530:	beq	6a0 <find_minlength+0x6a0>
     534:	mov	r3, #1
     538:	str	r3, [sp, #12]
     53c:	ldrb	r3, [r4, #3]
     540:	add	r4, r4, #3
     544:	b	84 <find_minlength+0x84>
     548:	ands	r8, r9, #33554432	; 0x2000000
     54c:	movne	r8, #0
     550:	beq	708 <find_minlength+0x708>
     554:	add	r2, r4, #5
     558:	ldrb	r3, [r2]
     55c:	sub	r1, r3, #98	; 0x62
     560:	cmp	r1, #11
     564:	ldrls	pc, [pc, r1, lsl #2]
     568:	b	944 <find_minlength+0x944>
     56c:	.word	0x00000648
     570:	.word	0x00000648
     574:	.word	0x00000644
     578:	.word	0x00000644
     57c:	.word	0x00000648
     580:	.word	0x00000648
     584:	.word	0x00000654
     588:	.word	0x00000654
     58c:	.word	0x00000648
     590:	.word	0x00000644
     594:	.word	0x00000648
     598:	.word	0x00000654
     59c:	ldrb	r2, [r6, #110]	; 0x6e
     5a0:	ldrb	r3, [r4, r2]
     5a4:	add	r2, r4, r2
     5a8:	sub	r1, r3, #98	; 0x62
     5ac:	cmp	r1, #11
     5b0:	ldrls	pc, [pc, r1, lsl #2]
     5b4:	b	938 <find_minlength+0x938>
     5b8:	.word	0x00000648
     5bc:	.word	0x00000648
     5c0:	.word	0x00000690
     5c4:	.word	0x00000690
     5c8:	.word	0x00000648
     5cc:	.word	0x00000648
     5d0:	.word	0x00000678
     5d4:	.word	0x00000678
     5d8:	.word	0x00000648
     5dc:	.word	0x00000690
     5e0:	.word	0x00000648
     5e4:	.word	0x00000678
     5e8:	ldrb	r3, [r4, #1]
     5ec:	add	r5, r5, #1
     5f0:	sub	r3, r3, #15
     5f4:	cmp	r3, #1
     5f8:	movls	r3, #4
     5fc:	movhi	r3, #2
     600:	ldrb	r3, [r4, r3]!
     604:	b	84 <find_minlength+0x84>
     608:	ands	r8, r9, #33554432	; 0x2000000
     60c:	movne	r8, #0
     610:	beq	854 <find_minlength+0x854>
     614:	add	r2, r4, #3
     618:	b	558 <find_minlength+0x558>
     61c:	ldrb	r3, [r4, #3]
     620:	ldrh	r2, [r4, #1]
     624:	sub	r3, r3, #15
     628:	cmp	r3, #1
     62c:	movls	r3, #6
     630:	movhi	r3, #4
     634:	rev16	r2, r2
     638:	ldrb	r3, [r4, r3]!
     63c:	uxtah	r5, r5, r2
     640:	b	84 <find_minlength+0x84>
     644:	add	r5, r5, r8
     648:	add	r4, r2, #1
     64c:	ldrb	r3, [r2, #1]
     650:	b	84 <find_minlength+0x84>
     654:	ldrh	r1, [r2, #1]
     658:	add	r4, r2, #5
     65c:	ldrb	r3, [r2, #5]
     660:	rev16	r2, r1
     664:	uxth	r2, r2
     668:	mla	r5, r8, r2, r5
     66c:	b	84 <find_minlength+0x84>
     670:	mvn	r0, #2
     674:	b	3c4 <find_minlength+0x3c4>
     678:	ldrh	r1, [r2, #1]
     67c:	add	r4, r2, #5
     680:	ldrb	r3, [r2, #5]
     684:	rev16	r2, r1
     688:	uxtah	r5, r5, r2
     68c:	b	84 <find_minlength+0x84>
     690:	add	r5, r5, #1
     694:	add	r4, r2, #1
     698:	ldrb	r3, [r2, #1]
     69c:	b	84 <find_minlength+0x84>
     6a0:	ldr	r3, [sp, #88]	; 0x58
     6a4:	cmp	r3, #0
     6a8:	beq	6d8 <find_minlength+0x6d8>
     6ac:	ldr	r3, [r3, #4]
     6b0:	cmp	ip, r3
     6b4:	beq	534 <find_minlength+0x534>
     6b8:	ldr	r3, [sp, #88]	; 0x58
     6bc:	b	6cc <find_minlength+0x6cc>
     6c0:	ldr	r2, [r3, #4]
     6c4:	cmp	r2, ip
     6c8:	beq	534 <find_minlength+0x534>
     6cc:	ldr	r3, [r3]
     6d0:	cmp	r3, #0
     6d4:	bne	6c0 <find_minlength+0x6c0>
     6d8:	ldr	lr, [sp, #88]	; 0x58
     6dc:	add	r2, sp, #40	; 0x28
     6e0:	mov	r1, ip
     6e4:	mov	r3, r9
     6e8:	mov	r0, sl
     6ec:	stm	sp, {r2, fp}
     6f0:	mov	r2, r7
     6f4:	str	lr, [sp, #40]	; 0x28
     6f8:	str	ip, [sp, #44]	; 0x2c
     6fc:	bl	0 <find_minlength>
     700:	add	r5, r5, r0
     704:	b	53c <find_minlength+0x53c>
     708:	ldrh	r3, [r4, #1]
     70c:	ldrh	r0, [sl, #36]	; 0x24
     710:	ldrh	r1, [sl, #34]	; 0x22
     714:	rev16	r3, r3
     718:	ldrh	r2, [r4, #3]
     71c:	uxth	r3, r3
     720:	mla	r3, r0, r3, r1
     724:	rev16	r2, r2
     728:	uxth	r2, r2
     72c:	add	r3, sl, r3
     730:	cmp	r2, #0
     734:	sub	r2, r2, #1
     738:	beq	930 <find_minlength+0x930>
     73c:	mvn	r1, #-2147483648	; 0x80000000
     740:	str	r9, [sp, #24]
     744:	mov	r9, r2
     748:	str	r5, [sp, #28]
     74c:	ldr	r5, [sp, #88]	; 0x58
     750:	str	r6, [sp, #32]
     754:	mov	r6, r3
     758:	str	r8, [sp, #36]	; 0x24
     75c:	mov	r8, r1
     760:	ldrh	r2, [r6]
     764:	mov	r0, r7
     768:	ldr	r1, [sp, #20]
     76c:	rev16	r2, r2
     770:	uxth	r2, r2
     774:	bl	0 <coda__pcre_find_bracket>
     778:	subs	ip, r0, #0
     77c:	beq	920 <find_minlength+0x920>
     780:	mov	r2, ip
     784:	ldrh	r3, [r2, #1]
     788:	rev16	r3, r3
     78c:	uxth	r3, r3
     790:	ldrb	r3, [r2, r3]!
     794:	cmp	r3, #119	; 0x77
     798:	beq	784 <find_minlength+0x784>
     79c:	cmp	r4, ip
     7a0:	movls	r3, #0
     7a4:	movhi	r3, #1
     7a8:	cmp	r4, r2
     7ac:	movcs	r3, #0
     7b0:	cmp	r3, #0
     7b4:	bne	83c <find_minlength+0x83c>
     7b8:	cmp	r5, #0
     7bc:	beq	7ec <find_minlength+0x7ec>
     7c0:	ldr	r3, [r5, #4]
     7c4:	cmp	ip, r3
     7c8:	beq	83c <find_minlength+0x83c>
     7cc:	mov	r3, r5
     7d0:	b	7e0 <find_minlength+0x7e0>
     7d4:	ldr	r2, [r3, #4]
     7d8:	cmp	r2, ip
     7dc:	beq	83c <find_minlength+0x83c>
     7e0:	ldr	r3, [r3]
     7e4:	cmp	r3, #0
     7e8:	bne	7d4 <find_minlength+0x7d4>
     7ec:	add	r2, sp, #40	; 0x28
     7f0:	mov	r1, ip
     7f4:	ldr	r3, [sp, #24]
     7f8:	mov	r0, sl
     7fc:	sub	r9, r9, #1
     800:	stm	sp, {r2, fp}
     804:	mov	r2, r7
     808:	str	r5, [sp, #40]	; 0x28
     80c:	str	ip, [sp, #44]	; 0x2c
     810:	bl	0 <find_minlength>
     814:	ldrh	r3, [sl, #36]	; 0x24
     818:	cmp	r8, r0
     81c:	movge	r8, r0
     820:	cmn	r9, #1
     824:	add	r6, r6, r3
     828:	bne	760 <find_minlength+0x760>
     82c:	ldr	r9, [sp, #24]
     830:	ldr	r5, [sp, #28]
     834:	ldr	r6, [sp, #32]
     838:	b	554 <find_minlength+0x554>
     83c:	mov	r3, #1
     840:	add	r5, sp, #28
     844:	ldr	r9, [sp, #24]
     848:	ldm	r5, {r5, r6, r8}
     84c:	str	r3, [sp, #12]
     850:	b	554 <find_minlength+0x554>
     854:	ldrh	r2, [r4, #1]
     858:	mov	r0, r7
     85c:	ldr	r1, [sp, #20]
     860:	rev16	r2, r2
     864:	uxth	r2, r2
     868:	bl	0 <coda__pcre_find_bracket>
     86c:	subs	ip, r0, #0
     870:	beq	920 <find_minlength+0x920>
     874:	mov	r2, ip
     878:	ldrh	r3, [r2, #1]
     87c:	rev16	r3, r3
     880:	uxth	r3, r3
     884:	ldrb	r3, [r2, r3]!
     888:	cmp	r3, #119	; 0x77
     88c:	beq	878 <find_minlength+0x878>
     890:	cmp	r4, ip
     894:	movls	r3, #0
     898:	movhi	r3, #1
     89c:	cmp	r4, r2
     8a0:	movcs	r3, #0
     8a4:	cmp	r3, #0
     8a8:	beq	8b8 <find_minlength+0x8b8>
     8ac:	mov	r3, #1
     8b0:	str	r3, [sp, #12]
     8b4:	b	614 <find_minlength+0x614>
     8b8:	ldr	r3, [sp, #88]	; 0x58
     8bc:	cmp	r3, #0
     8c0:	beq	8f0 <find_minlength+0x8f0>
     8c4:	ldr	r3, [r3, #4]
     8c8:	cmp	ip, r3
     8cc:	beq	8ac <find_minlength+0x8ac>
     8d0:	ldr	r3, [sp, #88]	; 0x58
     8d4:	b	8e4 <find_minlength+0x8e4>
     8d8:	ldr	r2, [r3, #4]
     8dc:	cmp	r2, ip
     8e0:	beq	8ac <find_minlength+0x8ac>
     8e4:	ldr	r3, [r3]
     8e8:	cmp	r3, #0
     8ec:	bne	8d8 <find_minlength+0x8d8>
     8f0:	ldr	lr, [sp, #88]	; 0x58
     8f4:	add	r2, sp, #40	; 0x28
     8f8:	mov	r1, ip
     8fc:	mov	r3, r9
     900:	mov	r0, sl
     904:	stm	sp, {r2, fp}
     908:	mov	r2, r7
     90c:	str	lr, [sp, #40]	; 0x28
     910:	str	ip, [sp, #44]	; 0x2c
     914:	bl	0 <find_minlength>
     918:	mov	r8, r0
     91c:	b	614 <find_minlength+0x614>
     920:	mvn	r0, #1
     924:	b	3c4 <find_minlength+0x3c4>
     928:	mov	r0, r5
     92c:	b	3c4 <find_minlength+0x3c4>
     930:	mvn	r8, #-2147483648	; 0x80000000
     934:	b	554 <find_minlength+0x554>
     938:	add	r5, r5, #1
     93c:	mov	r4, r2
     940:	b	84 <find_minlength+0x84>
     944:	add	r5, r5, r8
     948:	mov	r4, r2
     94c:	b	84 <find_minlength+0x84>

00000950 <set_table_bit.isra.0.constprop.3>:
     950:	ldrb	ip, [r1]
     954:	strd	r4, [sp, #-12]!
     958:	mov	r4, #1
     95c:	str	lr, [sp, #8]
     960:	ldrb	lr, [r0, ip, lsr #3]
     964:	and	r5, ip, #7
     968:	orr	lr, lr, r4, lsl r5
     96c:	strb	lr, [r0, ip, lsr #3]
     970:	ldr	r3, [r3]
     974:	ldrb	r3, [r3, ip]
     978:	tst	r3, #2
     97c:	beq	99c <set_table_bit.isra.0.constprop.3+0x4c>
     980:	ldr	r3, [r2]
     984:	ldrb	r3, [r3, ip]
     988:	lsr	ip, r3, #3
     98c:	and	r3, r3, #7
     990:	ldrb	r2, [r0, ip]
     994:	orr	r3, r2, r4, lsl r3
     998:	strb	r3, [r0, ip]
     99c:	ldrd	r4, [sp]
     9a0:	add	sp, sp, #8
     9a4:	add	r0, r1, #1
     9a8:	pop	{pc}		; (ldr pc, [sp], #4)

000009ac <set_start_bits>:
     9ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
     9b0:	mov	r5, r1
     9b4:	strd	r6, [sp, #8]
     9b8:	mov	r7, r3
     9bc:	add	r6, r5, #31
     9c0:	strd	r8, [sp, #16]
     9c4:	mov	r3, #1
     9c8:	movw	r9, #0
     9cc:	movt	r9, #0
     9d0:	strd	sl, [sp, #24]
     9d4:	mov	r8, r0
     9d8:	str	lr, [sp, #32]
     9dc:	mov	fp, r2
     9e0:	sub	sp, sp, #12
     9e4:	ldrb	r1, [r0]
     9e8:	stm	sp, {r3, r9}
     9ec:	add	r3, r1, #123	; 0x7b
     9f0:	add	r1, r1, #118	; 0x76
     9f4:	uxtb	r3, r3
     9f8:	uxtb	r1, r1
     9fc:	cmp	r1, #1
     a00:	cmphi	r3, #1
     a04:	sub	r9, r5, #1
     a08:	addhi	r4, r8, #3
     a0c:	addls	r4, r8, #5
     a10:	rsb	sl, r5, #1
     a14:	ldrb	r3, [r4]
     a18:	cmp	r3, #161	; 0xa1
     a1c:	ldrls	pc, [pc, r3, lsl #2]
     a20:	b	1114 <set_start_bits+0x768>
     a24:	.word	0x00000d84
     a28:	.word	0x00000d84
     a2c:	.word	0x00000d84
     a30:	.word	0x00000d84
     a34:	.word	0x00000ccc
     a38:	.word	0x00000ccc
     a3c:	.word	0x0000105c
     a40:	.word	0x0000102c
     a44:	.word	0x00000ffc
     a48:	.word	0x000010e8
     a4c:	.word	0x000010b4
     a50:	.word	0x00000fcc
     a54:	.word	0x00000d84
     a58:	.word	0x00000d84
     a5c:	.word	0x00000d84
     a60:	.word	0x00000d84
     a64:	.word	0x00000f60
     a68:	.word	0x00000f44
     a6c:	.word	0x00000d84
     a70:	.word	0x00000f1c
     a74:	.word	0x00000d84
     a78:	.word	0x00000f44
     a7c:	.word	0x00000d84
     a80:	.word	0x00000d84
     a84:	.word	0x00000d84
     a88:	.word	0x00000d84
     a8c:	.word	0x00000d84
     a90:	.word	0x00000d84
     a94:	.word	0x00000d84
     a98:	.word	0x00000d68
     a9c:	.word	0x00000d30
     aa0:	.word	0x00000d84
     aa4:	.word	0x00000d84
     aa8:	.word	0x00000efc
     aac:	.word	0x00000efc
     ab0:	.word	0x00000d68
     ab4:	.word	0x00000d68
     ab8:	.word	0x00000efc
     abc:	.word	0x00000efc
     ac0:	.word	0x00000edc
     ac4:	.word	0x00000edc
     ac8:	.word	0x00000d64
     acc:	.word	0x00000efc
     ad0:	.word	0x00000d68
     ad4:	.word	0x00000efc
     ad8:	.word	0x00000edc
     adc:	.word	0x00000ed4
     ae0:	.word	0x00000ed4
     ae4:	.word	0x00000d30
     ae8:	.word	0x00000d30
     aec:	.word	0x00000ed4
     af0:	.word	0x00000ed4
     af4:	.word	0x00000eb8
     af8:	.word	0x00000eb8
     afc:	.word	0x00000d2c
     b00:	.word	0x00000ed4
     b04:	.word	0x00000d30
     b08:	.word	0x00000ed4
     b0c:	.word	0x00000eb8
     b10:	.word	0x00000d84
     b14:	.word	0x00000d84
     b18:	.word	0x00000d84
     b1c:	.word	0x00000d84
     b20:	.word	0x00000d84
     b24:	.word	0x00000d84
     b28:	.word	0x00000d84
     b2c:	.word	0x00000d84
     b30:	.word	0x00000d84
     b34:	.word	0x00000d84
     b38:	.word	0x00000d84
     b3c:	.word	0x00000d84
     b40:	.word	0x00000d84
     b44:	.word	0x00000d84
     b48:	.word	0x00000d84
     b4c:	.word	0x00000d84
     b50:	.word	0x00000d84
     b54:	.word	0x00000d84
     b58:	.word	0x00000d84
     b5c:	.word	0x00000d84
     b60:	.word	0x00000d84
     b64:	.word	0x00000d84
     b68:	.word	0x00000d84
     b6c:	.word	0x00000d84
     b70:	.word	0x00000d84
     b74:	.word	0x00000d84
     b78:	.word	0x00000cd8
     b7c:	.word	0x00000cd8
     b80:	.word	0x00000ccc
     b84:	.word	0x00000ccc
     b88:	.word	0x00000cd8
     b8c:	.word	0x00000cd8
     b90:	.word	0x00000cd4
     b94:	.word	0x00000cd4
     b98:	.word	0x00000cc4
     b9c:	.word	0x00000cd8
     ba0:	.word	0x00000ccc
     ba4:	.word	0x00000cd8
     ba8:	.word	0x00000cd4
     bac:	.word	0x00001114
     bb0:	.word	0x00001114
     bb4:	.word	0x00001114
     bb8:	.word	0x00001114
     bbc:	.word	0x00001114
     bc0:	.word	0x00001114
     bc4:	.word	0x00001114
     bc8:	.word	0x00001114
     bcc:	.word	0x00001114
     bd0:	.word	0x00001114
     bd4:	.word	0x00001114
     bd8:	.word	0x00001114
     bdc:	.word	0x00000dc4
     be0:	.word	0x00000dc4
     be4:	.word	0x00001114
     be8:	.word	0x00000d84
     bec:	.word	0x00000d84
     bf0:	.word	0x00000d84
     bf4:	.word	0x00000d84
     bf8:	.word	0x00000d84
     bfc:	.word	0x00000dbc
     c00:	.word	0x00000db0
     c04:	.word	0x00000da8
     c08:	.word	0x00000da8
     c0c:	.word	0x00000da8
     c10:	.word	0x00000da8
     c14:	.word	0x00000d84
     c18:	.word	0x00000e28
     c1c:	.word	0x00000cac
     c20:	.word	0x00000cac
     c24:	.word	0x00000cac
     c28:	.word	0x00000e28
     c2c:	.word	0x00000e28
     c30:	.word	0x00000e28
     c34:	.word	0x00000e28
     c38:	.word	0x00000e28
     c3c:	.word	0x00000e28
     c40:	.word	0x00000d84
     c44:	.word	0x00000e28
     c48:	.word	0x00000e28
     c4c:	.word	0x00000e28
     c50:	.word	0x00000e28
     c54:	.word	0x00000d84
     c58:	.word	0x00000d84
     c5c:	.word	0x00000d84
     c60:	.word	0x00000d84
     c64:	.word	0x00000d84
     c68:	.word	0x00000d84
     c6c:	.word	0x00000e70
     c70:	.word	0x00000e70
     c74:	.word	0x00000e70
     c78:	.word	0x00000d84
     c7c:	.word	0x00000d84
     c80:	.word	0x00000d84
     c84:	.word	0x00000d84
     c88:	.word	0x00000d84
     c8c:	.word	0x00000d84
     c90:	.word	0x00000d84
     c94:	.word	0x00000d84
     c98:	.word	0x00000d84
     c9c:	.word	0x00000d84
     ca0:	.word	0x00000d84
     ca4:	.word	0x00000d84
     ca8:	.word	0x00001090
     cac:	ldrh	r3, [r4, #1]
     cb0:	rev16	r3, r3
     cb4:	uxth	r3, r3
     cb8:	ldrb	r3, [r4, r3]!
     cbc:	cmp	r3, #119	; 0x77
     cc0:	beq	cac <set_start_bits+0x300>
     cc4:	add	r4, r4, #3
     cc8:	b	a14 <set_start_bits+0x68>
     ccc:	add	r4, r4, #1
     cd0:	b	a14 <set_start_bits+0x68>
     cd4:	add	r4, r4, #2
     cd8:	ldrb	r3, [r4, #1]
     cdc:	sub	r3, r3, #6
     ce0:	cmp	r3, #15
     ce4:	ldrls	pc, [pc, r3, lsl #2]
     ce8:	b	d84 <set_start_bits+0x3d8>
     cec:	.word	0x00001268
     cf0:	.word	0x00001138
     cf4:	.word	0x0000116c
     cf8:	.word	0x00001198
     cfc:	.word	0x000011c0
     d00:	.word	0x000011f4
     d04:	.word	0x00000d84
     d08:	.word	0x00000d84
     d0c:	.word	0x00000d84
     d10:	.word	0x00000d84
     d14:	.word	0x00000d84
     d18:	.word	0x00001224
     d1c:	.word	0x00000d84
     d20:	.word	0x00001240
     d24:	.word	0x00000d84
     d28:	.word	0x00001224
     d2c:	add	r4, r4, #2
     d30:	add	r1, r4, #1
     d34:	add	r3, r7, #12
     d38:	add	r2, r7, #4
     d3c:	mov	r0, r5
     d40:	bl	950 <set_table_bit.isra.0.constprop.3>
     d44:	ldrh	r3, [r8, #1]
     d48:	rev16	r3, r3
     d4c:	uxth	r3, r3
     d50:	ldrb	r1, [r8, r3]!
     d54:	cmp	r1, #119	; 0x77
     d58:	beq	9ec <set_start_bits+0x40>
     d5c:	ldr	r3, [sp]
     d60:	b	d88 <set_start_bits+0x3dc>
     d64:	add	r4, r4, #2
     d68:	ldrb	r3, [r4, #1]
     d6c:	mov	r0, #1
     d70:	ldrb	r2, [r5, r3, lsr #3]
     d74:	and	r1, r3, #7
     d78:	orr	r2, r2, r0, lsl r1
     d7c:	strb	r2, [r5, r3, lsr #3]
     d80:	b	d44 <set_start_bits+0x398>
     d84:	mov	r3, #0
     d88:	mov	r0, r3
     d8c:	add	sp, sp, #12
     d90:	ldrd	r4, [sp]
     d94:	ldrd	r6, [sp, #8]
     d98:	ldrd	r8, [sp, #16]
     d9c:	ldrd	sl, [sp, #24]
     da0:	add	sp, sp, #32
     da4:	pop	{pc}		; (ldr pc, [sp], #4)
     da8:	mov	r3, #2
     dac:	b	d88 <set_start_bits+0x3dc>
     db0:	mov	r3, #2
     db4:	str	r3, [sp]
     db8:	b	d44 <set_start_bits+0x398>
     dbc:	add	r4, r4, #6
     dc0:	b	a14 <set_start_bits+0x68>
     dc4:	sub	r3, r5, #1
     dc8:	mov	r1, r4
     dcc:	ldrb	r2, [r3, #1]!
     dd0:	ldrb	r0, [r1, #1]!
     dd4:	cmp	r6, r3
     dd8:	orr	r2, r2, r0
     ddc:	strb	r2, [r3]
     de0:	bne	dcc <set_start_bits+0x420>
     de4:	ldrb	r3, [r4, #33]	; 0x21
     de8:	sub	r3, r3, #98	; 0x62
     dec:	cmp	r3, #11
     df0:	ldrls	pc, [pc, r3, lsl #2]
     df4:	b	d44 <set_start_bits+0x398>
     df8:	.word	0x00001130
     dfc:	.word	0x00001130
     e00:	.word	0x00000d44
     e04:	.word	0x00000d44
     e08:	.word	0x00001130
     e0c:	.word	0x00001130
     e10:	.word	0x0000111c
     e14:	.word	0x0000111c
     e18:	.word	0x00001130
     e1c:	.word	0x00000d44
     e20:	.word	0x00001130
     e24:	.word	0x0000111c
     e28:	mov	r3, r7
     e2c:	mov	r2, fp
     e30:	mov	r1, r5
     e34:	mov	r0, r4
     e38:	bl	9ac <set_start_bits>
     e3c:	cmp	r0, #3
     e40:	cmpne	r0, #0
     e44:	mov	r3, r0
     e48:	beq	d88 <set_start_bits+0x3dc>
     e4c:	cmp	r0, #1
     e50:	beq	d44 <set_start_bits+0x398>
     e54:	ldrh	r3, [r4, #1]
     e58:	rev16	r3, r3
     e5c:	uxth	r3, r3
     e60:	ldrb	r3, [r4, r3]!
     e64:	cmp	r3, #119	; 0x77
     e68:	beq	e54 <set_start_bits+0x4a8>
     e6c:	b	cc4 <set_start_bits+0x318>
     e70:	add	r4, r4, #1
     e74:	mov	r3, r7
     e78:	mov	r0, r4
     e7c:	mov	r2, fp
     e80:	mov	r1, r5
     e84:	bl	9ac <set_start_bits>
     e88:	cmp	r0, #3
     e8c:	cmpne	r0, #0
     e90:	mov	r3, r0
     e94:	beq	d88 <set_start_bits+0x3dc>
     e98:	ldrh	r3, [r4, #1]
     e9c:	rev16	r3, r3
     ea0:	uxth	r3, r3
     ea4:	ldrb	r3, [r4, r3]!
     ea8:	cmp	r3, #119	; 0x77
     eac:	beq	e98 <set_start_bits+0x4ec>
     eb0:	add	r4, r4, #3
     eb4:	b	a14 <set_start_bits+0x68>
     eb8:	add	r1, r4, #3
     ebc:	add	r3, r7, #12
     ec0:	add	r2, r7, #4
     ec4:	mov	r0, r5
     ec8:	bl	950 <set_table_bit.isra.0.constprop.3>
     ecc:	mov	r4, r0
     ed0:	b	a14 <set_start_bits+0x68>
     ed4:	add	r1, r4, #1
     ed8:	b	ebc <set_start_bits+0x510>
     edc:	ldrb	r3, [r4, #3]
     ee0:	mov	r0, #1
     ee4:	add	r4, r4, #4
     ee8:	ldrb	r2, [r5, r3, lsr #3]
     eec:	and	r1, r3, #7
     ef0:	orr	r2, r2, r0, lsl r1
     ef4:	strb	r2, [r5, r3, lsr #3]
     ef8:	b	a14 <set_start_bits+0x68>
     efc:	ldrb	r3, [r4, #1]
     f00:	mov	r0, #1
     f04:	add	r4, r4, #2
     f08:	ldrb	r2, [r5, r3, lsr #3]
     f0c:	and	r1, r3, #7
     f10:	orr	r2, r2, r0, lsl r1
     f14:	strb	r2, [r5, r3, lsr #3]
     f18:	b	a14 <set_start_bits+0x68>
     f1c:	ldrb	r1, [r5, #1]
     f20:	ldrb	r2, [r5, #4]
     f24:	ldrb	r3, [r5, #20]
     f28:	orr	r1, r1, #2
     f2c:	orr	r2, r2, #1
     f30:	strb	r1, [r5, #1]
     f34:	orr	r3, r3, #1
     f38:	strb	r2, [r5, #4]
     f3c:	strb	r3, [r5, #20]
     f40:	b	d44 <set_start_bits+0x398>
     f44:	ldrb	r2, [r5, #1]
     f48:	ldrb	r3, [r5, #16]
     f4c:	orr	r2, r2, #60	; 0x3c
     f50:	orr	r3, r3, #32
     f54:	strb	r2, [r5, #1]
     f58:	strb	r3, [r5, #16]
     f5c:	b	d44 <set_start_bits+0x398>
     f60:	ldrb	r3, [r4, #1]
     f64:	cmp	r3, #9
     f68:	bne	d84 <set_start_bits+0x3d8>
     f6c:	ldrb	r2, [r4, #2]
     f70:	mov	ip, #1
     f74:	mvn	r0, #127	; 0x7f
     f78:	ldr	r3, [sp, #4]
     f7c:	add	r2, r3, r2, lsl #2
     f80:	ldr	r3, [r2], #4
     f84:	cmn	r3, #1
     f88:	and	lr, r3, #7
     f8c:	beq	d44 <set_start_bits+0x398>
     f90:	cmp	r3, #255	; 0xff
     f94:	bls	fbc <set_start_bits+0x610>
     f98:	ldrb	r3, [r5, #31]
     f9c:	orr	r3, r0, r3
     fa0:	strb	r3, [r5, #31]
     fa4:	ldr	r3, [r2], #4
     fa8:	cmn	r3, #1
     fac:	and	lr, r3, #7
     fb0:	beq	d44 <set_start_bits+0x398>
     fb4:	cmp	r3, #255	; 0xff
     fb8:	bhi	f98 <set_start_bits+0x5ec>
     fbc:	ldrb	r1, [r5, r3, lsr #3]
     fc0:	orr	r1, r1, ip, lsl lr
     fc4:	strb	r1, [r5, r3, lsr #3]
     fc8:	b	f80 <set_start_bits+0x5d4>
     fcc:	sub	r3, r5, #1
     fd0:	ldr	r2, [r7, #8]
     fd4:	add	r1, r3, #161	; 0xa1
     fd8:	add	r3, r3, #1
     fdc:	sub	r1, r1, r5
     fe0:	ldrb	r0, [r3]
     fe4:	ldrb	r2, [r2, r1]
     fe8:	orr	r2, r2, r0
     fec:	strb	r2, [r3]
     ff0:	cmp	r6, r3
     ff4:	bne	fd0 <set_start_bits+0x624>
     ff8:	b	d44 <set_start_bits+0x398>
     ffc:	sub	r2, r5, #1
    1000:	rsb	r1, r5, #1
    1004:	ldr	ip, [r7, #8]
    1008:	add	r3, r1, r2
    100c:	ldrb	r0, [r2, #1]!
    1010:	ldrb	r3, [ip, r3]
    1014:	cmp	r6, r2
    1018:	mvn	r3, r3
    101c:	orr	r3, r3, r0
    1020:	strb	r3, [r2]
    1024:	bne	1004 <set_start_bits+0x658>
    1028:	b	d44 <set_start_bits+0x398>
    102c:	sub	r3, r5, #1
    1030:	ldr	r2, [r7, #8]
    1034:	add	r1, r3, #65	; 0x41
    1038:	add	r3, r3, #1
    103c:	sub	r1, r1, r5
    1040:	ldrb	r0, [r3]
    1044:	ldrb	r2, [r2, r1]
    1048:	orr	r2, r2, r0
    104c:	strb	r2, [r3]
    1050:	cmp	r6, r3
    1054:	bne	1030 <set_start_bits+0x684>
    1058:	b	d44 <set_start_bits+0x398>
    105c:	sub	r3, r5, #1
    1060:	ldr	r2, [r7, #8]
    1064:	add	r1, r3, #65	; 0x41
    1068:	add	r3, r3, #1
    106c:	sub	r1, r1, r5
    1070:	ldrb	r0, [r3]
    1074:	ldrb	r2, [r2, r1]
    1078:	mvn	r2, r2
    107c:	orr	r2, r2, r0
    1080:	strb	r2, [r3]
    1084:	cmp	r6, r3
    1088:	bne	1060 <set_start_bits+0x6b4>
    108c:	b	d44 <set_start_bits+0x398>
    1090:	add	r4, r4, #1
    1094:	ldrh	r3, [r4, #1]
    1098:	rev16	r3, r3
    109c:	uxth	r3, r3
    10a0:	ldrb	r3, [r4, r3]!
    10a4:	cmp	r3, #119	; 0x77
    10a8:	beq	1094 <set_start_bits+0x6e8>
    10ac:	add	r4, r4, #3
    10b0:	b	a14 <set_start_bits+0x68>
    10b4:	sub	r3, r5, #1
    10b8:	ldr	r2, [r7, #8]
    10bc:	add	r1, r3, #161	; 0xa1
    10c0:	add	r3, r3, #1
    10c4:	sub	r1, r1, r5
    10c8:	ldrb	r0, [r3]
    10cc:	ldrb	r2, [r2, r1]
    10d0:	mvn	r2, r2
    10d4:	orr	r2, r2, r0
    10d8:	strb	r2, [r3]
    10dc:	cmp	r6, r3
    10e0:	bne	10b8 <set_start_bits+0x70c>
    10e4:	b	d44 <set_start_bits+0x398>
    10e8:	sub	r3, r5, #1
    10ec:	rsb	r1, r5, #1
    10f0:	ldr	ip, [r7, #8]
    10f4:	add	r2, r1, r3
    10f8:	ldrb	r0, [r3, #1]!
    10fc:	ldrb	r2, [ip, r2]
    1100:	cmp	r6, r3
    1104:	orr	r2, r2, r0
    1108:	strb	r2, [r3]
    110c:	bne	10f0 <set_start_bits+0x744>
    1110:	b	d44 <set_start_bits+0x398>
    1114:	mov	r3, #3
    1118:	b	d88 <set_start_bits+0x3dc>
    111c:	ldrh	r3, [r4, #34]	; 0x22
    1120:	cmp	r3, #0
    1124:	bne	d44 <set_start_bits+0x398>
    1128:	add	r4, r4, #38	; 0x26
    112c:	b	a14 <set_start_bits+0x68>
    1130:	add	r4, r4, #34	; 0x22
    1134:	b	a14 <set_start_bits+0x68>
    1138:	mov	r3, r9
    113c:	ldr	r2, [r7, #8]
    1140:	add	r1, r3, #65	; 0x41
    1144:	add	r3, r3, #1
    1148:	sub	r1, r1, r5
    114c:	ldrb	r0, [r3]
    1150:	ldrb	r2, [r2, r1]
    1154:	orr	r2, r2, r0
    1158:	strb	r2, [r3]
    115c:	cmp	r6, r3
    1160:	bne	113c <set_start_bits+0x790>
    1164:	add	r4, r4, #2
    1168:	b	a14 <set_start_bits+0x68>
    116c:	sub	r2, r5, #1
    1170:	ldr	r0, [r7, #8]
    1174:	add	r3, sl, r2
    1178:	ldrb	r1, [r2, #1]!
    117c:	ldrb	r3, [r0, r3]
    1180:	cmp	r6, r2
    1184:	mvn	r3, r3
    1188:	orr	r3, r3, r1
    118c:	strb	r3, [r2]
    1190:	bne	1170 <set_start_bits+0x7c4>
    1194:	b	1164 <set_start_bits+0x7b8>
    1198:	sub	r3, r5, #1
    119c:	ldr	r0, [r7, #8]
    11a0:	add	r2, sl, r3
    11a4:	ldrb	r1, [r3, #1]!
    11a8:	ldrb	r2, [r0, r2]
    11ac:	cmp	r6, r3
    11b0:	orr	r2, r2, r1
    11b4:	strb	r2, [r3]
    11b8:	bne	119c <set_start_bits+0x7f0>
    11bc:	b	1164 <set_start_bits+0x7b8>
    11c0:	mov	r3, r9
    11c4:	ldr	r2, [r7, #8]
    11c8:	add	r1, r3, #161	; 0xa1
    11cc:	add	r3, r3, #1
    11d0:	sub	r1, r1, r5
    11d4:	ldrb	r0, [r3]
    11d8:	ldrb	r2, [r2, r1]
    11dc:	mvn	r2, r2
    11e0:	orr	r2, r2, r0
    11e4:	strb	r2, [r3]
    11e8:	cmp	r6, r3
    11ec:	bne	11c4 <set_start_bits+0x818>
    11f0:	b	1164 <set_start_bits+0x7b8>
    11f4:	mov	r3, r9
    11f8:	ldr	r2, [r7, #8]
    11fc:	add	r1, r3, #161	; 0xa1
    1200:	add	r3, r3, #1
    1204:	sub	r1, r1, r5
    1208:	ldrb	r0, [r3]
    120c:	ldrb	r2, [r2, r1]
    1210:	orr	r2, r2, r0
    1214:	strb	r2, [r3]
    1218:	cmp	r6, r3
    121c:	bne	11f8 <set_start_bits+0x84c>
    1220:	b	1164 <set_start_bits+0x7b8>
    1224:	ldrb	r2, [r5, #1]
    1228:	ldrb	r3, [r5, #16]
    122c:	orr	r2, r2, #60	; 0x3c
    1230:	orr	r3, r3, #32
    1234:	strb	r2, [r5, #1]
    1238:	strb	r3, [r5, #16]
    123c:	b	1164 <set_start_bits+0x7b8>
    1240:	ldrb	r1, [r5, #1]
    1244:	ldrb	r2, [r5, #4]
    1248:	ldrb	r3, [r5, #20]
    124c:	orr	r1, r1, #2
    1250:	orr	r2, r2, #1
    1254:	strb	r1, [r5, #1]
    1258:	orr	r3, r3, #1
    125c:	strb	r2, [r5, #4]
    1260:	strb	r3, [r5, #20]
    1264:	b	1164 <set_start_bits+0x7b8>
    1268:	mov	r3, r9
    126c:	ldr	r2, [r7, #8]
    1270:	add	r1, r3, #65	; 0x41
    1274:	add	r3, r3, #1
    1278:	sub	r1, r1, r5
    127c:	ldrb	r0, [r3]
    1280:	ldrb	r2, [r2, r1]
    1284:	mvn	r2, r2
    1288:	orr	r2, r2, r0
    128c:	strb	r2, [r3]
    1290:	cmp	r6, r3
    1294:	bne	126c <set_start_bits+0x8c0>
    1298:	b	1164 <set_start_bits+0x7b8>

0000129c <coda_pcre_study>:
    129c:	mov	ip, #0
    12a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    12a4:	subs	r4, r0, #0
    12a8:	strd	r6, [sp, #8]
    12ac:	strd	r8, [sp, #16]
    12b0:	str	sl, [sp, #24]
    12b4:	str	lr, [sp, #28]
    12b8:	sub	sp, sp, #192	; 0xc0
    12bc:	str	ip, [r2]
    12c0:	str	ip, [sp, #8]
    12c4:	beq	13f0 <coda_pcre_study+0x154>
    12c8:	ldr	lr, [r4]
    12cc:	movw	r3, #21061	; 0x5245
    12d0:	movt	r3, #20547	; 0x5043
    12d4:	cmp	lr, r3
    12d8:	bne	13f0 <coda_pcre_study+0x154>
    12dc:	ldr	r3, [r4, #12]
    12e0:	ands	lr, r3, #1
    12e4:	beq	1494 <coda_pcre_study+0x1f8>
    12e8:	bics	r6, r1, #15
    12ec:	bne	1404 <coda_pcre_study+0x168>
    12f0:	mov	r5, r1
    12f4:	mov	r7, r2
    12f8:	ldrh	sl, [r4, #38]	; 0x26
    12fc:	and	ip, r3, #272	; 0x110
    1300:	ldrh	r1, [r4, #36]	; 0x24
    1304:	ldrh	r2, [r4, #34]	; 0x22
    1308:	ldr	r3, [r4, #8]
    130c:	mla	sl, r1, sl, r2
    1310:	and	lr, r3, #16
    1314:	orrs	ip, lr, ip
    1318:	add	sl, r4, sl
    131c:	bne	1390 <coda_pcre_study+0xf4>
    1320:	ldr	r1, [r4, #48]	; 0x30
    1324:	cmp	r1, #0
    1328:	str	r1, [sp, #12]
    132c:	beq	1544 <coda_pcre_study+0x2a8>
    1330:	add	r0, r1, #832	; 0x340
    1334:	mov	r8, #0
    1338:	ubfx	r2, r3, #11, #1
    133c:	mov	r9, #0
    1340:	add	lr, r1, #256	; 0x100
    1344:	add	ip, r1, #512	; 0x200
    1348:	add	r3, sp, #48	; 0x30
    134c:	strd	r8, [sp, #16]
    1350:	str	r1, [sp, #48]	; 0x30
    1354:	add	r1, sp, #16
    1358:	str	r0, [sp, #60]	; 0x3c
    135c:	mov	r0, sl
    1360:	strd	r8, [sp, #24]
    1364:	strd	r8, [sp, #32]
    1368:	strd	r8, [sp, #40]	; 0x28
    136c:	str	lr, [sp, #52]	; 0x34
    1370:	str	ip, [sp, #56]	; 0x38
    1374:	bl	9ac <set_start_bits>
    1378:	sub	r6, r0, #1
    137c:	cmp	r0, #3
    1380:	clz	r6, r6
    1384:	lsr	r6, r6, #5
    1388:	beq	1418 <coda_pcre_study+0x17c>
    138c:	ldr	r3, [r4, #8]
    1390:	add	ip, sp, #8
    1394:	mov	r8, #0
    1398:	mov	r0, r4
    139c:	mov	r2, sl
    13a0:	mov	r1, sl
    13a4:	stm	sp, {r8, ip}
    13a8:	bl	0 <find_minlength>
    13ac:	cmn	r0, #3
    13b0:	mov	r9, r0
    13b4:	beq	1418 <coda_pcre_study+0x17c>
    13b8:	cmn	r0, #2
    13bc:	bne	142c <coda_pcre_study+0x190>
    13c0:	movw	r3, #0
    13c4:	movt	r3, #0
    13c8:	mov	r4, r8
    13cc:	str	r3, [r7]
    13d0:	mov	r0, r4
    13d4:	add	sp, sp, #192	; 0xc0
    13d8:	ldrd	r4, [sp]
    13dc:	ldrd	r6, [sp, #8]
    13e0:	ldrd	r8, [sp, #16]
    13e4:	ldr	sl, [sp, #24]
    13e8:	add	sp, sp, #28
    13ec:	pop	{pc}		; (ldr pc, [sp], #4)
    13f0:	movw	r3, #0
    13f4:	movt	r3, #0
    13f8:	mov	r4, #0
    13fc:	str	r3, [r2]
    1400:	b	13d0 <coda_pcre_study+0x134>
    1404:	movw	r3, #0
    1408:	movt	r3, #0
    140c:	mov	r4, ip
    1410:	str	r3, [r2]
    1414:	b	13d0 <coda_pcre_study+0x134>
    1418:	movw	r3, #0
    141c:	movt	r3, #0
    1420:	mov	r4, #0
    1424:	str	r3, [r7]
    1428:	b	13d0 <coda_pcre_study+0x134>
    142c:	and	r8, r6, #1
    1430:	cmp	r0, #0
    1434:	orrgt	r8, r8, #1
    1438:	cmp	r8, #0
    143c:	bne	14a8 <coda_pcre_study+0x20c>
    1440:	ands	r4, r5, #8
    1444:	beq	13d0 <coda_pcre_study+0x134>
    1448:	movw	r3, #0
    144c:	movt	r3, #0
    1450:	mov	r0, #76	; 0x4c
    1454:	ldr	r3, [r3]
    1458:	blx	r3
    145c:	subs	r4, r0, #0
    1460:	beq	155c <coda_pcre_study+0x2c0>
    1464:	mov	r3, r4
    1468:	mov	r1, #1
    146c:	mov	r2, #44	; 0x2c
    1470:	str	r1, [r3], #32
    1474:	str	r3, [r4, #4]
    1478:	str	r2, [r4, #32]
    147c:	str	r8, [r4, #36]	; 0x24
    1480:	mov	r2, #32
    1484:	mov	r1, #0
    1488:	add	r0, r4, #40	; 0x28
    148c:	bl	0 <memset>
    1490:	b	1520 <coda_pcre_study+0x284>
    1494:	movw	r3, #0
    1498:	movt	r3, #0
    149c:	mov	r4, lr
    14a0:	str	r3, [r2]
    14a4:	b	13d0 <coda_pcre_study+0x134>
    14a8:	movw	r3, #0
    14ac:	movt	r3, #0
    14b0:	mov	r0, #76	; 0x4c
    14b4:	ldr	r3, [r3]
    14b8:	blx	r3
    14bc:	subs	r4, r0, #0
    14c0:	beq	155c <coda_pcre_study+0x2c0>
    14c4:	mov	r3, r4
    14c8:	mov	r2, #1
    14cc:	mov	r1, #44	; 0x2c
    14d0:	cmp	r6, #0
    14d4:	str	r2, [r3], #32
    14d8:	str	r3, [r4, #4]
    14dc:	str	r1, [r4, #32]
    14e0:	beq	1570 <coda_pcre_study+0x2d4>
    14e4:	str	r2, [r4, #36]	; 0x24
    14e8:	ldr	r1, [sp, #16]
    14ec:	ldr	r2, [sp, #20]
    14f0:	str	r1, [r4, #40]	; 0x28
    14f4:	ldrd	r0, [sp, #24]
    14f8:	str	r2, [r4, #44]	; 0x2c
    14fc:	ldr	r2, [sp, #32]
    1500:	str	r0, [r4, #48]	; 0x30
    1504:	str	r1, [r4, #52]	; 0x34
    1508:	str	r2, [r4, #56]	; 0x38
    150c:	ldrd	r0, [sp, #36]	; 0x24
    1510:	ldr	r2, [sp, #44]	; 0x2c
    1514:	str	r0, [r4, #60]	; 0x3c
    1518:	str	r1, [r4, #64]	; 0x40
    151c:	str	r2, [r4, #68]	; 0x44
    1520:	cmp	r9, #0
    1524:	movle	r3, #0
    1528:	strle	r3, [r4, #72]	; 0x48
    152c:	ble	13d0 <coda_pcre_study+0x134>
    1530:	ldr	r3, [r4, #36]	; 0x24
    1534:	str	r9, [r4, #72]	; 0x48
    1538:	orr	r3, r3, #2
    153c:	str	r3, [r4, #36]	; 0x24
    1540:	b	13d0 <coda_pcre_study+0x134>
    1544:	add	r3, sp, #12
    1548:	mov	r2, #11
    154c:	bl	0 <coda_pcre_fullinfo>
    1550:	ldr	r3, [r4, #8]
    1554:	ldr	r1, [sp, #12]
    1558:	b	1330 <coda_pcre_study+0x94>
    155c:	movw	r3, #0
    1560:	movt	r3, #0
    1564:	mov	r4, #0
    1568:	str	r3, [r7]
    156c:	b	13d0 <coda_pcre_study+0x134>
    1570:	str	r6, [r4, #36]	; 0x24
    1574:	b	1480 <coda_pcre_study+0x1e4>

00001578 <coda_pcre_free_study>:
    1578:	cmp	r0, #0
    157c:	beq	1590 <coda_pcre_free_study+0x18>
    1580:	movw	r3, #0
    1584:	movt	r3, #0
    1588:	ldr	r3, [r3]
    158c:	bx	r3
    1590:	bx	lr
