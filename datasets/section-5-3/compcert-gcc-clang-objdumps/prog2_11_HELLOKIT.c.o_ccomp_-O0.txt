
../repos/prog2/CMakeFiles/0.11.2.dir/Aula00_Conceitos_base/11_HELLOKIT.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #136	; 0x88
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	mov	r0, #0
  18:	strb	r0, [sp, #40]	; 0x28
  1c:	mov	r0, #0
  20:	strb	r0, [sp, #41]	; 0x29
  24:	mov	r0, #0
  28:	strb	r0, [sp, #42]	; 0x2a
  2c:	mov	r0, #0
  30:	strb	r0, [sp, #43]	; 0x2b
  34:	mov	r0, #0
  38:	strb	r0, [sp, #44]	; 0x2c
  3c:	mov	r0, #0
  40:	strb	r0, [sp, #45]	; 0x2d
  44:	mov	r0, #0
  48:	strb	r0, [sp, #46]	; 0x2e
  4c:	mov	r0, #0
  50:	strb	r0, [sp, #47]	; 0x2f
  54:	mov	r0, #0
  58:	strb	r0, [sp, #48]	; 0x30
  5c:	mov	r0, #0
  60:	strb	r0, [sp, #49]	; 0x31
  64:	mov	r0, #0
  68:	strb	r0, [sp, #50]	; 0x32
  6c:	mov	r0, #0
  70:	strb	r0, [sp, #51]	; 0x33
  74:	mov	r0, #0
  78:	strb	r0, [sp, #52]	; 0x34
  7c:	mov	r0, #0
  80:	strb	r0, [sp, #53]	; 0x35
  84:	mov	r0, #0
  88:	strb	r0, [sp, #54]	; 0x36
  8c:	mov	r0, #0
  90:	strb	r0, [sp, #55]	; 0x37
  94:	mov	r0, #0
  98:	strb	r0, [sp, #56]	; 0x38
  9c:	mov	r0, #0
  a0:	strb	r0, [sp, #57]	; 0x39
  a4:	mov	r0, #0
  a8:	strb	r0, [sp, #58]	; 0x3a
  ac:	mov	r0, #0
  b0:	strb	r0, [sp, #59]	; 0x3b
  b4:	mov	r0, #0
  b8:	strb	r0, [sp, #60]	; 0x3c
  bc:	mov	r0, #0
  c0:	strb	r0, [sp, #61]	; 0x3d
  c4:	mov	r0, #0
  c8:	strb	r0, [sp, #62]	; 0x3e
  cc:	mov	r0, #0
  d0:	strb	r0, [sp, #63]	; 0x3f
  d4:	mov	r0, #0
  d8:	strb	r0, [sp, #64]	; 0x40
  dc:	mov	r0, #0
  e0:	strb	r0, [sp, #65]	; 0x41
  e4:	ldr	r0, [pc, #156]	; 188 <main+0x188>
  e8:	add	r1, sp, #24
  ec:	bl	0 <scanf>
  f0:	ldrb	r0, [sp, #24]
  f4:	cmp	r0, #46	; 0x2e
  f8:	beq	170 <main+0x170>
  fc:	ldr	r0, [pc, #136]	; 18c <main+0x18c>
 100:	add	r1, sp, #16
 104:	bl	0 <scanf>
 108:	mov	r4, #0
 10c:	add	r0, sp, #24
 110:	add	r1, sp, #40	; 0x28
 114:	ldr	r2, [sp, #16]
 118:	bl	2b0 <StringSet>
 11c:	add	r0, sp, #40	; 0x28
 120:	add	r1, sp, #72	; 0x48
 124:	bl	190 <R_ShiftString>
 128:	cmp	r4, #0
 12c:	bne	e4 <main+0xe4>
 130:	add	r0, sp, #40	; 0x28
 134:	add	r1, sp, #72	; 0x48
 138:	bl	0 <strcmp>
 13c:	cmp	r0, #0
 140:	bne	148 <main+0x148>
 144:	mov	r4, #1
 148:	ldr	r0, [pc, #52]	; 184 <main+0x184>
 14c:	add	r1, sp, #40	; 0x28
 150:	bl	0 <printf>
 154:	add	r0, sp, #104	; 0x68
 158:	add	r1, sp, #40	; 0x28
 15c:	bl	0 <strcpy>
 160:	add	r0, sp, #104	; 0x68
 164:	add	r1, sp, #40	; 0x28
 168:	bl	220 <L_ShiftString>
 16c:	b	128 <main+0x128>
 170:	mov	r0, #0
 174:	ldr	r4, [sp, #8]
 178:	ldr	lr, [sp, #4]
 17c:	add	sp, sp, #136	; 0x88
 180:	bx	lr
 184:	.word	0x00000006
 188:	.word	0x00000000
 18c:	.word	0x00000003

00000190 <R_ShiftString>:
 190:	mov	ip, sp
 194:	sub	sp, sp, #24
 198:	str	ip, [sp]
 19c:	str	lr, [sp, #4]
 1a0:	str	r4, [sp, #8]
 1a4:	str	r5, [sp, #12]
 1a8:	str	r6, [sp, #16]
 1ac:	mov	r5, r1
 1b0:	mov	r4, r0
 1b4:	mov	r0, r4
 1b8:	bl	0 <strlen>
 1bc:	add	r2, r4, r0
 1c0:	sub	lr, r2, #4096	; 0x1000
 1c4:	ldrb	r3, [lr, #4095]	; 0xfff
 1c8:	and	r1, r3, #255	; 0xff
 1cc:	strb	r1, [r5]
 1d0:	mov	r6, #1
 1d4:	mov	r0, r4
 1d8:	bl	0 <strlen>
 1dc:	cmp	r6, r0
 1e0:	bcs	200 <R_ShiftString+0x70>
 1e4:	add	r0, r4, r6
 1e8:	sub	lr, r0, #4096	; 0x1000
 1ec:	ldrb	r0, [lr, #4095]	; 0xfff
 1f0:	and	ip, r0, #255	; 0xff
 1f4:	strb	ip, [r5, r6]
 1f8:	add	r6, r6, #1
 1fc:	b	1d4 <R_ShiftString+0x44>
 200:	mov	r2, #0
 204:	strb	r2, [r5, r6]
 208:	ldr	r4, [sp, #8]
 20c:	ldr	r5, [sp, #12]
 210:	ldr	r6, [sp, #16]
 214:	ldr	lr, [sp, #4]
 218:	add	sp, sp, #24
 21c:	bx	lr

00000220 <L_ShiftString>:
 220:	mov	ip, sp
 224:	sub	sp, sp, #24
 228:	str	ip, [sp]
 22c:	str	lr, [sp, #4]
 230:	str	r4, [sp, #8]
 234:	str	r5, [sp, #12]
 238:	str	r6, [sp, #16]
 23c:	mov	r5, r1
 240:	mov	r4, r0
 244:	mov	r0, r4
 248:	bl	0 <strlen>
 24c:	add	ip, r5, r0
 250:	ldrb	r3, [r4]
 254:	and	r2, r3, #255	; 0xff
 258:	sub	lr, ip, #4096	; 0x1000
 25c:	strb	r2, [lr, #4095]	; 0xfff
 260:	mov	r6, #1
 264:	mov	r0, r4
 268:	bl	0 <strlen>
 26c:	cmp	r6, r0
 270:	bcs	290 <L_ShiftString+0x70>
 274:	add	r0, r5, r6
 278:	ldrb	r1, [r4, r6]
 27c:	and	r1, r1, #255	; 0xff
 280:	sub	lr, r0, #4096	; 0x1000
 284:	strb	r1, [lr, #4095]	; 0xfff
 288:	add	r6, r6, #1
 28c:	b	264 <L_ShiftString+0x44>
 290:	mov	r2, #0
 294:	strb	r2, [r5, r6]
 298:	ldr	r4, [sp, #8]
 29c:	ldr	r5, [sp, #12]
 2a0:	ldr	r6, [sp, #16]
 2a4:	ldr	lr, [sp, #4]
 2a8:	add	sp, sp, #24
 2ac:	bx	lr

000002b0 <StringSet>:
 2b0:	mov	ip, sp
 2b4:	sub	sp, sp, #24
 2b8:	str	ip, [sp]
 2bc:	str	lr, [sp, #4]
 2c0:	str	r4, [sp, #8]
 2c4:	str	r5, [sp, #12]
 2c8:	str	r6, [sp, #16]
 2cc:	str	r7, [sp, #20]
 2d0:	mov	r6, r2
 2d4:	mov	r4, r1
 2d8:	mov	r5, r0
 2dc:	ldr	r1, [pc, #64]	; 324 <StringSet+0x74>
 2e0:	mov	r0, r4
 2e4:	bl	0 <strcpy>
 2e8:	mov	r7, #0
 2ec:	cmp	r7, r6
 2f0:	bge	308 <StringSet+0x58>
 2f4:	mov	r1, r5
 2f8:	mov	r0, r4
 2fc:	bl	0 <strcat>
 300:	add	r7, r7, #1
 304:	b	2ec <StringSet+0x3c>
 308:	ldr	r4, [sp, #8]
 30c:	ldr	r5, [sp, #12]
 310:	ldr	r6, [sp, #16]
 314:	ldr	r7, [sp, #20]
 318:	ldr	lr, [sp, #4]
 31c:	add	sp, sp, #24
 320:	bx	lr
 324:	.word	0x0000000a
