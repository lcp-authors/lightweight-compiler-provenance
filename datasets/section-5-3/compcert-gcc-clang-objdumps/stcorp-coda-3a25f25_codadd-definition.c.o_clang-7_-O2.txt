
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_definition>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #36	; 0x24
       c:	mov	r5, r1
      10:	mov	r4, r0
      14:	add	r1, sp, #8
      18:	mov	r0, r5
      1c:	bl	0 <coda_open>
      20:	mov	r6, r0
      24:	bl	0 <__aeabi_read_tp>
      28:	cmp	r6, #0
      2c:	beq	64 <generate_definition+0x64>
      30:	ldr	r1, [pc, #696]	; 2f0 <generate_definition+0x2f0>
      34:	ldr	r1, [pc, r1]
      38:	ldr	r0, [r0, r1]
      3c:	cmn	r0, #21
      40:	bne	64 <generate_definition+0x64>
      44:	mov	r0, #0
      48:	bl	0 <coda_set_option_use_mmap>
      4c:	add	r1, sp, #8
      50:	mov	r0, r5
      54:	bl	0 <coda_open>
      58:	mov	r6, r0
      5c:	mov	r0, #1
      60:	bl	0 <coda_set_option_use_mmap>
      64:	cmp	r6, #0
      68:	bne	290 <generate_definition+0x290>
      6c:	movw	r0, #0
      70:	movw	r5, #0
      74:	cmp	r4, #0
      78:	movt	r0, #0
      7c:	movt	r5, #0
      80:	ldr	r0, [r0]
      84:	str	r0, [r5]
      88:	beq	a8 <generate_definition+0xa8>
      8c:	movw	r1, #0
      90:	mov	r0, r4
      94:	movt	r1, #0
      98:	bl	0 <fopen>
      9c:	cmp	r0, #0
      a0:	str	r0, [r5]
      a4:	beq	2c4 <generate_definition+0x2c4>
      a8:	movw	r0, #0
      ac:	movt	r0, #0
      b0:	bl	2f8 <ff_printf>
      b4:	ldr	r7, [sp, #8]
      b8:	mov	r2, #0
      bc:	ldr	r0, [r7, #20]
      c0:	ldr	r9, [r7, #24]
      c4:	ldr	r1, [r0]
      c8:	cmp	r1, #99	; 0x63
      cc:	ldr	r1, [r7, #16]
      d0:	ldrhi	r4, [r0, #4]
      d4:	str	r2, [sp, #20]
      d8:	str	r2, [sp, #16]
      dc:	str	r2, [sp, #27]
      e0:	str	r2, [sp, #23]
      e4:	movls	r4, r0
      e8:	cmp	r9, #0
      ec:	beq	100 <generate_definition+0x100>
      f0:	ldr	r5, [r9]
      f4:	ldr	r6, [r9, #8]
      f8:	ldr	r4, [r9, #28]
      fc:	b	10c <generate_definition+0x10c>
     100:	movw	r6, #0
     104:	mov	r5, r1
     108:	movt	r6, #0
     10c:	cmp	r4, #0
     110:	ldreq	r4, [r0, #4]
     114:	mov	r0, #0
     118:	moveq	r5, r1
     11c:	bl	0 <time>
     120:	str	r0, [sp, #12]
     124:	add	r0, sp, #12
     128:	bl	0 <localtime>
     12c:	cmp	r0, #0
     130:	beq	160 <generate_definition+0x160>
     134:	ldr	r1, [r0, #12]
     138:	ldr	r3, [r0, #16]
     13c:	ldr	r0, [r0, #20]
     140:	str	r1, [sp]
     144:	movw	r1, #1900	; 0x76c
     148:	add	r3, r3, #1
     14c:	add	r2, r0, r1
     150:	movw	r1, #0
     154:	add	r0, sp, #16
     158:	movt	r1, #0
     15c:	bl	0 <sprintf>
     160:	ldr	r0, [r7, #16]
     164:	bl	0 <coda_type_get_format_name>
     168:	mov	r2, r0
     16c:	movw	r0, #0
     170:	add	r3, sp, #16
     174:	mov	r1, r6
     178:	movt	r0, #0
     17c:	bl	340 <fi_printf>
     180:	movw	sl, #0
     184:	mov	r1, r5
     188:	movt	sl, #0
     18c:	ldr	r0, [sl]
     190:	add	r0, r0, #1
     194:	str	r0, [sl]
     198:	mov	r0, r4
     19c:	bl	3ec <generate_type>
     1a0:	cmp	r9, #0
     1a4:	beq	268 <generate_definition+0x268>
     1a8:	ldr	r0, [r9, #32]
     1ac:	cmp	r0, #1
     1b0:	blt	268 <generate_definition+0x268>
     1b4:	movw	r6, #0
     1b8:	movw	r7, #0
     1bc:	movw	r4, #0
     1c0:	mov	r8, #0
     1c4:	movt	r6, #0
     1c8:	movt	r7, #0
     1cc:	movt	r4, #0
     1d0:	ldr	r0, [r9, #36]	; 0x24
     1d4:	ldr	r5, [r0, r8, lsl #2]
     1d8:	movw	r0, #0
     1dc:	movt	r0, #0
     1e0:	ldr	r1, [r5]
     1e4:	bl	340 <fi_printf>
     1e8:	ldr	r0, [sl]
     1ec:	add	r0, r0, #1
     1f0:	str	r0, [sl]
     1f4:	ldr	r0, [r5, #4]
     1f8:	cmp	r0, #0
     1fc:	beq	224 <generate_definition+0x224>
     200:	movw	r0, #0
     204:	movt	r0, #0
     208:	bl	340 <fi_printf>
     20c:	ldr	r0, [r5, #4]
     210:	mov	r1, r6
     214:	bl	0 <coda_expression_print_xml>
     218:	movw	r0, #0
     21c:	movt	r0, #0
     220:	bl	2f8 <ff_printf>
     224:	movw	r0, #0
     228:	movt	r0, #0
     22c:	bl	340 <fi_printf>
     230:	ldr	r0, [r5, #8]
     234:	mov	r1, r6
     238:	bl	0 <coda_expression_print_xml>
     23c:	mov	r0, r7
     240:	bl	2f8 <ff_printf>
     244:	ldr	r0, [sl]
     248:	sub	r0, r0, #1
     24c:	str	r0, [sl]
     250:	mov	r0, r4
     254:	bl	340 <fi_printf>
     258:	ldr	r0, [r9, #32]
     25c:	add	r8, r8, #1
     260:	cmp	r8, r0
     264:	blt	1d0 <generate_definition+0x1d0>
     268:	ldr	r0, [sl]
     26c:	sub	r0, r0, #1
     270:	str	r0, [sl]
     274:	movw	r0, #0
     278:	movt	r0, #0
     27c:	bl	340 <fi_printf>
     280:	ldr	r0, [sp, #8]
     284:	bl	0 <coda_close>
     288:	sub	sp, fp, #28
     28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     290:	ldr	r0, [pc, #92]	; 2f4 <generate_definition+0x2f4>
     294:	ldr	r1, [pc, r0]
     298:	bl	0 <__aeabi_read_tp>
     29c:	movw	r5, #0
     2a0:	ldr	r0, [r0, r1]
     2a4:	movt	r5, #0
     2a8:	ldr	r4, [r5]
     2ac:	bl	0 <coda_errno_to_string>
     2b0:	movw	r1, #0
     2b4:	mov	r2, r0
     2b8:	mov	r0, r4
     2bc:	movt	r1, #0
     2c0:	b	2dc <generate_definition+0x2dc>
     2c4:	movw	r5, #0
     2c8:	movw	r1, #0
     2cc:	mov	r2, r4
     2d0:	movt	r5, #0
     2d4:	movt	r1, #0
     2d8:	ldr	r0, [r5]
     2dc:	bl	0 <fprintf>
     2e0:	ldr	r0, [r5]
     2e4:	bl	0 <fflush>
     2e8:	mov	r0, #1
     2ec:	bl	0 <exit>
     2f0:	.word	0x000002b4
     2f4:	.word	0x00000058

000002f8 <ff_printf>:
     2f8:	sub	sp, sp, #12
     2fc:	push	{fp, lr}
     300:	mov	fp, sp
     304:	sub	sp, sp, #4
     308:	mov	ip, r0
     30c:	add	r0, fp, #8
     310:	stm	r0, {r1, r2, r3}
     314:	movw	r0, #0
     318:	add	r2, fp, #8
     31c:	mov	r1, ip
     320:	movt	r0, #0
     324:	str	r2, [sp]
     328:	ldr	r0, [r0]
     32c:	bl	0 <vfprintf>
     330:	mov	sp, fp
     334:	pop	{fp, lr}
     338:	add	sp, sp, #12
     33c:	bx	lr

00000340 <fi_printf>:
     340:	sub	sp, sp, #12
     344:	push	{r4, r5, r6, r7, fp, lr}
     348:	add	fp, sp, #16
     34c:	sub	sp, sp, #4
     350:	mov	r4, r0
     354:	add	r0, fp, #8
     358:	stm	r0, {r1, r2, r3}
     35c:	movw	r0, #0
     360:	movt	r0, #0
     364:	ldr	r6, [r0]
     368:	cmp	r6, #0
     36c:	blt	3cc <fi_printf+0x8c>
     370:	beq	3a0 <fi_printf+0x60>
     374:	movw	r7, #0
     378:	movw	r5, #0
     37c:	movt	r7, #0
     380:	movt	r5, #0
     384:	ldr	r3, [r7]
     388:	mov	r0, r5
     38c:	mov	r1, #2
     390:	mov	r2, #1
     394:	bl	0 <fwrite>
     398:	subs	r6, r6, #1
     39c:	bne	384 <fi_printf+0x44>
     3a0:	movw	r0, #0
     3a4:	add	r2, fp, #8
     3a8:	mov	r1, r4
     3ac:	movt	r0, #0
     3b0:	str	r2, [sp]
     3b4:	ldr	r0, [r0]
     3b8:	bl	0 <vfprintf>
     3bc:	sub	sp, fp, #16
     3c0:	pop	{r4, r5, r6, r7, fp, lr}
     3c4:	add	sp, sp, #12
     3c8:	bx	lr
     3cc:	movw	r0, #0
     3d0:	movw	r1, #0
     3d4:	movw	r3, #0
     3d8:	mov	r2, #68	; 0x44
     3dc:	movt	r0, #0
     3e0:	movt	r1, #0
     3e4:	movt	r3, #0
     3e8:	bl	0 <__assert_fail>

000003ec <generate_type>:
     3ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     3f0:	add	fp, sp, #28
     3f4:	sub	sp, sp, #76	; 0x4c
     3f8:	mov	r9, r0
     3fc:	mov	r0, #0
     400:	mov	r4, r1
     404:	sub	r1, fp, #32
     408:	str	r0, [fp, #-36]	; 0xffffffdc
     40c:	str	r0, [sp, #52]	; 0x34
     410:	str	r0, [sp, #48]	; 0x30
     414:	mov	r0, r9
     418:	bl	0 <coda_type_get_class>
     41c:	sub	r1, fp, #40	; 0x28
     420:	mov	r0, r9
     424:	bl	0 <coda_type_get_format>
     428:	sub	r1, fp, #44	; 0x2c
     42c:	mov	r0, r9
     430:	bl	0 <coda_type_get_description>
     434:	sub	r1, fp, #48	; 0x30
     438:	mov	r0, r9
     43c:	bl	0 <coda_type_get_attributes>
     440:	ldr	r0, [fp, #-32]	; 0xffffffe0
     444:	movw	sl, #0
     448:	movt	sl, #0
     44c:	cmp	r0, #6
     450:	bhi	504 <generate_type+0x118>
     454:	add	r1, pc, #0
     458:	ldr	pc, [r1, r0, lsl #2]
     45c:	.word	0x00000478
     460:	.word	0x000004f0
     464:	.word	0x000004d8
     468:	.word	0x000004e4
     46c:	.word	0x000004a4
     470:	.word	0x000004fc
     474:	.word	0x00000714
     478:	add	r1, sp, #48	; 0x30
     47c:	mov	r0, r9
     480:	bl	0 <coda_type_get_record_union_status>
     484:	ldr	r0, [sp, #48]	; 0x30
     488:	movw	r1, #0
     48c:	movw	sl, #0
     490:	movt	r1, #0
     494:	movt	sl, #0
     498:	cmp	r0, #0
     49c:	moveq	sl, r1
     4a0:	b	504 <generate_type+0x118>
     4a4:	ldr	r0, [r9, #44]	; 0x2c
     4a8:	cmp	r0, #4
     4ac:	bhi	504 <generate_type+0x118>
     4b0:	add	r1, pc, #0
     4b4:	ldr	pc, [r1, r0, lsl #2]
     4b8:	.word	0x000004cc
     4bc:	.word	0x000012cc
     4c0:	.word	0x00001304
     4c4:	.word	0x000012d8
     4c8:	.word	0x000012c0
     4cc:	movw	sl, #0
     4d0:	movt	sl, #0
     4d4:	b	504 <generate_type+0x118>
     4d8:	movw	sl, #0
     4dc:	movt	sl, #0
     4e0:	b	504 <generate_type+0x118>
     4e4:	movw	sl, #0
     4e8:	movt	sl, #0
     4ec:	b	504 <generate_type+0x118>
     4f0:	movw	sl, #0
     4f4:	movt	sl, #0
     4f8:	b	504 <generate_type+0x118>
     4fc:	movw	sl, #0
     500:	movt	sl, #0
     504:	movw	r0, #0
     508:	mov	r1, sl
     50c:	movt	r0, #0
     510:	bl	340 <fi_printf>
     514:	ldr	r0, [fp, #-40]	; 0xffffffd8
     518:	cmp	r0, r4
     51c:	beq	534 <generate_type+0x148>
     520:	bl	0 <coda_type_get_format_name>
     524:	mov	r1, r0
     528:	movw	r0, #0
     52c:	movt	r0, #0
     530:	bl	2f8 <ff_printf>
     534:	ldr	r0, [fp, #-32]	; 0xffffffe0
     538:	cmp	r0, #6
     53c:	ldreq	r0, [fp, #-36]	; 0xffffffdc
     540:	cmpeq	r0, #2
     544:	bne	570 <generate_type+0x184>
     548:	movw	r0, #0
     54c:	movt	r0, #0
     550:	bl	2f8 <ff_printf>
     554:	ldr	r0, [r9, #52]	; 0x34
     558:	movw	r1, #0
     55c:	movt	r1, #0
     560:	bl	0 <coda_expression_print_xml>
     564:	movw	r0, #0
     568:	movt	r0, #0
     56c:	bl	2f8 <ff_printf>
     570:	ldr	r0, [fp, #-44]	; 0xffffffd4
     574:	str	r9, [sp, #16]
     578:	cmp	r0, #0
     57c:	beq	638 <generate_type+0x24c>
     580:	movw	r1, #0
     584:	add	r0, sp, #52	; 0x34
     588:	movt	r1, #0
     58c:	bl	1344 <fic_printf>
     590:	ldr	r4, [fp, #-44]	; 0xffffffd4
     594:	cmp	r4, #0
     598:	beq	628 <generate_type+0x23c>
     59c:	mov	r0, r4
     5a0:	bl	0 <strlen>
     5a4:	cmp	r0, #1
     5a8:	blt	628 <generate_type+0x23c>
     5ac:	movw	r8, #0
     5b0:	movw	r9, #0
     5b4:	movw	r7, #0
     5b8:	movw	r5, #0
     5bc:	add	r6, r0, #1
     5c0:	movt	r8, #0
     5c4:	movt	r9, #0
     5c8:	movt	r7, #0
     5cc:	movt	r5, #0
     5d0:	ldrb	r1, [r4]
     5d4:	cmp	r1, #62	; 0x3e
     5d8:	beq	604 <generate_type+0x218>
     5dc:	cmp	r1, #60	; 0x3c
     5e0:	beq	5f8 <generate_type+0x20c>
     5e4:	cmp	r1, #38	; 0x26
     5e8:	bne	610 <generate_type+0x224>
     5ec:	mov	r0, r7
     5f0:	bl	2f8 <ff_printf>
     5f4:	b	618 <generate_type+0x22c>
     5f8:	mov	r0, r9
     5fc:	bl	2f8 <ff_printf>
     600:	b	618 <generate_type+0x22c>
     604:	mov	r0, r8
     608:	bl	2f8 <ff_printf>
     60c:	b	618 <generate_type+0x22c>
     610:	mov	r0, r5
     614:	bl	2f8 <ff_printf>
     618:	sub	r6, r6, #1
     61c:	add	r4, r4, #1
     620:	cmp	r6, #1
     624:	bgt	5d0 <generate_type+0x1e4>
     628:	movw	r0, #0
     62c:	movt	r0, #0
     630:	bl	2f8 <ff_printf>
     634:	ldr	r9, [sp, #16]
     638:	ldr	r0, [fp, #-40]	; 0xffffffd8
     63c:	cmp	r0, #1
     640:	bhi	77c <generate_type+0x390>
     644:	ldr	r0, [fp, #-32]	; 0xffffffe0
     648:	sub	r1, r0, #2
     64c:	cmp	r1, #3
     650:	bhi	780 <generate_type+0x394>
     654:	mov	r6, r9
     658:	mvn	r5, #7
     65c:	mvn	r7, #0
     660:	ldr	r0, [r6, #24]!
     664:	add	r2, r5, #7
     668:	ldr	r1, [r6, #4]
     66c:	subs	r2, r2, r0
     670:	sbcs	r2, r7, r1
     674:	bge	69c <generate_type+0x2b0>
     678:	tst	r0, #7
     67c:	beq	750 <generate_type+0x364>
     680:	add	r4, sp, #20
     684:	mov	r2, r4
     688:	bl	0 <coda_str64>
     68c:	movw	r1, #0
     690:	add	r0, sp, #52	; 0x34
     694:	movt	r1, #0
     698:	b	774 <generate_type+0x388>
     69c:	ldr	r2, [r9, #32]
     6a0:	cmp	r2, #0
     6a4:	beq	77c <generate_type+0x390>
     6a8:	movw	r4, #0
     6ac:	movw	r8, #0
     6b0:	eor	r0, r0, r5
     6b4:	eor	r1, r1, r7
     6b8:	movt	r4, #0
     6bc:	orrs	r0, r0, r1
     6c0:	movw	r1, #0
     6c4:	movt	r8, #0
     6c8:	mov	r2, r4
     6cc:	add	r0, sp, #52	; 0x34
     6d0:	movt	r1, #0
     6d4:	moveq	r2, r8
     6d8:	bl	1344 <fic_printf>
     6dc:	ldr	r0, [r9, #32]
     6e0:	movw	r1, #0
     6e4:	movt	r1, #0
     6e8:	bl	0 <coda_expression_print_xml>
     6ec:	ldrd	r0, [r6]
     6f0:	eor	r1, r1, r7
     6f4:	eor	r0, r0, r5
     6f8:	orrs	r0, r0, r1
     6fc:	movw	r0, #0
     700:	moveq	r4, r8
     704:	movt	r0, #0
     708:	mov	r1, r4
     70c:	bl	2f8 <ff_printf>
     710:	b	77c <generate_type+0x390>
     714:	sub	r1, fp, #36	; 0x24
     718:	mov	r0, r9
     71c:	bl	0 <coda_type_get_special_type>
     720:	ldr	r0, [fp, #-36]	; 0xffffffdc
     724:	cmp	r0, #3
     728:	bhi	504 <generate_type+0x118>
     72c:	add	r1, pc, #0
     730:	ldr	pc, [r1, r0, lsl #2]
     734:	.word	0x00001324
     738:	.word	0x00000744
     73c:	.word	0x000012a8
     740:	.word	0x000012b4
     744:	movw	sl, #0
     748:	movt	sl, #0
     74c:	b	504 <generate_type+0x118>
     750:	lsr	r0, r0, #3
     754:	add	r4, sp, #20
     758:	orr	r0, r0, r1, lsl #29
     75c:	lsr	r1, r1, #3
     760:	mov	r2, r4
     764:	bl	0 <coda_str64>
     768:	movw	r1, #0
     76c:	add	r0, sp, #52	; 0x34
     770:	movt	r1, #0
     774:	mov	r2, r4
     778:	bl	1344 <fic_printf>
     77c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     780:	cmp	r0, #0
     784:	bne	7d8 <generate_type+0x3ec>
     788:	ldr	r0, [r9, #32]
     78c:	cmp	r0, #0
     790:	beq	7d8 <generate_type+0x3ec>
     794:	ldrd	r0, [r9, #24]
     798:	mvn	r2, #7
     79c:	eor	r0, r0, r2
     7a0:	mvn	r1, r1
     7a4:	orrs	r0, r0, r1
     7a8:	beq	12e4 <generate_type+0xef8>
     7ac:	movw	r1, #0
     7b0:	add	r0, sp, #52	; 0x34
     7b4:	movt	r1, #0
     7b8:	bl	1344 <fic_printf>
     7bc:	ldr	r0, [r9, #32]
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	bl	0 <coda_expression_print_xml>
     7cc:	movw	r0, #0
     7d0:	movt	r0, #0
     7d4:	bl	2f8 <ff_printf>
     7d8:	ldr	r0, [r9, #36]	; 0x24
     7dc:	str	sl, [sp, #12]
     7e0:	cmp	r0, #0
     7e4:	beq	9b0 <generate_type+0x5c4>
     7e8:	ldr	r1, [r0, #48]	; 0x30
     7ec:	cmp	r1, #1
     7f0:	blt	9b0 <generate_type+0x5c4>
     7f4:	movw	r5, #0
     7f8:	movw	r4, #0
     7fc:	movw	r8, #0
     800:	mov	r7, #0
     804:	add	r6, sp, #52	; 0x34
     808:	movt	r5, #0
     80c:	movt	r4, #0
     810:	movt	r8, #0
     814:	ldr	r0, [r0, #52]	; 0x34
     818:	mov	r1, r5
     81c:	ldr	sl, [r0, r7, lsl #2]
     820:	mov	r0, r6
     824:	ldr	r2, [sl]
     828:	bl	1344 <fic_printf>
     82c:	ldr	r0, [sl, #4]
     830:	cmp	r0, #0
     834:	beq	8fc <generate_type+0x510>
     838:	ldr	r1, [sl]
     83c:	bl	0 <strcmp>
     840:	cmp	r0, #0
     844:	beq	8fc <generate_type+0x510>
     848:	movw	r0, #0
     84c:	mov	r4, r6
     850:	movt	r0, #0
     854:	bl	2f8 <ff_printf>
     858:	ldr	r6, [sl, #4]
     85c:	cmp	r6, #0
     860:	beq	8e0 <generate_type+0x4f4>
     864:	mov	r0, r6
     868:	bl	0 <strlen>
     86c:	cmp	r0, #1
     870:	blt	8e0 <generate_type+0x4f4>
     874:	add	r9, r0, #1
     878:	ldrb	r1, [r6]
     87c:	cmp	r1, #62	; 0x3e
     880:	beq	8b4 <generate_type+0x4c8>
     884:	cmp	r1, #60	; 0x3c
     888:	beq	8a4 <generate_type+0x4b8>
     88c:	cmp	r1, #38	; 0x26
     890:	bne	8c4 <generate_type+0x4d8>
     894:	movw	r0, #0
     898:	movt	r0, #0
     89c:	bl	2f8 <ff_printf>
     8a0:	b	8d0 <generate_type+0x4e4>
     8a4:	movw	r0, #0
     8a8:	movt	r0, #0
     8ac:	bl	2f8 <ff_printf>
     8b0:	b	8d0 <generate_type+0x4e4>
     8b4:	movw	r0, #0
     8b8:	movt	r0, #0
     8bc:	bl	2f8 <ff_printf>
     8c0:	b	8d0 <generate_type+0x4e4>
     8c4:	movw	r0, #0
     8c8:	movt	r0, #0
     8cc:	bl	2f8 <ff_printf>
     8d0:	sub	r9, r9, #1
     8d4:	add	r6, r6, #1
     8d8:	cmp	r9, #1
     8dc:	bgt	878 <generate_type+0x48c>
     8e0:	movw	r0, #0
     8e4:	movt	r0, #0
     8e8:	bl	2f8 <ff_printf>
     8ec:	ldr	r9, [sp, #16]
     8f0:	mov	r6, r4
     8f4:	movw	r4, #0
     8f8:	movt	r4, #0
     8fc:	mov	r0, r4
     900:	bl	2f8 <ff_printf>
     904:	ldr	r0, [r8]
     908:	ldr	r1, [fp, #-40]	; 0xffffffd8
     90c:	add	r0, r0, #1
     910:	str	r0, [r8]
     914:	ldr	r0, [sl, #8]
     918:	bl	3ec <generate_type>
     91c:	ldr	r0, [sl, #12]
     920:	cmp	r0, #0
     924:	beq	934 <generate_type+0x548>
     928:	movw	r0, #0
     92c:	movt	r0, #0
     930:	bl	340 <fi_printf>
     934:	ldrb	r0, [sl, #16]
     938:	cmp	r0, #0
     93c:	beq	984 <generate_type+0x598>
     940:	ldr	r0, [sl, #20]
     944:	cmp	r0, #0
     948:	beq	978 <generate_type+0x58c>
     94c:	movw	r0, #0
     950:	movt	r0, #0
     954:	bl	340 <fi_printf>
     958:	ldr	r0, [sl, #20]
     95c:	movw	r1, #0
     960:	movt	r1, #0
     964:	bl	0 <coda_expression_print_xml>
     968:	movw	r0, #0
     96c:	movt	r0, #0
     970:	bl	2f8 <ff_printf>
     974:	b	984 <generate_type+0x598>
     978:	movw	r0, #0
     97c:	movt	r0, #0
     980:	bl	340 <fi_printf>
     984:	ldr	r0, [r8]
     988:	sub	r0, r0, #1
     98c:	str	r0, [r8]
     990:	movw	r0, #0
     994:	movt	r0, #0
     998:	bl	340 <fi_printf>
     99c:	ldr	r0, [r9, #36]	; 0x24
     9a0:	add	r7, r7, #1
     9a4:	ldr	r1, [r0, #48]	; 0x30
     9a8:	cmp	r7, r1
     9ac:	blt	814 <generate_type+0x428>
     9b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     9b4:	cmp	r0, #6
     9b8:	bhi	125c <generate_type+0xe70>
     9bc:	add	r1, pc, #0
     9c0:	ldr	pc, [r1, r0, lsl #2]
     9c4:	.word	0x00000c50
     9c8:	.word	0x00000ef8
     9cc:	.word	0x000009e0
     9d0:	.word	0x000009e0
     9d4:	.word	0x00001134
     9d8:	.word	0x00000fec
     9dc:	.word	0x00001020
     9e0:	ldr	r4, [sp, #16]
     9e4:	ldr	r0, [r4, #12]
     9e8:	bl	0 <coda_type_get_native_type_name>
     9ec:	movw	r1, #0
     9f0:	mov	r2, r0
     9f4:	add	r0, sp, #52	; 0x34
     9f8:	movt	r1, #0
     9fc:	bl	1344 <fic_printf>
     a00:	ldr	r0, [r4, #40]	; 0x28
     a04:	cmp	r0, #0
     a08:	beq	ac0 <generate_type+0x6d4>
     a0c:	movw	r0, #0
     a10:	movt	r0, #0
     a14:	bl	340 <fi_printf>
     a18:	ldr	r4, [r4, #40]	; 0x28
     a1c:	cmp	r4, #0
     a20:	beq	ab0 <generate_type+0x6c4>
     a24:	mov	r0, r4
     a28:	bl	0 <strlen>
     a2c:	cmp	r0, #1
     a30:	blt	ab0 <generate_type+0x6c4>
     a34:	movw	r8, #0
     a38:	movw	r9, #0
     a3c:	movw	r7, #0
     a40:	movw	r5, #0
     a44:	add	r6, r0, #1
     a48:	movt	r8, #0
     a4c:	movt	r9, #0
     a50:	movt	r7, #0
     a54:	movt	r5, #0
     a58:	ldrb	r1, [r4]
     a5c:	cmp	r1, #62	; 0x3e
     a60:	beq	a8c <generate_type+0x6a0>
     a64:	cmp	r1, #60	; 0x3c
     a68:	beq	a80 <generate_type+0x694>
     a6c:	cmp	r1, #38	; 0x26
     a70:	bne	a98 <generate_type+0x6ac>
     a74:	mov	r0, r7
     a78:	bl	2f8 <ff_printf>
     a7c:	b	aa0 <generate_type+0x6b4>
     a80:	mov	r0, r9
     a84:	bl	2f8 <ff_printf>
     a88:	b	aa0 <generate_type+0x6b4>
     a8c:	mov	r0, r8
     a90:	bl	2f8 <ff_printf>
     a94:	b	aa0 <generate_type+0x6b4>
     a98:	mov	r0, r5
     a9c:	bl	2f8 <ff_printf>
     aa0:	sub	r6, r6, #1
     aa4:	add	r4, r4, #1
     aa8:	cmp	r6, #1
     aac:	bgt	a58 <generate_type+0x66c>
     ab0:	movw	r0, #0
     ab4:	movt	r0, #0
     ab8:	bl	2f8 <ff_printf>
     abc:	ldr	r4, [sp, #16]
     ac0:	ldr	r0, [r4, #44]	; 0x2c
     ac4:	cmp	r0, #1
     ac8:	bne	ad8 <generate_type+0x6ec>
     acc:	movw	r0, #0
     ad0:	movt	r0, #0
     ad4:	bl	340 <fi_printf>
     ad8:	ldr	r0, [r4, #48]	; 0x30
     adc:	cmp	r0, #0
     ae0:	beq	11a4 <generate_type+0xdb8>
     ae4:	vldmia	r0, {d16-d17}
     ae8:	movw	r0, #0
     aec:	movt	r0, #0
     af0:	vmov	r2, r3, d16
     af4:	vstr	d17, [sp]
     af8:	bl	340 <fi_printf>
     afc:	ldr	r0, [r4, #48]	; 0x30
     b00:	vldr	d16, [r0, #16]
     b04:	vcmp.f64	d16, #0.0
     b08:	vmrs	APSR_nzcv, fpscr
     b0c:	beq	b24 <generate_type+0x738>
     b10:	movw	r0, #0
     b14:	vmov	r2, r3, d16
     b18:	movt	r0, #0
     b1c:	bl	2f8 <ff_printf>
     b20:	ldr	r0, [r4, #48]	; 0x30
     b24:	vldr	d0, [r0, #24]
     b28:	bl	0 <coda_isNaN>
     b2c:	cmp	r0, #0
     b30:	bne	b4c <generate_type+0x760>
     b34:	ldr	r0, [r4, #48]	; 0x30
     b38:	vldr	d16, [r0, #24]
     b3c:	movw	r0, #0
     b40:	movt	r0, #0
     b44:	vmov	r2, r3, d16
     b48:	bl	2f8 <ff_printf>
     b4c:	ldr	r0, [r4, #48]	; 0x30
     b50:	ldr	r0, [r0, #32]
     b54:	cmp	r0, #0
     b58:	beq	1198 <generate_type+0xdac>
     b5c:	movw	r0, #0
     b60:	movt	r0, #0
     b64:	bl	2f8 <ff_printf>
     b68:	movw	r9, #0
     b6c:	movt	r9, #0
     b70:	ldr	r0, [r9]
     b74:	add	r0, r0, #1
     b78:	str	r0, [r9]
     b7c:	movw	r0, #0
     b80:	movt	r0, #0
     b84:	bl	340 <fi_printf>
     b88:	ldr	r0, [r4, #48]	; 0x30
     b8c:	ldr	r4, [r0, #32]
     b90:	cmp	r4, #0
     b94:	beq	c24 <generate_type+0x838>
     b98:	mov	r0, r4
     b9c:	bl	0 <strlen>
     ba0:	cmp	r0, #1
     ba4:	blt	c24 <generate_type+0x838>
     ba8:	movw	r8, #0
     bac:	movw	sl, #0
     bb0:	movw	r7, #0
     bb4:	movw	r5, #0
     bb8:	add	r6, r0, #1
     bbc:	movt	r8, #0
     bc0:	movt	sl, #0
     bc4:	movt	r7, #0
     bc8:	movt	r5, #0
     bcc:	ldrb	r1, [r4]
     bd0:	cmp	r1, #62	; 0x3e
     bd4:	beq	c00 <generate_type+0x814>
     bd8:	cmp	r1, #60	; 0x3c
     bdc:	beq	bf4 <generate_type+0x808>
     be0:	cmp	r1, #38	; 0x26
     be4:	bne	c0c <generate_type+0x820>
     be8:	mov	r0, r7
     bec:	bl	2f8 <ff_printf>
     bf0:	b	c14 <generate_type+0x828>
     bf4:	mov	r0, sl
     bf8:	bl	2f8 <ff_printf>
     bfc:	b	c14 <generate_type+0x828>
     c00:	mov	r0, r8
     c04:	bl	2f8 <ff_printf>
     c08:	b	c14 <generate_type+0x828>
     c0c:	mov	r0, r5
     c10:	bl	2f8 <ff_printf>
     c14:	sub	r6, r6, #1
     c18:	add	r4, r4, #1
     c1c:	cmp	r6, #1
     c20:	bgt	bcc <generate_type+0x7e0>
     c24:	movw	r0, #0
     c28:	movt	r0, #0
     c2c:	bl	2f8 <ff_printf>
     c30:	ldr	r0, [r9]
     c34:	sub	r0, r0, #1
     c38:	str	r0, [r9]
     c3c:	movw	r0, #0
     c40:	movt	r0, #0
     c44:	bl	340 <fi_printf>
     c48:	ldr	r4, [sp, #16]
     c4c:	b	11a4 <generate_type+0xdb8>
     c50:	ldr	r0, [sp, #48]	; 0x30
     c54:	ldr	r6, [sp, #16]
     c58:	cmp	r0, #0
     c5c:	ldrne	r0, [r6, #68]	; 0x44
     c60:	cmpne	r0, #0
     c64:	beq	c94 <generate_type+0x8a8>
     c68:	movw	r1, #0
     c6c:	add	r0, sp, #52	; 0x34
     c70:	movt	r1, #0
     c74:	bl	1344 <fic_printf>
     c78:	ldr	r0, [r6, #68]	; 0x44
     c7c:	movw	r1, #0
     c80:	movt	r1, #0
     c84:	bl	0 <coda_expression_print_xml>
     c88:	movw	r0, #0
     c8c:	movt	r0, #0
     c90:	bl	2f8 <ff_printf>
     c94:	add	r1, sp, #44	; 0x2c
     c98:	mov	r0, r6
     c9c:	bl	0 <coda_type_get_num_record_fields>
     ca0:	ldr	r0, [sp, #44]	; 0x2c
     ca4:	cmp	r0, #1
     ca8:	blt	125c <generate_type+0xe70>
     cac:	movw	r5, #0
     cb0:	movw	r9, #0
     cb4:	movw	r4, #0
     cb8:	mov	r8, #0
     cbc:	add	r7, sp, #52	; 0x34
     cc0:	movt	r5, #0
     cc4:	movt	r9, #0
     cc8:	movt	r4, #0
     ccc:	ldr	r0, [r6, #52]	; 0x34
     cd0:	mov	r1, r5
     cd4:	ldr	sl, [r0, r8, lsl #2]
     cd8:	mov	r0, r7
     cdc:	ldr	r2, [sl]
     ce0:	bl	1344 <fic_printf>
     ce4:	ldr	r0, [sl, #4]
     ce8:	cmp	r0, #0
     cec:	beq	db0 <generate_type+0x9c4>
     cf0:	ldr	r1, [sl]
     cf4:	bl	0 <strcmp>
     cf8:	cmp	r0, #0
     cfc:	beq	db0 <generate_type+0x9c4>
     d00:	movw	r0, #0
     d04:	movt	r0, #0
     d08:	bl	2f8 <ff_printf>
     d0c:	ldr	r6, [sl, #4]
     d10:	cmp	r6, #0
     d14:	beq	d94 <generate_type+0x9a8>
     d18:	mov	r0, r6
     d1c:	bl	0 <strlen>
     d20:	cmp	r0, #1
     d24:	blt	d94 <generate_type+0x9a8>
     d28:	add	r9, r0, #1
     d2c:	ldrb	r1, [r6]
     d30:	cmp	r1, #62	; 0x3e
     d34:	beq	d68 <generate_type+0x97c>
     d38:	cmp	r1, #60	; 0x3c
     d3c:	beq	d58 <generate_type+0x96c>
     d40:	cmp	r1, #38	; 0x26
     d44:	bne	d78 <generate_type+0x98c>
     d48:	movw	r0, #0
     d4c:	movt	r0, #0
     d50:	bl	2f8 <ff_printf>
     d54:	b	d84 <generate_type+0x998>
     d58:	movw	r0, #0
     d5c:	movt	r0, #0
     d60:	bl	2f8 <ff_printf>
     d64:	b	d84 <generate_type+0x998>
     d68:	movw	r0, #0
     d6c:	movt	r0, #0
     d70:	bl	2f8 <ff_printf>
     d74:	b	d84 <generate_type+0x998>
     d78:	movw	r0, #0
     d7c:	movt	r0, #0
     d80:	bl	2f8 <ff_printf>
     d84:	sub	r9, r9, #1
     d88:	add	r6, r6, #1
     d8c:	cmp	r9, #1
     d90:	bgt	d2c <generate_type+0x940>
     d94:	movw	r0, #0
     d98:	movt	r0, #0
     d9c:	bl	2f8 <ff_printf>
     da0:	ldr	r6, [sp, #16]
     da4:	movw	r9, #0
     da8:	mov	r0, r5
     dac:	movt	r9, #0
     db0:	mov	r0, r9
     db4:	bl	2f8 <ff_printf>
     db8:	ldr	r0, [r4]
     dbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
     dc0:	add	r0, r0, #1
     dc4:	str	r0, [r4]
     dc8:	ldr	r0, [sl, #8]
     dcc:	bl	3ec <generate_type>
     dd0:	ldr	r0, [sl, #12]
     dd4:	cmp	r0, #0
     dd8:	beq	de8 <generate_type+0x9fc>
     ddc:	movw	r0, #0
     de0:	movt	r0, #0
     de4:	bl	340 <fi_printf>
     de8:	ldrb	r0, [sl, #16]
     dec:	cmp	r0, #0
     df0:	beq	e38 <generate_type+0xa4c>
     df4:	ldr	r0, [sl, #20]
     df8:	cmp	r0, #0
     dfc:	beq	e2c <generate_type+0xa40>
     e00:	movw	r0, #0
     e04:	movt	r0, #0
     e08:	bl	340 <fi_printf>
     e0c:	ldr	r0, [sl, #20]
     e10:	movw	r1, #0
     e14:	movt	r1, #0
     e18:	bl	0 <coda_expression_print_xml>
     e1c:	movw	r0, #0
     e20:	movt	r0, #0
     e24:	bl	2f8 <ff_printf>
     e28:	b	e38 <generate_type+0xa4c>
     e2c:	movw	r0, #0
     e30:	movt	r0, #0
     e34:	bl	340 <fi_printf>
     e38:	mvn	r0, #7
     e3c:	adds	r2, r0, #7
     e40:	mvn	r0, #0
     e44:	adc	r3, r0, #0
     e48:	ldrd	r0, [sl, #24]
     e4c:	subs	r2, r2, r0
     e50:	sbcs	r2, r3, r1
     e54:	bge	e98 <generate_type+0xaac>
     e58:	mov	sl, r5
     e5c:	mov	r5, r7
     e60:	mov	r7, r6
     e64:	mov	r6, r4
     e68:	add	r4, sp, #20
     e6c:	mov	r2, r4
     e70:	bl	0 <coda_str64>
     e74:	movw	r0, #0
     e78:	mov	r1, r4
     e7c:	mov	r4, r6
     e80:	mov	r6, r7
     e84:	mov	r7, r5
     e88:	mov	r5, sl
     e8c:	movt	r0, #0
     e90:	bl	340 <fi_printf>
     e94:	b	ecc <generate_type+0xae0>
     e98:	ldr	r0, [sl, #32]
     e9c:	cmp	r0, #0
     ea0:	beq	ecc <generate_type+0xae0>
     ea4:	movw	r0, #0
     ea8:	movt	r0, #0
     eac:	bl	340 <fi_printf>
     eb0:	ldr	r0, [sl, #32]
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	bl	0 <coda_expression_print_xml>
     ec0:	movw	r0, #0
     ec4:	movt	r0, #0
     ec8:	bl	2f8 <ff_printf>
     ecc:	ldr	r0, [r4]
     ed0:	sub	r0, r0, #1
     ed4:	str	r0, [r4]
     ed8:	movw	r0, #0
     edc:	movt	r0, #0
     ee0:	bl	340 <fi_printf>
     ee4:	ldr	r0, [sp, #44]	; 0x2c
     ee8:	add	r8, r8, #1
     eec:	cmp	r8, r0
     ef0:	blt	ccc <generate_type+0x8e0>
     ef4:	b	125c <generate_type+0xe70>
     ef8:	ldr	r7, [sp, #16]
     efc:	ldr	r0, [r7, #48]	; 0x30
     f00:	cmp	r0, #1
     f04:	blt	fb0 <generate_type+0xbc4>
     f08:	movw	r6, #0
     f0c:	movw	sl, #0
     f10:	mov	r8, #0
     f14:	add	r4, sp, #20
     f18:	add	r5, sp, #52	; 0x34
     f1c:	movt	r6, #0
     f20:	movt	sl, #0
     f24:	add	r9, r7, r8, lsl #2
     f28:	ldr	r0, [r9, #52]	; 0x34
     f2c:	cmp	r0, #0
     f30:	blt	f54 <generate_type+0xb68>
     f34:	asr	r1, r0, #31
     f38:	mov	r2, r4
     f3c:	bl	0 <coda_str64>
     f40:	mov	r0, r5
     f44:	mov	r1, r6
     f48:	mov	r2, r4
     f4c:	bl	1344 <fic_printf>
     f50:	b	f9c <generate_type+0xbb0>
     f54:	ldr	r0, [r9, #84]	; 0x54
     f58:	cmp	r0, #0
     f5c:	beq	f8c <generate_type+0xba0>
     f60:	movw	r1, #0
     f64:	mov	r0, r5
     f68:	movt	r1, #0
     f6c:	bl	1344 <fic_printf>
     f70:	ldr	r0, [r9, #84]	; 0x54
     f74:	movw	r1, #0
     f78:	movt	r1, #0
     f7c:	bl	0 <coda_expression_print_xml>
     f80:	mov	r0, sl
     f84:	bl	2f8 <ff_printf>
     f88:	b	f9c <generate_type+0xbb0>
     f8c:	movw	r1, #0
     f90:	mov	r0, r5
     f94:	movt	r1, #0
     f98:	bl	1344 <fic_printf>
     f9c:	ldr	r7, [sp, #16]
     fa0:	add	r8, r8, #1
     fa4:	ldr	r0, [r7, #48]	; 0x30
     fa8:	cmp	r8, r0
     fac:	blt	f24 <generate_type+0xb38>
     fb0:	ldr	r0, [sp, #52]	; 0x34
     fb4:	cmp	r0, #0
     fb8:	bne	fe4 <generate_type+0xbf8>
     fbc:	movw	r0, #0
     fc0:	movt	r0, #0
     fc4:	bl	2f8 <ff_printf>
     fc8:	movw	r0, #0
     fcc:	movt	r0, #0
     fd0:	ldr	r1, [r0]
     fd4:	add	r1, r1, #1
     fd8:	str	r1, [r0]
     fdc:	mov	r0, #1
     fe0:	str	r0, [sp, #52]	; 0x34
     fe4:	ldr	r0, [r7, #40]	; 0x28
     fe8:	b	1128 <generate_type+0xd3c>
     fec:	ldr	r0, [sp, #16]
     ff0:	ldr	r0, [r0, #44]	; 0x2c
     ff4:	cmp	r0, #0
     ff8:	beq	125c <generate_type+0xe70>
     ffc:	movw	r1, #0
    1000:	add	r0, sp, #52	; 0x34
    1004:	movt	r1, #0
    1008:	bl	1344 <fic_printf>
    100c:	ldr	r0, [sp, #16]
    1010:	ldrd	r2, [r0, #40]	; 0x28
    1014:	mov	r0, r3
    1018:	mov	r1, r2
    101c:	b	1184 <generate_type+0xd98>
    1020:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1024:	ldr	r4, [sp, #16]
    1028:	cmp	r0, #1
    102c:	bne	10f0 <generate_type+0xd04>
    1030:	ldr	r0, [r4, #48]	; 0x30
    1034:	cmp	r0, #0
    1038:	beq	10f0 <generate_type+0xd04>
    103c:	movw	r0, #0
    1040:	movt	r0, #0
    1044:	bl	340 <fi_printf>
    1048:	ldr	r4, [r4, #48]	; 0x30
    104c:	cmp	r4, #0
    1050:	beq	10e0 <generate_type+0xcf4>
    1054:	mov	r0, r4
    1058:	bl	0 <strlen>
    105c:	cmp	r0, #1
    1060:	blt	10e0 <generate_type+0xcf4>
    1064:	movw	r8, #0
    1068:	movw	r9, #0
    106c:	movw	r7, #0
    1070:	movw	r5, #0
    1074:	add	r6, r0, #1
    1078:	movt	r8, #0
    107c:	movt	r9, #0
    1080:	movt	r7, #0
    1084:	movt	r5, #0
    1088:	ldrb	r1, [r4]
    108c:	cmp	r1, #62	; 0x3e
    1090:	beq	10bc <generate_type+0xcd0>
    1094:	cmp	r1, #60	; 0x3c
    1098:	beq	10b0 <generate_type+0xcc4>
    109c:	cmp	r1, #38	; 0x26
    10a0:	bne	10c8 <generate_type+0xcdc>
    10a4:	mov	r0, r7
    10a8:	bl	2f8 <ff_printf>
    10ac:	b	10d0 <generate_type+0xce4>
    10b0:	mov	r0, r9
    10b4:	bl	2f8 <ff_printf>
    10b8:	b	10d0 <generate_type+0xce4>
    10bc:	mov	r0, r8
    10c0:	bl	2f8 <ff_printf>
    10c4:	b	10d0 <generate_type+0xce4>
    10c8:	mov	r0, r5
    10cc:	bl	2f8 <ff_printf>
    10d0:	sub	r6, r6, #1
    10d4:	add	r4, r4, #1
    10d8:	cmp	r6, #1
    10dc:	bgt	1088 <generate_type+0xc9c>
    10e0:	movw	r0, #0
    10e4:	movt	r0, #0
    10e8:	bl	2f8 <ff_printf>
    10ec:	ldr	r4, [sp, #16]
    10f0:	ldr	r0, [sp, #52]	; 0x34
    10f4:	cmp	r0, #0
    10f8:	bne	1124 <generate_type+0xd38>
    10fc:	movw	r0, #0
    1100:	movt	r0, #0
    1104:	bl	2f8 <ff_printf>
    1108:	movw	r0, #0
    110c:	movt	r0, #0
    1110:	ldr	r1, [r0]
    1114:	add	r1, r1, #1
    1118:	str	r1, [r0]
    111c:	mov	r0, #1
    1120:	str	r0, [sp, #52]	; 0x34
    1124:	ldr	r0, [r4, #44]	; 0x2c
    1128:	ldr	r1, [fp, #-40]	; 0xffffffd8
    112c:	bl	3ec <generate_type>
    1130:	b	125c <generate_type+0xe70>
    1134:	ldr	r4, [sp, #16]
    1138:	ldr	r0, [r4, #12]
    113c:	cmp	r0, #11
    1140:	beq	115c <generate_type+0xd70>
    1144:	bl	0 <coda_type_get_native_type_name>
    1148:	movw	r1, #0
    114c:	mov	r2, r0
    1150:	add	r0, sp, #52	; 0x34
    1154:	movt	r1, #0
    1158:	bl	1344 <fic_printf>
    115c:	ldr	r0, [r4, #40]	; 0x28
    1160:	cmp	r0, #0
    1164:	beq	125c <generate_type+0xe70>
    1168:	movw	r1, #0
    116c:	add	r0, sp, #52	; 0x34
    1170:	movt	r1, #0
    1174:	bl	1344 <fic_printf>
    1178:	ldr	r0, [sp, #16]
    117c:	mvn	r1, #0
    1180:	ldr	r0, [r0, #40]	; 0x28
    1184:	bl	1430 <generate_escaped_string>
    1188:	movw	r0, #0
    118c:	movt	r0, #0
    1190:	bl	2f8 <ff_printf>
    1194:	b	125c <generate_type+0xe70>
    1198:	movw	r0, #0
    119c:	movt	r0, #0
    11a0:	bl	2f8 <ff_printf>
    11a4:	ldr	r0, [r4, #52]	; 0x34
    11a8:	cmp	r0, #0
    11ac:	beq	125c <generate_type+0xe70>
    11b0:	ldr	r1, [r0, #8]
    11b4:	cmp	r1, #1
    11b8:	blt	125c <generate_type+0xe70>
    11bc:	movw	r8, #0
    11c0:	movw	r9, #0
    11c4:	movw	sl, #0
    11c8:	movw	r4, #0
    11cc:	mov	r5, #0
    11d0:	add	r6, sp, #20
    11d4:	movt	r8, #0
    11d8:	movt	r9, #0
    11dc:	movt	sl, #0
    11e0:	movt	r4, #0
    11e4:	ldr	r0, [r0, #12]
    11e8:	ldr	r7, [r0, r5, lsl #2]
    11ec:	mov	r0, r8
    11f0:	bl	340 <fi_printf>
    11f4:	ldr	r1, [r7]
    11f8:	ldr	r0, [r7, #4]
    11fc:	bl	1430 <generate_escaped_string>
    1200:	mov	r0, r9
    1204:	bl	2f8 <ff_printf>
    1208:	ldr	r0, [fp, #-32]	; 0xffffffe0
    120c:	cmp	r0, #2
    1210:	bne	1224 <generate_type+0xe38>
    1214:	ldrd	r0, [r7, #8]
    1218:	mov	r2, r6
    121c:	bl	0 <coda_str64>
    1220:	b	1230 <generate_type+0xe44>
    1224:	vldr	d0, [r7, #8]
    1228:	mov	r0, r6
    122c:	bl	0 <coda_strfl>
    1230:	mov	r0, sl
    1234:	mov	r1, r6
    1238:	bl	2f8 <ff_printf>
    123c:	mov	r0, r4
    1240:	bl	2f8 <ff_printf>
    1244:	ldr	r0, [sp, #16]
    1248:	add	r5, r5, #1
    124c:	ldr	r0, [r0, #52]	; 0x34
    1250:	ldr	r1, [r0, #8]
    1254:	cmp	r5, r1
    1258:	blt	11e4 <generate_type+0xdf8>
    125c:	ldr	r0, [sp, #52]	; 0x34
    1260:	cmp	r0, #0
    1264:	beq	1294 <generate_type+0xea8>
    1268:	movw	r0, #0
    126c:	movt	r0, #0
    1270:	ldr	r1, [r0]
    1274:	sub	r1, r1, #1
    1278:	str	r1, [r0]
    127c:	ldr	r1, [sp, #12]
    1280:	movw	r0, #0
    1284:	movt	r0, #0
    1288:	bl	340 <fi_printf>
    128c:	sub	sp, fp, #28
    1290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1294:	movw	r0, #0
    1298:	movt	r0, #0
    129c:	bl	2f8 <ff_printf>
    12a0:	sub	sp, fp, #28
    12a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12a8:	movw	sl, #0
    12ac:	movt	sl, #0
    12b0:	b	504 <generate_type+0x118>
    12b4:	movw	sl, #0
    12b8:	movt	sl, #0
    12bc:	b	504 <generate_type+0x118>
    12c0:	movw	sl, #0
    12c4:	movt	sl, #0
    12c8:	b	504 <generate_type+0x118>
    12cc:	movw	sl, #0
    12d0:	movt	sl, #0
    12d4:	b	504 <generate_type+0x118>
    12d8:	movw	sl, #0
    12dc:	movt	sl, #0
    12e0:	b	504 <generate_type+0x118>
    12e4:	movw	r0, #0
    12e8:	movw	r1, #0
    12ec:	movw	r3, #0
    12f0:	mov	r2, #352	; 0x160
    12f4:	movt	r0, #0
    12f8:	movt	r1, #0
    12fc:	movt	r3, #0
    1300:	bl	0 <__assert_fail>
    1304:	movw	r0, #0
    1308:	movw	r1, #0
    130c:	movw	r3, #0
    1310:	movw	r2, #273	; 0x111
    1314:	movt	r0, #0
    1318:	movt	r1, #0
    131c:	movt	r3, #0
    1320:	bl	0 <__assert_fail>
    1324:	movw	r0, #0
    1328:	movw	r1, #0
    132c:	movw	r3, #0
    1330:	movw	r2, #301	; 0x12d
    1334:	movt	r0, #0
    1338:	movt	r1, #0
    133c:	movt	r3, #0
    1340:	bl	0 <__assert_fail>

00001344 <fic_printf>:
    1344:	sub	sp, sp, #8
    1348:	push	{r4, r5, r6, r7, fp, lr}
    134c:	add	fp, sp, #16
    1350:	sub	sp, sp, #8
    1354:	str	r3, [fp, #12]
    1358:	str	r2, [fp, #8]
    135c:	mov	r5, r0
    1360:	mov	r4, r1
    1364:	ldr	r0, [r0]
    1368:	cmp	r0, #0
    136c:	beq	13e0 <fic_printf+0x9c>
    1370:	movw	r0, #0
    1374:	movt	r0, #0
    1378:	ldr	r6, [r0]
    137c:	cmp	r6, #0
    1380:	blt	1410 <fic_printf+0xcc>
    1384:	beq	13b4 <fic_printf+0x70>
    1388:	movw	r7, #0
    138c:	movw	r5, #0
    1390:	movt	r7, #0
    1394:	movt	r5, #0
    1398:	ldr	r3, [r7]
    139c:	mov	r0, r5
    13a0:	mov	r1, #2
    13a4:	mov	r2, #1
    13a8:	bl	0 <fwrite>
    13ac:	subs	r6, r6, #1
    13b0:	bne	1398 <fic_printf+0x54>
    13b4:	movw	r0, #0
    13b8:	add	r2, fp, #8
    13bc:	mov	r1, r4
    13c0:	movt	r0, #0
    13c4:	str	r2, [sp, #4]
    13c8:	ldr	r0, [r0]
    13cc:	bl	0 <vfprintf>
    13d0:	sub	sp, fp, #16
    13d4:	pop	{r4, r5, r6, r7, fp, lr}
    13d8:	add	sp, sp, #8
    13dc:	bx	lr
    13e0:	movw	r0, #0
    13e4:	movt	r0, #0
    13e8:	bl	2f8 <ff_printf>
    13ec:	mov	r0, #1
    13f0:	str	r0, [r5]
    13f4:	movw	r0, #0
    13f8:	movt	r0, #0
    13fc:	ldr	r1, [r0]
    1400:	add	r6, r1, #1
    1404:	str	r6, [r0]
    1408:	cmp	r6, #0
    140c:	bge	1384 <fic_printf+0x40>
    1410:	movw	r0, #0
    1414:	movw	r1, #0
    1418:	movw	r3, #0
    141c:	mov	r2, #68	; 0x44
    1420:	movt	r0, #0
    1424:	movt	r1, #0
    1428:	movt	r3, #0
    142c:	bl	0 <__assert_fail>

00001430 <generate_escaped_string>:
    1430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1434:	add	fp, sp, #28
    1438:	sub	sp, sp, #4
    143c:	cmp	r0, #0
    1440:	cmpne	r1, #0
    1444:	beq	1710 <generate_escaped_string+0x2e0>
    1448:	mov	r4, r0
    144c:	cmn	r1, #1
    1450:	bgt	1468 <generate_escaped_string+0x38>
    1454:	mov	r0, r4
    1458:	bl	0 <strlen>
    145c:	mov	r1, r0
    1460:	cmp	r0, #1
    1464:	blt	1710 <generate_escaped_string+0x2e0>
    1468:	movw	r8, #0
    146c:	movw	r9, #0
    1470:	movw	sl, #0
    1474:	movw	r5, #0
    1478:	add	r7, r1, #1
    147c:	movt	r8, #0
    1480:	movt	r9, #0
    1484:	movt	sl, #0
    1488:	movt	r5, #0
    148c:	ldrb	r6, [r4]
    1490:	sub	r0, r6, #7
    1494:	cmp	r0, #85	; 0x55
    1498:	bhi	166c <generate_escaped_string+0x23c>
    149c:	add	r1, pc, #0
    14a0:	ldr	pc, [r1, r0, lsl #2]
    14a4:	.word	0x000015fc
    14a8:	.word	0x0000160c
    14ac:	.word	0x0000161c
    14b0:	.word	0x0000162c
    14b4:	.word	0x0000163c
    14b8:	.word	0x0000164c
    14bc:	.word	0x0000165c
    14c0:	.word	0x0000166c
    14c4:	.word	0x0000166c
    14c8:	.word	0x0000166c
    14cc:	.word	0x0000166c
    14d0:	.word	0x0000166c
    14d4:	.word	0x0000166c
    14d8:	.word	0x0000166c
    14dc:	.word	0x0000166c
    14e0:	.word	0x0000166c
    14e4:	.word	0x0000166c
    14e8:	.word	0x0000166c
    14ec:	.word	0x0000166c
    14f0:	.word	0x0000166c
    14f4:	.word	0x00001690
    14f8:	.word	0x0000166c
    14fc:	.word	0x0000166c
    1500:	.word	0x0000166c
    1504:	.word	0x0000166c
    1508:	.word	0x000016a0
    150c:	.word	0x0000166c
    1510:	.word	0x000016b0
    1514:	.word	0x0000166c
    1518:	.word	0x0000166c
    151c:	.word	0x0000166c
    1520:	.word	0x000016c0
    1524:	.word	0x0000166c
    1528:	.word	0x0000166c
    152c:	.word	0x0000166c
    1530:	.word	0x0000166c
    1534:	.word	0x0000166c
    1538:	.word	0x0000166c
    153c:	.word	0x0000166c
    1540:	.word	0x0000166c
    1544:	.word	0x0000166c
    1548:	.word	0x0000166c
    154c:	.word	0x0000166c
    1550:	.word	0x0000166c
    1554:	.word	0x0000166c
    1558:	.word	0x0000166c
    155c:	.word	0x0000166c
    1560:	.word	0x0000166c
    1564:	.word	0x0000166c
    1568:	.word	0x0000166c
    156c:	.word	0x0000166c
    1570:	.word	0x0000166c
    1574:	.word	0x0000166c
    1578:	.word	0x000016cc
    157c:	.word	0x0000166c
    1580:	.word	0x000016d8
    1584:	.word	0x0000166c
    1588:	.word	0x0000166c
    158c:	.word	0x0000166c
    1590:	.word	0x0000166c
    1594:	.word	0x0000166c
    1598:	.word	0x0000166c
    159c:	.word	0x0000166c
    15a0:	.word	0x0000166c
    15a4:	.word	0x0000166c
    15a8:	.word	0x0000166c
    15ac:	.word	0x0000166c
    15b0:	.word	0x0000166c
    15b4:	.word	0x0000166c
    15b8:	.word	0x0000166c
    15bc:	.word	0x0000166c
    15c0:	.word	0x0000166c
    15c4:	.word	0x0000166c
    15c8:	.word	0x0000166c
    15cc:	.word	0x0000166c
    15d0:	.word	0x0000166c
    15d4:	.word	0x0000166c
    15d8:	.word	0x0000166c
    15dc:	.word	0x0000166c
    15e0:	.word	0x0000166c
    15e4:	.word	0x0000166c
    15e8:	.word	0x0000166c
    15ec:	.word	0x0000166c
    15f0:	.word	0x0000166c
    15f4:	.word	0x0000166c
    15f8:	.word	0x000016e4
    15fc:	movw	r0, #0
    1600:	movt	r0, #0
    1604:	bl	2f8 <ff_printf>
    1608:	b	1700 <generate_escaped_string+0x2d0>
    160c:	movw	r0, #0
    1610:	movt	r0, #0
    1614:	bl	2f8 <ff_printf>
    1618:	b	1700 <generate_escaped_string+0x2d0>
    161c:	movw	r0, #0
    1620:	movt	r0, #0
    1624:	bl	2f8 <ff_printf>
    1628:	b	1700 <generate_escaped_string+0x2d0>
    162c:	movw	r0, #0
    1630:	movt	r0, #0
    1634:	bl	2f8 <ff_printf>
    1638:	b	1700 <generate_escaped_string+0x2d0>
    163c:	movw	r0, #0
    1640:	movt	r0, #0
    1644:	bl	2f8 <ff_printf>
    1648:	b	1700 <generate_escaped_string+0x2d0>
    164c:	movw	r0, #0
    1650:	movt	r0, #0
    1654:	bl	2f8 <ff_printf>
    1658:	b	1700 <generate_escaped_string+0x2d0>
    165c:	movw	r0, #0
    1660:	movt	r0, #0
    1664:	bl	2f8 <ff_printf>
    1668:	b	1700 <generate_escaped_string+0x2d0>
    166c:	bl	0 <__ctype_b_loc>
    1670:	ldr	r0, [r0]
    1674:	add	r0, r0, r6, lsl #1
    1678:	ldrb	r0, [r0, #1]
    167c:	tst	r0, #64	; 0x40
    1680:	bne	16f0 <generate_escaped_string+0x2c0>
    1684:	movw	r0, #0
    1688:	movt	r0, #0
    168c:	b	16f8 <generate_escaped_string+0x2c8>
    1690:	movw	r0, #0
    1694:	movt	r0, #0
    1698:	bl	2f8 <ff_printf>
    169c:	b	1700 <generate_escaped_string+0x2d0>
    16a0:	movw	r0, #0
    16a4:	movt	r0, #0
    16a8:	bl	2f8 <ff_printf>
    16ac:	b	1700 <generate_escaped_string+0x2d0>
    16b0:	movw	r0, #0
    16b4:	movt	r0, #0
    16b8:	bl	2f8 <ff_printf>
    16bc:	b	1700 <generate_escaped_string+0x2d0>
    16c0:	mov	r0, r8
    16c4:	bl	2f8 <ff_printf>
    16c8:	b	1700 <generate_escaped_string+0x2d0>
    16cc:	mov	r0, r9
    16d0:	bl	2f8 <ff_printf>
    16d4:	b	1700 <generate_escaped_string+0x2d0>
    16d8:	mov	r0, sl
    16dc:	bl	2f8 <ff_printf>
    16e0:	b	1700 <generate_escaped_string+0x2d0>
    16e4:	mov	r0, r5
    16e8:	bl	2f8 <ff_printf>
    16ec:	b	1700 <generate_escaped_string+0x2d0>
    16f0:	movw	r0, #0
    16f4:	movt	r0, #0
    16f8:	mov	r1, r6
    16fc:	bl	2f8 <ff_printf>
    1700:	sub	r7, r7, #1
    1704:	add	r4, r4, #1
    1708:	cmp	r7, #1
    170c:	bgt	148c <generate_escaped_string+0x5c>
    1710:	sub	sp, fp, #28
    1714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
