
../compcert-repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

000105e8 <.init>:
   105e8:	push	{r3, lr}
   105ec:	bl	10888 <_start@@Base+0x3c>
   105f0:	pop	{r3, pc}

Disassembly of section .plt:

000105f4 <printf@plt-0x14>:
   105f4:	push	{lr}		; (str lr, [sp, #-4]!)
   105f8:	ldr	lr, [pc, #4]	; 10604 <printf@plt-0x4>
   105fc:	add	lr, pc, lr
   10600:	ldr	pc, [lr, #8]!
   10604:	strdeq	r0, [r1], -ip

00010608 <printf@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2556]!	; 0x9fc

00010614 <fopen@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2548]!	; 0x9f4

00010620 <strcpy@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2540]!	; 0x9ec

0001062c <__libc_start_main@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2532]!	; 0x9e4

00010638 <__gmon_start__@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2524]!	; 0x9dc

00010644 <fclose@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010650 <fseek@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2508]!	; 0x9cc

0001065c <abort@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2500]!	; 0x9c4

00010668 <getc@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2492]!	; 0x9bc

Disassembly of section .text:

00010674 <main@@Base>:
   10674:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10678:	movw	r1, #2512	; 0x9d0
   1067c:	movt	r1, #1
   10680:	strd	r6, [sp, #8]
   10684:	movw	r0, #2516	; 0x9d4
   10688:	movt	r0, #1
   1068c:	strd	r8, [sp, #16]
   10690:	strd	sl, [sp, #24]
   10694:	str	lr, [sp, #32]
   10698:	sub	sp, sp, #2256	; 0x8d0
   1069c:	sub	sp, sp, #4
   106a0:	bl	10614 <fopen@plt>
   106a4:	add	r3, sp, #16
   106a8:	add	r8, sp, #204	; 0xcc
   106ac:	mov	r4, r0
   106b0:	add	r9, sp, #4
   106b4:	add	r7, r3, #67	; 0x43
   106b8:	b	106c4 <main@@Base+0x50>
   106bc:	cmp	r0, #60	; 0x3c
   106c0:	beq	10700 <main@@Base+0x8c>
   106c4:	mov	r0, r4
   106c8:	bl	10668 <getc@plt>
   106cc:	cmn	r0, #1
   106d0:	bne	106bc <main@@Base+0x48>
   106d4:	mov	r0, r4
   106d8:	bl	10644 <fclose@plt>
   106dc:	mov	r0, #0
   106e0:	add	sp, sp, #2256	; 0x8d0
   106e4:	add	sp, sp, #4
   106e8:	ldrd	r4, [sp]
   106ec:	ldrd	r6, [sp, #8]
   106f0:	ldrd	r8, [sp, #16]
   106f4:	ldrd	sl, [sp, #24]
   106f8:	add	sp, sp, #32
   106fc:	pop	{pc}		; (ldr pc, [sp], #4)
   10700:	mov	r0, r4
   10704:	bl	10668 <getc@plt>
   10708:	cmp	r0, #97	; 0x61
   1070c:	bne	106c4 <main@@Base+0x50>
   10710:	add	r3, sp, #16
   10714:	add	r6, sp, #3
   10718:	add	r5, r3, #187	; 0xbb
   1071c:	mov	r2, #0
   10720:	mov	r3, r6
   10724:	strb	r2, [r3, #1]!
   10728:	cmp	r3, r5
   1072c:	bne	10724 <main@@Base+0xb0>
   10730:	mov	r2, #1
   10734:	mov	r1, #7
   10738:	mov	r0, r4
   1073c:	mov	sl, r9
   10740:	bl	10650 <fseek@plt>
   10744:	mov	fp, #0
   10748:	b	10754 <main@@Base+0xe0>
   1074c:	add	fp, fp, #1
   10750:	strb	r0, [sl], #1
   10754:	mov	r0, r4
   10758:	bl	10668 <getc@plt>
   1075c:	cmp	r0, #34	; 0x22
   10760:	bne	1074c <main@@Base+0xd8>
   10764:	add	r3, sp, #2256	; 0x8d0
   10768:	mov	sl, #0
   1076c:	add	fp, r3, fp
   10770:	mov	r1, r9
   10774:	mov	r0, r8
   10778:	strb	sl, [fp, #-2252]	; 0xfffff734
   1077c:	bl	10620 <strcpy@plt>
   10780:	mov	r2, sl
   10784:	mov	r3, r6
   10788:	strb	r2, [r3, #1]!
   1078c:	cmp	r3, r5
   10790:	bne	10788 <main@@Base+0x114>
   10794:	mov	r2, #1
   10798:	mov	r0, r4
   1079c:	mov	r1, r2
   107a0:	mov	r5, #0
   107a4:	mvn	fp, #60	; 0x3c
   107a8:	mvn	sl, #94	; 0x5e
   107ac:	bl	10650 <fseek@plt>
   107b0:	mov	r0, r4
   107b4:	bl	10668 <getc@plt>
   107b8:	cmp	r0, #60	; 0x3c
   107bc:	add	r3, sp, #2256	; 0x8d0
   107c0:	add	r2, r3, r5
   107c4:	add	r3, r5, #1
   107c8:	beq	107f8 <main@@Base+0x184>
   107cc:	cmp	r0, #225	; 0xe1
   107d0:	movne	r5, r3
   107d4:	strbne	r0, [r2, #-2252]	; 0xfffff734
   107d8:	bne	107b0 <main@@Base+0x13c>
   107dc:	add	r2, sp, #2256	; 0x8d0
   107e0:	add	r3, r2, r3
   107e4:	add	r2, r2, r5
   107e8:	add	r5, r5, #2
   107ec:	strb	fp, [r2, #-2252]	; 0xfffff734
   107f0:	strb	sl, [r3, #-2252]	; 0xfffff734
   107f4:	b	107b0 <main@@Base+0x13c>
   107f8:	add	r3, sp, #2256	; 0x8d0
   107fc:	add	r2, r8, #205	; 0xcd
   10800:	add	r5, r3, r5
   10804:	mov	sl, #0
   10808:	mov	r0, r2
   1080c:	mov	r1, r9
   10810:	strb	sl, [r5, #-2252]	; 0xfffff734
   10814:	bl	10620 <strcpy@plt>
   10818:	mov	r2, r0
   1081c:	mov	r3, sl
   10820:	strb	r3, [r6, #1]!
   10824:	cmp	r7, r6
   10828:	bne	10820 <main@@Base+0x1ac>
   1082c:	mov	r1, r2
   10830:	movw	r0, #2540	; 0x9ec
   10834:	movt	r0, #1
   10838:	mov	r2, r8
   1083c:	add	r8, r8, #408	; 0x198
   10840:	add	r8, r8, #2
   10844:	bl	10608 <printf@plt>
   10848:	b	106c4 <main@@Base+0x50>

0001084c <_start@@Base>:
   1084c:	mov	fp, #0
   10850:	mov	lr, #0
   10854:	pop	{r1}		; (ldr r1, [sp], #4)
   10858:	mov	r2, sp
   1085c:	push	{r2}		; (str r2, [sp, #-4]!)
   10860:	push	{r0}		; (str r0, [sp, #-4]!)
   10864:	ldr	ip, [pc, #16]	; 1087c <_start@@Base+0x30>
   10868:	push	{ip}		; (str ip, [sp, #-4]!)
   1086c:	ldr	r0, [pc, #12]	; 10880 <_start@@Base+0x34>
   10870:	ldr	r3, [pc, #12]	; 10884 <_start@@Base+0x38>
   10874:	bl	1062c <__libc_start_main@plt>
   10878:	bl	1065c <abort@plt>
   1087c:	andeq	r0, r1, r0, asr #19
   10880:	andeq	r0, r1, r4, ror r6
   10884:	andeq	r0, r1, r0, ror #18
   10888:	ldr	r3, [pc, #20]	; 108a4 <_start@@Base+0x58>
   1088c:	ldr	r2, [pc, #20]	; 108a8 <_start@@Base+0x5c>
   10890:	add	r3, pc, r3
   10894:	ldr	r2, [r3, r2]
   10898:	cmp	r2, #0
   1089c:	bxeq	lr
   108a0:	b	10638 <__gmon_start__@plt>
   108a4:	andeq	r0, r1, r8, ror #14
   108a8:	andeq	r0, r0, r0, lsr r0
   108ac:	ldr	r0, [pc, #24]	; 108cc <_start@@Base+0x80>
   108b0:	ldr	r3, [pc, #24]	; 108d0 <_start@@Base+0x84>
   108b4:	cmp	r3, r0
   108b8:	bxeq	lr
   108bc:	ldr	r3, [pc, #16]	; 108d4 <_start@@Base+0x88>
   108c0:	cmp	r3, #0
   108c4:	bxeq	lr
   108c8:	bx	r3
   108cc:	andeq	r1, r2, ip, lsr r0
   108d0:	andeq	r1, r2, ip, lsr r0
   108d4:	andeq	r0, r0, r0
   108d8:	ldr	r0, [pc, #36]	; 10904 <_start@@Base+0xb8>
   108dc:	ldr	r1, [pc, #36]	; 10908 <_start@@Base+0xbc>
   108e0:	sub	r1, r1, r0
   108e4:	asr	r1, r1, #2
   108e8:	add	r1, r1, r1, lsr #31
   108ec:	asrs	r1, r1, #1
   108f0:	bxeq	lr
   108f4:	ldr	r3, [pc, #16]	; 1090c <_start@@Base+0xc0>
   108f8:	cmp	r3, #0
   108fc:	bxeq	lr
   10900:	bx	r3
   10904:	andeq	r1, r2, ip, lsr r0
   10908:	andeq	r1, r2, ip, lsr r0
   1090c:	andeq	r0, r0, r0
   10910:	push	{r4, lr}
   10914:	ldr	r4, [pc, #24]	; 10934 <_start@@Base+0xe8>
   10918:	ldrb	r3, [r4]
   1091c:	cmp	r3, #0
   10920:	popne	{r4, pc}
   10924:	bl	108ac <_start@@Base+0x60>
   10928:	mov	r3, #1
   1092c:	strb	r3, [r4]
   10930:	pop	{r4, pc}
   10934:	andeq	r1, r2, ip, lsr r0
   10938:	b	108d8 <_start@@Base+0x8c>

0001093c <esvaziastring@@Base>:
   1093c:	cmp	r1, #0
   10940:	ble	1095c <esvaziastring@@Base+0x20>
   10944:	sub	r0, r0, #1
   10948:	mov	r3, #0
   1094c:	add	r1, r0, r1
   10950:	strb	r3, [r0, #1]!
   10954:	cmp	r0, r1
   10958:	bne	10950 <esvaziastring@@Base+0x14>
   1095c:	bx	lr

00010960 <__libc_csu_init@@Base>:
   10960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10964:	mov	r7, r0
   10968:	ldr	r6, [pc, #72]	; 109b8 <__libc_csu_init@@Base+0x58>
   1096c:	ldr	r5, [pc, #72]	; 109bc <__libc_csu_init@@Base+0x5c>
   10970:	add	r6, pc, r6
   10974:	add	r5, pc, r5
   10978:	sub	r6, r6, r5
   1097c:	mov	r8, r1
   10980:	mov	r9, r2
   10984:	bl	105e8 <printf@plt-0x20>
   10988:	asrs	r6, r6, #2
   1098c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10990:	mov	r4, #0
   10994:	add	r4, r4, #1
   10998:	ldr	r3, [r5], #4
   1099c:	mov	r2, r9
   109a0:	mov	r1, r8
   109a4:	mov	r0, r7
   109a8:	blx	r3
   109ac:	cmp	r6, r4
   109b0:	bne	10994 <__libc_csu_init@@Base+0x34>
   109b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109b8:	muleq	r1, ip, r5
   109bc:	muleq	r1, r4, r5

000109c0 <__libc_csu_fini@@Base>:
   109c0:	bx	lr

Disassembly of section .fini:

000109c4 <.fini>:
   109c4:	push	{r3, lr}
   109c8:	pop	{r3, pc}
