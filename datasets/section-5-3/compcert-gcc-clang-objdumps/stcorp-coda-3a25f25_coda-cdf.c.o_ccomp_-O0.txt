
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #112	; 0x70
       8:	str	ip, [sp, #4]
       c:	str	lr, [sp, #8]
      10:	str	r4, [sp, #16]
      14:	str	r5, [sp, #20]
      18:	str	r6, [sp, #24]
      1c:	str	r7, [sp, #28]
      20:	str	r8, [sp, #32]
      24:	str	r9, [sp, #36]	; 0x24
      28:	ldr	r7, [ip, #8]
      2c:	ldr	r9, [ip, #4]
      30:	ldr	r6, [ip]
      34:	mov	r8, r3
      38:	mov	r5, r2
      3c:	mov	r4, r0
      40:	ldr	r1, [r4, #48]	; 0x30
      44:	cmp	r1, #0
      48:	bne	110 <read_bytes+0x110>
      4c:	ldr	r0, [r4, #16]
      50:	cmp	r0, #0
      54:	beq	6c <read_bytes+0x6c>
      58:	ldr	r2, [r4, #16]
      5c:	cmp	r2, #1
      60:	moveq	r0, #1
      64:	movne	r0, #0
      68:	b	70 <read_bytes+0x70>
      6c:	mov	r0, #1
      70:	cmp	r0, #0
      74:	bne	8c <read_bytes+0x8c>
      78:	ldr	r0, [pc, #412]	; 21c <read_bytes+0x21c>
      7c:	ldr	r1, [pc, #396]	; 210 <read_bytes+0x210>
      80:	mov	r2, #83	; 0x53
      84:	ldr	r3, [pc, #392]	; 214 <read_bytes+0x214>
      88:	bl	0 <__assert_fail>
      8c:	adds	r0, r5, r6
      90:	adc	r3, r8, r9
      94:	ldr	r1, [r4, #8]
      98:	ldr	ip, [r4, #12]
      9c:	cmp	r3, ip
      a0:	bne	b0 <read_bytes+0xb0>
      a4:	cmp	r0, r1
      a8:	bhi	b8 <read_bytes+0xb8>
      ac:	b	cc <read_bytes+0xcc>
      b0:	cmp	r3, ip
      b4:	bls	cc <read_bytes+0xcc>
      b8:	mvn	r0, #300	; 0x12c
      bc:	ldr	r1, [pc, #348]	; 220 <read_bytes+0x220>
      c0:	bl	0 <coda_set_error>
      c4:	mvn	r0, #0
      c8:	b	1e8 <read_bytes+0x1e8>
      cc:	ldr	r0, [r4, #56]	; 0x38
      d0:	mov	r2, r6
      d4:	mov	r3, r5
      d8:	mov	r1, r7
      dc:	bl	0 <pread>
      e0:	cmp	r0, #0
      e4:	bge	1e4 <read_bytes+0x1e4>
      e8:	bl	0 <__errno_location>
      ec:	ldr	r0, [r0]
      f0:	bl	0 <strerror>
      f4:	mvn	r3, #21
      f8:	ldr	r1, [pc, #280]	; 218 <read_bytes+0x218>
      fc:	mov	r2, r0
     100:	mov	r0, r3
     104:	bl	0 <coda_set_error>
     108:	mvn	r0, #0
     10c:	b	1e8 <read_bytes+0x1e8>
     110:	adds	ip, r5, r6
     114:	adc	r1, r8, r9
     118:	ldr	r2, [r4, #40]	; 0x28
     11c:	ldr	r3, [r4, #44]	; 0x2c
     120:	cmp	r1, r3
     124:	bne	134 <read_bytes+0x134>
     128:	cmp	ip, r2
     12c:	bhi	13c <read_bytes+0x13c>
     130:	b	1d0 <read_bytes+0x1d0>
     134:	cmp	r1, r3
     138:	bls	1d0 <read_bytes+0x1d0>
     13c:	ldr	r1, [r4, #16]
     140:	cmp	r1, #0
     144:	beq	15c <read_bytes+0x15c>
     148:	ldr	r2, [r4, #16]
     14c:	cmp	r2, #1
     150:	moveq	ip, #1
     154:	movne	ip, #0
     158:	b	160 <read_bytes+0x160>
     15c:	mov	ip, #1
     160:	cmp	ip, #0
     164:	bne	1bc <read_bytes+0x1bc>
     168:	add	r2, sp, #64	; 0x40
     16c:	mov	r1, r9
     170:	mov	r0, r6
     174:	bl	0 <coda_str64>
     178:	add	r2, sp, #88	; 0x58
     17c:	mov	r1, r8
     180:	mov	r0, r5
     184:	bl	0 <coda_str64>
     188:	ldr	r0, [r4, #40]	; 0x28
     18c:	ldr	r1, [r4, #44]	; 0x2c
     190:	add	r2, sp, #40	; 0x28
     194:	bl	0 <coda_str64>
     198:	mvn	r0, #300	; 0x12c
     19c:	ldr	r1, [pc, #104]	; 20c <read_bytes+0x20c>
     1a0:	add	r2, sp, #64	; 0x40
     1a4:	add	r3, sp, #88	; 0x58
     1a8:	add	r4, sp, #40	; 0x28
     1ac:	str	r4, [sp]
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r0, #0
     1b8:	b	1e8 <read_bytes+0x1e8>
     1bc:	mvn	r0, #300	; 0x12c
     1c0:	ldr	r1, [pc, #88]	; 220 <read_bytes+0x220>
     1c4:	bl	0 <coda_set_error>
     1c8:	mvn	r0, #0
     1cc:	b	1e8 <read_bytes+0x1e8>
     1d0:	ldr	r2, [r4, #48]	; 0x30
     1d4:	add	r1, r2, r5
     1d8:	mov	r2, r6
     1dc:	mov	r0, r7
     1e0:	bl	0 <memcpy>
     1e4:	mov	r0, #0
     1e8:	ldr	r4, [sp, #16]
     1ec:	ldr	r5, [sp, #20]
     1f0:	ldr	r6, [sp, #24]
     1f4:	ldr	r7, [sp, #28]
     1f8:	ldr	r8, [sp, #32]
     1fc:	ldr	r9, [sp, #36]	; 0x24
     200:	ldr	lr, [sp, #8]
     204:	add	sp, sp, #112	; 0x70
     208:	bx	lr
     20c:	.word	0x0000045b
     210:	.word	0x00000395
     214:	.word	0x00000888
     218:	.word	0x0000025e
     21c:	.word	0x00000798
     220:	.word	0x0000076e

00000224 <swap2>:
     224:	mov	ip, sp
     228:	sub	sp, sp, #8
     22c:	str	ip, [sp]
     230:	str	lr, [sp, #4]
     234:	ldrb	r3, [r0]
     238:	ldrb	ip, [r0, #1]
     23c:	eor	ip, r3, ip
     240:	and	r2, ip, #255	; 0xff
     244:	strb	r2, [r0]
     248:	ldrb	r3, [r0]
     24c:	ldrb	r1, [r0, #1]
     250:	eor	r1, r3, r1
     254:	and	r2, r1, #255	; 0xff
     258:	strb	r2, [r0, #1]
     25c:	ldrb	r2, [r0]
     260:	ldrb	r1, [r0, #1]
     264:	eor	r1, r2, r1
     268:	and	r1, r1, #255	; 0xff
     26c:	strb	r1, [r0]
     270:	ldr	lr, [sp, #4]
     274:	add	sp, sp, #8
     278:	bx	lr

0000027c <swap4>:
     27c:	mov	ip, sp
     280:	sub	sp, sp, #8
     284:	str	ip, [sp]
     288:	str	lr, [sp, #4]
     28c:	ldrb	ip, [r0]
     290:	ldrb	r3, [r0, #3]
     294:	eor	r2, ip, r3
     298:	and	r1, r2, #255	; 0xff
     29c:	strb	r1, [r0]
     2a0:	ldrb	r1, [r0]
     2a4:	ldrb	r2, [r0, #3]
     2a8:	eor	r1, r1, r2
     2ac:	and	r2, r1, #255	; 0xff
     2b0:	strb	r2, [r0, #3]
     2b4:	ldrb	ip, [r0]
     2b8:	ldrb	r1, [r0, #3]
     2bc:	eor	r1, ip, r1
     2c0:	and	ip, r1, #255	; 0xff
     2c4:	strb	ip, [r0]
     2c8:	ldrb	ip, [r0, #1]
     2cc:	ldrb	r3, [r0, #2]
     2d0:	eor	ip, ip, r3
     2d4:	and	r1, ip, #255	; 0xff
     2d8:	strb	r1, [r0, #1]
     2dc:	ldrb	r3, [r0, #1]
     2e0:	ldrb	r1, [r0, #2]
     2e4:	eor	ip, r3, r1
     2e8:	and	r1, ip, #255	; 0xff
     2ec:	strb	r1, [r0, #2]
     2f0:	ldrb	r2, [r0, #1]
     2f4:	ldrb	r1, [r0, #2]
     2f8:	eor	r2, r2, r1
     2fc:	and	r1, r2, #255	; 0xff
     300:	strb	r1, [r0, #1]
     304:	ldr	lr, [sp, #4]
     308:	add	sp, sp, #8
     30c:	bx	lr

00000310 <swap8>:
     310:	mov	ip, sp
     314:	sub	sp, sp, #8
     318:	str	ip, [sp]
     31c:	str	lr, [sp, #4]
     320:	ldrb	r1, [r0]
     324:	ldrb	r2, [r0, #7]
     328:	eor	r1, r1, r2
     32c:	and	r2, r1, #255	; 0xff
     330:	strb	r2, [r0]
     334:	ldrb	ip, [r0]
     338:	ldrb	r1, [r0, #7]
     33c:	eor	r3, ip, r1
     340:	and	r1, r3, #255	; 0xff
     344:	strb	r1, [r0, #7]
     348:	ldrb	r1, [r0]
     34c:	ldrb	r3, [r0, #7]
     350:	eor	r3, r1, r3
     354:	and	r1, r3, #255	; 0xff
     358:	strb	r1, [r0]
     35c:	ldrb	r2, [r0, #1]
     360:	ldrb	ip, [r0, #6]
     364:	eor	r1, r2, ip
     368:	and	r2, r1, #255	; 0xff
     36c:	strb	r2, [r0, #1]
     370:	ldrb	r1, [r0, #1]
     374:	ldrb	ip, [r0, #6]
     378:	eor	r2, r1, ip
     37c:	and	r3, r2, #255	; 0xff
     380:	strb	r3, [r0, #6]
     384:	ldrb	r3, [r0, #1]
     388:	ldrb	r2, [r0, #6]
     38c:	eor	ip, r3, r2
     390:	and	ip, ip, #255	; 0xff
     394:	strb	ip, [r0, #1]
     398:	ldrb	r3, [r0, #2]
     39c:	ldrb	r1, [r0, #5]
     3a0:	eor	ip, r3, r1
     3a4:	and	r3, ip, #255	; 0xff
     3a8:	strb	r3, [r0, #2]
     3ac:	ldrb	r2, [r0, #2]
     3b0:	ldrb	r1, [r0, #5]
     3b4:	eor	r1, r2, r1
     3b8:	and	r1, r1, #255	; 0xff
     3bc:	strb	r1, [r0, #5]
     3c0:	ldrb	r1, [r0, #2]
     3c4:	ldrb	r3, [r0, #5]
     3c8:	eor	ip, r1, r3
     3cc:	and	r2, ip, #255	; 0xff
     3d0:	strb	r2, [r0, #2]
     3d4:	ldrb	ip, [r0, #3]
     3d8:	ldrb	r2, [r0, #4]
     3dc:	eor	r1, ip, r2
     3e0:	and	r1, r1, #255	; 0xff
     3e4:	strb	r1, [r0, #3]
     3e8:	ldrb	r1, [r0, #3]
     3ec:	ldrb	r2, [r0, #4]
     3f0:	eor	r2, r1, r2
     3f4:	and	r1, r2, #255	; 0xff
     3f8:	strb	r1, [r0, #4]
     3fc:	ldrb	ip, [r0, #3]
     400:	ldrb	r1, [r0, #4]
     404:	eor	r1, ip, r1
     408:	and	r3, r1, #255	; 0xff
     40c:	strb	r3, [r0, #3]
     410:	ldr	lr, [sp, #4]
     414:	add	sp, sp, #8
     418:	bx	lr

0000041c <rtrim>:
     41c:	mov	ip, sp
     420:	sub	sp, sp, #16
     424:	str	ip, [sp]
     428:	str	lr, [sp, #4]
     42c:	str	r4, [sp, #8]
     430:	mov	r4, r0
     434:	mov	r0, r4
     438:	bl	0 <strlen>
     43c:	cmp	r0, #0
     440:	ble	460 <rtrim+0x44>
     444:	add	r3, r4, r0
     448:	sub	lr, r3, #4096	; 0x1000
     44c:	ldrb	r1, [lr, #4095]	; 0xfff
     450:	cmp	r1, #32
     454:	moveq	r2, #1
     458:	movne	r2, #0
     45c:	b	464 <rtrim+0x48>
     460:	mov	r2, #0
     464:	cmp	r2, #0
     468:	beq	484 <rtrim+0x68>
     46c:	add	r1, r4, r0
     470:	mov	ip, #0
     474:	sub	lr, r1, #4096	; 0x1000
     478:	strb	ip, [lr, #4095]	; 0xfff
     47c:	sub	r0, r0, #1
     480:	b	43c <rtrim+0x20>
     484:	ldr	r4, [sp, #8]
     488:	ldr	lr, [sp, #4]
     48c:	add	sp, sp, #16
     490:	bx	lr

00000494 <read_attribute_sub>:
     494:	mov	ip, sp
     498:	sub	sp, sp, #64	; 0x40
     49c:	str	ip, [sp, #12]
     4a0:	str	lr, [sp, #16]
     4a4:	str	r4, [sp, #24]
     4a8:	str	r5, [sp, #28]
     4ac:	str	r6, [sp, #32]
     4b0:	str	r7, [sp, #36]	; 0x24
     4b4:	str	r8, [sp, #40]	; 0x28
     4b8:	str	r9, [sp, #44]	; 0x2c
     4bc:	str	sl, [sp, #48]	; 0x30
     4c0:	ldr	r7, [ip, #8]
     4c4:	ldr	r5, [ip, #4]
     4c8:	ldr	r6, [ip]
     4cc:	mov	r8, r3
     4d0:	mov	sl, r2
     4d4:	mov	r4, r0
     4d8:	ldr	r2, [r5, #8]
     4dc:	cmp	r2, #4
     4e0:	beq	710 <read_attribute_sub+0x27c>
     4e4:	mov	r9, #0
     4e8:	ldr	r0, [r4, #52]	; 0x34
     4ec:	mov	r3, r6
     4f0:	asr	r1, r3, #31
     4f4:	add	r2, sp, #56	; 0x38
     4f8:	str	r2, [sp, #8]
     4fc:	str	r1, [sp, #4]
     500:	str	r3, [sp]
     504:	mov	r3, r8
     508:	mov	r2, sl
     50c:	bl	0 <read_bytes>
     510:	cmp	r0, #0
     514:	beq	520 <read_attribute_sub+0x8c>
     518:	mvn	r0, #0
     51c:	b	7c4 <read_attribute_sub+0x330>
     520:	ldr	ip, [r4, #68]	; 0x44
     524:	cmp	ip, r9
     528:	bne	594 <read_attribute_sub+0x100>
     52c:	cmp	r6, #4
     530:	bcs	550 <read_attribute_sub+0xbc>
     534:	cmp	r6, #1
     538:	beq	594 <read_attribute_sub+0x100>
     53c:	cmp	r6, #2
     540:	bne	56c <read_attribute_sub+0xd8>
     544:	add	r0, sp, #56	; 0x38
     548:	bl	224 <swap2>
     54c:	b	594 <read_attribute_sub+0x100>
     550:	cmp	r6, #4
     554:	beq	58c <read_attribute_sub+0xf8>
     558:	cmp	r6, #8
     55c:	bne	56c <read_attribute_sub+0xd8>
     560:	add	r0, sp, #56	; 0x38
     564:	bl	310 <swap8>
     568:	b	594 <read_attribute_sub+0x100>
     56c:	ldr	r0, [pc, #644]	; 7f8 <read_attribute_sub+0x364>
     570:	ldr	r1, [pc, #628]	; 7ec <read_attribute_sub+0x358>
     574:	mov	r2, #129	; 0x81
     578:	ldr	r3, [pc, #628]	; 7f4 <read_attribute_sub+0x360>
     57c:	bl	0 <__assert_fail>
     580:	mov	r0, #1
     584:	bl	0 <exit>
     588:	b	594 <read_attribute_sub+0x100>
     58c:	add	r0, sp, #56	; 0x38
     590:	bl	27c <swap4>
     594:	ldr	r2, [r5, #12]
     598:	cmp	r2, #10
     59c:	bcs	6f0 <read_attribute_sub+0x25c>
     5a0:	add	pc, pc, r2, lsl #2
     5a4:	nop	{0}
     5a8:	b	5d0 <read_attribute_sub+0x13c>
     5ac:	b	5f0 <read_attribute_sub+0x15c>
     5b0:	b	610 <read_attribute_sub+0x17c>
     5b4:	b	630 <read_attribute_sub+0x19c>
     5b8:	b	654 <read_attribute_sub+0x1c0>
     5bc:	b	670 <read_attribute_sub+0x1dc>
     5c0:	b	68c <read_attribute_sub+0x1f8>
     5c4:	b	6f0 <read_attribute_sub+0x25c>
     5c8:	b	6b4 <read_attribute_sub+0x220>
     5cc:	b	6d4 <read_attribute_sub+0x240>
     5d0:	mov	r1, #0
     5d4:	ldrsb	r0, [sp, #56]	; 0x38
     5d8:	sbfx	r3, r0, #0, #8
     5dc:	mov	r2, r4
     5e0:	mov	r0, r5
     5e4:	bl	0 <coda_mem_int8_new>
     5e8:	str	r0, [r7]
     5ec:	b	7ac <read_attribute_sub+0x318>
     5f0:	mov	r1, #0
     5f4:	ldrb	r3, [sp, #56]	; 0x38
     5f8:	and	r3, r3, #255	; 0xff
     5fc:	mov	r2, r4
     600:	mov	r0, r5
     604:	bl	0 <coda_mem_uint8_new>
     608:	str	r0, [r7]
     60c:	b	7ac <read_attribute_sub+0x318>
     610:	mov	r1, #0
     614:	ldrsh	r3, [sp, #56]	; 0x38
     618:	sbfx	r3, r3, #0, #16
     61c:	mov	r2, r4
     620:	mov	r0, r5
     624:	bl	0 <coda_mem_int16_new>
     628:	str	r0, [r7]
     62c:	b	7ac <read_attribute_sub+0x318>
     630:	mov	r1, #0
     634:	ldrh	ip, [sp, #56]	; 0x38
     638:	bic	r3, ip, #16711680	; 0xff0000
     63c:	bic	r3, r3, #-16777216	; 0xff000000
     640:	mov	r2, r4
     644:	mov	r0, r5
     648:	bl	0 <coda_mem_uint16_new>
     64c:	str	r0, [r7]
     650:	b	7ac <read_attribute_sub+0x318>
     654:	mov	r1, #0
     658:	ldr	r3, [sp, #56]	; 0x38
     65c:	mov	r2, r4
     660:	mov	r0, r5
     664:	bl	0 <coda_mem_int32_new>
     668:	str	r0, [r7]
     66c:	b	7ac <read_attribute_sub+0x318>
     670:	mov	r1, #0
     674:	ldr	r3, [sp, #56]	; 0x38
     678:	mov	r2, r4
     67c:	mov	r0, r5
     680:	bl	0 <coda_mem_uint32_new>
     684:	str	r0, [r7]
     688:	b	7ac <read_attribute_sub+0x318>
     68c:	mov	r1, #0
     690:	ldr	r2, [sp, #56]	; 0x38
     694:	ldr	r0, [sp, #60]	; 0x3c
     698:	str	r0, [sp, #4]
     69c:	str	r2, [sp]
     6a0:	mov	r2, r4
     6a4:	mov	r0, r5
     6a8:	bl	0 <coda_mem_int64_new>
     6ac:	str	r0, [r7]
     6b0:	b	7ac <read_attribute_sub+0x318>
     6b4:	mov	r1, #0
     6b8:	vldr	s0, [sp, #56]	; 0x38
     6bc:	mov	r2, r4
     6c0:	mov	r0, r5
     6c4:	vmov.f32	s0, s0
     6c8:	bl	0 <coda_mem_float_new>
     6cc:	str	r0, [r7]
     6d0:	b	7ac <read_attribute_sub+0x318>
     6d4:	mov	r1, #0
     6d8:	vldr	d0, [sp, #56]	; 0x38
     6dc:	mov	r2, r4
     6e0:	mov	r0, r5
     6e4:	bl	0 <coda_mem_double_new>
     6e8:	str	r0, [r7]
     6ec:	b	7ac <read_attribute_sub+0x318>
     6f0:	ldr	r0, [pc, #256]	; 7f8 <read_attribute_sub+0x364>
     6f4:	ldr	r1, [pc, #240]	; 7ec <read_attribute_sub+0x358>
     6f8:	mov	r2, #175	; 0xaf
     6fc:	ldr	r3, [pc, #240]	; 7f4 <read_attribute_sub+0x360>
     700:	bl	0 <__assert_fail>
     704:	mov	r0, #1
     708:	bl	0 <exit>
     70c:	b	7ac <read_attribute_sub+0x318>
     710:	add	r0, r6, #1
     714:	bl	0 <malloc>
     718:	mov	r9, r0
     71c:	cmp	r9, #0
     720:	bne	748 <read_attribute_sub+0x2b4>
     724:	mvn	r0, #0
     728:	ldr	r1, [pc, #192]	; 7f0 <read_attribute_sub+0x35c>
     72c:	add	r2, r6, #1
     730:	ldr	r3, [pc, #180]	; 7ec <read_attribute_sub+0x358>
     734:	mov	ip, #76	; 0x4c
     738:	str	ip, [sp]
     73c:	bl	0 <coda_set_error>
     740:	mvn	r0, #0
     744:	b	7c4 <read_attribute_sub+0x330>
     748:	ldr	r0, [r4, #52]	; 0x34
     74c:	asr	r2, r6, #31
     750:	mov	r1, r6
     754:	str	r9, [sp, #8]
     758:	str	r2, [sp, #4]
     75c:	str	r1, [sp]
     760:	mov	r3, r8
     764:	mov	r2, sl
     768:	bl	0 <read_bytes>
     76c:	cmp	r0, #0
     770:	beq	784 <read_attribute_sub+0x2f0>
     774:	mov	r0, r9
     778:	bl	0 <free>
     77c:	mvn	r0, #0
     780:	b	7c4 <read_attribute_sub+0x330>
     784:	mov	r0, #0
     788:	strb	r0, [r9, r6]
     78c:	mov	r1, #0
     790:	mov	r3, r9
     794:	mov	r2, r4
     798:	mov	r0, r5
     79c:	bl	0 <coda_mem_string_new>
     7a0:	str	r0, [r7]
     7a4:	mov	r0, r9
     7a8:	bl	0 <free>
     7ac:	ldr	r0, [r7]
     7b0:	cmp	r0, #0
     7b4:	bne	7c0 <read_attribute_sub+0x32c>
     7b8:	mvn	r0, #0
     7bc:	b	7c4 <read_attribute_sub+0x330>
     7c0:	mov	r0, #0
     7c4:	ldr	r4, [sp, #24]
     7c8:	ldr	r5, [sp, #28]
     7cc:	ldr	r6, [sp, #32]
     7d0:	ldr	r7, [sp, #36]	; 0x24
     7d4:	ldr	r8, [sp, #40]	; 0x28
     7d8:	ldr	r9, [sp, #44]	; 0x2c
     7dc:	ldr	sl, [sp, #48]	; 0x30
     7e0:	ldr	lr, [sp, #16]
     7e4:	add	sp, sp, #64	; 0x40
     7e8:	bx	lr
     7ec:	.word	0x0000067b
     7f0:	.word	0x00000739
     7f4:	.word	0x00000893
     7f8:	.word	0x00000702

000007fc <read_attribute>:
     7fc:	mov	ip, sp
     800:	sub	sp, sp, #64	; 0x40
     804:	str	ip, [sp, #12]
     808:	str	lr, [sp, #16]
     80c:	str	r4, [sp, #32]
     810:	str	r5, [sp, #36]	; 0x24
     814:	str	r6, [sp, #40]	; 0x28
     818:	str	r7, [sp, #44]	; 0x2c
     81c:	str	r8, [sp, #48]	; 0x30
     820:	str	r9, [sp, #52]	; 0x34
     824:	str	sl, [sp, #56]	; 0x38
     828:	str	fp, [sp, #60]	; 0x3c
     82c:	ldr	r5, [ip, #8]
     830:	ldr	r6, [ip, #4]
     834:	ldr	r7, [ip]
     838:	mov	r9, r3
     83c:	str	r2, [sp, #24]
     840:	str	r0, [sp, #28]
     844:	sub	r2, r7, #1
     848:	cmp	r2, #52	; 0x34
     84c:	bcs	c58 <read_attribute+0x45c>
     850:	add	pc, pc, r2, lsl #2
     854:	nop	{0}
     858:	b	928 <read_attribute+0x12c>
     85c:	b	938 <read_attribute+0x13c>
     860:	b	c58 <read_attribute+0x45c>
     864:	b	948 <read_attribute+0x14c>
     868:	b	c58 <read_attribute+0x45c>
     86c:	b	c58 <read_attribute+0x45c>
     870:	b	c58 <read_attribute+0x45c>
     874:	b	958 <read_attribute+0x15c>
     878:	b	c58 <read_attribute+0x45c>
     87c:	b	c58 <read_attribute+0x45c>
     880:	b	968 <read_attribute+0x16c>
     884:	b	978 <read_attribute+0x17c>
     888:	b	c58 <read_attribute+0x45c>
     88c:	b	988 <read_attribute+0x18c>
     890:	b	c58 <read_attribute+0x45c>
     894:	b	c58 <read_attribute+0x45c>
     898:	b	c58 <read_attribute+0x45c>
     89c:	b	c58 <read_attribute+0x45c>
     8a0:	b	c58 <read_attribute+0x45c>
     8a4:	b	c58 <read_attribute+0x45c>
     8a8:	b	998 <read_attribute+0x19c>
     8ac:	b	9a8 <read_attribute+0x1ac>
     8b0:	b	c58 <read_attribute+0x45c>
     8b4:	b	c58 <read_attribute+0x45c>
     8b8:	b	c58 <read_attribute+0x45c>
     8bc:	b	c58 <read_attribute+0x45c>
     8c0:	b	c58 <read_attribute+0x45c>
     8c4:	b	c58 <read_attribute+0x45c>
     8c8:	b	c58 <read_attribute+0x45c>
     8cc:	b	c58 <read_attribute+0x45c>
     8d0:	b	9a8 <read_attribute+0x1ac>
     8d4:	b	c58 <read_attribute+0x45c>
     8d8:	b	958 <read_attribute+0x15c>
     8dc:	b	c58 <read_attribute+0x45c>
     8e0:	b	c58 <read_attribute+0x45c>
     8e4:	b	c58 <read_attribute+0x45c>
     8e8:	b	c58 <read_attribute+0x45c>
     8ec:	b	c58 <read_attribute+0x45c>
     8f0:	b	c58 <read_attribute+0x45c>
     8f4:	b	c58 <read_attribute+0x45c>
     8f8:	b	928 <read_attribute+0x12c>
     8fc:	b	c58 <read_attribute+0x45c>
     900:	b	c58 <read_attribute+0x45c>
     904:	b	998 <read_attribute+0x19c>
     908:	b	9a8 <read_attribute+0x1ac>
     90c:	b	c58 <read_attribute+0x45c>
     910:	b	c58 <read_attribute+0x45c>
     914:	b	c58 <read_attribute+0x45c>
     918:	b	c58 <read_attribute+0x45c>
     91c:	b	c58 <read_attribute+0x45c>
     920:	b	9b8 <read_attribute+0x1bc>
     924:	b	9b8 <read_attribute+0x1bc>
     928:	mov	r8, #2
     92c:	mov	sl, #0
     930:	mov	fp, #1
     934:	b	9c4 <read_attribute+0x1c8>
     938:	mov	r8, #2
     93c:	mov	sl, #2
     940:	mov	fp, #2
     944:	b	9c4 <read_attribute+0x1c8>
     948:	mov	r8, #2
     94c:	mov	sl, #4
     950:	mov	fp, #4
     954:	b	9c4 <read_attribute+0x1c8>
     958:	mov	r8, #2
     95c:	mov	sl, #6
     960:	mov	fp, #8
     964:	b	9c4 <read_attribute+0x1c8>
     968:	mov	r8, #2
     96c:	mov	sl, #1
     970:	mov	fp, #1
     974:	b	9c4 <read_attribute+0x1c8>
     978:	mov	r8, #2
     97c:	mov	sl, #3
     980:	mov	fp, #2
     984:	b	9c4 <read_attribute+0x1c8>
     988:	mov	r8, #2
     98c:	mov	sl, #5
     990:	mov	fp, #4
     994:	b	9c4 <read_attribute+0x1c8>
     998:	mov	r8, #3
     99c:	mov	sl, #8
     9a0:	mov	fp, #4
     9a4:	b	9c4 <read_attribute+0x1c8>
     9a8:	mov	r8, #3
     9ac:	mov	sl, #9
     9b0:	mov	fp, #8
     9b4:	b	9c4 <read_attribute+0x1c8>
     9b8:	mov	r8, #4
     9bc:	mov	sl, #11
     9c0:	mov	fp, r6
     9c4:	mov	r1, r8
     9c8:	cmp	r1, #2
     9cc:	beq	a10 <read_attribute+0x214>
     9d0:	cmp	r1, #3
     9d4:	beq	a10 <read_attribute+0x214>
     9d8:	cmp	r1, #4
     9dc:	bne	9f0 <read_attribute+0x1f4>
     9e0:	mov	r0, #5
     9e4:	bl	0 <coda_type_text_new>
     9e8:	mov	r4, r0
     9ec:	b	a20 <read_attribute+0x224>
     9f0:	ldr	r0, [pc, #684]	; ca4 <read_attribute+0x4a8>
     9f4:	ldr	r1, [pc, #668]	; c98 <read_attribute+0x49c>
     9f8:	movw	r2, #266	; 0x10a
     9fc:	ldr	r3, [pc, #664]	; c9c <read_attribute+0x4a0>
     a00:	bl	0 <__assert_fail>
     a04:	mov	r0, #1
     a08:	bl	0 <exit>
     a0c:	b	a20 <read_attribute+0x224>
     a10:	mov	r0, #5
     a14:	mov	r1, r8
     a18:	bl	0 <coda_type_number_new>
     a1c:	mov	r4, r0
     a20:	cmp	r4, #0
     a24:	bne	a30 <read_attribute+0x234>
     a28:	mvn	r0, #0
     a2c:	b	c6c <read_attribute+0x470>
     a30:	mov	r1, sl
     a34:	mov	r0, r4
     a38:	bl	0 <coda_type_set_read_type>
     a3c:	cmp	r0, #0
     a40:	beq	a54 <read_attribute+0x258>
     a44:	mov	r0, r4
     a48:	bl	0 <coda_type_release>
     a4c:	mvn	r0, #0
     a50:	b	c6c <read_attribute+0x470>
     a54:	cmp	r8, #4
     a58:	beq	aa8 <read_attribute+0x2ac>
     a5c:	asr	r3, fp, #31
     a60:	mov	r2, fp
     a64:	mov	r0, r4
     a68:	bl	0 <coda_type_set_byte_size>
     a6c:	cmp	r0, #0
     a70:	beq	a84 <read_attribute+0x288>
     a74:	mov	r0, r4
     a78:	bl	0 <coda_type_release>
     a7c:	mvn	r0, #0
     a80:	b	c6c <read_attribute+0x470>
     a84:	mov	r1, #1
     a88:	mov	r0, r4
     a8c:	bl	0 <coda_type_number_set_endianness>
     a90:	cmp	r0, #0
     a94:	beq	aa8 <read_attribute+0x2ac>
     a98:	mov	r0, r4
     a9c:	bl	0 <coda_type_release>
     aa0:	mvn	r0, #0
     aa4:	b	c6c <read_attribute+0x470>
     aa8:	cmp	r6, #1
     aac:	bne	ab8 <read_attribute+0x2bc>
     ab0:	mov	r0, #0
     ab4:	b	ac4 <read_attribute+0x2c8>
     ab8:	cmp	r7, #51	; 0x33
     abc:	movne	r0, #1
     ac0:	moveq	r0, #0
     ac4:	cmp	r0, #0
     ac8:	bne	ad4 <read_attribute+0x2d8>
     acc:	mov	r1, #0
     ad0:	b	ae0 <read_attribute+0x2e4>
     ad4:	cmp	r7, #52	; 0x34
     ad8:	movne	r1, #1
     adc:	moveq	r1, #0
     ae0:	cmp	r1, #0
     ae4:	beq	c14 <read_attribute+0x418>
     ae8:	mov	r0, #5
     aec:	bl	0 <coda_type_array_new>
     af0:	mov	r7, r0
     af4:	cmp	r7, #0
     af8:	bne	b0c <read_attribute+0x310>
     afc:	mov	r0, r4
     b00:	bl	0 <coda_type_release>
     b04:	mvn	r0, #0
     b08:	b	c6c <read_attribute+0x470>
     b0c:	mov	r1, r4
     b10:	mov	r0, r7
     b14:	bl	0 <coda_type_array_set_base_type>
     b18:	cmp	r0, #0
     b1c:	beq	b38 <read_attribute+0x33c>
     b20:	mov	r0, r7
     b24:	bl	0 <coda_type_release>
     b28:	mov	r0, r4
     b2c:	bl	0 <coda_type_release>
     b30:	mvn	r0, #0
     b34:	b	c6c <read_attribute+0x470>
     b38:	mov	r0, r4
     b3c:	bl	0 <coda_type_release>
     b40:	mov	r1, #0
     b44:	mov	r0, r7
     b48:	bl	0 <coda_type_array_add_variable_dimension>
     b4c:	cmp	r0, #0
     b50:	beq	b64 <read_attribute+0x368>
     b54:	mov	r0, r7
     b58:	bl	0 <coda_type_release>
     b5c:	mvn	r0, #0
     b60:	b	c6c <read_attribute+0x470>
     b64:	mov	r1, #0
     b68:	mov	r0, r7
     b6c:	bl	0 <coda_mem_array_new>
     b70:	mov	r8, r0
     b74:	cmp	r8, #0
     b78:	bne	b8c <read_attribute+0x390>
     b7c:	mov	r0, r7
     b80:	bl	0 <coda_type_release>
     b84:	mvn	r0, #0
     b88:	b	c6c <read_attribute+0x470>
     b8c:	mov	r0, r7
     b90:	bl	0 <coda_type_release>
     b94:	mov	r7, #0
     b98:	cmp	r7, r6
     b9c:	bge	c50 <read_attribute+0x454>
     ba0:	mul	r0, r7, fp
     ba4:	asr	r1, r0, #31
     ba8:	ldr	r2, [sp, #24]
     bac:	adds	r2, r2, r0
     bb0:	adc	r3, r9, r1
     bb4:	str	r5, [sp, #8]
     bb8:	str	r4, [sp, #4]
     bbc:	str	fp, [sp]
     bc0:	ldr	r0, [sp, #28]
     bc4:	bl	494 <read_attribute_sub>
     bc8:	cmp	r0, #0
     bcc:	beq	be0 <read_attribute+0x3e4>
     bd0:	mov	r0, r8
     bd4:	bl	0 <coda_dynamic_type_delete>
     bd8:	mvn	r0, #0
     bdc:	b	c6c <read_attribute+0x470>
     be0:	ldr	r1, [r5]
     be4:	mov	r0, r8
     be8:	bl	0 <coda_mem_array_add_element>
     bec:	cmp	r0, #0
     bf0:	beq	c0c <read_attribute+0x410>
     bf4:	mov	r0, r8
     bf8:	bl	0 <coda_dynamic_type_delete>
     bfc:	ldr	r0, [r5]
     c00:	bl	0 <coda_dynamic_type_delete>
     c04:	mvn	r0, #0
     c08:	b	c6c <read_attribute+0x470>
     c0c:	add	r7, r7, #1
     c10:	b	b98 <read_attribute+0x39c>
     c14:	str	r5, [sp, #8]
     c18:	str	r4, [sp, #4]
     c1c:	str	fp, [sp]
     c20:	mov	r3, r9
     c24:	ldr	r2, [sp, #24]
     c28:	ldr	r0, [sp, #28]
     c2c:	bl	494 <read_attribute_sub>
     c30:	cmp	r0, #0
     c34:	beq	c48 <read_attribute+0x44c>
     c38:	mov	r0, r4
     c3c:	bl	0 <coda_type_release>
     c40:	mvn	r0, #0
     c44:	b	c6c <read_attribute+0x470>
     c48:	mov	r0, r4
     c4c:	bl	0 <coda_type_release>
     c50:	mov	r0, #0
     c54:	b	c6c <read_attribute+0x470>
     c58:	mvn	r0, #99	; 0x63
     c5c:	ldr	r1, [pc, #60]	; ca0 <read_attribute+0x4a4>
     c60:	mov	r2, r7
     c64:	bl	0 <coda_set_error>
     c68:	mvn	r0, #0
     c6c:	ldr	r4, [sp, #32]
     c70:	ldr	r5, [sp, #36]	; 0x24
     c74:	ldr	r6, [sp, #40]	; 0x28
     c78:	ldr	r7, [sp, #44]	; 0x2c
     c7c:	ldr	r8, [sp, #48]	; 0x30
     c80:	ldr	r9, [sp, #52]	; 0x34
     c84:	ldr	sl, [sp, #56]	; 0x38
     c88:	ldr	fp, [sp, #60]	; 0x3c
     c8c:	ldr	lr, [sp, #16]
     c90:	add	sp, sp, #64	; 0x40
     c94:	bx	lr
     c98:	.word	0x0000067b
     c9c:	.word	0x000008a6
     ca0:	.word	0x0000010d
     ca4:	.word	0x00000702

00000ca8 <read_AEDR>:
     ca8:	mov	ip, sp
     cac:	sub	sp, sp, #88	; 0x58
     cb0:	str	ip, [sp, #12]
     cb4:	str	lr, [sp, #16]
     cb8:	str	r4, [sp, #24]
     cbc:	str	r5, [sp, #28]
     cc0:	str	r6, [sp, #32]
     cc4:	str	r7, [sp, #36]	; 0x24
     cc8:	str	r8, [sp, #40]	; 0x28
     ccc:	str	r9, [sp, #44]	; 0x2c
     cd0:	str	sl, [sp, #48]	; 0x30
     cd4:	ldr	r4, [ip, #4]
     cd8:	ldr	r8, [ip]
     cdc:	mov	r5, r3
     ce0:	mov	r7, r2
     ce4:	mov	r6, r0
     ce8:	mov	r1, r5
     cec:	mov	r0, r7
     cf0:	orr	ip, r1, r0
     cf4:	cmp	ip, #0
     cf8:	bne	d04 <read_AEDR+0x5c>
     cfc:	mov	r0, #0
     d00:	b	10b0 <read_AEDR+0x408>
     d04:	ldr	r0, [r6, #52]	; 0x34
     d08:	mov	r2, #0
     d0c:	mov	r1, #8
     d10:	adds	lr, r7, r1
     d14:	adc	r3, r5, r2
     d18:	mov	r2, lr
     d1c:	mov	r9, #0
     d20:	mov	ip, #4
     d24:	add	sl, sp, #72	; 0x48
     d28:	str	sl, [sp, #8]
     d2c:	str	r9, [sp, #4]
     d30:	str	ip, [sp]
     d34:	bl	0 <read_bytes>
     d38:	cmp	r0, #0
     d3c:	bge	d48 <read_AEDR+0xa0>
     d40:	mvn	r0, #0
     d44:	b	10b0 <read_AEDR+0x408>
     d48:	add	r0, sp, #72	; 0x48
     d4c:	bl	27c <swap4>
     d50:	ldr	r0, [sp, #72]	; 0x48
     d54:	cmp	r0, #5
     d58:	beq	d70 <read_AEDR+0xc8>
     d5c:	ldr	ip, [sp, #72]	; 0x48
     d60:	cmp	ip, #9
     d64:	movne	r2, #1
     d68:	moveq	r2, #0
     d6c:	b	d74 <read_AEDR+0xcc>
     d70:	mov	r2, #0
     d74:	cmp	r2, #0
     d78:	beq	d98 <read_AEDR+0xf0>
     d7c:	movw	r0, #65236	; 0xfed4
     d80:	movt	r0, #65535	; 0xffff
     d84:	ldr	r1, [pc, #852]	; 10e0 <read_AEDR+0x438>
     d88:	ldr	r2, [sp, #72]	; 0x48
     d8c:	bl	0 <coda_set_error>
     d90:	mvn	r0, #0
     d94:	b	10b0 <read_AEDR+0x408>
     d98:	ldr	r0, [r6, #52]	; 0x34
     d9c:	mov	r3, #0
     da0:	mov	r2, #12
     da4:	adds	r2, r7, r2
     da8:	adc	r3, r5, r3
     dac:	mov	r1, #0
     db0:	mov	ip, #8
     db4:	add	sl, sp, #80	; 0x50
     db8:	str	sl, [sp, #8]
     dbc:	str	r1, [sp, #4]
     dc0:	str	ip, [sp]
     dc4:	bl	0 <read_bytes>
     dc8:	cmp	r0, #0
     dcc:	bge	dd8 <read_AEDR+0x130>
     dd0:	mvn	r0, #0
     dd4:	b	10b0 <read_AEDR+0x408>
     dd8:	ldr	r0, [r6, #52]	; 0x34
     ddc:	mov	ip, #0
     de0:	mov	r3, #20
     de4:	adds	r2, r7, r3
     de8:	adc	r3, r5, ip
     dec:	mov	ip, #0
     df0:	mov	r1, #4
     df4:	add	sl, sp, #76	; 0x4c
     df8:	str	sl, [sp, #8]
     dfc:	str	ip, [sp, #4]
     e00:	str	r1, [sp]
     e04:	bl	0 <read_bytes>
     e08:	cmp	r0, #0
     e0c:	bge	e18 <read_AEDR+0x170>
     e10:	mvn	r0, #0
     e14:	b	10b0 <read_AEDR+0x408>
     e18:	ldr	r0, [r6, #52]	; 0x34
     e1c:	mov	r2, #0
     e20:	mov	r1, #24
     e24:	adds	lr, r7, r1
     e28:	adc	r3, r5, r2
     e2c:	mov	r2, lr
     e30:	mov	ip, #0
     e34:	mov	r1, #4
     e38:	add	sl, sp, #60	; 0x3c
     e3c:	str	sl, [sp, #8]
     e40:	str	ip, [sp, #4]
     e44:	str	r1, [sp]
     e48:	bl	0 <read_bytes>
     e4c:	cmp	r0, #0
     e50:	bge	e5c <read_AEDR+0x1b4>
     e54:	mvn	r0, #0
     e58:	b	10b0 <read_AEDR+0x408>
     e5c:	ldr	r0, [r6, #52]	; 0x34
     e60:	mov	r1, #0
     e64:	mov	ip, #28
     e68:	adds	r2, r7, ip
     e6c:	adc	r3, r5, r1
     e70:	mov	r1, #0
     e74:	mov	ip, #4
     e78:	add	sl, sp, #64	; 0x40
     e7c:	str	sl, [sp, #8]
     e80:	str	r1, [sp, #4]
     e84:	str	ip, [sp]
     e88:	bl	0 <read_bytes>
     e8c:	cmp	r0, #0
     e90:	bge	e9c <read_AEDR+0x1f4>
     e94:	mvn	r0, #0
     e98:	b	10b0 <read_AEDR+0x408>
     e9c:	ldr	r0, [r6, #52]	; 0x34
     ea0:	mov	r1, #0
     ea4:	mov	ip, #32
     ea8:	adds	r2, r7, ip
     eac:	adc	r3, r5, r1
     eb0:	mov	ip, #0
     eb4:	mov	r1, #4
     eb8:	add	sl, sp, #56	; 0x38
     ebc:	str	sl, [sp, #8]
     ec0:	str	ip, [sp, #4]
     ec4:	str	r1, [sp]
     ec8:	bl	0 <read_bytes>
     ecc:	cmp	r0, #0
     ed0:	bge	edc <read_AEDR+0x234>
     ed4:	mvn	r0, #0
     ed8:	b	10b0 <read_AEDR+0x408>
     edc:	add	r0, sp, #80	; 0x50
     ee0:	bl	310 <swap8>
     ee4:	add	r0, sp, #76	; 0x4c
     ee8:	bl	27c <swap4>
     eec:	add	r0, sp, #60	; 0x3c
     ef0:	bl	27c <swap4>
     ef4:	add	r0, sp, #64	; 0x40
     ef8:	bl	27c <swap4>
     efc:	add	r0, sp, #56	; 0x38
     f00:	bl	27c <swap4>
     f04:	mov	r2, #0
     f08:	mov	r1, #56	; 0x38
     f0c:	adds	lr, r7, r1
     f10:	adc	r3, r5, r2
     f14:	mov	r2, lr
     f18:	ldr	ip, [sp, #60]	; 0x3c
     f1c:	cmp	ip, #32
     f20:	bne	f38 <read_AEDR+0x290>
     f24:	mvn	r0, #199	; 0xc7
     f28:	ldr	r1, [pc, #444]	; 10ec <read_AEDR+0x444>
     f2c:	bl	0 <coda_set_error>
     f30:	mvn	r0, #0
     f34:	b	10b0 <read_AEDR+0x408>
     f38:	ldr	ip, [sp, #60]	; 0x3c
     f3c:	ldr	r1, [sp, #56]	; 0x38
     f40:	add	r0, sp, #68	; 0x44
     f44:	str	r0, [sp, #8]
     f48:	str	r1, [sp, #4]
     f4c:	str	ip, [sp]
     f50:	mov	r0, r6
     f54:	bl	7fc <read_attribute>
     f58:	cmp	r0, #0
     f5c:	beq	f68 <read_AEDR+0x2c0>
     f60:	mvn	r0, #0
     f64:	b	10b0 <read_AEDR+0x408>
     f68:	ldr	ip, [sp, #72]	; 0x48
     f6c:	cmp	ip, #5
     f70:	bne	f88 <read_AEDR+0x2e0>
     f74:	and	r2, r4, #1
     f78:	cmp	r2, #0
     f7c:	movne	r3, #1
     f80:	moveq	r3, #0
     f84:	b	f8c <read_AEDR+0x2e4>
     f88:	mov	r3, #0
     f8c:	cmp	r3, #0
     f90:	bne	1058 <read_AEDR+0x3b0>
     f94:	ldr	r1, [sp, #64]	; 0x40
     f98:	cmp	r1, #0
     f9c:	blt	fbc <read_AEDR+0x314>
     fa0:	ldr	r1, [sp, #64]	; 0x40
     fa4:	ldr	r2, [r6, #20]
     fa8:	ldr	r0, [r2, #16]
     fac:	cmp	r1, r0
     fb0:	movge	r0, #1
     fb4:	movlt	r0, #0
     fb8:	b	fc0 <read_AEDR+0x318>
     fbc:	mov	r0, #1
     fc0:	cmp	r0, #0
     fc4:	beq	ff0 <read_AEDR+0x348>
     fc8:	movw	r0, #65236	; 0xfed4
     fcc:	movt	r0, #65535	; 0xffff
     fd0:	ldr	r1, [pc, #268]	; 10e4 <read_AEDR+0x43c>
     fd4:	ldr	r2, [sp, #64]	; 0x40
     fd8:	ldr	r3, [r6, #20]
     fdc:	ldr	r3, [r3, #16]
     fe0:	sub	r3, r3, #1
     fe4:	bl	0 <coda_set_error>
     fe8:	mvn	r0, #0
     fec:	b	10b0 <read_AEDR+0x408>
     ff0:	ldr	r1, [r6, #20]
     ff4:	ldr	r3, [r1, #20]
     ff8:	ldr	ip, [sp, #64]	; 0x40
     ffc:	ldr	r1, [r3, ip, lsl #2]
    1000:	ldr	r0, [r1]
    1004:	cmp	r0, #103	; 0x67
    1008:	beq	1020 <read_AEDR+0x378>
    100c:	ldr	r0, [pc, #212]	; 10e8 <read_AEDR+0x440>
    1010:	ldr	r1, [pc, #192]	; 10d8 <read_AEDR+0x430>
    1014:	movw	r2, #439	; 0x1b7
    1018:	ldr	r3, [pc, #188]	; 10dc <read_AEDR+0x434>
    101c:	bl	0 <__assert_fail>
    1020:	ldr	r2, [r6, #20]
    1024:	ldr	r3, [r2, #20]
    1028:	ldr	r0, [sp, #64]	; 0x40
    102c:	ldr	r0, [r3, r0, lsl #2]
    1030:	ldr	r2, [sp, #68]	; 0x44
    1034:	mov	r3, #1
    1038:	mov	r1, r8
    103c:	bl	0 <coda_cdf_variable_add_attribute>
    1040:	cmp	r0, #0
    1044:	beq	1084 <read_AEDR+0x3dc>
    1048:	ldr	r0, [sp, #68]	; 0x44
    104c:	bl	0 <coda_dynamic_type_delete>
    1050:	mvn	r0, #0
    1054:	b	10b0 <read_AEDR+0x408>
    1058:	ldr	r0, [r6, #20]
    105c:	ldr	r2, [sp, #68]	; 0x44
    1060:	mov	r3, #1
    1064:	mov	r1, r8
    1068:	bl	0 <coda_mem_type_add_attribute>
    106c:	cmp	r0, #0
    1070:	beq	1084 <read_AEDR+0x3dc>
    1074:	ldr	r0, [sp, #68]	; 0x44
    1078:	bl	0 <coda_dynamic_type_delete>
    107c:	mvn	r0, #0
    1080:	b	10b0 <read_AEDR+0x408>
    1084:	ldr	r2, [sp, #80]	; 0x50
    1088:	ldr	r3, [sp, #84]	; 0x54
    108c:	str	r4, [sp, #4]
    1090:	str	r8, [sp]
    1094:	mov	r0, r6
    1098:	bl	ca8 <read_AEDR>
    109c:	cmp	r0, #0
    10a0:	beq	10ac <read_AEDR+0x404>
    10a4:	mvn	r0, #0
    10a8:	b	10b0 <read_AEDR+0x408>
    10ac:	mov	r0, #0
    10b0:	ldr	r4, [sp, #24]
    10b4:	ldr	r5, [sp, #28]
    10b8:	ldr	r6, [sp, #32]
    10bc:	ldr	r7, [sp, #36]	; 0x24
    10c0:	ldr	r8, [sp, #40]	; 0x28
    10c4:	ldr	r9, [sp, #44]	; 0x2c
    10c8:	ldr	sl, [sp, #48]	; 0x30
    10cc:	ldr	lr, [sp, #16]
    10d0:	add	sp, sp, #88	; 0x58
    10d4:	bx	lr
    10d8:	.word	0x0000067b
    10dc:	.word	0x000008b5
    10e0:	.word	0x000000d7
    10e4:	.word	0x00000345
    10e8:	.word	0x00000496
    10ec:	.word	0x00000576

000010f0 <read_ADR>:
    10f0:	mov	ip, sp
    10f4:	sub	sp, sp, #368	; 0x170
    10f8:	str	ip, [sp, #12]
    10fc:	str	lr, [sp, #16]
    1100:	str	r4, [sp, #24]
    1104:	str	r5, [sp, #28]
    1108:	str	r6, [sp, #32]
    110c:	str	r7, [sp, #36]	; 0x24
    1110:	str	r8, [sp, #40]	; 0x28
    1114:	mov	r4, r3
    1118:	mov	r6, r2
    111c:	mov	r5, r0
    1120:	mov	ip, r6
    1124:	mov	r3, r4
    1128:	orr	r1, r3, ip
    112c:	cmp	r1, #0
    1130:	bne	113c <read_ADR+0x4c>
    1134:	mov	r0, #0
    1138:	b	1530 <read_ADR+0x440>
    113c:	ldr	r0, [r5, #52]	; 0x34
    1140:	mov	r3, #0
    1144:	mov	r2, #8
    1148:	adds	r2, r6, r2
    114c:	adc	r3, r4, r3
    1150:	mov	r1, #0
    1154:	mov	ip, #4
    1158:	add	r8, sp, #56	; 0x38
    115c:	str	r8, [sp, #8]
    1160:	str	r1, [sp, #4]
    1164:	str	ip, [sp]
    1168:	bl	0 <read_bytes>
    116c:	cmp	r0, #0
    1170:	bge	117c <read_ADR+0x8c>
    1174:	mvn	r0, #0
    1178:	b	1530 <read_ADR+0x440>
    117c:	add	r0, sp, #56	; 0x38
    1180:	bl	27c <swap4>
    1184:	ldr	r1, [sp, #56]	; 0x38
    1188:	cmp	r1, #4
    118c:	beq	11ac <read_ADR+0xbc>
    1190:	movw	r0, #65236	; 0xfed4
    1194:	movt	r0, #65535	; 0xffff
    1198:	ldr	r1, [pc, #948]	; 1554 <read_ADR+0x464>
    119c:	ldr	r2, [sp, #56]	; 0x38
    11a0:	bl	0 <coda_set_error>
    11a4:	mvn	r0, #0
    11a8:	b	1530 <read_ADR+0x440>
    11ac:	ldr	r0, [r5, #52]	; 0x34
    11b0:	mov	r1, #0
    11b4:	mov	ip, #12
    11b8:	adds	r2, r6, ip
    11bc:	adc	r3, r4, r1
    11c0:	mov	ip, #0
    11c4:	mov	r1, #8
    11c8:	add	r8, sp, #80	; 0x50
    11cc:	str	r8, [sp, #8]
    11d0:	str	ip, [sp, #4]
    11d4:	str	r1, [sp]
    11d8:	bl	0 <read_bytes>
    11dc:	cmp	r0, #0
    11e0:	bge	11ec <read_ADR+0xfc>
    11e4:	mvn	r0, #0
    11e8:	b	1530 <read_ADR+0x440>
    11ec:	ldr	r0, [r5, #52]	; 0x34
    11f0:	mov	r2, #0
    11f4:	mov	r1, #20
    11f8:	adds	lr, r6, r1
    11fc:	adc	r3, r4, r2
    1200:	mov	r2, lr
    1204:	mov	r1, #0
    1208:	mov	ip, #8
    120c:	add	r8, sp, #88	; 0x58
    1210:	str	r8, [sp, #8]
    1214:	str	r1, [sp, #4]
    1218:	str	ip, [sp]
    121c:	bl	0 <read_bytes>
    1220:	cmp	r0, #0
    1224:	bge	1230 <read_ADR+0x140>
    1228:	mvn	r0, #0
    122c:	b	1530 <read_ADR+0x440>
    1230:	ldr	r0, [r5, #52]	; 0x34
    1234:	mov	r1, #0
    1238:	mov	ip, #28
    123c:	adds	r2, r6, ip
    1240:	adc	r3, r4, r1
    1244:	mov	ip, #0
    1248:	mov	r1, #4
    124c:	add	r8, sp, #60	; 0x3c
    1250:	str	r8, [sp, #8]
    1254:	str	ip, [sp, #4]
    1258:	str	r1, [sp]
    125c:	bl	0 <read_bytes>
    1260:	cmp	r0, #0
    1264:	bge	1270 <read_ADR+0x180>
    1268:	mvn	r0, #0
    126c:	b	1530 <read_ADR+0x440>
    1270:	ldr	r0, [r5, #52]	; 0x34
    1274:	mov	r2, #0
    1278:	mov	r1, #32
    127c:	adds	lr, r6, r1
    1280:	adc	r3, r4, r2
    1284:	mov	r2, lr
    1288:	mov	ip, #0
    128c:	mov	r1, #4
    1290:	add	r8, sp, #64	; 0x40
    1294:	str	r8, [sp, #8]
    1298:	str	ip, [sp, #4]
    129c:	str	r1, [sp]
    12a0:	bl	0 <read_bytes>
    12a4:	cmp	r0, #0
    12a8:	bge	12b4 <read_ADR+0x1c4>
    12ac:	mvn	r0, #0
    12b0:	b	1530 <read_ADR+0x440>
    12b4:	ldr	r0, [r5, #52]	; 0x34
    12b8:	mov	r3, #0
    12bc:	mov	r2, #36	; 0x24
    12c0:	adds	r2, r6, r2
    12c4:	adc	r3, r4, r3
    12c8:	mov	r1, #0
    12cc:	mov	ip, #4
    12d0:	add	r8, sp, #68	; 0x44
    12d4:	str	r8, [sp, #8]
    12d8:	str	r1, [sp, #4]
    12dc:	str	ip, [sp]
    12e0:	bl	0 <read_bytes>
    12e4:	cmp	r0, #0
    12e8:	bge	12f4 <read_ADR+0x204>
    12ec:	mvn	r0, #0
    12f0:	b	1530 <read_ADR+0x440>
    12f4:	ldr	r0, [r5, #52]	; 0x34
    12f8:	mov	ip, #0
    12fc:	mov	r3, #40	; 0x28
    1300:	adds	r2, r6, r3
    1304:	adc	r3, r4, ip
    1308:	mov	ip, #0
    130c:	mov	r1, #4
    1310:	add	r8, sp, #72	; 0x48
    1314:	str	r8, [sp, #8]
    1318:	str	ip, [sp, #4]
    131c:	str	r1, [sp]
    1320:	bl	0 <read_bytes>
    1324:	cmp	r0, #0
    1328:	bge	1334 <read_ADR+0x244>
    132c:	mvn	r0, #0
    1330:	b	1530 <read_ADR+0x440>
    1334:	ldr	r0, [r5, #52]	; 0x34
    1338:	mov	ip, #0
    133c:	mov	r3, #48	; 0x30
    1340:	adds	r2, r6, r3
    1344:	adc	r3, r4, ip
    1348:	mov	r1, #0
    134c:	mov	ip, #8
    1350:	add	r8, sp, #96	; 0x60
    1354:	str	r8, [sp, #8]
    1358:	str	r1, [sp, #4]
    135c:	str	ip, [sp]
    1360:	bl	0 <read_bytes>
    1364:	cmp	r0, #0
    1368:	bge	1374 <read_ADR+0x284>
    136c:	mvn	r0, #0
    1370:	b	1530 <read_ADR+0x440>
    1374:	ldr	r0, [r5, #52]	; 0x34
    1378:	mov	r3, #0
    137c:	mov	r2, #56	; 0x38
    1380:	adds	r2, r6, r2
    1384:	adc	r3, r4, r3
    1388:	mov	ip, #0
    138c:	mov	r1, #4
    1390:	add	r7, sp, #48	; 0x30
    1394:	str	r7, [sp, #8]
    1398:	str	ip, [sp, #4]
    139c:	str	r1, [sp]
    13a0:	bl	0 <read_bytes>
    13a4:	cmp	r0, #0
    13a8:	bge	13b4 <read_ADR+0x2c4>
    13ac:	mvn	r0, #0
    13b0:	b	1530 <read_ADR+0x440>
    13b4:	ldr	r0, [r5, #52]	; 0x34
    13b8:	mov	r2, #0
    13bc:	mov	r1, #60	; 0x3c
    13c0:	adds	lr, r6, r1
    13c4:	adc	r3, r4, r2
    13c8:	mov	r2, lr
    13cc:	mov	r1, #0
    13d0:	mov	ip, #4
    13d4:	add	r7, sp, #52	; 0x34
    13d8:	str	r7, [sp, #8]
    13dc:	str	r1, [sp, #4]
    13e0:	str	ip, [sp]
    13e4:	bl	0 <read_bytes>
    13e8:	cmp	r0, #0
    13ec:	bge	13f8 <read_ADR+0x308>
    13f0:	mvn	r0, #0
    13f4:	b	1530 <read_ADR+0x440>
    13f8:	ldr	r0, [r5, #52]	; 0x34
    13fc:	mov	r1, #0
    1400:	mov	ip, #68	; 0x44
    1404:	adds	r2, r6, ip
    1408:	adc	r3, r4, r1
    140c:	mov	ip, #0
    1410:	mov	r1, #256	; 0x100
    1414:	add	r6, sp, #104	; 0x68
    1418:	str	r6, [sp, #8]
    141c:	str	ip, [sp, #4]
    1420:	str	r1, [sp]
    1424:	bl	0 <read_bytes>
    1428:	cmp	r0, #0
    142c:	bge	1438 <read_ADR+0x348>
    1430:	mvn	r0, #0
    1434:	b	1530 <read_ADR+0x440>
    1438:	mov	r3, #0
    143c:	strb	r3, [sp, #360]	; 0x168
    1440:	add	r0, sp, #104	; 0x68
    1444:	bl	41c <rtrim>
    1448:	add	r0, sp, #80	; 0x50
    144c:	bl	310 <swap8>
    1450:	add	r0, sp, #88	; 0x58
    1454:	bl	310 <swap8>
    1458:	add	r0, sp, #60	; 0x3c
    145c:	bl	27c <swap4>
    1460:	add	r0, sp, #64	; 0x40
    1464:	bl	27c <swap4>
    1468:	add	r0, sp, #68	; 0x44
    146c:	bl	27c <swap4>
    1470:	add	r0, sp, #72	; 0x48
    1474:	bl	27c <swap4>
    1478:	add	r0, sp, #96	; 0x60
    147c:	bl	310 <swap8>
    1480:	add	r0, sp, #48	; 0x30
    1484:	bl	27c <swap4>
    1488:	add	r0, sp, #52	; 0x34
    148c:	bl	27c <swap4>
    1490:	ldr	r2, [sp, #88]	; 0x58
    1494:	ldr	r3, [sp, #92]	; 0x5c
    1498:	ldr	ip, [sp, #60]	; 0x3c
    149c:	and	ip, ip, #1
    14a0:	cmp	ip, #0
    14a4:	beq	14d0 <read_ADR+0x3e0>
    14a8:	ldr	r0, [sp, #48]	; 0x30
    14ac:	cmp	r0, #0
    14b0:	beq	14e4 <read_ADR+0x3f4>
    14b4:	movw	r0, #65236	; 0xfed4
    14b8:	movt	r0, #65535	; 0xffff
    14bc:	ldr	r1, [pc, #140]	; 1550 <read_ADR+0x460>
    14c0:	ldr	r2, [sp, #48]	; 0x30
    14c4:	bl	0 <coda_set_error>
    14c8:	mvn	r0, #0
    14cc:	b	1530 <read_ADR+0x440>
    14d0:	ldr	r1, [sp, #68]	; 0x44
    14d4:	cmp	r1, #0
    14d8:	bne	14e4 <read_ADR+0x3f4>
    14dc:	ldr	r2, [sp, #96]	; 0x60
    14e0:	ldr	r3, [sp, #100]	; 0x64
    14e4:	add	r1, sp, #104	; 0x68
    14e8:	ldr	r0, [sp, #60]	; 0x3c
    14ec:	str	r0, [sp, #4]
    14f0:	str	r1, [sp]
    14f4:	mov	r0, r5
    14f8:	bl	ca8 <read_AEDR>
    14fc:	cmp	r0, #0
    1500:	beq	150c <read_ADR+0x41c>
    1504:	mvn	r0, #0
    1508:	b	1530 <read_ADR+0x440>
    150c:	ldr	r2, [sp, #80]	; 0x50
    1510:	ldr	r3, [sp, #84]	; 0x54
    1514:	mov	r0, r5
    1518:	bl	10f0 <read_ADR>
    151c:	cmp	r0, #0
    1520:	beq	152c <read_ADR+0x43c>
    1524:	mvn	r0, #0
    1528:	b	1530 <read_ADR+0x440>
    152c:	mov	r0, #0
    1530:	ldr	r4, [sp, #24]
    1534:	ldr	r5, [sp, #28]
    1538:	ldr	r6, [sp, #32]
    153c:	ldr	r7, [sp, #36]	; 0x24
    1540:	ldr	r8, [sp, #40]	; 0x28
    1544:	ldr	lr, [sp, #16]
    1548:	add	sp, sp, #368	; 0x170
    154c:	bx	lr
    1550:	.word	0x00000519
    1554:	.word	0x00000000

00001558 <read_VR>:
    1558:	mov	ip, sp
    155c:	sub	sp, sp, #136	; 0x88
    1560:	str	ip, [sp, #12]
    1564:	str	lr, [sp, #16]
    1568:	str	r4, [sp, #28]
    156c:	str	r5, [sp, #32]
    1570:	str	r6, [sp, #36]	; 0x24
    1574:	str	r7, [sp, #40]	; 0x28
    1578:	str	r8, [sp, #44]	; 0x2c
    157c:	str	r9, [sp, #48]	; 0x30
    1580:	str	sl, [sp, #52]	; 0x34
    1584:	str	fp, [sp, #56]	; 0x38
    1588:	ldr	r6, [ip, #4]
    158c:	ldr	r4, [ip]
    1590:	mov	r5, r3
    1594:	mov	r9, r2
    1598:	mov	r8, r1
    159c:	mov	r7, r0
    15a0:	mov	r0, r5
    15a4:	mov	r2, r9
    15a8:	orr	r1, r0, r2
    15ac:	cmp	r1, #0
    15b0:	bne	15bc <read_VR+0x64>
    15b4:	mov	r0, #0
    15b8:	b	1ac0 <read_VR+0x568>
    15bc:	ldr	r0, [r7, #52]	; 0x34
    15c0:	mov	r2, #0
    15c4:	mov	r1, #8
    15c8:	adds	lr, r9, r1
    15cc:	adc	r3, r5, r2
    15d0:	mov	r2, lr
    15d4:	mov	sl, #0
    15d8:	mov	ip, #4
    15dc:	add	fp, sp, #64	; 0x40
    15e0:	str	fp, [sp, #8]
    15e4:	str	sl, [sp, #4]
    15e8:	str	ip, [sp]
    15ec:	bl	0 <read_bytes>
    15f0:	cmp	r0, #0
    15f4:	bge	1600 <read_VR+0xa8>
    15f8:	mvn	r0, #0
    15fc:	b	1ac0 <read_VR+0x568>
    1600:	add	r0, sp, #64	; 0x40
    1604:	bl	27c <swap4>
    1608:	ldr	r2, [sp, #64]	; 0x40
    160c:	cmp	r2, #6
    1610:	bne	1634 <read_VR+0xdc>
    1614:	str	r6, [sp, #4]
    1618:	str	r4, [sp]
    161c:	mov	r3, r5
    1620:	mov	r2, r9
    1624:	mov	r1, r8
    1628:	mov	r0, r7
    162c:	bl	1b1c <read_VXR>
    1630:	b	1ac0 <read_VR+0x568>
    1634:	ldr	r0, [sp, #64]	; 0x40
    1638:	cmp	r0, #7
    163c:	beq	1a50 <read_VR+0x4f8>
    1640:	ldr	ip, [sp, #64]	; 0x40
    1644:	cmp	ip, #13
    1648:	bne	1a34 <read_VR+0x4dc>
    164c:	mov	sl, #0
    1650:	ldr	ip, [r8, #20]
    1654:	cmp	r4, ip
    1658:	blt	1664 <read_VR+0x10c>
    165c:	mov	r0, #0
    1660:	b	1ac0 <read_VR+0x568>
    1664:	ldr	r0, [r8, #40]	; 0x28
    1668:	cmp	r0, #0
    166c:	bne	16cc <read_VR+0x174>
    1670:	ldr	ip, [r8, #20]
    1674:	ldr	r2, [r8, #24]
    1678:	mul	ip, ip, r2
    167c:	ldr	r3, [r8, #28]
    1680:	mul	r0, ip, r3
    1684:	bl	0 <malloc>
    1688:	str	r0, [r8, #40]	; 0x28
    168c:	ldr	ip, [r8, #40]	; 0x28
    1690:	cmp	ip, #0
    1694:	bne	16cc <read_VR+0x174>
    1698:	mvn	r0, #0
    169c:	ldr	r1, [pc, #1108]	; 1af8 <read_VR+0x5a0>
    16a0:	ldr	r2, [r8, #20]
    16a4:	ldr	ip, [r8, #24]
    16a8:	mul	r3, r2, ip
    16ac:	ldr	ip, [r8, #28]
    16b0:	mul	r2, r3, ip
    16b4:	ldr	r3, [pc, #1080]	; 1af4 <read_VR+0x59c>
    16b8:	movw	r4, #629	; 0x275
    16bc:	str	r4, [sp]
    16c0:	bl	0 <coda_set_error>
    16c4:	mvn	r0, #0
    16c8:	b	1ac0 <read_VR+0x568>
    16cc:	ldr	r0, [r7, #52]	; 0x34
    16d0:	mov	r3, #0
    16d4:	mov	r2, #16
    16d8:	adds	ip, r9, r2
    16dc:	adc	r3, r5, r3
    16e0:	str	ip, [sp, #24]
    16e4:	mov	fp, #0
    16e8:	mov	ip, #8
    16ec:	add	r2, sp, #72	; 0x48
    16f0:	str	r2, [sp, #8]
    16f4:	str	fp, [sp, #4]
    16f8:	str	ip, [sp]
    16fc:	ldr	r2, [sp, #24]
    1700:	bl	0 <read_bytes>
    1704:	cmp	r0, #0
    1708:	bge	1714 <read_VR+0x1bc>
    170c:	mvn	r0, #0
    1710:	b	1ac0 <read_VR+0x568>
    1714:	add	r0, sp, #72	; 0x48
    1718:	bl	310 <swap8>
    171c:	mov	r2, #0
    1720:	mov	r1, #24
    1724:	adds	r9, r9, r1
    1728:	adc	fp, r5, r2
    172c:	ldr	r2, [sp, #72]	; 0x48
    1730:	ldr	ip, [sp, #76]	; 0x4c
    1734:	mov	r3, #0
    1738:	cmp	ip, r3
    173c:	bne	1750 <read_VR+0x1f8>
    1740:	mov	r0, #20
    1744:	cmp	r2, r0
    1748:	bcc	175c <read_VR+0x204>
    174c:	b	1774 <read_VR+0x21c>
    1750:	mov	r2, #0
    1754:	cmp	ip, r2
    1758:	bge	1774 <read_VR+0x21c>
    175c:	movw	r0, #65236	; 0xfed4
    1760:	movt	r0, #65535	; 0xffff
    1764:	ldr	r1, [pc, #916]	; 1b00 <read_VR+0x5a8>
    1768:	bl	0 <coda_set_error>
    176c:	mvn	r0, #0
    1770:	b	1ac0 <read_VR+0x568>
    1774:	ldr	r0, [sp, #72]	; 0x48
    1778:	bl	0 <malloc>
    177c:	mov	r5, r0
    1780:	cmp	r5, #0
    1784:	bne	17ac <read_VR+0x254>
    1788:	mvn	r0, #0
    178c:	ldr	r1, [pc, #868]	; 1af8 <read_VR+0x5a0>
    1790:	ldr	r2, [sp, #72]	; 0x48
    1794:	ldr	r3, [pc, #856]	; 1af4 <read_VR+0x59c>
    1798:	mov	r4, #652	; 0x28c
    179c:	str	r4, [sp]
    17a0:	bl	0 <coda_set_error>
    17a4:	mvn	r0, #0
    17a8:	b	1ac0 <read_VR+0x568>
    17ac:	ldr	r0, [r7, #52]	; 0x34
    17b0:	ldr	r1, [sp, #72]	; 0x48
    17b4:	ldr	r2, [sp, #76]	; 0x4c
    17b8:	str	r5, [sp, #8]
    17bc:	str	r2, [sp, #4]
    17c0:	str	r1, [sp]
    17c4:	mov	r3, fp
    17c8:	mov	r2, r9
    17cc:	bl	0 <read_bytes>
    17d0:	cmp	r0, #0
    17d4:	bge	17e8 <read_VR+0x290>
    17d8:	mov	r0, r5
    17dc:	bl	0 <free>
    17e0:	mvn	r0, #0
    17e4:	b	1ac0 <read_VR+0x568>
    17e8:	mov	r1, #0
    17ec:	str	r1, [sp, #80]	; 0x50
    17f0:	mov	ip, #0
    17f4:	str	ip, [sp, #84]	; 0x54
    17f8:	mov	r3, #0
    17fc:	str	r3, [sp, #112]	; 0x70
    1800:	mov	r2, #0
    1804:	str	r2, [sp, #116]	; 0x74
    1808:	mov	r3, #0
    180c:	str	r3, [sp, #120]	; 0x78
    1810:	mov	r0, #0
    1814:	str	r0, [sp, #104]	; 0x68
    1818:	add	r0, sp, #80	; 0x50
    181c:	mov	r1, #31
    1820:	ldr	r2, [pc, #724]	; 1afc <read_VR+0x5a4>
    1824:	mov	r3, #56	; 0x38
    1828:	bl	0 <coda_inflateInit2_>
    182c:	cmp	r0, #0
    1830:	beq	1868 <read_VR+0x310>
    1834:	mvn	r0, #21
    1838:	ldr	r1, [pc, #716]	; 1b0c <read_VR+0x5b4>
    183c:	bl	0 <coda_set_error>
    1840:	ldr	r3, [sp, #104]	; 0x68
    1844:	cmp	r3, #0
    1848:	beq	1858 <read_VR+0x300>
    184c:	ldr	r0, [pc, #708]	; 1b18 <read_VR+0x5c0>
    1850:	ldr	r1, [sp, #104]	; 0x68
    1854:	bl	0 <coda_add_error_message>
    1858:	mov	r0, r5
    185c:	bl	0 <free>
    1860:	mvn	r0, #0
    1864:	b	1ac0 <read_VR+0x568>
    1868:	str	r5, [sp, #80]	; 0x50
    186c:	ldr	r0, [sp, #72]	; 0x48
    1870:	str	r0, [sp, #84]	; 0x54
    1874:	ldr	r2, [r8, #20]
    1878:	cmp	r6, r2
    187c:	blt	188c <read_VR+0x334>
    1880:	ldr	ip, [r8, #20]
    1884:	sub	r6, ip, #1
    1888:	mov	sl, #1
    188c:	ldr	r1, [r8, #24]
    1890:	mul	r0, r4, r1
    1894:	ldr	r1, [r8, #28]
    1898:	ldr	r2, [r8, #40]	; 0x28
    189c:	mla	r1, r0, r1, r2
    18a0:	str	r1, [sp, #92]	; 0x5c
    18a4:	sub	r1, r6, r4
    18a8:	add	r3, r1, #1
    18ac:	ldr	r2, [r8, #24]
    18b0:	mul	r1, r3, r2
    18b4:	ldr	r2, [r8, #28]
    18b8:	mul	r3, r1, r2
    18bc:	str	r3, [sp, #96]	; 0x60
    18c0:	add	r0, sp, #80	; 0x50
    18c4:	mov	r1, #4
    18c8:	bl	0 <coda_inflate>
    18cc:	mov	r7, r0
    18d0:	cmn	r7, #2
    18d4:	bne	18ec <read_VR+0x394>
    18d8:	ldr	r0, [pc, #560]	; 1b10 <read_VR+0x5b8>
    18dc:	ldr	r1, [pc, #528]	; 1af4 <read_VR+0x59c>
    18e0:	movw	r2, #687	; 0x2af
    18e4:	ldr	r3, [pc, #540]	; 1b08 <read_VR+0x5b0>
    18e8:	bl	0 <__assert_fail>
    18ec:	cmp	r7, #0
    18f0:	bge	1920 <read_VR+0x3c8>
    18f4:	cmn	r7, #5
    18f8:	beq	1904 <read_VR+0x3ac>
    18fc:	mov	r0, #0
    1900:	b	1910 <read_VR+0x3b8>
    1904:	cmp	sl, #0
    1908:	movne	r0, #1
    190c:	moveq	r0, #0
    1910:	cmp	r0, #0
    1914:	moveq	r0, #1
    1918:	movne	r0, #0
    191c:	b	1924 <read_VR+0x3cc>
    1920:	mov	r0, #0
    1924:	cmp	r0, #0
    1928:	beq	19b8 <read_VR+0x460>
    192c:	cmp	r7, #2
    1930:	beq	197c <read_VR+0x424>
    1934:	cmn	r7, #4
    1938:	beq	196c <read_VR+0x414>
    193c:	cmn	r7, #3
    1940:	beq	197c <read_VR+0x424>
    1944:	mvn	r0, #21
    1948:	ldr	r1, [pc, #416]	; 1af0 <read_VR+0x598>
    194c:	bl	0 <coda_set_error>
    1950:	ldr	r0, [sp, #104]	; 0x68
    1954:	cmp	r0, #0
    1958:	beq	19a0 <read_VR+0x448>
    195c:	ldr	r0, [pc, #436]	; 1b18 <read_VR+0x5c0>
    1960:	ldr	r1, [sp, #104]	; 0x68
    1964:	bl	0 <coda_add_error_message>
    1968:	b	19a0 <read_VR+0x448>
    196c:	mvn	r0, #0
    1970:	mov	r1, #0
    1974:	bl	0 <coda_set_error>
    1978:	b	19a0 <read_VR+0x448>
    197c:	mvn	r0, #21
    1980:	ldr	r1, [pc, #356]	; 1aec <read_VR+0x594>
    1984:	bl	0 <coda_set_error>
    1988:	ldr	r1, [sp, #104]	; 0x68
    198c:	cmp	r1, #0
    1990:	beq	19a0 <read_VR+0x448>
    1994:	ldr	r0, [pc, #380]	; 1b18 <read_VR+0x5c0>
    1998:	ldr	r1, [sp, #104]	; 0x68
    199c:	bl	0 <coda_add_error_message>
    19a0:	add	r0, sp, #80	; 0x50
    19a4:	bl	0 <coda_inflateEnd>
    19a8:	mov	r0, r5
    19ac:	bl	0 <free>
    19b0:	mvn	r0, #0
    19b4:	b	1ac0 <read_VR+0x568>
    19b8:	mov	r0, r5
    19bc:	bl	0 <free>
    19c0:	add	r0, sp, #80	; 0x50
    19c4:	bl	0 <coda_inflateEnd>
    19c8:	cmp	r0, #0
    19cc:	beq	19fc <read_VR+0x4a4>
    19d0:	mvn	r0, #21
    19d4:	ldr	r1, [pc, #312]	; 1b14 <read_VR+0x5bc>
    19d8:	bl	0 <coda_set_error>
    19dc:	ldr	r0, [sp, #104]	; 0x68
    19e0:	cmp	r0, #0
    19e4:	beq	19f4 <read_VR+0x49c>
    19e8:	ldr	r0, [pc, #296]	; 1b18 <read_VR+0x5c0>
    19ec:	ldr	r1, [sp, #104]	; 0x68
    19f0:	bl	0 <coda_add_error_message>
    19f4:	mvn	r0, #0
    19f8:	b	1ac0 <read_VR+0x568>
    19fc:	mov	ip, r4
    1a00:	cmp	ip, r6
    1a04:	bgt	1abc <read_VR+0x564>
    1a08:	ldr	r3, [r8, #36]	; 0x24
    1a0c:	add	r2, r3, ip, lsl #3
    1a10:	ldr	r0, [r8, #24]
    1a14:	mul	r3, ip, r0
    1a18:	ldr	r1, [r8, #28]
    1a1c:	mul	r0, r3, r1
    1a20:	asr	r1, r0, #31
    1a24:	str	r0, [r2]
    1a28:	str	r1, [r2, #4]
    1a2c:	add	ip, ip, #1
    1a30:	b	1a00 <read_VR+0x4a8>
    1a34:	movw	r0, #65236	; 0xfed4
    1a38:	movt	r0, #65535	; 0xffff
    1a3c:	ldr	r1, [pc, #192]	; 1b04 <read_VR+0x5ac>
    1a40:	ldr	r2, [sp, #64]	; 0x40
    1a44:	bl	0 <coda_set_error>
    1a48:	mvn	r0, #0
    1a4c:	b	1ac0 <read_VR+0x568>
    1a50:	ldr	r0, [r8, #20]
    1a54:	cmp	r6, r0
    1a58:	blt	1a64 <read_VR+0x50c>
    1a5c:	ldr	r2, [r8, #20]
    1a60:	sub	r6, r2, #1
    1a64:	mov	r1, r4
    1a68:	cmp	r1, r6
    1a6c:	bgt	1abc <read_VR+0x564>
    1a70:	ldr	ip, [r8, #36]	; 0x24
    1a74:	add	r2, ip, r1, lsl #3
    1a78:	mov	r3, #0
    1a7c:	mov	r0, #12
    1a80:	adds	r7, r9, r0
    1a84:	adc	r0, r5, r3
    1a88:	sub	ip, r1, r4
    1a8c:	ldr	r3, [r8, #24]
    1a90:	mul	ip, ip, r3
    1a94:	ldr	r3, [r8, #28]
    1a98:	mul	r3, ip, r3
    1a9c:	asr	ip, r3, #31
    1aa0:	adds	lr, r7, r3
    1aa4:	adc	r3, r0, ip
    1aa8:	mov	ip, lr
    1aac:	str	ip, [r2]
    1ab0:	str	r3, [r2, #4]
    1ab4:	add	r1, r1, #1
    1ab8:	b	1a68 <read_VR+0x510>
    1abc:	mov	r0, #0
    1ac0:	ldr	r4, [sp, #28]
    1ac4:	ldr	r5, [sp, #32]
    1ac8:	ldr	r6, [sp, #36]	; 0x24
    1acc:	ldr	r7, [sp, #40]	; 0x28
    1ad0:	ldr	r8, [sp, #44]	; 0x2c
    1ad4:	ldr	r9, [sp, #48]	; 0x30
    1ad8:	ldr	sl, [sp, #52]	; 0x34
    1adc:	ldr	fp, [sp, #56]	; 0x38
    1ae0:	ldr	lr, [sp, #16]
    1ae4:	add	sp, sp, #136	; 0x88
    1ae8:	bx	lr
    1aec:	.word	0x000002ae
    1af0:	.word	0x000001bc
    1af4:	.word	0x0000067b
    1af8:	.word	0x00000739
    1afc:	.word	0x00000180
    1b00:	.word	0x0000064c
    1b04:	.word	0x00000704
    1b08:	.word	0x000008bf
    1b0c:	.word	0x000004f3
    1b10:	.word	0x000005d3
    1b14:	.word	0x00000621
    1b18:	.word	0x00000223

00001b1c <read_VXR>:
    1b1c:	mov	ip, sp
    1b20:	sub	sp, sp, #104	; 0x68
    1b24:	str	ip, [sp, #12]
    1b28:	str	lr, [sp, #16]
    1b2c:	str	r4, [sp, #28]
    1b30:	str	r5, [sp, #32]
    1b34:	str	r6, [sp, #36]	; 0x24
    1b38:	str	r7, [sp, #40]	; 0x28
    1b3c:	str	r8, [sp, #44]	; 0x2c
    1b40:	str	r9, [sp, #48]	; 0x30
    1b44:	str	sl, [sp, #52]	; 0x34
    1b48:	str	fp, [sp, #56]	; 0x38
    1b4c:	ldr	ip, [ip, #4]
    1b50:	str	ip, [sp, #24]
    1b54:	ldr	ip, [sp, #12]
    1b58:	ldr	r9, [ip]
    1b5c:	mov	r4, r3
    1b60:	mov	r5, r2
    1b64:	mov	r6, r1
    1b68:	mov	r7, r0
    1b6c:	mov	r3, r4
    1b70:	mov	ip, r5
    1b74:	orr	r2, r3, ip
    1b78:	cmp	r2, #0
    1b7c:	bne	1b88 <read_VXR+0x6c>
    1b80:	mov	r0, #0
    1b84:	b	1e5c <read_VXR+0x340>
    1b88:	ldr	r0, [r7, #52]	; 0x34
    1b8c:	mov	r2, #0
    1b90:	mov	r1, #8
    1b94:	adds	lr, r5, r1
    1b98:	adc	r3, r4, r2
    1b9c:	mov	r2, lr
    1ba0:	mov	r8, #0
    1ba4:	mov	r1, #4
    1ba8:	add	sl, sp, #72	; 0x48
    1bac:	str	sl, [sp, #8]
    1bb0:	str	r8, [sp, #4]
    1bb4:	str	r1, [sp]
    1bb8:	bl	0 <read_bytes>
    1bbc:	cmp	r0, #0
    1bc0:	bge	1bcc <read_VXR+0xb0>
    1bc4:	mvn	r0, #0
    1bc8:	b	1e5c <read_VXR+0x340>
    1bcc:	add	r0, sp, #72	; 0x48
    1bd0:	bl	27c <swap4>
    1bd4:	ldr	r3, [sp, #72]	; 0x48
    1bd8:	cmp	r3, #6
    1bdc:	beq	1bfc <read_VXR+0xe0>
    1be0:	movw	r0, #65236	; 0xfed4
    1be4:	movt	r0, #65535	; 0xffff
    1be8:	ldr	r1, [pc, #664]	; 1e88 <read_VXR+0x36c>
    1bec:	ldr	r2, [sp, #72]	; 0x48
    1bf0:	bl	0 <coda_set_error>
    1bf4:	mvn	r0, #0
    1bf8:	b	1e5c <read_VXR+0x340>
    1bfc:	ldr	r0, [r7, #52]	; 0x34
    1c00:	mov	ip, #0
    1c04:	mov	r3, #12
    1c08:	adds	r2, r5, r3
    1c0c:	adc	r3, r4, ip
    1c10:	mov	r8, #0
    1c14:	mov	r1, #8
    1c18:	add	sl, sp, #96	; 0x60
    1c1c:	str	sl, [sp, #8]
    1c20:	str	r8, [sp, #4]
    1c24:	str	r1, [sp]
    1c28:	bl	0 <read_bytes>
    1c2c:	cmp	r0, #0
    1c30:	bge	1c3c <read_VXR+0x120>
    1c34:	mvn	r0, #0
    1c38:	b	1e5c <read_VXR+0x340>
    1c3c:	ldr	r0, [r7, #52]	; 0x34
    1c40:	mov	r2, #0
    1c44:	mov	r1, #20
    1c48:	adds	lr, r5, r1
    1c4c:	adc	r3, r4, r2
    1c50:	mov	r2, lr
    1c54:	mov	r8, #0
    1c58:	mov	ip, #4
    1c5c:	add	sl, sp, #76	; 0x4c
    1c60:	str	sl, [sp, #8]
    1c64:	str	r8, [sp, #4]
    1c68:	str	ip, [sp]
    1c6c:	bl	0 <read_bytes>
    1c70:	cmp	r0, #0
    1c74:	bge	1c80 <read_VXR+0x164>
    1c78:	mvn	r0, #0
    1c7c:	b	1e5c <read_VXR+0x340>
    1c80:	ldr	r0, [r7, #52]	; 0x34
    1c84:	mov	ip, #0
    1c88:	mov	r3, #24
    1c8c:	adds	r2, r5, r3
    1c90:	adc	r3, r4, ip
    1c94:	mov	r8, #0
    1c98:	mov	r1, #4
    1c9c:	add	sl, sp, #80	; 0x50
    1ca0:	str	sl, [sp, #8]
    1ca4:	str	r8, [sp, #4]
    1ca8:	str	r1, [sp]
    1cac:	bl	0 <read_bytes>
    1cb0:	cmp	r0, #0
    1cb4:	bge	1cc0 <read_VXR+0x1a4>
    1cb8:	mvn	r0, #0
    1cbc:	b	1e5c <read_VXR+0x340>
    1cc0:	add	r0, sp, #96	; 0x60
    1cc4:	bl	310 <swap8>
    1cc8:	add	r0, sp, #76	; 0x4c
    1ccc:	bl	27c <swap4>
    1cd0:	add	r0, sp, #80	; 0x50
    1cd4:	bl	27c <swap4>
    1cd8:	mov	r3, #0
    1cdc:	mov	r2, #28
    1ce0:	adds	lr, r5, r2
    1ce4:	adc	r5, r4, r3
    1ce8:	mov	r4, lr
    1cec:	mov	r8, #0
    1cf0:	ldr	r0, [sp, #80]	; 0x50
    1cf4:	cmp	r8, r0
    1cf8:	bge	1e28 <read_VXR+0x30c>
    1cfc:	ldr	r0, [r7, #52]	; 0x34
    1d00:	lsl	ip, r8, #2
    1d04:	asr	r1, ip, #31
    1d08:	adds	r2, r4, ip
    1d0c:	adc	r3, r5, r1
    1d10:	mov	ip, #0
    1d14:	mov	sl, #4
    1d18:	add	fp, sp, #64	; 0x40
    1d1c:	str	fp, [sp, #8]
    1d20:	str	ip, [sp, #4]
    1d24:	str	sl, [sp]
    1d28:	bl	0 <read_bytes>
    1d2c:	cmp	r0, #0
    1d30:	bge	1d3c <read_VXR+0x220>
    1d34:	mvn	r0, #0
    1d38:	b	1e5c <read_VXR+0x340>
    1d3c:	ldr	r0, [r7, #52]	; 0x34
    1d40:	ldr	r2, [sp, #76]	; 0x4c
    1d44:	add	r1, r8, r2
    1d48:	lsl	r1, r1, #2
    1d4c:	asr	r2, r1, #31
    1d50:	adds	lr, r4, r1
    1d54:	adc	r3, r5, r2
    1d58:	mov	r2, lr
    1d5c:	mov	r1, #0
    1d60:	mov	fp, #4
    1d64:	add	sl, sp, #68	; 0x44
    1d68:	str	sl, [sp, #8]
    1d6c:	str	r1, [sp, #4]
    1d70:	str	fp, [sp]
    1d74:	bl	0 <read_bytes>
    1d78:	cmp	r0, #0
    1d7c:	bge	1d88 <read_VXR+0x26c>
    1d80:	mvn	r0, #0
    1d84:	b	1e5c <read_VXR+0x340>
    1d88:	ldr	r0, [r7, #52]	; 0x34
    1d8c:	ldr	ip, [sp, #76]	; 0x4c
    1d90:	add	ip, r8, ip
    1d94:	lsl	r1, ip, #3
    1d98:	asr	r2, r1, #31
    1d9c:	adds	lr, r4, r1
    1da0:	adc	r3, r5, r2
    1da4:	mov	r2, lr
    1da8:	mov	r1, #0
    1dac:	mov	sl, #8
    1db0:	add	fp, sp, #88	; 0x58
    1db4:	str	fp, [sp, #8]
    1db8:	str	r1, [sp, #4]
    1dbc:	str	sl, [sp]
    1dc0:	bl	0 <read_bytes>
    1dc4:	cmp	r0, #0
    1dc8:	bge	1dd4 <read_VXR+0x2b8>
    1dcc:	mvn	r0, #0
    1dd0:	b	1e5c <read_VXR+0x340>
    1dd4:	add	r0, sp, #64	; 0x40
    1dd8:	bl	27c <swap4>
    1ddc:	add	r0, sp, #68	; 0x44
    1de0:	bl	27c <swap4>
    1de4:	add	r0, sp, #88	; 0x58
    1de8:	bl	310 <swap8>
    1dec:	ldr	r2, [sp, #88]	; 0x58
    1df0:	ldr	r3, [sp, #92]	; 0x5c
    1df4:	ldr	r1, [sp, #64]	; 0x40
    1df8:	ldr	r0, [sp, #68]	; 0x44
    1dfc:	str	r0, [sp, #4]
    1e00:	str	r1, [sp]
    1e04:	mov	r1, r6
    1e08:	mov	r0, r7
    1e0c:	bl	1558 <read_VR>
    1e10:	cmp	r0, #0
    1e14:	beq	1e20 <read_VXR+0x304>
    1e18:	mvn	r0, #0
    1e1c:	b	1e5c <read_VXR+0x340>
    1e20:	add	r8, r8, #1
    1e24:	b	1cf0 <read_VXR+0x1d4>
    1e28:	ldr	r2, [sp, #96]	; 0x60
    1e2c:	ldr	r3, [sp, #100]	; 0x64
    1e30:	ldr	ip, [sp, #24]
    1e34:	str	ip, [sp, #4]
    1e38:	str	r9, [sp]
    1e3c:	mov	r1, r6
    1e40:	mov	r0, r7
    1e44:	bl	1b1c <read_VXR>
    1e48:	cmp	r0, #0
    1e4c:	beq	1e58 <read_VXR+0x33c>
    1e50:	mvn	r0, #0
    1e54:	b	1e5c <read_VXR+0x340>
    1e58:	mov	r0, #0
    1e5c:	ldr	r4, [sp, #28]
    1e60:	ldr	r5, [sp, #32]
    1e64:	ldr	r6, [sp, #36]	; 0x24
    1e68:	ldr	r7, [sp, #40]	; 0x28
    1e6c:	ldr	r8, [sp, #44]	; 0x2c
    1e70:	ldr	r9, [sp, #48]	; 0x30
    1e74:	ldr	sl, [sp, #52]	; 0x34
    1e78:	ldr	fp, [sp, #56]	; 0x38
    1e7c:	ldr	lr, [sp, #16]
    1e80:	add	sp, sp, #104	; 0x68
    1e84:	bx	lr
    1e88:	.word	0x00000229

00001e8c <read_CPR>:
    1e8c:	mov	ip, sp
    1e90:	sub	sp, sp, #48	; 0x30
    1e94:	str	ip, [sp, #12]
    1e98:	str	lr, [sp, #16]
    1e9c:	str	r4, [sp, #24]
    1ea0:	str	r5, [sp, #28]
    1ea4:	str	r6, [sp, #32]
    1ea8:	str	r8, [sp, #36]	; 0x24
    1eac:	mov	r5, r3
    1eb0:	mov	r4, r2
    1eb4:	mov	r6, r0
    1eb8:	mov	r2, r4
    1ebc:	mov	r0, r5
    1ec0:	orr	ip, r0, r2
    1ec4:	cmp	ip, #0
    1ec8:	bne	1ed4 <read_CPR+0x48>
    1ecc:	mov	r0, #0
    1ed0:	b	1fb8 <read_CPR+0x12c>
    1ed4:	ldr	r0, [r6, #52]	; 0x34
    1ed8:	mov	r2, #0
    1edc:	mov	r1, #8
    1ee0:	adds	lr, r4, r1
    1ee4:	adc	r3, r5, r2
    1ee8:	mov	r2, lr
    1eec:	mov	r1, #0
    1ef0:	mov	ip, #4
    1ef4:	add	r8, sp, #40	; 0x28
    1ef8:	str	r8, [sp, #8]
    1efc:	str	r1, [sp, #4]
    1f00:	str	ip, [sp]
    1f04:	bl	0 <read_bytes>
    1f08:	cmp	r0, #0
    1f0c:	bge	1f18 <read_CPR+0x8c>
    1f10:	mvn	r0, #0
    1f14:	b	1fb8 <read_CPR+0x12c>
    1f18:	add	r0, sp, #40	; 0x28
    1f1c:	bl	27c <swap4>
    1f20:	ldr	r0, [sp, #40]	; 0x28
    1f24:	cmp	r0, #11
    1f28:	beq	1f48 <read_CPR+0xbc>
    1f2c:	movw	r0, #65236	; 0xfed4
    1f30:	movt	r0, #65535	; 0xffff
    1f34:	ldr	r1, [pc, #156]	; 1fd8 <read_CPR+0x14c>
    1f38:	ldr	r2, [sp, #40]	; 0x28
    1f3c:	bl	0 <coda_set_error>
    1f40:	mvn	r0, #0
    1f44:	b	1fb8 <read_CPR+0x12c>
    1f48:	ldr	r0, [r6, #52]	; 0x34
    1f4c:	mov	ip, #0
    1f50:	mov	r3, #12
    1f54:	adds	r2, r4, r3
    1f58:	adc	r3, r5, ip
    1f5c:	mov	ip, #0
    1f60:	mov	r1, #4
    1f64:	add	r5, sp, #44	; 0x2c
    1f68:	str	r5, [sp, #8]
    1f6c:	str	ip, [sp, #4]
    1f70:	str	r1, [sp]
    1f74:	bl	0 <read_bytes>
    1f78:	cmp	r0, #0
    1f7c:	bge	1f88 <read_CPR+0xfc>
    1f80:	mvn	r0, #0
    1f84:	b	1fb8 <read_CPR+0x12c>
    1f88:	add	r0, sp, #44	; 0x2c
    1f8c:	bl	27c <swap4>
    1f90:	ldr	r0, [sp, #44]	; 0x2c
    1f94:	cmp	r0, #5
    1f98:	beq	1fb4 <read_CPR+0x128>
    1f9c:	mvn	r0, #199	; 0xc7
    1fa0:	ldr	r1, [pc, #44]	; 1fd4 <read_CPR+0x148>
    1fa4:	ldr	r2, [sp, #44]	; 0x2c
    1fa8:	bl	0 <coda_set_error>
    1fac:	mvn	r0, #0
    1fb0:	b	1fb8 <read_CPR+0x12c>
    1fb4:	mov	r0, #0
    1fb8:	ldr	r4, [sp, #24]
    1fbc:	ldr	r5, [sp, #28]
    1fc0:	ldr	r6, [sp, #32]
    1fc4:	ldr	r8, [sp, #36]	; 0x24
    1fc8:	ldr	lr, [sp, #16]
    1fcc:	add	sp, sp, #48	; 0x30
    1fd0:	bx	lr
    1fd4:	.word	0x00000035
    1fd8:	.word	0x00000853

00001fdc <read_VDR>:
    1fdc:	mov	ip, sp
    1fe0:	sub	sp, sp, #464	; 0x1d0
    1fe4:	str	ip, [sp, #24]
    1fe8:	str	lr, [sp, #28]
    1fec:	str	r4, [sp, #32]
    1ff0:	str	r5, [sp, #36]	; 0x24
    1ff4:	str	r6, [sp, #40]	; 0x28
    1ff8:	str	r7, [sp, #44]	; 0x2c
    1ffc:	str	r8, [sp, #48]	; 0x30
    2000:	str	r9, [sp, #52]	; 0x34
    2004:	str	sl, [sp, #56]	; 0x38
    2008:	str	fp, [sp, #60]	; 0x3c
    200c:	ldr	r7, [ip]
    2010:	mov	r6, r3
    2014:	mov	r4, r2
    2018:	mov	r5, r0
    201c:	mov	r2, r6
    2020:	mov	r3, r4
    2024:	orr	ip, r2, r3
    2028:	cmp	ip, #0
    202c:	bne	2038 <read_VDR+0x5c>
    2030:	mov	r0, #0
    2034:	b	286c <read_VDR+0x890>
    2038:	ldr	r0, [r5, #52]	; 0x34
    203c:	mov	r1, #0
    2040:	mov	ip, #8
    2044:	adds	r2, r4, ip
    2048:	adc	r3, r6, r1
    204c:	mov	ip, #0
    2050:	mov	r1, #4
    2054:	add	r9, sp, #68	; 0x44
    2058:	str	r9, [sp, #8]
    205c:	str	ip, [sp, #4]
    2060:	str	r1, [sp]
    2064:	bl	0 <read_bytes>
    2068:	cmp	r0, #0
    206c:	bge	2078 <read_VDR+0x9c>
    2070:	mvn	r0, #0
    2074:	b	286c <read_VDR+0x890>
    2078:	add	r0, sp, #68	; 0x44
    207c:	bl	27c <swap4>
    2080:	cmp	r7, #0
    2084:	bne	20b0 <read_VDR+0xd4>
    2088:	ldr	r0, [sp, #68]	; 0x44
    208c:	cmp	r0, #3
    2090:	beq	20d8 <read_VDR+0xfc>
    2094:	movw	r0, #65236	; 0xfed4
    2098:	movt	r0, #65535	; 0xffff
    209c:	ldr	r1, [pc, #2052]	; 28a8 <read_VDR+0x8cc>
    20a0:	ldr	r2, [sp, #68]	; 0x44
    20a4:	bl	0 <coda_set_error>
    20a8:	mvn	r0, #0
    20ac:	b	286c <read_VDR+0x890>
    20b0:	ldr	ip, [sp, #68]	; 0x44
    20b4:	cmp	ip, #8
    20b8:	beq	20d8 <read_VDR+0xfc>
    20bc:	movw	r0, #65236	; 0xfed4
    20c0:	movt	r0, #65535	; 0xffff
    20c4:	ldr	r1, [pc, #2000]	; 289c <read_VDR+0x8c0>
    20c8:	ldr	r2, [sp, #68]	; 0x44
    20cc:	bl	0 <coda_set_error>
    20d0:	mvn	r0, #0
    20d4:	b	286c <read_VDR+0x890>
    20d8:	ldr	r0, [r5, #52]	; 0x34
    20dc:	mov	r1, #0
    20e0:	mov	ip, #12
    20e4:	adds	r2, r4, ip
    20e8:	adc	r3, r6, r1
    20ec:	mov	r1, #0
    20f0:	mov	ip, #8
    20f4:	add	r9, sp, #104	; 0x68
    20f8:	str	r9, [sp, #8]
    20fc:	str	r1, [sp, #4]
    2100:	str	ip, [sp]
    2104:	bl	0 <read_bytes>
    2108:	cmp	r0, #0
    210c:	bge	2118 <read_VDR+0x13c>
    2110:	mvn	r0, #0
    2114:	b	286c <read_VDR+0x890>
    2118:	ldr	r0, [r5, #52]	; 0x34
    211c:	mov	r2, #0
    2120:	mov	r1, #20
    2124:	adds	lr, r4, r1
    2128:	adc	r3, r6, r2
    212c:	mov	r2, lr
    2130:	mov	ip, #0
    2134:	mov	r1, #4
    2138:	add	r9, sp, #72	; 0x48
    213c:	str	r9, [sp, #8]
    2140:	str	ip, [sp, #4]
    2144:	str	r1, [sp]
    2148:	bl	0 <read_bytes>
    214c:	cmp	r0, #0
    2150:	bge	215c <read_VDR+0x180>
    2154:	mvn	r0, #0
    2158:	b	286c <read_VDR+0x890>
    215c:	ldr	r0, [r5, #52]	; 0x34
    2160:	mov	r1, #0
    2164:	mov	ip, #24
    2168:	adds	r2, r4, ip
    216c:	adc	r3, r6, r1
    2170:	mov	ip, #0
    2174:	mov	r1, #4
    2178:	add	r9, sp, #76	; 0x4c
    217c:	str	r9, [sp, #8]
    2180:	str	ip, [sp, #4]
    2184:	str	r1, [sp]
    2188:	bl	0 <read_bytes>
    218c:	cmp	r0, #0
    2190:	bge	219c <read_VDR+0x1c0>
    2194:	mvn	r0, #0
    2198:	b	286c <read_VDR+0x890>
    219c:	ldr	r0, [r5, #52]	; 0x34
    21a0:	mov	r2, #0
    21a4:	mov	r1, #28
    21a8:	adds	lr, r4, r1
    21ac:	adc	r3, r6, r2
    21b0:	mov	r2, lr
    21b4:	mov	r1, #0
    21b8:	mov	ip, #8
    21bc:	add	r9, sp, #112	; 0x70
    21c0:	str	r9, [sp, #8]
    21c4:	str	r1, [sp, #4]
    21c8:	str	ip, [sp]
    21cc:	bl	0 <read_bytes>
    21d0:	cmp	r0, #0
    21d4:	bge	21e0 <read_VDR+0x204>
    21d8:	mvn	r0, #0
    21dc:	b	286c <read_VDR+0x890>
    21e0:	ldr	r0, [r5, #52]	; 0x34
    21e4:	mov	ip, #0
    21e8:	mov	r3, #36	; 0x24
    21ec:	adds	r2, r4, r3
    21f0:	adc	r3, r6, ip
    21f4:	mov	r1, #0
    21f8:	mov	ip, #8
    21fc:	add	r9, sp, #120	; 0x78
    2200:	str	r9, [sp, #8]
    2204:	str	r1, [sp, #4]
    2208:	str	ip, [sp]
    220c:	bl	0 <read_bytes>
    2210:	cmp	r0, #0
    2214:	bge	2220 <read_VDR+0x244>
    2218:	mvn	r0, #0
    221c:	b	286c <read_VDR+0x890>
    2220:	ldr	r0, [r5, #52]	; 0x34
    2224:	mov	r3, #0
    2228:	mov	r2, #44	; 0x2c
    222c:	adds	r2, r4, r2
    2230:	adc	r3, r6, r3
    2234:	mov	r1, #0
    2238:	mov	ip, #4
    223c:	add	r9, sp, #80	; 0x50
    2240:	str	r9, [sp, #8]
    2244:	str	r1, [sp, #4]
    2248:	str	ip, [sp]
    224c:	bl	0 <read_bytes>
    2250:	cmp	r0, #0
    2254:	bge	2260 <read_VDR+0x284>
    2258:	mvn	r0, #0
    225c:	b	286c <read_VDR+0x890>
    2260:	ldr	r0, [r5, #52]	; 0x34
    2264:	mov	r2, #0
    2268:	mov	r1, #48	; 0x30
    226c:	adds	lr, r4, r1
    2270:	adc	r3, r6, r2
    2274:	mov	r2, lr
    2278:	mov	r1, #0
    227c:	mov	ip, #4
    2280:	add	r9, sp, #84	; 0x54
    2284:	str	r9, [sp, #8]
    2288:	str	r1, [sp, #4]
    228c:	str	ip, [sp]
    2290:	bl	0 <read_bytes>
    2294:	cmp	r0, #0
    2298:	bge	22a4 <read_VDR+0x2c8>
    229c:	mvn	r0, #0
    22a0:	b	286c <read_VDR+0x890>
    22a4:	ldr	r0, [r5, #52]	; 0x34
    22a8:	mov	r2, #0
    22ac:	mov	r1, #64	; 0x40
    22b0:	adds	lr, r4, r1
    22b4:	adc	r3, r6, r2
    22b8:	mov	r2, lr
    22bc:	mov	r1, #0
    22c0:	mov	ip, #4
    22c4:	add	r9, sp, #88	; 0x58
    22c8:	str	r9, [sp, #8]
    22cc:	str	r1, [sp, #4]
    22d0:	str	ip, [sp]
    22d4:	bl	0 <read_bytes>
    22d8:	cmp	r0, #0
    22dc:	bge	22e8 <read_VDR+0x30c>
    22e0:	mvn	r0, #0
    22e4:	b	286c <read_VDR+0x890>
    22e8:	ldr	r0, [r5, #52]	; 0x34
    22ec:	mov	r1, #0
    22f0:	mov	ip, #68	; 0x44
    22f4:	adds	r2, r4, ip
    22f8:	adc	r3, r6, r1
    22fc:	mov	r1, #0
    2300:	mov	ip, #4
    2304:	add	r9, sp, #92	; 0x5c
    2308:	str	r9, [sp, #8]
    230c:	str	r1, [sp, #4]
    2310:	str	ip, [sp]
    2314:	bl	0 <read_bytes>
    2318:	cmp	r0, #0
    231c:	bge	2328 <read_VDR+0x34c>
    2320:	mvn	r0, #0
    2324:	b	286c <read_VDR+0x890>
    2328:	ldr	r0, [r5, #52]	; 0x34
    232c:	mov	r3, #0
    2330:	mov	r2, #72	; 0x48
    2334:	adds	r2, r4, r2
    2338:	adc	r3, r6, r3
    233c:	mov	ip, #0
    2340:	mov	r1, #8
    2344:	add	r9, sp, #128	; 0x80
    2348:	str	r9, [sp, #8]
    234c:	str	ip, [sp, #4]
    2350:	str	r1, [sp]
    2354:	bl	0 <read_bytes>
    2358:	cmp	r0, #0
    235c:	bge	2368 <read_VDR+0x38c>
    2360:	mvn	r0, #0
    2364:	b	286c <read_VDR+0x890>
    2368:	ldr	r0, [r5, #52]	; 0x34
    236c:	mov	ip, #0
    2370:	mov	r3, #80	; 0x50
    2374:	adds	r2, r4, r3
    2378:	adc	r3, r6, ip
    237c:	mov	ip, #0
    2380:	mov	r1, #4
    2384:	add	r9, sp, #96	; 0x60
    2388:	str	r9, [sp, #8]
    238c:	str	ip, [sp, #4]
    2390:	str	r1, [sp]
    2394:	bl	0 <read_bytes>
    2398:	cmp	r0, #0
    239c:	bge	23a8 <read_VDR+0x3cc>
    23a0:	mvn	r0, #0
    23a4:	b	286c <read_VDR+0x890>
    23a8:	ldr	r0, [r5, #52]	; 0x34
    23ac:	mov	r1, #0
    23b0:	mov	ip, #84	; 0x54
    23b4:	adds	r2, r4, ip
    23b8:	adc	r3, r6, r1
    23bc:	mov	r1, #0
    23c0:	mov	ip, #256	; 0x100
    23c4:	add	r9, sp, #200	; 0xc8
    23c8:	str	r9, [sp, #8]
    23cc:	str	r1, [sp, #4]
    23d0:	str	ip, [sp]
    23d4:	bl	0 <read_bytes>
    23d8:	cmp	r0, #0
    23dc:	bge	23e8 <read_VDR+0x40c>
    23e0:	mvn	r0, #0
    23e4:	b	286c <read_VDR+0x890>
    23e8:	mov	r3, #0
    23ec:	strb	r3, [sp, #456]	; 0x1c8
    23f0:	add	r0, sp, #200	; 0xc8
    23f4:	bl	41c <rtrim>
    23f8:	add	r0, sp, #104	; 0x68
    23fc:	bl	310 <swap8>
    2400:	add	r0, sp, #72	; 0x48
    2404:	bl	27c <swap4>
    2408:	add	r0, sp, #76	; 0x4c
    240c:	bl	27c <swap4>
    2410:	add	r0, sp, #112	; 0x70
    2414:	bl	310 <swap8>
    2418:	add	r0, sp, #120	; 0x78
    241c:	bl	310 <swap8>
    2420:	add	r0, sp, #80	; 0x50
    2424:	bl	27c <swap4>
    2428:	add	r0, sp, #84	; 0x54
    242c:	bl	27c <swap4>
    2430:	add	r0, sp, #88	; 0x58
    2434:	bl	27c <swap4>
    2438:	add	r0, sp, #92	; 0x5c
    243c:	bl	27c <swap4>
    2440:	add	r0, sp, #128	; 0x80
    2444:	bl	310 <swap8>
    2448:	add	r0, sp, #96	; 0x60
    244c:	bl	27c <swap4>
    2450:	ldr	r0, [sp, #72]	; 0x48
    2454:	cmp	r0, #32
    2458:	bne	2470 <read_VDR+0x494>
    245c:	mvn	r0, #199	; 0xc7
    2460:	ldr	r1, [pc, #1096]	; 28b0 <read_VDR+0x8d4>
    2464:	bl	0 <coda_set_error>
    2468:	mvn	r0, #0
    246c:	b	286c <read_VDR+0x890>
    2470:	cmp	r7, #0
    2474:	beq	25b8 <read_VDR+0x5dc>
    2478:	ldr	r0, [r5, #52]	; 0x34
    247c:	mov	r1, #0
    2480:	mov	ip, #340	; 0x154
    2484:	adds	r2, r4, ip
    2488:	adc	r3, r6, r1
    248c:	mov	ip, #0
    2490:	mov	r1, #4
    2494:	add	r9, sp, #100	; 0x64
    2498:	str	r9, [sp, #8]
    249c:	str	ip, [sp, #4]
    24a0:	str	r1, [sp]
    24a4:	bl	0 <read_bytes>
    24a8:	cmp	r0, #0
    24ac:	bge	24b8 <read_VDR+0x4dc>
    24b0:	mvn	r0, #0
    24b4:	b	286c <read_VDR+0x890>
    24b8:	add	r0, sp, #100	; 0x64
    24bc:	bl	27c <swap4>
    24c0:	ldr	ip, [sp, #100]	; 0x64
    24c4:	cmp	ip, #0
    24c8:	bge	24ec <read_VDR+0x510>
    24cc:	movw	r0, #65236	; 0xfed4
    24d0:	movt	r0, #65535	; 0xffff
    24d4:	ldr	r1, [pc, #964]	; 28a0 <read_VDR+0x8c4>
    24d8:	add	r2, sp, #200	; 0xc8
    24dc:	ldr	r3, [sp, #100]	; 0x64
    24e0:	bl	0 <coda_set_error>
    24e4:	mvn	r0, #0
    24e8:	b	286c <read_VDR+0x890>
    24ec:	ldr	r1, [sp, #100]	; 0x64
    24f0:	cmp	r1, #8
    24f4:	ble	2518 <read_VDR+0x53c>
    24f8:	movw	r0, #65236	; 0xfed4
    24fc:	movt	r0, #65535	; 0xffff
    2500:	ldr	r1, [pc, #912]	; 2898 <read_VDR+0x8bc>
    2504:	add	r2, sp, #200	; 0xc8
    2508:	ldr	r3, [sp, #100]	; 0x64
    250c:	bl	0 <coda_set_error>
    2510:	mvn	r0, #0
    2514:	b	286c <read_VDR+0x890>
    2518:	mov	r0, #0
    251c:	mov	ip, #344	; 0x158
    2520:	adds	r4, r4, ip
    2524:	adc	r6, r6, r0
    2528:	ldr	r0, [sp, #100]	; 0x64
    252c:	cmp	r0, #0
    2530:	ble	25c0 <read_VDR+0x5e4>
    2534:	mov	r8, #0
    2538:	ldr	r1, [sp, #100]	; 0x64
    253c:	cmp	r8, r1
    2540:	bge	25a0 <read_VDR+0x5c4>
    2544:	ldr	r0, [r5, #52]	; 0x34
    2548:	lsl	r1, r8, #2
    254c:	asr	r2, r1, #31
    2550:	adds	lr, r4, r1
    2554:	adc	r3, r6, r2
    2558:	mov	r2, lr
    255c:	mov	r1, #0
    2560:	mov	ip, #4
    2564:	add	r9, sp, #168	; 0xa8
    2568:	add	sl, r9, r8, lsl #2
    256c:	str	sl, [sp, #8]
    2570:	str	r1, [sp, #4]
    2574:	str	ip, [sp]
    2578:	bl	0 <read_bytes>
    257c:	cmp	r0, #0
    2580:	bge	258c <read_VDR+0x5b0>
    2584:	mvn	r0, #0
    2588:	b	286c <read_VDR+0x890>
    258c:	add	r3, sp, #168	; 0xa8
    2590:	add	r0, r3, r8, lsl #2
    2594:	bl	27c <swap4>
    2598:	add	r8, r8, #1
    259c:	b	2538 <read_VDR+0x55c>
    25a0:	ldr	r3, [sp, #100]	; 0x64
    25a4:	lsl	r3, r3, #2
    25a8:	asr	ip, r3, #31
    25ac:	adds	r4, r4, r3
    25b0:	adc	r6, r6, ip
    25b4:	b	25c0 <read_VDR+0x5e4>
    25b8:	ldr	r0, [r5, #80]	; 0x50
    25bc:	str	r0, [sp, #100]	; 0x64
    25c0:	ldr	r1, [sp, #100]	; 0x64
    25c4:	cmp	r1, #0
    25c8:	ble	264c <read_VDR+0x670>
    25cc:	mov	r8, #0
    25d0:	ldr	ip, [sp, #100]	; 0x64
    25d4:	cmp	r8, ip
    25d8:	bge	2638 <read_VDR+0x65c>
    25dc:	ldr	r0, [r5, #52]	; 0x34
    25e0:	lsl	r1, r8, #2
    25e4:	asr	r2, r1, #31
    25e8:	adds	lr, r4, r1
    25ec:	adc	r3, r6, r2
    25f0:	mov	r2, lr
    25f4:	mov	r9, #0
    25f8:	mov	ip, #4
    25fc:	add	r1, sp, #136	; 0x88
    2600:	add	sl, r1, r8, lsl #2
    2604:	str	sl, [sp, #8]
    2608:	str	r9, [sp, #4]
    260c:	str	ip, [sp]
    2610:	bl	0 <read_bytes>
    2614:	cmp	r0, #0
    2618:	bge	2624 <read_VDR+0x648>
    261c:	mvn	r0, #0
    2620:	b	286c <read_VDR+0x890>
    2624:	add	ip, sp, #136	; 0x88
    2628:	add	r0, ip, r8, lsl #2
    262c:	bl	27c <swap4>
    2630:	add	r8, r8, #1
    2634:	b	25d0 <read_VDR+0x5f4>
    2638:	ldr	r1, [sp, #100]	; 0x64
    263c:	lsl	r1, r1, #2
    2640:	asr	r2, r1, #31
    2644:	adds	r1, r4, r1
    2648:	adc	r2, r6, r2
    264c:	ldr	r2, [sp, #80]	; 0x50
    2650:	and	r4, r2, #1
    2654:	ldr	r3, [sp, #80]	; 0x50
    2658:	and	r0, r3, #4
    265c:	cmp	r4, #0
    2660:	bne	2678 <read_VDR+0x69c>
    2664:	ldr	r3, [sp, #76]	; 0x4c
    2668:	cmp	r3, #0
    266c:	movne	ip, #1
    2670:	moveq	ip, #0
    2674:	b	267c <read_VDR+0x6a0>
    2678:	mov	ip, #0
    267c:	cmp	ip, #0
    2680:	beq	26a8 <read_VDR+0x6cc>
    2684:	movw	r0, #65236	; 0xfed4
    2688:	movt	r0, #65535	; 0xffff
    268c:	ldr	r1, [pc, #528]	; 28a4 <read_VDR+0x8c8>
    2690:	add	r2, sp, #200	; 0xc8
    2694:	ldr	ip, [sp, #76]	; 0x4c
    2698:	add	r3, ip, #1
    269c:	bl	0 <coda_set_error>
    26a0:	mvn	r0, #0
    26a4:	b	286c <read_VDR+0x890>
    26a8:	cmp	r0, #0
    26ac:	beq	26d4 <read_VDR+0x6f8>
    26b0:	ldr	r2, [sp, #128]	; 0x80
    26b4:	ldr	r3, [sp, #132]	; 0x84
    26b8:	mvn	r1, r3
    26bc:	mvn	ip, r2
    26c0:	orr	r1, r1, ip
    26c4:	cmp	r1, #0
    26c8:	movne	r3, #1
    26cc:	moveq	r3, #0
    26d0:	b	26d8 <read_VDR+0x6fc>
    26d4:	mov	r3, #0
    26d8:	cmp	r3, #0
    26dc:	beq	2700 <read_VDR+0x724>
    26e0:	ldr	r2, [sp, #128]	; 0x80
    26e4:	ldr	r3, [sp, #132]	; 0x84
    26e8:	mov	r0, r5
    26ec:	bl	1e8c <read_CPR>
    26f0:	cmp	r0, #0
    26f4:	beq	2700 <read_VDR+0x724>
    26f8:	mvn	r0, #0
    26fc:	b	286c <read_VDR+0x890>
    2700:	ldr	r2, [r5, #20]
    2704:	ldr	r1, [r2, #16]
    2708:	ldr	r0, [sp, #92]	; 0x5c
    270c:	cmp	r1, r0
    2710:	beq	2738 <read_VDR+0x75c>
    2714:	movw	r0, #65236	; 0xfed4
    2718:	movt	r0, #65535	; 0xffff
    271c:	ldr	r1, [pc, #392]	; 28ac <read_VDR+0x8d0>
    2720:	ldr	r2, [sp, #92]	; 0x5c
    2724:	ldr	r3, [r5, #20]
    2728:	ldr	r3, [r3, #16]
    272c:	bl	0 <coda_set_error>
    2730:	mvn	r0, #0
    2734:	b	286c <read_VDR+0x890>
    2738:	cmp	r7, #0
    273c:	bne	278c <read_VDR+0x7b0>
    2740:	ldr	r0, [sp, #72]	; 0x48
    2744:	ldr	r1, [sp, #76]	; 0x4c
    2748:	ldr	r3, [sp, #100]	; 0x64
    274c:	add	sl, r5, #84	; 0x54
    2750:	add	r8, sp, #136	; 0x88
    2754:	ldr	r2, [r5, #72]	; 0x48
    2758:	ldr	r9, [sp, #88]	; 0x58
    275c:	ldr	ip, [sp, #84]	; 0x54
    2760:	add	fp, sp, #64	; 0x40
    2764:	str	fp, [sp, #20]
    2768:	str	ip, [sp, #16]
    276c:	str	r9, [sp, #12]
    2770:	str	r2, [sp, #8]
    2774:	str	r8, [sp, #4]
    2778:	str	sl, [sp]
    277c:	mov	r2, r4
    2780:	bl	0 <coda_cdf_variable_new>
    2784:	mov	r4, r0
    2788:	b	27d4 <read_VDR+0x7f8>
    278c:	ldr	r0, [sp, #72]	; 0x48
    2790:	ldr	r1, [sp, #76]	; 0x4c
    2794:	ldr	r3, [sp, #100]	; 0x64
    2798:	add	sl, sp, #168	; 0xa8
    279c:	add	ip, sp, #136	; 0x88
    27a0:	ldr	r2, [r5, #72]	; 0x48
    27a4:	ldr	r9, [sp, #88]	; 0x58
    27a8:	ldr	r8, [sp, #84]	; 0x54
    27ac:	add	fp, sp, #64	; 0x40
    27b0:	str	fp, [sp, #20]
    27b4:	str	r8, [sp, #16]
    27b8:	str	r9, [sp, #12]
    27bc:	str	r2, [sp, #8]
    27c0:	str	ip, [sp, #4]
    27c4:	str	sl, [sp]
    27c8:	mov	r2, r4
    27cc:	bl	0 <coda_cdf_variable_new>
    27d0:	mov	r4, r0
    27d4:	cmp	r4, #0
    27d8:	bne	27e4 <read_VDR+0x808>
    27dc:	mvn	r0, #0
    27e0:	b	286c <read_VDR+0x890>
    27e4:	ldr	r0, [r5, #20]
    27e8:	add	r1, sp, #200	; 0xc8
    27ec:	mov	r3, #1
    27f0:	mov	r2, r4
    27f4:	bl	0 <coda_mem_record_add_field>
    27f8:	cmp	r0, #0
    27fc:	beq	2810 <read_VDR+0x834>
    2800:	mov	r0, r4
    2804:	bl	0 <coda_cdf_type_delete>
    2808:	mvn	r0, #0
    280c:	b	286c <read_VDR+0x890>
    2810:	ldr	r1, [sp, #64]	; 0x40
    2814:	ldr	r2, [sp, #112]	; 0x70
    2818:	ldr	r3, [sp, #116]	; 0x74
    281c:	mov	r0, #0
    2820:	mvn	ip, #0
    2824:	str	ip, [sp, #4]
    2828:	str	r0, [sp]
    282c:	mov	r0, r5
    2830:	bl	1b1c <read_VXR>
    2834:	cmp	r0, #0
    2838:	beq	2844 <read_VDR+0x868>
    283c:	mvn	r0, #0
    2840:	b	286c <read_VDR+0x890>
    2844:	ldr	r2, [sp, #104]	; 0x68
    2848:	ldr	r3, [sp, #108]	; 0x6c
    284c:	str	r7, [sp]
    2850:	mov	r0, r5
    2854:	bl	1fdc <read_VDR>
    2858:	cmp	r0, #0
    285c:	beq	2868 <read_VDR+0x88c>
    2860:	mvn	r0, #0
    2864:	b	286c <read_VDR+0x890>
    2868:	mov	r0, #0
    286c:	ldr	r4, [sp, #32]
    2870:	ldr	r5, [sp, #36]	; 0x24
    2874:	ldr	r6, [sp, #40]	; 0x28
    2878:	ldr	r7, [sp, #44]	; 0x2c
    287c:	ldr	r8, [sp, #48]	; 0x30
    2880:	ldr	r9, [sp, #52]	; 0x34
    2884:	ldr	sl, [sp, #56]	; 0x38
    2888:	ldr	fp, [sp, #60]	; 0x3c
    288c:	ldr	lr, [sp, #28]
    2890:	add	sp, sp, #464	; 0x1d0
    2894:	bx	lr
    2898:	.word	0x000006d3
    289c:	.word	0x00000186
    28a0:	.word	0x0000006a
    28a4:	.word	0x000002e5
    28a8:	.word	0x0000059d
    28ac:	.word	0x00000541
    28b0:	.word	0x00000576

000028b4 <read_GDR>:
    28b4:	mov	ip, sp
    28b8:	sub	sp, sp, #144	; 0x90
    28bc:	str	ip, [sp, #12]
    28c0:	str	lr, [sp, #16]
    28c4:	str	r4, [sp, #24]
    28c8:	str	r5, [sp, #28]
    28cc:	str	r6, [sp, #32]
    28d0:	str	r7, [sp, #36]	; 0x24
    28d4:	str	r8, [sp, #40]	; 0x28
    28d8:	mov	r6, r3
    28dc:	mov	r5, r2
    28e0:	mov	r4, r0
    28e4:	ldr	r0, [r4, #52]	; 0x34
    28e8:	mov	r2, #0
    28ec:	mov	r1, #8
    28f0:	adds	lr, r5, r1
    28f4:	adc	r3, r6, r2
    28f8:	mov	r2, lr
    28fc:	mov	r1, #0
    2900:	mov	ip, #4
    2904:	add	r8, sp, #48	; 0x30
    2908:	str	r8, [sp, #8]
    290c:	str	r1, [sp, #4]
    2910:	str	ip, [sp]
    2914:	bl	0 <read_bytes>
    2918:	cmp	r0, #0
    291c:	bge	2928 <read_GDR+0x74>
    2920:	mvn	r0, #0
    2924:	b	2cac <read_GDR+0x3f8>
    2928:	add	r0, sp, #48	; 0x30
    292c:	bl	27c <swap4>
    2930:	ldr	ip, [sp, #48]	; 0x30
    2934:	cmp	ip, #2
    2938:	beq	2958 <read_GDR+0xa4>
    293c:	movw	r0, #65236	; 0xfed4
    2940:	movt	r0, #65535	; 0xffff
    2944:	ldr	r1, [pc, #900]	; 2cd0 <read_GDR+0x41c>
    2948:	ldr	r2, [sp, #48]	; 0x30
    294c:	bl	0 <coda_set_error>
    2950:	mvn	r0, #0
    2954:	b	2cac <read_GDR+0x3f8>
    2958:	ldr	r0, [r4, #52]	; 0x34
    295c:	mov	r2, #0
    2960:	mov	r1, #12
    2964:	adds	lr, r5, r1
    2968:	adc	r3, r6, r2
    296c:	mov	r2, lr
    2970:	mov	r1, #0
    2974:	mov	ip, #8
    2978:	add	r7, sp, #64	; 0x40
    297c:	str	r7, [sp, #8]
    2980:	str	r1, [sp, #4]
    2984:	str	ip, [sp]
    2988:	bl	0 <read_bytes>
    298c:	cmp	r0, #0
    2990:	bge	299c <read_GDR+0xe8>
    2994:	mvn	r0, #0
    2998:	b	2cac <read_GDR+0x3f8>
    299c:	ldr	r0, [r4, #52]	; 0x34
    29a0:	mov	r3, #0
    29a4:	mov	r2, #20
    29a8:	adds	r2, r5, r2
    29ac:	adc	r3, r6, r3
    29b0:	mov	ip, #0
    29b4:	mov	r1, #8
    29b8:	add	r8, sp, #72	; 0x48
    29bc:	str	r8, [sp, #8]
    29c0:	str	ip, [sp, #4]
    29c4:	str	r1, [sp]
    29c8:	bl	0 <read_bytes>
    29cc:	cmp	r0, #0
    29d0:	bge	29dc <read_GDR+0x128>
    29d4:	mvn	r0, #0
    29d8:	b	2cac <read_GDR+0x3f8>
    29dc:	ldr	r0, [r4, #52]	; 0x34
    29e0:	mov	r2, #0
    29e4:	mov	r1, #28
    29e8:	adds	lr, r5, r1
    29ec:	adc	r3, r6, r2
    29f0:	mov	r2, lr
    29f4:	mov	r1, #0
    29f8:	mov	ip, #8
    29fc:	add	r8, sp, #80	; 0x50
    2a00:	str	r8, [sp, #8]
    2a04:	str	r1, [sp, #4]
    2a08:	str	ip, [sp]
    2a0c:	bl	0 <read_bytes>
    2a10:	cmp	r0, #0
    2a14:	bge	2a20 <read_GDR+0x16c>
    2a18:	mvn	r0, #0
    2a1c:	b	2cac <read_GDR+0x3f8>
    2a20:	ldr	r0, [r4, #52]	; 0x34
    2a24:	mov	r2, #0
    2a28:	mov	r1, #36	; 0x24
    2a2c:	adds	lr, r5, r1
    2a30:	adc	r3, r6, r2
    2a34:	mov	r2, lr
    2a38:	mov	r1, #0
    2a3c:	mov	ip, #8
    2a40:	add	r7, sp, #88	; 0x58
    2a44:	str	r7, [sp, #8]
    2a48:	str	r1, [sp, #4]
    2a4c:	str	ip, [sp]
    2a50:	bl	0 <read_bytes>
    2a54:	cmp	r0, #0
    2a58:	bge	2a64 <read_GDR+0x1b0>
    2a5c:	mvn	r0, #0
    2a60:	b	2cac <read_GDR+0x3f8>
    2a64:	ldr	r0, [r4, #52]	; 0x34
    2a68:	mov	ip, #0
    2a6c:	mov	r3, #44	; 0x2c
    2a70:	adds	r2, r5, r3
    2a74:	adc	r3, r6, ip
    2a78:	mov	ip, #0
    2a7c:	mov	r1, #4
    2a80:	add	r8, sp, #52	; 0x34
    2a84:	str	r8, [sp, #8]
    2a88:	str	ip, [sp, #4]
    2a8c:	str	r1, [sp]
    2a90:	bl	0 <read_bytes>
    2a94:	cmp	r0, #0
    2a98:	bge	2aa4 <read_GDR+0x1f0>
    2a9c:	mvn	r0, #0
    2aa0:	b	2cac <read_GDR+0x3f8>
    2aa4:	ldr	r0, [r4, #52]	; 0x34
    2aa8:	mov	r2, #0
    2aac:	mov	r1, #48	; 0x30
    2ab0:	adds	lr, r5, r1
    2ab4:	adc	r3, r6, r2
    2ab8:	mov	r2, lr
    2abc:	mov	r1, #0
    2ac0:	mov	ip, #4
    2ac4:	add	r8, sp, #56	; 0x38
    2ac8:	str	r8, [sp, #8]
    2acc:	str	r1, [sp, #4]
    2ad0:	str	ip, [sp]
    2ad4:	bl	0 <read_bytes>
    2ad8:	cmp	r0, #0
    2adc:	bge	2ae8 <read_GDR+0x234>
    2ae0:	mvn	r0, #0
    2ae4:	b	2cac <read_GDR+0x3f8>
    2ae8:	ldr	r0, [r4, #52]	; 0x34
    2aec:	mov	r2, #0
    2af0:	mov	r1, #56	; 0x38
    2af4:	adds	lr, r5, r1
    2af8:	adc	r3, r6, r2
    2afc:	mov	r2, lr
    2b00:	mov	r1, #0
    2b04:	mov	ip, #4
    2b08:	add	r8, r4, #80	; 0x50
    2b0c:	str	r8, [sp, #8]
    2b10:	str	r1, [sp, #4]
    2b14:	str	ip, [sp]
    2b18:	bl	0 <read_bytes>
    2b1c:	cmp	r0, #0
    2b20:	bge	2b2c <read_GDR+0x278>
    2b24:	mvn	r0, #0
    2b28:	b	2cac <read_GDR+0x3f8>
    2b2c:	ldr	r0, [r4, #52]	; 0x34
    2b30:	mov	r1, #0
    2b34:	mov	ip, #60	; 0x3c
    2b38:	adds	r2, r5, ip
    2b3c:	adc	r3, r6, r1
    2b40:	mov	r1, #0
    2b44:	mov	ip, #4
    2b48:	add	r6, sp, #60	; 0x3c
    2b4c:	str	r6, [sp, #8]
    2b50:	str	r1, [sp, #4]
    2b54:	str	ip, [sp]
    2b58:	bl	0 <read_bytes>
    2b5c:	cmp	r0, #0
    2b60:	bge	2b6c <read_GDR+0x2b8>
    2b64:	mvn	r0, #0
    2b68:	b	2cac <read_GDR+0x3f8>
    2b6c:	add	r0, sp, #64	; 0x40
    2b70:	bl	310 <swap8>
    2b74:	add	r0, sp, #72	; 0x48
    2b78:	bl	310 <swap8>
    2b7c:	add	r0, sp, #80	; 0x50
    2b80:	bl	310 <swap8>
    2b84:	add	r0, sp, #88	; 0x58
    2b88:	bl	310 <swap8>
    2b8c:	add	r0, sp, #52	; 0x34
    2b90:	bl	27c <swap4>
    2b94:	add	r0, sp, #56	; 0x38
    2b98:	bl	27c <swap4>
    2b9c:	add	r0, r4, #80	; 0x50
    2ba0:	bl	27c <swap4>
    2ba4:	add	r0, sp, #60	; 0x3c
    2ba8:	bl	27c <swap4>
    2bac:	ldr	r3, [sp, #88]	; 0x58
    2bb0:	ldr	ip, [sp, #92]	; 0x5c
    2bb4:	ldr	r0, [r4, #8]
    2bb8:	ldr	r2, [r4, #12]
    2bbc:	eor	r2, ip, r2
    2bc0:	eor	ip, r3, r0
    2bc4:	orr	r2, r2, ip
    2bc8:	cmp	r2, #0
    2bcc:	beq	2c10 <read_GDR+0x35c>
    2bd0:	ldr	r0, [sp, #88]	; 0x58
    2bd4:	ldr	r1, [sp, #92]	; 0x5c
    2bd8:	add	r2, sp, #96	; 0x60
    2bdc:	bl	0 <coda_str64>
    2be0:	ldr	r0, [r4, #8]
    2be4:	ldr	r1, [r4, #12]
    2be8:	add	r2, sp, #120	; 0x78
    2bec:	bl	0 <coda_str64>
    2bf0:	movw	r0, #65236	; 0xfed4
    2bf4:	movt	r0, #65535	; 0xffff
    2bf8:	ldr	r1, [pc, #204]	; 2ccc <read_GDR+0x418>
    2bfc:	add	r2, sp, #96	; 0x60
    2c00:	add	r3, sp, #120	; 0x78
    2c04:	bl	0 <coda_set_error>
    2c08:	mvn	r0, #0
    2c0c:	b	2cac <read_GDR+0x3f8>
    2c10:	ldr	r0, [sp, #64]	; 0x40
    2c14:	ldr	ip, [sp, #68]	; 0x44
    2c18:	orr	r1, ip, r0
    2c1c:	cmp	r1, #0
    2c20:	beq	2c4c <read_GDR+0x398>
    2c24:	ldr	r2, [sp, #64]	; 0x40
    2c28:	ldr	r3, [sp, #68]	; 0x44
    2c2c:	mov	r0, #0
    2c30:	str	r0, [sp]
    2c34:	mov	r0, r4
    2c38:	bl	1fdc <read_VDR>
    2c3c:	cmp	r0, #0
    2c40:	beq	2c4c <read_GDR+0x398>
    2c44:	mvn	r0, #0
    2c48:	b	2cac <read_GDR+0x3f8>
    2c4c:	ldr	r0, [sp, #72]	; 0x48
    2c50:	ldr	r1, [sp, #76]	; 0x4c
    2c54:	orr	ip, r1, r0
    2c58:	cmp	ip, #0
    2c5c:	beq	2c88 <read_GDR+0x3d4>
    2c60:	ldr	r2, [sp, #72]	; 0x48
    2c64:	ldr	r3, [sp, #76]	; 0x4c
    2c68:	mov	r0, #1
    2c6c:	str	r0, [sp]
    2c70:	mov	r0, r4
    2c74:	bl	1fdc <read_VDR>
    2c78:	cmp	r0, #0
    2c7c:	beq	2c88 <read_GDR+0x3d4>
    2c80:	mvn	r0, #0
    2c84:	b	2cac <read_GDR+0x3f8>
    2c88:	ldr	r2, [sp, #80]	; 0x50
    2c8c:	ldr	r3, [sp, #84]	; 0x54
    2c90:	mov	r0, r4
    2c94:	bl	10f0 <read_ADR>
    2c98:	cmp	r0, #0
    2c9c:	beq	2ca8 <read_GDR+0x3f4>
    2ca0:	mvn	r0, #0
    2ca4:	b	2cac <read_GDR+0x3f8>
    2ca8:	mov	r0, #0
    2cac:	ldr	r4, [sp, #24]
    2cb0:	ldr	r5, [sp, #28]
    2cb4:	ldr	r6, [sp, #32]
    2cb8:	ldr	r7, [sp, #36]	; 0x24
    2cbc:	ldr	r8, [sp, #40]	; 0x28
    2cc0:	ldr	lr, [sp, #16]
    2cc4:	add	sp, sp, #144	; 0x90
    2cc8:	bx	lr
    2ccc:	.word	0x000001e7
    2cd0:	.word	0x000005ec

00002cd4 <read_file>:
    2cd4:	mov	ip, sp
    2cd8:	sub	sp, sp, #64	; 0x40
    2cdc:	str	ip, [sp, #12]
    2ce0:	str	lr, [sp, #16]
    2ce4:	str	r4, [sp, #24]
    2ce8:	str	r5, [sp, #28]
    2cec:	str	r6, [sp, #32]
    2cf0:	mov	r4, r0
    2cf4:	ldr	r0, [r4, #52]	; 0x34
    2cf8:	mov	r3, #0
    2cfc:	mov	r2, #16
    2d00:	mov	ip, #0
    2d04:	mov	r1, #4
    2d08:	add	r6, sp, #40	; 0x28
    2d0c:	str	r6, [sp, #8]
    2d10:	str	ip, [sp, #4]
    2d14:	str	r1, [sp]
    2d18:	bl	0 <read_bytes>
    2d1c:	cmp	r0, #0
    2d20:	bge	2d2c <read_file+0x58>
    2d24:	mvn	r0, #0
    2d28:	b	3010 <read_file+0x33c>
    2d2c:	add	r0, sp, #40	; 0x28
    2d30:	bl	27c <swap4>
    2d34:	ldr	r2, [sp, #40]	; 0x28
    2d38:	cmp	r2, #1
    2d3c:	beq	2d5c <read_file+0x88>
    2d40:	movw	r0, #65236	; 0xfed4
    2d44:	movt	r0, #65535	; 0xffff
    2d48:	ldr	r1, [pc, #728]	; 3028 <read_file+0x354>
    2d4c:	ldr	r2, [sp, #40]	; 0x28
    2d50:	bl	0 <coda_set_error>
    2d54:	mvn	r0, #0
    2d58:	b	3010 <read_file+0x33c>
    2d5c:	ldr	r0, [r4, #52]	; 0x34
    2d60:	mov	r3, #0
    2d64:	mov	r2, #20
    2d68:	mov	ip, #0
    2d6c:	mov	r1, #8
    2d70:	add	r6, sp, #56	; 0x38
    2d74:	str	r6, [sp, #8]
    2d78:	str	ip, [sp, #4]
    2d7c:	str	r1, [sp]
    2d80:	bl	0 <read_bytes>
    2d84:	cmp	r0, #0
    2d88:	bge	2d94 <read_file+0xc0>
    2d8c:	mvn	r0, #0
    2d90:	b	3010 <read_file+0x33c>
    2d94:	ldr	r0, [r4, #52]	; 0x34
    2d98:	mov	r3, #0
    2d9c:	mov	r2, #28
    2da0:	mov	r1, #0
    2da4:	mov	ip, #4
    2da8:	add	r5, r4, #56	; 0x38
    2dac:	str	r5, [sp, #8]
    2db0:	str	r1, [sp, #4]
    2db4:	str	ip, [sp]
    2db8:	bl	0 <read_bytes>
    2dbc:	cmp	r0, #0
    2dc0:	bge	2dcc <read_file+0xf8>
    2dc4:	mvn	r0, #0
    2dc8:	b	3010 <read_file+0x33c>
    2dcc:	ldr	r0, [r4, #52]	; 0x34
    2dd0:	mov	r3, #0
    2dd4:	mov	r2, #32
    2dd8:	mov	r1, #0
    2ddc:	mov	ip, #4
    2de0:	add	r5, r4, #60	; 0x3c
    2de4:	str	r5, [sp, #8]
    2de8:	str	r1, [sp, #4]
    2dec:	str	ip, [sp]
    2df0:	bl	0 <read_bytes>
    2df4:	cmp	r0, #0
    2df8:	bge	2e04 <read_file+0x130>
    2dfc:	mvn	r0, #0
    2e00:	b	3010 <read_file+0x33c>
    2e04:	ldr	r0, [r4, #52]	; 0x34
    2e08:	mov	r3, #0
    2e0c:	mov	r2, #36	; 0x24
    2e10:	mov	ip, #0
    2e14:	mov	r1, #4
    2e18:	add	r5, sp, #44	; 0x2c
    2e1c:	str	r5, [sp, #8]
    2e20:	str	ip, [sp, #4]
    2e24:	str	r1, [sp]
    2e28:	bl	0 <read_bytes>
    2e2c:	cmp	r0, #0
    2e30:	bge	2e3c <read_file+0x168>
    2e34:	mvn	r0, #0
    2e38:	b	3010 <read_file+0x33c>
    2e3c:	ldr	r0, [r4, #52]	; 0x34
    2e40:	mov	r3, #0
    2e44:	mov	r2, #40	; 0x28
    2e48:	mov	r1, #0
    2e4c:	mov	ip, #4
    2e50:	add	r5, sp, #48	; 0x30
    2e54:	str	r5, [sp, #8]
    2e58:	str	r1, [sp, #4]
    2e5c:	str	ip, [sp]
    2e60:	bl	0 <read_bytes>
    2e64:	cmp	r0, #0
    2e68:	bge	2e74 <read_file+0x1a0>
    2e6c:	mvn	r0, #0
    2e70:	b	3010 <read_file+0x33c>
    2e74:	ldr	r0, [r4, #52]	; 0x34
    2e78:	mov	r3, #0
    2e7c:	mov	r2, #52	; 0x34
    2e80:	mov	r1, #0
    2e84:	mov	ip, #4
    2e88:	add	r5, r4, #64	; 0x40
    2e8c:	str	r5, [sp, #8]
    2e90:	str	r1, [sp, #4]
    2e94:	str	ip, [sp]
    2e98:	bl	0 <read_bytes>
    2e9c:	cmp	r0, #0
    2ea0:	bge	2eac <read_file+0x1d8>
    2ea4:	mvn	r0, #0
    2ea8:	b	3010 <read_file+0x33c>
    2eac:	add	r0, sp, #56	; 0x38
    2eb0:	bl	310 <swap8>
    2eb4:	add	r0, r4, #56	; 0x38
    2eb8:	bl	27c <swap4>
    2ebc:	add	r0, r4, #60	; 0x3c
    2ec0:	bl	27c <swap4>
    2ec4:	add	r0, sp, #44	; 0x2c
    2ec8:	bl	27c <swap4>
    2ecc:	add	r0, sp, #48	; 0x30
    2ed0:	bl	27c <swap4>
    2ed4:	add	r0, r4, #64	; 0x40
    2ed8:	bl	27c <swap4>
    2edc:	ldr	r2, [sp, #44]	; 0x2c
    2ee0:	sub	r0, r2, #1
    2ee4:	cmp	r0, #16
    2ee8:	bcs	2ffc <read_file+0x328>
    2eec:	add	pc, pc, r0, lsl #2
    2ef0:	nop	{0}
    2ef4:	b	2f34 <read_file+0x260>
    2ef8:	b	2f34 <read_file+0x260>
    2efc:	b	2fe8 <read_file+0x314>
    2f00:	b	2f40 <read_file+0x26c>
    2f04:	b	2f34 <read_file+0x260>
    2f08:	b	2f40 <read_file+0x26c>
    2f0c:	b	2f34 <read_file+0x260>
    2f10:	b	2ffc <read_file+0x328>
    2f14:	b	2f34 <read_file+0x260>
    2f18:	b	2ffc <read_file+0x328>
    2f1c:	b	2f34 <read_file+0x260>
    2f20:	b	2f34 <read_file+0x260>
    2f24:	b	2f40 <read_file+0x26c>
    2f28:	b	2fe8 <read_file+0x314>
    2f2c:	b	2fe8 <read_file+0x314>
    2f30:	b	2f40 <read_file+0x26c>
    2f34:	mov	r3, #0
    2f38:	str	r3, [r4, #68]	; 0x44
    2f3c:	b	2f48 <read_file+0x274>
    2f40:	mov	r0, #1
    2f44:	str	r0, [r4, #68]	; 0x44
    2f48:	ldr	ip, [sp, #48]	; 0x30
    2f4c:	and	r1, ip, #1
    2f50:	cmp	r1, #0
    2f54:	bne	2f64 <read_file+0x290>
    2f58:	mov	r3, #1
    2f5c:	str	r3, [r4, #72]	; 0x48
    2f60:	b	2f6c <read_file+0x298>
    2f64:	mov	r1, #0
    2f68:	str	r1, [r4, #72]	; 0x48
    2f6c:	ldr	r0, [sp, #48]	; 0x30
    2f70:	and	r2, r0, #2
    2f74:	cmp	r2, #0
    2f78:	bne	2f90 <read_file+0x2bc>
    2f7c:	mvn	r0, #199	; 0xc7
    2f80:	ldr	r1, [pc, #172]	; 3034 <read_file+0x360>
    2f84:	bl	0 <coda_set_error>
    2f88:	mvn	r0, #0
    2f8c:	b	3010 <read_file+0x33c>
    2f90:	ldr	ip, [sp, #48]	; 0x30
    2f94:	and	r3, ip, #4
    2f98:	cmp	r3, #0
    2f9c:	beq	2fb8 <read_file+0x2e4>
    2fa0:	ldr	r1, [sp, #48]	; 0x30
    2fa4:	and	r2, r1, #8
    2fa8:	cmp	r2, #0
    2fac:	movne	r1, #1
    2fb0:	moveq	r1, #0
    2fb4:	b	2fbc <read_file+0x2e8>
    2fb8:	mov	r1, #0
    2fbc:	str	r1, [r4, #76]	; 0x4c
    2fc0:	ldr	r2, [sp, #56]	; 0x38
    2fc4:	ldr	r3, [sp, #60]	; 0x3c
    2fc8:	mov	r0, r4
    2fcc:	bl	28b4 <read_GDR>
    2fd0:	cmp	r0, #0
    2fd4:	beq	2fe0 <read_file+0x30c>
    2fd8:	mvn	r0, #0
    2fdc:	b	3010 <read_file+0x33c>
    2fe0:	mov	r0, #0
    2fe4:	b	3010 <read_file+0x33c>
    2fe8:	mvn	r0, #199	; 0xc7
    2fec:	ldr	r1, [pc, #60]	; 3030 <read_file+0x35c>
    2ff0:	bl	0 <coda_set_error>
    2ff4:	mvn	r0, #0
    2ff8:	b	3010 <read_file+0x33c>
    2ffc:	mvn	r0, #199	; 0xc7
    3000:	ldr	r1, [pc, #36]	; 302c <read_file+0x358>
    3004:	ldr	r2, [sp, #44]	; 0x2c
    3008:	bl	0 <coda_set_error>
    300c:	mvn	r0, #0
    3010:	ldr	r4, [sp, #24]
    3014:	ldr	r5, [sp, #28]
    3018:	ldr	r6, [sp, #32]
    301c:	ldr	lr, [sp, #16]
    3020:	add	sp, sp, #64	; 0x40
    3024:	bx	lr
    3028:	.word	0x000000a2
    302c:	.word	0x0000015b
    3030:	.word	0x000003f4
    3034:	.word	0x0000062c

00003038 <coda_cdf_reopen>:
    3038:	mov	ip, sp
    303c:	sub	sp, sp, #48	; 0x30
    3040:	str	ip, [sp, #12]
    3044:	str	lr, [sp, #16]
    3048:	str	r4, [sp, #24]
    304c:	str	r5, [sp, #28]
    3050:	str	r6, [sp, #32]
    3054:	str	r7, [sp, #36]	; 0x24
    3058:	mov	r6, r0
    305c:	mov	r0, #120	; 0x78
    3060:	bl	0 <malloc>
    3064:	mov	r5, r0
    3068:	cmp	r5, #0
    306c:	bne	309c <coda_cdf_reopen+0x64>
    3070:	mvn	r0, #0
    3074:	ldr	r1, [pc, #656]	; 330c <coda_cdf_reopen+0x2d4>
    3078:	mov	r2, #120	; 0x78
    307c:	ldr	r3, [pc, #640]	; 3304 <coda_cdf_reopen+0x2cc>
    3080:	movw	r4, #1315	; 0x523
    3084:	str	r4, [sp]
    3088:	bl	0 <coda_set_error>
    308c:	ldr	r0, [r6]
    3090:	bl	0 <coda_close>
    3094:	mvn	r0, #0
    3098:	b	32e8 <coda_cdf_reopen+0x2b0>
    309c:	mov	r3, #0
    30a0:	str	r3, [r5]
    30a4:	ldr	r2, [r6]
    30a8:	ldr	ip, [r2, #8]
    30ac:	ldr	r0, [r2, #12]
    30b0:	str	ip, [r5, #8]
    30b4:	str	r0, [r5, #12]
    30b8:	mov	ip, #5
    30bc:	str	ip, [r5, #16]
    30c0:	mov	r0, #0
    30c4:	str	r0, [r5, #20]
    30c8:	mov	r1, #0
    30cc:	str	r1, [r5, #24]
    30d0:	mov	r1, #0
    30d4:	str	r1, [r5, #28]
    30d8:	mov	r3, #0
    30dc:	str	r3, [r5, #32]
    30e0:	mov	r1, #0
    30e4:	mov	r0, #0
    30e8:	str	r0, [r5, #40]	; 0x28
    30ec:	str	r1, [r5, #44]	; 0x2c
    30f0:	mov	r2, #0
    30f4:	str	r2, [r5, #48]	; 0x30
    30f8:	ldr	ip, [r6]
    30fc:	str	ip, [r5, #52]	; 0x34
    3100:	ldr	r3, [r6]
    3104:	ldr	r0, [r3]
    3108:	bl	0 <strdup>
    310c:	str	r0, [r5]
    3110:	ldr	r1, [r5]
    3114:	cmp	r1, #0
    3118:	bne	3140 <coda_cdf_reopen+0x108>
    311c:	mvn	r0, #0
    3120:	ldr	r1, [pc, #500]	; 331c <coda_cdf_reopen+0x2e4>
    3124:	ldr	r2, [pc, #472]	; 3304 <coda_cdf_reopen+0x2cc>
    3128:	movw	r3, #1335	; 0x537
    312c:	bl	0 <coda_set_error>
    3130:	mov	r0, r5
    3134:	bl	3320 <coda_cdf_close>
    3138:	mvn	r0, #0
    313c:	b	32e8 <coda_cdf_reopen+0x2b0>
    3140:	ldr	r0, [r5, #52]	; 0x34
    3144:	mov	r3, #0
    3148:	mov	r2, #0
    314c:	mov	r1, #0
    3150:	mov	ip, #8
    3154:	add	r7, sp, #40	; 0x28
    3158:	str	r7, [sp, #8]
    315c:	str	r1, [sp, #4]
    3160:	str	ip, [sp]
    3164:	bl	0 <read_bytes>
    3168:	cmp	r0, #0
    316c:	bge	3180 <coda_cdf_reopen+0x148>
    3170:	mov	r0, r5
    3174:	bl	3320 <coda_cdf_close>
    3178:	mvn	r0, #0
    317c:	b	32e8 <coda_cdf_reopen+0x2b0>
    3180:	add	r0, sp, #40	; 0x28
    3184:	bl	27c <swap4>
    3188:	add	r0, sp, #44	; 0x2c
    318c:	bl	27c <swap4>
    3190:	ldr	ip, [sp, #40]	; 0x28
    3194:	movw	lr, #65535	; 0xffff
    3198:	cmp	ip, lr
    319c:	beq	31bc <coda_cdf_reopen+0x184>
    31a0:	ldr	r0, [sp, #40]	; 0x28
    31a4:	movw	lr, #24578	; 0x6002
    31a8:	movt	lr, #52722	; 0xcdf2
    31ac:	cmp	r0, lr
    31b0:	moveq	r2, #1
    31b4:	movne	r2, #0
    31b8:	b	31c0 <coda_cdf_reopen+0x188>
    31bc:	mov	r2, #1
    31c0:	cmp	r2, #0
    31c4:	beq	31e4 <coda_cdf_reopen+0x1ac>
    31c8:	mvn	r0, #199	; 0xc7
    31cc:	ldr	r1, [pc, #324]	; 3318 <coda_cdf_reopen+0x2e0>
    31d0:	bl	0 <coda_set_error>
    31d4:	mov	r0, r5
    31d8:	bl	3320 <coda_cdf_close>
    31dc:	mvn	r0, #0
    31e0:	b	32e8 <coda_cdf_reopen+0x2b0>
    31e4:	ldr	r1, [sp, #44]	; 0x2c
    31e8:	movw	lr, #1
    31ec:	movt	lr, #52428	; 0xcccc
    31f0:	cmp	r1, lr
    31f4:	bne	3214 <coda_cdf_reopen+0x1dc>
    31f8:	mvn	r0, #199	; 0xc7
    31fc:	ldr	r1, [pc, #260]	; 3308 <coda_cdf_reopen+0x2d0>
    3200:	bl	0 <coda_set_error>
    3204:	mov	r0, r5
    3208:	bl	3320 <coda_cdf_close>
    320c:	mvn	r0, #0
    3210:	b	32e8 <coda_cdf_reopen+0x2b0>
    3214:	ldr	r3, [sp, #40]	; 0x28
    3218:	movw	lr, #1
    321c:	movt	lr, #52723	; 0xcdf3
    3220:	cmp	r3, lr
    3224:	bne	3240 <coda_cdf_reopen+0x208>
    3228:	ldr	r3, [sp, #44]	; 0x2c
    322c:	movw	lr, #65535	; 0xffff
    3230:	cmp	r3, lr
    3234:	moveq	r0, #1
    3238:	movne	r0, #0
    323c:	b	3244 <coda_cdf_reopen+0x20c>
    3240:	mov	r0, #0
    3244:	cmp	r0, #0
    3248:	bne	3260 <coda_cdf_reopen+0x228>
    324c:	ldr	r0, [pc, #188]	; 3310 <coda_cdf_reopen+0x2d8>
    3250:	ldr	r1, [pc, #172]	; 3304 <coda_cdf_reopen+0x2cc>
    3254:	movw	r2, #1362	; 0x552
    3258:	ldr	r3, [pc, #180]	; 3314 <coda_cdf_reopen+0x2dc>
    325c:	bl	0 <__assert_fail>
    3260:	mov	r0, #5
    3264:	bl	0 <coda_type_record_new>
    3268:	mov	r4, r0
    326c:	cmp	r4, #0
    3270:	bne	3284 <coda_cdf_reopen+0x24c>
    3274:	mov	r0, r5
    3278:	bl	3320 <coda_cdf_close>
    327c:	mvn	r0, #0
    3280:	b	32e8 <coda_cdf_reopen+0x2b0>
    3284:	mov	r1, #0
    3288:	mov	r0, r4
    328c:	bl	0 <coda_mem_record_new>
    3290:	str	r0, [r5, #20]
    3294:	ldr	r0, [r5, #20]
    3298:	cmp	r0, #0
    329c:	bne	32b8 <coda_cdf_reopen+0x280>
    32a0:	mov	r0, r5
    32a4:	bl	3320 <coda_cdf_close>
    32a8:	mov	r0, r4
    32ac:	bl	0 <coda_type_release>
    32b0:	mvn	r0, #0
    32b4:	b	32e8 <coda_cdf_reopen+0x2b0>
    32b8:	mov	r0, r4
    32bc:	bl	0 <coda_type_release>
    32c0:	mov	r0, r5
    32c4:	bl	2cd4 <read_file>
    32c8:	cmp	r0, #0
    32cc:	beq	32e0 <coda_cdf_reopen+0x2a8>
    32d0:	mov	r0, r5
    32d4:	bl	3320 <coda_cdf_close>
    32d8:	mvn	r0, #0
    32dc:	b	32e8 <coda_cdf_reopen+0x2b0>
    32e0:	str	r5, [r6]
    32e4:	mov	r0, #0
    32e8:	ldr	r4, [sp, #24]
    32ec:	ldr	r5, [sp, #28]
    32f0:	ldr	r6, [sp, #32]
    32f4:	ldr	r7, [sp, #36]	; 0x24
    32f8:	ldr	lr, [sp, #16]
    32fc:	add	sp, sp, #48	; 0x30
    3300:	bx	lr
    3304:	.word	0x0000067b
    3308:	.word	0x0000027c
    330c:	.word	0x00000739
    3310:	.word	0x000007e6
    3314:	.word	0x000008c7
    3318:	.word	0x00000128
    331c:	.word	0x00000817

00003320 <coda_cdf_close>:
    3320:	mov	ip, sp
    3324:	sub	sp, sp, #16
    3328:	str	ip, [sp]
    332c:	str	lr, [sp, #4]
    3330:	str	r4, [sp, #8]
    3334:	mov	r4, r0
    3338:	ldr	r0, [r4]
    333c:	cmp	r0, #0
    3340:	beq	334c <coda_cdf_close+0x2c>
    3344:	ldr	r0, [r4]
    3348:	bl	0 <free>
    334c:	ldr	r3, [r4, #20]
    3350:	cmp	r3, #0
    3354:	beq	3360 <coda_cdf_close+0x40>
    3358:	ldr	r0, [r4, #20]
    335c:	bl	0 <coda_dynamic_type_delete>
    3360:	ldr	r2, [r4, #48]	; 0x30
    3364:	cmp	r2, #0
    3368:	beq	3374 <coda_cdf_close+0x54>
    336c:	ldr	r0, [r4, #48]	; 0x30
    3370:	bl	0 <free>
    3374:	ldr	r1, [r4, #52]	; 0x34
    3378:	cmp	r1, #0
    337c:	beq	3388 <coda_cdf_close+0x68>
    3380:	ldr	r0, [r4, #52]	; 0x34
    3384:	bl	0 <coda_bin_close>
    3388:	mov	r0, r4
    338c:	bl	0 <free>
    3390:	mov	r0, #0
    3394:	ldr	r4, [sp, #8]
    3398:	ldr	lr, [sp, #4]
    339c:	add	sp, sp, #16
    33a0:	bx	lr
