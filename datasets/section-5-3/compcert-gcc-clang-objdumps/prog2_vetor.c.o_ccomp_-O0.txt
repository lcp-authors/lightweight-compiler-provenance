
../repos/prog2/CMakeFiles/MT1E1-1.1.dir/Extras/Miniteste1-Exemplo1/1/vetor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <vetor_novo>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	mov	r0, #12
  14:	bl	0 <malloc>
  18:	cmp	r0, #0
  1c:	bne	28 <vetor_novo+0x28>
  20:	mov	r0, #0
  24:	b	40 <vetor_novo+0x40>
  28:	mov	r1, #0
  2c:	str	r1, [r0]
  30:	mov	r2, #0
  34:	str	r2, [r0, #4]
  38:	mov	r1, #0
  3c:	str	r1, [r0, #8]
  40:	ldr	lr, [sp, #4]
  44:	add	sp, sp, #8
  48:	bx	lr

0000004c <vetor_apaga>:
  4c:	mov	ip, sp
  50:	sub	sp, sp, #16
  54:	str	ip, [sp]
  58:	str	lr, [sp, #4]
  5c:	str	r4, [sp, #8]
  60:	str	r5, [sp, #12]
  64:	mov	r4, r0
  68:	cmp	r4, #0
  6c:	beq	a4 <vetor_apaga+0x58>
  70:	mov	r5, #0
  74:	ldr	r1, [r4]
  78:	cmp	r5, r1
  7c:	bge	94 <vetor_apaga+0x48>
  80:	ldr	r0, [r4, #8]
  84:	ldr	r0, [r0, r5, lsl #2]
  88:	bl	0 <free>
  8c:	add	r5, r5, #1
  90:	b	74 <vetor_apaga+0x28>
  94:	ldr	r0, [r4, #8]
  98:	bl	0 <free>
  9c:	mov	r0, r4
  a0:	bl	0 <free>
  a4:	ldr	r4, [sp, #8]
  a8:	ldr	r5, [sp, #12]
  ac:	ldr	lr, [sp, #4]
  b0:	add	sp, sp, #16
  b4:	bx	lr

000000b8 <vetor_atribui>:
  b8:	mov	ip, sp
  bc:	sub	sp, sp, #24
  c0:	str	ip, [sp]
  c4:	str	lr, [sp, #4]
  c8:	str	r4, [sp, #8]
  cc:	str	r5, [sp, #12]
  d0:	str	r6, [sp, #16]
  d4:	str	r7, [sp, #20]
  d8:	mov	r6, r2
  dc:	mov	r5, r1
  e0:	mov	r7, r0
  e4:	cmp	r7, #0
  e8:	beq	fc <vetor_atribui+0x44>
  ec:	cmp	r5, #0
  f0:	movlt	r3, #1
  f4:	movge	r3, #0
  f8:	b	100 <vetor_atribui+0x48>
  fc:	mov	r3, #1
 100:	cmp	r3, #0
 104:	bne	11c <vetor_atribui+0x64>
 108:	ldr	r2, [r7]
 10c:	cmp	r5, r2
 110:	movge	r0, #1
 114:	movlt	r0, #0
 118:	b	120 <vetor_atribui+0x68>
 11c:	mov	r0, #1
 120:	cmp	r0, #0
 124:	beq	130 <vetor_atribui+0x78>
 128:	mvn	r0, #0
 12c:	b	194 <vetor_atribui+0xdc>
 130:	mov	r0, r6
 134:	bl	0 <strlen>
 138:	mov	r4, r0
 13c:	ldr	r1, [r7, #8]
 140:	ldr	r0, [r1, r5, lsl #2]
 144:	bl	0 <strlen>
 148:	cmp	r4, r0
 14c:	bls	180 <vetor_atribui+0xc8>
 150:	ldr	ip, [r7, #8]
 154:	ldr	r0, [ip, r5, lsl #2]
 158:	add	r1, r4, #1
 15c:	bl	0 <realloc>
 160:	ldr	r1, [r7, #8]
 164:	str	r0, [r1, r5, lsl #2]
 168:	ldr	r1, [r7, #8]
 16c:	ldr	r3, [r1, r5, lsl #2]
 170:	cmp	r3, #0
 174:	bne	180 <vetor_atribui+0xc8>
 178:	mvn	r0, #0
 17c:	b	194 <vetor_atribui+0xdc>
 180:	ldr	r0, [r7, #8]
 184:	ldr	r0, [r0, r5, lsl #2]
 188:	mov	r1, r6
 18c:	bl	0 <strcpy>
 190:	mov	r0, r5
 194:	ldr	r4, [sp, #8]
 198:	ldr	r5, [sp, #12]
 19c:	ldr	r6, [sp, #16]
 1a0:	ldr	r7, [sp, #20]
 1a4:	ldr	lr, [sp, #4]
 1a8:	add	sp, sp, #24
 1ac:	bx	lr

000001b0 <vetor_tamanho>:
 1b0:	mov	ip, sp
 1b4:	sub	sp, sp, #8
 1b8:	str	ip, [sp]
 1bc:	str	lr, [sp, #4]
 1c0:	cmp	r0, #0
 1c4:	bne	1d0 <vetor_tamanho+0x20>
 1c8:	mvn	r0, #0
 1cc:	b	1d4 <vetor_tamanho+0x24>
 1d0:	ldr	r0, [r0]
 1d4:	ldr	lr, [sp, #4]
 1d8:	add	sp, sp, #8
 1dc:	bx	lr

000001e0 <vetor_elemento>:
 1e0:	mov	ip, sp
 1e4:	sub	sp, sp, #8
 1e8:	str	ip, [sp]
 1ec:	str	lr, [sp, #4]
 1f0:	cmp	r0, #0
 1f4:	beq	208 <vetor_elemento+0x28>
 1f8:	cmp	r1, #0
 1fc:	movlt	r3, #1
 200:	movge	r3, #0
 204:	b	20c <vetor_elemento+0x2c>
 208:	mov	r3, #1
 20c:	cmp	r3, #0
 210:	bne	228 <vetor_elemento+0x48>
 214:	ldr	r2, [r0]
 218:	cmp	r1, r2
 21c:	movge	ip, #1
 220:	movlt	ip, #0
 224:	b	22c <vetor_elemento+0x4c>
 228:	mov	ip, #1
 22c:	cmp	ip, #0
 230:	beq	23c <vetor_elemento+0x5c>
 234:	mov	r0, #0
 238:	b	244 <vetor_elemento+0x64>
 23c:	ldr	r2, [r0, #8]
 240:	ldr	r0, [r2, r1, lsl #2]
 244:	ldr	lr, [sp, #4]
 248:	add	sp, sp, #8
 24c:	bx	lr

00000250 <vetor_insere>:
 250:	mov	ip, sp
 254:	sub	sp, sp, #24
 258:	str	ip, [sp]
 25c:	str	lr, [sp, #4]
 260:	str	r4, [sp, #8]
 264:	str	r5, [sp, #12]
 268:	str	r6, [sp, #16]
 26c:	str	r7, [sp, #20]
 270:	mov	r4, r2
 274:	mov	r5, r1
 278:	mov	r6, r0
 27c:	cmp	r6, #0
 280:	beq	294 <vetor_insere+0x44>
 284:	cmp	r4, #0
 288:	movlt	r2, #1
 28c:	movge	r2, #0
 290:	b	298 <vetor_insere+0x48>
 294:	mov	r2, #1
 298:	cmp	r2, #0
 29c:	bne	2b4 <vetor_insere+0x64>
 2a0:	ldr	r0, [r6]
 2a4:	cmp	r4, r0
 2a8:	movgt	r3, #1
 2ac:	movle	r3, #0
 2b0:	b	2b8 <vetor_insere+0x68>
 2b4:	mov	r3, #1
 2b8:	cmp	r3, #0
 2bc:	beq	2c8 <vetor_insere+0x78>
 2c0:	mvn	r0, #0
 2c4:	b	3b0 <vetor_insere+0x160>
 2c8:	ldr	r2, [r6]
 2cc:	ldr	r3, [r6, #4]
 2d0:	cmp	r2, r3
 2d4:	bne	324 <vetor_insere+0xd4>
 2d8:	ldr	r3, [r6, #4]
 2dc:	cmp	r3, #0
 2e0:	beq	2f4 <vetor_insere+0xa4>
 2e4:	ldr	ip, [r6, #4]
 2e8:	lsl	r3, ip, #1
 2ec:	str	r3, [r6, #4]
 2f0:	b	2fc <vetor_insere+0xac>
 2f4:	mov	r0, #1
 2f8:	str	r0, [r6, #4]
 2fc:	ldr	r0, [r6, #8]
 300:	ldr	r2, [r6, #4]
 304:	lsl	r1, r2, #2
 308:	bl	0 <realloc>
 30c:	str	r0, [r6, #8]
 310:	ldr	r2, [r6, #8]
 314:	cmp	r2, #0
 318:	bne	324 <vetor_insere+0xd4>
 31c:	mvn	r0, #0
 320:	b	3b0 <vetor_insere+0x160>
 324:	ldr	ip, [r6]
 328:	sub	r7, ip, #1
 32c:	cmp	r7, r4
 330:	blt	35c <vetor_insere+0x10c>
 334:	ldr	r2, [r6, #8]
 338:	lsl	r0, r7, #2
 33c:	add	r1, r2, r0
 340:	add	r0, r1, #4
 344:	ldr	r1, [r6, #8]
 348:	add	ip, r1, r7, lsl #2
 34c:	ldr	lr, [ip]
 350:	str	lr, [r0]
 354:	sub	r7, r7, #1
 358:	b	32c <vetor_insere+0xdc>
 35c:	mov	r0, r5
 360:	bl	0 <strlen>
 364:	add	r0, r0, #1
 368:	mov	r1, #1
 36c:	bl	0 <calloc>
 370:	ldr	ip, [r6, #8]
 374:	str	r0, [ip, r4, lsl #2]
 378:	ldr	r2, [r6, #8]
 37c:	ldr	r3, [r2, r4, lsl #2]
 380:	cmp	r3, #0
 384:	bne	390 <vetor_insere+0x140>
 388:	mvn	r0, #0
 38c:	b	3b0 <vetor_insere+0x160>
 390:	ldr	r1, [r6, #8]
 394:	ldr	r0, [r1, r4, lsl #2]
 398:	mov	r1, r5
 39c:	bl	0 <strcpy>
 3a0:	ldr	r1, [r6]
 3a4:	add	r1, r1, #1
 3a8:	str	r1, [r6]
 3ac:	mov	r0, r4
 3b0:	ldr	r4, [sp, #8]
 3b4:	ldr	r5, [sp, #12]
 3b8:	ldr	r6, [sp, #16]
 3bc:	ldr	r7, [sp, #20]
 3c0:	ldr	lr, [sp, #4]
 3c4:	add	sp, sp, #24
 3c8:	bx	lr

000003cc <vetor_remove>:
 3cc:	mov	ip, sp
 3d0:	sub	sp, sp, #16
 3d4:	str	ip, [sp]
 3d8:	str	lr, [sp, #4]
 3dc:	str	r4, [sp, #8]
 3e0:	str	r5, [sp, #12]
 3e4:	mov	r4, r1
 3e8:	mov	r5, r0
 3ec:	cmp	r5, #0
 3f0:	beq	404 <vetor_remove+0x38>
 3f4:	cmp	r4, #0
 3f8:	movlt	r0, #1
 3fc:	movge	r0, #0
 400:	b	408 <vetor_remove+0x3c>
 404:	mov	r0, #1
 408:	cmp	r0, #0
 40c:	bne	424 <vetor_remove+0x58>
 410:	ldr	r2, [r5]
 414:	cmp	r4, r2
 418:	movge	r2, #1
 41c:	movlt	r2, #0
 420:	b	428 <vetor_remove+0x5c>
 424:	mov	r2, #1
 428:	cmp	r2, #0
 42c:	beq	438 <vetor_remove+0x6c>
 430:	mvn	r0, #0
 434:	b	48c <vetor_remove+0xc0>
 438:	ldr	ip, [r5, #8]
 43c:	ldr	r0, [ip, r4, lsl #2]
 440:	bl	0 <free>
 444:	add	r4, r4, #1
 448:	ldr	r1, [r5]
 44c:	cmp	r4, r1
 450:	bge	47c <vetor_remove+0xb0>
 454:	ldr	r3, [r5, #8]
 458:	lsl	r1, r4, #2
 45c:	add	r2, r3, r1
 460:	sub	r0, r2, #4
 464:	ldr	r3, [r5, #8]
 468:	add	ip, r3, r4, lsl #2
 46c:	ldr	lr, [ip]
 470:	str	lr, [r0]
 474:	add	r4, r4, #1
 478:	b	448 <vetor_remove+0x7c>
 47c:	ldr	r1, [r5]
 480:	sub	r0, r1, #1
 484:	str	r0, [r5]
 488:	mov	r0, #0
 48c:	ldr	r4, [sp, #8]
 490:	ldr	r5, [sp, #12]
 494:	ldr	lr, [sp, #4]
 498:	add	sp, sp, #16
 49c:	bx	lr

000004a0 <vetor_pesquisa>:
 4a0:	mov	ip, sp
 4a4:	sub	sp, sp, #24
 4a8:	str	ip, [sp]
 4ac:	str	lr, [sp, #4]
 4b0:	str	r4, [sp, #8]
 4b4:	str	r5, [sp, #12]
 4b8:	str	r6, [sp, #16]
 4bc:	mov	r4, r1
 4c0:	mov	r5, r0
 4c4:	cmp	r5, #0
 4c8:	bne	4d4 <vetor_pesquisa+0x34>
 4cc:	mvn	r6, #0
 4d0:	b	508 <vetor_pesquisa+0x68>
 4d4:	mov	r6, #0
 4d8:	ldr	r1, [r5]
 4dc:	cmp	r6, r1
 4e0:	bge	504 <vetor_pesquisa+0x64>
 4e4:	ldr	r0, [r5, #8]
 4e8:	ldr	r0, [r0, r6, lsl #2]
 4ec:	mov	r1, r4
 4f0:	bl	0 <strcmp>
 4f4:	cmp	r0, #0
 4f8:	beq	508 <vetor_pesquisa+0x68>
 4fc:	add	r6, r6, #1
 500:	b	4d8 <vetor_pesquisa+0x38>
 504:	mvn	r6, #0
 508:	mov	r0, r6
 50c:	ldr	r4, [sp, #8]
 510:	ldr	r5, [sp, #12]
 514:	ldr	r6, [sp, #16]
 518:	ldr	lr, [sp, #4]
 51c:	add	sp, sp, #24
 520:	bx	lr

00000524 <vetor_ordena>:
 524:	mov	ip, sp
 528:	sub	sp, sp, #24
 52c:	str	ip, [sp]
 530:	str	lr, [sp, #4]
 534:	str	r4, [sp, #8]
 538:	str	r5, [sp, #12]
 53c:	str	r6, [sp, #16]
 540:	str	r7, [sp, #20]
 544:	mov	r6, r0
 548:	cmp	r6, #0
 54c:	bne	558 <vetor_ordena+0x34>
 550:	mvn	r0, #0
 554:	b	5f0 <vetor_ordena+0xcc>
 558:	mov	r4, #1
 55c:	ldr	r2, [r6]
 560:	cmp	r4, r2
 564:	bge	5ec <vetor_ordena+0xc8>
 568:	ldr	r2, [r6, #8]
 56c:	ldr	r7, [r2, r4, lsl #2]
 570:	mov	r5, r4
 574:	cmp	r5, #0
 578:	ble	5a8 <vetor_ordena+0x84>
 57c:	ldr	r3, [r6, #8]
 580:	lsl	r1, r5, #2
 584:	add	ip, r3, r1
 588:	sub	lr, ip, #4096	; 0x1000
 58c:	ldr	r1, [lr, #4092]	; 0xffc
 590:	mov	r0, r7
 594:	bl	0 <strcmp>
 598:	cmp	r0, #0
 59c:	movlt	r3, #1
 5a0:	movge	r3, #0
 5a4:	b	5ac <vetor_ordena+0x88>
 5a8:	mov	r3, #0
 5ac:	cmp	r3, #0
 5b0:	beq	5dc <vetor_ordena+0xb8>
 5b4:	ldr	r1, [r6, #8]
 5b8:	add	ip, r1, r5, lsl #2
 5bc:	ldr	r1, [r6, #8]
 5c0:	lsl	r0, r5, #2
 5c4:	add	r3, r1, r0
 5c8:	sub	r0, r3, #4
 5cc:	ldr	lr, [r0]
 5d0:	str	lr, [ip]
 5d4:	sub	r5, r5, #1
 5d8:	b	574 <vetor_ordena+0x50>
 5dc:	ldr	r2, [r6, #8]
 5e0:	str	r7, [r2, r5, lsl #2]
 5e4:	add	r4, r4, #1
 5e8:	b	55c <vetor_ordena+0x38>
 5ec:	mov	r0, #0
 5f0:	ldr	r4, [sp, #8]
 5f4:	ldr	r5, [sp, #12]
 5f8:	ldr	r6, [sp, #16]
 5fc:	ldr	r7, [sp, #20]
 600:	ldr	lr, [sp, #4]
 604:	add	sp, sp, #24
 608:	bx	lr
