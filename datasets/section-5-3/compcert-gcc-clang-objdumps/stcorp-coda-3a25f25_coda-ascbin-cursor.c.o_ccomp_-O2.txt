
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-ascbin-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_relative_field_bit_offset_by_index>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #576	; 0x240
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	str	r6, [sp, #16]
      1c:	str	r7, [sp, #20]
      20:	str	r8, [sp, #24]
      24:	str	r9, [sp, #28]
      28:	mov	r6, r2
      2c:	mov	r8, r1
      30:	mov	r7, r0
      34:	ldr	r1, [r7, #4]
      38:	lsl	ip, r1, #4
      3c:	add	r0, r7, ip
      40:	sub	lr, r0, #4096	; 0x1000
      44:	ldr	r4, [lr, #4088]	; 0xff8
      48:	ldr	r3, [r4, #52]	; 0x34
      4c:	ldr	r5, [r3, r8, lsl #2]
      50:	ldr	r2, [r5, #24]
      54:	ldr	r3, [r5, #28]
      58:	cmp	r3, #0
      5c:	blt	70 <get_relative_field_bit_offset_by_index+0x70>
      60:	str	r2, [r6]
      64:	str	r3, [r6, #4]
      68:	mov	r0, #0
      6c:	b	348 <get_relative_field_bit_offset_by_index+0x348>
      70:	ldr	r0, [r5, #32]
      74:	cmp	r0, #0
      78:	beq	12c <get_relative_field_bit_offset_by_index+0x12c>
      7c:	ldr	r0, [r5, #20]
      80:	cmp	r0, #0
      84:	beq	f4 <get_relative_field_bit_offset_by_index+0xf4>
      88:	add	r2, sp, #36	; 0x24
      8c:	mov	r1, r7
      90:	bl	0 <coda_expression_eval_bool>
      94:	cmp	r0, #0
      98:	beq	b4 <get_relative_field_bit_offset_by_index+0xb4>
      9c:	ldr	r0, [pc, #712]	; 36c <get_relative_field_bit_offset_by_index+0x36c>
      a0:	bl	0 <coda_add_error_message>
      a4:	mov	r0, r7
      a8:	bl	0 <coda_cursor_add_to_error_message>
      ac:	mvn	r0, #0
      b0:	b	348 <get_relative_field_bit_offset_by_index+0x348>
      b4:	ldr	ip, [sp, #36]	; 0x24
      b8:	cmp	ip, #0
      bc:	bne	f4 <get_relative_field_bit_offset_by_index+0xf4>
      c0:	cmp	r8, #0
      c4:	beq	dc <get_relative_field_bit_offset_by_index+0xdc>
      c8:	sub	r1, r8, #1
      cc:	mov	r2, r6
      d0:	mov	r0, r7
      d4:	bl	0 <get_relative_field_bit_offset_by_index>
      d8:	b	348 <get_relative_field_bit_offset_by_index+0x348>
      dc:	mov	r3, #0
      e0:	mov	r2, #0
      e4:	str	r2, [r6]
      e8:	str	r3, [r6, #4]
      ec:	mov	r0, #0
      f0:	b	348 <get_relative_field_bit_offset_by_index+0x348>
      f4:	ldr	r0, [r5, #32]
      f8:	mov	r2, r6
      fc:	mov	r1, r7
     100:	bl	0 <coda_expression_eval_integer>
     104:	cmp	r0, #0
     108:	beq	124 <get_relative_field_bit_offset_by_index+0x124>
     10c:	ldr	r0, [pc, #608]	; 374 <get_relative_field_bit_offset_by_index+0x374>
     110:	bl	0 <coda_add_error_message>
     114:	mov	r0, r7
     118:	bl	0 <coda_cursor_add_to_error_message>
     11c:	mvn	r0, #0
     120:	b	348 <get_relative_field_bit_offset_by_index+0x348>
     124:	mov	r0, #0
     128:	b	348 <get_relative_field_bit_offset_by_index+0x348>
     12c:	cmp	r8, #0
     130:	bne	148 <get_relative_field_bit_offset_by_index+0x148>
     134:	ldr	r0, [pc, #580]	; 380 <get_relative_field_bit_offset_by_index+0x380>
     138:	ldr	r1, [pc, #568]	; 378 <get_relative_field_bit_offset_by_index+0x378>
     13c:	mov	r2, #99	; 0x63
     140:	ldr	r3, [pc, #552]	; 370 <get_relative_field_bit_offset_by_index+0x370>
     144:	bl	0 <__assert_fail>
     148:	sub	r5, r8, #1
     14c:	ldr	r3, [r4, #52]	; 0x34
     150:	ldr	ip, [r3, r5, lsl #2]
     154:	ldr	r0, [ip, #24]
     158:	ldr	r3, [ip, #28]
     15c:	mvn	r1, r3
     160:	mvn	r0, r0
     164:	orr	r3, r1, r0
     168:	cmp	r3, #0
     16c:	bne	1a0 <get_relative_field_bit_offset_by_index+0x1a0>
     170:	ldr	r2, [ip, #32]
     174:	cmp	r2, #0
     178:	bne	1a0 <get_relative_field_bit_offset_by_index+0x1a0>
     17c:	sub	r5, r5, #1
     180:	cmp	r5, #0
     184:	bge	14c <get_relative_field_bit_offset_by_index+0x14c>
     188:	ldr	r0, [pc, #492]	; 37c <get_relative_field_bit_offset_by_index+0x37c>
     18c:	ldr	r1, [pc, #484]	; 378 <get_relative_field_bit_offset_by_index+0x378>
     190:	mov	r2, #110	; 0x6e
     194:	ldr	r3, [pc, #468]	; 370 <get_relative_field_bit_offset_by_index+0x370>
     198:	bl	0 <__assert_fail>
     19c:	b	14c <get_relative_field_bit_offset_by_index+0x14c>
     1a0:	add	r2, sp, #40	; 0x28
     1a4:	mov	r1, r5
     1a8:	mov	r0, r7
     1ac:	bl	0 <get_relative_field_bit_offset_by_index>
     1b0:	cmp	r0, #0
     1b4:	beq	1c0 <get_relative_field_bit_offset_by_index+0x1c0>
     1b8:	mvn	r0, #0
     1bc:	b	348 <get_relative_field_bit_offset_by_index+0x348>
     1c0:	mov	r2, r7
     1c4:	add	r3, sp, #56	; 0x38
     1c8:	mov	lr, #130	; 0x82
     1cc:	ldr	ip, [r2], #4
     1d0:	subs	lr, lr, #1
     1d4:	str	ip, [r3], #4
     1d8:	bne	1cc <get_relative_field_bit_offset_by_index+0x1cc>
     1dc:	ldr	r0, [sp, #60]	; 0x3c
     1e0:	add	r2, r0, #1
     1e4:	str	r2, [sp, #60]	; 0x3c
     1e8:	add	r1, sp, #64	; 0x40
     1ec:	lsl	ip, r2, #4
     1f0:	add	r9, r1, ip
     1f4:	ldr	ip, [r7, #4]
     1f8:	lsl	r0, ip, #4
     1fc:	add	r2, r7, r0
     200:	ldr	r0, [r2]
     204:	ldr	ip, [r2, #4]
     208:	ldr	r1, [sp, #40]	; 0x28
     20c:	ldr	r3, [sp, #44]	; 0x2c
     210:	adds	r0, r0, r1
     214:	adc	r2, ip, r3
     218:	sub	lr, r9, #4096	; 0x1000
     21c:	str	r0, [lr, #4088]	; 0xff8
     220:	sub	lr, r9, #4096	; 0x1000
     224:	str	r2, [lr, #4092]	; 0xffc
     228:	cmp	r5, r8
     22c:	bge	334 <get_relative_field_bit_offset_by_index+0x334>
     230:	mov	r1, #1
     234:	str	r1, [sp, #32]
     238:	ldr	r1, [r4, #52]	; 0x34
     23c:	ldr	ip, [r1, r5, lsl #2]
     240:	ldr	r0, [ip, #20]
     244:	cmp	r0, #0
     248:	beq	270 <get_relative_field_bit_offset_by_index+0x270>
     24c:	add	r2, sp, #32
     250:	mov	r1, r7
     254:	bl	0 <coda_expression_eval_bool>
     258:	cmp	r0, #0
     25c:	beq	270 <get_relative_field_bit_offset_by_index+0x270>
     260:	ldr	r0, [pc, #260]	; 36c <get_relative_field_bit_offset_by_index+0x36c>
     264:	bl	0 <coda_add_error_message>
     268:	mvn	r0, #0
     26c:	b	348 <get_relative_field_bit_offset_by_index+0x348>
     270:	ldr	r3, [sp, #32]
     274:	cmp	r3, #0
     278:	beq	32c <get_relative_field_bit_offset_by_index+0x32c>
     27c:	add	r1, sp, #64	; 0x40
     280:	ldr	ip, [sp, #60]	; 0x3c
     284:	lsl	r2, ip, #4
     288:	add	r0, r1, r2
     28c:	ldr	r1, [r4, #52]	; 0x34
     290:	ldr	r2, [r1, r5, lsl #2]
     294:	ldr	r1, [r2, #8]
     298:	sub	lr, r0, #4096	; 0x1000
     29c:	str	r1, [lr, #4080]	; 0xff0
     2a0:	add	r3, sp, #64	; 0x40
     2a4:	ldr	ip, [sp, #60]	; 0x3c
     2a8:	lsl	r2, ip, #4
     2ac:	add	r3, r3, r2
     2b0:	sub	lr, r3, #4096	; 0x1000
     2b4:	str	r5, [lr, #4084]	; 0xff4
     2b8:	add	r0, sp, #56	; 0x38
     2bc:	add	r1, sp, #48	; 0x30
     2c0:	bl	0 <coda_cursor_get_bit_size>
     2c4:	cmp	r0, #0
     2c8:	beq	2d4 <get_relative_field_bit_offset_by_index+0x2d4>
     2cc:	mvn	r0, #0
     2d0:	b	348 <get_relative_field_bit_offset_by_index+0x348>
     2d4:	ldr	r3, [sp, #40]	; 0x28
     2d8:	ldr	r2, [sp, #44]	; 0x2c
     2dc:	ldr	r0, [sp, #48]	; 0x30
     2e0:	ldr	r1, [sp, #52]	; 0x34
     2e4:	adds	r3, r3, r0
     2e8:	adc	r2, r2, r1
     2ec:	str	r3, [sp, #40]	; 0x28
     2f0:	str	r2, [sp, #44]	; 0x2c
     2f4:	add	r2, sp, #64	; 0x40
     2f8:	ldr	r3, [sp, #60]	; 0x3c
     2fc:	lsl	r3, r3, #4
     300:	add	r2, r2, r3
     304:	sub	lr, r2, #4096	; 0x1000
     308:	ldr	r3, [lr, #4088]	; 0xff8
     30c:	sub	lr, r2, #4096	; 0x1000
     310:	ldr	ip, [lr, #4092]	; 0xffc
     314:	adds	r3, r3, r0
     318:	adc	ip, ip, r1
     31c:	sub	lr, r2, #4096	; 0x1000
     320:	str	r3, [lr, #4088]	; 0xff8
     324:	sub	lr, r2, #4096	; 0x1000
     328:	str	ip, [lr, #4092]	; 0xffc
     32c:	add	r5, r5, #1
     330:	b	228 <get_relative_field_bit_offset_by_index+0x228>
     334:	ldr	ip, [sp, #40]	; 0x28
     338:	ldr	r0, [sp, #44]	; 0x2c
     33c:	str	ip, [r6]
     340:	str	r0, [r6, #4]
     344:	mov	r0, #0
     348:	ldr	r4, [sp, #8]
     34c:	ldr	r5, [sp, #12]
     350:	ldr	r6, [sp, #16]
     354:	ldr	r7, [sp, #20]
     358:	ldr	r8, [sp, #24]
     35c:	ldr	r9, [sp, #28]
     360:	ldr	lr, [sp, #4]
     364:	add	sp, sp, #576	; 0x240
     368:	bx	lr
     36c:	.word	0x00000316
     370:	.word	0x00000330
     374:	.word	0x00000062
     378:	.word	0x00000000
     37c:	.word	0x000000ef
     380:	.word	0x000002bf

00000384 <get_next_relative_field_bit_offset>:
     384:	mov	ip, sp
     388:	sub	sp, sp, #568	; 0x238
     38c:	str	ip, [sp]
     390:	str	lr, [sp, #4]
     394:	str	r4, [sp, #8]
     398:	str	r5, [sp, #12]
     39c:	str	r6, [sp, #16]
     3a0:	str	r7, [sp, #20]
     3a4:	str	r8, [sp, #24]
     3a8:	str	r9, [sp, #28]
     3ac:	mov	r4, r2
     3b0:	mov	r5, r1
     3b4:	mov	r6, r0
     3b8:	ldr	r2, [r6, #4]
     3bc:	lsl	r1, r2, #4
     3c0:	add	r0, r6, r1
     3c4:	sub	lr, r0, #4096	; 0x1000
     3c8:	ldr	r8, [lr, #4072]	; 0xfe8
     3cc:	sub	lr, r0, #4096	; 0x1000
     3d0:	ldr	r1, [lr, #4092]	; 0xffc
     3d4:	add	r7, r1, #1
     3d8:	ldr	r0, [r8, #48]	; 0x30
     3dc:	cmp	r7, r0
     3e0:	blt	3f8 <get_next_relative_field_bit_offset+0x74>
     3e4:	ldr	r0, [pc, #460]	; 5b8 <get_next_relative_field_bit_offset+0x234>
     3e8:	ldr	r1, [pc, #452]	; 5b4 <get_next_relative_field_bit_offset+0x230>
     3ec:	mov	r2, #161	; 0xa1
     3f0:	ldr	r3, [pc, #436]	; 5ac <get_next_relative_field_bit_offset+0x228>
     3f4:	bl	0 <__assert_fail>
     3f8:	ldr	r1, [r8, #52]	; 0x34
     3fc:	ldr	r8, [r1, r7, lsl #2]
     400:	ldr	r0, [r8, #24]
     404:	ldr	r1, [r8, #28]
     408:	cmp	r1, #0
     40c:	blt	438 <get_next_relative_field_bit_offset+0xb4>
     410:	str	r0, [r5]
     414:	str	r1, [r5, #4]
     418:	cmp	r4, #0
     41c:	beq	430 <get_next_relative_field_bit_offset+0xac>
     420:	mvn	ip, #0
     424:	mvn	r3, #0
     428:	str	r3, [r4]
     42c:	str	ip, [r4, #4]
     430:	mov	r0, #0
     434:	b	584 <get_next_relative_field_bit_offset+0x200>
     438:	ldr	r2, [r6, #4]
     43c:	lsl	r3, r2, #4
     440:	add	ip, r6, r3
     444:	ldr	r2, [ip]
     448:	ldr	r1, [ip, #4]
     44c:	sub	lr, ip, #4096	; 0x1000
     450:	ldr	r0, [lr, #4080]	; 0xff0
     454:	sub	lr, ip, #4096	; 0x1000
     458:	ldr	r3, [lr, #4084]	; 0xff4
     45c:	subs	r7, r2, r0
     460:	sbc	r9, r1, r3
     464:	ldr	r3, [r8, #32]
     468:	cmp	r3, #0
     46c:	beq	53c <get_next_relative_field_bit_offset+0x1b8>
     470:	mov	r2, r6
     474:	add	r3, sp, #48	; 0x30
     478:	mov	lr, #130	; 0x82
     47c:	ldr	ip, [r2], #4
     480:	subs	lr, lr, #1
     484:	str	ip, [r3], #4
     488:	bne	47c <get_next_relative_field_bit_offset+0xf8>
     48c:	ldr	r1, [sp, #52]	; 0x34
     490:	sub	r0, r1, #1
     494:	str	r0, [sp, #52]	; 0x34
     498:	cmp	r4, #0
     49c:	beq	4b0 <get_next_relative_field_bit_offset+0x12c>
     4a0:	mvn	r2, #0
     4a4:	mvn	r1, #0
     4a8:	str	r1, [r4]
     4ac:	str	r2, [r4, #4]
     4b0:	ldr	r0, [r8, #20]
     4b4:	cmp	r0, #0
     4b8:	beq	504 <get_next_relative_field_bit_offset+0x180>
     4bc:	add	r1, sp, #48	; 0x30
     4c0:	add	r2, sp, #32
     4c4:	bl	0 <coda_expression_eval_bool>
     4c8:	cmp	r0, #0
     4cc:	beq	4e8 <get_next_relative_field_bit_offset+0x164>
     4d0:	ldr	r0, [pc, #208]	; 5a8 <get_next_relative_field_bit_offset+0x224>
     4d4:	bl	0 <coda_add_error_message>
     4d8:	mov	r0, r6
     4dc:	bl	0 <coda_cursor_add_to_error_message>
     4e0:	mvn	r0, #0
     4e4:	b	584 <get_next_relative_field_bit_offset+0x200>
     4e8:	ldr	r1, [sp, #32]
     4ec:	cmp	r1, #0
     4f0:	bne	504 <get_next_relative_field_bit_offset+0x180>
     4f4:	str	r7, [r5]
     4f8:	str	r9, [r5, #4]
     4fc:	mov	r0, #0
     500:	b	584 <get_next_relative_field_bit_offset+0x200>
     504:	ldr	r0, [r8, #32]
     508:	add	r1, sp, #48	; 0x30
     50c:	mov	r2, r5
     510:	bl	0 <coda_expression_eval_integer>
     514:	cmp	r0, #0
     518:	beq	534 <get_next_relative_field_bit_offset+0x1b0>
     51c:	ldr	r0, [pc, #140]	; 5b0 <get_next_relative_field_bit_offset+0x22c>
     520:	bl	0 <coda_add_error_message>
     524:	mov	r0, r6
     528:	bl	0 <coda_cursor_add_to_error_message>
     52c:	mvn	r0, #0
     530:	b	584 <get_next_relative_field_bit_offset+0x200>
     534:	mov	r0, #0
     538:	b	584 <get_next_relative_field_bit_offset+0x200>
     53c:	add	r1, sp, #40	; 0x28
     540:	mov	r0, r6
     544:	bl	0 <coda_cursor_get_bit_size>
     548:	cmp	r0, #0
     54c:	beq	558 <get_next_relative_field_bit_offset+0x1d4>
     550:	mvn	r0, #0
     554:	b	584 <get_next_relative_field_bit_offset+0x200>
     558:	ldr	r2, [sp, #40]	; 0x28
     55c:	ldr	r3, [sp, #44]	; 0x2c
     560:	adds	ip, r7, r2
     564:	adc	r0, r9, r3
     568:	str	ip, [r5]
     56c:	str	r0, [r5, #4]
     570:	cmp	r4, #0
     574:	beq	580 <get_next_relative_field_bit_offset+0x1fc>
     578:	str	r2, [r4]
     57c:	str	r3, [r4, #4]
     580:	mov	r0, #0
     584:	ldr	r4, [sp, #8]
     588:	ldr	r5, [sp, #12]
     58c:	ldr	r6, [sp, #16]
     590:	ldr	r7, [sp, #20]
     594:	ldr	r8, [sp, #24]
     598:	ldr	r9, [sp, #28]
     59c:	ldr	lr, [sp, #4]
     5a0:	add	sp, sp, #568	; 0x238
     5a4:	bx	lr
     5a8:	.word	0x00000316
     5ac:	.word	0x00000357
     5b0:	.word	0x00000062
     5b4:	.word	0x00000000
     5b8:	.word	0x00000111

000005bc <coda_ascbin_cursor_set_product>:
     5bc:	mov	ip, sp
     5c0:	sub	sp, sp, #16
     5c4:	str	ip, [sp]
     5c8:	str	lr, [sp, #4]
     5cc:	str	r4, [sp, #8]
     5d0:	str	r5, [sp, #12]
     5d4:	mov	r4, r1
     5d8:	mov	r5, r0
     5dc:	str	r4, [r5]
     5e0:	mov	r3, #1
     5e4:	str	r3, [r5, #4]
     5e8:	ldr	r2, [r4, #20]
     5ec:	cmp	r2, #0
     5f0:	bne	608 <coda_ascbin_cursor_set_product+0x4c>
     5f4:	ldr	r0, [pc, #76]	; 648 <coda_ascbin_cursor_set_product+0x8c>
     5f8:	ldr	r1, [pc, #68]	; 644 <coda_ascbin_cursor_set_product+0x88>
     5fc:	mov	r2, #234	; 0xea
     600:	ldr	r3, [pc, #56]	; 640 <coda_ascbin_cursor_set_product+0x84>
     604:	bl	0 <__assert_fail>
     608:	ldr	r0, [r4, #20]
     60c:	str	r0, [r5, #8]
     610:	mvn	ip, #0
     614:	str	ip, [r5, #12]
     618:	mov	r1, #0
     61c:	mov	r0, #0
     620:	str	r0, [r5, #16]
     624:	str	r1, [r5, #20]
     628:	mov	r0, #0
     62c:	ldr	r4, [sp, #8]
     630:	ldr	r5, [sp, #12]
     634:	ldr	lr, [sp, #4]
     638:	add	sp, sp, #16
     63c:	bx	lr
     640:	.word	0x0000037a
     644:	.word	0x00000000
     648:	.word	0x0000017c

0000064c <coda_ascbin_cursor_goto_record_field_by_index>:
     64c:	mov	ip, sp
     650:	sub	sp, sp, #48	; 0x30
     654:	str	ip, [sp]
     658:	str	lr, [sp, #4]
     65c:	str	r4, [sp, #8]
     660:	str	r5, [sp, #12]
     664:	str	r6, [sp, #16]
     668:	str	r7, [sp, #20]
     66c:	str	r8, [sp, #24]
     670:	mov	r5, r1
     674:	mov	r4, r0
     678:	mov	r2, #1
     67c:	str	r2, [sp, #32]
     680:	ldr	r2, [r4, #4]
     684:	lsl	r2, r2, #4
     688:	add	r3, r4, r2
     68c:	sub	lr, r3, #4096	; 0x1000
     690:	ldr	r8, [lr, #4088]	; 0xff8
     694:	ldr	ip, [r8]
     698:	cmp	ip, #100	; 0x64
     69c:	blt	6a4 <coda_ascbin_cursor_goto_record_field_by_index+0x58>
     6a0:	ldr	r8, [r8, #4]
     6a4:	cmp	r5, #0
     6a8:	blt	7fc <coda_ascbin_cursor_goto_record_field_by_index+0x1b0>
     6ac:	ldr	r1, [r8, #48]	; 0x30
     6b0:	cmp	r5, r1
     6b4:	bge	7fc <coda_ascbin_cursor_goto_record_field_by_index+0x1b0>
     6b8:	ldr	r2, [r4, #4]
     6bc:	lsl	r0, r2, #4
     6c0:	add	r0, r4, r0
     6c4:	ldr	r7, [r0]
     6c8:	ldr	r6, [r0, #4]
     6cc:	ldr	ip, [r8, #68]	; 0x44
     6d0:	cmp	ip, #0
     6d4:	bne	748 <coda_ascbin_cursor_goto_record_field_by_index+0xfc>
     6d8:	add	r2, sp, #40	; 0x28
     6dc:	mov	r1, r5
     6e0:	mov	r0, r4
     6e4:	bl	0 <get_relative_field_bit_offset_by_index>
     6e8:	cmp	r0, #0
     6ec:	beq	6f8 <coda_ascbin_cursor_goto_record_field_by_index+0xac>
     6f0:	mvn	r0, #0
     6f4:	b	814 <coda_ascbin_cursor_goto_record_field_by_index+0x1c8>
     6f8:	ldr	r1, [sp, #40]	; 0x28
     6fc:	ldr	r0, [sp, #44]	; 0x2c
     700:	adds	r7, r7, r1
     704:	adc	r6, r6, r0
     708:	ldr	r3, [r8, #52]	; 0x34
     70c:	ldr	r3, [r3, r5, lsl #2]
     710:	ldr	r0, [r3, #20]
     714:	cmp	r0, #0
     718:	beq	778 <coda_ascbin_cursor_goto_record_field_by_index+0x12c>
     71c:	add	r2, sp, #32
     720:	mov	r1, r4
     724:	bl	0 <coda_expression_eval_bool>
     728:	cmp	r0, #0
     72c:	beq	778 <coda_ascbin_cursor_goto_record_field_by_index+0x12c>
     730:	ldr	r0, [pc, #252]	; 834 <coda_ascbin_cursor_goto_record_field_by_index+0x1e8>
     734:	bl	0 <coda_add_error_message>
     738:	mov	r0, r4
     73c:	bl	0 <coda_cursor_add_to_error_message>
     740:	mvn	r0, #0
     744:	b	814 <coda_ascbin_cursor_goto_record_field_by_index+0x1c8>
     748:	add	r1, sp, #36	; 0x24
     74c:	mov	r0, r4
     750:	bl	0 <coda_cursor_get_available_union_field_index>
     754:	cmp	r0, #0
     758:	beq	764 <coda_ascbin_cursor_goto_record_field_by_index+0x118>
     75c:	mvn	r0, #0
     760:	b	814 <coda_ascbin_cursor_goto_record_field_by_index+0x1c8>
     764:	ldr	ip, [sp, #36]	; 0x24
     768:	cmp	r5, ip
     76c:	beq	778 <coda_ascbin_cursor_goto_record_field_by_index+0x12c>
     770:	mov	r1, #0
     774:	str	r1, [sp, #32]
     778:	ldr	ip, [r4, #4]
     77c:	add	r0, ip, #1
     780:	str	r0, [r4, #4]
     784:	ldr	r1, [sp, #32]
     788:	cmp	r1, #0
     78c:	bne	7b0 <coda_ascbin_cursor_goto_record_field_by_index+0x164>
     790:	ldr	r0, [r8]
     794:	bl	0 <coda_no_data_singleton>
     798:	ldr	r3, [r4, #4]
     79c:	lsl	r2, r3, #4
     7a0:	add	ip, r4, r2
     7a4:	sub	lr, ip, #4096	; 0x1000
     7a8:	str	r0, [lr, #4088]	; 0xff8
     7ac:	b	7cc <coda_ascbin_cursor_goto_record_field_by_index+0x180>
     7b0:	lsl	r1, r0, #4
     7b4:	add	r1, r4, r1
     7b8:	ldr	r3, [r8, #52]	; 0x34
     7bc:	ldr	ip, [r3, r5, lsl #2]
     7c0:	ldr	r2, [ip, #8]
     7c4:	sub	lr, r1, #4096	; 0x1000
     7c8:	str	r2, [lr, #4088]	; 0xff8
     7cc:	ldr	r0, [r4, #4]
     7d0:	lsl	r3, r0, #4
     7d4:	add	r2, r4, r3
     7d8:	sub	lr, r2, #4096	; 0x1000
     7dc:	str	r5, [lr, #4092]	; 0xffc
     7e0:	ldr	r1, [r4, #4]
     7e4:	lsl	ip, r1, #4
     7e8:	add	r0, r4, ip
     7ec:	str	r7, [r0]
     7f0:	str	r6, [r0, #4]
     7f4:	mov	r0, #0
     7f8:	b	814 <coda_ascbin_cursor_goto_record_field_by_index+0x1c8>
     7fc:	mvn	r0, #100	; 0x64
     800:	ldr	r1, [pc, #48]	; 838 <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     804:	ldr	r3, [r8, #48]	; 0x30
     808:	mov	r2, r5
     80c:	bl	0 <coda_set_error>
     810:	mvn	r0, #0
     814:	ldr	r4, [sp, #8]
     818:	ldr	r5, [sp, #12]
     81c:	ldr	r6, [sp, #16]
     820:	ldr	r7, [sp, #20]
     824:	ldr	r8, [sp, #24]
     828:	ldr	lr, [sp, #4]
     82c:	add	sp, sp, #48	; 0x30
     830:	bx	lr
     834:	.word	0x00000316
     838:	.word	0x0000014e

0000083c <coda_ascbin_cursor_goto_next_record_field>:
     83c:	mov	ip, sp
     840:	sub	sp, sp, #1088	; 0x440
     844:	str	ip, [sp]
     848:	str	lr, [sp, #4]
     84c:	str	r4, [sp, #8]
     850:	str	r5, [sp, #12]
     854:	str	r6, [sp, #16]
     858:	str	r7, [sp, #20]
     85c:	str	r8, [sp, #24]
     860:	mov	r4, r0
     864:	mov	r0, #1
     868:	str	r0, [sp, #32]
     86c:	ldr	r0, [r4, #4]
     870:	lsl	r1, r0, #4
     874:	add	r3, r4, r1
     878:	sub	lr, r3, #4096	; 0x1000
     87c:	ldr	r8, [lr, #4072]	; 0xfe8
     880:	ldr	r1, [r8]
     884:	cmp	r1, #100	; 0x64
     888:	blt	890 <coda_ascbin_cursor_goto_next_record_field+0x54>
     88c:	ldr	r8, [r8, #4]
     890:	ldr	r2, [r4, #4]
     894:	lsl	ip, r2, #4
     898:	add	r0, r4, ip
     89c:	sub	lr, r0, #4096	; 0x1000
     8a0:	ldr	r3, [lr, #4092]	; 0xffc
     8a4:	add	r7, r3, #1
     8a8:	cmp	r7, #0
     8ac:	blt	a4c <coda_ascbin_cursor_goto_next_record_field+0x210>
     8b0:	ldr	ip, [r8, #48]	; 0x30
     8b4:	cmp	r7, ip
     8b8:	bge	a4c <coda_ascbin_cursor_goto_next_record_field+0x210>
     8bc:	sub	lr, r0, #4096	; 0x1000
     8c0:	ldr	r5, [lr, #4080]	; 0xff0
     8c4:	sub	lr, r0, #4096	; 0x1000
     8c8:	ldr	r6, [lr, #4084]	; 0xff4
     8cc:	ldr	r0, [r8, #68]	; 0x44
     8d0:	cmp	r0, #0
     8d4:	bne	978 <coda_ascbin_cursor_goto_next_record_field+0x13c>
     8d8:	add	r1, sp, #40	; 0x28
     8dc:	mov	r2, #0
     8e0:	mov	r0, r4
     8e4:	bl	384 <get_next_relative_field_bit_offset>
     8e8:	cmp	r0, #0
     8ec:	beq	8f8 <coda_ascbin_cursor_goto_next_record_field+0xbc>
     8f0:	mvn	r0, #0
     8f4:	b	a64 <coda_ascbin_cursor_goto_next_record_field+0x228>
     8f8:	ldr	r3, [sp, #40]	; 0x28
     8fc:	ldr	r0, [sp, #44]	; 0x2c
     900:	adds	r5, r5, r3
     904:	adc	r6, r6, r0
     908:	ldr	r1, [r8, #52]	; 0x34
     90c:	ldr	r0, [r1, r7, lsl #2]
     910:	ldr	r2, [r0, #20]
     914:	cmp	r2, #0
     918:	beq	9d0 <coda_ascbin_cursor_goto_next_record_field+0x194>
     91c:	mov	r2, r4
     920:	add	r3, sp, #48	; 0x30
     924:	mov	lr, #130	; 0x82
     928:	ldr	ip, [r2], #4
     92c:	subs	lr, lr, #1
     930:	str	ip, [r3], #4
     934:	bne	928 <coda_ascbin_cursor_goto_next_record_field+0xec>
     938:	ldr	r2, [sp, #52]	; 0x34
     93c:	sub	r3, r2, #1
     940:	str	r3, [sp, #52]	; 0x34
     944:	ldr	r2, [r1, r7, lsl #2]
     948:	ldr	r0, [r2, #20]
     94c:	add	r1, sp, #48	; 0x30
     950:	add	r2, sp, #32
     954:	bl	0 <coda_expression_eval_bool>
     958:	cmp	r0, #0
     95c:	beq	9d0 <coda_ascbin_cursor_goto_next_record_field+0x194>
     960:	ldr	r0, [pc, #284]	; a84 <coda_ascbin_cursor_goto_next_record_field+0x248>
     964:	bl	0 <coda_add_error_message>
     968:	mov	r0, r4
     96c:	bl	0 <coda_cursor_add_to_error_message>
     970:	mvn	r0, #0
     974:	b	a64 <coda_ascbin_cursor_goto_next_record_field+0x228>
     978:	mov	r2, r4
     97c:	add	r3, sp, #568	; 0x238
     980:	mov	lr, #130	; 0x82
     984:	ldr	ip, [r2], #4
     988:	subs	lr, lr, #1
     98c:	str	ip, [r3], #4
     990:	bne	984 <coda_ascbin_cursor_goto_next_record_field+0x148>
     994:	ldr	r0, [sp, #572]	; 0x23c
     998:	sub	ip, r0, #1
     99c:	str	ip, [sp, #572]	; 0x23c
     9a0:	add	r0, sp, #568	; 0x238
     9a4:	add	r1, sp, #36	; 0x24
     9a8:	bl	0 <coda_cursor_get_available_union_field_index>
     9ac:	cmp	r0, #0
     9b0:	beq	9bc <coda_ascbin_cursor_goto_next_record_field+0x180>
     9b4:	mvn	r0, #0
     9b8:	b	a64 <coda_ascbin_cursor_goto_next_record_field+0x228>
     9bc:	ldr	r2, [sp, #36]	; 0x24
     9c0:	cmp	r7, r2
     9c4:	beq	9d0 <coda_ascbin_cursor_goto_next_record_field+0x194>
     9c8:	mov	r0, #0
     9cc:	str	r0, [sp, #32]
     9d0:	ldr	r2, [sp, #32]
     9d4:	cmp	r2, #0
     9d8:	bne	9fc <coda_ascbin_cursor_goto_next_record_field+0x1c0>
     9dc:	ldr	r0, [r8]
     9e0:	bl	0 <coda_no_data_singleton>
     9e4:	ldr	r2, [r4, #4]
     9e8:	lsl	r1, r2, #4
     9ec:	add	ip, r4, r1
     9f0:	sub	lr, ip, #4096	; 0x1000
     9f4:	str	r0, [lr, #4088]	; 0xff8
     9f8:	b	a1c <coda_ascbin_cursor_goto_next_record_field+0x1e0>
     9fc:	ldr	r0, [r4, #4]
     a00:	lsl	r1, r0, #4
     a04:	add	ip, r4, r1
     a08:	ldr	r3, [r8, #52]	; 0x34
     a0c:	ldr	r3, [r3, r7, lsl #2]
     a10:	ldr	r0, [r3, #8]
     a14:	sub	lr, ip, #4096	; 0x1000
     a18:	str	r0, [lr, #4088]	; 0xff8
     a1c:	ldr	r1, [r4, #4]
     a20:	lsl	ip, r1, #4
     a24:	add	r1, r4, ip
     a28:	sub	lr, r1, #4096	; 0x1000
     a2c:	str	r7, [lr, #4092]	; 0xffc
     a30:	ldr	ip, [r4, #4]
     a34:	lsl	r1, ip, #4
     a38:	add	r1, r4, r1
     a3c:	str	r5, [r1]
     a40:	str	r6, [r1, #4]
     a44:	mov	r0, #0
     a48:	b	a64 <coda_ascbin_cursor_goto_next_record_field+0x228>
     a4c:	mvn	r0, #100	; 0x64
     a50:	ldr	r1, [pc, #48]	; a88 <coda_ascbin_cursor_goto_next_record_field+0x24c>
     a54:	ldr	r3, [r8, #48]	; 0x30
     a58:	mov	r2, r7
     a5c:	bl	0 <coda_set_error>
     a60:	mvn	r0, #0
     a64:	ldr	r4, [sp, #8]
     a68:	ldr	r5, [sp, #12]
     a6c:	ldr	r6, [sp, #16]
     a70:	ldr	r7, [sp, #20]
     a74:	ldr	r8, [sp, #24]
     a78:	ldr	lr, [sp, #4]
     a7c:	add	sp, sp, #1088	; 0x440
     a80:	bx	lr
     a84:	.word	0x00000316
     a88:	.word	0x0000014e

00000a8c <coda_ascbin_cursor_goto_available_union_field>:
     a8c:	mov	ip, sp
     a90:	sub	sp, sp, #24
     a94:	str	ip, [sp]
     a98:	str	lr, [sp, #4]
     a9c:	str	r4, [sp, #8]
     aa0:	str	r5, [sp, #12]
     aa4:	mov	r5, r0
     aa8:	ldr	r3, [r5, #4]
     aac:	lsl	r3, r3, #4
     ab0:	add	ip, r5, r3
     ab4:	sub	lr, ip, #4096	; 0x1000
     ab8:	ldr	r4, [lr, #4088]	; 0xff8
     abc:	ldr	r0, [r4]
     ac0:	cmp	r0, #100	; 0x64
     ac4:	blt	acc <coda_ascbin_cursor_goto_available_union_field+0x40>
     ac8:	ldr	r4, [r4, #4]
     acc:	ldr	ip, [r4, #68]	; 0x44
     ad0:	cmp	ip, #0
     ad4:	bne	aec <coda_ascbin_cursor_goto_available_union_field+0x60>
     ad8:	mvn	r0, #104	; 0x68
     adc:	ldr	r1, [pc, #164]	; b88 <coda_ascbin_cursor_goto_available_union_field+0xfc>
     ae0:	bl	0 <coda_set_error>
     ae4:	mvn	r0, #0
     ae8:	b	b74 <coda_ascbin_cursor_goto_available_union_field+0xe8>
     aec:	add	r1, sp, #16
     af0:	mov	r0, r5
     af4:	bl	1ad4 <coda_ascbin_cursor_get_available_union_field_index>
     af8:	cmp	r0, #0
     afc:	beq	b08 <coda_ascbin_cursor_goto_available_union_field+0x7c>
     b00:	mvn	r0, #0
     b04:	b	b74 <coda_ascbin_cursor_goto_available_union_field+0xe8>
     b08:	ldr	r2, [r5, #4]
     b0c:	add	r1, r2, #1
     b10:	str	r1, [r5, #4]
     b14:	lsl	r3, r1, #4
     b18:	add	r1, r5, r3
     b1c:	ldr	r0, [r4, #52]	; 0x34
     b20:	ldr	r2, [sp, #16]
     b24:	ldr	r2, [r0, r2, lsl #2]
     b28:	ldr	r2, [r2, #8]
     b2c:	sub	lr, r1, #4096	; 0x1000
     b30:	str	r2, [lr, #4088]	; 0xff8
     b34:	ldr	ip, [r5, #4]
     b38:	lsl	r0, ip, #4
     b3c:	add	r2, r5, r0
     b40:	ldr	r3, [sp, #16]
     b44:	sub	lr, r2, #4096	; 0x1000
     b48:	str	r3, [lr, #4092]	; 0xffc
     b4c:	ldr	r1, [r5, #4]
     b50:	lsl	ip, r1, #4
     b54:	add	r0, r5, ip
     b58:	sub	lr, r0, #4096	; 0x1000
     b5c:	ldr	r3, [lr, #4080]	; 0xff0
     b60:	sub	lr, r0, #4096	; 0x1000
     b64:	ldr	r1, [lr, #4084]	; 0xff4
     b68:	str	r3, [r0]
     b6c:	str	r1, [r0, #4]
     b70:	mov	r0, #0
     b74:	ldr	r4, [sp, #8]
     b78:	ldr	r5, [sp, #12]
     b7c:	ldr	lr, [sp, #4]
     b80:	add	sp, sp, #24
     b84:	bx	lr
     b88:	.word	0x000000a0

00000b8c <coda_ascbin_cursor_goto_array_element>:
     b8c:	mov	ip, sp
     b90:	sub	sp, sp, #56	; 0x38
     b94:	str	ip, [sp]
     b98:	str	lr, [sp, #4]
     b9c:	str	r4, [sp, #8]
     ba0:	str	r5, [sp, #12]
     ba4:	str	r6, [sp, #16]
     ba8:	str	r7, [sp, #20]
     bac:	str	r8, [sp, #24]
     bb0:	str	r9, [sp, #28]
     bb4:	str	sl, [sp, #32]
     bb8:	mov	r5, r2
     bbc:	mov	r2, r1
     bc0:	mov	r6, r0
     bc4:	ldr	ip, [r6, #4]
     bc8:	lsl	r1, ip, #4
     bcc:	add	r3, r6, r1
     bd0:	sub	lr, r3, #4096	; 0x1000
     bd4:	ldr	r4, [lr, #4088]	; 0xff8
     bd8:	ldr	r1, [r4]
     bdc:	cmp	r1, #100	; 0x64
     be0:	blt	be8 <coda_ascbin_cursor_goto_array_element+0x5c>
     be4:	ldr	r4, [r4, #4]
     be8:	ldr	r3, [r4, #48]	; 0x30
     bec:	cmp	r2, r3
     bf0:	beq	c08 <coda_ascbin_cursor_goto_array_element+0x7c>
     bf4:	mvn	r0, #105	; 0x69
     bf8:	ldr	r1, [pc, #540]	; e1c <coda_ascbin_cursor_goto_array_element+0x290>
     bfc:	bl	0 <coda_set_error>
     c00:	mvn	r0, #0
     c04:	b	df0 <coda_ascbin_cursor_goto_array_element+0x264>
     c08:	mov	r7, #0
     c0c:	mov	r8, #0
     c10:	ldr	r1, [r4, #48]	; 0x30
     c14:	cmp	r8, r1
     c18:	bge	cb0 <coda_ascbin_cursor_goto_array_element+0x124>
     c1c:	lsl	ip, r8, #2
     c20:	add	r0, r4, ip
     c24:	ldr	r3, [r0, #52]	; 0x34
     c28:	cmn	r3, #1
     c2c:	bne	c68 <coda_ascbin_cursor_goto_array_element+0xdc>
     c30:	ldr	r0, [r0, #84]	; 0x54
     c34:	add	r2, sp, #40	; 0x28
     c38:	mov	r1, r6
     c3c:	bl	0 <coda_expression_eval_integer>
     c40:	cmp	r0, #0
     c44:	beq	c64 <coda_ascbin_cursor_goto_array_element+0xd8>
     c48:	ldr	r0, [pc, #456]	; e18 <coda_ascbin_cursor_goto_array_element+0x28c>
     c4c:	mov	r1, r8
     c50:	bl	0 <coda_add_error_message>
     c54:	mov	r0, r6
     c58:	bl	0 <coda_cursor_add_to_error_message>
     c5c:	mvn	r0, #0
     c60:	b	df0 <coda_ascbin_cursor_goto_array_element+0x264>
     c64:	ldr	r3, [sp, #40]	; 0x28
     c68:	ldr	r0, [r5, r8, lsl #2]
     c6c:	cmp	r0, #0
     c70:	blt	c98 <coda_ascbin_cursor_goto_array_element+0x10c>
     c74:	cmp	r0, r3
     c78:	bge	c98 <coda_ascbin_cursor_goto_array_element+0x10c>
     c7c:	mul	r1, r7, r3
     c80:	cmp	r8, #0
     c84:	movgt	ip, r1
     c88:	movle	ip, r7
     c8c:	add	r7, ip, r0
     c90:	add	r8, r8, #1
     c94:	b	c10 <coda_ascbin_cursor_goto_array_element+0x84>
     c98:	mvn	r0, #106	; 0x6a
     c9c:	ldr	r1, [pc, #380]	; e20 <coda_ascbin_cursor_goto_array_element+0x294>
     ca0:	ldr	r2, [r5, r8, lsl #2]
     ca4:	bl	0 <coda_set_error>
     ca8:	mvn	r0, #0
     cac:	b	df0 <coda_ascbin_cursor_goto_array_element+0x264>
     cb0:	ldr	r2, [r6, #4]
     cb4:	add	r2, r2, #1
     cb8:	str	r2, [r6, #4]
     cbc:	lsl	ip, r2, #4
     cc0:	add	r3, r6, ip
     cc4:	sub	lr, r3, #4096	; 0x1000
     cc8:	ldr	ip, [lr, #4080]	; 0xff0
     ccc:	sub	lr, r3, #4096	; 0x1000
     cd0:	ldr	r2, [lr, #4084]	; 0xff4
     cd4:	str	ip, [r3]
     cd8:	str	r2, [r3, #4]
     cdc:	ldr	r2, [r4, #40]	; 0x28
     ce0:	ldr	r1, [r2, #24]
     ce4:	ldr	r2, [r2, #28]
     ce8:	cmp	r2, #0
     cec:	bge	d84 <coda_ascbin_cursor_goto_array_element+0x1f8>
     cf0:	mov	r5, #0
     cf4:	cmp	r5, r7
     cf8:	bge	dc0 <coda_ascbin_cursor_goto_array_element+0x234>
     cfc:	ldr	r2, [r6, #4]
     d00:	lsl	r0, r2, #4
     d04:	add	r2, r6, r0
     d08:	ldr	r3, [r4, #40]	; 0x28
     d0c:	sub	lr, r2, #4096	; 0x1000
     d10:	str	r3, [lr, #4088]	; 0xff8
     d14:	ldr	r3, [r6, #4]
     d18:	lsl	r1, r3, #4
     d1c:	add	r0, r6, r1
     d20:	sub	lr, r0, #4096	; 0x1000
     d24:	str	r5, [lr, #4092]	; 0xffc
     d28:	add	r1, sp, #48	; 0x30
     d2c:	mov	r0, r6
     d30:	bl	0 <coda_cursor_get_bit_size>
     d34:	cmp	r0, #0
     d38:	beq	d50 <coda_ascbin_cursor_goto_array_element+0x1c4>
     d3c:	ldr	r1, [r6, #4]
     d40:	sub	ip, r1, #1
     d44:	str	ip, [r6, #4]
     d48:	mvn	r0, #0
     d4c:	b	df0 <coda_ascbin_cursor_goto_array_element+0x264>
     d50:	ldr	r2, [r6, #4]
     d54:	lsl	r3, r2, #4
     d58:	add	ip, r6, r3
     d5c:	ldr	r0, [ip]
     d60:	ldr	r1, [ip, #4]
     d64:	ldr	r3, [sp, #48]	; 0x30
     d68:	ldr	r2, [sp, #52]	; 0x34
     d6c:	adds	r3, r0, r3
     d70:	adc	r0, r1, r2
     d74:	str	r3, [ip]
     d78:	str	r0, [ip, #4]
     d7c:	add	r5, r5, #1
     d80:	b	cf4 <coda_ascbin_cursor_goto_array_element+0x168>
     d84:	ldr	r3, [r6, #4]
     d88:	lsl	ip, r3, #4
     d8c:	add	r0, r6, ip
     d90:	ldr	r5, [r0]
     d94:	ldr	r8, [r0, #4]
     d98:	asr	ip, r7, #31
     d9c:	mov	r3, r7
     da0:	umull	r9, sl, r3, r1
     da4:	mla	r2, r3, r2, sl
     da8:	mla	r1, ip, r1, r2
     dac:	adds	lr, r5, r9
     db0:	adc	r3, r8, r1
     db4:	mov	r1, lr
     db8:	str	r1, [r0]
     dbc:	str	r3, [r0, #4]
     dc0:	ldr	r2, [r6, #4]
     dc4:	lsl	r0, r2, #4
     dc8:	add	r0, r6, r0
     dcc:	ldr	r2, [r4, #40]	; 0x28
     dd0:	sub	lr, r0, #4096	; 0x1000
     dd4:	str	r2, [lr, #4088]	; 0xff8
     dd8:	ldr	r1, [r6, #4]
     ddc:	lsl	r3, r1, #4
     de0:	add	r0, r6, r3
     de4:	sub	lr, r0, #4096	; 0x1000
     de8:	str	r7, [lr, #4092]	; 0xffc
     dec:	mov	r0, #0
     df0:	ldr	r4, [sp, #8]
     df4:	ldr	r5, [sp, #12]
     df8:	ldr	r6, [sp, #16]
     dfc:	ldr	r7, [sp, #20]
     e00:	ldr	r8, [sp, #24]
     e04:	ldr	r9, [sp, #28]
     e08:	ldr	sl, [sp, #32]
     e0c:	ldr	lr, [sp, #4]
     e10:	add	sp, sp, #56	; 0x38
     e14:	bx	lr
     e18:	.word	0x0000025c
     e1c:	.word	0x000002d0
     e20:	.word	0x000000c1

00000e24 <coda_ascbin_cursor_goto_array_element_by_index>:
     e24:	mov	ip, sp
     e28:	sub	sp, sp, #56	; 0x38
     e2c:	str	ip, [sp]
     e30:	str	lr, [sp, #4]
     e34:	str	r4, [sp, #8]
     e38:	str	r5, [sp, #12]
     e3c:	str	r6, [sp, #16]
     e40:	str	r7, [sp, #20]
     e44:	str	r8, [sp, #24]
     e48:	str	r9, [sp, #28]
     e4c:	str	sl, [sp, #32]
     e50:	mov	r5, r1
     e54:	mov	r6, r0
     e58:	ldr	r0, [r6, #4]
     e5c:	lsl	r0, r0, #4
     e60:	add	ip, r6, r0
     e64:	sub	lr, ip, #4096	; 0x1000
     e68:	ldr	r4, [lr, #4088]	; 0xff8
     e6c:	ldr	ip, [r4]
     e70:	cmp	ip, #100	; 0x64
     e74:	blt	e7c <coda_ascbin_cursor_goto_array_element_by_index+0x58>
     e78:	ldr	r4, [r4, #4]
     e7c:	ldr	r0, [pc, #440]	; 103c <coda_ascbin_cursor_goto_array_element_by_index+0x218>
     e80:	ldr	r2, [r0]
     e84:	cmp	r2, #0
     e88:	beq	ed8 <coda_ascbin_cursor_goto_array_element_by_index+0xb4>
     e8c:	add	r1, sp, #40	; 0x28
     e90:	mov	r0, r6
     e94:	bl	0 <coda_cursor_get_num_elements>
     e98:	cmp	r0, #0
     e9c:	beq	ea8 <coda_ascbin_cursor_goto_array_element_by_index+0x84>
     ea0:	mvn	r0, #0
     ea4:	b	1014 <coda_ascbin_cursor_goto_array_element_by_index+0x1f0>
     ea8:	cmp	r5, #0
     eac:	blt	ebc <coda_ascbin_cursor_goto_array_element_by_index+0x98>
     eb0:	ldr	r2, [sp, #40]	; 0x28
     eb4:	cmp	r5, r2
     eb8:	blt	ed8 <coda_ascbin_cursor_goto_array_element_by_index+0xb4>
     ebc:	mvn	r0, #106	; 0x6a
     ec0:	ldr	r1, [pc, #376]	; 1040 <coda_ascbin_cursor_goto_array_element_by_index+0x21c>
     ec4:	ldr	r3, [sp, #40]	; 0x28
     ec8:	mov	r2, r5
     ecc:	bl	0 <coda_set_error>
     ed0:	mvn	r0, #0
     ed4:	b	1014 <coda_ascbin_cursor_goto_array_element_by_index+0x1f0>
     ed8:	ldr	r1, [r6, #4]
     edc:	add	r1, r1, #1
     ee0:	str	r1, [r6, #4]
     ee4:	lsl	r1, r1, #4
     ee8:	add	r2, r6, r1
     eec:	sub	lr, r2, #4096	; 0x1000
     ef0:	ldr	r3, [lr, #4080]	; 0xff0
     ef4:	sub	lr, r2, #4096	; 0x1000
     ef8:	ldr	ip, [lr, #4084]	; 0xff4
     efc:	str	r3, [r2]
     f00:	str	ip, [r2, #4]
     f04:	ldr	ip, [r4, #40]	; 0x28
     f08:	ldr	r1, [ip, #24]
     f0c:	ldr	r2, [ip, #28]
     f10:	cmp	r2, #0
     f14:	bge	fac <coda_ascbin_cursor_goto_array_element_by_index+0x188>
     f18:	mov	r7, #0
     f1c:	cmp	r7, r5
     f20:	bge	fe4 <coda_ascbin_cursor_goto_array_element_by_index+0x1c0>
     f24:	ldr	r2, [r6, #4]
     f28:	lsl	ip, r2, #4
     f2c:	add	ip, r6, ip
     f30:	ldr	r0, [r4, #40]	; 0x28
     f34:	sub	lr, ip, #4096	; 0x1000
     f38:	str	r0, [lr, #4088]	; 0xff8
     f3c:	ldr	ip, [r6, #4]
     f40:	lsl	r3, ip, #4
     f44:	add	r3, r6, r3
     f48:	sub	lr, r3, #4096	; 0x1000
     f4c:	str	r7, [lr, #4092]	; 0xffc
     f50:	add	r1, sp, #48	; 0x30
     f54:	mov	r0, r6
     f58:	bl	0 <coda_cursor_get_bit_size>
     f5c:	cmp	r0, #0
     f60:	beq	f78 <coda_ascbin_cursor_goto_array_element_by_index+0x154>
     f64:	ldr	r2, [r6, #4]
     f68:	sub	r3, r2, #1
     f6c:	str	r3, [r6, #4]
     f70:	mvn	r0, #0
     f74:	b	1014 <coda_ascbin_cursor_goto_array_element_by_index+0x1f0>
     f78:	ldr	r0, [r6, #4]
     f7c:	lsl	r2, r0, #4
     f80:	add	r3, r6, r2
     f84:	ldr	r1, [r3]
     f88:	ldr	ip, [r3, #4]
     f8c:	ldr	r0, [sp, #48]	; 0x30
     f90:	ldr	r2, [sp, #52]	; 0x34
     f94:	adds	r1, r1, r0
     f98:	adc	r2, ip, r2
     f9c:	str	r1, [r3]
     fa0:	str	r2, [r3, #4]
     fa4:	add	r7, r7, #1
     fa8:	b	f1c <coda_ascbin_cursor_goto_array_element_by_index+0xf8>
     fac:	ldr	r3, [r6, #4]
     fb0:	lsl	r3, r3, #4
     fb4:	add	r0, r6, r3
     fb8:	ldr	r7, [r0]
     fbc:	ldr	r8, [r0, #4]
     fc0:	asr	ip, r5, #31
     fc4:	mov	r3, r5
     fc8:	umull	r9, sl, r3, r1
     fcc:	mla	r2, r3, r2, sl
     fd0:	mla	r1, ip, r1, r2
     fd4:	adds	r3, r7, r9
     fd8:	adc	ip, r8, r1
     fdc:	str	r3, [r0]
     fe0:	str	ip, [r0, #4]
     fe4:	ldr	r1, [r6, #4]
     fe8:	lsl	r1, r1, #4
     fec:	add	ip, r6, r1
     ff0:	ldr	r0, [r4, #40]	; 0x28
     ff4:	sub	lr, ip, #4096	; 0x1000
     ff8:	str	r0, [lr, #4088]	; 0xff8
     ffc:	ldr	r0, [r6, #4]
    1000:	lsl	r3, r0, #4
    1004:	add	ip, r6, r3
    1008:	sub	lr, ip, #4096	; 0x1000
    100c:	str	r5, [lr, #4092]	; 0xffc
    1010:	mov	r0, #0
    1014:	ldr	r4, [sp, #8]
    1018:	ldr	r5, [sp, #12]
    101c:	ldr	r6, [sp, #16]
    1020:	ldr	r7, [sp, #20]
    1024:	ldr	r8, [sp, #24]
    1028:	ldr	r9, [sp, #28]
    102c:	ldr	sl, [sp, #32]
    1030:	ldr	lr, [sp, #4]
    1034:	add	sp, sp, #56	; 0x38
    1038:	bx	lr
    103c:	.word	0x00000000
    1040:	.word	0x000000c1

00001044 <coda_ascbin_cursor_goto_next_array_element>:
    1044:	mov	ip, sp
    1048:	sub	sp, sp, #40	; 0x28
    104c:	str	ip, [sp]
    1050:	str	lr, [sp, #4]
    1054:	str	r4, [sp, #8]
    1058:	str	r5, [sp, #12]
    105c:	str	r6, [sp, #16]
    1060:	mov	r4, r0
    1064:	ldr	r1, [r4, #4]
    1068:	lsl	r2, r1, #4
    106c:	add	r3, r4, r2
    1070:	sub	lr, r3, #4096	; 0x1000
    1074:	ldr	r5, [lr, #4072]	; 0xfe8
    1078:	ldr	r2, [r5]
    107c:	cmp	r2, #100	; 0x64
    1080:	blt	1088 <coda_ascbin_cursor_goto_next_array_element+0x44>
    1084:	ldr	r5, [r5, #4]
    1088:	ldr	r0, [r4, #4]
    108c:	lsl	ip, r0, #4
    1090:	add	r2, r4, ip
    1094:	sub	lr, r2, #4096	; 0x1000
    1098:	ldr	r3, [lr, #4092]	; 0xffc
    109c:	add	r6, r3, #1
    10a0:	ldr	r1, [pc, #260]	; 11ac <coda_ascbin_cursor_goto_next_array_element+0x168>
    10a4:	ldr	r1, [r1]
    10a8:	cmp	r1, #0
    10ac:	beq	111c <coda_ascbin_cursor_goto_next_array_element+0xd8>
    10b0:	sub	r1, r0, #1
    10b4:	str	r1, [r4, #4]
    10b8:	add	r1, sp, #24
    10bc:	mov	r0, r4
    10c0:	bl	0 <coda_cursor_get_num_elements>
    10c4:	cmp	r0, #0
    10c8:	beq	10e0 <coda_ascbin_cursor_goto_next_array_element+0x9c>
    10cc:	ldr	r2, [r4, #4]
    10d0:	add	r0, r2, #1
    10d4:	str	r0, [r4, #4]
    10d8:	mvn	r0, #0
    10dc:	b	1194 <coda_ascbin_cursor_goto_next_array_element+0x150>
    10e0:	ldr	ip, [r4, #4]
    10e4:	add	r3, ip, #1
    10e8:	str	r3, [r4, #4]
    10ec:	cmp	r6, #0
    10f0:	blt	1100 <coda_ascbin_cursor_goto_next_array_element+0xbc>
    10f4:	ldr	r0, [sp, #24]
    10f8:	cmp	r6, r0
    10fc:	blt	111c <coda_ascbin_cursor_goto_next_array_element+0xd8>
    1100:	mvn	r0, #106	; 0x6a
    1104:	ldr	r1, [pc, #164]	; 11b0 <coda_ascbin_cursor_goto_next_array_element+0x16c>
    1108:	ldr	r3, [sp, #24]
    110c:	mov	r2, r6
    1110:	bl	0 <coda_set_error>
    1114:	mvn	r0, #0
    1118:	b	1194 <coda_ascbin_cursor_goto_next_array_element+0x150>
    111c:	add	r1, sp, #32
    1120:	mov	r0, r4
    1124:	bl	0 <coda_cursor_get_bit_size>
    1128:	cmp	r0, #0
    112c:	beq	1138 <coda_ascbin_cursor_goto_next_array_element+0xf4>
    1130:	mvn	r0, #0
    1134:	b	1194 <coda_ascbin_cursor_goto_next_array_element+0x150>
    1138:	ldr	r1, [r4, #4]
    113c:	lsl	r1, r1, #4
    1140:	add	ip, r4, r1
    1144:	ldr	r3, [r5, #40]	; 0x28
    1148:	sub	lr, ip, #4096	; 0x1000
    114c:	str	r3, [lr, #4088]	; 0xff8
    1150:	ldr	ip, [r4, #4]
    1154:	lsl	r2, ip, #4
    1158:	add	r3, r4, r2
    115c:	sub	lr, r3, #4096	; 0x1000
    1160:	str	r6, [lr, #4092]	; 0xffc
    1164:	ldr	r0, [r4, #4]
    1168:	lsl	ip, r0, #4
    116c:	add	r1, r4, ip
    1170:	ldr	r2, [r1]
    1174:	ldr	r0, [r1, #4]
    1178:	ldr	r3, [sp, #32]
    117c:	ldr	ip, [sp, #36]	; 0x24
    1180:	adds	r3, r2, r3
    1184:	adc	ip, r0, ip
    1188:	str	r3, [r1]
    118c:	str	ip, [r1, #4]
    1190:	mov	r0, #0
    1194:	ldr	r4, [sp, #8]
    1198:	ldr	r5, [sp, #12]
    119c:	ldr	r6, [sp, #16]
    11a0:	ldr	lr, [sp, #4]
    11a4:	add	sp, sp, #40	; 0x28
    11a8:	bx	lr
    11ac:	.word	0x00000000
    11b0:	.word	0x000000c1

000011b4 <coda_ascbin_cursor_goto_attributes>:
    11b4:	mov	ip, sp
    11b8:	sub	sp, sp, #16
    11bc:	str	ip, [sp]
    11c0:	str	lr, [sp, #4]
    11c4:	str	r4, [sp, #8]
    11c8:	mov	r4, r0
    11cc:	ldr	r1, [r4, #4]
    11d0:	lsl	ip, r1, #4
    11d4:	add	r2, r4, ip
    11d8:	sub	lr, r2, #4096	; 0x1000
    11dc:	ldr	r0, [lr, #4088]	; 0xff8
    11e0:	ldr	r3, [r0]
    11e4:	cmp	r3, #100	; 0x64
    11e8:	blt	11f0 <coda_ascbin_cursor_goto_attributes+0x3c>
    11ec:	ldr	r0, [r0, #4]
    11f0:	ldr	r0, [r0]
    11f4:	ldr	r1, [r4, #4]
    11f8:	add	ip, r1, #1
    11fc:	str	ip, [r4, #4]
    1200:	bl	0 <coda_type_empty_record>
    1204:	ldr	r1, [r4, #4]
    1208:	lsl	r3, r1, #4
    120c:	add	r3, r4, r3
    1210:	sub	lr, r3, #4096	; 0x1000
    1214:	str	r0, [lr, #4088]	; 0xff8
    1218:	ldr	r3, [r4, #4]
    121c:	lsl	r2, r3, #4
    1220:	add	r1, r4, r2
    1224:	mvn	ip, #0
    1228:	sub	lr, r1, #4096	; 0x1000
    122c:	str	ip, [lr, #4092]	; 0xffc
    1230:	ldr	r0, [r4, #4]
    1234:	lsl	r1, r0, #4
    1238:	add	r3, r4, r1
    123c:	mvn	r2, #0
    1240:	mvn	r1, #0
    1244:	str	r1, [r3]
    1248:	str	r2, [r3, #4]
    124c:	mov	r0, #0
    1250:	ldr	r4, [sp, #8]
    1254:	ldr	lr, [sp, #4]
    1258:	add	sp, sp, #16
    125c:	bx	lr

00001260 <coda_ascbin_cursor_use_base_type_of_special_type>:
    1260:	mov	ip, sp
    1264:	sub	sp, sp, #8
    1268:	str	ip, [sp]
    126c:	str	lr, [sp, #4]
    1270:	ldr	r1, [r0, #4]
    1274:	lsl	r2, r1, #4
    1278:	add	r1, r0, r2
    127c:	sub	lr, r1, #4096	; 0x1000
    1280:	ldr	r1, [lr, #4088]	; 0xff8
    1284:	ldr	ip, [r1]
    1288:	cmp	ip, #100	; 0x64
    128c:	blt	1294 <coda_ascbin_cursor_use_base_type_of_special_type+0x34>
    1290:	ldr	r1, [r1, #4]
    1294:	ldr	r3, [r0, #4]
    1298:	lsl	r2, r3, #4
    129c:	add	r2, r0, r2
    12a0:	ldr	r3, [r1, #44]	; 0x2c
    12a4:	sub	lr, r2, #4096	; 0x1000
    12a8:	str	r3, [lr, #4088]	; 0xff8
    12ac:	mov	r0, #0
    12b0:	ldr	lr, [sp, #4]
    12b4:	add	sp, sp, #8
    12b8:	bx	lr

000012bc <coda_ascbin_cursor_get_bit_size>:
    12bc:	mov	ip, sp
    12c0:	sub	sp, sp, #600	; 0x258
    12c4:	sub	sp, sp, #1024	; 0x400
    12c8:	str	ip, [sp]
    12cc:	str	lr, [sp, #4]
    12d0:	str	r4, [sp, #8]
    12d4:	str	r5, [sp, #12]
    12d8:	str	r6, [sp, #16]
    12dc:	str	r7, [sp, #20]
    12e0:	str	r8, [sp, #24]
    12e4:	str	r9, [sp, #28]
    12e8:	mov	r7, r1
    12ec:	mov	r6, r0
    12f0:	ldr	r1, [r6, #4]
    12f4:	lsl	ip, r1, #4
    12f8:	add	r3, r6, ip
    12fc:	sub	lr, r3, #4096	; 0x1000
    1300:	ldr	r4, [lr, #4088]	; 0xff8
    1304:	ldr	r1, [r4]
    1308:	cmp	r1, #100	; 0x64
    130c:	blt	1314 <coda_ascbin_cursor_get_bit_size+0x58>
    1310:	ldr	r4, [r4, #4]
    1314:	ldr	ip, [r4, #24]
    1318:	ldr	r0, [r4, #28]
    131c:	cmp	r0, #0
    1320:	bge	17f4 <coda_ascbin_cursor_get_bit_size+0x538>
    1324:	ldr	r0, [r4, #8]
    1328:	cmp	r0, #0
    132c:	beq	14f0 <coda_ascbin_cursor_get_bit_size+0x234>
    1330:	cmp	r0, #1
    1334:	bne	14d0 <coda_ascbin_cursor_get_bit_size+0x214>
    1338:	add	r1, sp, #36	; 0x24
    133c:	mov	r0, r6
    1340:	bl	0 <coda_cursor_get_num_elements>
    1344:	cmp	r0, #0
    1348:	beq	1354 <coda_ascbin_cursor_get_bit_size+0x98>
    134c:	mvn	r0, #0
    1350:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    1354:	ldr	r3, [sp, #36]	; 0x24
    1358:	cmp	r3, #0
    135c:	beq	14bc <coda_ascbin_cursor_get_bit_size+0x200>
    1360:	ldr	r1, [r4, #40]	; 0x28
    1364:	ldr	r2, [r1, #24]
    1368:	ldr	r0, [r1, #28]
    136c:	cmp	r0, #0
    1370:	bge	14a0 <coda_ascbin_cursor_get_bit_size+0x1e4>
    1374:	mov	r8, #0
    1378:	mov	r5, #0
    137c:	mov	r2, r6
    1380:	add	r3, sp, #1104	; 0x450
    1384:	mov	lr, #130	; 0x82
    1388:	ldr	ip, [r2], #4
    138c:	subs	lr, lr, #1
    1390:	str	ip, [r3], #4
    1394:	bne	1388 <coda_ascbin_cursor_get_bit_size+0xcc>
    1398:	ldr	r2, [sp, #1108]	; 0x454
    139c:	add	r1, r2, #1
    13a0:	str	r1, [sp, #1108]	; 0x454
    13a4:	add	r2, sp, #88	; 0x58
    13a8:	add	r2, r2, #1024	; 0x400
    13ac:	lsl	ip, r1, #4
    13b0:	add	r2, r2, ip
    13b4:	sub	lr, r2, #4096	; 0x1000
    13b8:	ldr	r3, [lr, #4072]	; 0xfe8
    13bc:	sub	lr, r2, #4096	; 0x1000
    13c0:	ldr	ip, [lr, #4076]	; 0xfec
    13c4:	sub	lr, r2, #4096	; 0x1000
    13c8:	str	r3, [lr, #4088]	; 0xff8
    13cc:	sub	lr, r2, #4096	; 0x1000
    13d0:	str	ip, [lr, #4092]	; 0xffc
    13d4:	mov	r6, #0
    13d8:	ldr	r0, [sp, #36]	; 0x24
    13dc:	cmp	r6, r0
    13e0:	bge	1494 <coda_ascbin_cursor_get_bit_size+0x1d8>
    13e4:	add	ip, sp, #88	; 0x58
    13e8:	add	ip, ip, #1024	; 0x400
    13ec:	ldr	r2, [sp, #1108]	; 0x454
    13f0:	lsl	r3, r2, #4
    13f4:	add	r3, ip, r3
    13f8:	ldr	r1, [r4, #40]	; 0x28
    13fc:	sub	lr, r3, #4096	; 0x1000
    1400:	str	r1, [lr, #4080]	; 0xff0
    1404:	add	r1, sp, #88	; 0x58
    1408:	add	r1, r1, #1024	; 0x400
    140c:	ldr	ip, [sp, #1108]	; 0x454
    1410:	lsl	r0, ip, #4
    1414:	add	ip, r1, r0
    1418:	sub	lr, ip, #4096	; 0x1000
    141c:	str	r6, [lr, #4084]	; 0xff4
    1420:	add	r0, sp, #1104	; 0x450
    1424:	add	r1, sp, #56	; 0x38
    1428:	bl	0 <coda_cursor_get_bit_size>
    142c:	cmp	r0, #0
    1430:	beq	143c <coda_ascbin_cursor_get_bit_size+0x180>
    1434:	mvn	r0, #0
    1438:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    143c:	ldr	r0, [sp, #56]	; 0x38
    1440:	ldr	r1, [sp, #60]	; 0x3c
    1444:	adds	r5, r5, r0
    1448:	adc	r8, r8, r1
    144c:	add	r3, sp, #88	; 0x58
    1450:	add	r3, r3, #1024	; 0x400
    1454:	ldr	ip, [sp, #1108]	; 0x454
    1458:	lsl	ip, ip, #4
    145c:	add	ip, r3, ip
    1460:	sub	lr, ip, #4096	; 0x1000
    1464:	ldr	r3, [lr, #4088]	; 0xff8
    1468:	sub	lr, ip, #4096	; 0x1000
    146c:	ldr	r2, [lr, #4092]	; 0xffc
    1470:	adds	lr, r3, r0
    1474:	adc	r0, r2, r1
    1478:	mov	r2, lr
    147c:	sub	lr, ip, #4096	; 0x1000
    1480:	str	r2, [lr, #4088]	; 0xff8
    1484:	sub	lr, ip, #4096	; 0x1000
    1488:	str	r0, [lr, #4092]	; 0xffc
    148c:	add	r6, r6, #1
    1490:	b	13d8 <coda_ascbin_cursor_get_bit_size+0x11c>
    1494:	str	r5, [r7]
    1498:	str	r8, [r7, #4]
    149c:	b	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    14a0:	asr	ip, r3, #31
    14a4:	umull	r4, r1, r3, r2
    14a8:	mla	r0, r3, r0, r1
    14ac:	mla	r3, ip, r2, r0
    14b0:	str	r4, [r7]
    14b4:	str	r3, [r7, #4]
    14b8:	b	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    14bc:	mov	r0, #0
    14c0:	mov	ip, #0
    14c4:	str	ip, [r7]
    14c8:	str	r0, [r7, #4]
    14cc:	b	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    14d0:	ldr	r0, [pc, #852]	; 182c <coda_ascbin_cursor_get_bit_size+0x570>
    14d4:	ldr	r1, [pc, #856]	; 1834 <coda_ascbin_cursor_get_bit_size+0x578>
    14d8:	mov	r2, #768	; 0x300
    14dc:	ldr	r3, [pc, #852]	; 1838 <coda_ascbin_cursor_get_bit_size+0x57c>
    14e0:	bl	0 <__assert_fail>
    14e4:	mov	r0, #1
    14e8:	bl	0 <exit>
    14ec:	b	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    14f0:	ldr	r0, [pc, #824]	; 1830 <coda_ascbin_cursor_get_bit_size+0x574>
    14f4:	ldr	r0, [r0]
    14f8:	cmp	r0, #0
    14fc:	beq	15ac <coda_ascbin_cursor_get_bit_size+0x2f0>
    1500:	ldr	r0, [r4, #32]
    1504:	cmp	r0, #0
    1508:	beq	15ac <coda_ascbin_cursor_get_bit_size+0x2f0>
    150c:	mov	r2, r7
    1510:	mov	r1, r6
    1514:	bl	0 <coda_expression_eval_integer>
    1518:	cmp	r0, #0
    151c:	beq	1538 <coda_ascbin_cursor_get_bit_size+0x27c>
    1520:	ldr	r0, [pc, #764]	; 1824 <coda_ascbin_cursor_get_bit_size+0x568>
    1524:	bl	0 <coda_add_error_message>
    1528:	mov	r0, r6
    152c:	bl	0 <coda_cursor_add_to_error_message>
    1530:	mvn	r0, #0
    1534:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    1538:	ldr	r3, [r4, #24]
    153c:	ldr	r2, [r4, #28]
    1540:	mvn	r2, r2
    1544:	eor	r1, r3, #1016	; 0x3f8
    1548:	eor	r1, r1, #261120	; 0x3fc00
    154c:	eor	r1, r1, #66846720	; 0x3fc0000
    1550:	eor	r1, r1, #-67108864	; 0xfc000000
    1554:	orr	ip, r2, r1
    1558:	cmp	ip, #0
    155c:	bne	157c <coda_ascbin_cursor_get_bit_size+0x2c0>
    1560:	ldr	r3, [r7]
    1564:	ldr	r0, [r7, #4]
    1568:	lsl	r2, r0, #3
    156c:	orr	r1, r2, r3, lsr #29
    1570:	lsl	r0, r3, #3
    1574:	str	r0, [r7]
    1578:	str	r1, [r7, #4]
    157c:	ldr	r2, [r7]
    1580:	ldr	r3, [r7, #4]
    1584:	cmp	r3, #0
    1588:	bge	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    158c:	movw	r0, #65236	; 0xfed4
    1590:	movt	r0, #65535	; 0xffff
    1594:	ldr	r1, [pc, #652]	; 1828 <coda_ascbin_cursor_get_bit_size+0x56c>
    1598:	bl	0 <coda_set_error>
    159c:	mov	r0, r6
    15a0:	bl	0 <coda_cursor_add_to_error_message>
    15a4:	mvn	r0, #0
    15a8:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    15ac:	ldr	r3, [r4, #68]	; 0x44
    15b0:	cmp	r3, #0
    15b4:	bne	17a4 <coda_ascbin_cursor_get_bit_size+0x4e8>
    15b8:	mov	r8, #0
    15bc:	mov	r5, #0
    15c0:	ldr	r0, [r4, #48]	; 0x30
    15c4:	cmp	r0, #0
    15c8:	ble	1798 <coda_ascbin_cursor_get_bit_size+0x4dc>
    15cc:	mov	r2, r6
    15d0:	add	r3, sp, #584	; 0x248
    15d4:	mov	lr, #130	; 0x82
    15d8:	ldr	ip, [r2], #4
    15dc:	subs	lr, lr, #1
    15e0:	str	ip, [r3], #4
    15e4:	bne	15d8 <coda_ascbin_cursor_get_bit_size+0x31c>
    15e8:	add	r0, sp, #584	; 0x248
    15ec:	bl	0 <coda_cursor_goto_first_record_field>
    15f0:	cmp	r0, #0
    15f4:	beq	1600 <coda_ascbin_cursor_get_bit_size+0x344>
    15f8:	mvn	r0, #0
    15fc:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    1600:	mov	r9, #0
    1604:	ldr	ip, [r4, #48]	; 0x30
    1608:	cmp	r9, ip
    160c:	bge	1798 <coda_ascbin_cursor_get_bit_size+0x4dc>
    1610:	mvn	r1, #0
    1614:	mvn	r0, #0
    1618:	str	r0, [sp, #48]	; 0x30
    161c:	str	r1, [sp, #52]	; 0x34
    1620:	sub	r2, ip, #1
    1624:	cmp	r9, r2
    1628:	bge	164c <coda_ascbin_cursor_get_bit_size+0x390>
    162c:	add	r0, sp, #584	; 0x248
    1630:	add	r1, sp, #40	; 0x28
    1634:	add	r2, sp, #48	; 0x30
    1638:	bl	384 <get_next_relative_field_bit_offset>
    163c:	cmp	r0, #0
    1640:	beq	164c <coda_ascbin_cursor_get_bit_size+0x390>
    1644:	mvn	r0, #0
    1648:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    164c:	ldr	r1, [sp, #52]	; 0x34
    1650:	cmp	r1, #0
    1654:	bge	1674 <coda_ascbin_cursor_get_bit_size+0x3b8>
    1658:	add	r0, sp, #584	; 0x248
    165c:	add	r1, sp, #48	; 0x30
    1660:	bl	0 <coda_cursor_get_bit_size>
    1664:	cmp	r0, #0
    1668:	beq	1674 <coda_ascbin_cursor_get_bit_size+0x3b8>
    166c:	mvn	r0, #0
    1670:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    1674:	ldr	r3, [sp, #48]	; 0x30
    1678:	ldr	r0, [sp, #52]	; 0x34
    167c:	adds	r5, r5, r3
    1680:	adc	r8, r8, r0
    1684:	ldr	r0, [r4, #48]	; 0x30
    1688:	sub	ip, r0, #1
    168c:	cmp	r9, ip
    1690:	bge	1790 <coda_ascbin_cursor_get_bit_size+0x4d4>
    1694:	mov	r3, #1
    1698:	str	r3, [sp, #32]
    169c:	ldr	r3, [r4, #52]	; 0x34
    16a0:	lsl	r2, r9, #2
    16a4:	add	r1, r3, r2
    16a8:	ldr	r2, [r1, #4]
    16ac:	ldr	r0, [r2, #20]
    16b0:	cmp	r0, #0
    16b4:	beq	16d4 <coda_ascbin_cursor_get_bit_size+0x418>
    16b8:	add	r2, sp, #32
    16bc:	mov	r1, r6
    16c0:	bl	0 <coda_expression_eval_bool>
    16c4:	cmp	r0, #0
    16c8:	beq	16d4 <coda_ascbin_cursor_get_bit_size+0x418>
    16cc:	mvn	r0, #0
    16d0:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    16d4:	ldr	r3, [sp, #32]
    16d8:	cmp	r3, #0
    16dc:	bne	1704 <coda_ascbin_cursor_get_bit_size+0x448>
    16e0:	ldr	r0, [r4]
    16e4:	bl	0 <coda_no_data_singleton>
    16e8:	add	r3, sp, #592	; 0x250
    16ec:	ldr	r1, [sp, #588]	; 0x24c
    16f0:	lsl	ip, r1, #4
    16f4:	add	r3, r3, ip
    16f8:	sub	lr, r3, #4096	; 0x1000
    16fc:	str	r0, [lr, #4080]	; 0xff0
    1700:	b	1730 <coda_ascbin_cursor_get_bit_size+0x474>
    1704:	add	r0, sp, #592	; 0x250
    1708:	ldr	ip, [sp, #588]	; 0x24c
    170c:	lsl	r1, ip, #4
    1710:	add	r0, r0, r1
    1714:	ldr	r3, [r4, #52]	; 0x34
    1718:	lsl	ip, r9, #2
    171c:	add	ip, r3, ip
    1720:	ldr	r1, [ip, #4]
    1724:	ldr	r1, [r1, #8]
    1728:	sub	lr, r0, #4096	; 0x1000
    172c:	str	r1, [lr, #4080]	; 0xff0
    1730:	add	r0, sp, #592	; 0x250
    1734:	ldr	r1, [sp, #588]	; 0x24c
    1738:	lsl	r1, r1, #4
    173c:	add	ip, r0, r1
    1740:	add	r1, r9, #1
    1744:	sub	lr, ip, #4096	; 0x1000
    1748:	str	r1, [lr, #4084]	; 0xff4
    174c:	add	r2, sp, #592	; 0x250
    1750:	ldr	r1, [sp, #588]	; 0x24c
    1754:	lsl	ip, r1, #4
    1758:	add	ip, r2, ip
    175c:	ldr	r3, [r6, #4]
    1760:	lsl	r0, r3, #4
    1764:	add	r0, r6, r0
    1768:	ldr	r2, [r0]
    176c:	ldr	r3, [r0, #4]
    1770:	ldr	r0, [sp, #40]	; 0x28
    1774:	ldr	r1, [sp, #44]	; 0x2c
    1778:	adds	r0, r2, r0
    177c:	adc	r1, r3, r1
    1780:	sub	lr, ip, #4096	; 0x1000
    1784:	str	r0, [lr, #4088]	; 0xff8
    1788:	sub	lr, ip, #4096	; 0x1000
    178c:	str	r1, [lr, #4092]	; 0xffc
    1790:	add	r9, r9, #1
    1794:	b	1604 <coda_ascbin_cursor_get_bit_size+0x348>
    1798:	str	r5, [r7]
    179c:	str	r8, [r7, #4]
    17a0:	b	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    17a4:	mov	r2, r6
    17a8:	add	r3, sp, #64	; 0x40
    17ac:	mov	lr, #130	; 0x82
    17b0:	ldr	ip, [r2], #4
    17b4:	subs	lr, lr, #1
    17b8:	str	ip, [r3], #4
    17bc:	bne	17b0 <coda_ascbin_cursor_get_bit_size+0x4f4>
    17c0:	add	r0, sp, #64	; 0x40
    17c4:	bl	0 <coda_cursor_goto_available_union_field>
    17c8:	cmp	r0, #0
    17cc:	beq	17d8 <coda_ascbin_cursor_get_bit_size+0x51c>
    17d0:	mvn	r0, #0
    17d4:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    17d8:	add	r0, sp, #64	; 0x40
    17dc:	mov	r1, r7
    17e0:	bl	0 <coda_cursor_get_bit_size>
    17e4:	cmp	r0, #0
    17e8:	beq	17fc <coda_ascbin_cursor_get_bit_size+0x540>
    17ec:	mvn	r0, #0
    17f0:	b	1800 <coda_ascbin_cursor_get_bit_size+0x544>
    17f4:	str	ip, [r7]
    17f8:	str	r0, [r7, #4]
    17fc:	mov	r0, #0
    1800:	ldr	r4, [sp, #8]
    1804:	ldr	r5, [sp, #12]
    1808:	ldr	r6, [sp, #16]
    180c:	ldr	r7, [sp, #20]
    1810:	ldr	r8, [sp, #24]
    1814:	ldr	r9, [sp, #28]
    1818:	ldr	lr, [sp, #4]
    181c:	ldr	sp, [sp]
    1820:	bx	lr
    1824:	.word	0x00000216
    1828:	.word	0x00000079
    182c:	.word	0x000002bd
	...
    1838:	.word	0x00000399

0000183c <coda_ascbin_cursor_get_num_elements>:
    183c:	mov	ip, sp
    1840:	sub	sp, sp, #64	; 0x40
    1844:	str	ip, [sp]
    1848:	str	lr, [sp, #4]
    184c:	str	r4, [sp, #8]
    1850:	str	r5, [sp, #12]
    1854:	str	r6, [sp, #16]
    1858:	str	r7, [sp, #20]
    185c:	str	r8, [sp, #24]
    1860:	mov	r7, r1
    1864:	mov	r4, r0
    1868:	ldr	r1, [r4, #4]
    186c:	lsl	ip, r1, #4
    1870:	add	r2, r4, ip
    1874:	sub	lr, r2, #4096	; 0x1000
    1878:	ldr	r5, [lr, #4088]	; 0xff8
    187c:	ldr	r3, [r5]
    1880:	cmp	r3, #100	; 0x64
    1884:	blt	188c <coda_ascbin_cursor_get_num_elements+0x50>
    1888:	ldr	r5, [r5, #4]
    188c:	ldr	r3, [r5, #8]
    1890:	cmp	r3, #0
    1894:	beq	1988 <coda_ascbin_cursor_get_num_elements+0x14c>
    1898:	cmp	r3, #1
    189c:	bne	1968 <coda_ascbin_cursor_get_num_elements+0x12c>
    18a0:	ldr	r1, [r5, #44]	; 0x2c
    18a4:	cmn	r1, #1
    18a8:	bne	1960 <coda_ascbin_cursor_get_num_elements+0x124>
    18ac:	mov	r8, #1
    18b0:	mov	r6, #0
    18b4:	ldr	r0, [r5, #48]	; 0x30
    18b8:	cmp	r6, r0
    18bc:	bge	1958 <coda_ascbin_cursor_get_num_elements+0x11c>
    18c0:	lsl	r2, r6, #2
    18c4:	add	r2, r5, r2
    18c8:	ldr	r0, [r2, #52]	; 0x34
    18cc:	cmn	r0, #1
    18d0:	bne	194c <coda_ascbin_cursor_get_num_elements+0x110>
    18d4:	ldr	r0, [r2, #84]	; 0x54
    18d8:	add	r2, sp, #32
    18dc:	mov	r1, r4
    18e0:	bl	0 <coda_expression_eval_integer>
    18e4:	cmp	r0, #0
    18e8:	beq	1908 <coda_ascbin_cursor_get_num_elements+0xcc>
    18ec:	ldr	r0, [pc, #192]	; 19b4 <coda_ascbin_cursor_get_num_elements+0x178>
    18f0:	mov	r1, r6
    18f4:	bl	0 <coda_add_error_message>
    18f8:	mov	r0, r4
    18fc:	bl	0 <coda_cursor_add_to_error_message>
    1900:	mvn	r0, #0
    1904:	b	1994 <coda_ascbin_cursor_get_num_elements+0x158>
    1908:	ldr	r0, [sp, #32]
    190c:	ldr	r1, [sp, #36]	; 0x24
    1910:	cmp	r1, #0
    1914:	bge	1944 <coda_ascbin_cursor_get_num_elements+0x108>
    1918:	add	r2, sp, #40	; 0x28
    191c:	bl	0 <coda_str64>
    1920:	movw	r0, #65236	; 0xfed4
    1924:	movt	r0, #65535	; 0xffff
    1928:	ldr	r1, [pc, #144]	; 19c0 <coda_ascbin_cursor_get_num_elements+0x184>
    192c:	add	r2, sp, #40	; 0x28
    1930:	bl	0 <coda_set_error>
    1934:	mov	r0, r4
    1938:	bl	0 <coda_cursor_add_to_error_message>
    193c:	mvn	r0, #0
    1940:	b	1994 <coda_ascbin_cursor_get_num_elements+0x158>
    1944:	mul	r8, r8, r0
    1948:	b	1950 <coda_ascbin_cursor_get_num_elements+0x114>
    194c:	mul	r8, r8, r0
    1950:	add	r6, r6, #1
    1954:	b	18b4 <coda_ascbin_cursor_get_num_elements+0x78>
    1958:	str	r8, [r7]
    195c:	b	1990 <coda_ascbin_cursor_get_num_elements+0x154>
    1960:	str	r1, [r7]
    1964:	b	1990 <coda_ascbin_cursor_get_num_elements+0x154>
    1968:	ldr	r0, [pc, #76]	; 19bc <coda_ascbin_cursor_get_num_elements+0x180>
    196c:	ldr	r1, [pc, #80]	; 19c4 <coda_ascbin_cursor_get_num_elements+0x188>
    1970:	movw	r2, #835	; 0x343
    1974:	ldr	r3, [pc, #60]	; 19b8 <coda_ascbin_cursor_get_num_elements+0x17c>
    1978:	bl	0 <__assert_fail>
    197c:	mov	r0, #1
    1980:	bl	0 <exit>
    1984:	b	1990 <coda_ascbin_cursor_get_num_elements+0x154>
    1988:	ldr	ip, [r5, #48]	; 0x30
    198c:	str	ip, [r7]
    1990:	mov	r0, #0
    1994:	ldr	r4, [sp, #8]
    1998:	ldr	r5, [sp, #12]
    199c:	ldr	r6, [sp, #16]
    19a0:	ldr	r7, [sp, #20]
    19a4:	ldr	r8, [sp, #24]
    19a8:	ldr	lr, [sp, #4]
    19ac:	add	sp, sp, #64	; 0x40
    19b0:	bx	lr
    19b4:	.word	0x0000025c
    19b8:	.word	0x000003b9
    19bc:	.word	0x000002bd
    19c0:	.word	0x00000274
    19c4:	.word	0x00000000

000019c8 <coda_ascbin_cursor_get_record_field_available_status>:
    19c8:	mov	ip, sp
    19cc:	sub	sp, sp, #24
    19d0:	str	ip, [sp]
    19d4:	str	lr, [sp, #4]
    19d8:	str	r4, [sp, #8]
    19dc:	str	r5, [sp, #12]
    19e0:	mov	r4, r2
    19e4:	mov	r5, r1
    19e8:	ldr	r2, [r0, #4]
    19ec:	lsl	ip, r2, #4
    19f0:	add	r3, r0, ip
    19f4:	sub	lr, r3, #4096	; 0x1000
    19f8:	ldr	r2, [lr, #4088]	; 0xff8
    19fc:	ldr	r3, [r2]
    1a00:	cmp	r3, #100	; 0x64
    1a04:	blt	1a0c <coda_ascbin_cursor_get_record_field_available_status+0x44>
    1a08:	ldr	r2, [r2, #4]
    1a0c:	cmp	r5, #0
    1a10:	blt	1aa4 <coda_ascbin_cursor_get_record_field_available_status+0xdc>
    1a14:	ldr	ip, [r2, #48]	; 0x30
    1a18:	cmp	r5, ip
    1a1c:	bge	1aa4 <coda_ascbin_cursor_get_record_field_available_status+0xdc>
    1a20:	ldr	r1, [r2, #68]	; 0x44
    1a24:	cmp	r1, #0
    1a28:	bne	1a70 <coda_ascbin_cursor_get_record_field_available_status+0xa8>
    1a2c:	ldr	r1, [r2, #52]	; 0x34
    1a30:	ldr	r1, [r1, r5, lsl #2]
    1a34:	ldr	r1, [r1, #20]
    1a38:	cmp	r1, #0
    1a3c:	beq	1a64 <coda_ascbin_cursor_get_record_field_available_status+0x9c>
    1a40:	mov	r2, r4
    1a44:	mov	r3, r0
    1a48:	mov	r0, r1
    1a4c:	mov	r1, r3
    1a50:	bl	0 <coda_expression_eval_bool>
    1a54:	cmp	r0, #0
    1a58:	beq	1a9c <coda_ascbin_cursor_get_record_field_available_status+0xd4>
    1a5c:	mvn	r0, #0
    1a60:	b	1abc <coda_ascbin_cursor_get_record_field_available_status+0xf4>
    1a64:	mov	r2, #1
    1a68:	str	r2, [r4]
    1a6c:	b	1a9c <coda_ascbin_cursor_get_record_field_available_status+0xd4>
    1a70:	add	r1, sp, #16
    1a74:	bl	0 <coda_cursor_get_available_union_field_index>
    1a78:	cmp	r0, #0
    1a7c:	beq	1a88 <coda_ascbin_cursor_get_record_field_available_status+0xc0>
    1a80:	mvn	r0, #0
    1a84:	b	1abc <coda_ascbin_cursor_get_record_field_available_status+0xf4>
    1a88:	ldr	r3, [sp, #16]
    1a8c:	cmp	r5, r3
    1a90:	moveq	r0, #1
    1a94:	movne	r0, #0
    1a98:	str	r0, [r4]
    1a9c:	mov	r0, #0
    1aa0:	b	1abc <coda_ascbin_cursor_get_record_field_available_status+0xf4>
    1aa4:	mvn	r0, #100	; 0x64
    1aa8:	ldr	r1, [pc, #32]	; 1ad0 <coda_ascbin_cursor_get_record_field_available_status+0x108>
    1aac:	ldr	r3, [r2, #48]	; 0x30
    1ab0:	mov	r2, r5
    1ab4:	bl	0 <coda_set_error>
    1ab8:	mvn	r0, #0
    1abc:	ldr	r4, [sp, #8]
    1ac0:	ldr	r5, [sp, #12]
    1ac4:	ldr	lr, [sp, #4]
    1ac8:	add	sp, sp, #24
    1acc:	bx	lr
    1ad0:	.word	0x0000014e

00001ad4 <coda_ascbin_cursor_get_available_union_field_index>:
    1ad4:	mov	ip, sp
    1ad8:	sub	sp, sp, #608	; 0x260
    1adc:	str	ip, [sp, #8]
    1ae0:	str	lr, [sp, #12]
    1ae4:	str	r4, [sp, #16]
    1ae8:	str	r5, [sp, #20]
    1aec:	str	r6, [sp, #24]
    1af0:	mov	r6, r1
    1af4:	mov	r4, r0
    1af8:	ldr	ip, [r4, #4]
    1afc:	lsl	r2, ip, #4
    1b00:	add	r0, r4, r2
    1b04:	sub	lr, r0, #4096	; 0x1000
    1b08:	ldr	r5, [lr, #4088]	; 0xff8
    1b0c:	ldr	r3, [r5]
    1b10:	cmp	r3, #100	; 0x64
    1b14:	blt	1b1c <coda_ascbin_cursor_get_available_union_field_index+0x48>
    1b18:	ldr	r5, [r5, #4]
    1b1c:	ldr	r3, [r5, #68]	; 0x44
    1b20:	cmp	r3, #0
    1b24:	bne	1b3c <coda_ascbin_cursor_get_available_union_field_index+0x68>
    1b28:	mvn	r0, #104	; 0x68
    1b2c:	ldr	r1, [pc, #472]	; 1d0c <coda_ascbin_cursor_get_available_union_field_index+0x238>
    1b30:	bl	0 <coda_set_error>
    1b34:	mvn	r0, #0
    1b38:	b	1cf0 <coda_ascbin_cursor_get_available_union_field_index+0x21c>
    1b3c:	ldr	ip, [r5, #48]	; 0x30
    1b40:	cmp	ip, #0
    1b44:	bgt	1b5c <coda_ascbin_cursor_get_available_union_field_index+0x88>
    1b48:	ldr	r0, [pc, #460]	; 1d1c <coda_ascbin_cursor_get_available_union_field_index+0x248>
    1b4c:	ldr	r1, [pc, #448]	; 1d14 <coda_ascbin_cursor_get_available_union_field_index+0x240>
    1b50:	movw	r2, #889	; 0x379
    1b54:	ldr	r3, [pc, #428]	; 1d08 <coda_ascbin_cursor_get_available_union_field_index+0x234>
    1b58:	bl	0 <__assert_fail>
    1b5c:	mov	r2, r4
    1b60:	add	r3, sp, #88	; 0x58
    1b64:	mov	lr, #130	; 0x82
    1b68:	ldr	ip, [r2], #4
    1b6c:	subs	lr, lr, #1
    1b70:	str	ip, [r3], #4
    1b74:	bne	1b68 <coda_ascbin_cursor_get_available_union_field_index+0x94>
    1b78:	ldr	ip, [sp, #92]	; 0x5c
    1b7c:	add	r2, ip, #1
    1b80:	str	r2, [sp, #92]	; 0x5c
    1b84:	add	r3, sp, #96	; 0x60
    1b88:	lsl	r2, r2, #4
    1b8c:	add	r2, r3, r2
    1b90:	ldr	r1, [r5, #52]	; 0x34
    1b94:	ldr	r0, [r1]
    1b98:	ldr	r3, [r0, #8]
    1b9c:	sub	lr, r2, #4096	; 0x1000
    1ba0:	str	r3, [lr, #4080]	; 0xff0
    1ba4:	add	r2, sp, #96	; 0x60
    1ba8:	ldr	r0, [sp, #92]	; 0x5c
    1bac:	lsl	r1, r0, #4
    1bb0:	add	ip, r2, r1
    1bb4:	mvn	r1, #0
    1bb8:	sub	lr, ip, #4096	; 0x1000
    1bbc:	str	r1, [lr, #4084]	; 0xff4
    1bc0:	add	r1, sp, #96	; 0x60
    1bc4:	ldr	r3, [sp, #92]	; 0x5c
    1bc8:	lsl	r3, r3, #4
    1bcc:	add	r3, r1, r3
    1bd0:	sub	lr, r3, #4096	; 0x1000
    1bd4:	ldr	r0, [lr, #4072]	; 0xfe8
    1bd8:	sub	lr, r3, #4096	; 0x1000
    1bdc:	ldr	ip, [lr, #4076]	; 0xfec
    1be0:	sub	lr, r3, #4096	; 0x1000
    1be4:	str	r0, [lr, #4088]	; 0xff8
    1be8:	sub	lr, r3, #4096	; 0x1000
    1bec:	str	ip, [lr, #4092]	; 0xffc
    1bf0:	ldr	r0, [r5, #68]	; 0x44
    1bf4:	add	r1, sp, #88	; 0x58
    1bf8:	add	r2, sp, #32
    1bfc:	bl	0 <coda_expression_eval_integer>
    1c00:	cmp	r0, #0
    1c04:	beq	1c20 <coda_ascbin_cursor_get_available_union_field_index+0x14c>
    1c08:	ldr	r0, [pc, #256]	; 1d10 <coda_ascbin_cursor_get_available_union_field_index+0x23c>
    1c0c:	bl	0 <coda_add_error_message>
    1c10:	mov	r0, r4
    1c14:	bl	0 <coda_cursor_add_to_error_message>
    1c18:	mvn	r0, #0
    1c1c:	b	1cf0 <coda_ascbin_cursor_get_available_union_field_index+0x21c>
    1c20:	ldr	r2, [sp, #32]
    1c24:	ldr	r3, [sp, #36]	; 0x24
    1c28:	cmp	r3, #0
    1c2c:	blt	1c74 <coda_ascbin_cursor_get_available_union_field_index+0x1a0>
    1c30:	ldr	ip, [r5, #48]	; 0x30
    1c34:	asr	r0, ip, #31
    1c38:	cmp	r3, r0
    1c3c:	bne	1c50 <coda_ascbin_cursor_get_available_union_field_index+0x17c>
    1c40:	cmp	r2, ip
    1c44:	movcs	r3, #1
    1c48:	movcc	r3, #0
    1c4c:	b	1c5c <coda_ascbin_cursor_get_available_union_field_index+0x188>
    1c50:	cmp	r3, r0
    1c54:	movgt	r3, #1
    1c58:	movle	r3, #0
    1c5c:	cmp	r3, #0
    1c60:	bne	1c74 <coda_ascbin_cursor_get_available_union_field_index+0x1a0>
    1c64:	ldr	r1, [sp, #32]
    1c68:	str	r1, [r6]
    1c6c:	mov	r0, #0
    1c70:	b	1cf0 <coda_ascbin_cursor_get_available_union_field_index+0x21c>
    1c74:	ldr	r0, [sp, #32]
    1c78:	ldr	r1, [sp, #36]	; 0x24
    1c7c:	add	r2, sp, #40	; 0x28
    1c80:	bl	0 <coda_str64>
    1c84:	ldr	r1, [r4, #4]
    1c88:	lsl	ip, r1, #4
    1c8c:	add	r3, r4, ip
    1c90:	ldr	ip, [r3]
    1c94:	ldr	r0, [r3, #4]
    1c98:	asr	r1, r0, #3
    1c9c:	lsr	r3, ip, #3
    1ca0:	orr	r0, r3, r0, lsl #29
    1ca4:	add	r2, sp, #64	; 0x40
    1ca8:	bl	0 <coda_str64>
    1cac:	movw	r0, #65236	; 0xfed4
    1cb0:	movt	r0, #65535	; 0xffff
    1cb4:	ldr	r1, [pc, #92]	; 1d18 <coda_ascbin_cursor_get_available_union_field_index+0x244>
    1cb8:	add	r2, sp, #40	; 0x28
    1cbc:	ldr	r3, [r5, #48]	; 0x30
    1cc0:	add	r6, sp, #64	; 0x40
    1cc4:	ldr	ip, [r4, #4]
    1cc8:	lsl	ip, ip, #4
    1ccc:	add	ip, r4, ip
    1cd0:	ldr	ip, [ip]
    1cd4:	and	ip, ip, #7
    1cd8:	str	ip, [sp, #4]
    1cdc:	str	r6, [sp]
    1ce0:	bl	0 <coda_set_error>
    1ce4:	mov	r0, r4
    1ce8:	bl	0 <coda_cursor_add_to_error_message>
    1cec:	mvn	r0, #0
    1cf0:	ldr	r4, [sp, #16]
    1cf4:	ldr	r5, [sp, #20]
    1cf8:	ldr	r6, [sp, #24]
    1cfc:	ldr	lr, [sp, #12]
    1d00:	add	sp, sp, #608	; 0x260
    1d04:	bx	lr
    1d08:	.word	0x000003dd
    1d0c:	.word	0x000000a0
    1d10:	.word	0x00000132
    1d14:	.word	0x00000000
    1d18:	.word	0x00000197
    1d1c:	.word	0x000000fa

00001d20 <coda_ascbin_cursor_get_array_dim>:
    1d20:	mov	ip, sp
    1d24:	sub	sp, sp, #56	; 0x38
    1d28:	str	ip, [sp]
    1d2c:	str	lr, [sp, #4]
    1d30:	str	r4, [sp, #8]
    1d34:	str	r5, [sp, #12]
    1d38:	str	r6, [sp, #16]
    1d3c:	str	r7, [sp, #20]
    1d40:	mov	r6, r2
    1d44:	mov	r5, r0
    1d48:	ldr	r2, [r5, #4]
    1d4c:	lsl	r0, r2, #4
    1d50:	add	r2, r5, r0
    1d54:	sub	lr, r2, #4096	; 0x1000
    1d58:	ldr	r4, [lr, #4088]	; 0xff8
    1d5c:	ldr	ip, [r4]
    1d60:	cmp	ip, #100	; 0x64
    1d64:	blt	1d6c <coda_ascbin_cursor_get_array_dim+0x4c>
    1d68:	ldr	r4, [r4, #4]
    1d6c:	ldr	r0, [r4, #48]	; 0x30
    1d70:	str	r0, [r1]
    1d74:	mov	r7, #0
    1d78:	ldr	r3, [r4, #48]	; 0x30
    1d7c:	cmp	r7, r3
    1d80:	bge	1e1c <coda_ascbin_cursor_get_array_dim+0xfc>
    1d84:	lsl	r3, r7, #2
    1d88:	add	r1, r4, r3
    1d8c:	ldr	r0, [r1, #52]	; 0x34
    1d90:	cmn	r0, #1
    1d94:	bne	1e10 <coda_ascbin_cursor_get_array_dim+0xf0>
    1d98:	ldr	r0, [r1, #84]	; 0x54
    1d9c:	add	r2, sp, #24
    1da0:	mov	r1, r5
    1da4:	bl	0 <coda_expression_eval_integer>
    1da8:	cmp	r0, #0
    1dac:	beq	1dcc <coda_ascbin_cursor_get_array_dim+0xac>
    1db0:	ldr	r0, [pc, #132]	; 1e3c <coda_ascbin_cursor_get_array_dim+0x11c>
    1db4:	mov	r1, r7
    1db8:	bl	0 <coda_add_error_message>
    1dbc:	mov	r0, r5
    1dc0:	bl	0 <coda_cursor_add_to_error_message>
    1dc4:	mvn	r0, #0
    1dc8:	b	1e20 <coda_ascbin_cursor_get_array_dim+0x100>
    1dcc:	ldr	r0, [sp, #24]
    1dd0:	ldr	r1, [sp, #28]
    1dd4:	cmp	r1, #0
    1dd8:	bge	1e08 <coda_ascbin_cursor_get_array_dim+0xe8>
    1ddc:	add	r2, sp, #32
    1de0:	bl	0 <coda_str64>
    1de4:	movw	r0, #65236	; 0xfed4
    1de8:	movt	r0, #65535	; 0xffff
    1dec:	ldr	r1, [pc, #76]	; 1e40 <coda_ascbin_cursor_get_array_dim+0x120>
    1df0:	add	r2, sp, #32
    1df4:	bl	0 <coda_set_error>
    1df8:	mov	r0, r5
    1dfc:	bl	0 <coda_cursor_add_to_error_message>
    1e00:	mvn	r0, #0
    1e04:	b	1e20 <coda_ascbin_cursor_get_array_dim+0x100>
    1e08:	str	r0, [r6, r7, lsl #2]
    1e0c:	b	1e14 <coda_ascbin_cursor_get_array_dim+0xf4>
    1e10:	str	r0, [r6, r7, lsl #2]
    1e14:	add	r7, r7, #1
    1e18:	b	1d78 <coda_ascbin_cursor_get_array_dim+0x58>
    1e1c:	mov	r0, #0
    1e20:	ldr	r4, [sp, #8]
    1e24:	ldr	r5, [sp, #12]
    1e28:	ldr	r6, [sp, #16]
    1e2c:	ldr	r7, [sp, #20]
    1e30:	ldr	lr, [sp, #4]
    1e34:	add	sp, sp, #56	; 0x38
    1e38:	bx	lr
    1e3c:	.word	0x0000025c
    1e40:	.word	0x0000022b
