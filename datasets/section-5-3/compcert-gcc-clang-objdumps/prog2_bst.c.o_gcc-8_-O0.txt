
../compcert-repos/prog2/CMakeFiles/7.1.dir/Aula07_Arvores/bst.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bst_nova>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #8
  10:	mov	r0, #4
  14:	bl	0 <malloc>
  18:	mov	r3, r0
  1c:	str	r3, [fp, #-8]
  20:	ldr	r3, [fp, #-8]
  24:	cmp	r3, #0
  28:	bne	34 <bst_nova+0x34>
  2c:	mov	r3, #0
  30:	b	44 <bst_nova+0x44>
  34:	ldr	r3, [fp, #-8]
  38:	mov	r2, #0
  3c:	str	r2, [r3]
  40:	ldr	r3, [fp, #-8]
  44:	mov	r0, r3
  48:	sub	sp, fp, #4
  4c:	ldr	fp, [sp]
  50:	add	sp, sp, #4
  54:	pop	{pc}		; (ldr pc, [sp], #4)

00000058 <bst_apaga>:
  58:	str	fp, [sp, #-8]!
  5c:	str	lr, [sp, #4]
  60:	add	fp, sp, #4
  64:	sub	sp, sp, #8
  68:	str	r0, [fp, #-8]
  6c:	b	9c <bst_apaga+0x44>
  70:	ldr	r3, [fp, #-8]
  74:	ldr	r2, [r3]
  78:	ldr	r3, [fp, #-8]
  7c:	ldr	r3, [r3]
  80:	ldr	r3, [r3]
  84:	mov	r1, r3
  88:	mov	r0, r2
  8c:	bl	5c4 <bst_remove_impl>
  90:	mov	r2, r0
  94:	ldr	r3, [fp, #-8]
  98:	str	r2, [r3]
  9c:	ldr	r3, [fp, #-8]
  a0:	ldr	r3, [r3]
  a4:	cmp	r3, #0
  a8:	bne	70 <bst_apaga+0x18>
  ac:	ldr	r0, [fp, #-8]
  b0:	bl	0 <free>
  b4:	nop	{0}
  b8:	sub	sp, fp, #4
  bc:	ldr	fp, [sp]
  c0:	add	sp, sp, #4
  c4:	pop	{pc}		; (ldr pc, [sp], #4)

000000c8 <bst_pesquisa>:
  c8:	str	fp, [sp, #-8]!
  cc:	str	lr, [sp, #4]
  d0:	add	fp, sp, #4
  d4:	sub	sp, sp, #8
  d8:	str	r0, [fp, #-8]
  dc:	str	r1, [fp, #-12]
  e0:	ldr	r3, [fp, #-8]
  e4:	cmp	r3, #0
  e8:	beq	f8 <bst_pesquisa+0x30>
  ec:	ldr	r3, [fp, #-12]
  f0:	cmp	r3, #0
  f4:	bne	100 <bst_pesquisa+0x38>
  f8:	mov	r3, #0
  fc:	b	118 <bst_pesquisa+0x50>
 100:	ldr	r3, [fp, #-8]
 104:	ldr	r3, [r3]
 108:	ldr	r1, [fp, #-12]
 10c:	mov	r0, r3
 110:	bl	438 <bst_pesquisa_impl>
 114:	mov	r3, r0
 118:	mov	r0, r3
 11c:	sub	sp, fp, #4
 120:	ldr	fp, [sp]
 124:	add	sp, sp, #4
 128:	pop	{pc}		; (ldr pc, [sp], #4)

0000012c <bst_insere>:
 12c:	str	fp, [sp, #-8]!
 130:	str	lr, [sp, #4]
 134:	add	fp, sp, #4
 138:	sub	sp, sp, #8
 13c:	str	r0, [fp, #-8]
 140:	str	r1, [fp, #-12]
 144:	ldr	r3, [fp, #-8]
 148:	cmp	r3, #0
 14c:	beq	15c <bst_insere+0x30>
 150:	ldr	r3, [fp, #-12]
 154:	cmp	r3, #0
 158:	bne	164 <bst_insere+0x38>
 15c:	mvn	r3, #0
 160:	b	188 <bst_insere+0x5c>
 164:	ldr	r3, [fp, #-8]
 168:	ldr	r3, [r3]
 16c:	ldr	r1, [fp, #-12]
 170:	mov	r0, r3
 174:	bl	4f4 <bst_insere_impl>
 178:	mov	r2, r0
 17c:	ldr	r3, [fp, #-8]
 180:	str	r2, [r3]
 184:	mov	r3, #0
 188:	mov	r0, r3
 18c:	sub	sp, fp, #4
 190:	ldr	fp, [sp]
 194:	add	sp, sp, #4
 198:	pop	{pc}		; (ldr pc, [sp], #4)

0000019c <bst_remove>:
 19c:	str	fp, [sp, #-8]!
 1a0:	str	lr, [sp, #4]
 1a4:	add	fp, sp, #4
 1a8:	sub	sp, sp, #8
 1ac:	str	r0, [fp, #-8]
 1b0:	str	r1, [fp, #-12]
 1b4:	ldr	r3, [fp, #-8]
 1b8:	cmp	r3, #0
 1bc:	beq	1cc <bst_remove+0x30>
 1c0:	ldr	r3, [fp, #-12]
 1c4:	cmp	r3, #0
 1c8:	bne	1d4 <bst_remove+0x38>
 1cc:	mvn	r3, #0
 1d0:	b	1f8 <bst_remove+0x5c>
 1d4:	ldr	r3, [fp, #-8]
 1d8:	ldr	r3, [r3]
 1dc:	ldr	r1, [fp, #-12]
 1e0:	mov	r0, r3
 1e4:	bl	5c4 <bst_remove_impl>
 1e8:	mov	r2, r0
 1ec:	ldr	r3, [fp, #-8]
 1f0:	str	r2, [r3]
 1f4:	mov	r3, #0
 1f8:	mov	r0, r3
 1fc:	sub	sp, fp, #4
 200:	ldr	fp, [sp]
 204:	add	sp, sp, #4
 208:	pop	{pc}		; (ldr pc, [sp], #4)

0000020c <bst_min>:
 20c:	str	fp, [sp, #-8]!
 210:	str	lr, [sp, #4]
 214:	add	fp, sp, #4
 218:	sub	sp, sp, #8
 21c:	str	r0, [fp, #-8]
 220:	ldr	r3, [fp, #-8]
 224:	cmp	r3, #0
 228:	bne	234 <bst_min+0x28>
 22c:	mov	r3, #0
 230:	b	24c <bst_min+0x40>
 234:	ldr	r3, [fp, #-8]
 238:	ldr	r3, [r3]
 23c:	mov	r0, r3
 240:	bl	3a0 <bst_no_valormin>
 244:	mov	r3, r0
 248:	ldr	r3, [r3]
 24c:	mov	r0, r3
 250:	sub	sp, fp, #4
 254:	ldr	fp, [sp]
 258:	add	sp, sp, #4
 25c:	pop	{pc}		; (ldr pc, [sp], #4)

00000260 <bst_max>:
 260:	str	fp, [sp, #-8]!
 264:	str	lr, [sp, #4]
 268:	add	fp, sp, #4
 26c:	sub	sp, sp, #8
 270:	str	r0, [fp, #-8]
 274:	ldr	r3, [fp, #-8]
 278:	cmp	r3, #0
 27c:	bne	288 <bst_max+0x28>
 280:	mov	r3, #0
 284:	b	2a0 <bst_max+0x40>
 288:	ldr	r3, [fp, #-8]
 28c:	ldr	r3, [r3]
 290:	mov	r0, r3
 294:	bl	3ec <bst_no_valormax>
 298:	mov	r3, r0
 29c:	ldr	r3, [r3]
 2a0:	mov	r0, r3
 2a4:	sub	sp, fp, #4
 2a8:	ldr	fp, [sp]
 2ac:	add	sp, sp, #4
 2b0:	pop	{pc}		; (ldr pc, [sp], #4)

000002b4 <bst_imprime>:
 2b4:	str	fp, [sp, #-8]!
 2b8:	str	lr, [sp, #4]
 2bc:	add	fp, sp, #4
 2c0:	sub	sp, sp, #8
 2c4:	str	r0, [fp, #-8]
 2c8:	ldr	r3, [fp, #-8]
 2cc:	cmp	r3, #0
 2d0:	beq	2fc <bst_imprime+0x48>
 2d4:	movw	r0, #0
 2d8:	movt	r0, #0
 2dc:	bl	0 <printf>
 2e0:	ldr	r3, [fp, #-8]
 2e4:	ldr	r3, [r3]
 2e8:	mov	r0, r3
 2ec:	bl	900 <bst_preordem_impl>
 2f0:	mov	r0, #10
 2f4:	bl	0 <putchar>
 2f8:	b	300 <bst_imprime+0x4c>
 2fc:	nop	{0}
 300:	sub	sp, fp, #4
 304:	ldr	fp, [sp]
 308:	add	sp, sp, #4
 30c:	pop	{pc}		; (ldr pc, [sp], #4)

00000310 <bst_novo_no>:
 310:	str	fp, [sp, #-8]!
 314:	str	lr, [sp, #4]
 318:	add	fp, sp, #4
 31c:	sub	sp, sp, #16
 320:	str	r0, [fp, #-16]
 324:	mov	r0, #12
 328:	bl	0 <malloc>
 32c:	mov	r3, r0
 330:	str	r3, [fp, #-8]
 334:	ldr	r0, [fp, #-16]
 338:	bl	0 <strlen>
 33c:	mov	r3, r0
 340:	add	r3, r3, #1
 344:	mov	r0, r3
 348:	bl	0 <malloc>
 34c:	mov	r3, r0
 350:	mov	r2, r3
 354:	ldr	r3, [fp, #-8]
 358:	str	r2, [r3]
 35c:	ldr	r3, [fp, #-8]
 360:	ldr	r3, [r3]
 364:	ldr	r1, [fp, #-16]
 368:	mov	r0, r3
 36c:	bl	0 <strcpy>
 370:	ldr	r3, [fp, #-8]
 374:	mov	r2, #0
 378:	str	r2, [r3, #4]
 37c:	ldr	r3, [fp, #-8]
 380:	mov	r2, #0
 384:	str	r2, [r3, #8]
 388:	ldr	r3, [fp, #-8]
 38c:	mov	r0, r3
 390:	sub	sp, fp, #4
 394:	ldr	fp, [sp]
 398:	add	sp, sp, #4
 39c:	pop	{pc}		; (ldr pc, [sp], #4)

000003a0 <bst_no_valormin>:
 3a0:	push	{fp}		; (str fp, [sp, #-4]!)
 3a4:	add	fp, sp, #0
 3a8:	sub	sp, sp, #20
 3ac:	str	r0, [fp, #-16]
 3b0:	ldr	r3, [fp, #-16]
 3b4:	str	r3, [fp, #-8]
 3b8:	b	3c8 <bst_no_valormin+0x28>
 3bc:	ldr	r3, [fp, #-8]
 3c0:	ldr	r3, [r3, #4]
 3c4:	str	r3, [fp, #-8]
 3c8:	ldr	r3, [fp, #-8]
 3cc:	ldr	r3, [r3, #4]
 3d0:	cmp	r3, #0
 3d4:	bne	3bc <bst_no_valormin+0x1c>
 3d8:	ldr	r3, [fp, #-8]
 3dc:	mov	r0, r3
 3e0:	add	sp, fp, #0
 3e4:	pop	{fp}		; (ldr fp, [sp], #4)
 3e8:	bx	lr

000003ec <bst_no_valormax>:
 3ec:	push	{fp}		; (str fp, [sp, #-4]!)
 3f0:	add	fp, sp, #0
 3f4:	sub	sp, sp, #20
 3f8:	str	r0, [fp, #-16]
 3fc:	ldr	r3, [fp, #-16]
 400:	str	r3, [fp, #-8]
 404:	b	414 <bst_no_valormax+0x28>
 408:	ldr	r3, [fp, #-8]
 40c:	ldr	r3, [r3, #8]
 410:	str	r3, [fp, #-8]
 414:	ldr	r3, [fp, #-8]
 418:	ldr	r3, [r3, #8]
 41c:	cmp	r3, #0
 420:	bne	408 <bst_no_valormax+0x1c>
 424:	ldr	r3, [fp, #-8]
 428:	mov	r0, r3
 42c:	add	sp, fp, #0
 430:	pop	{fp}		; (ldr fp, [sp], #4)
 434:	bx	lr

00000438 <bst_pesquisa_impl>:
 438:	str	fp, [sp, #-8]!
 43c:	str	lr, [sp, #4]
 440:	add	fp, sp, #4
 444:	sub	sp, sp, #8
 448:	str	r0, [fp, #-8]
 44c:	str	r1, [fp, #-12]
 450:	ldr	r3, [fp, #-8]
 454:	cmp	r3, #0
 458:	bne	464 <bst_pesquisa_impl+0x2c>
 45c:	mov	r3, #0
 460:	b	4e0 <bst_pesquisa_impl+0xa8>
 464:	ldr	r3, [fp, #-8]
 468:	ldr	r3, [r3]
 46c:	mov	r1, r3
 470:	ldr	r0, [fp, #-12]
 474:	bl	0 <strcmp>
 478:	mov	r3, r0
 47c:	cmp	r3, #0
 480:	bge	4a0 <bst_pesquisa_impl+0x68>
 484:	ldr	r3, [fp, #-8]
 488:	ldr	r3, [r3, #4]
 48c:	ldr	r1, [fp, #-12]
 490:	mov	r0, r3
 494:	bl	438 <bst_pesquisa_impl>
 498:	mov	r3, r0
 49c:	b	4e0 <bst_pesquisa_impl+0xa8>
 4a0:	ldr	r3, [fp, #-8]
 4a4:	ldr	r3, [r3]
 4a8:	mov	r1, r3
 4ac:	ldr	r0, [fp, #-12]
 4b0:	bl	0 <strcmp>
 4b4:	mov	r3, r0
 4b8:	cmp	r3, #0
 4bc:	ble	4dc <bst_pesquisa_impl+0xa4>
 4c0:	ldr	r3, [fp, #-8]
 4c4:	ldr	r3, [r3, #8]
 4c8:	ldr	r1, [fp, #-12]
 4cc:	mov	r0, r3
 4d0:	bl	438 <bst_pesquisa_impl>
 4d4:	mov	r3, r0
 4d8:	b	4e0 <bst_pesquisa_impl+0xa8>
 4dc:	ldr	r3, [fp, #-8]
 4e0:	mov	r0, r3
 4e4:	sub	sp, fp, #4
 4e8:	ldr	fp, [sp]
 4ec:	add	sp, sp, #4
 4f0:	pop	{pc}		; (ldr pc, [sp], #4)

000004f4 <bst_insere_impl>:
 4f4:	str	fp, [sp, #-8]!
 4f8:	str	lr, [sp, #4]
 4fc:	add	fp, sp, #4
 500:	sub	sp, sp, #8
 504:	str	r0, [fp, #-8]
 508:	str	r1, [fp, #-12]
 50c:	ldr	r3, [fp, #-8]
 510:	cmp	r3, #0
 514:	bne	528 <bst_insere_impl+0x34>
 518:	ldr	r0, [fp, #-12]
 51c:	bl	310 <bst_novo_no>
 520:	mov	r3, r0
 524:	b	5b0 <bst_insere_impl+0xbc>
 528:	ldr	r3, [fp, #-8]
 52c:	ldr	r3, [r3]
 530:	mov	r1, r3
 534:	ldr	r0, [fp, #-12]
 538:	bl	0 <strcmp>
 53c:	mov	r3, r0
 540:	cmp	r3, #0
 544:	bge	56c <bst_insere_impl+0x78>
 548:	ldr	r3, [fp, #-8]
 54c:	ldr	r3, [r3, #4]
 550:	ldr	r1, [fp, #-12]
 554:	mov	r0, r3
 558:	bl	4f4 <bst_insere_impl>
 55c:	mov	r2, r0
 560:	ldr	r3, [fp, #-8]
 564:	str	r2, [r3, #4]
 568:	b	5ac <bst_insere_impl+0xb8>
 56c:	ldr	r3, [fp, #-8]
 570:	ldr	r3, [r3]
 574:	mov	r1, r3
 578:	ldr	r0, [fp, #-12]
 57c:	bl	0 <strcmp>
 580:	mov	r3, r0
 584:	cmp	r3, #0
 588:	ble	5ac <bst_insere_impl+0xb8>
 58c:	ldr	r3, [fp, #-8]
 590:	ldr	r3, [r3, #8]
 594:	ldr	r1, [fp, #-12]
 598:	mov	r0, r3
 59c:	bl	4f4 <bst_insere_impl>
 5a0:	mov	r2, r0
 5a4:	ldr	r3, [fp, #-8]
 5a8:	str	r2, [r3, #8]
 5ac:	ldr	r3, [fp, #-8]
 5b0:	mov	r0, r3
 5b4:	sub	sp, fp, #4
 5b8:	ldr	fp, [sp]
 5bc:	add	sp, sp, #4
 5c0:	pop	{pc}		; (ldr pc, [sp], #4)

000005c4 <bst_remove_impl>:
 5c4:	str	r4, [sp, #-12]!
 5c8:	str	fp, [sp, #4]
 5cc:	str	lr, [sp, #8]
 5d0:	add	fp, sp, #8
 5d4:	sub	sp, sp, #20
 5d8:	str	r0, [fp, #-24]	; 0xffffffe8
 5dc:	str	r1, [fp, #-28]	; 0xffffffe4
 5e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5e4:	cmp	r3, #0
 5e8:	bne	5f4 <bst_remove_impl+0x30>
 5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5f0:	b	808 <bst_remove_impl+0x244>
 5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5f8:	ldr	r3, [r3]
 5fc:	mov	r1, r3
 600:	ldr	r0, [fp, #-28]	; 0xffffffe4
 604:	bl	0 <strcmp>
 608:	mov	r3, r0
 60c:	cmp	r3, #0
 610:	bge	638 <bst_remove_impl+0x74>
 614:	ldr	r3, [fp, #-24]	; 0xffffffe8
 618:	ldr	r3, [r3, #4]
 61c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 620:	mov	r0, r3
 624:	bl	5c4 <bst_remove_impl>
 628:	mov	r2, r0
 62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 630:	str	r2, [r3, #4]
 634:	b	804 <bst_remove_impl+0x240>
 638:	ldr	r3, [fp, #-24]	; 0xffffffe8
 63c:	ldr	r3, [r3]
 640:	mov	r1, r3
 644:	ldr	r0, [fp, #-28]	; 0xffffffe4
 648:	bl	0 <strcmp>
 64c:	mov	r3, r0
 650:	cmp	r3, #0
 654:	ble	67c <bst_remove_impl+0xb8>
 658:	ldr	r3, [fp, #-24]	; 0xffffffe8
 65c:	ldr	r3, [r3, #8]
 660:	ldr	r1, [fp, #-28]	; 0xffffffe4
 664:	mov	r0, r3
 668:	bl	5c4 <bst_remove_impl>
 66c:	mov	r2, r0
 670:	ldr	r3, [fp, #-24]	; 0xffffffe8
 674:	str	r2, [r3, #8]
 678:	b	804 <bst_remove_impl+0x240>
 67c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 680:	ldr	r3, [r3, #4]
 684:	cmp	r3, #0
 688:	beq	69c <bst_remove_impl+0xd8>
 68c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 690:	ldr	r3, [r3, #8]
 694:	cmp	r3, #0
 698:	bne	774 <bst_remove_impl+0x1b0>
 69c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6a0:	ldr	r3, [r3, #4]
 6a4:	cmp	r3, #0
 6a8:	beq	6b8 <bst_remove_impl+0xf4>
 6ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6b0:	ldr	r3, [r3, #4]
 6b4:	b	6c0 <bst_remove_impl+0xfc>
 6b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6bc:	ldr	r3, [r3, #8]
 6c0:	str	r3, [fp, #-16]
 6c4:	ldr	r3, [fp, #-16]
 6c8:	cmp	r3, #0
 6cc:	bne	6e4 <bst_remove_impl+0x120>
 6d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6d4:	str	r3, [fp, #-16]
 6d8:	mov	r3, #0
 6dc:	str	r3, [fp, #-24]	; 0xffffffe8
 6e0:	b	758 <bst_remove_impl+0x194>
 6e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6e8:	ldr	r4, [r3]
 6ec:	ldr	r3, [fp, #-16]
 6f0:	ldr	r3, [r3]
 6f4:	mov	r0, r3
 6f8:	bl	0 <strlen>
 6fc:	mov	r3, r0
 700:	add	r3, r3, #1
 704:	mov	r1, r3
 708:	mov	r0, r4
 70c:	bl	0 <realloc>
 710:	mov	r2, r0
 714:	ldr	r3, [fp, #-24]	; 0xffffffe8
 718:	str	r2, [r3]
 71c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 720:	ldr	r2, [r3]
 724:	ldr	r3, [fp, #-16]
 728:	ldr	r3, [r3]
 72c:	mov	r1, r3
 730:	mov	r0, r2
 734:	bl	0 <strcpy>
 738:	ldr	r3, [fp, #-16]
 73c:	ldr	r2, [r3, #4]
 740:	ldr	r3, [fp, #-24]	; 0xffffffe8
 744:	str	r2, [r3, #4]
 748:	ldr	r3, [fp, #-16]
 74c:	ldr	r2, [r3, #8]
 750:	ldr	r3, [fp, #-24]	; 0xffffffe8
 754:	str	r2, [r3, #8]
 758:	ldr	r3, [fp, #-16]
 75c:	ldr	r3, [r3]
 760:	mov	r0, r3
 764:	bl	0 <free>
 768:	ldr	r0, [fp, #-16]
 76c:	bl	0 <free>
 770:	b	804 <bst_remove_impl+0x240>
 774:	ldr	r3, [fp, #-24]	; 0xffffffe8
 778:	ldr	r3, [r3, #8]
 77c:	mov	r0, r3
 780:	bl	3a0 <bst_no_valormin>
 784:	str	r0, [fp, #-20]	; 0xffffffec
 788:	ldr	r3, [fp, #-24]	; 0xffffffe8
 78c:	ldr	r4, [r3]
 790:	ldr	r3, [fp, #-20]	; 0xffffffec
 794:	ldr	r3, [r3]
 798:	mov	r0, r3
 79c:	bl	0 <strlen>
 7a0:	mov	r3, r0
 7a4:	add	r3, r3, #1
 7a8:	mov	r1, r3
 7ac:	mov	r0, r4
 7b0:	bl	0 <realloc>
 7b4:	mov	r2, r0
 7b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7bc:	str	r2, [r3]
 7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7c4:	ldr	r2, [r3]
 7c8:	ldr	r3, [fp, #-20]	; 0xffffffec
 7cc:	ldr	r3, [r3]
 7d0:	mov	r1, r3
 7d4:	mov	r0, r2
 7d8:	bl	0 <strcpy>
 7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7e0:	ldr	r2, [r3, #8]
 7e4:	ldr	r3, [fp, #-20]	; 0xffffffec
 7e8:	ldr	r3, [r3]
 7ec:	mov	r1, r3
 7f0:	mov	r0, r2
 7f4:	bl	5c4 <bst_remove_impl>
 7f8:	mov	r2, r0
 7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 800:	str	r2, [r3, #8]
 804:	ldr	r3, [fp, #-24]	; 0xffffffe8
 808:	mov	r0, r3
 80c:	sub	sp, fp, #8
 810:	ldr	r4, [sp]
 814:	ldr	fp, [sp, #4]
 818:	add	sp, sp, #8
 81c:	pop	{pc}		; (ldr pc, [sp], #4)

00000820 <bst_altura>:
 820:	str	fp, [sp, #-8]!
 824:	str	lr, [sp, #4]
 828:	add	fp, sp, #4
 82c:	sub	sp, sp, #16
 830:	str	r0, [fp, #-16]
 834:	mov	r3, #0
 838:	str	r3, [fp, #-8]
 83c:	mov	r3, #0
 840:	str	r3, [fp, #-12]
 844:	ldr	r3, [fp, #-16]
 848:	cmp	r3, #0
 84c:	bne	858 <bst_altura+0x38>
 850:	mvn	r3, #0
 854:	b	8ec <bst_altura+0xcc>
 858:	ldr	r3, [fp, #-16]
 85c:	ldr	r3, [r3, #8]
 860:	cmp	r3, #0
 864:	bne	880 <bst_altura+0x60>
 868:	ldr	r3, [fp, #-16]
 86c:	ldr	r3, [r3, #4]
 870:	cmp	r3, #0
 874:	bne	880 <bst_altura+0x60>
 878:	mov	r3, #0
 87c:	b	8ec <bst_altura+0xcc>
 880:	ldr	r3, [fp, #-16]
 884:	ldr	r3, [r3, #4]
 888:	mov	r0, r3
 88c:	bl	820 <bst_altura>
 890:	str	r0, [fp, #-8]
 894:	ldr	r3, [fp, #-16]
 898:	ldr	r3, [r3, #8]
 89c:	mov	r0, r3
 8a0:	bl	820 <bst_altura>
 8a4:	str	r0, [fp, #-12]
 8a8:	ldr	r2, [fp, #-8]
 8ac:	ldr	r3, [fp, #-12]
 8b0:	cmp	r2, r3
 8b4:	ble	8d4 <bst_altura+0xb4>
 8b8:	ldr	r3, [fp, #-16]
 8bc:	ldr	r3, [r3, #4]
 8c0:	mov	r0, r3
 8c4:	bl	820 <bst_altura>
 8c8:	mov	r3, r0
 8cc:	add	r3, r3, #1
 8d0:	b	8ec <bst_altura+0xcc>
 8d4:	ldr	r3, [fp, #-16]
 8d8:	ldr	r3, [r3, #8]
 8dc:	mov	r0, r3
 8e0:	bl	820 <bst_altura>
 8e4:	mov	r3, r0
 8e8:	add	r3, r3, #1
 8ec:	mov	r0, r3
 8f0:	sub	sp, fp, #4
 8f4:	ldr	fp, [sp]
 8f8:	add	sp, sp, #4
 8fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000900 <bst_preordem_impl>:
 900:	str	fp, [sp, #-8]!
 904:	str	lr, [sp, #4]
 908:	add	fp, sp, #4
 90c:	sub	sp, sp, #8
 910:	str	r0, [fp, #-8]
 914:	ldr	r3, [fp, #-8]
 918:	cmp	r3, #0
 91c:	beq	960 <bst_preordem_impl+0x60>
 920:	ldr	r3, [fp, #-8]
 924:	ldr	r3, [r3]
 928:	mov	r1, r3
 92c:	movw	r0, #0
 930:	movt	r0, #0
 934:	bl	0 <printf>
 938:	ldr	r3, [fp, #-8]
 93c:	ldr	r3, [r3, #4]
 940:	mov	r0, r3
 944:	bl	900 <bst_preordem_impl>
 948:	ldr	r3, [fp, #-8]
 94c:	ldr	r3, [r3, #8]
 950:	mov	r0, r3
 954:	bl	900 <bst_preordem_impl>
 958:	nop	{0}
 95c:	b	964 <bst_preordem_impl+0x64>
 960:	nop	{0}
 964:	sub	sp, fp, #4
 968:	ldr	fp, [sp]
 96c:	add	sp, sp, #4
 970:	pop	{pc}		; (ldr pc, [sp], #4)
