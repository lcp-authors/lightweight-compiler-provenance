
../compcert-repos/jclehner-nmrpflash-5fc77cc/main.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <require_admin.part.0>:
   0:	movw	r3, #0
   4:	movt	r3, #0
   8:	str	r4, [sp, #-8]!
   c:	movw	r0, #0
  10:	movt	r0, #0
  14:	ldr	r3, [r3]
  18:	mov	r2, #27
  1c:	mov	r1, #1
  20:	str	lr, [sp, #4]
  24:	bl	0 <fwrite>
  28:	mov	r0, #1
  2c:	bl	0 <exit>

00000030 <usage>:
  30:	movw	r2, #0
  34:	movt	r2, #0
  38:	movw	r1, #0
  3c:	movt	r1, #0
  40:	b	0 <fprintf>

00000044 <require_admin>:
  44:	str	r4, [sp, #-8]!
  48:	str	lr, [sp, #4]
  4c:	bl	0 <getuid>
  50:	cmp	r0, #0
  54:	bne	64 <require_admin+0x20>
  58:	ldr	r4, [sp]
  5c:	add	sp, sp, #4
  60:	pop	{pc}		; (ldr pc, [sp], #4)
  64:	bl	0 <require_admin.part.0>

Disassembly of section .text.startup:

00000000 <main>:
   0:	movw	ip, #0
   4:	movt	ip, #0
   8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   c:	ldrd	r4, [ip]
  10:	strd	r6, [sp, #8]
  14:	mov	r7, r0
  18:	mov	r6, r1
  1c:	ldrd	r2, [ip, #8]
  20:	strd	r8, [sp, #16]
  24:	mov	r8, #0
  28:	movw	r9, #0
  2c:	movt	r9, #0
  30:	ldrd	r0, [ip, #16]
  34:	str	lr, [sp, #24]
  38:	sub	sp, sp, #60	; 0x3c
  3c:	movw	lr, #0
  40:	movt	lr, #0
  44:	strd	r4, [sp, #4]
  48:	ldrd	r4, [ip, #32]
  4c:	str	r8, [lr]
  50:	strd	r2, [sp, #12]
  54:	strd	r0, [sp, #20]
  58:	ldrd	r2, [ip, #24]
  5c:	ldrd	r0, [ip, #40]	; 0x28
  60:	ldr	lr, [ip, #48]	; 0x30
  64:	strd	r4, [sp, #36]	; 0x24
  68:	movw	r5, #0
  6c:	movt	r5, #0
  70:	strd	r2, [sp, #28]
  74:	strd	r0, [sp, #44]	; 0x2c
  78:	str	lr, [sp, #52]	; 0x34
  7c:	mov	r2, r5
  80:	mov	r1, r6
  84:	mov	r0, r7
  88:	bl	0 <getopt>
  8c:	cmn	r0, #1
  90:	mov	r4, r0
  94:	beq	344 <main+0x344>
  98:	sub	r3, r4, #65	; 0x41
  9c:	cmp	r3, #53	; 0x35
  a0:	ldrls	pc, [pc, r3, lsl #2]
  a4:	b	2f8 <main+0x2f8>
  a8:	.word	0x0000019c
  ac:	.word	0x000002f8
  b0:	.word	0x000002f8
  b4:	.word	0x000002f8
  b8:	.word	0x000002f8
  bc:	.word	0x00000188
  c0:	.word	0x000002f8
  c4:	.word	0x000002f8
  c8:	.word	0x000002f8
  cc:	.word	0x000002f8
  d0:	.word	0x000002f8
  d4:	.word	0x00000180
  d8:	.word	0x000002d8
  dc:	.word	0x000002f8
  e0:	.word	0x000002f8
  e4:	.word	0x000002f8
  e8:	.word	0x000002f8
  ec:	.word	0x000002c4
  f0:	.word	0x000002f8
  f4:	.word	0x0000027c
  f8:	.word	0x000002f8
  fc:	.word	0x00000260
 100:	.word	0x000002f8
 104:	.word	0x000002f8
 108:	.word	0x000002f8
 10c:	.word	0x000002f8
 110:	.word	0x000002f8
 114:	.word	0x000002f8
 118:	.word	0x000002f8
 11c:	.word	0x000002f8
 120:	.word	0x000002f8
 124:	.word	0x000002f8
 128:	.word	0x0000024c
 12c:	.word	0x000002f8
 130:	.word	0x00000238
 134:	.word	0x000002f8
 138:	.word	0x000002f8
 13c:	.word	0x00000224
 140:	.word	0x000002f8
 144:	.word	0x000001e8
 148:	.word	0x000001d4
 14c:	.word	0x000002f8
 150:	.word	0x000002f8
 154:	.word	0x000002f8
 158:	.word	0x000001c0
 15c:	.word	0x000002f8
 160:	.word	0x000002f8
 164:	.word	0x0000027c
 168:	.word	0x000002f8
 16c:	.word	0x000002f8
 170:	.word	0x000002f8
 174:	.word	0x0000027c
 178:	.word	0x000002f8
 17c:	.word	0x000001b0
 180:	mov	r8, #1
 184:	b	7c <main+0x7c>
 188:	movw	r3, #0
 18c:	movt	r3, #0
 190:	ldr	r3, [r3]
 194:	str	r3, [sp, #20]
 198:	b	7c <main+0x7c>
 19c:	movw	r3, #0
 1a0:	movt	r3, #0
 1a4:	ldr	r3, [r3]
 1a8:	str	r3, [sp, #24]
 1ac:	b	7c <main+0x7c>
 1b0:	ldr	r3, [r9]
 1b4:	add	r3, r3, #1
 1b8:	str	r3, [r9]
 1bc:	b	7c <main+0x7c>
 1c0:	movw	r3, #0
 1c4:	movt	r3, #0
 1c8:	ldr	r3, [r3]
 1cc:	str	r3, [sp, #40]	; 0x28
 1d0:	b	7c <main+0x7c>
 1d4:	movw	r3, #0
 1d8:	movt	r3, #0
 1dc:	ldr	r3, [r3]
 1e0:	str	r3, [sp, #36]	; 0x24
 1e4:	b	7c <main+0x7c>
 1e8:	movw	r3, #0
 1ec:	movt	r3, #0
 1f0:	movw	r2, #0
 1f4:	movt	r2, #0
 1f8:	ldr	r0, [r3]
 1fc:	movw	r1, #0
 200:	movt	r1, #0
 204:	bl	0 <fprintf>
 208:	mov	r0, #0
 20c:	add	sp, sp, #60	; 0x3c
 210:	ldrd	r4, [sp]
 214:	ldrd	r6, [sp, #8]
 218:	ldrd	r8, [sp, #16]
 21c:	add	sp, sp, #24
 220:	pop	{pc}		; (ldr pc, [sp], #4)
 224:	movw	r3, #0
 228:	movt	r3, #0
 22c:	ldr	r3, [r3]
 230:	str	r3, [sp, #16]
 234:	b	7c <main+0x7c>
 238:	movw	r3, #0
 23c:	movt	r3, #0
 240:	ldr	r3, [r3]
 244:	str	r3, [sp, #12]
 248:	b	7c <main+0x7c>
 24c:	movw	r3, #0
 250:	movt	r3, #0
 254:	ldr	r3, [r3]
 258:	str	r3, [sp, #28]
 25c:	b	7c <main+0x7c>
 260:	movw	r1, #0
 264:	movt	r1, #0
 268:	movw	r0, #0
 26c:	movt	r0, #0
 270:	bl	0 <printf>
 274:	mov	r0, #0
 278:	b	20c <main+0x20c>
 27c:	movw	r3, #0
 280:	movt	r3, #0
 284:	cmp	r4, #112	; 0x70
 288:	ldr	r0, [r3]
 28c:	beq	320 <main+0x320>
 290:	mov	r2, #10
 294:	mov	r1, #0
 298:	bl	0 <strtol>
 29c:	cmp	r0, #0
 2a0:	ble	3c4 <main+0x3c4>
 2a4:	cmp	r4, #116	; 0x74
 2a8:	streq	r0, [sp, #4]
 2ac:	beq	7c <main+0x7c>
 2b0:	cmp	r4, #84	; 0x54
 2b4:	moveq	r3, #1000	; 0x3e8
 2b8:	muleq	r3, r3, r0
 2bc:	streq	r3, [sp, #8]
 2c0:	b	7c <main+0x7c>
 2c4:	movw	r3, #0
 2c8:	movt	r3, #0
 2cc:	ldr	r3, [r3]
 2d0:	str	r3, [sp, #52]	; 0x34
 2d4:	b	7c <main+0x7c>
 2d8:	movw	r3, #0
 2dc:	movt	r3, #0
 2e0:	ldr	r3, [r3]
 2e4:	str	r3, [sp, #32]
 2e8:	b	7c <main+0x7c>
 2ec:	ldr	r3, [sp, #12]
 2f0:	cmp	r3, #0
 2f4:	bne	370 <main+0x370>
 2f8:	movw	r3, #0
 2fc:	movt	r3, #0
 300:	movw	r2, #0
 304:	movt	r2, #0
 308:	ldr	r0, [r3]
 30c:	movw	r1, #0
 310:	movt	r1, #0
 314:	bl	0 <fprintf>
 318:	mov	r0, #1
 31c:	b	20c <main+0x20c>
 320:	mov	r2, #10
 324:	mov	r1, #0
 328:	bl	0 <strtol>
 32c:	sub	r2, r0, #1
 330:	movw	r3, #65534	; 0xfffe
 334:	cmp	r2, r3
 338:	bhi	3c4 <main+0x3c4>
 33c:	strh	r0, [sp, #48]	; 0x30
 340:	b	7c <main+0x7c>
 344:	ldr	r3, [sp, #24]
 348:	cmp	r3, #0
 34c:	beq	35c <main+0x35c>
 350:	ldr	r3, [sp, #28]
 354:	cmp	r3, #0
 358:	beq	39c <main+0x39c>
 35c:	cmp	r8, #0
 360:	bne	394 <main+0x394>
 364:	ldr	r3, [sp, #16]
 368:	cmp	r3, #0
 36c:	beq	2ec <main+0x2ec>
 370:	ldr	r3, [sp, #36]	; 0x24
 374:	cmp	r3, #0
 378:	beq	2f8 <main+0x2f8>
 37c:	bl	0 <getuid>
 380:	cmp	r0, #0
 384:	bne	3e8 <main+0x3e8>
 388:	add	r0, sp, #4
 38c:	bl	0 <nmrp_do>
 390:	b	20c <main+0x20c>
 394:	bl	0 <ethsock_list_all>
 398:	b	20c <main+0x20c>
 39c:	movw	r3, #0
 3a0:	movt	r3, #0
 3a4:	movw	r0, #0
 3a8:	movt	r0, #0
 3ac:	ldr	r3, [r3]
 3b0:	mov	r2, #57	; 0x39
 3b4:	mov	r1, #1
 3b8:	bl	0 <fwrite>
 3bc:	mov	r0, #1
 3c0:	b	20c <main+0x20c>
 3c4:	movw	r3, #0
 3c8:	movt	r3, #0
 3cc:	mov	r2, r4
 3d0:	movw	r1, #0
 3d4:	movt	r1, #0
 3d8:	ldr	r0, [r3]
 3dc:	bl	0 <fprintf>
 3e0:	mov	r0, #1
 3e4:	b	20c <main+0x20c>
 3e8:	bl	0 <main>
