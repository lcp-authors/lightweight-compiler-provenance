
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_match_filefilter>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #28
   c:	cmp	r1, #1
  10:	blt	8c <coda_match_filefilter+0x8c>
  14:	cmp	r2, #0
  18:	mov	r5, r2
  1c:	movne	r4, r3
  20:	cmpne	r3, #0
  24:	beq	8c <coda_match_filefilter+0x8c>
  28:	cmp	r0, #0
  2c:	mov	r6, r1
  30:	ldrbne	r1, [r0]
  34:	cmpne	r1, #0
  38:	bne	44 <coda_match_filefilter+0x44>
  3c:	movw	r0, #0
  40:	movt	r0, #0
  44:	add	r1, sp, #8
  48:	bl	0 <coda_expression_from_string>
  4c:	mvn	r7, #0
  50:	cmp	r0, #0
  54:	bne	160 <coda_match_filefilter+0x160>
  58:	ldr	r0, [sp, #8]
  5c:	add	r1, sp, #12
  60:	bl	0 <coda_expression_get_type>
  64:	cmp	r0, #0
  68:	bne	158 <coda_match_filefilter+0x158>
  6c:	ldr	r0, [sp, #12]
  70:	cmp	r0, #0
  74:	beq	b0 <coda_match_filefilter+0xb0>
  78:	movw	r1, #0
  7c:	mvn	r0, #400	; 0x190
  80:	movt	r1, #0
  84:	bl	0 <coda_set_error>
  88:	b	158 <coda_match_filefilter+0x158>
  8c:	movw	r1, #0
  90:	movw	r2, #0
  94:	mvn	r0, #99	; 0x63
  98:	movw	r3, #386	; 0x182
  9c:	movt	r1, #0
  a0:	movt	r2, #0
  a4:	bl	0 <coda_set_error>
  a8:	mvn	r7, #0
  ac:	b	160 <coda_match_filefilter+0x160>
  b0:	mov	r0, #1024	; 0x400
  b4:	mov	r9, #0
  b8:	str	r0, [sp, #20]
  bc:	mov	r0, #1024	; 0x400
  c0:	str	r9, [sp, #16]
  c4:	bl	0 <malloc>
  c8:	cmp	r0, #0
  cc:	str	r0, [sp, #24]
  d0:	beq	16c <coda_match_filefilter+0x16c>
  d4:	add	r8, sp, #16
  d8:	mov	sl, #0
  dc:	ldr	r1, [r5, sl, lsl #2]
  e0:	mov	r0, r8
  e4:	bl	18c <append_string_to_name_buffer>
  e8:	ldr	r0, [fp, #8]
  ec:	ldr	r1, [sp, #8]
  f0:	mov	r2, r8
  f4:	mov	r3, r4
  f8:	str	r0, [sp]
  fc:	mov	r0, #0
 100:	bl	290 <coda_match_filepath>
 104:	cmp	r0, #0
 108:	str	r9, [sp, #16]
 10c:	bne	140 <coda_match_filefilter+0x140>
 110:	ldr	r0, [sp, #24]
 114:	add	sl, sl, #1
 118:	cmp	sl, r6
 11c:	strb	r9, [r0]
 120:	blt	dc <coda_match_filefilter+0xdc>
 124:	mov	r7, #0
 128:	str	r7, [sp, #16]
 12c:	str	r7, [sp, #20]
 130:	ldr	r0, [sp, #24]
 134:	bl	0 <free>
 138:	str	r7, [sp, #24]
 13c:	b	158 <coda_match_filefilter+0x158>
 140:	mov	r4, #0
 144:	mov	r7, r0
 148:	str	r4, [sp, #20]
 14c:	ldr	r0, [sp, #24]
 150:	bl	0 <free>
 154:	str	r4, [sp, #24]
 158:	ldr	r0, [sp, #8]
 15c:	bl	0 <coda_expression_delete>
 160:	mov	r0, r7
 164:	sub	sp, fp, #28
 168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 16c:	movw	r0, #0
 170:	movw	r1, #0
 174:	movw	r3, #0
 178:	mov	r2, #67	; 0x43
 17c:	movt	r0, #0
 180:	movt	r1, #0
 184:	movt	r3, #0
 188:	bl	0 <__assert_fail>

0000018c <append_string_to_name_buffer>:
 18c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 190:	add	fp, sp, #24
 194:	cmp	r0, #0
 198:	beq	230 <append_string_to_name_buffer+0xa4>
 19c:	mov	r5, r1
 1a0:	cmp	r1, #0
 1a4:	beq	250 <append_string_to_name_buffer+0xc4>
 1a8:	mov	r4, r0
 1ac:	mov	r0, r5
 1b0:	bl	0 <strlen>
 1b4:	mov	r6, r0
 1b8:	ldm	r4, {r0, r1}
 1bc:	add	r2, r0, r6
 1c0:	cmp	r2, r1
 1c4:	bge	1d0 <append_string_to_name_buffer+0x44>
 1c8:	ldr	r7, [r4, #8]
 1cc:	b	214 <append_string_to_name_buffer+0x88>
 1d0:	movw	r0, #1023	; 0x3ff
 1d4:	add	r0, r2, r0
 1d8:	sub	r0, r0, r1
 1dc:	bfc	r0, #0, #10
 1e0:	add	r8, r1, r0
 1e4:	mov	r0, r8
 1e8:	bl	0 <malloc>
 1ec:	cmp	r0, #0
 1f0:	beq	270 <append_string_to_name_buffer+0xe4>
 1f4:	ldr	r1, [r4, #8]
 1f8:	mov	r7, r0
 1fc:	bl	0 <strcpy>
 200:	ldr	r0, [r4, #8]
 204:	bl	0 <free>
 208:	str	r8, [r4, #4]
 20c:	str	r7, [r4, #8]
 210:	ldr	r0, [r4]
 214:	add	r0, r7, r0
 218:	mov	r1, r5
 21c:	bl	0 <strcpy>
 220:	ldr	r0, [r4]
 224:	add	r0, r0, r6
 228:	str	r0, [r4]
 22c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 230:	movw	r0, #0
 234:	movw	r1, #0
 238:	movw	r3, #0
 23c:	mov	r2, #84	; 0x54
 240:	movt	r0, #0
 244:	movt	r1, #0
 248:	movt	r3, #0
 24c:	bl	0 <__assert_fail>
 250:	movw	r0, #0
 254:	movw	r1, #0
 258:	movw	r3, #0
 25c:	mov	r2, #85	; 0x55
 260:	movt	r0, #0
 264:	movt	r1, #0
 268:	movt	r3, #0
 26c:	bl	0 <__assert_fail>
 270:	movw	r0, #0
 274:	movw	r1, #0
 278:	movw	r3, #0
 27c:	mov	r2, #100	; 0x64
 280:	movt	r0, #0
 284:	movt	r1, #0
 288:	movt	r3, #0
 28c:	bl	0 <__assert_fail>

00000290 <coda_match_filepath>:
 290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 294:	add	fp, sp, #28
 298:	sub	sp, sp, #636	; 0x27c
 29c:	mov	sl, r1
 2a0:	ldr	r1, [r2, #8]
 2a4:	mov	r6, r2
 2a8:	mov	r4, r0
 2ac:	add	r2, sp, #8
 2b0:	mov	r0, #3
 2b4:	mov	r7, r3
 2b8:	bl	0 <__xstat>
 2bc:	ldr	r8, [fp, #8]
 2c0:	cmp	r0, #0
 2c4:	beq	2ec <coda_match_filepath+0x5c>
 2c8:	bl	0 <__errno_location>
 2cc:	ldr	r0, [r0]
 2d0:	cmp	r0, #20
 2d4:	cmpne	r0, #2
 2d8:	bne	324 <coda_match_filepath+0x94>
 2dc:	ldr	r0, [r6, #8]
 2e0:	movw	r2, #0
 2e4:	movt	r2, #0
 2e8:	b	334 <coda_match_filepath+0xa4>
 2ec:	ldr	r0, [sp, #24]
 2f0:	tst	r0, #16384	; 0x4000
 2f4:	bne	350 <coda_match_filepath+0xc0>
 2f8:	tst	r0, #32768	; 0x8000
 2fc:	bne	424 <coda_match_filepath+0x194>
 300:	mov	r3, r8
 304:	mov	r8, #0
 308:	cmp	r4, #0
 30c:	bne	344 <coda_match_filepath+0xb4>
 310:	ldr	r0, [r6, #8]
 314:	movw	r2, #0
 318:	mov	r1, #0
 31c:	movt	r2, #0
 320:	b	33c <coda_match_filepath+0xac>
 324:	ldr	r4, [r6, #8]
 328:	bl	0 <strerror>
 32c:	mov	r2, r0
 330:	mov	r0, r4
 334:	mov	r1, #0
 338:	mov	r3, r8
 33c:	blx	r7
 340:	mov	r8, r0
 344:	mov	r0, r8
 348:	sub	sp, fp, #28
 34c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 350:	ldr	r0, [r6, #8]
 354:	bl	0 <opendir>
 358:	cmp	r0, #0
 35c:	beq	4a8 <coda_match_filepath+0x218>
 360:	ldr	r9, [r6]
 364:	mov	r5, r0
 368:	str	r7, [sp, #4]
 36c:	bl	0 <readdir>
 370:	cmp	r0, #0
 374:	beq	414 <coda_match_filepath+0x184>
 378:	movw	r4, #0
 37c:	movt	r4, #0
 380:	add	r7, r0, #11
 384:	mov	r1, r4
 388:	mov	r0, r7
 38c:	bl	0 <strcmp>
 390:	cmp	r0, #0
 394:	beq	404 <coda_match_filepath+0x174>
 398:	movw	r1, #0
 39c:	mov	r0, r7
 3a0:	movt	r1, #0
 3a4:	bl	0 <strcmp>
 3a8:	cmp	r0, #0
 3ac:	beq	404 <coda_match_filepath+0x174>
 3b0:	movw	r1, #0
 3b4:	mov	r0, r6
 3b8:	movt	r1, #0
 3bc:	bl	18c <append_string_to_name_buffer>
 3c0:	mov	r0, r6
 3c4:	mov	r1, r7
 3c8:	bl	18c <append_string_to_name_buffer>
 3cc:	ldr	r3, [sp, #4]
 3d0:	mov	r0, #1
 3d4:	mov	r1, sl
 3d8:	mov	r2, r6
 3dc:	mov	r7, r8
 3e0:	str	r8, [sp]
 3e4:	bl	290 <coda_match_filepath>
 3e8:	cmp	r0, #0
 3ec:	bne	4fc <coda_match_filepath+0x26c>
 3f0:	str	r9, [r6]
 3f4:	mov	r1, #0
 3f8:	mov	r8, r7
 3fc:	ldr	r0, [r6, #8]
 400:	strb	r1, [r0, r9]
 404:	mov	r0, r5
 408:	bl	0 <readdir>
 40c:	cmp	r0, #0
 410:	bne	380 <coda_match_filepath+0xf0>
 414:	mov	r0, r5
 418:	bl	0 <closedir>
 41c:	mov	r8, #0
 420:	b	344 <coda_match_filepath+0xb4>
 424:	ldr	r0, [r6, #8]
 428:	sub	r1, fp, #36	; 0x24
 42c:	bl	0 <coda_open>
 430:	mov	r4, r0
 434:	bl	0 <__aeabi_read_tp>
 438:	cmp	r4, #0
 43c:	beq	474 <coda_match_filepath+0x1e4>
 440:	ldr	r1, [pc, #280]	; 560 <coda_match_filepath+0x2d0>
 444:	ldr	r1, [pc, r1]
 448:	ldr	r0, [r0, r1]
 44c:	cmn	r0, #21
 450:	bne	474 <coda_match_filepath+0x1e4>
 454:	mov	r0, #0
 458:	bl	0 <coda_set_option_use_mmap>
 45c:	ldr	r0, [r6, #8]
 460:	sub	r1, fp, #36	; 0x24
 464:	bl	0 <coda_open>
 468:	mov	r4, r0
 46c:	mov	r0, #1
 470:	bl	0 <coda_set_option_use_mmap>
 474:	cmp	r4, #0
 478:	beq	4c0 <coda_match_filepath+0x230>
 47c:	ldr	r0, [pc, #224]	; 564 <coda_match_filepath+0x2d4>
 480:	ldr	r1, [pc, r0]
 484:	bl	0 <__aeabi_read_tp>
 488:	ldr	r0, [r0, r1]
 48c:	ldr	r4, [r6, #8]
 490:	cmn	r0, #200	; 0xc8
 494:	bne	4e8 <coda_match_filepath+0x258>
 498:	mov	r0, r4
 49c:	mov	r1, #3
 4a0:	mov	r2, #0
 4a4:	b	338 <coda_match_filepath+0xa8>
 4a8:	ldr	r0, [r6, #8]
 4ac:	movw	r2, #0
 4b0:	mov	r1, #2
 4b4:	mov	r3, r8
 4b8:	movt	r2, #0
 4bc:	b	33c <coda_match_filepath+0xac>
 4c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
 4c4:	add	r0, sp, #104	; 0x68
 4c8:	bl	0 <coda_cursor_set_product>
 4cc:	cmp	r0, #0
 4d0:	beq	50c <coda_match_filepath+0x27c>
 4d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 4d8:	bl	0 <coda_close>
 4dc:	ldr	r0, [pc, #132]	; 568 <coda_match_filepath+0x2d8>
 4e0:	ldr	r1, [pc, r0]
 4e4:	b	52c <coda_match_filepath+0x29c>
 4e8:	bl	0 <coda_errno_to_string>
 4ec:	mov	r2, r0
 4f0:	mov	r0, r4
 4f4:	mov	r1, #1
 4f8:	b	338 <coda_match_filepath+0xa8>
 4fc:	mov	r8, r0
 500:	mov	r0, r5
 504:	bl	0 <closedir>
 508:	b	344 <coda_match_filepath+0xb4>
 50c:	add	r1, sp, #104	; 0x68
 510:	add	r2, sp, #100	; 0x64
 514:	mov	r0, sl
 518:	bl	0 <coda_expression_eval_bool>
 51c:	cmp	r0, #0
 520:	beq	540 <coda_match_filepath+0x2b0>
 524:	ldr	r0, [pc, #64]	; 56c <coda_match_filepath+0x2dc>
 528:	ldr	r1, [pc, r0]
 52c:	bl	0 <__aeabi_read_tp>
 530:	ldr	r0, [r0, r1]
 534:	ldr	r4, [r6, #8]
 538:	bl	0 <coda_errno_to_string>
 53c:	b	32c <coda_match_filepath+0x9c>
 540:	ldr	r0, [fp, #-36]	; 0xffffffdc
 544:	bl	0 <coda_close>
 548:	ldr	r0, [sp, #100]	; 0x64
 54c:	mov	r1, #4
 550:	cmp	r0, #0
 554:	ldr	r0, [r6, #8]
 558:	movweq	r1, #5
 55c:	b	4a0 <coda_match_filepath+0x210>
 560:	.word	0x00000114
 564:	.word	0x000000dc
 568:	.word	0x00000080
 56c:	.word	0x0000003c
