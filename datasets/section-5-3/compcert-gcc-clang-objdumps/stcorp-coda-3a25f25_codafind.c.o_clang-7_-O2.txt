
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codafind.dir/tools/codafind/codafind.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <callback>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	mov	r3, r2
   c:	mov	r2, r0
  10:	cmp	r1, #2
  14:	beq	b4 <callback+0xb4>
  18:	mov	r4, r1
  1c:	cmp	r1, #1
  20:	beq	e8 <callback+0xe8>
  24:	cmp	r4, #0
  28:	beq	d4 <callback+0xd4>
  2c:	movw	r0, #0
  30:	movt	r0, #0
  34:	ldrb	r0, [r0]
  38:	cmp	r0, #1
  3c:	bne	84 <callback+0x84>
  40:	movw	r0, #0
  44:	mov	r1, r2
  48:	movt	r0, #0
  4c:	bl	0 <printf>
  50:	cmp	r4, #5
  54:	bhi	ac <callback+0xac>
  58:	add	r0, pc, #0
  5c:	ldr	pc, [r0, r4, lsl #2]
  60:	.word	0x00000108
  64:	.word	0x000000ac
  68:	.word	0x000000ac
  6c:	.word	0x00000078
  70:	.word	0x000000a0
  74:	.word	0x00000094
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	b	a8 <callback+0xa8>
  84:	cmp	r4, #4
  88:	bne	ac <callback+0xac>
  8c:	mov	r0, r2
  90:	b	a8 <callback+0xa8>
  94:	movw	r0, #0
  98:	movt	r0, #0
  9c:	b	a8 <callback+0xa8>
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <puts>
  ac:	mov	r0, #0
  b0:	pop	{r4, sl, fp, pc}
  b4:	movw	r0, #0
  b8:	movw	r1, #0
  bc:	movt	r0, #0
  c0:	movt	r1, #0
  c4:	ldr	r0, [r0]
  c8:	bl	0 <fprintf>
  cc:	mov	r0, #0
  d0:	pop	{r4, sl, fp, pc}
  d4:	movw	r0, #0
  d8:	movw	r1, #0
  dc:	movt	r0, #0
  e0:	movt	r1, #0
  e4:	b	f8 <callback+0xf8>
  e8:	movw	r0, #0
  ec:	movw	r1, #0
  f0:	movt	r0, #0
  f4:	movt	r1, #0
  f8:	ldr	r0, [r0]
  fc:	bl	0 <fprintf>
 100:	mov	r0, #0
 104:	pop	{r4, sl, fp, pc}
 108:	movw	r0, #0
 10c:	movw	r1, #0
 110:	movw	r3, #0
 114:	mov	r2, #110	; 0x6e
 118:	movt	r0, #0
 11c:	movt	r1, #0
 120:	movt	r3, #0
 124:	bl	0 <__assert_fail>

00000128 <main>:
 128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 12c:	add	fp, sp, #28
 130:	sub	sp, sp, #12
 134:	mov	r5, r0
 138:	mov	r4, r1
 13c:	movw	r1, #0
 140:	mov	r0, #0
 144:	movt	r1, #0
 148:	cmp	r5, #1
 14c:	strb	r0, [r1]
 150:	beq	3a0 <main+0x278>
 154:	ldr	r6, [r4, #4]
 158:	movw	r1, #0
 15c:	movt	r1, #0
 160:	mov	r0, r6
 164:	bl	0 <strcmp>
 168:	cmp	r0, #0
 16c:	beq	3a0 <main+0x278>
 170:	movw	r1, #0
 174:	mov	r0, r6
 178:	movt	r1, #0
 17c:	bl	0 <strcmp>
 180:	cmp	r0, #0
 184:	beq	3a0 <main+0x278>
 188:	movw	r1, #0
 18c:	mov	r0, r6
 190:	movt	r1, #0
 194:	bl	0 <strcmp>
 198:	cmp	r0, #0
 19c:	beq	3e0 <main+0x2b8>
 1a0:	movw	r1, #0
 1a4:	mov	r0, r6
 1a8:	movt	r1, #0
 1ac:	bl	0 <strcmp>
 1b0:	cmp	r0, #0
 1b4:	beq	3e0 <main+0x2b8>
 1b8:	cmp	r5, #3
 1bc:	blt	1d8 <main+0xb0>
 1c0:	movw	r1, #0
 1c4:	mov	r0, r6
 1c8:	movt	r1, #0
 1cc:	bl	0 <strcmp>
 1d0:	cmp	r0, #0
 1d4:	beq	358 <main+0x230>
 1d8:	ldr	r0, [r4]
 1dc:	movw	r2, #0
 1e0:	mov	r1, #0
 1e4:	movt	r2, #0
 1e8:	bl	0 <coda_set_definition_path_conditional>
 1ec:	mov	sl, #1
 1f0:	cmp	r0, #0
 1f4:	bne	3ac <main+0x284>
 1f8:	mov	r0, #0
 1fc:	cmp	sl, r5
 200:	bge	2fc <main+0x1d4>
 204:	movw	r6, #0
 208:	movw	r9, #0
 20c:	mov	r7, #1
 210:	str	r0, [sp, #8]
 214:	movt	r6, #0
 218:	movt	r9, #0
 21c:	b	22c <main+0x104>
 220:	mov	sl, r0
 224:	str	r1, [sp, #8]
 228:	b	2ec <main+0x1c4>
 22c:	ldr	r8, [r4, sl, lsl #2]
 230:	mov	r1, r6
 234:	mov	r0, r8
 238:	bl	0 <strcmp>
 23c:	cmp	r0, #0
 240:	beq	2e8 <main+0x1c0>
 244:	mov	r0, r8
 248:	mov	r1, r9
 24c:	bl	0 <strcmp>
 250:	cmp	r0, #0
 254:	beq	2e8 <main+0x1c0>
 258:	movw	r1, #0
 25c:	mov	r0, r8
 260:	movt	r1, #0
 264:	bl	0 <strcmp>
 268:	cmp	r0, #0
 26c:	beq	288 <main+0x160>
 270:	movw	r1, #0
 274:	mov	r0, r8
 278:	movt	r1, #0
 27c:	bl	0 <strcmp>
 280:	cmp	r0, #0
 284:	bne	2a4 <main+0x17c>
 288:	add	r0, sl, #1
 28c:	cmp	r0, r5
 290:	bge	2a4 <main+0x17c>
 294:	ldr	r1, [r4, r0, lsl #2]
 298:	ldrb	r2, [r1]
 29c:	cmp	r2, #45	; 0x2d
 2a0:	bne	220 <main+0xf8>
 2a4:	movw	r1, #0
 2a8:	mov	r0, r8
 2ac:	movt	r1, #0
 2b0:	bl	0 <strcmp>
 2b4:	cmp	r0, #0
 2b8:	beq	2d4 <main+0x1ac>
 2bc:	movw	r1, #0
 2c0:	mov	r0, r8
 2c4:	movt	r1, #0
 2c8:	bl	0 <strcmp>
 2cc:	cmp	r0, #0
 2d0:	bne	368 <main+0x240>
 2d4:	movw	r0, #0
 2d8:	mov	r1, #1
 2dc:	movt	r0, #0
 2e0:	strb	r1, [r0]
 2e4:	b	2ec <main+0x1c4>
 2e8:	mov	r7, #0
 2ec:	add	sl, sl, #1
 2f0:	cmp	sl, r5
 2f4:	blt	22c <main+0x104>
 2f8:	b	304 <main+0x1dc>
 2fc:	str	r0, [sp, #8]
 300:	mov	r7, #1
 304:	cmp	sl, r5
 308:	beq	374 <main+0x24c>
 30c:	bl	0 <coda_init>
 310:	cmp	r0, #0
 314:	bne	3ac <main+0x284>
 318:	mov	r0, r7
 31c:	bl	0 <coda_set_option_perform_conversions>
 320:	mov	r0, #0
 324:	movw	r3, #0
 328:	sub	r1, r5, sl
 32c:	add	r2, r4, sl, lsl #2
 330:	str	r0, [sp]
 334:	ldr	r0, [sp, #8]
 338:	movt	r3, #0
 33c:	bl	0 <coda_match_filefilter>
 340:	cmp	r0, #0
 344:	bne	3ac <main+0x284>
 348:	bl	0 <coda_done>
 34c:	mov	r0, #0
 350:	sub	sp, fp, #28
 354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 358:	ldr	r0, [r4, #8]
 35c:	bl	0 <coda_set_definition_path>
 360:	mov	sl, #3
 364:	b	1f8 <main+0xd0>
 368:	ldrb	r0, [r8]
 36c:	cmp	r0, #45	; 0x2d
 370:	bne	304 <main+0x1dc>
 374:	movw	r0, #0
 378:	mov	r1, #25
 37c:	mov	r2, #1
 380:	movt	r0, #0
 384:	ldr	r3, [r0]
 388:	movw	r0, #0
 38c:	movt	r0, #0
 390:	bl	0 <fwrite>
 394:	bl	3ec <print_help>
 398:	mov	r0, #1
 39c:	bl	0 <exit>
 3a0:	bl	3ec <print_help>
 3a4:	mov	r0, #0
 3a8:	bl	0 <exit>
 3ac:	movw	r0, #0
 3b0:	movt	r0, #0
 3b4:	ldr	r4, [r0]
 3b8:	bl	0 <coda_get_errno>
 3bc:	ldr	r0, [r0]
 3c0:	bl	0 <coda_errno_to_string>
 3c4:	movw	r1, #0
 3c8:	mov	r2, r0
 3cc:	mov	r0, r4
 3d0:	movt	r1, #0
 3d4:	bl	0 <fprintf>
 3d8:	mov	r0, #1
 3dc:	bl	0 <exit>
 3e0:	bl	540 <print_version>
 3e4:	mov	r0, #0
 3e8:	bl	0 <exit>

000003ec <print_help>:
 3ec:	push	{fp, lr}
 3f0:	mov	fp, sp
 3f4:	movw	r0, #0
 3f8:	movt	r0, #0
 3fc:	bl	0 <puts>
 400:	movw	r0, #0
 404:	movt	r0, #0
 408:	bl	0 <puts>
 40c:	movw	r0, #0
 410:	movt	r0, #0
 414:	bl	0 <puts>
 418:	movw	r0, #0
 41c:	movt	r0, #0
 420:	bl	0 <puts>
 424:	mov	r0, #10
 428:	bl	0 <putchar>
 42c:	movw	r0, #0
 430:	movt	r0, #0
 434:	bl	0 <puts>
 438:	movw	r0, #0
 43c:	movt	r0, #0
 440:	bl	0 <puts>
 444:	movw	r0, #0
 448:	movt	r0, #0
 44c:	bl	0 <puts>
 450:	movw	r0, #0
 454:	movt	r0, #0
 458:	bl	0 <puts>
 45c:	movw	r0, #0
 460:	movt	r0, #0
 464:	bl	0 <puts>
 468:	movw	r0, #0
 46c:	movt	r0, #0
 470:	bl	0 <puts>
 474:	movw	r0, #0
 478:	movt	r0, #0
 47c:	bl	0 <puts>
 480:	movw	r0, #0
 484:	movt	r0, #0
 488:	bl	0 <puts>
 48c:	movw	r0, #0
 490:	movt	r0, #0
 494:	bl	0 <puts>
 498:	mov	r0, #10
 49c:	bl	0 <putchar>
 4a0:	movw	r0, #0
 4a4:	movt	r0, #0
 4a8:	bl	0 <puts>
 4ac:	movw	r0, #0
 4b0:	movt	r0, #0
 4b4:	bl	0 <puts>
 4b8:	mov	r0, #10
 4bc:	bl	0 <putchar>
 4c0:	movw	r0, #0
 4c4:	movt	r0, #0
 4c8:	bl	0 <puts>
 4cc:	movw	r0, #0
 4d0:	movt	r0, #0
 4d4:	bl	0 <puts>
 4d8:	mov	r0, #10
 4dc:	bl	0 <putchar>
 4e0:	movw	r0, #0
 4e4:	movt	r0, #0
 4e8:	bl	0 <puts>
 4ec:	movw	r0, #0
 4f0:	movt	r0, #0
 4f4:	bl	0 <puts>
 4f8:	movw	r0, #0
 4fc:	movt	r0, #0
 500:	bl	0 <puts>
 504:	movw	r0, #0
 508:	movt	r0, #0
 50c:	bl	0 <puts>
 510:	movw	r0, #0
 514:	movt	r0, #0
 518:	bl	0 <puts>
 51c:	movw	r0, #0
 520:	movt	r0, #0
 524:	bl	0 <puts>
 528:	movw	r0, #0
 52c:	movt	r0, #0
 530:	bl	0 <puts>
 534:	mov	r0, #10
 538:	pop	{fp, lr}
 53c:	b	0 <putchar>

00000540 <print_version>:
 540:	push	{fp, lr}
 544:	mov	fp, sp
 548:	bl	0 <coda_get_libcoda_version>
 54c:	mov	r1, r0
 550:	movw	r0, #0
 554:	movt	r0, #0
 558:	bl	0 <printf>
 55c:	movw	r0, #0
 560:	movt	r0, #0
 564:	bl	0 <puts>
 568:	mov	r0, #10
 56c:	pop	{fp, lr}
 570:	b	0 <putchar>
