
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-traverse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_array_dim>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-16]
      10:	str	r1, [fp, #-20]	; 0xffffffec
      14:	ldr	r2, [fp, #-20]	; 0xffffffec
      18:	mov	r3, r2
      1c:	lsl	r3, r3, #2
      20:	add	r3, r3, r2
      24:	lsl	r3, r3, #4
      28:	add	r3, r3, #800	; 0x320
      2c:	ldr	r2, [pc, #348]	; 190 <print_array_dim+0x190>
      30:	add	r3, r3, r2
      34:	str	r3, [fp, #-12]
      38:	mov	r3, #0
      3c:	str	r3, [fp, #-8]
      40:	b	170 <print_array_dim+0x170>
      44:	ldr	r3, [fp, #-8]
      48:	cmp	r3, #0
      4c:	ble	5c <print_array_dim+0x5c>
      50:	ldr	r1, [fp, #-16]
      54:	mov	r0, #44	; 0x2c
      58:	bl	0 <fputc>
      5c:	ldr	r3, [pc, #304]	; 194 <print_array_dim+0x194>
      60:	ldr	r3, [r3]
      64:	cmp	r3, #0
      68:	beq	11c <print_array_dim+0x11c>
      6c:	ldr	r3, [fp, #-12]
      70:	ldr	r2, [r3]
      74:	ldr	r3, [fp, #-8]
      78:	add	r3, r2, r3
      7c:	ldr	r2, [pc, #276]	; 198 <print_array_dim+0x198>
      80:	add	r3, r3, #18
      84:	ldr	r3, [r2, r3, lsl #2]
      88:	cmp	r3, #0
      8c:	beq	e8 <print_array_dim+0xe8>
      90:	ldr	r3, [fp, #-12]
      94:	ldr	r2, [r3]
      98:	ldr	r3, [fp, #-8]
      9c:	add	r3, r2, r3
      a0:	ldr	r2, [pc, #240]	; 198 <print_array_dim+0x198>
      a4:	add	r3, r3, #8
      a8:	lsl	r3, r3, #2
      ac:	add	r3, r2, r3
      b0:	ldr	r1, [r3, #4]
      b4:	ldr	r3, [fp, #-12]
      b8:	ldr	r2, [r3]
      bc:	ldr	r3, [fp, #-8]
      c0:	add	r3, r2, r3
      c4:	ldr	r2, [pc, #204]	; 198 <print_array_dim+0x198>
      c8:	lsl	r3, r3, #2
      cc:	add	r3, r2, r3
      d0:	ldr	r3, [r3, #4]
      d4:	mov	r2, r1
      d8:	ldr	r1, [pc, #188]	; 19c <print_array_dim+0x19c>
      dc:	ldr	r0, [fp, #-16]
      e0:	bl	0 <fprintf>
      e4:	b	164 <print_array_dim+0x164>
      e8:	ldr	r3, [fp, #-12]
      ec:	ldr	r2, [r3]
      f0:	ldr	r3, [fp, #-8]
      f4:	add	r3, r2, r3
      f8:	ldr	r2, [pc, #152]	; 198 <print_array_dim+0x198>
      fc:	lsl	r3, r3, #2
     100:	add	r3, r2, r3
     104:	ldr	r3, [r3, #4]
     108:	mov	r2, r3
     10c:	ldr	r1, [pc, #140]	; 1a0 <print_array_dim+0x1a0>
     110:	ldr	r0, [fp, #-16]
     114:	bl	0 <fprintf>
     118:	b	164 <print_array_dim+0x164>
     11c:	ldr	r3, [fp, #-12]
     120:	ldr	r2, [fp, #-8]
     124:	add	r2, r2, #2
     128:	ldr	r3, [r3, r2, lsl #2]
     12c:	cmn	r3, #1
     130:	bne	144 <print_array_dim+0x144>
     134:	ldr	r1, [fp, #-16]
     138:	mov	r0, #63	; 0x3f
     13c:	bl	0 <fputc>
     140:	b	164 <print_array_dim+0x164>
     144:	ldr	r3, [fp, #-12]
     148:	ldr	r2, [fp, #-8]
     14c:	add	r2, r2, #2
     150:	ldr	r3, [r3, r2, lsl #2]
     154:	mov	r2, r3
     158:	ldr	r1, [pc, #64]	; 1a0 <print_array_dim+0x1a0>
     15c:	ldr	r0, [fp, #-16]
     160:	bl	0 <fprintf>
     164:	ldr	r3, [fp, #-8]
     168:	add	r3, r3, #1
     16c:	str	r3, [fp, #-8]
     170:	ldr	r3, [fp, #-12]
     174:	ldr	r2, [r3, #4]
     178:	ldr	r3, [fp, #-8]
     17c:	cmp	r2, r3
     180:	bgt	44 <print_array_dim+0x44>
     184:	nop			; (mov r0, r0)
     188:	sub	sp, fp, #4
     18c:	pop	{fp, pc}
	...
     1a0:	.word	0x00000008

000001a4 <print_full_field_name>:
     1a4:	push	{fp, lr}
     1a8:	add	fp, sp, #4
     1ac:	sub	sp, sp, #40	; 0x28
     1b0:	str	r0, [fp, #-32]	; 0xffffffe0
     1b4:	str	r1, [fp, #-36]	; 0xffffffdc
     1b8:	str	r2, [fp, #-40]	; 0xffffffd8
     1bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
     1c0:	cmp	r3, #1
     1c4:	bne	344 <print_full_field_name+0x1a0>
     1c8:	mov	r3, #0
     1cc:	str	r3, [fp, #-12]
     1d0:	mov	r3, #0
     1d4:	str	r3, [fp, #-16]
     1d8:	mov	r3, #0
     1dc:	str	r3, [fp, #-8]
     1e0:	b	2e8 <print_full_field_name+0x144>
     1e4:	ldr	r2, [pc, #892]	; 568 <print_full_field_name+0x3c4>
     1e8:	ldr	r3, [fp, #-8]
     1ec:	add	r3, r3, #2
     1f0:	ldr	r3, [r2, r3, lsl #2]
     1f4:	sub	r2, fp, #24
     1f8:	mov	r1, r2
     1fc:	mov	r0, r3
     200:	bl	0 <coda_type_get_class>
     204:	mov	r3, r0
     208:	cmp	r3, #0
     20c:	beq	214 <print_full_field_name+0x70>
     210:	bl	0 <handle_coda_error>
     214:	ldr	r3, [fp, #-24]	; 0xffffffe8
     218:	cmp	r3, #0
     21c:	beq	22c <print_full_field_name+0x88>
     220:	cmp	r3, #1
     224:	beq	264 <print_full_field_name+0xc0>
     228:	b	2dc <print_full_field_name+0x138>
     22c:	ldr	r2, [pc, #820]	; 568 <print_full_field_name+0x3c4>
     230:	ldr	r3, [fp, #-12]
     234:	add	r3, r3, #904	; 0x388
     238:	lsl	r3, r3, #2
     23c:	add	r3, r2, r3
     240:	ldr	r3, [r3, #4]
     244:	mov	r2, r3
     248:	ldr	r1, [pc, #796]	; 56c <print_full_field_name+0x3c8>
     24c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     250:	bl	0 <fprintf>
     254:	ldr	r3, [fp, #-12]
     258:	add	r3, r3, #1
     25c:	str	r3, [fp, #-12]
     260:	b	2dc <print_full_field_name+0x138>
     264:	ldr	r3, [fp, #-8]
     268:	cmp	r3, #0
     26c:	bne	27c <print_full_field_name+0xd8>
     270:	ldr	r1, [fp, #-32]	; 0xffffffe0
     274:	mov	r0, #47	; 0x2f
     278:	bl	0 <fputc>
     27c:	ldr	r1, [pc, #740]	; 568 <print_full_field_name+0x3c4>
     280:	ldr	r2, [fp, #-16]
     284:	mov	r3, r2
     288:	lsl	r3, r3, #2
     28c:	add	r3, r3, r2
     290:	lsl	r3, r3, #4
     294:	add	r3, r1, r3
     298:	add	r3, r3, #804	; 0x324
     29c:	ldr	r3, [r3]
     2a0:	cmp	r3, #0
     2a4:	ble	2cc <print_full_field_name+0x128>
     2a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
     2ac:	mov	r0, #91	; 0x5b
     2b0:	bl	0 <fputc>
     2b4:	ldr	r1, [fp, #-16]
     2b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     2bc:	bl	0 <print_array_dim>
     2c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
     2c4:	mov	r0, #93	; 0x5d
     2c8:	bl	0 <fputc>
     2cc:	ldr	r3, [fp, #-16]
     2d0:	add	r3, r3, #1
     2d4:	str	r3, [fp, #-16]
     2d8:	nop			; (mov r0, r0)
     2dc:	ldr	r3, [fp, #-8]
     2e0:	add	r3, r3, #1
     2e4:	str	r3, [fp, #-8]
     2e8:	ldr	r3, [pc, #632]	; 568 <print_full_field_name+0x3c4>
     2ec:	ldr	r2, [r3, #136]	; 0x88
     2f0:	ldr	r3, [fp, #-8]
     2f4:	cmp	r2, r3
     2f8:	bgt	1e4 <print_full_field_name+0x40>
     2fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     300:	cmp	r3, #0
     304:	beq	55c <print_full_field_name+0x3b8>
     308:	ldr	r3, [pc, #600]	; 568 <print_full_field_name+0x3c4>
     30c:	ldr	r2, [r3, #3360]	; 0xd20
     310:	ldr	r3, [fp, #-16]
     314:	cmp	r2, r3
     318:	ble	55c <print_full_field_name+0x3b8>
     31c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     320:	mov	r0, #91	; 0x5b
     324:	bl	0 <fputc>
     328:	ldr	r1, [fp, #-16]
     32c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     330:	bl	0 <print_array_dim>
     334:	ldr	r1, [fp, #-32]	; 0xffffffe0
     338:	mov	r0, #93	; 0x5d
     33c:	bl	0 <fputc>
     340:	b	55c <print_full_field_name+0x3b8>
     344:	mov	r3, #0
     348:	str	r3, [fp, #-8]
     34c:	b	398 <print_full_field_name+0x1f4>
     350:	ldr	r3, [fp, #-8]
     354:	cmp	r3, #0
     358:	ble	368 <print_full_field_name+0x1c4>
     35c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     360:	mov	r0, #46	; 0x2e
     364:	bl	0 <fputc>
     368:	ldr	r2, [pc, #504]	; 568 <print_full_field_name+0x3c4>
     36c:	ldr	r3, [fp, #-8]
     370:	add	r3, r3, #904	; 0x388
     374:	lsl	r3, r3, #2
     378:	add	r3, r2, r3
     37c:	ldr	r3, [r3, #4]
     380:	ldr	r1, [fp, #-32]	; 0xffffffe0
     384:	mov	r0, r3
     388:	bl	0 <fputs>
     38c:	ldr	r3, [fp, #-8]
     390:	add	r3, r3, #1
     394:	str	r3, [fp, #-8]
     398:	ldr	r3, [pc, #456]	; 568 <print_full_field_name+0x3c4>
     39c:	ldr	r2, [r3, #3748]	; 0xea4
     3a0:	ldr	r3, [fp, #-8]
     3a4:	cmp	r2, r3
     3a8:	bgt	350 <print_full_field_name+0x1ac>
     3ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
     3b0:	cmp	r3, #2
     3b4:	bne	55c <print_full_field_name+0x3b8>
     3b8:	mov	r3, #0
     3bc:	str	r3, [fp, #-20]	; 0xffffffec
     3c0:	mov	r3, #0
     3c4:	str	r3, [fp, #-8]
     3c8:	b	4a8 <print_full_field_name+0x304>
     3cc:	ldr	r2, [pc, #404]	; 568 <print_full_field_name+0x3c4>
     3d0:	ldr	r3, [fp, #-8]
     3d4:	add	r3, r3, #2
     3d8:	ldr	r3, [r2, r3, lsl #2]
     3dc:	sub	r2, fp, #28
     3e0:	mov	r1, r2
     3e4:	mov	r0, r3
     3e8:	bl	0 <coda_type_get_class>
     3ec:	mov	r3, r0
     3f0:	cmp	r3, #0
     3f4:	beq	3fc <print_full_field_name+0x258>
     3f8:	bl	0 <handle_coda_error>
     3fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     400:	cmp	r3, #1
     404:	bne	49c <print_full_field_name+0x2f8>
     408:	ldr	r1, [pc, #344]	; 568 <print_full_field_name+0x3c4>
     40c:	ldr	r2, [fp, #-20]	; 0xffffffec
     410:	mov	r3, r2
     414:	lsl	r3, r3, #2
     418:	add	r3, r3, r2
     41c:	lsl	r3, r3, #4
     420:	add	r3, r1, r3
     424:	add	r3, r3, #804	; 0x324
     428:	ldr	r3, [r3]
     42c:	cmp	r3, #0
     430:	ble	49c <print_full_field_name+0x2f8>
     434:	ldr	r1, [pc, #300]	; 568 <print_full_field_name+0x3c4>
     438:	ldr	r2, [fp, #-20]	; 0xffffffec
     43c:	mov	r3, r2
     440:	lsl	r3, r3, #2
     444:	add	r3, r3, r2
     448:	lsl	r3, r3, #4
     44c:	add	r3, r1, r3
     450:	add	r3, r3, #800	; 0x320
     454:	ldr	r3, [r3]
     458:	cmp	r3, #0
     45c:	bne	478 <print_full_field_name+0x2d4>
     460:	ldr	r3, [fp, #-32]	; 0xffffffe0
     464:	mov	r2, #2
     468:	mov	r1, #1
     46c:	ldr	r0, [pc, #252]	; 570 <print_full_field_name+0x3cc>
     470:	bl	0 <fwrite>
     474:	b	484 <print_full_field_name+0x2e0>
     478:	ldr	r1, [fp, #-32]	; 0xffffffe0
     47c:	mov	r0, #44	; 0x2c
     480:	bl	0 <fputc>
     484:	ldr	r1, [fp, #-20]	; 0xffffffec
     488:	ldr	r0, [fp, #-32]	; 0xffffffe0
     48c:	bl	0 <print_array_dim>
     490:	ldr	r3, [fp, #-20]	; 0xffffffec
     494:	add	r3, r3, #1
     498:	str	r3, [fp, #-20]	; 0xffffffec
     49c:	ldr	r3, [fp, #-8]
     4a0:	add	r3, r3, #1
     4a4:	str	r3, [fp, #-8]
     4a8:	ldr	r3, [pc, #184]	; 568 <print_full_field_name+0x3c4>
     4ac:	ldr	r2, [r3, #136]	; 0x88
     4b0:	ldr	r3, [fp, #-8]
     4b4:	cmp	r2, r3
     4b8:	bgt	3cc <print_full_field_name+0x228>
     4bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     4c0:	cmp	r3, #0
     4c4:	beq	544 <print_full_field_name+0x3a0>
     4c8:	ldr	r3, [pc, #152]	; 568 <print_full_field_name+0x3c4>
     4cc:	ldr	r2, [r3, #3360]	; 0xd20
     4d0:	ldr	r3, [fp, #-20]	; 0xffffffec
     4d4:	cmp	r2, r3
     4d8:	ble	544 <print_full_field_name+0x3a0>
     4dc:	ldr	r1, [pc, #132]	; 568 <print_full_field_name+0x3c4>
     4e0:	ldr	r2, [fp, #-20]	; 0xffffffec
     4e4:	mov	r3, r2
     4e8:	lsl	r3, r3, #2
     4ec:	add	r3, r3, r2
     4f0:	lsl	r3, r3, #4
     4f4:	add	r3, r1, r3
     4f8:	add	r3, r3, #800	; 0x320
     4fc:	ldr	r3, [r3]
     500:	cmp	r3, #0
     504:	bne	520 <print_full_field_name+0x37c>
     508:	ldr	r3, [fp, #-32]	; 0xffffffe0
     50c:	mov	r2, #2
     510:	mov	r1, #1
     514:	ldr	r0, [pc, #84]	; 570 <print_full_field_name+0x3cc>
     518:	bl	0 <fwrite>
     51c:	b	52c <print_full_field_name+0x388>
     520:	ldr	r1, [fp, #-32]	; 0xffffffe0
     524:	mov	r0, #44	; 0x2c
     528:	bl	0 <fputc>
     52c:	ldr	r1, [fp, #-20]	; 0xffffffec
     530:	ldr	r0, [fp, #-32]	; 0xffffffe0
     534:	bl	0 <print_array_dim>
     538:	ldr	r3, [fp, #-20]	; 0xffffffec
     53c:	add	r3, r3, #1
     540:	str	r3, [fp, #-20]	; 0xffffffec
     544:	ldr	r3, [fp, #-20]	; 0xffffffec
     548:	cmp	r3, #0
     54c:	ble	55c <print_full_field_name+0x3b8>
     550:	ldr	r1, [fp, #-32]	; 0xffffffe0
     554:	mov	r0, #93	; 0x5d
     558:	bl	0 <fputc>
     55c:	nop			; (mov r0, r0)
     560:	sub	sp, fp, #4
     564:	pop	{fp, pc}
     568:	.word	0x00000000
     56c:	.word	0x0000000c
     570:	.word	0x00000010

00000574 <traverse_info_init>:
     574:	push	{fp}		; (str fp, [sp, #-4]!)
     578:	add	fp, sp, #0
     57c:	ldr	r3, [pc, #56]	; 5bc <traverse_info_init+0x48>
     580:	mov	r2, #0
     584:	str	r2, [r3, #4]
     588:	ldr	r3, [pc, #44]	; 5bc <traverse_info_init+0x48>
     58c:	mov	r2, #0
     590:	str	r2, [r3, #136]	; 0x88
     594:	ldr	r3, [pc, #32]	; 5bc <traverse_info_init+0x48>
     598:	mov	r2, #0
     59c:	str	r2, [r3, #3360]	; 0xd20
     5a0:	ldr	r3, [pc, #20]	; 5bc <traverse_info_init+0x48>
     5a4:	mov	r2, #0
     5a8:	str	r2, [r3, #3748]	; 0xea4
     5ac:	nop			; (mov r0, r0)
     5b0:	add	sp, fp, #0
     5b4:	pop	{fp}		; (ldr fp, [sp], #4)
     5b8:	bx	lr
     5bc:	.word	0x00000000

000005c0 <traverse_info_done>:
     5c0:	push	{fp, lr}
     5c4:	add	fp, sp, #4
     5c8:	ldr	r3, [pc, #56]	; 608 <traverse_info_done+0x48>
     5cc:	ldr	r3, [r3, #4]
     5d0:	cmp	r3, #0
     5d4:	beq	5e8 <traverse_info_done+0x28>
     5d8:	ldr	r3, [pc, #40]	; 608 <traverse_info_done+0x48>
     5dc:	ldr	r3, [r3, #4]
     5e0:	mov	r0, r3
     5e4:	bl	0 <coda_close>
     5e8:	ldr	r3, [pc, #24]	; 608 <traverse_info_done+0x48>
     5ec:	ldr	r3, [r3, #664]	; 0x298
     5f0:	cmp	r3, #0
     5f4:	beq	600 <traverse_info_done+0x40>
     5f8:	ldr	r0, [pc, #12]	; 60c <traverse_info_done+0x4c>
     5fc:	bl	0 <codadump_filter_remove>
     600:	nop			; (mov r0, r0)
     604:	pop	{fp, pc}
     608:	.word	0x00000000
     60c:	.word	0x00000298

00000610 <handle_data_element>:
     610:	push	{fp, lr}
     614:	add	fp, sp, #4
     618:	sub	sp, sp, #24
     61c:	ldr	r3, [pc, #720]	; 8f4 <handle_data_element+0x2e4>
     620:	ldr	r3, [r3]
     624:	cmp	r3, #0
     628:	bne	8d4 <handle_data_element+0x2c4>
     62c:	ldr	r3, [pc, #708]	; 8f8 <handle_data_element+0x2e8>
     630:	ldr	r3, [r3]
     634:	mov	r2, #0
     638:	mov	r1, #1
     63c:	mov	r0, r3
     640:	bl	1a4 <print_full_field_name>
     644:	ldr	r3, [pc, #688]	; 8fc <handle_data_element+0x2ec>
     648:	ldr	r3, [r3]
     64c:	cmp	r3, #0
     650:	beq	7a4 <handle_data_element+0x194>
     654:	ldr	r3, [pc, #676]	; 900 <handle_data_element+0x2f0>
     658:	ldr	r3, [r3, #136]	; 0x88
     65c:	ldr	r2, [pc, #668]	; 900 <handle_data_element+0x2f0>
     660:	add	r3, r3, #2
     664:	ldr	r3, [r2, r3, lsl #2]
     668:	sub	r2, fp, #12
     66c:	mov	r1, r2
     670:	mov	r0, r3
     674:	bl	0 <coda_type_get_class>
     678:	mov	r3, r0
     67c:	cmp	r3, #0
     680:	beq	688 <handle_data_element+0x78>
     684:	bl	0 <handle_coda_error>
     688:	ldr	r3, [fp, #-12]
     68c:	cmp	r3, #6
     690:	bne	6e8 <handle_data_element+0xd8>
     694:	ldr	r3, [pc, #612]	; 900 <handle_data_element+0x2f0>
     698:	ldr	r3, [r3, #136]	; 0x88
     69c:	ldr	r2, [pc, #604]	; 900 <handle_data_element+0x2f0>
     6a0:	add	r3, r3, #2
     6a4:	ldr	r3, [r2, r3, lsl #2]
     6a8:	sub	r2, fp, #16
     6ac:	mov	r1, r2
     6b0:	mov	r0, r3
     6b4:	bl	0 <coda_type_get_special_type>
     6b8:	mov	r3, r0
     6bc:	cmp	r3, #0
     6c0:	beq	6c8 <handle_data_element+0xb8>
     6c4:	bl	0 <handle_coda_error>
     6c8:	ldr	r3, [fp, #-16]
     6cc:	mov	r0, r3
     6d0:	bl	0 <coda_type_get_special_type_name>
     6d4:	mov	r3, r0
     6d8:	mov	r1, r3
     6dc:	ldr	r0, [pc, #544]	; 904 <handle_data_element+0x2f4>
     6e0:	bl	0 <printf>
     6e4:	b	7a4 <handle_data_element+0x194>
     6e8:	ldr	r3, [pc, #528]	; 900 <handle_data_element+0x2f0>
     6ec:	ldr	r3, [r3, #136]	; 0x88
     6f0:	ldr	r2, [pc, #520]	; 900 <handle_data_element+0x2f0>
     6f4:	add	r3, r3, #2
     6f8:	ldr	r3, [r2, r3, lsl #2]
     6fc:	sub	r2, fp, #20
     700:	mov	r1, r2
     704:	mov	r0, r3
     708:	bl	0 <coda_type_get_read_type>
     70c:	mov	r3, r0
     710:	cmp	r3, #0
     714:	beq	71c <handle_data_element+0x10c>
     718:	bl	0 <handle_coda_error>
     71c:	ldr	r3, [fp, #-20]	; 0xffffffec
     720:	mov	r0, r3
     724:	bl	0 <coda_type_get_native_type_name>
     728:	mov	r3, r0
     72c:	mov	r1, r3
     730:	ldr	r0, [pc, #460]	; 904 <handle_data_element+0x2f4>
     734:	bl	0 <printf>
     738:	ldr	r3, [fp, #-20]	; 0xffffffec
     73c:	cmp	r3, #11
     740:	beq	750 <handle_data_element+0x140>
     744:	ldr	r3, [fp, #-20]	; 0xffffffec
     748:	cmp	r3, #12
     74c:	bne	7a4 <handle_data_element+0x194>
     750:	mov	r0, #40	; 0x28
     754:	bl	0 <putchar>
     758:	ldr	r3, [pc, #416]	; 900 <handle_data_element+0x2f0>
     75c:	ldr	r3, [r3, #3360]	; 0xd20
     760:	cmp	r3, #0
     764:	bgt	77c <handle_data_element+0x16c>
     768:	ldr	r3, [pc, #408]	; 908 <handle_data_element+0x2f8>
     76c:	mov	r2, #238	; 0xee
     770:	ldr	r1, [pc, #404]	; 90c <handle_data_element+0x2fc>
     774:	ldr	r0, [pc, #404]	; 910 <handle_data_element+0x300>
     778:	bl	0 <__assert_fail>
     77c:	ldr	r3, [pc, #372]	; 8f8 <handle_data_element+0x2e8>
     780:	ldr	r2, [r3]
     784:	ldr	r3, [pc, #372]	; 900 <handle_data_element+0x2f0>
     788:	ldr	r3, [r3, #3360]	; 0xd20
     78c:	sub	r3, r3, #1
     790:	mov	r1, r3
     794:	mov	r0, r2
     798:	bl	0 <print_array_dim>
     79c:	mov	r0, #41	; 0x29
     7a0:	bl	0 <putchar>
     7a4:	ldr	r3, [pc, #360]	; 914 <handle_data_element+0x304>
     7a8:	ldr	r3, [r3]
     7ac:	cmp	r3, #0
     7b0:	beq	814 <handle_data_element+0x204>
     7b4:	ldr	r3, [pc, #324]	; 900 <handle_data_element+0x2f0>
     7b8:	ldr	r3, [r3, #136]	; 0x88
     7bc:	ldr	r2, [pc, #316]	; 900 <handle_data_element+0x2f0>
     7c0:	add	r3, r3, #2
     7c4:	ldr	r3, [r2, r3, lsl #2]
     7c8:	sub	r2, fp, #24
     7cc:	mov	r1, r2
     7d0:	mov	r0, r3
     7d4:	bl	0 <coda_type_get_unit>
     7d8:	mov	r3, r0
     7dc:	cmp	r3, #0
     7e0:	beq	7e8 <handle_data_element+0x1d8>
     7e4:	bl	0 <handle_coda_error>
     7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7ec:	cmp	r3, #0
     7f0:	beq	814 <handle_data_element+0x204>
     7f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7f8:	ldrb	r3, [r3]
     7fc:	cmp	r3, #0
     800:	beq	814 <handle_data_element+0x204>
     804:	ldr	r3, [fp, #-24]	; 0xffffffe8
     808:	mov	r1, r3
     80c:	ldr	r0, [pc, #260]	; 918 <handle_data_element+0x308>
     810:	bl	0 <printf>
     814:	ldr	r3, [pc, #256]	; 91c <handle_data_element+0x30c>
     818:	ldr	r3, [r3]
     81c:	cmp	r3, #0
     820:	beq	884 <handle_data_element+0x274>
     824:	ldr	r3, [pc, #212]	; 900 <handle_data_element+0x2f0>
     828:	ldr	r3, [r3, #136]	; 0x88
     82c:	ldr	r2, [pc, #204]	; 900 <handle_data_element+0x2f0>
     830:	add	r3, r3, #2
     834:	ldr	r3, [r2, r3, lsl #2]
     838:	sub	r2, fp, #28
     83c:	mov	r1, r2
     840:	mov	r0, r3
     844:	bl	0 <coda_type_get_description>
     848:	mov	r3, r0
     84c:	cmp	r3, #0
     850:	beq	858 <handle_data_element+0x248>
     854:	bl	0 <handle_coda_error>
     858:	ldr	r3, [fp, #-28]	; 0xffffffe4
     85c:	cmp	r3, #0
     860:	beq	884 <handle_data_element+0x274>
     864:	ldr	r3, [fp, #-28]	; 0xffffffe4
     868:	ldrb	r3, [r3]
     86c:	cmp	r3, #0
     870:	beq	884 <handle_data_element+0x274>
     874:	ldr	r3, [fp, #-28]	; 0xffffffe4
     878:	mov	r1, r3
     87c:	ldr	r0, [pc, #156]	; 920 <handle_data_element+0x310>
     880:	bl	0 <printf>
     884:	mov	r0, #10
     888:	bl	0 <putchar>
     88c:	ldr	r3, [pc, #144]	; 924 <handle_data_element+0x314>
     890:	ldr	r3, [r3]
     894:	cmp	r3, #0
     898:	beq	8e8 <handle_data_element+0x2d8>
     89c:	mov	r3, #0
     8a0:	str	r3, [fp, #-8]
     8a4:	b	8bc <handle_data_element+0x2ac>
     8a8:	ldr	r0, [fp, #-8]
     8ac:	bl	0 <print_all_distinct_dims>
     8b0:	ldr	r3, [fp, #-8]
     8b4:	add	r3, r3, #1
     8b8:	str	r3, [fp, #-8]
     8bc:	ldr	r3, [pc, #100]	; 928 <handle_data_element+0x318>
     8c0:	ldr	r2, [r3]
     8c4:	ldr	r3, [fp, #-8]
     8c8:	cmp	r2, r3
     8cc:	bgt	8a8 <handle_data_element+0x298>
     8d0:	b	8e8 <handle_data_element+0x2d8>
     8d4:	ldr	r3, [pc, #24]	; 8f4 <handle_data_element+0x2e4>
     8d8:	ldr	r3, [r3]
     8dc:	cmp	r3, #1
     8e0:	bne	8e8 <handle_data_element+0x2d8>
     8e4:	bl	0 <export_data_element_to_ascii>
     8e8:	nop			; (mov r0, r0)
     8ec:	sub	sp, fp, #4
     8f0:	pop	{fp, pc}
	...
     904:	.word	0x00000014
     908:	.word	0x000000e4
     90c:	.word	0x00000018
     910:	.word	0x00000070
     914:	.word	0x00000000
     918:	.word	0x00000090
     91c:	.word	0x00000000
     920:	.word	0x00000098
	...

0000092c <traverse_record>:
     92c:	push	{fp, lr}
     930:	add	fp, sp, #4
     934:	sub	sp, sp, #16
     938:	str	r0, [fp, #-16]
     93c:	str	r1, [fp, #-20]	; 0xffffffec
     940:	ldr	r3, [pc, #432]	; af8 <traverse_record+0x1cc>
     944:	ldr	r3, [r3, #3748]	; 0xea4
     948:	sub	r3, r3, #1
     94c:	ldr	r2, [pc, #420]	; af8 <traverse_record+0x1cc>
     950:	add	r3, r3, #872	; 0x368
     954:	lsl	r3, r3, #2
     958:	add	r3, r2, r3
     95c:	ldr	r2, [fp, #-16]
     960:	str	r2, [r3, #4]
     964:	ldr	r3, [pc, #396]	; af8 <traverse_record+0x1cc>
     968:	ldr	r3, [r3, #136]	; 0x88
     96c:	sub	r3, r3, #1
     970:	ldr	r2, [pc, #384]	; af8 <traverse_record+0x1cc>
     974:	add	r3, r3, #2
     978:	ldr	r3, [r2, r3, lsl #2]
     97c:	sub	r2, fp, #8
     980:	ldr	r1, [fp, #-16]
     984:	mov	r0, r3
     988:	bl	0 <coda_type_get_record_field_hidden_status>
     98c:	mov	r3, r0
     990:	cmp	r3, #0
     994:	beq	99c <traverse_record+0x70>
     998:	bl	0 <handle_coda_error>
     99c:	ldr	r3, [fp, #-8]
     9a0:	cmp	r3, #0
     9a4:	beq	9b4 <traverse_record+0x88>
     9a8:	ldr	r3, [fp, #-20]	; 0xffffffec
     9ac:	cmp	r3, #0
     9b0:	beq	ae4 <traverse_record+0x1b8>
     9b4:	ldr	r3, [pc, #320]	; afc <traverse_record+0x1d0>
     9b8:	ldr	r3, [r3]
     9bc:	cmp	r3, #0
     9c0:	beq	a3c <traverse_record+0x110>
     9c4:	ldr	r3, [pc, #300]	; af8 <traverse_record+0x1cc>
     9c8:	ldr	r3, [r3, #136]	; 0x88
     9cc:	sub	r3, r3, #1
     9d0:	ldr	r2, [pc, #288]	; af8 <traverse_record+0x1cc>
     9d4:	add	r3, r3, #2
     9d8:	ldr	r3, [r2, r3, lsl #2]
     9dc:	sub	r2, fp, #12
     9e0:	ldr	r1, [fp, #-16]
     9e4:	mov	r0, r3
     9e8:	bl	0 <coda_type_get_record_field_available_status>
     9ec:	mov	r3, r0
     9f0:	cmp	r3, #0
     9f4:	beq	9fc <traverse_record+0xd0>
     9f8:	bl	0 <handle_coda_error>
     9fc:	ldr	r3, [fp, #-12]
     a00:	cmn	r3, #1
     a04:	bne	a18 <traverse_record+0xec>
     a08:	bl	0 <dim_record_field_available>
     a0c:	mov	r3, r0
     a10:	cmp	r3, #0
     a14:	beq	aec <traverse_record+0x1c0>
     a18:	ldr	r3, [pc, #216]	; af8 <traverse_record+0x1cc>
     a1c:	ldr	r3, [r3, #136]	; 0x88
     a20:	sub	r3, r3, #1
     a24:	ldr	r2, [fp, #-12]
     a28:	ldr	r1, [pc, #200]	; af8 <traverse_record+0x1cc>
     a2c:	add	r3, r3, #840	; 0x348
     a30:	lsl	r3, r3, #2
     a34:	add	r3, r1, r3
     a38:	str	r2, [r3, #4]
     a3c:	ldr	r3, [pc, #180]	; af8 <traverse_record+0x1cc>
     a40:	ldr	r3, [r3, #136]	; 0x88
     a44:	sub	r3, r3, #1
     a48:	ldr	r2, [pc, #168]	; af8 <traverse_record+0x1cc>
     a4c:	add	r3, r3, #2
     a50:	ldr	r0, [r2, r3, lsl #2]
     a54:	ldr	r3, [pc, #156]	; af8 <traverse_record+0x1cc>
     a58:	ldr	r3, [r3, #3748]	; 0xea4
     a5c:	sub	r3, r3, #1
     a60:	add	r3, r3, #904	; 0x388
     a64:	lsl	r3, r3, #2
     a68:	ldr	r2, [pc, #136]	; af8 <traverse_record+0x1cc>
     a6c:	add	r3, r3, r2
     a70:	add	r3, r3, #4
     a74:	mov	r2, r3
     a78:	ldr	r1, [fp, #-16]
     a7c:	bl	0 <coda_type_get_record_field_name>
     a80:	mov	r3, r0
     a84:	cmp	r3, #0
     a88:	beq	a90 <traverse_record+0x164>
     a8c:	bl	0 <handle_coda_error>
     a90:	ldr	r3, [pc, #96]	; af8 <traverse_record+0x1cc>
     a94:	ldr	r3, [r3, #136]	; 0x88
     a98:	sub	r3, r3, #1
     a9c:	ldr	r2, [pc, #84]	; af8 <traverse_record+0x1cc>
     aa0:	add	r3, r3, #2
     aa4:	ldr	r0, [r2, r3, lsl #2]
     aa8:	ldr	r3, [pc, #72]	; af8 <traverse_record+0x1cc>
     aac:	ldr	r3, [r3, #136]	; 0x88
     ab0:	add	r3, r3, #2
     ab4:	lsl	r3, r3, #2
     ab8:	ldr	r2, [pc, #56]	; af8 <traverse_record+0x1cc>
     abc:	add	r3, r3, r2
     ac0:	mov	r2, r3
     ac4:	ldr	r1, [fp, #-16]
     ac8:	bl	0 <coda_type_get_record_field_type>
     acc:	mov	r3, r0
     ad0:	cmp	r3, #0
     ad4:	beq	adc <traverse_record+0x1b0>
     ad8:	bl	0 <handle_coda_error>
     adc:	bl	b00 <traverse_data>
     ae0:	b	af0 <traverse_record+0x1c4>
     ae4:	nop			; (mov r0, r0)
     ae8:	b	af0 <traverse_record+0x1c4>
     aec:	nop			; (mov r0, r0)
     af0:	sub	sp, fp, #4
     af4:	pop	{fp, pc}
	...

00000b00 <traverse_data>:
     b00:	push	{r4, fp, lr}
     b04:	add	fp, sp, #8
     b08:	sub	sp, sp, #36	; 0x24
     b0c:	ldr	r3, [pc, #1336]	; 104c <traverse_data+0x54c>
     b10:	ldr	r3, [r3, #136]	; 0x88
     b14:	ldr	r2, [pc, #1328]	; 104c <traverse_data+0x54c>
     b18:	add	r3, r3, #2
     b1c:	ldr	r3, [r2, r3, lsl #2]
     b20:	sub	r2, fp, #24
     b24:	mov	r1, r2
     b28:	mov	r0, r3
     b2c:	bl	0 <coda_type_get_class>
     b30:	mov	r3, r0
     b34:	cmp	r3, #0
     b38:	beq	b40 <traverse_data+0x40>
     b3c:	bl	0 <handle_coda_error>
     b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b44:	cmp	r3, #6
     b48:	ldrls	pc, [pc, r3, lsl #2]
     b4c:	b	1044 <traverse_data+0x544>
     b50:	.word	0x00000b6c
     b54:	.word	0x00000dfc
     b58:	.word	0x00000eb4
     b5c:	.word	0x00000eb4
     b60:	.word	0x00000eb4
     b64:	.word	0x00000eb4
     b68:	.word	0x00000f3c
     b6c:	ldr	r3, [pc, #1240]	; 104c <traverse_data+0x54c>
     b70:	ldr	r3, [r3, #136]	; 0x88
     b74:	cmp	r3, #30
     b78:	bgt	1030 <traverse_data+0x530>
     b7c:	ldr	r3, [pc, #1224]	; 104c <traverse_data+0x54c>
     b80:	ldr	r3, [r3, #3748]	; 0xea4
     b84:	add	r3, r3, #1
     b88:	ldr	r2, [pc, #1212]	; 104c <traverse_data+0x54c>
     b8c:	str	r3, [r2, #3748]	; 0xea4
     b90:	ldr	r3, [pc, #1204]	; 104c <traverse_data+0x54c>
     b94:	ldr	r3, [r3, #136]	; 0x88
     b98:	ldr	r2, [pc, #1196]	; 104c <traverse_data+0x54c>
     b9c:	add	r3, r3, #2
     ba0:	ldr	r3, [r2, r3, lsl #2]
     ba4:	sub	r2, fp, #28
     ba8:	mov	r1, r2
     bac:	mov	r0, r3
     bb0:	bl	0 <coda_type_get_num_record_fields>
     bb4:	mov	r3, r0
     bb8:	cmp	r3, #0
     bbc:	beq	bc4 <traverse_data+0xc4>
     bc0:	bl	0 <handle_coda_error>
     bc4:	ldr	r3, [pc, #1152]	; 104c <traverse_data+0x54c>
     bc8:	ldr	r3, [r3, #136]	; 0x88
     bcc:	add	r3, r3, #1
     bd0:	ldr	r2, [pc, #1140]	; 104c <traverse_data+0x54c>
     bd4:	str	r3, [r2, #136]	; 0x88
     bd8:	ldr	r3, [pc, #1132]	; 104c <traverse_data+0x54c>
     bdc:	ldr	r3, [r3, #796]	; 0x31c
     be0:	ldr	r2, [pc, #1124]	; 104c <traverse_data+0x54c>
     be4:	add	r3, r3, #166	; 0xa6
     be8:	ldr	r3, [r2, r3, lsl #2]
     bec:	cmp	r3, #0
     bf0:	beq	d98 <traverse_data+0x298>
     bf4:	ldr	r3, [pc, #1104]	; 104c <traverse_data+0x54c>
     bf8:	ldr	r3, [r3, #796]	; 0x31c
     bfc:	ldr	r2, [pc, #1096]	; 104c <traverse_data+0x54c>
     c00:	add	r3, r3, #166	; 0xa6
     c04:	ldr	r3, [r2, r3, lsl #2]
     c08:	str	r3, [fp, #-16]
     c0c:	b	d60 <traverse_data+0x260>
     c10:	ldr	r3, [pc, #1076]	; 104c <traverse_data+0x54c>
     c14:	ldr	r3, [r3, #796]	; 0x31c
     c18:	ldr	r2, [pc, #1068]	; 104c <traverse_data+0x54c>
     c1c:	add	r3, r3, #166	; 0xa6
     c20:	ldr	r3, [r2, r3, lsl #2]
     c24:	mov	r0, r3
     c28:	bl	0 <codadump_filter_get_fieldname>
     c2c:	str	r0, [fp, #-20]	; 0xffffffec
     c30:	ldr	r3, [fp, #-20]	; 0xffffffec
     c34:	cmp	r3, #0
     c38:	bne	c50 <traverse_data+0x150>
     c3c:	ldr	r3, [pc, #1036]	; 1050 <traverse_data+0x550>
     c40:	ldr	r2, [pc, #1036]	; 1054 <traverse_data+0x554>
     c44:	ldr	r1, [pc, #1036]	; 1058 <traverse_data+0x558>
     c48:	ldr	r0, [pc, #1036]	; 105c <traverse_data+0x55c>
     c4c:	bl	0 <__assert_fail>
     c50:	ldr	r3, [pc, #1012]	; 104c <traverse_data+0x54c>
     c54:	ldr	r3, [r3, #136]	; 0x88
     c58:	sub	r3, r3, #1
     c5c:	ldr	r2, [pc, #1000]	; 104c <traverse_data+0x54c>
     c60:	add	r3, r3, #2
     c64:	ldr	r3, [r2, r3, lsl #2]
     c68:	sub	r2, fp, #32
     c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
     c70:	mov	r0, r3
     c74:	bl	0 <coda_type_get_record_field_index_from_name>
     c78:	mov	r3, r0
     c7c:	cmp	r3, #0
     c80:	beq	cbc <traverse_data+0x1bc>
     c84:	bl	0 <coda_get_errno>
     c88:	mov	r3, r0
     c8c:	ldr	r3, [r3]
     c90:	cmn	r3, #102	; 0x66
     c94:	bne	cb8 <traverse_data+0x1b8>
     c98:	ldr	r3, [pc, #960]	; 1060 <traverse_data+0x560>
     c9c:	ldr	r3, [r3]
     ca0:	ldr	r2, [fp, #-20]	; 0xffffffec
     ca4:	ldr	r1, [pc, #952]	; 1064 <traverse_data+0x564>
     ca8:	mov	r0, r3
     cac:	bl	0 <fprintf>
     cb0:	mov	r0, #1
     cb4:	bl	0 <exit>
     cb8:	bl	0 <handle_coda_error>
     cbc:	ldr	r3, [pc, #904]	; 104c <traverse_data+0x54c>
     cc0:	ldr	r3, [r3, #796]	; 0x31c
     cc4:	add	r4, r3, #1
     cc8:	ldr	r3, [pc, #892]	; 104c <traverse_data+0x54c>
     ccc:	ldr	r3, [r3, #796]	; 0x31c
     cd0:	ldr	r2, [pc, #884]	; 104c <traverse_data+0x54c>
     cd4:	add	r3, r3, #166	; 0xa6
     cd8:	ldr	r3, [r2, r3, lsl #2]
     cdc:	mov	r0, r3
     ce0:	bl	0 <codadump_filter_get_subfilter>
     ce4:	mov	r1, r0
     ce8:	ldr	r2, [pc, #860]	; 104c <traverse_data+0x54c>
     cec:	add	r3, r4, #166	; 0xa6
     cf0:	str	r1, [r2, r3, lsl #2]
     cf4:	ldr	r3, [pc, #848]	; 104c <traverse_data+0x54c>
     cf8:	ldr	r3, [r3, #796]	; 0x31c
     cfc:	add	r3, r3, #1
     d00:	ldr	r2, [pc, #836]	; 104c <traverse_data+0x54c>
     d04:	str	r3, [r2, #796]	; 0x31c
     d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d0c:	mov	r1, #1
     d10:	mov	r0, r3
     d14:	bl	92c <traverse_record>
     d18:	ldr	r3, [pc, #812]	; 104c <traverse_data+0x54c>
     d1c:	ldr	r3, [r3, #796]	; 0x31c
     d20:	sub	r3, r3, #1
     d24:	ldr	r2, [pc, #800]	; 104c <traverse_data+0x54c>
     d28:	str	r3, [r2, #796]	; 0x31c
     d2c:	ldr	r3, [pc, #792]	; 104c <traverse_data+0x54c>
     d30:	ldr	r4, [r3, #796]	; 0x31c
     d34:	ldr	r3, [pc, #784]	; 104c <traverse_data+0x54c>
     d38:	ldr	r3, [r3, #796]	; 0x31c
     d3c:	ldr	r2, [pc, #776]	; 104c <traverse_data+0x54c>
     d40:	add	r3, r3, #166	; 0xa6
     d44:	ldr	r3, [r2, r3, lsl #2]
     d48:	mov	r0, r3
     d4c:	bl	0 <codadump_filter_get_next_filter>
     d50:	mov	r1, r0
     d54:	ldr	r2, [pc, #752]	; 104c <traverse_data+0x54c>
     d58:	add	r3, r4, #166	; 0xa6
     d5c:	str	r1, [r2, r3, lsl #2]
     d60:	ldr	r3, [pc, #740]	; 104c <traverse_data+0x54c>
     d64:	ldr	r3, [r3, #796]	; 0x31c
     d68:	ldr	r2, [pc, #732]	; 104c <traverse_data+0x54c>
     d6c:	add	r3, r3, #166	; 0xa6
     d70:	ldr	r3, [r2, r3, lsl #2]
     d74:	cmp	r3, #0
     d78:	bne	c10 <traverse_data+0x110>
     d7c:	ldr	r3, [pc, #712]	; 104c <traverse_data+0x54c>
     d80:	ldr	r3, [r3, #796]	; 0x31c
     d84:	ldr	r1, [pc, #704]	; 104c <traverse_data+0x54c>
     d88:	add	r3, r3, #166	; 0xa6
     d8c:	ldr	r2, [fp, #-16]
     d90:	str	r2, [r1, r3, lsl #2]
     d94:	b	dd0 <traverse_data+0x2d0>
     d98:	mov	r3, #0
     d9c:	str	r3, [fp, #-32]	; 0xffffffe0
     da0:	b	dc0 <traverse_data+0x2c0>
     da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     da8:	mov	r1, #0
     dac:	mov	r0, r3
     db0:	bl	92c <traverse_record>
     db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     db8:	add	r3, r3, #1
     dbc:	str	r3, [fp, #-32]	; 0xffffffe0
     dc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     dc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dc8:	cmp	r2, r3
     dcc:	blt	da4 <traverse_data+0x2a4>
     dd0:	ldr	r3, [pc, #628]	; 104c <traverse_data+0x54c>
     dd4:	ldr	r3, [r3, #136]	; 0x88
     dd8:	sub	r3, r3, #1
     ddc:	ldr	r2, [pc, #616]	; 104c <traverse_data+0x54c>
     de0:	str	r3, [r2, #136]	; 0x88
     de4:	ldr	r3, [pc, #608]	; 104c <traverse_data+0x54c>
     de8:	ldr	r3, [r3, #3748]	; 0xea4
     dec:	sub	r3, r3, #1
     df0:	ldr	r2, [pc, #596]	; 104c <traverse_data+0x54c>
     df4:	str	r3, [r2, #3748]	; 0xea4
     df8:	b	1044 <traverse_data+0x544>
     dfc:	ldr	r3, [pc, #584]	; 104c <traverse_data+0x54c>
     e00:	ldr	r3, [r3, #136]	; 0x88
     e04:	cmp	r3, #30
     e08:	bgt	1038 <traverse_data+0x538>
     e0c:	bl	0 <dim_enter_array>
     e10:	ldr	r3, [pc, #564]	; 104c <traverse_data+0x54c>
     e14:	ldr	r3, [r3, #3360]	; 0xd20
     e18:	add	r3, r3, #1
     e1c:	ldr	r2, [pc, #552]	; 104c <traverse_data+0x54c>
     e20:	str	r3, [r2, #3360]	; 0xd20
     e24:	ldr	r3, [pc, #544]	; 104c <traverse_data+0x54c>
     e28:	ldr	r3, [r3, #136]	; 0x88
     e2c:	add	r3, r3, #1
     e30:	ldr	r2, [pc, #532]	; 104c <traverse_data+0x54c>
     e34:	str	r3, [r2, #136]	; 0x88
     e38:	ldr	r3, [pc, #524]	; 104c <traverse_data+0x54c>
     e3c:	ldr	r3, [r3, #136]	; 0x88
     e40:	sub	r3, r3, #1
     e44:	ldr	r2, [pc, #512]	; 104c <traverse_data+0x54c>
     e48:	add	r3, r3, #2
     e4c:	ldr	r0, [r2, r3, lsl #2]
     e50:	ldr	r3, [pc, #500]	; 104c <traverse_data+0x54c>
     e54:	ldr	r3, [r3, #136]	; 0x88
     e58:	add	r3, r3, #2
     e5c:	lsl	r3, r3, #2
     e60:	ldr	r2, [pc, #484]	; 104c <traverse_data+0x54c>
     e64:	add	r3, r3, r2
     e68:	mov	r1, r3
     e6c:	bl	0 <coda_type_get_array_base_type>
     e70:	mov	r3, r0
     e74:	cmp	r3, #0
     e78:	beq	e80 <traverse_data+0x380>
     e7c:	bl	0 <handle_coda_error>
     e80:	bl	b00 <traverse_data>
     e84:	ldr	r3, [pc, #448]	; 104c <traverse_data+0x54c>
     e88:	ldr	r3, [r3, #136]	; 0x88
     e8c:	sub	r3, r3, #1
     e90:	ldr	r2, [pc, #436]	; 104c <traverse_data+0x54c>
     e94:	str	r3, [r2, #136]	; 0x88
     e98:	ldr	r3, [pc, #428]	; 104c <traverse_data+0x54c>
     e9c:	ldr	r3, [r3, #3360]	; 0xd20
     ea0:	sub	r3, r3, #1
     ea4:	ldr	r2, [pc, #416]	; 104c <traverse_data+0x54c>
     ea8:	str	r3, [r2, #3360]	; 0xd20
     eac:	bl	0 <dim_leave_array>
     eb0:	b	1044 <traverse_data+0x544>
     eb4:	ldr	r3, [pc, #400]	; 104c <traverse_data+0x54c>
     eb8:	ldr	r3, [r3, #136]	; 0x88
     ebc:	ldr	r2, [pc, #392]	; 104c <traverse_data+0x54c>
     ec0:	add	r3, r3, #2
     ec4:	ldr	r3, [r2, r3, lsl #2]
     ec8:	sub	r2, fp, #36	; 0x24
     ecc:	mov	r1, r2
     ed0:	mov	r0, r3
     ed4:	bl	0 <coda_type_get_read_type>
     ed8:	mov	r3, r0
     edc:	cmp	r3, #0
     ee0:	beq	ee8 <traverse_data+0x3e8>
     ee4:	bl	0 <handle_coda_error>
     ee8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     eec:	sub	r3, r3, #11
     ef0:	cmp	r3, #1
     ef4:	bhi	f30 <traverse_data+0x430>
     ef8:	bl	0 <dim_enter_array>
     efc:	ldr	r3, [pc, #328]	; 104c <traverse_data+0x54c>
     f00:	ldr	r3, [r3, #3360]	; 0xd20
     f04:	add	r3, r3, #1
     f08:	ldr	r2, [pc, #316]	; 104c <traverse_data+0x54c>
     f0c:	str	r3, [r2, #3360]	; 0xd20
     f10:	bl	610 <handle_data_element>
     f14:	ldr	r3, [pc, #304]	; 104c <traverse_data+0x54c>
     f18:	ldr	r3, [r3, #3360]	; 0xd20
     f1c:	sub	r3, r3, #1
     f20:	ldr	r2, [pc, #292]	; 104c <traverse_data+0x54c>
     f24:	str	r3, [r2, #3360]	; 0xd20
     f28:	bl	0 <dim_leave_array>
     f2c:	b	f38 <traverse_data+0x438>
     f30:	bl	610 <handle_data_element>
     f34:	nop			; (mov r0, r0)
     f38:	b	1044 <traverse_data+0x544>
     f3c:	bl	0 <coda_get_option_bypass_special_types>
     f40:	mov	r3, r0
     f44:	cmp	r3, #0
     f48:	beq	f98 <traverse_data+0x498>
     f4c:	ldr	r3, [pc, #248]	; 104c <traverse_data+0x54c>
     f50:	ldr	r3, [r3, #136]	; 0x88
     f54:	ldr	r2, [pc, #240]	; 104c <traverse_data+0x54c>
     f58:	add	r3, r3, #2
     f5c:	ldr	r0, [r2, r3, lsl #2]
     f60:	ldr	r3, [pc, #228]	; 104c <traverse_data+0x54c>
     f64:	ldr	r3, [r3, #136]	; 0x88
     f68:	add	r3, r3, #2
     f6c:	lsl	r3, r3, #2
     f70:	ldr	r2, [pc, #212]	; 104c <traverse_data+0x54c>
     f74:	add	r3, r3, r2
     f78:	mov	r1, r3
     f7c:	bl	0 <coda_type_get_special_base_type>
     f80:	mov	r3, r0
     f84:	cmp	r3, #0
     f88:	beq	f90 <traverse_data+0x490>
     f8c:	bl	0 <handle_coda_error>
     f90:	bl	b00 <traverse_data>
     f94:	b	1044 <traverse_data+0x544>
     f98:	ldr	r3, [pc, #172]	; 104c <traverse_data+0x54c>
     f9c:	ldr	r3, [r3, #136]	; 0x88
     fa0:	ldr	r2, [pc, #164]	; 104c <traverse_data+0x54c>
     fa4:	add	r3, r3, #2
     fa8:	ldr	r3, [r2, r3, lsl #2]
     fac:	sub	r2, fp, #40	; 0x28
     fb0:	mov	r1, r2
     fb4:	mov	r0, r3
     fb8:	bl	0 <coda_type_get_special_type>
     fbc:	mov	r3, r0
     fc0:	cmp	r3, #0
     fc4:	beq	fcc <traverse_data+0x4cc>
     fc8:	bl	0 <handle_coda_error>
     fcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     fd0:	cmp	r3, #3
     fd4:	ldrls	pc, [pc, r3, lsl #2]
     fd8:	b	1040 <traverse_data+0x540>
     fdc:	.word	0x00001040
     fe0:	.word	0x00000fec
     fe4:	.word	0x00000fec
     fe8:	.word	0x00000ff4
     fec:	bl	610 <handle_data_element>
     ff0:	b	102c <traverse_data+0x52c>
     ff4:	bl	0 <dim_enter_array>
     ff8:	ldr	r3, [pc, #76]	; 104c <traverse_data+0x54c>
     ffc:	ldr	r3, [r3, #3360]	; 0xd20
    1000:	add	r3, r3, #1
    1004:	ldr	r2, [pc, #64]	; 104c <traverse_data+0x54c>
    1008:	str	r3, [r2, #3360]	; 0xd20
    100c:	bl	610 <handle_data_element>
    1010:	ldr	r3, [pc, #52]	; 104c <traverse_data+0x54c>
    1014:	ldr	r3, [r3, #3360]	; 0xd20
    1018:	sub	r3, r3, #1
    101c:	ldr	r2, [pc, #40]	; 104c <traverse_data+0x54c>
    1020:	str	r3, [r2, #3360]	; 0xd20
    1024:	bl	0 <dim_leave_array>
    1028:	nop			; (mov r0, r0)
    102c:	b	1040 <traverse_data+0x540>
    1030:	nop			; (mov r0, r0)
    1034:	b	1044 <traverse_data+0x544>
    1038:	nop			; (mov r0, r0)
    103c:	b	1044 <traverse_data+0x544>
    1040:	nop			; (mov r0, r0)
    1044:	sub	sp, fp, #8
    1048:	pop	{r4, fp, pc}
    104c:	.word	0x00000000
    1050:	.word	0x000000f8
    1054:	.word	0x00000189
    1058:	.word	0x00000018
    105c:	.word	0x000000a0
    1060:	.word	0x00000000
    1064:	.word	0x000000b0

00001068 <traverse_product>:
    1068:	push	{fp, lr}
    106c:	add	fp, sp, #4
    1070:	sub	sp, sp, #8
    1074:	ldr	r3, [pc, #236]	; 1168 <traverse_product+0x100>
    1078:	ldr	r3, [r3]
    107c:	ldr	r1, [pc, #232]	; 116c <traverse_product+0x104>
    1080:	mov	r0, r3
    1084:	bl	0 <coda_open>
    1088:	str	r0, [fp, #-8]
    108c:	ldr	r3, [fp, #-8]
    1090:	cmp	r3, #0
    1094:	beq	10d4 <traverse_product+0x6c>
    1098:	bl	0 <coda_get_errno>
    109c:	mov	r3, r0
    10a0:	ldr	r3, [r3]
    10a4:	cmn	r3, #21
    10a8:	bne	10d4 <traverse_product+0x6c>
    10ac:	mov	r0, #0
    10b0:	bl	0 <coda_set_option_use_mmap>
    10b4:	ldr	r3, [pc, #172]	; 1168 <traverse_product+0x100>
    10b8:	ldr	r3, [r3]
    10bc:	ldr	r1, [pc, #168]	; 116c <traverse_product+0x104>
    10c0:	mov	r0, r3
    10c4:	bl	0 <coda_open>
    10c8:	str	r0, [fp, #-8]
    10cc:	mov	r0, #1
    10d0:	bl	0 <coda_set_option_use_mmap>
    10d4:	ldr	r3, [fp, #-8]
    10d8:	cmp	r3, #0
    10dc:	beq	10e4 <traverse_product+0x7c>
    10e0:	bl	0 <handle_coda_error>
    10e4:	ldr	r3, [pc, #124]	; 1168 <traverse_product+0x100>
    10e8:	ldr	r3, [r3, #4]
    10ec:	mov	r1, r3
    10f0:	ldr	r0, [pc, #120]	; 1170 <traverse_product+0x108>
    10f4:	bl	0 <coda_cursor_set_product>
    10f8:	mov	r3, r0
    10fc:	cmp	r3, #0
    1100:	beq	1108 <traverse_product+0xa0>
    1104:	bl	0 <handle_coda_error>
    1108:	ldr	r3, [pc, #88]	; 1168 <traverse_product+0x100>
    110c:	ldr	r3, [r3, #136]	; 0x88
    1110:	add	r3, r3, #2
    1114:	lsl	r3, r3, #2
    1118:	ldr	r2, [pc, #72]	; 1168 <traverse_product+0x100>
    111c:	add	r3, r3, r2
    1120:	mov	r1, r3
    1124:	ldr	r0, [pc, #68]	; 1170 <traverse_product+0x108>
    1128:	bl	0 <coda_cursor_get_type>
    112c:	mov	r3, r0
    1130:	cmp	r3, #0
    1134:	beq	113c <traverse_product+0xd4>
    1138:	bl	0 <handle_coda_error>
    113c:	bl	b00 <traverse_data>
    1140:	ldr	r3, [pc, #32]	; 1168 <traverse_product+0x100>
    1144:	ldr	r3, [r3, #4]
    1148:	mov	r0, r3
    114c:	bl	0 <coda_close>
    1150:	ldr	r3, [pc, #16]	; 1168 <traverse_product+0x100>
    1154:	mov	r2, #0
    1158:	str	r2, [r3, #4]
    115c:	nop			; (mov r0, r0)
    1160:	sub	sp, fp, #4
    1164:	pop	{fp, pc}
    1168:	.word	0x00000000
    116c:	.word	0x00000004
    1170:	.word	0x00000090
