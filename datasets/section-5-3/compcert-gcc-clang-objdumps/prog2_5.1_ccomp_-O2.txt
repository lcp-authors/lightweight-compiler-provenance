
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000103a0 <.init>:
   103a0:	push	{r3, lr}
   103a4:	bl	1045c <abort@plt+0x3c>
   103a8:	pop	{r3, pc}

Disassembly of section .plt:

000103ac <calloc@plt-0x14>:
   103ac:	push	{lr}		; (str lr, [sp, #-4]!)
   103b0:	ldr	lr, [pc, #4]	; 103bc <calloc@plt-0x4>
   103b4:	add	lr, pc, lr
   103b8:	ldr	pc, [lr, #8]!
   103bc:	andeq	r1, r1, r4, asr #24

000103c0 <calloc@plt>:
   103c0:	add	ip, pc, #0, 12
   103c4:	add	ip, ip, #69632	; 0x11000
   103c8:	ldr	pc, [ip, #3140]!	; 0xc44

000103cc <printf@plt>:
   103cc:	add	ip, pc, #0, 12
   103d0:	add	ip, ip, #69632	; 0x11000
   103d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000103d8 <free@plt>:
   103d8:	add	ip, pc, #0, 12
   103dc:	add	ip, ip, #69632	; 0x11000
   103e0:	ldr	pc, [ip, #3124]!	; 0xc34

000103e4 <strcpy@plt>:
   103e4:	add	ip, pc, #0, 12
   103e8:	add	ip, ip, #69632	; 0x11000
   103ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000103f0 <malloc@plt>:
   103f0:	add	ip, pc, #0, 12
   103f4:	add	ip, ip, #69632	; 0x11000
   103f8:	ldr	pc, [ip, #3108]!	; 0xc24

000103fc <__libc_start_main@plt>:
   103fc:	add	ip, pc, #0, 12
   10400:	add	ip, ip, #69632	; 0x11000
   10404:	ldr	pc, [ip, #3100]!	; 0xc1c

00010408 <__gmon_start__@plt>:
   10408:	add	ip, pc, #0, 12
   1040c:	add	ip, ip, #69632	; 0x11000
   10410:	ldr	pc, [ip, #3092]!	; 0xc14

00010414 <strlen@plt>:
   10414:	add	ip, pc, #0, 12
   10418:	add	ip, ip, #69632	; 0x11000
   1041c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010420 <abort@plt>:
   10420:	add	ip, pc, #0, 12
   10424:	add	ip, ip, #69632	; 0x11000
   10428:	ldr	pc, [ip, #3076]!	; 0xc04

Disassembly of section .text:

0001042c <.text>:
   1042c:	bleq	4c570 <abort@plt+0x3c150>
   10430:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10434:	strbtmi	fp, [sl], -r2, lsl #24
   10438:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   1043c:			; <UNDEFINED> instruction: 0xc010f8df
   10440:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10444:	blmi	122458 <abort@plt+0x112038>
   10448:	svc	0x00d8f7ff
   1044c:	svc	0x00e8f7ff
   10450:	andeq	r1, r1, r5, ror r4
   10454:	andeq	r0, r1, ip, ror #9
   10458:	andeq	r1, r1, r5, lsr r4
   1045c:	ldr	r3, [pc, #20]	; 10478 <abort@plt+0x58>
   10460:	ldr	r2, [pc, #20]	; 1047c <abort@plt+0x5c>
   10464:	add	r3, pc, r3
   10468:	ldr	r2, [r3, r2]
   1046c:	cmp	r2, #0
   10470:	bxeq	lr
   10474:	b	10408 <__gmon_start__@plt>
   10478:	muleq	r1, r4, fp
   1047c:	andeq	r0, r0, r0, lsr r0
   10480:	eorseq	pc, ip, r2, asr #4
   10484:	andeq	pc, r2, r0, asr #5
   10488:	teqeq	ip, #536870916	; 0x20000004	; <UNPREDICTABLE>
   1048c:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10490:	andle	r4, r5, r3, lsl #5
   10494:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10498:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   1049c:	ldrmi	fp, [r8, -r3, lsl #2]
   104a0:	svclt	0x00004770
   104a4:	eorseq	pc, ip, r2, asr #4
   104a8:	andeq	pc, r2, r0, asr #5
   104ac:	teqeq	ip, r2, asr #4	; <UNPREDICTABLE>
   104b0:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   104b4:	svceq	0x00d91a0b
   104b8:			; <UNDEFINED> instruction: 0x01a3eb01
   104bc:	andle	r1, r5, r9, asr #32
   104c0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   104c4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104c8:	ldrmi	fp, [r8, -r3, lsl #2]
   104cc:	svclt	0x00004770
   104d0:	vqrshl.s8	d27, d0, d2
   104d4:	vmvn.i32	d16, #786432	; 0x000c0000
   104d8:	stmdavc	r3!, {r1, sl}
   104dc:			; <UNDEFINED> instruction: 0xf7ffb91b
   104e0:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   104e4:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   104e8:	svclt	0x0000e7dc
   104ec:	mov	ip, sp
   104f0:	sub	sp, sp, #64	; 0x40
   104f4:	str	ip, [sp]
   104f8:	str	lr, [sp, #4]
   104fc:	str	r4, [sp, #32]
   10500:	str	r5, [sp, #36]	; 0x24
   10504:	str	r6, [sp, #40]	; 0x28
   10508:	str	r7, [sp, #44]	; 0x2c
   1050c:	str	r8, [sp, #48]	; 0x30
   10510:	str	r9, [sp, #52]	; 0x34
   10514:	str	sl, [sp, #56]	; 0x38
   10518:	str	fp, [sp, #60]	; 0x3c
   1051c:	mov	r0, #4
   10520:	mov	r1, #3
   10524:	bl	10b48 <abort@plt+0x728>
   10528:	mov	r4, r0
   1052c:	ldr	r0, [pc, #824]	; 1086c <abort@plt+0x44c>
   10530:	bl	103cc <printf@plt>
   10534:	ldr	r0, [pc, #784]	; 1084c <abort@plt+0x42c>
   10538:	vldr	s0, [pc, #852]	; 10894 <abort@plt+0x474>
   1053c:	vmov.f32	s0, s0
   10540:	bl	10df4 <abort@plt+0x9d4>
   10544:	str	r0, [sp, #12]
   10548:	ldr	r0, [pc, #784]	; 10860 <abort@plt+0x440>
   1054c:	vldr	s0, [pc, #848]	; 108a4 <abort@plt+0x484>
   10550:	vmov.f32	s0, s0
   10554:	bl	10df4 <abort@plt+0x9d4>
   10558:	mov	r5, r0
   1055c:	ldr	r0, [pc, #736]	; 10844 <abort@plt+0x424>
   10560:	vldr	s0, [pc, #816]	; 10898 <abort@plt+0x478>
   10564:	vmov.f32	s0, s0
   10568:	bl	10df4 <abort@plt+0x9d4>
   1056c:	mov	fp, r0
   10570:	ldr	r0, [pc, #776]	; 10880 <abort@plt+0x460>
   10574:	vldr	s0, [pc, #820]	; 108b0 <abort@plt+0x490>
   10578:	vmov.f32	s0, s0
   1057c:	bl	10df4 <abort@plt+0x9d4>
   10580:	mov	r8, r0
   10584:	ldr	r0, [pc, #680]	; 10834 <abort@plt+0x414>
   10588:	vldr	s0, [pc, #780]	; 1089c <abort@plt+0x47c>
   1058c:	vmov.f32	s0, s0
   10590:	bl	10df4 <abort@plt+0x9d4>
   10594:	str	r0, [sp, #16]
   10598:	ldr	r0, [pc, #672]	; 10840 <abort@plt+0x420>
   1059c:	vldr	s0, [pc, #736]	; 10884 <abort@plt+0x464>
   105a0:	vmov.f32	s0, s0
   105a4:	bl	10df4 <abort@plt+0x9d4>
   105a8:	mov	r6, r0
   105ac:	ldr	r0, [pc, #672]	; 10854 <abort@plt+0x434>
   105b0:	vldr	s0, [pc, #724]	; 1088c <abort@plt+0x46c>
   105b4:	vmov.f32	s0, s0
   105b8:	bl	10df4 <abort@plt+0x9d4>
   105bc:	str	r0, [sp, #20]
   105c0:	ldr	r0, [pc, #616]	; 10830 <abort@plt+0x410>
   105c4:	vldr	s0, [pc, #700]	; 10888 <abort@plt+0x468>
   105c8:	vmov.f32	s0, s0
   105cc:	bl	10df4 <abort@plt+0x9d4>
   105d0:	mov	r7, r0
   105d4:	ldr	r0, [pc, #652]	; 10868 <abort@plt+0x448>
   105d8:	vldr	s0, [pc, #700]	; 1089c <abort@plt+0x47c>
   105dc:	vmov.f32	s0, s0
   105e0:	bl	10df4 <abort@plt+0x9d4>
   105e4:	str	r0, [sp, #8]
   105e8:	ldr	r0, [pc, #600]	; 10848 <abort@plt+0x428>
   105ec:	vldr	s0, [pc, #696]	; 108ac <abort@plt+0x48c>
   105f0:	vmov.f32	s0, s0
   105f4:	bl	10df4 <abort@plt+0x9d4>
   105f8:	mov	r9, r0
   105fc:	ldr	r0, [pc, #600]	; 1085c <abort@plt+0x43c>
   10600:	vldr	s0, [pc, #664]	; 108a0 <abort@plt+0x480>
   10604:	vmov.f32	s0, s0
   10608:	bl	10df4 <abort@plt+0x9d4>
   1060c:	str	r0, [sp, #24]
   10610:	ldr	r0, [pc, #548]	; 1083c <abort@plt+0x41c>
   10614:	vldr	s0, [pc, #628]	; 10890 <abort@plt+0x470>
   10618:	vmov.f32	s0, s0
   1061c:	bl	10df4 <abort@plt+0x9d4>
   10620:	mov	sl, r0
   10624:	ldr	r0, [pc, #588]	; 10878 <abort@plt+0x458>
   10628:	vldr	s0, [pc, #632]	; 108a8 <abort@plt+0x488>
   1062c:	vmov.f32	s0, s0
   10630:	bl	10df4 <abort@plt+0x9d4>
   10634:	str	r0, [sp, #28]
   10638:	ldr	r0, [pc, #560]	; 10870 <abort@plt+0x450>
   1063c:	bl	103cc <printf@plt>
   10640:	mov	r0, r4
   10644:	bl	109dc <abort@plt+0x5bc>
   10648:	ldr	r0, [pc, #548]	; 10874 <abort@plt+0x454>
   1064c:	bl	103cc <printf@plt>
   10650:	ldr	r1, [sp, #12]
   10654:	mov	r0, r4
   10658:	bl	10c5c <abort@plt+0x83c>
   1065c:	cmp	r0, #0
   10660:	beq	10678 <abort@plt+0x258>
   10664:	ldr	r0, [pc, #492]	; 10858 <abort@plt+0x438>
   10668:	ldr	r1, [sp, #12]
   1066c:	ldr	r3, [r1]
   10670:	mov	r1, r3
   10674:	bl	103cc <printf@plt>
   10678:	mov	r1, r5
   1067c:	mov	r0, r4
   10680:	bl	10c5c <abort@plt+0x83c>
   10684:	cmp	r0, #0
   10688:	beq	10698 <abort@plt+0x278>
   1068c:	ldr	r0, [pc, #452]	; 10858 <abort@plt+0x438>
   10690:	ldr	r1, [r5]
   10694:	bl	103cc <printf@plt>
   10698:	mov	r1, fp
   1069c:	mov	r0, r4
   106a0:	bl	10c5c <abort@plt+0x83c>
   106a4:	cmp	r0, #0
   106a8:	beq	106b8 <abort@plt+0x298>
   106ac:	ldr	r0, [pc, #420]	; 10858 <abort@plt+0x438>
   106b0:	ldr	r1, [fp]
   106b4:	bl	103cc <printf@plt>
   106b8:	mov	r1, r8
   106bc:	mov	r0, r4
   106c0:	bl	10c5c <abort@plt+0x83c>
   106c4:	cmp	r0, #0
   106c8:	beq	106dc <abort@plt+0x2bc>
   106cc:	ldr	r0, [pc, #388]	; 10858 <abort@plt+0x438>
   106d0:	ldr	r3, [r8]
   106d4:	mov	r1, r3
   106d8:	bl	103cc <printf@plt>
   106dc:	ldr	r0, [pc, #408]	; 1087c <abort@plt+0x45c>
   106e0:	bl	103cc <printf@plt>
   106e4:	mov	r0, r4
   106e8:	bl	109dc <abort@plt+0x5bc>
   106ec:	ldr	r0, [pc, #368]	; 10864 <abort@plt+0x444>
   106f0:	bl	103cc <printf@plt>
   106f4:	ldr	r1, [sp, #16]
   106f8:	mov	r0, r4
   106fc:	bl	10c5c <abort@plt+0x83c>
   10700:	cmp	r0, #0
   10704:	beq	10718 <abort@plt+0x2f8>
   10708:	ldr	r0, [pc, #328]	; 10858 <abort@plt+0x438>
   1070c:	ldr	ip, [sp, #16]
   10710:	ldr	r1, [ip]
   10714:	bl	103cc <printf@plt>
   10718:	mov	r1, r6
   1071c:	mov	r0, r4
   10720:	bl	10c5c <abort@plt+0x83c>
   10724:	cmp	r0, #0
   10728:	beq	10738 <abort@plt+0x318>
   1072c:	ldr	r0, [pc, #292]	; 10858 <abort@plt+0x438>
   10730:	ldr	r1, [r6]
   10734:	bl	103cc <printf@plt>
   10738:	ldr	r1, [sp, #20]
   1073c:	mov	r0, r4
   10740:	bl	10c5c <abort@plt+0x83c>
   10744:	cmp	r0, #0
   10748:	beq	1075c <abort@plt+0x33c>
   1074c:	ldr	r0, [pc, #260]	; 10858 <abort@plt+0x438>
   10750:	ldr	r1, [sp, #20]
   10754:	ldr	r1, [r1]
   10758:	bl	103cc <printf@plt>
   1075c:	mov	r1, r7
   10760:	mov	r0, r4
   10764:	bl	10c5c <abort@plt+0x83c>
   10768:	cmp	r0, #0
   1076c:	beq	1077c <abort@plt+0x35c>
   10770:	ldr	r0, [pc, #224]	; 10858 <abort@plt+0x438>
   10774:	ldr	r1, [r7]
   10778:	bl	103cc <printf@plt>
   1077c:	ldr	r1, [sp, #8]
   10780:	mov	r0, r4
   10784:	bl	10c5c <abort@plt+0x83c>
   10788:	cmp	r0, #0
   1078c:	beq	107a0 <abort@plt+0x380>
   10790:	ldr	r0, [pc, #192]	; 10858 <abort@plt+0x438>
   10794:	ldr	r1, [sp, #8]
   10798:	ldr	r1, [r1]
   1079c:	bl	103cc <printf@plt>
   107a0:	mov	r1, r9
   107a4:	mov	r0, r4
   107a8:	bl	10c5c <abort@plt+0x83c>
   107ac:	cmp	r0, #0
   107b0:	beq	107c0 <abort@plt+0x3a0>
   107b4:	ldr	r0, [pc, #156]	; 10858 <abort@plt+0x438>
   107b8:	ldr	r1, [r9]
   107bc:	bl	103cc <printf@plt>
   107c0:	ldr	r1, [sp, #24]
   107c4:	mov	r0, r4
   107c8:	bl	10c5c <abort@plt+0x83c>
   107cc:	cmp	r0, #0
   107d0:	beq	107e4 <abort@plt+0x3c4>
   107d4:	ldr	r0, [pc, #124]	; 10858 <abort@plt+0x438>
   107d8:	ldr	r2, [sp, #24]
   107dc:	ldr	r1, [r2]
   107e0:	bl	103cc <printf@plt>
   107e4:	mov	r1, sl
   107e8:	mov	r0, r4
   107ec:	bl	10c5c <abort@plt+0x83c>
   107f0:	cmp	r0, #0
   107f4:	beq	10804 <abort@plt+0x3e4>
   107f8:	ldr	r0, [pc, #88]	; 10858 <abort@plt+0x438>
   107fc:	ldr	r1, [sl]
   10800:	bl	103cc <printf@plt>
   10804:	ldr	r0, [pc, #44]	; 10838 <abort@plt+0x418>
   10808:	bl	103cc <printf@plt>
   1080c:	mov	r0, r4
   10810:	bl	109dc <abort@plt+0x5bc>
   10814:	mov	r0, r4
   10818:	bl	10be4 <abort@plt+0x7c4>
   1081c:	cmp	r0, #0
   10820:	bne	108b4 <abort@plt+0x494>
   10824:	ldr	r0, [pc, #36]	; 10850 <abort@plt+0x430>
   10828:	bl	103cc <printf@plt>
   1082c:	b	108bc <abort@plt+0x49c>
   10830:	ldrdeq	r1, [r1], -r7
   10834:	andeq	r1, r1, lr, ror r6
   10838:	andeq	r1, r1, r0, lsl #12
   1083c:	andeq	r1, r1, r9, lsr r6
   10840:	andeq	r1, r1, r2, asr #11
   10844:	andeq	r1, r1, r7, ror r6
   10848:	andeq	r1, r1, r5, lsl #11
   1084c:	andeq	r1, r1, r6, lsr #13
   10850:	andeq	r1, r1, r0, lsl #15
   10854:	andeq	r1, r1, sl, asr #11
   10858:	andeq	r1, r1, pc, asr #13
   1085c:	andeq	r1, r1, r1, lsr #12
   10860:	ldrdeq	r1, [r1], -r4
   10864:	andeq	r1, r1, r4, lsl #13
   10868:			; <UNDEFINED> instruction: 0x000115b3
   1086c:	andeq	r1, r1, ip, ror #14
   10870:	andeq	r1, r1, pc, lsr r6
   10874:	strdeq	r1, [r1], -r8
   10878:	andeq	r1, r1, r9, lsr #15
   1087c:	andeq	r1, r1, r0, asr r7
   10880:	andeq	r1, r1, ip, lsl r7
   10884:	bicmi	r0, r3, #0
   10888:	adcmi	r0, r0, #0
   1088c:	sbcmi	r0, r8, #0
   10890:	bicsmi	r0, r7, #0
   10894:	cmnmi	r6, #0
   10898:	strmi	r8, [r4], #-0
   1089c:			; <UNDEFINED> instruction: 0x43be0000
   108a0:	orrmi	r0, r7, #0
   108a4:	cmnmi	sl, #0
   108a8:	movtmi	r0, #32768	; 0x8000
   108ac:	tstmi	r6, #0
   108b0:	ldrtmi	r8, [r1], #-0
   108b4:	ldr	r0, [pc, #280]	; 109d4 <abort@plt+0x5b4>
   108b8:	bl	103cc <printf@plt>
   108bc:	ldr	r1, [sp, #28]
   108c0:	mov	r0, r4
   108c4:	bl	10c5c <abort@plt+0x83c>
   108c8:	cmp	r0, #0
   108cc:	beq	108dc <abort@plt+0x4bc>
   108d0:	ldr	r0, [pc, #224]	; 109b8 <abort@plt+0x598>
   108d4:	ldr	r1, [fp]
   108d8:	bl	103cc <printf@plt>
   108dc:	ldr	r0, [pc, #244]	; 109d8 <abort@plt+0x5b8>
   108e0:	bl	103cc <printf@plt>
   108e4:	mov	r6, #0
   108e8:	mov	r0, r4
   108ec:	bl	10d34 <abort@plt+0x914>
   108f0:	mov	r5, r0
   108f4:	ldr	r0, [pc, #208]	; 109cc <abort@plt+0x5ac>
   108f8:	bl	103cc <printf@plt>
   108fc:	mov	r0, r5
   10900:	bl	10e94 <abort@plt+0xa74>
   10904:	add	r6, r6, #1
   10908:	cmp	r6, #8
   1090c:	blt	108e8 <abort@plt+0x4c8>
   10910:	ldr	r0, [pc, #164]	; 109bc <abort@plt+0x59c>
   10914:	bl	103cc <printf@plt>
   10918:	mov	r0, r4
   1091c:	bl	109dc <abort@plt+0x5bc>
   10920:	ldr	r0, [pc, #152]	; 109c0 <abort@plt+0x5a0>
   10924:	bl	103cc <printf@plt>
   10928:	mov	r6, #0
   1092c:	mov	r0, r4
   10930:	bl	10d34 <abort@plt+0x914>
   10934:	mov	r5, r0
   10938:	ldr	r0, [pc, #140]	; 109cc <abort@plt+0x5ac>
   1093c:	bl	103cc <printf@plt>
   10940:	mov	r0, r5
   10944:	bl	10e94 <abort@plt+0xa74>
   10948:	add	r6, r6, #1
   1094c:	cmp	r6, #4
   10950:	blt	1092c <abort@plt+0x50c>
   10954:	ldr	r0, [pc, #108]	; 109c8 <abort@plt+0x5a8>
   10958:	bl	103cc <printf@plt>
   1095c:	mov	r0, r4
   10960:	bl	109dc <abort@plt+0x5bc>
   10964:	mov	r0, r4
   10968:	bl	10ba4 <abort@plt+0x784>
   1096c:	cmp	r0, #0
   10970:	bne	10980 <abort@plt+0x560>
   10974:	ldr	r0, [pc, #72]	; 109c4 <abort@plt+0x5a4>
   10978:	bl	103cc <printf@plt>
   1097c:	b	10988 <abort@plt+0x568>
   10980:	ldr	r0, [pc, #72]	; 109d0 <abort@plt+0x5b0>
   10984:	bl	103cc <printf@plt>
   10988:	mov	r0, #0
   1098c:	ldr	r4, [sp, #32]
   10990:	ldr	r5, [sp, #36]	; 0x24
   10994:	ldr	r6, [sp, #40]	; 0x28
   10998:	ldr	r7, [sp, #44]	; 0x2c
   1099c:	ldr	r8, [sp, #48]	; 0x30
   109a0:	ldr	r9, [sp, #52]	; 0x34
   109a4:	ldr	sl, [sp, #56]	; 0x38
   109a8:	ldr	fp, [sp, #60]	; 0x3c
   109ac:	ldr	lr, [sp, #4]
   109b0:	add	sp, sp, #64	; 0x40
   109b4:	bx	lr
   109b8:	andeq	r1, r1, r4, lsl r5
   109bc:	andeq	r1, r1, r9, ror #10
   109c0:	andeq	r1, r1, sp, lsr #13
   109c4:	andeq	r1, r1, sp, lsl #11
   109c8:	andeq	r1, r1, fp, asr r6
   109cc:	andeq	r1, r1, r2, lsr #14
   109d0:	andeq	r1, r1, sl, lsr #12
   109d4:	andeq	r1, r1, r1, asr #14
   109d8:	ldrdeq	r1, [r1], -lr
   109dc:	mov	ip, sp
   109e0:	sub	sp, sp, #32
   109e4:	str	ip, [sp]
   109e8:	str	lr, [sp, #4]
   109ec:	str	r4, [sp, #8]
   109f0:	str	r5, [sp, #12]
   109f4:	str	r6, [sp, #16]
   109f8:	str	r7, [sp, #20]
   109fc:	str	r8, [sp, #24]
   10a00:	mov	r5, r0
   10a04:	cmp	r5, #0
   10a08:	beq	10b0c <abort@plt+0x6ec>
   10a0c:	ldr	r0, [r5, #8]
   10a10:	cmp	r0, #0
   10a14:	beq	10b0c <abort@plt+0x6ec>
   10a18:	ldr	r0, [r0, #4]
   10a1c:	mov	r1, #4
   10a20:	bl	103c0 <calloc@plt>
   10a24:	mov	r4, r0
   10a28:	ldr	r1, [r5, #8]
   10a2c:	ldr	r6, [r1, #4]
   10a30:	ldr	r2, [r1]
   10a34:	mov	r1, #0
   10a38:	cmp	r2, #0
   10a3c:	beq	10a58 <abort@plt+0x638>
   10a40:	ldr	r0, [r2]
   10a44:	ldr	r3, [r0, #4]
   10a48:	str	r3, [r4, r1, lsl #2]
   10a4c:	ldr	r2, [r2, #4]
   10a50:	add	r1, r1, #1
   10a54:	b	10a38 <abort@plt+0x618>
   10a58:	ldr	r0, [pc, #204]	; 10b2c <abort@plt+0x70c>
   10a5c:	bl	103cc <printf@plt>
   10a60:	ldr	r7, [r5, #4]
   10a64:	cmp	r7, #0
   10a68:	ble	10ab8 <abort@plt+0x698>
   10a6c:	ldr	r0, [pc, #208]	; 10b44 <abort@plt+0x724>
   10a70:	bl	103cc <printf@plt>
   10a74:	mov	r8, #0
   10a78:	cmp	r8, r6
   10a7c:	bge	10aa8 <abort@plt+0x688>
   10a80:	ldr	r3, [r4, r8, lsl #2]
   10a84:	cmp	r3, r7
   10a88:	bge	10a98 <abort@plt+0x678>
   10a8c:	ldr	r0, [pc, #164]	; 10b38 <abort@plt+0x718>
   10a90:	bl	103cc <printf@plt>
   10a94:	b	10aa0 <abort@plt+0x680>
   10a98:	ldr	r0, [pc, #156]	; 10b3c <abort@plt+0x71c>
   10a9c:	bl	103cc <printf@plt>
   10aa0:	add	r8, r8, #1
   10aa4:	b	10a78 <abort@plt+0x658>
   10aa8:	ldr	r0, [pc, #124]	; 10b2c <abort@plt+0x70c>
   10aac:	bl	103cc <printf@plt>
   10ab0:	sub	r7, r7, #1
   10ab4:	b	10a64 <abort@plt+0x644>
   10ab8:	ldr	r0, [pc, #128]	; 10b40 <abort@plt+0x720>
   10abc:	bl	103cc <printf@plt>
   10ac0:	mov	r6, #0
   10ac4:	ldr	r2, [r5]
   10ac8:	cmp	r6, r2
   10acc:	bge	10ae0 <abort@plt+0x6c0>
   10ad0:	ldr	r0, [pc, #92]	; 10b34 <abort@plt+0x714>
   10ad4:	bl	103cc <printf@plt>
   10ad8:	add	r6, r6, #1
   10adc:	b	10ac4 <abort@plt+0x6a4>
   10ae0:	ldr	r0, [pc, #72]	; 10b30 <abort@plt+0x710>
   10ae4:	bl	103cc <printf@plt>
   10ae8:	mov	r0, r4
   10aec:	ldr	r4, [sp, #8]
   10af0:	ldr	r5, [sp, #12]
   10af4:	ldr	r6, [sp, #16]
   10af8:	ldr	r7, [sp, #20]
   10afc:	ldr	r8, [sp, #24]
   10b00:	ldr	lr, [sp, #4]
   10b04:	add	sp, sp, #32
   10b08:	b	103d8 <free@plt>
   10b0c:	ldr	r4, [sp, #8]
   10b10:	ldr	r5, [sp, #12]
   10b14:	ldr	r6, [sp, #16]
   10b18:	ldr	r7, [sp, #20]
   10b1c:	ldr	r8, [sp, #24]
   10b20:	ldr	lr, [sp, #4]
   10b24:	add	sp, sp, #32
   10b28:	bx	lr
   10b2c:	andeq	r1, r1, sl, lsl r7
   10b30:	andeq	r1, r1, r6, lsr #15
   10b34:	andeq	r1, r1, ip, lsl r6
   10b38:	andeq	r1, r1, pc, asr r5
   10b3c:	andeq	r1, r1, r4, ror #10
   10b40:			; <UNDEFINED> instruction: 0x000115bf
   10b44:	strdeq	r1, [r1], -r5
   10b48:	mov	ip, sp
   10b4c:	sub	sp, sp, #24
   10b50:	str	ip, [sp]
   10b54:	str	lr, [sp, #4]
   10b58:	str	r4, [sp, #8]
   10b5c:	str	r5, [sp, #12]
   10b60:	str	r6, [sp, #16]
   10b64:	mov	r5, r1
   10b68:	mov	r6, r0
   10b6c:	mov	r0, #12
   10b70:	bl	103f0 <malloc@plt>
   10b74:	mov	r4, r0
   10b78:	str	r6, [r4]
   10b7c:	str	r5, [r4, #4]
   10b80:	bl	10f48 <abort@plt+0xb28>
   10b84:	str	r0, [r4, #8]
   10b88:	mov	r0, r4
   10b8c:	ldr	r4, [sp, #8]
   10b90:	ldr	r5, [sp, #12]
   10b94:	ldr	r6, [sp, #16]
   10b98:	ldr	lr, [sp, #4]
   10b9c:	add	sp, sp, #24
   10ba0:	bx	lr
   10ba4:	mov	ip, sp
   10ba8:	sub	sp, sp, #8
   10bac:	str	ip, [sp]
   10bb0:	str	lr, [sp, #4]
   10bb4:	cmp	r0, #0
   10bb8:	beq	10bd4 <abort@plt+0x7b4>
   10bbc:	ldr	r0, [r0, #8]
   10bc0:	bl	11004 <abort@plt+0xbe4>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10bd4 <abort@plt+0x7b4>
   10bcc:	mov	r0, #0
   10bd0:	b	10bd8 <abort@plt+0x7b8>
   10bd4:	mov	r0, #1
   10bd8:	ldr	lr, [sp, #4]
   10bdc:	add	sp, sp, #8
   10be0:	bx	lr
   10be4:	mov	ip, sp
   10be8:	sub	sp, sp, #16
   10bec:	str	ip, [sp]
   10bf0:	str	lr, [sp, #4]
   10bf4:	str	r4, [sp, #8]
   10bf8:	mov	r4, r0
   10bfc:	mov	r0, r4
   10c00:	bl	10ba4 <abort@plt+0x784>
   10c04:	cmp	r0, #0
   10c08:	beq	10c14 <abort@plt+0x7f4>
   10c0c:	mov	r0, #0
   10c10:	b	10c4c <abort@plt+0x82c>
   10c14:	ldr	r0, [r4, #8]
   10c18:	bl	11004 <abort@plt+0xbe4>
   10c1c:	ldr	r1, [r4]
   10c20:	cmp	r0, r1
   10c24:	bne	10c48 <abort@plt+0x828>
   10c28:	ldr	r0, [r4, #8]
   10c2c:	bl	11074 <abort@plt+0xc54>
   10c30:	ldr	r0, [r0, #4]
   10c34:	ldr	r2, [r4, #4]
   10c38:	cmp	r0, r2
   10c3c:	bne	10c48 <abort@plt+0x828>
   10c40:	mov	r0, #1
   10c44:	b	10c4c <abort@plt+0x82c>
   10c48:	mov	r0, #0
   10c4c:	ldr	r4, [sp, #8]
   10c50:	ldr	lr, [sp, #4]
   10c54:	add	sp, sp, #16
   10c58:	bx	lr
   10c5c:	mov	ip, sp
   10c60:	sub	sp, sp, #24
   10c64:	str	ip, [sp]
   10c68:	str	lr, [sp, #4]
   10c6c:	str	r4, [sp, #8]
   10c70:	str	r5, [sp, #12]
   10c74:	str	r6, [sp, #16]
   10c78:	mov	r6, r1
   10c7c:	mov	r5, r0
   10c80:	bl	11234 <abort@plt+0xe14>
   10c84:	mov	r4, r0
   10c88:	mov	r1, #1
   10c8c:	cmp	r6, #0
   10c90:	moveq	r0, #1
   10c94:	movne	r0, #0
   10c98:	cmp	r5, #0
   10c9c:	moveq	r1, r1
   10ca0:	movne	r1, r0
   10ca4:	cmp	r1, #0
   10ca8:	bne	10d18 <abort@plt+0x8f8>
   10cac:	mov	r0, r5
   10cb0:	bl	10be4 <abort@plt+0x7c4>
   10cb4:	cmp	r0, #0
   10cb8:	bne	10d18 <abort@plt+0x8f8>
   10cbc:	mov	r0, r5
   10cc0:	bl	10ba4 <abort@plt+0x784>
   10cc4:	cmp	r0, #0
   10cc8:	beq	10cdc <abort@plt+0x8bc>
   10ccc:	bl	11234 <abort@plt+0xe14>
   10cd0:	mov	r1, r0
   10cd4:	ldr	r0, [r5, #8]
   10cd8:	bl	110c8 <abort@plt+0xca8>
   10cdc:	ldr	r0, [r5, #8]
   10ce0:	bl	11074 <abort@plt+0xc54>
   10ce4:	ldr	r2, [r0, #4]
   10ce8:	ldr	r0, [r5, #4]
   10cec:	cmp	r2, r0
   10cf0:	bne	10d00 <abort@plt+0x8e0>
   10cf4:	ldr	r0, [r5, #8]
   10cf8:	mov	r1, r4
   10cfc:	bl	110c8 <abort@plt+0xca8>
   10d00:	ldr	r0, [r5, #8]
   10d04:	bl	11074 <abort@plt+0xc54>
   10d08:	mov	r1, r6
   10d0c:	bl	11360 <abort@plt+0xf40>
   10d10:	mov	r0, #1
   10d14:	b	10d1c <abort@plt+0x8fc>
   10d18:	mov	r0, #0
   10d1c:	ldr	r4, [sp, #8]
   10d20:	ldr	r5, [sp, #12]
   10d24:	ldr	r6, [sp, #16]
   10d28:	ldr	lr, [sp, #4]
   10d2c:	add	sp, sp, #24
   10d30:	bx	lr
   10d34:	mov	ip, sp
   10d38:	sub	sp, sp, #16
   10d3c:	str	ip, [sp]
   10d40:	str	lr, [sp, #4]
   10d44:	str	r4, [sp, #8]
   10d48:	str	r5, [sp, #12]
   10d4c:	mov	r5, r0
   10d50:	mov	r0, r5
   10d54:	bl	10ba4 <abort@plt+0x784>
   10d58:	cmp	r0, #0
   10d5c:	bne	10ddc <abort@plt+0x9bc>
   10d60:	ldr	r0, [r5, #8]
   10d64:	bl	11034 <abort@plt+0xc14>
   10d68:	bl	11320 <abort@plt+0xf00>
   10d6c:	cmp	r0, #0
   10d70:	beq	10ddc <abort@plt+0x9bc>
   10d74:	ldr	r0, [r5, #8]
   10d78:	bl	11034 <abort@plt+0xc14>
   10d7c:	bl	11320 <abort@plt+0xf00>
   10d80:	mov	r4, r0
   10d84:	ldr	r0, [r5, #8]
   10d88:	bl	11034 <abort@plt+0xc14>
   10d8c:	bl	11320 <abort@plt+0xf00>
   10d90:	mov	r1, r0
   10d94:	ldr	r0, [r4]
   10d98:	vldr	s0, [r1, #4]
   10d9c:	vmov.f32	s0, s0
   10da0:	bl	10df4 <abort@plt+0x9d4>
   10da4:	mov	r4, r0
   10da8:	ldr	r0, [r5, #8]
   10dac:	bl	11034 <abort@plt+0xc14>
   10db0:	ldr	r2, [r0, #4]
   10db4:	cmp	r2, #1
   10db8:	ble	10dcc <abort@plt+0x9ac>
   10dbc:	ldr	r0, [r5, #8]
   10dc0:	bl	11034 <abort@plt+0xc14>
   10dc4:	bl	113c8 <abort@plt+0xfa8>
   10dc8:	b	10dd4 <abort@plt+0x9b4>
   10dcc:	ldr	r0, [r5, #8]
   10dd0:	bl	11148 <abort@plt+0xd28>
   10dd4:	mov	r0, r4
   10dd8:	b	10de0 <abort@plt+0x9c0>
   10ddc:	mov	r0, #0
   10de0:	ldr	r4, [sp, #8]
   10de4:	ldr	r5, [sp, #12]
   10de8:	ldr	lr, [sp, #4]
   10dec:	add	sp, sp, #16
   10df0:	bx	lr
   10df4:	mov	ip, sp
   10df8:	sub	sp, sp, #24
   10dfc:	str	ip, [sp]
   10e00:	str	lr, [sp, #4]
   10e04:	str	r4, [sp, #8]
   10e08:	str	r5, [sp, #12]
   10e0c:	vstr	d8, [sp, #16]
   10e10:	vmov.f64	d8, d0
   10e14:	mov	r4, r0
   10e18:	mov	r0, #8
   10e1c:	bl	103f0 <malloc@plt>
   10e20:	mov	r5, r0
   10e24:	mov	r0, r4
   10e28:	bl	10414 <strlen@plt>
   10e2c:	add	r0, r0, #1
   10e30:	bl	103f0 <malloc@plt>
   10e34:	str	r0, [r5]
   10e38:	mov	r1, r4
   10e3c:	bl	103e4 <strcpy@plt>
   10e40:	vstr	s16, [r5, #4]
   10e44:	mov	r0, r5
   10e48:	ldr	r4, [sp, #8]
   10e4c:	ldr	r5, [sp, #12]
   10e50:	vldr	d8, [sp, #16]
   10e54:	ldr	lr, [sp, #4]
   10e58:	add	sp, sp, #24
   10e5c:	bx	lr
   10e60:	mov	ip, sp
   10e64:	sub	sp, sp, #16
   10e68:	str	ip, [sp]
   10e6c:	str	lr, [sp, #4]
   10e70:	str	r4, [sp, #8]
   10e74:	mov	r4, r0
   10e78:	ldr	r0, [r4]
   10e7c:	bl	103d8 <free@plt>
   10e80:	mov	r0, r4
   10e84:	ldr	r4, [sp, #8]
   10e88:	ldr	lr, [sp, #4]
   10e8c:	add	sp, sp, #16
   10e90:	b	103d8 <free@plt>
   10e94:	mov	ip, sp
   10e98:	sub	sp, sp, #8
   10e9c:	str	ip, [sp]
   10ea0:	str	lr, [sp, #4]
   10ea4:	cmp	r0, #0
   10ea8:	beq	10ecc <abort@plt+0xaac>
   10eac:	ldr	r2, [pc, #48]	; 10ee4 <abort@plt+0xac4>
   10eb0:	ldr	r1, [r0]
   10eb4:	vldr	s2, [r0, #4]
   10eb8:	vcvt.f64.f32	d2, s2
   10ebc:	mov	r0, r2
   10ec0:	vmov	r2, r3, d2
   10ec4:	bl	103cc <printf@plt>
   10ec8:	b	10ed4 <abort@plt+0xab4>
   10ecc:	ldr	r0, [pc, #12]	; 10ee0 <abort@plt+0xac0>
   10ed0:	bl	103cc <printf@plt>
   10ed4:	ldr	lr, [sp, #4]
   10ed8:	add	sp, sp, #8
   10edc:	bx	lr
   10ee0:	ldrdeq	r1, [r1], -ip
   10ee4:			; <UNDEFINED> instruction: 0x000117b1
   10ee8:	mov	ip, sp
   10eec:	sub	sp, sp, #16
   10ef0:	str	ip, [sp]
   10ef4:	str	lr, [sp, #4]
   10ef8:	str	r4, [sp, #8]
   10efc:	mov	r4, r0
   10f00:	mov	r0, #8
   10f04:	bl	103f0 <malloc@plt>
   10f08:	cmp	r0, #0
   10f0c:	bne	10f18 <abort@plt+0xaf8>
   10f10:	mov	r0, #0
   10f14:	b	10f38 <abort@plt+0xb18>
   10f18:	str	r4, [r0]
   10f1c:	cmp	r4, #0
   10f20:	bne	10f30 <abort@plt+0xb10>
   10f24:	bl	103d8 <free@plt>
   10f28:	mov	r0, #0
   10f2c:	b	10f38 <abort@plt+0xb18>
   10f30:	mov	r1, #0
   10f34:	str	r1, [r0, #4]
   10f38:	ldr	r4, [sp, #8]
   10f3c:	ldr	lr, [sp, #4]
   10f40:	add	sp, sp, #16
   10f44:	bx	lr
   10f48:	mov	ip, sp
   10f4c:	sub	sp, sp, #8
   10f50:	str	ip, [sp]
   10f54:	str	lr, [sp, #4]
   10f58:	mov	r0, #8
   10f5c:	bl	103f0 <malloc@plt>
   10f60:	cmp	r0, #0
   10f64:	bne	10f70 <abort@plt+0xb50>
   10f68:	mov	r0, #0
   10f6c:	b	10f80 <abort@plt+0xb60>
   10f70:	mov	r1, #0
   10f74:	str	r1, [r0]
   10f78:	mov	r1, #0
   10f7c:	str	r1, [r0, #4]
   10f80:	ldr	lr, [sp, #4]
   10f84:	add	sp, sp, #8
   10f88:	bx	lr
   10f8c:	mov	ip, sp
   10f90:	sub	sp, sp, #16
   10f94:	str	ip, [sp]
   10f98:	str	lr, [sp, #4]
   10f9c:	str	r4, [sp, #8]
   10fa0:	str	r5, [sp, #12]
   10fa4:	mov	r5, r0
   10fa8:	cmp	r5, #0
   10fac:	beq	10ff0 <abort@plt+0xbd0>
   10fb0:	ldr	r4, [r5]
   10fb4:	cmp	r4, #0
   10fb8:	beq	10fd8 <abort@plt+0xbb8>
   10fbc:	ldr	r0, [r4, #4]
   10fc0:	str	r0, [r5]
   10fc4:	ldr	r0, [r4]
   10fc8:	bl	11278 <abort@plt+0xe58>
   10fcc:	mov	r0, r4
   10fd0:	bl	103d8 <free@plt>
   10fd4:	b	10fb0 <abort@plt+0xb90>
   10fd8:	mov	r0, r5
   10fdc:	ldr	r4, [sp, #8]
   10fe0:	ldr	r5, [sp, #12]
   10fe4:	ldr	lr, [sp, #4]
   10fe8:	add	sp, sp, #16
   10fec:	b	103d8 <free@plt>
   10ff0:	ldr	r4, [sp, #8]
   10ff4:	ldr	r5, [sp, #12]
   10ff8:	ldr	lr, [sp, #4]
   10ffc:	add	sp, sp, #16
   11000:	bx	lr
   11004:	mov	ip, sp
   11008:	sub	sp, sp, #8
   1100c:	str	ip, [sp]
   11010:	str	lr, [sp, #4]
   11014:	cmp	r0, #0
   11018:	bne	11024 <abort@plt+0xc04>
   1101c:	mvn	r0, #0
   11020:	b	11028 <abort@plt+0xc08>
   11024:	ldr	r0, [r0, #4]
   11028:	ldr	lr, [sp, #4]
   1102c:	add	sp, sp, #8
   11030:	bx	lr
   11034:	mov	ip, sp
   11038:	sub	sp, sp, #8
   1103c:	str	ip, [sp]
   11040:	str	lr, [sp, #4]
   11044:	cmp	r0, #0
   11048:	beq	11064 <abort@plt+0xc44>
   1104c:	ldr	r1, [r0, #4]
   11050:	cmp	r1, #0
   11054:	beq	11064 <abort@plt+0xc44>
   11058:	ldr	r0, [r0]
   1105c:	ldr	r0, [r0]
   11060:	b	11068 <abort@plt+0xc48>
   11064:	mov	r0, #0
   11068:	ldr	lr, [sp, #4]
   1106c:	add	sp, sp, #8
   11070:	bx	lr
   11074:	mov	ip, sp
   11078:	sub	sp, sp, #8
   1107c:	str	ip, [sp]
   11080:	str	lr, [sp, #4]
   11084:	cmp	r0, #0
   11088:	beq	110b8 <abort@plt+0xc98>
   1108c:	ldr	r2, [r0, #4]
   11090:	cmp	r2, #0
   11094:	beq	110b8 <abort@plt+0xc98>
   11098:	ldr	r1, [r0]
   1109c:	ldr	r0, [r1, #4]
   110a0:	cmp	r0, #0
   110a4:	beq	110b0 <abort@plt+0xc90>
   110a8:	mov	r1, r0
   110ac:	b	1109c <abort@plt+0xc7c>
   110b0:	ldr	r0, [r1]
   110b4:	b	110bc <abort@plt+0xc9c>
   110b8:	mov	r0, #0
   110bc:	ldr	lr, [sp, #4]
   110c0:	add	sp, sp, #8
   110c4:	bx	lr
   110c8:	mov	ip, sp
   110cc:	sub	sp, sp, #16
   110d0:	str	ip, [sp]
   110d4:	str	lr, [sp, #4]
   110d8:	str	r4, [sp, #8]
   110dc:	str	r5, [sp, #12]
   110e0:	mov	r5, r0
   110e4:	mov	r0, r1
   110e8:	cmp	r5, #0
   110ec:	beq	11134 <abort@plt+0xd14>
   110f0:	ldr	r4, [r5]
   110f4:	bl	10ee8 <abort@plt+0xac8>
   110f8:	cmp	r0, #0
   110fc:	beq	11134 <abort@plt+0xd14>
   11100:	ldr	r2, [r5, #4]
   11104:	add	r1, r2, #1
   11108:	str	r1, [r5, #4]
   1110c:	cmp	r4, #0
   11110:	bne	1111c <abort@plt+0xcfc>
   11114:	str	r0, [r5]
   11118:	b	11134 <abort@plt+0xd14>
   1111c:	ldr	r1, [r4, #4]
   11120:	cmp	r1, #0
   11124:	beq	11130 <abort@plt+0xd10>
   11128:	mov	r4, r1
   1112c:	b	1111c <abort@plt+0xcfc>
   11130:	str	r0, [r4, #4]
   11134:	ldr	r4, [sp, #8]
   11138:	ldr	r5, [sp, #12]
   1113c:	ldr	lr, [sp, #4]
   11140:	add	sp, sp, #16
   11144:	bx	lr
   11148:	mov	ip, sp
   1114c:	sub	sp, sp, #16
   11150:	str	ip, [sp]
   11154:	str	lr, [sp, #4]
   11158:	str	r4, [sp, #8]
   1115c:	cmp	r0, #0
   11160:	beq	111a0 <abort@plt+0xd80>
   11164:	ldr	r1, [r0, #4]
   11168:	cmp	r1, #0
   1116c:	beq	111a0 <abort@plt+0xd80>
   11170:	ldr	r4, [r0]
   11174:	sub	r1, r1, #1
   11178:	str	r1, [r0, #4]
   1117c:	ldr	r2, [r4, #4]
   11180:	str	r2, [r0]
   11184:	ldr	r0, [r4]
   11188:	bl	11278 <abort@plt+0xe58>
   1118c:	mov	r0, r4
   11190:	ldr	r4, [sp, #8]
   11194:	ldr	lr, [sp, #4]
   11198:	add	sp, sp, #16
   1119c:	b	103d8 <free@plt>
   111a0:	ldr	r4, [sp, #8]
   111a4:	ldr	lr, [sp, #4]
   111a8:	add	sp, sp, #16
   111ac:	bx	lr
   111b0:	mov	ip, sp
   111b4:	sub	sp, sp, #16
   111b8:	str	ip, [sp]
   111bc:	str	lr, [sp, #4]
   111c0:	str	r4, [sp, #8]
   111c4:	str	r5, [sp, #12]
   111c8:	mov	r5, r0
   111cc:	mov	r0, #8
   111d0:	bl	103f0 <malloc@plt>
   111d4:	mov	r4, r0
   111d8:	cmp	r4, #0
   111dc:	bne	111e8 <abort@plt+0xdc8>
   111e0:	mov	r0, #0
   111e4:	b	11220 <abort@plt+0xe00>
   111e8:	ldr	r0, [r5]
   111ec:	vldr	s0, [r5, #4]
   111f0:	vmov.f32	s0, s0
   111f4:	bl	10df4 <abort@plt+0x9d4>
   111f8:	str	r0, [r4]
   111fc:	cmp	r0, #0
   11200:	bne	11214 <abort@plt+0xdf4>
   11204:	mov	r0, r4
   11208:	bl	103d8 <free@plt>
   1120c:	mov	r0, #0
   11210:	b	11220 <abort@plt+0xe00>
   11214:	mov	r1, #0
   11218:	str	r1, [r4, #4]
   1121c:	mov	r0, r4
   11220:	ldr	r4, [sp, #8]
   11224:	ldr	r5, [sp, #12]
   11228:	ldr	lr, [sp, #4]
   1122c:	add	sp, sp, #16
   11230:	bx	lr
   11234:	mov	ip, sp
   11238:	sub	sp, sp, #8
   1123c:	str	ip, [sp]
   11240:	str	lr, [sp, #4]
   11244:	mov	r0, #8
   11248:	bl	103f0 <malloc@plt>
   1124c:	cmp	r0, #0
   11250:	bne	1125c <abort@plt+0xe3c>
   11254:	mov	r0, #0
   11258:	b	1126c <abort@plt+0xe4c>
   1125c:	mov	r1, #0
   11260:	str	r1, [r0]
   11264:	mov	r1, #0
   11268:	str	r1, [r0, #4]
   1126c:	ldr	lr, [sp, #4]
   11270:	add	sp, sp, #8
   11274:	bx	lr
   11278:	mov	ip, sp
   1127c:	sub	sp, sp, #16
   11280:	str	ip, [sp]
   11284:	str	lr, [sp, #4]
   11288:	str	r4, [sp, #8]
   1128c:	str	r5, [sp, #12]
   11290:	mov	r5, r0
   11294:	cmp	r5, #0
   11298:	beq	112dc <abort@plt+0xebc>
   1129c:	ldr	r4, [r5]
   112a0:	cmp	r4, #0
   112a4:	beq	112c4 <abort@plt+0xea4>
   112a8:	ldr	r0, [r4, #4]
   112ac:	str	r0, [r5]
   112b0:	ldr	r0, [r4]
   112b4:	bl	10e60 <abort@plt+0xa40>
   112b8:	mov	r0, r4
   112bc:	bl	103d8 <free@plt>
   112c0:	b	1129c <abort@plt+0xe7c>
   112c4:	mov	r0, r5
   112c8:	ldr	r4, [sp, #8]
   112cc:	ldr	r5, [sp, #12]
   112d0:	ldr	lr, [sp, #4]
   112d4:	add	sp, sp, #16
   112d8:	b	103d8 <free@plt>
   112dc:	ldr	r4, [sp, #8]
   112e0:	ldr	r5, [sp, #12]
   112e4:	ldr	lr, [sp, #4]
   112e8:	add	sp, sp, #16
   112ec:	bx	lr
   112f0:	mov	ip, sp
   112f4:	sub	sp, sp, #8
   112f8:	str	ip, [sp]
   112fc:	str	lr, [sp, #4]
   11300:	cmp	r0, #0
   11304:	bne	11310 <abort@plt+0xef0>
   11308:	mvn	r0, #0
   1130c:	b	11314 <abort@plt+0xef4>
   11310:	ldr	r0, [r0, #4]
   11314:	ldr	lr, [sp, #4]
   11318:	add	sp, sp, #8
   1131c:	bx	lr
   11320:	mov	ip, sp
   11324:	sub	sp, sp, #8
   11328:	str	ip, [sp]
   1132c:	str	lr, [sp, #4]
   11330:	cmp	r0, #0
   11334:	beq	11350 <abort@plt+0xf30>
   11338:	ldr	r1, [r0, #4]
   1133c:	cmp	r1, #0
   11340:	beq	11350 <abort@plt+0xf30>
   11344:	ldr	r0, [r0]
   11348:	ldr	r0, [r0]
   1134c:	b	11354 <abort@plt+0xf34>
   11350:	mov	r0, #0
   11354:	ldr	lr, [sp, #4]
   11358:	add	sp, sp, #8
   1135c:	bx	lr
   11360:	mov	ip, sp
   11364:	sub	sp, sp, #16
   11368:	str	ip, [sp]
   1136c:	str	lr, [sp, #4]
   11370:	str	r4, [sp, #8]
   11374:	mov	r4, r0
   11378:	mov	r0, r1
   1137c:	cmp	r4, #0
   11380:	beq	113b8 <abort@plt+0xf98>
   11384:	bl	111b0 <abort@plt+0xd90>
   11388:	cmp	r0, #0
   1138c:	beq	113b8 <abort@plt+0xf98>
   11390:	ldr	r2, [r4, #4]
   11394:	add	r1, r2, #1
   11398:	str	r1, [r4, #4]
   1139c:	ldr	r1, [r4]
   113a0:	cmp	r1, #0
   113a4:	bne	113b0 <abort@plt+0xf90>
   113a8:	str	r0, [r4]
   113ac:	b	113b8 <abort@plt+0xf98>
   113b0:	str	r1, [r0, #4]
   113b4:	str	r0, [r4]
   113b8:	ldr	r4, [sp, #8]
   113bc:	ldr	lr, [sp, #4]
   113c0:	add	sp, sp, #16
   113c4:	bx	lr
   113c8:	mov	ip, sp
   113cc:	sub	sp, sp, #16
   113d0:	str	ip, [sp]
   113d4:	str	lr, [sp, #4]
   113d8:	str	r4, [sp, #8]
   113dc:	cmp	r0, #0
   113e0:	beq	11424 <abort@plt+0x1004>
   113e4:	ldr	r1, [r0, #4]
   113e8:	cmp	r1, #0
   113ec:	beq	11424 <abort@plt+0x1004>
   113f0:	ldr	r4, [r0]
   113f4:	ldr	r3, [r4, #4]
   113f8:	str	r3, [r0]
   113fc:	ldr	r2, [r0, #4]
   11400:	sub	r1, r2, #1
   11404:	str	r1, [r0, #4]
   11408:	ldr	r0, [r4]
   1140c:	bl	10e60 <abort@plt+0xa40>
   11410:	mov	r0, r4
   11414:	ldr	r4, [sp, #8]
   11418:	ldr	lr, [sp, #4]
   1141c:	add	sp, sp, #16
   11420:	b	103d8 <free@plt>
   11424:	ldr	r4, [sp, #8]
   11428:	ldr	lr, [sp, #4]
   1142c:	add	sp, sp, #16
   11430:	bx	lr
   11434:	mvnsmi	lr, #737280	; 0xb4000
   11438:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   1143c:	strmi	r4, [r8], ip, lsl #26
   11440:			; <UNDEFINED> instruction: 0x4691447e
   11444:			; <UNDEFINED> instruction: 0xf7fe447d
   11448:	blne	1dcd300 <abort@plt+0x1dbcee0>
   1144c:	strhle	r1, [sl], -r6
   11450:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   11454:	svccc	0x0004f855
   11458:	strbmi	r4, [r1], -sl, asr #12
   1145c:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   11460:	adcmi	r4, r6, #152, 14	; 0x2600000
   11464:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   11468:	svclt	0x000083f8
   1146c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11470:	andeq	r0, r1, r8, asr #21
   11474:	svclt	0x00004770

Disassembly of section .fini:

00011478 <.fini>:
   11478:	push	{r3, lr}
   1147c:	pop	{r3, pc}
