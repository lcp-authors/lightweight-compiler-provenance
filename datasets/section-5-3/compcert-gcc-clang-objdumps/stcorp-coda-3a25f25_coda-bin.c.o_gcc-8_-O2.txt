
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	ldr	r3, [pc, #324]	; 14c <coda_bin_product_open+0x14c>
   4:	mrc	15, 0, r2, cr13, cr0, {3}
   8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   c:	mov	r5, #0
  10:	mov	r4, r0
  14:	strd	r6, [sp, #8]
  18:	mvn	r6, #0
  1c:	str	r8, [sp, #16]
  20:	str	lr, [sp, #20]
  24:	sub	sp, sp, #8
  28:	str	r5, [r0, #52]	; 0x34
  2c:	str	r6, [r0, #56]	; 0x38
  30:	ldr	r3, [pc, r3]
  34:	ldr	r0, [r0]
  38:	ldr	r3, [r2, r3]
  3c:	cmp	r3, r5
  40:	beq	54 <coda_bin_product_open+0x54>
  44:	ldrd	r2, [r4, #8]
  48:	cmp	r2, #1
  4c:	sbcs	r3, r3, #0
  50:	bge	84 <coda_bin_product_open+0x84>
  54:	mov	r1, #0
  58:	bl	0 <open>
  5c:	cmp	r0, #0
  60:	str	r0, [r4, #56]	; 0x38
  64:	movge	r0, #0
  68:	blt	e0 <coda_bin_product_open+0xe0>
  6c:	add	sp, sp, #8
  70:	ldrd	r4, [sp]
  74:	ldrd	r6, [sp, #8]
  78:	ldr	r8, [sp, #16]
  7c:	add	sp, sp, #20
  80:	pop	{pc}		; (ldr pc, [sp], #4)
  84:	mov	r7, #1
  88:	mov	r1, r5
  8c:	str	r7, [r4, #52]	; 0x34
  90:	bl	0 <open>
  94:	subs	r8, r0, #0
  98:	blt	e0 <coda_bin_product_open+0xe0>
  9c:	mov	r3, r7
  a0:	mov	r2, r7
  a4:	str	r8, [sp]
  a8:	mov	r0, r5
  ac:	str	r5, [sp, #4]
  b0:	ldr	r1, [r4, #8]
  b4:	bl	0 <mmap>
  b8:	cmn	r0, #1
  bc:	mov	r6, r0
  c0:	str	r0, [r4, #48]	; 0x30
  c4:	beq	110 <coda_bin_product_open+0x110>
  c8:	mov	r0, r8
  cc:	bl	0 <close>
  d0:	ldrd	r2, [r4, #8]
  d4:	mov	r0, r5
  d8:	strd	r2, [r4, #40]	; 0x28
  dc:	b	6c <coda_bin_product_open+0x6c>
  e0:	bl	0 <__errno_location>
  e4:	ldr	r4, [r4]
  e8:	ldr	r0, [r0]
  ec:	bl	0 <strerror>
  f0:	mov	r3, r0
  f4:	movw	r1, #0
  f8:	movt	r1, #0
  fc:	mvn	r0, #20
 100:	mov	r2, r4
 104:	bl	0 <coda_set_error>
 108:	mvn	r0, #0
 10c:	b	6c <coda_bin_product_open+0x6c>
 110:	bl	0 <__errno_location>
 114:	ldr	r7, [r4]
 118:	ldr	r0, [r0]
 11c:	bl	0 <strerror>
 120:	mov	r3, r0
 124:	movw	r1, #0
 128:	movt	r1, #0
 12c:	mov	r2, r7
 130:	mvn	r0, #20
 134:	bl	0 <coda_set_error>
 138:	mov	r0, r8
 13c:	str	r5, [r4, #48]	; 0x30
 140:	bl	0 <close>
 144:	mov	r0, r6
 148:	b	6c <coda_bin_product_open+0x6c>
 14c:	.word	0x00000114

00000150 <coda_bin_product_close>:
 150:	ldr	r3, [r0, #52]	; 0x34
 154:	str	r4, [sp, #-8]!
 158:	mov	r4, r0
 15c:	str	lr, [sp, #4]
 160:	cmp	r3, #0
 164:	beq	19c <coda_bin_product_close+0x4c>
 168:	ldr	r0, [r0, #48]	; 0x30
 16c:	cmp	r0, #0
 170:	beq	184 <coda_bin_product_close+0x34>
 174:	ldr	r1, [r4, #8]
 178:	bl	0 <munmap>
 17c:	mov	r3, #0
 180:	str	r3, [r4, #48]	; 0x30
 184:	mov	r3, #0
 188:	str	r3, [r4, #52]	; 0x34
 18c:	ldr	r4, [sp]
 190:	add	sp, sp, #4
 194:	mov	r0, #0
 198:	pop	{pc}		; (ldr pc, [sp], #4)
 19c:	ldr	r0, [r0, #56]	; 0x38
 1a0:	cmp	r0, #0
 1a4:	blt	18c <coda_bin_product_close+0x3c>
 1a8:	bl	0 <close>
 1ac:	mvn	r3, #0
 1b0:	mov	r0, #0
 1b4:	str	r3, [r4, #56]	; 0x38
 1b8:	ldr	r4, [sp]
 1bc:	add	sp, sp, #4
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)

000001c4 <coda_bin_reopen_with_definition>:
 1c4:	cmp	r1, #0
 1c8:	str	r4, [sp, #-8]!
 1cc:	ldr	r3, [r0]
 1d0:	str	lr, [sp, #4]
 1d4:	beq	20c <coda_bin_reopen_with_definition+0x48>
 1d8:	ldr	r2, [r3, #16]
 1dc:	cmp	r2, #1
 1e0:	bne	24c <coda_bin_reopen_with_definition+0x88>
 1e4:	ldr	r2, [r1]
 1e8:	cmp	r2, #1
 1ec:	bne	22c <coda_bin_reopen_with_definition+0x68>
 1f0:	ldr	r2, [r1, #28]
 1f4:	mov	r0, #0
 1f8:	ldr	r4, [sp]
 1fc:	add	sp, sp, #4
 200:	str	r2, [r3, #20]
 204:	str	r1, [r3, #24]
 208:	pop	{pc}		; (ldr pc, [sp], #4)
 20c:	movw	r3, #0
 210:	movt	r3, #0
 214:	movw	r1, #0
 218:	movt	r1, #0
 21c:	movw	r0, #0
 220:	movt	r0, #0
 224:	mov	r2, #288	; 0x120
 228:	bl	0 <__assert_fail>
 22c:	movw	r3, #0
 230:	movt	r3, #0
 234:	movw	r1, #0
 238:	movt	r1, #0
 23c:	movw	r0, #0
 240:	movt	r0, #0
 244:	movw	r2, #290	; 0x122
 248:	bl	0 <__assert_fail>
 24c:	movw	r3, #0
 250:	movt	r3, #0
 254:	movw	r1, #0
 258:	movt	r1, #0
 25c:	movw	r0, #0
 260:	movt	r0, #0
 264:	movw	r2, #289	; 0x121
 268:	bl	0 <__assert_fail>

0000026c <coda_bin_close>:
 26c:	strd	r4, [sp, #-16]!
 270:	mov	r4, r0
 274:	str	r6, [sp, #8]
 278:	str	lr, [sp, #12]
 27c:	bl	150 <coda_bin_product_close>
 280:	subs	r5, r0, #0
 284:	bne	2b4 <coda_bin_close+0x48>
 288:	ldr	r0, [r4]
 28c:	cmp	r0, #0
 290:	beq	298 <coda_bin_close+0x2c>
 294:	bl	0 <free>
 298:	mov	r0, r4
 29c:	bl	0 <free>
 2a0:	mov	r0, r5
 2a4:	ldrd	r4, [sp]
 2a8:	ldr	r6, [sp, #8]
 2ac:	add	sp, sp, #12
 2b0:	pop	{pc}		; (ldr pc, [sp], #4)
 2b4:	mvn	r5, #0
 2b8:	b	2a0 <coda_bin_close+0x34>

000002bc <coda_bin_open>:
 2bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
 2c0:	strd	r6, [sp, #8]
 2c4:	mov	r6, r2
 2c8:	mov	r7, r3
 2cc:	str	r8, [sp, #16]
 2d0:	mov	r8, r0
 2d4:	mov	r0, #64	; 0x40
 2d8:	str	lr, [sp, #20]
 2dc:	sub	sp, sp, #8
 2e0:	bl	0 <malloc>
 2e4:	subs	r4, r0, #0
 2e8:	beq	3a8 <coda_bin_open+0xec>
 2ec:	mov	r3, #0
 2f0:	mov	r2, #1
 2f4:	mov	r0, #0
 2f8:	mov	r1, #0
 2fc:	mvn	r5, #0
 300:	str	r3, [r4]
 304:	strd	r6, [r4, #8]
 308:	strd	r2, [r4, #16]
 30c:	str	r3, [r4, #24]
 310:	str	r3, [r4, #28]
 314:	str	r3, [r4, #32]
 318:	strd	r0, [r4, #40]	; 0x28
 31c:	str	r3, [r4, #48]	; 0x30
 320:	str	r3, [r4, #52]	; 0x34
 324:	str	r5, [r4, #56]	; 0x38
 328:	bl	0 <coda_type_raw_file_singleton>
 32c:	cmp	r0, #0
 330:	str	r0, [r4, #20]
 334:	beq	398 <coda_bin_open+0xdc>
 338:	mov	r0, r8
 33c:	bl	0 <strdup>
 340:	cmp	r0, #0
 344:	str	r0, [r4]
 348:	beq	37c <coda_bin_open+0xc0>
 34c:	mov	r0, r4
 350:	bl	0 <coda_bin_product_open>
 354:	cmp	r0, #0
 358:	bne	398 <coda_bin_open+0xdc>
 35c:	ldr	r3, [sp, #32]
 360:	str	r4, [r3]
 364:	add	sp, sp, #8
 368:	ldrd	r4, [sp]
 36c:	ldrd	r6, [sp, #8]
 370:	ldr	r8, [sp, #16]
 374:	add	sp, sp, #20
 378:	pop	{pc}		; (ldr pc, [sp], #4)
 37c:	movw	r2, #0
 380:	movt	r2, #0
 384:	movw	r1, #0
 388:	movt	r1, #0
 38c:	mov	r3, #268	; 0x10c
 390:	mov	r0, r5
 394:	bl	0 <coda_set_error>
 398:	mov	r0, r4
 39c:	bl	26c <coda_bin_close>
 3a0:	mov	r0, r5
 3a4:	b	364 <coda_bin_open+0xa8>
 3a8:	mov	r0, #241	; 0xf1
 3ac:	movw	r3, #0
 3b0:	movt	r3, #0
 3b4:	movw	r1, #0
 3b8:	movt	r1, #0
 3bc:	mov	r2, #64	; 0x40
 3c0:	str	r0, [sp]
 3c4:	mvn	r0, #0
 3c8:	bl	0 <coda_set_error>
 3cc:	mvn	r0, #0
 3d0:	b	364 <coda_bin_open+0xa8>
