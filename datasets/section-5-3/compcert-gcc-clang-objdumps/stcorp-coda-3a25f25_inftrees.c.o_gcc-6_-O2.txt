
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inftrees.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflate_table>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	sub	sp, sp, #124	; 0x7c
   8:	add	ip, sp, #88	; 0x58
   c:	ldr	fp, [sp, #164]	; 0xa4
  10:	str	r1, [sp, #16]
  14:	str	r3, [sp, #36]	; 0x24
  18:	mov	r1, #0
  1c:	add	r3, sp, #56	; 0x38
  20:	strh	r1, [r3], #2
  24:	cmp	ip, r3
  28:	bne	20 <coda_inflate_table+0x20>
  2c:	cmp	r2, #0
  30:	beq	60 <coda_inflate_table+0x60>
  34:	ldr	r1, [sp, #16]
  38:	mov	lr, r1
  3c:	add	r4, r1, r2, lsl #1
  40:	ldrh	r1, [lr], #2
  44:	add	ip, sp, #120	; 0x78
  48:	cmp	r4, lr
  4c:	add	r1, ip, r1, lsl #1
  50:	ldrh	ip, [r1, #-64]	; 0xffffffc0
  54:	add	ip, ip, #1
  58:	strh	ip, [r1, #-64]	; 0xffffffc0
  5c:	bne	40 <coda_inflate_table+0x40>
  60:	mov	r5, #15
  64:	ldrh	r1, [r3, #-2]!
  68:	cmp	r1, #0
  6c:	bne	bc <coda_inflate_table+0xbc>
  70:	subs	r5, r5, #1
  74:	bne	64 <coda_inflate_table+0x64>
  78:	ldr	ip, [sp, #36]	; 0x24
  7c:	mov	r2, #1
  80:	mov	r1, #64	; 0x40
  84:	ldr	r3, [ip]
  88:	add	r0, r3, #8
  8c:	strh	r5, [r3, #2]
  90:	strb	r1, [r3]
  94:	strb	r2, [r3, #1]
  98:	str	r0, [ip]
  9c:	strb	r1, [r3, #4]
  a0:	strb	r2, [r3, #5]
  a4:	strh	r5, [r3, #6]
  a8:	ldr	r3, [sp, #160]	; 0xa0
  ac:	mov	r0, r5
  b0:	str	r2, [r3]
  b4:	add	sp, sp, #124	; 0x7c
  b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  bc:	ldr	r3, [sp, #160]	; 0xa0
  c0:	ldr	r6, [r3]
  c4:	cmp	r6, r5
  c8:	movcs	r6, r5
  cc:	cmp	r5, #1
  d0:	beq	550 <coda_inflate_table+0x550>
  d4:	ldrh	r4, [sp, #58]	; 0x3a
  d8:	cmp	r4, #0
  dc:	addeq	lr, sp, #58	; 0x3a
  e0:	moveq	r3, lr
  e4:	moveq	r8, #1
  e8:	beq	fc <coda_inflate_table+0xfc>
  ec:	b	560 <coda_inflate_table+0x560>
  f0:	ldrh	r1, [r3, #2]!
  f4:	cmp	r1, #0
  f8:	bne	108 <coda_inflate_table+0x108>
  fc:	add	r8, r8, #1
 100:	cmp	r8, r5
 104:	bne	f0 <coda_inflate_table+0xf0>
 108:	mov	r3, lr
 10c:	add	r7, sp, #86	; 0x56
 110:	mov	ip, r4
 114:	mov	r1, #1
 118:	b	120 <coda_inflate_table+0x120>
 11c:	ldrh	ip, [r3, #2]!
 120:	rsbs	r1, ip, r1, lsl #1
 124:	bmi	254 <coda_inflate_table+0x254>
 128:	cmp	r7, r3
 12c:	bne	11c <coda_inflate_table+0x11c>
 130:	cmp	r1, #0
 134:	beq	150 <coda_inflate_table+0x150>
 138:	subs	r3, r5, #1
 13c:	movne	r3, #1
 140:	cmp	r0, #0
 144:	orreq	r3, r3, #1
 148:	cmp	r3, #0
 14c:	bne	254 <coda_inflate_table+0x254>
 150:	add	r1, sp, #120	; 0x78
 154:	mov	r7, #0
 158:	mov	r3, r7
 15c:	add	ip, sp, #118	; 0x76
 160:	strh	r7, [r1, #-30]!	; 0xffffffe2
 164:	b	16c <coda_inflate_table+0x16c>
 168:	ldrh	r4, [lr, #2]!
 16c:	add	r3, r3, r4
 170:	uxth	r3, r3
 174:	strh	r3, [r1, #2]!
 178:	cmp	ip, r1
 17c:	bne	168 <coda_inflate_table+0x168>
 180:	cmp	r2, #0
 184:	beq	1c8 <coda_inflate_table+0x1c8>
 188:	ldr	r3, [sp, #16]
 18c:	mov	ip, #0
 190:	add	r2, r3, r2, lsl #1
 194:	mov	r1, r3
 198:	ldrh	r3, [r1], #2
 19c:	add	lr, sp, #120	; 0x78
 1a0:	cmp	r3, #0
 1a4:	add	r3, lr, r3, lsl #1
 1a8:	ldrhne	lr, [r3, #-32]	; 0xffffffe0
 1ac:	addne	r4, lr, #1
 1b0:	lslne	lr, lr, #1
 1b4:	strhne	r4, [r3, #-32]	; 0xffffffe0
 1b8:	strhne	ip, [fp, lr]
 1bc:	cmp	r2, r1
 1c0:	add	ip, ip, #1
 1c4:	bne	198 <coda_inflate_table+0x198>
 1c8:	cmp	r8, r6
 1cc:	movcs	r3, r8
 1d0:	movcc	r3, r6
 1d4:	cmp	r0, #0
 1d8:	str	r3, [sp, #8]
 1dc:	beq	280 <coda_inflate_table+0x280>
 1e0:	cmp	r0, #1
 1e4:	beq	260 <coda_inflate_table+0x260>
 1e8:	ldr	r3, [pc, #892]	; 56c <coda_inflate_table+0x56c>
 1ec:	mvn	r2, #0
 1f0:	str	r3, [sp, #52]	; 0x34
 1f4:	add	r3, r3, #64	; 0x40
 1f8:	str	r2, [sp, #12]
 1fc:	str	r3, [sp, #48]	; 0x30
 200:	ldr	r1, [sp, #8]
 204:	mov	r3, #1
 208:	sub	r2, r0, r3
 20c:	lsl	r3, r3, r1
 210:	clz	r2, r2
 214:	lsr	r2, r2, #5
 218:	mov	r1, r3
 21c:	str	r3, [sp, #24]
 220:	mov	r3, r2
 224:	cmp	r1, #852	; 0x354
 228:	movls	r3, #0
 22c:	andhi	r3, r3, #1
 230:	cmp	r3, #0
 234:	ldr	r3, [sp, #36]	; 0x24
 238:	str	r2, [sp, #40]	; 0x28
 23c:	ldr	r3, [r3]
 240:	str	r3, [sp, #32]
 244:	beq	4d4 <coda_inflate_table+0x4d4>
 248:	mov	r0, #1
 24c:	add	sp, sp, #124	; 0x7c
 250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 254:	mvn	r0, #0
 258:	add	sp, sp, #124	; 0x7c
 25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 260:	ldr	r3, [pc, #776]	; 570 <coda_inflate_table+0x570>
 264:	mov	r2, #256	; 0x100
 268:	str	r2, [sp, #12]
 26c:	sub	r2, r3, #2
 270:	add	r3, r3, #62	; 0x3e
 274:	str	r2, [sp, #52]	; 0x34
 278:	str	r3, [sp, #48]	; 0x30
 27c:	b	200 <coda_inflate_table+0x200>
 280:	ldr	r1, [sp, #8]
 284:	mov	r3, #1
 288:	str	r0, [sp, #40]	; 0x28
 28c:	lsl	r3, r3, r1
 290:	str	r3, [sp, #24]
 294:	sub	r3, r3, #1
 298:	str	r3, [sp, #28]
 29c:	ldr	r3, [sp, #36]	; 0x24
 2a0:	str	r0, [sp, #44]	; 0x2c
 2a4:	str	fp, [sp, #48]	; 0x30
 2a8:	ldr	r3, [r3]
 2ac:	str	fp, [sp, #52]	; 0x34
 2b0:	str	r3, [sp, #32]
 2b4:	mov	r3, #19
 2b8:	str	r3, [sp, #12]
 2bc:	ldr	r3, [sp, #32]
 2c0:	mov	ip, #0
 2c4:	ldr	r4, [sp, #8]
 2c8:	mov	r9, ip
 2cc:	mov	r0, r8
 2d0:	mov	sl, #1
 2d4:	str	r3, [sp]
 2d8:	mvn	r3, #0
 2dc:	str	r3, [sp, #20]
 2e0:	ldrh	lr, [fp], #2
 2e4:	ldr	r3, [sp, #12]
 2e8:	uxtb	r6, r0
 2ec:	cmp	r3, lr
 2f0:	movgt	r3, #0
 2f4:	strgt	r3, [sp, #4]
 2f8:	bgt	320 <coda_inflate_table+0x320>
 2fc:	ldrlt	r3, [sp, #52]	; 0x34
 300:	lsllt	lr, lr, #1
 304:	movge	lr, #0
 308:	ldrblt	r3, [r3, lr]
 30c:	movge	r3, #96	; 0x60
 310:	strge	r3, [sp, #4]
 314:	strlt	r3, [sp, #4]
 318:	ldrlt	r3, [sp, #48]	; 0x30
 31c:	ldrhlt	lr, [r3, lr]
 320:	lsl	r2, sl, r4
 324:	lsl	r1, sl, r0
 328:	mvn	r7, #3
 32c:	add	r3, r2, ip, lsr r9
 330:	lsl	r0, r7, r0
 334:	sub	r3, r3, r1
 338:	ldr	r7, [sp]
 33c:	add	r3, r7, r3, lsl #2
 340:	ldr	r7, [sp, #4]
 344:	subs	r2, r2, r1
 348:	strb	r7, [r3]
 34c:	strb	r6, [r3, #1]
 350:	strh	lr, [r3, #2]
 354:	add	r3, r3, r0
 358:	bne	344 <coda_inflate_table+0x344>
 35c:	sub	r3, r8, #1
 360:	lsl	r3, sl, r3
 364:	tst	ip, r3
 368:	beq	378 <coda_inflate_table+0x378>
 36c:	lsr	r3, r3, #1
 370:	tst	ip, r3
 374:	bne	36c <coda_inflate_table+0x36c>
 378:	cmp	r3, #0
 37c:	subne	r2, r3, #1
 380:	andne	ip, ip, r2
 384:	add	r2, sp, #120	; 0x78
 388:	add	r1, r2, r8, lsl #1
 38c:	addne	r3, r3, ip
 390:	ldrh	r2, [r1, #-64]	; 0xffffffc0
 394:	sub	r2, r2, #1
 398:	uxth	r2, r2
 39c:	cmp	r2, #0
 3a0:	strh	r2, [r1, #-64]	; 0xffffffc0
 3a4:	bne	3c0 <coda_inflate_table+0x3c0>
 3a8:	cmp	r8, r5
 3ac:	beq	508 <coda_inflate_table+0x508>
 3b0:	ldrh	r2, [fp]
 3b4:	ldr	r1, [sp, #16]
 3b8:	lsl	r2, r2, #1
 3bc:	ldrh	r8, [r1, r2]
 3c0:	ldr	r2, [sp, #8]
 3c4:	cmp	r8, r2
 3c8:	bls	4cc <coda_inflate_table+0x4cc>
 3cc:	ldr	r2, [sp, #28]
 3d0:	and	ip, r3, r2
 3d4:	ldr	r2, [sp, #20]
 3d8:	cmp	r2, ip
 3dc:	beq	4cc <coda_inflate_table+0x4cc>
 3e0:	ldr	r2, [sp, #8]
 3e4:	cmp	r9, #0
 3e8:	moveq	r9, r2
 3ec:	mov	r1, #4
 3f0:	ldr	r2, [sp]
 3f4:	cmp	r8, r5
 3f8:	add	r2, r2, r1, lsl r4
 3fc:	sub	r4, r8, r9
 400:	str	r2, [sp]
 404:	mov	r0, r4
 408:	lsl	r2, sl, r4
 40c:	bcs	45c <coda_inflate_table+0x45c>
 410:	add	r1, sp, #120	; 0x78
 414:	add	r1, r1, r8, lsl #1
 418:	ldrh	r1, [r1, #-64]	; 0xffffffc0
 41c:	sub	r2, r2, r1
 420:	cmp	r2, #0
 424:	addgt	r1, r9, r4
 428:	addgt	lr, sp, #56	; 0x38
 42c:	addgt	r1, lr, r1, lsl #1
 430:	bgt	448 <coda_inflate_table+0x448>
 434:	b	45c <coda_inflate_table+0x45c>
 438:	ldrh	lr, [r1, #2]!
 43c:	sub	r2, r2, lr
 440:	cmp	r2, #0
 444:	ble	45c <coda_inflate_table+0x45c>
 448:	add	r4, r4, #1
 44c:	add	lr, r9, r4
 450:	cmp	lr, r5
 454:	lsl	r2, r2, #1
 458:	bcc	438 <coda_inflate_table+0x438>
 45c:	ldr	r2, [sp, #24]
 460:	add	r2, r2, sl, lsl r4
 464:	mov	r1, r2
 468:	str	r2, [sp, #24]
 46c:	ldr	r2, [sp, #40]	; 0x28
 470:	cmp	r1, #852	; 0x354
 474:	movls	r2, #0
 478:	andhi	r2, r2, #1
 47c:	cmp	r2, #0
 480:	bne	248 <coda_inflate_table+0x248>
 484:	ldr	r2, [sp, #44]	; 0x2c
 488:	cmp	r1, #592	; 0x250
 48c:	movls	r2, #0
 490:	andhi	r2, r2, #1
 494:	cmp	r2, #0
 498:	bne	248 <coda_inflate_table+0x248>
 49c:	ldr	lr, [sp, #32]
 4a0:	ldr	r1, [sp]
 4a4:	str	ip, [sp, #20]
 4a8:	sub	r2, r1, lr
 4ac:	add	r1, lr, ip, lsl #2
 4b0:	asr	r2, r2, #2
 4b4:	strb	r4, [lr, ip, lsl #2]
 4b8:	strh	r2, [r1, #2]
 4bc:	ldrb	r2, [sp, #8]
 4c0:	strb	r2, [r1, #1]
 4c4:	mov	ip, r3
 4c8:	b	2e0 <coda_inflate_table+0x2e0>
 4cc:	sub	r0, r8, r9
 4d0:	b	4c4 <coda_inflate_table+0x4c4>
 4d4:	ldr	r2, [sp, #24]
 4d8:	sub	r3, r0, #2
 4dc:	clz	r3, r3
 4e0:	lsr	r3, r3, #5
 4e4:	str	r3, [sp, #44]	; 0x2c
 4e8:	cmp	r2, #592	; 0x250
 4ec:	movls	r3, #0
 4f0:	andhi	r3, r3, #1
 4f4:	cmp	r3, #0
 4f8:	sub	r3, r2, #1
 4fc:	str	r3, [sp, #28]
 500:	bne	248 <coda_inflate_table+0x248>
 504:	b	2bc <coda_inflate_table+0x2bc>
 508:	cmp	r3, #0
 50c:	beq	528 <coda_inflate_table+0x528>
 510:	ldr	ip, [sp]
 514:	mov	r0, #64	; 0x40
 518:	add	r1, ip, r3, lsl #2
 51c:	strb	r0, [ip, r3, lsl #2]
 520:	strb	r6, [r1, #1]
 524:	strh	r2, [r1, #2]
 528:	ldr	r2, [sp, #24]
 52c:	ldr	r3, [sp, #32]
 530:	mov	r0, #0
 534:	add	r3, r3, r2, lsl #2
 538:	ldr	r2, [sp, #36]	; 0x24
 53c:	str	r3, [r2]
 540:	ldr	r3, [sp, #160]	; 0xa0
 544:	ldr	r2, [sp, #8]
 548:	str	r2, [r3]
 54c:	b	b4 <coda_inflate_table+0xb4>
 550:	add	lr, sp, #120	; 0x78
 554:	mov	r8, r5
 558:	ldrh	r4, [lr, #-62]!	; 0xffffffc2
 55c:	b	108 <coda_inflate_table+0x108>
 560:	mov	r8, #1
 564:	add	lr, sp, #58	; 0x3a
 568:	b	108 <coda_inflate_table+0x108>
 56c:	.word	0x00000000
 570:	.word	0xfffffe80
